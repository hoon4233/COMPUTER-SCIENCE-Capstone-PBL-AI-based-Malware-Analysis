pop
and
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
and
add
add
add
nop
sar
push
push
cmp
add
mov
stc
hlt
jae
push
outs
mov
push
xchg
jecxz
shr
rcl
sbb
mov
stos
(bad)
adc
jp
ror
sub
jnp
inc
mov
fcomp
aas
test
inc
cmp
pop
repnz
mov
das
xchg
adc
out
inc
pop
xchg
popa
arpl
in
movs
and
push
sbb
adc
(bad)
in
fadd
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
je
imul
add
add
add
add
and
add
add
add
add
add
inc
push
dec
inc
add
add
add
movs
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
lds
add
pop
add
add
add
add
add
add
add
lods
add
add
scas
add
add
add
in
add
iret
mov
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
sbb
add
add
add
add
add
add
add
add
repz
add
fld
add
add
add
loope
add
add
add
add
add
jnp
aaa
aaa
xor
cmp
cmp
sub
sub
sub
fs
popa
xor
xor
jge
cmp
outs
fs
gs
aaa
xor
inc
cmp
xor
inc
cmp
xor
aaa
xor
inc
xor
xor
xor
inc
inc
xor
inc
xor
add
popa
jb
inc
jae
gs
bound
dec
imul
push
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
dec
imul
push
gs
jne
arpl
cs
outs
outs
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
or
int
xor
xchg
xchg
dec
aam
push
dec
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
call
pusha
fnstcw
popa
xchg
cs
sub
sbb
es
xchg
(bad)
fnsave
mov
ins
ins
add
and
cmps
xor
int3
shl
dec
dec
iret
add
and
and
and
fcos
mov
xchg
out
aaa
ror
or
mov
cmp
out
imul
add
lods
sub
cmps
out
and
ss
mov
push
and
iret
sub
es
sub
add
cmp
into
ins
mov
mov
mov
mov
sub
in
not
imul
push
pop
dec
mov
cwde
test
ins
adc
dec
lods
xor
or
cmp
sar
int3
ss
cmp
pusha
sub
ins
loope
cmp
arpl
xor
pushf
inc
xor
pop
fsubrp
adc
pop
cmp
or
add
cli
inc
sbb
sbb
mov
or
mov
outs
mov
ja
scas
push
loop
mov
punpcklwd
test
rcl
inc
imul
mov
jg
aad
mov
jo
fild
sub
jle
xor
sub
dec
ins
jmp
loope
out
or
pop
push
cmc
in
sbb
sub
ret
cmps
aaa
inc
fscale
lods
ret
rol
mov
mov
out
push
into
xchg
iret
rcl
sti
retf
out
retf
in
mov
rcr
fcmovu
repnz
ror
push
jl
mov
push
dec
clc
pop
pop
pop
adc
fdiv
nop
sbb
push
jmp
sahf
(bad)
xor
pshufw
xor
fldln2
adc
push
enter
std
or
(bad)
out
gs
(bad)
sub
jp
test
(bad)
pop
adc
mul
shl
mov
mov
addr16
and
outs
inc
out
int3
dec
mov
data16
repnz
aad
push
repz
inc
repnz
les
int3
aad
xchg
push
mov
cmc
pushf
mov
pushf
cmp
mov
loopne
test
and
or
(bad)
and
enter
xor
lods
jge
mov
sahf
inc
enter
jge
adc
xchg
out
leave
and
jle
ja
pop
mov
xchg
inc
inc
fs
inc
mov
xor
popf
inc
pop
mov
test
loop
xor
mov
ror
ds
into
adc
adc
sar
pop
pop
or
xchg
into
xor
xor
out
pop
jecxz
jae
jmp
repz
push
jne
jmp
cdq
push
cmps
mov
lahf
cmps
arpl
rcr
movs
mov
ds
push
cmp
push
add
pop
ds
rcr
push
std
lods
retf
jp
fwait
jns
jne
cs
ins
cdq
push
lods
push
mov
(bad)
push
and
out
(bad)
(bad)
addr16
pop
imul
ret
jbe
sbb
mov
loope
or
ins
(bad)
sub
cmps
sbb
rcl
xor
ss
out
xchg
cmp
ins
dec
inc
push
out
retf
sar
mov
arpl
inc
inc
add
enter
aam
pop
fwait
jnp
adc
add
outs
mov
xchg
rcl
repnz
js
stc
ror
jmp
xchg
xchg
sbb
push
shl
add
shr
pop
sbb
hlt
and
sub
aad
addr16
push
repnz
lahf
js
sbb
xor
xchg
repnz
mov
shl
nop
ins
in
out
(bad)
stc
mov
xchg
inc
mov
fwait
test
sbb
fs
sub
adc
loopne
and
mov
sub
rcr
mov
int
pop
aas
(bad)
fstp
ds
and
xchg
icebp
int
mov
pop
add
sub
pop
(bad)
mov
cmps
mov
push
and
jle
sbb
mov
enter
out
or
cs
mov
fwait
xchg
and
or
(bad)
adc
xchg
add
or
nop
ins
dec
mov
int
rcl
mov
push
out
push
and
das
pop
outs
mov
popf
repnz
cmps
cmp
mov
jge
lods
mov
mov
and
addr16
jmp
in
gs
rcl
mov
shr
mov
shr
and
imul
cmp
mov
sahf
xchg
push
dec
mov
push
lock
inc
xchg
pop
xor
cmp
cmp
mov
retf
test
out
xchg
adc
xor
dec
push
lods
sbb
inc
cld
or
jbe
cmp
mov
ret
je
and
xchg
lods
or
xchg
and
sub
and
std
sub
retf
or
adc
fidivr
pop
adc
out
push
in
jns
mov
push
mov
mov
fidivr
mov
int3
mov
cmp
adc
sbb
cmp
jl
lds
es
or
shl
mov
repz
lds
imul
mov
imul
mov
pop
sub
xchg
fcomp
dec
es
dec
stc
sub
or
fstp
add
not
push
mov
push
sub
xchg
sub
call
ret
pushf
test
int3
mov
add
inc
es
mov
out
pushf
jl
xor
lock
xor
and
lods
jne
sbb
cmp
(bad)
clc
fld
dec
or
xchg
lahf
and
dec
mov
cmp
test
xor
or
jmp
ins
rol
out
leave
retf
inc
outs
push
xchg
sub
bound
jg
test
test
neg
inc
cwde
pop
retf
fbld
adc
adc
js
and
mov
jae
push
dec
sbb
mov
push
mov
dec
sub
cmps
push
mov
adc
cs
into
jmp
xchg
jle
add
xchg
xchg
push
push
jge
pop
in
retf
sub
or
jecxz
and
jne
js
lahf
loope
mov
fimul
jae
js
mov
jns
outs
sub
xor
sbb
inc
ja
daa
add
out
adc
rcr
xchg
jbe
mov
inc
arpl
pop
and
clc
out
sub
or
jge
(bad)
loope
repnz
jbe
push
mov
movs
xlat
cmc
add
lods
or
push
loope
idiv
mov
push
in
jle
mov
mov
xchg
add
xor
mov
fidivr
push
addr16
inc
push
sub
xchg
xor
in
lods
sub
dec
sbb
mov
aas
daa
std
mov
sub
xchg
or
lds
hlt
mov
fcomip
mov
jp
icebp
mov
fwait
xchg
enter
dec
add
inc
aad
in
xor
jns
movs
dec
cli
or
adc
push
pop
pop
movs
push
int3
jmp
fist
cmps
cmps
scas
push
jp
fwait
(bad)
sahf
push
add
addr16
push
enter
(bad)
inc
mov
push
mov
daa
mov
push
stos
pop
adc
sub
stos
adc
or
imul
pop
out
mov
jmp
ret
out
stos
ficom
xchg
movs
std
ds
repnz
jl
sbb
nop
popa
sbb
dec
data16
mov
call
pop
movs
pop
clc
mov
ret
iret
ds
jbe
cmp
movs
adc
xchg
cmp
xchg
pusha
xchg
pop
repz
fucomip
push
stos
and
mov
mov
(bad)
not
fdivr
fsub
sub
test
das
imul
inc
cmps
or
push
push
mov
ret
leave
add
mov
push
lods
cmc
jmp
arpl
(bad)
cs
adc
out
xor
retf
push
lahf
arpl
outs
test
shl
mov
lock
push
icebp
and
sub
scas
or
and
scas
shl
xor
and
dec
ret
test
into
imul
jge
sbb
sar
dec
jns
mov
nop
inc
dec
dec
lahf
mov
imul
in
sub
jmp
bound
mov
int
retf
jno
sub
xchg
adc
out
mov
repnz
stos
mov
pop
std
call
push
and
sbb
mov
ja
lods
sahf
cmc
adc
lods
jbe
cwde
scas
pop
pusha
cmp
sahf
gs
adc
push
shl
adc
fadd
pushf
add
mov
xchg
or
(bad)
sahf
jo
ret
sbb
aas
mov
and
jmp
leave
push
cmp
sub
out
loopne
ror
mov
mov
push
or
push
sub
and
repnz
je
pop
dec
lahf
test
addr16
out
shl
inc
test
test
and
je
cmp
movs
inc
les
xchg
sub
jg
test
fisubr
inc
clc
leave
clc
loopne
xchg
cmps
sub
addr16
jne
cmps
dec
mov
lea
dec
add
or
inc
dec
pop
xor
xor
dec
adc
jo
pop
jecxz
adc
ret
jae
mov
pop
pop
adc
cmp
and
loop
in
arpl
jmp
iret
or
fdiv
lds
cwde
or
xchg
stos
in
retf
jb
int
xlat
xchg
loope
or
and
imul
(bad)
mov
push
fst
fsub
add
lods
dec
and
mov
aad
jmp
push
(bad)
dec
mov
mov
dec
loop
pop
rol
sub
loope
stos
fadd
mov
adc
loope
pop
cmc
cmp
pushw
and
leave
jnp
sbb
cdq
sbb
sbb
test
pop
rcl
or
inc
cmp
add
jo
cmp
jp
test
pop
js
xor
mov
in
dec
mov
loop
push
outs
(bad)
pop
inc
aam
jae
shl
cld
jmp
and
push
jle
jmp
push
sbb
dec
ret
mov
xchg
mov
mov
mov
cmp
cmp
(bad)
jmp
je
pop
push
and
hlt
loope
mov
dec
sahf
ins
rol
fdivr
xor
aam
push
push
in
in
xchg
mov
test
bound
popa
pop
dec
xchg
iret
dec
dec
and
push
push
imul
jnp
sub
xor
and
cmp
xchg
xchg
ds
arpl
push
mov
jae
and
cmp
aad
mov
sbb
push
out
fwait
shl
cmp
es
dec
test
adc
push
xchg
lock
pop
in
jmp
lea
inc
mov
pop
push
mov
xchg
and
cmps
scas
push
jmp
fild
stos
fld
mov
jge
inc
pusha
das
enter
fsub
ss
dec
repz
repz
xchg
jl
cmps
xor
cmp
mov
fist
mov
fs
out
jg
and
inc
mov
sbb
stos
popa
in
xchg
dec
push
mov
int
dec
fdiv
cmp
inc
cmp
add
xor
inc
cmp
in
fiadd
or
push
mov
cmps
popa
(bad)
push
(bad)
jo
pop
pop
ss
dec
arpl
mov
sbb
call
out
lods
jecxz
ins
sub
arpl
inc
xchg
and
lock
inc
iret
push
lahf
or
dec
loop
movs
addr16
adc
or
mov
scas
jbe
cwde
enter
sbb
sar
inc
inc
pop
pusha
retf
loopne
rcr
or
out
fstp
scas
nop
int
stos
mov
ss
icebp
clc
lahf
enter
push
cmp
or
jl
xor
movs
repnz
add
cld
imul
ja
inc
xchg
ficomp
and
inc
lock
jle
xor
inc
mov
mov
add
in
sbb
fild
mov
pushf
cli
adc
pop
(bad)
cmp
push
mov
mov
retf
(bad)
mov
iret
imul
aad
mov
pop
daa
loopne
pop
fistp
mov
mov
fdivr
cld
sahf
dec
cmp
add
dec
jle
fst
test
fstp
mov
jmp
adc
repnz
fwait
xor
out
imul
adc
movs
leave
jne
popf
add
ror
stos
mov
mov
pop
(bad)
mov
cmp
inc
test
dec
mov
adc
cmps
out
mov
jne
sahf
mov
mov
popa
inc
and
push
fistp
stc
ja
sub
inc
cmp
jl
test
aas
call
pusha
mov
mov
(bad)
or
test
mov
out
jne
add
aaa
in
pop
or
imul
cmp
jle
hlt
movs
popa
pop
jb
inc
mov
rcl
in
inc
cmp
sbb
jecxz
add
repz
adc
inc
jne
movs
clc
xchg
sub
pop
fwait
push
ret
pop
(bad)
fld
dec
push
data16
pop
cmp
and
xchg
push
mov
(bad)
repnz
and
scas
fcomi
and
xchg
and
test
dec
add
cmp
fsubr
daa
add
adc
xor
jecxz
fldcw
adc
mov
jae
sub
cmp
shl
add
movs
push
pop
(bad)
out
sub
js
inc
inc
in
add
mov
shr
xlat
sbb
jno
fldenv
aaa
dec
ss
mov
mov
frstor
rcr
out
call
popa
test
cli
xchg
pusha
punpcklbw
add
iret
stos
push
in
(bad)
inc
push
push
or
and
sbb
cmp
inc
hlt
pop
xchg
inc
imul
mov
ret
out
retf
xor
inc
xchg
das
mov
(bad)
add
test
fldenv
add
mov
sbb
adc
mov
sub
mov
mov
jb
fwait
mov
and
cmps
fs
ficomp
jns
inc
neg
stos
mov
xor
in
inc
sub
mul
push
pop
xchg
loop
ret
push
(bad)
cwde
lds
test
mov
and
imul
xchg
xchg
mov
pop
cs
jg
ja
mov
adc
pop
mov
mov
pop
pop
jbe
leave
mov
mov
test
aaa
push
retf
je
(bad)
mov
(bad)
adc
ss
hlt
out
imul
xor
xor
or
(bad)
mov
pop
test
out
icebp
cmp
mov
and
shr
xchg
ins
arpl
les
data16
popa
push
shr
and
mov
into
inc
mov
out
add
add
cmp
push
(bad)
push
gs
imul
jmp
hlt
push
or
repnz
add
jp
clc
push
jmp
mov
rol
popf
imul
daa
je
mov
adc
out
loope
ror
push
mov
icebp
movs
lahf
mov
add
and
pushf
mov
push
vmovaps
shld
push
xchg
fsubr
sbb
xchg
test
es
jl
xchg
xor
xor
xchg
cmp
fwait
mov
xchg
mov
pop
int
dec
cwde
mov
aas
xor
outs
and
adc
sbb
jo
test
out
dec
adc
jne
jne
test
cmp
fisttp
xchg
xor
ss
push
dec
dec
and
ja
imul
xlat
fistp
repz
inc
mov
fdiv
xor
mov
sbb
fld
pushf
push
mov
sub
push
(bad)
dec
xlat
retf
jne
iret
stc
popf
sbb
pop
cmps
mov
xor
sub
inc
or
test
stos
pop
aaa
jbe
popf
adc
dec
out
aaa
stos
mov
(bad)
out
sbb
stos
pop
adc
jg
pop
pop
or
sar
xor
push
pop
jo
fldenv
fsub
sub
sbb
pusha
cmp
inc
or
mov
paddsw
and
add
shr
call
pop
out
add
inc
pop
mov
mov
cld
lock
fisttp
call
es
push
jle
pop
jge
out
mov
push
and
xchg
xchg
pop
fadd
pushf
adc
ret
lahf
push
inc
(bad)
in
lods
pop
and
add
jl
push
xor
pop
mov
cmps
icebp
retf
sbb
dec
add
ins
add
jnp
out
ins
aad
(bad)
pop
sahf
and
popf
xchg
mov
popa
in
mov
jns
(bad)
stos
pop
int
push
(bad)
out
outs
pop
ror
movs
push
xlat
cli
push
sub
scas
sub
mov
popa
pop
loop
jmp
cmp
in
ret
std
push
sbb
and
lea
scas
inc
lods
mov
pop
mov
mov
sbb
pop
push
or
or
inc
mov
je
mov
push
(bad)
push
jo
fwait
jb
dec
jl
out
mov
retf
push
cld
movq
jmp
sbb
or
mov
mov
cmp
iret
in
xchg
test
stc
mov
xchg
cmps
popf
dec
neg
xchg
jmp
push
mov
xchg
iret
inc
(bad)
int
mov
scas
ror
imul
push
fidivr
popa
pushf
jp
mov
mov
scas
lock
push
sbb
imul
or
dec
cmp
not
mov
enter
mov
dec
fwait
jmp
pop
dec
xor
call
mov
ret
or
push
jmp
inc
sti
mov
mov
jl
xor
pop
sti
xchg
loope
(bad)
cmp
popf
rol
in
pusha
add
lahf
jno
icebp
and
adc
and
retf
add
mov
test
mov
inc
mov
pop
mov
adc
(bad)
and
dec
adc
push
inc
adc
loop
push
mov
add
imul
stos
icebp
movs
jbe
je
inc
mov
imul
pop
xchg
lahf
stos
fiadd
adc
pop
addr16
cmp
jb
mov
leave
inc
ret
pushf
inc
ret
ret
xchg
sub
jnp
push
cmp
jno
jle
mul
inc
sub
and
(bad)
xor
add
pop
cmp
pushf
adc
retf
clc
movs
leave
cli
popf
rcr
fstp
push
mov
stos
lods
add
loopne
or
imul
cmp
fs
dec
in
jns
xor
mov
lods
xchg
xor
pop
enter
outs
sbb
add
cmp
int
xchg
jp
or
mov
xchg
jl
pop
xchg
jg
xchg
cmp
push
and
out
and
fs
jo
cs
repnz
test
sub
dec
rcpps
push
xchg
fwait
cdq
repnz
test
sbb
adc
xlat
(bad)
pop
outs
rcl
mov
inc
sbb
sub
xchg
fistp
je
cmps
mov
push
jno
jne
xchg
pop
out
(bad)
unpckhps
imul
xor
shr
cmp
jmp
lahf
adc
inc
jg
mov
sahf
pop
loop
fnstcw
pop
add
fs
jl
and
push
jmp
mov
test
mov
pop
pop
jo
mov
pop
pusha
mov
or
jge
ret
mov
xchg
cmps
call
fnstcw
dec
push
rcl
mov
mov
fisttp
call
out
jae
leave
adc
lea
clc
enter
inc
call
pop
aam
xchg
(bad)
cmc
(bad)
std
mov
int
and
aas
xor
stos
bound
cmp
push
inc
or
mov
push
push
jg
lods
enter
int3
mov
fidiv
jp
out
jae
imul
pop
mov
jl
jbe
ret
cmp
mov
mov
rcl
dec
jne
into
sahf
icebp
mov
loop
mov
mov
in
ins
aad
mov
leave
pop
int3
jne
ja
sub
jne
addr16
shr
les
jmp
mov
push
inc
test
lahf
jo
ficom
push
clc
mov
dec
in
push
shl
adc
into
jmp
and
lods
add
rcr
scas
cmp
adc
or
outs
xlat
test
sbb
ss
jns
test
ret
fs
jmp
inc
adc
iret
scas
mov
sbb
mov
mov
sub
je
dec
in
daa
jp
cwde
out
dec
popa
or
test
add
xlat
(bad)
pop
jbe
outs
add
test
dec
sbb
je
iret
mov
test
jns
jnp
sbb
xor
inc
cs
push
mov
sbb
outs
out
cwde
mov
retf
in
sbb
mov
inc
(bad)
dec
nop
xor
sar
mov
jl
pop
loopne
dec
imul
idiv
jmp
and
test
mov
shl
popa
mov
test
jno
nop
mov
stos
inc
add
mov
pusha
dec
or
mov
inc
ret
in
xchg
or
pop
sbb
xchg
mov
ins
mov
ins
sbb
imul
xor
leave
cmp
adc
pop
pop
push
inc
rcl
mov
inc
inc
fidiv
cvtps2pi
inc
fnstenv
retf
mov
adc
iret
ss
mov
sbb
pop
fisub
inc
aad
mov
lods
ror
push
and
enter
(bad)
pop
and
rol
test
and
adc
add
call
bswap
adc
xchg
mov
xchg
cmp
mov
ror
sbb
sbb
(bad)
sahf
dec
ins
das
pop
and
xchg
jl
inc
mov
clc
pop
(bad)
test
sahf
lods
inc
inc
push
shl
sbb
mov
retf
fistp
gs
outs
cmp
stos
ficom
pusha
lds
jns
fild
mov
rcl
sbb
pusha
test
test
les
push
mov
xor
dec
stos
xchg
add
in
cli
inc
fld
loop
dec
xor
lods
inc
push
mov
aam
jb
pop
lods
test
jmp
pushf
jnp
dec
jb
ja
int3
retf
adc
xchg
lods
not
pop
xlat
cld
btc
ja
pop
int
std
push
adc
shr
sti
stos
sub
call
test
lods
(bad)
pop
mov
das
popf
lock
push
push
add
push
das
push
cmp
pop
rcl
retf
xchg
lock
cmp
stc
and
inc
dec
and
jp
js
lea
daa
dec
sbb
leave
pop
icebp
fldcw
and
(bad)
bound
jbe
jns
arpl
mov
inc
mov
push
stos
jne
pushf
mov
in
(bad)
jge
jmp
in
mov
sub
mov
outs
nop
and
(bad)
mov
push
dec
(bad)
out
jbe
mov
jnp
push
or
into
jbe
adc
sub
mov
xor
shl
pop
mov
js
add
xor
pop
pop
pop
stos
jp
ret
cmps
adc
test
inc
and
fst
aas
push
sub
lock
or
imul
fwait
jge
(bad)
in
xchg
enter
shl
stc
jb
jbe
rol
retf
xor
stos
jne
jo
mov
out
call
fmul
arpl
scas
repz
cmp
(bad)
mov
push
fnstsw
push
adc
pop
mov
popw
test
dec
retf
mov
pop
cmp
mov
add
loop
loopne
in
rcr
push
sbb
ds
fs
sub
sti
in
push
call
push
push
jb
out
jg
xchg
xchg
mov
and
out
mov
cmps
ins
fisubr
and
enter
cmp
jo
or
push
ss
fist
adc
mov
dec
mov
lods
rcl
les
add
mov
push
dec
(bad)
mov
pushf
lods
ss
dec
push
data16
inc
cmc
pop
ror
in
leave
jmp
es
adc
adc
bound
mov
xor
and
pop
fs
enter
sbb
xchg
clc
mov
push
ins
(bad)
jnp
movs
ins
mov
add
xchg
(bad)
push
imul
pop
cmp
test
pop
dec
or
(bad)
ja
loop
sbb
or
add
rcr
outs
imul
cs
ret
xchg
ficom
rcl
mov
mov
dec
jl
repnz
cmps
inc
test
bound
push
mov
lods
mov
stc
fild
hlt
sbb
mov
outs
add
dec
test
mov
xchg
scas
jae
sbb
lea
xchg
out
loope
dec
nop
(bad)
dec
(bad)
push
xor
mov
out
pop
jge
out
fnstenv
fimul
(bad)
cmp
popf
jmp
pop
(bad)
cmp
mov
pop
and
mov
inc
adc
or
inc
ss
adc
rcl
add
cmp
test
cmp
mov
sbb
into
sbb
mov
adc
out
add
push
jmp
mov
jp
cmp
mov
xor
and
stos
imul
neg
jecxz
cmp
out
data16
mov
cmp
adc
stos
fsub
in
lods
dec
mov
in
movs
mov
inc
add
or
xor
inc
jmp
xchg
in
test
cmps
push
cmp
hlt
xor
jb
mov
movs
inc
repnz
jb
push
inc
aaa
shl
ins
jecxz
pop
out
jecxz
fldenv
add
lods
stos
and
paddq
dec
mov
cmps
int3
fist
push
fcom
popa
enter
call
jbe
retf
mov
push
inc
jns
mov
mov
ins
push
stos
retf
sbb
push
aas
jl
into
add
jo
xchg
mov
mov
outs
ins
cs
mov
rcl
loope
mov
fbstp
sub
retf
arpl
add
push
mov
repnz
lock
ins
popf
mov
shl
mov
mov
bound
xchg
jmp
fdivp
push
lods
xor
push
mov
es
retf
inc
icebp
ret
dec
or
dec
xchg
dec
xchg
das
std
cmp
retf
test
addr16
add
cli
or
dec
and
adc
sbb
movs
inc
jge
jae
jno
bound
ja
xor
pop
es
cmp
sbb
movs
inc
jo
leave
test
pop
in
(bad)
push
dec
mov
jb
outs
je
in
fisttp
sbb
xchg
mov
cdq
cli
mov
push
and
push
sub
sbb
ret
(bad)
test
ss
loope
(bad)
hlt
push
add
or
jnp
into
loope
sub
pop
fs
jo
jl
mov
sti
dec
sbb
lea
fdivr
inc
pushf
in
mov
scas
fwait
test
loopne
loopne
jg
stc
inc
int
push
mov
mov
and
inc
dec
das
(bad)
int3
loope
jo
mov
dec
jo
fldenv
sub
jno
(bad)
xchg
sub
mov
add
sbb
icebp
inc
or
lock
jnp
inc
out
xor
lds
repnz
pushf
scas
inc
mov
loopne
mov
jge
iret
jbe
push
xchg
das
cmp
outs
mov
dec
(bad)
cli
cmp
cmps
outs
push
out
adc
lock
rcl
dec
cmp
inc
xchg
ins
retf
fidiv
mov
(bad)
call
dec
dec
and
mov
sbb
ds
cmc
and
in
out
cwde
dec
xchg
lods
pop
push
aam
std
and
xchg
jno
nop
inc
popa
movs
cs
mov
shl
(bad)
mov
pop
adc
xchg
repnz
nop
pop
pop
mov
mov
pop
sub
sub
add
ds
add
jmp
sub
out
pop
dec
inc
pop
jp
pop
iret
movs
(bad)
cdq
mov
test
int3
fld
cmc
and
sub
mov
mul
push
test
xchg
xor
pop
xchg
ss
sti
xchg
mov
jg
stos
and
jne
xor
ins
sahf
xchg
jbe
and
pop
mov
cmp
call
test
stos
adc
dec
hlt
out
push
and
mov
or
xor
in
(bad)
rcr
call
gs
test
fist
mov
test
into
icebp
and
or
loope
sar
fwait
and
sbb
mov
ret
xchg
js
ror
test
push
iret
mov
dec
ins
sub
js
movs
add
jp
push
push
or
js
add
add
ficom
add
mov
pop
pop
mov
sti
ins
mov
inc
bound
mov
sbb
add
popa
push
addr16
(bad)
int
sbb
int
retf
jmp
loopne
jp
in
lods
xchg
pop
sbb
jbe
mov
adc
dec
xchg
repz
stc
pop
xor
lods
mov
(bad)
rcr
test
sahf
aam
movups
pop
enter
imul
or
xchg
stos
adc
sbb
test
(bad)
jmp
mov
movs
jne
mov
data16
mov
or
ret
pushf
inc
out
push
ss
mov
mov
xlat
xchg
rol
add
scas
mov
cwde
or
mov
cmp
adc
and
cdq
out
sub
es
(bad)
and
das
imul
cmps
sub
ins
push
xor
mov
int
jno
cmps
push
dec
xchg
sbb
xchg
stc
imul
push
jmp
and
rcr
mov
nop
lahf
add
push
push
js
or
push
les
and
ds
xor
loopne
mov
pop
push
inc
mov
stos
outs
inc
sbb
sub
in
std
(bad)
adc
ret
add
je
out
arpl
mov
pop
(bad)
in
jl
(bad)
clc
and
jmp
fild
lea
adc
or
(bad)
out
repnz
ret
jne
add
inc
retf
push
jmp
jns
inc
cmp
xchg
call
mov
js
dec
fbld
pop
jae
jp
cmp
in
push
clc
iret
xchg
ins
scas
stc
ins
ds
cwde
or
xchg
xor
ficomp
cwde
xchg
fld
mov
push
in
cmps
pop
out
xor
or
adc
mov
sbb
push
mov
push
sub
jnp
pop
push
lds
inc
iret
push
not
adc
jmp
cs
mov
rol
add
div
mov
mov
loop
mov
lea
mov
in
scas
js
dec
mov
dec
cld
rcl
cmp
mov
sub
cs
push
cwde
ret
fstp
push
pusha
rcr
sub
popa
iret
imul
xchg
lods
sub
cld
out
in
sub
repnz
add
ret
popf
xchg
adc
mov
test
pop
mov
mov
mov
out
retf
push
mov
js
pop
adc
or
jmp
hlt
pusha
loope
inc
pop
int3
aaa
cmp
(bad)
dec
mov
add
fdivr
sub
retf
inc
push
jo
daa
mov
movs
in
sub
mov
aam
lahf
inc
cmp
push
push
sub
ja
lods
fadd
xor
sub
lock
jbe
int
and
mov
nop
and
adc
jb
push
push
xchg
mul
push
in
sub
jbe
push
sbb
jmp
mov
push
mov
ins
dec
inc
push
and
lods
stos
(bad)
repz
xchg
add
aam
dec
adc
jecxz
pop
add
(bad)
fistp
das
jns
pushf
jbe
adc
mov
xor
or
xchg
loopne
mul
js
add
fisubr
mov
pop
xchg
test
dec
mov
push
jmp
xlat
push
test
mov
sub
sbb
push
icebp
and
add
ja
add
jno
aad
addr16
jp
adc
out
out
scas
ret
or
xchg
sbb
and
in
arpl
and
xchg
jno
mov
imul
mov
movs
xlat
(bad)
cmc
lahf
sub
cmp
dec
jge
mov
leave
xchg
(bad)
dec
fist
add
dec
cdq
fwait
(bad)
test
jnp
out
aad
in
pop
sbb
fild
sbb
(bad)
mov
data16
mov
dec
fidiv
lods
je
mov
fld
mov
inc
mov
sub
jo
and
mov
or
arpl
std
stos
popa
leave
fsin
int3
sub
js
retf
test
adc
test
test
cmp
mov
in
jmp
test
adc
imul
inc
neg
sbb
daa
std
mov
sbb
jle
sbb
fimul
mul
dec
xchg
sub
or
and
mov
push
push
fadd
rcl
sbb
cmc
cdq
add
sar
iret
int3
xlat
hlt
in
loope
push
push
(bad)
out
into
xor
pop
or
adc
jmp
bswap
iret
sbb
imul
shr
xchg
jmp
push
mov
scas
mov
in
(bad)
cld
rol
jns
pop
jmp
test
sub
pop
jmp
mov
ret
push
and
icebp
outs
dec
ret
inc
aam
ja
push
or
mov
test
sub
pop
push
adc
push
(bad)
out
or
sbb
mov
(bad)
bswap
xor
leave
jno
or
lods
push
push
sbb
das
jno
jp
push
xchg
xadd
aad
push
nop
xor
pushf
cdq
mov
das
iret
outs
push
mov
adc
clc
xchg
(bad)
ss
sub
or
xor
pop
mov
xchg
jne
mov
or
loop
xlat
out
pushf
cdq
xor
xchg
call
sub
(bad)
ins
jnp
movs
dec
inc
jp
jg
and
data16
daa
test
push
retf
inc
or
inc
adc
adc
dec
out
iret
outs
jge
scas
jbe
shr
sahf
lock
or
or
adc
int3
bound
cld
(bad)
mov
ja
xor
jg
arpl
dec
mov
ins
mov
pushf
into
std
sbb
std
mov
inc
mov
or
aad
push
aaa
jl
add
jmp
mov
jp
stos
sahf
and
cwde
retf
dec
dec
test
pop
ss
push
sbb
cli
fmul
xchg
push
retf
popf
inc
cmp
(bad)
mov
fst
lea
idiv
push
scas
mov
aas
pop
push
or
loop
imul
or
mov
pop
(bad)
not
ins
test
into
mov
mov
das
jge
mov
cmp
int3
not
cs
(bad)
mov
mov
inc
(bad)
cld
and
adc
xchg
dec
and
xchg
push
das
ficomp
sub
dec
and
lods
inc
mov
and
jp
lods
std
ret
push
test
mov
ret
fld
test
sub
mov
cs
(bad)
scas
mov
xchg
fcom
xor
rcl
scas
push
mov
jg
cs
mov
ret
outs
xor
pop
frstor
add
ds
outs
popa
pop
call
cld
(bad)
pop
ja
shl
aas
xor
mov
fisubr
in
xchg
popf
(bad)
scas
aas
mov
pop
jmp
daa
sub
pop
(bad)
nop
ret
add
jnp
stos
jecxz
sbb
mov
shl
adc
lock
mov
xchg
add
(bad)
out
lods
daa
sub
cmp
repz
jp
mov
pop
push
movs
jecxz
pop
neg
pop
push
mov
bound
mov
cmp
aam
in
test
add
out
in
stos
xchg
adc
test
push
test
inc
js
mov
mov
pop
sbb
in
dec
cwde
(bad)
loop
leave
retf
inc
adc
jle
test
pop
mov
int3
outs
pushf
push
mov
in
(bad)
outs
js
push
push
pop
std
sti
inc
pop
mov
or
call
in
mov
imul
mov
add
call
push
repz
nop
mov
sub
pop
mov
out
sbb
mov
xlat
xor
leave
jnp
int3
dec
data16
or
aas
mov
push
(bad)
repz
rep
fild
in
leave
and
es
xor
(bad)
mov
je
ins
mov
out
pop
xor
mov
mov
addr16
imul
shl
cdq
jmp
(bad)
mov
mov
inc
scas
rcl
pop
jnp
xor
cld
lods
mov
push
in
mov
gs
(bad)
adc
cmps
sbb
mov
jp
ret
(bad)
ja
pop
xor
pop
dec
cmp
in
jg
jge
cmp
and
push
mov
sbb
es
popf
ins
or
xchg
dec
push
mov
rcl
cmps
xlat
mov
dec
fisub
push
lock
fstp
mov
dec
pop
(bad)
or
addr16
out
pop
icebp
xor
jmp
inc
in
mul
xor
pop
sub
jne
jle
data16
sub
and
(bad)
imul
xchg
push
lods
rcl
cs
jb
adc
scas
xor
es
cdq
dec
sbb
rol
cli
mov
jo
pop
ss
mov
xchg
ja
iret
mov
lods
inc
sar
dec
sti
(bad)
mul
push
in
adc
or
jecxz
(bad)
inc
imul
jb
mov
mov
dec
sahf
adc
cs
push
js
add
mov
adc
stc
jbe
rcr
jae
hlt
xlat
pop
aaa
loopne
xchg
jl
rep
mov
pop
popf
sbb
rcl
lahf
jg
jecxz
ins
in
out
xor
test
lock
gs
shr
sbb
mov
out
xchg
test
sbb
jnp
test
gs
repz
lods
lods
arpl
fwait
push
test
out
push
jge
xlat
xor
sbb
mov
stos
push
mov
dec
lock
xlat
mov
or
sahf
dec
fadd
sub
push
mov
leave
gs
mov
xchg
test
out
pushf
xchg
xchg
add
add
rol
sbb
imul
stc
adc
mov
outs
retf
sbb
shr
jno
xlat
packsswb
clc
int
xchg
sub
(bad)
adc
pop
addr16
test
mov
ja
in
scas
jecxz
cmp
cmp
dec
jae
sub
jb
nop
out
ss
and
test
cwde
fild
sub
sahf
dec
xchg
jmp
nop
cld
or
pop
push
mov
icebp
out
paddsw
fadd
xchg
jns
pop
scas
sub
out
jb
jmp
sbb
xor
shl
popa
sti
sbb
retf
xor
xchg
add
jle
(bad)
fdiv
in
sub
loop
mov
lea
sub
push
rol
push
(bad)
in
mov
int
jmp
cmc
aad
dec
push
and
xlat
imul
sub
mov
xchg
je
xor
ficom
es
add
xchg
xor
jno
sub
scas
test
fcmovnu
cs
xchg
movaps
out
vmovhps
dec
inc
sbb
jne
jge
ror
jo
pop
ret
lds
fnstenv
lods
std
imul
aam
out
adc
rcr
push
outs
rcl
cmc
ret
std
pop
repnz
sub
call
call
and
sahf
scas
adc
sub
rcl
repz
adc
and
mov
daa
and
sbb
push
add
pop
lods
ja
jne
jo
mov
int3
cmp
fiadd
ficom
popa
push
addr16
pop
mov
stos
jl
mov
pop
loop
and
dec
stos
imul
popa
ret
test
mov
lds
fwait
pop
cmp
sub
loopne
outs
add
retf
mov
and
mov
test
mov
pop
cmp
ins
cmp
jno
dec
mov
pusha
test
adc
inc
cmp
push
pop
mov
jp
cmp
sub
movs
clc
mov
pop
xor
xchg
sub
std
mov
dec
mov
push
xchg
test
test
in
mov
rol
fdivr
imul
pop
sub
sub
jno
jmp
dec
shl
sbb
push
jmp
rcl
cs
jp
mov
es
adc
hlt
fisttp
xchg
int
enter
mov
dec
add
pop
pusha
out
mov
mov
stc
sub
xchg
sti
cmp
stos
scas
leave
add
jmp
(bad)
es
iret
lea
and
fnstcw
pop
inc
in
sub
adc
shr
cmp
xchg
data16
cli
loopne
mov
std
test
cli
in
test
outs
adc
call
test
rcl
cmp
sub
jge
adc
cmp
push
cwde
inc
nop
mov
sbb
in
sub
loope
sahf
jmp
pop
loop
movs
(bad)
test
js
sub
ja
test
outs
imul
xchg
std
retf
mov
call
mov
mov
cmps
lods
fs
sti
punpckhbw
out
comiss
push
loop
mov
cmc
add
ret
mov
stos
or
(bad)
shl
into
mov
jbe
test
inc
(bad)
dec
lods
adc
xchg
or
pop
add
cmp
add
repnz
popa
add
mov
cmp
ficom
addr16
push
pusha
je
pop
int3
ja
xchg
lahf
out
and
lds
arpl
in
sbb
inc
loopne
mov
movs
sahf
pop
stos
jns
pop
push
cdq
pop
mov
mov
inc
pop
add
lods
and
push
dec
pop
inc
and
mov
adc
fld1
cmps
ins
fistp
sar
mov
aas
int
xchg
and
and
push
in
in
into
mov
cld
scas
sub
jae
shl
or
xchg
(bad)
aad
ret
sub
aaa
pop
in
mov
dec
loope
sti
cmc
jb
imul
shl
add
xor
mov
inc
jmp
das
aam
fist
jp
xchg
cmp
sar
aad
xchg
dec
jg
inc
rcl
aam
clc
mov
repnz
xchg
retf
fsub
sub
outs
pop
ds
std
xor
in
sub
cmp
sub
xor
outs
or
xor
pop
push
mov
xor
mov
sbb
pop
retf
mov
jbe
std
pop
sub
xchg
ja
movs
sbb
mov
or
pop
pusha
popf
xchg
add
hlt
mov
mov
push
inc
(bad)
sbb
mov
sbb
xchg
add
cmps
test
or
sub
out
inc
(bad)
icebp
loop
ret
ins
mov
sub
ret
cmp
das
popf
adc
(bad)
movzx
ss
fdiv
cmps
lea
dec
xchg
out
mov
(bad)
test
stos
mov
(bad)
mov
fs
push
dec
push
pop
mov
or
mov
scas
mov
in
bound
mov
(bad)
pusha
xor
mov
shr
sub
rcr
inc
xor
xchg
movs
das
jg
xor
dec
xor
or
lods
adc
test
mov
push
jge
add
mov
dec
or
ret
movs
mov
not
xchg
bound
iret
rcl
in
popa
jns
jae
ret
fcomp
dec
aaa
xchg
push
sqrtps
stc
add
sbb
rcr
cmp
jnp
stc
pop
inc
hlt
in
in
inc
mov
mov
lahf
push
sbb
das
arpl
and
popa
pushf
shl
out
sub
std
mov
push
nop
push
dec
jno
or
sub
lods
ret
push
jg
movs
add
and
dec
cmps
das
jae
and
enter
xchg
fisubr
sbb
or
loop
xchg
cdq
aam
jmp
and
mov
cmp
cmp
or
je
pop
ins
sub
les
add
mov
sub
push
ffreep
bound
std
int
sub
xchg
out
bound
push
jo
dec
lods
test
repnz
jmp
cld
pop
or
shl
outs
outs
pop
loope
sub
mov
out
fimul
adc
vpermpd
mov
pop
rcl
cli
daa
or
mov
fiadd
ret
add
bound
out
and
adc
inc
add
pop
pop
fist
cmps
inc
movs
in
or
dec
inc
push
test
push
rol
daa
sbb
(bad)
sahf
push
xor
movs
jge
mov
(bad)
movs
in
pop
lds
jbe
cs
and
sbb
xchg
imul
xchg
scas
shl
shr
xchg
movs
idiv
div
test
es
jo
aas
inc
pop
jmp
push
mov
mov
ffree
mov
lods
clc
push
pop
push
and
gs
jmp
dec
lods
sub
sbb
(bad)
data16
jecxz
mov
scas
call
cmc
mov
int3
push
lods
sbb
xor
mov
or
cmp
jns
xor
mov
jnp
aaa
jmp
js
jmp
and
imul
mov
inc
cmp
aaa
add
or
inc
(bad)
jnp
mov
sbb
add
mov
cmps
jno
jmp
inc
xor
and
pushf
add
adc
mov
jle
out
mov
adc
leave
adc
sub
(bad)
scas
aad
pop
mov
push
nop
mov
jb
xor
adc
mov
out
je
jge
sub
dec
std
xchg
add
sbb
sbb
sub
inc
mov
xor
adc
fwait
sbb
sti
xor
iret
adc
jnp
movs
inc
popf
and
dec
mov
or
dec
inc
inc
mov
out
adc
inc
adc
xor
mov
jecxz
out
inc
in
pusha
test
pop
test
fsubr
lock
dec
cs
(bad)
mov
stc
dec
cdq
adc
cmps
imul
shl
xlat
fcomp
out
inc
icebp
push
inc
clc
popf
test
bnd
push
ror
sahf
popf
mov
cmps
and
mov
sub
ud1
imul
ds
int3
inc
mov
(bad)
jle
cs
mov
sub
ins
fsub
div
add
jle
cs
push
jne
xlat
adc
shl
cmp
lods
sbb
repnz
push
or
test
jecxz
leave
ja
adc
or
ins
mov
or
mov
pop
test
sbb
ror
lods
mov
fbld
call
iret
sahf
ins
inc
in
clc
clc
sub
cs
cs
aam
pop
clc
mov
stos
inc
xor
xchg
pushf
add
repnz
dec
xor
mov
leave
lods
add
dec
and
rol
scas
js
dec
(bad)
xchg
inc
inc
cmps
ret
(bad)
or
push
or
(bad)
call
or
mov
fimul
mov
or
xor
arpl
(bad)
clc
test
bswap
(bad)
pop
jle
(bad)
out
dec
cmp
pop
out
or
inc
(bad)
sar
sbb
cmp
pop
xchg
push
add
in
jge
jbe
mov
rcl
cmps
sbb
clc
and
pop
test
test
add
in
aam
xchg
int
or
mov
or
push
add
fist
push
bndstx
adc
cmp
movs
add
add
mov
mov
shr
fsubp
or
xor
fild
dec
mov
push
adc
pop
(bad)
cli
imul
inc
add
enter
add
jle
jo
pop
pop
xchg
sub
and
sbb
xchg
rol
xchg
inc
or
mov
std
test
lahf
inc
std
sar
cmps
add
jecxz
jmp
daa
pop
fsubr
jbe
mov
leave
push
mov
stos
mov
pop
fadd
sti
repnz
das
jns
dec
loope
jae
ins
clc
dec
retf
ins
or
or
and
pushf
push
pop
xor
add
mov
inc
int
adc
aas
fs
xchg
int3
and
push
lods
fisubr
sbb
mov
popa
in
stos
not
push
in
jmp
push
(bad)
in
or
ret
jmp
cs
mov
sti
aas
mov
std
mov
stc
jae
repz
push
push
jne
sbb
cmp
push
or
jne
inc
mov
dec
mov
fadd
out
and
hlt
pop
pop
test
in
push
jg
aas
loop
sub
sbb
jmp
(bad)
fild
inc
scas
cmp
pushf
push
jns
scas
push
and
push
push
adc
fs
push
or
push
imul
xlat
and
(bad)
pop
stos
dec
data16
push
arpl
repz
inc
mov
call
es
stos
leave
dec
adc
and
or
imul
xchg
(bad)
sahf
cmps
mov
sar
inc
inc
out
pop
mov
xor
in
(bad)
shr
ja
mov
outs
ss
in
daa
adc
popa
jle
jno
xchg
or
mov
adc
and
cs
jbe
scas
mov
dec
rol
sbb
add
das
adc
xor
(bad)
xchg
mov
dec
mov
dec
shr
mov
xor
pop
push
xor
push
sar
mov
(bad)
push
jae
mov
cli
arpl
hlt
call
scas
jge
cmp
(bad)
jmp
push
fldcw
dec
mov
in
push
mov
dec
and
movs
dec
repnz
mov
jmp
jmp
enter
je
sub
mov
jns
loop
arpl
inc
mov
gs
xchg
dec
imul
(bad)
jecxz
pop
xor
xor
mov
add
loop
adc
(bad)
push
xchg
mov
xchg
push
jmp
imul
inc
ss
cmp
xor
add
pop
xchg
mov
sar
cli
sbb
xchg
push
or
gs
mov
iret
add
cmp
pop
pop
push
iret
fcomp
add
or
outs
jns
dec
mov
inc
or
pop
js
push
inc
push
jmp
jmp
xchg
sahf
mov
pop
push
inc
pop
jnp
cmp
out
sbb
es
fs
fs
test
mov
push
sbb
dec
(bad)
lds
dec
popa
adc
cmp
scas
ins
pop
mov
jb
sub
gs
aas
dec
and
and
push
lods
or
iret
lea
popf
mov
push
xchg
xor
(bad)
jle
ins
fisubr
(bad)
test
fld
lahf
sub
adc
popf
push
mov
enter
jmp
and
sbb
imul
(bad)
jae
push
mov
test
mul
pop
fisttp
fucom
rol
shl
(bad)
push
xchg
ror
xor
mov
fs
daa
jecxz
popf
jnp
imul
or
or
cs
push
sub
mov
movs
ja
cmc
inc
mov
enter
fcmovu
cmps
pop
or
xchg
push
fwait
cmp
add
outs
cmc
ds
and
mov
pop
sti
iret
hlt
pop
js
sbb
stos
pop
cs
xchg
out
repz
cld
in
jl
aad
jae
dec
sub
jg
lea
adc
aad
js
xchg
outs
ret
and
or
inc
and
push
lods
adc
mov
aam
push
fild
clc
mov
popa
inc
and
cmps
push
and
or
(bad)
cmp
popf
out
inc
(bad)
not
stos
cmp
push
out
fcom
sub
retf
and
ret
add
(bad)
cwde
cmps
les
mov
mov
add
jp
push
mov
cdq
xor
sahf
dec
fwait
pop
inc
fisub
sbb
(bad)
jg
cmps
sub
mov
lahf
pop
stos
(bad)
arpl
mov
dec
movs
pop
addr16
xchg
push
mov
sbb
inc
aaa
cmp
mov
popf
mov
fsub
loopne
rol
test
hlt
int3
dec
scas
xor
retf
xchg
mov
xchg
inc
add
or
std
cmp
dec
cmc
xchg
fisttp
test
cmp
js
push
sahf
cs
and
das
push
nop
or
enter
xor
cmp
je
nop
outs
jecxz
fst
scas
fmulp
cmp
into
retf
sbb
inc
arpl
pop
mov
scas
outs
jae
mov
xor
lahf
inc
pop
mov
push
xor
or
gs
sub
fdivr
jnp
ffree
(bad)
lods
(bad)
daa
sub
xchg
inc
std
ins
pushf
fs
push
mov
push
scas
cmp
vpsubsw
pop
jne
mov
xchg
fsubr
dec
mov
(bad)
cwde
int
shl
lahf
and
sbb
lods
push
out
dec
je
ins
lock
loope
mov
icebp
adc
mov
dec
xor
xchg
pushf
mov
push
push
jno
icebp
popa
imul
pop
jae
mov
pop
or
retf
fwait
pop
inc
mov
mov
xchg
dec
out
stos
enter
sbb
iret
and
jmp
sub
imul
nop
stc
and
and
out
mov
stos
pop
add
mov
aad
inc
icebp
retf
ja
ror
sub
das
cmp
leave
push
xor
mov
dec
and
mov
xchg
sbb
fist
push
mov
fwait
sahf
lods
into
push
mov
sub
push
cmp
ret
add
(bad)
sar
aaa
pop
ins
cmc
(bad)
pop
cmp
cld
dec
pop
gs
out
not
test
(bad)
jmp
and
mov
ja
jnp
aas
dec
pop
into
mov
sbb
cmp
cwde
ret
mov
push
aam
loop
inc
mov
dec
adc
in
push
es
fcmovnbe
jecxz
int3
cmp
loope
retf
lock
fs
test
and
in
aaa
call
sub
nop
sahf
ja
pop
(bad)
fstp
cmp
fild
and
rcl
mov
hlt
xchg
adc
imul
icebp
add
sbb
jne
and
jmp
sbb
movs
out
push
je
sbb
add
(bad)
retf
inc
sahf
div
mov
sub
retf
cmps
dec
xchg
mov
sbb
test
dec
div
jbe
test
mov
(bad)
mov
clc
mov
rcl
and
ret
scas
or
mov
pop
xchg
jl
push
pop
jno
in
stos
pop
popf
les
jno
adc
mov
ret
lods
xchg
mov
sub
es
mov
jb
adc
ret
(bad)
xchg
rcr
pop
cld
or
sub
call
sbb
inc
inc
in
jle
dec
loop
inc
ror
mov
pusha
leave
fld
ins
sbb
retf
xor
clc
jecxz
push
repnz
and
and
dec
dec
push
dec
sbb
sub
cmp
repnz
and
jne
movs
xchg
push
xchg
mov
push
popa
sar
jns
and
or
xor
pop
add
pushf
jg
or
fist
cwde
iret
fidivr
sub
and
mov
xchg
or
aam
inc
cmp
std
les
arpl
mov
cld
jbe
fdivrp
dec
loop
into
jmp
fs
add
cmp
pop
jo
inc
add
cld
aam
and
outs
jnp
stc
push
push
push
test
xchg
xor
jb
rol
inc
push
pushf
std
in
push
ss
jmp
jge
shr
or
push
mov
pop
cld
push
push
shl
test
repz
in
dec
lahf
sub
mov
test
pop
cmp
dec
push
sub
andps
lea
mov
out
out
lea
push
fstp
add
shl
sub
adc
xchg
sbb
clc
dec
out
mov
test
(bad)
mov
inc
mov
stos
add
cmp
aam
cmps
add
adc
lods
adc
js
dec
mov
mov
mov
sti
cmps
push
add
sbb
mov
sahf
aas
sbb
out
mov
inc
movsx
push
mov
push
sbb
fs
pop
test
das
mov
adc
mov
xor
nop
xchg
pop
sbb
mov
retf
stos
sub
mov
in
and
mov
dec
(bad)
push
mov
cdq
adc
pop
mov
mov
ror
retf
mov
clc
neg
scas
test
stos
push
jo
fcom
add
dec
jg
test
pop
pop
pop
cld
mov
and
and
cmc
movs
or
lahf
les
cli
dec
mov
pop
inc
mov
retf
call
fs
int3
daa
cmp
push
icebp
leave
bound
fstp
mov
addr16
sub
and
out
(bad)
mov
xlat
lea
mov
add
in
mov
add
fnstsw
(bad)
pushf
pop
cmp
xor
push
adc
fcmove
jmp
xor
inc
sbb
mov
cmps
nop
popa
loopne
test
adc
mov
daa
(bad)
pop
aas
jp
or
jl
cmp
xchg
fcomp
dec
mov
mov
inc
cmp
int
xchg
fsub
test
pushf
and
ror
cs
inc
or
jp
push
inc
jnp
ins
out
jg
or
stos
or
push
and
ss
jmp
or
mov
les
mov
cld
stos
jecxz
and
loope
pop
mov
loop
jns
adc
ja
les
scas
lods
push
jne
test
pop
outs
adc
cmp
xor
scas
jmp
lods
xor
loop
xor
dec
(bad)
push
and
loope
je
ins
inc
mov
or
sub
inc
rol
sub
ins
ret
push
cmp
pop
rol
xor
xor
dec
and
and
jno
pop
loopne
mov
dec
aam
inc
retf
js
mov
push
mov
repz
cli
leave
lock
dec
outs
mov
or
cmps
jns
pop
arpl
daa
and
jb
mov
adc
mov
ret
cmp
call
dec
bound
mov
mov
and
mov
mov
or
addr16
dec
retf
jecxz
mov
jmp
(bad)
test
xchg
push
pushf
mov
adc
mov
push
xor
sub
add
rcl
push
adc
rcl
cmp
fcos
jbe
mov
js
xor
sar
dec
xchg
inc
mov
stc
daa
adc
test
or
enter
pushf
out
cli
push
stos
cld
es
push
cmp
fnsave
sbb
imul
adc
xchg
in
mov
jne
(bad)
iret
shl
ds
mov
call
lods
and
enter
xchg
dec
fld
xor
ds
xchg
mov
psubq
addr16
jns
sbb
mov
cmps
adc
cdq
lock
ins
xor
adc
cdq
add
shr
adc
js
stos
aas
jb
lods
mov
shl
mov
push
mov
pusha
jp
cs
call
(bad)
daa
in
mov
pop
cmp
fdiv
in
rcr
inc
outs
push
mov
mov
scas
movs
scas
ficomp
jecxz
dec
mov
call
cmp
push
or
inc
dec
adc
and
ins
xchg
cmp
mov
add
push
xchg
jbe
xlat
loopne
(bad)
push
jnp
stos
(bad)
cmp
inc
ficom
and
dec
mov
mov
mov
inc
clc
xor
and
sbb
cs
bound
dec
adc
adc
jmp
imul
adc
mov
out
inc
xor
mulps
lods
xlat
xchg
sahf
sti
xor
das
mov
pushf
es
dec
sub
sub
jbe
dec
push
cmp
stos
(bad)
jo
sub
clc
and
aam
adc
inc
jbe
and
xor
mov
sub
cmc
jns
cmp
in
adc
out
out
call
imul
lock
aam
out
shr
push
push
mov
mov
or
adc
mov
dec
xchg
(bad)
fadd
(bad)
imul
sti
pop
outs
cmp
shl
cmps
sub
jecxz
mov
jno
pop
sub
shl
adc
int
cwde
gs
or
sbb
or
cs
cmp
mov
pop
cmp
dec
add
xor
call
dec
in
mov
into
stos
xchg
fs
mov
dec
mul
shl
jnp
into
jb
movs
and
out
sbb
push
jno
cmovs
test
nop
jle
ins
fsub
mov
pop
mov
sbb
push
adc
dec
into
xchg
call
jb
repnz
out
sahf
cmc
shl
add
lahf
mov
inc
mov
cwde
es
dec
xor
hlt
ror
jae
movs
xor
push
pop
(bad)
sub
push
pop
cmp
mov
or
scas
inc
mov
sub
and
cmp
in
mov
fcom
mov
xlat
nop
adc
lods
stc
mov
xchg
pop
and
jecxz
xchg
inc
int3
popf
movs
test
mov
cmp
mov
mov
xor
outs
adc
cmp
mov
sbb
sti
iret
pop
sbb
ins
les
int
(bad)
adc
repz
inc
scas
(bad)
repnz
mov
sub
icebp
cmc
dec
clc
loopne
outs
std
shr
and
mov
mov
les
and
mov
loopne
xor
xor
loope
or
outs
mov
xchg
in
out
cmp
pop
fcom
inc
out
mov
lods
add
xor
jg
fsubrp
aad
mov
loop
inc
scas
or
sub
inc
and
fcmovnb
loopne
into
xor
ret
pop
mov
xor
mov
xchg
or
mov
neg
pop
xchg
mov
add
inc
in
scas
sbb
inc
nop
loope
jmp
jg
mov
mov
loopne
out
mov
adc
cwde
outs
movs
aas
sub
mov
dec
adc
push
pop
sbb
call
jnp
xor
pop
or
scas
pop
cmp
nop
mov
inc
sbb
jns
arpl
xchg
add
ret
sub
ja
scas
nop
sti
fs
scas
int3
sub
iret
movs
and
inc
ret
xchg
cdq
js
jp
rcr
stos
retf
xor
int
(bad)
cli
cmp
cmps
scas
movs
test
js
adc
call
sub
das
loopne
gs
scas
pop
and
outs
xor
push
adc
int3
and
clc
xor
add
jae
or
movs
(bad)
pop
and
and
cmps
cmp
(bad)
xor
pop
pop
lea
cmp
inc
sub
add
stos
mov
pop
int3
and
jmp
(bad)
and
stos
lahf
repz
scas
adc
int
sub
pop
xor
sub
and
ss
jbe
daa
dec
add
icebp
jb
movs
sbb
aas
xchg
push
sbb
cmp
mov
outs
je
f2xm1
sub
aaa
jbe
cmp
dec
dec
lock
add
fs
lods
sub
inc
or
push
push
sub
cmp
enter
in
retf
hlt
add
pop
push
in
jle
adc
adc
jno
adc
jp
sbb
(bad)
clc
repnz
xchg
cmp
jp
sub
rcl
cs
pop
(bad)
sub
test
push
sub
mov
cmp
scas
pop
(bad)
retf
or
inc
dec
sbb
test
stos
test
sti
hlt
lds
fwait
scas
cmp
push
in
cmps
jns
lods
jecxz
inc
call
in
xor
jmp
scas
neg
cs
jg
imul
dec
imul
call
loopne
mov
lods
push
scas
pop
imul
pop
and
movs
(bad)
out
out
fimul
sbb
mov
gs
push
adc
scas
jo
cmps
jno
scas
(bad)
shr
ficom
mov
mov
sub
jge
xlat
or
adc
call
jle
pop
adc
dec
add
push
dec
mov
xlat
call
iret
ins
jno
adc
mov
test
fcmovb
stos
sbb
outs
jae
lods
jle
ss
movs
jp
jg
push
cmp
retf
jecxz
rol
sub
dec
cmp
or
loop
cld
pop
cmps
add
iret
push
stos
xor
popa
mov
ss
xchg
pop
mov
and
(bad)
mul
jmp
add
adc
mov
mov
aaa
das
adc
push
mov
retf
adc
push
pushf
jbe
sti
adc
es
call
sbb
pop
or
mov
jmp
fisttp
ins
mov
ja
mov
jb
dec
push
daa
inc
addr16
sbb
mov
in
in
add
retf
mov
mov
xchg
(bad)
iret
xchg
js
cmp
xchg
push
jb
stos
lods
stos
std
mov
iret
xor
jbe
pop
test
popf
ror
sbb
test
fwait
mov
hlt
and
ret
(bad)
jmp
dec
mov
adc
adc
mov
adc
add
sti
ja
js
cmp
sub
scas
or
cmp
xchg
pop
scas
ins
xlat
mov
fisub
sub
or
and
xor
pop
mul
into
push
pop
out
push
(bad)
cmp
mov
push
pop
in
(bad)
add
dec
cld
lea
adc
sub
fistp
in
sub
dec
and
ret
mov
xchg
jo
into
xor
mov
sub
in
loop
sar
call
lods
cmps
nop
nop
mov
enter
push
and
lods
dec
ret
sub
mov
mov
xchg
cmp
retf
dec
and
mov
int3
sbb
movs
into
pop
mov
lods
aas
mov
xchg
ficom
pop
lahf
movs
mov
fbstp
dec
adc
pop
or
mov
fdivr
push
mov
mov
mov
inc
test
or
push
adc
sbb
out
test
mov
push
jb
jmp
mov
sub
mov
sbb
dec
loope
sbb
(bad)
sbb
lea
mov
outs
mov
xchg
popa
imul
inc
sbb
mov
mov
or
jle
sbb
adc
mov
aam
push
outs
jb
stos
xchg
mov
cdq
push
adc
test
xor
jae
sbb
cmp
mov
fs
xlat
stc
sub
out
clc
bound
xchg
add
pop
cmp
pushf
mov
iret
inc
out
inc
fst
xchg
inc
push
rcl
test
or
mov
or
scas
rol
shrd
mov
adc
in
out
mov
pop
(bad)
sub
mov
icebp
cmp
add
jmp
mov
lock
aam
jmp
(bad)
jmp
sbb
movs
sbb
jnp
sub
mov
ds
cmp
(bad)
popf
outs
xor
mov
nop
test
or
(bad)
add
mov
sar
fnclex
xchg
lods
sar
and
retf
jmp
ins
add
push
xchg
add
std
sub
jg
mov
mov
ds
cmp
std
and
jp
sbb
pushf
sbb
in
jmp
cdq
in
fs
dec
sbb
adc
ins
or
into
les
das
lahf
fisubr
(bad)
ffree
sub
ss
(bad)
fadd
cmp
rol
cdq
xchg
xor
xchg
and
retf
fnstsw
retf
rol
push
dec
ret
push
mov
pushf
sub
cmp
jae
xchg
scas
inc
jmp
xchg
add
dec
test
(bad)
jne
jle
fimul
jb
into
outs
xlat
mov
stos
sahf
les
xor
pusha
outs
fsubr
inc
mov
jne
movs
shl
and
mov
mov
in
les
int3
cmp
mov
clc
jae
das
lds
ret
mov
test
pop
in
dec
push
jnp
dec
ins
jbe
mov
jl
fbstp
cwde
cmp
fcomp
enter
fsub
in
aam
lods
jnp
xchg
jg
xor
sbb
pop
movs
mov
jbe
xor
ds
data16
adc
cmp
xchg
scas
sub
ds
icebp
xlat
stc
pop
xor
or
mov
push
adc
ret
cmp
jbe
sahf
xor
or
mov
sub
mov
(bad)
adc
mov
pop
in
stos
scas
push
xchg
xchg
aaa
call
outs
mov
pop
aas
cmp
iret
enter
push
pop
sub
push
dec
mov
icebp
xchg
clc
cmp
lds
cmp
xlat
scas
sbb
pop
in
adc
dec
mov
mov
inc
push
inc
pushf
das
cmps
cmp
les
(bad)
mov
dec
call
sbb
or
fidiv
add
xlat
xchg
dec
cmp
shr
push
fs
in
lahf
inc
cmp
adc
dec
add
movs
dec
xor
popf
inc
and
retf
in
inc
out
mov
add
daa
or
int
int3
jb
sar
test
sbb
scas
arpl
xor
mov
leave
(bad)
xor
push
sysret
or
inc
or
ins
push
outs
aad
ds
cmp
pop
cmp
int3
clc
ret
daa
and
test
lahf
cdq
jo
push
outs
jne
or
out
xchg
xor
or
stos
mov
pop
hlt
push
dec
xchg
int3
and
xchg
imul
mov
mov
fsub
or
gs
add
dec
jnp
push
dec
add
popa
repz
(bad)
xchg
xchg
push
ds
push
in
sbb
inc
mov
add
cmp
sub
dec
pop
pop
retf
dec
pop
jmp
or
test
dec
std
jnp
std
sub
pop
into
inc
out
jb
stc
imul
test
push
mov
(bad)
mov
fidiv
sbb
add
jns
dec
mov
nop
jnp
shr
arpl
sub
push
iret
inc
lods
inc
(bad)
sbb
test
es
out
mov
stos
(bad)
loop
cmp
(bad)
xchg
mov
mov
hlt
and
(bad)
xchg
lahf
aad
in
or
mov
jbe
mov
mov
pop
jbe
ret
jl
jae
aad
push
add
add
pop
arpl
add
cmps
mov
lds
inc
push
mov
cwde
(bad)
jmp
out
dec
sbb
popf
mov
clc
popf
add
stos
sub
inc
xchg
add
int
or
hlt
inc
pop
ins
jnp
cmc
sbb
sbb
shr
in
sub
xor
call
cmps
call
xor
cmps
push
sbb
cdq
push
jp
(bad)
xchg
scas
and
mov
push
sbb
push
fnstsw
jecxz
js
call
xchg
cmp
xlat
mov
jmp
fcomp
or
mov
loop
dec
push
outs
add
int3
inc
popf
add
add
lods
ror
cld
shl
add
jecxz
or
xchg
int
jge
pop
add
enter
dec
sub
jnp
cmp
or
ss
inc
push
xor
jbe
inc
cmp
and
xchg
ins
sub
das
sbb
mov
data16
out
out
jne
clc
adc
jb
sbb
cmp
adc
nop
addr16
fstp
mov
and
ja
nop
mov
nop
push
aad
in
sti
pop
repz
stos
mov
xchg
push
out
ficom
sbb
hlt
jne
pop
popa
dec
dec
jle
cld
ja
push
xchg
xchg
shl
pause
stc
imul
je
xchg
fidiv
(bad)
lea
nop
and
js
jmp
int3
push
inc
cmp
pop
xchg
adc
int3
add
cmp
xchg
sub
loopne
sbb
out
fdivr
jns
mov
push
ror
sahf
int3
inc
push
xchg
mov
add
adc
dec
rcr
inc
test
or
xchg
aaa
rcl
ds
and
inc
loope
imul
fistp
cli
mov
dec
cdq
jl
std
pusha
and
scas
in
mov
mov
seta
out
sbb
inc
xchg
sti
aad
ret
call
dec
js
fcom
fbld
mov
pop
repnz
ret
jecxz
jbe
push
(bad)
jmp
into
push
jmp
in
xor
cmps
les
sub
xor
out
mov
xchg
addr16
jle
push
and
data16
std
mov
xchg
ret
jmp
ins
repz
sub
mov
sub
sub
cmp
fidiv
out
ja
sub
or
dec
pushf
ins
cmp
fs
in
shr
(bad)
fbstp
xor
push
jbe
mov
scas
mov
sub
sbb
and
inc
iret
stos
movs
cvtps2pi
sub
add
jecxz
cli
or
dec
leave
out
sub
pop
and
ret
aaa
mov
jl
leave
cmc
or
stos
sub
sahf
or
or
ins
lahf
inc
xchg
int
out
(bad)
mov
add
sub
jae
adc
shl
int
call
sub
mov
lds
imul
mov
movs
les
add
push
ret
aam
mov
movs
std
sti
adc
pop
and
add
and
push
aaa
adc
aaa
mov
sub
ret
and
aaa
loope
xor
xchg
dec
stos
pop
fxtract
mov
push
mov
cli
and
lods
popf
xor
sbb
xchg
cmp
adc
jno
pop
mov
in
add
xchg
sub
neg
mov
retf
mov
iret
dec
icebp
xchg
cmp
add
je
push
getsec
imul
xor
adc
pop
shr
leave
push
sbb
dec
les
es
fstp
cs
mov
or
pop
call
mov
mov
pop
call
(bad)
jne
clc
fadd
(bad)
jmp
lock
pop
or
aad
push
clc
pop
sub
push
bound
fwait
jl
add
add
jmp
(bad)
xor
iret
sti
gs
jg
mov
movs
sbb
sbb
mov
rcl
pop
jmp
out
xchg
(bad)
mov
popa
int3
es
inc
xor
sub
retf
mov
icebp
cmp
jne
adc
ret
pop
cld
jbe
data16
outs
loopne
adc
stc
sbb
stos
dec
push
xchg
popf
mov
sub
lahf
js
dec
mov
(bad)
ror
fsubr
inc
cmc
sar
or
movs
mov
push
push
add
in
repnz
pusha
xchg
(bad)
movs
fwait
push
lds
cld
sahf
leave
mov
sbb
cmc
adc
in
ja
push
xor
xchg
fdivr
imul
inc
push
push
cmp
dec
div
(bad)
and
jo
shl
mov
xor
sbb
jecxz
or
xor
xchg
arpl
xchg
ret
or
sub
jmp
test
push
fmul
nop
mov
fldenv
dec
push
adc
mov
int
push
rcl
hlt
fiadd
jbe
out
mov
cwde
adc
sub
and
stc
inc
ins
scas
mov
xor
mov
lods
test
xlat
movs
dec
pushf
mov
(bad)
jo
pop
or
fcomp
es
lea
jbe
adc
out
enter
jge
sbb
fcom
inc
ror
sub
fld
inc
jne
xchg
mov
les
mov
mov
mov
ret
pop
adc
adc
movs
out
fwait
or
addr16
push
sti
jno
push
bound
bound
(bad)
aad
jmp
mov
cmp
aaa
mov
popa
mov
push
in
and
fs
dec
aam
mov
popf
or
lds
jl
push
outs
test
mov
adc
cmp
sub
adc
cmp
xchg
std
jnp
pop
(bad)
shr
fs
push
out
xchg
or
(bad)
imul
mov
outs
jne
cmp
js
pop
push
push
dec
inc
das
mov
dec
dec
jl
mov
mov
lea
stos
scas
jp
xor
div
popf
(bad)
mov
xchg
lock
inc
addr16
xchg
(bad)
hlt
sub
push
addr16
clc
out
loope
sub
(bad)
retf
pop
dec
add
ror
in
cwde
sar
outs
repz
outs
add
aam
xchg
inc
inc
jp
ror
inc
jmp
lock
xor
mov
in
ds
fadd
retf
pop
pop
cmp
xchg
nop
jne
rol
adc
nop
movs
shr
or
mov
iret
adc
or
and
call
push
pop
pop
shr
sbb
and
rol
dec
jmp
dec
ret
out
sub
mov
jne
cmp
pop
popa
xchg
in
xchg
xchg
int
add
push
xor
inc
jp
inc
test
bndstx
in
jno
xlat
aaa
stos
xchg
push
cmp
sub
inc
push
xor
and
dec
mov
out
retf
je
sub
jecxz
mov
in
scas
daa
nop
jne
sub
jbe
sbb
and
or
mul
jle
sbb
rol
mov
fbld
mov
inc
jae
scas
mov
loope
fsubr
gs
ret
call
sbb
mov
ror
mov
aam
movs
xor
push
movs
jg
mov
sub
push
mov
or
lahf
cmp
jmp
push
loope
cmp
loope
push
sar
push
mov
jl
test
or
rol
dec
dec
fcom
out
dec
cdq
ret
imul
mov
push
movs
mov
dec
hlt
cmp
sti
call
xchg
xchg
xchg
and
popf
adc
outs
jle
scas
ret
das
lahf
mov
data16
push
mov
ret
cld
dec
sub
mov
inc
add
aaa
das
sbb
out
or
push
mov
mul
and
jb
mov
cmp
cmp
dec
jg
mov
ficomp
clc
lock
fstp
push
xchg
pushf
ins
test
out
aam
loop
adc
add
push
in
pop
push
(bad)
shl
sub
scas
jle
jb
mov
cli
jb
(bad)
in
(bad)
inc
xchg
mov
adc
imul
cld
in
sahf
add
pop
push
mov
dec
rol
mov
adc
je
sub
shr
lea
(bad)
fwait
in
mov
and
jb
pushf
jo
cmps
(bad)
dec
popf
shl
and
movs
jl
or
mov
out
cmp
dec
xor
mov
mov
jle
push
test
js
arpl
cli
cmp
into
or
adc
ret
lock
xlat
ret
sbb
(bad)
ds
mov
nop
ret
mov
add
mov
or
call
sti
jge
inc
stos
jns
fwait
repz
aam
cli
js
inc
bound
xchg
xchg
pop
xor
push
mov
mov
push
ror
mov
pusha
adc
push
in
sbb
bnd
(bad)
jg
push
fs
add
mov
fcom
inc
arpl
inc
mov
inc
mov
fld
sbb
test
pop
pop
jne
xchg
push
dec
cmp
push
cmc
jo
outs
aad
mov
sbb
cmc
scas
in
imul
nop
pop
fcomip
(bad)
mov
cmps
jns
sbb
xchg
jmp
gs
inc
daa
pop
pop
in
mov
sub
sbb
fsub
jno
and
cmp
mov
mov
loope
jns
ss
test
scas
xchg
daa
lods
or
shr
mov
jl
pop
mov
xor
mov
and
ficomp
leave
mov
int3
or
nop
out
bswap
(bad)
jne
push
stos
sbb
lock
shr
jmp
sbb
inc
mov
arpl
fisubr
imul
add
adc
xchg
(bad)
ret
(bad)
lea
adc
and
push
fs
(bad)
dec
mov
aad
lods
in
(bad)
mov
rol
hlt
sbb
push
mov
sti
cmp
mov
sbb
ret
push
mov
pop
iret
cmp
push
gs
(bad)
out
pop
jl
mov
outs
xor
aaa
sub
out
push
sub
or
sbb
and
nop
je
xchg
pop
inc
movs
dec
dec
cld
xchg
jmp
jecxz
fstp
in
dec
das
lds
mov
or
xchg
sti
jmp
jmp
ds
ja
mov
xchg
clc
pop
lods
push
mov
mov
in
les
loopne
cdq
cmp
add
inc
outs
cli
mov
popa
jp
xchg
int
(bad)
jge
imul
sub
(bad)
jge
dec
xor
inc
mov
fs
loop
xchg
xor
pop
ins
xor
pop
aad
mov
mov
lods
popf
xchg
mov
sub
and
jmp
pop
inc
cmp
or
and
(bad)
push
cmp
xor
(bad)
je
andps
mov
loopne
cmp
popf
or
xchg
adc
(bad)
fld
jae
test
jne
inc
ffree
fistp
adc
sbb
mul
pop
push
cmp
into
mov
gs
mov
fld
iret
ins
es
mov
add
xor
(bad)
call
(bad)
push
add
mov
push
add
push
or
fnstsw
mov
cs
dec
and
xor
sub
push
loopne
das
sub
or
jecxz
sub
sti
fsubp
int
out
sar
cmps
adc
fcmovbe
dec
mov
mul
and
(bad)
lea
cmp
adc
pop
lock
jg
inc
das
add
jns
gs
mov
clc
(bad)
into
js
jp
iret
aas
dec
imul
xor
jmp
pop
and
call
add
jno
jp
popa
mov
cs
ds
cmps
mov
lea
fwait
dec
mov
js
fldlg2
add
jmp
call
cmp
out
dec
add
sbb
es
clc
rcr
mov
ficom
test
pop
push
bound
aam
aam
add
xchg
pop
in
pusha
sub
movs
mov
lods
pusha
rol
inc
or
(bad)
enter
bound
imul
sub
popf
add
cmp
mov
in
mov
jo
lahf
in
xor
in
and
jb
cld
add
mov
mov
shl
add
push
jns
cmp
sub
or
inc
test
mov
(bad)
div
jne
fpatan
div
cld
js
jno
mov
pushf
mov
mov
ins
and
lods
cld
xchg
movs
mov
popa
scas
push
gs
fidivr
add
es
(bad)
cmp
movs
ja
xchg
jae
sub
add
cmp
xchg
push
fsubp
out
neg
fwait
(bad)
fnsave
push
inc
xor
cwde
retf
xor
push
and
inc
outs
ins
les
mov
sbb
aaa
rcr
cwde
sti
sbb
retf
adc
rol
ret
cmp
inc
fidivr
xlat
sar
dec
pushf
std
add
pop
out
aam
push
lock
fmul
repnz
rcr
js
retf
xchg
data16
(bad)
pop
jl
xchg
xchg
inc
ja
loop
imul
sub
test
jg
lea
pop
push
pop
xchg
push
stos
div
imul
sbb
push
or
push
call
inc
jmp
pop
ins
mov
in
and
xchg
test
mov
mul
daa
mov
dec
push
imul
xor
jg
daa
mov
mov
div
pusha
dec
test
aam
mov
je
xor
maxps
rol
(bad)
xor
test
mov
mov
popa
add
in
and
neg
dec
push
xchg
and
sahf
xchg
sbb
fadd
xchg
rcl
jmp
cmps
mov
sbb
pop
repz
addr16
cwde
inc
mov
add
popf
push
cmp
outs
inc
in
jbe
and
mov
push
xchg
mov
cwde
stos
test
xchg
(bad)
jmp
pop
jp
repnz
enter
mov
je
add
add
or
out
and
push
sbb
fdivr
(bad)
jmp
call
sub
out
jmp
leave
mov
inc
pop
lock
in
icebp
out
gs
ficomp
cmps
or
lahf
mov
sbb
jae
adc
movs
push
pop
cmp
xchg
push
dec
subps
enter
pop
jle
cmc
jb
aad
mov
jae
jmp
push
dec
and
sti
cwde
scas
dec
add
add
cmp
jmp
jnp
or
mov
xor
pop
mov
or
out
stos
leave
aas
fs
popa
push
jnp
pop
dec
in
mov
dec
aas
ror
adc
or
xchg
push
inc
and
sub
aaa
mov
(bad)
sub
imul
icebp
push
xchg
loope
adc
das
mov
inc
jle
(bad)
lods
cmps
push
(bad)
jmp
add
jl
outs
push
or
lods
adc
pop
aad
push
push
xor
test
mov
push
test
pop
imul
fwait
xchg
retf
pop
das
stos
or
add
test
pop
mov
fcmovb
retf
stos
jns
dec
cmp
pusha
js
ins
nop
jne
pop
jmp
int
gs
or
fdivr
mov
or
mov
ins
mov
aam
jp
adc
loope
mov
jl
lock
mov
dec
push
mov
add
sub
sub
loop
xchg
mov
pop
pop
les
mov
mov
loopne
ret
ret
xchg
jl
mov
xchg
das
push
lds
and
shr
adc
div
stos
jmp
fmul
popa
mov
arpl
out
daa
fidivr
mov
inc
loopne
cmp
sbb
lods
sbb
or
jne
mov
(bad)
cli
adc
jb
je
sbb
leave
cmp
mov
mov
cs
inc
jecxz
ins
xchg
pop
fild
xor
int3
mov
scas
jnp
cmp
inc
cs
in
mov
cmp
stc
mov
bndstx
repz
pop
sub
ss
sub
cmp
mov
xchg
push
dec
fwait
aas
mov
stos
dec
fstp
mov
mov
mov
dec
into
mov
xchg
sub
mov
out
mov
ret
(bad)
icebp
xchg
xor
dec
xor
loop
add
cmp
adc
(bad)
imul
pushf
xchg
test
iret
test
stos
push
shl
rcl
inc
imul
clc
mov
inc
stc
shr
and
mov
xchg
into
bts
inc
rol
and
push
mov
cmp
mov
cmp
pop
iret
sub
or
mov
pop
dec
jae
stc
(bad)
fldenv
adc
dec
popa
call
push
dec
xor
fsubrp
std
mov
into
and
fs
and
lock
aam
fwait
aad
mov
test
cmp
repnz
xor
enter
xchg
test
xchg
pushf
and
stc
sub
mov
xchg
mov
mov
popa
pop
sbb
test
adc
cmps
pop
out
dec
adc
test
jp
mov
mov
mov
call
jns
xor
mov
fdivr
or
push
dec
(bad)
jle
and
jnp
pop
ins
mov
mov
mov
movs
inc
sbb
arpl
hlt
adc
icebp
or
loope
mov
jb
inc
inc
xor
dec
inc
ficom
pop
loope
mov
clc
je
adc
daa
retf
dec
cmps
cli
std
loope
nop
sti
hlt
js
jmp
pop
push
pop
push
clc
div
aaa
in
mov
pusha
cmp
movs
add
and
add
test
(bad)
aam
pop
mov
mov
js
xchg
movs
cmps
pop
mov
or
xor
cwde
imul
pushf
leave
inc
aad
aaa
add
mov
adc
and
push
out
pushf
sub
inc
das
pushf
xchg
mov
ror
and
pop
jno
icebp
aam
in
cmp
push
pushf
aam
jmp
scas
out
mov
in
call
jg
lods
movs
push
clc
xor
xchg
inc
inc
inc
jmp
sbb
lock
or
or
mov
out
mov
jp
xchg
jo
xchg
imul
cmp
adc
arpl
jp
ja
loop
dec
jle
ds
imul
adc
arpl
jmp
pop
jb
call
xchg
mov
mov
repnz
jnp
inc
or
mov
and
sbb
mov
jecxz
cmc
xor
aaa
retf
inc
popf
rol
shr
pop
jo
cmp
test
jns
popf
mov
outs
inc
retf
cmc
sub
jmp
sbb
pop
neg
mov
push
sbb
mov
pop
jo
loop
shl
in
inc
push
dec
mov
bound
dec
(bad)
sbb
in
retf
mov
mov
loope
retf
ja
data16
ja
fld
push
nop
repz
sub
out
inc
movs
daa
xor
xor
out
sub
enter
jo
sahf
test
jne
ret
jne
ins
imul
xchg
ror
and
(bad)
stc
pop
mov
aaa
loop
adc
sbb
shr
loopne
clc
xor
jmp
dec
aam
popf
retf
ret
loopne
imul
push
dec
pop
dec
mov
sahf
arpl
jmp
xchg
sti
add
in
mov
cmp
adc
push
(bad)
jge
cdq
mov
push
and
mov
xchg
cmp
imul
jo
adc
mov
jmp
adc
push
mov
scas
mov
ss
stos
mov
mov
shl
shr
ins
imul
inc
ret
jo
cmc
dec
inc
and
jb
mov
mov
imul
sbb
xchg
aam
int3
clc
loope
sub
jae
jne
outs
push
inc
repnz
aad
or
mov
(bad)
into
jmp
aam
cmp
add
sub
into
jge
ret
outs
and
fisttp
int
or
add
shl
fistp
dec
pop
adc
mov
in
inc
or
dec
iret
loopne
sahf
movs
aaa
cmc
dec
sbb
push
and
icebp
int3
xlat
scas
es
pop
loop
jmp
or
add
in
mov
or
mov
fxtract
ss
inc
les
loope
test
jns
add
cmp
mov
sbb
xchg
ins
xor
xchg
retf
fild
push
in
sbb
xchg
test
sub
mov
retf
jae
jno
add
into
outs
mov
(bad)
sub
ret
ins
dec
mov
xchg
jmp
out
or
in
lahf
movs
es
xor
sub
and
jns
call
out
dec
and
and
cmp
jae
fsub
or
inc
jmp
ret
loope
mov
(bad)
stc
jle
adc
sbb
cs
pushf
call
jecxz
test
push
adc
pop
pop
lds
pusha
sahf
test
xchg
or
jne
add
mov
push
push
fs
inc
hlt
fnstenv
push
push
leave
pop
pop
dec
(bad)
lea
lds
leave
xchg
sbb
iret
mov
je
add
bound
pusha
lods
stos
scas
jne
inc
sub
aad
imul
xchg
inc
aam
loope
add
pop
repnz
push
dec
scas
aaa
xchg
fisttp
ins
jb
sbb
retf
inc
pop
aad
inc
arpl
ins
mov
and
test
push
xchg
pop
stc
jno
int
push
pop
adc
or
xchg
repz
add
jbe
ins
mov
pop
aas
into
sbb
je
add
ret
xchg
mov
cmp
cmps
push
fst
xor
lods
daa
lea
pop
add
addr16
cmp
(bad)
ja
fst
push
add
fadd
sbb
push
jmp
aam
cld
mov
xchg
jae
fbld
jns
xor
mov
jne
mov
mov
scas
mov
jecxz
aas
xor
sbb
dec
jge
fwait
sub
js
jnp
ins
daa
test
scas
rcr
push
call
pop
cmp
push
lds
test
add
sub
lds
pop
or
imul
jp
(bad)
fwait
xor
add
ss
cli
jb
lods
push
adc
and
xor
gs
dec
or
pushf
xchg
mov
mov
pusha
(bad)
push
daa
or
jmp
sub
mov
int
mov
das
or
std
mov
pop
push
leave
cmp
dec
fst
jecxz
cdq
stos
leave
cmp
push
cmp
ret
pop
stc
mov
dec
test
sub
push
lock
lods
and
sbb
mov
gs
shr
aas
shl
test
fistp
mov
jb
sar
or
outs
jg
call
pop
paddusb
pop
xor
push
jne
cwde
push
ficom
pusha
out
in
(bad)
mov
out
in
popf
lods
push
jne
rcr
xchg
iret
mov
adc
jns
jnp
(bad)
adc
lahf
jbe
ror
mov
mov
inc
in
fs
test
and
dec
imul
xchg
cmp
and
daa
mov
hlt
hlt
ficomp
lock
mov
ud2
pop
sbb
test
or
pop
mov
mov
scas
fist
data16
add
(bad)
jl
xchg
lock
or
sub
test
mov
xchg
xchg
sub
test
sub
dec
lods
in
inc
mov
pop
movs
mov
rcl
push
cmps
(bad)
xchg
fwait
mov
mov
mov
cmc
(bad)
mov
adc
popa
mov
test
xor
inc
movs
shr
popa
inc
int
(bad)
jo
data16
jb
(bad)
or
test
movs
jge
xor
add
pop
pusha
cmp
add
jp
adc
imul
xor
pushf
stos
loopne
sub
out
das
cmp
xchg
outs
fsubrp
arpl
add
mov
shl
push
push
adc
test
ins
add
push
jb
mov
mov
loope
loope
adc
stos
mov
sbb
cmp
outs
mov
mov
pop
shl
pop
int3
jg
adc
cmp
sbb
test
push
cmps
stc
fs
ds
loop
std
push
sbb
paddd
cli
out
mov
adc
rcr
outs
leave
jmp
cdq
sub
dec
es
mov
xchg
dec
mov
(bad)
in
rcr
div
jmp
adc
out
xchg
sub
pusha
data16
in
mov
lods
ja
xor
push
push
mov
cmp
sub
pusha
pushaw
and
cs
mov
frstor
scas
inc
add
lea
jae
in
dec
xor
aaa
dec
pop
out
ja
jne
xchg
push
push
shl
sbb
(bad)
adc
jl
adc
mov
loopne
lock
ins
cmp
outs
arpl
mov
mov
mov
and
add
sbb
xchg
mov
xchg
mov
test
inc
and
(bad)
and
dec
cli
mov
sbb
sti
ins
daa
aas
shl
mov
aaa
inc
adc
mov
add
sub
stos
push
out
punpckhbw
and
gs
(bad)
movs
add
or
jge
test
adc
fld
push
ins
mov
es
mov
ror
iret
call
adc
pop
push
sub
stc
shl
test
sahf
lock
or
movs
ja
test
cmp
das
icebp
lea
inc
jmp
mov
mov
or
cmps
pop
fild
xchg
fist
ror
repz
inc
mov
leave
push
iret
or
lock
inc
pop
and
or
mov
pop
xchg
sub
dec
xor
mov
jecxz
push
(bad)
push
xchg
mov
jae
ins
repnz
jle
cs
cmp
sbb
popa
jns
icebp
push
test
cwde
retf
push
pop
pop
and
scas
outs
adc
ret
lds
aad
xchg
int
jno
lods
nop
mov
sub
ds
pop
xor
scas
aas
xor
cmps
push
pop
xchg
xor
jl
pop
ror
out
mov
movs
cmp
adc
movs
add
inc
jl
hlt
js
rcr
pop
lods
xchg
or
imul
or
xor
test
cmp
sub
xor
(bad)
lds
sar
pop
ffree
add
(bad)
fidivr
xchg
jns
aam
mov
sbb
cs
in
imul
add
jb
(bad)
mov
or
mov
rcl
nop
jae
xchg
dec
and
cmp
and
mov
xchg
inc
xchg
inc
es
movs
cmps
lods
stos
mov
mov
ja
fstp
mov
mov
adc
lahf
jnp
jmp
cli
inc
xchg
push
ja
or
adc
out
adc
jne
adc
mov
jb
xchg
pusha
mov
scas
jp
fcmovnu
mov
int3
push
adc
cwde
arpl
cmp
(bad)
iret
and
mov
push
leave
push
xor
hlt
sbb
test
push
or
and
lock
ror
sbb
inc
hlt
out
fwait
xchg
out
mov
cmp
cs
clc
jmp
inc
jae
xor
dec
repnz
xor
or
pop
inc
add
push
rcl
sti
add
es
mov
push
sub
in
dec
pop
mov
out
shr
jmp
cmovge
mov
cmc
mov
jge
dec
cs
or
jnp
jae
adc
sahf
jb
das
sub
and
mov
test
dec
fucomip
pop
mov
cwde
call
mov
and
ret
push
add
fisubr
fiadd
adc
push
(bad)
xor
lock
test
add
xlat
in
popa
cmp
in
and
enter
test
pushf
leave
lods
movs
ds
into
neg
sti
bnd
push
and
mov
gs
fisttp
sub
mov
call
repnz
mov
or
repnz
or
add
fwait
ins
inc
mov
xor
xor
push
mov
stos
inc
out
hlt
stos
jle
xor
adc
scas
push
pop
lea
pop
fisub
jmp
mov
cmp
mov
dec
add
sbb
mov
int
(bad)
ror
in
xchg
loopne
cli
add
mov
pop
xor
jmp
xlat
mov
cmps
or
push
das
out
int3
movs
mov
or
lods
xor
pop
mov
pop
test
push
pop
mov
std
xchg
in
push
pusha
add
dec
inc
fstp
daa
cmc
popa
or
jnp
ins
dec
cld
ins
popf
rcl
(bad)
push
inc
xchg
vpsubd
stos
pop
cmc
dec
or
jae
or
jnp
jno
bound
div
pop
jecxz
sar
loopne
add
std
dec
(bad)
ret
or
mov
and
into
mov
mov
scas
mov
inc
pextrw
and
out
fsubr
cmp
and
push
ins
pop
push
xchg
scas
gs
cmp
fst
(bad)
cmp
jmp
and
and
pop
imul
or
push
out
sbb
sub
loopne
out
je
nop
aam
ins
xlat
(bad)
dec
iret
ja
lock
sti
jl
pop
push
aaa
mov
mov
mov
fdiv
pop
test
push
xchg
or
mov
add
mul
sub
mov
out
pop
mov
inc
mov
pop
popa
cmp
adc
je
jmp
adc
loopne
adc
loop
xor
xor
in
movs
shr
(bad)
aas
lods
(bad)
icebp
or
and
(bad)
idiv
inc
mov
sub
aad
sub
pop
or
push
retf
int
mov
call
movs
ss
ss
in
aad
add
mov
mov
mov
ret
(bad)
aad
xor
jbe
cdq
push
in
mov
fs
sub
sub
or
test
(bad)
inc
mov
dec
dec
dec
mov
mov
fst
jo
add
pushaw
add
mov
xchg
mov
add
pop
repnz
jg
mov
jne
repnz
fsub
shl
cmp
jo
push
cmp
in
aas
stos
les
push
aam
or
fsub
push
push
push
pop
xor
cmc
push
mov
ds
or
pop
pop
xchg
push
iret
sbb
adc
in
sub
add
adc
(bad)
fidivr
stos
mov
add
je
add
lea
mov
retf
repnz
dec
or
inc
mov
retf
leave
add
or
pop
fsub
js
call
xor
inc
inc
pushf
int
push
gs
or
add
aam
jg
mov
rcl
repz
mov
jb
mov
or
out
sub
add
cmp
xor
jno
mov
(bad)
arpl
push
imul
mov
cmc
repnz
mov
mov
cmc
sahf
xor
sub
rcr
pop
add
push
ds
fs
cmp
movs
push
sbb
sbb
adc
push
inc
int
jle
mov
outs
inc
ins
in
sar
lahf
in
retf
cmp
xlat
int
mov
leave
sub
mov
movs
movs
std
cmp
adc
inc
jecxz
push
cmp
inc
(bad)
or
adc
lahf
adc
imul
sub
pop
test
sbb
cmp
add
lahf
popf
fwait
or
jl
loope
xor
test
jae
xor
mov
fadd
je
mov
cmp
mov
xchg
cmps
(bad)
cmp
cmp
pop
sahf
(bad)
jmp
je
dec
xchg
pusha
addr16
push
mov
les
lea
add
cmps
xchg
jnp
mov
(bad)
stos
lods
aaa
sbb
pop
pop
add
outs
sar
push
wbinvd
fcmovb
nop
repz
loop
retf
adc
dec
loope
movs
retf
mov
mov
pop
add
rcl
mov
test
jo
mov
push
cmp
pushf
xor
jg
call
jo
retf
fdivr
mov
push
pop
sbb
mov
es
push
jl
jo
xchg
rcl
jo
push
inc
dec
xchg
data16
repnz
imul
loopne
push
add
(bad)
mov
rcl
ret
inc
xchg
xor
leave
cmp
jae
push
sar
or
or
(bad)
repnz
ins
(bad)
(bad)
jne
repnz
ins
jmp
mov
outs
in
out
pusha
mov
mov
cmp
fwait
aad
ror
jecxz
mov
repz
cmp
int3
ins
jle
cdq
int
jge
int
fsubr
das
mov
test
push
sbb
lock
jmp
ss
cmc
fsub
scas
stc
outs
movs
add
jnp
fs
shl
cmp
pop
adc
mov
loop
and
(bad)
scas
ret
in
fisttp
push
and
mov
ins
imul
mov
dec
dec
xlat
out
pop
mov
jmp
stos
cli
mov
xchg
xor
popa
pop
jp
cmps
inc
push
pop
pusha
aaa
dec
cmps
cld
popa
pop
add
jo
or
cli
xchg
ret
jns
test
cmps
jl
mov
or
pop
retf
(bad)
out
paddb
push
scas
mov
adc
jle
loopne
enter
cdq
and
hlt
mov
dec
test
jo
les
fdivr
shl
not
test
mov
leave
xor
into
sbb
cmp
and
scas
inc
test
pusha
mov
stc
xchg
(bad)
mul
or
(bad)
xchg
je
int
repz
sub
pop
mov
hlt
fisub
addr16
ins
mov
int3
cld
cmp
sbb
ds
pop
pop
push
dec
mov
mov
xlat
dec
inc
push
adc
xchg
mov
adc
dec
jle
jo
xchg
pop
cmps
jne
imul
and
out
adc
or
mov
push
repnz
pushf
mov
mov
fst
call
pop
outs
dec
repz
cwde
xor
stc
inc
sbb
push
sub
leave
jno
into
mov
push
xor
lods
add
xchg
mov
pop
frstor
test
mov
jo
and
sub
jno
push
das
loopne
mov
dec
(bad)
jae
pop
push
cmp
js
xchg
jge
stos
aaa
shl
xchg
mov
sbb
xor
cs
rcr
xchg
push
fist
imul
fist
mov
pop
popa
hlt
push
popa
add
cdq
shl
sub
das
(bad)
ins
jnp
clc
inc
test
xchg
and
(bad)
add
scas
repnz
sbb
add
loop
into
cmps
shl
popf
sub
nop
test
sub
fsub
stos
sub
pop
adc
popa
test
in
inc
push
mov
fwait
pushf
mov
mov
daa
xchg
fs
dec
in
int
pop
adc
xchg
cmp
ret
dec
out
aam
clc
mov
fcom
cli
jo
sbb
xlat
pop
push
cmp
sbb
ret
adc
cmp
and
ja
and
adc
aam
pop
test
jge
xor
sbb
out
inc
or
ins
pop
cmp
xor
pop
lds
pop
retf
or
pop
js
adc
adc
xor
xchg
pop
stos
retf
popf
movs
in
das
pop
jmp
das
jg
fsub
fisttp
(bad)
pop
xor
or
xor
mov
push
mov
lods
test
and
(bad)
std
and
mov
pop
sahf
test
dec
in
clc
loopne
(bad)
in
in
mov
gs
xchg
jecxz
arpl
ja
iret
push
lock
pusha
adc
add
loopne
mov
js
jae
pop
dec
sub
ja
mov
mov
push
push
mov
js
cwd
ror
xchg
pop
sub
into
xchg
push
call
push
jmp
and
stos
lods
add
scas
rol
or
add
call
jb
xor
mov
js
add
dec
sbb
mov
loop
int
mov
sbb
and
mov
push
mov
aam
es
jge
lods
push
xchg
aas
nop
cmps
add
push
sbb
jo
es
loopne
pushf
xchg
or
aad
xchg
out
cwde
xchg
mov
mov
ins
jmp
hlt
xchg
(bad)
(bad)
rcl
lods
push
in
sbb
rcr
cmp
jbe
add
mov
jle
retf
sti
mov
push
ja
cwde
ror
mov
push
mov
mov
aad
pop
dec
mov
nop
idiv
inc
push
aad
(bad)
xor
out
or
bound
xlat
hlt
pop
int3
fsub
in
iret
mov
fsub
sbb
inc
push
lea
into
jo
xchg
pop
ds
or
mov
mov
call
pop
sbb
xchg
adc
mov
imul
cmp
fadd
cmp
call
loope
sub
call
shl
(bad)
in
pop
scas
repz
popa
push
mov
(bad)
fiadd
das
xor
and
cld
stc
mov
xor
mov
dec
pop
pop
ret
xor
fs
das
xchg
sbb
or
ret
and
in
jmp
call
repnz
or
xor
push
aad
cmp
call
jl
leave
push
adc
jl
repz
scas
push
inc
addr16
mov
add
jns
rol
das
in
mov
xchg
cmp
jne
jmp
fs
pop
out
adc
mov
fcmovne
or
adc
mov
sbb
pop
mov
rcr
inc
pushf
mov
pop
(bad)
sub
js
ds
(bad)
xor
jmp
cmp
call
jne
daa
jp
rcl
(bad)
in
inc
mov
xor
in
lods
cmp
pusha
retf
mov
sbb
mov
sbb
data16
xchg
mov
mov
ins
movs
rol
pop
std
cmp
and
popf
jmp
gs
add
xchg
and
mov
outs
mov
stos
cdq
xchg
repz
xor
xchg
push
cwde
jmp
jbe
pop
pop
shr
bound
div
mov
push
push
push
leave
jns
outs
sub
popa
xchg
adc
cwde
cmp
in
mov
lahf
and
bound
mov
dec
(bad)
iret
mov
sub
scas
or
popa
in
dec
or
add
push
aas
(bad)
fld
dec
push
add
enter
loope
push
adc
mov
(bad)
ins
or
push
xor
xchg
inc
xor
stc
mov
(bad)
iret
int3
xchg
rcr
mov
mov
jg
in
dec
ret
ret
fcom
sub
aam
jl
xor
das
pop
(bad)
fistp
cmp
mov
sub
and
add
inc
sub
mov
retf
mov
jg
jmp
sar
xchg
push
js
xor
fild
mov
jb
fwait
pop
push
lea
ret
cmp
and
js
idiv
cdq
dec
mov
fnstcw
cmp
mov
bound
dec
inc
jle
lea
and
jg
xchg
jb
out
retf
push
scas
into
adc
push
xchg
xor
sar
clc
push
inc
push
in
test
inc
shl
das
mov
movs
mov
stos
in
(bad)
(bad)
cmp
je
mov
pop
pop
aad
jl
add
test
aam
aad
gs
mov
add
mov
xor
pmulhuw
or
sbb
data16
repz
pop
sbb
adc
mov
jecxz
call
icebp
and
mov
xchg
out
jmp
(bad)
scas
jae
jg
fcmovbe
in
mov
ret
dec
je
in
mul
or
(bad)
dec
dec
cmp
loope
ret
iret
fs
pop
dec
ret
inc
cmp
mov
cmps
sbb
jle
leave
sub
movs
cmp
mov
lods
jmp
inc
jns
inc
(bad)
jl
sti
(bad)
sti
push
loope
pop
rol
mov
xchg
sbb
jns
cmp
icebp
pop
leave
mov
js
sbb
arpl
push
mov
in
ins
jge
scas
stos
dec
cdq
inc
dec
push
jb
sar
icebp
pop
jmp
jp
sub
push
ret
(bad)
dec
mov
jg
pop
xchg
aam
push
fxch
ds
aaa
jmp
sti
lock
loop
push
pop
lods
ss
push
test
mov
cld
mov
repz
(bad)
in
jmp
cmp
movs
mov
dec
mov
pop
mov
sub
jecxz
out
ror
lods
stc
sbb
lds
and
mov
or
in
(bad)
popa
jb
inc
sbb
call
in
fiadd
xor
ja
sub
mov
nop
add
aad
rcl
mov
pop
retf
loope
jbe
cs
pushf
out
xor
add
fist
jmp
icebp
dec
inc
out
sbb
lahf
outs
adc
push
push
mov
pop
sar
xchg
lods
and
jg
xor
lods
inc
xor
push
pop
push
stc
pop
mov
fnstenv
adc
push
dec
push
into
lea
inc
leave
sbb
cs
cs
movs
pop
test
push
or
or
add
out
push
mov
adc
mov
push
lock
and
xchg
call
pop
sub
mov
retf
call
xor
inc
(bad)
outs
outs
add
(bad)
sbb
jl
retf
les
jne
inc
mov
pop
mov
pop
push
xor
hlt
sar
or
movs
mov
sbb
test
(bad)
fild
aam
test
jl
ror
dec
add
push
mov
int
push
stos
fnsave
cs
maskmovq
test
jb
std
popa
push
push
dec
je
outs
in
fisubr
inc
aam
fstp
aam
repnz
jmp
xor
adc
aas
sub
mov
je
jmp
adc
movs
je
iret
call
xchg
mov
shl
lods
int
fistp
xchg
xchg
int3
pop
int3
mov
hlt
fistp
or
ret
push
xlat
cdq
sub
or
test
shr
push
sbb
shr
fstp
inc
dec
iret
dec
pushf
mov
dec
ds
jp
les
jae
js
movs
dec
push
ret
test
jle
push
les
jp
ficomp
mov
ret
fst
ret
(bad)
and
xchg
cmps
mov
daa
rol
push
xchg
arpl
shl
jmp
(bad)
dec
mov
push
ins
cmp
out
xor
xchg
sbb
test
xlat
test
push
int3
sub
lds
addr16
(bad)
stos
pop
pop
inc
sub
dec
stc
test
cmc
out
enter
ins
outs
sub
and
and
push
cmp
inc
ror
inc
push
push
fbstp
out
cmp
push
sbb
inc
mov
cwde
cmp
les
outs
popa
or
stos
jno
jmp
jnp
adc
mov
call
movs
jge
(bad)
in
cs
sahf
or
and
xchg
xchg
jp
loopne
mov
inc
or
cwde
pop
adc
loopne
sub
ror
xor
xchg
sbb
test
fwait
jle
cmp
popa
(bad)
jbe
ds
ret
cmp
enter
push
ins
dec
push
lods
jae
iret
pop
or
sahf
jno
xor
mov
pop
mov
addr16
mov
stos
cmp
fadd
xchg
fbstp
lea
fnstcw
xlat
fdivr
retf
rcl
aaa
cli
repnz
and
sbb
mov
push
fisttp
inc
out
mov
mov
arpl
ds
push
xor
cmc
loop
or
scas
mov
retf
daa
push
jecxz
adc
dec
lods
push
adc
stc
fld
inc
add
movs
and
jae
movs
jg
or
shl
iret
push
icebp
popf
cmp
fild
xor
inc
mov
push
push
add
adc
mov
ins
sbb
les
jno
inc
jle
jle
jle
dec
jecxz
xor
int
pop
mov
sub
or
(bad)
cld
jmp
cdq
ja
in
and
fiadd
inc
mov
and
imul
lds
sahf
mov
xchg
mov
mov
int
mov
pop
test
xchg
xor
pop
lahf
data16
jp
mov
pop
pop
mov
dec
jnp
mov
xor
iret
cmp
movs
mov
hlt
xchg
mov
(bad)
imul
or
pop
mov
(bad)
loope
sti
aas
add
inc
dec
adc
js
lods
mov
shl
loopne
(bad)
sbb
push
or
mov
daa
sub
pop
fwait
add
xchg
outs
(bad)
add
mov
add
push
mov
movs
iret
cmp
pop
pushf
test
adc
sub
xor
lea
retf
mov
call
push
mov
mov
fild
call
dec
mov
cs
fs
scas
lods
cmp
mov
jge
xchg
scas
cwde
xor
call
and
fistp
inc
inc
sub
push
inc
push
test
mov
jo
adc
or
dec
pusha
lahf
int3
out
lock
mov
push
and
add
mov
imul
pop
std
cdq
or
stos
ror
pop
lods
mov
scas
es
inc
dec
movs
loopne
mov
pop
outs
(bad)
mov
sub
scas
lea
clc
cmp
pop
pop
js
mov
loopne
clc
push
mov
mov
clc
test
jp
retf
push
adc
ror
cmc
sub
and
mov
enter
xor
jle
std
mov
imul
pop
push
out
stos
sbb
call
sahf
adc
je
mov
mov
dec
sub
xchg
loopne
xor
push
(bad)
sub
xchg
mov
sbb
fldenv
push
push
sbb
cmc
(bad)
gs
outs
mov
test
adc
loopne
sar
inc
push
push
pusha
mov
jmp
aas
dec
jo
jnp
call
hlt
aas
add
aam
and
push
fimul
call
jp
or
sub
sbb
int
dec
jecxz
fbld
jmp
outs
les
pop
shl
push
mov
ja
xor
dec
fild
push
test
jl
dec
je
dec
js
cmps
adc
shr
inc
sub
popa
add
jae
pop
add
jne
aad
or
sub
pop
rcl
js
mov
jnp
cli
cmp
mov
ds
int3
sub
btr
push
stos
sbb
xchg
in
loopne
leave
ret
cdq
pop
ret
jne
adc
push
sbb
mov
fsub
mov
add
rcl
jecxz
xchg
xor
test
test
or
xchg
and
ret
fst
cmp
pop
adc
repz
or
inc
jo
jb
sbb
xchg
xor
mov
pop
add
aad
std
pusha
(bad)
loopne
in
out
loop
jl
cwde
jp
dec
add
retf
xchg
fistp
fwait
mov
inc
(bad)
fadd
lods
cli
dec
mov
xlat
pop
pop
push
push
sbb
pop
int
xor
jb
push
inc
mov
adc
nop
mov
ror
sar
(bad)
pushf
sbb
sub
sti
or
ds
lea
dec
stos
js
sbb
adc
popa
mov
jno
aad
xor
and
inc
jns
ins
sbb
cld
add
jl
sbb
pop
pop
mov
test
xchg
inc
loope
cs
sar
rcr
pop
bound
dec
push
out
lea
fdivr
lock
adc
inc
add
fs
adc
jl
xor
pop
push
mov
pop
dec
dec
jp
xor
(bad)
shr
adc
test
retf
test
mov
sar
sub
dec
arpl
mov
sub
mov
movs
in
and
add
lock
popf
pop
not
xchg
cmp
xor
cmp
and
sbb
mul
adc
sbb
sub
sub
pop
imul
mov
movs
mov
in
lahf
popa
bound
mov
in
push
mov
cmc
pop
and
jp
mov
pop
pop
jnp
sbb
dec
jno
jge
jne
ffree
out
adc
cmp
fcom
mov
jo
mov
test
fucomp
push
jl
xor
hlt
jmp
jo
retf
arpl
jl
mov
ins
dec
cdq
test
je
hlt
shl
push
aad
jne
arpl
sti
inc
addr16
rcl
nop
fchs
pop
jmp
jne
leave
fisttp
scas
jnp
(bad)
and
aaa
pop
setl
push
mov
sbb
scas
jo
aas
sub
and
iret
jl
mov
jl
or
mov
call
js
jo
pop
call
in
mov
sub
sub
aad
ffree
fidivr
pop
fcomp
ret
or
sbb
int
addr16
mov
retf
lods
and
imul
aam
sbb
jb
mov
xchg
imul
mov
aas
pop
scas
cs
sub
xchg
sar
sub
mov
test
jb
add
fisttp
mov
push
icebp
retf
(bad)
sti
addr16
jp
or
clc
dec
(bad)
sbb
push
sbb
lahf
aam
add
test
movs
out
mov
sbb
ret
mov
lea
in
mov
inc
and
fstp
xchg
call
outs
fisttp
or
cmp
jecxz
jno
lds
xchg
scas
out
fild
mov
push
sbb
sub
push
ins
jae
add
add
ja
xor
xchg
(bad)
ret
mov
xor
inc
aas
loope
or
mov
leave
test
xor
mov
xlat
add
and
mov
ins
inc
pop
fptan
popa
popf
pusha
inc
sahf
add
sub
mov
fst
sub
sbb
push
mov
xchg
or
xor
pop
imul
mov
adc
add
cmp
xchg
in
retf
jb
push
ds
fdiv
jp
jne
mov
ds
dec
ret
ja
test
pop
mov
lock
sub
js
cmp
inc
cmps
and
in
and
dec
and
(bad)
daa
add
sbb
inc
lock
dec
xchg
mov
in
adc
(bad)
(bad)
fs
adc
and
gs
scas
fs
cdq
ficom
sub
dec
mov
not
xchg
add
add
xchg
adc
fsubr
add
mov
adc
outs
fcom
cmp
std
add
or
cwde
repnz
stos
dec
adc
and
sub
js
xchg
xchg
dec
outs
fxam
repnz
push
lods
adc
jns
adc
nop
(bad)
sub
mov
shr
outs
mov
cmp
cs
mov
dec
dec
xchg
rcl
aad
xchg
jno
jne
mov
pop
leave
cmps
mov
xlat
arpl
loope
leave
sbb
dec
add
lods
dec
jle
sub
mov
mov
(bad)
in
push
lock
sbb
push
mov
or
dec
cmp
stc
and
push
and
scas
fsubr
pop
ins
dec
or
cmc
inc
jp
(bad)
loopne
cli
and
dec
sub
nop
xor
shl
inc
lea
fcmovnb
sbb
lock
jns
push
je
or
mov
cmp
jno
stos
or
add
cs
mov
xchg
test
ret
sbb
mov
cmp
rcr
cdq
lods
pop
(bad)
pop
mov
mov
stc
data16
add
imul
lods
fs
scas
mov
idiv
mov
xchg
(bad)
hlt
test
cmp
jmp
cli
and
scas
mov
jl
jecxz
(bad)
mov
lock
sbb
int3
or
inc
call
ret
clc
jle
push
loopne
aam
sbb
pop
clc
and
rol
mov
mov
sahf
ins
jecxz
jae
sbb
dec
scas
shl
xor
es
popf
dec
das
push
ror
dec
push
and
mov
mov
push
cmp
cmps
mov
mov
lea
push
stc
sar
in
mov
lock
xchg
div
mov
add
sub
xchg
repz
movd
pop
mov
scas
repz
inc
xchg
(bad)
repnz
(bad)
lahf
jb
movs
popa
xor
imul
jo
es
xor
xor
pop
jmp
call
inc
mov
ins
mov
mov
and
push
jmp
imul
push
and
das
mov
jne
(bad)
je
xchg
jns
int3
pushf
jmp
lahf
pop
aaa
aaa
jno
ins
add
fadd
popa
dec
aam
jnp
mov
movs
dec
pop
outs
gs
ja
popf
cmp
std
dec
imul
(bad)
lock
or
push
jne
dec
in
cmp
or
in
dec
pushf
xlat
jge
fdiv
jmp
dec
fadd
xor
aam
out
mov
mov
popa
out
test
dec
and
jns
jae
dec
sub
pop
jno
jne
fistp
sub
lock
jo
out
push
scas
fsub
mov
pop
fs
lahf
fcomp
adc
mov
add
jecxz
mov
mov
add
outs
jmp
nop
mov
mov
rcl
nop
mov
ss
(bad)
xchg
repz
lahf
std
sub
(bad)
dec
push
jo
cmps
adc
xlat
fld
and
movs
imul
imul
test
pop
jo
es
jmp
and
mov
fwait
adc
loope
out
lock
pusha
(bad)
sbb
and
popa
mov
sbb
pop
sti
dec
sub
dec
outs
xchg
add
adc
jnp
cmp
and
scas
mov
leave
sbb
call
(bad)
mov
xor
pop
sbb
mov
dec
push
test
leave
aad
or
jmp
cmp
fmul
xchg
int
inc
xlat
test
retf
popa
jecxz
cmp
lods
jns
jp
aam
jmp
gs
sub
or
jge
fdivr
retf
pop
aad
int3
add
dec
mov
sbb
out
sub
aad
fldcw
sub
(bad)
push
dec
or
and
xchg
es
jnp
addr16
aad
jge
pushf
sub
dec
and
into
xchg
pop
movs
push
adc
loop
addr16
out
xchg
(bad)
or
inc
bound
cwde
add
arpl
fwait
(bad)
call
icebp
sbb
dec
mov
pop
shl
or
mov
scas
bound
push
adc
repz
bound
pop
ins
sbb
ss
aam
fisttp
fprem1
mov
in
int
fadd
adc
lods
(bad)
imul
sub
pop
(bad)
mov
xchg
aam
pop
cmp
add
add
push
aaa
xor
test
cld
mov
repnz
xlat
fcmovnu
lea
test
adc
icebp
sub
dec
aad
out
sar
fbstp
into
adc
bound
xor
push
jo
pushf
repz
les
test
lods
clc
ins
xor
inc
pop
jecxz
xor
xchg
mov
adc
and
stos
shl
movs
cmp
push
or
pop
jbe
mov
aas
pop
mov
xor
shr
out
jmp
mov
add
jo
add
xor
adc
retf
hlt
jmp
adc
add
pusha
mov
loopne
sbb
test
sbb
mov
xchg
adc
test
test
rol
addr16
mov
call
mov
shl
sub
popf
out
(bad)
(bad)
and
xchg
pop
push
or
mov
pop
ins
mov
loopne
test
pop
or
and
mov
lods
sbb
sub
nop
and
shl
in
test
imul
test
rcr
push
xchg
sbb
dec
sti
mov
adc
mov
ret
jo
dec
inc
inc
cs
retf
pop
mov
adc
sahf
sbb
jae
fld
mov
jge
jmp
mov
into
jle
cdq
jmp
fdiv
popf
xor
sbb
add
and
adc
cmp
rol
xchg
jl
cmp
pusha
ds
xor
push
inc
cli
pop
in
pop
cwde
push
loopne
ja
jae
int
das
dec
and
jnp
call
dec
jge
test
int3
scas
ss
cli
jmp
sahf
jmp
and
mov
outs
xor
imul
not
add
inc
xchg
inc
pop
dec
inc
xchg
and
inc
mov
mov
dec
loop
mov
mov
lods
inc
daa
jge
cld
xor
or
ins
xchg
dec
clc
add
sub
inc
push
test
xor
mov
inc
pop
jecxz
mov
(bad)
and
push
push
inc
lock
test
mov
ss
ja
bound
repnz
add
sar
(bad)
xor
in
sub
fmul
scas
hlt
cs
pop
das
pusha
push
ins
dec
or
cdq
stc
sub
cmp
lahf
inc
dec
mov
adc
ret
pop
push
add
imul
adc
inc
popf
loop
xchg
sbb
lods
sbb
std
sti
and
sti
cmps
stos
dec
(bad)
das
mov
lods
jae
xlat
into
add
push
jg
mov
ret
adc
inc
inc
retf
in
dec
pop
stos
jnp
call
gs
div
inc
adc
xchg
imul
pop
int
fs
sbb
rcr
mov
mov
adc
add
idiv
lds
je
mov
xor
jno
xchg
adc
jnp
iret
dec
movs
fwait
(bad)
pop
clc
rep
shr
fdiv
pop
imul
mov
adc
xchg
mov
push
sbb
movs
jge
std
xor
cmp
lahf
cwde
sbb
loop
mov
dec
pop
and
push
and
pop
pop
cld
xchg
jnp
and
xchg
rol
aaa
cmp
push
push
add
fwait
inc
mov
retf
arpl
pmuludq
inc
dec
test
cmp
loop
jb
gs
jmp
mov
mov
stos
xor
xchg
sbb
imul
jg
sbb
movs
jo
add
or
mov
xchg
cld
cmp
bound
std
cmp
jp
cmp
rcl
xchg
xor
pop
adc
xor
out
inc
aaa
dec
mov
outs
adc
inc
sub
test
xchg
shl
iret
pushf
in
std
xchg
bndldx
imul
xchg
jmp
mov
icebp
rol
pop
ror
inc
or
and
daa
mov
leave
fidivr
cmp
pop
aam
sub
(bad)
sti
pop
cld
rol
fist
std
sbb
loopne
jne
cmp
xchg
inc
loope
jmp
pop
pop
pop
stos
stos
fdivr
jge
sub
mov
and
sahf
inc
rcl
inc
push
loop
or
hlt
les
sbb
std
or
pusha
pop
pop
add
jg
je
inc
jns
dec
cmp
ret
pop
test
outs
push
push
iret
int3
jne
aaa
fwait
and
fdivr
nop
sbb
sub
test
imul
pop
jmp
inc
mul
or
loopne
mov
jno
js
leave
jge
sbb
sub
fwait
mov
sub
sub
jb
adc
test
lahf
xchg
repz
ficom
jb
push
iret
pop
jge
fdiv
jnp
sub
(bad)
push
test
dec
jnp
repz
mov
sub
xlat
adc
iret
push
push
pop
sub
xchg
pop
add
stos
sub
(bad)
xor
sbb
test
shr
jl
or
fcomp
and
and
sti
jo
mov
ror
pop
in
arpl
movs
out
jmp
inc
pusha
push
outs
fsub
sbb
das
jg
lahf
rcl
add
arpl
js
push
out
mov
scas
xor
in
dec
ficom
pusha
pop
cmp
in
sbb
imul
mov
icebp
scas
xor
test
mov
icebp
cld
sbb
aaa
mov
add
(bad)
push
rol
ins
pop
leave
add
ret
xor
jmp
mov
sti
jmp
mov
push
stos
pop
sbb
mov
cmp
sub
int3
jmp
pop
(bad)
(bad)
int3
retf
dec
adc
cs
jmp
(bad)
(bad)
lods
jb
retf
rcr
sub
ror
sbb
lahf
mov
loope
seta
clc
aad
mov
cld
imul
call
inc
lea
cmps
mov
jne
jl
call
outs
lods
jmp
pop
in
(bad)
fcom
sbb
push
jl
les
pop
ficom
jle
ins
pop
int3
cli
fsubr
cmp
lods
push
dec
out
jo
div
lar
rcl
lock
or
dec
ficomp
fcom
movs
mov
std
and
pop
jmp
mov
jns
inc
xchg
add
mov
in
(bad)
loope
aad
(bad)
mov
ret
or
mov
ja
inc
test
popf
(bad)
cli
sbb
add
sub
fldenv
mov
(bad)
jmp
out
or
and
mov
dec
xor
mov
mov
test
pushf
sub
xor
fwait
pop
pop
and
sbb
test
fmul
or
cmp
fld
sub
pop
sti
and
nop
jl
fisttp
xor
jmp
mov
in
pop
je
ror
inc
ror
push
fisttp
mov
outs
sbb
adc
dec
out
imul
(bad)
aam
dec
push
jno
adc
xor
pop
movs
inc
shr
(bad)
inc
ret
jp
mov
pushf
mov
mov
xor
daa
mov
fistp
jl
inc
and
pop
jge
loop
sub
jo
js
xchg
sbb
stos
or
mov
mov
outs
push
mov
shl
jns
cmps
mov
(bad)
pop
xchg
adc
in
inc
pop
pop
xchg
mov
sbb
(bad)
sbb
push
mov
add
int3
push
dec
xchg
(bad)
int
push
jne
cmp
or
inc
sbb
pop
inc
dec
cmp
iret
out
and
inc
ret
pop
mov
loope
and
jae
(bad)
push
cmp
or
pop
pushf
pop
xchg
jbe
(bad)
cmp
fimul
fs
call
sti
nop
pushf
cmp
scas
popa
imul
into
ds
neg
add
push
jne
ror
push
ins
sbb
sbb
xor
repnz
dec
dec
aaa
movs
jg
jp
add
push
inc
mov
pusha
mov
mov
mov
push
push
mov
popf
fisub
ret
loope
xchg
shl
or
mov
push
rcl
call
stc
inc
je
mov
xor
push
push
leave
mov
lahf
mov
sub
pusha
cmp
mov
lahf
dec
dec
lea
and
cmp
fsub
lea
jge
ins
sti
dec
pop
cmps
adc
sbb
pop
cmp
add
sbb
mov
jmp
scas
out
adc
imul
in
dec
xchg
xchg
sub
push
fiadd
ins
mov
mov
lods
inc
xchg
xchg
or
jecxz
xor
in
cmc
jge
adc
xchg
cmp
jmp
mov
push
cmp
fsubr
sti
sub
stos
pop
mov
popf
push
imul
sbb
out
mov
adc
push
paddq
dec
dec
aad
sub
sub
dec
xor
aad
lea
int
mov
stos
sub
sub
cmp
pop
cmc
ss
call
inc
ins
cmp
cmc
(bad)
xor
mov
and
sbb
pop
jmp
inc
fucomip
inc
test
fwait
mov
mov
and
loop
addr16
add
inc
lods
xchg
rcl
xchg
ins
inc
call
repz
sub
es
mov
adc
in
cmp
jle
sub
lods
push
outs
lahf
mov
inc
xchg
mov
fimul
inc
into
mov
pop
jns
push
jns
jp
and
ret
and
sar
cmps
retf
pusha
xchg
out
int
inc
dec
dec
iret
jmp
add
dec
jbe
jmp
xchg
ss
pop
(bad)
and
jnp
push
jb
jle
addr16
jp
int3
push
scas
jne
push
arpl
pop
cmp
jle
xor
inc
mov
push
xchg
mov
iret
inc
test
int
xchg
xchg
jmp
dec
neg
jnp
jmp
mov
bound
cmps
mov
(bad)
or
sti
sub
jb
in
arpl
adc
add
mov
int
cmp
mov
xchg
sbb
je
push
jno
inc
bound
add
dec
das
sti
fsub
outs
xchg
jns
movs
mov
mov
mov
rol
pop
jno
iret
js
int
add
pop
inc
and
sbb
xchg
retf
fldenv
jmp
leave
push
lds
pop
sub
pop
scas
in
xchg
scas
xor
mov
jmp
add
jb
fld
xchg
icebp
pop
wrmsr
adc
les
les
xchg
jp
in
mov
loop
adc
sub
inc
pop
inc
fimul
js
adc
sbb
xchg
adc
ja
not
push
push
dec
jae
pushf
pop
pop
dec
mov
bound
push
test
das
and
(bad)
fmul
or
daa
popf
mov
xchg
out
dec
pop
nop
mov
cmps
in
dec
mov
jg
pop
popf
xor
add
fmul
dec
adc
div
inc
test
stos
(bad)
push
pop
fdiv
cmps
dec
nop
inc
jp
push
out
not
jmp
test
pop
sub
pcmpgtb
retf
setns
dec
mov
out
jl
in
or
push
adc
call
sbb
dec
xchg
jne
das
mov
aaa
mov
jno
lds
test
in
dec
pop
jecxz
repz
mov
dec
push
fild
or
push
push
inc
xchg
xchg
cmp
dec
sbb
in
js
out
jecxz
add
inc
(bad)
retf
pop
cwde
popf
add
cmp
mov
push
xor
adc
xchg
push
mov
rol
xchg
push
pop
jecxz
lahf
or
push
fstp
sbb
(bad)
aaa
xor
jg
dec
rol
mov
hlt
mov
ret
(bad)
dec
push
fwait
mov
pop
pop
sub
jg
inc
aaa
add
das
xor
stc
mov
das
dec
push
mov
and
rcr
fcomp
call
out
sub
hlt
sub
aaa
data16
mov
mov
lods
adc
inc
mov
movs
ss
push
jo
push
sbb
fdiv
dec
xor
(bad)
sub
xchg
mov
je
push
mov
cmps
mov
call
test
cmc
cmps
mov
mov
hlt
cmp
stos
cs
shr
mov
inc
inc
sbb
bound
dec
lahf
cmp
js
daa
scas
xlat
and
and
fnstsw
fcmovne
xor
idiv
arpl
mov
cld
int3
sbb
loop
and
imul
mov
push
dec
out
xchg
mov
inc
and
loop
fmul
in
and
sub
(bad)
loope
call
lahf
sbb
mov
mov
test
mov
jecxz
rdtsc
(bad)
jle
pop
scas
mov
xchg
push
pop
fiadd
jp
and
mov
and
aam
sbb
mov
and
jg
push
or
aaa
vrsqrtss
jl
fnstcw
je
retf
repnz
(bad)
sbb
fs
stos
(bad)
mov
jmp
mov
stc
pop
xchg
or
pusha
stc
fcompp
pop
lea
ror
pop
jmp
std
mov
jmp
dec
mov
jp
cmp
xchg
mov
mov
js
(bad)
push
cdq
daa
pop
sbb
push
sub
repz
into
movs
jl
jo
cdq
xlat
call
(bad)
mov
lods
cs
xchg
jmp
jo
retf
or
jne
and
sub
out
inc
mov
fsubr
mov
sub
icebp
popf
jo
test
xchg
cs
enter
iret
jns
in
(bad)
push
and
ja
rcl
pop
icebp
loope
mov
cs
imul
add
lods
fimul
dec
push
push
push
clc
test
outs
pop
push
push
jno
shr
jmp
in
sbb
fisubr
pop
cld
adc
into
into
cmps
pop
cdq
mov
pop
mov
adc
out
icebp
xor
sub
push
js
gs
push
push
push
sbb
in
xor
mov
jmp
dec
mov
cwde
mov
sbb
cmp
jg
sub
push
push
push
adc
or
loopne
inc
fs
cmp
push
data16
sbb
es
xor
(bad)
gs
cld
jmp
scas
cmps
out
rol
(bad)
shl
sbb
or
cmp
mov
ror
outs
add
ins
dec
rol
dec
and
sbb
enter
mov
lods
jnp
cmps
mov
imul
retf
iret
mov
hlt
loope
sub
sub
(bad)
adc
inc
dec
scas
ss
cmp
out
pop
inc
jnp
repnz
in
retf
adc
pop
push
cld
or
hlt
mov
mov
outs
in
push
jbe
iret
nop
loope
(bad)
and
fistp
xchg
shl
daa
add
inc
nop
enter
retf
fnstsw
mov
sub
sar
or
pop
adc
and
mov
cmp
xchg
mov
cmps
dec
sub
dec
mov
pop
jns
or
dec
xor
mov
je
in
sbb
mov
or
out
add
je
test
in
std
mov
mov
addr16
dec
in
loope
repz
fsub
jge
dec
adc
in
stos
mov
jg
pop
and
mov
push
outs
loope
arpl
push
test
stc
fisttp
test
push
cs
mov
dec
fwait
outs
jo
aam
fist
imul
inc
adc
in
mov
nop
fwait
pop
pop
jmp
jle
sub
lods
sub
add
ins
sub
stos
ja
jae
scas
daa
pop
cdq
inc
sub
iret
cli
mov
stc
mov
jae
xchg
(bad)
stos
mov
aam
(bad)
out
shl
sub
push
mov
push
xor
inc
in
aas
gs
pusha
rcl
loop
jne
dec
mov
int3
daa
push
dec
ret
repz
(bad)
gs
xor
ins
and
out
and
fs
dec
add
adc
pop
mov
xor
pop
sub
lahf
paddd
push
mov
imul
mov
push
das
sub
aam
dec
add
lea
inc
fmul
dec
mov
mov
cs
adc
rcr
mov
(bad)
dec
inc
and
xor
mov
dec
xor
cmps
iret
xlat
clc
jl
mov
jae
mov
ficomp
test
lea
call
jg
add
pop
dec
push
out
gs
mov
test
sub
pop
pop
cmp
cs
mov
dec
jmp
movs
aaa
mov
je
pop
sub
lods
push
mul
int3
adc
jns
(bad)
out
lahf
jmp
lods
into
sub
cmp
jmp
out
xchg
movs
xlat
out
mov
jne
sub
adc
or
repnz
and
ret
jae
retf
popf
cdq
loope
sub
xchg
fbld
neg
mov
(bad)
dec
dec
pop
cmps
mov
jns
stos
mov
push
sub
xchg
sub
int
mov
xor
mov
inc
dec
das
mov
cmp
inc
neg
mov
cmp
cld
pushf
jmp
lea
call
fstp
(bad)
xchg
push
lea
sub
mov
push
test
mov
push
scas
add
pop
out
pushf
cld
(bad)
push
jmp
xchg
sti
or
lods
push
sub
into
pop
cmp
inc
inc
sub
gs
push
mov
dec
dec
(bad)
jmp
ds
mov
je
outs
or
jb
fsub
mov
call
push
es
les
sub
daa
dec
dec
inc
outs
cmp
push
pop
adc
dec
or
shl
and
addr16
rcr
out
sbb
sbb
jbe
jo
cmp
and
rol
ret
test
pushf
fisttp
add
push
or
jne
arpl
retf
fst
outs
stos
(bad)
loopne
sbb
dec
adc
out
enter
loop
xchg
mov
test
mov
and
push
sub
lods
imul
cs
scas
scas
icebp
add
retf
(bad)
out
fld
jp
xchg
mov
retf
sub
pusha
aaa
mov
dec
push
push
cmp
sub
sub
push
jle
mov
sar
gs
mov
jmp
fcomp
pop
js
sub
idiv
jge
call
mov
jbe
adc
push
or
fs
rol
mov
leave
fld1
imul
movs
mov
cli
scas
outs
xchg
cmp
ins
xchg
xchg
cmp
call
mov
popa
jmp
mov
inc
jge
in
mov
sbb
xlat
retf
lahf
stos
push
ret
mov
add
in
fmul
jnp
and
loop
in
xor
rcr
push
xchg
scas
daa
ja
fidiv
sti
add
jmp
cwde
(bad)
retf
sub
mov
mov
neg
into
shl
xchg
aas
faddp
jle
test
sbb
mov
xchg
or
addr16
or
inc
xor
xchg
stos
push
jne
inc
sar
pushf
cmc
xor
sahf
bound
dec
nop
outs
xchg
fdivrp
cmps
pushf
(bad)
xchg
fisub
mov
add
inc
int3
lods
cmp
clc
add
pop
(bad)
and
pop
add
movs
inc
(bad)
test
out
out
imul
add
mov
fidivr
imul
and
push
pop
mov
ds
dec
cmps
cmp
pop
aam
pop
dec
ins
in
pop
push
jge
push
add
mov
sub
(bad)
cwde
jg
sub
xchg
sbb
in
mov
adc
xchg
push
pop
mov
push
neg
inc
add
jg
out
or
xchg
ins
bound
es
push
jmp
xchg
fwait
sbb
shr
les
mov
movs
in
ror
lds
lods
rcl
pusha
in
dec
movs
imul
imul
push
int3
cmp
jmp
or
sahf
addr16
je
das
or
fnstenv
mov
fdivr
out
sti
repz
(bad)
mul
xchg
cld
aas
push
dec
and
mov
add
push
sub
mov
inc
add
cli
and
dec
cmp
lock
pop
sub
pop
push
xor
mov
mov
dec
cmp
adc
jnp
fist
mov
dec
ins
or
movs
or
jns
xchg
jne
push
xor
idiv
push
imul
scas
ret
(bad)
cmp
rol
aaa
mov
push
loop
adc
(bad)
jecxz
or
and
push
pop
and
aad
jp
loop
shl
imul
inc
lea
lods
movs
jmp
xchg
into
add
dec
ins
sbb
inc
cld
stos
arpl
scas
into
jecxz
dec
mov
or
outs
frstor
cmp
jbe
shr
adc
adc
mov
movs
ss
xlat
add
push
add
sub
stc
and
popa
in
xchg
jnp
mov
aas
adc
dec
inc
mov
test
pop
arpl
and
or
xor
add
add
lea
ror
or
es
mov
mov
in
addr16
vpcmpgtw
mov
ss
jnp
int3
sbb
cld
bound
sub
fcom
add
mov
jne
fnsave
lock
pop
push
dec
xor
mov
in
(bad)
xlat
xchg
mov
out
clc
xor
pop
scas
mov
sbb
mov
sub
into
in
xor
mov
sbb
les
or
sub
mov
jp
push
sbb
or
jge
(bad)
and
mov
mov
xor
jp
aam
bnd
pop
push
inc
sbb
cmp
repz
xchg
les
mov
pop
push
ins
xchg
sub
lea
inc
mov
xchg
iret
push
popa
xor
sub
mov
das
in
jg
and
sub
sbb
aaa
mov
push
xchg
mov
ret
sub
ret
mov
jnp
enter
xchg
out
fwait
enter
out
jns
push
add
push
adc
loope
scas
arpl
cmp
pop
lea
inc
dec
dec
jno
jo
or
mov
add
pusha
mov
es
or
stos
rcr
cs
inc
push
xchg
lahf
xor
sar
push
jmp
loop
cwde
in
inc
sahf
xor
cdq
fwait
out
or
dec
push
inc
adc
rol
sub
mov
test
ins
rol
pusha
push
adc
push
gs
mov
xchg
sbb
int
mov
cmps
in
jmp
fwait
retf
dec
mov
(bad)
ja
and
dec
and
dec
mov
add
js
pop
jb
or
xchg
loop
loop
jge
pop
mov
sub
or
inc
xchg
pop
call
mov
jmp
cmc
bound
pop
imul
ret
dec
mov
stos
pop
out
cwde
push
ud1
das
sub
push
outs
(bad)
je
clc
add
fdivr
popa
xchg
or
inc
mov
mov
sbb
push
sbb
sub
pusha
or
mov
push
cdq
ins
dec
(bad)
cmp
pusha
scas
or
push
in
jmp
ret
sbb
popa
xchg
jge
int3
and
adc
sti
stc
sti
pop
dec
lahf
mov
inc
and
or
popf
mov
push
push
push
scas
fdivr
ret
imul
(bad)
dec
std
push
fwait
addr16
xchg
stos
pop
push
test
enter
dec
(bad)
iret
mov
inc
pusha
cs
jns
adc
ret
repz
push
das
pop
add
adc
or
loopne
ror
jge
cmp
lds
sbb
xchg
imul
in
push
jb
mov
jg
dec
cs
aam
xchg
adc
cli
mov
shl
das
push
inc
(bad)
repz
jge
out
xlat
cwde
jbe
cld
add
sub
mov
addr16
ins
inc
stos
(bad)
xor
mov
jmp
jne
push
psubusw
ret
pop
hlt
shl
retf
jbe
xchg
xchg
aas
das
jns
pusha
sbb
sahf
dec
(bad)
and
arpl
test
out
cdq
mov
dec
sub
inc
rcr
push
sar
sti
inc
mov
sahf
push
and
icebp
cld
dec
ins
dec
xchg
imul
mov
adc
jl
ror
test
repnz
inc
cwde
repnz
fs
and
loope
test
int3
(bad)
fistp
cwde
inc
dec
jbe
pop
push
sub
dec
xor
add
or
nop
push
or
or
cs
das
push
cmc
sub
xchg
and
cld
or
sub
out
dec
cwde
sahf
scas
cmp
or
pop
xor
pusha
cdq
push
pushf
mov
mov
inc
xor
adc
sar
mov
adc
test
or
mov
pop
iret
test
out
mov
out
mov
out
test
mov
fisub
dec
ds
push
fbstp
test
mov
(bad)
inc
xor
pop
lock
icebp
jnp
rol
stos
push
jg
mov
fdiv
pop
dec
int
imul
mov
std
lea
das
cli
std
sub
cmps
fsub
jmp
aam
paddusb
std
sbb
dec
mov
cdq
sub
xor
cmp
or
xchg
cmps
sbb
sbb
loope
inc
jne
xchg
aam
push
ror
out
scas
ficom
xlat
fisubr
and
cld
ret
mov
add
sahf
push
mov
out
popa
in
idiv
out
leave
jge
sbb
in
aad
sub
fist
jg
clc
jo
cmp
gs
xor
ss
(bad)
adc
xchg
add
outs
popf
ja
or
add
lods
mov
jo
outs
dec
inc
jmp
rcl
ja
test
push
jne
add
xlat
addr16
adc
push
inc
and
inc
loop
rol
lods
jnp
or
cld
cli
cmc
fild
repnz
aaa
lahf
dec
cwde
jl
aaa
pusha
inc
push
push
pushf
xor
outs
(bad)
stos
rcr
and
xchg
inc
mov
or
inc
pop
nop
cmp
enter
dec
ins
jge
mov
jmp
push
(bad)
jae
mov
fild
xchg
fadd
rcr
inc
pop
lods
rcl
push
mov
dec
movs
push
aaa
in
sub
rcr
mov
or
cwde
xor
in
cmp
pop
retf
and
jmp
xchg
stos
fld
mov
ds
adc
dec
sub
cmps
test
xor
outs
adc
std
sub
mov
lods
push
fisub
cmc
stos
inc
cwde
jle
js
out
inc
sbb
dec
add
ins
out
mov
iret
xchg
pop
jp
cmp
sbb
cwde
les
jp
cwde
(bad)
or
fs
(bad)
mov
jo
inc
ins
stos
lods
mov
pop
(bad)
sub
adc
jl
mov
mov
xchg
pop
addr16
cmps
mov
test
adc
add
xor
data16
fsubr
xor
sar
push
iret
add
enter
call
and
and
push
stos
test
sub
out
test
jp
pushf
lods
push
pop
clc
jb
sub
jno
or
je
pop
cmp
sub
jo
inc
and
jle
icebp
jmp
xlat
xor
or
jmp
mov
mov
int3
xchg
repnz
test
hlt
fincstp
stc
xlat
ins
in
fisubr
mov
and
mov
dec
cmps
sub
mov
aam
mov
sbb
and
ins
pop
add
xchg
adc
sbb
xchg
js
sub
mov
rcl
(bad)
loopne
outs
inc
add
and
dec
mov
mov
push
nop
jge
clc
shl
and
jns
mov
stos
push
push
add
and
daa
mov
(bad)
fisttp
movs
inc
mov
cmps
daa
cs
std
int
mov
retf
dec
jns
mov
outs
pusha
fisubr
xor
adc
in
scas
dec
and
xchg
xchg
sbb
cmp
xlat
call
ins
jecxz
jg
retf
and
xor
push
pusha
bound
or
xchg
jg
out
mov
out
cld
mov
das
movs
outs
loope
scas
outs
inc
mov
movs
jo
mov
rol
ss
jne
femms
dec
xchg
ds
add
xchg
jp
mov
dec
(bad)
jmp
mov
xor
out
pop
dec
push
mov
cmc
pop
jle
inc
(bad)
jmp
add
cli
mov
hlt
aaa
gs
retf
xchg
repnz
push
pop
or
mov
jl
or
hlt
pop
rol
arpl
adc
mov
call
xlat
out
int3
pop
aam
aad
inc
imul
lods
in
mov
daa
inc
fwait
lea
adc
cmp
cwde
in
sub
or
push
mov
push
smsw
xchg
mov
xchg
add
imul
lds
jo
xchg
les
push
out
cdq
pop
sub
dec
add
outs
int3
in
mov
mov
int3
sub
jnp
adc
es
adc
jge
add
and
out
lds
js
sub
push
pop
mov
cwde
rcr
add
fadd
cmc
sbb
mov
xchg
in
sbb
xchg
(bad)
cmp
in
dec
aaa
neg
into
cmp
fadd
xchg
enter
js
dec
test
mov
fisub
pop
push
and
jno
js
cmps
xor
mov
fnsave
enter
hlt
addr16
shr
stos
into
loop
gs
das
mov
xchg
mov
es
test
push
push
addr16
cwde
sub
jle
ja
dec
int
add
ds
test
mov
lods
gs
in
pop
mov
xchg
sbb
pop
mov
pop
add
and
pop
pusha
mov
js
nop
or
pop
fcomp
movs
mov
cmp
int3
enter
dec
jbe
popa
xchg
arpl
fwait
(bad)
jo
mov
in
mov
adc
xor
call
scas
jecxz
or
or
cmc
add
pop
rol
hlt
add
jg
xor
ja
dec
bound
inc
inc
cmp
mov
jbe
push
shl
mov
(bad)
and
add
inc
js
lods
cmc
psrld
pushf
mov
leave
test
scas
int3
xor
dec
cmp
xchg
mov
xchg
(bad)
xchg
jl
dec
leave
rol
inc
fsubr
cmp
xchg
fisub
xor
push
push
mov
xor
unpckhps
push
or
xchg
(bad)
js
mov
dec
push
push
retf
sahf
test
sahf
cld
dec
or
cld
mov
sbb
or
sub
ffreep
fldenv
cmps
mov
lds
fild
jg
aaa
pop
ja
fs
mov
iret
cs
and
xor
inc
jecxz
add
fs
push
mov
sub
push
dec
fisttp
aam
fs
pop
add
ret
mov
leave
pusha
ret
das
fsubr
sub
in
mov
les
sbb
jbe
pop
stc
mov
test
xor
ins
mov
(bad)
mov
aam
lea
mov
rcr
add
cmps
mov
test
data16
or
inc
mov
call
mov
jl
mov
inc
(bad)
cmp
sbb
pop
mov
jmp
repnz
dec
dec
fstp
test
adc
jge
sub
icebp
and
data16
aad
rol
inc
cmp
push
(bad)
fdiv
call
bound
mov
std
data16
outs
sub
xor
es
(bad)
clc
jle
push
jl
push
retf
xor
adc
push
or
in
lock
popa
sbb
ror
fs
inc
cmp
sbb
in
mov
pop
inc
or
jb
xchg
and
ret
jno
push
xchg
outs
outs
(bad)
(bad)
in
dec
(bad)
fidivr
mov
movs
pusha
mov
cmp
cmc
push
ins
inc
lock
and
mov
sete
xchg
mov
push
push
cdq
push
in
cmp
cld
jnp
cwde
aad
jmp
pop
mov
xor
add
push
push
push
call
sub
les
and
ins
inc
mov
imul
ins
sub
fs
cwde
(bad)
mov
sbb
dec
mov
stos
sbb
loop
loop
mov
in
iret
ins
int
or
adc
inc
dec
test
mov
fcmove
aam
mov
(bad)
mov
mov
ror
and
test
pop
push
sahf
jge
pop
and
cli
adc
std
jae
fistp
pop
cmp
mov
inc
mov
(bad)
loop
stos
dec
loopne
xchg
sbb
popf
(bad)
mov
loop
sub
into
popa
adc
out
jge
push
xchg
loop
movs
jg
inc
sti
adc
pop
stc
retf
fdiv
sub
xor
cmp
arpl
je
(bad)
mov
mov
movs
mov
mov
xor
xor
pop
mov
xchg
or
ds
xchg
cmp
pop
inc
pop
cs
fistp
dec
pop
ins
outs
leave
jbe
dec
xor
jae
cmp
and
mov
loopne
lock
mul
test
ret
std
dec
addr16
sbb
lock
cld
imul
adc
in
loope
cmp
xchg
xchg
sub
xchg
mov
mov
or
fwait
mov
xor
push
jb
inc
int3
mov
xor
jae
scas
add
sbb
ret
movs
push
dec
pop
int3
sbb
mov
xor
or
mov
sbb
push
or
loope
push
fisttp
in
mov
mov
inc
push
adc
mov
add
mov
dec
sbb
cmp
sub
cmc
in
leave
fsubr
xchg
inc
inc
je
cmp
dec
push
adc
and
sbb
xchg
xchg
lods
ds
dec
pop
jp
dec
adc
jl
ret
repnz
jl
out
lock
push
(bad)
aad
dec
aas
xchg
cmp
xor
sub
imul
aad
test
lods
push
in
xchg
dec
dec
xlat
mov
jno
inc
xor
cwde
inc
int3
lds
add
and
sub
inc
ror
mov
fnstenv
add
or
mov
push
repnz
pop
mov
sub
push
and
movs
js
jns
jne
inc
mov
pop
sub
mov
and
js
test
arpl
adc
push
or
mov
lods
fldenv
mov
imul
mov
int3
int
inc
inc
pop
loop
adc
adc
adc
xchg
jbe
push
test
ret
aaa
enter
cmc
cmc
push
scas
pusha
and
pop
shr
idiv
add
shr
jp
sub
loope
add
ins
out
addr16
call
cmp
icebp
int
fiadd
movs
adc
rcl
mov
imul
out
in
aam
fmul
mov
or
mov
je
fistp
pop
in
and
jne
pop
lods
loop
and
push
cmp
repz
into
sbb
test
stc
mov
in
mov
(bad)
(bad)
mov
in
pop
shl
cmp
jns
popa
mov
popa
dec
pop
pop
into
retf
inc
push
pop
jae
pop
imul
mov
cmps
sar
into
(bad)
pop
pusha
lods
daa
popf
leave
sub
adc
cmps
mov
or
mov
out
sub
xor
cmp
adc
outs
retf
and
ss
cmp
arpl
xchg
repnz
or
mov
push
mov
in
movs
fild
pop
jbe
inc
dec
or
mov
cmp
mov
jg
test
ds
sahf
cdq
dec
lods
jne
push
push
and
fs
sbb
sbb
sbb
test
mov
push
mov
xor
nop
inc
pop
mov
sbb
jne
or
add
fstp
jle
nop
or
pop
xchg
aam
sub
xor
jnp
cmps
dec
popf
(bad)
aam
scas
cmc
iret
xor
push
dec
mov
retf
jg
mov
adc
mov
iret
dec
adc
addr16
pop
sub
push
sub
retf
shl
mov
repz
mov
cmp
cmps
ficom
or
lds
mov
iret
lock
push
mov
mov
into
adc
js
imul
call
clc
mov
xchg
sbb
mov
push
xor
dec
xor
das
pushf
repz
mov
adc
mov
mov
jns
scas
push
xor
sub
repnz
sub
(bad)
and
or
sub
mov
ins
or
mov
jmp
in
jge
and
imul
jbe
jmp
mov
wbinvd
in
or
jbe
mov
jne
mov
jnp
cdq
dec
cs
mul
jmp
(bad)
std
add
sbb
jne
ret
sbb
in
stc
or
pushf
clc
out
jmp
cmps
sti
mov
jne
dec
leave
(bad)
lds
xor
out
aas
(bad)
leave
push
ins
fucom
sub
push
mov
adc
(bad)
in
test
es
mov
enter
outs
out
(bad)
ffreep
addr16
fcomp
sahf
call
out
adc
add
xchg
daa
xchg
arpl
xlat
and
dec
lahf
in
mov
cld
jnp
ret
xor
inc
adc
out
cmp
popf
fwait
or
inc
cs
repnz
sbb
cmp
stc
fs
(bad)
loop
push
mov
out
fcomp
loopne
xchg
dec
call
sahf
add
pop
mov
inc
dec
test
lock
scas
mov
add
cli
arpl
mov
pop
cwde
retf
sbb
jb
fxam
stos
repnz
xchg
shl
jnp
test
jnp
pop
(bad)
xchg
(bad)
fadd
sbb
dec
mov
nop
mov
test
repz
push
and
ins
cmps
mov
jns
bound
push
pushf
rcr
cmc
sar
xchg
bound
cmp
retf
ret
push
pop
pop
sar
push
dec
mov
aam
addr16
fstp
xchg
les
pop
ror
sbb
adc
rcl
mov
imul
jmp
daa
pop
jns
sbb
dec
push
jae
rcr
dec
ror
jbe
mov
lods
pop
scas
mov
pop
dec
sub
mov
fisttp
xchg
test
adc
push
xor
jp
pusha
pop
mov
xor
cmps
fldcw
adc
rcl
cld
push
and
mov
lods
pop
cwde
inc
jle
pop
pop
rcr
adc
sbb
lea
imul
aas
mov
out
imul
jecxz
and
or
cmp
push
mov
lds
or
adc
je
std
pop
jno
iret
sbb
aas
xchg
push
push
gs
cwde
mov
rcl
add
aad
sub
cmp
inc
jns
loope
xchg
enter
add
dec
gs
repz
mov
mov
ins
push
xchg
dec
(bad)
cld
in
pop
stos
cmc
div
loopne
sub
in
mov
and
pop
and
cs
xor
jp
js
jle
cs
push
pop
aas
jl
cld
add
xor
mov
das
int
out
imul
jno
inc
mov
ret
lock
bswap
jmp
push
adc
aad
or
retf
cli
xchg
scas
hlt
in
mov
scas
retf
mov
adc
dec
or
outs
ss
fnstsw
cmp
addr16
cmp
mov
dec
xor
(bad)
idiv
mov
(bad)
xlat
adc
sahf
push
cmp
cmc
into
xchg
and
out
fnstenv
jmp
push
or
clc
push
and
lods
cmp
push
mov
lods
adc
fdiv
enter
(bad)
out
push
jge
les
fld
int3
xor
sar
adc
xor
fdivr
or
popf
(bad)
popf
fbld
jl
popa
scas
aaa
cmp
push
sbb
(bad)
scas
lods
or
mov
cmp
stc
in
sub
fadd
pop
das
shl
push
je
dec
into
mov
cmp
arpl
fs
in
mov
dec
fcom
imul
mov
ja
repnz
ins
bound
int3
fidivr
add
jp
hlt
mov
sub
xor
mov
scas
or
test
jb
enter
mov
out
xchg
popf
aad
sub
hlt
rcr
mov
dec
(bad)
pop
lock
sti
sbb
sub
and
sub
fldenv
das
rcr
mov
test
mov
mov
aam
add
push
mov
lock
cdq
push
or
inc
das
jo
in
leave
xchg
adc
rcr
xor
imul
out
arpl
enter
adc
cmc
mov
pop
jnp
dec
push
das
jl
inc
leave
pop
mov
cmp
pop
sbb
mov
pop
mov
push
xor
data16
sti
sub
mov
sbb
push
sub
jo
or
or
mov
inc
ret
ret
sub
sub
sub
retf
scas
jne
jmp
mov
pop
out
sub
gs
adc
sub
fwait
dec
(bad)
sbb
ja
enter
ds
sbb
jnp
pusha
sbb
in
sahf
mov
sub
lds
jg
jbe
arpl
stos
sub
aaa
outs
pop
fisub
les
vandps
jbe
xor
sbb
dec
int3
adc
mov
sbb
test
xor
mov
jb
(bad)
ins
test
add
loopne
mov
cdq
dec
stc
mov
xor
(bad)
sub
xchg
daa
imul
in
lahf
ja
sub
lock
or
jnp
(bad)
cld
cmc
pop
out
sub
or
sbb
fs
lods
ret
push
rol
jns
imul
inc
add
cld
xchg
inc
into
cmp
aam
mov
xor
push
lods
and
in
mov
popf
mov
cmps
ins
adc
sub
jno
add
pop
pop
pop
loop
ror
(bad)
out
rcl
scas
in
xor
call
aaa
mov
fiadd
cmps
push
adc
adc
push
sbb
or
fnstenv
adc
sub
mov
cld
or
xor
cmp
dec
jnp
xchg
in
mov
or
dec
dec
mov
aam
out
clc
(bad)
mov
fcom
add
mov
int3
xchg
sub
js
sub
xchg
sbb
(bad)
xor
cs
(bad)
xchg
int3
push
(bad)
xor
sub
mov
mov
xchg
pop
xchg
pop
ds
test
xchg
(bad)
cmps
mov
xchg
into
retf
clc
fild
mov
out
adc
cmc
test
or
adc
stos
xchg
and
fdiv
xchg
jecxz
mov
adc
call
scas
dec
cmps
aad
mov
jle
leave
or
mov
int3
imul
dec
adc
mov
jo
push
sub
pop
xchg
pop
cmp
dec
pop
cmc
mov
xchg
add
dec
cmp
cmp
ror
jle
cmps
mov
js
fcomp
pop
fistp
mov
mov
jp
cwde
rcr
mov
sub
(bad)
fmul
adc
(bad)
and
retf
inc
mov
hlt
test
test
cmps
dec
sahf
es
mov
(bad)
out
dec
xor
pop
and
sub
jae
shl
loopne
shl
dec
pop
ret
and
fstp
dec
es
mov
adc
loop
jnp
retf
or
mov
lods
cmp
mov
sub
daa
xor
xlat
mov
pop
scas
dec
repnz
mov
sub
mov
jb
test
call
in
repz
enter
jecxz
adc
fs
xor
call
out
lock
pop
les
sub
gs
push
push
xchg
mov
and
adc
(bad)
leave
push
inc
data16
add
inc
pop
cmps
sahf
fwait
cld
ja
retf
mov
lods
imul
out
mov
daa
out
loop
mov
mov
jmp
mov
jmp
aam
outs
out
in
mov
fstp
xorps
jge
pop
sbb
(bad)
test
jbe
fstp
or
adc
sub
arpl
jle
or
push
sbb
mov
stos
imul
test
jo
sbb
lods
loopne
mov
and
cmp
jge
ins
mov
mov
mov
and
jecxz
sub
lods
mov
mov
test
mov
jnp
repnz
pop
dec
fidiv
into
or
cmp
mov
icebp
xchg
pop
jb
mov
and
jb
lds
push
xor
mov
inc
test
inc
in
xor
rcr
mov
pop
push
(bad)
(bad)
arpl
outs
and
stc
in
shr
or
gs
xor
sbb
ret
push
rcr
xchg
ja
(bad)
ds
enter
fs
cdq
sub
daa
jnp
sar
loop
dec
xchg
call
(bad)
(bad)
push
mov
fistp
mov
fwait
bound
in
and
push
push
mov
cmp
test
daa
cmc
das
and
jo
mov
pusha
loop
test
inc
cmc
cmps
je
lahf
mov
cmp
inc
sbb
lea
or
outs
push
repz
xchg
adc
lods
mov
sub
mov
neg
addr16
jecxz
sbb
jmp
(bad)
adc
inc
push
pop
or
push
add
and
adc
ret
mov
retf
int
mov
xchg
jmp
out
mov
call
pop
ror
das
repz
pop
mov
outs
mov
xchg
xor
jge
mov
jmp
hlt
add
(bad)
scas
(bad)
out
dec
lods
mov
and
sbb
loope
in
mov
push
in
ret
test
(bad)
iret
xchg
add
or
fwait
lock
adc
sub
and
nop
push
and
or
es
mov
inc
inc
stos
or
loopne
repz
xchg
or
movs
aam
or
and
loope
push
call
lock
sti
sbb
fistp
mov
rcr
jo
vmread
add
call
pushf
adc
xor
sub
xchg
out
arpl
push
cmps
dec
jmp
loopne
cmc
cmp
pop
int3
loopne
mov
mov
iret
sbb
(bad)
jns
cmc
mov
aam
jmp
push
sub
stos
pop
jne
test
sbb
arpl
jo
pop
aas
scas
into
dec
out
pop
imul
mov
retf
pushf
dec
mov
mov
lahf
push
add
cmps
xor
das
outs
mov
jnp
idiv
xchg
add
cmps
loopne
repz
les
and
jno
mov
inc
sbb
cmp
xchg
adc
pop
push
mov
push
sub
jo
jmp
jecxz
or
shr
in
idiv
fist
je
sti
rcl
add
call
dec
jg
or
mov
inc
fsubr
push
push
fs
or
jb
sub
mov
(bad)
retf
xchg
mov
ss
mov
imul
add
imul
or
lea
or
out
call
sub
in
arpl
adc
into
rcr
sti
xchg
push
mov
mov
dec
in
gs
jp
mov
outs
fld
lods
daa
fsubr
add
push
scas
and
int
loopne
mov
sti
xchg
int
ficomp
jg
test
je
push
lods
push
inc
jb
ror
jmp
push
or
mov
inc
cwde
add
sbb
jno
inc
fstp
out
dec
cmp
movs
loop
js
(bad)
repz
aas
pop
sbb
in
add
fcom
add
mov
int3
mov
add
int3
jge
push
mov
mov
lea
and
ss
add
xor
mov
lods
scas
pop
cmp
dec
sbb
xor
sub
ret
add
nop
ror
dec
cs
jle
or
fisubr
sti
iret
jmp
test
clc
cli
pusha
sub
call
imul
stos
add
jns
movs
les
pop
or
fimul
ja
cmp
or
pop
pusha
xchg
cdq
mov
or
mov
lahf
inc
xchg
mov
xchg
and
pushf
fnsave
int
loop
js
dec
dec
sub
mov
jne
mov
sbb
sahf
xchg
mov
pop
dec
popa
adc
(bad)
push
fidiv
aam
vpackuswb
mov
int3
xchg
sub
(bad)
daa
das
stc
dec
and
popf
jle
outs
lods
dec
movs
sbb
xchg
cld
or
sbb
mov
repnz
xchg
int
cmp
hlt
sbb
mov
jns
mov
cmp
js
fbld
sub
jg
cmp
lods
jp
inc
out
mov
call
xor
fadd
mov
sub
les
out
loop
pop
inc
inc
xchg
je
scas
mov
vsqrtsd
adc
(bad)
xchg
mov
ss
jg
jle
ins
loope
enter
mov
xchg
les
clc
aad
jecxz
lods
aas
sbb
pop
fadd
mov
rcl
fimul
mov
mov
sbb
mov
ins
inc
lahf
dec
add
popf
imul
jb
mov
pop
adc
and
xchg
mov
loope
cld
or
aas
xchg
or
sub
xor
data16
xchg
and
inc
scas
dec
sti
idiv
sub
pop
fsub
sbb
inc
div
or
fsubr
pop
retf
inc
test
jle
cmc
int
dec
xchg
add
sbb
and
sbb
mov
or
mov
cmp
pop
or
mov
test
inc
mov
jmp
es
retf
shl
pop
cmp
push
sahf
sysexit
sub
mov
dec
outs
sbb
shr
lds
fs
xchg
popa
mov
pusha
gs
mov
(bad)
mov
xor
iret
mov
cmps
js
fiadd
inc
cld
sub
mov
lds
jae
test
shl
ja
pusha
pop
mov
xchg
(bad)
idiv
sti
xchg
or
loopne
xchg
xor
lss
ins
adc
add
adc
fwait
aad
mov
sbb
jl
inc
mov
mov
loopne
ror
or
adc
ret
fs
in
(bad)
aas
xchg
(bad)
fstp
sub
ror
jo
pop
mov
ds
mov
mov
fcom
mov
jno
shr
fcmovbe
fild
fisttp
(bad)
les
test
out
dec
inc
enter
and
bound
xchg
add
cdq
jbe
scas
sub
gs
pop
xor
fnsave
xor
lds
mov
cmp
mov
add
test
mov
in
aam
mov
in
mov
(bad)
jmp
xchg
pop
cmps
mov
xchg
mov
repnz
cmps
and
test
bound
out
stos
inc
or
in
call
and
cmp
aam
pop
jg
stos
mov
loopne
imul
dec
iret
add
fdivr
inc
ret
(bad)
(bad)
pop
and
aas
mov
push
pushw
push
cmp
push
jbe
rol
enter
int
xor
and
ret
xor
fmul
arpl
data16
cli
clc
movs
mov
and
pop
pop
mov
fwait
jno
sub
cs
std
loop
out
inc
or
(bad)
sar
(bad)
mov
dec
push
dec
call
and
pop
jae
dec
dec
dec
pop
jnp
jmp
out
pop
push
adc
inc
xchg
cmp
out
xchg
add
inc
fbld
add
cmp
push
gs
movs
xchg
fsubr
mov
pop
in
or
scas
test
or
push
push
sar
xor
xchg
jae
xor
mov
fsubr
imul
lods
cmps
in
jmp
and
lods
(bad)
jmp
or
push
mov
pop
aam
out
jnp
nop
dec
js
sub
ret
pop
jecxz
mov
shl
dec
(bad)
mov
inc
loopne
dec
test
push
or
or
or
or
add
adc
fucompp
sbb
mov
adc
dec
stc
cmp
xchg
sbb
add
(bad)
push
cmc
shr
mov
xchg
push
das
scas
in
jmp
sbb
fwait
cmps
dec
inc
dec
in
daa
pop
inc
mov
and
les
jnp
loop
mov
jae
jle
sbb
movs
(bad)
js
mov
adc
cmp
sub
mov
jnp
das
xchg
dec
sub
(bad)
jnp
daa
sub
adc
push
enter
setns
inc
imul
jp
mov
push
stc
(bad)
add
add
das
aaa
mov
data16
jae
out
call
js
gs
push
lock
cmps
stc
into
retf
pop
(bad)
imul
mov
adc
mov
nop
pusha
mov
pop
lock
mov
dec
and
push
sub
dec
out
imul
repz
xor
ret
mov
popf
adc
jp
xor
xor
sub
xor
inc
sub
sbb
inc
mov
pushf
mov
repz
(bad)
ja
dec
leave
mov
xchg
stos
mov
inc
jmp
pusha
dec
add
push
fstp
xchg
arpl
sbb
xlat
cmps
and
scas
mov
jns
adc
push
loopne
hlt
out
xor
out
enter
inc
ins
add
add
pop
cdq
sbb
sbb
inc
loopne
jae
in
aaa
popa
xor
out
bound
xor
jmp
test
gs
mov
(bad)
pop
push
sub
int3
xlat
and
rol
dec
bound
or
movs
mov
push
std
pop
(bad)
cdq
clc
lahf
fistp
test
xchg
das
and
mov
dec
jbe
push
sti
addr16
and
pop
mov
sub
sahf
sub
sub
into
cmp
movs
pop
test
xchg
rol
adc
dec
cs
and
imul
xchg
nop
into
pop
stos
sub
dec
je
push
push
add
mov
in
call
(bad)
cmp
stos
sti
xor
sbb
loop
or
mov
dec
adc
ret
mov
mov
mov
jns
data16
push
or
and
dec
aas
xchg
mov
fcmovb
sub
fiadd
cmp
ss
inc
xchg
xchg
in
jle
xor
popa
movs
(bad)
fist
js
xchg
les
push
call
xchg
mov
push
out
in
sub
jmp
movs
outs
sub
lock
inc
push
add
out
pop
bound
push
aad
aam
mov
ror
dec
shl
or
leave
push
leave
inc
sbb
js
add
dec
add
jae
sub
jmp
dec
(bad)
arpl
sbb
xchg
fadd
inc
test
enter
lods
test
xchg
xchg
rcl
dec
ja
movs
add
adc
in
movs
pop
cld
adc
mov
mov
loope
ret
xchg
push
push
je
jno
jmp
test
mov
jbe
jnp
xchg
xchg
outs
cmps
mov
cmp
pop
xchg
sbb
sub
xchg
sub
sub
mov
das
retf
imul
inc
push
js
sub
pushf
fcomp
cmp
pop
sub
pop
pop
mov
sti
pop
xor
and
call
jmp
mov
rcr
int3
aas
sbb
jbe
jb
cmp
dec
movs
test
out
pop
(bad)
(bad)
out
mov
xlat
int3
into
cmps
(bad)
call
dec
fldenv
sub
mov
jne
or
adc
pop
add
add
jmp
fwait
test
and
in
fldenv
cli
in
(bad)
fs
sub
ds
sub
sub
inc
or
xchg
and
pop
pop
jae
sub
out
mov
ja
enter
cmp
adc
ret
push
ins
push
adc
mov
mov
popa
das
mov
xchg
and
fisubr
add
sahf
mov
mov
jge
ja
pop
in
push
jle
cmc
adc
loop
pushf
js
xchg
and
jecxz
mov
fldenv
sti
popa
popw
lock
cwde
nop
test
xchg
mov
ds
addr16
fadd
push
mov
ss
sahf
dec
jo
enter
call
or
or
mov
rol
iret
xor
sbb
in
xlat
adc
cmp
and
rcl
push
jbe
scas
icebp
leave
imul
daa
ss
jb
rcl
fldcw
test
inc
dec
scas
inc
mov
sahf
pop
mov
push
sbb
jno
pushf
inc
popa
shr
jge
and
enter
mov
or
div
mov
mov
inc
and
rcl
pop
push
push
fdivr
cli
sbb
shl
cmp
int3
xor
push
push
cwde
xchg
push
leave
mov
je
mov
sub
(bad)
out
jae
adc
mov
mov
popf
es
mov
mov
arpl
mov
out
dec
xchg
mov
lahf
and
jmp
lock
dec
and
fisub
push
ret
sar
enter
les
or
and
xor
sahf
cmp
(bad)
push
into
add
loope
push
(bad)
jg
xor
cmp
cmps
pop
iret
leave
into
stc
or
ds
xor
xor
push
inc
add
out
jb
mov
or
iret
lods
push
ret
stos
mov
lahf
test
mov
sub
mov
push
add
shl
js
js
xor
retf
imul
cld
ret
ins
cmp
pop
add
and
ins
push
inc
and
imul
test
xor
push
shl
sbb
iret
(bad)
in
mov
cmps
iret
call
ja
sti
enter
push
mov
inc
dec
(bad)
mov
call
pop
popf
adc
ret
into
pop
mov
xchg
sbb
inc
ror
mov
mov
fsubr
adc
stos
std
xchg
adc
mov
and
loop
mov
mov
ficomp
bound
pop
xchg
aaa
mov
sub
fsub
dec
ja
or
sub
pop
cmc
(bad)
fistp
sti
sub
xor
pop
movs
pop
sbb
adc
shr
push
jns
jge
xor
jp
xor
add
retf
(bad)
mov
rcl
jg
or
inc
clc
add
mov
mov
pop
fwait
out
int
mov
and
adc
stos
pop
xchg
fnsave
adc
xor
mov
ret
pop
lock
loope
ret
stc
push
in
jno
repnz
gs
addr16
pop
pop
je
cwde
sub
mov
into
pop
ss
cmps
outs
and
es
in
and
imul
pushf
rol
nop
mov
inc
inc
stc
ja
stos
shl
lock
(bad)
pusha
pop
dec
fcomp
pop
jmp
psllq
mov
call
loope
cli
cmp
add
pop
jne
test
xchg
sti
pushf
dec
out
pusha
fs
out
inc
and
cmp
in
stos
loope
mov
or
cmp
jnp
push
mov
push
shl
lds
jbe
pop
(bad)
jnp
and
scas
adc
in
add
pop
out
inc
mov
or
stc
out
dec
daa
iret
push
fistp
sti
mov
xchg
movs
cmp
mov
fwait
cmps
pop
ds
loop
jmp
aaa
(bad)
clc
data16
jp
xor
jnp
cmp
imul
lds
cmp
mov
lods
div
iret
jnp
nop
pop
cmp
call
add
jnp
lock
inc
push
sahf
imul
ss
cmc
xchg
xor
test
les
ins
push
fcomip
cmps
hlt
pop
sub
dec
and
sbb
or
xor
xor
inc
mov
stc
cmp
dec
lods
mov
mov
outs
aaa
popf
shrd
lods
(bad)
out
sar
adc
cmp
xor
in
jne
ins
add
sub
jbe
cdq
sub
inc
lahf
xchg
jbe
cmp
dec
cmp
sbb
out
add
mov
and
bound
mov
jg
jo
xchg
jmp
xchg
repnz
xchg
call
xchg
sub
push
dec
pop
and
scas
repz
cwde
popa
cmp
pop
and
xor
loope
xor
mov
movs
lods
ret
jmp
push
sub
cmp
fld
(bad)
or
pop
xchg
and
xchg
sub
jmp
(bad)
jp
fsub
cmp
aas
mov
popf
xchg
in
dec
add
inc
push
xor
loope
lock
stc
stos
inc
out
rcr
test
dec
stos
sbb
jbe
in
jmp
push
xor
sahf
dec
dec
leave
mov
or
outs
lods
(bad)
jge
xchg
xchg
dec
xchg
pop
add
leave
fxam
inc
loop
std
mov
mov
push
jo
or
push
ficom
pop
shl
imul
or
xor
push
inc
xor
xor
mov
adc
sti
adc
popf
inc
mov
rcr
push
mov
jbe
cmp
dec
adc
(bad)
cdq
inc
fst
(bad)
jmp
lahf
stos
dec
loopne
scas
xchg
push
jmp
add
and
dec
mov
mov
ins
int3
sub
test
sbb
cmp
mov
jne
jno
mov
adc
mul
mov
adc
push
cli
pop
xchg
mov
push
test
jp
cmps
loope
je
pop
loope
or
std
jl
xchg
mov
xchg
sub
inc
ret
iret
cmp
sbb
adc
lahf
dec
jb
ror
cli
fsubr
push
cmp
push
test
adc
mov
lods
push
out
clc
aad
push
cmp
mov
mov
or
sub
and
in
data16
jbe
push
push
dec
in
adc
xchg
xchg
xchg
mov
movlps
or
mov
call
out
imul
mov
inc
cmc
cmp
fld
mov
in
add
push
inc
mov
sub
mov
daa
fcmovu
mov
xor
in
(bad)
out
sbb
mov
pop
test
sub
hlt
ret
addr16
ret
pop
jmp
fs
jo
loope
bound
push
icebp
xchg
jno
sub
push
aaa
(bad)
std
in
scas
scas
dec
adc
lods
jp
or
push
mov
(bad)
call
pop
ins
lods
retf
lds
mov
les
mov
sub
and
xchg
adc
ins
sar
data16
push
fnsavew
jmp
lock
or
out
in
sub
in
lea
add
jbe
call
or
push
sahf
pusha
jmp
or
xchg
fidivr
stos
or
clc
mov
or
fdivrp
sbb
out
ficom
outs
les
jae
(bad)
xchg
mov
xor
lock
xchg
stc
cmp
add
pop
mov
sub
mov
add
or
aas
inc
test
dec
mov
call
mov
xchg
cmp
neg
push
dec
sub
pop
loopne
fwait
das
and
sbb
je
or
scas
add
jo
cli
out
add
jmp
dec
call
aam
scas
addr16
xchg
push
pusha
push
dec
push
add
nop
or
add
xchg
xor
test
mov
test
out
mov
hlt
mov
mov
sbb
rol
xchg
int3
ins
cmps
enter
and
sbb
mov
adc
sti
cmc
pusha
aaa
sahf
je
shr
js
into
test
loopne
inc
mov
inc
call
(bad)
(bad)
clc
iret
inc
cmp
(bad)
or
in
mov
fnsave
jne
lock
dec
(bad)
call
test
inc
dec
xlat
scas
lods
jmp
bound
or
mov
push
mov
add
jnp
xor
mov
mov
movs
(bad)
retf
dec
mov
xchg
jp
jmp
mov
ins
sub
mov
outs
loop
aad
inc
push
test
(bad)
adc
ins
int
lds
mov
push
in
cmp
or
adc
call
adc
xchg
cmp
rcl
ins
inc
jp
ror
ins
dec
mov
stos
rcr
mov
push
sbb
push
add
add
fsub
xchg
adc
push
mov
test
lods
sahf
add
push
add
js
in
dec
out
es
pop
jge
fstp
sbb
push
and
push
out
lock
fs
test
test
sub
cmp
or
seto
lods
mov
xchg
sbb
leave
mov
mov
xchg
sbb
(bad)
aam
stc
enter
jecxz
cmp
jp
in
jmp
js
cmps
pop
nop
dec
call
jecxz
jbe
fcom
test
int
popf
and
xchg
push
pop
ins
pusha
stc
push
sub
stc
mul
cld
inc
inc
inc
sbb
imul
mov
or
shl
mov
sbb
mov
inc
in
mov
rep
ret
jmp
cmp
gs
retf
mov
cdq
in
jno
pop
xchg
imul
fs
jbe
data16
aas
push
or
xchg
dec
shr
pop
or
push
add
shr
dec
cmps
(bad)
es
add
and
adc
mov
sahf
sahf
push
int3
lds
pop
test
and
xor
jl
sub
leave
cmp
cmp
xor
adc
sub
dec
jae
fld
out
adc
or
test
fcomp
retf
retf
bswap
loopne
ret
fistp
fstp
and
mov
fcmovb
adc
(bad)
(bad)
mov
aas
mov
je
push
pop
bnd
sbb
test
xchg
bnd
rcl
clc
inc
mov
xchg
repz
leave
in
out
xchg
push
dec
push
push
outs
mov
repnz
mov
sub
or
xchg
mov
ss
retf
xchg
xor
jae
daa
cmps
xor
jle
neg
mov
and
int3
popa
test
adc
sahf
iret
cmps
push
fistp
sub
lods
cmc
scas
sub
scas
xchg
sti
push
mov
fild
pop
mov
shr
int
jbe
push
lea
(bad)
cmp
add
mov
shl
loopne
in
jae
or
std
lds
pop
cs
frstor
jae
mov
(bad)
clc
xchg
cmp
fisttp
adc
sub
mov
jns
loopne
xor
push
xchg
das
les
loop
mov
shl
imul
arpl
hlt
stc
mov
pop
cmp
(bad)
sbb
push
add
cmps
test
ja
adc
jae
cld
mov
ss
stc
jnp
xor
jne
mov
mov
mov
fucomip
test
mov
movs
mov
sub
in
mov
xchg
pop
dec
inc
mov
int
push
jg
sbb
or
and
cmp
pop
push
out
sbb
adc
sar
imul
push
jge
and
popf
mov
xchg
push
aaa
ja
pop
adc
sub
jno
push
in
(bad)
imul
inc
inc
dec
out
and
fadd
into
jmp
sti
xor
or
adc
push
out
bound
pushf
mov
fsub
mov
in
mov
call
pop
and
frstor
inc
ss
dec
lds
sub
and
and
clc
repnz
(bad)
es
movs
mov
jl
rol
out
fisub
lahf
jmp
shl
in
aas
mov
in
mov
movs
lahf
lods
pushf
lahf
mov
inc
test
jp
inc
cmc
mov
dec
popf
inc
adc
test
stos
cmps
sti
bound
(bad)
adc
cmps
movs
push
call
je
shl
out
sub
xor
add
sub
divps
jae
add
add
sbb
sub
mov
mov
mov
xor
int3
xchg
test
pop
fld
mov
sub
xor
js
xchg
iret
add
ins
mov
rol
fadd
xor
add
xchg
xchg
adc
adc
rcl
inc
adc
sub
sbb
pop
fadd
lahf
pop
lahf
ja
adc
jne
inc
inc
arpl
pop
imul
retf
or
je
test
adc
outs
add
ss
jmp
hlt
dec
scas
xchg
int3
adc
add
jne
push
js
and
and
stos
inc
mov
pop
pop
fidiv
inc
nop
pop
and
and
sub
sbb
in
rcr
or
nop
pop
add
cmps
fisub
repz
sbb
or
test
loope
xchg
cmc
cmc
shl
add
fnstsw
jb
sbb
pop
jbe
mov
lock
xlat
push
or
arpl
sub
mov
pusha
and
enter
adc
and
fdivr
fcom
push
mov
sub
leave
sbb
retf
and
int3
shl
or
cmp
js
sub
cmp
pop
dec
aaa
ins
sbb
pop
data16
shl
ja
retf
xchg
pop
jp
shl
jns
rol
add
mov
ret
push
call
ficom
int3
jb
sub
jmp
retf
mov
scas
aad
dec
mov
pop
push
mov
dec
outs
xor
sbb
das
test
and
mov
lds
mov
pop
pop
fistp
test
push
adc
push
into
xor
pop
cs
sub
xor
cmps
push
inc
and
cmps
cli
pop
std
jg
jp
imul
retf
or
(bad)
mov
outs
loopne
jno
add
fbstp
movs
or
hlt
push
mov
pop
lock
cmp
or
enter
jbe
mov
xchg
call
retf
rcl
mov
push
shl
out
adc
mov
push
sbb
mov
popa
lea
sti
push
pop
jle
std
out
fmul
jmp
inc
pop
jp
or
(bad)
jo
sbb
add
repnz
ret
add
mov
imul
and
popa
push
daa
jnp
mov
ins
ss
js
popf
popf
or
rcl
push
icebp
mov
mov
jns
cmps
mov
les
dec
inc
mov
out
sti
xor
sar
or
sar
inc
jnp
pop
sbb
xchg
sbb
pop
pop
hlt
bound
mov
std
fisubr
jg
and
test
xor
movs
retf
mov
jge
popa
pop
test
rol
xor
dec
sbb
hlt
sahf
pop
outs
dec
dec
dec
xor
dec
jp
sub
and
je
adc
push
mov
dec
dec
outs
mov
jle
stos
fisttp
adc
mov
nop
jae
bnd
rcr
js
test
(bad)
fsubr
sbb
xor
in
outs
cwde
mov
jle
loopne
add
lods
inc
sbb
rcr
lahf
cdq
inc
and
dec
or
dec
mov
loope
add
aad
add
hlt
mov
ror
(bad)
loopne
jge
lds
dec
gs
mov
cmp
rol
les
shl
cmp
lahf
pushf
call
into
cmp
mov
mov
or
adc
mov
or
mov
pop
fistp
inc
popa
loopne
cmp
pop
lods
xchg
std
add
(bad)
std
add
and
jbe
ja
cmp
mov
hlt
lds
out
or
xor
and
sub
mov
(bad)
loop
push
adc
fwait
popf
xor
add
pop
fimul
pop
cmp
test
push
dec
fnstsw
sbb
cs
fcomp
data16
mov
push
push
out
or
bound
mov
mov
mov
stc
xor
gs
add
ins
adc
retf
aas
lods
dec
jmp
inc
mov
xchg
in
xor
out
sbb
cmps
lea
das
fdivr
xlat
(bad)
stos
retw
inc
in
add
retf
xor
hlt
pop
rcr
adc
push
pushf
sbb
std
xchg
addr16
sbb
dec
ins
xor
jecxz
arpl
icebp
scas
mov
dec
sub
mov
repz
inc
pushf
mov
mov
xchg
adc
fucomip
out
popa
rol
ror
sahf
out
adc
repnz
mov
sbb
xchg
(bad)
and
sub
dec
mov
loope
ds
adc
pop
(bad)
sti
sub
sbb
rcr
inc
fiadd
scas
scas
cmps
mov
mov
inc
in
in
mov
mov
cwde
popa
fs
sub
inc
or
(bad)
cmp
ret
inc
out
gs
mov
rol
xchg
mov
or
xor
sub
popf
mov
xchg
xor
push
loope
cmp
mov
sub
add
fisub
inc
std
jecxz
mov
and
or
loope
cmp
test
push
add
xchg
stc
imul
(bad)
push
icebp
mov
mov
sub
and
dec
or
test
adc
lea
dec
xchg
pop
lods
ds
dec
push
fild
in
jp
ja
test
fwait
xlat
xchg
dec
inc
stos
(bad)
cmp
xor
leave
dec
dec
inc
push
outs
push
fsub
sbb
or
adc
xchg
push
cmc
add
and
or
repz
mov
les
pop
test
push
pop
sub
push
pusha
mov
mov
test
pop
mov
or
les
inc
out
jmp
nop
mov
in
loopne
pushf
push
fadd
rcl
in
enter
and
rep
inc
or
push
and
xchg
xchg
clc
repnz
es
jns
dec
adc
rol
loope
cmc
lods
pop
ret
loope
inc
push
js
mov
mov
fadd
dec
adc
ins
loopne
cmp
retf
into
sub
movs
ficomp
ss
jns
outs
xchg
sub
jge
and
pop
jmp
push
add
push
dec
ds
hlt
inc
je
push
inc
(bad)
mov
and
cs
ja
shr
repz
fs
and
rcl
aam
mov
daa
cli
inc
cwde
shr
aad
mov
jbe
ss
ins
aam
xor
sub
xor
aad
push
fsub
out
fadd
aad
test
cwde
cs
out
fadd
sbb
pop
cwd
fld
mov
mov
sbb
sub
in
mov
(bad)
mov
xchg
mov
and
dec
push
pop
add
frstor
push
fisttp
sub
enter
push
scas
push
dec
push
pop
into
add
jns
mov
outs
mov
cmp
data16
gs
sbb
clc
xchg
and
and
cwde
jl
or
jl
mov
add
push
jns
movs
gs
mov
xchg
retf
mov
aad
push
xchg
mov
cmps
lods
mov
mov
imul
jp
adc
pushf
mov
mov
mov
ret
aad
popa
ja
aaa
xor
xchg
xlat
mov
push
mov
test
mov
mov
pop
retf
cmp
xor
mov
xor
push
movs
xchg
in
jmp
aas
rol
bound
rcl
lods
rol
out
loopne
pop
xchg
and
in
shl
mov
sbb
inc
push
xchg
cmps
cmp
dec
adc
fucom
or
loopne
dec
mov
stc
std
xchg
test
mov
call
mov
pop
jno
jg
dec
push
ins
or
and
push
mov
fcom
ret
push
int
adc
sub
adc
mov
scas
pop
cmp
sub
(bad)
cs
lea
or
(bad)
and
mov
pushf
xchg
out
ds
jno
repnz
fist
mov
outs
(bad)
mov
mov
xchg
stos
xchg
push
and
cmp
hlt
repnz
and
js
cwde
jnp
mov
and
xor
sub
movs
ds
mov
rcl
or
cmp
mov
int
push
or
test
adc
(bad)
sbb
inc
or
push
lds
out
mov
and
sbb
xor
icebp
mov
push
or
pop
(bad)
cld
nop
pop
div
sbb
retf
xor
sti
xchg
sub
daa
int
jg
adc
retf
fwait
cmp
retf
cmp
aas
leave
not
cld
or
(bad)
popf
sbb
cmps
in
ins
clc
mov
clc
jmp
sahf
add
xor
adc
cmp
popf
or
mov
and
mov
(bad)
cmp
fsub
mov
xchg
mov
lods
popa
das
add
mov
inc
pop
mov
in
sbb
popf
add
dec
mov
add
or
pop
test
stc
nop
inc
push
cmps
xor
adc
stos
iret
inc
pop
mov
ss
inc
enter
mov
test
(bad)
mov
iret
int
sub
lock
out
adc
inc
push
ins
jmp
mov
push
and
pushf
cmp
jmp
sar
outs
sbb
arpl
pop
out
aam
or
test
mov
lock
stos
fs
enter
sbb
pop
or
jmp
shr
retf
cmc
mov
pop
fstp
leave
xchg
fidiv
hlt
pop
(bad)
(bad)
icebp
mov
fs
mov
mov
mov
outs
sti
inc
mov
adc
xchg
(bad)
xchg
add
js
or
cmc
pop
mov
mov
test
scas
adc
xchg
jnp
in
mov
jne
mov
push
and
test
xlat
mov
ds
out
mov
repz
add
mov
fcomip
push
cmp
or
dec
dec
scas
inc
xor
dec
sbb
cli
xor
retf
daa
or
ss
pop
push
push
jns
inc
rcl
std
bound
inc
bound
mov
pop
test
outs
rcr
mov
aam
out
test
gs
xchg
fist
pop
mov
(bad)
sbb
dec
es
int3
jb
and
fisttp
adc
stc
scas
rcr
inc
xor
(bad)
test
push
cmp
nop
cmp
pop
jge
sar
enter
lahf
adc
add
and
or
sbb
inc
stc
adc
es
jg
bound
cmp
xchg
outs
and
jp
and
aad
jecxz
pop
(bad)
jl
arpl
cmp
pop
and
rol
cmps
xchg
cmps
cmc
lahf
movs
inc
jg
jo
lock
loopne
scas
push
jo
rcl
cmp
xchg
inc
xor
aaa
mov
jne
rcl
adc
cmc
and
icebp
js
pop
(bad)
cmc
out
test
fld
mov
repz
cmp
ret
or
ins
enter
scas
pop
inc
mov
test
pop
adc
mov
packssdw
adc
enter
mov
jae
adc
lods
add
xchg
inc
scas
mov
test
je
js
daa
or
std
dec
ja
fs
mov
rcl
test
jle
sbb
icebp
stc
aas
sahf
leave
xor
adc
cmp
pop
repz
repnz
test
(bad)
and
cs
inc
dec
inc
aas
mov
adc
mov
sub
add
into
dec
bound
cld
(bad)
push
daa
in
jo
pop
mov
test
mov
ds
gs
loope
data16
(bad)
stos
xchg
ror
test
arpl
mov
push
das
mov
repnz
shr
xor
clc
adc
sbb
push
jae
jbe
xchg
push
pop
retf
sub
adc
add
sub
jb
mov
sti
jo
(bad)
push
push
xor
dec
add
sbb
xor
stos
xor
aad
imul
bound
push
pop
icebp
jo
cmp
cmps
mov
mov
sub
xlat
sbb
scas
jl
and
mov
mov
aam
aad
(bad)
and
add
das
movs
and
loopne
cmp
xchg
dec
pop
idiv
jge
mov
or
ins
xchg
mov
sahf
(bad)
icebp
test
pop
xchg
adc
and
fist
add
pop
mul
(bad)
in
cmp
inc
inc
pop
xchg
xchg
cdq
fwait
sti
cli
mov
mov
and
xchg
sbb
outs
cmp
xchg
mov
cwde
call
scas
mov
sbb
es
test
or
in
lea
test
inc
mov
into
loop
mov
and
cmp
pop
outs
js
shr
fisttp
or
test
mov
pop
je
mov
and
mov
test
jo
dec
mov
jg
test
mov
(bad)
ds
std
ja
xchg
lahf
and
aas
dec
rcr
enter
stos
sbb
mov
fwait
mov
test
in
mov
aam
into
cmps
lods
push
pop
jl
sbb
outs
sar
mov
mov
int3
loope
paddw
call
mov
adc
sub
sar
and
lods
jns
xor
outs
ins
bound
jb
sub
frstor
pop
(bad)
or
pop
jmp
push
in
mov
pop
sub
scas
test
cmp
popa
pop
xor
pop
ds
mov
icebp
pop
jbe
push
cmps
mov
jge
mov
mov
cdq
in
adc
retf
ret
mov
mov
repnz
mov
cmps
fs
dec
pop
sti
cmp
ret
std
adc
test
das
ins
add
push
call
mov
inc
pop
or
adc
inc
adc
dec
jl
push
xchg
out
adc
mov
fidivr
or
adc
(bad)
cdq
jns
nop
rcr
sbb
cmp
aad
(bad)
xor
ret
jbe
imul
dec
xchg
pop
fs
iret
cwde
jae
out
cld
sbb
sub
(bad)
adc
inc
and
mov
xor
push
lahf
scas
lea
sbb
cmp
hlt
dec
rcl
push
or
inc
neg
stc
cmps
cmp
cmp
les
loope
add
std
stc
fmul
int
mov
ror
sbb
xlat
rol
ins
jae
stc
scas
cmc
(bad)
lods
scas
or
xor
adc
push
pusha
and
adc
add
arpl
test
add
loope
dec
inc
lods
icebp
in
das
mov
test
xor
mov
sahf
iret
add
fimul
movs
mov
jno
mov
mov
mov
loopne
jl
lods
sub
adc
or
std
rcr
imul
or
aad
add
mov
ins
js
cmp
in
fistp
or
inc
jge
jb
push
clc
xchg
clc
gs
cmps
out
mov
test
test
and
lods
jge
retf
sbb
or
retf
sub
call
inc
test
divps
mov
push
lods
sub
mov
mov
jns
out
stos
mov
adc
call
cmp
sub
clc
shl
push
add
mov
in
xchg
sti
jne
xor
popf
(bad)
cld
in
mov
(bad)
stos
(bad)
push
fisubr
xor
pop
push
cmps
and
or
and
aaa
xlat
hlt
in
inc
lock
cmp
pop
jecxz
mov
pop
ret
add
xchg
in
movs
in
sbb
jl
iret
shl
sar
cwde
pop
stos
jnp
mov
inc
loop
adc
inc
pop
pop
(bad)
in
xchg
mov
and
adc
fstp
in
pusha
add
jo
retf
xor
mov
dec
and
jl
cmps
jmp
stos
mov
scas
sub
retf
mov
jo
cmps
adc
fistp
aad
dec
jns
xlat
aam
neg
sbb
fdivr
in
or
sbb
mov
dec
dec
out
push
adc
enter
xchg
call
(bad)
loop
mov
add
imul
jbe
xchg
ins
adc
mov
je
xchg
call
std
popa
mov
je
push
cmp
pop
pop
and
repz
and
(bad)
fcom
jle
shr
jl
mov
sar
rol
fsub
cs
sub
or
adc
xor
and
call
pop
inc
push
sub
(bad)
std
int3
ds
test
mov
scas
inc
dec
push
jecxz
and
stc
xchg
fwait
arpl
jnp
add
sbb
into
inc
adc
ret
sbb
jns
or
add
ffreep
jae
mov
cmp
xchg
in
test
xor
xchg
jg
pop
or
stos
pop
(bad)
call
fwait
sti
fs
loop
lds
addr16
daa
add
push
ja
mov
gs
scas
sbb
or
enter
and
mov
sbb
or
mov
call
dec
aaa
or
xchg
xor
push
int
xchg
je
push
lods
sti
jmp
cmp
std
sbb
xor
inc
adc
popf
sbb
scas
shl
cwde
iret
pop
cmp
jo
jne
inc
cmp
inc
jnp
(bad)
and
adc
cli
sub
int3
addr16
push
fbld
adc
dec
jne
repz
repnz
xor
sbb
cmp
push
xor
jns
icebp
cmps
mov
mov
mov
dec
dec
out
les
pusha
cld
enter
jne
xchg
xlat
mov
and
pop
mov
out
test
pop
mov
pop
xchg
hlt
cmps
int
jmp
cdq
xor
out
sub
lahf
jnp
pop
jne
or
les
je
jnp
sar
jle
jae
shl
xor
nop
adc
or
push
aas
jno
sbb
push
fcom
mov
mov
xor
ffree
out
mov
(bad)
xchg
xchg
xchg
clc
inc
push
mov
and
mov
jne
mov
data16
xchg
outs
jns
arpl
test
xchg
lea
xor
lods
adc
jle
dec
(bad)
mov
lahf
cli
cmc
int3
and
loopne
xor
into
pop
xor
push
mov
sbb
in
jo
jecxz
retf
sti
(bad)
mov
pop
fwait
lods
pop
das
mov
js
out
inc
(bad)
(bad)
jmp
inc
jmp
and
pop
leave
fidivr
out
enter
pop
xchg
sub
aas
out
mov
adc
inc
inc
mov
jne
retf
mov
push
scas
call
popa
arpl
mov
fwait
or
lods
mov
mov
push
xor
sbb
cmp
jb
test
adc
hlt
neg
leave
sub
stos
or
xchg
and
aas
pusha
lods
jmp
fcomp
lock
ret
in
mov
pushw
ss
add
sub
add
lahf
and
pop
popf
jb
jp
int
inc
push
call
inc
jbe
das
jmp
mov
xor
or
cmps
arpl
mov
sar
nop
xor
adc
cmp
call
aam
repnz
jmp
icebp
xchg
hlt
or
outs
shl
mov
add
inc
jb
mov
mov
ds
xchg
sbb
adc
dec
pop
mov
jmp
xor
lods
add
sub
add
mov
(bad)
movs
cli
iret
push
icebp
jno
xchg
sub
sub
add
cmp
dec
or
sub
sub
in
dec
pop
cli
mov
ins
shr
cs
es
ins
and
inc
cli
test
mov
xor
xchg
and
jecxz
pop
imul
nop
leave
mov
(bad)
test
add
lock
fidivr
mov
rcl
(bad)
mov
cmps
push
xchg
push
push
jp
mov
scas
sub
sahf
pusha
xor
dec
repz
pop
fwait
sbb
jg
or
cmps
das
cdq
adc
sbb
imul
or
inc
inc
sub
jl
inc
and
or
jecxz
sbb
fst
push
ja
xlat
cwde
fnstenv
fsub
iret
push
cmps
out
sub
add
(bad)
std
xchg
sub
cmc
sahf
mov
or
sub
sbb
push
es
hlt
push
mov
mov
jge
cli
sub
repnz
retf
enter
and
enter
push
xchg
es
icebp
mov
iret
pop
aaa
int3
ins
mov
pushf
push
push
loopne
xchg
add
xor
adc
jo
mov
aad
data16
inc
dec
sbb
push
adc
das
mov
push
jae
test
movs
pop
add
pop
cmps
mov
cmps
scas
gs
push
test
outs
mov
inc
fcomp
add
mov
ds
dec
and
lea
ret
add
aad
push
ror
repnz
pop
enter
sub
mov
into
(bad)
push
cmp
sub
cwde
mov
jnp
mov
pop
jle
shl
pusha
pop
das
cwd
adc
mov
ret
pop
cmp
mov
add
xchg
test
add
dec
mov
shr
hlt
add
scas
xor
push
jg
call
push
fist
lock
push
mov
fld
jo
xchg
and
mov
sbb
int
(bad)
sub
and
popf
jns
jnp
xchg
test
and
and
into
mov
and
jle
pop
inc
or
jl
mov
add
inc
mov
nop
in
inc
push
dec
stos
inc
pop
icebp
jmp
in
aas
pop
jmp
xchg
in
pushf
jbe
xor
pop
pop
inc
xchg
ret
(bad)
mov
stc
xor
jb
or
fwait
jno
mov
fstp
inc
mov
or
xor
mov
sbb
xchg
cdq
sub
pop
nop
in
mov
stos
rcr
sbb
call
add
jb
mov
(bad)
dec
gs
cmp
sub
jne
mov
stc
xchg
xlat
out
add
aad
sub
call
dec
and
dec
jns
cs
ja
in
and
jle
test
nop
or
xchg
adc
xor
mov
mov
cld
data16
push
cmps
inc
push
mov
scas
xor
xor
inc
repz
sar
lods
mov
pop
cdq
daa
ror
or
repnz
mov
stos
sub
sub
xchg
movs
rcl
mov
ds
sub
lds
xor
jne
jg
add
mov
sbb
pop
nop
and
and
cmp
scas
test
xor
mov
jbe
scas
jmp
xchg
inc
sub
sub
data16
lds
sub
adc
pop
dec
ds
cmp
jmp
jae
rcl
mov
ss
jnp
cmp
sbb
cwde
out
inc
inc
loop
push
ficomp
std
sub
and
pusha
add
out
pop
jb
sub
inc
mov
push
add
(bad)
mov
jmp
es
mov
cmps
outs
test
repz
xchg
mov
rep
inc
sbb
mov
xlat
ins
sbb
or
mov
rcr
push
cs
pop
data16
xor
and
add
rcr
dec
pusha
xor
(bad)
mov
mov
popf
imul
mov
xchg
aaa
out
fs
int3
scas
dec
xchg
call
jo
out
pop
sub
or
ja
inc
movs
mov
gs
mov
pop
mov
cmps
push
push
add
xchg
sbb
fcom
cli
mov
pop
int3
mov
jge
add
es
mov
inc
sbb
push
ficom
sbb
clc
jae
lea
(bad)
mov
imul
sbb
pop
nop
pushf
fs
sbb
ds
cld
imul
and
out
and
jp
push
daa
push
adc
xchg
pop
call
lock
data16
jge
ss
imul
adc
daa
add
es
mov
std
adc
dec
xchg
cmps
dec
retf
stos
movs
mov
pop
adc
rcl
(bad)
dec
int3
cwde
sub
or
aam
sub
call
jle
dec
dec
jp
mov
push
ja
inc
enter
xchg
push
jp
loop
cdq
sbb
outs
cmp
gs
fst
sub
and
scas
nop
sbb
add
scas
and
cld
lock
push
adc
retf
vsubpd
xchg
push
jp
push
(bad)
data16
outs
sub
scas
cmp
pop
(bad)
push
pushf
fsubr
ds
jmp
and
addr16
xchg
inc
inc
xchg
ret
es
fidivr
fild
inc
cmp
retf
and
xor
inc
push
sbb
movs
or
jmp
cmp
(bad)
jmp
push
add
dec
sub
sbb
stc
mov
xor
dec
ins
sbb
cld
dec
out
aas
pop
pop
cmc
xchg
push
xor
inc
cmp
adc
jp
sbb
sbb
(bad)
xchg
push
push
pop
test
xchg
cmp
push
sub
adc
in
or
jle
jo
add
mov
les
mov
shl
cmp
std
cs
outs
icebp
dec
je
clc
es
das
jne
je
and
lahf
inc
mov
xchg
ret
jbe
mov
push
sbb
dec
lea
cmp
test
cmp
cmps
add
cli
sub
(bad)
ins
daa
popa
xchg
lahf
cmps
dec
push
arpl
pop
mov
sbb
mov
jns
ds
ret
add
mov
xchg
fucomp
push
(bad)
sti
cmp
cdq
repnz
add
jmp
jmp
mov
js
not
jmp
adc
push
mov
xchg
mov
ret
outs
xchg
push
dec
mov
inc
adc
mov
mov
adc
and
lods
ins
mov
jbe
mov
jns
mov
sbb
push
test
arpl
mov
mov
mov
or
mov
xchg
jge
push
sub
push
ret
cmp
cmp
xor
mov
sbb
icebp
les
xchg
inc
adc
xchg
push
lods
mov
das
xlat
dec
js
jae
lods
loopne
fldenv
popf
test
pop
invd
and
or
sti
repnz
pushf
popa
mov
add
daa
sub
inc
(bad)
popa
hlt
jmp
push
jne
mov
sar
arpl
scas
ret
nop
mov
cs
(bad)
jbe
xor
inc
js
out
xchg
daa
dec
mov
inc
xchg
sub
lods
mov
jp
(bad)
imul
or
je
mov
and
(bad)
sub
stc
fisttp
jae
xor
adc
jmp
xchg
adc
mov
xchg
rol
movs
(bad)
jmp
into
lahf
scas
xchg
and
movs
fdivr
jno
mov
loope
pop
mov
and
std
adc
in
cmp
or
les
(bad)
icebp
cmp
arpl
cdq
int3
xor
fadd
aad
mov
out
mov
les
dec
mov
fsubr
mov
(bad)
push
jns
mul
cmp
into
leave
cs
idiv
mov
cmps
or
or
pop
sub
int3
dec
and
repnz
sub
jmp
fcom
mov
fadd
movs
icebp
bound
mov
in
push
lock
xchg
dec
adc
xchg
stos
sbb
mov
jbe
aam
ins
shr
dec
jae
dec
or
mov
or
hlt
or
pusha
ud0
mov
scas
outs
ins
div
(bad)
inc
scas
cmp
fisttp
test
or
xchg
and
mov
sub
dec
add
mov
adc
pop
leave
loop
mov
lea
sbb
push
inc
sbb
adc
jp
test
sub
ficomp
sahf
mov
pop
add
stos
fsubp
(bad)
cmp
pop
xor
addr16
xor
fild
(bad)
addr16
xor
add
shl
or
mov
fwait
xor
and
push
adc
test
sub
jg
xchg
iret
mov
and
popa
xchg
shl
mov
push
dec
inc
cwde
div
out
in
lahf
mov
dec
sbb
mov
adc
push
cs
out
push
pop
mov
shl
ja
cmps
rcr
sar
call
fcomp
jne
jae
adc
jle
cmp
jl
loop
js
cld
scas
add
lahf
repz
xchg
mov
nop
sbb
xor
mov
mov
push
or
mov
or
mov
lds
mov
loop
mov
adc
stc
push
push
loope
jmp
push
imul
inc
fucomp
xor
int
jl
xor
sahf
sar
xchg
mov
mov
out
push
popa
pop
inc
mov
sbb
xor
int
mov
(bad)
cdq
inc
mov
jae
pop
mov
sub
sbb
xchg
or
inc
aas
cmps
stc
lods
sti
imul
dec
lods
mov
es
or
mov
ret
mov
pop
or
loop
pop
sti
out
stos
in
call
ds
xor
je
sar
xor
add
dec
xchg
mov
add
or
jae
sahf
fisub
in
scas
clc
cmp
cld
call
or
adc
inc
inc
jbe
mov
xor
test
ja
ds
popa
mov
mov
push
jne
das
add
xchg
stos
push
push
rol
cmps
sbb
repz
jbe
adc
lea
push
ins
test
jo
(bad)
or
xor
or
xchg
mov
nop
or
fdiv
popa
mov
xor
mov
iret
out
loope
btr
or
cwde
fwait
mov
sbb
add
jb
xchg
lock
shl
mov
inc
sar
int
jge
int
fld
xor
sbb
jae
pop
xchg
inc
fist
cmps
nop
pop
hlt
aaa
vpsubd
sbb
mov
or
and
push
aam
jg
call
xchg
mov
(bad)
xchg
xlat
or
sbb
movs
push
les
push
cmp
test
in
stos
stos
data16
movs
fs
imul
and
cmp
repz
mov
sahf
ficomp
push
cmp
jbe
jg
sub
loope
repz
mov
or
cwde
lock
mov
xor
xchg
cwde
xor
xor
inc
addr16
outs
pop
and
enter
jbe
inc
nop
cdq
cwde
(bad)
fcmovbe
jb
xchg
add
sar
and
call
icebp
lds
mov
aaa
fsubr
(bad)
retf
cmps
int3
into
mov
adc
push
ret
aam
sub
xchg
retf
mov
stc
inc
mov
call
call
sbb
hlt
adc
mov
mov
push
je
sub
enter
pop
pop
pop
dec
fwait
(bad)
cmp
push
push
es
cmp
push
popf
pop
push
rcl
jo
lods
mov
loopne
outs
jp
sub
fstp
iret
mov
gs
(bad)
jmp
inc
sbb
popa
pusha
retf
aas
in
and
sbb
and
mov
adc
and
ror
push
fmul
and
or
cmps
movs
js
stc
mov
loope
xor
(bad)
cmps
in
jle
cmps
fldl2e
mov
lahf
sub
mov
fsubr
outs
(bad)
call
dec
stc
dec
dec
call
and
arpl
lock
cmps
(bad)
hlt
arpl
sub
xor
aam
into
pop
mov
(bad)
and
sub
add
addr16
arpl
adc
ja
aam
lods
bound
push
push
cwde
retf
sahf
push
jmp
jmp
sub
les
fadd
(bad)
pop
or
shl
cdq
data16
in
(bad)
cdq
jecxz
jl
xchg
ins
push
or
(bad)
clc
out
es
scas
xchg
and
add
icebp
fst
movs
ins
jg
xchg
outs
std
pushf
dec
sti
jp
cmp
dec
imul
dec
ins
jmp
rcr
pop
in
jp
hlt
fst
adc
xor
push
outs
add
jne
adc
dec
cs
(bad)
push
stos
mov
(bad)
pop
cmp
mov
clc
addr16
daa
cmp
ret
push
add
(bad)
dec
sub
xchg
add
dec
sub
jl
and
jns
pop
pop
adc
mov
call
test
nop
nop
leave
cld
in
cmp
jg
ins
imul
dec
outs
mov
or
ja
hlt
jnp
adc
and
adc
push
xor
sub
push
sti
cmp
add
dec
pop
mov
jmp
icebp
sub
loope
or
ins
lock
hlt
mov
or
stc
ret
fdiv
mov
in
mov
xchg
cmp
mov
fsubr
xor
xor
jns
aas
ftst
adc
dec
add
in
inc
out
push
(bad)
std
mul
push
scas
iret
dec
cmc
push
jbe
ds
ror
repnz
xor
add
jmp
and
cmp
and
mov
dec
dec
and
jge
jb
pop
retf
jno
or
sub
sbb
sbb
test
mov
in
shr
pushf
dec
cmps
daa
cmp
cmc
jg
mov
sbb
cs
push
or
leave
js
cld
out
out
dec
movs
ins
pop
xor
mov
sti
or
aam
xchg
cmp
cmp
push
dec
lock
int
push
jmp
(bad)
rcr
push
mov
xchg
stos
call
aad
xor
and
push
cs
xchg
push
nop
cmc
repnz
push
fnstcw
mov
xchg
loopne
icebp
mov
movs
pop
lea
sbb
mov
push
shr
jbe
imul
cli
in
fnstsw
or
retf
mov
mov
mov
add
adc
outs
adc
in
pop
lods
push
jg
push
outs
xlat
adc
ret
(bad)
mov
out
sbb
pop
nop
(bad)
push
push
push
pop
jmp
sar
(bad)
in
imul
test
jmp
and
stos
jmp
mov
push
stc
mov
repz
push
mov
or
ss
cwde
sbb
jg
mov
leave
imul
mov
cdq
or
xchg
cli
xor
retf
push
pop
rcl
(bad)
xor
call
and
mov
je
inc
nop
faddp
leave
mov
pop
lods
enter
jmp
aas
std
mov
push
ja
push
pop
cmp
sub
pop
adc
test
mov
jl
(bad)
cli
stos
adc
pop
retf
mov
rcl
in
mov
(bad)
jg
mov
mov
pop
dec
ret
mov
mov
aas
(bad)
push
repz
outs
sti
cwde
sub
pop
cmp
sub
enter
out
fdivr
xchg
xchg
or
nop
adc
cmp
fmul
dec
mov
add
mov
test
loope
stos
cmps
clc
inc
cmp
jmp
xor
out
mov
lea
int3
mov
call
cld
iret
sti
ret
sbb
push
add
div
or
pop
pushf
mov
push
cmp
bound
addr16
ins
push
lock
mov
sub
inc
jle
nop
(bad)
aaa
lds
mov
(bad)
push
pop
in
jmp
gs
gs
inc
xchg
jg
xchg
and
fcomp
mov
nop
(bad)
clc
add
cs
sub
(bad)
adc
xor
cmp
ds
jmp
(bad)
sahf
mov
or
rcl
pop
(bad)
fsub
jmp
ror
inc
mov
jg
fidiv
inc
outs
adc
or
ss
mul
imul
cmps
out
in
dec
test
sbb
frstor
cwde
or
pop
cmp
dec
popa
cmp
stos
pop
sbb
and
dec
dec
push
jl
test
or
inc
lock
mov
pop
adc
fisub
int
adc
and
in
fisubr
lods
jp
jecxz
(bad)
inc
or
aad
pop
dec
adc
inc
xchg
neg
in
dec
sub
and
pop
mov
int
push
mov
int
and
jmp
pop
cmp
and
aaa
(bad)
dec
inc
shl
dec
stos
pop
daa
daa
ins
int3
aas
or
add
cwde
jo
fsubr
bnd
rcl
(bad)
sahf
movs
xchg
dec
inc
retf
push
pop
mov
in
fcomp
fsubr
je
ret
pusha
sbb
lea
scas
pushf
lea
xchg
sub
xchg
out
ins
stc
pop
scas
xor
stos
dec
mov
jmp
repnz
sub
xchg
add
out
add
adc
jnp
outs
inc
fisttp
inc
cs
adc
or
call
mov
stos
pop
outs
icebp
or
cli
add
scas
mov
daa
mov
shr
xor
jle
push
call
(bad)
(bad)
(bad)
aad
test
jo
and
jbe
sub
sub
jmp
mov
imul
hlt
addr16
sbb
add
arpl
fs
icebp
scas
imul
pusha
jbe
mov
xchg
jmp
retf
dec
cli
sahf
pop
xchg
adc
jge
addr16
stos
stc
cdq
push
loopne
xor
hlt
je
or
push
das
test
aas
jle
loope
or
jno
sub
mov
jbe
and
jae
cmp
xchg
adc
out
jmp
xchg
mov
es
jae
fist
mov
sysenter
fs
cmp
xchg
data16
xchg
les
xchg
scas
js
xor
mov
data16
lock
mov
call
(bad)
or
push
shr
or
mov
dec
and
outs
push
in
ret
into
adc
loop
cmps
js
push
mov
cmp
(bad)
orps
retf
jmp
inc
cmp
push
sbb
cmp
xor
ret
xchg
lahf
pusha
inc
fldl2t
rol
or
movs
sub
push
inc
loopne
icebp
xchg
jg
pop
loope
cdq
xor
jg
sub
fmul
dec
rol
xor
sub
ss
mov
mov
dec
add
jo
ins
sub
sub
cmp
ja
cdq
cmp
add
adc
loopne
pushf
fs
xor
hlt
jno
adc
fldenv
ss
push
rcr
ret
xor
movs
sub
mov
stc
mov
fwait
push
jmp
push
xchg
and
mov
cmp
rcl
pushf
or
test
push
daa
call
push
mov
or
mov
mov
fcomi
int3
icebp
sub
mov
imul
cmp
add
mov
mov
pushf
pop
fs
push
in
dec
sbb
out
cdq
mov
pop
in
sbb
push
pop
pop
mov
(bad)
jno
repnz
dec
mov
aad
(bad)
adc
jp
sbb
out
mov
jecxz
or
loop
fidiv
fisttp
jae
add
dec
sbb
adc
sar
push
pop
adc
pop
setns
inc
dec
fsubr
sbb
inc
xor
repnz
dec
fsubp
xor
fmul
dec
or
push
add
test
(bad)
push
retf
out
popa
retf
lods
xor
fimul
push
push
xor
xchg
mov
xchg
or
sbb
stos
scas
lahf
test
adc
cmps
fidivr
jns
push
neg
jle
mov
out
cmp
mov
nop
mov
gs
out
adc
repz
gs
pop
lea
outs
aad
cwde
call
(bad)
cld
in
sti
xchg
dec
mov
mov
int3
jns
fst
adc
inc
mov
js
shr
push
jo
iret
add
or
cmps
call
jge
xchg
sbb
idiv
sbb
inc
ror
data16
inc
inc
push
ds
shl
mov
test
mov
xor
mov
int
jecxz
add
cmp
sbb
jb
shl
and
adc
dec
mov
dec
and
mov
stc
inc
dec
pop
das
jns
xor
iret
fst
mov
and
aad
inc
ficomp
jae
out
jne
fdiv
xchg
test
and
jg
pop
add
and
mov
clc
lods
mov
jbe
xor
xchg
lods
lds
fisttp
iret
pop
add
xchg
push
mov
mov
arpl
ins
lea
js
test
enter
lods
push
adc
sar
daa
mov
cs
dec
lods
in
fwait
xchg
stc
xor
imul
pop
and
sbb
lods
jge
imul
ins
clc
ss
loope
mov
popa
call
cld
test
pop
cmp
xchg
and
sbb
int3
pop
xor
adc
je
ja
mov
je
or
or
mov
fadd
pop
adc
dec
repnz
or
push
mov
lock
cmp
xor
out
cdq
xor
fistp
or
adc
(bad)
xor
sbb
add
hlt
push
or
clc
daa
rcr
cli
mov
jae
in
clc
shr
inc
jle
leavew
sbb
dec
(bad)
jmp
mov
pop
lock
inc
cmps
stos
mov
loop
add
sbb
in
push
add
add
pop
es
add
hlt
dec
jae
arpl
pop
jecxz
sub
std
inc
pop
sub
push
xor
pop
cmp
sar
jle
in
pop
std
mov
and
repz
pop
test
retf
and
scas
mov
xor
pop
xor
loopne
mov
sub
cmc
and
and
bound
mov
xchg
and
lods
(bad)
rcr
xchg
test
add
imul
aas
fwait
cdq
rcl
push
adc
mov
or
popf
mov
cld
adc
xor
adc
push
lods
inc
add
mov
xchg
mov
test
jecxz
loop
call
scas
sbb
mov
pop
jecxz
gs
(bad)
fld
mov
adc
mov
div
jge
mov
and
pop
pop
fcom
out
push
adc
xor
shr
lea
push
inc
test
sbb
xor
retf
adc
lahf
mov
lds
pop
lods
mov
and
inc
test
es
pop
fistp
outs
push
pop
pop
jae
test
mov
or
sub
icebp
add
fidivr
mov
daa
fld
nop
cwde
lds
repz
jne
add
dec
test
aaa
cmp
mov
cmp
mov
mov
(bad)
fimul
xchg
push
pop
xor
stos
cmc
dec
test
pop
xchg
push
add
sbb
sub
mov
inc
(bad)
xor
(bad)
cdq
dec
xlat
xor
(bad)
jae
out
idiv
xchg
mov
aam
xchg
sbb
sbb
adc
and
xchg
shl
stc
mov
jmp
popf
mov
mov
cs
mov
add
pop
test
mov
xchg
rcl
mov
mov
pop
mov
jne
js
movs
lea
in
call
push
test
or
mov
push
sbb
and
out
test
mov
adc
test
xchg
xor
jge
sbb
mov
pop
cwde
add
push
shr
je
mov
jnp
mov
add
add
mov
adc
fcomp
pop
outs
cmp
movs
mov
fisub
ja
cmp
lods
push
gs
xor
sub
sahf
xor
test
imul
or
mov
jns
mov
jge
jmp
adc
ficomp
(bad)
add
cmp
cmp
fistp
xchg
or
mov
out
aas
fs
cmps
test
xchg
pop
scas
pop
adc
gs
jno
fs
pushw
pop
aas
ret
mov
popf
popf
jne
fild
push
and
xchg
xor
mov
push
loop
out
fucomip
cli
call
sub
ret
aaa
pop
xor
dec
add
and
mov
xchg
xchg
jnp
mov
mov
ret
fwait
push
xor
pop
jo
sbb
xor
xor
xchg
or
sub
and
jae
sbb
mov
or
(bad)
or
outs
cmps
adc
call
rcl
retf
inc
retf
scas
sbb
arpl
sub
outs
icebp
in
aas
inc
nop
push
dec
stos
xor
fdiv
ja
ins
outs
dec
rcl
hlt
popa
pusha
push
outs
mov
sahf
jl
enter
add
jl
das
jno
daa
pop
lods
dec
xchg
sti
sub
mov
sahf
retf
adc
mov
shr
push
xchg
leave
fisttp
lods
and
or
outs
jge
pop
aaa
mov
xchg
or
sub
push
jno
jb
fdivr
dec
xor
ss
inc
mov
pop
sbb
ror
jmp
pop
lea
(bad)
call
cmps
xor
retf
test
fwait
and
sub
or
es
and
ins
xor
mov
aam
mov
add
ja
pop
lds
inc
jge
mov
leave
pusha
gs
mov
sbb
inc
lods
int3
mov
fs
sbb
jecxz
sahf
lods
and
xchg
rol
inc
aaa
pop
jecxz
inc
pop
in
std
fadd
fstp
pop
inc
or
add
aaa
aaa
cdq
dec
fild
or
retf
mov
scas
cmps
out
cmps
dec
mov
push
(bad)
and
lea
jle
bound
xor
fs
(bad)
xor
mov
fsubr
test
sar
nop
mov
ror
xchg
imul
in
js
psubusb
fsub
mov
sub
mov
pop
repnz
pusha
lahf
rol
int3
push
fadd
out
cmps
and
test
nop
pop
ins
adc
std
mov
loope
cmc
add
je
icebp
add
jmp
mov
retf
sbb
dec
adc
stc
and
js
dec
inc
and
jg
loop
dec
retf
push
mov
retf
je
cmps
ja
xchg
mov
jecxz
add
mov
mov
sar
pop
loop
mov
fldenv
push
test
xor
push
pop
jns
retf
inc
push
mov
sbb
test
je
pop
scas
shl
pop
in
add
mov
hlt
push
add
xor
adc
fwait
in
push
cwde
lea
inc
pusha
mov
xchg
repz
xlat
mov
int
adc
xor
adc
pusha
repnz
push
data16
mov
and
sub
jle
fbstp
fist
in
retf
mov
mov
out
in
pop
js
call
fcomp
add
js
adc
or
iret
outs
nop
aaa
jp
inc
popa
sub
sub
jb
fsub
mov
les
cwde
mov
xchg
push
xor
stc
push
mov
dec
dec
and
dec
or
popa
std
jo
lock
xchg
adc
sub
mov
not
hlt
sbb
leave
in
cmp
xor
sbb
sti
es
sub
jb
ss
adc
xor
std
adc
out
dec
scas
mov
mov
mov
xchg
jae
jbe
xlat
int3
dec
add
add
(bad)
xor
ins
jb
nop
rcr
sar
in
lods
(bad)
xchg
test
push
mov
int3
rol
add
call
dec
(bad)
fldz
sbb
or
cmps
mov
fwait
mov
mov
dec
(bad)
cmp
and
ss
fcomip
xchg
mov
test
ror
xchg
inc
adc
jmp
ds
add
test
aam
adc
or
push
and
hlt
(bad)
(bad)
mov
xchg
jecxz
movs
movs
add
jl
dec
cs
test
mov
jne
sub
fild
test
xor
push
fdivr
in
xchg
aaa
lock
mul
xchg
dec
cmp
call
popf
das
and
ficomp
ins
stos
popf
mov
(bad)
sbb
inc
mov
push
push
xor
cmp
lock
fs
repz
mov
sbb
and
icebp
test
jecxz
test
fimul
adc
ret
push
mov
ss
es
fistp
movs
jmp
retf
push
jmp
push
inc
(bad)
jl
dec
jne
cmp
in
lsl
mov
cld
mov
add
sar
pop
mov
add
mov
sbb
pop
dec
inc
push
mov
jecxz
es
gs
dec
(bad)
or
out
je
imul
add
xchg
sub
fidivr
rcl
and
arpl
cmp
cs
or
mov
movs
test
mov
(bad)
sub
es
fadd
hlt
popf
add
cmc
pop
sbb
es
nop
lea
loope
sbb
int
add
out
mov
inc
pop
pushf
and
repz
pop
hlt
out
test
cmp
mov
fnstenv
retf
sub
add
mov
add
test
call
movs
pushf
das
xor
lea
push
movs
in
mov
xor
(bad)
dec
ror
pop
dec
dec
jmp
mov
add
ror
neg
and
idiv
cli
fisub
sbb
mov
jmp
cmp
add
mov
jbe
je
xchg
sbb
adc
pop
adc
jb
aad
dec
jnp
retf
cli
out
into
popf
mov
lods
test
push
cld
push
inc
lahf
fcmovbe
call
xchg
aas
in
inc
xor
out
outs
fadd
cmc
fidiv
in
and
outs
adc
dec
jns
cmp
popf
data16
xor
test
int3
test
dec
jl
xchg
inc
aam
adc
dec
iret
jecxz
call
inc
pop
add
sub
xlat
jecxz
add
in
mov
(bad)
sub
cmp
dec
cmps
aam
mov
js
aam
mov
jg
and
cld
mov
pop
fistp
repz
adc
pop
adc
sbb
xor
fimul
movs
push
ins
loope
test
or
sbb
dec
mov
lods
xchg
cmps
mov
fs
stos
popf
test
mov
loope
sbb
aas
jb
retf
jl
ror
pop
add
ret
popf
lahf
push
(bad)
cmc
aad
lods
jg
jo
sbb
or
loop
adc
lds
invd
cs
jg
popf
call
sub
dec
or
movs
lock
test
mov
daa
adc
cwde
sub
mov
inc
out
cmp
ss
ins
push
jge
retf
dec
jb
fiadd
daa
repz
ins
in
jmp
pop
call
stos
and
out
adc
call
add
dec
jle
mov
(bad)
inc
mov
imul
adc
mov
dec
jmp
push
inc
call
out
cs
test
push
sub
mov
in
xchg
mov
shl
ds
jb
push
lds
gs
jns
inc
pushf
dec
test
ins
das
push
icebp
jmp
sbb
sub
xor
mov
xor
loop
jge
fcompp
jns
nop
gs
jnp
pop
push
xchg
dec
adc
inc
mov
dec
sub
pop
mov
xchg
jne
xchg
xchg
mov
arpl
shr
out
les
mov
stc
sub
in
clc
aam
pop
gs
xor
shl
cld
in
pop
ret
jle
fild
and
sub
jmp
pop
ja
and
push
(bad)
and
ds
dec
pop
mov
dec
xchg
pop
movs
add
addr16
cmp
sub
mov
(bad)
add
aaa
jo
ds
pop
push
test
lds
mov
fwait
mov
or
sbb
int3
jge
mov
enter
pop
popf
leave
push
pop
pop
push
test
and
inc
(bad)
repz
dec
mov
rcl
ret
hlt
sahf
mov
nop
pushf
pop
or
pop
aaa
ss
mov
out
xor
mov
mov
pop
mov
dec
retf
mov
xchg
xchg
xchg
loop
mov
mov
inc
das
dec
icebp
scas
jge
jp
xor
mov
sahf
push
or
mov
mov
loopne
fwait
in
and
push
and
sub
fs
push
jge
loopne
pusha
jbe
loop
loopne
out
ficomp
sub
dec
dec
sub
or
push
in
(bad)
cmps
and
adc
arpl
xor
je
sahf
into
mov
bound
aam
or
lods
mov
xchg
mov
cwde
sbb
sbb
sub
push
pop
icebp
icebp
(bad)
cmp
fsub
mov
gs
cmp
(bad)
push
fwait
(bad)
lds
sbb
in
mov
pop
add
jecxz
sbb
mov
mov
cmps
dec
repz
or
cld
cmps
cmc
dec
imul
adc
fisubr
test
dec
lods
sub
pop
jg
inc
xor
mov
test
lahf
jo
jbe
pop
or
call
adc
mov
xchg
adc
dec
call
js
xchg
iret
cmp
test
sar
xor
dec
(bad)
pop
mov
sub
lock
xchg
leave
mov
dec
pusha
movs
pop
pop
xchg
daa
or
(bad)
inc
dec
push
sub
mov
jne
dec
das
mov
lea
ins
movs
aaa
sti
mov
pop
sub
sub
mov
xchg
sbb
and
push
int3
or
fild
test
and
sbb
clc
fwait
lea
shr
inc
jae
test
retf
mov
sub
xchg
mov
fwait
xchg
and
(bad)
xchg
daa
cwde
dec
sub
cmp
lods
in
inc
data16
sbb
(bad)
mov
rcl
jp
xchg
push
fcomp
fld
sti
stc
fwait
mov
or
fldenv
and
xor
int
pop
mov
ficomp
jno
xor
repnz
outs
push
retf
push
lea
or
push
adc
leave
ins
inc
xor
or
lods
mov
imul
pop
ins
pop
jge
mov
int3
pop
sbb
mov
test
pushf
xor
cmp
add
aaa
popa
add
sti
jmp
ins
xchg
sbb
mov
mov
mov
jmp
push
push
jae
dec
jbe
cmc
xlat
aad
cdq
(bad)
fs
leave
mov
retf
dec
dec
dec
int
int3
into
mov
scas
push
sub
cmps
jnp
cwde
dec
xchg
xchg
add
jae
out
xchg
mov
and
jns
dec
shr
mov
sub
mov
sbb
popa
test
xor
jnp
outs
aam
popa
out
(bad)
loopne
mov
add
sub
jo
or
fidivr
cmp
jne
rol
mov
pusha
lods
push
pop
ds
sbb
mov
mov
(bad)
in
mov
adc
mov
mov
mov
jbe
adc
xchg
cmp
daa
js
popa
cmp
mov
cmp
mov
call
sub
(bad)
aam
int
push
xchg
push
sub
add
adc
sub
int
cli
ret
pop
shl
add
push
test
sbb
sub
in
cmp
movs
mov
iret
lods
xorps
icebp
sahf
add
(bad)
call
mov
in
js
jno
jp
or
inc
shl
dec
pop
outs
inc
cld
jbe
in
add
loope
xlat
xlat
aad
rol
je
loop
mov
out
mov
cs
int
add
mov
and
adc
xor
pop
les
mov
push
pop
or
inc
cmp
sub
mov
jns
repz
(bad)
lock
mov
and
out
inc
mov
retf
cmp
xchg
fcom
xchg
int3
dec
sub
or
pop
pop
shl
out
loopne
fcomip
dec
xor
stc
jl
imul
mov
mov
xabort
fstp
adc
mov
test
sahf
(bad)
(bad)
nop
and
lock
pop
sbb
shl
out
mov
add
sub
xor
scas
sub
sub
cmp
int
add
jae
out
out
mov
sbb
lock
test
mov
push
pop
sbb
jo
test
pop
imul
sar
lds
adc
xchg
mov
cmps
pop
mov
scas
push
pop
jp
inc
aas
cdq
(bad)
int
lea
jne
adc
scas
mov
mov
cli
and
pop
aad
jo
inc
(bad)
ins
dec
not
mov
shl
adc
(bad)
(bad)
jge
cli
cmps
and
(bad)
jb
pop
mov
jo
das
pop
ss
lock
shl
in
or
sbb
push
jl
and
rcpps
push
retf
iret
xchg
adc
or
les
repz
daa
mov
lea
xchg
daa
pop
inc
pusha
add
inc
dec
pop
pushf
jbe
test
popa
pushf
pop
shl
je
loopne
xor
dec
inc
xor
loop
fwait
or
lds
jo
jno
stos
pop
push
call
and
sbb
pop
jmp
pop
cmp
shr
inc
cmp
xor
pushf
jo
sub
(bad)
sbb
cmp
dec
(bad)
loope
imul
and
fdivr
and
xchg
js
icebp
mov
shr
add
sub
icebp
call
cdq
add
mov
add
sub
mov
xor
push
pushf
aam
cld
xor
mov
aad
fsub
repz
nop
scas
lods
mov
sub
sub
(bad)
cdq
loop
jb
fadd
push
jae
xchg
pop
dec
lods
(bad)
mov
and
xor
xor
loope
mov
clc
sub
adc
scas
(bad)
and
adc
xchg
sub
mov
ret
data16
iret
jg
outs
inc
scas
push
adc
lods
pop
ds
aaa
xchg
stos
jo
loopne
(bad)
arpl
lock
cmps
adc
mov
mov
mov
mov
sahf
mov
lahf
les
and
out
arpl
dec
adc
mov
ret
icebp
push
loop
sar
cmp
pop
pop
aas
movs
cmps
push
and
stos
pop
fbld
imul
cmp
inc
push
call
test
ficomp
pop
xchg
dec
cmp
imul
movs
int3
and
popa
loop
outs
ins
dec
dec
fbstp
jae
popa
int
xor
shr
and
aaa
add
pop
xchg
xor
mov
sbb
idiv
sub
xor
cli
hlt
ror
push
imul
jne
icebp
xchg
bound
in
pusha
int
addr16
test
mov
inc
pop
arpl
lock
xchg
sbb
test
cmp
xor
test
scas
add
sbb
xchg
mov
je
add
push
and
push
or
dec
repz
push
ret
addr16
mov
mov
jg
adc
out
test
cmps
or
shr
xchg
repnz
jp
fiadd
aam
fistp
ds
or
sub
call
sar
dec
repz
xchg
mov
in
add
lock
icebp
scas
(bad)
in
mov
pushf
sub
loopne
(bad)
popf
test
jbe
into
cmp
aad
(bad)
mov
cmp
fucom
inc
addr16
push
jp
test
addr16
std
mov
cmp
or
pop
sbb
mov
mov
push
jno
out
mov
ins
ret
pop
mov
rcr
adc
in
rcl
pusha
popf
cli
inc
mov
test
dec
(bad)
and
hlt
sbb
daa
scas
aam
daa
fild
push
clc
les
(bad)
lock
sbb
or
or
mov
dec
lods
xor
sub
shl
xor
push
jae
push
pop
pop
aam
add
and
xchg
xchg
xchg
inc
inc
inc
push
xchg
mov
cld
(bad)
(bad)
cld
loop
mov
push
rol
cmps
and
sar
leave
jle
rcr
loope
xchg
inc
sub
test
outs
xor
pop
cli
shr
sub
arpl
(bad)
pop
rcr
mov
mov
stc
icebp
dec
int
jp
jecxz
test
je
mov
es
mov
cwde
lods
mov
push
pop
push
or
rcl
adc
xchg
push
adc
dec
inc
sbb
nop
sub
add
sti
out
cdq
push
loope
and
ins
rcl
aas
mov
xchg
jle
sbb
fldcw
ret
sub
not
push
stos
call
scas
push
xor
add
xor
and
daa
int3
sbb
inc
inc
mov
xchg
dec
cmc
bound
aaa
aas
jle
sahf
jnp
pop
movs
int3
ins
sahf
or
addr16
fistp
data16
push
push
jmp
imul
js
lahf
xchg
enter
pop
sar
push
in
xchg
pop
sub
sbb
arpl
aaa
mov
or
adc
add
or
pop
sub
add
jle
xchg
iret
xchg
add
adc
bound
inc
(bad)
jae
ins
sbb
jmp
dec
lds
adc
cmp
push
loop
mov
test
in
sub
adc
iret
lods
lds
fnsave
mov
hlt
cmps
dec
lea
lods
cmps
cmp
xor
sar
and
imul
fcomip
adc
jbe
pop
pusha
(bad)
pushf
fs
add
add
inc
sbb
popf
jl
sub
sti
pusha
repnz
arpl
push
pushf
jnp
ficomp
sbb
fsub
mov
mov
imul
fisttp
cmps
test
push
(bad)
xor
push
xchg
ja
leave
dec
dec
or
ins
sub
push
mov
mov
aas
test
test
fwait
aam
call
cmp
mov
xchg
cli
cmp
inc
(bad)
out
ror
retf
xchg
fs
aam
dec
ins
jno
out
loop
gs
sbb
xchg
pop
mov
(bad)
std
and
xchg
out
imul
(bad)
inc
ds
mov
pop
mov
mov
pop
or
and
mov
jnp
(bad)
scas
iret
mov
inc
push
sti
lock
cmovne
(bad)
xor
mov
in
out
jmp
push
call
iret
pop
mov
es
(bad)
or
sub
push
jge
push
jle
and
fnstsw
sbb
pushf
cmp
int3
mov
jle
mov
jmp
pop
jne
cmp
les
aas
inc
mov
mov
jno
idiv
call
xlat
sub
add
cwde
fs
ficomp
push
adc
cmp
pop
jae
sti
retf
lahf
popa
jmp
dec
adc
cld
shr
imul
(bad)
pop
push
popf
mov
xchg
cs
fcomp
and
adc
mov
push
inc
sar
mov
std
sbb
pop
rcl
push
enter
lds
pop
xchg
mov
enter
xchg
pop
mov
scas
out
and
push
sahf
xchg
jno
imul
mov
inc
sbb
js
inc
je
pop
pushf
and
cwde
aam
dec
test
sbb
lahf
xchg
jecxz
rcl
pop
inc
xor
adc
dec
jbe
sbb
ss
retf
and
and
xor
enter
cmp
jg
jbe
inc
shl
je
ja
in
mov
stos
xchg
fcomp
add
aam
cmp
retf
push
inc
push
push
push
fcmovnbe
ret
fcmovnb
mul
movs
push
jl
das
(bad)
dec
cmp
mov
xchg
int
sbb
xchg
pop
xor
dec
and
pusha
inc
imul
inc
pushf
jecxz
xchg
sti
(bad)
cmc
gs
jl
iretw
gs
cmps
loop
add
lea
xlat
pusha
les
sub
fcmovnu
mov
pop
in
cmp
sbb
mov
inc
fsubr
movs
pop
sub
outs
test
scas
in
mov
xchg
imul
and
arpl
mov
pop
mov
test
and
call
mov
pop
inc
xlat
pop
push
inc
cmps
mov
frstor
adc
mov
mov
clc
loope
xor
lods
adc
and
xchg
sub
xchg
push
pop
lods
sub
pop
sbb
scas
jl
clc
jnp
mov
sub
test
mov
sbb
adc
dec
int3
fsub
jle
xor
aaa
mov
into
xchg
mov
xlat
xor
sub
ins
mov
pop
cdq
push
movs
call
sti
dec
jne
jp
bound
ss
retf
hlt
fwait
mov
mov
xlat
sub
add
push
pop
dec
pop
xor
inc
mov
pop
popa
arpl
call
adc
enter
(bad)
mov
mov
push
pop
pop
sub
(bad)
mov
xchg
mov
cld
aaa
movs
xchg
xchg
mov
pop
sub
add
mov
jmp
fsub
je
jno
pop
jle
nop
ds
pop
cwde
push
dec
cmc
je
and
cwde
mov
lods
mov
bound
lods
dec
xor
mov
aas
mov
adc
jo
pusha
push
adc
mov
mov
pushf
pop
push
adc
out
movs
fdiv
sub
test
call
popf
push
jns
data16
shr
push
jp
imul
push
cdq
mov
xchg
pop
add
xchg
int
push
mov
inc
inc
xor
fnsave
fsubr
(bad)
movs
fs
add
mov
dec
xor
outs
imul
aas
dec
sub
cmp
(bad)
sbb
adc
sbb
pop
pop
sub
sub
push
ret
adc
jno
cmp
sub
mov
call
xchg
fsubr
call
mov
push
into
and
pop
cmps
fdivr
cld
int3
pop
mov
jp
adc
ss
cmp
sub
out
inc
stc
clc
les
cmps
mov
pusha
ins
mov
cld
mov
nop
mov
dec
imul
xor
bound
nop
out
add
hlt
js
cs
addr16
xchg
and
arpl
adc
jmp
dec
xchg
popf
aas
out
(bad)
hlt
cmp
retf
loopne
and
xor
add
in
mov
jno
in
and
dec
fidiv
sbb
loop
nop
stos
scas
and
jp
shl
enter
ret
stc
inc
(bad)
mov
push
and
call
mov
mov
dec
loopne
xor
dec
int
sbb
mov
mov
xor
or
addr16
add
lods
cmp
xchg
lods
push
push
enter
arpl
pop
xlat
fucom
popf
sahf
inc
repz
inc
ror
jo
stc
and
popf
rcr
popf
and
add
test
in
aam
jg
cmp
mov
nop
retf
xor
or
sbb
push
sbb
and
imul
add
sbb
adc
out
dec
repz
inc
mov
and
xor
mov
nop
adc
nop
jecxz
xor
lahf
jmp
jns
mov
std
(bad)
cmp
jp
fcomp
movs
movs
lock
mov
xchg
outs
or
shr
xor
pushf
clc
add
repz
inc
push
sbb
inc
test
adc
push
xlat
mov
out
arpl
xor
and
aas
jb
sub
dec
cli
sub
push
int3
add
sbb
xor
cmp
inc
shl
fdivr
jl
daa
mov
(bad)
scas
add
add
into
hlt
pop
fisttp
movs
inc
push
pop
retf
jo
dec
sub
pushf
cmp
pop
dec
pop
push
sub
into
mov
ret
cmp
and
cld
xor
jno
stos
imul
and
and
ins
sub
setg
fmul
adc
mov
ins
scas
es
mov
xor
fldenv
(bad)
es
fwait
(bad)
sbb
mov
mov
sar
push
cmp
sahf
jmp
daa
lods
mov
and
or
call
push
adc
daa
or
add
adc
push
mov
or
ds
aam
test
(bad)
sbb
call
cld
add
daa
es
jnp
scas
loope
sar
out
mov
mov
ins
mov
mul
xlat
jp
sti
pop
pop
sub
loopne
gs
jae
xchg
mov
add
fs
stos
mov
into
movs
jnp
push
out
jge
push
daa
xchg
push
imul
(bad)
arpl
ss
lahf
xchg
ins
sbb
adc
loope
inc
jge
scas
jecxz
pop
inc
in
push
push
cpuid
and
jae
(bad)
(bad)
bound
dec
movs
mov
cmp
mov
sbb
xor
clc
ret
mov
jg
push
movs
mov
jae
jno
rcl
add
mov
retf
cmps
outs
pusha
mov
pop
inc
mov
push
js
push
push
loop
ret
mov
mov
sub
jmp
fwait
cmp
jbe
sbb
push
fstp
push
pop
jnp
add
ins
in
test
jns
xchg
clc
jmp
pushf
xchg
pop
and
popa
jge
xchg
jae
jno
jmp
cmp
inc
cmp
popa
mov
je
push
popa
shl
mov
jl
mov
pushf
jp
outs
pop
nop
mov
cwde
sub
(bad)
or
push
pop
inc
xor
pop
lods
in
into
dec
fld
jge
inc
inc
shr
jnp
popa
cmc
mov
dec
xor
mov
lods
jmp
not
sti
rol
add
test
sbb
add
adc
loopne
push
movs
retf
js
pop
adc
loopne
enter
stos
daa
ins
and
inc
push
jmp
add
xor
scas
dec
xchg
adc
cmp
bound
jmp
(bad)
call
or
stos
and
data16
xchg
cmp
rcr
call
jbe
add
or
sub
aaa
sahf
mov
mov
test
out
add
clc
ds
in
enter
sar
fwait
pop
popa
add
cld
or
dec
xchg
mov
loop
cli
retf
mov
mov
(bad)
clc
in
das
cli
sti
sbb
and
push
lods
stc
sbb
sahf
(bad)
iret
in
loopne
cmp
in
cdq
sti
out
fdiv
ss
mov
aad
dec
xchg
nop
iret
stc
mov
sahf
retf
cmps
in
jecxz
(bad)
pop
pop
push
jbe
xor
pop
add
movs
call
dec
lea
sbb
ret
sub
inc
cld
adc
mov
inc
jb
mov
pop
daa
lods
or
and
sbb
push
pop
xor
dec
jp
jge
inc
jmp
jns
dec
shl
addr16
js
repnz
retf
int3
inc
clc
(bad)
pop
ja
push
scas
mov
or
shr
mov
sti
call
push
cmp
adc
(bad)
add
push
sti
push
dec
cmp
push
push
push
and
mov
fimul
xchg
mov
jne
push
push
jl
cmp
sub
sub
sbb
cmp
xchg
sub
cmp
sbb
hlt
jo
repnz
pop
int
xor
sbb
adc
pop
lock
or
push
int3
ficomp
out
aas
ja
lea
scas
push
push
push
sub
jmp
repnz
out
xchg
div
or
popa
iret
shl
fisubr
cmp
jle
cmp
lods
jge
ret
sbb
sub
into
sbb
jo
add
repz
push
dec
pop
mov
mov
pop
or
xor
adc
es
adc
aas
cmc
and
adc
inc
push
cmp
add
cwde
rcl
mov
pop
cmp
add
in
ss
or
push
ins
add
push
sbb
es
inc
imul
rcl
sub
call
pop
jg
push
pop
add
sbb
fld
lock
sbb
arpl
aas
sub
mov
test
(bad)
sbb
dec
cmp
es
das
jmp
or
mov
sub
scas
sub
mov
push
clc
ins
(bad)
cmp
jmp
mov
bound
jbe
push
push
out
dec
fcom
and
xchg
xchg
in
ret
xor
sub
mov
gs
mov
jnp
in
push
in
inc
mov
cmp
loop
lods
test
arpl
jbe
and
cwde
push
push
mov
(bad)
pop
xor
imul
lock
popa
mov
test
dec
gs
xor
xor
inc
out
inc
scas
stos
xchg
movs
and
jg
inc
addr16
hlt
xchg
stos
add
mov
xor
and
cmp
enter
mov
fisttp
and
stc
aaa
cmp
adc
dec
pop
pop
mov
outs
push
mov
jg
sub
sbb
es
(bad)
std
jg
cli
push
ins
nop
adc
fwait
ins
fidiv
push
out
ret
loop
repnz
jp
fldenv
mov
pop
sub
pusha
(bad)
sub
mov
scas
ja
inc
jb
ins
inc
pop
sbb
xchg
push
and
jne
push
fisttp
xor
add
repz
xchg
(bad)
retf
loop
or
xchg
ja
xor
outs
nop
inc
cmp
dec
pop
push
dec
sbb
das
data16
push
out
xor
sbb
jne
xchg
outs
mov
scas
dec
push
xchg
or
in
mov
mul
inc
in
or
dec
jl
jne
jbe
int
dec
jmp
int
shr
jns
js
(bad)
jo
sub
fistp
cmp
mov
test
push
retf
popa
pop
mov
jge
cmp
fisttp
sub
data16
aad
or
inc
mov
lods
lahf
clc
add
cs
pop
sub
add
imul
fwait
jecxz
(bad)
mov
jnp
pop
cmp
cmps
ret
lds
mov
cld
sbb
inc
stc
inc
xor
movs
test
(bad)
adc
add
xor
pop
add
xchg
pop
add
cmp
test
pop
addr16
loope
add
sub
ja
mov
cmp
fsubrp
movs
mov
mov
loop
lock
sti
jns
icebp
and
push
aam
jb
outs
lahf
or
inc
jle
sub
xor
jmp
imul
push
mov
inc
xchg
xor
aaa
mov
inc
xchg
inc
push
fwait
les
cmp
sub
rcl
pop
sbb
rcr
xor
xor
int
mov
cmp
mov
pop
push
(bad)
adc
sbb
fucomip
test
scas
stos
sbb
inc
xor
jl
lea
popa
gs
sub
call
push
out
out
mov
sbb
mov
mov
cmp
xor
fucom
mov
or
das
mov
jecxz
adc
xchg
xchg
repnz
cmp
dec
test
mov
xor
and
mov
xchg
and
mov
(bad)
retf
fcmovnu
sar
or
ins
in
sahf
mov
mov
lock
fst
stos
(bad)
js
cli
push
(bad)
pop
inc
fnstenv
fcmovnbe
lods
mov
push
mov
pushf
mov
xor
call
xchg
cmp
sbb
ret
dec
fwait
mov
nop
test
dec
mov
(bad)
mov
xchg
fwait
pop
js
cmc
movs
and
dec
in
cld
and
mov
add
fldcw
push
sub
fstp
sub
cwde
pop
push
jl
sbb
jle
jmp
into
inc
inc
into
add
mov
mov
fldenv
(bad)
fdiv
mul
lds
xchg
push
outs
jo
inc
pusha
inc
iret
loope
fwait
repz
or
push
aad
xchg
mov
mov
cmp
mov
adc
mov
push
jmp
(bad)
(bad)
ds
adc
cli
loop
pop
adc
pop
mov
fst
repnz
inc
call
xor
pushf
sub
push
aad
mov
aas
add
gs
das
adc
pop
inc
xchg
scas
jb
lock
and
stos
repnz
sub
js
mov
pop
ins
mov
or
sub
mov
sub
xchg
jmp
mov
xchg
stos
lds
push
add
inc
(bad)
dec
push
push
dec
addr16
in
pop
lods
jae
sub
fsubrp
sub
push
retf
ror
(bad)
fmulp
pop
test
dec
dec
(bad)
dec
pop
fs
add
cmp
mov
shl
push
loop
xor
sbb
and
mov
xchg
aas
(bad)
lock
and
push
push
add
inc
jp
pop
hlt
js
and
mov
pop
pop
pop
sbb
rol
aaa
pop
push
or
js
pop
mov
mov
inc
add
adc
fdiv
inc
call
loopne
mov
cs
or
jge
jbe
mov
lods
stos
push
xchg
out
inc
xchg
sti
sti
inc
fcmovnbe
lods
push
shl
data16
aas
jns
sbb
push
push
movs
mov
(bad)
dec
lods
in
mov
adc
xor
pop
adc
dec
and
fstp
(bad)
mov
shl
sbb
jne
xchg
xor
(bad)
mov
fidivr
(bad)
lds
(bad)
or
std
sbb
mov
dec
icebp
sbb
xchg
lods
int3
ds
pop
cld
adc
pop
lahf
fidiv
mov
ins
mov
cmp
aad
aad
icebp
out
outs
jg
pop
xchg
or
inc
pop
pop
ds
cmp
ds
and
psubd
jo
dec
fs
mul
inc
call
dec
arpl
or
arpl
jo
imul
out
jo
leave
mov
pop
icebp
dec
or
out
(bad)
out
xor
popa
mov
cld
mov
push
dec
push
cmp
dec
sahf
daa
cmps
mul
add
push
xor
addr16
xor
sahf
xchg
xchg
push
xor
imul
cmps
int
cmp
push
ins
ins
sahf
(bad)
loop
adc
jae
into
and
scas
es
fscale
in
rcr
mov
pop
push
push
xchg
mov
ficom
push
adc
mov
fs
adc
es
adc
cld
ss
cmp
mov
dec
sbb
lds
mov
mov
push
mov
lods
stos
push
mov
xchg
es
frstor
das
add
rol
push
leave
mov
push
dec
mov
aad
sub
adc
dec
add
enter
pusha
arpl
and
scas
or
stos
inc
addr16
pop
sbb
fcmove
push
in
fwait
push
js
cmp
clc
sbb
out
pusha
retf
retf
jae
mov
sub
xor
fcmovnb
inc
test
rol
push
mov
movs
repnz
and
adc
sbb
or
aam
cld
jns
repnz
xor
enter
xchg
dec
outs
jle
les
sub
fsub
scas
movs
xor
add
xchg
xlat
inc
mov
(bad)
cmps
lds
(bad)
dec
xchg
rcl
and
out
pop
shl
loop
out
std
pop
or
inc
mov
pusha
inc
adc
and
fnstcw
push
cmp
nop
xchg
and
sub
pop
and
sbb
mov
xchg
and
jns
pop
scas
clc
in
push
loop
inc
cmp
cmp
jmp
(bad)
jmp
lahf
and
pop
imul
push
(bad)
movs
popa
mov
and
inc
js
shr
shl
mov
mov
add
mov
stos
stos
jge
cmps
pop
test
in
(bad)
jns
loope
iret
pop
scas
dec
xor
test
popf
sub
jg
test
aas
aad
mov
retf
inc
cmc
xlat
xchg
ret
stos
pop
call
push
addr16
cmp
cmp
pushf
rep
jbe
(bad)
fadd
icebp
push
mov
mov
cmp
vcvttps2dq
push
mov
add
inc
adc
dec
jmp
mov
in
ja
and
sub
movs
rcl
bound
adc
adc
or
jbe
ds
leave
cwde
add
(bad)
aam
and
fild
jo
cmps
push
pop
das
pop
sbb
mov
shl
jp
(bad)
cmp
into
data16
in
in
jecxz
stos
mul
xchg
xor
mov
cwde
dec
retf
cdq
mov
pop
std
pop
jl
fistp
sti
inc
jmp
adc
lods
add
rcl
test
cmps
test
stos
mov
push
out
bound
mov
push
add
xchg
inc
popf
lahf
jo
nop
add
retf
adc
ror
fsub
jb
shr
addr16
cdq
(bad)
fsqrt
jno
(bad)
ins
mov
jae
mov
test
movs
movs
mov
mov
push
dec
std
push
data16
sbb
push
push
dec
adc
(bad)
sbb
scas
ret
aaa
call
fdiv
push
pop
cdq
aam
mov
mov
pop
retf
fwait
sbb
test
mov
sar
cld
out
add
push
mov
loop
mov
in
cmp
not
lods
dec
(bad)
ffreep
jmp
pusha
in
add
mov
and
dec
test
ins
cmps
cdq
call
fstp
xchg
(bad)
stc
push
inc
shr
push
jnp
fcmovne
xchg
xchg
nop
loop
and
mov
add
dec
inc
inc
das
test
jno
inc
in
lock
mov
push
xchg
dec
call
leave
jp
les
or
mov
dec
cmps
mov
stc
fmul
mov
mov
sbb
pop
fidivr
inc
xor
adc
(bad)
jl
mov
aas
dec
lock
xor
xchg
leave
xchg
pop
daa
outs
push
shr
arpl
or
mov
outs
fist
cmp
test
sbb
adc
in
jp
jmp
dec
xor
push
(bad)
xchg
pop
and
cmp
or
in
xor
xor
sti
inc
inc
mov
cdq
test
adc
push
out
lods
or
inc
jle
xchg
jg
sub
neg
js
idiv
mov
imul
pusha
push
lea
lods
mov
mov
pop
fnsave
mov
inc
loope
sub
push
sbb
int
jne
xor
(bad)
and
and
iret
data16
dec
jecxz
add
sbb
fcmovbe
movs
shr
int
(bad)
out
and
pop
ss
pop
pop
add
cmp
or
pop
in
dec
fidiv
lea
xchg
pop
xchg
aad
push
leave
xor
test
fsubp
scas
(bad)
loop
es
imul
mov
fdivr
add
(bad)
adc
les
sub
adc
pop
imul
psubb
in
retf
pop
sub
jo
lods
adc
mov
xchg
sbb
shl
xchg
xchg
enter
call
push
dec
(bad)
inc
jge
mov
in
lahf
fist
clc
enter
mov
fs
mov
inc
dec
and
pop
sub
or
mov
loopne
xchg
sbb
sub
pop
packsswb
jae
add
mov
je
or
fst
push
jo
dec
jge
mov
jnp
fistp
enter
je
daa
in
cmp
jmp
test
pushf
pop
cdq
xchg
imul
(bad)
call
mov
popf
(bad)
in
xchg
mov
bnd
retf
movs
adc
clc
inc
push
adc
mov
xchg
das
addr16
jb
mov
call
sbb
out
jne
mov
cmp
xchg
push
cmp
xchg
xchg
xor
pop
lahf
pop
xchg
mov
pop
dec
lods
and
lds
sahf
add
or
ins
scas
lods
xchg
out
pushf
xchg
pushf
mov
and
add
and
jmp
sub
(bad)
(bad)
mov
retf
xchg
cdq
add
je
jno
dec
inc
cld
int3
fbld
add
mov
stc
push
or
and
std
adc
sbb
scas
add
push
(bad)
mov
jnp
pop
in
fdiv
and
(bad)
dec
xchg
int
add
sub
fisttp
into
sub
push
mov
sbb
cmps
or
inc
shl
and
test
and
push
cwde
stos
cdq
movs
push
dec
jmp
cwde
sub
jb
movs
jg
sub
rcl
jl
sub
push
add
jb
stc
mov
inc
mov
xchg
lea
sbb
inc
out
je
pop
inc
pause
inc
mul
mov
(bad)
mov
lea
or
pusha
push
sub
in
call
xor
repnz
pop
mov
and
dec
mov
push
sub
fld
clc
push
clc
sbb
sbb
push
lds
aad
cs
xchg
into
icebp
ins
pop
mov
or
and
sti
mov
test
mov
inc
inc
pop
push
push
push
(bad)
dec
inc
test
outs
sub
jecxz
dec
cwde
pop
(bad)
loope
lds
inc
sub
iret
dec
inc
(bad)
cld
and
test
xchg
loop
test
xchg
leave
mov
and
pop
das
mov
cmp
sbb
int3
mov
js
stc
jae
test
cmp
icebp
push
rcr
loopne
jne
adc
inc
loop
fwait
mov
dec
jmp
stos
xor
ror
xchg
inc
inc
pop
dec
jecxz
ds
push
iret
push
loop
ja
or
mov
shr
aas
maskmovq
neg
(bad)
les
dec
dec
xor
fidiv
fnstcw
cmp
cwde
cli
or
push
cmp
push
add
pop
mov
cmps
xchg
push
mov
icebp
sbb
(bad)
add
loope
retf
or
mov
dec
hlt
push
cs
jmp
and
mov
xchg
or
rcr
hlt
int
mov
cmp
movs
rol
(bad)
aas
mov
test
or
out
cld
cmp
sbb
xor
outs
outs
dec
jmp
retf
test
mov
inc
shl
inc
mov
call
movs
sub
(bad)
jl
pop
sub
sbb
fwait
add
das
cmps
clc
popf
lock
sub
imul
test
dec
inc
(bad)
push
cmp
sar
hlt
out
loop
addr16
mov
and
js
xor
and
sub
mov
and
out
(bad)
int
aam
adc
xchg
pop
sub
jb
jb
pop
ins
inc
adc
jne
cmc
jg
push
jl
jbe
and
jl
mov
imul
sbb
and
cmp
mov
dec
mov
movs
xchg
mov
ror
cmps
cmp
dec
jmp
hlt
lock
clc
rcl
xor
(bad)
mov
add
scas
adc
fisub
hlt
add
adc
ss
div
xchg
push
call
pop
cwde
inc
jmp
push
jnp
outs
loop
ins
cmp
push
mov
test
jmp
iret
push
mov
test
add
sub
(bad)
jmp
mov
dec
xchg
cmp
mov
retf
dec
iret
mov
adc
xchg
cmps
pop
out
and
xchg
leave
adc
mov
xor
fnstenv
popf
lds
mov
stos
stos
mov
lock
int
push
fwait
das
mov
jmp
sbb
jbe
aas
xchg
mov
jbe
lds
std
or
mov
add
(bad)
aam
pop
jmp
push
adc
add
sub
mov
pusha
dec
or
das
dec
or
lahf
lods
jle
in
add
or
lock
cmp
ja
test
fisttp
pop
fimul
retf
js
into
xchg
sti
jecxz
movs
mov
inc
and
(bad)
mov
pop
xor
xchg
xchg
(bad)
cmp
pop
retf
mov
(bad)
jnp
dec
ror
mov
aam
jno
sub
or
arpl
fs
lock
lock
or
popa
pop
(bad)
into
inc
or
jnp
sbb
hlt
call
sbb
in
inc
push
ss
sbb
fdiv
cld
push
test
inc
(bad)
jmp
and
rcl
into
dec
int3
cli
mov
sti
cld
std
or
(bad)
sub
inc
in
cmps
shl
aam
push
jecxz
pop
int3
jecxz
int3
sbb
mul
fdivrp
inc
pusha
push
mov
mov
mov
or
(bad)
fsubp
cmps
nop
xchg
push
push
scas
lods
mov
push
ds
push
mov
ja
mov
mov
rcr
jle
pop
or
les
push
imul
jno
retf
mov
sbb
sahf
repz
xchg
cli
in
adc
inc
outs
out
sub
cwde
jp
ins
add
pop
leave
into
mov
lods
xchg
inc
retf
pop
jle
pop
jmp
xor
cmp
xchg
inc
in
adc
cmp
fiadd
mov
lock
jae
maxps
arpl
mov
mov
loop
adc
sbb
or
adc
mov
mov
fmul
cmc
fs
ins
and
hlt
push
mov
outs
lea
cmp
push
nop
mov
mov
add
mov
jmp
inc
push
pop
popa
add
or
sub
sar
aas
cdq
hlt
popf
pop
test
retf
stos
pushf
mov
sti
jle
jge
xchg
js
icebp
dec
or
pop
mov
and
pop
movs
dec
(bad)
fwait
loopne
mov
xor
and
pusha
imul
dec
sub
cli
cmp
jae
adc
cmp
or
enter
xor
mov
ret
mov
xor
jmp
cmp
adc
sbb
or
lods
jmp
or
adc
dec
cmp
adc
stc
or
push
sti
daa
pop
(bad)
or
push
neg
pop
popf
sbb
jae
mov
mov
test
push
popa
mov
lods
jb
loop
xor
adc
(bad)
jp
(bad)
cmp
test
sbb
mov
fisttp
xchg
fsub
dec
push
scas
test
pop
mov
jmp
ret
xor
cmp
sub
std
nop
xor
jecxz
inc
call
out
aas
dec
mov
inc
(bad)
xor
sbb
(bad)
dec
fwait
je
int
pop
(bad)
push
cmp
jmp
icebp
pusha
fdivr
adc
sbb
xor
jne
leave
and
fstp
popf
cmp
or
test
mov
dec
in
retf
movs
mov
adc
mov
cmp
add
and
push
or
push
cmp
sub
and
jecxz
sbb
xchg
push
dec
mul
in
jnp
cmp
movs
mov
pop
shl
inc
sahf
ja
fs
xor
pop
ds
pop
push
add
(bad)
mov
les
pushf
jg
jmp
push
adc
stos
out
mul
xchg
and
iret
xchg
mov
mov
sbb
push
jge
xor
and
jp
xchg
pop
jle
adc
ss
add
add
lea
mov
or
pop
xor
xchg
sti
addr16
xchg
mov
and
pop
pushf
mov
push
lods
repz
mov
movs
popa
sbb
cwde
sbb
adc
scas
cmp
dec
stos
inc
push
js
lea
push
daa
xchg
inc
pusha
scas
fcomi
xlat
enter
push
xchg
jecxz
mov
push
fcmovne
pop
fidiv
adc
and
mov
fstp
lods
scas
test
cmp
popf
mov
mov
nop
and
(bad)
lods
pop
mov
mov
mov
adc
clc
test
es
ret
shl
test
(bad)
dec
mov
aaa
ror
mov
cmp
sbb
dec
cwde
lods
shl
out
scas
xchg
mov
mov
je
test
and
(bad)
jmp
mov
jne
or
arpl
or
cwde
(bad)
(bad)
in
jmp
inc
fidiv
popa
dec
popf
imul
push
mov
add
rcl
push
fisub
mov
sbb
lock
xor
fs
(bad)
push
ret
xchg
push
jmp
pop
mov
(bad)
mov
pusha
pushf
imul
mov
pop
scas
iret
lds
shl
sbb
inc
icebp
pop
push
mov
sub
sub
mov
out
in
inc
push
and
push
and
xchg
nop
mov
cwde
lock
pushf
loopne
jg
mov
retf
loop
jnp
lahf
add
stc
sbb
cmp
dec
jle
into
rol
pop
fidivr
adc
sti
stos
cli
mov
outs
mov
popa
mov
mov
ins
push
sbb
(bad)
xchg
xchg
xchg
jmp
xchg
jbe
push
add
mov
mov
pop
inc
lods
(bad)
int3
cmp
shl
in
int
cwde
jae
mov
loop
sbb
ds
int
dec
ja
pop
lds
pushf
sbb
jne
jns
and
adc
out
movs
pop
stos
or
xchg
jmp
push
pop
jl
popa
mov
aaa
in
xor
inc
mov
lods
jb
outs
loope
jae
cli
pop
pop
sbb
mov
mov
sub
(bad)
fmul
or
adc
dec
mov
loope
mov
xchg
jns
cld
mov
mul
(bad)
pop
js
and
mov
cmps
and
das
xchg
mov
mov
je
scas
scas
rcl
es
jns
dec
add
repz
mov
movs
mov
lock
in
pop
mov
xchg
fcomp
inc
push
lods
fisub
fnstcw
adc
(bad)
imul
stos
and
jae
jmp
call
imul
jb
pop
or
add
adc
or
rol
popa
lds
hlt
stos
movs
xor
sbb
xor
add
mov
jb
sbb
pusha
sbb
mov
jmp
and
pop
or
mov
inc
sub
fsubr
pop
(bad)
jbe
push
inc
pop
push
aad
xchg
push
fstp
dec
test
movs
shl
jle
std
pop
pop
fs
add
push
fs
inc
ret
mov
mov
pop
or
scas
scas
into
popa
scas
mov
xchg
retf
and
in
repz
rcr
retf
ret
(bad)
and
cmp
mov
fcom
lods
pop
xor
sub
hlt
(bad)
cmp
imul
adc
ret
inc
int3
lods
bound
xor
sti
xchg
movs
and
sub
jbe
dec
mov
lea
leave
outs
jo
fcmovne
mov
loopne
sub
and
cmp
jnp
outs
lods
stos
movs
out
(bad)
pop
xchg
xchg
imul
loop
add
(bad)
mov
(bad)
(bad)
jno
mov
loope
inc
adc
mov
sub
xchg
push
sub
addr16
test
js
div
jmp
fdiv
jge
inc
jl
and
mov
or
pop
ds
mov
outs
pop
mov
dec
cwde
or
in
pop
or
loope
lds
mov
in
and
sbb
daa
jmp
cmp
(bad)
sub
in
dec
fnsave
mov
pop
mov
(bad)
mov
lock
lea
idiv
jbe
xor
out
(bad)
jge
sub
scas
rcl
cmp
mov
arpl
icebp
or
or
lahf
cmp
lock
push
mov
(bad)
(bad)
in
sbb
jmp
lds
adc
jae
outs
popa
and
jae
test
outs
fcom
and
xchg
inc
daa
push
out
adc
dec
(bad)
(bad)
xchg
adc
sbb
ins
push
popf
(bad)
(bad)
leave
mov
add
test
rcl
mov
imul
inc
cli
gs
mov
fild
lods
enter
mov
inc
dec
cmp
imul
jbe
add
idiv
in
movs
inc
dec
(bad)
sar
pop
adc
(bad)
bound
inc
add
sub
jno
rcl
call
xchg
(bad)
adc
cdq
dec
sub
movs
and
add
aaa
push
stc
lds
jecxz
scas
lahf
mov
fisub
jmp
clc
dec
cmc
shl
adc
xor
dec
out
pop
mov
jae
outs
push
dec
fistp
pusha
aam
inc
xor
retf
or
js
jnp
repz
sub
sbb
inc
sbb
cdq
xchg
ret
outs
mov
sbb
sub
icebp
push
adc
mov
(bad)
fsub
fld1
(bad)
call
mov
xchg
push
out
test
fist
scas
mov
jmp
call
pop
pop
cs
loopne
sub
test
cmp
sub
push
mov
push
arpl
cmp
call
adc
mov
add
mov
mov
push
sub
fild
(bad)
cli
outs
mov
push
sti
sbb
out
arpl
fsubrp
sbb
jne
imul
lea
into
xor
lahf
sti
stos
fwait
jge
xor
in
push
sbb
shr
outs
shl
sub
xor
fst
inc
sub
add
fwait
stos
(bad)
add
sub
or
clc
call
mov
loopne
ficom
pop
mov
enter
fcomp
cld
shr
jb
push
dec
jno
fcom
cmp
jge
xor
cmp
out
das
shl
icebp
mov
dec
lock
add
adc
std
clc
and
cli
bnd
dec
jnp
cmps
repz
sub
mov
cld
sub
pop
mov
adc
or
cmp
mov
loope
add
and
inc
xor
lock
repnz
mov
jle
sub
repnz
push
jge
mov
mov
cmp
fstp
pop
inc
addr16
mov
cmp
add
loop
sbb
cld
and
mov
mov
cld
jmp
loopne
stos
movs
sbb
pop
loopne
aam
cmps
pop
shr
sub
test
add
rcl
repz
inc
cmp
inc
jmp
stos
pop
add
inc
mov
jae
hlt
dec
iret
mov
shr
cmp
xor
icebp
mov
movs
dec
and
in
(bad)
or
xchg
cli
push
arpl
dec
pushf
jl
outs
(bad)
jge
inc
dec
daa
and
icebp
xchg
movs
test
jmp
das
sub
fistp
shr
pop
push
push
fcomp
jl
mov
out
ins
mov
fst
fmul
icebp
test
stos
pop
mov
jae
jns
add
in
call
bound
adc
cdq
shr
mov
cmp
es
fist
pop
cmp
retf
test
xchg
sub
stos
das
gs
adc
inc
jne
xor
sub
xchg
xor
in
sbb
sbb
int
push
cmp
pop
mov
scas
ret
aad
cmp
ja
mov
lahf
dec
cdq
push
sub
repz
scas
fnstcw
imul
jle
push
jo
imul
lock
outs
and
sar
sbb
jnp
sub
or
sbb
call
inc
ja
cmc
pop
push
push
fiadd
repnz
cmp
ss
mov
test
sbb
iret
lds
lea
movs
sub
mov
ins
ja
(bad)
push
inc
adc
sbb
jmp
inc
pushf
push
mov
and
(bad)
repz
lock
xor
fcmovnu
or
mov
or
cmp
leave
sbb
sbb
mov
inc
loope
nop
adc
aas
and
inc
jl
mov
adc
rcr
inc
push
jl
pushf
ror
jge
rol
into
jne
ja
pop
int3
sub
cmp
vmread
je
into
xor
mov
inc
sbb
jmp
inc
sbb
sub
shl
dec
jle
mov
stos
adc
idiv
cmp
or
sub
jo
pop
bound
adc
dec
and
adc
mov
loopne
pop
imul
sbb
jmp
xchg
cmc
popa
mov
popf
fst
xchg
push
cmp
push
sbb
or
xrelease
pusha
jnp
dec
(bad)
iret
ret
adc
sbb
dec
aam
push
mov
pop
pop
push
int
test
imul
lock
in
mov
rol
cs
jns
push
outs
lds
ins
xchg
mov
mov
ret
int
inc
hlt
dec
sub
retf
mov
and
push
pop
retf
test
fst
pop
mov
call
jno
add
shl
push
loope
mov
pop
pusha
rol
mov
test
jnp
add
add
mov
sar
fnsave
adc
ret
in
les
ins
mov
sub
jb
mov
hlt
mov
mov
mov
mov
bound
jecxz
jl
cli
(bad)
xchg
pop
jge
inc
in
jbe
pop
xor
pop
cmp
fwait
sbb
sub
xchg
sub
inc
xchg
cmp
dec
in
mov
(bad)
retf
push
repz
jp
int3
adc
sub
cwde
inc
scas
addr16
data16
sub
or
gs
es
mov
dec
inc
sti
mov
sbb
jns
cmc
fucomi
sub
xchg
xchg
data16
push
xor
ja
aaa
in
lods
and
(bad)
div
retf
out
fdiv
mov
mov
enter
pop
int
xchg
inc
mov
in
pushf
cmp
dec
sti
jo
pop
sub
std
jmp
mov
dec
jae
in
push
aad
sub
stos
sbb
in
add
or
inc
cs
mov
pop
sub
call
jb
out
adc
and
cmps
outs
fidivr
out
retf
into
fs
or
inc
shr
jmp
xchg
sahf
(bad)
(bad)
jmp
jbe
add
test
push
mov
(bad)
in
cmp
dec
mov
dec
or
mov
inc
cmp
std
movs
(bad)
fcom
ja
jle
mov
adc
add
jge
fist
enter
push
or
mov
mov
xor
(bad)
in
cld
test
push
in
jge
inc
add
call
add
aas
mov
pop
aas
push
sbb
fsubrp
mov
cmp
cli
mov
mov
arpl
jae
push
out
pop
lods
sub
pusha
movs
inc
(bad)
jnp
stos
lahf
or
push
and
lahf
ds
test
adc
js
outs
sbb
xor
std
stos
sub
retf
outs
mov
(bad)
in
je
out
mov
gs
outs
sub
outs
ret
mov
aas
xor
pushf
mov
jne
iret
leave
retf
leave
call
cmp
retf
mov
lea
jns
and
fnsave
pop
xchg
dec
mov
ss
aaa
inc
xchg
xchg
fsubp
cmps
shl
mov
(bad)
shl
xor
mov
xchg
pushf
(bad)
lods
sub
enter
imul
(bad)
nop
idiv
add
into
jb
je
and
popf
(bad)
je
out
pop
sub
and
push
or
jne
inc
mov
inc
std
fsubr
dec
movs
retf
sbb
add
dec
sub
je
into
mov
xchg
mov
repnz
outs
mov
div
jge
sbb
gs
inc
sub
xor
mov
xor
in
add
ds
ins
add
mov
adc
cmps
out
xchg
nop
nop
repnz
xor
inc
fidiv
jg
inc
sbb
pop
or
fistp
push
das
xchg
jb
cmp
cdq
js
lods
cmp
push
jbe
sub
jb
loopne
jo
ficom
and
adc
mov
jmp
aas
push
adc
cmp
fimul
jnp
or
stc
add
idiv
icebp
out
loop
jmp
lahf
mov
xchg
xor
mov
xor
and
in
aad
(bad)
ja
pop
xchg
inc
aaa
test
push
xchg
dec
stos
mov
and
xor
repnz
data16
popf
loop
sbb
int
push
test
sub
cmp
je
sbb
rep
inc
and
lods
mov
test
imul
mov
lahf
dec
xor
sub
or
or
xor
xchg
jmp
jp
fs
push
aas
out
cdq
in
push
mov
mov
cld
ja
pushf
and
mov
out
sub
into
pop
mov
sbb
and
into
dec
and
iret
scas
out
js
mov
ins
mov
xor
dec
fs
or
cmp
xchg
mov
mov
cmp
or
addr16
into
call
pop
xchg
adc
aaa
sbb
xor
and
stos
adc
add
sbb
mov
pop
outs
retf
lds
add
adc
xchg
xchg
mov
dec
bound
xchg
cld
ret
mov
fisubr
adc
or
int3
jmp
aad
mov
sub
or
jno
mov
mov
(bad)
(bad)
pushf
adc
dec
enter
out
jg
push
sar
xchg
mov
jne
push
cmp
scas
cs
cmp
(bad)
into
push
call
fwait
cmp
stc
push
retf
les
into
popf
je
stos
mov
mov
jg
jmp
sbb
pop
mov
mov
adc
mov
sub
sbb
push
jmp
jnp
sub
(bad)
push
bound
sub
xchg
stc
mov
cmp
adc
fistp
cld
xchg
inc
xor
cdq
lods
test
dec
push
(bad)
mov
fsubr
dec
jne
jmp
lock
jbe
xchg
adc
sbb
sbb
dec
not
push
mov
push
or
cs
jge
jae
les
pop
mov
xchg
jp
sbb
xor
xchg
xor
mov
aaa
and
aas
mov
dec
and
xchg
dec
inc
jns
push
call
push
and
xchg
outs
(bad)
xchg
fisub
adc
stos
rcr
out
xchg
dec
mov
out
icebp
adc
mov
sub
pop
test
xor
pop
(bad)
fstp
pop
lods
fdiv
pop
jnp
sbb
retf
xchg
xor
pop
cmp
or
out
jl
pop
mov
mov
sbb
jge
shr
ret
test
fs
inc
gs
xor
shr
loop
(bad)
fsub
xchg
add
xchg
(bad)
loopne
stc
jmp
dec
shr
inc
or
jmp
test
add
int
or
addr16
stc
pop
test
(bad)
push
out
sti
xor
aaa
jne
mov
push
lea
jns
clc
fld
xchg
and
and
mov
jo
out
dec
repz
cmps
popf
xor
mov
sbb
mov
pop
jae
inc
leave
out
sar
and
in
lahf
sbb
ror
and
push
cmc
rcr
mov
and
jge
xorps
scas
(bad)
aam
add
and
ins
out
clc
leave
into
sbb
mov
(bad)
and
pop
scas
cmps
and
sbb
jmp
(bad)
(bad)
fld
outs
lea
js
xchg
and
add
movs
pop
pop
mov
xor
mov
inc
movs
push
or
ins
ret
mov
cmps
adc
mov
pushf
outs
gs
jmp
adc
jbe
sub
fisubr
mov
sti
mov
inc
cmp
scas
loop
data16
sub
shl
mov
cwde
psraw
stos
pop
xor
dec
sbb
shl
popf
push
sub
and
mov
dec
mov
int3
dec
pusha
jbe
(bad)
ins
sti
call
adc
ret
sub
xchg
cs
mov
inc
and
jmp
xchg
mov
jge
sbb
add
push
mov
xchg
xor
adc
jne
test
jae
pop
cmp
adc
mov
xor
cld
xor
pop
and
scas
xor
in
dec
jge
lock
xchg
lahf
(bad)
mov
jecxz
ror
inc
cdq
mov
sysenter
iret
jbe
adc
xchg
in
imul
inc
or
push
sbb
fadd
pusha
fwait
add
adc
mov
icebp
xor
cmp
jbe
inc
sar
pop
hlt
scas
pop
(bad)
cmc
mov
(bad)
scas
in
cmp
mov
cmps
xor
scas
inc
pop
add
in
or
out
(bad)
pop
mov
pop
cmp
lods
mov
shl
inc
jnp
add
mov
or
cwde
cld
jle
mov
cdq
std
lods
dec
inc
inc
mov
lods
inc
ds
mov
imul
sub
test
add
outs
ds
mov
in
aaa
scas
pop
xchg
mov
sub
push
add
aad
lahf
cmp
jmp
shl
mov
sub
push
and
daa
out
jg
and
xor
leave
mov
sbb
pop
imul
push
inc
push
dec
or
mov
(bad)
mov
adc
retf
aam
lock
cwde
mov
dec
push
dec
inc
mov
sbb
and
mov
call
xchg
mov
add
inc
or
mov
retf
xchg
cvtps2pd
mov
dec
dec
push
cmp
and
xor
in
mov
jmp
nop
ret
jmp
movs
nop
pop
jp
mov
inc
mov
and
or
xor
mov
adc
adc
clc
adc
pop
sub
fist
shl
dec
pop
ret
fidiv
dec
sub
hlt
enter
cmps
(bad)
xchg
fdiv
les
adc
jbe
movs
fsubrp
sbb
inc
lods
pop
cmp
fisubr
sub
mov
int
xchg
and
aad
movs
xchg
in
not
(bad)
popa
and
inc
jmp
gs
lds
inc
adc
mov
iret
scas
xchg
ins
xchg
or
mov
sbb
ins
lods
iret
push
les
imul
add
cvtps2pd
mov
pop
add
jb
outs
mov
aam
pop
shr
pop
jp
xlat
pop
movs
mov
dec
pop
arpl
or
push
into
sbb
cld
pop
add
in
dec
out
or
mov
xor
movs
mov
sub
aam
xchg
push
fist
xchg
popa
popa
(bad)
mov
or
cmc
hlt
dec
push
or
adc
sub
ror
sub
or
push
(bad)
inc
push
sahf
pop
test
jmp
dec
inc
push
adc
inc
push
push
leave
jecxz
cmp
adc
in
fnstcw
aaa
arpl
xchg
cmovbe
test
mov
mov
imul
cmp
adc
push
jmp
retf
(bad)
fs
mov
out
inc
stos
fmul
fiadd
mov
or
inc
adc
pop
loope
mov
cwde
pop
scas
cwde
mov
ret
out
fnstenv
mov
xchg
mov
ja
aaa
int3
mov
(bad)
cmp
xchg
xlat
jns
bound
sar
mov
jne
dec
popa
jns
lahf
in
xchg
xchg
add
lahf
sub
imul
cs
push
cmc
xor
fisub
aad
aad
iret
mov
enter
dec
pop
call
icebp
inc
sbb
fdivp
lea
aam
push
sahf
ds
jl
cmps
or
in
lahf
fsubp
dec
push
push
dec
sbb
fstp
adc
xlat
mov
in
jno
pop
mov
mov
int3
aad
int3
shl
fcomp
lods
retf
nop
push
std
jb
int
add
xchg
mov
cmp
mov
jg
cmp
iret
xor
add
mov
and
ds
mov
sub
sub
cmp
pop
mov
xchg
jmp
or
push
call
sahf
inc
xor
push
dec
push
pop
(bad)
das
or
sahf
cmp
cmp
xor
loop
lds
(bad)
cdq
repz
aam
(bad)
sub
push
cli
jge
pop
loope
lea
or
cmp
jmp
cmovo
mov
dec
and
mov
add
jno
test
fs
add
cmp
ret
outs
cli
inc
sub
xlat
mov
dec
sub
test
icebp
pop
cmp
in
je
pop
inc
jmp
aaa
icebp
jbe
jle
gs
jg
cmp
popa
dec
ret
jbe
cmp
inc
fsub
add
imul
cmps
pop
je
push
mov
fs
and
and
xchg
and
jae
jge
outs
inc
outs
call
call
fabs
and
jae
cmp
(bad)
es
or
push
jmp
inc
push
sbb
or
out
jecxz
pop
cmps
pop
mov
outs
jge
adc
cmp
or
and
sti
dec
enter
clc
(bad)
jo
outs
ins
cwde
mov
fcmovbe
aam
add
scas
popa
loop
aas
in
retf
push
hlt
dec
push
sahf
bound
adc
mov
dec
nop
push
xor
into
cmp
stos
retf
outs
ficom
xor
cmp
test
cmp
and
xchg
sub
cmp
sbb
mov
jmp
das
push
add
lods
loop
sbb
adc
push
xlat
inc
mov
jns
call
cld
jnp
test
jmp
mov
sbb
push
mov
or
pop
es
clc
(bad)
jge
jecxz
cmps
push
in
pop
or
or
ud1
pop
jg
lods
cmp
stos
mov
(bad)
jmp
ret
lods
je
ja
jg
mov
stc
sbb
and
int
sahf
test
int
push
jns
add
mov
ret
enter
pop
ficom
mov
loop
push
outs
sub
lahf
je
mov
(bad)
pop
pusha
sbb
and
push
mov
lahf
mov
dec
loop
jmp
or
aaa
ret
inc
sahf
(bad)
fdivr
add
mov
jnp
retf
pop
and
push
adc
imul
retf
or
pop
dec
or
inc
mov
jmp
sbb
push
dec
out
ins
add
sahf
cmp
inc
aas
sbb
push
mov
jecxz
mov
in
inc
cld
xchg
add
add
(bad)
into
push
aaa
xchg
or
les
xor
cs
lods
add
mov
shr
int
jmp
add
nop
and
adc
rcl
(bad)
mov
mov
xchg
push
jbe
daa
push
adc
pushf
fmulp
sbb
in
xchg
xchg
or
adc
or
call
fld
(bad)
lods
imul
or
ret
or
ret
jg
(bad)
cmp
mov
inc
test
repz
(bad)
sub
mov
jge
adc
aas
add
mov
pop
and
(bad)
xchg
imul
add
das
scas
push
xor
sbb
push
sbb
or
and
dec
int
jns
inc
mov
sbb
jno
mov
mov
inc
into
int3
adc
add
adc
push
inc
lods
cmp
loop
rcr
inc
or
(bad)
inc
cmp
(bad)
fiadd
out
aam
repnz
rcl
retf
mov
nop
pop
retf
adc
mov
sar
nop
cmp
pop
fs
adc
mov
and
or
in
cmp
dec
pop
movs
add
mov
test
sub
lds
xchg
adc
fisubr
sub
pop
cwde
jno
or
pop
fs
push
jo
push
mov
mov
sub
cmps
cmp
inc
xchg
(bad)
inc
xor
pop
ret
xchg
fstp
mov
or
imul
retf
and
test
pop
(bad)
xor
clc
adc
cmps
pop
ds
push
push
fstp
jne
push
xlat
dec
icebp
add
ins
push
pusha
ja
frstor
xor
inc
push
jg
sbb
mov
iret
sar
push
lahf
std
xchg
mov
dec
xchg
mov
arpl
xor
lods
test
add
imul
or
in
push
jo
sar
mov
sbb
cmp
mov
sub
das
and
push
pop
adc
aam
in
std
pop
test
into
paddd
aas
(bad)
adc
jp
push
mov
in
xchg
pop
add
mov
iret
push
pop
fcom
jns
or
sub
je
xor
mov
mov
das
aam
nop
or
in
jmp
lock
in
dec
xchg
loopne
cmp
jno
dec
add
in
and
adc
daa
add
push
and
scas
adc
or
xchg
arpl
sub
sbb
ret
sbb
xlat
mov
mov
(bad)
fstp
fdivp
cmp
imul
mov
add
mov
and
call
xchg
xchg
xor
mov
and
(bad)
je
dec
cmp
loope
mov
imul
enter
push
ret
retf
ins
sub
int3
out
popa
int3
imul
inc
ror
pop
pop
(bad)
inc
ss
adc
xor
jmp
inc
sbb
ja
inc
(bad)
leave
ss
push
ret
sub
jo
int3
(bad)
and
ja
adc
push
dec
mov
xchg
imul
mov
imul
sbb
and
std
add
cmps
mov
sub
and
fs
pusha
jnp
imul
xlat
push
mov
ja
aad
push
loopne
cmp
push
push
cmps
mov
sub
imul
mov
rol
add
mov
arpl
stos
push
mov
sbb
imul
xor
ins
pop
ror
adc
in
movs
movs
adc
xchg
inc
clc
cmp
push
jp
pop
add
(bad)
or
dec
xchg
stc
mov
stos
xor
in
inc
inc
inc
inc
lahf
js
dec
xchg
mov
es
add
pop
mov
inc
add
and
xor
sbb
mov
mov
fld
push
je
jns
test
or
ja
outs
mov
push
clc
jo
mov
fcmove
add
xlat
xchg
mov
lods
cld
push
jmp
loopne
mov
sbb
ds
push
dec
jnp
(bad)
and
inc
sub
push
add
sub
dec
inc
fstp
sbb
add
mov
and
xor
cmp
inc
test
mov
push
or
cdq
sbb
adc
outs
arpl
mov
xchg
scas
pop
mov
sbb
in
xchg
add
sub
clc
jmp
out
sar
adc
enter
and
out
cmp
cmp
gs
jg
sbb
and
outs
(bad)
and
push
xor
pop
cmp
and
cld
mov
or
fnsave
fistp
es
arpl
xor
loope
clc
add
fld
test
movs
repz
ret
ins
adc
or
xchg
or
cld
cwde
or
lods
cmps
push
cmp
xchg
jecxz
ins
xchg
lock
push
sar
and
in
js
and
xor
dec
push
je
xchg
pop
push
dec
retf
ficomp
dec
aaa
add
xor
sti
adc
ins
jns
hlt
leave
inc
cmp
(bad)
push
scas
cmp
add
cmp
push
xor
int3
clc
xor
mov
push
out
in
sti
stc
add
data16
or
jecxz
enter
ja
jecxz
faddp
adc
das
push
lahf
sub
dec
lds
cmp
hlt
or
cdq
or
ins
or
push
in
lock
rol
and
inc
ret
inc
lods
sar
aam
mov
dec
adc
fwait
xor
sbb
or
cmp
dec
jl
shl
out
out
mov
dec
cld
xchg
cmp
inc
mov
sti
add
test
push
dec
sub
dec
fst
jno
(bad)
stc
inc
in
leave
add
push
xchg
inc
xlat
jp
pop
sbb
(bad)
movs
pop
xor
es
and
xor
jle
xor
add
retf
std
inc
arpl
xchg
outs
pop
dec
ja
nop
sub
es
aas
jb
loope
xor
sti
adc
inc
hlt
jb
out
pop
stos
stos
call
jo
sar
retf
ins
inc
fst
iret
popf
sbb
dec
or
pop
ror
bnd
loopne
jl
mov
mov
out
jl
movs
xchg
push
xor
cmp
inc
repz
test
dec
push
sub
out
pop
adc
test
lock
xor
xchg
ret
mov
sbb
and
test
mov
push
ja
gs
jp
lock
lock
stos
mov
adc
retf
mov
inc
inc
mov
sbb
mov
cmps
mov
jmp
pop
mov
test
nop
nop
mov
push
or
in
add
sti
adc
mov
leave
arpl
pop
mov
mov
and
aam
inc
cwde
jp
ja
pop
jp
or
loope
xchg
ret
and
mov
ins
jbe
(bad)
movs
shl
pusha
ret
in
in
jmp
cs
loopne
sub
sub
inc
mov
pusha
or
test
or
lods
dec
fwait
mov
call
scas
test
mov
test
nop
xor
sub
loop
jp
sbb
shl
jecxz
xchg
lds
das
xchg
pop
fnstsw
xchg
mov
(bad)
fwait
sub
sbb
ret
mov
ins
pop
int3
xlat
rcl
jno
inc
sbb
das
es
sub
adc
adc
retf
in
fidiv
adc
xchg
cmc
retf
cs
je
xchg
hlt
iret
or
dec
test
inc
or
xor
mov
std
pop
mov
push
push
xor
jmp
shl
ret
lea
adc
inc
inc
cs
(bad)
sti
xchg
pop
popa
cmp
loope
xor
mov
push
mov
data16
data16
jp
pop
or
cmps
out
or
mov
jno
sar
loopne
mov
inc
sub
sbb
bsf
(bad)
(bad)
js
mov
mov
idiv
xor
xor
cli
icebp
lea
rol
xor
fst
add
jne
push
retf
xchg
cmc
cmp
loop
xchg
adc
sub
dec
cmp
lahf
daa
leave
push
icebp
push
retf
call
pop
xchg
enter
mov
les
xor
cmp
in
dec
sub
jbe
sub
push
dec
push
aam
stc
(bad)
xlat
fisub
test
int3
inc
inc
dec
pusha
(bad)
mov
xor
jl
pop
out
push
inc
rcr
iret
xchg
inc
pushf
mov
dec
ins
pop
lds
das
dec
data16
push
adc
pop
cmps
aam
jg
icebp
push
sub
in
scas
into
sub
adc
dec
jae
and
push
out
sub
js
adc
cmc
frstor
rcr
int
mov
clc
xlat
fisttp
mov
adc
into
mov
cdq
push
loope
test
and
or
sbb
xor
mov
add
mov
(bad)
je
adc
addr16
outs
sbb
add
addr16
retf
std
ret
add
xchg
jmp
push
out
ret
stos
arpl
adc
pop
xor
sbb
test
dec
dec
aam
in
cld
sbb
cmc
or
xchg
push
cmp
ins
dec
mov
cmp
cld
iret
add
mov
ret
bound
sbb
xor
xchg
aaa
cmp
sub
xchg
mov
rcl
les
jp
ffree
repnz
mov
test
pop
cs
outs
div
or
rol
sub
or
xchg
jnp
jp
cwde
and
xor
and
ins
mov
or
mov
xchg
aam
jge
cmps
sub
aam
in
cld
cli
mov
mov
icebp
cld
div
bound
gs
mov
pop
mov
jo
jns
inc
cld
pusha
inc
mov
sahf
(bad)
addr16
ret
jno
(bad)
call
pop
repnz
mov
push
and
data16
xor
leave
sub
nop
cdq
cmp
ins
mov
and
cld
std
sbb
and
jmp
and
pop
jecxz
and
cli
mov
push
das
(bad)
rcr
dec
int3
cmp
clc
cwde
xchg
aam
xchg
lock
ror
dec
lahf
icebp
scas
pop
call
fmul
repnz
push
out
xchg
scas
inc
les
call
je
jmp
and
or
jp
inc
push
fsubr
cmps
cmp
sub
fsub
loope
push
inc
std
aam
jle
xchg
dec
pop
push
jb
and
jmp
in
or
jae
hlt
dec
ror
cs
clc
out
push
xor
adc
xlat
jb
js
mov
imul
cmp
cwde
stos
mov
lock
adc
mov
popa
imul
enter
pop
xlat
imul
neg
mov
jae
push
and
xchg
or
cmps
push
stos
add
stc
lahf
inc
js
jge
vpsubq
mov
add
adc
mov
in
les
movs
test
sbb
xor
ror
push
das
test
adc
push
aad
dec
dec
push
imul
mov
add
mov
jmp
ficomp
in
pop
mov
les
test
pop
(bad)
leave
adc
mov
adc
js
repnz
sub
outs
ret
call
sub
ds
cli
into
and
xchg
cmp
mov
dec
test
or
bound
fs
push
sbb
outs
daa
(bad)
xor
sbb
js
pop
fdivr
stc
ja
test
or
mov
jle
pop
jnp
data16
in
cmps
xchg
mov
xlat
imul
icebp
adc
mov
jmp
je
jmp
inc
inc
inc
sub
loopne
jecxz
add
movs
jmp
enter
sub
aaa
cmp
push
ins
bound
push
jmp
and
cdq
jae
push
add
cmc
jge
mov
fwait
jb
cmp
in
mov
shl
mov
sar
push
mov
sar
out
or
mov
cld
out
inc
scas
lods
es
pusha
pop
sbb
dec
and
add
ret
xchg
push
sbb
ja
cmp
xchg
add
rcr
in
inc
(bad)
(bad)
imul
hlt
ror
push
pop
sbb
add
test
ret
(bad)
jmp
enter
jbe
jno
and
mov
or
push
test
push
(bad)
test
sbb
push
add
jae
shr
sahf
pop
pop
test
(bad)
push
sub
jbe
js
shr
jp
mov
mov
imul
rcr
mov
add
sub
adc
lea
add
jp
push
dec
shl
mov
test
cwde
call
outs
cmp
jae
popf
mov
add
into
push
jl
and
repnz
int3
mov
rcl
mov
sbb
pop
outs
jge
xchg
shl
mov
mov
inc
in
pop
addr16
and
mov
jle
stos
sar
push
xchg
pushf
outs
xchg
aas
and
fcmovnb
in
(bad)
jae
(bad)
xchg
mov
imul
push
mov
test
retf
or
or
lock
push
test
push
idiv
jnp
push
ins
push
fucomp
jo
test
mov
in
add
loopne
inc
aad
test
les
push
data16
mov
int3
fild
push
mov
jb
std
or
cli
leave
aad
jo
push
pushf
ins
aam
outs
or
imul
loop
in
nop
jge
clc
mov
jg
fwait
pop
adc
mov
mov
xlat
cs
dec
dec
fcmovu
das
mov
mov
std
mov
shl
sub
cli
ss
sub
dec
adc
or
sub
int3
out
dec
loopne
xchg
in
mov
fucomp
loope
jae
pop
mov
dec
xor
fistp
out
xor
lahf
jne
mov
imul
push
neg
out
mov
inc
inc
sbb
xchg
fimul
pop
and
add
xchg
mov
jbe
in
bound
jno
imul
push
cmp
es
das
cmp
pop
cmp
ficomp
jmp
sub
sub
pop
mov
ret
movq
pusha
mov
enter
pushf
cli
cmp
xchg
retf
xchg
sahf
sub
imul
mov
mov
sub
dec
xor
add
inc
jne
adc
pop
pop
pop
xchg
lods
cld
je
pop
cdq
push
loopne
shr
push
push
or
mov
adc
dec
jns
cmp
mov
xlat
dec
sub
or
dec
mov
push
cmp
fcomp
shl
mov
sti
ds
adc
sbb
mov
jae
dec
and
jbe
sub
dec
xchg
mov
ja
mov
sar
push
jne
xchg
jmp
paddusb
sti
jl
or
mov
bound
adc
pop
cmp
cmp
movs
scas
xchg
dec
pusha
mov
test
hlt
inc
das
and
ins
push
inc
cmp
mov
test
arpl
jl
sbb
bnd
dec
je
and
test
ins
mov
sahf
lds
inc
sbb
pop
sbb
sbb
push
jmp
scas
std
jb
dec
test
cmps
adc
jmp
dec
fst
inc
imul
mov
hlt
add
xor
stos
imul
mov
jae
or
cmp
into
xor
ret
div
xchg
inc
push
in
add
out
sub
xchg
ret
push
test
cmp
icebp
xchg
push
sbb
arpl
cmp
lods
dec
ins
lods
mov
jnp
idiv
pop
imul
cmp
sar
mov
and
das
cmps
fstp
sti
ins
mov
pop
aad
push
jae
or
pop
imul
mov
mov
mov
scas
inc
sahf
popa
mov
fist
aaa
mov
lahf
(bad)
ins
jns
popa
outs
jg
mov
jne
sub
pop
xor
adc
pusha
cmp
test
jl
jo
ret
lods
shl
sbb
outs
push
add
adc
jno
dec
fld
push
shr
pop
mov
imul
sahf
out
movs
push
xchg
pusha
xor
lock
data16
push
imul
bound
in
xor
ret
dec
and
inc
xor
retf
jno
and
rcl
adc
ins
lods
cmc
dec
push
cdq
in
pop
push
lea
sbb
test
mov
fsubr
push
(bad)
rcl
out
aam
(bad)
scas
adc
lea
(bad)
lea
xor
pop
bound
(bad)
sub
pop
loop
cmp
push
rcr
lods
rcr
or
fsub
jnp
mov
xchg
in
div
adc
push
xor
and
in
push
push
inc
rol
push
or
mov
xchg
adc
add
outs
dec
mov
retf
mov
out
scas
movs
mov
jge
jnp
int
mov
sub
jmp
push
sbb
sbb
mov
or
imul
pushf
scas
data16
mov
fs
pusha
or
mov
jns
jmp
mov
mov
mov
stos
mov
test
inc
sahf
push
xchg
mov
jb
lock
pushf
lock
sub
retf
cmp
int
adc
dec
adc
rcr
sbb
push
out
fmul
cmp
call
jb
jno
sub
push
xchg
add
mov
in
cld
test
cmp
shr
neg
push
in
ja
push
cmp
leave
xor
int3
out
fstp
pop
adc
pusha
jbe
int3
rol
cmp
mov
mov
or
cmp
sub
jle
adc
test
out
out
push
jns
out
mov
jmp
shl
rcl
add
aad
in
jmp
into
ss
aas
stc
mov
imul
mov
push
(bad)
inc
bound
lock
imul
xchg
xchg
add
call
(bad)
xchg
loope
mov
inc
call
or
in
mov
jl
sub
js
mov
dec
cwde
ds
mov
(bad)
pop
retf
mov
aaa
lods
test
and
dec
mov
sub
loopne
data16
test
mov
push
aad
jno
xchg
sbb
xor
(bad)
enter
push
lahf
test
fs
xlat
lea
jle
and
mov
push
and
fist
cmp
adc
out
inc
cmp
dec
scas
js
push
adc
push
not
add
jno
test
test
xchg
cdq
sub
push
jns
imul
mov
jno
retf
iret
shl
xchg
sbb
test
cs
(bad)
jmp
and
mov
data16
lods
cmp
sub
and
adc
sahf
imul
push
loope
mov
sbb
shr
arpl
arpl
out
icebp
cmc
imul
in
lea
mov
jnp
inc
dec
shl
cmp
inc
rcl
cmps
cmps
pop
inc
cmc
xchg
jne
mov
push
add
push
jb
test
jg
aam
mov
in
and
dec
daa
ds
mov
fadd
popf
ja
enter
add
dec
xor
lock
pop
pop
es
mov
cmp
lods
cmp
sbb
xor
cmp
mov
das
das
mov
rcr
pop
cmp
jo
jb
les
sar
cmc
mov
call
pop
out
and
inc
stos
mov
cmc
jge
xor
js
hlt
mov
adc
fcom
sub
das
mov
xor
neg
shl
sub
neg
ret
shr
xor
int3
scas
inc
fild
sub
pop
out
cmp
and
fs
add
xchg
inc
ret
or
cmp
sub
jnp
loopne
out
xlat
inc
adc
movs
clc
shl
fadd
push
lds
hlt
mov
inc
popa
cld
jnp
mov
xor
ja
sbb
stc
add
or
shl
mov
cmp
xchg
adc
(bad)
and
push
addr16
loope
cmc
mov
add
xlat
jne
push
sub
data16
push
arpl
popf
icebp
or
inc
loopne
jb
mov
imul
inc
test
pop
jg
bound
ror
xor
ror
dec
push
pop
out
call
inc
inc
sub
cmp
xor
pusha
aam
pushf
xor
or
xlat
mov
adc
jo
retf
in
out
aaa
outs
cdq
dec
dec
add
push
test
cmps
and
in
mov
cld
sbb
sub
dec
movs
repz
add
adc
xchg
lds
pusha
dec
cmp
popf
fyl2x
enter
xchg
popa
pop
sbb
and
mov
inc
ror
pop
gs
hlt
mov
mov
pop
mov
sub
dec
fst
pushf
add
xchg
or
jb
inc
inc
popa
mov
mov
add
in
fisttp
sahf
cmp
inc
and
out
jmp
mov
xchg
outs
shr
icebp
mov
push
sbb
cmp
ror
rcr
add
aam
push
mov
inc
mov
pop
cmp
dec
nop
fwait
inc
sub
pop
xor
inc
repnz
shl
mov
out
out
outs
jg
xor
jge
pop
mov
loope
inc
repnz
or
popa
xor
das
mov
pop
test
or
cli
je
outs
rcr
dec
fist
xlat
fwait
or
jns
(bad)
mov
mov
push
loop
dec
push
push
les
in
mov
shl
mov
sub
ins
jns
mov
and
loop
cmp
daa
arpl
adc
mov
(bad)
mov
jl
xor
popa
or
inc
(bad)
xor
fstp
mov
push
inc
lods
pusha
mov
mov
retf
icebp
mov
inc
pop
adc
cli
add
inc
rcr
or
sub
imul
push
pushf
pop
pop
sahf
mov
mov
shl
cdq
cmp
lods
jb
or
cmp
data16
adc
mov
pop
or
fcmovu
call
mov
iret
retf
arpl
hlt
(bad)
push
rol
mov
test
mov
xchg
xchg
loop
dec
xor
stos
mov
push
jge
add
inc
xor
push
push
not
pop
rcl
cs
xor
retf
dec
pop
push
adc
push
mov
and
push
adc
and
(bad)
aaa
or
sbb
aas
mov
add
scas
(bad)
jo
inc
loopne
dec
sbb
fwait
leave
popf
pop
das
mov
xchg
fisttp
jle
or
adc
mov
fnstsw
test
lods
pop
ds
int3
fldenv
(bad)
pop
pop
pop
pop
stos
jns
inc
jg
mov
inc
adc
mov
scas
sub
sub
and
jge
inc
inc
and
addr16
jmp
cmps
sbb
imul
and
fiadd
sbb
add
fsubr
add
aam
das
into
cwde
and
xor
xor
lea
push
fsubr
pop
popa
push
jne
mov
dec
pop
lock
mov
scas
xor
jl
jl
mov
sbb
mov
int
and
outs
or
mov
leave
push
mov
mov
cmc
cmp
popa
adc
lods
mov
cmc
pop
lock
pop
in
fdivr
mov
jbe
lods
test
scas
add
adc
xor
dec
stc
mov
and
sbb
ror
outs
fistp
in
out
inc
daa
add
inc
or
loope
outs
and
add
fidivr
(bad)
sub
mov
in
mov
fsubr
or
mov
mov
lods
lods
mov
int3
mov
jno
push
in
scas
pusha
lds
faddp
sbb
jecxz
pop
fs
popf
mov
push
sub
popf
fistp
mov
(bad)
pop
push
push
popf
pop
sbb
das
xchg
cwde
fadd
sbb
scas
jecxz
ficomp
inc
xor
nop
loope
loopne
les
and
out
or
popf
inc
pop
rcr
cmps
push
int3
cmp
call
fidiv
xor
das
dec
std
ja
dec
(bad)
and
arpl
inc
retf
fstp
out
psubb
mov
sub
outs
lods
and
mov
mov
int3
xchg
std
xchg
mov
fwait
add
das
lea
xchg
in
cmp
adc
enter
es
xchg
cmp
lahf
jne
pop
ja
sbb
scas
aad
jmp
cmc
sub
push
push
cmps
sahf
xor
in
xchg
dec
pop
pushf
xchg
push
cld
cld
call
mov
mov
dec
jbe
push
dec
sti
mov
das
les
icebp
inc
dec
(bad)
cdq
sbb
pop
mov
sbb
sub
xor
pop
mov
(bad)
inc
jns
je
ins
mov
mov
inc
enter
sbb
in
mov
xchg
add
or
rcl
add
test
jb
adc
inc
js
add
rcl
hlt
(bad)
loop
adc
repnz
js
iret
mov
popf
(bad)
cs
mov
and
aam
mov
push
pushf
sar
cmp
lahf
xchg
clc
sbb
pusha
movs
or
out
mov
imul
ja
mov
push
dec
mov
mov
jl
lock
mov
mov
pusha
fisub
dec
push
jge
in
call
clc
test
js
ss
add
and
sub
test
mov
xchg
shl
sub
outs
mov
popf
popf
retf
lds
xor
(bad)
popf
and
jp
mov
mov
xlat
(bad)
pop
scas
mov
ss
adc
test
sub
xlat
sub
mov
adc
mov
and
jecxz
cdq
shl
mov
xchg
(bad)
fdivrp
ret
mov
cmp
out
xchg
mov
js
test
shl
jl
inc
mov
bnd
push
xchg
push
sub
test
ss
xchg
fs
mov
cs
fldz
fcmovbe
out
sbb
jmp
(bad)
fldcw
ins
jno
sub
cdq
(bad)
sbb
add
cld
idiv
lods
dec
enter
fisttp
ins
xor
mov
add
mov
std
jno
(bad)
(bad)
cmp
iret
leave
sub
push
inc
inc
or
retf
sbb
call
fwait
movs
sub
data16
int3
jo
mov
stc
fwait
pushf
arpl
add
or
add
sbb
sub
retf
cwde
xchg
scas
retf
mov
mov
aad
cmps
or
mov
jnp
into
push
sbb
mov
test
clc
mov
adc
mov
pop
mov
adc
loop
mov
pop
jl
mov
pop
test
ins
test
lahf
and
clc
cli
xlat
sub
out
mov
es
rol
inc
loope
loop
push
and
pop
pop
sbb
or
jmp
lahf
jne
mov
shl
inc
adc
addr16
xchg
out
push
jle
(bad)
mov
mov
mov
xlat
jne
sahf
jge
mov
lahf
add
movs
leave
fisttp
mov
add
cs
fcom
cdq
add
push
cs
jmp
(bad)
sahf
jle
cmps
mov
ss
(bad)
jmp
push
fst
enter
fst
call
fisubr
mov
jmp
sub
aam
mov
stos
mov
inc
test
(bad)
enter
xor
mov
xor
das
dec
cmp
rcr
xchg
jecxz
aas
mov
sbb
fisttp
mov
int3
scas
mov
stc
push
cmp
gs
pop
cmp
jmp
sub
cmp
imul
sub
push
push
shl
fimul
aaa
clc
sbb
and
in
push
or
cwde
mov
(bad)
lock
arpl
stos
and
test
cli
pop
jne
mov
cmp
daa
push
inc
xor
xchg
pop
leave
mov
std
fs
cmc
dec
not
shl
dec
movs
pop
add
and
and
imul
pop
pop
inc
imul
das
hlt
rcl
data16
push
mov
cmp
jmp
arpl
repz
ja
xchg
stos
jecxz
ret
xor
nop
into
retf
xor
cmps
jl
call
xor
adc
add
sti
pop
sub
fucom
lea
rcl
and
ds
mov
adc
loope
mov
push
sub
pusha
sbb
add
mov
fld
call
mov
jno
test
(bad)
out
pop
test
sahf
fild
sbb
xor
add
and
movs
fmul
adc
mov
aaa
jnp
fadd
and
pop
(bad)
out
cdq
bnd
push
repnz
sub
int3
adc
push
call
dec
cdq
(bad)
jmp
loopne
repz
loopne
jno
(bad)
in
pop
loop
mov
xchg
adc
daa
jns
aad
aad
or
imul
mov
cmp
lods
push
ret
mov
and
push
sub
mov
outs
xor
cmps
stos
sub
loopne
imul
or
sub
inc
outs
hlt
in
sar
add
ret
fdivr
popf
rcr
or
div
ins
rcl
leave
imul
and
push
loop
push
cmp
dec
or
jmp
jmp
ins
dec
add
ja
inc
popf
dec
js
sub
mov
test
mov
iret
or
mov
pop
mov
outs
loopne
push
rcl
scas
dec
jb
popf
stos
dec
mov
xor
pop
shl
sbb
pusha
mov
mov
sbb
out
jbe
lds
in
dec
add
pop
and
sub
and
repz
or
cli
enter
sbb
push
mov
or
add
jmp
mov
stos
clc
daa
in
and
(bad)
sbb
mov
arpl
jb
xchg
js
mov
loopne
cmc
or
push
xchg
cmp
cld
sub
(bad)
int
pusha
sti
pop
mov
push
rcr
mov
nop
lea
inc
push
mov
lods
test
lods
scas
movs
jp
pusha
in
and
jo
addr16
xor
mov
repnz
push
ficom
or
xor
in
and
adc
jmp
jecxz
aad
imul
jnp
sbb
push
fs
adc
std
outs
and
pop
rcl
inc
cmp
inc
es
das
out
cdq
sub
cmp
and
movs
mov
sahf
dec
mov
dec
push
scas
ds
fdivr
repnz
imul
ss
xor
mov
(bad)
pop
icebp
xchg
dec
and
jl
push
mov
jp
das
cmp
xchg
scas
mov
sbb
das
jae
pop
sub
cli
sub
je
repz
xchg
cmp
mov
mov
jle
or
pop
mov
js
jb
mov
test
ss
jns
push
xchg
js
dec
push
pop
in
cmp
xor
test
call
cld
or
sbb
scas
sub
inc
idiv
ror
sahf
inc
push
call
dec
and
add
ror
mov
mov
aad
inc
push
sub
push
push
and
mov
cmp
mov
xchg
in
clc
sub
movs
(bad)
fwait
or
add
aas
test
(bad)
xor
jmp
icebp
dec
mov
mov
in
push
fcmovne
mov
fwait
dec
cwde
test
xchg
cmp
jecxz
mov
pusha
rcl
in
sbb
cmp
ficom
push
and
dec
dec
es
push
add
fiadd
daa
call
lahf
retf
mov
mov
add
inc
outs
pushf
mov
jne
sub
xor
adc
cmp
ins
add
pop
test
retf
and
movs
jnp
clc
add
cmps
lahf
faddp
in
xchg
nop
mov
lock
ds
stos
lahf
sbb
pop
aad
jnp
adc
movs
dec
jge
mov
pop
cmp
inc
xchg
xor
dec
pop
dec
rol
push
sbb
xor
aaa
sar
jns
pop
or
sub
or
jo
sub
repz
lods
pop
ror
cmp
hlt
dec
sub
cwde
mov
dec
sahf
rcr
push
scas
mov
jbe
mov
movs
(bad)
movs
sbb
loopne
daa
mov
(bad)
and
mov
retf
jb
cmc
test
xor
push
int
lods
ret
ret
xchg
mov
mov
iret
xchg
cdq
jmp
pop
gs
in
lock
inc
shr
outs
stos
aas
xor
(bad)
in
pop
das
or
or
xor
sub
mov
adc
push
hlt
rol
fimul
or
lds
call
xor
test
or
push
and
mov
mov
xchg
shl
jecxz
mov
mov
adc
push
add
ret
jno
xchg
inc
mov
scas
in
mov
sub
push
pop
mov
cmp
xchg
fcmovb
inc
mov
xor
rol
fisubr
mov
imul
jnp
mov
outs
mov
xchg
cmp
and
jle
in
add
pop
xchg
mov
inc
xor
pop
cmp
mov
adc
imul
push
pop
(bad)
bound
inc
fstp
or
fsub
mov
test
mov
add
xor
xor
test
push
xor
pop
aaa
xchg
mov
jl
push
jl
in
pop
fist
test
mov
adc
stc
or
fadd
fisub
ret
ins
push
in
xor
mov
popa
pop
daa
sub
push
xor
ins
and
rcr
dec
mov
jnp
jbe
mov
shr
out
jo
test
mov
bound
lds
pop
push
int
push
sbb
fnstcw
or
jne
jns
xchg
in
push
iret
les
pop
and
dec
jae
(bad)
jnp
xor
sub
jmp
pop
(bad)
adc
movs
push
adc
out
push
jno
std
xlat
mov
jmp
outs
add
xchg
cdq
adc
or
xchg
add
mov
jns
inc
enter
dec
jae
ss
sbb
arpl
xor
rol
mov
popf
repz
adc
xor
cmp
push
xchg
sub
lea
je
repnz
aam
sub
dec
js
xchg
test
out
loope
cmps
int
push
adc
clc
loopne
push
jns
js
outs
add
jns
mov
or
aad
inc
or
mov
add
rcr
aas
mov
sti
outs
popf
int3
loope
mov
sbb
mov
inc
test
clc
or
xor
or
shl
mov
test
mov
ret
mov
mov
(bad)
lea
test
inc
test
or
xlat
pushf
data16
inc
ins
add
mov
dec
inc
push
xlat
jne
dec
mov
aad
(bad)
adc
loope
adc
and
inc
xor
fimul
dec
jp
add
jge
stos
and
sahf
cdq
mov
fwait
lods
inc
dec
enter
mov
push
cmp
xlat
dec
mov
dec
mov
pop
cmc
sbb
lds
loopne
cmps
push
scas
rcl
jecxz
ds
ret
mov
neg
xor
mov
jne
and
(bad)
in
lock
dec
icebp
cmp
outs
mov
xor
sbb
push
mov
test
pop
jmp
jae
inc
cmc
xor
gs
add
bound
ds
dec
in
xchg
jne
inc
pop
mov
je
xor
fcmovnu
shl
fnstenv
arpl
leave
xchg
nop
in
sub
lds
push
repz
pusha
cmp
sbb
scas
adc
cmp
mov
hlt
mov
and
retf
js
iret
mov
adc
push
jecxz
xor
adc
pop
xor
pusha
xor
xchg
push
shl
xchg
jne
dec
jmp
test
sbb
mov
loope
inc
or
mov
loopne
sub
xlat
clc
add
add
ins
push
popa
push
adc
es
cmp
(bad)
test
(bad)
xor
rcr
mov
dec
adc
push
sub
cs
jnp
sbb
pushf
adc
add
in
and
hlt
adc
sete
inc
frstor
(bad)
das
sbb
pop
mov
stos
add
aas
shr
push
ret
mov
mov
daa
je
mov
push
sti
jecxz
lahf
dec
dec
inc
jae
es
mov
fs
pop
cmovno
xor
add
and
mov
lock
jns
(bad)
mov
pop
fs
lea
dec
cli
inc
cmp
pop
ret
sahf
fadd
popf
std
xor
jo
jae
(bad)
mov
dec
add
add
or
or
cs
cmp
push
pop
arpl
stos
mov
and
ret
push
lahf
call
in
push
push
imul
mov
into
and
inc
clc
retf
popa
cmc
add
in
(bad)
dec
jle
xlat
push
int
idiv
xor
pop
shr
xchg
ja
sti
aas
pop
or
xor
fcom
xor
push
mov
jo
push
jbe
jmp
and
add
js
inc
retf
cmp
es
(bad)
mov
add
xchg
adc
cmp
leave
xchg
rcl
adc
(bad)
cld
mov
test
dec
sbb
pop
sbb
mov
dec
in
std
arpl
cmc
xor
push
sub
or
add
or
(bad)
dec
dec
xor
rcl
sub
push
lods
mov
fisub
test
mov
enter
leave
cmp
sbb
(bad)
int
add
jg
sub
rol
push
adc
(bad)
push
mov
rcr
push
ret
cmp
push
aas
jge
xor
jge
mov
mov
mov
outs
mov
sahf
xor
jmp
ins
out
lahf
adc
lods
push
in
ret
cwde
jb
mov
xlat
push
mov
aad
sar
popa
add
sub
pop
push
out
xchg
sbb
cwde
push
push
and
call
sbb
lahf
aad
cmp
push
aaa
pushf
imul
imul
imul
loopne
or
mov
sub
push
daa
dec
mov
test
push
jmp
enter
mov
push
xchg
loop
xchg
test
add
int3
push
das
mov
stc
adc
and
out
lods
and
sub
add
add
xchg
dec
pop
rol
adc
or
(bad)
adc
mov
sahf
aam
enter
or
xlat
ins
outs
pop
dec
iret
mov
and
push
jbe
and
ds
dec
inc
dec
pop
jns
dec
dec
rcr
dec
push
idiv
dec
test
jae
mov
loope
jge
daa
lea
icebp
cmp
sub
sub
mov
test
jg
mov
mov
push
lods
push
mov
adc
pop
sar
pop
xchg
in
push
pusha
jge
jmp
out
sti
add
pop
and
loopne
push
out
mov
mov
and
mov
cmps
xchg
das
sbb
ins
cld
inc
mov
out
ret
pop
leave
dec
push
lods
into
xor
mov
mov
out
cld
pop
and
(bad)
and
or
jecxz
mov
dec
test
scas
cdq
xchg
fs
jne
pop
pop
loope
jne
dec
cmps
add
xchg
cmc
movs
cmp
add
ret
and
mov
add
test
cs
xchg
jle
xor
push
cmc
sub
adc
lock
in
dec
dec
mov
mov
(bad)
xchg
push
imul
aas
pop
sahf
fucom
ja
int3
add
adc
dec
hlt
sub
je
popf
fs
jp
cmp
mov
mov
or
(bad)
mov
cmp
fisubr
shl
out
ret
push
ja
outs
gs
frstor
dec
pop
scas
lods
pop
xor
shl
daa
aam
fisttp
mov
xor
sub
jns
jmp
jle
fidiv
push
mov
pop
repz
adc
arpl
xchg
ret
mov
ja
pop
push
sub
mov
push
scas
sbb
pop
arpl
in
xchg
and
adc
out
mov
mov
bound
fist
add
je
loope
sub
jg
sub
add
mov
mov
mov
test
sbb
push
fwait
mov
xor
fadd
xchg
push
add
mov
xchg
add
push
and
fs
aam
cmp
mov
in
pop
loopne
jae
inc
mov
ja
push
push
call
pop
mov
pop
call
pop
inc
into
jmp
or
cdq
fisttp
sahf
sbb
add
call
xchg
jmp
jge
dec
pushf
jbe
ficomp
jl
aaa
loop
mov
ins
movs
xchg
movs
cdq
adc
push
leave
cli
and
addr16
mov
fidiv
cwde
jb
dec
adc
mov
jmp
jo
xchg
or
mov
or
mov
sub
xchg
cmps
jno
nop
and
xor
and
call
jl
shr
nop
push
or
or
add
daa
add
ror
retf
ret
inc
adc
mov
pop
scas
mov
pop
inc
cmps
sub
pop
inc
push
sbb
cmc
pop
mov
pop
div
or
sahf
pop
cmp
fmulp
fild
jb
xchg
cmp
mov
imul
and
(bad)
and
dec
sbb
dec
sbb
and
sti
fimul
inc
sbb
jp
pop
jp
fs
repnz
cmp
test
adc
inc
mov
ins
fxam
mov
pop
xchg
imul
shr
mov
pop
mov
retf
scas
gs
lock
jle
(bad)
daa
in
mov
mov
repnz
lock
jae
sub
inc
cmp
cld
push
stc
pop
adc
dec
mov
xor
cwde
(bad)
fisttp
or
adc
shl
shl
call
jmp
stos
lds
aas
(bad)
js
pop
dec
push
test
dec
xor
add
sbb
mov
scas
icebp
mov
push
push
add
(bad)
std
mov
rol
sahf
mov
add
test
push
push
jns
pop
outs
pop
fmul
add
int
push
sub
rol
repz
inc
cdq
inc
sar
or
fld
js
jns
fwait
xchg
jne
ds
dec
mov
arpl
mov
sbb
test
mov
adc
sbb
outs
push
push
pop
fidiv
mov
sub
cmps
retf
mov
lods
push
loopne
rcr
pusha
jno
xchg
call
xchg
xchg
fnstcw
push
xchg
out
(bad)
out
pop
jmp
jne
push
sub
mov
(bad)
arpl
push
rcl
sub
mov
int
aas
mov
test
mov
jmp
mov
sbb
lds
or
sub
sub
in
add
or
jmp
sahf
jbe
popf
mov
(bad)
in
fsub
mov
mov
jg
pop
adc
xchg
mov
test
gs
xor
inc
dec
push
(bad)
fisubr
mov
sub
jle
mov
mov
dec
lods
imul
in
jo
and
int3
lods
mov
or
in
xchg
lea
(bad)
mov
ret
(bad)
retf
clc
mov
pop
add
aad
pop
loope
out
lea
out
test
dec
dec
inc
inc
inc
or
aaa
xor
or
mov
ret
leave
mov
scas
inc
into
mov
ret
adc
inc
ret
cwde
arpl
cmc
bound
mov
std
fcom
repz
sub
in
stos
jmp
lds
ret
hlt
arpl
into
cmp
test
scas
enter
sahf
test
mov
js
inc
mov
xchg
fadd
das
dec
xchg
in
ins
out
push
pusha
add
mov
stos
xchg
cmp
pusha
push
repnz
add
xor
and
jns
mov
mov
out
push
xchg
sub
out
sti
jno
or
mov
pop
add
adc
jge
daa
jmp
push
or
cmc
lods
xchg
pop
clc
test
call
dec
adc
xor
in
cmps
mov
mov
loopne
jmp
sbb
cmp
enter
add
cmp
mov
push
dec
mov
pminub
or
cwde
rcl
adc
and
adc
les
cmps
xchg
fldz
out
dec
popa
sub
and
jb
sbb
and
les
or
or
adc
cs
dec
std
xchg
(bad)
inc
addr16
ins
in
nop
imul
jns
pop
pop
jmp
scas
jmp
inc
or
add
or
add
add
add
add
or
add
add
stc
xchg
add
dec
inc
inc
push
js
in
call
jg
repz
sti
mul
pop
push
pop
jno
xchg
and
mov
rol
cmp
call
leave
mov
inc
jbe
(bad)
and
sub
mov
test
test
ss
nop
or
push
xchg
pop
and
push
fadd
pop
mov
jge
sti
int
xor
movs
push
pusha
pop
adc
loop
jmp
(bad)
stc
jg
ja
pop
adc
mov
jmp
shr
fist
and
and
jle
sti
(bad)
mov
inc
idiv
fistp
cli
psadbw
imul
nop
(bad)
pop
std
pop
movs
aas
sub
xor
in
cmp
jg
cmps
inc
outs
(bad)
dec
cmc
(bad)
xor
(bad)
mov
mov
addr16
or
jae
sub
push
dec
outs
out
je
xchg
jns
mov
loope
int3
jne
data16
shr
rcl
inc
jp
mov
add
sbb
shr
ret
cli
(bad)
in
mov
jns
ins
gs
das
sti
fldcw
mov
fldcw
add
add
inc
inc
sub
jl
lahf
mov
or
add
test
sbb
push
inc
hlt
adc
hlt
adc
xor
cmp
add
jae
fs
sub
mov
sub
dec
(bad)
arpl
push
sub
or
test
leave
or
lahf
mov
test
inc
mov
iret
or
div
xor
(bad)
and
retf
push
mov
add
or
dec
retf
push
mov
repnz
add
scas
add
pop
and
(bad)
aad
test
sub
add
xor
ja
inc
scas
jl
push
lods
mov
mov
adc
push
xor
adc
xchg
or
sbb
mov
or
xor
xchg
mov
pusha
sbb
push
pop
inc
xlat
gs
pusha
call
cmps
imul
xor
sub
js
cld
jl
lods
add
icebp
or
push
rol
mov
(bad)
or
test
cmp
jecxz
test
mov
cmp
xchg
das
ret
aad
cmps
ds
dec
and
movs
add
mov
jp
sbb
mov
cmp
test
adc
mov
push
cs
cmp
test
xchg
pop
es
push
cmp
mov
push
out
leave
pop
pop
stc
xor
out
sahf
xor
or
cmp
pop
and
jmp
sahf
repnz
les
nop
dec
cmps
imul
dec
fmul
jb
lahf
xor
inc
adc
lea
jnp
mov
mov
xchg
push
add
push
pop
or
scas
pop
or
dec
jge
stos
push
sti
fst
xor
or
inc
stos
and
sub
test
scas
popa
arpl
lea
sub
jge
mov
pop
dec
cmps
dec
inc
inc
mov
fdivr
imul
hlt
mov
scas
mov
add
push
push
or
rcr
int3
in
into
ins
jecxz
pop
xor
imul
push
inc
cmps
cmps
mov
sbb
(bad)
(bad)
imul
add
cmp
mov
mov
and
call
inc
jg
aam
(bad)
cmp
pop
mov
cmc
adc
dec
xchg
sbb
in
movs
scas
out
push
cmp
fsubr
ror
call
sbb
or
int
(bad)
repnz
test
movs
gs
jle
mov
dec
ja
push
pop
dec
jmp
(bad)
call
jle
push
fsubr
mov
dec
sub
movs
sub
adc
jmp
push
out
jp
cdq
movs
push
push
or
jl
test
pop
jne
xlat
mov
mov
inc
enter
mov
cwde
neg
(bad)
outs
push
icebp
xlat
sub
mov
mov
pop
sbb
imul
sbb
jmp
imul
sbb
jmp
mov
dec
fdivr
jns
lock
in
mov
push
inc
loop
or
bound
inc
data16
inc
jno
out
sub
mov
sub
inc
dec
cdq
ror
das
imul
outs
aas
mov
int
mov
or
jnp
fdivr
shl
shr
out
mov
call
sbb
hlt
push
fcmovu
mov
neg
cld
in
fild
into
ja
sub
xor
mov
jae
jl
nop
clc
cmps
or
adc
and
sbb
outs
sub
loopne
imul
scas
sti
fwait
jg
pop
(bad)
sub
cmp
cwde
or
test
ret
or
lahf
fcomi
shr
xchg
clc
stos
fld
imul
and
xchg
dec
nop
xor
je
sub
sbb
into
pop
cld
xchg
mov
cld
rol
adc
adc
loope
xchg
shr
dec
ins
add
mul
rol
ss
mov
adc
sub
jge
push
xor
dec
and
adc
and
in
cmp
out
out
push
cmps
inc
out
std
fst
imul
inc
cmovp
dec
(bad)
mov
les
popa
nop
dec
movs
dec
data16
jg
mov
lock
mov
ins
loopne
aad
mov
out
idiv
cs
fdiv
cmps
or
add
pusha
adc
loop
dec
inc
(bad)
push
div
lahf
(bad)
dec
and
cmp
add
imul
mov
sub
shl
adc
or
jmp
sub
xchg
loope
xchg
cmps
sub
je
fsubr
jg
pushf
pop
pop
and
mov
xchg
or
push
out
mov
push
add
cmps
or
add
sbb
retf
in
pop
into
je
ins
sbb
xchg
aaa
add
push
xchg
push
dec
(bad)
retf
inc
jmp
scas
div
cmc
mov
(bad)
out
jge
mov
mov
leave
scas
pusha
fdivr
(bad)
hlt
jmp
ret
jecxz
cmp
inc
dec
pop
dec
pop
jae
mov
jmp
mov
aas
dec
dec
movs
xchg
sbb
jp
pop
mov
pop
and
dec
sbb
inc
mov
push
lods
inc
ss
mov
fadd
pop
sub
jge
xor
ins
sbb
or
popa
outs
outs
mov
pop
jle
push
imul
test
dec
popa
lds
movs
dec
xchg
icebp
cmps
es
fadd
cs
mov
sbb
repz
ror
enter
inc
mov
retf
sub
pop
inc
dec
movs
lock
mov
jb
inc
or
inc
cmps
jbe
sti
xor
or
loop
add
dec
out
arpl
out
mov
ds
loopne
ret
dec
idiv
(bad)
div
jg
mov
add
out
sbb
mov
out
loopne
test
stos
fs
pushf
jp
adc
loop
dec
sahf
jns
sbb
out
xor
es
xchg
test
add
outs
mov
es
(bad)
bound
cmp
add
sahf
aaa
test
out
jg
mov
fistp
out
sbb
es
sub
js
(bad)
loop
fild
push
das
mov
aaa
push
icebp
fsub
xbegin
mov
xchg
adc
push
mov
shl
cli
xor
add
cmp
aam
das
shl
cmc
scas
xchg
push
jecxz
sbb
jns
int3
or
push
clc
rcl
pop
mov
lahf
add
add
loopne
inc
mov
into
or
or
fwait
inc
repz
fdiv
test
xchg
(bad)
cmc
mov
popf
iret
outs
fisubr
cli
push
sahf
push
mov
xor
adc
xlat
xlat
push
jge
stos
ja
jnp
out
retf
mov
add
cli
or
mov
xchg
inc
inc
and
test
and
sub
fdivr
mov
inc
lahf
cmp
fwait
arpl
mov
or
rcl
scas
hlt
ja
leave
movs
or
cwde
stos
btc
jnp
pop
aas
out
fild
and
xor
sbb
fwait
lds
dec
xchg
xor
fmul
cdq
xor
fadd
es
fist
movs
dec
inc
daa
es
and
jl
ins
pusha
inc
add
push
sbb
icebp
retf
pop
jmp
jmp
adc
popa
(bad)
ret
movs
fist
fmul
pusha
adc
sar
call
loope
xor
pop
mov
mov
or
das
cmovae
push
inc
and
pop
jle
jnp
adc
sub
arpl
push
das
cmps
jmp
or
pop
loopne
xor
out
lds
or
cmc
outs
sub
sub
add
fnstcw
sub
inc
ret
sub
loopne
or
aas
inc
sbb
fstp
fucom
mov
add
push
mov
add
mov
rcr
in
mov
(bad)
jle
outs
mov
dec
fidiv
cmp
add
sub
dec
dec
mov
cmp
xor
sub
mov
sbb
dec
mov
xor
jp
shr
mov
mov
dec
dec
retf
dec
icebp
mov
mov
loop
xchg
dec
or
out
mov
push
shr
add
add
sbb
je
xchg
mov
cdq
xor
sbb
xlat
(bad)
lods
mov
sbb
loopne
cwde
stos
or
pop
or
repz
sub
push
add
out
cld
mov
outs
xor
cs
inc
loop
imul
and
lock
push
aas
pop
mov
retf
mov
int3
mov
out
jge
adc
lea
jb
mov
mov
mov
idiv
cli
scas
ror
(bad)
mov
(bad)
mov
into
pop
mov
jb
in
out
out
fsubr
mov
adc
add
add
adc
mov
jns
pop
mov
jmp
std
out
mov
rol
jb
mov
arpl
call
aaa
aas
pop
jle
movs
xchg
sub
xchg
mov
pop
mov
xor
or
pusha
out
inc
movs
fs
lods
aaa
fisttp
push
or
sar
adc
loope
in
cmp
mov
inc
ret
mov
push
mov
mov
call
push
jge
mov
(bad)
outs
imul
or
xlat
(bad)
mov
loop
mov
sahf
sbb
jno
cmp
pop
mov
adc
out
loope
mov
dec
hlt
arpl
(bad)
add
(bad)
mov
sub
jp
in
mov
cmp
sub
pop
or
mov
jmp
(bad)
arpl
xor
sub
stos
stos
mov
out
(bad)
test
test
xchg
xchg
loope
mov
repnz
adc
cmp
loopne
hlt
cmps
sub
sbb
inc
push
jbe
(bad)
into
test
sar
(bad)
jb
jb
jns
test
pusha
iret
stc
push
das
mov
jbe
push
mov
push
add
add
add
mov
xchg
jmp
or
sub
add
add
dec
inc
scas
inc
pusha
and
add
mov
inc
or
add
or
add
add
add
add
or
add
add
stc
xchg
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
leave
dec
inc
inc
push
js
in
pop
jg
adc
sahf
lods
inc
push
sub
sub
adc
xor
inc
xchg
adc
cmp
dec
nop
idiv
inc
inc
test
adc
add
pop
out
retw
cdq
jmp
jge
ins
mov
xor
jle
out
jnp
fwait
cmp
sbb
icebp
dec
xchg
aaa
(bad)
std
(bad)
in
(bad)
xor
jge
jno
xor
cmps
leave
cs
xchg
clc
dec
mov
sub
and
push
add
and
push
sub
xchg
sbb
jb
fnstcw
out
adc
mov
in
addr16
adc
jp
mov
dec
div
inc
xor
es
sub
ja
outs
push
push
lods
adc
(bad)
rcr
in
fdivr
adc
mov
mov
pop
cmps
cld
mov
add
aad
fdivr
repz
mov
mov
mov
push
mov
mov
ror
je
mov
out
out
mov
rcr
mov
sub
jmp
jle
mov
mov
jns
aad
inc
adc
xchg
add
push
cmp
mov
ret
inc
inc
fdivr
scas
aad
and
icebp
je
mov
(bad)
mov
call
loopne
sti
aad
sub
dec
cmp
mov
lock
sbb
sbb
call
mov
xchg
push
push
xor
lds
arpl
push
cwde
in
xlat
mov
or
mov
push
xor
les
cwde
dec
sub
cmc
jp
fistp
call
out
and
pushf
add
sub
push
fist
add
and
inc
test
sub
xchg
pusha
dec
sub
ja
in
cwde
cmp
into
sbb
inc
sbb
es
(bad)
jne
pop
mov
fild
xchg
sbb
stc
fsubr
fs
arpl
adc
jno
lds
or
dec
add
push
sub
sub
add
mul
scas
push
bound
ret
pop
call
jmp
rcl
inc
inc
or
xchg
(bad)
pop
rcl
ret
sbb
xchg
push
(bad)
lock
cmp
pop
mov
test
test
inc
xor
mov
add
pop
push
retf
jmp
es
leave
adc
imul
fwait
pop
pop
mov
cwde
mov
xchg
xor
dec
jmp
pusha
call
cld
call
clc
stc
adc
xlat
dec
daa
mov
sbb
mov
sti
sbb
pushf
sub
push
outs
add
fisubr
popa
popa
sbb
mov
xor
push
xchg
add
jge
mov
lods
add
out
fld
nop
mov
and
rol
pop
xchg
and
push
push
stos
cmp
movs
mov
addr16
out
mov
test
dec
mov
push
lods
add
mov
cmp
push
sysenter
xor
xchg
pop
icebp
xchg
add
pushf
out
loope
inc
outs
mov
cmp
inc
adc
aam
xchg
mov
jb
rcl
mov
icebp
ins
push
xor
cmps
dec
(bad)
loopne
mov
mov
std
jge
aad
mov
ja
cdq
add
add
call
or
cmps
fadd
test
jle
xchg
div
(bad)
xchg
test
fimul
xchg
push
add
call
jno
test
add
mov
fnstcw
add
add
dec
inc
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
and
add
and
add
add
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
