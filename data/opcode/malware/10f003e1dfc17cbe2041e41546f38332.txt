daa
rcr
push
add
scas
jge
inc
(bad)
jp
push
(bad)
bound
add
mov
push
(bad)
stc
push
and
mov
push
inc
ficom
jmp
add
jb
mov
jp
jno
icebp
call
jne
push
bound
push
inc
pusha
mov
rcr
(bad)
icebp
push
fidiv
(bad)
and
mov
push
add
icebp
ror
(bad)
sti
repz
mov
push
imul
push
jmp
xchg
dec
ret
lahf
in
sahf
push
push
mov
popf
inc
rcl
call
ret
sub
jb
push
pop
into
push
add
sti
push
stc
push
aaa
push
mov
xor
mov
stc
gs
and
sbb
push
jle
and
inc
push
push
sbb
mov
jb
xor
push
mov
inc
cmps
inc
(bad)
push
add
fisub
push
arpl
add
jmp
cmp
out
inc
cmps
inc
fiadd
cmps
inc
(bad)
sub
test
push
push
jbe
pop
push
das
sbb
sbb
ds
stc
ins
or
lea
adc
jmp
or
push
xor
dec
jp
or
xor
jmp
jmp
jmp
(bad)
and
jb
add
ret
shl
add
jb
sbb
pop
shr
push
mov
jb
add
jb
or
sbb
(bad)
ror
shl
push
add
cdq
xor
mov
push
jmp
pop
mov
(bad)
out
bound
jge
jb
(bad)
pop
add
jb
pop
test
lahf
in
xchg
push
add
pop
adc
xor
push
imul
neg
jae
add
cdq
shl
push
add
daa
lahf
in
lea
push
push
imul
lahf
and
jb
add
push
push
mov
iret
cmp
(bad)
jb
fdiv
push
xchg
(bad)
push
imul
ds
jb
and
cli
ret
xor
ins
add
lea
sub
push
(bad)
out
push
cmps
inc
fimul
push
mov
data16
inc
ficomp
xchg
(bad)
fisttp
nop
or
add
mov
mov
sbb
mov
retf
(bad)
scas
lods
jb
push
mov
mov
test
mov
movs
jmp
sbb
imul
push
imul
push
add
bnd
dec
xor
jmp
push
mov
cmp
jb
idiv
mov
mov
jbe
shl
jl
push
mul
mov
lea
sar
pop
add
out
mov
lea
xor
stc
fsub
jb
push
xor
add
inc
loopne
fistp
xchg
out
mov
(bad)
sbb
sub
and
inc
(bad)
inc
xor
(bad)
retf
retf
fidiv
out
idiv
mov
lea
mov
lea
mov
pop
cmp
test
xor
push
stc
mov
push
std
mov
push
imul
jb
add
lea
xor
outs
add
sti
rol
fidivr
jne
inc
(bad)
jmp
add
scas
outs
jl
and
mov
(bad)
mov
lea
xor
outs
add
jnp
jne
inc
(bad)
jmp
adc
xor
(bad)
xchg
sub
add
mov
pop
test
xchg
in
(bad)
and
mov
bound
add
test
mov
aaa
jmp
sbb
(bad)
scas
jle
je
call
rol
aaa
and
jmpw
sbb
(bad)
scas
(bad)
jmp
js
jb
(bad)
and
or
add
test
jmp
std
por
out
idiv
mov
pop
adc
cli
adc
jle
inc
and
stc
push
mov
ret
push
daa
out
(bad)
fild
mov
cmc
(bad)
jae
ficomp
push
stc
push
mov
ret
push
daa
out
(bad)
fild
mov
jmp
popf
push
sar
add
in
(bad)
je
xor
inc
pop
dec
pop
add
(bad)
jmp
adc
aaa
loop
(bad)
push
std
xor
cmp
mov
stc
popf
sti
out
adc
push
je
dec
shl
lea
push
aaa
push
mov
icebp
fdivrp
call
cmp
(bad)
jmp
add
sub
inc
mov
retf
(bad)
cmp
and
dec
adc
lea
xor
(bad)
call
ret
push
out
(bad)
and
jmp
add
push
mov
icebp
fdivrp
call
cmp
pop
(bad)
pop
jae
(bad)
and
test
adc
aas
icebp
push
daa
push
mov
dec
sahf
xchg
fbstp
(bad)
and
cwde
popf
test
(bad)
call
(bad)
and
lahf
test
(bad)
call
(bad)
and
lahf
test
(bad)
call
(bad)
and
lahf
fpatan
adc
fbstp
(bad)
and
jb
inc
daa
lahf
in
sahf
add
and
push
std
jg
push
bound
jae
push
aaa
out
mov
push
(bad)
mov
jp
rcl
mov
jmp
mov
shl
aas
retf
push
mov
aam
push
and
lods
push
push
aaa
push
(bad)
fisubr
mov
sti
push
icebp
sub
sahf
lahf
inc
es
inc
mov
and
mov
push
std
call
aaa
jmp
mov
div
push
dec
lods
jb
mov
adc
push
push
mov
jmp
mov
shl
aas
retf
push
mov
aam
push
and
lods
push
bound
jae
push
aaa
out
mov
(bad)
push
add
push
(bad)
fisubr
pop
test
ffreep
(bad)
sti
repz
mov
mov
mov
std
pop
dec
jecxz
push
aaa
jmp
mov
add
(bad)
push
add
std
sbb
fs
mov
pop
in
xchg
jle
mov
scas
ja
rcr
push
pop
pop
jmp
sub
inc
mov
and
mov
ret
and
(bad)
and
jb
je
sbb
cwde
jb
jmp
push
aaa
jmp
sub
inc
fisub
xor
(bad)
jmp
inc
mov
loop
(bad)
jmp
or
loope
push
aaa
out
mov
mov
mov
and
mov
sahf
pop
mov
scas
mov
sti
push
std
push
mov
je
call
mov
jl
mov
or
fisub
inc
(bad)
scas
jp
add
jb
mov
sub
sti
rol
fiadd
mov
sub
inc
mov
and
(bad)
stc
arpl
add
stos
xor
cwde
xor
out
mov
fidiv
or
mov
fisub
popf
sbb
jbe
ja
stc
push
dec
inc
popf
sbb
test
mov
stos
add
sub
inc
mov
icebp
cli
sbb
scas
jp
inc
out
aaa
mov
pop
out
mov
adc
add
jb
mov
xchg
push
add
sti
add
sti
aad
and
mov
jge
rcl
or
pop
inc
push
mov
test
call
mov
lahf
ret
pop
fcmovbe
out
(bad)
mov
inc
lahf
icebp
pop
mov
push
mov
test
stc
push
dec
addr16
add
jb
ret
pop
dec
fidiv
rcl
sbb
shl
push
jmp
rcl
ja
(bad)
and
sub
enter
in
pop
push
add
call
(bad)
leave
fwait
jae
pop
lahf
fpatan
stos
lahf
ret
push
cwde
jb
(bad)
fidiv
push
pop
push
outs
mov
jb
mov
jecxz
sbb
pop
mov
push
or
(bad)
aad
lds
and
mov
fidiv
sbb
mov
fisub
popf
xor
clc
inc
add
icebp
xor
mov
jmp
loopne
mov
push
and
add
add
xor
mov
jmp
sub
(bad)
jmp
(bad)
and
icebp
xor
xor
pop
add
repz
shl
sub
inc
add
call
mov
push
or
adc
dec
jmp
std
pop
psrad
aad
and
jl
jb
test
jae
add
out
add
push
cwde
jb
(bad)
fidiv
sub
push
test
ret
push
cwde
jb
inc
cs
adc
xor
ja
icebp
xor
xor
add
mov
stc
pop
mov
outs
fidiv
add
(bad)
gs
sub
ret
push
loope
jb
inc
and
push
jmp
(bad)
push
icebp
mov
arpl
pop
sahf
push
mov
jb
movs
push
nop
in
inc
and
jmp
stos
jmp
and
mov
cmp
push
mov
lea
cmp
jb
add
jmp
pop
into
mov
call
push
jnp
mov
fisub
popf
cmp
jb
inc
es
je
mov
jge
xor
(bad)
and
jle
test
(bad)
call
repnz
pop
push
add
mov
rcl
mov
jmp
mov
jge
sub
out
mov
fidiv
inc
shl
idiv
sti
xchg
aad
mov
mov
sub
inc
mov
icebp
cli
adc
cmp
xor
out
fidiv
not
xchg
idiv
das
push
add
jmp
inc
adc
pop
loop
add
jnp
je
mov
std
(bad)
add
lahf
stc
sub
sti
shr
mov
cmp
mov
jae
xor
scas
jbe
fs
inc
sar
push
add
and
js
push
jmp
pop
mov
mov
test
mov
ja
mov
mov
jmp
add
pop
pminsw
scas
and
push
mov
xor
lahf
stc
fisttp
jmp
xchg
lahf
inc
and
shr
(bad)
jnp
jne
dec
in
fcomp
pushf
add
fimul
jl
icebp
jae
(bad)
out
xor
sti
rol
aaa
push
and
inc
jmp
std
(bad)
imul
push
sbb
scas
jp
xor
push
jmp
xor
xchg
(bad)
dec
fs
add
jbe
add
jb
imul
push
jns
(bad)
push
stc
mov
jl
mov
inc
jmp
push
aaa
push
mov
icebp
fdivrp
call
mov
sbb
mov
pop
push
(bad)
scas
mov
jle
jb
imul
push
cmc
mov
adc
sub
out
jmp
push
mov
out
aaa
out
lahf
sbb
and
push
add
daa
lahf
in
ficom
add
call
(bad)
leave
jno
les
mov
jb
idiv
sti
xchg
mov
mov
mov
repz
shl
(bad)
pop
(bad)
jb
in
xor
jmp
push
mul
(bad)
and
fwait
test
(bad)
call
cli
and
jge
(bad)
jb
mov
inc
into
mov
sbb
jmp
xor
jns
(bad)
xchg
int
mov
mov
jae
mov
lea
mov
jmp
jmp
(bad)
jmp
cmp
rcl
push
fdivr
sub
(bad)
call
test
(bad)
call
mov
loop
inc
dec
push
aaa
jmp
test
mov
jmp
mov
jmp
popa
cmp
push
mov
jmp
cmp
jb
mov
mul
or
jb
ret
push
add
(bad)
(bad)
and
inc
mov
mov
dec
jnp
push
pop
jo
add
sbb
fwait
jb
mov
(bad)
call
(bad)
and
mov
mov
jmp
int
mov
mov
push
stos
aas
fst
fwait
test
dec
jb
mov
lea
push
aaa
jmp
jb
addr16
iret
test
and
push
push
pop
std
adc
(bad)
stos
cld
and
test
mov
test
mov
push
xor
loopne
and
mov
mov
jmp
test
jb
push
ins
div
(bad)
and
dec
adc
fidivr
test
(bad)
call
dec
jb
cli
mov
push
sbb
sbb
and
rcl
(bad)
mov
and
dec
jp
cwde
jb
push
pop
mov
add
repz
push
imul
ret
loope
jb
push
jp
push
jmp
pop
mov
cmp
lea
add
mov
stos
cld
and
jg
(bad)
and
(bad)
jmp
(bad)
pop
fucompp
jmp
sbb
imul
and
hlt
and
dec
jmp
es
jle
cmp
push
mov
jmp
retf
jmp
(bad)
and
mov
test
fidiv
imul
mov
push
jp
push
jmp
pop
mov
cmp
lea
add
retf
test
stos
cld
and
sti
jecxz
and
(bad)
jmp
(bad)
pop
fucompp
jmp
sbb
imul
mov
ficomp
xchg
(bad)
jmp
es
jle
cmp
push
mov
jmp
inc
das
(bad)
jmp
(bad)
and
mov
test
fidiv
mov
test
mov
jmp
imul
and
jb
push
jp
push
jmp
pop
mov
cmp
lea
add
(bad)
call
add
xor
imul
icebp
ror
fiadd
sbb
pop
fucompp
jmp
sbb
imul
call
(bad)
dec
jmp
inc
mov
jle
cmp
push
mov
jmp
scas
cs
jmp
(bad)
and
sbb
imul
lea
dec
xchg
(bad)
pop
mov
cmp
lea
add
(bad)
call
add
pop
or
jb
mov
fiadd
add
fild
mov
test
(bad)
call
sti
and
mov
jno
xor
add
mov
fcmovbe
jb
cwde
jb
fldpi
stos
lahf
ret
jmp
and
push
call
pop
adc
add
xchg
frstor
dec
jmp
std
shl
push
add
scas
(bad)
and
inc
mov
jmp
cmp
mov
ret
jmp
jb
movs
push
(bad)
call
stos
xchg
jb
cmp
jmp
(bad)
call
mov
jb
sbb
push
test
call
test
call
add
sahf
(bad)
and
inc
mov
jmp
test
(bad)
call
dec
lahf
test
call
test
(bad)
call
loopne
jb
test
call
dec
dec
push
add
jb
inc
es
push
pop
dec
adc
(bad)
xchg
shl
test
mov
lea
mov
stos
lahf
ret
jmp
jb
test
(bad)
call
shl
dec
jmp
std
shl
push
add
cli
xor
jb
cs
idiv
(bad)
and
inc
mov
jmp
cmp
mov
idiv
sti
xchg
test
sbb
imul
jge
rcr
push
mov
jmp
test
(bad)
call
dec
sti
into
xor
sti
aad
cmps
mov
push
pop
push
adc
jo
jb
cmp
jmp
(bad)
call
inc
(bad)
xchg
cld
and
inc
jp
(bad)
ror
and
push
call
mov
(bad)
jmp
push
add
lea
mov
jmp
cmp
push
mov
jmp
ds
push
sbb
lahf
fpatan
stos
lahf
ret
xchg
mov
stc
xchg
in
and
loop
jmp
mov
push
push
(bad)
sahf
(bad)
and
xchg
in
retf
mov
sub
fwait
mov
(bad)
call
mov
jb
movs
push
iret
(bad)
(bad)
and
inc
mov
lea
push
aaa
jmp
jb
cmp
jmp
cmp
mov
and
inc
imul
mov
and
inc
mov
lea
cmp
jb
add
jmp
jb
sub
dec
add
call
push
push
div
mov
lea
push
aaa
jmp
jb
cmp
jmp
jb
imul
jmp
inc
into
mov
adc
test
jb
test
call
(bad)
and
fwait
test
call
jno
mov
xor
lahf
out
jbe
add
xor
adc
scas
add
jg
stos
movs
and
dec
jmp
std
bound
inc
add
test
mov
jmp
and
pop
add
icebp
mov
and
not
imul
lea
loop
add
jb
add
jmp
jb
and
jmp
jae
add
jbe
and
inc
imul
mov
mov
jmp
cmp
mov
ret
jmp
jb
and
jmp
jb
add
jle
and
push
push
pop
mov
add
call
push
and
(bad)
(bad)
jle
(bad)
jmp
(bad)
popf
sti
stos
pop
and
aam
add
repnz
pop
and
neg
test
(bad)
call
add
(bad)
call
(bad)
and
inc
imul
lea
cld
sbb
add
add
icebp
fdivrp
call
mov
jmp
sbb
outs
sub
cld
and
(bad)
imul
(bad)
and
fwait
test
(bad)
and
sahf
mov
push
sbb
jl
push
imul
(bad)
and
inc
imul
lea
adc
push
add
push
sub
push
add
icebp
stos
test
jb
test
call
dec
lahf
test
mov
test
call
(bad)
and
das
test
call
jmp
(bad)
call
dec
call
dec
call
(bad)
and
das
test
(bad)
call
std
and
(bad)
call
(bad)
pop
(bad)
jb
and
jb
idiv
sti
xchg
test
sbb
xchg
jmp
push
inc
jmp
shl
jle
test
(bad)
call
dec
call
mov
jmp
xor
stos
jmp
xor
scas
jmp
xor
inc
into
mov
stc
xchg
loope
mov
push
push
inc
jmp
mul
mov
jl
mov
mov
adc
jb
add
jb
add
add
and
push
in
inc
mov
pop
pop
repnz
xchg
jb
(bad)
lahf
mov
add
jb
inc
ds
dec
add
jb
or
jbe
jae
(bad)
jmp
inc
fidiv
fbstp
inc
rol
jmp
(bad)
lahf
xchg
pop
add
jb
inc
cmp
push
ffree
adc
add
retf
inc
call
mov
aaa
jmp
sub
mov
dec
mov
lahf
in
and
inc
mov
test
mov
repnz
imul
ja
call
outs
mov
and
push
pop
adc
cli
adc
ror
push
adc
(bad)
and
jb
fcomp
adc
sub
mov
xor
inc
xor
add
cs
fwait
jb
cmp
xchg
jb
add
out
push
add
jb
add
jb
add
jb
leave
fwait
clc
push
mov
aad
adc
xor
or
jge
jg
jb
cmp
jb
add
std
gs
jb
and
(bad)
sbb
inc
xor
inc
xor
adc
fimul
push
xor
repnz
and
out
dec
pop
xchg
adc
aaa
out
add
dec
mov
fwait
sub
fidiv
or
in
push
add
idiv
add
jb
add
jmp
add
push
sbb
(bad)
sahf
fwait
jb
pop
and
jb
icebp
sub
sti
shr
fbstp
add
jb
sti
(bad)
(bad)
fild
mov
sbb
push
adc
pop
adc
(bad)
fnsave
adc
bound
mov
xor
(bad)
and
xor
add
xor
add
repz
retf
adc
jbe
push
and
push
inc
fidivr
push
jmp
jmp
fdiv
sbb
add
repnz
inc
xor
or
pop
rcl
fwait
jb
loop
(bad)
jmp
inc
fidiv
push
jmp
push
pop
out
sbb
sbb
inc
xor
add
jb
add
jb
mov
(bad)
jmp
inc
fidiv
push
jmp
dec
xor
sbb
(bad)
sbb
inc
xor
add
jb
add
jb
mov
mov
cmp
push
mov
jae
mov
sbb
inc
xor
inc
xor
add
sar
pushf
fwait
jb
add
in
push
add
jge
fiadd
lahf
(bad)
pop
jg
sahf
fwait
jb
call
jnp
mov
icebp
(bad)
add
ja
sahf
fwait
jb
iret
fidiv
mov
(bad)
xchg
call
mov
(bad)
sahf
fwait
jb
scas
fidiv
(bad)
fild
mov
cmp
push
add
out
push
add
sti
out
sub
rol
fidiv
mov
jb
xor
fadd
fidiv
or
in
push
add
repz
jb
mov
xor
fidivr
add
rcl
mov
push
pop
mov
test
push
add
repnz
add
push
push
cmp
jb
add
mov
inc
(bad)
sbb
inc
xor
inc
xor
add
(bad)
push
add
pop
mov
inc
xor
add
dec
mov
cdq
xor
fisttp
inc
(bad)
out
sub
rol
fidiv
std
or
mov
push
(bad)
sub
add
lea
jne
xor
neg
push
inc
fidiv
sbb
push
mov
data16
repz
jnp
push
and
jb
add
in
push
ins
ja
mov
(bad)
push
sti
aad
push
cli
out
push
add
jge
mov
jb
and
xor
xor
inc
and
add
jb
or
pop
jae
or
push
and
pop
jo
adc
paddsw
scas
and
dec
pop
ja
xchg
call
sti
fiadd
xor
(bad)
lahf
icebp
fild
push
mov
shl
pushf
fwait
jb
mov
xchg
mov
icebp
test
aaa
in
and
pop
adc
fidiv
icebp
repz
call
inc
push
sbb
pushf
add
add
inc
xor
(bad)
fistp
inc
fcmovbe
push
xchg
call
add
push
push
add
sbb
ret
inc
push
sbb
pushf
add
add
fistp
inc
fcmovbe
cs
fwait
jb
add
loop
add
(bad)
push
add
aas
fnstcw
xchg
inc
(bad)
inc
test
ffreep
(bad)
sti
repz
mov
mov
bound
lock
ja
mov
jb
or
push
jmp
push
mov
adc
push
push
xor
dec
add
ror
cwde
jb
sub
push
push
xor
dec
add
rol
sahf
fwait
jb
inc
shl
idiv
push
stc
push
mov
cmp
xor
push
xor
dec
add
shl
pushf
fwait
jb
dec
pusha
xor
push
xor
dec
add
shl
sahf
fwait
jb
pop
pusha
xor
push
xor
add
ror
cwde
jb
pop
adc
cli
jno
and
mov
push
stos
pop
fst
jmp
add
call
mov
push
(bad)
lahf
call
fld
cli
add
mov
inc
xor
add
repz
xchg
jb
cmp
push
(bad)
fild
mov
rcr
sti
into
xor
sti
aad
mov
stos
pop
add
jb
inc
push
jae
add
retf
fidiv
loop
aaa
mov
pusha
xor
mov
(bad)
push
add
jb
mov
sub
sti
aad
lahf
(bad)
pop
add
jb
bound
jl
jmp
arpl
add
xor
add
repnz
and
jb
fldpi
stos
lahf
ret
mov
jb
inc
jle
jl
mov
jl
mov
jmp
pusha
fidiv
inc
jp
jmp
mov
sbb
jmp
and
jb
add
sbb
imul
adc
scas
xchg
(bad)
jp
jb
mov
sub
sti
aad
scas
xchg
(bad)
out
xchg
(bad)
fild
mov
jmp
push
aaa
repnz
and
jb
inc
ds
adc
fisubr
inc
mov
icebp
cli
and
fnsave
mov
sti
push
loope
pop
repnz
stc
push
or
xchg
bound
cmc
fiadd
mov
sbb
imul
pop
mov
call
push
aaa
loop
mov
jmp
xor
push
mov
pop
jmp
daa
lahf
in
and
or
sbb
xor
(bad)
scas
jp
(bad)
and
jb
out
jb
idiv
mov
enter
in
sahf
sbb
and
dec
or
cwde
jb
(bad)
aad
adc
out
push
add
pop
and
ins
and
out
push
add
pop
ds
ins
and
out
push
add
pop
or
ins
and
out
push
add
pop
push
push
ins
and
fidivr
or
jb
mov
ja
adc
sbb
jmp
(bad)
aad
adc
into
push
add
les
aas
jecxz
sbb
mov
data16
sbb
mov
jb
mov
icebp
cld
add
les
pop
jecxz
arpl
mov
adc
mov
out
xor
sbb
fidiv
je
jge
inc
and
jbe
push
xor
dec
add
jge
push
and
add
data16
push
mov
lahf
inc
and
fdivrp
push
daa
push
mov
icebp
cld
add
and
inc
lahf
bound
stc
pop
call
fbstp
add
cdq
ss
ins
aaa
jmp
cmp
fidiv
push
pop
aaa
jmp
(bad)
and
xor
and
sti
out
dec
pop
dec
adc
pop
call
call
cmp
push
mov
add
enter
fidiv
or
xchg
jmp
inc
add
push
es
cwde
adc
iret
jae
add
repnz
fadd
jae
and
xchg
cmp
push
mov
pop
fadd
inc
mov
icebp
inc
pop
dec
adc
scas
xor
stc
pop
call
xor
add
jb
je
icebp
fdivrp
push
daa
push
mov
icebp
cld
add
pop
call
retf
add
jae
xor
popf
push
and
add
jb
add
sub
scas
and
pop
fild
pop
mov
icebp
inc
pop
dec
adc
scas
dec
lahf
stc
pop
call
jmp
jbe
mov
je
cmp
jl
(bad)
fidiv
jne
dec
jmp
sbb
fisttp
stc
inc
adc
add
jmp
sti
adc
jb
add
jb
push
pop
(bad)
and
mov
mov
icebp
cli
or
fild
mov
or
outs
daa
(bad)
xor
cmp
popf
repz
ja
repz
jb
xor
inc
(bad)
pop
inc
fidiv
(bad)
lods
stos
(bad)
call
sbb
jmp
add
les
sbb
ss
call
(bad)
lea
fild
mov
add
fidiv
es
push
add
push
cmp
into
add
cli
add
and
loop
add
aaa
jmp
ins
sahf
add
(bad)
push
mov
test
rcl
pop
fcmovnu
mov
push
pop
(bad)
inc
cmc
push
bound
add
adc
icebp
fdivrp
push
adc
repz
pop
rcr
adc
jmp
jae
push
and
push
(bad)
fild
mov
(bad)
repz
rcr
adc
xor
adc
jb
add
(bad)
xlat
jecxz
lea
adc
into
push
add
push
jmp
sub
enter
in
xor
ficomp
inc
push
lea
rol
call
fidiv
jb
mov
loop
(bad)
jmp
out
and
push
mov
mov
fiadd
pop
push
ins
mul
out
and
adc
sbb
cmc
fisub
jge
test
popf
jmp
popa
data16
add
les
mov
enter
fmul
push
jle
cmp
push
push
xor
dec
add
stc
sub
out
cwde
fwait
jb
mov
cmp
pop
push
jle
fbld
push
push
sbb
enter
and
jmp
add
xchg
dec
add
stc
and
addr16
call
(bad)
fstp
test
popf
jmp
and
jb
push
pop
aas
jmp
repnz
les
sar
xchg
cmp
fidiv
test
push
add
les
sar
popf
adc
(bad)
adc
(bad)
jmp
inc
(bad)
stos
loop
(bad)
jmp
add
jb
and
leave
(bad)
and
xor
mov
leave
(bad)
and
xlat
loop
sti
into
add
jb
add
loop
and
push
jle
retf
push
xor
dec
add
sti
rol
fdivr
mov
(bad)
popf
repz
retf
cmp
stc
(bad)
and
test
and
jb
(bad)
fild
mov
in
xor
(bad)
push
add
sbb
(bad)
fidiv
mov
popf
jmp
fisub
(bad)
jmp
inc
es
jne
icebp
mov
add
jmp
fbld
lea
sar
adc
mov
outs
iret
out
out
and
repz
jae
repz
jae
sti
into
add
bound
add
xchg
fbld
mov
adc
jb
cli
fiadd
jmp
sti
and
sahf
stc
(bad)
and
stc
xchg
lea
push
add
idiv
out
and
(bad)
jmp
mov
jb
mov
lods
jmp
add
fwait
push
add
jb
mov
cmp
add
add
dec
xor
mov
stc
(bad)
and
(bad)
jmp
out
and
sti
iret
shl
xlat
loopne
jno
std
push
jle
mov
(bad)
fisub
popf
jmp
mov
mov
add
xchg
adc
xchg
mov
retf
pop
js
(bad)
pop
xchg
(bad)
and
(bad)
jmp
jae
lea
jne
xor
and
arpl
sub
inc
ficomp
lahf
test
jmp
adc
(bad)
sbb
or
fbld
lods
jmp
fbld
jno
mov
enter
xchg
mov
dec
out
(bad)
and
loop
(bad)
and
(bad)
jmp
(bad)
and
(bad)
jmp
mov
and
(bad)
(bad)
bound
cmps
leave
(bad)
and
(bad)
jmp
lds
(bad)
leave
(bad)
and
(bad)
jmp
(bad)
and
jb
pop
cli
sbb
mov
leave
(bad)
and
stc
cmp
jle
imul
out
fisub
ja
mov
jb
mov
cmp
add
retf
lea
(bad)
push
jle
xor
push
push
ins
out
out
and
stc
add
jecxz
add
loop
and
jb
push
xor
add
sti
xchg
mov
(bad)
jmp
popa
(bad)
and
stc
xchg
cmc
xor
jb
call
aad
imul
jge
cmp
shl
push
mul
out
and
jae
add
icebp
cld
(bad)
push
ss
push
div
fisub
lods
jmp
in
(bad)
jmp
fisub
repnz
call
push
adc
scas
data16
icebp
pop
call
push
adc
scas
jnp
jmp
push
push
ins
out
fbld
sti
mov
(bad)
pop
div
push
ins
je
call
int3
stc
adc
jb
add
jmp
mov
leave
(bad)
and
cdq
sbb
and
clc
add
lods
jmp
lods
jns
jmp
xchg
jns
jmp
mov
mov
and
repnz
jb
add
pop
ds
jb
je
repnz
jb
add
pop
add
fidiv
je
repnz
jb
add
push
adc
mov
ror
(bad)
and
repnz
push
or
ins
mul
out
and
scas
leave
(bad)
and
(bad)
jmp
(bad)
pop
mov
and
bound
xlat
loop
and
xchg
(bad)
and
stos
xlat
call
fnstcw
jmp
lea
cmc
xor
xchg
(bad)
and
add
(bad)
fild
mov
std
and
popf
jmp
test
popf
jmp
and
jb
push
pop
pop
in
(bad)
and
mov
mov
icebp
cli
cmp
xchg
inc
and
stc
enter
sbb
jmp
mov
push
stos
inc
fcmove
pop
add
jb
movs
push
aaa
out
mov
test
push
aaa
ror
add
and
jb
add
(bad)
fwait
jl
jmp
xchg
xor
jb
add
(bad)
xchg
ins
and
add
repnz
sbb
mov
push
and
mov
jge
push
and
push
adc
pop
adc
shl
push
(bad)
fcomi
imul
add
(bad)
lahf
(bad)
push
call
push
jno
mov
(bad)
sub
iret
stos
sbb
aaa
out
xchg
lea
push
ins
xor
cmp
jb
add
jae
rcr
push
and
arpl
aad
push
add
xchg
jecxz
icebp
in
add
fild
pop
and
imul
les
sub
pop
shr
out
add
jbe
inc
and
sti
aam
sbb
inc
stc
aad
push
add
mov
add
dec
xchg
add
jb
add
aad
adc
add
dec
arpl
pop
aaa
jmp
pop
por
aad
inc
(bad)
and
jb
pop
push
jno
mov
mov
pop
aaa
jmp
inc
es
jl
jne
in
pop
out
stos
lahf
jb
push
ins
jno
sbb
push
je
repnz
(bad)
fstp
inc
and
mov
mov
and
push
pop
push
mov
pop
cdq
push
adc
jb
(bad)
fidiv
push
mov
inc
mov
mov
icebp
fdivrp
call
mov
dec
dec
je
mov
(bad)
pop
xchg
icebp
jmp
fldpi
stos
lahf
ret
dec
pop
sbb
lahf
in
jbe
add
call
gs
repz
out
idiv
(bad)
jmp
mov
lea
push
not
loope
lea
int3
and
add
push
loope
lea
aad
push
add
push
mov
inc
out
mov
mov
inc
mov
pop
popf
mov
fidiv
add
sbb
jmp
test
aad
push
xchg
xchg
in
(bad)
and
fimul
int
loope
(bad)
imul
xchg
add
jb
add
jb
add
arpl
xor
add
sti
rol
pop
bndldx
scas
je
inc
(bad)
icebp
add
loope
push
aaa
loop
sbb
sbb
push
xor
add
sti
aad
sbb
imul
lahf
inc
es
movs
fnstenv
imul
imul
jle
inc
cs
adc
lea
mov
ficom
jb
jmp
push
aaa
jmp
sti
rcr
sub
ret
repz
mov
mov
push
mov
stc
push
mov
add
sbb
imul
push
imul
pop
push
jmp
push
mov
(bad)
xchg
jl
add
jmp
jmp
push
push
xor
inc
add
stc
push
or
and
jb
clc
push
mov
add
jmp
call
push
aaa
jmp
xor
push
xor
inc
add
repz
bnd
push
xor
inc
add
retf
fidiv
pop
cmp
inc
mov
bound
add
test
mov
jb
sbb
sbb
imul
push
add
mov
je
call
push
mov
out
aaa
loop
sbb
jbe
shl
jl
mov
jl
mov
jl
push
aaa
jmp
jle
jmp
push
mov
stc
push
mov
jmp
jmp
push
pop
test
inc
push
mov
push
std
xor
pushf
inc
pop
pop
jmp
sti
leave
jmp
aad
loope
sbb
and
je
sbb
cwde
jb
jp
jb
sub
jle
cmp
push
jmp
pop
mov
xor
cdq
add
push
mov
test
inc
push
fidiv
(bad)
sub
xor
dec
push
je
mov
aas
hlt
xor
out
mov
test
cmp
jb
(bad)
push
std
push
mov
ret
push
daa
jmp
sti
repz
mov
mov
mov
std
or
jle
aaa
jmp
xchg
push
add
xchg
sub
(bad)
xor
mov
dec
inc
imul
xchg
inc
add
icebp
ror
popf
dec
loope
xor
xor
cwde
jb
into
mov
pop
push
aaa
jmp
mov
cmp
inc
push
popa
repnz
cmp
sti
into
add
sti
aad
sbb
icebp
jae
(bad)
jae
(bad)
jae
(bad)
imul
inc
lea
jb
bnd
mov
jb
loop
aaa
retf
repnz
pop
adc
aaa
hlt
sbb
stc
push
or
lds
push
aaa
jmp
arpl
jb
loop
aaa
into
mov
jge
inc
and
adc
pop
psubsw
scas
jbe
ins
ss
jmp
jmp
add
jge
inc
fdivr
push
push
push
xchg
jmp
push
call
les
sub
(bad)
pop
(bad)
inc
fdivp
jnp
fdiv
jnp
fcomi
imul
pop
ror
stos
lahf
ret
sbb
ins
jb
push
sar
adc
mov
push
add
lds
aad
aam
lahf
xchg
lahf
(bad)
stos
lahf
ret
dec
aad
pop
jecxz
xchg
lahf
inc
push
jae
in
aaa
sbb
ins
xor
mov
je
rcl
lds
aad
aam
lahf
xchg
popf
inc
(bad)
jge
inc
sar
inc
or
lds
mov
push
in
je
(bad)
stos
lahf
ret
dec
enter
xchg
dec
loop
mov
dec
leave
xchg
(bad)
call
pop
dec
not
xchg
dec
loop
jne
loop
xchg
dec
inc
push
xchg
dec
loop
inc
dec
loop
xchg
dec
xor
inc
dec
loop
xchg
dec
xor
cmp
loop
xchg
dec
pop
int3
xchg
dec
loop
mov
dec
leave
(bad)
loopne
jb
mov
dec
not
xchg
dec
loop
jne
loop
xchg
dec
inc
push
xchg
dec
loop
sbb
xchg
dec
loop
je
loop
xchg
dec
adc
xor
pop
cld
and
loop
xchg
mov
jb
xchg
dec
loop
xchg
fisttp
sub
loop
and
xor
xchg
push
push
xchg
dec
loop
dec
fsubp
xchg
dec
loop
adc
xchg
dec
loop
retf
xchg
dec
loop
rcl
xchg
dec
loop
leave
dec
loop
xchg
mov
loop
call
fisub
add
push
add
ret
or
aad
sbb
xchg
fisub
add
adc
dec
loop
xchg
dec
icebp
out
add
xchg
loop
xchg
dec
leave
xchg
(bad)
call
xchg
dec
pop
xlat
xchg
dec
loop
xor
loop
xchg
dec
and
mov
loop
xchg
dec
test
xchg
dec
loop
nop
dec
loop
xchg
dec
sub
mov
dec
inc
es
dec
loop
add
loop
xchg
dec
nop
in
dec
loop
mov
dec
icebp
out
add
xchg
loop
xchg
dec
leave
(bad)
loopne
jb
mov
loop
xchg
dec
pop
xlat
xchg
dec
loop
xor
loop
xchg
dec
and
mov
loop
xchg
dec
test
xchg
dec
loop
nop
dec
loop
xchg
dec
sub
mov
dec
inc
es
dec
loop
add
loop
xchg
dec
nop
in
dec
loop
pusha
dec
loop
xchg
dec
adc
jmp
in
sahf
push
push
mov
push
or
sbb
dec
ja
lahf
mov
push
es
loopne
sbb
fwait
int
fidiv
(bad)
add
test
inc
mov
pop
sbb
in
add
pop
(bad)
push
xchg
jb
mov
jb
mov
aad
inc
cli
push
mov
rol
out
mov
stc
push
in
inc
test
mov
cli
inc
sti
bound
jae
push
aaa
dec
les
jae
dec
imul
xor
mov
jge
dec
and
mov
jge
add
fidiv
adc
pop
icebp
call
sti
repz
jmp
sbb
inc
sub
(bad)
scas
xchg
jb
push
ins
aaa
in
push
push
stos
pop
icebp
mov
push
repz
inc
sti
(bad)
push
add
and
jmp
pop
mov
sbb
je
inc
cs
adc
inc
sub
inc
(bad)
cmp
(bad)
aad
push
(bad)
and
mov
xchg
in
mul
inc
push
popa
mov
rol
repz
lock
jmp
pusha
jg
add
and
retf
sbb
aas
retf
push
mov
inc
out
pop
dec
sar
inc
(bad)
call
push
aaa
not
pop
push
jmp
pop
mov
mov
(bad)
push
pop
pop
adc
fidivr
jl
mov
add
sub
into
dec
mov
(bad)
xchg
sti
imul
jge
jl
mov
add
xor
mov
xor
push
xor
sbb
sti
out
fbstp
push
jmp
fidiv
(bad)
fidivr
cdq
add
(bad)
out
lahf
mov
add
bound
leave
xor
mov
push
std
test
mov
xor
mov
sbb
lea
fiadd
lahf
ret
adc
frstor
push
xor
icebp
push
stc
(bad)
ret
jb
add
iret
push
add
aaa
out
jae
call
push
call
push
jge
(bad)
push
mov
mov
mov
adc
movs
lahf
cmp
iret
push
add
or
fidiv
inc
xchg
jb
mov
jb
mov
sti
aam
ins
mov
ror
sbb
(bad)
iret
push
add
adc
add
jb
(bad)
fidivr
cdq
add
(bad)
out
lahf
xchg
add
bound
leave
xor
mov
push
cmc
test
mov
xor
cmp
push
adc
xor
icebp
push
icebp
(bad)
ret
jb
add
iret
push
add
aaa
out
add
mov
inc
fidivr
push
xor
out
mov
or
push
add
sub
sub
xor
push
ins
daa
stc
sar
stc
add
jg
mov
loopne
aad
aad
push
and
jge
inc
xor
lahf
icebp
fnstenv
mov
ja
jmp
imul
push
imul
push
imul
push
add
xor
je
call
ds
int
push
imul
push
jmp
mov
pop
add
lea
xor
add
and
(bad)
xchg
jb
xor
xor
or
fiadd
lahf
ret
dec
enter
in
sahf
push
add
jb
push
(bad)
int3
enter
scas
mov
cmp
xchg
in
daa
(bad)
jmp
jne
xor
stos
fidiv
mov
(bad)
leave
inc
(bad)
out
sub
shr
cmp
add
pop
arpl
and
sti
fnsave
lahf
rol
xor
jmp
jae
das
xor
pop
add
jge
jl
enter
bound
sbb
xlat
clc
lds
mov
sub
mov
jmp
inc
and
dec
push
ja
mov
push
and
daa
pop
add
sti
aam
sbb
nop
adc
and
je
(bad)
and
sub
add
jmp
imul
leave
inc
(bad)
xchg
cli
daa
(bad)
jmp
add
sbb
imul
adc
ficomp
push
imul
imul
cld
and
xor
loop
and
retf
cwde
jb
jmp
mov
fwait
test
(bad)
sbb
sbb
jb
stc
xor
xchg
(bad)
and
jb
icebp
fild
loop
and
jb
(bad)
fild
mov
fadd
(bad)
call
mov
pop
mov
(bad)
and
xor
mov
call
add
jb
jmp
(bad)
test
mov
jmp
and
push
mov
ficomp
xor
mov
call
add
jb
jmp
mov
jp
cwde
jb
jl
xor
imul
jl
add
icebp
rcl
test
fidiv
pop
cmp
inc
push
push
pop
add
push
mov
stc
push
mov
add
(bad)
push
add
loope
push
aaa
loop
sbb
call
mov
push
std
mov
push
imul
jb
add
lea
xor
add
sti
out
adc
push
je
sti
push
stc
and
jae
add
mov
cs
jb
xor
arpl
xor
dec
pop
adc
test
xor
arpl
ficomp
pop
push
and
(bad)
jmp
or
inc
push
add
icebp
rcr
test
aad
push
xchg
inc
push
gs
sub
cmc
sti
out
idiv
mov
add
into
and
je
lea
and
jb
add
push
pop
adc
inc
push
gs
nop
sti
out
xor
sti
ror
mov
ficomp
adc
fdiv
add
pop
sbb
scas
jp
pop
xchg
jb
or
push
adc
sbb
jmp
sbb
retf
std
xor
pop
add
jnp
jne
lea
xor
add
inc
(bad)
jmp
sar
scas
mov
sub
xor
sbb
lahf
in
sahf
push
push
(bad)
stc
arpl
push
aaa
push
mov
pop
test
fidiv
pop
(bad)
out
xor
sti
ror
jb
add
lea
xor
(bad)
jne
inc
(bad)
jmp
jl
mov
jmp
std
xor
(bad)
jne
lea
xor
(bad)
jmp
push
add
jge
inc
ret
mov
sub
sti
rcr
mov
inc
push
mov
push
sbb
sub
wrmsr
push
add
jb
push
xor
push
add
sti
push
stc
push
mov
stc
push
mov
std
wrmsr
push
cmp
mov
jmp
push
add
jb
pusha
add
xor
add
ret
inc
(bad)
loope
scas
jb
or
pop
adc
sbb
ret
inc
ficomp
lahf
inc
es
adc
fisubr
inc
jbe
pusha
lahf
leave
repz
xor
cwde
jb
push
shl
inc
push
(bad)
stc
arpl
push
das
sbb
lahf
mov
push
inc
popf
inc
es
aam
sbb
inc
std
push
lods
std
xor
dec
sub
pop
lahf
stc
rep
inc
mov
jae
push
and
xor
sbb
(bad)
(bad)
rol
pop
mov
jmp
push
add
pop
ror
add
aaa
and
sti
out
dec
pop
dec
adc
scas
pusha
popf
inc
retf
add
jmp
xor
aaa
push
adc
mov
lahf
(bad)
pop
aaa
jmp
push
or
and
xor
add
jmp
mov
add
mov
pop
cmp
inc
push
push
das
push
(bad)
lahf
xor
push
je
je
push
and
push
sahf
jb
mov
xchg
xchg
(bad)
shl
push
add
sti
push
cmc
jmp
std
pop
aad
adc
pop
and
push
sbb
ins
jbe
sub
sahf
add
and
repz
jo
lahf
mov
add
cmp
mov
mov
mov
dec
lahf
stc
arpl
add
jmp
clc
push
movs
xchg
(bad)
mov
push
pop
in
push
cmp
jecxz
cwde
adc
(bad)
pop
mov
push
push
psrad
sub
inc
fisub
push
sbb
jo
lahf
mov
mov
mov
mov
mov
scas
dec
fidiv
jmp
mov
mov
sbb
jmp
(bad)
jmp
(bad)
xchg
stc
and
pop
sbb
inc
sub
pop
mov
mov
sti
out
sub
ror
add
adc
sbb
xchg
mov
fiadd
sbb
fist
inc
(bad)
call
and
xor
add
into
(bad)
daa
lea
idiv
jmp
aad
(bad)
stos
jmp
fldenv
out
(bad)
daa
lea
add
and
push
add
sti
xchg
std
and
stc
arpl
fimul
pop
add
call
repz
pop
mov
xlat
adc
push
and
sti
shr
stc
adc
(bad)
and
outs
pop
(bad)
jmp
push
add
jp
mov
jp
dec
add
mov
jmp
jb
(bad)
cs
fidiv
or
jb
cwde
sub
syscall
imul
(bad)
jmp
jb
sbb
lahf
icebp
jmp
lahf
(bad)
xor
add
retf
sbb
fidiv
mul
icebp
in
add
push
(bad)
cli
sahf
jb
mov
inc
test
push
push
iret
jmp
lods
push
add
jb
(bad)
into
inc
fidiv
or
jb
cwde
sub
syscall
imul
(bad)
jmp
jb
sbb
jle
add
mov
jmp
jb
(bad)
mov
fidiv
or
jb
cwde
sub
syscall
imul
(bad)
jmp
jb
sbb
(bad)
jp
jb
mov
inc
test
and
imul
sbb
fcmove
jne
fidiv
mul
and
dec
jb
jmp
pop
mov
(bad)
scas
push
jle
add
mov
jmp
xor
push
xor
push
add
icebp
rcl
fidiv
and
jb
add
out
and
imul
xor
fimul
jmp
add
push
imul
(bad)
jmp
jb
sbb
(bad)
jmp
push
add
out
and
imul
xor
fimul
jmp
add
push
imul
(bad)
jmp
jb
sbb
(bad)
mov
jb
mov
inc
test
and
imul
rcl
fcmove
jne
fidiv
mul
and
dec
jb
jmp
pop
mov
mov
sub
(bad)
jmp
push
mov
outs
cdq
jb
mov
inc
test
push
mov
enter
stos
fbld
pop
push
add
call
push
and
mov
jmp
xor
push
xor
push
add
icebp
shl
xor
add
retf
sbb
fidiv
mul
icebp
in
add
push
(bad)
push
cdq
jb
mov
inc
test
push
push
iret
jmp
lods
push
add
jb
(bad)
out
cmp
xchg
leave
and
call
fidiv
cwde
sub
syscall
imul
(bad)
jmp
jb
sbb
dec
cwde
jb
mov
inc
test
and
imul
mov
mov
jmp
pop
mov
jmp
arpl
add
jmp
clc
pop
mov
jl
sbb
loope
jb
mov
(bad)
call
add
icebp
ror
push
and
push
mov
xchg
add
push
(bad)
scas
popfw
test
(bad)
call
fistp
xor
add
add
test
push
add
push
add
jmp
clc
pop
mov
jl
sbb
fistp
(bad)
call
add
icebp
ror
xor
add
retf
sbb
fidiv
mul
icebp
in
add
popa
jle
cmp
push
(bad)
outs
mov
jmp
jb
(bad)
add
jb
or
jb
cwde
sub
sysexit
jmp
arpl
push
add
jmp
clc
mov
stos
std
and
dec
leave
inc
fisub
push
sbb
xchg
jl
jb
test
push
add
sar
daa
lea
call
sbb
push
add
and
mov
and
or
jmp
fincstp
(bad)
(bad)
daa
lea
(bad)
test
(bad)
jmp
fxch
(bad)
(bad)
daa
lea
mov
dec
lahf
stc
arpl
add
jmp
clc
pop
mov
push
push
mov
mov
sub
sti
cmp
icebp
shl
jmp
push
mov
leave
inc
(bad)
stos
add
(bad)
jmp
add
icebp
rcl
fiadd
jmp
(bad)
pop
mov
cld
and
(bad)
jb
push
pop
add
(bad)
and
mov
(bad)
scas
push
test
jb
dec
mov
push
mov
enter
(bad)
push
fwait
jb
sbb
(bad)
(bad)
call
add
out
and
imul
das
enter
mov
jmp
pop
mov
jmp
arpl
add
jmp
clc
pop
mov
jl
sbb
fistp
(bad)
call
add
icebp
ror
push
and
push
mov
scas
call
add
out
and
imul
xor
fimul
jmp
add
push
sbb
cld
and
lea
mov
jmp
lds
in
call
in
and
test
mov
jmp
call
push
aaa
or
and
jb
mov
fidivr
cmp
sub
mov
push
sbb
fimul
stc
and
xor
add
stc
xchg
stc
and
sahf
jmp
adc
(bad)
xchg
cmc
and
imul
icebp
ror
daa
lea
cmp
push
mov
mov
jmp
xor
sti
ror
and
mov
mov
cld
and
(bad)
jmp
mov
fwait
test
(bad)
jmp
mov
xchg
(bad)
xchg
icebp
and
xchg
jmp
(bad)
out
daa
lea
dec
jb
jmp
pop
mov
jmp
arpl
add
jmp
clc
pop
mov
jl
sbb
cwde
jb
mov
(bad)
call
add
icebp
ror
push
adc
push
mov
pop
in
push
mov
inc
test
and
imul
mov
mov
jmp
pop
mov
jmp
arpl
add
jmp
clc
pop
mov
jl
sbb
loope
jb
mov
(bad)
call
add
icebp
ror
and
(bad)
inc
loope
push
sbb
add
lea
mov
push
(bad)
and
(bad)
call
mul
sti
xchg
stc
and
jge
xchg
and
jmp
add
(bad)
inc
in
push
sbb
inc
in
push
mov
inc
test
and
imul
das
enter
mov
jmp
pop
mov
jmp
arpl
add
jmp
clc
pop
mov
jl
sbb
fistp
(bad)
call
add
icebp
ror
push
and
push
not
(bad)
daa
lea
add
retf
sbb
fidiv
mul
icebp
in
add
popa
jle
cmp
push
(bad)
outs
mov
jmp
jb
(bad)
and
cwde
jb
mov
(bad)
call
add
icebp
ror
xor
add
retf
sbb
fidiv
mul
icebp
in
add
push
(bad)
and
jb
mov
inc
test
push
push
iret
jmp
lods
push
add
jb
(bad)
push
aas
fidiv
or
jb
cwde
sub
syscall
imul
(bad)
(bad)
push
in
push
sbb
xchg
test
cmps
sub
fcmove
sbb
fidiv
mul
icebp
in
add
popa
jle
add
push
(bad)
outs
mov
jmp
jb
(bad)
cmps
cmp
jb
or
jb
cwde
sub
syscall
imul
(bad)
jmp
jb
sbb
dec
shl
add
out
and
imul
or
add
retf
jne
fidiv
mul
and
dec
jb
jmp
pop
mov
imul
(bad)
jmp
jb
sbb
lahf
icebp
repz
fcmove
sbb
fidiv
mul
icebp
in
add
popa
jle
cmp
push
(bad)
outs
mov
jmp
jb
(bad)
or
cwde
jb
mov
(bad)
call
add
icebp
ror
xor
add
retf
sbb
fidiv
mul
icebp
in
add
popa
jle
cmp
push
(bad)
outs
mov
jmp
jb
(bad)
or
cwde
jb
mov
(bad)
call
add
icebp
ror
pop
test
pop
fidiv
(bad)
out
push
mov
inc
test
and
imul
xor
fimul
jmp
add
push
mov
jmp
test
(bad)
call
fistp
dec
push
add
push
jmp
arpl
add
jmp
clc
pop
mov
jl
sbb
loope
jb
mov
(bad)
call
add
icebp
ror
mov
enter
mov
jmp
pop
mov
jmp
arpl
add
jmp
clc
pop
mov
jl
sbb
loope
jb
mov
(bad)
call
add
icebp
ror
bound
lock
jmp
jmp
arpl
loope
push
movs
xchg
(bad)
retf
add
mov
push
mov
retf
inc
fisub
push
sbb
(bad)
out
loope
push
mov
inc
test
and
imul
xor
fimul
jmp
add
push
imul
jmp
jb
sbb
(bad)
mov
jb
mov
inc
test
and
imul
xor
fimul
jmp
add
push
sub
add
call
fidiv
cwde
sub
sysexit
jmp
arpl
push
add
jmp
clc
mov
stos
std
and
dec
leave
inc
fisub
push
sbb
jle
pop
xor
(bad)
outs
mov
jmp
jb
(bad)
push
imul
adc
ficomp
push
imul
pop
push
jmp
push
idiv
(bad)
daa
lea
add
(bad)
inc
(bad)
stos
cmc
and
lea
(bad)
outs
call
fidiv
mov
(bad)
jmp
xor
mov
jmp
push
adc
push
mov
jmp
push
idiv
(bad)
daa
lea
cmp
push
add
jns
stc
sub
mov
(bad)
push
mov
inc
and
les
mov
popf
fcomp
mov
dec
jb
stc
jmp
lahf
(bad)
mov
jle
pop
xor
mov
call
add
jb
jmp
pop
mov
sbb
int3
jl
mov
retf
inc
ficomp
pop
fcomp
jb
jmp
mov
retf
sbb
fstp
xor
imul
sti
out
and
popf
dec
dec
fidiv
enter
in
sahf
add
jb
push
(bad)
int
or
jmp
lahf
(bad)
pop
xlat
mov
and
jp
cmp
jge
rcr
mov
jmp
and
jbe
add
jb
mov
jmp
and
sti
shl
add
push
or
xchg
(bad)
fbld
dec
in
jb
mov
ja
mov
jmp
and
jb
mov
jmp
and
(bad)
jmp
add
push
mov
jmp
and
inc
(bad)
lahf
xchg
inc
(bad)
mov
stc
push
mov
jmp
push
imul
and
(bad)
and
(bad)
xchg
jne
(bad)
jmp
(bad)
and
jb
push
sar
fwait
jns
(bad)
jmp
mov
jmp
and
inc
(bad)
lahf
xchg
push
(bad)
test
fidiv
add
push
jmp
push
test
add
div
jmp
xor
and
fisub
(bad)
ds
push
imul
mul
imul
retf
sbb
(bad)
(bad)
pop
sub
pop
shr
push
add
mov
pop
fdiv
jmp
mov
pop
add
call
push
push
mul
jmp
and
(bad)
jmp
(bad)
and
(bad)
jmp
(bad)
and
(bad)
jmp
dec
jmp
(bad)
and
test
jmp
jmp
push
(bad)
imul
jmp
dec
push
add
aas
stc
push
mov
test
jmp
std
and
jmp
add
call
pop
(bad)
ss
push
imul
jmp
pop
mov
mov
pop
out
mov
(bad)
jmp
(bad)
pop
xchg
call
add
adc
test
mov
(bad)
fidiv
mov
fiadd
or
idiv
jmp
mov
inc
fidiv
test
jmp
icebp
and
(bad)
jmp
and
mov
dec
sbb
imul
push
imul
xchg
std
and
jmp
imul
jb
or
jge
fcomp
jb
(bad)
outs
(bad)
(bad)
and
jb
stc
repz
cld
and
xor
imul
lea
jo
push
add
push
(bad)
pop
add
(bad)
and
test
test
mov
dec
jb
and
jb
mov
jnp
je
sbb
add
jb
push
jb
sbb
pushf
test
ja
leave
shr
outs
add
call
dec
(bad)
push
sbb
fiadd
and
ficomp
adc
fidiv
test
mov
dec
jb
imul
jl
cwde
jb
test
mov
dec
lea
(bad)
fidiv
and
xlat
mov
and
icebp
mov
daa
(bad)
jmp
data16
or
xlat
mov
and
jmp
daa
(bad)
jmp
add
retf
fidiv
out
mul
and
call
and
(bad)
inc
jmp
(bad)
jmp
and
jb
test
jmp
pop
shl
idiv
(bad)
jmp
pop
adc
repz
inc
push
(bad)
stc
dec
adc
pushf
sti
out
xor
sti
sar
scas
jp
into
jmp
adc
push
and
out
xor
sti
sar
scas
jle
mov
sbb
push
lea
xor
and
addr16
daa
loopne
xor
and
addr16
daa
loop
ins
aaa
call
add
jge
push
sub
(bad)
push
ins
daa
loop
sahf
bound
push
mov
(bad)
mov
sbb
stc
push
xchg
jb
xor
icebp
imul
aaa
out
fcomp
adc
xor
pusha
inc
push
add
sbb
scas
jp
icebp
pop
mov
push
xor
add
lea
aad
push
call
adc
and
es
push
mov
pop
out
mov
lds
push
adc
ss
add
jb
push
ins
aaa
call
push
ins
daa
jmp
call
fldenv
(bad)
jmp
inc
imul
jle
mov
push
imul
push
jmp
push
mov
out
and
push
add
inc
push
add
out
push
mov
inc
jmp
push
aaa
out
pop
test
ffreep
(bad)
sti
repz
xor
es
and
push
das
push
mov
push
mov
stc
push
mov
mov
jb
idiv
(bad)
jmp
mov
lds
mov
idiv
and
xchg
jmp
fstp
jb
mov
(bad)
push
pop
loop
add
repz
int3
jb
push
and
(bad)
dec
push
jp
shr
jmp
jmp
push
mov
out
mul
(bad)
jmp
push
jmp
jmp
mov
idiv
and
xchg
jmp
outs
cmc
jb
or
push
and
sbb
xchg
jmp
add
icebp
ror
shl
fsubp
and
call
call
add
cdq
mov
pop
adc
add
fidiv
xchg
cmc
jb
push
mov
mov
(bad)
cli
inc
push
add
pop
icebp
push
mov
imul
sub
add
sti
iret
adc
push
and
sti
shr
sti
int3
add
and
and
jmp
push
add
aaa
and
(bad)
ror
pop
test
icebp
repz
(bad)
xchg
add
(bad)
jmp
add
icebp
ror
xor
sbb
fidiv
mul
icebp
in
add
data16
cmp
push
mov
idiv
and
jb
sbb
(bad)
mov
shl
add
out
and
imul
(bad)
add
jb
mul
and
dec
jb
mov
lea
xchg
(bad)
xchg
xor
jb
or
jb
cwde
sub
lar
xchg
push
add
push
loope
lea
inc
inc
push
add
push
mov
pop
out
sbb
and
cwde
jb
test
xchg
jmp
xor
jb
(bad)
push
xor
jb
or
jb
cwde
sub
lar
xchg
push
add
push
loope
lea
test
add
push
jmp
arpl
add
jmp
clc
pop
mov
jl
call
fidiv
cwde
sub
jb
(bad)
and
xor
mov
idiv
and
jb
sbb
jmp
ficomp
xchg
jmp
ficomp
xchg
jmp
xor
jb
(bad)
out
cmp
xchg
cmc
add
call
fidiv
cwde
sub
lar
xchg
push
add
push
loope
lea
adc
push
add
push
imul
not
loope
lea
pusha
inc
push
add
push
jmp
arpl
add
jmp
clc
pop
mov
jl
sbb
loope
jb
test
xchg
jmp
xor
jb
(bad)
adc
test
xchg
jmp
xor
jb
(bad)
out
cmp
xchg
icebp
add
call
fidiv
cwde
sub
(bad)
jmp
arpl
push
add
jmp
clc
mov
stos
add
(bad)
jmp
inc
(bad)
stos
add
(bad)
jmp
add
icebp
rcl
mov
enter
xchg
add
(bad)
jmp
add
icebp
ror
xor
sbb
fidiv
mul
icebp
in
add
data16
cmp
push
mov
idiv
and
jb
sbb
jle
push
xor
mov
idiv
and
jb
sbb
lahf
icebp
jmp
lahf
(bad)
xor
daa
add
retf
sbb
fidiv
mul
icebp
in
add
data16
cmp
push
mov
idiv
and
jb
sbb
jle
add
push
mov
idiv
and
jb
sbb
(bad)
data16
push
mov
inc
test
and
imul
call
push
xor
daa
add
icebp
ror
pop
test
je
call
push
mov
retf
call
push
xor
add
icebp
rcl
xor
add
retf
sbb
fidiv
mul
icebp
in
add
data16
cmp
push
mov
idiv
and
jb
sbb
jle
add
push
mov
idiv
and
jb
sbb
(bad)
loop
jb
mov
inc
test
and
imul
call
push
xor
add
icebp
ror
bound
add
test
mov
leave
(bad)
and
inc
push
add
adc
clc
push
movs
xchg
(bad)
retf
add
(bad)
jmp
inc
(bad)
stos
add
(bad)
jmp
add
icebp
rcl
xor
es
retf
sbb
fidiv
mul
icebp
in
add
data16
cmp
push
mov
idiv
and
jb
sbb
jle
pop
xor
mov
idiv
and
jb
sbb
xchg
out
push
dec
es
retf
sbb
fidiv
mul
icebp
in
add
data16
cmp
push
mov
idiv
and
jb
sbb
(bad)
push
jmp
add
out
and
imul
ja
add
retf
jne
fidiv
mul
and
dec
jb
mov
lea
xchg
(bad)
(bad)
fcomp
xchg
jmp
xor
jb
(bad)
push
imul
adc
ficomp
push
imul
call
lods
jmp
push
fidiv
test
xchg
jmp
sub
jb
add
out
fisub
iret
push
loope
lea
outs
mov
(bad)
and
jb
mov
lods
jmp
add
inc
(bad)
inc
xor
repz
sbb
lahf
in
sahf
xchg
add
(bad)
int
and
lahf
stc
sub
mov
(bad)
push
mov
movs
inc
(bad)
inc
loopne
sbb
stc
dec
or
jb
push
sar
inc
add
sti
adc
test
mov
in
(bad)
and
pop
push
add
jb
cmp
(bad)
jmp
add
sbb
xlat
cwde
jb
jbe
jb
mov
jmp
and
call
push
xor
adc
fidiv
test
jmp
fstp
xor
imul
xchg
repz
and
mov
test
push
add
call
push
push
mul
jmp
push
mov
stc
push
mov
mov
(bad)
call
push
xor
(bad)
and
mov
test
ror
inc
(bad)
xchg
std
and
jmp
add
call
push
push
imul
jmp
pop
push
add
test
(bad)
and
(bad)
jmp
mov
call
push
xor
add
icebp
rcr
fidiv
test
jmp
add
lea
add
jb
mov
fiadd
or
idiv
jmp
mov
imul
fwait
test
jmp
out
lea
pop
(bad)
jmp
and
mov
dec
sbb
imul
push
imul
xchg
std
and
jmp
(bad)
lock
or
jge
sbb
push
(bad)
outs
(bad)
(bad)
and
jb
stc
fisttp
mov
and
xor
imul
lea
push
mov
(bad)
pop
or
std
das
pop
mov
cmp
jb
test
mov
dec
jb
sub
jb
mov
(bad)
je
sbb
add
jb
jb
jb
sbb
pushf
test
ja
leave
rol
add
call
repz
add
call
push
mov
jl
mov
retf
call
push
xor
movs
(bad)
and
(bad)
jmp
(bad)
fidiv
mov
in
(bad)
and
test
(bad)
pop
mov
or
jge
scas
fidiv
imul
mov
mov
in
(bad)
and
jb
sub
xchg
popf
daa
(bad)
jmp
cld
and
(bad)
jmp
xchg
daa
(bad)
jmp
add
call
shr
out
sub
into
jnp
je
sbb
(bad)
repz
mov
jmp
and
sti
aad
sub
jmp
(bad)
xor
and
ins
popf
test
jmp
push
mov
jmp
(bad)
pop
mov
xor
inc
repz
(bad)
pop
out
jmp
and
call
push
xor
out
add
sti
shr
lea
jmp
and
(bad)
(bad)
push
bnd
mov
jmp
and
jl
add
sub
adc
(bad)
sti
repz
inc
push
(bad)
stc
dec
or
jae
mov
jb
push
xor
aas
add
sti
push
stc
and
pop
push
add
out
mov
xor
jp
jb
mov
inc
jmp
bound
icebp
mov
call
(bad)
inc
(bad)
inc
std
jb
push
xor
xor
(bad)
push
std
mov
push
push
mov
dec
inc
ficomp
push
imul
push
sub
jb
(bad)
mov
inc
jmp
push
mov
out
aaa
out
sbb
and
inc
std
jb
push
xor
xor
(bad)
push
std
test
in
jb
add
call
gs
ja
repz
in
jb
imul
arpl
xor
ror
sbb
inc
(bad)
jmp
fwait
test
sub
mov
out
jb
imul
arpl
and
ret
jmp
cmp
lea
add
pusha
xchg
test
push
add
pop
push
add
std
scas
test
ret
repz
inc
mov
pop
test
(bad)
lahf
mov
add
adc
mov
mov
fsubr
loop
xor
loope
xor
lahf
xchg
ficomp
push
add
jb
xor
rcl
pop
aas
add
jge
inc
and
(bad)
add
jb
inc
cs
sahf
lock
sbb
fwait
inc
and
xor
add
lea
sub
and
add
push
call
sbb
sub
repz
inc
push
fs
sub
or
jb
out
aaa
jmp
sbb
imul
adc
sbb
imul
push
imul
jl
mov
jl
xor
add
sti
sar
sub
sti
shr
and
xchg
mov
bnd
imul
jl
and
jb
jle
jb
imul
jl
and
jb
outs
bnd
imul
jl
and
jb
pop
bnd
imul
jl
and
jb
dec
bnd
xor
add
sbb
push
mov
jmp
add
dec
ds
sbb
push
mov
jmp
add
pop
ds
sbb
push
mov
jmp
add
imul
ficomp
pop
push
mov
jmp
add
jnp
add
sti
out
sub
shr
and
es
fwait
jb
repnz
jb
imul
jl
and
jb
loop
jb
imul
jl
and
jb
sar
jb
imul
jl
and
jb
ret
push
mov
sub
sti
rcr
mov
or
jb
imul
and
inc
xor
jmp
jns
add
push
xchg
inc
(bad)
pushf
fwait
jb
cmp
jb
imul
and
clc
push
push
add
mov
sbb
xchg
inc
xchg
mov
std
jb
sub
jmp
call
inc
xor
imul
mov
xor
in
push
add
lahf
xor
ficomp
jmp
call
dec
xor
imul
mov
xor
out
add
mov
jmp
call
jnp
push
imul
mov
xor
in
push
add
xlat
xor
ficomp
jmp
call
inc
xor
imul
mov
xor
in
push
add
repz
(bad)
out
xor
sti
shr
lea
test
push
jmp
jns
mov
sbb
xchg
inc
xchg
mov
cld
jb
pop
sbb
lahf
in
sahf
add
int
js
outs
xchg
out
pop
push
push
add
lea
xor
jmp
test
xchg
std
and
rcr
sahf
fwait
jb
add
jb
neg
aaa
out
mov
jl
and
jb
add
loop
push
aaa
out
sub
sbb
imul
scas
leave
inc
ficomp
neg
cwde
jb
add
jb
jmp
jns
mov
ficomp
push
(bad)
out
inc
mov
sbb
push
mov
popf
inc
and
icebp
pop
call
mov
push
or
xor
imul
push
daa
fidiv
add
and
mov
inc
mov
sbb
(bad)
out
ss
ficomp
xchg
fidiv
inc
and
icebp
pop
call
mov
push
or
xor
imul
shl
jb
popa
jp
push
imul
adc
ficomp
push
imul
pop
imul
push
imul
stos
add
jb
add
data16
cld
jb
mov
pop
push
mov
jmp
add
pop
xor
ficomp
push
(bad)
out
inc
mov
sbb
(bad)
out
ss
ficomp
push
imul
push
jl
mov
push
add
jb
fild
xor
imul
dec
and
jb
jge
xor
sub
push
(bad)
out
inc
mov
sbb
(bad)
out
ss
ficomp
push
imul
or
jb
add
jb
fild
xor
imul
or
jb
mov
fimul
push
imul
and
xor
imul
mov
fidiv
imul
push
add
and
add
push
imul
jb
loop
jb
mov
mov
jmp
add
rcl
mov
jle
(bad)
imul
add
jb
imul
inc
ficomp
push
jmp
jns
mov
sbb
(bad)
out
inc
mov
sbb
(bad)
out
adc
imul
jl
mov
push
or
xor
imul
bound
inc
xor
sbb
ins
fistp
xor
add
and
xor
jb
imul
jb
(bad)
out
call
fidiv
add
jb
add
jb
sub
call
jb
jnp
jno
or
xor
imul
sbb
jnp
push
sbb
push
(bad)
out
inc
mov
sbb
(bad)
out
adc
add
jb
cmp
ficomp
mov
add
repnz
imul
test
jmp
jns
mov
call
and
jb
add
jb
adc
jb
imul
sbb
cwde
jb
fild
xor
imul
call
xor
mov
test
mov
jb
xor
in
push
add
rcl
mov
jle
fidiv
imul
sbb
add
and
add
push
imul
jb
inc
stc
jb
mov
mov
jmp
add
rcl
mov
jl
mov
pop
add
sbb
add
jb
add
jb
imul
sbb
jmp
jns
pop
sbb
(bad)
out
inc
mov
sbb
(bad)
out
ss
ficomp
push
imul
inc
pop
add
sbb
fidiv
push
mov
int3
inc
ficomp
int3
ficomp
cmps
xor
fcmovbe
out
fwait
jb
add
jb
add
jb
adc
jb
imul
push
add
jb
fild
xor
imul
mov
fidiv
xchg
jns
push
imul
and
fimul
push
imul
cmp
fidiv
nop
fidiv
imul
push
add
jle
add
test
add
call
jnp
push
imul
and
fimul
push
imul
xchg
add
jb
ret
push
imul
push
add
jle
js
push
imul
jb
add
call
dec
xor
mov
pop
out
mov
inc
mov
sbb
(bad)
out
adc
imul
retf
jb
adc
mov
retf
jb
add
xor
imul
xchg
aaa
add
sar
sahf
fwait
jb
add
jb
add
jb
sbb
jb
imul
push
add
jle
add
test
add
call
inc
xor
imul
and
fimul
push
imul
lea
fidiv
test
jb
imul
push
add
jle
add
push
imul
jb
jb
jb
mov
xor
out
(bad)
and
sti
shr
pop
mov
inc
sti
repz
inc
push
gs
jl
(bad)
sti
out
xor
sti
shr
test
push
jmp
push
mov
in
add
push
push
xor
(bad)
and
jp
inc
(bad)
out
sub
sti
shr
lea
or
push
jmp
push
aaa
out
mov
jl
and
jb
add
loop
push
aaa
out
sub
sbb
imul
scas
leave
inc
ficomp
neg
cwde
jb
add
jb
jmp
jns
mov
ficomp
push
(bad)
out
inc
mov
sbb
push
mov
popf
inc
and
icebp
pop
call
mov
push
or
xor
imul
mov
fidiv
add
xor
sbb
(bad)
out
inc
mov
sbb
(bad)
out
ss
ficomp
cmp
fidiv
inc
and
icebp
pop
call
mov
push
or
xor
imul
dec
and
jb
popa
jp
push
imul
adc
ficomp
push
imul
pop
imul
push
imul
stos
add
jb
add
data16
call
pop
push
mov
jmp
add
mov
add
sbb
(bad)
out
inc
mov
sbb
(bad)
out
adc
imul
adc
fld
test
add
jb
mov
pop
popf
(bad)
fidiv
jnp
xor
imul
push
add
jb
jmp
mov
int3
inc
ficomp
push
imul
jb
xchg
lds
and
inc
arpl
mov
jl
mov
pop
add
lea
jmp
mov
data16
mov
jle
(bad)
(bad)
out
call
fidiv
add
jb
add
jb
sub
call
sbb
fld
test
add
jb
mov
push
mov
stc
push
mov
add
jb
add
jb
sub
out
add
jb
add
sbb
ficomp
xor
imul
push
push
fidiv
sub
mov
jb
xor
in
push
add
rcl
mov
jle
fidiv
imul
add
jb
imul
sbb
jmp
jns
mov
ficomp
push
(bad)
out
inc
mov
sbb
(bad)
out
ss
ficomp
push
imul
jle
fidiv
imul
xor
inc
ficomp
int3
ficomp
ror
add
shl
cwde
fwait
jb
call
cmp
mov
add
jb
add
jb
adc
sbb
gs
push
add
jb
fild
xor
imul
dec
pop
fidiv
icebp
inc
xor
imul
and
fimul
push
imul
inc
imul
push
add
sbb
add
and
add
push
imul
jb
and
jb
mov
mov
jmp
add
rcl
mov
jle
(bad)
imul
jle
fidiv
imul
push
jmp
jns
mov
ficomp
push
(bad)
out
inc
mov
sbb
(bad)
out
ss
ficomp
push
imul
lea
add
sbb
imul
and
int3
ficomp
ret
or
fcmovbe
mov
cwde
jb
add
jb
add
jb
sbb
sbb
imul
push
add
jle
js
push
imul
jb
add
call
dec
xor
sub
push
(bad)
out
inc
mov
sbb
(bad)
out
adc
imul
push
imul
push
add
jle
add
test
add
call
inc
xor
imul
and
fimul
push
imul
jb
test
add
jb
push
mov
leave
inc
ficomp
pop
fistp
jb
jmp
jns
mov
sbb
(bad)
out
inc
mov
sbb
(bad)
out
ss
ficomp
add
jb
add
sbb
imul
xchg
iret
inc
ficomp
in
fcomp
mov
mov
sub
push
add
sti
shr
add
ffreep
(bad)
sti
repz
inc
push
(bad)
int
aaa
arpl
stc
sub
sti
shr
sbb
add
jb
add
arpl
xor
or
(bad)
rol
dec
jb
add
imul
push
mov
jmp
pop
pop
jmp
jb
mov
test
mov
aaa
out
push
aaa
loop
push
aaa
jmp
(bad)
push
add
call
ret
std
test
pop
jmp
es
inc
fimul
push
jmp
pop
mov
mov
push
jl
mov
fwait
inc
and
jmp
mov
jb
add
jb
jmp
pop
mov
mov
inc
out
mov
mov
mov
repz
or
jb
push
mov
mov
icebp
fild
movs
inc
fidiv
mov
pop
jb
(bad)
and
jb
jmp
arpl
add
jmp
clc
push
mov
imul
pop
pop
imul
push
(bad)
and
push
add
aas
icebp
push
mov
jl
jo
adc
call
push
xor
add
repnz
pop
pop
imul
not
(bad)
and
push
add
jmp
adc
pop
jb
(bad)
and
jb
mov
jae
mov
imul
pop
pop
imul
not
(bad)
and
gs
add
jmp
dec
imul
mov
jmp
mov
jb
and
jb
test
(bad)
jmp
push
fidiv
jl
jp
adc
call
push
xor
add
(bad)
out
sub
rol
retf
sbb
fimul
jp
fidiv
jl
js
adc
call
push
xor
add
(bad)
imul
pop
pop
imul
not
(bad)
and
gs
add
jmp
and
push
mov
jmp
es
push
and
jb
test
(bad)
jmp
push
fidiv
icebp
sub
mov
(bad)
push
mov
jl
jl
adc
call
push
xor
push
imul
push
fcomp
xor
mov
jmp
add
jmp
mov
iret
inc
ficomp
test
cwde
jb
inc
inc
xor
jmp
mov
xor
ficomp
xchg
(bad)
out
cmp
xchg
stc
and
jmp
jmp
mov
add
and
icebp
add
repz
jmp
push
adc
lea
dec
xor
jp
shr
inc
sbb
jb
pop
sub
lahf
in
sahf
cs
jb
push
(bad)
int3
adc
fwait
dec
xchg
imul
pushf
xor
jae
xor
mov
loope
and
jb
jmp
arpl
add
jmp
clc
push
out
stc
and
mov
(bad)
fild
pop
imul
sti
mul
addr16
add
in
and
sbb
mov
jb
test
test
dec
jb
mov
fld
pop
imul
lea
adc
add
pop
add
test
mov
loope
and
sub
adc
call
push
xor
add
(bad)
stos
repnz
jle
imul
loope
and
jb
and
arpl
mov
movs
inc
(bad)
xchg
in
sub
pop
add
(bad)
stos
repnz
jle
imul
loope
and
jb
mov
jae
mov
stos
repnz
jle
imul
loope
and
jb
and
arpl
mov
movs
inc
(bad)
xchg
in
sub
imul
(bad)
stos
repnz
jle
imul
loope
and
jb
and
arpl
mov
movs
inc
(bad)
xchg
in
sub
xchg
add
(bad)
out
cmp
xchg
loope
(bad)
jmp
repnz
jle
imul
loope
and
jb
and
arpl
mov
mov
in
sub
xlat
add
(bad)
stos
repnz
jle
outs
xor
mov
loope
and
jb
imul
lea
into
lahf
jmp
out
test
(bad)
mov
mov
ficomp
cdq
mov
jb
clc
ss
jmp
test
test
(bad)
pop
iret
in
and
icebp
stos
jmp
aad
sub
out
pop
jns
add
loope
push
test
(bad)
repz
mov
mov
ficomp
xchg
(bad)
xchg
in
and
xchg
fcmovu
jb
call
pop
iret
jmp
mov
stos
std
es
jmp
add
jb
mov
loopne
xchg
das
(bad)
(bad)
pop
(bad)
jmp
jb
idiv
xchg
aad
(bad)
jmp
stc
and
iret
inc
(bad)
xchg
std
es
jmp
add
icebp
ror
and
call
dec
imul
mov
shl
aas
retf
push
mov
sub
(bad)
aad
pop
add
jb
cmp
out
push
add
pop
and
rcl
pop
iret
inc
(bad)
xchg
std
and
jmp
add
sti
out
sub
shr
rcl
ins
iret
inc
(bad)
xchg
std
and
add
(bad)
rcr
xor
jle
fidiv
mov
out
(bad)
and
jb
mov
sub
test
(bad)
push
mov
test
mov
dec
jb
test
mov
dec
jb
add
xor
mov
out
(bad)
and
jb
sbb
fwait
test
mov
dec
jb
test
mov
(bad)
pop
mov
push
push
imul
stc
and
stos
push
add
jmp
gs
add
push
imul
xchg
std
and
add
ficomp
pop
imul
imul
std
and
out
jmp
or
jge
(bad)
(bad)
mov
jmp
call
pop
mov
(bad)
and
sti
xchg
shr
icebp
stos
stc
and
and
fidiv
mov
mov
(bad)
mov
mov
ficomp
repz
mov
dec
jb
(bad)
cdq
mov
jb
test
mov
dec
jb
test
mov
dec
jb
test
test
(bad)
xor
push
test
(bad)
pop
into
adc
and
jmp
test
test
(bad)
sbb
adc
and
jmp
mov
test
(bad)
pop
iret
ret
lea
idiv
xchg
int
(bad)
jmp
stc
and
call
xlat
add
push
mov
call
jle
jb
sbb
fwait
test
mov
dec
jb
test
test
(bad)
push
iret
jmp
popa
push
add
fdivp
and
bound
call
test
mov
(bad)
pop
test
test
mov
dec
(bad)
jmp
add
jmp
popa
push
add
jmp
xchg
(bad)
and
and
push
mov
out
(bad)
and
(bad)
loop
and
xor
imul
push
jmp
mov
fwait
test
mov
dec
mov
(bad)
xor
ror
aad
sbb
and
mov
(bad)
xor
add
(bad)
clc
cs
jb
imul
sub
lods
and
ffreep
fidiv
mov
retf
fidiv
mov
mov
xor
sbb
xor
jae
push
ficomp
lahf
test
jmp
adc
fidiv
add
jnp
add
sub
add
push
mov
sbb
jb
add
jb
fldcw
lahf
jmp
push
inc
xor
jmp
mov
push
add
sbb
and
jb
jmp
mov
xchg
jmp
pop
add
call
push
and
bound
add
xor
mov
clc
(bad)
and
(bad)
jmp
(bad)
and
ins
pop
add
icebp
adc
xor
or
push
bound
scas
(bad)
push
add
jb
fidiv
mov
or
je
mov
xlat
div
mov
push
sbb
(bad)
pop
push
mov
(bad)
fwait
sti
in
mov
sti
(bad)
and
(bad)
jmp
jb
jb
push
ins
iret
movs
in
and
adc
push
push
mov
jmp
mov
shl
aas
retf
push
mov
shl
sbb
and
(bad)
jmp
in
and
mov
ret
push
add
mov
jmp
push
mov
ret
fild
sbb
pop
(bad)
(bad)
and
lahf
jmp
mov
mov
mov
ficomp
fcmovu
cwde
jb
test
jmp
adc
pushf
pusha
push
add
sahf
jmp
mov
(bad)
jmp
add
call
push
xor
(bad)
and
(bad)
jmp
(bad)
and
jb
test
jmp
adc
jb
add
inc
sbb
(bad)
in
cld
jb
imul
mov
ficomp
rcr
cwde
jb
inc
inc
xor
jmp
push
iret
je
and
movs
push
add
push
add
xor
ficomp
xchg
add
push
imul
sti
into
sub
sti
aad
addr16
clc
(bad)
and
xor
mov
sub
imul
mov
ficomp
rcr
cwde
jb
and
push
jmp
push
iret
hlt
in
and
movs
push
add
push
add
xor
ficomp
xchg
add
push
imul
addr16
inc
push
iret
test
and
movs
push
add
push
add
xor
imul
adc
sbb
imul
jb
inc
ficomp
lahf
inc
outs
sbb
ficomp
push
push
xor
sbb
fidiv
push
add
scas
push
push
mul
jmp
push
jmp
leave
and
jb
clc
mov
fwait
je
and
mov
stc
(bad)
and
call
push
aaa
scas
push
mov
jle
cmp
push
(bad)
scas
(bad)
inc
aad
push
xor
push
add
mov
mov
push
aaa
scas
push
push
mul
jmp
push
jmp
leave
and
jb
clc
mov
fwait
je
and
mov
stc
(bad)
and
call
push
aaa
scas
push
mov
jle
cmp
push
(bad)
scas
(bad)
(bad)
outs
aad
push
(bad)
scas
(bad)
dec
aam
push
mov
sub
lahf
jmp
in
and
ja
ficomp
shl
sahf
fwait
jb
inc
push
call
cli
cmps
xor
mov
jb
imul
stos
push
fidiv
inc
push
sbb
add
retf
sbb
(bad)
push
rcr
ret
jb
inc
push
jb
add
sbb
jmp
push
aaa
into
(bad)
lahf
into
adc
fpatan
stos
lahf
ret
rol
fidiv
(bad)
lahf
mov
fwait
inc
data16
xchg
aad
push
imul
and
ficomp
push
imul
push
imul
push
imul
xchg
int
ficomp
neg
cwde
jb
add
ja
add
rcl
sahf
fwait
jb
xchg
push
push
imul
push
jmp
mov
(bad)
mov
push
jbe
jb
jb
cmp
jb
sub
jg
add
and
xlat
jb
mov
sti
(bad)
and
jb
jmp
mov
inc
dec
sti
(bad)
and
(bad)
jmp
mov
pop
into
mov
call
push
push
idiv
imul
sbb
cwde
jb
add
jb
jmp
pop
mov
or
pop
adc
fidiv
add
(bad)
push
add
jb
add
out
(bad)
and
sti
aad
pop
(bad)
(bad)
and
jb
in
stos
xor
imul
push
jmp
mov
fwait
test
jmp
imul
or
jb
add
jb
push
xor
sbb
ficomp
push
imul
jae
xor
in
push
add
sub
add
cdq
push
mov
jl
add
sub
ds
mov
jb
imul
push
imul
push
in
call
scas
cmps
dec
pop
cmp
cs
jb
push
(bad)
int
cmp
mov
aaa
sbb
dec
jae
add
jge
(bad)
call
out
pop
add
jge
jae
jb
cmp
jae
add
jb
push
push
fistp
add
dec
cs
jb
test
push
add
icebp
sub
xor
add
test
fidiv
hlt
add
push
(bad)
out
sbb
in
lea
(bad)
push
mov
stc
push
mov
in
add
push
(bad)
outs
sahf
jmp
and
lea
jmp
pop
stos
jmp
and
(bad)
arpl
add
jnp
push
pop
not
add
call
push
and
jb
not
jb
or
push
jns
pop
xchg
jmp
and
(bad)
jmp
xchg
or
fdivrp
and
ins
popf
test
(bad)
test
jmp
daa
(bad)
jmp
(bad)
and
sbb
mov
jmp
and
(bad)
jmp
cld
and
(bad)
sbb
imul
and
xor
jmp
pop
test
push
fidiv
cmp
(bad)
push
add
jge
rcr
push
mov
jns
mov
xor
jb
cmp
mov
cmp
(bad)
push
add
pop
adc
(bad)
std
(bad)
and
(bad)
push
add
jge
(bad)
fnsave
(bad)
out
sbb
out
lea
mov
mov
stc
push
mov
add
push
cmp
jne
add
jb
call
jnp
mov
dec
push
or
call
div
idiv
(bad)
jmp
push
fidiv
inc
into
sti
xchg
stc
and
jmp
add
dec
adc
sahf
dec
adc
xor
jne
dec
adc
inc
xor
jne
dec
adc
inc
xor
jne
dec
adc
dec
jge
xor
jne
dec
adc
into
dec
adc
(bad)
dec
adc
pop
test
add
sbb
(bad)
scas
(bad)
(bad)
loop
jb
mov
call
jge
xor
jne
dec
adc
ror
xor
xlat
sbb
je
call
and
(bad)
(bad)
sahf
(bad)
jb
mov
sub
(bad)
mov
movs
push
(bad)
icebp
mov
daa
(bad)
jmp
cld
and
jle
add
(bad)
cld
and
push
adc
(bad)
out
sub
sti
shr
jb
add
pop
(bad)
and
call
fidiv
mov
fiadd
ss
push
imul
jb
(bad)
out
call
fidiv
neg
jb
mov
inc
out
mov
(bad)
jmp
(bad)
and
(bad)
jmp
mov
jb
push
pop
call
jmp
test
(bad)
jmp
test
push
jmp
push
call
(bad)
and
xor
clc
pop
mov
jae
sbb
imul
inc
jmp
pop
mov
cmp
lea
add
jb
xor
xor
imul
fimul
fidiv
xor
rcl
pop
sbb
ficomp
scas
xchg
jb
idiv
(bad)
jmp
add
mul
cld
and
stos
push
add
jecxz
and
jle
add
push
imul
lea
out
outs
add
cli
or
jb
mov
fiadd
ss
push
imul
jb
push
shl
(bad)
out
outs
add
adc
fidiv
neg
jb
mov
jmp
(bad)
call
and
bound
mov
jl
mov
rol
push
jmp
and
jb
into
shl
call
sbb
push
(bad)
and
jge
test
(bad)
jmp
add
push
adc
ficomp
push
imul
jb
(bad)
out
outs
add
xchg
fidiv
sbb
push
sbb
pushf
test
(bad)
jmp
mov
push
mov
test
(bad)
jmp
hlt
daa
(bad)
jmp
inc
(bad)
xchg
hlt
daa
(bad)
jmp
add
icebp
rcl
mov
push
add
call
push
and
jb
(bad)
shl
and
arpl
mov
jl
mov
rol
push
jmp
and
jb
push
shl
call
pop
popf
push
imul
(bad)
jmp
hlt
daa
(bad)
jmp
inc
(bad)
xchg
hlt
daa
(bad)
jmp
add
icebp
rcl
mov
push
add
call
push
and
jb
xchg
shl
and
arpl
mov
jl
mov
rol
push
jmp
and
jb
scas
shl
call
push
mov
stc
push
mov
test
(bad)
jmp
hlt
daa
(bad)
jmp
inc
(bad)
xchg
hlt
daa
(bad)
jmp
add
icebp
rcl
mov
push
add
call
push
and
jb
shl
and
arpl
mov
jl
mov
rol
push
jmp
and
jb
inc
shl
call
push
call
(bad)
and
xor
clc
pop
mov
imul
cmp
cwde
jb
add
pop
push
add
lea
sub
push
jmp
xor
add
mov
(bad)
and
jmp
mov
(bad)
call
add
(bad)
jmp
add
mov
jl
mov
rol
push
jmp
and
jb
rcr
jb
call
pop
imul
jmp
(bad)
call
jae
sti
out
sub
sti
ror
and
dec
jb
test
(bad)
call
retf
add
jb
test
(bad)
jmp
and
push
jmp
pop
iret
pop
(bad)
and
sbb
imul
pop
(bad)
cwde
jb
add
fist
add
lea
and
push
jmp
xor
adc
fidiv
add
dec
sbb
and
(bad)
jmp
add
mov
jl
mov
rol
push
jmp
and
jb
sbb
jb
call
pop
imul
jmp
jae
(bad)
and
repnz
fiadd
out
push
ins
out
jmp
ficomp
(bad)
push
not
(bad)
and
xchg
(bad)
and
xor
mov
jmp
and
jb
sbb
scas
mov
cmp
(bad)
jmp
(bad)
and
sbb
imul
push
imul
push
add
xor
inc
xor
jmp
push
mul
jmp
jb
add
(bad)
(bad)
mov
out
mov
inc
push
jg
cwde
call
cmp
push
mov
add
out
and
inc
pop
lea
jmp
mov
fwait
test
(bad)
sbb
sub
loop
and
jb
mov
jmp
and
repnz
fiadd
out
imul
xor
(bad)
jmp
hlt
daa
(bad)
jmp
jmp
jb
imul
xchg
icebp
daa
(bad)
jmp
icebp
cmp
push
(bad)
outs
xchg
(bad)
and
jb
mov
mov
(bad)
xor
add
lea
inc
jp
push
jmp
mov
jl
mov
jl
mov
jle
fidiv
imul
retf
adc
(bad)
xchg
cmc
and
jmp
mov
jmp
and
(bad)
jmp
imul
push
(bad)
outs
xchg
(bad)
and
jb
or
rcl
mov
pop
add
jb
xchg
sub
jle
js
push
(bad)
outs
xchg
(bad)
and
jb
add
out
and
sbb
xlat
cwde
jb
mov
mov
(bad)
xor
mov
jmp
sbb
jb
add
jb
stc
repz
add
ficomp
outs
fstp
xor
imul
hlt
call
ja
xor
in
push
add
cmps
adc
fcmove
mov
out
div
cld
and
arpl
je
lea
and
jp
loop
jb
pop
test
ffreep
retf
mov
icebp
cli
adc
jp
pusha
rcr
je
and
mov
jb
add
jge
rcr
jb
and
push
add
dec
and
ror
push
jmp
push
mov
out
aaa
out
mov
xor
je
lea
cmp
push
add
inc
xchg
mov
and
jb
outs
fidiv
cmp
pop
mov
pop
sbb
inc
ficomp
lahf
stc
sub
sti
sar
out
outs
add
sbb
inc
ficomp
sub
add
in
push
add
pop
adc
fimul
and
push
je
repnz
xor
add
out
push
add
arpl
add
dec
and
inc
xor
je
repnz
xor
add
rcl
xchg
mov
test
mov
test
push
add
out
add
inc
xchg
mov
push
outs
sub
imul
push
add
in
push
add
fistp
fidiv
xor
out
add
loop
add
inc
ds
fwait
jb
pop
push
outs
outs
mov
cli
in
push
add
jmp
add
inc
xchg
mov
push
outs
or
scas
pusha
jmp
adc
call
pop
mov
sbb
jb
pop
cmp
push
add
push
add
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
mov
and
fs
add
xchg
ds
pop
xor
inc
mov
xchg
(bad)
push
std
shl
push
jmp
in
jmp
(bad)
jne
icebp
out
and
jge
push
shl
ss
sbb
jmp
mov
inc
imul
(bad)
cmp
mov
xor
push
add
pop
push
adc
jb
add
fidiv
jmp
test
(bad)
jp
shl
(bad)
and
test
mov
jp
mov
in
(bad)
push
xor
fidiv
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
adc
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
jb
and
xchg
loop
add
.byte
