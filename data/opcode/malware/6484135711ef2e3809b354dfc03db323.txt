mov
xchg
mov
xor
adc
and
mov
test
test
and
ss
add
xor
and
add
xchg
test
xor
xchg
adc
add
xor
xor
xchg
and
mov
cmps
and
movs
nop
and
and
and
mov
add
es
push
mov
adc
xor
add
xor
xor
xchg
xchg
push
xor
test
cmps
xor
xor
adc
push
and
and
and
xchg
add
xor
and
xor
mov
and
and
xor
and
and
test
ss
xor
xor
xchg
ss
xchg
xchg
mov
xor
mov
xor
ss
test
and
mov
test
mov
ss
xchg
adc
adc
and
xchg
xor
adc
ss
test
xor
and
xchg
push
mov
mov
mov
push
and
and
xchg
xor
and
and
and
add
add
and
mov
mov
cmps
adc
ss
add
add
mov
nop
add
nop
mov
mov
mov
test
mov
nop
cmps
add
and
xchg
push
ss
and
mov
ss
and
mov
and
and
mov
and
mov
push
add
and
xchg
and
add
xchg
xchg
and
and
xchg
mov
add
add
xor
mov
xchg
and
xor
xchg
mov
xchg
mov
xchg
add
mov
and
adc
and
adc
mov
adc
xchg
mov
mov
xor
and
xchg
and
mov
test
ss
mov
mov
mov
cmps
test
xor
and
and
nop
movs
mov
nop
and
xor
and
xchg
and
xchg
ss
xchg
push
xor
adc
push
test
and
add
xor
and
xchg
test
ss
xor
push
xchg
add
ss
adc
adc
add
ss
adc
and
and
test
mov
adc
xchg
mov
cmps
test
and
and
xchg
mov
and
and
xchg
xchg
xchg
adc
adc
mov
mov
mov
add
xchg
test
mov
and
mov
xchg
add
test
add
xchg
mov
add
and
and
nop
xor
xor
push
and
adc
and
test
adc
push
mov
adc
mov
and
xchg
add
and
xor
xor
adc
adc
and
mov
xor
xor
adc
adc
and
xchg
test
add
xchg
test
ss
xor
add
mov
test
xchg
add
ss
and
xor
mov
xor
ss
movs
and
ss
and
ss
mov
cmps
add
and
mov
xor
ss
mov
xchg
test
xchg
mov
and
and
xchg
xchg
ss
es
xor
xor
mov
adc
xchg
adc
add
adc
add
xchg
xor
push
adc
mov
mov
xchg
xchg
and
mov
push
xchg
xchg
and
adc
mov
xor
xchg
xor
adc
and
and
movs
mov
xor
adc
and
xor
push
and
push
xor
xchg
cmps
adc
mov
add
and
xchg
xor
push
mov
xor
ss
and
and
xor
xor
test
xor
adc
test
push
xor
xchg
mov
adc
add
push
xchg
push
adc
mov
xchg
push
add
adc
xor
add
xchg
xor
and
xor
xor
xor
push
mov
xor
xchg
mov
mov
mov
xor
mov
xchg
mov
and
add
mov
adc
adc
push
ss
test
and
and
add
xor
mov
xor
mov
add
and
test
and
and
ss
add
mov
and
xchg
and
add
mov
adc
add
xchg
mov
adc
and
add
xchg
mov
adc
mov
ss
add
xchg
xchg
and
mov
test
mov
mov
and
adc
xor
mov
adc
nop
xor
mov
adc
and
nop
push
push
and
xchg
and
es
and
push
mov
xchg
adc
mov
adc
xor
xchg
adc
and
adc
ss
xchg
add
mov
mov
xor
mov
and
push
mov
mov
add
add
nop
xor
push
and
xchg
xchg
mov
add
adc
mov
adc
xchg
xor
xor
xchg
xchg
and
adc
mov
xor
and
adc
add
add
xor
mov
mov
and
and
adc
mov
xchg
adc
adc
adc
push
test
mov
test
mov
xchg
test
xor
xor
mov
add
mov
and
mov
mov
mov
mov
adc
xchg
xchg
xchg
and
adc
mov
mov
test
push
add
and
test
and
xchg
xchg
xchg
add
add
xor
and
and
adc
add
adc
xor
adc
adc
mov
xor
add
and
xchg
xchg
add
and
nop
mov
mov
xor
xchg
xchg
add
add
and
and
and
xchg
xor
mov
xchg
xor
ss
add
push
xchg
push
adc
push
mov
xor
xor
mov
and
mov
push
xchg
xor
mov
add
xor
adc
test
adc
and
movs
xchg
test
adc
xchg
test
push
xor
xchg
xchg
add
and
push
xor
add
test
nop
adc
add
mov
and
add
test
xchg
xor
xchg
push
xchg
push
xchg
xchg
and
push
push
and
mov
and
and
mov
and
xor
mov
xchg
xchg
xchg
and
and
xor
add
push
push
and
add
xchg
cmps
test
and
and
mov
mov
mov
cmps
xchg
mov
mov
xchg
add
xchg
mov
mov
test
mov
and
mov
xor
mov
mov
mov
xor
xor
and
test
add
and
xchg
xor
xchg
mov
and
and
test
mov
mov
xchg
xchg
xchg
add
add
xchg
mov
add
es
movs
mov
and
movs
mov
add
xchg
xchg
xor
add
mov
add
mov
test
xor
mov
xchg
xchg
xchg
mov
add
xchg
add
nop
adc
and
xchg
xor
mov
mov
nop
mov
add
xchg
adc
ss
mov
mov
xor
adc
xchg
mov
xchg
ss
ss
mov
nop
ss
ss
nop
and
xchg
and
add
xchg
mov
and
mov
test
adc
add
and
xchg
and
nop
mov
adc
add
xchg
add
add
mov
mov
add
mov
adc
xchg
mov
xor
adc
and
and
and
adc
xor
mov
test
xchg
add
add
add
cmps
ss
xchg
add
adc
nop
cmps
xchg
add
adc
xor
xchg
and
add
xchg
and
adc
xor
adc
and
xor
add
push
xor
push
es
mov
adc
xchg
xchg
xchg
ss
mov
xor
add
xor
mov
add
push
xor
add
xor
xchg
test
mov
movs
xchg
mov
ss
adc
xor
xchg
xor
mov
xor
add
ss
add
and
push
es
nop
push
mov
xchg
ss
mov
push
add
mov
test
mov
xor
mov
add
mov
add
add
push
and
test
and
xchg
xor
push
and
xor
add
mov
xchg
xchg
movs
add
add
xchg
adc
add
push
xor
adc
and
adc
add
push
cmps
add
mov
and
adc
add
xchg
xor
xor
mov
add
add
add
and
mov
xchg
and
xchg
ss
add
add
and
push
and
add
xor
add
push
xchg
adc
mov
ss
xchg
xor
xchg
xor
adc
adc
and
adc
test
xchg
xchg
mov
test
adc
and
and
add
xor
xchg
xor
cmps
xor
mov
add
test
and
mov
xchg
mov
xor
add
adc
mov
xor
mov
mov
mov
xchg
mov
mov
mov
adc
xor
test
and
add
adc
and
and
and
and
movs
adc
ss
mov
and
mov
adc
mov
xchg
and
nop
mov
mov
and
xchg
add
xor
xor
adc
add
mov
ss
mov
test
test
and
mov
ss
push
xor
add
adc
xchg
and
and
and
nop
mov
and
xor
xchg
xor
xor
mov
mov
mov
xchg
xchg
and
and
and
xor
and
mov
and
xchg
xchg
add
adc
add
xchg
mov
xor
xchg
xchg
xor
test
cmps
xchg
and
add
mov
adc
adc
nop
adc
add
adc
test
add
and
xchg
add
mov
mov
push
mov
add
xchg
add
mov
add
mov
mov
mov
add
mov
xchg
add
add
mov
add
and
test
add
mov
add
add
xchg
xchg
and
mov
add
add
adc
xchg
mov
xchg
mov
mov
add
add
test
and
add
mov
xor
xchg
and
add
adc
mov
mov
xor
add
mov
add
xor
add
and
adc
and
mov
xor
mov
xor
add
mov
and
add
xor
mov
nop
add
add
add
xchg
and
cmps
adc
and
adc
test
add
mov
and
mov
add
add
add
add
mov
xchg
nop
mov
xchg
xor
xor
xchg
mov
adc
and
mov
xor
mov
mov
adc
add
adc
cmps
xor
add
push
add
movs
xor
xor
adc
xor
and
and
add
add
mov
mov
xor
push
add
mov
xchg
mov
add
and
and
xchg
mov
push
mov
xchg
and
xor
push
mov
xor
push
adc
xchg
adc
adc
mov
adc
movs
and
and
and
xchg
add
adc
xor
test
mov
cmps
push
nop
add
add
and
ss
xor
adc
movs
add
and
movs
test
xchg
and
add
and
and
xchg
mov
mov
mov
mov
xchg
mov
adc
adc
add
mov
xchg
push
test
movs
xchg
xchg
mov
add
and
xor
xor
push
xor
add
mov
adc
test
and
xchg
xor
adc
xor
add
xchg
mov
xor
xchg
adc
and
and
xor
add
adc
push
mov
adc
and
and
xor
and
mov
adc
xor
mov
cmps
xchg
mov
adc
add
adc
xchg
add
push
mov
xchg
add
and
adc
and
push
xchg
xor
xor
push
mov
push
mov
xor
add
mov
mov
and
test
and
test
mov
mov
xor
nop
add
mov
and
call
sub
add
mov
mov
and
lds
add
adc
or
sub
or
jbe
ret
nop
add
xchg
add
scas
add
ret
(bad)
mov
add
add
add
and
pop
and
or
add
add
adc
test
nop
or
rol
ret
inc
add
add
or
test
and
inc
add
adc
sub
and
sub
loop
pop
and
xchg
dec
arpl
inc
pusha
sub
push
or
inc
add
or
test
add
adc
or
adc
je
add
add
and
add
xchg
or
jo
add
add
inc
inc
add
add
and
sbb
adc
add
add
dec
mov
mov
repz
adc
inc
pusha
add
test
push
or
and
push
or
sbb
inc
and
and
mov
add
cdq
adc
lods
push
add
xchg
mov
push
retf
add
and
add
add
dec
sub
and
test
sbb
push
add
jbe
adc
adc
add
adc
xor
pusha
add
or
sub
inc
mov
pop
or
add
mov
mov
cmp
jmp
add
aad
or
bound
xor
or
inc
sub
or
and
add
add
sub
rol
inc
test
rol
rol
dec
xchg
add
push
mov
mov
mov
add
adc
inc
pop
inc
mov
popa
add
push
push
add
inc
inc
xchg
inc
add
add
add
push
add
popf
sbb
adc
sub
sbb
call
pop
add
movs
and
add
adc
add
pop
pusha
inc
add
and
adc
sbb
add
add
xor
adc
pop
add
test
sbb
or
adc
or
or
adc
add
or
or
test
and
add
push
add
popa
add
add
cmp
sbb
add
add
mov
cmc
and
add
and
add
add
dec
or
add
rol
or
add
add
add
xchg
adc
adc
add
xor
test
push
add
mov
or
push
sub
add
dec
add
and
or
and
and
xor
add
adc
mov
mov
cmp
ret
int
and
jns
sbb
adc
add
mov
add
add
sub
adc
or
add
inc
inc
add
add
out
movs
push
xchg
bound
sahf
and
pushf
add
add
push
add
adc
add
mov
rol
add
adc
pushw
mov
xor
mov
test
es
add
sub
push
inc
nop
or
push
push
inc
mov
adc
loopne
cmp
or
add
or
sbb
add
and
add
adc
add
mov
or
fadd
add
and
adc
sbb
add
or
or
add
adc
xor
push
call
add
add
add
xchg
adc
sbb
and
or
add
cmp
or
push
add
test
mov
notrack
inc
and
les
shl
and
xchg
push
add
add
loopne
mov
mov
mov
xor
add
lea
adc
sub
mov
test
add
ins
or
int
pusha
or
adc
mov
add
or
add
cdq
adc
push
popa
adc
add
add
stos
push
add
popa
add
xor
scas
push
and
add
inc
pop
and
adc
pusha
and
inc
mov
test
les
and
cmp
add
popa
adc
inc
data16
mov
stos
add
add
inc
and
or
add
sbb
inc
ret
or
and
dec
add
adc
les
ret
sub
dec
and
mov
push
sub
or
inc
add
push
mov
add
or
push
push
call
or
adc
inc
adc
inc
adc
add
add
add
or
or
rol
ret
add
adc
adc
and
and
and
pop
in
adc
mov
or
nop
movs
inc
and
sub
jnp
push
or
add
xchg
adc
clc
xor
and
rol
and
adc
add
add
add
inc
rol
or
add
inc
and
cmp
push
add
mov
mov
mov
add
xor
and
mov
enter
push
xor
add
adc
or
add
adc
inc
xor
add
add
and
push
adc
sub
sbb
add
adc
inc
add
test
or
add
add
movs
and
xchg
es
pop
loope
inc
rol
add
xchg
sub
cmps
and
add
and
rcl
and
and
or
add
and
adc
and
adc
and
ret
jo
adc
or
add
and
adc
add
add
add
pop
mov
add
scas
add
or
test
add
add
add
mov
shl
mov
add
les
add
fadd
and
add
inc
or
lea
add
add
and
adc
inc
add
dec
add
and
adc
or
rol
inc
add
and
add
add
push
add
adc
pusha
mov
ret
sub
jno
shl
add
add
rol
inc
adc
or
or
or
call
mov
add
push
or
xor
add
adc
inc
add
push
retf
adc
inc
adc
inc
cmp
or
sbb
inc
pusha
mov
or
inc
rol
or
mov
lds
adc
add
test
les
add
rol
inc
add
lds
retf
pop
add
rcl
add
lods
add
inc
inc
sub
inc
or
and
add
adc
add
nop
mov
and
outs
sub
data16
test
rol
add
pusha
add
push
add
adc
add
call
adc
adc
adc
pop
adc
or
and
adc
or
add
add
(bad)
icebp
add
add
je
add
inc
jo
push
xchg
add
adc
mov
add
mov
add
or
or
xchg
and
nop
les
add
adc
push
jecxz
(bad)
adc
or
test
inc
inc
push
add
and
sbb
push
and
adc
rol
jmp
in
pop
add
inc
add
add
push
pop
push
cmp
sbb
add
xchg
mov
add
inc
or
addr16
aam
add
inc
adc
adc
inc
add
and
inc
add
add
or
and
adc
mov
xchg
add
test
sbb
lds
or
add
sub
inc
sub
mov
retf
inc
and
and
test
test
or
and
xor
add
inc
nop
adc
push
add
adc
test
xchg
or
add
inc
xchg
adc
add
add
add
add
les
push
pusha
movs
add
adc
inc
add
or
xchg
add
add
nop
push
adc
test
xchg
inc
or
adc
(bad)
rol
inc
or
data16
les
sub
adc
jmp
add
mov
adc
and
add
add
push
inc
add
add
and
inc
and
es
and
xor
add
add
add
inc
and
sub
sbb
adc
test
loop
inc
adc
add
push
sub
pop
inc
adc
xor
add
and
inc
inc
bound
adc
push
push
add
add
rol
popa
es
sub
dec
and
mov
sbb
fs
add
add
adc
nop
mov
dec
and
and
add
nop
in
mov
or
test
dec
add
mov
pop
outs
inc
pusha
or
mov
inc
and
or
retf
inc
nop
and
jne
add
and
lea
pusha
adc
or
sub
fld
add
inc
add
add
sbb
add
add
add
or
or
dec
or
add
sub
jo
and
sbb
dec
rcl
adc
cwde
add
adc
sbb
or
add
or
mov
push
and
add
and
add
add
or
dec
and
xor
or
add
add
xchg
and
add
or
add
test
mov
xchg
add
push
mov
adc
or
xor
sub
push
pop
mov
and
inc
push
add
rol
inc
add
pusha
push
or
add
popa
push
adc
push
push
mov
add
sub
add
ret
add
xor
push
mov
add
adc
dec
inc
dec
push
add
inc
add
or
mov
add
push
add
add
xchg
mov
or
add
dec
adc
add
and
and
or
mov
rol
add
add
and
inc
add
or
inc
xor
xchg
push
and
ds
adc
add
mov
and
dec
retf
adc
adc
adc
dec
push
mov
or
sub
fld
movs
add
mov
inc
inc
add
inc
dec
pop
inc
add
inc
adc
jo
add
adc
dec
add
inc
inc
sbb
sbb
add
inc
xor
add
adc
or
add
add
add
and
push
sbb
inc
add
mov
adc
add
adc
mov
inc
loope
pop
mov
sub
call
inc
add
adc
lock
mov
adc
add
push
and
push
xchg
sub
add
add
mov
add
inc
adc
call
add
and
or
xchg
and
mov
add
add
add
or
ret
inc
adc
add
add
add
add
push
inc
nop
cmp
inc
movs
sub
nop
dec
pushf
stos
add
add
sub
adc
add
mov
(bad)
div
add
adc
popa
add
and
sub
add
mov
inc
and
and
inc
test
push
xchg
mov
xor
add
and
or
dec
or
inc
xor
inc
push
in
inc
add
dec
les
enter
sub
xchg
inc
add
add
add
inc
add
sbb
and
ror
adc
les
adc
adc
inc
inc
add
mov
or
inc
or
dec
inc
(bad)
rol
xchg
push
or
dec
sub
and
movs
fisub
pusha
sub
xor
add
rol
add
mov
test
add
add
ror
adc
call
xor
mov
push
xchg
adc
add
mov
and
push
les
pop
add
inc
inc
adc
dec
xor
adc
add
adc
add
aaa
dec
add
je
adc
push
int3
xchg
or
and
or
add
int3
dec
add
popa
add
or
and
inc
add
adc
push
adc
add
pop
sub
or
pusha
or
or
dec
inc
add
and
or
inc
xor
push
dec
sbb
push
add
add
adc
mov
inc
add
adc
sub
or
xor
rcl
and
es
jmp
es
adc
mov
push
add
or
cmp
or
adc
or
and
or
dec
(bad)
or
sbb
adc
sbb
add
inc
shr
nop
or
inc
dec
call
adc
inc
add
mov
dec
push
es
or
add
and
and
clc
mov
and
or
pusha
inc
loopne
bound
inc
inc
add
test
or
cwde
rol
xor
inc
push
add
and
rol
xchg
xor
or
add
lds
and
adc
or
dec
inc
or
add
dec
add
inc
inc
add
enter
mov
inc
add
add
and
and
and
inc
test
or
pusha
or
xor
add
enter
adc
aam
or
cmp
add
inc
sbb
add
loopne
je
je
add
adc
adc
les
sub
xor
fs
add
mov
retf
inc
nop
push
and
loopne
jo
add
adc
xor
add
add
push
add
adc
add
add
mov
inc
xchg
add
adc
add
add
and
adc
outs
dec
inc
inc
mov
nop
xchg
and
movs
adc
add
rol
or
and
inc
add
mov
adc
push
and
or
add
pusha
sub
mov
les
or
or
xor
adc
add
and
in
dec
xor
pop
or
ror
add
dec
add
and
cmp
movs
mov
xor
mov
dec
and
sbb
add
add
and
or
sub
add
js
inc
or
push
test
cmps
and
inc
adc
inc
add
add
or
mov
add
add
adc
mov
test
add
add
mov
add
or
add
adc
test
add
add
and
sub
and
enter
xor
enter
mov
add
push
adc
pop
and
mov
push
cmp
inc
movs
cs
cdq
adc
add
adc
and
adc
adc
adc
adc
adc
inc
jbe
push
and
add
rcl
pop
pop
nop
loop
call
add
pusha
add
popa
or
add
adc
mov
call
(bad)
inc
dec
xchg
inc
add
sbb
bound
inc
adc
mov
and
adc
xchg
xchg
adc
xor
adc
adc
dec
push
add
icebp
add
add
add
add
adc
adc
or
bound
inc
add
cwde
pop
add
inc
or
add
imul
adc
movs
aam
dec
nop
or
push
adc
sub
inc
xor
adc
dec
rol
and
or
mov
and
adc
js
xchg
add
inc
into
add
add
and
mov
push
lea
sbb
sub
push
add
adc
add
add
nop
je
add
and
adc
and
mov
inc
add
and
lsl
adc
add
push
adc
or
inc
xor
mov
push
imul
or
(bad)
and
push
add
and
add
loopne
add
or
or
call
inc
or
adc
and
dec
dec
loop
add
dec
add
add
and
and
test
add
add
xor
cwde
dec
rol
add
dec
dec
movs
xor
push
int3
sbb
rol
add
push
xchg
add
cmp
movs
test
pop
inc
adc
add
rcl
add
adc
add
add
inc
inc
sub
push
nop
sbb
add
cmps
pushf
adc
pop
add
add
xchg
mov
add
and
inc
add
and
inc
loope
inc
adc
add
or
shl
and
icebp
add
shr
add
sub
fisub
dec
and
pusha
or
inc
or
add
or
ret
inc
add
add
or
mov
add
add
pop
push
fs
or
and
sbb
and
xchg
dec
add
adc
inc
xor
add
adc
or
add
or
dec
hlt
add
add
arpl
add
add
mov
out
or
or
and
aad
adc
inc
and
and
inc
popa
sbb
add
xchg
ror
add
add
adc
nop
and
xor
add
sub
add
adc
movs
or
or
bound
inc
add
test
(bad)
(bad)
lock
adc
and
rol
and
cwde
fs
sbb
add
mov
inc
and
shl
adc
sub
add
add
add
adc
add
push
mov
xchg
pop
add
add
movs
sub
add
shl
inc
add
add
add
or
add
inc
add
adc
add
add
inc
and
push
add
mov
add
add
add
add
adc
dec
inc
xor
jle
and
and
sbb
add
add
lds
add
and
and
add
sbb
jmp
mov
sub
test
popfw
cmp
add
or
add
add
retf
adc
sbb
adc
add
or
push
jo
bound
shl
sub
add
push
cmps
xchg
mov
inc
inc
test
add
lds
adc
or
dec
or
inc
add
and
add
push
rol
add
dec
or
inc
add
adc
add
or
inc
pop
add
adc
movaps
add
inc
push
and
and
test
or
add
add
cmp
add
and
adc
add
xor
inc
add
add
ins
ret
and
or
inc
and
movs
cs
push
ins
sbb
dec
push
add
mov
and
lock
inc
xchg
test
add
add
adc
call
add
pusha
add
or
add
adc
and
add
or
adc
sub
sub
sbb
test
pop
push
add
mov
cmp
pop
sbb
adc
add
xor
mov
jb
add
jb
sub
add
pop
add
push
and
inc
add
add
adc
add
adc
nop
or
xchg
add
add
rol
push
push
push
add
repnz
adc
or
shl
add
call
inc
and
dec
inc
inc
adc
inc
adc
bound
xor
add
or
push
inc
or
sub
add
dec
add
or
push
inc
sbb
and
dec
add
add
mov
xchg
sub
sbb
xor
push
push
add
add
adc
sbb
inc
pop
inc
add
stos
adc
adc
and
adc
add
xchg
xchg
and
add
or
add
popa
loop
inc
cmp
adc
inc
add
rcl
add
loopne
adc
pop
add
mov
pop
push
mov
cmp
push
es
enter
add
dec
mov
rol
adc
bound
add
inc
and
inc
xor
inc
pop
add
add
(bad)
add
or
push
and
adc
push
or
adc
add
push
and
add
adc
or
pop
or
sub
add
inc
dec
les
add
add
or
and
add
and
daa
or
add
or
adc
in
add
or
add
adc
lock
add
test
retf
or
mov
inc
xor
adc
add
xor
and
sub
add
or
or
add
add
mov
add
test
test
add
add
cmps
push
add
add
adc
arpl
add
add
sbb
inc
add
push
or
or
fs
and
or
fs
scas
clc
das
test
and
or
cdq
sbb
sbb
or
add
adc
add
add
dec
push
leave
mov
xchg
or
push
and
or
pop
or
sbb
test
inc
add
xor
pusha
add
mov
inc
add
add
xchg
dec
dec
xor
and
sub
shl
and
dec
push
or
sub
adc
add
and
ret
or
and
add
inc
inc
or
les
add
pop
inc
test
add
dec
adc
xor
dec
and
adc
add
inc
and
add
and
inc
cmp
or
push
push
and
lea
mov
cwde
and
and
add
push
adc
inc
add
pushf
adc
rcr
data16
sbb
adc
adc
add
adc
push
dec
or
and
sbb
mov
add
add
xchg
dec
adc
add
add
push
add
cdq
add
add
adc
push
sbb
or
adc
and
sub
adc
jne
adc
adc
add
or
inc
and
inc
retf
inc
outs
mov
add
xor
add
add
add
add
and
add
push
add
mov
and
add
call
adc
add
and
adc
shl
pusha
and
add
add
and
add
mov
sub
add
adc
inc
add
sbb
movs
(bad)
inc
adc
xchg
adc
add
and
add
sbb
add
xchg
popa
add
or
shr
push
and
mov
icebp
add
jo
xor
xchg
xor
sar
les
adc
mov
xor
add
or
or
push
add
add
inc
add
add
sbb
test
add
nop
sub
test
adc
xor
add
test
ret
inc
inc
add
sbb
add
add
xor
les
xchg
pop
adc
push
and
dec
shl
and
mov
inc
dec
fisttp
mov
inc
inc
inc
add
add
add
inc
and
arpl
adc
shl
sbb
add
add
add
add
shl
bound
loop
and
add
lock
add
mov
add
cmp
or
inc
adc
xchg
mov
dec
int3
adc
inc
es
push
rol
or
int3
add
inc
rcr
dec
and
xchg
add
add
sbb
rcl
rol
or
dec
test
pop
add
adc
sub
mov
add
add
mov
es
xchg
add
or
ins
add
retf
add
adc
and
ror
dec
sub
add
mov
adc
or
inc
sub
inc
add
add
inc
pusha
ret
pop
call
add
add
dec
test
or
dec
mov
dec
adc
loopne
inc
push
add
add
sub
add
add
push
adc
or
repnz
add
sub
adc
push
add
add
mov
mov
and
and
and
inc
add
or
cdq
enter
adc
adc
inc
sbb
add
add
xor
shl
add
popa
inc
and
test
and
and
add
add
add
sub
add
push
add
adc
bound
add
loopne
pop
mov
arpl
adc
add
push
mov
add
xchg
shl
sub
mov
pusha
add
inc
inc
mov
add
or
adc
or
adc
add
adc
or
test
pusha
and
add
and
add
inc
add
and
dec
adc
and
and
rcl
mov
icebp
or
pusha
ror
add
add
add
and
and
add
add
sub
add
pusha
inc
sbb
test
and
add
adc
add
aas
rcl
add
dec
inc
add
add
sub
adc
adc
add
loopne
in
loopne
add
adc
xor
and
push
inc
(bad)
lods
and
add
dec
popa
sbb
mov
add
or
pop
inc
sub
retf
and
add
push
test
and
loopne
add
add
jl
mov
xor
or
xor
add
add
add
add
dec
adc
inc
add
movs
sub
inc
pop
add
in
and
add
add
adc
mov
dec
mov
js
inc
mov
or
sub
inc
and
add
dec
es
adc
add
inc
inc
add
adc
jo
xor
pop
cmp
sub
add
add
and
popa
push
add
xor
xor
lods
pop
adc
and
test
test
add
add
inc
and
loopne
xor
add
sbb
add
dec
add
adc
sbb
sahf
add
leave
xor
adc
call
add
push
add
dec
dec
add
les
add
or
dec
and
movs
adc
add
pop
add
add
or
and
add
inc
and
sub
js
add
push
adc
jno
xchg
or
add
add
push
add
and
sub
pusha
pusha
test
inc
dec
sbb
xor
pusha
or
xor
push
and
inc
adc
adc
dec
add
inc
add
add
shl
pop
nop
inc
dec
dec
fs
sbb
popa
sbb
adc
or
push
add
adc
test
add
and
add
and
pop
add
mov
adc
add
push
ror
xchg
add
xor
movs
inc
push
mov
adc
adc
pop
ret
add
push
and
inc
add
adc
adc
or
and
and
sbb
or
xchg
add
es
or
or
push
ret
add
add
les
add
add
xor
pusha
mov
add
and
mov
xchg
add
sub
adc
mov
add
ret
add
xchg
add
in
add
sub
pusha
pop
js
xor
add
add
and
xor
sub
and
add
push
inc
or
add
adc
sbb
add
adc
xor
add
add
add
add
adc
add
pop
and
add
adc
or
jb
push
mov
add
aad
and
xor
add
add
add
dec
xor
add
and
push
adc
add
adc
sub
inc
add
ss
add
rol
add
add
cmp
and
add
add
adc
or
test
loopne
test
or
add
adc
ins
inc
and
push
and
inc
mov
adc
and
add
add
add
and
inc
or
or
and
scas
add
add
shl
add
ds
ret
dec
push
mov
xchg
add
add
or
or
and
add
inc
cdq
or
add
nop
add
test
xor
add
sbb
and
add
add
or
xor
add
add
lds
add
or
add
add
inc
sub
inc
push
mov
adc
adc
and
mov
pop
and
mov
add
pop
xor
xor
or
inc
add
movs
adc
cmp
xor
mov
inc
add
and
inc
push
sbb
test
adc
add
push
lods
add
fcom
add
push
mov
add
js
or
adc
xchg
mov
adc
or
xchg
cmp
inc
movs
inc
xor
sub
add
sbb
ficomp
add
nop
xchg
sbb
add
add
js
add
push
add
and
mov
adc
inc
add
sub
shl
add
inc
inc
sub
mov
mov
sub
pop
add
inc
and
mov
and
add
adc
adc
adc
add
sub
rcr
add
pop
add
test
inc
es
and
and
nop
adc
mov
xchg
and
add
add
in
or
pusha
add
add
dec
inc
add
add
or
add
inc
add
add
xor
adc
sbb
adc
add
add
inc
pusha
dec
push
add
or
or
sbb
cmp
push
push
inc
dec
adc
ss
xchg
add
pop
add
test
and
pop
cwde
adc
and
push
inc
and
adc
mov
add
sub
pusha
and
add
inc
add
loop
adc
adc
adc
sub
xchg
add
add
add
xchg
add
add
inc
popa
add
adc
xor
adc
es
and
shl
xor
mov
add
add
rcl
add
sub
nop
and
or
add
add
add
dec
inc
or
and
add
push
enter
and
add
pusha
add
sub
or
and
sub
inc
add
es
test
adc
inc
xor
mov
xor
pop
sub
inc
jb
add
sbb
add
add
and
pop
daa
or
add
mov
sbb
mov
and
add
or
add
nop
mov
add
sub
sub
or
lea
inc
adc
and
adc
test
push
popa
push
add
adc
xchg
or
inc
dec
or
inc
adc
and
pusha
or
mov
push
push
inc
add
sbb
sub
clc
push
aam
mov
add
loopne
movs
add
test
and
add
and
or
add
sub
fs
add
mov
add
xchg
and
add
and
mov
mov
adc
and
and
bound
movs
push
add
add
add
jecxz
mov
mov
test
adc
push
adc
add
sub
and
ret
test
xor
sub
test
add
add
lock
and
inc
push
add
or
and
and
add
or
push
xchg
and
adc
and
xor
add
inc
inc
mov
or
adc
add
and
lods
movs
ret
popf
mov
add
xor
add
adc
adc
add
shl
les
inc
xor
cmp
adc
dec
add
add
add
push
call
dec
pop
mov
add
add
mov
inc
adc
adc
or
adc
add
adc
xor
add
add
push
add
add
and
test
add
or
xor
mov
or
inc
and
add
add
or
inc
push
test
add
add
inc
and
add
xchg
jb
and
and
cli
mov
pop
inc
and
inc
add
inc
adc
add
xor
adc
sub
sbb
sub
or
enter
add
add
add
inc
add
add
adc
add
add
sub
jge
nop
dec
inc
add
adc
mov
popa
(bad)
rol
addr16
adc
fadd
add
add
adc
movs
add
or
add
or
and
add
or
add
popa
inc
xchg
inc
push
sub
and
fs
add
and
inc
add
leave
sbb
add
push
mov
test
sub
sbb
add
test
and
inc
xor
and
mov
or
popa
inc
sbb
or
jno
adc
and
cs
loopne
add
dec
add
add
add
add
fadd
inc
push
add
inc
inc
or
add
or
add
xor
mov
and
adc
es
inc
add
or
push
add
add
inc
and
and
xlat
xor
pop
and
push
or
add
test
adc
adc
test
inc
or
ror
adc
or
xor
sbb
add
add
add
adc
aad
mov
rol
mov
add
xchg
fiadd
push
adc
add
mov
adc
and
xor
sub
dec
les
adc
xchg
add
add
add
ss
push
js
test
adc
ret
xor
push
test
inc
test
add
inc
inc
movs
push
inc
add
pop
adc
add
inc
sbb
add
or
sub
add
ret
pop
add
push
and
or
pusha
ror
dec
mov
adc
or
add
nop
lds
sub
inc
sbb
pop
fwait
inc
pop
add
add
add
add
les
add
push
add
inc
and
xchg
add
adc
mov
or
adc
ret
adc
sub
sub
push
add
mov
push
and
add
test
mov
adc
inc
mov
adc
xor
add
add
cmp
push
lds
jb
or
push
inc
adc
movs
movs
adc
adc
add
add
inc
add
add
inc
and
inc
arpl
add
or
inc
adc
inc
mov
and
pop
(bad)
add
dec
mov
add
test
inc
or
and
add
push
mov
add
add
shl
inc
dec
or
les
test
add
add
xor
add
or
add
dec
adc
inc
mov
inc
call
xor
or
test
inc
add
adc
add
loope
or
imul
test
add
add
adc
dec
ror
dec
loop
add
adc
je
jo
or
add
mov
adc
inc
inc
inc
add
and
sub
inc
inc
sub
add
sbb
add
and
add
mov
sub
add
inc
inc
adc
push
test
or
xchg
pop
and
loopne
push
sbb
sbb
inc
add
sbb
mov
add
and
add
mov
and
xchg
adc
and
xor
adc
call
and
push
adc
loopne
or
add
or
add
mov
inc
mov
mov
add
sbb
and
sub
or
add
nop
add
inc
add
add
xchg
add
sub
sub
or
inc
mov
add
popa
sub
adc
add
rol
add
movs
add
push
and
inc
add
or
adc
inc
or
xor
inc
add
and
add
add
add
jmp
adc
and
pusha
add
cwde
inc
or
sub
xchg
xor
add
nop
adc
add
adc
nop
and
or
adc
add
add
lds
mov
adc
xor
add
add
mov
sbb
pop
nop
cmp
adc
inc
enter
dec
xchg
or
enter
add
or
retf
push
rol
and
push
mov
shr
dec
popa
adc
add
adc
sbb
ss
add
mov
add
add
add
ret
sbb
inc
or
and
push
test
sub
add
and
push
inc
or
add
add
pop
and
pop
sub
add
adc
add
dec
add
push
pushf
adc
add
and
pop
add
add
data16
add
add
adc
rol
dec
add
or
xor
adc
sbb
push
add
adc
inc
or
cmp
add
and
or
add
adc
xor
test
or
(bad)
fadd
add
add
adc
sldt
sbb
or
add
add
xchg
mov
rol
mov
add
sbb
add
inc
and
adc
inc
sbb
add
add
sbb
test
adc
add
or
xchg
push
mov
add
mov
add
mov
mov
add
fsub
and
pusha
sub
add
or
ret
dec
push
push
add
xor
add
test
adc
xchg
jo
jb
add
push
add
add
add
sub
xchg
add
mov
dec
and
call
nop
adc
push
add
add
push
mov
add
sbb
and
dec
js
nop
sub
and
dec
fld
add
push
and
inc
inc
add
add
loopne
add
add
and
aam
sub
mov
popa
mov
inc
jno
push
sbb
and
add
adc
and
and
add
and
xor
stos
add
mov
adc
push
ret
xor
add
add
inc
or
add
rcl
add
pop
nop
adc
add
shl
sbb
or
add
inc
lds
add
jo
dec
add
jno
sbb
or
cmps
add
inc
add
xor
add
adc
es
test
adc
inc
adc
adc
pop
push
nop
add
add
push
or
mov
inc
mov
sbb
aas
and
mov
xor
add
or
inc
jae
dec
push
inc
push
and
inc
mov
xor
or
add
sbb
add
or
add
pop
add
dec
and
push
or
adc
and
adc
adc
add
inc
and
sub
add
add
xor
add
pusha
nop
inc
add
adc
rcl
adc
test
nop
and
add
cwde
add
les
mov
ret
mov
inc
add
xor
test
xor
cmp
and
mov
loopne
push
push
push
push
add
add
nop
adc
add
or
or
sbb
add
inc
and
xor
inc
adc
sub
shl
fisub
sbb
mov
add
add
add
and
sbb
add
cmp
add
add
add
ror
or
adc
or
adc
xchg
les
mov
add
sub
dec
add
inc
or
dec
pusha
or
adc
mov
and
or
add
add
sbb
mov
ins
dec
add
and
js
add
and
or
or
inc
or
adc
pop
push
adc
adc
push
add
and
nop
mov
and
dec
inc
add
xor
inc
sub
movs
adc
or
add
xor
inc
sub
test
inc
add
push
nop
push
or
inc
adc
xchg
xor
adc
push
xchg
loopne
pusha
add
add
adc
sub
add
pushf
push
or
jno
add
and
adc
push
pop
mov
sub
addr16
and
iret
cmp
sub
push
jbe
sbb
jecxz
test
jmp
movs
sub
enter
(bad)
iret
data16
mov
arpl
ins
rol
and
mov
adc
(bad)
inc
mov
mov
aad
movs
popa
fisttp
cmps
aad
imul
cmp
(bad)
sub
fs
inc
movs
xchg
push
sub
add
cmp
bound
repnz
mov
adc
int3
add
jmp
sbb
in
adc
dec
not
(bad)
loopne
(bad)
fld
adc
inc
cmc
adc
in
adc
mov
push
int
aaa
adc
inc
cmc
pop
aad
cmc
adc
add
fwait
fwait
rcl
or
xor
aad
cmc
daa
out
mov
adc
inc
cmc
out
mov
mov
sbb
(bad)
inc
imul
mov
loop
inc
cmc
xchg
mov
daa
iret
mov
xlat
add
cmps
xchg
push
adc
hlt
adc
call
xchg
iret
out
(bad)
jnp
repnz
xchg
jmp
push
or
(bad)
adc
jg
imul
les
adc
inc
jg
dec
(bad)
fmul
(bad)
fild
fld
adc
lock
loope
int
int
xchg
repnz
mov
call
repnz
int
and
sub
loope
ds
ins
inc
movs
sub
inc
cmc
adc
or
add
icebp
mov
(bad)
mov
push
cmc
ds
mov
inc
repnz
mov
sub
inc
mov
push
xlat
retf
in
sub
mov
ror
adc
cmc
mov
jmp
inc
cmc
xchg
test
inc
call
icebp
or
xlat
inc
cmc
mov
popf
mov
mov
inc
cmc
mov
stos
std
adc
or
(bad)
inc
cmc
mov
cmp
movs
dec
repnz
dec
icebp
call
mov
dec
in
or
in
(bad)
sahf
jo
mov
or
std
les
fwait
cld
cld
popf
jmp
inc
push
xchg
fwait
xlat
jmp
rcr
daa
std
div
retf
fadd
les
(bad)
call
or
push
cmp
inc
int
xchg
sbb
and
push
mov
test
movs
popf
iret
sar
int3
out
daa
adc
xchg
dec
adc
xchg
xchg
push
int
inc
xchg
mov
pop
xchg
(bad)
inc
sbb
or
aad
cmc
lahf
mov
inc
cmc
adc
inc
adc
inc
cmc
adc
add
adc
inc
retf
xor
daa
lods
xchg
and
popa
hlt
loope
jmp
in
adc
adc
add
xchg
aad
or
inc
out
lahf
iret
mov
mov
inc
mov
pop
aam
imul
ja
data16
out
mov
push
sub
in
push
cmc
adc
sub
cmc
adc
xor
pop
sbb
fnstenv
xor
rcl
out
cmc
lods
push
or
ret
cli
adc
inc
cmc
lahf
int
jae
shl
scas
sahf
into
adc
add
inc
or
dec
cld
in
sub
inc
cmc
adc
shl
dec
mov
movs
sub
inc
cmc
adc
pop
mov
cmc
adc
mov
jecxz
inc
ins
vmovq
test
hlt
stos
mov
or
retf
add
jecxz
cmc
adc
test
push
(bad)
rcl
mov
push
dec
hlt
cld
maskmovq
not
jno
mov
mov
fsub
xor
rcl
jmp
mov
inc
cmc
xlat
push
xor
rcl
xor
rol
adc
sub
rcl
xlat
mov
movs
int
xchg
(bad)
retf
add
xor
dec
cld
add
push
xor
rol
xchg
jmp
call
(bad)
lds
cmc
adc
inc
cmc
xlat
push
sub
rcl
xor
aam
cmc
xchg
push
loope
mov
push
popf
iret
repnz
xor
add
push
add
imul
mov
clc
mov
rcl
iret
movs
adc
(bad)
jecxz
cmp
adc
or
fadd
mov
pusha
dec
imul
add
in
(bad)
add
out
bound
lahf
ror
addps
mov
lea
sub
push
in
ds
xchg
imul
dec
retf
loopne
popa
dec
icebp
xchg
int
push
mov
repz
popf
loope
push
hlt
push
cmc
popf
in
xor
(bad)
inc
imul
push
inc
cmc
adc
in
xchg
jmp
jmp
cdq
fiadd
pop
push
int3
loop
ins
mov
push
xchg
inc
jg
in
scas
clc
adc
xor
and
pop
xor
retf
adc
icebp
popf
int
js
sub
xor
and
cmp
stos
(bad)
and
(bad)
retf
add
jnp
cmc
adc
or
push
jle
daa
aaa
mov
or
in
(bad)
add
movs
lods
mov
(bad)
sbb
adc
and
mov
pop
cmp
sar
adc
sub
loop
cmp
adc
inc
cmc
adc
or
and
cld
in
rcpps
jb
aad
cmc
xlat
in
sub
(bad)
pop
retf
cmp
xchg
xor
or
call
gs
add
aam
jg
xlat
jo
daa
out
push
loop
inc
cmc
xchg
mov
cli
dec
in
in
fld
inc
mov
daa
cmps
mov
jmp
ins
(bad)
mov
aam
cmc
adc
mov
aad
or
cld
in
(bad)
inc
cmc
dec
xchg
sbb
cmc
mov
jg
adc
inc
ds
adc
or
fiadd
lds
inc
adc
push
movs
int
cmc
repz
not
loopne
dec
out
loopne
cmc
cmp
jmp
and
pop
es
add
sbb
sti
gs
adc
cmp
push
lea
pop
std
push
out
loop
call
popa
jno
jmp
aaa
xor
xor
adc
movs
push
aad
(bad)
adc
or
imul
adc
fst
dec
mov
aam
mov
cmps
iret
sub
or
jae
(bad)
int3
inc
gs
mov
shl
jmp
and
mov
outs
mov
mov
dec
lea
sub
inc
aam
and
fcmovbe
dec
repz
scas
ret
ret
scas
imul
mov
inc
and
sub
sub
nop
and
cmp
xchg
xor
cli
pop
or
xor
push
aad
js
lea
scas
mov
sub
hlt
cmp
add
add
add
jne
mov
mov
fadd
adc
pxor
cld
or
pop
shl
jo
xor
dec
(bad)
push
(bad)
std
pop
adc
neg
(bad)
inc
sti
mov
ins
push
ret
cmc
into
cmp
cmps
ins
pop
jle
mov
adc
push
nop
pop
aad
adc
pop
loope
xor
inc
push
je
int3
or
pop
movs
push
(bad)
scas
adc
dec
lock
aad
dec
int
int
cmp
mov
add
sub
mov
add
xchg
and
jmp
xchg
aad
sbb
dec
scas
gs
fwait
inc
stos
cmps
and
adc
retf
xchg
jo
and
mov
jp
pop
pop
cmps
aas
lahf
xor
lds
xchg
and
xor
hlt
pop
inc
and
or
pop
xlat
push
inc
int3
ss
pop
test
xchg
cld
loop
pop
push
(bad)
aad
mov
lods
cdq
mov
mov
adc
hlt
outs
mov
mov
nop
into
and
into
sbb
jmp
jge
mov
in
ins
inc
xor
std
push
out
pop
cmps
xchg
mov
aas
neg
add
mov
push
in
sbb
push
fsub
loope
dec
dec
push
aad
cmp
fs
scas
je
xor
popf
xchg
xchg
xor
shl
(bad)
aaa
push
loop
and
dec
(bad)
adc
and
aam
and
fistp
push
mov
lods
das
cmc
sub
lods
pop
add
cwde
(bad)
adc
retf
aad
xor
ss
inc
mov
repnz
retf
jl
jg
sbb
jne
movs
xchg
mov
pop
sub
jo
sbb
add
cmp
rol
lods
cmp
xlat
dec
mov
mov
in
adc
je
cwde
(bad)
cli
movs
or
jge
repz
jmp
jb
fldcw
into
inc
add
aad
and
fwait
ja
sub
mov
shl
jns
ja
pop
inc
mov
nop
xor
xchg
sub
mov
push
cmp
aad
xor
mov
xchg
nop
cmp
hlt
xlat
push
jb
push
das
in
adc
dec
dec
retf
outs
xor
pushf
push
sbb
dec
iret
in
mov
das
sbb
loop
dec
cmps
inc
cmp
mov
add
add
aas
sbb
jmp
mov
cmps
lods
xchg
sbb
add
xchg
adc
jns
ja
or
int3
and
mov
xchg
pushf
cmp
and
pop
sbb
ds
rcr
(bad)
mov
aad
jne
call
dec
mov
inc
sub
xor
clc
lea
adc
xchg
bound
jns
hlt
in
adc
fnsave
aad
jp
inc
cmp
(bad)
hlt
adc
add
sbb
sbb
call
lods
push
pushf
cmc
and
stc
ret
sbb
pop
aam
aam
jne
pop
rcl
push
adc
push
mov
mov
push
add
ret
out
mov
stos
add
ficomp
mov
aad
mov
ins
inc
inc
inc
push
pop
xchg
scas
mov
stos
hlt
out
mov
push
cmc
(bad)
fldenv
adc
mov
cli
cmc
mov
xor
xchg
adc
sbb
cmp
push
arpl
es
push
aad
xchg
(bad)
inc
scas
int3
loope
inc
nop
pop
push
or
out
jnp
js
xor
and
xor
ret
or
rcl
es
push
fldcw
test
jp
pop
(bad)
retf
pop
rol
fadd
shl
inc
cmp
mov
or
imul
shl
xchg
lea
aad
das
in
xor
mov
mov
xchg
ret
sti
dec
or
inc
jae
das
out
iret
or
adc
mov
sbb
cdq
and
shl
and
imul
or
adc
jecxz
and
aad
(bad)
mov
cmc
and
(bad)
add
jo
inc
stos
xchg
pop
lods
call
adc
les
rcl
jl
dec
hlt
mov
fadd
stc
jecxz
(bad)
mov
retf
mov
xchg
out
add
mov
xor
sar
cmps
xchg
cmp
push
sahf
dec
or
mov
outs
(bad)
jle
or
mov
mov
xor
mov
cmp
dec
std
mov
ins
jmp
ins
dec
scas
mov
inc
add
push
sbb
ret
xchg
adc
clc
mov
sbb
add
aad
adc
clc
aad
call
and
dec
mov
mov
inc
and
stc
push
(bad)
enter
cmc
ret
stos
jmp
cs
or
arpl
jb
test
mov
data16
dec
dec
mov
or
cmc
cmp
jno
pop
test
sub
scas
rol
iret
hlt
sbb
test
arpl
fcmovbe
push
inc
ret
loope
jl
or
dec
cmp
push
ds
out
call
sbb
jp
hlt
lods
out
jp
fstp
or
and
inc
mov
loopne
retf
icebp
outs
sub
dec
ins
imul
adc
or
jp
xor
retf
or
mov
call
jmp
aad
pop
icebp
in
inc
jo
xor
sbb
sub
cmc
cmp
test
adc
ins
cwde
out
icebp
ins
inc
adc
push
sahf
stc
cld
movs
adc
fld
aam
aad
jle
mov
adc
(bad)
adc
or
jnp
xor
sub
mov
or
hlt
leave
bound
inc
hlt
test
or
mov
hlt
js
fnstenv
or
sub
loopne
inc
fist
jmp
add
and
jb
or
not
mov
rol
push
jb
pop
movs
aad
lods
ret
out
popf
or
pusha
ss
sbb
cmp
(bad)
mov
aam
pop
nop
enter
pop
push
imul
ds
sti
outs
xor
adc
test
jmp
xchg
push
xor
pop
std
mov
push
or
fcmovbe
dec
sti
icebp
mov
pop
rcl
aas
push
add
int
das
adc
div
push
mov
imul
mov
adc
inc
jo
enter
in
hlt
ss
jg
fcom
sar
xchg
lods
push
inc
mov
repz
cmp
mov
inc
fstp
popf
fwait
jecxz
aad
mov
popf
push
aam
imul
mov
lods
xchg
add
sar
push
inc
mov
(bad)
fwait
inc
pop
out
clc
jp
loop
jmp
inc
inc
mov
sbb
jp
mov
fsub
mov
fcomp
pop
bound
pushf
(bad)
jne
ret
pop
fsubr
mov
mov
out
pushf
cli
inc
and
test
mov
pop
cmp
push
adc
movs
adc
or
out
into
cld
dec
cdq
xor
dec
push
xchg
rcl
jp
and
mov
inc
inc
push
xlat
cmp
cmp
inc
jmp
or
cdq
aad
adc
call
and
mov
sbb
mov
xchg
pop
cmovp
(bad)
xchg
mov
adc
mov
dec
shl
add
rcl
xlat
arpl
and
test
jne
xchg
popa
inc
shl
or
(bad)
ret
sbb
adc
sub
cld
cdq
in
dec
fwait
add
dec
inc
out
adc
dec
adc
mov
inc
jnp
pop
push
fnstenv
jns
cmps
jns
adc
dec
mov
and
cmp
cmp
fdivp
or
ds
aad
mov
popa
and
add
fcomip
aam
retf
test
sub
push
cmc
cmp
lahf
inc
cmp
sbb
pop
lods
repz
or
and
int3
pop
cmc
dec
and
cmp
outs
data16
stos
enter
adc
jle
(bad)
out
add
xor
in
loope
dec
das
jae
pop
sbb
jp
or
(bad)
fsub
pop
loope
xchg
hlt
jb
lahf
cs
pop
xor
jl
xor
xchg
and
xchg
scas
mov
scas
xchg
sahf
xchg
sbb
pop
sbb
xor
push
stos
dec
mov
aam
repz
mov
mov
xchg
sbb
jg
inc
out
jbe
(bad)
sahf
jne
mov
ja
imul
xlat
mov
scas
and
js
retf
add
adc
fidiv
and
jmp
push
jns
inc
aad
into
adc
and
inc
ret
pop
pop
(bad)
lea
cmp
adc
pop
gs
fsub
inc
aad
or
lea
mov
mov
test
test
inc
hlt
pop
in
arpl
mov
adc
outs
loopne
push
mov
adc
rcl
rcr
nop
adc
das
test
sbb
push
mov
sahf
(bad)
push
aad
dec
fwait
xor
scas
jne
stos
sbb
aad
mov
lahf
popa
nop
jns
inc
sbb
mov
das
sbb
out
mov
cmps
fdivr
pop
cmc
jns
cld
std
xor
icebp
and
out
mov
add
inc
in
(bad)
in
adc
xlat
leave
mov
jb
mov
jo
mov
ins
or
ja
aaa
in
jge
dec
fst
cmc
shr
test
repnz
fstp
fcomp
or
call
inc
out
add
adc
scas
or
sahf
cmp
scas
sbb
(bad)
jecxz
push
cmp
adc
xchg
lods
push
aad
call
rcr
cmp
mov
inc
ins
jmp
aam
scas
movs
xchg
hlt
cmp
ret
push
(bad)
bound
stc
mov
in
add
add
mov
popa
mov
outs
inc
mov
ret
fidiv
mov
out
mov
mov
adc
neg
sbb
std
repnz
cwde
mov
add
jnp
pop
test
sub
cmc
clc
inc
and
sti
dec
sub
adc
jp
jbe
je
outs
aad
jp
xchg
shr
add
or
and
das
mov
adc
dec
cmps
mov
inc
popa
call
in
gs
scas
hlt
and
aas
cdq
pop
mov
or
push
mov
(bad)
rcl
arpl
rcl
movs
fidiv
push
div
fcomp
mov
outs
ret
jo
jmp
mov
loope
jmp
in
inc
mov
mov
or
cmc
movs
jmp
(bad)
sti
adc
cmc
in
sub
out
repz
cdq
fistp
add
enter
mov
(bad)
jle
cmc
mov
add
xchg
loope
cmp
lods
mov
ds
push
mov
inc
out
inc
jmp
add
fbstp
adc
adc
loop
leave
mov
mov
int3
mov
and
adc
jp
and
add
les
xor
jecxz
jns
pop
clc
sbb
push
xchg
mov
leave
cmps
scas
cmp
idiv
in
push
add
xchg
ins
or
ins
fdivr
sbb
(bad)
leave
cmp
aam
xchg
or
cmp
sub
es
mov
hlt
lahf
ins
jns
dec
aaa
bound
pop
adc
cmp
aad
push
aam
xchg
int
xchg
inc
or
sar
das
lds
cwde
jno
stos
mov
imul
in
dec
hlt
adc
movs
fbld
aad
push
inc
rol
(bad)
int
aad
pop
xacquire
adc
jmp
aad
sbb
mov
stos
inc
enter
jmp
sbb
or
or
adc
dec
dec
xchg
sub
daa
jmp
dec
jg
dec
cmps
idiv
pushf
cmp
add
sbb
(bad)
xor
shl
push
cmps
mov
mov
mov
mov
push
repz
aad
arpl
adc
outs
inc
js
jnp
dec
push
gs
icebp
sub
bound
pusha
xchg
push
jmp
jb
arpl
in
pushf
aam
mov
pop
loopne
rcl
cld
mov
add
sub
inc
pusha
(bad)
xor
lds
nop
sbb
leave
imul
push
xchg
cmp
jle
push
mov
ins
aam
cwde
sub
(bad)
push
mov
(bad)
(bad)
cs
pop
repz
imul
jmp
sub
inc
fwait
aad
aad
sbb
push
push
cmp
mov
cmp
(bad)
add
mov
scas
pop
mov
pop
add
lods
outs
aad
mov
mov
xchg
aam
cwde
je
xor
scas
and
xor
(bad)
cld
data16
sub
cmovle
inc
pop
xchg
sub
in
ret
fcomip
or
xor
mov
push
retf
out
cmc
xor
(bad)
shr
test
or
jnp
cmp
cmc
test
cmc
inc
pop
dec
fnsave
rol
adc
mov
xchg
jge
xchg
in
pop
pop
xchg
(bad)
(bad)
ins
adc
movs
xor
mov
lds
mov
mov
or
hlt
in
ja
cmp
or
dec
scas
rcl
add
scas
sahf
fnstsw
sbb
hlt
fnstsw
stos
mov
inc
rcr
stos
push
xchg
xor
jge
mov
out
aad
or
ret
pushf
out
test
(bad)
fnsave
pop
jne
sub
mov
push
je
sar
hlt
hlt
nop
cmp
stos
pop
(bad)
ret
push
loop
or
jns
or
push
sbb
je
inc
es
call
gs
pop
test
jns
bound
jae
jmp
cmp
aaa
sub
icebp
cmp
sub
jmp
cmp
cmp
aad
pop
out
int3
jge
pop
push
scas
sub
and
loop
push
(bad)
xchg
push
or
inc
sar
into
pop
dec
test
daa
inc
sbb
jae
adc
cmp
icebp
(bad)
cmc
call
cli
push
aaa
and
add
jecxz
outs
es
retf
mov
gs
inc
cld
adc
loope
popa
aad
pop
es
sbb
push
inc
pop
mov
test
shr
sbb
test
pop
(bad)
adc
mov
and
ficom
popa
push
jecxz
rol
pop
pop
(bad)
jmp
xchg
repz
mov
cmc
call
xchg
das
push
loopne
inc
cwde
xor
in
pop
cmps
push
sbb
sar
movs
cmps
das
repnz
sbb
inc
or
inc
sbb
scas
hlt
jl
sar
fmul
jne
jbe
add
mov
je
mov
call
shr
add
out
adc
cmp
stos
sub
ds
pop
inc
jbe
jb
mov
ret
jns
sub
xchg
sbb
call
jb
stos
add
aad
dec
fsubrp
fdivr
xchg
lock
add
es
mov
sbb
int3
mov
push
sahf
mov
jmp
lods
xor
test
mov
cmps
ins
les
adc
(bad)
cmp
aad
jmp
in
adc
sbb
das
cmp
xor
retf
jecxz
hlt
push
int
dec
mov
add
mov
ins
inc
push
mov
xor
outs
hlt
(bad)
mov
test
push
loope
adc
retf
dec
pop
fcomp
aad
xchg
in
jnp
add
xor
jge
cmp
pop
push
cwde
call
pop
popa
xchg
sub
inc
and
lea
adc
and
pop
das
sbb
test
adc
xor
jmp
sar
xor
push
sub
pop
mov
js
mov
adc
je
adc
out
cmc
jo
fbld
or
inc
aam
push
xchg
mul
cmps
pmaddwd
or
lea
stc
pop
(bad)
movs
aad
and
jp
aad
jge
movs
pop
mov
hlt
xchg
inc
mov
push
cmps
iret
mov
sub
and
cld
ror
addr16
inc
adc
push
int
sub
mov
inc
clc
jbe
scas
mov
gs
hlt
xor
fwait
adc
(bad)
fnstsw
jo
cdq
call
inc
pop
adc
jbe
outs
cmp
(bad)
and
xlat
mov
jne
cmps
leave
push
fbld
and
popa
in
push
xchg
aam
push
push
js
inc
mov
ja
aad
loop
mov
in
xor
xchg
mov
mov
mov
cvtps2pi
lahf
cmc
jno
ds
lock
scas
int3
sbb
and
iret
inc
call
jo
nop
add
aad
push
mov
loope
adc
jmp
sar
out
add
fld
inc
sub
fsub
daa
mov
inc
pop
out
movs
aad
mov
rol
mov
sub
mov
rcr
iret
inc
and
jle
mov
(bad)
movs
xor
sar
xor
mov
inc
ds
mov
aad
fs
xchg
sbb
cmp
add
cld
arpl
dec
call
lods
rcr
dec
pop
push
js
nop
mov
jmp
jp
mov
jg
inc
retf
cmp
mov
sub
cmp
das
cmp
and
shl
mov
jle
adc
xor
mov
jns
mul
pushf
xor
movs
cmp
jo
xchg
rcl
shl
aad
dec
pop
adc
icebp
pop
lahf
dec
ret
xchg
and
jbe
fs
sar
daa
pop
hlt
fistp
shr
loop
adc
adc
into
inc
and
xchg
mov
adc
cdq
or
sbb
and
call
test
dec
xor
fistp
add
mov
rol
icebp
aas
pop
clc
shl
push
push
lods
mov
jecxz
arpl
aad
push
jbe
cmp
dec
ror
call
or
mov
add
retf
frstor
in
je
in
sub
xchg
aaa
push
sbb
cmp
leave
adc
inc
mov
mov
(bad)
bound
mov
ins
mov
and
cmp
mov
(bad)
test
jmp
mov
(bad)
sub
jbe
aaa
mov
out
sti
nop
adc
out
push
adc
jmp
xor
adc
xor
cmp
cld
shl
stc
add
or
inc
enter
sahf
fdivr
and
ret
cs
aad
inc
imul
xchg
test
jmp
aad
je
jae
pop
fld
sbb
inc
mov
jns
lods
cmp
dec
and
rcl
mov
xchg
popf
or
fdiv
push
ror
push
xor
xchg
dec
xchg
ret
fild
and
inc
sahf
inc
inc
push
or
and
(bad)
stc
xchg
pop
fmul
adc
xchg
test
mov
stos
lock
ins
inc
dec
adc
out
sub
movs
iret
pop
movs
movs
mov
xor
fcmovb
out
adc
cmp
sbb
pop
aad
pop
(bad)
hlt
mov
outs
fimul
das
fwait
adc
inc
out
test
arpl
push
in
repnz
cmc
ret
outs
mov
or
dec
hlt
xor
push
sub
inc
inc
jle
jecxz
retf
shl
popa
push
clc
sub
out
inc
in
test
adc
add
jg
arpl
mov
mov
lahf
add
call
sbb
jecxz
mov
adc
xchg
and
inc
test
sar
je
addr16
sbb
or
imul
mov
xchg
xchg
or
(bad)
test
pop
adc
fwait
jae
sar
mov
icebp
in
dec
adc
xchg
jmp
stos
ror
out
or
aad
dec
xchg
sahf
inc
add
sbb
jl
pusha
popf
xchg
hlt
add
sub
and
adc
mov
cmc
dec
add
loopne
retf
and
xchg
xchg
enter
aad
fisttp
or
adc
lods
mov
movs
mov
push
cmp
arpl
adc
sbb
add
jae
test
movaps
lock
cwde
inc
push
rcl
cmc
cmp
push
add
cmp
inc
dec
mov
pop
dec
sbb
mov
add
xor
loopne
ds
add
(bad)
dec
push
inc
ins
cmp
cmps
xchg
xchg
out
push
(bad)
fist
pop
jns
in
xor
sahf
loope
in
mov
retf
inc
sub
pop
loopne
and
sbb
hlt
stos
push
cmps
adc
clc
nop
xor
mov
fistp
leave
rol
inc
xor
sbb
mov
sub
inc
pusha
jnp
sub
ficomp
cwde
fst
call
xchg
inc
(bad)
pop
xchg
fimul
sbb
dec
sahf
push
retf
jns
cmps
xchg
lahf
sub
repnz
and
(bad)
xor
fadd
fs
std
mov
test
not
adc
sbb
sub
dec
adc
push
jmp
cmp
and
and
mov
jp
xor
mov
cmps
in
addr16
ftst
mov
inc
icebp
mov
add
test
out
rol
loop
stos
xchg
aad
mov
push
enter
mov
adc
mov
scas
inc
aad
test
mov
xor
mov
dec
adc
repz
sub
inc
aaa
jns
adc
mov
cmp
jnp
int
mov
into
sti
mov
shl
gs
jmp
inc
and
xor
jnp
cmps
inc
rcr
add
loope
hlt
aas
mov
adc
cmp
add
push
in
inc
ss
pop
mov
pop
and
hlt
add
repz
test
out
pop
sbb
sar
mov
pop
retf
xor
popf
mov
cmps
inc
les
lods
data16
lahf
ret
cwde
adc
cdq
push
rol
mov
add
xchg
call
dec
push
aad
int3
xchg
iret
push
outs
in
inc
fimul
fsubr
loope
(bad)
xchg
hlt
add
pop
jecxz
push
mov
xchg
outs
hlt
hlt
out
nop
enter
add
adc
xchg
dec
loopne
xor
adc
sbb
out
and
mov
adc
into
mov
sub
xor
retf
jge
rol
repz
cmc
fiadd
or
cmc
leave
dec
xchg
adc
adc
inc
sbb
popa
inc
fldcw
div
rcl
inc
mov
pop
cmp
hlt
pusha
sub
popa
in
jbe
adc
pop
inc
adc
loop
sahf
push
xor
inc
aad
int3
cmp
dec
imul
repnz
aad
or
cmc
out
dec
jge
inc
sbb
gs
cs
sub
retf
aad
or
or
push
ss
inc
or
jmp
cmp
pop
stos
sbb
hlt
cmp
dec
or
ss
jns
mov
jp
pushf
jle
push
or
int
jb
fcmovu
cmp
ins
sub
pop
xor
inc
xlat
push
inc
data16
fdiv
push
in
pop
clc
mov
pusha
sub
iret
or
dec
mov
push
mov
pop
pop
or
or
sbb
mov
sbb
into
push
mov
div
mov
jb
aad
gs
aad
xchg
or
inc
mov
shl
pop
bnd
mov
out
inc
add
lods
dec
jmp
les
adc
sub
cmp
mov
or
add
xchg
xchg
inc
cmp
scas
movs
hlt
mov
enter
mov
dec
sbb
mov
jle
jne
sub
pop
loop
fdiv
push
mov
ror
mov
push
jge
mov
and
inc
aas
fsubr
cld
hlt
push
jmp
mov
pop
scas
repz
xchg
loopne
cs
xchg
pop
mov
out
fidiv
pop
(bad)
stc
and
rcr
call
inc
pslld
xlat
ja
fsub
xchg
push
mov
mov
pop
rcl
std
cli
mov
adc
inc
dec
(bad)
push
xchg
mov
sbb
inc
(bad)
iret
mov
out
adc
xchg
dec
adc
mov
add
inc
pop
adc
div
sbb
mov
adc
jns
pop
adc
lods
shl
mov
aas
fwait
cmps
xor
test
adc
sub
rcl
lock
xchg
cmc
cmps
shr
out
jl
sbb
or
movs
adc
adc
xchg
cmp
jle
xor
aam
ret
xor
sti
xchg
fcmovu
jecxz
sahf
jmp
dec
imul
ffree
xor
pop
sbb
jns
lock
adc
nop
dec
pop
or
jns
hlt
pop
and
sbb
pop
dec
adc
shr
inc
and
or
sub
pop
dec
jnp
icebp
add
rcl
xor
scas
in
adc
sbb
sub
aad
or
sub
inc
sahf
daa
cmp
cdq
hlt
(bad)
mov
fcmovb
sub
mov
jle
rcl
mov
frstor
push
das
jge
(bad)
adc
adc
gs
jne
ins
hlt
inc
scas
je
aas
cmp
inc
ds
rcl
jmp
pop
add
xchg
add
pop
ss
outs
mov
pop
call
fbstp
xor
aad
std
aad
int
pop
rcr
inc
adc
mov
cmps
sub
cld
push
adc
(bad)
mov
inc
xor
mov
mov
push
mov
fwait
xchg
push
inc
mov
inc
xchg
dec
jg
mov
std
adc
into
out
cdq
push
pop
dec
mov
(bad)
je
(bad)
fadd
pop
pop
sub
stos
mov
loopne
pop
pop
add
inc
add
push
aam
jb
pushf
test
sti
mov
adc
xor
add
leave
fmul
mov
cli
je
shl
lock
push
add
movs
loopne
xor
mov
es
cs
push
out
jle
inc
outs
inc
dec
adc
sti
push
hlt
repz
push
adc
push
pop
or
loop
mov
mov
stos
jle
aad
es
pop
repnz
nop
inc
mov
or
add
pop
mov
call
rcr
mov
sbb
push
push
pop
into
and
scas
aad
dec
cs
icebp
inc
mov
mov
pop
mov
sub
hlt
push
add
jp
cdq
pop
inc
adc
je
cdq
xchg
mov
fs
hlt
add
inc
add
add
or
lahf
xchg
push
mov
push
and
fld
inc
inc
std
cmp
cmp
iret
dec
scas
jne
push
adc
(bad)
gs
into
dec
outs
pop
icebp
push
sar
push
mov
stos
jle
mov
cwde
and
mov
sub
(bad)
mov
cmp
jge
(bad)
hlt
movs
push
hlt
xchg
aas
mov
xchg
shl
mov
scas
hlt
inc
or
pop
mov
or
xlat
aas
mov
adc
dec
hlt
dec
cmp
mov
dec
ret
mov
lds
push
aas
xor
sbb
cmp
inc
xchg
push
repnz
jns
mov
mov
imul
or
xlat
aam
mov
je
pop
(bad)
adc
mov
ins
sub
mov
sub
lds
pop
xchg
adc
mov
(bad)
jb
adc
xchg
imul
in
dec
je
xor
mov
cdq
aaa
mov
mov
lea
jl
in
sbb
pop
nop
repz
inc
pop
les
inc
cmps
xchg
test
adc
dec
pop
cmc
shl
dec
add
in
mov
or
inc
jb
imul
sar
ja
rol
out
(bad)
dec
data16
push
adc
int
fyl2x
jle
add
enter
repz
daa
outs
in
hlt
jle
mov
push
adc
adc
sub
push
push
out
cmp
push
lea
and
jmp
test
pop
xchg
loop
test
pop
push
jg
jecxz
hlt
(bad)
fcomp
stos
jns
out
cli
push
push
sti
cmps
jnp
inc
(bad)
jns
rcl
loope
sbb
in
inc
aaa
inc
and
aad
dec
mov
popf
fwait
inc
push
cs
(bad)
push
icebp
(bad)
les
icebp
daa
cmp
out
repz
into
pop
call
rcl
mov
mov
jne
stos
cli
pop
aad
xchg
out
and
inc
mov
inc
mov
shr
hlt
cmps
lahf
addr16
inc
repz
jg
mov
push
je
arpl
loop
inc
fs
or
jecxz
(bad)
fnsave
add
jno
icebp
fldenv
div
or
inc
shl
cli
and
add
jo
outs
jne
xchg
jo
mov
sbb
sub
adc
sub
rdmsr
inc
inc
ja
jae
test
cmps
loop
inc
hlt
(bad)
ds
test
mov
das
dec
aam
hlt
adc
in
sub
in
fxch
pop
arpl
std
cs
push
hlt
inc
jae
push
xchg
je
push
in
mov
xor
shr
into
out
in
imul
push
out
cmp
adc
push
clc
fmul
and
(bad)
test
ja
ret
xchg
repz
inc
es
jbe
inc
fiadd
xor
ja
push
jae
push
sbb
dec
test
outs
stc
xchg
cmp
out
ror
push
lods
jns
retf
mov
loop
mov
in
(bad)
hlt
jmp
pop
fdivr
(bad)
jo
popf
cmp
mov
add
mul
out
or
mov
sbb
hlt
shl
fmul
ds
jno
inc
pop
lods
xchg
hlt
dec
mov
sahf
mov
mov
adc
cmps
push
sub
mov
call
add
in
gs
add
mov
lock
fbstp
ins
pop
out
clc
cwde
add
or
icebp
aad
inc
shl
cmp
inc
lods
push
push
and
and
(bad)
pop
lahf
jle
stos
hlt
push
push
sbb
pop
adc
mov
cmc
rcr
out
adc
cmps
sub
loope
jmp
cmp
or
adc
ds
fidivr
pop
mov
hlt
movs
add
hlt
pop
arpl
add
push
in
jne
scas
sbb
cld
hlt
aaa
adc
cmp
mov
ror
ja
cmp
add
xor
out
mov
shl
hlt
loop
rol
jmp
cmc
sub
hlt
mov
cli
xor
push
cmp
out
or
push
xor
mov
or
leave
mov
jecxz
inc
and
in
mov
or
mov
dec
xor
inc
or
push
ins
pop
adc
jmp
jge
arpl
sub
push
inc
ins
hlt
mov
pop
and
sahf
xchg
fnstcw
fild
jmp
dec
mov
(bad)
jne
xor
xor
dec
mov
push
arpl
dec
sar
arpl
nop
push
mov
imul
push
mov
inc
mov
and
ja
out
mov
sbb
or
xchg
and
mov
push
jmp
fmul
push
jne
push
cmp
sub
push
movs
loope
pop
adc
dec
jge
adc
hlt
(bad)
retf
mov
push
cli
mov
in
cmc
push
mov
enter
mov
pop
in
pop
stc
adc
sar
jge
dec
hlt
(bad)
dec
and
fsubr
cmp
stos
jmp
inc
mov
dec
adc
mov
pusha
retf
ret
je
mov
inc
pop
enter
mov
mov
sub
ret
adc
nop
or
pop
popf
cmp
adc
int
in
cli
adc
xchg
(bad)
pushf
aam
int3
xlat
xor
test
pmaxub
add
cli
mov
lds
mov
sub
sbb
inc
xchg
inc
fst
loop
popa
stos
std
iret
popf
push
inc
push
(bad)
xor
xchg
add
push
fs
sub
cmp
loope
push
dec
or
retf
(bad)
xchg
inc
jae
aaa
pop
adc
mov
(bad)
aad
lods
jo
mov
jne
loop
dec
mov
sub
imul
pop
jl
push
jmp
adc
inc
(bad)
sub
test
mov
enter
inc
in
mov
inc
call
clc
nop
mov
cmc
scas
xor
jl
jecxz
rcl
out
jns
sub
cld
mov
aad
movs
daa
leave
and
inc
dec
sbb
or
push
jle
retf
adc
xchg
adc
or
add
(bad)
mov
add
repnz
inc
in
cmp
fisttp
not
xchg
and
jne
jecxz
jmp
shl
rcr
pushf
push
sub
fnsave
sbb
cmc
sbb
mov
mov
pop
clc
and
dec
out
sub
mov
in
mov
in
out
inc
pushf
jne
xor
icebp
outs
lods
sahf
rcl
mov
test
sbb
inc
(bad)
mov
sub
fidiv
cwde
jbe
xchg
xchg
inc
(bad)
sub
and
mov
push
out
ins
pop
and
dec
rcr
mov
mov
xchg
mov
lea
mov
cmp
mov
pop
inc
dec
aas
sbb
or
dec
mov
inc
cmp
cmp
mov
sub
push
push
push
mov
mov
mov
pop
mov
pop
hlt
jmp
pop
lds
adc
cmp
fild
enter
cmp
ret
cmp
cwde
dec
arpl
mov
pop
push
or
hlt
test
pop
je
cmp
ret
xor
adc
mov
xor
jp
ucomiss
xor
ins
call
cmp
aaa
movs
push
(bad)
pop
mov
mov
xor
mov
(bad)
sbb
loop
iret
xchg
in
dec
jg
inc
sahf
scas
mov
repz
sub
data16
cmc
add
inc
das
add
lods
ror
daa
ficomp
hlt
arpl
dec
push
cmp
inc
add
and
imul
dec
arpl
sub
adc
and
aad
mov
push
mov
push
loopne
aad
mov
rcl
and
in
ja
(bad)
xchg
cmp
push
imul
push
jo
into
adc
xchg
lods
rcl
mov
lea
je
lods
stos
addr16
scas
adc
adc
test
and
sub
idiv
jo
add
sbb
dec
xor
fld
jnp
adc
mov
aad
out
push
pop
xor
dec
inc
sbb
jmp
push
adc
gs
pop
inc
jg
fidiv
adc
loop
sbb
ret
ret
int3
outs
enter
mov
cs
je
dec
fsub
push
je
inc
xor
sbb
and
ins
icebp
sbb
ret
daa
inc
and
lods
loopne
out
popf
cmp
stos
add
mov
and
xchg
push
mov
push
push
inc
(bad)
(bad)
sbb
cs
inc
cmp
cli
push
fstp
loopne
rcr
pusha
pusha
movs
push
push
adc
test
ret
push
mov
add
and
xchg
pop
enter
and
fiadd
jno
or
xor
push
pop
dec
hlt
outs
cmp
add
jl
mov
cdq
stos
push
pop
dec
sar
pop
out
dec
je
daa
jns
call
repnz
stos
xchg
(bad)
dec
pop
hlt
pusha
dec
mov
fwait
dec
inc
push
fs
fisub
stos
mov
out
push
sub
(bad)
sti
movs
pusha
pop
jnp
xor
mov
push
jb
clc
out
int3
jg
bnd
inc
sbb
ficom
fisub
cmc
sub
inc
mov
mov
inc
out
add
dec
call
xor
adc
fwait
retf
mov
vandnpd
cmp
xor
daa
cwde
pop
jle
js
aas
xor
sbb
inc
jmp
jmp
xor
xor
lock
xor
outs
mov
sub
lods
cmps
mov
or
sub
xchg
adc
ret
dec
retf
dec
xchg
inc
push
adc
pop
jo
push
jmp
cli
or
ja
rcl
scas
cld
clc
mov
aad
adc
adc
(bad)
cmp
aam
iret
test
inc
cmp
mov
push
mov
aad
out
addr16
jno
outs
or
push
mov
sahf
jbe
sbb
in
inc
jae
in
pop
xor
adc
fcom
hlt
push
cmp
inc
inc
cmc
js
neg
les
hlt
sub
out
fcmovb
cld
xlat
push
inc
stc
adc
sbb
push
add
xchg
ret
add
loope
mov
jae
cwde
jle
retf
aam
mov
xor
aas
fld
(bad)
adc
add
pop
cmp
mov
cmp
sbb
out
push
xor
cmps
adc
pop
adc
fdiv
pop
fdivp
mov
dec
add
push
mov
das
mov
pop
sub
sub
(bad)
xchg
aad
and
inc
mov
sbb
push
dec
xor
jp
mov
and
and
daa
fs
push
sbb
mov
into
xor
cmp
mov
pop
push
cmps
jne
cmp
sub
sub
jl
push
loope
sahf
pop
xchg
adc
push
xchg
stc
sub
js
push
ds
xchg
cmc
call
inc
out
jbe
std
mul
push
sbb
sbb
sbb
test
inc
ret
dec
mov
es
and
or
lahf
icebp
cs
in
mov
test
jbe
mov
jmp
mov
add
hlt
icebp
les
adc
pop
push
sbb
movs
call
xchg
fnop
fs
aas
fild
outs
lahf
mov
fist
mov
inc
inc
hlt
cs
mov
or
test
ja
je
(bad)
or
out
jmp
ds
movs
test
and
dec
jmp
inc
adc
push
in
sub
dec
out
or
mov
lahf
jp
or
or
sub
cmp
cmps
stos
dec
jnp
(bad)
loopne
inc
clc
movs
dec
cmovae
or
inc
sets
sub
fxch
xor
mov
adc
hlt
sahf
add
fld
cs
mov
mov
hlt
sti
push
cmps
mov
xor
inc
adc
arpl
mov
ror
inc
sub
mov
mov
movs
push
add
mov
or
ins
ret
into
xor
inc
aad
aam
dec
mov
clc
lods
xor
xor
and
fimul
jo
movs
(bad)
movs
push
jb
lods
repz
mov
(bad)
sbb
push
adc
out
std
jb
sbb
pusha
pop
hlt
js
xor
mov
push
and
fdiv
fwait
sbb
push
inc
imul
cs
mov
push
sub
into
loop
scas
movs
je
xlat
mul
in
or
call
or
popw
ss
pop
sar
fnsave
cld
test
stos
xchg
and
jnp
hlt
lock
aas
cmp
cmc
aaa
test
sub
sbb
cld
xchg
or
lds
adc
retf
push
rcl
sub
cmp
addr16
dec
inc
sbb
mov
adc
sub
cmc
mov
xchg
ja
jge
add
int3
sti
push
popf
call
test
jmp
punpckhdq
pop
stc
jl
jbe
xlat
hlt
adc
inc
ja
retf
adc
arpl
not
jnp
sahf
xchg
cmps
adc
jge
enter
lock
lods
aad
xchg
inc
mov
sub
and
lea
(bad)
jg
xchg
mov
or
stc
sub
sti
mov
shl
bound
addr16
adc
jae
push
sub
inc
mov
cmps
jle
or
call
enter
adc
sub
(bad)
aad
nop
and
in
adc
imul
pusha
dec
or
add
nop
push
das
test
dec
shl
(bad)
push
dec
mov
hlt
mov
sbb
retf
adc
push
outs
or
sbb
ror
jnp
add
xchg
xor
enter
adc
cmp
cmp
xchg
imul
xor
pop
mov
bound
pop
jge
inc
adc
cmp
call
dec
sub
popf
jns
push
pop
xor
aad
xchg
out
cmp
and
push
or
aad
(bad)
test
inc
inc
pop
mov
lds
mov
pop
pop
jb
out
adc
add
mov
cmc
mov
repnz
push
aad
sar
jmp
mov
push
es
sbb
jae
xchg
push
int3
jmp
ret
cs
hlt
adc
test
ja
mov
outs
loop
cs
hlt
push
push
(bad)
fcom
out
imul
aad
sbb
lds
inc
adc
mov
aad
add
mov
dec
imul
pop
aad
mov
push
aad
or
cmps
loop
mov
movs
bound
mov
jae
or
inc
xchg
jle
or
mov
jno
mov
dec
das
jae
(bad)
(bad)
sbb
or
push
hlt
test
push
xchg
jmp
loope
sub
pusha
shl
pusha
jmp
jge
lea
fcomp
jmp
repnz
xchg
aam
inc
inc
pop
sbb
mov
mov
ja
dec
and
repnz
adc
or
pusha
loopne
cwde
std
fwait
hlt
sbb
inc
mov
lods
xchg
add
or
adc
cwde
mov
sbb
fcmovbe
outs
jg
inc
ret
dec
mov
xchg
imul
inc
xchg
xchg
clc
loope
fisttp
jp
aad
dec
scas
retf
pop
inc
inc
mov
push
jle
fst
pop
mov
(bad)
loope
jp
retf
je
aad
xchg
leave
test
push
xchg
inc
dec
(bad)
or
xchg
inc
sbb
jb
push
movs
je
mov
jns
out
int
pop
xor
inc
lock
mov
adc
outs
repz
je
push
dec
outs
aam
mov
(bad)
repz
fwait
xchg
dec
xchg
dec
cmps
les
js
jecxz
int
shl
xchg
pop
or
inc
repz
jns
or
jns
adc
and
loopne
xor
nop
aad
popf
or
xchg
add
add
rcl
push
sbb
xor
xlat
js
inc
cmc
adc
gs
xor
cmp
xor
fisttp
push
push
push
dec
(bad)
das
ss
mov
cs
aad
xchg
xchg
push
jns
gs
inc
fidivr
mov
and
pop
leave
fnstsw
mov
push
out
and
fidivr
mov
imul
in
add
jl
addr16
std
push
push
rcl
ret
in
sahf
leave
mov
mov
dec
aas
in
add
adc
bound
pop
cmp
ret
mov
ins
inc
inc
xor
cmps
shl
lea
and
adc
in
dec
aad
out
in
jb
adc
push
xchg
pop
inc
jl
ja
aas
cld
xor
sar
push
or
ror
mov
(bad)
stc
and
and
inc
loope
xchg
mov
hlt
out
inc
ds
mov
not
sbb
mov
aad
inc
dec
out
sar
rol
dec
shl
sub
xchg
hlt
out
ror
dec
push
repnz
jmp
lods
lock
inc
jg
stos
hlt
cmps
sbb
push
shr
xchg
mov
aad
in
add
inc
mov
ror
fcmove
mov
xor
xlat
lock
adc
mov
mov
jle
xchg
jge
xchg
adc
sbb
hlt
ins
shl
push
and
mov
sar
xchg
test
xchg
fsub
aad
push
push
mov
add
mov
dec
cmc
or
jp
cdq
adc
adc
scas
je
cld
add
and
mov
add
mov
popf
lock
ds
push
mov
inc
dec
jb
mov
cmp
call
icebp
and
inc
jne
retf
adc
ret
cmp
add
mov
int3
out
cld
mov
pusha
aad
cli
stos
and
push
adc
pop
int
jle
pop
aad
fidivr
daa
ds
xor
cmp
fldcw
xor
ins
jge
add
xor
push
push
push
outs
cmp
(bad)
jb
icebp
aad
retf
aad
out
inc
inc
nop
sar
retf
hlt
mov
mov
stos
adc
imul
retf
das
jp
out
stos
bnd
(bad)
xchg
pop
cmp
pop
into
add
and
cmps
and
jae
push
cmp
aam
loopne
retf
xchg
mov
imul
and
sub
dec
and
fst
mov
mov
push
jge
dec
lods
lahf
mov
jno
xchg
sub
cli
or
pop
popa
mov
(bad)
ins
pop
inc
mov
mov
fst
ret
add
aas
pop
pushf
cwde
adc
(bad)
add
mov
fst
mov
xchg
dec
xor
push
es
dec
call
sahf
arpl
mov
inc
xor
call
sar
dec
cmp
sahf
ins
cmp
mov
ret
mov
push
cmps
shl
add
aaa
test
fwait
fwait
inc
adc
xchg
mov
add
jecxz
inc
call
fwait
shr
jae
sub
aad
call
rcl
push
fcom
hlt
push
push
stos
sbb
int3
lock
lods
or
and
xor
mov
sbb
fs
or
(bad)
repz
(bad)
adc
scas
jecxz
jl
dec
dec
sub
hlt
popa
mov
mov
adc
inc
adc
outs
inc
xchg
gs
mov
inc
and
push
retf
push
cmc
jg
fcom
xor
jo
push
loopne
and
jl
sub
std
jbe
dec
or
fnstcw
push
cmp
fwait
jns
out
xor
ss
push
and
pop
lods
ror
jge
aad
jp
mov
inc
pushf
sbb
push
ss
hlt
sub
fwait
jbe
xor
adc
data16
fwait
cmp
inc
test
mov
push
and
scas
cmp
xchg
pop
test
cmp
push
pop
(bad)
aas
out
imul
iret
test
add
xlat
aam
mov
mov
gs
mov
or
aad
inc
mov
push
pop
mov
lock
shl
ss
xchg
loope
cmc
clc
cmps
xor
inc
mov
mov
adc
jmp
xchg
adc
mov
ss
aas
test
(bad)
mov
gs
xchg
dec
movs
push
mov
das
mov
fstp
shl
pop
cdq
mov
xor
movs
adc
and
sbb
arpl
iret
std
repz
mov
jne
rol
aaa
popf
icebp
gs
jno
stc
(bad)
leave
mov
inc
ins
mov
ror
(bad)
dec
pop
(bad)
jmp
scas
xor
and
adc
movs
mov
call
adc
shl
cs
popf
and
pop
sub
aad
mov
aas
xor
xor
push
inc
outs
pop
aad
out
stos
add
retf
fisttp
xor
fdivr
out
psubsw
fidivr
push
jl
push
mov
aad
inc
shl
mov
push
pop
dec
mov
data16
cwde
jl
push
xchg
mov
dec
pop
sar
fcomp
fld
pop
adc
add
arpl
cmc
mov
outs
mov
stos
popa
repnz
xor
jbe
nop
pushf
das
jp
jbe
out
inc
(bad)
push
call
cmp
retf
xor
stc
popa
push
cmc
lods
imul
add
mov
movs
xor
out
jecxz
inc
outs
sub
aam
mov
jae
adc
in
dec
sti
cwde
lds
add
xchg
and
push
and
mov
ins
mov
mov
int
cld
into
adc
pop
cmc
ds
push
push
cld
(bad)
fsub
mov
aad
pop
adc
stos
inc
ds
xchg
xchg
retf
sbb
jnp
mov
sub
jae
outs
adc
test
adc
add
mov
adc
xchg
push
cmp
in
inc
xor
adc
inc
sub
out
push
inc
repnz
mov
hlt
call
add
push
jb
xchg
(bad)
out
loop
hlt
in
jno
(bad)
inc
mov
mov
(bad)
xor
imul
inc
aad
jle
sar
xor
mov
(bad)
aas
adc
xor
xchg
lock
loopne
jecxz
retf
(bad)
mov
sub
aad
mov
gs
xor
pop
or
mov
into
and
sub
mov
cmp
sbb
push
cs
jnp
jg
test
and
inc
mov
inc
movs
ins
retf
(bad)
leave
xlat
adc
inc
inc
add
pop
stc
shl
(bad)
imul
(bad)
idiv
cmp
xor
xchg
lock
popf
outs
ffree
jb
out
es
out
jb
inc
aam
shl
xor
cs
cmp
cld
ss
call
aaa
xchg
nop
xor
xor
out
push
push
(bad)
sbb
sahf
out
ins
inc
and
mov
retf
loopne
xchg
lods
mov
sub
movs
repnz
lods
mov
adc
adc
xor
adc
popa
rcl
fimul
in
call
outs
add
ja
push
hlt
add
into
ret
or
shl
or
mov
sub
fwait
and
(bad)
aam
sub
rol
push
cmp
xchg
test
sti
stc
shl
aas
inc
adc
pop
cmp
push
or
inc
fs
cmp
cmc
sbb
sbb
xlat
scas
pop
xor
clc
and
scas
cmp
mov
pop
inc
aam
enter
rol
hlt
add
aaa
(bad)
ds
or
pop
sub
xor
(bad)
aad
sbb
sub
adc
xor
call
sahf
jae
aas
adc
xchg
mov
jnp
sub
call
inc
mov
les
hlt
retf
add
and
daa
bound
shr
pop
js
fdiv
(bad)
hlt
stc
xchg
dec
mov
adc
pop
(bad)
aad
cs
cs
lods
aas
lods
push
mov
(bad)
push
mov
lock
inc
test
call
and
xor
sub
dec
add
cmp
inc
out
add
mov
jae
frstor
sub
xchg
mov
scas
pop
cmc
xchg
and
inc
cmp
sbb
sbb
pushf
repz
(bad)
fild
hlt
int
mov
rcr
ficom
adc
add
push
push
cmp
les
adc
inc
mov
pop
push
xchg
dec
mov
rol
cmps
mov
push
call
cmp
stos
mov
push
arpl
ror
xchg
sub
test
cmp
dec
in
cmp
adc
jmp
inc
sub
xor
lea
inc
scas
adc
adc
sbb
stc
push
push
sub
in
xchg
test
aaa
scas
pop
test
les
not
dec
jmp
inc
movs
mov
rol
adc
cmps
shr
hlt
jp
fisub
ficom
outs
(bad)
sbb
push
or
sbb
in
sub
xor
xchg
sbb
imul
sbb
sub
sub
leave
cmp
ins
push
hlt
lods
or
or
adc
mov
retf
dec
pop
mov
js
pop
adc
adc
je
hlt
repnz
mov
mov
inc
and
test
sub
ret
mov
mov
dec
cmp
or
sbb
xchg
dec
outs
adc
scas
ds
icebp
mov
out
or
sbb
sbb
mov
push
mov
mov
not
scas
adc
int
cmc
mov
pop
inc
movs
enter
into
pop
push
rcr
iret
xchg
mov
inc
lods
xchg
inc
jae
test
mov
xlat
mov
in
fldcw
xor
xchg
lock
mov
gs
jns
cmp
sahf
mov
mov
xchg
loope
dec
sbb
call
adc
xor
pop
xor
aad
xchg
cwde
inc
imul
mov
and
loop
dec
pop
aam
pop
div
ds
loope
sbb
repz
(bad)
mov
lahf
sahf
adc
pop
xor
xor
ret
jnp
sub
inc
xchg
ja
add
mov
xchg
adc
inc
adc
neg
popa
dec
xchg
bswap
and
scas
mov
xchg
pop
mov
jbe
sbb
xchg
or
inc
dec
(bad)
ds
add
popa
and
(bad)
sti
or
icebp
dec
in
and
pop
ret
ror
push
jg
cmp
les
adc
hlt
mov
scas
jnp
mov
icebp
in
mov
dec
mov
dec
jmp
iret
rcr
test
cmp
pop
inc
es
xchg
lds
out
scas
push
xchg
jmp
add
adc
sub
jmp
sbb
test
xchg
retf
repz
xchg
jle
std
movs
inc
test
mov
pmaddwd
repz
dec
hlt
pusha
sub
lock
pop
pop
hlt
les
out
adc
mov
arpl
mov
fstp
inc
adc
jmp
icebp
rcr
dec
pop
or
pop
dec
adc
mov
cmp
loop
aam
mov
or
lahf
imul
push
add
mov
cld
test
fild
push
pop
push
lahf
mov
mov
pop
fdivr
(bad)
push
hlt
rcr
mov
sub
add
xchg
cmp
fsubr
jge
adc
pop
cmps
inc
mov
mov
aad
fistp
inc
jns
push
inc
cld
xchg
mov
xchg
rcr
hlt
jmp
test
adc
popf
outs
dec
inc
adc
test
sbb
mov
xor
add
retf
inc
pop
inc
dec
jecxz
xchg
repz
pop
aad
mov
ficom
pop
shr
inc
jb
sbb
sub
test
push
repz
cmps
fistp
mov
pop
xor
push
stc
xlat
push
inc
and
push
fcomp
aad
dec
add
ds
pushf
sub
and
aam
data16
call
inc
std
mov
call
enter
add
test
outs
je
sbb
cld
adc
jecxz
cmp
aad
popa
push
sub
fld
out
sar
mov
lock
mov
adc
je
jl
out
xor
dec
inc
mov
int3
shl
xchg
fcom
inc
and
inc
xchg
ret
inc
and
(bad)
jp
hlt
mov
retf
or
adc
mov
sub
in
pop
ret
jp
inc
ds
ds
cmp
xlat
(bad)
jle
gs
jmp
add
xchg
xor
mov
or
aas
push
adc
int3
stc
in
cld
jne
xchg
ss
out
jnp
ins
scas
ins
inc
pushf
adc
in
push
and
test
out
or
je
mov
push
inc
lea
retf
(bad)
ror
or
dec
(bad)
mov
push
hlt
mov
popf
jp
scas
mov
ror
(bad)
hlt
je
xchg
hlt
sti
jle
rcl
mov
and
aad
xor
push
jnp
idiv
test
ds
jl
push
jecxz
cli
call
lods
loopne
add
ret
mov
call
repz
add
xor
ins
(bad)
inc
aad
adc
mov
iret
es
mov
out
or
xchg
sbb
pop
xchg
jb
jae
inc
(bad)
call
dec
fsubr
cmc
mov
stc
push
xchg
fldenv
pop
and
aad
pop
mov
icebp
and
cld
leave
sbb
rcl
xchg
mov
je
fst
dec
ret
std
fld
mov
lock
call
adc
inc
dec
ss
dec
mov
pop
(bad)
test
mov
jl
imul
hlt
sub
mov
pop
nop
mov
inc
xor
aas
sub
aas
add
mov
pop
cmp
mov
cmp
adc
cmc
mov
fwait
stos
ins
in
(bad)
hlt
ins
sbb
add
out
adc
push
fsub
into
inc
jp
aad
neg
out
and
sti
loop
xchg
(bad)
xor
mov
sub
pop
pop
popa
mov
or
adc
cmp
pop
mov
scas
out
xor
xlat
xchg
fcom
loop
das
push
push
out
ins
push
or
loope
cmp
cmc
dec
inc
loope
pusha
sbb
mov
fcom
ret
bound
repz
jmp
mov
outs
loop
cmp
repz
(bad)
mov
scas
shl
jp
or
mov
fwait
aad
jmp
jle
int
pusha
add
cli
push
cmc
sbb
xchg
push
nop
gs
pusha
hlt
cmp
rcr
fcomp
pop
add
dec
fwait
rol
retf
shl
cmp
jmp
inc
sbb
push
pmaddwd
mov
nop
sbb
repnz
pop
fiadd
repz
enter
mov
inc
popa
test
push
hlt
jecxz
sub
int3
rcr
test
pop
inc
xor
and
pop
int
xchg
dec
inc
mov
vpcmpeqb
pop
scas
hlt
and
mov
dec
jb
dec
adc
or
push
lods
(bad)
aaa
pop
aad
lods
xor
jg
and
xchg
cmp
ret
cli
ret
jmp
sub
scas
inc
inc
mov
test
push
sbb
push
xchg
(bad)
shr
pop
lds
aad
in
ins
push
repnz
xchg
outs
push
cmp
mov
adc
cmp
out
(bad)
cwde
and
mov
dec
aad
mov
test
fidivr
jp
xor
dec
addr16
push
cmp
inc
dec
push
loopne
dec
or
pop
aam
jb
mov
sbb
push
aad
sub
sub
icebp
xchg
scas
outs
aad
mov
push
sbb
mov
(bad)
out
sbb
push
ss
push
out
pop
add
les
jle
xchg
test
or
cli
adc
imul
xchg
lahf
lods
(bad)
loopne
js
add
hlt
sbb
add
icebp
adc
mov
adc
mov
loopne
inc
outs
je
lds
mov
cmps
jmp
push
add
xor
ins
jae
rol
push
mov
push
jo
imul
loop
(bad)
jge
pusha
adc
vpunpckhwd
loope
sub
cld
mov
out
pushf
clc
les
or
std
add
xlat
fist
(bad)
sahf
dec
dec
xchg
push
hlt
cdq
aaa
mov
sub
push
mov
add
out
fst
ficom
loopne
(bad)
aad
ins
xchg
cmc
or
and
cwde
add
addr16
hlt
arpl
mov
ja
cli
jne
pop
and
stos
pop
data16
jbe
add
sti
mov
xchg
adc
(bad)
fsub
jb
lods
and
(bad)
aad
inc
aam
sub
stc
dec
scas
leave
or
test
cld
xchg
sbb
cmc
fwait
icebp
add
loope
cmp
es
out
pushf
ret
jnp
push
xor
je
es
inc
pop
ror
pop
popa
shl
jmp
loopne
adc
or
dec
aad
aad
in
pop
(bad)
cwde
push
jae
add
sub
ficom
mov
cli
hlt
adc
xor
adc
rol
loop
sub
mov
xor
sti
pop
adc
lea
jecxz
ja
test
cld
dec
mov
and
in
inc
fnstenv
fidiv
xor
icebp
cmp
mov
push
cwde
dec
popa
mul
loope
hlt
sbb
retf
adc
cmps
xlat
inc
test
shl
mov
adc
jnp
inc
mov
mov
aam
loopne
mov
adc
nop
aad
bound
inc
xchg
loope
mov
cmc
aas
pop
loope
push
gs
mov
and
add
imul
pushf
cmc
int3
jp
daa
repnz
cmps
sahf
fdivrp
aad
aam
mov
fstp
jmp
sbb
hlt
data16
outs
add
mov
icebp
rcr
xchg
cmp
sub
popa
jno
sbb
jecxz
outs
pop
and
sub
cmc
cmps
out
cli
cmp
inc
dec
cdq
push
mov
sbb
shl
and
(bad)
jne
cmps
push
mov
mov
mul
ret
test
fidivr
(bad)
hlt
imul
mov
dec
inc
mov
(bad)
cli
aad
fstp
mov
stos
mov
into
in
repz
fwait
popf
sbb
(bad)
sub
lods
dec
push
push
pop
sub
push
and
inc
adc
fs
mov
fnstenv
push
pop
cdq
scas
mov
iret
dec
inc
inc
pop
mov
ret
fs
cmp
mov
cld
cmc
push
in
test
dec
xchg
mov
ss
xor
loopne
mov
mov
in
xor
xor
add
inc
(bad)
aad
xlat
mov
stc
or
pop
push
mov
and
cmp
into
and
mov
cmp
adc
jnp
or
rcl
sub
(bad)
outs
inc
xor
sub
mov
aam
aad
and
mov
aas
scas
imul
adc
ror
hlt
inc
adc
adc
dec
mov
gs
push
xor
mov
mov
adc
pusha
ror
call
lea
xchg
gs
push
mov
mov
xor
sub
and
lahf
and
adc
or
dec
mov
bnd
enter
arpl
stc
xchg
ror
(bad)
hlt
(bad)
or
jg
pop
or
adc
repnz
sub
mov
test
jbe
outs
bound
enter
or
cdq
push
xchg
sub
mov
sbb
aam
cdq
xchg
pop
sbb
es
mov
fcom
pop
mov
push
ins
addr16
push
lock
mov
adc
sbb
loopne
adc
mov
pop
popf
ficomp
jmp
add
(bad)
(bad)
(bad)
fwait
jecxz
je
pause
mov
push
add
inc
aad
fiadd
jmp
add
xor
pop
in
inc
inc
in
shl
sbb
add
or
out
int
das
int3
stos
shl
hlt
cmc
push
inc
stos
push
icebp
js
adc
icebp
xor
es
lea
hlt
test
push
movs
call
mov
cmp
les
sahf
inc
adc
pop
push
inc
mov
cmp
stos
push
mov
cmp
mov
cmp
hlt
jmp
add
mov
jbe
ror
inc
jp
cmc
or
push
fsubr
mov
aad
shr
add
pop
push
push
inc
jl
add
cmc
out
adc
or
sar
or
iret
in
adc
rcl
adc
and
stos
popa
pusha
lods
lahf
fld
xchg
in
fidiv
cwde
jl
inc
fdivr
mov
dec
pushf
cmp
popa
das
jmp
cmp
in
jnp
pop
ret
loope
cmc
and
sub
xchg
push
call
dec
sbb
adc
ret
adc
aad
xor
inc
jmp
or
mov
push
pop
xchg
push
adc
and
push
adc
outs
xor
clc
aam
adc
and
sub
lock
popa
mov
add
into
mov
or
aad
push
push
pop
pop
xor
mov
aaa
pop
xchg
ror
outs
xchg
icebp
mov
jmp
pusha
fcmovnbe
xor
jp
pushf
pop
gs
mov
mov
pop
test
inc
xor
cs
push
push
push
push
hlt
addr16
mov
push
cmp
rcl
pop
fidiv
cmp
shl
lods
xlat
ja
mov
adc
pop
mov
fisttp
aad
in
mov
pop
inc
push
jmp
std
mov
pusha
push
ins
loope
jmp
sar
movs
mov
mov
cld
pop
out
push
cmc
int3
fsub
cs
lods
xor
xor
out
push
push
hlt
jbe
gs
or
pop
xor
mov
xlat
or
pop
test
sbb
cmp
in
dec
inc
shl
adc
sbb
push
in
loop
sub
fist
cmps
push
mov
fwait
adc
jne
icebp
and
cmc
in
out
int
shr
scas
add
pop
adc
lahf
popa
imul
add
adc
fld
inc
imul
aad
gs
(bad)
adc
shl
jne
int
dec
jmp
hlt
ror
punpckhwd
adc
mov
jne
fist
(bad)
gs
xchg
sub
pop
sub
sbb
adc
push
xchg
inc
cmps
hlt
shl
adc
adc
js
cld
push
mov
inc
push
and
xchg
fild
jnp
(bad)
out
jge
hlt
icebp
stc
mov
jns
mov
sti
or
mov
and
sbb
jae
ja
or
call
jne
clc
inc
shl
adc
cwde
jo
adc
and
cmc
jecxz
hlt
dec
or
inc
cs
shr
mov
push
cs
sub
aad
gs
fiadd
cmps
adc
hlt
pop
mov
add
sbb
daa
dec
mov
mov
jns
shr
mov
hlt
fdivr
mov
mov
push
and
sbb
lock
imul
xchg
test
adc
pop
jno
mov
enter
sti
in
cwde
pop
pushf
es
mov
inc
stos
or
hlt
sahf
loope
(bad)
ror
hlt
shl
push
mov
fcomip
inc
jbe
into
mov
test
inc
je
jp
add
aad
jo
pusha
sbb
mov
call
dec
lahf
cmps
repnz
cmp
xchg
in
adc
sub
aam
ss
dec
aad
add
mov
cmps
inc
out
test
fcmovnb
clc
pop
popa
mov
xchg
inc
hlt
je
test
repz
daa
adc
mov
call
retf
pop
and
xor
test
popf
adc
push
inc
test
arpl
cvtdq2ps
hlt
xchg
dec
mov
daa
adc
sub
adc
scas
push
ret
jno
adc
rcr
data16
in
mov
dec
repnz
and
ins
je
dec
aad
push
mov
mov
mov
mov
sub
push
push
(bad)
pop
icebp
rcl
fld
sbb
sub
inc
jp
and
outs
fld
imul
daa
aad
xchg
js
mov
fld
mov
comiss
aam
bound
cmp
pop
cmc
inc
cmp
fwait
mov
adc
cmp
jle
rcl
cmps
push
push
jno
and
dec
mov
cmp
xchg
fdivr
and
mov
dec
pop
adc
enter
aam
in
addr16
loope
adc
(bad)
jno
sub
aad
xchg
fwait
mov
inc
fimul
jb
mov
dec
mov
jmp
xchg
inc
xchg
(bad)
aaa
mov
ins
hlt
in
pop
movs
cmps
or
push
mov
add
das
lock
daa
xor
adc
jg
scas
into
fistp
(bad)
and
add
sbb
inc
test
xchg
push
mov
push
stos
fs
data16
jnp
cdq
data16
sahf
pop
popa
mov
movs
mov
adc
mov
push
(bad)
or
xor
xor
repz
clc
adc
cwde
dec
inc
scas
and
sbb
xor
inc
mov
jne
outs
repz
mov
scas
jo
xchg
xlat
jge
les
xchg
nop
dec
popa
and
aad
lea
in
sar
cmp
and
les
das
test
sti
pop
ins
hlt
cmc
inc
aas
xchg
jnp
sar
bound
jae
aad
xchg
cmp
fidivr
xchg
pop
int3
add
push
shr
mov
push
xchg
push
jmp
jnp
inc
test
jge
and
repz
mov
imul
fdiv
dec
aad
aam
jmp
aas
mov
fisttp
and
or
outs
xlat
pop
std
cmp
sub
lds
je
sar
jg
or
jp
(bad)
sub
xchg
ja
aad
retf
push
sub
add
ret
call
push
mov
jo
repnz
test
xchg
mov
test
mov
retf
mov
fiadd
push
jb
fadd
(bad)
fnstcw
dec
into
pop
xor
dec
aam
push
and
aad
jno
test
out
gs
aad
pop
xchg
repnz
push
pop
mov
je
adc
cld
repnz
xlat
aam
pop
pop
push
cmp
test
aad
push
clc
sub
data16
mov
and
adc
or
mov
call
cmp
mov
inc
push
imul
not
push
mov
add
inc
mov
fwait
inc
mov
mov
mov
jp
retf
les
mov
ror
sbb
add
retf
loopne
(bad)
hlt
xor
xchg
adc
inc
loopne
test
add
inc
adc
test
and
ins
inc
xchg
mov
jmp
mov
loope
adc
sar
push
sahf
push
aad
push
pop
data16
stos
push
cmp
push
xchg
and
xchg
stos
jp
retf
jecxz
js
cmp
std
sbb
cmc
test
imul
hlt
in
jmp
test
xchg
sub
cmps
retf
in
push
inc
dec
pop
out
(bad)
sub
or
inc
pop
arpl
nop
imul
fmul
movs
hlt
jae
sbb
sbb
outs
outs
cmp
rcl
cmp
xor
adc
jp
inc
and
retf
add
ds
hlt
mov
cmp
inc
adc
cmp
cwde
aad
sbb
inc
data16
lods
inc
inc
and
shl
sub
test
into
adc
sub
stos
and
retf
jb
jne
call
xchg
mov
xchg
pop
fnstcw
push
iret
cmc
sbb
or
xchg
ins
xor
scas
aam
dec
xor
std
mov
(bad)
mov
jmp
xchg
idiv
cmp
dec
aas
sbb
stos
cmps
int3
jne
mov
bound
fisubr
and
neg
and
pop
mov
inc
repz
out
mov
add
add
repnz
jmp
mov
je
cmp
push
les
cmc
jmp
(bad)
repz
mov
(bad)
xor
cmc
ror
mov
fdiv
jno
and
(bad)
stos
fist
stos
dec
xchg
loopne
adc
xor
(bad)
mov
sti
and
pusha
mov
sub
and
in
test
aad
shl
xor
sbb
jno
mov
aam
outs
or
push
mov
pop
cli
mov
mov
loopne
inc
jp
in
adc
dec
into
dec
sub
push
sbb
enter
cmp
ror
cmc
hlt
jle
xchg
jg
les
jne
mov
add
hlt
pushf
mov
push
int
jne
pop
gs
mov
or
or
retfw
or
push
fmul
ds
add
xchg
push
clc
adc
test
lods
push
(bad)
cld
xor
in
inc
leave
fcom
(bad)
push
retf
push
jmp
inc
adc
adc
jl
daa
inc
hlt
(bad)
jns
or
or
icebp
xor
test
cmc
push
or
aad
push
add
aad
les
sbb
pop
int3
pop
je
(bad)
fsubr
ds
dec
jle
in
mov
pop
data16
ja
int
inc
push
cmp
bound
lods
adc
add
cmc
mov
ror
call
popa
xchg
bound
rcr
popf
add
js
push
mov
and
test
in
jae
gs
adc
xor
mov
int3
inc
test
adc
xchg
xchg
cmp
adc
mov
inc
loopne
lahf
mov
cmp
repnz
gs
inc
sub
mov
push
inc
push
and
popf
mov
mov
pushf
jmp
sub
jns
or
mov
(bad)
push
leave
pop
in
sub
test
ss
in
dec
jns
retf
inc
and
xchg
inc
xor
xor
push
hlt
dec
jb
push
push
cs
xor
adc
adc
test
ret
mov
ret
retf
inc
fcom
mov
hlt
mov
cmc
dec
fcom
inc
jo
out
and
and
scas
lods
loope
ror
sbb
in
add
adc
fldenv
sbb
dec
bound
or
or
mov
mov
lds
sub
inc
test
dec
rcr
or
mov
cli
xchg
jbe
pop
mov
faddp
daa
add
dec
ror
and
repz
sbb
inc
out
out
popf
cwde
push
and
outs
push
cmovns
add
xchg
ficomp
mov
lea
inc
stos
push
mov
pop
jg
(bad)
iret
hlt
in
sbb
outs
push
mov
je
call
inc
xchg
repnz
dec
int3
add
pop
pop
daa
mov
cmp
adc
int3
out
hlt
(bad)
fabs
pop
or
fst
jmp
hlt
loopne
mov
pushfw
aas
call
(bad)
mov
pop
rcl
lods
mov
pop
adc
and
inc
rol
je
hlt
mov
mov
hlt
std
lea
repnz
mov
fst
cs
imul
push
lahf
fwait
cs
or
xor
mov
sub
hlt
sti
pop
arpl
and
bound
jae
loop
gs
(bad)
push
jb
cmps
dec
cld
and
jp
inc
clc
mov
pop
sub
aam
js
jle
jge
gs
add
aad
aam
jle
out
std
add
or
hlt
jmp
in
(bad)
daa
into
std
mov
adc
jmp
cli
prefetch
push
(bad)
retf
cmc
add
rcr
out
sbb
jb
mov
push
xchg
mov
inc
nop
repz
adc
in
leave
add
inc
ret
fdivrp
jb
movs
xlat
lock
lock
movs
dec
outs
std
dec
pop
test
aas
cmc
ins
adc
or
mov
(bad)
cli
dec
mov
lahf
xor
push
adc
sbb
icebp
xchg
jnp
mov
js
mov
push
in
(bad)
sti
pop
inc
or
and
aaa
xor
inc
dec
add
inc
hlt
add
fnstsw
adc
test
cmp
mov
xchg
add
push
in
stos
ds
cmp
sbb
push
dec
mov
jg
mov
or
xor
out
push
ins
jmp
(bad)
fmul
addr16
rol
(bad)
mov
cwde
mov
cmp
xor
out
xor
std
test
adc
int
adc
jb
out
pop
je
cmp
inc
jno
mov
and
mov
sub
out
dec
nop
popa
cli
push
aad
dec
or
cmp
sbb
fwait
inc
jp
aad
pop
push
push
ins
push
inc
retf
clc
add
fwait
sbb
push
hlt
mov
push
fidiv
enter
pop
retf
bound
ret
xchg
xchg
fcmovnbe
or
add
or
cmc
push
lods
leave
pushf
push
mov
fidiv
pop
fisttp
(bad)
pushf
xchg
mov
adc
cmc
mov
retf
enter
cmp
pop
movs
sub
ins
mov
add
(bad)
mov
fcom
xchg
dec
je
xor
test
mul
pop
retf
popf
jo
ins
push
add
lock
and
repnz
xor
push
call
mov
fcom
xchg
adc
xor
jg
and
cmc
aaa
and
(bad)
gs
bound
cmc
adc
leave
push
and
pop
dec
pop
xchg
xchg
icebp
hlt
ja
or
in
and
inc
fcmovnbe
mov
(bad)
or
add
bound
xchg
fs
pop
mov
jmp
cmc
sbb
mov
loopne
enter
test
cdq
aas
mov
nop
cmp
mov
std
xchg
ret
hlt
xor
inc
and
aas
xor
add
push
xchg
cmp
cmc
add
sbb
nop
je
jmp
rcl
retf
mov
inc
adc
pusha
inc
cdq
push
sub
pop
xor
cmp
cmp
out
dec
js
ins
mov
aad
xchg
loop
xchg
sub
jae
xchg
inc
sar
adc
mov
cdq
adc
xchg
mov
aad
int
ins
dec
mov
adc
mov
inc
push
jl
sub
(bad)
mov
mov
aad
push
inc
or
sbb
mov
add
jmp
mov
adc
xchg
shr
and
pop
sub
add
inc
sub
mov
cmc
test
jmp
mov
and
sbb
sbb
lock
cmps
hlt
cmp
cmps
sbb
and
out
scas
inc
or
cmp
mov
inc
push
pop
rcr
pop
add
int3
jnp
mov
mov
inc
jne
inc
pop
push
xor
and
call
or
xchg
adc
pop
mov
xor
movs
mov
or
aaa
adc
cmp
push
imul
not
fwait
mov
dec
jp
or
jbe
xchg
sub
xchg
cli
inc
aad
(bad)
pop
and
inc
loope
movs
lds
ror
data16
retf
jmp
add
inc
dec
mov
add
jo
js
int
cmps
lahf
adc
loop
inc
aas
pusha
lock
xchg
ins
in
in
test
cs
jnp
mov
js
sbb
inc
mov
test
stc
test
inc
cmp
jne
jnp
movs
push
dec
lods
test
fst
sbb
aad
retf
dec
dec
xchg
cs
imul
aad
pusha
pushf
js
adc
into
ds
inc
mov
icebp
aad
aad
fscale
mov
cmp
adc
dec
loopne
fld
xchg
dec
(bad)
sbb
out
add
shr
pusha
into
outs
cwde
pop
in
les
int3
sti
sbb
jne
mov
inc
aad
pop
mov
stos
and
push
in
cmp
fs
xlat
fist
call
push
movs
push
pop
mov
pop
shl
jecxz
scas
fidivr
push
pop
mov
or
repnz
es
aad
mov
push
lahf
mov
cmp
shr
fst
ror
clc
push
ds
adc
cmp
dec
adc
aad
(bad)
jmp
push
sub
mov
rcl
(bad)
mov
pusha
xchg
adc
mov
aad
mov
cmp
shl
dec
pop
lock
jno
stos
out
pop
and
ror
out
cdq
ss
mov
fadd
gs
test
cmp
push
jae
hlt
(bad)
call
adc
jo
adc
jmp
in
jo
jo
dec
push
push
and
cmp
or
pop
pushf
aad
and
fldcw
xor
clc
popf
hlt
pop
repnz
stos
jl
test
cmc
mov
sti
leave
or
inc
aad
out
ret
shr
inc
push
stos
sbb
hlt
ja
mov
cwde
push
(bad)
adc
cmp
ret
adc
or
pop
mov
add
aad
cmp
mov
sbb
test
sbb
adc
or
or
inc
call
pop
and
xor
and
jle
xchg
or
aad
add
mov
mov
into
dec
jbe
inc
mov
jg
or
adc
and
push
aad
int
sbb
cmp
mov
fnstcw
and
cdq
arpl
retf
hlt
(bad)
push
stc
arpl
xor
arpl
sbb
jg
pand
rcl
xchg
out
jmp
cmps
aad
jecxz
mov
or
pop
adc
and
push
in
fld
adc
or
dec
mov
push
xchg
and
cmp
int3
enter
inc
pop
or
cld
in
pop
dec
cmp
aam
inc
hlt
les
stos
bound
in
hlt
leave
add
shr
js
dec
das
or
shl
cmc
repz
inc
repz
daa
aaa
mov
ins
sub
jmp
mov
shr
sub
aad
movs
inc
or
inc
fadd
lods
xor
add
pop
cmp
mov
fwait
adc
and
cld
aad
mov
out
and
jae
mov
aaa
jmp
ss
sahf
in
fld
fwait
mov
adc
mov
mov
push
push
mov
mov
push
sub
ret
mov
mov
ins
push
les
jmp
icebp
jp
xor
(bad)
or
mov
cmps
add
cmp
cmc
mov
cmc
xchg
adc
in
icebp
idiv
pop
iret
adc
mov
call
jle
inc
mov
enter
and
or
push
shl
loopne
xchg
in
xchg
stos
inc
dec
push
in
inc
cmp
jecxz
pushf
pop
sti
test
cmp
xchg
cli
pop
andps
js
lea
jp
lahf
call
into
dec
movs
cmp
aam
test
(bad)
out
(bad)
fisub
add
pop
pop
hlt
push
xlat
das
sub
sub
test
retf
je
fdiv
ins
fnstenv
repz
xor
aad
(bad)
pop
adc
inc
loopne
push
sar
sub
adc
mov
call
dec
sub
xor
je
arpl
retf
xchg
lahf
mov
mov
arpl
neg
mov
jne
sbb
cmp
fucomp
prefetcht1
sbb
cmp
not
inc
sub
scas
(bad)
stos
adc
out
jbe
push
(bad)
fcom
pop
aad
jmp
or
jae
add
lahf
push
mul
xchg
adc
adc
inc
dec
mov
repz
xchg
fsubr
push
sbb
rol
loope
aad
icebp
inc
add
int3
jp
mov
out
hlt
(bad)
pop
(bad)
add
and
adc
ins
int
adc
add
shr
jne
xchg
lea
dec
inc
mov
pop
adc
or
or
pop
loope
mov
cmps
pop
jne
hlt
repnz
jl
mov
leave
pop
adc
test
icebp
pop
out
icebp
jle
pop
mov
jmp
mov
rcl
inc
(bad)
outs
inc
xchg
test
mov
aad
popa
mov
clc
and
or
jle
test
out
popa
aas
in
cmp
repz
adc
lea
out
xchg
mov
cmp
retf
mov
xor
inc
and
out
mov
lds
icebp
jecxz
jl
dec
ss
fcomi
cmp
fbld
jmp
aad
xchg
lds
fwait
imul
mov
push
sbb
jnp
aaa
adc
and
cmps
sub
hlt
dec
cmc
cld
shr
pop
scas
pushf
test
xchg
(bad)
push
rol
leave
pop
test
jg
dec
fcmovnb
adc
fstp
xchg
xor
js
aam
lods
outs
cmp
popa
and
lahf
inc
sbb
std
in
das
jmp
lahf
or
loope
ss
push
retf
jb
hlt
push
daa
cmp
gs
aad
inc
std
push
ret
mov
cli
out
out
mov
cwde
cmp
sti
cmps
fiadd
sbb
add
jecxz
fistp
fcmovne
repz
inc
in
(bad)
shr
xor
cmp
push
(bad)
out
in
dec
ror
repz
iret
inc
push
movs
pop
mov
out
cli
into
pop
push
xchg
jmp
pop
stc
push
fdivr
in
aad
push
adc
out
ficom
mov
lahf
add
push
jno
xchg
call
in
adc
cmp
push
int3
cmp
out
scas
aad
movs
jmp
xor
int
sub
xchg
pop
shl
xlat
pushf
fisubr
push
jnp
lahf
(bad)
fistp
adc
pop
sub
mov
hlt
adc
sub
jae
daa
int3
xchg
or
int3
add
xor
(bad)
in
inc
pop
hlt
iret
cs
aam
dec
pop
or
ficom
leave
jno
mov
xchg
jp
push
nop
push
inc
int3
repz
adc
jl
repnz
push
mov
mov
push
or
pop
inc
pop
aad
xor
and
(bad)
cmp
sbb
arpl
jg
stc
call
dec
mov
mov
(bad)
dec
pop
add
dec
or
ja
jne
aam
sub
fcomp
or
inc
and
jae
rcr
and
jae
sub
or
push
xchg
adc
sti
repnz
or
stos
or
pop
jb
add
out
add
test
stos
and
xor
or
in
daa
sbb
sub
inc
and
int
push
ffreep
hlt
outs
push
and
inc
retf
psubsw
test
hlt
or
or
clc
sbb
cmp
sub
popa
adc
aad
popa
dec
test
fimul
fwait
sbb
call
or
movs
inc
xchg
aaa
mov
inc
sbb
inc
(bad)
adc
jmp
pop
gs
mov
js
inc
jp
or
mov
pop
fcomi
push
stc
lea
or
or
inc
jb
xor
jnp
fimul
enter
inc
jg
dec
lea
ret
hlt
ins
jecxz
sbb
sub
int
stos
fs
jmp
mov
mov
(bad)
jge
ret
cmc
mov
adc
aas
cmc
pop
sbb
(bad)
(bad)
call
mov
(bad)
adc
cmp
stos
rcr
hlt
aad
popf
test
add
push
push
inc
rcl
(bad)
lea
repnz
repz
xchg
pop
cld
and
add
mov
pop
dec
pop
mov
pop
inc
call
pop
adc
inc
pop
ins
cli
adc
mov
add
jg
ins
ins
xor
xchg
movs
jge
pop
push
test
push
sbb
lock
aas
jne
dec
iret
inc
out
aaa
and
mov
adc
inc
mov
dec
adc
sbb
xor
push
mov
sbb
daa
icebp
pop
xchg
sbb
and
push
and
pop
add
pop
pop
hlt
pop
jg
adc
mov
(bad)
jl
and
repz
in
jg
popa
ret
lods
fmulp
mov
sar
inc
(bad)
fs
sti
cmc
loopne
aaa
cmc
pop
add
add
loopne
adc
inc
aas
inc
retf
or
test
je
sub
adc
cmp
inc
idiv
and
in
aas
in
or
aas
loop
mov
inc
stos
fild
icebp
hlt
xlat
imul
js
inc
jo
int
imul
aad
adc
leave
enter
inc
fbld
dec
call
pop
pusha
or
outs
dec
repz
sub
push
push
fs
iret
sbb
stos
aad
call
(bad)
aam
rcr
arpl
lock
adc
call
aaa
aad
outs
in
mov
or
sbb
aas
jno
int3
cmp
xchg
xchg
aam
xor
mov
xchg
into
test
in
out
add
inc
xchg
iret
fld
arpl
sub
sub
(bad)
cwde
leave
xor
pop
outs
cmp
jp
pusha
dec
xchg
pop
dec
daa
jge
adc
pop
sub
aam
js
pop
mov
fbstp
shl
and
(bad)
cmc
and
pop
mov
pop
jg
xchg
jg
repz
or
cs
inc
inc
xchg
hlt
push
pop
lahf
xchg
sar
dec
bndldx
or
(bad)
adc
cs
fsubr
sbb
add
xor
call
and
in
pop
scas
ds
adc
dec
scas
aam
jecxz
test
push
jecxz
xor
aaa
jecxz
movs
aad
popf
ret
fsub
aam
xchg
addr16
inc
xchg
dec
mov
pop
(bad)
fdivr
mov
fs
adc
jb
loopne
cwde
push
xchg
and
adc
pop
inc
cld
inc
push
sbb
inc
dec
int
imul
aas
(bad)
mov
movs
aad
adc
mov
scas
push
ds
retf
adc
mov
mov
fmul
inc
jp
lds
jle
hlt
shr
imul
rol
xchg
leave
gs
mov
inc
aaa
and
aad
cmps
pop
jmp
xor
adc
xchg
pop
inc
cmp
dec
shr
aad
arpl
les
mov
jnp
cmp
mov
mov
adc
icebp
jle
shl
cdq
adc
(bad)
cmovp
cmc
mov
lock
das
aad
xor
mov
shl
mov
xor
in
mul
ret
xchg
(bad)
retf
push
xchg
(bad)
repnz
ss
adc
xchg
dec
cmc
aad
cwde
jne
nop
xor
inc
jnp
cli
fsub
jmp
push
pop
stos
sbb
dec
int
mov
in
test
adc
adc
inc
push
mov
pop
movs
mov
std
into
pusha
mov
int
inc
stos
mov
fcmove
add
xchg
mov
adc
call
push
inc
xchg
test
mov
into
stc
in
aas
lea
xchg
imul
in
repz
jnp
movs
cmps
xchg
iret
jns
mov
sub
or
mov
sub
or
jecxz
gs
mov
test
xor
add
jg
inc
pop
mul
enter
cmc
mov
mov
in
iret
loop
lds
stos
repz
ds
and
xor
(bad)
mov
daa
add
test
hlt
pop
adc
push
jl
jp
loopne
stc
pop
adc
or
das
and
inc
aad
mov
pop
sub
outs
xor
inc
or
xor
inc
movs
inc
in
fs
add
mov
outs
(bad)
xchg
test
sahf
js
loop
xchg
shr
fstp
imul
movs
in
std
or
fwait
popf
stos
jecxz
cmp
movs
xchg
dec
cmps
pop
inc
jecxz
bound
mov
aad
std
dec
dec
ret
add
clc
bound
loopne
adc
test
jmp
pop
add
sti
hlt
wbinvd
xor
repz
int3
in
sub
xlat
sub
add
adc
inc
mov
xlat
enter
je
mov
cwde
dec
xor
imul
mov
jg
stos
into
jo
in
push
pop
or
rol
js
std
adc
hlt
fs
and
clc
pusha
add
out
jns
ins
push
add
clc
in
aad
call
(bad)
inc
lods
sbb
test
inc
lods
inc
dec
push
mov
hlt
arpl
push
pop
adc
jl
mov
fisttp
aad
or
pop
inc
loopne
push
ss
mov
sbb
jno
cmps
sbb
scas
mov
add
mov
scas
ret
mov
aaa
scas
dec
push
or
jmp
popa
jmp
cmps
dec
sar
ret
(bad)
fcomip
scas
xor
inc
xchg
enter
push
(bad)
retf
xchg
push
push
or
sub
js
and
pop
inc
stc
test
sbb
xchg
mov
cmovbe
aas
push
push
or
es
or
imul
push
inc
sub
iret
into
pushf
test
mov
jmp
cli
aad
adc
push
rol
ins
cmp
cmp
addr16
out
pop
repnz
or
hlt
jl
imul
out
mov
leave
test
add
jo
xchg
or
ret
mov
in
cld
in
fldcw
aas
cmp
rol
inc
jb
mov
aad
push
rol
pop
lds
in
push
fsubr
leavew
enter
xor
cmp
es
sub
inc
mov
push
pop
mov
mov
and
push
dec
sub
inc
and
cli
mov
mov
mov
xchg
adc
aaa
pop
sub
pop
not
dec
es
fs
sahf
out
dec
je
mov
xchg
mov
ins
and
lahf
or
lea
repz
and
pop
loope
ins
sub
adc
fsub
iret
aad
fmul
pop
jge
imul
repnz
sub
imul
push
popf
out
hlt
fs
or
fcmovne
stos
pop
retf
hlt
ret
iret
or
and
dec
and
xchg
add
add
in
scas
ins
cmps
mov
imul
mov
sahf
data16
arpl
push
jae
and
dec
out
in
or
xlat
push
mov
call
fcomp
and
popa
outs
aaa
sub
mov
cmc
loope
mov
or
call
aad
xor
push
dec
popa
and
sub
arpl
hlt
lods
lods
inc
or
not
mov
jns
enter
sahf
jg
aad
rol
push
sub
fcom
or
push
or
xor
daa
jmp
dec
adc
imul
sbb
jbe
jns
xchg
repnz
movs
mov
out
inc
cmp
cmps
repz
shl
cmp
sbb
xor
jmp
cmc
inc
rol
ins
idiv
and
add
aad
dec
rol
shr
ds
dec
mov
jbe
fcomp
shl
or
fst
jne
addr16
ss
in
mov
sub
test
pop
std
push
stos
hlt
fld
out
jbe
jnp
add
leave
adc
xor
pushf
sbb
inc
sub
and
jmp
aad
xchg
test
xor
cs
add
xchg
dec
or
fcomp
dec
cwde
xchg
or
xchg
mov
test
push
or
and
sub
sti
js
hlt
dec
dec
clc
jl
cmc
cmp
call
xchg
out
or
or
aad
inc
enter
xchg
inc
mov
iret
and
pop
in
in
hlt
sub
xor
lds
popa
and
sbb
hlt
jne
setg
out
cmp
mov
inc
sahf
adc
inc
cdq
pop
rcl
lods
stc
in
and
mov
enter
test
adc
xchg
je
idiv
bnd
jne
in
adc
and
pop
cmp
fcomp
adc
icebp
inc
jne
mov
icebp
retf
pop
rol
xchg
mov
cmc
(bad)
stc
mov
pushf
xchg
rcr
mov
aad
popf
in
sbb
out
sahf
inc
sbb
iretw
cmp
push
loopne
or
sbb
cdq
(bad)
hlt
lods
push
stos
xor
mov
mov
push
push
cmp
hlt
add
in
sahf
retf
out
sub
pop
shl
dec
call
out
dec
int
sbb
inc
push
xor
mov
lahf
pop
or
imul
scas
pop
mov
xor
jmp
cmps
into
or
sbb
xchg
sahf
rol
movs
je
inc
inc
repnz
dec
pop
pusha
xor
bound
lods
adc
sbb
add
vpsrad
rol
push
loop
cmps
or
inc
sbb
test
cmp
outs
mov
es
ss
and
sti
not
lds
sbb
inc
std
add
jl
xchg
fiadd
iret
mov
adc
sub
push
dec
add
jae
or
retf
mov
push
out
outs
and
sahf
ror
retf
loop
hlt
push
inc
mov
call
dec
cmc
jbe
call
in
int
add
sub
stos
cwde
bnd
lods
xor
add
cwde
rol
ss
mov
push
es
jne
or
scas
add
loop
pop
inc
in
in
sbb
xor
add
test
jbe
mov
dec
mov
or
(bad)
js
or
push
add
push
mov
hlt
in
rcl
arpl
mov
fiadd
fbld
cmp
std
cs
add
out
(bad)
inc
add
ficom
pushf
(bad)
aad
push
adc
adc
jb
iret
fdiv
sub
adc
sti
test
mov
aad
add
sub
push
popa
ret
or
test
and
and
xchg
push
stc
std
jecxz
mov
cwde
push
arpl
mov
pop
in
mov
out
mov
xor
imul
xor
call
aad
stos
in
rol
nop
cmp
rol
cmp
inc
push
adc
add
xlat
add
les
cmp
lods
call
add
add
cmp
dec
dec
xor
dec
js
aad
test
inc
mov
push
mov
sub
and
inc
in
aad
xchg
dec
inc
stos
je
fild
xchg
stos
aad
xchg
xchg
loope
pusha
popfw
aaa
icebp
xchg
mov
test
and
jne
push
fwait
mov
sti
pop
aaa
shr
movs
pop
cdq
aad
and
inc
cmc
inc
jno
adc
out
pop
popf
int3
add
std
mov
or
jnp
mov
loopne
cld
sar
popa
popf
(bad)
cmp
inc
div
loope
scas
ins
cli
jle
mov
dec
cmc
adc
mov
mov
(bad)
repz
and
inc
int3
cmp
jb
sbb
(bad)
aad
sbb
or
and
js
xchg
pop
dec
inc
adc
data16
pop
adc
jno
push
inc
or
push
into
loope
and
adc
sbb
fs
cmc
repz
mov
xor
ret
push
sbb
rcr
scas
mov
(bad)
loopne
add
cmp
int3
adc
mov
pop
adc
stos
and
dec
js
pop
sub
or
lock
mov
aam
jge
stc
hlt
or
aaa
jp
and
or
xchg
push
hlt
(bad)
xor
sub
into
jg
and
repz
ret
mov
dec
sub
mov
aam
sub
loopne
js
seto
aaa
jg
inc
mov
xchg
test
or
cmp
adc
xor
jae
sbb
ret
ds
push
(bad)
movs
inc
fwait
imul
and
mov
(bad)
(bad)
xor
jmp
shr
push
ret
xor
jge
push
add
out
mov
stos
(bad)
push
in
sbb
std
and
or
rol
ins
call
out
icebp
mov
push
or
mov
jmp
mov
les
adc
cmp
dec
xchg
xchg
or
ins
hlt
jbe
pusha
neg
push
sbb
cdq
gs
mov
nop
cmc
js
mov
ins
rol
add
out
aad
les
je
xor
aam
or
xchg
sub
push
popf
fist
mov
not
cld
shl
data16
mov
retf
aad
shl
fnstsw
sbb
aad
and
inc
iret
add
jecxz
jmp
jb
js
pop
dec
es
sbb
inc
dec
scas
out
mov
add
pop
leave
xchg
dec
ret
rol
aad
movs
pop
aas
xor
movs
call
in
(bad)
adc
sti
lock
mov
rol
movs
retf
pop
fs
xor
pop
mov
jmp
hlt
or
and
adc
in
mov
scas
pop
ret
add
mov
jno
hlt
pop
xchg
out
sub
ret
mov
sub
aad
cmp
jae
and
ds
aad
xor
out
out
and
mov
(bad)
retf
xchg
loop
push
inc
jg
xchg
or
dec
into
pop
xchg
xchg
loop
dec
jmp
add
leave
lock
test
cld
ins
lds
icebp
sar
addr16
sti
nop
add
loop
sti
mov
cmc
bound
int3
dec
sti
enter
mov
rcl
xchg
mov
sti
addr16
(bad)
vpsllw
(bad)
loopne
dec
or
nop
movs
aam
call
pop
jmp
jmp
fs
(bad)
lods
jne
mov
and
xlat
cmp
pop
daa
or
push
mov
inc
push
inc
cmp
lea
adc
rcr
push
mov
ins
xchg
retf
xlat
lods
rol
sub
hlt
(bad)
or
inc
fiadd
push
aam
add
das
idiv
add
imul
stc
hlt
dec
lods
lods
gs
fisttp
and
inc
dec
mov
data16
adc
out
pop
arpl
cmp
cmp
sahf
out
repnz
mov
outs
frstor
repz
les
push
push
das
inc
mov
test
fld
lahf
push
add
mov
das
aam
inc
mov
jne
mov
pop
push
ret
scas
vmulsd
scas
cmc
dec
adc
inc
adc
loope
add
jno
bound
mov
idiv
mov
je
jecxz
xchg
aad
jl
inc
shl
push
pop
jbe
mov
shl
fistp
xor
push
clc
stos
xor
inc
imul
jmp
fmul
sbb
cmp
inc
leave
repnz
push
shr
ins
cmp
xchg
inc
imul
out
xchg
or
repz
xor
das
fld
out
cmps
jmp
ret
mov
inc
jnp
dec
xor
aad
sti
mov
ins
pop
mov
inc
cmp
and
mov
ret
cmps
cli
hlt
sti
jae
jo
dec
inc
test
add
fmul
ins
hlt
add
setbe
push
adc
mov
xchg
mov
mov
inc
sysenter
popa
add
mov
repnz
push
int
mov
imul
aad
dec
xor
sbb
popa
loop
sub
loopne
scas
mov
adc
inc
push
cs
js
mov
pop
sbb
out
push
mov
or
xchg
inc
inc
into
mov
(bad)
hlt
cdq
or
cmps
jecxz
jmp
xchg
add
mov
sub
mov
cmc
sub
movs
loope
iret
mov
jmp
jp
aad
ins
in
mov
or
pop
mov
rol
dec
sub
rcr
shl
inc
mov
push
xchg
mov
mov
std
dec
xor
adc
mov
push
add
sub
adc
adc
(bad)
imul
hlt
repz
lock
mov
and
xchg
lea
jmp
inc
push
push
call
cmc
push
jb
push
mov
mov
stos
mov
std
hlt
ror
xor
ret
icebp
dec
cld
rcl
fwait
pop
mov
out
inc
out
pop
jmp
nop
jg
mov
jle
jecxz
ja
test
xlat
pop
xchg
push
shl
add
mov
scas
jb
xchg
xchg
dec
out
adc
jae
ins
jmp
cmc
sbb
nop
add
movs
iret
add
mov
and
lahf
inc
aam
xchg
(bad)
xor
jmp
js
inc
loopne
or
push
xlat
or
jae
jp
mov
(bad)
or
sub
sub
loop
popa
test
adc
add
mov
sub
mov
test
mov
pop
push
aad
adc
mov
push
mov
mov
sahf
pop
out
nop
adc
pop
repz
test
and
jl
dec
ds
fidivr
iret
xchg
cli
aad
jl
popa
hlt
push
adc
cmc
(bad)
cmp
test
push
ficom
and
(bad)
sbb
and
test
jb
repz
jp
push
and
test
arpl
(bad)
inc
xchg
mov
or
mov
fisub
inc
bound
jne
icebp
jg
hlt
out
fst
mov
push
dec
push
push
in
xchg
adc
pop
jp
aad
das
fist
and
fisubr
add
int3
pop
pop
or
sar
push
jns
nop
xor
pop
enter
bound
int3
test
and
mov
push
adc
ret
push
out
adc
sub
xchg
or
outs
xchg
xchg
push
(bad)
daa
lods
and
lock
xor
fdiv
clc
fild
adc
xchg
dec
iret
mov
xchg
lock
push
ret
aas
loop
ror
das
test
in
fild
add
mov
or
push
popa
ja
daa
gs
in
bound
in
fst
addr16
xor
sahf
mov
imul
add
out
aas
mov
sti
push
dec
dec
lods
inc
jge
aad
popf
lods
fistp
aad
not
cdq
add
pop
je
sbb
lea
cwde
xor
jbe
jne
clc
xchg
ja
jno
je
shr
jp
loope
in
pop
out
cdq
push
cwde
jne
ds
popa
dec
fnstsw
std
mov
aad
mov
sar
or
xchg
pop
arpl
sub
push
add
xchg
je
ret
mov
loope
rep
xchg
loop
or
imul
push
push
push
or
add
jns
mov
clc
add
cmc
sbb
xlat
inc
adc
out
inc
repnz
aas
in
and
movs
inc
and
stos
pop
inc
ins
rol
add
(bad)
jmp
call
jnp
outs
shl
es
xor
adc
sbb
ret
loopne
mov
idiv
(bad)
xchg
loop
ins
(bad)
arpl
dec
lahf
add
push
mov
aad
daa
mov
sbb
outs
ja
inc
enter
inc
adc
pop
sbb
mov
push
fmul
icebp
imul
dec
sti
pop
test
push
cmp
xchg
pop
hlt
adc
push
loop
ret
push
in
loopne
out
enter
mov
lods
xor
add
push
shl
xor
gs
mov
and
adc
repnz
ss
xor
scas
add
inc
call
mov
pop
std
retf
int3
add
inc
dec
add
cmp
mov
jno
inc
jg
adc
xchg
jmp
mov
inc
out
and
int
mov
popa
ins
retf
adc
mov
xchg
retf
hlt
push
push
lods
jne
sbb
pop
sbb
push
xlat
gs
jnp
test
cmps
fisubr
inc
sahf
push
(bad)
out
out
pop
and
pop
dec
pop
xor
push
popa
pop
mov
cmp
pop
adc
jle
jb
enter
(bad)
push
dec
hlt
mov
mov
sbb
pop
xchg
xor
out
cmp
lods
in
js
xor
ficomp
aad
inc
xor
inc
add
(bad)
fistp
ret
fidivr
rcl
icebp
inc
mov
jmp
dec
pop
mov
or
aad
dec
mov
(bad)
sbb
fcmovne
mov
adc
hlt
and
lock
add
shl
lds
and
retf
cmp
pushf
and
outs
out
dec
hlt
pop
mov
ret
aaa
xchg
mov
mov
lea
sar
mov
add
je
pop
lds
cwde
hlt
aad
xchg
xchg
jge
(bad)
or
out
popa
jmp
push
(bad)
add
aaa
(bad)
inc
dec
or
cmp
adc
bswap
push
push
je
gs
int
add
loope
stc
add
mov
outs
std
hlt
(bad)
dec
nop
cmp
ins
mov
addr16
pop
ja
dec
stos
scas
das
(bad)
std
les
cdq
sbb
jmp
fwait
shl
xchg
inc
dec
aas
jnp
or
adc
xor
adc
callw
jg
jecxz
xor
push
aad
into
cmp
mov
rol
cld
out
cs
jp
add
in
dec
jns
push
cmp
lahf
sti
jle
pop
js
sbb
xchg
in
fwait
imul
fadd
outs
or
mov
stos
xor
lock
lea
aad
ds
cmc
retf
inc
and
aas
inc
or
push
and
sti
push
xlat
les
mov
out
aam
dec
mov
aad
imul
xor
cmc
aad
cld
jne
sbb
and
hlt
push
test
mov
sbb
jecxz
ds
loop
xor
or
xor
dec
mov
mov
and
cmp
cmp
imul
or
(bad)
pushf
pop
hlt
adc
ss
fdivr
add
hlt
call
aad
sahf
sbb
out
pop
mov
inc
mov
retf
ins
jb
fist
xor
adc
out
inc
push
stos
test
mov
or
add
in
sub
mov
mov
push
mov
add
mov
push
mov
push
mov
mov
mov
sub
cmp
jne
xor
cmp
jne
sub
cmp
je
add
mov
cmp
je
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
sub
cmp
jne
add
mov
mov
mov
mov
push
call
add
mov
cmp
jne
xor
mov
cmp
je
mov
sub
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
xor
cmp
je
mov
cmp
jne
mov
add
cmp
jne
mov
test
je
add
mov
mov
mov
mov
add
cmp
je
mov
xor
mov
cmp
je
mov
mov
or
mov
mov
mov
sub
cmp
jne
mov
mov
cmp
je
mov
xor
mov
mov
cmp
je
mov
mov
or
cmp
jne
add
mov
mov
cmp
je
mov
sub
mov
test
je
mov
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
add
mov
mov
mov
mov
mov
test
je
cmp
je
mov
xor
mov
cmp
je
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
add
mov
or
mov
mov
sub
mov
test
jne
mov
test
je
add
cmp
jne
mov
mov
cmp
je
sub
cmp
je
cmp
jne
add
cmp
jne
add
mov
cmp
je
sub
mov
cmp
jne
mov
test
je
mov
or
cmp
je
mov
mov
sub
cmp
jne
add
mov
cmp
jne
add
test
je
xor
mov
mov
mov
mov
mov
lea
mov
cmp
je
mov
cmp
je
mov
push
mov
mov
push
cmp
jne
mov
cmp
jne
mov
add
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
call
xor
mov
mov
cmp
jne
sub
mov
cmp
je
xor
mov
mov
mov
mov
mov
mov
mov
shr
sub
mov
mov
mov
mov
test
jne
mov
xor
cmp
jne
mov
cmp
jne
xor
mov
mov
cmp
jne
mov
cmp
je
add
mov
cmp
jne
sub
mov
cmp
je
mov
add
cmp
jne
or
mov
mov
cmp
je
mov
cmp
je
mov
or
cmp
je
mov
cmp
jne
mov
mov
xor
cmp
je
mov
cmp
jne
add
cmp
je
mov
mov
add
cmp
jne
cmp
je
mov
cmp
jne
sub
cmp
je
test
jne
cmp
jne
cmp
jne
sub
mov
push
mov
mov
push
cmp
je
mov
sub
cmp
jne
mov
cmp
jne
mov
cmp
jne
add
mov
mov
cmp
jne
cmp
je
mov
mov
mov
mov
push
mov
mov
push
xor
cmp
jne
mov
mov
cmp
je
mov
mov
cmp
je
mov
cmp
jne
sub
mov
mov
mov
dec
mov
dec
cmp
jne
add
mov
call
mov
cmp
jne
xor
cmp
je
test
jne
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
sub
mov
sub
test
je
mov
add
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
add
cmp
je
mov
mov
mov
mov
cmp
je
and
mov
push
push
push
call
cmp
jne
add
mov
cmp
jne
cmp
je
or
mov
add
cmp
je
cmp
jne
add
mov
mov
xor
mov
call
and
mov
or
mov
test
je
cmp
je
mov
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
xor
mov
cmp
je
sub
mov
cmp
jne
mov
xor
mov
cmp
je
add
mov
cmp
jne
sub
mov
mov
mov
mov
cmp
jne
xor
mov
mov
add
mov
cmp
jne
or
mov
mov
mov
cmp
je
mov
sub
mov
cmp
jne
mov
cmp
je
mov
mov
sub
mov
mov
mov
mov
cmp
jne
mov
xor
mov
cmp
je
mov
xor
mov
mov
xor
cmp
je
add
mov
mov
test
jne
mov
pop
cmp
jne
mov
mov
mov
xor
cmp
je
cmp
je
mov
or
mov
test
je
mov
mov
and
cmp
je
xor
mov
cmp
jne
mov
mov
cmp
je
mov
mov
xor
mov
cmp
jne
mov
mov
sub
mov
mov
pop
mov
pop
mov
sub
test
jne
mov
xor
cmp
jne
mov
mov
mov
mov
cmp
jne
sub
mov
cmp
jne
mov
test
je
cmp
je
test
jne
cmp
jne
mov
mov
leave
ret
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
cmp
je
mov
cmp
je
cmp
jne
mov
test
jne
mov
mov
mov
push
push
push
push
call
xor
mov
mov
push
call
xor
mov
mov
mov
push
call
mov
or
mov
push
push
push
call
mov
push
call
mov
cmp
jne
mov
push
call
sub
cmp
je
xor
cmp
je
mov
sub
cmp
je
mov
mov
mov
mov
push
push
push
push
call
mov
cmp
je
test
jne
mov
push
call
mov
add
mov
push
push
push
push
call
mov
sub
mov
call
mov
cmp
jne
sub
mov
cmp
jne
sub
mov
cmp
je
mov
sub
cmp
jne
xor
mov
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
or
cmp
jne
and
mov
cmp
jne
mov
mov
mov
cmp
je
mov
sub
mov
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jne
sub
cmp
jne
sub
mov
mov
mov
cmp
je
add
mov
test
je
mov
cmp
jne
add
mov
cmp
jne
and
mov
cmp
jne
add
mov
mov
test
jne
mov
and
cmp
je
or
mov
mov
mov
call
mov
cmp
je
mov
mov
add
mov
test
je
mov
or
cmp
je
mov
sub
mov
cmp
jne
mov
add
mov
mov
push
push
push
push
push
push
call
cmp
jne
mov
mov
test
je
mov
push
push
push
push
call
mov
push
push
push
call
sub
mov
mov
mov
push
push
push
call
mov
push
push
push
push
push
push
call
mov
push
push
push
call
cmp
jne
mov
cmp
je
sub
mov
mov
cmp
je
sub
cmp
je
mov
add
cmp
je
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
push
push
push
call
mov
push
push
push
push
push
push
call
cmp
jne
cmp
je
cmp
jne
mov
sub
mov
push
push
push
push
push
call
xor
mov
cmp
je
mov
test
je
sub
cmp
jne
xor
cmp
je
xor
mov
mov
test
jne
add
mov
mov
mov
mov
push
push
call
add
mov
push
push
push
push
push
call
mov
mov
xor
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
je
mov
cmp
jne
cmp
jne
add
test
jne
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
sub
test
je
mov
test
jne
test
jne
mov
mov
xor
cmp
jne
mov
xor
mov
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
cmp
jne
add
cmp
jne
add
mov
mov
cmp
jne
cmp
je
mov
mov
mov
pop
cmp
jne
mov
add
cmp
je
mov
test
jne
add
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
pop
mov
cmp
je
mov
add
mov
cmp
jne
mov
mov
mov
mov
mov
test
jne
mov
pop
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
mov
sub
test
je
mov
cmp
je
cmp
je
xor
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
sub
test
je
mov
sub
test
jne
mov
cmp
jne
mov
and
cmp
jne
mov
add
cmp
je
mov
cmp
jne
add
mov
mov
cmp
je
test
jne
xor
mov
mov
mov
mov
mov
cmp
jne
mov
mov
push
sub
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
xor
mov
test
je
add
cmp
jne
mov
sub
mov
cmp
jne
and
mov
mov
test
je
add
mov
mov
mov
test
jne
mov
cmp
je
mov
mov
mov
cmp
jne
cmp
je
cmp
je
mov
xor
mov
cmp
je
sub
mov
cmp
je
mov
mov
cmp
jne
mov
sub
mov
mov
cmp
jne
add
mov
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
mov
cmp
jne
mov
cmp
je
sub
mov
mov
mov
cmp
je
mov
mov
add
mov
xor
mov
mov
mov
mov
call
cmp
je
sub
mov
mov
cmp
jne
mov
sub
mov
cmp
jne
mov
mov
mov
mov
xor
mov
call
xor
mov
mov
cmp
je
cmp
jne
mov
or
mov
mov
cmp
jne
mov
sub
cmp
je
add
mov
cmp
je
cmp
jne
add
mov
cmp
jne
add
cmp
jne
xor
mov
mov
cmp
jne
and
mov
cmp
je
add
mov
cmp
jne
sub
mov
mov
test
jne
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
mov
test
je
mov
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
sub
mov
call
xor
mov
mov
cmp
jne
mov
and
cmp
je
mov
cmp
je
cmp
je
add
mov
cmp
jne
sub
mov
mov
mov
mov
cmp
jne
mov
add
cmp
jne
cmp
je
cmp
je
mov
xor
mov
mov
cmp
jne
add
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
mov
call
mov
sub
test
jne
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
mov
jmp
add
mov
test
je
test
je
mov
cmp
jne
mov
or
mov
cmp
je
mov
mov
sub
cmp
je
mov
mov
and
mov
mov
mov
xor
mov
add
mov
mov
mov
sub
cmp
jne
mov
cmp
je
mov
mov
push
call
mov
mov
or
jne
cmp
jne
mov
push
call
mov
mov
or
je
cmp
je
mov
sub
mov
add
mov
lea
mov
mov
inc
add
cmp
je
mov
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jne
or
mov
mov
mov
mov
cmp
jne
mov
add
mov
mov
cmp
jne
mov
sub
mov
mov
cmp
jne
mov
sub
mov
test
je
test
jne
mov
mov
add
cmp
je
mov
mov
mov
mov
sub
mov
cmp
jne
mov
test
jne
mov
cmp
je
sub
mov
mov
mov
test
je
mov
mov
mov
xor
cmp
jne
cmp
je
mov
cmp
je
mov
add
cmp
jne
mov
mov
sub
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
pop
test
je
mov
sub
mov
pop
mov
mov
cmp
jne
mov
mov
sub
mov
pop
add
mov
cmp
jne
add
cmp
je
mov
mov
cmp
je
sub
cmp
jne
cmp
je
add
mov
mov
cmp
jne
test
je
mov
mov
cmp
je
or
mov
cmp
jne
add
mov
mov
cmp
jne
sub
mov
cmp
jne
add
mov
mov
mov
mov
cmp
jne
mov
add
cmp
jne
xor
mov
cmp
je
mov
sub
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
push
mov
test
jne
mov
sub
mov
cmp
je
mov
mov
and
mov
mov
mov
push
mov
cmp
je
mov
xor
mov
mov
xor
cmp
je
sub
mov
mov
cmp
je
xor
mov
mov
cmp
jne
mov
xor
cmp
je
cmp
je
mov
and
mov
test
jne
mov
mov
mov
rdtsc
add
mov
mov
cmp
jne
mov
mov
cmp
je
xor
mov
mov
cmp
je
mov
cmp
je
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
add
cmp
jne
sub
cmp
je
xor
mov
cmp
je
cmp
je
mov
xor
cmp
je
sub
cmp
je
mov
sub
mov
cmp
je
or
mov
mov
mov
mov
cmp
jne
mov
add
cmp
jne
mov
cmp
je
mov
mov
mov
add
cmp
jne
mov
mov
mov
add
mov
mov
mov
sub
cmp
je
cmp
jne
xor
cmp
je
add
mov
mov
cmp
jne
mov
mov
add
mov
mov
mov
rdtsc
or
mov
test
jne
mov
mov
cmp
je
mov
add
test
je
cmp
je
xor
mov
cmp
jne
mov
xor
mov
mov
mov
cmp
je
sub
mov
mov
cmp
jne
mov
mov
sub
cmp
je
mov
or
mov
mov
cmp
jne
cmp
je
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
mov
test
jne
add
mov
mov
cmp
je
sub
mov
sub
mov
pop
mov
mov
pop
mov
sub
cmp
jne
cmp
je
sub
mov
pop
mov
sub
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
xor
mov
cmp
jne
mov
xor
mov
push
mov
cmp
je
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
xor
mov
mov
mov
mov
mov
add
mov
cmp
jne
sub
mov
test
jne
mov
mov
mov
mov
xor
mov
cmp
je
mov
sub
mov
mov
mov
sub
mov
dec
cmp
jne
mov
mov
mov
mov
mov
neg
add
cmp
jne
cmp
jne
mov
mov
and
test
jne
mov
mov
cmp
jne
mov
sub
test
jne
test
je
xor
mov
mov
cmp
je
cmp
je
cmp
jne
mov
mov
sub
mov
neg
xor
mov
mov
mov
add
sub
cmp
jne
mov
neg
xor
mov
cmp
je
xor
mov
cmp
jne
cmp
je
xor
cmp
jne
mov
mov
add
mov
add
mov
sub
mov
mov
or
mov
cmp
jne
add
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
xor
mov
mov
mov
mov
add
mov
mov
xor
test
jne
mov
add
mov
test
jne
add
cmp
je
cmp
je
mov
mov
mov
xor
test
jne
mov
add
mov
cmp
jne
mov
mov
test
jne
xor
mov
cmp
jne
sub
mov
cmp
jne
xor
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
pop
xor
cmp
je
mov
pop
and
mov
pop
sub
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
mov
cmp
jne
mov
movzx
test
je
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
mov
add
mov
cmp
je
mov
jmp
jmp
mov
add
mov
mov
mov
mov
push
lea
push
call
mov
sub
mov
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
mov
mov
mov
mov
add
push
mov
push
mov
push
mov
sub
push
call
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jne
jmp
mov
mov
mov
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
mov
jmp
mov
imul
mov
mov
add
mov
mov
jmp
mov
imul
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
mov
imul
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
movzx
mov
movzx
cmp
jle
mov
mov
mov
cmp
je
mov
test
je
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
movzx
add
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
mov
movzx
sub
mov
movzx
add
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
mov
movzx
sub
mov
movzx
movzx
cmp
je
jmp
movzx
test
jne
mov
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
cmp
je
cmp
jbe
mov
movsx
test
je
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsx
mov
movsx
cmp
jne
mov
movsx
test
jne
mov
mov
movzx
mov
mov
add
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
je
cmp
je
mov
test
je
xchg
dec
xchg
inc
mov
mov
mov
mov
mov
movsx
add
mov
mov
mov
jmp
mov
add
mov
cmp
jg
xchg
neg
xchg
neg
jmp
xchg
dec
xchg
inc
mov
movsx
xor
mov
movsx
sub
mov
mov
xchg
dec
xchg
inc
mov
movsx
sub
mov
mov
mov
movsx
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
xor
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
add
mov
cmp
je
mov
cmp
je
cmp
jne
sub
mov
mov
mov
test
jne
mov
pop
mov
cmp
je
test
jne
cmp
je
mov
add
cmp
je
mov
cmp
je
mov
mov
sub
cmp
je
mov
cmp
jne
mov
sub
mov
cmp
jne
test
jne
sub
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
je
xor
mov
cmp
jne
cmp
je
cmp
jne
mov
xor
mov
test
je
add
mov
test
je
cmp
jne
mov
xor
mov
cmp
jne
mov
xor
mov
mov
mov
pop
or
mov
mov
mov
cmp
jne
cmp
jne
add
mov
cmp
je
mov
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
mov
xor
cmp
je
mov
mov
sub
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
add
mov
mov
mov
push
sub
cmp
jne
sub
mov
cmp
je
sub
mov
cmp
jne
mov
add
mov
cmp
je
cmp
je
cmp
jne
cmp
je
mov
cmp
je
mov
sub
cmp
jne
cmp
jne
mov
and
mov
cmp
je
cmp
jne
mov
mov
cmp
jne
test
je
mov
add
cmp
je
mov
mov
test
je
mov
test
jne
mov
cmp
jne
xor
mov
mov
push
mov
test
je
add
test
je
xor
mov
cmp
jne
mov
cmp
jne
mov
add
test
je
xor
mov
mov
test
jne
xor
mov
mov
cmp
jne
xor
cmp
je
xor
mov
mov
mov
mov
cmp
jne
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
add
cmp
jne
mov
mov
pop
cmp
jne
mov
pop
sub
mov
mov
mov
mov
pop
mov
cmp
jne
xor
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
mov
push
mov
mov
push
mov
cmp
je
mov
xor
mov
test
jne
mov
sub
mov
mov
test
jne
xor
mov
cmp
jne
sub
mov
mov
mov
cmp
jne
mov
or
mov
cmp
jne
cmp
je
mov
mov
sub
mov
mov
xor
cmp
je
and
mov
pop
mov
cmp
jne
mov
xor
mov
cmp
je
cmp
je
mov
sub
mov
mov
pop
mov
sub
mov
pop
mov
sub
test
jne
mov
sub
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
xor
mov
cmp
jne
add
mov
cmp
jne
mov
add
mov
cmp
je
sub
cmp
jne
mov
cmp
je
mov
mov
mov
test
jne
xor
mov
cmp
je
mov
cmp
je
sub
cmp
jne
mov
cmp
jne
cmp
jne
add
mov
mov
mov
cmp
jne
add
mov
cmp
jne
cmp
je
mov
mov
add
mov
push
mov
or
mov
mov
mov
mov
add
mov
cmp
je
mov
add
mov
cmp
je
add
mov
cmp
jne
mov
add
mov
mov
mov
cmp
jne
sub
mov
mov
mov
mov
pop
cmp
jne
mov
pop
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
push
add
mov
mov
cmp
je
mov
cmp
jne
test
jne
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
pop
mov
pop
mov
sub
cmp
je
add
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
mov
mov
pop
mov
add
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
add
mov
push
mov
cmp
jne
mov
push
mov
sub
mov
mov
mov
or
mov
mov
pop
mov
mov
mov
pop
xor
mov
mov
cmp
jne
or
mov
mov
mov
cmp
jne
cmp
jne
mov
pop
add
mov
mov
cmp
je
mov
leave
ret
add
add
inc
inc
push
push
xor
cs
ins
add
add
push
popa
jb
jae
jb
jb
ins
push
xor
add
push
popa
jb
jae
jb
jb
ins
push
dec
xor
add
add
jb
jae
jb
jb
ins
dec
xor
add
push
popa
jb
jae
jb
jb
ins
push
dec
cmp
add
add
jb
jae
jb
jb
ins
inc
arpl
add
add
jb
jae
jb
jb
ins
inc
popa
je
add
add
jb
jae
jb
jb
ins
dec
xor
add
push
popa
jb
jae
jb
jb
ins
dec
cmp
add
push
popa
jb
jae
jb
jb
ins
push
cmp
add
push
popa
jb
jae
jb
jb
ins
push
dec
xor
add
add
jb
jae
jb
jb
ins
inc
jns
add
push
popa
jb
jae
jb
jb
ins
inc
imul
popa
jb
jae
jb
jb
ins
push
dec
xor
add
add
jb
jae
jb
jb
ins
dec
xor
push
push
inc
push
xor
cs
ins
add
add
push
gs
ins
addr16
je
ins
dec
outs
je
add
inc
gs
ins
addr16
je
ins
dec
outs
je
add
dec
outs
popa
fs
jne
jae
jb
add
add
imul
arpl
outs
add
add
inc
push
popa
imul
outs
add
add
inc
outs
popa
bound
imul
add
push
gs
gs
jae
inc
inc
add
add
je
jae
outs
arpl
jns
je
je
add
add
dec
outs
jbe
ins
imul
je
add
add
je
ins
addr16
je
ins
push
gs
push
add
add
outs
jae
popa
je
dec
gs
popa
add
add
dec
jae
imul
jae
bound
add
push
push
outs
outs
ja
add
add
arpl
ins
addr16
jne
je
outs
add
add
push
gs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
ins
push
add
add
dec
outs
popa
fs
je
imul
inc
gs
imul
outs
arpl
add
add
je
gs
je
jo
imul
add
push
gs
imul
outs
addr16
add
add
inc
gs
imul
arpl
add
je
ins
addr16
je
ins
add
add
inc
imul
dec
gs
popa
addr16
add
add
dec
outs
jbe
push
imul
add
dec
jae
imul
add
inc
gs
ins
imul
je
add
push
gs
jae
addr16
add
add
dec
jae
arpl
jo
jns
add
inc
gs
jb
jns
imul
add
je
imul
outs
addr16
add
add
push
outs
fs
gs
popa
addr16
add
add
inc
gs
inc
add
push
dec
inc
dec
xor
cs
ins
add
add
push
gs
outs
fs
inc
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outs
add
add
push
gs
popa
jae
inc
jb
outs
jb
add
add
inc
popa
fs
gs
fs
je
add
add
inc
jb
popa
je
push
push
add
add
inc
gs
jns
je
ins
push
imul
ins
gs
imul
jae
popa
fs
outs
fs
je
add
add
inc
ins
outs
bound
inc
ins
ins
outs
arpl
add
dec
outs
je
jb
outs
arpl
fs
outs
arpl
ins
outs
je
add
add
ins
inc
imul
imul
jb
add
add
popa
jo
jb
add
add
dec
jae
popa
fs
jb
je
push
je
add
add
fs
push
dec
jne
je
inc
jns
add
add
je
push
push
jb
outs
jb
je
add
add
jb
jo
outs
push
add
add
je
jne
jne
fs
outs
ins
jo
gs
outs
outs
push
je
je
jae
add
push
jne
jb
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
add
dec
jne
je
inc
jns
gs
outs
push
imul
add
dec
outs
popa
fs
imul
add
add
ins
jae
jb
jo
push
add
add
inc
jb
popa
je
inc
jbe
outs
je
add
add
push
gs
jbe
outs
je
add
add
jb
ins
jo
add
add
dec
outs
je
jb
outs
arpl
fs
arpl
ins
outs
je
add
add
je
jne
ins
push
popa
je
dec
popa
ins
gs
add
add
inc
ins
outs
jae
dec
popa
outs
fs
add
add
je
jb
jbe
je
push
jb
imul
imul
add
jb
outs
inc
add
add
push
jb
je
inc
imul
outs
bound
inc
jb
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outs
add
add
outs
bound
push
outs
ins
outs
arpl
add
add
je
imul
je
add
add
je
jb
arpl
jae
gs
jo
add
add
je
jne
jb
outs
je
push
add
add
dec
outs
je
jb
outs
arpl
fs
js
push
add
add
ins
gs
jae
push
gs
popa
jo
outs
jb
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
imul
add
push
gs
fs
imul
gs
imul
gs
add
add
jb
outs
push
add
add
push
popa
imul
ins
gs
bound
arpl
add
je
push
push
jb
outs
jb
je
add
add
outs
bound
dec
popa
outs
fs
add
add
inc
outs
je
jb
jb
je
arpl
push
arpl
outs
add
add
inc
jb
popa
je
push
gs
popa
jo
outs
jb
push
add
add
inc
gs
popa
jae
inc
jb
outs
jb
add
add
popa
jo
ins
ins
outs
arpl
add
push
popa
imul
je
jo
gs
bound
arpl
add
add
jb
ins
jo
push
add
add
imul
inc
jb
je
arpl
push
arpl
outs
add
add
jae
je
jbe
outs
je
add
add
je
outs
push
gs
js
gs
imul
gs
add
inc
gs
outs
fs
gs
imul
add
add
inc
gs
outs
arpl
gs
outs
outs
inc
add
add
inc
gs
jb
imul
inc
add
add
ins
jae
jb
jo
inc
add
add
inc
ins
outs
bound
inc
imul
inc
add
add
gs
imul
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
add
je
imul
push
jo
arpl
add
add
je
jne
jb
outs
je
jb
arpl
jae
add
inc
jb
popa
je
inc
imul
gs
gs
imul
add
inc
ins
outs
bound
dec
outs
arpl
add
add
je
inc
push
add
add
inc
gs
imul
bound
gs
add
add
inc
ins
outs
bound
dec
gs
outs
jb
push
je
je
jae
add
dec
push
xor
cs
ins
add
add
dec
jae
bound
je
imul
arpl
outs
push
jne
ins
imul
dec
jae
bound
je
bound
imul
outs
add
add
dec
jae
bound
je
jne
bound
inc
outs
outs
fs
outs
push
jne
ins
imul
dec
jae
bound
je
ins
jae
jne
jae
jb
ins
push
jne
ins
imul
jae
outs
ins
jo
gs
push
jne
ins
imul
jae
bound
je
jne
push
jb
imul
outs
jae
outs
push
jne
ins
imul
add
xchg
inc
add
inc
add
lock
add
nop
inc
add
add
add
inc
add
nop
or
add
inc
add
out
add
aam
add
sbb
add
or
add
outs
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
add
add
and
add
lock
add
inc
add
inc
add
add
add
add
add
add
add
or
add
push
add
mov
add
add
add
inc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
pop
add
add
add
add
add
cli
add
add
add
add
add
add
push
add
sbb
add
into
add
add
push
add
add
add
add
add
inc
add
add
add
add
les
add
inc
push
add
stos
add
add
push
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
cmp
add
fiadd
add
add
add
add
add
add
add
jbe
add
lods
add
add
add
add
add
add
add
add
add
add
add
push
push
add
mov
add
add
add
adc
add
sbb
add
fs
add
fiadd
add
cmps
push
add
sbb
add
les
add
cld
push
add
fadd
add
sub
add
add
add
sub
cdq
shl
lahf
dec
pop
push
repz
cli
xchg
in
adc
cld
hlt
sub
outs
mov
loopne
sar
hlt
ins
stos
imul
in
movlps
sahf
and
aas
icebp
fsub
adc
mov
mov
jmp
add
mov
mov
adc
jle
xchg
aad
je
shr
cmp
mov
dec
jo
sti
push
or
rol
xor
push
movs
(bad)
das
adc
push
mov
(bad)
mov
and
mov
mov
cmc
pop
aad
add
sbb
add
xchg
sub
addr16
jecxz
push
ficom
xchg
mov
aad
ss
pusha
pushf
cmp
fld
mov
ret
cwde
iret
les
addr16
cli
adc
rol
das
xor
cwde
aaa
and
add
xchg
xor
(bad)
adc
push
xchg
inc
push
rcl
sti
test
add
sub
movs
jnp
inc
push
das
(bad)
pop
inc
xchg
fwait
idiv
hlt
ins
push
mov
dec
fimul
hlt
jp
sti
push
clc
clc
dec
hlt
es
adc
and
sti
cmps
cmps
shl
hlt
push
ror
xor
and
cmp
mov
dec
xor
lods
hlt
int3
cdq
scas
mov
mov
test
sub
add
cmps
gs
sub
inc
jg
or
test
inc
sub
xor
aad
xor
xchg
into
inc
fsub
cmc
pop
dec
dec
cmp
xlat
test
mov
shl
xchg
xor
and
test
adc
and
leave
pop
inc
dec
or
cmovs
das
or
pushf
inc
mov
js
pop
xchg
mov
sbb
or
mov
mov
jl
xor
pop
push
adc
push
call
pop
mov
inc
xchg
add
sbb
int
pop
cmp
cmp
jmp
movs
jae
aad
and
(bad)
push
je
mov
hlt
enter
call
cmps
sbb
mov
pushf
js
out
ret
jle
xlat
push
pop
and
sbb
int3
sub
test
mov
ror
and
shl
into
(bad)
outs
out
shl
inc
mov
mov
cmp
mov
leave
fs
jmp
sub
pop
mov
rol
or
jmp
cmps
into
add
xchg
scas
push
cdq
adc
loopne
push
ficom
pop
mov
dec
push
add
sbb
jne
int
add
(bad)
pop
sahf
jb
std
aad
cmp
mov
jge
fwait
mov
rcr
(bad)
jo
inc
aaa
inc
adc
pusha
fld
rcl
mov
hlt
ror
(bad)
push
not
xor
popf
push
aad
inc
scas
mov
pop
fcomp
sbb
in
xchg
pusha
repz
adc
or
mov
das
and
scas
adc
cmc
(bad)
cmps
cmp
fxch
shl
nop
shl
cmp
lahf
or
icebp
mov
inc
mov
sbb
sub
or
adc
repz
dec
ds
mul
xchg
rol
dec
add
int3
ds
(bad)
hlt
dec
push
pop
shl
mov
je
enter
in
out
hlt
push
loopne
sbb
inc
push
shr
aad
push
jle
dec
cmps
iret
and
or
cmps
lds
cmp
hlt
test
enter
mov
adc
fidivr
push
mov
inc
pop
and
test
adc
lods
sbb
loope
fisttp
adc
push
(bad)
loopne
cmc
push
sub
or
adc
leave
sahf
jne
popf
mov
fwait
and
(bad)
clc
mov
not
test
pop
leave
dec
pusha
adc
dec
pop
call
jge
sub
ins
mov
dec
xchg
in
adc
rep
adc
scas
lahf
pop
(bad)
jne
not
sti
push
dec
mov
pop
and
xchg
icebp
xchg
lods
ss
mov
fiadd
shr
fcomp
test
xor
(bad)
out
or
sub
mov
and
outs
mov
scas
cmp
cmp
(bad)
jo
je
fist
or
push
hlt
add
and
or
xchg
push
scas
hlt
push
adc
add
jbe
fiadd
out
add
loopne
push
cdq
shr
out
jp
inc
test
cmps
cdq
test
mov
hlt
xor
repz
pop
pop
jb
pusha
sub
es
hlt
and
repnz
movs
or
mov
xor
mov
pop
and
cld
jb
rcl
push
jmp
push
sub
mov
not
jl
gs
sti
lds
xchg
and
loopne
mov
retf
xor
shl
inc
mov
pop
shr
cmps
mov
pop
and
lds
cmp
jns
cmps
sbb
pop
pop
hlt
outs
or
jbe
fdiv
adc
sub
test
xchg
es
pop
daa
pop
sbb
repnz
pop
scas
in
dec
fcomi
bswap
jmp
and
push
jns
ret
add
and
pop
cld
pop
inc
jge
aaa
push
sub
sbb
mov
ds
test
mov
cmp
fscale
call
sub
push
jmp
push
test
into
push
pop
aaa
xchg
(bad)
fdivr
adc
add
addr16
adc
dec
cmp
xor
scas
das
icebp
jle
mov
sbb
cmp
mov
mov
jb
xor
rcr
dec
dec
dec
cdq
push
and
xor
xchg
mov
jl
aad
dec
mov
inc
inc
ds
mov
icebp
add
aad
mov
jo
inc
sbb
or
xchg
fcomi
jg
inc
test
mov
cmc
jno
mov
nop
pop
nop
hlt
add
inc
inc
add
mov
xchg
xchg
movs
add
inc
xor
add
ds
stc
mov
push
and
adc
cmps
or
sahf
add
push
in
jmp
cld
cmp
and
cwde
cmc
es
dec
hlt
push
add
sbb
pusha
(bad)
cmps
inc
ds
call
fst
sub
pop
push
fcmove
bound
mov
out
xor
inc
and
add
out
xchg
popa
ja
add
push
xor
add
out
pushf
cmc
in
push
sbb
mov
call
(bad)
sbb
leave
icebp
in
popa
es
clc
test
mov
jg
sar
jb
stc
mov
adc
retf
iret
(bad)
push
pop
cmp
(bad)
out
pop
iret
inc
jp
lahf
add
pop
xor
sar
les
fsub
loopne
add
mov
mov
les
pop
(bad)
xchg
push
adc
test
leave
inc
push
adc
repz
push
fst
andps
pop
fist
sbb
xchg
(bad)
sbb
jne
shr
jmp
test
movs
adc
mov
push
ror
mov
xor
sbb
xchg
xor
mov
(bad)
jns
dec
lods
retf
push
or
jnp
add
fcomp
and
xor
je
cmc
sub
aad
and
lock
and
adc
xchg
add
push
int3
imul
imul
add
ficomp
fdiv
jmp
mov
mov
push
mov
pop
sahf
hlt
(bad)
xlat
into
data16
xchg
ret
(bad)
stos
pop
adc
add
(bad)
push
adc
mov
and
loope
aaa
cmp
or
fidiv
mov
js
stc
(bad)
jg
fcom
dec
add
sub
sti
xor
leave
sub
adc
add
inc
hlt
add
adc
mov
xchg
aad
fxam
stos
cdq
sbb
and
or
mov
push
and
aad
jge
jns
jp
xchg
cmp
xchg
std
int3
out
aad
sbb
pop
and
out
(bad)
xor
adc
xchg
out
cmps
xlat
test
stos
dec
movs
xchg
dec
lea
cmc
and
push
sbb
aad
xchg
sbb
bound
adc
dec
test
add
and
mov
push
push
adc
sbb
xor
je
cdq
js
pop
or
stos
sbb
or
adc
push
inc
mov
fld
xor
xchg
clc
xor
pop
stc
inc
add
jae
shl
ret
jp
sub
mov
popf
add
push
sbb
(bad)
int3
and
aaa
test
pop
in
xor
mov
scas
out
jnp
mov
xchg
push
jbe
or
out
mov
addr16
in
add
add
push
jnp
(bad)
xchg
or
xchg
xor
mov
aaa
inc
hlt
jg
shl
clc
jbe
adc
dec
push
xor
je
xchg
popa
sub
adc
lock
mov
(bad)
ds
out
imul
push
pop
sbb
and
sub
inc
xor
pop
cmp
xchg
xchg
mov
retf
mov
bound
pop
inc
jns
inc
pop
pop
xchg
fwait
in
ja
pmaddwd
idiv
push
jp
cmp
(bad)
stos
clc
movs
mov
test
test
(bad)
jnp
lods
div
mov
push
sub
dec
pop
fisttp
xchg
sbb
(bad)
or
stc
mov
and
push
or
and
test
ds
in
cmps
out
dec
stos
ret
test
adc
add
jl
adc
aad
test
mov
cwde
adc
jbe
lahf
jge
and
cwde
hlt
addr16
imul
ins
sahf
adc
aad
xor
dec
(bad)
stc
shl
inc
imul
and
or
in
pop
mov
or
scas
add
push
inc
mov
(bad)
ret
pop
shl
inc
pop
push
fstp
add
xchg
aas
cmc
xor
imul
cli
fist
cli
mov
aad
mov
sbb
xor
outs
cmps
adc
inc
aad
pop
lea
push
inc
imul
in
repnz
lock
mov
test
inc
pop
idiv
sub
das
aas
stc
cmp
cdq
adc
adc
and
enter
add
mov
repz
cwde
mov
jmp
adc
push
dec
cmp
dec
hlt
lock
pop
nop
adc
scas
test
stos
dec
pop
push
and
mov
fwait
adc
(bad)
cli
cmc
sub
outs
mov
inc
in
int
out
adc
xchg
xlat
retf
das
stos
mov
push
test
xor
test
pop
(bad)
mov
mov
nop
jbe
sub
fiadd
sbb
loop
(bad)
fxch
ret
fadd
aad
mov
sbb
add
ss
(bad)
icebp
mov
cmp
sbb
push
inc
je
cmp
fisub
sbb
pop
dec
test
inc
in
jo
push
xchg
push
loope
shr
enter
adc
jle
fwait
stos
fnop
shl
or
cmp
adc
and
adc
lahf
cdq
jg
adc
(bad)
jnp
pop
push
adc
fisubr
aad
jecxz
gs
mov
or
mov
ror
adc
nop
js
hlt
jp
pop
xor
adc
shr
jge
sti
mov
fdiv
jp
dec
stos
add
test
(bad)
rcl
mov
ds
aad
fnstsw
aad
sar
push
cmp
xchg
out
jmp
aad
dec
push
mov
dec
mov
cmp
dec
adc
movs
jne
pop
adc
mov
test
mov
rol
mov
sbb
xchg
mov
pusha
and
out
xchg
mov
(bad)
sbb
cli
loopne
popf
cmps
shl
repz
scas
inc
push
and
inc
and
repz
cli
sbb
aas
(bad)
dec
and
cdq
mov
inc
mov
push
lahf
mov
xor
dec
movs
ret
pop
bound
or
pop
adc
outs
sbb
int3
inc
inc
popf
pop
fwait
lock
mov
fsub
rol
je
inc
mov
out
inc
cwde
icebp
lea
adc
xchg
cmps
add
ret
and
pop
test
daa
popa
aad
aaa
in
pop
adc
and
movs
dec
dec
(bad)
mov
inc
cmp
mov
pop
push
inc
daa
pusha
cwde
loope
imul
jecxz
test
icebp
in
loopne
into
mov
add
add
adc
push
ror
hlt
pop
js
sub
sub
adc
aas
push
in
aad
test
mov
cmp
loop
repz
aad
mov
mov
inc
pop
push
out
push
call
aam
sbb
sbb
in
or
stos
xlat
jo
xor
aad
scas
out
cmps
mov
or
lods
jmp
push
or
fidivr
and
adc
hlt
into
jne
push
and
shl
pop
jae
sub
and
arpl
sahf
aaa
(bad)
cmp
cmp
lock
fnsave
loope
ret
push
and
mov
(bad)
inc
out
loop
mov
pop
out
sub
movs
mov
nop
stc
aas
cs
aaa
cmp
sub
inc
inc
icebp
js
jle
xchg
mov
pop
aas
sti
(bad)
(bad)
sti
and
adc
sti
mov
cmc
dec
jne
xchg
or
shl
pop
call
mov
push
popa
in
popa
pop
movs
gs
cmps
lock
pop
(bad)
adc
sub
push
aad
stc
ins
and
push
or
inc
movs
cmp
arpl
dec
pushf
jp
rcl
inc
xor
int
nop
jmp
loopne
(bad)
sbb
sub
inc
ror
cmp
and
pop
pop
retf
mov
cmp
jb
into
xchg
loopne
in
xor
bound
stos
adc
jno
jle
sti
pop
(bad)
push
pop
(bad)
xchg
cmp
es
test
adc
xor
jae
xchg
cli
inc
add
xchg
ret
inc
inc
and
lods
push
into
mov
or
inc
sbb
or
inc
sbb
bound
lods
movs
adc
push
ds
mov
retf
or
mov
adc
dec
hlt
cdq
mov
bound
cmp
dec
popa
mov
mov
xchg
in
pop
pop
mov
std
test
jge
aad
shr
inc
dec
pop
stos
jmp
loopne
hlt
std
push
sbb
adc
adc
aas
stc
and
scas
xchg
sub
ret
retf
jb
mov
sti
aad
sbb
inc
sub
repnz
call
div
in
retf
mov
mov
imul
or
test
dec
xor
sub
xor
pop
mov
movs
push
hlt
dec
data16
jb
mov
aad
adc
mov
loope
sbb
or
mov
jmp
sti
xchg
inc
jmp
or
arpl
and
repz
adc
jmp
inc
(bad)
ins
(bad)
push
fs
push
mov
outs
mov
cli
xchg
dec
cmps
mov
stos
retf
cmps
adc
xor
out
xor
mov
push
push
test
cmps
pop
mov
stos
gs
dec
mov
xor
cs
inc
jmp
cdq
or
sub
inc
and
and
aad
pop
add
(bad)
ds
dec
xchg
xchg
scas
retf
in
mov
test
int
mov
xchg
xor
sub
loop
aad
push
or
jbe
adc
cmps
xchg
pusha
call
mov
pop
cdq
por
cld
jg
fisub
xchg
imul
lock
xchg
jp
inc
neg
pop
mov
gs
cld
fstp
inc
cmps
hlt
pop
dec
adc
out
inc
ret
or
jae
inc
stc
inc
jo
repz
adc
or
pushf
shl
into
sar
pop
aad
or
data16
jp
repz
xor
leave
sub
mul
aam
lods
ja
xor
fisttp
xchg
cdq
bound
add
jp
xchg
sti
into
adc
mov
xor
sbb
loope
cmps
lock
into
mov
movs
fwait
sub
aas
retf
in
cs
lock
jle
clc
push
(bad)
inc
popf
mov
(bad)
or
(bad)
iret
and
dec
and
adc
or
cmp
push
add
mov
test
loop
in
aaa
pop
ror
js
fist
cmp
dec
clc
retf
adc
adc
inc
mov
aad
pop
ror
retf
mov
cmp
loopne
out
dec
div
not
jno
mov
pop
inc
xchg
mov
xchg
adc
inc
inc
div
fcmovnbe
pop
test
(bad)
pop
cmp
jge
xchg
xchg
xchg
inc
push
imul
jne
pop
ja
in
aaa
pop
or
push
das
shl
ret
push
cmc
dec
mov
mov
(bad)
(bad)
dec
in
pop
int3
mov
and
pop
jo
pop
xchg
mov
(bad)
jbe
adc
cmp
add
jnp
push
xor
sbb
mov
mov
(bad)
aas
ss
sbb
mov
je
mov
int3
stos
repz
adc
inc
iret
ins
xchg
repz
push
dec
hlt
cwde
and
inc
das
and
add
mov
repz
mov
jnp
mov
inc
pop
jae
mov
dec
cs
enter
cmp
or
aam
xor
jne
fst
mov
data16
and
xor
hlt
(bad)
fidivr
inc
adc
sub
aad
adc
lods
sahf
ret
sbb
inc
jmp
push
push
xchg
hlt
ins
push
paddb
xor
xchg
adc
inc
jno
sub
pop
inc
clc
mov
adc
and
call
in
shr
or
adc
mov
push
outs
lods
dec
popa
push
call
fcom
dec
jb
push
fnstenv
mov
jmp
xor
ja
inc
mov
jae
not
xchg
pop
mov
cmp
cmp
add
push
scas
and
pop
out
mov
inc
mov
mov
shl
shl
movs
shl
inc
fstp
pusha
push
jne
jo
dec
push
inc
lock
mov
outs
sub
cmps
ds
imul
cli
in
lock
mov
inc
popa
add
cdq
mov
add
mov
ds
mov
mov
adc
push
and
clc
and
dec
je
ret
outs
je
out
inc
js
pop
stos
clc
or
out
outs
fisttp
adc
cvtpi2ps
daa
pop
fwait
and
shl
mov
loop
dec
dec
and
jno
or
mov
stos
aam
cmp
rcr
xor
xchg
adc
xor
dec
and
aas
mov
(bad)
(bad)
aad
aaa
and
out
cmp
scas
xor
jnp
inc
mov
mov
adc
adc
xchg
adc
xor
inc
in
cmp
jle
(bad)
scas
mov
pop
into
or
int3
inc
push
rol
push
inc
sahf
and
push
in
jge
push
xchg
xchg
jmp
pop
cmc
fadd
and
repz
aam
cmc
call
dec
adc
stos
or
addr16
ss
pop
jne
or
push
push
dec
push
push
adc
pop
ret
popf
into
test
les
adc
lods
rcr
adc
mov
sbb
jge
daa
push
or
inc
mov
xor
aad
adc
pop
xlat
adc
cmp
adc
push
clc
mov
inc
sbb
data16
sub
fs
aad
repz
imul
outs
and
movs
sbb
pop
or
hlt
movs
out
push
adc
add
rcr
sub
push
cmp
fist
adc
dec
inc
(bad)
outs
pop
aad
popa
bound
add
cmp
jb
loope
xchg
(bad)
aad
xlat
shl
jge
shl
bound
adc
push
xor
sbb
sub
inc
adc
outs
mov
aad
stc
xchg
(bad)
rcr
inc
jae
imul
inc
push
test
pop
push
test
jo
cmc
push
loope
mov
pop
ret
add
jbe
push
jne
jns
xchg
es
es
cmp
jmp
adc
retf
call
outs
lods
aam
fld
test
pop
adc
jl
jns
mov
and
pop
jl
cld
inc
push
and
xlat
mov
xchg
fmul
cs
jp
fild
lods
gs
out
push
out
inc
mov
arpl
imul
adc
xor
(bad)
pop
add
add
aad
mov
ds
add
jno
(bad)
mov
in
enter
cs
pushf
add
mov
xor
mov
loopne
adc
cmp
pop
cwde
hlt
mov
out
out
repz
jge
fdivr
test
pop
(bad)
aam
mov
in
retf
out
jg
push
mov
out
jle
enter
les
ret
in
hlt
mov
pop
js
aad
mov
mov
inc
cwde
xor
push
lods
(bad)
inc
xchg
bound
into
call
mov
push
jno
sbb
into
aad
push
dec
sub
out
jo
pop
inc
retf
hlt
pop
das
mov
sub
mov
mov
mov
lds
test
(bad)
push
pop
pop
out
xor
mov
add
mov
push
adc
and
push
adc
mov
jg
popa
inc
hlt
inc
mov
outs
les
jnp
xchg
push
ror
loop
lods
jns
adc
inc
bound
jnp
mov
shr
xor
jmp
stos
cmp
mov
hlt
test
ret
and
cmp
xchg
ficomp
mov
xor
xor
push
in
jecxz
stos
ins
adc
gs
neg
fisttp
int3
or
sbb
pop
bound
xor
out
enter
hlt
stos
xchg
data16
and
jbe
pop
pop
inc
shl
mul
inc
fistp
scas
int3
sbb
ds
inc
sbb
mov
add
add
inc
aad
fldcw
inc
push
mov
mov
adc
inc
lods
and
push
sbb
sti
jne
mov
test
push
ds
daa
mov
fs
aad
jecxz
xchg
hlt
add
mov
xor
popa
sets
je
mov
jmp
sub
and
pushf
pop
dec
add
mov
pop
das
push
jns
js
aas
stos
sti
mov
fstp
hlt
or
push
in
fadd
movntps
mov
mov
inc
or
jmp
add
rcl
dec
jp
add
cwde
mov
xchg
jl
cdq
mov
dec
add
les
jns
add
hlt
sub
xor
rol
dec
adc
dec
ud0
fcmovnbe
call
fst
in
mov
out
cmp
sub
out
adc
rcl
sbb
iret
or
push
add
mov
popa
out
inc
call
xchg
out
js
(bad)
inc
sti
xor
push
adc
inc
loop
test
call
xchg
repnz
mov
(bad)
inc
mov
call
inc
bound
ja
test
adc
repnz
in
sub
(bad)
test
int3
call
(bad)
mov
repz
sbb
(bad)
push
xor
cmp
push
hlt
(bad)
outs
cwde
mov
je
jbe
pushf
sbb
cmc
(bad)
add
iret
cmp
adc
sbb
push
mov
jmp
mov
add
inc
lods
cwde
mov
lods
mov
sub
lds
mov
call
mov
adc
add
fild
fucom
inc
jmp
ret
hlt
pop
aas
call
mov
ret
inc
add
pushf
(bad)
jno
sub
imul
lock
clc
dec
aad
or
rol
jl
ins
add
cs
add
fscale
mov
cwde
xchg
aad
sub
adc
movs
gs
mov
sbb
adc
sti
adc
leave
jno
aad
mov
pop
out
lea
dec
movs
ret
mov
scas
or
pop
sbb
jno
(bad)
xchg
sub
adc
out
arpl
sbb
jae
fxch
pop
adc
adc
mov
mov
cli
jns
mov
dec
pop
push
add
mov
aad
dec
ja
in
loope
dec
inc
mov
jbe
and
movs
imul
ret
popa
jmp
xor
aad
pop
pop
scas
mov
addr16
inc
inc
xchg
inc
sbb
dec
gs
pushf
xchg
fimul
adc
lahf
and
int
rcr
inc
xor
sub
adc
push
dec
addr16
sbb
mov
xor
push
rol
jne
xor
mov
mov
jnp
sub
sbb
iret
ja
sbb
adc
int
xchg
sub
xchg
outs
mov
jecxz
bound
jae
inc
es
xor
daa
cmps
stos
and
aam
bound
push
int3
adc
mov
adc
rol
mov
lea
sub
pop
mov
test
push
xor
pop
repnz
loope
call
push
push
inc
cmp
mov
and
mov
out
int3
test
inc
mov
add
sub
fwait
pop
not
pop
or
push
rcl
fwait
imul
data16
daa
into
addr16
cmps
mov
pop
cld
cmc
ret
adc
inc
and
push
xchg
cmp
fwait
pop
and
lods
(bad)
sbb
pop
lahf
xchg
retf
inc
dec
dec
mov
rol
out
mov
test
retf
add
jge
pop
div
jae
in
popf
(bad)
pop
bt
ret
inc
and
mov
in
pop
loope
xor
push
push
daa
fld
mov
retf
movs
mov
xor
imul
adc
xchg
popf
in
hlt
sbb
gs
(bad)
push
push
inc
popa
dec
adc
xchg
or
lods
dec
mov
pop
sub
jo
and
sub
arpl
(bad)
dec
jne
inc
jmp
or
pop
aam
xchg
in
xor
sbb
or
add
and
adc
pop
inc
mov
hlt
xchg
mov
fisubr
add
jle
sub
adc
out
adc
mov
inc
aad
mov
add
sti
adc
fwait
xor
xor
xchg
in
adc
fimul
js
retf
add
xor
adc
xchg
cmp
adc
jbe
mov
not
bound
inc
push
lods
push
inc
mov
cld
ins
fimul
cmp
add
out
shl
cmc
aad
call
mov
mov
jb
outs
retf
ret
and
repz
jle
fistp
(bad)
ins
loope
shr
inc
mov
fadd
hlt
cmps
add
sub
call
xlat
dec
int3
fsub
mov
sbb
push
adc
mov
add
inc
sub
pop
ret
imul
jl
retf
jp
inc
add
inc
jge
adc
and
call
push
inc
das
pusha
add
adc
lock
sbb
hlt
fisttp
fwait
jecxz
xchg
and
popf
fwait
ret
aad
call
hlt
cmc
aaa
out
outs
pop
hlt
js
push
and
jno
ret
cmp
addr16
cs
hlt
pushf
adc
cmps
or
jb
lods
cwde
and
rcpps
stc
addr16
and
leave
mov
stos
push
mov
pop
xchg
shl
sub
(bad)
loopne
repnz
push
xor
inc
add
cmp
pop
adc
inc
lods
hlt
cwde
fidiv
or
mov
rcl
add
ja
repz
int3
jbe
xor
cld
fild
jmp
shr
cdq
sub
fdivrp
mov
aad
jns
shl
pushf
push
cmp
xor
sbb
adc
adc
inc
aam
mov
cmp
add
mov
or
mov
(bad)
xchg
cmc
sar
and
mov
push
lock
xor
inc
add
lods
jnp
hlt
(bad)
ss
pop
dec
xchg
sbb
arpl
jmp
jmp
ss
fbstp
jb
(bad)
pushf
pusha
cmp
loope
pop
mov
and
adc
call
sub
mov
jnp
addps
xchg
lahf
sub
mov
ins
inc
adc
jae
adc
int3
adc
dec
fwait
lods
iret
jo
stc
mov
test
pop
in
loop
aad
push
jae
inc
sub
pushf
push
jns
shl
pusha
js
cmp
ss
pusha
imul
cmp
cmc
push
(bad)
xor
mov
xor
push
jb
ds
popf
xor
icebp
add
mov
stc
repz
test
mov
cmp
or
inc
shr
sub
loope
add
retf
(bad)
adc
mov
repnz
mov
sub
ins
call
adc
mov
mov
xor
and
test
and
aam
jmp
pop
lahf
cmp
hlt
or
pop
jnp
in
jo
adc
call
shr
adc
test
dec
jl
push
jbe
jle
jno
stos
jge
push
xchg
sub
cmps
(bad)
retf
aaa
leave
mov
adc
leave
sahf
out
add
adc
adc
pop
arpl
repz
adc
and
rcl
inc
sub
loopne
popa
add
sbb
inc
mov
mov
popa
popf
aad
jmp
jae
mov
xlat
cwde
mov
movs
rcr
test
sahf
hlt
mov
cmp
in
adc
pop
cmp
aad
add
jno
fldcw
(bad)
das
rcl
mov
nop
dec
inc
and
fs
test
aaa
sbb
int
mov
xor
dec
dec
mov
fldenv
hlt
jecxz
outs
sub
push
out
pop
mov
inc
out
in
dec
out
cmp
call
fwait
pop
ficomp
inc
push
adc
fdivrp
mov
inc
jae
scas
sahf
dec
gs
retf
shr
in
and
not
shl
aad
pushf
aas
scas
mov
or
xor
in
fsub
fistp
add
add
pop
sub
dec
dec
xor
hlt
pop
push
cmc
in
add
les
mov
xor
outs
test
in
xor
cmp
inc
(bad)
jns
jmp
aad
sub
in
cdq
fisub
lea
mov
(bad)
icebp
retf
and
inc
lahf
lahf
lds
pop
imul
adc
retf
add
dec
int3
addr16
and
test
add
or
cmp
mov
and
aam
push
sbb
stos
xchg
test
je
dec
cdq
popf
mov
aad
mov
retf
cs
inc
jb
xchg
pop
iret
xor
mov
popf
sub
adc
jne
jnp
sub
mov
mov
dec
lea
adc
std
xchg
jmp
jge
pop
inc
and
push
outs
push
sub
(bad)
enter
sbb
sbb
shl
imul
push
pop
pushf
sub
imul
ins
in
xlat
jcxz
adc
shr
into
mov
xchg
test
adc
test
and
inc
hlt
call
sbb
xchg
pop
out
sub
and
xchg
push
aam
fdiv
(bad)
int
cmp
aad
adc
jmp
inc
dec
adc
movs
add
jne
mov
jmp
xadd
gs
lock
push
lods
xor
xchg
cmc
into
fld
jns
rcl
clc
and
les
pop
bound
pop
xor
add
mov
xchg
retf
pop
push
dec
adc
inc
inc
loop
pop
pop
(bad)
aad
das
jge
aam
xlat
xor
mov
sbb
and
cmps
lds
ins
or
sub
adc
daa
pop
stc
aas
sub
shl
data16
dec
mov
inc
test
cdq
in
rol
mov
les
or
iret
jge
or
inc
inc
enter
sub
int3
(bad)
push
lods
add
jno
inc
aas
cmp
hlt
xor
jo
add
push
test
add
jmp
in
cmp
mov
xchg
outs
jecxz
je
into
outs
jo
test
loop
daa
clc
repz
dec
enter
(bad)
sbb
push
inc
stos
or
aad
cwde
pop
idiv
pop
test
pop
cmps
movlps
mov
jae
ja
cs
loop
mov
xchg
adc
xchg
add
push
(bad)
repz
outs
cdq
inc
lahf
shr
enter
jp
xchg
mov
sahf
mov
inc
or
sub
xchg
fdivr
sub
ds
in
inc
aad
call
xchg
mov
inc
inc
loop
xchg
push
sub
or
jbe
pusha
in
fldenv
imul
cmps
jl
add
inc
and
repnz
mov
(bad)
aad
push
mov
mov
retf
hlt
into
rcl
mov
(bad)
sub
gs
xchg
adc
std
jnp
sbb
push
aad
shl
sub
and
add
jno
xchg
test
push
xchg
add
cmp
xchg
jmp
add
pop
inc
pop
adc
out
iret
ja
aad
and
push
lock
xchg
inc
sti
fs
cwde
inc
into
in
out
jg
inc
xchg
leave
push
imul
div
jl
into
inc
aas
jp
inc
mov
sbb
pop
call
hlt
adc
jnp
mov
sub
cmps
aad
std
xlat
inc
(bad)
pushf
add
dec
dec
adc
mov
iret
mov
neg
inc
cmp
enter
sbb
push
mov
jbe
or
fs
outs
das
jg
int3
pop
sub
fld
push
mov
cmp
push
adc
pop
cli
ja
cmp
push
es
fimul
fldcw
sbb
int
add
int3
xor
mov
shld
or
jmp
inc
and
push
enter
mov
adc
push
(bad)
push
sbb
sar
rcr
out
xchg
std
dec
or
pop
fadd
adc
call
xor
jmp
call
xor
movs
inc
cwde
aad
jecxz
xor
scas
add
jle
inc
je
adc
and
sbb
fst
pop
xor
call
mov
fiadd
push
sub
mov
dec
shl
jg
xor
pusha
movs
sbb
lds
xchg
daa
cs
pop
xor
inc
cld
push
cmps
(bad)
dec
ins
pop
push
mov
shl
push
cmp
adc
and
daa
sbb
sub
mov
(bad)
adc
mov
aad
or
retf
jae
xor
mov
or
dec
hlt
jne
cdq
mov
adc
sub
pusha
outs
clc
add
inc
and
js
inc
or
inc
out
xchg
stos
mov
pop
adc
push
ins
mov
cmp
pop
jp
sub
ins
dec
scas
mov
arpl
out
xchg
mov
jno
in
mov
rol
retf
cmps
lods
pusha
aad
or
imul
push
sbb
dec
jbe
pop
inc
hlt
mov
mov
in
fidiv
cld
adc
fidivr
std
mov
cdq
push
enter
push
add
jo
mov
cmps
add
xchg
in
dec
pop
adc
xchg
fisubr
movs
mov
dec
fs
mov
adc
addr16
cs
push
cmc
cmps
or
and
jmp
pop
test
sbb
loopne
aaa
in
pop
or
sub
sar
outs
shl
or
inc
jg
add
mov
inc
ins
ds
and
push
and
pop
aad
sub
add
sbb
dec
dec
or
cmp
aad
mov
pop
outs
xchg
adc
not
cmc
add
movs
jb
pop
sbb
adc
loope
add
(bad)
sbb
dec
call
sbb
mov
std
inc
enter
out
cld
jno
hlt
pop
out
sbb
xchg
cmp
add
mov
lea
inc
hlt
and
loope
pushf
sub
fistp
dec
push
std
push
or
inc
dec
xor
lock
adc
imul
dec
inc
xor
cmp
inc
(bad)
pop
sahf
pop
ret
push
mov
pop
clc
loop
mov
cmps
ss
je
push
es
xchg
daa
stos
out
in
(bad)
ja
xchg
sbb
hlt
pusha
push
pop
or
push
hlt
iret
sbb
adc
fiadd
stc
test
sbb
into
and
pop
or
add
mov
dec
(bad)
mov
mov
add
ss
data16
push
mov
adc
cmc
jle
lock
jo
lods
sti
in
or
adc
adc
xchg
or
mov
jl
adc
pop
(bad)
jbe
dec
hlt
test
leave
pop
xor
repz
shr
leave
jbe
push
mov
stc
dec
call
leave
push
jl
hlt
push
jo
cmp
push
push
push
and
inc
jg
lahf
mov
(bad)
mov
inc
push
mov
sbb
dec
aad
iret
shl
fisub
fst
adc
push
ja
adc
xchg
pop
in
xor
iret
gs
test
cmc
aas
imul
movs
and
hlt
adc
and
std
paddusb
xchg
jmp
sub
sahf
sub
and
adc
inc
adc
sub
fnsave
dec
adc
xchg
dec
rcl
lods
cmp
xor
das
sbb
test
and
fld
adc
sub
inc
xor
popf
psubw
(bad)
mov
xor
push
sub
loop
inc
lods
imul
call
daa
cs
mov
hlt
pop
adc
or
mov
test
ins
movs
in
or
adc
out
jp
bound
mov
fs
sub
adc
jno
sbb
xchg
hlt
(bad)
jl
int3
sub
mov
or
mov
or
aad
add
test
mov
push
jnp
jl
aad
nop
adc
push
push
mov
je
add
fisub
call
repz
sbb
push
mov
pop
int3
hlt
inc
cdq
sbb
adc
cld
push
mov
sbb
push
adc
lahf
popa
cmp
outs
aam
jg
cmp
cwde
gs
inc
or
mov
inc
cmp
pop
add
fidiv
in
inc
idiv
xchg
(bad)
test
jnp
fld
push
leave
out
sti
mov
cmc
add
out
pop
adc
fcomp
neg
or
adc
adc
aad
mov
xchg
jb
stos
adc
xchg
rcr
adc
pop
jl
jmp
dec
stos
add
int
bound
popf
iret
fs
mov
retf
cdq
lds
cwde
jmp
adc
push
sub
cmp
xchg
aam
push
jno
pop
xchg
xor
cmp
imul
aaa
mov
loope
dec
sbb
aad
pop
lods
push
test
sub
mov
outs
loope
cmps
call
test
adc
fxch
hlt
cmp
sbb
in
scas
ins
adc
sub
es
cld
xchg
(bad)
mov
inc
in
push
jnp
push
cmc
cmc
pop
and
inc
fs
dec
push
dec
mov
(bad)
mov
sub
pop
scas
jle
ret
cmps
mov
adc
dec
lea
cmc
call
rol
or
mov
mov
stc
es
pop
xchg
fwait
cmp
add
test
idiv
inc
mov
rcl
jo
ficom
mov
adc
pop
std
aad
ja
jno
xchg
jge
inc
push
call
pushf
or
jecxz
cmc
cwde
loopne
sub
jbe
and
inc
pop
(bad)
mov
jl
hlt
sub
aad
add
and
adc
out
xchg
or
es
aad
ds
fcom
xchg
inc
adc
mov
inc
mov
sub
adc
push
dec
fist
and
stos
xlat
xor
xchg
dec
std
jno
cmp
adc
push
push
jmp
or
pusha
aad
jp
sbb
arpl
imul
cmp
inc
test
or
sub
inc
inc
jle
and
cmp
aad
cmps
inc
cmp
mov
ins
inc
int
mov
dec
ins
mov
mov
addr16
hlt
les
cmp
mul
sub
pop
xchg
jp
xchg
pop
out
adc
inc
lea
int3
call
dec
xchg
cmp
fs
or
inc
sub
jae
sub
sub
xchg
scas
mov
inc
jmp
pusha
sub
add
aad
mov
(bad)
adc
push
pshufw
ss
enter
into
vpmullw
jbe
cmp
ret
sbb
sbb
in
aaa
fldcw
hlt
add
les
sub
and
hlt
addr16
dec
fnstcw
xor
or
test
jmp
popf
adc
add
dec
lods
mov
aad
inc
jmp
out
dec
mov
mov
test
aam
(bad)
push
pusha
popf
add
aad
sub
xchg
jnp
adc
add
adc
into
popa
lods
lahf
or
dec
xchg
or
je
les
pop
shl
dec
add
and
xchg
add
sub
mov
or
mov
je
sub
sbb
ret
loop
imul
push
or
stc
aad
mov
pop
cs
and
push
adc
ins
movs
xor
adc
pusha
idiv
push
rol
push
shr
or
and
hlt
mov
sbb
xchg
fwait
xor
popf
test
sub
xor
add
or
cmp
sbb
cmps
aam
mov
push
sub
test
in
lahf
push
(bad)
fsincos
mov
mov
imul
aad
js
inc
mov
sbb
gs
imul
lods
scas
mov
(bad)
jl
aas
call
inc
mov
adc
dec
mov
imul
xchg
fcom
ds
cmps
add
fdivr
dec
sub
push
xchg
inc
xor
adc
jb
movs
data16
aam
ret
retf
gs
or
xchg
shl
and
or
js
push
sub
adc
sub
pusha
outs
outs
int3
loopne
shl
or
hlt
inc
and
inc
jae
fwait
inc
pop
dec
mov
test
adc
xchg
outs
rcr
movs
stos
outs
pushf
jb
or
cdq
add
mov
mov
idiv
inc
xor
ss
jl
hlt
and
inc
in
adc
jmp
xchg
data16
xlat
mov
cli
jne
add
fcomp
pushf
lahf
xchg
and
sbb
aad
or
or
stos
inc
mov
scas
out
push
aam
inc
pop
cmp
aad
mov
daa
(bad)
inc
call
into
test
and
push
je
pop
push
adc
push
pop
xor
mov
into
stos
push
popa
ret
in
xchg
rcr
fs
pop
hlt
test
lea
adc
mov
rcl
std
hlt
fldcw
rcl
aad
xor
inc
call
mov
aaa
inc
call
xor
push
mov
mov
ficom
pop
popa
xchg
(bad)
fnstenv
hlt
pop
push
mov
icebp
cmps
cli
ja
inc
pop
or
inc
popa
ja
push
and
test
int3
bound
xchg
in
add
rcr
int
sbb
adc
jae
stc
jmp
and
cmc
jg
inc
mov
jo
inc
xor
iret
(bad)
and
out
xchg
data16
jns
call
(bad)
mov
jecxz
or
imul
cmp
movs
pop
ret
sbb
add
repz
es
jnp
out
mov
inc
pop
sbb
cli
mov
js
ins
(bad)
jg
add
popf
sbb
in
jno
jecxz
mov
push
ins
cmp
add
lahf
pop
pop
(bad)
lea
mov
adc
sub
mov
inc
ja
push
iret
out
xor
cld
mov
pop
out
xor
ds
imul
dec
aad
add
pop
push
add
out
cmp
jns
retf
cmp
aas
push
popa
adc
int
std
out
push
mov
mov
pop
ret
cs
bound
push
add
stc
aam
sbb
push
cmp
inc
outs
out
inc
push
inc
frstor
outs
mov
cmp
test
adc
or
dec
ror
sbb
cmp
or
aad
and
inc
adc
shr
cmc
add
in
pop
out
mov
adc
push
jg
xor
dec
aaa
(bad)
jl
jo
adc
mov
loopne
pop
gs
mov
jbe
mov
or
pop
xchg
mov
sbb
and
cmps
add
(bad)
sbb
mov
jmp
pop
enter
or
retf
xchg
ror
idiv
cdq
jp
adc
cmps
imul
aad
ja
in
pop
mov
scas
push
or
mov
xchg
sbb
nop
dec
adc
rol
mov
mov
pop
mov
pop
dec
mov
into
add
cmp
cmp
aad
sbb
rcl
scas
cmps
stos
xor
cli
hlt
push
iret
test
out
add
cmp
ins
daa
leave
mov
mov
adc
or
inc
dec
jmp
hlt
jl
scas
xchg
repnz
dec
or
xor
cmp
dec
rcr
fld
add
pushf
jg
sub
cmp
inc
arpl
cmps
jo
jb
lock
push
gs
sbb
out
hlt
fnstsw
xlat
repz
inc
adc
add
pop
jmp
cmp
leave
inc
xchg
push
outs
or
xor
ja
push
lods
jecxz
shl
ins
je
xchg
aaa
movs
(bad)
in
in
lahf
sahf
sub
imul
sar
push
sbb
add
mov
enter
out
xchg
rcl
hlt
inc
in
jb
mov
call
hlt
inc
retf
mov
sti
test
hlt
and
hlt
loopne
adc
adc
mov
stos
iret
or
push
test
push
add
scas
dec
addr16
fdiv
mov
dec
shl
mov
mov
push
sub
xchg
adc
bound
stos
or
adc
loop
mov
xchg
rcl
add
out
adc
adc
mov
out
je
aad
fcom
push
aam
dec
repz
inc
imul
sbb
test
xlat
into
adc
stos
(bad)
xor
cmc
aaa
rol
dec
mov
fdivrp
pop
jo
popa
stc
push
adc
test
ds
in
mov
(bad)
xchg
imul
fstp
pop
push
pop
pop
hlt
cmp
xchg
das
adc
sbb
rol
not
sub
push
sub
push
adc
cmps
(bad)
ja
jle
into
test
adc
imul
xchg
add
mov
add
cmovne
inc
sti
pop
stos
pusha
clc
or
mov
xchg
ds
aad
jmp
daa
sub
aad
mov
sbb
arpl
push
jne
mov
inc
sbb
jns
cdq
out
adc
icebp
jg
inc
dec
push
sub
iret
(bad)
dec
stos
xchg
push
add
cmc
mov
cmp
or
loopne
xor
loope
jns
xchg
mov
movs
xor
pop
dec
or
mov
iret
jno
xchg
in
cmp
jmp
mov
mov
out
fbstp
icebp
(bad)
jbe
repz
add
mov
popf
mov
push
xchg
jne
dec
bound
iret
xchg
cmps
shr
cmp
in
and
pop
outs
adc
xor
push
inc
mov
or
rol
(bad)
(bad)
imul
sbb
(bad)
jmp
adc
pushf
retf
loope
push
add
push
dec
outs
inc
pop
add
retf
inc
and
mov
cmps
jbe
fisub
je
pop
xor
hlt
loopne
cmp
adc
jl
ja
rol
jmp
cmp
outs
xchg
dec
xor
or
(bad)
dec
dec
ds
inc
add
inc
bound
pushf
and
rcr
cmc
pop
lock
mov
cmp
in
and
dec
push
clc
cmp
js
inc
fcom
fisubr
mov
ror
into
add
gs
pop
jl
pop
retf
ret
sub
test
adc
jp
aaa
sbb
jno
xchg
add
mov
mov
or
out
pop
adc
and
dec
pop
inc
mov
pop
dec
(bad)
mov
add
adc
bound
sbb
cmp
ins
sti
(bad)
jmp
hlt
imul
shr
dec
adc
les
mov
mov
xchg
inc
jne
pop
sbb
ins
out
in
in
push
mov
mov
aaa
aad
mov
pushf
repnz
hlt
mov
or
dec
imul
out
leave
pop
popf
xor
ficom
loope
pusha
dec
push
std
out
inc
cmp
movs
sbb
sbb
cmps
(bad)
shl
or
std
out
out
mov
arpl
in
fld
inc
xor
adc
dec
lods
outs
popa
sbb
es
jmp
xor
fisub
inc
jg
mov
push
fisub
inc
pop
and
mov
pop
adc
xchg
xor
(bad)
fist
sub
pop
popf
in
in
aas
inc
dec
sub
add
aad
jns
mov
mov
loop
pop
dec
add
mov
(bad)
cmc
mov
dec
pop
cdq
mov
dec
fbld
inc
push
xlat
xchg
movs
sub
fldcw
sub
fmul
ficom
push
popa
push
(bad)
gs
dec
out
xchg
js
pusha
icebp
push
jmp
mov
lds
mov
hlt
cmp
cli
adc
int3
cmp
dec
or
int
mov
dec
in
mov
fcomi
xchg
in
push
cs
sub
inc
pop
sub
xor
sub
div
fnsave
call
inc
shl
into
cmps
loop
cdq
aam
cmp
adc
dec
in
dec
mov
lods
hlt
lods
lods
adc
xchg
je
loop
into
dec
leave
aad
pop
xor
jae
mov
xchg
cmc
mov
(bad)
inc
adc
repnz
pushf
mov
(bad)
call
sti
inc
or
loop
add
into
je
xchg
call
jecxz
add
stos
xor
test
aad
sar
xchg
mov
mov
pop
adc
cld
(bad)
(bad)
jmp
test
pop
pop
inc
adc
out
and
mov
fistp
jns
je
dec
pop
adc
gs
xor
fst
jbe
mov
into
push
aas
inc
popa
lds
jb
mov
cmc
and
fcomp
sub
adc
mov
popa
pop
cmp
sub
xchg
inc
mov
or
cmp
inc
xlat
mov
in
imul
outs
xchg
inc
adc
inc
xchg
(bad)
and
cdq
sahf
adc
loope
mov
push
fwait
pop
jmp
hlt
or
(bad)
pop
(bad)
sti
fs
jb
sti
sbb
pop
(bad)
aam
adc
cmc
loopne
xchg
and
push
shl
test
or
int3
nop
in
test
dec
or
cmp
jmp
aad
leave
inc
in
push
jmp
fdiv
mov
push
pop
push
shl
(bad)
pushf
(bad)
push
cli
pop
call
add
jno
ficom
repz
sbb
dec
add
xchg
xor
inc
retf
mov
pop
hlt
clc
int3
mov
sub
out
ins
jb
fsub
cmc
jb
daa
sbb
sbb
inc
mov
or
adc
push
scas
mov
mov
dec
shr
(bad)
xchg
js
aad
daa
in
adc
je
stc
fld
inc
xchg
in
mov
mov
mov
sub
cmps
(bad)
aam
sbb
in
dec
das
sub
sbb
fdivr
test
call
pop
sub
fbstp
or
inc
sbb
and
hlt
in
cmps
and
jl
adc
ins
mov
mov
mov
push
out
mov
xor
jb
and
xchg
adc
push
fmul
push
push
inc
mov
ins
in
xchg
fwait
and
sub
aam
sub
in
loop
xor
jmp
mov
sub
mov
sbb
test
push
adc
aas
fidiv
or
push
and
xor
and
cmps
jmp
or
repnz
xchg
mov
inc
cld
pop
dec
lahf
inc
movs
in
xlat
cmps
dec
mov
(bad)
cli
fcmovu
pusha
inc
adc
les
mov
xor
into
inc
xchg
pop
push
dec
jmp
data16
sbb
aas
test
and
and
jl
xlat
jno
test
test
adc
js
jo
loop
(bad)
cmc
sub
sbb
repz
sub
clc
ret
mov
je
adc
push
cwde
scas
add
aad
fnstsw
dec
out
popa
nop
and
mov
jmp
cmp
push
imul
push
retf
test
pop
cmps
stos
aad
pop
(bad)
jmp
addr16
xor
jg
push
ffree
push
stos
adc
dec
xlat
daa
out
hlt
ds
into
push
mov
sub
fbstp
cmps
dec
aad
xchg
lea
dec
mov
repz
int
hlt
xor
fmul
xor
rcl
int
and
dec
aad
push
xchg
pushf
inc
imul
imul
test
push
add
xchg
popa
mov
(bad)
popf
test
jp
xchg
dec
popa
in
cmp
addr16
fsubrp
xor
sbb
stos
leave
popf
aas
nop
or
adc
fimul
aad
pushf
leave
add
les
xor
xchg
popa
jbe
aad
clc
cld
std
(bad)
or
push
inc
dec
sub
(bad)
and
push
sar
adc
repz
dec
push
xchg
and
mov
pop
call
je
fisubr
and
arpl
jnp
pmaddwd
push
pusha
(bad)
loop
sub
mov
jae
adc
lods
jge
cmp
jnp
dec
xor
push
mov
out
shl
inc
stos
adc
inc
lahf
push
xor
sbb
inc
int
sbb
add
jmp
jge
ficomp
ins
mov
retf
sbb
les
lods
in
dec
les
movs
mov
ja
aam
mov
push
jge
or
or
xor
xor
mov
dec
cmp
xchg
cmc
mov
int
cmp
out
xchg
sub
jge
out
mov
(bad)
jg
dec
retf
and
out
mov
sbb
into
wbinvd
jne
or
fbld
add
(bad)
jg
rcl
pop
test
push
or
repz
inc
pop
cmps
mov
nop
cli
sysexit
xchg
jecxz
xor
fs
lock
cmp
push
in
push
jmp
je
scas
push
lods
pop
push
test
bnd
gs
int3
rol
mov
jmp
mov
fcom
jmp
xchg
mov
imul
inc
and
pusha
scas
mov
xchg
retf
sahf
je
pop
popa
jne
mov
cmp
mov
rol
sub
shl
test
jnp
cwde
das
mov
arpl
mov
mov
jmp
mov
repnz
mov
push
dec
mov
aaa
jmp
jmp
xchg
push
repnz
adc
aaa
sub
div
and
push
jae
loopne
cmc
or
scas
mov
adc
pop
outs
(bad)
pop
fst
push
mov
in
jo
and
sbb
dec
lea
retf
mov
(bad)
sub
xchg
hlt
shl
adc
add
fmul
cmps
mov
jmp
adc
adc
fld
pusha
outs
mov
je
les
mov
cmp
adc
jae
js
lock
sub
sub
shl
inc
mov
popa
aam
repz
cmp
sar
jne
inc
aam
ss
dec
les
cmc
adc
jae
repz
in
adc
adc
xor
hlt
add
test
fsubr
iret
pushf
mov
jbe
add
jo
out
cld
aam
xor
inc
stc
and
in
inc
inc
loope
dec
enter
retf
dec
ret
rol
hlt
(bad)
mov
sbb
mov
in
shr
in
jbe
adc
je
mov
leave
pop
mov
xor
bound
xchg
sbb
mov
call
xor
xor
das
sbb
mov
push
outs
movs
(bad)
ror
pop
mov
push
adc
daa
sahf
adc
xchg
not
xchg
loop
add
cmps
sbb
xor
popa
imul
cli
dec
stos
popf
aas
ds
out
aad
pop
sub
inc
inc
cmp
enter
int
or
js
clc
adc
inc
loopne
jmp
push
adc
xchg
mov
or
or
and
push
(bad)
sbb
push
mov
xchg
je
int
loop
push
xor
xchg
mov
retf
int
or
lods
adc
iret
dec
es
out
inc
aad
sub
push
push
rol
sbb
es
mov
std
xchg
sub
(bad)
out
arpl
pop
inc
enter
jecxz
aad
ret
cmp
push
movs
std
xor
hlt
xchg
mov
popa
jb
enter
xlat
push
cwde
sti
adc
and
adc
xchg
mov
xchg
add
and
adc
hlt
or
sbb
enter
jbe
cmps
pushf
or
aad
pop
adc
mov
ret
pop
mov
dec
rol
xor
imul
hlt
push
inc
jns
ror
icebp
sbb
xchg
sbb
push
dec
pop
nop
sub
add
mov
push
pop
mov
int3
test
iret
xchg
xor
ins
xchg
ss
pop
test
cmc
dec
rcr
xchg
fs
adc
adc
sbb
jge
aad
daa
ficomp
bnd
fcomp
rcl
aad
inc
(bad)
imul
xchg
cmp
jl
ins
leave
je
aas
xor
cmc
fdiv
or
and
mov
jl
imul
test
pop
fadd
mov
sub
cmp
jle
das
mov
aad
pop
(bad)
(bad)
add
sub
dec
mov
xlat
or
aas
fldenv
in
imul
add
mov
or
adc
push
loopne
xor
or
push
sub
add
das
adc
fmul
pop
stos
frstor
repnz
mov
out
enter
adc
pop
cmc
push
inc
call
hlt
retf
fs
rcr
icebp
aad
lahf
int3
xor
data16
and
call
fs
mov
jno
(bad)
ficomp
adc
call
arpl
cli
lods
fdiv
mov
push
hlt
xlat
nop
hlt
mov
push
(bad)
xlat
adc
int3
jecxz
aad
pop
cmps
xchg
sbb
ds
mov
xchg
push
movs
aam
(bad)
and
pop
int
lods
xor
jo
and
and
arpl
mov
cmps
adc
sub
dec
hlt
clc
sbb
push
adc
cmp
adc
or
xchg
outs
dec
push
retf
(bad)
cmp
repnz
push
sti
movs
sub
jnp
loope
adc
dec
xchg
mov
sbb
sbb
xchg
inc
jo
cmp
scas
adc
add
ficom
inc
mov
mov
sub
stos
ins
aaa
xor
inc
adc
shl
sub
mov
sub
mov
in
mov
adc
sub
call
push
mov
neg
inc
inc
mov
push
call
dec
push
aam
ret
mov
xor
repnz
pop
clc
inc
pusha
popa
pop
fbld
xor
push
jne
pop
lea
adc
popa
or
mov
jmp
pop
cmp
ins
mov
and
repz
je
loope
xor
int3
mov
cwde
sar
xor
mov
cmp
imul
cmc
sbb
inc
imul
sahf
mov
aad
pushf
push
mov
inc
les
xor
iret
hlt
jo
xlat
pop
jp
mov
mov
mov
loope
aad
aas
xor
ins
and
outs
stc
fstp
mov
hlt
and
jg
imul
ins
scas
push
mov
inc
not
fs
or
cmp
or
retf
jb
sbb
cmc
xor
bound
outs
mov
out
scas
std
arpl
add
dec
dec
xchg
pop
std
inc
push
and
aaa
cs
lods
push
push
and
jg
pop
xchg
push
jp
xchg
mov
je
shr
sbb
nop
or
xchg
sbb
add
mov
cmps
in
lods
inc
dec
xchg
popa
test
cmps
(bad)
cmp
loopne
mov
push
mov
std
inc
in
cwde
fnstenv
jecxz
mov
dec
movs
mov
push
jo
int
xor
cs
call
xor
hlt
mov
push
pusha
in
pop
mov
adc
shl
es
mov
add
test
enter
xor
sbb
aad
aad
inc
adc
pop
inc
pop
mov
adc
hlt
push
test
cmp
xor
stc
mov
cmp
js
aad
or
rcl
imul
inc
in
test
loope
aaa
inc
or
push
xor
mov
cmc
jbe
pop
push
push
ret
adc
pop
scas
es
jno
cli
aad
sub
retf
cmp
add
or
jp
or
xchg
cdq
cli
lahf
aam
and
cmc
jge
les
sub
xor
retf
xchg
stc
(bad)
test
cli
fstp
cmps
adc
nop
aad
test
sti
sub
iret
push
aad
cmp
aam
mov
sbb
shl
dec
retf
gs
and
cmp
imul
aam
rcl
push
jns
xchg
jmp
test
ret
jns
int
and
adc
mov
jecxz
add
(bad)
jmp
add
mov
(bad)
mov
pushf
push
hlt
fidivr
in
nop
mov
xchg
xor
pop
mov
xor
add
sub
retf
mov
jno
enter
cmps
adc
adc
jbe
inc
jp
jl
pop
pushf
hlt
add
push
sub
setne
or
mov
adc
dec
add
dec
lods
call
test
mov
add
aad
jns
xor
loop
sub
add
push
add
push
add
clc
push
pop
adc
adc
push
nop
mov
jmp
jle
imul
dec
mov
xor
jecxz
hlt
cld
in
mov
jnp
sbb
pop
mov
adc
into
inc
sub
hlt
jmp
adc
(bad)
aad
sbb
and
(bad)
cmp
std
in
es
xchg
paddb
xor
fcmovu
sbb
jns
aas
aas
sar
add
popf
lock
or
das
inc
cmc
pop
mov
ret
into
mov
pusha
xchg
push
hlt
sbb
mov
in
mov
aad
imul
inc
inc
or
cwde
stos
icebp
repz
lock
sub
mov
pop
inc
out
xor
stc
out
sbb
inc
test
jns
inc
xchg
adc
dec
pop
imul
dec
stos
int
pop
call
ja
or
dec
hlt
(bad)
sti
mov
and
or
jno
aad
mov
and
outs
push
lock
mov
xchg
dec
xchg
jge
xchg
inc
inc
inc
jmp
pop
hlt
pop
mul
call
(bad)
outs
scas
sub
mov
xchg
mov
lds
inc
push
mov
xor
popf
inc
dec
cmp
cmp
bound
inc
in
or
xor
fcom
push
add
shr
(bad)
aad
adc
aaa
ffreep
sub
xor
jle
cli
jnp
hlt
sub
mov
shl
cmp
test
jle
loop
das
clc
or
xchg
inc
push
push
mov
add
push
(bad)
mov
loopne
pusha
cmp
jl
push
sub
aaa
in
gs
push
ds
jecxz
sub
aad
test
pavgw
cmp
cmp
sub
pop
and
arpl
lds
dec
shl
pop
xlat
dec
repz
sbb
js
cli
aam
retf
xchg
ins
mov
hlt
xlat
and
push
lea
xchg
in
movs
(bad)
neg
jbe
xchg
aad
sbb
scas
push
mov
inc
xor
outs
fisubr
clc
popf
inc
jmp
out
xchg
imul
nop
mov
loop
test
sbb
adc
aam
push
lock
fisubr
in
dec
dec
adc
mov
fwait
sti
clc
or
pop
pop
sahf
out
fcmovnbe
out
pop
aad
outs
aaa
or
dec
retf
hlt
xor
cmp
mov
ja
aam
mov
and
pop
mov
add
mov
inc
hlt
cmc
jmp
(bad)
scas
pusha
and
hlt
cmp
pop
jge
(bad)
and
or
push
push
push
hlt
ds
hlt
xor
xor
xor
gs
outs
int
cdq
aad
sbb
mov
and
sbb
jno
adc
and
xchg
ja
mov
push
verw
xchg
int3
cmp
push
aad
stos
es
mov
adc
stos
sub
int
push
adc
or
push
call
inc
cmc
or
(bad)
sbb
and
pop
fstp
dec
push
sub
mov
dec
loop
mov
mov
inc
call
pusha
les
ror
mov
(bad)
lds
(bad)
ins
mov
xor
mov
xlat
retf
dec
hlt
mov
(bad)
call
out
xor
pop
jmp
or
mov
push
cwde
adc
inc
iret
inc
aam
xchg
xchg
pop
or
xor
inc
ret
or
loop
push
push
cmc
xchg
out
adc
mov
inc
or
lods
popf
hlt
jmp
sbb
aam
sub
pop
jmp
scas
out
xlat
movs
adc
cmps
int3
lods
inc
mov
fidiv
xor
imul
(bad)
scas
xor
sub
inc
sub
clc
xor
pop
cdq
xor
rol
xor
movs
add
inc
inc
hlt
xchg
adc
stos
jg
outs
and
cmps
sbb
test
inc
adc
sub
ret
aad
xchg
adc
(bad)
pop
sbb
sub
mov
mov
fisttp
fst
pop
call
xchg
test
pop
cmps
or
lods
rol
push
test
outs
cmp
sub
cmp
pop
add
out
mov
inc
jmp
sub
outs
add
(bad)
cli
into
and
dec
or
imul
mov
ficom
xchg
dec
xor
mov
xor
xor
mov
xchg
aaa
fild
mov
pop
sub
inc
ret
xchg
cmp
leave
pop
mov
mov
ret
mov
jmp
leave
in
inc
sub
sar
ds
push
call
test
push
(bad)
cmc
inc
mov
inc
jl
or
cmp
jge
dec
loope
xchg
inc
and
sub
lahf
xchg
ret
ss
movs
xor
xchg
push
mov
add
xchg
shl
fst
daa
or
pop
dec
dec
and
mov
adc
aad
mov
inc
push
(bad)
add
(bad)
mov
or
sbb
mov
popf
test
unpcklps
ret
sahf
inc
pop
adc
mov
xor
ja
aam
ret
sub
xchg
retf
cmc
aad
rol
pop
ret
mov
mov
repz
xchg
test
bound
add
fdiv
ret
mov
add
jo
jne
in
add
dec
jne
add
cmps
xor
iret
jb
pop
and
inc
mov
bnd
cmc
push
sub
cmp
std
adc
adc
push
dec
cmp
scas
repnz
cmps
rcr
mov
add
xchg
inc
jns
sub
mov
mov
outs
add
inc
loop
push
jl
jg
in
add
xor
xor
lods
nop
add
hlt
push
cdq
hlt
mov
int3
mov
pusha
jmp
dec
lods
enter
push
pop
sbb
test
sbb
and
xor
test
push
adc
movmskps
pop
arpl
(bad)
fdiv
mov
jg
lods
mov
push
fild
mov
imul
sbb
cmp
inc
jae
mov
in
aad
jge
push
push
inc
mov
mov
pop
push
lock
pop
mov
and
sub
or
cli
loope
and
cmp
ds
ja
jmp
cs
jne
(bad)
aad
jl
dec
les
mov
mov
xor
pop
hlt
(bad)
mov
cmp
clc
inc
sbb
dec
loope
in
pop
shl
xchg
mov
dec
push
pop
or
in
sbb
push
popa
inc
pop
int
cmc
sub
xor
in
cli
and
inc
xor
add
inc
dec
xor
jae
out
inc
pop
sbb
pop
scas
sbb
aaa
push
xor
xchg
mov
push
jmp
push
clc
xor
xlat
pusha
js
jecxz
xor
jne
inc
test
icebp
sti
dec
enter
cwde
xor
jle
mov
test
inc
xchg
aad
repz
retf
inc
in
aam
mov
(bad)
jbe
into
sub
daa
sbb
cmc
lahf
fbstp
cmps
jbe
fdiv
and
dec
pop
inc
jno
rol
pop
pop
cdq
jb
xchg
adc
ret
sti
pop
data16
jnp
test
in
dec
mov
inc
mov
add
icebp
popf
stos
(bad)
out
repz
jns
iret
test
bound
adc
imul
adc
jg
mov
mov
pop
rol
bound
popa
aam
xor
pop
push
sbb
adc
cmp
push
aad
sbb
mov
inc
add
ror
sahf
fld
inc
jmp
hlt
outs
cmp
or
jne
jle
cmps
(bad)
fidiv
inc
adc
int3
jle
sub
not
aad
ja
sti
retf
cmp
clc
popf
stos
inc
inc
pop
fs
fld
les
loopne
adc
jnp
cmp
bound
sahf
repnz
lods
cmps
aam
jo
shl
jl
ds
sbb
cs
icebp
clc
ret
icebp
dec
push
std
pop
jno
cmp
iret
(bad)
repz
hlt
into
mov
out
xchg
cmp
adc
cmp
out
and
xor
mov
cli
loopne
pop
pop
mov
popa
mov
cmp
repz
xor
jae
cmp
push
movs
adc
mov
mov
push
adc
(bad)
dec
pop
lds
dec
xchg
in
aas
mov
cmps
xor
in
ret
mov
in
mov
mov
fsubr
dec
stos
hlt
outs
outs
mov
fwait
popf
cmps
inc
(bad)
mov
(bad)
stc
mov
ins
bound
in
hlt
push
and
or
fsubrp
addr16
xlat
sti
dec
outs
mov
fidiv
and
or
aad
pop
(bad)
retf
add
cld
mov
xchg
xchg
sbb
(bad)
cmc
lds
repnz
push
xchg
fcomp
jns
jno
adc
xchg
cmc
or
js
pop
push
sti
jle
or
aas
mov
jmp
or
hlt
mov
mov
xor
inc
sbb
gs
sub
call
cmc
arpl
fstp
add
dec
push
sbb
push
adc
mov
repz
sub
adc
inc
arpl
mov
pop
movs
aad
mov
mov
adc
cs
int
mov
xchg
mov
xor
fwait
scas
stos
dec
xchg
inc
sti
inc
xor
mov
out
repz
stos
push
pop
add
mov
aaa
xchg
dec
sti
jo
jp
inc
jo
pop
(bad)
scas
lock
mov
hlt
sbb
jb
sbb
add
jno
loop
out
data16
aad
push
sub
sbb
dec
shl
loope
bound
cmc
xor
sbb
sub
jmp
loopne
pop
aad
fcmovu
jg
enter
inc
xlat
and
and
adc
mov
add
lods
pop
adc
jecxz
movs
sub
hlt
imul
test
and
push
push
(bad)
out
jecxz
pop
js
aam
and
jno
rcl
inc
jnp
ss
and
pusha
hlt
and
mov
outs
inc
sub
adc
in
imul
lods
push
sub
(bad)
jno
xor
dec
out
mov
in
pushf
aad
mov
and
out
mov
jns
adc
les
adc
cmp
call
mov
stos
in
jne
add
mov
mov
repnz
aad
ins
sub
jl
sbb
fs
cmc
inc
movs
lods
inc
into
cld
fadd
jns
std
xor
push
mov
push
adc
inc
pop
jmp
and
lods
sub
iret
push
ficom
mov
xlat
mul
sar
je
out
js
fdivr
mov
jmp
hlt
jo
sub
inc
or
fsubr
pop
and
sub
mov
mov
jns
mov
call
or
fimul
push
lea
adc
dec
fadd
(bad)
jle
shl
jp
adc
push
ja
and
mov
inc
add
icebp
lods
push
adc
mov
adc
scas
add
(bad)
(bad)
xor
sub
aad
sbb
jbe
sbb
xchg
push
pop
adc
test
sbb
shr
sbb
je
xchg
ins
out
mov
sub
jecxz
sbb
push
jns
cs
hlt
paddusw
jecxz
in
push
add
fidiv
test
xor
lahf
lods
imul
xor
dec
dec
xor
rcl
dec
add
leave
jmp
jle
cmp
and
int3
inc
cmp
xor
adc
or
nop
or
sbb
jge
hlt
stos
mov
add
test
sub
xchg
dec
hlt
enter
lods
xor
xor
adc
scas
rcl
xor
iret
arpl
int3
push
add
mov
in
call
or
push
inc
xchg
xor
mov
pop
stos
shl
dec
mov
add
xchg
pop
and
out
pop
daa
dec
test
mov
push
dec
shl
mov
add
hlt
mov
cdq
xchg
xor
pop
adc
inc
in
add
xlat
aad
jl
adc
test
into
cwde
mov
sbb
mov
dec
and
inc
adc
inc
mov
push
jle
cmp
dec
or
jmp
cmp
loope
arpl
imul
daa
mov
xlat
push
shr
sbb
cs
imul
or
pop
adc
aaa
shl
iret
xor
jo
cmc
and
dec
mov
jle
lods
rcl
cmp
mov
test
loope
or
ret
sbb
jnp
mov
shl
in
or
(bad)
mov
in
idiv
dec
mov
mov
xchg
cmp
sub
ficomp
fldenv
adc
and
jp
imul
cmps
cs
aad
dec
sub
inc
or
fsub
lods
add
push
icebp
cmp
fcom
dec
xor
mov
imul
push
das
and
jge
mov
or
pop
pop
aad
push
jae
mov
and
aad
les
jp
add
cmp
lea
push
retf
ja
fist
sub
adc
ret
mov
mov
mov
mov
hlt
test
push
idiv
inc
js
out
scas
push
mov
sub
adc
movups
or
xchg
pop
cld
repz
fs
mov
mov
cld
or
jg
jno
jo
outs
push
es
add
inc
jmp
pop
sti
je
cmp
dec
pop
mov
pop
hlt
pushf
cvtpi2ps
inc
or
sbb
std
mov
icebp
hlt
dec
(bad)
pop
inc
add
hlt
bound
dec
inc
hlt
aad
xchg
int3
mov
inc
mov
jo
outs
mov
js
sbb
inc
or
push
dec
loop
(bad)
xor
jbe
cmovno
xchg
(bad)
in
mov
lock
jmp
pop
and
adc
jo
push
cdq
fcomp
adc
pop
cwde
jle
aam
cmp
jg
cmc
pop
ret
loopne
aad
aam
std
cli
jb
lds
aad
movs
pop
add
cs
jmp
out
fld
test
mov
inc
sub
push
ret
pop
mov
into
add
adc
clc
pop
push
mov
fist
push
and
jmp
into
cmps
jge
hlt
aad
ins
xchg
je
in
push
test
or
xor
xchg
repz
pusha
clc
dec
(bad)
out
fisubr
mov
inc
push
div
ds
cdq
jnp
xchg
icebp
fwait
out
mov
adc
inc
out
jnp
hlt
xchg
iret
pop
cli
int3
and
out
aad
pop
jae
xchg
and
into
fild
lea
and
xor
(bad)
nop
mov
adc
xor
mov
mov
pop
adc
pop
outs
aad
xchg
std
das
sub
dec
int3
mov
mov
out
cmp
fimul
mov
movs
xor
call
xchg
(bad)
fnstenv
hlt
repz
ds
adc
shl
call
adc
add
call
pop
in
ret
fnstenv
lahf
push
add
mov
out
outs
movs
and
repz
stos
ds
fsub
add
inc
inc
sti
xchg
loopne
out
xchg
in
scas
dec
gs
xchg
pushf
clc
pop
test
cmps
into
sub
and
inc
mul
or
(bad)
aad
bound
jp
inc
inc
adc
and
clc
arpl
jl
in
aad
stc
in
das
pop
sbb
mov
cs
lods
pop
ins
hlt
or
(bad)
or
cwde
or
daa
push
mov
aaa
cmps
xchg
in
push
mov
push
repz
sub
repnz
inc
xchg
(bad)
push
xlat
jbe
(bad)
clc
add
pop
rcr
jne
cmp
mov
xchg
jae
adc
sbb
repz
ss
inc
inc
test
add
and
sub
mov
cmps
and
adc
pusha
cld
fcmovne
push
sbb
xor
(bad)
or
in
rol
aad
out
inc
test
inc
data16
or
jns
outs
fcomi
fdivr
xor
adc
call
aam
xchg
adc
jb
xchg
clc
pushf
repnz
aad
adc
inc
pop
(bad)
add
xchg
and
mov
fwait
das
aad
push
xor
in
xchg
xchg
mov
or
pop
in
(bad)
aad
addr16
imul
or
xchg
jae
jp
into
pusha
test
loope
jmp
movs
xor
dec
mov
or
xor
and
sbb
mov
push
ins
fs
lds
iret
push
jg
lds
mov
jp
xor
mov
nop
sbb
jp
je
loope
cmc
pop
cmp
jne
in
aam
int3
nop
cmc
mov
push
cmp
std
cmp
adc
into
std
stos
scas
(bad)
inc
mov
adc
and
or
shr
and
repnz
call
(bad)
out
cmp
xor
inc
shl
cmc
mov
out
sub
jmp
pop
pop
ds
retf
pop
and
mov
icebp
mov
sub
aas
add
dec
cmp
fimul
inc
hlt
scas
test
add
adc
add
sti
fidiv
inc
retf
sti
xchg
in
dec
es
inc
mov
mov
or
es
inc
fmul
mov
cmp
retf
shr
(bad)
int
mov
pop
inc
or
mov
es
fnstsw
inc
mov
jge
xchg
call
cmp
mov
jge
xchg
adc
adc
outs
sbb
sub
push
test
sbb
xchg
out
adc
loopne
test
mul
add
mov
pop
lods
jbe
ret
jb
bound
(bad)
mov
lods
push
pushf
retf
sbb
repz
mov
out
mov
les
call
ret
xchg
int3
std
pop
gs
cmp
adc
(bad)
xchg
cdq
xchg
aad
fs
lods
push
pop
iret
inc
jnp
adc
inc
hlt
in
fadd
adc
mov
inc
xchg
cmps
aaa
pop
(bad)
neg
push
and
xor
jno
cmp
jmp
dec
mov
popa
outs
dec
aam
pop
pop
or
or
gs
adc
hlt
je
mov
mov
xchg
mov
add
add
jp
popf
retf
adc
cmp
ds
xor
aad
movs
jb
(bad)
mov
icebp
inc
mov
das
sub
aad
pmuludq
sub
dec
aaa
test
jae
icebp
jge
aad
fsubr
ins
popa
mov
into
push
lods
bnd
jne
dec
enter
mov
pop
adc
cmp
es
push
cmp
(bad)
pop
cdq
and
cwde
aad
jmp
sub
scas
cmp
cwde
sub
hlt
jne
fdiv
(bad)
cmc
pushf
or
test
push
mov
in
fs
adc
add
inc
inc
jae
xor
mov
lods
jp
dec
pop
jnp
push
xor
les
and
rcl
pop
mov
cmovno
test
mov
sub
adc
adc
lea
inc
jle
cmp
stc
xor
mov
jns
xlat
xchg
mov
xor
stc
movs
fwait
mov
or
sub
fprem
jl
mov
movs
pop
in
rcl
mov
pop
in
(bad)
in
cdq
xchg
out
hlt
inc
rcl
hlt
mov
and
xchg
push
cwde
ficomp
ret
mov
jb
pop
xchg
inc
add
sbb
clc
nop
ins
stc
mov
std
adc
jns
or
rcr
repz
aad
fist
mov
stos
cwde
inc
and
and
je
pop
int3
not
xor
repnz
adc
push
js
repnz
hlt
dec
stos
push
xchg
int
sbb
adc
aas
push
and
adc
mov
das
fwait
call
rcl
aam
dec
aad
or
out
mov
mov
jp
iret
in
and
ss
call
jmp
je
cmp
push
inc
(bad)
pusha
jp
jo
xchg
scas
jle
aad
je
dec
or
ja
sti
cdq
cmp
jecxz
sbb
mov
outs
fisttp
inc
sbb
mov
je
rol
push
sub
pop
pop
inc
mov
jnp
test
pop
inc
hlt
ds
inc
cmp
adc
popf
call
push
cdq
pop
pop
out
sahf
test
adc
pushf
(bad)
stc
shr
lahf
sub
add
pop
(bad)
daa
xor
mov
aam
(bad)
call
movs
cmps
xchg
mov
(bad)
push
shr
add
in
xchg
lock
nop
scas
sub
dec
and
das
or
test
push
jmp
add
stos
pop
movs
push
hlt
addr16
sub
ja
fidiv
aam
cmp
aaa
clc
push
add
cmp
cmp
jmp
and
loopne
aaa
ins
jge
inc
bound
js
jecxz
into
jge
sub
dec
out
adc
sbb
dec
jecxz
add
cdq
sbb
cmp
dec
mov
push
pusha
je
inc
lea
loopne
cmc
dec
push
dec
lock
cmp
ret
add
mov
cs
xor
in
addr16
cmp
xor
bound
iret
adc
inc
lods
jb
(bad)
iret
mov
inc
push
push
and
nop
fs
test
(bad)
outs
cmps
sbb
aad
inc
add
lahf
inc
adc
inc
push
xchg
xor
aad
xchg
icebp
adc
cmp
inc
cmp
cmc
dec
div
movs
call
sbb
(bad)
pop
jno
mov
je
iret
adc
and
iret
adc
push
(bad)
shr
xor
add
in
mov
lock
aad
push
movs
pop
inc
mov
adc
(bad)
sbb
jbe
add
xchg
push
mov
cmps
inc
jecxz
cmp
out
hlt
adc
out
push
xor
out
xor
adc
mov
popa
rcl
mov
adc
loopne
push
pop
dec
shl
push
pusha
aad
push
or
mov
lds
test
xor
sub
bound
add
dec
(bad)
hlt
pop
imul
out
xor
and
sbb
hlt
ins
aam
mov
cli
push
stos
xchg
fdivr
icebp
adc
fiadd
mov
push
mov
dec
ret
pop
jo
xor
or
or
jg
mov
hlt
cmp
popa
xor
test
shl
sbb
fadd
inc
je
jl
jge
mov
sbb
sbb
jb
and
idiv
mov
mov
push
fst
rol
mov
dec
pushf
mov
bound
(bad)
or
cmc
xchg
inc
add
xor
scas
sar
ret
push
icebp
in
xchg
js
ror
or
lea
(bad)
mov
dec
pop
add
push
pop
call
test
dec
mov
jnp
or
push
mov
mov
add
pop
gs
add
int
dec
mov
push
outs
adc
cmp
cs
gs
sub
jecxz
pop
push
cmc
sbb
call
push
add
or
sub
push
pop
fstp
xor
pop
aas
cld
dec
or
adc
adc
aad
stos
and
rol
mov
ds
ins
and
mov
inc
ins
jg
fwait
ds
adc
aad
fwait
sub
push
cmp
aad
pop
movs
fild
cmps
push
inc
test
inc
dec
fadd
aad
or
inc
and
or
lahf
daa
outs
and
dec
aad
jmp
(bad)
or
inc
xor
pop
push
jecxz
or
push
js
bswap
adc
jns
aaa
aad
mov
jnp
cmp
cmp
retf
stos
frstor
cs
int
sub
mov
adc
rcl
aad
add
mov
test
ss
fxtract
pop
xor
dec
into
jl
daa
ds
pop
out
movs
mov
mov
xor
or
cmp
pusha
cmp
je
jae
dec
lods
fldlg2
dec
adc
jmp
data16
aad
std
sbb
pop
scas
pop
call
mov
dec
aad
add
cmp
popa
mov
icebp
inc
mov
mov
mov
push
dec
sti
xor
dec
outs
movs
cld
sub
sbb
xchg
jne
xor
hlt
jl
mov
int3
popa
leave
in
movs
in
aad
adc
jecxz
xor
and
in
pop
jne
daa
cmps
rcl
ins
sub
cmp
lea
je
std
xor
push
int
aas
and
sbb
std
mov
mov
repz
jmp
fwait
xchg
int
jae
hlt
adc
cmp
adc
rcl
gs
pop
je
adc
push
in
push
adc
sub
js
shr
push
(bad)
jno
and
push
ins
pop
jmp
fsubr
repnz
in
(bad)
shl
sbb
cmp
(bad)
(bad)
sub
dec
xchg
(bad)
in
cmp
cli
aad
jno
jge
push
mov
inc
jns
mov
scas
in
mov
iret
xor
xor
pop
call
mov
push
aad
xor
outs
xor
push
lds
jnp
cmps
and
dec
test
mov
inc
cmp
xchg
pop
cmps
ins
test
fild
pop
rcr
mov
out
mul
ret
jge
daa
fs
stc
mov
or
leave
adc
enter
pop
aad
mov
js
push
xchg
in
push
jnp
push
in
inc
daa
inc
fild
scas
mov
aad
sub
jb
pop
inc
mov
shr
cmc
mov
jmp
pushf
out
sbb
add
mov
cmp
sti
lea
daa
into
enter
mov
icebp
loop
cmps
push
div
adc
mov
jb
cmp
(bad)
cmp
push
jne
and
xor
lock
jmp
setp
or
mov
movs
int
or
in
xchg
sbb
adc
adc
fcom
adc
fld
pop
mov
imul
ins
or
(bad)
xor
xlat
and
xchg
stc
add
into
add
stc
adc
sti
fist
sbb
loope
jno
fst
movs
shl
int3
adc
mov
clc
pop
ins
cdq
jmp
xor
push
pop
out
jb
dec
(bad)
jmp
(bad)
lock
mov
jp
push
addr16
pop
or
add
cdq
cmp
fbld
icebp
in
push
sub
(bad)
rol
xor
dec
je
xchg
mov
adc
repz
or
(bad)
jmp
(bad)
les
int3
mov
add
xchg
loope
test
in
retf
dec
dec
test
pop
cmps
push
mov
and
popf
outs
mov
and
mov
scas
pop
jg
push
and
jg
scas
xchg
mov
push
stos
ds
out
mov
cmps
aam
cmp
add
js
jne
out
push
dec
hlt
outs
push
cmp
push
add
fidiv
jbe
in
xor
cmc
xchg
(bad)
imul
imul
movs
inc
adc
dec
xchg
inc
lahf
sahf
lea
ret
psubq
pop
(bad)
dec
inc
(bad)
cmc
inc
fnstcw
ficom
in
jmp
hlt
jb
pop
lock
inc
or
test
lea
js
aad
aad
xchg
mov
dec
mov
mov
das
dec
test
popa
pop
