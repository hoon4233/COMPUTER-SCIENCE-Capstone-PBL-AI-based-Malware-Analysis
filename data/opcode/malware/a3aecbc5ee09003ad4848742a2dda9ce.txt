ror
or
add
add
dec
add
add
add
add
xor
add
add
add
add
push
push
and
add
lahf
pop
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
jae
call
(bad)
into
cwde
lods
xchg
out
pop
add
ret
push
aaa
xchg
aaa
jp
adc
(bad)
push
push
icebp
test
pop
xor
out
sub
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
push
xor
xor
cmp
cmp
xor
cmp
xor
add
outs
add
mov
add
jo
ins
add
jae
je
outs
add
jns
sbb
add
sub
add
xor
xor
cmp
xor
xor
xor
xor
pop
add
popa
add
ins
add
jae
imul
xor
xor
xor
adc
add
outs
add
add
add
pop
add
outs
add
pop
add
add
add
add
add
add
add
add
data16
add
add
or
add
popa
add
add
pop
inc
add
push
imul
add
jae
xor
outs
push
add
add
add
aam
add
adc
je
outs
add
and
jae
imul
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
xor
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
inc
cmp
inc
inc
push
dec
push
cmp
addr16
and
xor
sub
imul
and
inc
inc
and
xor
sub
jno
popa
ins
imul
or
fild
inc
add
add
add
or
pop
pop
pop
ud2
or
or
movlps
adc
adc
adc
sbb
adc
adc
sbb
sbb
adc
and
push
and
push
pop
push
(bad)
fild
inc
add
pop
push
or
push
push
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
add
or
ret
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
mov
or
lds
div
inc
icebp
int3
pop
sub
xor
scas
ja
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
adc
aas
(bad)
jns
stc
or
loope
sar
add
xchg
inc
nop
mov
jg
cs
add
xchg
inc
nop
mov
(bad)
jns
stc
or
call
mov
jg
push
(bad)
sub
outs
xchg
mov
lds
retf
xchg
jecxz
jbe
jmp
jmp
aam
pop
fisttp
jne
jo
adc
mov
push
cmc
repnz
jnp
pop
xor
or
div
sbb
pop
aad
movs
sub
push
and
xor
mov
aad
push
xchg
clc
pop
push
mov
jae
jmp
and
test
call
loope
pushf
jne
imul
mov
xchg
movs
sub
jl
sti
inc
cld
and
mov
inc
stos
pop
inc
mov
jb
cmp
cmc
popa
pop
outs
test
cmp
loope
mov
jnp
inc
sub
jmp
push
add
std
mov
loope
add
mov
jne
jmp
push
fs
ins
mov
inc
or
inc
mov
jmp
pop
fdivr
sub
lods
mov
mov
xor
xor
(bad)
fist
ficomp
fisttp
mov
mov
aas
(bad)
scas
fimul
je
mov
mov
dec
push
dec
push
pushf
xchg
std
imul
and
in
and
outs
scas
add
mov
pop
pop
lock
loopne
out
les
xchg
dec
and
add
jg
sbb
cli
fsub
mov
loop
add
adc
adc
dec
xchg
popa
mov
add
inc
mov
(bad)
jge
adc
jl
stos
adc
es
movs
cli
bnd
bswap
sbb
xchg
push
inc
(bad)
iret
and
popa
aas
into
call
test
push
jno
add
jnp
ja
aad
fdiv
mov
xchg
loop
sub
fnstsw
aas
push
pop
add
mov
cmp
cmc
(bad)
outs
jg
sub
fcmove
(bad)
push
inc
(bad)
iret
ret
aas
out
mov
pop
jge
dec
sti
jg
xor
inc
(bad)
rol
mov
out
jmp
stos
into
enter
fild
outs
leave
cli
mov
iret
arpl
addps
cld
jb
mov
out
in
out
(bad)
fld
(bad)
fld
ret
push
mov
or
and
push
cs
lods
jo
test
push
or
pop
push
xchg
xor
dec
aas
adc
mov
inc
pop
dec
shl
pop
push
xor
(bad)
push
stos
jg
pop
ja
mov
sub
cmp
cdq
jmp
ds
jmp
mov
in
(bad)
pop
inc
(bad)
dec
shl
pop
dec
xchg
in
dec
icebp
fild
js
les
ret
sbb
sub
jno
mov
jmp
ds
cwde
mov
out
cmp
retf
xchg
pop
push
pop
test
sub
jmp
scas
loopne
subps
neg
or
and
sbb
lock
inc
retf
pushf
sub
in
in
jmp
aad
xchg
push
dec
data16
rcr
clc
adc
cmp
lock
cmp
sbb
js
ret
mov
das
sub
pop
jle
cmp
pop
adc
std
and
ds
icebp
push
test
call
loop
or
test
or
or
mov
mov
mov
cmps
and
cmp
xchg
dec
xor
jp
jns
jg
fcomp
cmc
bnd
add
lock
repz
clc
push
dec
inc
sahf
push
inc
ffreep
pop
je
push
daa
cld
and
inc
cld
repnz
(bad)
(bad)
sbb
loope
sar
out
mov
adc
mov
add
mov
inc
cmp
inc
mov
mov
stc
in
std
cld
xor
jg
sub
jg
loope
(bad)
adc
(bad)
jns
inc
jg
ins
rol
lahf
lock
repz
clc
push
dec
inc
sahf
push
inc
ffreep
pop
je
push
daa
cld
and
inc
cld
repnz
(bad)
(bad)
sbb
loope
sar
out
mov
adc
mov
add
mov
inc
cmp
inc
mov
mov
stc
in
std
cld
xor
jg
sub
jg
loope
(bad)
adc
(bad)
jns
inc
jg
ins
rol
lahf
lock
repz
clc
push
dec
inc
sahf
push
inc
ffreep
pop
je
push
daa
cld
and
inc
cld
repnz
(bad)
(bad)
sbb
loope
sar
out
mov
adc
mov
add
mov
inc
cmp
inc
mov
mov
stc
in
std
cld
xor
jg
sub
jg
loope
(bad)
adc
(bad)
jns
inc
jg
ins
rol
lahf
lock
repz
clc
push
dec
inc
sahf
push
inc
ffreep
pop
je
push
daa
cld
and
inc
cld
repnz
(bad)
(bad)
sbb
loope
sar
out
mov
adc
mov
add
mov
inc
cmp
inc
mov
mov
stc
in
std
cld
xor
jg
sub
jg
loope
(bad)
adc
(bad)
jns
inc
jg
ins
rol
lahf
lock
repz
clc
push
dec
inc
sahf
push
inc
ffreep
pop
je
push
daa
cld
and
inc
cld
repnz
(bad)
(bad)
sbb
loope
sar
out
mov
adc
mov
add
mov
inc
cmp
inc
mov
mov
stc
in
std
cld
xor
jg
sub
jg
loope
(bad)
adc
(bad)
jns
inc
jg
ins
rol
lahf
lock
repz
clc
push
dec
inc
sahf
push
inc
ffreep
pop
je
push
daa
cld
and
inc
cld
repnz
(bad)
(bad)
sbb
loope
sar
out
mov
adc
mov
add
mov
inc
cmp
inc
mov
mov
stc
in
std
cld
xor
jg
sub
jg
loope
(bad)
adc
(bad)
jns
inc
jg
ins
rol
lahf
lock
repz
clc
push
dec
inc
sahf
push
inc
ffreep
pop
jne
jl
icebp
scas
fwait
loopne
cmp
mov
mov
je
push
jnp
add
inc
adc
mov
ret
rcr
push
(bad)
cs
ins
mov
inc
jne
in
mov
sub
mov
cli
into
lahf
loopne
xchg
shl
jmp
add
js
out
sbb
in
pop
sbb
cmc
cmc
(bad)
test
pop
scas
scas
in
leave
and
mov
std
fmulp
loop
mov
mov
jbe
jne
pop
dec
shl
inc
push
mov
fild
mov
jnp
xchg
in
mov
add
mov
ja
clc
outs
xor
stos
jnp
sub
pop
add
dec
test
jecxz
cmp
lods
aaa
dec
mov
and
lods
jmp
int
add
adc
mov
pop
mov
jg
push
lods
jns
mov
push
xor
jg
test
adc
cmp
movs
pop
clc
ja
imul
jb
inc
stos
sbb
xor
xchg
leave
out
scas
pop
push
pop
or
or
ffreep
adc
mov
mov
mov
cmp
mov
in
stos
stos
loop
ins
inc
sub
mov
sub
or
pop
iret
and
mov
loop
push
dec
scas
outs
pop
cmps
xchg
pushf
push
daa
cmp
scas
sar
call
movs
push
rol
jg
mov
mov
push
mov
lods
xchg
add
xor
fisubr
xchg
or
sar
rol
cmp
push
mov
mov
mov
mov
fcom
xor
repz
mov
jae
outs
mov
mov
jg
retf
ss
and
or
or
and
push
cmp
jne
mov
mov
pop
ds
ret
pusha
sbb
ror
jge
(bad)
rol
mov
adc
or
idiv
add
pop
(bad)
xchg
(bad)
xor
(bad)
pusha
jg
jg
xor
jg
mov
fs
int3
pop
xchg
pop
pop
mov
xor
imul
aas
add
sub
mov
neg
jl
popa
js
xchg
xchg
xlat
shr
ror
loopne
shl
popa
jno
jmp
pop
cmps
jno
jp
add
icebp
lahf
test
sbb
leave
outs
or
inc
std
int
popf
test
xchg
mov
in
xchg
test
and
test
push
dec
js
or
cmp
test
mov
out
pmaxub
inc
inc
test
cmp
lods
fbld
jge
aas
lods
ins
pop
xchg
xchg
inc
jne
cmp
and
les
or
fild
(bad)
xchg
and
pop
retf
mov
mov
lock
ja
pop
test
stc
dec
inc
(bad)
in
lods
arpl
mov
pop
loop
test
ja
pop
jge
imul
mov
mov
std
jle
les
add
mov
adc
and
xor
nop
mov
xor
iret
fsubp
xor
movs
ror
mov
rcl
jmp
xchg
mov
int
push
pop
jl
cwde
cli
jno
jle
(bad)
mov
add
pop
cmps
jae
jg
jp
cdq
inc
loop
into
jp
lahf
ret
xchg
test
movs
xor
and
inc
pop
outs
retf
jecxz
icebp
mov
retf
dec
movs
imul
movs
call
jle
test
(bad)
cmp
pop
sti
sub
jns
or
sbb
dec
ficomp
in
ins
sbb
idiv
mov
aam
out
cs
sub
inc
test
xor
bound
rcl
or
ret
and
cmp
call
push
lock
mov
xor
sub
sbb
push
cmp
stc
jecxz
icebp
pop
sbb
fstp
xor
in
mov
scas
dec
scas
repz
or
mov
inc
xchg
mov
jmp
inc
cmp
dec
repz
add
inc
cmp
hlt
dec
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
pop
sbb
xchg
dec
lock
xchg
popf
inc
mov
pop
or
idiv
mov
pop
adc
loope
xor
in
jbe
push
repnz
inc
shl
and
jnp
mov
inc
sti
iret
icebp
and
lods
cmc
hlt
ins
xchg
rcl
jns
aas
xor
arpl
jl
xor
ds
cs
and
or
(bad)
(bad)
test
cld
mov
cdq
mov
repz
test
inc
push
cli
shl
dec
ret
int
loopne
cmp
push
mov
xchg
mov
call
mov
leave
idiv
pop
mov
and
sbb
(bad)
fadd
pop
fisub
mov
inc
sahf
fisttp
pushf
int
xor
cmp
retf
and
cli
pusha
push
adc
sub
pop
mov
adc
ror
mov
pop
(bad)
and
cmps
and
inc
adc
adc
bound
jmp
ja
adc
mov
push
into
mov
pop
adc
xchg
div
jmp
pop
inc
jmp
ja
jmp
loope
loop
fs
icebp
add
xchg
xchg
fwait
jo
mov
mov
adc
add
(bad)
int3
add
es
xchg
xchg
jnp
div
scas
dec
loop
ficomp
or
sti
mov
std
out
repz
push
popf
push
cs
mov
fs
mov
icebp
es
push
pop
lea
cmp
and
and
xor
test
imul
add
push
rol
mov
mov
cwde
pop
sbb
jge
movs
or
inc
cmps
dec
imul
fldenv
jecxz
cmps
jmp
jne
fld
cld
test
loop
jecxz
mov
sub
and
pop
cld
sub
in
sbb
jl
dec
push
in
jecxz
es
fnsave
scas
in
in
mov
push
or
fdivr
pushf
push
mov
fadd
cmps
inc
cmps
pushf
dec
sub
push
mov
jmp
mov
ss
add
lahf
mov
and
shr
jge
cmp
movups
lds
(bad)
fldenv
cli
fs
hlt
(bad)
sbb
in
mov
mov
xchg
pushf
or
nop/reserved
adc
fdivr
daa
loope
mov
fwait
pusha
fcomp
jno
pop
stos
jno
push
cmc
in
ds
add
ins
in
in
xor
ficom
jbe
in
stc
push
jp
lahf
jp
push
jns
xchg
mov
js
sub
inc
fdiv
ins
inc
lds
bound
xchg
retf
pushf
arpl
std
rol
lea
jae
cmp
dec
mov
fist
cmps
ja
leave
je
mov
push
xor
jno
cmp
mov
add
jmp
sbb
loop
xor
cmp
ins
repnz
shl
inc
test
inc
jge
(bad)
jne
push
lds
jns
clc
mov
push
jmp
int
mov
xor
(bad)
out
or
xchg
push
movs
lock
icebp
daa
ret
lods
push
lods
xor
pop
sub
sti
cmp
dec
jb
or
(bad)
out
mov
cmps
push
cmp
add
xor
xchg
inc
addr16
adc
and
leave
dec
lahf
jbe
or
pop
aas
jbe
add
mov
xor
or
ja
mov
rol
add
call
pusha
addr16
xor
mov
mov
test
sbb
shl
mov
fcmovbe
call
push
push
gs
aas
push
mov
int
mov
(bad)
(bad)
inc
pop
or
cmovb
in
fs
pop
pop
sbb
lea
loop
mov
pop
call
push
add
out
sbb
cmp
ret
adc
inc
test
jb
cmp
pushf
ins
movs
jae
iret
sbb
or
inc
iret
mov
out
mov
xchg
jnp
icebp
xor
xchg
add
in
repnz
pushf
mov
push
sub
popa
test
xor
inc
push
das
scas
push
aas
sbb
fist
and
test
adc
int3
sahf
icebp
cmps
pop
mov
retf
nop
jo
imul
xchg
jge
inc
push
ds
je
out
inc
cmc
stos
in
arpl
out
jnp
in
inc
scas
dec
gs
loop
or
movs
in
mov
imul
mov
fidivr
inc
xchg
and
xor
cld
clc
std
cdq
cmc
sbb
pop
pop
sub
imul
push
js
mov
ds
cmps
test
xor
rol
loope
std
or
pushf
jns
shr
adc
and
xlat
sar
jne
xchg
out
inc
and
inc
das
daa
stc
rol
mov
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
xchg
cmp
dec
and
and
cmp
scas
dec
jecxz
adc
mov
loope
shr
iret
ret
not
sub
in
dec
dec
add
dec
push
jns
mov
mov
sahf
nop
lds
adc
jge
dec
iret
leave
nop
jbe
add
add
outs
sub
push
pop
add
mov
movs
cdq
test
pusha
movs
stc
xchg
jb
or
xor
and
shl
jne
je
or
stc
inc
scas
mov
inc
jae
or
in
js
mov
dec
cmp
mov
fistp
lock
jno
ret
fmul
js
test
mov
inc
jp
fmul
push
inc
fisub
nop
je
push
fidiv
cld
adc
daa
sahf
imul
push
sub
ins
dec
arpl
in
sbb
mov
mov
sub
and
outs
adc
aam
cwde
jge
or
in
(bad)
xchg
ret
mov
sbb
jno
hlt
push
mov
in
ja
mov
xchg
int
ret
xchg
xlat
in
jg
aad
fdiv
ret
paddusw
rcl
sbb
sub
xchg
jge
cmp
xchg
aaa
and
jne
pop
mov
(bad)
cdq
psrlq
and
not
aaa
test
push
sub
xor
pop
les
fst
in
ins
inc
inc
mov
pusha
sub
mov
cmc
(bad)
icebp
stos
adc
sub
and
popf
cmp
lea
inc
add
iret
mov
pop
sbb
jne
xor
push
or
ficom
sbb
fcomp
cmps
fistp
into
test
in
and
and
sbb
(bad)
jecxz
ret
jmp
les
stos
imul
addr16
(bad)
mov
jg
mov
call
add
retf
jl
jecxz
or
loop
cmc
fstp
aad
mov
mov
adc
mov
push
sbb
add
cli
xlat
sub
mov
rcr
scas
adc
js
dec
or
fsub
adc
jb
xor
jl
lock
and
les
leave
movs
pop
movs
push
jmp
mov
cmp
cmc
cs
fist
mov
invd
inc
xor
test
movs
mov
(bad)
add
into
aam
stos
cmc
cmp
cmc
leave
pop
fsubr
sub
out
cmp
loopne
pop
test
push
idiv
out
cmp
sti
inc
inc
pop
mov
(bad)
add
icebp
pop
pop
clc
xchg
das
dec
addr16
int
popf
xchg
cmps
mov
sar
mov
xchg
sahf
or
mov
in
jb
or
icebp
mov
gs
inc
test
les
jnp
cmc
outs
mov
scas
sbb
mov
iret
adc
clc
xchg
inc
jb
xchg
jo
pushf
jg
inc
xlat
stos
jae
push
frstor
ins
mov
cmp
ficomp
icebp
xchg
loopne
push
js
stc
fdiv
pushf
fs
call
add
sub
into
outs
pop
xor
xor
mov
and
adc
cli
hlt
and
clc
push
cmp
pushf
arpl
or
mov
jle
test
imul
inc
mov
arpl
cmp
mov
pushf
out
(bad)
and
jp
jmp
(bad)
les
cdq
jno
scas
sbb
sbb
ret
sub
inc
cmc
jecxz
lods
outs
sbb
or
pop
jns
aam
mov
(bad)
gs
xchg
xchg
je
sbb
shl
cmp
in
lahf
inc
clc
sbb
xor
pop
sbb
pusha
dec
mov
inc
std
lahf
cmps
add
(bad)
ja
mov
inc
xchg
mov
cmp
hlt
test
ud2
int3
in
pusha
add
push
jmp
sbb
test
inc
pop
mov
adc
repz
mov
pop
enter
sub
enter
add
xor
xor
dec
shl
mov
mov
push
(bad)
adc
test
mov
fsub
or
dec
lods
ins
in
ror
xchg
jl
sbb
icebp
fild
pop
cmp
xchg
xor
push
or
mov
pop
xchg
dec
lock
(bad)
mov
jae
std
(bad)
sub
cmp
(bad)
xchg
pop
fcmovnu
cmp
je
mov
leave
fistp
cmp
sub
jl
mov
mov
cdq
movs
inc
iret
xor
mov
push
jge
fidiv
loop
call
jge
push
clc
sbb
mov
or
rcl
(bad)
sbb
out
pop
aas
xchg
aad
loop
lds
adc
iret
cmp
add
out
push
xchg
sbb
cmp
inc
xchg
lds
xchg
jmp
mov
aas
frstor
movs
sbb
daa
mov
aas
push
mov
out
test
in
jle
clc
adc
push
rcr
mov
mov
pop
mov
jns
cmp
push
add
pushf
inc
dec
cld
loop
sbb
clc
mov
pop
jmp
aas
cwde
scas
ror
cmp
int3
and
inc
xchg
mov
or
(bad)
pop
jnp
pop
inc
adc
cmps
inc
pop
jbe
repnz
std
jl
out
mov
fcomip
ss
std
jge
out
push
mov
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
pop
xchg
js
out
inc
outs
mov
les
sbb
out
adc
mov
xchg
add
prefetch
pop
and
cmp
jecxz
jecxz
outs
retf
imul
xor
jbe
push
xchg
pop
mov
sbb
xchg
lock
and
pop
clc
push
loop
xor
add
test
xchg
rol
sbb
stos
xor
pop
lahf
dec
repz
aad
xchg
fucomp
daa
ins
mov
xor
mov
cli
call
(bad)
enter
push
or
add
mov
dec
call
data16
pop
pop
icebp
lock
mov
ret
out
test
loop
dec
gs
dec
lock
cmp
int
loopne
dec
mov
inc
jg
jmp
(bad)
enter
cdq
into
add
(bad)
jle
stos
lods
push
jne
in
mov
sbb
push
fdivrp
add
cmp
addr16
push
add
jb
call
xor
or
sub
mov
xor
(bad)
jg
mov
clc
push
xchg
add
pop
inc
into
push
jns
jge
jecxz
rcl
jecxz
jb
adc
xchg
mov
out
je
xchg
jo
ror
inc
xchg
xchg
pop
arpl
xor
retfw
dec
lods
arpl
mov
(bad)
jae
sub
(bad)
cmp
jmp
sbb
lahf
or
(bad)
jmp
stos
stos
cmp
dec
cmp
inc
call
mov
pop
and
js
jne
add
push
cmp
sub
push
fs
add
push
or
popa
xchg
in
call
hlt
hlt
scas
adc
jne
ficom
push
addr16
jmp
sar
popa
and
sti
push
cmps
pop
jns
or
xchg
add
ja
daa
mov
fwait
lds
sub
mov
and
cbw
inc
push
mov
sub
inc
nop
adc
dec
mov
push
sahf
movs
sbb
hlt
leave
test
dec
adc
fnstsw
xchg
cwde
xchg
retf
inc
inc
repnz
dec
xchg
in
jno
pop
(bad)
fidivr
fsubr
call
sbb
popf
movs
pop
cvtpi2ps
jno
xchg
sbb
sub
fwait
mov
std
cmp
aas
or
jo
loope
ins
cld
aaa
lods
cmp
ficomp
adc
mov
cmp
push
pop
clc
inc
icebp
or
fcomp
imul
xchg
pop
fs
cmp
dec
hlt
dec
movd
lods
mov
sub
pop
cmp
adc
outs
sbb
xor
test
push
jmp
cmp
(bad)
pop
mov
jo
fsubrp
lods
hlt
or
push
(bad)
and
mov
push
jecxz
into
jae
pop
push
inc
and
cli
push
mov
adc
ja
fmul
addr16
imul
fidiv
mov
add
ss
jne
fsub
inc
in
(bad)
stc
in
pop
shl
fs
cmp
outs
fsubr
add
aas
call
(bad)
ficom
mov
(bad)
xchg
jne
sbb
sti
int3
adc
imul
mov
scas
mov
aas
or
and
(bad)
mov
xchg
xor
adc
mov
mul
add
dec
rol
inc
ds
dec
mov
push
mov
sbb
jno
jae
adc
jnp
or
movs
push
jns
jb
dec
sub
(bad)
call
rcl
loop
or
cwde
xchg
add
jmp
sub
mov
xchg
or
sbb
cmp
xchg
repz
in
pushf
in
iret
rcl
xor
sbb
sar
jns
data16
mov
mov
add
bound
sbb
lea
sti
fcomp
(bad)
in
ins
aad
clc
xchg
icebp
pushf
xchg
shl
mov
mov
loope
fidivr
movs
pop
cdq
push
test
push
add
add
xchg
dec
jecxz
cs
push
call
inc
call
loop
or
xchg
or
jmp
je
inc
out
adc
and
mov
ins
loop
mov
cmps
mov
shl
pop
(bad)
pop
popf
xor
sbb
sar
cmp
sbb
inc
(bad)
cmps
sbb
pop
inc
test
inc
sbb
xchg
or
inc
mov
mov
rcl
xlat
lods
jns
lea
adc
xlat
and
mov
mov
scas
in
xor
mov
call
inc
add
push
pushf
arpl
pop
outs
ins
jle
aas
xchg
push
mov
mov
aad
cmp
cmp
leave
sub
mov
dec
stos
and
and
lods
cmp
or
push
mov
xor
into
stos
ins
cmp
aas
(bad)
adc
jne
jecxz
sbb
sbb
fiadd
cmc
scas
mov
ficom
and
hlt
sbb
fisttp
icebp
push
stos
cmps
mov
sbb
mov
pop
fldenv
outs
pop
test
test
pop
cmc
pop
test
xor
jle
fstp
in
xchg
and
pop
push
ja
pop
test
fst
pop
pop
xor
mov
lea
stc
xlat
mov
lea
stc
rol
mov
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
retf
mov
scas
pop
pop
inc
es
in
(bad)
xor
mov
(bad)
test
sub
sbb
nop
add
sbb
mov
xlat
mov
bound
jmp
fnstsw
mov
(bad)
mov
jne
cmp
push
loop
mov
sub
pop
repnz
(bad)
fld
and
in
inc
cmp
data16
push
arpl
(bad)
mov
fldcw
adc
push
and
ins
icebp
repnz
aam
xor
int3
jmp
pop
xchg
sbb
test
ins
je
fdiv
mov
pop
inc
imul
adc
in
pop
scas
fnsave
jmp
xchg
mov
ins
sahf
dec
div
inc
ror
ss
int3
fs
iret
int3
clc
std
add
stos
icebp
pop
in
sbb
add
ds
les
cmp
sbb
lds
inc
stos
or
adc
cwde
xchg
jno
cld
inc
lahf
out
fisttp
call
call
jne
jno
fiadd
sbb
out
or
inc
jo
push
fistp
jecxz
inc
push
icebp
lods
idiv
mov
mov
jp
cmp
jp
movs
shl
dec
dec
icebp
push
shr
shl
xchg
mov
scas
fwait
outs
jbe
aam
cli
mov
int
and
dec
xchg
or
das
inc
cmp
retf
cmps
lods
popf
(bad)
leave
jmp
jae
fcomip
cld
lea
xor
loope
jns
push
fcmovu
fwait
or
mov
jge
lock
(bad)
in
rol
mov
jmp
lahf
fsqrt
mov
sub
test
jecxz
cmps
cmp
ds
adc
jbe
push
add
xchg
nop
outs
pusha
ficom
dec
sbb
push
mov
adc
popa
aas
es
aam
and
(bad)
(bad)
(bad)
(bad)
pop
jl
mov
sti
push
push
mov
cmps
test
xor
mov
push
nop
leave
or
adc
jno
out
cmp
hlt
shl
addr16
test
dec
xlat
cli
aas
jecxz
pop
xchg
in
dec
test
sbb
(bad)
dec
pop
clc
xchg
test
jnp
aam
mov
or
shr
bound
jbe
ins
lods
les
or
fisttp
jecxz
nop
js
imul
into
dec
dec
push
jno
fwait
inc
shl
imul
(bad)
aad
leave
shl
inc
adc
mov
hlt
ret
pop
out
xchg
ret
push
or
sbb
pop
pop
pop
fcmovu
adc
test
dec
out
push
mov
mov
scas
outs
pop
retf
ja
shl
mov
jae
arpl
outs
inc
xor
nop
xchg
outs
fwait
adc
xchg
in
xor
pop
jle
mov
call
mov
test
push
icebp
xchg
int
or
repnz
jns
loop
inc
xchg
imul
dec
popa
and
rcl
mov
mov
cli
test
mov
aas
or
xor
mov
add
mov
jo
add
add
ja
mov
(bad)
mov
and
mov
in
lea
adc
test
lahf
fwait
out
adc
ins
sbb
pop
fsubr
cld
sub
lods
lods
and
jae
lahf
push
pop
cmp
idiv
scas
or
outs
xlat
out
rcr
rcl
mov
sbb
jo
fild
stos
pop
retf
push
xchg
loope
mov
add
dec
(bad)
sub
xchg
rcr
sbb
push
int
jl
mov
je
or
lods
adc
imul
dec
xchg
jae
stos
sbb
xchg
mov
les
inc
aas
repnz
mov
in
cld
into
mov
xor
cmp
repnz
outs
sub
mov
push
push
cmp
xchg
aam
loope
inc
ins
arpl
mov
cmp
aam
pop
je
cmp
push
pusha
lahf
les
adc
cwde
cmc
or
mov
push
pushf
gs
mov
or
inc
retf
out
push
push
add
dec
neg
ds
mov
and
lods
dec
mov
cld
dec
ds
sar
pop
jmp
movs
ss
xor
jne
in
and
push
nop
shl
jp
test
(bad)
aam
imul
js
adc
icebp
fisttp
test
out
in
mov
es
out
out
popa
sbb
aaa
xchg
mov
test
jmp
dec
dec
and
xor
shr
pop
xchg
fidivr
and
fwait
(bad)
adc
xor
inc
mov
lods
sbb
ds
mov
ret
imul
mov
icebp
fnstenv
push
jns
daa
fadd
imul
idiv
xlat
sub
ret
and
movs
push
sbb
adc
xor
or
adc
mov
pop
pop
retf
(bad)
sbb
(bad)
mov
add
xchg
xchg
cld
jmp
sub
(bad)
inc
(bad)
inc
scas
xchg
cld
call
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
repnz
ficomp
xchg
pop
add
jmp
cmp
(bad)
pusha
jmp
xchg
in
hlt
mov
sub
and
jo
or
(bad)
ds
arpl
cmp
cmp
mov
adc
call
jmp
mov
xchg
adc
cmp
cmovg
jmp
lea
mov
scas
pop
call
mov
(bad)
clc
pop
dec
fst
and
rcl
lods
retf
jp
in
aaa
dec
or
dec
das
jle
outs
repnz
into
mov
test
inc
inc
cmp
(bad)
jp
pushf
adc
ud0
push
pop
xchg
div
retf
test
aad
xchg
xchg
pusha
scas
mov
loopne
xor
inc
es
out
neg
fisub
cs
push
mov
daa
adc
stc
jle
cmp
cdq
mov
jmp
stos
(bad)
repz
jle
jmp
mov
(bad)
movs
leave
jne
fwait
jnp
addr16
push
retf
(bad)
mov
jg
mov
sbb
repnz
jl
xor
mov
jne
sub
arpl
add
push
add
xor
movs
jb
add
inc
jno
add
dec
arpl
lods
dec
outs
inc
mov
gs
imul
pop
xchg
or
out
shr
out
(bad)
in
mov
dec
out
stos
pop
ja
push
mov
mov
sub
iret
jg
push
iret
enter
mov
cld
sti
not
xchg
push
in
jl
pop
cwde
sahf
popf
jg
cmc
(bad)
push
jno
mov
mov
retf
sub
and
cmp
lahf
cmps
clc
je
xor
leave
rol
adc
shl
jle
and
out
cmp
shl
xchg
push
(bad)
dec
mov
and
inc
fidiv
push
pushf
jg
mov
jb
call
jge
push
jl
xlat
adc
mov
loope
pop
or
inc
call
div
jo
adc
movs
(bad)
loope
cmp
mov
iret
pop
mov
out
ret
fstp
not
icebp
jnp
hlt
jno
mul
xchg
pop
adc
cmp
hlt
popf
inc
sar
sub
ins
out
add
movs
lea
cmp
and
inc
(bad)
shl
dec
rcl
or
jg
pop
sbb
add
scas
xor
cmp
jns
dec
xchg
pop
mov
into
out
fstp
inc
les
xlat
stos
sbb
cmp
out
inc
ret
jle
xor
adc
adc
pop
scas
push
enter
inc
adc
lods
jnp
(bad)
loopne
mov
xor
repz
jae
inc
pop
sbb
dec
loopne
mov
cmp
mov
loop
sbb
lahf
jge
movs
retf
dec
repnz
mov
add
xlat
jb
fisttp
push
test
cmp
fadd
jle
jns
jb
or
iret
pop
xor
dec
lock
out
xor
sub
jl
cmp
pop
std
lods
sbb
jns
pop
adc
sbb
sub
sub
pop
imul
mov
sub
add
jae
and
mov
movs
jno
fs
adc
xor
xchg
test
pop
dec
ja
jae
test
cmp
xchg
inc
sub
push
pop
gs
repz
scas
inc
lock
imul
mov
xor
test
stos
leave
leave
sar
mov
lahf
mov
arpl
jg
cld
mov
pop
or
dec
push
pop
in
scas
fs
fisttp
jnp
out
sub
xor
ss
jmp
cmp
xor
gs
fwait
jbe
sbb
sbb
mov
cmps
js
push
cmp
mov
mov
sbb
pop
pop
cmp
pop
test
imul
loopne
scas
loope
jns
and
fmul
fcomp
fcom
stc
xlat
lock
in
xchg
and
adc
je
add
(bad)
xor
repz
test
and
add
cmp
call
inc
pop
rcr
inc
add
pop
sar
ja
jb
push
sti
pop
shl
xchg
xchg
(bad)
xlat
cli
rcl
xor
dec
sar
or
std
jns
jg
fcomp
cmc
hlt
jg
jp
jns
jg
fcomp
cmc
bnd
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
(bad)
sub
adc
lods
sub
mov
out
jge
mov
arpl
aad
retf
mov
ret
jmp
sub
and
lds
aad
cmp
lock
cmp
xchg
int
shl
push
in
xchg
dec
sub
cmp
icebp
mov
adc
jmp
xor
test
ret
and
cmps
add
clc
push
mov
jle
shr
call
and
xor
mov
and
in
xor
mov
sub
stos
js
daa
sbb
(bad)
scas
inc
aas
lock
dec
or
mov
pop
(bad)
rol
push
call
inc
iret
and
mov
ror
into
pop
jmp
sbb
outs
and
sub
popa
(bad)
mul
jno
add
mov
fbstp
or
pop
fsubp
in
cmp
sub
xchg
jg
pop
(bad)
aas
dec
shl
shr
pop
xchg
mov
hlt
enter
jno
cmp
(bad)
fst
(bad)
cmp
jg
mov
mov
add
pop
pop
add
sar
adc
pop
mov
daa
daa
mov
jae
lea
xlat
pop
mov
and
cmp
lods
pop
adc
lods
es
xor
out
dec
push
adc
pop
sub
mov
ins
sbb
loop
mov
call
mov
push
pop
out
les
in
fwait
pop
les
sub
and
push
popf
test
jb
fdiv
add
mov
sbb
mov
xor
push
cmp
stc
sbb
(bad)
xchg
in
xchg
int3
lea
leave
add
xchg
(bad)
int3
test
into
mov
jge
imul
or
retf
cmps
dec
xor
out
shl
je
and
mul
call
aas
out
cwde
jmp
leave
ins
and
test
mov
add
cmp
add
add
jo
or
aad
xor
icebp
sub
arpl
cwde
out
jno
xor
test
push
add
mov
mov
jae
add
mov
dec
sbb
jle
jnp
pop
cmps
ds
(bad)
ds
push
subps
mov
(bad)
jae
imul
xchg
jae
mov
ror
stc
idiv
jmp
sub
(bad)
test
inc
push
test
xor
push
out
(bad)
jno
xor
inc
pop
test
xor
cmc
stos
jnp
jbe
pop
cmc
mov
xchg
(bad)
pop
inc
out
clc
aad
aad
sar
inc
xlat
cmps
pop
out
xchg
jg
fldenv
inc
xchg
out
dec
cmp
aad
rcr
pop
test
clc
test
xchg
fnstenv
ins
sub
pop
sti
(bad)
aad
jo
cmp
mov
cmp
icebp
stos
xchg
retf
test
xor
(bad)
(bad)
and
add
ins
aas
push
mov
popf
push
pop
xlat
outs
rcl
jne
mov
pushf
stc
jo
into
adc
out
jns
push
arpl
test
ds
mov
add
adc
push
sub
pop
mov
xlat
and
inc
lahf
jmp
cmp
test
mov
fsub
(bad)
cwde
ds
push
xor
mov
out
repz
jg
xlat
push
jmp
enter
jo
adc
cli
test
sbb
or
xchg
nop
lock
xchg
dec
mul
xor
lods
push
jmp
inc
sbb
pusha
cmc
(bad)
test
pop
icebp
or
push
cmp
lea
jg
aaa
out
adc
cmp
ret
daa
pop
je
push
jnp
stos
inc
sub
test
add
stos
ret
xor
retf
xchg
sub
aas
sbb
fwait
cwde
stos
retf
jae
push
mov
push
adc
ret
jae
dec
imul
movs
mov
arpl
sbb
pop
fadd
js
repz
or
outs
jmp
ss
imul
(bad)
sbb
and
pop
stc
popa
adc
hlt
ret
xor
inc
add
and
xchg
xchg
outs
ds
push
clc
xor
push
outs
jmp
ss
inc
inc
scas
mov
into
(bad)
inc
(bad)
out
pop
dec
repz
sub
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
icebp
push
test
lods
movs
mov
nop
dec
and
fstp
lods
loopne
xchg
lods
hlt
sti
mov
data16
jns
jge
retf
dec
or
jmp
ins
aaa
dec
aad
sahf
retf
push
mov
repnz
(bad)
xor
sbb
xor
inc
iret
pop
mov
pop
inc
ret
sub
ins
aaa
sti
pop
dec
ins
adc
scas
in
xchg
stc
mov
shr
icebp
and
in
lock
imul
aad
or
imul
imul
adc
pop
fstp
movs
test
dec
leave
aam
push
inc
hlt
pop
ret
sub
cld
xor
sar
add
mov
out
lods
mov
push
fdivr
hlt
adc
sahf
and
fild
scas
xor
add
or
out
xor
repz
mov
dec
or
mov
cmps
stos
fistp
js
inc
mov
popa
fild
pop
sbb
xchg
xor
dec
adc
jno
mov
arpl
shl
cmp
(bad)
adc
sbb
push
mov
mov
mov
ins
jecxz
retf
retf
mov
retf
and
aad
adc
jbe
sub
adc
loopne
inc
xor
and
jge
in
xchg
add
mov
or
jecxz
push
ins
jbe
je
and
mov
mov
sbb
icebp
ds
test
pop
pop
ficomp
jnp
int
mov
adc
xchg
xor
xchg
cld
std
imul
fstp
adc
cmps
neg
aaa
push
fcomp
outs
(bad)
std
sub
ds
retf
xor
aas
(bad)
pop
jnp
mov
ja
mov
mov
les
add
mov
adc
aas
xor
lea
jo
or
sbb
dec
mov
xchg
ret
inc
mov
in
fistp
pusha
mov
in
add
shl
add
cli
daa
ret
push
cld
or
and
and
in
push
fs
dec
in
inc
add
(bad)
fild
je
xchg
inc
xchg
je
loope
(bad)
ja
and
inc
jl
pop
mov
int3
inc
mov
scas
xchg
jno
stos
push
pushf
jns
mov
repnz
movs
push
xchg
mov
lock
xchg
je
(bad)
jae
arpl
pop
inc
jecxz
jmp
movs
clc
ja
sbb
movs
daa
scas
je
dec
inc
shr
(bad)
push
or
jp
movs
cmps
leave
sbb
pop
out
ins
cs
and
jb
cmp
pushf
stos
stos
sub
enter
out
mov
and
cmp
daa
pop
adc
hlt
das
jne
add
cmps
nop
popa
xchg
add
and
mov
repnz
mov
iret
and
pop
push
scas
mov
sbb
popf
push
ret
pop
and
cmp
imul
adc
out
in
jl
mov
fdivr
xchg
add
dec
(bad)
sbb
xchg
sbb
in
xchg
les
add
mov
push
sti
loop
mov
sub
sub
and
sub
dec
cmc
mov
jecxz
add
pop
stos
retf
mov
pop
cmc
(bad)
repz
das
jbe
out
sub
sbb
jbe
dec
cmp
xchg
movs
loopne
ds
cmp
and
cli
adc
jle
xlat
idiv
loope
pop
out
inc
data16
pop
xor
loop
clc
dec
inc
pop
pop
(bad)
fisttp
jl
cmps
jmp
xchg
(bad)
aam
jae
sbb
fmul
in
or
popa
sbb
lods
jno
ss
xor
int
push
imul
lock
pop
out
out
mov
les
push
aaa
ret
mov
push
shl
movs
js
fnsave
int3
or
rcl
mov
cmp
adc
jmp
mov
addr16
jl
push
imul
leave
call
jmp
sar
test
push
faddp
ins
data16
fidivr
or
jns
or
adc
fwait
or
leave
push
jge
out
rcl
cmps
imul
mov
xor
sahf
cmps
mov
jns
(bad)
stc
inc
aas
(bad)
xchg
fs
pushf
(bad)
pop
out
std
sub
(bad)
(bad)
lea
mov
dec
or
bound
mov
push
les
xchg
in
mov
lahf
repz
push
jl
mov
je
cmp
jmp
rol
hlt
add
test
jns
mov
mov
cld
cmps
stc
scas
in
icebp
int3
pop
adc
fisttp
mov
stos
(bad)
out
xchg
dec
mov
and
adc
add
jmp
(bad)
mov
inc
jmp
scas
ds
jb
push
xor
scas
sub
lahf
fnstenv
test
pop
jae
xor
mov
jl
test
push
lahf
push
out
cmc
sbb
mov
adc
mov
pop
pop
mov
fistp
inc
mov
xor
push
aam
dec
cmp
lea
sbb
lock
lods
sub
jne
adc
mov
(bad)
inc
(bad)
inc
scas
xchg
cld
jmp
sub
(bad)
inc
(bad)
inc
scas
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
push
into
(bad)
inc
xchg
or
lahf
sbb
fwait
arpl
mov
jl
cmp
int3
jnp
mov
sub
ds
ret
cmp
jecxz
push
int
movs
outs
jmp
add
mov
test
imul
inc
rcr
sar
pop
cdq
loop
aaa
xchg
(bad)
pop
rcl
loope
loope
and
xchg
jnp
mov
cdq
cdq
mov
mov
rcl
ret
popf
repz
in
ret
fbstp
push
jecxz
mov
jb
and
sahf
lods
mov
sub
mov
fisubr
xor
add
or
jns
xchg
je
or
fld
mov
add
daa
cli
cmc
int
aam
ror
adc
pop
add
or
(bad)
scas
loope
mov
mov
and
sahf
ds
inc
cmp
xor
pop
mov
jecxz
push
mov
inc
les
cmp
hlt
in
int
sbb
sti
mov
imul
(bad)
ja
mov
loop
jnp
js
jmp
dec
mov
fist
add
pop
(bad)
push
pushf
addr16
xchg
(bad)
xor
pop
push
cmp
daa
pop
or
mov
mov
inc
dec
scas
inc
dec
push
aad
mov
add
cmp
add
fcomp
ins
sbb
push
push
mov
lock
cmps
aas
test
shl
add
mov
call
cmps
sub
push
leave
pushf
out
pusha
shl
xlat
pavgw
or
sbb
leave
jnp
ja
and
ds
adc
cld
add
ja
jae
ds
dec
sbb
jno
daa
xor
jae
mov
sub
fisttp
outs
jne
inc
and
lods
sbb
imul
push
add
push
jne
dec
mov
mov
ja
jne
(bad)
out
arpl
les
sti
imul
inc
and
outs
sub
dec
jge
clc
mov
aaa
mov
or
arpl
mov
test
cwde
pusha
or
xchg
mov
push
ret
or
xchg
dec
jno
add
in
add
(bad)
stc
arpl
jno
jge
sbb
idiv
jb
add
pop
jg
or
cmp
loop
xchg
dec
das
lds
and
rcl
in
outs
inc
loopne
pop
mov
xchg
(bad)
lock
xor
cmps
xchg
pop
dec
sti
inc
clc
jmp
gs
gs
ins
and
inc
mov
add
das
pop
mov
xchg
or
pop
daa
sar
(bad)
pop
inc
fnstenv
and
ret
outs
or
arpl
sbb
imul
pop
imul
pop
shl
mov
add
pcmpgtw
sub
addr16
xchg
(bad)
popf
jle
imul
adc
xchg
icebp
sbb
or
xchg
test
leave
sub
inc
and
sbb
test
mov
fidiv
shl
lock
test
pop
jle
xor
jl
cmp
sbb
stc
and
cmps
loope
fild
inc
lock
(bad)
jp
xor
mov
mov
mov
mov
jno
sub
stos
into
mov
test
jmp
pop
cmp
or
and
xlat
adc
movs
popf
stos
cmp
clc
pop
mov
std
dec
mov
add
std
(bad)
cwde
cmp
xchg
clc
xchg
adc
inc
mov
sti
cmp
in
xchg
frstor
push
pop
(bad)
dec
adc
mov
add
adc
enter
push
push
cmc
in
mov
jae
xchg
call
sbb
jg
scas
add
push
mov
sub
sub
sbb
push
mov
add
repnz
dec
mov
pop
cwde
hlt
sti
mov
adc
out
push
test
or
add
add
or
mov
jb
fwait
cmp
mov
cld
mov
mov
js
int3
leave
rcl
sti
test
pop
scas
stc
out
mov
(bad)
sahf
dec
sub
cmc
popa
cmp
ret
shr
push
adc
test
pop
(bad)
push
jbe
cwde
add
into
cmovno
out
stos
xor
push
std
fwait
cld
sub
aaa
clc
movs
mov
pop
lock
mov
jecxz
cmp
sbb
enter
inc
fstp
js
(bad)
pop
(bad)
in
and
cmc
in
cli
lahf
rcl
daa
loopne
or
add
mov
scas
push
retf
retf
and
addr16
mov
and
dec
lock
sahf
ins
ins
ja
xor
jae
clc
inc
popa
(bad)
jnp
pop
pop
sub
pop
jbe
repnz
std
jl
out
mov
fcomip
ss
std
jge
out
push
mov
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
adc
cmp
scas
adc
addr16
or
cmp
adc
inc
pop
cmp
or
sbb
fld
stos
pop
aaa
nop
hlt
dec
xor
xchg
rcr
(bad)
sub
pop
pop
inc
mov
test
pusha
jp
sqrtps
scas
pushf
xor
call
add
sbb
sar
or
sar
mov
nop
cld
movs
jp
in
mov
sbb
inc
pop
add
out
imul
dec
cmps
and
jnp
and
dec
(bad)
(bad)
xchg
mov
call
fsub
mov
lds
lock
cmp
test
bound
adc
and
xor
movs
dec
ss
arpl
pushf
pusha
fidiv
push
ins
xlat
dec
ss
mov
sbb
cmp
adc
stos
pop
ret
adc
xchg
mov
add
scas
push
ret
cmp
sahf
test
ds
push
mov
int
xor
adc
xchg
push
jne
pop
mov
stc
mov
pop
and
and
cmp
repnz
hlt
inc
cdq
and
test
xchg
ins
add
sti
push
pop
jne
jbe
enter
sbb
adc
inc
or
lock
mov
clc
mov
(bad)
je
inc
fist
out
push
je
push
out
sbb
mov
les
inc
pop
nop
inc
pop
push
lods
ds
movs
int
ins
sbb
fidiv
xor
pushf
pusha
mov
mov
pop
sbb
sti
mov
aad
inc
pop
add
rcl
ret
mov
push
xchg
cmp
aaa
lea
pop
push
icebp
or
xor
cmp
xchg
sub
cmp
test
js
mov
and
iret
or
add
sbb
daa
push
push
pop
mov
adc
lahf
dec
(bad)
lock
cld
sub
mov
cmovg
js
sti
ds
jo
xor
dec
add
inc
inc
jb
outs
lahf
test
test
ret
gs
shl
dec
int
nop
adc
movs
and
or
jns
mov
mov
push
cmc
fistp
push
leave
in
cmc
dec
mov
mov
sbb
sbb
hlt
adc
outs
mov
or
cmp
in
jg
call
jae
sti
push
xchg
xor
je
jmp
int3
lods
retf
push
clc
lods
or
sbb
retf
retf
rcr
sub
add
adc
div
in
fbld
inc
mov
jns
test
lock
inc
add
pop
dec
ins
pop
rcr
cmps
into
and
jmp
call
ins
mov
hlt
nop
inc
clc
hlt
dec
stc
xlat
fdiv
ss
sbb
xchg
mov
push
sub
mov
(bad)
ds
(bad)
inc
dec
xchg
movs
xchg
xlat
test
out
mov
jbe
repz
mov
fiadd
jle
lock
adc
mov
jns
push
lods
and
hlt
daa
hlt
test
call
mov
leave
mov
cld
xlat
scas
(bad)
sub
je
or
stos
(bad)
inc
inc
scas
xchg
push
shl
popf
lods
stos
cs
stos
pop
fstp
int
cs
retf
cmp
xchg
shr
mov
or
inc
aas
out
push
and
cmps
js
xor
dec
mov
retf
mov
jecxz
iret
les
in
mov
push
mov
jle
clc
movs
loop
test
inc
xchg
icebp
cmp
mov
cmp
stc
jmp
or
inc
sub
mov
in
inc
push
xor
mov
xchg
int3
inc
dec
push
jmp
mul
inc
into
mov
or
retf
icebp
cmp
xor
sub
sub
inc
sub
(bad)
or
mov
jmp
das
jl
mov
je
jmp
add
movs
pop
aas
dec
sub
xchg
int
popa
jmp
scas
mov
add
sub
stos
loope
(bad)
jl
(bad)
mov
aas
pop
inc
test
pop
jmp
movs
or
cmp
adc
add
add
inc
inc
lock
xlat
ret
ds
ror
movs
pop
(bad)
in
outs
xchg
inc
pop
out
adc
scas
(bad)
daa
mov
lea
out
mov
fcomip
ss
std
jl
out
push
mov
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
mov
(bad)
push
jmp
jmp
scas
out
aas
lods
jbe
ret
jge
or
inc
aas
cmc
fldcw
add
jne
inc
cld
and
loop
(bad)
std
mov
inc
data16
jno
sub
mov
call
aas
data16
test
sub
mov
cmc
imul
ds
shl
dec
cmps
scas
outs
clc
or
mov
ret
aam
enter
mov
and
mov
xchg
pop
sar
xor
ss
scas
fnstcw
dec
mov
pop
mov
sub
jnp
mov
xor
cmp
test
outs
dec
mov
int
jmp
inc
inc
push
inc
arpl
repnz
imul
aad
mov
pop
aas
cs
or
ror
in
cld
mov
cmp
xor
iret
scas
or
xor
add
or
into
and
fdiv
pop
imul
pop
lock
jmp
jecxz
sub
jle
aam
xlat
je
jnp
mov
in
loopne
cs
test
fiadd
add
xchg
cmp
aam
bound
scas
or
cmp
adc
popf
xor
cmp
out
mov
lods
push
inc
aam
inc
loope
retf
leave
or
scas
loope
push
in
(bad)
jmp
add
xchg
dec
lods
pop
clc
pop
ret
ds
mov
daa
aad
add
call
arpl
jle
and
xor
clc
lods
cmp
ds
das
mov
lods
jns
mov
push
push
hlt
xor
pop
xchg
enter
adc
cmps
fisub
aam
jl
cld
loop
push
dec
dec
cdq
mov
cmp
and
sub
mov
xchg
xchg
and
xor
pop
bound
mov
dec
pop
sbb
pop
outs
jae
jns
rep
repnz
div
out
push
push
dec
aam
(bad)
stos
ficomp
mov
pusha
sar
dec
fimul
mov
push
lods
fdivr
ins
stos
mov
mov
push
xchg
and
mov
ds
push
cmp
inc
add
arpl
ins
je
adc
xchg
dec
repnz
fwait
imul
xchg
jno
xor
mov
and
mov
adc
adc
add
pop
(bad)
mov
and
call
cwde
fist
xchg
sub
push
sbb
xchg
sub
xchg
mov
and
push
(bad)
movs
sti
enter
jle
out
call
push
imul
ret
ficomp
ds
inc
sbb
mov
sub
inc
sbb
enter
add
les
ret
xor
cmpps
and
imul
mov
in
outs
ja
dec
jl
in
shl
pop
mov
leave
movs
fdivr
jle
sbb
loop
jne
jbe
inc
mov
cmp
out
mov
pop
cmp
(bad)
mov
cmp
xchg
arpl
int
cmp
mov
push
ins
jle
mov
cmp
push
pop
mov
cli
std
aas
lods
retf
sub
jmp
repz
pop
jmp
into
sub
clc
cmps
push
mov
jo
ds
jmp
out
mov
push
mov
jg
pop
sub
adc
int
loop
push
int
popf
test
(bad)
mov
pop
push
test
shl
aad
sahf
arpl
jg
mov
cs
sub
scas
pop
pop
retf
aam
cs
test
add
nop
jae
call
rol
mov
fbld
retf
out
(bad)
adc
inc
or
cld
inc
sahf
sub
mov
outs
repz
sbb
inc
popa
pop
add
add
mov
cmp
ffree
xchg
enter
(bad)
jg
ja
add
sahf
push
es
icebp
inc
sub
sbb
jno
loopne
(bad)
repnz
cmp
addr16
in
daa
test
mov
aas
pop
(bad)
sbb
sub
adc
popf
stos
pop
jmp
mov
mov
fild
jmp
jnp
pop
jle
pushf
stos
push
dec
sbb
dec
cmp
ins
push
adc
movs
ret
int
inc
dec
cdq
xchg
out
mov
popa
out
push
xchg
jmp
add
mov
push
cmp
xchg
mov
scas
cld
imul
and
push
xchg
push
dec
adc
shl
inc
and
cmp
or
sbb
gs
mov
popa
clc
mov
mov
out
inc
arpl
dec
shl
cwde
pop
fisttp
addr16
movs
adc
scas
cmp
sbb
(bad)
mov
scas
cmp
sbb
(bad)
mov
inc
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
ds
mov
dec
sbb
in
scas
inc
scas
ds
mov
aam
dec
and
mov
pop
xor
add
fisub
jle
and
xchg
cli
aad
push
pop
lods
(bad)
lods
loope
adc
inc
test
xor
inc
pop
mov
sbb
sti
je
push
push
or
mov
jg
idiv
loope
xchg
push
xor
jge
mov
in
js
mov
int
loope
add
adc
jp
iret
cmc
scas
mov
mov
or
into
jns
add
(bad)
hlt
idiv
jmp
out
pushf
mov
xor
inc
sub
js
repz
in
dec
loopne
lock
ret
stos
out
sbb
jmp
cmp
dec
stos
inc
stos
cmc
in
jno
adc
sbb
xor
mov
dec
sub
test
(bad)
mov
aad
inc
xchg
fmul
ss
imul
inc
mov
js
and
pop
ins
mov
iret
or
push
pop
inc
jmp
pop
sbb
mov
mov
lods
clc
jge
jl
pop
pop
mov
adc
out
inc
scas
popf
mov
mov
jmp
lods
ins
test
(bad)
out
setb
popf
mov
fcmovu
nop
and
fs
xchg
ss
inc
xor
nop
jnp
jmp
stc
sbb
push
stc
jge
fdivrp
lods
xor
cmp
div
jge
loopne
daa
mov
pop
cmp
xor
push
movs
fist
xchg
out
xor
in
(bad)
fidiv
hlt
cmp
push
repnz
sbb
ins
mov
sbb
add
sbb
test
loopne
fs
xchg
shl
out
test
fsubr
sbb
jg
retf
jo
icebp
popf
(bad)
cmp
inc
pop
mov
ret
(bad)
cmps
ret
jg
inc
(bad)
rcl
mov
mov
mov
(bad)
aas
out
inc
sub
jge
scas
call
xchg
dec
loop
int
fstp
mov
jae
mov
mov
shr
ror
je
add
repnz
ja
invd
fsubr
ss
adc
and
dec
in
jb
push
and
pop
ins
in
(bad)
fld
cmps
sub
mov
into
imul
les
lock
pop
clc
xchg
cmp
and
inc
cs
mov
inc
pop
shl
dec
pop
push
mov
daa
clc
inc
pop
shl
hlt
scas
or
scas
(bad)
xor
shl
push
aad
inc
dec
lahf
jo
and
retf
cmp
loope
outs
push
xchg
ret
or
ficomp
mov
lea
xchg
int3
add
cmp
xlat
(bad)
pop
push
js
inc
or
add
xor
add
aaa
xor
aas
loopne
sar
rol
cmp
add
cmps
cs
ss
push
mov
lock
pop
xchg
sahf
sbb
inc
cmps
ret
cmps
into
ss
sub
icebp
les
es
add
mov
je
xchg
pop
pop
mov
jge
mov
xor
sbb
and
mov
add
ds
je
sbb
das
gs
arpl
popa
push
or
pop
out
iret
scas
jge
cmp
or
(bad)
fisubr
lock
mov
dec
jecxz
cwde
xor
clc
shl
in
xor
jmp
sbb
cmp
test
adc
or
dec
(bad)
sti
stos
sub
sub
popf
enter
(bad)
neg
in
jb
sbb
push
scas
(bad)
cld
nop
dec
cld
and
(bad)
call
test
loop
mov
ret
pop
mov
mov
(bad)
out
das
and
test
xchg
inc
loopne
sbb
mov
push
test
lds
sub
push
repz
arpl
inc
sub
cli
xlat
jle
or
in
and
mov
pop
sbb
fstp
mov
retf
and
(bad)
lea
push
pop
repz
jmp
ins
sbb
popa
inc
idiv
add
lods
add
imul
inc
cmp
sbb
rcl
pushf
popa
sub
fwait
xlat
outs
test
int
shr
xor
jle
push
fidiv
adc
mov
addr16
adc
scas
fbstp
adc
or
jb
pop
push
sar
aas
mov
sbb
test
mov
mov
out
(bad)
add
cmp
pop
push
ror
dec
mov
xor
(bad)
lahf
xor
jno
lea
daa
jbe
retf
test
pop
or
scas
or
xchg
lods
xchg
mov
clc
jae
pop
test
sbb
dec
aad
imul
xlat
int
xchg
xchg
jge
dec
mov
clc
fidiv
popf
mov
rcl
jg
jmp
out
ins
pop
ret
les
aaa
lock
mov
in
dec
push
fdivr
(bad)
(bad)
fcom
pop
lea
mov
gs
jo
stos
xor
in
pop
retf
call
mov
add
inc
cmp
dec
repz
add
xchg
xchg
cld
call
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
ret
cmp
mov
inc
fbstp
scas
scas
mov
into
jnp
aam
push
inc
sar
jle
cmp
imul
in
mov
(bad)
mov
lods
mov
sub
bound
in
adc
fld
mov
cmps
mov
ja
adc
mov
push
xchg
repnz
dec
sub
xor
add
icebp
into
loop
mov
sbb
jge
xor
lea
cmp
add
sti
pop
mov
or
jmp
and
mov
sbb
xchg
xchg
addr16
cmp
add
cmp
inc
pop
pop
retf
mov
add
loop
std
jecxz
add
(bad)
ds
cli
or
fimul
lock
loop
test
mov
imul
popf
mov
mov
sbb
cdq
out
sub
shr
stos
call
repnz
push
jmp
shl
pop
sbb
xor
loope
fs
sub
(bad)
push
das
jae
sbb
sub
ret
bound
add
aad
repz
and
ficomp
mov
jge
add
out
les
dec
nop
sbb
push
test
aas
jmp
movs
push
xchg
push
xor
and
cli
sti
(bad)
fisttp
sub
hlt
loop
ror
push
adc
stc
dec
and
gs
or
pop
and
cdq
jl
ja
les
lea
enter
ror
mov
lods
jmp
aad
mov
inc
movs
push
sub
mov
jle
xchg
dec
or
cmp
retf
cld
jo
jg
fsubr
jbe
or
out
mov
(bad)
in
add
adc
(bad)
mov
call
test
xchg
mov
mov
or
mov
mov
xor
sbb
mov
cs
icebp
pop
sar
xor
cmps
enter
inc
jae
arpl
loop
js
call
dec
imul
sub
ficomp
jnp
ret
dec
sub
mov
mov
imul
sti
pop
dec
imul
adc
or
sahf
xor
sub
jp
iret
(bad)
lahf
mov
movs
(bad)
iret
mov
xlat
das
ins
sub
call
fild
je
or
pop
cmp
pop
repnz
mov
(bad)
pop
lods
mov
hlt
fadd
fstp
sar
push
popf
daa
xchg
ja
fisttp
(bad)
jecxz
stc
inc
ds
clc
xchg
ret
div
jle
push
mov
das
prefetch
or
(bad)
dec
jae
mov
into
lds
or
pop
xlat
int
sbb
sahf
or
ds
loop
aad
jno
cld
rol
test
cmp
inc
push
out
jmp
pop
inc
cmp
xchg
dec
xchg
mov
into
mov
jbe
xchg
sub
in
(bad)
iret
push
lods
mov
stos
mov
pushf
mov
add
pop
xchg
jmp
lods
outs
adc
or
mov
outs
and
pushf
mov
sub
jecxz
scas
(bad)
jle
(bad)
test
and
cmp
lods
sbb
in
call
mov
movs
clc
cli
icebp
pusha
jge
into
lock
arpl
or
mov
outs
ins
test
sbb
xor
mov
or
int
xor
into
inc
std
cmc
pop
call
cmp
mov
or
mov
adc
adc
sub
add
jbe
xbegin
pusha
mov
int
mov
fs
(bad)
enter
jp
jb
test
pushf
pop
push
(bad)
sub
mov
dec
add
sub
inc
mov
xchg
push
lea
sub
mov
data16
mov
stos
fs
ret
pop
neg
ins
inc
jecxz
mov
cmps
movs
cwde
sbb
add
fnstenv
out
fdivr
and
add
pop
cs
jbe
dec
(bad)
in
fst
jl
retf
xor
add
xor
(bad)
sbb
jle
push
aad
adc
sub
jae
push
clc
inc
cmp
hlt
jbe
out
outs
jmp
arpl
test
sti
ds
loope
mov
jecxz
mov
icebp
xor
jns
lods
iret
lahf
bound
stos
call
loop
cwde
setne
xchg
cmps
mov
mov
enter
and
adc
add
fcomip
ss
std
jl
out
mov
fcomip
ss
std
jge
out
push
mov
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
pop
int
sbb
sbb
pop
popf
scas
daa
call
cmp
mov
mov
fiadd
mov
arpl
cmp
inc
les
sbb
cmp
clc
jg
icebp
mov
xchg
stos
inc
fs
add
cmp
je
cmp
rcl
mov
jl
aam
sti
stc
add
cld
and
cmp
cmps
jg
dec
pop
fst
movs
movs
cdq
into
jl
mov
push
clc
(bad)
cmps
ret
sub
jmp
ins
push
jge
inc
cld
imul
pop
out
and
adc
in
pop
loope
sub
mov
xchg
dec
xor
push
dec
sbb
xlat
add
out
imul
add
sub
fcmovnb
fs
daa
sbb
cmp
idiv
adc
xor
sub
scas
xchg
push
imul
ret
jno
out
dec
push
ss
inc
mov
scas
daa
sbb
(bad)
dec
mov
jmp
dec
mov
in
jne
sbb
cmp
in
pusha
cmps
sub
repnz
nop
jo
adc
pop
xlat
ret
pop
je
cmp
lods
jle
add
aam
dec
xor
inc
rcl
mov
js
sub
mov
(bad)
mov
or
cwde
mov
aaa
ins
pop
mov
(bad)
dec
mov
fisttp
movs
test
pop
pushf
aas
push
ds
inc
call
pop
pop
and
jno
call
cwde
mov
(bad)
sbb
loop
jmp
cmp
fsub
retf
lods
xchg
cwde
xchg
cmp
sub
xlat
jns
shr
(bad)
pop
mov
call
pop
mov
xchg
push
shl
sbb
ins
mov
aam
inc
add
jo
add
push
jbe
jmp
adc
dec
and
pop
push
outs
dec
shl
sar
cmp
adc
push
fimul
xor
ins
adc
fstp
ins
jae
(bad)
and
add
das
cmps
stos
jmp
repnz
ret
bound
adc
sbb
leave
adc
jnp
inc
loope
dec
xor
mov
pop
popf
mov
and
int3
mov
fs
mov
ja
xchg
inc
inc
loopne
push
out
loope
scas
neg
push
div
adc
adc
repnz
and
xchg
xchg
ror
push
push
test
loop
sbb
scas
retf
icebp
sbb
and
jno
in
out
sub
(bad)
aad
popa
nop
or
jno
sbb
loope
jmp
mov
lock
pop
dec
stc
test
daa
in
or
xlat
imul
add
lea
dec
jns
ja
leave
repnz
xchg
pusha
pop
fwait
xchg
gs
pop
lds
xchg
les
jp
push
fmul
cmp
jb
push
inc
cmp
mov
(bad)
out
and
shl
jns
push
mov
and
loop
jbe
or
inc
sbb
and
mov
mov
dec
push
xchg
fdivr
stos
push
xchg
les
adc
xchg
push
inc
xor
sbb
adc
sub
jp
mov
inc
(bad)
in
lahf
data16
pushf
mov
sbb
(bad)
cmp
fmul
add
aas
pop
jecxz
sub
out
test
cld
mov
(bad)
mov
adc
addr16
stos
mul
js
imul
cmp
cmp
mov
jno
dec
in
bound
mov
fiadd
add
mov
mov
outs
push
mov
movs
arpl
in
fldcw
jp
inc
sbb
test
push
retf
add
add
xor
sbb
and
or
dec
std
scas
cmp
xchg
ins
cwde
dec
add
sbb
movs
inc
in
ins
pop
mov
xchg
sub
fwait
pop
jb
sbb
cli
out
(bad)
mov
lods
aaa
pop
sar
in
outs
mov
sub
ins
jbe
xchg
pop
fmul
sahf
mov
leave
xchg
lods
call
scas
adc
xchg
xor
ret
(bad)
test
out
in
(bad)
ss
adc
pop
mov
mov
xlat
(bad)
out
mov
mov
cmc
inc
and
adc
std
mov
adc
cmp
js
scas
outs
icebp
outs
vmovd
adc
rcl
aaa
pop
pop
push
icebp
outs
jmp
cmp
cmp
pushf
xlat
test
sub
lea
xchg
xlat
add
jbe
xor
inc
mov
(bad)
pop
test
mov
jbe
adc
call
mov
leave
movs
call
jne
or
adc
pusha
pop
arpl
nop
repnz
and
add
mov
or
sub
lods
shl
pop
xor
mov
jecxz
(bad)
xchg
and
stos
ja
lds
cli
test
mov
fidivr
push
xor
shr
pushf
loop
rcr
(bad)
xchg
pushf
jo
repz
scas
cmc
sub
push
js
fdivr
outs
outs
in
sub
and
out
das
adc
jge
rsqrtps
inc
cmovnp
adc
retf
jnp
jge
sti
xor
loope
fsincos
inc
mov
cmp
push
mov
in
cli
bound
shr
mov
cmp
popf
pushf
xor
cmps
call
lock
and
out
lods
push
pop
jnp
(bad)
push
call
add
mov
mov
mov
(bad)
inc
(bad)
inc
scas
xchg
cld
jmp
sub
(bad)
inc
(bad)
inc
scas
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
xchg
add
push
xor
jecxz
jl
cmps
pop
iret
imul
sbb
xchg
cld
and
loope
add
pop
movs
push
(bad)
in
mov
cmc
mov
cmps
icebp
push
mov
push
mov
jge
push
cmp
sub
ret
shl
mov
scas
nop
enter
and
sbb
test
mov
loope
test
je
xor
xor
mov
jp
xor
push
in
cmp
mov
cdq
push
jns
stc
sbb
inc
repz
mov
(bad)
jp
aas
cmp
fucomi
in
cmc
adc
mov
xchg
loope
mov
mov
icebp
test
mov
xor
push
int3
pop
std
pushf
add
clc
jae
pop
lods
movs
xchg
dec
test
lock
stos
dec
push
inc
sub
fadd
xor
sti
fnstsw
xchg
retf
cmps
imul
pop
sbb
push
adc
mov
movs
adc
or
push
call
in
das
hlt
mov
mov
je
pop
push
shr
retf
adc
fs
sbb
sub
mov
retf
lock
cmps
mov
or
and
ins
mov
mov
xchg
bound
or
(bad)
dec
mov
lods
cld
jno
mov
or
xchg
sahf
adc
jbe
jecxz
sbb
enter
inc
dec
cmp
ficomp
in
cld
cmp
mov
jne
mov
sahf
sub
push
jno
mov
add
ds
xchg
cmp
xor
dec
mov
shr
imul
mov
xor
cmp
repz
xchg
in
fidiv
add
add
fild
cs
push
js
dec
aam
dec
pop
push
aad
sub
popf
in
inc
movs
cmp
in
int3
push
adc
stc
mov
jl
jg
inc
mov
mov
in
daa
mov
in
mov
push
clc
shl
movs
sbb
nop
ds
out
jle
clc
add
push
xor
pop
adc
dec
test
push
repnz
or
out
outs
add
sar
add
(bad)
cwde
mov
test
stc
not
xor
(bad)
ret
test
minps
(bad)
arpl
rcr
aad
cdq
xor
stc
fucompp
and
sub
sbb
sbb
jg
xor
fwait
ret
aaa
ins
sar
mul
leave
add
rcr
add
in
scas
in
or
lds
cmp
lods
fcomp
cmp
pmaxub
cdq
rcr
call
mov
and
movs
out
fucomip
mov
dec
jp
(bad)
ds
sbb
sti
dec
push
pop
adc
test
ret
imul
or
cwde
fstp
in
or
icebp
fild
in
sbb
sub
dec
xchg
jge
xchg
test
test
push
inc
adc
scas
jecxz
sahf
pop
and
xchg
mov
inc
and
pop
arpl
push
or
jecxz
sbb
cmp
xchg
mov
mov
xchg
push
dec
push
lods
aam
mov
mov
int
lahf
sti
adc
mov
sbb
pop
out
xchg
shl
xor
arpl
pop
icebp
push
mov
add
mov
mov
xor
das
adc
movs
arpl
mov
and
shr
xor
cmp
ins
inc
jno
test
retf
xor
sub
dec
int3
inc
pop
cmps
and
mov
test
inc
aas
jne
push
xchg
iret
std
mov
push
mov
dec
sub
cld
jg
ret
fidivr
out
adc
or
mov
sub
adc
cmp
mov
and
in
jbe
sbb
jp
mov
lods
(bad)
sbb
pop
lds
lods
inc
cmp
mov
int3
shr
ret
ss
pop
add
daa
loop
retf
jg
(bad)
fisttp
mov
push
aas
inc
aad
cld
mov
push
ins
stc
or
mov
cmp
mov
push
inc
ins
ds
fisubr
clc
cs
in
adc
adc
jmp
mov
mov
xchg
sti
iret
nop
cld
sub
push
or
jno
lods
arpl
repz
mov
sbb
(bad)
mov
scas
jmp
sub
cmps
jge
lods
xchg
rol
pop
or
xchg
sbb
loopne
cmp
pop
dec
and
sub
aad
mov
mov
imul
pop
out
in
int3
mov
inc
sbb
xchg
xchg
or
and
sub
lahf
dec
std
xchg
outs
out
hlt
dec
push
push
sbb
lods
js
out
sti
inc
stc
mov
pusha
mov
cwde
loopne
add
and
mov
mov
or
popf
push
scas
ret
fnsave
jnp
pusha
bswap
xor
lds
inc
mov
mov
clc
jle
jle
or
mov
mov
add
jg
in
add
hlt
dec
repz
add
inc
cmp
hlt
dec
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
outs
push
fidivr
cld
dec
icebp
mov
mov
sti
inc
cmp
enter
hlt
aas
shr
add
das
add
sub
(bad)
hlt
sub
retf
fadd
mov
and
jbe
cmp
pop
cmps
mov
fmul
aas
(bad)
sub
ja
fild
dec
in
push
push
outs
outs
push
adc
cld
dec
ins
imul
inc
fwait
jle
add
sbb
test
enter
inc
jecxz
das
inc
or
mov
mov
inc
mov
mov
jne
scas
pop
inc
mov
or
xchg
(bad)
fmulp
cdq
jns
sbb
fsub
xor
retf
aaa
push
shl
jo
cmp
xchg
(bad)
dec
jp
xor
in
movs
aad
shl
jae
pop
pop
xchg
dec
sub
mov
adc
xor
test
adc
and
(bad)
lahf
mov
fidivr
dec
add
push
push
and
jns
pop
jg
mov
jmp
adc
jo
ficomp
ror
jmp
jb
imul
xchg
jno
test
sbb
jbe
sahf
pop
stos
push
in
pop
aad
cmp
es
ja
ror
jmp
mov
mov
ja
or
xchg
shl
cmc
pop
pop
(bad)
loop
mov
cdq
pop
push
xchg
outs
ins
(bad)
mov
pop
mov
sbb
enter
add
out
idiv
cli
jle
lods
pop
dec
xor
lea
cdq
sub
mov
in
ss
in
xor
into
cmp
mov
ss
inc
inc
cmps
clc
int
clc
mov
mov
aam
or
mov
sub
add
add
jb
in
loopne
loop
fisttp
pop
pop
push
stos
fwait
push
add
jns
jb
mov
add
mov
xor
add
sbb
mov
aad
adc
pop
and
(bad)
mov
in
mov
xchg
lea
jmp
and
xor
into
ja
fiadd
mov
pop
cdq
inc
cmp
inc
in
fisub
mov
in
xor
pop
cdq
in
xor
fnsave
jle
mov
push
sub
push
loope
cmp
cmp
lods
call
scas
cmp
loopne
das
sbb
push
mov
xchg
ror
xor
retf
sbb
xchg
and
fild
lods
sahf
xchg
pop
push
mov
mov
push
aaa
xchg
fiadd
das
xor
loop
adc
fist
sbb
shl
jl
test
repz
add
dec
push
inc
sbb
dec
sbb
outs
mov
ins
addr16
scas
jl
icebp
cs
sub
loopne
and
add
xchg
xchg
dec
in
data16
ins
adc
adc
outs
xor
das
lds
jno
mov
cli
mov
daa
fisubr
adc
mov
sub
pop
push
nop
cmp
cmps
mov
inc
movs
inc
cmps
xchg
xchg
xchg
dec
sti
dec
mov
cmp
test
lds
jne
inc
dec
inc
sar
xor
adc
fisttp
mov
xchg
xchg
ss
fcomp
arpl
cmp
mov
push
jbe
mov
shl
sub
cwde
je
cli
int
xchg
cmp
(bad)
imul
fidiv
jge
dec
and
push
dec
addr16
mov
dec
cmps
js
pop
(bad)
jl
jg
jmp
sbb
xor
movs
mov
add
inc
xchg
bound
arpl
(bad)
daa
mov
cld
add
imul
adc
test
add
sub
outs
into
fist
icebp
or
add
pop
pop
mov
sbb
mov
aas
mov
leave
addr16
stc
imul
retf
xchg
jl
push
js
clc
xchg
dec
mov
fist
jl
sub
(bad)
popa
stos
fcmovu
sbb
jnp
pop
outs
(bad)
mov
cmps
fcmovb
push
aaa
jo
fcmovnbe
retf
sbb
pop
(bad)
in
test
(bad)
sub
add
add
repz
mov
cmps
pop
popf
(bad)
cli
mov
repz
stos
fs
add
or
push
imul
sbb
data16
(bad)
sbb
ins
addr16
pop
in
loope
addr16
repnz
mov
cs
cld
shr
test
dec
or
push
mov
inc
jbe
lods
ins
dec
pop
mov
xchg
cmps
push
arpl
retf
imul
adc
sbb
xlat
rcr
lahf
sub
or
aad
cwde
neg
aas
xchg
xor
pop
imul
icebp
sub
fstp
in
outs
jl
xchg
mov
cld
dec
mov
cmp
mov
jp
mov
lods
(bad)
in
stos
xor
jbe
pop
or
mov
ret
and
sti
ds
pop
icebp
jg
je
popw
sahf
rol
ficomp
aam
out
cmps
xchg
call
jno
cmp
aaa
mov
in
jmp
popf
(bad)
lods
mov
sbb
std
pop
sti
xlat
ret
jmp
push
sub
mov
pushf
lock
retf
sbb
sbb
cmp
mov
push
inc
pop
out
push
inc
adc
push
inc
adc
push
popf
mov
lea
stc
xlat
mov
lea
stc
rol
mov
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
aas
lea
repz
mov
ret
jbe
sub
jnp
lds
adc
das
mov
movs
pop
(bad)
sbb
stos
call
jecxz
in
pushf
repz
cdq
stos
imul
outs
mov
into
inc
daa
jbe
jb
inc
fstp
jne
dec
push
jge
retf
aas
sub
into
out
lds
je
xchg
ror
iret
pusha
push
dec
call
mov
(bad)
xchg
cmp
and
push
je
icebp
jecxz
clc
das
and
dec
push
xor
cs
sbb
mov
aam
dec
shl
push
cmp
retf
lds
(bad)
mov
mov
pop
leave
add
add
fild
cmp
pop
mov
test
jno
push
sub
inc
not
enter
fld
xchg
leave
daa
xchg
js
cmp
dec
mov
sub
jns
aaa
fs
fisubr
test
add
xor
push
adc
pop
ret
in
pushf
add
add
js
add
mov
cmp
call
cmp
icebp
jae
add
or
les
jmp
repnz
bound
inc
sbb
adc
xor
jo
add
loopne
jns
pop
or
jle
call
dec
jno
js
shr
addr16
pop
repnz
mov
mov
push
dec
lock
int
pop
cli
mov
pop
inc
sub
outs
or
sbb
xor
mov
pusha
mov
jp
(bad)
xlat
inc
adc
fnsave
and
mov
out
ror
add
pop
cmp
mov
xor
mov
inc
repz
lods
xchg
ret
in
sub
rcr
lock
popf
scas
call
outs
loop
sahf
loop
fld
or
in
xchg
dec
mov
adc
test
mov
adc
sbb
cmp
cmp
add
xchg
xor
push
data16
mov
ret
and
sbb
inc
(bad)
mov
(bad)
cwde
mov
das
in
aaa
jno
cmp
mov
mov
add
or
add
dec
xlat
je
xor
imul
icebp
jge
fiadd
xor
fstp
loopne
fidiv
sbb
mov
ret
rcr
jmp
dec
dec
cmps
iret
pushf
je
add
fistp
pop
icebp
ds
jnp
xchg
outs
loop
adc
cmp
jnp
sbb
mov
mov
and
mov
daa
and
jnp
jg
or
in
pop
adc
sub
jns
add
pushf
sahf
mov
cmc
lsl
loop
mov
je
je
pop
inc
mov
mov
add
add
push
hlt
(bad)
adc
repz
sbb
clc
cmps
inc
aad
sub
xlat
ins
in
ins
fidiv
dec
push
push
push
jbe
retf
sbb
jnp
jmp
je
or
scas
mov
adc
adc
push
(bad)
hlt
popf
jb
add
xor
jnp
fld
sti
mov
xor
cmp
neg
sub
mov
je
push
dec
mov
shl
pop
cwde
mov
push
mov
mov
mov
jmp
mov
xchg
hlt
bound
inc
neg
pop
out
jno
icebp
push
out
(bad)
pop
icebp
mov
inc
dec
pop
pop
pop
fiadd
popf
popf
mov
ins
sahf
loopne
loopne
dec
int
jb
push
fcmovb
fmulp
pop
pop
sub
je
(bad)
mov
sahf
movs
mul
repnz
jnp
xchg
sub
adc
cmovne
and
popf
mov
xchg
jo
je
(bad)
sub
jl
call
pop
ds
call
(bad)
outs
iret
(bad)
mov
popf
cmc
and
ret
fidiv
aad
out
xchg
pushf
(bad)
shr
(bad)
xor
ins
pusha
sahf
aas
xchg
clc
jne
call
push
xchg
(bad)
push
add
cmp
xor
dec
pop
cmp
or
shl
iret
xor
mov
pop
xor
adc
hlt
pusha
inc
out
lods
ins
imul
mov
stos
sub
enter
popa
and
bound
icebp
pop
ds
cmp
sub
push
dec
sahf
adc
sbb
inc
lds
repz
fisub
mov
dec
xor
sub
mov
movs
fcomp
mov
jbe
cdq
repnz
dec
loope
cmp
iret
jg
pop
add
lock
xchg
and
cmp
or
stc
outs
int3
(bad)
mov
outs
xor
push
add
(bad)
jle
mov
xor
mov
jne
mov
push
out
add
arpl
ja
jo
fbstp
inc
loope
daa
in
or
out
xlat
add
nop
mov
clc
xchg
pop
sar
movs
mov
retf
dec
mov
xchg
xor
xchg
add
aas
imul
dec
lock
inc
cld
and
and
movs
dec
dec
mov
cld
clc
and
test
xchg
xchg
adc
es
aaa
mov
lea
sbb
dec
jg
mov
xlat
pop
mov
push
call
push
mov
int3
enter
cmp
in
jno
push
emms
lock
in
or
mov
ret
mov
pop
retf
in
mov
jae
fs
jne
jno
add
and
push
dec
add
mov
(bad)
xor
in
ins
pusha
add
xchg
enter
fldenv
mov
mov
pop
ret
loope
dec
push
imul
jb
ins
scas
in
inc
and
stc
and
jae
out
ret
(bad)
jmp
stc
pop
lahf
lods
xchg
std
dec
test
outs
push
inc
adc
ins
inc
and
xlat
sar
jne
xchg
out
inc
and
inc
das
daa
stc
rol
mov
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
pinsrw
dec
add
cdq
cwde
ret
cmp
aam
mov
es
icebp
stos
retf
cmp
xchg
xchg
loop
push
push
nop
sahf
cmp
xor
xchg
jmp
add
clc
out
ret
jp
or
lahf
or
shr
push
inc
stc
adc
jle
fldcw
or
test
in
out
test
sbb
jl
js
pop
mov
pop
int
hlt
ja
jae
dec
stos
mov
out
inc
jo
iret
sbb
popf
or
pop
inc
leave
imul
push
imul
jnp
outs
mov
neg
adc
(bad)
inc
dec
nop
xchg
jmp
scas
cmp
(bad)
aas
sbb
shl
xlat
out
outs
jl
test
hlt
xor
mov
pop
jns
mov
xchg
popf
mov
ins
add
sahf
ret
fisub
lds
pop
jmp
jne
adc
fidiv
xchg
cmp
jmp
jmp
pop
adc
sub
adc
fwait
push
outs
inc
leave
out
cld
jg
inc
mov
fwait
add
sub
dec
and
push
sub
and
mov
adc
inc
adc
std
mov
rol
jno
cmp
fs
popa
add
add
outs
fsub
pop
mov
ret
lahf
or
and
sti
push
lock
mov
lods
int3
(bad)
seto
push
in
or
adc
and
mov
ja
jbe
icebp
add
jnp
jge
mov
retf
neg
outs
xor
mov
repnz
pop
outs
pop
inc
xor
cmps
adc
lahf
aaa
mov
in
mov
jbe
imul
sub
std
aas
scas
inc
jae
arpl
popf
dec
push
and
sti
xor
retf
test
and
jmp
fnstcw
adc
clc
pop
loop
pop
clc
cwde
clc
iret
inc
dec
aad
and
mov
aas
repnz
inc
popf
jl
lock
jecxz
std
push
dec
xchg
dec
fisttp
or
inc
aam
repnz
cs
and
adc
adc
push
sub
xchg
loope
std
pushf
(bad)
dec
mov
iret
jae
cmp
add
stos
in
xor
dec
xchg
out
repnz
popf
repnz
js
mov
hlt
dec
test
lea
(bad)
rcl
sub
push
mov
enter
jg
pushf
cmc
scas
sti
imul
in
xor
sub
into
repnz
fwait
jne
or
add
jo
into
inc
loopne
scas
clc
shr
neg
hlt
lea
push
and
fstp
sbb
jo
xor
scas
push
into
test
cmp
jp
in
add
mov
ins
mov
cld
add
pop
dec
cmp
(bad)
(bad)
fdiv
jno
push
push
into
jle
dec
lods
jns
mov
ins
cmc
push
in
cmps
mov
inc
jmp
aas
lock
sbb
icebp
push
xchg
push
mov
imul
pop
lds
cmc
mov
push
xchg
and
sahf
xor
jp
cld
and
lods
dec
gs
or
inc
mov
mov
addr16
push
out
repz
xlat
mov
sbb
pusha
jne
out
pop
das
in
stc
and
leave
push
pmaddwd
adc
add
and
mov
sub
and
scas
mov
sub
fist
push
neg
mov
dec
cmps
inc
inc
dec
sub
add
jo
and
arpl
sub
in
out
or
fdivr
add
call
push
push
mov
push
and
mul
lods
sbb
cwde
jecxz
adc
(bad)
xchg
dec
shl
mov
icebp
outs
outs
bound
jb
ins
ficomp
add
in
dec
shl
out
int
xor
repz
mov
push
add
xor
sbb
dec
out
ds
daa
mov
(bad)
adc
sub
outs
sbb
or
dec
mov
adc
mov
jb
in
adc
in
(bad)
leave
sahf
in
push
repz
ret
aad
and
lea
sgdtd
jecxz
dec
mov
add
and
clc
xor
mov
jge
loope
shl
shr
mov
fnstsw
ret
mov
leave
out
cld
inc
test
iret
jnp
push
ror
push
inc
adc
test
add
mov
and
mov
mov
mov
xchg
repz
push
imul
inc
call
pop
clc
push
inc
xchg
sar
pop
sti
push
xchg
sub
mov
call
mov
push
fdiv
inc
pop
pop
popa
sbb
xchg
(bad)
js
ret
pop
mov
xchg
jne
inc
fstp
call
xchg
xchg
jb
sbb
shl
in
inc
push
sar
fisttp
sar
mov
repz
sub
mov
mov
lock
std
jnp
push
loop
mov
sbb
add
scas
and
out
les
or
aaa
test
jg
stos
xchg
xor
ror
outs
(bad)
cmp
jno
mov
mov
in
add
addr16
lods
loopne
jmp
cmp
loop
mov
jmp
and
mov
or
push
into
out
(bad)
jb
xchg
into
imul
cmp
mov
add
test
(bad)
mov
push
lea
je
mov
or
in
fisubr
mov
into
(bad)
inc
(bad)
inc
scas
xchg
cld
jmp
sub
(bad)
inc
(bad)
inc
scas
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
je
std
ds
push
pop
dec
jnp
jmp
pushf
cld
mov
cmp
sti
dec
mov
jne
loop
ss
inc
les
adc
repnz
xchg
pop
push
mov
add
or
(bad)
fcomp
fisub
dec
add
pop
jg
pop
int3
inc
pop
cmp
cmp
test
push
mov
dec
out
cmp
xchg
ja
add
xor
cmp
shl
scas
loop
outs
jge
scas
popa
mov
mov
mov
rcr
in
stc
js
inc
inc
inc
sbb
and
pop
lds
das
sub
shl
dec
cmp
jge
pop
shl
push
pop
push
mov
xor
add
xchg
add
pop
sbb
pop
and
inc
rcr
pop
jl
mov
aam
mov
mov
xchg
iret
add
sbb
stos
clc
pop
jnp
hlt
mov
cmp
je
pop
nop
inc
sar
pushf
cld
iret
outs
(bad)
icebp
inc
ror
pop
test
sbb
xor
daa
sub
das
push
jl
imul
mov
sub
adc
mov
test
(bad)
arpl
inc
repnz
sbb
mov
mov
add
ret
pop
push
mov
out
adc
xor
sbb
and
and
loop
mov
xchg
pop
outs
imul
cld
dec
gs
shl
xor
sub
cmp
popa
pop
int
add
(bad)
(bad)
movd
imul
pop
xor
std
pop
jle
fnstsw
mov
jl
jae
lods
jg
lahf
mov
les
addr16
out
jne
xchg
jmp
mov
or
and
adc
jge
loope
movs
in
cs
mov
dec
shl
ficom
jecxz
outs
icebp
scas
add
xchg
dec
pminub
ror
or
dec
inc
cmps
cmp
jmp
shl
xchg
cld
aaa
loop
mov
movs
shl
pop
or
std
lods
mov
adc
jbe
xor
pop
bnd
(bad)
call
jmp
fild
cmp
cs
ret
repz
mov
inc
or
popa
(bad)
xor
inc
inc
add
pop
aad
outs
mov
mov
and
jmp
cmp
sbb
xchg
iret
dec
aad
mov
stos
push
dec
not
push
adc
mov
xor
rol
scas
sahf
es
movs
in
sub
pop
push
(bad)
lock
push
aaa
lahf
sbb
frstor
sub
lock
int
xor
leave
bound
fdiv
xor
out
fcom
iret
push
retf
addr16
call
bound
out
loop
fs
dec
add
xchg
sbb
outs
add
mov
xor
pop
xchg
(bad)
mov
mov
push
pop
movs
xlat
outs
mov
shl
cdq
mov
add
mov
cmps
jmp
imul
jb
arpl
add
imul
sub
sbb
jno
mov
dec
fsubr
dec
icebp
cs
out
cmc
sub
mov
inc
lods
push
retf
sub
dec
cmp
or
add
jbe
jns
mov
inc
addr16
frstor
jnp
sti
cmp
imul
aaa
jle
jo
xor
pop
cli
ins
mov
adc
ins
xor
gs
and
xor
sub
ror
imul
arpl
call
push
repnz
bound
aas
jge
xor
cmps
into
pusha
inc
dec
jns
stos
mov
add
xor
mov
jecxz
xchg
xchg
pushf
pmaddwd
lea
addr16
xchg
les
outs
pop
pop
sahf
fist
xor
mov
popa
imul
pop
movs
pusha
les
out
push
into
aaa
xor
xor
ja
jecxz
jne
add
sar
fdivr
les
int3
test
xchg
mov
adc
outs
test
lods
xchg
ds
stos
nop
push
jp
fldenv
mov
mov
xchg
cmp
arpl
les
adc
sbb
addr16
mov
loop
push
fadd
lahf
inc
mov
retf
sbb
cmp
push
mov
mov
sub
fld
and
test
cmp
or
outs
add
jmp
dec
and
es
jmp
push
daa
mov
je
pop
(bad)
fisub
movs
jbe
jnp
and
scas
add
push
cmps
push
cmp
cs
xchg
mov
mov
or
fdiv
cmp
and
fcmovb
fwait
pop
xchg
js
jo
inc
add
add
cmp
jge
lock
ror
mov
sub
(bad)
pop
pop
es
mov
add
adc
xchg
fdivr
dec
loope
or
scas
xchg
aam
and
(bad)
push
jmp
dec
xchg
into
push
fsub
or
cdq
imul
push
into
inc
cmp
icebp
jmp
pop
cmp
dec
mov
mov
fidiv
fist
pop
out
das
jbe
out
push
push
imul
mov
adc
stc
mov
orps
loope
sub
sub
mov
jns
jg
fcomp
cmc
bnd
jp
jns
jg
fcomp
cmc
hlt
jg
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
jns
(bad)
fstp
inc
icebp
int
(bad)
in
je
mov
sub
retf
outs
repz
repz
out
jbe
and
pop
lahf
inc
add
ffreep
sbb
mov
jmp
repz
aam
and
lock
xchg
mov
(bad)
pushf
mov
mov
cmp
push
mov
test
in
and
leave
bound
mov
dec
pop
ins
lds
jnp
test
adc
in
jae
rcr
add
aas
cli
or
inc
push
dec
push
cmps
mov
add
loop
std
jecxz
add
fwait
div
cld
push
(bad)
mov
push
pop
mov
xchg
xor
sbb
fs
sbb
sub
sbb
call
cli
mov
test
mov
xor
sbb
mov
pushf
je
fst
arpl
into
mov
xor
cmc
mov
adc
and
cmp
mov
into
(bad)
fistp
mov
fwait
mov
pusha
mov
scas
sar
rcl
pop
sahf
sbb
ins
jns
mov
imul
and
sbb
push
xor
std
in
or
in
leave
xchg
aas
mov
pop
(bad)
mov
sbb
pop
hlt
jbe
or
xchg
xchg
(bad)
in
jl
xchg
sub
aad
sub
out
mov
cs
mov
inc
data16
fstp
call
dec
cmps
imul
xchg
xor
pop
add
add
mov
and
mov
jbe
cmp
leave
push
hlt
sub
jge
inc
outs
lods
jmp
(bad)
fidivr
aad
and
sbb
fsub
mov
push
mov
fs
jl
cmc
iret
test
cmps
lock
adc
les
mov
and
pushf
fidiv
retf
push
dec
sbb
mov
icebp
dec
test
xlat
push
sub
dec
jno
or
adc
mov
or
cld
add
popf
sub
pop
jmp
dec
stc
iret
cmp
repnz
in
sub
(bad)
(bad)
and
sbb
aas
in
pop
xor
xchg
jecxz
outs
adc
jne
into
mov
in
repz
inc
mov
pop
(bad)
cmp
loop
inc
fsubrp
test
push
jmp
test
adc
sbb
clc
vmovhps
dec
out
stc
jecxz
mov
retf
shl
xor
pop
stos
mov
jp
mov
je
lods
lea
add
lds
sub
mov
mov
jge
xlat
dec
pop
pop
test
test
xchg
in
(bad)
mul
add
jge
pop
xchg
je
add
dec
aad
fs
jl
mov
fucomip
test
stos
mov
mov
cmp
movs
jp
in
mov
mov
adc
sbb
xchg
sub
inc
adc
scas
sahf
(bad)
repz
retf
fstp
nop
cmp
lahf
dec
mov
sbb
inc
jb
scas
inc
add
std
js
in
xor
sub
fpatan
data16
lock
(bad)
ficomp
les
xchg
fcmovu
sub
cdq
es
xor
xchg
jo
ret
bound
scas
fs
gs
pop
xchg
adc
mov
stos
mov
cdq
cwde
jl
inc
inc
test
jnp
cld
ds
or
sbb
pop
retf
leave
stos
jo
jp
pop
mov
addr16
dec
dec
fisttp
push
sbb
retf
fimul
and
(bad)
sub
jb
xor
sbb
or
add
mov
add
sbb
mov
in
outs
cli
stc
aas
into
cmp
mov
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jecxz
iret
push
pop
lds
pop
(bad)
adc
xchg
or
and
cmp
(bad)
cld
aaa
es
stc
and
outs
out
out
outs
in
jae
xlat
cs
add
cmps
cmp
add
iret
push
(bad)
mov
pop
adc
xchg
clc
out
nop
pop
lods
into
cmp
cmp
imul
lods
imul
push
aam
xchg
aas
ds
xchg
add
fidiv
jp
xchg
add
sbb
stos
sub
xchg
push
imul
ret
icebp
cmp
or
xchg
inc
adc
adc
js
outs
clc
(bad)
mov
sbb
xchg
dec
bound
mov
out
jb
iret
into
inc
mov
(bad)
jl
jecxz
mov
xor
ret
mov
mov
daa
or
cli
jbe
mov
lahf
push
icebp
inc
js
mov
or
(bad)
ret
or
outs
cmp
lds
jb
pop
loop
stos
mov
push
push
sahf
push
test
mov
rcl
sbb
push
cwde
leave
loop
mov
mov
or
icebp
in
mov
mov
xchg
retf
pop
lds
lds
stos
shl
mov
dec
jns
cmps
xor
enter
cmps
fst
pop
dec
outs
mov
test
mov
mov
sbb
mov
out
xor
mov
push
jns
(bad)
sahf
div
ja
bnd
xlat
push
xchg
adc
sar
mov
dec
jmp
and
test
or
mov
mov
test
mov
inc
xor
mov
pop
js
paddsw
das
or
gs
or
mov
add
inc
hlt
(bad)
adc
push
pop
(bad)
outs
adc
push
pop
lods
jmp
imul
sbb
mov
ja
lahf
(bad)
test
into
cmp
xor
lods
jbe
jne
mov
xchg
lods
pop
mov
push
call
xchg
jmp
fisub
pop
push
daa
sbb
cmc
int
loopne
test
mov
push
les
sahf
sub
aas
xchg
push
push
pop
jle
iret
pop
dec
lock
mov
inc
stos
and
pop
adc
or
dec
in
fadd
adc
or
mov
shr
fstp
(bad)
inc
mov
jecxz
cli
xor
cmp
push
xchg
retf
sbb
fcom
call
movs
push
loopne
mov
cmp
cmc
fsub
sbb
jmp
push
adc
mov
fiadd
adc
mov
test
cmp
xor
je
das
mov
adc
pop
es
jno
pop
jmp
xchg
(bad)
xchg
arpl
in
inc
test
and
in
pusha
mov
fidivr
js
fstp
in
sbb
fisubr
lock
mov
dec
adc
imul
and
and
iret
push
xchg
add
inc
and
leave
adc
clc
lea
sub
push
dec
mov
in
movs
ja
and
cmp
cdq
popf
mov
and
call
in
ins
mov
cld
jne
lock
les
jl
cmps
js
retf
pusha
mov
jno
push
popa
sbb
cwde
scas
xchg
adc
in
arpl
in
xor
dec
jecxz
sub
das
test
mov
pop
(bad)
dec
or
imul
mov
jno
inc
out
or
jb
into
jp
ret
fst
(bad)
mov
dec
pop
aam
pop
loop
ins
movs
push
mov
les
jl
push
jecxz
and
(bad)
out
loope
mov
arpl
je
inc
push
dec
push
pop
mov
mov
add
xor
jno
fisub
mov
mov
mov
sub
add
cli
cli
aas
into
mov
(bad)
mov
in
and
repz
jp
hlt
sub
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
clc
ret
dec
lock
mov
cmc
add
dec
(bad)
pop
mov
jp
hlt
add
xlat
pop
adc
inc
lock
mov
xchg
and
cmps
fisubr
inc
imul
mov
cmp
push
jnp
popa
pop
retf
sub
fnsave
(bad)
push
es
mov
sub
clc
mov
pop
popf
outs
push
shr
add
pop
fisub
mul
mov
shr
jns
les
mov
push
ffreep
jno
(bad)
or
adc
xor
push
add
mov
inc
sbb
mov
les
arpl
in
das
fcmove
jge
imul
mov
and
cmps
out
and
icebp
fld
ins
outs
test
jge
stos
stc
mov
jmp
and
test
lahf
pop
xor
fdiv
inc
rcr
or
push
lds
sbb
mov
inc
jle
call
mov
dec
push
imul
ja
push
xchg
icebp
leave
mov
cmp
and
sbb
aad
xlat
push
and
push
dec
jns
(bad)
mov
sbb
add
cmps
jl
outs
cmp
das
mov
icebp
cmp
imul
adc
jne
call
fwait
dec
push
inc
add
nop
xor
into
push
cmp
mov
ins
daa
call
push
and
mov
xchg
jmp
imul
cmps
xchg
jns
outs
cmps
cmp
cmp
in
pop
and
iret
dec
repz
ds
xlat
hlt
inc
cmp
into
lods
hlt
dec
jmp
popa
int
pop
outs
fstp
fistp
sub
mov
dec
retf
fld
mov
pop
dec
xor
xchg
add
pop
push
cmp
scas
inc
iret
push
loopne
xchg
sahf
cmps
cmp
jmp
dec
cmps
fild
lods
dec
arpl
add
lods
xor
pop
cli
outs
mov
sbb
push
repz
call
dec
clc
jae
sbb
icebp
push
mov
pushf
je
ror
add
pop
inc
pop
jmp
mov
mov
cmps
in
fmul
and
mov
adc
and
add
scas
jmp
(bad)
sub
retf
inc
or
jecxz
in
xchg
jmp
je
aas
adc
adc
aam
and
into
leave
repnz
push
int
xor
pop
pop
ins
je
sub
xchg
jge
pop
push
(bad)
sub
pop
pop
clc
scas
loopne
xor
aad
hlt
jo
jle
jns
and
dec
inc
enter
mov
scas
or
stos
rdtsc
mov
push
mov
jmp
and
or
sbb
jp
mov
push
dec
in
xchg
ror
xchg
sahf
push
hlt
and
sbb
cmp
push
rcl
add
pusha
mov
sub
inc
imul
pop
ins
jle
outs
push
pop
shr
adc
aas
mov
push
repnz
xor
sub
push
out
ficomp
mov
ret
xchg
fidivr
cmps
sbb
(bad)
fidivr
ins
jne
pop
cmp
jno
cmp
pop
or
fs
jle
test
sub
repz
jo
cdq
test
or
cmp
fiadd
jp
sar
xchg
fbld
int3
movs
or
pop
push
es
fucomip
aaa
mov
fcmovnb
cdq
xchg
dec
pop
push
retf
rol
lock
ret
cmp
jg
shr
mov
xchg
mov
push
aad
or
aas
out
mov
push
pop
stos
or
sub
pop
adc
push
and
scas
jne
xor
icebp
xor
sti
sti
xchg
out
cmp
xchg
and
imul
mov
fcmovbe
fdivr
pop
fild
adc
add
xchg
dec
jmp
std
fwait
mov
mov
mov
push
stos
test
jmp
outs
xchg
rcl
xchg
(bad)
fisub
into
jno
(bad)
mov
mov
add
mov
cwde
inc
xchg
xor
jp
mov
mov
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
cld
repnz
(bad)
pop
(bad)
es
xlat
pop
repz
clc
jg
call
dec
jge
daa
xchg
add
fs
mov
add
push
icebp
inc
(bad)
mov
jo
sub
push
sub
sar
mov
ins
outs
mov
jg
ret
inc
(bad)
sar
inc
jg
inc
adc
inc
adc
inc
sahf
push
jg
ret
inc
(bad)
sar
inc
jg
inc
adc
inc
adc
inc
sahf
push
jg
ret
inc
(bad)
sar
inc
jg
inc
adc
dec
in
dec
dec
mov
xlat
mov
mov
jne
gs
(bad)
data16
jno
add
inc
mov
mov
mov
(bad)
pop
(bad)
es
js
fs
mov
das
sub
mov
mov
(bad)
aam
jmp
ins
lods
mov
pop
arpl
aaa
pop
jg
sub
loop
fnsave
add
inc
mov
lods
scas
adc
xchg
dec
rcl
push
loopne
cmp
ror
xor
(bad)
mov
in
and
test
test
jp
jmp
stc
in
std
cld
aas
cld
dec
sbb
div
inc
icebp
xor
pop
inc
and
fstp
xor
add
xor
jne
add
ja
push
mov
mov
dec
adc
mov
jge
dec
and
add
inc
(bad)
sar
inc
jg
inc
adc
ja
lds
sub
and
in
jp
adc
out
loope
add
push
cmp
inc
mov
scas
pop
ret
sbb
mov
fldenv
es
add
popf
jno
xchg
xchg
fdiv
adc
scas
aas
out
pop
div
inc
icebp
xor
mov
jg
ret
inc
(bad)
aam
cmp
repnz
add
xlat
les
or
(bad)
ins
es
pushf
or
loope
daa
fistp
(bad)
stc
in
std
cld
aas
cld
dec
sbb
div
inc
icebp
xor
jmp
stc
in
std
cld
aas
cld
dec
jns
in
dec
jecxz
iret
or
das
dec
xor
and
mov
ret
in
bound
sbb
add
in
mov
fcmovnb
ss
ret
xor
sub
lahf
sub
into
jae
and
lea
mov
jge
xchg
test
add
inc
sahf
jno
test
fdivrp
out
ss
lahf
xlat
cmp
(bad)
jns
loope
mov
ss
fiadd
sahf
outs
jge
ja
and
push
lods
sbb
aas
repnz
ja
jno
inc
jns
dec
scas
sbb
inc
push
int
fisub
xchg
sub
sub
hlt
jmp
pop
jb
daa
mov
xor
mov
outs
sar
rcr
jmp
repz
es
sub
ins
jno
inc
call
clc
sub
call
xchg
mov
and
inc
sbb
fdivr
add
mov
lods
pop
stos
fild
pop
fwait
mov
and
cmps
ror
movs
inc
jmp
pop
pop
mov
sbb
je
aad
test
mov
js
inc
(bad)
jmp
ret
adc
(bad)
mov
xor
mov
push
(bad)
push
and
inc
pop
inc
ret
mov
inc
and
(bad)
iret
test
pop
bound
in
push
popf
arpl
hlt
retf
push
mov
(bad)
in
sti
popa
lock
pop
mov
cmc
imul
mov
mov
xor
inc
cli
pop
lock
stc
out
scas
clc
push
mov
sub
jmp
neg
in
mov
sbb
fbstp
(bad)
lods
push
ss
push
dec
xchg
clc
ret
dec
lahf
add
ins
rcl
push
mov
call
sbb
popf
push
cmp
cmp
imul
mov
jnp
sbb
std
movs
test
ss
mov
add
cmp
xor
add
scas
sub
xchg
mov
cmc
clc
xchg
jmp
jmp
push
pop
mov
inc
inc
shl
xchg
cmp
adc
and
leave
sbb
jno
in
ret
and
dec
test
add
xchg
add
mov
add
sbb
xchg
nop
or
inc
inc
scas
lahf
cld
jne
jmp
mov
(bad)
push
push
adc
sbb
sub
retf
mov
pusha
jmp
and
pop
test
cmp
sti
es
(bad)
neg
inc
sbb
jp
daa
movs
dec
cli
(bad)
pop
or
push
mov
xchg
rol
pop
pop
pop
add
inc
shr
stos
sbb
sub
mov
je
mov
ret
pop
outs
ret
jge
dec
mov
add
sbb
fwait
retf
jo
hlt
in
call
push
(bad)
mov
aad
xchg
fwait
dec
shl
pop
imul
inc
bound
and
push
push
(bad)
movs
sahf
push
fdiv
daa
mov
(bad)
mov
std
xchg
bnd
jbe
es
mov
aas
in
retf
add
jg
pop
popf
sti
xor
sub
test
jbe
cmp
pop
in
(bad)
adc
push
lea
mov
jecxz
retf
sbb
std
jle
cmp
sub
leave
icebp
das
push
rcl
gs
mov
dec
scas
in
fidiv
jbe
das
outs
int3
imul
fild
jl
lock
(bad)
or
out
xor
loop
fisub
(bad)
xor
sbb
shl
cmp
pop
jecxz
leave
das
out
shr
jg
pop
mov
pop
pop
cmp
mov
mov
push
pop
jmp
xchg
mov
mov
pop
mov
push
mov
gs
push
mov
sbb
popa
shr
out
adc
mov
fmul
cmps
out
loope
arpl
mov
int
and
sbb
rcr
fadd
les
test
mov
icebp
jmp
mov
imul
pusha
aaa
and
repz
int
xchg
dec
sahf
fdivr
pop
aad
jecxz
sub
ins
adc
mov
lods
dec
or
mov
fisubr
mov
jns
call
fsub
hlt
xor
in
out
xor
cld
leave
sub
sbb
mov
in
jecxz
scas
pop
bound
int
jae
aas
loopne
add
(bad)
pop
jle
xchg
fiadd
cli
js
repz
xchg
cwde
nop
ss
jbe
xor
sti
mov
aam
cmp
std
sbb
in
loope
xchg
fild
pop
and
pop
or
fnstsw
sub
xchg
fistp
les
sbb
adc
nop
ret
outs
or
inc
repnz
sar
movs
inc
jae
fbstp
mov
gs
ror
repnz
lahf
sbb
int3
shr
dec
mov
push
sbb
lods
mov
mov
xchg
imul
retf
fld
lds
mov
cmp
ins
les
ret
xor
(bad)
(bad)
xor
sub
jns
mov
mov
jle
or
into
dec
out
mov
out
mov
and
out
movs
popf
in
ds
dec
mov
push
sbb
lods
mov
cwd
loope
mov
dec
dec
pop
daa
in
(bad)
mul
cmps
jb
jl
imul
push
aaa
sub
pop
aad
hlt
imul
and
retf
add
and
dec
add
mov
jmp
fmul
into
xchg
es
or
enter
inc
je
mov
in
jmp
dec
into
sbb
push
push
call
dec
adc
in
imul
(bad)
push
gs
int
dec
sbb
enter
dec
xlat
ret
mov
je
fstp
call
cmp
mov
(bad)
dec
inc
and
sbb
mov
fwait
dec
icebp
lods
in
inc
in
sti
clc
in
push
bound
in
jns
stc
xchg
and
jo
pop
popa
fs
popf
mov
xchg
movs
lods
jmp
fimul
aas
xchg
adc
ins
or
arpl
cmp
add
int
(bad)
sbb
ins
mov
popf
push
jecxz
pop
arpl
fmul
mov
push
add
fsub
outs
add
lea
pop
mov
ins
jno
ins
jbe
call
and
and
sub
xchg
sbb
mov
imul
aad
jb
sub
(bad)
retf
xor
cmc
in
inc
cli
fsubr
cmp
mov
push
lea
sub
div
jmp
imul
ror
pop
(bad)
fstp
outs
xor
add
cmp
xchg
shl
stos
fiadd
dec
mov
iret
maxps
or
mov
lea
sub
add
jle
dec
add
xor
fsubr
ret
shl
mov
cmps
push
jecxz
shr
fmul
movs
(bad)
mov
data16
ja
or
jmp
repnz
cld
mov
(bad)
cmps
fidiv
not
pop
imul
mov
lahf
in
(bad)
les
jae
and
cmc
lds
pop
es
addr16
arpl
enter
sub
fstp
lods
shl
std
pop
cmc
sub
movs
mov
fistp
ins
rcr
mov
dec
jle
dec
adc
sbb
pop
scas
int3
cmp
and
mov
lods
vpaddsw
and
cdq
xchg
add
fst
arpl
ds
sar
dec
adc
aad
nop
sbb
mov
stc
xchg
xor
cmc
arpl
ins
sbb
fmulp
push
xchg
into
fldenv
mov
pop
(bad)
into
gs
loop
retf
add
xor
dec
stc
xchg
mov
in
xchg
sub
leave
ins
jae
sub
cwde
rcl
mov
xor
add
cmps
dec
cmps
sbb
icebp
fwait
dec
aam
in
repz
dec
addr16
jae
stos
mov
mov
xchg
popa
xlat
aas
das
and
dec
pop
inc
aad
fldenv
pusha
dec
jbe
nop
mov
jmp
jge
mov
or
(bad)
(bad)
cmp
lock
xchg
push
mov
mov
jo
inc
arpl
jl
les
dec
add
mov
add
sbb
xor
das
jecxz
mov
test
xchg
dec
fsub
in
push
in
push
or
ret
ja
imul
psubusw
inc
jb
out
and
inc
mov
out
adc
jecxz
xor
push
imul
(bad)
not
sub
xchg
ins
loope
(bad)
int
push
test
in
(bad)
sti
popf
xchg
mov
test
sub
jno
pop
leave
or
cmps
outs
mov
add
xor
xor
daa
mov
mov
das
hlt
retf
sti
sub
add
mov
inc
test
in
add
and
repz
and
shr
mov
repnz
adc
pop
cmp
xchg
cdq
dec
inc
(bad)
jb
or
sahf
mov
in
pop
dec
ja
test
in
cmp
or
sbb
enter
les
ret
std
bnd
(bad)
aam
into
lahf
jnp
out
jmp
adc
ret
jb
(bad)
or
leave
push
jne
stos
inc
push
and
mov
add
sub
or
movs
pushf
cmp
mov
jno
inc
sub
cmp
jg
mov
dec
mov
sub
fistp
or
in
jne
cmp
mov
fisub
add
cld
mov
(bad)
ror
and
pop
jae
jg
pop
imul
push
pop
xchg
call
fsubr
mov
(bad)
out
xsavec
jmp
iret
inc
jne
add
loopne
push
inc
lea
xchg
(bad)
out
push
and
std
xchg
cli
hlt
scas
pop
ret
mov
out
mov
cmp
pop
pop
and
inc
push
mov
push
xor
add
cmp
sub
cmp
and
rcr
sbb
fist
cmp
add
mov
jl
jno
jmp
shr
retf
jbe
sub
jmp
daa
add
xor
lock
lea
cs
push
inc
add
mov
mov
ja
outs
sub
call
repz
fild
(bad)
and
cmp
arpl
pop
das
cld
hlt
dec
inc
imul
pop
outs
mov
jo
(bad)
jp
or
leave
push
cmc
pop
push
test
or
dec
pop
xor
rol
xchg
jnp
cwde
add
hlt
jmp
cmc
inc
popa
scas
jmp
outs
movs
push
mov
sahf
ds
fisub
jp
cdq
test
jecxz
mov
push
cmp
inc
pop
dec
jecxz
aas
in
pop
out
addr16
adc
ss
arpl
push
test
ds
or
xor
mov
mov
repnz
fmul
outs
(bad)
xor
sub
inc
xchg
or
xchg
dec
les
mov
cmp
pop
dec
icebp
jge
or
pop
adc
push
ds
dec
sti
lods
inc
cli
push
stos
lahf
push
cmps
pop
cmp
xor
js
mov
addr16
std
aas
es
loope
jne
ins
pop
ret
cmp
test
adc
and
jae
ins
loop
pop
push
lock
mov
xchg
xor
leave
mov
cmp
lahf
cmp
call
sub
mov
sbb
imul
push
push
sub
fld
sub
aaa
sbb
jl
push
inc
iret
dec
lock
test
into
test
sub
into
lahf
fnsave
popa
clc
adc
clc
test
ret
ror
cs
rcr
repnz
add
sti
les
call
pop
shr
setnp
sbb
pop
(bad)
cli
pushf
pushf
push
bt
pop
js
les
jb
int3
mov
sahf
and
jo
mov
add
mov
jl
fld
jg
xchg
hlt
lds
fsub
push
mov
pop
inc
dec
mov
lods
mov
stos
pop
jmp
sbb
inc
inc
pop
xor
push
mov
inc
loope
inc
dec
shl
xchg
iret
add
inc
pop
adc
sbb
sbb
push
push
leave
push
stos
xlat
loop
in
pop
dec
scas
xor
bound
sbb
mov
cmp
mov
(bad)
retf
pop
add
push
sti
lods
hlt
pop
ds
dec
loope
mov
mov
arpl
dec
(bad)
es
std
pop
js
test
xlat
imul
xchg
pop
sbb
in
cwde
mov
or
xchg
and
addr16
(bad)
xchg
test
mov
sbb
fs
add
and
sahf
sbb
mov
mov
cs
addr16
in
and
loope
cmp
xchg
pop
hlt
leave
loop
mov
adc
pusha
mul
adc
enter
or
inc
shr
and
dec
jb
loope
daa
cmp
cmc
inc
jg
aaa
fisub
shl
shl
lods
loopne
arpl
outs
xchg
aas
mov
adc
loop
(bad)
xor
push
std
(bad)
mov
pop
xor
arpl
fcmove
lahf
out
cmp
add
add
cmc
out
adc
(bad)
pop
fisubr
imul
sbb
and
jp
lods
or
ficom
shr
js
iret
mov
or
cmp
add
pop
lods
inc
push
scas
loope
rcl
lock
jbe
aas
in
lods
or
jge
cwde
outs
rcl
into
xchg
pop
and
imul
mov
dec
cmp
jbe
cmps
js
inc
inc
test
ret
mov
or
outs
push
test
icebp
fistp
xchg
and
sbb
loope
lods
cmp
pop
fwait
(bad)
repz
mov
jb
call
xor
or
jo
cld
dec
dec
jae
xor
(bad)
scas
dec
movs
fadd
imul
mov
nop
xchg
pushf
and
enter
sub
fst
push
pop
clc
outs
lock
(bad)
fimul
ss
ds
cmps
rol
in
aas
js
loope
test
leave
jmp
std
and
int
ffreep
fidiv
or
cmp
jo
add
mov
cmp
sub
fcmovnb
mov
sub
loopne
add
cmps
push
stc
adc
adc
dec
jg
jno
jg
or
cmp
sbb
and
mov
push
inc
imul
xchg
push
dec
xchg
cmps
mov
jne
idiv
outs
add
dec
pop
push
mov
ja
dec
rcr
retf
mov
jne
iret
int3
pop
mov
ror
or
jmp
pop
js
dec
xchg
(bad)
xor
jmp
imul
out
(bad)
pusha
pop
scas
pop
dec
jnp
ds
ret
mov
hlt
fld
mov
out
sbb
sbb
fs
pop
outs
(bad)
std
dec
pop
pop
or
pop
jmp
push
or
adc
int3
push
lods
adc
cmp
movs
adc
adc
inc
std
dec
les
sbb
cmc
jmp
pop
xchg
sbb
cli
xor
fisttp
fnsave
call
sbb
or
lods
je
or
movs
aad
(bad)
std
adc
inc
mov
cdq
inc
or
push
stc
lods
dec
mov
dec
std
xchg
cmp
ins
push
data16
mov
jg
movs
add
dec
test
and
push
js
pop
pop
fsubr
cmp
in
adc
add
mov
stc
jg
pop
clc
jg
fnstenv
jnp
call
adc
adc
mov
cmp
daa
sub
lock
cmp
mov
sbb
aam
retf
xor
sti
pop
xchg
fimul
fucomp
cmp
movs
inc
sub
adc
in
arpl
loop
int
enter
mov
(bad)
mov
cwde
lahf
push
xor
aam
jmp
sbb
lock
pop
mov
xor
xor
or
std
cmc
cld
mov
cmps
imul
adc
scas
aaa
sahf
gs
and
or
ds
cmp
popa
jno
call
mov
in
ja
cwde
pusha
loopne
mov
mov
into
cmp
test
adc
mov
lahf
imul
lods
mov
jnp
pop
mov
xor
pop
fmul
(bad)
adc
sbb
outs
imul
outs
scas
and
shl
scas
or
stos
inc
or
ds
loopne
mov
inc
cli
test
shr
call
into
ror
inc
add
push
jno
pop
mov
and
adc
mov
dec
cld
mov
ins
dec
cmps
jbe
mov
and
adc
xor
adc
adc
pop
dec
mov
cmp
adc
icebp
cmps
mov
sub
and
push
scas
fsub
sbb
arpl
xor
jmpw
xor
cmp
call
repz
xlat
mov
popf
loope
pop
ret
and
ret
pop
sub
pop
icebp
lods
stos
loop
adc
lahf
in
std
dec
push
cmp
cmps
fadd
pop
(bad)
jnp
mov
add
sub
push
shr
cli
sbb
mov
shl
push
cmp
mov
mov
jns
cmp
stos
movs
jge
scas
xchg
jo
xchg
mov
fcomip
std
jbe
push
test
mov
pusha
jns
pop
aam
or
dec
jmp
jg
jge
aad
(bad)
ds
jae
(bad)
push
mov
mov
shl
(bad)
push
mov
xor
movs
ja
(bad)
xchg
inc
bound
bound
(bad)
jmp
lahf
test
gs
or
adc
mov
xchg
ret
mov
xor
push
mov
pop
lods
sub
mov
imul
or
addr16
and
in
pop
das
sti
dec
sti
xor
dec
iret
in
fcomip
in
out
fwait
div
int3
out
cmp
outs
cmps
push
js
push
shl
mov
call
cmp
arpl
fwait
retf
pop
dec
xchg
and
ins
into
inc
pop
jmp
imul
cmp
mov
retf
call
add
mov
in
push
(bad)
lds
je
push
adc
adc
repnz
(bad)
jbe
inc
mov
aas
xchg
hlt
test
in
imul
xor
mov
in
mov
xor
jo
dec
inc
out
mov
shr
stos
mov
mov
cmp
mov
sbb
and
adc
retf
sbb
fwait
loope
das
push
mov
ret
lahf
fidiv
(bad)
fcmovnb
pusha
lea
les
fdiv
inc
or
inc
xchg
inc
repz
adc
scas
call
jne
ss
sub
shr
hlt
cmp
pop
add
dec
aam
lods
sbb
pusha
aam
imul
pop
ja
dec
jb
mov
jecxz
daa
cmps
inc
out
int
cmp
cli
neg
and
dec
xor
int
(bad)
cwde
fs
mov
idiv
mov
xchg
jno
or
xor
xor
mov
sti
dec
mov
cdq
sub
je
out
ja
push
repnz
bound
imul
sbb
cmps
add
push
push
imul
lods
sub
or
push
mov
jns
(bad)
imul
imul
lea
or
sbb
repz
mov
mov
and
or
ins
int
sub
cmp
data16
loope
push
push
sbb
cmp
cmp
aam
imul
xchg
mov
adc
jne
inc
jmp
cld
jmp
int
in
call
imul
stc
imul
mov
add
inc
aam
cmp
ss
call
xor
sub
jbe
adc
add
hlt
mov
fisubr
cmc
fdiv
ror
repnz
dec
cmp
pop
cs
mov
jp
fwait
std
(bad)
aas
push
cmp
jle
mov
push
xlat
pop
jbe
les
aaa
xchg
stc
mov
or
or
xor
(bad)
pop
jecxz
sti
jnp
data16
and
xchg
mov
daa
mov
sbb
push
loopne
movs
mov
stos
lods
pop
enter
push
cld
dec
repnz
cmps
(bad)
mov
mov
cmp
xchg
inc
adc
jne
mov
fbstp
pushf
fs
std
push
imul
(bad)
hlt
fldcw
mov
push
cmp
add
sbb
inc
dec
pop
shr
or
mov
retf
jmp
addr16
test
mov
and
push
sub
out
dec
cld
test
add
lea
mov
test
arpl
push
push
mov
dec
xchg
push
cld
sbb
adc
add
lea
jmp
jae
scas
xchg
xlat
outs
(bad)
cmp
xlat
scas
adc
push
pop
aad
mov
ficom
int
cmp
mov
push
push
add
iret
push
jecxz
xchg
dec
setno
fiadd
(bad)
and
fadd
retf
dec
add
xor
fimul
ss
fs
sbb
mov
and
push
or
inc
and
dec
and
push
pop
popa
or
push
xchg
fimul
lods
(bad)
loope
push
sbb
jecxz
sbb
pusha
out
push
mov
out
pusha
mov
or
sub
shl
fdivr
scas
outs
out
mov
pop
lahf
in
mov
or
js
and
mov
nop
or
sahf
add
or
fistp
out
mov
jmp
xor
pop
imul
int
ja
leave
xor
sbb
pop
imul
push
mov
adc
adc
and
push
xchg
add
shr
ins
jge
movs
ds
xor
(bad)
fld
sub
mov
push
ins
fdivr
aam
push
test
mov
sub
clc
mov
aas
mov
jne
sbb
mov
fimul
cmps
lock
(bad)
mov
and
lock
movs
sbb
mov
xor
adc
push
sub
mov
aad
out
out
cmp
xchg
sbb
adc
push
inc
idiv
pop
cmova
xchg
jmp
jae
push
jg
sbb
mov
clc
push
xor
lahf
ds
or
sub
hlt
fwait
lods
inc
jg
jbe
xor
jp
je
jp
pop
xchg
jl
mov
rol
popa
sub
lea
enter
jp
mov
sub
jmp
mov
or
add
pop
inc
mov
add
test
dec
jne
sbb
stc
in
sbb
ins
out
mov
das
xor
out
lods
or
mov
cmp
jns
or
add
rcr
mov
(bad)
push
xlat
test
retf
mov
mov
sbb
aaa
call
and
stc
xchg
jg
loop
fld
dec
pushf
cmps
xchg
test
leave
mov
popa
xor
bound
push
(bad)
lock
mov
aas
(bad)
inc
cmp
jg
add
sahf
lahf
stos
push
mov
(bad)
mov
(bad)
cmp
mov
inc
shr
fisttp
inc
icebp
std
cmps
xor
dec
mov
xchg
(bad)
cmp
leave
call
xchg
xchg
and
inc
add
sahf
jg
loope
in
(bad)
into
retf
dec
mov
aaa
ja
jno
inc
jb
add
inc
pushf
icebp
inc
mov
xchg
sahf
mov
pop
cmp
adc
cmps
inc
push
and
add
outs
sub
mov
or
aam
pushf
adc
jns
in
loope
and
mov
retf
jno
inc
lahf
push
dec
jecxz
pop
in
pop
adc
sbb
push
xchg
mov
(bad)
rol
cmps
loop
ror
dec
lods
dec
mov
ficomp
fsub
cmp
int
(bad)
adc
(bad)
fsub
not
test
pop
or
les
outs
pop
mov
or
sbb
jge
or
xchg
xchg
push
push
(bad)
fstp
repnz
fimul
cmp
ins
dec
xor
xor
repnz
jecxz
sbb
xchg
pop
mov
mov
movs
test
imul
sbb
mov
sbb
xchg
mov
ret
stc
xchg
adc
fs
sub
cmc
add
dec
sub
cmp
xchg
cmp
adc
jecxz
ret
inc
aam
push
dec
icebp
out
mov
sahf
dec
mov
fisub
loop
jge
xchg
inc
mov
xlat
(bad)
xor
cs
ins
out
fcmovu
fucomip
retf
xor
sub
xchg
daa
clc
jp
mov
hlt
cld
in
aam
(bad)
adc
aad
call
repz
fisubr
mov
div
out
cmps
dec
scas
retf
rcl
pop
sahf
push
mov
adc
loope
(bad)
shl
push
call
add
or
xchg
xchg
iret
retf
mov
add
mov
in
dec
enter
daa
loopne
popa
mov
cmp
in
bound
sub
sbb
ffreep
test
pop
push
int
pop
lahf
cmp
push
xchg
imul
imul
daa
mov
fistp
js
pop
cdq
int
idiv
int3
add
xchg
and
sbb
add
loopne
add
dec
stos
daa
xchg
adc
pop
in
add
or
(bad)
int
int
fmul
cmp
mov
push
pop
inc
jecxz
xchg
mov
movs
mov
fsubrp
adc
add
add
xchg
dec
in
jmp
cmps
out
mov
fs
pop
dec
jns
inc
sbb
sub
cmp
and
jp
dec
jnp
xchg
pop
aam
aam
mov
jno
(bad)
dec
pop
mov
mov
sti
out
mov
shl
mov
fwait
pop
sub
mov
xor
outs
jp
inc
dec
adc
inc
dec
pop
movs
push
aas
push
cmc
sbb
mov
inc
cmp
lods
lock
movs
inc
loop
jge
les
mov
(bad)
or
pop
lods
enter
mov
sar
pusha
push
ins
push
loop
test
fwait
jge
retf
dec
dec
rcr
mov
cmp
push
rcr
or
inc
repz
ja
push
cld
arpl
add
movs
cld
mov
xor
fidivr
and
std
push
cld
movs
sti
popa
push
pop
xchg
mov
aaa
pop
mov
outs
(bad)
cli
sbb
addr16
outs
jecxz
add
xor
add
sbb
std
sahf
or
repz
or
xchg
aam
mov
and
in
pop
js
lds
clc
arpl
dec
lea
ins
dec
pop
cdq
sub
test
cmp
imul
inc
add
sar
movs
xlat
xchg
js
push
lahf
inc
aam
lds
push
mov
ja
mov
into
push
jge
aas
test
cld
inc
mov
icebp
mov
mov
icebp
in
frstor
sbb
lds
pop
sbb
sbb
pop
inc
and
lods
xchg
xlat
xor
pop
(bad)
sbb
fstp
pop
and
sub
iret
bound
push
call
cmc
sub
sbb
cmp
add
adc
push
xchg
and
cs
out
imul
push
mov
repz
push
add
sbb
cmp
fiadd
adc
scas
mov
out
fcom
jb
cmp
sbb
(bad)
push
arpl
sbb
mov
fstp
push
data16
int3
push
pop
mov
mov
loopne
std
imul
inc
inc
rcr
push
push
pop
rcl
lods
add
in
mov
jne
mov
cld
lea
inc
pusha
sbb
adc
fsub
cmp
call
ror
sub
pop
xor
mov
stc
inc
mov
test
popa
lods
dec
(bad)
and
mov
sub
xchg
test
dec
cmp
xor
imul
leave
ins
pushf
jg
int3
jo
hlt
cmp
sub
inc
mov
xlat
inc
js
loope
call
dec
inc
inc
das
ror
hlt
int
(bad)
out
and
sbb
arpl
add
mov
push
pop
mov
lock
repnz
les
lods
arpl
jmp
fcomp
sub
clc
pop
cmp
rcr
stos
mov
cmp
daa
xor
daa
lea
sub
or
dec
jo
or
iret
mov
push
neg
push
retf
sub
rcr
push
dec
mov
inc
stos
imul
sub
daa
(bad)
popa
leave
mov
lods
mov
scas
sub
in
ins
daa
lea
xchg
fs
mov
nop
inc
jae
scas
jo
cmp
imul
pop
xor
pop
aad
xor
int
out
jmp
cmp
cld
inc
test
sbb
mov
and
inc
push
dec
cmc
outs
mov
shr
ins
imul
cs
js
stc
lea
sbb
cmp
adc
xor
hlt
pop
pop
inc
imul
pop
dec
stos
cmp
lds
lods
stos
loop
adc
imul
daa
xchg
out
sahf
cmp
aam
sub
mov
sub
lods
mov
jle
pop
add
xchg
sbb
inc
pop
stc
jle
pop
or
mov
shl
fisubr
lods
(bad)
aaa
push
lea
retf
test
add
add
mov
les
ins
imul
adc
gs
icebp
(bad)
in
mov
pop
and
cdq
arpl
mov
fcom
push
mov
js
test
mov
push
xchg
and
inc
gs
cmp
sti
stos
les
inc
sub
fistp
int
inc
aam
cli
fdivp
dec
fs
push
mov
pop
or
or
call
sbb
jns
popa
pop
ror
ret
mov
adc
ss
jae
cdq
add
lds
push
mov
nop
push
push
sub
ror
js
outs
jo
leave
nop
arpl
inc
adc
push
inc
adc
push
inc
adc
push
inc
pusha
pop
imul
loopne
mov
push
inc
imul
fild
mov
repnz
mov
enter
xchg
sub
ja
aas
loope
push
fisttp
inc
in
rcr
inc
mov
push
fstp
(bad)
icebp
xchg
mov
adc
and
adc
(bad)
sbb
shr
or
pop
out
add
ins
ins
xor
bound
mov
ret
lds
jbe
push
sub
pop
imul
mov
loop
cmp
aad
aad
adc
mul
or
ja
gs
push
inc
sub
push
mov
push
call
pop
jge
bound
fidivr
xchg
add
stc
or
sub
in
sub
lods
mov
fs
hlt
jmp
popf
outs
js
mov
jbe
imul
push
cs
jo
lahf
sub
pushf
jne
jno
loope
mov
pushf
fidiv
aad
cmp
lods
ds
and
nop
mov
sbb
mov
out
loope
sbb
sar
dec
ret
jns
loope
(bad)
adc
push
pop
daa
fisttp
test
push
outs
scas
scas
and
push
gs
je
mov
(bad)
jmp
stos
in
repnz
sahf
push
out
loopne
add
call
mov
outs
ror
repz
call
sub
xor
inc
call
xchg
inc
data16
push
out
xor
pop
leave
ja
lods
retf
movs
fcmovnu
dec
cmps
movs
mov
push
cvttps2pi
lea
inc
xchg
inc
cld
jmp
and
add
pop
inc
repnz
ds
fidiv
out
lods
aam
les
retf
add
loopne
adc
cmp
jno
add
xor
mov
inc
ja
inc
add
int3
xchg
int3
jo
xor
inc
shl
dec
add
aaa
(bad)
rcr
(bad)
jo
loope
mov
xor
(bad)
mov
mov
imul
adc
jae
add
jns
out
fsub
imul
jns
adc
retf
sub
into
aad
push
jp
dec
pop
icebp
push
xchg
push
mov
pop
imul
and
mov
sub
daa
imul
sub
inc
adc
push
dec
cld
imul
add
xor
aaa
not
push
inc
jbe
ret
cmp
ret
jmp
loop
pop
nop
push
sub
loope
(bad)
je
clc
inc
sahf
xchg
enter
call
and
fisubr
stos
adc
idiv
or
out
push
mov
fwait
stos
js
mov
xchg
push
inc
adc
add
adc
xor
sub
push
inc
add
das
push
dec
mov
cmp
inc
aam
fisubr
add
mov
mov
jge
(bad)
mov
xchg
push
inc
add
jle
pop
fs
icebp
add
pop
mov
jg
inc
repnz
repnz
shl
test
cmp
in
gs
out
cmc
shl
xor
or
in
sahf
and
xor
adc
ja
int3
xchg
xor
ja
add
inc
sub
cld
lea
push
pop
xchg
cmps
cmp
add
rcr
fild
sbb
ds
ja
sbb
not
pop
test
icebp
sahf
mov
inc
add
push
pop
dec
idiv
fwait
outs
in
mov
xchg
jnp
aam
rcl
or
mov
mov
ja
cmp
adc
cmp
popa
add
pop
(bad)
stos
sbb
loope
mov
mov
rcr
aas
xchg
jbe
stc
rol
adc
sub
dec
mov
dec
pop
(bad)
(bad)
and
lods
xor
ins
es
mov
cld
push
push
or
add
out
add
inc
lock
push
and
jmp
ror
jmp
lods
sub
std
imul
cmps
xchg
mov
pop
imul
add
dec
push
adc
test
and
push
mov
out
mov
add
out
das
hlt
popa
out
ss
sub
jo
jle
rol
sbb
push
cmp
bound
xchg
js
mov
mov
cmp
stos
push
shl
jmp
aaa
ins
outs
mov
push
fdivr
rol
mov
jl
inc
dec
mov
xchg
add
retf
or
enter
xchg
retf
daa
and
pusha
push
aas
dec
fld
pusha
inc
mov
xor
jmp
data16
retf
adc
adc
jbe
or
test
dec
dec
mov
fist
jecxz
dec
sbb
jo
(bad)
pop
cld
ds
leave
push
push
inc
push
mov
pop
(bad)
(bad)
scas
fstp
inc
sub
ins
mov
xchg
mov
test
pusha
mov
or
retf
and
dec
jne
sbb
and
jnp
push
pop
mov
fistp
das
aaa
retf
jl
jecxz
outs
ror
movntq
in
aaa
inc
mov
cmp
cmps
fdivr
(bad)
inc
fild
mov
jne
enter
sar
or
mov
in
inc
and
jecxz
and
fiadd
push
push
xor
sbb
cmp
jmp
jne
fbld
enter
test
cmp
ret
and
add
ins
outs
mov
xchg
icebp
pop
ret
cmp
sub
pop
neg
idiv
(bad)
mov
inc
jg
jne
rcr
mov
int3
movs
sahf
inc
sbb
(bad)
cld
or
mov
and
fisubr
cmovno
sbb
rol
push
pop
pop
fcmovnu
rcl
push
inc
cmp
xor
and
mov
imul
mov
jne
mov
mov
pop
(bad)
jle
jle
cmp
(bad)
call
xor
pop
fisub
pop
xchg
push
in
inc
retf
js
xor
scas
loope
test
aad
xchg
dec
je
lea
pop
mov
or
mov
mov
loop
(bad)
jle
loop
pop
cmp
mov
jle
xor
xlat
mov
inc
in
rol
add
adc
sub
mov
or
xchg
jne
lds
int
pop
shl
mov
fsub
addr16
xchg
(bad)
call
cmp
shr
cmp
inc
sub
jle
test
pop
mov
jo
lock
cmp
adc
adc
aas
in
ror
inc
stos
daa
ficomp
xor
fsubr
ss
pop
sub
mov
(bad)
in
jmp
outs
movs
test
adc
sub
shr
sbb
je
cmp
sbb
loope
test
jge
mov
mov
adc
fnstcw
outs
jne
frstor
and
push
aam
sub
and
jmp
add
sbb
mov
dec
ror
pushf
sub
retf
adc
aaa
ss
(bad)
cdq
imul
push
adc
hlt
push
push
hlt
add
test
or
jmp
imul
push
mov
lea
push
es
popa
mov
mov
inc
mov
enter
mov
ds
lahf
pop
mov
add
xchg
lods
imul
(bad)
inc
push
ins
jge
xchg
enter
dec
cmc
leave
int
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
xchg
pop
xchg
sub
lea
imul
push
mov
les
adc
pop
sub
mov
call
sub
mov
in
icebp
xchg
icebp
nop
push
repnz
popa
adc
pushf
add
sbb
sahf
das
mov
sub
stos
cmp
push
int3
retf
jo
fdiv
jl
jecxz
cli
pushf
mov
aas
jl
mov
stc
fistp
icebp
(bad)
jno
push
fwait
xchg
push
push
ins
dec
and
pop
cdq
lods
out
xor
mov
int
(bad)
cdq
ja
ret
dec
cdq
cmps
repnz
mov
pop
data16
ret
mov
and
je
adc
dec
fisubr
dec
in
call
mov
lahf
cmps
push
dec
imul
adc
pop
xchg
(bad)
xchg
xor
stc
push
add
scas
sbb
pop
mov
ds
cmps
into
data16
aad
in
inc
sar
inc
lods
dec
lea
sub
sub
mov
xchg
cmp
or
out
movs
mov
add
add
xchg
xchg
add
and
mov
push
pop
shl
inc
and
inc
and
(bad)
cmp
movs
sub
xor
aam
cmp
(bad)
dec
push
jmp
mov
xchg
and
jge
in
retf
sbb
pop
sub
push
xchg
dec
inc
loop
addr16
jns
data16
fstp
aam
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
mov
repnz
lahf
out
lods
mov
into
(bad)
dec
int3
jmp
cwde
dec
push
cmp
pusha
lods
xor
outs
test
xchg
dec
fistp
les
fiadd
out
sub
dec
cmp
pop
pusha
push
cmp
in
xchg
mov
xor
xchg
mov
daa
addr16
and
inc
jmp
mov
mov
xor
and
or
mov
out
aad
sub
mov
pop
or
stc
ret
mov
pop
popa
pushf
(bad)
outs
jp
inc
adc
inc
sbb
push
cwde
in
push
fmul
sub
pop
jno
jecxz
xchg
nop
or
pop
inc
(bad)
lods
jbe
mov
and
arpl
test
sahf
inc
and
adc
push
lods
and
sbb
addr16
nop
and
xor
mov
div
mov
add
adc
adc
test
xchg
outs
add
xchg
mov
inc
add
ss
jo
repz
xor
sub
mov
sbb
in
push
mov
mov
ins
shr
movs
ret
shl
mov
aaa
or
fucomp
push
test
or
shl
xchg
(bad)
in
es
sub
dec
pop
sub
and
mov
lahf
es
sbb
cmp
and
pop
je
fmul
scas
push
inc
sbb
loope
in
mov
fisubr
xor
push
mov
cmp
pop
push
push
daa
push
js
adc
(bad)
adc
loop
mov
repnz
xchg
(bad)
cmp
hlt
cmp
mov
cmp
dec
cld
add
cld
jo
int3
and
jne
pop
cmp
ins
mov
lds
and
mov
pop
rcr
jecxz
cmp
in
xchg
sub
clc
das
sbb
mov
rol
jmp
(bad)
(bad)
(bad)
out
inc
into
(bad)
fst
fdivr
addr16
dec
(bad)
aad
mov
lods
cmps
das
jg
push
imul
sub
lea
mov
ja
inc
je
push
hlt
adc
sar
mov
dec
jae
or
dec
mov
cmps
add
add
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
jmp
add
js
data16
dec
dec
sub
or
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
jmp
push
jmp
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
inc
add
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
repnz
sub
out
(bad)
stc
hlt
stos
(bad)
div
cld
int
jbe
cmc
out
inc
adc
mov
jg
retf
je
fcmovnbe
mov
fldcw
test
pop
xchg
jecxz
fsub
loope
out
(bad)
fnstcw
rcr
or
dec
ins
push
icebp
lods
in
jle
xlat
out
std
imul
(bad)
sub
ja
not
dec
sub
and
jbe
mov
sub
push
(bad)
mov
push
repz
xor
repz
shl
sti
pop
sahf
fisubr
(bad)
jbe
jb
jle
movs
xchg
call
cmp
scas
out
ret
loope
inc
sbb
pop
fwait
inc
sbb
dec
inc
clc
xlat
popa
into
out
xchg
out
lahf
xchg
ins
aaa
ja
std
sub
imul
sbb
out
clc
bound
outs
retf
sbb
in
retf
div
outs
lock
mov
dec
sbb
push
scas
int3
mov
iret
xor
xchg
rcl
sti
int3
pushf
push
dec
inc
cmp
fisubr
dec
out
fstp
ja
int
mov
mov
shl
lods
fist
sti
inc
(bad)
pop
xor
stc
imul
jg
sbb
in
loop
jmp
cmp
in
jae
cli
push
mov
out
aaa
ss
pop
lahf
dec
mov
xchg
and
stc
pop
mov
xlat
call
mov
ins
inc
jp
pop
dec
push
lods
es
fistp
ror
xor
outs
sub
stc
repz
outs
dec
add
les
movs
(bad)
outs
push
inc
push
fisub
jle
mov
gs
xchg
jns
out
out
int
push
mov
xor
mov
(bad)
push
sub
imul
das
jp
jne
mov
push
inc
stc
mov
add
sbb
pop
xchg
test
and
mov
mov
jge
aam
xor
sbb
mov
das
daa
mov
jmp
int3
(bad)
cmps
(bad)
fucom
jae
ror
push
pop
or
aam
adc
push
jno
leave
xchg
inc
popf
in
mov
call
or
add
out
mov
jbe
push
scas
sbb
rcl
dec
cld
aas
in
jg
lea
hlt
adc
xchg
fcomp
outs
xchg
jnp
(bad)
lock
mov
in
out
inc
in
pop
fisttp
xchg
mov
scas
lock
div
sbb
adc
in
xchg
jae
leave
jmp
mov
ins
in
mov
cmc
test
sbb
cld
cmp
cwde
and
mov
cs
(bad)
nop
retf
mov
sub
mov
dec
les
cwde
cld
ror
sbb
push
jg
dec
mov
and
mov
arpl
and
and
fnsave
jmp
fstp
xchg
std
sub
lahf
jnp
adc
repz
mov
dec
retf
pop
sbb
mov
jle
cdq
stc
mov
lds
sub
fwait
xchg
loop
(bad)
stos
mov
repz
out
pop
int3
cmps
imul
(bad)
mov
jnp
inc
retf
pop
xchg
push
scas
ds
mov
xchg
stc
dec
xor
ins
(bad)
pop
or
mov
ins
push
push
mov
ficomp
or
mov
in
cmc
sbb
imul
pop
popa
std
dec
outs
ins
stc
mov
fsubr
inc
ins
sub
jecxz
mov
pop
xchg
mov
fwait
jae
lea
loopne
movs
rol
stos
stos
not
(bad)
das
enter
aaa
xor
jmp
cmp
push
aas
mov
outs
jp
jne
outs
or
das
int
das
sbb
call
repnz
cld
push
fwait
sbb
fucomp
xchg
dec
not
dec
sub
ror
(bad)
xchg
retf
lea
push
pushf
mov
xchg
in
dec
fwait
sbb
jae
cld
sub
cld
or
mov
aaa
mov
sbb
mov
inc
out
jge
jmp
push
xor
mov
inc
inc
fs
push
sar
mov
inc
imul
push
std
sahf
ja
sub
aam
es
or
(bad)
scas
cmp
mov
push
fstp
(bad)
repz
icebp
es
push
mov
retf
mov
push
push
stc
scas
pop
loope
add
and
xor
cmp
add
and
xor
(bad)
dec
xchg
lea
gs
add
icebp
std
rol
jo
inc
stos
pushf
nop
cmp
jmp
mov
ret
jns
retf
retf
ins
cmp
stc
xchg
repz
(bad)
sahf
inc
or
fstp
mov
sub
add
mov
jle
mov
add
outs
ret
add
(bad)
int3
jae
cmp
pop
ss
xlat
mov
fdiv
popf
mov
aaa
imul
dec
inc
jbe
ret
(bad)
adc
fsub
outs
div
xor
pop
xchg
repz
jg
std
push
fwait
push
jl
fstp
lods
pop
pop
xor
push
ja
xor
int
data16
pop
sti
fnstsw
std
(bad)
xchg
stos
mov
stc
mov
jbe
sub
mov
loope
cmps
(bad)
mov
in
(bad)
mov
and
jge
cmc
sub
pop
pop
lea
aaa
int3
mov
movs
(bad)
and
lea
aas
retf
mov
pop
xchg
xchg
dec
pop
test
hlt
sbb
out
inc
push
mov
ret
mov
fbstp
mov
xchg
cwde
aad
jge
cmps
ins
aas
out
fwait
(bad)
fcomip
jge
xchg
outs
stc
fwait
(bad)
cli
stos
jnp
mov
pop
jno
repnz
std
ficom
sti
fbstp
ror
fdivrp
add
pop
mov
sub
lock
inc
data16
idiv
ins
fistp
in
mov
fucomip
jge
jge
sub
(bad)
sub
imul
mov
clc
ss
mov
in
mov
inc
inc
mul
(bad)
mov
push
push
push
fstp
(bad)
loop
push
fistp
sbb
aaa
push
dec
(bad)
stos
gs
xlat
imul
pop
xor
add
xchg
adc
mov
fbstp
push
inc
inc
or
pop
jae
jb
xchg
dec
sub
sub
jmp
lods
scas
jnp
fstp
inc
mov
(bad)
aad
mov
ja
mov
jg
jo
clc
or
mov
xchg
ins
mov
jne
dec
pop
call
pop
mov
clc
push
mov
in
aaa
inc
hlt
push
hlt
cs
outs
sbb
cmp
pop
call
imul
dec
fstp
test
test
push
add
mov
(bad)
sbb
mov
mov
aas
jbe
xor
ss
pop
imul
dec
cwde
fstp
cmps
ins
or
test
jg
movs
pop
sbb
repnz
div
test
inc
pop
cmp
xchg
test
loope
aaa
dec
mov
mov
ins
in
aam
mov
dec
pop
and
pop
setnp
(bad)
test
lods
mov
jae
mov
sar
push
sub
mov
outs
enter
and
outs
sbb
xchg
(bad)
js
dec
(bad)
aaa
leave
fcomip
hlt
cmp
test
pop
fisub
push
mov
dec
out
scas
fisubr
aad
pop
or
imul
in
rep
sub
pop
xor
cmp
sub
in
jg
dec
sbb
pop
inc
movs
loope
cs
pop
xor
ja
in
std
or
fmul
jecxz
aaa
repnz
jle
push
xlat
retf
mov
lods
inc
mov
mov
pop
clc
aad
jl
clc
jnp
loop
cs
lea
xchg
out
sub
push
(bad)
jns
mov
mov
(bad)
ficomp
popf
js
sahf
mov
cli
in
xchg
jae
sahf
jno
mov
gs
sub
mov
(bad)
ja
scas
lods
scas
jge
cld
pop
in
jp
sbb
(bad)
es
icebp
outs
retf
mov
pusha
ds
lahf
cmp
scas
mov
std
in
push
mov
(bad)
inc
imul
adc
lods
in
outs
xchg
rol
cmps
in
sahf
ficom
mov
std
(bad)
sti
aad
jg
mov
pop
adc
shl
std
dec
je
lods
aad
test
in
bound
retf
clc
sbb
stos
arpl
jg
xor
aas
lds
xor
jbe
(bad)
cmp
mov
sbb
mov
cld
dec
pop
iret
lds
test
dec
jmp
(bad)
jmp
std
in
in
mov
lods
ss
int
mov
repnz
lds
aam
mov
add
outs
jns
and
repz
jo
jmp
mov
clc
scas
loopne
cmp
arpl
lds
ficomp
pop
shl
pop
test
mov
pop
pop
sbb
mov
scas
mov
das
lock
ins
lock
mov
push
int
repnz
(bad)
fcom
adc
mov
xor
mov
cmp
je
mov
aam
int3
lods
push
test
repz
clc
imul
cli
stos
in
pop
mov
clc
bound
dec
jns
mov
inc
or
aaa
and
jge
mov
xchg
popf
inc
mov
aam
push
bound
popa
push
and
cmp
cdq
es
hlt
cmp
or
imul
mov
adc
gs
out
mov
aas
outs
and
mov
xor
mov
retf
stos
cmc
lods
lods
jno
fist
pop
aam
(bad)
cmp
fistp
push
fcomp
imul
cmp
sbb
repz
add
mov
pop
or
out
ins
fisttp
pop
clc
mov
add
adc
mov
inc
in
cwde
dec
jl
in
pop
clc
inc
arpl
push
int
cmc
imul
dec
and
sti
in
(bad)
es
push
mov
fucomip
stos
cld
push
aad
push
(bad)
lods
lods
mov
imul
xchg
push
rcr
stc
pop
(bad)
or
sbb
mov
xchg
imul
(bad)
test
clc
adc
inc
psubb
mov
jmp
aaa
nop
fisttp
mov
rol
and
push
fist
cmp
das
and
xor
fcomp
lods
mov
jns
daa
push
test
or
cmp
cmp
push
jbe
dec
jle
xor
lock
adc
cld
into
mov
jmp
retf
scas
scas
jecxz
hlt
pop
aad
mov
jns
(bad)
mov
inc
inc
sub
fwait
loop
mov
dec
repnz
mov
dec
(bad)
nop
and
push
aaa
(bad)
repnz
push
(bad)
stos
jmp
aad
pop
cmpxchg
xchg
dec
dec
dec
fstp
jae
pop
ss
and
(bad)
icebp
enter
in
into
push
pop
cmp
out
sti
leave
jle
cmp
popa
xchg
mov
pop
pop
sub
fld
inc
ret
dec
inc
push
xchg
cmp
icebp
sti
loop
xchg
jae
mov
and
rcr
jbe
adc
lahf
or
adc
jb
adc
sbb
ins
mov
imul
outs
lods
pop
js
(bad)
retf
cs
pop
xor
int3
jecxz
cmp
or
(bad)
jae
sub
push
test
jle
in
cmps
call
leave
leave
aas
int
cs
bound
repnz
call
ror
mov
outs
sar
lock
mov
in
pop
push
mov
xchg
jle
and
inc
(bad)
repnz
scas
ja
pop
rcr
cld
inc
mov
in
mov
dec
fld
inc
dec
sbb
sbb
mov
cld
cmp
jno
std
mov
pop
push
rol
inc
fsubr
(bad)
mov
lods
ret
sub
outs
xlat
mov
loopne
pop
add
retf
adc
adc
mov
cmp
imul
std
ffreep
mov
mov
mov
in
push
movs
xchg
inc
fs
add
neg
inc
fdivrp
pop
stos
jmp
push
lea
lods
dec
data16
jle
mov
aam
bound
xchg
dec
retf
pop
aas
les
call
sbb
pop
mov
jns
mov
pop
pop
or
sbb
repnz
mov
ins
clc
retf
(bad)
push
jle
icebp
xor
rcr
enter
push
lahf
xchg
push
scas
cmp
jns
mov
in
fsub
sub
js
test
push
in
mov
sti
mov
sar
inc
aad
pop
(bad)
lds
and
mov
jl
and
add
sub
repz
mov
cmp
ret
jne
ja
dec
mov
test
and
(bad)
pop
lods
ret
outs
pop
cs
(bad)
dec
and
add
inc
ret
and
cld
dec
push
dec
mov
cmp
out
dec
pop
imul
aam
stos
xor
(bad)
fs
nop
mov
xchg
xor
push
scas
inc
addr16
jge
in
jne
push
popf
(bad)
push
sub
lea
xadd
lds
(bad)
test
int3
pop
dec
cmp
loope
arpl
jo
outs
xchg
mov
enter
mov
das
in
dec
(bad)
add
int
mov
mov
(bad)
mov
mov
cmp
cmc
xor
and
mov
and
fcmovb
pop
in
fisttp
retf
fstp
outs
mov
xchg
ss
(bad)
adc
mov
aad
or
push
cmp
add
pushf
arpl
fsubp
dec
sub
idiv
arpl
and
not
xor
icebp
inc
fistp
xchg
sub
cmp
sub
popf
retf
hlt
iret
pop
cmps
outs
xor
mov
and
push
xor
into
retf
ss
mov
mov
inc
cmp
cmp
loope
outs
pop
lock
js
mov
outs
cmc
cmp
xchg
js
ds
lods
cmps
pop
int
pop
sub
inc
sbb
stos
out
mov
psrad
dec
xchg
imul
mov
mov
mov
loop
pop
sbb
fst
popf
int
out
jmp
mov
mov
lods
retf
xor
jmp
(bad)
xor
mov
mov
fwait
mov
mov
cmp
(bad)
push
test
push
push
sub
mov
push
mov
dec
loope
add
pop
jmp
in
rcr
xor
or
mov
jmp
mov
pop
jge
(bad)
pop
cwde
iret
sti
lds
sahf
pop
loopne
std
out
push
pop
movs
rol
mov
dec
adc
lahf
pushf
jo
pop
call
into
int3
test
pop
sti
fidivr
fcomip
mov
mov
outs
fdivrp
push
mov
icebp
cmp
loop
sub
jnp
in
ds
ds
cwde
or
push
mov
mov
or
jecxz
add
pop
(bad)
loop
(bad)
rol
mov
ja
in
and
retf
jmp
loopne
mov
loop
jl
clc
jns
imul
mov
je
in
ins
jbe
cmp
jae
cmpps
xor
xchg
movnti
xchg
ds
aam
inc
gs
add
ret
js
imul
xchg
not
sub
ret
outs
push
pop
jp
hlt
ds
je
(bad)
adc
mov
xchg
retf
arpl
loope
add
(bad)
dec
dec
jecxz
scas
mov
fidiv
aam
mov
pushf
dec
jb
add
mov
rcr
loopne
mov
push
xchg
jl
(bad)
in
out
sbb
out
or
sar
(bad)
clc
loope
inc
push
pop
(bad)
clc
cwde
imul
out
mov
mov
into
jns
cdq
cld
dec
push
mov
jg
jg
inc
stos
push
jge
inc
add
xor
(bad)
aaa
cmc
aas
fwait
push
shr
sbb
fstp
fidiv
pop
sub
js
in
daa
cmp
out
stc
sbb
jne
fld
loope
(bad)
stos
(bad)
outs
cs
hlt
push
in
(bad)
mov
std
pushf
jle
js
loopne
xchg
dec
int
into
jge
pop
mov
pop
jne
ffree
mov
movs
jle
sub
mov
cmp
aas
push
jmp
(bad)
neg
xchg
xchg
fcomp
jbe
dec
ja
cmps
js
enter
fisttp
arpl
inc
sar
inc
test
mov
(bad)
loop
out
jl
mov
pop
retf
gs
aam
push
outs
jp
mov
mov
cmp
jp
cmps
leave
and
fild
lock
in
lods
loope
adc
sbb
(bad)
je
jl
adc
add
(bad)
les
test
add
dec
sbb
xchg
in
stc
xchg
mov
jg
push
(bad)
inc
mov
ret
popf
cmpps
jo
out
stos
jns
ja
outs
mov
and
in
push
sub
cld
pop
clc
das
lock
cmps
mov
jnp
leave
fs
fwait
fs
inc
add
jle
sub
xchg
sbb
lods
ins
jg
pop
in
ret
jecxz
shr
sub
outs
test
imul
(bad)
retf
pop
test
add
push
fwait
ja
(bad)
shr
xor
mov
test
int
and
les
xor
(bad)
mov
retf
loopne
lea
icebp
sub
(bad)
aas
or
imul
dec
jg
lods
das
cwde
or
mov
icebp
nop
push
xchg
mov
scas
jl
std
pushf
cmc
sbb
clc
xchg
pop
sub
mov
mov
movs
sbb
jo
xor
sbb
je
pushf
mov
jnp
sub
sub
test
data16
dec
imul
std
cwde
push
(bad)
imul
shr
mov
mov
ds
pop
xor
loope
sbb
mov
push
jge
inc
jmp
or
jno
iret
mov
jmp
(bad)
inc
cmc
sbb
jns
stc
mov
jl
mov
sar
pop
outs
sbb
pop
sbb
xchg
repnz
adc
jbe
add
repnz
sub
retf
mov
mov
imul
lahf
fwait
repnz
mov
jg
dec
idiv
sahf
and
push
cld
xlat
fcomp
mov
jnp
adc
lds
das
xchg
lods
lods
jbe
cmp
pop
pushf
xlat
les
mov
push
out
dec
and
mov
add
cmp
jbe
adc
ds
jno
out
xor
xchg
sub
sbb
ins
pop
(bad)
pop
mov
pop
add
add
in
inc
fdivr
imul
call
cmp
pop
cmp
xor
rcl
mov
fst
ds
movs
(bad)
mov
fnsave
pop
pop
scas
xchg
mov
rol
(bad)
jecxz
(bad)
cmp
test
cld
cmp
inc
xlat
stos
aas
fldenv
outs
ss
loop
mov
mov
retf
aaa
shl
pop
dec
(bad)
push
jl
icebp
add
scas
in
and
mov
push
adc
mov
rol
pop
inc
scas
jecxz
cmp
mov
imul
fsubr
xlat
push
popf
jge
cmp
sub
xchg
sbb
mov
pop
(bad)
lahf
lock
mov
std
test
sar
cmps
mov
dec
fisubr
btc
push
sbb
or
push
cli
sbb
loop
retf
mov
xor
pop
orps
sub
rcl
jb
lods
sahf
in
(bad)
push
shl
jbe
jle
icebp
pop
jle
push
cmps
push
push
cmps
or
ins
mov
pop
jmp
xchg
das
hlt
pop
push
iret
sub
pop
mov
aad
sub
(bad)
cmp
aas
adc
das
adc
pop
and
push
in
ficomp
xchg
aaa
jle
mov
mov
sbb
pop
pop
mov
lock
lahf
sbb
loope
lahf
loope
mov
into
mov
cmp
xchg
xor
in
pop
xor
rep
imul
ins
clc
ja
xchg
push
pop
mov
repnz
inc
sub
into
add
pop
mov
cmc
mov
outs
cmp
dec
push
retf
aam
mov
dec
cmps
movs
data16
fisubr
ds
out
icebp
mov
pop
mov
loop
imul
lods
pop
cli
ror
pusha
mov
jb
repnz
jg
dec
lds
mov
(bad)
mov
aas
loope
icebp
cmps
cmp
imul
into
cli
xchg
fadd
fcomp
std
ficomp
xchg
sti
cmps
pop
jns
sub
clc
mov
pop
push
and
addr16
fistp
clc
jb
inc
pop
sbb
pop
cmp
xor
sbb
mov
pop
stos
dec
jg
in
cld
jns
jg
mov
js
cmp
jno
std
pop
out
mov
or
xor
adc
cmp
lods
test
shr
(bad)
out
pop
ss
pop
jns
cwde
aam
cmps
inc
dec
mov
mul
sti
dec
mov
lock
mov
jmp
iret
and
stc
mov
lds
cmp
in
(bad)
cs
jecxz
mov
adc
fxch
lds
icebp
and
jl
jbe
xchg
mov
cmp
and
pop
pop
adc
sar
stos
jl
std
nop
cmc
jg
push
and
mov
push
shl
mov
xchg
and
mov
das
cdq
xchg
(bad)
sbb
mov
cmp
or
push
test
fnstenv
and
in
movs
aaa
rcr
cmp
int3
or
cmp
ret
mov
ror
frstor
mov
mov
jno
inc
push
push
jge
cmc
addr16
jg
repz
cmp
ds
pop
cmp
xor
and
aad
das
(bad)
scas
push
inc
icebp
das
loop
aad
xchg
or
xor
gs
inc
jmp
adc
clc
xchg
sti
inc
leave
imul
mov
mov
pop
(bad)
sub
or
fld
loope
inc
jp
icebp
xor
inc
pop
leave
xchg
mov
sti
or
aas
pop
stc
sub
pop
adc
popf
or
rcl
je
aas
dec
leave
(bad)
lods
ret
int3
pop
aam
or
outs
icebp
cmp
ja
imul
dec
add
bnd
loop
pop
cmc
jl
arpl
pop
lods
jp
scas
int
sar
(bad)
loop
fistp
jge
and
jno
mov
pushf
outs
cmps
aas
adc
mov
mov
jne
sar
inc
js
push
clc
push
jecxz
inc
inc
aam
fcmovbe
enter
rcr
xchg
repnz
mov
push
cdq
inc
in
ins
int3
mov
les
xchg
sbb
popf
movs
lods
xchg
es
push
xchg
setns
push
jmp
loope
or
cld
dec
ds
adc
pop
dec
int
jo
dec
fadd
retf
daa
mov
je
sbb
call
xlat
aam
pop
loop
std
xchg
push
xchg
outs
mov
mov
push
out
sub
in
shr
mov
cmp
fdivr
int
loopne
scas
outs
mov
cmp
aas
fst
pop
(bad)
stc
sbb
mov
or
outs
pop
jne
sbb
xchg
xlat
out
push
leave
stos
cmp
xchg
mov
xor
mov
js
mov
adc
xchg
pop
outs
movs
pop
jbe
mov
mov
scas
jge
aaa
sbb
(bad)
mov
sub
div
(bad)
repnz
mov
imul
in
mov
jbe
mov
arpl
not
add
mov
movs
dec
fcomi
(bad)
retf
mov
push
fiadd
mov
test
loop
mov
ja
out
push
loope
mov
xor
mov
xchg
imul
idiv
dec
inc
inc
xchg
jb
int
das
ficomp
push
sub
test
jmp
arpl
repnz
lds
call
fdiv
mov
aaa
or
xchg
push
bnd
xchg
sbb
inc
sbb
inc
fistp
retf
cld
xor
sbb
jecxz
scas
mov
in
sti
jae
push
xchg
mov
int
sub
jle
fcmovnb
mov
repnz
pop
and
pop
mov
mov
jge
idiv
jle
cmc
sti
mov
pop
cmp
mov
data16
sar
sahf
test
or
es
in
or
sbb
inc
inc
or
(bad)
data16
hlt
ror
repnz
sub
idiv
xchg
mov
xchg
and
repz
fidivr
inc
cmp
mov
mov
push
out
mov
(bad)
outs
lods
je
lock
out
jns
cmp
fnstsw
push
clc
push
fisubr
jl
mov
test
jmp
(bad)
test
in
popf
rcl
lds
add
idiv
mov
in
in
fld
sahf
cmp
dec
dec
cmps
lods
push
shl
sub
popf
xchg
imul
xchg
out
mov
and
fild
scas
icebp
push
fistp
jg
fstp
(bad)
rcr
clc
mov
outs
jno
jg
iret
inc
cmps
stos
cld
fbstp
jl
popf
idiv
loopne
test
ret
mov
cld
jge
clc
rol
(bad)
cmp
xor
not
ficomp
loope
shl
pop
and
arpl
inc
sar
jl
shr
mov
mov
adc
inc
loope
mov
add
and
repz
retf
push
ja
out
mov
mov
sahf
loope
adc
dec
scas
adc
cld
add
jecxz
dec
xchg
pushf
mov
mov
lahf
sti
dec
leave
jne
dec
sbb
iret
cmps
jmp
arpl
mov
xor
xchg
xchg
cwde
jno
scas
xchg
mov
(bad)
mov
cmp
xlat
xor
xchg
fsubrp
ror
pop
and
push
pushf
jp
ret
sbb
ja
jns
push
(bad)
fist
das
lock
dec
pop
inc
lds
in
cmp
xchg
mov
scas
pop
inc
cli
or
(bad)
fcmovnb
inc
fwait
mov
dec
fucomp
sti
cmps
out
repnz
call
pop
inc
mul
mov
stc
inc
out
dec
data16
mov
cmp
inc
jge
out
in
jge
loopne
or
js
ret
xchg
loopne
arpl
push
out
pop
dec
std
mov
cmp
jecxz
(bad)
psubb
out
mov
dec
adc
(bad)
(bad)
or
dec
inc
fdivrp
add
xchg
stos
pxor
pop
pop
(bad)
(bad)
fcmovb
loop
jmp
cmp
push
shl
ret
mov
cmc
pop
xor
pop
in
jb
mov
adc
cmps
sbb
scas
and
pop
pop
push
push
and
movs
mov
jge
sub
jnp
push
(bad)
into
loopne
and
cmp
lahf
inc
les
rcr
mov
jg
mov
(bad)
loopne
out
out
icebp
sbb
ficomp
pop
sub
push
scas
mov
and
sub
mov
ins
xchg
pop
jle
ds
mov
inc
xchg
movs
jl
icebp
gs
movs
scas
inc
mov
sti
das
xchg
icebp
push
test
xchg
dec
int3
fstp
out
cmp
cmp
leave
cmp
cmp
pop
stos
fild
cmps
pop
cdq
push
mov
stc
jg
in
jmp
repz
cmps
stc
pop
in
movs
mov
sahf
aaa
call
call
iret
test
cmc
dec
mov
(bad)
out
sub
pop
out
xchg
cmp
test
ror
call
mov
pusha
mov
push
inc
repz
jmp
mov
sub
ja
and
cli
inc
in
xchg
xchg
xchg
push
fidiv
sub
div
adc
mov
pop
mov
xchg
nop
pop
dec
movs
ret
cmp
sub
jae
sbb
jns
inc
fidiv
jbe
psraw
ins
xor
into
jmp
mov
add
cld
mov
adc
rcl
mov
fidivr
lock
into
loop
pop
movs
repnz
rcl
mov
add
fstp
fcom
lahf
cmps
fucomi
push
inc
stos
sbb
push
shr
inc
add
pop
pop
mov
xor
dec
call
mov
jl
xor
add
xlat
dec
fistp
outs
mov
dec
test
fistp
mov
stc
push
push
(bad)
retf
int3
loop
pop
lods
inc
and
sar
jmp
(bad)
xchg
and
idiv
test
cmp
xor
aam
or
hlt
idiv
aas
clc
jmp
test
push
fnstenv
test
int
and
mov
stos
pop
sub
push
xchg
cmp
xchg
mov
fsubr
(bad)
sub
(bad)
int
es
in
(bad)
(bad)
push
mov
inc
mov
sbb
push
test
jmp
scas
loope
div
stc
ror
fstp
test
sbb
popa
mov
pop
(bad)
add
repz
fdivr
les
mov
dec
cld
mov
fwait
pop
clc
popf
lods
cld
mov
sbb
je
sub
pushf
push
mov
hlt
lds
jecxz
sbb
sar
das
loop
dec
out
leave
daa
clc
popf
adc
push
movs
lock
dec
stc
mov
add
pop
cld
push
loop
fwait
lds
mov
pop
sub
fidivr
iret
xchg
scas
add
add
pop
loopne
adc
cmp
js
jl
cli
mov
fbstp
cld
fsubr
dec
gs
ret
dec
mov
ja
out
mov
imul
sub
cmp
cmp
outs
les
mov
push
push
inc
cld
sub
cmp
fistp
fistp
idiv
jg
jne
push
jae
ins
out
jno
inc
jnp
pop
outs
aas
out
jp
mov
inc
jecxz
repz
pop
fisub
out
das
icebp
push
js
stc
imul
out
std
call
add
out
inc
mov
sbb
xor
mov
mov
jg
push
in
sti
out
mov
dec
pop
xchg
clc
mov
mov
imul
stos
shl
outs
(bad)
repz
mov
inc
jnp
lds
push
add
idiv
mov
mov
push
mov
movs
rol
aas
enter
fidivr
sti
lods
div
mov
repnz
dec
das
popa
retf
out
inc
(bad)
imul
inc
pop
pop
fisubr
ja
(bad)
inc
in
test
in
mov
lods
das
xor
out
or
push
pop
inc
fstp
mov
mov
push
mov
jg
inc
mov
jg
jbe
add
jg
sbb
mov
outs
sti
cmps
xchg
mov
mov
iret
dec
sbb
std
out
pop
aam
pop
in
movs
fcmovnu
nop
aaa
out
std
fistp
out
mov
mov
lods
(bad)
mov
dec
xchg
fidivr
and
inc
inc
sbb
jns
pop
pop
mov
repz
aad
and
aaa
into
xor
push
aas
mov
push
out
arpl
(bad)
push
jge
fbstp
aas
retf
shl
iret
pop
adc
push
mov
pop
sub
retf
cmps
retf
ins
dec
jle
inc
cmc
(bad)
fsubr
pop
stc
push
sub
(bad)
in
call
jns
jmp
out
test
mov
pop
mov
fcmovb
sbb
movs
and
jno
sbb
mov
lods
(bad)
jns
pop
push
mov
stos
cmp
fcom
scas
inc
ds
xor
stc
jae
mov
xchg
add
mov
jecxz
lahf
xchg
jl
sub
cmc
je
dec
jge
idiv
lods
push
test
mov
mov
out
out
adc
pop
clc
jle
mov
pop
dec
test
add
jl
sbb
arpl
mov
jne
add
push
sub
enter
mov
or
ds
(bad)
clc
mov
cld
int
test
ins
pop
dec
movs
imul
xor
in
lds
loopne
add
mov
fwait
pop
pop
ret
mov
bound
xchg
mov
mov
add
pop
ja
cli
push
push
pop
pop
dec
dec
adc
hlt
adc
call
push
scas
gs
jl
pop
sar
rol
jns
mov
pandn
stc
xor
mov
sbb
push
pop
cmps
pop
ja
outs
js
imul
jns
in
bound
loopne
fcom
mov
and
sbb
lahf
imul
out
pop
sbb
mov
pop
adc
cmp
sbb
mov
sbb
mov
sbb
xor
mov
mov
ins
in
inc
loop
icebp
iret
cmps
fiadd
les
push
imul
(bad)
push
(bad)
sub
adc
lds
inc
movs
sub
daa
add
test
in
mov
jg
jmp
adc
xchg
sbb
fistp
aaa
jno
jl
(bad)
rcl
and
stos
and
pop
jb
push
dec
out
jnp
rcr
xor
mov
cs
std
fwait
adc
data16
test
inc
pop
sbb
out
pop
pop
icebp
mov
(bad)
sbb
je
icebp
sbb
xchg
lds
push
cdq
arpl
lds
mov
aaa
sub
sahf
retf
fidivr
repz
shr
cmc
sbb
cdq
and
pop
es
(bad)
push
into
aad
sub
push
cmps
adc
sub
call
pop
fcmove
mov
mov
repnz
inc
sub
xchg
push
xchg
xor
cmp
enter
in
jno
cmp
pop
lahf
dec
sub
fnstenv
cmp
lea
mov
imul
jmp
(bad)
mov
mov
fstp
or
cdq
jns
outs
mov
dec
hlt
imul
clc
xor
pushf
cld
dec
lock
push
hlt
push
mov
mov
mov
mov
xlat
push
dec
sti
jbe
clc
arpl
das
cwde
int3
in
repz
in
jb
cmps
loope
fs
outs
xor
mov
fwait
test
daa
adc
mov
mul
add
jno
es
fidivr
dec
cld
push
imul
lea
cli
xor
iret
lock
ss
test
xchg
ror
imul
imul
in
std
lock
loop
(bad)
retf
pop
std
xchg
mov
clc
mov
xchg
inc
(bad)
xlat
lock
stos
pop
dec
lock
fstp
std
xchg
xchg
dec
and
cld
and
jp
(bad)
pop
sti
out
int
add
inc
enter
std
jae
out
jmp
aas
frstor
fild
dec
out
inc
jae
scas
jle
dec
inc
add
out
clc
cdq
imul
test
sub
shr
sahf
and
int
repnz
aas
frstor
jge
jnp
lods
in
add
repnz
rcl
scas
int3
mov
sub
xor
jg
stos
ja
lock
jne
pop
cdq
jmp
repz
mov
jg
sub
aas
mov
imul
stc
lahf
loopne
data16
dec
inc
add
push
ret
jle
gs
add
push
iret
xchg
retf
sar
fwait
std
out
pop
sti
cmp
shr
cmp
icebp
sbb
cli
and
movs
stos
pop
(bad)
(bad)
repnz
adc
idiv
push
adc
pop
mov
add
mov
fstp
jmp
or
js
push
pop
ss
sub
or
mov
(bad)
cmp
mov
ins
mov
rcl
mov
mov
aas
bsr
inc
xor
jmp
mov
jnp
pop
pop
clc
xor
icebp
mov
push
cmps
(bad)
stos
push
pop
mov
daa
push
mov
ins
pop
xor
pop
sbb
pop
cdq
add
xchg
jmp
clc
dec
push
lock
stos
loop
clc
dec
arpl
(bad)
mov
sahf
pop
aaa
fidiv
jmp
or
retf
iret
scas
scas
stc
push
mov
add
out
mov
in
pop
sar
xor
push
mov
sbb
mov
adc
dec
imul
sbb
cmp
mov
pop
pop
jl
aad
fwait
dec
lock
shl
sub
out
es
and
cmp
pop
cdq
idiv
outs
(bad)
outs
xor
lock
jbe
pop
xchg
mov
popf
cmc
lahf
int3
pop
out
clc
mov
dec
in
lock
leave
movs
cmc
pop
movs
out
xor
mov
lods
mov
(bad)
into
out
div
push
pop
mov
stc
sbb
aas
cli
es
arpl
shr
imul
call
test
ins
ins
pop
(bad)
loope
shl
jecxz
cmp
xchg
and
ret
pop
retf
cmp
sub
loope
addr16
movs
lock
mov
iret
movs
fwait
dec
int
int
xchg
mov
push
lahf
lock
lods
push
inc
aad
xor
pop
xchg
cli
inc
pop
xor
and
movs
cld
inc
clc
das
scas
cmp
(bad)
pop
mov
outs
and
mov
xchg
adc
dec
add
pop
dec
jmp
or
dec
jl
push
mov
fprem
mov
ret
cmp
xor
gs
cmp
mov
mov
popa
and
out
inc
inc
push
pop
test
xlat
std
adc
jg
push
aad
inc
jecxz
or
lock
movlps
in
pop
xchg
loope
add
iret
sar
inc
jno
add
and
and
jbe
jmp
scas
mov
push
xchg
lahf
push
mov
cs
xor
in
repz
sub
(bad)
adc
sub
aad
test
iret
in
sbb
not
fcmovnb
push
jg
ins
in
fidiv
pop
stos
es
and
sti
(bad)
xchg
dec
shl
fbld
xor
scas
out
or
push
mov
lock
into
int
fwait
mov
mov
mov
xor
cmps
mov
aas
or
sbb
pop
pop
ficomp
popf
push
fimul
icebp
ja
(bad)
stos
mov
mov
imul
aad
adc
push
and
inc
jecxz
jle
pop
mov
fwait
dec
mov
push
sahf
inc
dec
lods
sbb
in
fiadd
cwde
popf
iret
bound
inc
cdq
push
sar
pop
loop
movs
mov
or
push
and
xchg
ret
(bad)
ja
sbb
and
inc
jge
loopne
and
into
lahf
lock
imul
shl
fidiv
call
mov
aas
cs
inc
idiv
jbe
out
fstp
mov
mov
dec
iret
adc
jp
mov
push
mov
xchg
scas
xchg
scas
pop
pop
pop
ret
cmps
jmp
cld
jmp
xchg
ins
lahf
imul
movs
lahf
lock
out
mov
test
jmp
add
sub
cmp
inc
hlt
pop
mov
pop
mov
add
cli
outs
test
test
mov
ss
lock
fisub
add
or
arpl
jmp
retf
push
cmp
xor
dec
push
std
cwde
jl
mov
loop
inc
jl
movs
call
xchg
pushf
div
jp
mov
call
cdq
pop
pop
popf
fstp
into
ss
pop
shl
xchg
fcmovnbe
pop
cdq
or
test
(bad)
and
adc
(bad)
fsub
xchg
dec
test
arpl
inc
mov
adc
inc
(bad)
push
cwde
(bad)
aam
jp
scas
lahf
lock
jge
ins
sbb
shl
ret
jne
fld
inc
jo
ffree
cld
aad
fistp
mov
mov
scas
pushf
fisubr
or
push
aam
in
outs
ins
in
aam
mov
push
xor
ftst
js
stc
mov
mov
(bad)
movs
cs
jg
push
ds
or
aas
loop
cs
jne
xchg
dec
jne
xchg
pop
ret
sub
sahf
inc
cmc
(bad)
mov
mov
inc
dec
sar
mov
adc
dec
sbb
mov
(bad)
or
sbb
push
sar
sbb
jecxz
fistp
add
out
sbb
push
pop
xchg
mov
add
(bad)
sub
xchg
cmp
sub
xor
inc
les
mov
mov
stos
cmp
dec
clc
sub
ret
imul
call
movs
lahf
sbb
push
(bad)
loopne
inc
mov
xchg
mov
xchg
sub
test
mov
pop
jmp
cmp
inc
sbb
repnz
stc
push
aas
es
in
pop
dec
int
clc
popa
lock
jp
dec
icebp
inc
or
sub
ror
mov
dec
leave
mov
lods
(bad)
mov
cld
cmp
aad
or
outs
int3
dec
sub
fcomip
push
(bad)
lea
das
outs
in
je
add
stos
inc
adc
pop
adc
(bad)
mov
cmp
mov
ja
cmc
jnp
ds
imul
jnp
xchg
imul
mov
sub
mov
sbb
and
mov
jl
clc
pop
lods
fucomi
sahf
sub
outs
sbb
(bad)
sbb
sbb
icebp
sbb
(bad)
pusha
mov
gs
int3
push
xchg
or
retf
aad
ud2
inc
outs
inc
xor
add
inc
and
lds
add
sub
push
xchg
mov
inc
pop
jecxz
and
cmp
movups
xchg
ficom
jb
cmps
sub
ja
das
cmp
pop
cld
aam
inc
out
stc
jge
ret
aad
pop
mov
ret
push
mov
(bad)
sbb
add
repnz
mov
cmp
pop
(bad)
(bad)
mov
adc
pop
pop
jge
dec
cmp
js
mov
push
xlat
inc
or
aad
sti
mov
mov
dec
mov
div
mov
(bad)
adc
out
hlt
stos
ins
mov
repnz
fisttp
ds
cmps
fdivrp
in
push
dec
add
mov
enter
sbb
mov
mov
stc
pop
jbe
fdivr
mov
div
(bad)
push
xchg
fsub
push
mov
mov
js
jecxz
mov
mov
(bad)
in
iret
mov
dec
xor
or
test
and
jg
je
jno
ins
mov
and
mov
push
std
(bad)
stc
jbe
add
je
mov
or
jnp
ror
lods
outs
add
test
test
mov
pop
fisubr
(bad)
ja
push
fwait
outs
push
push
mov
jl
inc
scas
jge
push
call
lock
div
nop
inc
arpl
inc
fstp
ds
out
mov
xlat
inc
sbb
push
mov
inc
mov
cmc
outs
adc
lahf
adc
mov
xchg
sub
mov
lea
jo
fidivr
data16
pop
jmp
and
je
ss
add
mov
mov
and
ret
ja
xor
push
mov
pop
jle
cmovle
fbstp
lods
in
mov
pop
dec
mov
mov
jns
inc
jecxz
add
pop
xor
xor
and
xlat
add
scas
jecxz
xlat
ret
mov
mov
mov
ror
jmp
add
and
ins
stos
iret
or
jnp
ins
cmc
int
dec
jl
mov
and
jbe
dec
mov
psraw
call
push
(bad)
lods
(bad)
loope
imul
rcr
pop
mov
mov
stos
xor
push
mov
mov
jnp
mov
xchg
dec
imul
pop
sbb
lock
ds
sti
cmc
pop
lods
sbb
test
sub
jge
sub
xchg
mov
pop
outs
inc
inc
add
clc
xchg
sti
jl
adc
aas
loope
add
inc
ficom
aas
clc
and
mov
mov
std
add
mov
inc
mov
pop
or
(bad)
sbb
(bad)
int
js
push
mul
jg
mov
pop
mov
pop
pop
call
shl
in
repz
rcl
(bad)
mov
xchg
sti
retf
iret
sbb
ins
cli
jg
test
(bad)
pop
mov
pop
clc
and
mov
add
adc
clc
push
xchg
sub
jns
push
and
add
inc
adc
sbb
jmp
lock
arpl
cmps
retf
fcmove
fcomip
adc
(bad)
add
lock
xor
xchg
pop
mov
mov
xchg
mov
(bad)
dec
and
jae
mov
pop
(bad)
cmp
cs
clc
inc
nop
jb
aas
xor
std
fist
mov
movs
aas
lock
inc
mov
xchg
loop
test
stos
retf
ret
std
pop
aad
inc
loopne
ds
inc
xchg
mov
fstp
add
cmp
mov
cld
jg
sbb
f2xm1
aas
mov
sub
mov
imul
ins
daa
imul
add
jno
clc
loop
retf
mov
daa
std
not
xchg
mov
retf
jo
ins
push
pop
fs
inc
add
lock
retf
mov
inc
data16
jg
mov
jg
xchg
mov
jecxz
adc
scas
retf
push
test
and
jecxz
inc
dec
not
clc
iret
les
scas
mov
pop
aas
adc
pop
fdivr
mov
std
movs
fs
fldenv
gs
xor
and
mov
fisubr
xchg
std
lahf
inc
push
test
das
mov
out
sbb
fsubrp
js
cmp
dec
sub
call
or
out
js
lds
std
je
pop
std
mov
pop
lock
jbe
(bad)
mov
pop
jo
std
mov
mov
jecxz
inc
mov
(bad)
fiadd
std
lods
lahf
sar
pmuludq
jg
cmps
imul
mov
or
movs
mov
mov
push
outs
cli
ret
lods
fstp
fisubr
arpl
pop
jmp
push
mov
mov
mov
mov
mov
aaa
inc
sti
mov
sti
int
loopne
aas
pop
shr
mov
lods
test
or
pop
rol
sbb
cld
push
addr16
cmp
dec
jge
stc
adc
push
jecxz
mov
imul
ret
loope
pop
retf
dec
mov
inc
mov
outs
lods
mov
ins
out
mov
cmp
sub
repz
loope
mov
lods
pop
dec
in
xchg
(bad)
lods
lods
out
pop
fsub
sbb
bound
xchg
xchg
or
push
fdivr
pop
test
inc
add
clc
and
mov
ja
lods
sbb
mov
cld
adc
jl
inc
enter
jg
xor
test
aas
push
push
ss
test
or
pop
inc
lock
xchg
ins
scas
(bad)
mov
retf
dec
sahf
loop
mov
in
xor
rol
idiv
mov
mov
pop
icebp
xor
lea
dec
adc
lea
dec
and
add
jg
pop
stos
dec
ffreep
pop
pop
fwait
cli
bound
clc
(bad)
fdivp
into
mov
pop
mov
sub
jns
std
int3
imul
std
test
das
mov
xor
cmp
(bad)
sub
pop
xor
ins
inc
xlat
int3
and
and
pop
inc
mov
mov
xchg
imul
add
cmps
fcmovu
in
mov
add
enter
lahf
xchg
mov
out
sbb
retf
aaa
ins
(bad)
out
cli
cmp
inc
lock
and
cmc
or
repnz
movs
push
mov
sti
lahf
stc
mov
test
ficomp
(bad)
push
add
ret
in
push
push
cli
cmp
xchg
shl
mov
xchg
xchg
fiadd
mov
out
and
aas
clc
dec
and
je
jnp
(bad)
dec
mov
ss
and
dec
sub
out
ins
inc
test
inc
sti
add
dec
add
int
out
mov
dec
mov
pop
stos
lock
lds
mov
test
sti
mov
adc
movs
(bad)
rcr
cmp
cmp
jno
or
lods
lods
cmc
cdq
hlt
dec
cld
aas
xor
arpl
and
inc
or
cmp
js
ret
fidivr
xchg
cmps
inc
mov
xchg
movs
fsubrp
sbb
pop
pop
(bad)
jae
in
adc
jb
sti
mov
mov
add
add
hlt
mov
mov
cli
cmps
pop
fsubr
lock
inc
outs
neg
jo
hlt
fwait
sti
mov
out
out
mov
inc
js
ret
call
popa
outs
or
inc
and
int3
mov
cwde
adc
fsub
cmps
pop
cld
jge
ss
loop
in
popf
sbb
mov
mov
dec
cmps
fucomp
call
mov
out
out
xor
xchg
outs
lock
pop
in
arpl
sub
outs
push
pop
test
stos
repnz
das
lock
mov
int
idiv
(bad)
inc
add
sbb
cld
jge
xchg
(bad)
clc
sti
pop
lock
movs
stos
mov
xchg
sbb
outs
cmps
inc
outs
popa
adc
inc
or
movs
inc
xor
jbe
cmp
je
icebp
cld
push
icebp
pop
cld
daa
push
es
outs
(bad)
ins
outs
les
dec
ins
scas
xchg
jno
mov
test
jnp
ja
(bad)
dec
std
mov
aas
loopne
pop
ja
jg
mov
jmp
xchg
dec
repnz
das
lock
dec
push
out
mov
mov
iret
(bad)
pop
sbb
pop
les
cmp
imul
lods
and
mov
lea
add
stos
and
mov
push
stos
retf
lods
aaa
(bad)
push
in
test
fisubr
adc
sbb
mov
dec
sbb
nop
pop
fst
cld
xor
cmps
cld
pop
dec
mov
sub
dec
inc
or
clc
push
outs
jne
leave
xchg
add
in
das
repz
push
jae
push
aas
fisub
lds
and
ja
cmc
outs
adc
(bad)
std
cdq
jle
movs
aam
aas
arpl
xor
inc
les
cmp
jmp
sub
aad
fidivr
call
arpl
(bad)
int
push
dec
test
xor
(bad)
loope
xor
cli
lahf
pop
in
sti
lock
ret
in
sysret
cmc
pop
cdq
jle
cld
xor
mov
mov
jg
xchg
fild
dec
mov
mov
clc
mov
popf
xlat
xchg
mov
mov
mov
ins
out
lods
adc
or
int
mov
loop
imul
mov
std
movs
mov
(bad)
mov
mov
xchg
push
or
retf
xor
cld
popa
ja
in
xchg
cld
adc
jne
ins
dec
xchg
pop
pop
mov
add
sub
xor
(bad)
sub
outs
mov
sahf
lahf
jb
loope
scas
out
jle
out
xchg
pop
xor
iret
pop
icebp
xchg
dec
aam
es
imul
or
leave
mov
mov
pop
mov
xchg
mov
adc
jl
inc
mov
push
jg
mov
jb
fild
clc
jne
test
je
jno
inc
push
movs
xchg
out
inc
mov
stc
sub
shl
sbb
scas
int3
cmp
mov
pop
ja
cli
adc
(bad)
mov
inc
dec
mov
lods
mov
loope
je
add
jne
push
mov
aad
in
xchg
inc
mov
jnp
hlt
jg
sti
push
sti
lock
clc
jg
(bad)
jle
ss
add
adc
je
das
out
jg
test
cld
dec
or
in
add
fistp
xchg
in
jmp
sbb
gs
xlat
fidivr
je
inc
cwde
dec
lahf
mov
jg
ficomp
inc
sar
xchg
idiv
add
in
in
xor
lahf
loopne
and
cmp
int
in
in
stos
jmp
fstp
stos
das
fisubr
leave
push
lea
shl
fld
aas
inc
inc
jmp
xchg
fld
jo
lock
iret
inc
stos
jg
cmp
repz
sbb
aas
clc
push
fidiv
inc
jle
jmp
loop
stc
jbe
add
iret
mov
ins
fcomi
pop
outs
sti
lock
xlat
(bad)
jno
jne
sbb
mov
stos
add
imul
test
inc
jmp
cmp
mov
push
mov
xchg
jg
sub
movs
mov
or
jb
rcl
test
inc
and
pop
xor
nop
sbb
add
out
or
jns
add
jle
add
xchg
test
retf
jnp
aaa
adc
jo
pop
fstp
inc
shr
add
scas
jbe
popf
test
test
dec
inc
pop
arpl
and
pop
fist
jp
cmc
scas
mov
in
aad
fsubr
mov
into
xor
int3
in
(bad)
repnz
jmp
push
ss
pop
idiv
mov
xchg
aad
test
popf
cld
pop
clc
cmc
aaa
(bad)
out
jae
ins
inc
mov
rcr
cdq
jg
mov
std
out
loop
outs
test
mov
xchg
stc
std
push
call
jbe
repz
xor
lods
jbe
pop
jmp
fidiv
jg
int
xor
cmps
mov
pop
idiv
das
push
jbe
mov
(bad)
xchg
jg
imul
jg
ins
or
push
xchg
mov
jmp
gs
fwait
icebp
scas
and
sar
push
cld
aaa
clc
or
js
pop
mov
pop
xor
jp
or
in
dec
test
mov
inc
je
add
sub
mov
outs
xchg
js
not
(bad)
aad
pop
sbb
sbb
dec
jmp
pop
mov
xor
je
(bad)
jns
bsr
add
mov
sar
(bad)
stos
fwait
sub
out
aaa
imul
sub
fwait
jae
mov
pop
fisub
aaa
fisubr
div
pop
jle
inc
or
dec
(bad)
repz
imul
repnz
fistp
jnp
gs
mov
out
xor
out
jl
mov
shl
(bad)
sub
inc
sar
(bad)
std
shl
(bad)
xor
rep
pop
loop
xchg
cli
sbb
or
out
scas
jmp
jge
aaa
out
stos
jge
jb
inc
(bad)
add
std
fucomip
push
iret
(bad)
mov
scas
movs
pop
lds
repnz
inc
push
(bad)
cmc
aaa
clc
jle
sub
sbb
pop
(bad)
sub
mov
mov
sti
lods
std
out
aam
shr
sti
mov
rcr
ins
cdq
sti
mov
mov
hlt
mov
movs
fcomi
jg
call
sub
inc
adc
pop
lods
dec
(bad)
das
test
mov
call
out
ss
fld
mov
std
sub
add
pop
sbb
int
inc
mov
(bad)
out
loop
out
inc
scas
imul
outs
stc
loop
aaa
sub
push
xlat
add
int3
fisttp
mov
jl
call
test
sub
pushf
fcomp
retf
cld
and
test
movs
mov
xchg
aaa
ja
shr
ja
std
ds
(bad)
lahf
loop
fwait
(bad)
mov
ja
jl
sti
pop
pop
stc
mov
adc
jo
mul
cmp
or
inc
push
inc
loop
loope
sti
fucomip
jae
cmps
pop
sar
test
push
xlat
mov
pop
aas
enter
jnp
push
push
mov
loop
mov
int
add
xchg
daa
ds
mov
cmp
mov
mov
repnz
xchg
add
push
and
inc
jp
int3
sbb
xor
ins
jns
scas
sub
mov
aaa
fisub
into
jp
(bad)
dec
jmp
aaa
(bad)
lea
jmp
sub
retf
xchg
add
inc
ins
out
aad
inc
jnp
repz
pop
pop
outs
fucomip
mov
movs
fidivr
lds
sub
out
mov
(bad)
loope
push
(bad)
imul
aam
cld
xchg
mov
mov
fdivrp
sbb
inc
inc
stos
mov
ss
stc
push
out
mov
xlat
ret
push
dec
lea
xor
or
xlat
cmp
sub
in
and
add
out
ret
jb
lods
sub
and
mov
ds
sti
pop
jl
clc
(bad)
sar
pop
pop
int
ds
mov
mov
add
and
ror
cld
dec
mov
dec
lock
jg
pop
mov
test
gs
(bad)
iret
jno
mov
rol
scas
es
sar
bound
jae
push
pop
mov
fstp
push
retf
mov
cmps
mov
jns
xchg
imul
pop
fcomp
inc
cmp
dec
inc
sbb
jle
ret
neg
scas
fxch
clc
daa
dec
out
jg
lahf
or
push
inc
scas
test
dec
das
das
aam
outs
xchg
sbb
inc
ror
xlat
imul
aaa
push
cld
aas
(bad)
add
scas
dec
sbb
xchg
mov
das
int3
fisttp
dec
outs
cld
jp
(bad)
sti
aam
stc
data16
cmp
fsubp
pop
lods
inc
ror
dec
js
scas
and
dec
movs
or
sbb
mov
adc
mov
std
pushf
je
jecxz
mov
loop
inc
mov
enter
mov
sub
aas
fnstenv
lsl
(bad)
jae
int
bound
cmc
mov
cmps
ins
pop
pop
ds
push
out
repz
mov
outs
scas
test
and
sbb
outs
push
js
dec
loop
cmp
movs
call
dec
dec
imul
arpl
sbb
aaa
mov
cli
push
pop
xchg
add
mov
xor
ficom
(bad)
lods
mov
and
pop
fidiv
test
pop
mov
add
lods
rol
inc
or
xchg
into
xchg
jbe
jbe
dec
sar
push
in
xchg
aad
shr
mov
mov
xchg
mov
fsubr
sub
xchg
test
lahf
push
cld
das
stos
pop
imul
push
imul
push
sbb
jecxz
fs
push
cmc
repz
cld
adc
cmp
mov
jge
sub
push
mov
(bad)
adc
jg
les
std
lods
mov
scas
loopne
xchg
(bad)
cs
fcomp
xchg
xor
movs
iret
(bad)
push
std
movs
mov
(bad)
out
or
sbb
adc
inc
inc
test
std
test
pextrw
(bad)
out
or
fdivrp
add
xchg
jg
jl
lock
dec
jae
pop
pop
js
ret
(bad)
es
not
shr
mov
xchg
sbb
jecxz
jmp
in
fbstp
les
push
outs
jmp
push
mov
out
call
xchg
adc
imul
icebp
push
movs
or
jae
imul
xchg
sub
xchg
jne
mov
adc
jecxz
shl
mov
test
fadd
jg
mov
xor
icebp
push
(bad)
mov
xchg
dec
sti
sub
imul
enter
mov
cmp
jle
pop
mov
xchg
add
pop
inc
jmp
shl
ins
das
pop
mov
push
mov
mov
xchg
and
mov
int3
sar
cmps
ret
fisttp
addr16
loopne
adc
and
mov
inc
jno
mov
cld
cmps
and
jo
xor
push
pop
repz
int
aas
jbe
adc
loop
in
dec
icebp
stos
in
sar
(bad)
mov
outs
xor
push
mov
(bad)
dec
or
(bad)
stos
lahf
out
mov
push
icebp
mov
stos
jl
shr
cld
add
movs
clc
fist
cmps
mov
imul
(bad)
adc
jg
jg
repnz
adc
leave
outs
and
cmp
sti
pop
jl
clc
ja
sub
psubb
mov
shr
cmp
sbb
test
ins
xlat
pop
lock
loop
test
clc
aas
push
(bad)
fcmovbe
push
jae
cs
ficomp
dec
pop
out
add
fisttp
inc
fs
and
fidivr
lods
out
jge
mov
cmp
pop
out
push
sti
bnd
(bad)
mov
jmp
mov
dec
shr
jnp
cmp
sbb
scas
inc
add
pop
add
sub
xchg
sar
push
mov
jno
pop
dec
div
(bad)
je
enter
inc
pop
loopne
push
push
std
mov
pop
sbb
lahf
out
jmp
jae
retf
xchg
imul
xchg
or
mov
mov
inc
pop
mov
jge
inc
push
cdq
rcl
mov
lds
out
div
lock
(bad)
mov
fstp
ret
or
dec
adc
and
mov
cs
jne
(bad)
clc
scas
xchg
loope
in
test
mov
daa
mov
retf
popf
inc
pop
xchg
sub
mov
adc
mov
ja
cmp
inc
push
aas
loopne
jp
ret
jg
ds
jl
adc
shl
add
movs
sti
push
jbe
sbb
int
paddb
xchg
outs
mov
(bad)
push
sbb
ja
jmp
sub
ja
inc
jbe
fwait
pop
test
adc
xor
ficomp
inc
test
pop
mov
xchg
cwde
and
jg
push
std
jecxz
lods
jbe
fld
sbb
adc
xor
sub
lea
xchg
sub
lock
mov
out
stos
push
inc
loop
jecxz
(bad)
test
(bad)
in
sti
jae
lods
test
jmp
pop
data16
xchg
test
shl
cmc
pop
daa
pop
adc
arpl
dec
fxch
mov
jle
loope
sbb
ins
scas
xchg
add
ficom
jmp
ror
sbb
mov
test
lock
in
or
cmp
mov
ss
mov
movs
btc
pxor
add
dec
and
jle
adc
mov
mov
scas
jg
push
loop
cmps
rcl
call
push
rcr
mov
mov
pop
lfs
stos
aas
cs
mov
or
scas
mov
std
call
sti
daa
cld
cmp
repnz
dec
adc
out
fmul
movs
jnp
jl
fld
lods
adc
clc
mov
out
loop
push
jg
fistp
add
push
dec
outs
sar
out
mov
fstp
stos
inc
fcom
addr16
(bad)
in
stc
pop
ja
out
dec
(bad)
pop
imul
cmps
outs
fistp
xchg
call
or
jl
jp
aas
imul
inc
mov
ds
in
fbstp
jl
std
(bad)
(bad)
xchg
cmp
pop
fwait
data16
sahf
std
arpl
mov
xor
add
mov
mov
mov
adc
jnp
sbb
mov
mov
add
mov
stc
jae
or
cmp
imul
jg
mov
repz
jnp
aam
scas
rol
and
xor
aas
mov
loop
ins
push
into
out
and
mov
inc
jo
lods
xchg
outs
dec
jns
mov
divps
jne
retf
mov
push
das
outs
sbb
mov
leave
mov
jno
ret
cmp
jmp
fidivr
xor
in
jb
jmp
test
(bad)
in
sbb
fistp
jne
stos
jmp
aad
aaa
inc
inc
cmps
jg
frstor
jge
icebp
cmps
scas
jg
hlt
or
aam
jge
std
push
(bad)
loop
jg
ficom
aad
mov
cld
sub
or
in
xchg
repnz
into
pop
clc
sub
mov
cli
xor
shl
pop
mov
aas
(bad)
mov
cmps
js
pop
icebp
ins
aas
movd
push
stc
es
cwde
repz
iret
cmp
adc
sub
pushf
arpl
inc
shl
dec
aaa
sar
ret
gs
repnz
(bad)
sub
int3
retf
imul
(bad)
cmp
lods
call
sbb
pop
push
sub
mov
sar
push
xor
shl
inc
lds
retf
fidivr
xor
mov
xchg
jbe
test
sub
inc
xlat
jb
lods
jle
(bad)
or
jle
std
cmp
and
not
xlat
jbe
push
jmp
(bad)
in
(bad)
addr16
mov
add
stos
aaa
jg
mov
mov
out
fiadd
(bad)
mov
popf
repnz
mov
cmps
mov
dec
inc
sbb
int3
mov
xchg
pop
dec
or
mov
cmc
xlat
mov
pop
shr
bound
mov
call
in
ret
aas
dec
std
push
inc
adc
inc
push
scas
pusha
fldl2t
cld
inc
jg
stc
xchg
dec
aaa
and
fdiv
aam
mov
fbstp
add
imul
dec
(bad)
retf
lahf
push
(bad)
push
out
in
pop
icebp
sub
mov
call
lahf
test
add
in
push
sti
push
pop
fidivr
shl
cli
sbb
cli
test
repnz
mov
mov
stc
xchg
out
xacquire
cmc
scas
fsubr
pop
push
jl
icebp
push
ret
jae
jg
mov
dec
mov
mov
sbb
xchg
out
xor
clc
es
mov
adc
pop
and
push
push
das
es
daa
cmp
sar
mov
dec
xor
sahf
stc
inc
add
cwde
retf
sti
cmp
mov
iret
adc
cmc
or
icebp
jg
adc
xor
(bad)
(bad)
sbb
in
mov
imul
in
(bad)
clc
and
ds
fidivr
pusha
icebp
xor
sahf
sub
cmp
enter
enter
fcmovnb
int3
int3
stos
iret
ins
(bad)
fistp
stc
jne
ja
xchg
mov
add
loopne
in
aas
loop
or
idiv
pop
mov
jl
sbb
cmc
inc
cs
out
xor
inc
xchg
stos
daa
inc
pop
cmps
clc
mov
sahf
and
xor
push
iret
mov
clc
push
dec
mov
mov
sbb
xchg
mov
repnz
add
gs
jg
cs
jmp
sbb
xor
xor
pop
jecxz
ret
mov
xchg
mov
out
daa
mov
jge
sub
retf
addr16
fimul
fild
(bad)
scas
cmp
arpl
imul
(bad)
aas
mov
ds
push
push
aaa
ja
xor
aaa
leave
xchg
je
xchg
lds
in
movs
sti
arpl
rcr
std
xor
or
sbb
sub
xchg
inc
add
int
test
push
dec
rol
repz
clc
sub
push
sbb
icebp
pop
mov
dec
cmp
bound
das
sub
das
pop
iret
sbb
fwait
clc
imul
in
mov
sbb
div
in
push
adc
push
or
cmp
icebp
pop
inc
jle
mov
imul
fistp
clc
pop
(bad)
int
xor
repnz
bound
lock
scas
ror
add
fisttp
sbb
push
popf
pop
cld
dec
movs
mov
daa
shl
push
ins
ins
jp
(bad)
xor
leave
in
rcl
dec
repnz
xor
js
jecxz
ret
sbb
cmps
test
hlt
cmp
out
cld
das
push
aas
rol
loopne
pop
jns
data16
ds
add
adc
aas
out
outs
sbb
scas
lds
stos
sti
and
fs
dec
xchg
push
mov
int
imul
xchg
pop
pop
ret
or
jp
dec
hlt
hlt
xor
jle
jmp
cmc
sbb
sub
lods
movs
mov
leave
(bad)
popf
outs
into
push
call
mov
mov
ja
in
push
dec
sub
ds
out
sar
icebp
mov
sti
mov
xchg
neg
jle
(bad)
rcr
jl
jne
jmp
adc
pop
adc
outs
sub
adc
cli
pop
out
xchg
sub
pop
and
cmp
pop
std
stos
and
mov
inc
add
add
jp
sub
loope
test
lds
mov
sti
icebp
cmp
(bad)
cmp
repnz
cld
mov
int
jle
sahf
or
push
(bad)
lock
movs
mov
mov
les
ins
aad
std
xlat
(bad)
int
ret
mov
fisubr
mov
sub
sub
sub
inc
jecxz
or
fiadd
clc
mov
pusha
mov
shl
xchg
inc
pop
retf
retf
loop
shr
stos
add
pop
lock
enter
lock
lahf
jne
mov
pop
cmp
ret
iret
cmp
push
sar
xor
cmps
push
xor
adc
mov
(bad)
sahf
add
pop
shr
mov
popa
xlat
in
in
cmp
sub
sub
xchg
call
pop
pop
cld
cmp
mov
loope
pop
ret
test
into
movs
imul
ja
xchg
add
push
out
sub
mov
cld
(bad)
div
aas
fisttp
push
mov
ins
cs
das
adc
setg
std
jle
(bad)
mov
daa
clc
shr
out
mov
ds
and
xor
push
movs
fcmovnb
jg
cld
fsub
mov
jmp
push
repnz
xchg
xchg
sub
sbb
xchg
fcom
lds
push
cld
adc
icebp
xchg
xchg
sbb
ret
sub
in
mov
cmp
in
cli
rol
add
retf
push
add
gs
aas
repnz
xchg
outs
test
psubusb
outs
aas
test
fistp
fdiv
(bad)
out
pop
psubq
clc
dec
pop
lock
in
jmp
clc
jg
cmp
(bad)
stos
pop
pop
pop
lds
aaa
push
inc
jecxz
test
test
dec
cmps
mov
inc
xlat
cmps
jno
mov
loop
int
mov
add
popf
mov
fbstp
outs
cmps
mov
adc
inc
fidivr
test
dec
fstp
out
outs
or
ja
ja
(bad)
pop
idiv
sahf
call
pop
inc
sti
push
sub
add
fldcw
jle
jmp
ret
jbe
repnz
dec
xor
ret
scas
ins
fld
movs
ja
aam
mov
mov
dec
lock
xor
clc
dec
lods
push
mul
out
ins
stc
mov
cmps
jne
ret
dec
or
sub
shr
jg
mov
pop
mov
push
fld
inc
addr16
in
repnz
rcl
aas
xchg
mov
mov
mov
cmp
pop
loop
fsubr
inc
jne
xchg
xchg
push
clc
stos
xchg
xchg
fstp
stc
sub
add
push
aas
lea
push
imul
imul
ja
lods
sti
fwait
clc
push
jmp
ins
in
stc
jle
call
xlat
aam
cwde
(bad)
mov
sbb
mov
fwait
out
mov
xlat
jbe
mov
push
(bad)
cmc
aaa
popf
mov
aaa
jg
test
(bad)
cli
ins
or
lds
pop
inc
pop
dec
lock
jmp
inc
(bad)
push
or
pop
in
push
mov
xchg
iret
xchg
cmp
aam
imul
int3
sub
hlt
cmp
ret
pop
sub
mov
out
(bad)
out
ffreep
push
mov
stos
jl
lock
mov
dec
mov
(bad)
arpl
dec
int3
pop
or
call
cli
jle
mov
jmp
call
outs
(bad)
adc
pop
iret
adc
dec
ret
nop
jno
push
push
test
sti
jp
out
aam
push
jne
out
scas
out
fidivr
jle
icebp
add
ja
jb
imul
jb
lahf
div
neg
inc
xchg
arpl
test
in
mov
in
arpl
rol
aad
cmp
pop
lods
pusha
pop
pusha
inc
fiadd
icebp
push
jns
outs
fdivrp
fst
mov
jae
(bad)
adc
add
cld
dec
out
repnz
je
cmp
xchg
pushf
lahf
cdq
hlt
push
lahf
icebp
stos
ret
xchg
stos
stc
in
jae
lds
xor
int
pop
es
jecxz
or
add
aas
ret
out
jg
mov
jne
out
(bad)
out
jnp
mov
fistp
inc
int3
imul
and
adc
das
dec
ja
inc
add
inc
iret
pop
mov
cli
jnp
cli
out
jg
jp
xor
mov
push
mov
pop
icebp
sti
fist
push
repz
inc
das
mov
jmp
and
scas
mov
sub
dec
mov
xor
xchg
sbb
jmp
dec
push
add
push
daa
imul
xchg
mov
(bad)
adc
dec
imul
in
int3
xor
repz
fist
js
(bad)
ds
ja
js
cmc
mov
or
retf
pop
mov
(bad)
mov
pop
jg
leave
mov
sbb
repz
mov
jne
sbb
mov
inc
add
jo
scas
fidiv
pop
inc
pop
mov
(bad)
fwait
test
(bad)
pop
fisttp
jbe
sbb
jne
inc
mov
cs
and
mov
mov
adc
push
inc
fistp
aaa
jno
arpl
in
and
(bad)
mov
jbe
fbstp
jg
stos
in
sbb
jp
cmp
clc
(bad)
loope
int
in
pop
dec
jne
aad
ret
mov
cmp
and
cmps
mov
jp
fcomi
and
cmp
sub
fidivr
mov
adc
pop
jp
jmp
aad
dec
call
cdq
iret
int
out
add
(bad)
xlat
pop
je
mov
mov
mov
cmps
cdq
sbb
fmul
shr
push
or
push
scas
or
cli
xchg
out
cs
ds
jmp
sub
icebp
pop
fwait
(bad)
and
cmc
mov
mov
pusha
mov
mov
and
mov
inc
scas
push
out
mov
or
daa
jl
shl
xchg
jle
xor
sub
imul
xor
retf
loope
mov
xor
daa
imul
shl
push
jo
mov
stc
stos
(bad)
ins
mov
lods
inc
movs
shr
sti
cmp
retf
add
arpl
mov
lds
imul
and
xchg
sub
jb
lds
clc
mov
lahf
(bad)
mov
lea
test
rol
lock
div
jge
mov
in
fs
out
mov
adc
(bad)
out
sub
clc
popa
jmp
pop
xchg
iret
or
stos
jae
out
hlt
ins
daa
stc
sbb
repz
lea
pop
xchg
push
out
fnstsw
jecxz
ret
jg
imul
ss
mov
icebp
nop
shl
add
push
sar
cvtps2pd
add
cmps
sar
or
push
lea
sub
cmp
pushf
stos
sahf
aad
xadd
pop
ds
imul
xchg
cmp
mov
jmp
fimul
sti
adc
dec
imul
inc
push
cmp
jp
push
dec
mov
(bad)
xchg
retf
push
(bad)
and
mov
or
retf
jge
fbstp
repnz
and
imul
inc
loop
sar
loop
cmp
pop
sbb
(bad)
mov
xchg
sar
mov
or
push
aad
fcomp
out
cmp
in
cmp
test
fimul
mov
sub
and
inc
sti
xor
dec
aaa
das
or
cwde
push
mov
stc
aad
jecxz
ret
(bad)
pushf
xchg
dec
inc
dec
jg
test
xchg
outs
mov
stos
pop
inc
data16
sahf
xor
js
mov
shl
push
aad
cmp
iret
mov
aaa
jle
leave
(bad)
(bad)
cmp
xchg
jb
jno
repnz
in
xor
jl
dec
pop
xlat
pop
lock
jge
xor
dec
sti
jg
hlt
std
arpl
mov
loop
out
cli
add
addr16
push
ja
aad
fidiv
pop
adc
js
pop
pop
loop
jb
repz
push
adc
push
leave
lds
ja
retf
das
xchg
aaa
dec
imul
cmp
mov
hlt
push
lea
ins
jecxz
(bad)
clc
data16
pop
(bad)
out
daa
xchg
push
sar
add
pop
ret
sbb
jge
xchg
pop
pop
clc
addr16
pop
das
inc
repz
mov
sbb
stc
fwait
mov
jb
pop
in
ins
out
pop
dec
jne
test
or
test
out
push
pop
inc
icebp
jb
inc
inc
cmp
test
shr
push
xchg
ins
cmps
out
xchg
cs
lea
pop
cmps
mov
loope
add
push
mov
dec
cmps
mov
xor
scas
loope
cmp
ret
mov
lahf
or
jmp
lock
mov
cmp
push
leave
enter
pop
xor
push
iret
(bad)
sbb
retf
xor
mov
cs
and
cwde
xor
add
stos
mov
loopne
or
frstor
inc
outs
loope
das
pop
inc
rcr
cmp
pop
je
stos
jge
ror
sbb
lods
mov
stos
and
dec
sti
jb
cmp
mov
popa
repz
mov
mov
jno
xchg
or
jne
mov
je
dec
lock
push
lds
ret
fisttp
xchg
shl
and
popa
mov
push
ror
into
shr
loope
outs
sub
daa
xlat
xor
sbb
outs
adc
clc
cmp
jno
or
mov
sbb
xchg
repnz
ret
aad
sbb
adc
gs
push
(bad)
xlat
div
xchg
jmp
pop
xchg
mov
ins
cli
pop
mov
pop
dec
arpl
repnz
sub
and
lock
rcr
fimul
push
cmc
sub
xchg
(bad)
int3
icebp
xchg
fprem
xlat
nop
cld
sbb
imul
jne
repnz
les
mov
dec
loope
scas
test
fisubr
into
xchg
test
mov
xchg
xchg
or
mov
xlat
inc
dec
mov
adc
cmp
les
push
popf
js
pop
sub
or
xchg
xchg
aaa
inc
repz
mov
outs
cdq
mov
nop
cld
dec
jae
pop
xor
movs
(bad)
cmps
stos
leave
aad
dec
xor
rcr
inc
xor
xchg
movs
jl
jp
test
xchg
icebp
ins
jge
rcl
cmc
mov
xchg
les
inc
in
sar
(bad)
mov
imul
not
in
mov
outs
repz
repnz
retf
repz
inc
int
ja
frstor
out
mov
aaa
push
mov
fcomi
scas
int
popf
mov
stos
cmp
out
dec
imul
ret
push
mov
mov
jnp
jg
push
out
mov
pop
clc
push
test
(bad)
add
(bad)
(bad)
dec
jo
sbb
das
ret
arpl
in
in
push
jae
xor
cmc
arpl
jl
lock
shl
sbb
in
fdivr
jmp
xchg
outs
inc
add
es
jp
xchg
pop
sub
cld
imul
sub
dec
jnp
scas
stos
sub
sub
inc
lds
push
add
lock
xchg
ss
scas
mov
movs
xchg
lock
cmp
outs
pop
mov
xor
xchg
cmp
js
(bad)
cmp
(bad)
mov
dec
sbb
mov
push
pop
mov
pop
jmp
push
dec
push
aaa
out
jl
test
push
mov
cmp
ficomp
out
cld
stos
pop
mov
in
push
jl
mov
clc
(bad)
(bad)
ret
in
mov
(bad)
jbe
loope
jo
fwait
outs
int3
aad
xor
ja
out
aam
(bad)
and
ins
or
inc
cmp
xchg
out
pop
mov
aaa
dec
mov
inc
je
mov
retf
out
xor
mov
scas
sti
clc
xchg
aas
jbe
(bad)
pop
out
push
sub
inc
movs
es
test
fdivr
jne
or
fistp
xchg
dec
scas
in
adc
xchg
test
popf
and
ret
repnz
inc
out
pop
dec
xor
xor
in
out
push
lock
xor
aaa
out
loop
push
xchg
in
repnz
movs
jle
inc
sub
aam
ficomp
fwait
test
sti
data16
ins
jo
aad
xor
mov
push
or
mov
mov
enter
loop
xor
pop
xor
mov
ds
inc
ja
jne
call
inc
xor
cmps
pop
mov
jmp
jo
cmc
push
popf
aas
loopne
(bad)
addr16
retf
xor
shr
aas
jae
pop
out
mov
mov
mov
pop
adc
mov
push
xor
xchg
sub
(bad)
lahf
inc
push
pop
pushf
das
xchg
imul
(bad)
push
dec
repz
les
jg
scas
inc
lea
mov
push
fwait
mov
sbb
pop
mov
xor
rcl
pop
mov
out
mov
jecxz
xchg
imul
lds
inc
pushf
jnp
cs
rcr
std
jecxz
push
pop
jecxz
mov
cdq
mov
lock
mov
or
dec
and
aad
nop
mov
mov
mov
xchg
ja
cmc
pop
sub
and
push
lock
les
ins
dec
xchg
out
inc
aam
sbb
in
mov
sbb
mov
jle
mov
popa
cmps
test
ds
es
stos
xor
add
xchg
imul
out
xchg
cli
pop
lea
jne
outs
push
mov
xor
inc
jb
in
mov
pop
lods
jp
(bad)
out
mov
ret
pop
mov
test
push
ins
mov
out
imul
lahf
sub
or
(bad)
cld
or
inc
shl
mov
stos
fdivr
scas
mov
retf
aaa
add
sti
fdiv
imul
or
lods
and
sub
in
fs
out
cmp
push
mov
outs
push
pop
(bad)
adc
sub
xchg
cmps
xchg
or
sub
push
mov
xlat
push
out
add
inc
sbb
aas
xchg
sbb
mov
jae
(bad)
out
out
xor
add
fist
outs
mov
cmp
jecxz
adc
xchg
lods
outs
movs
nop
fadd
cwde
int3
ja
popa
gs
shl
jge
or
pop
ret
sbb
inc
mov
sub
call
push
repz
test
jle
inc
jecxz
cs
ffreep
sub
pop
or
dec
inc
shr
in
leave
inc
ror
fidiv
mov
mov
(bad)
ja
enter
into
test
imul
imul
scas
loopne
xchg
push
icebp
fnclex
mov
cs
jle
stos
pop
jmp
inc
xchg
sbb
inc
scas
jg
cld
and
jb
(bad)
sub
(bad)
or
xor
sub
out
or
cmp
stos
dec
mov
(bad)
pop
aam
iret
ds
cs
sar
in
cmp
cmp
clc
mov
mov
mov
mov
pop
test
sub
mov
xchg
shl
shl
out
out
out
std
and
pop
mov
ja
pusha
mov
fimul
in
fstp
(bad)
popf
mov
inc
xor
imul
inc
xchg
push
push
ins
sub
fs
inc
inc
and
repz
imul
test
out
sbb
dec
imul
iret
fisub
lahf
ja
pop
outs
push
loop
clc
fneni(8087
scas
cmp
and
jg
scas
(bad)
and
imul
test
xlat
cmp
rcr
mov
xchg
test
lods
data16
mov
mov
data16
mov
iret
(bad)
addr16
add
les
arpl
jns
fwait
inc
or
(bad)
xor
push
pop
add
xor
int3
aas
or
inc
mov
cmp
add
or
inc
sbb
ja
fstp
movs
into
out
les
mov
inc
sub
imul
movs
pop
xchg
lahf
mov
push
(bad)
jmp
jnp
jg
jbe
cmps
popf
or
xor
mov
in
mov
les
hlt
stos
jg
inc
imul
mov
adc
pop
fdivr
mov
or
xchg
jecxz
and
inc
in
cmc
hlt
xor
jl
cld
aas
lock
fnsave
pop
ret
mov
out
test
fdiv
neg
test
lods
jmp
icebp
ret
dec
sub
rcl
cwde
push
les
or
mov
fmulp
iret
dec
(bad)
sbb
lahf
(bad)
dec
push
cld
fs
mov
test
cmp
jnp
call
leave
add
out
rcr
repz
inc
sti
inc
(bad)
rcr
aam
sub
leave
out
fistp
fld
xor
daa
and
pop
data16
sar
xor
xor
sbb
shr
pop
cmp
inc
cmp
xchg
mov
jg
mov
fidivr
into
adc
cwde
pop
cmps
dec
jl
mov
repnz
mov
lods
stc
jns
je
jmp
pop
xor
jnp
xchg
in
xchg
icebp
out
(bad)
out
cmp
hlt
(bad)
push
(bad)
loop
push
clc
mov
mov
(bad)
jno
add
nop
fldcw
ds
cmc
sar
push
cmp
jg
dec
cmp
test
stos
jb
enter
xchg
cli
ret
push
mov
(bad)
hlt
stc
lods
mov
pop
das
lods
cmps
pop
mov
dec
sbb
sbb
mov
xchg
ficomp
outs
dec
pop
cmp
sti
inc
fdivr
leave
pop
xchg
out
push
data16
mov
je
push
aam
push
cmps
imul
mov
jns
mov
call
aas
pop
jle
clc
sbb
jg
cld
daa
jnp
loope
and
jnp
ss
loop
popa
mov
out
scas
daa
std
sahf
pop
(bad)
sbb
lock
push
or
push
mov
icebp
(bad)
aaa
xchg
inc
xchg
sbb
pusha
xchg
fld
mov
pop
fcmovnb
imul
mov
push
and
add
jg
(bad)
in
dec
in
fwait
adc
jmp
mov
add
cmp
pop
test
inc
jnp
mov
inc
das
(bad)
daa
or
cmps
xlat
loop
popf
lock
imul
sub
call
pop
movs
fmul
rol
pop
jmp
inc
(bad)
das
fisubr
mov
sbb
clc
inc
inc
aam
jge
or
repnz
add
and
aam
pop
xor
hlt
or
cmp
repnz
and
xchg
inc
xor
imul
fcmovu
inc
sbb
dec
sbb
ret
adc
dec
into
sub
sbb
stos
stos
jae
sbb
push
cli
pop
jecxz
add
cmp
(bad)
dec
shr
ss
mov
das
cmp
jl
add
mov
mov
in
gs
ss
pop
mov
loopne
repz
daa
sub
xchg
dec
outs
daa
jae
movs
add
xchg
aaa
cdq
cld
pop
jbe
xor
inc
sub
inc
data16
mov
xor
mov
fdivrp
(bad)
mov
outs
out
mov
or
dec
fistp
inc
sbb
mov
add
push
inc
push
adc
psubb
int
pop
loop
fst
and
retf
scas
mov
icebp
push
daa
icebp
imul
das
retf
test
mov
shl
pushf
call
in
gs
mov
retf
mov
out
push
ja
in
pop
dec
pop
mov
mov
std
fdivr
out
scas
repz
mov
fidivr
arpl
push
xchg
fistp
les
add
in
pop
scas
jae
cmp
les
jl
adc
outs
scas
fld
fmul
mov
xor
mov
outs
lods
and
xchg
inc
retf
jb
dec
jbe
rcr
js
out
ds
mov
scas
cmps
mov
outs
out
loop
jle
(bad)
popa
mov
(bad)
aas
xor
(bad)
xchg
jg
stc
jg
scas
mov
cdq
daa
cdq
inc
jl
mov
mov
mov
jg
popf
out
mov
movs
loop
aaa
mov
jg
fiadd
stc
ret
out
in
stc
inc
push
out
out
scas
int3
jnp
retf
jge
or
ret
mov
xor
stos
lods
sar
cmc
cmps
out
aas
xor
mov
fcomi
out
stc
test
add
ins
gs
inc
dec
mov
out
jmp
ja
push
(bad)
mov
fiadd
jnp
stos
sbb
stc
aam
jmp
retf
add
mov
stos
enter
in
idiv
stos
jl
lods
sbb
push
ficom
imul
je
scas
mov
in
lods
clc
ror
mov
aam
imul
sbb
aad
ret
out
jg
push
pop
psubb
cld
aas
fucomp
push
retf
ja
xor
jae
cwde
ds
loop
lods
fbstp
mov
imul
mov
fsub
ins
mov
sub
das
outs
(bad)
or
clc
test
jg
xor
inc
hlt
rcl
outs
inc
jnp
jge
xor
jne
hlt
sbb
fidivr
lods
(bad)
ficomp
dec
sbb
das
loop
imul
sub
mov
pop
mov
daa
mov
jg
ss
test
and
addr16
push
or
(bad)
icebp
neg
cmp
jnp
jge
xchg
clc
mov
lock
mov
pop
pusha
sti
jge
idiv
add
mov
cs
ja
loopne
cwde
inc
xor
jmp
sahf
lahf
xchg
repz
mov
jno
xor
jp
test
inc
loop
push
inc
cmp
ins
xor
pop
mov
jo
arpl
in
ds
test
fucomip
adc
sub
je
fstp
leave
aam
outs
adc
inc
test
sub
lahf
(bad)
mov
lea
loopne
mov
rcr
pop
lds
int3
cmps
imul
out
jle
cwde
std
loope
cmc
jae
clc
aaa
jg
jl
shl
jbe
aas
or
pop
inc
xor
pop
or
add
jne
jnp
pop
sub
jle
jnp
repz
xchg
test
imul
mov
inc
pop
xchg
daa
test
push
xchg
(bad)
lahf
test
jge
aas
fldl2t
add
sbb
leave
jmp
sbb
fstp
xchg
inc
popa
mov
iret
inc
aad
dec
and
das
not
fild
jl
aad
cmp
icebp
add
lods
mov
inc
mov
jns
ret
jne
bound
test
sub
adc
lock
ret
lock
and
daa
ins
cs
aam
scas
cld
dec
and
xor
and
in
and
jne
mov
mov
stos
lea
jg
icebp
(bad)
out
fisttp
cld
cmp
mov
(bad)
movs
scas
lahf
bswap
push
not
pop
dec
cmps
xor
js
push
jmp
mov
(bad)
lea
adc
jbe
xor
ins
and
popa
stos
retf
aaa
mov
jmpw
test
mov
push
je
or
dec
icebp
push
xchg
(bad)
loop
in
sar
div
mov
jp
inc
xchg
inc
mov
mov
outs
sti
pop
sti
push
les
in
push
nop
stos
addr16
outs
cld
sub
or
pop
ins
scas
dec
out
scas
push
adc
(bad)
xlat
mov
scas
mov
mov
fwait
les
call
imul
push
jno
iret
push
jecxz
jbe
out
push
dec
out
outs
adc
fistp
sub
mov
sub
movs
cmp
in
loope
ffree
dec
mov
or
jae
lods
imul
xchg
dec
inc
imul
xchg
jmp
lock
pop
jnp
push
ret
xchg
lahf
pop
xor
xchg
gs
je
retf
jno
nop
test
iret
push
lods
hlt
fistp
jbe
sub
out
push
in
retf
cmc
mov
cmp
popa
arpl
ins
retfw
dec
lock
mov
xchg
dec
outs
outs
loop
sbb
ja
xor
sbb
(bad)
das
ds
jl
(bad)
mov
and
dec
jns
sub
pusha
adc
xchg
xlat
ds
jmp
push
fidiv
icebp
jbe
xor
push
retf
xchg
stc
pop
mov
js
loope
mov
mov
pop
mov
sbb
mov
shr
fcmovbe
out
push
and
and
addr16
push
ret
(bad)
fdiv
inc
add
icebp
sub
pop
mov
mov
(bad)
xchg
xor
ds
test
loope
loop
inc
shl
jbe
ins
mov
fs
xchg
mov
and
bnd
dec
(bad)
aas
mov
or
xor
call
int
adc
pusha
sbb
int
push
and
dec
sahf
es
push
fimul
out
ret
jb
fidivr
into
imul
inc
repz
jnp
push
mov
jmp
pop
xchg
pop
imul
rol
and
loopne
adc
add
mov
into
xchg
mov
mov
mov
(bad)
push
aas
fst
ret
xor
pop
inc
jne
sub
cmp
lea
jnp
movs
jp
out
idiv
test
js
ffreep
xlat
pop
mov
lds
in
mov
imul
jns
jae
sub
xchg
inc
dec
repnz
or
fdiv
push
call
cld
pop
(bad)
mov
add
out
fucomip
aam
and
dec
je
sbb
scas
xchg
inc
iret
xor
fwait
inc
sbb
lods
mov
jge
jge
adc
cmps
xor
xchg
lods
jb
cwde
pop
in
mov
stc
mov
cld
ror
(bad)
cld
sub
dec
mov
pop
xchg
pop
retf
mov
and
xchg
jb
sbb
xchg
ins
jns
(bad)
aad
jecxz
das
loopne
jp
mov
jg
push
retf
imul
(bad)
adc
(bad)
adc
fucom
test
lock
sbb
sahf
jo
jmp
stos
sub
add
into
sub
pop
sub
in
sub
pop
inc
dec
jne
jl
lods
pop
jge
fidiv
out
mov
ins
sub
stc
in
pop
sti
arpl
fldcw
out
cld
dec
cmp
gs
push
aaa
retf
ins
mov
imul
push
mov
(bad)
out
pop
or
ficom
sti
fst
push
aam
sub
hlt
inc
cmps
outs
xchg
push
out
push
jnp
in
mov
ds
mov
fbstp
out
add
pop
sub
out
mov
mov
mov
rep
cmps
mov
jnp
jl
test
ja
repz
xchg
jae
mov
mov
fdiv
inc
mov
data16
neg
out
dec
xchg
test
stos
sub
retf
rcr
ja
pop
xor
imul
inc
scas
push
mov
cwde
inc
ret
cld
sub
mov
jmp
sbb
jge
pop
mov
into
mov
xor
outs
sti
mov
inc
mov
out
aas
xor
sti
mov
xchg
mov
cwde
mov
neg
in
les
(bad)
out
outs
(bad)
jmp
enter
dec
mov
btc
jmp
stos
stos
jno
jnp
jl
in
(bad)
(bad)
jmp
sar
mov
(bad)
idiv
or
sub
ds
stos
(bad)
cmc
sbb
push
sub
mov
(bad)
mov
mov
cmc
inc
mov
push
pop
fnstsw
outs
fidivr
mov
imul
fwait
dec
retf
push
pusha
pop
imul
fisubr
sbb
mov
test
shl
dec
loop
in
mov
push
aaa
(bad)
aam
fild
in
fisttp
xchg
inc
push
call
jns
cmc
push
ja
idiv
int
(bad)
jecxz
outs
sti
out
xchg
(bad)
cli
out
mov
pop
push
jae
imul
jmp
sub
aam
xor
aad
cmp
stc
mov
das
popa
test
sti
mov
sti
push
push
int3
sti
ffreep
repz
jl
in
inc
and
sbb
xor
vrcpps
mov
fisubr
xchg
out
jmp
das
ficomp
test
(bad)
idiv
push
fs
aad
xor
int
cmp
jl
(bad)
std
fcom
sti
out
or
mov
add
aaa
int3
aas
(bad)
add
jb
add
jmp
loop
mov
fld
cmp
xlat
popf
(bad)
xlat
rcl
jl
stos
test
aam
xchg
out
fwait
jbe
xchg
push
mov
out
stos
es
aam
fbstp
sti
cmp
das
aas
jns
lods
and
sbb
jb
sub
das
fwait
outs
(bad)
cmp
jle
cmc
xor
arpl
inc
xchg
sbb
hlt
cmps
dec
daa
icebp
aaa
retf
out
push
fcomp
dec
xchg
mov
fbstp
aaa
icebp
jge
lods
xchg
pop
mov
xor
test
sub
(bad)
cmp
mov
cwde
jbe
in
stos
in
push
(bad)
out
jg
call
ret
push
dec
fdiv
mov
loop
repz
lods
cs
(bad)
cld
es
xor
ds
inc
jmp
jle
(bad)
inc
aas
mov
add
int
fistp
cli
mov
lahf
lock
xor
daa
cld
mov
sbb
and
sbb
call
sbb
xchg
icebp
sbb
and
movs
xchg
outs
adc
xor
xor
mov
push
inc
pop
jnp
mov
(bad)
jno
lods
imul
out
in
jg
call
pusha
jge
pop
ror
popa
pop
fbstp
xchg
cdq
jmp
out
push
data16
push
out
jg
mov
ret
jbe
into
cmp
das
xchg
mov
inc
push
cmp
test
sahf
push
sub
movs
fild
add
push
sar
out
cmps
mov
(bad)
sub
pusha
shr
ss
retf
neg
out
idiv
pop
jbe
imul
pushf
jbe
aas
loope
fwait
out
mov
dec
mov
jae
push
(bad)
cmp
outs
mov
mov
sbb
arpl
xchg
sahf
fcomp
fist
mov
xchg
bound
shr
int
sub
sar
iret
sbb
js
push
icebp
movs
mov
jno
push
xchg
adc
sub
stos
pop
ds
jecxz
out
(bad)
jne
cmp
out
jmp
pop
out
sub
and
mov
call
retf
cmp
push
mov
dec
icebp
cmps
xchg
test
ficomp
fild
pop
repz
(bad)
and
fist
lods
fdivr
js
loop
adc
push
pop
cmps
fidiv
sbb
cmps
inc
inc
or
icebp
xchg
sbb
add
pop
xchg
lods
cld
dec
adc
inc
inc
adc
in
aam
out
mov
and
pop
int
lock
pop
push
pop
loopne
out
mov
mov
fist
lea
fidivr
xor
push
dec
pop
in
jno
inc
fs
xor
pushw
sub
xor
lahf
jmp
icebp
xor
pop
scas
ss
sti
ss
mov
mov
cmp
scas
inc
(bad)
adc
dec
stos
sub
out
fstp
inc
sub
jg
stos
(bad)
xchg
mov
push
mov
imul
xchg
movs
iret
mov
push
xor
cmp
test
loop
jbe
jg
cmc
inc
dec
mov
mov
je
pop
mov
clc
or
and
jp
sbb
lods
push
cmp
cmps
pop
cld
shl
stc
xchg
inc
push
popa
xchg
bound
or
in
dec
xchg
pop
jmp
pop
leave
jnp
mov
nop
mov
sbb
dec
sbb
mov
mov
push
aas
xchg
pop
aad
mov
mov
arpl
in
mov
xchg
int
test
mov
mov
clc
mov
jne
(bad)
fidiv
sti
cmps
xchg
fst
mov
jle
pusha
pushf
loope
mov
mov
ins
(bad)
pop
jnp
xchg
stc
dec
sub
fs
pop
xor
push
xchg
push
aas
xchg
xchg
jg
inc
cmps
dec
mov
in
pop
xor
ret
aas
(bad)
adc
cld
aaa
shr
test
retf
out
les
fld
fsub
lods
push
ret
fist
scas
lods
push
mov
dec
aad
sub
add
xchg
es
mov
dec
pop
push
je
fidiv
mov
out
fiadd
(bad)
sub
push
ins
test
push
imul
test
in
xchg
jns
test
sbb
stc
fwait
test
jmp
mov
pop
fstp
or
dec
and
adc
pop
cmp
mov
mov
pop
xchg
jecxz
add
rcr
iret
or
stos
and
cmp
daa
cwde
xchg
movs
sahf
push
je
dec
xchg
jg
or
lfs
imul
in
mov
add
jo
aas
cs
repnz
mov
sti
push
jg
pop
jmp
sub
or
xchg
in
fidivr
pop
test
cwde
and
int
mov
jmp
adc
sub
iret
mov
ins
outs
push
jmp
jl
add
ss
mov
fidivr
pop
ret
(bad)
cmp
xchg
pop
mov
loop
test
adc
cmp
jge
stc
imul
aas
add
ins
push
out
in
(bad)
sti
inc
fcmovu
inc
and
mov
xor
pop
in
push
mov
push
mov
push
adc
gs
xchg
push
rcr
xchg
jne
push
retf
pop
xchg
out
dec
mov
dec
fcom
xchg
shr
dec
jmp
mov
movs
push
mov
jns
mov
dec
js
stos
fstp
lods
(bad)
jno
test
xor
xchg
cwde
ins
leave
popa
bnd
or
xchg
fisub
xchg
loop
scas
xchg
std
mov
dec
mov
push
out
jns
arpl
(bad)
jg
jbe
mov
fisttp
imul
dec
jns
cmp
fmul
add
leave
or
nop
inc
arpl
xchg
pop
mov
outs
in
mov
inc
sbb
fst
add
ss
mov
fsubr
into
adc
cmps
out
dec
mov
daa
loop
mov
pop
fnstcw
jmp
mov
xor
es
cmp
jno
mov
aas
loope
push
fsubr
outs
movs
lods
(bad)
imul
stc
sar
out
xor
stc
jb
jl
fcomp
divps
sar
push
mov
push
mov
es
adc
retf
sbb
jle
aad
mov
jns
jmp
repz
mov
sbb
dec
mov
popf
pop
mov
ins
dec
inc
popa
frndint
pop
aam
sub
sbb
paddsb
adc
pop
fiadd
stc
pop
adc
push
sub
jg
mov
pop
jecxz
push
pop
aam
dec
sti
pop
push
hlt
and
jbe
test
xchg
jl
jp
loop
aaa
xor
outs
mov
iret
mov
dec
in
loop
repz
out
call
pop
sahf
popf
xor
imul
xor
mov
and
mov
rcl
cwde
loope
mov
mov
inc
addr16
mov
out
ror
sbb
leave
cmp
in
or
and
adc
div
push
fwait
lods
sbb
and
mov
(bad)
sbb
(bad)
int
out
mov
mov
in
les
sub
inc
and
mov
mov
dec
mov
or
(bad)
in
mov
add
and
pushf
in
(bad)
(bad)
rol
xchg
jbe
out
jmp
mov
lock
push
imul
xor
movzx
dec
addr16
jns
sub
xchg
stc
mov
jecxz
push
pop
mov
push
mov
sub
repnz
cmp
xor
js
enter
test
inc
mov
in
cmp
sbb
in
cli
aad
sbb
ins
and
mov
xchg
stc
int3
ds
jns
lahf
outs
mov
cmp
mov
ja
imul
fwait
jmp
cmp
mov
sbb
pop
fwait
call
fwait
stos
pop
inc
add
stc
leave
or
inc
sbb
bound
loop
mov
cmp
(bad)
int
adc
pop
fs
pop
std
mov
retf
jo
test
shl
idiv
test
(bad)
inc
inc
mov
sti
(bad)
push
mov
or
push
movs
in
or
jl
jns
mov
sub
popa
aaa
fld
(bad)
shl
arpl
out
inc
mov
adc
sbb
xchg
nop
mov
shl
clc
adc
out
mov
pop
sub
push
xchg
mov
in
mov
ret
retf
(bad)
out
ins
inc
sbb
and
sbb
fcom
shr
imul
out
adc
pop
idiv
add
jnp
add
call
push
and
jns
clc
addr16
xchg
mov
xchg
push
imul
jo
pop
xchg
dec
mov
fiadd
mov
mov
frstor
fisub
dec
inc
pop
pop
jge
popa
push
(bad)
stos
dec
adc
ins
stc
xor
xchg
movs
jbe
mov
xor
sbb
mov
fmul
repz
mov
(bad)
xor
inc
pop
jge
push
je
push
push
gs
inc
push
ins
pop
mov
(bad)
lock
cli
adc
addr16
sub
jae
(bad)
jp
out
cli
in
mov
lods
imul
repnz
sbb
stc
push
cmp
outs
push
cmp
xor
sahf
xor
in
mov
jnp
pop
stc
push
pop
xor
sbb
test
scas
inc
outs
sbb
push
imul
movs
fcmovu
ja
mov
das
int
dec
iret
fwait
loop
mov
mov
hlt
xchg
sub
stos
inc
(bad)
fs
cld
add
pop
sub
xchg
push
jmp
sar
cmc
retf
sti
pop
jno
fisttp
aad
mov
sahf
je
out
not
add
(bad)
and
(bad)
clc
jle
aad
movs
clc
sbb
push
imul
mov
(bad)
repz
cmp
push
xor
cld
aad
fisubr
mov
pop
sub
sub
(bad)
ret
and
xchg
mov
jmp
pop
retf
or
not
cwde
loop
fs
mov
fstp
shl
in
mov
mov
xchg
push
mov
jne
adc
cmps
mov
retf
xchg
(bad)
repz
sub
les
mov
mov
and
loop
cmp
sub
jg
cmp
out
mov
sbb
pop
xchg
into
jbe
dec
arpl
and
mov
pop
cs
out
sbb
js
sub
ins
ins
data16
fisub
ror
mov
add
push
fsubr
call
mov
mov
fnsave
mov
pop
mov
mov
jp
mov
xor
lods
jbe
test
aam
loope
imul
fstp
test
inc
sbb
xchg
mov
mov
xlat
loop
lahf
jno
jns
mov
push
in
cdq
push
fiadd
loope
xor
pop
fdiv
fadd
and
stc
sbb
mov
sahf
mov
mov
leave
jne
retf
outs
xchg
fist
outs
push
out
div
xchg
jg
inc
pop
sbb
scas
adc
hlt
sbb
mov
stos
fisttp
mov
push
outs
mov
(bad)
cmp
out
(bad)
outs
jmp
outs
cdq
dec
test
shl
mov
shl
cmp
loopne
cdq
inc
or
fdivrp
loope
enter
mov
int3
cmp
iret
cld
jnp
iret
scas
jle
lea
rcr
jmp
adc
imul
cmp
jae
(bad)
lock
adc
sbb
popf
fnstsw
shl
push
cmc
jg
hlt
aad
out
ja
outs
xchg
adc
sub
out
lahf
jle
daa
pop
mov
in
fmul
je
push
xchg
xchg
lods
aaa
or
jae
and
and
inc
jl
pop
retf
push
mov
popf
cmp
cmp
cli
cld
mov
push
inc
into
jecxz
mov
ins
outs
xchg
xchg
jno
scas
ds
(bad)
lock
mov
push
pop
repz
cld
aad
nop
cmps
cli
push
sbb
aad
test
jmp
(bad)
imul
mov
mov
icebp
hlt
adc
data16
pop
out
ficomp
push
sub
mov
pop
mov
mov
stos
mov
(bad)
cmp
cmp
sar
stc
(bad)
and
inc
xor
inc
sbb
stc
mov
clc
push
mov
pop
xchg
out
outs
xchg
pop
push
adc
mov
js
ret
xchg
mov
xor
sbb
xchg
jbe
sar
retf
xchg
push
mov
imul
or
icebp
cmp
mov
fistp
lods
pop
fild
pop
xor
dec
idiv
sbb
sbb
push
push
jecxz
fist
clc
xchg
scas
(bad)
std
cmps
sub
mov
fcmovu
inc
adc
mov
sub
add
push
dec
test
push
js
ret
pop
not
jno
repnz
dec
adc
addr16
pop
arpl
jne
pop
pop
cmc
mov
mov
fucomi
out
ret
mov
add
or
cmp
outs
(bad)
and
jmp
ss
lea
mov
push
dec
xchg
push
ds
gs
aad
pop
sti
aad
mov
daa
pop
js
pop
mov
or
or
xor
fucom
mov
stc
jmp
mov
mov
pop
sbb
mov
nop
int
cvttps2pi
movd
(bad)
cdq
jnp
and
jno
mov
xchg
dec
stos
out
enter
jg
aaa
cmp
aas
data16
inc
lahf
mov
inc
and
dec
xor
movs
(bad)
jle
jp
pop
inc
push
jbe
and
mov
jecxz
sub
mov
fcmovne
mov
cmps
xchg
sbb
cmp
and
sub
nop
fstp
mov
mov
mov
inc
cmp
inc
mov
sti
out
pop
ficomp
and
retf
ficomp
out
jo
popf
cmps
lods
mov
push
fcomip
cmp
dec
icebp
inc
cmps
mov
les
test
dec
xchg
pop
and
jg
mov
scas
xor
or
call
fidivr
xchg
fidiv
and
out
js
cs
neg
jnp
lea
pop
shr
xor
scas
and
lahf
es
test
loopne
fwait
movs
clc
mov
inc
addr16
leave
test
push
gs
mov
xchg
mov
xor
dec
xor
pop
adc
cli
movs
aad
test
sahf
pop
leave
test
lods
inc
aad
shl
push
aad
addr16
xchg
mov
clc
sqrtps
fimul
in
jmp
jg
sar
xor
icebp
call
xchg
mov
mov
lds
ror
enter
mov
adc
not
pop
inc
jne
jno
ins
(bad)
mov
pop
xor
pop
sub
idiv
addr16
cs
dec
mov
scas
mov
ss
lods
scas
sbb
outs
repz
push
pop
jbe
push
fisubr
xchg
cs
mov
out
sub
dec
push
fsubr
pop
outs
(bad)
mov
in
sub
xchg
int
sub
xor
push
dec
test
jmp
add
push
pop
dec
loop
lea
addr16
mov
lea
pop
out
pop
xchg
inc
sahf
inc
retf
repz
imul
xor
sahf
mov
jle
stos
imul
jne
popf
push
ret
pop
dec
sub
bound
arpl
nop
sti
mov
aaa
jl
ret
and
lods
mov
loope
hlt
retf
dec
adc
repnz
push
add
jecxz
bound
sti
mov
jne
js
dec
shr
ds
jnp
in
fsubr
retf
addr16
(bad)
push
xor
jns
pop
loop
mov
out
std
fcomp
add
ds
ins
push
or
mov
leave
inc
dec
jecxz
mov
dec
jge
sbb
xchg
push
xchg
add
shr
jl
(bad)
fadd
sub
(bad)
mov
cmp
lea
mov
jmp
jle
lds
fnstenv
in
cmp
es
push
ins
aaa
(bad)
in
push
sub
dec
xor
mov
(bad)
mov
push
push
xor
aaa
push
addr16
jne
int
ficomp
(bad)
(bad)
push
int
dec
mov
jne
fs
mov
rol
push
mov
jmp
dec
je
xchg
out
push
cmp
rol
outs
mov
xchg
(bad)
(bad)
jecxz
mov
jmp
out
mov
cdq
pop
in
icebp
adc
neg
push
lods
(bad)
and
imul
fwait
add
jno
xor
call
into
jbe
enter
neg
addr16
in
in
arpl
nop
inc
inc
int
je
mov
lds
aaa
in
push
mov
sbb
jmp
xor
loope
mov
(bad)
lods
pop
jmp
lds
fisub
xor
int
(bad)
push
pop
mov
ds
sahf
mov
fldl2t
jp
mov
cmps
fsubr
rcr
inc
ja
lods
xor
jo
sbb
repz
test
shl
out
fucomi
mov
clc
mov
sahf
addr16
mov
push
aaa
sbb
stos
mov
call
outs
and
mov
sbb
add
and
sti
sahf
fcomp
lds
pop
leave
inc
push
ds
dec
sub
jp
cdq
aad
aas
loop
sti
jnp
add
imul
movs
pusha
and
out
loopne
jno
inc
mov
mov
sub
ins
jnp
fndisi(8087
sub
mov
push
or
jbe
pop
repz
fs
cld
mov
ror
fisub
pop
pop
fdiv
and
pop
add
sbb
mov
add
mov
mov
idiv
dec
xlat
sub
shr
and
in
mov
push
dec
rcr
(bad)
les
xchg
int3
push
mov
sbb
mov
sbb
lds
in
aaa
xchg
(bad)
and
mov
pop
out
hlt
stos
push
sub
popf
and
popf
cmps
enter
or
mov
neg
into
loope
mov
sub
mov
shl
mov
sub
sub
fucomip
cmp
xchg
lods
das
jae
jg
mov
in
mov
xchg
cmc
mov
adc
in
imul
pop
cwde
sub
outs
aad
lods
mov
cmc
test
add
into
jmp
mov
pop
not
xchg
sbb
push
retf
and
mov
test
shl
outs
mov
aas
call
pop
dec
(bad)
retf
add
push
ds
inc
jno
stc
push
loop
jmp
pop
mov
and
aaa
out
pop
fnstsw
xor
sub
clc
push
jecxz
shr
xchg
sub
shl
jbe
dec
les
test
jecxz
loopne
retf
mov
js
push
aam
or
stos
pop
leave
retf
adc
ins
add
push
jne
sbb
loopne
int
dec
mov
in
push
into
adc
into
lea
enter
jo
pop
dec
lea
fmulp
arpl
outs
push
inc
dec
dec
outs
rcr
cmp
out
jns
std
out
vpaddw
push
xor
shr
fldcw
or
sub
mov
pop
out
and
jnp
and
je
mov
sahf
mov
push
inc
sbb
test
enter
repnz
iret
int
imul
lods
arpl
pop
fwait
xchg
imul
sub
cld
mov
(bad)
test
mov
loopne
and
and
(bad)
inc
xchg
and
and
stos
jae
in
jmp
jg
jmp
js
push
icebp
push
movs
loop
cmp
cs
inc
dec
mov
inc
mov
jb
xor
jmp
push
lods
jl
test
lods
pushf
jmp
xor
sub
dec
call
ja
jecxz
retf
pop
std
mov
push
repnz
ins
scas
xor
adc
xchg
mov
(bad)
mov
jnp
lds
fisttp
in
inc
pop
imul
pushf
scas
inc
sti
cmps
stos
push
lods
xchg
dec
leave
or
dec
scas
or
jp
xchg
pop
ja
or
(bad)
and
xchg
xchg
lods
inc
inc
mov
ja
xor
loopne
xchg
and
fldenv
jmp
leave
imul
out
(bad)
or
enter
popf
push
fist
jl
inc
pop
out
std
and
mov
or
div
add
retf
int
or
or
xlat
not
jb
pop
in
popf
sbb
mov
loope
jbe
cld
xor
mov
push
(bad)
sub
inc
imul
retf
int
and
arpl
and
cmp
jmp
and
outs
test
sub
stos
mov
sbb
adc
sbb
pusha
test
mov
ss
sbb
(bad)
test
mov
stc
sub
and
jl
bound
jmp
pop
jmp
push
stos
jno
int3
mov
sub
jle
sbb
movs
fs
xchg
test
in
outs
pop
jl
mov
cmc
push
adc
fs
adc
xor
jne
sub
xchg
jno
add
ss
mov
mov
cmp
xor
mov
stos
jg
sub
outs
icebp
mov
and
icebp
pop
inc
movs
add
data16
dec
sbb
lods
out
push
js
push
sar
mov
call
shr
outs
test
pop
arpl
xchg
pop
xor
retf
imul
mov
in
ficomp
(bad)
mov
jne
xor
push
mov
fidivr
push
inc
retf
ret
scas
sbb
pop
jns
movs
jns
cld
mov
(bad)
jnp
fmul
push
aas
pop
scas
pop
sbb
into
or
jmp
stos
jg
out
cmp
int
mov
jecxz
cmps
stc
lahf
das
int
pop
push
mov
into
fsin
imul
out
push
std
mov
cld
ret
dec
jmp
clc
cmp
stos
dec
test
mov
push
inc
jl
(bad)
int3
js
stos
aad
mov
adc
gs
clc
mov
jmp
inc
scas
mov
mov
pop
retf
in
mov
or
mov
push
xlat
cmp
mov
fst
out
jmp
out
push
push
addr16
faddp
inc
lods
adc
sahf
mov
clc
retf
mov
lahf
mov
mov
dec
mov
mov
(bad)
pop
xor
(bad)
mov
cmp
mov
(bad)
mov
sub
inc
mov
fistp
in
out
jecxz
jl
imul
out
mov
imul
pop
call
fild
int3
(bad)
gs
iret
xchg
div
jmp
mov
pop
xor
test
enter
dec
push
xchg
pop
sub
call
xchg
sub
sbb
xchg
xchg
pop
add
push
ja
mov
cs
xchg
mov
stos
ja
xchg
scas
jno
xchg
jmp
movs
fisttp
std
movs
mul
mov
or
in
fdiv
ds
aad
jmp
leave
addr16
frstor
xchg
mov
xchg
leave
or
loope
cwde
cld
mov
cmp
int3
sti
int
mov
mov
adc
sub
mov
mov
into
jmp
out
movs
jmp
mov
aaa
stos
outs
cmp
pop
inc
imul
stc
xchg
or
mov
ds
dec
mov
call
mov
pop
push
lds
xor
push
sbb
fnstenv
xchg
jp
pushf
pop
std
pushf
push
test
sti
pop
fisubr
test
jns
shl
jb
xchg
ret
cli
ins
int3
push
xor
cdq
cmp
push
fcomp
(bad)
dec
fs
pushf
push
js
sub
pop
sti
push
mov
dec
pop
sbb
test
daa
out
jecxz
nop
inc
adc
jno
fdivp
jmp
pop
out
rcr
bound
push
retf
and
fwait
call
cmc
cmp
jbe
repz
sbb
je
test
jo
mov
push
(bad)
int
mov
sbb
mov
into
(bad)
dec
retf
repz
pop
aad
(bad)
mov
(bad)
out
fst
mov
dec
jns
ja
(bad)
gs
xchg
ins
lds
jnp
mov
push
ss
test
loop
out
cmp
test
xor
cmps
mov
(bad)
cmp
dec
retf
scas
push
mov
jnp
neg
out
jmp
outs
stc
push
cmp
cmp
add
push
dec
cmp
ins
das
in
inc
out
ror
add
sub
mov
aas
mov
cs
gs
les
xor
and
and
scas
xor
pop
jnp
add
mov
inc
fidiv
cld
stos
aam
out
out
mov
call
aaa
sar
jmp
not
and
iret
mov
retf
xchg
pop
add
jmp
lahf
fldz
and
ret
fwait
mov
outs
fidiv
out
push
mov
imul
lods
cmp
pop
fstp
xor
or
daa
retf
adc
cmc
fwait
jmp
mov
and
dec
movs
in
push
aam
pop
mov
add
mov
das
xor
pop
sahf
jg
ins
and
(bad)
mov
mov
scas
icebp
aaa
dec
(bad)
(bad)
div
push
outs
call
movs
fwait
mov
pop
iret
add
scas
into
(bad)
and
es
adc
lock
xchg
mov
sbb
shr
lahf
leave
pop
sub
cld
mov
dec
xor
fidiv
mov
(bad)
idiv
outs
mov
cmps
fst
fiadd
jmp
xchg
stc
dec
das
idiv
int3
(bad)
xlat
(bad)
mov
sbb
gs
inc
outs
imul
arpl
xchg
inc
or
xchg
dec
je
out
fsubr
daa
xchg
lods
mov
mov
xor
and
sbb
push
mov
jl
imul
mov
pop
pop
lea
fisubr
(bad)
sar
mov
repz
in
out
mov
push
ds
mov
jg
dec
push
popf
loope
cld
mov
mov
dec
push
jg
xor
push
repz
push
pop
push
push
mov
call
add
cmps
clc
fisttp
shr
push
jmp
dec
shl
jbe
(bad)
mov
jecxz
jge
mov
std
in
fild
mov
enter
pop
push
fwait
pop
jmp
mov
leave
adc
jo
outs
mov
ret
leave
(bad)
loope
sbb
xchg
cmp
fld
pop
inc
retf
leave
add
and
ja
fisttp
aaa
jmp
sti
push
lock
jp
(bad)
jo
fcomp
add
and
arpl
sub
and
fbstp
leave
xor
xchg
jae
bound
cmp
(bad)
adc
mov
cmps
lods
(bad)
imul
cld
ret
xor
ins
adc
dec
ins
push
repz
xchg
int
mov
mov
dec
and
leave
and
push
xor
loope
cmp
call
add
fiadd
push
ins
or
outs
pop
aam
mov
in
fld
mov
loopne
sbb
mov
retf
dec
inc
mov
imul
adc
sahf
addr16
in
outs
cmp
outs
mov
jecxz
sahf
out
(bad)
and
inc
lahf
xchg
retf
sub
mov
cmp
lods
(bad)
xlat
neg
pushf
ins
fs
scas
test
lahf
fldl2e
leave
sti
(bad)
stc
cdq
mov
aaa
cdq
xor
cld
aad
shl
call
ins
jecxz
add
imul
mov
daa
ficomp
fistp
das
test
mov
ja
aam
int
lods
lea
inc
outs
clc
and
mov
rol
cmc
out
push
inc
addr16
cmps
leave
gs
and
mov
shl
jle
jge
mov
(bad)
mov
mov
pop
pmaxub
pop
push
push
mov
mov
push
pop
mov
aam
dec
call
adc
rcr
es
mov
pop
xchg
test
xchg
mov
push
cmp
(bad)
mov
shl
sbb
or
loop
xlat
scas
aaa
test
pop
mov
fild
fistp
push
xor
popf
dec
push
scas
fdiv
mov
xchg
mov
mov
push
jns
(bad)
ss
stos
ins
mov
fidivr
jb
(bad)
jne
adc
movs
mov
mov
sub
mov
sub
sahf
loop
in
stos
lods
xlat
add
jge
jne
aas
or
addr16
repz
sub
cmc
push
mov
aam
aam
call
sub
imul
fwait
retf
sbb
shr
ins
mov
fidiv
js
shl
stos
inc
jno
pop
aad
push
rcl
sub
int
into
pop
jmp
outs
and
dec
ror
mov
test
into
pop
les
(bad)
ins
jg
mov
into
(bad)
jo
(bad)
(bad)
push
fisubr
sub
dec
fidivr
or
xchg
je
movs
stos
inc
xchg
out
addr16
cs
inc
das
sar
retf
loop
push
jae
test
xchg
out
lahf
ins
xlat
mov
ins
in
sbb
imul
xor
sbb
(bad)
mov
ret
fstp
nop
mov
push
(bad)
out
iret
imul
jbe
cwde
gs
inc
cmc
jle
stc
jb
xor
int3
std
add
xlat
inc
xor
mov
and
sbb
jmp
imul
les
mov
out
enter
add
ret
daa
lock
aaa
or
inc
fwait
mov
xlat
iret
inc
or
(bad)
retf
inc
jecxz
jno
imul
xchg
repnz
aam
jmp
shl
ja
aad
xor
repnz
retf
jg
sub
jle
jbe
sti
lods
fidivr
out
adc
sub
xor
cs
mov
test
mov
jno
jp
test
ffreep
(bad)
cmps
lock
xchg
sub
stc
inc
cmp
jl
cdq
mov
mov
call
mov
not
imul
cmp
push
stc
jle
or
aaa
retf
mul
cld
sub
lock
push
inc
fimul
mov
pop
out
call
outs
sti
mov
push
stc
sbb
adc
out
pop
cmc
sbb
in
imul
push
pop
xor
jp
fild
ja
inc
cmp
ss
sti
push
xchg
mov
outs
sti
out
mov
stc
mov
mov
mov
mov
aaa
ds
xlat
retf
int
pop
adc
push
jle
pop
stos
jns
mov
sbb
mov
ficomp
dec
je
bound
stc
mov
mov
in
dec
imul
mov
out
lock
(bad)
sub
jg
cmc
cmps
call
ja
mov
aam
leave
and
fbstp
stc
mov
sahf
dec
pop
loop
arpl
mov
mov
or
mov
jne
into
les
inc
fidiv
ins
inc
xchg
scas
cmp
cli
mov
outs
xor
int3
sar
jle
lods
mov
mov
(bad)
(bad)
out
repnz
test
ja
pop
mov
imul
mov
mov
es
pop
fisttp
arpl
cwde
ficomp
out
jl
pop
imul
ins
pop
cdq
stos
shl
jbe
push
xlat
arpl
hlt
pop
lea
lea
test
push
lods
arpl
out
ins
fsub
stos
dec
xor
int
add
jmp
xchg
imul
movs
jo
outs
(bad)
xor
mov
fstp
loop
test
adc
add
lds
data16
leave
test
in
cmp
jne
in
dec
jmp
call
dec
xchg
dec
daa
retf
fild
(bad)
(bad)
clc
(bad)
xchg
inc
data16
fwait
ja
int
lods
jno
pop
sti
mov
mov
cmp
inc
dec
jl
ins
int
mov
mov
mov
in
pop
ds
(bad)
adc
scas
fwait
out
jns
outs
(bad)
cs
stos
mov
sub
fucomi
cld
fucomip
push
pop
clc
inc
mov
jle
cdq
stos
sbb
fucomp
dec
xchg
arpl
add
ffree
sti
push
cmp
xor
imul
lods
cli
out
test
push
pop
stos
not
cmps
jmp
xchg
aam
lahf
not
je
xor
in
adc
pushw
loope
pop
mov
bswap
mov
leave
div
int
mov
(bad)
(bad)
sti
fisttp
dec
ins
dec
test
jge
inc
pcmpgtd
jg
ds
div
neg
fcomp
cmps
outs
cmc
test
(bad)
fs
imul
test
in
lea
dec
movs
popf
mov
jns
pop
fwait
add
and
cmp
stos
js
inc
mov
pop
out
jl
leave
fisubr
mov
inc
shr
in
push
in
mov
je
ret
and
xchg
std
stos
clc
fcom
dec
movs
loope
call
xor
inc
pop
test
sbb
in
cdq
jns
imul
gs
jle
fisttp
adc
ins
ins
mov
test
(bad)
mov
mov
push
popf
js
lea
pop
sub
arpl
sbb
jl
aaa
dec
mov
lods
sub
mov
int
inc
inc
mov
repnz
xchg
xchg
cs
pop
gs
jp
dec
pop
(bad)
dec
cdq
jns
outs
mov
ss
mov
mov
sbb
add
push
stos
pop
sbb
test
sti
mov
inc
cdq
in
test
out
cmp
cmps
push
ins
stos
mov
lock
not
fdivr
jbe
push
inc
repnz
(bad)
push
int
(bad)
cmp
fisubr
test
adc
mov
pop
clc
jp
push
mov
in
repz
adc
sar
mov
mov
lods
div
fld
into
jg
stc
jmp
(bad)
push
cmp
jne
xor
pop
test
out
mov
scas
jl
xor
push
and
jecxz
mov
arpl
jmp
div
cmp
in
mov
out
or
jl
push
neg
repz
adc
std
nop
imul
cmp
mov
xor
jo
scas
jb
cs
std
in
jo
clc
add
mov
mov
mov
mov
xchg
or
daa
sbb
mov
dec
sbb
addr16
jno
in
pop
int
or
outs
(bad)
sub
fcmovu
mov
push
fstp
(bad)
out
(bad)
in
jle
in
lahf
inc
repnz
sar
fwait
std
mov
(bad)
mov
stos
ffreep
div
movs
repz
out
imul
out
fdivr
(bad)
sar
out
fmul
cld
cmp
scas
pushf
outs
xchg
push
fst
lahf
ss
sti
mov
pushf
cld
jmp
or
sub
aad
and
outs
fld
(bad)
jmp
popa
mov
out
inc
in
mov
fisttp
shr
pop
out
adc
outs
xor
add
in
sbb
dec
out
cmp
iret
fldcw
cmps
clc
es
jne
sti
jae
inc
out
pop
jg
pop
mov
repnz
lea
xchg
pop
inc
rep
sti
fbstp
pop
mov
or
jge
ins
push
das
(bad)
test
loope
imul
fadd
xchg
test
push
mov
push
jle
clc
(bad)
repz
shl
(bad)
push
stc
pop
imul
in
push
xlat
stos
jbe
pop
or
imul
mov
mov
fninit
stc
mov
(bad)
fucomip
outs
dec
aad
or
or
jbe
(bad)
jnp
int
cwde
ss
jp
test
sti
pop
lea
xchg
ficom
xchg
pop
sbb
ret
inc
push
je
cmp
gs
retf
stos
(bad)
sub
(bad)
rcl
mov
ficomp
add
sub
jle
xor
pop
sub
cmp
movs
jg
out
scas
sub
jo
ss
fbstp
jmp
or
lods
or
aaa
int
idiv
shl
add
ret
aad
mov
je
popa
daa
in
out
xchg
mov
out
popa
mov
dec
sbb
mov
mov
lea
fdivrp
lods
jmp
sub
outs
xchg
icebp
pop
test
dec
pop
mov
cmp
jp
xchg
dec
sbb
mov
mov
inc
in
fist
adc
out
outs
xchg
mov
mov
mov
add
mov
push
retf
xor
jmp
jae
push
cmps
leave
xor
fidiv
mov
cdq
ja
jmp
xchg
idiv
fbld
lods
dec
ficom
xor
jae
cmc
(bad)
aaa
int3
cmp
(bad)
rep
arpl
fidivr
icebp
add
push
out
mov
push
mov
loop
adc
jp
cmp
in
mov
(bad)
cli
inc
imul
and
push
xor
dec
je
fistp
repz
retf
push
(bad)
jg
mov
add
int
scas
out
(bad)
adc
movs
retf
jp
ds
pop
loope
mov
int3
(bad)
neg
pop
ja
push
fimul
repz
mov
(bad)
fist
or
pop
movs
cmp
push
addr16
mov
out
mov
in
lods
lods
inc
add
pop
(bad)
ins
fistp
fistp
inc
pop
push
jne
xlat
push
pop
push
(bad)
pop
loope
lds
scas
mov
cld
mov
loope
stos
fistp
push
jmp
jge
jne
lahf
in
xlat
xor
mov
sub
or
fbstp
in
out
stos
xchg
jp
fmulp
test
sub
mov
je
cld
dec
int3
fucomip
cli
call
jl
ins
mov
(bad)
in
mov
out
movs
push
jle
in
lds
mov
jp
jo
xchg
mov
xchg
data16
inc
int3
inc
bound
fild
imul
out
stc
fldenv
cmc
cmc
scas
nop
inc
loope
mov
movs
fbld
ret
(bad)
cli
dec
inc
sbb
adc
dec
push
mov
sbb
sbb
ins
add
scas
sub
push
imul
(bad)
cmp
test
inc
retf
icebp
cld
dec
scas
and
push
mov
pop
xchg
mov
fisubr
test
retf
(bad)
cmps
in
imul
pop
fcmovu
ret
data16
xor
add
cs
fs
jno
cmp
sub
imul
pop
imul
imul
out
adc
push
(bad)
mov
cmps
data16
stos
cwde
xchg
sbb
push
call
jmp
xchg
int3
push
cdq
ja
dec
mov
cmp
gs
(bad)
sar
push
in
sti
test
loopne
leave
in
es
dec
cmp
mov
jae
test
seta
stos
fistp
pop
pop
aam
pop
cwde
mov
out
xor
rcr
pminub
ret
push
(bad)
push
mov
inc
and
push
imul
loopne
mov
retf
test
ins
jnp
or
inc
lods
imul
mov
idiv
iret
jo
add
sbb
dec
xchg
outs
(bad)
add
sub
push
stos
cld
dec
clc
pop
loop
pop
fild
js
push
icebp
xor
int3
shr
mov
inc
retf
pop
mov
mov
(bad)
les
popaw
inc
cmp
call
mov
pop
sahf
cvtps2pd
or
in
mov
sbb
movs
adc
out
and
dec
call
(bad)
cmp
ins
sar
adc
push
mov
mov
lods
cmp
jnp
xor
pop
and
loop
int3
dec
mov
loop
push
jl
(bad)
cmp
adc
or
push
imul
pop
jb
arpl
sbb
(bad)
jecxz
stc
jnp
fwait
sti
outs
loop
mov
dec
sbb
sbb
push
or
mov
adc
es
mov
xchg
adc
cmc
stc
in
loope
icebp
adc
xlat
aaa
xor
repnz
sti
inc
stos
cmp
mov
clc
(bad)
jnp
js
pop
push
js
dec
icebp
pop
fsubr
sub
movs
in
test
fidiv
mov
pop
jle
ret
call
mov
fnstcw
fidivr
add
daa
mov
sbb
repz
sahf
dec
test
shl
test
mov
and
cmc
inc
pop
mov
fidivr
inc
retf
push
lea
scas
imul
ss
outs
aaa
jae
xchg
cmc
xchg
cld
xor
cwde
xor
xor
mov
mov
sub
scas
adc
cmc
aas
cmp
and
mov
jge
out
pop
xchg
jle
xchg
(bad)
popf
sbb
fnstcw
mov
dec
lock
pop
mov
or
push
xchg
sub
cs
jmp
push
popf
sbb
imul
sbb
push
aam
xor
xchg
stos
in
hlt
pop
lahf
xor
cmp
dec
stos
fdiv
sbb
out
add
outs
and
sti
sub
je
aas
pcmpeqw
sti
adc
stos
jmp
mov
mov
pop
jecxz
mov
in
jbe
jmp
leave
push
loop
push
jbe
or
push
dec
xchg
ret
fisubr
xchg
cmc
dec
or
mov
mov
push
sti
shr
cmovs
mov
clc
xlat
jl
fxch
test
push
dec
stos
mov
rep
mov
outs
out
hlt
cmp
in
mov
jle
rcl
pop
sar
ret
pop
dec
mov
fimul
scas
mov
aam
adc
int3
jmp
mov
cli
push
push
push
jae
mov
dec
cmp
inc
sar
mov
sub
loop
ss
repnz
xor
adc
inc
cmc
jmp
mov
or
(bad)
and
ret
jg
push
out
test
mov
shl
enter
jp
jmp
test
pop
repz
fild
out
leave
hlt
mov
jb
lock
scas
out
cmc
push
fnstsw
jne
add
xlat
and
outs
xor
fidivr
fwait
test
mov
xchg
adc
pop
or
gs
jbe
sbb
(bad)
jmp
cmps
scas
and
fs
jle
jl
stos
das
ret
ds
cld
aas
or
adc
add
mov
arpl
in
icebp
int3
xlat
sbb
sub
sar
mov
ror
test
xor
cmp
xchg
pop
fsub
jns
out
cwde
jl
bound
loop
push
mov
stc
jge
call
loop
ror
jl
push
mov
imul
in
mov
sub
movs
mov
jmp
adc
push
sub
fidivr
mov
stc
jg
(bad)
cmc
xor
lock
jbe
int3
lods
repnz
loope
call
pop
stos
pop
mov
push
mov
pop
das
inc
xlat
fidivr
pop
xchg
out
rcl
stos
mov
stos
stc
xor
cwde
xor
sti
pop
ret
clc
push
leave
bound
push
outs
loop
and
add
stc
jg
cld
out
mov
mov
aad
fwait
xchg
mov
ret
repz
stc
jg
push
jle
repz
add
jg
push
imul
retf
(bad)
jle
cmps
je
fistp
cli
mov
std
(bad)
xchg
in
fidiv
aaa
fstp
into
fisub
gs
inc
sub
ins
fist
lods
test
out
ins
dec
sbb
sub
int3
mov
mov
gs
repnz
jnp
repnz
(bad)
xchg
pop
and
stos
bound
int3
ds
jmp
sub
div
dec
xchg
pop
lods
retf
out
int3
jmp
outs
xchg
push
icebp
inc
xchg
mov
fstp
and
adc
inc
xor
pushf
adc
fcomp
loope
mov
or
mov
loop
mov
cmp
imul
jecxz
pop
dec
mov
push
addr16
mov
mov
cmc
xor
and
pop
push
clc
ret
(bad)
adc
xor
shr
mov
aas
ret
xor
pop
popa
pop
cmps
test
sbb
mov
dec
pop
jmp
push
ds
mov
in
cmp
out
out
mov
in
pop
(bad)
cmp
mov
mov
movs
shl
xchg
sahf
(bad)
into
adc
stc
je
jbe
stos
aad
daa
lock
arpl
inc
lods
call
outs
outs
scas
outs
ins
movs
arpl
out
ss
repz
lahf
jecxz
daa
in
test
aas
push
fidivr
lock
div
cmp
pop
push
jmp
loop
push
mov
mov
movs
arpl
push
test
not
outs
sbb
retf
loope
mov
sub
pop
pop
dec
jle
int
mov
dec
clc
test
imul
inc
mov
ss
aad
sbb
pushw
fwait
xlat
int3
dec
(bad)
push
jecxz
pop
or
xchg
repz
icebp
pop
fisub
pop
sahf
daa
aam
pop
xchg
jmp
loopne
cli
xchg
sbb
pop
or
cmp
jmp
fwait
mov
sub
(bad)
in
dec
addr16
imul
mov
cmp
pop
js
(bad)
push
or
xlat
mov
xor
gs
push
lock
and
sub
fcmovnbe
fidivr
xor
cmc
sbb
jl
aad
ret
(bad)
jge
(bad)
and
(bad)
into
xlat
pop
push
lods
sub
lock
lds
(bad)
loope
inc
out
ins
popa
and
mov
jmp
ror
stc
push
lahf
cmp
mov
test
mov
pop
ds
xchg
pop
out
sub
cmps
fnstsw
jb
popf
sub
loope
in
jne
fwait
and
pop
aas
xchg
fisubr
outs
sub
aas
hlt
icebp
add
xchg
std
in
stos
xlat
lods
(bad)
xor
jl
loope
adc
ficomp
ins
outs
movs
jmp
sti
inc
rcl
lea
adc
mov
and
(bad)
jbe
or
mov
mov
push
pop
lahf
sub
data16
inc
icebp
push
jecxz
mov
xor
mov
fsub
lahf
xor
popa
out
dec
fnstenv
mov
ret
aad
stos
push
dec
in
(bad)
aaa
clc
mov
in
mov
ret
sbb
in
std
mov
pop
loop
(bad)
shl
push
cmp
clc
aas
loope
lods
aad
test
or
xlat
cmc
imul
xchg
enter
xor
mov
sbb
xor
sbb
pop
pop
inc
jno
and
inc
shr
(bad)
sub
inc
mov
out
cs
pop
movs
jmp
scas
fisubr
push
jl
es
addr16
sti
pop
test
xor
je
cmp
(bad)
fbld
sbb
mov
out
sbb
test
ret
dec
(bad)
lods
mov
das
or
push
lods
mov
out
cmps
fs
ins
ds
repnz
inc
jns
out
idiv
mov
retf
jbe
mov
icebp
push
pop
shl
cmps
xchg
imul
cmp
xor
add
and
pop
fidivr
repz
or
add
aas
retf
and
jae
aad
mov
in
int3
fstp
mov
inc
fidiv
fdivr
repz
cmps
xchg
outs
mov
adc
cmp
shl
mov
(bad)
(bad)
ss
adc
sahf
pusha
call
jnp
scas
pop
xor
jg
mov
scas
or
cmp
mov
mov
cmp
push
(bad)
jl
cmp
sub
pop
mov
sub
std
aas
(bad)
mov
adc
idiv
mov
repnz
stc
mov
inc
sahf
cwde
out
fidiv
push
xlat
test
adc
lods
jle
add
jns
lods
ins
(bad)
stc
adc
mov
nop
arpl
and
das
dec
adc
daa
es
cmp
sbb
out
cmp
dec
shl
ins
lea
popf
outs
sbb
repz
sbb
cli
ins
repnz
jge
ss
push
mov
dec
in
inc
mov
stos
pop
popf
mov
jge
mov
ins
and
sar
mov
int
and
mov
pop
mov
shl
(bad)
adc
loop
loop
int3
mov
in
(bad)
xchg
jecxz
jmp
sub
jge
out
lods
clc
jl
adc
jns
jbe
dec
jge
sbb
pop
adc
lahf
or
inc
lods
jmp
mov
aam
mov
fsubr
adc
pop
inc
neg
hlt
data16
sub
pop
xor
mov
sbb
push
pop
xchg
and
(bad)
mov
jno
xchg
in
imul
not
outs
stos
test
jle
es
fsubp
aad
inc
(bad)
retf
sti
or
sbb
ds
fcomi
inc
bswap
push
out
mov
lods
mov
stos
aam
cli
mov
(bad)
out
scas
sahf
pop
xchg
push
mov
sbb
hlt
jno
mov
lea
fistp
in
jbe
call
or
cmps
shl
cwde
mov
outs
xlat
and
mov
rcr
ffreep
mov
retf
mov
stos
int
xor
aas
mov
push
dec
pop
sub
dec
fcomp
pushf
loop
mov
outs
xchg
ja
jecxz
dec
dec
test
mov
test
mov
cmps
jmp
sbb
add
call
mov
mov
sbb
mov
inc
outs
sbb
retf
(bad)
mov
lock
div
dec
stos
push
add
mov
jg
and
xor
jg
pop
out
mov
int3
repz
test
cdq
icebp
mov
bound
fld
daa
xchg
lods
jmp
xchg
stos
sub
xor
add
pop
push
mov
pop
lds
pop
out
aaa
icebp
xor
xor
loope
adc
pop
mov
adc
sub
into
lahf
jne
and
fidiv
repnz
cmps
push
sbb
push
xchg
cld
inc
lock
cli
mov
push
scas
mov
push
jne
retf
cs
fdivr
in
rcl
cs
arpl
ins
mov
xor
aad
adc
dec
fidivr
jmp
daa
(bad)
jg
test
outs
mov
dec
cmp
dec
dec
(bad)
movs
and
scas
popf
shl
lea
add
sti
popa
fisubr
push
sbb
jbe
clc
xchg
jne
cmps
pop
jns
cwde
imul
pop
lods
(bad)
int3
test
push
jle
ja
out
sbb
repz
pop
sti
mov
mov
out
in
retf
jb
mov
jbe
(bad)
push
xor
push
in
mov
aad
cmp
outs
push
fnsave
lahf
ret
idiv
aad
push
dec
cmp
out
cmc
mov
ret
in
fcomi
stos
sbb
jmp
cs
fisttp
mov
cdq
mov
(bad)
scas
pop
test
outs
xlat
jmp
outs
xchg
mov
mov
jecxz
xchg
sub
ret
push
dec
jmp
clc
pop
mov
fisttp
jae
jbe
jbe
sti
xchg
and
cmc
sub
sahf
inc
popa
cld
jbe
mov
aas
mov
jbe
pop
addr16
fnstsw
aad
scas
cmp
cld
es
fcmovu
mov
aam
shl
std
call
sbb
sahf
popa
pop
or
outs
popf
iret
aam
ins
sahf
mov
or
push
shl
icebp
iret
mov
and
sbb
mov
mov
sub
fs
pushf
xchg
out
lds
hlt
xor
or
icebp
push
xchg
push
mov
aaa
jne
jns
or
iret
test
rcr
das
std
cmc
dec
xchg
fist
sub
mov
in
shrd
out
imul
cmp
test
clc
push
(bad)
adc
lods
jle
mov
gs
dec
es
sti
or
dec
pop
jg
pop
mov
movs
xchg
outs
lods
xlat
adc
jl
aam
mov
ret
rcr
cmp
lock
add
lds
div
scas
retf
ret
jle
mov
inc
(bad)
fisubr
fdivr
jge
sbb
dec
sbb
or
cmc
sbb
aaa
pop
cmps
iret
or
mov
icebp
scas
pop
pop
mov
clc
xchg
mov
push
lods
ins
xchg
xor
enter
movs
jp
xchg
test
int
imul
inc
mov
icebp
cs
mov
stos
stos
(bad)
cdq
aam
cmc
stos
test
lods
neg
lea
jge
dec
aam
ins
mov
test
cmps
pop
xchg
fnstsw
into
out
lock
xor
push
aad
sti
cwde
xor
popf
add
inc
cld
not
fwait
clc
loop
sub
test
outs
sub
ds
mov
sbb
jmp
pop
hlt
mov
add
mov
and
in
pop
sbb
pop
std
mov
js
inc
shl
enter
sahf
out
dec
popa
aam
pop
fs
jnp
push
or
(bad)
imul
repz
push
sub
push
push
ss
cmps
mov
sub
jno
ja
sar
cmp
repz
ficomp
mov
scas
cs
daa
push
(bad)
and
cmp
aad
push
pop
cld
sbb
sar
pop
call
aaa
mov
xlat
jno
jne
xor
fdiv
xchg
(bad)
jns
xchg
or
in
mov
ins
mov
mov
frstpm(287
cmps
xchg
xlat
aaa
inc
adc
ins
neg
mov
sbb
inc
add
sbb
push
shr
and
mov
sub
xor
mov
or
scas
or
pop
icebp
movs
xchg
mov
xor
mov
jp
dec
lock
xchg
inc
sub
pop
mov
les
scas
jmp
xor
add
cdq
jg
mov
sub
dec
cmc
adc
cmp
stos
jbe
scas
inc
std
test
adc
jg
pop
paddsb
xor
push
jmp
jg
test
aaa
sub
inc
jns
inc
mov
push
imul
push
push
inc
int
add
cmp
loope
adc
neg
clc
ja
clc
pop
dec
fwait
(bad)
data16
retf
ss
pop
push
ins
dec
pinsrw
movs
clc
push
retf
dec
les
jmp
xor
rcl
mov
(bad)
loop
ficom
inc
ds
stos
sbb
jns
rcr
push
mov
push
out
inc
add
sbb
pop
and
out
out
jp
call
sbb
cmps
(bad)
pusha
jb
in
(bad)
cdq
sbb
xchg
out
fist
mov
adc
cmp
jb
call
aas
repnz
dec
mov
pushf
jecxz
icebp
pop
cld
and
inc
movs
lods
adc
leave
xor
(bad)
cld
mov
push
clc
jecxz
in
inc
pop
in
sbb
imul
xor
lods
repnz
out
sahf
dec
jp
pop
pop
ret
xchg
aad
and
jne
sub
or
out
cmps
cmps
jl
pop
xchg
sub
xchg
xchg
jge
loop
cli
jmp
fwait
jae
clc
or
ss
mov
dec
loopne
add
inc
ret
frstor
dec
fidivr
inc
push
xor
clc
icebp
xor
inc
mov
stos
jge
xlat
call
test
jle
out
stos
xchg
xchg
xlat
movs
in
out
jne
push
fnstcw
or
loop
(bad)
fisub
(bad)
daa
ja
pop
push
clc
mov
and
xor
and
arpl
xor
jl
mov
in
xchg
retf
jb
xor
pop
pop
pop
add
retf
pop
inc
mov
push
xor
jmp
nop
mov
sbb
mov
push
mov
pop
mov
call
popf
test
imul
pushf
aaa
xchg
and
mov
mov
rol
add
scas
outs
fist
ss
fidivr
arpl
repz
and
pop
pop
cmc
push
adc
mov
pop
pop
jne
mov
fbstp
ins
inc
ret
inc
dec
lahf
jne
jmp
imul
pcmpeqw
jno
sub
push
sub
mov
pop
pop
popf
sbb
cmps
imul
xchg
test
inc
in
iret
sbb
mov
sti
shr
jne
xlat
into
ss
xor
cmp
loopne
jne
scas
mov
lea
hlt
in
mov
sbb
(bad)
lods
jae
aad
fdivr
push
icebp
ds
stos
jnp
stos
dec
xor
data16
lea
inc
and
push
xor
add
pop
lds
rcl
repnz
addr16
xor
imul
pop
ret
loope
mov
fist
adc
xor
popa
mov
stos
js
push
ins
jnp
shl
sub
pop
scas
ret
xchg
xor
sar
mov
fld
mov
add
add
inc
xchg
cld
jnp
lds
mov
scas
pop
mov
(bad)
ret
add
iret
inc
cdq
popf
movs
ret
idiv
dec
inc
ror
(bad)
idiv
gs
mov
lods
jl
movs
jmp
jmp
sbb
inc
mov
imul
stos
(bad)
movs
imul
(bad)
xchg
loope
add
xor
and
mov
cmp
popf
outs
cdq
mov
out
or
push
or
mov
mov
(bad)
cmps
xlat
sbb
fcomip
push
sub
pop
push
loopne
jg
push
std
xor
pop
cmc
loope
pop
mov
(bad)
stos
scas
or
mov
movs
fmul
loop
or
jmp
fsubp
dec
add
daa
cmp
mov
pop
test
jmp
mov
cli
out
mov
int3
cli
ret
aas
int3
fild
cmps
(bad)
in
push
cld
fwait
jnp
jns
jb
pop
cmc
xchg
mov
das
scas
dec
js
les
adc
sub
dec
lods
lds
fstp
ret
cld
mov
mov
hlt
cmp
jle
icebp
daa
mov
ret
push
clc
scas
dec
mov
xchg
push
ret
jae
outs
(bad)
int3
fmul
sub
dec
aam
pop
lods
scas
in
repz
(bad)
jne
jmp
inc
mov
pop
xchg
lea
mov
xchg
(bad)
int3
outs
add
pop
mov
xchg
jo
std
fstp
jp
in
pop
sub
mov
push
popf
test
cmp
pop
cmps
ficomp
push
mov
imul
mov
mov
xor
aam
and
imul
mov
jbe
mov
jmp
mov
pop
stos
shr
ds
sbb
sti
mov
xlat
sub
mov
jns
mov
movs
mov
jl
stc
jg
stc
xchg
(bad)
jmp
fisttp
mov
in
mov
(bad)
push
(bad)
mov
cmp
js
pop
mov
retf
lods
stos
std
(bad)
push
xor
int
loop
jb
inc
xchg
leave
clc
stos
shl
jae
xchg
lods
mov
add
push
push
shl
out
movs
inc
pop
mov
xor
stos
jl
shr
pop
jae
out
call
stos
js
rcr
stc
push
xchg
mov
jns
push
sbb
repnz
unpckhps
rcl
cmp
or
sub
stos
sbb
xlat
jnp
inc
mov
fwait
ss
jge
out
push
push
xor
out
cs
mov
sub
cdq
mov
test
out
idiv
out
inc
mov
lea
pop
jg
jecxz
push
in
mov
(bad)
xchg
jno
stc
ss
jle
shl
lds
movs
inc
pop
retf
idiv
mov
out
scas
enter
es
sti
jg
scas
lahf
xchg
pop
lea
into
(bad)
sub
inc
mov
pop
out
jbe
cld
push
in
neg
test
fistp
mov
sahf
not
aam
mov
std
sub
ja
out
loop
mov
xchg
clc
lahf
mov
mov
jmp
dec
retf
mov
rcl
add
inc
or
mov
mov
jg
outs
and
push
rol
inc
ret
cmp
pushf
mov
add
sbb
inc
loopne
mov
sbb
mov
mov
inc
lods
pop
mov
daa
ret
jl
jge
into
ficomp
lahf
cmp
(bad)
repz
mov
(bad)
mov
sbb
shl
cmc
fs
xor
fld
mov
lock
mov
ficomp
sub
pop
cmp
cmps
and
xor
pop
(bad)
and
jg
out
xor
(bad)
repz
ficomp
fs
iret
stos
jle
jecxz
hlt
call
mov
jbe
cld
mov
dec
int3
mov
cmps
iret
mov
pop
push
pop
mov
mov
stos
out
xor
or
icebp
push
into
jp
fwait
test
rol
ds
js
cmc
scas
push
lock
rep
fst
loope
jno
xchg
jge
std
ja
outs
les
nop
outs
inc
and
je
cld
popf
icebp
aam
cli
mov
dec
repz
lock
mov
mov
mov
push
mov
js
rol
mov
pop
jb
inc
push
ds
addr16
pop
jge
jl
lock
(bad)
push
clc
aaa
(bad)
push
fcmovnu
xor
popa
lods
sub
daa
jmp
add
mov
xchg
xchg
xlat
jb
ja
iret
xchg
cmc
dec
sbb
mov
test
push
pop
iret
hlt
and
mov
sub
dec
(bad)
fsubr
daa
sub
sar
in
cmp
mov
(bad)
cmp
fwait
lods
inc
idiv
stos
pop
inc
mov
std
xchg
call
sahf
in
xchg
arpl
dec
inc
dec
cli
sbb
mov
arpl
(bad)
pop
fcom
fstp
(bad)
clc
(bad)
pinsrw
jecxz
mov
out
test
cli
data16
pop
fidivr
dec
in
ja
ja
mov
xor
xchg
inc
cmp
mov
push
loop
stc
xchg
js
subps
std
imul
sub
mov
mov
neg
sub
mov
loop
sbb
add
xor
pop
mov
inc
loop
mov
std
dec
cli
jbe
push
fist
and
movs
sahf
bound
mov
mov
cmp
test
jae
pop
mov
rcr
out
stc
addr16
sbb
ins
out
lock
(bad)
in
sbb
push
push
les
push
cmp
popf
add
or
or
mov
and
ss
or
pop
in
in
stos
mov
loopne
cmp
ds
pop
push
mov
lahf
mov
retf
sbb
inc
jnp
xchg
loope
daa
aam
inc
adc
mov
pop
int
fwait
(bad)
lods
retf
aad
pop
out
pop
mov
cmps
mov
es
pop
fyl2xp1
mov
loopne
or
sbb
inc
mov
daa
jbe
loope
pop
push
dec
cld
adc
pmaddwd
idiv
repz
imul
dec
sub
or
les
cmp
loop
sbb
sub
dec
shl
cwde
mov
inc
xchg
or
ret
jae
(bad)
mov
sti
push
mov
inc
jbe
inc
test
scas
pop
(bad)
sahf
sub
cld
sub
jmp
push
scas
xor
mov
jecxz
push
jmp
rcr
in
mov
repnz
sub
jg
call
shl
lods
out
dec
ds
mov
aam
dec
movs
xchg
clc
pop
push
leave
sbb
pop
push
std
mov
lods
inc
aaa
jg
repz
scas
cs
dec
cmp
fstp
(bad)
mov
dec
js
fistp
mov
fwait
sub
call
mov
jl
in
out
jmp
jle
bnd
jmp
(bad)
loope
jae
rcl
lahf
sub
and
test
aad
pop
inc
jmp
add
inc
daa
mov
stc
xchg
xor
icebp
jae
iret
mov
jecxz
xor
dec
loope
push
hlt
cmp
mov
rcl
addr16
pop
es
movs
int3
shl
fild
jecxz
mov
outs
mov
fisubr
and
(bad)
rcl
imul
xor
xor
(bad)
cmp
shl
jecxz
mov
int
iret
popf
into
icebp
push
shl
and
sbb
pop
fst
xor
pop
pop
mov
fwait
dec
pop
push
cli
or
inc
and
rcl
int3
sub
dec
repz
jle
push
fidivr
fld
mov
jle
pop
xchg
or
jle
imul
xchg
shl
jmp
sub
into
and
ins
in
retf
inc
dec
aad
fcom
xchg
mov
xor
movs
sub
and
dec
sub
(bad)
jg
pop
pop
loopne
add
adc
mov
jmp
lods
jp
xchg
icebp
arpl
popa
push
pop
mov
cdq
test
mov
out
jo
cmps
pop
mov
fcomi
cmp
iret
psubsw
cmp
stos
lods
mov
add
(bad)
das
inc
mov
int
hlt
jnp
ror
movs
imul
cmp
es
hlt
fstp
cmp
out
popf
or
fcmove
fstp
fnsave
xlat
xchg
mov
popf
and
cmp
pop
into
dec
aam
xchg
cmp
and
cmp
sbb
add
mov
jo
sti
mov
idiv
call
mov
outs
cs
xor
pusha
call
int
movs
loop
dec
inc
into
mov
stc
add
mov
lahf
outs
push
aam
jbe
sbb
lds
ins
xchg
mov
sub
stc
lods
push
adc
jbe
ins
sar
lods
scas
mov
movs
fs
add
and
mov
mov
test
fidivr
pop
retf
daa
cli
sub
xlat
es
sahf
test
cmp
shl
scas
movs
movs
ret
outs
leave
dec
pop
out
addr16
(bad)
loop
fdivp
mov
mov
int3
mov
stos
fstp
push
mov
dec
jb
in
gs
cmc
scas
xchg
(bad)
pop
xor
outs
lods
or
push
mov
addr16
xchg
test
pop
out
xchg
dec
sub
mov
push
mov
(bad)
mov
ja
ret
fstp
sub
ficom
pop
mov
jne
jbe
mov
lods
outs
loop
sti
pop
jl
fidiv
in
ins
call
mov
dec
xor
inc
pop
js
rol
cdq
gs
out
jae
lahf
push
sub
jb
ss
jae
aad
neg
aad
ret
xor
and
fsubrp
push
(bad)
repnz
(bad)
outs
(bad)
push
dec
cs
mov
ds
aam
ss
test
fwait
daa
fldenv
and
fistp
lods
js
sti
push
(bad)
fdiv
gs
aad
xlat
psllq
lock
mov
(bad)
out
xor
fcomip
scas
arpl
xchg
push
shr
scas
loop
fmul
retf
adc
mov
mov
jae
mov
fisubr
sub
push
out
pop
sti
stos
mov
fnstenv
hlt
pop
jmp
ins
fcomip
sub
inc
inc
vpavgw
iret
pop
scas
fsubr
(bad)
ja
loop
mov
xchg
mov
push
sub
xor
mov
rcr
repnz
pop
fdivr
push
aad
cs
mov
test
mov
fucomip
push
mov
fstp
mov
aaa
push
mov
(bad)
imul
outs
sti
pop
xor
in
adc
out
pop
addr16
add
stos
push
call
inc
mov
call
retf
(bad)
(bad)
mov
ret
mov
mov
mov
out
adc
jb
mov
scas
js
pop
shl
fs
mov
mov
mov
dec
ins
sbb
dec
(bad)
cli
data16
inc
jp
(bad)
and
sti
fistp
xchg
mov
lahf
xchg
es
outs
(bad)
out
or
int
sub
fcomp
aad
pop
adc
(bad)
xor
sbb
pop
into
popf
dec
aas
daa
std
jle
add
mov
sbb
fdiv
sub
(bad)
outs
cmp
cmp
loopne
cli
push
cmps
jle
pop
adc
or
out
scas
fldz
cdq
jns
ds
cld
jp
cmp
sbb
mov
mov
fist
mov
jge
lock
les
movs
loopne
push
xlat
div
xchg
in
data16
jmp
imul
pushfw
dec
rcl
mov
adc
imul
dec
inc
push
jge
adc
in
lahf
(bad)
ds
das
movs
jnp
call
mov
inc
jle
pop
inc
xor
xchg
out
mov
mov
das
sbb
retf
outs
stos
pop
pop
mov
xor
(bad)
add
add
pop
inc
scas
mov
cmp
outs
rcr
out
into
adc
mov
inc
dec
cmp
(bad)
aaa
cmovp
pop
mov
movs
mov
sbb
inc
lock
mov
cld
mov
(bad)
cmp
mov
or
xor
inc
sub
or
sar
daa
adc
jne
ret
mov
mov
out
ds
stc
xchg
push
(bad)
pop
iretw
xchg
test
shr
daa
out
jg
cmp
idiv
jl
loope
xchg
repz
out
inc
xchg
pushf
inc
and
xor
mov
xor
fucompp
ds
ret
sbb
push
outs
sbb
test
sub
frstpm(287
inc
adc
cwde
loop
pusha
and
rcr
out
in
jl
cmp
ret
push
jbe
pop
mov
cmp
pop
ret
sub
jnp
test
jmp
dec
lock
call
mov
repnz
stos
in
cmps
clc
imul
cmp
(bad)
cmp
test
cmp
inc
dec
iret
loope
and
inc
xchg
outs
sub
pop
sub
stc
and
inc
mov
cmp
push
sbb
cmp
sbb
lods
cmp
mov
xadd
aam
pop
aam
push
data16
sbb
sub
clc
mov
or
cmp
retf
and
cs
add
repnz
das
xchg
gs
sub
push
scas
cld
mov
cmc
push
(bad)
fsubr
test
sti
dec
shl
jne
out
rol
push
(bad)
jecxz
jecxz
sub
xchg
mov
sub
lahf
mov
test
mov
mov
xlat
(bad)
jp
pop
hlt
fisubr
jl
shr
shr
dec
xor
popf
sbb
adc
paddd
pop
xchg
push
or
test
xor
cmp
lods
sti
mov
enter
jbe
mov
gs
loop
(bad)
mul
xchg
aad
shl
xor
mov
lahf
fidiv
push
mov
ss
jne
inc
jo
mov
mov
retf
bound
jbe
aas
xchg
scas
inc
mov
fwait
jbe
repnz
push
pop
and
int3
inc
mov
es
jge
sti
jns
mov
cmp
scas
fnstsw
dec
mov
popf
sbb
jb
fdivr
mov
movs
imul
inc
dec
test
inc
fsubr
ins
xlat
out
not
ror
fstp
je
inc
ins
movs
pop
leave
jne
and
add
pop
movs
xchg
mov
(bad)
sub
mov
sbb
in
les
fwait
sub
push
test
hlt
in
aas
mov
int
jg
in
(bad)
and
rcr
js
pop
shr
ins
lods
movs
inc
inc
lock
loope
xchg
xchg
movs
xchg
xchg
jns
cmp
xlat
shl
sbb
adc
dec
mov
jl
aas
adc
pop
push
cmps
repz
mov
cmp
sub
fstp
cmp
and
fidivr
mov
and
dec
loopne
mul
stc
(bad)
jb
(bad)
(bad)
add
outs
sub
(bad)
inc
test
inc
sub
mov
ds
dec
cmp
adc
sub
fwait
pop
pushf
mov
std
jp
xor
test
cli
pushf
sbb
add
lahf
repnz
arpl
iret
mov
ror
jns
in
inc
outs
mov
mov
jbe
add
aas
arpl
jns
push
rcl
sub
(bad)
fild
stc
(bad)
mov
sti
inc
pop
fwait
scas
or
mov
mov
out
outs
std
xlat
scas
dec
sar
movs
push
sti
lahf
cmp
jmp
out
cmps
out
xchg
(bad)
retf
std
out
popf
xchg
(bad)
(bad)
ss
(bad)
scas
je
dec
rcr
dec
loopne
das
cs
dec
push
pop
mov
jns
int
dec
movs
pop
retf
stos
call
xchg
pop
adc
imul
unpckhps
pop
mov
cmps
stos
(bad)
mov
sti
mov
fdivp
pop
pop
mov
retf
push
jbe
(bad)
mov
jae
mov
sbb
jmp
inc
push
mov
popf
(bad)
mov
push
ds
retf
xor
ss
retf
popa
sbb
aas
mov
int3
inc
push
pop
jnp
dec
dec
mov
push
stos
movs
loopne
in
not
xchg
fnsave
retf
mov
or
sbb
stc
mov
movs
call
out
mov
repz
(bad)
xor
cmc
lds
iret
mov
and
stos
mov
push
(bad)
pop
ins
jb
inc
imul
into
scas
es
cli
or
and
out
outs
fwait
dec
adc
mov
rcr
dec
js
jecxz
xchg
movs
aam
dec
out
jl
pop
inc
ins
pop
outs
int3
fld
sar
jne
imul
ret
icebp
es
inc
fnstsw
mov
xor
arpl
xlat
out
push
jns
imul
dec
xchg
adc
pop
xchg
mov
and
test
dec
mov
fld
shl
mov
cld
mov
(bad)
es
lods
cld
pop
mov
inc
addr16
out
jl
stos
pop
push
sub
mov
lods
mov
out
icebp
xchg
iret
and
pop
dec
push
mov
shl
hlt
mov
xchg
jp
cmps
pop
lods
call
mov
hlt
test
or
sub
lock
jecxz
(bad)
jecxz
mov
push
xchg
je
pop
pop
xchg
retf
add
inc
pop
mov
pop
adc
mov
lds
dec
xor
sbb
int3
push
jle
xor
mov
test
call
pop
xor
push
jno
xchg
(bad)
in
(bad)
(bad)
addr16
gs
fistp
mov
sti
mov
pop
(bad)
cmp
imul
mov
call
loop
and
pop
xchg
movs
icebp
lods
sti
mov
sbb
and
outs
cld
jb
jg
imul
xlat
int3
out
mov
xchg
adc
dec
stos
repz
iret
shl
fcomp
push
fdivr
ja
fistp
xchg
scas
daa
les
pop
icebp
push
mov
mov
(bad)
cli
fdiv
and
push
mov
outs
into
cmp
add
inc
jns
scas
in
or
neg
ss
or
out
bound
mov
div
cmp
xor
pop
(bad)
aad
imul
cld
mov
pop
sbb
or
fldcw
lahf
inc
jns
out
scas
int3
mov
jle
(bad)
int3
fistp
inc
loope
adc
fld
mul
out
out
push
adc
mov
rcr
stos
enter
clc
mov
dec
pusha
mov
xor
pop
or
xor
mov
jae
dec
push
dec
mov
mov
cmps
xchg
inc
lods
stos
aas
lods
inc
inc
popf
scas
sub
push
cmps
popf
iret
cmps
cmp
frstor
retf
imul
mov
jnp
in
cmc
scas
cwde
(bad)
sub
or
jecxz
push
push
pop
cdq
int3
es
xor
fidiv
out
jmp
xlat
pop
icebp
retf
lds
add
call
cmp
sbb
push
sbb
cmc
xchg
mov
je
pop
push
cmps
jecxz
in
jge
cli
pop
call
and
int3
xchg
mov
icebp
pop
addr16
pop
fwait
outs
cmp
pop
loope
sub
paddsw
cmps
clc
xchg
je
adc
mov
outs
mov
and
std
jg
(bad)
outs
scas
outs
outs
cmp
mov
dec
jo
js
pop
inc
das
mov
dec
cdq
int
ror
mov
jmp
test
int3
cmps
jge
pop
jne
pushf
xchg
mov
inc
sbb
cmp
sbb
xchg
(bad)
lods
mov
mov
stc
jg
jb
jle
lods
mov
jl
fdivrp
mov
jae
pop
cmp
inc
fstp
pop
push
lods
jbe
add
(bad)
neg
outs
out
(bad)
test
(bad)
imul
pop
call
gs
repz
(bad)
dec
out
jne
adc
adc
fnstcw
iret
(bad)
pop
pop
push
test
sbb
and
fwait
in
mov
cld
fs
dec
pop
dec
lock
or
xchg
fmul
in
xchg
jle
jecxz
or
out
ja
movaps
loop
xchg
sub
fstp
pop
sbb
sbb
ja
fcmovnb
jge
sbb
imul
ret
inc
aad
cdq
adc
push
test
rcl
fild
and
std
cdq
repz
jae
add
test
out
shr
sub
sub
fmulp
hlt
jge
or
dec
fs
inc
add
popa
adc
cdq
dec
pushf
gs
mov
jo
sub
sbb
shr
jg
jnp
(bad)
dec
pop
dec
icebp
test
mov
add
(bad)
out
neg
adc
dec
jns
mov
fwait
jecxz
cmp
mov
int
push
adc
add
lock
mov
out
cmp
ja
lock
les
rep
fidiv
pusha
and
repz
or
sahf
hlt
fild
sub
push
push
push
mov
push
pop
mov
jp
add
inc
retf
push
mov
sbb
mov
xchg
push
repnz
mov
lahf
call
je
mov
icebp
push
test
test
fisttp
mov
and
out
jecxz
hlt
outs
(bad)
mov
mov
push
inc
icebp
gs
mov
xchg
ret
out
out
gs
inc
push
jnp
sahf
bound
aas
or
out
xchg
pop
aam
adc
retf
retf
js
push
arpl
iret
leave
sti
and
fs
idiv
repnz
lods
jae
adc
inc
test
or
or
pop
xchg
push
pop
loopne
lods
cdq
enter
add
push
sub
ret
arpl
mov
std
jmp
cmp
movs
xor
sti
cld
into
ror
adc
outs
repnz
call
sub
cmp
inc
sub
cld
push
loope
pop
push
mov
(bad)
dec
(bad)
push
jbe
test
cmp
movlhps
push
std
xchg
int
call
clc
imul
repz
pop
adc
es
ficomp
ds
lods
enter
aas
ret
and
jg
call
xchg
pop
aad
inc
(bad)
and
mov
fcmove
cmp
mov
jle
add
fstp
push
sub
repnz
lods
pop
js
hlt
ss
mov
sub
mov
mov
sbb
mov
pandn
pop
mov
mov
mov
push
out
sub
call
ins
cmp
aas
dec
mov
xchg
stos
cwde
jecxz
push
xor
sub
inc
sub
jl
icebp
and
movs
std
aam
arpl
and
inc
mov
mov
sbb
jno
mov
adc
iret
mov
mov
dec
push
push
hlt
push
inc
hlt
jbe
jno
pop
or
das
shl
or
mov
(bad)
out
in
push
xchg
std
or
sbb
jge
aad
(bad)
int3
call
inc
jmp
scas
push
push
loop
sub
push
jne
cli
dec
push
ins
pop
pop
dec
and
sbb
int
pop
(bad)
or
inc
mov
mov
add
pop
pop
dec
cmps
mov
sub
pop
push
div
repnz
jmp
pop
dec
movs
clc
dec
lds
fidiv
and
cmp
mov
xor
ds
xor
lock
rcr
addr16
aad
jbe
pop
fwait
and
sahf
xor
fdiv
in
jl
(bad)
mov
(bad)
jg
and
not
adc
fidivr
sub
nop
pop
fcomi
scas
inc
loop
test
add
pop
clc
imul
nop
imul
addr16
lea
push
push
movs
cwde
push
popf
jp
lea
fldenv
add
xchg
xchg
popa
mov
sub
std
cmp
inc
fld
ins
sub
mov
dec
fdiv
adc
hlt
ds
in
pop
xchg
or
cwde
fdivr
add
fsubr
jnp
push
imul
cmp
push
mov
fiadd
addr16
stos
and
popf
mov
jae
stos
popa
gs
mov
pop
repnz
das
(bad)
fisttp
movs
std
fild
cmp
movs
faddp
out
push
jbe
inc
popf
pop
loope
repz
clc
pop
(bad)
jmp
adc
fidivr
imul
jns
retf
(bad)
cmps
imul
loope
clc
xor
bnd
cld
mov
cs
std
sbb
std
sub
fldln2
mov
jne
(bad)
cmp
out
lds
test
add
jge
sbb
popf
inc
out
mov
mov
loope
sub
not
mov
lods
push
xchg
pop
sub
mov
and
test
mov
lock
(bad)
xchg
pop
pop
pop
dec
xchg
cmp
adc
or
jno
(bad)
test
outs
xor
jmp
shl
xchg
fchs
xchg
cmc
jmp
lea
pushf
mov
(bad)
jl
out
test
loope
aad
push
(bad)
ds
dec
movs
sahf
lods
and
into
push
stc
mov
and
(bad)
mov
imul
push
sbb
leave
shl
jl
mov
gs
ss
mov
scas
nop
aaa
iret
push
aam
(bad)
retf
xchg
sub
ja
jb
das
cmp
push
scas
int3
retf
adc
mov
arpl
call
fnsave
mov
sbb
cdq
scas
pop
push
icebp
dec
mov
aaa
sbb
push
mov
arpl
sbb
jnp
daa
jns
retf
test
sbb
xor
cli
ds
test
adc
outs
outs
push
das
cmp
mov
stc
xchg
jle
pop
cmp
(bad)
jp
xchg
loop
pop
and
fs
fsubr
repnz
out
xlat
lods
js
sbb
outs
jl
sub
xchg
div
icebp
xor
dec
fimul
les
icebp
pop
inc
jge
stc
dec
das
or
aam
(bad)
and
mov
push
mul
(bad)
stos
scas
loope
add
test
jbe
xor
(bad)
fistp
out
in
pop
scas
dec
aas
and
push
addr16
push
jmp
inc
jmp
sbb
push
sar
jne
sbb
outs
mov
mov
or
stos
mov
icebp
(bad)
adc
popf
mov
out
cld
sub
mov
mov
mov
dec
inc
cmp
ja
jecxz
or
test
imul
mov
outs
(bad)
dec
xchg
enter
or
or
and
mov
mov
mov
push
jge
ret
cli
jl
mov
aaa
pop
cmp
mov
retf
outs
xor
sbb
js
sti
lods
xchg
enter
aas
mov
(bad)
stos
sub
arpl
add
ss
mov
aad
mov
dec
fldpi
outs
repnz
mov
jnp
xlat
xor
and
aas
ret
inc
adc
outs
inc
nop
jl
ss
loop
imul
cld
add
dec
cmps
cmc
fst
dec
mov
daa
into
xchg
fsub
pop
fdivr
bound
out
popa
retf
cmp
xchg
sahf
adc
gs
sub
pop
jbe
pop
call
pop
mov
pop
mov
and
inc
clc
push
mov
dec
mov
mov
(bad)
loope
fnstcw
inc
cmp
inc
out
call
jnp
dec
pop
mov
out
xor
clc
dec
loopne
push
pop
pop
clc
jnp
icebp
and
popa
cdq
loope
jle
ins
int3
xor
clc
psraw
lea
inc
adc
(bad)
aad
dec
sub
shl
push
mov
xchg
xchg
jmp
mov
arpl
addr16
xchg
(bad)
retf
xchg
push
inc
inc
cdq
aaa
push
(bad)
stos
sti
stos
outs
cli
pop
paddb
test
aaa
inc
ds
mov
fldenv
mov
ss
ret
das
dec
sbb
(bad)
pop
scas
leave
cld
aas
xor
out
cmps
imul
xlat
loope
xchg
scas
(bad)
push
iret
test
and
push
fs
sbb
sub
mov
(bad)
cmp
mov
loop
imul
or
fnstcw
mov
shl
cmp
cld
push
adc
imul
das
cmps
inc
or
ss
jp
mov
jbe
jecxz
jmp
js
js
loope
fwait
ds
mov
ins
mov
jns
and
adc
push
mov
lods
js
inc
mov
cmps
mov
xor
sar
fisttp
imul
dec
clc
xor
xchg
icebp
aaa
lea
sub
(bad)
jg
retf
mov
push
lahf
cld
push
lock
cdq
loope
mov
aas
or
sbb
fiadd
dec
mov
cmp
sbb
int
movs
lods
lods
xchg
dec
stos
fistp
(bad)
mov
int3
lahf
or
leave
leave
mov
in
push
mov
mov
mov
and
mov
jg
clc
mov
mov
push
stos
and
(bad)
cmp
mov
call
das
outs
jecxz
add
(bad)
xlat
cli
ja
out
jne
aam
xchg
and
lods
push
cmp
loope
cmp
ficomp
loopne
xchg
mov
cmps
retf
scas
pop
push
mov
test
inc
jmp
mov
outs
push
fdivr
iret
xchg
(bad)
(bad)
dec
fcomp
in
call
test
pop
jl
into
retf
pop
cli
ins
jbe
ret
push
push
jle
pop
mov
jmp
inc
ret
jg
pop
loop
(bad)
(bad)
into
ret
mov
lds
cdq
pop
sbb
outs
ss
aas
ret
inc
adc
ret
mov
je
das
lods
xlat
ins
les
or
mov
mov
inc
loop
xor
mov
call
je
(bad)
jge
cwde
cmp
cmp
ret
sbb
xchg
pop
ret
fwait
dec
clc
inc
cdq
inc
fwait
lods
stc
in
or
(bad)
and
fsub
xlat
xchg
push
mov
sub
stos
out
loope
jb
movs
scas
mov
inc
xlat
movs
dec
sbb
and
outs
jmp
out
mov
mov
(bad)
aam
jl
inc
and
repnz
cs
(bad)
xor
dec
in
imul
clc
arpl
inc
jne
jb
jge
repnz
stc
imul
scas
xchg
pop
cld
and
mov
sbb
aam
in
leave
stc
dec
inc
sar
push
xchg
mov
sar
add
jnp
fcom
(bad)
push
js
cwde
clc
push
test
pop
ja
sub
pop
lock
mov
mov
cli
xchg
and
dec
cmp
jle
sahf
push
or
stc
mov
and
mov
(bad)
(bad)
jg
jae
jmp
push
stc
jge
ret
push
test
aaa
in
retf
cld
dec
aad
mov
jg
push
(bad)
adc
jnp
(bad)
sub
out
outs
out
mul
ss
inc
pop
into
arpl
fdivr
add
jp
mov
loope
inc
dec
mov
or
mov
lods
ret
out
mov
out
xor
ja
stc
push
clc
mov
xchg
or
in
popa
sub
xchg
aam
mov
jl
xor
(bad)
mov
(bad)
sbb
jmp
pop
dec
or
cmps
(bad)
mov
xchg
icebp
imul
push
adc
js
fnstsw
push
sbb
cmc
aam
rcr
or
pop
pop
xchg
movs
add
sti
and
clc
xlat
xor
out
enter
inc
(bad)
pop
or
lock
(bad)
cmp
ins
fs
(bad)
ror
jns
xchg
cmp
xchg
fimul
mov
sbb
push
movs
xchg
mov
in
jle
xchg
push
test
push
dec
cmp
ins
lock
mov
fisub
imul
jg
out
(bad)
out
dec
mov
pusha
sar
movs
pop
gs
jae
icebp
and
in
out
or
fcmovu
jmp
inc
cmps
jmp
arpl
arpl
push
add
sub
mov
cmp
movs
gs
clc
xlat
lods
jle
sahf
lock
xchg
out
pop
mov
jb
push
loop
and
ins
sti
dec
or
inc
rcl
xor
dec
mov
xchg
loope
mov
mov
iret
in
int
cbw
add
xchg
retf
icebp
imul
(bad)
das
fdivr
mov
(bad)
push
movs
pop
not
loopne
icebp
fcmovnb
call
lock
leave
stos
pop
fadd
dec
dec
popf
push
outs
cmp
lds
in
xchg
loope
xor
cli
sbb
dec
jle
jne
and
or
movs
jecxz
jecxz
push
or
ret
push
add
mov
pop
(bad)
mov
jmp
cmp
(bad)
sbb
mov
cmc
aas
jns
pop
je
je
add
leave
icebp
inc
push
lock
mov
xchg
xlat
ret
call
or
sbb
out
aas
ret
retf
mov
(bad)
push
lea
xor
addr16
cmp
daa
and
pusha
clc
movs
loopne
adc
cmp
(bad)
neg
sub
pop
ret
retf
xor
popa
jle
mov
fild
(bad)
mov
addr16
mov
in
adc
pop
xchg
ins
test
fsubr
fisttp
mov
xor
dec
jno
jo
mov
jecxz
mov
xor
push
fsub
mov
dec
cwde
cli
test
clc
in
js
inc
mov
(bad)
cld
mov
sub
ins
out
mov
pop
jbe
mov
loope
fst
stos
xor
cmc
pop
das
push
fimul
in
jl
lock
pop
clc
pop
lock
(bad)
adc
fistp
js
sti
lds
sub
and
dec
cmp
(bad)
in
lods
and
fbld
dec
xor
stc
dec
or
icebp
inc
(bad)
aad
xlat
dec
shr
ds
add
mov
or
jb
jecxz
loopne
adc
push
inc
mov
jg
je
aaa
ret
cmp
mov
add
sti
sub
cmp
popa
sti
mov
repz
cmp
movs
push
xchg
push
stos
cld
xor
or
stc
sbb
test
jle
mov
mov
jl
mov
pop
cmps
popf
jbe
mov
xlat
or
dec
fld
sti
mov
sti
xor
xchg
aas
sub
xchg
rcl
ja
sbb
add
pop
stc
loop
movs
aad
imul
or
mov
jo
pop
hlt
scas
pushf
(bad)
and
add
xor
fs
in
dec
pop
test
stos
call
push
test
int3
ret
cmp
lods
cmp
iret
in
jp
loop
mov
(bad)
adc
loop
sub
push
cmp
and
pusha
dec
mov
inc
std
sti
mov
inc
icebp
and
add
adc
or
pop
and
cmp
repnz
push
out
gs
jo
xor
loopne
je
inc
cmp
cmps
jmp
les
ror
gs
mov
sbb
mov
addr16
mov
imul
outs
mov
pop
dec
aaa
ss
js
or
imul
(bad)
xchg
fst
jle
fwait
mov
jmp
mov
repnz
xchg
imul
fwait
scas
sbb
popf
pusha
rcr
xchg
jmp
fsubr
ds
jo
inc
jge
jb
repnz
call
pop
jb
lds
call
jmp
sub
pusha
jmp
call
icebp
add
ficomp
jp
xchg
dec
dec
fnstsw
push
pop
arpl
into
cmp
bound
or
dec
mov
sbb
xor
xlat
xor
mov
leave
mov
movs
pusha
sar
mov
fidivr
movs
js
leave
push
icebp
fmul
loope
pop
mov
fdiv
jmp
les
mov
inc
adc
out
mov
fistp
jge
push
mov
test
push
ds
cmp
aaa
sub
lahf
xchg
jmp
adc
or
in
aad
pop
or
aam
repz
js
je
(bad)
add
(bad)
aas
fwait
retf
stc
fs
in
retf
in
pushf
in
pop
dec
(bad)
mov
scas
dec
retf
xor
sahf
mov
(bad)
xor
pop
mov
push
ds
and
add
test
xchg
inc
jae
in
movs
mov
or
sbb
test
aam
adc
out
(bad)
icebp
jle
std
inc
das
mov
fwait
push
sti
(bad)
fnstcw
iret
and
jp
addr16
movups
dec
(bad)
cli
neg
cdq
mul
or
xchg
or
push
dec
pop
push
or
mov
icebp
(bad)
test
repnz
mov
xor
or
fisttp
jae
mov
int
fstp
mov
lock
mov
jl
fnstcw
repz
sbb
hlt
outs
xor
sti
in
mov
lds
lahf
adc
ss
ss
lods
push
cmc
outs
test
cld
(bad)
jns
leave
pop
mov
fsubr
int
loope
retf
and
retf
push
aas
push
int3
xor
and
ja
repz
fidiv
scas
xor
lahf
cmp
(bad)
test
push
sti
lods
(bad)
cmps
fcomi
std
xor
inc
sub
fwait
inc
jnp
es
push
mov
cmp
dec
movs
sub
fwait
sar
js
xchg
dec
bnd
cdq
jno
icebp
outs
stc
aaa
jg
repz
ins
sbb
test
aad
xchg
inc
cmc
push
xchg
aas
std
or
inc
(bad)
mov
lods
mov
scas
push
or
imul
fdiv
mov
out
push
ret
inc
ja
retf
mov
push
retf
js
add
je
loopne
fidiv
mov
dec
pop
sub
daa
retf
jae
mov
repnz
pop
mov
std
jg
sbb
xchg
lds
add
fdivr
mov
movs
jno
dec
mov
xor
retf
mov
scas
enter
jo
push
xchg
sub
test
push
dec
aas
sub
jecxz
jl
dec
inc
pop
jbe
push
and
imul
push
mov
jge
push
shr
xchg
jge
jne
fstp
sbb
fucomip
pushf
cmp
inc
scas
(bad)
outs
xchg
sub
ss
lods
mov
pop
out
sti
xlat
in
mov
aas
test
scas
pop
inc
inc
cmp
(bad)
stc
ins
push
popa
mov
push
push
stos
int
mov
jmp
inc
sbb
mov
div
and
sbb
xchg
push
nop
inc
cmp
push
out
mov
fwait
(bad)
fimul
jmp
imul
push
out
add
repz
loope
(bad)
lods
jg
out
cli
aam
pop
int
mov
push
aad
fdiv
out
es
shl
mov
sahf
out
cs
inc
sti
xchg
loop
scas
cli
mov
mov
aas
push
cmp
test
push
pop
xlat
scas
xchg
je
std
and
addr16
lea
(bad)
pop
jp
jl
sbb
clc
push
neg
stc
lea
rcr
jle
cs
cld
mov
push
stos
mov
ficomp
out
ins
jbe
mov
cmp
push
shr
fdivrp
outs
in
xchg
std
je
jmp
pop
adc
int
fmulp
pop
mov
sub
jecxz
retf
les
call
cmc
sub
shl
dec
and
jg
cwde
adc
xor
repz
icebp
jg
mov
inc
fisubr
pop
sub
xchg
scas
cmps
imul
in
mov
sub
test
sub
ja
out
js
(bad)
sahf
push
aad
packssdw
jg
pop
fbstp
popf
out
ret
int3
(bad)
ja
and
sbb
imul
call
mov
jp
iret
icebp
push
(bad)
mov
icebp
aaa
int3
push
(bad)
stc
mov
jg
out
dec
jns
sbb
mov
dec
movs
inc
cmp
push
push
in
mov
pop
ins
scas
xchg
jmp
mov
(bad)
cmp
jnp
and
pop
int
(bad)
push
clc
enter
imul
xchg
shl
add
repnz
mov
stos
mov
test
mov
push
pop
loope
inc
jb
adc
push
xor
mov
jg
jecxz
push
popf
in
rcr
pop
cmps
movs
sti
(bad)
stos
imul
in
jge
dec
aam
das
std
movs
cmps
pop
jmp
dec
(bad)
ja
cmps
push
ds
cmp
mov
in
sub
and
mov
push
in
pop
pop
cmp
leave
repnz
hlt
sbb
xor
push
gs
out
cmc
je
in
xor
aad
mov
in
fnsave
loop
shl
push
jp
hlt
dec
fstp
push
rcl
rep
pop
cs
pop
mov
in
lds
ja
out
add
jbe
push
xchg
and
pop
out
sbb
pop
and
ins
(bad)
std
jmp
repnz
push
sbb
je
push
test
mov
aam
adc
fstp
pop
mov
dec
dec
xchg
leave
pop
in
out
inc
rsqrtps
mov
retf
outs
push
es
(bad)
pop
xchg
mov
xlat
retf
loope
in
inc
or
loope
push
ss
std
fistp
mov
mov
jbe
jp
test
cmp
mov
stc
(bad)
ja
sbb
xchg
lahf
or
sahf
or
or
mov
dec
popa
mov
(bad)
mov
ins
push
inc
push
(bad)
or
dec
ds
das
int
enter
push
mov
jnp
mov
cmc
clc
daa
aas
arpl
ja
out
jl
icebp
add
cli
pop
cmp
test
sahf
pop
add
ficom
hlt
jl
popf
inc
push
mov
stos
bound
jbe
pop
xchg
jno
or
aas
dec
test
loop
imul
outs
sbb
inc
int3
int
cs
call
pop
(bad)
fisubr
(bad)
jmp
cmps
clc
dec
cmp
ins
out
add
stos
dec
dec
fldcw
xor
adc
lds
mov
push
lock
mov
jmp
pop
mov
sbb
retf
or
(bad)
stc
ss
and
out
mov
(bad)
xlat
cli
pushf
and
imul
dec
jl
movs
cld
aaa
mov
clc
addr16
shl
sar
imul
xchg
inc
and
rol
mov
push
aad
pop
addr16
div
or
jmp
(bad)
ds
jo
das
inc
ins
out
(bad)
jp
mov
cmp
mov
mov
ins
rcr
pop
jmp
cmps
jns
lock
cmps
mov
jg
movs
mov
test
sbb
sub
leave
add
jns
add
dec
mov
scas
pop
loopne
and
xchg
jbe
popf
je
mov
lahf
inc
in
neg
test
ds
dec
es
aam
shl
xchg
fsubr
jle
mov
aas
lock
retf
cmp
mov
outs
movs
xor
out
test
stos
clc
or
jg
push
or
pop
and
cmps
mov
adc
jmp
mov
mov
imul
jg
fadd
fisub
jae
and
jg
icebp
(bad)
movs
mov
mov
aas
push
out
pushf
xchg
movs
ror
out
push
call
jbe
pop
retf
adc
ret
inc
mov
inc
lods
test
push
sti
inc
pusha
leave
in
stos
aad
or
scas
pop
clc
cmc
loop
push
push
xchg
sub
in
in
and
dec
movs
ficomp
cmp
mov
jno
push
cmp
xchg
mov
push
movs
inc
sub
sbb
pop
add
(bad)
das
xor
push
or
movs
dec
fistp
push
scas
jne
in
lock
xor
mov
repnz
test
cs
xchg
aas
repz
fdivr
add
scas
cmp
jmp
inc
aaa
leave
jge
lods
aam
fwait
and
sbb
jb
and
mov
imul
call
cmp
fidivr
js
inc
rcl
jmp
cmps
imul
xchg
movs
mov
pop
outs
loopne
push
scas
shr
mov
mov
cmp
cmps
int
push
bnd
iret
or
mov
mov
pop
sbb
hlt
push
not
xor
mov
jmp
cmp
icebp
sub
fisttp
adc
ins
test
js
sar
pop
jg
dec
cmp
xchg
xlat
xchg
leave
mov
fidiv
xor
mov
fimul
aaa
pushf
cmp
daa
add
iret
icebp
inc
mov
faddp
mov
(bad)
mov
fadd
cmp
in
sub
call
or
push
out
jbe
pop
xchg
jmp
sti
sub
loop
or
cmp
imul
adc
retf
mov
icebp
adc
inc
mov
fild
ds
jmp
jp
cmp
js
cmp
frstor
inc
add
hlt
push
fstp
call
pop
fiadd
xchg
sub
fs
fist
leave
pop
idiv
(bad)
and
or
fs
lods
std
jnp
cmp
jbe
pushf
call
lods
jns
inc
cmps
jg
fwait
mov
mov
inc
push
jl
imul
or
xchg
push
xchg
test
push
or
add
aam
pop
pop
or
push
les
jecxz
test
pop
sbb
sbb
popf
ret
mov
xchg
in
sahf
jp
pop
pop
mov
call
jp
cmp
into
fs
ins
mov
cld
xchg
cli
mov
fsubr
mov
jle
call
cdq
rcl
mov
(bad)
lock
aas
jecxz
ror
sbb
xchg
mov
sub
iret
jp
sub
xchg
in
pop
push
push
stc
mov
test
jecxz
imul
fisubr
jno
clc
leave
push
sbb
stos
cmp
retf
jmp
movs
jl
gs
(bad)
jl
and
gs
(bad)
test
out
lods
mov
dec
mov
(bad)
lahf
mov
shl
ja
sub
arpl
sahf
xchg
std
adc
and
mov
sahf
cmp
jbe
(bad)
mov
fidiv
jbe
in
stos
cli
cmc
loope
icebp
(bad)
test
xor
dec
mov
sub
pop
mov
mov
inc
or
cs
out
mov
cdq
imul
and
jno
sub
inc
mov
pop
cmp
mov
pop
imul
add
xchg
arpl
mov
mov
add
in
cmps
test
in
fisubr
mov
xchg
push
xchg
into
push
stc
jbe
mov
lods
sbb
xchg
dec
pop
clc
les
shl
imul
jmp
dec
test
fbstp
repnz
ret
adc
inc
jge
loopne
sar
movs
inc
iret
cmp
retf
mov
pop
and
sub
jb
inc
jnp
sub
ins
xor
aad
add
jge
js
dec
mov
jmp
das
jne
int3
xor
int
(bad)
loope
pop
adc
stos
add
fild
inc
(bad)
(bad)
and
movs
mov
adc
mov
out
shl
test
pop
outs
ds
jns
sbb
xchg
stos
stos
push
(bad)
mov
xor
pop
jg
inc
sbb
movs
jo
aaa
xchg
fldcw
xchg
jnp
cmp
jle
(bad)
rol
mov
mov
outs
sbb
fdiv
jns
out
jge
lods
sahf
cs
(bad)
in
sbb
cli
pushf
retf
add
call
cmp
mov
dec
cmps
mov
rol
cmp
xchg
xchg
int
imul
in
push
mov
mov
aas
push
mov
xor
pop
stos
jl
aam
cs
(bad)
jno
ret
call
sbb
lea
xchg
cmp
imul
push
jmp
adc
mov
outs
test
jne
lea
xchg
or
aas
cmp
jle
lock
jg
movs
jmp
les
fmul
(bad)
sar
fnstcw
ins
cs
(bad)
cdq
scas
ret
lds
int
dec
dec
inc
outs
mov
adc
movs
or
idiv
mov
mov
bound
xlat
mov
test
inc
imul
aad
popf
jns
inc
push
shl
dec
mov
jle
xor
ficom
mov
jb
pop
fidiv
mov
frstor
scas
cmp
pushf
jnp
pop
cmp
push
pop
mov
cdq
cmp
repnz
push
mov
lds
stc
ja
imul
fcmovu
aaa
es
test
jb
das
push
pop
sub
clc
jmp
popf
(bad)
xchg
aas
in
fstp
cli
xlat
mov
sbb
mov
jl
jmp
imul
sti
ffreep
cld
push
in
mov
xchg
push
movs
mov
fidivr
not
(bad)
sbb
pop
cmps
mov
jl
cmc
bound
cmps
dec
jns
mov
repz
loope
sbb
int
cmc
out
xor
outs
sbb
dec
xchg
fs
scas
or
in
stos
sub
ja
fcomp
test
outs
clc
into
retf
enter
in
cs
mov
ins
dec
jb
mov
mov
test
aam
sahf
retf
test
ss
ret
sbb
jmp
fdivr
sar
lds
jp
jle
loope
jae
mov
outs
test
bound
aas
popa
push
(bad)
retf
mov
test
aad
adc
iret
mov
mov
ret
pop
pop
int
mov
ret
out
pushw
(bad)
pop
mov
lahf
inc
lock
repz
shl
std
mov
loop
xchg
pop
(bad)
ja
cdq
scas
and
ret
nop
lea
std
jb
xchg
push
xchg
xchg
rcr
stos
jecxz
xchg
out
xchg
mov
mov
sbb
iret
cdq
push
pop
rcr
(bad)
cmp
add
ficomp
dec
sub
in
pop
outs
cld
mov
sub
out
mov
jne
adc
inc
cmp
pop
not
jmp
ins
or
stos
repz
jg
imul
lods
dec
data16
gs
and
in
xor
push
ret
xchg
push
jnp
lea
pop
outs
test
jle
pop
dec
loop
jle
jp
lods
call
bound
dec
xor
aaa
jp
or
mov
iret
and
neg
popa
pop
xor
add
jmp
int3
clc
mov
dec
jle
mov
addr16
fiadd
aad
xor
clc
ins
mov
hlt
fxch
adc
mov
(bad)
mov
push
or
repnz
fist
xchg
lock
dec
push
xchg
sar
xchg
adc
jb
ins
cmp
clc
call
jp
ret
xchg
lock
lods
mov
ss
cmp
sar
inc
(bad)
enter
cmc
call
sbb
xor
mov
inc
bound
fcomp
and
sub
adc
bound
daa
ins
pop
mov
add
sbb
imul
xchg
sbb
cwde
cmc
int
rcl
mov
or
imul
mov
cwde
jns
mov
loop
mov
sub
cmp
(bad)
adc
shr
mov
sbb
xor
jno
repz
xor
push
inc
add
mov
popa
inc
or
and
push
repz
mov
dec
cmp
or
sub
push
imul
dec
scas
js
ret
(bad)
pcmpeqw
popa
jae
lea
xor
push
mov
rcr
xchg
sbb
xor
mov
mov
into
movs
or
mov
cmp
sub
leave
shl
cs
inc
fdivr
icebp
bound
jle
clc
xor
repz
(bad)
mov
sbb
sub
and
fs
dec
inc
mov
adc
mov
pop
sub
xor
ds
ret
loop
(bad)
aad
(bad)
xor
aam
je
test
cmps
mov
pop
cmps
mov
inc
sbb
jae
inc
(bad)
clc
xor
mov
jg
mov
mov
dec
popf
jnp
aad
mov
jecxz
iret
xchg
arpl
fadd
add
loope
push
cld
xor
pop
fwait
jle
je
jmp
loop
in
cmps
lock
loop
xchg
bnd
sbb
test
lahf
stc
data16
aaa
scas
jle
imul
lea
inc
add
xchg
mov
hlt
mov
jo
mov
mov
and
ret
mov
ficomp
pop
jmp
mov
test
pop
pop
mov
fstp
dec
cmps
int
and
std
xchg
push
ins
mov
jae
mov
in
pop
push
test
stos
dec
(bad)
push
stos
xchg
bound
sbb
mov
fnclex
push
out
mov
mov
mov
inc
sar
add
movs
pop
je
out
inc
mov
(bad)
loop
pop
ret
or
das
mov
data16
jbe
test
xor
stos
jns
int3
fwait
movs
and
dec
jbe
popf
sub
mul
cmp
movs
jmp
mov
fs
jb
ftst
push
(bad)
retf
mov
inc
adc
outs
jecxz
fisttp
or
fwait
lods
pop
push
ret
add
mov
out
xlat
xchg
in
sub
pushf
movs
outs
pop
outs
stc
pop
in
(bad)
mov
push
test
movs
jnp
cmp
imul
mov
arpl
xchg
xchg
(bad)
sbb
icebp
in
pop
push
mov
data16
push
mov
out
ss
(bad)
dec
mov
push
or
cmp
loop
es
sti
sti
push
fucomp
xchg
(bad)
sub
sub
ins
lahf
ret
add
jge
int
lods
rcl
sahf
fst
or
pop
dec
mov
pop
mov
cmp
sub
inc
sahf
out
jl
(bad)
je
sbb
jecxz
xchg
pop
mov
(bad)
xor
add
js
lea
inc
(bad)
push
mov
and
pop
(bad)
jmp
inc
in
out
add
(bad)
jmp
pop
lock
adc
(bad)
pop
dec
mov
dec
movs
gs
in
stos
mov
add
push
dec
icebp
jae
add
imul
jl
inc
shl
daa
out
sti
mov
push
mov
(bad)
sbb
mov
call
jle
iret
or
dec
mov
ds
clc
xchg
rcr
mov
movs
(bad)
mov
aas
stc
arpl
in
out
in
ret
cmp
aaa
mov
lds
test
scas
scas
pop
dec
shr
(bad)
(bad)
xor
pop
jl
repnz
daa
sub
arpl
fs
dec
xlat
dec
cmps
pop
mov
mov
pop
pop
(bad)
mov
outs
lock
cmps
test
push
and
push
ret
sar
inc
nop
jle
xchg
in
and
ret
bound
fidiv
not
mov
or
test
ret
pop
std
in
sbb
sti
mov
jne
jae
fisub
jecxz
in
cmp
clc
xlat
aas
js
out
cld
mov
pushf
cli
lahf
pushf
xlat
xchg
pop
sbb
mov
es
scas
cmps
mov
pop
add
xchg
inc
loope
cmp
pop
add
xchg
push
sub
outs
test
dec
cmp
xchg
inc
shr
jp
scas
int
cmp
jg
jle
les
je
push
mov
jb
repz
ins
sar
fxtract
fs
add
xchg
ins
jnp
repz
mov
cmp
xchg
icebp
in
pop
js
pop
or
mov
arpl
repz
jb
aad
xchg
jle
call
inc
push
icebp
inc
sub
mov
out
cdq
jl
aaa
ds
popf
fcomp
or
scas
sub
mov
xchg
inc
cdq
jle
push
gs
sub
(bad)
dec
mov
cmps
mov
jae
inc
adc
sbb
or
call
jecxz
jmp
adc
jl
fsubrp
mov
inc
rcr
and
cmc
sti
(bad)
and
rcl
push
mov
or
pop
pop
leave
daa
or
pop
stos
fnstsw
out
push
mov
mov
sbb
and
dec
mov
xchg
push
lods
mov
fs
sbb
repnz
enter
cmp
xchg
imul
push
xor
bound
dec
mov
mov
(bad)
repnz
outs
push
or
mov
jmp
sbb
pop
fbld
push
inc
push
mov
stos
pop
push
inc
push
aam
sar
out
mov
mov
lea
out
cmp
inc
out
dec
dec
lods
inc
in
sub
pusha
shl
sar
inc
xchg
pop
xchg
pushf
leave
ss
xchg
cmp
xor
int
shr
shr
in
int
and
inc
sbb
stos
in
ret
aas
lods
mov
shl
ret
push
clc
test
and
lods
hlt
imul
jns
jl
cld
inc
jp
sub
push
fnstsw
jnp
fisttp
(bad)
test
ja
out
daa
jbe
jg
stc
stos
sar
cmps
call
cli
mov
in
xchg
or
stos
lahf
xor
aad
dec
or
xchg
scas
pop
mov
in
cli
mov
fcmovu
stos
pop
retf
int3
out
shl
adc
imul
push
cmp
mov
adc
pop
test
sahf
and
movs
ret
repnz
or
ret
jbe
dec
lods
imul
jns
jp
sub
gs
mov
lahf
push
mov
ins
shl
mov
xchg
and
fld
sbb
clc
xchg
dec
shr
push
cli
(bad)
push
sbb
push
repnz
outs
mov
pushf
or
lock
(bad)
test
jne
adc
mov
cmp
(bad)
es
mov
jns
sar
and
enter
call
cmp
mov
bnd
mov
mov
icebp
mov
mov
jne
call
dec
js
(bad)
pop
xchg
mov
lds
push
xchg
xor
fstp
mov
fild
scas
push
fadd
int
jnp
sub
lock
fwait
sub
movs
xchg
mov
outs
sbb
iret
mov
jns
in
jecxz
fstp
js
push
scas
and
or
out
bound
icebp
scas
mov
bound
pusha
fstp
jg
fild
aad
(bad)
out
push
out
sbb
sahf
adc
jmp
sti
sbb
jnp
mov
dec
or
xchg
dec
pushf
test
cmp
int
fwait
jmp
pop
mov
ret
pop
int
sbb
mov
jmp
cld
stos
out
adc
jne
popf
jns
jge
push
xchg
in
mov
add
in
xor
or
ins
aas
push
(bad)
rol
int
rol
jbe
mov
jbe
fcomp
or
lods
push
iret
dec
shl
fadd
mov
inc
outs
fs
push
leave
cmp
or
jae
in
mov
aad
stc
in
out
xchg
sbb
jp
out
imul
sub
jp
in
adc
movs
std
sub
outs
adc
lods
leave
mov
inc
push
outs
data16
(bad)
idiv
jne
add
or
mov
sub
sub
fadd
xchg
(bad)
popf
mov
(bad)
into
or
adc
retf
out
fild
imul
iret
inc
repz
mov
cmp
jns
mov
mov
popf
push
jns
scas
icebp
sbb
lods
push
or
xor
mov
clc
shr
jae
clc
stos
push
mov
and
push
push
popf
fadd
pop
loope
pop
xchg
cmp
in
mov
fdivr
push
aas
neg
loop
mov
sub
cmp
xchg
mov
(bad)
movs
fidivr
or
fbld
cmp
jns
jmp
push
cmps
jmp
add
imul
repz
pop
sbb
iret
imul
adc
(bad)
lahf
mov
inc
jnp
xchg
push
stos
scas
cli
lds
xor
aas
stos
inc
movs
fisubr
test
test
mov
mov
mov
sub
sbb
loope
mov
fidivr
aad
addr16
fld
(bad)
(bad)
inc
fsub
scas
js
(bad)
add
xchg
pop
cmps
inc
push
lahf
loope
cld
stos
cmp
data16
mov
sbb
mov
cld
xor
adc
add
out
bound
mov
lock
gs
movs
shr
loopne
cmc
(bad)
les
pop
test
mov
lods
jg
xor
loope
xor
ret
pop
int
jg
mov
(bad)
pop
inc
mov
mov
sbb
aas
out
and
hlt
loopne
fs
pop
dec
mov
fcomp
mov
dec
loopne
push
popa
test
inc
lock
push
sbb
out
mov
hlt
into
jae
mov
xchg
push
push
lods
push
jmp
push
push
lea
sub
(bad)
out
in
int
xchg
mov
pop
inc
pop
xor
gs
out
jecxz
fidivr
std
(bad)
out
test
outs
xchg
scas
es
fisubr
shl
xlat
ins
dec
aas
sub
inc
adc
mov
movs
mov
ret
jo
ret
ror
fwait
icebp
cmovb
or
push
retf
retf
pop
mov
xor
scas
addr16
test
sbb
(bad)
xchg
jge
mov
movs
out
and
adc
daa
and
inc
mov
or
xlat
pop
add
cld
pop
jecxz
clc
scas
loopne
pop
cwde
je
xchg
ds
movs
fdiv
int
xor
xchg
clc
mov
dec
jle
mov
sti
push
or
mov
fnstcw
movs
jmp
xor
nop
inc
xchg
ins
test
dec
mov
adc
imul
jb
mov
inc
lods
cmp
or
add
and
fidivr
fisttp
jecxz
sub
dec
mov
inc
test
test
mov
sub
mov
sbb
jmp
fnstenv
cmp
jmp
movlps
sti
sbb
xor
das
xchg
ret
mov
outs
push
out
das
(bad)
addr16
jbe
add
mov
stos
cld
sub
sub
aam
int
icebp
pop
dec
cmp
(bad)
xor
cmp
mov
jo
xchg
inc
fiadd
mov
cmc
mov
pop
div
dec
push
push
sti
into
mov
xchg
inc
mov
xor
pop
mov
fsub
mov
jg
jl
lock
mov
jo
(bad)
sti
test
mov
cmp
out
and
imul
ds
aam
push
test
mov
lds
lock
adc
mov
mov
jmp
aaa
xor
and
mov
inc
mov
jl
outs
stos
js
les
pop
clc
xchg
push
mov
ins
movs
(bad)
inc
dec
dec
cmp
jp
js
scas
sub
dec
lods
fnstcw
fcmovb
(bad)
sbb
xor
jno
mov
aas
jp
xor
repz
add
cld
popa
scas
js
push
icebp
or
pop
loop
cmp
(bad)
in
cmp
sti
inc
jmp
jbe
sub
dec
dec
inc
enter
stos
into
idiv
repz
dec
or
jmp
mov
push
imul
test
sbb
inc
loope
xor
jmp
mov
sub
and
std
fcom
outs
aad
imul
imul
add
jne
pop
jecxz
mov
adc
rcr
sbb
aas
vpshufd
out
ss
pop
shr
sbb
pop
inc
movs
dec
neg
ret
mov
push
adc
fadd
sbb
pop
mov
dec
mov
rcr
adc
cld
outs
clc
fucom
pop
mov
arpl
and
shr
movs
nop
scas
aad
test
cmc
scas
sub
push
movs
lods
ins
mov
ins
fwait
push
xor
fimul
adc
ja
mov
(bad)
lods
mov
jo
sub
test
and
call
lods
clc
(bad)
sub
cmp
retf
mov
xor
jbe
dec
cmp
lods
retf
jmp
stos
mov
int3
fwait
lea
jbe
(bad)
(bad)
mov
dec
mov
push
jo
ret
add
mov
jae
sub
sub
dec
jg
xor
mov
stc
pusha
mov
gs
inc
(bad)
test
pop
dec
mov
jl
push
cmp
(bad)
cmc
jge
lock
push
cmps
icebp
pop
loope
mov
inc
mov
and
inc
retf
xor
jp
repz
test
pop
mov
lahf
sub
cli
push
dec
scas
pop
pop
jmp
pop
pop
jge
jge
out
(bad)
sub
push
cmp
paddb
xchg
sub
jne
xchg
pop
scas
inc
dec
adc
add
lea
ret
cdq
and
rcl
inc
in
jmp
fisttp
shl
(bad)
scas
clc
out
mov
inc
in
(bad)
(bad)
into
bound
add
shr
adc
into
sub
test
adc
lods
cmp
sar
jns
add
dec
jnp
pop
sahf
mov
clc
xchg
shl
ja
xor
pop
popa
outs
and
dec
add
rcl
inc
ds
outs
cdq
xchg
push
(bad)
daa
loopne
inc
or
out
cs
out
and
es
cwde
loope
dec
fimul
in
dec
dec
scas
jp
(bad)
pop
popf
push
into
cmp
add
mov
addr16
ja
inc
adc
scas
sub
pop
push
daa
jecxz
jge
ret
(bad)
icebp
(bad)
adc
sub
not
mov
mov
xlat
inc
icebp
jae
jmp
movs
fcmovbe
fmul
es
std
rcr
xchg
adc
push
mov
adc
repz
retf
enter
rcl
loop
repnz
ss
in
mov
cmp
stc
sahf
mov
pop
int3
mov
pop
pop
std
xchg
fldcw
and
mov
rep
and
push
mov
mov
and
mov
add
test
mov
dec
fld
adc
in
mov
lahf
mov
add
stos
cld
into
dec
jb
or
leave
pop
int
cld
fucomip
push
ins
not
mov
and
sbb
jge
xchg
jge
lods
xlat
xchg
xchg
int3
repnz
out
out
jecxz
mov
cmp
ss
push
dec
fisttp
jmp
shr
mov
out
ds
mov
addr16
push
and
cmp
iret
inc
mov
dec
cmp
fist
jne
mov
jns
aaa
inc
pop
or
retf
ds
test
test
ins
scas
sub
add
push
dec
retf
out
scas
enter
mov
sub
lahf
and
ins
mov
pop
xchg
into
xchg
mov
mov
sub
lea
pop
mov
xchg
fsubrp
sti
push
jg
jmp
jg
inc
fild
jnp
xlat
push
jne
imul
aas
push
mov
fistp
cli
div
test
mov
dec
lods
fmul
aas
ja
adc
and
jecxz
imul
test
aad
push
stos
loop
jno
pop
ins
cmps
xlat
inc
ror
sub
sub
xchg
call
cmp
mov
mov
imul
gs
(bad)
rcl
mov
(bad)
and
xor
or
into
out
mov
aad
std
in
jge
jmp
fidiv
test
shl
jno
ret
jae
cmps
int3
lods
scas
bound
test
(bad)
out
call
xor
fnstcw
jmp
xlat
xchg
test
sub
mov
call
mov
iret
inc
push
sbb
sub
fbstp
sti
mov
mov
repnz
add
test
inc
hlt
mov
jl
icebp
xchg
jecxz
sub
imul
test
(bad)
rcr
adc
xchg
cmps
mov
jp
ret
mov
dec
neg
mov
and
idiv
xor
lods
mov
jp
and
pop
into
xor
fist
int
jle
mov
jnp
mov
xor
das
mov
dec
mov
xlat
pop
jge
imul
cmc
fisubr
cwde
in
fcmovnu
adc
imul
pop
push
jmp
mov
loope
shl
jns
lahf
sub
pop
jp
jo
push
sbb
xor
mul
lods
pop
mov
lods
mov
ins
dec
push
rol
das
sbb
sbb
jp
les
or
lahf
imul
sub
stc
jle
fwait
(bad)
lea
mov
scas
jae
hlt
cmp
data16
mov
(bad)
in
push
push
mov
dec
inc
into
das
mov
adc
inc
mov
push
lahf
(bad)
inc
ins
imul
loop
inc
std
fdivr
xor
pop
xchg
test
(bad)
mov
mov
out
(bad)
mov
dec
or
jg
fdivr
mov
imul
call
lea
test
mov
inc
cmp
ins
out
xor
jns
call
pop
lea
lock
push
or
fwait
dec
sub
imul
das
(bad)
std
(bad)
fstp
cmp
jbe
out
pop
jmp
pop
ror
mov
inc
xchg
push
ret
mov
ficomp
imul
push
fldcw
repnz
sbb
sbb
call
sbb
out
xchg
js
sar
in
pushf
ja
mov
mov
mov
cdq
mov
aad
dec
adc
jle
dec
sar
dec
in
push
mov
int
sbb
pop
add
lea
dec
das
stos
mov
jmp
call
add
adc
xor
jmp
cmp
mov
mov
mov
jecxz
cmp
(bad)
mov
ret
mov
icebp
(bad)
gs
(bad)
stc
cmp
aam
fcomi
rcr
xor
in
push
rol
jnp
popf
shl
loop
into
adc
xor
in
aad
loop
ret
cmp
add
jg
ret
pop
gs
fsubr
ficomp
(bad)
and
jns
inc
(bad)
cmc
jb
adc
mov
lds
jge
fsubr
(bad)
mov
inc
mov
pop
iret
xor
scas
cmp
and
imul
xor
jne
xchg
test
sti
push
push
lahf
aad
push
pop
ror
jne
test
gs
lea
xor
or
push
jmp
addr16
std
cmc
rcr
sbb
xlat
daa
jecxz
inc
dec
mov
mov
inc
lahf
repnz
mov
jge
scas
stos
ret
jp
jmp
cmp
mov
jbe
int3
add
xchg
scas
jmp
inc
adc
pop
jnp
hlt
xor
pop
jp
and
(bad)
call
mov
cmp
jecxz
adc
fisubr
outs
stc
addr16
popa
(bad)
cmc
pop
shr
dec
mov
mov
test
jge
jg
out
mov
jbe
in
scas
out
test
(bad)
daa
mov
xor
jg
sbb
inc
push
in
repnz
leave
adc
sub
es
push
xchg
inc
in
add
lock
sbb
iret
jl
icebp
mov
arpl
mov
xchg
add
leave
scas
xchg
loope
lds
and
in
mov
pop
inc
sbb
xor
mov
pop
sub
sub
jns
cs
jmp
adc
cmc
mov
pop
int3
inc
adc
retf
xchg
pop
inc
mov
js
loope
in
mov
dec
xchg
(bad)
icebp
mov
add
pop
xchg
dec
lahf
rcr
hlt
xchg
inc
lock
sahf
mov
gs
xchg
in
fidiv
fstp
scas
mov
mov
movs
popf
lds
mov
dec
mov
inc
or
(bad)
rcr
hlt
dec
test
imul
stos
cmps
pop
int
aas
loop
icebp
jecxz
inc
jmp
dec
mov
push
test
stos
pop
or
cdq
jmp
mov
(bad)
out
or
dec
pop
aad
das
fcomp
pop
js
inc
imul
daa
cmp
inc
jg
imul
clc
ja
pop
dec
lock
test
mov
shr
dec
nop
inc
xor
or
jb
pop
sub
mov
shr
cmp
mov
loop
retf
or
sub
and
inc
and
cmp
push
clc
push
icebp
pop
sub
aad
in
cmc
inc
fsub
in
xlat
push
clc
mov
ja
xchg
jmp
jmp
xchg
jne
sbb
outs
test
fsubr
cmp
xor
iret
fistp
iret
push
lock
lods
xor
sub
out
xor
hlt
cdq
fwait
dec
aam
aas
jg
sub
in
jl
mov
ss
sar
in
jp
xor
lock
retf
xchg
inc
jnp
loope
movs
xor
stos
nop
imul
mov
sub
out
aas
mov
xchg
pop
lock
popf
les
iret
popf
dec
js
xchg
repnz
scas
daa
ret
jmp
sbb
xor
pop
out
ret
pop
xchg
pop
inc
test
jns
(bad)
loopne
jecxz
push
inc
lods
lods
jns
mov
pop
pop
fcomp
scas
out
mov
sub
movs
in
aas
mov
lods
inc
push
xchg
scas
imul
fucomip
mov
pop
lods
mov
clc
and
xor
push
movs
daa
aam
jno
addr16
inc
je
lock
mov
pop
enter
add
mov
enter
pop
cmp
in
xchg
fisubr
sbb
adc
add
mov
or
mov
out
daa
fchs
mov
mov
or
(bad)
jbe
jnp
pop
mov
sub
out
mov
lahf
std
lahf
jl
cmp
pop
dec
and
mov
pop
enter
cli
sub
dec
jb
ja
sbb
mov
lea
inc
xchg
and
pop
mov
xchg
fisttp
retf
mov
cwde
in
cdq
outs
jb
cs
sub
push
jl
clc
pop
mov
ret
cmp
cmc
dec
fld
out
fs
xor
nop
out
daa
or
xchg
pop
inc
jl
lock
test
xor
sbb
push
mov
inc
call
and
aad
jl
sub
jmp
into
sub
lahf
sub
mov
and
inc
sbb
data16
xor
test
adc
enter
xchg
jbe
test
mov
jle
xchg
test
lock
outs
sbb
and
rol
je
and
mov
cmc
dec
or
push
dec
sub
mov
out
gs
xor
in
lock
mov
sbb
lods
cmc
pop
jno
loopne
add
out
push
sahf
icebp
ja
mov
mov
imul
and
fldenv
pop
icebp
pop
jg
outs
mov
fcmovu
clc
xchg
lods
ins
fnstsw
and
call
aas
clc
icebp
jecxz
icebp
adc
int3
das
loopne
pop
les
pop
xchg
test
jecxz
mov
mov
jne
icebp
mov
xchg
xchg
sahf
mov
xor
dec
cmp
cmc
dec
lock
mov
mov
sub
jnp
adc
sub
jne
(bad)
pop
sub
dec
mov
xor
xchg
stc
mov
add
adc
and
fild
cs
pop
mov
fld
pop
add
xlat
aad
dec
lock
movs
mov
addr16
fisub
scas
mov
push
mov
push
aad
je
ficom
xchg
jnp
imul
sbb
shl
lods
repnz
xor
xchg
pop
pop
adc
mov
sub
jnp
and
repz
aas
lock
leave
repz
push
int
jmp
xchg
in
out
aas
jbe
sahf
push
mov
in
jge
pop
cmps
or
scas
int3
repnz
cmp
hlt
std
setg
out
gs
aad
loop
es
inc
inc
mov
sahf
and
pop
and
jge
push
gs
cmps
xchg
xchg
cmp
sar
xlat
in
adc
pop
push
push
movs
jl
cmp
mov
fcom
in
shr
add
scas
inc
test
adc
fcmove
daa
fdivr
sar
and
ss
cmc
mov
das
bound
stc
fwait
xchg
dec
mov
loopne
icebp
sbb
fcomi
aas
push
inc
jno
push
mov
mov
dec
mov
in
push
(bad)
sti
cmp
aas
aam
jecxz
add
scas
mov
fwait
mov
fcmovnbe
xor
mov
lods
pop
ins
mov
ss
clc
push
mov
iret
jle
sub
lea
pop
mov
(bad)
pop
cmp
cmp
mov
mov
scas
jmp
out
sub
jecxz
jp
ret
sahf
mov
dec
mov
xor
(bad)
adc
pop
mov
sahf
pop
std
fwait
scas
aaa
mov
fadd
fwait
jg
pop
loope
mov
pop
xor
frstor
out
sti
mov
sbb
push
dec
movs
retf
xor
inc
scas
mov
push
inc
inc
call
lds
(bad)
das
int
fwait
xchg
int
inc
dec
pop
movs
pop
cmp
aad
dec
push
fcom
out
ja
xchg
mov
ss
outs
out
inc
mov
xchg
pop
jbe
mov
sti
push
test
jle
stc
push
push
aam
mov
retf
lahf
loope
jnp
fbstp
inc
mov
shr
stc
jle
fwait
movs
inc
xor
outs
and
daa
xchg
add
cmp
and
xchg
add
ins
sub
std
xchg
mov
jecxz
cs
ret
mov
rcl
pop
jmp
dec
mov
cdq
pop
jl
stos
(bad)
test
mov
inc
icebp
ins
ja
mov
fstp
outs
xchg
jmp
aas
or
outs
jecxz
mov
xor
push
gs
adc
push
outs
jb
jecxz
cmp
ret
js
iret
sar
mov
shl
popa
fs
cmp
sbb
fst
pop
(bad)
out
push
imul
cmp
push
mov
outs
int3
push
jo
shr
fidivr
int3
mov
es
mov
retf
arpl
fsubr
stos
push
ret
cmp
ins
stos
mov
jae
cmp
jecxz
vmread
dec
lods
je
push
sub
in
jecxz
sub
jecxz
in
pop
mov
inc
js
stos
cmc
fstp
dec
mov
push
fwait
jecxz
dec
aaa
aaa
neg
lds
and
dec
(bad)
movs
jge
(bad)
mov
mov
cwde
popa
popa
mov
aas
es
xor
xchg
(bad)
out
xchg
jmp
cmps
and
push
stos
addr16
lods
repz
mov
inc
inc
push
ficom
jg
inc
mov
mov
fwait
out
jbe
das
mov
mov
inc
fs
retf
mov
(bad)
and
(bad)
les
out
in
outs
xchg
out
jmp
mov
cmps
mov
not
repnz
xor
push
mov
sub
pop
out
inc
push
in
fild
jecxz
dec
push
push
fild
(bad)
cli
push
shr
mov
sbb
cmp
(bad)
jp
jo
std
sub
jl
loope
sub
loope
mov
das
ins
(bad)
shr
(bad)
sbb
fs
imul
mov
cmp
es
mov
or
add
icebp
jge
loope
cmp
ret
xchg
mov
lock
enter
inc
cmc
scas
les
das
lods
mov
pop
out
neg
fistp
inc
out
jle
out
jo
sub
aas
xor
mov
jge
inc
pop
cmp
xchg
inc
test
repz
lods
clc
dec
icebp
jae
lock
xchg
gs
imul
sub
jmp
jle
icebp
ss
fistp
pop
dec
loope
dec
push
mov
sub
sub
in
mov
mov
daa
dec
mov
in
sub
in
mov
es
dec
fdiv
lods
mov
push
xchg
xchg
stc
cmps
jge
arpl
iret
jmp
test
in
mov
mov
and
not
inc
shr
aad
ins
data16
pop
push
xchg
jg
jne
sar
data16
sub
cmps
cmp
add
xor
add
inc
jb
ja
sub
enter
adc
call
pop
popf
cdq
lods
xlat
pop
mov
dec
(bad)
repnz
xor
push
mov
icebp
cmp
or
add
mov
(bad)
retf
stos
jo
pop
sub
dec
bound
cmp
jmp
lahf
jecxz
psubb
(bad)
mov
retf
fs
aas
inc
inc
jbe
stos
ficom
inc
sahf
into
sub
mov
mov
movs
jae
ds
icebp
loope
jnp
mov
fsubr
(bad)
popf
mov
mov
xor
imul
pop
dec
mov
pop
add
xchg
sub
cs
arpl
pushf
icebp
mov
jno
scas
fistp
jnp
neg
popa
push
js
sub
lods
jl
fstp
pop
xchg
mov
loop
mov
popa
jecxz
jge
ret
icebp
shl
fnstcw
pop
push
xchg
out
test
xor
sbb
jb
adc
dec
pop
pop
mov
pop
jmp
xchg
mov
inc
fcom
sahf
sub
loop
(bad)
cmps
push
cmp
mov
dec
cli
inc
pop
jns
pcmpgtw
loop
lahf
(bad)
in
mov
push
lock
popf
push
xlat
push
cmp
mov
dec
mov
mov
je
rol
scas
pop
(bad)
pop
mov
(bad)
jne
retf
xor
int
pop
(bad)
sub
jecxz
cmp
xchg
sbb
in
sub
je
(bad)
push
sub
xchg
mov
lods
scas
nop
mov
sub
(bad)
pop
sahf
cmps
mov
mov
xor
mov
sub
jno
ror
cld
xchg
sbb
adc
shl
add
sub
mov
jecxz
xchg
inc
icebp
push
neg
mov
js
scas
and
leave
(bad)
cwde
psubb
pop
inc
loop
mov
jmp
cdq
mov
pop
inc
cmp
cld
movs
and
pop
test
mov
in
add
pop
scas
push
rcr
imul
loope
mov
cmps
lahf
sbb
jbe
pop
or
mov
mov
mov
add
mov
or
cmp
outs
int
out
mov
les
cmp
out
(bad)
pop
mov
mov
aas
adc
addr16
mov
xchg
adc
movs
iret
mov
repz
jns
ret
gs
push
jmp
ret
jmp
dec
xor
(bad)
fwait
ins
mov
pop
jnp
out
out
xchg
ss
adc
xor
int3
push
inc
push
jne
aas
ret
arpl
and
outs
fisttp
add
rcr
and
jle
xchg
out
dec
rcr
xor
stos
int
stos
bound
ret
sub
xlat
fwait
pop
or
aam
and
movs
mov
jle
dec
int
sbb
xlat
lds
icebp
pop
sub
adc
and
aaa
push
test
jle
jp
out
mov
adc
dec
shr
jmp
xlat
xor
(bad)
neg
adc
push
loope
cmp
inc
lock
jp
mov
stos
shr
gs
or
cmp
sbb
scas
push
sar
cmp
sbb
fild
adc
xchg
inc
push
sbb
mov
sub
sar
fstp
pop
pop
(bad)
fnop
lds
pop
mov
aas
mov
sti
fs
add
push
(bad)
xchg
sub
jo
pop
test
retf
jg
pop
fsubr
push
repnz
cmp
sbb
cmp
pop
aaa
pop
aam
cld
ficomp
cli
xor
icebp
jns
fs
bound
sub
out
das
shl
sub
xor
outs
xor
mov
imul
and
or
in
pop
stos
mov
adc
jmp
hlt
out
lods
mov
loope
in
mov
cmp
cmp
loopne
adc
pop
cdq
arpl
mov
ds
out
sub
dec
jmp
jle
(bad)
cli
(bad)
das
sbb
cmp
gs
call
cmp
fbstp
xchg
inc
cmc
(bad)
pop
sar
fist
mov
clc
scas
fild
mov
mov
or
mov
mov
cs
and
mov
es
in
xchg
dec
cld
int
inc
xchg
xlat
pushf
jno
pop
dec
or
mov
das
mov
scas
stos
cmps
in
scas
stos
jnp
xchg
jl
jns
xchg
dec
inc
fs
mov
adc
sbb
sar
add
inc
shr
(bad)
jno
sahf
aad
jg
xor
int
xchg
cmp
sub
scas
jle
cmc
int
jmp
mov
push
lea
sbb
adc
hlt
popa
xor
pop
fnstsw
cmp
or
(bad)
jnp
mov
jle
stos
(bad)
pop
inc
xchg
mov
repz
int
repnz
stos
mov
(bad)
out
dec
stos
and
outs
outs
mov
xchg
jmp
jg
imul
pop
fidivr
mov
dec
and
add
pop
sti
fwait
div
aas
loop
xchg
adc
das
adc
mov
adc
outs
pop
pushf
add
ds
xchg
stos
pop
scas
mov
mov
sbb
arpl
mov
xor
imul
aas
aad
(bad)
fiadd
mov
cmc
pop
popf
not
(bad)
retf
ret
and
cmp
out
xor
imul
movs
inc
movs
pop
fnstcw
leave
mov
and
mov
int
les
adc
aam
aad
aam
retf
mov
mov
call
add
mov
mov
push
inc
std
sub
xchg
popa
lock
xchg
push
test
pop
mov
lods
movups
iret
sbb
sar
bound
pop
aas
mov
loopne
das
das
out
adc
cmp
iret
popf
es
cs
mov
lahf
out
pop
stc
mov
(bad)
dec
mov
jae
fidiv
adc
and
push
jo
mov
leave
sahf
pop
fs
cmp
jecxz
(bad)
cmps
cwde
ins
in
out
and
daa
xchg
(bad)
sub
mov
inc
scas
imul
dec
xchg
ins
loopne
lods
and
mov
xor
fbstp
mov
sbb
jecxz
cmc
leave
and
ins
pop
into
mov
dec
mov
sbb
int3
cmp
stos
pop
test
push
icebp
xchg
(bad)
test
sub
cs
jnp
push
sub
mov
jle
jmp
cli
jle
mov
int3
push
adc
lahf
push
adc
movs
mov
std
out
loopne
call
xchg
mov
mov
mov
xchg
das
fimul
xchg
clc
push
mov
push
std
out
xchg
in
push
cli
push
xlat
pop
sbb
cmp
add
or
leave
sbb
mov
dec
xor
call
inc
imul
add
repz
daa
or
cli
cld
inc
pop
dec
xchg
xchg
sub
pop
sbb
ds
xchg
mov
fnsave
repz
mov
or
les
xchg
aaa
xchg
xchg
push
cs
sbb
jnp
mov
outs
push
lock
(bad)
mov
jae
fistp
imul
jae
fnsave
fdivp
push
inc
loop
out
sub
dec
dec
pop
ja
jne
iret
mov
mov
dec
aam
push
mov
pop
mov
(bad)
push
not
std
mov
sti
(bad)
pop
mov
dec
sub
loopne
outs
mov
jecxz
shr
sub
mov
jae
jle
movs
jp
cmp
vmptrst
(bad)
xchg
sub
lock
jnp
scas
cmp
les
push
movs
imul
push
out
xchg
bound
jnp
aas
add
lock
cmps
stos
mov
retf
ins
stos
mov
xchg
out
mov
out
daa
cmp
in
push
inc
push
retf
(bad)
ins
mov
(bad)
outs
cdq
in
pop
(bad)
mov
inc
call
mov
(bad)
jmp
mov
jnp
inc
mov
popf
arpl
shl
xchg
push
mov
stos
pop
ret
dec
ins
sbb
repz
mov
jae
popa
repz
mov
out
scas
mov
js
(bad)
popw
xor
into
jge
pop
push
jge
mov
popa
imul
dec
inc
sti
fnsave
mov
mov
add
movs
pop
popf
dec
inc
inc
sar
std
movs
mov
imul
or
imul
mov
dec
lock
add
jmp
outs
push
fiadd
fstp
or
shr
in
out
shl
aad
fwait
out
mov
sbb
jl
aam
inc
add
fisttp
dec
lahf
ret
mov
repnz
mov
xor
push
inc
mov
repz
pop
and
push
cmp
inc
imul
jne
std
(bad)
jno
scas
outs
mov
movs
or
sti
into
outs
loopne
aad
popf
icebp
pop
fsubp
mov
mov
mov
in
xor
arpl
jg
jmp
fst
pop
pop
in
stc
(bad)
icebp
loopne
and
xor
cmp
ret
mov
outs
cmc
xchg
fs
ins
or
xchg
xor
mov
mov
mov
fistp
jmp
jl
jns
js
inc
lods
dec
xor
repz
icebp
add
sub
mov
int
cld
popa
ja
push
inc
out
push
cmps
dec
push
imul
dec
retf
das
or
call
call
jns
dec
imul
xchg
mov
popf
repz
popf
cs
mov
in
dec
pop
shl
mov
imul
mov
inc
fidivr
ins
stc
ja
stos
scas
sti
pop
sub
scas
mov
outs
test
mov
jg
sahf
pop
lock
sub
jl
test
mov
mov
mov
shl
leave
mov
inc
repz
cld
mov
xor
out
(bad)
push
cld
cmp
jmp
xor
lds
dec
(bad)
test
aad
jmp
repz
sbb
dec
call
imul
stos
and
mov
jecxz
cmps
jo
test
fidivr
clc
jge
fcomp
in
sahf
dec
mov
iret
test
out
mov
sti
cmp
shr
mov
out
adc
das
movs
fnstenv
popa
fistp
ja
shl
pextrw
scas
mov
fst
sub
sbb
pop
mov
jecxz
cmp
jl
add
(bad)
mov
mov
dec
pop
cmp
into
hlt
pusha
mov
pop
jg
pop
sbb
imul
lods
ins
test
aam
lea
adc
cmp
imul
movs
cmps
ret
sbb
xor
adc
push
cmp
sub
sub
ds
mov
mov
add
mov
mov
or
test
jo
aaa
sti
(bad)
fs
xlat
lock
js
pop
push
cdq
pop
out
and
jmp
leave
daa
xchg
push
mov
mov
mov
mov
jno
pop
and
in
arpl
xchg
ja
sbb
pop
jg
repnz
pop
mov
mov
xchg
inc
sahf
sub
lea
xor
cmps
jg
(bad)
mov
push
in
pop
mov
jle
scas
cli
inc
pop
mov
pop
clc
jle
sbb
scas
lods
outs
jno
dec
cli
mov
imul
scas
call
ja
xlat
dec
gs
and
xor
fcmovu
call
jge
cmp
push
or
das
xchg
leave
out
mov
sbb
shl
and
mov
mov
(bad)
into
mov
or
ins
das
ret
jge
mov
shl
jg
add
es
dec
mov
dec
aad
pop
ret
pop
loopne
clc
jg
xlat
xchg
xchg
pop
ins
arpl
cmp
cmc
repz
pop
popa
mov
test
pop
push
dec
mov
jne
xchg
dec
stos
mov
pusha
sahf
cs
pushf
loopne
aad
ins
mov
inc
xor
and
xchg
push
lods
outs
retf
iret
mov
das
adc
xchg
loop
ins
je
mov
jns
sbb
jecxz
cmp
je
cmp
or
test
out
pop
jb
sub
imul
test
jno
adc
push
jnp
js
sub
jno
outs
in
imul
fsub
sahf
pop
push
push
imul
jle
std
fwait
ins
out
sbb
jb
mov
(bad)
into
neg
nop
mov
stos
inc
ret
jle
sbb
cs
xchg
popa
in
sbb
jmp
sbb
push
mov
push
ss
dec
cld
mov
call
retf
jb
(bad)
in
es
cwde
out
jo
push
dec
xor
sub
div
pop
loop
int
std
cli
jns
stc
lock
test
sub
movs
mov
shl
cdq
cmps
outs
and
mov
mov
pop
pop
pop
cld
pop
icebp
movs
fwait
sub
xor
ins
push
jmp
clc
outs
in
sar
add
cmp
int
adc
call
mov
pop
int
mov
jl
imul
arpl
(bad)
into
push
sbb
lea
retf
cmps
imul
mov
xor
push
in
jl
cdq
mov
stc
xchg
cmp
out
repnz
lods
ins
add
leave
pop
ss
xchg
mov
mov
cmp
xchg
js
sahf
movs
sti
dec
js
pop
(bad)
shl
mov
loop
or
shr
mov
xor
push
inc
enter
int3
pop
mov
jle
fidivr
xchg
cmps
std
add
(bad)
mov
jle
cmps
jmp
cdq
inc
mov
jo
inc
lahf
out
push
int
push
sar
stos
cmp
jg
mov
stc
outs
cmp
inc
and
mov
mov
push
(bad)
xchg
(bad)
xchg
cmp
sub
inc
dec
sbb
dec
inc
(bad)
dec
enter
lods
jecxz
mov
icebp
pop
les
push
icebp
pop
pop
lahf
push
aad
cli
aas
mov
xor
jns
xor
xor
mov
mov
jl
lock
sti
inc
cld
push
shl
out
ins
hlt
cwde
outs
outs
cs
mov
jo
outs
out
adc
pop
adc
ins
icebp
outs
mov
pop
je
sub
(bad)
jb
pop
pop
and
imul
ret
lea
mov
pop
fadd
dec
jae
jl
or
or
dec
inc
cmp
mov
pop
leave
in
out
fucomip
jbe
test
inc
pop
cli
pop
push
jl
lock
test
jle
or
cli
jl
dec
fsub
push
xchg
push
arpl
push
out
pop
or
mov
shl
jnp
aas
dec
mov
mov
inc
jecxz
sahf
sub
push
mov
das
and
jmp
pop
clc
mov
and
test
clc
jnp
or
ss
xchg
shl
xchg
sub
loop
jl
clc
nop
in
dec
cmps
jmp
sub
adc
jmp
xor
aam
cmc
jp
data16
int3
ficomp
lods
lods
repz
cli
sbb
neg
dec
add
or
jb
cli
xlat
call
adc
adc
ja
aad
shr
hlt
aam
mov
or
popa
mov
sbb
(bad)
mov
jbe
mov
lock
sahf
mov
and
xchg
out
pop
pusha
ins
(bad)
pop
jecxz
lock
sar
jp
call
hlt
or
bound
push
cmc
bnd
daa
xor
rcl
push
mov
outs
enter
cmp
mov
icebp
inc
xor
aad
(bad)
div
xchg
cdq
sbb
ror
ins
pop
clc
adc
ins
loope
fbld
and
jae
jns
jmp
pop
aaa
call
inc
stc
jle
pop
mov
pop
sub
js
outs
clc
popf
push
pushf
jg
xlat
leave
inc
cmp
clc
inc
push
cmps
adc
pop
jnp
xlat
test
int
scas
(bad)
gs
mov
push
fcmovu
xor
ffreep
(bad)
sbb
mov
in
mov
mov
in
add
out
pop
clc
test
xchg
pop
ins
daa
jg
cmps
aaa
mov
dec
and
retf
mov
pop
stos
jns
jl
jne
imul
in
pop
and
in
retf
out
cs
xchg
push
lahf
fidiv
xchg
(bad)
int
cdq
xchg
scas
mov
(bad)
aad
imul
lds
mov
cwde
cmps
mov
loope
xchg
cmp
cmp
jnp
pop
sbb
shl
popf
out
loop
arpl
mov
ror
cmp
inc
mov
push
pop
sub
bound
outs
scas
not
push
xchg
mov
dec
xchg
out
push
dec
mov
repnz
inc
les
cmp
cmps
in
xchg
pop
jno
js
xchg
or
sub
daa
cmp
psrld
dec
clc
xchg
jns
mov
cmp
mov
and
or
fcom
jbe
or
pop
xor
jb
inc
cli
std
syscall
dec
fxch
mov
mov
test
pop
fdiv
ds
sti
xchg
xlat
jo
push
jp
mov
rcl
mov
xor
fldenv
push
xlat
xchg
imul
mov
adc
jl
xchg
xor
ror
fstp
sbb
psrad
add
cmp
and
mov
(bad)
fsubrp
into
into
into
jge
pop
fnstenv
arpl
(bad)
dec
jmp
loope
pop
inc
fs
(bad)
repnz
mov
mov
and
pop
ds
addr16
mov
fisub
jle
div
in
xor
in
lods
dec
pop
ret
lock
push
cmps
mov
mov
adc
cmp
leave
or
jp
cmps
test
out
in
and
mov
xchg
dec
stos
mov
repz
retf
jbe
arpl
call
pop
xor
push
cmp
aaa
fs
sbb
stc
addr16
dec
add
out
push
push
pop
jmp
inc
test
and
leave
cmc
cmp
daa
mov
pop
call
loope
mov
cmp
loop
gs
cmps
mov
pusha
(bad)
adc
mov
add
movs
ins
cmp
sub
pop
jmp
out
pop
xor
inc
lahf
mov
push
loop
pop
inc
cdq
in
xor
pop
xchg
outs
jge
lds
fwait
ins
sets
jae
cli
pushf
push
iret
xchg
jecxz
aad
xor
shl
fwait
outs
push
retf
push
pop
fistp
out
fidivr
ret
xchg
push
jmp
cmps
mov
push
jp
loop
imul
jl
add
or
aad
dec
enter
inc
retf
push
out
out
mov
repnz
(bad)
cmp
data16
or
movs
push
pop
sub
loopne
sbb
add
movs
in
mov
pop
mov
mov
jmp
(bad)
xchg
repz
pop
xor
jo
shl
xor
and
adc
and
pop
mov
int3
pop
in
sub
jecxz
xor
imul
dec
add
dec
pushf
jbe
repnz
scas
pcmpgtw
and
fmulp
inc
fcmovbe
sti
push
rcl
retf
aas
xor
inc
shl
iret
adc
xor
stos
adc
mov
mov
stos
fidiv
lock
xchg
mov
(bad)
and
hlt
and
jmp
cs
arpl
imul
mov
and
xchg
pop
mov
mov
jae
lods
cmps
jmp
adc
xor
in
jbe
push
popf
pop
gs
mov
std
ins
jns
lock
jg
pop
icebp
dec
loope
jecxz
(bad)
xchg
retf
adc
mov
xchg
(bad)
sbb
xor
cli
push
fisttp
cmps
fnstenv
mov
fs
data16
data16
mov
push
aad
inc
shl
sti
inc
popa
out
pop
das
retf
cli
push
xor
ss
lods
arpl
ds
adc
jecxz
adc
js
push
dec
pop
pop
push
sahf
into
outs
xlat
hlt
push
xchg
xor
cli
push
arpl
(bad)
loop
jne
pop
mov
or
addr16
dec
push
push
aam
iret
mov
loop
mov
mov
in
push
repnz
sti
mov
(bad)
mov
cmp
mov
push
retf
sub
mov
stc
(bad)
(bad)
mov
je
cs
inc
push
mov
mov
das
neg
repnz
in
sub
pop
loop
loopne
push
pop
lds
pop
scas
lods
mov
test
pop
cmp
loopne
in
xchg
(bad)
lds
iret
xor
call
mov
(bad)
add
in
int
arpl
in
jle
xor
clc
inc
ins
imul
cmp
mov
out
fild
js
into
jecxz
mov
aad
mov
jb
xor
pop
stc
pop
ret
or
scas
cwde
repnz
movs
fld
xchg
dec
push
out
cmps
test
lea
xchg
mov
adc
jle
icebp
gs
out
fisttp
jns
(bad)
sbb
fs
jo
jae
xchg
fisub
xor
dec
ins
dec
push
mov
cmp
fisttp
push
sar
jb
movs
jge
std
fwait
addr16
push
jo
shl
cmp
mov
dec
cmp
movs
inc
sbb
retf
jg
retf
xor
cmps
or
cmc
mov
jg
jmp
sbb
pop
lea
scas
imul
retf
dec
call
mov
repz
mov
mov
sub
mov
loop
inc
xor
sbb
cli
dec
fldcw
ja
sar
add
jae
inc
mov
xlat
fistp
mov
aas
addr16
mov
cld
mov
inc
popa
call
xchg
push
fldcw
xor
pop
lock
push
shl
popf
push
dec
(bad)
adc
call
ins
pop
dec
pop
cmp
data16
mov
sub
adc
sbb
clc
jg
ja
xchg
lock
ret
aaa
push
push
jle
(bad)
out
mov
sbb
xor
int3
xor
arpl
pop
mov
(bad)
inc
adc
mov
mov
cli
jl
pop
or
adc
sahf
sub
stos
inc
jne
mov
push
enter
in
arpl
out
jg
aas
lds
div
test
les
xchg
leave
add
cmps
movs
sti
xor
xchg
loope
imul
sbb
inc
fcomp
dec
call
jnp
add
jnp
setp
inc
sbb
jb
jnp
xchg
gs
lods
sbb
imul
xor
mov
jg
pop
les
mov
and
fisubr
xchg
xor
cmp
fcomi
adc
into
lahf
gs
loope
sahf
fisub
adc
xor
imul
pop
fwait
out
mov
pop
cmp
mov
adc
sar
repnz
rcl
sub
retf
jb
iret
cmp
ins
jl
paddw
lods
pop
inc
test
loop
pop
test
fsubr
cmc
out
mov
out
pop
idiv
aam
mov
sub
stos
repnz
out
pop
xchg
daa
sbb
(bad)
xlat
lds
add
imul
push
push
out
ret
retf
fistp
jbe
fmul
pop
jns
popf
mov
xor
ficom
xchg
lahf
push
ret
out
imul
outs
mov
sub
(bad)
ins
cmps
stos
ds
stos
ds
xchg
loope
ret
lahf
or
mov
gs
push
cmp
push
jmp
data16
inc
dec
repnz
jo
mov
adc
outs
dec
icebp
xchg
xchg
adc
cmp
mov
les
cmp
jns
stc
aaa
icebp
sub
push
mov
xor
or
dec
push
into
cli
outs
movs
push
loope
test
sbb
jns
xchg
jne
retf
sub
imul
data16
jge
mov
cmps
lock
(bad)
ror
ret
lods
push
inc
xchg
mov
xchg
shl
push
xlat
std
out
push
dec
fisubr
lods
jecxz
or
loop
nop
adc
imul
in
(bad)
ins
ins
lea
scas
cwde
jle
jmp
mov
clc
inc
in
cmp
int
popa
test
adc
not
mov
in
pop
sahf
addr16
(bad)
fisttp
mov
mov
jns
popf
jge
cmp
mov
repz
dec
ret
mov
and
rcr
sbb
imul
cmps
mov
ss
mov
mov
movs
cli
out
sbb
imul
mov
icebp
adc
repnz
fcmove
data16
lea
cmp
icebp
hlt
imul
and
push
mov
dec
aaa
call
push
cmp
ss
setp
pop
outs
jl
icebp
push
cmps
les
jmp
mov
and
inc
fdivr
push
mov
xor
sti
pop
dec
fmul
xchg
push
cmp
cmp
int
(bad)
sar
inc
dec
mov
sub
pop
mov
loopne
mov
scas
fwait
cmps
fistp
inc
test
cmp
lods
lahf
sub
(bad)
mov
jl
das
jmp
or
or
push
sbb
cmps
fwait
sbb
jge
sub
dec
mov
jmp
icebp
jnp
mov
jns
loopne
jnp
add
pop
pop
pop
fnstcw
sub
jns
bound
add
(bad)
inc
aas
(bad)
xor
div
sbb
pop
call
retf
in
push
pop
mov
lods
std
mov
idiv
out
jmp
cld
xor
movs
dec
mov
out
inc
inc
pop
movs
adc
ret
xchg
adc
jecxz
rcl
outs
loope
(bad)
aas
retf
aam
push
inc
add
push
mov
inc
out
jnp
std
enter
xchg
push
out
jnp
popa
lock
daa
dec
pop
not
jg
lods
cs
adc
sti
mov
lock
dec
ffreep
aam
sti
lods
inc
xlat
stos
cli
sahf
sbb
aaa
hlt
pop
in
jns
cdq
or
shl
cmp
dec
pop
jbe
retf
stos
dec
ds
push
out
cdq
mov
ins
(bad)
push
mov
pop
fadd
std
mov
pop
int
xchg
sti
push
adc
fdiv
push
jmp
jne
mov
adc
push
aaa
mov
sbb
loope
push
inc
gs
clc
call
iret
adc
test
aaa
mov
arpl
mov
fstp
sub
arpl
mov
(bad)
dec
pop
(bad)
adc
mov
int3
rol
xor
out
sbb
aas
dec
stos
mov
xor
stos
stos
push
repz
jne
add
aad
jbe
arpl
dec
xor
outs
xchg
pop
loope
lods
pop
and
mov
ret
push
popa
icebp
pop
pop
xlat
mov
mov
sahf
mov
pop
cwde
add
out
push
js
sar
and
(bad)
movs
mov
test
push
mul
and
xchg
pop
sbb
mov
inc
clc
aas
loopne
push
jmp
xchg
jp
test
std
es
je
icebp
loope
leave
fld
pop
test
xchg
dec
push
aad
sbb
sub
xor
sbb
mov
icebp
adc
stc
jns
(bad)
xlat
arpl
push
xchg
sbb
test
pop
mov
xchg
pop
lea
push
inc
pop
sub
inc
xor
cmp
xor
aas
loop
das
sbb
mov
es
dec
jns
stos
dec
and
(bad)
outs
xchg
pop
ret
jp
nop
sete
and
lods
scas
in
(bad)
mov
xor
stc
inc
imul
(bad)
cli
mov
mov
xchg
stc
sbb
sar
aaa
(bad)
pop
push
out
cld
pop
loope
mov
outs
loop
cmp
adc
ret
add
call
scas
and
xlat
(bad)
aad
lea
popf
pop
push
xchg
jge
xchg
gs
sub
push
cmps
jg
cmp
leave
push
mov
in
inc
xchg
or
(bad)
(bad)
and
int
push
jge
aas
ds
fldenv
call
jmp
mov
scas
mov
movs
nop
pop
fxch
lock
sbb
sub
leave
(bad)
(bad)
xchg
jbe
add
cs
pop
push
jmp
xor
shr
clc
or
jne
and
enter
mov
fmulp
fild
(bad)
cmp
jnp
pop
jmp
mov
add
pusha
pusha
cmovno
lock
ret
test
retf
sbb
fiadd
(bad)
and
pop
pop
xor
cmp
add
dec
mov
fcomip
jno
jnp
(bad)
or
mov
outs
xor
mov
dec
jmp
push
adc
(bad)
sahf
push
pop
sbb
cmp
retf
inc
scas
clc
pop
(bad)
pop
xchg
jg
jmp
dec
mov
setle
jne
test
ss
cmp
mov
jge
mov
lods
(bad)
out
imul
ret
rcl
cmc
mov
data16
mov
xchg
xor
stc
jne
jbe
das
lock
dec
(bad)
mov
es
and
xlat
or
and
out
scas
sub
jg
jmp
cmp
sbb
cmp
jne
push
fcmove
retf
cmps
add
sti
mov
sti
xor
jmp
movs
xchg
stos
dec
cmp
jae
mov
and
sbb
retf
push
sub
add
shr
test
xchg
dec
and
mov
mov
aad
xchg
test
push
mov
(bad)
pop
in
push
(bad)
fcom
fnsave
adc
pop
imul
std
fidiv
sahf
mov
mov
push
fs
ret
pop
loope
jg
sar
xchg
outs
aad
sub
dec
loop
stos
fbstp
int3
(bad)
ja
mov
stc
mov
in
mov
mov
lahf
test
jge
mov
loop
loop
add
aaa
out
outs
mov
(bad)
mul
outs
xchg
outs
sbb
jle
jl
mov
xchg
push
not
pop
cli
inc
and
retf
xor
push
xchg
(bad)
sti
dec
imul
xchg
scas
je
adc
pop
inc
outs
mov
sahf
pop
dec
adc
pop
cmp
bound
popf
pop
jo
push
cmc
cmp
(bad)
stos
cmp
dec
pop
(bad)
movs
mov
mov
pop
jp
mov
lods
push
or
stc
pop
cs
push
call
ds
cld
sahf
adc
inc
mov
xor
jl
popa
aaa
addr16
jge
js
test
mov
sub
xlat
sub
sbb
xor
and
or
mov
mov
pop
xchg
jae
fbstp
nop
pop
jmp
in
jl
loope
add
push
scas
mov
xor
mov
adc
mov
mov
ja
jmp
sub
jne
arpl
xchg
call
popa
mov
jmp
cmp
popf
dec
xor
pop
mov
ret
lahf
adc
les
les
aam
pop
ins
arpl
or
and
ins
out
xchg
call
push
ins
mov
cmp
repz
test
aam
(bad)
loop
xor
mov
mov
shl
das
inc
clc
and
mov
mov
mov
dec
xor
add
lock
aaa
pop
push
std
sbb
jbe
pop
inc
dec
pop
mov
(bad)
outs
clc
daa
inc
shl
je
push
aas
fwait
jbe
cmc
stos
nop
cmp
add
ror
sub
std
sbb
fisubr
outs
sti
mov
pop
fucomip
popa
int
out
(bad)
ret
lods
fdivr
in
push
call
mov
sti
pop
cld
pop
mov
push
retf
aaa
adc
and
in
lahf
jae
test
mov
stos
je
cs
arpl
push
emms
sti
or
loop
inc
lods
jbe
pop
cmp
and
inc
add
retf
arpl
fild
nop
fisub
das
mov
mov
shl
fsubr
dec
mov
sbb
push
leave
adc
sbb
inc
jns
test
loope
push
dec
mov
fsubp
cmp
mov
or
test
push
push
imul
mov
cdq
rcr
or
cld
mov
sti
ds
adc
cmc
or
cld
and
imul
aad
jns
std
loop
retf
addr16
(bad)
mov
cmp
mov
mov
jno
ins
push
xchg
(bad)
retf
rol
clc
xor
sbb
aad
jbe
psubusb
mov
mov
push
xchg
mov
pop
cmp
push
aas
loope
clc
ret
add
addr16
test
test
or
adc
mov
pop
jae
aas
xor
cmp
lock
mov
jmp
jp
(bad)
jecxz
psubb
xor
inc
cs
rcl
in
outs
push
les
mov
ins
mov
movs
movs
pop
fdiv
out
xchg
xor
xchg
mov
pop
aas
fxch
out
pop
xor
les
imul
lods
shl
mov
or
xor
sub
ret
pop
cmp
mov
mov
jecxz
rcr
fstp
daa
(bad)
aad
test
mov
sti
(bad)
inc
rcr
mov
je
xlat
shr
movs
clc
mov
outs
and
xor
pop
dec
xchg
sub
sbb
dec
ja
lds
xor
dec
(bad)
fisub
push
xchg
sub
cwde
ins
cdq
loope
and
and
aas
fstp
aaa
scas
retf
int
jle
clc
das
lods
cld
inc
mov
pop
mov
pop
fldenv
imul
dec
and
xor
clc
stos
(bad)
fucomi
cli
xchg
ins
fist
retf
ins
mov
and
movs
xor
adc
out
mov
mov
ja
dec
inc
sub
cmp
mov
inc
fcmovb
push
adc
movs
(bad)
mov
push
addr16
(bad)
repnz
not
ins
jmp
cld
stos
jp
sub
jg
jmp
ins
cmp
pop
sti
in
fiadd
jecxz
cwde
xchg
xor
pop
inc
loope
pop
clc
stos
leave
stos
retf
into
stc
ss
fisubr
scas
(bad)
scas
stc
adc
imul
push
pop
pop
adc
mov
addr16
cmp
std
repz
lahf
mov
mov
ja
cmp
out
pop
pop
(bad)
pushf
(bad)
test
cs
or
iret
aas
cmps
dec
ret
jne
pop
mov
jne
call
mov
cld
push
sub
sti
mov
cmp
mov
outs
call
sbb
pop
gs
setnp
sbb
ja
imul
cmp
xchg
cmps
pusha
mov
fs
sbb
aas
je
or
out
push
repnz
xor
int3
jge
mov
fistp
mov
loopne
(bad)
out
dec
mov
(bad)
call
das
inc
repnz
(bad)
int
int
mov
sub
lock
out
loop
loope
sti
fidivr
imul
imul
imul
stos
out
pop
in
or
jg
dec
(bad)
(bad)
in
rcl
loopne
sub
scas
xor
add
xchg
pop
dec
mov
aam
cli
shl
leave
and
retf
xchg
cli
xlat
iret
mov
or
aas
les
xor
cmp
ins
pop
fldcw
leave
push
dec
push
inc
push
push
mov
add
rcr
jmp
or
(bad)
cmp
mov
fdiv
push
(bad)
adc
repz
sar
mov
sahf
sbb
mov
aas
fisub
std
sub
repz
es
mov
mov
jae
mov
retf
jo
jecxz
ret
rcr
je
pop
repnz
xchg
jle
push
pop
addr16
scas
mov
jns
test
add
cmp
jp
jnp
repnz
sbb
stos
mov
imul
dec
leave
sbb
cmc
stc
xchg
loopne
push
imul
mov
mov
inc
fisub
xor
pusha
jp
sbb
std
sbb
arpl
stos
outs
mov
shl
pop
xchg
loope
mov
push
addr16
xor
jmp
xchg
arpl
mov
mov
jg
loop
mov
or
jmp
(bad)
jb
in
push
outs
mov
fisubr
movs
ret
pop
(bad)
gs
inc
(bad)
(bad)
cmp
ds
xchg
dec
mov
adc
fcmove
stos
inc
sar
pop
clc
push
adc
imul
aam
or
push
loope
ins
cli
and
cmp
inc
cmp
fcmovb
loope
mov
mov
movs
ror
mov
retf
inc
sahf
xchg
lahf
imul
xchg
loope
mov
popa
pop
add
fist
mov
fisubr
adc
xchg
rep
jb
cs
sti
adc
loopne
pop
mov
push
lock
xchg
popa
arpl
xor
push
xor
(bad)
jns
push
(bad)
popa
cmp
add
xor
loop
outs
aad
mov
xor
push
test
xlat
jb
sub
aad
mov
jns
outs
das
xchg
imul
mov
not
outs
scas
push
inc
pop
cdq
std
sub
cld
not
jl
icebp
xor
imul
xlat
push
sbb
cdq
ins
mov
add
cmp
icebp
mov
les
in
adc
jl
mov
shl
pop
adc
pop
out
xlat
jle
mov
in
inc
dec
dec
fisubr
daa
push
in
mov
cwde
pusha
xor
jle
jne
pop
out
ss
pop
mov
(bad)
sbb
mov
addr16
fwait
outs
retf
push
pop
(bad)
cmps
mov
mov
jg
(bad)
jmp
sbb
inc
jbe
cwde
jle
fmul
js
pop
icebp
adc
cmps
inc
ror
mov
cmps
mov
jnp
or
movs
push
dec
(bad)
dec
jge
loopne
std
in
ret
inc
and
fidivr
shl
stos
xor
in
mov
repz
inc
js
jbe
cmp
inc
movs
int
jno
mov
cmp
pop
mov
repnz
arpl
or
aam
push
adc
(bad)
ins
dec
les
bound
mov
call
mov
repnz
mov
push
lea
and
push
(bad)
sbb
dec
test
jno
lea
sbb
mov
jle
xchg
in
sbb
jns
dec
add
xchg
test
out
scas
sbb
pop
xor
xor
jl
push
adc
in
(bad)
leave
pop
repnz
mov
popa
inc
movs
jmp
xlat
loope
dec
pop
aam
scas
daa
mov
retf
sbb
pop
pop
mov
out
outs
fwait
xor
shl
std
jecxz
fcmovu
lds
or
arpl
dec
out
stos
mov
dec
ret
xchg
jmp
fwait
outs
mov
xchg
push
sar
stos
movs
mov
(bad)
add
inc
fisttp
pop
sti
push
test
bound
out
push
jbe
jns
paddw
pop
packuswb
int
inc
xchg
popa
repz
and
ror
lds
xchg
lds
inc
jmp
xor
fidiv
add
pop
pushf
adc
loope
das
pop
icebp
xor
jle
sub
lods
xchg
and
repnz
fcom
(bad)
loope
std
push
or
in
fs
imul
mov
test
jl
xchg
mov
xchg
inc
cmc
xlat
mov
std
mov
ins
xchg
cmc
adc
nop
pmaxub
inc
repz
xchg
fld
(bad)
mov
fimul
in
push
int3
shl
cmp
push
jno
mov
add
adc
(bad)
in
int
ficomp
outs
fisub
sar
arpl
xchg
into
jp
jmp
and
cld
push
imul
test
xchg
xchg
xchg
pop
lahf
dec
icebp
aas
mov
fsubr
cmc
mov
fwait
mov
in
fs
je
mov
js
addr16
loop
fldenv
mov
jl
mov
cld
xchg
in
cmc
fistp
xchg
mov
or
and
and
sahf
dec
dec
or
mov
aad
out
popa
or
xchg
cmc
aas
xor
fmul
repnz
jg
pop
aad
push
mov
es
and
outs
dec
or
and
push
in
iret
and
fidivr
sbb
stos
push
dec
test
inc
sub
lods
mov
sub
dec
inc
movs
lods
out
mov
pop
xor
repz
jns
ins
movs
ins
xchg
inc
shr
inc
or
jnp
jno
xchg
ins
mov
sbb
icebp
ss
adc
cmps
into
mov
mov
sub
inc
loopne
jne
dec
fimul
jecxz
outs
push
mov
pop
out
es
fcmovbe
out
add
xor
loopne
push
cmps
jl
clc
aaa
pop
ret
leave
rcr
xlat
and
out
sub
clc
ror
jae
jmp
inc
push
pop
fldcw
leave
jmp
imul
out
mov
enter
adc
sub
mov
idiv
mov
push
(bad)
(bad)
jmp
jg
jg
outs
push
pop
fdivrp
dec
or
jnp
rol
(bad)
add
test
or
xchg
repz
xchg
das
dec
sti
fstp
(bad)
dec
push
cmp
mov
icebp
aaa
test
adc
pop
pop
(bad)
push
inc
fs
dec
rol
inc
cmp
jae
out
cmp
push
cld
jb
add
movhps
pop
mov
and
ins
add
pushf
push
mov
sbb
xchg
dec
shl
mov
pop
aam
(bad)
fnsave
movs
cmp
ins
hlt
pop
loop
psubb
test
fwait
loop
cmp
icebp
and
sbb
repnz
xchg
in
push
(bad)
mov
sysenter
test
scas
not
dec
pop
pop
xchg
inc
add
jmp
push
out
fs
fstp
clc
outs
loop
(bad)
mov
das
cld
inc
icebp
shr
shl
pop
int3
xchg
fisub
test
repnz
sbb
pop
mov
xlat
pop
adc
sar
imul
out
cmc
cmps
sbb
fnstsw
xchg
fs
movs
lock
jecxz
cs
clc
outs
lds
xchg
icebp
push
jns
loope
push
ret
jle
stc
xlat
mov
aas
add
adc
mov
out
mov
push
neg
mov
in
mov
test
inc
std
fidiv
sbb
(bad)
lds
(bad)
into
repnz
xchg
mov
fstp
popa
aas
jle
push
(bad)
rcr
addr16
lock
mov
icebp
(bad)
add
shr
dec
xchg
dec
fnsave
xor
jnp
repz
xlat
daa
daa
(bad)
unpcklps
jle
ins
cmps
movs
cmp
sti
jg
add
(bad)
out
stc
sub
cmp
je
adc
xor
jmp
call
shl
pop
jmp
(bad)
clc
fadd
sti
clc
and
add
add
mov
sar
mov
ins
imul
lods
and
scas
aaa
inc
sbb
lods
jp
stos
inc
xor
int3
mov
(bad)
sti
pop
(bad)
aam
iret
imul
and
sahf
or
mov
or
test
inc
jne
out
into
dec
add
or
dec
aad
ret
sar
add
mov
iret
test
push
lods
mov
inc
fdiv
lahf
div
push
imul
test
cmp
test
out
(bad)
jne
cs
sub
or
outs
pop
pop
vdivpd
(bad)
aas
add
push
lock
fcmove
test
cmps
and
int3
sbb
sbb
sub
stos
repnz
imul
sub
repz
mov
push
hlt
mov
das
cs
xor
push
in
ins
gs
popf
mov
cld
mov
xchg
(bad)
cmc
jnp
sub
pop
in
out
lock
push
clc
jns
jge
jge
push
cmp
xlat
jo
fst
addr16
scas
inc
push
leave
int
xchg
addr16
sti
ficom
scas
sub
xor
fdiv
jg
mov
shl
jnp
not
jmp
shr
ss
les
stc
ins
repz
sahf
dec
mov
(bad)
sub
xor
pop
lock
or
adc
sub
popa
inc
repz
cmp
sbb
push
xlat
mov
imul
dec
fdivrp
add
int3
(bad)
push
(bad)
mov
dec
push
out
int3
fisub
xlat
out
adc
sbb
xchg
jo
inc
lea
add
aad
pop
pop
mov
cmp
shufps
in
mov
ss
fist
jge
fisubr
jmp
nop
sub
out
mov
outs
(bad)
sub
xchg
and
mov
inc
mov
cmps
int
in
sti
fucomip
xlat
add
fild
clc
add
dec
aaa
push
icebp
push
jmp
jbe
sbb
sahf
jge
jb
into
aad
jge
imul
xchg
dec
shl
retf
js
std
ds
pop
(bad)
pop
shl
mov
push
pushf
aaa
into
jo
cld
fild
mov
scas
add
movs
out
jns
dec
mov
aas
and
(bad)
int3
mov
enter
add
aas
loop
lods
inc
repnz
in
out
das
mov
sbb
scas
in
fs
fwait
inc
sub
cmp
inc
fmul
jmp
popa
std
pushf
ins
lods
and
mov
ja
sbb
retf
mov
fucom
cdq
fs
loope
sbb
inc
push
mov
xchg
movs
pop
leave
imul
out
ds
push
mov
sbb
adc
and
jnp
xchg
jo
inc
add
inc
movs
repnz
in
xor
stos
cdq
mov
sar
push
fnstcw
pop
aam
dec
mov
push
adc
jecxz
mov
bound
out
sub
mov
dec
jle
lock
(bad)
aad
xchg
sar
dec
sti
mov
sbb
fist
cmp
(bad)
ds
jnp
adc
imul
pop
inc
fstp
sbb
repnz
fidiv
ins
xchg
dec
xchg
sbb
push
mov
pop
dec
repnz
jge
xchg
jle
push
mov
jecxz
int
and
ins
icebp
mov
outs
cld
fwait
push
sbb
sbb
jecxz
and
fisttp
pop
lock
loope
ficom
fidiv
mov
sbb
cmp
pop
cs
cs
jmp
cmp
test
mov
jmp
ins
out
fst
out
in
inc
push
fimul
(bad)
pop
mov
idiv
das
dec
repnz
jns
pop
fnsave
dec
lds
in
rep
cs
xor
xchg
mov
mov
out
xlat
jae
mov
and
(bad)
adc
sub
mov
not
push
add
pop
loopne
out
lds
clc
mov
xor
pop
sub
shl
fdivr
test
adc
fucomp
sahf
sbb
sbb
mov
mov
or
(bad)
push
push
inc
jmp
jle
sar
loope
sbb
ins
sub
fisubr
xor
in
dec
lods
pop
call
mov
aaa
push
icebp
(bad)
xchg
dec
stos
(bad)
mov
inc
xchg
(bad)
rol
sbb
aam
pop
mov
cmp
mov
call
(bad)
cmps
xchg
out
sti
mov
jno
imul
mov
dec
loope
cmp
(bad)
fldenv
cmp
mov
sti
jmp
cmc
cmps
leave
outs
xchg
lock
lods
fwait
mov
cmc
mov
push
dec
loope
imul
dec
or
mov
xlat
jae
ds
mov
dec
stos
pop
dec
cmps
(bad)
ja
pop
inc
cwde
xchg
xchg
ret
mov
cs
jecxz
adc
jmp
fmul
mov
add
movs
push
aas
mov
jmp
sbb
xchg
inc
or
aas
sti
sub
aaa
ret
lods
fld
jne
dec
xchg
mov
jne
rcr
stc
xchg
imul
cmp
sbb
aad
call
call
fmul
or
mov
pop
mov
clc
scas
jecxz
lahf
inc
lock
lea
mov
inc
jno
jo
test
add
cli
xchg
fsin
pop
xchg
mov
cdq
fwait
aam
mov
imul
cli
sahf
jle
sbb
je
sub
dec
aas
repnz
repnz
rcr
mov
jg
push
mov
(bad)
sbb
jge
cmp
lods
loope
lea
sar
xchg
xchg
(bad)
ss
sbb
rcr
scas
ror
lahf
ins
aaa
outs
inc
adc
xchg
into
jmp
mov
ret
xor
sub
mov
and
pop
pushf
mov
mov
sbb
mov
(bad)
loope
cmp
adc
in
out
push
(bad)
push
xchg
dec
jecxz
pop
hlt
popf
adc
jno
imul
dec
retf
mov
push
add
into
imul
mov
dec
ins
jg
jne
repnz
or
imul
imul
mov
jbe
add
jg
test
shl
call
mov
clc
test
loope
push
sub
pop
push
mov
xchg
jno
jp
mov
fadd
jmp
jmp
paddd
call
jne
js
cmps
mov
stos
xor
call
sbb
int
jl
dec
outs
loop
push
lods
jmp
pop
fidiv
fstp
ret
cmp
movs
mov
popf
ins
mov
push
fild
and
out
in
in
cld
fmul
imul
outs
scas
neg
retf
outs
pop
inc
push
mov
mov
push
push
test
scas
call
rcl
lahf
(bad)
or
popf
xchg
ret
mov
xchg
int
mov
xchg
dec
pop
fwait
mov
mov
cmp
pop
fcomp
pop
push
test
pop
sub
jp
cmp
mov
xchg
div
mov
jae
push
aaa
lea
xchg
xchg
jmp
imul
cld
stos
pop
push
std
xchg
movs
inc
xchg
call
jg
mov
movs
fs
inc
addr16
lods
mov
nop
imul
mov
cmps
jae
sti
lods
dec
pop
repnz
movs
daa
jbe
ret
jbe
outs
in
ins
mov
mov
inc
mov
lods
aaa
out
std
fist
pop
out
imul
sbb
mov
aaa
std
out
dec
sti
mov
add
mov
pop
push
sbb
jmp
in
mov
and
pop
add
call
mov
jecxz
inc
ins
mov
cld
push
or
aam
mov
(bad)
xchg
mov
fistp
(bad)
aaa
fwait
into
push
out
xchg
aaa
(bad)
jge
pop
les
sar
push
lods
push
int3
mov
cld
iret
hlt
data16
clc
data16
daa
pop
loope
mov
sbb
pop
jne
imul
or
imul
in
xchg
call
inc
dec
fcomi
cdq
jbe
cmps
das
neg
test
les
fnsave
xchg
mov
lea
out
mov
mov
xchg
out
fimul
adc
das
cld
or
je
push
mov
scas
fucomp
mov
outs
fwait
icebp
outs
movs
inc
xlat
nop
dec
mul
jo
mov
sub
mov
repz
dec
cmp
mov
cdq
jp
loope
aaa
sub
sbb
xor
and
mov
movs
mov
and
pop
xchg
or
mov
out
or
cmp
jno
push
jns
adc
cmp
mov
sbb
pop
js
iret
pop
mov
stos
jae
lods
ins
in
xchg
mov
xor
xchg
fnsave
pop
cmc
lods
cmp
adc
popa
lea
rcl
pop
mov
ins
fdivr
mov
jae
jge
push
retf
mov
mov
(bad)
mov
mov
lea
add
addr16
jge
jns
jmp
rol
mov
add
fcom
pop
xchg
imul
sub
xchg
lds
lods
push
sub
outs
jge
je
mov
loope
mov
outs
or
cmp
xlat
bound
imul
mov
int
mov
out
retf
and
int
cmc
cmps
mov
mov
pop
adc
mov
pop
cmps
jae
push
jmp
jbe
es
fucomip
aam
jbe
fucomip
lock
inc
or
lea
fistp
jb
push
scas
shr
mov
sbb
inc
jno
jbe
jne
retf
cmp
jnp
outs
(bad)
add
lods
mov
jae
and
dec
outs
(bad)
jmp
retf
aas
pop
pop
lock
mov
in
aaa
jl
fmulp
jp
std
xchg
cld
jnp
or
push
outs
xor
rol
add
pop
mov
cdq
jg
sub
ds
arpl
shl
arpl
out
shl
jne
push
mov
xchg
ins
in
mul
mul
movs
inc
je
stc
fist
pop
(bad)
push
cmps
out
scas
cmp
mov
mov
cld
lahf
xor
(bad)
xchg
ja
int
jno
xchg
push
xchg
retf
outs
jae
dec
call
sub
jl
lahf
(bad)
inc
mov
push
movs
aad
mov
lds
xchg
ja
mov
push
mov
pop
push
not
jg
inc
mov
outs
mov
pusha
mov
std
xor
pop
fnstenv
jl
fwait
jbe
adc
jae
out
dec
fisub
test
inc
fnsave
movs
inc
(bad)
pop
push
hlt
jge
setnp
and
outs
mov
or
sti
popf
aad
pop
aad
pop
scas
push
in
loopne
inc
arpl
cmps
mov
jae
(bad)
stc
jb
mov
add
mov
dec
fiadd
dec
mov
pop
mov
inc
(bad)
mov
mov
mov
mul
add
cmps
mov
mov
sub
add
mov
lahf
inc
cli
push
div
dec
std
mov
pop
push
jnp
jg
xchg
pop
dec
mov
push
cmps
add
xchg
data16
sbb
out
mov
cmp
xchg
jno
mov
mov
mov
sub
and
push
pop
and
(bad)
inc
test
outs
idiv
cmp
cdq
out
out
(bad)
dec
cli
(bad)
sub
jno
mov
int
(bad)
std
dec
jbe
mov
xor
push
pop
out
(bad)
pusha
mov
shl
sbb
fdiv
jnp
push
sub
adc
mov
jmp
jae
stos
adc
retf
outs
jae
jns
ret
mov
pop
add
jg
mov
sar
lods
sar
and
data16
push
dec
aad
repnz
pop
mov
movs
jmp
adc
mov
mov
jae
jns
sub
clc
test
enter
mov
add
call
int3
mov
fldenv
fcmovne
sbb
(bad)
mov
push
lahf
fimul
js
jecxz
fist
pop
mov
jne
movs
icebp
add
lods
mov
push
outs
loope
jnp
rcl
mov
pop
xchg
ins
scas
int3
retf
mov
push
(bad)
push
inc
push
retf
(bad)
shl
cmp
cmp
cmp
pop
arpl
repnz
xchg
inc
fistp
sahf
inc
sub
push
pop
xchg
lds
pop
adc
jbe
std
ror
dec
into
popf
std
mov
sbb
repz
pop
pop
ja
icebp
(bad)
test
and
fistp
and
dec
xchg
gs
xchg
fstp
xchg
mov
push
neg
imul
das
je
sub
je
in
aaa
test
scas
popf
add
jns
mov
inc
jo
mov
gs
(bad)
int3
inc
inc
xor
adc
enter
push
(bad)
pop
int
ret
ds
mov
call
pop
xchg
out
jb
pushf
test
push
jmp
lea
pushf
pop
mov
xchg
retf
pop
(bad)
jne
data16
mov
in
(bad)
ja
js
pop
repz
xchg
xlat
in
lods
and
inc
(bad)
cmp
jp
sub
rcr
mov
icebp
pop
jg
cmps
fmul
mov
repnz
scas
cmp
jp
test
mov
add
imul
mov
sub
in
jecxz
fistp
std
rcr
sbb
mov
and
xchg
call
pop
adc
mov
fdiv
pusha
sti
data16
pop
and
dec
push
mov
add
cli
aad
mov
repnz
push
out
sub
(bad)
xor
enter
scas
jecxz
cmp
push
mov
sub
inc
stos
ins
sti
xchg
push
inc
or
(bad)
test
jl
and
jne
and
cmp
div
iret
or
cmps
arpl
in
retf
mov
fstp
jmp
inc
push
out
adc
in
inc
outs
mov
scas
xchg
and
mov
jbe
dec
out
add
push
ja
jmp
mov
dec
cmc
and
push
jns
mov
mov
adc
cmp
mov
sbb
mov
adc
shr
cld
mov
sbb
mov
mov
dec
jns
jbe
dec
jmp
push
stos
jmp
imul
or
cmc
sbb
and
mov
mov
sub
shr
push
sti
mov
pop
xchg
(bad)
cmp
shr
repnz
push
or
add
outs
push
cmp
mov
mov
inc
inc
sahf
and
rcl
cdq
pop
sbb
(bad)
xchg
cmc
(bad)
shr
mov
xchg
mov
pushf
ins
sbb
rep
fidivr
shl
or
leave
cmp
push
sub
aad
clc
jg
in
cmps
icebp
aas
in
aad
jnp
lea
lods
mov
jl
iret
in
cmpps
mov
sub
repnz
outs
imul
repz
xchg
js
test
mov
hlt
adc
push
mov
dec
mov
out
dec
pop
push
jl
leave
mov
repnz
rol
mov
arpl
push
retf
sub
cmp
imul
inc
adc
call
stos
inc
es
xor
mov
xchg
xor
fcmovnbe
push
aam
dec
cld
inc
hlt
and
in
stos
lds
dec
bound
jb
repnz
mov
xchg
and
enter
sbb
iret
lods
dec
ins
mov
int3
sti
repz
adc
pop
outs
out
lock
inc
add
in
in
xor
push
imul
dec
pop
adc
in
mov
pop
lods
xchg
inc
xchg
es
adc
fidiv
mov
fadd
aas
jbe
sub
jl
jo
outs
xchg
inc
fcom
gs
popf
fidivr
sub
test
push
mov
push
out
scas
xor
fild
mov
call
stc
push
inc
daa
push
pop
dec
ret
push
jns
fsubr
fistp
mov
sti
mov
rcl
xchg
sbb
xchg
stos
push
sub
xchg
mov
cmps
lds
cmp
inc
out
(bad)
xor
push
neg
test
sub
adc
xor
icebp
int
fs
cmp
stc
mov
out
cmp
xor
pop
jne
mov
mov
adc
outs
pop
mov
jmp
inc
stos
call
mov
call
dec
repz
movs
fsub
into
jge
mov
and
rol
cmp
rol
mov
add
(bad)
sub
lds
pop
dec
and
sub
or
sahf
inc
pop
sub
popa
(bad)
imul
or
les
adc
pop
pop
xchg
mov
addr16
pop
cdq
xchg
(bad)
mov
or
push
jle
cmc
ss
mov
inc
ror
jae
sbb
imul
jbe
push
cmps
add
imul
add
adc
call
mov
jmp
cmps
pop
inc
pop
popf
outs
jbe
jle
jno
adc
addr16
push
mov
or
out
sar
aad
leave
pop
dec
out
cmp
mov
inc
dec
mov
xor
out
xchg
inc
pop
xchg
movs
sti
fwait
jmp
dec
xchg
push
in
stos
lock
pop
xchg
push
pop
mov
or
fadd
push
cmp
in
jmp
jbe
(bad)
test
bound
inc
jg
adc
iret
js
mov
xchg
ror
jbe
das
fucomip
jg
adc
and
cmp
xchg
lods
adc
pop
rcl
adc
in
and
push
cmp
pop
lahf
sbb
push
dec
pop
dec
xchg
les
ja
in
aam
(bad)
cmps
dec
imul
inc
fidivr
stc
icebp
cld
test
nop
cmp
mov
test
ss
jno
fnop
stc
(bad)
popf
mov
sub
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
test
fdivr
loopne
adc
dec
inc
add
add
add
add
add
jmp
add
arpl
and
gs
and
xor
cmp
and
add
add
add
add
jmp
add
inc
js
data16
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
mov
imul
add
add
bound
add
add
add
add
add
inc
add
add
add
add
inc
mov
add
add
add
add
add
add
add
add
add
add
dec
add
add
inc
outs
bound
push
push
push
xor
xor
xor
xor
cmp
xor
xor
cmp
cmp
xor
(bad)
fild
inc
add
add
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
(bad)
fild
inc
add
adc
and
and
and
and
inc
inc
inc
add
add
add
add
add
add
add
inc
add
or
add
add
adc
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
xlat
aad
jnp
or
scas
cs
sub
(bad)
mov
jge
stos
xor
mov
inc
mov
inc
jecxz
cmc
jg
lahf
repnz
push
mov
jno
loope
js
inc
inc
(bad)
shl
imul
not
(bad)
pop
outs
cmp
inc
xchg
jg
(bad)
stos
iret
stc
dec
not
iret
add
add
push
inc
and
add
mov
packssdw
loope
add
mov
inc
hlt
sbb
outs
(bad)
stos
iret
stc
inc
fcmovb
mov
ud0
inc
stos
aas
cld
mov
add
call
xchg
jle
cmp
cmp
inc
xchg
jg
fstp
push
lahf
repnz
inc
mov
adc
add
aas
cld
mov
add
call
xchg
cmp
cs
iret
inc
and
mov
pop
mov
jo
add
or
dec
(bad)
aaa
inc
aad
cld
mov
clc
pop
jle
inc
mov
inc
jecxz
mov
imul
jg
jmp
inc
std
push
lods
aas
repnz
inc
sbb
div
cld
adc
add
aas
cld
mov
add
jmp
push
(bad)
cmp
cmp
xor
jg
fstp
push
lahf
xacquire
jne
and
adc
pop
inc
(bad)
sar
mov
lods
jnp
cld
cs
iret
inc
and
mov
packssdw
loop
ret
inc
std
push
lods
inc
repnz
inc
sbb
sub
not
(bad)
pop
pop
cmp
xor
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
aas
loope
clc
and
adc
adc
add
add
jnp
not
(bad)
pop
push
cmp
inc
xchg
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
pop
clc
pop
ds
add
inc
jecxz
jge
jg
push
(bad)
cmp
shl
lahf
cli
or
jg
dec
(bad)
aaa
inc
aad
cld
mov
cld
cs
add
add
push
inc
and
mov
packssdw
loop
add
jmp
ins
aas
repnz
inc
sbb
div
jl
inc
inc
fwait
dec
cld
mov
add
call
xchg
jle
cmp
cmp
imul
fstp
push
lahf
xacquire
je
daa
inc
inc
(bad)
shl
jns
add
mov
pop
inc
and
mov
packssdw
loop
add
out
push
std
push
ins
aas
repnz
inc
sbb
sub
add
lahf
rcr
mov
add
lahf
cld
outs
(bad)
stos
iret
stc
inc
fcmovb
mov
adc
dec
cld
mov
add
call
xchg
cmp
add
lahf
rcr
mov
add
lahf
cld
outs
(bad)
stos
iret
stc
inc
in
arpl
pop
clc
pop
fimul
inc
mov
inc
jecxz
(bad)
scas
aas
in
mov
jo
add
or
jg
dec
(bad)
aaa
inc
aad
cld
mov
loope
js
inc
inc
(bad)
sar
mov
lods
jnp
inc
or
mov
add
lahf
cld
outs
(bad)
stos
iret
stc
dec
div
jl
inc
inc
fwait
dec
cld
mov
add
jmp
aas
imul
inc
or
mov
add
lahf
cld
outs
(bad)
stos
iret
stc
inc
in
arpl
aas
loope
js
inc
inc
(bad)
shl
jns
add
jnp
test
inc
mov
inc
jecxz
jge
jg
das
imul
jg
out
pop
std
push
ins
aas
repnz
inc
sbb
div
mov
fwait
dec
cld
mov
add
jmp
(bad)
jo
add
or
jg
dec
(bad)
aaa
dec
jmp
psubb
inc
mov
inc
jecxz
(bad)
lods
aas
in
mov
jo
add
or
jg
dec
(bad)
aaa
inc
aad
cld
mov
loope
js
inc
inc
(bad)
shl
jns
add
jnp
test
inc
mov
inc
jecxz
jge
jg
push
(bad)
cmp
cmp
xchg
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
aas
loope
js
inc
inc
(bad)
sar
mov
(bad)
cmp
cmp
call
xchg
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
pop
clc
pop
fimul
inc
mov
inc
jecxz
jge
jg
push
(bad)
cmp
cmp
call
xchg
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
pop
clc
pop
mov
int
inc
jecxz
jge
jg
dec
mov
jno
loope
js
inc
inc
(bad)
sar
mov
lods
jnp
jg
loop
outs
std
push
sub
add
cmps
cmc
jns
add
mov
cs
push
inc
shl
inc
and
mov
mov
inc
mov
outs
std
push
sub
add
movs
cmc
imul
test
inc
mov
inc
jecxz
(bad)
lods
aas
in
fild
mov
inc
inc
mov
mov
add
jmp
push
fidivr
shl
cli
or
jg
dec
(bad)
aaa
dec
jmp
das
cld
cs
jg
pop
sar
add
jg
mov
pop
mov
jo
add
or
jg
dec
(bad)
aaa
inc
aad
cld
mov
cld
sub
rcr
inc
and
mov
dec
jge
aas
cwde
aas
loope
js
inc
inc
(bad)
shl
imul
aas
cwde
pop
clc
pop
mov
mov
add
je
pop
jg
push
mov
repz
cld
sub
rcr
inc
and
adc
lods
aas
in
fcmovnb
stc
cmp
out
cmp
call
xchg
aas
clc
mov
lahf
repnz
ret
stc
cmp
out
cmp
call
xchg
aas
clc
mov
test
(bad)
pusha
inc
test
or
inc
in
(bad)
and
div
(bad)
pusha
inc
test
or
inc
in
(bad)
aaa
dec
jmp
cwde
aas
loope
clc
aas
inc
inc
(bad)
shl
push
retf
pop
int3
pop
lock
pop
inc
inc
jnp
cld
mov
add
jmp
mov
ret
stc
cmp
out
cmp
call
xchg
aas
clc
fstp
push
test
(bad)
pusha
inc
test
or
inc
in
(bad)
aaa
dec
jmp
cwde
pop
clc
pop
mov
mov
add
je
lods
push
stc
inc
fcmovnb
stc
cmp
out
aas
call
xchg
aas
clc
fnstsw
stos
push
(bad)
push
div
(bad)
pusha
inc
test
pop
inc
in
(bad)
aaa
dec
jmp
cwde
aas
loope
js
inc
inc
mov
cmp
loope
clc
aas
inc
inc
mov
das
outs
(bad)
adc
push
out
cmp
call
xchg
aas
clc
(bad)
stos
dec
stc
inc
in
loope
ret
fdivp
jg
add
inc
sbb
xchg
jle
pop
int3
das
cld
sub
rcr
inc
and
mov
pop
mov
repz
add
jnp
inc
hlt
pop
mov
add
lahf
cld
outs
(bad)
stos
dec
stc
inc
in
mov
or
inc
hlt
pop
mov
add
lahf
cld
outs
(bad)
stos
dec
stc
inc
in
mov
ret
jg
add
inc
adc
cmps
cld
mov
jg
outs
js
inc
inc
(bad)
sar
mov
add
(bad)
push
out
test
call
xchg
aas
clc
mov
lods
aas
in
mov
repz
add
jae
pop
hlt
push
mov
add
lahf
cld
inc
das
stos
dec
stc
inc
fcmovnb
stc
test
add
or
add
dec
(bad)
and
lahf
outs
(bad)
pop
(bad)
push
fild
add
lods
push
stc
inc
fcmovnb
stc
test
add
or
add
dec
(bad)
and
div
(bad)
pusha
inc
test
pop
inc
in
(bad)
and
div
(bad)
popa
mov
inc
inc
imul
inc
les
mov
add
(bad)
push
out
aas
call
xchg
aas
clc
mov
lods
aas
in
mov
repz
add
ja
pop
hlt
pop
mov
add
lahf
cld
outs
(bad)
stos
dec
stc
inc
in
mov
or
pop
hlt
pop
mov
add
lahf
cld
outs
lahf
aad
cld
mov
loope
clc
aas
inc
inc
(bad)
sar
mov
add
add
ja
inc
hlt
pop
mov
add
lahf
cld
outs
(bad)
stos
dec
stc
inc
fild
jg
(bad)
jg
add
inc
adc
stos
jg
jnp
inc
xor
(bad)
jg
add
inc
adc
stos
jg
jnp
test
inc
mov
inc
jecxz
jge
jg
push
fidivr
int3
das
cld
sub
rcr
inc
and
mov
mov
inc
stc
cmp
out
aas
call
xchg
aas
clc
mov
lahf
repnz
fild
test
add
or
add
dec
(bad)
and
fild
test
add
or
add
dec
(bad)
aaa
dec
jmp
cwde
aas
loope
js
inc
inc
mov
cmp
loope
clc
aas
inc
inc
(bad)
sar
mov
in
ins
push
loope
add
jae
pop
hlt
pop
mov
add
lahf
cld
inc
pop
push
test
fcomp
pop
sahf
adc
add
inc
loop
cli
mov
in
ins
pop
out
(bad)
push
fild
add
lods
push
stc
inc
fild
cmp
fild
add
push
test
fdivr
sub
rcr
inc
and
adc
lods
push
stc
inc
fild
daa
cld
sub
push
xlat
inc
pop
inc
loop
jle
push
stc
inc
in
mov
or
jg
adc
lahf
cld
inc
das
stos
dec
stc
inc
in
mov
ret
lahf
std
add
add
and
fild
cmp
mov
inc
call
(bad)
inc
icebp
adc
pop
jg
dec
mov
repz
loope
cli
or
inc
jecxz
add
inc
aas
stos
push
(bad)
push
not
(bad)
popa
mov
inc
inc
imul
inc
les
mov
in
ins
pop
out
inc
or
aas
hlt
push
mov
add
lahf
cld
inc
aas
stos
push
(bad)
push
sti
push
clc
pop
sahf
adc
add
inc
loop
jge
cmps
repnz
fild
test
add
or
add
dec
(bad)
aaa
inc
aad
jg
jnp
inc
xor
clc
pop
fimul
inc
mov
inc
jecxz
jge
cmps
repnz
fild
lahf
lock
sbb
dec
cld
mov
add
call
pop
mov
jo
add
or
jg
dec
(bad)
aaa
inc
aad
jg
jnp
test
inc
mov
inc
jecxz
jge
cmps
xacquire
test
fidivr
dec
(bad)
aaa
inc
aad
jg
jnp
idiv
outs
ins
bound
cdq
ja
and
imul
enter
stc
sbb
data16
fdivr
(bad)
ja
mov
(bad)
jns
add
pop
jmp
jo
sbb
cmps
ret
and
pop
fld
ret
jae
rcl
and
sar
inc
add
inc
cs
add
dec
cdq
xor
pop
lods
fdiv
push
sbb
(bad)
push
lds
pop
xchg
xor
add
or
jb
add
xor
nop
push
and
xor
ror
movs
push
shl
dec
and
xchg
and
popa
stc
movs
push
call
xor
xchg
pop
or
call
inc
or
int
or
inc
sbb
fwait
jne
nop
std
(bad)
(bad)
mov
push
popa
fs
mov
ja
sbb
aam
adc
mov
xchg
outs
xor
xor
push
xor
out
adc
or
mov
cmp
adc
out
imul
push
or
imul
test
mov
sub
das
xor
sbb
push
and
(bad)
ds
push
cmps
push
(bad)
imul
sbb
into
(bad)
mov
fild
loopne
sbb
or
add
push
adc
or
shr
stos
sbb
dec
or
push
sub
jmp
dec
xchg
and
rcr
pop
nop
aad
movs
push
sti
(bad)
test
lods
gs
sub
dec
and
movs
mov
imul
daa
jmp
add
aas
les
inc
inc
(bad)
out
stc
adc
mov
fidiv
daa
pop
dec
test
dec
clc
pop
mov
and
sbb
lds
dec
test
movs
inc
jmp
imul
or
or
adc
inc
test
xchg
add
arpl
dec
inc
add
adc
xor
xchg
sub
pop
sbb
xor
and
and
push
push
mov
sub
mov
inc
jno
mov
jne
mov
push
add
rol
push
sbb
pop
xchg
inc
sub
aad
in
test
and
mov
enter
dec
mov
push
bound
or
add
leave
add
or
(bad)
dec
mov
push
add
inc
cmp
inc
and
(bad)
adc
test
add
cdq
arpl
aam
pop
or
dec
mov
and
push
shl
xor
inc
inc
push
(bad)
jecxz
mov
sbb
xchg
gs
rcl
push
pop
pop
stc
push
and
stos
inc
dec
and
mov
shl
ins
push
mov
bound
ss
add
push
push
cmp
pop
retf
cmps
pop
pop
gs
(bad)
ins
test
adc
xor
push
pop
std
mov
jle
inc
or
test
adc
movs
and
rcr
and
mov
shr
mov
mov
int
aaa
add
push
clc
(bad)
mov
push
xor
xchg
xchg
cmp
push
xchg
addr16
mov
call
inc
cwde
mov
sbb
xchg
xor
dec
std
add
and
icebp
dec
imul
mov
mov
xchg
std
adc
icebp
mov
(bad)
mov
jne
sbb
mov
push
loope
repz
not
inc
jmp
lea
adc
inc
mov
xchg
or
cmps
xor
test
xchg
ins
fs
inc
call
add
or
and
inc
add
aad
stos
xor
bound
and
sbb
xchg
pop
movs
lds
mov
arpl
mov
(bad)
xor
and
push
cdq
and
push
xor
push
dec
mov
(bad)
ins
cmps
dec
ins
cmps
dec
add
lea
or
or
data16
adc
out
inc
inc
rol
xchg
mov
adc
mov
jmp
int3
or
dec
cs
mov
les
aad
psubusw
xchg
inc
xchg
test
add
cmp
add
sub
or
xor
push
dec
in
mov
fwait
imul
pop
push
and
push
leave
ror
mov
sbb
(bad)
and
nop
or
cmp
fiadd
mov
or
sbb
pop
bound
mov
add
xchg
adc
retf
stos
sub
push
xor
test
mov
adc
ficom
sub
shr
or
jbe
push
dec
mov
nop
pop
pop
imul
test
jmp
dec
(bad)
lock
cs
test
jo
add
and
xchg
xor
sar
add
stc
push
out
cmp
dec
jne
xchg
stos
or
fild
pop
xor
fdiv
aaa
(bad)
shl
pop
pop
lods
jle
or
mov
push
stc
in
pop
add
sbb
mov
daa
in
jns
mov
imul
jne
pop
cmps
dec
(bad)
icebp
or
xor
push
xchg
test
mov
xchg
cwde
arpl
test
xchg
iret
cwde
mov
adc
movs
outs
jb
(bad)
xchg
aam
push
cmp
push
cmp
and
mov
lock
jg
daa
movs
jg
scas
dec
cmc
cld
pop
mov
and
call
outs
jecxz
cld
mov
xlat
std
jns
add
pop
jmp
ret
and
adc
jb
test
xor
sub
imul
pushf
sub
int3
xchg
aam
(bad)
push
add
push
xor
test
mov
and
(bad)
fldenv
shl
retf
pop
sub
push
scas
sub
adc
or
aas
loope
sub
fisubr
mov
(bad)
nop
mov
push
sbb
add
loop
cmp
jmp
movs
push
rcl
mov
ss
nop
mov
mov
xor
and
inc
xor
pop
and
stos
sbb
fidiv
inc
add
adc
call
lea
push
or
adc
dec
sbb
and
pop
push
xchg
mov
enter
sbb
mov
call
xor
adc
mov
mov
test
in
xchg
inc
push
fisttp
push
cmps
arpl
mov
push
add
sbb
add
mov
fimul
adc
sub
rcr
in
cmps
push
fisub
mov
push
lds
pop
adc
pop
mov
mov
jbe
sub
push
xchg
aaa
gs
fwait
imul
fild
bound
and
xor
push
or
sbb
mov
jbe
out
and
pop
data16
dec
adc
inc
cmc
xchg
test
mov
push
add
sub
sbb
xlat
sub
jae
mov
jbe
rcl
aas
xor
adc
das
repz
bound
pop
rcr
jns
daa
rcl
push
ror
inc
sub
mov
sub
clc
sbb
je
mov
clc
lds
out
dec
in
sub
mov
iret
cmps
imul
pop
sahf
xchg
aas
and
xchg
adc
xor
add
cld
arpl
pop
mov
jle
and
adc
movs
in
sbb
mov
mov
gs
xchg
mov
and
(bad)
imul
jne
out
xchg
sbb
out
xchg
ret
adc
inc
(bad)
mov
xchg
std
aaa
inc
loopne
retf
cld
outs
inc
xchg
pop
pop
inc
scas
aas
std
stos
sbb
jp
ds
jg
cmp
or
adc
adc
test
or
aam
or
pop
shl
sbb
pop
add
add
aam
imul
or
aaa
push
into
enter
mov
pop
mov
cdq
fadd
pop
imul
dec
fwait
jl
loope
cmp
sahf
cmp
icebp
outs
mov
test
scas
mov
mov
cmp
sbb
test
dec
enter
push
xchg
and
push
jb
inc
(bad)
out
xor
cmp
xor
(bad)
push
sbb
push
inc
push
and
add
xor
pop
mov
pop
push
lods
dec
test
pop
pop
or
mov
pop
nop
pop
push
scas
bound
push
xor
add
dec
cdq
fs
dec
add
push
fs
ins
push
popa
mov
ror
dec
fwait
(bad)
fild
in
push
and
push
fisubr
adc
add
xor
jmp
cwde
and
ins
mov
fisub
mov
popa
mov
arpl
pop
bound
adc
sbb
pop
sbb
int3
arpl
pop
sbb
or
sub
mov
fwait
push
sbb
popf
push
mov
mov
mov
pushf
mov
cmp
(bad)
fisttp
and
fs
push
push
xchg
cmp
cdq
imul
ret
mov
jmp
mov
xchg
lock
pop
inc
idiv
sti
push
mov
inc
push
and
jl
and
inc
jae
mov
jg
cld
jmp
imul
arpl
mov
mov
or
adc
xlat
hlt
pushf
gs
call
sahf
imul
clc
scas
adc
lods
out
je
lea
jne
jae
vsqrtpd
jle
jl
pop
icebp
dec
imul
bound
pop
aam
or
cmc
mov
fidiv
cmp
cwde
into
cmc
std
nop
jg
xchg
sar
dec
push
xchg
and
and
adc
xchg
inc
inc
inc
icebp
pop
xchg
dec
mov
mov
enter
(bad)
cwde
lds
push
push
sbb
push
xor
mov
mov
push
les
dec
cmp
outs
or
cld
imul
cmp
mov
mov
movs
mov
mov
dec
xchg
out
mov
fadd
(bad)
retf
ds
icebp
or
jmp
jl
ds
mov
mov
cmp
mov
and
movs
rcr
(bad)
push
dec
cmp
xchg
sub
push
push
dec
test
aad
loop
nop
enter
xchg
dec
push
call
int
(bad)
push
xor
lods
dec
push
cdq
mov
push
xor
retf
adc
push
test
adc
cmp
pop
inc
scas
bound
add
pusha
pop
adc
inc
and
dec
mov
inc
xchg
adc
jge
(bad)
fisttp
fiadd
dec
(bad)
adc
dec
mov
mov
rcr
fisub
ins
mov
psubusw
dec
je
fwait
sub
xchg
es
mov
and
inc
ret
ins
add
sub
sbb
movs
inc
mov
add
push
and
pop
(bad)
loop
pop
xchg
sub
xor
ins
push
push
sub
push
mov
imul
or
movs
push
mov
xor
fidiv
add
mov
xor
pop
cmp
xlat
xor
mov
scas
imul
in
xchg
cmp
or
xlat
out
xchg
out
lahf
cmps
loope
out
pop
outs
xlat
loope
hlt
and
add
js
mov
mov
(bad)
push
inc
mov
aas
xchg
scas
mov
cld
(bad)
mov
pop
mov
imul
gs
mov
cwde
xchg
push
cmps
cmps
adc
mov
xor
add
scas
outs
std
popf
jmp
inc
adc
enter
lock
jecxz
inc
enter
xlat
lahf
(bad)
aad
mov
(bad)
adc
cmp
push
aaa
mov
mov
adc
xchg
bound
dec
pop
push
xor
sub
push
dec
pop
out
cwde
mov
dec
sub
cwde
ds
in
aam
in
inc
sar
pop
cld
cmps
and
fs
ret
sbb
and
dec
test
jne
lds
or
lods
or
push
inc
cmp
or
sub
add
or
int
fs
adc
inc
(bad)
push
and
dec
lea
cmp
movs
enter
adc
inc
mov
pusha
dec
mov
cmp
mov
or
add
cmps
mov
add
mov
mov
je
test
aam
in
aam
mov
mov
adc
xor
pop
sub
sbb
stos
sub
dec
aad
outs
jmp
or
aam
pop
mov
push
add
xchg
sub
adc
and
push
mov
movs
add
add
pop
loop
arpl
arpl
pop
or
shl
and
mov
push
xor
jbe
mov
push
and
mov
and
mov
(bad)
(bad)
xlat
dec
jno
sbb
stos
adc
out
push
std
adc
xchg
sbb
mov
jb
clc
or
std
shr
daa
push
xchg
je
cmp
rep
dec
jae
pop
pop
das
mov
xchg
cmp
pop
sbb
(bad)
shl
inc
repz
aad
(bad)
jne
repz
sbb
xchg
lods
iret
es
(bad)
aaa
or
add
push
es
mov
dec
dec
adc
enter
push
add
jae
mov
cmp
mov
loopne
stc
outs
push
mov
std
or
fild
sbb
or
sahf
punpckhwd
and
outs
mov
adc
xchg
addr16
sub
jbe
lahf
pop
clc
jp
sub
ret
sar
cmps
cmp
ret
aam
pop
sahf
ss
sahf
xchg
dec
mov
popa
stc
mov
js
ret
jb
pop
mov
cld
stos
neg
test
jp
dec
push
jae
jmp
psrad
test
int
sub
into
in
out
ja
int
xchg
inc
sahf
lahf
in
repz
mov
jp
xchg
out
jge
jp
lea
xchg
mov
jne
lahf
mov
or
add
pop
sar
(bad)
add
inc
jl
aas
cmps
push
lea
cmc
jmp
mov
stos
lock
(bad)
scas
in
jae
jno
cdq
inc
xchg
mov
movs
xor
and
leave
push
pop
dec
add
mov
mov
sbb
aam
adc
xchg
adc
add
cmc
rol
int
cmps
add
add
xor
movs
out
push
push
xchg
inc
shl
adc
lds
inc
dec
add
and
int
movs
ins
xor
push
lods
retf
push
nop
adc
arpl
dec
push
sbb
inc
(bad)
loop
push
lds
xor
bound
test
cwde
loopne
dec
or
pop
adc
mov
retf
stos
cmp
loop
xor
add
cdq
mov
pop
add
xchg
add
inc
inc
cmc
daa
xor
push
inc
push
add
les
mov
fisttp
out
stos
sbb
adc
jmp
rol
enter
jae
xchg
stc
mov
add
xchg
mov
sbb
loop
inc
cmps
test
ins
and
loop
mov
dec
pextrw
pop
inc
or
arpl
movs
pop
fisub
dec
and
loop
mov
stos
add
mov
mov
dec
sub
jne
imul
cmp
movs
jb
sbb
movs
int3
xchg
cmp
inc
rol
xlat
or
addr16
xchg
cmp
enter
popf
push
dec
data16
outs
sar
(bad)
push
sti
lds
not
lahf
dec
mov
mov
std
sbb
jge
leave
mov
fldcw
out
jo
lds
hlt
lock
mov
adc
aas
addr16
(bad)
mov
test
jmp
stc
cdq
fxch
mov
ret
jp
inc
jle
cmp
test
jg
scas
push
xor
test
push
clc
jo
pop
rcr
add
rol
cmc
adc
aas
cmp
ret
cmp
mov
inc
mov
dec
add
cmovb
pop
test
jo
xchg
cmc
enter
fld
rol
push
add
fwait
inc
not
mov
int3
lods
jl
icebp
dec
and
lahf
mov
pop
jmp
addr16
mov
in
out
adc
dec
cmp
out
pop
mov
mul
movs
out
xchg
imul
in
out
sahf
retf
in
mov
inc
mov
cmc
and
push
(bad)
cdq
lock
test
dec
lds
cmovo
or
retf
clc
(bad)
out
into
mov
and
clc
ins
aas
loop
sar
(bad)
add
dec
jl
aas
cmps
test
adc
(bad)
lea
cmc
jmp
cmps
xchg
loop
aad
pop
cld
enter
mov
cmp
adc
inc
push
test
int
adc
mov
inc
shr
push
and
sub
sbb
lods
mov
inc
inc
xchg
pop
dec
rcl
sub
push
cmp
sub
popa
aam
xchg
inc
mov
sub
push
test
or
xchg
hlt
sbb
sub
bound
push
pop
(bad)
inc
add
sbb
sub
adc
adc
imul
arpl
dec
adc
push
ss
inc
fld
jb
mov
xor
(bad)
pop
xchg
pop
pop
jmp
push
jbe
gs
add
outs
pusha
dec
mov
and
bound
cdq
add
pop
xor
pop
inc
mov
xor
or
inc
not
dec
mov
add
xor
mov
and
dec
fs
test
cli
add
xor
(bad)
rcr
mov
mov
mov
push
pop
add
xor
pop
sbb
mov
test
not
sbb
sub
dec
inc
and
dec
xchg
jno
int3
inc
mov
adc
lods
mov
mov
cmp
out
push
xchg
test
scas
push
push
out
loopne
sbb
mov
sub
jg
jg
(bad)
idiv
add
out
push
sub
jge
pop
xchg
pop
cmps
mov
add
xchg
add
push
push
push
push
fmul
fsub
push
pop
cmp
jl
(bad)
jae
ficom
sar
jp
mov
mov
fcom
xchg
add
addr16
leave
ja
pop
inc
daa
out
iret
or
lods
jle
test
iret
leave
xor
int
pop
ins
mov
inc
jmp
pop
call
int
inc
mov
mov
out
bound
mov
mov
fcomp
xor
ss
enter
mov
cli
push
and
(bad)
int
ss
cmp
and
sub
jae
js
loop
sar
add
xchg
into
cmc
cld
xchg
mov
in
push
sar
and
add
iret
stc
adc
scas
cli
repz
fidiv
sahf
test
lahf
int3
mov
pop
fsub
loope
mov
or
stos
pop
fwait
pop
sub
xor
shl
(bad)
es
mov
movs
mov
adc
pop
inc
and
mov
dec
(bad)
test
lds
cdq
push
lock
lds
movs
sbb
pop
ror
or
bound
or
push
and
cmps
pusha
dec
add
inc
or
add
and
adc
push
sbb
xchg
mov
push
xchg
ror
mov
sub
mov
inc
in
mov
xor
xchg
add
add
out
test
cmp
add
sub
cmps
add
sub
in
int3
les
pusha
sub
test
pop
call
dec
or
mov
es
inc
mov
and
or
xchg
nop
adc
or
push
or
xchg
push
xor
sub
call
fdiv
shl
mov
fist
dec
arpl
aad
in
mov
jbe
inc
push
fisttp
jbe
adc
ins
dec
(bad)
in
movs
xor
popf
inc
dec
lea
lds
inc
pop
sbb
cld
jne
enter
xor
aam
sbb
xlat
xor
(bad)
push
icebp
aam
sub
jbe
and
mov
add
jg
call
cld
sbb
jmp
stc
cmp
add
push
add
rol
inc
or
ret
in
lods
cmps
imul
dec
jb
sub
pop
mov
scas
mov
jl
inc
mov
imul
mov
fist
adc
jle
cmp
loop
jnp
test
scas
mov
sub
lods
int3
(bad)
pop
xchg
add
das
pop
jg
paddw
icebp
enter
cld
adc
jecxz
cld
mov
xlat
std
jns
add
dec
jmp
aaa
(bad)
adc
test
out
pop
fsub
loopne
jmp
and
xor
inc
inc
inc
arpl
cmp
iret
inc
retf
adc
sub
mov
and
mov
pop
sbb
or
dec
xor
mov
shr
out
or
scas
data16
jns
jmp
scas
mov
and
call
cld
mov
je
cmp
dec
xchg
movs
pop
aam
push
mov
les
sub
mov
and
push
inc
push
xor
bound
and
sbb
xchg
cmp
leave
sbb
gs
shl
sbb
aad
aas
ins
xor
ret
(bad)
dec
add
cwde
retf
retf
dec
mov
and
imul
sub
jne
inc
movs
pop
push
push
push
push
dec
dec
pop
push
cmp
sub
cdq
nop
mov
pop
xor
sub
aas
xor
lock
or
xchg
push
push
dec
call
push
aas
xor
aas
xor
pop
push
add
adc
mov
out
and
push
aaa
ins
xor
rol
fist
mov
cmp
(bad)
fisttp
in
mov
mov
push
push
std
xchg
or
(bad)
aam
sub
es
fadd
into
outs
(bad)
mov
jb
pusha
push
xor
(bad)
mov
das
test
retf
xor
jb
and
mov
mov
jg
lahf
cdq
jg
outs
jmp
inc
xor
sub
push
ins
out
xlat
xor
ja
ret
pop
cld
sub
jns
push
mov
mov
add
add
inc
push
ins
lods
js
retf
and
inc
sbb
sbb
mov
inc
enter
sub
dec
pop
out
loop
aam
retf
(bad)
repnz
xchg
mov
cmps
xchg
fimul
sahf
imul
loopne
(bad)
adc
mov
imul
in
aas
(bad)
mov
leave
clc
(bad)
mov
in
and
cld
ins
inc
xchg
and
add
imul
mov
mov
adc
(bad)
aam
pop
pop
out
sub
xor
push
push
or
or
cmp
(bad)
ficom
clc
jns
or
fidivr
dec
mov
lds
sbb
bnd
push
retw
ficomp
xor
(bad)
jmp
inc
xor
hlt
sti
sub
inc
lods
(bad)
int3
shrd
sbb
mov
js
imul
in
cli
movs
mov
int3
imul
mov
push
and
int3
int3
xchg
movs
xchg
clc
movs
bound
shl
dec
and
xor
push
and
inc
loop
arpl
add
pop
mov
sbb
imul
lds
inc
fist
retf
push
es
mov
jg
dec
mov
sub
jo
int3
add
push
loop
and
push
cwde
cli
xchg
leave
imul
jno
sub
mov
test
inc
and
int
bound
or
mov
stos
dec
mov
push
arpl
call
mov
in
aad
fwait
adc
stos
es
xchg
popa
stc
movs
add
adc
push
fldenv
aam
pushf
sbb
lods
inc
fld
es
cmps
xor
adc
aad
mov
sbb
adc
xchg
loop
xor
fst
cmp
xchg
loop
mov
test
test
aad
fst
and
pop
xor
retf
sahf
pop
and
mov
mov
mov
or
stos
and
inc
adc
data16
push
into
push
scas
arpl
enter
pop
pop
enter
les
adc
adc
jnp
xchg
loope
dec
pop
scas
mov
mov
ja
stos
jecxz
push
daa
fadd
cdq
cmc
outs
cdq
popa
stos
inc
mov
inc
inc
(bad)
inc
leave
daa
sub
xchg
push
rcl
cmp
lods
jl
cmc
add
or
add
dec
add
inc
(bad)
(bad)
xor
mov
ret
int
xor
loope
pop
and
cmp
fsubr
(bad)
mov
iret
retf
das
arpl
daa
adc
xchg
scas
sbb
jmp
ret
(bad)
pop
je
add
loope
add
cmp
shl
jle
sahf
jg
mov
inc
lea
mov
jne
sbb
mov
push
loope
repz
sti
sbb
adc
nop
es
pop
sbb
add
ror
xchg
sti
aas
sbb
out
inc
fist
iret
iret
je
cmp
sbb
jl
jle
not
addr16
dec
sbb
xchg
int3
imul
cmp
les
stos
mov
ds
mov
sbb
lea
or
test
imul
cmp
lds
dec
jns
repz
mov
jae
rcr
ror
lds
mov
lar
xchg
rcr
add
inc
push
movs
sub
mov
push
sub
leave
inc
lods
lea
rol
sub
sbb
push
scas
dec
adc
and
imul
imul
sub
sbb
cmp
lods
mov
pop
test
(bad)
int
push
push
or
inc
out
and
imul
dec
inc
fwait
int
xchg
stc
xchg
mov
jns
adc
push
(bad)
out
stos
sbb
xor
mov
hlt
or
mov
xchg
jne
pop
xchg
inc
leave
cmp
mov
and
sub
dec
sub
push
sub
sub
add
mov
push
pop
sub
daa
adc
or
and
add
pop
add
sub
ucomiss
push
sub
or
xchg
inc
or
xchg
inc
stc
je
push
add
mov
and
es
sub
push
jmp
and
inc
data16
int
movs
jge
loope
pop
shr
retf
xlat
sahf
push
ds
cmps
fcomip
scas
ret
mov
pop
jae
jmp
dec
mov
adc
push
add
add
push
add
jl
jecxz
or
(bad)
xlat
push
retf
xchg
inc
ror
(bad)
jecxz
cmps
push
stos
rcr
pop
or
loopne
xor
xchg
aam
adc
scas
jl
inc
xchg
jnp
inc
scas
pop
sti
cmp
cmc
jg
inc
hlt
pop
pop
test
jnp
scas
inc
(bad)
mov
jne
sbb
mov
push
loope
repz
xlat
imul
clc
sub
inc
jae
adc
dec
mov
imul
mov
aas
inc
xchg
dec
sar
inc
jle
jge
out
enter
jnp
jecxz
pop
pop
xlat
ins
ins
jecxz
lods
mov
xor
retf
(bad)
scas
scas
inc
sbb
retf
test
sub
xor
dec
and
movs
xchg
pop
push
and
sbb
xchg
pop
rcl
lds
jmp
lds
aam
cmp
ins
push
and
pop
sbb
add
int
aad
jle
or
aas
xor
enter
out
add
or
sub
jmp
test
mov
sub
jl
fs
push
xor
push
test
dec
cmps
xor
dec
push
int
popa
stc
cmps
jno
jbe
adc
aas
xor
sub
imul
sub
push
add
adc
add
sub
aad
push
pop
fisttp
cwde
lods
retf
aam
mov
mov
push
test
icebp
push
xor
movs
pop
sub
mov
inc
arpl
pop
adc
dec
in
cmp
sub
mov
aam
xchg
stc
push
int
bnd
xor
sbb
rol
dec
or
je
dec
in
adc
stos
and
pop
nop
pop
push
test
mov
mov
jns
sub
pop
loop
call
pop
adc
xor
dec
add
sahf
arpl
add
loopne
stos
fild
inc
xchg
mov
mov
sub
add
add
push
add
add
sbb
stc
out
lea
pop
xchg
adc
repz
mov
xchg
lock
movs
jg
push
test
push
cmp
fistp
adc
enter
aam
add
add
mov
aas
mul
out
inc
sbb
call
jecxz
pop
cld
mov
xlat
std
jp
in
pop
jmp
aas
(bad)
adc
pop
mov
xchg
push
push
lds
mov
mov
dec
sub
or
cmp
pop
and
retf
scas
sahf
xchg
stos
aaa
cmc
js
push
dec
in
out
push
test
ret
mov
mov
mov
pushf
mov
mov
inc
rol
imul
inc
or
adc
int
es
pop
sbb
shr
add
inc
test
mov
adc
and
test
adc
cs
sbb
push
pop
sbb
adc
inc
or
inc
or
xor
adc
and
inc
fs
add
aad
xor
es
push
movs
mov
adc
lods
mov
or
push
add
xor
movs
add
mov
rcr
add
test
push
inc
push
xor
movs
and
add
sub
dec
mov
pop
mov
fsub
nop
mov
sub
push
mov
mov
mov
pop
loopne
movs
xor
ficom
into
jge
pop
mov
mov
mov
stos
cs
adc
retf
adc
stos
sbb
mov
mov
bnd
movups
add
xchg
inc
mov
std
pushf
(bad)
ja
lock
mov
xchg
and
push
xchg
and
cmp
mov
dec
and
mov
ds
out
in
in
push
cmp
mov
retf
in
lahf
jecxz
mov
std
xchg
popf
cs
xlat
imul
test
sub
mov
cmps
push
fnsave
mov
jle
jmp
sbb
mov
and
jge
or
lock
mov
and
int3
(bad)
int
cmp
add
mov
pop
icebp
icebp
push
jecxz
stc
jmp
aas
or
pushf
xlat
push
pop
test
add
add
inc
fstp
jb
mov
outs
lea
and
pop
cmc
out
add
(bad)
adc
or
cdq
mov
mov
and
dec
sub
les
jns
xor
dec
mov
sub
mov
enter
retf
and
cwde
sar
mov
shl
mov
rcl
cdq
movs
dec
xchg
add
add
mov
pop
fs
stos
mov
cdq
fs
int3
mov
enter
adc
dec
and
pop
xchg
sub
clc
cmps
add
push
inc
mov
mov
adc
test
or
or
add
mov
inc
test
cmps
xor
or
test
xor
add
imul
mov
je
xlat
xor
sub
or
shl
sub
sub
adc
dec
mov
sub
mov
sub
mov
nop
mov
imul
mov
loop
adc
push
push
sub
pop
or
rcr
xchg
push
sub
mov
dec
jmp
xor
stos
inc
pop
loopne
sub
cmp
test
xor
sub
and
fsub
int3
(bad)
icebp
add
xlat
arpl
mov
(bad)
and
lahf
aam
scas
pushf
je
repz
test
mov
shl
cmp
retf
loopne
(bad)
jmp
adc
rcl
clc
dec
xchg
jl
mov
push
pop
xor
or
mov
jge
dec
std
cmp
push
push
addr16
pop
pop
xor
test
and
neg
cmp
(bad)
mov
arpl
shr
ins
loopne
fadd
retf
lods
in
(bad)
xlat
xchg
and
cmps
ret
repz
in
pop
in
pop
cs
pop
xchg
xchg
gs
sbb
int3
cmps
jl
inc
sbb
mov
mov
pop
mov
mov
ret
mov
jl
cmps
pop
push
addr16
icebp
sub
jg
call
adc
sub
imul
repnz
mov
push
sbb
xchg
sub
out
xlat
mov
stos
pop
popa
pop
dec
out
dec
inc
adc
jmp
in
mov
ret
leave
sub
ret
test
pop
(bad)
mov
(bad)
call
push
cmp
and
aas
fst
jae
adc
jmp
icebp
mov
xlat
out
dec
inc
in
mov
pusha
jp
xchg
std
xchg
sbb
fisttp
mov
lds
mov
lahf
push
jmp
inc
sbb
cmp
call
leave
scas
int
inc
inc
call
ins
cmp
cmps
dec
(bad)
scas
loop
cli
xor
jg
in
push
int
jb
jge
test
popf
nop
pusha
imul
popa
stc
mov
inc
sbb
imul
push
dec
outs
lods
inc
jl
scas
clc
shl
out
lds
dec
mov
add
ss
(bad)
fcos
add
inc
jmp
pop
jl
jb
iret
iret
and
pop
imul
xchg
scas
fld
inc
pop
icebp
scas
into
sbb
dec
dec
shr
add
xor
loope
add
dec
std
hlt
dec
std
sub
pushf
ins
js
xchg
into
(bad)
mov
loop
inc
push
std
ss
retf
out
pop
lahf
les
mov
pop
cwde
xlat
hlt
sar
popf
int3
pop
pop
in
xor
push
cmp
inc
and
pop
cli
jecxz
add
clc
in
inc
inc
loope
call
pop
inc
scas
aas
std
stos
sbb
call
scas
jmp
lock
mov
and
push
pop
ins
sbb
movs
push
cwde
les
add
xor
mov
pop
xor
add
enter
adc
in
lahf
adc
and
add
(bad)
arpl
arpl
stos
adc
or
enter
sbb
sub
push
add
jae
ins
sbb
push
and
mov
mov
or
sbb
pusha
cmp
lods
or
dec
or
cwde
or
and
or
bound
dec
push
add
push
sub
stos
push
inc
jne
mov
retf
popa
push
add
or
lds
pop
mov
bound
mov
lds
mov
mov
mov
movs
bound
call
or
dec
jmp
or
lock
mov
mov
data16
fsubr
movs
fdivr
mov
dec
rcl
mov
(bad)
add
push
push
xchg
cli
fcomp
bound
adc
cli
sar
xor
lods
inc
out
loopne
ds
das
out
add
xor
(bad)
jle
add
inc
adc
iret
adc
xor
test
dec
cld
stos
repz
ds
mov
pop
mov
hlt
jle
push
dec
hlt
stos
adc
dec
mov
pop
int3
call
xchg
retf
shl
std
lock
(bad)
jne
std
pop
mov
xchg
xlat
in
cmps
in
arpl
xor
das
xchg
(bad)
call
ds
jnp
fdivr
fimul
push
(bad)
lea
ror
xlat
adc
pusha
jbe
inc
cmps
ins
jnp
test
push
je
fild
push
jmp
data16
fadd
loope
enter
pop
js
cmp
fimul
lock
aaa
xchg
cmp
xchg
ins
cmp
dec
arpl
jmp
pop
pop
movs
(bad)
mov
or
jecxz
or
test
jg
jp
mov
addr16
test
out
sahf
or
inc
cmp
sub
push
dec
sahf
ror
and
push
push
test
std
pusha
outs
stos
sub
mov
jp
not
in
and
xchg
int
clc
scas
push
xchg
and
jecxz
(bad)
jg
jp
xchg
jnp
pop
stos
cs
dec
jae
sbb
and
pop
imul
sub
into
repz
xchg
cs
sti
int
add
scas
iret
mov
call
mov
mov
leave
dec
xlat
add
popf
pop
in
inc
addr16
fisttp
imul
mov
iret
call
pop
aas
sub
aas
fistp
gs
jae
cmp
aam
jmp
push
outs
pop
aas
call
pop
std
add
mov
cdq
stc
ins
cmp
(bad)
mov
int3
aaa
dec
in
xor
dec
jl
inc
and
pop
cli
jecxz
add
clc
in
inc
inc
loope
cdq
jl
inc
xchg
and
add
jne
(bad)
cmp
into
addr16
cdq
and
push
add
xchg
shl
add
adc
pop
test
inc
test
cmps
fs
cwde
das
lods
xor
lds
xor
dec
add
sub
xor
mov
pop
xor
adc
nop
sbb
ss
sbb
dec
rcl
mov
pop
(bad)
cmps
add
dec
into
sub
or
mov
cwde
or
nop
cmps
and
add
test
sbb
mov
aam
jne
and
mov
inc
imul
mov
and
dec
and
mov
loop
or
cmps
add
and
test
pop
aam
mov
adc
clc
test
jle
or
sub
or
ins
and
sub
inc
pop
or
jns
mov
cmps
mov
imul
add
call
and
fs
pop
shl
js
into
xor
out
jl
aas
mov
icebp
outs
jle
mov
pop
xor
jns
cwde
gs
xchg
in
mov
mov
inc
les
cmp
aam
arpl
iret
push
aad
in
in
cmp
test
scas
sbb
shr
inc
jae
adc
xchg
xchg
mov
(bad)
out
sbb
call
into
pop
shl
movs
jl
lahf
ins
xchg
adc
jecxz
lahf
sti
loope
(bad)
jne
fdiv
cmp
cmp
loope
out
dec
stos
xchg
repnz
popa
sti
int3
ds
out
daa
mov
cmps
inc
jl
sub
addr16
push
shl
sub
mov
jg
pop
imul
dec
dec
test
inc
pop
dec
lock
ret
ins
sub
jns
out
sub
(bad)
push
out
in
fsub
lea
sar
lods
jecxz
xchg
jb
cmp
cmc
scas
dec
aad
repz
sub
sbb
in
icebp
sub
mov
pop
imul
push
jmp
shr
adc
retf
fild
sub
pop
popa
cli
cdq
push
call
ret
cmp
mov
aaa
and
xlat
sahf
cmp
test
mov
adc
(bad)
push
jp
xor
and
dec
inc
cmp
and
js
jo
pop
inc
and
pop
mov
test
repz
retf
cld
clc
shl
dec
push
push
or
test
mov
fnstenv
out
femms
js
sbb
jl
mov
out
sar
mov
std
mov
jl
loope
mov
fs
dec
mov
sahf
jmp
loope
ja
movs
iret
mov
adc
iret
in
xchg
int
mov
fistp
sbb
mov
in
int
jns
lds
ror
and
jl
pop
jbe
mov
aaa
pop
mov
in
mov
jnp
pop
dec
sar
xor
mov
xchg
test
rcl
in
or
dec
stos
js
(bad)
fisubr
stos
xor
and
cld
pop
cmp
pop
ins
sub
push
push
rcr
inc
repnz
enter
adc
(bad)
fstp
arpl
lods
je
mov
jge
and
lods
sbb
sub
jl
cmps
sar
xlat
add
ins
jae
mov
movs
call
fs
add
jbe
sar
out
pushf
jns
das
ret
mov
adc
loop
mov
mov
(bad)
mov
icebp
imul
jge
test
sbb
ficomp
mov
hlt
aad
repnz
xchg
jle
pop
sti
(bad)
in
mov
mov
cmc
add
not
xchg
fld
in
out
inc
mov
jmp
mov
fist
cs
jmp
jmp
inc
repnz
aad
jg
sub
(bad)
xor
jg
aas
mov
sbb
(bad)
fsubr
push
mov
aam
ja
pop
sbb
std
jno
cmc
jmp
ins
iret
int3
fsin
icebp
scas
jmp
jp
xor
dec
cld
adc
add
cmp
cli
jecxz
add
clc
movs
jle
add
inc
xchg
cld
imul
xchg
and
add
jbe
(bad)
cmp
int
cmps
mov
test
sub
pusha
push
xor
inc
or
ret
push
add
mov
sub
sbb
lods
into
adc
inc
adc
xchg
jo
data16
xchg
xor
mov
stos
cwde
arpl
in
aam
es
ins
jae
int
jb
call
push
sbb
aam
dec
xchg
pop
mov
adc
pop
xchg
push
xor
push
movs
mov
stos
dec
enter
and
call
out
int3
xchg
push
mov
aas
and
clc
mov
xor
(bad)
(bad)
pop
dec
loopne
inc
bound
adc
rcl
mov
inc
test
push
sbb
sub
mov
push
xor
pop
fiadd
rcl
and
add
int3
data16
add
xlat
sbb
rcr
inc
cmps
push
xchg
loopne
int3
mov
hlt
enterw
mov
(bad)
sub
std
add
xor
or
xchg
push
adc
xor
test
inc
xor
push
popf
adc
aas
mov
jge
pop
sub
int
mov
sahf
sahf
jmp
push
mov
pop
aad
push
jo
fstp
fs
out
inc
idiv
aas
mov
loopne
pop
xchg
rcl
std
dec
stos
mov
into
inc
sahf
jl
repnz
mov
aam
ficom
jmp
jbe
adc
fistp
pop
fmul
mov
je
cmp
dec
or
mov
imul
mov
lods
test
imul
pop
ins
repz
out
(bad)
lock
scas
sub
iret
and
sub
enter
inc
hlt
test
rcr
push
jmp
mov
xchg
mov
sti
stos
aaa
cmc
cli
sahf
movs
xlat
xlat
sub
(bad)
stc
inc
sub
cli
and
out
popa
pop
div
enter
sbb
xchg
retf
loop
adc
and
or
jmp
mov
mov
ins
sub
repz
inc
std
aam
out
sub
repnz
add
or
xchg
inc
(bad)
div
fstp
xor
xor
inc
cmc
(bad)
scas
xlat
push
mov
push
ja
imul
dec
mov
fadd
mov
jle
pop
mov
cli
call
dec
(bad)
xchg
pop
lock
ret
loop
fld
mov
stos
sub
and
mov
lahf
ins
pop
pop
(bad)
jnp
dec
xor
das
daa
fiadd
(bad)
repz
(bad)
mov
daa
js
mov
sub
movs
in
stc
cld
mov
aas
mov
pop
add
push
push
mov
test
aas
repnz
sbb
jge
ja
lahf
xor
data16
loope
push
nop
jg
cmp
out
stos
mov
dec
pop
iret
fidivr
cmp
inc
sbb
cs
shl
fcomp
sbb
dec
sahf
cld
mov
frstor
sub
inc
ins
fwait
xchg
xor
xor
cli
leave
sbb
jmp
mov
sub
dec
mov
xchg
scas
into
imul
xchg
xlat
into
jg
ins
adc
dec
loope
cmp
fs
imul
repnz
sub
mov
cmps
dec
cli
repz
adc
cdq
sti
int
xchg
fcom
xchg
jp
inc
sbb
mov
rol
and
push
jae
hlt
pop
push
pop
xor
fs
jle
push
out
jno
and
aad
lahf
cmps
mov
adc
jb
jmp
adc
adc
mov
cmp
jnp
leave
(bad)
jmp
add
lock
dec
fsubr
iret
cwde
shl
or
fwait
jne
add
test
mov
xor
mov
xor
sar
add
sti
xor
lods
outs
mov
je
adc
ja
mov
cli
repz
ficom
mov
jecxz
scas
in
xor
(bad)
cmp
pop
test
sahf
cdq
cdq
xor
mov
test
pushf
or
pop
mov
lods
or
cmps
add
add
dec
or
mov
inc
inc
inc
stos
inc
dec
mov
pusha
cmp
push
sub
pushf
gs
or
aam
vpunpckhbw
(bad)
out
jmp
test
and
push
and
sbb
add
into
rcl
inc
in
rol
hlt
adc
cdq
add
xor
cmp
xchg
xor
cs
inc
push
pop
cli
add
dec
mov
fisttp
jno
mov
aam
lahf
ins
add
movs
dec
je
push
xor
fs
imul
test
mov
push
sub
dec
mov
mov
add
sub
(bad)
dec
out
jmp
xlat
sahf
into
xchg
jle
clc
mov
xchg
test
retf
ds
cld
mov
add
cli
push
repz
pushf
scas
push
idiv
(bad)
addr16
lea
add
jmp
lahf
xchg
jnp
fcomp
mov
cmps
cmp
test
repz
mov
add
out
jbe
xchg
in
jp
int
mov
sbb
pop
out
mov
inc
iret
sbb
xchg
and
dec
xor
mov
js
jmp
hlt
push
daa
xor
jge
pop
mov
mov
stc
mov
lds
push
aas
bsf
mov
xor
test
lahf
lock
(bad)
cmp
mov
push
int
jp
(bad)
pop
test
rcr
repz
(bad)
fsub
test
jmp
xlat
cmp
pop
imul
dec
and
add
mov
iret
movs
and
jbe
mov
xchg
xchg
pop
aas
ret
iret
neg
imul
dec
fstp
ins
xchg
sbb
jbe
sti
repnz
out
cmp
sub
mov
cld
rcr
mov
add
repz
fwait
xlat
sahf
retf
jge
pop
call
popf
inc
mov
in
repz
sub
pop
(bad)
xchg
pop
ins
jecxz
mov
imul
cmp
ds
jno
ins
jmp
fnsave
fidivr
out
cld
inc
loope
mov
cmps
push
fidivr
cmp
loop
cmps
push
xchg
fisub
addr16
std
imul
scas
cmp
movs
jl
push
mov
sbb
inc
and
or
cmp
jl
fs
mov
jns
repnz
xor
jp
int3
sub
in
cmp
pop
mov
jne
stc
cmps
or
sti
iret
sub
add
jne
jne
push
ss
jb
mov
or
or
sahf
inc
(bad)
call
mov
fnstcw
jmp
js
xchg
inc
lea
out
leave
cmp
jge
pop
mov
in
and
mov
cmp
ret
or
das
pop
das
jae
inc
push
ds
mov
cmps
aad
lea
mov
fstp
outs
int3
jne
retf
cmc
scas
cmp
lods
jne
cmps
ja
mov
mov
into
fistp
jg
sub
mov
out
pop
mov
xchg
cmp
inc
je
aas
cwde
sub
and
jmp
iret
inc
mov
inc
xlat
nop
sub
sub
inc
mov
neg
lahf
addr16
fyl2xp1
sub
xchg
and
or
sbb
xlat
jecxz
scas
sar
jp
mov
fmul
jmp
mov
(bad)
sar
int3
and
ret
loop
jecxz
fimul
(bad)
rcr
push
retf
mov
iret
outs
std
repz
push
loop
out
je
adc
aad
sahf
enter
push
clc
rol
push
je
mov
in
add
add
jbe
xlat
push
xchg
stos
pop
inc
out
xor
cmp
test
mov
ins
addr16
arpl
gs
sbb
retf
mov
xchg
dec
inc
mov
add
fisttp
jg
jle
retf
retf
and
mov
cld
in
pushf
jl
std
or
mov
add
(bad)
mov
pop
into
cmc
mov
clc
push
in
sbb
add
dec
(bad)
mov
push
pop
mov
ds
jg
in
fidivr
sub
sub
adc
dec
push
pusha
movs
aam
sub
pop
xchg
dec
pop
cdq
push
stos
xor
cwde
xchg
jp
in
call
cdq
rcl
jne
jno
movs
pusha
int3
retf
adc
arpl
add
adc
cmp
sub
push
add
cmps
bound
sub
jmp
inc
xor
(bad)
out
shrd
add
inc
mov
inc
bound
add
mov
sub
push
xchg
adc
sub
inc
mov
adc
adc
and
push
daa
or
xor
enter
mov
push
sub
add
push
xchg
inc
fld
dec
mov
jbe
or
ins
and
movs
xor
or
int3
gs
sub
xchg
retf
xchg
scas
inc
lahf
dec
js
loop
int
dec
or
daa
mov
daa
or
retf
(bad)
mov
out
and
scas
mov
sub
(bad)
call
out
daa
(bad)
cmp
push
(bad)
and
or
daa
jmp
add
mov
test
and
stos
int3
int
movs
mov
(bad)
fstp
add
dec
pop
pop
test
scas
jbe
test
in
pop
cdq
fwait
mov
xchg
lds
mov
sub
movs
jno
fsubr
push
mov
xchg
jb
xchg
data16
test
jbe
mov
int3
stos
and
out
bound
push
push
aaa
jb
adc
push
stos
push
neg
push
inc
in
add
add
mov
retf
repz
ror
inc
xlat
scas
(bad)
ja
cli
(bad)
xor
imul
jle
scas
(bad)
push
adc
imul
sub
xchg
jecxz
mov
dec
sub
std
mov
jae
call
jg
pop
dec
fwait
push
loop
pop
inc
out
out
mov
out
mov
scas
jns
inc
arpl
pop
sti
cmps
adc
test
pop
scas
xor
cdq
aas
dec
lock
daa
fadd
mov
sti
pop
ja
or
xchg
dec
aas
fisub
fcom
cwde
in
pop
int3
scas
inc
loope
inc
mov
jl
setp
push
out
xchg
mov
scas
push
inc
mov
jo
rol
pop
out
rcr
xchg
fldenv
xlat
rcr
fsubr
jae
add
mov
pusha
jo
enter
in
scas
movs
xchg
mov
xor
out
dec
dec
jmp
pop
mov
fisttp
pop
lea
xor
add
std
not
jb
ret
push
jb
jp
(bad)
push
xor
cmc
out
addr16
mov
xlat
push
lea
jmp
push
mov
xor
cmp
clc
stos
cmc
mov
add
scas
or
xor
stos
inc
call
icebp
pop
mov
scas
pushf
ds
stc
inc
(bad)
adc
popa
mov
jg
(bad)
call
hlt
scas
mov
adc
ds
jle
jle
push
xor
mov
cmp
ss
stc
xor
retf
inc
js
scas
jmp
rcl
arpl
mov
ret
mov
mov
ret
pop
cld
dec
adc
aad
sbb
call
in
inc
pop
jg
scas
out
fist
fisubr
jl
repnz
imul
inc
mov
scas
fdivr
(bad)
adc
or
cdq
(bad)
sar
adc
sub
movs
xor
retf
adc
mov
je
dec
mov
retf
add
mov
inc
pushf
jp
or
mov
shl
or
or
push
aas
adc
cwde
push
fisub
mov
mov
sub
push
xor
mov
sub
adc
or
push
adc
cmp
(bad)
xchg
sbb
call
or
test
adc
fwait
(bad)
lds
adc
fimul
and
sub
sbb
and
sbb
fiadd
xchg
ins
add
jno
inc
sub
xchg
ins
add
lea
jo
and
push
dec
push
and
xchg
pop
fild
adc
cwde
sub
fs
xchg
nop
adc
or
add
add
push
sub
xchg
inc
lds
mov
mov
xor
int3
fs
add
or
hlt
or
jmp
stos
inc
pushf
xor
repz
data16
call
jmp
add
or
and
fidivr
js
jp
in
jae
jmp
xor
enter
inc
lods
test
idiv
lahf
mov
sbb
jmp
sbb
pop
mov
pop
outs
movs
add
inc
nop
xor
sbb
adc
je
push
fst
hlt
and
inc
cld
mov
in
mov
shl
sub
jle
xor
out
leave
es
cld
sub
jne
out
dec
shl
inc
mov
(bad)
mov
cmp
shl
out
daa
fisubr
add
cld
ds
popf
outs
mov
jmp
cld
push
mov
fstp
imul
adc
fst
popa
(bad)
xlat
repnz
xlat
rcl
movs
jge
repz
fild
cmp
in
dec
cmp
mov
retf
bound
inc
adc
test
xor
adc
and
lods
or
mov
cli
aaa
loopne
stc
add
jg
pop
std
cdq
stos
stc
into
mov
and
mov
jecxz
cld
mov
xlat
std
jns
add
dec
jmp
psllw
(bad)
scas
ret
js
test
js
int3
cmp
pop
pusha
dec
push
push
sub
jmp
jae
xchg
push
sbb
rcr
inc
retf
or
jae
aad
push
sbb
push
rol
mov
dec
int3
xchg
sub
mov
or
or
dec
bound
or
push
(bad)
(bad)
or
push
adc
pop
mov
shl
or
dec
mov
xor
add
mov
push
and
xchg
add
dec
push
xor
dec
xchg
jbe
xor
stos
xor
pop
mov
or
and
dec
shr
add
xchg
adc
int3
dec
and
sub
mov
push
add
add
pop
inc
adc
mov
fist
shr
ins
inc
leave
jno
push
fiadd
adc
push
test
sub
(bad)
(bad)
movs
mov
sbb
jae
pop
push
push
xor
xor
add
call
outs
mov
fisttp
shr
mov
mov
call
jl
jl
sahf
aas
sbb
in
mov
jae
int
add
push
mov
rol
add
dec
push
fst
fld
pop
or
enter
and
sub
cmc
push
mov
pushf
outs
jne
sbb
add
xchg
inc
fisub
dec
in
dec
aad
mov
xor
jmp
jno
scas
jmp
clc
lods
dec
cmps
jl
loop
mov
mov
aaa
into
pop
imul
add
ss
sti
pop
cmps
mov
mov
mov
push
ins
mov
(bad)
xor
sahf
imul
int
dec
push
push
cs
or
xor
inc
mov
cmc
(bad)
inc
pushw
jae
icebp
dec
std
repnz
ret
clc
xlat
inc
and
inc
pop
jg
push
cmp
ret
cld
jno
stos
lock
pushf
outs
mov
cmp
mov
and
add
push
les
add
test
int
inc
pop
push
jb
cmps
xor
cdq
mov
cmp
mov
sub
pop
xor
cmp
mov
fadd
(bad)
inc
or
dec
push
sub
ss
ins
xor
movs
and
mov
inc
inc
add
aam
inc
push
add
or
and
adc
pop
mov
mov
dec
xchg
and
sub
lds
lds
sbb
sub
test
sbb
dec
mov
or
sub
movs
pop
enter
inc
xchg
adc
dec
mov
dec
mov
leave
mov
adc
add
push
and
inc
mov
ins
dec
mov
mov
xchg
sub
mov
ret
xchg
jmp
dec
add
dec
call
sbb
pop
xor
pop
pop
xchg
dec
and
arpl
mov
push
and
push
adc
xor
mov
push
xor
arpl
arpl
sahf
nop
mov
mov
pop
push
pop
xor
and
test
aad
mov
jg
in
sub
(bad)
loope
or
inc
sti
mov
aaa
cmp
and
(bad)
es
pop
cwde
adc
es
pop
call
push
cmp
dec
rol
sub
add
jg
lahf
repnz
aas
sti
xor
xchg
outs
mov
je
adc
dec
(bad)
mov
cli
repz
ficom
mov
loope
aad
test
ds
xchg
push
cwde
xchg
or
or
or
pusha
sub
shld
cwde
jmp
jno
cdq
retf
sub
xchg
out
cmp
aaa
add
lds
and
retf
dec
mov
rcr
pusha
dec
call
pop
inc
xor
ss
push
nop
(bad)
sbb
cmp
jmp
ret
add
adc
inc
movs
stos
or
sti
dec
and
sub
xor
dec
mov
add
stos
sub
add
add
cmps
and
ror
mov
inc
and
xor
push
xor
inc
adc
dec
push
add
adc
lods
mov
or
pop
or
pop
xchg
push
xchg
push
pop
or
clc
test
daa
or
ins
mov
adc
or
fisttp
mov
cwde
mov
mov
or
mov
pop
xchg
sbb
pop
mov
mov
adc
add
call
add
mov
add
mov
shl
or
int3
aad
fiadd
adc
mov
xchg
adc
pop
dec
inc
aam
dec
dec
or
pop
adc
and
lods
shl
add
imul
push
imul
lods
dec
and
push
add
inc
adc
xor
inc
mov
cmc
(bad)
inc
pushw
outs
lods
icebp
dec
std
out
xchg
ret
clc
xlat
inc
and
inc
pop
jg
push
cmp
ret
cld
jno
test
out
pop
fsub
and
push
in
mov
sub
mov
pop
pop
fwait
rcl
mov
and
test
fwait
retf
xor
xor
in
xor
pop
mov
clc
add
or
jns
xchg
fldcw
dec
xor
dec
fadd
out
pop
hlt
dec
sub
jecxz
test
pop
sbb
je
ret
and
fisubr
shl
movs
add
or
push
add
aad
mov
and
sbb
add
mov
test
and
add
bound
and
inc
xchg
sub
cmp
add
inc
jns
mov
das
add
or
push
adc
push
add
push
dec
push
movs
xor
sub
xchg
test
fist
dec
push
add
sub
push
aas
ins
add
fld
aas
ins
bound
mov
fiadd
ins
dec
mov
sub
mov
push
movs
xor
or
mov
mov
inc
mov
xchg
pop
shl
push
and
add
movs
xor
test
cmp
pop
ins
mov
or
adc
fisub
pop
mov
es
xchg
(bad)
pusha
pop
adc
add
and
call
inc
jnp
and
(bad)
adc
sbb
add
cwde
or
sbb
aas
cli
in
add
clc
movs
jle
dec
loope
xchg
cld
imul
xchg
and
add
ja
(bad)
cmp
into
ja
in
adc
loope
xchg
inc
mov
dec
shr
xor
sar
sbb
cli
push
into
mov
clc
inc
sub
pop
mov
loopne
pop
out
icebp
pop
pop
in
pop
jns
sub
cmp
inc
or
shl
in
out
sbb
xchg
jl
fsub
out
in
fsubp
fadd
repnz
ret
push
data16
rcr
jno
pop
and
xchg
sub
stc
bound
mov
cmps
push
scas
ret
mov
push
mov
push
add
int3
jne
pusha
sub
xchg
test
aam
add
stos
and
inc
dec
dec
mov
dec
inc
lds
xchg
push
cwde
or
inc
mov
test
stc
adc
cmp
pushf
jbe
dec
add
sub
sub
inc
sub
mov
adc
add
or
add
mov
push
lods
dec
jb
dec
mov
xchg
test
pop
or
xor
and
mov
dec
mov
leave
jno
add
test
dec
mov
fs
inc
dec
mov
leave
jno
push
cld
push
xor
imul
fiadd
fisttp
mov
inc
jbe
mov
jbe
adc
xchg
add
ins
add
lds
fsub
and
stos
and
and
push
or
adc
or
mov
or
or
or
rcl
pand
fwait
imul
lods
xchg
nop
push
and
add
cwde
sbb
dec
inc
xchg
add
sbb
push
mov
out
push
lds
xchg
sub
cmp
repz
test
in
inc
push
lds
xor
and
sub
push
nop
(bad)
ror
pop
inc
enter
mov
int
mov
clc
push
in
sbb
add
dec
(bad)
mov
push
pop
cwde
jg
es
push
jg
jge
sti
add
xor
(bad)
sbb
hlt
mov
add
retf
fidivr
inc
shr
aaa
ja
icebp
cs
and
popa
imul
jns
or
and
int3
stos
div
mov
cmp
mov
int3
dec
cmp
cmp
mov
mov
pusha
jns
int
scas
mov
(bad)
ins
inc
xchg
mov
sbb
and
cdq
mov
pop
popf
gs
mov
xchg
or
lods
shr
lods
xor
and
pusha
adc
data16
jae
inc
jne
sub
sub
push
jae
dec
cdq
stos
xor
int3
fs
es
add
push
(bad)
sar
lds
inc
mov
add
dec
mov
lds
bound
pusha
mov
sub
mov
mov
nop
adc
and
call
push
add
push
pop
or
jl
xchg
dec
add
mov
mov
ins
mov
and
push
dec
mov
xchg
ins
dec
inc
mov
add
sub
adc
jbe
sub
or
inc
pop
mov
sbb
and
adc
lds
sub
cwde
test
bound
not
mov
sub
dec
mov
pextrw
dec
mov
inc
fwait
imul
gs
xchg
and
test
lds
iret
sub
hlt
xor
rcr
push
cmp
cmp
pop
push
sub
add
inc
leave
test
movs
mov
or
es
outs
xor
sub
adc
lea
fprem1
(bad)
cmp
repz
call
xor
jb
push
mov
add
add
ins
add
adc
adc
psubw
fidivr
das
std
cdq
stos
stc
shl
pop
(bad)
and
aad
add
dec
mov
add
sti
push
cmp
ret
cld
jno
stos
lock
movs
fstp
xchg
data16
push
push
dec
cli
imul
cmp
sar
jl
cdq
(bad)
jnp
sub
and
mov
jge
mov
fwait
push
sbb
scas
dec
loop
daa
ja
movs
push
mov
mov
mov
jns
int
pushf
out
lock
out
sub
nop
int
push
mov
cs
inc
push
movs
mov
mov
xor
sub
and
leave
jmp
inc
data16
dec
or
pop
sbb
mov
inc
pop
adc
jbe
cmp
mov
push
adc
in
push
and
adc
dec
mov
fist
dec
mov
mov
nop
mov
push
sub
test
mov
shl
enter
add
and
adc
adc
sbb
add
or
rcr
test
dec
push
mov
xchg
loop
leave
not
sbb
adc
dec
mov
fld
nop
sub
mov
and
dec
pand
dec
mov
std
mov
jle
nop
and
dec
inc
in
mov
cwde
movs
add
jbe
or
ror
not
xchg
or
retf
test
and
push
and
push
pop
mov
and
aad
dec
mov
adc
test
push
pop
pop
int3
push
rcpps
in
in
shl
cvtps2pd
mov
jae
ror
lds
push
sti
out
cld
add
scas
inc
mov
outs
xchg
and
jge
jl
scas
dec
ret
jp
pop
cmp
pushf
jbe
add
mov
in
push
sbb
mov
pop
mov
cld
push
add
push
add
lods
rcr
xchg
adc
push
lds
and
push
mov
adc
outs
cmps
xor
scas
adc
push
cmp
rcr
mov
add
leave
sbb
clc
inc
inc
lahf
cmc
retf
inc
pushw
je
icebp
dec
inc
mov
mov
in
dec
jmp
psllw
jne
push
jg
ins
(bad)
fstp
xor
xchg
jle
lods
inc
dec
loope
push
ds
outs
xor
scas
xchg
inc
mov
sub
mov
call
cwde
repnz
pop
es
sub
mov
mov
mov
pop
xchg
into
jae
or
test
inc
test
in
add
jmp
sbb
gs
sbb
mov
inc
int
and
xchg
mov
call
aam
mov
shr
sbb
inc
or
jmp
jne
and
adc
add
pop
and
mov
and
add
dec
inc
xor
mov
dec
les
test
inc
mov
and
rcr
cmp
mov
ds
add
or
push
mov
pop
fist
pop
push
sub
sub
sbb
pop
xchg
xchg
add
inc
dec
mov
fs
adc
fwait
sub
ss
repnz
bnd
push
retf
fld
jbe
xchg
and
enter
inc
jge
mov
fild
not
and
sub
dec
xchg
or
sar
and
dec
inc
not
xchg
cmp
push
lds
sbb
pusha
popa
iret
jl
pushf
jl
jne
call
faddp
int3
sahf
and
les
and
je
fucomip
xlat
cld
imul
dec
xchg
scas
outs
das
cs
retf
or
jg
inc
push
cmp
mov
mov
sub
sub
or
mov
ins
sti
jae
mov
jnp
loope
mov
inc
imul
mov
inc
icebp
dec
inc
icebp
dec
pop
bound
not
add
or
(bad)
aas
gs
test
dec
inc
lds
adc
loop
pop
pop
cld
or
jo
sbb
inc
and
push
bound
mov
sub
jno
nop
lds
add
das
stc
add
jg
das
std
cdq
stos
stc
fidiv
aas
or
lahf
mov
lahf
or
(bad)
(bad)
add
jmp
fisttp
les
hlt
aam
dec
jg
pop
(bad)
jae
pop
pop
adc
fistp
imul
pop
dec
mov
lds
out
xor
popf
mov
xchg
mov
(bad)
movs
ins
push
xor
sub
cmp
in
sub
inc
and
iret
push
imul
or
and
and
pop
push
dec
neg
mov
sti
push
add
ins
shr
(bad)
retf
add
sub
xchg
or
inc
fs
push
push
imul
jno
xor
inc
push
mov
inc
sbb
bound
fisub
not
xchg
cmp
movs
push
xor
leave
aad
adc
lds
aam
sbb
dec
add
pop
into
pop
adc
mov
dec
retf
add
sub
movs
mov
inc
lods
inc
push
add
adc
retf
mov
mov
or
jo
xchg
movs
mov
sub
pusha
pop
fst
retf
sbb
and
dec
mov
adc
je
dec
and
adc
mov
cmp
nop
adc
mov
test
call
mov
std
mov
adc
data16
ins
add
mov
test
inc
(bad)
or
std
mov
aas
ins
xor
mov
adc
popf
adc
cmp
ins
shl
stc
cli
xlat
xchg
int3
ja
clc
out
icebp
ins
int
arpl
cmps
jmp
arpl
dec
xor
bound
movs
int3
not
mov
or
jno
lods
dec
push
sub
adc
xchg
ss
fisubr
pop
jg
cmc
xor
xor
mov
lds
(bad)
fcomp
dec
xchg
sti
add
and
push
jle
inc
sbb
mov
call
pop
iret
lahf
out
(bad)
jmp
imul
mov
jp
pmulhw
inc
sub
push
(bad)
xor
push
std
aam
call
cld
inc
arpl
int
rcl
repnz
mov
call
mov
add
or
lahf
std
or
sub
mov
rcr
push
mov
inc
or
push
add
mov
dec
scas
std
jb
add
call
cli
pop
mov
loop
cld
mov
xchg
std
jnp
add
jmp
cwde
xlat
clc
and
xor
movntq
and
mov
cmp
into
dec
repz
mov
(bad)
and
inc
pop
xor
push
arpl
dec
cs
pop
mov
es
test
jns
inc
retf
lods
dec
sub
xor
pop
pop
or
jae
push
push
jbe
enter
call
xchg
adc
hlt
lods
int
lahf
mov
or
cmps
mov
push
jb
pop
xchg
pop
xchg
popa
mov
mov
cmp
scas
mov
inc
xchg
push
xor
sub
push
add
dec
mov
sub
nop
dec
add
lea
mov
pop
xor
dec
mov
inc
mov
aad
fdiv
test
push
dec
pusha
or
nop
mov
push
add
or
test
jmp
dec
add
movs
xor
fmulp
xchg
adc
lea
fs
(bad)
jno
or
mov
rcr
xchg
and
test
mov
dec
sbb
or
inc
sub
xchg
inc
je
sub
test
mov
push
and
inc
dec
xchg
ret
add
ss
fild
sub
jb
or
or
lea
ins
push
or
and
and
sub
add
arpl
mov
or
leave
loopne
xor
pop
retf
dec
out
mov
retf
jb
in
jl
scas
clc
sar
mov
imul
ja
add
xlat
sahf
jbe
xor
repnz
xchg
mov
lea
nop
inc
push
dec
or
out
test
xchg
pop
fdivr
es
push
je
push
xchg
repnz
push
cmc
mov
inc
push
add
add
in
in
test
xchg
ins
add
add
mov
(bad)
jnp
cli
es
in
hlt
cld
jmp
out
xor
outs
or
sub
mov
xchg
out
repnz
and
enter
jg
mov
aam
and
leave
xchg
add
cmp
repz
mov
mov
lds
sbb
out
outs
in
ins
adc
(bad)
(bad)
jmp
and
mov
xchg
inc
xchg
xor
inc
ficomp
dec
mov
loopne
mov
mov
jg
(bad)
cmps
sub
into
push
jbe
adc
add
adc
mov
sub
sbb
hlt
dec
xor
ins
pop
and
add
inc
(bad)
pop
ins
movs
and
iret
or
add
sub
(bad)
mov
iret
mov
es
add
inc
sbb
sub
ret
sbb
std
popf
sub
fisttp
aas
sbb
call
and
xor
cmps
mov
push
or
cmp
scas
pop
cdq
adc
and
or
xchg
cmps
inc
push
loope
repnz
aas
in
xchg
outs
mov
int3
arpl
mov
es
adc
or
inc
xor
or
xchg
js
in
and
mov
mov
lods
dec
xor
in
inc
push
and
push
inc
mov
fidiv
cli
push
mov
lods
cs
push
sbb
jnp
push
mov
lods
add
fidiv
jnp
stos
bound
dec
enter
fwait
shl
imul
dec
push
sub
jno
dec
xchg
ror
xchg
ss
test
add
mov
mov
mov
sbb
call
dec
movs
enter
xor
pop
inc
lds
adc
mov
sub
movs
xor
pop
add
or
clc
lods
retf
sub
rcr
dec
dec
mov
inc
aas
and
mov
dec
test
add
mov
inc
inc
sbb
inc
mov
dec
sub
and
repnz
push
gs
sbb
cmps
inc
ds
in
mov
cmp
xchg
or
or
inc
push
and
mov
xchg
push
ins
push
lds
fwait
imul
or
and
fisttp
(bad)
pusha
aas
ins
push
mov
or
cmc
cmp
pop
(bad)
in
ss
pusha
pop
fiadd
out
and
inc
(bad)
mov
fdivr
xchg
jle
sahf
repnz
dec
leave
dec
jae
lods
push
inc
xchg
inc
or
push
mov
and
xchg
adc
add
cmp
mov
inc
fistp
mov
daa
pushf
cld
out
jbe
mov
iret
movs
mov
sbb
lds
sbb
inc
inc
xchg
cmp
cli
mov
inc
jge
cld
test
inc
push
sub
jp
mov
dec
out
idiv
or
into
jmp
cmp
mov
mov
pop
aam
add
neg
mov
test
jne
sbb
fidiv
ins
out
movs
push
arpl
(bad)
push
jmp
cmp
xchg
rol
sbb
bound
dec
out
sbb
inc
mov
movlhps
lods
popa
call
sar
push
add
lds
sbb
call
xchg
xchg
sub
mov
jnp
cmps
xchg
or
jnp
out
cdq
imul
daa
lods
inc
es
lds
ftst
dec
icebp
push
sysexit
test
lds
or
xor
add
loope
stc
add
aas
std
cdq
stos
lock
lock
add
scas
test
sti
cmp
jle
jle
inc
xor
cmps
pop
outs
imul
stos
cmp
pop
fwait
sbb
sub
adc
add
sub
imul
in
mov
scas
xchg
xchg
cmp
mov
push
or
mov
mov
push
jne
sub
or
dec
jle
push
jb
push
cmp
inc
addr16
unpckhps
cdq
sbb
mov
pop
and
ins
sub
arpl
movs
mov
jmp
mov
mov
test
cwde
pop
sbb
scas
dec
out
push
jle
mov
sar
icebp
pop
xchg
jae
or
pop
inc
cmp
lods
xchg
shl
xor
stos
xor
mov
cmp
adc
dec
cdq
xor
mov
shl
rol
inc
xor
arpl
mov
mov
dec
and
cmp
je
pop
and
in
lods
dec
int3
sbb
xchg
mov
retf
mov
cwde
jmp
sub
push
add
push
daa
or
and
add
sbb
lods
sbb
sub
xor
sbb
adc
and
(bad)
bnd
mov
(bad)
dec
cs
inc
loop
inc
pop
or
fisub
xchg
add
cdq
cdq
cmp
daa
or
fs
inc
daa
or
mov
xchg
ss
push
adc
push
push
fimul
sbb
xchg
fisub
fiadd
ins
and
stos
add
enter
add
push
jle
pusha
aas
and
mov
aam
mov
jb
ins
(bad)
xor
jae
fdivr
out
(bad)
aas
loope
cmp
in
pop
stc
add
adc
scas
outs
pop
cli
mov
fcom
outs
out
int3
into
xchg
stos
add
dec
or
xor
push
fs
lods
sub
bound
out
push
js
addr16
mov
les
loope
sbb
in
adc
push
sub
idiv
mov
push
out
push
cmps
cmp
dec
jne
sbb
mov
rcl
jbe
sahf
das
lods
js
ret
outs
ss
int3
(bad)
pop
stos
retf
mov
clc
loop
out
sbb
daa
jmp
fmul
sbb
out
jb
mov
cmp
pop
add
test
dec
sbb
xchg
pop
push
daa
std
mov
jle
fs
jo
mov
das
into
nop
sub
mov
mov
retf
jb
mov
or
(bad)
scas
ins
stos
xor
inc
outs
fcmove
mov
push
pushf
shr
es
icebp
pop
mov
push
mov
scas
pop
in
addr16
cmp
pop
add
pop
leave
jecxz
in
lods
add
fiadd
mov
dec
mov
pop
push
and
scas
or
enter
mov
mov
imul
add
xchg
mov
cmps
std
jnp
in
jmp
cdq
push
clc
pop
clc
jns
xlat
cmc
and
jmp
jns
and
pop
push
lods
dec
das
lods
(bad)
mov
jmp
push
call
jae
mov
pop
xor
mov
call
mov
jp
xchg
sbb
cmps
inc
(bad)
dec
pop
int3
imul
push
jb
lds
jo
push
pop
xchg
jmp
xor
mov
cmp
sub
movs
pop
jae
jge
stos
adc
daa
ss
and
rcl
(bad)
addr16
mov
mov
int3
jecxz
je
xlat
push
cdq
out
push
and
arpl
inc
dec
push
sub
out
enter
cmp
dec
jmp
in
out
gs
mov
push
push
mov
sbb
lods
dec
dec
cs
mov
lods
mov
sbb
dec
or
cmp
xor
in
lods
dec
or
dec
leave
lock
inc
dec
retf
dec
mov
test
es
dec
dec
loop
dec
jecxz
mov
arpl
cwde
xchg
mov
sbb
dec
mov
sub
mov
xor
dec
and
or
adc
inc
xor
in
test
pusha
mov
adc
(bad)
add
push
mov
retf
xchg
mov
ins
add
fiadd
ins
xor
fisttp
rol
imul
fiadd
movs
add
inc
mov
sub
pop
inc
cli
int
addr16
push
aam
xor
cmp
fs
(bad)
add
fldz
pop
or
jb
fwait
mov
sti
aad
test
sub
pop
test
inc
pop
mov
inc
jns
cmp
stc
push
add
fld
jae
jb
imul
push
adc
cdq
xchg
call
rcr
pop
rcr
add
cs
mov
xchg
pop
lea
or
jae
(bad)
mov
jae
pop
and
cmp
inc
(bad)
div
scas
retf
adc
jbe
dec
cld
outs
ja
cli
call
add
jecxz
jp
mov
xor
nop
int3
inc
pop
sbb
mov
rcr
fiadd
inc
cmp
xor
pusha
pop
out
cmp
fsub
sub
push
xor
and
mov
sub
fcom
xor
bound
sub
in
push
sbb
pop
inc
pop
inc
test
dec
std
(bad)
xchg
ret
loop
iret
xchg
inc
dec
inc
sti
cmp
jle
pop
mov
imul
xchg
rcl
aam
fcomp
sub
xor
test
inc
hlt
test
xchg
rcl
adc
dec
ret
cwde
mov
jae
cmp
pop
popa
call
nop
sar
stos
jno
lds
aaa
push
cmp
stos
arpl
push
push
xchg
pop
cmp
out
rol
in
push
cmp
jmp
popa
in
outs
pop
push
(bad)
lods
push
retf
push
add
xor
cdq
xchg
inc
pop
sbb
jae
fcmovnbe
mov
sahf
aad
dec
(bad)
outs
inc
(bad)
lea
jp
gs
retf
retf
push
jno
scas
mov
rcr
mov
pop
pop
ins
arpl
push
mov
lods
in
cmp
repnz
je
loop
mov
out
mov
push
out
xor
xchg
sbb
sub
cmps
xchg
scas
ret
add
cmps
and
xchg
adc
pop
or
int3
inc
aad
movs
xchg
call
adc
inc
sbb
xor
push
or
cdq
xchg
mov
mov
arpl
jne
inc
xor
inc
dec
in
xor
pop
and
repnz
mov
nop
pop
add
daa
or
(bad)
adc
or
lods
inc
add
shl
inc
and
bound
sbb
mov
pop
ins
add
ins
add
mov
or
and
imul
sub
jno
inc
outs
retf
hlt
adc
jns
mov
inc
outs
adc
(bad)
cmc
imul
xchg
jmp
xlat
xlat
sub
sub
adc
push
add
rol
jmp
int3
aam
repz
iret
das
mov
aad
inc
mov
fsubr
sub
push
std
mov
mov
inc
push
jle
aas
mov
jmp
js
test
lods
jno
mov
pop
cmps
xchg
pop
inc
mov
or
xchg
scas
push
pop
fdiv
inc
fistp
mov
mov
pop
add
(bad)
in
xchg
lds
and
imul
and
mov
stos
rep
cmc
sub
xor
adc
adc
sbb
out
in
(bad)
mov
jbe
push
(bad)
fiadd
ins
and
mov
sbb
sub
sub
push
add
lds
adc
sub
mul
inc
in
ins
inc
pop
inc
test
dec
std
into
xchg
ret
loop
cld
mov
add
sar
lods
lock
pop
and
rcr
pop
adc
push
cmp
imul
xchg
sbb
aas
idiv
push
aad
rcr
mov
mov
add
dec
imul
ret
outs
pop
cmps
inc
shl
push
lods
or
lea
int3
ds
int3
int3
imul
out
sbb
mov
mov
pop
cmps
mov
movs
lea
jae
(bad)
jmp
xor
xchg
dec
add
mov
out
and
mov
in
jl
scas
retf
cdq
sbb
mov
pop
dec
sbb
adc
call
push
mov
ret
rcl
cmp
test
addr16
rcl
ins
inc
lock
aaa
xor
mov
bound
popa
outs
arpl
imul
test
mov
fcomp
scas
aam
cmp
jmp
cdq
imul
int3
into
mov
data16
or
sbb
movs
je
adc
ins
pop
inc
test
push
push
push
mov
out
xchg
or
int3
mov
in
hlt
mov
push
or
fmul
lods
jae
push
sub
jg
dec
mov
inc
push
and
mov
jmp
pop
mov
fs
sub
cwde
mov
loop
mov
sub
daa
lds
ret
dec
and
adc
les
push
and
inc
inc
in
cmps
xor
and
push
fsub
sub
push
aas
xor
mov
js
data16
test
icebp
neg
rcl
sub
xchg
push
stc
out
popf
jp
sti
xchg
leave
repnz
loope
scas
mov
jecxz
mov
fmul
pop
sub
push
mov
sub
xor
sub
and
push
sar
jae
(bad)
bound
std
jp
in
leave
push
lea
lods
mov
cmp
scas
pop
mov
jne
mov
ins
push
hlt
adc
sti
(bad)
xlat
mov
arpl
mov
std
xor
xor
jo
fdiv
mov
dec
imul
out
fldl2e
or
mov
inc
adc
mov
inc
xchg
or
mov
retf
out
pop
popa
jp
(bad)
xchg
pop
test
xchg
xor
cmp
xchg
sbb
jmp
xchg
jp
push
add
mov
and
movs
add
adc
adc
mov
sbb
jo
xchg
(bad)
mov
cmp
add
jmp
cli
out
dec
jle
push
loop
in
hlt
mov
jg
pop
aam
jmp
dec
mov
inc
jecxz
test
lahf
xchg
jno
jg
(bad)
xchg
aas
sahf
mov
(bad)
(bad)
popf
movs
js
fwait
sbb
rcr
(bad)
gs
in
test
scas
in
ror
imul
add
pusha
int
jg
dec
scas
and
mov
adc
push
in
add
mov
push
dec
loope
add
xor
mov
inc
push
enter
cs
sub
add
cmp
cmp
int
mov
cwde
jmp
fsubp
push
sub
push
mov
sub
mov
les
aam
lods
ja
pushf
ja
or
push
dec
jnp
xor
and
mov
cmp
jp
mov
daa
mov
cmp
dec
dec
sub
push
call
arpl
push
pop
loop
mov
sbb
out
dec
cmp
imul
lods
test
mov
sbb
movs
dec
ins
and
int3
outs
lds
push
xor
lods
push
and
cmp
add
push
es
adc
pop
or
inc
test
enter
add
push
(bad)
fcmove
aam
ins
dec
mov
ins
movs
xor
push
cmp
mov
inc
(bad)
adc
fs
sub
popa
push
or
dec
or
lods
sub
outs
sub
adc
and
add
nop
adc
mov
cmp
cs
xchg
test
and
dec
push
push
inc
(bad)
lods
dec
or
out
stos
pop
jl
jne
jl
jecxz
adc
xchg
js
aas
xchg
js
test
and
sbb
mov
jl
call
lods
xor
stos
mov
mov
(bad)
sti
aas
pop
aad
xor
stos
mov
hlt
fnsave
sbb
(bad)
inc
clc
call
and
stc
mov
jle
pop
xor
mov
mov
dec
into
jg
retf
dec
jmp
fcmovnbe
test
test
lds
xchg
and
pop
sahf
add
adc
movs
lea
loopne
in
sbb
bound
mov
sbb
into
in
jnp
aas
xor
xor
jae
mov
fist
inc
pop
xor
sbb
xchg
cli
adc
and
xchg
test
out
test
xchg
cld
ss
jle
mov
mov
lods
cmps
push
xchg
jg
cmc
push
mov
cld
(bad)
cmp
jae
mov
or
call
sub
cmp
inc
cwde
jp
sub
push
add
test
test
add
cmps
mov
out
fs
adc
sub
xor
loop
adc
xor
je
inc
sub
pop
sub
pop
push
add
div
pop
repz
pushf
pop
out
pusha
bound
lock
sub
xor
lahf
mov
clc
push
enter
add
mov
hlt
cmp
pop
(bad)
int
dec
lahf
iret
xchg
shl
cmp
js
call
out
xor
mov
cmp
sub
leave
sbb
pusha
inc
mov
sub
pushf
int
push
inc
adc
mov
scas
and
or
jmp
xchg
mov
and
in
or
stos
scas
(bad)
popf
jo
aas
jno
in
es
cmps
stc
pushf
sahf
xchg
in
inc
mov
sbb
movs
js
out
jb
push
aad
mov
inc
jl
jp
dec
into
and
test
inc
jle
stos
mov
mov
push
sbb
xor
xlat
dec
pop
test
cmp
jmp
in
iret
(bad)
mov
ds
pop
or
hlt
or
loope
mov
mov
inc
test
jmp
mov
push
sbb
adc
daa
cmp
(bad)
loop
leave
and
fmul
mov
cdq
xchg
test
push
data16
data16
add
mov
rcr
inc
mov
and
cs
push
gs
adc
mov
jo
push
in
push
fwait
adc
inc
inc
sub
mov
leave
ss
jle
sub
inc
pop
ins
xor
xor
aam
fisub
add
cmps
and
inc
xchg
stos
sbb
cwde
(bad)
in
mov
ins
xchg
add
mov
adc
and
dec
xchg
mov
dec
or
xor
shl
cmp
mov
scas
sbb
in
jo
sub
mov
add
ds
dec
sub
pop
mov
inc
push
mov
icebp
pop
sbb
sub
add
push
mov
cmp
not
jl
lock
mov
int3
pcmpgtb
xor
retf
cmp
dec
icebp
xor
cmp
out
outs
and
in
sub
xor
rcr
mov
ss
test
dec
inc
xchg
mov
repz
psubq
cli
rcl
jmp
or
mov
dec
out
jp
mov
shr
mov
fidiv
out
loop
xor
push
imul
scas
cmc
xor
push
icebp
xor
cmp
retf
push
stc
jp
or
in
jp
xor
clc
jl
test
pop
sahf
xchg
repnz
fiadd
mov
sbb
call
out
lock
mov
das
pop
xchg
out
fimul
mov
fwait
mov
loop
arpl
(bad)
repz
cwde
ficomp
rcr
xchg
add
cmp
cmps
mov
loop
mov
inc
scas
dec
pushf
cmp
jb
mov
(bad)
jg
jl
in
je
sbb
mov
(bad)
pushf
iret
push
cmp
mov
sti
arpl
add
lds
mov
sbb
inc
mov
bnd
int
(bad)
je
jns
cld
sbb
lahf
in
popa
icebp
xchg
add
xlat
cwde
(bad)
xchg
jmp
jmp
xlat
cmp
je
pop
inc
inc
jne
mov
mov
inc
enter
(bad)
jmp
mov
mov
jb
dec
int3
jb
(bad)
cmp
xchg
or
inc
and
jg
out
dec
jle
push
loop
in
xor
adc
ds
xchg
jle
add
mov
hlt
cmp
fiadd
shl
loope
xchg
icebp
hlt
scas
and
mov
dec
push
mov
inc
jns
jno
addr16
int3
imul
jnp
pusha
outs
shr
push
pushf
fldl2e
sub
mov
leave
ins
(bad)
fimul
push
in
jge
pop
repnz
xor
adc
sub
lods
mov
mov
mov
jb
pop
push
out
arpl
mov
mov
jge
shl
clc
fxch
sti
cmp
and
adc
jg
mov
xor
add
int3
jbe
mov
and
mov
imul
ins
movs
pusha
loop
fwait
push
scas
mov
(bad)
fsubr
pop
jmp
pop
out
adc
push
ja
mov
cdq
scas
mov
cmps
scas
jecxz
jecxz
outs
imul
out
(bad)
out
jp
int3
(bad)
das
mov
cmp
mov
xchg
pop
cdq
xchg
loop
sbb
cmp
data16
sbb
cmp
push
mov
sub
ficom
inc
jae
sub
mov
push
xor
inc
push
dec
cmps
xchg
aam
imul
inc
push
dec
jge
mov
jno
mov
sub
or
pop
add
dec
mov
push
sub
dec
mov
mov
xchg
xchg
push
mov
adc
sbb
dec
add
rcr
fwait
push
ins
add
imul
add
add
mov
or
xchg
inc
pop
adc
pop
movs
and
pop
(bad)
jecxz
xchg
aas
and
and
cmps
sti
(bad)
pop
cmp
jp
inc
in
in
hlt
mov
xor
leave
jbe
xchg
fdivr
push
retw
dec
cmps
jmp
xlat
in
jns
fstp
mov
hlt
es
loope
mov
mov
in
in
xchg
lds
mov
retf
gs
cmc
arpl
sub
dec
repnz
mov
imul
xor
sbb
aam
sub
dec
jmp
cmc
push
cmp
out
adc
jbe
loope
pop
jno
(bad)
cli
sub
into
in
in
and
lods
mov
(bad)
cld
(bad)
(bad)
sti
out
xor
imul
sub
or
xchg
test
xor
inc
add
fstp
xor
(bad)
gs
ja
sbb
sub
ds
test
sti
mov
sub
cdq
inc
push
aad
fdiv
packsswb
mov
push
daa
jge
test
(bad)
jbe
ins
mov
mov
xlat
cmp
jp
push
sbb
and
mov
loopne
cmc
pop
dec
enter
pop
mov
nop
mov
mov
les
cmp
mov
imul
and
jg
inc
mov
mov
mov
sub
xchg
(bad)
(bad)
jns
cld
or
test
inc
sbb
fcomp
pop
into
mov
into
and
and
jb
stos
cs
repz
outs
jp
js
dec
call
retf
and
sbb
(bad)
xor
push
(bad)
int
or
test
and
lds
data16
and
call
xchg
lea
ret
mov
cmp
sbb
je
fdivr
pop
pop
js
xchg
sub
(bad)
(bad)
shl
cmp
out
inc
retf
mov
rol
cmp
lods
je
push
mov
mov
cli
rol
inc
repnz
add
push
ds
dec
loope
cmp
jno
push
idiv
mov
pop
xchg
jle
popa
pop
loope
out
mov
repz
aam
aad
call
xchg
shr
rcr
mov
mov
mov
cmp
xor
push
lahf
and
mov
sahf
jmp
enter
pusha
faddp
pop
cmp
pop
test
and
lods
(bad)
lahf
sub
jno
dec
movs
jl
mov
mov
test
hlt
fwait
pop
xor
data16
enter
sar
inc
xchg
sahf
pop
xchg
lds
push
jg
outs
stc
inc
adc
scas
cmp
stos
popa
dec
cmc
call
ds
in
push
push
jnp
iret
enter
and
pop
pop
sbb
push
cmps
sbb
fldenv
out
push
int3
pop
sub
les
loope
jmp
inc
jl
lea
pop
leave
pop
retf
aas
sahf
arpl
xchg
leave
iret
sub
mov
inc
in
jmp
rcr
arpl
pop
xchg
je
xor
dec
aad
shr
push
lds
lds
sbb
dec
pop
or
sahf
mov
cmps
mov
adc
xchg
ret
xor
mov
xor
pop
data16
nop
leave
icebp
push
xor
dec
mov
xchg
or
loop
mov
sub
lds
fsubr
adc
mov
push
add
test
cld
push
xor
lea
cdq
mov
mov
inc
or
xor
mov
add
fiadd
jbe
inc
sbb
xchg
and
add
sub
nop
aad
xor
inc
jmp
lahf
es
jle
cld
inc
icebp
add
and
(bad)
rcl
adc
cmp
fidivr
jmp
call
test
ja
mov
mov
adc
ins
mov
mov
stc
inc
out
mov
ficom
ins
ins
les
jge
(bad)
out
popa
jmp
scas
inc
cmp
(bad)
push
xor
shl
in
(bad)
es
xchg
outs
cdq
mov
cmove
hlt
imul
icebp
(bad)
out
out
test
ja
aaa
push
pop
das
not
jp
mov
mov
outs
pop
jg
dec
jp
cdq
sahf
imul
jg
(bad)
in
in
inc
in
out
mov
dec
imul
and
aam
inc
aam
fstp
fild
(bad)
data16
inc
scas
(bad)
cmp
mov
clc
xchg
pop
repnz
cld
dec
jb
mov
pop
sahf
sbb
sbb
sbb
cdq
lods
mov
cmp
mov
(bad)
mov
out
adc
dec
push
js
fcmovnb
jne
int3
jecxz
fsub
aas
mov
push
xchg
mov
mov
mov
out
sub
or
data16
or
mov
and
mov
or
out
adc
jge
outs
lock
fs
cmp
jecxz
call
add
jbe
je
push
xor
arpl
imul
rcl
cmps
and
bound
push
inc
push
dec
inc
mov
adc
adc
and
mov
aas
in
outs
(bad)
out
xor
lahf
mov
clc
push
int
loopne
inc
mov
add
jmp
icebp
and
test
scas
call
pop
call
mov
test
dec
stos
add
mov
mov
push
mov
jl
ds
sbb
mov
and
add
push
jecxz
cmc
shr
sahf
jno
jle
in
addr16
cmps
lods
sbb
ficom
jp
pop
jp
(bad)
sar
cdq
into
into
mov
mov
cmp
ins
test
mov
cld
out
repnz
mov
call
mov
jbe
mov
sub
sub
mov
loop
out
sahf
mov
push
dec
xor
cmp
xor
scas
sbb
repz
ss
cmp
scas
ret
add
xchg
mov
xchg
add
call
mov
push
lods
call
adc
mov
lds
push
cmp
xchg
pop
push
mov
test
test
cli
mov
(bad)
pop
add
dec
add
sub
sub
or
leave
jno
int3
jle
or
xchg
fs
movs
and
aas
adc
sub
sub
in
push
mov
in
push
add
or
cmp
bound
test
adc
cmp
sbb
sbb
jno
gs
loopne
dec
popa
push
push
repz
mov
and
or
adc
adc
popa
pop
imul
xor
das
adc
movs
js
repnz
popa
in
std
mul
(bad)
stc
pop
cmc
iret
jno
std
ins
push
lahf
cmps
cmps
out
push
je
(bad)
pop
xor
and
mov
stos
retf
jecxz
fucom
or
pop
std
arpl
add
cmc
out
scas
and
je
jge
jecxz
fsubr
pop
jg
jmp
adc
cdq
lock
cmc
lahf
int3
mov
cld
dec
imul
lock
xchg
cdq
pusha
daa
xchg
jg
ja
jg
scas
cmp
dec
mov
fild
push
mov
aam
xor
(bad)
cmp
out
dec
gs
mov
xchg
popf
xor
(bad)
in
in
mov
cmp
push
jmp
push
mov
sbb
out
pop
xchg
cli
out
imul
out
rcr
out
jge
push
and
scas
cld
arpl
and
aas
xchg
jg
mov
mov
jge
jno
xchg
aam
pop
adc
fs
sub
adc
xor
int
and
cwde
sbb
and
push
pop
sar
or
sbb
fdiv
ds
hlt
out
inc
lock
arpl
out
xchg
xchg
cli
repz
(bad)
call
sbb
mov
sub
ja
adc
pop
ss
icebp
mov
lds
jae
sub
cmps
jle
mov
and
xor
pop
adc
mov
sub
cmc
pop
cmp
push
adc
std
dec
jle
push
loop
in
xchg
(bad)
adc
mov
(bad)
add
paddw
(bad)
in
lock
sar
imul
(bad)
js
xchg
jmp
inc
push
cmp
stos
or
call
mov
lock
loopne
mov
mov
jno
jmp
jge
xchg
mov
dec
fist
mov
xlat
inc
in
xlat
sahf
iret
dec
fxch
scas
and
fsubr
int3
int3
dec
pop
call
call
jae
xchg
mov
push
sub
xor
xchg
iret
mov
sub
mov
fsub
stos
mov
mov
mov
mov
inc
movs
lods
int3
or
and
mov
imul
into
jno
iret
pop
test
xlat
mov
inc
and
and
push
inc
mov
jne
jne
or
xor
push
sbb
add
retf
inc
int3
push
lods
dec
retf
xor
ret
pop
xchg
push
and
adc
inc
xor
jmp
(bad)
in
pop
adc
add
pop
xor
leave
icebp
push
xor
dec
add
adc
or
push
and
sub
aas
adc
jle
adc
adc
or
and
mov
lds
sub
add
pop
bound
inc
lds
mov
pop
push
add
add
dec
call
out
pop
(bad)
pop
es
add
xchg
xchg
in
inc
pop
and
dec
mov
outs
pop
leave
xchg
call
es
aaa
arpl
xchg
loope
call
xor
xchg
bound
mov
retf
ror
call
shr
and
xchg
dec
jno
dec
retf
std
sub
je
sbb
sbb
into
jo
mov
dec
xchg
ins
jmp
sub
push
mov
jp
ss
inc
pop
retf
push
jnp
sbb
sub
jg
lahf
adc
addr16
mov
jle
xchg
jmp
out
fistp
es
scas
lods
and
sbb
aaa
mov
mul
pop
repz
push
jno
scas
pop
(bad)
iret
dec
cmp
xchg
enter
pop
dec
mov
scas
pop
xchg
js
scas
icebp
push
in
rol
adc
cmc
aad
setle
call
mov
adc
test
mov
mov
aas
and
fidivr
in
gs
outs
sub
repnz
out
call
jmp
adc
lds
cmps
dec
push
add
cmc
pop
ret
(bad)
ja
lods
shl
lds
mov
xchg
int3
iret
(bad)
sbb
sub
pop
jecxz
mov
mov
or
dec
icebp
pop
xchg
push
pop
std
in
mov
(bad)
out
mov
cmc
xchg
cmp
jp
retf
das
fistp
in
add
mov
mov
(bad)
and
mov
sbb
cld
js
(bad)
out
xor
lahf
mov
clc
push
les
add
scas
pop
sti
cmp
movs
inc
jecxz
(bad)
pop
loope
in
mov
into
(bad)
in
push
xor
cmp
lods
dec
(bad)
call
mov
les
arpl
xor
xchg
imul
test
mov
jno
mov
les
lods
js
imul
adc
sub
mov
jp
cmp
push
call
aam
and
fst
aas
cwde
in
scas
imul
cmp
and
in
jb
rdtsc
dec
scas
xor
ret
jecxz
lods
inc
ds
enter
lods
gs
jmp
sbb
sbb
mov
cmp
sbb
adc
dec
test
pop
mov
jb
push
inc
les
aam
mov
mov
sub
cdq
mov
jno
push
sub
push
lods
enter
xchg
pop
adc
cwde
leave
mov
push
cmp
xchg
dec
mov
loop
mov
adc
daa
add
movs
push
cld
push
adc
mov
dec
shr
sub
sub
in
push
add
bound
inc
pop
ins
xor
sub
and
mov
sub
fsub
sub
popf
int
aad
(bad)
pop
xor
cmps
pop
aad
in
bnd
inc
push
dec
sbb
lahf
arpl
scas
adc
hlt
stc
dec
cmp
cwde
xchg
or
xor
js
test
jle
mov
call
push
push
mov
(bad)
repz
and
out
mov
aam
sahf
repnz
mov
sbb
mov
cmp
mov
pop
mov
mov
or
adc
pop
or
pusha
(bad)
arpl
aas
fucomp
mov
bound
ins
test
int3
xchg
add
jo
cwde
shl
or
mov
test
inc
cmp
hlt
stos
adc
mov
ds
int3
mov
iret
add
cld
lea
addr16
xor
dec
lds
jp
sbb
and
lock
out
ror
mov
xor
mov
mov
aaa
xor
scas
call
pop
ins
xchg
pop
mov
test
scas
hlt
jg
jmp
cmp
das
push
icebp
jne
test
sti
mov
js
test
das
repnz
inc
mov
add
push
xchg
inc
inc
aad
add
pop
pop
sar
xchg
(bad)
sub
lahf
outs
clc
in
pusha
sub
lea
gs
clc
dec
jg
into
sar
clc
movs
popa
adc
xchg
mov
pop
sti
addr16
popa
sbb
js
jmp
cld
add
iret
xchg
cmps
pop
js
(bad)
jno
in
mov
jle
(bad)
retf
aad
std
daa
push
ds
mov
cmps
out
test
jecxz
push
test
jle
inc
jp
call
in
call
(bad)
sub
mov
push
mov
jp
adc
pop
out
fs
pop
mov
ret
mov
les
inc
fiadd
xor
not
std
mov
arpl
inc
add
mov
mov
dec
jp
(bad)
and
pop
mov
or
jb
mov
xchg
push
shl
sahf
jge
jge
scas
pop
xor
outs
adc
lea
scas
cmp
outs
push
arpl
adc
jg
repnz
pop
pop
clc
xor
adc
out
call
mov
pop
(bad)
mov
ret
sbb
xor
aad
cli
add
(bad)
(bad)
cmps
mov
cmc
cli
jg
cmp
push
inc
iret
mov
jg
retf
pop
lea
mov
adc
jae
sub
jp
hlt
jmp
inc
and
xchg
ins
xlat
sub
jb
es
adc
mov
jbe
bound
xor
sub
addr16
(bad)
jno
pop
stc
jns
dec
lea
xchg
mov
mov
mov
fstp
mov
test
fisttp
xchg
ins
scas
add
sbb
es
mov
xlat
ins
mov
into
push
jns
fmul
fwait
cmp
or
mov
call
addr16
(bad)
fisttp
pop
ret
(bad)
fcomp
fsub
adc
push
push
jo
pop
sbb
cmps
and
push
xchg
xor
mov
xchg
(bad)
movs
cwde
adc
sub
scas
mov
movs
pusha
sbb
aam
dec
xchg
mov
add
(bad)
pop
or
mov
and
inc
cmp
sahf
pop
and
ins
lods
int
xchg
push
xor
xchg
mov
push
lods
int
add
dec
push
push
sub
daa
add
movs
fsub
dec
leave
jno
mov
dec
mov
sub
adc
jbe
add
sub
and
push
adc
dec
in
push
sbb
or
add
ins
push
outs
xor
sbb
ret
scas
cmp
add
scas
daa
and
scas
pop
mov
int3
inc
repz
(bad)
sti
xlat
mov
jp
cmps
cmp
std
dec
inc
and
jg
dec
clc
xlat
nop
jp
ds
das
xchg
or
inc
mov
(bad)
mov
aas
pop
mov
dec
fdiv
xor
mul
mov
xchg
ja
mov
outs
sub
sub
mov
mov
jae
lock
sub
add
retf
fcmovnu
movs
mov
jmp
xor
(bad)
dec
push
dec
jnp
inc
bound
in
mov
retf
std
dec
inc
popf
fucomi
shr
add
mov
pop
pop
jmp
mov
push
outs
xchg
fisubr
pop
jnp
out
call
jno
stos
xchg
shr
(bad)
jge
stos
xchg
into
out
js
inc
mov
adc
imul
mov
in
xor
hlt
jmp
xchg
int3
xchg
pop
cmp
lahf
mov
xchg
into
nop
(bad)
in
rcr
xchg
pop
loop
mov
mov
sbb
ds
fisttp
cwde
out
sub
push
inc
jp
cmps
cmp
adc
xchg
(bad)
sahf
fdivr
aaa
or
aam
(bad)
ds
cmc
or
fsin
inc
push
jo
outs
pop
push
shl
std
leave
adc
out
and
push
(bad)
fimul
data16
adc
stc
neg
adc
mov
and
call
xchg
aam
lds
adc
and
sbb
adc
aam
cmp
in
xchg
mov
cmp
leave
and
cmps
(bad)
int3
push
ror
popf
push
into
ds
cld
push
dec
sbb
sar
outs
retf
jp
xchg
imul
pop
in
out
movs
xchg
arpl
mov
jp
mov
sbb
mov
ja
jb
pop
loope
not
rcr
or
test
add
xor
pop
data16
xchg
(bad)
bnd
inc
hlt
(bad)
es
sahf
xchg
out
adc
pop
adc
sahf
jecxz
mov
int
or
xchg
out
cmps
mov
sbb
popa
inc
xor
mov
mov
and
cmp
inc
xlat
in
fstp
(bad)
jecxz
arpl
sahf
jmp
mov
minps
mov
das
pop
or
clc
inc
mov
xchg
aad
mov
sbb
fldenv
js
push
pop
call
call
push
test
lds
cmp
out
call
(bad)
into
movs
jp
jb
sub
(bad)
movs
sub
sub
out
mov
mov
adc
in
pop
(bad)
out
jmp
cmp
in
mov
(bad)
mov
into
jb
call
sub
xlat
pop
(bad)
arpl
hlt
fisttp
push
icebp
adc
jne
test
jno
push
test
jnp
daa
adc
(bad)
pop
cli
cdq
repz
pop
mov
inc
pop
or
retf
imul
xor
mov
fwait
jp
adc
repnz
jno
arpl
xlat
push
mov
aam
and
or
arpl
ins
fs
push
mov
mov
cmps
mov
inc
inc
cdq
stos
inc
xor
fadd
add
cs
xor
das
stos
push
sbb
not
dec
sub
add
push
dec
push
adc
push
mov
sub
inc
test
push
sub
pop
add
dec
mov
cld
push
and
inc
jmp
test
add
add
add
and
nop
xchg
pop
loop
mov
add
inc
push
lds
or
add
adc
add
push
cmp
(bad)
sahf
ret
jmp
cmp
clc
data16
cmp
or
jb
jns
cmp
imul
lods
retf
jnp
inc
dec
mov
sbb
add
inc
jl
lods
cld
cmp
out
push
jb
into
ds
cmp
data16
aaa
xchg
xchg
scas
jb
sub
add
push
mov
rcl
sti
mov
arpl
iret
sbb
arpl
sub
add
pop
inc
dec
lahf
lods
xor
leave
ja
lods
in
retf
(bad)
mul
(bad)
(bad)
cwde
mov
stc
call
jbe
jbe
gs
jmp
ret
cmc
lods
sub
sar
pop
clc
mov
pushf
mov
and
(bad)
enter
pop
jp
jno
cmp
loop
xchg
std
int3
in
jp
aam
inc
pop
(bad)
and
dec
or
ror
dec
mov
inc
outs
ins
xchg
adc
cmp
pushf
jne
mov
xchg
aaa
lock
cdq
sbb
add
cmc
mov
adc
mov
mov
jnp
(bad)
cwde
cmc
stos
mov
iret
ds
push
jg
es
lea
addr16
cmp
mov
movs
xchg
cmps
mov
pop
pop
lea
fcmovnu
mov
out
push
sub
cmp
mov
push
xchg
jns
out
mov
sbb
pop
clc
mov
out
pop
retf
inc
jge
stc
(bad)
ss
popf
add
mov
jo
leave
push
inc
inc
(bad)
enter
loop
jae
lds
push
lods
in
and
and
sti
into
aas
cli
aad
arpl
push
enter
mov
outs
mov
and
add
enter
data16
imul
mov
cmp
sub
and
dec
lods
xor
cmp
mov
xor
mov
mov
mov
in
xor
fndisi(8087
mov
out
lods
arpl
lea
out
mov
or
(bad)
mov
movsx
cmp
aam
add
in
fidiv
push
mov
ja
lods
and
iret
aas
ja
mov
add
jle
imul
ins
pop
cmp
movs
shl
test
cmp
aam
cli
sub
mov
mov
xor
mov
push
inc
arpl
inc
mov
aad
int3
fbld
sbb
cmp
sbb
movs
xchg
push
adc
leave
(bad)
jae
sti
scas
mov
psrlq
mov
push
fidivr
gs
pop
popf
jne
push
imul
scas
rcl
test
pusha
outs
jnp
xchg
inc
push
xchg
jg
std
dec
jle
cmp
inc
push
add
out
sti
lahf
aam
xchg
push
ss
or
inc
jns
mov
movs
mov
sbb
rol
mov
bnd
ins
adc
jge
out
outs
js
push
adc
push
pop
jne
out
mov
xor
repz
fwait
imul
cmc
or
jp
(bad)
(bad)
jns
data16
call
mov
(bad)
jno
dec
shr
inc
mov
mov
xchg
inc
lods
sub
fdivr
cmp
mov
push
call
repz
cmc
push
sbb
lds
imul
stos
inc
mov
and
mov
sbb
ins
js
mov
ror
lock
jl
jmp
jle
and
ins
dec
pop
xchg
dec
gs
inc
sbb
inc
push
push
sub
mov
pop
push
add
mov
sub
cwde
mov
xor
jns
mov
mov
pop
jmp
bound
add
jo
cdq
fs
push
xor
ins
cmp
dec
retf
add
or
xor
cmp
icebp
push
push
sub
lds
cmc
add
clc
mov
dec
mov
lds
(bad)
loop
fs
imul
xchg
inc
icebp
dec
pop
bound
mov
sbb
push
sbb
inc
push
or
cmp
sub
std
mov
sbb
adc
push
in
and
push
lds
add
xchg
mov
sbb
mov
scas
test
mov
rcr
scas
loopne
fimul
pop
out
movs
dec
push
mov
imul
ss
cmp
icebp
pop
ret
pop
popf
fimul
cdq
mov
pop
ins
mov
push
xor
mov
pop
(bad)
sub
(bad)
jmp
mov
ins
xchg
sub
shl
out
jns
mov
cli
fs
dec
rcr
mov
push
not
cmp
stos
mov
mov
push
aas
jns
leave
push
sar
ror
xchg
cmp
pop
retf
int3
stc
fcmovu
pop
mov
jae
and
pusha
jecxz
sti
push
push
icebp
and
dec
cli
add
iret
pusha
test
test
and
inc
movs
push
gs
leave
aam
in
cmp
pop
les
xor
aaa
xchg
add
cmc
cmp
les
ins
jl
imul
imul
jp
out
sub
adc
dec
cld
mov
xor
sbb
out
pop
mov
inc
jecxz
mov
pop
mov
add
xchg
sahf
dec
mov
scas
js
sbb
cmps
xor
mov
mov
jp
int3
push
out
je
and
dec
lahf
cmc
ja
pushf
mov
add
popf
daa
leave
xchg
pop
sbb
js
xchg
test
stc
add
outs
imul
call
fsubr
add
jmp
inc
je
inc
inc
jns
fnstsw
fldcw
addr16
mov
jge
call
imul
fst
shl
pop
inc
pop
xchg
fistp
retf
fsubr
in
mov
dec
jns
dec
shl
add
sub
shl
icebp
fdiv
aad
mov
movs
clc
scas
stos
ret
pop
cmp
out
retf
jns
and
aad
jge
inc
jge
jnp
jns
aad
(bad)
mov
fiadd
pop
(bad)
es
in
iret
cli
cwde
in
lods
repz
out
jns
cld
fcompp
jmp
mov
fld
out
cld
adc
or
mov
sub
or
push
clc
jns
lahf
cdq
idiv
retf
adc
(bad)
push
imul
xchg
cmp
test
xchg
inc
test
jmp
das
sub
push
mov
cmp
add
pop
and
cdq
mov
sub
stc
jecxz
cmps
in
scas
rcl
add
push
xchg
add
(bad)
int
js
lea
mov
pop
and
jae
stc
pop
and
(bad)
cld
jo
rcr
jecxz
jae
pop
inc
outs
lds
std
jp
mov
bound
mov
(bad)
gs
and
jmp
test
pop
jl
test
repnz
shr
dec
iret
add
jg
(bad)
xchg
mov
inc
mov
sbb
repz
xchg
(bad)
stc
xor
shl
sub
jb
xor
jae
lods
mov
xor
(bad)
(bad)
cmps
mov
ret
fs
lods
jg
pushf
fucomip
jg
push
or
into
mov
cli
jno
icebp
into
int
jp
repz
call
mov
int3
out
sub
jae
push
inc
cdq
and
out
fisttp
xor
das
or
outs
push
movs
(bad)
xor
xor
lods
lea
push
mov
jb
cmp
and
ins
sar
or
add
je
rol
xchg
cli
ins
pusha
pop
sub
jb
nop
sub
neg
mov
jmp
xor
int
pop
sub
push
(bad)
into
push
mov
int
jno
test
push
repz
movs
and
ss
mov
xor
outs
dec
push
inc
push
xor
mov
adc
mov
pop
bound
xchg
xchg
push
jb
adc
shl
jb
pop
test
cmp
data16
jbe
dec
or
cmp
or
sub
pop
mov
and
push
pusha
pop
add
daa
add
fsubr
xchg
loop
fs
mov
fiadd
xchg
ins
dec
mov
in
movs
xor
add
push
pop
mov
pop
adc
pop
arpl
dec
xchg
test
jle
inc
aas
adc
pop
push
push
mov
mov
add
les
pop
adc
and
icebp
mov
in
popf
icebp
addr16
out
sub
push
cmps
jmp
stc
out
push
jp
(bad)
adc
fwait
pop
stc
jl
jmp
call
jl
stos
jmp
dec
mov
imul
out
fdivr
arpl
cli
repz
retf
and
cmps
mov
sti
dec
pop
jb
jns
mov
ins
mov
repz
mov
das
cli
mov
mov
stc
addr16
push
sti
lods
xchg
aas
das
xchg
sub
in
arpl
hlt
or
nop
or
movs
dec
dec
push
lds
movs
sbb
cli
test
mov
das
sbb
add
dec
pushf
jle
ds
fisub
lahf
loop
xchg
aas
jl
inc
cmps
xchg
in
cli
mov
jecxz
(bad)
shr
shr
fimul
add
cmp
call
leave
mov
outs
test
sub
loop
ins
cmp
adc
sub
sahf
cmp
ss
cdq
cmp
gs
sbb
inc
add
dec
jmp
lea
jnp
mov
call
add
sub
or
stos
arpl
dec
dec
aad
mov
(bad)
daa
aas
xor
mov
fdiv
fwait
call
or
mov
cwde
mov
stos
es
test
jecxz
mov
shl
lods
arpl
popw
es
dec
into
out
push
or
or
jo
retf
(bad)
inc
sti
into
fucomip
mov
inc
inc
xchg
repnz
in
hlt
sti
imul
cdq
inc
mov
mov
inc
or
jl
push
mov
sub
push
out
jmp
dec
sbb
sbb
jmp
mov
mov
rol
repnz
enter
mov
push
out
cdq
retf
ja
movs
outs
cld
ja
es
xor
ds
clc
arpl
(bad)
push
icebp
mov
sbb
jle
ja
and
jns
inc
sahf
push
ja
jne
sub
in
add
(bad)
iret
sbb
std
and
ret
jp
xchg
popa
or
mov
test
and
jmp
out
jae
pop
ins
add
sub
daa
ins
out
ss
out
cmp
mov
fisub
push
xor
add
jnp
sub
jae
sub
popf
pop
lds
and
aam
enter
and
pop
fnstenv
dec
clc
xchg
jge
out
xor
ins
out
sbb
aad
stc
inc
adc
enter
mov
clc
pop
pop
mov
mov
loop
inc
cli
push
scas
int3
jae
rol
cld
dec
enter
jg
out
hlt
adc
imul
push
push
fsub
push
mov
fild
push
imul
popa
call
cmp
stos
adc
sbb
add
std
fucomip
pop
adc
mov
pop
inc
(bad)
(bad)
mov
cmps
int3
stc
cmps
pop
xchg
cli
call
cmc
(bad)
sbb
out
inc
jp
sub
mov
(bad)
mov
xor
stos
mov
mov
shl
lods
(bad)
retf
jno
mov
sbb
fmul
inc
xchg
jmp
into
jp
xchg
pushf
adc
or
daa
int3
imul
das
inc
cmps
jne
int
jmp
sahf
addr16
pop
repz
mov
inc
mul
scas
mov
clc
(bad)
outs
mov
jno
sub
sahf
sub
bound
cmp
leave
scas
dec
push
sub
mov
xchg
(bad)
xchg
jmp
pop
retf
mov
cmp
inc
mov
mov
adc
and
fsub
pop
cmp
pop
dec
test
cmp
or
xchg
retf
leave
xor
push
pushf
bnd
adc
ret
lock
jae
scas
jecxz
adc
xor
mov
cmp
ds
cmp
sbb
cmp
jb
xchg
clc
jg
inc
pop
or
or
frstor
or
push
or
mov
dec
shr
(bad)
xor
cdq
adc
mov
int3
fs
xor
xchg
retf
add
xchg
or
dec
mov
mov
xchg
and
loop
(bad)
loop
inc
cwde
movs
xor
and
sbb
dec
mov
aam
jle
adc
push
mov
mov
test
mov
jb
clc
data16
mov
mov
cwde
int
push
icebp
dec
arpl
arpl
xor
mov
jbe
and
jmp
mov
out
(bad)
mov
xor
sahf
adc
syscall
stc
xchg
xor
cs
(bad)
jmp
pushf
jge
jp
pop
cmp
mov
stc
out
cld
cmp
and
adc
imul
repz
mov
ret
mov
scas
dec
enter
lds
iret
xor
and
leave
popf
inc
inc
cld
mov
ror
and
stos
(bad)
in
jl
dec
lahf
dec
dec
jge
push
xchg
pop
adc
pop
lods
(bad)
in
call
jno
cli
aad
pop
xchg
push
outs
lahf
or
mov
stc
sbb
mov
jge
int3
aas
fucompp
pop
icebp
xchg
(bad)
cmp
in
jle
(bad)
push
fist
xchg
dec
xchg
imul
push
pop
in
sbb
add
sbb
neg
ds
push
mov
ja
fldcw
lods
or
adc
push
sub
push
clc
jge
ret
test
inc
mov
hlt
in
adc
jg
mov
lahf
push
push
inc
enter
idiv
js
sub
jp
mov
xchg
mov
ins
or
jmp
cmp
aas
and
jae
xor
mov
and
pop
rcl
xor
inc
rcr
(bad)
jb
aaa
jmp
les
in
mov
add
scas
repz
push
inc
sbb
clc
jbe
das
sub
cs
arpl
push
pushf
jg
frstor
cmp
movs
stos
idiv
mov
(bad)
and
xor
mov
out
leave
sub
in
aas
dec
loope
mov
jle
mov
nop
jl
cli
out
cmp
into
mov
and
push
not
fstp
ss
and
jmp
adc
pop
retf
xchg
lahf
repnz
mov
inc
shr
mov
inc
(bad)
ret
fcomp
sbb
mov
pushf
jecxz
jg
sub
in
test
jg
mov
lea
mov
sbb
dec
and
repnz
lahf
dec
das
inc
adc
int
hlt
ins
push
out
mov
or
xor
sub
fwait
sub
mov
dec
xor
add
int
int
clc
jecxz
mov
ror
jge
sbb
fiadd
scas
cwde
mov
ins
stc
push
scas
and
lock
sbb
sbb
ror
adc
pop
mov
(bad)
inc
(bad)
mov
inc
leave
es
pop
pop
mov
xchg
into
jp
rcl
cdq
cmc
lahf
xchg
dec
imul
data16
cld
add
clc
push
push
xor
inc
adc
inc
or
ss
dec
test
and
fsub
sbb
cdq
jmp
ja
jnp
(bad)
in
jl
mov
neg
adc
fwait
std
iret
jmp
iret
pushf
in
or
into
cmp
pop
leave
loop
xchg
mov
repz
jo
jne
test
and
shl
repz
(bad)
(bad)
test
pop
push
retf
adc
fcmovb
(bad)
push
(bad)
test
into
mov
jmp
iret
sub
cdq
loop
sbb
sbb
int3
lds
ss
(bad)
rol
in
retf
jbe
(bad)
iret
mov
shr
movs
jge
bound
cmp
int
push
addr16
scas
xchg
pushf
push
adc
inc
cmc
inc
adc
je
and
cmp
inc
mov
es
push
push
out
dec
mov
retf
dec
cmps
sub
loopne
loop
mov
retf
(bad)
out
int3
ficomp
push
xchg
pop
mov
aaa
push
or
js
scas
dec
stc
jae
in
(bad)
mov
sbb
xchg
int
cmp
push
jno
push
mov
fmul
out
mov
retf
or
add
rol
pop
jns
addr16
pop
pop
xor
cmp
arpl
sub
arpl
adc
push
add
sub
(bad)
les
push
or
push
movs
mov
pop
or
aam
dec
push
mov
jno
lods
int
push
jmp
aaa
cmp
or
test
nop
sub
dec
and
nop
leave
xor
clc
movs
xor
mov
add
push
aas
ins
and
push
sbb
inc
loop
sbb
jae
jg
push
(bad)
inc
jecxz
mov
or
daa
jg
and
cmps
retf
push
data16
sub
cmp
mov
dec
pop
in
movs
xor
imul
or
sbb
xor
cmp
mov
mov
pop
fild
cli
xlat
xchg
sub
in
lahf
ja
out
xchg
inc
pop
mov
adc
sbb
in
mov
xor
(bad)
push
mov
mov
out
add
xor
xor
mov
out
adc
fs
stc
xchg
and
push
pop
adc
ss
in
std
jmp
idiv
das
jmp
icebp
dec
movs
xor
sbb
out
dec
inc
inc
imul
fcmovb
and
jnp
cmp
std
in
cld
sub
in
std
aaa
les
repz
sub
out
ss
retf
push
pop
cmp
sbb
in
inc
inc
enter
cmp
ins
ds
fs
adc
cs
fsubr
cmp
pop
add
lods
out
pop
mov
dec
imul
cmp
or
es
mov
xor
je
out
dec
sti
call
sahf
sbb
adc
inc
jns
mov
sub
mov
push
clc
adc
sub
jae
add
sub
in
gs
lods
or
js
les
mov
dec
mov
jbe
mov
sbb
loopne
mov
sbb
ds
xor
mov
push
mov
adc
sub
repz
(bad)
fstp
xor
mov
(bad)
repnz
repnz
cmp
test
adc
cmps
xor
(bad)
out
iret
adc
cmp
xlat
jne
lahf
and
sahf
in
aaa
mov
mov
call
mov
fnstcw
aaa
sub
test
clc
cmps
inc
icebp
es
stos
dec
ss
cmp
sub
fisub
fneni(8087
xchg
mov
nop
inc
sub
mov
sbb
(bad)
enter
sti
push
push
mov
push
xchg
cmp
xor
mov
dec
mov
fnsave
test
mov
(bad)
stc
sbb
aas
sahf
inc
adc
cmps
pop
mov
inc
and
inc
mov
push
and
mov
(bad)
jg
pop
sub
sbb
mov
inc
mov
(bad)
prefetch
dec
shl
inc
or
rol
xor
fdivr
(bad)
iret
pusha
xor
leave
sbb
es
enter
ror
cmc
jge
(bad)
cmp
mov
or
jp
(bad)
out
cmc
adc
mov
jb
mov
pop
aaa
jp
iret
adc
dec
sbb
or
mov
mov
bound
jp
(bad)
in
lods
in
xor
xchg
lds
fwait
pop
dec
pop
inc
stos
sbb
out
push
mov
cmps
movs
or
scas
cmp
lea
retf
push
jmp
xor
jle
into
sub
jno
mov
and
loop
(bad)
and
cmp
inc
call
dec
pop
mov
pop
mov
or
sbb
jns
nop
call
cmp
sub
fwait
call
cmps
mov
xchg
and
cmp
sbb
retf
pop
xor
jno
mov
ror
cmp
mov
aad
repz
dec
mov
bound
repnz
mov
lds
jbe
ja
aad
sahf
lock
inc
xor
stos
test
cmps
aad
retf
pop
(bad)
xor
retf
inc
push
lods
xchg
test
aad
sahf
push
mov
and
adc
adc
out
scas
dec
popf
ss
dec
mov
jae
sahf
cmp
pop
mov
or
aaa
es
or
out
out
jae
mov
xor
ret
out
sub
and
push
dec
in
mov
jle
inc
cmp
into
jge
hlt
fcomp
xchg
sbb
jnp
fidiv
fld
sbb
retf
fiadd
fiadd
pop
push
sbb
sahf
lods
aaa
cdq
jno
aaa
push
lahf
popf
inc
popf
jno
mov
out
shr
cli
inc
mov
mov
mov
mov
(bad)
jmp
mov
sub
xlat
repz
retf
mov
jl
daa
out
fdiv
call
jb
sbb
sahf
cmp
fwait
mov
out
pop
cdq
(bad)
inc
movs
clc
scas
push
repz
push
or
cmps
movs
dec
inc
fstp
js
inc
bound
aas
dec
jg
dec
cvtpi2ps
sbb
fsubr
not
xchg
xchg
pop
inc
mov
ror
dec
int
push
and
inc
xlat
ret
sti
fisttp
leave
mov
mov
cdq
jmp
inc
pop
in
push
out
stos
push
xchg
ret
outs
or
sbb
cmp
movs
gs
jecxz
out
mov
std
xchg
aas
xor
loope
mov
pop
jnp
cmps
aaa
xor
mov
mov
mov
lock
out
test
push
push
cmp
dec
mov
mov
pop
data16
push
jle
push
inc
add
dec
mov
xchg
cmp
iret
cmp
cmps
cmp
pop
inc
inc
in
mov
(bad)
xlat
or
xor
sub
cld
or
aas
das
repnz
sub
sbb
stc
cmps
std
pop
add
inc
add
pop
(bad)
icebp
pop
sbb
(bad)
jmp
cs
and
mov
call
cmovg
jl
jno
ss
xchg
dec
nop
mov
fdivr
movs
push
fcmovnb
cld
fimul
(bad)
repz
push
jns
or
iret
(bad)
cwde
iret
jmp
fld
adc
cmp
sbb
mov
ins
pop
add
aas
paddd
js
outs
jne
imul
sub
push
(bad)
jbe
std
shl
lock
cmp
and
cli
xor
out
sbb
not
aas
movs
jl
cmc
fs
xchg
sub
inc
(bad)
repnz
push
fisubr
xchg
cwde
mov
sti
pop
out
outs
jae
stos
lock
xlat
ins
mov
dec
xchg
scas
dec
xchg
adc
add
sbb
stc
ror
or
adc
inc
sbb
js
jbe
push
movs
arpl
mov
out
xchg
ret
lods
add
adc
scas
and
fild
jge
inc
in
in
icebp
pop
cwde
mov
sub
bound
mov
js
mov
mov
jecxz
loopne
cmp
ret
jg
dec
fcomip
aad
add
sub
cmc
iret
movs
ds
imul
lods
lahf
jno
(bad)
out
stos
into
aas
sbb
push
lock
fwait
adc
pop
shl
jge
mov
ins
movs
xor
xchg
imul
dec
and
push
push
dec
adc
pop
(bad)
fsub
(bad)
inc
mov
movs
mov
pop
adc
in
int3
stc
cmc
sar
cmp
dec
repnz
cmp
ss
pop
cmp
sbb
mov
mov
scas
lods
lock
sub
or
jge
call
inc
aam
popf
cwde
scas
sbb
(bad)
shl
adc
sbb
jecxz
pop
gs
addr16
mov
call
shl
out
pusha
mov
push
call
hlt
or
push
fstp
dec
test
pop
call
adc
mov
pop
mov
pop
pushf
and
pop
test
jmp
xor
daa
inc
push
imul
fisubr
adc
mov
enter
scas
mov
mov
sbb
test
out
into
add
pushw
(bad)
mov
jp
sbb
(bad)
xchg
dec
add
pop
stos
arpl
push
and
sub
lods
inc
push
sub
mov
or
push
add
aad
mov
mov
push
or
pop
inc
push
movs
mov
int
mov
data16
mov
xchg
stc
dec
add
into
push
imul
jns
js
dec
pop
imul
inc
(bad)
stos
mov
ins
mov
test
in
into
out
sub
mov
add
imul
cmp
pusha
into
pop
jmp
jno
xchg
sti
jg
jmp
mov
stos
mov
sbb
shr
int
mov
jo
mov
or
out
in
ins
sar
movs
scas
cmps
popa
daa
(bad)
jo
idiv
data16
sub
(bad)
pop
aad
ds
cmc
sub
neg
retf
jl
push
cli
xor
or
push
retf
stc
xchg
sub
fiadd
ins
pop
mov
jmp
jp
add
xor
mov
xor
lods
outs
imul
jne
sti
and
out
push
jl
dec
test
sahf
jge
pop
sub
sbb
ret
sbb
fistp
push
fmul
mov
out
add
xor
mov
mov
loope
cmp
out
imul
jp
imul
fwait
pop
cmps
test
jnp
outs
lds
cli
mov
bound
mov
mov
dec
pop
(bad)
ficomp
fcmovu
ss
shl
and
popf
push
pop
icebp
jmp
pop
mov
jbe
cmc
lds
repz
lahf
clc
xchg
lods
rcr
jbe
sub
ins
push
lea
adc
jnp
enter
mov
jge
pop
mov
mov
stc
push
retf
(bad)
fimul
sbb
lods
jle
into
sti
lahf
mov
sbb
mov
stc
push
pop
ins
aaa
push
adc
adc
push
fcom
jbe
jge
pop
mov
fmul
aad
push
dec
js
sar
movs
lahf
xor
sub
push
mov
sub
or
fisubr
lahf
sbb
xchg
pop
aas
push
cwde
jmp
dec
mov
mov
dec
xchg
cmp
aam
push
mov
push
cs
cmps
imul
push
mov
mov
shl
push
out
sub
mov
jecxz
imul
adc
push
and
pop
jge
push
mov
mov
test
cli
adc
call
loope
push
jae
jp
pop
jmp
sub
jae
add
dec
(bad)
xchg
jne
inc
pop
mov
psrlq
adc
jge
cmc
scas
sub
mul
and
into
fs
inc
out
out
ds
ss
and
mov
daa
repnz
jnp
xchg
in
scas
cmc
sub
out
call
stos
jmp
dec
push
mov
popa
mov
lea
xor
sub
cli
addr16
clc
pavgw
imul
repnz
ins
sub
xor
repnz
jne
jge
scas
pop
push
inc
int3
cmp
loopne
lea
cld
shr
adc
(bad)
jb
dec
mov
jae
fnstenv
js
pop
push
mov
ss
mov
add
arpl
xor
bound
dec
std
pop
(bad)
mov
outs
sub
outs
mov
pop
mov
dec
mov
inc
aaa
popa
mov
sbb
mov
iret
xor
mov
mov
pop
and
inc
inc
aam
sti
or
lods
dec
mov
mov
jge
mov
sub
fs
ins
and
and
(bad)
out
sbb
sbb
data16
push
test
outs
sbb
and
xor
ss
mov
push
aad
fmul
shr
xor
(bad)
mov
data16
int3
les
pop
mov
out
xor
dec
stos
scas
mov
pop
push
out
mov
or
mov
mov
in
pop
sub
mov
bound
and
sbb
inc
sbb
les
pop
jnp
(bad)
sar
in
fxch
cld
mov
es
std
out
xor
jno
into
mov
fdivr
das
loopne
hlt
xor
xchg
fbstp
dec
adc
enter
or
repz
jo
ds
xchg
loopne
sti
xchg
push
stos
ds
inc
inc
inc
add
jne
in
sbb
jb
pop
push
lea
mov
sti
inc
cs
mov
mov
dec
and
xchg
out
cmps
imul
and
and
in
dec
jns
lds
cmp
inc
(bad)
aam
pop
gs
(bad)
loopne
inc
mov
push
add
adc
shl
fdivr
adc
out
mov
add
mov
lods
jno
leave
outs
popa
int
rol
les
pop
mov
lahf
cdq
xor
sbb
xchg
lahf
cmp
push
mov
and
dec
pop
imul
setne
xchg
xor
pop
pushf
xchg
cmc
xor
mov
or
mul
xor
out
dec
xchg
pop
int3
iret
lods
ins
inc
push
jg
popa
std
(bad)
(bad)
pop
retf
pop
stos
jg
cld
jle
and
fisub
enter
and
add
stos
test
ds
inc
scas
xor
mov
add
sti
inc
and
cli
push
mov
jge
mov
clc
not
out
mul
cmp
mul
xor
ins
cmp
out
ins
inc
adc
mov
leave
movs
out
xor
sub
push
jae
adc
push
dec
dec
scas
call
xlat
cmp
inc
arpl
dec
es
cmp
sbb
call
repnz
movs
inc
mov
jbe
dec
sub
leave
scas
sub
movs
and
and
mov
test
addr16
cmp
call
mov
xchg
in
lea
sbb
inc
out
mov
lods
int3
(bad)
ins
xlat
dec
into
aaa
int3
and
imul
cmps
pop
xor
aam
out
fs
sub
mov
sub
push
sub
ins
inc
data16
stos
adc
xor
adc
push
cdq
sbb
adc
pop
mov
test
dec
rol
mov
ror
rol
xor
dec
jmp
jnp
(bad)
jmp
xchg
mov
aaa
sbb
ret
outs
pop
jnp
push
xchg
xchg
sub
enter
dec
ins
cmps
push
popa
inc
bound
pop
pop
push
inc
pop
in
sub
dec
mov
cmps
dec
retf
aaa
mul
ror
dec
enter
cmp
stos
inc
inc
push
jp
retf
inc
mov
sbb
stos
outs
sbb
repz
lahf
retf
sbb
gs
pop
mov
ret
cmp
(bad)
cmp
dec
cmp
pop
icebp
movs
xchg
pop
scas
retf
jg
jl
mov
add
(bad)
and
(bad)
push
clc
jp
cmp
fist
xlat
cmps
out
xchg
sbb
(bad)
mov
inc
xlat
cmp
ss
jne
popa
mov
imul
mov
pushf
repz
mov
scas
xchg
xor
inc
mov
out
outs
dec
ds
dec
aas
imul
dec
cmp
js
in
jae
fadd
jmp
bound
pop
inc
aad
loope
aas
shr
imul
cmc
push
aas
sti
sub
das
mov
sub
add
arpl
adc
mov
jecxz
test
repnz
sub
jge
leave
(bad)
xlat
jl
ror
mov
adc
inc
repnz
mov
scas
shl
retf
aam
add
ficomp
xor
cdq
mov
gs
and
push
pop
sub
popf
mov
icebp
adc
push
adc
aaa
pusha
(bad)
out
das
sar
mov
fistp
sbb
movs
jb
mov
int3
ds
movs
mov
(bad)
push
inc
aas
outs
dec
fidivr
mov
jnp
ret
cmps
sub
movs
push
and
sti
sub
mov
fnstenv
into
mov
clc
scas
rcl
sbb
dec
loope
or
ds
cmp
cld
mov
fnsave
sbb
mov
scas
mov
pop
ja
scas
or
scas
inc
push
sbb
push
(bad)
pop
aaa
push
xchg
cwde
ret
xor
push
cmp
mov
adc
inc
ja
das
(bad)
push
into
loope
dec
adc
mul
mov
fiadd
sub
sub
and
enter
jge
mov
push
and
fisttp
imul
loope
push
mov
je
jns
mov
push
push
mov
pop
xor
std
mov
xor
sbb
nop
scas
xchg
enter
push
retf
mov
mov
imul
mov
pop
push
repz
and
loop
dec
xchg
adc
in
shl
jbe
nop
(bad)
out
sub
inc
mov
pop
pop
adc
pop
push
or
xor
retf
inc
fisttp
shl
adc
inc
xchg
xor
outs
and
aaa
cmp
sbb
in
mov
rcr
call
mov
aaa
clc
xchg
sbb
cmp
shl
inc
sub
(bad)
bnd
sbb
xchg
cmp
xor
cld
inc
repnz
pop
cmp
push
clc
jns
sub
aas
dec
mov
outs
xor
xchg
nop
nop
xor
enter
dec
mov
pop
icebp
std
push
loopne
mov
xchg
push
push
fidiv
jl
mov
in
jg
sub
std
mov
das
fs
pusha
sar
cmp
je
jmp
mov
faddp
mulps
pop
or
fstp
shr
ins
(bad)
fcomp
ret
push
out
retf
repz
pop
mov
push
imul
dec
out
sbb
nop
jns
in
jmp
imul
add
jb
in
jae
dec
mov
pop
mov
mov
mov
mov
mov
mov
cmp
push
les
in
stc
xchg
xor
addr16
(bad)
lods
push
sbb
cmc
cmp
ficom
aaa
mov
add
mov
repnz
add
adc
pop
xchg
(bad)
push
sbb
cmps
jne
adc
out
inc
dec
fbstp
rcl
xchg
xchg
xor
mov
fwait
sti
lahf
das
int
out
xchg
mov
cmp
(bad)
mul
stos
mov
je
dec
mov
les
ins
cmps
sub
popa
xchg
fimul
in
mov
mov
pop
ror
cmp
push
push
dec
mov
das
nop
repnz
jo
sub
inc
retf
not
mov
fbstp
lea
mov
imul
jne
pop
mov
sbb
mov
sbb
out
push
dec
aas
and
push
push
add
cmps
arpl
in
retf
jmp
jge
fsub
lods
mov
sbb
adc
cmp
lods
and
sub
xchg
test
jl
push
lea
jno
out
xchg
fbld
jns
mov
outs
jbe
pop
(bad)
(bad)
aad
inc
sbb
addr16
dec
(bad)
cld
or
inc
and
xor
in
mov
sbb
cmp
sub
xchg
enter
int3
fldenv
xchg
mov
and
cmps
daa
jbe
fcomp
in
dec
gs
imul
fwait
mov
cs
aas
fild
pop
pusha
mov
inc
jmp
(bad)
jbe
stos
xchg
add
js
loop
out
mov
inc
mov
retf
sub
sti
sbb
cmp
xchg
imul
add
mov
jno
push
mov
xor
xchg
dec
test
lahf
xor
mov
pop
movs
ins
(bad)
lods
(bad)
arpl
aad
push
sub
xrelease
and
inc
jmp
bound
mov
push
cdq
lods
sub
xchg
cmc
bound
std
out
fwait
mov
int
cmp
call
pop
fsubr
mov
xchg
sbb
xchg
lds
shl
sar
(bad)
sti
popf
lods
push
cmp
popa
xor
sub
push
imul
sbb
neg
inc
add
push
mov
and
mov
in
enter
xor
out
cmp
fimul
scas
jae
js
push
in
(bad)
loope
mov
jl
push
pushf
and
in
mov
fldlg2
push
xchg
sub
or
ins
mov
push
jge
sub
icebp
out
daa
sti
mov
ja
addr16
test
fstp
and
mov
push
gs
cmp
push
add
sub
or
mov
pop
sbb
sbb
cmp
mov
lods
fwait
es
cld
mov
xchg
imul
leave
xor
ins
xlat
add
push
push
mov
sbb
out
shr
mov
pop
jae
xlat
pop
in
inc
xchg
scas
jecxz
mov
sub
sub
mov
sbb
retf
repz
scas
mov
inc
into
jbe
add
and
xor
or
inc
sbb
adc
xchg
jmp
xor
cwde
lods
inc
inc
inc
xor
and
mov
inc
std
mov
out
pop
mov
mov
adc
pop
cmp
mov
nop
leave
stos
dec
pop
push
add
xor
lds
bound
aad
xchg
aad
sub
xor
jecxz
and
stos
adc
cmc
icebp
inc
loope
cdq
or
mov
xchg
push
aad
push
pop
daa
in
(bad)
hlt
scas
cmp
jge
xchg
je
test
mov
shl
sbb
mov
pop
push
dec
inc
and
fistp
aaa
jbe
sbb
cwde
fs
(bad)
sbb
mov
shl
in
mov
pop
sti
loope
stc
hlt
stos
and
in
dec
cmc
test
ror
clc
xchg
push
stos
mov
test
popf
stos
inc
(bad)
mov
aas
sub
adc
pop
mov
add
mov
(bad)
push
ins
jp
dec
adc
(bad)
sbb
xchg
stos
idiv
and
jecxz
or
cdq
clc
mov
cmovp
push
lods
repnz
dec
xlat
jl
loope
in
movs
sti
xor
loope
add
sbb
arpl
outs
sbb
sbb
or
inc
mov
jg
pop
xlat
lds
dec
not
pop
cmp
push
pop
dec
jo
inc
fisttp
pop
icebp
sub
fimul
(bad)
popf
movs
fisttp
ins
sbb
push
add
(bad)
(bad)
sub
add
or
pop
js
pop
sbb
cs
or
xor
fsub
fild
ds
add
int3
mov
sar
mov
movs
fs
or
dec
or
enter
fcmovnu
ds
jb
inc
add
fnsave
push
in
add
lods
inc
mov
mov
jo
inc
loop
sbb
outs
xor
push
imul
or
mov
mov
in
and
bound
clc
pushf
xchg
(bad)
and
push
shr
mov
clc
ja
pop
call
call
sub
or
cdq
sub
(bad)
bswap
in
arpl
jmp
adc
jge
fnsave
(bad)
loope
(bad)
ja
and
jg
retf
imul
and
(bad)
lods
addr16
test
jecxz
sbb
cli
ss
ja
sub
addr16
cmp
inc
fld
imul
hlt
fwait
mov
mov
push
mov
mov
icebp
cmp
jge
fisttp
or
push
into
inc
mov
mov
dec
scas
sbb
iret
xchg
xor
mov
into
ds
cmp
cwde
dec
xchg
sub
into
outs
cwde
idiv
mov
les
pop
adc
xchg
lods
movs
sti
pop
ud2
aas
cwde
ins
and
and
fmul
lahf
cdq
adc
jecxz
pop
push
dec
push
mov
je
push
mov
add
out
ins
push
(bad)
sub
(bad)
in
icebp
mov
add
push
cmp
imul
jmp
cld
pop
arpl
dec
js
(bad)
sbb
cmc
push
repnz
mov
dec
out
xor
add
fcomip
repz
cmps
lock
sub
cmp
test
mov
pop
rol
jb
jmp
jbe
stc
loopne
iret
mov
aas
fidiv
cli
mov
and
cmp
lahf
mov
fs
sub
push
ss
idiv
into
push
cmps
aad
mov
xor
retf
dec
in
arpl
mov
jecxz
repnz
imul
rol
fcmovnb
or
iret
add
jns
inc
cmps
push
or
mov
(bad)
shr
xchg
rcr
into
ins
hlt
adc
pop
cmp
lock
scas
pop
pop
mov
mov
sub
mov
cmp
mov
xchg
cmp
int3
mov
data16
ficomp
shl
imul
loop
pop
in
fisub
xchg
push
stc
in
or
fwait
and
sbb
mov
aas
adc
push
imul
dec
mov
xchg
mov
sub
gs
xchg
pop
fisub
inc
ret
or
into
adc
repnz
fwait
lock
sub
aad
ds
mov
in
cmp
scas
dec
cmc
out
jno
arpl
fist
xor
cmps
enter
push
dec
out
xchg
xlat
idiv
fnsave
popf
dec
iret
push
aad
out
jne
push
fadd
in
mov
stos
xchg
mov
imul
fild
mov
je
push
in
ss
mov
test
call
mov
dec
push
rcl
push
xor
aaa
and
sahf
jp
into
imul
in
stos
cmp
mov
ret
div
cmp
stos
pushf
xor
hlt
scas
jle
inc
int3
xchg
imul
gs
mov
movs
dec
and
add
scas
push
test
loop
push
les
push
cmp
or
dec
scas
inc
loop
iret
mov
adc
loopne
xchg
xor
dec
jg
scas
ds
mov
mov
and
mov
xor
icebp
mov
hlt
jbe
or
pop
inc
imul
ror
sahf
not
clc
push
lods
and
pop
ret
pop
leave
jnp
xor
sbb
out
dec
(bad)
adc
(bad)
push
dec
pushf
lds
pop
stc
out
out
and
cmc
iret
jbe
pop
repz
icebp
pop
les
cmps
fstp
mov
arpl
xchg
into
sub
clc
inc
fidiv
inc
and
sub
and
sahf
mov
xchg
cmp
mov
push
pop
(bad)
pop
pop
into
test
add
imul
fistp
adc
xchg
mov
cmp
fild
call
inc
jg
test
in
aas
jp
and
and
and
lods
mov
data16
stos
test
(bad)
mov
fsub
sahf
int3
repnz
sti
adc
loope
cmps
dec
ds
call
push
push
dec
mov
movs
mov
jns
adc
push
sbb
jns
mov
mov
dec
sets
inc
or
or
cdq
dec
and
jae
pop
daa
or
push
sbb
add
sub
sahf
test
push
xor
lods
dec
inc
cmp
int3
arpl
and
ins
jae
adc
(bad)
int3
jecxz
fsub
or
sub
ins
dec
push
push
cmps
fs
xor
push
enter
mov
pop
mov
adc
xor
call
in
fsubr
rcr
mov
adc
jmp
jne
or
sub
inc
test
sbb
les
retf
add
cdq
imul
movs
xor
push
inc
mov
call
pop
cmp
sub
ds
jns
stc
rcl
fnop
add
enter
(bad)
pop
clc
imul
mov
outs
int
push
push
retf
inc
inc
push
cmp
pop
inc
les
inc
xchg
xchg
std
pop
xchg
jo
mov
cld
fwait
(bad)
(bad)
mov
mov
jo
lahf
imul
bound
aas
test
fdivr
mov
fcom
mov
loopne
fdivr
leave
fstp
call
sub
and
push
xor
and
sbb
inc
push
gs
inc
rol
test
mov
sub
in
in
hlt
adc
daa
mov
icebp
sub
aaa
das
movs
lahf
fidiv
lock
mov
clc
xchg
dec
xchg
ja
les
inc
addr16
mov
fcmovnb
xchg
xchg
inc
(bad)
mov
pop
out
mul
cdq
pop
jg
sbb
xchg
in
jg
mov
xchg
ret
xchg
push
xor
das
shl
aas
push
adc
(bad)
aas
les
mul
mov
lea
arpl
sub
cs
and
xchg
int
and
sti
in
sub
jmp
call
cmp
call
mov
cmp
xor
jae
out
fld
stos
xchg
(bad)
hlt
(bad)
fstp
add
sahf
imul
mov
ins
out
loopne
xchg
cmp
mov
cmc
ja
int3
gs
mov
ins
fdiv
dec
shr
std
out
xchg
jne
movs
retf
dec
cli
je
mov
and
lods
and
sub
sbb
adc
ins
adc
xchg
cmp
sub
xor
popa
push
jmp
push
cmp
add
pusha
pop
fsubr
add
call
xlat
test
fistp
jecxz
imul
lods
jecxz
mov
and
mov
js
clc
jp
sti
cmp
inc
pop
fnstsw
cmp
ds
scas
addr16
ss
ins
pushf
adc
dec
(bad)
fbld
or
xor
frstor
lods
jecxz
xchg
inc
retf
jp
bound
loop
mov
mov
aad
mov
mov
in
sar
inc
outs
jg
push
popf
and
mov
dec
lds
pushf
and
(bad)
adc
push
jg
mov
loope
out
mov
push
aaa
cld
add
jb
sbb
cmp
clc
jnp
(bad)
test
xor
fmul
jb
sbb
ja
inc
push
inc
ficom
dec
and
xchg
pop
and
stos
pop
push
hlt
imul
jo
mov
mov
out
in
xor
icebp
sub
inc
inc
dec
rep
mov
jbe
mov
int3
ja
lahf
dec
imul
fisttp
sbb
outs
and
mov
jne
repnz
xor
mov
sets
mov
pop
inc
mov
lods
xor
or
fwait
and
outs
es
in
and
arpl
in
jno
out
(bad)
mov
add
stos
(bad)
lahf
and
fs
or
test
in
(bad)
cli
lods
(bad)
nop
pushf
add
arpl
jns
jmp
xchg
fsubr
(bad)
repnz
jns
xchg
daa
js
pop
and
jnp
or
lock
lods
into
pop
out
loope
add
dec
xchg
jbe
push
cdq
or
test
sub
add
pop
pop
(bad)
sbb
mov
out
sbb
in
and
in
retf
pop
jae
cdq
sahf
outs
jae
iret
ja
inc
outs
mov
mov
js
out
xor
push
int3
shl
inc
or
fist
jae
sub
fmul
clc
pop
(bad)
fisub
mov
jle
js
push
iret
sbb
adc
imul
and
shl
clc
pop
dec
aam
and
ins
fisubr
jns
add
push
outs
and
jne
fisttp
lods
into
pop
push
iret
mov
xor
or
iret
ja
mov
imul
aaa
daa
(bad)
xchg
loop
data16
jg
addr16
js
ret
mov
iret
sbb
movs
ja
fisub
clc
nop
fs
mov
inc
jmp
imul
lds
cmp
sub
aad
sub
sti
xor
mov
or
popf
pop
cmp
loope
scas
outs
push
int3
dec
fild
pop
sub
fbstp
in
(bad)
jge
loope
push
mov
jns
outs
mov
push
test
ret
test
xchg
and
test
and
shl
call
dec
cmp
push
test
mov
aad
pop
arpl
stc
(bad)
loopne
adc
mov
cli
jbe
nop
out
shl
out
(bad)
rcl
daa
fs
jae
psubb
gs
les
pop
pop
sub
(bad)
outs
xchg
sti
mov
push
outs
aad
rcr
out
sub
js
or
xor
cmp
int3
out
or
xor
stos
pushf
pop
ja
dec
call
popf
ins
mov
push
or
mov
daa
retf
fidivr
pop
(bad)
cs
fidivr
div
mov
data16
(bad)
jmp
jp
out
addr16
jl
loop
add
(bad)
xlat
or
jb
jle
cmp
je
stos
mov
mov
push
sub
mov
stos
cld
(bad)
int3
js
daa
ror
xor
repz
jno
add
bound
loopne
fwait
mov
mov
sub
ja
sub
mov
add
adc
inc
push
retf
push
std
sub
shl
mov
add
jnp
(bad)
in
imul
(bad)
repz
ins
add
lods
into
sub
inc
stos
dec
xchg
mov
(bad)
int
adc
jno
inc
ss
retf
jo
xchg
out
cmp
pop
pushf
gs
and
cmps
es
rcl
loopne
xor
pushf
in
aad
add
nop
mov
stos
xor
out
cmp
pop
sbb
sbb
cmp
ja
dec
fcom
test
push
(bad)
outs
pop
movs
cmp
stc
mov
jns
(bad)
fist
popa
cmps
data16
data16
mov
push
inc
mov
enter
repnz
adc
or
pop
lods
push
sub
push
adc
dec
and
sub
dec
xchg
les
cmc
and
dec
inc
add
test
push
adc
sub
cmp
dec
xchg
push
lds
mov
cmp
cld
imul
cli
mov
xor
cmc
repz
mul
popf
icebp
push
shl
xor
outs
and
pop
(bad)
push
cmps
push
pop
mov
dec
fist
mov
push
mov
sbb
rcr
cld
jmp
ficomp
int3
jmp
out
or
outs
mov
fidivr
fdiv
stos
mov
dec
adc
xor
push
mov
imul
cs
cmps
out
or
(bad)
enter
and
mov
shr
fisubr
out
mov
gs
test
stc
sub
mov
mov
aas
ret
loopne
cwde
cs
arpl
push
push
xchg
inc
xor
ins
mov
test
jmp
cmp
stos
out
pop
xor
fsubr
in
lea
movs
mov
popf
sub
(bad)
cmp
icebp
or
fidivr
retf
test
pop
fs
sbb
in
(bad)
lahf
dec
cwde
not
mov
shl
shl
shl
cmp
hlt
mov
mov
jns
xchg
(bad)
dec
jl
clc
xchg
xor
cld
cmp
sub
jp
(bad)
mov
mov
inc
ja
jnp
cld
jnp
sub
add
sub
cmp
adc
jle
std
cs
xor
movs
jae
mov
das
sbb
fldl2e
push
test
sbb
retf
mov
inc
mov
push
sub
inc
dec
fsubp
scas
pop
xor
jmp
js
push
cmp
aas
mov
pop
adc
pop
dec
cmps
sti
mov
(bad)
out
repnz
clc
mov
mov
and
inc
enter
ins
aad
sub
sub
outs
push
ins
xlat
aaa
jb
xlat
xor
(bad)
sub
push
cmp
jp
lahf
dec
sbb
dec
xchg
and
ins
in
cmps
xchg
out
loope
movs
push
(bad)
out
and
or
imul
xor
jb
xchg
and
(bad)
fs
je
add
arpl
call
adc
loop
fisub
es
sahf
das
movnti
dec
mov
mov
out
pop
cmp
xlat
jl
and
fsub
jno
mov
scas
sbb
sub
lock
ret
jg
(bad)
inc
mov
inc
jno
(bad)
aaa
add
arpl
ja
lahf
mov
jge
test
sbb
jle
je
retf
iret
fisubr
or
dec
cmps
mov
dec
push
ret
in
loopne
pop
lock
sub
fldcw
pop
bound
inc
inc
push
add
mov
mov
dec
(bad)
mov
retf
shr
retf
or
out
mov
mov
pop
or
inc
jge
push
ss
xchg
ss
jae
xchg
int
ins
sbb
test
test
ret
sub
dec
lds
mov
mov
mov
(bad)
xor
outs
mov
dec
sub
fs
inc
cs
inc
or
xchg
int
data16
ret
mov
and
bound
(bad)
jbe
xchg
dec
mov
loope
or
sbb
popf
jl
loopne
or
dec
jno
enter
outs
xor
mov
je
inc
xchg
ja
call
jnp
cmp
mov
ins
ret
in
xor
dec
sub
retf
adc
jle
jmp
in
xchg
mov
mov
mov
mov
xor
inc
xchg
cmps
mov
(bad)
xchg
repz
push
aaa
hlt
outs
mov
call
sar
lea
aaa
push
xchg
mov
movs
fcomp
icebp
nop
and
mov
fcomp
mov
sub
ds
test
mov
js
pop
inc
dec
xlat
ins
push
and
add
jecxz
push
fistp
(bad)
lahf
movs
mov
cmps
and
lds
jno
or
into
jg
dec
fmul
int
or
cmp
in
mov
mov
xchg
pop
outs
or
test
retf
ss
sub
add
inc
jp
or
push
js
fs
shl
(bad)
pushf
call
xchg
mov
and
popf
cmps
pop
mov
sbb
jmp
loope
and
cmps
(bad)
cmp
and
popf
addr16
cmp
out
cld
adc
dec
pop
dec
loop
inc
inc
xchg
adc
(bad)
icebp
loop
mov
cld
dec
jo
fcomi
enter
lea
xchg
xor
pop
pusha
jnp
out
out
or
or
out
jecxz
mov
std
out
(bad)
mov
lahf
xor
mov
push
pop
pop
fst
adc
and
adc
ret
scas
cld
push
mov
stc
call
ins
loop
pop
repnz
mov
jno
push
adc
gs
pop
push
push
xchg
cli
sahf
sub
outs
fidivr
pop
mov
cmp
ret
dec
mov
jbe
fld
mov
push
cld
(bad)
scas
dec
shr
cs
popf
add
add
xor
jne
inc
add
fcom
mov
enter
bswap
push
add
lahf
loop
ins
mov
fwait
pop
lock
aad
inc
fnsave
loope
les
pusha
rcr
(bad)
rol
mov
fidivr
mov
ret
push
mov
out
fs
cmp
or
inc
mov
mov
dec
icebp
into
out
cwde
(bad)
aam
ds
add
adc
cli
mov
push
mov
mov
paddd
imul
push
sub
push
and
sbb
aam
or
cmc
add
movs
fs
mov
stos
and
gs
push
daa
imul
fadd
lods
and
mov
dec
sub
movs
xlat
mov
pop
mov
add
adc
mov
sbb
int
fiadd
addr16
mov
mov
mov
mov
push
xor
pop
pop
xor
fadd
lods
ret
sub
fsub
or
or
adc
sub
pop
or
sub
push
inc
data16
daa
repnz
addr16
ret
(bad)
xor
pushf
push
inc
mov
mov
or
movs
mov
sub
dec
pop
dec
mov
xchg
cmp
mov
dec
mov
in
cmc
xchg
into
mov
sub
mov
mov
adc
pop
sbb
cmp
xchg
xchg
popa
mov
cld
div
mov
xor
xor
popa
cld
test
pop
cli
sbb
and
pop
cmp
and
cmp
sub
sar
dec
imul
push
push
mov
mov
cmps
outs
pop
jnp
add
icebp
les
pop
or
imul
call
loope
imul
test
arpl
xchg
aas
les
mov
sbb
ds
mov
xchg
lahf
or
xchg
jmp
xchg
sar
xor
xchg
icebp
ins
sub
mov
shr
not
xchg
div
das
sbb
xchg
into
out
ficom
ins
arpl
lahf
ins
js
ret
pop
outs
movs
scas
jmp
mov
sbb
test
jmp
push
sub
push
mov
push
shl
das
jns
push
ret
cmp
pop
sub
sub
add
add
dec
fistp
arpl
cdq
xchg
aaa
fidivr
ds
repnz
xor
mov
or
xchg
pusha
push
imul
sbb
je
pop
cdq
bound
movs
daa
ins
pop
hlt
hlt
mov
mov
repnz
dec
jge
rol
jno
fsubr
cli
gs
add
out
popf
push
pop
mov
sahf
mov
jecxz
and
ficomp
fwait
scas
ret
ds
ja
fcmovne
sbb
outs
cmp
repz
outs
outs
cdq
mov
pop
stos
lahf
cmp
jecxz
int
mov
push
inc
int3
das
mov
xchg
mov
jecxz
cli
in
jno
mov
dec
arpl
data16
fldcw
gs
repnz
and
imul
in
rcl
repnz
xor
fstp
fdivr
arpl
mov
ins
mov
sbb
dec
mov
lods
test
jecxz
mov
loope
sub
fstp
mov
out
movs
jmp
call
or
mov
or
ins
inc
mov
sti
mov
jmp
pop
int
inc
arpl
or
mov
in
loopne
sbb
jp
in
retf
jns
inc
mov
in
inc
dec
or
dec
and
in
mov
adc
cmp
out
jle
pop
(bad)
fnstsw
sti
cmps
xchg
inc
out
mov
js
frstor
dec
xlat
cs
fdiv
int
cdq
(bad)
push
inc
xchg
pop
xchg
in
outs
xor
test
xchg
(bad)
sbb
test
mov
test
add
movs
xor
mul
in
pop
push
enter
outs
ins
add
jne
leave
in
xor
(bad)
pop
mov
inc
jne
jae
jle
js
inc
mov
push
pop
out
bound
pop
ss
sub
push
bound
sub
retf
mov
or
push
push
shr
mov
jne
xchg
(bad)
lea
jle
outs
out
(bad)
in
sbb
mov
mul
ins
mov
(bad)
cmp
cmp
popf
movs
dec
lods
jmp
in
mov
mov
sub
movs
jl
push
aaa
adc
or
push
retf
inc
repnz
sub
sub
out
mov
mov
cs
out
mov
enter
inc
repz
sub
fmul
xor
adc
cdq
call
int
fwait
sub
pop
or
pop
xor
mov
dec
bndstx
test
cmp
das
mov
scas
faddp
sbb
xlat
cmps
movs
jns
pop
xor
sub
push
and
add
out
pop
nop
mov
(bad)
std
scas
pop
popa
pop
cld
(bad)
fwait
arpl
fistp
push
mov
add
sub
stos
push
in
lods
popa
test
or
sub
xchg
pop
mov
pop
sbb
test
inc
cmps
jmp
and
jp
xor
popf
cmp
mov
push
cld
repnz
adc
mov
js
push
imul
xchg
add
addr16
lahf
inc
push
std
mov
mov
jb
(bad)
stc
inc
loopne
(bad)
(bad)
test
pop
mov
clc
mov
jae
sub
enter
inc
(bad)
stos
add
ret
sti
push
mov
aas
dec
dec
fs
stc
jecxz
sub
test
or
scas
outs
jbe
add
cli
je
ins
stc
cdq
retf
mov
call
mov
ins
xchg
jnp
idiv
mov
push
inc
iret
pop
dec
shl
iret
xchg
pop
aad
dec
out
push
and
iret
jp
and
shl
jnp
cmp
sbb
sbb
pusha
add
sub
sbb
clc
retf
popa
in
stos
daa
movs
add
call
(bad)
mov
adc
lods
adc
ja
fcom
daa
clc
mov
push
mov
cdq
enter
fcmovne
sbb
lods
xchg
mov
jne
lods
cmp
jp
cmc
(bad)
xchg
inc
aam
dec
arpl
cdq
and
sbb
movs
js
cli
add
mov
add
cmp
jmp
sub
jmp
or
sub
push
adc
inc
pop
mov
scas
imul
mov
pushf
xlat
imul
stc
scas
cmp
inc
stos
cmp
int3
popf
into
sub
xlat
scas
js
dec
leave
pop
xchg
xor
xor
lods
lea
xchg
pop
int3
aam
lods
pop
out
retf
rcl
fisub
xor
inc
push
sbb
sbb
int3
test
arpl
stos
sbb
out
sbb
enter
and
mov
mov
bound
sub
cld
push
add
and
pop
mov
into
mov
inc
cwde
scas
inc
shl
popa
adc
sbb
xchg
stos
and
test
add
mov
adc
cld
push
cmp
and
adc
shl
push
cdq
and
pop
lods
imul
ret
in
(bad)
in
jle
or
cld
push
mov
cmc
ss
jb
mov
xchg
push
jb
jns
iret
lds
jmp
jg
into
(bad)
inc
outs
sti
jmp
(bad)
cmp
icebp
pop
mov
fwait
cmp
out
xchg
add
xor
cmp
imul
sahf
cld
xchg
pop
div
cmp
sbb
mov
cmp
fucomip
add
call
mov
out
adc
jge
pop
adc
push
mov
mov
xchg
xor
pop
stos
and
fsubrp
xchg
inc
or
fiadd
pop
sub
mov
pop
sub
ds
sub
push
inc
ds
add
ins
jae
lea
je
jl
aad
jae
ret
inc
cli
push
pushf
ins
jae
js
idiv
jge
fbld
xchg
stc
outs
xor
call
add
js
addr16
(bad)
popf
mov
jecxz
pop
xchg
sub
ds
and
xchg
or
(bad)
fdiv
fwait
neg
shl
dec
jg
fadd
mov
out
movs
mov
xchg
dec
mov
ss
xor
push
xchg
(bad)
sub
and
push
inc
sub
dec
inc
jecxz
in
jne
clc
and
(bad)
mov
mov
ds
or
xor
ficomp
push
mov
in
iret
ror
or
sbb
cld
xchg
mov
jmp
dec
fnsave
jbe
pop
mov
mov
mov
iret
adc
sub
imul
imul
xchg
clc
(bad)
adc
jecxz
mov
dec
mov
es
cmps
ficom
shl
sbb
cmp
adc
retf
sbb
ins
out
out
loope
sbb
out
idiv
retf
add
in
repz
jg
addr16
out
mov
fdiv
mov
sahf
cmps
out
out
and
pop
xchg
push
in
gs
add
fsubr
cmp
pop
int
ds
int3
adc
cmps
in
stos
push
push
push
test
cld
jae
pop
dec
sub
shr
popf
jle
lods
xor
aam
je
aas
in
inc
add
inc
sbb
stc
pop
cmp
outs
stc
jl
mov
fs
jns
and
icebp
pop
es
loopne
mov
cmc
sbb
pop
mov
ins
mov
mov
int
jo
shl
cmp
lahf
push
nop
(bad)
not
xchg
aas
adc
mov
cmp
jno
retf
pop
loop
shl
retf
fisttp
in
add
out
jecxz
rcl
sti
xor
mov
(bad)
cmp
test
inc
out
adc
les
in
(bad)
in
(bad)
fwait
mov
pop
repz
test
mov
repz
int
or
jnp
das
xor
sbb
stos
mov
mov
cmp
pop
inc
xchg
outs
sbb
push
sub
and
bswap
ss
or
jae
(bad)
cmp
(bad)
and
icebp
inc
mov
xchg
or
iret
cmp
out
jbe
inc
xor
(bad)
mov
ja
mov
iret
mov
adc
mov
mov
cwde
ror
fstp
mov
jae
in
mov
cdq
lods
sar
movs
xchg
out
pop
fisubr
ret
mov
cs
es
stc
imul
push
fs
sbb
and
cmc
xor
jbe
or
outs
fmul
jno
aaa
rep
push
cmp
sti
ds
mul
int
adc
retf
es
not
pop
lea
and
sbb
lahf
xor
outs
fstp
mov
push
pop
int3
sub
mov
out
(bad)
xor
push
xchg
outs
adc
xchg
in
jnp
add
xchg
pop
push
inc
enter
movs
mov
(bad)
in
mov
cmps
inc
aas
or
pop
call
enter
cmp
push
sti
cmps
mul
ss
cld
in
clc
or
cmp
outs
mov
fstp
add
fucomip
sbb
inc
neg
stc
pmaxub
pop
out
das
cmps
aam
mov
pusha
mov
mov
jp
xchg
(bad)
pop
aas
or
and
jae
js
ss
dec
mov
jbe
ds
lock
lods
pop
inc
mov
xchg
pop
fistp
xor
xor
jnp
fnstsw
cmp
add
adc
bound
add
(bad)
sub
inc
retf
int
mov
pop
aas
retf
cmps
inc
call
xlat
jns
mov
jmp
xchg
and
sub
cli
ror
dec
mov
sub
mov
out
stc
dec
mov
retf
push
cwde
pop
fild
sub
jo
inc
stos
jg
mov
inc
or
sbb
xor
pop
pop
outs
(bad)
lods
jle
jecxz
call
xchg
cli
push
les
mov
popa
ss
xor
pop
dec
jae
(bad)
(bad)
mov
ret
dec
or
data16
call
or
mov
fs
or
test
push
inc
push
pop
xlat
and
ja
push
cmp
push
add
shl
mov
(bad)
jo
xchg
mov
dec
lock
cmp
int
cmps
iret
adc
(bad)
(bad)
and
mov
loop
sub
push
fisttp
jb
ss
push
push
mov
sbb
push
sbb
mov
push
xor
xchg
dec
stos
jae
test
sbb
test
and
int3
push
or
sub
mov
pop
cmp
scas
add
and
sub
or
mov
push
cmps
and
sbb
bound
mov
aam
adc
and
fs
adc
daa
dec
lea
adc
pop
aam
adc
xchg
or
xchg
add
mov
cmps
inc
push
(bad)
(bad)
and
push
and
cwde
push
shr
aas
sub
xchg
scas
xchg
shl
sub
popf
mov
cld
fdivrp
jmp
aaa
fcmove
aam
enter
call
fisub
scas
sub
cmp
xor
xlat
cmc
dec
psubq
(bad)
es
jg
pop
cs
jg
aas
pop
test
xchg
mov
adc
scas
dec
add
dec
pusha
jge
cmps
cld
aaa
mov
mov
out
jno
jns
cmp
cmp
out
icebp
xchg
jmp
inc
mov
dec
mov
aad
in
fisttp
jge
inc
cmp
jmp
jmp
sub
jmp
cwde
out
data16
inc
xchg
aas
shr
bound
mov
stos
sbb
popf
cwde
jmp
push
ret
out
int3
movs
push
mov
je
pusha
repz
sub
lods
push
rcr
leave
cwde
and
repnz
jb
ret
out
fdiv
mov
pop
mov
sbb
mov
pop
jmp
fwait
xor
push
aas
sub
jo
sub
sar
fnstenv
fs
mov
hlt
ins
inc
imul
push
add
pop
in
ror
lea
xchg
fbld
cmps
jge
leave
es
lods
fsub
jl
lods
pop
pop
dec
outs
cli
mov
sub
lods
psubd
xor
ins
nop
inc
fsub
push
mov
movq
call
mov
lock
(bad)
fisttp
data16
ss
(bad)
fadd
cdq
inc
std
loop
inc
jecxz
ins
sbb
out
mov
add
sub
(bad)
ja
push
mov
mov
cs
in
jecxz
dec
leave
and
mov
pop
pop
mov
retf
fdiv
iret
cmp
in
or
mov
inc
push
lock
jmp
ds
les
(bad)
iret
imul
ror
fst
clc
outs
push
les
fwait
push
in
stc
cmp
sbb
add
leave
std
in
in
mov
jge
repnz
xor
jmp
sub
mov
xchg
(bad)
lods
jo
aaa
dec
cli
movs
scas
dec
mov
inc
in
pop
inc
cmp
mov
outs
jno
jmp
add
out
aas
lahf
xchg
ins
inc
(bad)
push
cmps
movs
cld
push
push
mov
leave
fist
cmp
test
jl
mov
repnz
dec
jnp
fild
out
mov
imul
cdq
push
sti
test
adc
and
outs
jns
imul
std
cmc
test
fld
repnz
mov
gs
rcr
mov
jl
cmc
in
sahf
js
movs
mov
and
add
push
mov
add
enter
dec
dec
mov
mov
lods
cmps
mov
cmc
jb
fcmovne
jl
jle
mov
sub
ja
push
or
inc
mov
add
cmp
movs
push
mov
rcl
movs
push
sti
rcl
dec
xchg
adc
sub
cmps
test
imul
ret
or
repz
and
and
push
fcomp
cmc
shl
sub
es
ror
cs
jo
test
xchg
fisub
aaa
in
xchg
pop
aam
sbb
jne
pop
cmps
jmp
aam
mov
test
xchg
jmp
inc
jp
xchg
jbe
xchg
stos
xor
cmp
mul
addr16
cwde
clc
xchg
push
aam
imul
sbb
or
stos
xchg
pop
(bad)
xchg
xor
out
addr16
mov
shl
pusha
lock
idiv
sbb
aam
fsub
inc
ror
test
sub
add
dec
jp
jmp
das
aad
out
mov
sub
cmp
mov
arpl
int3
popa
mov
dec
std
call
mul
sub
std
out
cli
movs
jl
cmp
mov
dec
stc
(bad)
not
cld
dec
xor
jns
mov
icebp
add
dec
sahf
les
ins
lds
lods
test
sbb
cli
pop
cmc
cli
sub
add
xchg
inc
test
sub
cld
jnp
fst
lea
xor
js
inc
add
push
xor
into
lahf
adc
jg
pop
ret
into
ins
aaa
sti
mov
cmps
mov
(bad)
cmps
out
dec
sti
ds
jae
jecxz
scas
and
leave
mov
mov
retf
test
add
iret
popa
jge
aam
lods
icebp
sbb
jbe
cmps
inc
xor
mov
mov
movs
mov
js
ret
int
lahf
xor
arpl
inc
sbb
sub
xlat
pusha
push
icebp
xchg
mov
xor
pushf
mov
loop
mov
push
mov
jno
dec
cmp
sahf
ss
movs
jo
mov
retf
lock
push
fiadd
rcr
pop
stc
xchg
cmps
inc
and
or
ja
scas
jp
repnz
mov
push
outs
(bad)
lods
jle
in
fld
inc
bound
push
adc
pop
arpl
cmp
lods
dec
xor
fld1
movs
pop
sub
popf
and
call
adc
sbb
or
pop
xchg
shl
xchg
imul
popa
add
sub
push
pop
dec
rcl
adc
int3
jae
popf
(bad)
and
sbb
cmp
xlat
stos
(bad)
sbb
jns
inc
outs
adc
imul
mov
cmp
movs
push
sub
cmps
sub
imul
adc
push
mov
dec
imul
add
mov
or
(bad)
movs
addr16
or
jnp
sbb
jb
test
inc
or
xchg
stos
dec
push
push
xor
mov
push
nop
or
sub
fs
pop
adc
outs
cmp
pushf
push
call
pushf
jmp
inc
cmp
adc
and
sub
inc
daa
dec
mov
cld
stos
repz
ror
sahf
out
xor
sub
lods
jnp
jp
xor
imul
shr
sub
dec
dec
fdiv
into
pop
mov
mov
std
pop
pop
mov
push
repnz
cmps
add
clc
mov
xor
push
inc
sbb
retf
sbb
xor
mov
add
mov
scas
nop
sahf
cmp
pop
inc
sbb
jmp
aad
lods
push
xchg
sub
aaa
mov
and
idiv
xchg
mov
mov
mov
mov
push
mov
cmp
imul
pop
sar
js
fst
sub
imul
stos
mov
lock
mov
xchg
jg
mov
fsubr
mov
jns
dec
xchg
jbe
in
mov
adc
hlt
outs
or
push
outs
icebp
dec
xchg
pop
dec
es
imul
pop
(bad)
into
xor
cwde
(bad)
inc
ret
mov
js
ret
fimul
push
outs
aaa
cs
jbe
aam
xchg
pop
pop
xchg
cmp
add
movs
pop
sbb
mov
inc
fdiv
std
cmc
(bad)
iret
jne
sbb
lods
(bad)
fsubp
pop
jnp
dec
jl
xchg
mov
stos
lea
lods
repnz
inc
push
lds
push
mov
stos
jno
fisub
jo
(bad)
repnz
mov
cmps
mov
imul
inc
push
sbb
mov
mov
push
pop
(bad)
ins
into
cmps
jmp
xchg
adc
shl
popf
shr
sub
jg
movs
fdivr
aad
xor
rol
mov
mov
inc
cmp
mov
jl
or
(bad)
out
pop
sahf
call
mov
icebp
shl
sub
jns
test
dec
mov
rdmsr
loop
inc
aas
mov
cwde
sub
mov
cdq
pop
fwait
aas
pushf
mov
call
jecxz
jae
jp
mov
(bad)
outs
jbe
pop
adc
adc
sbb
push
push
test
jge
out
dec
push
js
(bad)
fyl2x
push
stos
jg
fwait
test
push
lahf
fmul
push
aas
sbb
adc
std
cli
std
cwde
je
pop
cmp
xor
retf
fistp
dec
sar
sub
adc
xchg
mov
add
cmp
mov
sbb
push
cmp
pop
(bad)
fcmove
jge
sub
xor
aas
fmulp
ja
lds
mov
ins
ins
sar
test
sbb
push
aad
push
aas
ja
(bad)
arpl
jp
imul
in
leave
pop
jp
mov
ds
mov
repz
dec
inc
push
mov
or
int3
hlt
loope
fidivr
cmp
int3
aas
ds
sub
xchg
ret
jb
lea
add
jno
pushf
out
cmp
pop
mov
inc
pop
pop
(bad)
shr
and
jge
retf
inc
js
shl
inc
push
out
int
ss
int
dec
mov
jl
(bad)
mov
mov
lahf
gs
scas
xor
(bad)
sti
jnp
dec
push
cmp
mov
in
out
scas
int
lahf
dec
and
test
retf
push
gs
mov
aas
test
(bad)
imul
ss
sbb
aaa
xchg
mov
add
(bad)
pop
pusha
punpckhdq
inc
(bad)
in
inc
cld
mov
jg
pop
jmp
mov
push
pop
imul
or
cmp
stc
xchg
mov
cmp
add
scas
mov
adc
jg
ret
xlat
addr16
(bad)
fnstenv
sbb
xchg
(bad)
xchg
jmp
inc
into
inc
adc
push
loopne
mov
xchg
dec
mov
jno
ins
shl
push
sbb
in
popa
sub
push
loope
inc
push
xor
cmc
jo
out
adc
fstp
jge
adc
jo
test
into
push
ss
enter
dec
jae
lds
sbb
push
bound
mov
daa
mov
xor
xor
mov
mov
ss
repz
xchg
aam
jmp
jmp
call
mov
cli
leave
mov
xchg
(bad)
adc
pop
loopne
add
sbb
mov
popf
sbb
mov
jmp
xor
mov
add
leave
push
nop
pop
adc
pop
push
adc
dec
pusha
sub
outs
fs
adc
jmp
mov
dec
adc
jno
loop
jmp
and
cli
xlat
retf
ror
pop
loope
push
jp
dec
mov
popa
or
cmp
xor
stos
add
push
mov
(bad)
sar
sbb
inc
das
mov
mov
jecxz
xor
hlt
scas
sub
rol
or
sub
sbb
pusha
pop
cmp
out
push
das
jb
cmp
outs
xchg
retf
out
cmp
push
fdiv
repz
std
cmp
scas
jl
mov
jge
cli
push
xchg
iret
imul
mov
gs
ucomiss
lods
scas
ins
arpl
cmp
adc
popf
mov
sub
loop
stc
(bad)
xor
int
cmps
xchg
mov
je
xlat
ss
scas
aam
cmp
mov
fisubr
aam
or
pop
xor
jp
shl
xor
int3
xchg
push
pop
inc
sbb
(bad)
call
pop
push
and
pushf
xlat
pop
into
or
or
jmp
inc
dec
push
daa
adc
push
or
dec
arpl
add
ret
mov
test
test
pop
movs
(bad)
xor
xor
test
sub
cmps
inc
pushw
or
stos
aad
sahf
loopne
imul
lods
int3
dec
sub
lds
xor
or
or
inc
sbb
inc
push
movs
xor
movs
push
mov
dec
pop
xchg
(bad)
out
test
pop
mov
data16
adc
and
and
lods
enter
fstp
cmps
jle
jl
lock
mov
jae
call
xlat
jmp
(bad)
jno
jp
jle
(bad)
shl
mov
outs
pop
mov
hlt
out
call
dec
mov
pop
(bad)
dec
sub
fsub
test
dec
xchg
je
sbb
outs
mov
xor
and
out
sti
in
rcr
ds
cmps
sahf
fxtract
cmp
sub
xchg
jg
movs
repz
fsub
and
hlt
call
cmps
(bad)
sub
jb
jmp
dec
in
les
sub
jle
cmp
cld
cmp
neg
ficomp
xchg
and
fwait
std
push
sbb
stos
fs
pop
shl
mov
mov
out
(bad)
in
lds
enter
aaa
mov
mov
add
je
mov
int
lds
xchg
mov
xor
aaa
shl
pop
xchg
dec
jae
retf
mov
sub
push
jg
imul
loop
mov
out
xlat
inc
mov
call
dec
rcr
jp
pushf
cli
(bad)
test
test
fcmovu
mov
fsub
xor
test
jp
popf
xchg
jmp
mov
ja
std
lods
scas
jb
(bad)
add
je
cmp
out
xor
std
aad
scas
mov
fstp
xchg
and
push
leave
xchg
and
nop
mov
or
pop
jns
or
out
fsub
push
fwait
std
fist
pop
or
hlt
push
fwait
loop
jae
inc
stos
fldenv
jmp
(bad)
cs
fmul
sbb
xchg
js
(bad)
repnz
js
mov
pop
pop
xchg
das
fldcw
mov
imul
pop
call
lahf
push
outs
pop
idiv
cmp
fimul
mov
and
jae
repz
dec
jmp
fs
add
jno
add
scas
enter
mov
sub
call
stos
lea
xchg
mov
mov
and
int3
mov
leave
test
pop
lods
jle
mov
mov
pop
dec
xor
ret
adc
sub
and
(bad)
push
xchg
sub
(bad)
mov
or
ss
retf
jnp
rcr
cmps
daa
icebp
scas
or
iret
cwde
(bad)
sub
inc
outs
aas
xchg
int
fldcw
aas
mov
aas
test
sbb
outs
pop
cmc
push
xor
mov
sbb
into
aas
mov
inc
jnp
test
jge
in
mov
jecxz
mov
inc
stc
imul
mov
lods
xchg
jg
shr
jae
aas
test
outs
not
les
ret
shr
or
js
pop
cli
jns
mul
outs
(bad)
mov
sbb
test
enter
jne
sbb
rcr
test
ret
(bad)
iret
std
xchg
xchg
(bad)
adc
popa
jge
fcmovb
lahf
call
shl
mov
adc
cli
sub
mov
cld
lds
cdq
xor
mov
rol
hlt
push
push
icebp
cmp
inc
loope
or
pop
into
push
inc
gs
pop
daa
push
pushf
mov
dec
idiv
scas
adc
nop
cli
ss
imul
mov
loop
test
scas
fcomp
mov
les
inc
sub
aad
jg
aaa
sti
fnstsw
adc
mov
int
dec
mov
outs
ror
fcomp
sub
aam
dec
add
jno
popa
mov
mov
or
jnp
mov
(bad)
call
mov
pop
adc
cmc
pop
xchg
test
cld
fmul
cmp
jno
outs
(bad)
xchg
mov
cmp
pop
in
test
ret
jno
xor
xor
std
out
popf
mov
push
std
movs
sbb
xlat
mov
aas
loop
mov
push
enter
in
xchg
mov
mov
sbb
mov
mov
mov
sbb
add
mov
dec
enter
jns
stos
add
jmp
mov
(bad)
int3
jb
lock
pop
xchg
in
retf
psrld
fwait
jne
lahf
cmc
(bad)
dec
mov
out
jns
pop
ds
or
dec
pop
jbe
fsub
lock
dec
out
mov
xor
mov
cld
dec
jge
xchg
inc
cli
jbe
add
cmp
aas
mov
xor
ds
out
adc
test
rol
lock
or
inc
add
or
sub
aam
and
sbb
cld
popf
clc
stos
loopne
stos
js
pop
pop
(bad)
hlt
mov
add
jg
mov
in
in
iret
mov
jg
aas
sbb
out
push
dec
loopne
push
lea
(bad)
sahf
sub
mov
outs
or
inc
(bad)
imul
jo
mov
sub
out
push
mov
push
int
call
cld
stos
clc
push
mov
mov
xchg
cs
sbb
pop
popa
shr
jne
jb
push
test
xchg
mov
(bad)
dec
mov
sub
ds
inc
sbb
sub
addr16
fwait
movs
pushw
shr
sbb
xchg
les
push
and
inc
mov
adc
dec
loope
sub
jbe
in
mov
pop
fcom
cwde
(bad)
daa
es
lds
or
adc
sub
sbb
daa
xor
mov
adc
aad
push
xor
inc
inc
add
and
lods
bound
mov
imul
xchg
bound
(bad)
jns
mov
into
icebp
or
inc
sub
das
cs
add
or
push
inc
int3
push
and
add
movs
popa
dec
add
fs
push
add
xor
inc
out
mov
and
mov
add
shl
aam
jne
inc
call
pop
xchg
dec
mov
jge
add
sar
mov
inc
mov
cli
sub
pop
pop
in
(bad)
loope
scas
xchg
shl
imul
(bad)
cmc
scas
xor
sbb
stc
cli
sti
std
jp
inc
sbb
pop
adc
mov
xchg
std
inc
dec
(bad)
cwde
movs
push
mov
ficom
inc
pop
lea
std
out
loope
loope
sbb
xchg
aam
bound
(bad)
scas
cmc
pop
sub
clc
xor
xor
mov
inc
daa
std
popf
fld
push
mov
jo
cmc
mov
imul
dec
inc
adc
mov
outs
aaa
pop
pop
mov
les
jge
aas
stos
retf
cdq
cmps
mov
clc
and
clc
arpl
jno
loop
div
out
movs
inc
(bad)
(bad)
jo
in
xchg
(bad)
imul
aam
imul
out
(bad)
jmp
jbe
lods
mov
ror
sub
shl
xchg
(bad)
pop
sub
loopne
(bad)
push
out
inc
(bad)
cmc
test
jns
cmps
dec
popf
ja
jge
sub
and
mov
mov
mov
jg
ds
cmc
lahf
por
jns
or
fwait
ins
inc
or
dec
stos
cmp
cmp
stos
div
xchg
dec
in
jmp
out
jns
jl
lea
ss
iret
ret
and
mov
imul
jle
iret
retf
ja
in
(bad)
adc
in
mov
sub
jnp
fwait
(bad)
mov
sahf
adc
fsub
gs
mov
in
pusha
inc
rcl
sti
pop
stc
icebp
call
mov
xor
loope
xchg
and
les
stc
test
gs
xor
sub
iret
push
adc
and
mov
xor
aam
jne
inc
fldenv
inc
adc
mov
sub
or
aas
test
mov
jmp
mov
mov
std
cmps
out
xchg
scas
test
mov
and
inc
loope
js
cmp
iret
dec
push
sbb
ss
mov
pop
jno
adc
add
mov
icebp
sbb
inc
aad
scas
cmp
adc
pop
fwait
imul
mov
jg
inc
cmp
fwait
(bad)
mov
mov
sti
lahf
mov
fadd
addr16
repnz
loopne
sbb
hlt
dec
mov
das
adc
sti
and
sub
jle
ffree
jg
jae
data16
or
xchg
lock
or
out
ss
jle
lods
and
loope
add
jmp
mov
sub
jl
loop
or
pop
inc
jae
lods
retf
outs
adc
or
mov
mov
mov
xor
mov
jno
inc
sbb
lock
(bad)
test
xchg
or
movs
in
mov
outs
bound
lods
scas
pop
hlt
mov
sub
mov
dec
sbb
jo
fdivr
jg
xchg
pop
arpl
cmp
retf
js
adc
add
test
test
pop
sti
inc
jbe
push
icebp
xor
sbb
cdq
(bad)
retf
sbb
push
(bad)
mov
jns
cli
mov
dec
inc
sub
(bad)
cmp
cld
cmp
daa
mov
cld
inc
cmps
arpl
pop
pop
les
xchg
fs
bswap
push
ret
cmp
cmc
xchg
mov
push
pop
lock
inc
mov
adc
push
(bad)
addr16
sahf
pop
leave
mov
xchg
aam
scas
pop
out
fnstsw
jge
push
mov
(bad)
sub
loopne
mov
in
out
mov
fistp
xor
lea
or
adc
outs
loopne
mov
ss
lds
scas
arpl
sub
lock
sar
cmp
inc
imul
scas
aad
lds
repz
sbb
in
retf
loop
xchg
jae
xchg
dec
(bad)
and
es
jae
mov
add
inc
icebp
or
adc
mov
repnz
leave
lock
in
out
loope
sub
xchg
inc
xchg
out
pop
enter
nop
mov
add
inc
arpl
mov
mov
add
mov
inc
pop
adc
cmp
add
add
add
lds
jl
loop
in
cmp
mov
mov
dec
jecxz
(bad)
popf
dec
mov
xlat
rcr
out
mov
inc
cmp
js
ss
jno
cmp
push
clc
fndisi(8087
pop
mov
mov
cld
inc
not
cmc
adc
jl
outs
jnp
in
rol
std
loope
adc
fs
and
jecxz
adc
aam
dec
cs
inc
(bad)
mov
je
mov
fsubrp
jae
stos
sbb
mov
(bad)
mov
pop
shl
loope
cmp
iret
imul
mov
pop
jmp
test
add
int
mov
adc
xor
dec
bound
call
adc
sub
xchg
sub
bound
mov
cmp
js
stos
pushf
mov
repnz
adc
pop
pushf
movs
pop
fsub
or
adc
fisub
push
adc
imul
or
dec
or
dec
xchg
hlt
mov
and
cmp
xchg
mov
and
dec
inc
push
mov
mov
stos
imul
push
lea
fdivr
mov
add
adc
cdq
adc
shl
push
or
out
adc
adc
imul
stos
inc
jge
inc
aam
push
sbb
push
mov
jge
(bad)
inc
xchg
push
or
cmps
mov
cmp
loop
and
hlt
imul
mov
mov
jle
push
mov
add
wrmsr
jg
dec
imul
sub
ret
stc
mov
fild
jne
ficom
sbb
mov
lahf
cmp
popa
cld
(bad)
scas
cmps
sar
mov
mov
(bad)
pop
jg
pusha
inc
adc
pop
sub
mov
movs
mov
push
call
(bad)
lock
gs
popa
idiv
sub
inc
jmp
ds
aas
fidiv
mov
fstp
out
cwde
cli
push
fidivr
leave
pop
das
out
jns
stos
xchg
jae
mov
shl
jg
imul
ins
xlat
fistp
push
ss
sub
imul
daa
xchg
pusha
clc
addr16
fdivr
test
xchg
jge
dec
push
fwait
out
xchg
pop
dec
in
fiadd
mov
repz
(bad)
mov
push
xchg
xor
aaa
xchg
dec
push
scas
das
es
shl
(bad)
mul
ins
rcl
xor
mov
cvtpi2ps
call
int3
mov
mov
aaa
nop
cmp
bound
push
(bad)
mov
sahf
lods
hlt
jns
inc
inc
jmp
or
sub
adc
(bad)
sbb
bnd
xor
jl
mov
stos
call
sub
in
btr
mov
mov
cmp
les
dec
repnz
outs
and
pop
mov
cdq
xor
fld
(bad)
iret
dec
mov
dec
mov
ret
fldenv
ds
hlt
in
inc
inc
dec
pusha
pop
mov
daa
fisubr
ror
jmp
sub
xchg
xor
or
sub
mov
ss
adc
pop
addr16
(bad)
xor
fidivr
out
das
sti
sub
out
jp
fdiv
push
mov
jne
shl
and
mov
pop
repz
adc
aaa
neg
and
dec
(bad)
leave
inc
iret
sub
jns
div
pop
(bad)
icebp
pop
sbb
xchg
jns
sti
rol
pop
push
jge
fs
fstp
lock
jg
jns
retf
sbb
push
int3
xchg
push
int
add
push
add
test
lock
dec
xchg
jns
mov
jecxz
imul
xchg
daa
ins
call
sbb
xchg
adc
mov
mov
ficomp
call
pop
dec
jb
add
add
sbb
inc
pop
mov
int
iret
push
jb
mov
les
shr
repz
and
inc
push
in
rol
js
cli
(bad)
loop
frstor
or
mov
out
mov
outs
ror
std
jl
add
pop
xchg
aas
test
in
inc
(bad)
push
(bad)
cmc
jnp
ss
jge
nop
das
lock
ja
and
in
jno
cdq
fdivr
pop
adc
jno
jmp
in
sbb
in
jmp
inc
(bad)
pop
cdq
mov
lea
jle
mov
push
mov
xchg
pop
jne
loop
inc
xchg
fcomp
push
cmc
sbb
retf
pop
aam
not
ficom
lea
or
addr16
dec
fiadd
out
sahf
imul
cmp
jae
fbld
data16
cs
dec
pop
movs
jns
fs
push
and
add
sbb
arpl
(bad)
pop
sbb
movs
sub
or
fidiv
jne
dec
(bad)
loope
out
push
mov
fnstsw
mov
jnp
mov
sahf
cdq
or
mov
repz
jo
ins
fiadd
repnz
and
pop
fisttp
(bad)
mov
jmp
xor
add
pop
inc
or
add
push
adc
push
and
adc
sub
imul
arpl
int3
imul
mov
push
iret
(bad)
jns
lods
mov
cmp
not
(bad)
xor
in
stos
pop
sbb
jmp
pusha
jge
ds
mov
mov
gs
aas
mov
scas
mov
ds
or
add
(bad)
pop
ins
jle
iret
stos
daa
inc
pop
(bad)
data16
and
dec
lahf
dec
mov
fwait
lahf
cs
inc
add
in
cld
or
std
mov
aad
ret
sbb
mov
add
cmps
push
jo
dec
push
repnz
fadd
sub
push
inc
sbb
adc
(bad)
pop
lods
dec
int
mov
inc
int
pop
push
xor
and
inc
adc
sub
imul
xchg
(bad)
sub
dec
xor
scas
call
addr16
cmp
test
push
dec
xchg
inc
bound
ret
push
and
push
add
lods
cmp
popaw
inc
(bad)
push
sub
and
pop
or
xchg
enter
scas
jae
lahf
retf
xor
push
push
mov
or
popa
xor
int3
enter
push
jmp
xor
add
push
xor
dec
xchg
mov
movs
add
xor
mov
push
add
inc
rcr
mov
pop
inc
ret
test
mov
cmp
dec
inc
test
pop
inc
push
lds
rcr
jmp
fbld
lds
call
jnp
retf
jns
adc
sub
stc
mov
ins
and
jp
popf
stos
hlt
arpl
mov
shr
sub
sub
adc
daa
(bad)
not
(bad)
loope
dec
imul
scas
xchg
cmp
dec
(bad)
pop
shl
mov
push
sub
sub
inc
dec
movs
or
adc
outs
loope
jmp
dec
push
clc
mov
fucomip
jbe
adc
xchg
fcomp
mov
(bad)
lock
sub
or
fdiv
pop
loope
pop
movs
push
and
in
sar
lods
pop
ficom
cmps
iret
and
push
jnp
pop
out
imul
inc
fcomp
mov
cld
fsubr
fnsave
stos
scas
out
out
daa
inc
out
repz
in
outs
jle
add
fld
iret
dec
fwait
mov
cli
and
pop
loop
cmp
mov
gs
add
cmp
stc
popf
enter
mov
jg
cmp
sub
xchg
inc
jae
call
inc
repz
popa
inc
das
jae
jg
dec
popf
fwait
pop
add
(bad)
icebp
pop
push
arpl
aas
inc
jle
js
loope
stos
pop
fstp
jg
arpl
and
xor
xor
sub
popa
pop
jl
(bad)
(bad)
mov
or
mov
jns
xchg
cdq
add
lods
call
dec
aas
sub
fcom
popa
(bad)
fs
pop
pop
xchg
jnp
icebp
mov
in
mov
sub
jg
push
les
and
arpl
dec
std
mov
xchg
addr16
pop
dec
(bad)
jecxz
repnz
out
test
xchg
out
or
repnz
mov
cmp
out
inc
cld
inc
repnz
mov
adc
pop
jl
shr
test
xchg
in
inc
sbb
push
add
or
pushf
stc
ror
mov
out
push
inc
test
loope
cmp
pop
jmp
sti
mov
cmps
cdq
and
jmp
jne
cmp
out
loop
(bad)
mov
fsubr
mov
jbe
loope
mov
in
jne
das
mov
cmp
dec
push
pop
mov
retf
out
sbb
cmp
mov
mov
out
mov
sti
mov
lock
add
popa
iret
adc
fmulp
in
and
cmp
pop
gs
jmp
in
jl
out
xor
adc
(bad)
pop
mov
jne
lods
jmp
int
(bad)
cdq
jns
push
das
outs
movs
jp
xchg
cs
ds
aam
in
(bad)
xchg
(bad)
cmp
mov
loop
sti
sbb
fdiv
das
or
sub
clc
xchg
pop
mov
or
leave
pop
jb
inc
inc
mov
fistp
pop
aam
jbe
cmp
xor
jl
lods
inc
or
ss
dec
pop
in
pusha
repz
and
sub
inc
dec
xor
sbb
mov
jge
sahf
jb
lahf
into
fiadd
sub
dec
into
out
mov
movs
ret
inc
push
arpl
sti
les
dec
shl
jg
inc
iret
arpl
cli
push
xchg
dec
pop
jae
pop
(bad)
push
xor
mov
mov
dec
cld
push
jmp
push
lock
call
add
mov
shl
sbb
ja
pop
sub
lahf
lahf
int3
aad
inc
push
inc
sbb
adc
mov
outs
and
std
aad
xchg
mov
pop
sahf
cli
fistp
pop
clc
dec
jecxz
inc
adc
xchg
fistp
mov
jno
pop
dec
add
adc
push
push
into
vpaddusb
(bad)
push
mov
in
jge
mov
cmp
add
or
or
xor
add
add
dec
or
inc
scas
mov
lea
(bad)
outs
(bad)
(bad)
adc
aaa
pop
jmp
int
fnsave
scas
sbb
arpl
cld
jb
int3
dec
cdq
scas
pusha
cmp
mov
sbb
sti
enter
mov
shr
mov
(bad)
not
inc
test
pop
dec
jecxz
xor
cmc
dec
ret
push
aad
push
call
pop
dec
mov
dec
lea
sub
std
add
mov
mov
mov
mov
into
xchg
das
mov
sub
lods
pop
cwde
test
adc
sub
push
sub
xchg
les
xor
popa
push
adc
cdq
and
and
and
imul
pop
mov
adc
nop
and
adc
inc
nop
push
ret
adc
ss
xchg
dec
sub
inc
call
(bad)
bound
mov
imul
mov
ins
cmc
mov
jb
aad
and
push
es
and
lods
les
mov
sub
inc
push
add
lea
loop
or
xchg
aas
adc
cmp
sbb
push
mov
cwde
push
lods
xchg
xchg
inc
cwde
test
or
mov
pop
mov
mov
call
(bad)
(bad)
aas
jo
jnp
or
jbe
sar
mov
cmps
push
cli
pop
mov
push
pop
stos
shr
pushf
pop
loopne
xchg
pop
outs
xchg
jnp
fld
in
aam
in
std
out
mov
mov
es
push
fstp
add
nop
jg
fmul
lahf
(bad)
jl
movs
push
jb
es
or
aas
cmps
sub
stc
in
sbb
cmp
xor
adc
imul
(bad)
adc
sahf
lea
mov
inc
mov
push
jne
sahf
je
jae
(bad)
out
jmp
fsubr
fsub
shl
lock
adc
movs
bound
xchg
pop
mov
sub
sub
mov
push
xlat
in
into
fs
jno
repnz
add
inc
(bad)
xchg
pop
cld
mov
inc
cmp
cmp
fmul
cmps
retf
mov
pushf
pushf
mov
jnp
mov
mov
xchg
sub
push
mov
fdivr
jnp
pop
xor
(bad)
pop
aam
dec
jmp
jl
pop
in
and
dec
sti
jnp
(bad)
and
loop
scas
push
adc
fdivr
push
cli
enter
add
mov
sahf
pop
ins
in
and
push
mov
arpl
sbb
add
sbb
mov
icebp
mov
retf
adc
or
cmc
dec
std
dec
xor
jg
sub
aas
(bad)
push
mov
lods
movs
xor
inc
punpckhwd
(bad)
stos
inc
call
lea
cmps
ficomp
sub
push
sub
adc
fs
clc
movs
sahf
out
inc
sti
(bad)
daa
stos
sub
or
js
xchg
(bad)
sbb
ja
cmp
call
push
push
add
(bad)
cmp
pop
mov
mov
pop
jo
das
sbb
sbb
clc
xlat
pop
mov
mov
cmp
ins
sub
ret
test
fnstcw
ficomp
mov
sub
and
out
clc
mov
je
xchg
test
loop
mov
jl
inc
push
push
nop
(bad)
in
lds
lods
rcr
mov
or
inc
nop
cmp
cdq
bound
push
lea
mov
test
imul
sbb
jne
jecxz
clc
xchg
int
mov
in
mov
mov
push
scas
inc
fcmove
ret
xchg
sbb
popa
mov
push
cmp
jae
aas
icebp
aad
outs
out
in
and
inc
jb
fcmovnu
out
inc
inc
xor
in
fldenv
jg
aad
ret
in
loopne
imul
(bad)
push
mov
xor
add
sti
xor
gs
sti
ss
add
pop
cdq
movs
mov
fsubr
jo
test
outs
mov
popf
jecxz
sub
je
aaa
dec
mov
sahf
imul
cld
icebp
mov
add
xchg
sar
jno
xor
sti
(bad)
popf
mov
imul
repnz
dec
sub
outs
retf
setbe
push
fs
out
inc
jno
es
cdq
mov
repz
out
mov
sar
gs
nop
int
imul
fist
jae
and
(bad)
in
mov
lods
mov
fs
ins
xchg
in
repz
movs
or
sub
sti
cmps
push
cwde
cmp
loopne
ficom
lods
in
aas
adc
xchg
push
sub
shl
pop
outs
call
stos
adc
cmp
mov
lods
fisubr
imul
fcomp
mov
mov
js
xlat
mov
add
adc
sub
push
xor
mov
sar
outs
add
or
cwde
sti
icebp
aaa
pop
retf
movs
dec
pop
or
je
ins
loope
shl
test
cmp
ins
(bad)
dec
aaa
cmp
xor
sahf
pop
inc
push
aas
jp
sbb
jo
loop
push
aad
js
jge
sub
mov
and
aaa
jo
mov
sti
inc
sti
cmp
cmp
cmp
scas
bound
mov
out
mov
cmp
mov
inc
(bad)
shl
mov
dec
or
push
push
cli
xchg
(bad)
int
and
test
cmp
aad
lods
inc
call
jp
or
aad
jb
aad
add
mov
les
pop
and
mov
or
(bad)
rcl
ret
dec
int3
xchg
push
nop
add
inc
mov
jecxz
loope
lods
dec
xchg
add
sbb
or
mov
sbb
dec
int3
gs
mov
add
cdq
and
inc
rol
rol
lds
lds
inc
fsub
test
jmp
pop
adc
jne
adc
arpl
push
sub
inc
ret
mov
sub
and
push
push
add
mov
pop
push
mov
ds
pop
sar
adc
inc
pop
aaa
cmp
adc
out
es
fxtract
inc
push
imul
inc
call
loop
fld
push
mov
ins
psubq
call
into
sub
inc
sahf
jae
xchg
push
ds
pop
mov
sti
int3
hlt
aad
and
jle
pop
mov
lahf
push
mov
and
repnz
frstor
mov
cmc
fdiv
lods
fcom
xchg
mov
movs
and
fcomp
lods
mov
call
push
lds
inc
fs
push
jg
test
pop
sbb
scas
xor
loop
push
rol
mov
movs
mov
out
inc
jl
fwait
cmp
lods
push
dec
xor
ret
xor
dec
in
mov
lahf
daa
cmp
mov
mov
jns
jl
dec
popf
push
jg
shr
out
cs
(bad)
sub
outs
xchg
les
das
sti
dec
mov
lods
jge
movs
xchg
in
stc
hlt
scas
jge
mov
sub
jnp
mov
in
xchg
(bad)
je
inc
mov
inc
cmps
sti
(bad)
jns
xchg
hlt
mov
shl
push
(bad)
aad
ss
leave
imul
movs
jg
nop
jg
outs
cs
add
scas
cmp
xor
jne
in
cld
push
mov
into
faddp
xor
retf
jo
std
idiv
lods
inc
in
cmp
sub
push
sbb
repz
jo
not
retf
jo
lods
xchg
ins
jg
(bad)
mov
fisub
push
arpl
test
call
out
mov
clc
or
fstp
push
pop
imul
je
pop
in
int
dec
cmps
cld
adc
int3
inc
retf
and
in
inc
jmp
(bad)
shl
div
xchg
pop
(bad)
mov
ret
ins
test
pop
mov
enter
out
cmp
iret
sbb
and
and
xor
sti
stos
sbb
push
inc
mov
test
sbb
or
ja
pop
sahf
aaa
out
inc
cmp
mov
xchg
cmp
ror
rcl
add
and
pop
es
js
cmp
ss
leave
lea
data16
lds
dec
clc
push
jnp
and
jge
ret
ja
jae
in
jb
adc
cmc
stc
sbb
or
ss
in
cld
adc
sahf
xchg
scas
lds
(bad)
sti
cmc
and
out
mov
dec
mov
add
inc
cmc
or
mov
xchg
gs
lea
cld
xor
mov
push
ins
lods
push
(bad)
in
pop
ret
in
cmp
and
fucomi
mov
retf
std
into
lahf
sti
mov
aaa
or
stc
mov
inc
inc
mov
popf
aaa
in
adc
jo
mov
(bad)
jl
inc
mov
pop
push
int3
xor
out
enter
mov
pop
push
gs
xor
fcmovnu
or
dec
xor
std
(bad)
fdiv
(bad)
pop
jmp
imul
pop
lds
jp
int
(bad)
rcr
mov
inc
add
sbb
out
stc
pop
outs
fnstsw
jmp
push
aaa
push
mov
(bad)
movs
test
sbb
outs
xlat
xor
mov
addr16
sub
mov
jecxz
pop
mov
xlat
dec
int3
aaa
jge
cs
aas
mov
jge
daa
pop
les
mov
jmp
sbb
add
add
adc
mov
push
add
add
adc
inc
push
aam
jle
cld
(bad)
lock
dec
push
jmp
sbb
ror
lahf
pop
pop
jae
jle
addr16
daa
push
movs
stos
add
mov
xlat
call
fwait
inc
aam
xchg
aad
cmp
pop
and
cld
jmp
sbb
dec
sahf
xchg
mov
clc
xchg
leave
scas
mov
push
xchg
pop
je
sbb
add
je
add
xor
adc
shr
xchg
jne
arpl
push
mov
add
dec
bound
stos
adc
(bad)
xchg
imul
or
push
dec
push
imul
adc
sub
cwde
mov
loope
pop
(bad)
(bad)
test
pop
jecxz
frstor
jmp
loop
dec
in
inc
sub
cld
cmps
or
sbb
test
movs
mov
cmp
pop
or
sub
jmp
movs
retfw
test
or
and
mov
mov
add
lea
add
pusha
adc
xchg
add
pop
add
jne
inc
icebp
dec
mov
dec
pop
aam
cmp
aas
adc
sbb
inc
sub
xor
inc
test
inc
add
dec
pusha
sub
add
add
icebp
aaa
loope
xchg
mov
jne
data16
inc
jecxz
call
mov
mov
push
mov
les
scas
shl
rcr
stos
shr
push
mov
aam
mov
jno
(bad)
mov
cmp
fwait
pop
idiv
push
jecxz
ins
pop
push
mov
adc
sahf
je
inc
mov
rol
sbb
jp
mov
loop
xchg
aas
test
movs
sar
mov
cmp
push
jns
idiv
mov
pop
xor
ins
cmp
pop
mov
mov
in
push
cs
shl
lds
movs
jmp
ss
dec
movs
repz
imul
sub
shr
push
in
push
xor
es
loope
pop
(bad)
push
sub
int
adc
jo
or
xor
into
mov
fs
pusha
ins
jge
jecxz
jne
pop
push
(bad)
fstp
inc
aaa
inc
mov
jo
mov
loop
fisttp
in
mov
test
cmc
scas
dec
in
shr
mov
retf
shl
xchg
hlt
cmps
dec
out
retf
ror
outs
outs
mov
repnz
push
in
lahf
retf
mov
xchg
shr
stc
ja
jecxz
imul
test
icebp
leave
scas
jecxz
test
cs
jecxz
cwde
sub
jnp
mov
aam
inc
inc
out
(bad)
sbb
cmp
push
repnz
adc
or
dec
pop
jecxz
shr
outs
xchg
jb
inc
jae
outs
scas
fimul
in
arpl
inc
test
int
push
fisub
popa
or
xchg
fnstenv
mov
jno
mov
pop
xor
sub
mov
or
mov
into
xchg
lods
cmp
into
adc
stos
and
lea
jbe
in
out
ds
into
jne
in
inc
sti
aas
js
rol
or
dec
test
xor
jecxz
leave
or
add
mov
je
dec
vdivss
fstp
xor
out
sub
clc
repz
fdivrp
mov
push
ins
pop
xchg
mov
fs
hlt
les
fnstsw
add
lods
int3
mov
inc
mov
out
lahf
push
js
in
pop
dec
outs
mov
retf
lahf
xor
inc
loope
inc
cmp
sti
dec
jmp
cmp
sahf
mov
icebp
movs
(bad)
cmp
stc
mov
push
jmp
sub
out
cmps
adc
outs
inc
icebp
push
(bad)
dec
mov
push
inc
cmp
lods
ret
mov
retf
mov
aam
sub
sub
aam
fiadd
sub
bound
nop
lds
(bad)
(bad)
sbb
pop
in
jne
mov
aas
jecxz
xchg
push
aaa
dec
(bad)
jo
sub
dec
jecxz
aam
in
ror
mov
cmp
in
inc
inc
scas
mov
mov
pop
adc
lods
pop
sti
dec
dec
lea
ss
jecxz
cmp
aam
aas
stos
sbb
das
not
in
jmp
das
mov
xchg
out
sbb
fstp
jecxz
call
movs
shl
adc
mov
rcr
cli
inc
mov
les
push
xor
xor
add
nop
ret
xor
jne
xchg
push
mov
mov
and
push
dec
add
inc
adc
add
(bad)
push
imul
fwait
xor
push
ja
jno
inc
push
jno
sbb
pop
(bad)
pusha
jmp
inc
push
fs
push
sbb
adc
or
add
push
inc
mov
adc
sub
push
sub
push
adc
push
sbb
push
xchg
sub
cld
push
mov
or
push
adc
(bad)
add
ret
adc
or
pop
push
and
xchg
xchg
pop
rcr
inc
test
movs
iret
mov
jb
dec
das
push
add
or
out
push
xchg
pop
fsub
push
adc
movs
jecxz
mov
test
or
or
or
dec
repnz
cs
jg
mov
mov
int3
stos
vphaddubd
or
and
aas
ficomp
(bad)
repnz
cmp
js
loope
aam
in
pop
mov
jecxz
xchg
sbb
mov
js
and
into
push
test
repnz
inc
lahf
xor
test
or
mov
add
rcr
push
daa
jbe
ins
jg
icebp
and
cdq
jne
cmp
retf
inc
and
mov
push
fcom
scas
jae
hlt
sub
imul
pop
xor
cmp
sbb
pop
pop
mov
dec
mov
push
gs
mov
(bad)
pop
jp
cmp
mov
cmp
movs
iret
outs
add
mov
xor
adc
xchg
clc
gs
lods
push
pop
jnp
xchg
dec
mov
dec
movs
xchg
jns
pop
mov
lock
mov
jge
sti
xor
lods
dec
loope
pushf
int
jno
mov
ror
fcmovnb
mov
and
xor
mov
push
movs
dec
push
push
icebp
dec
jae
lds
sbb
inc
xchg
sbb
stos
add
ret
loop
mov
jne
dec
push
sbb
and
add
lods
sbb
mov
jne
mov
std
cld
mov
cmp
or
sub
mov
loopne
in
xlat
add
pop
jnp
pop
cmp
jp
ret
add
push
sti
dec
mov
sti
cld
inc
sbb
(bad)
xor
or
sar
adc
mov
pop
or
pop
cmp
adc
aaa
mov
push
mov
and
call
lea
aam
mov
frstor
cmc
adc
out
out
pop
ds
jecxz
lods
mov
xchg
inc
add
adc
retf
std
(bad)
jne
(bad)
sti
dec
add
dec
mov
clc
fdivr
js
dec
cwde
cli
dec
xchg
inc
hlt
in
dec
loopne
sbb
fdivr
or
inc
inc
test
lds
ins
cdq
push
mov
inc
cmp
repz
mov
into
std
sbb
inc
jmp
xchg
cmp
dec
sub
in
cmp
xchg
(bad)
fwait
inc
icebp
cmp
lods
fcmovnb
sbb
mov
xchg
js
scas
lahf
mov
(bad)
mov
out
rcr
push
clc
(bad)
jecxz
sub
(bad)
xor
int
jecxz
mov
pop
push
inc
ror
scas
scas
arpl
std
test
in
pop
inc
inc
mov
xor
(bad)
icebp
scas
into
jae
nop
sti
adc
mov
fadd
imul
retf
mov
mov
sbb
push
ins
movs
mov
out
movs
and
dec
inc
aam
sub
push
adc
push
sbb
xchg
cmp
loop
ret
call
push
xor
retf
stos
inc
ja
loope
es
sbb
into
aaa
mov
jns
fidivr
or
in
mov
xor
(bad)
mov
add
test
mov
jnp
cwde
shl
dec
inc
in
sub
jmp
inc
hlt
sub
fidivr
je
add
iret
inc
mov
fisttp
inc
cmp
js
call
xor
test
(bad)
adc
aam
dec
mov
inc
xor
and
adc
mov
int
add
aad
push
mov
(bad)
or
mov
sub
out
inc
xor
adc
adc
adc
dec
or
lds
dec
sub
inc
push
sbb
push
inc
push
inc
adc
add
mov
add
adc
outs
sub
inc
or
xchg
test
inc
or
fsubr
jne
(bad)
sbb
push
and
sub
adc
adc
and
jl
clc
mov
test
test
pop
ja
call
nop
dec
inc
ins
cmc
daa
dec
inc
loopne
mov
xor
xor
fwait
mul
bound
pop
mul
mov
push
xlat
mov
and
sub
and
lods
repz
inc
out
nop
fist
add
pop
sub
jne
mov
jmp
aas
loope
icebp
push
sahf
call
(bad)
retf
fwait
cmp
xchg
add
mov
sbb
popa
sbb
jb
cmp
or
addr16
call
and
cmp
mov
and
cdq
mov
mov
aad
test
adc
pop
cmp
inc
xchg
stos
or
cld
push
mov
xchg
out
jge
pop
push
jns
rol
push
add
mov
jg
pop
cmps
pop
shr
out
retf
out
(bad)
mov
add
push
jbe
call
sbb
lods
pop
mov
aad
xchg
dec
pop
or
(bad)
call
outs
sub
xor
add
ins
xor
pop
icebp
neg
jno
push
int3
cmc
jle
nop
sbb
arpl
int3
daa
nop
cmp
(bad)
pop
and
lds
gs
push
fnstcw
lods
call
sub
cmp
mov
add
jae
scas
ret
ins
and
mov
xor
mov
inc
sbb
in
jp
sub
ja
pop
(bad)
ds
test
mov
(bad)
jle
xor
ds
mul
and
inc
scas
std
test
dec
(bad)
push
cmc
jg
fsubr
pop
(bad)
div
aas
cwde
pop
in
mov
fnstsw
fs
addr16
add
push
jg
in
pop
loope
add
add
stos
fsubr
in
gs
jb
(bad)
fwait
retf
pushf
cmp
retf
fmulp
or
ja
push
pop
fstp
pop
mov
mov
jb
jne
sahf
jo
jge
pop
leave
xrelease
imul
dec
std
cmps
cld
js
ins
mov
mov
(bad)
push
push
push
out
loop
xchg
jno
fstp
test
and
inc
jmp
retf
cmps
cmp
ins
imul
inc
cmc
std
sub
cmp
pop
mov
imul
xchg
push
add
xor
div
xchg
(bad)
ins
out
fs
sar
adc
adc
and
mov
push
loope
jl
ror
js
pop
xchg
cmp
xchg
pop
sar
std
jae
(bad)
inc
shl
popa
enter
xor
jae
out
scas
jno
sti
loopne
test
arpl
imul
mov
push
xchg
fcomp
cld
and
xor
xlat
int3
xor
add
dec
xor
in
aaa
inc
shr
add
ror
(bad)
fcom
and
mov
dec
out
inc
cmp
aad
adc
mov
dec
add
add
mov
ins
add
daa
loope
mov
push
adc
mul
(bad)
call
jp
xchg
clc
or
das
pop
imul
push
bound
pusha
div
cli
xlat
xchg
jnp
hlt
xchg
loopne
adc
fnstsw
test
cli
xlat
aam
sub
pusha
lods
or
js
call
jg
fisttp
dec
cmp
iret
or
adc
add
xchg
aad
sub
sub
mov
adc
and
inc
push
sub
push
mov
pop
push
xor
cdq
push
mov
lea
dec
mov
inc
push
imul
mov
cmps
dec
retf
add
or
stos
xor
push
inc
adc
xor
push
dec
retf
lds
sub
push
sbb
push
add
push
fisub
mov
and
cwde
add
lds
mov
push
test
add
jb
mov
cmps
pop
or
fadd
movs
cmc
cmp
mul
test
mov
movs
jae
outs
mov
aad
leave
xor
out
sub
nop
mov
xor
in
add
xchg
sbb
or
out
dec
out
daa
movs
inc
sub
and
fs
sti
lods
mov
dec
cmp
pop
jb
loope
mov
pop
cmps
and
mov
jns
mov
sub
mov
fistp
and
jle
jo
(bad)
pop
sub
sub
cmps
out
or
cmps
jecxz
fidivr
ins
push
(bad)
inc
push
xor
gs
movs
(bad)
out
sahf
and
mov
ficom
aaa
es
inc
mov
xor
out
out
out
adc
imul
mov
retf
imul
xchg
jle
fwait
inc
fadd
push
lahf
gs
retf
sub
(bad)
es
imul
out
fisttp
(bad)
ins
repz
xor
imul
jle
dec
movs
out
test
test
jns
pop
fimul
rol
inc
(bad)
(bad)
jbe
jecxz
adc
lea
ss
mov
outs
lods
loope
ror
sub
add
pop
or
push
or
ins
pop
dec
adc
std
push
fisub
xchg
jle
or
jmp
inc
cmp
jnp
mov
cmp
outs
sub
pop
push
int
outs
cld
in
stc
push
fcom
iret
pop
pop
inc
jne
mov
cmps
xor
sti
dec
fdiv
adc
jb
inc
xor
mov
pushf
add
sbb
cmp
outs
retf
in
retf
(bad)
sub
arpl
test
jnp
sbb
dec
push
xchg
fxch
push
sub
fst
cld
sar
push
daa
sar
cld
push
xor
sub
ss
fwait
xchg
test
dec
jo
sub
clc
and
cmp
xchg
push
add
cmps
add
out
mov
(bad)
xchg
cdq
cld
ret
clc
mov
xchg
dec
aam
mov
jae
push
push
mov
sbb
popa
cdq
mov
mov
mov
int
into
xchg
xor
dec
iret
int
jg
popf
ret
cmp
xor
lods
popf
je
(bad)
je
fild
sti
add
inc
fistp
mov
fwait
in
loop
xchg
cdq
cmps
jne
stc
jno
in
ins
mov
inc
jbe
sbb
ins
in
(bad)
popa
jle
cld
push
aam
dec
test
xchg
mov
sbb
repnz
(bad)
idiv
retf
pop
mov
(bad)
mov
lahf
inc
jl
adc
dec
jg
fstp
sahf
xor
sbb
inc
aas
dec
mov
call
sti
pop
jmp
inc
sti
dec
sbb
and
jecxz
nop
in
popf
mov
fsub
aad
mov
aad
(bad)
sub
mov
adc
mov
je
inc
inc
stc
aad
jl
icebp
xchg
les
gs
jo
cmp
ret
pop
ror
mov
mov
jle
stos
push
cmp
adc
movs
jmp
dec
ss
ror
loopne
pusha
mov
push
out
mov
daa
icebp
jbe
ja
push
adc
fstp
dec
ja
xchg
push
retf
push
jl
fstp
lock
push
xor
jge
out
addr16
cwde
dec
and
gs
in
inc
inc
cmp
popw
lock
cmps
fs
push
std
in
ret
bswap
xlat
cmc
mov
jbe
jle
or
outs
mov
push
sub
push
mov
in
jge
cwde
in
pop
pop
out
stos
mov
sub
imul
nop
cld
idiv
pop
lahf
in
inc
jne
sbb
add
push
pop
in
add
jmp
call
pop
cmp
sub
repz
retf
cdq
sbb
xor
fs
ins
add
or
sub
jno
push
sub
mov
push
add
add
cli
into
and
rcr
rcl
sbb
mov
xchg
aaa
movs
pop
sub
sbb
leave
cmps
pop
jge
sbb
cmps
jno
inc
jmp
pop
mov
add
push
pop
jmp
add
add
ins
xor
and
sub
push
add
(bad)
daa
adc
adc
or
or
out
xchg
xchg
inc
adc
push
add
or
and
and
xchg
dec
bound
test
add
sub
rcr
push
add
add
inc
or
push
nop
(bad)
push
sub
sub
mov
jge
mov
out
(bad)
fisttp
icebp
sbb
mov
jne
fisttp
stc
sub
pop
cli
inc
or
cmps
and
pop
add
(bad)
mov
cmps
sahf
and
sub
stc
cs
push
pop
jmp
ins
in
in
dec
cmp
jg
fcomp
cwde
addr16
cmp
int
(bad)
mov
sbb
push
cmp
iretw
(bad)
mov
dec
(bad)
sar
std
xchg
fistp
ss
pop
pop
dec
or
and
repz
push
rol
xor
pop
inc
icebp
ins
mov
imul
jmp
sub
je
jns
dec
not
jbe
(bad)
js
sbb
sbb
or
cmp
shr
push
rcr
adc
mov
retf
jmp
cmp
pop
fcomi
jnp
loop
xor
xor
aaa
mov
sbb
mov
mov
das
outs
add
push
jno
pop
movs
and
mov
sub
dec
daa
call
adc
push
xor
jge
jmp
jl
lods
pop
pop
ret
arpl
mov
add
xchg
cs
idiv
das
psllq
xor
mov
inc
mov
rcr
dec
xor
movs
mov
imul
mov
ds
pop
outs
mov
cmps
(bad)
es
fcmovne
mov
cmps
dec
adc
aas
jle
lods
and
xchg
adc
jmp
or
adc
mov
or
xchg
dec
test
inc
rol
mov
sub
xor
inc
lds
jno
loope
ficomp
sahf
jno
jb
and
int3
push
jg
mov
sub
icebp
sbb
jae
aam
jb
loop
(bad)
popf
jbe
gs
inc
shl
pop
popf
lock
or
test
lahf
sub
fcom
test
sti
adc
rcr
push
popa
mov
fs
mov
(bad)
sub
add
xchg
and
imul
(bad)
in
sub
xor
fist
and
jo
jle
in
stc
imul
fwait
adc
cwde
pushf
push
xchg
cmp
lods
lahf
mov
cmps
pop
or
hlt
sub
aaa
fcom
jno
in
cmp
pop
(bad)
jne
xlat
(bad)
push
arpl
sbb
fcom
mov
stos
ins
test
dec
out
fidivr
iret
cmp
mov
in
icebp
in
mov
xchg
bound
repnz
jb
aaa
test
clc
stos
imul
or
cli
movs
add
mov
mov
imul
jne
cli
call
sub
jle
jmp
stos
dec
popa
ins
outs
sbb
mov
or
pop
mov
loopne
mov
sbb
loop
mov
data16
stos
clc
ret
dec
shr
repz
push
loop
stos
jns
loop
push
test
pop
hlt
pop
jecxz
out
cmp
cmp
cdq
pop
in
lock
int
enter
dec
push
repnz
sub
(bad)
and
movs
aam
cld
jmp
inc
mov
repnz
xor
mul
push
imul
xchg
outs
iret
call
mov
mov
sbb
aas
xor
dec
cli
sub
adc
stos
jnp
xchg
retf
daa
jp
xchg
mov
cmp
lahf
xchg
mov
jne
pop
jns
xchg
cmp
push
sub
int
pop
add
cs
movs
xchg
sub
pop
xor
iret
mov
pop
pop
xchg
iret
pop
push
mov
or
cdq
scas
js
dec
repnz
xchg
cdq
add
ror
cmp
outs
adc
jne
fild
dec
mov
mov
pushf
lods
mov
(bad)
cmp
mov
int3
shr
xchg
mov
loopne
cmp
dec
aaa
push
xchg
mov
cmp
arpl
xchg
int3
sub
xlat
aas
jae
(bad)
cmp
inc
es
and
dec
(bad)
aam
paddb
data16
bound
add
cmp
jge
lock
ret
mov
imul
ins
mov
mov
and
and
xor
sub
inc
add
push
sbb
aad
pop
jecxz
addr16
adc
inc
es
xor
imul
cmp
outs
cmp
test
pop
mov
cs
jnp
xchg
sub
outs
call
cmp
xchg
jae
ja
mov
stc
mov
(bad)
fldcw
js
retf
les
mov
jns
push
and
rcr
es
sbb
inc
int3
mov
xor
repz
test
cmps
fldcw
mov
sti
xchg
fisub
jnp
and
inc
xor
std
test
daa
shl
mov
mov
xlat
ficomp
add
cli
cmp
pop
add
mov
or
jb
out
mov
sbb
pop
in
xchg
jb
xchg
outs
jb
(bad)
cmp
imul
rep
lahf
neg
in
stc
sbb
mov
dec
mov
jno
sbb
add
inc
cs
mov
xlat
fcom
fisttp
jecxz
push
ds
aas
inc
sub
xor
xchg
sbb
adc
push
xchg
aas
je
(bad)
push
mov
adc
loopne
push
dec
sub
xor
mov
push
and
mov
inc
pop
outs
push
jae
loop
fwait
sbb
pop
xchg
jge
mov
lea
shr
jb
sub
fiadd
icebp
mov
nop
cs
mov
and
sub
test
push
inc
sbb
push
ins
inc
cld
mov
test
cmp
out
dec
and
addr16
out
cmp
push
inc
push
mov
cmp
bsr
push
add
add
inc
or
add
push
add
mov
mov
push
add
pop
aas
mov
lahf
out
aaa
shr
push
lock
sub
push
xor
sbb
inc
or
test
sub
push
and
xor
inc
leave
sub
nop
(bad)
aam
mov
add
add
add
push
inc
push
and
bound
lods
xchg
mov
or
add
and
adc
inc
lds
xchg
or
or
add
mov
and
inc
or
add
add
add
mov
(bad)
xor
jle
mov
push
fsubr
jmp
mov
add
jbe
inc
gs
(bad)
push
arpl
sti
mov
dec
les
adc
cmps
out
cmp
mov
loope
mov
cmp
ins
sub
inc
xor
mov
mov
adc
inc
pushf
mov
fdivr
pop
sub
cmp
ret
call
sub
fcmovb
add
cmp
popa
nop
retf
movs
add
out
and
repz
mov
mov
retf
rcr
mov
fimul
and
and
(bad)
lods
mov
cld
pop
add
repz
aad
ds
das
outs
popa
mov
and
sbb
leave
and
out
inc
push
jl
outs
test
jmp
aad
stos
cmp
dec
(bad)
rcl
push
in
pop
mov
sbb
add
out
mov
popa
int3
into
xchg
jl
jae
jp
mov
retf
les
sub
call
fild
add
lahf
into
jae
mov
cmp
cmp
cld
inc
aam
mov
and
push
xchg
out
int3
cwde
int
mov
pop
fwait
imul
and
xchg
addr16
les
adc
js
movs
loop
ja
mov
inc
lea
inc
add
leave
cmp
sub
pop
cmp
out
(bad)
sub
outs
and
jo
jns
cmp
outs
mov
jnp
in
push
nop
jle
cld
xor
rcl
mov
xor
xchg
mov
adc
xchg
or
xor
std
(bad)
xor
sub
ins
leave
push
stos
loopne
push
les
cmps
test
ficom
xchg
out
out
leave
js
mov
pop
fincstp
sub
sub
xchg
fisub
lods
cld
jmp
ds
clc
xor
push
mov
and
jbe
out
sbb
sub
cmp
in
cmp
xor
div
jne
mov
das
dec
mov
sub
(bad)
adc
retf
xchg
data16
fdivr
fs
push
repnz
sub
cmp
les
adc
add
and
dec
les
sbb
add
push
sahf
and
dec
(bad)
cmp
mov
cmp
addr16
cmp
dec
lahf
or
mov
dec
lock
int3
mov
repnz
mov
mov
push
or
leave
xchg
lds
ins
popf
in
sub
ret
cmps
mov
xchg
sbb
call
sbb
dec
jo
(bad)
adc
pushf
mov
mov
xchg
pop
sub
retf
mov
leave
repnz
add
push
inc
(bad)
gs
mov
mov
fwait
mov
add
dec
cli
in
sbb
jmp
fdivr
mov
sub
pop
dec
outs
lods
mov
std
int3
shl
or
pushf
xchg
sti
xor
dec
and
inc
jl
pop
push
sub
push
sar
mov
mov
sbb
aad
int3
mov
dec
(bad)
outs
jo
fcom
cdq
sbb
scas
ret
gs
idiv
xchg
cmps
in
and
enter
and
mov
aaa
retf
(bad)
out
ss
jb
jo
int
addr16
in
xchg
call
(bad)
dec
xchg
jbe
jp
out
jns
mov
addr16
mov
sbb
sar
movs
test
mov
ja
and
test
mov
mov
adc
push
cmps
jbe
jmp
stc
in
call
xor
pushf
fld
adc
cs
sbb
and
dec
xchg
xchg
mov
data16
sbb
cdq
idiv
xor
mov
data16
test
sub
cmp
mov
div
sub
arpl
(bad)
mov
in
mov
cmp
daa
std
shr
pop
xor
mov
jg
sbb
addr16
aas
mov
mov
mov
mov
mov
test
pushf
push
mov
xchg
in
fisttp
xchg
cmp
mov
ins
pop
jnp
inc
(bad)
cmp
add
fimul
xchg
inc
or
(bad)
push
sbb
mov
mov
pop
jmp
sbb
pop
xchg
cdq
dec
ins
rcl
and
loopne
jge
movs
dec
aaa
das
pushf
(bad)
fcom
sar
mov
sbb
mov
pop
fcmovu
dec
cmp
ins
pushf
mov
dec
sbb
int3
call
dec
ror
inc
stc
adc
call
(bad)
inc
add
xchg
shl
in
pop
pop
nop
mov
icebp
dec
test
ins
or
scas
adc
push
or
xor
scas
(bad)
fistp
jg
sub
rcl
shl
repz
mov
sub
inc
sbb
or
mov
lahf
pop
mov
jge
pop
xchg
sbb
arpl
mov
push
outs
jns
dec
es
sbb
xchg
jecxz
push
(bad)
(bad)
fild
cmc
stos
xor
mov
xor
adc
fucom
and
jo
out
inc
pop
scas
loope
in
dec
fwait
xchg
cli
pop
icebp
pop
xchg
jp
lods
imul
jmp
dec
sti
jae
jmp
iret
(bad)
jge
mov
out
mov
mov
test
pop
into
in
ds
cmp
fidivr
int
mov
pop
ret
(bad)
mov
ja
fld
outs
data16
push
sbb
loope
addr16
outs
mov
xor
fnstcw
add
fs
std
sti
xchg
jbe
mul
jge
mov
ds
shl
dec
push
or
add
jno
and
dec
sbb
test
add
push
add
add
push
add
add
add
push
add
mov
inc
jno
rcr
or
sbb
sbb
jne
inc
mov
jbe
add
lds
push
fcom
sub
in
push
add
ret
lds
adc
ds
(bad)
xor
xchg
or
add
sbb
arpl
inc
adc
inc
bound
inc
or
add
nop
or
mov
xor
mov
push
add
nop
or
or
add
lds
jl
icebp
sahf
cmps
movs
ret
imul
out
gs
xchg
xor
(bad)
into
mov
push
push
out
aaa
enter
nop
or
rcr
push
pop
lock
retf
sub
in
out
mov
outs
cmp
out
push
jne
data16
nop
cmp
lods
mov
call
(bad)
imul
iret
(bad)
(bad)
xor
pop
push
aam
mov
jnp
and
fwait
je
shl
fs
retf
sbb
fmul
pop
push
dec
arpl
pop
push
xchg
cmc
inc
mov
pop
mov
mov
fst
pop
sbb
or
fisttp
push
cmc
cli
je
sub
mov
in
cli
dec
daa
(bad)
in
push
out
sahf
fcmovu
fmulp
cmp
repz
xchg
rol
mov
and
add
scas
out
xlat
imul
xlat
lock
jp
mov
fwait
pop
int3
shr
pop
stc
inc
mov
pop
jns
xor
adc
inc
or
test
mov
lds
loope
cld
jmp
mov
pop
pop
(bad)
(bad)
jb
stc
jmp
fs
xchg
sub
repnz
cld
pop
icebp
das
in
stc
jne
fstp
ffreep
sub
xchg
xor
inc
pop
adc
mov
rcr
adc
rcl
or
mov
or
push
ror
sub
fstp
(bad)
in
test
and
sbb
mov
mov
jg
loop
dec
lods
arpl
lock
stos
adc
and
xor
push
inc
mov
das
(bad)
rcr
movs
das
sub
mov
out
je
cmp
jbe
cmp
mov
dec
jecxz
cmps
test
cmp
movs
xchg
lods
push
pop
mov
lea
js
xchg
cmp
rol
inc
inc
cli
jne
mov
push
xchg
adc
cmps
outs
fiadd
mov
pop
jb
push
cmp
dec
mov
into
cld
pop
lods
jg
call
pop
fimul
enter
and
test
aas
xor
adc
arpl
sbb
sbb
dec
movs
add
sbb
sahf
jmp
or
add
jns
xchg
xchg
stc
add
jbe
out
jge
add
imul
lahf
sahf
loop
push
dec
int
or
pop
sub
shr
loope
cli
add
arpl
out
mov
je
pop
gs
aaa
add
xchg
adc
push
ja
(bad)
push
mov
jmp
aas
retf
pushf
popf
mov
jle
cmp
imul
(bad)
or
ds
(bad)
test
lock
inc
movs
pop
pop
fld
cmp
in
nop
bound
imul
adc
mov
out
pushf
int
mov
aas
or
inc
data16
cdq
lea
sub
or
and
or
(bad)
jmp
int3
outs
dec
imul
mov
mov
das
les
mov
dec
not
dec
pop
and
push
pusha
fs
pop
push
push
xchg
pop
sbb
adc
lods
dec
adc
or
cmp
cld
jmp
jb
xchg
xchg
pop
outs
lock
enter
shl
pop
mov
mov
dec
hlt
mov
out
push
xor
push
fwait
xchg
or
lahf
dec
loopne
iret
xor
mov
fnstenv
bound
mov
pushf
ins
xchg
pop
mov
cld
sub
movs
sbb
mov
xlat
cli
std
jno
sbb
ror
aas
jecxz
inc
mov
call
ds
out
mov
jmp
inc
cmp
and
sbb
cmp
out
pop
mov
jmp
lods
shr
mov
popf
add
arpl
out
or
pop
mov
mov
inc
sub
rol
adc
push
icebp
int3
rol
xor
xlat
or
loopne
mov
and
out
ficomp
mov
mov
mov
cmp
sub
mov
adc
in
pop
sub
imul
mov
jp
daa
xlat
(bad)
cli
into
sub
sbb
mov
jbe
pop
pop
outs
iret
rol
pop
cmp
aad
sub
inc
popf
mov
aas
retf
cld
sub
addr16
mov
and
adc
clc
inc
test
pop
dec
imul
out
dec
ja
arpl
div
les
xor
outs
fnsave
xchg
xchg
pop
js
push
bound
sahf
arpl
fs
(bad)
xchg
cmp
add
imul
mov
adc
ds
mov
fld
shl
ins
xchg
ss
xchg
ins
out
pop
or
pop
dec
mov
dec
shl
xchg
inc
push
das
pop
int
rol
pop
sbb
inc
cmp
cmp
loop
add
sbb
iret
pop
movs
retf
fs
jecxz
cmp
iret
or
imul
ds
clc
mov
push
xor
jmp
xchg
fcmove
sbb
mov
imul
cmp
and
out
sbb
and
cmp
xor
and
pushf
mov
jp
cdq
test
pop
dec
or
mov
mov
mov
repz
popa
mov
mov
movs
mov
mov
enter
xor
jno
ins
xor
and
push
je
int
repnz
int3
mov
adc
mov
add
inc
add
add
add
push
add
and
sti
mov
jbe
dec
test
add
nop
ret
inc
lds
or
add
xchg
mov
inc
add
inc
or
inc
push
mov
push
movs
add
mov
push
push
and
mov
dec
or
test
cmps
add
mov
sub
push
mov
sub
dec
push
adc
or
sbb
pop
push
add
or
adc
add
add
xor
ret
add
pop
inc
jle
jmp
icebp
mov
mov
mov
ins
mov
ret
into
mov
ins
test
cdq
xchg
jae
push
jle
push
adc
push
adc
jmp
lods
lods
cmc
popf
mov
jge
sub
dec
fidivr
retf
xchg
aaa
mov
cmps
and
mov
fidivr
fs
or
cli
aam
in
add
adc
inc
ret
outs
in
fcmovne
rcr
aad
mov
mov
add
retf
add
repz
adc
es
push
mov
out
mov
jno
or
(bad)
push
rcr
arpl
inc
jbe
jle
jecxz
jne
popf
lods
repz
xchg
enter
(bad)
mov
push
pop
jae
dec
cmp
xor
in
lahf
push
mov
mov
sbb
and
les
stos
jl
xchg
bound
shl
scas
xor
jo
xchg
cdq
(bad)
xor
dec
jg
clc
sbb
ret
std
sahf
(bad)
push
jnp
fs
out
in
jbe
inc
dec
lock
fisub
sub
jnp
cld
sub
int3
aas
push
loopne
lahf
test
cli
adc
add
test
mov
shl
mov
xor
call
or
cmps
jnp
and
sbb
jno
xlat
xor
aaa
loop
mov
fsubp
fsubrp
shl
cli
fs
add
jmp
dec
adc
or
out
ss
mov
jno
cmps
daa
adc
adc
cdq
repz
(bad)
in
cmp
inc
cmp
xor
mov
dec
jmp
shr
pop
mov
ss
push
repz
jp
lahf
test
pop
clc
cmp
rcl
sbb
dec
push
mov
jne
sti
mov
add
frstor
aas
(bad)
add
mov
adc
xchg
fwait
sti
inc
idiv
mov
mov
enter
repz
sub
jle
push
push
cmp
aam
fstp
pop
retf
add
out
adc
outs
clc
or
add
add
jae
cli
arpl
(bad)
into
inc
or
sbb
je
cmp
cmp
imul
fs
dec
xchg
push
call
loopne
jnp
push
inc
lods
pop
imul
js
adc
pop
dec
adc
nop
test
movs
not
push
leave
mov
mov
clc
call
int
(bad)
fs
pop
xor
adc
jb
outs
pop
pop
mov
sbb
push
push
mov
fstp
outs
and
mov
rol
or
ret
outs
mov
xor
cmps
mov
mov
rcr
in
pop
xchg
mov
adc
in
das
not
xchg
mov
movs
sub
ret
xor
sbb
scas
bnd
lds
popa
fdivr
dec
lds
jg
rcl
mov
hlt
jns
jne
not
int
call
mov
sub
adc
daa
mov
lods
mov
fs
jle
dec
mov
jg
adc
ds
loopne
pop
inc
into
xchg
out
or
mul
or
jl
sub
add
xchg
out
dec
jbe
loopne
pop
jno
jmp
(bad)
int3
or
fldcw
pop
mov
cmp
popf
mov
stos
push
xor
pop
mov
pop
sbb
pop
lods
(bad)
fdivr
add
mov
jae
jecxz
aad
rcl
pop
out
in
pop
lods
mov
scas
ret
iret
ds
popf
mov
stc
jbe
stos
mov
sub
adc
fcomp
sar
scas
cmp
clc
jns
adc
fs
int
jg
xor
jno
inc
add
mov
scas
jp
cmps
retf
pop
lahf
push
mov
jbe
pusha
inc
(bad)
repnz
jl
hlt
cmp
cmc
sub
daa
mov
repz
dec
mov
add
xor
rol
sar
repz
idiv
pop
hlt
sub
lds
adc
ins
jb
aam
sbb
loope
xlat
scas
xlat
movs
add
(bad)
je
data16
dec
repnz
fidiv
pop
inc
arpl
xlat
mov
scas
add
sbb
jmp
rcr
cmc
add
fidivr
stc
pop
xor
fcomip
sbb
aas
movs
jp
mov
sbb
ja
fsubr
out
mov
loop
and
mov
sbb
(bad)
bound
cmp
and
arpl
sar
jae
iret
(bad)
out
mov
fild
mov
push
and
mov
xchg
push
sbb
scas
pop
fisub
xor
clc
sub
dec
sub
rol
retf
test
xchg
inc
xchg
mov
jle
sbb
pop
dec
imul
cmp
loope
adc
aam
cmp
push
sbb
arpl
addr16
inc
outs
xor
sub
mov
popa
jbe
aas
lds
addr16
scas
mov
inc
pop
xchg
jecxz
in
xlat
and
and
dec
pop
mov
and
icebp
mov
loope
int
ja
shl
js
in
inc
adc
mov
mov
and
ficomp
dec
mov
mov
pushf
daa
inc
fsub
shr
jb
mov
cdq
and
push
sti
inc
add
mov
or
xor
sbb
and
push
add
add
push
add
add
push
add
and
sti
mov
jbe
int
or
sar
push
sbb
inc
push
nop
lds
sbb
add
add
add
dec
(bad)
rol
inc
or
mov
add
or
bound
add
xchg
push
add
adc
adc
adc
sub
pop
push
adc
dec
inc
or
add
push
add
inc
rol
inc
(bad)
push
add
inc
add
add
test
arpl
add
xchg
mov
cmp
loop
out
imul
add
cmc
lea
das
and
(bad)
inc
xor
dec
pushf
push
and
xchg
int
out
add
cmp
comiss
xchg
dec
dec
int
ja
lods
ins
imul
sub
mov
into
and
imul
mov
push
push
or
inc
adc
ds
mov
pop
pushf
add
cmp
shl
fstp
ss
sbb
and
outs
mov
addr16
mov
mov
add
and
popf
loope
xor
mov
call
fnstsw
jo
dec
(bad)
idiv
mov
and
ins
scas
cwde
pop
pop
mov
lock
and
aas
sub
js
(bad)
adc
adc
rol
cmp
pop
sub
stc
outs
mov
stos
mov
repnz
stos
jecxz
in
jge
aaa
sbb
mov
xor
int3
mov
lods
in
xchg
pop
mov
cmp
add
sbb
jle
sbb
jmp
add
clc
push
dec
shl
mov
adc
mov
out
daa
or
dec
in
stos
mov
mov
mov
xchg
xor
sub
inc
ret
add
add
(bad)
cdq
push
test
movs
movs
lods
mov
and
push
or
adc
mov
ret
sbb
xchg
cmp
and
adc
mov
fldcw
outs
xchg
jae
mov
add
or
pop
(bad)
stos
cmps
adc
aas
or
jno
outs
jbe
inc
addr16
xor
imul
push
inc
popf
add
mov
sbb
call
mov
out
ins
cli
pop
dec
clc
mov
lods
leave
sbb
mov
mov
mov
jo
add
xchg
fcmovne
shl
loop
mov
lods
pop
ins
hlt
xor
int3
cmp
pop
iret
inc
fsubr
(bad)
push
sub
imul
sahf
xchg
lock
aad
outs
sub
out
sahf
pop
and
sbb
icebp
inc
pop
and
xor
and
cmp
fld
fdivr
out
je
mov
mov
pop
jns
pop
sbb
jns
xor
pusha
aaa
add
and
nop
arpl
mov
icebp
out
scas
ss
cmp
iret
or
add
stc
add
dec
mov
rcr
jns
jbe
pushf
adc
dec
cmp
and
int3
jl
loop
pop
lds
ficomp
(bad)
fcmovbe
cmp
int3
fwait
arpl
out
cdq
and
pushf
in
mov
inc
jae
lock
lods
fiadd
imul
fiadd
std
stos
int
and
cld
leave
popa
(bad)
(bad)
in
push
(bad)
and
lahf
xchg
and
xchg
dec
fdivr
and
loope
inc
cmps
cmp
data16
pop
aas
cs
pop
xor
xchg
sbb
jns
out
jle
loopne
outs
push
icebp
push
mov
push
mov
push
mov
in
bound
cwde
inc
mov
sti
mov
call
jg
dec
jmp
clc
xchg
(bad)
pop
and
data16
hlt
cmp
hlt
cmp
rol
fidiv
mov
mov
pop
fdiv
fisttp
mov
jl
scas
aam
in
mov
dec
stc
jnp
scas
sbb
call
in
(bad)
(bad)
cli
(bad)
and
in
sbb
and
bswap
mov
inc
jno
daa
imul
mov
cmp
cmp
add
ror
push
dec
lods
rol
call
enter
sar
test
cmp
jl
xchg
sub
iret
adc
imul
ret
mov
gs
or
fwait
xchg
or
sbb
or
fldlg2
mov
push
mov
in
fisttp
je
inc
bound
adc
mov
cmp
loop
or
in
(bad)
and
adc
cwde
bound
xor
popf
leave
pop
repz
in
inc
iret
inc
jge
iret
(bad)
cs
cwde
ss
cdq
sbb
mov
in
jp
pop
inc
icebp
outs
les
fisubr
push
xor
inc
xor
push
mov
in
in
sub
test
cdq
sahf
ins
int
dec
jecxz
mov
icebp
push
cmc
push
popf
popa
push
jb
stc
mov
in
xchg
out
mov
xchg
jecxz
mov
and
mov
addr16
xchg
in
mov
mul
adc
and
cmp
scas
in
sar
jl
mov
mov
xchg
(bad)
sub
mov
movs
pop
mov
and
retf
adc
mov
nop
inc
scas
xchg
mov
test
not
xor
ins
hlt
iret
adc
ja
jmp
push
inc
jae
push
or
jp
shl
jns
sbb
imul
and
pop
fcomp
mov
imul
fidiv
in
aam
fimul
push
jb
sti
in
movs
jge
pop
bnd
sti
mov
mov
ret
inc
sub
jnp
push
aad
dec
icebp
rcl
adc
sub
nop
push
aas
cmp
fwait
inc
scas
js
shl
iret
frndint
inc
movs
jge
add
cs
out
sbb
mov
test
sbb
pop
inc
xor
retf
mov
xchg
nop
hlt
xchg
xor
sub
mov
sub
mov
dec
inc
imul
and
iret
xlat
mov
mov
jmp
jmp
inc
or
dec
add
push
add
or
sub
mov
inc
rol
push
and
les
adc
push
or
or
or
add
add
add
sub
push
add
add
push
add
dec
popa
inc
or
inc
les
mov
cmps
mov
cmp
pop
inc
pop
iret
jbe
jb
daa
fwait
sbb
cmp
sbb
jl
push
mov
sub
cld
cwde
xchg
loope
aad
and
fs
push
outs
sub
push
stc
inc
add
cmp
mov
cmp
inc
dec
(bad)
pop
sbb
inc
mov
in
cld
pop
(bad)
xchg
enter
fisttp
adc
loop
data16
in
dec
cmp
aas
mov
mov
scas
jg
in
out
ins
(bad)
cmp
mov
jb
mov
add
outs
iret
es
in
and
mov
mov
cmc
scas
mov
cld
icebp
clc
fimul
mov
jmp
mov
stos
jb
setns
inc
and
add
mov
push
mov
push
or
mov
mov
xor
push
jne
repz
xchg
adc
xor
in
scas
dec
lahf
mov
cli
adc
add
add
add
xchg
add
iret
ficom
xor
pop
xchg
add
cli
mov
and
test
div
cmp
pop
hlt
mov
aas
cmp
dec
repz
in
pop
push
loope
gs
imul
aaa
aam
sub
inc
pop
cmp
out
xchg
push
xchg
clc
not
scas
lock
out
aaa
cmp
mov
mov
iret
neg
retf
fwait
xchg
dec
jnp
fwait
movs
push
mov
pop
shl
add
bnd
jne
out
aam
out
ret
lahf
adc
pop
push
in
xor
fdivr
mov
sub
push
aaa
or
inc
jnp
int
xchg
dec
lods
div
mov
(bad)
sub
lahf
daa
int
(bad)
or
mov
jb
dec
mov
push
rcr
jecxz
xchg
or
xlat
mov
cmps
ficomp
mov
in
ds
cmps
int3
(bad)
ret
clc
clc
lahf
je
jle
in
test
pusha
fcomp
sub
jecxz
xchg
in
xchg
in
mov
mov
xor
pop
call
mov
xor
icebp
ds
mov
mov
mov
dec
push
inc
out
lea
push
imul
adc
push
lea
jle
(bad)
cmp
repz
push
mov
je
addr16
ins
and
sbb
popf
and
dec
fidiv
outs
jns
data16
daa
sbb
shl
(bad)
mov
pop
dec
push
jp
ret
jmp
mov
or
fld
push
ja
repz
sbb
int
hlt
mov
ins
into
retf
cli
fnsave
in
retf
push
xchg
js
inc
jo
or
xchg
xor
sbb
inc
scas
pcmpgtd
jl
lods
clc
sub
cli
pop
mov
aad
sbb
dec
dec
cmp
loop
(bad)
and
mov
sub
repz
jo
cmp
pop
(bad)
cld
jne
pop
pop
fwait
and
cmc
pop
lods
aad
in
xchg
mov
fidivr
(bad)
jb
adc
clc
mov
xchg
dec
ret
sbb
mov
es
repnz
movs
sti
cmp
arpl
sbb
dec
gs
sahf
and
pop
sub
in
(bad)
xor
push
pop
push
cmp
daa
pop
popa
adc
es
repnz
xchg
icebp
mov
add
mov
stos
sbb
xchg
inc
and
jo
pop
and
rol
cmp
mov
jp
aas
inc
cmp
lock
inc
mov
pop
iret
adc
int
mov
repz
lods
mov
adc
repnz
xchg
add
retf
mov
sti
aas
loope
mov
ret
pop
js
test
mov
jo
and
mov
repnz
jb
(bad)
lods
push
je
retf
pop
inc
inc
scas
pop
jmp
(bad)
xchg
sbb
cs
movs
sub
jle
sub
nop
jns
mov
ins
out
xor
stos
push
fs
lock
mov
or
cmp
popf
and
add
xor
and
and
mov
cdq
ror
mov
shr
and
sar
and
hlt
push
and
stc
leave
push
mov
fcomp
call
xchg
nop
loopne
jecxz
push
or
xlat
xor
push
jmp
aad
loop
data16
cmp
pop
mov
fisub
popa
aaa
daa
fsubrp
mov
out
xor
(bad)
fdivr
pop
pop
mov
fst
mov
dec
inc
xchg
inc
rol
xlat
xor
mov
js
stc
sub
bound
inc
std
fdiv
lds
retf
in
push
add
cmp
mov
cwde
test
cmc
pop
lds
xor
addr16
mov
push
sbb
stos
(bad)
and
outs
stc
sbb
pop
scas
lea
inc
sahf
sbb
ffree
mov
stos
cmps
in
or
iret
loop
cmp
mov
fs
ds
xchg
pop
inc
adc
retf
sub
(bad)
mov
push
out
jmp
into
sub
sar
icebp
sub
mov
mov
mov
xchg
fiadd
pop
retf
cmp
xchg
ins
inc
mov
xchg
inc
ret
aas
retf
xchg
in
push
jp
pop
mov
cs
lods
mov
add
and
btc
test
inc
push
add
ret
dec
stos
loop
ds
mov
sbb
pop
sub
(bad)
mov
mov
loop
xor
mov
fcomp
lock
inc
sub
inc
jbe
push
(bad)
icebp
dec
xchg
mov
sub
cmp
jae
xchg
out
iret
pop
adc
popf
pusha
je
jge
dec
arpl
(bad)
push
sub
push
call
fs
lods
or
push
lods
mov
je
das
and
inc
xor
int3
xor
out
dec
loope
into
ins
outs
add
test
push
inc
dec
shr
sub
jp
add
aad
jno
inc
stos
xor
push
pop
loope
push
or
sub
mov
sub
mov
sub
sub
movs
pop
fst
out
sbb
mov
cli
inc
push
xchg
inc
test
hlt
or
push
cmp
add
mov
adc
push
add
mov
jbe
adc
shl
sub
mov
push
add
add
push
add
add
or
add
adc
and
or
(bad)
adc
pop
xchg
or
add
or
nop
add
pusha
adc
sub
sub
inc
or
add
and
fisub
mov
leave
sub
jg
xor
dec
xor
sub
xchg
push
jae
ret
push
ret
fsubrp
sbb
(bad)
fisub
pop
(bad)
popf
or
lods
arpl
ja
mov
push
retf
rcl
xor
lock
in
int3
cmp
loop
test
dec
bound
jg
sub
dec
js
in
aas
fcompp
xor
ret
gs
or
sub
dec
cdq
mov
dec
in
dec
icebp
dec
(bad)
push
mov
lods
outs
dec
xchg
pop
mov
xchg
jnp
test
mov
push
aam
sti
cmps
push
add
pop
cmps
mov
mov
(bad)
pusha
call
jmp
clc
das
jecxz
push
inc
addr16
int3
add
out
sub
retf
inc
cmps
jl
stc
arpl
aam
fstp
int
jae
push
inc
lock
mov
inc
jmp
push
repnz
sahf
bound
mov
fs
xchg
inc
push
push
inc
dec
std
inc
lds
pushf
adc
push
add
lds
sub
pop
retf
lock
fnstsw
xor
rol
adc
sbb
ss
dec
sbb
(bad)
push
mov
bound
xchg
imul
dec
cmc
mov
cmp
popa
es
ins
jno
mov
cmps
nop
sbb
ins
cmp
sub
sti
mov
pop
xor
clc
push
dec
pop
mov
out
(bad)
cmp
mov
xchg
in
aam
sub
aas
cmp
mov
les
mov
test
rcr
mov
in
and
das
mov
in
cmps
out
fst
test
into
push
sbb
jg
push
jecxz
stc
fcomp
mov
cwde
movs
push
movs
adc
icebp
scas
dec
cdq
in
cmps
mov
aam
inc
push
cmp
jno
sbb
push
ret
cs
sahf
ds
movs
push
inc
jno
adc
adc
and
mov
out
jecxz
lahf
inc
(bad)
(bad)
das
or
mov
shr
or
mov
fwait
out
jge
push
lahf
int
xchg
ds
pop
bound
shr
stc
mov
mov
push
push
xchg
sbb
sub
jae
(bad)
sub
sub
out
(bad)
pop
mov
mov
push
or
(bad)
enter
xchg
xor
sbb
mov
mov
mov
test
inc
pop
mov
fwait
lods
ins
into
dec
(bad)
aam
add
dec
add
xchg
(bad)
jbe
imul
stos
pop
mov
jae
movs
daa
xchg
adc
sahf
jo
jns
jb
outs
aaa
dec
iret
mov
in
sub
ins
jl
sub
scas
nop
mov
repz
cmps
iret
xchg
or
xchg
xor
scas
xchg
ins
test
pop
pop
jmp
fmulp
out
movs
mov
outs
hlt
std
pop
sbb
mov
fld
cld
pause
shr
cwde
fwait
push
fwait
inc
out
xchg
jecxz
mov
mov
dec
idiv
jl
mov
ja
jmp
arpl
mov
in
and
xchg
popf
inc
xor
loopne
sbb
push
mov
mov
pop
xor
out
dec
popa
xchg
sub
xor
in
pop
push
cmc
pop
in
in
repz
xor
xor
and
ins
xchg
xchg
rol
and
pop
(bad)
or
vminss
push
lock
and
lea
push
sbb
mov
out
add
pop
cmp
iret
push
jg
dec
ins
push
pop
cmc
adc
ret
test
jnp
jno
pop
fstp
repnz
ficom
cld
add
cwde
xor
ftst
xchg
out
sbb
cld
dec
imul
sub
jbe
in
(bad)
arpl
jle
cmp
int3
dec
mov
xchg
lds
add
xor
frstor
test
in
mov
aaa
sahf
inc
add
pop
xor
out
sub
xchg
inc
test
or
lods
scas
inc
pusha
bound
push
push
mov
popf
neg
test
bound
popa
pop
(bad)
arpl
ret
dec
mov
inc
in
iret
ins
and
imul
xchg
xor
add
(bad)
xchg
aaa
and
iret
mov
mov
cdq
addr16
outs
push
sahf
and
mov
in
mov
(bad)
ds
enter
jmp
unpcklps
xor
sahf
dec
es
into
push
mov
cmp
inc
cmp
loope
ret
sbb
mov
retf
(bad)
shl
ret
mov
mov
xchg
pop
pop
cmp
and
xor
test
add
mov
lahf
ror
cmp
arpl
mov
movs
movs
inc
cmp
data16
cmp
sub
jp
xor
loop
push
iret
push
shr
sti
mov
pop
ffree
icebp
dec
cmps
rol
push
mov
push
push
rol
xor
push
inc
mov
push
sub
mov
push
repnz
outs
and
mov
sub
dec
or
cmc
retf
push
repnz
push
pop
mov
std
mov
jp
ss
test
in
repz
test
xchg
repnz
leave
sbb
retf
mov
push
loopne
enter
cmp
std
xchg
jnp
ins
push
test
(bad)
call
mov
stos
xchg
std
fcom
add
(bad)
dec
(bad)
sub
ret
sahf
sbb
xlat
jl
mov
push
xor
cmp
jbe
leave
adc
out
dec
loopne
frstor
(bad)
data16
inc
sub
or
div
loop
ror
(bad)
imul
lds
sbb
sub
loope
sar
add
cmp
mov
xchg
fwait
std
ds
aam
mov
mov
call
jb
ds
cmp
xchg
inc
jns
mov
cmp
scas
shr
fstp
xchg
mov
or
repz
repz
pop
mov
repz
data16
or
sub
mov
sub
mov
sub
mov
popa
mov
scas
push
mov
mov
xchg
fidivr
shl
push
add
rcr
xchg
and
nop
add
push
adc
mov
mov
jmp
or
sub
sub
cmp
pop
add
add
or
add
mov
test
or
push
or
sub
mov
adc
sub
mov
sub
mov
push
add
inc
add
dec
push
and
jl
jecxz
dec
sbb
pop
inc
imul
retf
gs
(bad)
sub
xchg
mov
gs
in
push
in
cli
mov
lahf
cdq
pop
fbstp
ds
cmps
dec
scas
lahf
cs
mov
(bad)
sub
pop
dec
and
xor
sub
scas
xchg
add
cmps
inc
arpl
shl
dec
xchg
movs
les
scas
pop
mov
mov
pop
and
fsubr
and
lahf
xchg
aad
retf
lahf
mov
or
push
icebp
sub
inc
mov
leave
ja
mov
pop
cwde
adc
jo
dec
add
xchg
xchg
iret
pop
add
fsubr
out
dec
aaa
dec
sub
dec
mov
loop
adc
add
mov
mov
adc
outs
fdivr
inc
mov
daa
mov
pop
pop
xor
mov
add
pop
mov
bound
imul
jp
mov
cmp
scas
cmp
aam
cmc
out
pop
call
jns
jns
jae
sub
int3
aas
js
arpl
pushf
inc
or
in
or
add
(bad)
jmp
jp
and
jl
icebp
stos
dec
or
outs
and
pop
dec
and
cmps
repz
mov
imul
fwait
mov
shr
cmp
push
sub
scas
ror
or
or
test
cld
out
outs
sub
(bad)
jecxz
sbb
sub
mov
mul
mov
xchg
in
cmps
and
add
neg
mov
cmp
pop
outs
movs
(bad)
(bad)
mov
jle
jo
aas
das
pop
sub
popf
pop
(bad)
loop
inc
inc
lea
fdivr
clc
daa
enter
arpl
fcmovne
test
retf
sub
jne
movs
gs
hlt
sbb
dec
dec
sub
cmp
cmps
pop
enter
int
into
pusha
mov
imul
and
sbb
(bad)
(bad)
int
lods
sbb
mov
lock
fwait
popa
shl
jmp
xchg
ja
xchg
adc
jg
mov
outs
out
scas
jg
fisub
int3
std
push
cmp
mov
icebp
outs
les
rcr
or
push
and
xor
mov
sub
cmp
fsub
out
cmp
xor
gs
movs
movs
mov
cmp
cmp
int3
xchg
push
aaa
pop
push
arpl
(bad)
mov
mov
cmp
cmp
pushf
fs
mov
mov
inc
jecxz
mov
dec
mov
daa
cdq
push
dec
test
fld
enter
loop
xchg
fdivr
stos
cmp
int3
ror
push
jo
add
pop
mov
cmps
jb
outs
ss
enter
sahf
xchg
dec
(bad)
mov
mov
pop
aas
jmp
popf
mov
or
bnd
movs
(bad)
sbb
xchg
inc
mov
(bad)
add
push
xor
movs
xchg
into
test
test
iret
in
pusha
out
jae
enter
aas
or
es
pop
cmp
iret
cmp
pop
fld
out
fldenv
jns
adc
mov
(bad)
pop
mov
xchg
mov
inc
daa
int
rcr
push
jp
cmc
aas
fld
push
arpl
ins
shl
js
addr16
imul
ins
sbb
ret
retf
icebp
into
stos
jnp
or
push
xchg
pop
mov
sbb
pop
out
add
jecxz
retf
(bad)
das
mov
psubsw
mov
sbb
je
inc
sub
jecxz
inc
inc
dec
pop
or
in
mov
into
jp
test
jmp
outs
(bad)
int
push
mov
popa
imul
xchg
adc
push
cmp
pop
and
jbe
mov
outs
sbb
mov
adc
fstp
repnz
jbe
dec
xchg
nop
stos
mov
mov
mov
dec
movs
imul
movs
fmul
test
xor
xchg
sti
mov
jg
xor
mov
push
dec
pop
jb
dec
jo
jle
push
in
and
(bad)
jmp
outs
cmp
mov
out
aad
imul
cld
sbb
jmp
jmp
jno
loope
xor
xchg
pop
jle
jae
test
stc
popf
jbe
push
js
lea
push
xor
cs
aaa
dec
sub
sbb
pushf
loop
jp
sti
shl
and
xchg
imul
rcl
mov
mov
sub
dec
xor
out
clc
imul
addr16
pop
mov
xchg
and
jns
xchg
lds
test
lods
idiv
mov
mov
xchg
cmp
mov
cmp
pop
out
or
outs
hlt
jmp
adc
mov
pop
pop
jns
movs
mov
into
or
mov
mov
xchg
push
aam
inc
movs
ret
sbb
in
pop
jmp
xor
rol
mov
ret
cdq
sbb
xor
cmp
gs
movs
fadd
xchg
rcr
js
mov
and
push
sub
icebp
ret
xor
mov
int3
or
mov
fisubr
lods
cmp
ja
lahf
pop
clc
pop
pop
mov
dec
sbb
mov
pusha
or
out
test
cmps
icebp
xchg
sar
jecxz
pop
and
rcl
test
mov
adc
inc
lods
ror
retf
aas
or
sbb
xchg
fimul
mov
and
into
int
or
mov
arpl
push
push
cmp
imul
in
rcl
pop
cwde
lock
and
pop
inc
jl
repz
inc
xor
aaa
ss
ficom
dec
out
mov
imul
nop
cmp
mov
push
mov
dec
jl
icebp
push
test
xor
movs
stos
gs
xchg
fwait
jnp
sti
fldenv
imul
mov
je
aad
out
add
scas
mov
cs
mov
cmp
sti
iret
gs
inc
or
cld
xchg
in
mov
out
ja
add
in
outs
faddp
dec
shl
pop
cmps
mov
push
in
xor
gs
mov
ins
pop
xchg
mov
lahf
test
cld
mov
popa
pop
adc
cwde
ret
(bad)
pop
popa
in
enter
test
cmp
imul
clc
jnp
xlat
inc
lock
fucomi
call
(bad)
push
loop
aam
jl
or
push
out
push
in
jp
dec
lahf
inc
(bad)
cmps
inc
jecxz
in
pop
lock
loop
cmp
(bad)
ror
dec
jl
xchg
(bad)
hlt
jbe
pop
mov
test
mov
mov
scas
loop
daa
dec
repnz
cli
frstor
jmp
push
cmp
sahf
cmp
jno
shl
cmp
hlt
sbb
montmul
cmps
add
add
push
add
add
push
add
add
push
add
call
cmp
call
push
add
push
pop
inc
or
push
and
inc
(bad)
push
adc
push
or
sub
mov
sub
mov
adc
sub
mov
add
mov
add
add
add
shl
and
mov
xlat
in
cli
sahf
test
dec
lods
fld
arpl
or
pushf
push
cmps
call
arpl
test
daa
data16
or
mov
stc
loop
call
pop
repz
jno
lods
and
and
mov
add
rol
inc
add
mov
ja
stos
pop
test
loopne
in
add
xchg
rcr
inc
repnz
imul
pop
cmp
add
lock
out
and
js
int3
jg
inc
mov
add
pop
jecxz
inc
sar
sbb
aas
xor
scas
jno
push
call
pusha
mov
nop
daa
sub
or
retf
sti
leave
fs
mov
fcomp
and
sbb
and
not
in
call
jecxz
mov
stc
xchg
xor
fwait
inc
ins
enter
and
push
psubsb
(bad)
xor
push
cli
lahf
mov
sbb
lea
ins
sub
mov
das
aad
and
arpl
lahf
cmc
jno
mov
scas
xlat
mov
movs
daa
jns
push
js
lds
fwait
jge
jp
xor
sbb
jmp
jno
clc
push
popa
loope
arpl
sub
push
cmp
lds
sbb
cdq
cmp
mov
add
imul
pusha
ins
(bad)
retf
mov
fstp
inc
push
jle
(bad)
outs
xchg
int3
jbe
xchg
ffree
adc
iret
pop
jg
pop
cld
push
ds
aam
and
cs
outs
jecxz
mov
(bad)
fistp
xlat
jbe
jmp
(bad)
adc
aam
jge
push
hlt
into
inc
inc
mov
(bad)
bound
inc
outs
jb
cmp
sbb
sub
stc
arpl
stos
pop
sub
mov
test
or
retf
pop
adc
xchg
pop
fstp
adc
mov
mov
bound
mov
shr
mov
in
ror
mov
mov
sbb
pop
(bad)
ret
add
mov
dec
inc
lock
mov
pop
fcmovne
mov
add
lahf
jbe
pop
inc
add
pop
sahf
ss
xor
rcr
jae
jb
and
add
xchg
(bad)
push
(bad)
outs
adc
mov
jl
cmp
mov
sub
mov
xchg
sbb
retf
das
jbe
in
push
push
test
pop
dec
arpl
popf
ja
xchg
inc
jo
mov
fnstsw
shr
(bad)
mov
nop
stos
aas
leave
mov
pop
je
inc
das
sbb
outs
(bad)
dec
mov
sub
mov
xor
test
into
xchg
enter
retf
sahf
popa
xchg
cmp
ss
outs
out
sbb
idiv
dec
(bad)
sub
loop
xor
hlt
mov
(bad)
std
lods
call
std
mov
xchg
loope
jnp
add
sbb
pop
xchg
dec
(bad)
retf
xchg
cmps
(bad)
aam
lea
popf
add
adc
xor
xor
ficomp
mov
xor
aas
jnp
xchg
or
pop
dec
mov
out
iret
cmps
xchg
and
loop
jge
dec
mov
ins
in
fcmovnu
cs
xor
jb
shl
dec
aas
das
pop
mov
movs
out
dec
adc
jne
les
fadd
jbe
mov
jbe
inc
repz
in
jno
lods
jp
mul
fidivr
(bad)
out
test
fimul
ss
or
add
sti
cwde
pop
ins
xor
and
test
mov
not
mov
push
inc
arpl
retf
not
jmp
mov
xor
imul
rcr
aas
fistp
push
nop
retf
mov
fdivrp
lahf
addr16
cmp
std
add
jl
ds
inc
mov
fdiv
mov
cld
lods
jns
jnp
movs
dec
inc
retf
es
jl
pop
jnp
aaa
int3
aad
lock
out
das
fstp
adc
loopne
dec
sbb
retf
mov
fisubr
add
mov
push
shl
enter
imul
xchg
add
inc
cmp
mov
jl
mov
dec
ss
jecxz
loopne
mov
ds
cli
push
ja
cs
mov
fwait
pop
fnstenv
sbb
xor
inc
out
jnp
repz
sbb
iret
cs
jbe
or
aas
aas
jb
dec
push
loope
call
dec
ror
mov
retf
xchg
sub
clc
pop
xlat
push
add
ja
imul
cmps
xor
sbb
hlt
mov
setge
xor
repnz
cmp
and
stc
fwait
out
lds
pop
adc
int3
pusha
faddp
sar
ds
cmp
push
inc
cmp
lods
cmp
xor
mov
and
stc
sub
pop
pop
or
test
sbb
repnz
pop
test
xchg
cmp
adc
loope
push
dec
fdivr
mov
cmp
or
xchg
imul
mov
cmps
retf
adc
fnstsw
pop
mov
inc
in
adc
arpl
js
dec
and
iret
mov
mov
inc
aas
gs
loopne
xchg
jle
push
xlat
mov
push
test
repnz
jnp
pop
inc
retf
out
pop
js
ret
(bad)
sbb
or
bound
mov
fwait
ins
mov
les
sbb
or
loopne
ror
mov
shr
not
xchg
mov
gs
mov
(bad)
mov
dec
jl
mov
or
xor
lock
jbe
loope
loope
cwde
mov
sar
imul
icebp
lock
push
aam
imul
push
loop
mov
inc
or
nop
(bad)
(bad)
mov
stos
gs
jno
mov
jb
into
adc
and
pop
shl
pop
test
and
das
sub
mov
add
jge
js
jns
out
mov
leave
test
mov
pop
mov
adc
scas
rol
lds
out
test
test
out
push
cmp
leave
mov
xchg
ins
ins
test
or
xor
(bad)
push
push
jno
cmp
enter
mov
(bad)
mov
jecxz
xchg
lea
imul
cmp
icebp
fist
xchg
and
jge
es
int
push
pop
lock
repz
jne
fisttp
std
mov
mov
jg
push
fdivr
lahf
pushf
mov
cdq
inc
jne
cdq
mov
ins
jg
inc
jno
icebp
mov
fbld
lahf
(bad)
mov
sar
xor
scas
xchg
sub
(bad)
mov
rcr
mov
xor
es
and
jmp
test
leave
dec
dec
mov
cmp
rcl
loopne
dec
mov
pop
mov
mov
push
dec
push
fdivr
and
and
and
mov
fcomi
lahf
cwde
jnp
mov
jnp
cmps
fdivr
dec
(bad)
call
xchg
push
or
stos
clc
shr
and
fist
jae
int3
mov
sbb
ds
jp
xlat
mov
sub
cmp
and
xchg
hlt
fcom
inc
inc
repz
ins
test
push
repz
cmp
or
push
repnz
int3
lods
adc
aad
jbe
aas
mov
inc
mov
ins
or
mov
and
aad
xchg
(bad)
into
fbld
jle
ja
mov
inc
add
adc
iret
imul
xchg
sbb
jp
cmp
mov
add
iret
(bad)
loope
out
loop
outs
jmp
popa
push
repz
mov
sar
sbb
or
shl
jnp
in
gs
js
add
inc
add
add
add
push
add
add
ret
mov
lods
pop
fst
je
adc
sub
test
sub
cli
or
or
add
inc
add
add
add
push
add
add
xchg
add
add
mov
adc
pop
add
cmc
pop
jecxz
addr16
rcl
in
and
pop
xor
push
jo
js
sub
dec
clc
mov
(bad)
imul
js
inc
adc
(bad)
fdivr
mov
mov
test
ins
jg
dec
or
sub
aas
mov
inc
adc
vminpd
clc
xchg
iret
mov
ds
inc
or
into
loopne
mov
leave
cmp
sbb
mov
test
ds
ins
icebp
out
out
retf
dec
inc
add
xchg
jle
fadd
inc
jnp
xchg
repz
in
or
shl
jl
mov
imul
(bad)
fdivr
pop
and
xor
cmp
in
sub
scas
mov
sub
cmp
addr16
xchg
inc
cmc
jle
js
jmp
or
sub
mov
ins
add
or
outs
mov
jb
mov
(bad)
cdq
mov
rcr
xchg
add
sub
push
(bad)
mov
scas
test
pop
xor
lahf
lods
ds
jae
lods
pop
movs
ja
lds
lds
inc
and
push
inc
gs
xor
out
pop
add
shl
imul
ds
outs
or
cmps
in
pop
mov
sub
mov
xchg
sub
fnstcw
in
cmp
scas
lds
shr
loope
shr
lds
push
fcomp
jo
repnz
mov
mov
push
ror
outs
cwde
push
mov
loop
das
ja
std
dec
shl
sbb
mov
(bad)
fnstsw
in
push
mov
aad
dec
jae
div
je
inc
inc
add
add
cmps
(bad)
sahf
sbb
das
cmps
mov
sub
ds
jb
inc
sbb
xor
pop
jns
add
cmp
add
push
push
mov
loope
push
jmp
mov
mov
pop
sbb
ins
in
pusha
jb
xchg
and
dec
mov
mov
data16
pop
mov
retf
mov
or
cmp
jnp
iret
loope
cdq
sahf
ins
scas
jmp
jle
jg
jmp
push
icebp
cmps
repnz
fucomp
cli
xchg
inc
pop
jmp
idiv
lahf
lahf
xchg
aaa
sub
sub
and
mov
mov
jmp
(bad)
sub
mov
pop
fmul
in
sbb
adc
and
sbb
inc
push
push
inc
push
icebp
(bad)
mov
or
int3
sbb
int
and
shl
pop
pop
into
mov
inc
or
add
push
push
into
jbe
push
xor
addr16
and
xlat
jbe
lea
mov
xor
in
mov
jbe
xor
or
cwde
jg
cmps
cs
lahf
or
jb
clc
mov
xor
scas
cld
mov
fadd
sub
jb
shr
aaa
enter
push
pop
jle
mov
jle
int
std
sbb
fst
mov
ins
xor
inc
das
cli
pop
ret
into
gs
push
pushf
ins
mov
push
jb
int3
xor
aaa
addr16
loope
lods
loope
adc
imul
sub
scas
sub
mov
popf
mov
ds
and
xor
aad
cmp
pop
mov
cmc
aaa
data16
icebp
adc
mov
mov
and
es
mov
xchg
mov
fcomp
push
retf
out
xchg
mov
jecxz
jle
push
sti
pushf
cmps
movs
cld
cmp
pop
scas
ret
xor
cdq
cmp
loop
repnz
repnz
pusha
xchg
mov
mov
xor
and
adc
xchg
arpl
and
push
jle
jnp
xchg
fidiv
imul
cmp
in
mov
cmps
fimul
sbb
mov
jp
in
iret
mov
loope
mov
jmp
imul
jb
fmul
sbb
mov
out
repnz
lahf
mov
out
rcl
mov
fsub
dec
mov
xchg
or
mov
mov
ss
inc
(bad)
repnz
test
test
jle
dec
mov
out
clc
dec
rcl
data16
pop
mov
lds
or
xchg
mov
xlat
retf
xchg
std
pusha
jbe
mov
iret
mov
(bad)
je
push
sbb
daa
shl
or
add
pop
pop
push
fs
rcr
jmp
gs
sub
xchg
sahf
movs
add
hlt
xlat
out
and
jp
(bad)
clc
push
lock
or
mov
gs
mov
lds
das
ins
ins
mov
add
arpl
sahf
inc
dec
xchg
xchg
shr
xlat
lds
push
icebp
mov
jmp
jo
cli
movs
int
sahf
stos
cmps
fld
pop
fmul
push
fcmovu
and
jns
xchg
sub
xchg
idiv
outs
cwde
pop
dec
neg
(bad)
sbb
movs
cmp
psrlw
movs
sub
(bad)
pop
mov
mov
(bad)
iret
jae
fst
inc
lock
fadd
lea
pop
pop
lds
cwde
loope
xor
repnz
mov
idiv
add
lods
fcomp
sahf
xchg
add
mov
cld
retf
xor
movs
xchg
and
mov
repnz
mov
cli
dec
jp
xchg
mov
and
popf
sub
imul
jns
mov
stos
mov
cmp
sbb
push
adc
sub
sub
push
pop
lods
ret
out
or
fstp
out
data16
les
imul
xor
add
addr16
jmp
and
pop
mov
fist
add
jmp
sahf
(bad)
popf
aam
out
jle
icebp
cmps
mov
adc
push
inc
gs
js
push
out
outs
push
stc
mov
lahf
cs
lds
loop
lods
cmp
lock
ret
mov
ds
dec
sahf
(bad)
jae
jne
lahf
cdq
ins
or
add
mov
out
jle
lahf
imul
ret
outs
fcomp
xchg
movs
push
out
fisub
push
mov
cdq
xchg
inc
ins
imul
iret
ins
mov
cmps
inc
pop
fcmovne
jno
push
mov
cmp
inc
ins
lods
es
sub
or
out
aad
inc
aas
pop
xor
not
fiadd
mov
fimul
xchg
fwait
sbb
add
and
fwait
int
out
repnz
lods
xor
jmp
mov
jns
push
sar
jb
scas
lods
mov
jl
mov
stos
scas
loope
jb
bound
and
dec
pusha
mov
data16
retf
cmp
jl
xchg
or
or
retf
pop
add
xchg
pop
dec
bound
movs
mov
repz
int
xor
xchg
inc
and
int3
cmps
sbb
pushf
in
sub
popa
popa
stos
addr16
and
push
xchg
fstp
inc
sbb
push
dec
movs
sbb
mov
retf
pop
push
or
sbb
mov
sahf
das
sub
cmp
repnz
mov
aaa
sub
mov
retf
jp
hlt
fwait
xor
xor
es
sahf
dec
adc
xchg
sbb
and
sbb
aas
mov
push
dec
fist
arpl
adc
xor
push
dec
mov
popa
mov
out
pop
fstp
or
ficom
gs
test
daa
fcmove
mov
adc
rol
std
mov
xchg
mov
cmp
cmp
aas
sub
cmp
mov
mov
stc
leave
and
popa
xchg
sub
out
xcrypt-ofb
cmps
test
inc
sbb
jae
dec
jge
xchg
xchg
xor
mov
mov
xor
push
sub
fwait
inc
sub
jbe
sbb
mov
movs
sbb
aam
das
sbb
adc
inc
jmp
push
dec
jg
repz
xor
(bad)
jmp
mov
rol
sub
sbb
in
mov
xchg
js
(bad)
lahf
fdecstp
jp
fmul
sub
popf
ret
lea
iret
mov
in
jns
cmp
icebp
sbb
out
stc
and
outs
and
pushf
outs
iret
aam
add
loop
adc
push
dec
push
jg
pop
mov
add
sahf
dec
sub
xor
mov
stc
outs
sti
scas
sbb
js
and
sti
push
out
lds
xor
lea
ret
shl
stc
shl
dec
mov
(bad)
int3
mov
mov
mov
mov
jmp
(bad)
pop
add
xor
sbb
add
inc
add
add
add
push
add
add
sbb
add
inc
jb
mov
xchg
pop
inc
add
jne
push
mov
add
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
push
or
sub
test
ret
xchg
mov
sbb
test
fwait
add
sub
push
clc
cdq
icebp
(bad)
sub
mov
aam
int
dec
lods
leave
sub
sbb
scas
sub
push
mov
in
or
jb
sub
dec
inc
aam
sbb
icebp
push
jecxz
pop
shl
(bad)
stc
das
sbb
data16
(bad)
shl
ins
add
ja
stc
push
jmp
dec
call
aam
(bad)
fdiv
xchg
push
add
xor
(bad)
mov
int3
jp
xchg
int3
mov
pop
int3
hlt
dec
xlat
pop
sbb
jge
push
xchg
movs
cdq
inc
ja
jbe
jae
mov
or
out
es
dec
cmps
std
data16
aas
jns
movs
cli
sub
cld
fisub
jp
enter
rol
inc
add
add
jl
jno
pop
(bad)
addr16
sbb
sub
fisubr
mov
xchg
ret
sub
sbb
sbb
mov
mov
pop
sti
inc
xchg
mov
(bad)
aas
xor
push
mov
xor
repz
imul
std
mov
in
loope
adc
xchg
(bad)
and
xchg
icebp
movs
cmp
test
in
cwde
daa
push
cs
xchg
aaa
and
inc
rcl
mov
mov
addr16
retf
les
(bad)
icebp
arpl
push
call
mov
jns
sub
cmps
fimul
in
or
stos
shr
call
aad
push
adc
xchg
sbb
lahf
arpl
dec
inc
sbb
(bad)
and
(bad)
fwait
cmps
dec
bound
pop
push
mov
in
inc
repz
cdq
mov
push
pop
into
push
out
adc
outs
pop
and
aad
pushf
or
(bad)
jle
mov
mov
pop
sbb
mov
mov
sbb
test
cs
aaa
and
and
test
aam
pop
jecxz
sub
xor
ret
or
sbb
pop
call
jmp
pop
cmc
cli
in
cmp
adc
and
dec
push
inc
mov
imul
mov
aaa
push
pop
xor
mov
loope
lock
and
popf
dec
repz
mov
ins
mov
fsubr
fwait
es
stc
xor
in
pop
imul
out
sar
ret
fist
lods
sub
mov
in
sub
inc
jbe
jl
mov
enter
ins
or
adc
in
popf
int
jp
xlat
lds
cmp
scas
fisub
(bad)
mov
nop
enter
or
dec
dec
enter
jecxz
or
pop
icebp
push
les
leave
or
stc
ins
arpl
test
dec
out
in
test
repz
retf
lds
xlat
ins
outs
ret
mov
les
loop
es
test
jns
jmp
fwait
push
pop
dec
xchg
adc
stc
int
cmps
call
pop
rol
cmp
fsub
sbb
sar
jae
mov
sub
or
out
jae
cmps
aaa
lods
clc
dec
push
mov
fcmovb
in
jge
or
sahf
(bad)
out
cdq
(bad)
xchg
out
pop
mov
enter
lods
cmp
les
and
ror
cmp
cmp
ja
scas
cld
or
nop
add
and
shr
dec
gs
ja
fidivr
cwde
add
ret
push
repz
pop
sub
pop
int3
add
(bad)
retf
fisubr
fimul
(bad)
pop
(bad)
mov
jno
fldenv
imul
ins
jge
jle
sbb
adc
dec
les
dec
cmps
add
cwde
mov
xor
jbe
add
sbb
fcmovb
xchg
cld
jnp
xchg
sbb
add
xchg
lods
stos
inc
retf
out
mov
jno
ds
hlt
sti
ins
inc
inc
dec
mov
cmp
shl
popf
(bad)
push
sub
ret
sbb
and
retf
out
add
icebp
mov
stos
pop
push
shl
repz
in
pop
dec
dec
movs
shr
xchg
fldcw
imul
add
loop
inc
mov
leave
fidivr
test
pop
fdiv
xor
mov
pop
push
mov
leave
daa
retf
fsubr
and
sbb
js
jle
fist
aaa
dec
jecxz
cmp
lock
shr
and
jnp
mov
mov
je
dec
sub
loope
enter
jecxz
and
sub
jecxz
push
adc
mov
cmp
je
cmp
pop
and
in
push
les
cmp
inc
loopne
int
sub
dec
pop
push
sbb
sub
xor
adc
xor
cmpxchg
or
fild
inc
fwait
mov
ss
popa
js
fbstp
cmp
lock
les
pushf
jno
repz
(bad)
lock
lods
cs
addr16
cs
lea
scas
in
cmps
mov
xchg
push
fs
rcr
iret
loope
jno
sbb
fcmovbe
cmp
jnp
mov
mov
xchg
fist
arpl
into
ror
out
cmp
pop
and
mov
xchg
adc
test
xor
ficom
adc
or
sbb
xchg
cwde
call
out
and
adc
or
mov
fcom
iret
mov
sub
ficomp
and
out
xchg
pop
(bad)
xchg
mov
aam
imul
cmp
cld
fist
sub
push
mov
call
int
xlat
mov
push
mov
or
jl
jmp
sbb
dec
ja
ins
stos
lds
fnsave
jmp
movs
mov
jmp
push
jp
mov
ss
dec
sbb
stos
jne
inc
fnstsw
pop
hlt
shr
add
dec
sbb
sub
add
xor
sub
call
or
gs
mov
mov
inc
sub
inc
(bad)
dec
push
push
stos
mov
ficomp
xor
out
outs
pusha
mov
retf
mov
inc
or
sbb
and
les
shl
test
(bad)
sub
repz
arpl
jl
arpl
popa
test
pop
pop
pop
ret
cmp
leave
test
fwait
outs
jb
sub
test
cmp
and
sbb
dec
cmp
cmp
outs
fs
(bad)
fisttp
mov
mov
adc
movs
sub
xor
movs
push
mul
and
outs
ss
sub
shl
pop
mov
mov
shl
int
sub
les
xor
cmp
dec
ds
popa
cdq
pop
dec
jns
aas
es
js
xor
push
push
ins
xchg
dec
js
push
inc
inc
popa
neg
sbb
jo
gs
mov
addr16
cmp
mov
movs
retf
or
shr
into
div
sbb
inc
repz
(bad)
ss
fwait
and
(bad)
je
mov
loope
pushf
(bad)
ja
push
sar
fild
(bad)
retf
mov
mov
test
pop
cmps
xchg
fild
sbb
sub
out
test
fstp
mov
stos
push
lahf
sub
pop
out
je
cmps
fwait
lods
fcompp
fcomp
pop
mov
cmps
inc
inc
repz
dec
stos
retf
outs
xchg
jp
push
mov
xor
stos
call
(bad)
rcl
mov
scas
xor
shr
popf
lods
(bad)
iret
(bad)
mov
cmp
bound
and
int
inc
sti
inc
fdivr
out
ret
dec
aad
mov
mov
xchg
push
lods
mov
jl
ss
xchg
mov
data16
adc
jnp
rcr
cld
and
or
mov
mov
mov
out
ins
sbb
shl
cwde
jl
fisub
mov
add
imul
push
std
setp
or
cmp
xor
inc
push
scas
sub
shl
xor
lahf
lfs
dec
mov
ror
push
pop
mov
push
lahf
cmc
pop
dec
popf
popa
shl
daa
int3
and
movs
jp
loope
iret
mov
test
cmc
mov
stos
pop
pop
popf
inc
fisttp
add
pop
mov
push
xchg
aaa
mov
adc
lea
jb
dec
ficomp
inc
loop
xor
mov
jno
mov
fisubr
sahf
outs
out
out
mov
jae
xchg
sahf
push
mov
push
lea
ficomp
popa
(bad)
lods
gs
pop
cmp
pop
(bad)
fwait
aam
xor
jge
iret
or
mov
sub
lea
xchg
mov
(bad)
outs
pop
(bad)
xor
scas
mov
jl
cmc
add
ror
mov
adc
lahf
ret
movs
jge
(bad)
pop
mov
test
(bad)
shl
inc
sub
xlat
and
shl
jp
popf
cmp
int3
push
mov
in
ins
outs
push
out
mov
cld
jl
mov
xchg
ret
sub
adc
sbb
lods
push
mov
into
in
arpl
push
xchg
jno
jmp
sbb
dec
mov
jns
daa
(bad)
imul
mov
pop
jns
mov
inc
add
add
inc
add
add
add
ret
inc
or
sub
pop
aas
mov
ds
cmp
or
sub
mov
sub
mov
add
mov
sub
mov
sub
mov
sub
mov
sub
mov
dec
add
or
jae
dec
adc
cld
movs
mov
fucomip
mov
add
call
xchg
adc
stc
(bad)
aad
das
arpl
sub
jns
xchg
mov
inc
pop
pop
in
dec
outs
sahf
push
xchg
shl
lahf
add
icebp
pop
inc
adc
inc
mov
mov
mov
retf
rol
iret
addr16
js
pop
mov
mov
(bad)
daa
pop
lahf
fld
lahf
mov
jb
imul
das
xchg
and
js
push
dec
daa
mov
add
imul
cmp
(bad)
mov
mov
fstp
mov
xchg
outs
retf
test
pusha
stc
jle
aas
cmps
pop
ud0
ins
dec
out
test
jl
push
cmp
test
sub
test
repz
ds
stc
dec
fmulp
imul
loopne
push
or
add
sub
xchg
(bad)
hlt
retf
imul
and
cmp
sbb
test
pushf
scas
lods
jl
pop
out
loope
hlt
imul
retf
add
inc
pop
and
xor
cdq
jl
dec
jno
add
inc
jmp
and
jp
mov
jbe
or
sub
stos
mov
mov
or
mov
xor
aas
inc
and
loop
ins
jmp
xchg
cld
xor
and
jmp
ins
ins
arpl
mov
push
and
add
xor
jne
fdivr
push
retf
mov
and
in
inc
pop
adc
int3
stc
shl
das
mov
push
ins
outs
outs
mov
hlt
leave
jno
push
(bad)
int
lahf
je
xchg
shl
pop
ins
add
xchg
cmp
js
ret
into
mov
je
pushf
aaa
cmp
js
push
mov
les
xchg
jae
fnstcw
mov
arpl
lods
rol
cmp
ins
adc
movs
add
fbld
add
leave
dec
pop
movs
inc
xchg
fwait
dec
pop
iret
inc
loop
std
cmps
mov
mov
not
(bad)
not
jmp
(bad)
sbb
mov
add
cmp
mov
push
daa
mov
dec
(bad)
lahf
ror
xchg
test
ja
outs
jne
gs
or
fistp
shr
jae
out
xor
ins
(bad)
xchg
push
xchg
les
xor
aas
data16
jge
jmp
mov
inc
test
mov
mov
inc
lock
sub
int3
and
imul
movs
sbb
push
fst
popf
(bad)
rep
sti
inc
fucomp
(bad)
cwde
xchg
adc
jmp
bound
sbb
cld
out
mov
adc
cmps
clc
data16
neg
pop
les
sub
xlat
push
scas
(bad)
push
retf
repnz
push
push
imul
jne
cmp
ret
mov
dec
ret
shr
fisub
outs
outs
je
or
mov
adc
outs
sahf
jns
and
mov
mov
xchg
push
mov
adc
dec
dec
imul
add
imul
out
rol
fxch
jecxz
xchg
cmp
pop
js
frstor
mov
xchg
(bad)
jmp
dec
ror
add
mov
inc
popf
mov
mov
jns
add
das
test
push
xor
and
cmp
sub
cwde
ret
dec
sub
lahf
arpl
jp
es
mov
sub
cld
mov
mov
adc
shr
pop
dec
pop
rcl
mov
dec
sbb
push
jg
mov
push
jo
push
mov
test
cmp
cmp
xchg
ss
repz
jg
pop
gs
sbb
mov
adc
mov
adc
xor
test
cmp
das
int3
xor
add
xor
call
xor
ret
cs
(bad)
addr16
push
and
mov
sbb
sbb
lea
lock
mov
sub
iret
adc
(bad)
loop
dec
inc
cmp
inc
cli
mov
add
fdivr
cli
movs
jmp
dec
cmp
mov
shr
jnp
mov
cmp
sar
inc
mov
sti
int3
bound
jae
(bad)
outs
js
cmc
movs
int
inc
in
mov
xchg
dec
mov
into
xchg
mov
ret
mov
inc
test
inc
mov
dec
out
fs
inc
sub
aas
scas
imul
pop
call
or
scas
push
repnz
jo
inc
cld
mov
cmc
mov
loop
shl
dec
mov
pop
outs
mov
jno
repz
enter
adc
sbb
jns
inc
xchg
(bad)
loope
int
add
out
xchg
cmp
jae
xor
out
or
pop
pop
fcom
push
imul
add
into
xor
add
out
xchg
cmp
(bad)
sub
pop
push
jno
adc
int3
adc
pop
int
call
and
fimul
pop
mov
fucomi
jle
jl
ins
push
jecxz
jno
adc
push
fstp
int3
fiadd
mov
leave
sub
cmps
test
cli
xor
lods
imul
sub
lahf
call
pop
mov
cmc
mov
retf
stos
xchg
xor
xchg
pop
in
in
cmp
(bad)
retf
nop
mov
repz
add
pop
stos
inc
push
and
cmp
leave
pop
sbb
sbb
inc
iret
in
sbb
mov
and
add
jb
lea
clc
push
push
jo
in
test
xchg
xor
jbe
sub
aam
mov
jge
popf
mov
jnp
mov
into
push
repnz
shl
stc
jp
add
iret
fld
retf
call
jae
pop
sar
and
out
popa
cmp
mov
into
mov
leave
push
clc
out
push
std
fs
dec
jl
in
mov
jge
mov
lods
js
rol
jmp
hlt
outs
xchg
push
aad
aaa
sub
adc
in
mov
daa
xchg
adc
outs
jns
(bad)
movs
test
arpl
mov
(bad)
call
cmps
int
sub
mov
jo
or
mov
dec
mov
repz
mov
shr
fdiv
sti
fadd
jbe
ds
imul
pop
mov
cwde
mov
xchg
in
add
aaa
enter
dec
fwait
pop
sub
push
imul
push
outs
idiv
inc
icebp
add
ss
xchg
scas
lea
jbe
fst
in
or
fucomip
xor
and
in
or
jae
aam
stos
lods
mov
test
jge
jge
loop
lahf
mov
out
les
(bad)
xlat
adc
outs
or
cdq
fcom
mov
sahf
imul
dec
in
inc
dec
test
lea
and
cmc
ffreep
mov
sbb
mov
pop
jmp
inc
ret
mov
sbb
in
in
push
loopne
jmp
xor
fcomp
imul
xchg
lahf
daa
and
imul
mov
aam
pop
scas
cmp
mov
push
mov
cmps
xchg
adc
jnp
add
jge
and
int3
cmps
in
les
clc
xor
cli
fisubr
out
out
xor
adc
jns
xor
jno
mov
or
sub
sub
mov
(bad)
push
(bad)
mov
pop
dec
xlat
test
adc
mov
loope
xlat
jno
retf
dec
mov
arpl
cmp
mov
mov
cs
(bad)
jne
cmp
pop
outs
(bad)
cmp
mov
(bad)
xchg
inc
js
pop
push
fsubr
mov
mov
mov
mov
icebp
mul
sbb
pop
clc
and
jle
in
out
std
adc
rol
mov
mov
dec
cmc
inc
push
mov
or
scas
fwait
in
test
pop
ficom
sub
in
les
mov
gs
adc
cmc
or
and
mov
fisubr
or
mov
lahf
dec
cli
mov
mov
fisubr
stos
pop
pop
ret
sbb
mov
push
fimul
out
neg
xchg
es
cli
(bad)
and
sub
lods
jg
push
jno
push
aas
dec
stos
mov
jecxz
test
outs
cmps
mov
inc
pop
push
mov
int
pop
int3
push
out
pop
(bad)
jo
push
dec
je
fidiv
mov
ins
je
sysexit
scas
stos
imul
xchg
fadd
jbe
mov
fstp
cmps
imul
outs
sbb
push
inc
scas
fld
mov
xchg
sbb
mov
in
shl
addr16
and
xor
frstor
dec
inc
push
das
in
es
xchg
mov
push
mov
cmc
jecxz
sub
mov
pop
repz
cli
pop
sar
dec
mov
mov
dec
mov
push
in
mov
xchg
jno
in
scas
int3
stos
aam
ja
xchg
ds
xchg
inc
pop
fstp
mov
xor
arpl
cli
mov
or
inc
icebp
addr16
imul
mov
mov
sti
mov
out
out
xchg
sbb
mov
repnz
ss
xor
dec
mov
pop
icebp
test
adc
retf
mov
mov
rol
xchg
pop
cmp
adc
dec
arpl
lods
jne
sub
bound
ins
out
dec
or
sahf
push
xchg
test
outs
cli
push
cmp
movs
xchg
outs
bound
sbb
jo
stc
cdq
inc
xchg
div
cwde
xor
jbe
mov
rcr
or
push
leave
mov
mov
jno
jge
xor
inc
in
stc
test
enter
out
stc
outs
addr16
iret
xchg
je
pop
pop
pop
cld
imul
ffreep
xchg
into
clc
xchg
cmp
mov
adc
mov
(bad)
ds
pushf
jbe
icebp
repz
test
mov
iret
sub
std
ret
movs
mov
std
(bad)
fdivr
mov
xchg
sbb
cmp
call
(bad)
jp
std
mov
xchg
sbb
xchg
mov
repnz
rcl
in
mov
imul
ja
dec
gs
jb
mov
cli
or
loope
inc
add
add
add
xchg
add
inc
or
inc
add
inc
test
dec
add
dec
les
sub
mov
sub
mov
add
or
sub
mov
sub
sub
mov
or
sub
mov
add
mov
dec
add
add
sub
call
dec
aaa
mov
inc
jo
dec
or
cmp
repnz
xor
mov
data16
fadd
arpl
dec
push
cmc
leave
inc
jle
push
pop
cmp
adc
leave
js
loope
xchg
popf
test
inc
push
mov
push
imul
shl
mov
push
sub
cmps
shr
dec
sar
cmp
test
(bad)
int3
imul
pop
ins
pusha
xor
mov
(bad)
data16
inc
xchg
sub
jne
xor
xor
xchg
pop
mov
adc
scas
fnstenv
cmp
pop
imul
imul
push
pop
jmp
sub
sub
jge
xor
add
rol
inc
or
inc
or
inc
sbb
push
nop
dec
mov
rcl
aaa
rep
xor
lods
movs
pop
test
inc
test
inc
lahf
dec
jg
out
(bad)
sub
sub
retf
movs
pop
test
xor
fsub
sub
sub
movs
aad
clc
mov
push
mov
jge
xor
push
xchg
cwde
sub
adc
retf
mov
enter
aas
adc
push
jne
adc
loope
in
push
pop
bound
pop
popa
cmp
mov
or
loopne
rcr
loop
mov
jmp
lahf
mov
imul
fisub
scas
mov
gs
mov
ret
leave
cs
and
mov
mov
jmp
inc
mov
dec
mov
fcmovbe
sbb
pop
lods
loope
sub
and
xchg
and
push
jnp
rcr
push
pop
lods
pushf
jnp
aas
push
push
and
mov
xchg
ret
xor
jae
add
push
pop
ror
lods
mov
push
shl
add
jo
lock
ret
fldenv
(bad)
xor
ret
xchg
repz
sub
(bad)
xchg
jbe
out
int3
cmps
clc
pop
loope
lahf
fcomp
(bad)
in
in
std
not
leave
cmp
ds
fdivr
lahf
jae
(bad)
pop
xchg
mov
popf
call
cmp
push
inc
cld
lahf
lahf
outs
inc
cdq
mov
dec
jb
jns
fdivr
mov
add
xlat
dec
int3
jns
mov
adc
mov
repnz
std
pop
outs
or
ss
pop
repz
retf
retf
retf
adc
sti
cmp
pusha
imul
xor
(bad)
mov
and
gs
pushf
scas
adc
or
enter
push
fwait
sti
xor
call
sub
fimul
movs
dec
in
pop
cmp
cmp
mov
mov
xchg
xchg
call
inc
push
cmp
scas
fwait
gs
inc
(bad)
sub
stos
das
fisub
nop
dec
adc
shl
inc
add
lea
mov
shl
sar
cdq
cmc
inc
mov
push
test
ret
into
xchg
jns
xchg
dec
cdq
adc
out
sbb
mov
push
imul
in
out
push
aaa
les
push
push
mov
inc
sub
jecxz
xor
jae
ds
sub
cmp
mov
pop
cli
loop
stc
(bad)
lds
mov
movs
test
retf
adc
mov
push
xchg
xchg
mov
vmread
xlat
shr
(bad)
daa
repnz
push
jge
mov
add
and
dec
js
cdq
(bad)
push
xchg
mov
pop
(bad)
cld
push
sar
add
cmc
jo
xor
retf
xor
and
gs
movs
lea
cdq
fisubr
cwde
popa
xchg
jecxz
nop
(bad)
mov
call
iret
leave
retf
dec
mov
test
retf
inc
das
es
fdivr
cdq
sbb
sbb
dec
add
push
retf
fidiv
sub
cdq
inc
call
je
jmp
mov
and
jle
gs
ins
arpl
pop
iret
sbb
cmps
cmp
sbb
gs
pop
mov
cli
inc
pop
clc
test
xchg
(bad)
adc
movs
leave
or
sahf
pop
rcr
cmps
leave
imul
mov
loopne
cmp
pop
sub
sar
jecxz
cmp
fwait
mov
dec
mov
out
push
sbb
or
cmps
fsub
push
dec
ret
dec
mov
sub
mov
mov
pop
pushf
fidiv
ret
adc
xchg
in
test
retf
pop
add
(bad)
int3
mov
sar
dec
xchg
out
mov
and
push
pop
jecxz
fcomp
aam
cmp
and
hlt
dec
shl
shl
js
test
scas
(bad)
cmps
cmps
and
iret
adc
clc
data16
(bad)
sbb
cmc
out
popa
ss
adc
push
and
ins
into
out
jecxz
inc
xchg
ficom
mov
inc
rcr
jb
inc
fist
dec
test
pop
fldcw
jns
popa
pop
fldz
pop
and
int3
push
pop
sub
popa
xchg
loope
(bad)
les
sti
pop
push
ins
iret
xchg
clc
dec
xchg
mov
inc
mov
jne
out
and
mov
imul
pop
sub
rcr
retf
in
in
enter
stos
in
icebp
popf
aaa
test
dec
es
pop
lock
xchg
mov
aam
out
xchg
sbb
push
(bad)
icebp
sbb
fdiv
(bad)
call
sub
fild
mov
jb
ficomp
je
das
xor
pop
fnstsw
(bad)
xchg
inc
ror
pop
xchg
mov
or
push
ror
lea
(bad)
in
icebp
sub
xchg
xchg
and
or
cwde
and
sahf
fimul
pop
dec
ins
pop
fwait
xor
lock
out
push
push
pop
push
mov
pop
jg
mov
mov
mov
retf
loopne
in
popf
jno
cmps
call
lea
xchg
dec
(bad)
push
inc
dec
jns
dec
out
out
scas
mov
adc
adc
aaa
xchg
and
loop
leave
inc
dec
movs
sub
js
xlat
jnp
dec
loop
or
dec
dec
arpl
lods
mov
std
inc
fidivr
and
mov
or
adc
es
retf
imul
push
and
xor
pop
mov
cs
jb
and
adc
push
jge
cmc
out
xor
shr
sar
pop
fisttp
jl
inc
inc
pop
inc
push
sub
sbb
pop
retf
addr16
dec
inc
mov
out
(bad)
inc
mov
mov
loope
scas
arpl
ins
mov
cmp
data16
pop
dec
pop
dec
popf
fs
fs
or
sbb
adc
loopne
bound
push
cmp
loop
push
rcl
out
mov
jae
adc
div
push
cwde
bound
sub
push
in
shl
out
je
out
stc
fcmove
sti
jl
addr16
je
cmp
ins
mov
shl
mov
repz
imul
fcomi
test
lea
dec
iret
mov
cs
fst
in
out
mov
jns
retf
mov
cmc
lds
shr
mov
jl
ja
ffree
jb
or
mov
mov
out
and
retf
dec
mov
or
dec
adc
call
stc
popf
dec
dec
fiadd
lea
jae
gs
leave
add
sub
jne
out
out
mov
fucomip
stos
sbb
retf
jne
dec
aaa
sub
stc
cmp
pushf
mov
clc
jae
retf
loop
lahf
lods
fsubr
dec
sbb
fstp
out
or
xchg
icebp
adc
fist
lea
mov
inc
mov
ds
mov
outs
xor
loope
xchg
add
mov
pusha
js
dec
xor
fnstcw
and
ds
cmps
sub
pop
scas
fild
test
iret
sbb
sbb
(bad)
repz
jp
loop
in
test
arpl
jg
cdq
pop
clc
or
loop
lods
movs
mov
mov
ins
mov
pop
out
push
fist
arpl
mov
dec
add
je
pop
pop
push
mov
les
mov
sub
cwde
pusha
fwait
add
xor
in
mov
jns
out
ja
sbb
fisttp
mov
arpl
and
mov
sahf
jb
inc
pop
rcl
sar
sbb
pop
pop
lock
cmps
lock
aad
mov
outs
mov
xor
ficomp
in
xchg
cs
mov
adc
xor
jne
dec
cmp
icebp
inc
xor
jp
xor
(bad)
daa
pop
(bad)
out
into
jmp
icebp
out
fadd
mov
xlat
jg
xor
inc
dec
sahf
call
les
add
mov
cmp
(bad)
shl
mov
push
aaa
ins
(bad)
lock
enter
or
add
jmp
push
call
cmps
retf
call
xchg
add
cmp
pop
jecxz
mov
sub
vdivss
cmp
dec
int3
cmc
xchg
lock
les
mov
ins
out
jns
bound
mov
xor
mov
or
inc
lods
mov
pop
jl
shl
push
mov
sub
mov
cmps
push
out
or
jb
ficom
push
inc
mov
sub
mov
sub
sub
xor
call
add
push
push
mov
je
sub
sub
je
push
ins
je
inc
dec
add
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
dec
add
sub
mov
dec
add
add
sub
push
or
sub
mov
sub
mov
cmp
pop
lock
mov
xor
clc
ficomp
sahf
push
(bad)
shl
(bad)
ror
add
inc
ror
sub
cmp
mov
js
jne
mov
add
cmp
scas
dec
mov
pop
sub
mov
jo
retf
stc
outs
xor
jnp
sar
mov
inc
xchg
and
in
lods
mov
cs
lods
fwait
inc
sub
cmp
push
add
add
push
add
add
add
inc
or
add
push
iret
pop
mov
or
sub
stc
inc
aad
inc
mov
push
repz
dec
lods
cmp
(bad)
out
leave
and
icebp
enter
sub
push
repnz
or
je
(bad)
push
pop
sub
mov
push
dec
mov
outs
inc
pop
fwait
out
icebp
and
or
(bad)
nop
test
pushf
ins
xlat
sar
sbb
push
lods
test
sahf
inc
mov
adc
stc
xchg
push
xchg
dec
fld
sub
cmp
call
adc
sbb
mov
dec
adc
mov
jbe
dec
pop
jl
xchg
in
push
jecxz
jnp
xor
out
inc
cld
sbb
push
xlat
arpl
adc
mov
stos
or
xchg
fnsave
fistp
cmp
mov
aas
repz
aas
out
in
cld
pop
outs
fs
js
inc
sahf
aas
cs
xor
and
pop
xchg
test
or
cmp
es
sti
xchg
jae
jle
clc
push
addr16
and
cmp
hlt
adc
adc
cmp
scas
dec
pop
ret
aas
or
cmp
cmps
(bad)
pusha
es
cmp
rol
xlat
jno
leave
iretw
inc
jge
cmp
jl
mov
sbb
inc
push
push
mov
pop
inc
cmp
ds
clc
mov
scas
loope
(bad)
aam
mov
inc
jbe
and
jl
outs
and
sub
in
inc
pusha
mov
jle
js
loop
movs
mov
and
enter
movs
xchg
mov
in
cmp
arpl
popa
inc
int
sub
pop
dec
daa
test
js
push
mov
out
repz
jne
push
dec
in
sahf
inc
push
xor
in
call
das
adc
mov
cmps
shl
cmps
ret
lods
mov
pusha
ficom
arpl
jbe
push
retf
xor
ret
call
mov
fbld
test
jns
cmp
adc
std
imul
jns
xchg
jnp
pushf
in
outs
jg
lods
retf
ins
sub
jbe
repnz
xor
repz
les
sub
cmps
mov
xchg
rcr
lds
xor
iret
adc
dec
push
cmp
iret
test
dec
js
dec
imul
mov
mov
ss
movs
(bad)
sub
mov
cmp
inc
mov
pop
int3
shr
push
inc
shr
test
xchg
push
mov
pop
pop
dec
std
xchg
lods
(bad)
xchg
out
cmp
push
enter
push
repnz
mov
xchg
lods
movs
(bad)
shr
cld
inc
mov
sbb
xchg
sub
adc
out
addr16
cld
mov
dec
rol
push
sub
and
xor
jb
xchg
imul
pop
adc
sbb
cs
cmp
dec
repz
addr16
or
das
jecxz
mov
sbb
mov
gs
ins
shl
into
out
jno
xchg
inc
xchg
cmp
inc
inc
or
lock
or
in
pop
imul
std
mov
mov
lea
ss
adc
push
push
mov
dec
or
mov
xor
cmp
mov
push
xor
mov
dec
xchg
jns
cmp
fcomp
daa
adc
rcr
pusha
and
fcom
sub
gs
pop
push
leave
jbe
adc
(bad)
(bad)
enter
pusha
mov
pop
cmp
fchs
jbe
cmp
sbb
aas
push
in
jl
bound
movs
imul
shl
push
fwait
xor
sub
xchg
repnz
ja
test
jmp
movs
sbb
clc
or
retf
ins
dec
pop
repz
pop
lds
jle
jnp
clc
std
loopne
jno
jmp
ficomp
inc
in
fsub
push
xor
ins
push
repz
jge
retf
xlat
or
pop
add
fiadd
aas
or
or
fnstsw
dec
addr16
mov
int
mov
pop
ss
popf
mov
xchg
push
sbb
aas
btc
stos
push
in
mov
(bad)
into
movs
gs
ins
cdq
xchg
adc
lds
push
xor
jp
push
cmp
jl
mov
scas
and
jmp
add
jecxz
sub
iret
cmp
test
cmps
fucomip
loop
xor
add
stos
les
ins
call
in
fxtract
mov
or
sub
mov
cdq
mov
add
add
pop
add
add
xor
dec
shl
xor
movs
loope
arpl
or
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
or
sub
xor
inc
or
add
push
add
add
inc
in
mov
aad
inc
dec
inc
push
cmp
jmp
or
add
xor
sub
(bad)
jge
inc
mov
mov
push
retf
mul
jle
cmps
clc
push
and
pusha
sub
lea
imul
xchg
jb
sbb
sbb
aam
jno
js
dec
jl
out
inc
dec
dec
inc
rol
adc
neg
jg
mov
or
pop
push
xchg
mov
cvttps2pi
ss
imul
lahf
xchg
inc
push
push
test
jne
add
in
mov
loop
in
cmps
jb
mov
js
jecxz
sahf
jp
jge
xchg
jne
ret
xchg
inc
ins
sar
sub
stc
test
xor
in
outs
inc
jle
inc
mov
jae
push
mov
outs
or
and
inc
pop
sbb
enter
dec
inc
inc
mov
adc
gs
mov
pop
sub
add
shl
inc
inc
fnstsw
inc
add
and
scas
gs
dec
pop
sbb
adc
jecxz
cmp
and
not
push
loope
ret
rol
cmp
lods
and
xor
inc
sbb
sub
push
loopne
(bad)
mov
test
sub
psubb
inc
or
fisubr
cmp
sub
cdq
mov
or
add
push
add
add
push
add
dec
xchg
pop
aas
mov
(bad)
jmp
mov
push
or
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
or
mov
or
sub
mov
sub
mov
pop
mov
jg
push
sbb
dec
ret
mov
pushf
loope
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
inc
pop
xchg
aam
sahf
pop
push
add
inc
pop
xchg
aam
jns
inc
pop
xchg
aam
jns
inc
pop
xchg
aam
jns
inc
pop
xchg
aam
jns
inc
pop
xchg
aam
shl
xor
sub
test
pop
xchg
aam
sub
or
scas
jae
call
add
add
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sbb
mov
xor
pop
pusha
adc
cdq
mov
xchg
shr
push
xchg
inc
push
push
mov
pop
add
add
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
retf
jl
loop
dec
sbb
jecxz
adc
dec
aam
imul
jae
cld
into
inc
test
lahf
inc
leave
sub
je
jle
ret
icebp
sti
pop
adc
movs
mov
xchg
(bad)
arpl
je
or
and
into
jbe
paddusw
or
cmp
mov
push
jl
push
aas
dec
mov
(bad)
retf
pop
push
pop
jnp
ret
mov
mov
adc
cld
cmp
iret
les
mov
and
mov
jecxz
sbb
xchg
repz
in
lea
xchg
(bad)
int3
add
mov
stc
data16
xchg
sti
ins
cmp
inc
pushf
pop
retf
test
adc
mov
add
jns
push
xor
add
push
out
fdivrp
add
xor
ret
lea
add
inc
cs
dec
sar
and
add
inc
or
sar
into
mov
dec
and
lea
test
stc
mov
pop
scas
pop
fnstsw
(bad)
jne
call
(bad)
mov
jg
dec
ror
sub
pop
out
fwait
cmp
mov
sub
popf
jne
int3
int3
mov
stos
inc
jecxz
sti
inc
push
ret
aaa
xor
outs
in
scas
sbb
inc
add
sub
or
mov
fimul
adc
aam
xor
push
(bad)
movs
fucomi
sbb
pop
addr16
sub
push
cmps
out
(bad)
(bad)
ss
mov
xchg
fisubr
jp
cmp
jl
mov
xchg
leave
sti
xor
aas
es
lea
into
jle
fistp
jmp
test
int
bound
jge
dec
int3
test
xor
fs
mov
pushf
pxor
mov
(bad)
aam
fdivr
push
out
loop
lods
call
dec
call
lahf
dec
mov
out
xor
cmp
pop
ins
repnz
leave
scas
movs
out
aas
sbb
repnz
pop
stos
js
push
mov
add
or
(bad)
test
das
loop
popa
ins
mov
push
push
or
adc
hlt
mov
sbb
inc
mov
mov
pop
dec
loopne
ins
imul
inc
or
daa
xor
jae
xor
loope
mov
or
cmp
or
ret
imul
xchg
and
inc
dec
mov
mov
lods
call
inc
cmp
pop
int
out
pop
and
fisttp
aam
cld
outs
stos
fsub
pop
mov
(bad)
push
inc
test
pop
lods
mov
xor
sbb
lea
addr16
sub
mov
cmp
enter
cmp
(bad)
mul
sti
aaa
(bad)
cmp
inc
mov
(bad)
das
int
mov
daa
and
retf
inc
scas
lods
sbb
inc
icebp
or
jne
idiv
(bad)
mov
sub
mov
adc
push
div
fmul
addr16
lods
cmp
or
or
inc
xor
shl
mov
add
out
inc
dec
push
xchg
cmp
jl
sub
and
retf
rcr
cmp
and
add
test
xor
cmp
pusha
aas
call
aam
(bad)
out
repz
xchg
jbe
sub
cld
mov
sti
lds
cli
jg
cmc
scas
mov
or
dec
scas
je
adc
jno
sub
add
sub
push
sbb
xor
adc
xchg
sbb
inc
test
xor
rcr
or
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
sub
repnz
jecxz
loope
mov
pop
xchg
js
adc
cmp
mov
in
and
fstp
cmp
fwait
and
and
jle
cld
xor
in
ds
(bad)
in
clc
pop
ret
dec
xchg
arpl
mov
or
fistp
aas
ds
cmc
in
out
(bad)
xchg
mov
mov
add
jne
gs
fdiv
adc
xchg
pop
inc
jle
test
data16
dec
test
sbb
mov
mov
jae
mov
inc
ja
dec
adc
fdivr
pop
mov
cmp
scas
shr
stos
dec
pop
pop
mov
push
mov
stos
mov
mov
jge
jg
clc
jg
mov
sbb
into
jmp
dec
pop
ret
fimul
shr
imul
add
or
sub
not
into
rcl
inc
mov
push
dec
xor
cmp
cmps
and
jp
jbe
xor
pop
test
enter
fcomi
xchg
pop
(bad)
fdiv
ss
pop
out
mov
pop
out
mov
jbe
scas
and
xlat
outs
adc
xchg
sbb
jbe
iret
mov
xchg
rcr
mov
mov
out
lods
je
mov
push
(bad)
dec
sub
xor
cmp
pop
xchg
cld
ret
push
add
(bad)
or
and
mov
out
push
sub
lahf
aaa
add
mov
pop
idiv
sub
mov
ins
outs
xchg
lds
adc
aaa
je
pop
jno
cmp
dec
sub
cmp
inc
lock
fs
pusha
test
inc
(bad)
out
(bad)
les
into
js
in
jnp
ja
data16
imul
ja
inc
jp
je
imul
retf
mov
clc
ret
add
add
mov
out
push
in
fstp
mov
ins
jbe
xchg
push
mov
ins
inc
xor
cdq
inc
cdq
push
ficomp
ror
push
adc
jae
mov
cld
cmp
xchg
outs
cmp
in
jns
movs
das
(bad)
xor
push
push
imul
and
or
pushf
inc
retf
xchg
leave
jl
lea
jb
ins
aas
lahf
sbb
add
cld
sbb
or
cmp
inc
cwde
(bad)
inc
lock
jae
fsubr
dec
mov
addr16
int
inc
in
dec
xor
mov
cmp
mov
xchg
xor
and
rcr
lods
aaa
movq
(bad)
xchg
stc
sahf
fmul
and
repz
or
sub
repnz
out
pop
sar
xor
cwde
jnp
and
fdiv
pop
ins
sbb
popa
(bad)
sub
mov
sbb
outs
xchg
sti
or
fimul
lods
loope
loop
dec
sub
sub
mov
ret
outs
fs
pop
sbb
rcr
pop
xchg
rcr
cdq
mov
ret
enter
sub
fmul
xchg
gs
fwait
inc
enter
push
retf
mov
call
mov
sub
repz
and
xlat
out
xchg
jbe
pushf
hlt
lods
jns
outs
imul
(bad)
adc
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
inc
pop
push
jl
lock
mov
sbb
arpl
int
mov
push
jbe
icebp
and
dec
or
sub
cmp
out
mov
dec
mov
pop
call
inc
jmp
stc
jg
xor
jg
sbb
stc
push
dec
fdiv
stc
lea
dec
pop
cmp
mov
outs
outs
int3
xchg
sbb
not
sub
or
retf
repz
ins
mov
inc
xchg
les
js
lahf
ins
imul
inc
jns
mov
mov
pop
xor
repnz
into
loopne
push
sbb
adc
fs
push
xchg
mov
repnz
adc
cmp
xor
fwait
not
adc
jb
jae
fcmovne
cmp
mov
jge
jbe
jecxz
cmps
pop
shl
mov
or
jno
and
fs
dec
lods
xchg
in
xor
fist
inc
sbb
xchg
adc
xchg
dec
bound
dec
mov
sti
rcl
adc
dec
repnz
xchg
mov
mov
int3
mov
call
popf
outs
cmp
xchg
into
dec
xchg
enter
and
mov
sbb
jmp
xchg
pop
and
cmp
add
sbb
(bad)
int
dec
out
and
push
inc
mov
and
mov
pop
das
retf
stc
pushf
lods
iret
mov
outs
push
retf
scas
add
and
jl
mov
add
stos
mov
int3
dec
lea
adc
leave
iret
sbb
xor
movs
not
or
add
xchg
fs
inc
ret
lock
mov
jmp
pop
es
(bad)
fbld
(bad)
retf
dec
adc
sbb
adc
retf
retf
jecxz
(bad)
push
cmp
dec
adc
arpl
dec
mov
mov
scas
push
ds
inc
push
jno
(bad)
mov
fdivr
mov
cld
mov
push
std
out
jmp
mov
mov
xor
lahf
int
into
bound
lahf
stos
das
sbb
jl
out
add
imul
push
pop
call
adc
frstor
out
pop
and
les
shr
pop
out
and
push
add
xchg
and
cld
cmps
in
lea
sbb
test
popf
mov
fdiv
aas
xchg
pop
and
shr
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
adc
or
mov
xor
inc
or
inc
push
mov
sub
mov
sub
mov
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jg
add
add
inc
cmp
popa
retf
add
add
add
int
push
xor
icebp
repz
sub
jge
lods
mov
add
fidiv
fsub
jmp
add
add
add
(bad)
jmp
add
add
add
add
add
ror
dec
stos
mov
jmp
mov
arpl
jmp
jo
iret
je
fild
inc
pusha
dec
daa
sub
(bad)
test
cmp
lods
pop
popf
shr
mov
sbb
jp
ss
fcomi
cmp
sub
mov
in
jg
imul
mov
mov
popa
lea
add
lahf
add
xchg
cmp
add
mov
add
stos
sub
mov
sbb
fwait
movs
cmps
xchg
mov
shl
lds
scas
sbb
add
(bad)
(bad)
(bad)
(bad)
xlat
add
arpl
out
out
lock
repnz
loopne
in
call
push
fisttp
repz
adc
scas
pop
test
cld
in
(bad)
shl
ins
add
dec
sbb
int
test
or
sub
jb
inc
push
outs
adc
inc
mov
adc
popa
sbb
mov
leave
cmp
lahf
sub
add
int3
lahf
xor
and
lea
and
cmc
adc
or
jp
sub
jle
jl
fstp
mov
push
xchg
data16
push
popa
pop
mov
adc
and
mov
aam
push
push
jmp
xor
and
out
pop
cld
shr
inc
mov
hlt
push
shl
(bad)
cwde
inc
stos
jge
adc
push
popf
ss
add
fucomi
call
adc
mov
pop
sub
fidivr
mov
fcom
fmulp
and
retf
xchg
sbb
movs
icebp
out
cmp
nop
js
cmc
out
adc
jle
repnz
sar
xchg
repnz
std
jne
push
clc
(bad)
mov
add
mov
vpmullw
xor
lock
push
mov
fild
push
shl
add
xchg
and
push
rcl
or
xchg
gs
add
mov
add
(bad)
inc
cmp
sub
add
push
ja
add
and
or
lock
jb
(bad)
sbb
or
sub
and
xchg
add
and
das
dec
cs
loope
add
sbb
pop
div
pushf
add
inc
dec
pop
lea
xor
movs
mov
push
not
outs
add
dec
inc
xchg
push
mov
and
adc
outs
dec
fldenv
fisub
imul
and
cmp
data16
sub
loope
loope
ss
sub
sub
cmp
mov
popa
jbe
inc
data16
lock
sub
mov
arpl
mov
push
pop
movs
data16
xchg
cmp
jmp
aas
mov
xor
add
push
jmp
mov
mov
scas
mov
add
cdq
loopne
and
(bad)
ds
movs
cs
jne
xchg
out
pop
jnp
sub
or
sahf
jp
lods
jne
xchg
sub
ret
pushf
jg
cmp
ret
addr16
add
mov
pop
cmp
stos
je
loopne
(bad)
cdq
cli
push
add
or
jno
or
xor
xor
pop
sub
cmp
int3
sub
push
in
sbb
or
or
shl
lock
ret
inc
pop
sub
adc
ret
mov
test
fwait
sar
sub
pop
sub
popf
adc
push
push
mov
or
ins
mov
sub
cmp
das
mov
or
(bad)
(bad)
mov
sub
movd
cmp
inc
cmp
loopne
call
dec
into
mov
xor
fs
pop
call
fimul
mov
jbe
movs
push
in
push
out
fwait
and
xchg
sub
pop
iret
mov
jge
cld
repnz
sbb
cld
repz
std
hlt
aam
iret
cld
cmc
fdivr
mov
std
mul
xchg
mov
addr16
cmps
scas
(bad)
cli
jmp
ffreep
das
out
das
(bad)
cld
hlt
xlat
pop
inc
mov
iret
add
(bad)
cld
imul
(bad)
inc
or
add
dec
rol
lock
mov
sar
imul
daa
dec
ror
lock
mov
push
jp
and
mov
movs
mov
test
dec
mov
push
dec
jo
sub
mov
sbb
lock
int3
adc
dec
dec
ror
adc
nop
inc
and
mov
add
jnp
inc
or
xor
fwait
sbb
clc
lock
pop
popa
mov
mov
sti
mov
or
call
add
xchg
ret
cmp
mov
and
mov
adc
dec
and
adc
or
mov
and
fst
mov
inc
jae
in
out
inc
adc
adc
mov
xchg
adc
stc
inc
pop
mov
(bad)
loopne
lock
sub
jb
add
push
sub
aaa
dec
xor
iret
add
and
mov
dec
adc
test
mov
mov
stc
add
mov
(bad)
in
and
ror
out
repnz
es
gs
jb
aam
es
leave
mov
div
test
sub
or
jne
add
enter
mov
movs
mov
daa
pop
enter
xchg
xchg
fsubrp
out
repz
dec
jno
adc
or
push
call
jg
int3
xor
(bad)
loopne
push
sbb
fs
mov
fnstcw
inc
jae
inc
movs
enter
pop
jmp
lds
daa
jnp
and
out
mov
pop
jmp
and
movs
adc
dec
push
and
and
sub
jb
mov
fst
xor
cmps
cmps
xor
cmp
shr
lods
add
imul
shl
sub
iret
popf
mov
jmp
test
enter
mov
aaa
sbb
fsubr
xchg
mov
or
adc
outs
dec
xlat
mov
mov
fcomp
mov
sub
push
jecxz
test
lods
dec
or
mov
sbb
imul
(bad)
test
lock
sub
leave
ror
(bad)
mov
jne
push
jns
lds
shl
lock
inc
neg
mov
xor
stos
test
cmps
pop
shr
adc
adc
sub
fwait
pusha
pop
jmp
aaa
retw
std
les
jle
popf
push
int3
ins
and
dec
pop
or
mov
sub
pop
or
mov
xchg
imul
daa
cmps
adc
or
sahf
cmp
or
push
pop
mov
push
test
xor
enter
or
sub
pop
fcmovu
mov
dec
scas
in
das
es
inc
add
repz
(bad)
cmps
jp
cld
rcl
adc
dec
ds
or
xchg
ret
addr16
lods
shl
sbb
retf
pusha
jle
xor
mov
inc
jno
mov
push
enter
rcr
test
add
mov
jae
bound
neg
cmp
jmp
lea
push
les
mov
push
lea
push
pop
cdq
lds
add
sbb
clc
xor
scas
(bad)
mov
loopne
mov
cmps
pop
pop
imul
out
dec
leave
cmp
push
dec
adc
pop
xchg
xor
jno
adc
and
leave
mov
inc
sar
jp
repz
jno
xor
mov
sbb
xchg
inc
push
and
and
mov
ins
repnz
mov
push
das
or
inc
(bad)
or
and
push
fcom
popa
imul
mov
pop
or
jmp
ret
cmp
jb
loope
mov
test
pop
fistp
ret
vpunpcklbw
les
sub
jno
not
cmovno
shr
bound
mov
mov
outs
dec
xchg
not
fistp
int3
mov
daa
cmp
call
push
sbb
call
xchg
into
hlt
(bad)
cdq
fdivr
(bad)
mov
test
pop
mov
pop
jmp
outs
pop
mov
in
jne
sub
dec
mov
mov
std
in
fwait
push
mov
je
leave
data16
pop
out
push
mov
imul
cmp
aam
sub
loopne
loopne
lock
popf
in
test
jnp
es
and
cs
pop
fisttp
mov
out
addr16
or
and
push
sub
cmp
ret
repz
dec
sbb
outs
mov
adc
mov
jae
mov
cmp
pushf
iret
imul
jp
xchg
into
dec
inc
jns
icebp
mov
cs
pop
jnp
pop
lahf
pop
or
cmp
outs
out
xchg
xlat
in
ror
mov
test
push
aam
mov
icebp
ret
lods
add
cli
out
add
(bad)
(bad)
pop
and
or
xchg
arpl
cmp
adc
mov
add
repz
cwde
jle
jo
jne
or
shl
inc
jle
pusha
and
cmp
jg
mov
and
sub
xchg
mov
xor
push
xor
(bad)
xor
mov
sbb
ret
inc
sbb
pop
ficom
pop
dec
mov
pusha
sub
nop
xor
test
add
xor
shr
inc
sub
cmp
sbb
add
lock
adc
jnp
ret
loopne
cdq
pop
xor
push
js
sbb
push
add
add
inc
sbb
rol
cmp
sub
ret
dec
sbb
popa
sub
and
lods
ret
enter
sub
test
lock
xchg
ja
dec
push
cmp
dec
mov
push
inc
cmp
call
pop
add
and
scas
cwde
sbb
icebp
mov
and
mov
mov
and
ror
fwait
call
imul
sub
lea
push
adc
inc
and
ret
and
xchg
sub
xchg
sbb
cmps
lea
repnz
mov
add
push
jg
sub
mov
jmp
mov
pop
ins
jmp
add
add
cmp
xchg
pop
sub
add
nop
(bad)
test
stc
sbb
inc
xchg
adc
and
mov
xchg
rol
sbb
rol
lea
sub
cmps
push
lea
adc
xlat
adc
sbb
icebp
dec
hlt
mov
push
stc
add
leave
push
sub
in
inc
xchg
or
data16
add
sub
inc
push
pop
jo
test
pop
sub
fs
jns
outs
fst
mov
imul
(bad)
fld
pop
mov
xchg
push
cmp
mov
aas
sbb
xchg
ja
push
out
xor
ror
push
jns
push
(bad)
rcl
xchg
xchg
jle
or
mov
add
adc
or
push
mov
xchg
pop
xadd
ins
jg
xchg
inc
loopne
pop
mov
push
or
push
fwait
mov
xchg
test
add
pop
call
xor
(bad)
mov
std
mov
(bad)
sbb
or
ror
xchg
xchg
push
pop
(bad)
jecxz
mov
dec
mov
pop
enter
jo
call
sahf
sub
sahf
lock
add
sbb
stc
add
jns
xchg
test
lahf
cld
jmp
(bad)
sbb
cmp
call
pop
or
mov
mov
popa
xchg
mov
adc
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sub
inc
cmp
popa
push
add
add
add
retf
add
xchg
add
fs
adc
or
add
and
fild
pop
sbb
sbb
sbb
adc
jb
cmp
add
ds
mov
cmp
add
add
pushf
add
and
and
cmp
add
sub
xor
add
add
sbb
and
or
or
add
rol
add
add
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
ltr
add
add
add
sub
add
inc
jo
sub
(bad)
leave
ins
cmp
lods
pop
scas
fsubr
loopne
js
cs
iret
call
mov
dec
scas
fist
(bad)
sti
(bad)
jg
cmp
js
pop
sbb
mov
mov
or
xchg
sahf
lahf
mov
pushf
mov
mov
pushf
mov
xchg
push
mov
mov
push
add
mov
dec
ret
(bad)
mov
leave
pop
xchg
mov
stos
fdivr
int
fmul
ret
rol
out
icebp
shl
dec
mov
icebp
add
add
fsubr
and
and
retf
xor
cmp
add
sbb
dec
popf
ret
imul
cpuid
cmp
inc
and
sahf
inc
cdq
repnz
paddusb
test
pop
aas
or
movs
mov
out
pusha
dec
xor
shl
add
lds
daa
inc
xchg
pop
cmc
adc
xchg
popf
dec
test
cmp
xor
push
sub
stos
inc
ret
mov
jns
inc
mov
cmp
lods
sub
add
(bad)
das
in
add
or
sub
or
adc
loop
add
xlat
mov
stc
call
shl
add
sub
stos
pop
adc
mov
nop
mov
arpl
or
sbb
or
push
or
mov
shl
test
or
cli
mov
shr
fiadd
stos
(bad)
mov
cmp
fisttp
mov
ins
cmp
cmc
rcl
repnz
into
xlat
mov
aam
std
jbe
and
popa
mov
xor
inc
retf
mov
add
add
div
or
pusha
add
sbb
rol
test
inc
rcr
nop
xor
pop
loop
mov
cwde
or
push
xchg
popa
les
and
mov
jb
add
and
and
cwde
fs
mov
or
fld
inc
inc
mov
and
inc
pop
and
dec
sub
jns
mov
loop
ins
stos
jmp
push
daa
(bad)
enter
xchg
mov
or
sbb
fldenv
sbb
loop
and
inc
movs
lahf
test
cli
and
ss
sub
ss
lahf
ins
dec
add
push
sub
and
add
aam
mov
jne
mov
and
mov
mov
adc
call
xchg
xor
inc
dec
inc
sub
cwde
pusha
dec
or
xor
in
das
je
jbe
aas
lds
adc
or
mov
add
(bad)
sbb
das
ins
imul
inc
add
push
cwde
dec
push
loopne
jne
dec
jbe
mov
imul
sti
int3
das
mov
mov
cli
jmp
xlat
stos
daa
or
ret
adc
push
aad
cmp
dec
cmps
push
mov
sbb
jb
fs
mov
inc
sub
jmp
les
dec
or
and
push
push
lds
xor
xor
mov
mov
sar
int
inc
mov
mov
lods
add
inc
sub
and
inc
cmp
push
push
and
pop
movs
cmp
fldenv
inc
out
cmp
xchg
js
aad
fdivr
pop
mov
xchg
aas
dec
jl
xor
enter
mov
push
iret
cdq
movs
xchg
bound
add
lods
js
push
jo
shr
addr16
jmp
in
movs
into
jp
sub
mov
dec
shr
mov
lahf
int
ror
leave
mov
jecxz
cmp
call
push
mov
ror
sbb
cli
mov
ds
mov
dec
cmp
cwde
lock
adc
mov
pop
scas
ds
das
aaa
inc
mov
cwde
lods
jmp
inc
daa
fdiv
fwait
dec
pusha
add
clc
adc
xor
add
dec
sbb
xchg
or
adc
or
rcl
into
add
sub
add
icebp
outs
and
adc
inc
mov
and
xor
mov
inc
push
adc
pop
xor
fcom
ds
sbb
les
pop
push
xchg
les
cdq
popa
or
out
add
cmp
inc
es
scas
push
inc
jo
xor
mov
(bad)
adc
pop
movs
mov
clc
lds
movs
dec
xor
packuswb
dec
push
in
xchg
cmp
dec
jns
xchg
add
shl
sahf
inc
push
in
test
nop
xor
mov
test
pop
adc
push
stos
sahf
or
mov
mov
mov
add
into
mov
in
jns
ins
xchg
jmp
or
sub
retf
scas
and
pop
shr
movups
nop
add
inc
nop
push
loop
jae
leave
mov
add
call
or
xor
pop
sar
sub
add
cmp
fwait
pop
shl
dec
push
repnz
dec
jno
sbb
pop
adc
add
cdq
inc
in
mov
fcom
inc
in
sar
dec
mov
or
add
mov
pop
mov
(bad)
(bad)
stos
xchg
dec
es
lea
push
add
stos
xor
lea
xor
inc
fwait
sti
jmp
cwde
mov
test
cmps
dec
push
iret
jns
xchg
jl
cmps
add
pop
scas
or
inc
push
es
rol
push
sahf
fsub
pop
loope
push
mov
mov
ds
jo
repz
push
ss
dec
and
inc
push
add
inc
add
mov
inc
xchg
xor
movs
jge
test
add
imul
push
xchg
add
retf
retf
stc
ins
loopne
mov
inc
xchg
cld
and
pushf
aad
in
and
mov
inc
xchg
inc
daa
rcr
mov
push
jp
mov
or
rol
imul
xchg
call
lods
js
fwait
js
sub
scas
rol
push
mov
jo
adc
mov
ins
mov
cmp
(bad)
pop
inc
mov
inc
inc
mov
lahf
jg
or
adc
cmps
jo
push
add
push
push
sar
cmp
xchg
nop
xor
movs
push
dec
mov
pusha
inc
out
jg
push
mov
inc
mov
lea
in
xor
dec
aad
clc
movs
in
fstp
rcr
gs
gs
xor
jb
(bad)
dec
mov
dec
or
mov
jmp
or
jno
sbb
adc
adc
shl
aad
jg
inc
push
dec
push
and
xor
ret
mov
mov
push
aaa
loopne
or
shl
push
inc
test
shl
cs
mov
dec
sahf
imul
(bad)
cmp
mov
cdq
sar
jnp
cmc
fwait
inc
(bad)
test
add
pop
push
cdq
mov
sar
sahf
inc
and
pop
je
xor
mov
adc
xor
pusha
adc
pop
and
jg
movs
loop
iret
cmp
push
das
sub
test
mov
inc
in
xor
(bad)
jne
adc
xchg
pop
imul
scas
jno
ins
and
ins
les
adc
push
pop
mov
pop
pop
bound
(bad)
retf
cmc
xor
shr
xor
mov
or
retf
xor
mov
jno
not
push
pushf
cwde
and
adc
hlt
mov
add
xor
cld
push
mov
pop
ror
pop
fldcw
retf
adc
sbb
test
add
or
in
sahf
lods
shl
lods
cdq
mov
cmp
mov
movs
push
fsub
xchg
dec
jae
mov
daa
inc
stc
movs
lods
xor
mov
lds
jle
add
cld
fisubr
in
sahf
inc
inc
call
addr16
dec
in
fs
mov
pop
jmp
jb
mov
nop
lea
mov
enter
inc
push
xor
out
jnp
(bad)
sti
and
and
int3
cmp
out
push
mov
pop
scas
mov
movs
cdq
rol
ja
pop
mov
ins
lods
pop
arpl
ins
push
scas
dec
jecxz
out
jge
mov
clc
pop
push
fnstenv
ss
mov
stos
idiv
cmp
push
pop
or
retf
clc
mov
cld
cmp
jno
sahf
in
push
xchg
cs
xchg
and
sub
call
dec
xor
rcl
add
bound
mov
cld
or
fwait
mov
dec
pushf
adc
jle
or
outs
dec
pop
mov
retf
jge
xor
rcr
pusha
xchg
inc
or
xor
icebp
cmp
jl
jne
add
sub
add
outs
repz
jl
jbe
cld
(bad)
jns
out
fs
pop
adc
aad
cmp
test
mov
adc
jge
push
add
test
sub
test
cmp
push
sbb
shl
lea
shr
aad
and
sbb
jo
sub
jp
xchg
(bad)
movhps
cmps
adc
pop
xchg
and
rol
inc
jae
xor
dec
mov
sbb
xchg
ins
mov
dec
fs
les
inc
dec
(bad)
neg
rol
out
je
pop
arpl
sbb
xor
jp
add
and
in
mov
pop
xlat
test
and
xchg
ins
push
sub
push
mov
xchg
aas
fsub
inc
and
outs
push
popa
xor
push
aad
and
sbb
mov
ret
inc
hlt
cmp
sti
pop
mov
push
jnp
xor
xchg
and
(bad)
and
les
mov
(bad)
push
retf
or
fwait
adc
stos
shl
push
or
mov
adc
jecxz
add
pop
pusha
lds
into
dec
sub
sbb
inc
sub
adc
mov
pop
in
dec
cs
push
push
stc
dec
push
mov
leave
and
out
add
arpl
push
dec
mov
inc
adc
adc
pop
mov
sbb
add
sbb
cmp
(bad)
xchg
and
aad
and
and
xor
(bad)
cmp
jns
sub
nop
jmp
xchg
int3
loope
sbb
mov
mov
adc
popa
dec
xor
xchg
(bad)
aad
adc
and
in
adc
mov
cmp
rcl
stos
rcl
push
sub
and
push
(bad)
pop
xchg
xor
iret
adc
and
and
leave
cmp
dec
sub
(bad)
dec
add
sbb
xchg
movs
push
xor
and
and
gs
jmp
inc
out
sbb
pop
sbb
test
mov
xchg
xchg
sub
test
push
dec
(bad)
pop
cmp
imul
adc
fwait
pop
icebp
and
inc
add
es
popa
sbb
mov
test
xchg
leave
jns
inc
and
push
aaa
out
inc
sar
rcr
lock
mov
shl
lea
aad
push
mov
xchg
pushf
iret
and
repz
std
jae
fcmovne
cmp
stc
fwait
popa
inc
cmp
jmp
sub
mov
cdq
adc
cli
movs
cmp
cwde
popf
mov
and
adc
mov
inc
or
xor
cmovs
inc
add
and
sub
aaa
sub
xor
jecxz
sub
mov
adc
or
shl
sbb
sbb
sub
xchg
js
push
mov
loope
dec
sub
add
mov
push
sahf
cmps
jbe
out
xor
mov
or
or
or
retf
and
shl
out
cmps
(bad)
cmps
jo
or
dec
movs
sub
cmp
sbb
mov
mov
lea
cmps
jge
cmps
xchg
sub
retf
mov
cmp
pop
mov
xchg
aad
jle
or
or
cs
or
mov
(bad)
mov
sub
xor
stos
sbb
stos
pop
and
mov
jp
imul
scas
pop
and
push
enter
jo
scas
fisubr
and
ror
aad
push
int3
jp
imul
adc
sub
mov
push
inc
sbb
adc
cmp
jp
or
add
push
scas
mov
scas
cmps
sub
scas
out
scas
scas
pusha
addr16
scas
adc
or
fisubr
sbb
pushf
lock
add
sbb
cmp
jnp
sbb
sbb
mov
sti
mov
sbb
pop
mov
jnp
call
or
add
add
add
add
sub
add
inc
jo
sub
(bad)
leave
ins
cmp
lods
pop
scas
fsubr
loopne
js
outs
cmp
mov
int
dec
fistp
fsubr
clc
jl
lods
into
inc
div
jno
outs
jae
pop
sbb
lea
mov
nop
jg
adc
ja
lea
stos
cmps
bound
pushf
push
add
mov
mov
push
ret
push
or
ret
int
into
mov
mov
iret
ret
leave
dec
mov
mov
(bad)
dec
xchg
push
ret
lock
repnz
(bad)
(bad)
adc
push
out
adc
adc
push
out
jno
mov
or
add
or
adc
and
loope
cmp
adc
push
add
sub
or
push
test
leave
mov
dec
xchg
or
add
mov
or
(bad)
mov
pop
adc
shl
dec
and
sub
je
aas
cmps
inc
(bad)
add
dec
scas
xor
or
ja
ins
dec
mov
push
xchg
or
dec
fadd
scas
fnstsw
shl
daa
sub
pusha
ret
test
push
jmp
and
sub
lock
adc
cli
test
jmp
in
push
xor
xchg
retf
jp
test
cld
f2xm1
call
or
or
dec
jl
out
or
adc
xchg
in
ja
mov
mov
or
cmp
(bad)
xor
data16
idiv
int
mov
data16
(bad)
out
sti
clc
out
and
xchg
fcmovb
in
rcr
lods
add
push
or
dec
inc
add
xor
loope
add
and
inc
jns
fcom
loop
movs
sbb
lods
ret
sub
xor
add
add
mov
nop
fcom
les
leave
ins
pop
or
and
pop
or
sbb
bound
pop
stos
(bad)
inc
cmp
dec
jo
add
test
rol
pop
inc
rol
jecxz
dec
loop
fdivr
add
pusha
rcr
sbb
mov
mov
sbb
js
repnz
add
mov
daa
cwde
jle
dec
cmps
mov
aaa
pushf
xchg
sub
push
cwde
loopne
xchg
dec
loopne
push
xor
inc
add
cdq
icebp
jb
mov
arpl
push
adc
sbb
jb
test
cmps
test
pusha
add
jmp
sub
sub
xor
mov
mov
dec
inc
ja
xor
imul
in
pop
sbb
scas
mov
sahf
cli
dec
jp
mov
stos
dec
mov
ror
call
adc
jmp
xchg
xor
add
push
sbb
pop
jo
sbb
cmp
mov
(bad)
repnz
add
inc
shl
add
pushf
inc
int3
add
or
scas
cmp
xor
push
lea
clc
pop
jo
sbb
push
rcl
(bad)
loopne
je
iret
ins
xor
cmp
pop
push
pop
rcr
adc
jecxz
rcl
xor
lods
add
pop
ja
fnsave
cmc
add
dec
pop
adc
sahf
fnsave
xchg
loope
(bad)
xor
aas
nop
div
dec
aas
xchg
outs
mov
jns
xchg
jae
dec
fdiv
dec
lock
sub
pop
div
mov
(bad)
in
mov
xchg
sbb
rol
aam
mul
dec
mov
lds
jno
push
jne
mov
mov
jo
jl
jo
inc
adc
cmp
sbb
sbb
xor
clc
inc
mov
js
sub
stos
dec
sar
hlt
lahf
lahf
add
fimul
dec
inc
cli
shl
mov
hlt
sbb
xchg
pushf
les
add
dec
inc
movs
sbb
and
xchg
repz
add
mov
hlt
pop
mov
ficom
add
jne
and
mov
fistp
mov
push
pop
add
add
adc
add
call
add
test
mov
leave
jns
push
sub
fistp
or
add
repz
iret
gs
call
or
push
ret
rol
(bad)
and
sbb
push
add
jns
and
(bad)
mov
mov
jmp
pop
sub
jge
ret
enter
sub
or
and
jb
aad
push
mov
test
jecxz
or
call
push
out
inc
bound
inc
mov
inc
nop
test
pop
inc
adc
or
stc
dec
(bad)
outs
sbb
sbb
pop
inc
dec
dec
adc
sbb
maxps
dec
shr
cwde
inc
pop
mov
dec
push
and
ja
xchg
push
cmps
add
inc
stos
inc
gs
xchg
jns
inc
xchg
xor
jl
shr
adc
pop
inc
sub
inc
loopne
and
rcr
xor
push
jg
and
adc
inc
xor
cmp
add
inc
cmp
adc
and
add
xor
test
pushf
mov
sbb
pop
sbb
call
sub
sbb
pop
jle
mov
xchg
mov
mov
add
or
aad
and
mov
push
into
xor
cmp
cld
add
xchg
adc
movs
rol
sub
add
mov
nop
jb
push
addr16
push
dec
or
jmp
inc
es
sbb
xor
retf
pop
jno
and
and
add
lods
lds
xchg
push
enter
sahf
mov
adc
push
sub
inc
stos
add
rcr
mov
mov
jmp
dec
mov
movs
cdq
dec
mov
cmp
cmp
xchg
add
mov
xchg
mov
(bad)
xchg
ja
or
sbb
jmp
sbb
repnz
cmps
pusha
jmp
add
xchg
dec
or
push
inc
xor
stos
stos
clc
jno
test
cmp
jne
mov
cwde
or
jmp
out
lods
ja
or
mov
jmp
add
mov
in
push
cld
sbb
adc
aam
add
or
mov
out
or
aad
add
sbb
push
add
cmp
add
sbb
popf
repnz
aad
out
add
rol
cmc
dec
movs
loope
add
movs
cwde
pop
sub
xchg
mov
or
xchg
fld
push
xchg
cs
(bad)
mov
(bad)
mov
sub
lds
(bad)
fimul
jae
pop
es
ins
fdiv
jb
or
es
mov
add
add
(bad)
dec
daa
aaa
fwait
xchg
inc
cmps
lahf
jns
jmp
inc
fist
jbe
push
pushf
add
ss
cmp
xchg
mov
jmp
pop
dec
xchg
dec
pop
outs
add
add
xor
add
imul
rcl
pop
cmp
(bad)
push
xchg
mov
(bad)
adc
aam
scas
mov
(bad)
in
xor
jno
sbb
xor
jo
sbb
xchg
inc
jo
xor
mov
imul
(bad)
mov
scas
arpl
test
in
shr
fdivp
cmps
pusha
add
cmp
push
mov
mov
aad
ret
mov
fndisi(8087
jne
clc
mov
call
popa
mov
test
push
xchg
inc
(bad)
pop
pop
sbb
sbb
adc
jb
and
mov
popa
xchg
aas
jne
cmp
jg
mov
je
out
in
push
scas
ret
mov
bound
dec
mov
mov
pop
aad
add
ds
je
ins
out
lock
mov
mov
push
fimul
into
in
add
add
cmp
mov
sbb
mov
rcr
movs
arpl
push
cmp
les
jl
sbb
cwde
dec
and
add
or
mov
jae
sahf
xchg
fwait
shl
jb
dec
aaa
mov
inc
pusha
mov
pop
bound
sub
call
pop
ret
mov
loope
mov
add
mov
fadd
das
jnp
ja
jo
and
les
test
imul
sub
cmp
mov
mov
aam
mov
jg
ss
push
cwde
cmps
jp
stc
mov
hlt
ja
out
push
add
xchg
mov
out
(bad)
ins
mov
(bad)
adc
ins
inc
aaa
jle
ret
out
dec
mov
sti
mov
cli
jb
sbb
jg
mov
jmp
jno
mov
inc
sub
push
ins
shl
lods
repz
push
add
add
pop
jae
push
je
ins
or
(bad)
outs
pop
cmps
push
xor
outs
sub
imul
jmp
inc
push
js
js
adc
xor
jnp
test
jnp
sub
add
je
xor
push
sbb
jns
xor
retw
push
nop
pop
outs
(bad)
sub
pop
inc
mov
sbb
sub
adc
sub
js
mov
arpl
test
mov
adc
in
xchg
sar
nop
or
addr16
xchg
jnp
outs
(bad)
add
push
inc
dec
xchg
xor
jno
dec
sbb
clc
jo
inc
dec
jns
dec
(bad)
mov
pop
test
sbb
mov
mov
xor
xchg
lock
bound
xchg
inc
and
or
dec
sub
jo
add
xor
xor
sub
mov
mov
dec
push
xchg
jnp
mov
movs
enter
mov
add
rol
inc
clc
mov
adc
sub
fdiv
and
and
mov
jnp
ja
add
push
dec
push
dec
sub
data16
mov
dec
les
xlat
xor
mov
jmp
aas
mov
nop
cmp
xchg
sbb
xlat
adc
cmp
mov
inc
lea
fsubr
test
div
mov
xchg
or
cmp
jl
js
cmps
arpl
mul
mov
not
pop
push
dec
lock
xchg
add
std
test
(bad)
ss
add
dec
out
loope
xchg
sub
mov
jmp
inc
ja
sbb
cmps
xchg
cs
cmc
xchg
sbb
inc
push
and
outs
inc
jns
sbb
xchg
fucomip
je
stc
sbb
jg
xchg
jge
push
push
inc
push
arpl
ja
ret
adc
data16
add
pop
push
or
mov
or
add
js
jns
cmp
sbb
add
clc
xchg
xchg
mov
mov
jns
or
push
ja
xchg
cmp
xchg
sub
mov
sbb
stos
mov
lods
movs
xchg
lods
cdq
test
jne
jmp
mov
jnp
inc
push
shufps
cmp
push
cmp
pop
adc
push
scas
add
mov
(bad)
pop
sub
jne
mov
add
xchg
fst
repnz
mov
jbe
pusha
iret
cdq
xchg
and
repnz
push
sbb
xchg
daa
sbb
push
xor
dec
pushf
loop
pushf
sbb
popa
sbb
xor
jmp
mov
push
mov
mov
or
addr16
test
inc
cdq
mov
add
sbb
xor
mov
pop
inc
popa
out
call
lods
mov
sar
mov
xchg
mov
and
cdq
adc
outs
inc
cmp
popf
and
stc
inc
mov
test
lahf
push
fisubr
cmps
inc
test
cmps
div
shl
test
in
mov
sub
sbb
(bad)
ja
mov
sti
inc
test
cmc
and
fstp
div
icebp
rcr
bound
ins
pop
xchg
dec
inc
arpl
cli
dec
fcmovb
mov
adc
cmp
push
mov
jae
(bad)
daa
or
pop
cmps
pop
pop
mov
popa
sub
bound
lods
add
push
shl
jge
pop
xor
mov
retf
sbb
add
adc
icebp
popa
shl
pop
arpl
add
stos
loope
add
push
lods
popa
sub
sub
lods
xlat
jmp
sub
dec
add
xchg
stos
addr16
add
imul
sub
lods
jns
add
arpl
adc
and
scas
rcl
es
and
jecxz
dec
rol
mov
sub
cld
je
cmp
cmp
and
pop
mov
inc
sub
adc
out
stos
adc
clc
xor
add
mov
mov
movs
icebp
pop
mov
je
sbb
(bad)
xor
es
jp
dec
mov
mov
and
and
and
sub
pop
out
aam
fist
mov
mov
xor
sbb
fstenv
and
push
add
sub
push
or
cmp
add
mov
add
dec
and
or
mov
popa
inc
push
mov
add
push
xchg
dec
in
dec
jne
scas
jmp
mov
inc
xchg
sub
pop
dec
mov
mov
xor
lock
je
adc
and
xor
je
xchg
mov
cmp
and
sub
mov
jns
add
enter
punpcklwd
mov
add
neg
xchg
mov
mov
fsubr
pmaddwd
into
sbb
jmp
add
lds
xor
fwait
push
loope
cmp
test
aaa
arpl
xor
xchg
and
adc
push
and
xor
push
sbb
dec
inc
test
mov
dec
sbb
pop
inc
dec
mov
pop
adc
adc
inc
jae
pop
xchg
rol
sbb
mov
ins
xchg
push
jecxz
mov
or
dec
sbb
fs
or
int3
ret
inc
pop
les
adc
cmp
cli
popa
push
cs
jbe
adc
dec
inc
or
ror
pop
scas
push
inc
push
pop
adc
icebp
dec
xchg
dec
ja
dec
push
add
inc
movs
adc
icebp
inc
jbe
pop
push
shl
ja
mov
sbb
sbb
inc
add
mov
test
xchg
pop
inc
push
jl
xchg
inc
ss
pop
inc
sbb
test
enter
ret
fcom
jecxz
pop
and
sub
cmp
jae
pusha
icebp
cmp
cmp
cmp
sub
and
lahf
mov
adc
xor
inc
das
push
add
leave
mov
retf
retf
fadd
leave
or
retf
lods
int3
mov
pushf
add
cmp
dec
sar
xor
jg
push
adc
bswap
inc
xor
into
int
or
and
adc
xor
into
out
fcom
push
cmp
call
loop
cli
dec
xor
lods
add
clc
int
push
xor
repz
icebp
pushf
shl
push
xor
ins
into
lock
rcl
sbb
out
shl
sbb
outs
add
push
sub
mov
iret
add
movs
repnz
adc
popf
bound
sbb
test
shl
es
inc
ret
push
xor
add
ss
call
popf
sub
rcr
aam
std
add
push
and
ror
lea
push
nop
and
jb
lods
nop
and
aad
inc
aad
ins
and
add
mov
pusha
sbb
mov
xlat
jbe
xlat
imul
imul
nop
or
push
add
or
pusha
sbb
std
fcom
fst
cwde
popf
fstp
add
stc
add
(bad)
aas
add
add
add
sub
add
inc
jo
in
sbb
ins
cmp
jl
scas
fsubr
loopne
xchg
dec
cs
jecxz
jp
pop
sub
lock
(bad)
and
clc
mov
jmp
jl
push
sbb
cmp
push
add
xchg
xchg
cdq
push
xchg
xchg
xchg
bound
cwde
fs
mov
scas
lods
mov
mov
mov
mov
ret
stos
(bad)
mov
(bad)
mov
xchg
ror
scas
mov
into
mov
push
add
in
out
call
loope
add
repnz
in
enter
out
in
(bad)
inc
sub
rol
add
or
call
outs
sbb
arpl
ins
adc
jecxz
and
xor
push
sahf
sbb
nop
loopne
push
add
mov
add
pushf
dec
add
loopne
inc
nop
aam
cmp
sub
cmp
jmp
fcmovbe
cdq
leave
cmps
dec
cmps
push
(bad)
dec
(bad)
out
or
retf
mov
(bad)
or
mov
mov
out
add
adc
adc
pop
int3
ja
fadd
sbb
addr16
add
mov
test
adc
ret
test
ds
mov
jmp
retf
lea
inc
out
sub
and
mov
xor
sub
or
enter
xchg
jg
push
add
jmp
pop
ret
int3
jge
fmul
mov
and
loopne
adc
scas
pop
ins
rcr
fadd
fwait
cmps
out
push
stc
pop
test
out
out
and
xor
pop
sub
popf
add
or
pop
adc
jne
inc
loopne
add
inc
sub
test
clc
add
and
dec
inc
js
add
jle
fiadd
sub
call
js
adc
les
loop
cmp
dec
and
xbegin
repnz
mov
mov
loop
xor
loope
jb
push
loope
es
das
sbb
cwde
mov
fmul
add
mov
pusha
out
js
cdq
daa
add
stc
in
ret
addr16
add
jbe
xchg
addr16
xor
jns
sub
mov
movs
ror
sbb
test
mov
mov
push
mov
add
bound
xchg
adc
cmp
lods
mov
mov
cmps
push
mov
repnz
clc
sbb
sbb
jb
and
sahf
es
xchg
fld
inc
mov
sbb
ins
add
fs
mov
mov
loop
inc
cmc
sbb
rol
mov
js
dec
xor
cmp
shl
mov
cmp
jno
dec
scas
add
fs
mov
mov
inc
adc
je
jo
add
sbb
rol
dec
sbb
mov
mov
sub
stos
push
mov
das
sub
fmul
inc
add
das
int3
xor
sbb
ins
mov
or
cmp
adc
mov
or
add
add
push
cmc
aad
sub
cmps
mov
adc
leave
jns
mov
add
ja
dec
js
lods
neg
add
in
neg
push
fwait
and
fbld
jb
ins
add
pop
mov
add
push
arpl
push
jae
add
push
or
enter
stc
mov
jmp
femms
adc
cmp
sbb
add
jl
scas
sahf
nop
dec
dec
fucom
mov
mov
outs
test
rcl
lock
pop
push
mov
outs
jge
add
js
adc
imul
pop
pusha
cmp
shl
es
cld
hlt
xlat
das
xchg
push
mul
dec
aas
dec
and
inc
ror
jmp
dec
pop
cmc
cs
mov
and
add
icebp
scas
jo
sbb
scas
je
adc
sahf
cli
xchg
daa
inc
mov
dec
mov
mov
data16
xor
sbb
cmc
xor
pop
mov
add
lock
mov
xchg
push
cmp
xchg
jo
loope
dec
jg
jb
and
jae
or
xlat
rol
sbb
mov
or
xchg
inc
out
xor
mov
or
adc
in
nop
popa
mov
outs
(bad)
out
pop
(bad)
shl
cmp
or
ds
test
int3
push
out
fwait
fwait
and
sbb
mov
add
scas
mov
push
xor
(bad)
push
pop
mov
xor
xchg
mov
jno
mov
cmp
shl
fs
sub
pusha
mov
test
mov
ret
jecxz
xor
lea
pusha
jecxz
sub
xor
rol
or
add
jecxz
adc
dec
push
sbb
mov
cmp
(bad)
out
pop
push
xchg
out
dec
cmp
jae
and
xchg
dec
dec
add
push
pusha
rcl
jmp
rol
jno
xor
stos
pop
aad
clc
cmp
cmps
ins
adc
jb
mov
jmp
inc
mov
add
mov
dec
int
out
cmp
lods
addr16
sub
or
mov
out
or
or
push
xor
xchg
ret
mov
pop
adc
dec
jne
add
mov
int
xchg
shr
cdq
and
lods
jp
inc
pop
loop
or
and
imul
test
test
imul
inc
mov
cmc
stos
adc
pop
lds
call
leave
imul
popf
jg
in
pushf
mov
push
or
ror
sub
movs
pop
jmp
inc
inc
sbb
shr
outs
mov
stos
cmp
pusha
add
fmul
ss
retf
pop
(bad)
xchg
sti
add
in
add
rcr
cwde
imul
rcl
ins
jg
or
ret
dec
jb
pop
cmps
add
mov
mov
loopne
enter
dec
setl
test
shl
jne
sbb
aad
dec
dec
iret
add
jmp
cdq
cmps
jo
mov
mov
cmps
retf
mov
sbb
add
test
xchg
xor
adc
dec
nop
fcmovnbe
cmp
and
mov
add
ret
pop
outs
add
sbb
mov
enter
xchg
shr
push
hlt
ror
ror
mov
fs
adc
sub
loopne
and
sbb
lock
pop
and
icebp
les
ins
scas
xchg
pop
nop
out
in
out
leave
inc
(bad)
rcr
push
mov
and
cmps
xor
cdq
pop
push
out
jbe
cmc
xchg
mov
pusha
add
movs
call
lods
mov
sbb
(bad)
and
or
dec
(bad)
xor
dec
adc
cwde
shl
test
es
jae
jbe
push
push
test
sub
(bad)
(bad)
jb
call
add
dec
hlt
addr16
mov
sub
xchg
pop
arpl
xor
neg
jne
mov
mov
push
inc
pop
cmp
dec
xchg
xchg
mov
adc
mov
scas
outs
fmul
sub
jnp
or
pusha
push
lock
fild
out
nop
sub
imul
pop
ja
leave
push
loop
fidiv
(bad)
pop
mov
shr
push
cdq
add
imul
dec
mov
mov
mov
fnsave
fisub
push
not
pop
inc
pop
add
(bad)
fst
push
cmps
dec
aad
hlt
retw
stos
(bad)
cmc
sub
xor
pop
sbb
sub
out
xor
in
pusha
cmc
pop
sahf
fiadd
cld
into
outs
inc
adc
jo
push
imul
inc
or
push
mov
fcom
outs
jp
sbb
add
cmps
mov
imul
aas
mov
jb
rcr
add
and
cmps
sbb
outs
ds
pop
push
adc
add
addr16
pop
add
imul
aaa
adc
xor
fadd
outs
xchg
ss
jp
lds
ins
or
cmp
sub
sub
out
in
js
pop
jb
fld
cld
ror
out
mov
call
push
ja
imul
jg
in
mov
jae
stos
fiadd
and
mov
cmps
popf
mov
sbb
outs
stc
add
mov
in
add
sti
pop
or
test
xchg
mov
mov
mov
rcl
push
ret
jo
aaa
push
mov
push
(bad)
xchg
jbe
daa
adc
(bad)
jg
sar
mov
in
xchg
lods
add
jne
imul
xlat
jne
xchg
cmp
xchg
ss
add
outs
push
add
into
push
jbe
enter
adc
or
sbb
js
inc
jg
xchg
jl
adc
cmp
movs
addr16
inc
jo
add
mov
js
pusha
js
rcl
pop
sub
pop
ja
cmp
jo
push
pop
jmp
xchg
imul
sub
pop
xchg
xor
movs
and
inc
pop
popf
cmps
jnp
mov
inc
mul
add
jl
jne
call
sbb
inc
test
and
pop
xlat
add
push
ja
ret
inc
dec
pop
mov
pop
add
arpl
pop
rcr
shl
push
adc
hlt
cmp
cmp
push
inc
and
repz
and
pop
or
jns
push
fs
add
push
call
aam
lsl
ins
or
in
adc
mov
dec
div
sub
pop
mov
test
jg
ins
imul
push
mov
test
mov
ss
(bad)
pop
push
dec
outs
or
daa
cmp
or
outs
push
add
push
shr
push
sbb
js
xchg
xor
sub
inc
jmp
inc
cmp
mov
xor
jp
xlat
mov
dec
pop
ja
jne
push
push
fnsave
lds
xchg
push
daa
pop
cmp
lea
outs
stos
cmp
xor
fdiv
xchg
das
sbb
dec
jo
dec
inc
mov
js
jbe
cmp
dec
jb
pop
cmp
test
pop
xchg
push
mov
pop
dec
adc
(bad)
stc
call
bnd
pop
les
mov
add
jl
dec
outs
push
cmp
or
push
sub
push
sbb
fs
aaa
clc
mov
daa
xchg
inc
aad
and
arpl
test
inc
mov
or
xchg
data16
xchg
popa
sbb
aas
or
inc
pop
jne
add
push
xor
dec
shl
into
test
or
xchg
xchg
lahf
cdq
xchg
add
mov
cwde
adc
mov
enter
xchg
push
inc
es
in
sbb
nop
pop
xchg
xchg
jbe
je
and
sbb
cmps
jbe
mov
mov
stc
xchg
loope
push
lock
sbb
out
xchg
inc
(bad)
mov
add
rol
fcom
jmp
and
mov
nop
push
sub
cmp
sbb
test
in
jo
pop
repnz
jo
pushf
pop
xlat
sahf
and
pop
mov
add
(bad)
popf
(bad)
js
mov
(bad)
jmp
hlt
mov
or
xchg
fwait
inc
sbb
inc
(bad)
(bad)
inc
in
ja
shl
or
xchg
mov
pop
pusha
jl
mov
cmp
mov
cwde
cmp
or
sub
and
std
jns
push
xchg
pop
sbb
aaa
ins
sbb
mov
or
add
movs
hlt
inc
mov
test
(bad)
jmp
loope
and
and
cmp
stc
jle
push
xchg
pop
(bad)
jns
dec
mov
pop
adc
sbb
mov
mov
cwde
punpckhdq
js
jle
test
xchg
and
xchg
inc
xchg
lahf
push
xor
xchg
mov
and
outs
dec
call
test
mov
inc
adc
and
test
dec
or
fadd
stos
mov
and
sub
push
xchg
sbb
hlt
add
cmp
mov
pushf
mov
ret
xchg
or
mov
xchg
inc
push
cli
nop
push
adc
out
and
xchg
outs
jle
inc
jb
mov
pop
std
mov
and
xor
imul
add
mov
sub
jbe
inc
mov
add
jno
pop
scas
or
mov
(bad)
scas
mov
cmp
xlat
scas
movntps
add
mov
add
in
enter
xchg
outs
mov
xor
sub
arpl
stc
xor
loopne
cmp
xor
data16
addr16
sbb
mov
dec
call
leave
mov
inc
outs
cmps
jae
dec
push
ja
test
xor
jmp
imul
xor
fs
pop
scas
fimul
aad
ins
pop
inc
ins
dec
sti
xor
xchg
test
mov
es
fwait
mul
mov
rcl
mov
(bad)
cmp
test
dec
mov
daa
push
push
add
jp
pop
xchg
int3
mov
sbb
inc
push
rcl
ja
mov
push
daa
(bad)
add
inc
add
add
and
into
movs
aaa
add
mov
dec
dec
and
jo
sub
add
adc
and
wrmsr
mov
mov
mov
push
push
shr
mov
ja
pop
or
sub
xor
mov
in
mov
icebp
cmp
sar
mov
pop
jns
add
jmp
fwait
sti
pop
scas
jne
loopne
mov
js
sub
enter
aaa
add
xchg
jnp
sbb
xor
push
daa
pshufw
pop
stc
pop
daa
sbb
push
test
xchg
in
sub
or
mov
sbb
mov
ficom
sub
repnz
xchg
xor
jb
daa
mov
pusha
dec
push
sbb
mov
cmp
sbb
sbb
les
pushf
ret
sub
test
in
ror
push
pushf
dec
jnp
and
je
fist
gs
sbb
lods
inc
jns
ds
in
pop
int3
dec
shl
add
arpl
push
xor
and
arpl
xor
aaa
cmp
cli
push
sbb
and
data16
sub
add
add
test
imul
mov
mov
mov
ds
mov
test
sbb
aas
js
push
push
dec
mov
sbb
aam
and
dec
mov
push
and
in
push
popf
or
sti
xor
sub
pop
call
ror
rcl
push
push
not
retf
inc
scas
pop
int3
retf
cld
int3
and
fwait
mov
add
mov
xchg
mov
adc
inc
in
loop
das
sbb
(bad)
loope
sbb
inc
sub
xchg
mov
repnz
aas
push
inc
shl
scas
movs
add
and
sub
adc
in
ror
dec
lahf
ins
into
jns
into
out
jl
std
cmp
adc
call
sbb
pcmpgtd
add
imul
cmp
and
push
loope
sub
inc
push
adc
rcl
in
aaa
rol
sub
rcr
xchg
ror
rol
inc
and
popa
adc
sar
sub
cmp
icebp
shl
aam
sub
(bad)
das
pop
rcr
rol
sbb
and
(bad)
repnz
jmp
or
cvttps2pi
adc
sub
inc
rcl
jb
(bad)
outs
int
cmp
mov
push
(bad)
xor
or
loopne
lahf
add
shl
add
add
mov
scas
mov
nop
sbb
int
fdiv
fcomp
or
xchg
sub
sub
and
mov
fldenv
sub
fcmove
mov
add
xlat
sub
fisttp
push
(bad)
add
jo
mov
lods
cmp
mov
or
or
cmps
ror
ret
ins
sub
pop
push
add
pop
fdivr
frstor
frstor
fstp
dec
or
pop
sub
nop
add
lock
fild
bound
fucomip
sub
outs
mov
(bad)
in
sbb
std
jge
add
outs
mov
dec
adc
or
dec
adc
and
add
(bad)
aas
add
add
add
sub
add
inc
mov
xchg
popf
dec
inc
push
dec
adc
jbe
xor
and
mov
dec
cs
iret
call
mov
or
movs
int
add
sbb
ja
and
ins
dec
push
pop
push
jbe
imul
mov
dec
push
add
call
jae
inc
xchg
pop
cdq
adc
test
mov
cmps
add
mov
mov
mov
mov
push
jl
int3
jb
enter
mov
xchg
mov
add
fstp
fnstsw
loopne
adc
mov
or
or
out
add
in
shl
mov
adc
out
sti
cld
std
fsub
mov
push
push
outs
std
clc
std
and
inc
mov
imul
xchg
nop
ffree
mov
add
pop
mov
data16
test
sbb
adc
mov
retf
xchg
sub
pop
xor
jecxz
add
ins
cdq
fsub
and
ss
mov
mov
loope
mov
push
mov
pop
inc
xchg
push
push
jmp
call
stos
push
pop
jne
sub
(bad)
out
xor
jmp
es
pop
add
push
dec
sbb
add
xchg
xchg
ret
jge
addr16
pop
xchg
adc
xor
mov
mov
dec
jp
loopne
mov
arpl
or
jge
inc
jmp
js
ins
mov
pop
rep
out
imul
push
mov
loop
cwde
test
sbb
fdiv
add
aad
repz
in
pop
push
pusha
inc
lock
lahf
dec
mov
repnz
dec
(bad)
cdq
xchg
add
push
xchg
inc
js
add
neg
mov
rcl
idiv
jne
lahf
jle
shl
pop
retf
push
ja
cmp
push
add
jl
xchg
xchg
ror
or
xor
add
add
xor
rcl
inc
(bad)
sbb
inc
jne
push
and
or
imul
xchg
pop
jbe
movs
push
xchg
out
pusha
xchg
sbb
jp
cmps
xlat
add
adc
out
je
pop
add
out
gs
cmp
ror
je
imul
mov
cdq
add
jecxz
push
push
imul
nop
xchg
pop
inc
sbb
dec
(bad)
sub
ja
cli
pop
das
(bad)
nop
enter
push
add
mov
push
lods
mov
lock
test
scas
mov
outs
js
pop
xor
jb
test
fwait
jo
and
sub
xor
inc
push
jns
push
mov
sti
pop
bound
or
in
push
sahf
ins
aad
pop
push
sahf
mov
lods
adc
in
and
(bad)
xor
or
stos
mov
cmps
lods
or
inc
movs
adc
sti
shr
addr16
ret
test
shl
pop
and
jo
push
fdiv
test
jb
mov
jecxz
pushf
retf
mov
outs
outs
push
push
ror
add
fwait
inc
jg
ror
shl
mov
shl
xor
or
shr
imul
sub
pop
rcr
lea
fstp
lock
rcr
rcl
pop
cmp
inc
repz
dec
repnz
cmc
mov
arpl
ds
adc
adc
cmp
fs
push
and
mov
and
in
xor
push
in
out
xchg
adc
mov
fbstp
add
(bad)
in
cwde
pop
(bad)
pop
in
cmp
out
inc
lea
retf
adc
nop
mov
mov
mov
mov
fwait
mov
jecxz
dec
mov
mov
mov
addr16
pop
stc
repnz
mov
ja
adc
clc
jecxz
inc
lds
in
mov
std
repnz
or
or
in
cmp
and
add
sub
not
xchg
(bad)
lods
adc
xchg
mov
add
mov
mov
pop
or
adc
add
jb
cmp
add
rcr
outs
and
push
xchg
pop
shl
dec
fistp
and
imul
or
adc
int3
xchg
sub
jmp
stc
mov
mov
sbb
push
rol
jb
add
icebp
add
xor
or
lods
xor
popf
rcl
int3
push
sbb
lea
pushf
shl
mov
cmp
jb
adc
add
xor
sub
sub
pop
icebp
push
xchg
mov
fldcw
cmp
dec
sbb
push
(bad)
sti
repz
es
xchg
xlat
xor
aam
fxch
inc
es
ins
add
retf
ret
dec
pop
mov
or
rol
aam
add
jo
or
mov
cmp
mov
xor
xchg
adc
push
xchg
sub
rol
gs
or
int
ret
cmc
adc
adc
jg
cmp
retf
rcr
fld
push
fld
int3
test
mov
mov
dec
rol
xor
xchg
adc
stos
aam
sub
imul
push
xor
leave
add
rcl
mov
retf
or
ins
data16
sub
shr
sti
mov
mov
add
call
push
mov
mov
bound
jne
xor
(bad)
rcl
nop
push
test
or
push
pop
pop
jns
mov
mov
mov
mov
mov
xchg
and
(bad)
popf
loope
mov
pop
or
pusha
icebp
cmp
call
ins
mov
push
(bad)
cmc
stos
sbb
xchg
ins
xor
or
pop
and
push
retf
mov
cmp
xchg
sahf
inc
aam
dec
adc
pop
mov
push
mov
push
fld
les
jno
cmps
(bad)
pop
je
mov
and
add
imul
(bad)
jle
in
or
jnp
push
or
xlat
sbb
inc
add
mov
mov
sbb
mov
add
neg
jmp
sbb
jle
test
jbe
add
dec
add
and
cmps
dec
les
mov
scas
mov
sub
ja
pop
xlat
push
shl
jnp
arpl
push
(bad)
pop
fmul
pop
sbb
xor
cmps
loop
fdivr
arpl
js
sbb
loope
lahf
dec
mov
movs
arpl
sbb
push
lods
mov
xor
and
lock
push
in
and
dec
popf
jb
inc
or
(bad)
jb
jbe
in
les
in
iret
adc
repz
fidivr
add
cmp
fcomp
add
fsub
xor
cmp
push
pop
jae
pop
ficom
pminub
jl
(bad)
pop
cdq
push
(bad)
push
pop
mov
adc
arpl
sahf
mov
xor
(bad)
cmp
cmps
xor
shr
cmp
sub
dec
mov
inc
inc
push
cli
sahf
jo
push
(bad)
sub
out
push
mov
cmp
cli
mov
and
xor
int3
ror
retf
xor
cs
out
aad
daa
inc
(bad)
pop
add
or
inc
in
movs
mov
(bad)
bound
mov
jecxz
fisttp
pop
mov
or
data16
sub
jmp
dec
add
sub
(bad)
sbb
cmp
pop
add
aaa
(bad)
out
sbb
inc
fucomp
out
js
sbb
cli
push
cmp
sub
int3
ins
std
outs
(bad)
cmp
out
(bad)
test
sbb
cmp
idiv
in
fnstsw
aas
xor
leave
std
jns
shl
fstp
ja
mov
cmc
pushf
sub
fidiv
push
pushf
aad
mov
jp
add
icebp
dec
xchg
mov
jns
pop
dec
cmp
aam
pop
or
arpl
sahf
je
js
fild
imul
jl
pop
ja
pop
out
and
mov
scas
sbb
mov
fs
mov
pop
mov
outs
xor
pop
pop
xlat
shl
arpl
retf
out
jo
xor
(bad)
icebp
ins
dec
in
std
sahf
jns
push
push
lock
xchg
mov
xchg
mov
cmps
data16
mov
pop
fdivr
fsubp
mov
dec
ja
retf
push
out
enter
push
sti
imul
jbe
clc
xor
cmp
ret
xor
fisttp
inc
out
push
popf
fmul
dec
add
cli
cmc
jge
loopne
inc
cmp
push
sub
movs
push
cmp
scas
rep
add
dec
leave
(bad)
add
xlat
dec
shl
jge
pop
out
xchg
jnp
out
sti
push
jl
cmps
adc
loopne
stos
in
mov
xchg
jbe
adc
xlat
gs
ja
addr16
clc
add
nop
mov
jge
dec
psubb
ja
scas
(bad)
and
pop
add
jo
sbb
jae
and
(bad)
bound
ja
not
cmp
jae
test
mov
xor
bound
sub
and
jg
and
test
push
pop
jp
push
arpl
sbb
mov
add
shl
mov
pop
call
je
aad
sete
mov
xor
jo
test
ins
sti
sar
in
sahf
push
outs
div
xchg
test
outs
dec
fdivr
jmp
bound
test
dec
out
pop
int3
xlat
jb
push
ficom
cwde
and
ja
sbb
jae
loop
cmp
fsubp
xchg
cmp
or
xchg
xchg
xchg
pop
fnsave
and
ror
aaa
js
ins
or
js
lds
addr16
jle
sub
push
jae
clc
jne
xchg
ss
dec
xchg
add
sbb
or
mov
jg
jnp
fs
xchg
(bad)
xchg
mov
call
mov
gs
mov
add
xor
xlat
sub
and
push
or
pop
(bad)
pop
fld
lea
inc
cmp
pop
jg
mov
jne
call
adc
inc
mov
test
pop
inc
mov
out
nop
cdq
mov
adc
pop
and
adc
push
or
mov
sbb
cmp
jne
gs
sbb
xor
xchg
int
jg
je
not
inc
pop
pop
push
stc
inc
push
fldenv
push
sub
(bad)
sbb
int
xchg
or
inc
js
test
push
cdq
idiv
daa
mov
add
fadd
xor
test
jg
pop
pop
sub
mov
mov
dec
jo
jnp
mov
jmp
adc
and
pop
xor
dec
test
out
xchg
or
(bad)
jo
inc
and
cwde
test
jnp
xchg
ins
mov
in
xchg
jle
xchg
dec
push
in
and
inc
push
mov
je
test
imul
xchg
aam
fwait
sub
xchg
mov
fstp
ret
xor
xor
bound
and
inc
je
dec
lahf
mul
fstp
mov
cmp
xchg
inc
mov
test
imul
movs
dec
mov
or
(bad)
neg
xor
mov
retf
stc
inc
(bad)
sbb
xchg
sub
fidivr
shl
mov
sbb
arpl
jp
jno
sbb
cdq
(bad)
(bad)
or
nop
pop
mov
xlat
dec
dec
mov
leave
lahf
lods
fst
movs
dec
in
test
xor
and
cmp
ins
jmp
aaa
inc
(bad)
jns
and
rcl
xchg
aas
retf
mov
fnstenv
xchg
add
aaa
adc
scas
xchg
cwde
sbb
fadd
push
fwait
cmp
dec
inc
call
sbb
sub
movs
std
hlt
movs
sub
js
mov
sbb
xchg
mov
pop
mov
push
push
test
fs
cmc
push
xchg
push
jae
add
das
pop
inc
pop
xor
dec
(bad)
sbb
push
stos
push
mov
xlat
jnp
adc
jp
or
cmp
jecxz
mov
dec
xchg
pop
(bad)
push
stos
fistp
imul
add
inc
rcl
ja
dec
movs
stos
(bad)
gs
xchg
jb
fs
and
inc
in
cmps
lods
dec
lea
lods
cli
jae
out
clc
jns
popa
add
xor
(bad)
not
hlt
jbe
shr
pop
mov
dec
mov
cmps
xchg
in
and
imul
loop
push
ja
mov
sahf
push
clc
sbb
mov
daa
movs
inc
lock
push
aaa
mov
push
add
inc
cwd
outs
mov
push
(bad)
add
jp
add
mov
mov
add
in
mov
push
mov
mov
mov
xor
or
jae
ffreep
pop
sbb
jg
dec
sbb
and
popa
pusha
push
mov
push
jb
inc
add
cmp
jbe
inc
xchg
popa
inc
cmps
mov
dec
mov
div
dec
push
cmps
add
bound
xor
mov
xor
das
or
fisub
js
sbb
jg
mov
xchg
ja
mov
imul
inc
adc
push
adc
cmp
mov
dec
fs
add
pop
sbb
jo
mov
mov
and
test
pop
xchg
gs
push
mov
stos
dec
retf
jmp
sub
jp
imul
sub
fild
pop
test
inc
push
xchg
push
mov
mov
jmp
retf
fstp
stos
push
sub
mov
sar
adc
mov
sub
sar
les
push
lods
push
or
xchg
popf
adc
rcl
xor
pop
push
add
and
xchg
push
inc
gs
lods
push
mov
or
sub
fadd
sub
jl
add
ret
stos
mov
aaa
cmp
(bad)
push
add
ret
fwait
ret
cdq
sub
ins
mov
and
test
and
add
xchg
loope
ins
pusha
pop
div
es
ret
hlt
ret
inc
inc
and
test
dec
mov
aad
dec
mov
test
jl
mov
fcomp
mov
dec
mov
push
pop
ret
(bad)
and
or
dec
popa
test
and
enter
test
ins
push
jb
sub
sbb
inc
arpl
sbb
and
inc
and
inc
dec
mov
ret
xor
movs
jl
test
enter
cdq
movs
retf
xchg
and
push
add
adc
dec
fs
mov
sbb
rol
adc
int3
adc
jl
mov
leave
imul
nop
pop
add
adc
push
int3
ds
retf
daa
mov
shl
je
aaa
mov
test
and
enter
hlt
retf
mov
dec
in
into
jne
cmp
inc
enter
xchg
pushf
mov
and
rol
xlat
in
adc
sub
push
xchg
adc
in
xor
add
xor
adc
adc
dec
or
inc
mov
dec
sub
out
adc
push
pop
aaa
xor
lahf
mov
or
shl
shr
add
rol
mov
psubw
xor
mov
sub
aam
loope
inc
mov
push
adc
mov
or
or
popf
aam
fist
stos
and
popf
aad
popa
sbb
add
clc
loopne
or
sub
adc
(bad)
cs
inc
lods
shr
xor
xor
sub
cmp
xor
xlat
jge
or
sub
cmp
sbb
retf
retf
adc
pop
adc
xchg
fnsave
popa
add
lods
or
(bad)
fisub
xchg
and
jge
mov
mov
bnd
repz
sub
jl
pop
mov
fistp
repnz
nop
dec
add
inc
pop
icebp
rcr
pusha
fisttp
adc
sbb
mov
(bad)
fstp
jl
add
in
sub
sub
adc
add
stc
add
(bad)
aas
add
add
add
sub
add
inc
jo
in
sbb
ins
cmp
jl
scas
fsubr
loopne
xchg
dec
cs
jecxz
jp
pop
sub
lock
(bad)
and
clc
mov
jmp
jl
push
sbb
cmp
push
add
xchg
xchg
cdq
push
xchg
xchg
xchg
bound
cwde
fs
mov
scas
lods
mov
mov
mov
mov
ret
stos
(bad)
mov
(bad)
mov
xchg
ror
scas
mov
into
mov
push
add
in
out
call
loope
add
repnz
in
enter
out
in
(bad)
inc
sub
rol
add
or
call
outs
sbb
arpl
ins
adc
jecxz
and
xor
push
sahf
sbb
nop
loopne
push
add
mov
add
pushf
dec
add
loopne
inc
nop
aam
cmp
sub
cmp
jmp
fcmovbe
cdq
leave
cmps
dec
cmps
push
(bad)
dec
(bad)
out
or
retf
mov
(bad)
or
mov
mov
out
add
adc
adc
pop
int3
ja
fadd
sbb
addr16
add
mov
test
adc
ret
test
ds
mov
jmp
retf
lea
inc
out
sub
and
mov
xor
sub
or
enter
xchg
jg
push
add
jmp
pop
ret
int3
jge
fmul
mov
and
loopne
adc
scas
pop
ins
rcr
fadd
fwait
cmps
out
push
stc
pop
test
out
out
and
xor
pop
sub
popf
add
or
pop
adc
jne
inc
loopne
add
inc
sub
test
clc
add
and
dec
inc
js
add
jle
fiadd
sub
call
js
adc
les
loop
cmp
dec
and
xbegin
repnz
mov
mov
loop
xor
loope
jb
push
loope
es
das
sbb
cwde
mov
fmul
add
mov
pusha
out
js
cdq
daa
add
stc
in
ret
addr16
add
jbe
xchg
addr16
xor
jns
sub
mov
movs
ror
sbb
test
mov
mov
push
mov
add
bound
xchg
adc
cmp
lods
mov
mov
cmps
push
mov
repnz
clc
sbb
sbb
jb
and
sahf
es
xchg
fld
inc
mov
sbb
ins
add
fs
mov
mov
loop
inc
cmc
sbb
rol
mov
js
dec
xor
cmp
shl
mov
cmp
jno
dec
scas
add
fs
mov
mov
inc
adc
je
jo
add
sbb
rol
dec
sbb
mov
mov
sub
stos
push
mov
das
sub
fmul
inc
add
das
int3
xor
sbb
ins
mov
or
cmp
adc
mov
or
add
add
push
cmc
aad
sub
cmps
mov
adc
leave
jns
mov
add
ja
dec
js
lods
neg
add
in
neg
push
fwait
and
fbld
jb
ins
add
pop
mov
add
push
arpl
push
jae
add
push
or
enter
stc
mov
jmp
femms
adc
cmp
sbb
add
jl
scas
sahf
nop
dec
dec
fucom
mov
mov
outs
test
rcl
lock
pop
push
mov
outs
jge
add
js
adc
imul
pop
pusha
cmp
shl
es
cld
hlt
xlat
das
xchg
push
mul
dec
aas
dec
and
inc
ror
jmp
dec
pop
cmc
cs
mov
and
add
icebp
scas
jo
sbb
scas
je
adc
sahf
cli
xchg
daa
inc
mov
dec
mov
mov
data16
xor
sbb
cmc
xor
pop
mov
add
lock
mov
xchg
push
cmp
xchg
jo
loope
dec
jg
jb
and
jae
or
xlat
rol
sbb
mov
or
xchg
inc
out
xor
mov
or
adc
in
nop
popa
mov
outs
(bad)
out
pop
(bad)
shl
cmp
or
ds
test
int3
push
out
fwait
fwait
and
sbb
mov
add
scas
mov
push
xor
(bad)
push
pop
mov
xor
xchg
mov
jno
mov
cmp
shl
fs
sub
pusha
mov
test
mov
ret
jecxz
xor
lea
pusha
jecxz
sub
xor
rol
or
add
jecxz
adc
dec
push
sbb
mov
cmp
(bad)
out
pop
push
xchg
out
dec
cmp
jae
and
xchg
dec
dec
add
push
pusha
rcl
jmp
rol
jno
xor
stos
pop
aad
clc
cmp
cmps
ins
adc
jb
mov
jmp
inc
mov
add
mov
dec
int
out
cmp
lods
addr16
sub
or
mov
out
or
or
push
xor
xchg
ret
mov
pop
adc
dec
jne
add
mov
int
xchg
shr
cdq
and
lods
jp
inc
pop
loop
or
and
imul
test
test
imul
inc
mov
cmc
stos
adc
pop
lds
call
leave
imul
popf
jg
in
pushf
mov
push
or
ror
sub
movs
pop
jmp
inc
inc
sbb
shr
outs
mov
stos
cmp
pusha
add
fmul
ss
retf
pop
(bad)
xchg
sti
add
in
add
rcr
cwde
imul
rcl
ins
jg
or
ret
dec
jb
pop
cmps
add
mov
mov
loopne
enter
dec
setl
test
shl
jne
sbb
aad
dec
dec
iret
add
jmp
cdq
cmps
jo
mov
mov
cmps
retf
mov
sbb
add
test
xchg
xor
adc
dec
nop
fcmovnbe
cmp
and
mov
add
ret
pop
outs
add
sbb
mov
enter
xchg
shr
push
hlt
ror
ror
mov
fs
adc
sub
loopne
and
sbb
lock
pop
and
icebp
les
ins
scas
xchg
pop
nop
out
in
out
leave
inc
(bad)
rcr
push
mov
and
cmps
xor
cdq
pop
push
out
jbe
cmc
xchg
mov
pusha
add
movs
call
lods
mov
sbb
(bad)
and
or
dec
(bad)
xor
dec
adc
cwde
shl
test
es
jae
jbe
push
push
test
sub
(bad)
(bad)
jb
call
add
dec
hlt
addr16
mov
sub
xchg
pop
arpl
xor
neg
jne
mov
mov
push
inc
pop
cmp
dec
xchg
xchg
mov
adc
mov
scas
outs
fmul
sub
jnp
or
pusha
push
lock
fild
out
nop
sub
imul
pop
ja
leave
push
loop
fidiv
(bad)
pop
mov
shr
push
cdq
add
imul
dec
mov
mov
mov
fnsave
fisub
push
not
pop
inc
pop
add
(bad)
fst
push
cmps
dec
aad
hlt
retw
stos
(bad)
cmc
sub
xor
pop
sbb
sub
out
xor
in
pusha
cmc
pop
sahf
fiadd
cld
into
outs
inc
adc
jo
push
imul
inc
or
push
mov
fcom
outs
jp
sbb
add
cmps
mov
imul
aas
mov
jb
rcr
add
and
cmps
sbb
outs
ds
pop
push
adc
add
addr16
pop
add
imul
aaa
adc
xor
fadd
outs
xchg
ss
jp
lds
ins
or
cmp
sub
sub
out
in
js
pop
jb
fld
cld
ror
out
mov
call
push
ja
imul
jg
in
mov
jae
stos
fiadd
and
mov
cmps
popf
mov
sbb
outs
stc
add
mov
in
add
sti
pop
or
test
xchg
mov
mov
mov
rcl
push
ret
jo
aaa
push
mov
push
(bad)
xchg
jbe
daa
adc
(bad)
jg
sar
mov
in
xchg
lods
add
jne
imul
xlat
jne
xchg
cmp
xchg
ss
add
outs
push
add
into
push
jbe
enter
adc
or
sbb
js
inc
jg
xchg
jl
adc
cmp
movs
addr16
inc
jo
add
mov
js
pusha
js
rcl
pop
sub
pop
ja
cmp
jo
push
pop
jmp
xchg
imul
sub
pop
xchg
xor
movs
and
inc
pop
popf
cmps
jnp
mov
inc
mul
add
jl
jne
call
sbb
inc
test
and
pop
xlat
add
push
ja
ret
inc
dec
pop
mov
pop
add
arpl
pop
rcr
shl
push
adc
hlt
cmp
cmp
push
inc
and
repz
and
pop
or
jns
push
fs
add
push
call
aam
lsl
ins
or
in
adc
mov
dec
div
sub
pop
mov
test
jg
ins
imul
push
mov
test
mov
ss
(bad)
pop
push
dec
outs
or
daa
cmp
or
outs
push
add
push
shr
push
sbb
js
xchg
xor
sub
inc
jmp
inc
cmp
mov
xor
jp
xlat
mov
dec
pop
ja
jne
push
push
fnsave
lds
xchg
push
daa
pop
cmp
lea
outs
stos
cmp
xor
fdiv
xchg
das
sbb
dec
jo
dec
inc
mov
js
jbe
cmp
dec
jb
pop
cmp
test
pop
xchg
push
mov
pop
dec
adc
(bad)
stc
call
bnd
pop
les
mov
add
jl
dec
outs
push
cmp
or
push
sub
push
sbb
fs
aaa
clc
mov
daa
xchg
inc
aad
and
arpl
test
inc
mov
or
xchg
data16
xchg
popa
sbb
aas
or
inc
pop
jne
add
push
xor
dec
shl
into
test
or
xchg
xchg
lahf
cdq
xchg
add
mov
cwde
adc
mov
enter
xchg
push
inc
es
in
sbb
nop
pop
xchg
xchg
jbe
je
and
sbb
cmps
jbe
mov
mov
stc
xchg
loope
push
lock
sbb
out
xchg
inc
(bad)
mov
add
rol
fcom
jmp
and
mov
nop
push
sub
cmp
sbb
test
in
jo
pop
repnz
jo
pushf
pop
xlat
sahf
and
pop
mov
add
(bad)
popf
(bad)
js
mov
(bad)
jmp
hlt
mov
or
xchg
fwait
inc
sbb
inc
(bad)
(bad)
inc
in
ja
shl
or
xchg
mov
pop
pusha
jl
mov
cmp
mov
cwde
cmp
or
sub
and
std
jns
push
xchg
pop
sbb
aaa
ins
sbb
mov
or
add
movs
hlt
inc
mov
test
(bad)
jmp
loope
and
and
cmp
stc
jle
push
xchg
pop
(bad)
jns
dec
mov
pop
adc
sbb
mov
mov
cwde
punpckhdq
js
jle
test
xchg
and
xchg
inc
xchg
lahf
push
xor
xchg
mov
and
outs
dec
call
test
mov
inc
adc
and
test
dec
or
fadd
stos
mov
and
sub
push
xchg
sbb
hlt
add
cmp
mov
pushf
mov
ret
xchg
or
mov
xchg
inc
push
cli
nop
push
adc
out
and
xchg
outs
jle
inc
jb
mov
pop
std
mov
and
xor
imul
add
mov
sub
jbe
inc
mov
add
jno
pop
scas
or
mov
(bad)
scas
mov
cmp
xlat
scas
movntps
add
mov
add
in
enter
xchg
outs
mov
xor
sub
arpl
stc
xor
loopne
cmp
xor
data16
addr16
sbb
mov
dec
call
leave
mov
inc
outs
cmps
jae
dec
push
ja
test
xor
jmp
imul
xor
fs
pop
scas
fimul
aad
ins
pop
inc
ins
dec
sti
xor
xchg
test
mov
es
fwait
mul
mov
rcl
mov
(bad)
cmp
test
dec
mov
daa
push
push
add
jp
pop
xchg
int3
mov
sbb
inc
push
rcl
ja
mov
push
daa
(bad)
add
inc
add
add
and
into
movs
aaa
add
mov
dec
dec
and
jo
sub
add
adc
and
wrmsr
mov
mov
mov
push
push
shr
mov
ja
pop
or
sub
xor
mov
in
mov
icebp
cmp
sar
mov
pop
jns
add
jmp
fwait
sti
pop
scas
jne
loopne
mov
js
sub
enter
aaa
add
xchg
jnp
sbb
xor
push
daa
pshufw
pop
stc
pop
daa
sbb
push
test
xchg
in
sub
or
mov
sbb
mov
ficom
sub
repnz
xchg
xor
jb
daa
mov
pusha
dec
push
sbb
mov
cmp
sbb
sbb
les
pushf
ret
sub
test
in
ror
push
pushf
dec
jnp
and
je
fist
gs
sbb
lods
inc
jns
ds
in
pop
int3
dec
shl
add
arpl
push
xor
and
arpl
xor
aaa
cmp
cli
push
sbb
and
data16
sub
add
add
test
imul
mov
mov
mov
ds
mov
test
sbb
aas
js
push
push
dec
mov
sbb
aam
and
dec
mov
push
and
in
push
popf
or
sti
xor
sub
pop
call
ror
rcl
push
push
not
retf
inc
scas
pop
int3
retf
cld
int3
and
fwait
mov
add
mov
xchg
mov
adc
inc
in
loop
das
sbb
(bad)
loope
sbb
inc
sub
xchg
mov
repnz
aas
push
inc
shl
scas
movs
add
and
sub
adc
in
ror
dec
lahf
ins
into
jns
into
out
jl
std
cmp
adc
call
sbb
pcmpgtd
add
imul
cmp
and
push
loope
sub
inc
push
adc
rcl
in
aaa
rol
sub
rcr
xchg
ror
rol
inc
and
popa
adc
sar
sub
cmp
icebp
shl
aam
sub
(bad)
das
pop
rcr
rol
sbb
and
(bad)
repnz
jmp
or
cvttps2pi
adc
sub
inc
rcl
jb
(bad)
outs
int
cmp
mov
push
(bad)
xor
or
loopne
lahf
add
shl
add
add
mov
scas
mov
nop
sbb
int
fdiv
fcomp
or
xchg
sub
sub
and
mov
fldenv
sub
fcmove
mov
add
xlat
sub
fisttp
push
(bad)
add
jo
mov
lods
cmp
mov
or
or
cmps
ror
ret
ins
sub
pop
push
add
pop
fdivr
frstor
frstor
fstp
dec
or
pop
sub
nop
add
lock
fild
bound
fucomip
sub
outs
mov
(bad)
in
sbb
std
jge
add
outs
mov
dec
adc
or
dec
adc
and
add
(bad)
aas
add
add
add
sub
add
inc
jo
sub
(bad)
leave
ins
cmp
lods
pop
scas
fsubr
loopne
js
outs
cmp
mov
int
dec
fistp
fsubr
clc
jl
lods
into
inc
div
jno
outs
jae
pop
sbb
lea
mov
nop
jg
adc
ja
lea
stos
cmps
bound
pushf
push
add
mov
mov
push
ret
push
or
ret
int
into
mov
mov
iret
ret
leave
dec
mov
mov
(bad)
dec
xchg
push
ret
lock
repnz
(bad)
(bad)
adc
push
out
adc
adc
push
out
jno
mov
or
add
or
adc
and
loope
cmp
adc
push
add
sub
or
push
test
leave
mov
dec
xchg
or
add
mov
or
(bad)
mov
pop
adc
shl
dec
and
sub
je
aas
cmps
inc
(bad)
add
dec
scas
xor
or
ja
ins
dec
mov
push
xchg
or
dec
fadd
scas
fnstsw
shl
daa
sub
pusha
ret
test
push
jmp
and
sub
lock
adc
cli
test
jmp
in
push
xor
xchg
retf
jp
test
cld
f2xm1
call
or
or
dec
jl
out
or
adc
xchg
in
ja
mov
mov
or
cmp
(bad)
xor
data16
idiv
int
mov
data16
(bad)
out
sti
clc
out
and
xchg
fcmovb
in
rcr
lods
add
push
or
dec
inc
add
xor
loope
add
and
inc
jns
fcom
loop
movs
sbb
lods
ret
sub
xor
add
add
mov
nop
fcom
les
leave
ins
pop
or
and
pop
or
sbb
bound
pop
stos
(bad)
inc
cmp
dec
jo
add
test
rol
pop
inc
rol
jecxz
dec
loop
fdivr
add
pusha
rcr
sbb
mov
mov
sbb
js
repnz
add
mov
daa
cwde
jle
dec
cmps
mov
aaa
pushf
xchg
sub
push
cwde
loopne
xchg
dec
loopne
push
xor
inc
add
cdq
icebp
jb
mov
arpl
push
adc
sbb
jb
test
cmps
test
pusha
add
jmp
sub
sub
xor
mov
mov
dec
inc
ja
xor
imul
in
pop
sbb
scas
mov
sahf
cli
dec
jp
mov
stos
dec
mov
ror
call
adc
jmp
xchg
xor
add
push
sbb
pop
jo
sbb
cmp
mov
(bad)
repnz
add
inc
shl
add
pushf
inc
int3
add
or
scas
cmp
xor
push
lea
clc
pop
jo
sbb
push
rcl
(bad)
loopne
je
iret
ins
xor
cmp
pop
push
pop
rcr
adc
jecxz
rcl
xor
lods
add
pop
ja
fnsave
cmc
add
dec
pop
adc
sahf
fnsave
xchg
loope
(bad)
xor
aas
nop
div
dec
aas
xchg
outs
mov
jns
xchg
jae
dec
fdiv
dec
lock
sub
pop
div
mov
(bad)
in
mov
xchg
sbb
rol
aam
mul
dec
mov
lds
jno
push
jne
mov
mov
jo
jl
jo
inc
adc
cmp
sbb
sbb
xor
clc
inc
mov
js
sub
stos
dec
sar
hlt
lahf
lahf
add
fimul
dec
inc
cli
shl
mov
hlt
sbb
xchg
pushf
les
add
dec
inc
movs
sbb
and
xchg
repz
add
mov
hlt
pop
mov
ficom
add
jne
and
mov
fistp
mov
push
pop
add
add
adc
add
call
add
test
mov
leave
jns
push
sub
fistp
or
add
repz
iret
gs
call
or
push
ret
rol
(bad)
and
sbb
push
add
jns
and
(bad)
mov
mov
jmp
pop
sub
jge
ret
enter
sub
or
and
jb
aad
push
mov
test
jecxz
or
call
push
out
inc
bound
inc
mov
inc
nop
test
pop
inc
adc
or
stc
dec
(bad)
outs
sbb
sbb
pop
inc
dec
dec
adc
sbb
maxps
dec
shr
cwde
inc
pop
mov
dec
push
and
ja
xchg
push
cmps
add
inc
stos
inc
gs
xchg
jns
inc
xchg
xor
jl
shr
adc
pop
inc
sub
inc
loopne
and
rcr
xor
push
jg
and
adc
inc
xor
cmp
add
inc
cmp
adc
and
add
xor
test
pushf
mov
sbb
pop
sbb
call
sub
sbb
pop
jle
mov
xchg
mov
mov
add
or
aad
and
mov
push
into
xor
cmp
cld
add
xchg
adc
movs
rol
sub
add
mov
nop
jb
push
addr16
push
dec
or
jmp
inc
es
sbb
xor
retf
pop
jno
and
and
add
lods
lds
xchg
push
enter
sahf
mov
adc
push
sub
inc
stos
add
rcr
mov
mov
jmp
dec
mov
movs
cdq
dec
mov
cmp
cmp
xchg
add
mov
xchg
mov
(bad)
xchg
ja
or
sbb
jmp
sbb
repnz
cmps
pusha
jmp
add
xchg
dec
or
push
inc
xor
stos
stos
clc
jno
test
cmp
jne
mov
cwde
or
jmp
out
lods
ja
or
mov
jmp
add
mov
in
push
cld
sbb
adc
aam
add
or
mov
out
or
aad
add
sbb
push
add
cmp
add
sbb
popf
repnz
aad
out
add
rol
cmc
dec
movs
loope
add
movs
cwde
pop
sub
xchg
mov
or
xchg
fld
push
xchg
cs
(bad)
mov
(bad)
mov
sub
lds
(bad)
fimul
jae
pop
es
ins
fdiv
jb
or
es
mov
add
add
(bad)
dec
daa
aaa
fwait
xchg
inc
cmps
lahf
jns
jmp
inc
fist
jbe
push
pushf
add
ss
cmp
xchg
mov
jmp
pop
dec
xchg
dec
pop
outs
add
add
xor
add
imul
rcl
pop
cmp
(bad)
push
xchg
mov
(bad)
adc
aam
scas
mov
(bad)
in
xor
jno
sbb
xor
jo
sbb
xchg
inc
jo
xor
mov
imul
(bad)
mov
scas
arpl
test
in
shr
fdivp
cmps
pusha
add
cmp
push
mov
mov
aad
ret
mov
fndisi(8087
jne
clc
mov
call
popa
mov
test
push
xchg
inc
(bad)
pop
pop
sbb
sbb
adc
jb
and
mov
popa
xchg
aas
jne
cmp
jg
mov
je
out
in
push
scas
ret
mov
bound
dec
mov
mov
pop
aad
add
ds
je
ins
out
lock
mov
mov
push
fimul
into
in
add
add
cmp
mov
sbb
mov
rcr
movs
arpl
push
cmp
les
jl
sbb
cwde
dec
and
add
or
mov
jae
sahf
xchg
fwait
shl
jb
dec
aaa
mov
inc
pusha
mov
pop
bound
sub
call
pop
ret
mov
loope
mov
add
mov
fadd
das
jnp
ja
jo
and
les
test
imul
sub
cmp
mov
mov
aam
mov
jg
ss
push
cwde
cmps
jp
stc
mov
hlt
ja
out
push
add
xchg
mov
out
(bad)
ins
mov
(bad)
adc
ins
inc
aaa
jle
ret
out
dec
mov
sti
mov
cli
jb
sbb
jg
mov
jmp
jno
mov
inc
sub
push
ins
shl
lods
repz
push
add
add
pop
jae
push
je
ins
or
(bad)
outs
pop
cmps
push
xor
outs
sub
imul
jmp
inc
push
js
js
adc
xor
jnp
test
jnp
sub
add
je
xor
push
sbb
jns
xor
retw
push
nop
pop
outs
(bad)
sub
pop
inc
mov
sbb
sub
adc
sub
js
mov
arpl
test
mov
adc
in
xchg
sar
nop
or
addr16
xchg
jnp
outs
(bad)
add
push
inc
dec
xchg
xor
jno
dec
sbb
clc
jo
inc
dec
jns
dec
(bad)
mov
pop
test
sbb
mov
mov
xor
xchg
lock
bound
xchg
inc
and
or
dec
sub
jo
add
xor
xor
sub
mov
mov
dec
push
xchg
jnp
mov
movs
enter
mov
add
rol
inc
clc
mov
adc
sub
fdiv
and
and
mov
jnp
ja
add
push
dec
push
dec
sub
data16
mov
dec
les
xlat
xor
mov
jmp
aas
mov
nop
cmp
xchg
sbb
xlat
adc
cmp
mov
inc
lea
fsubr
test
div
mov
xchg
or
cmp
jl
js
cmps
arpl
mul
mov
not
pop
push
dec
lock
xchg
add
std
test
(bad)
ss
add
dec
out
loope
xchg
sub
mov
jmp
inc
ja
sbb
cmps
xchg
cs
cmc
xchg
sbb
inc
push
and
outs
inc
jns
sbb
xchg
fucomip
je
stc
sbb
jg
xchg
jge
push
push
inc
push
arpl
ja
ret
adc
data16
add
pop
push
or
mov
or
add
js
jns
cmp
sbb
add
clc
xchg
xchg
mov
mov
jns
or
push
ja
xchg
cmp
xchg
sub
mov
sbb
stos
mov
lods
movs
xchg
lods
cdq
test
jne
jmp
mov
jnp
inc
push
shufps
cmp
push
cmp
pop
adc
push
scas
add
mov
(bad)
pop
sub
jne
mov
add
xchg
fst
repnz
mov
jbe
pusha
iret
cdq
xchg
and
repnz
push
sbb
xchg
daa
sbb
push
xor
dec
pushf
loop
pushf
sbb
popa
sbb
xor
jmp
mov
push
mov
mov
or
addr16
test
inc
cdq
mov
add
sbb
xor
mov
pop
inc
popa
out
call
lods
mov
sar
mov
xchg
mov
and
cdq
adc
outs
inc
cmp
popf
and
stc
inc
mov
test
lahf
push
fisubr
cmps
inc
test
cmps
div
shl
test
in
mov
sub
sbb
(bad)
ja
mov
sti
inc
test
cmc
and
fstp
div
icebp
rcr
bound
ins
pop
xchg
dec
inc
arpl
cli
dec
fcmovb
mov
adc
cmp
push
mov
jae
(bad)
daa
or
pop
cmps
pop
pop
mov
popa
sub
bound
lods
add
push
shl
jge
pop
xor
mov
retf
sbb
add
adc
icebp
popa
shl
pop
arpl
add
stos
loope
add
push
lods
popa
sub
sub
lods
xlat
jmp
sub
dec
add
xchg
stos
addr16
add
imul
sub
lods
jns
add
arpl
adc
and
scas
rcl
es
and
jecxz
dec
rol
mov
sub
cld
je
cmp
cmp
and
pop
mov
inc
sub
adc
out
stos
adc
clc
xor
add
mov
mov
movs
icebp
pop
mov
je
sbb
(bad)
xor
es
jp
dec
mov
mov
and
and
and
sub
pop
out
aam
fist
mov
mov
xor
sbb
fstenv
and
push
add
sub
push
or
cmp
add
mov
add
dec
and
or
mov
popa
inc
push
mov
add
push
xchg
dec
in
dec
jne
scas
jmp
mov
inc
xchg
sub
pop
dec
mov
mov
xor
lock
je
adc
and
xor
je
xchg
mov
cmp
and
sub
mov
jns
add
enter
punpcklwd
mov
add
neg
xchg
mov
mov
fsubr
pmaddwd
into
sbb
jmp
add
lds
xor
fwait
push
loope
cmp
test
aaa
arpl
xor
xchg
and
adc
push
and
xor
push
sbb
dec
inc
test
mov
dec
sbb
pop
inc
dec
mov
pop
adc
adc
inc
jae
pop
xchg
rol
sbb
mov
ins
xchg
push
jecxz
mov
or
dec
sbb
fs
or
int3
ret
inc
pop
les
adc
cmp
cli
popa
push
cs
jbe
adc
dec
inc
or
ror
pop
scas
push
inc
push
pop
adc
icebp
dec
xchg
dec
ja
dec
push
add
inc
movs
adc
icebp
inc
jbe
pop
push
shl
ja
mov
sbb
sbb
inc
add
mov
test
xchg
pop
inc
push
jl
xchg
inc
ss
pop
inc
sbb
test
enter
ret
fcom
jecxz
pop
and
sub
cmp
jae
pusha
icebp
cmp
cmp
cmp
sub
and
lahf
mov
adc
xor
inc
das
push
add
leave
mov
retf
retf
fadd
leave
or
retf
lods
int3
mov
pushf
add
cmp
dec
sar
xor
jg
push
adc
bswap
inc
xor
into
int
or
and
adc
xor
into
out
fcom
push
cmp
call
loop
cli
dec
xor
lods
add
clc
int
push
xor
repz
icebp
pushf
shl
push
xor
ins
into
lock
rcl
sbb
out
shl
sbb
outs
add
push
sub
mov
iret
add
movs
repnz
adc
popf
bound
sbb
test
shl
es
inc
ret
push
xor
add
ss
call
popf
sub
rcr
aam
std
add
push
and
ror
lea
push
nop
and
jb
lods
nop
and
aad
inc
aad
ins
and
add
mov
pusha
sbb
mov
xlat
jbe
xlat
imul
imul
nop
or
push
add
or
pusha
sbb
std
fcom
fst
cwde
popf
fstp
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sbb
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
push
push
adc
adc
adc
adc
pop
adc
sbb
adc
pop
pop
sbb
push
push
and
push
and
push
pop
sub
and
daa
sub
xor
pop
xor
cmp
inc
daa
aaa
sub
(bad)
fild
inc
add
or
add
add
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
jo
push
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
or
int
(bad)
loop
sbb
sub
int3
lods
jmp
push
fist
inc
sbb
xlat
movs
inc
jno
xchg
mov
mov
push
xor
xchg
mov
bound
mov
mov
stos
inc
(bad)
das
xchg
cwde
les
ds
sub
fiadd
(bad)
mov
and
adc
adc
mov
mov
in
jne
(bad)
mov
sbb
mov
fs
lods
jle
pop
arpl
cmp
jno
aas
cs
(bad)
in
test
sbb
cmp
pushf
ins
mov
mov
pusha
mov
xchg
movs
xor
cli
inc
jno
add
cmp
inc
jecxz
mov
add
jno
sbb
iret
xchg
lods
or
std
cmps
push
xchg
and
mov
or
loopne
sahf
lods
sbb
out
call
sub
inc
into
push
dec
mov
xor
jge
cmp
xor
push
and
adc
adc
jnp
out
jnp
into
rol
lods
inc
adc
add
push
pop
adc
sub
popf
jecxz
adc
cmp
nop
lods
sub
and
int
fimul
fstp
jae
inc
and
add
dec
sub
push
mov
push
lock
fucom
mov
sbb
inc
or
xor
sar
xchg
(bad)
mul
stc
or
add
arpl
add
pusha
add
add
sub
push
xchg
jae
sbb
sbb
inc
or
sub
jmp
mov
mov
jmp
dec
(bad)
push
inc
mov
sub
imul
jo
int3
pop
test
jns
movs
leave
mov
fild
test
pop
ss
pop
push
inc
xchg
mov
pop
ja
mov
sub
and
and
call
jae
movs
push
cmp
add
stc
out
mov
scas
adc
xor
mov
mov
jae
stos
fdivrp
jno
mov
out
push
and
popa
fadd
and
cld
mov
add
push
xchg
jg
mov
push
jno
mov
add
add
or
add
out
cmp
fisub
ret
push
jbe
sbb
pop
pop
lock
mov
xchg
popf
retf
mov
rol
xchg
retf
sub
and
sbb
in
out
xchg
push
daa
fdiv
inc
mov
ins
add
and
out
mov
outs
fisttp
xchg
into
inc
fsub
call
cmp
jo
pop
or
or
xor
int
push
loopne
add
mov
mov
add
stos
add
ins
sub
scas
and
fistp
les
jp
pop
not
aas
ffree
jo
out
or
mov
(bad)
and
sub
push
js
dec
cmp
test
jecxz
xchg
arpl
add
fld
mov
sti
mov
cmp
ficomp
push
mov
rol
push
and
mov
push
rcr
bound
push
fdivr
sbb
mov
iret
pop
retf
pop
lds
icebp
out
dec
(bad)
dec
xlat
and
adc
xor
enter
add
jmp
sbb
xchg
lods
lods
mov
cmp
sbb
jmp
dec
mov
dec
and
adc
sub
mov
imul
je
ret
push
not
fstp
int
mov
mov
mov
(bad)
imul
and
dec
cmp
shl
iret
mov
enter
adc
jno
mov
jp
icebp
in
dec
push
sbb
pop
in
mov
fidivr
xor
add
mov
pop
xor
mov
sub
lods
sbb
or
lds
and
dec
scas
xchg
imul
cmp
pop
in
push
xchg
jbe
sub
jo
mov
xor
push
pop
xchg
frstor
arpl
pop
imul
pop
sub
sbb
cmp
lods
pop
repnz
adc
aaa
mov
addr16
outs
shl
into
movs
pop
xor
jae
cmp
mov
test
add
dec
inc
add
div
or
mov
mov
dec
and
enter
arpl
and
mov
jmp
inc
mov
and
mov
fild
inc
add
mov
mov
ror
xchg
sbb
adc
sub
pop
jne
div
adc
clc
(bad)
dec
pop
pushf
sahf
fldenv
cdq
cmps
imul
pop
fisttp
mov
dec
daa
or
cld
dec
xchg
loopne
aam
bound
(bad)
jo
xor
adc
shr
cs
xor
stc
and
add
sahf
mov
lods
sub
outs
aam
enter
into
cmp
mov
out
sub
into
sbb
mov
scas
pop
add
ds
mov
aaa
ss
aad
jbe
int
pop
inc
pop
imul
add
test
sahf
or
popa
and
mov
pop
mov
dec
ins
add
clc
shr
xchg
(bad)
dec
or
sub
mov
fnstenv
rol
outs
cdq
adc
sub
sbb
ins
test
fsubr
pop
fld
pop
nop
es
(bad)
mul
pop
rcl
mov
cli
jmp
fcmovnb
adc
add
sub
add
mov
lods
xchg
cdq
and
gs
add
cmp
xor
inc
sbb
cmp
inc
jmp
and
jle
repnz
fild
adc
(bad)
jl
in
inc
fadd
sub
push
push
fcmove
xchg
mov
push
nop
mov
pop
mov
mov
aad
aas
dec
inc
sbb
mov
push
jle
ror
dec
sub
jle
iret
xor
and
ror
repz
jb
icebp
adc
in
mov
mul
cmp
inc
mov
mov
jo
and
ror
movs
outs
sub
lods
lods
gs
mov
fldcw
cmp
sbb
cmp
aas
stc
sbb
(bad)
mov
jl
aas
icebp
cmp
inc
call
add
jb
cli
hlt
inc
fld
inc
mov
std
pop
sbb
xor
test
cmp
fidiv
arpl
pop
jne
ins
stos
mov
inc
add
and
push
jns
ret
(bad)
inc
cmp
mov
loopne
push
xor
xchg
repnz
cmp
push
dec
imul
dec
das
sti
imul
mov
cdq
sbb
test
aam
cld
les
dec
fld
sub
leave
inc
sbb
hlt
enter
adc
iret
imul
retf
add
xor
pop
shr
or
push
xchg
test
xor
inc
arpl
scas
xchg
inc
stc
sub
rol
add
or
repz
and
dec
inc
cmp
out
mov
xchg
jge
cdq
dec
sub
daa
scas
adc
dec
fs
cmp
mov
xor
lahf
outs
leave
rcr
jae
enter
gs
loope
ret
push
mov
add
sbb
addr16
xor
(bad)
cli
lods
arpl
repz
pop
mov
rol
out
push
mov
inc
xchg
out
test
fld1
mov
sub
adc
repnz
xor
push
or
(bad)
cmp
pop
les
sub
cdq
mov
mov
add
lock
stos
mov
outs
outs
das
call
mov
xor
stos
inc
adc
sbb
pop
std
popf
loopne
adc
fmul
and
ins
jl
aam
call
inc
jecxz
stos
lock
inc
mov
inc
(bad)
test
dec
sar
stc
pop
inc
(bad)
push
mov
xlat
mov
dec
ja
xchg
push
dec
mov
idiv
pop
lds
pop
cmps
scas
mov
cli
lods
lahf
cld
jle
(bad)
adc
out
push
daa
inc
mov
rol
adc
daa
(bad)
fcmovnbe
push
cld
adc
xchg
dec
sbb
cmp
bound
mov
out
xor
cmp
mov
inc
adc
into
mov
push
and
inc
mov
xor
(bad)
mov
mov
retf
in
int
and
nop
sub
pop
outs
fst
in
xor
cmc
sbb
mov
repz
scas
cmc
xor
sti
lds
inc
sbb
repnz
xchg
and
stos
into
dec
inc
cmp
cmp
test
(bad)
(bad)
pop
sar
adc
and
(bad)
pushf
(bad)
loope
jmp
bound
popa
pop
add
xchg
out
xchg
xor
dec
nop
cwde
fdivr
inc
jns
jmp
dec
xor
pop
es
repnz
int3
rol
stos
loop
push
pop
add
dec
ds
or
repnz
mov
outs
jecxz
in
(bad)
retf
cmps
mov
ins
pushf
rdtsc
jl
(bad)
fwait
add
fild
and
mov
add
add
popf
fisub
shr
xor
xor
xchg
not
push
mov
mov
inc
rcl
mov
mov
jbe
add
in
cmp
cmp
add
jmp
xor
sbb
xchg
inc
aaa
adc
and
int3
fs
test
pop
dec
sub
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
push
pop
or
push
or
pop
or
or
or
or
sbb
and
and
xor
and
xor
pop
pop
sub
aaa
cmp
cmp
sub
inc
aas
cmp
cmp
aaa
(bad)
fild
inc
add
or
or
bndldx
and
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
inc
add
or
jno
xchg
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
icebp
daa
mov
lds
mov
movs
imul
sub
inc
add
pop
jecxz
jp
inc
cwde
(bad)
movs
inc
adc
inc
pop
sar
add
(bad)
test
je
fwait
push
lea
rol
sar
rcr
sub
cs
out
arpl
push
fadd
sbb
add
push
mov
and
and
push
sub
or
(bad)
std
lahf
push
loop
call
aas
xchg
es
lock
add
daa
movs
aas
addr16
mov
dec
(bad)
adc
movs
sahf
inc
jmp
imul
cmp
jne
cld
or
sbb
stos
div
mov
xchg
out
pop
outs
adc
(bad)
arpl
(bad)
inc
mov
pop
cld
or
jnp
icebp
rol
popa
cmp
mov
xor
cld
push
aad
lods
jae
jmp
push
adc
div
mov
push
sar
add
or
addr16
repnz
aam
lock
add
stos
sub
icebp
call
jbe
sti
dec
popf
leave
inc
stos
lods
not
cmc
paddb
jg
movs
(bad)
aad
xor
add
ins
inc
inc
add
ficom
in
fs
addr16
cmc
add
nop
mov
inc
or
cmps
jmp
adc
add
dec
and
push
fistp
retf
inc
pop
cmp
aam
or
call
outs
mov
push
xchg
ret
ret
xchg
mov
mov
clc
mov
gs
mov
mov
jecxz
int3
test
cld
clc
ds
js
je
dec
pop
cs
cmp
loope
int3
shl
je
out
fs
xor
and
out
fist
mov
scas
cmps
xor
dec
cmp
out
cmp
pushf
jmp
cld
mov
loope
(bad)
movs
cli
hlt
jmp
inc
not
gs
cwde
add
rcr
adc
push
and
imul
push
sbb
xchg
ror
(bad)
mov
shl
jno
add
inc
scas
xchg
lahf
hlt
jmp
push
cs
sbb
or
add
jge
sbb
mov
add
cli
jg
sbb
push
add
scas
jbe
jb
xchg
add
push
imul
or
mov
cmps
push
pusha
push
mov
fwait
ss
sub
dec
xchg
ror
sbb
pusha
rcl
lods
lds
sub
lods
inc
adc
fs
loope
xor
mov
cmp
mov
cs
retf
int3
mov
xchg
jmp
add
pop
outs
fsub
(bad)
dec
inc
and
es
jmp
sbb
out
sub
es
fdiv
bound
cmp
mov
mov
push
out
jle
nop
and
daa
xchg
test
jp
ins
push
cld
test
sbb
(bad)
mov
sbb
or
mov
test
dec
movs
adc
iret
cmp
dec
ds
aad
mov
add
jle
mov
pop
fdivrp
add
ins
xchg
xor
out
add
cmp
pushf
push
popf
in
pop
ror
adc
adc
fcmovnbe
std
add
mov
(bad)
jno
stc
lahf
int3
shl
dec
inc
pop
jmp
xor
jo
cmp
scas
dec
popa
cmp
scas
pop
jmp
mov
in
(bad)
xlat
mov
xchg
shl
scas
xor
jg
sbb
popf
mov
or
sbb
xchg
push
mov
shr
cmp
pop
ds
les
dec
and
mov
aad
fsubr
pusha
sub
fidivr
push
aam
pop
dec
add
inc
(bad)
int
pop
pop
mov
xchg
iret
xchg
daa
xchg
(bad)
pop
cmc
sbb
repnz
loope
shl
adc
shl
mov
mov
and
xchg
push
pop
jno
mov
outs
or
nop
mov
inc
sahf
push
mov
rcr
jns
in
push
jo
int
inc
fiadd
add
mov
mov
not
movs
fld
scas
aad
sub
fidiv
imul
mov
inc
jge
fcom
in
pop
adc
clc
test
scas
pop
imul
inc
data16
movs
or
lods
lds
push
dec
and
ins
aam
adc
mov
(bad)
in
sbb
mov
mov
fimul
push
sub
gs
lods
loop
es
push
xchg
int3
jp
stos
ret
ror
mov
jo
lods
in
mov
in
call
jg
jg
cli
push
retf
sub
add
(bad)
and
xor
retf
xor
add
or
push
xor
fnstenv
mov
sub
leave
push
push
cld
iret
call
outs
scas
pushf
leave
and
out
lods
mov
fwait
jg
nop
inc
cli
push
jle
mov
pop
mov
mov
sub
push
fcom
mov
jnp
push
inc
pop
jecxz
in
pop
mov
xchg
adc
ret
or
xor
push
or
icebp
aam
cld
stos
test
jns
test
xchg
into
add
ret
xchg
in
int
mov
ret
aam
aas
hlt
(bad)
inc
xor
cmp
bound
aaa
pop
sub
cmp
pushf
mov
mov
pushf
scas
inc
push
pop
loopne
in
ror
adc
jl
addr16
mov
push
xor
movs
mov
mov
outs
and
push
and
dec
shl
pop
sub
in
in
cmps
pop
movs
push
mov
xchg
push
lea
xor
sbb
retf
out
test
pusha
ret
ret
sbb
mov
test
adc
pushf
mov
xchg
mov
lahf
xor
sbb
sub
call
push
sbb
sbb
push
fld
(bad)
mov
ss
sbb
sbb
xchg
xchg
aam
push
aad
outs
(bad)
push
xor
cmp
rol
cmp
daa
jae
pop
push
dec
aad
add
jmp
pop
sti
sbb
xchg
cmp
dec
(bad)
push
dec
cmc
or
outs
xchg
fimul
and
jmp
leave
aad
stos
fwait
push
and
inc
xor
dec
push
mov
mov
mov
in
jo
mul
mov
push
xor
sub
in
ins
mov
add
push
jmp
aam
dec
mov
sub
data16
push
dec
les
or
leave
loopne
jo
cmc
scas
pop
jnp
push
movs
add
inc
pop
sbb
mov
cmp
mov
icebp
lds
shr
xor
ror
add
mov
jecxz
pop
pop
mov
sub
loopne
mov
call
jle
fnstenv
xor
or
jae
cmp
mov
sub
sahf
inc
dec
jbe
xchg
inc
sbb
imul
adc
stos
adc
stc
add
pop
jmp
jmp
dec
xchg
or
or
pusha
add
arpl
ss
cli
(bad)
mov
lods
lods
cmp
mov
test
fidivr
jmp
jno
shl
sub
mov
push
aam
loope
and
pop
lock
push
cld
cli
cmc
cld
imul
sbb
imul
out
or
ds
fstp
mov
in
fstp
rcl
pop
add
sub
loopne
sbb
(bad)
jne
mov
cmps
dec
inc
mov
add
in
or
out
je
jge
xchg
fwait
cwde
sti
sub
sub
stc
data16
mov
xor
and
out
into
call
xor
imul
or
in
mov
cmp
call
add
jmp
aad
dec
cmp
dec
jecxz
adc
push
mov
leave
push
xchg
adc
daa
and
aad
mov
jno
cdq
dec
loopne
dec
adc
and
mov
mov
cmps
jb
fist
xchg
push
inc
lods
mov
xchg
fnsave
mov
push
xchg
push
dec
jl
bound
sub
add
cmps
xor
aam
pop
mov
mov
mov
fisubr
call
enter
cmp
mov
xchg
xchg
add
sbb
fbstp
bndldx
xchg
mov
jl
loope
das
adc
lds
sti
xchg
pop
pop
imul
enter
in
pop
dec
loop
or
xchg
mov
inc
inc
sbb
jo
(bad)
dec
push
pop
pop
sbb
scas
out
lods
mov
fcom
retf
imul
xchg
sbb
push
sahf
jecxz
cmp
scas
push
or
pop
adc
aaa
xchg
ins
xor
retf
sub
mov
lock
fidiv
adc
cwde
arpl
or
pop
mov
cmc
add
aas
popf
pop
fwait
(bad)
pop
fisubr
push
in
shr
shr
in
stc
mov
out
mov
mov
std
push
mov
out
fs
pop
outs
xchg
aad
in
mov
push
xor
(bad)
dec
jae
dec
sbb
lea
loop
loop
add
adc
mov
in
mov
pop
push
jmp
cwde
cld
rol
sbb
cmps
cmp
xchg
mov
fwait
jge
and
fdiv
imul
daa
imul
cmp
mov
mov
xchg
imul
add
ret
aas
and
jecxz
cmc
scas
push
pop
sbb
cmp
imul
pop
xchg
movs
mov
push
stos
in
imul
jae
loope
scas
sub
xor
shr
add
mov
add
pusha
js
or
out
push
jp
test
scas
vpavgb
push
in
xchg
xor
cld
push
imul
mov
jno
fisttp
lahf
(bad)
jmp
movs
movs
ins
push
lds
ror
push
fmul
ret
ss
xchg
inc
out
cmp
xchg
(bad)
nop
xchg
dec
mov
in
mov
sub
out
inc
out
push
xchg
add
je
dec
retf
push
mov
mov
mov
xlat
aam
sbb
or
retf
sbb
dec
adc
ret
test
cmp
pop
adc
dec
and
icebp
pop
mov
dec
ins
fwait
add
pop
or
mov
pop
jo
leave
lods
mov
(bad)
neg
inc
data16
(bad)
into
push
and
pmulhw
xchg
jbe
sbb
cmp
and
arpl
sub
dec
inc
push
pushf
mov
sbb
fsubrp
lea
jge
jno
jne
out
leave
sbb
hlt
iret
fild
jecxz
add
mov
jnp
mov
lods
jo
push
loop
neg
popf
iret
jl
out
cmp
adc
and
leave
in
mov
or
aas
pop
sahf
cmc
les
add
push
xchg
jnp
cmp
lds
lock
and
and
add
je
jae
mov
dec
or
das
push
push
fwait
push
mov
cwde
out
adc
and
jmp
cmp
aaa
xor
pop
fiadd
add
pop
jbe
sbb
or
retf
jecxz
ja
jae
lahf
push
test
clc
jmp
test
push
(bad)
jmp
outs
and
je
jo
mov
push
inc
jl
cmps
jo
jno
ins
outs
cmp
mov
mov
bound
sbb
and
lds
loop
lods
js
repnz
sub
add
cmp
xchg
int
aam
xchg
pop
(bad)
jb
xchg
je
popf
ins
and
add
and
enter
adc
mov
or
leave
xor
sbb
rcr
cmp
fdiv
in
imul
pop
pop
sub
call
add
pop
and
adc
lods
xchg
add
xchg
call
xor
xor
adc
outs
inc
cmp
int3
jae
fcomp
(bad)
adc
push
inc
shr
ror
fiadd
cmp
inc
cli
or
jecxz
push
dec
movs
add
sahf
sub
jge
dec
inc
pop
or
pusha
rol
lds
pop
dec
stos
test
xchg
(bad)
ret
enter
cmp
adc
jecxz
(bad)
mov
and
and
outs
ds
enter
dec
aam
mov
fcomp
mov
fadd
sbb
mov
mov
sbb
cmp
ds
jecxz
jge
shr
popf
out
sub
inc
jmp
shl
out
jae
outs
xor
movs
pop
pop
ss
jns
jno
shr
adc
xlat
test
push
fidiv
inc
test
xchg
mov
aam
shl
mov
cmp
cmps
mov
inc
adc
cmp
pop
inc
lock
loope
(bad)
daa
cwde
mov
mov
test
out
push
add
dec
jmp
mov
iret
mov
sti
push
lahf
xor
mov
cmps
pop
loop
movs
loopne
jecxz
mov
out
adc
xchg
aas
fisubr
movs
xchg
pop
pop
je
pop
sbb
add
jmp
lods
sti
in
push
sub
retf
mov
ret
add
add
and
aad
repnz
les
mov
mov
shl
fimul
mov
cs
lock
push
out
push
nop
pop
fst
jg
mov
leave
imul
cld
push
jne
int
retf
jns
xchg
mov
mov
pop
lahf
dec
sub
bound
mov
inc
add
and
inc
adc
push
push
inc
add
sub
add
sub
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
push
pop
or
push
or
pop
or
or
or
or
sbb
and
and
xor
and
xor
pop
pop
sub
aaa
cmp
cmp
sub
inc
aas
cmp
cmp
aaa
(bad)
fild
inc
add
or
or
bndldx
and
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
inc
add
or
push
add
add
add
adc
add
add
les
pop
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
or
mov
or
movs
iret
mov
test
push
mov
mov
sub
cld
jcxz
jg
xor
jno
aaa
push
mov
and
jbe
sbb
or
and
cmp
loop
jg
jmp
fmul
ror
outs
pusha
or
sub
jge
jmp
std
imul
sbb
outs
out
ret
xor
lea
sbb
dec
mov
sahf
mov
popf
test
mov
mov
adc
jg
pop
or
(bad)
retf
cld
dec
push
sbb
fld
and
retf
mov
mov
fimul
inc
push
in
xor
adc
test
outs
push
ret
pop
sbb
add
add
(bad)
xor
cmp
stos
push
stos
sbb
add
loopne
iret
jo
lods
or
mov
mov
mov
cli
dec
inc
(bad)
mov
jl
fidivr
movs
(bad)
int3
sbb
sbb
rcr
mov
xor
shl
and
jo
sbb
inc
jl
outs
(bad)
shl
shl
inc
adc
or
test
jmp
inc
mov
test
scas
jne
mov
mov
sub
dec
addr16
adc
add
push
add
push
pop
and
and
pop
lock
imul
mov
in
(bad)
jnp
or
test
nop
jl
xlat
dec
mov
popf
push
fld
inc
cdq
mov
ins
and
pusha
mov
add
dec
push
popf
clc
leave
xor
pminsw
cli
inc
dec
mov
jne
add
and
retf
popf
mov
sub
dec
sub
mov
jno
jmp
mov
retf
mov
es
inc
inc
adc
add
pusha
cld
fmul
xchg
mov
xchg
dec
mov
lock
outs
cmp
adc
mul
rol
ds
pop
mov
fisttp
adc
stc
shl
outs
inc
mov
sbb
add
pop
das
loop
add
jmp
adc
test
sub
dec
mov
cld
sub
adc
pushf
adc
inc
mov
movs
fld
push
repz
sub
lds
jmp
mov
push
out
not
lods
out
add
push
subps
cld
xor
inc
add
fsub
lods
add
mov
inc
icebp
sbb
jno
popf
test
mov
nop
jl
sub
or
mov
xchg
sbb
mov
rcl
cdq
das
jnp
cs
mov
jge
push
dec
add
sub
and
sbb
imul
mov
retf
neg
stc
(bad)
cmp
movs
mov
icebp
sub
stos
and
pop
mov
xor
sub
lahf
pushf
inc
push
pop
cld
add
in
sub
xchg
xor
es
bound
daa
cmps
cmovp
outs
cmp
popa
popa
jecxz
cmc
pop
ds
movs
shr
repnz
in
inc
cmp
mov
les
push
sub
out
mov
pop
dec
and
(bad)
ss
frstor
dec
ret
jno
fsubr
iret
cmp
icebp
test
(bad)
repnz
stc
sahf
mov
mov
out
mov
jmp
and
pavgw
push
xchg
loop
and
jle
pop
lods
out
mov
mov
sub
mov
jo
movs
repz
fidivr
push
push
pop
xor
push
inc
pop
add
push
add
push
add
push
fild
out
jne
int
inc
or
add
jb
out
aam
int
cmps
enter
sbb
scas
mov
gs
nop
inc
jmp
jo
jp
div
jo
jnp
in
adc
je
or
xchg
retf
sub
out
mov
shl
out
push
int
repz
mov
call
inc
xlat
je
in
arpl
pop
inc
outs
and
cmp
pop
and
cmc
inc
mov
pop
aam
xchg
iret
repnz
in
adc
into
dec
jnp
stos
cmp
shr
inc
push
pushf
lods
shr
xor
ins
scas
inc
loope
xor
or
imul
in
jmp
jb
repz
aad
sbb
xchg
call
rcl
sbb
push
int3
clc
and
(bad)
popf
loope
aaa
sub
sub
push
and
mov
into
push
sub
cmc
sub
jecxz
mov
mov
mov
add
sub
add
mov
add
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
leave
or
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
push
pop
or
push
or
pop
or
or
or
or
sbb
and
and
xor
and
xor
pop
pop
sub
aaa
cmp
cmp
sub
inc
aas
cmp
cmp
aaa
(bad)
fild
inc
add
or
or
bndldx
and
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
inc
add
or
push
add
add
add
adc
add
add
les
pop
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
fisubr
mov
movs
sahf
push
mov
and
test
and
jne
lahf
add
je
aaa
lds
pop
call
mov
mov
dec
add
and
data16
dec
mov
ret
arpl
xchg
sbb
lds
adc
fimul
cdq
cmps
(bad)
cmps
xor
mov
mov
leave
and
xchg
jge
jmp
or
test
fdiv
sbb
test
jno
or
enter
loopne
add
sub
shl
jno
add
sti
icebp
std
dec
mov
add
sbb
aad
fwait
pop
pop
fisttp
out
push
fsubr
imul
movs
add
push
add
push
add
push
add
lock
retf
mov
push
lea
ss
out
pop
pop
push
cmp
push
add
(bad)
js
or
shr
pop
int3
dec
jb
in
nop
stos
dec
jo
jg
xor
mov
or
mov
jmp
sub
imul
mov
inc
push
or
(bad)
lock
xchg
fild
dec
pop
aas
push
aam
mov
and
(bad)
cmp
sub
cmp
imul
mov
fdiv
jbe
mov
je
sub
sbb
fld
push
jmp
mov
outs
lods
jg
mov
fs
mov
fmul
int
mov
in
fisub
mov
mov
xor
add
mov
cmps
cmp
sub
sub
lock
cli
push
lea
in
ds
and
add
xor
add
mov
xlat
aad
xor
test
retf
push
imul
or
ret
retf
mov
add
pop
xor
xchg
dec
dec
icebp
push
mov
mov
add
xlat
call
or
mov
sub
pop
mov
ins
cdq
push
and
test
or
lds
add
repz
popf
mov
jp
mov
out
out
mov
dec
sbb
int3
xchg
sub
mov
inc
test
and
into
inc
mov
push
sub
scas
hlt
dec
cmp
in
push
int
push
sti
test
dec
inc
in
repz
push
adc
push
out
mov
and
jl
mov
dec
dec
jae
xor
or
adc
stos
loopne
cmp
mov
dec
daa
(bad)
(bad)
adc
repz
mov
fcomp
fadd
adc
fstp
les
jnp
sbb
jmp
jl
movs
(bad)
cmps
xor
pop
xchg
mov
addr16
or
add
dec
sbb
int
jnp
jbe
mov
push
dec
or
aaa
das
sbb
loopne
sbb
out
adc
add
add
lds
mov
popf
retf
pop
cdq
sbb
rcl
push
jmp
inc
imul
add
aam
sub
ja
sahf
out
aad
and
cmp
inc
push
inc
dec
dec
sub
inc
add
mov
jl
scas
fldl2t
xor
xchg
xlat
xor
ja
pop
std
outs
test
imul
jle
xlat
js
into
jmp
in
mov
movs
ja
cmp
and
jecxz
repz
mov
fimul
xchg
imul
retf
jg
test
(bad)
aam
dec
push
out
dec
ins
arpl
sub
jne
dec
retf
dec
cmp
inc
setl
test
icebp
sahf
jno
out
jp
dec
mov
(bad)
fild
cmps
inc
cmp
xchg
pop
loop
pop
push
xchg
xor
cmp
add
dec
cwde
pushf
ds
sbb
cmp
ficomp
cli
jl
xor
jmp
xchg
int
rcr
xor
mov
mov
lds
shr
or
add
loopne
pop
sub
aas
js
cwde
aas
mov
jge
(bad)
pop
jae
sub
imul
in
(bad)
jle
daa
and
mov
and
mov
scas
scas
stos
dec
cmps
mov
lea
loope
hlt
jg
cmps
sub
sub
dec
dec
(bad)
pop
sysenter
fistp
(bad)
not
aad
jle
arpl
xchg
adc
xchg
cmp
pushf
scas
xchg
les
mov
xchg
inc
push
ins
scas
adc
pushf
mov
cmps
cmp
lahf
dec
out
pop
sub
sub
mov
out
xchg
push
fsubr
mov
sub
aaa
idiv
mov
and
addr16
and
jb
in
dec
dec
jmp
call
and
mov
fadd
icebp
jno
add
cmp
fmul
xor
je
push
xchg
push
sbb
movs
or
jecxz
cmps
cmp
pushf
call
je
ds
rol
mov
dec
adc
enter
sbb
cmp
loop
pop
(bad)
cmp
adc
xchg
dec
repz
cmps
jl
iret
and
and
add
hlt
lods
sub
(bad)
loopne
mov
jne
lahf
lods
fcomip
jae
scas
and
stos
cmc
(bad)
out
iret
mov
shl
aam
lods
data16
movs
movsx
repnz
push
inc
dec
mov
jb
rcl
dec
ret
aam
out
outs
hlt
int
pop
adc
aad
and
ins
outs
rol
cmp
pop
nop
jle
inc
sbb
inc
jns
cmp
push
jb
cwde
in
leave
es
aas
out
mov
cmps
imul
test
jne
xlat
rcr
ja
pop
mov
xchg
repnz
iret
cmp
pop
test
adc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
adc
add
inc
dec
inc
cmp
popa
nop
add
test
inc
dec
clc
test
hlt
outs
jae
(bad)
push
push
out
es
aam
out
xor
cmc
jge
stc
mov
repz
neg
(bad)
(bad)
(bad)
in
pop
pop
(bad)
(bad)
inc
add
and
add
add
adc
sub
add
add
add
imul
iret
je
fistp
out
jl
inc
pusha
outs
lock
(bad)
leave
ins
cmp
add
lods
pop
scas
fsubr
loopne
cwde
sub
jp
outs
cmp
add
fucomi
clc
mov
inc
outs
mov
jo
adc
add
sahf
dec
(bad)
xchg
mov
je
xchg
mov
mov
test
dec
mov
mov
mov
mov
jbe
(bad)
rcl
lahf
leave
int
(bad)
mov
ins
aam
fnstsw
movs
(bad)
in
mov
jmp
jecxz
out
lock
in
hlt
cmc
jg
icebp
stc
out
repz
(bad)
ja
hlt
or
add
sub
push
adc
add
adc
dec
pushf
dec
mov
or
fdivr
push
inc
mov
xor
inc
inc
sbb
jmp
enter
retf
repnz
mov
mov
jb
iret
lahf
inc
jg
hlt
xchg
xor
cmc
or
mov
shl
jp
addr16
movs
dec
mov
xchg
or
jns
std
xor
mov
mov
ins
or
dec
aaa
mov
ins
fnsave
fnstsw
xchg
push
out
push
mov
int3
cmp
pusha
cmp
or
mov
mov
ins
cwde
repnz
lahf
xor
fcmovne
cmp
mov
mov
arpl
pop
lea
gs
dec
jnp
in
in
out
push
mov
or
repz
es
mov
dec
aaa
push
std
mov
ins
xchg
std
mov
(bad)
fist
mov
scas
cmps
mov
clc
inc
cmps
lahf
scas
cmp
retf
cld
add
mov
jg
stc
cmps
push
or
xor
inc
adc
inc
push
call
sub
ss
and
adc
pop
pop
pop
not
cmps
fmul
mov
clc
loop
sbb
mov
(bad)
cmp
enter
xchg
add
cmp
or
imul
sub
cmp
dec
xchg
int3
ins
sub
or
leave
gs
sub
test
mov
fcmovbe
cmps
fwait
outs
shr
pop
out
ja
mov
push
mov
mov
mov
loop
sub
data16
cmps
jecxz
jmp
test
dec
push
movs
push
mov
xchg
jbe
stos
test
lods
jle
jmp
cmp
(bad)
dec
xchg
cdq
scas
add
lods
mov
adc
cdq
mov
and
aad
(bad)
push
mov
pop
push
push
mov
mov
in
mov
les
sub
xchg
xlat
jmp
ins
dec
out
fwait
cs
jmp
aam
mov
inc
repz
test
push
lods
mov
ror
pop
cmp
rol
fdiv
pop
adc
fwait
vunpcklps
push
(bad)
sbb
pusha
cmp
sbb
ret
pushf
cwde
leave
mov
xor
mov
dec
push
repz
out
or
cmp
mov
inc
pop
sub
ins
hlt
shl
inc
sti
cmp
mov
inc
or
ins
mov
pop
aas
mov
std
repz
fnsave
mov
mov
movs
addr16
loope
(bad)
int
fdiv
je
imul
imul
neg
jbe
xor
mov
mov
aaa
out
js
push
inc
cs
in
mov
lahf
xchg
pop
mov
loope
mov
mov
xchg
xchg
sahf
mov
movs
stos
dec
imul
outs
jle
in
mov
sbb
out
mov
mov
shl
lock
fcomip
loop
mov
cmp
or
(bad)
cmp
sti
cmp
xchg
add
push
nop
sbb
not
addr16
lds
arpl
adc
outs
call
jg
scas
in
sti
jmp
das
(bad)
jns
lahf
jg
cld
ret
cmp
pop
shl
popa
sub
loopne
cli
add
adc
or
and
push
sbb
dec
pop
stc
adc
cmp
cmp
sbb
out
add
pop
popa
mov
sbb
xchg
call
xchg
or
sar
nop
push
inc
xor
adc
cwde
shl
mov
(bad)
out
or
sub
jno
adc
pop
inc
lds
in
push
sub
inc
(bad)
mov
sbb
push
rcr
xor
loop
loope
ret
jo
je
or
mov
mov
mov
inc
or
sub
add
inc
enter
or
adc
or
add
add
or
add
add
sub
add
push
add
mov
dec
adc
add
mov
add
push
add
push
sbb
xchg
mov
leave
retf
pop
cli
adc
inc
sub
adc
jne
sub
leave
int3
add
add
or
inc
push
push
dec
adc
adc
push
or
adc
dec
xchg
sub
sbb
mov
pop
add
addr16
dec
mov
add
cmp
add
xchg
push
hlt
push
sar
dec
adc
add
add
jbe
in
icebp
pushf
inc
add
sub
ficom
add
mov
mov
add
inc
arpl
mov
and
cli
sar
inc
je
push
enter
or
outs
add
add
jmp
retf
adc
push
mov
sub
cmps
xor
xor
jo
mov
hlt
pop
add
jmp
pushf
jbe
test
push
sub
add
cwde
adc
push
sbb
or
or
inc
jo
pusha
movs
adc
xor
adc
push
nop
mov
push
lods
imul
mov
xor
add
shl
mov
push
shl
mov
pop
test
jo
xchg
pop
xchg
pop
bound
fldcw
push
or
xor
sbb
stos
cmc
lock
fisttp
(bad)
lods
cmovb
mov
mov
dec
xchg
arpl
mov
ror
or
lods
sub
xor
mov
push
scas
movs
ins
push
fldenv
pop
push
shl
imul
popf
add
jmp
push
cmp
xchg
push
mov
(bad)
pusha
mov
cld
(bad)
call
inc
cvtpi2ps
cmp
add
les
icebp
test
sub
fisttp
int
add
add
icebp
mov
jmp
mov
test
shr
xchg
pop
jnp
adc
mov
ror
ret
es
add
sub
lds
cmp
add
push
test
pusha
ret
cmp
nop
xlat
bound
loopne
mov
push
sbb
dec
jo
scas
cmp
inc
mov
ja
adc
aam
pop
mov
and
mov
adc
add
and
mov
sahf
mov
sbb
fs
dec
xchg
add
or
repnz
test
in
rol
xchg
xor
(bad)
sbb
add
cmp
mov
add
and
xor
jae
adc
adc
mov
push
ins
(bad)
retf
inc
call
cmps
push
dec
xchg
jmp
in
mov
or
add
(bad)
fcom
int
pop
cmp
fld
jge
xor
out
je
pop
add
vandnps
adc
ret
div
dec
into
inc
fiadd
mov
adc
adc
pusha
add
xor
mov
rcr
add
push
in
mov
ja
outs
jns
mov
inc
jmp
add
mov
imul
pushf
(bad)
or
ds
punpckldq
dec
sbb
cmps
and
mov
inc
fsub
out
xchg
push
sub
jmp
and
cmp
pop
call
sbb
jg
and
cs
sar
pop
daa
xchg
out
inc
dec
dec
xor
mov
inc
fistp
jns
lds
inc
pop
xchg
popf
or
cmps
mov
lods
pop
cwde
jle
clc
pop
cwde
in
dec
jnp
xor
xchg
pusha
je
bndldx
mov
aaa
xchg
int
adc
push
cmp
mov
mov
xlat
mov
dec
loopne
aas
jp
mov
xor
enter
inc
jb
xchg
ds
adc
int
jecxz
loop
enter
inc
(bad)
(bad)
lods
jae
mov
es
jg
das
fadd
add
pop
pop
adc
inc
movs
fiadd
and
adc
arpl
jge
mov
arpl
jl
repnz
add
inc
pop
mov
mov
push
fs
(bad)
iret
push
or
test
leave
(bad)
jle
aas
mov
and
add
cmp
out
pop
and
sbb
adc
xor
push
xor
push
dec
or
adc
inc
jg
jno
push
adc
or
adc
xchg
daa
and
or
add
cmps
add
arpl
ja
xchg
jl
arpl
xchg
pop
sbb
dec
sbb
adc
cmp
repnz
and
xor
jl
aad
(bad)
xor
movs
xor
dec
or
pop
adc
add
aaa
or
xchg
and
and
adc
jnp
adc
push
test
or
dec
mov
(bad)
in
sub
pop
sub
outs
test
jo
sbb
jg
jo
sub
or
xlat
add
fs
(bad)
clc
adc
xor
xor
xor
add
mov
push
add
push
mov
shl
pop
xor
pop
xchg
dec
mov
(bad)
sbb
clc
jg
mov
dec
adc
mov
mov
mov
mov
test
xor
mov
jnp
sub
pop
mov
dec
sbb
add
mov
pop
pop
mov
aam
dec
(bad)
sbb
jmp
ja
call
push
inc
pusha
int3
ror
sar
mov
cwde
push
fstp
push
and
push
lea
or
nop
or
add
icebp
js
add
pop
mov
jp
enter
or
dec
add
xchg
cmp
add
add
mov
jb
stc
adc
test
and
aam
adc
xchg
test
pop
lahf
adc
mov
xchg
push
xchg
mov
jnp
test
add
add
imul
push
pop
xchg
pop
mov
push
add
fldcw
push
push
add
xchg
(bad)
jo
sbb
xchg
test
xchg
or
xchg
ds
nop
dec
xlat
xchg
retf
cmp
add
xchg
mov
adc
add
or
mov
adc
ja
mov
adc
push
gs
xchg
adc
movs
test
cmp
xchg
or
push
push
adc
dec
xchg
out
push
jbe
jae
xchg
cwde
inc
inc
xchg
pop
popf
jns
inc
mov
jno
xor
pop
cdq
pop
pop
or
adc
fwait
gs
xchg
test
imul
and
xchg
mov
lea
iret
pop
adc
mov
mov
mov
or
pop
push
jns
pop
xchg
sahf
mov
pop
fisttp
push
cmp
jle
inc
clc
fst
lahf
and
pushf
mov
lahf
add
sbb
fidivr
adc
mov
sub
dec
mov
sahf
cdq
jns
mov
cwde
adc
shl
adc
lods
sbb
mov
mov
push
leave
mov
xor
(bad)
fst
mov
inc
push
ja
mov
pusha
popf
and
movs
inc
push
sahf
pop
push
adc
stos
mov
mov
lds
mov
xor
ins
mov
leave
imul
add
call
and
push
xchg
nop
test
movs
dec
mov
les
data16
xchg
jo
and
mov
nop
bound
pop
pop
arpl
sub
mov
and
jp
pop
pop
pop
movs
inc
mov
out
mov
icebp
mov
and
or
add
stos
xchg
pop
add
push
jnp
fisubr
pop
cwde
test
pop
pop
clc
in
loope
arpl
pop
pop
jne
in
pop
rcl
loope
stos
das
mov
xor
arpl
stos
retf
xor
lods
jns
arpl
add
test
movs
ss
adc
scas
int
scas
jbe
stos
into
lds
sub
movs
cmps
jp
sar
or
out
push
sub
ins
outs
ficomp
xchg
jne
mov
xchg
aad
scas
(bad)
call
pop
mov
push
lahf
xor
cli
jmp
push
movs
movs
mov
pusha
pop
push
push
add
inc
movs
sbb
mov
inc
or
mov
xchg
lods
repz
mov
leave
mov
imul
inc
adc
mov
jnp
fst
xor
sti
mov
icebp
pusha
push
jbe
(bad)
xchg
dec
fwait
mov
std
shl
adc
mov
and
leave
nop
adc
cmp
cmp
aad
xlat
test
xor
test
shl
cmps
loopne
scas
test
pop
xchg
dec
jmp
(bad)
jmp
push
or
js
or
nop
mov
imul
xchg
mov
nop
mov
mov
int3
add
adc
mov
and
dec
movs
jb
mov
dec
or
mov
add
mov
mov
inc
icebp
dec
sub
pop
pop
mov
xchg
sti
mov
and
dec
int
add
adc
and
int
mov
icebp
mov
call
pop
mov
jle
cmp
in
pop
mov
cmp
add
push
xchg
mov
xor
or
push
pusha
add
dec
scas
jb
or
rol
push
sbb
adc
xchg
rcl
push
jl
jb
rcr
es
rcr
and
and
cmp
dec
push
ret
and
pushf
ret
ret
and
cld
ret
ret
xor
and
ret
pop
jb
cmp
cmp
sbb
inc
sbb
stc
xor
inc
cld
push
inc
jl
out
les
sbb
mov
jae
into
adc
aam
ja
pop
lds
sub
mov
cwde
pusha
lods
aaa
icebp
xor
pushf
and
arpl
xor
lock
(bad)
out
adc
xchg
and
ret
(bad)
adc
jg
enter
jnp
enter
xchg
int3
enter
or
addr16
(bad)
(bad)
xchg
pushf
enter
cwde
pushf
leave
lea
jl
mov
sbb
jl
into
jno
xchg
int3
retf
(bad)
mov
ss
or
test
retf
xor
cmp
arpl
mov
cmp
retf
mov
sbb
cld
and
mov
mov
int3
into
or
xchg
int3
aaa
ret
cmp
loopne
int
jecxz
fsubr
lods
and
fmul
test
int
nop
retf
gs
int3
push
ror
dec
es
shl
jmp
pusha
into
inc
mov
call
ins
int
pushf
iret
inc
pusha
iret
pop
repz
stc
or
in
shl
dec
shr
iret
es
pop
arpl
leave
int3
sar
shl
shr
dec
(bad)
ror
ror
sar
jl
pop
mov
mov
shl
rol
shl
into
cmps
mov
cmp
dec
int3
rcr
loop
inc
or
cmp
sbb
aam
lods
aam
int3
aam
arpl
out
sar
fbld
aad
or
das
jecxz
adc
aad
ins
aad
int3
aad
mov
pusha
popa
ror
add
and
outs
popa
(bad)
mov
(bad)
stos
add
sub
(bad)
mov
(bad)
dec
inc
xlat
fsub
xlat
mov
xlat
shl
loopne
outs
inc
fsubr
jecxz
js
fcomp
fsub
and
adc
icebp
pusha
fadd
fst
and
stc
sbb
pusha
fldcw
fst
ret
(bad)
and
pop
inc
(bad)
mov
sbb
call
fidivr
(bad)
jbe
fdiv
cmp
fild
fcmovb
loop
scas
and
jg
fstp
fld
jge
enter
and
jnp
fadd
mov
retf
pop
(bad)
fstp
mov
aam
fstp
fucom
sbb
call
(bad)
fimul
fadd
fcomip
sbb
pushf
(bad)
fsubrp
loop
mov
loopne
ret
(bad)
loopne
and
mov
call
jge
in
cmp
sub
loopne
dec
loopne
ret
mov
push
add
xlat
inc
loop
(bad)
sbb
shr
mov
std
shl
jne
jecxz
(bad)
xchg
xor
xor
or
mov
cmp
jecxz
scas
or
sahf
sub
jae
xchg
std
loop
push
in
xor
dec
fcompp
push
cs
(bad)
jecxz
mov
jmp
out
inc
scas
in
mov
push
dec
out
outs
out
mov
arpl
ins
out
out
or
push
imul
push
fst
call
sbb
pop
and
push
fst
add
cmp
xchg
mov
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
inc
push
call
add
add
add
fadd
add
sub
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
add
add
add
jae
add
arpl
outs
add
imul
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
test
fdivr
loopne
adc
dec
inc
add
add
add
add
add
jmp
add
arpl
and
gs
and
xor
cmp
and
add
add
add
add
jmp
add
inc
js
data16
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
mov
imul
add
add
bound
add
add
add
add
add
inc
add
add
add
add
inc
mov
add
add
add
add
add
add
add
add
add
add
dec
add
add
inc
outs
bound
push
push
push
xor
xor
xor
xor
cmp
xor
xor
cmp
cmp
xor
(bad)
fild
inc
add
add
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
(bad)
fild
inc
add
adc
and
and
and
and
inc
inc
inc
add
add
add
add
add
add
add
inc
add
or
add
add
adc
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
xlat
aad
jnp
or
scas
cs
sub
(bad)
mov
jge
stos
xor
mov
inc
mov
inc
jecxz
cmc
jg
lahf
repnz
push
mov
jno
loope
js
inc
inc
(bad)
shl
imul
not
(bad)
pop
outs
cmp
inc
xchg
jg
(bad)
stos
iret
stc
dec
not
iret
add
add
push
inc
and
add
mov
packssdw
loope
add
mov
inc
hlt
sbb
outs
(bad)
stos
iret
stc
inc
fcmovb
mov
ud0
inc
stos
aas
cld
mov
add
call
xchg
jle
cmp
cmp
inc
xchg
jg
fstp
push
lahf
repnz
inc
mov
adc
add
aas
cld
mov
add
call
xchg
cmp
cs
iret
inc
and
mov
pop
mov
jo
add
or
dec
(bad)
aaa
inc
aad
cld
mov
clc
pop
jle
inc
mov
inc
jecxz
mov
imul
jg
jmp
inc
std
push
lods
aas
repnz
inc
sbb
div
cld
adc
add
aas
cld
mov
add
jmp
push
(bad)
cmp
cmp
xor
jg
fstp
push
lahf
xacquire
jne
and
adc
pop
inc
(bad)
sar
mov
lods
jnp
cld
cs
iret
inc
and
mov
packssdw
loop
ret
inc
std
push
lods
inc
repnz
inc
sbb
sub
not
(bad)
pop
pop
cmp
xor
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
aas
loope
clc
and
adc
adc
add
add
jnp
not
(bad)
pop
push
cmp
inc
xchg
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
pop
clc
pop
ds
add
inc
jecxz
jge
jg
push
(bad)
cmp
shl
lahf
cli
or
jg
dec
(bad)
aaa
inc
aad
cld
mov
cld
cs
add
add
push
inc
and
mov
packssdw
loop
add
jmp
ins
aas
repnz
inc
sbb
div
jl
inc
inc
fwait
dec
cld
mov
add
call
xchg
jle
cmp
cmp
imul
fstp
push
lahf
xacquire
je
daa
inc
inc
(bad)
shl
jns
add
mov
pop
inc
and
mov
packssdw
loop
add
out
push
std
push
ins
aas
repnz
inc
sbb
sub
add
lahf
rcr
mov
add
lahf
cld
outs
(bad)
stos
iret
stc
inc
fcmovb
mov
adc
dec
cld
mov
add
call
xchg
cmp
add
lahf
rcr
mov
add
lahf
cld
outs
(bad)
stos
iret
stc
inc
in
arpl
pop
clc
pop
fimul
inc
mov
inc
jecxz
(bad)
scas
aas
in
mov
jo
add
or
jg
dec
(bad)
aaa
inc
aad
cld
mov
loope
js
inc
inc
(bad)
sar
mov
lods
jnp
inc
or
mov
add
lahf
cld
outs
(bad)
stos
iret
stc
dec
div
jl
inc
inc
fwait
dec
cld
mov
add
jmp
aas
imul
inc
or
mov
add
lahf
cld
outs
(bad)
stos
iret
stc
inc
in
arpl
aas
loope
js
inc
inc
(bad)
shl
jns
add
jnp
test
inc
mov
inc
jecxz
jge
jg
das
imul
jg
out
pop
std
push
ins
aas
repnz
inc
sbb
div
mov
fwait
dec
cld
mov
add
jmp
(bad)
jo
add
or
jg
dec
(bad)
aaa
dec
jmp
psubb
inc
mov
inc
jecxz
(bad)
lods
aas
in
mov
jo
add
or
jg
dec
(bad)
aaa
inc
aad
cld
mov
loope
js
inc
inc
(bad)
shl
jns
add
jnp
test
inc
mov
inc
jecxz
jge
jg
push
(bad)
cmp
cmp
xchg
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
aas
loope
js
inc
inc
(bad)
sar
mov
(bad)
cmp
cmp
call
xchg
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
pop
clc
pop
fimul
inc
mov
inc
jecxz
jge
jg
push
(bad)
cmp
cmp
call
xchg
aas
clc
(bad)
stos
iret
stc
inc
in
arpl
pop
clc
pop
mov
int
inc
jecxz
jge
jg
dec
mov
jno
loope
js
inc
inc
(bad)
sar
mov
lods
jnp
jg
loop
outs
std
push
sub
add
cmps
cmc
jns
add
mov
cs
push
inc
shl
inc
and
mov
mov
inc
mov
outs
std
push
sub
add
movs
cmc
imul
test
inc
mov
inc
jecxz
(bad)
lods
aas
in
fild
mov
inc
inc
mov
mov
add
jmp
push
fidivr
shl
cli
or
jg
dec
(bad)
aaa
dec
jmp
das
cld
cs
jg
pop
sar
add
jg
mov
pop
mov
jo
add
or
jg
dec
(bad)
aaa
inc
aad
cld
mov
cld
sub
rcr
inc
and
mov
dec
jge
aas
cwde
aas
loope
js
inc
inc
(bad)
shl
imul
aas
cwde
pop
clc
pop
mov
mov
add
je
pop
jg
push
mov
repz
cld
sub
rcr
inc
and
adc
lods
aas
in
fcmovnb
stc
cmp
out
cmp
call
xchg
aas
clc
mov
lahf
repnz
ret
stc
cmp
out
cmp
call
xchg
aas
clc
mov
test
(bad)
pusha
inc
test
or
inc
in
(bad)
and
div
(bad)
pusha
inc
test
or
inc
in
(bad)
aaa
dec
jmp
cwde
aas
loope
clc
aas
inc
inc
(bad)
shl
push
retf
pop
int3
pop
lock
pop
inc
inc
jnp
cld
mov
add
jmp
mov
ret
stc
cmp
out
cmp
call
xchg
aas
clc
fstp
push
test
(bad)
pusha
inc
test
or
inc
in
(bad)
aaa
dec
jmp
cwde
pop
clc
pop
mov
mov
add
je
lods
push
stc
inc
fcmovnb
stc
cmp
out
aas
call
xchg
aas
clc
fnstsw
stos
push
(bad)
push
div
(bad)
pusha
inc
test
pop
inc
in
(bad)
aaa
dec
jmp
cwde
aas
loope
js
inc
inc
mov
cmp
loope
clc
aas
inc
inc
mov
das
outs
(bad)
adc
push
out
cmp
call
xchg
aas
clc
(bad)
stos
dec
stc
inc
in
loope
ret
fdivp
jg
add
inc
sbb
xchg
jle
pop
int3
das
cld
sub
rcr
inc
and
mov
pop
mov
repz
add
jnp
inc
hlt
pop
mov
add
lahf
cld
outs
(bad)
stos
dec
stc
inc
in
mov
or
inc
hlt
pop
mov
add
lahf
cld
outs
(bad)
stos
dec
stc
inc
in
mov
ret
jg
add
inc
adc
cmps
cld
mov
jg
outs
js
inc
inc
(bad)
sar
mov
add
(bad)
push
out
test
call
xchg
aas
clc
mov
lods
aas
in
mov
repz
add
jae
pop
hlt
push
mov
add
lahf
cld
inc
das
stos
dec
stc
inc
fcmovnb
stc
test
add
or
add
dec
(bad)
and
lahf
outs
(bad)
pop
(bad)
push
fild
add
lods
push
stc
inc
fcmovnb
stc
test
add
or
add
dec
(bad)
and
div
(bad)
pusha
inc
test
pop
inc
in
(bad)
and
div
(bad)
popa
mov
inc
inc
imul
inc
les
mov
add
(bad)
push
out
aas
call
xchg
aas
clc
mov
lods
aas
in
mov
repz
add
ja
pop
hlt
pop
mov
add
lahf
cld
outs
(bad)
stos
dec
stc
inc
in
mov
or
pop
hlt
pop
mov
add
lahf
cld
outs
lahf
aad
cld
mov
loope
clc
aas
inc
inc
(bad)
sar
mov
add
add
ja
inc
hlt
pop
mov
add
lahf
cld
outs
(bad)
stos
dec
stc
inc
fild
jg
(bad)
jg
add
inc
adc
stos
jg
jnp
inc
xor
(bad)
jg
add
inc
adc
stos
jg
jnp
test
inc
mov
inc
jecxz
jge
jg
push
fidivr
int3
das
cld
sub
rcr
inc
and
mov
mov
inc
stc
cmp
out
aas
call
xchg
aas
clc
mov
lahf
repnz
fild
test
add
or
add
dec
(bad)
and
fild
test
add
or
add
dec
(bad)
aaa
dec
jmp
cwde
aas
loope
js
inc
inc
mov
cmp
loope
clc
aas
inc
inc
(bad)
sar
mov
in
ins
push
loope
add
jae
pop
hlt
pop
mov
add
lahf
cld
inc
pop
push
test
fcomp
pop
sahf
adc
add
inc
loop
cli
mov
in
ins
pop
out
(bad)
push
fild
add
lods
push
stc
inc
fild
cmp
fild
add
push
test
fdivr
sub
rcr
inc
and
adc
lods
push
stc
inc
fild
daa
cld
sub
push
xlat
inc
pop
inc
loop
jle
push
stc
inc
in
mov
or
jg
adc
lahf
cld
inc
das
stos
dec
stc
inc
in
mov
ret
lahf
std
add
add
and
fild
cmp
mov
inc
call
(bad)
inc
icebp
adc
pop
jg
dec
mov
repz
loope
cli
or
inc
jecxz
add
inc
aas
stos
push
(bad)
push
not
(bad)
popa
mov
inc
inc
imul
inc
les
mov
in
ins
pop
out
inc
or
aas
hlt
push
mov
add
lahf
cld
inc
aas
stos
push
(bad)
push
sti
push
clc
pop
sahf
adc
add
inc
loop
jge
cmps
repnz
fild
test
add
or
add
dec
(bad)
aaa
inc
aad
jg
jnp
inc
xor
clc
pop
fimul
inc
mov
inc
jecxz
jge
cmps
repnz
fild
lahf
lock
sbb
dec
cld
mov
add
call
pop
mov
jo
add
or
jg
dec
(bad)
aaa
inc
aad
jg
jnp
test
inc
mov
inc
jecxz
jge
cmps
xacquire
test
fidivr
dec
(bad)
aaa
inc
aad
jg
jnp
idiv
outs
ins
bound
cdq
ja
and
imul
enter
stc
sbb
data16
fdivr
(bad)
ja
mov
(bad)
jns
add
pop
jmp
jo
sbb
cmps
ret
and
pop
fld
ret
jae
rcl
and
sar
inc
add
inc
cs
add
dec
cdq
xor
pop
lods
fdiv
push
sbb
(bad)
push
lds
pop
xchg
xor
add
or
jb
add
xor
nop
push
and
xor
ror
movs
push
shl
dec
and
xchg
and
popa
stc
movs
push
call
xor
xchg
pop
or
call
inc
or
int
or
inc
sbb
fwait
jne
nop
std
(bad)
(bad)
mov
push
popa
fs
mov
ja
sbb
aam
adc
mov
xchg
outs
xor
xor
push
xor
out
adc
or
mov
cmp
adc
out
imul
push
or
imul
test
mov
sub
das
xor
sbb
push
and
(bad)
ds
push
cmps
push
(bad)
imul
sbb
into
(bad)
mov
fild
loopne
sbb
or
add
push
adc
or
shr
stos
sbb
dec
or
push
sub
jmp
dec
xchg
and
rcr
pop
nop
aad
movs
push
sti
(bad)
test
lods
gs
sub
dec
and
movs
mov
imul
daa
jmp
add
aas
les
inc
inc
(bad)
out
stc
adc
mov
fidiv
daa
pop
dec
test
dec
clc
pop
mov
and
sbb
lds
dec
test
movs
inc
jmp
imul
or
or
adc
inc
test
xchg
add
arpl
dec
inc
add
adc
xor
xchg
sub
pop
sbb
xor
and
and
push
push
mov
sub
mov
inc
jno
mov
jne
mov
push
add
rol
push
sbb
pop
xchg
inc
sub
aad
in
test
and
mov
enter
dec
mov
push
bound
or
add
leave
add
or
(bad)
dec
mov
push
add
inc
cmp
inc
and
(bad)
adc
test
add
cdq
arpl
aam
pop
or
dec
mov
and
push
shl
xor
inc
inc
push
(bad)
jecxz
mov
sbb
xchg
gs
rcl
push
pop
pop
stc
push
and
stos
inc
dec
and
mov
shl
ins
push
mov
bound
ss
add
push
push
cmp
pop
retf
cmps
pop
pop
gs
(bad)
ins
test
adc
xor
push
pop
std
mov
jle
inc
or
test
adc
movs
and
rcr
and
mov
shr
mov
mov
int
aaa
add
push
clc
(bad)
mov
push
xor
xchg
xchg
cmp
push
xchg
addr16
mov
call
inc
cwde
mov
sbb
xchg
xor
dec
std
add
and
icebp
dec
imul
mov
mov
xchg
std
adc
icebp
mov
(bad)
mov
jne
sbb
mov
push
loope
repz
not
inc
jmp
lea
adc
inc
mov
xchg
or
cmps
xor
test
xchg
ins
fs
inc
call
add
or
and
inc
add
aad
stos
xor
bound
and
sbb
xchg
pop
movs
lds
mov
arpl
mov
(bad)
xor
and
push
cdq
and
push
xor
push
dec
mov
(bad)
ins
cmps
dec
ins
cmps
dec
add
lea
or
or
data16
adc
out
inc
inc
rol
xchg
mov
adc
mov
jmp
int3
or
dec
cs
mov
les
aad
psubusw
xchg
inc
xchg
test
add
cmp
add
sub
or
xor
push
dec
in
mov
fwait
imul
pop
push
and
push
leave
ror
mov
sbb
(bad)
and
nop
or
cmp
fiadd
mov
or
sbb
pop
bound
mov
add
xchg
adc
retf
stos
sub
push
xor
test
mov
adc
ficom
sub
shr
or
jbe
push
dec
mov
nop
pop
pop
imul
test
jmp
dec
(bad)
lock
cs
test
jo
add
and
xchg
xor
sar
add
stc
push
out
cmp
dec
jne
xchg
stos
or
fild
pop
xor
fdiv
aaa
(bad)
shl
pop
pop
lods
jle
or
mov
push
stc
in
pop
add
sbb
mov
daa
in
jns
mov
imul
jne
pop
cmps
dec
(bad)
icebp
or
xor
push
xchg
test
mov
xchg
cwde
arpl
test
xchg
iret
cwde
mov
adc
movs
outs
jb
(bad)
xchg
aam
push
cmp
push
cmp
and
mov
lock
jg
daa
movs
jg
scas
dec
cmc
cld
pop
mov
and
call
outs
jecxz
cld
mov
xlat
std
jns
add
pop
jmp
ret
and
adc
jb
test
xor
sub
imul
pushf
sub
int3
xchg
aam
(bad)
push
add
push
xor
test
mov
and
(bad)
fldenv
shl
retf
pop
sub
push
scas
sub
adc
or
aas
loope
sub
fisubr
mov
(bad)
nop
mov
push
sbb
add
loop
cmp
jmp
movs
push
rcl
mov
ss
nop
mov
mov
xor
and
inc
xor
pop
and
stos
sbb
fidiv
inc
add
adc
call
lea
push
or
adc
dec
sbb
and
pop
push
xchg
mov
enter
sbb
mov
call
xor
adc
mov
mov
test
in
xchg
inc
push
fisttp
push
cmps
arpl
mov
push
add
sbb
add
mov
fimul
adc
sub
rcr
in
cmps
push
fisub
mov
push
lds
pop
adc
pop
mov
mov
jbe
sub
push
xchg
aaa
gs
fwait
imul
fild
bound
and
xor
push
or
sbb
mov
jbe
out
and
pop
data16
dec
adc
inc
cmc
xchg
test
mov
push
add
sub
sbb
xlat
sub
jae
mov
jbe
rcl
aas
xor
adc
das
repz
bound
pop
rcr
jns
daa
rcl
push
ror
inc
sub
mov
sub
clc
sbb
je
mov
clc
lds
out
dec
in
sub
mov
iret
cmps
imul
pop
sahf
xchg
aas
and
xchg
adc
xor
add
cld
arpl
pop
mov
jle
and
adc
movs
in
sbb
mov
mov
gs
xchg
mov
and
(bad)
imul
jne
out
xchg
sbb
out
xchg
ret
adc
inc
(bad)
mov
xchg
std
aaa
inc
loopne
retf
cld
outs
inc
xchg
pop
pop
inc
scas
aas
std
stos
sbb
jp
ds
jg
cmp
or
adc
adc
test
or
aam
or
pop
shl
sbb
pop
add
add
aam
imul
or
aaa
push
into
enter
mov
pop
mov
cdq
fadd
pop
imul
dec
fwait
jl
loope
cmp
sahf
cmp
icebp
outs
mov
test
scas
mov
mov
cmp
sbb
test
dec
enter
push
xchg
and
push
jb
inc
(bad)
out
xor
cmp
xor
(bad)
push
sbb
push
inc
push
and
add
xor
pop
mov
pop
push
lods
dec
test
pop
pop
or
mov
pop
nop
pop
push
scas
bound
push
xor
add
dec
cdq
fs
dec
add
push
fs
ins
push
popa
mov
ror
dec
fwait
(bad)
fild
in
push
and
push
fisubr
adc
add
xor
jmp
cwde
and
ins
mov
fisub
mov
popa
mov
arpl
pop
bound
adc
sbb
pop
sbb
int3
arpl
pop
sbb
or
sub
mov
fwait
push
sbb
popf
push
mov
mov
mov
pushf
mov
cmp
(bad)
fisttp
and
fs
push
push
xchg
cmp
cdq
imul
ret
mov
jmp
mov
xchg
lock
pop
inc
idiv
sti
push
mov
inc
push
and
jl
and
inc
jae
mov
jg
cld
jmp
imul
arpl
mov
mov
or
adc
xlat
hlt
pushf
gs
call
sahf
imul
clc
scas
adc
lods
out
je
lea
jne
jae
vsqrtpd
jle
jl
pop
icebp
dec
imul
bound
pop
aam
or
cmc
mov
fidiv
cmp
cwde
into
cmc
std
nop
jg
xchg
sar
dec
push
xchg
and
and
adc
xchg
inc
inc
inc
icebp
pop
xchg
dec
mov
mov
enter
(bad)
cwde
lds
push
push
sbb
push
xor
mov
mov
push
les
dec
cmp
outs
or
cld
imul
cmp
mov
mov
movs
mov
mov
dec
xchg
out
mov
fadd
(bad)
retf
ds
icebp
or
jmp
jl
ds
mov
mov
cmp
mov
and
movs
rcr
(bad)
push
dec
cmp
xchg
sub
push
push
dec
test
aad
loop
nop
enter
xchg
dec
push
call
int
(bad)
push
xor
lods
dec
push
cdq
mov
push
xor
retf
adc
push
test
adc
cmp
pop
inc
scas
bound
add
pusha
pop
adc
inc
and
dec
mov
inc
xchg
adc
jge
(bad)
fisttp
fiadd
dec
(bad)
adc
dec
mov
mov
rcr
fisub
ins
mov
psubusw
dec
je
fwait
sub
xchg
es
mov
and
inc
ret
ins
add
sub
sbb
movs
inc
mov
add
push
and
pop
(bad)
loop
pop
xchg
sub
xor
ins
push
push
sub
push
mov
imul
or
movs
push
mov
xor
fidiv
add
mov
xor
pop
cmp
xlat
xor
mov
scas
imul
in
xchg
cmp
or
xlat
out
xchg
out
lahf
cmps
loope
out
pop
outs
xlat
loope
hlt
and
add
js
mov
mov
(bad)
push
inc
mov
aas
xchg
scas
mov
cld
(bad)
mov
pop
mov
imul
gs
mov
cwde
xchg
push
cmps
cmps
adc
mov
xor
add
scas
outs
std
popf
jmp
inc
adc
enter
lock
jecxz
inc
enter
xlat
lahf
(bad)
aad
mov
(bad)
adc
cmp
push
aaa
mov
mov
adc
xchg
bound
dec
pop
push
xor
sub
push
dec
pop
out
cwde
mov
dec
sub
cwde
ds
in
aam
in
inc
sar
pop
cld
cmps
and
fs
ret
sbb
and
dec
test
jne
lds
or
lods
or
push
inc
cmp
or
sub
add
or
int
fs
adc
inc
(bad)
push
and
dec
lea
cmp
movs
enter
adc
inc
mov
pusha
dec
mov
cmp
mov
or
add
cmps
mov
add
mov
mov
je
test
aam
in
aam
mov
mov
adc
xor
pop
sub
sbb
stos
sub
dec
aad
outs
jmp
or
aam
pop
mov
push
add
xchg
sub
adc
and
push
mov
movs
add
add
pop
loop
arpl
arpl
pop
or
shl
and
mov
push
xor
jbe
mov
push
and
mov
and
mov
(bad)
(bad)
xlat
dec
jno
sbb
stos
adc
out
push
std
adc
xchg
sbb
mov
jb
clc
or
std
shr
daa
push
xchg
je
cmp
rep
dec
jae
pop
pop
das
mov
xchg
cmp
pop
sbb
(bad)
shl
inc
repz
aad
(bad)
jne
repz
sbb
xchg
lods
iret
es
(bad)
aaa
or
add
push
es
mov
dec
dec
adc
enter
push
add
jae
mov
cmp
mov
loopne
stc
outs
push
mov
std
or
fild
sbb
or
sahf
punpckhwd
and
outs
mov
adc
xchg
addr16
sub
jbe
lahf
pop
clc
jp
sub
ret
sar
cmps
cmp
ret
aam
pop
sahf
ss
sahf
xchg
dec
mov
popa
stc
mov
js
ret
jb
pop
mov
cld
stos
neg
test
jp
dec
push
jae
jmp
psrad
test
int
sub
into
in
out
ja
int
xchg
inc
sahf
lahf
in
repz
mov
jp
xchg
out
jge
jp
lea
xchg
mov
jne
lahf
mov
or
add
pop
sar
(bad)
add
inc
jl
aas
cmps
push
lea
cmc
jmp
mov
stos
lock
(bad)
scas
in
jae
jno
cdq
inc
xchg
mov
movs
xor
and
leave
push
pop
dec
add
mov
mov
sbb
aam
adc
xchg
adc
add
cmc
rol
int
cmps
add
add
xor
movs
out
push
push
xchg
inc
shl
adc
lds
inc
dec
add
and
int
movs
ins
xor
push
lods
retf
push
nop
adc
arpl
dec
push
sbb
inc
(bad)
loop
push
lds
xor
bound
test
cwde
loopne
dec
or
pop
adc
mov
retf
stos
cmp
loop
xor
add
cdq
mov
pop
add
xchg
add
inc
inc
cmc
daa
xor
push
inc
push
add
les
mov
fisttp
out
stos
sbb
adc
jmp
rol
enter
jae
xchg
stc
mov
add
xchg
mov
sbb
loop
inc
cmps
test
ins
and
loop
mov
dec
pextrw
pop
inc
or
arpl
movs
pop
fisub
dec
and
loop
mov
stos
add
mov
mov
dec
sub
jne
imul
cmp
movs
jb
sbb
movs
int3
xchg
cmp
inc
rol
xlat
or
addr16
xchg
cmp
enter
popf
push
dec
data16
outs
sar
(bad)
push
sti
lds
not
lahf
dec
mov
mov
std
sbb
jge
leave
mov
fldcw
out
jo
lds
hlt
lock
mov
adc
aas
addr16
(bad)
mov
test
jmp
stc
cdq
fxch
mov
ret
jp
inc
jle
cmp
test
jg
scas
push
xor
test
push
clc
jo
pop
rcr
add
rol
cmc
adc
aas
cmp
ret
cmp
mov
inc
mov
dec
add
cmovb
pop
test
jo
xchg
cmc
enter
fld
rol
push
add
fwait
inc
not
mov
int3
lods
jl
icebp
dec
and
lahf
mov
pop
jmp
addr16
mov
in
out
adc
dec
cmp
out
pop
mov
mul
movs
out
xchg
imul
in
out
sahf
retf
in
mov
inc
mov
cmc
and
push
(bad)
cdq
lock
test
dec
lds
cmovo
or
retf
clc
(bad)
out
into
mov
and
clc
ins
aas
loop
sar
(bad)
add
dec
jl
aas
cmps
test
adc
(bad)
lea
cmc
jmp
cmps
xchg
loop
aad
pop
cld
enter
mov
cmp
adc
inc
push
test
int
adc
mov
inc
shr
push
and
sub
sbb
lods
mov
inc
inc
xchg
pop
dec
rcl
sub
push
cmp
sub
popa
aam
xchg
inc
mov
sub
push
test
or
xchg
hlt
sbb
sub
bound
push
pop
(bad)
inc
add
sbb
sub
adc
adc
imul
arpl
dec
adc
push
ss
inc
fld
jb
mov
xor
(bad)
pop
xchg
pop
pop
jmp
push
jbe
gs
add
outs
pusha
dec
mov
and
bound
cdq
add
pop
xor
pop
inc
mov
xor
or
inc
not
dec
mov
add
xor
mov
and
dec
fs
test
cli
add
xor
(bad)
rcr
mov
mov
mov
push
pop
add
xor
pop
sbb
mov
test
not
sbb
sub
dec
inc
and
dec
xchg
jno
int3
inc
mov
adc
lods
mov
mov
cmp
out
push
xchg
test
scas
push
push
out
loopne
sbb
mov
sub
jg
jg
(bad)
idiv
add
out
push
sub
jge
pop
xchg
pop
cmps
mov
add
xchg
add
push
push
push
push
fmul
fsub
push
pop
cmp
jl
(bad)
jae
ficom
sar
jp
mov
mov
fcom
xchg
add
addr16
leave
ja
pop
inc
daa
out
iret
or
lods
jle
test
iret
leave
xor
int
pop
ins
mov
inc
jmp
pop
call
int
inc
mov
mov
out
bound
mov
mov
fcomp
xor
ss
enter
mov
cli
push
and
(bad)
int
ss
cmp
and
sub
jae
js
loop
sar
add
xchg
into
cmc
cld
xchg
mov
in
push
sar
and
add
iret
stc
adc
scas
cli
repz
fidiv
sahf
test
lahf
int3
mov
pop
fsub
loope
mov
or
stos
pop
fwait
pop
sub
xor
shl
(bad)
es
mov
movs
mov
adc
pop
inc
and
mov
dec
(bad)
test
lds
cdq
push
lock
lds
movs
sbb
pop
ror
or
bound
or
push
and
cmps
pusha
dec
add
inc
or
add
and
adc
push
sbb
xchg
mov
push
xchg
ror
mov
sub
mov
inc
in
mov
xor
xchg
add
add
out
test
cmp
add
sub
cmps
add
sub
in
int3
les
pusha
sub
test
pop
call
dec
or
mov
es
inc
mov
and
or
xchg
nop
adc
or
push
or
xchg
push
xor
sub
call
fdiv
shl
mov
fist
dec
arpl
aad
in
mov
jbe
inc
push
fisttp
jbe
adc
ins
dec
(bad)
in
movs
xor
popf
inc
dec
lea
lds
inc
pop
sbb
cld
jne
enter
xor
aam
sbb
xlat
xor
(bad)
push
icebp
aam
sub
jbe
and
mov
add
jg
call
cld
sbb
jmp
stc
cmp
add
push
add
rol
inc
or
ret
in
lods
cmps
imul
dec
jb
sub
pop
mov
scas
mov
jl
inc
mov
imul
mov
fist
adc
jle
cmp
loop
jnp
test
scas
mov
sub
lods
int3
(bad)
pop
xchg
add
das
pop
jg
paddw
icebp
enter
cld
adc
jecxz
cld
mov
xlat
std
jns
add
dec
jmp
aaa
(bad)
adc
test
out
pop
fsub
loopne
jmp
and
xor
inc
inc
inc
arpl
cmp
iret
inc
retf
adc
sub
mov
and
mov
pop
sbb
or
dec
xor
mov
shr
out
or
scas
data16
jns
jmp
scas
mov
and
call
cld
mov
je
cmp
dec
xchg
movs
pop
aam
push
mov
les
sub
mov
and
push
inc
push
xor
bound
and
sbb
xchg
cmp
leave
sbb
gs
shl
sbb
aad
aas
ins
xor
ret
(bad)
dec
add
cwde
retf
retf
dec
mov
and
imul
sub
jne
inc
movs
pop
push
push
push
push
dec
dec
pop
push
cmp
sub
cdq
nop
mov
pop
xor
sub
aas
xor
lock
or
xchg
push
push
dec
call
push
aas
xor
aas
xor
pop
push
add
adc
mov
out
and
push
aaa
ins
xor
rol
fist
mov
cmp
(bad)
fisttp
in
mov
mov
push
push
std
xchg
or
(bad)
aam
sub
es
fadd
into
outs
(bad)
mov
jb
pusha
push
xor
(bad)
mov
das
test
retf
xor
jb
and
mov
mov
jg
lahf
cdq
jg
outs
jmp
inc
xor
sub
push
ins
out
xlat
xor
ja
ret
pop
cld
sub
jns
push
mov
mov
add
add
inc
push
ins
lods
js
retf
and
inc
sbb
sbb
mov
inc
enter
sub
dec
pop
out
loop
aam
retf
(bad)
repnz
xchg
mov
cmps
xchg
fimul
sahf
imul
loopne
(bad)
adc
mov
imul
in
aas
(bad)
mov
leave
clc
(bad)
mov
in
and
cld
ins
inc
xchg
and
add
imul
mov
mov
adc
(bad)
aam
pop
pop
out
sub
xor
push
push
or
or
cmp
(bad)
ficom
clc
jns
or
fidivr
dec
mov
lds
sbb
bnd
push
retw
ficomp
xor
(bad)
jmp
inc
xor
hlt
sti
sub
inc
lods
(bad)
int3
shrd
sbb
mov
js
imul
in
cli
movs
mov
int3
imul
mov
push
and
int3
int3
xchg
movs
xchg
clc
movs
bound
shl
dec
and
xor
push
and
inc
loop
arpl
add
pop
mov
sbb
imul
lds
inc
fist
retf
push
es
mov
jg
dec
mov
sub
jo
int3
add
push
loop
and
push
cwde
cli
xchg
leave
imul
jno
sub
mov
test
inc
and
int
bound
or
mov
stos
dec
mov
push
arpl
call
mov
in
aad
fwait
adc
stos
es
xchg
popa
stc
movs
add
adc
push
fldenv
aam
pushf
sbb
lods
inc
fld
es
cmps
xor
adc
aad
mov
sbb
adc
xchg
loop
xor
fst
cmp
xchg
loop
mov
test
test
aad
fst
and
pop
xor
retf
sahf
pop
and
mov
mov
mov
or
stos
and
inc
adc
data16
push
into
push
scas
arpl
enter
pop
pop
enter
les
adc
adc
jnp
xchg
loope
dec
pop
scas
mov
mov
ja
stos
jecxz
push
daa
fadd
cdq
cmc
outs
cdq
popa
stos
inc
mov
inc
inc
(bad)
inc
leave
daa
sub
xchg
push
rcl
cmp
lods
jl
cmc
add
or
add
dec
add
inc
(bad)
(bad)
xor
mov
ret
int
xor
loope
pop
and
cmp
fsubr
(bad)
mov
iret
retf
das
arpl
daa
adc
xchg
scas
sbb
jmp
ret
(bad)
pop
je
add
loope
add
cmp
shl
jle
sahf
jg
mov
inc
lea
mov
jne
sbb
mov
push
loope
repz
sti
sbb
adc
nop
es
pop
sbb
add
ror
xchg
sti
aas
sbb
out
inc
fist
iret
iret
je
cmp
sbb
jl
jle
not
addr16
dec
sbb
xchg
int3
imul
cmp
les
stos
mov
ds
mov
sbb
lea
or
test
imul
cmp
lds
dec
jns
repz
mov
jae
rcr
ror
lds
mov
lar
xchg
rcr
add
inc
push
movs
sub
mov
push
sub
leave
inc
lods
lea
rol
sub
sbb
push
scas
dec
adc
and
imul
imul
sub
sbb
cmp
lods
mov
pop
test
(bad)
int
push
push
or
inc
out
and
imul
dec
inc
fwait
int
xchg
stc
xchg
mov
jns
adc
push
(bad)
out
stos
sbb
xor
mov
hlt
or
mov
xchg
jne
pop
xchg
inc
leave
cmp
mov
and
sub
dec
sub
push
sub
sub
add
mov
push
pop
sub
daa
adc
or
and
add
pop
add
sub
ucomiss
push
sub
or
xchg
inc
or
xchg
inc
stc
je
push
add
mov
and
es
sub
push
jmp
and
inc
data16
int
movs
jge
loope
pop
shr
retf
xlat
sahf
push
ds
cmps
fcomip
scas
ret
mov
pop
jae
jmp
dec
mov
adc
push
add
add
push
add
jl
jecxz
or
(bad)
xlat
push
retf
xchg
inc
ror
(bad)
jecxz
cmps
push
stos
rcr
pop
or
loopne
xor
xchg
aam
adc
scas
jl
inc
xchg
jnp
inc
scas
pop
sti
cmp
cmc
jg
inc
hlt
pop
pop
test
jnp
scas
inc
(bad)
mov
jne
sbb
mov
push
loope
repz
xlat
imul
clc
sub
inc
jae
adc
dec
mov
imul
mov
aas
inc
xchg
dec
sar
inc
jle
jge
out
enter
jnp
jecxz
pop
pop
xlat
ins
ins
jecxz
lods
mov
xor
retf
(bad)
scas
scas
inc
sbb
retf
test
sub
xor
dec
and
movs
xchg
pop
push
and
sbb
xchg
pop
rcl
lds
jmp
lds
aam
cmp
ins
push
and
pop
sbb
add
int
aad
jle
or
aas
xor
enter
out
add
or
sub
jmp
test
mov
sub
jl
fs
push
xor
push
test
dec
cmps
xor
dec
push
int
popa
stc
cmps
jno
jbe
adc
aas
xor
sub
imul
sub
push
add
adc
add
sub
aad
push
pop
fisttp
cwde
lods
retf
aam
mov
mov
push
test
icebp
push
xor
movs
pop
sub
mov
inc
arpl
pop
adc
dec
in
cmp
sub
mov
aam
xchg
stc
push
int
bnd
xor
sbb
rol
dec
or
je
dec
in
adc
stos
and
pop
nop
pop
push
test
mov
mov
jns
sub
pop
loop
call
pop
adc
xor
dec
add
sahf
arpl
add
loopne
stos
fild
inc
xchg
mov
mov
sub
add
add
push
add
add
sbb
stc
out
lea
pop
xchg
adc
repz
mov
xchg
lock
movs
jg
push
test
push
cmp
fistp
adc
enter
aam
add
add
mov
aas
mul
out
inc
sbb
call
jecxz
pop
cld
mov
xlat
std
jp
in
pop
jmp
aas
(bad)
adc
pop
mov
xchg
push
push
lds
mov
mov
dec
sub
or
cmp
pop
and
retf
scas
sahf
xchg
stos
aaa
cmc
js
push
dec
in
out
push
test
ret
mov
mov
mov
pushf
mov
mov
inc
rol
imul
inc
or
adc
int
es
pop
sbb
shr
add
inc
test
mov
adc
and
test
adc
cs
sbb
push
pop
sbb
adc
inc
or
inc
or
xor
adc
and
inc
fs
add
aad
xor
es
push
movs
mov
adc
lods
mov
or
push
add
xor
movs
add
mov
rcr
add
test
push
inc
push
xor
movs
and
add
sub
dec
mov
pop
mov
fsub
nop
mov
sub
push
mov
mov
mov
pop
loopne
movs
xor
ficom
into
jge
pop
mov
mov
mov
stos
cs
adc
retf
adc
stos
sbb
mov
mov
bnd
movups
add
xchg
inc
mov
std
pushf
(bad)
ja
lock
mov
xchg
and
push
xchg
and
cmp
mov
dec
and
mov
ds
out
in
in
push
cmp
mov
retf
in
lahf
jecxz
mov
std
xchg
popf
cs
xlat
imul
test
sub
mov
cmps
push
fnsave
mov
jle
jmp
sbb
mov
and
jge
or
lock
mov
and
int3
(bad)
int
cmp
add
mov
pop
icebp
icebp
push
jecxz
stc
jmp
aas
or
pushf
xlat
push
pop
test
add
add
inc
fstp
jb
mov
outs
lea
and
pop
cmc
out
add
(bad)
adc
or
cdq
mov
mov
and
dec
sub
les
jns
xor
dec
mov
sub
mov
enter
retf
and
cwde
sar
mov
shl
mov
rcl
cdq
movs
dec
xchg
add
add
mov
pop
fs
stos
mov
cdq
fs
int3
mov
enter
adc
dec
and
pop
xchg
sub
clc
cmps
add
push
inc
mov
mov
adc
test
or
or
add
mov
inc
test
cmps
xor
or
test
xor
add
imul
mov
je
xlat
xor
sub
or
shl
sub
sub
adc
dec
mov
sub
mov
sub
mov
nop
mov
imul
mov
loop
adc
push
push
sub
pop
or
rcr
xchg
push
sub
mov
dec
jmp
xor
stos
inc
pop
loopne
sub
cmp
test
xor
sub
and
fsub
int3
(bad)
icebp
add
xlat
arpl
mov
(bad)
and
lahf
aam
scas
pushf
je
repz
test
mov
shl
cmp
retf
loopne
(bad)
jmp
adc
rcl
clc
dec
xchg
jl
mov
push
pop
xor
or
mov
jge
dec
std
cmp
push
push
addr16
pop
pop
xor
test
and
neg
cmp
(bad)
mov
arpl
shr
ins
loopne
fadd
retf
lods
in
(bad)
xlat
xchg
and
cmps
ret
repz
in
pop
in
pop
cs
pop
xchg
xchg
gs
sbb
int3
cmps
jl
inc
sbb
mov
mov
pop
mov
mov
ret
mov
jl
cmps
pop
push
addr16
icebp
sub
jg
call
adc
sub
imul
repnz
mov
push
sbb
xchg
sub
out
xlat
mov
stos
pop
popa
pop
dec
out
dec
inc
adc
jmp
in
mov
ret
leave
sub
ret
test
pop
(bad)
mov
(bad)
call
push
cmp
and
aas
fst
jae
adc
jmp
icebp
mov
xlat
out
dec
inc
in
mov
pusha
jp
xchg
std
xchg
sbb
fisttp
mov
lds
mov
lahf
push
jmp
inc
sbb
cmp
call
leave
scas
int
inc
inc
call
ins
cmp
cmps
dec
(bad)
scas
loop
cli
xor
jg
in
push
int
jb
jge
test
popf
nop
pusha
imul
popa
stc
mov
inc
sbb
imul
push
dec
outs
lods
inc
jl
scas
clc
shl
out
lds
dec
mov
add
ss
(bad)
fcos
add
inc
jmp
pop
jl
jb
iret
iret
and
pop
imul
xchg
scas
fld
inc
pop
icebp
scas
into
sbb
dec
dec
shr
add
xor
loope
add
dec
std
hlt
dec
std
sub
pushf
ins
js
xchg
into
(bad)
mov
loop
inc
push
std
ss
retf
out
pop
lahf
les
mov
pop
cwde
xlat
hlt
sar
popf
int3
pop
pop
in
xor
push
cmp
inc
and
pop
cli
jecxz
add
clc
in
inc
inc
loope
call
pop
inc
scas
aas
std
stos
sbb
call
scas
jmp
lock
mov
and
push
pop
ins
sbb
movs
push
cwde
les
add
xor
mov
pop
xor
add
enter
adc
in
lahf
adc
and
add
(bad)
arpl
arpl
stos
adc
or
enter
sbb
sub
push
add
jae
ins
sbb
push
and
mov
mov
or
sbb
pusha
cmp
lods
or
dec
or
cwde
or
and
or
bound
dec
push
add
push
sub
stos
push
inc
jne
mov
retf
popa
push
add
or
lds
pop
mov
bound
mov
lds
mov
mov
mov
movs
bound
call
or
dec
jmp
or
lock
mov
mov
data16
fsubr
movs
fdivr
mov
dec
rcl
mov
(bad)
add
push
push
xchg
cli
fcomp
bound
adc
cli
sar
xor
lods
inc
out
loopne
ds
das
out
add
xor
(bad)
jle
add
inc
adc
iret
adc
xor
test
dec
cld
stos
repz
ds
mov
pop
mov
hlt
jle
push
dec
hlt
stos
adc
dec
mov
pop
int3
call
xchg
retf
shl
std
lock
(bad)
jne
std
pop
mov
xchg
xlat
in
cmps
in
arpl
xor
das
xchg
(bad)
call
ds
jnp
fdivr
fimul
push
(bad)
lea
ror
xlat
adc
pusha
jbe
inc
cmps
ins
jnp
test
push
je
fild
push
jmp
data16
fadd
loope
enter
pop
js
cmp
fimul
lock
aaa
xchg
cmp
xchg
ins
cmp
dec
arpl
jmp
pop
pop
movs
(bad)
mov
or
jecxz
or
test
jg
jp
mov
addr16
test
out
sahf
or
inc
cmp
sub
push
dec
sahf
ror
and
push
push
test
std
pusha
outs
stos
sub
mov
jp
not
in
and
xchg
int
clc
scas
push
xchg
and
jecxz
(bad)
jg
jp
xchg
jnp
pop
stos
cs
dec
jae
sbb
and
pop
imul
sub
into
repz
xchg
cs
sti
int
add
scas
iret
mov
call
mov
mov
leave
dec
xlat
add
popf
pop
in
inc
addr16
fisttp
imul
mov
iret
call
pop
aas
sub
aas
fistp
gs
jae
cmp
aam
jmp
push
outs
pop
aas
call
pop
std
add
mov
cdq
stc
ins
cmp
(bad)
mov
int3
aaa
dec
in
xor
dec
jl
inc
and
pop
cli
jecxz
add
clc
in
inc
inc
loope
cdq
jl
inc
xchg
and
add
jne
(bad)
cmp
into
addr16
cdq
and
push
add
xchg
shl
add
adc
pop
test
inc
test
cmps
fs
cwde
das
lods
xor
lds
xor
dec
add
sub
xor
mov
pop
xor
adc
nop
sbb
ss
sbb
dec
rcl
mov
pop
(bad)
cmps
add
dec
into
sub
or
mov
cwde
or
nop
cmps
and
add
test
sbb
mov
aam
jne
and
mov
inc
imul
mov
and
dec
and
mov
loop
or
cmps
add
and
test
pop
aam
mov
adc
clc
test
jle
or
sub
or
ins
and
sub
inc
pop
or
jns
mov
cmps
mov
imul
add
call
and
fs
pop
shl
js
into
xor
out
jl
aas
mov
icebp
outs
jle
mov
pop
xor
jns
cwde
gs
xchg
in
mov
mov
inc
les
cmp
aam
arpl
iret
push
aad
in
in
cmp
test
scas
sbb
shr
inc
jae
adc
xchg
xchg
mov
(bad)
out
sbb
call
into
pop
shl
movs
jl
lahf
ins
xchg
adc
jecxz
lahf
sti
loope
(bad)
jne
fdiv
cmp
cmp
loope
out
dec
stos
xchg
repnz
popa
sti
int3
ds
out
daa
mov
cmps
inc
jl
sub
addr16
push
shl
sub
mov
jg
pop
imul
dec
dec
test
inc
pop
dec
lock
ret
ins
sub
jns
out
sub
(bad)
push
out
in
fsub
lea
sar
lods
jecxz
xchg
jb
cmp
cmc
scas
dec
aad
repz
sub
sbb
in
icebp
sub
mov
pop
imul
push
jmp
shr
adc
retf
fild
sub
pop
popa
cli
cdq
push
call
ret
cmp
mov
aaa
and
xlat
sahf
cmp
test
mov
adc
(bad)
push
jp
xor
and
dec
inc
cmp
and
js
jo
pop
inc
and
pop
mov
test
repz
retf
cld
clc
shl
dec
push
push
or
test
mov
fnstenv
out
femms
js
sbb
jl
mov
out
sar
mov
std
mov
jl
loope
mov
fs
dec
mov
sahf
jmp
loope
ja
movs
iret
mov
adc
iret
in
xchg
int
mov
fistp
sbb
mov
in
int
jns
lds
ror
and
jl
pop
jbe
mov
aaa
pop
mov
in
mov
jnp
pop
dec
sar
xor
mov
xchg
test
rcl
in
or
dec
stos
js
(bad)
fisubr
stos
xor
and
cld
pop
cmp
pop
ins
sub
push
push
rcr
inc
repnz
enter
adc
(bad)
fstp
arpl
lods
je
mov
jge
and
lods
sbb
sub
jl
cmps
sar
xlat
add
ins
jae
mov
movs
call
fs
add
jbe
sar
out
pushf
jns
das
ret
mov
adc
loop
mov
mov
(bad)
mov
icebp
imul
jge
test
sbb
ficomp
mov
hlt
aad
repnz
xchg
jle
pop
sti
(bad)
in
mov
mov
cmc
add
not
xchg
fld
in
out
inc
mov
jmp
mov
fist
cs
jmp
jmp
inc
repnz
aad
jg
sub
(bad)
xor
jg
aas
mov
sbb
(bad)
fsubr
push
mov
aam
ja
pop
sbb
std
jno
cmc
jmp
ins
iret
int3
fsin
icebp
scas
jmp
jp
xor
dec
cld
adc
add
cmp
cli
jecxz
add
clc
movs
jle
add
inc
xchg
cld
imul
xchg
and
add
jbe
(bad)
cmp
int
cmps
mov
test
sub
pusha
push
xor
inc
or
ret
push
add
mov
sub
sbb
lods
into
adc
inc
adc
xchg
jo
data16
xchg
xor
mov
stos
cwde
arpl
in
aam
es
ins
jae
int
jb
call
push
sbb
aam
dec
xchg
pop
mov
adc
pop
xchg
push
xor
push
movs
mov
stos
dec
enter
and
call
out
int3
xchg
push
mov
aas
and
clc
mov
xor
(bad)
(bad)
pop
dec
loopne
inc
bound
adc
rcl
mov
inc
test
push
sbb
sub
mov
push
xor
pop
fiadd
rcl
and
add
int3
data16
add
xlat
sbb
rcr
inc
cmps
push
xchg
loopne
int3
mov
hlt
enterw
mov
(bad)
sub
std
add
xor
or
xchg
push
adc
xor
test
inc
xor
push
popf
adc
aas
mov
jge
pop
sub
int
mov
sahf
sahf
jmp
push
mov
pop
aad
push
jo
fstp
fs
out
inc
idiv
aas
mov
loopne
pop
xchg
rcl
std
dec
stos
mov
into
inc
sahf
jl
repnz
mov
aam
ficom
jmp
jbe
adc
fistp
pop
fmul
mov
je
cmp
dec
or
mov
imul
mov
lods
test
imul
pop
ins
repz
out
(bad)
lock
scas
sub
iret
and
sub
enter
inc
hlt
test
rcr
push
jmp
mov
xchg
mov
sti
stos
aaa
cmc
cli
sahf
movs
xlat
xlat
sub
(bad)
stc
inc
sub
cli
and
out
popa
pop
div
enter
sbb
xchg
retf
loop
adc
and
or
jmp
mov
mov
ins
sub
repz
inc
std
aam
out
sub
repnz
add
or
xchg
inc
(bad)
div
fstp
xor
xor
inc
cmc
(bad)
scas
xlat
push
mov
push
ja
imul
dec
mov
fadd
mov
jle
pop
mov
cli
call
dec
(bad)
xchg
pop
lock
ret
loop
fld
mov
stos
sub
and
mov
lahf
ins
pop
pop
(bad)
jnp
dec
xor
das
daa
fiadd
(bad)
repz
(bad)
mov
daa
js
mov
sub
movs
in
stc
cld
mov
aas
mov
pop
add
push
push
mov
test
aas
repnz
sbb
jge
ja
lahf
xor
data16
loope
push
nop
jg
cmp
out
stos
mov
dec
pop
iret
fidivr
cmp
inc
sbb
cs
shl
fcomp
sbb
dec
sahf
cld
mov
frstor
sub
inc
ins
fwait
xchg
xor
xor
cli
leave
sbb
jmp
mov
sub
dec
mov
xchg
scas
into
imul
xchg
xlat
into
jg
ins
adc
dec
loope
cmp
fs
imul
repnz
sub
mov
cmps
dec
cli
repz
adc
cdq
sti
int
xchg
fcom
xchg
jp
inc
sbb
mov
rol
and
push
jae
hlt
pop
push
pop
xor
fs
jle
push
out
jno
and
aad
lahf
cmps
mov
adc
jb
jmp
adc
adc
mov
cmp
jnp
leave
(bad)
jmp
add
lock
dec
fsubr
iret
cwde
shl
or
fwait
jne
add
test
mov
xor
mov
xor
sar
add
sti
xor
lods
outs
mov
je
adc
ja
mov
cli
repz
ficom
mov
jecxz
scas
in
xor
(bad)
cmp
pop
test
sahf
cdq
cdq
xor
mov
test
pushf
or
pop
mov
lods
or
cmps
add
add
dec
or
mov
inc
inc
inc
stos
inc
dec
mov
pusha
cmp
push
sub
pushf
gs
or
aam
vpunpckhbw
(bad)
out
jmp
test
and
push
and
sbb
add
into
rcl
inc
in
rol
hlt
adc
cdq
add
xor
cmp
xchg
xor
cs
inc
push
pop
cli
add
dec
mov
fisttp
jno
mov
aam
lahf
ins
add
movs
dec
je
push
xor
fs
imul
test
mov
push
sub
dec
mov
mov
add
sub
(bad)
dec
out
jmp
xlat
sahf
into
xchg
jle
clc
mov
xchg
test
retf
ds
cld
mov
add
cli
push
repz
pushf
scas
push
idiv
(bad)
addr16
lea
add
jmp
lahf
xchg
jnp
fcomp
mov
cmps
cmp
test
repz
mov
add
out
jbe
xchg
in
jp
int
mov
sbb
pop
out
mov
inc
iret
sbb
xchg
and
dec
xor
mov
js
jmp
hlt
push
daa
xor
jge
pop
mov
mov
stc
mov
lds
push
aas
bsf
mov
xor
test
lahf
lock
(bad)
cmp
mov
push
int
jp
(bad)
pop
test
rcr
repz
(bad)
fsub
test
jmp
xlat
cmp
pop
imul
dec
and
add
mov
iret
movs
and
jbe
mov
xchg
xchg
pop
aas
ret
iret
neg
imul
dec
fstp
ins
xchg
sbb
jbe
sti
repnz
out
cmp
sub
mov
cld
rcr
mov
add
repz
fwait
xlat
sahf
retf
jge
pop
call
popf
inc
mov
in
repz
sub
pop
(bad)
xchg
pop
ins
jecxz
mov
imul
cmp
ds
jno
ins
jmp
fnsave
fidivr
out
cld
inc
loope
mov
cmps
push
fidivr
cmp
loop
cmps
push
xchg
fisub
addr16
std
imul
scas
cmp
movs
jl
push
mov
sbb
inc
and
or
cmp
jl
fs
mov
jns
repnz
xor
jp
int3
sub
in
cmp
pop
mov
jne
stc
cmps
or
sti
iret
sub
add
jne
jne
push
ss
jb
mov
or
or
sahf
inc
(bad)
call
mov
fnstcw
jmp
js
xchg
inc
lea
out
leave
cmp
jge
pop
mov
in
and
mov
cmp
ret
or
das
pop
das
jae
inc
push
ds
mov
cmps
aad
lea
mov
fstp
outs
int3
jne
retf
cmc
scas
cmp
lods
jne
cmps
ja
mov
mov
into
fistp
jg
sub
mov
out
pop
mov
xchg
cmp
inc
je
aas
cwde
sub
and
jmp
iret
inc
mov
inc
xlat
nop
sub
sub
inc
mov
neg
lahf
addr16
fyl2xp1
sub
xchg
and
or
sbb
xlat
jecxz
scas
sar
jp
mov
fmul
jmp
mov
(bad)
sar
int3
and
ret
loop
jecxz
fimul
(bad)
rcr
push
retf
mov
iret
outs
std
repz
push
loop
out
je
adc
aad
sahf
enter
push
clc
rol
push
je
mov
in
add
add
jbe
xlat
push
xchg
stos
pop
inc
out
xor
cmp
test
mov
ins
addr16
arpl
gs
sbb
retf
mov
xchg
dec
inc
mov
add
fisttp
jg
jle
retf
retf
and
mov
cld
in
pushf
jl
std
or
mov
add
(bad)
mov
pop
into
cmc
mov
clc
push
in
sbb
add
dec
(bad)
mov
push
pop
mov
ds
jg
in
fidivr
sub
sub
adc
dec
push
pusha
movs
aam
sub
pop
xchg
dec
pop
cdq
push
stos
xor
cwde
xchg
jp
in
call
cdq
rcl
jne
jno
movs
pusha
int3
retf
adc
arpl
add
adc
cmp
sub
push
add
cmps
bound
sub
jmp
inc
xor
(bad)
out
shrd
add
inc
mov
inc
bound
add
mov
sub
push
xchg
adc
sub
inc
mov
adc
adc
and
push
daa
or
xor
enter
mov
push
sub
add
push
xchg
inc
fld
dec
mov
jbe
or
ins
and
movs
xor
or
int3
gs
sub
xchg
retf
xchg
scas
inc
lahf
dec
js
loop
int
dec
or
daa
mov
daa
or
retf
(bad)
mov
out
and
scas
mov
sub
(bad)
call
out
daa
(bad)
cmp
push
(bad)
and
or
daa
jmp
add
mov
test
and
stos
int3
int
movs
mov
(bad)
fstp
add
dec
pop
pop
test
scas
jbe
test
in
pop
cdq
fwait
mov
xchg
lds
mov
sub
movs
jno
fsubr
push
mov
xchg
jb
xchg
data16
test
jbe
mov
int3
stos
and
out
bound
push
push
aaa
jb
adc
push
stos
push
neg
push
inc
in
add
add
mov
retf
repz
ror
inc
xlat
scas
(bad)
ja
cli
(bad)
xor
imul
jle
scas
(bad)
push
adc
imul
sub
xchg
jecxz
mov
dec
sub
std
mov
jae
call
jg
pop
dec
fwait
push
loop
pop
inc
out
out
mov
out
mov
scas
jns
inc
arpl
pop
sti
cmps
adc
test
pop
scas
xor
cdq
aas
dec
lock
daa
fadd
mov
sti
pop
ja
or
xchg
dec
aas
fisub
fcom
cwde
in
pop
int3
scas
inc
loope
inc
mov
jl
setp
push
out
xchg
mov
scas
push
inc
mov
jo
rol
pop
out
rcr
xchg
fldenv
xlat
rcr
fsubr
jae
add
mov
pusha
jo
enter
in
scas
movs
xchg
mov
xor
out
dec
dec
jmp
pop
mov
fisttp
pop
lea
xor
add
std
not
jb
ret
push
jb
jp
(bad)
push
xor
cmc
out
addr16
mov
xlat
push
lea
jmp
push
mov
xor
cmp
clc
stos
cmc
mov
add
scas
or
xor
stos
inc
call
icebp
pop
mov
scas
pushf
ds
stc
inc
(bad)
adc
popa
mov
jg
(bad)
call
hlt
scas
mov
adc
ds
jle
jle
push
xor
mov
cmp
ss
stc
xor
retf
inc
js
scas
jmp
rcl
arpl
mov
ret
mov
mov
ret
pop
cld
dec
adc
aad
sbb
call
in
inc
pop
jg
scas
out
fist
fisubr
jl
repnz
imul
inc
mov
scas
fdivr
(bad)
adc
or
cdq
(bad)
sar
adc
sub
movs
xor
retf
adc
mov
je
dec
mov
retf
add
mov
inc
pushf
jp
or
mov
shl
or
or
push
aas
adc
cwde
push
fisub
mov
mov
sub
push
xor
mov
sub
adc
or
push
adc
cmp
(bad)
xchg
sbb
call
or
test
adc
fwait
(bad)
lds
adc
fimul
and
sub
sbb
and
sbb
fiadd
xchg
ins
add
jno
inc
sub
xchg
ins
add
lea
jo
and
push
dec
push
and
xchg
pop
fild
adc
cwde
sub
fs
xchg
nop
adc
or
add
add
push
sub
xchg
inc
lds
mov
mov
xor
int3
fs
add
or
hlt
or
jmp
stos
inc
pushf
xor
repz
data16
call
jmp
add
or
and
fidivr
js
jp
in
jae
jmp
xor
enter
inc
lods
test
idiv
lahf
mov
sbb
jmp
sbb
pop
mov
pop
outs
movs
add
inc
nop
xor
sbb
adc
je
push
fst
hlt
and
inc
cld
mov
in
mov
shl
sub
jle
xor
out
leave
es
cld
sub
jne
out
dec
shl
inc
mov
(bad)
mov
cmp
shl
out
daa
fisubr
add
cld
ds
popf
outs
mov
jmp
cld
push
mov
fstp
imul
adc
fst
popa
(bad)
xlat
repnz
xlat
rcl
movs
jge
repz
fild
cmp
in
dec
cmp
mov
retf
bound
inc
adc
test
xor
adc
and
lods
or
mov
cli
aaa
loopne
stc
add
jg
pop
std
cdq
stos
stc
into
mov
and
mov
jecxz
cld
mov
xlat
std
jns
add
dec
jmp
psllw
(bad)
scas
ret
js
test
js
int3
cmp
pop
pusha
dec
push
push
sub
jmp
jae
xchg
push
sbb
rcr
inc
retf
or
jae
aad
push
sbb
push
rol
mov
dec
int3
xchg
sub
mov
or
or
dec
bound
or
push
(bad)
(bad)
or
push
adc
pop
mov
shl
or
dec
mov
xor
add
mov
push
and
xchg
add
dec
push
xor
dec
xchg
jbe
xor
stos
xor
pop
mov
or
and
dec
shr
add
xchg
adc
int3
dec
and
sub
mov
push
add
add
pop
inc
adc
mov
fist
shr
ins
inc
leave
jno
push
fiadd
adc
push
test
sub
(bad)
(bad)
movs
mov
sbb
jae
pop
push
push
xor
xor
add
call
outs
mov
fisttp
shr
mov
mov
call
jl
jl
sahf
aas
sbb
in
mov
jae
int
add
push
mov
rol
add
dec
push
fst
fld
pop
or
enter
and
sub
cmc
push
mov
pushf
outs
jne
sbb
add
xchg
inc
fisub
dec
in
dec
aad
mov
xor
jmp
jno
scas
jmp
clc
lods
dec
cmps
jl
loop
mov
mov
aaa
into
pop
imul
add
ss
sti
pop
cmps
mov
mov
mov
push
ins
mov
(bad)
xor
sahf
imul
int
dec
push
push
cs
or
xor
inc
mov
cmc
(bad)
inc
pushw
jae
icebp
dec
std
repnz
ret
clc
xlat
inc
and
inc
pop
jg
push
cmp
ret
cld
jno
stos
lock
pushf
outs
mov
cmp
mov
and
add
push
les
add
test
int
inc
pop
push
jb
cmps
xor
cdq
mov
cmp
mov
sub
pop
xor
cmp
mov
fadd
(bad)
inc
or
dec
push
sub
ss
ins
xor
movs
and
mov
inc
inc
add
aam
inc
push
add
or
and
adc
pop
mov
mov
dec
xchg
and
sub
lds
lds
sbb
sub
test
sbb
dec
mov
or
sub
movs
pop
enter
inc
xchg
adc
dec
mov
dec
mov
leave
mov
adc
add
push
and
inc
mov
ins
dec
mov
mov
xchg
sub
mov
ret
xchg
jmp
dec
add
dec
call
sbb
pop
xor
pop
pop
xchg
dec
and
arpl
mov
push
and
push
adc
xor
mov
push
xor
arpl
arpl
sahf
nop
mov
mov
pop
push
pop
xor
and
test
aad
mov
jg
in
sub
(bad)
loope
or
inc
sti
mov
aaa
cmp
and
(bad)
es
pop
cwde
adc
es
pop
call
push
cmp
dec
rol
sub
add
jg
lahf
repnz
aas
sti
xor
xchg
outs
mov
je
adc
dec
(bad)
mov
cli
repz
ficom
mov
loope
aad
test
ds
xchg
push
cwde
xchg
or
or
or
pusha
sub
shld
cwde
jmp
jno
cdq
retf
sub
xchg
out
cmp
aaa
add
lds
and
retf
dec
mov
rcr
pusha
dec
call
pop
inc
xor
ss
push
nop
(bad)
sbb
cmp
jmp
ret
add
adc
inc
movs
stos
or
sti
dec
and
sub
xor
dec
mov
add
stos
sub
add
add
cmps
and
ror
mov
inc
and
xor
push
xor
inc
adc
dec
push
add
adc
lods
mov
or
pop
or
pop
xchg
push
xchg
push
pop
or
clc
test
daa
or
ins
mov
adc
or
fisttp
mov
cwde
mov
mov
or
mov
pop
xchg
sbb
pop
mov
mov
adc
add
call
add
mov
add
mov
shl
or
int3
aad
fiadd
adc
mov
xchg
adc
pop
dec
inc
aam
dec
dec
or
pop
adc
and
lods
shl
add
imul
push
imul
lods
dec
and
push
add
inc
adc
xor
inc
mov
cmc
(bad)
inc
pushw
outs
lods
icebp
dec
std
out
xchg
ret
clc
xlat
inc
and
inc
pop
jg
push
cmp
ret
cld
jno
test
out
pop
fsub
and
push
in
mov
sub
mov
pop
pop
fwait
rcl
mov
and
test
fwait
retf
xor
xor
in
xor
pop
mov
clc
add
or
jns
xchg
fldcw
dec
xor
dec
fadd
out
pop
hlt
dec
sub
jecxz
test
pop
sbb
je
ret
and
fisubr
shl
movs
add
or
push
add
aad
mov
and
sbb
add
mov
test
and
add
bound
and
inc
xchg
sub
cmp
add
inc
jns
mov
das
add
or
push
adc
push
add
push
dec
push
movs
xor
sub
xchg
test
fist
dec
push
add
sub
push
aas
ins
add
fld
aas
ins
bound
mov
fiadd
ins
dec
mov
sub
mov
push
movs
xor
or
mov
mov
inc
mov
xchg
pop
shl
push
and
add
movs
xor
test
cmp
pop
ins
mov
or
adc
fisub
pop
mov
es
xchg
(bad)
pusha
pop
adc
add
and
call
inc
jnp
and
(bad)
adc
sbb
add
cwde
or
sbb
aas
cli
in
add
clc
movs
jle
dec
loope
xchg
cld
imul
xchg
and
add
ja
(bad)
cmp
into
ja
in
adc
loope
xchg
inc
mov
dec
shr
xor
sar
sbb
cli
push
into
mov
clc
inc
sub
pop
mov
loopne
pop
out
icebp
pop
pop
in
pop
jns
sub
cmp
inc
or
shl
in
out
sbb
xchg
jl
fsub
out
in
fsubp
fadd
repnz
ret
push
data16
rcr
jno
pop
and
xchg
sub
stc
bound
mov
cmps
push
scas
ret
mov
push
mov
push
add
int3
jne
pusha
sub
xchg
test
aam
add
stos
and
inc
dec
dec
mov
dec
inc
lds
xchg
push
cwde
or
inc
mov
test
stc
adc
cmp
pushf
jbe
dec
add
sub
sub
inc
sub
mov
adc
add
or
add
mov
push
lods
dec
jb
dec
mov
xchg
test
pop
or
xor
and
mov
dec
mov
leave
jno
add
test
dec
mov
fs
inc
dec
mov
leave
jno
push
cld
push
xor
imul
fiadd
fisttp
mov
inc
jbe
mov
jbe
adc
xchg
add
ins
add
lds
fsub
and
stos
and
and
push
or
adc
or
mov
or
or
or
rcl
pand
fwait
imul
lods
xchg
nop
push
and
add
cwde
sbb
dec
inc
xchg
add
sbb
push
mov
out
push
lds
xchg
sub
cmp
repz
test
in
inc
push
lds
xor
and
sub
push
nop
(bad)
ror
pop
inc
enter
mov
int
mov
clc
push
in
sbb
add
dec
(bad)
mov
push
pop
cwde
jg
es
push
jg
jge
sti
add
xor
(bad)
sbb
hlt
mov
add
retf
fidivr
inc
shr
aaa
ja
icebp
cs
and
popa
imul
jns
or
and
int3
stos
div
mov
cmp
mov
int3
dec
cmp
cmp
mov
mov
pusha
jns
int
scas
mov
(bad)
ins
inc
xchg
mov
sbb
and
cdq
mov
pop
popf
gs
mov
xchg
or
lods
shr
lods
xor
and
pusha
adc
data16
jae
inc
jne
sub
sub
push
jae
dec
cdq
stos
xor
int3
fs
es
add
push
(bad)
sar
lds
inc
mov
add
dec
mov
lds
bound
pusha
mov
sub
mov
mov
nop
adc
and
call
push
add
push
pop
or
jl
xchg
dec
add
mov
mov
ins
mov
and
push
dec
mov
xchg
ins
dec
inc
mov
add
sub
adc
jbe
sub
or
inc
pop
mov
sbb
and
adc
lds
sub
cwde
test
bound
not
mov
sub
dec
mov
pextrw
dec
mov
inc
fwait
imul
gs
xchg
and
test
lds
iret
sub
hlt
xor
rcr
push
cmp
cmp
pop
push
sub
add
inc
leave
test
movs
mov
or
es
outs
xor
sub
adc
lea
fprem1
(bad)
cmp
repz
call
xor
jb
push
mov
add
add
ins
add
adc
adc
psubw
fidivr
das
std
cdq
stos
stc
shl
pop
(bad)
and
aad
add
dec
mov
add
sti
push
cmp
ret
cld
jno
stos
lock
movs
fstp
xchg
data16
push
push
dec
cli
imul
cmp
sar
jl
cdq
(bad)
jnp
sub
and
mov
jge
mov
fwait
push
sbb
scas
dec
loop
daa
ja
movs
push
mov
mov
mov
jns
int
pushf
out
lock
out
sub
nop
int
push
mov
cs
inc
push
movs
mov
mov
xor
sub
and
leave
jmp
inc
data16
dec
or
pop
sbb
mov
inc
pop
adc
jbe
cmp
mov
push
adc
in
push
and
adc
dec
mov
fist
dec
mov
mov
nop
mov
push
sub
test
mov
shl
enter
add
and
adc
adc
sbb
add
or
rcr
test
dec
push
mov
xchg
loop
leave
not
sbb
adc
dec
mov
fld
nop
sub
mov
and
dec
pand
dec
mov
std
mov
jle
nop
and
dec
inc
in
mov
cwde
movs
add
jbe
or
ror
not
xchg
or
retf
test
and
push
and
push
pop
mov
and
aad
dec
mov
adc
test
push
pop
pop
int3
push
rcpps
in
in
shl
cvtps2pd
mov
jae
ror
lds
push
sti
out
cld
add
scas
inc
mov
outs
xchg
and
jge
jl
scas
dec
ret
jp
pop
cmp
pushf
jbe
add
mov
in
push
sbb
mov
pop
mov
cld
push
add
push
add
lods
rcr
xchg
adc
push
lds
and
push
mov
adc
outs
cmps
xor
scas
adc
push
cmp
rcr
mov
add
leave
sbb
clc
inc
inc
lahf
cmc
retf
inc
pushw
je
icebp
dec
inc
mov
mov
in
dec
jmp
psllw
jne
push
jg
ins
(bad)
fstp
xor
xchg
jle
lods
inc
dec
loope
push
ds
outs
xor
scas
xchg
inc
mov
sub
mov
call
cwde
repnz
pop
es
sub
mov
mov
mov
pop
xchg
into
jae
or
test
inc
test
in
add
jmp
sbb
gs
sbb
mov
inc
int
and
xchg
mov
call
aam
mov
shr
sbb
inc
or
jmp
jne
and
adc
add
pop
and
mov
and
add
dec
inc
xor
mov
dec
les
test
inc
mov
and
rcr
cmp
mov
ds
add
or
push
mov
pop
fist
pop
push
sub
sub
sbb
pop
xchg
xchg
add
inc
dec
mov
fs
adc
fwait
sub
ss
repnz
bnd
push
retf
fld
jbe
xchg
and
enter
inc
jge
mov
fild
not
and
sub
dec
xchg
or
sar
and
dec
inc
not
xchg
cmp
push
lds
sbb
pusha
popa
iret
jl
pushf
jl
jne
call
faddp
int3
sahf
and
les
and
je
fucomip
xlat
cld
imul
dec
xchg
scas
outs
das
cs
retf
or
jg
inc
push
cmp
mov
mov
sub
sub
or
mov
ins
sti
jae
mov
jnp
loope
mov
inc
imul
mov
inc
icebp
dec
inc
icebp
dec
pop
bound
not
add
or
(bad)
aas
gs
test
dec
inc
lds
adc
loop
pop
pop
cld
or
jo
sbb
inc
and
push
bound
mov
sub
jno
nop
lds
add
das
stc
add
jg
das
std
cdq
stos
stc
fidiv
aas
or
lahf
mov
lahf
or
(bad)
(bad)
add
jmp
fisttp
les
hlt
aam
dec
jg
pop
(bad)
jae
pop
pop
adc
fistp
imul
pop
dec
mov
lds
out
xor
popf
mov
xchg
mov
(bad)
movs
ins
push
xor
sub
cmp
in
sub
inc
and
iret
push
imul
or
and
and
pop
push
dec
neg
mov
sti
push
add
ins
shr
(bad)
retf
add
sub
xchg
or
inc
fs
push
push
imul
jno
xor
inc
push
mov
inc
sbb
bound
fisub
not
xchg
cmp
movs
push
xor
leave
aad
adc
lds
aam
sbb
dec
add
pop
into
pop
adc
mov
dec
retf
add
sub
movs
mov
inc
lods
inc
push
add
adc
retf
mov
mov
or
jo
xchg
movs
mov
sub
pusha
pop
fst
retf
sbb
and
dec
mov
adc
je
dec
and
adc
mov
cmp
nop
adc
mov
test
call
mov
std
mov
adc
data16
ins
add
mov
test
inc
(bad)
or
std
mov
aas
ins
xor
mov
adc
popf
adc
cmp
ins
shl
stc
cli
xlat
xchg
int3
ja
clc
out
icebp
ins
int
arpl
cmps
jmp
arpl
dec
xor
bound
movs
int3
not
mov
or
jno
lods
dec
push
sub
adc
xchg
ss
fisubr
pop
jg
cmc
xor
xor
mov
lds
(bad)
fcomp
dec
xchg
sti
add
and
push
jle
inc
sbb
mov
call
pop
iret
lahf
out
(bad)
jmp
imul
mov
jp
pmulhw
inc
sub
push
(bad)
xor
push
std
aam
call
cld
inc
arpl
int
rcl
repnz
mov
call
mov
add
or
lahf
std
or
sub
mov
rcr
push
mov
inc
or
push
add
mov
dec
scas
std
jb
add
call
cli
pop
mov
loop
cld
mov
xchg
std
jnp
add
jmp
cwde
xlat
clc
and
xor
movntq
and
mov
cmp
into
dec
repz
mov
(bad)
and
inc
pop
xor
push
arpl
dec
cs
pop
mov
es
test
jns
inc
retf
lods
dec
sub
xor
pop
pop
or
jae
push
push
jbe
enter
call
xchg
adc
hlt
lods
int
lahf
mov
or
cmps
mov
push
jb
pop
xchg
pop
xchg
popa
mov
mov
cmp
scas
mov
inc
xchg
push
xor
sub
push
add
dec
mov
sub
nop
dec
add
lea
mov
pop
xor
dec
mov
inc
mov
aad
fdiv
test
push
dec
pusha
or
nop
mov
push
add
or
test
jmp
dec
add
movs
xor
fmulp
xchg
adc
lea
fs
(bad)
jno
or
mov
rcr
xchg
and
test
mov
dec
sbb
or
inc
sub
xchg
inc
je
sub
test
mov
push
and
inc
dec
xchg
ret
add
ss
fild
sub
jb
or
or
lea
ins
push
or
and
and
sub
add
arpl
mov
or
leave
loopne
xor
pop
retf
dec
out
mov
retf
jb
in
jl
scas
clc
sar
mov
imul
ja
add
xlat
sahf
jbe
xor
repnz
xchg
mov
lea
nop
inc
push
dec
or
out
test
xchg
pop
fdivr
es
push
je
push
xchg
repnz
push
cmc
mov
inc
push
add
add
in
in
test
xchg
ins
add
add
mov
(bad)
jnp
cli
es
in
hlt
cld
jmp
out
xor
outs
or
sub
mov
xchg
out
repnz
and
enter
jg
mov
aam
and
leave
xchg
add
cmp
repz
mov
mov
lds
sbb
out
outs
in
ins
adc
(bad)
(bad)
jmp
and
mov
xchg
inc
xchg
xor
inc
ficomp
dec
mov
loopne
mov
mov
jg
(bad)
cmps
sub
into
push
jbe
adc
add
adc
mov
sub
sbb
hlt
dec
xor
ins
pop
and
add
inc
(bad)
pop
ins
movs
and
iret
or
add
sub
(bad)
mov
iret
mov
es
add
inc
sbb
sub
ret
sbb
std
popf
sub
fisttp
aas
sbb
call
and
xor
cmps
mov
push
or
cmp
scas
pop
cdq
adc
and
or
xchg
cmps
inc
push
loope
repnz
aas
in
xchg
outs
mov
int3
arpl
mov
es
adc
or
inc
xor
or
xchg
js
in
and
mov
mov
lods
dec
xor
in
inc
push
and
push
inc
mov
fidiv
cli
push
mov
lods
cs
push
sbb
jnp
push
mov
lods
add
fidiv
jnp
stos
bound
dec
enter
fwait
shl
imul
dec
push
sub
jno
dec
xchg
ror
xchg
ss
test
add
mov
mov
mov
sbb
call
dec
movs
enter
xor
pop
inc
lds
adc
mov
sub
movs
xor
pop
add
or
clc
lods
retf
sub
rcr
dec
dec
mov
inc
aas
and
mov
dec
test
add
mov
inc
inc
sbb
inc
mov
dec
sub
and
repnz
push
gs
sbb
cmps
inc
ds
in
mov
cmp
xchg
or
or
inc
push
and
mov
xchg
push
ins
push
lds
fwait
imul
or
and
fisttp
(bad)
pusha
aas
ins
push
mov
or
cmc
cmp
pop
(bad)
in
ss
pusha
pop
fiadd
out
and
inc
(bad)
mov
fdivr
xchg
jle
sahf
repnz
dec
leave
dec
jae
lods
push
inc
xchg
inc
or
push
mov
and
xchg
adc
add
cmp
mov
inc
fistp
mov
daa
pushf
cld
out
jbe
mov
iret
movs
mov
sbb
lds
sbb
inc
inc
xchg
cmp
cli
mov
inc
jge
cld
test
inc
push
sub
jp
mov
dec
out
idiv
or
into
jmp
cmp
mov
mov
pop
aam
add
neg
mov
test
jne
sbb
fidiv
ins
out
movs
push
arpl
(bad)
push
jmp
cmp
xchg
rol
sbb
bound
dec
out
sbb
inc
mov
movlhps
lods
popa
call
sar
push
add
lds
sbb
call
xchg
xchg
sub
mov
jnp
cmps
xchg
or
jnp
out
cdq
imul
daa
lods
inc
es
lds
ftst
dec
icebp
push
sysexit
test
lds
or
xor
add
loope
stc
add
aas
std
cdq
stos
lock
lock
add
scas
test
sti
cmp
jle
jle
inc
xor
cmps
pop
outs
imul
stos
cmp
pop
fwait
sbb
sub
adc
add
sub
imul
in
mov
scas
xchg
xchg
cmp
mov
push
or
mov
mov
push
jne
sub
or
dec
jle
push
jb
push
cmp
inc
addr16
unpckhps
cdq
sbb
mov
pop
and
ins
sub
arpl
movs
mov
jmp
mov
mov
test
cwde
pop
sbb
scas
dec
out
push
jle
mov
sar
icebp
pop
xchg
jae
or
pop
inc
cmp
lods
xchg
shl
xor
stos
xor
mov
cmp
adc
dec
cdq
xor
mov
shl
rol
inc
xor
arpl
mov
mov
dec
and
cmp
je
pop
and
in
lods
dec
int3
sbb
xchg
mov
retf
mov
cwde
jmp
sub
push
add
push
daa
or
and
add
sbb
lods
sbb
sub
xor
sbb
adc
and
(bad)
bnd
mov
(bad)
dec
cs
inc
loop
inc
pop
or
fisub
xchg
add
cdq
cdq
cmp
daa
or
fs
inc
daa
or
mov
xchg
ss
push
adc
push
push
fimul
sbb
xchg
fisub
fiadd
ins
and
stos
add
enter
add
push
jle
pusha
aas
and
mov
aam
mov
jb
ins
(bad)
xor
jae
fdivr
out
(bad)
aas
loope
cmp
in
pop
stc
add
adc
scas
outs
pop
cli
mov
fcom
outs
out
int3
into
xchg
stos
add
dec
or
xor
push
fs
lods
sub
bound
out
push
js
addr16
mov
les
loope
sbb
in
adc
push
sub
idiv
mov
push
out
push
cmps
cmp
dec
jne
sbb
mov
rcl
jbe
sahf
das
lods
js
ret
outs
ss
int3
(bad)
pop
stos
retf
mov
clc
loop
out
sbb
daa
jmp
fmul
sbb
out
jb
mov
cmp
pop
add
test
dec
sbb
xchg
pop
push
daa
std
mov
jle
fs
jo
mov
das
into
nop
sub
mov
mov
retf
jb
mov
or
(bad)
scas
ins
stos
xor
inc
outs
fcmove
mov
push
pushf
shr
es
icebp
pop
mov
push
mov
scas
pop
in
addr16
cmp
pop
add
pop
leave
jecxz
in
lods
add
fiadd
mov
dec
mov
pop
push
and
scas
or
enter
mov
mov
imul
add
xchg
mov
cmps
std
jnp
in
jmp
cdq
push
clc
pop
clc
jns
xlat
cmc
and
jmp
jns
and
pop
push
lods
dec
das
lods
(bad)
mov
jmp
push
call
jae
mov
pop
xor
mov
call
mov
jp
xchg
sbb
cmps
inc
(bad)
dec
pop
int3
imul
push
jb
lds
jo
push
pop
xchg
jmp
xor
mov
cmp
sub
movs
pop
jae
jge
stos
adc
daa
ss
and
rcl
(bad)
addr16
mov
mov
int3
jecxz
je
xlat
push
cdq
out
push
and
arpl
inc
dec
push
sub
out
enter
cmp
dec
jmp
in
out
gs
mov
push
push
mov
sbb
lods
dec
dec
cs
mov
lods
mov
sbb
dec
or
cmp
xor
in
lods
dec
or
dec
leave
lock
inc
dec
retf
dec
mov
test
es
dec
dec
loop
dec
jecxz
mov
arpl
cwde
xchg
mov
sbb
dec
mov
sub
mov
xor
dec
and
or
adc
inc
xor
in
test
pusha
mov
adc
(bad)
add
push
mov
retf
xchg
mov
ins
add
fiadd
ins
xor
fisttp
rol
imul
fiadd
movs
add
inc
mov
sub
pop
inc
cli
int
addr16
push
aam
xor
cmp
fs
(bad)
add
fldz
pop
or
jb
fwait
mov
sti
aad
test
sub
pop
test
inc
pop
mov
inc
jns
cmp
stc
push
add
fld
jae
jb
imul
push
adc
cdq
xchg
call
rcr
pop
rcr
add
cs
mov
xchg
pop
lea
or
jae
(bad)
mov
jae
pop
and
cmp
inc
(bad)
div
scas
retf
adc
jbe
dec
cld
outs
ja
cli
call
add
jecxz
jp
mov
xor
nop
int3
inc
pop
sbb
mov
rcr
fiadd
inc
cmp
xor
pusha
pop
out
cmp
fsub
sub
push
xor
and
mov
sub
fcom
xor
bound
sub
in
push
sbb
pop
inc
pop
inc
test
dec
std
(bad)
xchg
ret
loop
iret
xchg
inc
dec
inc
sti
cmp
jle
pop
mov
imul
xchg
rcl
aam
fcomp
sub
xor
test
inc
hlt
test
xchg
rcl
adc
dec
ret
cwde
mov
jae
cmp
pop
popa
call
nop
sar
stos
jno
lds
aaa
push
cmp
stos
arpl
push
push
xchg
pop
cmp
out
rol
in
push
cmp
jmp
popa
in
outs
pop
push
(bad)
lods
push
retf
push
add
xor
cdq
xchg
inc
pop
sbb
jae
fcmovnbe
mov
sahf
aad
dec
(bad)
outs
inc
(bad)
lea
jp
gs
retf
retf
push
jno
scas
mov
rcr
mov
pop
pop
ins
arpl
push
mov
lods
in
cmp
repnz
je
loop
mov
out
mov
push
out
xor
xchg
sbb
sub
cmps
xchg
scas
ret
add
cmps
and
xchg
adc
pop
or
int3
inc
aad
movs
xchg
call
adc
inc
sbb
xor
push
or
cdq
xchg
mov
mov
arpl
jne
inc
xor
inc
dec
in
xor
pop
and
repnz
mov
nop
pop
add
daa
or
(bad)
adc
or
lods
inc
add
shl
inc
and
bound
sbb
mov
pop
ins
add
ins
add
mov
or
and
imul
sub
jno
inc
outs
retf
hlt
adc
jns
mov
inc
outs
adc
(bad)
cmc
imul
xchg
jmp
xlat
xlat
sub
sub
adc
push
add
rol
jmp
int3
aam
repz
iret
das
mov
aad
inc
mov
fsubr
sub
push
std
mov
mov
inc
push
jle
aas
mov
jmp
js
test
lods
jno
mov
pop
cmps
xchg
pop
inc
mov
or
xchg
scas
push
pop
fdiv
inc
fistp
mov
mov
pop
add
(bad)
in
xchg
lds
and
imul
and
mov
stos
rep
cmc
sub
xor
adc
adc
sbb
out
in
(bad)
mov
jbe
push
(bad)
fiadd
ins
and
mov
sbb
sub
sub
push
add
lds
adc
sub
mul
inc
in
ins
inc
pop
inc
test
dec
std
into
xchg
ret
loop
cld
mov
add
sar
lods
lock
pop
and
rcr
pop
adc
push
cmp
imul
xchg
sbb
aas
idiv
push
aad
rcr
mov
mov
add
dec
imul
ret
outs
pop
cmps
inc
shl
push
lods
or
lea
int3
ds
int3
int3
imul
out
sbb
mov
mov
pop
cmps
mov
movs
lea
jae
(bad)
jmp
xor
xchg
dec
add
mov
out
and
mov
in
jl
scas
retf
cdq
sbb
mov
pop
dec
sbb
adc
call
push
mov
ret
rcl
cmp
test
addr16
rcl
ins
inc
lock
aaa
xor
mov
bound
popa
outs
arpl
imul
test
mov
fcomp
scas
aam
cmp
jmp
cdq
imul
int3
into
mov
data16
or
sbb
movs
je
adc
ins
pop
inc
test
push
push
push
mov
out
xchg
or
int3
mov
in
hlt
mov
push
or
fmul
lods
jae
push
sub
jg
dec
mov
inc
push
and
mov
jmp
pop
mov
fs
sub
cwde
mov
loop
mov
sub
daa
lds
ret
dec
and
adc
les
push
and
inc
inc
in
cmps
xor
and
push
fsub
sub
push
aas
xor
mov
js
data16
test
icebp
neg
rcl
sub
xchg
push
stc
out
popf
jp
sti
xchg
leave
repnz
loope
scas
mov
jecxz
mov
fmul
pop
sub
push
mov
sub
xor
sub
and
push
sar
jae
(bad)
bound
std
jp
in
leave
push
lea
lods
mov
cmp
scas
pop
mov
jne
mov
ins
push
hlt
adc
sti
(bad)
xlat
mov
arpl
mov
std
xor
xor
jo
fdiv
mov
dec
imul
out
fldl2e
or
mov
inc
adc
mov
inc
xchg
or
mov
retf
out
pop
popa
jp
(bad)
xchg
pop
test
xchg
xor
cmp
xchg
sbb
jmp
xchg
jp
push
add
mov
and
movs
add
adc
adc
mov
sbb
jo
xchg
(bad)
mov
cmp
add
jmp
cli
out
dec
jle
push
loop
in
hlt
mov
jg
pop
aam
jmp
dec
mov
inc
jecxz
test
lahf
xchg
jno
jg
(bad)
xchg
aas
sahf
mov
(bad)
(bad)
popf
movs
js
fwait
sbb
rcr
(bad)
gs
in
test
scas
in
ror
imul
add
pusha
int
jg
dec
scas
and
mov
adc
push
in
add
mov
push
dec
loope
add
xor
mov
inc
push
enter
cs
sub
add
cmp
cmp
int
mov
cwde
jmp
fsubp
push
sub
push
mov
sub
mov
les
aam
lods
ja
pushf
ja
or
push
dec
jnp
xor
and
mov
cmp
jp
mov
daa
mov
cmp
dec
dec
sub
push
call
arpl
push
pop
loop
mov
sbb
out
dec
cmp
imul
lods
test
mov
sbb
movs
dec
ins
and
int3
outs
lds
push
xor
lods
push
and
cmp
add
push
es
adc
pop
or
inc
test
enter
add
push
(bad)
fcmove
aam
ins
dec
mov
ins
movs
xor
push
cmp
mov
inc
(bad)
adc
fs
sub
popa
push
or
dec
or
lods
sub
outs
sub
adc
and
add
nop
adc
mov
cmp
cs
xchg
test
and
dec
push
push
inc
(bad)
lods
dec
or
out
stos
pop
jl
jne
jl
jecxz
adc
xchg
js
aas
xchg
js
test
and
sbb
mov
jl
call
lods
xor
stos
mov
mov
(bad)
sti
aas
pop
aad
xor
stos
mov
hlt
fnsave
sbb
(bad)
inc
clc
call
and
stc
mov
jle
pop
xor
mov
mov
dec
into
jg
retf
dec
jmp
fcmovnbe
test
test
lds
xchg
and
pop
sahf
add
adc
movs
lea
loopne
in
sbb
bound
mov
sbb
into
in
jnp
aas
xor
xor
jae
mov
fist
inc
pop
xor
sbb
xchg
cli
adc
and
xchg
test
out
test
xchg
cld
ss
jle
mov
mov
lods
cmps
push
xchg
jg
cmc
push
mov
cld
(bad)
cmp
jae
mov
or
call
sub
cmp
inc
cwde
jp
sub
push
add
test
test
add
cmps
mov
out
fs
adc
sub
xor
loop
adc
xor
je
inc
sub
pop
sub
pop
push
add
div
pop
repz
pushf
pop
out
pusha
bound
lock
sub
xor
lahf
mov
clc
push
enter
add
mov
hlt
cmp
pop
(bad)
int
dec
lahf
iret
xchg
shl
cmp
js
call
out
xor
mov
cmp
sub
leave
sbb
pusha
inc
mov
sub
pushf
int
push
inc
adc
mov
scas
and
or
jmp
xchg
mov
and
in
or
stos
scas
(bad)
popf
jo
aas
jno
in
es
cmps
stc
pushf
sahf
xchg
in
inc
mov
sbb
movs
js
out
jb
push
aad
mov
inc
jl
jp
dec
into
and
test
inc
jle
stos
mov
mov
push
sbb
xor
xlat
dec
pop
test
cmp
jmp
in
iret
(bad)
mov
ds
pop
or
hlt
or
loope
mov
mov
inc
test
jmp
mov
push
sbb
adc
daa
cmp
(bad)
loop
leave
and
fmul
mov
cdq
xchg
test
push
data16
data16
add
mov
rcr
inc
mov
and
cs
push
gs
adc
mov
jo
push
in
push
fwait
adc
inc
inc
sub
mov
leave
ss
jle
sub
inc
pop
ins
xor
xor
aam
fisub
add
cmps
and
inc
xchg
stos
sbb
cwde
(bad)
in
mov
ins
xchg
add
mov
adc
and
dec
xchg
mov
dec
or
xor
shl
cmp
mov
scas
sbb
in
jo
sub
mov
add
ds
dec
sub
pop
mov
inc
push
mov
icebp
pop
sbb
sub
add
push
mov
cmp
not
jl
lock
mov
int3
pcmpgtb
xor
retf
cmp
dec
icebp
xor
cmp
out
outs
and
in
sub
xor
rcr
mov
ss
test
dec
inc
xchg
mov
repz
psubq
cli
rcl
jmp
or
mov
dec
out
jp
mov
shr
mov
fidiv
out
loop
xor
push
imul
scas
cmc
xor
push
icebp
xor
cmp
retf
push
stc
jp
or
in
jp
xor
clc
jl
test
pop
sahf
xchg
repnz
fiadd
mov
sbb
call
out
lock
mov
das
pop
xchg
out
fimul
mov
fwait
mov
loop
arpl
(bad)
repz
cwde
ficomp
rcr
xchg
add
cmp
cmps
mov
loop
mov
inc
scas
dec
pushf
cmp
jb
mov
(bad)
jg
jl
in
je
sbb
mov
(bad)
pushf
iret
push
cmp
mov
sti
arpl
add
lds
mov
sbb
inc
mov
bnd
int
(bad)
je
jns
cld
sbb
lahf
in
popa
icebp
xchg
add
xlat
cwde
(bad)
xchg
jmp
jmp
xlat
cmp
je
pop
inc
inc
jne
mov
mov
inc
enter
(bad)
jmp
mov
mov
jb
dec
int3
jb
(bad)
cmp
xchg
or
inc
and
jg
out
dec
jle
push
loop
in
xor
adc
ds
xchg
jle
add
mov
hlt
cmp
fiadd
shl
loope
xchg
icebp
hlt
scas
and
mov
dec
push
mov
inc
jns
jno
addr16
int3
imul
jnp
pusha
outs
shr
push
pushf
fldl2e
sub
mov
leave
ins
(bad)
fimul
push
in
jge
pop
repnz
xor
adc
sub
lods
mov
mov
mov
jb
pop
push
out
arpl
mov
mov
jge
shl
clc
fxch
sti
cmp
and
adc
jg
mov
xor
add
int3
jbe
mov
and
mov
imul
ins
movs
pusha
loop
fwait
push
scas
mov
(bad)
fsubr
pop
jmp
pop
out
adc
push
ja
mov
cdq
scas
mov
cmps
scas
jecxz
jecxz
outs
imul
out
(bad)
out
jp
int3
(bad)
das
mov
cmp
mov
xchg
pop
cdq
xchg
loop
sbb
cmp
data16
sbb
cmp
push
mov
sub
ficom
inc
jae
sub
mov
push
xor
inc
push
dec
cmps
xchg
aam
imul
inc
push
dec
jge
mov
jno
mov
sub
or
pop
add
dec
mov
push
sub
dec
mov
mov
xchg
xchg
push
mov
adc
sbb
dec
add
rcr
fwait
push
ins
add
imul
add
add
mov
or
xchg
inc
pop
adc
pop
movs
and
pop
(bad)
jecxz
xchg
aas
and
and
cmps
sti
(bad)
pop
cmp
jp
inc
in
in
hlt
mov
xor
leave
jbe
xchg
fdivr
push
retw
dec
cmps
jmp
xlat
in
jns
fstp
mov
hlt
es
loope
mov
mov
in
in
xchg
lds
mov
retf
gs
cmc
arpl
sub
dec
repnz
mov
imul
xor
sbb
aam
sub
dec
jmp
cmc
push
cmp
out
adc
jbe
loope
pop
jno
(bad)
cli
sub
into
in
in
and
lods
mov
(bad)
cld
(bad)
(bad)
sti
out
xor
imul
sub
or
xchg
test
xor
inc
add
fstp
xor
(bad)
gs
ja
sbb
sub
ds
test
sti
mov
sub
cdq
inc
push
aad
fdiv
packsswb
mov
push
daa
jge
test
(bad)
jbe
ins
mov
mov
xlat
cmp
jp
push
sbb
and
mov
loopne
cmc
pop
dec
enter
pop
mov
nop
mov
mov
les
cmp
mov
imul
and
jg
inc
mov
mov
mov
sub
xchg
(bad)
(bad)
jns
cld
or
test
inc
sbb
fcomp
pop
into
mov
into
and
and
jb
stos
cs
repz
outs
jp
js
dec
call
retf
and
sbb
(bad)
xor
push
(bad)
int
or
test
and
lds
data16
and
call
xchg
lea
ret
mov
cmp
sbb
je
fdivr
pop
pop
js
xchg
sub
(bad)
(bad)
shl
cmp
out
inc
retf
mov
rol
cmp
lods
je
push
mov
mov
cli
rol
inc
repnz
add
push
ds
dec
loope
cmp
jno
push
idiv
mov
pop
xchg
jle
popa
pop
loope
out
mov
repz
aam
aad
call
xchg
shr
rcr
mov
mov
mov
cmp
xor
push
lahf
and
mov
sahf
jmp
enter
pusha
faddp
pop
cmp
pop
test
and
lods
(bad)
lahf
sub
jno
dec
movs
jl
mov
mov
test
hlt
fwait
pop
xor
data16
enter
sar
inc
xchg
sahf
pop
xchg
lds
push
jg
outs
stc
inc
adc
scas
cmp
stos
popa
dec
cmc
call
ds
in
push
push
jnp
iret
enter
and
pop
pop
sbb
push
cmps
sbb
fldenv
out
push
int3
pop
sub
les
loope
jmp
inc
jl
lea
pop
leave
pop
retf
aas
sahf
arpl
xchg
leave
iret
sub
mov
inc
in
jmp
rcr
arpl
pop
xchg
je
xor
dec
aad
shr
push
lds
lds
sbb
dec
pop
or
sahf
mov
cmps
mov
adc
xchg
ret
xor
mov
xor
pop
data16
nop
leave
icebp
push
xor
dec
mov
xchg
or
loop
mov
sub
lds
fsubr
adc
mov
push
add
test
cld
push
xor
lea
cdq
mov
mov
inc
or
xor
mov
add
fiadd
jbe
inc
sbb
xchg
and
add
sub
nop
aad
xor
inc
jmp
lahf
es
jle
cld
inc
icebp
add
and
(bad)
rcl
adc
cmp
fidivr
jmp
call
test
ja
mov
mov
adc
ins
mov
mov
stc
inc
out
mov
ficom
ins
ins
les
jge
(bad)
out
popa
jmp
scas
inc
cmp
(bad)
push
xor
shl
in
(bad)
es
xchg
outs
cdq
mov
cmove
hlt
imul
icebp
(bad)
out
out
test
ja
aaa
push
pop
das
not
jp
mov
mov
outs
pop
jg
dec
jp
cdq
sahf
imul
jg
(bad)
in
in
inc
in
out
mov
dec
imul
and
aam
inc
aam
fstp
fild
(bad)
data16
inc
scas
(bad)
cmp
mov
clc
xchg
pop
repnz
cld
dec
jb
mov
pop
sahf
sbb
sbb
sbb
cdq
lods
mov
cmp
mov
(bad)
mov
out
adc
dec
push
js
fcmovnb
jne
int3
jecxz
fsub
aas
mov
push
xchg
mov
mov
mov
out
sub
or
data16
or
mov
and
mov
or
out
adc
jge
outs
lock
fs
cmp
jecxz
call
add
jbe
je
push
xor
arpl
imul
rcl
cmps
and
bound
push
inc
push
dec
inc
mov
adc
adc
and
mov
aas
in
outs
(bad)
out
xor
lahf
mov
clc
push
int
loopne
inc
mov
add
jmp
icebp
and
test
scas
call
pop
call
mov
test
dec
stos
add
mov
mov
push
mov
jl
ds
sbb
mov
and
add
push
jecxz
cmc
shr
sahf
jno
jle
in
addr16
cmps
lods
sbb
ficom
jp
pop
jp
(bad)
sar
cdq
into
into
mov
mov
cmp
ins
test
mov
cld
out
repnz
mov
call
mov
jbe
mov
sub
sub
mov
loop
out
sahf
mov
push
dec
xor
cmp
xor
scas
sbb
repz
ss
cmp
scas
ret
add
xchg
mov
xchg
add
call
mov
push
lods
call
adc
mov
lds
push
cmp
xchg
pop
push
mov
test
test
cli
mov
(bad)
pop
add
dec
add
sub
sub
or
leave
jno
int3
jle
or
xchg
fs
movs
and
aas
adc
sub
sub
in
push
mov
in
push
add
or
cmp
bound
test
adc
cmp
sbb
sbb
jno
gs
loopne
dec
popa
push
push
repz
mov
and
or
adc
adc
popa
pop
imul
xor
das
adc
movs
js
repnz
popa
in
std
mul
(bad)
stc
pop
cmc
iret
jno
std
ins
push
lahf
cmps
cmps
out
push
je
(bad)
pop
xor
and
mov
stos
retf
jecxz
fucom
or
pop
std
arpl
add
cmc
out
scas
and
je
jge
jecxz
fsubr
pop
jg
jmp
adc
cdq
lock
cmc
lahf
int3
mov
cld
dec
imul
lock
xchg
cdq
pusha
daa
xchg
jg
ja
jg
scas
cmp
dec
mov
fild
push
mov
aam
xor
(bad)
cmp
out
dec
gs
mov
xchg
popf
xor
(bad)
in
in
mov
cmp
push
jmp
push
mov
sbb
out
pop
xchg
cli
out
imul
out
rcr
out
jge
push
and
scas
cld
arpl
and
aas
xchg
jg
mov
mov
jge
jno
xchg
aam
pop
adc
fs
sub
adc
xor
int
and
cwde
sbb
and
push
pop
sar
or
sbb
fdiv
ds
hlt
out
inc
lock
arpl
out
xchg
xchg
cli
repz
(bad)
call
sbb
mov
sub
ja
adc
pop
ss
icebp
mov
lds
jae
sub
cmps
jle
mov
and
xor
pop
adc
mov
sub
cmc
pop
cmp
push
adc
std
dec
jle
push
loop
in
xchg
(bad)
adc
mov
(bad)
add
paddw
(bad)
in
lock
sar
imul
(bad)
js
xchg
jmp
inc
push
cmp
stos
or
call
mov
lock
loopne
mov
mov
jno
jmp
jge
xchg
mov
dec
fist
mov
xlat
inc
in
xlat
sahf
iret
dec
fxch
scas
and
fsubr
int3
int3
dec
pop
call
call
jae
xchg
mov
push
sub
xor
xchg
iret
mov
sub
mov
fsub
stos
mov
mov
mov
mov
inc
movs
lods
int3
or
and
mov
imul
into
jno
iret
pop
test
xlat
mov
inc
and
and
push
inc
mov
jne
jne
or
xor
push
sbb
add
retf
inc
int3
push
lods
dec
retf
xor
ret
pop
xchg
push
and
adc
inc
xor
jmp
(bad)
in
pop
adc
add
pop
xor
leave
icebp
push
xor
dec
add
adc
or
push
and
sub
aas
adc
jle
adc
adc
or
and
mov
lds
sub
add
pop
bound
inc
lds
mov
pop
push
add
add
dec
call
out
pop
(bad)
pop
es
add
xchg
xchg
in
inc
pop
and
dec
mov
outs
pop
leave
xchg
call
es
aaa
arpl
xchg
loope
call
xor
xchg
bound
mov
retf
ror
call
shr
and
xchg
dec
jno
dec
retf
std
sub
je
sbb
sbb
into
jo
mov
dec
xchg
ins
jmp
sub
push
mov
jp
ss
inc
pop
retf
push
jnp
sbb
sub
jg
lahf
adc
addr16
mov
jle
xchg
jmp
out
fistp
es
scas
lods
and
sbb
aaa
mov
mul
pop
repz
push
jno
scas
pop
(bad)
iret
dec
cmp
xchg
enter
pop
dec
mov
scas
pop
xchg
js
scas
icebp
push
in
rol
adc
cmc
aad
setle
call
mov
adc
test
mov
mov
aas
and
fidivr
in
gs
outs
sub
repnz
out
call
jmp
adc
lds
cmps
dec
push
add
cmc
pop
ret
(bad)
ja
lods
shl
lds
mov
xchg
int3
iret
(bad)
sbb
sub
pop
jecxz
mov
mov
or
dec
icebp
pop
xchg
push
pop
std
in
mov
(bad)
out
mov
cmc
xchg
cmp
jp
retf
das
fistp
in
add
mov
mov
(bad)
and
mov
sbb
cld
js
(bad)
out
xor
lahf
mov
clc
push
les
add
scas
pop
sti
cmp
movs
inc
jecxz
(bad)
pop
loope
in
mov
into
(bad)
in
push
xor
cmp
lods
dec
(bad)
call
mov
les
arpl
xor
xchg
imul
test
mov
jno
mov
les
lods
js
imul
adc
sub
mov
jp
cmp
push
call
aam
and
fst
aas
cwde
in
scas
imul
cmp
and
in
jb
rdtsc
dec
scas
xor
ret
jecxz
lods
inc
ds
enter
lods
gs
jmp
sbb
sbb
mov
cmp
sbb
adc
dec
test
pop
mov
jb
push
inc
les
aam
mov
mov
sub
cdq
mov
jno
push
sub
push
lods
enter
xchg
pop
adc
cwde
leave
mov
push
cmp
xchg
dec
mov
loop
mov
adc
daa
add
movs
push
cld
push
adc
mov
dec
shr
sub
sub
in
push
add
bound
inc
pop
ins
xor
sub
and
mov
sub
fsub
sub
popf
int
aad
(bad)
pop
xor
cmps
pop
aad
in
bnd
inc
push
dec
sbb
lahf
arpl
scas
adc
hlt
stc
dec
cmp
cwde
xchg
or
xor
js
test
jle
mov
call
push
push
mov
(bad)
repz
and
out
mov
aam
sahf
repnz
mov
sbb
mov
cmp
mov
pop
mov
mov
or
adc
pop
or
pusha
(bad)
arpl
aas
fucomp
mov
bound
ins
test
int3
xchg
add
jo
cwde
shl
or
mov
test
inc
cmp
hlt
stos
adc
mov
ds
int3
mov
iret
add
cld
lea
addr16
xor
dec
lds
jp
sbb
and
lock
out
ror
mov
xor
mov
mov
aaa
xor
scas
call
pop
ins
xchg
pop
mov
test
scas
hlt
jg
jmp
cmp
das
push
icebp
jne
test
sti
mov
js
test
das
repnz
inc
mov
add
push
xchg
inc
inc
aad
add
pop
pop
sar
xchg
(bad)
sub
lahf
outs
clc
in
pusha
sub
lea
gs
clc
dec
jg
into
sar
clc
movs
popa
adc
xchg
mov
pop
sti
addr16
popa
sbb
js
jmp
cld
add
iret
xchg
cmps
pop
js
(bad)
jno
in
mov
jle
(bad)
retf
aad
std
daa
push
ds
mov
cmps
out
test
jecxz
push
test
jle
inc
jp
call
in
call
(bad)
sub
mov
push
mov
jp
adc
pop
out
fs
pop
mov
ret
mov
les
inc
fiadd
xor
not
std
mov
arpl
inc
add
mov
mov
dec
jp
(bad)
and
pop
mov
or
jb
mov
xchg
push
shl
sahf
jge
jge
scas
pop
xor
outs
adc
lea
scas
cmp
outs
push
arpl
adc
jg
repnz
pop
pop
clc
xor
adc
out
call
mov
pop
(bad)
mov
ret
sbb
xor
aad
cli
add
(bad)
(bad)
cmps
mov
cmc
cli
jg
cmp
push
inc
iret
mov
jg
retf
pop
lea
mov
adc
jae
sub
jp
hlt
jmp
inc
and
xchg
ins
xlat
sub
jb
es
adc
mov
jbe
bound
xor
sub
addr16
(bad)
jno
pop
stc
jns
dec
lea
xchg
mov
mov
mov
fstp
mov
test
fisttp
xchg
ins
scas
add
sbb
es
mov
xlat
ins
mov
into
push
jns
fmul
fwait
cmp
or
mov
call
addr16
(bad)
fisttp
pop
ret
(bad)
fcomp
fsub
adc
push
push
jo
pop
sbb
cmps
and
push
xchg
xor
mov
xchg
(bad)
movs
cwde
adc
sub
scas
mov
movs
pusha
sbb
aam
dec
xchg
mov
add
(bad)
pop
or
mov
and
inc
cmp
sahf
pop
and
ins
lods
int
xchg
push
xor
xchg
mov
push
lods
int
add
dec
push
push
sub
daa
add
movs
fsub
dec
leave
jno
mov
dec
mov
sub
adc
jbe
add
sub
and
push
adc
dec
in
push
sbb
or
add
ins
push
outs
xor
sbb
ret
scas
cmp
add
scas
daa
and
scas
pop
mov
int3
inc
repz
(bad)
sti
xlat
mov
jp
cmps
cmp
std
dec
inc
and
jg
dec
clc
xlat
nop
jp
ds
das
xchg
or
inc
mov
(bad)
mov
aas
pop
mov
dec
fdiv
xor
mul
mov
xchg
ja
mov
outs
sub
sub
mov
mov
jae
lock
sub
add
retf
fcmovnu
movs
mov
jmp
xor
(bad)
dec
push
dec
jnp
inc
bound
in
mov
retf
std
dec
inc
popf
fucomi
shr
add
mov
pop
pop
jmp
mov
push
outs
xchg
fisubr
pop
jnp
out
call
jno
stos
xchg
shr
(bad)
jge
stos
xchg
into
out
js
inc
mov
adc
imul
mov
in
xor
hlt
jmp
xchg
int3
xchg
pop
cmp
lahf
mov
xchg
into
nop
(bad)
in
rcr
xchg
pop
loop
mov
mov
sbb
ds
fisttp
cwde
out
sub
push
inc
jp
cmps
cmp
adc
xchg
(bad)
sahf
fdivr
aaa
or
aam
(bad)
ds
cmc
or
fsin
inc
push
jo
outs
pop
push
shl
std
leave
adc
out
and
push
(bad)
fimul
data16
adc
stc
neg
adc
mov
and
call
xchg
aam
lds
adc
and
sbb
adc
aam
cmp
in
xchg
mov
cmp
leave
and
cmps
(bad)
int3
push
ror
popf
push
into
ds
cld
push
dec
sbb
sar
outs
retf
jp
xchg
imul
pop
in
out
movs
xchg
arpl
mov
jp
mov
sbb
mov
ja
jb
pop
loope
not
rcr
or
test
add
xor
pop
data16
xchg
(bad)
bnd
inc
hlt
(bad)
es
sahf
xchg
out
adc
pop
adc
sahf
jecxz
mov
int
or
xchg
out
cmps
mov
sbb
popa
inc
xor
mov
mov
and
cmp
inc
xlat
in
fstp
(bad)
jecxz
arpl
sahf
jmp
mov
minps
mov
das
pop
or
clc
inc
mov
xchg
aad
mov
sbb
fldenv
js
push
pop
call
call
push
test
lds
cmp
out
call
(bad)
into
movs
jp
jb
sub
(bad)
movs
sub
sub
out
mov
mov
adc
in
pop
(bad)
out
jmp
cmp
in
mov
(bad)
mov
into
jb
call
sub
xlat
pop
(bad)
arpl
hlt
fisttp
push
icebp
adc
jne
test
jno
push
test
jnp
daa
adc
(bad)
pop
cli
cdq
repz
pop
mov
inc
pop
or
retf
imul
xor
mov
fwait
jp
adc
repnz
jno
arpl
xlat
push
mov
aam
and
or
arpl
ins
fs
push
mov
mov
cmps
mov
inc
inc
cdq
stos
inc
xor
fadd
add
cs
xor
das
stos
push
sbb
not
dec
sub
add
push
dec
push
adc
push
mov
sub
inc
test
push
sub
pop
add
dec
mov
cld
push
and
inc
jmp
test
add
add
add
and
nop
xchg
pop
loop
mov
add
inc
push
lds
or
add
adc
add
push
cmp
(bad)
sahf
ret
jmp
cmp
clc
data16
cmp
or
jb
jns
cmp
imul
lods
retf
jnp
inc
dec
mov
sbb
add
inc
jl
lods
cld
cmp
out
push
jb
into
ds
cmp
data16
aaa
xchg
xchg
scas
jb
sub
add
push
mov
rcl
sti
mov
arpl
iret
sbb
arpl
sub
add
pop
inc
dec
lahf
lods
xor
leave
ja
lods
in
retf
(bad)
mul
(bad)
(bad)
cwde
mov
stc
call
jbe
jbe
gs
jmp
ret
cmc
lods
sub
sar
pop
clc
mov
pushf
mov
and
(bad)
enter
pop
jp
jno
cmp
loop
xchg
std
int3
in
jp
aam
inc
pop
(bad)
and
dec
or
ror
dec
mov
inc
outs
ins
xchg
adc
cmp
pushf
jne
mov
xchg
aaa
lock
cdq
sbb
add
cmc
mov
adc
mov
mov
jnp
(bad)
cwde
cmc
stos
mov
iret
ds
push
jg
es
lea
addr16
cmp
mov
movs
xchg
cmps
mov
pop
pop
lea
fcmovnu
mov
out
push
sub
cmp
mov
push
xchg
jns
out
mov
sbb
pop
clc
mov
out
pop
retf
inc
jge
stc
(bad)
ss
popf
add
mov
jo
leave
push
inc
inc
(bad)
enter
loop
jae
lds
push
lods
in
and
and
sti
into
aas
cli
aad
arpl
push
enter
mov
outs
mov
and
add
enter
data16
imul
mov
cmp
sub
and
dec
lods
xor
cmp
mov
xor
mov
mov
mov
in
xor
fndisi(8087
mov
out
lods
arpl
lea
out
mov
or
(bad)
mov
movsx
cmp
aam
add
in
fidiv
push
mov
ja
lods
and
iret
aas
ja
mov
add
jle
imul
ins
pop
cmp
movs
shl
test
cmp
aam
cli
sub
mov
mov
xor
mov
push
inc
arpl
inc
mov
aad
int3
fbld
sbb
cmp
sbb
movs
xchg
push
adc
leave
(bad)
jae
sti
scas
mov
psrlq
mov
push
fidivr
gs
pop
popf
jne
push
imul
scas
rcl
test
pusha
outs
jnp
xchg
inc
push
xchg
jg
std
dec
jle
cmp
inc
push
add
out
sti
lahf
aam
xchg
push
ss
or
inc
jns
mov
movs
mov
sbb
rol
mov
bnd
ins
adc
jge
out
outs
js
push
adc
push
pop
jne
out
mov
xor
repz
fwait
imul
cmc
or
jp
(bad)
(bad)
jns
data16
call
mov
(bad)
jno
dec
shr
inc
mov
mov
xchg
inc
lods
sub
fdivr
cmp
mov
push
call
repz
cmc
push
sbb
lds
imul
stos
inc
mov
and
mov
sbb
ins
js
mov
ror
lock
jl
jmp
jle
and
ins
dec
pop
xchg
dec
gs
inc
sbb
inc
push
push
sub
mov
pop
push
add
mov
sub
cwde
mov
xor
jns
mov
mov
pop
jmp
bound
add
jo
cdq
fs
push
xor
ins
cmp
dec
retf
add
or
xor
cmp
icebp
push
push
sub
lds
cmc
add
clc
mov
dec
mov
lds
(bad)
loop
fs
imul
xchg
inc
icebp
dec
pop
bound
mov
sbb
push
sbb
inc
push
or
cmp
sub
std
mov
sbb
adc
push
in
and
push
lds
add
xchg
mov
sbb
mov
scas
test
mov
rcr
scas
loopne
fimul
pop
out
movs
dec
push
mov
imul
ss
cmp
icebp
pop
ret
pop
popf
fimul
cdq
mov
pop
ins
mov
push
xor
mov
pop
(bad)
sub
(bad)
jmp
mov
ins
xchg
sub
shl
out
jns
mov
cli
fs
dec
rcr
mov
push
not
cmp
stos
mov
mov
push
aas
jns
leave
push
sar
ror
xchg
cmp
pop
retf
int3
stc
fcmovu
pop
mov
jae
and
pusha
jecxz
sti
push
push
icebp
and
dec
cli
add
iret
pusha
test
test
and
inc
movs
push
gs
leave
aam
in
cmp
pop
les
xor
aaa
xchg
add
cmc
cmp
les
ins
jl
imul
imul
jp
out
sub
adc
dec
cld
mov
xor
sbb
out
pop
mov
inc
jecxz
mov
pop
mov
add
xchg
sahf
dec
mov
scas
js
sbb
cmps
xor
mov
mov
jp
int3
push
out
je
and
dec
lahf
cmc
ja
pushf
mov
add
popf
daa
leave
xchg
pop
sbb
js
xchg
test
stc
add
outs
imul
call
fsubr
add
jmp
inc
je
inc
inc
jns
fnstsw
fldcw
addr16
mov
jge
call
imul
fst
shl
pop
inc
pop
xchg
fistp
retf
fsubr
in
mov
dec
jns
dec
shl
add
sub
shl
icebp
fdiv
aad
mov
movs
clc
scas
stos
ret
pop
cmp
out
retf
jns
and
aad
jge
inc
jge
jnp
jns
aad
(bad)
mov
fiadd
pop
(bad)
es
in
iret
cli
cwde
in
lods
repz
out
jns
cld
fcompp
jmp
mov
fld
out
cld
adc
or
mov
sub
or
push
clc
jns
lahf
cdq
idiv
retf
adc
(bad)
push
imul
xchg
cmp
test
xchg
inc
test
jmp
das
sub
push
mov
cmp
add
pop
and
cdq
mov
sub
stc
jecxz
cmps
in
scas
rcl
add
push
xchg
add
(bad)
int
js
lea
mov
pop
and
jae
stc
pop
and
(bad)
cld
jo
rcr
jecxz
jae
pop
inc
outs
lds
std
jp
mov
bound
mov
(bad)
gs
and
jmp
test
pop
jl
test
repnz
shr
dec
iret
add
jg
(bad)
xchg
mov
inc
mov
sbb
repz
xchg
(bad)
stc
xor
shl
sub
jb
xor
jae
lods
mov
xor
(bad)
(bad)
cmps
mov
ret
fs
lods
jg
pushf
fucomip
jg
push
or
into
mov
cli
jno
icebp
into
int
jp
repz
call
mov
int3
out
sub
jae
push
inc
cdq
and
out
fisttp
xor
das
or
outs
push
movs
(bad)
xor
xor
lods
lea
push
mov
jb
cmp
and
ins
sar
or
add
je
rol
xchg
cli
ins
pusha
pop
sub
jb
nop
sub
neg
mov
jmp
xor
int
pop
sub
push
(bad)
into
push
mov
int
jno
test
push
repz
movs
and
ss
mov
xor
outs
dec
push
inc
push
xor
mov
adc
mov
pop
bound
xchg
xchg
push
jb
adc
shl
jb
pop
test
cmp
data16
jbe
dec
or
cmp
or
sub
pop
mov
and
push
pusha
pop
add
daa
add
fsubr
xchg
loop
fs
mov
fiadd
xchg
ins
dec
mov
in
movs
xor
add
push
pop
mov
pop
adc
pop
arpl
dec
xchg
test
jle
inc
aas
adc
pop
push
push
mov
mov
add
les
pop
adc
and
icebp
mov
in
popf
icebp
addr16
out
sub
push
cmps
jmp
stc
out
push
jp
(bad)
adc
fwait
pop
stc
jl
jmp
call
jl
stos
jmp
dec
mov
imul
out
fdivr
arpl
cli
repz
retf
and
cmps
mov
sti
dec
pop
jb
jns
mov
ins
mov
repz
mov
das
cli
mov
mov
stc
addr16
push
sti
lods
xchg
aas
das
xchg
sub
in
arpl
hlt
or
nop
or
movs
dec
dec
push
lds
movs
sbb
cli
test
mov
das
sbb
add
dec
pushf
jle
ds
fisub
lahf
loop
xchg
aas
jl
inc
cmps
xchg
in
cli
mov
jecxz
(bad)
shr
shr
fimul
add
cmp
call
leave
mov
outs
test
sub
loop
ins
cmp
adc
sub
sahf
cmp
ss
cdq
cmp
gs
sbb
inc
add
dec
jmp
lea
jnp
mov
call
add
sub
or
stos
arpl
dec
dec
aad
mov
(bad)
daa
aas
xor
mov
fdiv
fwait
call
or
mov
cwde
mov
stos
es
test
jecxz
mov
shl
lods
arpl
popw
es
dec
into
out
push
or
or
jo
retf
(bad)
inc
sti
into
fucomip
mov
inc
inc
xchg
repnz
in
hlt
sti
imul
cdq
inc
mov
mov
inc
or
jl
push
mov
sub
push
out
jmp
dec
sbb
sbb
jmp
mov
mov
rol
repnz
enter
mov
push
out
cdq
retf
ja
movs
outs
cld
ja
es
xor
ds
clc
arpl
(bad)
push
icebp
mov
sbb
jle
ja
and
jns
inc
sahf
push
ja
jne
sub
in
add
(bad)
iret
sbb
std
and
ret
jp
xchg
popa
or
mov
test
and
jmp
out
jae
pop
ins
add
sub
daa
ins
out
ss
out
cmp
mov
fisub
push
xor
add
jnp
sub
jae
sub
popf
pop
lds
and
aam
enter
and
pop
fnstenv
dec
clc
xchg
jge
out
xor
ins
out
sbb
aad
stc
inc
adc
enter
mov
clc
pop
pop
mov
mov
loop
inc
cli
push
scas
int3
jae
rol
cld
dec
enter
jg
out
hlt
adc
imul
push
push
fsub
push
mov
fild
push
imul
popa
call
cmp
stos
adc
sbb
add
std
fucomip
pop
adc
mov
pop
inc
(bad)
(bad)
mov
cmps
int3
stc
cmps
pop
xchg
cli
call
cmc
(bad)
sbb
out
inc
jp
sub
mov
(bad)
mov
xor
stos
mov
mov
shl
lods
(bad)
retf
jno
mov
sbb
fmul
inc
xchg
jmp
into
jp
xchg
pushf
adc
or
daa
int3
imul
das
inc
cmps
jne
int
jmp
sahf
addr16
pop
repz
mov
inc
mul
scas
mov
clc
(bad)
outs
mov
jno
sub
sahf
sub
bound
cmp
leave
scas
dec
push
sub
mov
xchg
(bad)
xchg
jmp
pop
retf
mov
cmp
inc
mov
mov
adc
and
fsub
pop
cmp
pop
dec
test
cmp
or
xchg
retf
leave
xor
push
pushf
bnd
adc
ret
lock
jae
scas
jecxz
adc
xor
mov
cmp
ds
cmp
sbb
cmp
jb
xchg
clc
jg
inc
pop
or
or
frstor
or
push
or
mov
dec
shr
(bad)
xor
cdq
adc
mov
int3
fs
xor
xchg
retf
add
xchg
or
dec
mov
mov
xchg
and
loop
(bad)
loop
inc
cwde
movs
xor
and
sbb
dec
mov
aam
jle
adc
push
mov
mov
test
mov
jb
clc
data16
mov
mov
cwde
int
push
icebp
dec
arpl
arpl
xor
mov
jbe
and
jmp
mov
out
(bad)
mov
xor
sahf
adc
syscall
stc
xchg
xor
cs
(bad)
jmp
pushf
jge
jp
pop
cmp
mov
stc
out
cld
cmp
and
adc
imul
repz
mov
ret
mov
scas
dec
enter
lds
iret
xor
and
leave
popf
inc
inc
cld
mov
ror
and
stos
(bad)
in
jl
dec
lahf
dec
dec
jge
push
xchg
pop
adc
pop
lods
(bad)
in
call
jno
cli
aad
pop
xchg
push
outs
lahf
or
mov
stc
sbb
mov
jge
int3
aas
fucompp
pop
icebp
xchg
(bad)
cmp
in
jle
(bad)
push
fist
xchg
dec
xchg
imul
push
pop
in
sbb
add
sbb
neg
ds
push
mov
ja
fldcw
lods
or
adc
push
sub
push
clc
jge
ret
test
inc
mov
hlt
in
adc
jg
mov
lahf
push
push
inc
enter
idiv
js
sub
jp
mov
xchg
mov
ins
or
jmp
cmp
aas
and
jae
xor
mov
and
pop
rcl
xor
inc
rcr
(bad)
jb
aaa
jmp
les
in
mov
add
scas
repz
push
inc
sbb
clc
jbe
das
sub
cs
arpl
push
pushf
jg
frstor
cmp
movs
stos
idiv
mov
(bad)
and
xor
mov
out
leave
sub
in
aas
dec
loope
mov
jle
mov
nop
jl
cli
out
cmp
into
mov
and
push
not
fstp
ss
and
jmp
adc
pop
retf
xchg
lahf
repnz
mov
inc
shr
mov
inc
(bad)
ret
fcomp
sbb
mov
pushf
jecxz
jg
sub
in
test
jg
mov
lea
mov
sbb
dec
and
repnz
lahf
dec
das
inc
adc
int
hlt
ins
push
out
mov
or
xor
sub
fwait
sub
mov
dec
xor
add
int
int
clc
jecxz
mov
ror
jge
sbb
fiadd
scas
cwde
mov
ins
stc
push
scas
and
lock
sbb
sbb
ror
adc
pop
mov
(bad)
inc
(bad)
mov
inc
leave
es
pop
pop
mov
xchg
into
jp
rcl
cdq
cmc
lahf
xchg
dec
imul
data16
cld
add
clc
push
push
xor
inc
adc
inc
or
ss
dec
test
and
fsub
sbb
cdq
jmp
ja
jnp
(bad)
in
jl
mov
neg
adc
fwait
std
iret
jmp
iret
pushf
in
or
into
cmp
pop
leave
loop
xchg
mov
repz
jo
jne
test
and
shl
repz
(bad)
(bad)
test
pop
push
retf
adc
fcmovb
(bad)
push
(bad)
test
into
mov
jmp
iret
sub
cdq
loop
sbb
sbb
int3
lds
ss
(bad)
rol
in
retf
jbe
(bad)
iret
mov
shr
movs
jge
bound
cmp
int
push
addr16
scas
xchg
pushf
push
adc
inc
cmc
inc
adc
je
and
cmp
inc
mov
es
push
push
out
dec
mov
retf
dec
cmps
sub
loopne
loop
mov
retf
(bad)
out
int3
ficomp
push
xchg
pop
mov
aaa
push
or
js
scas
dec
stc
jae
in
(bad)
mov
sbb
xchg
int
cmp
push
jno
push
mov
fmul
out
mov
retf
or
add
rol
pop
jns
addr16
pop
pop
xor
cmp
arpl
sub
arpl
adc
push
add
sub
(bad)
les
push
or
push
movs
mov
pop
or
aam
dec
push
mov
jno
lods
int
push
jmp
aaa
cmp
or
test
nop
sub
dec
and
nop
leave
xor
clc
movs
xor
mov
add
push
aas
ins
and
push
sbb
inc
loop
sbb
jae
jg
push
(bad)
inc
jecxz
mov
or
daa
jg
and
cmps
retf
push
data16
sub
cmp
mov
dec
pop
in
movs
xor
imul
or
sbb
xor
cmp
mov
mov
pop
fild
cli
xlat
xchg
sub
in
lahf
ja
out
xchg
inc
pop
mov
adc
sbb
in
mov
xor
(bad)
push
mov
mov
out
add
xor
xor
mov
out
adc
fs
stc
xchg
and
push
pop
adc
ss
in
std
jmp
idiv
das
jmp
icebp
dec
movs
xor
sbb
out
dec
inc
inc
imul
fcmovb
and
jnp
cmp
std
in
cld
sub
in
std
aaa
les
repz
sub
out
ss
retf
push
pop
cmp
sbb
in
inc
inc
enter
cmp
ins
ds
fs
adc
cs
fsubr
cmp
pop
add
lods
out
pop
mov
dec
imul
cmp
or
es
mov
xor
je
out
dec
sti
call
sahf
sbb
adc
inc
jns
mov
sub
mov
push
clc
adc
sub
jae
add
sub
in
gs
lods
or
js
les
mov
dec
mov
jbe
mov
sbb
loopne
mov
sbb
ds
xor
mov
push
mov
adc
sub
repz
(bad)
fstp
xor
mov
(bad)
repnz
repnz
cmp
test
adc
cmps
xor
(bad)
out
iret
adc
cmp
xlat
jne
lahf
and
sahf
in
aaa
mov
mov
call
mov
fnstcw
aaa
sub
test
clc
cmps
inc
icebp
es
stos
dec
ss
cmp
sub
fisub
fneni(8087
xchg
mov
nop
inc
sub
mov
sbb
(bad)
enter
sti
push
push
mov
push
xchg
cmp
xor
mov
dec
mov
fnsave
test
mov
(bad)
stc
sbb
aas
sahf
inc
adc
cmps
pop
mov
inc
and
inc
mov
push
and
mov
(bad)
jg
pop
sub
sbb
mov
inc
mov
(bad)
prefetch
dec
shl
inc
or
rol
xor
fdivr
(bad)
iret
pusha
xor
leave
sbb
es
enter
ror
cmc
jge
(bad)
cmp
mov
or
jp
(bad)
out
cmc
adc
mov
jb
mov
pop
aaa
jp
iret
adc
dec
sbb
or
mov
mov
bound
jp
(bad)
in
lods
in
xor
xchg
lds
fwait
pop
dec
pop
inc
stos
sbb
out
push
mov
cmps
movs
or
scas
cmp
lea
retf
push
jmp
xor
jle
into
sub
jno
mov
and
loop
(bad)
and
cmp
inc
call
dec
pop
mov
pop
mov
or
sbb
jns
nop
call
cmp
sub
fwait
call
cmps
mov
xchg
and
cmp
sbb
retf
pop
xor
jno
mov
ror
cmp
mov
aad
repz
dec
mov
bound
repnz
mov
lds
jbe
ja
aad
sahf
lock
inc
xor
stos
test
cmps
aad
retf
pop
(bad)
xor
retf
inc
push
lods
xchg
test
aad
sahf
push
mov
and
adc
adc
out
scas
dec
popf
ss
dec
mov
jae
sahf
cmp
pop
mov
or
aaa
es
or
out
out
jae
mov
xor
ret
out
sub
and
push
dec
in
mov
jle
inc
cmp
into
jge
hlt
fcomp
xchg
sbb
jnp
fidiv
fld
sbb
retf
fiadd
fiadd
pop
push
sbb
sahf
lods
aaa
cdq
jno
aaa
push
lahf
popf
inc
popf
jno
mov
out
shr
cli
inc
mov
mov
mov
mov
(bad)
jmp
mov
sub
xlat
repz
retf
mov
jl
daa
out
fdiv
call
jb
sbb
sahf
cmp
fwait
mov
out
pop
cdq
(bad)
inc
movs
clc
scas
push
repz
push
or
cmps
movs
dec
inc
fstp
js
inc
bound
aas
dec
jg
dec
cvtpi2ps
sbb
fsubr
not
xchg
xchg
pop
inc
mov
ror
dec
int
push
and
inc
xlat
ret
sti
fisttp
leave
mov
mov
cdq
jmp
inc
pop
in
push
out
stos
push
xchg
ret
outs
or
sbb
cmp
movs
gs
jecxz
out
mov
std
xchg
aas
xor
loope
mov
pop
jnp
cmps
aaa
xor
mov
mov
mov
lock
out
test
push
push
cmp
dec
mov
mov
pop
data16
push
jle
push
inc
add
dec
mov
xchg
cmp
iret
cmp
cmps
cmp
pop
inc
inc
in
mov
(bad)
xlat
or
xor
sub
cld
or
aas
das
repnz
sub
sbb
stc
cmps
std
pop
add
inc
add
pop
(bad)
icebp
pop
sbb
(bad)
jmp
cs
and
mov
call
cmovg
jl
jno
ss
xchg
dec
nop
mov
fdivr
movs
push
fcmovnb
cld
fimul
(bad)
repz
push
jns
or
iret
(bad)
cwde
iret
jmp
fld
adc
cmp
sbb
mov
ins
pop
add
aas
paddd
js
outs
jne
imul
sub
push
(bad)
jbe
std
shl
lock
cmp
and
cli
xor
out
sbb
not
aas
movs
jl
cmc
fs
xchg
sub
inc
(bad)
repnz
push
fisubr
xchg
cwde
mov
sti
pop
out
outs
jae
stos
lock
xlat
ins
mov
dec
xchg
scas
dec
xchg
adc
add
sbb
stc
ror
or
adc
inc
sbb
js
jbe
push
movs
arpl
mov
out
xchg
ret
lods
add
adc
scas
and
fild
jge
inc
in
in
icebp
pop
cwde
mov
sub
bound
mov
js
mov
mov
jecxz
loopne
cmp
ret
jg
dec
fcomip
aad
add
sub
cmc
iret
movs
ds
imul
lods
lahf
jno
(bad)
out
stos
into
aas
sbb
push
lock
fwait
adc
pop
shl
jge
mov
ins
movs
xor
xchg
imul
dec
and
push
push
dec
adc
pop
(bad)
fsub
(bad)
inc
mov
movs
mov
pop
adc
in
int3
stc
cmc
sar
cmp
dec
repnz
cmp
ss
pop
cmp
sbb
mov
mov
scas
lods
lock
sub
or
jge
call
inc
aam
popf
cwde
scas
sbb
(bad)
shl
adc
sbb
jecxz
pop
gs
addr16
mov
call
shl
out
pusha
mov
push
call
hlt
or
push
fstp
dec
test
pop
call
adc
mov
pop
mov
pop
pushf
and
pop
test
jmp
xor
daa
inc
push
imul
fisubr
adc
mov
enter
scas
mov
mov
sbb
test
out
into
add
pushw
(bad)
mov
jp
sbb
(bad)
xchg
dec
add
pop
stos
arpl
push
and
sub
lods
inc
push
sub
mov
or
push
add
aad
mov
mov
push
or
pop
inc
push
movs
mov
int
mov
data16
mov
xchg
stc
dec
add
into
push
imul
jns
js
dec
pop
imul
inc
(bad)
stos
mov
ins
mov
test
in
into
out
sub
mov
add
imul
cmp
pusha
into
pop
jmp
jno
xchg
sti
jg
jmp
mov
stos
mov
sbb
shr
int
mov
jo
mov
or
out
in
ins
sar
movs
scas
cmps
popa
daa
(bad)
jo
idiv
data16
sub
(bad)
pop
aad
ds
cmc
sub
neg
retf
jl
push
cli
xor
or
push
retf
stc
xchg
sub
fiadd
ins
pop
mov
jmp
jp
add
xor
mov
xor
lods
outs
imul
jne
sti
and
out
push
jl
dec
test
sahf
jge
pop
sub
sbb
ret
sbb
fistp
push
fmul
mov
out
add
xor
mov
mov
loope
cmp
out
imul
jp
imul
fwait
pop
cmps
test
jnp
outs
lds
cli
mov
bound
mov
mov
dec
pop
(bad)
ficomp
fcmovu
ss
shl
and
popf
push
pop
icebp
jmp
pop
mov
jbe
cmc
lds
repz
lahf
clc
xchg
lods
rcr
jbe
sub
ins
push
lea
adc
jnp
enter
mov
jge
pop
mov
mov
stc
push
retf
(bad)
fimul
sbb
lods
jle
into
sti
lahf
mov
sbb
mov
stc
push
pop
ins
aaa
push
adc
adc
push
fcom
jbe
jge
pop
mov
fmul
aad
push
dec
js
sar
movs
lahf
xor
sub
push
mov
sub
or
fisubr
lahf
sbb
xchg
pop
aas
push
cwde
jmp
dec
mov
mov
dec
xchg
cmp
aam
push
mov
push
cs
cmps
imul
push
mov
mov
shl
push
out
sub
mov
jecxz
imul
adc
push
and
pop
jge
push
mov
mov
test
cli
adc
call
loope
push
jae
jp
pop
jmp
sub
jae
add
dec
(bad)
xchg
jne
inc
pop
mov
psrlq
adc
jge
cmc
scas
sub
mul
and
into
fs
inc
out
out
ds
ss
and
mov
daa
repnz
jnp
xchg
in
scas
cmc
sub
out
call
stos
jmp
dec
push
mov
popa
mov
lea
xor
sub
cli
addr16
clc
pavgw
imul
repnz
ins
sub
xor
repnz
jne
jge
scas
pop
push
inc
int3
cmp
loopne
lea
cld
shr
adc
(bad)
jb
dec
mov
jae
fnstenv
js
pop
push
mov
ss
mov
add
arpl
xor
bound
dec
std
pop
(bad)
mov
outs
sub
outs
mov
pop
mov
dec
mov
inc
aaa
popa
mov
sbb
mov
iret
xor
mov
mov
pop
and
inc
inc
aam
sti
or
lods
dec
mov
mov
jge
mov
sub
fs
ins
and
and
(bad)
out
sbb
sbb
data16
push
test
outs
sbb
and
xor
ss
mov
push
aad
fmul
shr
xor
(bad)
mov
data16
int3
les
pop
mov
out
xor
dec
stos
scas
mov
pop
push
out
mov
or
mov
mov
in
pop
sub
mov
bound
and
sbb
inc
sbb
les
pop
jnp
(bad)
sar
in
fxch
cld
mov
es
std
out
xor
jno
into
mov
fdivr
das
loopne
hlt
xor
xchg
fbstp
dec
adc
enter
or
repz
jo
ds
xchg
loopne
sti
xchg
push
stos
ds
inc
inc
inc
add
jne
in
sbb
jb
pop
push
lea
mov
sti
inc
cs
mov
mov
dec
and
xchg
out
cmps
imul
and
and
in
dec
jns
lds
cmp
inc
(bad)
aam
pop
gs
(bad)
loopne
inc
mov
push
add
adc
shl
fdivr
adc
out
mov
add
mov
lods
jno
leave
outs
popa
int
rol
les
pop
mov
lahf
cdq
xor
sbb
xchg
lahf
cmp
push
mov
and
dec
pop
imul
setne
xchg
xor
pop
pushf
xchg
cmc
xor
mov
or
mul
xor
out
dec
xchg
pop
int3
iret
lods
ins
inc
push
jg
popa
std
(bad)
(bad)
pop
retf
pop
stos
jg
cld
jle
and
fisub
enter
and
add
stos
test
ds
inc
scas
xor
mov
add
sti
inc
and
cli
push
mov
jge
mov
clc
not
out
mul
cmp
mul
xor
ins
cmp
out
ins
inc
adc
mov
leave
movs
out
xor
sub
push
jae
adc
push
dec
dec
scas
call
xlat
cmp
inc
arpl
dec
es
cmp
sbb
call
repnz
movs
inc
mov
jbe
dec
sub
leave
scas
sub
movs
and
and
mov
test
addr16
cmp
call
mov
xchg
in
lea
sbb
inc
out
mov
lods
int3
(bad)
ins
xlat
dec
into
aaa
int3
and
imul
cmps
pop
xor
aam
out
fs
sub
mov
sub
push
sub
ins
inc
data16
stos
adc
xor
adc
push
cdq
sbb
adc
pop
mov
test
dec
rol
mov
ror
rol
xor
dec
jmp
jnp
(bad)
jmp
xchg
mov
aaa
sbb
ret
outs
pop
jnp
push
xchg
xchg
sub
enter
dec
ins
cmps
push
popa
inc
bound
pop
pop
push
inc
pop
in
sub
dec
mov
cmps
dec
retf
aaa
mul
ror
dec
enter
cmp
stos
inc
inc
push
jp
retf
inc
mov
sbb
stos
outs
sbb
repz
lahf
retf
sbb
gs
pop
mov
ret
cmp
(bad)
cmp
dec
cmp
pop
icebp
movs
xchg
pop
scas
retf
jg
jl
mov
add
(bad)
and
(bad)
push
clc
jp
cmp
fist
xlat
cmps
out
xchg
sbb
(bad)
mov
inc
xlat
cmp
ss
jne
popa
mov
imul
mov
pushf
repz
mov
scas
xchg
xor
inc
mov
out
outs
dec
ds
dec
aas
imul
dec
cmp
js
in
jae
fadd
jmp
bound
pop
inc
aad
loope
aas
shr
imul
cmc
push
aas
sti
sub
das
mov
sub
add
arpl
adc
mov
jecxz
test
repnz
sub
jge
leave
(bad)
xlat
jl
ror
mov
adc
inc
repnz
mov
scas
shl
retf
aam
add
ficomp
xor
cdq
mov
gs
and
push
pop
sub
popf
mov
icebp
adc
push
adc
aaa
pusha
(bad)
out
das
sar
mov
fistp
sbb
movs
jb
mov
int3
ds
movs
mov
(bad)
push
inc
aas
outs
dec
fidivr
mov
jnp
ret
cmps
sub
movs
push
and
sti
sub
mov
fnstenv
into
mov
clc
scas
rcl
sbb
dec
loope
or
ds
cmp
cld
mov
fnsave
sbb
mov
scas
mov
pop
ja
scas
or
scas
inc
push
sbb
push
(bad)
pop
aaa
push
xchg
cwde
ret
xor
push
cmp
mov
adc
inc
ja
das
(bad)
push
into
loope
dec
adc
mul
mov
fiadd
sub
sub
and
enter
jge
mov
push
and
fisttp
imul
loope
push
mov
je
jns
mov
push
push
mov
pop
xor
std
mov
xor
sbb
nop
scas
xchg
enter
push
retf
mov
mov
imul
mov
pop
push
repz
and
loop
dec
xchg
adc
in
shl
jbe
nop
(bad)
out
sub
inc
mov
pop
pop
adc
pop
push
or
xor
retf
inc
fisttp
shl
adc
inc
xchg
xor
outs
and
aaa
cmp
sbb
in
mov
rcr
call
mov
aaa
clc
xchg
sbb
cmp
shl
inc
sub
(bad)
bnd
sbb
xchg
cmp
xor
cld
inc
repnz
pop
cmp
push
clc
jns
sub
aas
dec
mov
outs
xor
xchg
nop
nop
xor
enter
dec
mov
pop
icebp
std
push
loopne
mov
xchg
push
push
fidiv
jl
mov
in
jg
sub
std
mov
das
fs
pusha
sar
cmp
je
jmp
mov
faddp
mulps
pop
or
fstp
shr
ins
(bad)
fcomp
ret
push
out
retf
repz
pop
mov
push
imul
dec
out
sbb
nop
jns
in
jmp
imul
add
jb
in
jae
dec
mov
pop
mov
mov
mov
mov
mov
mov
cmp
push
les
in
stc
xchg
xor
addr16
(bad)
lods
push
sbb
cmc
cmp
ficom
aaa
mov
add
mov
repnz
add
adc
pop
xchg
(bad)
push
sbb
cmps
jne
adc
out
inc
dec
fbstp
rcl
xchg
xchg
xor
mov
fwait
sti
lahf
das
int
out
xchg
mov
cmp
(bad)
mul
stos
mov
je
dec
mov
les
ins
cmps
sub
popa
xchg
fimul
in
mov
mov
pop
ror
cmp
push
push
dec
mov
das
nop
repnz
jo
sub
inc
retf
not
mov
fbstp
lea
mov
imul
jne
pop
mov
sbb
mov
sbb
out
push
dec
aas
and
push
push
add
cmps
arpl
in
retf
jmp
jge
fsub
lods
mov
sbb
adc
cmp
lods
and
sub
xchg
test
jl
push
lea
jno
out
xchg
fbld
jns
mov
outs
jbe
pop
(bad)
(bad)
aad
inc
sbb
addr16
dec
(bad)
cld
or
inc
and
xor
in
mov
sbb
cmp
sub
xchg
enter
int3
fldenv
xchg
mov
and
cmps
daa
jbe
fcomp
in
dec
gs
imul
fwait
mov
cs
aas
fild
pop
pusha
mov
inc
jmp
(bad)
jbe
stos
xchg
add
js
loop
out
mov
inc
mov
retf
sub
sti
sbb
cmp
xchg
imul
add
mov
jno
push
mov
xor
xchg
dec
test
lahf
xor
mov
pop
movs
ins
(bad)
lods
(bad)
arpl
aad
push
sub
xrelease
and
inc
jmp
bound
mov
push
cdq
lods
sub
xchg
cmc
bound
std
out
fwait
mov
int
cmp
call
pop
fsubr
mov
xchg
sbb
xchg
lds
shl
sar
(bad)
sti
popf
lods
push
cmp
popa
xor
sub
push
imul
sbb
neg
inc
add
push
mov
and
mov
in
enter
xor
out
cmp
fimul
scas
jae
js
push
in
(bad)
loope
mov
jl
push
pushf
and
in
mov
fldlg2
push
xchg
sub
or
ins
mov
push
jge
sub
icebp
out
daa
sti
mov
ja
addr16
test
fstp
and
mov
push
gs
cmp
push
add
sub
or
mov
pop
sbb
sbb
cmp
mov
lods
fwait
es
cld
mov
xchg
imul
leave
xor
ins
xlat
add
push
push
mov
sbb
out
shr
mov
pop
jae
xlat
pop
in
inc
xchg
scas
jecxz
mov
sub
sub
mov
sbb
retf
repz
scas
mov
inc
into
jbe
add
and
xor
or
inc
sbb
adc
xchg
jmp
xor
cwde
lods
inc
inc
inc
xor
and
mov
inc
std
mov
out
pop
mov
mov
adc
pop
cmp
mov
nop
leave
stos
dec
pop
push
add
xor
lds
bound
aad
xchg
aad
sub
xor
jecxz
and
stos
adc
cmc
icebp
inc
loope
cdq
or
mov
xchg
push
aad
push
pop
daa
in
(bad)
hlt
scas
cmp
jge
xchg
je
test
mov
shl
sbb
mov
pop
push
dec
inc
and
fistp
aaa
jbe
sbb
cwde
fs
(bad)
sbb
mov
shl
in
mov
pop
sti
loope
stc
hlt
stos
and
in
dec
cmc
test
ror
clc
xchg
push
stos
mov
test
popf
stos
inc
(bad)
mov
aas
sub
adc
pop
mov
add
mov
(bad)
push
ins
jp
dec
adc
(bad)
sbb
xchg
stos
idiv
and
jecxz
or
cdq
clc
mov
cmovp
push
lods
repnz
dec
xlat
jl
loope
in
movs
sti
xor
loope
add
sbb
arpl
outs
sbb
sbb
or
inc
mov
jg
pop
xlat
lds
dec
not
pop
cmp
push
pop
dec
jo
inc
fisttp
pop
icebp
sub
fimul
(bad)
popf
movs
fisttp
ins
sbb
push
add
(bad)
(bad)
sub
add
or
pop
js
pop
sbb
cs
or
xor
fsub
fild
ds
add
int3
mov
sar
mov
movs
fs
or
dec
or
enter
fcmovnu
ds
jb
inc
add
fnsave
push
in
add
lods
inc
mov
mov
jo
inc
loop
sbb
outs
xor
push
imul
or
mov
mov
in
and
bound
clc
pushf
xchg
(bad)
and
push
shr
mov
clc
ja
pop
call
call
sub
or
cdq
sub
(bad)
bswap
in
arpl
jmp
adc
jge
fnsave
(bad)
loope
(bad)
ja
and
jg
retf
imul
and
(bad)
lods
addr16
test
jecxz
sbb
cli
ss
ja
sub
addr16
cmp
inc
fld
imul
hlt
fwait
mov
mov
push
mov
mov
icebp
cmp
jge
fisttp
or
push
into
inc
mov
mov
dec
scas
sbb
iret
xchg
xor
mov
into
ds
cmp
cwde
dec
xchg
sub
into
outs
cwde
idiv
mov
les
pop
adc
xchg
lods
movs
sti
pop
ud2
aas
cwde
ins
and
and
fmul
lahf
cdq
adc
jecxz
pop
push
dec
push
mov
je
push
mov
add
out
ins
push
(bad)
sub
(bad)
in
icebp
mov
add
push
cmp
imul
jmp
cld
pop
arpl
dec
js
(bad)
sbb
cmc
push
repnz
mov
dec
out
xor
add
fcomip
repz
cmps
lock
sub
cmp
test
mov
pop
rol
jb
jmp
jbe
stc
loopne
iret
mov
aas
fidiv
cli
mov
and
cmp
lahf
mov
fs
sub
push
ss
idiv
into
push
cmps
aad
mov
xor
retf
dec
in
arpl
mov
jecxz
repnz
imul
rol
fcmovnb
or
iret
add
jns
inc
cmps
push
or
mov
(bad)
shr
xchg
rcr
into
ins
hlt
adc
pop
cmp
lock
scas
pop
pop
mov
mov
sub
mov
cmp
mov
xchg
cmp
int3
mov
data16
ficomp
shl
imul
loop
pop
in
fisub
xchg
push
stc
in
or
fwait
and
sbb
mov
aas
adc
push
imul
dec
mov
xchg
mov
sub
gs
xchg
pop
fisub
inc
ret
or
into
adc
repnz
fwait
lock
sub
aad
ds
mov
in
cmp
scas
dec
cmc
out
jno
arpl
fist
xor
cmps
enter
push
dec
out
xchg
xlat
idiv
fnsave
popf
dec
iret
push
aad
out
jne
push
fadd
in
mov
stos
xchg
mov
imul
fild
mov
je
push
in
ss
mov
test
call
mov
dec
push
rcl
push
xor
aaa
and
sahf
jp
into
imul
in
stos
cmp
mov
ret
div
cmp
stos
pushf
xor
hlt
scas
jle
inc
int3
xchg
imul
gs
mov
movs
dec
and
add
scas
push
test
loop
push
les
push
cmp
or
dec
scas
inc
loop
iret
mov
adc
loopne
xchg
xor
dec
jg
scas
ds
mov
mov
and
mov
xor
icebp
mov
hlt
jbe
or
pop
inc
imul
ror
sahf
not
clc
push
lods
and
pop
ret
pop
leave
jnp
xor
sbb
out
dec
(bad)
adc
(bad)
push
dec
pushf
lds
pop
stc
out
out
and
cmc
iret
jbe
pop
repz
icebp
pop
les
cmps
fstp
mov
arpl
xchg
into
sub
clc
inc
fidiv
inc
and
sub
and
sahf
mov
xchg
cmp
mov
push
pop
(bad)
pop
pop
into
test
add
imul
fistp
adc
xchg
mov
cmp
fild
call
inc
jg
test
in
aas
jp
and
and
and
lods
mov
data16
stos
test
(bad)
mov
fsub
sahf
int3
repnz
sti
adc
loope
cmps
dec
ds
call
push
push
dec
mov
movs
mov
jns
adc
push
sbb
jns
mov
mov
dec
sets
inc
or
or
cdq
dec
and
jae
pop
daa
or
push
sbb
add
sub
sahf
test
push
xor
lods
dec
inc
cmp
int3
arpl
and
ins
jae
adc
(bad)
int3
jecxz
fsub
or
sub
ins
dec
push
push
cmps
fs
xor
push
enter
mov
pop
mov
adc
xor
call
in
fsubr
rcr
mov
adc
jmp
jne
or
sub
inc
test
sbb
les
retf
add
cdq
imul
movs
xor
push
inc
mov
call
pop
cmp
sub
ds
jns
stc
rcl
fnop
add
enter
(bad)
pop
clc
imul
mov
outs
int
push
push
retf
inc
inc
push
cmp
pop
inc
les
inc
xchg
xchg
std
pop
xchg
jo
mov
cld
fwait
(bad)
(bad)
mov
mov
jo
lahf
imul
bound
aas
test
fdivr
mov
fcom
mov
loopne
fdivr
leave
fstp
call
sub
and
push
xor
and
sbb
inc
push
gs
inc
rol
test
mov
sub
in
in
hlt
adc
daa
mov
icebp
sub
aaa
das
movs
lahf
fidiv
lock
mov
clc
xchg
dec
xchg
ja
les
inc
addr16
mov
fcmovnb
xchg
xchg
inc
(bad)
mov
pop
out
mul
cdq
pop
jg
sbb
xchg
in
jg
mov
xchg
ret
xchg
push
xor
das
shl
aas
push
adc
(bad)
aas
les
mul
mov
lea
arpl
sub
cs
and
xchg
int
and
sti
in
sub
jmp
call
cmp
call
mov
cmp
xor
jae
out
fld
stos
xchg
(bad)
hlt
(bad)
fstp
add
sahf
imul
mov
ins
out
loopne
xchg
cmp
mov
cmc
ja
int3
gs
mov
ins
fdiv
dec
shr
std
out
xchg
jne
movs
retf
dec
cli
je
mov
and
lods
and
sub
sbb
adc
ins
adc
xchg
cmp
sub
xor
popa
push
jmp
push
cmp
add
pusha
pop
fsubr
add
call
xlat
test
fistp
jecxz
imul
lods
jecxz
mov
and
mov
js
clc
jp
sti
cmp
inc
pop
fnstsw
cmp
ds
scas
addr16
ss
ins
pushf
adc
dec
(bad)
fbld
or
xor
frstor
lods
jecxz
xchg
inc
retf
jp
bound
loop
mov
mov
aad
mov
mov
in
sar
inc
outs
jg
push
popf
and
mov
dec
lds
pushf
and
(bad)
adc
push
jg
mov
loope
out
mov
push
aaa
cld
add
jb
sbb
cmp
clc
jnp
(bad)
test
xor
fmul
jb
sbb
ja
inc
push
inc
ficom
dec
and
xchg
pop
and
stos
pop
push
hlt
imul
jo
mov
mov
out
in
xor
icebp
sub
inc
inc
dec
rep
mov
jbe
mov
int3
ja
lahf
dec
imul
fisttp
sbb
outs
and
mov
jne
repnz
xor
mov
sets
mov
pop
inc
mov
lods
xor
or
fwait
and
outs
es
in
and
arpl
in
jno
out
(bad)
mov
add
stos
(bad)
lahf
and
fs
or
test
in
(bad)
cli
lods
(bad)
nop
pushf
add
arpl
jns
jmp
xchg
fsubr
(bad)
repnz
jns
xchg
daa
js
pop
and
jnp
or
lock
lods
into
pop
out
loope
add
dec
xchg
jbe
push
cdq
or
test
sub
add
pop
pop
(bad)
sbb
mov
out
sbb
in
and
in
retf
pop
jae
cdq
sahf
outs
jae
iret
ja
inc
outs
mov
mov
js
out
xor
push
int3
shl
inc
or
fist
jae
sub
fmul
clc
pop
(bad)
fisub
mov
jle
js
push
iret
sbb
adc
imul
and
shl
clc
pop
dec
aam
and
ins
fisubr
jns
add
push
outs
and
jne
fisttp
lods
into
pop
push
iret
mov
xor
or
iret
ja
mov
imul
aaa
daa
(bad)
xchg
loop
data16
jg
addr16
js
ret
mov
iret
sbb
movs
ja
fisub
clc
nop
fs
mov
inc
jmp
imul
lds
cmp
sub
aad
sub
sti
xor
mov
or
popf
pop
cmp
loope
scas
outs
push
int3
dec
fild
pop
sub
fbstp
in
(bad)
jge
loope
push
mov
jns
outs
mov
push
test
ret
test
xchg
and
test
and
shl
call
dec
cmp
push
test
mov
aad
pop
arpl
stc
(bad)
loopne
adc
mov
cli
jbe
nop
out
shl
out
(bad)
rcl
daa
fs
jae
psubb
gs
les
pop
pop
sub
(bad)
outs
xchg
sti
mov
push
outs
aad
rcr
out
sub
js
or
xor
cmp
int3
out
or
xor
stos
pushf
pop
ja
dec
call
popf
ins
mov
push
or
mov
daa
retf
fidivr
pop
(bad)
cs
fidivr
div
mov
data16
(bad)
jmp
jp
out
addr16
jl
loop
add
(bad)
xlat
or
jb
jle
cmp
je
stos
mov
mov
push
sub
mov
stos
cld
(bad)
int3
js
daa
ror
xor
repz
jno
add
bound
loopne
fwait
mov
mov
sub
ja
sub
mov
add
adc
inc
push
retf
push
std
sub
shl
mov
add
jnp
(bad)
in
imul
(bad)
repz
ins
add
lods
into
sub
inc
stos
dec
xchg
mov
(bad)
int
adc
jno
inc
ss
retf
jo
xchg
out
cmp
pop
pushf
gs
and
cmps
es
rcl
loopne
xor
pushf
in
aad
add
nop
mov
stos
xor
out
cmp
pop
sbb
sbb
cmp
ja
dec
fcom
test
push
(bad)
outs
pop
movs
cmp
stc
mov
jns
(bad)
fist
popa
cmps
data16
data16
mov
push
inc
mov
enter
repnz
adc
or
pop
lods
push
sub
push
adc
dec
and
sub
dec
xchg
les
cmc
and
dec
inc
add
test
push
adc
sub
cmp
dec
xchg
push
lds
mov
cmp
cld
imul
cli
mov
xor
cmc
repz
mul
popf
icebp
push
shl
xor
outs
and
pop
(bad)
push
cmps
push
pop
mov
dec
fist
mov
push
mov
sbb
rcr
cld
jmp
ficomp
int3
jmp
out
or
outs
mov
fidivr
fdiv
stos
mov
dec
adc
xor
push
mov
imul
cs
cmps
out
or
(bad)
enter
and
mov
shr
fisubr
out
mov
gs
test
stc
sub
mov
mov
aas
ret
loopne
cwde
cs
arpl
push
push
xchg
inc
xor
ins
mov
test
jmp
cmp
stos
out
pop
xor
fsubr
in
lea
movs
mov
popf
sub
(bad)
cmp
icebp
or
fidivr
retf
test
pop
fs
sbb
in
(bad)
lahf
dec
cwde
not
mov
shl
shl
shl
cmp
hlt
mov
mov
jns
xchg
(bad)
dec
jl
clc
xchg
xor
cld
cmp
sub
jp
(bad)
mov
mov
inc
ja
jnp
cld
jnp
sub
add
sub
cmp
adc
jle
std
cs
xor
movs
jae
mov
das
sbb
fldl2e
push
test
sbb
retf
mov
inc
mov
push
sub
inc
dec
fsubp
scas
pop
xor
jmp
js
push
cmp
aas
mov
pop
adc
pop
dec
cmps
sti
mov
(bad)
out
repnz
clc
mov
mov
and
inc
enter
ins
aad
sub
sub
outs
push
ins
xlat
aaa
jb
xlat
xor
(bad)
sub
push
cmp
jp
lahf
dec
sbb
dec
xchg
and
ins
in
cmps
xchg
out
loope
movs
push
(bad)
out
and
or
imul
xor
jb
xchg
and
(bad)
fs
je
add
arpl
call
adc
loop
fisub
es
sahf
das
movnti
dec
mov
mov
out
pop
cmp
xlat
jl
and
fsub
jno
mov
scas
sbb
sub
lock
ret
jg
(bad)
inc
mov
inc
jno
(bad)
aaa
add
arpl
ja
lahf
mov
jge
test
sbb
jle
je
retf
iret
fisubr
or
dec
cmps
mov
dec
push
ret
in
loopne
pop
lock
sub
fldcw
pop
bound
inc
inc
push
add
mov
mov
dec
(bad)
mov
retf
shr
retf
or
out
mov
mov
pop
or
inc
jge
push
ss
xchg
ss
jae
xchg
int
ins
sbb
test
test
ret
sub
dec
lds
mov
mov
mov
(bad)
xor
outs
mov
dec
sub
fs
inc
cs
inc
or
xchg
int
data16
ret
mov
and
bound
(bad)
jbe
xchg
dec
mov
loope
or
sbb
popf
jl
loopne
or
dec
jno
enter
outs
xor
mov
je
inc
xchg
ja
call
jnp
cmp
mov
ins
ret
in
xor
dec
sub
retf
adc
jle
jmp
in
xchg
mov
mov
mov
mov
xor
inc
xchg
cmps
mov
(bad)
xchg
repz
push
aaa
hlt
outs
mov
call
sar
lea
aaa
push
xchg
mov
movs
fcomp
icebp
nop
and
mov
fcomp
mov
sub
ds
test
mov
js
pop
inc
dec
xlat
ins
push
and
add
jecxz
push
fistp
(bad)
lahf
movs
mov
cmps
and
lds
jno
or
into
jg
dec
fmul
int
or
cmp
in
mov
mov
xchg
pop
outs
or
test
retf
ss
sub
add
inc
jp
or
push
js
fs
shl
(bad)
pushf
call
xchg
mov
and
popf
cmps
pop
mov
sbb
jmp
loope
and
cmps
(bad)
cmp
and
popf
addr16
cmp
out
cld
adc
dec
pop
dec
loop
inc
inc
xchg
adc
(bad)
icebp
loop
mov
cld
dec
jo
fcomi
enter
lea
xchg
xor
pop
pusha
jnp
out
out
or
or
out
jecxz
mov
std
out
(bad)
mov
lahf
xor
mov
push
pop
pop
fst
adc
and
adc
ret
scas
cld
push
mov
stc
call
ins
loop
pop
repnz
mov
jno
push
adc
gs
pop
push
push
xchg
cli
sahf
sub
outs
fidivr
pop
mov
cmp
ret
dec
mov
jbe
fld
mov
push
cld
(bad)
scas
dec
shr
cs
popf
add
add
xor
jne
inc
add
fcom
mov
enter
bswap
push
add
lahf
loop
ins
mov
fwait
pop
lock
aad
inc
fnsave
loope
les
pusha
rcr
(bad)
rol
mov
fidivr
mov
ret
push
mov
out
fs
cmp
or
inc
mov
mov
dec
icebp
into
out
cwde
(bad)
aam
ds
add
adc
cli
mov
push
mov
mov
paddd
imul
push
sub
push
and
sbb
aam
or
cmc
add
movs
fs
mov
stos
and
gs
push
daa
imul
fadd
lods
and
mov
dec
sub
movs
xlat
mov
pop
mov
add
adc
mov
sbb
int
fiadd
addr16
mov
mov
mov
mov
push
xor
pop
pop
xor
fadd
lods
ret
sub
fsub
or
or
adc
sub
pop
or
sub
push
inc
data16
daa
repnz
addr16
ret
(bad)
xor
pushf
push
inc
mov
mov
or
movs
mov
sub
dec
pop
dec
mov
xchg
cmp
mov
dec
mov
in
cmc
xchg
into
mov
sub
mov
mov
adc
pop
sbb
cmp
xchg
xchg
popa
mov
cld
div
mov
xor
xor
popa
cld
test
pop
cli
sbb
and
pop
cmp
and
cmp
sub
sar
dec
imul
push
push
mov
mov
cmps
outs
pop
jnp
add
icebp
les
pop
or
imul
call
loope
imul
test
arpl
xchg
aas
les
mov
sbb
ds
mov
xchg
lahf
or
xchg
jmp
xchg
sar
xor
xchg
icebp
ins
sub
mov
shr
not
xchg
div
das
sbb
xchg
into
out
ficom
ins
arpl
lahf
ins
js
ret
pop
outs
movs
scas
jmp
mov
sbb
test
jmp
push
sub
push
mov
push
shl
das
jns
push
ret
cmp
pop
sub
sub
add
add
dec
fistp
arpl
cdq
xchg
aaa
fidivr
ds
repnz
xor
mov
or
xchg
pusha
push
imul
sbb
je
pop
cdq
bound
movs
daa
ins
pop
hlt
hlt
mov
mov
repnz
dec
jge
rol
jno
fsubr
cli
gs
add
out
popf
push
pop
mov
sahf
mov
jecxz
and
ficomp
fwait
scas
ret
ds
ja
fcmovne
sbb
outs
cmp
repz
outs
outs
cdq
mov
pop
stos
lahf
cmp
jecxz
int
mov
push
inc
int3
das
mov
xchg
mov
jecxz
cli
in
jno
mov
dec
arpl
data16
fldcw
gs
repnz
and
imul
in
rcl
repnz
xor
fstp
fdivr
arpl
mov
ins
mov
sbb
dec
mov
lods
test
jecxz
mov
loope
sub
fstp
mov
out
movs
jmp
call
or
mov
or
ins
inc
mov
sti
mov
jmp
pop
int
inc
arpl
or
mov
in
loopne
sbb
jp
in
retf
jns
inc
mov
in
inc
dec
or
dec
and
in
mov
adc
cmp
out
jle
pop
(bad)
fnstsw
sti
cmps
xchg
inc
out
mov
js
frstor
dec
xlat
cs
fdiv
int
cdq
(bad)
push
inc
xchg
pop
xchg
in
outs
xor
test
xchg
(bad)
sbb
test
mov
test
add
movs
xor
mul
in
pop
push
enter
outs
ins
add
jne
leave
in
xor
(bad)
pop
mov
inc
jne
jae
jle
js
inc
mov
push
pop
out
bound
pop
ss
sub
push
bound
sub
retf
mov
or
push
push
shr
mov
jne
xchg
(bad)
lea
jle
outs
out
(bad)
in
sbb
mov
mul
ins
mov
(bad)
cmp
cmp
popf
movs
dec
lods
jmp
in
mov
mov
sub
movs
jl
push
aaa
adc
or
push
retf
inc
repnz
sub
sub
out
mov
mov
cs
out
mov
enter
inc
repz
sub
fmul
xor
adc
cdq
call
int
fwait
sub
pop
or
pop
xor
mov
dec
bndstx
test
cmp
das
mov
scas
faddp
sbb
xlat
cmps
movs
jns
pop
xor
sub
push
and
add
out
pop
nop
mov
(bad)
std
scas
pop
popa
pop
cld
(bad)
fwait
arpl
fistp
push
mov
add
sub
stos
push
in
lods
popa
test
or
sub
xchg
pop
mov
pop
sbb
test
inc
cmps
jmp
and
jp
xor
popf
cmp
mov
push
cld
repnz
adc
mov
js
push
imul
xchg
add
addr16
lahf
inc
push
std
mov
mov
jb
(bad)
stc
inc
loopne
(bad)
(bad)
test
pop
mov
clc
mov
jae
sub
enter
inc
(bad)
stos
add
ret
sti
push
mov
aas
dec
dec
fs
stc
jecxz
sub
test
or
scas
outs
jbe
add
cli
je
ins
stc
cdq
retf
mov
call
mov
ins
xchg
jnp
idiv
mov
push
inc
iret
pop
dec
shl
iret
xchg
pop
aad
dec
out
push
and
iret
jp
and
shl
jnp
cmp
sbb
sbb
pusha
add
sub
sbb
clc
retf
popa
in
stos
daa
movs
add
call
(bad)
mov
adc
lods
adc
ja
fcom
daa
clc
mov
push
mov
cdq
enter
fcmovne
sbb
lods
xchg
mov
jne
lods
cmp
jp
cmc
(bad)
xchg
inc
aam
dec
arpl
cdq
and
sbb
movs
js
cli
add
mov
add
cmp
jmp
sub
jmp
or
sub
push
adc
inc
pop
mov
scas
imul
mov
pushf
xlat
imul
stc
scas
cmp
inc
stos
cmp
int3
popf
into
sub
xlat
scas
js
dec
leave
pop
xchg
xor
xor
lods
lea
xchg
pop
int3
aam
lods
pop
out
retf
rcl
fisub
xor
inc
push
sbb
sbb
int3
test
arpl
stos
sbb
out
sbb
enter
and
mov
mov
bound
sub
cld
push
add
and
pop
mov
into
mov
inc
cwde
scas
inc
shl
popa
adc
sbb
xchg
stos
and
test
add
mov
adc
cld
push
cmp
and
adc
shl
push
cdq
and
pop
lods
imul
ret
in
(bad)
in
jle
or
cld
push
mov
cmc
ss
jb
mov
xchg
push
jb
jns
iret
lds
jmp
jg
into
(bad)
inc
outs
sti
jmp
(bad)
cmp
icebp
pop
mov
fwait
cmp
out
xchg
add
xor
cmp
imul
sahf
cld
xchg
pop
div
cmp
sbb
mov
cmp
fucomip
add
call
mov
out
adc
jge
pop
adc
push
mov
mov
xchg
xor
pop
stos
and
fsubrp
xchg
inc
or
fiadd
pop
sub
mov
pop
sub
ds
sub
push
inc
ds
add
ins
jae
lea
je
jl
aad
jae
ret
inc
cli
push
pushf
ins
jae
js
idiv
jge
fbld
xchg
stc
outs
xor
call
add
js
addr16
(bad)
popf
mov
jecxz
pop
xchg
sub
ds
and
xchg
or
(bad)
fdiv
fwait
neg
shl
dec
jg
fadd
mov
out
movs
mov
xchg
dec
mov
ss
xor
push
xchg
(bad)
sub
and
push
inc
sub
dec
inc
jecxz
in
jne
clc
and
(bad)
mov
mov
ds
or
xor
ficomp
push
mov
in
iret
ror
or
sbb
cld
xchg
mov
jmp
dec
fnsave
jbe
pop
mov
mov
mov
iret
adc
sub
imul
imul
xchg
clc
(bad)
adc
jecxz
mov
dec
mov
es
cmps
ficom
shl
sbb
cmp
adc
retf
sbb
ins
out
out
loope
sbb
out
idiv
retf
add
in
repz
jg
addr16
out
mov
fdiv
mov
sahf
cmps
out
out
and
pop
xchg
push
in
gs
add
fsubr
cmp
pop
int
ds
int3
adc
cmps
in
stos
push
push
push
test
cld
jae
pop
dec
sub
shr
popf
jle
lods
xor
aam
je
aas
in
inc
add
inc
sbb
stc
pop
cmp
outs
stc
jl
mov
fs
jns
and
icebp
pop
es
loopne
mov
cmc
sbb
pop
mov
ins
mov
mov
int
jo
shl
cmp
lahf
push
nop
(bad)
not
xchg
aas
adc
mov
cmp
jno
retf
pop
loop
shl
retf
fisttp
in
add
out
jecxz
rcl
sti
xor
mov
(bad)
cmp
test
inc
out
adc
les
in
(bad)
in
(bad)
fwait
mov
pop
repz
test
mov
repz
int
or
jnp
das
xor
sbb
stos
mov
mov
cmp
pop
inc
xchg
outs
sbb
push
sub
and
bswap
ss
or
jae
(bad)
cmp
(bad)
and
icebp
inc
mov
xchg
or
iret
cmp
out
jbe
inc
xor
(bad)
mov
ja
mov
iret
mov
adc
mov
mov
cwde
ror
fstp
mov
jae
in
mov
cdq
lods
sar
movs
xchg
out
pop
fisubr
ret
mov
cs
es
stc
imul
push
fs
sbb
and
cmc
xor
jbe
or
outs
fmul
jno
aaa
rep
push
cmp
sti
ds
mul
int
adc
retf
es
not
pop
lea
and
sbb
lahf
xor
outs
fstp
mov
push
pop
int3
sub
mov
out
(bad)
xor
push
xchg
outs
adc
xchg
in
jnp
add
xchg
pop
push
inc
enter
movs
mov
(bad)
in
mov
cmps
inc
aas
or
pop
call
enter
cmp
push
sti
cmps
mul
ss
cld
in
clc
or
cmp
outs
mov
fstp
add
fucomip
sbb
inc
neg
stc
pmaxub
pop
out
das
cmps
aam
mov
pusha
mov
mov
jp
xchg
(bad)
pop
aas
or
and
jae
js
ss
dec
mov
jbe
ds
lock
lods
pop
inc
mov
xchg
pop
fistp
xor
xor
jnp
fnstsw
cmp
add
adc
bound
add
(bad)
sub
inc
retf
int
mov
pop
aas
retf
cmps
inc
call
xlat
jns
mov
jmp
xchg
and
sub
cli
ror
dec
mov
sub
mov
out
stc
dec
mov
retf
push
cwde
pop
fild
sub
jo
inc
stos
jg
mov
inc
or
sbb
xor
pop
pop
outs
(bad)
lods
jle
jecxz
call
xchg
cli
push
les
mov
popa
ss
xor
pop
dec
jae
(bad)
(bad)
mov
ret
dec
or
data16
call
or
mov
fs
or
test
push
inc
push
pop
xlat
and
ja
push
cmp
push
add
shl
mov
(bad)
jo
xchg
mov
dec
lock
cmp
int
cmps
iret
adc
(bad)
(bad)
and
mov
loop
sub
push
fisttp
jb
ss
push
push
mov
sbb
push
sbb
mov
push
xor
xchg
dec
stos
jae
test
sbb
test
and
int3
push
or
sub
mov
pop
cmp
scas
add
and
sub
or
mov
push
cmps
and
sbb
bound
mov
aam
adc
and
fs
adc
daa
dec
lea
adc
pop
aam
adc
xchg
or
xchg
add
mov
cmps
inc
push
(bad)
(bad)
and
push
and
cwde
push
shr
aas
sub
xchg
scas
xchg
shl
sub
popf
mov
cld
fdivrp
jmp
aaa
fcmove
aam
enter
call
fisub
scas
sub
cmp
xor
xlat
cmc
dec
psubq
(bad)
es
jg
pop
cs
jg
aas
pop
test
xchg
mov
adc
scas
dec
add
dec
pusha
jge
cmps
cld
aaa
mov
mov
out
jno
jns
cmp
cmp
out
icebp
xchg
jmp
inc
mov
dec
mov
aad
in
fisttp
jge
inc
cmp
jmp
jmp
sub
jmp
cwde
out
data16
inc
xchg
aas
shr
bound
mov
stos
sbb
popf
cwde
jmp
push
ret
out
int3
movs
push
mov
je
pusha
repz
sub
lods
push
rcr
leave
cwde
and
repnz
jb
ret
out
fdiv
mov
pop
mov
sbb
mov
pop
jmp
fwait
xor
push
aas
sub
jo
sub
sar
fnstenv
fs
mov
hlt
ins
inc
imul
push
add
pop
in
ror
lea
xchg
fbld
cmps
jge
leave
es
lods
fsub
jl
lods
pop
pop
dec
outs
cli
mov
sub
lods
psubd
xor
ins
nop
inc
fsub
push
mov
movq
call
mov
lock
(bad)
fisttp
data16
ss
(bad)
fadd
cdq
inc
std
loop
inc
jecxz
ins
sbb
out
mov
add
sub
(bad)
ja
push
mov
mov
cs
in
jecxz
dec
leave
and
mov
pop
pop
mov
retf
fdiv
iret
cmp
in
or
mov
inc
push
lock
jmp
ds
les
(bad)
iret
imul
ror
fst
clc
outs
push
les
fwait
push
in
stc
cmp
sbb
add
leave
std
in
in
mov
jge
repnz
xor
jmp
sub
mov
xchg
(bad)
lods
jo
aaa
dec
cli
movs
scas
dec
mov
inc
in
pop
inc
cmp
mov
outs
jno
jmp
add
out
aas
lahf
xchg
ins
inc
(bad)
push
cmps
movs
cld
push
push
mov
leave
fist
cmp
test
jl
mov
repnz
dec
jnp
fild
out
mov
imul
cdq
push
sti
test
adc
and
outs
jns
imul
std
cmc
test
fld
repnz
mov
gs
rcr
mov
jl
cmc
in
sahf
js
movs
mov
and
add
push
mov
add
enter
dec
dec
mov
mov
lods
cmps
mov
cmc
jb
fcmovne
jl
jle
mov
sub
ja
push
or
inc
mov
add
cmp
movs
push
mov
rcl
movs
push
sti
rcl
dec
xchg
adc
sub
cmps
test
imul
ret
or
repz
and
and
push
fcomp
cmc
shl
sub
es
ror
cs
jo
test
xchg
fisub
aaa
in
xchg
pop
aam
sbb
jne
pop
cmps
jmp
aam
mov
test
xchg
jmp
inc
jp
xchg
jbe
xchg
stos
xor
cmp
mul
addr16
cwde
clc
xchg
push
aam
imul
sbb
or
stos
xchg
pop
(bad)
xchg
xor
out
addr16
mov
shl
pusha
lock
idiv
sbb
aam
fsub
inc
ror
test
sub
add
dec
jp
jmp
das
aad
out
mov
sub
cmp
mov
arpl
int3
popa
mov
dec
std
call
mul
sub
std
out
cli
movs
jl
cmp
mov
dec
stc
(bad)
not
cld
dec
xor
jns
mov
icebp
add
dec
sahf
les
ins
lds
lods
test
sbb
cli
pop
cmc
cli
sub
add
xchg
inc
test
sub
cld
jnp
fst
lea
xor
js
inc
add
push
xor
into
lahf
adc
jg
pop
ret
into
ins
aaa
sti
mov
cmps
mov
(bad)
cmps
out
dec
sti
ds
jae
jecxz
scas
and
leave
mov
mov
retf
test
add
iret
popa
jge
aam
lods
icebp
sbb
jbe
cmps
inc
xor
mov
mov
movs
mov
js
ret
int
lahf
xor
arpl
inc
sbb
sub
xlat
pusha
push
icebp
xchg
mov
xor
pushf
mov
loop
mov
push
mov
jno
dec
cmp
sahf
ss
movs
jo
mov
retf
lock
push
fiadd
rcr
pop
stc
xchg
cmps
inc
and
or
ja
scas
jp
repnz
mov
push
outs
(bad)
lods
jle
in
fld
inc
bound
push
adc
pop
arpl
cmp
lods
dec
xor
fld1
movs
pop
sub
popf
and
call
adc
sbb
or
pop
xchg
shl
xchg
imul
popa
add
sub
push
pop
dec
rcl
adc
int3
jae
popf
(bad)
and
sbb
cmp
xlat
stos
(bad)
sbb
jns
inc
outs
adc
imul
mov
cmp
movs
push
sub
cmps
sub
imul
adc
push
mov
dec
imul
add
mov
or
(bad)
movs
addr16
or
jnp
sbb
jb
test
inc
or
xchg
stos
dec
push
push
xor
mov
push
nop
or
sub
fs
pop
adc
outs
cmp
pushf
push
call
pushf
jmp
inc
cmp
adc
and
sub
inc
daa
dec
mov
cld
stos
repz
ror
sahf
out
xor
sub
lods
jnp
jp
xor
imul
shr
sub
dec
dec
fdiv
into
pop
mov
mov
std
pop
pop
mov
push
repnz
cmps
add
clc
mov
xor
push
inc
sbb
retf
sbb
xor
mov
add
mov
scas
nop
sahf
cmp
pop
inc
sbb
jmp
aad
lods
push
xchg
sub
aaa
mov
and
idiv
xchg
mov
mov
mov
mov
push
mov
cmp
imul
pop
sar
js
fst
sub
imul
stos
mov
lock
mov
xchg
jg
mov
fsubr
mov
jns
dec
xchg
jbe
in
mov
adc
hlt
outs
or
push
outs
icebp
dec
xchg
pop
dec
es
imul
pop
(bad)
into
xor
cwde
(bad)
inc
ret
mov
js
ret
fimul
push
outs
aaa
cs
jbe
aam
xchg
pop
pop
xchg
cmp
add
movs
pop
sbb
mov
inc
fdiv
std
cmc
(bad)
iret
jne
sbb
lods
(bad)
fsubp
pop
jnp
dec
jl
xchg
mov
stos
lea
lods
repnz
inc
push
lds
push
mov
stos
jno
fisub
jo
(bad)
repnz
mov
cmps
mov
imul
inc
push
sbb
mov
mov
push
pop
(bad)
ins
into
cmps
jmp
xchg
adc
shl
popf
shr
sub
jg
movs
fdivr
aad
xor
rol
mov
mov
inc
cmp
mov
jl
or
(bad)
out
pop
sahf
call
mov
icebp
shl
sub
jns
test
dec
mov
rdmsr
loop
inc
aas
mov
cwde
sub
mov
cdq
pop
fwait
aas
pushf
mov
call
jecxz
jae
jp
mov
(bad)
outs
jbe
pop
adc
adc
sbb
push
push
test
jge
out
dec
push
js
(bad)
fyl2x
push
stos
jg
fwait
test
push
lahf
fmul
push
aas
sbb
adc
std
cli
std
cwde
je
pop
cmp
xor
retf
fistp
dec
sar
sub
adc
xchg
mov
add
cmp
mov
sbb
push
cmp
pop
(bad)
fcmove
jge
sub
xor
aas
fmulp
ja
lds
mov
ins
ins
sar
test
sbb
push
aad
push
aas
ja
(bad)
arpl
jp
imul
in
leave
pop
jp
mov
ds
mov
repz
dec
inc
push
mov
or
int3
hlt
loope
fidivr
cmp
int3
aas
ds
sub
xchg
ret
jb
lea
add
jno
pushf
out
cmp
pop
mov
inc
pop
pop
(bad)
shr
and
jge
retf
inc
js
shl
inc
push
out
int
ss
int
dec
mov
jl
(bad)
mov
mov
lahf
gs
scas
xor
(bad)
sti
jnp
dec
push
cmp
mov
in
out
scas
int
lahf
dec
and
test
retf
push
gs
mov
aas
test
(bad)
imul
ss
sbb
aaa
xchg
mov
add
(bad)
pop
pusha
punpckhdq
inc
(bad)
in
inc
cld
mov
jg
pop
jmp
mov
push
pop
imul
or
cmp
stc
xchg
mov
cmp
add
scas
mov
adc
jg
ret
xlat
addr16
(bad)
fnstenv
sbb
xchg
(bad)
xchg
jmp
inc
into
inc
adc
push
loopne
mov
xchg
dec
mov
jno
ins
shl
push
sbb
in
popa
sub
push
loope
inc
push
xor
cmc
jo
out
adc
fstp
jge
adc
jo
test
into
push
ss
enter
dec
jae
lds
sbb
push
bound
mov
daa
mov
xor
xor
mov
mov
ss
repz
xchg
aam
jmp
jmp
call
mov
cli
leave
mov
xchg
(bad)
adc
pop
loopne
add
sbb
mov
popf
sbb
mov
jmp
xor
mov
add
leave
push
nop
pop
adc
pop
push
adc
dec
pusha
sub
outs
fs
adc
jmp
mov
dec
adc
jno
loop
jmp
and
cli
xlat
retf
ror
pop
loope
push
jp
dec
mov
popa
or
cmp
xor
stos
add
push
mov
(bad)
sar
sbb
inc
das
mov
mov
jecxz
xor
hlt
scas
sub
rol
or
sub
sbb
pusha
pop
cmp
out
push
das
jb
cmp
outs
xchg
retf
out
cmp
push
fdiv
repz
std
cmp
scas
jl
mov
jge
cli
push
xchg
iret
imul
mov
gs
ucomiss
lods
scas
ins
arpl
cmp
adc
popf
mov
sub
loop
stc
(bad)
xor
int
cmps
xchg
mov
je
xlat
ss
scas
aam
cmp
mov
fisubr
aam
or
pop
xor
jp
shl
xor
int3
xchg
push
pop
inc
sbb
(bad)
call
pop
push
and
pushf
xlat
pop
into
or
or
jmp
inc
dec
push
daa
adc
push
or
dec
arpl
add
ret
mov
test
test
pop
movs
(bad)
xor
xor
test
sub
cmps
inc
pushw
or
stos
aad
sahf
loopne
imul
lods
int3
dec
sub
lds
xor
or
or
inc
sbb
inc
push
movs
xor
movs
push
mov
dec
pop
xchg
(bad)
out
test
pop
mov
data16
adc
and
and
lods
enter
fstp
cmps
jle
jl
lock
mov
jae
call
xlat
jmp
(bad)
jno
jp
jle
(bad)
shl
mov
outs
pop
mov
hlt
out
call
dec
mov
pop
(bad)
dec
sub
fsub
test
dec
xchg
je
sbb
outs
mov
xor
and
out
sti
in
rcr
ds
cmps
sahf
fxtract
cmp
sub
xchg
jg
movs
repz
fsub
and
hlt
call
cmps
(bad)
sub
jb
jmp
dec
in
les
sub
jle
cmp
cld
cmp
neg
ficomp
xchg
and
fwait
std
push
sbb
stos
fs
pop
shl
mov
mov
out
(bad)
in
lds
enter
aaa
mov
mov
add
je
mov
int
lds
xchg
mov
xor
aaa
shl
pop
xchg
dec
jae
retf
mov
sub
push
jg
imul
loop
mov
out
xlat
inc
mov
call
dec
rcr
jp
pushf
cli
(bad)
test
test
fcmovu
mov
fsub
xor
test
jp
popf
xchg
jmp
mov
ja
std
lods
scas
jb
(bad)
add
je
cmp
out
xor
std
aad
scas
mov
fstp
xchg
and
push
leave
xchg
and
nop
mov
or
pop
jns
or
out
fsub
push
fwait
std
fist
pop
or
hlt
push
fwait
loop
jae
inc
stos
fldenv
jmp
(bad)
cs
fmul
sbb
xchg
js
(bad)
repnz
js
mov
pop
pop
xchg
das
fldcw
mov
imul
pop
call
lahf
push
outs
pop
idiv
cmp
fimul
mov
and
jae
repz
dec
jmp
fs
add
jno
add
scas
enter
mov
sub
call
stos
lea
xchg
mov
mov
and
int3
mov
leave
test
pop
lods
jle
mov
mov
pop
dec
xor
ret
adc
sub
and
(bad)
push
xchg
sub
(bad)
mov
or
ss
retf
jnp
rcr
cmps
daa
icebp
scas
or
iret
cwde
(bad)
sub
inc
outs
aas
xchg
int
fldcw
aas
mov
aas
test
sbb
outs
pop
cmc
push
xor
mov
sbb
into
aas
mov
inc
jnp
test
jge
in
mov
jecxz
mov
inc
stc
imul
mov
lods
xchg
jg
shr
jae
aas
test
outs
not
les
ret
shr
or
js
pop
cli
jns
mul
outs
(bad)
mov
sbb
test
enter
jne
sbb
rcr
test
ret
(bad)
iret
std
xchg
xchg
(bad)
adc
popa
jge
fcmovb
lahf
call
shl
mov
adc
cli
sub
mov
cld
lds
cdq
xor
mov
rol
hlt
push
push
icebp
cmp
inc
loope
or
pop
into
push
inc
gs
pop
daa
push
pushf
mov
dec
idiv
scas
adc
nop
cli
ss
imul
mov
loop
test
scas
fcomp
mov
les
inc
sub
aad
jg
aaa
sti
fnstsw
adc
mov
int
dec
mov
outs
ror
fcomp
sub
aam
dec
add
jno
popa
mov
mov
or
jnp
mov
(bad)
call
mov
pop
adc
cmc
pop
xchg
test
cld
fmul
cmp
jno
outs
(bad)
xchg
mov
cmp
pop
in
test
ret
jno
xor
xor
std
out
popf
mov
push
std
movs
sbb
xlat
mov
aas
loop
mov
push
enter
in
xchg
mov
mov
sbb
mov
mov
mov
sbb
add
mov
dec
enter
jns
stos
add
jmp
mov
(bad)
int3
jb
lock
pop
xchg
in
retf
psrld
fwait
jne
lahf
cmc
(bad)
dec
mov
out
jns
pop
ds
or
dec
pop
jbe
fsub
lock
dec
out
mov
xor
mov
cld
dec
jge
xchg
inc
cli
jbe
add
cmp
aas
mov
xor
ds
out
adc
test
rol
lock
or
inc
add
or
sub
aam
and
sbb
cld
popf
clc
stos
loopne
stos
js
pop
pop
(bad)
hlt
mov
add
jg
mov
in
in
iret
mov
jg
aas
sbb
out
push
dec
loopne
push
lea
(bad)
sahf
sub
mov
outs
or
inc
(bad)
imul
jo
mov
sub
out
push
mov
push
int
call
cld
stos
clc
push
mov
mov
xchg
cs
sbb
pop
popa
shr
jne
jb
push
test
xchg
mov
(bad)
dec
mov
sub
ds
inc
sbb
sub
addr16
fwait
movs
pushw
shr
sbb
xchg
les
push
and
inc
mov
adc
dec
loope
sub
jbe
in
mov
pop
fcom
cwde
(bad)
daa
es
lds
or
adc
sub
sbb
daa
xor
mov
adc
aad
push
xor
inc
inc
add
and
lods
bound
mov
imul
xchg
bound
(bad)
jns
mov
into
icebp
or
inc
sub
das
cs
add
or
push
inc
int3
push
and
add
movs
popa
dec
add
fs
push
add
xor
inc
out
mov
and
mov
add
shl
aam
jne
inc
call
pop
xchg
dec
mov
jge
add
sar
mov
inc
mov
cli
sub
pop
pop
in
(bad)
loope
scas
xchg
shl
imul
(bad)
cmc
scas
xor
sbb
stc
cli
sti
std
jp
inc
sbb
pop
adc
mov
xchg
std
inc
dec
(bad)
cwde
movs
push
mov
ficom
inc
pop
lea
std
out
loope
loope
sbb
xchg
aam
bound
(bad)
scas
cmc
pop
sub
clc
xor
xor
mov
inc
daa
std
popf
fld
push
mov
jo
cmc
mov
imul
dec
inc
adc
mov
outs
aaa
pop
pop
mov
les
jge
aas
stos
retf
cdq
cmps
mov
clc
and
clc
arpl
jno
loop
div
out
movs
inc
(bad)
(bad)
jo
in
xchg
(bad)
imul
aam
imul
out
(bad)
jmp
jbe
lods
mov
ror
sub
shl
xchg
(bad)
pop
sub
loopne
(bad)
push
out
inc
(bad)
cmc
test
jns
cmps
dec
popf
ja
jge
sub
and
mov
mov
mov
jg
ds
cmc
lahf
por
jns
or
fwait
ins
inc
or
dec
stos
cmp
cmp
stos
div
xchg
dec
in
jmp
out
jns
jl
lea
ss
iret
ret
and
mov
imul
jle
iret
retf
ja
in
(bad)
adc
in
mov
sub
jnp
fwait
(bad)
mov
sahf
adc
fsub
gs
mov
in
pusha
inc
rcl
sti
pop
stc
icebp
call
mov
xor
loope
xchg
and
les
stc
test
gs
xor
sub
iret
push
adc
and
mov
xor
aam
jne
inc
fldenv
inc
adc
mov
sub
or
aas
test
mov
jmp
mov
mov
std
cmps
out
xchg
scas
test
mov
and
inc
loope
js
cmp
iret
dec
push
sbb
ss
mov
pop
jno
adc
add
mov
icebp
sbb
inc
aad
scas
cmp
adc
pop
fwait
imul
mov
jg
inc
cmp
fwait
(bad)
mov
mov
sti
lahf
mov
fadd
addr16
repnz
loopne
sbb
hlt
dec
mov
das
adc
sti
and
sub
jle
ffree
jg
jae
data16
or
xchg
lock
or
out
ss
jle
lods
and
loope
add
jmp
mov
sub
jl
loop
or
pop
inc
jae
lods
retf
outs
adc
or
mov
mov
mov
xor
mov
jno
inc
sbb
lock
(bad)
test
xchg
or
movs
in
mov
outs
bound
lods
scas
pop
hlt
mov
sub
mov
dec
sbb
jo
fdivr
jg
xchg
pop
arpl
cmp
retf
js
adc
add
test
test
pop
sti
inc
jbe
push
icebp
xor
sbb
cdq
(bad)
retf
sbb
push
(bad)
mov
jns
cli
mov
dec
inc
sub
(bad)
cmp
cld
cmp
daa
mov
cld
inc
cmps
arpl
pop
pop
les
xchg
fs
bswap
push
ret
cmp
cmc
xchg
mov
push
pop
lock
inc
mov
adc
push
(bad)
addr16
sahf
pop
leave
mov
xchg
aam
scas
pop
out
fnstsw
jge
push
mov
(bad)
sub
loopne
mov
in
out
mov
fistp
xor
lea
or
adc
outs
loopne
mov
ss
lds
scas
arpl
sub
lock
sar
cmp
inc
imul
scas
aad
lds
repz
sbb
in
retf
loop
xchg
jae
xchg
dec
(bad)
and
es
jae
mov
add
inc
icebp
or
adc
mov
repnz
leave
lock
in
out
loope
sub
xchg
inc
xchg
out
pop
enter
nop
mov
add
inc
arpl
mov
mov
add
mov
inc
pop
adc
cmp
add
add
add
lds
jl
loop
in
cmp
mov
mov
dec
jecxz
(bad)
popf
dec
mov
xlat
rcr
out
mov
inc
cmp
js
ss
jno
cmp
push
clc
fndisi(8087
pop
mov
mov
cld
inc
not
cmc
adc
jl
outs
jnp
in
rol
std
loope
adc
fs
and
jecxz
adc
aam
dec
cs
inc
(bad)
mov
je
mov
fsubrp
jae
stos
sbb
mov
(bad)
mov
pop
shl
loope
cmp
iret
imul
mov
pop
jmp
test
add
int
mov
adc
xor
dec
bound
call
adc
sub
xchg
sub
bound
mov
cmp
js
stos
pushf
mov
repnz
adc
pop
pushf
movs
pop
fsub
or
adc
fisub
push
adc
imul
or
dec
or
dec
xchg
hlt
mov
and
cmp
xchg
mov
and
dec
inc
push
mov
mov
stos
imul
push
lea
fdivr
mov
add
adc
cdq
adc
shl
push
or
out
adc
adc
imul
stos
inc
jge
inc
aam
push
sbb
push
mov
jge
(bad)
inc
xchg
push
or
cmps
mov
cmp
loop
and
hlt
imul
mov
mov
jle
push
mov
add
wrmsr
jg
dec
imul
sub
ret
stc
mov
fild
jne
ficom
sbb
mov
lahf
cmp
popa
cld
(bad)
scas
cmps
sar
mov
mov
(bad)
pop
jg
pusha
inc
adc
pop
sub
mov
movs
mov
push
call
(bad)
lock
gs
popa
idiv
sub
inc
jmp
ds
aas
fidiv
mov
fstp
out
cwde
cli
push
fidivr
leave
pop
das
out
jns
stos
xchg
jae
mov
shl
jg
imul
ins
xlat
fistp
push
ss
sub
imul
daa
xchg
pusha
clc
addr16
fdivr
test
xchg
jge
dec
push
fwait
out
xchg
pop
dec
in
fiadd
mov
repz
(bad)
mov
push
xchg
xor
aaa
xchg
dec
push
scas
das
es
shl
(bad)
mul
ins
rcl
xor
mov
cvtpi2ps
call
int3
mov
mov
aaa
nop
cmp
bound
push
(bad)
mov
sahf
lods
hlt
jns
inc
inc
jmp
or
sub
adc
(bad)
sbb
bnd
xor
jl
mov
stos
call
sub
in
btr
mov
mov
cmp
les
dec
repnz
outs
and
pop
mov
cdq
xor
fld
(bad)
iret
dec
mov
dec
mov
ret
fldenv
ds
hlt
in
inc
inc
dec
pusha
pop
mov
daa
fisubr
ror
jmp
sub
xchg
xor
or
sub
mov
ss
adc
pop
addr16
(bad)
xor
fidivr
out
das
sti
sub
out
jp
fdiv
push
mov
jne
shl
and
mov
pop
repz
adc
aaa
neg
and
dec
(bad)
leave
inc
iret
sub
jns
div
pop
(bad)
icebp
pop
sbb
xchg
jns
sti
rol
pop
push
jge
fs
fstp
lock
jg
jns
retf
sbb
push
int3
xchg
push
int
add
push
add
test
lock
dec
xchg
jns
mov
jecxz
imul
xchg
daa
ins
call
sbb
xchg
adc
mov
mov
ficomp
call
pop
dec
jb
add
add
sbb
inc
pop
mov
int
iret
push
jb
mov
les
shr
repz
and
inc
push
in
rol
js
cli
(bad)
loop
frstor
or
mov
out
mov
outs
ror
std
jl
add
pop
xchg
aas
test
in
inc
(bad)
push
(bad)
cmc
jnp
ss
jge
nop
das
lock
ja
and
in
jno
cdq
fdivr
pop
adc
jno
jmp
in
sbb
in
jmp
inc
(bad)
pop
cdq
mov
lea
jle
mov
push
mov
xchg
pop
jne
loop
inc
xchg
fcomp
push
cmc
sbb
retf
pop
aam
not
ficom
lea
or
addr16
dec
fiadd
out
sahf
imul
cmp
jae
fbld
data16
cs
dec
pop
movs
jns
fs
push
and
add
sbb
arpl
(bad)
pop
sbb
movs
sub
or
fidiv
jne
dec
(bad)
loope
out
push
mov
fnstsw
mov
jnp
mov
sahf
cdq
or
mov
repz
jo
ins
fiadd
repnz
and
pop
fisttp
(bad)
mov
jmp
xor
add
pop
inc
or
add
push
adc
push
and
adc
sub
imul
arpl
int3
imul
mov
push
iret
(bad)
jns
lods
mov
cmp
not
(bad)
xor
in
stos
pop
sbb
jmp
pusha
jge
ds
mov
mov
gs
aas
mov
scas
mov
ds
or
add
(bad)
pop
ins
jle
iret
stos
daa
inc
pop
(bad)
data16
and
dec
lahf
dec
mov
fwait
lahf
cs
inc
add
in
cld
or
std
mov
aad
ret
sbb
mov
add
cmps
push
jo
dec
push
repnz
fadd
sub
push
inc
sbb
adc
(bad)
pop
lods
dec
int
mov
inc
int
pop
push
xor
and
inc
adc
sub
imul
xchg
(bad)
sub
dec
xor
scas
call
addr16
cmp
test
push
dec
xchg
inc
bound
ret
push
and
push
add
lods
cmp
popaw
inc
(bad)
push
sub
and
pop
or
xchg
enter
scas
jae
lahf
retf
xor
push
push
mov
or
popa
xor
int3
enter
push
jmp
xor
add
push
xor
dec
xchg
mov
movs
add
xor
mov
push
add
inc
rcr
mov
pop
inc
ret
test
mov
cmp
dec
inc
test
pop
inc
push
lds
rcr
jmp
fbld
lds
call
jnp
retf
jns
adc
sub
stc
mov
ins
and
jp
popf
stos
hlt
arpl
mov
shr
sub
sub
adc
daa
(bad)
not
(bad)
loope
dec
imul
scas
xchg
cmp
dec
(bad)
pop
shl
mov
push
sub
sub
inc
dec
movs
or
adc
outs
loope
jmp
dec
push
clc
mov
fucomip
jbe
adc
xchg
fcomp
mov
(bad)
lock
sub
or
fdiv
pop
loope
pop
movs
push
and
in
sar
lods
pop
ficom
cmps
iret
and
push
jnp
pop
out
imul
inc
fcomp
mov
cld
fsubr
fnsave
stos
scas
out
out
daa
inc
out
repz
in
outs
jle
add
fld
iret
dec
fwait
mov
cli
and
pop
loop
cmp
mov
gs
add
cmp
stc
popf
enter
mov
jg
cmp
sub
xchg
inc
jae
call
inc
repz
popa
inc
das
jae
jg
dec
popf
fwait
pop
add
(bad)
icebp
pop
push
arpl
aas
inc
jle
js
loope
stos
pop
fstp
jg
arpl
and
xor
xor
sub
popa
pop
jl
(bad)
(bad)
mov
or
mov
jns
xchg
cdq
add
lods
call
dec
aas
sub
fcom
popa
(bad)
fs
pop
pop
xchg
jnp
icebp
mov
in
mov
sub
jg
push
les
and
arpl
dec
std
mov
xchg
addr16
pop
dec
(bad)
jecxz
repnz
out
test
xchg
out
or
repnz
mov
cmp
out
inc
cld
inc
repnz
mov
adc
pop
jl
shr
test
xchg
in
inc
sbb
push
add
or
pushf
stc
ror
mov
out
push
inc
test
loope
cmp
pop
jmp
sti
mov
cmps
cdq
and
jmp
jne
cmp
out
loop
(bad)
mov
fsubr
mov
jbe
loope
mov
in
jne
das
mov
cmp
dec
push
pop
mov
retf
out
sbb
cmp
mov
mov
out
mov
sti
mov
lock
add
popa
iret
adc
fmulp
in
and
cmp
pop
gs
jmp
in
jl
out
xor
adc
(bad)
pop
mov
jne
lods
jmp
int
(bad)
cdq
jns
push
das
outs
movs
jp
xchg
cs
ds
aam
in
(bad)
xchg
(bad)
cmp
mov
loop
sti
sbb
fdiv
das
or
sub
clc
xchg
pop
mov
or
leave
pop
jb
inc
inc
mov
fistp
pop
aam
jbe
cmp
xor
jl
lods
inc
or
ss
dec
pop
in
pusha
repz
and
sub
inc
dec
xor
sbb
mov
jge
sahf
jb
lahf
into
fiadd
sub
dec
into
out
mov
movs
ret
inc
push
arpl
sti
les
dec
shl
jg
inc
iret
arpl
cli
push
xchg
dec
pop
jae
pop
(bad)
push
xor
mov
mov
dec
cld
push
jmp
push
lock
call
add
mov
shl
sbb
ja
pop
sub
lahf
lahf
int3
aad
inc
push
inc
sbb
adc
mov
outs
and
std
aad
xchg
mov
pop
sahf
cli
fistp
pop
clc
dec
jecxz
inc
adc
xchg
fistp
mov
jno
pop
dec
add
adc
push
push
into
vpaddusb
(bad)
push
mov
in
jge
mov
cmp
add
or
or
xor
add
add
dec
or
inc
scas
mov
lea
(bad)
outs
(bad)
(bad)
adc
aaa
pop
jmp
int
fnsave
scas
sbb
arpl
cld
jb
int3
dec
cdq
scas
pusha
cmp
mov
sbb
sti
enter
mov
shr
mov
(bad)
not
inc
test
pop
dec
jecxz
xor
cmc
dec
ret
push
aad
push
call
pop
dec
mov
dec
lea
sub
std
add
mov
mov
mov
mov
into
xchg
das
mov
sub
lods
pop
cwde
test
adc
sub
push
sub
xchg
les
xor
popa
push
adc
cdq
and
and
and
imul
pop
mov
adc
nop
and
adc
inc
nop
push
ret
adc
ss
xchg
dec
sub
inc
call
(bad)
bound
mov
imul
mov
ins
cmc
mov
jb
aad
and
push
es
and
lods
les
mov
sub
inc
push
add
lea
loop
or
xchg
aas
adc
cmp
sbb
push
mov
cwde
push
lods
xchg
xchg
inc
cwde
test
or
mov
pop
mov
mov
call
(bad)
(bad)
aas
jo
jnp
or
jbe
sar
mov
cmps
push
cli
pop
mov
push
pop
stos
shr
pushf
pop
loopne
xchg
pop
outs
xchg
jnp
fld
in
aam
in
std
out
mov
mov
es
push
fstp
add
nop
jg
fmul
lahf
(bad)
jl
movs
push
jb
es
or
aas
cmps
sub
stc
in
sbb
cmp
xor
adc
imul
(bad)
adc
sahf
lea
mov
inc
mov
push
jne
sahf
je
jae
(bad)
out
jmp
fsubr
fsub
shl
lock
adc
movs
bound
xchg
pop
mov
sub
sub
mov
push
xlat
in
into
fs
jno
repnz
add
inc
(bad)
xchg
pop
cld
mov
inc
cmp
cmp
fmul
cmps
retf
mov
pushf
pushf
mov
jnp
mov
mov
xchg
sub
push
mov
fdivr
jnp
pop
xor
(bad)
pop
aam
dec
jmp
jl
pop
in
and
dec
sti
jnp
(bad)
and
loop
scas
push
adc
fdivr
push
cli
enter
add
mov
sahf
pop
ins
in
and
push
mov
arpl
sbb
add
sbb
mov
icebp
mov
retf
adc
or
cmc
dec
std
dec
xor
jg
sub
aas
(bad)
push
mov
lods
movs
xor
inc
punpckhwd
(bad)
stos
inc
call
lea
cmps
ficomp
sub
push
sub
adc
fs
clc
movs
sahf
out
inc
sti
(bad)
daa
stos
sub
or
js
xchg
(bad)
sbb
ja
cmp
call
push
push
add
(bad)
cmp
pop
mov
mov
pop
jo
das
sbb
sbb
clc
xlat
pop
mov
mov
cmp
ins
sub
ret
test
fnstcw
ficomp
mov
sub
and
out
clc
mov
je
xchg
test
loop
mov
jl
inc
push
push
nop
(bad)
in
lds
lods
rcr
mov
or
inc
nop
cmp
cdq
bound
push
lea
mov
test
imul
sbb
jne
jecxz
clc
xchg
int
mov
in
mov
mov
push
scas
inc
fcmove
ret
xchg
sbb
popa
mov
push
cmp
jae
aas
icebp
aad
outs
out
in
and
inc
jb
fcmovnu
out
inc
inc
xor
in
fldenv
jg
aad
ret
in
loopne
imul
(bad)
push
mov
xor
add
sti
xor
gs
sti
ss
add
pop
cdq
movs
mov
fsubr
jo
test
outs
mov
popf
jecxz
sub
je
aaa
dec
mov
sahf
imul
cld
icebp
mov
add
xchg
sar
jno
xor
sti
(bad)
popf
mov
imul
repnz
dec
sub
outs
retf
setbe
push
fs
out
inc
jno
es
cdq
mov
repz
out
mov
sar
gs
nop
int
imul
fist
jae
and
(bad)
in
mov
lods
mov
fs
ins
xchg
in
repz
movs
or
sub
sti
cmps
push
cwde
cmp
loopne
ficom
lods
in
aas
adc
xchg
push
sub
shl
pop
outs
call
stos
adc
cmp
mov
lods
fisubr
imul
fcomp
mov
mov
js
xlat
mov
add
adc
sub
push
xor
mov
sar
outs
add
or
cwde
sti
icebp
aaa
pop
retf
movs
dec
pop
or
je
ins
loope
shl
test
cmp
ins
(bad)
dec
aaa
cmp
xor
sahf
pop
inc
push
aas
jp
sbb
jo
loop
push
aad
js
jge
sub
mov
and
aaa
jo
mov
sti
inc
sti
cmp
cmp
cmp
scas
bound
mov
out
mov
cmp
mov
inc
(bad)
shl
mov
dec
or
push
push
cli
xchg
(bad)
int
and
test
cmp
aad
lods
inc
call
jp
or
aad
jb
aad
add
mov
les
pop
and
mov
or
(bad)
rcl
ret
dec
int3
xchg
push
nop
add
inc
mov
jecxz
loope
lods
dec
xchg
add
sbb
or
mov
sbb
dec
int3
gs
mov
add
cdq
and
inc
rol
rol
lds
lds
inc
fsub
test
jmp
pop
adc
jne
adc
arpl
push
sub
inc
ret
mov
sub
and
push
push
add
mov
pop
push
mov
ds
pop
sar
adc
inc
pop
aaa
cmp
adc
out
es
fxtract
inc
push
imul
inc
call
loop
fld
push
mov
ins
psubq
call
into
sub
inc
sahf
jae
xchg
push
ds
pop
mov
sti
int3
hlt
aad
and
jle
pop
mov
lahf
push
mov
and
repnz
frstor
mov
cmc
fdiv
lods
fcom
xchg
mov
movs
and
fcomp
lods
mov
call
push
lds
inc
fs
push
jg
test
pop
sbb
scas
xor
loop
push
rol
mov
movs
mov
out
inc
jl
fwait
cmp
lods
push
dec
xor
ret
xor
dec
in
mov
lahf
daa
cmp
mov
mov
jns
jl
dec
popf
push
jg
shr
out
cs
(bad)
sub
outs
xchg
les
das
sti
dec
mov
lods
jge
movs
xchg
in
stc
hlt
scas
jge
mov
sub
jnp
mov
in
xchg
(bad)
je
inc
mov
inc
cmps
sti
(bad)
jns
xchg
hlt
mov
shl
push
(bad)
aad
ss
leave
imul
movs
jg
nop
jg
outs
cs
add
scas
cmp
xor
jne
in
cld
push
mov
into
faddp
xor
retf
jo
std
idiv
lods
inc
in
cmp
sub
push
sbb
repz
jo
not
retf
jo
lods
xchg
ins
jg
(bad)
mov
fisub
push
arpl
test
call
out
mov
clc
or
fstp
push
pop
imul
je
pop
in
int
dec
cmps
cld
adc
int3
inc
retf
and
in
inc
jmp
(bad)
shl
div
xchg
pop
(bad)
mov
ret
ins
test
pop
mov
enter
out
cmp
iret
sbb
and
and
xor
sti
stos
sbb
push
inc
mov
test
sbb
or
ja
pop
sahf
aaa
out
inc
cmp
mov
xchg
cmp
ror
rcl
add
and
pop
es
js
cmp
ss
leave
lea
data16
lds
dec
clc
push
jnp
and
jge
ret
ja
jae
in
jb
adc
cmc
stc
sbb
or
ss
in
cld
adc
sahf
xchg
scas
lds
(bad)
sti
cmc
and
out
mov
dec
mov
add
inc
cmc
or
mov
xchg
gs
lea
cld
xor
mov
push
ins
lods
push
(bad)
in
pop
ret
in
cmp
and
fucomi
mov
retf
std
into
lahf
sti
mov
aaa
or
stc
mov
inc
inc
mov
popf
aaa
in
adc
jo
mov
(bad)
jl
inc
mov
pop
push
int3
xor
out
enter
mov
pop
push
gs
xor
fcmovnu
or
dec
xor
std
(bad)
fdiv
(bad)
pop
jmp
imul
pop
lds
jp
int
(bad)
rcr
mov
inc
add
sbb
out
stc
pop
outs
fnstsw
jmp
push
aaa
push
mov
(bad)
movs
test
sbb
outs
xlat
xor
mov
addr16
sub
mov
jecxz
pop
mov
xlat
dec
int3
aaa
jge
cs
aas
mov
jge
daa
pop
les
mov
jmp
sbb
add
add
adc
mov
push
add
add
adc
inc
push
aam
jle
cld
(bad)
lock
dec
push
jmp
sbb
ror
lahf
pop
pop
jae
jle
addr16
daa
push
movs
stos
add
mov
xlat
call
fwait
inc
aam
xchg
aad
cmp
pop
and
cld
jmp
sbb
dec
sahf
xchg
mov
clc
xchg
leave
scas
mov
push
xchg
pop
je
sbb
add
je
add
xor
adc
shr
xchg
jne
arpl
push
mov
add
dec
bound
stos
adc
(bad)
xchg
imul
or
push
dec
push
imul
adc
sub
cwde
mov
loope
pop
(bad)
(bad)
test
pop
jecxz
frstor
jmp
loop
dec
in
inc
sub
cld
cmps
or
sbb
test
movs
mov
cmp
pop
or
sub
jmp
movs
retfw
test
or
and
mov
mov
add
lea
add
pusha
adc
xchg
add
pop
add
jne
inc
icebp
dec
mov
dec
pop
aam
cmp
aas
adc
sbb
inc
sub
xor
inc
test
inc
add
dec
pusha
sub
add
add
icebp
aaa
loope
xchg
mov
jne
data16
inc
jecxz
call
mov
mov
push
mov
les
scas
shl
rcr
stos
shr
push
mov
aam
mov
jno
(bad)
mov
cmp
fwait
pop
idiv
push
jecxz
ins
pop
push
mov
adc
sahf
je
inc
mov
rol
sbb
jp
mov
loop
xchg
aas
test
movs
sar
mov
cmp
push
jns
idiv
mov
pop
xor
ins
cmp
pop
mov
mov
in
push
cs
shl
lds
movs
jmp
ss
dec
movs
repz
imul
sub
shr
push
in
push
xor
es
loope
pop
(bad)
push
sub
int
adc
jo
or
xor
into
mov
fs
pusha
ins
jge
jecxz
jne
pop
push
(bad)
fstp
inc
aaa
inc
mov
jo
mov
loop
fisttp
in
mov
test
cmc
scas
dec
in
shr
mov
retf
shl
xchg
hlt
cmps
dec
out
retf
ror
outs
outs
mov
repnz
push
in
lahf
retf
mov
xchg
shr
stc
ja
jecxz
imul
test
icebp
leave
scas
jecxz
test
cs
jecxz
cwde
sub
jnp
mov
aam
inc
inc
out
(bad)
sbb
cmp
push
repnz
adc
or
dec
pop
jecxz
shr
outs
xchg
jb
inc
jae
outs
scas
fimul
in
arpl
inc
test
int
push
fisub
popa
or
xchg
fnstenv
mov
jno
mov
pop
xor
sub
mov
or
mov
into
xchg
lods
cmp
into
adc
stos
and
lea
jbe
in
out
ds
into
jne
in
inc
sti
aas
js
rol
or
dec
test
xor
jecxz
leave
or
add
mov
je
dec
vdivss
fstp
xor
out
sub
clc
repz
fdivrp
mov
push
ins
pop
xchg
mov
fs
hlt
les
fnstsw
add
lods
int3
mov
inc
mov
out
lahf
push
js
in
pop
dec
outs
mov
retf
lahf
xor
inc
loope
inc
cmp
sti
dec
jmp
cmp
sahf
mov
icebp
movs
(bad)
cmp
stc
mov
push
jmp
sub
out
cmps
adc
outs
inc
icebp
push
(bad)
dec
mov
push
inc
cmp
lods
ret
mov
retf
mov
aam
sub
sub
aam
fiadd
sub
bound
nop
lds
(bad)
(bad)
sbb
pop
in
jne
mov
aas
jecxz
xchg
push
aaa
dec
(bad)
jo
sub
dec
jecxz
aam
in
ror
mov
cmp
in
inc
inc
scas
mov
mov
pop
adc
lods
pop
sti
dec
dec
lea
ss
jecxz
cmp
aam
aas
stos
sbb
das
not
in
jmp
das
mov
xchg
out
sbb
fstp
jecxz
call
movs
shl
adc
mov
rcr
cli
inc
mov
les
push
xor
xor
add
nop
ret
xor
jne
xchg
push
mov
mov
and
push
dec
add
inc
adc
add
(bad)
push
imul
fwait
xor
push
ja
jno
inc
push
jno
sbb
pop
(bad)
pusha
jmp
inc
push
fs
push
sbb
adc
or
add
push
inc
mov
adc
sub
push
sub
push
adc
push
sbb
push
xchg
sub
cld
push
mov
or
push
adc
(bad)
add
ret
adc
or
pop
push
and
xchg
xchg
pop
rcr
inc
test
movs
iret
mov
jb
dec
das
push
add
or
out
push
xchg
pop
fsub
push
adc
movs
jecxz
mov
test
or
or
or
dec
repnz
cs
jg
mov
mov
int3
stos
vphaddubd
or
and
aas
ficomp
(bad)
repnz
cmp
js
loope
aam
in
pop
mov
jecxz
xchg
sbb
mov
js
and
into
push
test
repnz
inc
lahf
xor
test
or
mov
add
rcr
push
daa
jbe
ins
jg
icebp
and
cdq
jne
cmp
retf
inc
and
mov
push
fcom
scas
jae
hlt
sub
imul
pop
xor
cmp
sbb
pop
pop
mov
dec
mov
push
gs
mov
(bad)
pop
jp
cmp
mov
cmp
movs
iret
outs
add
mov
xor
adc
xchg
clc
gs
lods
push
pop
jnp
xchg
dec
mov
dec
movs
xchg
jns
pop
mov
lock
mov
jge
sti
xor
lods
dec
loope
pushf
int
jno
mov
ror
fcmovnb
mov
and
xor
mov
push
movs
dec
push
push
icebp
dec
jae
lds
sbb
inc
xchg
sbb
stos
add
ret
loop
mov
jne
dec
push
sbb
and
add
lods
sbb
mov
jne
mov
std
cld
mov
cmp
or
sub
mov
loopne
in
xlat
add
pop
jnp
pop
cmp
jp
ret
add
push
sti
dec
mov
sti
cld
inc
sbb
(bad)
xor
or
sar
adc
mov
pop
or
pop
cmp
adc
aaa
mov
push
mov
and
call
lea
aam
mov
frstor
cmc
adc
out
out
pop
ds
jecxz
lods
mov
xchg
inc
add
adc
retf
std
(bad)
jne
(bad)
sti
dec
add
dec
mov
clc
fdivr
js
dec
cwde
cli
dec
xchg
inc
hlt
in
dec
loopne
sbb
fdivr
or
inc
inc
test
lds
ins
cdq
push
mov
inc
cmp
repz
mov
into
std
sbb
inc
jmp
xchg
cmp
dec
sub
in
cmp
xchg
(bad)
fwait
inc
icebp
cmp
lods
fcmovnb
sbb
mov
xchg
js
scas
lahf
mov
(bad)
mov
out
rcr
push
clc
(bad)
jecxz
sub
(bad)
xor
int
jecxz
mov
pop
push
inc
ror
scas
scas
arpl
std
test
in
pop
inc
inc
mov
xor
(bad)
icebp
scas
into
jae
nop
sti
adc
mov
fadd
imul
retf
mov
mov
sbb
push
ins
movs
mov
out
movs
and
dec
inc
aam
sub
push
adc
push
sbb
xchg
cmp
loop
ret
call
push
xor
retf
stos
inc
ja
loope
es
sbb
into
aaa
mov
jns
fidivr
or
in
mov
xor
(bad)
mov
add
test
mov
jnp
cwde
shl
dec
inc
in
sub
jmp
inc
hlt
sub
fidivr
je
add
iret
inc
mov
fisttp
inc
cmp
js
call
xor
test
(bad)
adc
aam
dec
mov
inc
xor
and
adc
mov
int
add
aad
push
mov
(bad)
or
mov
sub
out
inc
xor
adc
adc
adc
dec
or
lds
dec
sub
inc
push
sbb
push
inc
push
inc
adc
add
mov
add
adc
outs
sub
inc
or
xchg
test
inc
or
fsubr
jne
(bad)
sbb
push
and
sub
adc
adc
and
jl
clc
mov
test
test
pop
ja
call
nop
dec
inc
ins
cmc
daa
dec
inc
loopne
mov
xor
xor
fwait
mul
bound
pop
mul
mov
push
xlat
mov
and
sub
and
lods
repz
inc
out
nop
fist
add
pop
sub
jne
mov
jmp
aas
loope
icebp
push
sahf
call
(bad)
retf
fwait
cmp
xchg
add
mov
sbb
popa
sbb
jb
cmp
or
addr16
call
and
cmp
mov
and
cdq
mov
mov
aad
test
adc
pop
cmp
inc
xchg
stos
or
cld
push
mov
xchg
out
jge
pop
push
jns
rol
push
add
mov
jg
pop
cmps
pop
shr
out
retf
out
(bad)
mov
add
push
jbe
call
sbb
lods
pop
mov
aad
xchg
dec
pop
or
(bad)
call
outs
sub
xor
add
ins
xor
pop
icebp
neg
jno
push
int3
cmc
jle
nop
sbb
arpl
int3
daa
nop
cmp
(bad)
pop
and
lds
gs
push
fnstcw
lods
call
sub
cmp
mov
add
jae
scas
ret
ins
and
mov
xor
mov
inc
sbb
in
jp
sub
ja
pop
(bad)
ds
test
mov
(bad)
jle
xor
ds
mul
and
inc
scas
std
test
dec
(bad)
push
cmc
jg
fsubr
pop
(bad)
div
aas
cwde
pop
in
mov
fnstsw
fs
addr16
add
push
jg
in
pop
loope
add
add
stos
fsubr
in
gs
jb
(bad)
fwait
retf
pushf
cmp
retf
fmulp
or
ja
push
pop
fstp
pop
mov
mov
jb
jne
sahf
jo
jge
pop
leave
xrelease
imul
dec
std
cmps
cld
js
ins
mov
mov
(bad)
push
push
push
out
loop
xchg
jno
fstp
test
and
inc
jmp
retf
cmps
cmp
ins
imul
inc
cmc
std
sub
cmp
pop
mov
imul
xchg
push
add
xor
div
xchg
(bad)
ins
out
fs
sar
adc
adc
and
mov
push
loope
jl
ror
js
pop
xchg
cmp
xchg
pop
sar
std
jae
(bad)
inc
shl
popa
enter
xor
jae
out
scas
jno
sti
loopne
test
arpl
imul
mov
push
xchg
fcomp
cld
and
xor
xlat
int3
xor
add
dec
xor
in
aaa
inc
shr
add
ror
(bad)
fcom
and
mov
dec
out
inc
cmp
aad
adc
mov
dec
add
add
mov
ins
add
daa
loope
mov
push
adc
mul
(bad)
call
jp
xchg
clc
or
das
pop
imul
push
bound
pusha
div
cli
xlat
xchg
jnp
hlt
xchg
loopne
adc
fnstsw
test
cli
xlat
aam
sub
pusha
lods
or
js
call
jg
fisttp
dec
cmp
iret
or
adc
add
xchg
aad
sub
sub
mov
adc
and
inc
push
sub
push
mov
pop
push
xor
cdq
push
mov
lea
dec
mov
inc
push
imul
mov
cmps
dec
retf
add
or
stos
xor
push
inc
adc
xor
push
dec
retf
lds
sub
push
sbb
push
add
push
fisub
mov
and
cwde
add
lds
mov
push
test
add
jb
mov
cmps
pop
or
fadd
movs
cmc
cmp
mul
test
mov
movs
jae
outs
mov
aad
leave
xor
out
sub
nop
mov
xor
in
add
xchg
sbb
or
out
dec
out
daa
movs
inc
sub
and
fs
sti
lods
mov
dec
cmp
pop
jb
loope
mov
pop
cmps
and
mov
jns
mov
sub
mov
fistp
and
jle
jo
(bad)
pop
sub
sub
cmps
out
or
cmps
jecxz
fidivr
ins
push
(bad)
inc
push
xor
gs
movs
(bad)
out
sahf
and
mov
ficom
aaa
es
inc
mov
xor
out
out
out
adc
imul
mov
retf
imul
xchg
jle
fwait
inc
fadd
push
lahf
gs
retf
sub
(bad)
es
imul
out
fisttp
(bad)
ins
repz
xor
imul
jle
dec
movs
out
test
test
jns
pop
fimul
rol
inc
(bad)
(bad)
jbe
jecxz
adc
lea
ss
mov
outs
lods
loope
ror
sub
add
pop
or
push
or
ins
pop
dec
adc
std
push
fisub
xchg
jle
or
jmp
inc
cmp
jnp
mov
cmp
outs
sub
pop
push
int
outs
cld
in
stc
push
fcom
iret
pop
pop
inc
jne
mov
cmps
xor
sti
dec
fdiv
adc
jb
inc
xor
mov
pushf
add
sbb
cmp
outs
retf
in
retf
(bad)
sub
arpl
test
jnp
sbb
dec
push
xchg
fxch
push
sub
fst
cld
sar
push
daa
sar
cld
push
xor
sub
ss
fwait
xchg
test
dec
jo
sub
clc
and
cmp
xchg
push
add
cmps
add
out
mov
(bad)
xchg
cdq
cld
ret
clc
mov
xchg
dec
aam
mov
jae
push
push
mov
sbb
popa
cdq
mov
mov
mov
int
into
xchg
xor
dec
iret
int
jg
popf
ret
cmp
xor
lods
popf
je
(bad)
je
fild
sti
add
inc
fistp
mov
fwait
in
loop
xchg
cdq
cmps
jne
stc
jno
in
ins
mov
inc
jbe
sbb
ins
in
(bad)
popa
jle
cld
push
aam
dec
test
xchg
mov
sbb
repnz
(bad)
idiv
retf
pop
mov
(bad)
mov
lahf
inc
jl
adc
dec
jg
fstp
sahf
xor
sbb
inc
aas
dec
mov
call
sti
pop
jmp
inc
sti
dec
sbb
and
jecxz
nop
in
popf
mov
fsub
aad
mov
aad
(bad)
sub
mov
adc
mov
je
inc
inc
stc
aad
jl
icebp
xchg
les
gs
jo
cmp
ret
pop
ror
mov
mov
jle
stos
push
cmp
adc
movs
jmp
dec
ss
ror
loopne
pusha
mov
push
out
mov
daa
icebp
jbe
ja
push
adc
fstp
dec
ja
xchg
push
retf
push
jl
fstp
lock
push
xor
jge
out
addr16
cwde
dec
and
gs
in
inc
inc
cmp
popw
lock
cmps
fs
push
std
in
ret
bswap
xlat
cmc
mov
jbe
jle
or
outs
mov
push
sub
push
mov
in
jge
cwde
in
pop
pop
out
stos
mov
sub
imul
nop
cld
idiv
pop
lahf
in
inc
jne
sbb
add
push
pop
in
add
jmp
call
pop
cmp
sub
repz
retf
cdq
sbb
xor
fs
ins
add
or
sub
jno
push
sub
mov
push
add
add
cli
into
and
rcr
rcl
sbb
mov
xchg
aaa
movs
pop
sub
sbb
leave
cmps
pop
jge
sbb
cmps
jno
inc
jmp
pop
mov
add
push
pop
jmp
add
add
ins
xor
and
sub
push
add
(bad)
daa
adc
adc
or
or
out
xchg
xchg
inc
adc
push
add
or
and
and
xchg
dec
bound
test
add
sub
rcr
push
add
add
inc
or
push
nop
(bad)
push
sub
sub
mov
jge
mov
out
(bad)
fisttp
icebp
sbb
mov
jne
fisttp
stc
sub
pop
cli
inc
or
cmps
and
pop
add
(bad)
mov
cmps
sahf
and
sub
stc
cs
push
pop
jmp
ins
in
in
dec
cmp
jg
fcomp
cwde
addr16
cmp
int
(bad)
mov
sbb
push
cmp
iretw
(bad)
mov
dec
(bad)
sar
std
xchg
fistp
ss
pop
pop
dec
or
and
repz
push
rol
xor
pop
inc
icebp
ins
mov
imul
jmp
sub
je
jns
dec
not
jbe
(bad)
js
sbb
sbb
or
cmp
shr
push
rcr
adc
mov
retf
jmp
cmp
pop
fcomi
jnp
loop
xor
xor
aaa
mov
sbb
mov
mov
das
outs
add
push
jno
pop
movs
and
mov
sub
dec
daa
call
adc
push
xor
jge
jmp
jl
lods
pop
pop
ret
arpl
mov
add
xchg
cs
idiv
das
psllq
xor
mov
inc
mov
rcr
dec
xor
movs
mov
imul
mov
ds
pop
outs
mov
cmps
(bad)
es
fcmovne
mov
cmps
dec
adc
aas
jle
lods
and
xchg
adc
jmp
or
adc
mov
or
xchg
dec
test
inc
rol
mov
sub
xor
inc
lds
jno
loope
ficomp
sahf
jno
jb
and
int3
push
jg
mov
sub
icebp
sbb
jae
aam
jb
loop
(bad)
popf
jbe
gs
inc
shl
pop
popf
lock
or
test
lahf
sub
fcom
test
sti
adc
rcr
push
popa
mov
fs
mov
(bad)
sub
add
xchg
and
imul
(bad)
in
sub
xor
fist
and
jo
jle
in
stc
imul
fwait
adc
cwde
pushf
push
xchg
cmp
lods
lahf
mov
cmps
pop
or
hlt
sub
aaa
fcom
jno
in
cmp
pop
(bad)
jne
xlat
(bad)
push
arpl
sbb
fcom
mov
stos
ins
test
dec
out
fidivr
iret
cmp
mov
in
icebp
in
mov
xchg
bound
repnz
jb
aaa
test
clc
stos
imul
or
cli
movs
add
mov
mov
imul
jne
cli
call
sub
jle
jmp
stos
dec
popa
ins
outs
sbb
mov
or
pop
mov
loopne
mov
sbb
loop
mov
data16
stos
clc
ret
dec
shr
repz
push
loop
stos
jns
loop
push
test
pop
hlt
pop
jecxz
out
cmp
cmp
cdq
pop
in
lock
int
enter
dec
push
repnz
sub
(bad)
and
movs
aam
cld
jmp
inc
mov
repnz
xor
mul
push
imul
xchg
outs
iret
call
mov
mov
sbb
aas
xor
dec
cli
sub
adc
stos
jnp
xchg
retf
daa
jp
xchg
mov
cmp
lahf
xchg
mov
jne
pop
jns
xchg
cmp
push
sub
int
pop
add
cs
movs
xchg
sub
pop
xor
iret
mov
pop
pop
xchg
iret
pop
push
mov
or
cdq
scas
js
dec
repnz
xchg
cdq
add
ror
cmp
outs
adc
jne
fild
dec
mov
mov
pushf
lods
mov
(bad)
cmp
mov
int3
shr
xchg
mov
loopne
cmp
dec
aaa
push
xchg
mov
cmp
arpl
xchg
int3
sub
xlat
aas
jae
(bad)
cmp
inc
es
and
dec
(bad)
aam
paddb
data16
bound
add
cmp
jge
lock
ret
mov
imul
ins
mov
mov
and
and
xor
sub
inc
add
push
sbb
aad
pop
jecxz
addr16
adc
inc
es
xor
imul
cmp
outs
cmp
test
pop
mov
cs
jnp
xchg
sub
outs
call
cmp
xchg
jae
ja
mov
stc
mov
(bad)
fldcw
js
retf
les
mov
jns
push
and
rcr
es
sbb
inc
int3
mov
xor
repz
test
cmps
fldcw
mov
sti
xchg
fisub
jnp
and
inc
xor
std
test
daa
shl
mov
mov
xlat
ficomp
add
cli
cmp
pop
add
mov
or
jb
out
mov
sbb
pop
in
xchg
jb
xchg
outs
jb
(bad)
cmp
imul
rep
lahf
neg
in
stc
sbb
mov
dec
mov
jno
sbb
add
inc
cs
mov
xlat
fcom
fisttp
jecxz
push
ds
aas
inc
sub
xor
xchg
sbb
adc
push
xchg
aas
je
(bad)
push
mov
adc
loopne
push
dec
sub
xor
mov
push
and
mov
inc
pop
outs
push
jae
loop
fwait
sbb
pop
xchg
jge
mov
lea
shr
jb
sub
fiadd
icebp
mov
nop
cs
mov
and
sub
test
push
inc
sbb
push
ins
inc
cld
mov
test
cmp
out
dec
and
addr16
out
cmp
push
inc
push
mov
cmp
bsr
push
add
add
inc
or
add
push
add
mov
mov
push
add
pop
aas
mov
lahf
out
aaa
shr
push
lock
sub
push
xor
sbb
inc
or
test
sub
push
and
xor
inc
leave
sub
nop
(bad)
aam
mov
add
add
add
push
inc
push
and
bound
lods
xchg
mov
or
add
and
adc
inc
lds
xchg
or
or
add
mov
and
inc
or
add
add
add
mov
(bad)
xor
jle
mov
push
fsubr
jmp
mov
add
jbe
inc
gs
(bad)
push
arpl
sti
mov
dec
les
adc
cmps
out
cmp
mov
loope
mov
cmp
ins
sub
inc
xor
mov
mov
adc
inc
pushf
mov
fdivr
pop
sub
cmp
ret
call
sub
fcmovb
add
cmp
popa
nop
retf
movs
add
out
and
repz
mov
mov
retf
rcr
mov
fimul
and
and
(bad)
lods
mov
cld
pop
add
repz
aad
ds
das
outs
popa
mov
and
sbb
leave
and
out
inc
push
jl
outs
test
jmp
aad
stos
cmp
dec
(bad)
rcl
push
in
pop
mov
sbb
add
out
mov
popa
int3
into
xchg
jl
jae
jp
mov
retf
les
sub
call
fild
add
lahf
into
jae
mov
cmp
cmp
cld
inc
aam
mov
and
push
xchg
out
int3
cwde
int
mov
pop
fwait
imul
and
xchg
addr16
les
adc
js
movs
loop
ja
mov
inc
lea
inc
add
leave
cmp
sub
pop
cmp
out
(bad)
sub
outs
and
jo
jns
cmp
outs
mov
jnp
in
push
nop
jle
cld
xor
rcl
mov
xor
xchg
mov
adc
xchg
or
xor
std
(bad)
xor
sub
ins
leave
push
stos
loopne
push
les
cmps
test
ficom
xchg
out
out
leave
js
mov
pop
fincstp
sub
sub
xchg
fisub
lods
cld
jmp
ds
clc
xor
push
mov
and
jbe
out
sbb
sub
cmp
in
cmp
xor
div
jne
mov
das
dec
mov
sub
(bad)
adc
retf
xchg
data16
fdivr
fs
push
repnz
sub
cmp
les
adc
add
and
dec
les
sbb
add
push
sahf
and
dec
(bad)
cmp
mov
cmp
addr16
cmp
dec
lahf
or
mov
dec
lock
int3
mov
repnz
mov
mov
push
or
leave
xchg
lds
ins
popf
in
sub
ret
cmps
mov
xchg
sbb
call
sbb
dec
jo
(bad)
adc
pushf
mov
mov
xchg
pop
sub
retf
mov
leave
repnz
add
push
inc
(bad)
gs
mov
mov
fwait
mov
add
dec
cli
in
sbb
jmp
fdivr
mov
sub
pop
dec
outs
lods
mov
std
int3
shl
or
pushf
xchg
sti
xor
dec
and
inc
jl
pop
push
sub
push
sar
mov
mov
sbb
aad
int3
mov
dec
(bad)
outs
jo
fcom
cdq
sbb
scas
ret
gs
idiv
xchg
cmps
in
and
enter
and
mov
aaa
retf
(bad)
out
ss
jb
jo
int
addr16
in
xchg
call
(bad)
dec
xchg
jbe
jp
out
jns
mov
addr16
mov
sbb
sar
movs
test
mov
ja
and
test
mov
mov
adc
push
cmps
jbe
jmp
stc
in
call
xor
pushf
fld
adc
cs
sbb
and
dec
xchg
xchg
mov
data16
sbb
cdq
idiv
xor
mov
data16
test
sub
cmp
mov
div
sub
arpl
(bad)
mov
in
mov
cmp
daa
std
shr
pop
xor
mov
jg
sbb
addr16
aas
mov
mov
mov
mov
mov
test
pushf
push
mov
xchg
in
fisttp
xchg
cmp
mov
ins
pop
jnp
inc
(bad)
cmp
add
fimul
xchg
inc
or
(bad)
push
sbb
mov
mov
pop
jmp
sbb
pop
xchg
cdq
dec
ins
rcl
and
loopne
jge
movs
dec
aaa
das
pushf
(bad)
fcom
sar
mov
sbb
mov
pop
fcmovu
dec
cmp
ins
pushf
mov
dec
sbb
int3
call
dec
ror
inc
stc
adc
call
(bad)
inc
add
xchg
shl
in
pop
pop
nop
mov
icebp
dec
test
ins
or
scas
adc
push
or
xor
scas
(bad)
fistp
jg
sub
rcl
shl
repz
mov
sub
inc
sbb
or
mov
lahf
pop
mov
jge
pop
xchg
sbb
arpl
mov
push
outs
jns
dec
es
sbb
xchg
jecxz
push
(bad)
(bad)
fild
cmc
stos
xor
mov
xor
adc
fucom
and
jo
out
inc
pop
scas
loope
in
dec
fwait
xchg
cli
pop
icebp
pop
xchg
jp
lods
imul
jmp
dec
sti
jae
jmp
iret
(bad)
jge
mov
out
mov
mov
test
pop
into
in
ds
cmp
fidivr
int
mov
pop
ret
(bad)
mov
ja
fld
outs
data16
push
sbb
loope
addr16
outs
mov
xor
fnstcw
add
fs
std
sti
xchg
jbe
mul
jge
mov
ds
shl
dec
push
or
add
jno
and
dec
sbb
test
add
push
add
add
push
add
add
add
push
add
mov
inc
jno
rcr
or
sbb
sbb
jne
inc
mov
jbe
add
lds
push
fcom
sub
in
push
add
ret
lds
adc
ds
(bad)
xor
xchg
or
add
sbb
arpl
inc
adc
inc
bound
inc
or
add
nop
or
mov
xor
mov
push
add
nop
or
or
add
lds
jl
icebp
sahf
cmps
movs
ret
imul
out
gs
xchg
xor
(bad)
into
mov
push
push
out
aaa
enter
nop
or
rcr
push
pop
lock
retf
sub
in
out
mov
outs
cmp
out
push
jne
data16
nop
cmp
lods
mov
call
(bad)
imul
iret
(bad)
(bad)
xor
pop
push
aam
mov
jnp
and
fwait
je
shl
fs
retf
sbb
fmul
pop
push
dec
arpl
pop
push
xchg
cmc
inc
mov
pop
mov
mov
fst
pop
sbb
or
fisttp
push
cmc
cli
je
sub
mov
in
cli
dec
daa
(bad)
in
push
out
sahf
fcmovu
fmulp
cmp
repz
xchg
rol
mov
and
add
scas
out
xlat
imul
xlat
lock
jp
mov
fwait
pop
int3
shr
pop
stc
inc
mov
pop
jns
xor
adc
inc
or
test
mov
lds
loope
cld
jmp
mov
pop
pop
(bad)
(bad)
jb
stc
jmp
fs
xchg
sub
repnz
cld
pop
icebp
das
in
stc
jne
fstp
ffreep
sub
xchg
xor
inc
pop
adc
mov
rcr
adc
rcl
or
mov
or
push
ror
sub
fstp
(bad)
in
test
and
sbb
mov
mov
jg
loop
dec
lods
arpl
lock
stos
adc
and
xor
push
inc
mov
das
(bad)
rcr
movs
das
sub
mov
out
je
cmp
jbe
cmp
mov
dec
jecxz
cmps
test
cmp
movs
xchg
lods
push
pop
mov
lea
js
xchg
cmp
rol
inc
inc
cli
jne
mov
push
xchg
adc
cmps
outs
fiadd
mov
pop
jb
push
cmp
dec
mov
into
cld
pop
lods
jg
call
pop
fimul
enter
and
test
aas
xor
adc
arpl
sbb
sbb
dec
movs
add
sbb
sahf
jmp
or
add
jns
xchg
xchg
stc
add
jbe
out
jge
add
imul
lahf
sahf
loop
push
dec
int
or
pop
sub
shr
loope
cli
add
arpl
out
mov
je
pop
gs
aaa
add
xchg
adc
push
ja
(bad)
push
mov
jmp
aas
retf
pushf
popf
mov
jle
cmp
imul
(bad)
or
ds
(bad)
test
lock
inc
movs
pop
pop
fld
cmp
in
nop
bound
imul
adc
mov
out
pushf
int
mov
aas
or
inc
data16
cdq
lea
sub
or
and
or
(bad)
jmp
int3
outs
dec
imul
mov
mov
das
les
mov
dec
not
dec
pop
and
push
pusha
fs
pop
push
push
xchg
pop
sbb
adc
lods
dec
adc
or
cmp
cld
jmp
jb
xchg
xchg
pop
outs
lock
enter
shl
pop
mov
mov
dec
hlt
mov
out
push
xor
push
fwait
xchg
or
lahf
dec
loopne
iret
xor
mov
fnstenv
bound
mov
pushf
ins
xchg
pop
mov
cld
sub
movs
sbb
mov
xlat
cli
std
jno
sbb
ror
aas
jecxz
inc
mov
call
ds
out
mov
jmp
inc
cmp
and
sbb
cmp
out
pop
mov
jmp
lods
shr
mov
popf
add
arpl
out
or
pop
mov
mov
inc
sub
rol
adc
push
icebp
int3
rol
xor
xlat
or
loopne
mov
and
out
ficomp
mov
mov
mov
cmp
sub
mov
adc
in
pop
sub
imul
mov
jp
daa
xlat
(bad)
cli
into
sub
sbb
mov
jbe
pop
pop
outs
iret
rol
pop
cmp
aad
sub
inc
popf
mov
aas
retf
cld
sub
addr16
mov
and
adc
clc
inc
test
pop
dec
imul
out
dec
ja
arpl
div
les
xor
outs
fnsave
xchg
xchg
pop
js
push
bound
sahf
arpl
fs
(bad)
xchg
cmp
add
imul
mov
adc
ds
mov
fld
shl
ins
xchg
ss
xchg
ins
out
pop
or
pop
dec
mov
dec
shl
xchg
inc
push
das
pop
int
rol
pop
sbb
inc
cmp
cmp
loop
add
sbb
iret
pop
movs
retf
fs
jecxz
cmp
iret
or
imul
ds
clc
mov
push
xor
jmp
xchg
fcmove
sbb
mov
imul
cmp
and
out
sbb
and
cmp
xor
and
pushf
mov
jp
cdq
test
pop
dec
or
mov
mov
mov
repz
popa
mov
mov
movs
mov
mov
enter
xor
jno
ins
xor
and
push
je
int
repnz
int3
mov
adc
mov
add
inc
add
add
add
push
add
and
sti
mov
jbe
dec
test
add
nop
ret
inc
lds
or
add
xchg
mov
inc
add
inc
or
inc
push
mov
push
movs
add
mov
push
push
and
mov
dec
or
test
cmps
add
mov
sub
push
mov
sub
dec
push
adc
or
sbb
pop
push
add
or
adc
add
add
xor
ret
add
pop
inc
jle
jmp
icebp
mov
mov
mov
ins
mov
ret
into
mov
ins
test
cdq
xchg
jae
push
jle
push
adc
push
adc
jmp
lods
lods
cmc
popf
mov
jge
sub
dec
fidivr
retf
xchg
aaa
mov
cmps
and
mov
fidivr
fs
or
cli
aam
in
add
adc
inc
ret
outs
in
fcmovne
rcr
aad
mov
mov
add
retf
add
repz
adc
es
push
mov
out
mov
jno
or
(bad)
push
rcr
arpl
inc
jbe
jle
jecxz
jne
popf
lods
repz
xchg
enter
(bad)
mov
push
pop
jae
dec
cmp
xor
in
lahf
push
mov
mov
sbb
and
les
stos
jl
xchg
bound
shl
scas
xor
jo
xchg
cdq
(bad)
xor
dec
jg
clc
sbb
ret
std
sahf
(bad)
push
jnp
fs
out
in
jbe
inc
dec
lock
fisub
sub
jnp
cld
sub
int3
aas
push
loopne
lahf
test
cli
adc
add
test
mov
shl
mov
xor
call
or
cmps
jnp
and
sbb
jno
xlat
xor
aaa
loop
mov
fsubp
fsubrp
shl
cli
fs
add
jmp
dec
adc
or
out
ss
mov
jno
cmps
daa
adc
adc
cdq
repz
(bad)
in
cmp
inc
cmp
xor
mov
dec
jmp
shr
pop
mov
ss
push
repz
jp
lahf
test
pop
clc
cmp
rcl
sbb
dec
push
mov
jne
sti
mov
add
frstor
aas
(bad)
add
mov
adc
xchg
fwait
sti
inc
idiv
mov
mov
enter
repz
sub
jle
push
push
cmp
aam
fstp
pop
retf
add
out
adc
outs
clc
or
add
add
jae
cli
arpl
(bad)
into
inc
or
sbb
je
cmp
cmp
imul
fs
dec
xchg
push
call
loopne
jnp
push
inc
lods
pop
imul
js
adc
pop
dec
adc
nop
test
movs
not
push
leave
mov
mov
clc
call
int
(bad)
fs
pop
xor
adc
jb
outs
pop
pop
mov
sbb
push
push
mov
fstp
outs
and
mov
rol
or
ret
outs
mov
xor
cmps
mov
mov
rcr
in
pop
xchg
mov
adc
in
das
not
xchg
mov
movs
sub
ret
xor
sbb
scas
bnd
lds
popa
fdivr
dec
lds
jg
rcl
mov
hlt
jns
jne
not
int
call
mov
sub
adc
daa
mov
lods
mov
fs
jle
dec
mov
jg
adc
ds
loopne
pop
inc
into
xchg
out
or
mul
or
jl
sub
add
xchg
out
dec
jbe
loopne
pop
jno
jmp
(bad)
int3
or
fldcw
pop
mov
cmp
popf
mov
stos
push
xor
pop
mov
pop
sbb
pop
lods
(bad)
fdivr
add
mov
jae
jecxz
aad
rcl
pop
out
in
pop
lods
mov
scas
ret
iret
ds
popf
mov
stc
jbe
stos
mov
sub
adc
fcomp
sar
scas
cmp
clc
jns
adc
fs
int
jg
xor
jno
inc
add
mov
scas
jp
cmps
retf
pop
lahf
push
mov
jbe
pusha
inc
(bad)
repnz
jl
hlt
cmp
cmc
sub
daa
mov
repz
dec
mov
add
xor
rol
sar
repz
idiv
pop
hlt
sub
lds
adc
ins
jb
aam
sbb
loope
xlat
scas
xlat
movs
add
(bad)
je
data16
dec
repnz
fidiv
pop
inc
arpl
xlat
mov
scas
add
sbb
jmp
rcr
cmc
add
fidivr
stc
pop
xor
fcomip
sbb
aas
movs
jp
mov
sbb
ja
fsubr
out
mov
loop
and
mov
sbb
(bad)
bound
cmp
and
arpl
sar
jae
iret
(bad)
out
mov
fild
mov
push
and
mov
xchg
push
sbb
scas
pop
fisub
xor
clc
sub
dec
sub
rol
retf
test
xchg
inc
xchg
mov
jle
sbb
pop
dec
imul
cmp
loope
adc
aam
cmp
push
sbb
arpl
addr16
inc
outs
xor
sub
mov
popa
jbe
aas
lds
addr16
scas
mov
inc
pop
xchg
jecxz
in
xlat
and
and
dec
pop
mov
and
icebp
mov
loope
int
ja
shl
js
in
inc
adc
mov
mov
and
ficomp
dec
mov
mov
pushf
daa
inc
fsub
shr
jb
mov
cdq
and
push
sti
inc
add
mov
or
xor
sbb
and
push
add
add
push
add
add
push
add
and
sti
mov
jbe
int
or
sar
push
sbb
inc
push
nop
lds
sbb
add
add
add
dec
(bad)
rol
inc
or
mov
add
or
bound
add
xchg
push
add
adc
adc
adc
sub
pop
push
adc
dec
inc
or
add
push
add
inc
rol
inc
(bad)
push
add
inc
add
add
test
arpl
add
xchg
mov
cmp
loop
out
imul
add
cmc
lea
das
and
(bad)
inc
xor
dec
pushf
push
and
xchg
int
out
add
cmp
comiss
xchg
dec
dec
int
ja
lods
ins
imul
sub
mov
into
and
imul
mov
push
push
or
inc
adc
ds
mov
pop
pushf
add
cmp
shl
fstp
ss
sbb
and
outs
mov
addr16
mov
mov
add
and
popf
loope
xor
mov
call
fnstsw
jo
dec
(bad)
idiv
mov
and
ins
scas
cwde
pop
pop
mov
lock
and
aas
sub
js
(bad)
adc
adc
rol
cmp
pop
sub
stc
outs
mov
stos
mov
repnz
stos
jecxz
in
jge
aaa
sbb
mov
xor
int3
mov
lods
in
xchg
pop
mov
cmp
add
sbb
jle
sbb
jmp
add
clc
push
dec
shl
mov
adc
mov
out
daa
or
dec
in
stos
mov
mov
mov
xchg
xor
sub
inc
ret
add
add
(bad)
cdq
push
test
movs
movs
lods
mov
and
push
or
adc
mov
ret
sbb
xchg
cmp
and
adc
mov
fldcw
outs
xchg
jae
mov
add
or
pop
(bad)
stos
cmps
adc
aas
or
jno
outs
jbe
inc
addr16
xor
imul
push
inc
popf
add
mov
sbb
call
mov
out
ins
cli
pop
dec
clc
mov
lods
leave
sbb
mov
mov
mov
jo
add
xchg
fcmovne
shl
loop
mov
lods
pop
ins
hlt
xor
int3
cmp
pop
iret
inc
fsubr
(bad)
push
sub
imul
sahf
xchg
lock
aad
outs
sub
out
sahf
pop
and
sbb
icebp
inc
pop
and
xor
and
cmp
fld
fdivr
out
je
mov
mov
pop
jns
pop
sbb
jns
xor
pusha
aaa
add
and
nop
arpl
mov
icebp
out
scas
ss
cmp
iret
or
add
stc
add
dec
mov
rcr
jns
jbe
pushf
adc
dec
cmp
and
int3
jl
loop
pop
lds
ficomp
(bad)
fcmovbe
cmp
int3
fwait
arpl
out
cdq
and
pushf
in
mov
inc
jae
lock
lods
fiadd
imul
fiadd
std
stos
int
and
cld
leave
popa
(bad)
(bad)
in
push
(bad)
and
lahf
xchg
and
xchg
dec
fdivr
and
loope
inc
cmps
cmp
data16
pop
aas
cs
pop
xor
xchg
sbb
jns
out
jle
loopne
outs
push
icebp
push
mov
push
mov
push
mov
in
bound
cwde
inc
mov
sti
mov
call
jg
dec
jmp
clc
xchg
(bad)
pop
and
data16
hlt
cmp
hlt
cmp
rol
fidiv
mov
mov
pop
fdiv
fisttp
mov
jl
scas
aam
in
mov
dec
stc
jnp
scas
sbb
call
in
(bad)
(bad)
cli
(bad)
and
in
sbb
and
bswap
mov
inc
jno
daa
imul
mov
cmp
cmp
add
ror
push
dec
lods
rol
call
enter
sar
test
cmp
jl
xchg
sub
iret
adc
imul
ret
mov
gs
or
fwait
xchg
or
sbb
or
fldlg2
mov
push
mov
in
fisttp
je
inc
bound
adc
mov
cmp
loop
or
in
(bad)
and
adc
cwde
bound
xor
popf
leave
pop
repz
in
inc
iret
inc
jge
iret
(bad)
cs
cwde
ss
cdq
sbb
mov
in
jp
pop
inc
icebp
outs
les
fisubr
push
xor
inc
xor
push
mov
in
in
sub
test
cdq
sahf
ins
int
dec
jecxz
mov
icebp
push
cmc
push
popf
popa
push
jb
stc
mov
in
xchg
out
mov
xchg
jecxz
mov
and
mov
addr16
xchg
in
mov
mul
adc
and
cmp
scas
in
sar
jl
mov
mov
xchg
(bad)
sub
mov
movs
pop
mov
and
retf
adc
mov
nop
inc
scas
xchg
mov
test
not
xor
ins
hlt
iret
adc
ja
jmp
push
inc
jae
push
or
jp
shl
jns
sbb
imul
and
pop
fcomp
mov
imul
fidiv
in
aam
fimul
push
jb
sti
in
movs
jge
pop
bnd
sti
mov
mov
ret
inc
sub
jnp
push
aad
dec
icebp
rcl
adc
sub
nop
push
aas
cmp
fwait
inc
scas
js
shl
iret
frndint
inc
movs
jge
add
cs
out
sbb
mov
test
sbb
pop
inc
xor
retf
mov
xchg
nop
hlt
xchg
xor
sub
mov
sub
mov
dec
inc
imul
and
iret
xlat
mov
mov
jmp
jmp
inc
or
dec
add
push
add
or
sub
mov
inc
rol
push
and
les
adc
push
or
or
or
add
add
add
sub
push
add
add
push
add
dec
popa
inc
or
inc
les
mov
cmps
mov
cmp
pop
inc
pop
iret
jbe
jb
daa
fwait
sbb
cmp
sbb
jl
push
mov
sub
cld
cwde
xchg
loope
aad
and
fs
push
outs
sub
push
stc
inc
add
cmp
mov
cmp
inc
dec
(bad)
pop
sbb
inc
mov
in
cld
pop
(bad)
xchg
enter
fisttp
adc
loop
data16
in
dec
cmp
aas
mov
mov
scas
jg
in
out
ins
(bad)
cmp
mov
jb
mov
add
outs
iret
es
in
and
mov
mov
cmc
scas
mov
cld
icebp
clc
fimul
mov
jmp
mov
stos
jb
setns
inc
and
add
mov
push
mov
push
or
mov
mov
xor
push
jne
repz
xchg
adc
xor
in
scas
dec
lahf
mov
cli
adc
add
add
add
xchg
add
iret
ficom
xor
pop
xchg
add
cli
mov
and
test
div
cmp
pop
hlt
mov
aas
cmp
dec
repz
in
pop
push
loope
gs
imul
aaa
aam
sub
inc
pop
cmp
out
xchg
push
xchg
clc
not
scas
lock
out
aaa
cmp
mov
mov
iret
neg
retf
fwait
xchg
dec
jnp
fwait
movs
push
mov
pop
shl
add
bnd
jne
out
aam
out
ret
lahf
adc
pop
push
in
xor
fdivr
mov
sub
push
aaa
or
inc
jnp
int
xchg
dec
lods
div
mov
(bad)
sub
lahf
daa
int
(bad)
or
mov
jb
dec
mov
push
rcr
jecxz
xchg
or
xlat
mov
cmps
ficomp
mov
in
ds
cmps
int3
(bad)
ret
clc
clc
lahf
je
jle
in
test
pusha
fcomp
sub
jecxz
xchg
in
xchg
in
mov
mov
xor
pop
call
mov
xor
icebp
ds
mov
mov
mov
dec
push
inc
out
lea
push
imul
adc
push
lea
jle
(bad)
cmp
repz
push
mov
je
addr16
ins
and
sbb
popf
and
dec
fidiv
outs
jns
data16
daa
sbb
shl
(bad)
mov
pop
dec
push
jp
ret
jmp
mov
or
fld
push
ja
repz
sbb
int
hlt
mov
ins
into
retf
cli
fnsave
in
retf
push
xchg
js
inc
jo
or
xchg
xor
sbb
inc
scas
pcmpgtd
jl
lods
clc
sub
cli
pop
mov
aad
sbb
dec
dec
cmp
loop
(bad)
and
mov
sub
repz
jo
cmp
pop
(bad)
cld
jne
pop
pop
fwait
and
cmc
pop
lods
aad
in
xchg
mov
fidivr
(bad)
jb
adc
clc
mov
xchg
dec
ret
sbb
mov
es
repnz
movs
sti
cmp
arpl
sbb
dec
gs
sahf
and
pop
sub
in
(bad)
xor
push
pop
push
cmp
daa
pop
popa
adc
es
repnz
xchg
icebp
mov
add
mov
stos
sbb
xchg
inc
and
jo
pop
and
rol
cmp
mov
jp
aas
inc
cmp
lock
inc
mov
pop
iret
adc
int
mov
repz
lods
mov
adc
repnz
xchg
add
retf
mov
sti
aas
loope
mov
ret
pop
js
test
mov
jo
and
mov
repnz
jb
(bad)
lods
push
je
retf
pop
inc
inc
scas
pop
jmp
(bad)
xchg
sbb
cs
movs
sub
jle
sub
nop
jns
mov
ins
out
xor
stos
push
fs
lock
mov
or
cmp
popf
and
add
xor
and
and
mov
cdq
ror
mov
shr
and
sar
and
hlt
push
and
stc
leave
push
mov
fcomp
call
xchg
nop
loopne
jecxz
push
or
xlat
xor
push
jmp
aad
loop
data16
cmp
pop
mov
fisub
popa
aaa
daa
fsubrp
mov
out
xor
(bad)
fdivr
pop
pop
mov
fst
mov
dec
inc
xchg
inc
rol
xlat
xor
mov
js
stc
sub
bound
inc
std
fdiv
lds
retf
in
push
add
cmp
mov
cwde
test
cmc
pop
lds
xor
addr16
mov
push
sbb
stos
(bad)
and
outs
stc
sbb
pop
scas
lea
inc
sahf
sbb
ffree
mov
stos
cmps
in
or
iret
loop
cmp
mov
fs
ds
xchg
pop
inc
adc
retf
sub
(bad)
mov
push
out
jmp
into
sub
sar
icebp
sub
mov
mov
mov
xchg
fiadd
pop
retf
cmp
xchg
ins
inc
mov
xchg
inc
ret
aas
retf
xchg
in
push
jp
pop
mov
cs
lods
mov
add
and
btc
test
inc
push
add
ret
dec
stos
loop
ds
mov
sbb
pop
sub
(bad)
mov
mov
loop
xor
mov
fcomp
lock
inc
sub
inc
jbe
push
(bad)
icebp
dec
xchg
mov
sub
cmp
jae
xchg
out
iret
pop
adc
popf
pusha
je
jge
dec
arpl
(bad)
push
sub
push
call
fs
lods
or
push
lods
mov
je
das
and
inc
xor
int3
xor
out
dec
loope
into
ins
outs
add
test
push
inc
dec
shr
sub
jp
add
aad
jno
inc
stos
xor
push
pop
loope
push
or
sub
mov
sub
mov
sub
sub
movs
pop
fst
out
sbb
mov
cli
inc
push
xchg
inc
test
hlt
or
push
cmp
add
mov
adc
push
add
mov
jbe
adc
shl
sub
mov
push
add
add
push
add
add
or
add
adc
and
or
(bad)
adc
pop
xchg
or
add
or
nop
add
pusha
adc
sub
sub
inc
or
add
and
fisub
mov
leave
sub
jg
xor
dec
xor
sub
xchg
push
jae
ret
push
ret
fsubrp
sbb
(bad)
fisub
pop
(bad)
popf
or
lods
arpl
ja
mov
push
retf
rcl
xor
lock
in
int3
cmp
loop
test
dec
bound
jg
sub
dec
js
in
aas
fcompp
xor
ret
gs
or
sub
dec
cdq
mov
dec
in
dec
icebp
dec
(bad)
push
mov
lods
outs
dec
xchg
pop
mov
xchg
jnp
test
mov
push
aam
sti
cmps
push
add
pop
cmps
mov
mov
(bad)
pusha
call
jmp
clc
das
jecxz
push
inc
addr16
int3
add
out
sub
retf
inc
cmps
jl
stc
arpl
aam
fstp
int
jae
push
inc
lock
mov
inc
jmp
push
repnz
sahf
bound
mov
fs
xchg
inc
push
push
inc
dec
std
inc
lds
pushf
adc
push
add
lds
sub
pop
retf
lock
fnstsw
xor
rol
adc
sbb
ss
dec
sbb
(bad)
push
mov
bound
xchg
imul
dec
cmc
mov
cmp
popa
es
ins
jno
mov
cmps
nop
sbb
ins
cmp
sub
sti
mov
pop
xor
clc
push
dec
pop
mov
out
(bad)
cmp
mov
xchg
in
aam
sub
aas
cmp
mov
les
mov
test
rcr
mov
in
and
das
mov
in
cmps
out
fst
test
into
push
sbb
jg
push
jecxz
stc
fcomp
mov
cwde
movs
push
movs
adc
icebp
scas
dec
cdq
in
cmps
mov
aam
inc
push
cmp
jno
sbb
push
ret
cs
sahf
ds
movs
push
inc
jno
adc
adc
and
mov
out
jecxz
lahf
inc
(bad)
(bad)
das
or
mov
shr
or
mov
fwait
out
jge
push
lahf
int
xchg
ds
pop
bound
shr
stc
mov
mov
push
push
xchg
sbb
sub
jae
(bad)
sub
sub
out
(bad)
pop
mov
mov
push
or
(bad)
enter
xchg
xor
sbb
mov
mov
mov
test
inc
pop
mov
fwait
lods
ins
into
dec
(bad)
aam
add
dec
add
xchg
(bad)
jbe
imul
stos
pop
mov
jae
movs
daa
xchg
adc
sahf
jo
jns
jb
outs
aaa
dec
iret
mov
in
sub
ins
jl
sub
scas
nop
mov
repz
cmps
iret
xchg
or
xchg
xor
scas
xchg
ins
test
pop
pop
jmp
fmulp
out
movs
mov
outs
hlt
std
pop
sbb
mov
fld
cld
pause
shr
cwde
fwait
push
fwait
inc
out
xchg
jecxz
mov
mov
dec
idiv
jl
mov
ja
jmp
arpl
mov
in
and
xchg
popf
inc
xor
loopne
sbb
push
mov
mov
pop
xor
out
dec
popa
xchg
sub
xor
in
pop
push
cmc
pop
in
in
repz
xor
xor
and
ins
xchg
xchg
rol
and
pop
(bad)
or
vminss
push
lock
and
lea
push
sbb
mov
out
add
pop
cmp
iret
push
jg
dec
ins
push
pop
cmc
adc
ret
test
jnp
jno
pop
fstp
repnz
ficom
cld
add
cwde
xor
ftst
xchg
out
sbb
cld
dec
imul
sub
jbe
in
(bad)
arpl
jle
cmp
int3
dec
mov
xchg
lds
add
xor
frstor
test
in
mov
aaa
sahf
inc
add
pop
xor
out
sub
xchg
inc
test
or
lods
scas
inc
pusha
bound
push
push
mov
popf
neg
test
bound
popa
pop
(bad)
arpl
ret
dec
mov
inc
in
iret
ins
and
imul
xchg
xor
add
(bad)
xchg
aaa
and
iret
mov
mov
cdq
addr16
outs
push
sahf
and
mov
in
mov
(bad)
ds
enter
jmp
unpcklps
xor
sahf
dec
es
into
push
mov
cmp
inc
cmp
loope
ret
sbb
mov
retf
(bad)
shl
ret
mov
mov
xchg
pop
pop
cmp
and
xor
test
add
mov
lahf
ror
cmp
arpl
mov
movs
movs
inc
cmp
data16
cmp
sub
jp
xor
loop
push
iret
push
shr
sti
mov
pop
ffree
icebp
dec
cmps
rol
push
mov
push
push
rol
xor
push
inc
mov
push
sub
mov
push
repnz
outs
and
mov
sub
dec
or
cmc
retf
push
repnz
push
pop
mov
std
mov
jp
ss
test
in
repz
test
xchg
repnz
leave
sbb
retf
mov
push
loopne
enter
cmp
std
xchg
jnp
ins
push
test
(bad)
call
mov
stos
xchg
std
fcom
add
(bad)
dec
(bad)
sub
ret
sahf
sbb
xlat
jl
mov
push
xor
cmp
jbe
leave
adc
out
dec
loopne
frstor
(bad)
data16
inc
sub
or
div
loop
ror
(bad)
imul
lds
sbb
sub
loope
sar
add
cmp
mov
xchg
fwait
std
ds
aam
mov
mov
call
jb
ds
cmp
xchg
inc
jns
mov
cmp
scas
shr
fstp
xchg
mov
or
repz
repz
pop
mov
repz
data16
or
sub
mov
sub
mov
sub
mov
popa
mov
scas
push
mov
mov
xchg
fidivr
shl
push
add
rcr
xchg
and
nop
add
push
adc
mov
mov
jmp
or
sub
sub
cmp
pop
add
add
or
add
mov
test
or
push
or
sub
mov
adc
sub
mov
sub
mov
push
add
inc
add
dec
push
and
jl
jecxz
dec
sbb
pop
inc
imul
retf
gs
(bad)
sub
xchg
mov
gs
in
push
in
cli
mov
lahf
cdq
pop
fbstp
ds
cmps
dec
scas
lahf
cs
mov
(bad)
sub
pop
dec
and
xor
sub
scas
xchg
add
cmps
inc
arpl
shl
dec
xchg
movs
les
scas
pop
mov
mov
pop
and
fsubr
and
lahf
xchg
aad
retf
lahf
mov
or
push
icebp
sub
inc
mov
leave
ja
mov
pop
cwde
adc
jo
dec
add
xchg
xchg
iret
pop
add
fsubr
out
dec
aaa
dec
sub
dec
mov
loop
adc
add
mov
mov
adc
outs
fdivr
inc
mov
daa
mov
pop
pop
xor
mov
add
pop
mov
bound
imul
jp
mov
cmp
scas
cmp
aam
cmc
out
pop
call
jns
jns
jae
sub
int3
aas
js
arpl
pushf
inc
or
in
or
add
(bad)
jmp
jp
and
jl
icebp
stos
dec
or
outs
and
pop
dec
and
cmps
repz
mov
imul
fwait
mov
shr
cmp
push
sub
scas
ror
or
or
test
cld
out
outs
sub
(bad)
jecxz
sbb
sub
mov
mul
mov
xchg
in
cmps
and
add
neg
mov
cmp
pop
outs
movs
(bad)
(bad)
mov
jle
jo
aas
das
pop
sub
popf
pop
(bad)
loop
inc
inc
lea
fdivr
clc
daa
enter
arpl
fcmovne
test
retf
sub
jne
movs
gs
hlt
sbb
dec
dec
sub
cmp
cmps
pop
enter
int
into
pusha
mov
imul
and
sbb
(bad)
(bad)
int
lods
sbb
mov
lock
fwait
popa
shl
jmp
xchg
ja
xchg
adc
jg
mov
outs
out
scas
jg
fisub
int3
std
push
cmp
mov
icebp
outs
les
rcr
or
push
and
xor
mov
sub
cmp
fsub
out
cmp
xor
gs
movs
movs
mov
cmp
cmp
int3
xchg
push
aaa
pop
push
arpl
(bad)
mov
mov
cmp
cmp
pushf
fs
mov
mov
inc
jecxz
mov
dec
mov
daa
cdq
push
dec
test
fld
enter
loop
xchg
fdivr
stos
cmp
int3
ror
push
jo
add
pop
mov
cmps
jb
outs
ss
enter
sahf
xchg
dec
(bad)
mov
mov
pop
aas
jmp
popf
mov
or
bnd
movs
(bad)
sbb
xchg
inc
mov
(bad)
add
push
xor
movs
xchg
into
test
test
iret
in
pusha
out
jae
enter
aas
or
es
pop
cmp
iret
cmp
pop
fld
out
fldenv
jns
adc
mov
(bad)
pop
mov
xchg
mov
inc
daa
int
rcr
push
jp
cmc
aas
fld
push
arpl
ins
shl
js
addr16
imul
ins
sbb
ret
retf
icebp
into
stos
jnp
or
push
xchg
pop
mov
sbb
pop
out
add
jecxz
retf
(bad)
das
mov
psubsw
mov
sbb
je
inc
sub
jecxz
inc
inc
dec
pop
or
in
mov
into
jp
test
jmp
outs
(bad)
int
push
mov
popa
imul
xchg
adc
push
cmp
pop
and
jbe
mov
outs
sbb
mov
adc
fstp
repnz
jbe
dec
xchg
nop
stos
mov
mov
mov
dec
movs
imul
movs
fmul
test
xor
xchg
sti
mov
jg
xor
mov
push
dec
pop
jb
dec
jo
jle
push
in
and
(bad)
jmp
outs
cmp
mov
out
aad
imul
cld
sbb
jmp
jmp
jno
loope
xor
xchg
pop
jle
jae
test
stc
popf
jbe
push
js
lea
push
xor
cs
aaa
dec
sub
sbb
pushf
loop
jp
sti
shl
and
xchg
imul
rcl
mov
mov
sub
dec
xor
out
clc
imul
addr16
pop
mov
xchg
and
jns
xchg
lds
test
lods
idiv
mov
mov
xchg
cmp
mov
cmp
pop
out
or
outs
hlt
jmp
adc
mov
pop
pop
jns
movs
mov
into
or
mov
mov
xchg
push
aam
inc
movs
ret
sbb
in
pop
jmp
xor
rol
mov
ret
cdq
sbb
xor
cmp
gs
movs
fadd
xchg
rcr
js
mov
and
push
sub
icebp
ret
xor
mov
int3
or
mov
fisubr
lods
cmp
ja
lahf
pop
clc
pop
pop
mov
dec
sbb
mov
pusha
or
out
test
cmps
icebp
xchg
sar
jecxz
pop
and
rcl
test
mov
adc
inc
lods
ror
retf
aas
or
sbb
xchg
fimul
mov
and
into
int
or
mov
arpl
push
push
cmp
imul
in
rcl
pop
cwde
lock
and
pop
inc
jl
repz
inc
xor
aaa
ss
ficom
dec
out
mov
imul
nop
cmp
mov
push
mov
dec
jl
icebp
push
test
xor
movs
stos
gs
xchg
fwait
jnp
sti
fldenv
imul
mov
je
aad
out
add
scas
mov
cs
mov
cmp
sti
iret
gs
inc
or
cld
xchg
in
mov
out
ja
add
in
outs
faddp
dec
shl
pop
cmps
mov
push
in
xor
gs
mov
ins
pop
xchg
mov
lahf
test
cld
mov
popa
pop
adc
cwde
ret
(bad)
pop
popa
in
enter
test
cmp
imul
clc
jnp
xlat
inc
lock
fucomi
call
(bad)
push
loop
aam
jl
or
push
out
push
in
jp
dec
lahf
inc
(bad)
cmps
inc
jecxz
in
pop
lock
loop
cmp
(bad)
ror
dec
jl
xchg
(bad)
hlt
jbe
pop
mov
test
mov
mov
scas
loop
daa
dec
repnz
cli
frstor
jmp
push
cmp
sahf
cmp
jno
shl
cmp
hlt
sbb
montmul
cmps
add
add
push
add
add
push
add
add
push
add
call
cmp
call
push
add
push
pop
inc
or
push
and
inc
(bad)
push
adc
push
or
sub
mov
sub
mov
adc
sub
mov
add
mov
add
add
add
shl
and
mov
xlat
in
cli
sahf
test
dec
lods
fld
arpl
or
pushf
push
cmps
call
arpl
test
daa
data16
or
mov
stc
loop
call
pop
repz
jno
lods
and
and
mov
add
rol
inc
add
mov
ja
stos
pop
test
loopne
in
add
xchg
rcr
inc
repnz
imul
pop
cmp
add
lock
out
and
js
int3
jg
inc
mov
add
pop
jecxz
inc
sar
sbb
aas
xor
scas
jno
push
call
pusha
mov
nop
daa
sub
or
retf
sti
leave
fs
mov
fcomp
and
sbb
and
not
in
call
jecxz
mov
stc
xchg
xor
fwait
inc
ins
enter
and
push
psubsb
(bad)
xor
push
cli
lahf
mov
sbb
lea
ins
sub
mov
das
aad
and
arpl
lahf
cmc
jno
mov
scas
xlat
mov
movs
daa
jns
push
js
lds
fwait
jge
jp
xor
sbb
jmp
jno
clc
push
popa
loope
arpl
sub
push
cmp
lds
sbb
cdq
cmp
mov
add
imul
pusha
ins
(bad)
retf
mov
fstp
inc
push
jle
(bad)
outs
xchg
int3
jbe
xchg
ffree
adc
iret
pop
jg
pop
cld
push
ds
aam
and
cs
outs
jecxz
mov
(bad)
fistp
xlat
jbe
jmp
(bad)
adc
aam
jge
push
hlt
into
inc
inc
mov
(bad)
bound
inc
outs
jb
cmp
sbb
sub
stc
arpl
stos
pop
sub
mov
test
or
retf
pop
adc
xchg
pop
fstp
adc
mov
mov
bound
mov
shr
mov
in
ror
mov
mov
sbb
pop
(bad)
ret
add
mov
dec
inc
lock
mov
pop
fcmovne
mov
add
lahf
jbe
pop
inc
add
pop
sahf
ss
xor
rcr
jae
jb
and
add
xchg
(bad)
push
(bad)
outs
adc
mov
jl
cmp
mov
sub
mov
xchg
sbb
retf
das
jbe
in
push
push
test
pop
dec
arpl
popf
ja
xchg
inc
jo
mov
fnstsw
shr
(bad)
mov
nop
stos
aas
leave
mov
pop
je
inc
das
sbb
outs
(bad)
dec
mov
sub
mov
xor
test
into
xchg
enter
retf
sahf
popa
xchg
cmp
ss
outs
out
sbb
idiv
dec
(bad)
sub
loop
xor
hlt
mov
(bad)
std
lods
call
std
mov
xchg
loope
jnp
add
sbb
pop
xchg
dec
(bad)
retf
xchg
cmps
(bad)
aam
lea
popf
add
adc
xor
xor
ficomp
mov
xor
aas
jnp
xchg
or
pop
dec
mov
out
iret
cmps
xchg
and
loop
jge
dec
mov
ins
in
fcmovnu
cs
xor
jb
shl
dec
aas
das
pop
mov
movs
out
dec
adc
jne
les
fadd
jbe
mov
jbe
inc
repz
in
jno
lods
jp
mul
fidivr
(bad)
out
test
fimul
ss
or
add
sti
cwde
pop
ins
xor
and
test
mov
not
mov
push
inc
arpl
retf
not
jmp
mov
xor
imul
rcr
aas
fistp
push
nop
retf
mov
fdivrp
lahf
addr16
cmp
std
add
jl
ds
inc
mov
fdiv
mov
cld
lods
jns
jnp
movs
dec
inc
retf
es
jl
pop
jnp
aaa
int3
aad
lock
out
das
fstp
adc
loopne
dec
sbb
retf
mov
fisubr
add
mov
push
shl
enter
imul
xchg
add
inc
cmp
mov
jl
mov
dec
ss
jecxz
loopne
mov
ds
cli
push
ja
cs
mov
fwait
pop
fnstenv
sbb
xor
inc
out
jnp
repz
sbb
iret
cs
jbe
or
aas
aas
jb
dec
push
loope
call
dec
ror
mov
retf
xchg
sub
clc
pop
xlat
push
add
ja
imul
cmps
xor
sbb
hlt
mov
setge
xor
repnz
cmp
and
stc
fwait
out
lds
pop
adc
int3
pusha
faddp
sar
ds
cmp
push
inc
cmp
lods
cmp
xor
mov
and
stc
sub
pop
pop
or
test
sbb
repnz
pop
test
xchg
cmp
adc
loope
push
dec
fdivr
mov
cmp
or
xchg
imul
mov
cmps
retf
adc
fnstsw
pop
mov
inc
in
adc
arpl
js
dec
and
iret
mov
mov
inc
aas
gs
loopne
xchg
jle
push
xlat
mov
push
test
repnz
jnp
pop
inc
retf
out
pop
js
ret
(bad)
sbb
or
bound
mov
fwait
ins
mov
les
sbb
or
loopne
ror
mov
shr
not
xchg
mov
gs
mov
(bad)
mov
dec
jl
mov
or
xor
lock
jbe
loope
loope
cwde
mov
sar
imul
icebp
lock
push
aam
imul
push
loop
mov
inc
or
nop
(bad)
(bad)
mov
stos
gs
jno
mov
jb
into
adc
and
pop
shl
pop
test
and
das
sub
mov
add
jge
js
jns
out
mov
leave
test
mov
pop
mov
adc
scas
rol
lds
out
test
test
out
push
cmp
leave
mov
xchg
ins
ins
test
or
xor
(bad)
push
push
jno
cmp
enter
mov
(bad)
mov
jecxz
xchg
lea
imul
cmp
icebp
fist
xchg
and
jge
es
int
push
pop
lock
repz
jne
fisttp
std
mov
mov
jg
push
fdivr
lahf
pushf
mov
cdq
inc
jne
cdq
mov
ins
jg
inc
jno
icebp
mov
fbld
lahf
(bad)
mov
sar
xor
scas
xchg
sub
(bad)
mov
rcr
mov
xor
es
and
jmp
test
leave
dec
dec
mov
cmp
rcl
loopne
dec
mov
pop
mov
mov
push
dec
push
fdivr
and
and
and
mov
fcomi
lahf
cwde
jnp
mov
jnp
cmps
fdivr
dec
(bad)
call
xchg
push
or
stos
clc
shr
and
fist
jae
int3
mov
sbb
ds
jp
xlat
mov
sub
cmp
and
xchg
hlt
fcom
inc
inc
repz
ins
test
push
repz
cmp
or
push
repnz
int3
lods
adc
aad
jbe
aas
mov
inc
mov
ins
or
mov
and
aad
xchg
(bad)
into
fbld
jle
ja
mov
inc
add
adc
iret
imul
xchg
sbb
jp
cmp
mov
add
iret
(bad)
loope
out
loop
outs
jmp
popa
push
repz
mov
sar
sbb
or
shl
jnp
in
gs
js
add
inc
add
add
add
push
add
add
ret
mov
lods
pop
fst
je
adc
sub
test
sub
cli
or
or
add
inc
add
add
add
push
add
add
xchg
add
add
mov
adc
pop
add
cmc
pop
jecxz
addr16
rcl
in
and
pop
xor
push
jo
js
sub
dec
clc
mov
(bad)
imul
js
inc
adc
(bad)
fdivr
mov
mov
test
ins
jg
dec
or
sub
aas
mov
inc
adc
vminpd
clc
xchg
iret
mov
ds
inc
or
into
loopne
mov
leave
cmp
sbb
mov
test
ds
ins
icebp
out
out
retf
dec
inc
add
xchg
jle
fadd
inc
jnp
xchg
repz
in
or
shl
jl
mov
imul
(bad)
fdivr
pop
and
xor
cmp
in
sub
scas
mov
sub
cmp
addr16
xchg
inc
cmc
jle
js
jmp
or
sub
mov
ins
add
or
outs
mov
jb
mov
(bad)
cdq
mov
rcr
xchg
add
sub
push
(bad)
mov
scas
test
pop
xor
lahf
lods
ds
jae
lods
pop
movs
ja
lds
lds
inc
and
push
inc
gs
xor
out
pop
add
shl
imul
ds
outs
or
cmps
in
pop
mov
sub
mov
xchg
sub
fnstcw
in
cmp
scas
lds
shr
loope
shr
lds
push
fcomp
jo
repnz
mov
mov
push
ror
outs
cwde
push
mov
loop
das
ja
std
dec
shl
sbb
mov
(bad)
fnstsw
in
push
mov
aad
dec
jae
div
je
inc
inc
add
add
cmps
(bad)
sahf
sbb
das
cmps
mov
sub
ds
jb
inc
sbb
xor
pop
jns
add
cmp
add
push
push
mov
loope
push
jmp
mov
mov
pop
sbb
ins
in
pusha
jb
xchg
and
dec
mov
mov
data16
pop
mov
retf
mov
or
cmp
jnp
iret
loope
cdq
sahf
ins
scas
jmp
jle
jg
jmp
push
icebp
cmps
repnz
fucomp
cli
xchg
inc
pop
jmp
idiv
lahf
lahf
xchg
aaa
sub
sub
and
mov
mov
jmp
(bad)
sub
mov
pop
fmul
in
sbb
adc
and
sbb
inc
push
push
inc
push
icebp
(bad)
mov
or
int3
sbb
int
and
shl
pop
pop
into
mov
inc
or
add
push
push
into
jbe
push
xor
addr16
and
xlat
jbe
lea
mov
xor
in
mov
jbe
xor
or
cwde
jg
cmps
cs
lahf
or
jb
clc
mov
xor
scas
cld
mov
fadd
sub
jb
shr
aaa
enter
push
pop
jle
mov
jle
int
std
sbb
fst
mov
ins
xor
inc
das
cli
pop
ret
into
gs
push
pushf
ins
mov
push
jb
int3
xor
aaa
addr16
loope
lods
loope
adc
imul
sub
scas
sub
mov
popf
mov
ds
and
xor
aad
cmp
pop
mov
cmc
aaa
data16
icebp
adc
mov
mov
and
es
mov
xchg
mov
fcomp
push
retf
out
xchg
mov
jecxz
jle
push
sti
pushf
cmps
movs
cld
cmp
pop
scas
ret
xor
cdq
cmp
loop
repnz
repnz
pusha
xchg
mov
mov
xor
and
adc
xchg
arpl
and
push
jle
jnp
xchg
fidiv
imul
cmp
in
mov
cmps
fimul
sbb
mov
jp
in
iret
mov
loope
mov
jmp
imul
jb
fmul
sbb
mov
out
repnz
lahf
mov
out
rcl
mov
fsub
dec
mov
xchg
or
mov
mov
ss
inc
(bad)
repnz
test
test
jle
dec
mov
out
clc
dec
rcl
data16
pop
mov
lds
or
xchg
mov
xlat
retf
xchg
std
pusha
jbe
mov
iret
mov
(bad)
je
push
sbb
daa
shl
or
add
pop
pop
push
fs
rcr
jmp
gs
sub
xchg
sahf
movs
add
hlt
xlat
out
and
jp
(bad)
clc
push
lock
or
mov
gs
mov
lds
das
ins
ins
mov
add
arpl
sahf
inc
dec
xchg
xchg
shr
xlat
lds
push
icebp
mov
jmp
jo
cli
movs
int
sahf
stos
cmps
fld
pop
fmul
push
fcmovu
and
jns
xchg
sub
xchg
idiv
outs
cwde
pop
dec
neg
(bad)
sbb
movs
cmp
psrlw
movs
sub
(bad)
pop
mov
mov
(bad)
iret
jae
fst
inc
lock
fadd
lea
pop
pop
lds
cwde
loope
xor
repnz
mov
idiv
add
lods
fcomp
sahf
xchg
add
mov
cld
retf
xor
movs
xchg
and
mov
repnz
mov
cli
dec
jp
xchg
mov
and
popf
sub
imul
jns
mov
stos
mov
cmp
sbb
push
adc
sub
sub
push
pop
lods
ret
out
or
fstp
out
data16
les
imul
xor
add
addr16
jmp
and
pop
mov
fist
add
jmp
sahf
(bad)
popf
aam
out
jle
icebp
cmps
mov
adc
push
inc
gs
js
push
out
outs
push
stc
mov
lahf
cs
lds
loop
lods
cmp
lock
ret
mov
ds
dec
sahf
(bad)
jae
jne
lahf
cdq
ins
or
add
mov
out
jle
lahf
imul
ret
outs
fcomp
xchg
movs
push
out
fisub
push
mov
cdq
xchg
inc
ins
imul
iret
ins
mov
cmps
inc
pop
fcmovne
jno
push
mov
cmp
inc
ins
lods
es
sub
or
out
aad
inc
aas
pop
xor
not
fiadd
mov
fimul
xchg
fwait
sbb
add
and
fwait
int
out
repnz
lods
xor
jmp
mov
jns
push
sar
jb
scas
lods
mov
jl
mov
stos
scas
loope
jb
bound
and
dec
pusha
mov
data16
retf
cmp
jl
xchg
or
or
retf
pop
add
xchg
pop
dec
bound
movs
mov
repz
int
xor
xchg
inc
and
int3
cmps
sbb
pushf
in
sub
popa
popa
stos
addr16
and
push
xchg
fstp
inc
sbb
push
dec
movs
sbb
mov
retf
pop
push
or
sbb
mov
sahf
das
sub
cmp
repnz
mov
aaa
sub
mov
retf
jp
hlt
fwait
xor
xor
es
sahf
dec
adc
xchg
sbb
and
sbb
aas
mov
push
dec
fist
arpl
adc
xor
push
dec
mov
popa
mov
out
pop
fstp
or
ficom
gs
test
daa
fcmove
mov
adc
rol
std
mov
xchg
mov
cmp
cmp
aas
sub
cmp
mov
mov
stc
leave
and
popa
xchg
sub
out
xcrypt-ofb
cmps
test
inc
sbb
jae
dec
jge
xchg
xchg
xor
mov
mov
xor
push
sub
fwait
inc
sub
jbe
sbb
mov
movs
sbb
aam
das
sbb
adc
inc
jmp
push
dec
jg
repz
xor
(bad)
jmp
mov
rol
sub
sbb
in
mov
xchg
js
(bad)
lahf
fdecstp
jp
fmul
sub
popf
ret
lea
iret
mov
in
jns
cmp
icebp
sbb
out
stc
and
outs
and
pushf
outs
iret
aam
add
loop
adc
push
dec
push
jg
pop
mov
add
sahf
dec
sub
xor
mov
stc
outs
sti
scas
sbb
js
and
sti
push
out
lds
xor
lea
ret
shl
stc
shl
dec
mov
(bad)
int3
mov
mov
mov
mov
jmp
(bad)
pop
add
xor
sbb
add
inc
add
add
add
push
add
add
sbb
add
inc
jb
mov
xchg
pop
inc
add
jne
push
mov
add
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
push
or
sub
test
ret
xchg
mov
sbb
test
fwait
add
sub
push
clc
cdq
icebp
(bad)
sub
mov
aam
int
dec
lods
leave
sub
sbb
scas
sub
push
mov
in
or
jb
sub
dec
inc
aam
sbb
icebp
push
jecxz
pop
shl
(bad)
stc
das
sbb
data16
(bad)
shl
ins
add
ja
stc
push
jmp
dec
call
aam
(bad)
fdiv
xchg
push
add
xor
(bad)
mov
int3
jp
xchg
int3
mov
pop
int3
hlt
dec
xlat
pop
sbb
jge
push
xchg
movs
cdq
inc
ja
jbe
jae
mov
or
out
es
dec
cmps
std
data16
aas
jns
movs
cli
sub
cld
fisub
jp
enter
rol
inc
add
add
jl
jno
pop
(bad)
addr16
sbb
sub
fisubr
mov
xchg
ret
sub
sbb
sbb
mov
mov
pop
sti
inc
xchg
mov
(bad)
aas
xor
push
mov
xor
repz
imul
std
mov
in
loope
adc
xchg
(bad)
and
xchg
icebp
movs
cmp
test
in
cwde
daa
push
cs
xchg
aaa
and
inc
rcl
mov
mov
addr16
retf
les
(bad)
icebp
arpl
push
call
mov
jns
sub
cmps
fimul
in
or
stos
shr
call
aad
push
adc
xchg
sbb
lahf
arpl
dec
inc
sbb
(bad)
and
(bad)
fwait
cmps
dec
bound
pop
push
mov
in
inc
repz
cdq
mov
push
pop
into
push
out
adc
outs
pop
and
aad
pushf
or
(bad)
jle
mov
mov
pop
sbb
mov
mov
sbb
test
cs
aaa
and
and
test
aam
pop
jecxz
sub
xor
ret
or
sbb
pop
call
jmp
pop
cmc
cli
in
cmp
adc
and
dec
push
inc
mov
imul
mov
aaa
push
pop
xor
mov
loope
lock
and
popf
dec
repz
mov
ins
mov
fsubr
fwait
es
stc
xor
in
pop
imul
out
sar
ret
fist
lods
sub
mov
in
sub
inc
jbe
jl
mov
enter
ins
or
adc
in
popf
int
jp
xlat
lds
cmp
scas
fisub
(bad)
mov
nop
enter
or
dec
dec
enter
jecxz
or
pop
icebp
push
les
leave
or
stc
ins
arpl
test
dec
out
in
test
repz
retf
lds
xlat
ins
outs
ret
mov
les
loop
es
test
jns
jmp
fwait
push
pop
dec
xchg
adc
stc
int
cmps
call
pop
rol
cmp
fsub
sbb
sar
jae
mov
sub
or
out
jae
cmps
aaa
lods
clc
dec
push
mov
fcmovb
in
jge
or
sahf
(bad)
out
cdq
(bad)
xchg
out
pop
mov
enter
lods
cmp
les
and
ror
cmp
cmp
ja
scas
cld
or
nop
add
and
shr
dec
gs
ja
fidivr
cwde
add
ret
push
repz
pop
sub
pop
int3
add
(bad)
retf
fisubr
fimul
(bad)
pop
(bad)
mov
jno
fldenv
imul
ins
jge
jle
sbb
adc
dec
les
dec
cmps
add
cwde
mov
xor
jbe
add
sbb
fcmovb
xchg
cld
jnp
xchg
sbb
add
xchg
lods
stos
inc
retf
out
mov
jno
ds
hlt
sti
ins
inc
inc
dec
mov
cmp
shl
popf
(bad)
push
sub
ret
sbb
and
retf
out
add
icebp
mov
stos
pop
push
shl
repz
in
pop
dec
dec
movs
shr
xchg
fldcw
imul
add
loop
inc
mov
leave
fidivr
test
pop
fdiv
xor
mov
pop
push
mov
leave
daa
retf
fsubr
and
sbb
js
jle
fist
aaa
dec
jecxz
cmp
lock
shr
and
jnp
mov
mov
je
dec
sub
loope
enter
jecxz
and
sub
jecxz
push
adc
mov
cmp
je
cmp
pop
and
in
push
les
cmp
inc
loopne
int
sub
dec
pop
push
sbb
sub
xor
adc
xor
cmpxchg
or
fild
inc
fwait
mov
ss
popa
js
fbstp
cmp
lock
les
pushf
jno
repz
(bad)
lock
lods
cs
addr16
cs
lea
scas
in
cmps
mov
xchg
push
fs
rcr
iret
loope
jno
sbb
fcmovbe
cmp
jnp
mov
mov
xchg
fist
arpl
into
ror
out
cmp
pop
and
mov
xchg
adc
test
xor
ficom
adc
or
sbb
xchg
cwde
call
out
and
adc
or
mov
fcom
iret
mov
sub
ficomp
and
out
xchg
pop
(bad)
xchg
mov
aam
imul
cmp
cld
fist
sub
push
mov
call
int
xlat
mov
push
mov
or
jl
jmp
sbb
dec
ja
ins
stos
lds
fnsave
jmp
movs
mov
jmp
push
jp
mov
ss
dec
sbb
stos
jne
inc
fnstsw
pop
hlt
shr
add
dec
sbb
sub
add
xor
sub
call
or
gs
mov
mov
inc
sub
inc
(bad)
dec
push
push
stos
mov
ficomp
xor
out
outs
pusha
mov
retf
mov
inc
or
sbb
and
les
shl
test
(bad)
sub
repz
arpl
jl
arpl
popa
test
pop
pop
pop
ret
cmp
leave
test
fwait
outs
jb
sub
test
cmp
and
sbb
dec
cmp
cmp
outs
fs
(bad)
fisttp
mov
mov
adc
movs
sub
xor
movs
push
mul
and
outs
ss
sub
shl
pop
mov
mov
shl
int
sub
les
xor
cmp
dec
ds
popa
cdq
pop
dec
jns
aas
es
js
xor
push
push
ins
xchg
dec
js
push
inc
inc
popa
neg
sbb
jo
gs
mov
addr16
cmp
mov
movs
retf
or
shr
into
div
sbb
inc
repz
(bad)
ss
fwait
and
(bad)
je
mov
loope
pushf
(bad)
ja
push
sar
fild
(bad)
retf
mov
mov
test
pop
cmps
xchg
fild
sbb
sub
out
test
fstp
mov
stos
push
lahf
sub
pop
out
je
cmps
fwait
lods
fcompp
fcomp
pop
mov
cmps
inc
inc
repz
dec
stos
retf
outs
xchg
jp
push
mov
xor
stos
call
(bad)
rcl
mov
scas
xor
shr
popf
lods
(bad)
iret
(bad)
mov
cmp
bound
and
int
inc
sti
inc
fdivr
out
ret
dec
aad
mov
mov
xchg
push
lods
mov
jl
ss
xchg
mov
data16
adc
jnp
rcr
cld
and
or
mov
mov
mov
out
ins
sbb
shl
cwde
jl
fisub
mov
add
imul
push
std
setp
or
cmp
xor
inc
push
scas
sub
shl
xor
lahf
lfs
dec
mov
ror
push
pop
mov
push
lahf
cmc
pop
dec
popf
popa
shl
daa
int3
and
movs
jp
loope
iret
mov
test
cmc
mov
stos
pop
pop
popf
inc
fisttp
add
pop
mov
push
xchg
aaa
mov
adc
lea
jb
dec
ficomp
inc
loop
xor
mov
jno
mov
fisubr
sahf
outs
out
out
mov
jae
xchg
sahf
push
mov
push
lea
ficomp
popa
(bad)
lods
gs
pop
cmp
pop
(bad)
fwait
aam
xor
jge
iret
or
mov
sub
lea
xchg
mov
(bad)
outs
pop
(bad)
xor
scas
mov
jl
cmc
add
ror
mov
adc
lahf
ret
movs
jge
(bad)
pop
mov
test
(bad)
shl
inc
sub
xlat
and
shl
jp
popf
cmp
int3
push
mov
in
ins
outs
push
out
mov
cld
jl
mov
xchg
ret
sub
adc
sbb
lods
push
mov
into
in
arpl
push
xchg
jno
jmp
sbb
dec
mov
jns
daa
(bad)
imul
mov
pop
jns
mov
inc
add
add
inc
add
add
add
ret
inc
or
sub
pop
aas
mov
ds
cmp
or
sub
mov
sub
mov
add
mov
sub
mov
sub
mov
sub
mov
sub
mov
dec
add
or
jae
dec
adc
cld
movs
mov
fucomip
mov
add
call
xchg
adc
stc
(bad)
aad
das
arpl
sub
jns
xchg
mov
inc
pop
pop
in
dec
outs
sahf
push
xchg
shl
lahf
add
icebp
pop
inc
adc
inc
mov
mov
mov
retf
rol
iret
addr16
js
pop
mov
mov
(bad)
daa
pop
lahf
fld
lahf
mov
jb
imul
das
xchg
and
js
push
dec
daa
mov
add
imul
cmp
(bad)
mov
mov
fstp
mov
xchg
outs
retf
test
pusha
stc
jle
aas
cmps
pop
ud0
ins
dec
out
test
jl
push
cmp
test
sub
test
repz
ds
stc
dec
fmulp
imul
loopne
push
or
add
sub
xchg
(bad)
hlt
retf
imul
and
cmp
sbb
test
pushf
scas
lods
jl
pop
out
loope
hlt
imul
retf
add
inc
pop
and
xor
cdq
jl
dec
jno
add
inc
jmp
and
jp
mov
jbe
or
sub
stos
mov
mov
or
mov
xor
aas
inc
and
loop
ins
jmp
xchg
cld
xor
and
jmp
ins
ins
arpl
mov
push
and
add
xor
jne
fdivr
push
retf
mov
and
in
inc
pop
adc
int3
stc
shl
das
mov
push
ins
outs
outs
mov
hlt
leave
jno
push
(bad)
int
lahf
je
xchg
shl
pop
ins
add
xchg
cmp
js
ret
into
mov
je
pushf
aaa
cmp
js
push
mov
les
xchg
jae
fnstcw
mov
arpl
lods
rol
cmp
ins
adc
movs
add
fbld
add
leave
dec
pop
movs
inc
xchg
fwait
dec
pop
iret
inc
loop
std
cmps
mov
mov
not
(bad)
not
jmp
(bad)
sbb
mov
add
cmp
mov
push
daa
mov
dec
(bad)
lahf
ror
xchg
test
ja
outs
jne
gs
or
fistp
shr
jae
out
xor
ins
(bad)
xchg
push
xchg
les
xor
aas
data16
jge
jmp
mov
inc
test
mov
mov
inc
lock
sub
int3
and
imul
movs
sbb
push
fst
popf
(bad)
rep
sti
inc
fucomp
(bad)
cwde
xchg
adc
jmp
bound
sbb
cld
out
mov
adc
cmps
clc
data16
neg
pop
les
sub
xlat
push
scas
(bad)
push
retf
repnz
push
push
imul
jne
cmp
ret
mov
dec
ret
shr
fisub
outs
outs
je
or
mov
adc
outs
sahf
jns
and
mov
mov
xchg
push
mov
adc
dec
dec
imul
add
imul
out
rol
fxch
jecxz
xchg
cmp
pop
js
frstor
mov
xchg
(bad)
jmp
dec
ror
add
mov
inc
popf
mov
mov
jns
add
das
test
push
xor
and
cmp
sub
cwde
ret
dec
sub
lahf
arpl
jp
es
mov
sub
cld
mov
mov
adc
shr
pop
dec
pop
rcl
mov
dec
sbb
push
jg
mov
push
jo
push
mov
test
cmp
cmp
xchg
ss
repz
jg
pop
gs
sbb
mov
adc
mov
adc
xor
test
cmp
das
int3
xor
add
xor
call
xor
ret
cs
(bad)
addr16
push
and
mov
sbb
sbb
lea
lock
mov
sub
iret
adc
(bad)
loop
dec
inc
cmp
inc
cli
mov
add
fdivr
cli
movs
jmp
dec
cmp
mov
shr
jnp
mov
cmp
sar
inc
mov
sti
int3
bound
jae
(bad)
outs
js
cmc
movs
int
inc
in
mov
xchg
dec
mov
into
xchg
mov
ret
mov
inc
test
inc
mov
dec
out
fs
inc
sub
aas
scas
imul
pop
call
or
scas
push
repnz
jo
inc
cld
mov
cmc
mov
loop
shl
dec
mov
pop
outs
mov
jno
repz
enter
adc
sbb
jns
inc
xchg
(bad)
loope
int
add
out
xchg
cmp
jae
xor
out
or
pop
pop
fcom
push
imul
add
into
xor
add
out
xchg
cmp
(bad)
sub
pop
push
jno
adc
int3
adc
pop
int
call
and
fimul
pop
mov
fucomi
jle
jl
ins
push
jecxz
jno
adc
push
fstp
int3
fiadd
mov
leave
sub
cmps
test
cli
xor
lods
imul
sub
lahf
call
pop
mov
cmc
mov
retf
stos
xchg
xor
xchg
pop
in
in
cmp
(bad)
retf
nop
mov
repz
add
pop
stos
inc
push
and
cmp
leave
pop
sbb
sbb
inc
iret
in
sbb
mov
and
add
jb
lea
clc
push
push
jo
in
test
xchg
xor
jbe
sub
aam
mov
jge
popf
mov
jnp
mov
into
push
repnz
shl
stc
jp
add
iret
fld
retf
call
jae
pop
sar
and
out
popa
cmp
mov
into
mov
leave
push
clc
out
push
std
fs
dec
jl
in
mov
jge
mov
lods
js
rol
jmp
hlt
outs
xchg
push
aad
aaa
sub
adc
in
mov
daa
xchg
adc
outs
jns
(bad)
movs
test
arpl
mov
(bad)
call
cmps
int
sub
mov
jo
or
mov
dec
mov
repz
mov
shr
fdiv
sti
fadd
jbe
ds
imul
pop
mov
cwde
mov
xchg
in
add
aaa
enter
dec
fwait
pop
sub
push
imul
push
outs
idiv
inc
icebp
add
ss
xchg
scas
lea
jbe
fst
in
or
fucomip
xor
and
in
or
jae
aam
stos
lods
mov
test
jge
jge
loop
lahf
mov
out
les
(bad)
xlat
adc
outs
or
cdq
fcom
mov
sahf
imul
dec
in
inc
dec
test
lea
and
cmc
ffreep
mov
sbb
mov
pop
jmp
inc
ret
mov
sbb
in
in
push
loopne
jmp
xor
fcomp
imul
xchg
lahf
daa
and
imul
mov
aam
pop
scas
cmp
mov
push
mov
cmps
xchg
adc
jnp
add
jge
and
int3
cmps
in
les
clc
xor
cli
fisubr
out
out
xor
adc
jns
xor
jno
mov
or
sub
sub
mov
(bad)
push
(bad)
mov
pop
dec
xlat
test
adc
mov
loope
xlat
jno
retf
dec
mov
arpl
cmp
mov
mov
cs
(bad)
jne
cmp
pop
outs
(bad)
cmp
mov
(bad)
xchg
inc
js
pop
push
fsubr
mov
mov
mov
mov
icebp
mul
sbb
pop
clc
and
jle
in
out
std
adc
rol
mov
mov
dec
cmc
inc
push
mov
or
scas
fwait
in
test
pop
ficom
sub
in
les
mov
gs
adc
cmc
or
and
mov
fisubr
or
mov
lahf
dec
cli
mov
mov
fisubr
stos
pop
pop
ret
sbb
mov
push
fimul
out
neg
xchg
es
cli
(bad)
and
sub
lods
jg
push
jno
push
aas
dec
stos
mov
jecxz
test
outs
cmps
mov
inc
pop
push
mov
int
pop
int3
push
out
pop
(bad)
jo
push
dec
je
fidiv
mov
ins
je
sysexit
scas
stos
imul
xchg
fadd
jbe
mov
fstp
cmps
imul
outs
sbb
push
inc
scas
fld
mov
xchg
sbb
mov
in
shl
addr16
and
xor
frstor
dec
inc
push
das
in
es
xchg
mov
push
mov
cmc
jecxz
sub
mov
pop
repz
cli
pop
sar
dec
mov
mov
dec
mov
push
in
mov
xchg
jno
in
scas
int3
stos
aam
ja
xchg
ds
xchg
inc
pop
fstp
mov
xor
arpl
cli
mov
or
inc
icebp
addr16
imul
mov
mov
sti
mov
out
out
xchg
sbb
mov
repnz
ss
xor
dec
mov
pop
icebp
test
adc
retf
mov
mov
rol
xchg
pop
cmp
adc
dec
arpl
lods
jne
sub
bound
ins
out
dec
or
sahf
push
xchg
test
outs
cli
push
cmp
movs
xchg
outs
bound
sbb
jo
stc
cdq
inc
xchg
div
cwde
xor
jbe
mov
rcr
or
push
leave
mov
mov
jno
jge
xor
inc
in
stc
test
enter
out
stc
outs
addr16
iret
xchg
je
pop
pop
pop
cld
imul
ffreep
xchg
into
clc
xchg
cmp
mov
adc
mov
(bad)
ds
pushf
jbe
icebp
repz
test
mov
iret
sub
std
ret
movs
mov
std
(bad)
fdivr
mov
xchg
sbb
cmp
call
(bad)
jp
std
mov
xchg
sbb
xchg
mov
repnz
rcl
in
mov
imul
ja
dec
gs
jb
mov
cli
or
loope
inc
add
add
add
xchg
add
inc
or
inc
add
inc
test
dec
add
dec
les
sub
mov
sub
mov
add
or
sub
mov
sub
sub
mov
or
sub
mov
add
mov
dec
add
add
sub
call
dec
aaa
mov
inc
jo
dec
or
cmp
repnz
xor
mov
data16
fadd
arpl
dec
push
cmc
leave
inc
jle
push
pop
cmp
adc
leave
js
loope
xchg
popf
test
inc
push
mov
push
imul
shl
mov
push
sub
cmps
shr
dec
sar
cmp
test
(bad)
int3
imul
pop
ins
pusha
xor
mov
(bad)
data16
inc
xchg
sub
jne
xor
xor
xchg
pop
mov
adc
scas
fnstenv
cmp
pop
imul
imul
push
pop
jmp
sub
sub
jge
xor
add
rol
inc
or
inc
or
inc
sbb
push
nop
dec
mov
rcl
aaa
rep
xor
lods
movs
pop
test
inc
test
inc
lahf
dec
jg
out
(bad)
sub
sub
retf
movs
pop
test
xor
fsub
sub
sub
movs
aad
clc
mov
push
mov
jge
xor
push
xchg
cwde
sub
adc
retf
mov
enter
aas
adc
push
jne
adc
loope
in
push
pop
bound
pop
popa
cmp
mov
or
loopne
rcr
loop
mov
jmp
lahf
mov
imul
fisub
scas
mov
gs
mov
ret
leave
cs
and
mov
mov
jmp
inc
mov
dec
mov
fcmovbe
sbb
pop
lods
loope
sub
and
xchg
and
push
jnp
rcr
push
pop
lods
pushf
jnp
aas
push
push
and
mov
xchg
ret
xor
jae
add
push
pop
ror
lods
mov
push
shl
add
jo
lock
ret
fldenv
(bad)
xor
ret
xchg
repz
sub
(bad)
xchg
jbe
out
int3
cmps
clc
pop
loope
lahf
fcomp
(bad)
in
in
std
not
leave
cmp
ds
fdivr
lahf
jae
(bad)
pop
xchg
mov
popf
call
cmp
push
inc
cld
lahf
lahf
outs
inc
cdq
mov
dec
jb
jns
fdivr
mov
add
xlat
dec
int3
jns
mov
adc
mov
repnz
std
pop
outs
or
ss
pop
repz
retf
retf
retf
adc
sti
cmp
pusha
imul
xor
(bad)
mov
and
gs
pushf
scas
adc
or
enter
push
fwait
sti
xor
call
sub
fimul
movs
dec
in
pop
cmp
cmp
mov
mov
xchg
xchg
call
inc
push
cmp
scas
fwait
gs
inc
(bad)
sub
stos
das
fisub
nop
dec
adc
shl
inc
add
lea
mov
shl
sar
cdq
cmc
inc
mov
push
test
ret
into
xchg
jns
xchg
dec
cdq
adc
out
sbb
mov
push
imul
in
out
push
aaa
les
push
push
mov
inc
sub
jecxz
xor
jae
ds
sub
cmp
mov
pop
cli
loop
stc
(bad)
lds
mov
movs
test
retf
adc
mov
push
xchg
xchg
mov
vmread
xlat
shr
(bad)
daa
repnz
push
jge
mov
add
and
dec
js
cdq
(bad)
push
xchg
mov
pop
(bad)
cld
push
sar
add
cmc
jo
xor
retf
xor
and
gs
movs
lea
cdq
fisubr
cwde
popa
xchg
jecxz
nop
(bad)
mov
call
iret
leave
retf
dec
mov
test
retf
inc
das
es
fdivr
cdq
sbb
sbb
dec
add
push
retf
fidiv
sub
cdq
inc
call
je
jmp
mov
and
jle
gs
ins
arpl
pop
iret
sbb
cmps
cmp
sbb
gs
pop
mov
cli
inc
pop
clc
test
xchg
(bad)
adc
movs
leave
or
sahf
pop
rcr
cmps
leave
imul
mov
loopne
cmp
pop
sub
sar
jecxz
cmp
fwait
mov
dec
mov
out
push
sbb
or
cmps
fsub
push
dec
ret
dec
mov
sub
mov
mov
pop
pushf
fidiv
ret
adc
xchg
in
test
retf
pop
add
(bad)
int3
mov
sar
dec
xchg
out
mov
and
push
pop
jecxz
fcomp
aam
cmp
and
hlt
dec
shl
shl
js
test
scas
(bad)
cmps
cmps
and
iret
adc
clc
data16
(bad)
sbb
cmc
out
popa
ss
adc
push
and
ins
into
out
jecxz
inc
xchg
ficom
mov
inc
rcr
jb
inc
fist
dec
test
pop
fldcw
jns
popa
pop
fldz
pop
and
int3
push
pop
sub
popa
xchg
loope
(bad)
les
sti
pop
push
ins
iret
xchg
clc
dec
xchg
mov
inc
mov
jne
out
and
mov
imul
pop
sub
rcr
retf
in
in
enter
stos
in
icebp
popf
aaa
test
dec
es
pop
lock
xchg
mov
aam
out
xchg
sbb
push
(bad)
icebp
sbb
fdiv
(bad)
call
sub
fild
mov
jb
ficomp
je
das
xor
pop
fnstsw
(bad)
xchg
inc
ror
pop
xchg
mov
or
push
ror
lea
(bad)
in
icebp
sub
xchg
xchg
and
or
cwde
and
sahf
fimul
pop
dec
ins
pop
fwait
xor
lock
out
push
push
pop
push
mov
pop
jg
mov
mov
mov
retf
loopne
in
popf
jno
cmps
call
lea
xchg
dec
(bad)
push
inc
dec
jns
dec
out
out
scas
mov
adc
adc
aaa
xchg
and
loop
leave
inc
dec
movs
sub
js
xlat
jnp
dec
loop
or
dec
dec
arpl
lods
mov
std
inc
fidivr
and
mov
or
adc
es
retf
imul
push
and
xor
pop
mov
cs
jb
and
adc
push
jge
cmc
out
xor
shr
sar
pop
fisttp
jl
inc
inc
pop
inc
push
sub
sbb
pop
retf
addr16
dec
inc
mov
out
(bad)
inc
mov
mov
loope
scas
arpl
ins
mov
cmp
data16
pop
dec
pop
dec
popf
fs
fs
or
sbb
adc
loopne
bound
push
cmp
loop
push
rcl
out
mov
jae
adc
div
push
cwde
bound
sub
push
in
shl
out
je
out
stc
fcmove
sti
jl
addr16
je
cmp
ins
mov
shl
mov
repz
imul
fcomi
test
lea
dec
iret
mov
cs
fst
in
out
mov
jns
retf
mov
cmc
lds
shr
mov
jl
ja
ffree
jb
or
mov
mov
out
and
retf
dec
mov
or
dec
adc
call
stc
popf
dec
dec
fiadd
lea
jae
gs
leave
add
sub
jne
out
out
mov
fucomip
stos
sbb
retf
jne
dec
aaa
sub
stc
cmp
pushf
mov
clc
jae
retf
loop
lahf
lods
fsubr
dec
sbb
fstp
out
or
xchg
icebp
adc
fist
lea
mov
inc
mov
ds
mov
outs
xor
loope
xchg
add
mov
pusha
js
dec
xor
fnstcw
and
ds
cmps
sub
pop
scas
fild
test
iret
sbb
sbb
(bad)
repz
jp
loop
in
test
arpl
jg
cdq
pop
clc
or
loop
lods
movs
mov
mov
ins
mov
pop
out
push
fist
arpl
mov
dec
add
je
pop
pop
push
mov
les
mov
sub
cwde
pusha
fwait
add
xor
in
mov
jns
out
ja
sbb
fisttp
mov
arpl
and
mov
sahf
jb
inc
pop
rcl
sar
sbb
pop
pop
lock
cmps
lock
aad
mov
outs
mov
xor
ficomp
in
xchg
cs
mov
adc
xor
jne
dec
cmp
icebp
inc
xor
jp
xor
(bad)
daa
pop
(bad)
out
into
jmp
icebp
out
fadd
mov
xlat
jg
xor
inc
dec
sahf
call
les
add
mov
cmp
(bad)
shl
mov
push
aaa
ins
(bad)
lock
enter
or
add
jmp
push
call
cmps
retf
call
xchg
add
cmp
pop
jecxz
mov
sub
vdivss
cmp
dec
int3
cmc
xchg
lock
les
mov
ins
out
jns
bound
mov
xor
mov
or
inc
lods
mov
pop
jl
shl
push
mov
sub
mov
cmps
push
out
or
jb
ficom
push
inc
mov
sub
mov
sub
sub
xor
call
add
push
push
mov
je
sub
sub
je
push
ins
je
inc
dec
add
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
dec
add
sub
mov
dec
add
add
sub
push
or
sub
mov
sub
mov
cmp
pop
lock
mov
xor
clc
ficomp
sahf
push
(bad)
shl
(bad)
ror
add
inc
ror
sub
cmp
mov
js
jne
mov
add
cmp
scas
dec
mov
pop
sub
mov
jo
retf
stc
outs
xor
jnp
sar
mov
inc
xchg
and
in
lods
mov
cs
lods
fwait
inc
sub
cmp
push
add
add
push
add
add
add
inc
or
add
push
iret
pop
mov
or
sub
stc
inc
aad
inc
mov
push
repz
dec
lods
cmp
(bad)
out
leave
and
icebp
enter
sub
push
repnz
or
je
(bad)
push
pop
sub
mov
push
dec
mov
outs
inc
pop
fwait
out
icebp
and
or
(bad)
nop
test
pushf
ins
xlat
sar
sbb
push
lods
test
sahf
inc
mov
adc
stc
xchg
push
xchg
dec
fld
sub
cmp
call
adc
sbb
mov
dec
adc
mov
jbe
dec
pop
jl
xchg
in
push
jecxz
jnp
xor
out
inc
cld
sbb
push
xlat
arpl
adc
mov
stos
or
xchg
fnsave
fistp
cmp
mov
aas
repz
aas
out
in
cld
pop
outs
fs
js
inc
sahf
aas
cs
xor
and
pop
xchg
test
or
cmp
es
sti
xchg
jae
jle
clc
push
addr16
and
cmp
hlt
adc
adc
cmp
scas
dec
pop
ret
aas
or
cmp
cmps
(bad)
pusha
es
cmp
rol
xlat
jno
leave
iretw
inc
jge
cmp
jl
mov
sbb
inc
push
push
mov
pop
inc
cmp
ds
clc
mov
scas
loope
(bad)
aam
mov
inc
jbe
and
jl
outs
and
sub
in
inc
pusha
mov
jle
js
loop
movs
mov
and
enter
movs
xchg
mov
in
cmp
arpl
popa
inc
int
sub
pop
dec
daa
test
js
push
mov
out
repz
jne
push
dec
in
sahf
inc
push
xor
in
call
das
adc
mov
cmps
shl
cmps
ret
lods
mov
pusha
ficom
arpl
jbe
push
retf
xor
ret
call
mov
fbld
test
jns
cmp
adc
std
imul
jns
xchg
jnp
pushf
in
outs
jg
lods
retf
ins
sub
jbe
repnz
xor
repz
les
sub
cmps
mov
xchg
rcr
lds
xor
iret
adc
dec
push
cmp
iret
test
dec
js
dec
imul
mov
mov
ss
movs
(bad)
sub
mov
cmp
inc
mov
pop
int3
shr
push
inc
shr
test
xchg
push
mov
pop
pop
dec
std
xchg
lods
(bad)
xchg
out
cmp
push
enter
push
repnz
mov
xchg
lods
movs
(bad)
shr
cld
inc
mov
sbb
xchg
sub
adc
out
addr16
cld
mov
dec
rol
push
sub
and
xor
jb
xchg
imul
pop
adc
sbb
cs
cmp
dec
repz
addr16
or
das
jecxz
mov
sbb
mov
gs
ins
shl
into
out
jno
xchg
inc
xchg
cmp
inc
inc
or
lock
or
in
pop
imul
std
mov
mov
lea
ss
adc
push
push
mov
dec
or
mov
xor
cmp
mov
push
xor
mov
dec
xchg
jns
cmp
fcomp
daa
adc
rcr
pusha
and
fcom
sub
gs
pop
push
leave
jbe
adc
(bad)
(bad)
enter
pusha
mov
pop
cmp
fchs
jbe
cmp
sbb
aas
push
in
jl
bound
movs
imul
shl
push
fwait
xor
sub
xchg
repnz
ja
test
jmp
movs
sbb
clc
or
retf
ins
dec
pop
repz
pop
lds
jle
jnp
clc
std
loopne
jno
jmp
ficomp
inc
in
fsub
push
xor
ins
push
repz
jge
retf
xlat
or
pop
add
fiadd
aas
or
or
fnstsw
dec
addr16
mov
int
mov
pop
ss
popf
mov
xchg
push
sbb
aas
btc
stos
push
in
mov
(bad)
into
movs
gs
ins
cdq
xchg
adc
lds
push
xor
jp
push
cmp
jl
mov
scas
and
jmp
add
jecxz
sub
iret
cmp
test
cmps
fucomip
loop
xor
add
stos
les
ins
call
in
fxtract
mov
or
sub
mov
cdq
mov
add
add
pop
add
add
xor
dec
shl
xor
movs
loope
arpl
or
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
or
sub
xor
inc
or
add
push
add
add
inc
in
mov
aad
inc
dec
inc
push
cmp
jmp
or
add
xor
sub
(bad)
jge
inc
mov
mov
push
retf
mul
jle
cmps
clc
push
and
pusha
sub
lea
imul
xchg
jb
sbb
sbb
aam
jno
js
dec
jl
out
inc
dec
dec
inc
rol
adc
neg
jg
mov
or
pop
push
xchg
mov
cvttps2pi
ss
imul
lahf
xchg
inc
push
push
test
jne
add
in
mov
loop
in
cmps
jb
mov
js
jecxz
sahf
jp
jge
xchg
jne
ret
xchg
inc
ins
sar
sub
stc
test
xor
in
outs
inc
jle
inc
mov
jae
push
mov
outs
or
and
inc
pop
sbb
enter
dec
inc
inc
mov
adc
gs
mov
pop
sub
add
shl
inc
inc
fnstsw
inc
add
and
scas
gs
dec
pop
sbb
adc
jecxz
cmp
and
not
push
loope
ret
rol
cmp
lods
and
xor
inc
sbb
sub
push
loopne
(bad)
mov
test
sub
psubb
inc
or
fisubr
cmp
sub
cdq
mov
or
add
push
add
add
push
add
dec
xchg
pop
aas
mov
(bad)
jmp
mov
push
or
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
or
mov
or
sub
mov
sub
mov
pop
mov
jg
push
sbb
dec
ret
mov
pushf
loope
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
mov
push
pop
push
add
inc
pop
xchg
aam
sahf
pop
push
add
inc
pop
xchg
aam
jns
inc
pop
xchg
aam
jns
inc
pop
xchg
aam
jns
inc
pop
xchg
aam
jns
inc
pop
xchg
aam
shl
xor
sub
test
pop
xchg
aam
sub
or
scas
jae
call
add
add
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sbb
mov
xor
pop
pusha
adc
cdq
mov
xchg
shr
push
xchg
inc
push
push
mov
pop
add
add
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
retf
jl
loop
dec
sbb
jecxz
adc
dec
aam
imul
jae
cld
into
inc
test
lahf
inc
leave
sub
je
jle
ret
icebp
sti
pop
adc
movs
mov
xchg
(bad)
arpl
je
or
and
into
jbe
paddusw
or
cmp
mov
push
jl
push
aas
dec
mov
(bad)
retf
pop
push
pop
jnp
ret
mov
mov
adc
cld
cmp
iret
les
mov
and
mov
jecxz
sbb
xchg
repz
in
lea
xchg
(bad)
int3
add
mov
stc
data16
xchg
sti
ins
cmp
inc
pushf
pop
retf
test
adc
mov
add
jns
push
xor
add
push
out
fdivrp
add
xor
ret
lea
add
inc
cs
dec
sar
and
add
inc
or
sar
into
mov
dec
and
lea
test
stc
mov
pop
scas
pop
fnstsw
(bad)
jne
call
(bad)
mov
jg
dec
ror
sub
pop
out
fwait
cmp
mov
sub
popf
jne
int3
int3
mov
stos
inc
jecxz
sti
inc
push
ret
aaa
xor
outs
in
scas
sbb
inc
add
sub
or
mov
fimul
adc
aam
xor
push
(bad)
movs
fucomi
sbb
pop
addr16
sub
push
cmps
out
(bad)
(bad)
ss
mov
xchg
fisubr
jp
cmp
jl
mov
xchg
leave
sti
xor
aas
es
lea
into
jle
fistp
jmp
test
int
bound
jge
dec
int3
test
xor
fs
mov
pushf
pxor
mov
(bad)
aam
fdivr
push
out
loop
lods
call
dec
call
lahf
dec
mov
out
xor
cmp
pop
ins
repnz
leave
scas
movs
out
aas
sbb
repnz
pop
stos
js
push
mov
add
or
(bad)
test
das
loop
popa
ins
mov
push
push
or
adc
hlt
mov
sbb
inc
mov
mov
pop
dec
loopne
ins
imul
inc
or
daa
xor
jae
xor
loope
mov
or
cmp
or
ret
imul
xchg
and
inc
dec
mov
mov
lods
call
inc
cmp
pop
int
out
pop
and
fisttp
aam
cld
outs
stos
fsub
pop
mov
(bad)
push
inc
test
pop
lods
mov
xor
sbb
lea
addr16
sub
mov
cmp
enter
cmp
(bad)
mul
sti
aaa
(bad)
cmp
inc
mov
(bad)
das
int
mov
daa
and
retf
inc
scas
lods
sbb
inc
icebp
or
jne
idiv
(bad)
mov
sub
mov
adc
push
div
fmul
addr16
lods
cmp
or
or
inc
xor
shl
mov
add
out
inc
dec
push
xchg
cmp
jl
sub
and
retf
rcr
cmp
and
add
test
xor
cmp
pusha
aas
call
aam
(bad)
out
repz
xchg
jbe
sub
cld
mov
sti
lds
cli
jg
cmc
scas
mov
or
dec
scas
je
adc
jno
sub
add
sub
push
sbb
xor
adc
xchg
sbb
inc
test
xor
rcr
or
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
sub
repnz
jecxz
loope
mov
pop
xchg
js
adc
cmp
mov
in
and
fstp
cmp
fwait
and
and
jle
cld
xor
in
ds
(bad)
in
clc
pop
ret
dec
xchg
arpl
mov
or
fistp
aas
ds
cmc
in
out
(bad)
xchg
mov
mov
add
jne
gs
fdiv
adc
xchg
pop
inc
jle
test
data16
dec
test
sbb
mov
mov
jae
mov
inc
ja
dec
adc
fdivr
pop
mov
cmp
scas
shr
stos
dec
pop
pop
mov
push
mov
stos
mov
mov
jge
jg
clc
jg
mov
sbb
into
jmp
dec
pop
ret
fimul
shr
imul
add
or
sub
not
into
rcl
inc
mov
push
dec
xor
cmp
cmps
and
jp
jbe
xor
pop
test
enter
fcomi
xchg
pop
(bad)
fdiv
ss
pop
out
mov
pop
out
mov
jbe
scas
and
xlat
outs
adc
xchg
sbb
jbe
iret
mov
xchg
rcr
mov
mov
out
lods
je
mov
push
(bad)
dec
sub
xor
cmp
pop
xchg
cld
ret
push
add
(bad)
or
and
mov
out
push
sub
lahf
aaa
add
mov
pop
idiv
sub
mov
ins
outs
xchg
lds
adc
aaa
je
pop
jno
cmp
dec
sub
cmp
inc
lock
fs
pusha
test
inc
(bad)
out
(bad)
les
into
js
in
jnp
ja
data16
imul
ja
inc
jp
je
imul
retf
mov
clc
ret
add
add
mov
out
push
in
fstp
mov
ins
jbe
xchg
push
mov
ins
inc
xor
cdq
inc
cdq
push
ficomp
ror
push
adc
jae
mov
cld
cmp
xchg
outs
cmp
in
jns
movs
das
(bad)
xor
push
push
imul
and
or
pushf
inc
retf
xchg
leave
jl
lea
jb
ins
aas
lahf
sbb
add
cld
sbb
or
cmp
inc
cwde
(bad)
inc
lock
jae
fsubr
dec
mov
addr16
int
inc
in
dec
xor
mov
cmp
mov
xchg
xor
and
rcr
lods
aaa
movq
(bad)
xchg
stc
sahf
fmul
and
repz
or
sub
repnz
out
pop
sar
xor
cwde
jnp
and
fdiv
pop
ins
sbb
popa
(bad)
sub
mov
sbb
outs
xchg
sti
or
fimul
lods
loope
loop
dec
sub
sub
mov
ret
outs
fs
pop
sbb
rcr
pop
xchg
rcr
cdq
mov
ret
enter
sub
fmul
xchg
gs
fwait
inc
enter
push
retf
mov
call
mov
sub
repz
and
xlat
out
xchg
jbe
pushf
hlt
lods
jns
outs
imul
(bad)
adc
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
inc
pop
push
jl
lock
mov
sbb
arpl
int
mov
push
jbe
icebp
and
dec
or
sub
cmp
out
mov
dec
mov
pop
call
inc
jmp
stc
jg
xor
jg
sbb
stc
push
dec
fdiv
stc
lea
dec
pop
cmp
mov
outs
outs
int3
xchg
sbb
not
sub
or
retf
repz
ins
mov
inc
xchg
les
js
lahf
ins
imul
inc
jns
mov
mov
pop
xor
repnz
into
loopne
push
sbb
adc
fs
push
xchg
mov
repnz
adc
cmp
xor
fwait
not
adc
jb
jae
fcmovne
cmp
mov
jge
jbe
jecxz
cmps
pop
shl
mov
or
jno
and
fs
dec
lods
xchg
in
xor
fist
inc
sbb
xchg
adc
xchg
dec
bound
dec
mov
sti
rcl
adc
dec
repnz
xchg
mov
mov
int3
mov
call
popf
outs
cmp
xchg
into
dec
xchg
enter
and
mov
sbb
jmp
xchg
pop
and
cmp
add
sbb
(bad)
int
dec
out
and
push
inc
mov
and
mov
pop
das
retf
stc
pushf
lods
iret
mov
outs
push
retf
scas
add
and
jl
mov
add
stos
mov
int3
dec
lea
adc
leave
iret
sbb
xor
movs
not
or
add
xchg
fs
inc
ret
lock
mov
jmp
pop
es
(bad)
fbld
(bad)
retf
dec
adc
sbb
adc
retf
retf
jecxz
(bad)
push
cmp
dec
adc
arpl
dec
mov
mov
scas
push
ds
inc
push
jno
(bad)
mov
fdivr
mov
cld
mov
push
std
out
jmp
mov
mov
xor
lahf
int
into
bound
lahf
stos
das
sbb
jl
out
add
imul
push
pop
call
adc
frstor
out
pop
and
les
shr
pop
out
and
push
add
xchg
and
cld
cmps
in
lea
sbb
test
popf
mov
fdiv
aas
xchg
pop
and
shr
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
adc
or
mov
xor
inc
or
inc
push
mov
sub
mov
sub
mov
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
mov
add
add
add
and
add
add
or
test
add
push
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
inc
add
and
add
add
and
add
and
add
inc
add
add
add
inc
inc
add
inc
pusha
add
inc
add
inc
mov
add
inc
loopne
add
add
pusha
and
add
add
pusha
pusha
add
pusha
add
pusha
mov
add
pusha
loopne
add
and
add
pusha
add
add
add
loopne
add
and
add
pusha
add
mov
mov
add
mov
add
add
and
add
inc
add
shl
rol
add
rol
shl
add
add
add
and
add
inc
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
inc
add
add
inc
add
pusha
add
add
add
add
loopne
inc
and
add
and
inc
and
inc
and
inc
and
add
rol
and
add
add
inc
inc
and
inc
inc
inc
add
pusha
add
add
inc
mov
add
loopne
inc
pusha
add
inc
pusha
and
inc
pusha
inc
add
pusha
add
add
pusha
mov
add
loopne
inc
add
inc
and
inc
add
and
add
inc
add
inc
and
inc
mov
and
inc
mov
pusha
add
add
mov
rol
mov
add
inc
shl
inc
rol
shl
rol
inc
rol
inc
shl
inc
loopne
add
and
inc
loopne
add
pusha
add
add
loopne
add
rol
loopne
add
add
add
add
add
add
add
add
and
add
and
and
add
and
add
inc
add
add
add
add
add
add
add
add
and
and
and
and
and
and
and
and
add
add
and
add
add
add
mov
inc
add
mov
mov
add
rol
add
add
shl
rol
add
add
loopne
add
loopne
add
loopne
add
loopne
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
and
add
and
add
and
shl
add
and
add
and
add
and
add
inc
add
rol
rol
rol
rol
rol
rol
rol
shl
shl
shl
shl
shl
shl
shl
shl
rol
add
add
and
add
rol
add
mov
and
shl
add
mov
mov
add
mov
add
rol
add
rol
shl
rol
lock
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
test
add
add
add
add
add
test
inc
add
add
test
add
test
add
(bad)
test
add
add
inc
repz
add
add
repz
div
repz
test
add
add
repz
div
idiv
repz
div
div
(bad)
idiv
div
repz
div
(bad)
(bad)
(bad)
div
div
div
idiv
(bad)
(bad)
div
add
div
div
(bad)
idiv
div
repz
repz
div
idiv
repz
add
add
add
repz
div
repz
test
add
add
add
repz
add
test
add
(bad)
test
add
test
test
inc
add
add
test
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
fld
(bad)
out
cmp
push
pop
(bad)
(bad)
fmul
(bad)
jmp
add
inc
add
loopne
(bad)
push
pop
(bad)
(bad)
fmul
(bad)
(bad)
out
cmp
(bad)
fld
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
dec
lds
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
sbb
add
pop
add
add
add
add
jae
add
arpl
outs
add
add
add
sbb
add
je
inc
add
js
xor
add
add
je
pop
push
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
pop
add
add
add
add
add
add
add
xor
add
add
and
add
add
sbb
test
add
jle
add
adc
add
add
sbb
push
aas
add
xor
add
add
sbb
test
add
mov
add
add
add
or
add
pop
add
sub
add
inc
add
add
add
add
add
add
xor
add
mov
add
add
lods
add
repnz
rol
add
mov
or
repz
lods
add
add
repnz
movs
call
rol
add
add
lods
push
dec
repz
lods
add
repnz
stos
jmp
call
hlt
add
rol
add
mov
mov
(bad)
mov
repz
lods
add
add
repnz
lods
jmp
call
sbb
hlt
add
rol
add
add
pushf
jmp
(bad)
jle
call
(bad)
mov
repz
lods
add
repnz
jmp
dec
push
push
call
call
sbb
add
rol
add
xchg
call
push
(bad)
jle
inc
(bad)
mov
dec
repz
lods
add
add
repnz
jmp
call
dec
dec
inc
dec
dec
dec
call
pop
hlt
add
rol
add
add
mov
nop
nop
inc
ja
(bad)
jle
inc
jmp
inc
sar
or
add
lods
add
repnz
push
call
call
dec
inc
inc
(bad)
cmp
inc
add
add
add
mov
add
add
jmp
push
(bad)
jle
inc
xchg
xchg
jmp
inc
sar
or
add
lods
add
add
repnz
push
jmp
call
call
dec
inc
(bad)
cmp
push
(bad)
cmp
(bad)
js
push
call
adc
add
rol
add
add
ja
jle
push
call
jmp
jmp
push
(bad)
jl
inc
call
jmp
inc
sar
or
add
lods
add
repnz
push
jmp
jmp
call
call
dec
inc
(bad)
cmp
push
xor
sub
push
xor
outs
outs
jmp
call
adc
add
rol
add
outs
push
push
call
call
fs
push
(bad)
jp
inc
call
call
(bad)
mov
dec
repz
lods
add
add
repnz
push
jmp
jmp
call
call
call
dec
inc
(bad)
cmp
push
xor
sub
jmp
and
sub
jmp
pop
pop
call
adc
add
rol
add
repnz
push
jmp
dec
push
push
call
jmp
jmp
push
(bad)
js
(bad)
jg
inc
call
mov
(bad)
mov
dec
repz
lods
add
repnz
push
push
ins
ins
jmp
call
call
dec
inc
inc
(bad)
cmp
push
xor
sub
jmp
and
sbb
jmp
and
pop
pop
call
dec
pmuludq
add
add
add
repnz
dec
std
data16
dec
call
call
jmp
jmp
jmp
push
(bad)
jge
inc
call
call
push
(bad)
mov
repz
lods
add
add
repnz
push
(bad)
jns
push
jmp
jmp
call
call
dec
dec
inc
(bad)
ds
jmp
das
jmp
daa
jmp
and
sbb
dec
call
dec
inc
add
add
repnz
push
cld
imul
dec
call
call
jmp
jmp
jae
(bad)
jp
inc
dec
call
jmp
(bad)
mov
dec
repz
lods
add
repnz
push
(bad)
jge
push
jmp
jmp
jmp
call
call
dec
inc
(bad)
cmp
push
jmp
call
push
call
call
call
inc
add
lock
push
cld
imul
jno
push
push
call
jmp
jmp
push
push
(bad)
jge
inc
call
call
cmps
cmps
jmp
push
icebp
add
stos
add
add
add
mov
jmp
(bad)
jg
(bad)
jns
push
jmp
jmp
pop
pop
call
dec
dec
inc
(bad)
cmp
push
xor
sub
jmp
and
push
push
call
push
push
inc
add
add
out
push
push
cld
ins
ins
push
call
call
jmp
jmp
jae
(bad)
jns
(bad)
jg
inc
call
call
cmps
cmps
jmp
mov
dec
or
add
stos
add
add
scas
scas
jmp
add
outs
jmp
jmp
call
call
dec
inc
inc
(bad)
ds
aaa
push
xor
sub
call
call
call
inc
add
in
push
push
sti
ins
ins
push
call
jmp
jmp
jmp
push
(bad)
jnp
inc
dec
xchg
xchg
call
movs
movs
jmp
push
in
add
test
add
push
add
in
lods
lods
jmp
inc
(bad)
js
push
jmp
jmp
pop
pop
call
call
dec
inc
(bad)
cmp
push
jmp
call
call
inc
add
add
jmp
jae
call
jmp
push
push
push
(bad)
jge
inc
dec
xchg
xchg
call
jmp
jmp
dec
or
add
cmps
add
add
test
jmp
inc
(bad)
jns
push
jmp
jmp
jmp
call
call
dec
inc
inc
(bad)
aas
aas
(bad)
cmp
push
xor
pop
pop
jmp
call
inc
add
jmp
outs
push
jmp
jmp
jmp
jb
push
(bad)
jge
inc
dec
call
call
jmp
jmp
jmp
push
add
jmp
mov
add
jns
je
jmp
jmp
jmp
call
push
push
dec
dec
inc
(bad)
cmp
push
call
popa
popa
call
inc
add
add
out
push
cli
outs
outs
push
jmp
jmp
jmp
jb
push
(bad)
jl
inc
dec
dec
call
call
mov
add
movs
add
add
add
add
sahf
sahf
call
inc
(bad)
jns
push
outs
outs
jmp
jmp
call
call
call
dec
inc
ds
aaa
call
popa
popa
call
inc
add
in
push
cli
ins
ins
push
jmp
jmp
jmp
jno
push
(bad)
jp
(bad)
jle
inc
dec
dec
call
call
dec
or
add
lods
add
in
cdq
call
(bad)
jg
(bad)
jl
(bad)
js
push
jmp
jmp
jmp
pop
pop
call
call
dec
inc
inc
inc
(bad)
cmp
call
popa
popa
call
inc
add
add
jecxz
push
cli
imul
outs
jmp
jmp
jmp
push
push
js
(bad)
jl
(bad)
jg
inc
inc
dec
dec
xchg
xchg
dec
or
xchg
xchg
call
(bad)
jge
(bad)
jp
push
push
jmp
jmp
jmp
call
call
call
dec
dec
inc
(bad)
cmp
call
pusha
pusha
call
inc
add
loope
push
stc
imul
pusha
jmp
jmp
jmp
push
push
(bad)
js
(bad)
jnp
(bad)
jge
(bad)
jg
inc
inc
inc
dec
dec
push
push
jmp
jmp
jmp
jmp
call
call
call
dec
dec
inc
(bad)
cmp
call
call
inc
add
add
fist
stc
data16
call
jmp
jmp
jmp
jmp
push
push
push
push
(bad)
jns
(bad)
jp
(bad)
jnp
(bad)
jnp
(bad)
jp
(bad)
jle
inc
push
jb
jmp
jmp
push
jmp
call
push
push
call
dec
dec
inc
(bad)
cmp
call
call
inc
add
fisttp
stc
fs
call
popa
popa
jmp
addr16
jmp
outs
outs
push
push
push
push
push
push
push
push
jmp
jmp
jmp
jmp
jmp
jmp
call
call
call
call
dec
dec
inc
(bad)
cmp
call
call
inc
add
add
fisttp
clc
pusha
pusha
jmp
call
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
call
call
call
dec
dec
inc
inc
(bad)
cmp
call
call
add
fild
add
add
dec
dec
clc
pop
pop
call
call
call
call
pop
pop
jmp
jmp
jmp
jmp
jmp
fs
jmp
jmp
jmp
call
call
pop
pop
call
call
push
push
dec
dec
inc
inc
(bad)
cmp
call
call
call
inc
add
add
fadd
clc
pop
pop
call
call
call
call
call
call
call
call
call
pop
pop
call
pop
pop
call
call
call
call
call
call
dec
dec
inc
inc
(bad)
ds
cmp
dec
call
dec
inc
add
(bad)
inc
inc
not
push
push
dec
dec
dec
call
call
call
push
push
call
push
push
call
push
push
call
call
dec
dec
dec
dec
inc
inc
(bad)
aas
aas
(bad)
cmp
(bad)
cmp
dec
dec
dec
inc
add
add
aam
test
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
(bad)
ds
cmp
(bad)
cmp
push
dec
inc
inc
add
sar
cmp
dec
dec
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
(bad)
ds
cmp
(bad)
cmp
push
aaa
push
push
xor
inc
inc
inc
inc
inc
inc
add
add
js
add
shl
inc
(bad)
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
(bad)
cmp
(bad)
cmp
push
aaa
push
push
xor
sub
(bad)
ds
cmp
inc
add
add
cmp
add
add
add
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
(bad)
cmp
jmp
das
jmp
jmp
sub
es
sub
ss
inc
add
add
xchg
inc
add
int3
das
das
push
xor
xor
push
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
jmp
jmp
jmp
and
pop
pop
call
jmp
and
sub
jmp
sub
add
iret
add
xchg
add
inc
add
retf
jmp
daa
jmp
daa
jmp
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
sub
sbb
call
sbb
adc
call
pop
jmp
and
push
push
inc
add
add
pop
add
add
add
sbb
call
call
dec
dec
dec
call
call
call
call
call
call
call
dec
dec
dec
dec
dec
dec
inc
call
adc
pi2fw
or
or
dec
call
adc
add
int3
add
mov
add
add
adc
call
adc
adc
call
sbb
dec
dec
call
call
call
call
call
call
push
push
call
push
push
call
call
call
call
dec
dec
dec
dec
dec
jmp
sub
add
inc
add
push
push
dec
dec
or
add
retf
lea
add
add
add
add
dec
or
adc
call
call
call
push
push
call
call
call
call
call
call
call
call
call
call
push
push
call
call
dec
dec
dec
dec
dec
or
add
inc
add
add
inc
add
add
inc
add
add
mov
add
add
add
inc
add
add
call
adc
push
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
push
inc
add
add
inc
add
add
inc
add
add
mov
add
add
add
add
inc
add
add
call
adc
pop
pop
call
call
call
call
call
call
call
call
call
call
call
call
adc
add
call
call
call
call
call
call
call
call
call
call
call
call
inc
pop
inc
add
add
inc
add
add
les
add
add
inc
add
mov
add
add
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
adc
add
inc
add
add
inc
add
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
inc
add
add
inc
add
add
ret
mov
add
add
add
inc
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
inc
add
add
inc
add
add
inc
add
jb
push
push
push
push
push
push
push
push
push
push
push
inc
inc
add
add
inc
add
add
rol
xchg
add
add
add
add
call
pop
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
call
pop
inc
add
add
inc
add
add
mov
add
add
inc
add
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
dec
inc
add
add
inc
add
add
mov
add
add
add
mov
add
add
call
sbb
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
add
inc
add
add
inc
add
add
add
add
inc
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
inc
add
add
inc
add
add
mov
add
add
mov
add
add
inc
add
sbb
dec
dec
dec
dec
dec
dec
call
sbb
add
inc
add
add
inc
add
add
add
add
add
add
add
inc
add
mov
mov
mov
mov
mov
mov
push
push
inc
add
add
inc
add
add
mov
add
add
add
mov
add
add
inc
add
sbb
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
inc
add
add
inc
add
add
mov
mov
add
add
inc
add
add
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
inc
add
add
inc
add
add
mov
add
add
add
inc
add
push
push
call
call
call
call
call
call
call
inc
add
add
inc
add
add
add
add
add
inc
add
sahf
sahf
call
call
call
call
call
call
inc
add
add
inc
add
add
mov
add
add
add
add
inc
add
pop
pop
jmp
jmp
jmp
jmp
jmp
jmp
call
pop
inc
add
add
inc
add
add
mov
mov
add
add
inc
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
add
add
inc
add
add
mov
add
add
add
add
inc
add
and
push
push
push
push
push
push
jmp
and
add
inc
add
add
inc
add
add
add
add
add
inc
add
mov
push
push
push
push
push
push
inc
add
add
inc
add
add
mov
add
add
add
add
lods
add
inc
add
add
jmp
and
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
jmp
and
add
inc
add
add
inc
add
add
add
add
inc
add
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
push
add
inc
add
add
inc
add
add
add
add
add
jmp
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
jmp
inc
add
add
inc
add
add
stos
add
add
add
add
inc
add
ret
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
(bad)
jp
inc
add
add
inc
add
add
mov
add
add
test
add
add
jmp
es
int
int
dec
int
int
dec
int
int
dec
int
int
dec
int
int
dec
int
int
jmp
inc
add
add
inc
add
add
test
add
add
add
inc
add
int
dec
int
int
dec
int
int
dec
int
int
dec
int
int
dec
int
int
dec
int
add
add
add
inc
add
add
add
add
add
add
add
dec
push
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
sub
add
inc
add
add
inc
add
add
add
add
add
inc
add
(bad)
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
inc
add
add
inc
add
add
test
add
add
cmps
add
stc
add
inc
add
(bad)
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
add
inc
add
add
inc
add
add
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
add
add
inc
add
add
cmps
add
jg
movs
add
stc
add
inc
add
(bad)
ud0
call
call
(bad)
call
(bad)
call
inc
add
add
inc
add
add
movs
add
add
inc
add
add
(bad)
call
(bad)
call
(bad)
call
(bad)
call
inc
add
add
inc
add
add
movs
add
jg
add
mov
add
add
call
adc
repnz
repnz
repnz
repnz
repnz
inc
add
add
inc
add
add
add
add
inc
add
repnz
repnz
repnz
repnz
repnz
inc
add
add
inc
add
add
mov
mov
add
add
call
adc
sti
sti
(bad)
sti
sti
(bad)
sti
sti
jmp
das
inc
add
add
inc
add
add
mov
add
add
add
add
inc
add
sti
sti
(bad)
sti
sti
(bad)
sti
sti
call
inc
add
add
inc
add
add
mov
add
sahf
add
stc
add
inc
add
adc
(bad)
(bad)
(bad)
push
xor
add
inc
add
add
inc
add
add
add
add
inc
add
(bad)
(bad)
call
inc
add
add
inc
add
add
sahf
add
jns
pushf
add
stc
add
inc
add
add
inc
add
add
inc
add
add
pushf
add
add
inc
add
add
inc
add
add
inc
add
add
pushf
add
jns
add
call
add
inc
add
add
inc
add
add
add
add
inc
add
add
inc
add
cdq
add
stc
add
inc
add
add
cdq
add
add
add
add
inc
add
add
xchg
add
stc
add
xchg
add
add
xchg
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
inc
(bad)
inc
cmp
add
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
(bad)
inc
(bad)
cld
add
(bad)
cld
add
add
(bad)
(bad)
clc
add
lock
(bad)
push
add
loopne
ud0
loopne
xadd
pop
(bad)
inc
add
add
(bad)
inc
add
inc
add
add
add
inc
add
add
add
add
add
add
pop
rol
pop
lock
pavgb
add
loopne
add
lock
pop
rol
aas
clc
add
add
add
add
add
(bad)
inc
add
add
add
inc
add
add
add
inc
pop
(bad)
inc
add
add
ud0
loopne
add
add
(bad)
push
add
add
aas
(bad)
(bad)
clc
add
add
jg
(bad)
cld
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
ud0
(bad)
jmp
add
ud0
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
cld
add
add
jg
(bad)
clc
add
add
aas
(bad)
push
add
add
pop
(bad)
jmp
add
add
ud0
rol
add
pop
(bad)
inc
add
inc
add
add
add
inc
add
add
add
cld
add
add
add
jg
add
pop
add
aas
lock
xadd
add
loopne
add
loopne
add
rol
aas
lock
pop
add
jg
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
add
add
inc
add
add
(bad)
inc
ud0
rol
loopne
pop
(bad)
jmp
add
lock
(bad)
push
add
clc
add
(bad)
clc
add
add
(bad)
(bad)
cld
add
inc
(bad)
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
(bad)
inc
(bad)
inc
xchg
dec
(bad)
(bad)
(bad)
dec
jmp
add
add
add
add
add
add
sbb
add
add
or
add
mov
add
add
add
rol
mov
add
lods
add
push
stos
stos
call
rol
add
mov
xchg
xchg
(bad)
mov
lods
push
mov
call
dec
rol
mov
push
inc
inc
sar
add
add
call
inc
inc
inc
(bad)
jp
inc
add
add
add
jae
gs
inc
jmp
inc
add
add
add
jmp
call
inc
push
xor
xor
jmp
inc
add
add
add
add
arpl
pusha
pusha
call
jmp
push
(bad)
jg
dec
jmp
inc
add
add
jmp
call
dec
inc
push
xor
and
jmp
and
push
push
inc
add
add
imul
pop
jmp
jp
inc
jmp
(bad)
mov
lods
push
mov
jmp
jmp
call
dec
(bad)
cmp
jmp
call
inc
add
add
add
ins
ins
call
jmp
push
(bad)
jg
dec
jmp
push
add
push
scas
scas
jmp
jmp
jmp
call
inc
push
aaa
jmp
sub
pop
pop
inc
add
add
outs
outs
call
jmp
push
inc
call
jmp
inc
add
add
add
push
test
call
push
jmp
call
dec
aas
aas
push
xor
pusha
pusha
inc
add
add
add
outs
outs
jmp
jmp
ja
inc
dec
call
inc
add
call
push
imul
push
inc
aaa
aaa
jmp
inc
add
add
imul
popa
jmp
push
jl
inc
dec
call
mov
jno
jmp
call
call
dec
(bad)
cmp
jmp
inc
add
add
add
data16
jmp
jmp
push
push
(bad)
jp
(bad)
jnp
(bad)
jle
inc
jmp
fs
push
push
dec
(bad)
cmp
inc
add
add
pusha
pusha
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
call
dec
inc
(bad)
cmp
inc
add
add
add
pop
pop
call
call
call
call
call
pop
pop
call
call
call
dec
inc
(bad)
cmp
call
inc
add
add
dec
dec
inc
dec
dec
dec
dec
dec
dec
dec
inc
inc
(bad)
cmp
push
inc
add
add
add
inc
inc
(bad)
cmp
dec
dec
dec
cmp
push
aaa
push
xor
sub
inc
add
add
add
das
push
xor
dec
dec
dec
dec
dec
dec
inc
jmp
call
pop
jmp
and
sub
inc
add
add
sbb
sbb
dec
call
call
call
dec
dec
dec
call
adc
or
dec
inc
add
add
add
add
push
push
call
push
push
call
call
call
call
call
call
dec
dec
inc
add
add
inc
add
add
mov
inc
add
inc
add
pop
pop
call
call
call
call
call
call
adc
add
call
call
call
call
call
call
inc
add
add
inc
add
add
add
add
add
push
push
push
push
push
push
call
inc
add
add
push
push
push
push
push
push
inc
add
add
inc
add
add
add
inc
add
add
cmp
cmp
cmp
cmp
sbb
add
inc
add
add
add
inc
inc
inc
inc
add
add
inc
add
add
add
add
inc
add
xchg
xchg
call
xchg
xchg
call
sbb
inc
add
add
mov
add
add
add
add
add
xchg
xchg
call
xchg
xchg
call
add
inc
add
add
add
cmp
add
cmps
cmps
jmp
jmp
jmp
inc
add
add
mov
add
add
cmps
cmps
jmp
jmp
jmp
inc
add
add
jle
add
cmp
add
add
(bad)
mov
(bad)
mov
(bad)
mov
jmp
and
add
inc
add
lods
add
inc
add
mov
(bad)
mov
(bad)
mov
inc
add
add
inc
add
add
add
add
inc
add
int
dec
int
int
dec
int
int
dec
int
es
add
add
test
add
test
add
int
dec
int
int
dec
int
int
dec
int
add
inc
add
add
outs
add
add
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
add
inc
add
cmps
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
add
add
cmps
add
add
adc
repnz
repnz
inc
add
add
mov
add
repnz
repnz
inc
add
add
mov
add
adc
xor
inc
add
add
sahf
sahf
add
inc
add
pop
pop
inc
add
add
sahf
add
add
add
add
call
call
add
call
add
add
add
add
add
(bad)
call
loopne
inc
sar
add
(bad)
add
pop
loopne
add
rol
add
pop
loopne
add
lock
pop
clc
add
aas
cld
add
jg
add
(bad)
inc
add
inc
add
inc
add
add
aas
clc
add
pop
lock
pavgb
add
rol
add
pop
rol
pavgb
add
lock
jg
pop
loopne
dec
icebp
(bad)
call
sub
add
adc
add
and
add
add
sbb
add
add
inc
add
add
add
adc
add
add
adc
xor
sbb
bound
fild
add
add
sbb
pop
je
call
loopne
add
adc
jbe
popa
cld
jns
call
fadd
add
sbb
pop
jle
cli
pop
pop
inc
push
aaa
fild
scas
pop
pop
jmp
inc
push
fadd
add
add
add
add
sbb
pop
test
dec
dec
push
xor
cmp
dec
or
add
and
fwait
addr16
jns
dec
jmp
xlat
add
and
push
push
add
pop
inc
(bad)
cmp
popa
add
and
ja
add
pusha
loopne
jo
jge
call
dec
inc
stc
(bad)
maxps
add
pop
pop
cwde
pop
pop
jmp
jmp
je
jmp
pop
pop
dec
aas
aas
test
add
add
sbb
push
call
inc
inc
push
ss
or
push
add
push
das
das
test
aas
aas
jmp
fld
add
add
add
push
icebp
dec
dec
call
call
call
inc
inc
call
push
inc
add
add
sbb
add
pop
repz
js
jmp
call
adc
sub
push
je
dec
inc
int
add
add
add
add
add
push
repnz
test
sbb
repnz
push
add
test
cmp
cwde
cwde
call
inc
push
retf
add
sbb
add
cs
dec
enter
jmp
and
add
dec
mov
(bad)
mov
dec
int
add
add
rcl
lock
retf
sub
add
dec
add
mov
(bad)
jmp
jmp
inc
add
ins
add
mov
cmp
add
dec
test
(bad)
cmp
push
jle
add
add
add
add
add
repz
xchg
add
add
add
add
add
add
add
pop
add
loopne
add
lock
loopne
add
rol
add
add
add
add
pop
rol
(bad)
jecxz
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
(bad)
add
sub
add
xor
lods
add
arpl
add
add
cmp
movs
movs
call
sbb
add
add
add
add
adc
fadd
inc
add
add
aas
repnz
movs
(bad)
mov
jmp
sub
add
xor
add
sub
adc
xchg
xchg
jmp
(bad)
cmp
repz
jb
add
add
das
std
pushf
pushf
call
mov
call
fiadd
add
add
adc
jmp
(bad)
jns
call
test
pusha
add
ins
sub
dec
(bad)
jge
dec
push
loopne
add
add
add
adc
fcom
jmp
inc
(bad)
ds
dec
inc
add
add
add
xor
test
ins
ins
push
jg
inc
(bad)
mov
jmp
sub
add
xor
sub
adc
call
push
push
push
dec
inc
inc
(bad)
cmp
call
(bad)
jle
jmp
sub
add
jb
add
and
jp
(bad)
jns
call
jmp
push
(bad)
jle
inc
call
jmp
add
sub
add
cmp
push
retf
push
call
call
dec
inc
push
jmp
jmp
jmp
test
pusha
xchg
and
cld
jae
jmp
call
call
jmp
push
(bad)
jl
inc
call
inc
sar
mov
sbb
loopne
add
add
pop
pop
out
cwde
cwde
push
jmp
pop
pop
call
dec
(bad)
aas
aas
push
call
jmp
jmp
and
add
add
add
add
inc
inc
push
call
dec
call
gs
(bad)
jns
inc
call
jmp
jmp
jmp
dec
and
fisub
(bad)
jg
jmp
gs
call
inc
(bad)
cmp
jmp
sub
sbb
jmp
sub
pop
pop
inc
inc
add
add
add
add
or
push
push
jmp
call
call
jmp
jmp
jne
(bad)
jle
inc
call
jmp
push
loop
add
cmp
push
push
jmp
jmp
call
dec
inc
cmp
push
xor
and
jmp
daa
call
dec
dec
or
add
aas
add
jecxz
push
push
call
call
jmp
push
(bad)
jp
inc
call
jmp
(bad)
mov
jmp
jmp
add
add
sbb
in
mov
inc
push
jmp
call
call
dec
dec
inc
push
aaa
jmp
sub
sub
dec
dec
or
add
sub
add
or
ror
push
pusha
pusha
jmp
jmp
jne
(bad)
jge
inc
call
mov
push
jmp
sub
add
aas
add
and
sahf
sahf
jmp
(bad)
jp
push
imul
(bad)
call
call
inc
(bad)
cmp
push
aaa
call
dec
dec
or
add
cmp
add
add
or
rcl
push
jmp
jmp
jmp
push
(bad)
jle
inc
call
call
push
jmp
cmp
add
add
add
add
and
fmul
inc
push
jmp
jmp
call
call
dec
dec
inc
push
aaa
(bad)
cmp
call
call
dec
or
add
cmp
add
add
push
push
push
jmp
jmp
push
(bad)
js
(bad)
jle
inc
nop
nop
call
fwait
fwait
jmp
jmp
daa
out
add
add
add
add
xchg
jmp
(bad)
jl
push
jmp
jmp
jmp
call
dec
inc
(bad)
cmp
(bad)
cmp
jmp
dec
dec
dec
or
add
sub
add
add
or
push
jmp
jmp
push
push
(bad)
jge
inc
dec
call
jmp
jmp
fild
add
pop
into
mov
cmp
jnp
jbe
jmp
jmp
jmp
call
call
dec
(bad)
ds
jmp
dec
dec
or
add
add
cmp
in
popa
push
jmp
push
push
(bad)
jp
(bad)
jg
inc
dec
dec
dec
idiv
call
(bad)
jns
push
outs
outs
jmp
jmp
call
call
dec
inc
inc
(bad)
cmp
call
dec
or
add
aas
xor
psrad
jmp
jmp
jmp
jmp
push
push
(bad)
jp
(bad)
jl
(bad)
jg
inc
inc
dec
(bad)
jnp
push
push
jmp
data16
call
call
dec
dec
inc
inc
call
dec
call
adc
add
inc
add
cmp
ficom
jmp
jmp
jmp
imul
jo
jae
push
push
(bad)
js
push
(bad)
jns
inc
jmp
jmp
addr16
call
call
call
dec
inc
inc
inc
call
call
adc
fadd
add
add
add
pop
jmp
call
pop
pop
jmp
addr16
jmp
jmp
jmp
jmp
jmp
imul
push
arpl
pop
pop
call
call
dec
dec
inc
(bad)
aas
aas
call
call
dec
or
add
inc
add
xor
jmp
call
call
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
call
pop
pop
call
call
dec
inc
inc
(bad)
aas
aas
(bad)
aas
aas
call
inc
inc
call
adc
add
add
add
cmp
adc
dec
dec
call
call
call
call
call
call
call
call
call
call
call
call
dec
dec
inc
inc
inc
(bad)
cmp
dec
dec
dec
dec
(bad)
add
dec
add
xor
dec
call
dec
dec
dec
dec
dec
call
dec
dec
dec
dec
dec
dec
inc
inc
(bad)
ds
cmp
(bad)
cmp
dec
inc
inc
dec
or
add
add
add
or
retf
cmp
stc
dec
dec
inc
dec
dec
dec
dec
dec
inc
inc
(bad)
aas
aas
(bad)
ds
cmp
(bad)
cmp
push
push
inc
push
ss
or
cmp
add
sbb
inc
inc
(bad)
cmp
inc
dec
dec
dec
dec
dec
(bad)
aas
aas
push
push
xor
das
das
jmp
sub
aaa
aaa
(bad)
cmp
dec
movntq
add
sub
sub
xor
(bad)
cmp
dec
dec
dec
dec
dec
dec
dec
ds
sub
and
jmp
and
and
jmp
jmp
sub
or
retf
sub
add
add
pop
pop
les
and
and
push
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
jmp
call
call
adc
adc
call
pop
call
rol
add
add
sub
adc
pop
pop
jmp
dec
call
call
call
call
call
call
call
call
dec
dec
dec
jmp
das
call
adc
add
inc
call
adc
add
les
add
sub
add
pop
pop
inc
pop
jmp
and
push
push
call
push
push
call
call
call
call
call
call
call
call
call
dec
call
dec
jmp
and
add
inc
add
add
inc
add
add
int
add
add
cmp
add
add
and
call
call
call
call
call
call
call
call
call
jmp
sub
dec
dec
call
push
push
call
call
call
call
inc
jmp
sub
add
inc
add
add
inc
add
add
xor
add
add
add
mov
add
daa
daa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
and
add
call
sbb
pop
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
and
add
inc
add
add
rol
das
add
daa
add
rol
inc
add
sub
push
push
jmp
jmp
jmp
jmp
jmp
push
push
jmp
inc
add
add
inc
add
pop
pop
jmp
je
jmp
jmp
jmp
jmp
jmp
push
push
xor
inc
add
add
mov
add
and
add
add
and
(bad)
js
(bad)
jge
(bad)
jns
(bad)
jp
(bad)
jp
(bad)
jp
(bad)
jns
(bad)
jge
(bad)
jl
jmp
inc
add
add
clc
add
loopne
add
add
push
xor
jne
(bad)
jge
(bad)
jns
(bad)
jp
(bad)
jp
(bad)
jp
(bad)
jns
(bad)
jge
push
daa
daa
inc
add
add
sti
add
mov
add
add
adc
add
add
sub
inc
test
test
test
xchg
das
das
inc
add
add
std
add
mov
add
add
sub
dec
inc
test
test
xchg
add
inc
add
add
mov
add
push
add
test
add
das
das
dec
call
call
call
call
inc
add
add
stc
add
mov
add
add
daa
add
mov
add
sub
dec
nop
nop
call
call
call
cmp
inc
add
add
sti
add
mov
add
add
push
add
sahf
add
sti
add
jmp
jmp
call
call
jmp
(bad)
cmp
inc
add
add
mov
add
sub
add
add
ds
call
call
call
xchg
xchg
push
xor
add
inc
add
add
scas
add
sbb
adc
add
add
aaa
aaa
jmp
jmp
jmp
jmp
jmp
inc
add
add
cld
add
mov
sub
add
add
xor
push
jmp
jmp
jmp
push
inc
add
add
inc
add
add
add
mov
add
cmp
jmp
push
push
push
push
inc
add
add
clc
add
mov
add
add
add
add
mov
add
add
push
jmp
mov
push
push
(bad)
mov
dec
inc
add
add
stc
add
lods
add
push
sub
add
add
cmp
inc
sar
leave
inc
sar
ret
ret
ret
sar
retf
mov
add
inc
add
add
mov
add
add
add
mov
add
add
push
xor
mov
inc
sar
ret
ret
ret
sar
leave
(bad)
mov
inc
add
add
stc
add
test
add
add
stos
add
repnz
push
xor
into
into
call
(bad)
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
call
aam
into
into
inc
inc
add
add
cmc
add
mov
add
add
add
add
add
sub
inc
(bad)
(bad)
fcomp
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
call
(bad)
(bad)
(bad)
push
inc
add
add
inc
add
add
add
or
(bad)
call
(bad)
fcmovnu
(bad)
(bad)
(bad)
fcmovnu
jmp
jecxz
fcmovu
(bad)
cmp
inc
add
add
lahf
add
sub
add
add
scas
add
out
add
(bad)
cmp
dec
enter
(bad)
fcmovnu
(bad)
(bad)
(bad)
fcmovnu
(bad)
(bad)
jmp
jecxz
jae
dec
push
inc
add
add
into
add
dec
xchg
add
rol
cli
add
(bad)
jle
(bad)
jmp
out
lock
(bad)
dec
inc
add
add
cmc
add
movs
add
and
add
and
add
add
cmp
(bad)
(bad)
push
lock
call
(bad)
out
out
inc
inc
add
add
enter
add
mov
add
add
xchg
sti
sti
push
repnz
inc
add
add
cmc
add
mov
adc
add
add
xor
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
jg
inc
add
add
inc
add
add
dec
lea
add
add
cmc
cmc
dec
inc
add
add
hlt
add
call
adc
add
inc
(bad)
fstp
dec
inc
add
add
lds
add
add
add
or
(bad)
cmp
inc
add
add
repz
sahf
add
and
and
add
add
and
inc
add
add
sti
add
ret
dec
add
mov
add
add
repz
pushf
add
adc
add
adc
add
add
add
inc
add
add
dec
add
xchg
add
add
add
add
add
nop
add
fild
add
add
dec
mov
add
add
and
add
add
add
pop
(bad)
(bad)
clc
jg
add
ud0
lock
add
clc
pop
(bad)
jmp
pop
add
lock
inc
sldt
loopne
(bad)
inc
add
inc
add
add
add
add
add
cld
add
add
add
pop
clc
add
add
add
(bad)
add
add
add
pop
loopne
add
add
add
add
add
add
add
loopne
add
add
add
lock
add
pop
add
clc
add
add
aas
add
cld
add
add
jg
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
pop
inc
add
loopne
add
inc
add
lock
pop
inc
add
clc
add
aas
inc
add
cld
add
pop
inc
add
lock
ud0
add
loopne
add
inc
add
rol
add
add
inc
add
inc
add
add
add
inc
add
add
add
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
loopne
add
add
add
rol
add
add
add
rol
add
add
pavgb
add
add
add
lock
add
add
aas
clc
add
add
add
jg
add
add
add
inc
add
add
add
inc
pop
add
loopne
(bad)
inc
pop
(bad)
inc
pop
add
clc
ud0
loopne
add
cld
pop
(bad)
push
jg
add
aas
(bad)
(bad)
clc
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
je
add
jno
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
les
add
pop
add
jns
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
add
retf
sbb
add
add
add
cmp
add
sbb
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
clc
dec
or
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
xor
call
push
hlt
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jmp
cli
push
xchg
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
ds
movs
movs
(bad)
call
sbb
repnz
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jmp
push
mov
push
xchg
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
aas
aas
idiv
test
(bad)
jmp
(bad)
call
hlt
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jmp
cli
jmp
(bad)
push
mov
push
xchg
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
stos
stos
(bad)
jmp
mov
(bad)
call
xchg
(bad)
call
hlt
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jmp
cli
jmp
stos
(bad)
jmp
mov
push
mov
(bad)
mov
cwde
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
stos
stos
(bad)
jmp
cmps
(bad)
jmp
lahf
(bad)
call
cdq
(bad)
dec
sbb
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jmp
jmp
cmps
(bad)
jmp
lods
(bad)
jmp
mov
push
mov
(bad)
call
or
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
lods
lods
(bad)
jmp
test
jmp
(bad)
call
pushf
(bad)
call
xchg
(bad)
dec
sbb
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jmp
cli
jmp
mov
(bad)
jmp
cdq
(bad)
(bad)
jle
(bad)
call
mov
push
mov
(bad)
call
or
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
scas
scas
(bad)
jmp
(bad)
jmp
xchg
(bad)
call
(bad)
call
(bad)
call
xchg
(bad)
call
(bad)
inc
sbb
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
call
cli
call
(bad)
jmp
movs
(bad)
call
jnp
(bad)
jle
(bad)
inc
xchg
(bad)
push
mov
(bad)
(bad)
mov
fwait
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
mov
(bad)
jmp
stos
(bad)
jmp
xchg
(bad)
call
(bad)
dec
dec
(bad)
call
call
xchg
(bad)
call
(bad)
(bad)
inc
sbb
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
call
call
call
mov
xchg
(bad)
push
(bad)
(bad)
jnp
(bad)
(bad)
jle
(bad)
inc
test
call
mov
(bad)
mov
mov
(bad)
call
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
mov
(bad)
jmp
lods
(bad)
jmp
cwde
(bad)
call
(bad)
call
(bad)
dec
dec
(bad)
inc
call
(bad)
dec
mov
dec
(bad)
(bad)
jge
(bad)
call
sbb
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
call
cli
call
xchg
(bad)
call
pushf
(bad)
dec
jae
push
(bad)
(bad)
jnp
(bad)
(bad)
jle
(bad)
inc
xchg
dec
pushf
(bad)
push
mov
(bad)
(bad)
mov
pushf
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
mov
(bad)
push
scas
(bad)
jmp
call
push
push
(bad)
call
(bad)
dec
dec
(bad)
inc
inc
(bad)
dec
dec
mov
inc
test
(bad)
js
(bad)
call
pop
hlt
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
call
cli
dec
xchg
(bad)
call
xchg
(bad)
dec
outs
(bad)
push
(bad)
push
(bad)
(bad)
jnp
(bad)
(bad)
jle
(bad)
inc
test
dec
(bad)
(bad)
call
mov
(bad)
(bad)
mov
mov
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
mov
(bad)
push
scas
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
dec
(bad)
inc
inc
(bad)
(bad)
cmp
(bad)
dec
(bad)
inc
(bad)
inc
jg
push
call
push
hlt
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
call
dec
(bad)
(bad)
call
xchg
(bad)
inc
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jnp
(bad)
(bad)
jle
(bad)
inc
test
dec
(bad)
(bad)
call
mov
(bad)
(bad)
mov
mov
(bad)
call
or
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
lods
(bad)
call
arpl
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
dec
(bad)
inc
inc
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
inc
(bad)
jg
(bad)
inc
jle
(bad)
jp
(bad)
push
(bad)
call
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
call
cli
inc
mov
dec
(bad)
inc
addr16
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
(bad)
jle
(bad)
inc
test
dec
mov
call
xchg
(bad)
jmp
mov
(bad)
(bad)
mov
sar
popf
popf
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
scas
(bad)
call
data16
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
inc
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
(bad)
inc
(bad)
(bad)
jp
(bad)
(bad)
jl
(bad)
(bad)
jns
(bad)
push
(bad)
jmp
call
hlt
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
cli
inc
test
inc
mov
(bad)
jl
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
(bad)
jle
(bad)
inc
test
dec
mov
call
xchg
(bad)
call
cmps
(bad)
(bad)
mov
mov
(bad)
inc
sar
popf
popf
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
scas
(bad)
jmp
push
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
(bad)
push
xor
(bad)
cmp
(bad)
push
(bad)
(bad)
js
(bad)
push
push
(bad)
jmp
(bad)
call
adc
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
cli
(bad)
jl
(bad)
(bad)
jg
(bad)
inc
xchg
(bad)
js
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jns
(bad)
(bad)
jge
(bad)
inc
cmp
xchg
(bad)
dec
xchg
(bad)
call
call
mov
mov
(bad)
inc
sar
popf
popf
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
mov
jmp
ins
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
push
aaa
(bad)
push
(bad)
push
xor
jmp
(bad)
push
aaa
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
jmp
(bad)
call
adc
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
cli
push
(bad)
(bad)
jp
(bad)
(bad)
jle
(bad)
inc
jae
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jl
(bad)
(bad)
jg
(bad)
inc
xchg
dec
mov
call
xchg
(bad)
call
popf
(bad)
jmp
mov
(bad)
(bad)
mov
sar
popf
popf
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
mov
jmp
jo
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
push
aaa
(bad)
push
xor
jmp
das
(bad)
jmp
sub
jmp
sub
push
xor
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
adc
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
cli
push
(bad)
push
(bad)
(bad)
jns
(bad)
(bad)
jl
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
push
(bad)
push
(bad)
js
(bad)
(bad)
jnp
(bad)
(bad)
jg
(bad)
inc
xchg
dec
(bad)
(bad)
call
xchg
(bad)
call
pushf
(bad)
jmp
stos
(bad)
(bad)
mov
mov
(bad)
inc
sar
popf
popf
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
mov
(bad)
push
mov
push
mov
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
push
ss
push
xor
jmp
das
(bad)
jmp
sub
jmp
daa
(bad)
jmp
and
jmp
das
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
adc
inc
add
inc
add
in
add
pop
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
cdq
add
repnz
add
inc
cli
jmp
(bad)
push
(bad)
push
push
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
(bad)
jle
(bad)
inc
test
dec
mov
call
xchg
(bad)
call
fwait
(bad)
call
mov
(bad)
(bad)
mov
mov
(bad)
inc
sar
popf
popf
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
mov
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
call
call
(bad)
dec
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
cmp
push
ss
push
xor
jmp
cs
jmp
sub
jmp
daa
(bad)
jmp
and
call
pop
(bad)
jmp
sub
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
call
adc
inc
add
inc
add
in
add
sbb
add
add
add
sbb
add
push
add
add
add
mov
inc
add
(bad)
aas
aas
cli
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
jmp
(bad)
dec
(bad)
call
(bad)
call
call
(bad)
call
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jns
(bad)
(bad)
jge
(bad)
inc
cmp
xchg
(bad)
dec
xchg
(bad)
call
cdq
(bad)
call
mov
(bad)
jmp
mov
(bad)
(bad)
mov
sar
pushf
pushf
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
mov
jmp
js
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
dec
(bad)
inc
inc
(bad)
(bad)
cmp
cmp
push
xor
jmp
sub
jmp
es
jmp
and
call
push
(bad)
call
sbb
jmp
es
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
call
adc
inc
add
inc
add
jmp
add
inc
add
add
add
add
add
repnz
add
(bad)
cmp
cli
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
dec
(bad)
dec
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jl
(bad)
(bad)
jg
(bad)
inc
xchg
dec
(bad)
(bad)
call
xchg
(bad)
call
fwait
(bad)
call
mov
(bad)
jmp
mov
(bad)
(bad)
mov
mov
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
mov
jmp
jnp
push
push
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
(bad)
push
xor
jmp
sub
jmp
and
call
push
(bad)
call
sbb
call
push
(bad)
jmp
and
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
pmuludq
add
repnz
add
aaa
add
add
add
add
add
repnz
add
dec
std
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
inc
(bad)
dec
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
push
(bad)
push
(bad)
push
(bad)
(bad)
jnp
(bad)
(bad)
jle
(bad)
inc
test
dec
mov
dec
xchg
(bad)
call
call
mov
movs
(bad)
jmp
scas
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
fwait
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
mov
jmp
jge
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
push
aaa
(bad)
push
xor
push
xor
jmp
(bad)
jmp
sub
jmp
(bad)
jmp
and
call
sbb
call
push
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
call
pop
idiv
add
repnz
add
lods
add
add
add
add
add
add
add
add
add
in
mov
push
push
repz
std
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
dec
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jns
(bad)
(bad)
jge
(bad)
inc
cmp
xchg
(bad)
dec
xchg
(bad)
call
cwde
(bad)
call
lahf
(bad)
jmp
movs
(bad)
jmp
mov
(bad)
mov
mov
(bad)
(bad)
mov
call
add
repnz
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
push
mov
push
mov
jmp
jg
(bad)
jns
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
push
ss
push
xor
jmp
das
(bad)
jmp
sub
jmp
daa
(bad)
jmp
(bad)
jmp
and
call
(bad)
call
sbb
call
sbb
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
call
idiv
add
repnz
add
repz
xchg
dec
add
add
add
add
add
in
mov
push
push
repz
std
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
dec
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
js
(bad)
(bad)
jl
(bad)
(bad)
jg
(bad)
inc
test
dec
mov
dec
xchg
(bad)
call
cdq
(bad)
call
mov
(bad)
jmp
test
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
cdq
std
dec
repz
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
mov
(bad)
push
mov
push
movs
(bad)
inc
jnp
push
(bad)
push
push
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
dec
(bad)
inc
inc
(bad)
(bad)
cmp
cmp
push
xor
jmp
cs
jmp
sub
jmp
es
jmp
and
call
pop
(bad)
call
sbb
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
add
inc
add
repz
xchg
dec
add
add
add
add
add
in
mov
push
push
repz
cld
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
(bad)
jge
(bad)
inc
cmp
xchg
(bad)
dec
xchg
(bad)
call
(bad)
call
sahf
(bad)
jmp
movs
(bad)
jmp
stos
(bad)
push
mov
(bad)
mov
mov
(bad)
call
or
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
repnz
idiv
mov
(bad)
push
mov
jmp
movs
(bad)
inc
jge
(bad)
jns
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
(bad)
push
xor
jmp
sub
jmp
and
call
push
(bad)
call
pop
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
add
inc
add
repz
xchg
dec
add
add
add
add
add
jmp
push
icebp
call
cld
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jl
(bad)
(bad)
jg
(bad)
inc
test
dec
mov
dec
xchg
(bad)
call
cwde
(bad)
call
(bad)
jmp
movs
(bad)
jmp
stos
(bad)
jmp
mov
push
mov
(bad)
call
or
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
icebp
inc
idiv
mov
(bad)
push
mov
jmp
movs
(bad)
inc
jle
(bad)
jnp
(bad)
(bad)
js
(bad)
push
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
push
aaa
(bad)
push
xor
push
xor
jmp
(bad)
jmp
sub
jmp
(bad)
jmp
and
jmp
and
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
push
idiv
add
icebp
inc
add
repz
xchg
dec
add
add
add
add
add
jmp
push
icebp
call
cld
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
push
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
(bad)
jge
(bad)
inc
cmp
xchg
(bad)
dec
nop
(bad)
call
xchg
(bad)
call
pushf
(bad)
call
mov
(bad)
jmp
stos
(bad)
jmp
mov
push
mov
push
xchg
cld
dec
icebp
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
lock
idiv
mov
(bad)
push
scas
(bad)
jmp
movs
(bad)
inc
jg
(bad)
jge
(bad)
(bad)
jns
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
dec
(bad)
inc
inc
(bad)
(bad)
cmp
cmp
push
ss
push
xor
jmp
cs
jmp
sub
jmp
daa
(bad)
jmp
and
jmp
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
pop
cmc
inc
add
inc
add
repz
xchg
dec
add
add
add
add
add
call
inc
push
lock
cld
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jnp
(bad)
(bad)
jg
(bad)
inc
test
inc
mov
dec
xchg
(bad)
call
(bad)
call
pushf
(bad)
call
mov
(bad)
jmp
test
(bad)
push
mov
push
mov
call
lock
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
out
inc
cmc
push
scas
(bad)
jmp
lods
(bad)
jmp
(bad)
inc
jle
(bad)
jnp
(bad)
push
(bad)
push
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
(bad)
push
xor
jmp
sub
jmp
es
jmp
es
call
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
pop
cmc
inc
add
inc
add
repz
xchg
dec
add
add
add
add
add
call
inc
push
out
call
cld
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
(bad)
(bad)
jns
(bad)
(bad)
jge
(bad)
(bad)
jg
(bad)
inc
test
dec
mov
dec
xchg
(bad)
call
(bad)
call
pushf
(bad)
call
mov
(bad)
jmp
test
jmp
(bad)
push
mov
push
cld
dec
or
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
out
inc
hlt
jmp
scas
(bad)
jmp
(bad)
jmp
xchg
inc
jg
(bad)
jl
(bad)
(bad)
jns
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
push
aaa
(bad)
push
xor
push
xor
jmp
(bad)
jmp
sub
jmp
sub
call
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
pop
hlt
inc
add
inc
add
repz
xchg
dec
add
add
add
add
add
out
add
in
inc
push
out
call
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
push
(bad)
(bad)
jnp
(bad)
(bad)
jle
(bad)
inc
cmp
xchg
(bad)
dec
(bad)
call
xchg
(bad)
call
call
lahf
lahf
(bad)
jmp
mov
(bad)
jmp
stos
(bad)
jmp
mov
push
mov
call
or
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
in
inc
hlt
jmp
lods
(bad)
jmp
stos
(bad)
jmp
xchg
inc
jg
(bad)
jge
(bad)
(bad)
jp
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
inc
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
xor
jmp
cs
jmp
sub
jmp
sub
call
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
xchg
dec
add
add
add
add
add
in
add
in
inc
push
in
call
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jnp
(bad)
(bad)
jle
(bad)
inc
test
inc
mov
dec
(bad)
call
xchg
(bad)
call
cdq
(bad)
call
(bad)
jmp
mov
(bad)
jmp
test
(bad)
jmp
scas
(bad)
push
(bad)
sti
dec
or
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
in
inc
repz
(bad)
jmp
test
jmp
mov
inc
cmp
jle
(bad)
(bad)
jnp
(bad)
(bad)
js
(bad)
push
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
push
aaa
(bad)
push
(bad)
push
xor
jmp
sub
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
jmp
and
inc
add
inc
add
repz
xchg
dec
add
add
add
add
add
in
add
jmp
pop
pop
in
call
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
jmp
call
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
jns
(bad)
(bad)
jl
(bad)
(bad)
jg
(bad)
inc
test
inc
mov
dec
(bad)
call
xchg
(bad)
call
cwde
(bad)
call
popf
(bad)
call
mov
(bad)
jmp
(bad)
jmp
lods
(bad)
jmp
lods
(bad)
dec
or
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
jmp
aas
aas
repz
test
(bad)
jmp
mov
(bad)
inc
cmp
jle
(bad)
(bad)
jnp
(bad)
(bad)
js
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
inc
(bad)
(bad)
cmp
cmp
push
ss
push
xor
jmp
das
(bad)
jmp
das
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
xchg
dec
add
add
add
add
add
in
add
jmp
push
sti
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
jmp
(bad)
call
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
push
(bad)
(bad)
jp
(bad)
(bad)
jge
(bad)
(bad)
jg
(bad)
inc
test
inc
mov
dec
(bad)
call
xchg
(bad)
call
xchg
(bad)
call
fwait
(bad)
call
lahf
(bad)
jmp
mov
(bad)
jmp
stos
(bad)
jmp
stos
(bad)
dec
or
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
jmp
test
jmp
cmps
(bad)
jmp
(bad)
dec
cmp
add
(bad)
(bad)
jns
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
(bad)
push
xor
push
xor
call
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
xchg
dec
add
add
add
add
add
loop
add
jmp
call
sti
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
jmp
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
push
(bad)
(bad)
jp
(bad)
(bad)
jge
(bad)
(bad)
jg
(bad)
inc
test
inc
mov
dec
mov
call
xchg
(bad)
call
(bad)
call
call
popf
popf
(bad)
call
lahf
(bad)
jmp
cmps
(bad)
jmp
test
jmp
mov
dec
or
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
add
clc
add
jmp
jmp
movs
(bad)
jmp
mov
(bad)
inc
cmp
add
(bad)
(bad)
jns
(bad)
push
(bad)
push
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
inc
(bad)
(bad)
cmp
cmp
push
ss
push
xor
push
xor
call
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
xchg
dec
add
add
add
add
add
loop
add
jmp
call
sti
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
(bad)
jge
(bad)
(bad)
jg
(bad)
inc
cmp
xchg
(bad)
dec
(bad)
(bad)
dec
xchg
(bad)
call
xchg
(bad)
call
cwde
(bad)
call
fwait
(bad)
call
(bad)
jmp
movs
(bad)
jmp
movs
(bad)
jmp
xchg
dec
or
inc
add
inc
add
xchg
add
add
add
pop
add
add
add
add
add
sub
add
inc
add
push
xchg
add
clc
add
jmp
jmp
mov
(bad)
jmp
fwait
(bad)
inc
cmp
add
(bad)
jl
(bad)
(bad)
jns
(bad)
push
(bad)
push
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
(bad)
push
(bad)
call
jmp
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
(bad)
dec
add
add
add
add
add
loope
add
out
pop
pop
jmp
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
(bad)
jge
(bad)
(bad)
jg
(bad)
inc
cmp
test
(bad)
dec
mov
dec
(bad)
(bad)
call
xchg
(bad)
call
(bad)
call
cwde
(bad)
call
call
mov
mov
(bad)
jmp
test
dec
or
inc
add
inc
add
xchg
add
add
add
pop
add
add
add
add
add
fdivrp
add
out
cmp
lock
mov
(bad)
call
cdq
(bad)
inc
cmp
add
(bad)
jl
(bad)
(bad)
jns
(bad)
push
(bad)
push
push
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
cmp
push
ss
push
ss
call
jmp
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
(bad)
dec
add
add
add
add
add
loope
add
out
pop
pop
call
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
(bad)
jl
(bad)
(bad)
jle
(bad)
inc
cmp
test
dec
mov
dec
(bad)
dec
xchg
(bad)
call
xchg
(bad)
call
(bad)
call
xchg
(bad)
call
lahf
(bad)
call
mov
(bad)
inc
or
inc
add
inc
add
add
add
add
dec
xchg
add
(bad)
add
out
cmp
lock
popf
(bad)
call
pushf
(bad)
call
test
inc
cmp
jle
(bad)
(bad)
jl
(bad)
(bad)
jns
(bad)
push
(bad)
push
push
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
push
aaa
(bad)
push
aaa
(bad)
call
jmp
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
(bad)
dec
add
add
add
add
add
fbld
pop
pop
out
push
push
cli
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
push
(bad)
(bad)
jns
(bad)
(bad)
jnp
(bad)
(bad)
jle
(bad)
(bad)
jg
(bad)
inc
cmp
test
(bad)
dec
mov
dec
(bad)
dec
nop
(bad)
call
xchg
(bad)
call
xchg
(bad)
call
(bad)
call
(bad)
call
popf
(bad)
(bad)
jg
cli
dec
or
inc
add
inc
add
fwait
add
aas
stos
add
(bad)
add
in
cmp
out
call
(bad)
call
call
test
(bad)
jg
(bad)
(bad)
jge
(bad)
(bad)
jnp
(bad)
(bad)
jns
(bad)
push
(bad)
push
push
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
(bad)
dec
add
add
add
add
add
fbld
pop
pop
out
push
push
cli
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
push
(bad)
(bad)
js
(bad)
(bad)
jp
(bad)
(bad)
jge
(bad)
(bad)
jle
(bad)
inc
cmp
add
inc
mov
dec
mov
dec
(bad)
dec
(bad)
(bad)
dec
nop
(bad)
call
xchg
(bad)
call
call
call
dec
or
inc
add
inc
add
stc
add
in
cmp
out
call
cwde
(bad)
call
xchg
(bad)
call
cmp
jg
(bad)
(bad)
jle
(bad)
(bad)
jl
(bad)
(bad)
jp
(bad)
(bad)
js
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
cmp
(bad)
cmp
(bad)
call
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
(bad)
dec
add
add
add
add
add
fbld
push
push
in
push
push
cli
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
jns
(bad)
(bad)
jnp
(bad)
(bad)
jge
(bad)
(bad)
jg
(bad)
inc
cmp
add
inc
xchg
dec
mov
dec
mov
dec
(bad)
dec
(bad)
(bad)
call
xchg
(bad)
call
xchg
(bad)
call
jp
dec
or
inc
add
inc
add
push
aaa
out
call
xchg
(bad)
call
xchg
(bad)
call
cmp
(bad)
jge
(bad)
(bad)
jnp
(bad)
(bad)
jns
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
mov
add
add
add
add
frstor
push
push
in
push
push
cli
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
push
(bad)
(bad)
js
(bad)
(bad)
jp
(bad)
(bad)
jl
(bad)
(bad)
jge
(bad)
(bad)
jg
(bad)
inc
cmp
inc
test
inc
xchg
inc
mov
dec
mov
dec
mov
dec
(bad)
call
(bad)
call
cli
dec
or
push
ss
call
xchg
(bad)
call
xchg
(bad)
dec
cmp
jge
(bad)
(bad)
jnp
(bad)
(bad)
jp
(bad)
(bad)
js
(bad)
push
(bad)
push
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
mov
add
add
add
add
frstor
push
push
jecxz
push
push
stc
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jp
(bad)
(bad)
jnp
(bad)
(bad)
jge
(bad)
(bad)
jle
(bad)
(bad)
jg
(bad)
inc
cmp
inc
cmp
test
inc
test
inc
test
dec
nop
(bad)
call
nop
(bad)
call
jle
call
(bad)
(bad)
dec
(bad)
(bad)
dec
jle
(bad)
jnp
(bad)
(bad)
jp
(bad)
(bad)
js
(bad)
push
(bad)
push
push
(bad)
push
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
mov
add
add
add
add
fsub
push
push
jecxz
push
push
stc
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jns
(bad)
(bad)
jnp
(bad)
(bad)
jl
(bad)
(bad)
jge
(bad)
(bad)
jle
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
inc
cmp
add
(bad)
inc
cmp
add
(bad)
dec
(bad)
(bad)
dec
mov
dec
(bad)
dec
jnp
(bad)
jns
(bad)
(bad)
js
(bad)
push
(bad)
push
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
cmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
jmp
and
inc
add
inc
add
repz
mov
add
add
add
add
fisub
push
push
loop
push
push
stc
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jns
(bad)
(bad)
jp
(bad)
(bad)
jnp
(bad)
(bad)
jl
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
inc
mov
dec
mov
dec
mov
inc
jns
push
(bad)
push
(bad)
push
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
cmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
mov
add
add
add
add
fisub
push
push
loope
push
push
stc
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
js
(bad)
(bad)
jns
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jle
(bad)
inc
xchg
inc
cmp
jbe
(bad)
push
push
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
mov
add
add
add
add
fldenv
push
push
loopne
dec
dec
stc
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
(bad)
jp
(bad)
inc
jg
push
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
pop
(bad)
call
(bad)
call
call
(bad)
call
(bad)
jmp
and
inc
add
inc
add
repz
mov
add
add
add
add
xlat
mov
push
push
(bad)
dec
dec
stc
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
cmp
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
pop
jmp
add
repz
mov
add
add
add
add
xlat
mov
push
push
fdivrp
dec
dec
clc
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
pop
jmp
inc
add
repz
mov
add
add
add
add
(bad)
mov
push
push
(bad)
dec
dec
clc
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
pop
jmp
inc
add
repz
mov
add
add
add
add
aam
add
(bad)
push
push
fdivr
dec
dec
clc
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
push
call
inc
add
repz
mov
add
add
add
add
aam
add
fcos
push
push
fdivr
dec
dec
clc
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
add
inc
add
repz
mov
add
add
add
add
shl
push
push
(bad)
inc
inc
clc
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
cmp
(bad)
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
call
add
inc
add
repz
test
add
add
add
add
shl
add
inc
clc
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
call
call
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
call
out
add
fdivr
add
shl
add
test
add
add
add
add
shl
add
inc
idiv
push
push
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
call
sbb
inc
add
inc
add
repz
test
add
add
add
add
shl
add
inc
idiv
push
push
(bad)
call
call
(bad)
call
(bad)
call
(bad)
dec
dec
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
(bad)
call
(bad)
call
call
call
call
call
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
aaa
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
call
sbb
inc
add
inc
add
repz
test
add
add
add
add
iret
mov
add
inc
idiv
push
push
(bad)
call
(bad)
call
(bad)
call
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
ss
push
ss
dec
(bad)
dec
dec
(bad)
dec
(bad)
inc
(bad)
call
sbb
inc
add
inc
add
repz
or
add
add
add
add
iret
mov
add
ds
dec
dec
(bad)
dec
(bad)
dec
(bad)
call
(bad)
dec
(bad)
inc
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
ds
(bad)
cmp
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
ss
push
xor
inc
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
call
sbb
inc
add
inc
add
repz
or
add
add
add
add
into
mov
add
cmp
dec
(bad)
dec
dec
(bad)
dec
(bad)
inc
(bad)
inc
dec
(bad)
dec
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
cmp
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
ss
push
xor
push
xor
inc
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
call
sbb
inc
add
inc
add
repz
or
add
add
add
add
int3
mov
add
cmp
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
inc
(bad)
inc
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
ds
(bad)
cmp
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
aaa
(bad)
push
ss
push
(bad)
push
xor
push
xor
push
xor
inc
(bad)
inc
(bad)
inc
inc
(bad)
inc
(bad)
call
sbb
inc
add
inc
add
hlt
add
js
add
add
add
add
add
add
add
sar
add
sar
aaa
aaa
idiv
inc
inc
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
inc
(bad)
(bad)
ds
inc
(bad)
dec
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
inc
(bad)
aas
aas
(bad)
(bad)
ds
(bad)
cmp
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
aaa
(bad)
push
ss
push
xor
push
xor
push
xor
jmp
das
(bad)
jmp
das
(bad)
(bad)
aas
aas
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
(bad)
ds
call
pop
loop
add
sar
add
leave
test
add
and
add
or
add
add
add
add
add
or
add
scas
mov
add
sar
xor
inc
(bad)
inc
(bad)
inc
inc
(bad)
(bad)
ds
(bad)
cmp
(bad)
inc
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
(bad)
inc
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
aaa
(bad)
push
ss
push
xor
push
xor
push
xor
push
xor
jmp
das
(bad)
jmp
sub
(bad)
(bad)
aas
aas
(bad)
(bad)
ds
(bad)
cmp
cmp
call
push
loope
add
sar
add
(bad)
stc
add
cmp
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
call
sbb
(bad)
ds
(bad)
aas
aas
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
aas
(bad)
push
aaa
(bad)
(bad)
cmp
(bad)
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
(bad)
inc
(bad)
(bad)
cmp
(bad)
push
xor
push
xor
push
xor
push
xor
push
xor
jmp
das
(bad)
jmp
cs
jmp
(bad)
jmp
sub
jmp
sub
jmp
das
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
xor
inc
add
inc
add
inc
add
xchg
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
clc
add
into
call
loopne
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
xor
(bad)
cmp
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
(bad)
cmp
(bad)
push
xor
jmp
das
(bad)
jmp
cs
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
daa
(bad)
jmp
es
jmp
sub
push
aaa
(bad)
push
ss
push
xor
jmp
sub
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
clc
add
int
adc
loopne
xor
(bad)
push
ss
push
aaa
(bad)
push
ss
jmp
das
(bad)
push
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
es
jmp
and
jmp
and
jmp
and
jmp
and
jmp
es
push
xor
push
xor
push
xor
jmp
das
(bad)
jmp
idiv
add
sar
add
int
add
xchg
fadd
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
clc
add
int3
call
adc
jmp
das
(bad)
push
xor
push
xor
push
xor
push
xor
jmp
sub
push
xor
dec
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
push
xor
jmp
es
jmp
and
jmp
and
jmp
and
jmp
and
call
pop
(bad)
call
sbb
call
sbb
jmp
and
jmp
sub
jmp
sub
jmp
sub
jmp
and
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
clc
add
retf
dec
pandn
sub
(bad)
jmp
sub
jmp
(bad)
jmp
sub
jmp
es
jmp
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
(bad)
cmp
(bad)
jmp
(bad)
jmp
and
call
pop
(bad)
call
push
(bad)
call
sbb
call
sbb
call
sbb
call
pop
(bad)
call
sbb
jmp
sub
jmp
es
jmp
and
call
cmc
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
clc
add
retf
or
(bad)
jmp
daa
(bad)
jmp
sub
jmp
daa
(bad)
jmp
and
jmp
sub
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
jmp
sub
call
sbb
call
sbb
call
sbb
call
sbb
call
push
(bad)
call
adc
call
adc
call
adc
call
pop
(bad)
jmp
and
jmp
and
jmp
and
call
push
(bad)
call
pop
cmc
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
clc
add
leave
dec
or
call
pop
(bad)
jmp
and
jmp
and
jmp
and
jmp
and
call
(bad)
jmp
es
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
push
xor
call
sbb
call
adc
call
adc
call
adc
call
adc
dec
ud0
push
push
(bad)
dec
(bad)
call
adc
call
sbb
call
sbb
call
sbb
call
adc
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
dec
or
call
sbb
call
sbb
call
(bad)
call
sbb
(bad)
jmp
and
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
jmp
and
call
adc
call
adc
dec
ud0
or
or
dec
or
dec
or
inc
pop
(bad)
dec
pop
(bad)
call
push
(bad)
call
adc
dec
pmaddwd
add
int3
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
pop
fdivr
adc
(bad)
call
push
(bad)
call
pop
(bad)
call
sbb
call
sbb
call
adc
call
pop
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
push
ss
call
adc
dec
or
dec
or
dec
or
inc
pop
(bad)
inc
add
inc
add
dec
or
call
adc
call
adc
call
adc
dec
push
(bad)
dec
or
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
adc
call
adc
call
adc
call
adc
call
adc
dec
ud0
sbb
(bad)
dec
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
call
call
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
inc
(bad)
jmp
sub
inc
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
(bad)
dec
or
dec
or
dec
or
inc
push
cmc
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
add
(bad)
or
(bad)
dec
(bad)
dec
push
(bad)
dec
push
(bad)
dec
or
call
pop
(bad)
dec
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
dec
(bad)
dec
(bad)
dec
(bad)
inc
(bad)
call
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
dec
or
inc
push
(bad)
inc
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
add
(bad)
add
push
(bad)
inc
pop
(bad)
dec
or
dec
or
inc
push
(bad)
call
(bad)
dec
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
(bad)
cmp
(bad)
dec
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
inc
add
call
adc
dec
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
push
xor
inc
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
cmp
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
sub
inc
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
call
call
call
call
call
call
call
call
call
call
(bad)
call
adc
inc
add
inc
add
(bad)
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
cs
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
adc
inc
add
inc
add
inc
add
(bad)
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
push
xor
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
call
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
(bad)
call
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
ds
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
(bad)
push
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fadd
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
inc
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fadd
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
data16
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fadd
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
push
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
(bad)
call
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
inc
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
push
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
(bad)
call
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
dec
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
pop
(bad)
push
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
push
(bad)
call
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
dec
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
sbb
push
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
push
(bad)
call
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
dec
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
sbb
(bad)
jp
(bad)
inc
cmp
add
inc
cmp
add
inc
cmp
add
inc
cmp
add
inc
cmp
add
inc
cmp
add
call
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
jb
add
scas
cmps
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
inc
cmp
add
inc
cmp
add
inc
cmp
add
inc
cmp
add
inc
cmp
add
inc
cmp
add
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
sbb
(bad)
jle
(bad)
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
jle
call
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
jno
add
add
add
mov
add
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
sbb
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
sbb
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
jno
add
add
add
add
add
add
add
mov
add
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
sbb
inc
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
inc
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
jno
add
add
add
add
add
mov
add
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
nop
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
xchg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
dec
xchg
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
dec
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
jno
add
add
add
add
add
mov
add
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
clc
add
mov
add
sar
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
(bad)
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
ins
dec
add
add
add
add
add
scas
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
call
cdq
(bad)
jmp
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
clc
add
mov
add
sar
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
call
push
(bad)
call
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
ins
dec
add
add
add
add
add
lods
mov
add
mov
add
icebp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
call
sahf
(bad)
jmp
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
clc
add
mov
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
pop
(bad)
call
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
call
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
ins
dec
add
add
add
add
add
lods
mov
add
mov
add
icebp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
mov
(bad)
jmp
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
clc
add
mov
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
pop
(bad)
call
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
ins
dec
add
add
add
add
add
lods
mov
add
mov
add
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
cmps
(bad)
jmp
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
clc
add
mov
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
and
jmp
lods
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
ins
dec
add
add
add
add
add
lods
mov
add
mov
add
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
clc
add
scas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
and
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
jmp
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
ins
dec
add
add
add
add
add
stos
mov
add
mov
add
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
jmp
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
jge
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
scas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
and
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
jmp
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
push
add
add
add
add
add
stos
mov
add
mov
add
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
(bad)
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
add
inc
add
cmp
add
lods
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
and
jmp
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
jmp
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
push
add
add
add
add
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
movs
clc
add
lods
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
push
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
push
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
push
add
add
add
add
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
mov
(bad)
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
push
add
add
add
adc
add
add
add
add
add
sub
add
add
movs
test
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
mov
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
push
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
push
add
add
add
add
add
cmps
mov
add
mov
add
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
jns
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
inc
ret
(bad)
(bad)
jp
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
sbb
add
add
add
pop
push
add
movs
cmc
add
stos
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
es
(bad)
mov
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
push
add
add
add
add
add
movs
mov
add
scas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
jl
(bad)
dec
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
jge
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
add
add
add
add
cmps
icebp
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
es
(bad)
mov
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
(bad)
mov
es
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
push
add
add
add
add
add
movs
mov
add
scas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
jg
(bad)
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
sbb
add
add
add
test
add
test
add
cli
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
inc
ret
(bad)
jmp
daa
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
addr16
add
add
add
add
add
movs
mov
add
scas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
call
sar
(bad)
cmp
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
add
add
add
cmps
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
push
(bad)
jmp
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
enter
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
addr16
add
add
add
add
add
movs
mov
add
lods
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
mov
add
movs
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
ud0
mov
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
dec
int
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
addr16
add
add
add
add
add
mov
inc
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
dec
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
(bad)
fcmovnu
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
add
add
add
mov
add
movs
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
ud0
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
addr16
add
add
add
add
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
ud0
mov
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
call
aad
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
addr16
add
add
add
add
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
ud0
mov
call
(bad)
(bad)
call
call
(bad)
(bad)
call
call
(bad)
(bad)
call
call
(bad)
(bad)
call
call
(bad)
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
arpl
add
add
add
add
lahf
mov
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
call
(bad)
(bad)
call
call
(bad)
(bad)
call
call
(bad)
(bad)
call
call
(bad)
(bad)
call
call
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
jg
add
add
add
add
add
mov
add
mov
inc
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
call
adc
(bad)
mov
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
arpl
add
add
add
add
lahf
mov
add
test
add
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
(bad)
in
in
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
inc
ret
(bad)
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
jmp
loop
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
arpl
add
add
add
add
popf
mov
add
test
add
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
push
repnz
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
mov
add
sahf
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
dec
enter
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
jmp
out
jmp
cs
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
arpl
add
add
add
add
popf
mov
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
mov
add
sahf
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
dec
int3
(bad)
(bad)
sti
sti
(bad)
(bad)
sti
sti
(bad)
(bad)
sti
sti
(bad)
(bad)
sti
sti
(bad)
(bad)
sti
sti
(bad)
(bad)
jmp
(bad)
jmp
das
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
arpl
add
add
add
add
pushf
mov
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
(bad)
sti
sti
(bad)
(bad)
sti
sti
(bad)
(bad)
sti
sti
(bad)
(bad)
sti
sti
(bad)
(bad)
sti
sti
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
mov
add
popf
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
dec
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
(bad)
jmp
das
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
arpl
add
add
add
add
call
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
mov
add
pushf
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
dec
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
(bad)
push
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
pusha
dec
add
add
add
add
add
call
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jle
add
fwait
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
adc
(bad)
mov
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
pusha
dec
add
add
add
add
add
cdq
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jle
add
cdq
rol
add
add
stc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
pusha
dec
add
add
add
add
add
xchg
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
jns
add
add
add
add
add
jle
add
cdq
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
pusha
dec
add
add
add
add
add
xchg
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jle
add
cwde
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
pusha
dec
add
add
add
add
add
xchg
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jle
add
xchg
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
add
add
add
add
xchg
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jle
add
xchg
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
add
add
add
add
xchg
mov
add
lahf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jle
add
xchg
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
xchg
mov
add
sahf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jle
add
xchg
rol
add
inc
add
inc
add
inc
add
add
add
add
add
add
xchg
mov
add
popf
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jle
add
xchg
rol
add
inc
add
repnz
gs
add
add
add
add
add
add
add
inc
add
inc
add
jae
add
adc
add
add
add
xchg
add
xchg
rol
add
lock
jp
add
add
add
add
add
add
add
xchg
mov
add
xchg
inc
add
or
add
add
add
add
add
add
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
inc
ud0
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
push
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
jg
jmp
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
aas
(bad)
inc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
pop
(bad)
inc
(bad)
(bad)
(bad)
(bad)
inc
add
ud0
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
push
add
add
jg
(bad)
(bad)
(bad)
clc
add
add
jg
add
add
aas
(bad)
(bad)
(bad)
push
add
add
aas
rol
add
pop
(bad)
(bad)
(bad)
jmp
add
add
pop
add
add
ud0
(bad)
inc
add
add
sldt
add
add
(bad)
(bad)
(bad)
inc
pop
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
cld
add
add
add
add
add
add
jg
(bad)
clc
add
add
add
add
add
add
aas
(bad)
push
add
add
add
add
add
add
pop
(bad)
jmp
add
add
add
add
add
add
ud0
rol
add
add
add
add
add
pop
(bad)
inc
add
add
add
add
add
inc
add
add
add
add
add
add
(bad)
inc
add
add
add
rol
add
add
(bad)
cld
add
add
add
pop
loopne
add
add
add
add
add
add
aas
lock
add
add
aas
lock
add
add
jg
add
add
add
pop
loopne
add
add
add
cld
add
add
add
xadd
add
add
add
inc
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
(bad)
inc
ud0
rol
add
pop
(bad)
jmp
aas
(bad)
push
jg
(bad)
clc
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
add
add
add
ud0
(bad)
inc
add
pop
(bad)
(bad)
(bad)
jmp
add
aas
(bad)
(bad)
(bad)
push
add
jg
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
ud0
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aas
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
(bad)
(bad)
(bad)
(bad)
push
aas
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ud0
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
jg
(bad)
(bad)
push
add
aas
(bad)
(bad)
(bad)
jmp
add
pop
(bad)
(bad)
(bad)
inc
add
ud0
(bad)
inc
add
add
add
pop
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
cld
(bad)
(bad)
(bad)
clc
jg
push
aas
(bad)
jmp
pop
(bad)
inc
ud0
add
add
add
add
add
add
pop
(bad)
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
(bad)
cld
add
add
add
pop
rol
add
add
(bad)
clc
add
add
add
aas
loopne
add
add
add
add
add
add
jg
add
add
add
aas
loopne
add
add
add
clc
add
add
add
pop
rol
add
add
(bad)
cld
add
add
add
jo
add
(bad)
inc
add
add
add
add
add
add
pop
(bad)
inc
add
add
add
add
add
add
ud0
add
add
add
add
add
add
pop
(bad)
inc
add
add
add
add
add
add
aas
(bad)
jmp
add
add
add
add
add
add
jg
push
add
add
add
add
add
add
(bad)
(bad)
(bad)
clc
add
add
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
pop
(bad)
(bad)
(bad)
inc
add
add
add
ud0
(bad)
inc
pop
rol
add
pop
(bad)
(bad)
(bad)
inc
add
add
pavgb
add
add
(bad)
(bad)
(bad)
jmp
add
add
pop
lock
add
jg
(bad)
(bad)
push
add
add
aas
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
jg
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
(bad)
(bad)
(bad)
(bad)
inc
inc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
ud0
loopne
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
pop
(bad)
push
add
jg
(bad)
(bad)
(bad)
(bad)
push
add
aas
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
jg
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
inc
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ud0
(bad)
jmp
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
popa
jbe
and
je
outs
je
jb
and
jne
imul
je
outs
outs
and
jb
je
and
ins
outs
jae
and
gs
outs
data16
jae
outs
gs
je
jb
and
outs
jb
jns
jle
jo
gs
jae
and
and
and
jno
imul
outs
jb
popa
je
outs
outs
and
and
push
push
pop
outs
jne
jle
and
and
jne
push
outs
je
jb
and
and
jno
imul
outs
jb
popa
je
outs
outs
sub
jo
gs
jae
and
imul
jne
and
jne
popa
arpl
jne
je
imul
ins
and
xor
and
popa
jbe
and
outs
and
je
imul
push
inc
dec
push
push
push
and
inc
pusha
pusha
pusha
add
xchg
jae
add
push
sub
or
add
sbb
add
add
or
das
add
or
sub
add
push
add
nop
add
or
pop
sub
add
push
outs
xchg
add
or
sub
add
outs
xchg
add
or
sbb
add
dec
add
add
add
adc
add
add
ds
add
add
pop
sub
sub
add
add
sbb
pop
add
push
adc
push
push
add
push
jae
add
or
add
or
sbb
add
pop
pop
sub
jle
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
adc
push
add
push
sub
add
xor
add
add
add
add
add
add
add
sub
add
or
add
sub
add
push
add
add
or
add
add
or
add
add
add
add
add
add
xchg
add
sub
add
add
outs
add
pop
outs
push
add
or
pop
outs
pop
add
or
push
outs
or
add
sub
add
inc
add
or
add
outs
or
add
outs
or
add
sub
add
add
sldt
or
into
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
xor
add
add
add
add
adc
add
add
adc
add
xor
add
add
add
add
adc
add
add
push
add
or
add
xor
add
add
add
add
adc
add
add
pop
add
or
add
xor
add
add
add
add
jle
add
add
sbb
add
sub
adc
add
or
add
add
add
sbb
add
sub
adc
add
sbb
add
push
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
adc
add
sbb
add
pop
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
xchg
add
jnp
add
add
add
add
jb
add
jo
push
add
or
add
add
add
add
sub
add
add
add
add
add
jb
add
jo
push
add
or
add
add
add
add
sub
add
xor
loop
add
or
add
add
adc
add
push
add
add
outs
pop
add
or
les
add
jle
add
add
sub
or
add
add
add
sub
add
or
add
or
jb
add
jo
lea
add
add
and
add
jae
add
or
and
add
or
add
or
add
add
add
sub
add
or
and
add
fisubr
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
add
add
sub
add
outs
sub
add
mov
add
or
or
add
or
add
or
or
add
add
add
sub
add
or
add
or
sub
add
push
sub
add
sbb
add
add
cwde
add
je
add
add
ins
add
add
adc
add
sbb
add
or
add
add
push
add
add
outs
sub
adc
(bad)
adc
push
add
push
add
add
or
adc
add
or
add
adc
add
das
add
or
xor
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
rol
and
add
sub
adc
add
pop
add
add
sub
add
or
add
xor
add
add
adc
add
das
add
or
xor
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
push
add
add
and
add
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
add
add
or
adc
add
sbb
add
adc
add
jle
add
or
or
push
add
sub
jle
add
or
push
add
add
or
add
cmp
add
add
and
add
jae
add
or
cmp
add
add
add
push
sub
add
sbb
add
and
add
add
add
add
add
add
add
or
jnp
add
add
cmp
add
fimul
add
sub
add
fsubr
add
add
or
add
add
add
sbb
or
add
add
xor
test
add
jae
add
or
add
add
or
add
sub
add
or
add
or
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
jnp
add
add
inc
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
outs
and
add
adc
and
pop
add
add
inc
add
or
outs
inc
add
or
outs
and
add
jb
add
jo
dec
add
or
outs
and
add
adc
and
add
add
sub
dec
add
or
outs
dec
add
or
outs
and
add
push
outs
dec
add
or
outs
and
add
jb
add
jo
dec
add
or
outs
and
add
pop
outs
dec
add
or
outs
and
add
sub
add
outs
dec
add
or
outs
and
add
adc
and
add
add
nop
add
add
inc
add
or
outs
inc
add
or
outs
and
add
jb
add
jo
dec
add
or
outs
and
add
adc
and
daa
sub
add
or
add
or
outs
and
add
sbb
add
or
outs
add
push
adc
and
add
add
jae
inc
add
or
outs
inc
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
pop
jnp
adc
dec
add
or
outs
dec
add
or
outs
add
push
sbb
add
or
outs
sub
add
pop
outs
push
add
or
outs
sub
add
adc
pop
push
and
add
sub
add
pop
outs
inc
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
adc
pop
dec
pop
adc
dec
add
or
outs
dec
add
or
outs
sub
add
sbb
add
or
outs
sub
add
pop
outs
push
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
pop
outs
dec
add
or
outs
sub
add
pop
outs
push
add
or
outs
sub
add
adc
pop
push
and
add
inc
add
or
outs
inc
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
adc
pop
dec
pop
adc
dec
add
or
outs
dec
add
or
outs
sub
add
sbb
dec
add
or
outs
sub
add
pop
outs
push
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
pop
outs
dec
add
or
outs
add
push
sub
add
outs
push
add
or
outs
add
push
adc
sbb
lods
add
add
inc
add
or
outs
inc
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
pop
outs
push
add
or
outs
add
push
adc
and
adc
dec
add
or
outs
dec
add
or
outs
add
push
sbb
or
outs
add
push
jb
add
jo
push
add
or
outs
xor
add
pop
outs
push
add
or
outs
xor
add
sub
add
outs
pop
add
or
outs
xor
add
adc
and
sub
add
pop
outs
inc
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
adc
pop
aaa
pop
or
or
outs
dec
add
or
outs
xor
add
push
outs
dec
add
or
outs
xor
add
jb
add
jo
pop
add
or
outs
xor
add
sub
add
outs
push
add
or
outs
xor
add
adc
and
xor
add
sub
add
pop
outs
inc
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
pop
outs
push
add
or
outs
xor
add
adc
and
add
adc
dec
add
or
outs
dec
add
or
outs
xor
add
pop
or
add
or
outs
xor
add
jb
add
jo
push
add
or
outs
xor
add
pop
outs
push
add
or
outs
xor
add
sub
add
outs
pop
add
or
outs
xor
add
adc
and
add
add
inc
add
or
outs
inc
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
adc
pop
xor
add
or
outs
dec
add
or
outs
xor
add
pop
or
add
or
outs
xor
add
jb
add
jo
pop
add
or
outs
add
push
sub
add
outs
push
add
or
outs
add
push
adc
and
add
add
xlat
add
add
inc
add
or
outs
inc
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
pop
addr16
adc
dec
add
or
outs
dec
add
or
outs
add
push
pop
push
outs
dec
add
or
outs
cmp
add
pop
outs
push
add
or
outs
cmp
add
sub
or
add
or
outs
cmp
add
adc
and
add
add
fiadd
add
sub
add
pop
outs
inc
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
adc
pop
push
pop
or
or
outs
dec
add
or
outs
cmp
add
pop
or
dec
add
or
outs
cmp
add
jb
add
jo
pop
add
or
outs
cmp
add
adc
pop
xor
sbb
inc
add
or
outs
inc
add
or
outs
cmp
add
pop
outs
pop
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
pop
outs
push
add
or
outs
cmp
add
adc
and
add
add
and
dec
add
or
outs
dec
add
or
outs
cmp
add
pop
or
or
outs
cmp
add
jb
add
jo
push
add
or
outs
cmp
add
sbb
add
or
outs
cmp
add
adc
and
add
add
test
add
sub
add
pop
outs
inc
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
adc
and
add
add
adc
dec
add
or
outs
dec
add
or
outs
cmp
add
pop
push
outs
dec
add
or
adc
and
add
inc
and
add
sub
add
or
add
or
pop
outs
popa
add
or
sub
add
outs
arpl
add
add
jb
add
jo
add
or
add
outs
add
or
adc
and
add
and
add
add
dec
add
or
outs
data16
or
outs
add
or
outs
cmp
add
outs
push
outs
add
or
outs
cmp
add
outs
push
outs
add
or
outs
cmp
add
outs
push
outs
add
or
outs
add
push
outs
push
outs
add
or
outs
xor
add
outs
push
outs
add
or
outs
xor
add
outs
push
outs
add
or
outs
xor
add
outs
push
outs
add
or
outs
add
push
outs
push
outs
add
or
outs
sub
add
outs
push
outs
add
or
outs
sub
add
outs
push
outs
add
or
outs
add
push
outs
push
outs
add
or
outs
and
add
outs
push
outs
add
or
outs
and
add
outs
push
push
jb
add
jo
add
or
add
outs
imul
or
jo
dec
add
or
jb
add
jo
push
add
add
outs
imul
or
outs
ins
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
ins
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
outs
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
ins
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
outs
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
outs
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
jo
add
sub
add
xor
add
add
add
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
jno
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
jb
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
jae
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
je
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
jae
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
je
add
sub
add
xor
add
add
add
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
jae
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
je
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
adc
outs
cmp
add
outs
jne
add
jb
add
jo
sub
add
push
xor
aas
add
jo
adc
ja
add
add
add
push
outs
jne
add
jb
add
jo
sub
add
push
xor
jb
add
jo
adc
ja
add
add
add
push
outs
jne
add
jb
add
jo
sub
add
push
xor
jo
adc
ja
add
es
add
or
jae
add
or
pop
jb
add
jo
mov
jp
add
outs
jnp
add
pop
and
add
outs
jl
add
pop
jb
add
jo
jge
add
pop
pop
outs
jle
add
jae
add
or
push
jb
add
jo
jg
add
outs
add
or
outs
add
add
jo
add
or
jb
add
cmp
add
outs
jne
add
sub
test
add
push
sbb
and
add
or
push
jb
add
pop
add
add
push
outs
jne
add
mov
add
sbb
outs
add
push
outs
jne
add
mov
add
sbb
outs
add
push
outs
jne
add
mov
add
outs
xchg
add
pop
push
outs
xchg
add
add
add
push
outs
mov
add
jb
add
sub
add
sub
add
sub
add
sub
add
add
add
push
pop
outs
mov
add
add
add
push
outs
mov
add
add
add
push
outs
mov
add
xor
add
add
push
outs
mov
add
add
add
push
outs
mov
add
xor
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
and
add
jae
add
or
cmp
add
add
add
push
sub
add
sbb
add
and
add
add
add
add
add
add
add
or
jnp
add
add
cmp
add
fimul
add
sub
add
fsubr
add
add
or
add
add
add
sbb
or
add
add
xor
adc
add
sub
add
ror
add
add
and
add
jae
add
or
add
add
or
add
push
add
add
or
outs
dec
add
push
adc
pop
or
cmp
inc
add
or
outs
inc
add
or
outs
dec
add
push
pop
outs
pop
add
or
outs
dec
add
push
jb
add
jo
dec
add
or
outs
dec
add
push
pop
outs
push
add
or
outs
dec
add
push
adc
and
add
pop
jl
dec
add
or
outs
dec
add
or
outs
dec
add
push
push
outs
dec
add
or
outs
dec
add
push
push
jb
push
add
mov
add
outs
push
add
or
adc
and
add
inc
and
add
sub
add
or
add
or
pop
outs
popa
add
or
adc
and
add
and
dec
add
or
outs
data16
or
outs
add
or
outs
dec
add
push
outs
push
push
jb
add
jo
add
or
add
outs
imul
(bad)
push
add
dec
add
or
push
outs
imul
or
outs
ins
add
or
add
xor
add
add
add
jnp
add
add
add
add
jge
add
add
add
add
sub
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
add
xor
add
and
jb
outs
addr16
add
add
add
push
add
and
add
add
adc
add
and
dec
inc
add
add
add
ins
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
aaa
add
add
pop
add
add
add
add
add
add
add
add
adc
mov
js
push
add
add
add
add
add
add
cdq
add
add
add
add
cld
add
jg
push
push
add
add
or
add
add
add
or
adc
call
add
add
or
push
add
pop
add
add
sub
or
scas
or
or
add
add
or
or
add
or
push
add
add
aas
or
add
cdq
add
add
add
add
add
or
push
add
or
or
or
xchg
push
add
pop
add
add
js
push
add
add
add
or
push
add
or
or
add
or
or
add
add
pop
add
add
js
push
add
push
or
or
add
add
add
or
add
add
or
or
add
or
push
or
mov
add
or
add
cdq
add
add
das
push
push
add
push
push
add
push
add
add
inc
movlps
pop
cmovae
or
jae
xchg
or
mov
adc
or
xchg
movlps
or
movs
movlps
adc
ret
movlps
aam
mov
adc
pop
adc
adc
sub
inc
(bad)
add
add
add
adc
or
push
adc
adc
or
pop
adc
add
add
adc
inc
add
add
push
add
adc
push
add
adc
push
add
aas
or
add
fisttp
push
add
or
add
add
add
adc
or
add
adc
or
add
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
adc
mov
aaa
add
sbb
dec
add
add
add
add
add
xor
add
add
add
add
add
adc
jmp
add
push
add
test
push
add
mov
adc
clc
add
aam
add
cdq
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
xor
push
add
jb
add
add
xchg
add
mov
add
add
fadd
cdq
add
add
add
add
xchg
pop
add
add
add
pop
add
add
add
add
add
add
pop
add
add
sbb
add
add
add
pop
add
add
add
add
add
push
sbb
add
add
add
adc
ins
add
rol
add
adc
jae
and
add
fadd
pop
add
add
or
add
rol
add
adc
ret
add
add
ret
add
adc
loopne
dec
add
add
ret
add
adc
add
push
add
add
ret
add
push
or
jnp
add
pop
ret
add
push
or
add
add
add
or
lea
add
test
pop
add
add
or
xchg
add
add
ret
add
adc
xchg
pushf
add
fadd
pop
add
add
add
add
pop
add
add
sbb
add
add
add
pop
add
add
or
mov
push
add
les
add
add
adc
mov
pop
add
pop
add
add
add
add
add
add
sub
add
pop
add
add
or
mov
pop
add
inc
add
mov
or
cwde
les
add
add
add
add
add
sub
add
les
add
add
add
add
les
add
add
add
add
les
add
add
sbb
add
add
add
add
ss
add
add
push
sbb
add
add
add
push
sbb
add
add
add
pop
add
add
add
add
add
add
add
pushf
int
add
add
enter
or
mov
pop
add
add
aam
out
add
add
int
add
add
or
add
adc
pop
add
add
sbb
add
pop
into
pop
add
add
ds
add
add
add
dec
add
add
add
add
data16
add
add
add
jno
sbb
push
add
into
pop
add
add
xchg
add
add
add
into
pop
add
add
cmps
add
add
add
pop
add
add
mov
adc
push
iret
pop
add
add
xlat
add
add
add
add
add
repnz
add
add
pop
add
add
inc
iret
pop
add
add
sbb
ror
pop
add
add
and
add
iret
pop
add
add
cmp
lock
pop
add
add
inc
add
cmp
pop
add
add
pop
add
push
rol
add
add
addr16
pop
rol
add
add
jl
or
adc
add
add
mov
mov
add
sahf
add
rcl
pop
add
add
test
add
rol
add
add
mov
add
rol
add
add
retf
add
cld
rol
add
add
loop
or
sbb
adc
pop
add
add
out
add
sbb
pop
add
add
add
push
inc
add
add
add
add
add
add
xor
inc
add
add
add
add
inc
add
add
rol
add
add
add
inc
add
add
rol
add
add
add
inc
add
add
rol
add
add
add
add
rol
add
add
add
add
rol
add
add
add
add
rol
add
add
add
lock
add
add
add
push
inc
add
add
add
sbb
add
add
add
rol
add
add
add
add
add
pop
add
add
add
js
pop
add
add
loop
or
xor
mov
pop
add
add
out
add
cwde
aam
add
add
add
inc
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
add
add
pop
outs
add
add
push
or
pop
jbe
xor
add
add
or
pop
jbe
xor
add
add
add
add
add
add
js
add
add
mov
add
add
rol
add
add
adc
add
add
adc
add
add
rol
add
add
rol
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
adc
add
add
sbb
add
add
outs
add
add
add
add
add
add
add
add
sbb
add
add
adc
add
add
sbb
or
push
or
or
mov
or
and
pop
or
pop
or
add
add
fld
or
mov
fld
or
mov
xchg
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sbb
cmp
and
sbb
inc
add
add
add
add
add
add
add
ss
add
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
cmp
xchg
or
or
or
add
add
add
add
add
add
or
or
or
or
or
add
or
or
add
add
add
add
add
lahf
or
add
add
add
add
add
add
add
and
sbb
pop
add
aam
popa
add
add
add
and
sbb
sub
and
sbb
jno
and
ret
add
or
add
add
add
add
fld
mov
add
add
and
sbb
push
add
add
add
and
sbb
popa
add
add
add
and
sbb
jno
and
sbb
add
xchg
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
push
or
sub
inc
or
popa
or
outs
or
xlat
or
add
push
or
jl
hlt
add
add
cli
add
xlat
or
add
add
add
add
stos
or
int
add
add
add
add
add
or
adc
adc
push
hlt
add
add
cli
add
add
sbb
add
pusha
push
and
add
add
add
add
or
add
add
add
or
add
add
add
add
push
enter
fmul
enter
loop
enter
out
push
enter
test
or
add
bswap
add
add
bswap
add
push
mov
movq
add
add
add
add
add
add
add
add
add
jno
pxor
or
add
sbb
or
or
fld
inc
add
add
add
add
adc
adc
or
add
add
xchg
add
add
sbb
adc
dec
adc
adc
add
add
mov
adc
add
jo
out
add
jp
mov
push
add
and
sbb
pop
add
add
add
add
adc
popa
add
adc
add
or
lock
adc
add
and
mov
mov
ret
add
lea
mov
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
into
add
add
xlat
add
add
add
cs
add
add
add
add
sti
add
push
cs
add
push
add
add
or
rol
push
add
add
add
push
cs
add
push
cs
add
push
cs
add
push
inc
add
xlat
add
pop
add
add
add
add
add
pop
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
cmps
add
add
xlat
add
add
add
cmps
add
add
xlat
add
add
add
xlat
add
add
xlat
add
add
add
add
xlat
add
arpl
xlat
add
mov
add
into
add
pop
add
add
add
imul
arpl
rol
xlat
add
jmp
xlat
add
fild
xlat
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
loopne
arpl
xlat
add
add
push
add
add
add
push
add
xlat
add
add
cmps
add
add
dec
add
cmps
add
imul
pusha
add
cmps
add
imul
add
add
add
add
cmps
add
add
cmps
add
add
xlat
add
add
cli
add
add
cmps
add
add
xlat
add
add
in
add
add
cmps
add
add
xlat
add
add
cs
xlat
add
add
cmps
add
add
add
add
xlat
add
imul
pusha
add
xlat
add
add
add
add
add
cmps
add
add
xlat
add
add
add
add
add
add
add
add
add
add
jmp
xlat
add
jmp
xlat
add
add
add
add
add
add
add
add
add
add
and
inc
add
pusha
add
add
add
rol
add
add
jmp
xlat
add
push
jmp
xlat
add
jmp
xlat
add
jmp
xlat
add
add
add
push
jmp
xlat
add
push
jmp
xlat
add
pop
jmp
xlat
add
pop
jmp
xlat
add
jmp
xlat
add
jmp
xlat
add
add
add
or
add
add
jmp
xlat
add
jae
xlat
add
add
add
or
add
add
or
into
add
or
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
xor
add
add
add
jno
add
inc
add
add
xchg
add
add
add
add
fadd
add
fiadd
inc
add
add
push
dec
add
add
push
push
add
add
push
push
add
add
pop
pop
add
add
pop
pop
add
add
add
pop
pusha
add
add
add
pop
pusha
add
add
add
pusha
add
add
push
add
add
push
add
add
push
add
add
pop
jnp
add
std
pop
jnp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
jg
add
add
add
xor
add
into
adc
add
add
pop
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
and
jno
and
jnp
dec
add
add
adc
add
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
outs
outs
ja
inc
jo
ins
imul
xor
dec
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
inc
outs
jb
xor
push
imul
jo
ins
imul
xor
ja
data16
push
gs
imul
push
gs
imul
jo
jb
jns
dec
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
imul
add
arpl
add
inc
jb
popa
je
dec
popa
imul
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
je
inc
outs
jb
xor
addr16
ja
data16
inc
outs
jb
xor
ins
pop
ja
data16
je
inc
outs
jb
xor
push
popa
ins
jne
add
je
ja
data16
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
inc
imul
imul
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
imul
inc
outs
ins
jo
outs
outs
je
inc
jne
je
outs
add
jne
je
outs
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
push
imul
jae
popa
ins
jne
add
outs
addr16
jae
inc
popa
jb
pop
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
je
outs
js
pop
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
gs
pop
push
imul
gs
push
imul
gs
push
imul
popa
imul
outs
add
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
pop
push
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
pop
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
gs
add
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
outs
je
jb
jae
inc
jne
je
outs
xor
ins
imul
fs
add
outs
addr16
jae
inc
popa
jb
pop
inc
ins
imul
je
outs
js
pop
push
gs
inc
push
add
gs
pop
push
imul
je
outs
js
pop
push
gs
inc
push
add
imul
outs
xor
push
fs
push
add
jb
xor
outs
popa
add
arpl
gs
outs
js
pop
inc
ins
imul
je
outs
js
pop
push
gs
inc
push
add
je
outs
js
pop
push
gs
inc
push
add
je
outs
js
pop
push
gs
inc
push
add
je
outs
outs
xor
push
jb
addr16
jae
inc
popa
jb
add
je
outs
js
add
gs
add
imul
outs
xor
push
popa
imul
outs
xor
push
gs
inc
outs
js
add
gs
xor
push
gs
inc
outs
js
add
gs
xor
push
gs
inc
outs
js
add
gs
xor
push
gs
inc
outs
js
add
je
outs
js
add
jb
xor
outs
popa
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jne
outs
push
popa
jbe
push
gs
imul
je
inc
gs
jne
je
inc
gs
jne
je
addr16
push
gs
imul
je
imul
je
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
je
outs
je
arpl
imul
add
je
dec
jae
imul
jae
popa
outs
arpl
jae
je
inc
outs
popa
bound
imul
jns
gs
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
push
ja
dec
outs
fs
je
push
push
ja
push
je
ins
add
je
dec
popa
imul
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
inc
push
push
inc
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
addr16
outs
je
js
gs
imul
je
ins
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
imul
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
imul
ins
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
jb
ja
outs
add
imul
add
jp
inc
add
outs
je
imul
jae
outs
fs
popa
jns
jne
add
je
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
push
imul
pop
push
popa
bound
fs
inc
jne
je
outs
inc
popa
jae
add
je
push
gs
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
inc
outs
ins
outs
jb
addr16
dec
popa
ja
inc
jb
outs
add
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
jne
outs
push
imul
pop
push
popa
bound
outs
jo
push
jns
je
ins
inc
outs
ins
outs
jb
add
je
inc
arpl
gs
outs
jb
gs
push
gs
inc
outs
js
popa
jae
add
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
push
gs
fs
outs
ins
jns
addr16
pop
gs
ins
outs
ja
addr16
inc
outs
outs
je
outs
ins
inc
popa
jb
add
je
push
imul
gs
inc
outs
ins
add
je
dec
jne
je
ins
imul
imul
inc
ins
imul
add
je
push
gs
inc
ins
imul
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
dec
popa
jb
outs
outs
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
inc
gs
bound
arpl
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
dec
arpl
add
je
dec
arpl
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
ins
outs
jbe
pop
inc
ins
imul
pop
inc
ins
imul
outs
jbe
pop
push
imul
pop
push
imul
outs
jbe
pop
inc
push
fs
push
add
fs
inc
push
fs
push
add
ins
outs
jbe
pop
push
gs
inc
push
add
fs
push
gs
inc
push
add
jae
gs
cs
gs
dec
popa
imul
gs
popa
add
je
inc
ins
imul
je
push
gs
add
gs
je
jb
add
ins
jo
jb
push
je
imul
gs
arpl
outs
add
addr16
outs
js
gs
ins
je
dec
jae
inc
outs
js
je
ins
add
addr16
outs
js
push
jns
je
ins
cs
gs
dec
gs
outs
jb
inc
jb
fs
je
popa
ins
add
jb
fs
je
popa
ins
jae
jns
outs
jae
add
je
inc
jb
fs
je
popa
ins
jae
jae
je
push
outs
jb
add
je
dec
outs
jae
add
je
inc
outs
popa
bound
jae
add
imul
jae
jae
je
inc
jb
ins
add
imul
jae
outs
ins
ins
arpl
outs
add
je
push
outs
add
outs
arpl
add
je
push
jne
push
arpl
gs
inc
outs
fs
push
outs
add
popa
jb
add
arpl
ins
outs
je
addr16
push
popa
ins
jne
add
je
dec
popa
js
ins
jne
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
je
je
imul
je
outs
addr16
popa
jae
add
outs
arpl
outs
outs
imul
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
popa
jbe
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
jae
gs
cs
push
imul
imul
gs
push
push
ja
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
push
ja
add
imul
ja
inc
jo
ins
imul
xor
push
gs
jne
arpl
cs
jae
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
inc
outs
jb
xor
jb
jae
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
ja
data16
jae
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jns
js
popa
jae
add
dec
js
popa
jae
cs
add
add
inc
push
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
inc
add
je
je
outs
add
xor
add
inc
add
outs
add
jb
popa
add
add
sbb
jb
outs
add
jb
add
jae
inc
add
jb
xor
add
push
add
js
je
inc
add
js
xor
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
xor
xor
sub
xor
xor
xor
and
outs
add
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
xor
xor
sub
xor
xor
xor
and
outs
add
add
push
add
js
je
inc
add
js
xor
add
inc
add
jo
jns
jb
imul
je
and
dec
add
jb
imul
add
outs
add
or
bound
add
add
adc
jae
add
outs
add
ins
add
add
push
add
js
je
inc
add
js
xor
add
add
add
outs
add
arpl
je
imul
and
ja
imul
outs
add
and
ja
imul
and
jo
outs
add
and
jne
jo
and
jae
popa
add
imul
and
je
push
add
outs
add
add
add
add
outs
add
jns
and
jo
popa
add
je
add
add
outs
add
bound
ins
add
add
or
bound
add
add
adc
popa
add
jae
ja
outs
add
add
adc
add
je
inc
add
js
xor
add
bound
add
add
pop
push
add
outs
add
adc
add
je
inc
add
js
add
or
dec
add
push
add
push
add
add
push
add
dec
add
and
push
add
dec
add
and
inc
add
dec
add
push
add
push
add
push
add
add
dec
add
add
add
add
add
add
jne
ins
add
and
and
and
xor
add
add
jae
add
add
add
add
add
add
and
popa
add
add
add
and
and
and
xor
add
add
outs
add
outs
add
add
add
js
arpl
add
je
and
jns
outs
add
and
jae
add
jae
and
je
push
add
add
add
add
add
add
add
popa
add
add
add
jne
outs
add
add
add
add
add
add
add
je
and
je
add
add
add
add
outs
add
add
push
add
js
je
inc
add
js
xor
add
and
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
adc
push
add
add
arpl
outs
add
add
inc
add
jb
ins
add
add
and
inc
add
outs
add
jb
popa
add
add
and
push
add
add
add
add
add
add
add
daa
push
add
jae
jae
ja
outs
add
add
add
jae
and
dec
add
jae
jae
imul
add
push
add
add
outs
add
ins
add
and
dec
add
and
dec
add
jae
jae
imul
add
outs
add
add
jae
and
dec
add
jae
jae
imul
add
xor
jo
imul
imul
add
ins
add
jb
imul
add
ins
add
js
add
je
jo
add
ins
add
imul
arpl
outs
add
add
imul
imul
inc
add
ins
add
imul
arpl
outs
add
add
add
outs
add
ins
add
cmp
and
add
push
add
add
outs
add
ins
add
and
cmp
and
add
sub
and
push
add
jae
jae
ja
outs
add
add
add
add
add
or
outs
add
add
add
add
or
add
outs
add
outs
add
arpl
je
add
add
jb
outs
add
and
push
add
jb
jbe
add
sub
and
push
add
add
jae
add
add
add
and
popa
add
popa
add
outs
add
add
add
add
and
and
inc
add
je
push
add
add
outs
add
and
push
add
and
add
je
add
add
add
add
and
ja
jb
outs
add
add
add
outs
add
outs
add
ins
add
je
imul
sub
and
outs
add
and
jns
outs
add
and
add
and
outs
add
je
and
push
add
and
imul
add
outs
add
je
and
arpl
outs
add
outs
add
arpl
je
imul
and
outs
add
and
imul
jns
outs
add
and
ins
add
data16
add
add
add
imul
add
add
ins
add
outs
add
add
push
add
js
je
inc
add
js
xor
add
add
je
add
ja
je
data16
add
mov
push
aas
inc
lods
adc
scas
iret
test
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
push
add
add
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
adc
add
adc
or
adc
add
add
and
add
and
push
adc
add
adc
and
and
push
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
sbb
add
add
and
add
and
adc
add
add
add
push
adc
add
add
add
add
add
push
adc
add
adc
and
adc
add
add
sub
sub
push
adc
sub
adc
add
add
xor
xor
push
adc
xor
adc
add
add
cmp
cmp
and
add
cmp
and
sub
add
sub
xor
add
xor
cmp
push
adc
add
add
push
sbb
add
add
cmp
sub
add
sub
add
add
add
add
push
add
dec
add
dec
add
adc
adc
add
add
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
add
add
add
add
add
add
adc
or
adc
or
adc
adc
adc
adc
adc
sbb
add
or
pop
add
or
add
adc
add
adc
pop
add
sbb
add
push
adc
add
dec
jns
inc
jo
ins
imul
add
adc
add
dec
jns
push
bound
jb
imul
add
or
cs
outs
ins
jo
je
jb
add
jns
inc
outs
jb
jae
add
add
dec
jns
push
jae
jb
add
add
and
add
and
add
and
pop
add
and
and
add
add
adc
add
push
push
sbb
add
add
add
add
add
add
add
sbb
popf
pop
and
add
adc
add
pop
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
sbb
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
sbb
and
add
cmp
sbb
adc
add
or
and
add
add
and
add
or
and
add
add
fld
and
add
sbb
and
add
and
and
add
push
and
add
or
and
add
sub
and
sbb
push
and
add
xor
and
adc
add
add
cmp
pop
add
add
add
or
or
pop
add
and
cmp
add
add
sub
xor
add
xor
cmp
add
or
push
add
add
adc
adc
add
sbb
and
adc
push
push
push
add
push
push
and
add
add
add
push
or
add
push
imul
or
gs
inc
outs
js
add
adc
add
jb
addr16
jae
inc
popa
jb
add
or
add
inc
jne
je
outs
xor
add
gs
inc
outs
js
add
or
add
dec
popa
bound
xor
add
gs
inc
outs
js
add
or
add
dec
popa
bound
xor
add
gs
inc
outs
js
add
or
gs
inc
outs
js
add
or
add
dec
popa
bound
xor
add
gs
inc
outs
js
add
adc
add
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
push
or
add
xor
add
add
and
add
cmp
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
cmp
xor
xor
xor
add
add
sub
add
or
cs
gs
imul
and
add
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
xor
xor
xor
xor
add
add
and
cmp
xor
sub
sub
sub
sub
xor
popaw
xor
xor
add
outs
jo
jb
addr16
and
and
xor
xor
add
add
adc
outs
outs
ja
inc
jo
ins
imul
xor
add
add
add
add
add
add
add
add
fimul
or
add
add
ror
or
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
