bts
sub
btc
aad
shl
rcl
lea
pop
bswap
rcl
and
bsr
jmp
mov
pushf
lea
jmp
add
clc
stc
pushf
ror
jmp
pushf
push
pop
pushf
pushf
pushf
mov
lea
jmp
clc
pushf
not
lea
je
sub
jmp
mov
cmp
add
pushf
push
mov
pushf
lea
jmp
cwde
push
pushf
jmp
pushf
pushf
test
sub
jmp
sub
mov
clc
cmp
push
push
add
pusha
shld
pushf
mov
mov
call
pushf
mov
push
jmp
xchg
pushf
pushf
mov
pushf
lea
ja
push
push
push
ret
jmp
pusha
push
push
pushf
pop
pushf
pushf
mov
push
pop
push
push
mov
lea
jmp
rol
bsr
inc
shld
bswap
sub
not
dec
movsx
movzx
dec
sbb
mov
mov
cmp
cmp
cmp
add
stc
clc
add
jmp
push
cmc
pusha
pushf
rol
mov
add
mov
cmp
test
stc
xor
pushf
clc
stc
test
mov
mov
stc
cmp
sub
push
mov
mov
lea
jmp
pushf
pushf
pushf
pusha
mov
pushf
pushf
pop
pushf
mov
call
shrd
inc
jmp
pushf
mov
call
mov
push
mov
jmp
mov
call
jmp
push
push
sub
push
bt
mov
shr
pushf
mov
pushf
mov
call
call
mov
pushf
pushf
lea
jmp
mov
pushf
call
xor
neg
sar
bts
sar
and
add
jns
bsr
not
mov
bt
cmc
jmp
movzx
mov
pusha
pushf
pusha
push
lea
pushf
mov
push
mov
mov
lea
jmp
cmp
pusha
mov
lea
jne
setne
shrd
xor
lea
pop
pusha
pusha
push
lea
jmp
bt
cmp
add
mov
lea
jo
push
push
mov
push
mov
pushf
lea
jmp
call
movzx
push
not
mov
call
push
pushf
cbw
jmp
outs
ja
sbb
or
jns
sbb
jp
ret
sbb
mov
ret
sbb
mov
sbb
pop
addr16
sbb
dec
addr16
sbb
addr16
sbb
retf
jle
sbb
and
sbb
(bad)
(bad)
ret
fs
sbb
sbb
add
sbb
and
sbb
dec
addr16
sbb
imul
sbb
mov
sbb
mov
ret
sbb
jp
ret
sbb
dec
addr16
sbb
rcr
adc
sbb
push
mov
sbb
mov
ret
sbb
addr16
sbb
sbb
ret
out
sbb
in
ret
sbb
sbb
pop
addr16
sbb
call
sbb
push
mov
sbb
jle
ret
sbb
mov
sbb
jle
ret
sbb
xor
sbb
jle
ret
sbb
test
ret
sbb
jle
ret
sbb
rcr
cli
mov
sbb
ret
jl
sbb
retf
sbb
hlt
jns
sbb
retf
jle
sbb
ret
jl
sbb
add
sbb
loopne
ret
jns
sbb
add
sbb
int3
ja
sbb
jle
ret
sbb
(bad)
(bad)
ret
sbb
retf
sbb
call
sbb
adc
sbb
jle
ret
sbb
test
ret
sbb
jle
ret
sbb
adc
sbb
jle
ret
sbb
(bad)
(bad)
ret
sbb
dec
addr16
sbb
(bad)
(bad)
ret
sbb
sbb
int3
retw
sbb
ret
jl
sbb
adc
sbb
sbb
ret
jns
sbb
retf
jle
sbb
mov
ret
sbb
and
sbb
sbb
or
pop
ret
sbb
(bad)
(bad)
ret
arpl
sbb
pop
jns
sbb
retf
jl
sbb
mov
ret
sbb
jle
ret
sbb
or
pop
ret
sbb
mov
ret
sbb
mov
ret
jle
sbb
retf
sbb
add
sbb
or
jl
sbb
sbb
hlt
jns
sbb
cwde
jge
sbb
idiv
sbb
ret
mov
sbb
rcr
test
ret
sbb
sbb
ret
mov
sbb
and
mov
sbb
or
jle
sbb
retf
sbb
and
pop
ret
sbb
mov
ret
sbb
addr16
sbb
sbb
ret
jle
sbb
pop
addr16
sbb
and
fs
sbb
push
jno
sbb
pop
jns
sbb
mov
sbb
or
jle
sbb
push
arpl
sbb
ret
jl
sbb
mov
ret
sbb
sub
ret
sbb
adc
sbb
and
jge
sbb
sub
ret
sbb
test
ret
sbb
retf
sbb
imul
sbb
and
js
sbb
adc
sbb
sub
ret
add
(bad)
inc
ret
lea
ja
sub
jmp
mov
mov
lea
jmp
pushf
mov
mov
lea
cpuid
cmp
pusha
clc
sub
clc
mov
cmp
lea
jge
pushf
pusha
mov
jmp
mov
stc
movzx
stc
bt
sub
pushf
add
lea
jb
clc
neg
pushf
stc
rol
pushf
pusha
bt
sub
call
pusha
pusha
push
mov
mov
lea
jmp
cmp
movzx
stc
jmp
lea
mov
mov
lea
jmp
bt
lea
clc
cmp
clc
pusha
add
cmp
clc
pushf
cmp
cwde
call
jmp
pushf
call
mov
pusha
lea
jmp
dec
shld
ror
mov
stc
add
add
setb
push
pusha
mov
jmp
pushf
cbw
mov
pushf
pusha
jmp
not
mov
std
mov
bswap
jmp
pusha
pushf
pop
push
mov
mov
call
call
push
pop
mov
lea
jmp
lea
jne
or
adc
pushf
add
mov
test
bt
push
and
jmp
push
pushf
mov
push
mov
lea
jmp
mov
lea
jle
cbw
jmp
sub
pushf
pusha
mov
pusha
pushf
lea
jmp
lea
ja
lea
pusha
aam
clc
lea
btr
push
lea
jmp
jmp
clc
call
pusha
push
pusha
mov
mov
mov
mov
pushf
pop
jmp
push
mov
mov
push
mov
mov
mov
lea
jmp
jmp
neg
mov
rcl
shl
shr
mov
push
call
mov
mov
pushf
dec
stc
clc
ror
clc
jmp
mov
push
jmp
cmc
clc
bt
sub
cmc
shl
jle
push
mov
mov
push
push
call
push
pushf
push
push
pop
mov
lea
jmp
mov
pushf
mov
mov
jmp
jmp
call
not
setne
mov
pusha
call
lea
jge
push
lea
cpuid
test
cmc
sub
pusha
pushf
cmp
push
call
xchg
clc
push
cmc
push
add
pushf
call
inc
inc
pushf
xor
movzx
call
mov
push
mov
lea
jmp
test
pushf
stc
sub
bt
call
push
mov
mov
push
mov
mov
mov
lea
jmp
sub
call
mov
pusha
lea
jmp
jmp
push
pushf
mov
mov
push
ret
mov
jmp
call
mov
pushf
pop
mov
jmp
push
jmp
stc
mov
neg
call
test
lea
pushf
stc
pusha
clc
cmp
jmp
push
pusha
not
pusha
dec
bsf
cmc
add
rol
bsf
dec
inc
mov
pushf
sub
jbe
bt
add
jmp
jmp
pushf
pop
mov
mov
push
push
pop
pushf
pushf
mov
lea
jmp
call
sub
stc
stc
call
lea
mov
shr
bswap
mov
cmp
add
pusha
call
pushf
jmp
push
lea
je
pushf
xor
call
dec
pushf
pushf
test
sub
call
jmp
mov
push
mov
pushf
pushf
mov
push
lea
jmp
jmp
shr
not
bts
mov
add
adc
mov
jmp
push
mov
pusha
push
ret
xor
setb
shr
lahf
mov
bsr
bsf
btr
mov
clc
not
clc
pushf
cmc
not
test
mov
test
pusha
and
jmp
mov
mov
jmp
jmp
mov
push
mov
pushf
pushf
call
jmp
push
mov
jmp
mov
cmp
cmc
xchg
jmp
lea
push
mov
mov
mov
lea
jmp
pushf
pusha
mov
jmp
mov
pushf
mov
mov
call
mov
mov
mov
mov
call
pushf
mov
mov
jmp
push
mov
pushf
pop
call
inc
mov
xchg
rcl
pop
shl
das
dec
shrd
pop
inc
pop
test
movzx
pop
lea
pop
bswap
pop
sar
not
sub
bsf
pop
std
pop
shld
std
pop
pusha
push
popf
jmp
pushf
jmp
pushf
jmp
movsx
sub
pop
bswap
movzx
not
mov
movsx
mov
pushf
call
lea
jne
stc
test
xor
pusha
mov
pusha
lea
jmp
shr
pushf
pusha
push
mov
pushf
push
mov
pushf
pushf
pop
call
push
push
mov
jmp
mov
push
pushf
pop
call
pushf
pop
jmp
pusha
mov
jmp
call
mov
btr
call
pusha
pushf
pop
pusha
pushf
jmp
pushf
pushf
mov
lea
jns
pushf
push
mov
pusha
mov
pushf
mov
pushf
push
call
call
mov
mov
mov
jmp
bswap
jmp
cmp
mov
sbb
mov
cmc
add
pushf
push
call
jmp
and
call
pushf
call
sar
setb
sub
mov
clc
push
pusha
bt
bswap
jmp
ror
bt
cmc
jmp
mov
pusha
pushf
lea
jmp
rol
aas
shrd
inc
mov
clc
add
pushf
call
jmp
mov
push
pop
mov
pushf
mov
lea
jmp
mov
call
pushf
pop
mov
call
setb
mov
pusha
call
jmp
pushf
call
mov
sub
dec
mov
jmp
push
mov
mov
call
pushf
push
cmp
pushf
push
call
call
stc
mov
mov
sub
mov
call
call
sub
pushf
mov
pusha
pusha
pushf
push
lea
jmp
clc
rcl
mov
clc
stc
add
call
xor
cmc
call
pushf
call
jmp
rcr
push
ror
cmp
neg
shrd
xor
jmp
push
mov
push
push
pusha
mov
call
lea
jne
movsx
mov
cmp
push
and
stc
call
clc
rol
shld
movsx
sub
sets
shl
cmc
sub
shrd
movzx
pushf
stc
pusha
mov
cmp
push
mov
or
jmp
push
pop
pushf
push
pushf
lea
jmp
mov
jmp
call
xor
mov
bt
sub
pusha
push
pusha
add
test
call
push
lock
std
std
test
xchg
outs
xchg
dec
mov
ret
leave
bswap
sub
mov
pop
in
xor
out
scas
cmp
jge
sbb
icebp
test
inc
aaa
and
aam
push
les
in
shl
daa
test
pop
test
inc
xchg
jge
in
xchg
push
xchg
mov
push
xlat
add
lock
fisttp
jmp
jmp
mov
sbb
push
out
dec
xor
cwde
sti
ins
push
xchg
retf
mov
jle
rol
pop
pushf
push
dec
cmc
fsub
iret
(bad)
mov
in
les
fisttp
mov
pop
push
adc
pop
mov
retf
inc
stos
(bad)
xchg
jmp
test
shr
repz
ds
pusha
lods
nop
rol
xchg
pop
popf
mov
sbb
sbb
ins
pusha
call
push
lock
std
std
(bad)
xchg
xchg
arpl
mov
ret
js
aas
je
ret
(bad)
mov
mov
pop
dec
ss
pop
aas
in
fnstsw
leave
in
pop
dec
dec
les
aam
push
into
add
loop
sub
test
push
test
xor
xchg
or
xchg
or
rdmsr
add
sbb
inc
sar
(bad)
stc
cmp
pop
aam
std
mov
cdq
sbb
test
cmp
mov
inc
xchg
push
cld
dec
cdq
fstp
lds
adc
imul
jne
mov
addr16
mov
leave
in
and
aaa
in
jp
push
lea
jmp
push
mov
call
add
xor
add
inc
mov
sbb
sub
aad
adc
pop
push
(bad)
call
ret
pop
push
sub
jecxz
dec
inc
adc
int3
or
mov
pushf
inc
scas
adc
pop
dec
or
popa
fwait
push
dec
mov
jle
jno
push
stos
test
mov
add
jmp
sub
or
inc
cmp
inc
ss
and
mov
lock
scas
iret
das
das
sbb
out
cmps
aam
and
lods
jo
ins
push
(bad)
cmp
clc
ins
aas
cmp
mov
cmp
dec
cdq
movs
jns
xchg
cwde
dec
loop
test
and
imul
xchg
pop
sbb
call
xchg
lock
mov
mov
mov
fnstenv
sbb
mov
cmp
enter
push
aam
fs
mov
cmps
enter
pushf
mov
call
mov
mov
push
mov
mov
pusha
mov
pusha
lea
jmp
pusha
mov
pusha
mov
call
jae
ret
push
dec
retf
cmp
xor
push
sti
jns
jmpw
ror
icebp
pushf
jmp
mov
pop
aad
lea
mov
stos
lahf
and
or
jno
into
or
jg
dec
ss
(bad)
jo
in
mov
pusha
mov
pushf
push
lea
jmp
das
xchg
and
rcl
xchg
or
cdq
and
sub
and
neg
adc
je
jmp
or
lock
pop
fist
adc
push
sub
cwde
cmp
outs
js
stc
ins
or
mov
(bad)
jmp
(bad)
icebp
mov
pop
inc
sbb
rol
and
ds
pusha
test
(bad)
movlps
mov
jno
mov
cmc
cmp
dec
rol
push
adc
lock
std
std
xchg
ins
mov
faddp
lds
js
shr
int3
das
or
mov
pop
xor
xor
push
aas
mov
jge
jmp
inc
adc
pop
iret
add
jecxz
and
test
or
mov
inc
(bad)
mov
inc
lods
les
test
mov
fmul
mov
mov
fiadd
mov
mov
push
push
call
cld
inc
push
inc
fidivr
or
inc
xor
pusha
pop
movs
jns
or
imul
icebp
add
pop
in
dec
and
jge
adc
push
popf
ror
push
out
repz
xchg
stos
xchg
mov
and
fs
test
adc
in
jge
pusha
inc
mov
push
push
jo
xchg
xor
mov
lahf
adc
mov
pop
push
mov
loop
mov
pushf
push
pushf
jmp
push
mov
push
lea
jmp
call
mov
pushf
mov
mov
pushf
lea
jmp
shl
pop
push
and
or
out
lods
inc
dec
test
js
lds
jno
add
add
mov
iret
or
dec
inc
cwde
adc
jle
popf
mov
cdq
cwde
shl
jo
inc
mov
mov
std
and
add
inc
and
mov
cmp
add
loopne
jl
add
fs
jmp
jmp
push
pusha
call
call
mov
je
mov
fs
fcomp
ins
mov
in
sub
cdq
and
sub
retf
test
push
fnsave
jg
add
imul
mov
dec
push
xchg
cli
push
cmps
lds
mov
(bad)
dec
mov
ins
xlat
dec
mov
lods
pop
jnp
rol
lahf
mov
bound
push
dec
cld
pop
lods
sub
jns
xchg
lea
inc
xchg
xor
(bad)
mov
xchg
sbb
adc
push
jo
cmps
les
ja
mov
jmp
push
lock
std
std
mov
xchg
shl
inc
inc
fcmove
shr
mov
pop
(bad)
ss
pop
mov
mov
loope
dec
dec
daa
and
aam
pop
retf
call
popf
inc
cmps
test
push
cmp
mov
inc
rol
xchg
push
movs
hlt
in
(bad)
gs
into
push
enter
fisttp
(bad)
xor
(bad)
push
xchg
mov
ss
scas
nop
cdq
and
pop
cmc
test
inc
inc
stos
xchg
jmp
adc
jb
test
dec
dec
ror
push
mov
cs
push
pop
bound
jnp
or
call
mov
out
test
push
pushf
call
pushf
mov
pusha
pushf
pusha
mov
pushf
mov
pushf
lea
jmp
push
ret
cmp
movs
sti
inc
mov
stc
pop
cmp
dec
push
dec
dec
cmp
or
ja
and
inc
lods
sub
mov
add
sub
jge
inc
cmp
mov
test
push
pushf
movs
dec
add
hlt
jae
push
mov
inc
cwde
push
jne
or
in
mov
int3
ror
adc
cmps
ret
mov
out
das
addr16
popf
xor
sbb
cmps
jne
ins
cmp
lea
add
sbb
xchg
in
push
pop
or
xor
por
mov
add
inc
xor
rol
cdq
inc
jno
cmp
push
fadd
xchg
scas
mov
dec
cli
xchg
jno
mov
fisttp
mov
lahf
xchg
(bad)
cwde
(bad)
adc
bound
ror
xchg
xchg
lds
pop
pop
inc
es
xlat
push
jb
test
adc
mov
and
dec
cmps
test
xor
ja
int3
inc
popa
sub
dec
dec
xlat
daa
sub
icebp
sbb
ja
pop
fisub
add
(bad)
push
pop
fldcw
xor
popa
sub
int3
test
push
fadd
xchg
mov
pop
loope
test
xor
push
pop
cmp
lahf
and
jb
test
or
push
xor
sbb
pop
lods
(bad)
popf
ret
push
cmp
mov
add
mov
inc
nop
push
add
bound
div
push
sbb
adc
shr
sub
jg
popf
mov
inc
ds
mov
mov
pop
out
mov
pop
pop
jnp
xor
sbb
cmp
cmps
xchg
cmp
pushf
push
inc
sbb
mov
xchg
jg
push
mov
sub
xchg
je
lods
inc
xor
mov
jp
mov
push
call
dec
sbb
push
push
add
hlt
dec
inc
test
test
loope
rcr
call
pop
push
adc
cli
jecxz
adc
psllw
push
loop
loopne
shl
outs
dec
dec
aaa
jp
out
sub
jae
jge
mov
shl
push
jmp
pusha
mov
mov
pusha
mov
pushf
mov
pushf
mov
push
lea
jmp
jmp
movs
scas
jmp
cs
and
les
xor
in
daa
ds
sub
pop
(bad)
les
jle
stos
dec
ret
inc
sahf
dec
inc
cmp
push
cmps
sar
dec
pusha
jmp
je
push
sbb
add
stos
xchg
jle
(bad)
out
and
repnz
xor
fs
sub
sbb
mov
xor
push
test
cdq
sub
pop
sbb
test
xor
in
pop
xor
fs
mov
mov
and
inc
and
pushf
out
outs
adc
pusha
jmp
pusha
pusha
mov
call
popa
out
cdq
jae
cmp
mov
xchg
(bad)
popf
lods
cs
push
inc
and
aad
add
stos
and
iret
mov
lahf
sbb
push
cs
add
xchg
call
stc
xor
xchg
dec
xchg
repnz
jnp
sbb
cmp
mov
rol
dec
or
push
xlat
jbe
mov
scas
fdivr
inc
nop
adc
out
xchg
mov
test
or
in
jp
dec
and
inc
ins
cmps
ins
jle
out
xchg
out
mov
pop
mov
cmp
movs
ins
and
cmp
push
hlt
and
sbb
mov
ret
aas
(bad)
sub
and
dec
sub
repz
repz
rcl
std
sbb
push
lds
mov
sbb
adc
mov
mov
pop
push
xlat
cmps
mov
mov
leave
xchg
pop
sbb
mov
call
retf
adc
or
jmp
mov
xchg
iret
(bad)
mov
jg
jb
add
dec
or
sbb
pop
xor
(bad)
jb
mov
or
repnz
xor
xchg
mov
rcl
enter
dec
dec
mov
add
fdiv
fmul
or
dec
pop
cmps
jbe
cs
les
cmp
mov
pop
movs
loope
jb
ins
ss
and
fist
cwde
pop
pop
test
sahf
jb
aam
sti
jae
jle
jp
push
jnp
rcr
repnz
jg
jecxz
dec
fsub
sub
mov
nop
jmp
push
sbb
mov
pusha
stc
mov
ficomp
sbb
addr16
or
in
xchg
out
imul
push
sub
int3
cmp
add
addr16
cs
jp
and
dec
cmp
pushf
mov
jb
cmp
sub
dec
or
dec
ret
push
call
add
lock
ret
or
pusha
add
pop
or
or
push
and
inc
push
and
inc
cdq
pop
pop
mov
dec
xchg
cwde
outs
in
fwait
fs
arpl
aas
mov
fisttp
jns
jno
lahf
scas
mov
sbb
data16
mov
clc
leave
mov
cmp
std
jmp
cdq
out
push
jmp
cmp
push
call
out
mov
cmp
cld
shr
leave
dec
push
test
lods
jmp
sar
je
or
scas
push
mov
shl
pop
cmps
mov
mov
arpl
push
add
push
rol
sub
mov
fidivr
jns
mov
pusha
pushf
mov
pushf
mov
mov
lea
jmp
push
mov
mov
mov
lea
jmp
pushf
mov
pushf
mov
mov
mov
push
pushf
pushf
lea
jmp
and
fmul
mov
mov
mov
rcl
push
mov
lock
jp
ja
xor
pop
lahf
inc
jb
mov
test
adc
cmp
pop
lea
add
sbb
jmp
in
sti
inc
loope
(bad)
sub
(bad)
mov
dec
fcom
fisub
or
int3
call
mov
das
dec
stos
inc
cli
ins
xchg
xor
add
out
adc
inc
loope
ret
sub
or
push
(bad)
jge
add
dec
mov
pop
dec
test
push
cmps
cmps
loop
stos
movs
test
cmp
pop
or
dec
cs
lods
adc
loopne
movs
mov
sbb
dec
pop
xchg
add
shl
mov
mov
inc
and
pushf
out
jno
mov
jmp
mov
push
dec
daa
xchg
dec
mov
push
and
imul
jg
in
jb
jne
xchg
adc
pop
std
leave
xor
pop
ss
sbb
sub
push
ret
mov
inc
and
pushf
out
jne
push
pushf
call
mov
mov
pushf
lea
je
pusha
push
mov
pushf
push
push
pushf
lea
jmp
mov
loop
ja
movs
mov
cdq
sbb
test
dec
mov
pop
push
push
cmps
jge
pop
adc
or
mov
xchg
imul
(bad)
enter
xchg
(bad)
pusha
mov
push
lea
jmp
xchg
dec
fmul
(bad)
in
inc
lds
sbb
dec
cdq
es
into
pop
nop
push
adc
fnstenv
aam
mov
xchg
xchg
jo
out
or
mov
sbb
cdq
add
scas
idiv
scas
fnstenv
cs
or
pop
les
inc
mov
push
push
pop
cmc
into
mov
mov
jns
pushf
push
mov
pusha
pushf
call
mov
push
pushf
mov
pusha
mov
lea
jmp
pop
stos
jno
dec
sbb
ret
mov
jmp
mov
pop
jle
sub
push
xlat
adc
push
push
jg
xor
pop
inc
adc
aaa
rol
jg
scas
hlt
dec
xchg
sahf
push
xchg
adc
xchg
pusha
loop
pop
and
(bad)
xchg
or
movs
fs
adc
mov
xchg
or
fsub
push
addr16
dec
xor
xlat
dec
adc
mov
lea
in
cli
dec
push
frstor
test
dec
mov
dec
mov
xchg
mov
xlat
call
pusha
lea
ja
push
pusha
mov
mov
mov
pushf
pusha
lea
jmp
pusha
call
sbb
call
mov
int
in
add
shl
test
and
mov
add
jle
mov
daa
fcom
ficom
(bad)
(bad)
cmp
pop
pop
fmul
retf
(bad)
shl
or
mov
js
test
stc
aaa
push
push
cmp
shl
(bad)
cmp
or
mov
add
xchg
sub
cmps
jmp
mov
in
enter
push
inc
adc
test
aad
mov
sbb
mov
mov
(bad)
or
add
call
repz
push
cmps
and
test
cmps
and
add
add
aas
sub
repz
cwde
sbb
dec
jbe
push
in
(bad)
ficomp
cmp
inc
mov
and
bts
xchg
mov
adc
ins
xlat
xchg
out
imul
loopne
pop
mov
mov
mov
adc
cdq
icebp
scas
add
ss
mov
cmp
arpl
cdq
mov
int
in
fstp
jmp
fcomip
out
lahf
inc
aas
sub
adc
fisub
(bad)
outs
pop
sahf
popf
callw
and
mov
dec
cwde
out
jno
xchg
aam
pop
jo
mov
mov
cmp
add
add
inc
inc
iret
dec
xchg
ja
cmp
xlat
or
pop
cmp
or
popf
loope
es
jae
test
jo
inc
aaa
or
inc
pop
lods
sub
fisub
out
sbb
add
in
push
push
adc
arpl
pop
xor
mov
xor
sub
sub
xor
push
shl
xlat
and
sbb
adc
js
in
popf
and
cmps
mov
dec
pop
loopne
mov
pusha
xchg
ret
add
mov
and
sub
xchg
xchg
sub
mov
ins
ins
pusha
cmps
mov
ins
out
sub
ror
sub
xchg
iret
cwde
sbb
out
jo
lahf
sbb
stos
cmps
cmp
adc
inc
ror
or
jp
test
add
mov
mov
out
out
test
out
ror
cmp
hlt
jb
sub
js
jge
xchg
adc
or
mov
adc
mov
nop
push
pop
mov
fs
les
pop
retf
mov
sti
push
mov
pusha
lea
jmp
mov
pushf
mov
pushf
call
push
pusha
call
dec
in
add
out
int3
or
arpl
dec
mov
mov
scas
ja
fs
outs
test
sbb
mov
out
loop
out
cdq
pop
and
in
xor
jbe
xor
js
xchg
mov
paddq
lea
dec
loopne
leave
jmp
shr
pop
or
inc
pop
mov
pop
ret
sbb
mov
icebp
jnp
mov
ss
add
inc
(bad)
jne
lahf
ins
push
push
mov
xlat
test
xchg
push
movs
test
loope
inc
inc
xchg
jmp
push
cs
clc
cdq
jmp
repnz
push
iret
aad
push
sahf
push
sar
pop
js
stos
movs
pop
test
push
mov
hlt
push
in
inc
cs
test
and
ins
push
inc
cmp
or
pusha
inc
(bad)
ficomp
dec
movs
xchg
es
xchg
fwait
dec
imul
repnz
and
inc
inc
adc
dec
(bad)
fcomp
pop
aaa
and
inc
push
inc
mov
or
inc
aam
sahf
in
stos
and
sub
cmp
js
mov
jg
adc
cdq
adc
sbb
clc
push
mov
cmps
pusha
inc
lods
push
rcl
das
scas
sub
test
out
dec
test
inc
or
pop
loopne
cmp
arpl
sbb
inc
or
push
push
cwde
cld
mov
lods
mov
push
pusha
call
call
mov
push
pusha
pusha
mov
lea
jmp
push
jmp
mov
mov
pusha
pushf
lea
jmp
push
lock
std
std
mov
xchg
imul
cmp
jmp
mov
leave
lahf
lea
ins
add
pop
(bad)
ss
xchg
jns
inc
cmp
jbe
cs
pop
enter
shl
adc
test
xor
add
sbb
in
xchg
push
push
stos
xor
lods
sbb
add
(bad)
loop
jo
jmp
sbb
inc
inc
cmp
iret
pop
or
in
aad
sbb
je
stos
out
scas
sbb
outs
js
xchg
call
test
xchg
aas
sub
pop
inc
sahf
xchg
retf
ins
arpl
sub
and
add
arpl
pusha
sub
mov
fsub
daa
or
inc
lods
pusha
inc
push
stos
out
push
(bad)
call
lods
ins
dec
mov
add
mov
pop
je
fldenv
ficomp
mov
icebp
pop
and
mov
jecxz
mov
sub
lds
outs
mov
mov
aad
adc
bound
inc
sbb
pop
int3
stos
pushf
xlat
scas
lods
xchg
jl
sub
ror
dec
hlt
pop
sbb
xchg
push
xchg
push
mov
adc
fld
mov
enter
sbb
rcr
jl
scas
daa
push
xor
inc
cs
xor
mov
popa
or
aas
lahf
fbstp
mov
sub
add
cmp
and
mov
icebp
xor
fwait
ins
fwait
jmp
out
mov
sbb
ficomp
popf
sbb
mov
scas
add
add
test
(bad)
addr16
mov
adc
adc
mov
xchg
dec
dec
jge
pop
cli
ins
jge
lea
daa
repz
xchg
sub
int3
mov
std
cld
test
popf
mov
mov
pop
push
push
sbb
adc
popf
push
cdq
add
cmps
jns
add
test
stos
fldenv
bound
mov
push
sahf
test
cld
out
icebp
repnz
popf
jb
in
mov
mov
cmp
sbb
ins
or
jo
and
xchg
hlt
cmp
ins
sub
shl
sbb
sub
es
sub
jecxz
cmp
pop
fisttp
push
outs
adc
loop
xchg
dec
push
jecxz
xor
push
nop
jnp
adc
jno
icebp
movs
inc
push
and
mov
lea
jnp
les
shl
sbb
inc
and
mov
xchg
dec
mov
pusha
mov
pusha
lea
jmp
pushf
jmp
call
mov
dec
cmp
dec
adc
clc
or
cdq
and
inc
(bad)
jnp
outs
test
xlat
xor
or
lahf
jge
inc
lock
or
jae
push
call
mov
clc
ja
ret
adc
push
add
xchg
jmp
pop
js
mov
out
imul
test
jmp
mov
and
push
sbb
sbb
jo
out
sub
jmp
(bad)
test
sti
bound
(bad)
rcr
sbb
push
ins
inc
and
fcom
retf
aaa
sub
loopne
pop
mov
pushaw
mov
mov
mov
pushf
pushf
push
push
lea
jmp
pcmpeqb
adc
loope
aas
sub
loopne
dec
sub
ja
cs
push
xlat
daa
pushf
add
dec
aas
sub
pop
pop
adc
xor
in
push
and
xchg
mov
or
mov
xor
js
adc
cmp
dec
nop
adc
and
push
sbb
inc
wbinvd
fidiv
int
cmps
mov
mov
and
adc
sar
add
jle
pop
retf
cdq
push
stos
(bad)
hlt
xlat
jmp
gs
popa
mov
inc
mov
sub
sub
repnz
add
daa
xchg
or
mov
sti
xor
jp
(bad)
pop
lds
lods
mov
pop
mov
addr16
sbb
pop
cli
cmp
imul
movs
arpl
test
and
sbb
repz
xchg
outs
pop
int3
cmps
sbb
xchg
(bad)
repnz
arpl
in
inc
mov
fsub
pop
or
xchg
push
bound
jmp
sbb
adc
rcr
cld
jmp
sub
sbb
fmul
inc
shl
push
mov
xor
pop
inc
movs
cli
rcr
mov
jge
(bad)
lods
out
mov
sub
and
repnz
shl
fwait
adc
sub
(bad)
inc
sti
xchg
xchg
cdq
sbb
test
ret
fstp
sbb
fwait
inc
inc
or
dec
ret
mov
jbe
mov
clc
std
into
pushf
mov
mov
jmp
fwait
js
mov
cli
(bad)
loopne
sahf
retf
sbb
stc
xor
jbe
pop
test
cmp
sub
sbb
test
push
jmp
adc
daa
mov
sbb
inc
and
pop
jg
pop
mov
mov
lea
jmp
movs
xor
(bad)
out
sbb
enter
push
mov
sub
sbb
jae
push
lock
es
dec
xchg
jle
test
shr
and
add
pop
aad
add
mov
jns
push
mov
mov
mov
push
lea
jmp
mov
pushf
mov
lea
jmp
pusha
mov
call
retfw
sbb
sub
sub
fs
dec
cdq
inc
imul
into
aas
sub
fld
mov
xor
mov
and
dec
cdq
into
mov
add
into
ror
fld
cmps
stc
mov
and
scas
sbb
xchg
xchg
push
jno
mov
sub
mov
xchg
loop
mov
inc
sub
push
push
std
pop
aad
xor
shl
int
inc
inc
(bad)
jmp
loope
lea
cmp
bound
xchg
popf
ror
cmp
or
mov
jle
cmp
scas
sub
cmp
pusha
sub
ret
inc
sub
xchg
retf
adc
lods
lods
sub
movs
addr16
pushaw
pusha
pushf
lea
jmp
mov
jmp
stc
push
les
popf
je
cmps
jb
pop
movs
cdq
daa
call
test
xchg
jb
mov
mov
loope
in
pop
xor
jbe
push
cmps
add
jnp
cs
loope
leave
leave
ficomp
xor
movs
mov
sbb
sbb
(bad)
call
jbe
inc
and
pushf
out
mov
jmp
pushf
push
mov
pusha
lea
jmp
or
sub
loopne
pop
sbb
push
cmps
stos
push
pop
stos
and
cmp
scas
push
or
adc
cmp
out
das
dec
cli
jl
lds
jge
test
outs
sahf
cmc
outs
mov
dec
std
stos
arpl
retf
add
rcr
adc
and
rcl
(bad)
(bad)
cmps
cmps
add
(bad)
(bad)
neg
mov
hlt
ja
sbb
test
jb
call
adc
ins
mov
(bad)
adc
scas
sbb
mov
xchg
mov
(bad)
std
inc
and
cmp
inc
adc
nop
sbb
outs
cmp
add
mov
out
mov
test
pop
shl
out
movs
and
mov
outs
or
lods
jnp
ror
jg
gs
xchg
cmp
in
(bad)
cdq
scas
(bad)
movs
jae
or
cmp
jle
ret
mov
pop
inc
fnstenv
scas
mov
rcr
pop
outs
pop
sbb
in
xor
fldenv
add
dec
ret
lea
aas
xchg
dec
scas
or
jl
cmp
cmp
(bad)
fild
push
mov
xor
fistp
(bad)
jmp
sbb
loope
test
jecxz
mov
data16
frstor
jp
mul
sub
ja
out
(bad)
jnp
jmp
movs
lods
lock
sub
cld
scas
xlat
push
xchg
xchg
push
and
ins
out
cdq
adc
jmp
add
data16
addr16
pop
stos
aam
mul
xlat
pop
jle
mov
cmps
stos
int3
sub
repnz
sub
xor
and
in
test
pop
mov
inc
mov
lds
cmp
cmp
push
movs
xlat
xor
out
cs
mov
mov
popa
dec
call
cmps
stos
out
jmp
add
mov
push
mov
pusha
mov
push
lea
jmp
mov
sbb
sub
jecxz
add
test
sbb
leave
imul
retf
test
sub
outs
ins
popf
into
dec
sub
int
movs
sbb
(bad)
shl
in
mov
cwde
ret
and
movs
cmc
cmp
stos
cld
stc
in
and
cli
ins
je
lahf
out
(bad)
dec
and
test
test
jb
lods
add
pop
dec
inc
sub
bound
mov
sti
repnz
jmp
sub
pop
push
mov
stos
mov
dec
add
fadd
(bad)
or
lahf
cmps
jl
mov
repz
mov
dec
push
mov
cmp
inc
dec
or
nop
lds
ss
sbb
push
dec
loopne
mov
leave
sahf
mov
fist
das
mov
rcr
cmp
test
jg
sti
mov
pop
out
jno
test
dec
push
mov
mov
and
mov
cli
ins
jae
xor
jge
inc
or
jg
inc
pop
lea
pop
dec
retf
aam
call
test
jle
repz
outs
es
aaa
mov
ror
xor
jg
stos
jae
pop
daa
sahf
push
cmp
lahf
test
xor
xor
lds
mov
adc
and
out
jp
jo
push
pusha
lea
jmp
call
mov
fidivr
sub
loope
mov
cdq
es
adc
adc
xchg
adc
nop
out
xchg
shr
mov
cmps
ds
loope
xchg
xchg
cld
into
jne
mov
fstp
cdq
daa
fwait
rcl
and
mov
inc
cmp
xor
dec
push
sbb
gs
inc
mov
xchg
int3
or
cmp
aad
test
mov
inc
movs
xor
inc
adc
test
cmps
xor
push
dec
add
mov
repz
xlat
aas
enter
or
js
xchg
mov
jb
popf
in
or
daa
mov
call
add
sub
add
scas
inc
mov
mov
xor
jp
(bad)
pop
pusha
cli
xor
dec
loop
mov
ds
loopne
test
(bad)
cmp
movs
jecxz
std
and
mov
aas
mov
rol
cmps
or
or
inc
sub
pop
into
sbb
shr
in
(bad)
retf
xchg
cmp
mov
aam
push
cmp
mov
(bad)
pop
and
mov
cmp
xchg
test
test
mov
ret
push
mov
sar
cmp
in
daa
dec
adc
inc
add
xor
lods
mov
retf
add
pop
cmp
ror
pop
scas
inc
mov
inc
das
ret
ss
adc
xor
cdq
sbb
lea
mov
daa
jp
dec
into
test
aam
and
mov
call
and
outs
in
sub
mov
xchg
clc
in
and
mov
cmp
mov
mov
out
mov
cmps
cmps
inc
xchg
push
and
lock
mov
mov
lds
cdq
and
retf
and
repnz
jae
inc
ret
cld
inc
sub
dec
xlat
and
and
push
xor
add
adc
loope
xor
lds
cdq
push
jnp
fcom
or
mov
jae
push
xlat
je
fnstcw
xchg
pop
cs
test
inc
movs
dec
test
test
jo
pop
mov
mov
lock
pop
xchg
out
push
cmp
js
sbb
mov
ins
and
push
pop
jno
mov
(bad)
clc
aad
out
nop
jl
xchg
(bad)
scas
daa
ss
jne
sbb
jnp
imul
repnz
repz
add
ds
sbb
cmps
aas
mov
punpckldq
jle
aad
scas
in
ja
adc
mov
movs
popa
(bad)
sbb
pop
push
xlat
cmps
ret
or
ds
int
lsl
push
call
pusha
call
jmp
(bad)
sbb
mov
fmul
mov
int
cdq
and
mov
inc
jg
mov
stc
add
pop
movs
and
adc
pop
sub
inc
imul
test
fdivr
stos
out
cmps
add
push
aam
mov
sub
(bad)
movsx
or
mov
add
mov
push
cmc
lods
ret
aas
lds
xor
push
mov
scas
popa
or
movs
mov
mov
cmps
add
int
xchg
enter
pop
shl
test
lock
rcr
adc
mov
push
adc
jbe
lock
ror
out
dec
mov
dec
lds
popa
pop
mov
call
aas
lahf
into
push
xchg
daa
nop
inc
js
add
adc
std
xor
scas
lods
pop
pop
scas
test
mov
data16
(bad)
xor
sub
fldcw
je
pop
loope
xor
xlat
xor
int
stos
xchg
fwait
xor
pusha
call
jae
sub
inc
jo
mov
je
jmp
push
lock
std
std
and
push
ja
jo
or
(bad)
mov
pushf
mov
pop
ins
ss
cdq
aas
jl
jge
jns
icebp
sub
out
xchg
aam
pop
into
add
in
shl
test
ror
inc
ss
add
xchg
push
xchg
add
rcr
jmp
pop
rol
cmp
and
out
mov
add
xchg
jmp
pusha
call
stc
xor
std
mov
push
dec
sbb
xchg
mov
(bad)
inc
or
or
jo
or
rol
push
and
repnz
lahf
adc
(bad)
fnstenv
dec
mov
in
xor
sahf
dec
outs
add
mov
inc
mov
sbb
ret
out
rol
mov
jle
mov
sub
xor
cli
and
adc
xor
xchg
xor
and
rol
pop
sub
xchg
(bad)
out
repz
mov
cmp
std
sbb
sub
(bad)
jmp
push
inc
or
scas
adc
mov
lods
ins
(bad)
cmp
pop
push
xlat
mov
pop
xor
jle
iret
ret
cmc
pushf
jmp
inc
cmp
lahf
cmps
test
shr
inc
cdq
cdq
sbb
icebp
mov
test
mov
arpl
push
in
mov
aad
aaa
sti
cmps
or
test
js
iret
mov
adc
and
pushf
out
xchg
fwait
mov
pusha
jmp
push
mov
push
mov
mov
mov
mov
push
mov
pushf
pushf
lea
jmp
dec
pop
lahf
mov
add
test
sbb
push
push
lods
inc
cdq
and
sti
mov
inc
out
sahf
dec
jmp
enter
in
ss
aas
push
test
test
test
xor
(bad)
adc
cmp
ins
ins
scas
dec
xchg
in
dec
sub
test
repz
pop
xlat
and
(bad)
sbb
ins
xor
pop
sbb
push
mov
mov
cmc
push
call
push
push
pushf
mov
pushf
mov
pusha
pushf
pushf
lea
jmp
mov
mov
push
mov
mov
lea
jmp
stc
(bad)
lods
jo
(bad)
dec
scas
sbb
cdq
push
jl
mov
add
test
cmp
lods
mov
mov
add
add
mov
mov
cmp
shl
mov
pop
push
jnp
mov
mov
xlat
add
mov
xlat
jg
fnstcw
imul
stc
rol
and
dec
mov
call
dec
inc
add
mov
inc
ins
not
pop
dec
xchg
out
xchg
cmp
cmp
mov
xchg
ins
cmp
push
stc
push
xor
inc
mov
das
into
xchg
and
xor
jg
jne
pop
and
or
jecxz
outs
repz
adc
aaa
std
sbb
into
out
adc
punpckldq
mov
aad
lods
or
mov
mov
test
push
push
xlat
mov
in
and
aam
enter
lock
jae
out
mov
sub
cmp
je
pop
mov
fidivr
cmp
pop
leave
jno
pop
call
sti
or
imul
xchg
loope
cli
jp
les
ror
arpl
inc
mov
inc
or
lods
js
dec
les
mov
fs
jno
push
push
call
pusha
mov
call
call
push
push
mov
pusha
push
lea
jmp
lods
mov
mov
mov
jnp
cmp
std
sub
stos
dec
shl
hlt
dec
mov
push
cmp
or
inc
mov
idiv
mov
push
imul
fcmovne
movs
jmp
ins
mov
inc
pushf
jmp
call
mov
pushf
pushf
lea
jmp
call
mov
pushf
lea
jmp
call
stc
xor
sbb
xchg
cs
jnp
lods
push
cmp
sbb
adc
adc
xor
mov
adc
mov
add
adc
pop
mul
test
test
xchg
jne
mov
mov
inc
ins
push
mov
sbb
xchg
out
ret
ds
enter
sub
and
aas
xor
jno
adc
call
jne
outs
add
jmp
std
and
aad
cmp
jnp
cmps
jmp
neg
cmp
mov
into
cmp
sbb
sub
bound
adc
mov
ja
adc
mov
cmps
outs
cmp
push
xlat
scas
ret
xor
test
push
call
stc
xor
or
xchg
mov
jnp
ins
mov
or
and
adc
xlat
jp
mov
adc
cld
pop
sub
repz
add
dec
lods
inc
test
test
movs
jne
and
add
lds
xchg
mov
xchg
out
bound
mov
prefetcht1
and
xor
pop
std
add
sbb
add
(bad)
ffreep
xor
pusha
cmp
xchg
(bad)
dec
and
sub
add
ds
mov
popf
cmps
xchg
fnstenv
std
sbb
push
pop
sub
jns
jle
aad
rol
ja
adc
mov
lods
pusha
mov
pop
pop
push
xlat
mov
xor
(bad)
stos
arpl
mov
pushf
pushf
mov
pushf
pushf
lea
jmp
jmp
mov
pop
adc
add
and
lea
pop
fs
ins
cdq
sbb
test
lods
xor
lock
inc
xchg
xchg
xchg
adc
sub
xchg
test
out
mov
mov
adc
ficom
adc
jmp
sub
in
jb
dec
pop
jne
dec
mov
push
push
call
xor
pop
repnz
cli
pop
dec
lahf
loop
dec
cmp
ret
push
cmp
fstp
mov
outs
(bad)
xchg
call
xor
inc
mov
pop
nop
mov
jmp
(bad)
mov
fxch
(bad)
(bad)
adc
adc
push
jno
repz
jnp
scas
hlt
dec
adc
pop
xor
fldenv
stos
xchg
aaa
inc
mov
(bad)
jl
mov
call
test
jmp
mov
sub
jge
in
jecxz
mov
in
cmc
pop
dec
loopne
sahf
push
test
push
inc
adc
daa
or
mov
out
in
mov
cli
ins
iretw
sub
test
outs
jmp
cmc
mov
push
test
out
sti
dec
push
sbb
mov
repz
mov
jbe
es
pop
dec
enter
mov
pop
call
(bad)
jbe
mov
mov
jle
fstp
(bad)
cs
mov
pushf
icebp
xor
mov
jo
(bad)
sbb
inc
es
sub
call
idiv
(bad)
cmp
movs
mov
push
dec
inc
mov
(bad)
and
pop
daa
lahf
and
or
jg
retf
jb
loop
ins
ret
mov
fsubr
dec
cmps
pusha
jmp
pushf
mov
pushf
call
ret
retf
shr
loope
cdq
sbb
push
rol
out
test
inc
lahf
arpl
adc
sti
loope
sti
jle
sbb
in
mov
(bad)
mov
jp
mov
repnz
jmp
pushf
mov
pushf
mov
push
pusha
mov
mov
pusha
mov
lea
jmp
scas
in
push
sbb
ret
sub
sub
lods
dec
call
out
xor
push
das
xchg
jmp
fwait
cmp
and
into
mov
ret
cld
inc
fmul
cld
jp
jl
jns
fisub
jge
(bad)
mov
jl
inc
and
sub
push
lea
jmp
pushf
mov
jmp
xor
shr
pop
add
arpl
stos
test
add
xchg
adc
mov
adc
repnz
push
jae
stc
cmp
fadd
xor
nop
adc
out
dec
mov
imul
addr16
addr16
test
jne
mov
pop
sub
pushf
mov
pop
xor
nop
sbb
jge
or
sbb
mov
aam
adc
test
int
and
in
add
cld
je
out
xchg
in
xchg
push
xchg
jecxz
mov
fadd
jmp
adc
inc
pusha
mov
mov
lea
jmp
push
mov
push
pusha
pushf
mov
lea
jmp
cmc
push
fwait
test
aam
pop
push
mov
cdq
sbb
int3
popa
jno
bound
rol
call
arpl
fiadd
sbb
mov
inc
movs
cmp
jmp
fwait
cmp
pop
sbb
pop
sbb
(bad)
or
sub
cmps
cdq
pop
cdq
out
push
mov
mov
mov
lea
jmp
push
lock
std
std
mov
xchg
imul
jo
dec
gs
retf
retf
scas
(bad)
ins
loope
mov
pop
sub
xchg
jge
test
dec
jmp
add
jecxz
sub
test
mov
test
jbe
mov
xchg
push
mov
xchg
in
(bad)
pop
xor
fdiv
enter
fadd
inc
dec
mov
mov
lea
jmp
call
push
lock
std
std
mov
xchg
ins
out
mov
ret
jl
jb
enter
daa
ins
icebp
pushf
mov
pop
std
ss
sbb
in
cmp
shl
aam
pop
enter
fsub
adc
test
cmp
xor
not
inc
data16
in
xchg
push
(bad)
stos
push
cmc
dec
loope
xchg
movs
jo
jmp
sbb
inc
jmp
mov
push
pusha
mov
push
push
lea
jmp
rol
mov
popf
pusha
cmps
shl
ja
mov
inc
inc
add
aad
or
fwait
lahf
test
mov
retf
xchg
test
or
add
dec
(bad)
or
(bad)
jbe
cmps
cwde
adc
xor
pushf
jp
mov
mov
pop
cld
mov
fstp
or
xchg
xlat
jp
or
inc
pop
mov
add
sbb
jns
inc
test
clc
jmp
add
mov
repz
iret
xchg
out
add
mov
jecxz
add
sub
xor
push
std
mov
mov
adc
fcmovb
adc
ss
shl
loope
fiadd
jnp
call
retf
hlt
ss
rcl
cmp
sbb
cmc
or
sub
bound
adc
jle
(bad)
dec
scas
sub
add
push
jg
bound
xlat
test
mov
loopne
out
retf
not
jbe
xchg
jns
call
jmp
test
int3
ret
(bad)
sbb
jmp
sbb
adc
mov
movs
repz
fwait
sahf
add
xchg
inc
(bad)
xchg
mov
mov
sbb
mov
call
push
adc
mov
mov
cmp
inc
test
mov
jg
dec
lods
stc
jb
sub
xor
pop
lods
push
ja
jb
arpl
jno
jno
pop
arpl
gs
pop
fwait
cdq
daa
cmp
mov
or
xchg
je
test
mov
inc
lds
mov
xchg
jnp
sti
idiv
xor
sub
push
pop
pop
call
and
js
lahf
or
xor
jns
aam
cmps
in
mov
pop
jns
mov
mov
sbb
aad
jb
in
mov
xor
sbb
inc
inc
dec
dec
xchg
test
mov
fcom
dec
inc
das
cld
or
clc
sub
dec
fsub
or
sbb
les
pop
pop
inc
jle
rcl
pop
mov
(bad)
out
mov
div
pusha
aad
push
lock
push
ja
push
fwait
mov
cmps
xchg
pop
adc
pushf
pusha
mov
call
pop
jp
add
dec
sahf
mov
push
sbb
daa
(bad)
jmp
xor
dec
xor
pop
ret
pop
and
aad
xor
(bad)
add
icebp
jmp
mov
test
stc
hlt
mov
cmc
jge
sub
pop
ins
push
push
leave
scas
mov
mov
aad
lods
push
add
sbb
inc
iret
mov
mov
shl
xor
inc
pop
push
sub
sbb
add
xor
mov
test
pop
cmps
retf
xor
mov
scas
popf
sahf
int3
arpl
pop
cmc
and
or
xchg
mov
pop
jne
mov
pop
mov
cmps
pop
jmp
pop
xor
mov
cmps
xchg
pop
sbb
(bad)
call
mov
mov
mov
pushf
mov
lea
jmp
push
call
mov
mov
mov
pusha
push
mov
push
lea
jmp
pusha
push
mov
pusha
pushf
call
leave
loop
ss
add
fcmovnu
dec
dec
mov
bound
(bad)
pop
ins
shr
cdq
pop
call
shr
push
adc
cmps
xchg
jmp
dec
and
push
lea
jmp
popf
adc
mov
stos
jle
push
sub
xchg
sbb
or
xchg
popa
aaa
popa
sub
ins
loop
jg
dec
retf
enter
pop
pop
push
jns
mov
sar
mov
mov
and
and
pushf
out
jns
push
mov
pushf
lea
jmp
mov
push
pushf
push
mov
lea
jmp
pusha
jmp
icebp
idiv
lods
inc
stos
stos
xor
test
cmovl
outs
jno
or
push
addr16
jmp
xchg
stos
xchg
mov
adc
adc
sbb
jg
into
retf
test
into
mov
stos
call
pusha
xchg
leave
cmp
sti
loopne
les
pop
dec
out
pop
dec
ds
js
mov
and
xchg
inc
push
and
add
xlat
push
cmps
stc
and
cs
ss
fist
repnz
int3
sbb
xchg
(bad)
or
dec
and
test
sbb
(bad)
sub
bound
stos
cmp
xchg
fwait
jne
dec
dec
xchg
int
push
push
dec
fwait
callw
xor
popa
jmp
data16
xchg
xchg
out
or
fnstenv
(bad)
sub
cli
dec
sbb
jg
pop
pop
pop
adc
test
popf
das
pop
imul
xor
xlat
in
sub
mov
fisubr
out
mov
mov
sub
xchg
fistp
fsubr
addr16
clc
cmp
mov
xchg
pusha
popa
sub
and
push
sub
scas
pop
rol
dec
bound
jg
mov
test
mov
mov
sbb
shl
imul
scas
movs
xchg
mov
adc
loopne
icebp
xchg
or
xor
inc
(bad)
cmp
js
jge
mov
sbb
jmp
jno
inc
mov
repnz
mov
cdq
adc
add
push
and
mov
fistp
add
and
fxch
pop
xchg
in
fild
push
xchg
(bad)
aad
cmp
xor
dec
xor
and
test
adc
add
ins
mov
rol
add
jle
mov
lods
jno
and
je
sub
sbb
mov
retf
arpl
aaa
jl
mov
mov
sbb
inc
and
jno
push
inc
push
lea
jmp
push
pushf
pushf
mov
mov
pushf
call
lea
js
push
pusha
pushf
push
lea
jmp
pusha
mov
call
push
lock
std
std
test
data16
mov
ret
jo
dec
adc
sub
pushf
mov
pop
mov
xor
pop
fistp
loope
dec
dec
jmp
aam
pop
ret
jmp
addr16
and
add
call
inc
mov
mov
xchg
push
push
cmps
fs
retf
mov
pop
mov
fmul
test
or
push
mov
push
mov
push
pusha
lea
jmp
push
mov
mov
mov
push
mov
pushf
pushf
push
pushf
lea
jmp
mov
jmp
call
jmp
pusha
pushf
mov
push
pusha
mov
mov
pushf
push
lea
jmp
pushf
mov
pushf
push
push
mov
mov
mov
lea
jmp
test
dec
add
jge
dec
(bad)
sar
inc
jp
xor
addr16
stc
imul
dec
inc
fcom
ds
std
xchg
retf
outs
imul
xchg
fmul
pop
mov
push
or
xchg
xor
sbb
aas
sbb
mov
inc
mov
addr16
loopne
jle
add
push
nop
adc
ret
pop
pop
push
xor
imul
inc
cmp
std
add
mov
pop
cmp
(bad)
(bad)
lods
mov
xchg
mov
sub
addr16
mov
mov
pusha
pushf
mov
mov
mov
push
pushf
mov
lea
jmp
mov
push
lea
jmp
push
pop
aam
pushf
(bad)
jb
cmp
sbb
leave
loopne
gs
imul
mov
inc
aaa
xchg
push
aaa
out
sub
cmp
sahf
sahf
movs
jmp
aam
sti
dec
pop
(bad)
je
out
lods
pop
sbb
ins
nop
popa
mov
test
xchg
dec
mov
mov
mov
inc
push
push
inc
and
es
shl
adc
ja
pop
xchg
loopne
mov
fisub
mov
or
ret
retf
inc
jle
hlt
cmp
pop
(bad)
fild
shr
push
sbb
xor
(bad)
and
dec
push
fidiv
sub
mov
push
jmp
adc
xchg
mov
push
jp
and
shl
into
mov
push
test
loope
adc
pusha
xchg
push
(bad)
mov
lods
mov
xor
jmp
xchg
fst
sbb
and
jbe
popf
sub
pop
dec
push
adc
mov
in
test
(bad)
loop
or
fsub
pop
mov
sbb
pop
and
cmp
stos
sub
mov
test
fild
retf
popf
xor
mov
dec
sbb
or
mov
into
(bad)
pop
push
jno
popf
xor
pop
imul
rol
sbb
adc
mov
xor
cdq
and
add
je
arpl
dec
mov
test
dec
cmp
and
gs
pop
mov
mov
(bad)
sbb
dec
inc
xor
aas
xor
push
mov
lea
cmp
pushf
push
clc
inc
lahf
popf
dec
xchg
dec
inc
xor
and
mov
sub
jmp
mov
xlat
aam
push
test
jmp
xlat
add
jmp
mov
stos
jmp
movs
adc
push
push
out
xchg
ret
out
pop
inc
imul
icebp
inc
xor
mov
cmps
xchg
shr
and
mov
push
pusha
mov
mov
lea
jmp
repnz
aam
fs
mov
cs
xchg
adc
into
int3
cdq
xchg
ins
jmp
call
push
repz
jge
clc
inc
pop
or
les
add
mov
push
pop
push
or
movs
push
xchg
mov
xchg
leave
xor
dec
mov
enter
dec
loop
es
shr
and
ins
jge
mov
out
pop
push
dec
cdq
push
aad
mov
adc
lds
mov
xlat
pop
leave
inc
push
xchg
or
xor
dec
sti
repnz
push
jnp
and
int
test
xchg
push
xlat
out
mov
sub
sbb
mov
cld
(bad)
cwde
inc
fcmovbe
aam
enter
test
and
dec
lea
scas
ja
mov
ret
pop
das
jg
ffree
retf
(bad)
test
xor
mov
or
jae
mov
(bad)
in
and
outs
push
push
sub
cmp
mov
icebp
jg
retf
jo
and
test
jno
jmp
mov
xchg
ins
cmp
test
adc
dec
and
call
enter
aam
sub
mov
adc
adc
mov
push
push
(bad)
or
add
cmps
movs
fdiv
shr
cmp
lahf
(bad)
add
scas
test
daa
jmp
jne
pop
push
adc
add
in
aam
sub
mov
adc
jmp
xchg
mov
add
mov
(bad)
inc
inc
and
adc
lds
pusha
lea
jmp
pusha
mov
push
pushf
mov
push
call
stc
xor
fimul
xchg
test
jnp
pop
or
or
pop
inc
or
dec
xlat
jle
stc
mov
loope
or
pop
sub
idiv
(bad)
out
mov
test
enter
pop
jbe
cmp
mov
xchg
jecxz
(bad)
mov
cmp
js
sbb
clc
sbb
sbb
ins
es
sbb
mov
out
jmp
scas
iret
inc
add
inc
mov
(bad)
adc
mov
sub
cmc
mov
cmp
jno
in
addr16
or
std
sbb
outs
bound
sbb
scas
adc
mov
lods
ins
(bad)
in
push
push
push
xlat
cmps
jecxz
mov
(bad)
(bad)
retf
into
popa
mov
jmp
add
cmp
and
ins
inc
mov
retf
xor
mov
pop
ins
dec
cmp
(bad)
into
cmp
imul
jns
xchg
xchg
nop
jecxz
jge
inc
inc
cmc
or
inc
jne
push
and
pop
add
mov
jb
mov
lods
mov
popa
pop
mov
xchg
je
dec
(bad)
push
stc
cmp
sub
leave
push
(bad)
jg
dec
out
(bad)
push
and
jns
inc
rcl
pushf
add
fwait
sbb
add
push
or
sar
xchg
adc
mov
jmp
and
rcr
cmp
iret
adc
retf
add
or
push
leave
mov
aad
xor
retf
out
dec
out
(bad)
push
and
push
push
dec
in
ins
out
mov
hlt
fistp
mov
out
mov
mov
adc
in
movs
add
inc
(bad)
into
dec
int3
or
test
add
add
cmp
sbb
jns
xchg
sub
test
jno
das
call
sbb
cmp
mov
(bad)
shr
inc
stos
sbb
retf
cmp
clc
or
scas
jmp
pop
test
jbe
mov
xchg
fistp
pop
fstp
xchg
add
dec
cli
and
cdq
add
ins
push
push
pop
bound
xchg
mov
dec
sbb
add
leave
push
sub
(bad)
cmps
fstp
mov
les
jne
inc
ret
cwde
sbb
xor
js
daa
call
push
jne
mov
loopne
cdq
adc
cwde
dec
add
retf
adc
push
cmp
loop
stos
jmp
iret
xor
lahf
mov
pop
mov
mov
or
fldcw
pop
sahf
mov
mov
int
lods
fstp
fnstsw
sub
push
xchg
cwde
les
jno
xor
ss
adc
test
das
stos
out
mov
dec
sbb
add
cmp
xchg
nop
pop
sub
(bad)
fmulp
add
and
xor
dec
arpl
inc
pusha
pushf
mov
mov
lea
jge
push
pushf
push
lea
jmp
in
int
jg
clc
mov
popf
(bad)
mov
push
or
adc
sahf
scas
pop
pop
mov
pusha
cli
push
or
test
imul
out
test
jno
or
adc
jl
mov
inc
sbb
pop
sub
hlt
aaa
(bad)
fs
xchg
push
mov
pop
stc
jmp
mov
jmp
dec
int3
aad
xor
out
inc
(bad)
test
dec
ins
data16
inc
mov
leave
pusha
mov
mov
ins
push
aaa
inc
fidivr
in
jno
push
push
std
dec
add
push
jbe
loope
fst
jo
jmp
jg
or
mov
add
xor
(bad)
les
outs
mov
add
(bad)
push
push
(bad)
jb
jmp
pop
push
inc
push
stc
or
sub
call
retf
push
(bad)
out
loope
inc
fnsave
or
call
sub
or
or
out
jmp
dec
dec
push
shl
or
or
loop
mov
cmp
imul
outs
xchg
or
jns
xchg
inc
lods
lds
jns
fidiv
(bad)
adc
es
daa
test
fcomp
adc
jne
loop
add
push
sub
fldcw
fst
adc
dec
add
and
jae
call
test
push
addr16
stc
sbb
in
push
ret
mov
aam
mov
sbb
cmp
xchg
sbb
push
mov
jmp
cmp
xchg
cmps
fcmovne
push
sbb
dec
sbb
mov
out
into
xchg
and
pop
cmp
ret
fidiv
imul
push
fs
cmp
imul
push
loop
leave
ret
aad
push
sahf
ja
pop
adc
cdq
pop
addr16
loop
jbe
retf
(bad)
test
test
pop
js
inc
cmps
sbb
in
repz
add
inc
xchg
add
xchg
pop
jnp
sub
mov
mov
push
imul
mov
push
aad
loope
mov
(bad)
lods
mov
jmp
sub
fild
mov
and
add
rol
test
psrlq
xor
mov
hlt
cli
jl
enter
inc
cmp
ds
push
mov
(bad)
movs
es
push
sub
inc
imul
nop
scas
cli
dec
jb
xor
dec
mov
les
jmp
das
add
ds
daa
stos
mov
(bad)
push
test
sub
leave
mov
push
std
(bad)
sub
add
xchg
outs
imul
cs
mov
je
jb
cs
add
es
sbb
push
cwde
xchg
out
cmps
test
jecxz
cmps
cdq
pusha
inc
and
lea
leave
xor
sub
pusha
fild
xchg
test
test
sbb
out
push
aas
sub
xchg
movs
sub
addr16
ficomp
xchg
outs
int
xor
xor
outs
cmp
lods
je
jae
stos
std
int3
push
jmp
dec
ja
and
and
std
cli
inc
icebp
loope
and
pop
clc
dec
mov
xor
mov
ss
jns
mov
test
mov
xchg
pop
inc
popf
adc
retf
stos
out
mov
cmc
je
lock
xlat
mov
mov
jo
sbb
push
mov
mov
xor
jns
out
rcl
call
(bad)
xchg
cmp
daa
mov
ins
lock
sbb
jl
or
push
jecxz
fwait
imul
fisubr
push
fisubr
cmc
xchg
dec
ror
sub
push
xor
mul
xchg
rcr
or
xor
jnp
cmp
cmp
clc
inc
or
test
je
leave
mov
push
scas
inc
sub
and
hlt
inc
xchg
adc
aas
pop
mov
test
push
sub
add
jbe
push
scas
call
jp
adc
sub
cmps
sbb
ins
and
xor
pop
cmc
loope
pop
cmp
xor
adc
imul
jp
jnp
xor
add
ds
loope
fst
sbb
sub
(bad)
leave
cmp
sbb
out
adc
mov
movs
data16
push
xlat
stos
repz
dec
mov
add
cmps
mov
mov
mov
pushf
mov
pushf
lea
jmp
push
stos
icebp
ficom
jo
cdq
or
mov
clc
jne
fmul
das
test
lahf
in
cs
arpl
loop
add
das
jmp
mov
jmp
lock
cs
test
adc
fcmovbe
cmp
and
fldcw
cmps
and
and
mov
pusha
lea
jmp
jmp
mov
push
pushf
push
lea
jmp
mov
pushf
mov
pushf
pusha
pushf
mov
lea
jmp
call
jmp
mov
pusha
mov
pushf
pushf
mov
push
mov
lea
jmp
sub
mov
mov
mov
dec
imul
test
imul
xchg
and
test
bound
jecxz
hlt
and
inc
jnp
dec
sub
jbe
clc
stos
xchg
mov
jne
fcomp
(bad)
and
xor
xor
out
ficom
cmp
cmp
cld
mov
fild
inc
or
adc
jne
cdq
mov
ss
pusha
pop
push
sub
cli
dec
inc
call
inc
mov
jecxz
jne
add
add
inc
inc
cmp
lock
addr16
jp
sub
mov
test
add
sub
cmp
push
(bad)
jno
sbb
mov
lds
xchg
cmp
loope
mov
(bad)
sbb
lds
stos
es
in
fwait
ret
cli
push
repz
xor
cmp
sbb
add
mov
aad
add
inc
ja
adc
mov
scas
imul
movs
and
mov
repnz
cmp
(bad)
(bad)
out
adc
jge
in
sbb
in
push
sahf
out
leave
dec
pusha
in
cdq
sbb
push
repnz
stos
scas
and
int
ja
and
push
jns
mov
jl
or
sbb
(bad)
aam
test
adc
mov
dec
es
add
push
pop
push
hlt
inc
inc
or
push
in
mov
and
ds
in
mov
aas
call
add
clc
retf
xchg
xchg
xchg
addr16
pop
shr
fiadd
shl
cmps
adc
jmp
lea
sbb
inc
mov
mov
add
daa
test
stos
add
adc
sar
dec
fimul
clc
inc
jbe
pop
popa
mov
(bad)
push
imul
call
xchg
or
int3
popa
lods
js
sti
enter
dec
push
sti
fnstenv
pop
sar
out
push
out
cmps
sub
ret
int
(bad)
push
mov
pushf
lea
jmp
add
add
loope
or
add
lods
push
add
add
add
add
add
bound
je
add
outs
pop
add
mov
add
and
add
add
add
add
push
add
xchg
push
(bad)
int3
es
push
pop
stc
sbb
das
sub
addr16
dec
mov
push
jge
mov
mov
or
in
hlt
xchg
mov
test
jne
push
scas
sbb
inc
jge
fbstp
and
int
test
cwde
xchg
xchg
jmp
mov
pop
sahf
fst
cwde
cmps
pop
in
cld
jmp
mov
dec
mov
or
push
pop
jo
ins
xor
adc
daa
xor
mov
xor
inc
xor
cmc
inc
dec
mov
scas
in
ret
in
das
jae
mov
fistp
loop
mov
mov
bswap
or
adc
gs
and
retf
add
mov
adc
adc
dec
fstp
mov
es
loop
mov
aam
jmp
pop
pop
cmp
push
sar
dec
jecxz
cmp
sahf
jo
lods
(bad)
gs
or
mov
cmp
sar
stc
scas
retf
or
in
push
mov
fdivr
cmc
cwde
add
out
test
jl
add
push
(bad)
push
sub
movs
div
outs
mov
inc
add
and
sub
xor
cmp
cmps
clc
jg
scas
push
dec
jo
adc
xor
fild
mov
jb
retf
aad
adc
mov
out
pandn
arpl
aaa
xchg
mov
ja
icebp
daa
test
mov
popf
in
adc
sbb
jmp
xor
ficom
dec
xchg
and
out
push
push
scas
mov
jp
xchg
cld
and
out
push
jl
not
fcom
fnstcw
jbe
dec
mov
cmp
sahf
xchg
std
out
add
rcl
or
in
hlt
das
jge
dec
lods
mov
or
mov
pop
bound
xor
test
fwait
jecxz
lods
push
outs
mov
sub
xchg
push
call
add
fcmovnb
and
mov
fistp
or
call
inc
mov
mov
cmp
daa
sbb
stos
call
fs
dec
pop
ret
jns
inc
sub
adc
sub
jns
jmp
or
movs
inc
push
and
es
push
mov
sub
mov
imul
gs
movs
stos
inc
repz
ja
push
push
mov
mov
xor
lock
in
push
daa
xchg
outs
loope
repz
(bad)
xchg
ds
(bad)
out
dec
or
dec
(bad)
sbb
push
int3
and
xchg
cdq
in
je
pop
(bad)
pop
dec
test
mov
inc
jg
(bad)
mov
retf
pop
or
inc
(bad)
fimul
frstor
add
and
sbb
fwait
or
sti
(bad)
cli
cdq
mov
lods
ret
out
mov
call
mov
scas
daa
not
inc
push
mov
(bad)
fsub
xor
mov
nop
push
push
std
dec
sbb
xor
push
movs
add
mov
sub
rol
ret
adc
call
jmp
inc
mov
cmps
iret
or
xor
out
jmp
adc
loopne
std
aam
and
adc
in
sahf
aaa
std
xchg
arpl
cmps
inc
sbb
mov
lock
sar
test
movs
xor
pop
idiv
retf
push
add
(bad)
outs
mov
lea
sbb
sti
push
outs
stos
push
and
cwde
dec
aam
sub
cmp
pop
adc
nop
push
fcmove
jnp
test
call
sub
aas
cmps
jnp
scas
jmp
or
daa
cmp
xchg
fistp
inc
and
lea
push
xchg
dec
in
outs
loop
mov
sbb
pop
mov
pusha
push
jg
pop
ins
xor
cs
imul
mov
je
xor
pop
fcomp
ret
aad
push
inc
adc
int3
pop
and
idiv
xor
adc
lahf
lahf
sti
repz
fstp
mov
arpl
std
jge
loopne
mov
cld
inc
into
jo
push
sub
gs
stc
or
(bad)
and
dec
dec
outs
(bad)
xchg
dec
cli
nop
retf
sub
test
repnz
jmp
scas
dec
aaa
xchg
pushf
dec
sbb
loope
or
xor
stos
out
mov
sbb
ret
inc
jmp
bnd
jge
int
mov
cld
adc
jns
ror
adc
push
lds
out
adc
scas
retf
mov
pop
pop
int3
clc
(bad)
pop
xchg
inc
mov
fstp
jne
mov
pop
mov
aad
ror
push
push
push
or
pop
mov
and
sbb
(bad)
jge
adc
dec
sahf
loope
inc
sbb
mov
or
ret
push
je
adc
repz
sub
cld
lock
adc
stos
or
inc
test
iret
mov
movs
mov
lock
outs
or
(bad)
dec
inc
sbb
clc
jp
and
aam
mov
fcmovu
hlt
jmp
mov
xchg
mov
gs
jge
fcmovnbe
jmp
div
sti
xor
cmp
ins
push
loop
add
sub
xor
sbb
std
jno
inc
outs
repnz
test
stc
cmp
jns
cmps
mov
or
or
xchg
(bad)
mov
cmp
aaa
nop
or
jns
rcl
sti
sbb
mov
cmp
pop
and
pop
pusha
fidiv
lea
fidiv
nop
cmp
sub
mov
je
cmp
sbb
cmps
outs
pushf
xor
mov
(bad)
jne
in
cmp
loope
or
in
push
out
cmps
sub
bnd
or
add
test
jg
or
call
mov
sub
ret
push
cmp
mov
dec
or
out
(bad)
fsubrp
jmp
add
push
xchg
mov
retf
or
xchg
and
rcr
movs
mov
mov
das
push
sbb
jmp
ins
ror
xchg
inc
push
jecxz
ins
jmp
xchg
mov
ins
outs
loop
mov
enter
sbb
sub
test
les
push
add
pop
sar
mov
clc
mov
add
mov
lock
add
imul
or
adc
cmp
cdq
jle
jp
cwde
adc
mov
mov
xchg
mov
les
mov
outs
jmp
push
lahf
dec
test
push
and
cmp
stc
pop
mov
arpl
stos
imul
xor
mov
imul
repz
fadd
sub
push
aad
ret
xchg
pop
aam
jbe
adc
or
ja
mov
dec
out
test
inc
cmp
add
lods
es
in
sbb
dec
es
sub
mov
scas
retf
xchg
iret
dec
mov
nop
jmp
mov
les
cmp
je
mov
ins
(bad)
in
inc
inc
(bad)
and
and
sub
es
ds
lods
popf
(bad)
jle
fcomp
inc
fs
jmp
ret
push
dec
daa
mov
xlat
sbb
loop
inc
cmp
aas
xchg
leave
or
aam
add
int3
loopne
dec
pop
pop
fstp
cmps
das
std
fwait
dec
inc
outs
int
lods
ja
arpl
add
fsub
push
push
dec
mov
and
lods
mov
test
cli
and
mov
stc
push
pop
test
mov
push
mov
jo
data16
mov
cmp
js
iret
dec
retf
shl
sub
lock
xchg
cmp
sahf
stos
fild
lock
inc
out
or
daa
push
fstp
cli
add
mov
into
and
cmp
mov
rcr
jl
push
in
mov
adc
jne
and
and
mov
sub
push
or
(bad)
stc
add
inc
mov
jb
xor
lea
xchg
mov
inc
push
test
sub
pop
cmp
or
popf
fstp
(bad)
dec
ret
das
enter
xor
cmps
xchg
push
mov
fisttp
imul
push
neg
cmp
rol
fbld
jnp
jl
cmp
mov
fcomp
pop
mov
pop
xchg
ss
(bad)
iret
sti
movs
shr
mov
xchg
movs
xor
cmp
retf
fs
cmc
and
cmps
sub
out
sub
or
jnp
out
xlat
arpl
xchg
sbb
mov
and
fcos
sti
lahf
jo
in
fnstsw
cs
icebp
pop
inc
xchg
cwde
xchg
enter
fmul
in
jo
ficomp
pop
sub
push
and
rcr
in
add
loop
mov
outs
loopne
sbb
dec
gs
dec
call
rcr
adc
jns
popa
popa
xor
cmps
and
aaa
sbb
mov
loope
mov
dec
sti
int3
adc
and
xor
fmul
out
adc
mov
mov
(bad)
aad
push
ins
pop
mov
dec
loopne
xor
mov
pop
call
inc
inc
daa
daa
cmp
outs
cmp
fnstcw
repnz
mov
fistp
mov
xchg
es
push
pushf
xor
(bad)
mov
ja
xchg
mov
repz
sbb
test
and
mov
ins
mov
jp
(bad)
inc
int3
iret
bound
dec
in
push
fcmovnb
or
jnp
loope
sbb
cdq
cli
repz
xchg
xor
adc
in
pop
jmp
sub
js
cs
movs
fwait
sub
std
mov
sbb
push
mov
and
iret
stos
ds
adc
into
jb
test
xlat
sahf
xor
inc
cmp
or
aas
pop
or
sub
leave
xchg
cmps
jmp
pop
mov
push
lods
mov
add
(bad)
aad
push
mov
mov
arpl
inc
xchg
inc
fcomp
out
xor
fst
xchg
sub
movs
inc
aam
cmp
jne
retf
sub
movs
fadd
fcomp
inc
sbb
imul
les
mov
jmp
push
jg
mov
push
ficomp
(bad)
inc
cmc
sub
sbb
push
enter
sub
pop
cld
stc
mov
adc
mov
inc
sub
fldcw
dec
mov
hlt
outs
mov
pop
and
cmps
ja
mov
pop
cwde
sbb
sbb
loope
rcl
cmp
pop
mov
je
repnz
push
cmps
xor
popf
fsubr
shl
pop
xor
outs
add
push
push
je
jb
jne
add
outs
data16
ins
