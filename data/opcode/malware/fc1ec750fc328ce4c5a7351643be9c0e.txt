push
push
push
call
push
call
mov
test
jne
pop
ret
push
push
mov
push
call
add
mov
lea
push
push
push
push
call
test
je
push
call
add
push
call
add
lea
push
push
mov
push
push
call
test
jne
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
cmp
je
mov
and
cmp
jne
mov
and
je
mov
jmp
mov
test
je
add
cmp
jne
pop
mov
pop
ret
pop
xor
pop
ret
mov
push
push
push
push
call
mov
test
jne
pop
jmp
push
push
push
call
cmp
jne
push
push
call
test
jne
call
push
mov
call
mov
pop
pop
ret
push
xor
call
mov
pop
pop
ret
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
mov
call
add
mov
test
jne
cmp
jne
mov
push
call
add
test
jne
mov
pop
pop
mov
xor
call
add
ret
cmp
je
push
call
add
mov
push
push
call
mov
test
je
mov
mov
mov
mov
nop
test
jne
xor
xor
cmp
jae
mov
mov
mov
movzx
inc
cmp
jb
test
jne
mov
mov
push
push
push
call
add
test
je
push
call
add
mov
test
jne
mov
inc
mov
or
mov
mov
test
je
add
jmp
mov
lea
mov
inc
test
jne
sub
push
lea
push
push
call
add
test
jne
mov
lea
mov
inc
test
jne
sub
cmp
je
mov
lea
lea
mov
inc
test
jne
sub
cmp
jne
mov
push
call
add
mov
test
jne
inc
mov
or
cmp
mov
je
xor
and
mov
mov
jmp
push
call
mov
add
test
je
mov
cmp
je
test
je
call
mov
test
jne
mov
jmp
test
je
push
call
add
mov
neg
sbb
not
and
pop
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
lea
push
push
call
add
push
mov
mov
call
lea
push
mov
mov
call
test
jne
add
ret
push
push
push
push
push
call
push
call
mov
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
push
mov
call
mov
push
push
mov
call
push
mov
lea
push
push
mov
call
mov
add
xor
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
xor
mov
mov
mov
cdq
idiv
push
push
mov
mov
imul
cdq
idiv
mov
mov
mov
mov
mov
mov
imul
mov
mov
lea
push
call
lea
mov
mov
mov
mov
push
mov
push
call
mov
push
push
push
push
call
mov
mov
push
call
lea
push
push
push
push
call
mov
push
mov
call
cmp
jge
lea
mov
push
mov
mov
call
lea
push
push
push
push
call
mov
push
mov
call
cmp
jl
push
push
push
push
call
mov
push
call
mov
push
call
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
xor
push
mov
test
je
lea
mov
inc
test
jne
sub
inc
add
mov
test
jne
push
call
xor
add
xor
cmp
je
mov
mov
lea
lea
mov
mov
inc
inc
test
jne
mov
lea
nop
mov
inc
test
jne
inc
sub
lea
add
cmp
jne
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
lea
lea
mov
inc
test
jne
sub
mov
cmp
jle
mov
mov
push
push
push
call
mov
add
mov
add
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
sub
push
mov
push
mov
push
je
sub
je
sub
jne
push
push
call
cmp
jne
push
call
jmp
movzx
sub
je
sub
je
sub
je
xor
jmp
push
push
call
mov
call
jmp
push
push
call
jmp
push
push
call
jmp
push
call
push
mov
lea
lea
push
push
mov
mov
mov
mov
call
add
lea
push
push
call
mov
push
push
push
push
push
call
mov
push
call
lea
push
push
push
push
push
call
push
call
push
call
add
pop
mov
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
lea
mov
add
test
jne
sub
mov
sar
inc
sub
lea
movzx
mov
add
test
jne
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
mov
call
add
lea
push
lea
push
push
call
test
jne
mov
lea
push
lea
push
push
push
push
push
mov
call
cmp
jne
push
push
push
push
push
call
mov
push
lea
call
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
xor
mov
add
push
mov
call
lea
mov
mov
add
push
mov
call
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
add
mov
mov
add
push
mov
call
lea
xor
mov
mov
add
add
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
push
mov
call
lea
xor
mov
add
add
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
add
mov
mov
add
push
mov
call
lea
xor
mov
add
add
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
add
mov
mov
add
push
mov
call
lea
xor
mov
add
add
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
call
lea
push
mov
call
add
push
xor
push
push
push
mov
add
push
call
push
mov
call
cmp
pop
pop
pop
je
mov
push
lea
push
push
push
push
push
call
mov
push
call
mov
xor
cmp
pop
setne
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
xor
push
test
je
mov
test
jne
push
push
call
push
call
mov
test
je
mov
push
call
push
call
mov
xor
cmp
jle
xor
lea
mov
push
push
call
add
test
je
mov
push
push
call
add
test
je
inc
cmp
jl
jmp
mov
dec
cmp
mov
jge
lea
mov
mov
mov
inc
dec
cmp
jl
dec
mov
push
push
call
add
test
je
mov
pop
xor
pop
test
pop
setne
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
test
je
mov
test
je
push
xor
cmp
jle
mov
push
push
call
add
test
je
mov
push
push
call
add
test
je
inc
cmp
jl
jmp
mov
dec
cmp
mov
jge
lea
mov
mov
mov
inc
dec
cmp
jl
dec
mov
push
push
call
add
pop
test
je
mov
xor
pop
test
pop
setne
pop
ret
pop
pop
pop
mov
mov
jmp
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
mov
je
mov
mov
mov
push
push
push
push
push
push
mov
push
push
push
mov
push
push
push
push
call
test
jne
call
xor
cmp
sete
mov
ret
push
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
mov
push
push
push
push
push
push
push
call
test
jne
ret
push
call
mov
ret
int3
int3
int3
sub
push
mov
call
mov
mov
test
je
push
call
mov
mov
push
push
push
call
mov
test
jne
pop
add
ret
push
push
push
push
push
call
test
jne
call
cmp
je
xor
jmp
mov
mov
push
lea
push
push
mov
call
test
je
mov
jmp
lea
mov
cmp
je
cmp
je
call
sub
cmp
ja
push
call
mov
lea
push
push
call
test
jne
jmp
push
call
xor
pop
call
mov
mov
push
call
push
mov
call
mov
pop
pop
pop
add
ret
int3
sub
mov
xor
mov
mov
push
mov
push
lea
push
push
call
add
push
push
push
push
push
push
lea
push
call
cmp
jne
xor
pop
mov
xor
call
add
ret
test
je
mov
mov
pop
mov
xor
call
add
ret
push
call
mov
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
call
mov
mov
mov
push
push
push
call
push
push
call
mov
push
push
call
add
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
mov
mov
mov
push
push
push
call
mov
test
jne
pop
pop
pop
add
ret
push
lea
push
push
push
call
mov
test
je
lea
push
push
call
test
je
cmp
je
call
sub
cmp
ja
lea
push
push
call
test
jne
push
xor
call
mov
pop
pop
pop
pop
add
ret
push
call
xor
push
call
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
mov
push
push
push
push
call
mov
test
jne
pop
ret
push
push
call
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
call
mov
mov
push
push
call
push
push
call
add
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
test
jne
pop
ret
push
mov
push
mov
push
mov
mov
push
push
push
push
push
call
add
test
jne
call
mov
cmp
je
cmp
jne
push
push
call
add
test
jne
call
mov
cmp
je
cmp
je
jmp
push
call
jmp
xor
push
call
push
call
xor
test
pop
pop
pop
sete
pop
ret
int3
int3
mov
push
push
push
push
push
call
mov
mov
push
push
call
push
push
call
add
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
xor
push
mov
cmp
ja
push
push
push
call
mov
test
je
mov
push
push
lea
push
push
push
push
push
call
test
je
push
lea
push
push
mov
push
push
call
push
call
mov
push
call
test
je
push
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
push
call
push
push
call
push
push
call
add
push
call
movsx
dec
add
xor
test
jle
push
call
add
push
call
movsx
inc
dec
add
cmp
jl
push
call
add
push
call
add
pop
ret
int3
int3
mov
push
push
push
push
call
mov
test
jne
xor
pop
ret
push
push
push
push
call
push
push
mov
call
push
mov
call
mov
push
push
mov
call
mov
add
test
jne
pop
pop
xor
pop
ret
push
push
push
push
call
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
cmp
mov
je
push
lea
push
push
call
add
push
push
lea
push
call
mov
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
cmp
push
mov
mov
jne
pop
xor
pop
mov
xor
call
add
ret
push
lea
push
push
call
xor
add
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
lea
lea
push
mov
mov
mov
call
test
jne
mov
xor
test
sete
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
xor
cmp
push
mov
je
push
push
call
add
lea
push
lea
push
mov
call
lea
push
push
call
add
test
jne
push
lea
push
call
push
lea
push
push
lea
push
jmp
push
push
push
lea
push
call
mov
add
push
mov
nop
lea
push
call
test
jne
call
cmp
jne
push
call
inc
cmp
jb
pop
push
call
mov
add
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
cmp
mov
mov
push
mov
push
mov
push
mov
mov
mov
push
mov
mov
mov
je
cmp
jne
push
lea
push
call
lea
push
push
call
push
lea
push
lea
push
push
mov
call
add
jmp
push
push
lea
push
push
call
mov
push
push
push
call
add
lea
push
push
call
add
test
jne
mov
cmp
jne
call
cmp
je
call
cmp
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
call
cmp
je
mov
test
je
mov
push
push
call
add
push
call
mov
jmp
mov
push
push
call
add
push
call
add
call
mov
push
call
add
cmp
je
cmp
je
cmp
je
cmp
jne
test
je
push
jmp
push
push
jmp
test
je
push
call
add
push
call
mov
add
push
call
add
xor
jmp
push
push
call
add
push
call
add
mov
push
call
add
xor
jmp
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
movzx
mov
mov
push
mov
push
mov
push
mov
push
mov
push
movzx
push
mov
push
mov
push
movzx
push
push
push
call
push
mov
call
add
pop
movzx
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
lea
mov
push
lea
push
mov
mov
mov
call
lea
push
push
call
add
test
jne
push
mov
call
add
push
call
add
cmp
jne
lea
push
push
call
mov
push
lea
push
call
lea
push
call
movsx
mov
mov
push
push
lea
push
call
mov
add
push
call
lea
nop
mov
mov
inc
inc
test
jne
jmp
lea
mov
mov
sub
nop
mov
mov
inc
test
jne
push
push
call
add
push
call
mov
add
cmp
je
push
call
mov
push
mov
mov
push
push
lea
mov
mov
mov
mov
push
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
call
imul
add
push
push
call
cmp
jne
push
push
call
add
push
call
add
push
call
xor
jmp
mov
mov
mov
mov
push
mov
push
mov
push
push
mov
push
push
push
push
lea
push
push
push
call
add
test
jne
jmp
mov
call
cmp
mov
jne
mov
push
push
push
call
add
push
call
push
lea
push
push
call
mov
push
lea
push
push
push
push
call
add
test
jne
call
mov
call
cmp
jne
mov
mov
mov
push
mov
push
mov
push
push
mov
push
push
push
push
lea
push
push
push
call
add
test
je
mov
push
lea
push
push
push
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmp
je
push
push
push
call
add
push
call
mov
push
call
add
mov
push
push
push
push
call
add
xor
jmp
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
lea
mov
inc
test
jne
sub
add
call
mov
mov
mov
sub
mov
mov
mov
inc
test
jne
push
push
call
add
test
je
mov
mov
inc
jmp
mov
mov
lea
push
push
push
push
push
push
call
test
jne
call
mov
mov
push
push
call
add
push
call
push
call
add
jmp
mov
push
call
test
jne
call
mov
push
mov
call
jmp
mov
mov
mov
push
push
push
call
mov
test
je
push
push
call
add
push
call
push
call
add
cmp
je
call
mov
push
call
mov
lea
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
push
call
call
add
push
call
mov
mov
add
xor
add
je
lea
call
cmp
je
mov
inc
cmp
jb
push
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
push
call
push
call
test
jne
xor
add
ret
mov
lea
push
push
push
call
test
je
mov
mov
push
push
push
push
lea
push
mov
mov
push
push
mov
mov
mov
call
mov
test
je
call
test
je
xor
mov
push
call
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
xor
push
mov
push
mov
mov
mov
mov
mov
mov
call
add
push
call
add
lea
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
cmp
je
cmp
je
push
push
call
add
push
call
mov
add
jmp
mov
cmp
je
push
xor
cmp
jbe
mov
cmp
je
mov
push
push
push
lea
push
push
push
push
push
call
cmp
je
lea
push
push
call
add
lea
push
call
add
test
jne
mov
inc
add
cmp
jb
mov
mov
pop
cmp
je
push
call
mov
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
mov
push
push
push
mov
call
mov
add
test
jne
push
push
call
add
push
call
add
call
push
call
jmp
push
lea
push
push
call
add
test
je
mov
lea
push
push
call
add
test
je
lea
push
push
call
add
mov
cmp
je
cmp
je
lea
push
push
call
add
lea
push
call
add
test
jne
xor
push
lea
push
push
call
add
test
jne
push
call
mov
add
pop
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
push
mov
push
push
call
add
test
je
push
push
call
add
mov
test
je
push
push
call
add
push
call
add
test
jne
xor
mov
lea
mov
inc
test
jne
sub
cmp
lea
jne
mov
pop
pop
pop
pop
ret
int3
push
mov
cmp
jne
mov
mov
push
inc
push
push
call
add
pop
ret
push
push
call
add
test
jne
mov
mov
push
push
call
add
pop
ret
push
push
call
add
test
je
mov
mov
push
push
push
call
add
pop
ret
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
mov
xor
xor
mov
push
push
push
push
lea
mov
mov
mov
mov
xor
mov
push
movzx
push
movzx
push
push
lea
push
call
add
mov
lea
push
lea
push
lea
push
push
call
mov
jmp
mov
ret
mov
mov
mov
neg
sbb
and
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
lea
push
mov
lea
push
push
lea
push
mov
call
mov
movzx
mov
movzx
push
push
push
push
call
add
pop
add
ret
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
push
lea
push
push
mov
call
lea
push
lea
push
call
mov
push
call
add
mov
push
push
push
lea
push
call
push
push
call
mov
call
add
push
push
call
call
add
push
push
call
call
add
push
push
call
push
push
call
mov
call
add
push
push
call
call
add
push
push
call
push
push
call
add
mov
call
add
push
push
call
call
add
push
push
call
push
push
call
mov
call
add
push
push
call
call
add
push
push
call
push
push
call
mov
call
add
push
push
call
call
add
push
push
call
add
call
add
push
call
add
call
cmp
jb
push
push
call
add
push
call
add
push
call
test
je
mov
push
push
push
call
add
test
jne
push
call
add
push
call
add
push
call
push
call
mov
add
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
mov
push
mov
push
push
call
test
je
pop
jmp
push
mov
call
cmp
jne
mov
push
call
call
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
add
test
jne
xor
pop
mov
xor
call
add
ret
push
call
push
push
call
push
lea
push
push
call
add
push
push
push
push
push
push
lea
push
call
mov
call
cmp
jne
push
push
call
add
call
push
call
add
push
push
push
push
call
push
call
add
pop
xor
pop
mov
xor
call
add
ret
cmp
mov
mov
je
test
mov
jne
mov
mov
push
push
push
push
call
mov
lea
add
sub
mov
mov
inc
test
jne
mov
jmp
test
mov
jne
mov
mov
push
push
push
push
call
mov
add
mov
mov
push
lea
push
push
lea
push
push
call
test
jne
call
push
push
jmp
push
lea
push
push
lea
push
push
call
test
jne
call
push
push
jmp
cmp
je
call
mov
push
test
je
push
push
jmp
mov
push
push
call
mov
add
cmp
jne
mov
push
test
je
push
push
call
add
jmp
mov
push
push
call
add
jmp
mov
push
push
push
push
mov
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
push
call
push
call
push
call
push
call
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
cmp
mov
mov
jg
mov
mov
push
call
add
pop
add
ret
cmp
push
push
push
mov
mov
jle
mov
mov
add
mov
movsx
sub
je
sub
je
xor
lea
lea
mov
inc
test
jne
sub
test
jle
lea
mov
movsx
push
call
add
test
mov
je
add
lea
lea
mov
inc
test
jne
sub
cmp
jl
cmp
jne
mov
push
call
add
mov
mov
jmp
cmp
jne
cmp
jne
cmp
jne
lea
mov
nop
mov
mov
add
add
test
jne
mov
jmp
cmp
jne
mov
mov
jmp
cmp
mov
je
lea
mov
movsx
push
call
add
sub
je
sub
jne
mov
mov
add
cmp
jne
jmp
sub
jne
cmp
jg
cmp
jne
mov
mov
mov
mov
add
add
test
jne
mov
jmp
cmp
jg
cmp
jne
mov
mov
mov
mov
add
add
test
jne
mov
add
add
add
mov
add
add
add
cmp
mov
jl
cmp
jne
mov
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
test
je
cmp
jne
mov
mov
push
call
add
pop
pop
pop
pop
add
ret
cmp
je
test
jne
mov
mov
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
lea
push
push
call
add
call
cmp
jb
push
call
add
or
pop
mov
xor
call
add
ret
call
lea
lea
mov
mov
inc
inc
test
jne
cmp
push
lea
jne
lea
mov
lea
nop
mov
inc
test
jne
sub
mov
lea
push
push
push
push
call
mov
test
je
mov
mov
push
push
call
add
test
jne
push
call
cmp
je
cmp
jne
push
call
call
add
push
call
add
xor
lea
call
cmp
je
mov
inc
cmp
jb
push
mov
call
add
lea
push
push
mov
call
cmp
je
push
push
call
add
test
je
lea
push
call
add
test
je
mov
push
test
je
mov
push
cmp
jbe
push
push
call
add
jmp
push
call
add
jmp
mov
push
push
call
add
jmp
movzx
mov
lea
push
mov
push
push
push
call
mov
add
test
je
mov
test
je
push
push
jmp
mov
push
push
call
add
cmp
jne
push
call
add
pop
or
pop
mov
xor
call
add
ret
push
call
add
pop
or
pop
mov
xor
call
add
ret
mov
cmp
jbe
cmp
mov
je
test
je
push
push
push
call
add
jmp
mov
push
push
push
call
add
jmp
push
push
push
call
add
jmp
mov
test
je
push
push
jmp
mov
push
push
call
add
mov
pop
pop
xor
xor
call
add
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
call
mov
test
je
cmp
jne
push
call
pop
and
push
call
pop
mov
test
je
push
push
call
pop
pop
mov
call
cmp
jne
push
jmp
push
call
pop
ret
push
push
push
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
push
push
call
and
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
mov
test
jne
inc
push
push
push
call
pop
ret
push
mov
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
push
call
pop
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
mov
push
mov
mov
push
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
test
jne
or
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
cmp
je
mov
and
ret
mov
ret
mov
push
mov
sub
push
xor
push
push
cmp
je
push
lea
call
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
je
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
push
call
add
cmp
je
mov
and
jmp
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
dec
je
cmp
je
cmp
je
sub
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
cmp
ja
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
mov
push
mov
cmp
je
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
xor
cmp
jne
xor
jmp
push
push
push
call
mov
inc
push
call
mov
pop
pop
cmp
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
xor
pop
pop
pop
pop
ret
cmp
jne
repz
jmp
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
lea
push
push
push
call
add
cmp
je
mov
and
jmp
push
mov
movzx
movzx
movzx
inc
test
mov
je
cmp
jne
xor
jmp
push
push
lea
push
push
push
dec
push
push
push
lea
push
call
add
cmp
jne
movzx
jmp
cmp
jne
movzx
mov
imul
movzx
add
inc
movzx
mov
jmp
movzx
lea
test
je
movzx
movzx
jmp
movzx
movzx
movzx
movzx
inc
test
je
cmp
jne
xor
jmp
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
cmp
jne
movzx
jmp
cmp
jne
movzx
mov
imul
movzx
add
movzx
mov
inc
jmp
movzx
lea
test
je
movzx
movzx
jmp
movzx
cmp
jne
test
je
mov
jmp
call
mov
cmp
je
mov
and
mov
jmp
sbb
and
dec
cmp
je
mov
and
jmp
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
pop
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
je
inc
add
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
adc
inc
add
dec
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
je
push
mov
mov
lea
push
push
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
leave
ret
mov
push
mov
lea
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
call
pop
pop
pop
ret
mov
push
mov
lea
push
push
call
pop
pop
pop
ret
mov
push
mov
lea
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
push
lea
call
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
movzx
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
inc
push
inc
call
add
inc
inc
movzx
test
je
cmp
je
movzx
movzx
sub
cmp
je
mov
and
pop
pop
pop
leave
ret
mov
push
mov
push
xor
push
cmp
jne
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
movzx
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
push
push
call
add
pop
pop
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
push
mov
cmp
jne
push
push
call
pop
pop
jmp
movzx
test
je
inc
mov
cmp
je
movzx
movzx
shl
or
cmp
jne
dec
jmp
movzx
cmp
je
inc
movzx
movzx
cmp
jne
movzx
cmp
jne
cmp
je
mov
and
jmp
cmp
je
mov
and
xor
pop
pop
leave
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
xor
lea
mov
call
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
push
mov
cmp
jne
push
push
call
pop
pop
cmp
je
mov
and
jmp
push
mov
movzx
movzx
test
je
inc
mov
cmp
je
movzx
shl
or
cmp
jne
lea
mov
jmp
cmp
jmp
cmp
jne
mov
inc
cmp
jne
pop
cmp
je
mov
and
mov
pop
pop
leave
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
push
push
call
pop
pop
jmp
mov
movzx
inc
movzx
movzx
test
je
mov
mov
cmp
jne
xor
jmp
shl
movzx
or
inc
movzx
movzx
movzx
movzx
inc
test
je
mov
cmp
jne
xor
jmp
shl
movzx
or
movzx
inc
cmp
jne
cmp
jne
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
sbb
and
dec
cmp
je
mov
and
jmp
mov
push
mov
push
push
push
call
add
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
cmp
je
mov
sar
mov
and
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
sar
and
shl
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
lea
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
lea
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
push
call
add
pop
ret
mov
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
push
pop
xor
mov
push
mov
sar
mov
mov
and
shl
mov
cmp
je
cmp
je
test
jne
mov
add
inc
cmp
jl
pop
xor
pop
ret
call
cmp
je
call
push
call
pop
ret
mov
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
add
push
call
pop
pop
ret
mov
push
mov
mov
cmp
jge
add
push
call
mov
or
pop
pop
ret
mov
add
push
call
pop
ret
mov
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
mov
cmp
mov
jge
and
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
push
push
mov
push
xor
or
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jge
or
jmp
mov
cmp
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
test
je
mov
mov
call
ret
push
call
pop
mov
push
call
pop
mov
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
push
push
xor
cmp
je
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
pop
pop
pop
leave
ret
mov
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
mov
mov
je
mov
mov
jmp
mov
test
je
mov
and
je
mov
test
je
jl
mov
cmp
jb
mov
push
push
push
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
cmp
mov
je
xor
mov
div
sub
push
push
push
call
pop
push
call
add
cmp
je
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
movsx
push
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
mov
test
jne
mov
jmp
or
mov
sub
xor
div
jmp
or
mov
jmp
push
push
call
xor
cmp
je
cmp
je
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
call
ret
push
call
pop
mov
push
push
push
push
call
add
mov
mov
call
mov
jmp
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
call
mov
cmp
jne
call
mov
jmp
mov
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
mov
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
push
push
call
add
mov
cmp
je
xor
jmp
call
mov
pop
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
call
call
test
je
push
call
pop
push
call
int3
push
push
call
call
and
push
call
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
int3
mov
push
mov
push
call
call
push
call
test
jne
mov
push
call
push
call
test
jne
call
push
call
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
mov
call
cmp
je
push
call
pop
test
je
call
call
int3
mov
push
mov
push
push
push
mov
xor
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
jmp
push
call
push
push
call
mov
pop
pop
cmp
je
call
push
push
call
mov
or
mov
mov
pop
pop
mov
cmp
jne
lea
push
push
push
push
push
push
call
cmp
jne
call
mov
push
call
pop
cmp
je
push
call
pop
xor
pop
pop
pop
leave
ret
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
mov
test
je
mov
mov
add
pop
ret
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
mov
push
mov
mov
cmp
je
cmp
jne
and
mov
pop
ret
or
pop
ret
mov
push
mov
mov
push
mov
push
test
je
movzx
xor
xor
xor
cmp
je
add
inc
cmp
jb
jmp
imul
test
je
add
jmp
test
je
add
jmp
test
je
add
jmp
add
mov
jmp
movzx
test
je
lea
jmp
test
je
lea
jmp
test
je
lea
jmp
lea
mov
test
je
cmp
jne
cmp
jne
xor
pop
pop
pop
ret
mov
push
mov
mov
sub
push
or
cmp
je
movzx
mov
jmp
cmp
jne
call
mov
cmp
jne
mov
jmp
push
push
lea
push
push
call
mov
push
push
call
mov
jmp
cmp
je
cmp
jne
cmp
je
movzx
test
jne
lea
push
call
pop
test
jne
lea
push
push
lea
push
push
call
test
jne
or
push
push
call
mov
pop
pop
pop
leave
ret
movzx
movzx
mov
jmp
mov
cmp
je
movzx
or
ret
push
call
mov
cmp
je
push
call
pop
cmp
je
mov
pop
ret
or
pop
ret
mov
push
mov
sub
mov
xor
mov
and
cmp
push
push
push
je
xor
inc
jmp
cmp
jne
call
mov
cmp
je
lea
push
push
call
test
je
mov
test
je
jbe
push
xor
pop
div
cmp
jb
imul
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
pop
test
je
mov
add
mov
jmp
xor
test
je
lea
push
push
push
push
call
test
je
mov
test
je
cmp
ja
test
jbe
lea
cmp
jne
cmp
je
cmp
jne
push
call
pop
test
je
mov
dec
add
mov
test
ja
push
call
mov
pop
jmp
xor
lea
pop
pop
pop
mov
xor
call
leave
ret
push
push
call
push
call
pop
and
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
and
call
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
and
call
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
and
call
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
mov
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
test
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
push
call
pop
ret
push
push
call
xor
cmp
jne
push
call
pop
jmp
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
call
push
pop
add
push
push
call
pop
pop
mov
call
add
push
call
pop
mov
lea
push
push
push
call
add
push
call
mov
call
add
push
push
call
add
mov
call
mov
call
ret
call
add
push
push
call
pop
pop
ret
mov
push
mov
lea
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
call
add
pop
ret
mov
push
mov
lea
push
push
push
call
add
pop
ret
mov
push
mov
mov
mov
or
xor
cmp
sete
neg
sbb
and
mov
pop
ret
mov
or
xor
cmp
sete
mov
ret
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
je
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
cmp
setge
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
cmp
je
mov
sar
mov
and
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
sar
and
shl
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
mov
cmp
je
mov
dec
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
cmp
jne
cmp
jne
mov
jmp
mov
inc
mov
cmp
jne
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
jl
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
push
mov
push
call
push
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
push
call
pop
ret
mov
push
mov
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
jmp
mov
cmp
je
mov
xor
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
jmp
mov
cmp
je
mov
xor
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
mov
call
cmp
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
and
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
call
pop
mov
mov
test
je
push
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
push
call
mov
call
mov
call
push
call
mov
push
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
xor
inc
cmp
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
mov
cmp
setne
cmp
je
test
jne
push
call
pop
cmp
je
cmp
je
mov
sar
mov
and
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
sar
and
shl
add
jmp
mov
test
jne
push
call
mov
push
call
pop
pop
mov
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
xor
mov
cmp
sete
dec
call
ret
mov
push
call
pop
ret
mov
push
mov
mov
add
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
mov
movzx
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
je
cmp
movzx
je
movzx
shl
or
cmp
je
mov
and
pop
leave
ret
mov
push
mov
cmp
jne
mov
lea
cmp
ja
add
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
pop
jmp
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
cmp
sbb
neg
pop
ret
mov
push
mov
mov
and
pop
ret
mov
push
mov
push
push
call
pop
pop
test
jne
cmp
je
pop
ret
xor
inc
pop
ret
mov
push
mov
push
call
pop
test
jne
cmp
je
pop
ret
xor
inc
pop
ret
mov
push
mov
push
push
call
pop
pop
test
jne
cmp
je
pop
ret
xor
inc
pop
ret
mov
push
mov
movzx
push
call
pop
test
jne
cmp
je
pop
ret
xor
inc
pop
ret
mov
push
mov
mov
push
mov
push
movzx
lea
inc
cmp
ja
add
movzx
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
pop
ret
mov
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
call
pop
pop
jmp
push
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
pop
pop
jmp
push
push
push
call
add
pop
pop
ret
mov
push
mov
cmp
je
call
push
call
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jbe
xor
cmp
setne
mov
ret
xor
ret
push
push
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jbe
xor
cmp
setne
mov
jmp
and
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
mov
mov
push
push
push
call
add
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
call
jmp
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
mov
push
mov
call
test
jne
push
pop
pop
ret
call
mov
mov
xor
pop
ret
mov
push
mov
push
mov
xor
cmp
jne
push
push
push
push
push
call
add
push
pop
jmp
call
mov
mov
xor
pop
pop
ret
mov
push
mov
call
test
jne
push
pop
pop
ret
call
mov
mov
xor
pop
ret
mov
push
mov
push
mov
xor
cmp
jne
push
push
push
push
push
call
add
push
pop
jmp
call
mov
mov
xor
pop
pop
ret
xor
inc
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
cmp
jne
push
xor
cmp
push
mov
jle
push
mov
add
push
push
push
call
push
push
push
call
add
inc
cmp
jl
pop
push
push
push
call
pop
pop
push
call
and
ret
mov
ret
mov
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
call
pop
ret
push
push
call
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
cmp
jne
xor
ret
mov
sub
neg
sbb
not
and
ret
mov
push
mov
mov
lea
push
cmp
jbe
call
xor
push
push
push
push
push
mov
call
add
push
pop
jmp
xor
cmp
jne
call
jmp
mov
xor
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
jmp
cmp
je
mov
mov
xor
pop
pop
ret
mov
push
mov
push
push
push
call
mov
test
jne
pop
ret
mov
and
and
mov
xor
mov
mov
inc
pop
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
cmp
jle
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
add
dec
and
ret
mov
push
mov
mov
sub
push
xor
cmp
jne
or
jmp
cmp
push
mov
push
mov
mov
jle
mov
cmp
je
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
xor
cmp
pop
lea
mov
mov
mov
rep
jl
cmp
je
mov
add
cmp
lea
jne
cmp
jne
mov
mov
test
je
dec
cmp
jg
inc
jmp
mov
sar
dec
cmp
jle
push
pop
lea
inc
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
and
lea
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
mov
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
inc
mov
mov
cmp
jne
cmp
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
add
add
shl
inc
add
cmp
mov
jl
mov
cmp
jne
mov
cmp
jne
add
inc
mov
cmp
mov
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
mov
push
mov
push
xor
cmp
jne
xor
jmp
mov
cmp
jne
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
mov
xor
inc
jmp
push
mov
cmp
je
cmp
jne
cmp
ja
push
call
pop
test
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
mov
xor
inc
jmp
call
mov
xor
pop
pop
pop
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
mov
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
push
call
pop
push
push
push
call
pop
pop
pop
leave
ret
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
push
call
push
call
push
mov
call
push
mov
call
add
mov
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
call
pop
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
push
call
mov
test
je
xor
mov
inc
cmp
jb
mov
mov
test
je
lea
movzx
movzx
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
push
lea
push
push
push
lea
push
push
push
call
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
mov
xor
sub
mov
lea
add
lea
cmp
ja
or
mov
add
jmp
cmp
ja
or
mov
sub
mov
jmp
mov
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
mov
call
cmp
je
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
and
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
inc
add
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmp
je
lea
mov
test
je
movzx
movzx
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzx
movzx
jmp
mov
mov
or
movzx
inc
cmp
jbe
mov
inc
inc
cmp
jne
mov
inc
add
cmp
mov
jb
mov
mov
mov
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
or
inc
cmp
jbe
inc
inc
cmp
jne
lea
mov
or
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
sub
push
lea
call
mov
cmp
je
cmp
mov
je
mov
and
leave
ret
cmp
je
mov
and
xor
leave
ret
push
push
call
or
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
and
push
push
call
pop
pop
mov
test
jne
mov
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
test
jne
test
jne
push
call
pop
and
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
and
mov
call
ret
cmp
jne
push
call
pop
mov
xor
ret
mov
ret
mov
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
lea
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
lea
mov
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
test
je
test
je
cmp
je
push
push
pop
mov
rep
and
push
call
pop
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
lea
mov
call
mov
mov
call
jmp
push
call
pop
mov
ret
mov
push
mov
push
push
call
mov
test
push
pop
sete
inc
mov
mov
cmp
je
xor
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
or
jmp
and
jmp
or
mov
jmp
or
mov
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
call
mov
test
je
push
call
pop
and
mov
test
je
push
call
test
jne
mov
cmp
je
push
call
pop
mov
call
cmp
je
push
call
pop
mov
push
call
pop
mov
test
je
cmp
jne
cmp
je
push
call
pop
mov
call
mov
mov
mov
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
mov
pop
jmp
push
push
call
call
mov
push
push
call
pop
pop
mov
mov
test
jne
call
mov
xor
jmp
call
call
mov
mov
mov
mov
push
call
pop
and
push
call
pop
mov
call
push
call
pop
mov
push
call
mov
call
mov
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
jmp
xor
ret
mov
push
mov
push
push
mov
xor
cmp
jle
push
lea
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
dec
jne
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
mov
push
xor
push
push
call
mov
mov
add
test
jne
xor
jmp
cmp
jne
lea
cmp
je
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
push
push
mov
call
cmp
jmp
cmp
lea
mov
jne
cmp
jae
cmp
je
push
push
push
push
jmp
cmp
jne
cmp
jae
cmp
je
push
mov
push
push
add
jmp
cmp
jne
cmp
jae
test
je
cmp
jne
push
mov
push
push
sub
push
call
add
test
je
xor
push
push
push
push
push
call
add
cmp
je
test
je
inc
lea
push
push
call
test
pop
pop
jne
or
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
lea
cmp
je
push
push
push
push
push
call
add
lea
cmp
pop
pop
je
push
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
xor
inc
push
mov
call
pop
mov
test
je
push
lea
mov
mov
mov
lea
lea
push
mov
push
push
push
push
push
call
mov
add
mov
mov
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
mov
push
call
pop
pop
test
je
and
inc
mov
add
shl
lea
lea
push
mov
mov
push
push
push
push
push
call
add
cmp
jl
cmp
jne
mov
mov
test
je
push
call
test
jne
push
call
pop
mov
test
je
push
call
test
jne
push
call
pop
mov
and
and
mov
mov
mov
jmp
push
call
mov
mov
xor
pop
cmp
je
push
call
test
jne
push
call
pop
mov
cmp
je
push
call
test
jne
push
call
pop
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
call
add
lea
mov
lea
lea
add
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
cmp
jne
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
je
xor
mov
mov
mov
mov
cmp
je
mov
mov
jmp
push
call
mov
pop
mov
cmp
jae
push
push
call
pop
pop
test
je
push
push
call
pop
pop
test
je
and
lea
push
push
call
pop
pop
test
jne
lea
push
push
push
call
add
test
je
movzx
mov
mov
lea
push
push
push
call
add
cmp
je
mov
cmp
jb
mov
mov
inc
push
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
cmp
je
push
push
push
call
add
cmp
je
push
push
push
call
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
call
push
mov
lea
push
lea
push
push
lea
push
push
add
call
add
test
jne
xor
jmp
mov
shl
lea
push
lea
push
call
pop
pop
test
je
lea
push
call
add
push
mov
call
pop
pop
mov
test
je
mov
mov
mov
lea
add
imul
mov
mov
mov
lea
push
push
mov
lea
push
call
mov
lea
push
mov
mov
mov
add
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
mov
mov
add
mov
movzx
mov
push
lea
push
push
call
add
cmp
jne
mov
and
mov
mov
mov
mov
mov
mov
cmp
je
mov
inc
mov
mov
mov
mov
mov
mov
add
cmp
mov
jl
jmp
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
push
lea
push
push
push
push
push
push
call
add
test
je
xor
mov
and
inc
cmp
jb
push
push
lea
push
call
add
neg
sbb
inc
mov
jmp
and
mov
mov
mov
mov
cmp
jne
mov
mov
mov
imul
push
call
pop
test
je
mov
push
mov
call
mov
pop
mov
mov
mov
mov
jmp
cmp
je
mov
add
shl
lea
push
call
test
jne
push
call
push
call
and
pop
pop
mov
mov
add
shl
mov
mov
mov
mov
pop
xor
pop
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
xor
mov
push
mov
cmp
je
cmp
je
push
call
pop
jmp
shl
mov
jmp
mov
mov
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
push
push
call
mov
pop
pop
test
je
sub
mov
je
cmp
je
mov
mov
jmp
mov
push
push
push
call
add
test
jne
push
call
pop
cmp
je
inc
add
cmp
jle
inc
push
push
call
mov
xor
pop
pop
cmp
jne
cmp
jne
cmp
jg
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
lea
mov
call
pop
test
je
inc
add
cmp
je
inc
cmp
jne
xor
cmp
je
mov
jmp
xor
jmp
push
push
push
push
lea
push
push
call
add
cmp
je
lea
test
je
push
lea
push
call
pop
pop
test
je
push
lea
call
pop
test
jne
and
jmp
inc
inc
add
cmp
jle
xor
cmp
jne
cmp
je
call
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
cmp
push
push
ja
cmp
je
xor
inc
push
push
call
mov
pop
pop
test
jne
call
mov
xor
pop
pop
pop
ret
push
push
call
pop
pop
mov
test
jne
push
call
pop
jmp
push
push
call
pop
pop
mov
test
jne
push
call
push
call
pop
jmp
mov
mov
call
push
mov
mov
call
pop
test
jne
push
call
push
call
push
call
add
jmp
push
mov
push
call
pop
pop
test
je
push
call
push
call
push
call
push
call
add
xor
jmp
mov
mov
mov
mov
mov
jmp
mov
push
mov
pop
jmp
push
push
call
xor
mov
cmp
jbe
call
mov
push
push
push
push
push
call
add
xor
jmp
call
mov
mov
call
or
mov
push
push
call
pop
pop
mov
mov
cmp
je
push
call
pop
mov
mov
mov
call
mov
call
push
mov
mov
call
pop
mov
cmp
je
cmp
je
push
push
call
pop
pop
test
je
mov
push
call
pop
mov
lea
mov
call
push
call
pop
test
jne
test
jne
mov
mov
call
push
mov
add
push
push
call
add
call
and
call
jmp
mov
mov
xor
push
call
pop
ret
mov
push
call
pop
ret
jmp
push
call
push
call
pop
pop
mov
call
mov
call
ret
mov
and
ret
mov
push
mov
push
call
test
jne
pop
jmp
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
call
ret
mov
push
mov
push
push
call
call
pop
ret
mov
ret
mov
push
push
call
mov
test
jne
push
call
pop
mov
push
push
call
mov
pop
ret
mov
push
mov
push
push
push
call
pop
call
pop
ret
mov
cmp
je
push
push
call
pop
call
or
mov
cmp
je
push
call
or
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
mov
xor
inc
mov
test
je
push
push
mov
call
mov
push
push
call
mov
mov
mov
mov
mov
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
push
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
mov
cmp
je
cmp
jne
push
push
mov
call
test
je
push
push
call
call
mov
pop
push
push
push
call
pop
call
push
call
mov
cmp
je
push
push
call
pop
ret
jmp
jmp
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
mov
je
cmp
je
cmp
je
test
jne
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
push
call
test
je
call
push
call
push
mov
call
push
mov
call
push
mov
call
add
mov
call
test
je
push
push
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
mov
add
pop
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
mov
movzx
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
je
cmp
movzx
je
movzx
shl
or
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
cmp
jne
mov
lea
cmp
ja
add
pop
ret
push
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
and
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
push
push
call
push
mov
call
pop
pop
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
push
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
xor
push
push
push
push
push
call
add
ret
mov
push
mov
pop
jmp
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
jmp
dec
cmp
je
inc
test
jne
dec
mov
sub
dec
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
mov
cmp
je
mov
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cdq
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
push
push
mov
push
call
mov
mov
pop
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
push
je
mov
mov
lea
mov
mov
sub
dec
cmp
mov
jle
push
push
push
call
add
mov
jmp
or
mov
or
jmp
mov
cmp
je
cmp
je
mov
and
mov
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
lea
push
push
call
add
mov
cmp
je
or
or
jmp
mov
and
pop
pop
pop
leave
ret
test
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
mov
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
mov
push
mov
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
pop
ret
mov
push
mov
mov
add
mov
mov
pop
ret
mov
push
mov
mov
add
mov
mov
mov
pop
ret
mov
push
mov
mov
add
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
or
jmp
test
jne
push
call
pop
mov
cmp
je
cmp
je
mov
and
mov
sar
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
and
sar
shl
add
jmp
mov
test
jne
xor
cmp
je
mov
mov
mov
mov
mov
test
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movsx
and
xor
jmp
xor
xor
movsx
push
sar
pop
mov
cmp
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
mov
test
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
mov
cmp
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
je
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
mov
pop
mov
test
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
mov
test
je
movsx
jmp
movzx
cdq
jmp
mov
test
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
mov
test
je
mov
mov
mov
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
leave
ret
nop
outs
mov
inc
add
mov
inc
add
inc
add
mov
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
je
push
push
mov
push
mov
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
lea
push
mov
push
mov
push
mov
mov
call
add
pop
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
mov
push
mov
cmp
je
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
mov
cmp
ja
mov
push
lea
push
mov
push
mov
push
mov
call
add
mov
cmp
je
cmp
jl
dec
js
mov
mov
jmp
lea
push
push
call
pop
pop
cmp
je
mov
jmp
xor
cmp
mov
setge
dec
dec
pop
pop
pop
leave
ret
mov
push
mov
push
push
push
push
push
push
call
add
test
jge
or
pop
ret
mov
push
mov
push
push
push
push
push
push
call
add
test
jge
or
pop
ret
mov
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
mov
cmp
je
cmp
ja
call
mov
jmp
push
push
push
push
push
push
call
add
cmp
jge
mov
cmp
jne
call
mov
push
push
push
push
push
call
add
or
pop
pop
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
mov
push
cmp
jne
cmp
jne
cmp
jne
xor
jmp
cmp
je
mov
cmp
ja
call
mov
jmp
call
push
push
push
cmp
jbe
mov
mov
inc
push
push
push
call
add
cmp
jne
call
cmp
jne
call
mov
jmp
mov
push
push
push
mov
call
add
mov
cmp
jne
cmp
jne
call
cmp
jne
call
mov
mov
jmp
cmp
jge
mov
cmp
jne
call
mov
push
push
push
push
push
call
add
or
pop
pop
pop
leave
ret
mov
push
mov
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
push
call
add
test
jge
or
pop
ret
mov
push
mov
push
push
push
push
push
push
call
add
test
jge
or
pop
ret
mov
push
mov
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
xor
cmp
jne
mov
lea
cmp
ja
add
movzx
jmp
push
mov
mov
cmp
pop
jae
lea
push
push
push
call
add
test
movzx
je
mov
mov
movzx
jmp
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
movzx
je
movzx
cmp
je
mov
and
pop
leave
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
push
mov
push
mov
xor
or
repnz
add
neg
sub
mov
std
repnz
add
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
mov
push
mov
push
call
push
call
pop
pop
test
je
call
add
cmp
jne
xor
jmp
call
add
cmp
jne
xor
inc
inc
test
jne
push
push
lea
cmp
mov
jne
push
call
pop
mov
test
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
or
xor
pop
inc
pop
jmp
xor
pop
pop
ret
mov
push
mov
cmp
je
push
mov
test
je
push
call
and
and
and
and
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
mov
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
mov
or
mov
mov
mov
mov
mov
mov
mov
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
mov
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
add
lea
jmp
mov
or
mov
and
and
mov
mov
and
mov
add
mov
add
cmp
jb
inc
cmp
jl
jmp
mov
and
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
inc
inc
inc
add
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
or
jmp
mov
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
or
jmp
cmp
jne
or
push
lea
push
call
pop
pop
test
je
inc
jmp
or
mov
inc
cmp
jl
push
call
xor
jmp
xor
inc
ret
mov
mov
or
call
ret
mov
push
push
mov
mov
test
je
lea
jmp
cmp
je
lea
push
call
mov
add
add
cmp
jb
push
call
and
pop
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
pop
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
cmp
je
mov
sar
mov
and
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
sar
and
shl
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
mov
push
call
add
cmp
jbe
or
mov
pop
pop
ret
mov
push
mov
mov
mov
mov
pop
ret
mov
push
mov
push
push
xor
push
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
push
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
sar
mov
and
shl
pop
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
mov
push
mov
mov
call
mov
xor
mov
mov
push
xor
mov
mov
mov
cmp
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
push
push
mov
mov
sar
lea
mov
and
shl
add
mov
add
sar
mov
mov
cmp
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
xor
cmp
je
test
je
call
mov
mov
xor
mov
cmp
jbe
mov
mov
test
jne
mov
mov
xor
cmp
sete
mov
mov
add
cmp
je
mov
mov
mov
and
push
lea
push
jmp
movsx
push
call
pop
test
je
mov
sub
add
xor
inc
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
mov
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
cmp
jb
jmp
mov
mov
inc
mov
mov
mov
jmp
xor
mov
add
test
je
mov
mov
test
jne
mov
cmp
jbe
jmp
mov
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
mov
cmp
jne
cmp
jbe
jmp
mov
mov
and
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
push
pop
mov
inc
inc
add
add
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
push
pop
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
mov
sub
pop
pop
mov
xor
pop
call
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
xor
push
mov
mov
mov
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
or
mov
jmp
mov
or
xor
inc
inc
mov
push
cmp
je
lea
mov
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
mov
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
shl
push
call
pop
mov
mov
mov
add
cmp
je
push
mov
add
push
call
pop
pop
test
mov
jne
push
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
mov
cmp
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
and
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
and
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
and
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
push
mov
mov
cmp
jne
push
push
call
pop
pop
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
xor
push
push
push
push
push
push
push
call
mov
ret
xor
push
push
push
push
push
push
push
call
mov
ret
mov
push
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
pop
ret
mov
push
mov
push
push
push
push
call
mov
cmp
mov
lea
mov
jne
mov
jmp
mov
cmp
jne
movzx
push
call
pop
test
je
xor
inc
jmp
movzx
inc
push
lea
push
push
call
add
cmp
je
push
call
pop
mov
cmp
jne
or
xor
pop
mov
pop
movzx
pop
leave
ret
push
push
call
push
call
pop
and
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
call
mov
add
mov
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
mov
push
call
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
test
je
test
jne
test
je
or
mov
jmp
or
mov
test
jne
push
call
pop
jmp
mov
mov
push
push
push
call
pop
push
call
add
mov
cmp
je
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
push
lea
call
and
pop
shl
add
pop
jmp
mov
mov
and
cmp
jne
or
cmp
jne
mov
test
je
test
jne
mov
mov
dec
movzx
inc
mov
jmp
neg
sbb
and
add
or
mov
or
pop
pop
pop
ret
mov
push
mov
push
push
push
push
push
call
push
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
pop
mov
push
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
mov
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
push
xor
lea
push
call
add
pop
mov
cmp
jb
pop
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
call
ret
call
mov
test
je
call
jmp
push
push
call
push
call
pop
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
pop
mov
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
push
call
pop
mov
cmp
jne
mov
push
call
mov
mov
jmp
mov
push
call
mov
mov
pop
cmp
je
cmp
je
call
mov
mov
call
cmp
jne
xor
jmp
xor
push
call
pop
ret
cmp
je
push
call
pop
xor
inc
call
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
push
call
pop
ret
call
add
ret
call
add
ret
push
push
call
and
mov
mov
cmp
je
cmp
je
push
pop
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
call
mov
test
je
mov
cmp
jne
push
call
pop
mov
test
je
push
push
push
call
add
push
mov
call
pop
test
je
mov
mov
cmp
je
jmp
mov
add
mov
imul
add
cmp
jae
cmp
je
jmp
push
call
pop
and
cmp
je
cmp
jne
cmp
jne
push
push
call
xor
inc
cmp
jne
mov
jmp
call
mov
call
mov
mov
mov
mov
sub
je
sub
je
sub
je
sub
je
dec
jne
push
call
pop
mov
cmp
je
push
call
mov
jmp
push
call
pop
mov
cmp
je
push
call
mov
jmp
push
call
pop
mov
cmp
je
push
call
mov
jmp
push
call
pop
mov
cmp
je
push
call
mov
pop
mov
call
cmp
jne
mov
mov
jmp
mov
push
call
pop
ret
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
call
mov
xor
push
push
push
push
push
call
add
or
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
push
push
push
call
mov
mov
xor
pop
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jne
push
call
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
push
call
mov
cmp
jne
call
mov
mov
call
push
call
push
push
push
push
push
mov
call
add
call
push
call
pop
jmp
push
call
pop
mov
call
push
push
mov
call
cmp
je
push
call
push
push
call
test
jne
call
mov
call
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
mov
xor
cmp
push
mov
mov
jne
push
push
lea
mov
push
push
mov
push
push
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
push
push
push
call
add
mov
cmp
je
xor
inc
push
push
call
mov
pop
pop
cmp
je
push
push
mov
push
push
push
push
call
mov
add
cmp
je
push
push
call
pop
pop
mov
mov
cmp
jne
cmp
je
push
call
pop
or
mov
pop
pop
xor
pop
call
leave
ret
lea
push
push
push
push
call
add
test
je
push
push
push
push
push
call
add
cmp
je
push
call
pop
xor
jmp
cmp
jne
push
push
mov
push
push
push
push
call
add
test
je
mov
mov
movzx
push
call
pop
test
je
mov
mov
imul
add
sub
inc
inc
cmp
mov
jl
jmp
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
and
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
mov
cmp
sbb
neg
pop
ret
mov
push
mov
push
push
push
call
add
test
jne
cmp
je
pop
ret
xor
inc
pop
ret
mov
push
mov
push
push
call
pop
pop
test
jne
cmp
je
pop
ret
xor
inc
pop
ret
mov
push
mov
push
push
push
call
add
test
jne
cmp
je
pop
ret
xor
inc
pop
ret
mov
push
mov
push
push
call
pop
pop
test
jne
cmp
je
pop
ret
xor
inc
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
cmp
je
cmp
jl
cmp
jg
mov
push
mov
mov
lea
cmp
jle
lea
push
movzx
push
push
call
mov
add
jmp
mov
movzx
movzx
and
test
je
mov
inc
jmp
cmp
jne
or
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
div
movzx
movzx
test
je
movsx
sub
jmp
test
je
mov
sub
cmp
movsx
ja
sub
add
cmp
jae
or
cmp
jb
jne
cmp
jbe
or
cmp
jne
mov
dec
test
jne
cmp
je
mov
and
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
call
test
mov
je
or
jmp
test
push
pop
setne
add
mov
mov
test
je
mov
test
je
neg
cmp
je
mov
and
mov
jmp
mov
test
je
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
push
push
push
cmp
jne
push
jmp
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
cmp
push
push
push
push
jne
push
jmp
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
xor
jmp
cmp
je
cmp
jl
cmp
jg
push
mov
mov
mov
mov
inc
cmp
mov
jle
lea
push
movzx
push
push
call
mov
add
jmp
movzx
mov
movzx
and
cmp
jne
cmp
mov
jne
or
jmp
cmp
jne
mov
inc
mov
mov
push
pop
cmp
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
mov
cdq
push
mov
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
movzx
movzx
test
je
movsx
sub
jmp
test
je
mov
sub
cmp
movsx
ja
sub
lea
cmp
jae
mov
or
cmp
jb
ja
mov
cmp
jb
mov
cmp
jne
cmp
jne
xor
cmp
jb
ja
cmp
jbe
or
cmp
jne
mov
dec
test
jne
xor
cmp
je
mov
mov
mov
mov
jmp
push
push
push
push
call
xor
add
adc
mov
mov
mov
mov
inc
mov
jmp
mov
mov
test
jne
test
jne
and
je
cmp
ja
jb
cmp
ja
test
jne
cmp
jb
ja
cmp
jbe
call
test
mov
je
or
or
jmp
test
je
and
mov
jmp
or
mov
mov
pop
test
je
mov
mov
test
je
mov
mov
neg
adc
neg
mov
mov
cmp
je
mov
and
mov
mov
pop
pop
leave
ret
mov
push
mov
xor
push
push
push
push
cmp
jne
push
jmp
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
cmp
push
push
push
push
jne
push
jmp
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmp
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmp
jne
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
cmp
jne
xor
cmp
mov
sete
inc
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
cmp
je
mov
mov
inc
mov
inc
mov
mov
test
je
cmp
jne
cmp
je
cmp
jne
test
je
mov
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmp
je
cmp
je
mov
add
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
mov
inc
inc
test
jne
mov
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
test
je
call
pop
test
je
mov
mov
inc
mov
inc
inc
mov
mov
inc
mov
jmp
call
pop
test
je
inc
inc
inc
mov
inc
jmp
test
je
mov
inc
mov
inc
mov
jmp
mov
pop
pop
test
je
and
inc
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
neg
shr
and
or
and
dec
neg
shl
and
dec
rol
neg
or
rol
test
jb
shl
add
rol
test
jb
add
dec
inc
not
mov
call
shr
sub
shl
shr
xchg
inc
not
ror
xchg
loop
mov
and
test
jo
mov
or
inc
rol
xor
mov
dec
or
or
dec
sub
mov
dec
test
jo
xor
call
or
not
xor
mov
not
or
mov
call
dec
xor
or
rol
mov
call
add
and
add
xor
not
xor
shr
test
jo
add
and
mov
inc
neg
sub
call
neg
xchg
or
call
inc
call
rol
sub
rol
not
loop
and
test
jo
dec
and
sub
rol
mov
shr
sub
add
mov
mov
neg
inc
shl
shr
inc
neg
test
jb
ror
rol
loop
not
call
mov
ror
shl
xor
xor
mov
add
xor
mov
call
mov
xchg
not
shl
xor
xor
mov
not
dec
neg
add
or
test
jo
xor
call
xor
mov
mov
xor
neg
test
jo
push
add
xor
inc
xor
xor
mov
xor
ror
xor
xor
ror
xor
sub
add
call
rol
call
inc
call
ror
sub
xor
call
mov
push
add
mov
call
inc
ror
call
dec
rol
neg
rol
xor
neg
dec
mov
sub
ror
neg
xor
sub
xor
sub
call
call
push
call
neg
xor
call
xor
add
add
mov
sub
sub
xor
ror
inc
xor
sub
neg
xor
mov
xor
call
call
push
xchg
call
xchg
call
sub
xor
neg
call
neg
ror
call
xor
mov
call
call
mov
call
call
call
xor
call
dec
neg
ror
xor
sub
xor
xor
xor
inc
xor
not
sub
or
neg
dec
add
not
mov
add
not
inc
neg
not
xor
dec
xor
xor
xor
add
rol
neg
inc
call
xor
call
ror
inc
sub
xor
call
sub
dec
rol
sub
or
ror
xor
sub
rol
not
call
dec
inc
call
not
ror
add
rol
ror
inc
call
xor
sub
dec
rol
pop
call
xor
sub
xor
xor
neg
or
call
neg
mov
xor
xor
ror
rol
xor
xor
mov
neg
call
add
neg
xor
xor
call
add
mov
call
neg
xor
mov
xchg
sub
xor
xchg
not
call
not
rol
or
not
not
ror
not
call
not
xchg
xor
xchg
or
xor
neg
call
mov
mov
add
xor
dec
ror
inc
rol
sub
xor
xor
inc
xor
mov
call
add
ror
xchg
sub
not
inc
xor
dec
not
add
xchg
rol
call
xor
dec
xor
add
ror
dec
rol
inc
mov
xor
xchg
mov
xchg
add
call
mov
xor
mov
neg
neg
xor
and
xchg
sub
xchg
rep
xor
sub
neg
xor
dec
xor
sub
call
xor
xor
sub
add
xor
call
sub
xor
inc
xor
neg
xor
jmp
ror
xor
not
xchg
xor
sub
sub
xor
call
sub
sub
call
mov
xor
mov
xor
mov
sub
xor
sub
rol
sub
sub
xor
mov
ror
xor
xor
xor
xor
xor
xor
rol
xor
add
ror
xor
or
mov
xor
call
xor
add
ror
sub
not
dec
sub
xchg
not
or
or
not
xchg
sub
inc
not
rol
sub
xor
pop
or
neg
ror
xchg
dec
xchg
not
sub
xor
mov
xor
add
mov
xor
xor
inc
not
sub
dec
inc
not
dec
xor
xor
mov
sub
xor
xor
not
xchg
inc
xchg
rol
neg
xor
add
xor
mov
mov
xchg
mov
not
mov
xor
add
xor
neg
xchg
mov
add
sub
dec
inc
sub
xchg
neg
sub
xor
sub
not
xchg
xor
not
mov
inc
sub
not
xchg
xor
sub
not
rol
not
sub
sub
xor
sub
xor
xor
add
inc
sub
sub
add
dec
xor
xor
add
not
ror
not
add
xor
xchg
not
dec
mov
sub
xchg
inc
not
sub
ror
mov
sub
xor
mov
xor
dec
ror
mov
sub
add
mov
rol
inc
xor
xor
add
xor
rol
not
dec
xchg
xor
mov
xchg
sub
xor
dec
sub
inc
add
ror
xor
sub
neg
mov
sub
xor
xor
xor
neg
add
xor
rol
sub
dec
inc
xor
add
xchg
sub
add
sub
ror
sub
xor
rol
dec
xchg
ror
mov
ror
dec
inc
rol
xor
rol
xchg
inc
ror
xor
rol
xor
xchg
inc
xor
ror
or
xchg
xor
xor
xor
mov
xor
xor
xor
xchg
rol
dec
xchg
not
xchg
mov
sub
and
add
dec
and
sub
xor
add
or
inc
sub
xor
mov
xchg
sub
xor
neg
xor
xor
add
xor
xor
neg
sub
sub
add
or
xor
xor
mov
sub
add
and
neg
xor
sub
xor
neg
xor
not
ror
xor
dec
not
add
inc
not
xchg
add
neg
dec
add
neg
xor
mov
sub
add
or
xchg
sub
sub
sub
xchg
mov
sub
add
xor
xor
neg
sub
inc
neg
xchg
not
dec
sub
not
inc
xor
rol
xor
xor
xor
sub
xor
dec
ror
add
rol
neg
xor
xor
ror
xor
sub
sub
xor
mov
mov
xor
add
mov
xor
mov
xor
add
or
rol
xor
neg
ror
rol
inc
add
mov
xor
or
add
xchg
inc
xor
xor
sub
xor
sub
mov
sub
sub
rol
not
sub
sub
sub
not
xor
mov
sub
inc
dec
xor
not
add
add
not
ror
add
or
xor
add
xor
dec
xchg
sub
jne
push
sub
cmp
mov
aam
mov
inc
sbb
jg
mov
fsub
cwde
fs
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
dec
mov
(bad)
sti
mov
xor
fdiv
xchg
jns
call
(bad)
rcl
nop
lods
inc
adc
xchg
add
fs
jne
pushf
call
mov
fsub
xor
or
cmp
fadd
xchg
fdivr
pop
add
fadd
sub
hlt
aaa
xchg
fcomp
cmp
fadd
xchg
fdiv
xchg
dec
fcomp
cmp
fcomp
cmp
fadd
xchg
fsub
cmp
xchg
inc
cmp
jg
fs
fsub
fsub
fsub
fsub
call
mov
mov
mov
fsub
clc
mov
jg
jl
jg
xor
jg
in
mov
fcom
fdiv
outs
fcom
fsub
jg
push
jg
push
jg
push
mov
fmul
mov
and
cmps
jg
push
mov
fsub
fcom
fsub
sub
mov
int
mov
nop
fnsave
jg
fs
fsub
fsub
fsub
fsub
fsub
fdiv
(bad)
jg
(bad)
(bad)
jg
fs
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fdiv
jg
fs
fsub
fsub
fsub
fsub
fsub
mov
stos
xchg
mov
fcom
fdivr
fmul
mov
fsub
fsub
mov
jb
sahf
lods
test
dec
jg
mov
jg
mov
fadd
mov
fsub
fsub
cwde
fs
mov
pop
mov
fs
fs
mov
fsub
jg
bound
jg
fs
fsub
fsub
cwde
fs
mov
stos
xchg
ja
dec
jg
(bad)
(bad)
jg
hlt
(bad)
jg
mov
fsub
mov
fsub
fsub
fsub
cwde
fs
mov
adc
fcom
fsub
fcom
fsubr
mov
fsub
fsub
fsub
mov
mov
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
pop
int
ja
mov
outs
fisttp
fcom
fstp
sub
outs
fsubr
sub
fmul
daa
pop
int
ja
sub
jg
xor
inc
xor
ss
aas
scas
cld
sub
fdivr
sub
fcom
xor
sub
jae
sbb
aaa
pop
movs
fsubr
cmp
(bad)
xor
and
daa
out
fcom
or
adc
addr16
push
sub
fdivr
cwde
sbb
add
outs
scas
mov
js
(bad)
(bad)
mov
dec
xor
mov
or
inc
xor
push
ror
add
xor
mov
mov
mov
stc
mov
cmc
xor
fs
into
xor
add
mov
imul
pop
movs
fsubr
xor
test
call
sub
xlat
fsubrp
repnz
push
cwde
es
xor
sub
out
dec
xor
mov
pop
adc
hlt
adc
pop
mov
aaa
xor
pushf
ss
xor
jnp
sbb
mov
stc
or
aas
mov
sbb
stc
adc
(bad)
(bad)
cmc
jg
mov
sti
fcom
fmul
jge
dec
sub
pop
dec
test
cmc
inc
fisttp
pop
mov
dec
repnz
nop
lods
das
add
sub
aam
test
cmc
inc
ins
fcomi
push
or
push
add
inc
dec
fisttp
fcom
les
dec
push
push
fdivp
test
xchg
jg
adc
hlt
push
push
cmp
lds
fcom
cmp
inc
mov
jo
push
cwde
es
lea
ror
pop
dec
inc
cmp
bound
ja
and
pop
(bad)
jo
or
jnp
call
div
(bad)
fcmovnu
mov
jnp
call
div
(bad)
fcmovnu
push
mov
hlt
mov
push
sub
jg
daa
mov
cmc
or
add
or
add
add
cmp
fs
and
cli
sbb
mov
xchg
push
sub
jg
daa
mov
inc
push
out
mov
or
or
(bad)
jg
fs
fsub
jmp
lea
sti
inc
sub
jg
neg
(bad)
ds
xchg
inc
cmp
fcmovnu
xor
das
jnp
call
div
(bad)
fld
ins
mov
jnp
mov
add
mov
xlat
adc
mov
std
xchg
arpl
out
mov
fcomp
jle
leave
mov
cld
add
mov
test
int
outs
pop
sbb
ins
lock
add
add
sub
popa
mov
repnz
mov
jg
adc
repz
add
call
jnp
sub
mov
fisttp
loop
neg
fld
je
dec
xchg
push
sub
pop
fisttp
dec
mov
mov
cwde
mov
xlat
and
add
arpl
jns
xlat
(bad)
cs
inc
mov
ds
xchg
add
mov
push
out
jo
ret
mov
inc
xchg
add
mov
push
out
jo
ret
mov
inc
xchg
add
mov
push
out
hlt
mov
mov
outs
mov
cmc
adc
dec
cs
int3
pop
dec
adc
or
mov
jns
xlat
(bad)
pop
jo
(bad)
cs
inc
mov
ds
xchg
add
mov
push
out
jo
ret
add
inc
xchg
add
mov
push
out
jo
mov
(bad)
xor
add
dec
sub
sub
ror
dec
cs
pop
rol
dec
cs
rol
mov
adc
dec
sbb
pop
and
add
arpl
outs
xlat
(bad)
pop
push
outs
or
sbb
stc
inc
aaa
fcom
pop
imul
lock
stc
inc
aaa
fcom
pop
push
sub
sbb
stc
inc
aaa
pop
les
dec
push
jmp
mov
mov
not
pop
ror
dec
cs
aam
cs
pop
rol
dec
cs
rol
mov
adc
pop
cmp
jo
mov
xchg
jg
mov
mov
xlat
(bad)
ss
inc
mov
mov
xlat
(bad)
ss
inc
mov
mov
xlat
(bad)
ss
inc
mov
jnp
cmc
lahf
and
std
dec
add
(bad)
push
inc
ds
mov
idiv
dec
in
not
jb
mov
in
inc
cmc
cld
hlt
fs
loop
fs
ss
inc
xchg
lods
daa
fcom
je
popa
and
jge
ss
jg
fs
outs
xchg
dec
and
lock
ds
je
push
mov
outs
ds
and
fsub
(bad)
je
popa
and
je
mov
mov
mov
xchg
das
mov
loop
scas
mov
fcom
outs
ds
jbe
push
add
popf
push
fld
int
outs
rol
add
loop
neg
fst
add
and
fidivr
and
stos
pop
and
add
loop
scas
mov
fdivr
mov
outs
ds
int3
push
or
mov
clc
hlt
and
imul
push
dec
cli
pusha
mov
hlt
int3
push
mov
ja
dec
not
icebp
pop
inc
hlt
je
mov
jae
jmp
add
add
pop
dec
not
sub
cli
or
xlat
(bad)
repz
int3
or
inc
jno
inc
dec
hlt
mov
push
(bad)
ja
sbb
jg
dec
mov
es
jg
fs
push
jmp
add
add
pop
shl
sub
cli
or
xlat
(bad)
hlt
dec
int3
or
sub
aam
mov
pop
mov
pop
pop
not
icebp
lds
cmp
mov
repnz
rol
retf
fistp
mov
pop
and
addr16
daa
mov
cli
nop
push
sub
inc
jg
or
sub
mov
add
sar
sbb
mov
arpl
hlt
jg
or
sub
jl
dec
(bad)
addr16
dec
not
icebp
pop
inc
dec
and
mov
mov
push
jmp
fidivr
aam
retf
mov
dec
push
add
cmp
nop
retf
fistp
mov
rcl
push
mov
jo
dec
inc
jae
call
cmc
dec
(bad)
call
hlt
sbb
outs
add
mov
add
rcl
mov
ds
add
jge
inc
jg
or
mov
fidivr
aam
retf
fbld
mov
hlt
mov
push
mov
xor
hlt
aam
lahf
cmp
stc
inc
jae
call
mov
pop
mov
div
les
ds
add
push
icebp
pop
inc
dec
cld
or
xor
stc
add
arpl
cld
repnz
popa
sub
cmp
pop
test
imul
das
mov
fadd
fstp
mov
jge
mov
push
add
or
pop
movs
fsub
(bad)
hlt
dec
int3
or
inc
jno
adc
mov
xchg
push
dec
cli
pusha
mov
hlt
int3
push
mov
ja
dec
not
icebp
pop
inc
hlt
aam
lahf
xor
jge
mov
or
and
(bad)
rcl
push
mov
jae
call
add
add
sub
ja
dec
cs
inc
sub
fdivr
not
icebp
pop
inc
hlt
aam
lahf
xor
jge
mov
or
ds
add
jge
inc
jg
mov
cmp
bound
add
(bad)
outs
add
mov
add
push
fstp
hlt
and
lahf
cmp
stc
inc
arpl
in
jg
or
hlt
xchg
push
not
cli
nop
push
xor
add
fist
mov
hlt
or
xlat
xor
push
jmp
fidivr
aam
retf
fbld
mov
dec
add
mov
jge
inc
jg
or
and
fidivr
aam
retf
mov
jl
dec
(bad)
outs
add
stos
fdivr
add
pop
mov
idiv
stc
add
leave
mov
dec
xchg
ja
dec
sub
fadd
not
fstp
ds
xchg
add
mov
push
out
hlt
mov
dec
neg
(bad)
add
dec
sub
aam
mov
bound
mov
cmp
mov
div
and
outs
pop
int
pop
popa
xor
sbb
stc
neg
(bad)
hlt
arpl
ja
dec
neg
(bad)
add
dec
sub
fadd
add
pusha
dec
xchg
ja
(bad)
ss
inc
mov
pop
mov
dec
inc
jno
mov
addr16
mov
push
xlat
(bad)
push
das
inc
mov
ds
add
leave
mov
dec
xchg
ja
mov
mov
ja
(bad)
ss
inc
mov
bound
mov
leave
mov
push
fcomip
mov
clc
push
cmp
add
outs
js
sbb
stc
add
mov
dec
xchg
ja
adc
mov
xor
mov
fstp
ds
xchg
add
mov
push
out
mov
dec
neg
xor
add
adc
mov
push
test
mul
mov
pop
icebp
adc
pop
int
pop
popa
xor
mov
cld
dec
(bad)
ja
retf
mov
clc
aaa
mov
and
addr16
retf
arpl
ja
retf
arpl
outs
push
retf
bound
ja
or
jb
mov
mov
dec
(bad)
outs
push
cmp
jmp
or
jo
jg
arpl
gs
in
add
xchg
push
or
jp
addr16
pop
add
sub
sub
cmp
sub
adc
xor
dec
or
lock
hlt
je
mov
pop
lea
and
inc
jne
retf
sbb
pop
mov
outs
pop
mov
pop
xor
xchg
add
pop
mov
push
jmp
cmp
xchg
fcomp
out
imul
ds
cs
push
jb
sbb
out
mov
jg
jnp
jg
ja
inc
mov
fsub
iret
pop
xchg
cs
inc
hlt
mov
add
mov
inc
mov
fsub
loopne
outs
mov
sbb
xchg
cmp
xor
cdq
fsub
and
fs
into
pop
xchg
cld
push
pusha
mov
out
cs
pop
call
mov
lods
cwde
cmps
sti
pop
xor
fsub
pop
dec
neg
and
xchg
mov
scas
pusha
scas
pop
mov
mov
pop
ret
dec
sbb
mov
fsub
cld
(bad)
sbb
dec
xchg
add
icebp
adc
jg
adc
jnp
cmp
dec
sbb
mov
pop
and
mov
jle
fbld
std
lods
cwde
cmps
sti
xchg
jno
stc
mov
or
(bad)
push
cld
iret
xor
popf
dec
cld
clc
mov
mov
mov
jnp
jp
and
add
rcr
mov
jp
hlt
addr16
jg
ja
cwde
inc
hlt
ds
xchg
jge
sbb
ja
sub
mul
mov
jae
int3
(bad)
cli
pusha
popf
mov
and
outs
jnp
popf
mov
mov
pusha
cmp
cmps
pop
xchg
cmp
sbb
jno
jmp
jb
mov
sub
add
mov
cld
cmps
sub
mov
daa
mov
sbb
adc
ss
jno
(bad)
fdivr
or
sbb
xor
sbb
dec
inc
call
xchg
adc
xchg
les
xchg
hlt
clc
or
sar
mov
mov
sbb
cmp
jg
pop
mov
inc
jmp
xchg
mov
mul
mov
cmp
cmp
mov
gs
in
cmps
stos
into
pop
xchg
ins
xchg
dec
mov
pop
jp
pop
and
mov
push
ss
scas
lea
(bad)
daa
jecxz
jmp
xchg
add
xchg
fdivr
retf
ds
push
imul
sbb
idiv
cmps
jo
xor
(bad)
cld
cdq
dec
hlt
clc
pop
or
xor
hlt
aam
sub
mov
shl
clc
not
mov
inc
lods
mov
push
pop
xchg
fsubr
jne
mov
pop
inc
into
xlat
jmp
idiv
fmul
inc
scas
mov
adc
ds
cmps
arpl
mov
pop
xor
hlt
dec
push
xchg
mov
sub
ja
xchg
cmp
ret
dec
push
cld
cmp
inc
cmp
mov
mov
daa
pop
sti
sub
call
xor
ds
mov
aas
out
sub
fadd
out
ds
lea
jnp
or
sub
jg
jle
mov
cmps
cld
dec
in
rcl
jns
imul
ss
test
pop
cmp
xor
add
mov
xor
jb
arpl
mov
xor
push
pop
int3
cmp
sbb
cmc
dec
xor
or
(bad)
push
cld
pop
aas
outs
lods
xchg
or
test
pop
or
inc
sbb
sub
dec
imul
push
bound
mov
into
ss
adc
add
and
nop
imul
lods
inc
dec
mov
ret
xchg
sbb
iret
jl
fs
jo
mov
lock
call
xchg
adc
xchg
add
cwde
cli
cmc
popf
jne
xor
inc
pop
xchg
xchg
add
xchg
fadd
retf
adc
jo
mov
movs
es
sub
sub
mov
mov
xchg
cmp
fwait
int
and
add
pop
dec
jb
jmp
cmp
jp
mov
sbb
imul
ds
cmp
xchg
lea
pop
jmp
dec
nop
test
sub
stc
and
call
inc
mov
pop
xchg
fsubr
shr
pop
stc
ds
(bad)
sub
movs
es
inc
add
mov
lods
sub
call
mov
stos
pop
aam
fs
into
pop
xchg
imul
jp
int
outs
lock
add
ins
jnp
inc
neg
(bad)
push
out
mov
aaa
add
bound
jp
mov
mov
scas
mov
(bad)
xor
jg
fs
stc
icebp
jnp
dec
or
dec
cmc
adc
pop
and
xchg
mov
mov
pop
cmovge
bound
mov
fwait
mov
jno
int
add
or
jne
add
hlt
mov
popf
pop
inc
retf
mov
push
lock
gs
ss
mov
nop
sub
pop
mov
hlt
xchg
push
sub
xchg
mov
mov
mov
xchg
fdivr
jo
pop
dec
jb
mov
cmp
iret
pop
fdivp
dec
or
jp
add
not
cmp
jg
sbb
mov
or
call
popf
jmp
int3
push
cld
jo
xchg
cld
adc
pop
or
inc
cmp
xchg
sub
cld
sub
loop
js
xchg
sbb
and
popa
sub
cld
or
mov
stos
call
mov
clc
sub
fadd
add
inc
or
sub
pop
mov
aad
or
ja
popf
fsubr
rcr
imul
inc
aas
in
inc
pop
cmp
dec
inc
sub
cmp
(bad)
stc
inc
sbb
test
scas
mov
or
cmc
inc
iret
mov
add
jns
xor
sbb
out
mov
jbe
push
lea
inc
fcomp
outs
mov
or
inc
mov
jg
add
ins
cmp
xchg
sbb
popf
cli
cs
mov
lods
fadd
add
inc
bound
into
inc
xchg
sub
aam
jno
arpl
inc
and
xchg
cmp
cs
movs
hlt
mov
jg
add
clc
sbb
xor
push
sub
mov
pop
jbe
push
lea
lods
xchg
or
sbb
push
sbb
pop
call
xor
sub
jge
adc
(bad)
adc
and
adc
popa
popf
sbb
jle
add
test
sbb
data16
mov
add
int3
fadd
mov
push
cmp
sbb
movs
arpl
sub
test
sub
dec
jg
pop
mov
shl
dec
cmp
mov
or
sub
into
xor
sbb
inc
inc
sbb
mov
mov
sub
hlt
dec
pop
xchg
test
scas
jo
sub
mov
xlat
sub
add
jle
add
push
mov
mov
mov
mov
shl
call
(bad)
fdivr
pusha
add
xor
or
sbb
stc
mov
clc
cli
sbb
sub
mov
mov
test
repnz
mov
and
call
aas
movs
mov
call
sbb
adc
dec
sub
into
nop
inc
mov
add
pop
pop
mov
nop
add
clc
cli
sbb
mov
and
ds
xor
mov
sub
movs
out
mul
iret
pop
(bad)
dec
inc
or
cli
cmc
pushf
or
mov
dec
pushf
sub
das
mov
jnp
push
out
fs
jb
or
mov
pop
ret
mov
xchg
mov
clc
out
push
aas
adc
idiv
hlt
sbb
and
ss
daa
jb
in
cmc
cld
hlt
je
stos
pop
daa
sub
pop
sbb
inc
hlt
dec
xor
add
retf
aas
retf
or
daa
fsubr
lock
cwde
add
icebp
mov
pop
cli
pop
sbb
xchg
add
add
push
cmp
lods
mov
into
dec
sbb
hlt
dec
push
xchg
mov
fs
inc
or
jnp
push
sbb
push
cld
pop
xor
mov
jle
jnp
popf
call
sub
add
pop
repnz
push
xchg
add
mov
aad
fs
pop
xchg
fdiv
mov
test
and
jo
inc
retf
push
sub
pop
inc
sbb
hlt
pop
push
inc
xchg
cmp
nop
add
mov
dec
inc
sbb
cmps
jge
sbb
mov
call
sahf
mov
out
cmp
jmp
fs
pop
xchg
fdiv
mov
test
and
jo
inc
retf
push
sub
repz
sbb
hlt
pop
push
inc
xchg
cmp
xchg
add
mov
pop
inc
sbb
cmps
jge
sbb
mov
(bad)
add
pop
cli
pusha
sahf
mov
out
cmp
jmp
jp
hlt
jg
outs
into
stos
mov
adc
dec
bound
hlt
dec
adc
add
and
idiv
test
pop
into
(bad)
repnz
sbb
sbb
mov
sub
and
and
mov
cmp
inc
idiv
adc
mov
sub
adc
inc
popf
fcomp
jne
inc
push
cmps
dec
sbb
add
imul
add
xchg
mov
psubw
mov
dec
cmps
dec
add
xor
xor
pushf
aas
and
cmp
imul
das
mov
sbb
and
cwde
cmp
xchg
xchg
and
pop
mov
push
or
mov
adc
jl
pop
shl
inc
xchg
nop
popf
or
mov
mov
dec
cmps
dec
add
xor
xor
pushf
aas
and
mov
imul
das
mov
sbb
and
cwde
push
cli
sbb
dec
or
aas
and
mov
imul
cs
neg
add
sbb
imul
pop
dec
cmps
dec
add
xor
xor
pushf
aas
and
stos
or
test
mov
sbb
sub
cdq
and
cwde
sub
sbb
pop
mov
push
or
mov
adc
jl
pop
shl
scas
add
mov
stc
out
add
dec
add
xor
xor
pushf
aas
and
mov
inc
xchg
add
mov
sbb
pop
sub
cdq
and
cwde
(bad)
stc
sbb
pop
mov
push
or
mov
adc
jl
pop
rcr
out
xchg
push
mov
stc
xor
add
xor
xor
mov
fcom
call
pop
pop
int3
(bad)
bnd
cmps
dec
add
xchg
xchg
and
pop
mov
push
or
mov
adc
jl
pop
rcl
pop
add
mov
stc
dec
add
xor
xor
pushf
aas
and
push
or
test
mov
sbb
and
cwde
es
sbb
pop
mov
push
or
mov
adc
jl
pop
ror
push
add
mov
stc
jmp
add
dec
add
xor
xor
pushf
aas
and
dec
or
test
mov
sbb
and
cwde
cli
clc
sbb
pop
mov
push
or
mov
adc
jl
pop
rol
dec
fs
jl
sbb
inc
lock
pusha
add
hlt
mov
push
clc
aas
jl
pusha
cwde
daa
and
cmp
add
rol
xor
cld
cmc
clc
mov
dec
mov
outs
xlat
or
xor
xchg
and
(bad)
jl
int
addr16
nop
mov
inc
or
jb
sbb
pop
mov
push
or
jo
shl
nop
cmp
cs
jl
xor
sbb
push
jg
popf
fcomp
jne
inc
push
cmps
dec
sbb
sar
mov
or
cmp
xchg
mov
or
nop
pop
test
xchg
add
nop
mov
inc
xor
inc
xchg
and
aas
jl
mov
mov
adc
ja
nop
mov
cs
jl
xor
sbb
push
jg
popf
fcomp
jne
inc
push
cmps
dec
sbb
shl
mov
or
mov
xchg
nop
xchg
mov
neg
pop
jns
xchg
add
xor
inc
sbb
shr
mov
or
mov
xchg
push
pushf
or
mov
fcomp
fs
mov
push
sbb
push
jg
popf
fcomp
jne
inc
push
cmps
dec
sbb
shr
mov
or
stos
not
clc
cdq
or
nop
pop
or
fs
mov
inc
xor
inc
xchg
and
aas
jl
cld
cwde
daa
and
cmp
sub
shl
movs
fs
jl
xor
cmp
cmc
sti
dec
or
aas
and
mov
inc
xchg
add
mov
clc
cdq
cld
aas
imul
pop
and
cli
cmc
pushf
and
dec
add
sbb
inc
lock
add
sti
dec
or
aas
and
cdq
daa
and
cmp
pop
mov
or
nop
mov
das
mov
or
cmp
cdq
or
test
arpl
sub
cld
hlt
push
fs
fcom
xchg
push
cmps
hlt
push
xor
dec
sbb
mov
inc
(bad)
xchg
inc
adc
and
xor
xchg
add
or
or
sub
fcom
fdiv
mov
fcom
mov
pop
out
xchg
push
xchg
add
or
or
sub
fcom
fadd
fadd
std
jnp
sbb
pop
inc
add
cld
xlat
xor
inc
cmp
lods
xchg
or
cli
imul
jnp
in
add
(bad)
jnp
popf
fwait
repnz
ss
scas
lea
movntq
pop
hlt
push
xor
jle
sbb
rcl
cwde
lods
adc
hlt
adc
adc
sbb
call
pop
adc
and
inc
hlt
lds
mov
inc
popf
xor
pop
int
imul
repnz
ja
aas
inc
cmp
dec
sbb
cmps
jmp
enter
popf
fsub
jmp
fadd
add
and
mov
jo
test
jle
mov
pop
lock
add
mov
cmovs
hlt
cmp
sbb
adc
idiv
mov
adc
pop
pop
into
push
mov
cmp
inc
sbb
cmps
pop
cs
movs
adc
fcomp
ss
dec
or
pop
mov
push
xchg
add
sbb
sbb
mov
dec
jg
mov
dec
lock
dec
idiv
cmovs
mov
cmp
dec
sbb
repnz
push
xchg
add
fistp
dec
or
pop
sti
hlt
sbb
out
or
retf
aas
retf
or
dec
pop
sbb
hlt
adc
call
or
in
pop
xor
movd
add
jae
mov
shl
les
mov
xor
mov
cmovs
cli
scas
(bad)
(bad)
jg
mov
(bad)
adc
hlt
adc
call
pop
gs
jg
jge
int
inc
pop
int
dec
mov
sbb
hlt
jno
in
(bad)
jg
mov
stos
clc
aad
add
nop
cli
cs
dec
and
mov
push
dec
sbb
movd
add
sub
add
bound
xchg
push
xchg
add
or
or
or
pop
js
fcom
dec
sbb
movd
add
idiv
(bad)
jg
mov
inc
lock
test
dec
cmps
mov
add
cmp
fisttp
mov
xchg
hlt
adc
call
pop
sti
repnz
push
xchg
add
or
or
mov
adc
xor
movs
ins
mov
sbb
pop
int
addr16
inc
neg
inc
lock
xchg
add
add
stos
fdiv
xor
mov
dec
cwde
add
sub
cli
ret
bound
inc
push
mov
dec
lock
add
inc
xchg
idiv
or
sbb
movd
add
or
jg
mov
addr16
add
xchg
fld
dec
xchg
idiv
jae
clc
mov
pop
xchg
pop
adc
add
mov
or
xor
cld
pop
retf
imul
xchg
jle
dec
sbb
gs
mov
dec
sbb
sbb
sub
dec
xchg
add
sbb
adc
sub
pop
test
mov
int3
inc
sub
dec
or
(bad)
and
lahf
cld
dec
mov
ja
int
mov
pop
mov
scas
pop
mov
jnp
bnd
nop
adc
pop
inc
nop
dec
lock
xchg
add
nop
cmps
jge
add
(bad)
mov
rcl
xor
sbb
jo
cmps
mov
fadd
je
add
jge
mov
mov
lods
das
jle
sbb
mov
dec
not
adc
pop
lea
repnz
push
xor
sbb
cli
pusha
mov
add
hlt
jae
cwde
cmc
mov
add
sub
jo
outs
mov
fadd
je
and
mov
push
dec
sbb
movd
add
dec
mov
push
int
mov
cmp
out
pop
jecxz
xchg
add
cli
cs
pop
and
mov
or
sbb
aas
retf
stos
fsub
mov
int3
pop
dec
neg
xchg
hlt
adc
call
pop
je
and
mov
push
dec
sbb
movd
add
or
mov
cmp
out
pop
(bad)
sbb
cli
cs
mul
mov
fdivr
pop
and
ins
hlt
xchg
push
cmp
add
sub
and
inc
sub
inc
bound
dec
or
hlt
les
hlt
xchg
push
mov
jnp
test
(bad)
pop
movs
fcomp
mov
inc
pop
mov
(bad)
(bad)
adc
hlt
adc
call
push
add
or
retf
sbb
movd
sbb
sub
add
inc
mov
inc
mov
fsub
xchg
push
xchg
add
fild
arpl
dec
idiv
adc
xor
sbb
pop
aad
xchg
add
mov
in
jp
hlt
jg
outs
jp
pop
out
and
aam
das
mov
pop
into
xchg
idiv
adc
pop
push
into
xchg
scas
inc
sahf
add
xchg
pop
xchg
add
inc
sub
lods
pop
movs
fdiv
xor
sub
adc
cli
pusha
mov
lea
aam
(bad)
mov
sti
nop
gs
dec
xor
jmp
hlt
push
xor
dec
sbb
xor
call
dec
or
(bad)
sbb
pop
cli
inc
sahf
add
push
or
pop
pop
sbb
sbb
jmp
cmc
scas
mov
jns
les
hlt
stc
adc
pop
int3
pop
fdivrp
inc
mov
(bad)
cli
and
sbb
stos
dec
jg
mov
add
jecxz
sub
idiv
enter
push
retf
lods
(bad)
sub
fadd
(bad)
repnz
pop
xor
pop
and
mov
outs
pop
dec
not
icebp
xchg
dec
xor
enter
outs
fcomi
sub
xor
sar
push
lahf
cld
clc
mov
mov
sbb
fcomp
cmp
mov
or
adc
mov
cmp
call
and
pop
fcomip
xchg
push
lea
dec
idiv
adc
fdivr
xchg
std
cli
sbb
pop
popa
sub
or
or
sub
fdiv
mov
clc
xchg
(bad)
sti
sbb
jo
div
mov
nop
pusha
pop
cmc
sbb
hlt
dec
xor
cmp
(bad)
mov
jb
dec
sbb
movd
add
cli
mov
pop
mov
mov
cld
xchg
mov
sbb
jo
mov
inc
adc
adc
pop
sub
es
xor
sbb
pop
sub
sahf
adc
sub
cli
pop
mov
push
mov
arpl
fsub
dec
or
repnz
push
xchg
add
or
or
sub
push
(bad)
jne
sbb
cli
pusha
mov
mov
int3
push
(bad)
movlps
hlt
adc
or
push
mov
fld
cmp
out
pop
xor
xchg
add
cli
cs
jbe
xchg
push
(bad)
adc
sub
dec
rcl
xor
sbb
cli
pusha
mov
movs
inc
sbb
hlt
dec
idiv
adc
sub
jb
cmp
(bad)
idiv
sbb
repnz
push
xchg
add
(bad)
pop
mov
dec
idiv
push
dec
sbb
cmp
aaa
xor
adc
pop
int3
pop
push
mov
pop
mov
push
aam
sub
add
inc
sbb
test
fdiv
mov
pop
dec
sbb
mov
inc
(bad)
sbb
xchg
push
xchg
add
fild
mov
mov
pop
dec
sbb
mov
lods
pusha
sar
xchg
repnz
push
xchg
add
fld
aam
add
mov
pop
dec
sbb
hlt
xor
mov
add
sub
jo
es
fmul
repnz
push
popa
add
inc
mov
stos
xchg
fdiv
sub
lahf
clc
aad
add
nop
cmps
jge
add
mov
(bad)
jg
cmp
fistp
jae
add
nop
cli
cs
(bad)
mov
dec
idiv
push
dec
sbb
movd
add
push
(bad)
(bad)
jg
mov
mov
enter
sbb
jo
xchg
mov
fmul
repnz
push
cwde
(bad)
cli
sbb
jo
sahf
mov
fmul
repnz
push
xchg
add
or
or
inc
sub
lock
cli
cs
inc
and
mov
adc
pop
xor
adc
sbb
jo
repnz
fadd
add
add
test
fadd
add
cwde
or
pop
jo
jae
lods
xchg
sub
add
nop
cmps
jge
add
sti
mov
push
int
mov
call
sbb
cli
cs
das
and
mov
adc
sub
cli
mov
xor
sbb
jo
loop
jg
pop
add
mov
test
push
lods
xchg
add
retf
jg
fs
push
mov
mov
dec
or
jmp
mov
mov
sahf
add
mov
popf
pop
repnz
push
(bad)
and
sbb
or
or
cmp
xchg
js
sbb
test
dec
sbb
pminsw
mov
fadd
in
xchg
push
xchg
add
or
or
sub
push
mov
scas
clc
and
cli
cs
outs
and
ret
sti
sub
repnz
push
push
pop
cli
adc
add
(bad)
mov
push
cmp
out
pop
outs
sub
cli
cs
daa
and
mov
scas
pop
inc
(bad)
in
sbb
or
or
sub
xchg
sub
mov
fmul
ja
sbb
adc
dec
sbb
pminsw
mov
fdiv
add
cmc
jae
and
sub
add
nop
cmps
jge
sbb
push
int
inc
pop
inc
addr16
jecxz
xchg
add
cli
cs
loopne
xor
mov
adc
retf
aas
fmul
lea
cmc
jae
and
clc
adc
sub
mov
dec
in
xchg
push
xchg
add
fld
dec
jmp
cld
std
js
xchg
push
xchg
add
cli
cs
movs
repnz
push
mov
dec
sbb
stos
fdivr
retf
shr
daa
sub
dec
or
pop
xor
mov
pop
lock
add
mov
sbb
xor
sbb
repnz
push
xchg
add
fist
dec
idiv
sbb
xor
sbb
repnz
push
xchg
add
mov
xchg
mov
arpl
and
test
imul
mov
fsub
xchg
inc
test
into
sub
(bad)
and
jp
movs
dec
scas
cmp
pop
jg
or
mov
inc
je
or
add
inc
movs
outs
fbld
pop
and
(bad)
mov
mov
out
pop
hlt
sbb
push
out
or
ins
pop
lock
in
dec
loope
jle
mov
mov
jp
hlt
jg
pop
mov
fs
in
das
mov
mov
adc
add
xchg
scas
mov
aaa
jmp
pandn
mov
mov
cmp
ja
mov
sub
in
and
pusha
cli
ja
mov
arpl
sub
or
idiv
jg
fs
bound
mov
jl
(bad)
jg
fs
bound
mov
fldenv
mov
jl
mov
scas
ds
dec
dec
lock
loopne
fdiv
add
ds
dec
jmp
push
add
loopne
xor
scas
push
cmp
jecxz
and
nop
add
mov
mul
push
or
call
xchg
cli
cs
or
lods
push
lahf
xchg
lock
xor
lea
dec
and
cmp
or
cmc
jecxz
and
mov
mov
(bad)
pop
lock
enter
jmp
pop
sub
or
(bad)
jl
lods
push
cld
xchg
lock
imul
pop
sub
imul
mov
cmp
repz
mov
fsubr
and
sbb
xchg
and
cmp
idiv
sbb
(bad)
jg
data16
add
sub
adc
pop
mov
pusha
stc
cs
pop
out
imul
loope
jle
mov
movs
outs
mov
mul
out
xor
add
stos
pop
bnd
push
test
lahf
dec
or
pop
sub
mov
fsub
cmp
dec
add
enter
sahf
add
pusha
pushf
mov
add
mov
cmp
sbb
pop
test
imul
arpl
add
dec
and
xor
shl
fcomp
enter
mov
or
out
imul
jmp
mov
ds
jle
fs
test
sub
lea
inc
sbb
xchg
and
pusha
xor
add
push
xchg
add
mov
(bad)
popa
mov
fdivr
addr16
sbb
push
mov
dec
xchg
mov
lea
out
pop
retf
add
cmp
push
xor
mov
fmul
mov
movs
adc
fsubr
int
jns
dec
or
aam
mov
fsubr
mov
fsubr
and
jne
mov
mov
push
or
xchg
jb
pop
inc
pop
loop
xchg
add
or
fisttp
mov
inc
dec
adc
jle
mov
cld
jo
aas
enter
fdivr
sub
mov
inc
pop
mov
nop
add
stos
mov
or
ret
xchg
repnz
sbb
sbb
loop
and
cmp
mov
mov
hlt
pop
xor
lock
mul
cmp
hlt
hlt
int3
push
adc
and
mov
add
xor
ds
sbb
mov
add
ja
lock
xchg
add
ja
stc
inc
xchg
add
jns
adc
call
sbb
mov
sub
push
dec
sbb
mov
cmp
mov
jle
adc
mov
ins
xor
sbb
mov
xor
mov
xor
mov
sub
add
xor
sbb
sub
sbb
dec
fdiv
xchg
cwde
mov
stc
jns
add
xor
fst
xchg
cwde
pusha
mov
mov
out
add
or
popf
jg
arpl
jns
adc
jg
stc
sub
arpl
mov
xchg
nop
pusha
es
sbb
cli
pusha
sahf
add
xchg
cld
jo
into
cld
jno
sbb
xchg
add
ds
dec
xor
jbe
adc
stc
sbb
scas
cli
inc
sub
clc
push
xchg
add
inc
mov
cmc
shl
jb
mov
xchg
add
mov
in
pop
sbb
sbb
retf
aas
scas
std
sub
fdivr
mov
pop
add
sub
fsub
sbb
shl
mov
inc
sbb
hlt
xchg
push
not
and
mov
and
xor
rcl
pop
cld
jo
hlt
les
hlt
sbb
sub
mov
add
retf
aas
scas
mov
sub
mov
inc
and
movs
arpl
mov
iret
pop
jle
imul
jle
xchg
sub
inc
inc
sbb
(bad)
mov
idiv
popa
lea
inc
sbb
repnz
xor
and
jge
les
xchg
mov
cld
pushf
mov
fsub
fcom
or
add
cwde
test
sub
inc
pop
fs
xchg
add
or
sub
dec
mov
push
int3
mov
cmp
xchg
add
or
xor
aaa
(bad)
int
sbb
lods
pop
mov
test
sbb
mov
cmc
je
pop
mov
pop
retf
setno
jmp
je
adc
cli
pusha
sahf
mov
sbb
call
xchg
dec
(bad)
mov
cmp
push
sub
pop
cs
add
sbb
inc
cmp
dec
cmp
add
mov
mov
xor
sti
stc
fs
dec
or
sub
xchg
add
cli
inc
sahf
add
xor
inc
pop
repnz
(bad)
sbb
jmp
xor
and
pop
jle
imul
xor
or
add
inc
jo
and
jg
cmc
mov
and
xor
sbb
repnz
sub
pop
and
ins
or
sub
jo
jecxz
jg
cmc
add
cmp
pop
lock
add
nop
cmps
jge
add
push
mov
pop
xor
pop
inc
sbb
hlt
adc
call
pop
stc
scas
pop
dec
(bad)
(bad)
hlt
sbb
or
dec
(bad)
sub
xchg
hlt
adc
call
int
pop
call
xor
dec
sbb
pminsw
in
pop
xor
movd
sbb
int
imul
hlt
pop
xor
adc
sub
mov
or
hlt
pop
xor
add
sub
jae
adc
pop
dec
sbb
orps
repnz
mov
and
sub
movs
mov
adc
fdivr
iret
pop
jg
les
cld
dec
inc
pop
ds
pop
xor
xchg
add
push
mov
fsubr
stos
jg
adc
sbb
pop
cli
pusha
sahf
scas
(bad)
mov
stos
mov
fdiv
mov
and
xor
sbb
repnz
push
xchg
add
hlt
sbb
repnz
nop
cli
cs
jg
mov
pop
int
arpl
mov
fld
inc
add
xchg
push
add
mov
xor
lods
sti
sbb
or
or
sub
fdivr
sub
stc
jmp
cs
ret
and
mov
xchg
push
add
mov
push
shl
mov
clc
outs
xchg
arpl
mov
ins
sub
adc
cli
cs
sti
and
sub
stos
fsubr
add
xor
sbb
xchg
adc
pop
mov
jae
inc
fwait
jl
idiv
cmp
sbb
or
or
sub
push
mov
dec
lock
xchg
add
nop
cli
cs
push
and
mov
int3
push
sub
adc
jmp
jg
pop
in
xchg
push
xchg
add
or
or
cmp
idiv
adc
jmp
jg
pop
in
xchg
push
xchg
add
or
or
sub
test
addr16
xor
inc
adc
jmp
jg
pop
mov
pop
pop
add
retf
or
or
sub
test
xor
aad
sub
add
nop
cmps
jge
sbb
pop
xor
add
sub
xchg
pop
mov
jg
int
dec
mov
mov
xchg
hlt
adc
or
mov
pop
mov
sbb
or
pop
mov
and
sub
push
pop
mov
jg
mov
cld
popa
jne
je
sbb
hlt
adc
call
xor
lock
add
xchg
mov
retf
inc
sbb
hlt
in
ret
hlt
les
repnz
push
nop
add
fisttp
dec
fadd
dec
idiv
and
sbb
and
jne
xor
sti
fadd
dec
or
lods
push
dec
jg
pop
mov
cmp
hlt
stos
pop
adc
div
xchg
sbb
clc
sub
add
std
jae
cmc
outs
jnp
lea
dec
or
pop
rcl
sub
add
inc
repnz
sub
pop
mov
cmp
fs
cmps
pop
sbb
and
cmp
adc
scas
jnp
pop
ret
fcom
xchg
push
nop
add
(bad)
test
add
mov
and
fdiv
xchg
push
xchg
cld
retf
cld
push
xchg
push
mov
fadd
fcomp
cmc
jp
mov
adc
jmp
jg
pop
in
xchg
push
xchg
add
or
or
cmp
cmc
mov
sbb
jmp
jg
cmc
cld
jnp
repz
xor
sbb
jmp
jg
pop
stc
repnz
push
xchg
add
(bad)
and
pop
mov
pop
pop
fistp
xchg
add
test
aam
add
inc
mov
div
or
sub
add
nop
cmps
jge
add
imul
in
mov
cmp
(bad)
shr
dec
or
cli
ins
mov
pop
xor
dec
dec
sbb
hlt
adc
call
stos
mov
int3
push
ja
clc
xor
stos
fsub
hlt
sbb
imul
sbb
pminsw
cmp
fadd
stc
repnz
push
nop
add
(bad)
and
fadd
add
mov
lock
clc
cwde
sub
dec
or
cli
xchg
mov
pop
xor
xor
xchg
hlt
adc
call
stos
mov
int3
push
ja
xor
add
cli
cs
popa
aam
mov
retf
mov
inc
iret
pop
out
pop
mov
sbb
cs
jge
fs
dec
idiv
and
retf
aas
retf
xchg
lock
in
adc
sbb
aas
fmul
mov
fs
(bad)
xor
scas
pusha
sbb
sbb
hlt
adc
or
or
sub
push
mov
addr16
dec
or
shl
mov
mov
mov
(bad)
xchg
hlt
adc
or
or
sub
push
mov
pop
lock
jle
dec
or
and
cmp
(bad)
adc
add
nop
cmps
jge
add
popf
(bad)
(bad)
jg
xor
sbb
xchg
hlt
adc
call
cmc
add
div
cld
scas
sub
add
nop
cmps
jge
add
in
(bad)
(bad)
jg
mov
mov
pusha
(bad)
lods
data16
cli
pusha
mov
push
test
inc
pop
sbb
pop
mov
or
pop
lock
push
xchg
add
cli
cs
add
xor
mov
pop
dec
sbb
movd
add
sbb
adc
pop
and
sub
xor
dec
sbb
hlt
adc
call
pop
stc
repnz
push
xchg
add
(bad)
and
pop
mov
mov
mov
pop
cli
cs
jmp
xor
mov
pop
dec
sbb
movd
add
mov
adc
pop
cmps
mov
sub
xor
and
pop
hlt
adc
call
pop
stc
repnz
push
xchg
add
(bad)
and
call
push
xchg
add
cli
cs
dec
and
mov
or
sub
cli
and
adc
pop
or
sub
xor
and
pop
hlt
adc
call
pop
stc
repnz
push
xchg
add
(bad)
and
call
push
xchg
add
cli
cs
xor
mov
xor
mov
or
sub
cli
mov
(bad)
cmp
out
pop
push
mov
inc
sub
lock
add
inc
mov
div
mov
sub
add
nop
cmps
jge
add
mov
test
pop
fsub
lahf
repnz
push
(bad)
mov
xchg
adc
push
in
xchg
push
xchg
add
sbb
cmp
out
pop
and
cli
cs
mov
les
jg
das
cmp
cld
outs
hlt
sbb
push
and
lea
xor
sbb
cli
pusha
popf
mov
int3
push
(bad)
cmp
sbb
hlt
adc
or
or
xor
fdivr
inc
cld
hlt
jae
and
sub
add
nop
cmps
jge
add
inc
mov
pop
xor
lahf
cs
hlt
adc
call
cmc
add
cmc
jae
and
sub
add
popf
dec
xor
mov
and
retf
aas
lods
inc
hlt
sbb
je
dec
sbb
pminsw
mov
fdivr
pop
and
scas
scas
push
ds
xchg
push
xchg
add
cli
cs
sbb
xor
mov
or
sub
call
jne
mov
jne
stos
fdiv
hlt
sbb
jecxz
dec
sbb
hlt
adc
call
push
nop
add
(bad)
and
imul
pop
pop
dec
(bad)
mov
adc
call
cmp
stc
add
nop
cli
cs
add
fwait
cld
sub
sbb
hlt
adc
mov
sub
xor
sbb
repnz
push
nop
add
fisttp
inc
sti
add
sub
cld
cmp
hlt
cld
hlt
movs
gs
pop
xchg
fcom
pop
and
pop
and
in
jbe
nop
add
sbb
cmp
(bad)
sub
adc
fmul
les
mov
push
in
mov
dec
sbb
mov
call
sub
clc
push
fadd
dec
push
inc
mov
fdiv
iret
inc
sbb
leave
cld
(bad)
push
xchg
push
nop
add
fild
push
sti
add
mov
sub
xor
sbb
repnz
push
nop
add
fld
dec
idiv
sub
sbb
mov
push
mov
arpl
pop
xchg
add
nop
cmps
jge
add
and
dec
jg
mov
mov
cld
xchg
repz
xchg
hlt
adc
call
cmc
or
cmc
jae
sbb
mov
push
dec
sbb
pminsw
mov
fadd
stc
repnz
push
xchg
add
or
or
sub
xor
push
dec
sbb
pminsw
mov
fadd
stc
repnz
push
xchg
add
or
or
cmp
sub
add
nop
cmps
jge
add
jo
mov
pop
mov
mov
pusha
(bad)
jg
sbb
hlt
adc
call
cmc
jae
and
sub
add
mov
xor
mov
and
lods
imul
xor
dec
or
cli
mov
test
fsub
mov
pusha
addr16
sbb
pop
and
lea
adc
xor
pusha
popf
push
repnz
pusha
addr16
sbb
aam
dec
sbb
pminsw
mov
fdivr
pop
cld
dec
das
aam
xor
sbb
cli
pusha
sahf
and
mov
es
sbb
aas
scas
push
sub
fdivr
sub
into
sub
pop
dec
sbb
push
sbb
(bad)
jg
mov
imul
xchg
dec
xor
jge
cmp
cld
xor
sbb
hlt
adc
or
or
sub
push
mov
lahf
clc
outs
test
dec
or
repnz
lahf
scas
pop
mov
(bad)
stc
inc
sbb
hlt
adc
or
or
sub
push
mov
pop
lock
xchg
dec
or
mov
mov
cmp
(bad)
dec
or
cli
loopne
mov
pop
mov
mov
int3
pop
iret
adc
hlt
adc
call
cmc
jae
mov
sub
add
nop
cmps
jge
add
or
(bad)
jg
mov
mov
push
xchg
hlt
adc
call
stos
mov
int3
push
mov
or
xchg
add
cli
cs
sbb
mov
out
lea
cmp
out
pop
and
nop
add
cli
cs
and
mov
sub
retf
aas
retf
mov
xor
mov
and
sub
jo
jnp
jg
pop
stc
repnz
push
nop
add
or
or
cmp
xor
hlt
sbb
adc
dec
sbb
rcl
xor
sbb
cli
pusha
popf
mov
int3
push
(bad)
jl
sbb
hlt
adc
or
or
xor
fdiv
xor
add
cmc
jae
or
fld
dec
sub
pop
or
stc
sub
retf
aas
lods
inc
hlt
sbb
test
dec
sbb
pminsw
mov
fdivr
pop
or
or
push
int
dec
push
cmp
out
pop
das
ret
cld
test
cmp
dec
push
inc
mov
div
mov
sub
add
nop
cmps
jge
add
dec
mov
mov
mov
push
repnz
push
(bad)
cmp
xchg
hlt
adc
or
or
sub
push
mov
pop
lock
xchg
dec
or
loop
mov
mov
int3
ja
sbb
cmp
dec
sbb
pminsw
mov
fadd
stc
repnz
push
xchg
add
or
int3
ja
int3
push
pop
pop
jmp
nop
add
test
add
add
inc
mov
div
in
sub
add
nop
cmps
jge
sbb
test
stos
and
mov
hlt
sbb
pop
cs
sbb
movd
sbb
enter
push
nop
add
or
div
js
cmps
cs
sbb
orps
inc
add
mov
xor
xor
sbb
repnz
push
nop
add
fisttp
jmp
add
mov
xor
xor
sbb
hlt
ds
mov
arpl
pop
pop
aam
mov
int
jns
dec
push
cdq
repnz
push
and
cli
pop
jno
mov
call
repnz
push
nop
add
cmp
dec
mov
fcom
fisttp
sbb
pop
xchg
mov
lock
bound
dec
or
mov
jae
add
mov
sub
mov
mov
imul
sti
add
inc
xchg
push
sti
add
nop
cli
cs
jp
mov
iret
mov
inc
dec
sbb
cli
pusha
mov
and
ds
cs
jo
pop
fisttp
dec
dec
xor
mov
(bad)
xchg
cli
pusha
test
xlat
push
jecxz
dec
sbb
mov
and
in
pop
dec
(bad)
adc
adc
or
or
sub
pop
dec
(bad)
mov
sbb
jo
ja
jg
cmc
add
cmp
pop
lock
repnz
nop
cmps
jge
add
mov
mov
mov
inc
(bad)
neg
xchg
hlt
adc
call
pop
sti
scas
pop
ss
in
fs
hlt
adc
or
ss
or
sbb
mov
div
mov
xchg
in
dec
or
dec
pop
mov
mov
inc
(bad)
xor
sbb
mov
cmc
jb
push
int
pop
pop
xor
sbb
jne
dec
sbb
pminsw
stc
hlt
sbb
imul
sbb
orps
inc
add
mov
xor
sub
jg
sbb
mov
cmp
dec
jg
mov
jnp
iret
pop
jle
imul
mul
push
js
int
fisub
aad
test
inc
popf
pop
hlt
mov
dec
cs
fadd
lods
mov
add
repz
mov
mov
push
jmp
xor
sub
mov
outs
lods
aaa
pop
int
jcxz
mov
not
outs
cs
fadd
push
sub
movs
fsubr
int
arpl
push
cdq
mov
pop
pop
and
test
sti
adc
inc
les
mov
pop
int
add
sub
add
clc
dec
aam
push
xor
xor
mov
inc
das
xchg
out
mov
cmp
hlt
(bad)
hlt
xor
cli
adc
xor
dec
jg
ss
pop
xchg
fsub
pusha
arpl
dec
push
inc
jo
data16
fmul
idiv
sub
jg
pop
jge
outs
push
outs
test
adc
push
jl
xchg
pop
cmc
xchg
clc
ins
out
jl
in
ins
push
je
and
test
sbb
aas
fmul
inc
or
aam
retf
and
mov
stos
clc
sub
retf
aas
fmul
or
fstp
fs
ins
xlat
(bad)
hlt
add
je
repnz
sti
mov
(bad)
aas
idiv
cmp
xchg
jge
xchg
fdivr
sub
fdivr
add
(bad)
div
mov
pusha
repnz
xchg
cmps
jge
sbb
pop
adc
or
cmc
mov
push
jne
test
jmp
cld
pop
or
(bad)
fistp
or
pop
mov
pop
pop
mov
mov
clc
retf
dec
inc
pop
cli
pusha
sahf
or
xchg
push
jmp
outs
dec
xchg
ds
mov
arpl
fistp
xchg
mov
cmp
and
adc
lea
div
mov
mov
aas
mov
scas
adc
pop
mov
cmp
mov
fdivr
fld
cmp
lock
in
inc
pop
vmwrite
dec
popa
adc
xchg
je
je
mov
dec
mov
cmp
js
xchg
pusha
ins
cs
push
data16
push
add
pop
and
dec
xor
pop
cli
pusha
sahf
pop
hlt
int3
push
xchg
mov
push
xor
aad
cmps
xor
pop
cli
pusha
sahf
mov
inc
push
adc
jb
cmc
mov
sub
pop
cmp
dec
sbb
cmps
out
jae
jmp
ins
fs
into
pop
(bad)
repnz
push
cwde
(bad)
stc
sbb
hlt
adc
mov
jnp
cmp
mov
movs
pusha
mov
sbb
hlt
adc
sbb
sub
pusha
mov
adc
call
push
retf
ds
mov
shr
mov
inc
pop
mov
ret
dec
or
clc
xchg
dec
or
mov
push
cmp
add
cld
(bad)
outs
add
push
xchg
add
cmp
or
add
or
scas
iret
pop
inc
pop
xor
xchg
add
cmps
jge
sbb
mov
rcl
fld
push
mov
dec
cmp
cmp
movs
pop
cld
cmp
hlt
(bad)
hlt
inc
mov
fsubr
mov
dec
idiv
pop
mov
jne
dec
sbb
mov
pop
pop
sbb
repnz
rol
and
add
jg
les
xchg
push
fsub
jg
les
iret
pop
sub
fdivr
mov
fadd
jle
fs
aas
std
mov
pop
repz
das
dec
sbb
and
dec
sbb
and
push
xor
dec
sbb
aas
scas
jne
idiv
movs
add
mov
mul
push
or
xchg
and
jo
dec
cmp
fcom
in
mov
sbb
pop
and
rol
sub
mov
fsubr
mov
xor
hlt
adc
adc
mov
pushf
mov
out
retf
and
xor
leave
pusha
cmps
fsubr
lock
data16
pop
call
mov
fidiv
int
sbb
push
and
fsub
xor
mov
shl
add
cmp
or
(bad)
jg
pop
or
pushf
scas
hlt
mov
cwde
das
mov
call
adc
hlt
mov
jle
xor
idiv
add
add
and
ret
sbb
movd
add
test
dec
jg
fucomp
scas
and
xor
sbb
hlt
adc
or
clc
sub
jo
jmp
cmp
mov
sbb
hlt
adc
or
inc
cmp
push
mov
add
inc
fucomp
mov
mov
cmp
inc
popf
fmul
dec
fs
mov
sbb
mov
sbb
pop
and
sti
hlt
pop
xor
adc
sub
mov
pop
sti
hlt
pop
xor
push
dec
sbb
movd
fsubr
popf
jmp
mov
popf
mov
pop
pop
dec
(bad)
je
sbb
cld
aas
ins
ret
or
pop
mov
pusha
adc
mov
push
lock
out
add
mov
aaa
dec
sbb
or
and
mov
cmp
mov
fdivr
or
and
fimul
xchg
dec
dec
nop
add
sbb
cmp
pop
mov
pusha
sahf
dec
hlt
dec
or
adc
sbb
retf
and
cld
nop
mov
add
mov
add
add
mov
(bad)
sar
push
sbb
mov
hlt
fs
pop
daa
sub
sub
push
sbb
cli
pusha
mov
repnz
nop
inc
sub
push
sbb
cli
pusha
mov
repnz
mov
rcl
das
(bad)
and
inc
pop
ss
add
add
out
dec
jg
mov
pop
lock
add
mov
cmp
jp
dec
idiv
sub
sub
jo
push
in
xchg
push
xchg
add
or
or
jp
dec
idiv
sub
sub
jo
sbb
jg
pop
in
xchg
push
xchg
add
or
or
sub
sahf
aas
scas
pop
inc
(bad)
mov
sub
in
xchg
push
nop
add
sbb
iret
pop
out
pop
stos
push
nop
add
cli
cs
fldenv
mov
les
jg
das
lea
inc
mov
addr16
dec
sub
repnz
push
(bad)
daa
pop
sbb
hlt
adc
or
mov
imul
inc
add
inc
xchg
jae
and
sub
add
nop
cmps
jge
sbb
fdivr
xchg
jae
sbb
hlt
adc
call
cmp
out
pop
add
add
xchg
xchg
push
nop
add
cli
cs
jmp
xor
xor
sub
rol
adc
xchg
cli
pusha
loop
int3
inc
sbb
mov
mov
sbb
mov
clc
xchg
jb
sbb
hlt
sub
mov
ds
mov
ss
dec
or
mov
xor
xor
retf
aas
lods
adc
push
sbb
adc
adc
fcomp
mov
fild
stc
hlt
push
xor
add
lea
or
add
jb
arpl
sub
cld
(bad)
xor
mov
cwde
jmp
mov
dec
push
inc
xchg
cmc
jns
pop
dec
(bad)
sub
pusha
mov
cld
(bad)
mov
(bad)
sar
push
sbb
mov
xchg
scas
jnp
iret
pop
jg
int3
push
xor
jl
mov
xor
fs
add
add
jle
dec
jg
movs
fcomp
fdiv
or
pop
and
xchg
add
adc
push
cmp
(bad)
fwait
sbb
cmps
jge
sbb
pop
mov
iret
inc
pusha
push
sbb
cli
pusha
sahf
sar
dec
in
sbb
pusha
xor
xchg
cli
pusha
mov
sub
stc
pop
in
add
inc
xchg
pop
je
jo
xchg
mov
cld
sub
mov
int3
add
xor
(bad)
and
pop
cld
(bad)
sar
push
sbb
mov
cmp
hlt
stos
pop
adc
jp
pop
and
pop
and
mov
loope
sub
div
xchg
das
mov
pop
les
mov
pop
cmp
mul
inc
not
and
or
mov
adc
popa
xor
mov
pop
into
pop
mul
ins
not
and
or
into
fcomi
out
cs
pop
cmp
cmp
int3
out
and
xchg
dec
aas
sbb
repnz
shr
mov
dec
sbb
mov
out
jno
jmp
cmc
test
inc
sbb
xchg
sub
xchg
mov
lods
aam
and
outs
xchg
lock
iret
and
xchg
cmp
mov
call
stc
mov
fs
pop
dec
mov
sub
jmp
dec
sbb
cmp
enter
pop
fild
or
mov
fdiv
sub
mov
pop
int
jae
sbb
das
stos
fsubr
jne
int
push
aas
int
pop
and
(bad)
test
push
shl
or
or
jge
pop
jne
popa
sub
mov
loope
inc
jg
inc
mov
cmp
sub
imul
cmp
aad
jne
mov
push
ins
jnp
jae
stos
fcom
sbb
std
cs
sbb
cli
pusha
sahf
adc
mov
cmp
add
retf
aas
scas
cmps
sub
pop
mov
call
sbb
call
sub
jl
cmp
pop
adc
dec
add
jmp
mov
clc
mov
inc
add
fsubr
mov
or
add
div
sub
sub
add
retf
aas
scas
mov
sub
pop
in
pop
dec
push
nop
add
cmp
jmp
mov
aam
arpl
add
jg
cmps
dec
pop
sbb
xchg
add
sbb
fs
jnp
jns
jno
inc
jg
dec
add
inc
pop
adc
(bad)
jg
or
jg
fs
or
xchg
dec
icebp
push
add
dec
mov
jg
fs
shr
jg
inc
mov
fadd
dec
in
mov
and
call
cmp
pop
pop
cld
hlt
mov
hlt
in
cs
pop
sahf
add
loope
sahf
repnz
fs
push
xor
fsub
inc
neg
(bad)
jmp
stos
mov
int
cmp
jne
adc
mov
pop
mov
xor
sub
jg
inc
pop
mov
pop
cs
mov
fs
into
xor
clc
push
dec
sbb
and
nop
shl
inc
aas
push
aam
jg
fs
mov
jg
pop
and
cmp
mov
push
int
pop
call
repz
icebp
or
or
xchg
popf
add
push
sub
add
add
sbb
or
inc
jne
ds
or
daa
and
arpl
and
cmc
cmps
out
jae
mov
fs
stos
pop
adc
arpl
inc
adc
cwde
mov
sub
mov
lods
mov
jle
fs
arpl
pop
sbb
cli
pusha
mov
enter
hlt
cmps
sar
fmul
mov
push
jae
jg
fs
fcom
imul
cwde
jo
rcr
jae
popf
(bad)
cli
sbb
fdiv
mov
sub
mov
mov
pop
sub
inc
pop
mov
mov
jp
cmp
dec
add
inc
pop
fimul
sub
fs
mov
add
cmp
mov
pop
std
(bad)
jg
inc
sub
jg
adc
add
fsub
loope
mov
jg
adc
mov
sahf
mov
add
dec
add
arpl
mov
cmp
jno
jmp
sub
aam
in
stc
les
pop
int3
pop
je
int3
pop
mov
jo
fs
cmp
cmp
fstp
mov
je
rol
mov
add
clc
(bad)
jg
inc
cmc
test
fsub
and
jle
and
retf
or
xor
fwait
fs
cmp
jno
ds
hlt
mov
popf
add
push
mov
outs
mov
pusha
cli
cwde
fs
arpl
sub
hlt
les
xchg
out
inc
test
out
cmc
hlt
int3
push
dec
push
sub
dec
jg
mov
jnp
adc
hlt
int3
push
dec
xchg
and
pop
sub
ss
fsub
arpl
mul
adc
pop
retf
loope
retf
sub
lock
out
ret
adc
lahf
es
xchg
aas
retf
pop
inc
retf
cmp
add
rcr
addr16
inc
inc
jbe
xchg
psrad
retf
out
fs
loop
cmp
mov
ss
jbe
(bad)
xchg
add
ins
pop
dec
cmp
pusha
adc
cmps
sar
cmp
xor
aas
retf
add
sahf
xor
lea
cmps
mov
cmp
clc
jb
mov
mov
out
inc
jbe
mov
retf
gs
pop
cmp
push
mov
das
inc
jbe
pusha
adc
push
dec
(bad)
cmp
pop
test
shl
mov
inc
jg
retf
icebp
aas
retf
push
and
int3
mov
mov
xchg
mov
rcr
mov
fsub
pop
adc
pop
outs
and
jns
stc
adc
pop
loopne
std
jge
mov
leave
mov
or
jo
dec
scas
out
sub
jo
add
push
xchg
pop
repnz
mov
push
fld
fidivr
fld
xchg
fidivr
fld
xchg
fidivr
fld
xchg
fidivr
fld
xchg
fidivr
fld
xchg
aam
pop
mov
pop
cmc
jmp
and
mov
dec
xchg
xchg
add
js
or
dec
jg
jge
out
and
je
and
add
and
(bad)
jnp
adc
sub
pop
xor
rcr
jo
sbb
lock
mov
not
es
test
mov
pop
push
in
xor
mov
sub
dec
ds
add
imul
sub
fadd
inc
adc
and
adc
dec
mov
addr16
sbb
idiv
idiv
inc
add
rcr
xchg
inc
sub
cli
nop
lods
pop
fadd
sub
fdivr
sub
test
outs
jecxz
lock
jle
adc
push
aam
lods
push
pop
cmp
sub
movs
or
out
lock
js
xor
dec
push
fcomip
mov
outs
hlt
jl
aam
mov
pop
cmps
mov
mov
inc
mov
addr16
cmp
pop
add
sub
mov
cmp
stos
not
jg
fs
fmul
add
pop
ret
arpl
fild
into
scas
idiv
cmp
fs
add
mov
pop
pop
int
mov
jecxz
and
ja
mov
xor
mov
adc
mov
adc
call
sbb
mov
inc
sub
in
push
out
mov
pop
cs
lods
sub
pop
enter
rcl
pop
lods
pop
or
pop
mov
idiv
jg
fs
jg
adc
cld
push
or
pop
mov
hlt
xor
xor
fs
int3
cs
fsubr
sti
(bad)
mov
fcom
jl
mov
int
arpl
fld
test
mov
int
mov
sti
nop
sub
mov
int3
sub
pop
inc
add
popa
hlt
sub
bound
add
inc
hlt
inc
add
and
adc
pop
mov
hlt
mov
mov
aaa
repz
ds
outs
lods
push
pop
int
mov
mov
pop
rcr
sub
rcr
mov
sbb
dec
in
push
int
fistp
inc
mov
add
fistp
mov
sub
fsub
mov
jo
mov
int3
inc
mov
pusha
mov
pop
movs
pop
pop
int
mov
add
pop
xchg
jmp
mov
fcomp
hlt
test
imul
fsubr
rcl
add
sbb
sbb
cli
fs
fcomp
pop
popf
fsub
ss
popa
sti
cs
fdivr
sub
bound
mov
xor
popa
fstp
lods
psrld
sub
fcomp
fsubr
cmc
popaw
sub
xor
data16
lods
rcr
fsubr
mov
stos
pop
sbb
fcomp
fcomp
fsub
push
pop
mov
arpl
push
cmp
mov
lods
das
pop
int
imul
movs
cmp
fadd
movs
cmp
pop
pop
int
imul
mov
fsubr
cmc
push
fmul
je
dec
xchg
push
mov
dec
mov
mov
sub
ins
popa
and
je
dec
mov
int
scas
fistp
sub
add
and
rcl
neg
repz
ds
mov
push
aam
fistp
push
push
mov
aam
fisttp
mov
push
rcl
(bad)
rcl
fist
ret
fdivr
movs
pop
pop
int
mov
add
pop
xchg
jmp
mov
fadd
sub
and
icebp
test
dec
rcl
neg
and
lods
cs
int
arpl
fld
popf
fadd
sbb
(bad)
not
and
popa
fcomi
cs
fdivr
inc
mov
pusha
inc
sub
fstp
inc
sub
pop
sbb
(bad)
not
add
inc
stos
fdivr
lods
psrld
(bad)
sbb
fcomp
fcomp
fdivr
sub
push
pop
mov
inc
pop
mov
push
stos
fsubr
pop
int
and
cmp
fsub
mov
xor
cmp
(bad)
ret
fsub
push
fmul
cld
mov
and
pop
adc
jbe
mov
sub
ins
popa
and
ds
outs
lods
das
pop
int
mov
fdiv
add
mov
out
jno
adc
sbb
dec
mov
adc
push
aam
sub
fmul
inc
add
rcr
scas
add
fstp
pop
int
pop
ror
fistp
(bad)
fisttp
enter
ret
fdivr
movs
pop
pop
int
mov
add
pop
xchg
jmp
mov
fsub
das
hlt
test
dec
and
fcom
push
add
sbb
sbb
cli
fs
fsub
cs
mov
addr16
popf
fcom
sbb
(bad)
not
and
popa
fcomi
cs
fcomp
mov
jo
sub
fstp
inc
sub
pop
sbb
(bad)
not
add
data16
lods
psrld
(bad)
sbb
mov
pusha
sub
fdivr
sub
add
(bad)
cmp
add
add
sub
mov
hlt
mov
fist
mov
push
repz
xor
fmul
push
imul
fisttp
int
stos
xlat
call
scas
ds
hlt
lods
push
fdivr
sub
pop
sbb
rcr
outs
neg
xlat
xchg
ds
outs
lods
push
pop
int
stos
pop
mov
push
rcr
sub
rcr
mov
sbb
dec
in
push
int
pop
fistp
inc
mov
add
fist
mov
sub
fcom
mov
cmp
fcom
dec
repz
addr16
mov
jo
jnp
movs
fdiv
pop
mov
mov
fcomp
aam
add
sbb
sbb
cli
fs
fdiv
cs
mov
dec
pop
popf
fdiv
popa
sti
not
and
popa
fcomi
cs
fsubr
mov
int3
inc
sub
fstp
sub
sar
fcomp
adc
(bad)
not
add
data16
lods
psrld
inc
stos
fsubr
mov
jo
mov
fdiv
das
add
fisttp
xchg
fsub
cmp
dec
fistp
push
stos
fdivr
sub
fmul
lods
das
pop
int
pop
and
cmp
fmul
sub
hlt
inc
sub
pop
int
pop
rcr
sub
sub
mov
xchg
inc
hlt
xor
(bad)
push
adc
mov
sub
fdiv
out
ins
popa
and
ds
outs
lods
das
pop
int
inc
fistp
inc
add
mov
neg
repz
inc
jo
push
add
cli
mov
dec
fistp
inc
mov
pop
mov
mov
fdivr
inc
and
rcl
fstp
and
sub
fsubr
pop
pop
int
mov
add
pop
xchg
jmp
mov
fmul
sub
hlt
test
pop
and
fsubr
push
add
sbb
sbb
fcomi
lods
cs
popf
fsubr
pop
cmp
(bad)
popa
sti
not
and
je
dec
xchg
popa
sar
fcomp
hlt
inc
mov
xchg
inc
sub
pop
sbb
(bad)
not
add
inc
stos
fadd
rcr
fist
sbb
fmul
lods
mov
int3
push
mov
pusha
sub
fcomp
push
pop
mov
scas
pop
mov
lods
stos
fsubr
stos
fdivr
lods
das
pop
int
pop
and
cmp
fcom
imul
pop
pop
ret
fadd
inc
add
call
fstp
dec
dec
xchg
push
mov
dec
mov
mov
sub
ins
popa
and
ds
outs
lods
das
pop
int
arpl
sbb
add
and
popa
and
jno
adc
mov
pop
mov
stos
ror
mov
pop
inc
and
rcr
push
mov
fdivr
inc
mov
pop
mov
pop
repz
addr16
mov
jo
jnp
movs
fdivr
pop
mov
mov
fsub
sbb
inc
or
lock
arpl
inc
je
dec
mov
int
scas
fstp
cs
movs
sub
popa
popa
sub
cvtps2pd
fdivr
fcom
dec
rcl
sub
push
fsubr
cmc
popaw
sub
inc
add
dec
fcomi
inc
mov
movs
sub
push
fcomp
fld
pop
mov
lods
stos
fadd
fdiv
stos
fcomp
push
pop
mov
mov
fdiv
xor
mov
fstp
repz
xor
fmul
push
imul
fisttp
adc
(bad)
not
dec
xchg
push
pop
int
inc
pop
sbb
sbb
pop
mov
aaa
repz
ds
outs
lods
push
pop
int
inc
pop
mov
rcr
aam
add
sbb
in
push
sbb
mov
add
aam
fild
push
push
mov
add
fild
dec
inc
mov
pop
mov
pop
mov
dec
repz
addr16
mov
jo
jnp
movs
fsubr
pop
mov
mov
fdiv
sbb
inc
or
lock
arpl
inc
je
dec
mov
int
mov
fdiv
mov
cmp
popa
pop
cmp
not
and
dec
dec
xor
mov
popa
fcomi
sub
fsub
push
fsubr
cmc
popaw
sub
xor
sar
fcom
hlt
inc
mov
cmp
push
pop
int
pop
pop
mov
lods
stos
fdiv
mov
int3
push
stos
fsubr
mov
movs
push
mov
fcom
xor
push
repz
fld
fcomp
mov
pop
int
push
rcr
add
popa
hlt
xor
fmul
dec
jg
inc
hlt
sub
fcomp
mov
cld
xchg
lods
daa
pop
int
push
pop
sbb
rcr
outs
neg
xlat
xchg
ds
outs
sub
fdiv
push
pop
mov
dec
rcr
sub
rcr
mov
bound
cmps
je
dec
mov
int
imul
inc
mov
add
fisttp
mov
sub
fadd
inc
mov
pusha
push
mov
jo
mov
add
push
repz
addr16
mov
jo
jnp
movs
fadd
int
stos
repz
sub
repnz
pop
rcl
add
sbb
sbb
dec
mov
adc
mov
pop
mov
push
pop
sbb
(bad)
cs
fcomp
bound
mov
inc
sti
lods
psrld
sub
fsubr
pop
int
stos
pop
sbb
(bad)
not
add
ds
add
mov
fcomp
pop
int
dec
pop
sbb
das
fdivr
fcom
int3
fld
add
fist
sbb
fadd
fcomp
pop
int
mov
and
cs
pop
movs
adc
div
int
mov
sub
hlt
mov
or
mov
out
inc
hlt
je
jnp
pop
into
mov
mov
push
sub
fcom
add
outs
ret
pop
mov
int
xchg
and
fild
mov
hlt
push
ins
retf
jg
movs
mov
ins
cs
(bad)
inc
pop
nop
adc
pop
pop
mov
stos
repz
addr16
into
pop
hlt
mov
push
sub
fadd
mov
jo
add
adc
dec
pop
mov
(bad)
repz
push
pop
into
dec
hlt
mov
push
sub
fsub
mov
fsubr
pop
sub
or
and
mov
repz
mov
fsubr
pop
int3
adc
mov
mov
mov
arpl
sub
cld
hlt
je
test
push
sub
sti
movs
mov
pop
test
cld
inc
pushf
inc
sub
fdivr
mov
pop
mov
outs
icebp
xor
iret
mov
jb
mov
dec
xchg
xor
aam
inc
mov
cmp
lods
mov
ss
fsub
aad
js
pop
dec
(bad)
jae
sbb
jl
push
cmps
cld
pushf
push
cmp
add
pop
add
add
sub
in
pop
xor
push
dec
sbb
jmp
mov
pusha
push
cmps
mov
or
add
and
xor
lods
mov
dec
inc
fsub
aad
jb
pop
cs
into
pop
pop
cld
sbb
xor
test
and
(bad)
hlt
int
sub
jnp
inc
not
mov
or
popa
pop
mov
push
or
ds
add
push
pop
inc
not
icebp
adc
mov
nop
cmp
add
mov
fdiv
cmc
xlat
call
test
xchg
push
out
ds
add
shl
cs
not
icebp
pop
div
xchg
push
mov
xor
int
push
mov
dec
popa
ja
xor
hlt
aas
dec
(bad)
outs
push
int
dec
pop
inc
not
(bad)
pop
ror
add
mov
add
rol
mov
dec
lahf
xchg
nop
dec
(bad)
addr16
mov
inc
pop
inc
sub
pop
movs
fadd
cmc
outs
popa
xor
pop
or
cmp
sbb
jg
dec
pusha
ja
and
into
and
add
clc
inc
xchg
add
mov
hlt
adc
sbb
mov
cmovb
and
dec
cmc
mov
or
outs
pop
lods
pop
mov
inc
mov
add
or
lods
pop
xchg
call
mov
xchg
push
sub
or
aam
sub
ins
jnp
mov
ds
add
ds
adc
pop
mov
ds
clc
sub
or
aam
(bad)
pop
(bad)
or
inc
dec
cmc
mov
or
popa
push
inc
scas
hlt
mov
xor
mov
mov
xor
fild
cmp
into
mov
neg
dec
(bad)
addr16
into
mov
neg
dec
(bad)
outs
pop
into
mov
neg
xor
mov
push
inc
mov
mov
pop
fcom
test
pop
pop
inc
cmps
into
add
or
fcom
xor
inc
movs
hlt
xchg
inc
sub
fmul
ins
imul
ds
add
ds
adc
pop
mov
ds
clc
sub
fmul
ins
imul
or
inc
mov
mov
push
inc
lahf
hlt
mov
sub
fadd
cmp
ins
sub
mov
outs
fadd
cmp
into
push
jo
dec
lahf
neg
dec
(bad)
addr16
into
push
jo
dec
cmps
neg
dec
(bad)
outs
pop
into
push
jo
dec
scas
neg
xor
mov
push
inc
call
mov
pop
ds
pop
dec
fisttp
into
add
or
ds
pop
stc
fimul
hlt
xchg
xor
mov
sub
addr16
enter
xor
mov
icebp
dec
(bad)
outs
push
enter
xor
mov
(bad)
ja
enter
xor
mov
push
inc
and
mov
(bad)
mov
sub
fld
cmp
pop
sub
add
retf
sbb
mov
pop
into
inc
jo
dec
lahf
ds
add
mov
pop
ret
inc
pop
into
inc
jo
dec
cmps
ds
clc
aaa
mov
pop
ret
inc
pop
into
inc
jo
dec
scas
ds
nop
xor
and
test
add
cmp
dec
jg
into
or
mov
into
or
jecxz
sub
loopne
jnp
clc
arpl
add
jne
push
imul
clc
repz
dec
adc
pop
mov
hlt
mov
add
mov
push
ret
mov
mov
stc
aaa
mov
push
ret
mov
mov
xchg
xor
cs
pop
into
shl
pop
sub
inc
pop
into
mov
cmp
pop
(bad)
pop
pop
into
mov
retf
xchg
mul
push
sub
cwde
pop
or
popa
xor
mov
pop
or
popa
xor
mov
pop
or
popa
xor
mov
out
jae
pop
cs
into
pop
pop
cld
sbb
aaa
adc
dec
jg
int
jnp
ss
push
pcmpgtw
stc
sub
fadd
jnp
push
mov
arpl
cmp
stc
xor
add
jnp
push
mov
pop
mov
pop
xchg
add
fld
mov
fwait
popf
jg
out
sub
adc
cmp
inc
or
int
inc
fdiv
add
pop
fild
mov
fs
aas
aas
int
dec
fdiv
or
dec
or
fs
cld
cmp
int
sahf
out
dec
sbb
or
call
int3
cli
imul
test
fsub
and
jmp
adc
jg
cmc
add
xchg
cmp
mov
jmp
or
jg
fs
bnd
(bad)
jg
fs
fsub
push
cmp
jecxz
and
pop
jmp
jg
stos
call
jg
pop
nop
xchg
add
adc
and
test
stos
fdivr
sub
jmp
cmps
shl
outs
push
cmc
jecxz
and
imul
dec
or
pop
mov
jmp
adc
jg
pop
jl
or
dec
jg
popf
fadd
pop
cmp
pop
or
in
sub
push
mov
imul
or
hlt
dec
adc
lods
clc
imul
retf
adc
push
jnp
cmp
retf
pop
and
cmc
jnp
mov
dec
mov
sub
mov
and
pop
(bad)
hlt
pop
dec
jg
scas
jp
shl
xchg
add
movs
test
mov
mov
mov
mov
adc
dec
sbb
mov
jge
xchg
add
js
aad
mov
mov
mov
lods
mov
jle
fsub
aad
add
repnz
push
mov
pop
jg
nop
add
retf
pop
(bad)
dec
nop
add
out
pop
scas
dec
nop
add
jg
dec
sbb
rcr
mov
add
shl
jp
push
idiv
dec
sbb
sub
jge
add
inc
mov
mov
cmp
pop
xchg
add
sbb
pop
mov
dec
add
pusha
mov
cmp
push
mov
sbb
retf
aas
fmul
cmp
add
cmp
sbb
push
inc
sbb
repnz
mov
sbb
sbb
cmp
or
add
cmp
add
test
dec
push
nop
add
push
bnd
xchg
add
addr16
test
stos
push
sbb
pop
das
sub
cli
pusha
sahf
ds
mov
xchg
hlt
dec
xor
shl
pop
sbb
sub
inc
mov
aas
scas
rep
add
dec
pop
inc
sbb
test
fdivr
jae
cmc
cmp
sbb
pop
stos
dec
nop
add
cmc
sub
sbb
cmp
mov
lods
and
add
into
repz
cmp
xchg
pop
xchg
inc
nop
add
or
dec
sbb
jmp
cwde
inc
aas
sbb
repnz
fmul
repnz
mov
xchg
mov
pop
cs
pop
cli
sub
pop
inc
jmp
clc
lods
ds
inc
ss
and
jg
pop
mov
sbb
ja
sub
scas
pop
cmp
int
jns
or
mov
sbb
je
and
sub
sbb
hlt
aas
mov
aaa
icebp
dec
fdiv
das
mov
ds
clc
lods
push
pop
mov
mov
pop
popa
dec
bound
sub
push
fdiv
mov
(bad)
hlt
dec
sbb
outs
fld
outs
xlat
lock
sub
not
sub
mov
sbb
sbb
ins
mov
inc
mov
outs
popa
and
or
fld
jae
arpl
pop
cmps
arpl
das
jae
scas
sub
inc
inc
nop
mov
and
dec
jg
mov
aas
stos
sub
mov
mov
idiv
fld
jl
fs
outs
dec
mov
loop
xchg
mov
inc
mov
fsub
std
sbb
fsub
add
and
dec
jg
sub
add
das
stos
fdivr
sub
push
sahf
mov
clc
test
jnp
js
loope
mov
pop
mov
pop
pop
push
mov
into
cmp
and
jg
dec
mov
cld
jno
jl
inc
jo
in
xor
stos
into
dec
cdq
hlt
imul
jo
adc
sub
or
add
jle
sbb
mov
addr16
movs
sub
sub
pop
mov
mov
pop
inc
cwde
or
addr16
sbb
adc
mov
or
clc
call
sbb
inc
jg
cmp
mov
fiadd
pop
and
jg
jg
jne
(bad)
div
enter
mov
retf
in
outs
mov
jmp
jg
fmul
pop
aam
jp
lods
push
push
dec
loopne
or
mov
popf
lods
mov
cdq
in
jg
sbb
outs
imul
sbb
cli
sbb
mov
pop
mov
arpl
adc
and
sub
fmul
inc
jle
fs
in
push
cld
arpl
jmp
fld
dec
neg
xor
jno
adc
push
jg
and
fmul
add
and
jbe
add
adc
scas
mov
mov
movs
xor
add
jbe
add
sbb
fdivp
cld
clc
xor
inc
std
xchg
add
dec
xor
lock
sbb
cmc
(bad)
cmps
arpl
xor
adc
mov
movs
and
sbb
cld
dec
outs
sbb
mov
jg
pushf
xlat
or
sub
mov
adc
cld
arpl
sub
jge
(bad)
je
ret
fcom
mov
fs
pop
xchg
cwde
shl
call
scas
push
int
outs
mov
and
push
jmp
stos
mov
pop
sub
dec
xchg
fiadd
lods
movs
clc
std
xchg
add
add
or
inc
popf
fcom
sub
add
xor
cld
arpl
or
add
xor
sti
sbb
mov
cmp
cmc
repnz
popf
fdiv
mov
jae
call
add
int3
inc
pop
cmp
mov
stos
pop
adc
pop
iret
and
adc
dec
xor
push
fsub
inc
(bad)
fdivr
mov
cmp
mov
mov
push
ins
jnp
fsub
inc
sbb
cmps
push
or
dec
scas
push
mov
imul
rol
dec
cmps
mov
test
dec
sbb
cmp
idiv
rol
(bad)
and
outs
jle
mov
leave
mov
outs
pop
dec
js
clc
pushf
dec
jg
inc
pop
hlt
aad
and
sub
lock
bound
pop
mov
ret
outs
fidiv
sub
ins
hlt
pop
cmp
(bad)
clc
outs
mov
fcom
or
sub
jp
pop
adc
fsub
lods
sub
jg
fs
and
sub
int3
pop
cmp
cdq
pushf
pusha
pop
and
sub
mov
arpl
sub
(bad)
hlt
jl
jg
cmc
add
scas
jp
mov
cmp
sub
pop
dec
sbb
cmp
or
add
pop
jae
pop
popf
fsubr
sbb
and
sbb
xchg
and
jg
jae
int
addr16
sbb
and
pusha
call
das
mov
fadd
pop
and
cdq
add
sub
test
xchg
push
dec
arpl
dec
mov
fadd
nop
hlt
dec
div
pop
xchg
sbb
jge
lods
addr16
dec
push
(bad)
dec
addr16
test
jae
dec
add
lods
sbb
mov
arpl
pop
sub
out
push
fsub
sub
hlt
adc
scas
and
mov
jl
sbb
mov
xchg
pusha
ss
or
cmc
fsub
cmp
jp
js
gs
mov
pop
dec
xor
aad
data16
mov
pusha
sahf
jg
sbb
jp
clc
out
and
jg
jae
retf
mov
dec
mov
jl
sbb
jnp
pop
jne
pop
int
jnp
inc
jo
jmp
xor
and
adc
fcom
mov
and
pushf
cmps
pop
mov
mov
pop
xchg
fcomp
aas
dec
jg
inc
jnp
dec
xor
jns
mov
mov
push
pop
dec
popf
fsubr
cmp
push
dec
sub
or
jae
mov
mov
leave
inc
sbb
cli
pusha
mov
into
and
add
or
fsub
js
add
and
cs
or
pusha
push
int
pop
call
add
add
pop
cli
pusha
mov
(bad)
and
mov
xlat
inc
sbb
aas
enter
or
fld
outs
sub
push
std
mov
lods
push
mov
or
mov
loopne
cs
push
or
fld
sub
inc
or
sub
push
fsub
pop
sar
jmp
jg
pop
inc
cld
cmp
sub
dec
sbb
mov
cmp
inc
mov
sbb
or
sub
push
fsub
iret
sub
push
fsub
jmp
fiadd
jno
in
cmc
movs
mov
adc
(bad)
das
sbb
ss
imul
pop
and
loopne
and
gs
and
mov
pop
lods
adc
sbb
jmp
mov
clc
jg
add
or
jb
sub
fild
cmp
(bad)
jg
dec
add
jns
(bad)
jg
cmp
inc
xlat
or
fsub
fcomp
mov
cmp
je
push
mov
fmul
jge
fadd
aad
or
mov
fcom
mov
call
mov
jl
mov
jg
sub
push
fsub
aad
jnp
fadd
repnz
addr16
scas
js
fs
ins
fstp
fs
mov
sbb
stos
fdivr
xor
fdiv
rol
cmp
cmc
jnp
xor
mov
jge
fs
fs
jg
inc
mov
loope
sbb
pop
mov
imul
mov
test
cmps
pop
cmp
fidivr
pop
ficomp
inc
or
sbb
mov
jl
fwait
jle
fs
push
fsub
icebp
cmc
jae
ins
cmc
jnp
in
mov
lock
add
retf
and
or
mov
push
movq
fs
jl
dec
jl
fs
push
fsub
push
test
push
cmp
retf
aam
and
scas
jp
js
xor
fadd
jns
jge
fs
push
and
sbb
addr16
and
cmp
nop
mov
fcom
jg
or
out
and
nop
out
clc
(bad)
(bad)
jg
sub
retf
or
mov
xor
jns
jno
mov
fdivr
pop
mov
add
mov
in
fldenv
push
or
dec
scas
push
int
lahf
mov
dec
jnp
fs
sbb
jg
sub
loope
sbb
cmp
or
mov
fdiv
or
out
aam
call
push
jle
jmp
cs
pop
nop
out
adc
(bad)
jg
jbe
sbb
stc
sub
push
int
pop
pop
test
dec
call
lea
push
or
mov
int
daa
sub
mov
pusha
sahf
(bad)
xor
(bad)
jge
fs
sbb
dec
jo
mov
jg
jmp
or
adc
mov
les
jg
or
fsub
fsubr
mov
push
cmp
fsub
fiadd
dec
sbb
or
or
mov
int3
pop
clc
idiv
cs
or
dec
mov
jnp
fs
mov
xchg
and
das
mov
push
mov
mov
push
add
add
stc
mov
fadd
add
mov
mov
in
jle
mov
pop
out
imul
std
mov
fdiv
xchg
mov
int3
ja
add
jg
int
pop
push
test
push
push
or
dec
cld
cmp
inc
aas
or
outs
cmp
aam
call
push
jle
jmp
mov
adc
(bad)
jg
movs
fsubr
sbb
mov
xor
mov
cmc
data16
mov
pusha
sahf
jg
sbb
add
xchg
push
jg
retf
push
or
dec
scas
cmp
(bad)
jg
dec
sbb
mov
xor
and
add
arpl
das
sbb
xor
jg
mov
xchg
out
pop
(bad)
(bad)
jg
mov
dec
pop
xor
adc
jmp
jp
jno
mov
fdivr
jb
jmp
test
into
pop
pop
(bad)
hlt
clc
mov
fadd
stos
shl
sbb
stc
sub
shl
adc
cmp
int3
hlt
and
or
pop
aas
cmp
mov
cmp
jg
sbb
adc
add
jo
cwde
sbb
add
xchg
add
add
cmp
pop
cs
pop
int
ja
cwde
mov
push
pop
mov
jae
push
sbb
or
jg
adc
pop
aam
add
popa
mov
jg
fs
push
mov
outs
call
mov
jae
cmp
test
fsub
push
mov
pop
fld
add
lea
test
xchg
sbb
pop
xchg
cld
(bad)
jg
mov
adc
xchg
test
and
or
jge
fs
push
push
cwde
add
jp
pop
or
fsub
mov
daa
fwait
and
xchg
add
data16
mov
pusha
sahf
jg
sbb
cmp
inc
sbb
repnz
mov
jge
or
dec
push
add
mov
retf
sbb
scas
push
push
cwde
add
jo
popf
ins
mov
mov
popf
scas
pop
mov
jge
sbb
mov
fadd
sub
and
scas
lods
int
jns
cld
mov
call
stc
inc
adc
sbb
lahf
and
and
sub
scas
pop
mov
cmp
xor
(bad)
(bad)
cli
pusha
popf
dec
add
sub
jnp
jno
mov
fmul
mov
inc
outs
mov
les
scas
jg
stos
inc
repnz
mov
div
inc
call
sbb
fdivr
outs
pop
stos
ins
repnz
cmp
jnp
sbb
mov
mov
pop
ins
add
xor
fsub
out
jae
mov
fs
stos
pop
adc
pop
out
fisub
jl
daa
jl
fs
into
xor
mov
and
pusha
sahf
fisub
cmp
xor
xor
jg
sub
daa
dec
sbb
scas
push
or
mov
push
cmc
jecxz
and
pop
movs
dec
add
sar
mov
sub
scas
int
jae
daa
idiv
sub
add
daa
enter
fidivr
fdiv
mov
fadd
xchg
stos
push
aaa
pop
repnz
push
pop
pop
jbe
sbb
stc
cmp
js
jg
jg
jae
xchg
sub
jg
cdq
ins
add
mov
fmul
push
or
pop
das
sbb
stos
add
bound
add
arpl
cmp
aam
jg
xchg
sub
jg
cdq
jo
jl
pop
jg
fs
cmp
xchg
add
xchg
jnp
fs
cmp
add
jg
stos
sahf
mov
push
cmp
pop
cmp
add
add
add
push
jge
fs
xor
jg
dec
fdiv
sub
mov
sti
fcom
add
scas
js
mov
mov
pop
jbe
sbb
stc
cmp
js
jg
jg
jae
xchg
sub
jg
cdq
ins
add
mov
fadd
pop
das
sbb
ins
add
fs
cmp
addr16
jle
mov
fcomp
adc
and
fwait
add
mov
int
pop
call
mov
mov
int
pop
call
stc
nop
out
lods
bound
pop
mov
dec
jg
jmp
add
mov
fadd
add
sbb
ins
dec
js
fs
pop
or
fsub
mov
daa
fwait
and
mov
in
das
and
sub
ret
pop
lods
or
pop
retf
mov
xchg
test
jg
xchg
pusha
repz
xchg
cld
cmp
cmp
aam
jg
scas
js
(bad)
mov
inc
jo
ja
jg
pop
pop
das
sbb
ins
add
fs
cmp
fs
jle
mov
fcomp
adc
or
dec
scas
clc
ret
dec
or
and
ret
pop
mov
dec
jg
sbb
and
dec
cli
pusha
mov
push
or
dec
lods
mov
add
fs
push
or
dec
cld
cmp
jns
pop
or
fsub
int3
sbb
fwait
and
and
sub
ret
pop
mov
pop
retf
mov
xchg
test
sti
fadd
mov
fcom
cld
cmp
cmp
jl
jg
(bad)
jg
fs
jmp
fs
pop
cmp
jg
sbb
hlt
aad
and
sub
add
mov
scas
into
sbb
sti
and
add
sbb
mul
mov
iret
stos
mov
jp
movq
fs
jl
iret
jle
fidiv
sub
aaa
jge
fs
movs
sbb
pop
and
js
cmp
(bad)
jg
mov
xchg
out
pop
(bad)
(bad)
jg
inc
fs
daa
jg
fidiv
sub
cmp
fs
mov
out
and
mov
jp
jno
push
int
mov
add
add
cmp
das
mov
movs
cmp
aam
jg
xchg
cmp
scas
lods
mov
addr16
aad
and
sub
out
and
cmp
cmp
cmp
mov
arpl
xlat
das
sbb
xor
outs
pop
pop
sub
add
mov
fadd
cwde
cli
cmc
popf
dec
dec
sbb
leave
jg
fs
das
sbb
sbb
jecxz
mov
pusha
popf
pusha
scas
cmp
dec
idiv
in
fidiv
sub
dec
test
fsub
jle
adc
pop
out
and
jp
inc
jae
jl
add
xchg
and
xchg
jmp
jge
sbb
mov
dec
lods
inc
jns
jge
fs
mov
cld
outs
(bad)
das
sbb
jns
jge
fs
daa
sub
cwde
daa
in
cmp
jmp
mov
mov
jp
pop
pop
cmp
sub
sbb
mov
pop
ret
fdivr
sub
mov
mov
pop
ins
cs
inc
cdq
mov
jae
mov
fadd
pop
das
sbb
push
jo
fsub
mov
cmp
adc
cld
cmp
cmp
cmp
add
mov
jmp
jge
sbb
mov
outs
pop
xor
add
pop
mov
fadd
mov
repnz
bound
fsubr
jg
fs
aas
loope
mov
sbb
mov
and
jns
icebp
pop
xchg
imul
pop
hlt
dec
push
out
test
fst
xor
aas
dec
fsub
bound
mov
inc
pushf
dec
jg
adc
jo
jg
outs
xchg
mov
mov
jmp
fs
pop
dec
jns
jge
sbb
fmul
cdq
or
inc
jl
or
scas
mov
or
sbb
stos
repnz
add
jns
mov
jle
adc
mov
aam
sub
dec
jb
movs
and
retf
inc
rol
shl
cmp
cmp
mov
push
mul
pop
mov
jnp
pop
cvtps2pi
pop
dec
inc
and
test
mov
pop
push
hlt
and
or
inc
cmp
adc
das
mov
fsub
fwait
mov
mov
pop
mov
lock
out
fmul
(bad)
xchg
cmp
cwde
jg
outs
pop
int
outs
sahf
popa
add
jmp
retf
and
outs
sub
mov
jne
hlt
cmp
les
or
cmp
mov
jmp
mov
stos
pop
sub
inc
add
adc
cs
cs
fadd
cwde
and
sbb
hlt
push
mov
hlt
jecxz
xor
mov
(bad)
dec
addr16
jmp
lods
xlat
dec
fsub
in
dec
cmp
fs
mov
fs
loopne
sub
pop
sub
inc
jo
jle
jg
pop
call
ss
add
push
ss
pusha
push
jo
dec
add
jl
or
mov
inc
or
test
or
jg
pop
add
mov
sar
idiv
sub
fdivr
xchg
cmps
and
sub
xor
adc
jle
inc
add
dec
mov
loop
mov
pusha
sahf
xchg
dec
or
jno
pushf
mov
jb
cwde
add
dec
cmp
outs
hlt
mov
mov
hlt
loopne
cmp
mov
dec
or
jno
popf
scas
hlt
and
mov
mov
or
inc
jbe
mov
pop
add
add
and
mov
dec
cmp
add
and
mov
mov
sbb
jg
jg
jnp
dec
mov
jge
add
enter
cli
or
jg
or
js
dec
jo
or
jg
pop
outs
pop
aas
inc
hlt
mov
adc
lods
pop
ins
pop
lods
pop
or
mov
jl
push
idiv
cs
and
or
div
(bad)
mov
aas
and
ja
and
xchg
(bad)
fcmovbe
mov
mov
mov
or
push
lea
cmp
pop
int
addr16
sbb
pop
and
inc
hlt
mov
lea
aas
scas
mov
sbb
sub
fadd
sub
sbb
mov
xlat
or
arpl
mov
sbb
clc
mov
fmul
sub
mov
or
dec
dec
fsub
fsubr
mov
or
pop
and
sbb
sub
jle
adc
pop
sub
adc
mov
mov
mov
mov
or
inc
mov
jg
push
and
scas
dec
shr
and
idiv
add
mov
int
mov
or
lods
jg
push
jge
sbb
pop
popf
fsub
jnp
jg
fs
pop
movs
fsub
inc
mov
pusha
mov
aas
cmp
xchg
lock
nop
hlt
and
popa
jl
adc
mov
adc
cwde
jnp
in
mov
hlt
fmul
or
shr
hlt
mov
xor
hlt
mov
pop
sub
adc
pop
or
dec
mov
aas
cmp
xor
or
dec
dec
hlt
mov
popf
dec
cld
pusha
lea
mov
and
fsub
inc
call
mov
scas
or
adc
mov
fsub
cmp
xlat
jg
fs
pop
movs
fcom
enter
adc
push
or
jg
pop
movs
repnz
sbb
sub
add
not
add
lods
cwde
pop
xchg
and
mov
pop
neg
mov
test
sbb
xchg
jo
fs
icebp
daa
jmp
dec
lods
stc
ss
dec
mov
pop
dec
not
icebp
mov
add
mov
fs
add
adc
iret
pop
test
outs
pop
movs
fcom
mov
pop
and
das
mov
cld
push
mov
xchg
push
retf
mov
xchg
hlt
lods
push
or
add
xchg
stos
fdiv
mov
pusha
inc
aas
loope
jns
dec
cmp
cmp
movs
pop
cld
cmp
cmc
jnp
cmp
sub
imul
jg
cmps
mov
imul
jg
adc
jg
or
jl
sti
popa
(bad)
das
sbb
sahf
mov
lods
push
jns
scas
clc
nop
out
cmp
add
sbb
imul
das
sbb
sbb
shl
mov
cmp
lea
jns
jl
fs
shl
mov
pop
adc
pop
mov
int
add
dec
bound
pop
ret
fcom
fdivr
js
cmp
xor
mov
cld
daa
push
data16
push
and
sub
mov
std
leave
xor
mov
ds
nop
in
cld
(bad)
(bad)
jg
mov
jnp
cmc
int
xchg
and
mov
dec
xchg
sub
dec
pop
mov
cmc
mov
jnp
mov
addr16
shl
scas
js
jnp
sub
test
enter
lock
imul
add
mov
fadd
add
sbb
mov
into
lods
inc
and
mov
mov
inc
cdq
cmp
jb
mov
fadd
add
sbb
ins
outs
jle
fs
pop
or
fsub
fcomp
daa
fwait
and
and
sub
add
ss
mov
sbb
jae
jp
jge
fs
das
sbb
push
mov
fcomp
adc
sbb
outs
pop
dec
addr16
jo
xchg
add
bnd
sub
push
mov
fdiv
jae
sub
jnp
nop
mov
lock
sub
pop
sub
fsubr
mov
mov
fsubr
fcomp
cmp
mov
jg
xor
and
add
(bad)
fdiv
popa
mov
jg
cmp
jmp
sub
movs
sub
adc
mov
cdq
xchg
pop
dec
mov
inc
jns
jl
fs
cld
dec
in
loope
cmp
mov
scas
sbb
sub
cld
push
out
mov
fidivr
popa
mov
lods
cld
push
out
hlt
or
add
mov
push
ret
sub
mov
arpl
outs
jo
idiv
sbb
and
mov
cwde
lods
cli
cs
mov
fmul
outs
or
stos
mov
mov
xchg
inc
sbb
hlt
invd
ret
imul
sbb
ja
pop
mov
pop
or
(bad)
jg
xor
add
sub
fidiv
sub
mov
fsub
and
cmp
out
sub
hlt
cld
mov
fsubr
mov
fsub
fdivr
jmp
pop
pop
push
jg
pop
fist
add
dec
add
jge
mov
fsub
jl
mov
fsub
and
pusha
pop
sub
and
sub
sbb
dec
add
jl
mov
fsub
pop
or
fsub
aam
daa
fwait
and
mov
jg
xor
jg
push
mov
and
or
cmc
jecxz
and
cs
or
dec
push
add
repnz
ins
mov
fsub
and
add
sbb
pop
and
mov
dec
call
jae
and
cld
dec
lea
outs
pop
mov
mov
stc
addr16
fadd
jge
pop
inc
repnz
cs
or
dec
push
dec
jns
rol
loope
mov
sbb
mov
and
fdivr
fs
into
pop
pop
das
sbb
xor
test
jmp
jle
mov
fcom
ins
pop
sbb
adc
or
dec
scas
clc
dec
pop
dec
or
and
in
and
jecxz
fsub
pop
xchg
fcomp
add
jg
cmc
add
adc
sub
add
and
les
mov
sub
ret
pop
fmul
out
and
sub
mov
mov
xlat
or
fs
and
mov
icebp
popf
sahf
sti
xor
ds
and
xor
and
not
idiv
cld
sbb
es
fs
add
ret
pop
fmul
cmp
sub
and
jle
mov
jge
das
sbb
aam
lea
dec
xor
and
inc
jo
cmp
pop
fmul
xchg
mov
cmc
add
mov
lahf
pop
sbb
cld
cmp
cmp
mov
mov
or
jo
or
mov
(bad)
jg
jge
inc
mov
xor
dec
sbb
add
aam
dec
jg
push
(bad)
push
or
mov
push
pop
sbb
mov
mov
cmp
or
mov
cs
pop
mov
pusha
sahf
jg
sbb
add
cmp
clc
out
jg
cmc
mov
jae
cmp
aas
scas
and
cmp
mov
mov
nop
dec
idiv
push
add
and
or
popf
fsubr
ret
cmp
shl
cs
fs
ror
mov
icebp
popf
sahf
sti
xor
ds
and
xor
and
not
idiv
cld
sbb
cmp
inc
mov
fcom
mov
mov
aam
jge
fs
icebp
iret
mov
in
mov
dec
mov
pop
fcomp
cmp
sub
push
mov
dec
lock
jg
push
cmc
mul
push
inc
mov
jg
jnp
or
scas
mov
inc
push
xchg
fcomp
movs
fsub
or
dec
scas
int
cmp
mov
pusha
mov
jns
sbb
fidiv
sub
xor
mov
lods
push
cmps
inc
dec
popf
fdiv
int3
push
pusha
add
add
mov
scas
mov
inc
dec
sahf
sub
lods
push
cmps
inc
dec
popf
cmps
test
shr
jmp
pop
xchg
sbb
jecxz
fsub
into
xor
or
inc
push
xlat
enter
dec
sbb
jle
sbb
and
inc
int
loope
pop
push
xor
dec
sbb
mov
mov
mov
mov
mov
ins
fsub
jge
sbb
and
cld
or
sbb
aam
jae
out
cmc
xchg
lock
hlt
adc
mov
mov
cs
or
mov
cmc
mov
fsub
pop
or
test
and
dec
sbb
mov
sub
imul
xor
aad
sar
or
pusha
sahf
jg
mov
mov
lea
pop
int
imul
not
pop
ja
pop
ret
cmp
xchg
mov
dec
sbb
mov
mov
fs
into
xor
jl
mov
jge
jmp
fsub
push
or
dec
hlt
adc
mov
sbb
stc
nop
mov
pop
cmp
mov
sub
lock
add
sbb
test
mov
mov
mov
pop
push
sub
mov
fs
push
xchg
ins
idiv
mov
fadd
clc
hlt
mov
(bad)
in
mov
or
div
mov
test
mov
test
addr16
pop
jo
fsub
inc
call
fadd
inc
repnz
cs
or
dec
jmp
mov
xor
ins
mov
fadd
xor
mov
(bad)
adc
mov
in
das
and
sub
jnp
mov
dec
jg
add
fsub
in
cmp
pop
or
xchg
hlt
pop
or
and
mov
xor
fsub
push
mov
pop
pop
scas
pop
pop
or
sbb
stc
xor
ins
mov
fadd
retf
mov
xchg
pop
data16
xor
pop
je
xchg
add
cmp
mul
pop
mov
pusha
sahf
jg
sbb
cmp
iret
cmc
mov
dec
lock
mov
fadd
pop
das
sbb
ins
dec
jle
fs
mov
mov
inc
cdq
inc
scas
inc
cdq
mov
scas
clc
(bad)
xchg
add
inc
cld
cmp
sub
dec
sbb
mov
bound
mov
push
mov
fsub
pop
jbe
sbb
stc
cmp
inc
mov
fsubr
mov
fcomp
adc
fsub
push
cmp
aas
scas
and
das
sbb
cmp
push
ins
dec
jle
fs
mov
mov
pop
scas
pop
pop
aas
mov
jmp
push
xlat
das
sbb
jns
jl
outs
inc
cmp
mov
test
fsub
ins
ins
jmp
fsub
cmp
(bad)
jg
and
jle
jge
shr
push
inc
or
pop
xor
add
push
xchg
add
cmp
cmc
data16
mov
pusha
sahf
jg
sbb
and
scas
iret
cmc
mov
dec
lock
mov
fadd
cmp
mul
pop
mov
pusha
sahf
jg
sbb
mov
or
xchg
mov
sub
fs
pushf
fdivr
add
lea
cmp
mov
fdivr
pop
and
jge
xchg
add
jp
js
mov
fmul
hlt
dec
mov
hlt
adc
mov
fs
sbb
repnz
mov
out
jge
xchg
add
imul
dec
sbb
cmps
push
not
scas
and
mov
jl
sbb
pop
pop
out
and
dec
xor
fsub
cwde
cmc
retf
sbb
jl
cmp
inc
sbb
cmps
jmp
sbb
repnz
cs
or
dec
push
xchg
add
imul
dec
sbb
cmps
push
push
cwde
add
jo
(bad)
pop
mov
fdivr
add
or
fsub
mov
mov
js
mov
sbb
retf
sbb
scas
cmp
dec
hlt
adc
aas
mov
in
or
shl
xor
arpl
call
add
cmps
mov
jno
mov
fadd
add
sbb
test
pop
xchg
inc
sahf
add
fsub
scas
inc
(bad)
das
sbb
xor
jl
sbb
mov
xchg
test
jns
jge
fs
das
sbb
jns
jge
fs
jmp
sub
mov
sub
jae
mov
or
div
das
sbb
sahf
add
mov
pop
push
jae
pop
jge
iret
mov
js
or
dec
or
mov
jge
pusha
sahf
add
mov
pop
shl
pop
cwde
repnz
mov
mov
scas
sbb
fcom
stc
scas
jp
je
push
pop
jno
dec
jg
inc
retf
aas
lods
add
cmp
mov
jmp
hlt
cs
fcom
fdivr
sub
push
cmp
aas
scas
and
cmp
mov
ds
inc
jb
fs
hlt
sbb
mov
cli
sbb
cmps
cli
pusha
popf
pop
add
adc
and
dec
jno
fs
cmps
mov
int
pop
jmp
jae
aas
cmp
stos
fsubr
pop
shr
fdivr
dec
and
repz
mov
fdivr
mov
and
mov
pop
int
outs
jge
sbb
pop
mov
pop
mov
lea
jl
sbb
pop
dec
jb
out
xor
adc
lods
fdivr
sub
pop
ret
aad
mov
adc
imul
das
and
sub
mov
pop
pop
lahf
or
push
mov
gs
add
(bad)
(bad)
jg
nop
pop
repnz
mov
test
jle
dec
pop
test
arpl
sar
fs
clc
daa
cld
jg
pop
pop
das
sbb
int
imul
hlt
inc
adc
cmps
and
mov
ror
pop
and
inc
cli
cld
(bad)
(bad)
jg
sub
jae
fs
hlt
xchg
push
push
idiv
loopne
mov
cld
cs
push
push
out
mov
mov
int3
push
adc
and
add
dec
sbb
jae
jmp
sub
pop
das
sbb
lock
lahf
lea
mov
xchg
jnp
leave
or
das
sbb
cmp
dec
jg
xchg
pusha
cmps
aam
mov
les
jg
adc
scas
and
sub
scas
jno
xchg
fadd
sub
loopne
add
pop
das
sbb
push
mov
fcom
inc
(bad)
mov
push
bound
push
je
cld
les
fsub
aad
dec
jg
add
fs
div
sub
pushf
fld
dec
or
das
sbb
push
mov
fcom
inc
(bad)
mov
cmp
mov
stc
mov
fsubr
out
and
xor
icebp
pop
sub
ss
outs
iret
sbb
das
and
push
outs
mov
fisttp
and
sub
mov
mov
inc
(bad)
jg
fs
sub
or
add
(bad)
jg
sbb
hlt
push
stc
sub
mov
mov
inc
fsqrt
jg
fs
sub
fld
dec
sbb
mov
sub
mov
stc
fidiv
sub
jo
fsub
dec
mov
inc
mov
mov
sbb
cmp
daa
and
cwde
cli
cmc
popf
and
xor
jo
fsub
push
mov
das
sbb
cmp
daa
and
cwde
fidiv
sub
jo
fsub
mov
inc
mov
mov
scas
push
das
sbb
cmp
and
mov
push
jmp
mov
mov
inc
fptan
jg
fs
sub
fld
mov
sub
sub
jg
sbb
idiv
dec
fidiv
sub
jo
fsub
inc
mov
inc
mov
das
sbb
cmp
pop
and
add
and
out
and
sub
mov
mov
inc
fldcw
jg
fs
sub
(bad)
dec
sbb
mov
sub
sub
stc
fidiv
sub
jo
fsub
sbb
dec
jg
mov
pop
cld
mov
das
sbb
cmp
push
lods
inc
(bad)
sti
iret
and
sub
push
or
fs
int3
bound
lods
inc
mov
add
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
popf
fsubr
or
jge
fs
int3
bound
test
fsub
push
or
jge
fs
int3
bound
test
fsub
push
or
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
int3
bound
lods
inc
jp
jge
fs
push
or
dec
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
fs
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
int3
bound
lods
inc
jp
jge
fs
push
or
dec
bound
lods
inc
jp
jge
fs
push
or
fs
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
stos
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
stos
inc
jp
jge
fs
push
or
fsub
int3
bound
stos
inc
jp
jge
fs
push
or
int3
bound
stos
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
lods
inc
jp
jge
fs
push
or
jge
fs
int3
bound
jg
fs
mov
fadd
add
sbb
and
aaa
stos
and
add
scas
xchg
out
in
mov
pop
jbe
sbb
stc
inc
(bad)
jg
or
fs
iret
pop
mov
mov
daa
mov
aad
and
sub
aaa
sbb
mov
mov
sbb
repz
jae
fsub
push
or
dec
bound
jg
fs
mov
fadd
add
sbb
adc
aaa
stos
and
mov
fsubr
mov
pop
jbe
sbb
stc
cs
adc
(bad)
jg
or
fs
iret
test
dec
jg
sbb
mov
aad
and
sub
aaa
or
mov
mov
sbb
jecxz
mov
inc
jp
jge
fs
push
or
dec
bound
jg
fs
mov
fadd
add
sbb
add
aaa
stos
and
mov
fsubr
mov
pop
jbe
sbb
stc
cs
and
add
or
fs
iret
cmp
daa
mov
aad
and
sub
aaa
jnp
mov
mov
sbb
shl
mov
inc
jp
jge
fs
push
or
dec
bound
jg
fs
mov
fadd
add
sbb
jne
jg
pop
aaa
stos
and
mov
fsubr
mov
pop
jbe
sbb
stc
cs
lock
(bad)
jg
or
fs
iret
mov
daa
mov
aad
and
sub
aaa
imul
dec
hlt
mov
sbb
ret
and
jae
fsub
push
or
dec
bound
jg
fs
mov
fadd
add
sbb
gs
fadd
aaa
stos
and
mov
fsubr
mov
pop
jbe
sbb
stc
inc
(bad)
(bad)
jg
or
fs
iret
sbb
daa
mov
aad
and
sub
aaa
pop
and
mov
fcomp
shl
and
jae
fsub
push
or
fsub
int3
bound
jg
fs
mov
fadd
add
sbb
push
mov
fadd
aaa
stos
and
(bad)
jg
scas
xchg
out
in
mov
pop
jbe
sbb
stc
cs
sar
(bad)
jg
or
fs
iret
push
sbb
mov
aad
and
sub
aaa
dec
and
mov
fcomp
shl
and
jae
fsub
push
or
fsub
int3
bound
jg
fs
mov
fadd
add
sbb
inc
mov
fadd
aaa
stos
and
add
scas
xchg
out
in
mov
pop
jbe
sbb
stc
cs
loopne
(bad)
jg
or
fs
iret
clc
mov
mov
daa
mov
aad
and
sub
aaa
mov
mov
sbb
adc
mov
inc
jp
jge
fs
push
or
fsub
int3
bound
jg
fs
mov
fadd
add
sbb
push
mov
fadd
aaa
stos
and
add
ss
out
in
mov
pop
jbe
sbb
stc
cs
mov
(bad)
jg
or
fs
iret
dec
mov
into
sbb
mov
aad
and
sub
aaa
stos
and
mov
fcomp
rol
and
jae
fsub
push
or
fsub
int3
bound
jle
fs
jb
mov
fadd
add
sbb
movs
mov
fadd
aaa
stos
and
mov
fsubr
mov
pop
jbe
sbb
stc
cs
(bad)
(bad)
jg
or
fs
iret
fmul
daa
mov
aad
and
sub
aaa
fwait
and
mov
fcomp
shl
mov
inc
jp
jge
fs
push
popf
fsub
or
jl
fs
int3
bound
jle
fs
jb
mov
fadd
add
sbb
xchg
mov
fadd
aaa
stos
and
mov
fdiv
xchg
out
in
mov
pop
jbe
sbb
stc
cs
nop
(bad)
(bad)
jg
or
fs
iret
sub
daa
mov
aad
and
sub
aaa
mov
mov
mov
sbb
arpl
mov
inc
jp
jge
fs
push
or
jl
fs
int3
bound
jle
fs
mov
fadd
add
sbb
test
stos
and
mov
fsubr
mov
pop
jbe
sbb
stc
cs
mov
or
fs
iret
mov
sbb
mov
aad
and
sub
aaa
sti
and
mov
fcomp
rcl
mov
inc
jp
jge
fs
push
or
jl
fs
int3
bound
jle
fs
mov
fadd
add
sbb
cmc
mov
fadd
aaa
stos
and
mov
fsubr
mov
pop
jbe
sbb
stc
cs
jo
mov
pop
or
fs
iret
or
daa
mov
aad
and
sub
aaa
jmp
mov
mov
sbb
inc
and
jae
fsub
push
or
jl
fs
int3
bound
jle
fs
mov
fadd
add
sbb
in
jg
pop
aaa
stos
and
mov
fsubr
mov
pop
jbe
sbb
stc
inc
or
fs
iret
cwde
mov
int
daa
mov
aad
and
sub
aaa
(bad)
mov
mov
sbb
mov
mov
inc
jp
jge
fs
push
or
jl
fs
int3
bound
jle
fs
jb
mov
fadd
add
sbb
movs
das
(bad)
xor
add
jg
outs
arpl
pop
add
(bad)
pop
iret
and
outs
add
gs
jg
cmps
cmc
xor
xor
pop
add
(bad)
pop
iret
and
outs
add
add
jg
cmps
cmc
xor
xor
pop
hlt
mov
nop
js
fcomp
mov
scas
inc
(bad)
cmps
iret
and
jb
adc
pop
pop
hlt
int
retf
mov
out
sub
aam
or
retf
pop
add
and
xchg
lods
lea
mov
outs
mov
leave
fldenv
movs
in
cmp
adc
xor
inc
xor
pop
pop
lods
pop
cmps
mov
pop
xchg
dec
add
jns
inc
jo
in
sub
mov
or
sti
sbb
out
mov
mov
imul
shl
mov
pop
mov
inc
fcomp
or
out
inc
aas
in
movs
cmc
mov
in
cmp
adc
pop
pop
add
sbb
mov
adc
xor
inc
xor
pop
pop
test
mov
xor
jnp
mov
outs
lock
jg
jg
ja
sahf
mov
pop
xor
nop
add
or
fs
aas
cmp
mov
adc
xor
inc
xor
push
inc
mov
scas
jp
in
(bad)
idiv
push
out
test
sbb
push
data16
popa
sub
es
adc
lods
fdivr
or
lods
bound
jnp
pop
push
psubsb
pop
cmp
xor
inc
xor
mov
pop
aas
mov
and
pop
jg
fs
xchg
inc
sbb
cld
cmp
aad
popa
mov
xor
pop
pop
lods
pop
cmps
mov
sbb
sub
cld
arpl
not
xor
add
retf
push
sub
jge
sbb
mov
cmp
mov
adc
xor
pop
hlt
mov
push
retf
std
sub
aam
sub
outs
push
shl
mov
sbb
in
cmp
adc
xor
pop
hlt
xchg
push
retf
sti
add
mov
mov
jle
mov
ds
inc
and
into
mov
in
(bad)
jg
fs
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
pushf
fidiv
jg
fidiv
jg
fidiv
jg
(bad)
mov
push
shl
jg
fidiv
jg
fs
xchg
lods
adc
xchg
shl
xchg
lods
adc
xchg
shl
fsub
fsub
int3
fs
push
mov
or
mov
fisub
repnz
outs
fsub
fsub
fsub
out
xor
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
retf
fstp
xchg
cmps
jno
sbb
dec
aam
scas
mov
jno
pop
out
mov
push
jno
jecxz
imul
and
(bad)
jg
leave
pop
das
push
cmp
ror
outs
rcr
and
xchg
add
xchg
add
xchg
add
xchg
add
dec
jg
and
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
adc
add
fcos
and
jns
xlat
sbb
and
push
repnz
push
jo
add
xchg
add
xchg
add
xchg
add
or
push
imul
xor
fdiv
push
(bad)
cmps
rol
shl
(bad)
(bad)
(bad)
jg
fs
(bad)
(bad)
(bad)
jg
fnsave
jg
mov
sub
cmp
and
dec
outs
add
dec
outs
out
ss
outs
out
dec
outs
lds
dec
outs
push
cmp
shl
pusha
fnsave
jg
mov
pushf
cmp
outs
and
dec
outs
and
dec
outs
pop
cmp
out
ss
outs
out
dec
outs
lds
dec
outs
push
cmp
pop
mov
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
add
dec
sub
scas
popa
pop
jno
pop
mov
sbb
test
ficom
or
outs
or
and
sub
xchg
pop
jg
in
sub
jecxz
dec
cmp
test
inc
daa
xchg
xor
mov
or
(bad)
mov
ja
std
or
push
jae
inc
inc
(bad)
(bad)
in
push
mov
and
mov
xor
mov
inc
jle
rcl
outs
mov
cmc
jo
and
lods
bound
jo
push
mov
or
ja
fs
mov
push
jg
cmp
out
dec
fist
inc
inc
xlat
pop
imul
mov
aas
pushf
pop
shl
inc
adc
lods
in
mov
loop
pop
mov
out
jns
scas
add
jno
imul
mov
ficom
mov
cmc
mov
sar
loop
jne
lods
data16
scas
call
push
mov
jmp
mov
or
imul
in
pushf
inc
frstor
pop
jne
fwait
cmps
sahf
xlat
jno
jg
xchg
pop
ins
cmp
cmp
cmp
scas
popa
sub
xor
cs
icebp
test
sub
pop
add
mov
or
adc
imul
jne
fdiv
and
xchg
rcr
sbb
outs
(bad)
(bad)
dec
ret
cmp
cmp
inc
sbb
ja
fwait
jmp
xchg
dec
xor
lods
and
idiv
mov
imul
xchg
out
fimul
inc
sti
hlt
popa
stos
shl
repz
sbb
out
stc
lds
cld
xchg
js
or
loopne
sar
pop
cmp
pop
call
pop
aas
loope
cs
sub
dec
xchg
adc
enter
mov
cwde
jns
sub
jne
jbe
sar
push
outs
sub
mov
fs
xchg
sub
ins
mov
jl
in
push
fidiv
inc
mov
jecxz
movs
mov
outs
ds
xor
mov
stos
add
push
cli
inc
cmp
mov
add
mov
jbe
add
mov
jbe
shl
mov
mov
adc
fsub
fsub
fsub
mov
mov
add
mov
and
dec
jg
mov
and
mov
sbb
mov
mov
add
jg
fnsave
nop
xchg
lods
jno
jns
loopne
mov
adc
and
call
sbb
popf
jb
dec
fsub
enter
fsub
fsub
cwde
(bad)
mov
fdiv
jg
fs
fsub
fsub
fsub
pushf
fidiv
jg
fidiv
jg
fidiv
jg
(bad)
mov
push
shl
jg
fidiv
jg
mov
call
loop
mov
loope
popf
pop
call
stos
scas
xchg
stos
adc
jg
dec
call
add
jg
bound
call
fwait
fwait
xchg
lods
add
jl
stos
pop
fwait
xchg
mov
(bad)
shl
and
or
ja
sbb
pushf
mov
mov
nop
lods
pop
(bad)
loope
adc
ret
fs
jge
lods
pop
(bad)
mov
mov
mov
stos
adc
call
adc
lods
jb
xchg
nop
mov
jg
int
mov
rol
test
xchg
and
mov
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fmul
dec
jg
fs
fsub
fsub
fsub
and
mov
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
and
mov
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
xor
add
mov
sbb
(bad)
jg
mov
and
dec
jg
fs
fsub
aam
aaa
shr
fnstsw
fbld
(bad)
xlat
shl
mov
cmps
(bad)
stc
pop
scas
pminsw
mul
mov
in
int
ja
sbb
outs
add
dec
jg
fs
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fcom
mov
cvtps2pd
push
pop
or
push
aam
outs
pop
sub
pop
cwde
dec
and
dec
jae
xor
dec
(bad)
dec
inc
dec
nop
dec
jnp
dec
push
dec
xor
in
dec
imul
dec
push
push
ror
push
dec
cmp
dec
aas
pop
clc
dec
inc
pop
add
push
push
dec
mov
push
stos
dec
jbe
daa
dec
(bad)
push
(bad)
dec
jl
hlt
dec
adc
push
jl
xlat
push
pushf
dec
mov
push
jb
jnp
sub
dec
adc
inc
push
(bad)
dec
inc
rcr
cdq
pop
or
inc
jg
imul
popa
fiadd
popa
jle
jmp
inc
mov
popa
jecxz
retf
inc
and
adc
bound
inc
cwde
pop
mov
fdiv
jg
mov
in
pop
sbb
repz
fcom
jg
xor
dec
cwde
push
or
push
gs
loopne
jno
jne
(bad)
inc
clc
pusha
inc
inc
fadd
jg
popa
cdq
inc
fdiv
mov
dec
push
mov
dec
sbb
stos
inc
mul
inc
jo
inc
mov
inc
mov
inc
mov
inc
enter
mov
inc
jecxz
addr16
iret
pop
cmp
pop
dec
inc
or
inc
ja
mov
fsub
mov
pop
mov
into
xor
dec
and
dec
sahf
pop
std
dec
jg
into
dec
pop
pop
or
xor
dec
adc
sub
dec
scas
dec
mov
push
mov
dec
cli
dec
add
push
ret
dec
xchg
pop
push
dec
mov
pop
(bad)
inc
adc
gs
add
dec
inc
out
push
ins
inc
jns
xor
pop
pop
jg
inc
pop
mov
mov
fs
mov
inc
aam
fs
inc
inc
jmp
inc
or
jg
aam
jg
mov
or
dec
push
pop
in
dec
lock
dec
dec
or
pop
dec
or
out
dec
jo
jg
mov
dec
icebp
pop
push
dec
fwait
pop
or
lds
dec
outs
pop
xchg
push
sbb
sti
push
and
pop
stos
inc
xchg
pop
adc
popa
imul
pusha
dec
inc
punpckldq
inc
mov
popa
add
fld
bound
inc
inc
bound
inc
and
and
pop
stos
inc
pop
push
xlat
inc
jl
fild
push
cmps
inc
lods
push
outs
inc
je
aaa
inc
pushf
pop
mov
inc
int3
pusha
dec
inc
xchg
pusha
pop
inc
mov
inc
out
in
inc
scas
inc
mov
ja
fadd
inc
pop
inc
dec
inc
fwait
inc
repz
inc
inc
mov
pop
inc
push
pop
mov
inc
fistp
inc
cdq
pop
cmovo
imul
les
jg
pop
push
dec
loope
pop
dec
(bad)
xor
dec
test
dec
dec
pop
mov
add
pop
sbb
dec
dec
pop
popf
dec
or
pop
dec
scas
xor
dec
ins
dec
sti
dec
adc
dec
ror
dec
ja
or
lods
dec
icebp
pop
dec
dec
rcr
dec
into
pop
lods
dec
rcr
dec
xchg
pop
adc
pop
clc
dec
fdiv
jg
xor
dec
les
dec
push
pop
das
dec
dec
pop
daa
dec
movs
push
pop
dec
pushf
push
imul
fisttp
pop
ror
pop
mov
pop
inc
dec
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
mov
mov
adc
xchg
xor
dec
sbb
jbe
xchg
dec
cwde
mov
xchg
aaa
push
and
in
or
add
add
fwait
es
add
mov
frstor
fld
outs
rcr
ss
cmp
fcmovb
cmp
fcmovb
test
fcmovb
mov
fcmovb
outs
rcr
mov
lock
mov
es
and
out
(bad)
imul
int3
shr
int
ss
aad
loope
sar
mov
daa
push
int3
ret
int3
rol
fst
sub
ret
cmp
fst
xchg
(bad)
xchg
(bad)
or
shr
fstp
outs
rcr
fnstsw
rcr
sar
repnz
outs
(bad)
fst
mov
out
les
loop
xlat
imul
fxch
test
mov
retf
ret
ret
mov
ret
(bad)
shl
(bad)
sar
mov
repnz
iret
mov
frstor
fld
push
ret
stc
ror
mov
int
mov
int
add
shr
sar
mov
rcl
cmp
fadd
mov
vmovdqa
out
(bad)
outs
xlat
int
data16
(bad)
imul
int
add
ret
lds
mov
int3
es
int3
es
repnz
es
lds
xchg
mov
es
fsub
and
and
call
iret
es
fsub
push
repnz
mov
(bad)
add
aad
sar
xor
int
test
mov
retf
xchg
repnz
aaa
aam
sar
int
test
int
push
loope
es
int
xchg
xlat
sub
iret
into
ror
int
push
ret
outs
rcl
xchg
xlat
leave
outs
mov
fst
sti
xor
(bad)
mov
(bad)
ins
(bad)
(bad)
aaa
shr
aad
fmulp
(bad)
imul
iret
(bad)
aaa
shl
les
mov
shr
shl
iret
ret
mov
fcom
data16
retf
rol
fs
leave
push
jmp
es
mov
es
mov
es
shl
outs
lock
ins
lock
es
mov
es
fstp
es
mov
es
shl
push
ror
es
xor
mov
mov
fsubr
into
pop
push
into
int3
imul
into
shr
into
pop
push
mov
leave
imul
(bad)
shr
xlat
push
out
es
shl
xchg
shl
xchg
shl
xchg
shl
cmp
shl
cmp
fst
ins
(bad)
cmp
ffree
outs
out
ret
lock
shl
xchg
aam
push
(bad)
iret
es
(bad)
mov
ret
imul
ror
imul
mov
iret
imul
rcl
xor
int
push
aam
ret
aam
xor
ficom
xchg
fist
xchg
ffree
cmp
ffree
cmp
(bad)
cmp
lock
es
ret
es
mov
es
es
outs
(bad)
cmp
rol
push
mov
shr
ret
imul
mov
es
mov
int3
xchg
fcom
sti
rcr
clc
rcr
stc
rcr
idiv
(bad)
cmp
(bad)
cmp
lock
es
shl
xor
sub
daa
mov
ffree
mov
ffreep
outs
lock
push
aad
shl
enter
aam
ret
mov
mov
mov
mov
shr
xlat
es
mov
frstor
mov
iret
data16
fist
fst
mov
lock
int3
and
aam
ret
imul
ret
retf
imul
mov
ret
imul
fld
cmp
fst
mov
ffree
mov
lock
es
lock
ins
lock
es
ret
push
loopne
fwait
cld
ins
jmp
mov
jmp
aaa
iret
iret
add
cmps
jge
cld
cmps
pop
cmp
mov
cmp
push
js
loopne
mov
sub
or
ror
leave
xchg
jl
ins
push
aad
aaa
icebp
jl
ins
ror
shl
fmul
add
dec
loope
shr
mov
rcl
ss
add
dec
fcomp
add
ss
fmul
into
les
loope
fdivr
jmp
retf
mov
int3
ss
xlat
or
mov
fdivr
pop
aam
dec
(bad)
mov
retf
iret
(bad)
ss
ror
sar
pop
rol
fdivr
jmp
retf
jl
dec
repnz
ror
iret
fsubr
xor
les
sar
loop
les
fdivr
ror
add
outs
fdivr
fdivr
lock
jmp
cmp
(bad)
ins
push
(bad)
repnz
or
clc
das
push
fidivr
icebp
mov
add
dec
fcmove
fmul
fcmovb
dec
icebp
iret
(bad)
ss
ror
sar
pop
rol
fcomp
les
fdivr
rcr
retf
mov
add
xchg
rol
cmp
jl
ss
(bad)
inc
mov
sub
xor
shr
les
push
or
pop
sub
ins
aad
sar
mov
shl
out
pop
cs
mov
retf
into
retf
mov
ret
xchg
add
ins
jmp
retf
xchg
rol
cs
into
leave
xchg
int
dec
(bad)
fxch
test
iret
add
xor
jle
dec
and
(bad)
dec
(bad)
int3
ins
fdivr
(bad)
sub
xor
(bad)
push
jmp
retf
jl
test
mov
retf
(bad)
push
fst
add
cmp
mov
rcl
jl
ins
lock
cmp
mov
sub
mov
sub
and
pop
jae
push
dec
mov
sub
and
pop
jae
push
dec
mov
sub
xor
rol
jmp
add
ins
fdivr
(bad)
cmp
int3
rcl
fiadd
dec
jmp
sar
xchg
sub
mov
sub
and
lea
push
dec
mov
in
cmp
into
cmc
cmp
ror
outs
frstpm(287
test
iret
int3
xor
out
add
add
ror
sub
ins
mov
fisttp
imul
jg
xor
jg
pop
jae
push
dec
das
jg
stos
jp
loopne
and
cli
movs
aam
loopne
push
sbb
jmp
adc
or
and
ss
sub
fisub
sar
xor
mov
xlat
shr
pop
in
mov
add
add
stc
push
sbb
ror
jmp
enter
rcl
sbb
stc
cmp
int
xchg
lea
jg
mov
rol
iret
fdivr
jmp
enter
add
es
(bad)
jle
(bad)
(bad)
pop
mov
aad
ss
push
stc
add
sar
iret
leave
stc
xor
stc
xor
cmc
adc
push
loope
in
in
jo
cmp
mov
sub
repz
jg
dec
(bad)
ror
push
fld
enter
aam
repnz
fadd
out
or
(bad)
fxch
xchg
fcmove
push
(bad)
ror
sbb
retf
push
(bad)
or
sub
rol
ret
aam
icebp
(bad)
iret
sub
fcmove
ins
fcomp
aad
push
fwait
ret
rol
ins
sub
les
or
ret
retf
test
ss
pop
cs
ror
outs
fcmove
retf
sub
(bad)
stc
(bad)
retf
call
mov
iret
and
cwde
std
xor
loope
jae
loope
jae
jmp
adc
les
fld
xlat
cmp
into
and
(bad)
(bad)
dec
sbb
stc
pop
loopne
rol
sbb
add
add
fdivr
jmp
enter
add
add
rol
into
or
jmp
retf
iret
ror
(bad)
leave
xchg
mov
retf
iret
xlat
dec
fcmove
xlat
ins
fcmovnu
push
stc
sbb
leave
outs
mov
mov
retf
int
fs
mov
stc
pop
iret
rcl
push
loop
leave
cmps
icebp
ret
rol
loop
shr
fmul
xor
fadd
stc
xor
lea
stc
pop
fdivr
fsubr
lock
push
or
cmp
cmp
test
in
jmp
mov
cmc
cmp
rcl
mov
in
push
repnz
leave
mov
cmp
outs
fucomi
int
jmp
pop
cs
(bad)
fst
retf
(bad)
push
out
into
xchg
fcmovb
outs
xor
das
cmp
mov
shr
les
xor
cs
int3
ins
(bad)
sub
ror
push
stc
sbb
leave
outs
mov
aad
ror
les
rcr
adc
clc
adc
sbb
xchg
shl
dec
out
rcr
fld
stos
fcmovnbe
xlat
xchg
int
cmps
loopne
call
xchg
ret
leave
xchg
xchg
loop
jmp
ins
ror
retf
ss
mov
leave
xchg
out
fdivr
rol
mov
shl
leave
xchg
lock
rcl
out
fdivr
rcl
or
jmp
int3
ins
lds
xor
fdiv
int3
cmp
mov
in
sbb
and
leave
xchg
out
fdivr
leave
xchg
loop
jmp
outs
frstpm(287
out
(bad)
shl
shr
test
or
(bad)
out
fdivr
retf
int
stos
mov
cmp
mov
mov
in
in
retf
xchg
rcl
ins
jmp
mov
shl
xchg
fnop
cmp
iret
sub
fmul
retf
mov
ret
jg
xchg
mov
retf
mov
aad
xlat
mov
retf
mov
retf
xchg
into
ror
fnop
cmp
iret
in
in
rol
into
fcom
out
rcl
shr
and
test
into
enter
retf
in
jmp
mov
retf
fidiv
loopne
out
icebp
into
shr
ins
loope
(bad)
cmp
shl
fcmovne
xchg
and
test
into
enter
retf
cmp
ins
fstp
rcl
iret
ret
mov
xor
or
(bad)
cmc
cmp
mov
sar
shl
ret
leave
xchg
fcmovne
ins
jmp
xchg
shl
push
ror
sub
icebp
ret
rol
mov
ret
leave
xchg
fcmovne
ins
jmp
push
loop
in
ins
sbb
leave
sbb
iret
rcr
int
xchg
xor
cmp
mov
in
out
shl
(bad)
shl
cmp
cmp
das
xlat
cmp
into
ss
fadd
shl
ror
xchg
iret
xchg
mov
les
fsubr
rol
je
rol
ja
loop
jmp
cmp
and
test
in
loop
jmp
xchg
cmp
outs
fistp
cmps
loopne
jmp
jmp
ss
in
ins
(bad)
fnstcw
ffree
rcl
fmul
sbb
xlat
push
jmp
(bad)
mov
sub
retf
push
xlat
xchg
mov
ror
mov
shr
ret
aad
fstp
(bad)
push
fdivr
shr
shr
mov
rcl
fidiv
test
mov
int3
sar
(bad)
ss
retf
push
jae
les
sbb
(bad)
mov
sub
retf
das
shl
mov
loop
jmp
outs
jp
int3
xor
sub
ret
clc
loop
jmp
and
in
in
retf
xchg
ss
leave
xchg
jecxz
fst
out
(bad)
rcr
iret
shl
mov
rol
out
or
cmp
mov
repnz
aad
adc
ror
repnz
aad
adc
iret
into
ror
push
xlat
xchg
mov
leave
push
(bad)
aad
xor
retf
mov
int
ins
jmp
cmp
lea
movs
mov
(bad)
ss
xlat
ins
loope
(bad)
cmp
cwde
jmp
fisub
jecxz
ror
not
iret
cs
iret
retf
pop
icebp
fld
xchg
int
je
mov
ror
inc
and
ss
retf
xchg
cmp
xchg
jg
outs
ja
in
ins
jmp
xchg
shl
push
ror
ss
mov
shr
out
mov
sub
loop
out
jmp
ror
fild
icebp
fnop
cmp
iret
aaa
push
fmul
int3
test
add
bnd
retf
fcmovb
ins
cmc
repz
out
fcmove
sar
loopne
dec
push
retf
ret
rcl
fmul
sbb
ror
in
out
or
in
ins
icebp
mov
sub
ffree
rcl
fmul
sbb
test
das
xlat
cmp
into
sub
into
shl
fcomp
in
rcr
(bad)
dec
cmc
(bad)
xlat
ss
mov
retf
aad
movs
rcr
(bad)
ss
lahf
(bad)
ss
retf
test
push
push
xlat
xchg
mov
retf
or
fdivr
les
fmul
fsubr
jmp
cmc
cmp
mov
shr
fdiv
cmc
(bad)
xlat
ss
mov
ror
(bad)
aaa
aam
icebp
push
icebp
iret
les
adc
shr
jmp
retf
mov
xlat
and
in
out
int3
cmp
sbb
fnsave
js
out
loopne
shl
(bad)
retf
push
xlat
and
test
jmp
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
fsub
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
cmp
je
mov
and
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
mov
cmp
jne
push
push
push
push
call
add
jmp
push
push
push
push
push
push
push
lea
push
call
add
cmp
jne
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
lea
push
push
call
pop
pop
test
jge
cmp
je
push
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
push
call
pop
jmp
mov
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
mov
push
mov
xor
cmp
jbe
mov
cmp
je
inc
inc
cmp
jb
pop
ret
mov
push
mov
mov
jmp
dec
cmp
je
inc
test
jne
dec
mov
sub
dec
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
push
xor
mov
mov
mov
mov
cmp
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
push
mov
call
pop
mov
mov
cmp
jle
mov
push
call
mov
pop
mov
jmp
cmp
jge
xor
jmp
cmp
jl
mov
cmp
je
cmp
je
xor
inc
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jg
cmp
jle
push
jmp
lea
push
push
call
test
je
cmp
jle
cmp
jb
cmp
lea
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
cmp
jle
cmp
jae
xor
inc
jmp
cmp
lea
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
mov
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
pop
test
je
mov
add
mov
jmp
and
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
test
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
xor
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
mov
pop
cmp
je
cmp
je
push
push
lea
push
push
push
push
call
mov
add
test
je
push
push
lea
push
push
push
push
call
mov
add
test
jne
push
call
pop
jmp
mov
mov
push
push
push
push
push
push
call
mov
test
je
push
call
push
call
pop
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
mov
push
lea
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
cmp
je
mov
and
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
mov
mov
cmp
jne
lea
push
push
push
push
call
add
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
cmp
jne
pop
jmp
push
push
push
push
call
add
pop
ret
mov
push
mov
push
mov
jmp
push
push
push
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
mov
push
mov
push
push
mov
xor
mov
test
je
cmp
je
add
inc
cmp
jne
push
inc
push
push
call
mov
pop
pop
mov
test
jne
push
call
jmp
push
call
mov
add
add
pop
mov
test
jne
and
mov
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
mov
push
mov
cmp
je
push
push
call
mov
pop
pop
mov
cmp
je
cmp
je
xor
cmp
sete
mov
mov
cmp
jne
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
call
mov
or
pop
pop
pop
leave
ret
cmp
jne
push
call
pop
mov
cmp
je
mov
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
mov
cmp
je
sub
push
call
mov
cmp
pop
jl
cmp
je
lea
push
call
pop
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
inc
lea
cmp
jne
cmp
jae
push
push
push
call
add
cmp
je
jmp
cmp
jne
cmp
jge
neg
lea
cmp
jl
cmp
jae
push
push
push
call
add
cmp
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
mov
push
push
call
inc
pop
inc
push
call
mov
pop
pop
cmp
je
push
push
call
inc
pop
inc
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
mov
sub
add
mov
inc
neg
sbb
not
and
push
push
call
test
jne
or
call
mov
push
call
pop
cmp
je
push
call
mov
pop
mov
mov
jmp
push
call
mov
pop
mov
xor
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
