add
add
add
add
and
add
dec
add
add
add
add
add
pusha
add
add
add
js
add
nop
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
push
add
add
add
add
add
test
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
and
mov
sbb
mov
adc
js
dec
jne
dec
movs
dec
jo
inc
ins
mov
inc
imul
add
add
and
(bad)
call
test
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
cmp
(bad)
inc
cwd
inc
add
xchg
and
mov
jmp
mov
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
inc
fdivr
cdq
(bad)
(bad)
inc
addr16
(bad)
sar
int3
(bad)
jmp
(bad)
(bad)
(bad)
inc
jmp
inc
jmp
inc
jmp
inc
jmp
dec
out
cdq
(bad)
(bad)
inc
imul
data16
(bad)
push
cwde
retf
call
idiv
call
idiv
call
idiv
call
idiv
call
mov
(bad)
inc
add
xchg
sub
(bad)
aam
push
cdq
int3
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
cdq
(bad)
(bad)
inc
ins
mov
xchg
cs
(bad)
(bad)
jp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
dec
jo
inc
add
jne
xchg
leave
inc
out
jmp
vcvttsd2si
vcvttsd2si
vcvttsd2si
sar
mov
sbb
mov
sbb
add
xor
(bad)
dec
hlt
(bad)
dec
hlt
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
jne
add
and
add
add
cdq
int3
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
call
test
call
xor
add
add
add
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
inc
add
cmp
add
or
add
add
add
add
add
add
add
add
add
add
add
add
cdq
int3
push
cwde
retf
push
xchg
leave
jmp
xchg
(bad)
inc
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
jl
add
and
add
add
add
add
add
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
pop
add
add
add
add
add
sub
add
sbb
add
add
add
add
add
cmp
add
daa
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
mov
call
test
inc
sub
add
int
sbb
add
add
add
add
pop
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
out
jle
(bad)
jmp
call
repnz
mov
jmp
lods
fdivr
pop
mov
add
rol
sub
mov
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
sbb
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
call
inc
in
jmp
mov
dec
mov
movs
out
add
fiadd
xor
mov
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
lea
xchg
jecxz
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
stc
call
out
push
loop
pop
cmps
(bad)
inc
sub
add
push
mov
daa
scas
add
add
add
add
add
adc
add
add
add
add
mov
call
loopne
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
call
(bad)
ds
fcos
add
jns
add
add
add
add
add
add
add
add
fcos
mov
jecxz
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
push
(bad)
inc
sub
add
add
add
add
add
add
add
(bad)
jmp
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
push
call
cmps
fcos
add
add
add
add
add
add
test
(bad)
or
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
fdivr
call
cmps
fcos
add
push
movs
add
add
add
or
add
add
test
enter
inc
repnz
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
fdivrp
inc
inc
ss
mov
add
add
add
add
xor
fcos
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
loope
inc
out
add
les
add
pop
add
add
add
add
add
add
lods
fcos
sub
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
push
repnz
pop
jp
add
add
add
sbb
add
add
add
add
(bad)
aaa
mov
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
jg
(bad)
(bad)
jl
repnz
ins
nop
jecxz
add
jp
add
pop
add
add
add
add
pop
shl
pop
shl
stos
loopne
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
out
push
jl
in
add
add
add
add
add
add
pusha
shl
pusha
shl
lods
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
mov
xchg
mov
xchg
add
add
add
add
add
sub
jmp
jmp
jmp
cli
(bad)
call
cld
(bad)
dec
std
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
out
(bad)
mov
mov
inc
add
call
add
add
out
(bad)
out
push
mov
(bad)
(bad)
cmp
out
xchg
aad
push
cli
(bad)
jmp
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
repnz
inc
fdivr
add
daa
lods
add
add
add
or
mov
jmp
cmc
(bad)
dec
jmp
dec
enter
mov
(bad)
jmp
loop
in
cld
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
repnz
push
out
add
inc
mov
add
add
add
repnz
cld
(bad)
call
cld
(bad)
call
cld
(bad)
call
cld
(bad)
jmp
mov
out
repz
(bad)
(bad)
in
(bad)
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
repnz
dec
dec
arpl
add
add
add
adc
add
repnz
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
mov
(bad)
(bad)
aas
mov
call
(bad)
jge
out
lods
fsubrp
(bad)
mov
(bad)
(bad)
(bad)
clc
(bad)
(bad)
push
(bad)
(bad)
inc
in
(bad)
(bad)
fdivp
(bad)
(bad)
mov
pusha
or
add
pop
add
add
add
dec
sti
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
sti
(bad)
call
sti
(bad)
inc
cld
(bad)
(bad)
mov
jmp
dec
int3
out
cmp
fcos
sbb
fcos
outs
(bad)
jg
out
(bad)
shr
inc
jg
rol
add
add
add
pop
lahf
int3
mov
movs
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
cld
(bad)
call
mov
rcr
jns
out
mov
jmp
inc
call
(bad)
call
cld
(bad)
inc
std
(bad)
push
(bad)
add
mov
add
inc
add
add
add
add
add
(bad)
in
std
(bad)
jmp
std
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
dec
jmp
add
add
add
add
add
inc
add
mov
lds
(bad)
aad
mov
fdivr
add
dec
add
add
add
rol
inc
mov
icebp
jo
loop
or
call
out
(bad)
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
add
(bad)
(bad)
push
aas
(bad)
push
add
push
add
jmp
add
jmp
add
aas
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
add
psubb
clc
aas
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
and
add
add
add
add
add
add
adc
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
jne
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
cmc
add
jecxz
pop
jns
add
mov
add
add
add
add
dec
add
add
add
and
add
sbb
add
adc
add
pop
add
add
add
add
add
add
add
jmp
in
jmp
lods
(bad)
or
cdq
int3
inc
jnp
out
add
fiadd
aas
push
mov
adc
xchg
add
add
add
add
add
cmp
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
jmp
sar
jmp
(bad)
jmp
cld
dec
out
jmp
mov
call
(bad)
inc
cdq
int3
inc
sub
add
int
sbb
add
add
add
add
pop
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
xchg
(bad)
(bad)
cs
fcos
cmps
out
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
repnz
cmp
fcos
pop
popf
iret
inc
xchg
ret
je
jmp
add
aaa
mov
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fcos
mov
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
call
inc
jmp
dec
mov
int3
inc
jnp
out
add
fiadd
xor
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
(bad)
mov
(bad)
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jmp
stc
dec
in
push
mov
call
movs
(bad)
inc
cdq
int3
inc
sub
add
push
mov
daa
scas
add
add
add
add
add
pop
add
add
add
sbb
add
add
add
add
add
int3
inc
out
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
cld
call
out
(bad)
cmp
out
push
stos
fcos
add
mov
in
push
outs
rol
sub
mov
add
xchg
add
add
add
adc
add
add
add
add
xchg
retf
cdq
int3
inc
out
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
call
inc
jmp
inc
pushf
iret
inc
fs
add
add
add
push
add
add
add
add
add
int3
inc
lock
dec
jecxz
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
dec
repnz
jl
in
add
add
add
add
add
add
cdq
int3
inc
cdq
int3
jmp
jmp
(bad)
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
mov
scas
repz
add
add
add
add
add
and
fcos
or
bnd
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
jmp
(bad)
inc
cdq
int3
inc
add
cdq
add
add
add
add
add
or
stos
fcos
es
fcos
fcomi
call
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
int3
(bad)
inc
cdq
int3
inc
adc
movs
add
add
add
or
mov
jmp
stos
fcos
sahf
(bad)
jmp
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
int3
(bad)
jmp
mov
inc
ss
mov
add
add
add
fcos
sub
jmp
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
jmp
(bad)
jmp
fcos
add
retf
add
add
adc
add
fdivr
xor
out
mov
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
jmp
(bad)
call
out
add
add
add
add
sbb
add
add
sub
push
mov
out
mov
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
jmp
(bad)
jmp
jmp
jecxz
add
jp
add
pop
add
add
add
add
add
out
push
mov
out
retf
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
jmp
(bad)
dec
jl
in
add
add
add
add
add
add
add
out
pop
mov
fdivr
int
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
call
mov
xchg
add
add
add
add
add
add
add
out
addr16
cmp
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
inc
cdq
int3
inc
add
call
add
add
add
add
out
(bad)
jg
repnz
cmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
dec
push
daa
lods
add
add
add
or
add
add
mov
(bad)
jle
repnz
cmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
(bad)
push
ss
mov
add
add
add
add
add
repnz
lahf
iret
(bad)
jmp
cld
(bad)
(bad)
mov
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
int3
(bad)
(bad)
fcos
(bad)
call
(bad)
add
rol
add
arpl
add
push
add
add
add
add
add
bnd
sahf
iret
call
(bad)
iret
in
stc
(bad)
in
stc
(bad)
(bad)
in
stc
(bad)
jmp
sti
(bad)
(bad)
fdivrp
(bad)
call
cld
(bad)
dec
std
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
int3
(bad)
(bad)
fdivrp
(bad)
jmp
out
add
fadd
add
jo
add
sbb
add
add
add
add
xchg
(bad)
(bad)
test
cmc
jmp
(bad)
jmp
mov
inc
cdq
int3
dec
lahf
iret
(bad)
cmp
fcos
imul
jmp
jmp
hlt
cld
(bad)
out
cli
(bad)
(bad)
out
cli
(bad)
jmp
sti
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
dec
je
call
add
add
add
add
add
add
add
(bad)
call
repz
dec
repz
(bad)
jl
stc
jmp
repnz
out
sub
fdivr
sbb
int3
dec
lahf
iret
dec
fdivr
(bad)
jmp
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
out
inc
jnp
out
add
add
add
add
add
add
add
(bad)
jmp
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
push
cmc
call
jmp
inc
jmp
(bad)
(bad)
fcos
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
jmp
(bad)
(bad)
out
(bad)
(bad)
call
repnz
inc
xchg
ret
add
xchg
add
add
add
add
add
add
add
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
inc
loop
setg
(bad)
call
std
(bad)
push
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
inc
cdq
int3
inc
add
sahf
add
add
add
or
add
add
cdq
int3
jmp
cmc
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
mov
iret
(bad)
aas
mov
(bad)
jge
out
(bad)
shr
(bad)
mov
icebp
stc
(bad)
cli
(bad)
(bad)
(bad)
cli
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
clc
(bad)
(bad)
(bad)
clc
(bad)
(bad)
call
lahf
iret
inc
ss
mov
add
add
add
add
add
(bad)
inc
sti
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
in
cmc
jmp
in
dec
out
xor
fcos
add
int3
jmp
lods
(bad)
(bad)
aas
mov
(bad)
jle
out
sahf
fsubr
(bad)
mov
clc
cld
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
call
repnz
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
aas
mov
inc
inc
pop
mov
add
add
add
in
jmp
stc
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
stc
(bad)
(bad)
in
stc
(bad)
(bad)
fdivr
(bad)
call
sti
(bad)
inc
cld
(bad)
(bad)
mov
(bad)
(bad)
call
stc
cld
push
bnd
in
dec
out
xor
fcos
add
int3
inc
fcos
push
mov
out
scas
fucomip
push
lods
(bad)
inc
imul
add
jmp
hlt
cld
inc
std
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
sti
(bad)
inc
call
fcos
dec
mov
(bad)
jns
out
mov
jmp
call
out
stc
push
cli
(bad)
push
cli
(bad)
(bad)
(bad)
(bad)
call
cld
(bad)
inc
std
(bad)
push
(bad)
(bad)
call
repnz
push
repnz
cdq
int3
inc
arpl
int
(bad)
mov
and
add
add
add
out
out
cld
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
std
(bad)
jmp
idiv
jmp
mov
inc
push
add
shl
mov
lds
xchg
(bad)
aad
movs
sar
cmp
(bad)
retf
out
test
out
(bad)
mov
cld
(bad)
(bad)
jmp
dec
lahf
iret
inc
add
pop
add
add
add
add
add
add
add
(bad)
jmp
(bad)
cli
std
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
(bad)
cli
std
(bad)
dec
fdivr
add
lahf
add
add
add
add
add
add
add
add
add
add
xchg
(bad)
and
nop
rol
add
add
(bad)
cdq
int3
inc
cdq
int3
inc
mov
sbb
add
push
add
sar
inc
mov
jmp
(bad)
or
dec
out
dec
in
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
mov
cmps
add
aad
cdq
int3
inc
xchg
(bad)
in
push
outs
cmp
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
aas
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
ud0
add
clc
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
lock
add
aas
add
lock
add
aas
add
lock
add
aas
add
lock
add
aas
add
lock
add
aas
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
cld
add
add
jg
add
add
add
add
inc
pop
inc
inc
add
add
(bad)
(bad)
inc
add
clc
pop
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
adc
add
add
add
add
add
and
add
add
and
test
add
add
xor
add
add
and
test
add
add
push
pop
mov
add
xor
shl
pusha
mov
sbb
push
and
call
mov
aaa
add
adc
sub
movups
adc
shl
jno
add
mov
cmp
pop
or
mov
ds
xor
jg
xor
(bad)
test
sbb
cmp
xor
pop
cmp
push
xor
mov
add
adc
mov
push
fs
cs
jmp
push
mov
pop
or
jmp
or
dec
sti
les
push
add
xor
xchg
mov
push
gs
push
inc
or
sub
imul
call
inc
xor
div
inc
pop
or
shl
idiv
xor
sti
mov
and
or
dec
mov
lods
xchg
mov
jmp
or
inc
xor
cmp
jne
mov
or
ss
call
mov
ins
ret
cmp
jmp
sar
xor
mov
rep
pop
cmp
jmp
mov
mov
ss
pushf
adc
fs
and
xor
jp
cmp
fist
push
gs
dec
test
movs
fild
push
xchg
cmp
sub
adc
mov
int3
mov
into
xor
push
push
pop
push
adc
out
pusha
pusha
push
std
leave
sbb
pop
push
xchg
xchg
mov
adc
jle
popa
xor
cmp
inc
mov
mov
lods
push
push
hlt
(bad)
or
push
inc
call
inc
inc
cmp
hlt
push
bndstx
push
dec
pop
rdpmc
test
xchg
mov
or
add
cmp
push
clc
lea
sbb
pop
cmps
adc
xor
push
sub
adc
test
xchg
dec
push
stos
and
int
inc
and
push
pop
pop
jecxz
and
test
fidivr
fisubr
rol
push
xchg
inc
jae
push
mov
retf
je
test
and
fdiv
inc
sbb
xor
stos
lea
add
and
pop
out
inc
xor
ror
adc
inc
in
adc
je
shl
inc
mov
jne
adc
lea
ds
and
inc
push
adc
outs
ret
clc
add
ficomp
ins
jbe
or
ret
and
dec
jne
and
movs
ror
cmp
pushf
add
test
mov
out
cs
jmp
and
clc
and
add
fs
push
fnstsw
outs
je
xor
and
pop
shl
inc
es
nop
sbb
mov
icebp
out
sbb
or
hlt
add
jmp
cmp
fs
push
push
cmp
push
ds
popa
xchg
jae
and
in
cmp
add
and
pop
and
xor
and
imul
mov
outs
popf
push
and
and
sub
lea
imul
sahf
jl
cwde
jp
xor
test
bound
pop
add
sbb
sub
add
inc
dec
dec
push
push
pop
cmp
sti
jg
or
daa
sub
dec
rdtsc
sub
mov
push
xchg
push
cmp
into
adc
inc
std
push
add
or
std
sub
jne
jmp
adc
(bad)
clc
push
mov
inc
inc
push
xchg
adc
sbb
and
adc
sahf
loope
shl
inc
sub
add
push
xor
push
pop
mov
loopne
mov
xchg
(bad)
xor
std
pop
cmp
inc
sbb
fldenv
out
push
nop
lods
xor
cli
push
mov
cld
clc
std
xchg
data16
xor
mov
inc
push
pop
dec
sahf
aad
and
outs
outs
(bad)
jb
jle
rol
dec
loope
add
or
test
add
retf
xor
and
nop
call
mov
je
scas
scas
xchg
addr16
xchg
push
cld
push
jmp
push
push
add
(bad)
clc
(bad)
ins
inc
inc
sbb
mov
pushf
lods
xchg
push
and
imul
and
or
inc
and
push
leave
adc
sub
jno
mov
add
popf
jne
sub
shl
outs
mov
call
mov
clc
or
mov
add
outs
jae
jns
fs
retf
push
stc
and
je
(bad)
push
add
push
or
add
adc
enter
pop
test
inc
push
stc
bound
push
xchg
and
push
or
mov
jmp
fild
or
xor
fstp
pushf
push
and
sbb
sbb
fdiv
and
sub
xchg
and
cmp
cmp
push
enter
xor
or
xchg
and
enter
xor
or
xchg
and
enter
xor
or
xchg
adc
add
loopne
and
loopne
enter
repz
sbb
or
or
adc
xchg
push
and
jns
mov
dec
jmp
cdq
mov
and
dec
push
xchg
arpl
outs
inc
test
and
dec
mov
and
mov
xchg
xchg
mov
dec
sbb
enter
aaa
out
or
mov
and
ja
jo
add
outs
je
inc
inc
dec
gs
popa
addr16
inc
outs
js
sbb
inc
fs
mov
sbb
outs
push
mov
mov
imul
mov
sti
cmp
arpl
je
imul
jo
fcom
and
dec
jne
push
js
inc
out
imul
arpl
(bad)
je
or
or
je
enter
jo
adc
fisttp
xchg
ins
xor
bound
inc
xchg
jbe
push
jns
pop
adc
test
jae
loope
adc
imul
aas
push
dec
add
push
jae
add
fs
cwde
mov
popa
push
mov
xor
jns
test
ins
std
mov
push
push
lahf
cli
inc
pop
mov
(bad)
(bad)
sti
gs
arpl
inc
inc
inc
loope
mov
inc
push
inc
sbb
jp
adc
dec
data16
jns
iret
outs
dec
or
or
dec
add
push
mov
or
fisub
jo
push
mov
es
sub
aas
outs
test
inc
xor
or
jns
sbb
pop
outs
sbb
sahf
(bad)
jg
cld
loope
push
inc
int3
mov
ds
sbb
push
sub
mov
jns
push
cmps
out
pop
inc
adc
xchg
push
fidivr
and
imul
pop
inc
leave
xchg
shr
adc
ss
dec
xor
aaa
out
cs
gs
xchg
jp
mov
push
dec
add
push
inc
push
inc
pop
dec
sbb
jb
xchg
data16
push
inc
iret
add
jb
in
sub
push
ja
imul
and
in
enter
arpl
data16
ins
es
sar
xor
sub
loopne
fs
and
in
cwde
dec
and
jae
jnp
ja
cmp
mov
shl
mov
jb
jns
call
es
stos
sbb
dec
xor
inc
add
ins
(bad)
jae
gs
inc
retf
nop
dec
repnz
popaw
imul
ins
jae
cmp
sub
ret
div
jae
add
add
add
add
add
add
add
add
adc
call
and
add
add
mov
inc
add
jge
add
inc
add
add
fadd
inc
add
add
xchg
sbb
mov
aam
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
dec
inc
dec
pop
imul
gs
cs
add
cmp
xor
add
sbb
fiadd
pop
popa
and
add
popa
mov
dec
push
jae
cmp
scas
xchg
scas
scas
clc
and
mov
(bad)
adc
pop
nop
xchg
test
out
inc
dec
mov
loopne
popf
cmps
arpl
dec
xchg
pop
push
(bad)
shl
jecxz
in
bound
retf
mov
mov
dec
mov
pop
sbb
sbb
and
xchg
pop
addr16
lahf
out
pop
sub
adc
adc
and
jnp
lock
call
sbb
inc
xlat
cmps
out
push
nop
mov
jl
xor
stos
sub
push
push
lock
stos
adc
retf
xchg
add
shl
call
das
add
rcl
push
mov
mov
xchg
ds
iret
scas
movs
mov
ds
dec
xor
push
stc
cmp
and
pusha
add
or
inc
pop
das
addr16
cli
inc
pop
adc
mov
popf
leave
je
sbb
sahf
sar
or
jbe
dec
jo
out
mov
out
nop
and
popa
or
and
mov
pop
cmps
push
outs
pop
mov
dec
dec
fnstsw
push
(bad)
xor
adc
ins
cmp
fdivr
les
cmp
cmc
mov
lods
sahf
push
inc
cmp
ds
jmp
mov
nop
jmp
adc
xchg
fdivr
mov
xor
push
sub
xchg
das
mov
add
mov
dec
cli
dec
inc
mov
sar
pop
data16
pop
loopne
(bad)
daa
stos
ret
dec
dec
push
iret
aad
pop
popf
mov
dec
rol
inc
pop
es
mov
ret
(bad)
xchg
mov
mov
inc
push
ins
xor
cmc
jae
retf
xchg
cmp
mov
xchg
mov
fwait
int3
int3
jecxz
int
stos
dec
mov
xchg
inc
inc
jp
out
inc
jl
jo
mov
cmp
js
sub
add
push
add
push
dec
iret
or
call
lock
inc
(bad)
sub
nop
push
dec
push
xchg
push
jmp
cdq
sub
add
mov
mov
pusha
add
mov
cmp
scas
push
shr
pop
in
pop
xchg
addr16
mov
cmp
std
push
add
lds
push
pushf
hlt
sub
pop
jp
dec
mov
xchg
jbe
mov
out
push
ins
dec
jmp
inc
popa
cmovo
icebp
dec
jg
cmp
add
adc
test
or
add
push
sbb
retf
sbb
xchg
mov
jge
cli
mov
in
cmp
cmp
mov
fst
add
je
xchg
pusha
dec
adc
inc
ret
ret
sub
in
jmp
daa
jno
cwde
sub
pop
fldenv
sar
jmp
out
sub
mov
xchg
add
cli
int
mov
pushf
inc
(bad)
bound
jns
imul
in
push
cld
xchg
sbb
outs
inc
push
mov
pop
mov
int
lds
out
outs
push
out
rcl
gs
shr
push
mov
cmc
(bad)
jge
jmp
and
dec
cmp
imul
fisub
push
pusha
lods
icebp
(bad)
mov
es
(bad)
push
xor
push
or
invd
addr16
adc
dec
cli
pop
and
ins
cmps
push
imul
mul
in
add
mov
(bad)
jo
imul
mov
sub
gs
into
dec
out
arpl
retf
mov
int3
popf
sub
lods
cmp
push
ficom
nop
sbb
loope
cmp
pop
daa
retf
std
sub
xor
(bad)
gs
fsubr
jae
(bad)
add
fmul
retf
dec
sub
xchg
fs
loop
mov
cmp
xlat
test
rcr
sub
retf
sbb
in
fcom
int3
adc
ins
pop
leave
mov
lods
mov
fdiv
sbb
(bad)
cmc
dec
shr
std
mov
out
mov
xchg
lods
jl
movs
stc
jns
inc
addr16
push
retf
in
adc
test
jnp
inc
dec
(bad)
(bad)
(bad)
les
xor
cs
fnclex
pop
popa
xor
lods
xchg
fcomp
scas
mov
cmps
lock
(bad)
mov
sub
in
sahf
imul
and
mov
jl
adc
push
ja
not
mov
jno
push
mov
pop
push
pop
rcr
in
mov
pop
xor
pop
and
xchg
mov
movs
enter
mov
imul
fld
push
add
xchg
push
mov
xchg
pop
jecxz
sti
adc
add
idiv
mov
scas
add
mov
mov
sub
int3
adc
sub
lea
sub
xor
jns
js
xchg
pop
xchg
dec
sbb
rol
or
jecxz
pop
dec
sub
fistp
out
mov
frstor
in
call
call
lahf
scas
ins
cmp
outs
sahf
repz
jge
sbb
sar
jl
and
sbb
pop
jmp
xor
in
loop
and
push
les
or
cmp
movs
call
sbb
shrd
sar
add
lods
pop
add
fist
rol
dec
push
dec
push
add
lahf
test
dec
in
fbstp
jecxz
fsubr
sub
add
arpl
arpl
push
out
or
jecxz
in
iret
std
in
sti
inc
sub
mov
push
xchg
adc
sbb
mov
sub
jo
imul
push
mov
rcr
sbb
jmp
mov
mov
push
and
mov
mov
xor
pop
dec
out
and
outs
(bad)
mov
mov
gs
lods
jp
jmp
std
and
into
loope
add
xor
jno
adc
sbb
mov
push
imul
aad
dec
aad
das
push
sahf
sub
cmp
dec
jnp
imul
jno
ror
xchg
daa
loopne
in
cli
or
inc
and
out
xchg
jno
aad
ror
retf
jns
popa
xchg
jmp
jp
adc
ds
sub
pop
pop
fmul
adc
adc
dec
cwde
scas
(bad)
loop
in
clc
jae
push
dec
ins
pop
leave
adc
clc
sbb
jle
clc
inc
xchg
mov
outs
jne
jecxz
mov
mov
jl
data16
inc
mov
pushw
xor
mov
iret
inc
inc
adc
pop
pushf
arpl
int
out
sub
dec
ficom
cmp
fisubr
mov
or
ja
inc
push
xchg
dec
loop
test
cmp
sub
(bad)
xor
shl
jb
cmp
pop
adc
mov
inc
xor
push
cmc
mov
and
and
ror
movs
cmps
scas
and
cmp
out
ror
mov
pop
push
lea
les
mov
stos
sbb
shr
add
test
test
cmps
push
jae
fist
mov
mov
xchg
test
jmp
push
inc
push
ret
jmp
adc
out
sbb
inc
xor
sbb
sti
jmp
sbb
push
icebp
and
std
lahf
test
xor
add
pop
push
pop
adc
js
loop
push
xor
sar
in
and
outs
xchg
jg
dec
and
mov
(bad)
sar
mov
pop
icebp
outs
sbb
movs
adc
or
inc
mov
xchg
ss
jns
jno
scas
or
pop
cmps
jp
mov
mov
enter
xchg
mov
ins
je
cs
imul
jne
sub
out
dec
xor
mov
mov
dec
fidiv
sar
cmp
pushf
ficomp
iret
es
les
dec
adc
push
fcomp
(bad)
scas
push
mov
rol
push
pop
mov
in
xchg
adc
add
aas
cmp
xlat
xor
sbb
(bad)
fild
test
adc
jge
xor
dec
es
test
rcl
lock
push
pusha
jnp
pop
pop
ins
sbb
(bad)
sbb
mov
test
inc
add
clc
pop
or
daa
jae
xchg
or
push
pop
repz
pusha
aas
pop
jmp
shr
pop
pop
sbb
in
pop
add
dec
fs
sahf
mov
mov
fwait
dec
aaa
js
retf
pop
es
iret
or
scas
mov
push
inc
push
mov
inc
dec
xchg
dec
rol
push
pop
ins
pop
cmp
or
cmps
fidivr
fsub
lea
cwde
data16
pop
fbld
mov
(bad)
add
add
dec
and
in
dec
loope
mov
adc
pop
mov
(bad)
mov
retf
cmps
adc
stos
pop
repnz
push
xchg
sub
push
retf
lods
push
stos
es
stc
imul
push
mov
push
(bad)
stos
mov
jmp
sub
push
inc
bound
rcl
sub
pop
imul
sub
mov
and
mov
pusha
imul
pcmpgtw
repnz
aas
push
push
loopne
jmp
ja
mov
ins
sbb
into
xlat
cdq
xchg
sbb
push
(bad)
mov
out
call
fsub
hlt
iret
aas
or
xchg
in
push
adc
shr
popa
inc
inc
jp
pop
in
inc
and
mov
retf
jne
mov
mov
push
jb
xchg
mov
jge
dec
or
pop
dec
xchg
adc
mov
push
test
lds
or
mov
mov
ret
or
add
add
xchg
xchg
jbe
and
sub
mov
inc
scas
mov
dec
pop
xor
jmp
mov
jno
push
retf
or
dec
cmp
jle
sub
cs
or
clc
loope
adc
sbb
retf
imul
in
push
popf
mov
into
leave
das
xlat
jmp
and
or
mov
fiadd
jle
push
inc
shl
push
ret
sub
cmp
lods
mov
retw
hlt
test
scas
inc
div
stc
mov
lea
dec
retf
xlat
ret
xchg
and
ror
cmps
cmp
push
pop
mov
imul
in
in
inc
pop
jmp
popf
fisttp
scas
(bad)
idiv
(bad)
call
fisubr
mov
mov
call
mov
jge
ret
xor
mov
jmp
neg
jmp
xor
adc
inc
mov
push
ror
popa
aaa
inc
add
adc
fistp
jge
sbb
(bad)
movs
adc
lods
mov
ins
dec
pop
(bad)
test
int
push
pop
jns
cli
leave
scas
std
(bad)
shl
or
sbb
jmp
nop
xor
jne
inc
add
mov
xchg
dec
cli
outs
scas
gs
cwde
xor
pop
ja
inc
stos
outs
mov
fisttp
sbb
sub
fmul
dec
inc
jge
out
test
not
push
adc
inc
rcl
ins
sub
rcr
mov
int3
jl
lods
sub
add
mov
out
mov
xor
sbb
jno
(bad)
push
mov
fstp
stos
and
xor
stos
mov
xor
jl
stos
clc
dec
cli
ret
add
pop
repnz
pop
mov
or
nop
mov
and
jmp
test
pop
arpl
popf
(bad)
or
imul
(bad)
outs
xchg
cwde
icebp
pop
bound
dec
xchg
cmps
aad
imul
lock
rcr
mov
cld
lods
(bad)
popf
test
out
adc
test
scas
out
inc
pop
repnz
pop
mov
xchg
dec
addr16
jle
xchg
xor
push
and
test
das
jno
add
ss
push
jl
cmp
push
mov
adc
shl
xlat
mov
pop
xor
mov
jmp
stos
stos
sub
arpl
aad
adc
xor
and
push
sub
dec
sbb
std
inc
and
mov
inc
cmp
pop
movs
imul
jno
sahf
cmp
mov
ret
out
jo
stos
lds
into
call
cmp
scas
adc
or
xchg
pop
push
daa
xchg
loope
lods
xchg
xchg
and
mov
gs
iret
fistp
idiv
mov
(bad)
lods
mov
push
mov
xor
mov
push
push
inc
repz
jno
mov
stc
das
jp
je
mov
mov
and
mov
clc
not
sub
fmul
and
gs
xchg
adc
cmp
outs
stos
icebp
mov
repnz
je
dec
js
pop
or
hlt
push
push
into
dec
jmp
or
inc
iret
fsub
mov
dec
add
xchg
icebp
xor
out
lock
mov
cs
aam
imul
(bad)
add
(bad)
jo
pusha
(bad)
gs
mov
les
push
dec
(bad)
jae
and
leave
push
inc
jns
pop
xor
out
iret
aam
in
xor
and
mul
(bad)
popf
fsubr
lods
jp
daa
(bad)
jg
mov
jmp
clc
stos
es
jmp
ret
cmp
rcl
lock
scas
aad
inc
pop
mov
sbb
retf
pop
in
test
dec
daa
lock
push
push
mov
inc
call
xchg
js
(bad)
(bad)
xchg
xchg
retf
sbb
ins
xor
add
or
ds
addr16
mov
(bad)
hlt
and
fadd
stc
rol
sbb
push
pushf
mov
xchg
int
adc
idiv
add
jl
xchg
sbb
jmp
sbb
adc
pusha
shl
jg
and
mov
sbb
(bad)
xlat
xor
lea
lds
pop
inc
imul
arpl
jmp
pop
sub
int
stc
sbb
jp
push
ins
add
aam
cmc
(bad)
or
pop
mov
jb
fmul
imul
cmc
jbe
cld
test
push
dec
stc
stos
adc
out
sahf
mov
addr16
xchg
int
out
add
push
inc
pop
cli
xor
mov
or
push
rol
add
adc
pop
pop
aas
arpl
pushf
jb
imul
xchg
cmp
mov
inc
mov
push
sbb
jo
arpl
push
xchg
pop
(bad)
jle
cld
lahf
dec
fidiv
mov
call
push
stos
cs
test
mov
push
arpl
ds
rol
mov
mov
(bad)
cld
call
lods
lock
jnp
sbb
ss
movs
mov
and
scas
push
aas
aam
scas
mov
cmp
adc
repnz
jp
lahf
xor
sub
mov
and
mov
loop
mov
lea
push
adc
add
cmp
adc
mov
add
cwde
jle
daa
out
cmp
das
rcl
mov
dec
test
loop
xchg
and
dec
retf
pop
dec
mov
(bad)
repz
nop
mov
ja
mov
(bad)
dec
push
ja
dec
pop
inc
test
xor
mov
mov
mov
jno
or
pop
(bad)
adc
(bad)
jne
shl
jns
movs
imul
fist
pusha
fnstsw
adc
mov
retf
sbb
sub
sbb
dec
(bad)
in
xchg
dec
inc
retf
retf
pushf
xor
movs
sbb
and
xlat
push
mov
adc
in
or
lods
jb
test
shl
(bad)
iret
xor
add
daa
daa
imul
fisubr
ret
fs
xchg
mov
pop
jecxz
xor
aas
fadd
clc
std
fsubr
pop
xchg
jle
ja
retf
js
adc
pop
cmp
cmps
daa
mov
cli
(bad)
sbb
es
fs
cmp
add
jnp
dec
addr16
into
jb
nop
pop
jg
call
std
inc
pushf
loope
jp
cmp
jne
jb
mov
mov
pop
or
mov
popf
sbb
scas
sbb
arpl
fwait
leave
aas
rol
dec
loopne
sti
fild
in
add
addr16
xor
retf
and
shl
inc
js
je
jne
es
and
pop
jmp
stos
ss
sahf
jns
shl
popa
out
cmc
jne
icebp
add
iretw
jnp
cld
imul
pop
out
jnp
xchg
xor
shr
ins
out
(bad)
sbb
cmp
addr16
scas
std
cs
pop
mov
retf
or
mov
cld
xor
aam
clc
sbb
leave
inc
xor
dec
cmp
ja
xchg
or
mov
idiv
loop
xchg
lahf
jle
mov
sub
mov
mov
dec
or
add
dec
cdq
test
sbb
cmps
je
ins
hlt
cwde
add
out
pushf
retf
rcl
sbb
mov
dec
mov
in
lock
cli
idiv
clc
adc
hlt
popf
pop
sbb
cmps
fstp
xchg
mov
xor
mov
dec
test
dec
iret
int
addr16
pop
and
mov
in
inc
enter
push
jo
jge
mov
pop
lods
mov
xchg
shr
fs
xchg
les
cld
loop
mul
cmp
xchg
jmp
pop
(bad)
dec
mov
mov
stc
inc
pop
neg
xchg
xchg
mov
iret
imul
sub
dec
push
test
out
sub
mov
cmps
lock
mov
xor
fisttp
fdiv
cmp
in
sbb
das
and
pop
sub
push
scas
sbb
and
fst
retf
mov
imul
ret
fist
loope
or
pop
rcl
jge
ins
hlt
rep
push
dec
dec
mov
and
aaa
fld
sbb
mov
inc
push
xor
sahf
sti
push
dec
jp
or
push
xor
stos
mov
loop
push
adc
push
xor
or
(bad)
or
mov
and
mov
sbb
call
cmps
je
in
js
adc
mov
and
test
stos
add
in
push
and
fmulp
dec
in
sbb
aam
(bad)
aaa
inc
jns
loope
idiv
pop
jecxz
out
jge
stos
mov
scas
daa
add
and
daa
repz
data16
add
sti
clc
das
int3
push
adc
jne
dec
xchg
stc
mov
imul
call
mov
dec
dec
pusha
xlat
jecxz
jno
xor
fist
sub
out
pushf
fs
scas
sbb
mov
cmps
cmp
iret
js
fsub
mov
jae
mov
cdq
or
sbb
and
add
mov
jg
or
cld
movs
dec
in
dec
sub
test
and
mov
es
push
push
pop
mov
ret
fidiv
mov
enter
cmp
sbb
test
nop
loopne
lea
or
jl
ret
int3
mov
arpl
xor
mov
scas
popa
and
aaa
mov
fbstp
test
(bad)
nop
es
pop
ret
test
pusha
sti
js
mov
pop
jl
mov
and
mov
push
mov
mov
push
mov
push
xchg
add
fcomp
adc
out
xchg
sub
stos
sub
and
add
jne
jge
add
mov
fstp
dec
repz
xchg
and
call
adc
ins
mov
dec
and
enter
inc
lock
inc
out
fdiv
mov
mov
fidivr
mov
loope
push
hlt
fs
push
add
in
sbb
jmp
jl
das
push
mov
mov
sbb
aas
pop
sub
jae
inc
mov
imul
pop
mov
rol
out
into
mov
mov
cmp
jns
popf
(bad)
retf
mov
push
sbb
adc
add
mov
test
pop
or
jo
mov
xchg
dec
les
hlt
stc
jle
xor
xor
in
fidivr
pop
leave
push
shufps
pop
(bad)
or
adc
int3
mov
loope
pushf
pop
int
int3
jns
mov
and
sbb
popa
push
xchg
adc
mov
and
loop
outs
bound
or
or
mov
xchg
aas
test
xor
mov
mov
cmp
shl
jnp
sub
out
addr16
cmp
jp
or
xor
mov
imul
sti
mov
pushf
jge
adc
xor
nop
push
sub
or
pop
popf
mov
mov
out
push
xor
call
in
ins
and
inc
jno
stc
pop
add
pop
jmp
retf
push
arpl
push
(bad)
mov
out
int
enter
adc
pop
(bad)
in
add
mov
inc
retf
inc
ss
ret
(bad)
jns
into
or
dec
xchg
sbb
xchg
cmp
xchg
stos
cmps
shl
inc
sbb
in
inc
into
aad
fmul
mov
int
icebp
(bad)
stc
mov
jmp
sub
stc
sti
xlat
push
pop
inc
neg
int3
sti
jae
(bad)
xchg
mov
sub
sbb
inc
add
adc
sbb
push
inc
(bad)
adc
into
lock
outs
or
sub
mov
push
lds
or
mov
loopne
adc
jo
xchg
mov
rcr
inc
cwde
scas
retf
jo
or
xor
es
(bad)
or
jno
retf
fist
jmp
adc
das
jle
rcr
or
xor
sub
scas
fisubr
fnstenv
stos
in
push
fld
cwde
in
or
inc
jecxz
xchg
push
or
xchg
out
call
lock
adc
inc
push
mov
xchg
mov
inc
es
dec
cmp
lods
(bad)
retf
out
scas
loope
out
mov
jecxz
dec
mov
das
mov
sub
and
test
mov
bound
jg
ins
fiadd
sub
and
add
sbb
ror
adc
jo
add
jmp
test
and
sub
xchg
std
popa
cmc
add
rcr
nop
repz
bound
mov
pop
add
mov
and
(bad)
fwait
xor
ds
ret
inc
sub
into
cmp
sbb
sbb
les
sbb
shl
fbld
dec
mov
cmp
pop
jno
xchg
sub
cmp
loopne
mov
in
jbe
jle
popf
pop
xchg
(bad)
enter
mov
or
test
dec
cld
call
xchg
aas
inc
leave
pushf
scas
aam
pextrw
jbe
mov
std
cwde
mov
(bad)
clc
and
int
jmp
je
xor
add
xlat
xor
add
iret
jbe
adc
loop
int3
and
lahf
popa
sub
dec
nop
or
pop
int3
sub
aam
adc
(bad)
test
and
push
mov
adc
sbb
fucom
inc
loop
nop
adc
aam
sub
adc
loop
cld
push
push
clc
scas
mov
adc
(bad)
(bad)
sub
enter
xchg
out
add
popf
adc
dec
cmp
xor
in
(bad)
(bad)
mov
retf
sub
or
les
stos
fisubr
xchg
imul
(bad)
and
sbb
movs
xchg
loop
xchg
(bad)
jo
xchg
sub
leave
mov
outs
xchg
(bad)
jmp
mov
das
or
fwait
out
loopne
or
not
pusha
stos
jbe
std
retf
mov
push
data16
sbb
and
mov
(bad)
ins
push
adc
lock
aaa
pop
mov
fst
sbb
icebp
inc
cdq
jae
aaa
sti
dec
in
mov
and
ja
popa
dec
xor
sub
xchg
push
shr
mov
jecxz
mov
mov
out
and
lock
xchg
add
mov
dec
adc
jg
push
add
xchg
leave
fs
(bad)
mov
jmp
sub
int3
iret
mov
js
xchg
dec
mov
cmp
push
jg
or
pop
outs
cld
mov
in
add
xchg
outs
mov
ins
adc
adc
(bad)
pop
pop
or
and
repz
mov
imul
cmp
jae
push
sti
push
jg
popa
push
add
push
nop
sbb
jp
sub
push
jnp
adc
inc
sbb
dec
xor
je
xchg
cs
xor
aad
aad
fdivp
(bad)
popf
(bad)
jmp
ds
mov
ret
sti
mov
jmp
push
sti
sar
jg
(bad)
nop
retf
push
mov
or
lock
popa
lock
(bad)
jae
out
sub
and
mov
ins
icebp
inc
jp
hlt
fs
sub
pop
(bad)
pop
loopne
add
sub
bswap
mov
(bad)
cdq
lock
inc
movs
ds
repz
pop
stos
sub
push
adc
dec
jo
push
(bad)
jnp
inc
cmp
shl
and
jp
aam
loopne
call
push
hlt
fidiv
in
repz
(bad)
movs
mov
cmc
jae
repz
pop
pop
dec
stos
or
fwait
arpl
mov
cs
aaa
mov
inc
addr16
fdivr
les
stc
dec
fs
loope
ja
lahf
jnp
sar
push
pop
lahf
cdq
pop
shl
jg
mov
lods
mov
mov
xor
repz
test
les
and
xor
stos
rcr
cmp
jbe
mov
push
call
and
and
aaa
adc
xor
xchg
ins
jl
mov
xor
xor
sub
mov
dec
sbb
(bad)
int3
sub
in
fs
jge
std
clc
not
daa
mov
xchg
leave
sti
fcomi
mov
xchg
xchg
push
ss
ins
test
in
xchg
sbb
sub
in
jb
cdq
jecxz
mov
inc
inc
call
pop
add
xchg
or
pusha
mov
inc
pusha
add
push
jb
and
cmp
lea
scas
stos
mov
xor
cdq
aaa
cmc
mov
add
repnz
sbb
jmp
shr
frstor
mov
daa
or
aaa
sti
push
nop
and
sbb
xor
mov
or
js
out
inc
mov
jmp
pop
outs
in
enter
scas
jmp
xchg
push
addr16
xor
push
pop
and
fwait
mov
(bad)
jbe
mov
mov
cwde
add
pop
xchg
xchg
pop
ja
mov
test
ins
ja
loopne
aam
mov
jmp
mov
test
das
and
bound
adc
repz
loope
fist
cmp
sub
mov
sub
push
(bad)
xchg
mov
cmc
add
sub
push
sub
cdq
daa
repnz
or
xor
lea
scas
lods
or
je
cmp
add
ret
mov
inc
cmp
shr
ins
pop
pop
nop
arpl
das
xor
adc
loopne
add
xor
and
and
jp
adc
xor
add
retf
jle
cmps
(bad)
in
and
outs
xor
dec
xor
call
retf
cmp
jle
loope
test
xchg
ins
and
scas
enter
mov
mov
(bad)
adc
out
pop
dec
test
shl
xor
jnp
ss
cmp
dec
stos
mov
int
call
pop
pop
push
aaa
mov
lock
cdq
nop
out
je
adc
imul
xchg
cli
rol
push
ja
cmc
mov
mov
push
push
repnz
fdivr
cwde
pop
cmps
cs
push
mov
and
mov
call
xlat
xor
cmp
add
movs
inc
xchg
or
ds
xchg
addr16
xor
cmps
std
scas
adc
out
sbb
shr
lahf
mov
mov
aad
inc
fstp
add
stos
(bad)
nop
xchg
mov
aad
add
cli
fiadd
xor
xor
adc
jl
mov
test
or
stos
mov
cmp
sbb
xchg
lock
out
xor
shl
jmp
push
test
js
mov
ins
jnp
push
dec
push
in
sub
add
fwait
call
dec
inc
pop
jo
xchg
push
xlat
lock
mov
push
div
jmp
fisttp
sub
outs
mov
dec
icebp
outs
mov
popf
or
mov
sub
cmp
pop
push
and
mov
jae
cmc
push
mov
xchg
adc
push
and
dec
test
hlt
push
scas
jecxz
shr
pop
dec
sbb
dec
mov
or
cmp
cmp
enter
out
add
leave
sbb
mov
popa
adc
push
sub
sub
add
push
xor
test
into
xchg
shl
retf
in
shr
cs
pop
cmp
fld
jae
enter
sub
lods
lds
imul
inc
shl
popa
inc
(bad)
gs
xchg
push
sti
jae
adc
popf
jbe
pop
mov
pushf
jbe
jg
xchg
fcom
cmc
add
mov
jno
stos
cs
add
in
push
pop
fidiv
hlt
or
fdivr
pop
add
mov
out
mov
jmp
ret
fistp
cmp
inc
adc
mov
sub
inc
cs
mov
mov
icebp
ret
jbe
shr
rcr
xchg
pushf
cmps
add
inc
loopne
jg
cmp
fstp
mov
and
in
iret
mov
cmp
jp
jmp
imul
aam
rcl
push
stos
ret
ret
mov
hlt
mov
sbb
mov
data16
out
mov
call
dec
and
(bad)
dec
fsubr
or
lds
lods
mov
sbb
adc
and
add
push
dec
inc
xchg
inc
pushf
pop
xor
or
jmp
popa
loope
enter
add
and
adc
mov
sub
pop
xor
fwait
or
cmp
(bad)
movs
jle
xor
mov
jnp
das
xor
test
loope
mov
movs
mov
test
outs
sub
pop
sub
cmp
jmp
dec
pop
mov
xchg
jmp
idiv
cld
jge
aad
inc
mov
mov
mov
cli
mov
dec
gs
jecxz
jle
repnz
add
mov
ja
fisubr
stc
(bad)
xor
cmp
stos
in
fs
in
jmp
xlat
int3
iret
mov
and
stos
push
pop
push
in
and
or
loopne
mov
sbb
(bad)
fdivr
call
test
iret
(bad)
push
inc
in
cs
dec
and
retf
std
dec
xchg
pop
add
test
pop
shl
xchg
iret
fwait
cmp
loop
stos
outs
test
lods
(bad)
ins
(bad)
cmp
or
jmp
popf
xor
mov
fild
pushf
dec
sub
or
and
xchg
(bad)
daa
repz
rol
push
addr16
je
movs
pusha
push
or
cmp
popf
ficom
data16
xor
dec
cli
sub
and
retf
inc
mov
jmp
jecxz
lahf
loopne
loope
xlat
dec
adc
mov
movs
stos
cmp
cld
adc
cs
push
sar
jecxz
xchg
xchg
fisubr
xchg
loopne
jbe
ins
inc
push
aam
outs
sub
mov
mov
jle
test
push
test
xor
jns
xchg
pop
pop
xchg
imul
push
fs
cmp
arpl
mov
(bad)
xlat
inc
pop
mov
sbb
mov
push
pop
cmp
movs
xor
add
mov
ins
mov
dec
sub
and
push
sub
mov
outs
(bad)
fiadd
retf
cmp
(bad)
inc
xchg
jl
dec
cmova
adc
push
ror
xor
dec
adc
inc
xchg
minps
adc
jge
fsub
pop
stc
mov
ror
mov
push
add
sbb
lea
jbe
fcmovnb
and
push
not
out
sbb
jne
jmp
out
stos
rcr
or
ds
and
add
(bad)
and
jge
cld
pop
mov
shl
out
mov
jg
jmp
mov
xor
ror
rol
sbb
and
jae
mov
cmp
fs
aad
jp
dec
mov
dec
(bad)
xor
adc
stos
jae
ins
popa
xchg
ds
(bad)
push
shr
push
stc
or
xchg
cmp
cli
mov
pushf
js
ins
pop
inc
sbb
and
adc
outs
mov
pop
xchg
or
inc
inc
or
repz
jmp
pop
or
loope
(bad)
cmp
dec
je
leave
push
in
xchg
jae
ins
leave
out
or
dec
repnz
pop
xor
cmp
cmp
mov
xor
lock
xor
stos
dec
mov
cmp
xchg
jo
imul
jnp
and
test
pop
scas
dec
mov
inc
push
mov
ja
pop
ja
movs
or
pop
mov
popa
repz
movups
int
xor
lds
dec
mov
adc
ret
sbb
cmp
out
push
jl
hlt
imul
mov
sbb
xchg
adc
cmp
pusha
add
dec
(bad)
jns
mov
retf
adc
mov
push
xor
inc
pop
(bad)
xchg
rcr
xchg
cmp
call
mov
sbb
and
inc
dec
fidiv
aam
rcl
mov
or
(bad)
retf
jg
pop
jae
jo
stos
xchg
push
popf
xor
sbb
inc
rol
int3
cmps
cli
and
sbb
dec
cld
outs
adc
inc
movs
jbe
sub
loop
int
int
movs
aad
add
lods
(bad)
fcomp
sbb
push
inc
sti
xor
cmp
retf
fild
jp
push
fxrstor
mov
and
dec
mov
lds
imul
sub
add
inc
pop
cmps
xor
add
pop
dec
pop
jp
lock
ins
cs
movs
cmp
jg
fist
fs
cmps
test
xor
sahf
jae
mov
xchg
xchg
leave
call
sahf
jg
and
fwait
test
pop
aam
pusha
mov
pop
inc
cmp
int3
sti
repz
in
mov
arpl
ins
fisttp
push
int3
in
inc
inc
rcr
sub
mov
add
push
sahf
mov
cmp
mov
and
retf
loope
adc
retf
repnz
call
mov
cwde
aas
loop
pop
repz
adc
stos
sub
(bad)
cmp
cdq
pushf
mov
xchg
sbb
cmp
push
jmp
int3
adc
jno
dec
pushf
add
adc
outs
mov
push
scas
push
xor
add
fcom
jge
out
mov
(bad)
(bad)
jecxz
cmp
push
add
repz
push
ja
(bad)
loopne
jp
cmp
lds
jbe
cmp
inc
repz
loope
mov
(bad)
xchg
mov
es
(bad)
fild
ret
sbb
in
jl
test
adc
hlt
push
call
or
out
push
cmps
fs
push
add
xor
or
lahf
into
mov
not
pop
pop
movs
ret
mov
in
fwait
(bad)
sti
repnz
popf
cdq
hlt
popf
jo
and
mov
pop
ficom
and
ror
dec
ret
in
dec
test
mov
push
adc
fucomi
cli
shl
xchg
pop
pushf
repz
mov
inc
mov
inc
mov
mov
and
mul
loopne
mov
adc
ror
xchg
xor
adc
arpl
cmp
aam
xchg
inc
adc
push
lds
sub
repz
add
lods
push
(bad)
add
xlat
sub
dec
stc
ins
push
pop
sar
in
dec
add
out
pop
mov
ins
mov
clc
lods
dec
mov
test
movs
loop
adc
lock
push
mov
sar
clc
in
or
das
mov
push
jb
dec
jo
icebp
lahf
jecxz
jmp
pop
sub
out
dec
ret
push
pusha
push
jb
ror
cmc
pop
xor
and
test
dec
inc
mov
mov
(bad)
enter
gs
popa
xor
movs
mov
sub
and
sub
ret
push
icebp
sub
sub
jns
movzx
jb
mov
sbb
and
dec
push
movs
add
ja
mov
fimul
xchg
sbb
ds
ucomiss
push
inc
mov
mov
or
retf
cmc
test
rcl
dec
sbb
add
cmp
and
call
pop
pushf
stos
je
rol
push
hlt
aaa
push
add
(bad)
popa
inc
mov
das
mov
aas
out
push
(bad)
pop
stc
lods
and
inc
lock
cdq
lock
push
pop
aam
or
jl
cmps
outs
mov
xchg
sub
out
js
xchg
fsubr
dec
int
jge
repnz
rol
ficomp
push
int3
add
mov
cmps
and
xchg
arpl
retf
sbb
jle
dec
inc
dec
jae
fistp
sbb
or
add
lahf
pop
aas
mov
f2xm1
fild
lods
and
or
adc
data16
add
sbb
pop
mov
or
pusha
lods
cmps
pop
sbb
daa
popa
dec
inc
xchg
cmp
cmp
aad
cmp
ja
lods
int3
(bad)
push
xlat
pop
repz
push
mov
loope
dec
add
add
mov
add
mov
sub
push
or
xor
push
push
mov
push
cmp
push
push
sub
aaa
(bad)
mov
inc
movs
push
mov
mov
or
dec
push
push
mov
add
mov
sbb
pop
push
adc
cmp
(bad)
jmp
mov
xchg
xor
pushf
xchg
and
push
aas
mov
fdivr
idiv
out
push
lock
sub
(bad)
fwait
jbe
dec
call
pop
and
fsubrp
sub
rcl
aam
ret
xor
jns
leave
inc
sub
dec
ss
and
add
repz
xchg
lea
xor
push
fmul
inc
gs
gs
das
mov
sub
test
(bad)
cmp
jns
sbb
pushf
(bad)
je
data16
xor
or
mov
add
xchg
cmp
cmp
fild
or
sub
mov
add
jmp
dec
scas
ins
(bad)
pop
jne
(bad)
mov
fsubr
sub
or
fwait
jb
popf
add
imul
imul
fucom
out
inc
add
cld
adc
les
cmp
in
movs
out
cmps
pusha
pop
mov
mov
mov
in
inc
pop
mov
push
dec
loop
inc
or
outs
dec
(bad)
push
jns
clc
or
(bad)
jle
pop
sub
mov
sub
cmps
push
dec
dec
int
cmp
jl
jge
lock
mov
dec
les
ret
inc
popa
cmp
int3
fucomi
fiadd
dec
outs
in
dec
inc
inc
sub
inc
sbb
mov
lods
push
ret
pop
mov
xor
bnd
pop
fstp
ror
xchg
cld
dec
mov
(bad)
cmp
cwde
adc
sub
std
dec
inc
mov
fwait
xchg
sub
mov
fdiv
not
xchg
mov
inc
add
mov
xchg
popa
or
iret
daa
leave
nop
pop
jno
iret
adc
xor
jle
in
mov
fidiv
mov
ficomp
ss
mov
mov
popa
iret
jmp
loope
xchg
std
dec
mov
mov
iret
cmp
jns
cmp
xor
stos
mov
jb
or
and
push
jge
ja
or
out
in
ret
xchg
ror
in
inc
add
xor
jns
adc
jae
adc
das
outs
mov
push
in
test
(bad)
or
adc
jo
movs
dec
and
jl
jbe
repnz
out
inc
add
pop
clc
push
jecxz
jge
mov
cmp
stos
inc
inc
enter
fwait
mov
jno
xchg
mov
jle
pop
aad
sbb
in
ds
jge
repnz
repnz
xor
sub
in
jno
mov
dec
dec
push
fs
sub
out
ret
and
stos
sbb
ss
push
out
mov
mov
scas
add
dec
arpl
int
xor
push
or
pop
or
into
sub
clc
xchg
arpl
test
mov
lds
pop
out
scas
push
sub
mov
aad
pop
sti
xchg
add
mov
push
adc
or
jg
ds
inc
xlat
push
fldcw
sub
push
sbb
out
cli
inc
test
es
pop
add
mov
js
nop
jecxz
jns
je
xor
inc
adc
test
sub
dec
cli
adc
daa
and
(bad)
in
mov
pop
mov
xor
or
(bad)
cdq
dec
cmp
or
mov
pop
fdivr
cmc
dec
push
pop
icebp
jnp
sub
mov
(bad)
daa
mov
xor
out
sbb
sub
adc
sbb
arpl
xor
popf
popa
(bad)
aam
test
int3
leave
repnz
sahf
pop
arpl
and
in
inc
add
mov
cmp
fisub
ds
xchg
cs
mov
add
sub
dec
cmps
cs
adc
jmp
and
dec
pop
sar
int3
pop
cmp
mov
mov
add
mov
mov
sbb
add
(bad)
mov
je
enter
or
shl
std
outs
cmp
add
push
xchg
jns
cmp
mov
and
retf
outs
in
xchg
fiadd
in
sbb
add
xor
xor
jle
cmp
sub
rcl
repz
xchg
retf
jl
mov
pop
sub
fstp
pop
cmp
lods
jnp
push
and
jle
imul
js
pop
pop
push
sub
ins
(bad)
les
pop
mov
pop
xlat
daa
sbb
mov
pusha
test
push
sub
gs
dec
cmc
or
jbe
ins
mov
loopne
lods
ja
cmp
jge
xor
std
cmp
cmp
cs
daa
imul
mov
js
or
add
adc
or
jl
cmp
xchg
into
mov
movs
adc
call
sub
or
dec
stos
pop
or
stc
hlt
jnp
xchg
add
pop
(bad)
mov
sbb
ds
sbb
xchg
out
cdq
scas
xchg
jmp
mov
into
jmp
shl
cmp
rcr
jo
stos
jae
cmc
popf
sar
das
inc
or
movs
sub
ins
push
das
sahf
arpl
daa
sbb
(bad)
cmp
dec
shl
jo
int3
xchg
imul
sub
lea
xor
xor
mov
push
lds
arpl
rol
xor
pop
add
sbb
rol
add
xor
mov
sbb
push
mov
(bad)
ss
ins
loop
cs
fs
jo
and
test
iret
or
dec
icebp
fwait
cmp
mov
and
mov
test
imul
ror
mov
bound
jae
mov
inc
mov
pop
xchg
jg
cli
mov
movs
push
inc
inc
mov
mov
push
test
mov
fist
push
sbb
pop
movs
push
cli
mov
sti
sbb
(bad)
push
sbb
ffree
ins
out
imul
in
mov
jb
(bad)
pop
adc
cmp
std
fild
shr
jnp
pop
test
ss
mov
cmps
sub
mov
and
pop
pop
stc
(bad)
push
rcr
shl
add
mov
repz
or
dec
jb
push
add
and
hlt
cmps
test
mov
adc
dec
loop
lock
add
fisub
sbb
sbb
cmp
adc
aas
sub
int3
jbe
jno
sbb
and
jo
or
or
adc
icebp
xor
xchg
movs
and
retf
jns
aaa
inc
dec
and
cs
data16
cmovb
(bad)
jge
cmp
movs
pop
test
push
loope
or
sbb
jo
mov
add
(bad)
sbb
cli
xchg
jmp
leave
jne
push
xor
scas
cmps
icebp
pop
call
push
scas
push
(bad)
lock
stos
cmp
(bad)
xchg
inc
mov
imul
dec
dec
mov
mov
stc
jg
pusha
push
jl
pop
jbe
aam
popf
popa
into
xchg
mov
and
push
mov
(bad)
and
test
movs
cmp
xchg
lds
xchg
(bad)
pop
call
push
xor
sbb
xor
mov
dec
leave
rol
add
add
ret
cmp
mov
test
jns
mov
pop
add
(bad)
fst
lods
push
and
dec
or
lock
pop
test
jb
mov
shld
out
xchg
out
(bad)
aad
mov
js
xchg
inc
das
aas
scas
mov
jmp
sub
ds
in
js
xlat
ret
mov
xchg
adc
inc
movs
js
out
(bad)
int
or
adc
sub
loopne
mov
pop
nop
inc
leave
rol
ret
dec
cmp
mov
retf
inc
paddb
pop
jp
into
push
setnp
inc
fwait
data16
mov
cmc
mov
aam
xchg
nop
gs
or
popa
inc
mov
jecxz
inc
arpl
clc
bound
bnd
daa
pop
cmps
mov
call
js
jno
dec
sbb
fstp
xor
stos
arpl
and
hlt
sahf
call
movs
push
ret
imul
mov
inc
push
xor
dec
and
sub
addr16
jmp
mov
jp
retf
inc
cmc
jecxz
mul
pop
fwait
aas
push
adc
fstp
je
mov
ret
and
cld
es
pop
cmc
pop
adc
(bad)
leave
repz
sub
lods
aas
push
into
outs
inc
ret
rcr
or
push
xchg
jle
or
shl
das
imul
inc
jnp
mov
stc
mov
bt
xchg
out
pop
fsubr
stc
cmps
frstor
jb
mov
push
clc
sub
mov
ins
inc
push
sbb
push
lea
lods
test
jo
in
daa
jle
add
jmp
(bad)
nop
push
push
add
je
fbstp
les
ja
cmp
hlt
fdiv
es
add
pop
inc
push
pusha
repnz
mov
jecxz
call
(bad)
adc
xchg
inc
test
das
xor
inc
adc
add
push
fisttp
xchg
mov
arpl
(bad)
ret
stc
inc
dec
shr
push
mov
int3
pop
movs
cmp
mov
mov
mov
xor
adc
rol
mov
fwait
xchg
cwde
out
dec
(bad)
js
adc
jmp
cmp
jne
and
sti
jl
mov
jmp
jns
fild
jns
loopne
ins
or
(bad)
enter
sub
cmps
movs
pop
sbb
mov
ins
xchg
neg
and
data16
or
and
xor
push
hlt
popf
fild
mov
fwait
jo
mov
sar
mov
rcr
rcl
in
loope
jbe
jle
push
dec
outs
dec
retf
lods
rcr
idiv
ja
or
outs
inc
retf
jg
(bad)
mov
or
mov
ror
in
rcl
xchg
mov
xchg
(bad)
jno
fxch
xchg
inc
cmps
push
cmp
fs
dec
cli
es
mov
sbb
xchg
(bad)
pop
mov
ror
outs
sbb
gs
xchg
jecxz
mov
push
ret
outs
jo
repnz
iret
inc
out
cwde
mov
aaa
(bad)
xor
loop
mov
pop
fbstp
pop
xchg
gs
and
sub
lock
loope
cmc
adc
ss
sbb
add
daa
cmps
dec
push
mov
and
cmp
add
lock
es
into
sub
pop
fcmovu
into
mov
lds
sub
call
(bad)
sub
aam
pop
fld
jmp
pop
cmp
mov
inc
push
mov
jge
xchg
scas
and
inc
mov
(bad)
ins
cli
lock
ins
inc
pop
out
xchg
mov
jne
pop
popf
cli
enter
push
mov
push
push
sbb
jo
aad
xor
adc
xor
xor
adc
or
in
shl
out
sar
mov
in
and
push
es
popa
(bad)
imul
stos
push
neg
sbb
mov
aaa
xor
push
xor
popa
cmps
outs
std
and
loopne
push
loopne
popf
sahf
sub
in
xlat
or
retf
(bad)
pop
mov
mov
shl
das
inc
jmp
retf
dec
inc
jge
sub
xor
rol
and
sbb
jge
add
or
aas
xchg
inc
sbb
jg
leave
xchg
fstp
retf
push
out
push
inc
jns
jecxz
adc
sub
(bad)
fmul
dec
dec
mov
or
imul
ins
mov
stc
pusha
mov
jae
inc
les
(bad)
hlt
mov
cli
mov
imul
mov
adc
outs
jl
cmp
vprotd
popa
cmp
and
mov
popf
xor
add
sbb
xor
push
pop
add
jmp
mov
fild
icebp
bound
xor
xor
mov
inc
mov
add
fsub
cmp
sahf
lods
call
xchg
mov
mov
lds
inc
pop
lock
pop
inc
xor
sbb
in
cli
mov
xchg
pop
xchg
lods
xchg
dec
xor
dec
jge
sub
cmp
cmc
xchg
adc
add
or
adc
push
mov
or
and
mov
push
mov
cli
ja
pop
int
push
mov
xchg
fiadd
push
mov
out
mov
jmp
inc
aam
dec
jl
outs
sbb
stos
mov
adc
inc
mov
popa
cmp
push
and
cmps
cdq
push
adc
je
bound
push
or
fistp
adc
mov
jle
and
test
sbb
out
mov
xor
push
mov
into
js
xchg
arpl
inc
xchg
sub
adc
ins
retf
mov
pop
ja
dec
lods
nop
and
dec
sub
jo
retf
das
stos
dec
inc
xor
sbb
push
scas
inc
in
idiv
outs
mov
(bad)
fisttp
sti
gs
mov
mov
scas
popf
cmp
xchg
mov
cmp
add
mov
mov
jbe
add
rol
std
enter
mov
xor
xchg
mov
or
repnz
(bad)
fidivr
or
or
and
inc
jbe
test
fisubr
push
jo
jne
inc
add
in
fisub
shl
sbb
daa
pop
jmp
and
inc
loop
pop
ins
jmp
jmp
movs
and
xchg
adc
fld
sahf
mov
repnz
ret
aam
mov
lods
data16
inc
mov
add
pushf
xchg
xchg
and
call
repz
and
push
jl
dec
and
pusha
dec
gs
fdivr
mov
push
repnz
in
das
sbb
(bad)
test
scas
adc
cmp
fcmovnb
pop
dec
push
xor
pushf
in
push
fbstp
cmps
mov
dec
push
bound
and
sbb
mov
push
push
sub
lods
push
adc
inc
int3
out
mov
repz
jmp
push
xchg
mov
mov
test
movs
push
dec
outs
push
mov
arpl
jno
push
mov
inc
enter
pop
repnz
mov
mov
or
inc
cld
sub
das
retf
iret
gs
lock
push
xchg
xchg
aaa
adc
test
call
fdiv
sub
iret
jno
mov
test
lods
sub
mov
sub
leave
es
pop
xchg
lea
cli
cmp
stos
imul
into
ins
pop
ss
sub
push
sub
mov
push
mov
scas
popf
push
call
ror
int3
repnz
push
xchg
outs
cmp
aas
jae
es
sub
jmp
bound
sub
icebp
aad
leave
test
hlt
pop
idiv
addr16
mov
nop
mov
je
out
push
in
(bad)
loopne
lahf
pop
pushf
adc
inc
xor
clc
stos
jns
dec
push
xchg
lock
(bad)
and
les
mov
ins
xchg
lea
sub
(bad)
pusha
outs
or
out
(bad)
in
js
sub
cs
iret
test
jno
adc
sti
push
das
fxch
sahf
push
adc
retf
xchg
test
cmp
ja
(bad)
jle
popa
ins
push
add
or
out
lds
in
ins
aam
jle
xlat
in
pop
inc
repz
push
push
ss
ret
idiv
sbb
pop
rcr
jne
adc
mov
push
xchg
mov
test
(bad)
mov
in
ja
in
lahf
xor
aam
ja
mov
movs
jne
jl
rol
fdivp
(bad)
mov
or
pusha
adc
sbb
or
jecxz
mov
or
mov
cli
(bad)
sbb
adc
mov
inc
hlt
push
pop
fwait
sub
(bad)
inc
in
xchg
inc
pop
and
(bad)
imul
pop
leave
cs
jecxz
nop
ficomp
mov
xor
scas
cmp
sub
in
test
je
dec
loopne
in
cmp
outs
inc
rcr
push
and
dec
movs
call
mov
scas
xchg
jno
sbb
or
mov
(bad)
mov
loopne
adc
pop
ins
and
shr
adc
aaa
repz
test
cld
adc
pop
sbb
mov
aas
aam
shr
xor
test
mov
mov
push
jp
dec
das
es
data16
push
data16
iret
cmp
and
aaa
int
xacquire
inc
sub
add
fstp
lods
xor
or
add
daa
ins
push
pop
cmp
jo
mov
pop
sub
call
or
push
dec
ret
xchg
das
adc
inc
xor
mov
sbb
push
mov
pop
cmp
loope
sub
inc
data16
in
mov
cld
cmp
iret
fmul
add
loopne
loope
inc
and
dec
mov
inc
adc
mov
sar
test
loopne
mov
pusha
cmps
xor
pop
and
adc
iret
jecxz
(bad)
xchg
loopne
or
sbb
nop
mov
iret
das
or
(bad)
cli
stc
daa
xchg
cmp
pop
or
sub
fisttp
ret
mov
retf
daa
pop
add
(bad)
jl
imul
in
out
(bad)
jns
xchg
xlat
sub
addr16
add
push
and
loope
pop
retf
je
aaa
cwde
inc
jecxz
imul
mov
aaa
cmp
fsub
xor
leave
and
leave
fdiv
sbb
call
jle
iret
ret
fsub
mov
jle
sub
push
mov
ret
inc
xchg
mov
or
adc
push
mov
arpl
in
movs
pop
pushf
mov
call
sbb
les
hlt
cmp
test
push
call
nop
jmp
jo
cld
jl
add
xchg
mov
mov
lea
rcl
xchg
dec
fiadd
ffree
push
add
and
das
sbb
cs
xor
iret
jo
sbb
mov
xchg
inc
mov
xchg
arpl
fiadd
scas
les
neg
dec
sub
xacquire
lds
bound
(bad)
cld
dec
ss
add
cdq
xor
adc
xchg
jb
in
mov
xchg
pop
xchg
sub
sub
jb
repnz
fs
xor
pop
(bad)
jmp
pushf
push
push
enter
dec
fstp
adc
sbb
pop
lods
stos
dec
shr
jl
test
mov
nop
jae
int
ficomp
push
bound
sub
cld
pop
ror
mov
rcl
test
xor
mov
xor
xor
cs
sub
stc
cli
xchg
push
xchg
push
xchg
retf
mov
lods
push
pop
add
mov
rcl
dec
sbb
mov
mov
sub
adc
cdq
xor
mov
xchg
pop
push
sti
and
gs
icebp
in
pusha
aam
pusha
repz
aam
int
fst
lea
ja
or
jle
cmp
fwait
pop
fsub
sub
fsub
push
jnp
push
sbb
adc
push
out
jb
punpcklwd
stos
aad
scas
push
int3
enter
and
mov
in
aam
fistp
sub
jle
loopne
iret
mov
add
mov
int
jne
pushf
clc
cdq
jp
adc
mov
mov
mov
in
dec
repz
jge
jb
in
jg
xchg
(bad)
dec
pop
jae
pop
lods
adc
dec
les
addr16
push
test
fs
push
jbe
inc
std
pop
sub
das
jne
pop
cdq
test
test
sbb
cmp
sbb
jecxz
pop
mov
and
cwde
mov
and
gs
test
xchg
cmp
pop
jp
pop
mov
and
movs
cli
ins
xchg
and
out
movs
call
dec
push
lock
sbb
mov
pop
hlt
adc
nop
sbb
loop
mov
repnz
cdq
push
loopne
mov
fs
dec
jecxz
xchg
push
ret
in
mov
mov
xor
neg
repz
shr
cmp
mov
cld
dec
and
inc
pop
add
out
mov
and
fcmovnb
cdq
rcl
mov
sub
retf
(bad)
pop
icebp
(bad)
and
in
sub
cmp
pop
add
ins
mov
or
dec
cs
into
mov
jecxz
rol
call
std
aam
jmp
adc
scas
bswap
mov
(bad)
jne
add
jg
arpl
add
pop
loop
cmp
pop
mov
sub
pusha
xor
lods
push
iret
lods
xor
(bad)
out
lods
fild
out
xor
hlt
fwait
xchg
test
mov
mov
sub
cmp
xor
daa
shl
mov
cmp
lods
popa
retf
cmp
out
sti
mov
sub
stos
popf
mov
sub
mov
or
xchg
jno
adc
daa
das
neg
das
loope
pop
(bad)
fdivp
mov
xchg
adc
int3
std
out
out
adc
fwait
or
xchg
je
neg
jo
mov
in
or
cdq
adc
(bad)
int3
ret
hlt
out
xor
std
cdq
lods
jae
mov
pop
mov
add
sbb
push
xchg
shr
dec
in
pop
mov
mov
pop
lods
(bad)
out
fidivr
lahf
xor
clc
(bad)
sar
and
mov
inc
mov
std
inc
fidivr
retf
leave
xchg
and
sub
ret
push
adc
nop
aas
and
movs
ins
pop
ds
cmp
sbb
(bad)
lock
mov
jge
dec
nop
or
push
fmul
and
imul
mov
stos
ins
jb
dec
fbld
(bad)
add
push
sbb
pop
jg
sub
in
aad
pop
jnp
dec
outs
jge
std
inc
je
loopne
sbb
sub
sub
int
jns
and
dec
push
pop
push
mov
nop
fcmovnb
jne
aad
popf
faddp
sub
sbb
das
cli
mov
sti
lods
xor
or
sti
lock
mov
dec
push
push
mov
outs
(bad)
push
cmc
rcr
pop
aam
mov
mov
std
(bad)
inc
fld
push
mov
mov
leave
push
ret
pop
cld
cmps
inc
out
jb
retf
pop
dec
dec
pop
popa
fnstsw
jle
push
adc
push
cmps
mov
pop
xchg
push
lods
inc
shr
jbe
imul
ss
(bad)
scas
inc
fwait
dec
repz
pop
mov
das
jo
sbb
mov
fsub
push
and
pusha
cmp
enter
and
mov
repnz
sahf
repnz
push
not
sub
jbe
fs
jle
inc
push
fwait
retf
push
cmp
xchg
jmp
jmp
lahf
sbb
retf
push
mov
mov
add
xor
mov
xchg
lods
pop
mov
loope
out
sub
dec
into
pop
and
push
xchg
jle
pop
mov
jmp
scas
dec
push
cmp
mov
sub
popa
lea
ja
aas
cmp
out
fisub
cmc
fisub
pop
xor
jge
mov
pop
int
fnstenv
sub
xor
jecxz
push
mov
sub
pop
push
sbb
cmps
pop
aaa
mov
sbb
or
xor
neg
ins
in
fld
in
fs
les
xchg
cmp
repz
xor
dec
xor
lahf
push
movs
iret
xor
imul
mov
scas
jae
adc
shr
push
(bad)
hlt
or
popa
and
mov
jae
in
jmp
sub
jo
mul
add
push
cmp
sbb
sub
mov
ds
mov
add
inc
call
jg
js
adc
push
rol
shr
in
in
mov
es
inc
test
stc
(bad)
pushf
mov
adc
jle
out
push
adc
jge
imul
and
imul
imul
mov
stos
xor
sub
push
aam
scas
jae
js
xor
sbb
icebp
pop
xor
shl
xchg
imul
into
gs
call
data16
out
jge
cdq
dec
xchg
add
add
test
pop
add
dec
add
add
ret
call
push
cmp
push
fucomi
xor
adc
xchg
mov
adc
sub
mov
imul
in
inc
dec
stc
ins
int3
jle
adc
es
and
leave
pop
mov
add
jbe
pop
mov
gs
xor
test
call
out
push
xor
sbb
fs
adc
sbb
mov
dec
ds
push
cmp
fstp
add
cs
lods
cmps
cmc
pop
push
xchg
jp
jge
sbb
xor
inc
or
push
cwde
sbb
jae
adc
movs
jmp
mov
sbb
pop
mov
stc
cmp
or
ror
cwde
sub
cli
fistp
(bad)
test
fnsave
in
mov
xor
adc
outs
mov
jmp
inc
cmp
out
out
out
xor
add
add
icebp
mov
xor
push
xor
adc
adc
imul
inc
sub
pop
jnp
sbb
add
(bad)
fisttp
pop
xchg
imul
adc
shl
in
xor
pop
shl
xchg
call
(bad)
lds
pop
adc
inc
test
add
(bad)
fimul
or
inc
addr16
leave
and
out
outs
call
push
or
jo
and
jmp
ds
add
or
mov
jle
sar
(bad)
dec
adc
mov
push
test
xchg
in
mov
ret
bound
or
adc
mov
push
mov
mov
push
add
mov
sbb
dec
rcr
add
inc
test
mov
pop
jae
lea
movs
jp
imul
imul
out
ins
jecxz
cmp
or
icebp
shr
xor
mov
mov
cmp
mul
cmp
addr16
xor
mov
(bad)
cmp
ficom
xor
mov
pop
or
mov
sahf
xchg
sbb
push
dec
mov
mov
add
jmp
mov
jb
mov
jge
in
fcmovnbe
loopne
arpl
push
mov
(bad)
pop
imul
test
cld
rol
sbb
jbe
cmp
or
xor
ror
sbb
iret
push
orps
mov
sbb
cmp
movs
(bad)
mov
or
rcl
stos
lods
xchg
in
push
or
fadd
xchg
adc
sahf
fnstsw
jge
(bad)
out
dec
add
or
in
cmps
mov
inc
mov
sbb
xor
mov
loopne
sbb
cdq
repz
xchg
nop
ret
sub
sub
cmp
or
retf
ret
or
and
call
(bad)
sub
sbb
jl
inc
addr16
in
sbb
xchg
mov
sub
cmp
(bad)
sub
es
inc
push
pusha
loope
jmp
lea
inc
mov
push
inc
push
adc
and
cmp
aaa
or
jl
mov
(bad)
sbb
pop
mov
pop
loopne
cmp
cld
(bad)
sbb
xchg
adc
mov
xor
repnz
add
xor
sahf
(bad)
push
bound
xchg
sbb
dec
retf
mov
push
ficomp
adc
add
mul
es
stc
popa
in
out
jecxz
or
mov
cmp
scas
inc
clc
mov
std
xchg
hlt
or
test
(bad)
pop
dec
dec
cmp
ja
ins
mov
mov
loope
or
ins
mov
inc
mov
mov
push
or
mov
fadd
mov
sbb
cmp
xchg
cmps
push
loop
fdiv
imul
pop
mov
push
movs
inc
mov
inc
movs
xchg
sub
sub
mov
cwde
push
cmps
inc
mov
pop
or
test
cmp
dec
xchg
loop
loop
mov
sbb
lahf
je
lock
nop
repnz
mul
shl
jl
cmp
cmp
popf
cwde
aam
pop
inc
mov
jecxz
retf
pop
js
cmpxchg
clc
mov
pusha
icebp
arpl
jmp
(bad)
shl
vshufpd
call
out
jb
adc
test
dec
sbb
and
push
out
inc
outs
xchg
xor
sub
call
inc
jb
movs
mov
lods
shl
and
cwde
sub
pop
addr16
adc
mov
outs
dec
in
adc
lahf
sub
mov
leave
mov
jno
sbb
stos
inc
adc
xor
sbb
jg
int
adc
push
aad
inc
(bad)
std
je
jae
mov
loopne
inc
loopne
xor
adc
cmp
stos
sub
push
fcom
and
add
mov
pop
dec
dec
jnp
rol
shl
cmps
dec
xchg
sbb
and
mov
lods
jo
add
xchg
lods
popa
je
lahf
inc
iret
mov
adc
dec
mov
lahf
test
or
fisubr
mov
sti
add
aas
fistp
jbe
and
inc
jnp
popf
mov
mov
dec
dec
imul
cld
cs
test
mov
out
and
out
xchg
popf
mov
push
or
les
push
inc
sti
mov
setb
fld
and
push
push
xchg
scas
retf
test
cmc
aam
fdivr
xchg
fsubr
stc
in
and
add
ins
sbb
mov
popf
out
ret
cmp
inc
adc
or
rcr
data16
sbb
push
push
scas
out
push
mov
sbb
cwde
push
xchg
jnp
mov
sbb
iret
call
push
add
fnsave
push
(bad)
jecxz
sub
not
inc
inc
mov
iret
mov
pop
test
mov
fwait
mov
push
popa
(bad)
scas
lds
ins
scas
bound
repnz
adc
or
les
retf
mov
cdq
call
mov
cmp
inc
sti
fnsave
jns
add
dec
aas
sub
cmps
mov
outs
dec
xlat
aad
fdiv
in
bound
sub
mov
bound
fwait
add
jge
gs
mov
fild
aam
out
jne
arpl
out
pop
lahf
inc
sbb
pop
fist
dec
mov
cmp
ja
in
sbb
sub
pop
push
dec
(bad)
or
das
(bad)
retf
iret
xchg
in
mov
pop
add
stos
(bad)
idiv
push
push
ins
push
fcom
or
dec
push
xchg
mov
push
inc
sub
jg
push
mov
test
fwait
xchg
push
inc
push
daa
scas
and
add
es
jmp
push
pop
pop
xchg
test
ins
(bad)
pop
and
xor
cmp
test
dec
das
pop
dec
and
pop
jp
jbe
pop
leave
dec
mov
fild
imul
cmps
and
cmps
leave
in
mov
repz
pushf
adc
fadd
cs
pop
fsubr
xchg
in
pop
push
push
jne
add
out
test
cmp
test
jge
leave
push
add
fldenv
movs
cld
jnp
add
sub
sub
sar
fidiv
add
inc
push
mov
icebp
test
fwait
loopne
test
ficom
jae
or
movs
or
pop
mov
add
or
gs
push
mov
jae
out
pop
hlt
rep
adc
scas
dec
js
push
pop
pop
lea
pop
mov
or
stc
xor
or
and
ret
xor
and
jle
mov
mov
inc
mov
stos
or
sub
xchg
fnsave
jl
(bad)
xlat
lods
sbb
out
sub
lea
test
out
mov
add
mov
adc
inc
mov
xor
mov
fcmovnbe
push
sahf
or
mov
popa
inc
loopne
idiv
ds
ret
mov
xchg
inc
mov
int3
inc
inc
xor
nop
xlat
jle
mov
mov
nop
popf
div
ja
jmpw
je
shl
jl
rcr
movs
cmps
xchg
(bad)
mov
xchg
retf
dec
dec
xlat
cmp
xor
movs
retf
dec
mov
mov
inc
sub
cmp
lds
mov
xor
ins
arpl
cmp
vpsubsb
mov
inc
pop
fld
inc
jecxz
pop
cs
test
inc
mov
lods
cmp
dec
dec
jecxz
mov
in
mov
test
or
pusha
jl
mov
enter
lock
adc
cmp
inc
mov
fmul
pop
xchg
jne
in
std
shl
pop
fstp
test
xchg
lods
mov
push
dec
or
call
jg
lods
mov
in
movs
mov
fs
cmp
xlat
push
fwait
ret
aam
and
enter
test
add
cmp
adc
adc
cmps
adc
push
cmp
mov
retf
cli
call
je
icebp
(bad)
imul
sbb
jp
dec
adc
cmp
js
addr16
inc
xor
xchg
push
popf
cmp
cdq
aam
stos
fsub
sbb
jne
fist
outs
in
jecxz
add
fcomp
imul
es
in
fisub
mov
sub
sub
repz
mov
push
scas
mov
or
aad
pusha
loop
pop
scas
jne
ror
lock
cli
sub
mov
add
sbb
or
cmps
cli
pop
sti
and
lods
ins
cmps
and
loope
add
call
int3
jge
stc
pop
and
pop
sbb
aad
xchg
sbb
xchg
xor
sub
int3
cmp
sub
idiv
outs
imul
popa
xchg
neg
ret
shr
cmp
into
sbb
ret
and
mov
jb
jge
and
xor
bound
push
push
mov
jo
dec
and
les
or
xor
test
test
outs
or
daa
push
sbb
xchg
sub
xor
lods
xor
cmps
pop
inc
and
(bad)
sti
xchg
lea
movs
fsubr
pop
aam
cmps
jb
pop
push
fs
call
not
imul
adc
xchg
aas
ja
lods
cmps
sbb
pop
les
or
mov
js
call
(bad)
fsub
cmp
mov
gs
clc
loop
fs
rcl
mov
pop
adc
jle
imul
mov
sti
out
dec
adc
jnp
push
push
lea
out
fs
in
loopne
lahf
in
(bad)
jo
jmp
jbe
stos
ins
inc
ret
cmps
scas
add
add
sti
xor
pop
les
call
mov
pop
and
div
clc
inc
pop
sub
sub
arpl
movs
xchg
loopne
cmp
add
shl
je
add
cld
push
jle
dec
sbb
or
iret
mov
test
mov
add
sbb
dec
mov
and
jmp
dec
dec
retf
fild
or
mov
add
jl
mov
jno
in
sbb
nop
xchg
outs
(bad)
xor
(bad)
xchg
push
fsub
repnz
add
fdivr
push
movs
sub
sbb
shr
mov
mov
je
push
add
pop
int
jae
aam
mov
addr16
mov
and
dec
mov
aam
sbb
xchg
or
(bad)
sbb
mov
std
jb
push
sti
push
xchg
stc
hlt
mov
inc
test
inc
test
push
iret
xchg
iret
mov
or
mov
adc
xor
jns
cmp
mov
mov
pop
sub
(bad)
fstp
lods
data16
ret
add
loope
add
loop
push
iret
int
popf
movs
push
add
xor
mov
and
add
test
push
xchg
xlat
jo
add
xor
ds
cwde
sti
or
xchg
retf
dec
mov
std
mov
pushf
sub
out
xchg
jo
adc
into
hlt
lahf
dec
cmp
pop
push
jbe
test
(bad)
dec
in
sbb
aas
popf
rol
xor
push
mov
daa
ret
in
sub
cmp
pop
or
adc
and
xchg
shr
in
push
iret
ins
shl
imul
dec
and
xor
into
(bad)
sti
sub
cmp
dec
test
and
jmp
daa
inc
inc
cs
dec
xchg
jno
push
outs
inc
inc
stos
push
pop
add
pop
lock
mov
dec
mov
ror
pusha
iret
xor
dec
and
dec
and
out
nop
popf
mov
jno
fcomp
mov
cld
imul
sub
leave
add
je
les
sbb
loopne
nop
lods
mov
dec
mov
adc
(bad)
mov
xor
retf
add
or
xchg
sbb
push
and
and
scas
test
xor
sub
in
pop
and
mov
sub
(bad)
cmc
jge
clc
int3
sbb
inc
bound
inc
repz
sbb
jecxz
push
repnz
sub
add
sbb
ins
dec
inc
(bad)
ds
inc
mov
mov
mov
pop
test
adc
jnp
mov
xor
cmps
xchg
and
movs
xchg
les
push
stos
fld
test
cmps
mov
sti
movs
cwde
aam
inc
mov
in
(bad)
cmps
jnp
outs
bound
pop
pop
jnp
jmp
iret
mov
in
or
or
cdq
xchg
adc
jo
sar
sbb
and
movs
xchg
add
add
inc
cmp
call
pop
sbb
push
xchg
mov
movs
pop
mov
pop
bound
xchg
sub
data16
jp
adc
cmps
jbe
mov
sub
movs
push
dec
mov
add
jnp
js
xor
lods
or
and
push
aam
jl
pmaxsw
shr
fisttp
ds
mov
out
out
pop
and
or
inc
in
je
xor
push
adc
mov
sbb
stc
fcomp
into
arpl
shr
mov
ins
or
inc
xlat
mov
jle
mov
sahf
inc
mov
add
or
xchg
push
mov
out
mov
mov
inc
inc
out
push
out
std
sub
in
rol
xor
push
psubusb
adc
jmp
jmp
sbb
fld
or
dec
jecxz
mov
inc
sub
xor
cmps
xchg
xlat
mov
or
rcl
push
fwait
pop
or
jns
cdq
sbb
pop
mov
and
mov
mov
inc
(bad)
out
jo
cmp
not
dec
pop
pop
retf
hlt
jp
pop
fwait
and
enter
call
shl
cmps
repz
or
dec
pop
cmps
movs
not
jns
imul
lods
movs
ds
mov
(bad)
sub
fistp
iret
push
shl
inc
lods
xchg
int3
push
or
movs
mov
call
push
jb
mov
mov
mov
rcr
push
rcl
push
into
cs
sub
cld
clc
scas
mov
lock
into
mov
popf
retf
push
(bad)
shr
xchg
jg
lea
mov
pop
ror
lea
sbb
gs
loope
dec
aam
leave
lods
dec
inc
cmp
fwait
imul
adc
gs
mov
repz
mov
push
int
pop
cmp
inc
scas
add
js
dec
shl
xor
sbb
jo
div
movs
fs
in
std
fmul
or
(bad)
adc
jae
jne
push
enter
loope
idiv
sbb
adc
jmp
inc
jl
repz
ror
enter
cld
idiv
adc
(bad)
fldcw
mov
in
call
dec
test
inc
inc
mov
hlt
repz
cwde
jge
(bad)
add
xor
sbb
cs
or
add
das
sub
sbb
xchg
lods
scas
test
xor
aaa
cld
push
inc
pop
int3
cli
das
jne
mov
add
add
mov
cld
jne
jle
cmp
jns
add
xor
stos
cli
jg
ins
xor
fstp
dec
inc
jmp
cld
mov
fs
xchg
adc
into
sbb
pushf
shr
(bad)
jns
push
jp
jp
mov
mov
push
arpl
cmp
inc
loop
out
sbb
or
pop
je
xchg
xchg
mov
arpl
mov
test
pop
aas
cmc
imul
dec
mov
adc
mov
jo
dec
cmp
jb
cmp
push
jmp
enter
push
inc
xlat
sub
mov
mov
fcmovu
cmps
or
lock
or
mov
out
mov
iret
and
test
mov
rol
outs
stos
jg
push
mov
or
sahf
add
pop
add
pusha
out
xchg
rol
in
mov
and
or
gs
jg
sbb
les
lahf
aas
mov
mov
cmpps
mov
inc
xchg
frstor
pusha
gs
and
push
jmp
outs
push
fsubr
(bad)
out
(bad)
retf
ret
addr16
and
mov
and
movs
fld
das
arpl
idiv
popa
test
adc
jo
scas
clc
scas
cmp
mov
in
mov
mov
je
add
xor
ins
cmp
pop
or
sub
sub
cmp
pop
sbb
xchg
popa
and
(bad)
(bad)
ins
in
test
pop
pop
iret
loop
scas
pop
jae
dec
mov
pop
test
lods
mov
iret
imul
jne
loop
and
cmp
mov
leave
add
adc
enter
out
shr
popf
cmp
xchg
movs
mov
or
sbb
or
jge
popa
ret
lds
cmps
jae
aam
and
mov
test
sbb
retf
and
bound
adc
and
addr16
cmc
(bad)
es
sbb
push
pop
fisub
shl
xchg
ret
popa
pop
push
push
lea
push
jl
movs
je
pop
into
dec
inc
xor
lea
das
retf
xchg
mov
fisttp
cmp
dec
cmc
pusha
fistp
cs
jle
rol
cmp
push
movs
leave
loop
loopne
out
fs
jo
sbb
ret
movs
pushf
xor
(bad)
sub
push
ins
mov
xlat
pop
push
push
and
pop
jns
sub
inc
js
xchg
scas
pop
mov
cmp
outs
sub
int3
add
or
ss
fs
aam
inc
push
xchg
push
sbb
push
xchg
mov
push
shl
out
and
out
inc
and
in
fdiv
and
xchg
js
xchg
mov
inc
dec
or
sbb
(bad)
jno
(bad)
ins
mov
test
jp
std
push
xor
js
add
fwait
loope
mov
lods
sub
pop
movs
je
lods
pop
bnd
cld
adc
lahf
rcr
lds
mov
cmp
out
nop
add
les
ss
mov
arpl
outs
stc
xchg
popa
mov
pop
cmp
mov
cwde
fptan
cmp
pop
(bad)
sbb
sbb
outs
retf
das
and
ins
cmc
cmps
sub
push
or
fdiv
cdq
jl
mov
sbb
out
xchg
sub
mov
ret
cmp
xor
shr
fidivr
or
cmc
jnp
mov
cli
jne
outs
outs
dec
mov
in
leave
sub
pop
jg
jge
mov
cmp
pop
data16
jno
pop
repnz
jbe
xlat
in
stc
shl
jmp
lock
mov
sti
xor
ds
bound
push
cdq
dec
and
pushf
int
sbb
dec
and
sbb
iret
or
xchg
(bad)
mov
push
sub
cdq
xor
cmp
arpl
out
fmul
cmc
inc
(bad)
js
call
xor
push
fs
les
jns
pop
call
cld
fistp
adc
push
or
adc
icebp
ja
nop
(bad)
mov
cmps
loope
es
call
imul
xor
rol
and
mov
ror
jecxz
mov
movs
cmps
pop
mov
aas
into
adc
es
mov
frstor
jp
xor
int
push
and
into
(bad)
push
fsubr
jns
inc
in
add
cmp
cmp
xchg
xchg
pop
and
jl
add
push
mov
adc
xchg
ret
add
test
je
dec
xor
mov
xchg
push
das
jne
or
cdq
in
xor
xor
(bad)
dec
jo
sub
fstp
and
aam
mov
dec
jbe
shr
pop
jno
out
std
lds
xchg
mov
in
into
cmps
xor
jmp
outs
mov
sub
add
pop
sar
imul
pop
call
mov
mov
inc
ja
pop
in
dec
std
mov
lea
or
ret
test
icebp
shl
pop
push
sub
(bad)
sub
iret
ficomp
cmps
(bad)
out
sbb
xchg
mov
xchg
mov
mov
add
pop
add
sub
sub
pop
and
push
ss
sub
sub
inc
push
psrlq
movs
repnz
enter
or
mov
inc
gs
loop
fs
sti
fwait
dec
rcr
cmp
aad
imul
pop
lods
adc
xchg
rcr
xchg
aam
push
scas
enter
(bad)
(bad)
cdq
mov
mov
cmp
adc
pop
or
shl
mov
out
cmp
sbb
fld
popa
pusha
mov
test
pop
(bad)
icebp
bound
bound
cmp
jg
repnz
rol
ret
sbb
popa
adc
pop
mov
dec
outs
leave
xor
sbb
lock
xor
popa
and
cdq
mov
mov
out
or
js
push
test
(bad)
inc
and
jno
lds
lods
iret
data16
mov
push
mov
xor
or
ss
sbb
add
add
jmp
aaa
fs
jb
add
mov
mov
jmp
push
cmps
in
test
sub
lahf
imul
rcr
jno
jnp
aas
push
scas
xor
jno
lods
pusha
sub
call
pop
in
out
retf
retf
ins
arpl
and
xchg
jae
dec
add
dec
daa
scas
mov
lds
push
jmp
sbb
cmps
push
jp
stc
pop
or
clc
aad
outs
pop
rol
out
je
jno
pop
or
inc
inc
test
sahf
jb
cmp
nop
call
or
dec
or
dec
cli
xchg
ror
ds
xchg
xor
xchg
imul
int
data16
adc
leave
fwait
retf
xor
repnz
jp
in
mov
in
call
test
es
or
pop
cwde
jae
shr
mov
jne
mov
lds
push
repnz
and
jmp
sbb
(bad)
loope
aam
mov
in
fadd
mov
xor
cmp
push
add
popf
cmp
enter
push
js
and
mov
popf
mov
xchg
xchg
push
mov
jbe
cmp
jo
mov
mov
call
frstor
mov
cld
fwait
pop
bound
test
mov
test
inc
ret
and
stos
sbb
jmp
(bad)
arpl
lds
add
ds
test
fsubr
shl
push
in
aas
mov
(bad)
or
test
dec
add
push
jle
dec
cwde
jae
lahf
cs
mov
jmp
cmc
jl
pushf
mov
and
mov
jmp
test
push
mov
rcl
adc
jg
xchg
pushf
mov
call
mov
mov
pop
add
mov
cmp
vmwrite
cdq
in
sub
mov
add
es
mov
out
imul
xchg
add
test
sub
cmps
out
out
fldenv
push
cmp
cwde
test
les
mov
jae
int3
push
mov
or
mov
mov
push
cmp
mov
and
mov
or
into
jnp
in
add
pushf
inc
imul
mov
and
lods
mov
shl
cmp
mov
cmp
fs
pop
pop
pop
mov
mov
das
cwde
popa
bound
add
sub
sti
vmovdqu
getsec
or
aad
inc
(bad)
jecxz
hlt
hlt
repnz
xchg
icebp
call
sbb
idiv
jb
adc
popf
and
adc
mov
ficom
push
enter
xor
movs
hlt
repz
pop
stc
xchg
(bad)
ret
outs
das
mov
add
test
sub
xchg
inc
sub
cmp
daa
jns
ret
ror
xlat
aam
push
xchg
loope
pop
and
xchg
test
mov
jo
mov
xor
xchg
lock
mov
inc
mov
jmp
jle
fcmovne
pop
hlt
mov
add
xor
dec
sub
add
ja
out
sbb
clc
dec
fidiv
mov
xchg
xchg
pop
stos
add
ss
js
cmp
mov
scas
or
das
pop
fdivr
push
xor
test
adc
inc
adc
imul
add
dec
std
cmp
dec
mov
arpl
push
jnp
int
das
inc
push
lods
ins
cmp
xor
mov
mov
xor
lods
cmc
inc
lea
mov
fidivr
or
mov
cmp
gs
rcl
popf
daa
push
lea
add
dec
xor
lods
lock
sub
push
or
jbe
mov
out
ficomp
aad
sub
xchg
pop
sub
mov
repz
test
add
fs
call
ret
sti
push
fs
sub
cmps
in
push
push
xchg
add
or
ins
or
in
or
aaa
lock
adc
rol
std
std
in
daa
adc
cmp
mov
mov
imul
and
es
push
inc
inc
frstor
stos
nop
sub
adc
add
in
mov
leave
mov
adc
out
cs
lds
dec
ror
(bad)
jl
scas
cdq
or
mov
in
jecxz
inc
adc
mov
and
mov
add
fst
pop
sbb
add
mov
add
ins
add
dec
mov
mov
push
pop
pop
mov
cmp
xor
pop
jmp
mov
in
xchg
or
mov
add
add
stos
ret
inc
push
call
xchg
mov
cmp
sub
push
call
inc
lea
mov
dec
xchg
xchg
push
jmp
not
xor
mov
push
xchg
test
call
pop
mov
xchg
lea
push
mov
inc
sub
xor
mov
inc
adc
push
mov
push
sub
lea
or
add
mov
not
mov
push
and
add
call
mov
not
sub
and
ret
sub
call
call
push
dec
call
push
call
push
call
call
cmp
lea
je
clc
not
inc
push
not
pop
rdtsc
xchg
cmp
ret
sub
jae
bound
movzx
lea
jmp
mov
sub
xchg
xor
cmp
not
dec
cmp
jbe
ret
mov
sub
not
push
lea
inc
cmp
xchg
add
sbb
xchg
xchg
inc
not
jmp
movs
paddd
xchg
lea
cmp
push
push
lea
test
pop
and
add
add
pop
inc
xor
xor
lods
mov
lea
cmp
je
stc
lea
clc
xor
stc
imul
nop
push
jmp
xor
mov
xor
jne
lea
nop
nop
cld
sub
add
push
pop
add
add
add
not
mov
mov
mov
cwde
push
inc
not
adc
add
pop
mov
xor
xor
not
inc
jmp
mov
and
push
push
xor
not
pop
pop
stos
inc
xchg
inc
dec
jmp
call
lea
push
nop
push
pop
sub
add
mov
xchg
cmp
xchg
pop
xchg
call
not
ret
push
call
push
or
push
push
call
inc
push
neg
call
call
pop
dec
call
cmp
jle
not
sub
jbe
sub
not
lea
lea
not
sbb
idiv
lea
sub
mov
sub
setbe
push
and
imul
sbb
jmp
mov
sbb
push
inc
dec
push
mov
push
call
dec
jne
test
or
pop
jmp
add
cld
movzx
neg
sub
add
lea
cmp
pop
mov
ja
mov
jmp
