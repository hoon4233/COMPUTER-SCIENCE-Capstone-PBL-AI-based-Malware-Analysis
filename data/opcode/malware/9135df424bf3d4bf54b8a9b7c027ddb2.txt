mov
(bad)
call
in
add
fnstcw
mov
or
mov
fldcw
fistp
ins
(bad)
(bad)
jmp
hlt
mov
mov
pop
ret
mov
add
xor
test
je
mov
or
fwait
std
push
scas
add
cmc
ret
test
jne
xor
pop
sbb
daa
mov
pop
ror
rol
add
(bad)
in
fbld
mov
inc
test
je
push
jne
mov
mov
add
xor
mov
(bad)
push
ret
add
add
add
cld
es
je
adc
push
push
pop
je
jmp
lea
sub
ret
add
inc
std
cld
retf
inc
shl
sub
jg
std
loopne
cmp
push
(bad)
enter
jne
mov
add
push
call
in
pop
pop
add
mov
cld
adc
push
pop
sti
jg
mov
pop
lea
push
lea
enter
ret
movs
dec
sahf
ret
sti
mov
pop
call
dec
and
test
jne
push
ja
mov
xchg
add
leave
jne
cmp
div
pop
jnp
ret
test
cmp
jne
or
pop
mov
les
shr
cmp
jne
adc
add
in
out
jmp
sbb
shl
mov
neg
mov
adc
add
jmp
sub
adc
sar
lods
push
cs
aam
mov
les
xchg
clc
sub
arpl
push
sti
aaa
sbb
retf
faddp
inc
add
mov
data16
in
push
and
jb
jb
loopne
(bad)
aam
jb
jb
int3
addr16
enter
es
add
mov
dec
into
into
gs
lods
test
jle
dec
dec
mov
mov
(bad)
ins
fild
test
mov
mov
and
mov
popf
cmps
je
push
xchg
adc
ds
xchg
xchg
sub
pop
cld
push
inc
mov
push
leave
mov
or
add
sti
mov
mov
pushf
add
pop
in
idiv
sub
mov
jmp
cmp
aaa
fucomp
pop
and
push
add
cwde
jmp
or
mov
(bad)
inc
pop
add
dec
test
add
or
inc
mov
mov
cmp
fldenv
jmp
jb
fisttp
call
clc
sbb
dec
es
ret
enter
ins
push
sbb
and
sahf
cmp
add
sub
pop
or
dec
mov
add
cdq
sbb
jg
cmp
in
inc
call
jp
sub
push
xchg
ret
test
sbb
popa
fistp
pop
bound
push
cmp
pop
retf
or
repnz
dec
dec
xor
imul
and
cmp
fild
adc
sbb
jbe
out
mov
add
jl
sbb
ins
daa
retf
xchg
outs
add
xchg
imul
add
and
in
mov
leave
adc
push
movs
test
jl
loope
lock
movs
xchg
push
fcomp
movs
imul
js
cmp
je
aas
sbb
cmp
mov
and
fmul
sub
or
jae
das
jmp
mov
xchg
fnstenv
sub
leave
xor
jl
outs
in
or
shl
xor
mov
ret
popf
fcom
sbb
push
(bad)
and
sbb
or
add
lea
add
add
cs
xchg
cmp
ins
or
push
jmp
je
jmp
push
mov
int3
mov
ret
sub
pop
mov
into
or
or
loope
fs
iret
pop
add
loop
adc
or
call
add
inc
xchg
addr16
or
inc
xor
imul
in
mov
popa
lods
popf
sub
bound
ret
fist
and
xchg
fdivr
js
into
cmc
mov
lsl
pop
test
test
gs
mov
enter
hlt
add
cdq
or
inc
inc
das
sub
nop
inc
add
adc
and
test
xchg
push
pop
gs
ror
mov
pop
enter
add
adc
fsub
mov
jb
pop
test
push
adc
xchg
test
lods
in
and
enter
pop
adc
push
fcomp
lods
pop
repnz
or
in
and
xlat
add
mov
lods
pop
in
pop
push
mov
mov
mov
cmps
push
jmp
push
enter
jg
and
inc
pop
push
ret
jmp
mov
enter
enter
(bad)
or
nop
pop
test
test
dec
push
xchg
dec
jb
(bad)
mov
inc
mov
add
in
sti
xor
fwait
add
dec
call
cwde
aam
add
mov
jnp
or
sahf
jne
inc
inc
mov
cmp
out
not
and
cmp
mov
mov
fdivr
call
inc
mov
fcomp
push
push
mov
push
cmp
jg
sbb
sbb
sbb
enter
loop
loopne
dec
mov
push
in
pushf
pop
jle
or
mov
sbb
jle
arpl
test
mov
aas
push
mov
cmp
je
aam
outs
or
rep
inc
and
add
sti
jne
mov
je
pop
add
push
mov
sub
or
cs
mov
rol
sbb
add
sbb
jno
in
xor
add
in
push
mov
push
test
and
in
sub
mov
inc
add
inc
pop
pop
pop
dec
sbb
sub
movs
pop
add
pop
sbb
cmp
and
bound
call
add
and
pop
pop
add
push
and
sbb
fist
popa
lods
jge
push
xor
add
adc
and
inc
fcom
xchg
dec
push
fs
nop
mov
xchg
xchg
mov
mov
enter
or
mov
outs
push
adc
adc
push
push
ss
mov
enter
nop
sbb
jb
pop
test
into
setge
pop
sub
inc
sbb
dec
and
lock
inc
mov
test
enter
aam
outs
and
push
mov
or
pop
mov
cwde
push
adc
test
ins
sbb
aam
shr
call
xchg
ror
mov
jne
add
movs
push
in
adc
(bad)
pop
cmp
aad
dec
popa
in
add
xor
add
sbb
neg
fadd
cmp
cmp
in
inc
add
or
lea
mov
mov
cmp
jb
test
pop
and
daa
cmp
movs
adc
dec
scas
test
cmp
dec
and
xchg
add
and
int
mov
sub
sbb
push
cmp
xor
pop
sbb
push
cmp
sbb
inc
mov
inc
push
cmp
xor
fsub
inc
mov
push
outs
jl
push
inc
mov
mov
jecxz
mov
ret
or
fwait
cmp
and
mov
pop
add
cmp
loopne
mov
pop
sbb
outs
loopne
test
sbb
push
add
mov
sbb
pushf
push
xlat
push
jmp
xor
ds
inc
jnp
test
sahf
mov
add
xor
inc
cmp
pusha
sbb
pop
cmc
dec
jb
fisubr
mov
add
hlt
xor
add
in
fmul
dec
es
xchg
cwde
cwde
pop
add
push
mov
add
rol
adc
push
sbb
pushf
test
add
outs
pop
or
rcr
add
(bad)
or
and
test
mov
or
fst
adc
fsubr
adc
outs
adc
(bad)
(bad)
movs
pop
ftst
fnstsw
test
je
fchs
fcomp
inc
ret
mov
xchg
icebp
mov
mul
ret
adc
push
adc
add
push
push
xor
xchg
and
fcom
aam
add
les
cmp
in
rol
inc
mov
mov
dec
push
hlt
stos
pop
rcl
das
or
sbb
(bad)
push
push
xor
fxch
add
pop
retf
lods
mov
sti
cld
or
dec
and
sub
xchg
add
or
bound
mov
loope
lock
mov
mov
loop
mov
push
inc
mov
inc
ror
fdiv
cmps
retf
enter
adc
xor
dec
(bad)
and
cmp
nop
or
(bad)
fucomi
xchg
pop
jmp
pop
rcr
call
sub
aam
adc
or
mov
int3
add
adc
jae
loope
push
rcl
dec
inc
push
fist
fnsave
(bad)
aam
or
push
int3
call
test
gs
fild
add
jecxz
cmp
mov
and
and
ds
sub
in
(bad)
jb
add
jae
mov
sub
aam
mov
add
or
jne
inc
mov
pop
jg
scas
inc
pop
and
dec
add
shr
inc
cld
mov
sub
fsubr
hlt
in
imul
loopne
loopne
pop
add
adc
clc
xor
enter
or
inc
or
ret
shl
cmp
push
xor
adc
add
in
and
fs
ss
clc
push
cdq
cmp
or
inc
mov
fisub
xor
or
loop
enter
push
nop
mov
shl
or
sub
add
cmc
repz
pop
xor
clc
sub
cld
mov
enter
cmp
mov
push
shr
add
pop
xor
and
add
xchg
push
inc
pop
xchg
push
add
sbb
cld
loopne
jge
jg
add
mov
retf
mov
in
in
ins
and
repnz
sti
repnz
rol
or
enter
add
shr
les
or
mov
cmps
jb
inc
cmps
sub
in
ins
add
mov
stc
mov
(bad)
dec
mov
ins
lock
inc
test
add
mov
mov
xor
and
hlt
adc
inc
xor
lock
push
ret
sbb
add
xor
lea
cmp
ret
add
push
add
icebp
jb
dec
push
mov
jmp
push
add
mov
lods
js
fwait
pop
push
jecxz
jge
je
dec
adc
or
jne
cmps
movs
push
cld
lods
add
dec
jo
push
pusha
pop
or
mov
fsubr
xchg
mov
inc
push
jo
fdiv
sub
jb
pop
sub
cld
cld
dec
enter
pop
cld
(bad)
clc
ret
sbb
sub
adc
pop
in
sbb
inc
sar
aam
mov
dec
push
cwde
jae
int
cmp
aam
hlt
pop
xor
mov
jo
cmp
mov
cmp
in
scas
shl
add
and
fist
sub
enter
add
cld
jae
je
or
cmp
fmul
je
ror
pusha
cmp
xor
push
sbb
(bad)
jb
(bad)
lods
jge
mov
fdiv
stc
loopne
loop
aad
xor
mov
or
mov
loope
call
mov
icebp
aam
lods
push
sbb
adc
enter
pop
enter
nop
les
and
adc
cmp
add
jno
push
jbe
jae
adc
inc
jbe
xchg
test
sbb
pop
mov
or
retf
push
inc
mov
jns
and
or
sbb
pop
dec
ret
pushf
xor
mov
or
stos
bound
rcl
adc
nop
aam
bound
pop
add
jle
(bad)
retf
das
push
push
mov
xor
cmp
cld
or
push
jnp
lds
sti
mov
mov
in
dec
or
stos
xchg
aaa
int
into
nop
mov
add
add
jg
movs
sbb
push
sub
mov
hlt
hlt
adc
lds
lods
sbb
mov
fild
mov
jne
inc
stos
call
add
cmp
test
push
dec
data16
gs
clc
addr16
or
sbb
inc
(bad)
xchg
pop
push
clc
mov
hlt
lock
mov
and
call
in
push
pop
fsub
or
nop
mov
test
mov
test
jo
mov
shl
int3
add
in
sub
lods
nop
int
or
xchg
out
sub
and
jnp
leave
fs
and
mov
les
(bad)
pop
push
adc
ins
inc
pusha
sbb
or
xchg
push
movs
int3
jge
data16
daa
mov
adc
jb
leave
fsub
xor
adc
adc
mov
sub
int
enter
fs
enter
shr
mov
fsubr
adc
gs
pop
xchg
fdivr
mov
leave
mov
test
call
fs
cs
push
inc
rol
dec
out
inc
fadd
call
inc
ins
fs
int3
loopne
inc
mov
jne
xor
mov
xor
dec
call
(bad)
cs
das
aam
inc
jb
in
aam
mov
mov
aam
xor
enter
in
fsubr
jb
jg
fadd
pop
adc
adc
loopne
push
adc
pop
fsub
inc
push
sbb
add
inc
sahf
ret
cmp
mov
jbe
inc
xor
sbb
out
inc
mov
mov
test
sti
and
fild
fnstsw
mov
adc
xor
mov
test
fsub
adc
adc
inc
ds
cmp
dec
pusha
adc
dec
or
sbb
sub
clc
sub
xchg
and
leave
repnz
or
and
mov
clc
daa
sbb
inc
cmp
lock
in
push
xor
cmp
sub
push
pop
imul
in
lock
add
loop
cs
sar
add
or
je
repz
push
dec
mov
ret
sbb
add
imul
call
xchg
push
adc
cwde
add
pop
adc
mov
jnp
dec
and
pop
pop
dec
idiv
cmp
cs
push
add
adc
scas
sub
xor
fcom
jne
test
add
test
nop
or
or
push
push
iret
xchg
jo
mov
pop
pop
int3
aad
es
cvtdq2ps
je
mov
push
pop
cld
cmp
retf
adc
jne
add
test
jbe
jno
and
ins
sub
iret
or
push
hlt
jno
dec
adc
push
hlt
and
or
fs
mov
arpl
dec
dec
mov
push
(bad)
repz
jbe
inc
hlt
dec
and
sbb
in
in
call
fs
and
in
lahf
and
popa
(bad)
fnstsw
and
xor
fld
adc
lea
xor
popa
push
shl
add
or
int3
inc
popa
cmp
dec
in
cmc
or
adc
repnz
push
out
inc
ret
add
test
push
aaa
adc
scas
jo
dec
jne
and
fs
outs
fadd
jb
push
test
pop
stc
or
and
inc
ins
fist
mov
mov
fcom
pop
sub
shl
retf
push
rcr
stos
xchg
arpl
nop
test
sub
or
push
daa
bound
inc
dec
xchg
inc
push
fs
hlt
clc
or
sbb
clc
add
in
fs
cld
iret
fisubr
or
(bad)
push
lea
sub
cld
cld
jecxz
call
mov
or
pop
cmp
add
sahf
test
call
clc
cmc
dec
xor
in
inc
add
mov
gs
sbb
sub
lods
xor
pop
xor
pop
retf
and
xchg
inc
dec
xor
in
jb
push
outs
in
std
in
sbb
and
jl
add
jge
jae
mov
mov
sti
das
(bad)
or
and
je
test
push
cmp
jne
inc
inc
dec
je
add
or
inc
mov
mov
or
mov
mov
in
add
call
ret
add
inc
jmp
cmps
je
mov
push
cld
and
dec
imul
jmp
scas
std
sbb
pop
sbb
xor
mov
mov
cmp
jne
arpl
cmp
mov
ja
jbe
mov
int
pop
pop
rcl
mov
or
cmp
mov
xchg
push
mov
xor
clc
add
xchg
lea
lock
push
xchg
mov
push
or
cmp
add
mov
fisttp
pop
sbb
fldenv
dec
inc
pop
and
xchg
mov
rol
and
and
hlt
lock
cmp
outs
ja
adc
inc
cmp
inc
out
jmp
sbb
pop
mov
rcl
call
fadd
push
or
repz
call
enter
pop
xchg
in
inc
add
in
pop
add
sbb
adc
pop
xchg
ret
or
jl
cmp
or
dec
jae
or
cmps
in
outs
or
xor
addr16
inc
or
or
and
sub
sub
sbb
fisttp
movs
add
inc
push
cmp
nop
out
loopne
pop
sbb
lods
ss
sub
rdmsr
dec
push
cmps
call
push
ss
ret
adc
stos
clc
sbb
hlt
adc
push
or
sbb
sub
and
or
lock
cmp
lock
in
push
pop
pop
adc
int3
add
call
leave
fs
ret
mov
adc
mov
mov
or
push
in
push
push
adc
or
and
adc
popa
mov
mov
push
xchg
dec
clc
sub
in
clc
mov
clc
in
xor
jmp
sbb
call
pop
mov
jmp
add
add
pop
adc
in
pusha
or
iret
call
and
and
cmc
pop
repnz
add
loope
and
mov
pop
loope
push
mov
or
sub
adc
int
inc
dec
push
ins
or
mov
inc
mov
or
sbb
daa
arpl
pusha
sub
cmc
movs
add
enter
lods
push
or
lock
xchg
xlat
pop
lods
sub
add
das
pop
fcom
aam
mov
inc
sbb
fisttp
sbb
pop
leave
inc
jb
pop
push
jo
pop
jb
jo
xor
push
xchg
fsub
push
pop
ror
test
pop
pop
sahf
aas
nop
or
cld
fninit
jns
in
psrlw
push
add
pop
in
or
ret
mov
jl
je
cmp
add
ret
nop
enter
add
cli
add
iret
or
mov
add
mov
sbb
jnp
bound
mov
add
and
jge
pop
call
inc
or
add
jmp
inc
lds
aas
cmp
pop
push
imul
add
mov
frstor
cmp
add
pop
xor
aas
sub
add
sub
adc
add
xor
pop
mov
push
lea
call
hlt
shl
movs
outs
lea
push
loopne
hlt
inc
mov
lock
pushf
mov
dec
or
push
aas
fstp
shl
mov
lock
(bad)
cmp
jne
dec
push
dec
mov
cmps
dec
dec
mov
loopne
push
push
ds
fstp
pop
(bad)
pop
or
push
mov
mov
loope
cmp
gs
mov
cs
cmp
mov
and
jns
dec
mov
cmp
nop
dec
mov
fsubr
aam
repz
scas
bound
mov
(bad)
nop
inc
mov
and
mov
ins
mov
cmp
ja
jno
inc
mov
lea
rcl
fist
test
dec
cli
mov
(bad)
pop
pop
sti
movs
sbb
dec
jne
pop
push
push
jl
arpl
fadd
inc
add
in
popf
lock
ror
mov
pop
pop
test
mov
push
add
dec
jge
pop
je
mov
sub
movs
push
add
inc
pop
fldcw
iret
das
adc
push
sub
push
loop
test
or
ror
movs
je
add
mov
lock
test
outs
movs
or
cmp
add
inc
xchg
mov
sbb
mov
push
adc
ins
pop
mov
push
pushf
sbb
mov
test
add
push
adc
add
pop
pop
cmp
push
pop
mov
or
push
mov
mov
mov
es
or
jmp
cmp
adc
sub
mov
pop
push
sub
and
(bad)
xor
xchg
or
je
aaa
xor
daa
sbb
sub
cmp
and
add
push
jl
add
fs
mov
lock
mov
dec
cs
fisub
movs
stc
mov
adc
or
pop
add
pop
call
add
add
dec
mov
fwait
pop
add
sbb
add
mov
shl
adc
outs
(bad)
cmp
jbe
dec
mov
mov
rcr
in
sbb
sbb
rcl
inc
pop
cld
mov
je
call
shl
std
mov
mov
dec
jmp
push
mov
lea
test
ss
or
cmp
cmp
outs
and
jle
mov
cmp
jge
jge
fcmovu
mov
jge
shl
mov
sti
mov
stos
cmp
in
jg
dec
shl
ficom
(bad)
rcl
jge
or
pop
repnz
not
ins
jg
mov
rol
mov
cmp
jo
pop
sar
add
or
mov
je
inc
push
(bad)
pop
mov
cwde
(bad)
jg
not
inc
mov
jmp
xor
jmp
cmp
jg
sbb
add
cmp
rol
lea
push
push
mov
adc
ds
mov
movs
inc
jnp
mov
sti
pop
in
sbb
add
cld
(bad)
aas
adc
pop
xchg
jbe
cmp
mov
inc
push
jb
xchg
add
lea
lea
push
mov
add
pushf
bound
jo
push
std
sub
add
pop
push
(bad)
imul
and
xlat
je
imul
add
and
icebp
jmp
in
adc
sub
mov
jbe
shr
dec
fsub
add
jl
mov
enter
inc
in
inc
inc
cmp
mov
sub
cli
aad
mov
shr
xchg
aam
inc
mov
mov
daa
sub
mov
imul
adc
ins
inc
(bad)
and
(bad)
mov
sbb
mov
cmps
adc
xchg
(bad)
or
sbb
xchg
in
iret
or
nop
popf
mov
and
mov
mov
sub
je
sub
mov
dec
enter
push
movsx
jmp
adc
push
mov
add
ja
es
les
jmp
jge
jae
jbe
je
xchg
mov
ror
idiv
adc
sbb
push
or
xchg
pop
or
mov
test
je
xor
inc
push
test
fdivr
add
sar
daa
mov
mov
ret
mov
(bad)
jb
call
fiadd
cmp
add
jae
and
(bad)
sbb
mov
jmp
adc
mov
jne
or
jmp
adc
paddw
icebp
pushf
ror
mov
push
sub
jmp
fadd
cmps
sti
mov
adc
out
movs
xor
mov
cmp
add
fst
sbb
and
mov
movs
push
sub
push
or
jne
dec
ds
mov
repnz
rcl
test
outs
in
jmp
mov
outs
dec
pop
jb
repz
repz
jne
pop
sub
lea
addr16
jle
sub
push
push
push
mov
fbld
sbb
cmp
jl
push
or
fsubr
rol
jmp
mov
call
xor
and
cmp
jge
mov
mov
das
cmp
mov
ins
push
sbb
movs
or
addr16
mov
ret
pop
mov
push
push
pop
mov
inc
add
out
lea
inc
sbb
add
pop
jmp
mov
and
dec
neg
sbb
lea
and
push
loopne
cmovae
cmp
neg
outs
mov
pop
pop
dec
and
psllw
push
sbb
dec
add
pop
adc
repnz
jg
out
adc
pop
icebp
sub
add
or
retf
sub
or
add
xchg
repnz
cmp
repz
mov
add
sbb
push
jae
push
fild
push
push
fistp
bound
outs
imul
cmps
or
sbb
cld
mov
or
and
inc
and
adc
xchg
mov
sar
mov
sbb
loope
imul
or
pop
leave
adc
jp
mov
xchg
or
xor
and
and
je
adc
cmp
xchg
sub
ss
xor
fwait
lds
mov
pop
int3
xlat
xchg
mov
push
xchg
dec
xchg
sub
jmp
pop
mov
xchg
sar
push
push
push
dec
ja
jge
pop
pop
mov
ret
ss
mov
push
lods
inc
retf
inc
leave
adc
call
mov
out
xchg
mov
push
ret
inc
mov
rcr
xor
jnp
ja
popf
popf
fs
sub
test
es
dec
xor
pop
aaa
mov
or
mov
inc
or
mov
sbb
sub
mov
push
pop
pushf
adc
test
cmc
mov
jge
out
adc
fisttp
pop
lds
je
jae
cmp
mov
fnstcw
in
in
sub
push
nop
push
adc
outs
sar
icebp
mov
je
not
xchg
(bad)
jge
test
rcr
xchg
xchg
xchg
jnp
add
sub
add
sub
mov
js
outs
push
cmp
nop
mov
movs
add
or
mov
sbb
fdivr
je
adc
bound
(bad)
inc
or
icebp
fild
lea
push
jle
into
inc
in
rcl
mov
aad
in
(bad)
fistp
(bad)
(bad)
outs
fstp
pop
jnp
cmp
bound
mov
or
js
out
add
jle
or
cmp
lea
sbb
pop
mov
lods
push
call
or
data16
cmp
xlat
in
rol
sbb
or
retf
jo
sbb
outs
adc
sbb
mov
int
scas
xor
in
sbb
xor
leave
ss
ins
pop
or
sbb
xchg
cmc
sub
std
push
mov
sub
dec
pop
sub
add
inc
fwait
sbb
push
push
add
mov
add
test
cmp
push
(bad)
pop
sbb
fs
adc
jl
stos
ror
sbb
jmp
adc
cmp
xor
dec
mov
sbb
xchg
sub
push
xchg
or
ror
ds
sbb
push
push
fmul
fdiv
cmp
outs
xor
add
mov
xor
dec
or
push
mov
test
cmp
ja
das
inc
mov
xchg
int3
lds
jg
xchg
mov
jne
int
aas
push
jns
ja
je
adc
dec
pop
mov
xor
fnstcw
sbb
or
mov
cmp
push
js
sahf
jmp
(bad)
cmc
xchg
pop
fld
jno
jne
mov
fisttp
jmp
in
xchg
mov
pop
int3
mov
ret
(bad)
sub
xor
out
adc
add
sub
arpl
sub
int3
or
popa
mov
clc
leave
mov
stos
add
mov
ss
push
or
arpl
push
out
dec
sub
frstor
add
test
cmp
sbb
add
and
mov
pop
push
aad
ret
xor
inc
push
sub
and
cmp
call
lds
inc
sbb
cmp
inc
and
lahf
jge
or
dec
sbb
push
push
pop
icebp
xor
inc
cdq
add
retf
loope
jmp
pop
and
inc
push
add
inc
xchg
mov
nop
jl
outs
(bad)
pop
std
add
and
mov
or
and
(bad)
jmp
or
xor
adc
mov
into
add
mov
in
out
rcl
cmp
push
push
sbb
jne
scas
sti
rcr
cmp
je
ret
jecxz
sbb
sbb
jb
ins
call
push
aas
push
(bad)
mov
jg
xlat
jne
int
fild
call
add
xor
in
sar
inc
push
jge
mov
add
xor
dec
jne
adc
sbb
shl
pop
sbb
cmps
adc
(bad)
mov
xlat
movs
sbb
mov
jmp
cmp
xor
mov
xchg
out
add
cmps
jg
xchg
sub
sbb
sub
and
push
dec
fstp
inc
cmp
add
jae
add
jbe
mov
enter
cmp
inc
push
mov
aam
inc
dec
pop
xor
inc
sub
ror
mov
mov
or
sbb
push
add
lods
mov
lods
iret
pop
push
xor
or
bound
mov
dec
adc
sub
fsubr
mov
sbb
mov
cmp
(bad)
leave
pop
add
pop
xlat
xchg
xor
(bad)
ret
or
shr
pop
clc
add
add
ret
retf
sub
or
lods
add
aaa
jmp
dec
cld
mov
ret
xor
xchg
bound
dec
aaa
je
stos
sbb
adc
pop
sbb
mov
aam
lods
jae
fcmovbe
ficom
or
mov
cmp
iret
pusha
or
shr
and
push
movs
cmp
dec
(bad)
add
jp
inc
sbb
adc
push
push
mov
std
pop
lahf
fnstenv
add
je
push
inc
mov
cmp
outs
dec
add
daa
(bad)
and
xor
mov
loopne
test
ss
(bad)
bound
ins
es
adc
outs
repnz
mov
dec
jne
lea
jg
jle
icebp
or
or
jne
mov
mov
or
lds
dec
push
mov
in
dec
push
add
push
push
push
dec
aaa
pop
dec
xor
lea
or
scas
clc
popa
and
add
or
cmp
push
pop
cwde
push
sbb
lods
in
sbb
mov
cmp
xor
mov
pop
data16
jne
sbb
push
dec
or
mov
ins
or
xor
push
inc
sub
xor
in
mov
or
add
mov
or
pop
std
or
pop
ret
mov
inc
stos
scas
cmp
dec
nop
test
loop
cmp
mov
shl
iret
dec
xchg
mov
shl
(bad)
in
jbe
mov
out
stos
push
daa
jo
jnp
into
stc
and
cmp
or
and
mov
sqrtps
xchg
cmp
dec
push
retf
rol
mov
xor
mov
mov
push
inc
push
(bad)
sbb
cmp
les
pop
sub
xchg
inc
fcom
or
push
js
adc
dec
mov
cmp
je
and
sbb
call
inc
rol
mov
mov
jl
data16
xor
retf
pop
scas
dec
xor
sar
xchg
cld
ins
ret
xor
pop
inc
or
inc
or
cmp
das
call
add
mov
pop
rcl
dec
jne
dec
push
cmp
jmp
stos
dec
or
jbe
inc
dec
stos
jno
add
mov
je
sbb
push
push
cmp
data16
mov
jl
es
in
dec
fst
or
xchg
push
mov
sbb
adc
or
add
outs
cmp
lock
mov
jno
clc
pop
add
mov
rol
cmp
inc
add
add
repz
inc
je
pop
xor
jge
repnz
test
pop
mov
neg
sbb
out
push
mov
jl
into
cmp
nop
inc
ret
and
xlat
test
fdiv
push
add
add
mov
or
or
fist
push
add
aas
sbb
add
push
(bad)
outs
jb
jnp
push
pop
add
add
ins
xor
adc
inc
adc
sbb
adc
fwait
sub
add
dec
int3
mov
add
ja
xor
inc
and
fcom
shl
mov
adc
test
dec
or
mov
mov
fadd
outs
dec
xchg
in
adc
or
cmp
rol
and
sbb
sub
loope
xchg
inc
cmp
fucomip
mov
fldenv
nop
dec
scas
push
xchg
sbb
mov
push
or
pop
add
jbe
or
mov
sub
call
add
in
ja
add
dec
adc
push
cdq
xor
or
mov
sbb
adc
and
fisttp
or
mov
adc
mov
xchg
cmp
(bad)
push
or
cmp
data16
data16
xor
inc
pusha
mov
inc
dec
movs
jecxz
cmp
outs
or
mov
outs
popf
stc
push
cmps
or
add
es
js
mov
pushf
mov
cmp
adc
push
xor
dec
fwait
arpl
or
adc
xor
add
xchg
out
dec
fidiv
adc
mov
or
es
leave
xor
cmp
or
and
add
xchg
lds
out
or
test
pop
jl
je
and
shl
push
int3
sub
xchg
push
or
(bad)
dec
test
push
push
in
inc
add
aad
push
sbb
push
or
inc
jecxz
xor
loopne
sbb
lock
push
mov
not
pop
and
xor
clc
push
or
mov
inc
mov
paddusb
cmp
jg
xchg
mov
dec
jb
sbb
sahf
(bad)
iret
pop
pushf
mov
inc
mov
adc
jmp
mov
push
int
loop
out
popf
and
jo
ss
or
jne
repnz
inc
and
out
sub
inc
sub
adc
sub
pop
jb
call
rcl
pop
inc
(bad)
mov
add
fcomp
adc
add
dec
in
sbb
add
fist
popf
add
adc
push
retf
add
or
xor
push
push
(bad)
sbb
movhps
sub
jae
out
je
das
dec
mov
add
cmp
mov
mov
lea
xlat
cmp
adc
loope
adc
cmc
sbb
and
cmp
clc
and
adc
outs
loope
fsubr
or
mov
sbb
xor
test
adc
das
push
leave
jge
sub
ins
push
jae
inc
idiv
test
xor
jl
or
jmp
cs
adc
lods
cmp
adc
mov
or
push
test
cmps
add
imul
mov
scas
or
sbb
and
ja
add
(bad)
jne
aam
lea
inc
xor
div
(bad)
jnp
in
sbb
inc
add
sbb
push
(bad)
loope
fld
sub
jecxz
or
inc
pop
jle
sub
ins
cmp
jle
ret
xor
lea
pop
pop
cmp
jb
jo
pusha
rcl
dec
adc
leave
xchg
ins
sbb
pop
hlt
mov
xchg
push
dec
enter
shl
out
jg
or
leave
in
fst
into
xchg
mov
dec
repz
stos
mov
stos
xor
pop
fwait
xor
inc
(bad)
xor
or
mov
fs
push
dec
das
jne
pop
add
and
mov
ins
ret
pop
xchg
in
outs
scas
fistp
push
lea
add
sbb
aam
and
(bad)
pop
add
(bad)
and
jmp
adc
test
pop
ds
push
push
xchg
arpl
movs
xor
std
or
pop
in
mov
loopne
stos
cmp
pop
shr
cmp
cmp
add
push
hlt
sub
pop
dec
add
add
pop
mov
push
dec
or
jle
hlt
or
cwde
adc
push
push
call
not
push
lea
ds
jg
or
(bad)
in
outs
(bad)
add
mov
or
and
push
test
int3
jne
pop
hlt
sbb
inc
clc
push
rcr
ins
pop
retf
push
sub
jecxz
fs
adc
shl
sbb
neg
cmp
jl
je
arpl
int
jg
imul
mov
sub
lea
popa
and
jb
mov
adc
jmp
or
sar
or
fldcw
mov
lods
ins
mov
shl
dec
popa
and
adc
lds
sub
out
xor
cmp
cmps
sbb
mov
ror
or
jb
or
xchg
cli
jae
mov
mov
fs
cld
cld
add
sar
(bad)
ss
fld
inc
add
dec
add
xchg
xor
pop
scas
nop
dec
das
add
mov
fdivrp
add
jmp
arpl
xchg
xor
pop
ds
mov
xor
sti
test
scas
adc
inc
int3
fcomp
jmp
sub
add
test
push
je
loopne
or
aas
jl
sahf
xor
(bad)
lds
adc
xlat
adc
js
dec
jg
inc
pop
fisttp
mov
pop
rcl
psubd
mov
and
cmp
repnz
lahf
mov
gs
mov
push
cmp
stc
pop
mov
lea
pop
stc
or
mov
add
push
or
daa
addr16
hlt
or
adc
ret
das
xchg
mov
add
push
mov
jle
das
mov
inc
adc
enter
call
adc
mov
sbb
adc
pop
xchg
pop
jne
inc
sub
addr16
pop
pop
dec
adc
imul
sub
inc
scas
xor
add
ret
add
cld
jne
mov
movs
sbb
push
repz
cmc
fcomp
mov
xchg
xor
xor
jmp
int3
mov
add
sar
js
clc
ffree
adc
xor
imul
dec
jne
nop
push
sbb
mov
scas
mov
sub
dec
fiadd
cmp
push
add
jne
into
jbe
cld
mov
adc
jne
pop
mov
sahf
cli
xchg
pop
and
sub
push
or
dec
in
mov
dec
lea
fld
adc
jle
adc
inc
std
and
cmp
shl
fisttp
cmp
pop
es
xor
(bad)
neg
pop
mov
or
not
test
push
ja
sti
xor
repz
or
push
cmc
je
mov
cs
jge
sbb
nop
ins
push
jo
gs
das
lock
inc
call
jb
add
fcomp
push
cmp
mov
xor
xor
xchg
mov
test
cmp
ret
mov
add
adc
lea
push
inc
sbb
test
xor
sub
jne
(bad)
jl
ret
sbb
push
push
mov
mov
call
adc
and
push
scas
or
inc
mov
inc
cmp
and
fadd
xchg
mov
push
in
push
add
sub
call
push
in
je
jge
jge
sbb
adc
sti
or
loop
push
test
sbb
js
std
jl
in
outs
push
call
(bad)
in
push
and
cvtps2pi
add
xor
dec
mov
add
fisttp
outs
test
cmp
dec
push
push
enter
xchg
pusha
push
mov
add
(bad)
fadd
push
in
xor
out
out
jge
test
adc
(bad)
sbb
adc
and
aas
ret
pusha
sbb
adc
cmp
daa
icebp
mov
jmp
fabs
adc
retf
mov
mov
std
mov
in
mov
push
adc
adc
and
js
inc
mov
out
es
jle
sub
add
jmp
jns
cmp
rol
mov
aas
(bad)
mov
sar
and
aam
dec
sub
cmp
pop
inc
rcr
or
mov
idiv
xchg
mov
xchg
leave
cld
fisttp
sub
mov
stc
jbe
lds
ret
les
shl
cwde
std
cmps
jmp
mov
adc
inc
jg
add
add
xchg
push
sbb
add
jg
xor
pop
xor
or
and
mov
add
mov
rol
cli
retf
aaa
call
fnsave
mov
mov
mov
xchg
mov
into
and
adc
mov
adc
mov
adc
cvttps2pi
movs
mov
dec
nop
or
inc
imul
dec
outs
sbb
push
or
aad
sbb
fidivr
sub
mov
rcl
push
xor
inc
add
jmp
cmp
mov
jbe
mov
xchg
mov
jno
jo
ja
les
sbb
fst
inc
icebp
add
push
ins
jp
shl
into
mov
mov
dec
cmp
vmovq
cmp
movs
(bad)
xor
(bad)
xchg
inc
xor
popf
fcmovbe
scas
add
sbb
and
lock
push
scas
pusha
lods
push
xor
fdiv
je
sbb
(bad)
dec
and
pop
pop
jecxz
xchg
aad
js
sti
jge
mov
sub
rol
cmp
sub
pushf
xor
pop
lods
adc
mov
sub
lock
and
and
outs
adc
and
jae
add
fs
test
fs
mov
mov
add
int3
rol
push
(bad)
lods
ja
xor
ds
lock
retf
and
(bad)
cmc
xor
test
rol
add
xor
add
int
adc
adc
cmp
div
and
pop
add
cmp
(bad)
mov
add
sub
popa
sbb
sub
adc
dec
sub
and
pop
mov
sub
or
push
xor
add
adc
jne
(bad)
(bad)
(bad)
(bad)
jge
into
scas
(bad)
stc
repnz
leave
hlt
fcom
mov
neg
scas
jns
dec
pop
jg
cmps
fiadd
jmp
(bad)
(bad)
shr
ret
js
ins
dec
sub
inc
jns
ja
jbe
and
cld
call
pop
and
dec
jnp
jge
adc
sbb
(bad)
sar
test
mov
outs
dec
ds
sub
push
ss
jae
adc
rcr
inc
call
push
sub
and
or
push
sub
or
jnp
push
xor
and
push
and
fwait
in
sti
sub
push
and
sub
and
(bad)
pop
pop
push
push
xor
add
(bad)
jns
push
(bad)
in
mov
xor
lds
sub
in
push
std
mov
mov
(bad)
call
inc
pop
add
fiadd
mov
mov
mov
into
les
(bad)
(bad)
jmp
push
dec
inc
push
push
inc
push
inc
pop
push
popa
dec
jne
popa
and
jns
popa
imul
cdq
sti
outs
in
mov
mov
shl
mov
mov
std
pop
sti
(bad)
mov
scas
mov
ds
loop
fdivr
xchg
(bad)
xor
xor
xor
push
cmp
inc
inc
inc
inc
inc
repz
xor
int3
loope
(bad)
jmp
push
push
arpl
jo
cs
push
jb
outs
fs
xor
cs
(bad)
out
(bad)
js
and
ins
cs
gs
jb
je
arpl
dec
popa
and
cmp
gs
add
dec
dec
inc
push
pop
in
mov
imul
mov
jae
arpl
jae
add
jb
fbstp
xlat
outs
or
or
inc
jb
popa
je
arpl
pop
inc
add
outs
or
inc
gs
popf
mov
jnp
imul
test
ins
fsubr
out
cwde
adc
popa
ins
push
pop
popf
lds
push
ins
adc
push
(bad)
jo
push
outs
popa
xchg
push
pusha
aaa
aaa
xchg
ss
push
dec
in
fistp
push
outs
jne
push
imul
ja
or
push
inc
(bad)
ins
fdecstp
dec
popa
push
sbb
push
outs
mov
ss
inc
push
bound
push
jne
jns
js
mov
or
cmps
outs
adc
ret
mov
mov
fs
jb
jo
fsub
mov
cwde
and
sbb
dec
retf
and
xor
pop
push
cld
(bad)
fidiv
and
xchg
fucomi
jge
ss
(bad)
mov
sub
mov
(bad)
sbb
mov
pop
in
nop
fisttp
mov
(bad)
jmp
iret
in
(bad)
jmp
add
pusha
stc
pop
scas
das
jne
add
or
sub
fs
push
add
nop
inc
add
add
xchg
add
or
add
gs
add
jb
outs
je
imul
adc
fs
mov
mov
dec
or
inc
ins
ins
outs
arpl
popa
imul
inc
dec
bound
or
mov
sbb
sub
jne
sbb
fcomp
not
sbb
sub
popa
mov
jo
outs
outs
xor
inc
je
inc
jns
mov
imul
dec
(bad)
xchg
adc
lahf
popf
imul
or
adc
inc
dec
or
add
jb
dec
aad
mov
pusha
dec
sub
sbb
or
add
and
fld
test
cmp
add
inc
sub
adc
loopne
fld
add
test
fiadd
sub
cmp
ret
retf
sbb
adc
stos
or
(bad)
mov
or
fcom
fsubr
inc
inc
pcmpgtd
outs
ret
(bad)
adc
push
push
add
pushf
lock
mov
push
dec
fisubr
fnsave
add
jbe
pop
inc
dec
cmp
out
or
popa
je
adc
ja
mov
outs
arpl
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
ins
mov
arpl
daa
data16
scas
stc
outs
sub
xor
and
lahf
stc
outs
arpl
or
mov
imul
dec
push
dec
inc
fisubr
add
pop
adc
cs
popa
push
add
xchg
dec
(bad)
(bad)
cmp
push
cmp
jp
sbb
xchg
jge
dec
or
imul
int
mov
or
mov
jecxz
cmp
call
xor
mov
rol
rol
loope
inc
outs
push
xchg
nop
or
cmp
ja
fild
fbstp
jmp
push
push
lahf
imul
(bad)
dec
sbb
inc
add
dec
add
mov
in
and
add
add
add
add
nop
xor
pusha
(bad)
int
xchg
ins
mov
add
addr16
aaa
or
das
rcl
or
in
or
adc
push
add
outs
cmp
js
popa
xchg
shl
test
add
je
add
lea
jmp
and
imul
jb
pop
popa
mov
dec
outs
push
rol
add
cs
fnstenv
pop
daa
ror
and
jmp
adc
rol
jmp
add
ins
mov
add
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
