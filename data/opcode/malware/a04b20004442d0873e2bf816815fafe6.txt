or
dec
mov
add
je
add
adc
add
add
call
or
and
aaa
stos
das
call
test
jb
or
ficomp
mov
shl
imul
pusha
and
add
cmp
push
jmp
nop
jge
pop
dec
pop
data16
test
cmp
stc
retf
xchg
ja
or
loop
jg
out
cmc
sub
cmp
sub
xchg
xchg
daa
and
adc
scas
adc
xor
retf
(bad)
mov
xchg
in
(bad)
sbb
or
xchg
push
inc
enter
adc
cmc
cs
xor
mov
pop
inc
add
mov
into
jle
bound
add
movs
cmp
dec
sbb
loope
out
cmp
clc
dec
nop
push
push
adc
xchg
xchg
loopne
sbb
sub
adc
inc
fild
(bad)
rcl
sbb
push
adc
sti
(bad)
xchg
fwait
(bad)
push
mov
lds
in
jmp
dec
sub
mov
adc
mov
movs
lods
mov
xchg
adc
fiadd
xchg
scas
das
dec
outs
sub
sbb
popa
ja
mov
mov
mov
adc
(bad)
mov
mov
hlt
into
adc
mov
or
or
aad
adc
retf
jae
jle
mov
xor
(bad)
and
and
sahf
dec
mov
in
clc
aam
inc
xchg
or
or
mov
es
push
xchg
push
in
sub
xchg
jmp
pop
mov
inc
cmp
xor
jle
les
xor
mov
out
outs
dec
fild
out
adc
inc
ins
sbb
xor
nop
jg
xchg
sbb
neg
mov
les
pop
mov
out
inc
scas
xchg
ins
je
mov
xchg
mov
xchg
xchg
lea
xor
adc
imul
bound
xchg
mov
push
jo
mov
xchg
lock
sbb
and
ret
sub
jo
sbb
mov
es
test
sar
mov
adc
xchg
xchg
adc
pushf
jp
add
sar
frstor
nop
inc
(bad)
outs
daa
cmp
xchg
sbb
rcr
jge
int3
adc
sub
jae
nop
dec
or
cs
test
ss
dec
data16
sub
lock
push
and
sbb
in
es
mov
jno
loope
mov
push
and
fnstcw
fs
(bad)
xchg
jg
fiadd
jno
mov
(bad)
daa
adc
inc
gs
mov
adc
ret
dec
cmp
mov
mov
fistp
adc
ret
stos
jbe
jae
scas
xchg
jecxz
adc
pop
add
push
pop
fidiv
mov
and
xchg
sbb
fcos
or
sub
sub
pop
imul
mov
mov
inc
pop
out
test
out
repnz
push
das
pop
(bad)
loope
popf
push
test
lods
ins
sub
dec
pop
cmc
push
sbb
shl
add
xchg
mov
lds
loopne
xchg
std
mov
push
and
mov
das
shr
sub
push
cmp
(bad)
xor
out
lahf
sahf
jmp
lods
fwait
xchg
ret
cdq
pop
add
xchg
mov
shl
scas
in
shl
cwde
add
(bad)
iret
push
int
pop
and
push
(bad)
shr
and
cmp
mov
pop
lds
lahf
adc
int3
sub
push
jne
pop
inc
dec
push
push
adc
jbe
sub
mov
and
mov
add
fisubr
xchg
xchg
dec
jbe
cmp
stos
test
jnp
dec
dec
mov
iret
pop
and
mov
xchg
ret
pop
pop
loope
xor
lock
pop
fnstsw
cwde
mov
push
scas
add
and
and
scas
enter
pop
into
outs
xchg
xor
xor
cmp
mov
(bad)
sub
jle
sub
imul
pop
sub
fdivr
(bad)
bound
sbb
mov
jle
xchg
in
xlat
cmc
test
shl
jb
pop
add
or
add
inc
adc
pusha
pop
stos
ins
sbb
or
inc
iret
inc
mov
outs
cmp
enter
out
sub
cld
pop
adc
outs
sbb
out
mov
daa
add
xchg
in
lods
pop
mov
(bad)
add
mov
outs
loopne
pop
rol
jmp
pop
div
stos
add
dec
inc
jb
push
xchg
cs
pusha
dec
mov
sar
mov
cmp
push
jle
mov
adc
pop
adc
jl
jnp
loopne
jne
ins
dec
test
lahf
cs
cmp
jo
mov
gs
inc
ss
push
mov
xor
aam
fstp
outs
add
int
out
mov
jns
xchg
pop
inc
in
jmp
ins
mov
and
in
stos
mov
cwde
outs
xchg
dec
xchg
not
xchg
pop
bound
pusha
into
jb
adc
and
fisub
push
sar
or
int3
push
push
and
std
or
inc
pusha
(bad)
push
out
sub
jmp
rol
in
cmc
mov
push
imul
(bad)
cld
fdiv
popf
repz
aam
fstp
repnz
stos
pop
mov
lds
xlat
xchg
jmp
imul
cld
push
in
dec
repz
or
and
popa
sbb
loope
jae
(bad)
(bad)
fstp
xor
mov
(bad)
leave
inc
test
and
adc
and
cli
jecxz
push
pop
popf
out
cmp
test
xlat
loopne
pop
dec
rcr
ja
mov
pop
jecxz
cdq
jle
in
mov
test
mov
aam
and
inc
jae
ss
retf
loopne
or
jbe
out
leave
xor
fs
sbb
mov
retf
and
xchg
iret
out
and
imul
in
or
fnstsw
rcl
out
mov
lods
(bad)
mov
jg
ins
dec
(bad)
(bad)
stos
mov
inc
je
sti
or
(bad)
sub
sti
(bad)
fcmovne
ds
hlt
add
mov
cmp
loop
int
daa
leave
retf
mov
jbe
sbb
les
ret
sbb
ud0
shl
and
mov
(bad)
mov
jp
add
sub
outs
xchg
jmp
in
vpunpckhqdq
scas
or
nop
add
out
push
je
push
push
(bad)
or
jle
shr
outs
retf
clc
xchg
rcl
add
test
ins
dec
mov
adc
xor
jge
and
inc
(bad)
fdiv
in
xor
adc
and
sbb
nop
lea
push
aas
xlat
pop
sti
inc
or
push
divps
sbb
sbb
xchg
mov
cmp
pop
mov
dec
icebp
enter
call
cdq
jecxz
call
mov
mov
rcl
pop
cmc
mov
add
cmp
movs
retf
push
jns
pushf
icebp
(bad)
stos
pop
or
enter
stos
movs
jmp
mov
xchg
std
push
shl
xchg
ins
std
cmp
jbe
or
(bad)
gs
jnp
stos
cmps
outs
jbe
jg
mov
adc
scas
mov
jl
sub
sahf
rol
das
call
pop
pop
out
rcr
les
or
dec
push
mov
popf
inc
gs
adc
dec
adc
or
jge
adc
mov
fwait
aas
dec
push
adc
fmul
into
in
stc
neg
inc
les
adc
ins
pushf
mov
fxch
data16
push
sti
outs
stos
adc
movs
rcr
call
dec
scas
add
cmp
fld
sub
out
into
pop
inc
mov
or
movups
ror
lahf
dec
inc
xor
fistp
in
xlat
nop
adc
push
push
loop
push
mov
out
xor
ret
jmp
and
data16
pushf
dec
or
std
outs
jle
aas
aam
ins
push
(bad)
sahf
push
(bad)
repnz
(bad)
fidiv
dec
cmps
mov
stos
add
sbb
push
mov
xchg
in
jmp
cmps
ins
cmp
jb
add
dec
jle
setle
int
into
dec
sub
dec
mov
mov
rol
sbb
jp
(bad)
jp
or
sbb
push
int3
mov
out
les
arpl
push
add
push
push
jmp
imul
xchg
(bad)
movhps
ins
mov
jnp
sti
psrld
mov
aaa
push
pop
jp
jns
inc
jp
push
jmp
icebp
sub
xor
mov
pop
mov
imul
mov
cld
mov
imul
cmc
enter
inc
sahf
div
dec
mov
lahf
movs
stos
test
hlt
lahf
lods
addr16
cmp
or
fmul
stos
imul
out
dec
mov
js
mov
(bad)
outs
(bad)
fdivr
mov
lea
adc
inc
lds
xor
jnp
jnp
call
aas
adc
and
xor
cmp
push
or
add
stc
aaa
xor
xor
shr
ret
pusha
pop
add
inc
retf
pusha
inc
out
xchg
and
add
cmp
out
pusha
pusha
mov
adc
les
add
xor
das
jmp
pushf
pop
mov
inc
movs
cmps
sbb
jle
movs
mov
mov
rcr
sub
adc
mov
and
cmps
xor
into
cdq
jmp
cmps
cmp
jmp
mov
dec
je
je
and
pop
adc
movs
add
add
push
jecxz
jmp
jp
pop
jo
sbb
sub
xchg
clc
mov
frstor
mov
dec
repnz
les
cmps
sub
addr16
movs
test
scas
js
inc
or
test
wrmsr
sahf
jmp
or
mov
mov
ds
stos
call
xchg
int3
ret
xchg
push
pop
jmp
and
repz
mov
loop
pop
cmc
cdq
lods
imul
ds
ins
push
dec
jp
mov
pusha
or
sti
cwde
mov
lahf
mov
sbb
push
inc
in
(bad)
mov
inc
mov
jge
lea
inc
jae
dec
clc
mov
shr
mov
imul
das
and
loopne
aas
sbb
cdq
aaa
ret
scas
push
pushf
(bad)
stc
sbb
xchg
and
fild
(bad)
in
jmp
pushf
(bad)
sub
imul
pushf
in
sub
sub
in
sahf
xor
inc
dec
dec
gs
sbb
sti
add
test
outs
retf
xlat
push
imul
push
movs
cld
lahf
bound
rcl
cmc
es
hlt
xchg
leave
add
xchg
mov
cmp
ja
mov
fidiv
mov
aaa
dec
sar
stos
mov
xor
or
jp
and
mov
enter
fchs
pop
mov
std
sti
sub
push
shr
enter
int
fnstsw
(bad)
aad
out
add
push
(bad)
adc
push
test
cmp
add
aad
jb
sar
pop
test
imul
sub
cmp
xor
(bad)
loopne
ds
jecxz
sbb
or
or
aad
out
add
mov
mov
ret
and
cmp
xor
stos
jl
xchg
mov
fdivrp
jp
fmul
sbb
(bad)
mov
adc
mov
add
pop
inc
fldenv
ins
mov
xor
lahf
xchg
loop
dec
(bad)
retf
xor
cmp
cli
enter
jge
jne
or
test
out
mov
or
bound
mov
dec
dec
xor
call
jo
sbb
je
sti
mov
hlt
jg
retf
jns
cmc
pop
rcl
cmps
lock
retf
mov
pop
cmp
push
cmps
push
xchg
jmp
loope
in
into
sbb
push
pushf
jne
aam
in
std
jg
js
inc
int
imul
mov
mov
mov
fisub
aad
mov
es
int3
int
sub
mov
test
lahf
pusha
in
mov
xor
sbb
jmp
adc
dec
mov
jnp
and
cld
into
popf
dec
jmp
fsub
fmul
fdiv
sbb
jecxz
add
jp
or
inc
sbb
sar
enter
sub
xlat
int3
data16
inc
pavgw
dec
or
mov
fwait
jae
out
push
push
pop
jecxz
and
jp
shl
or
(bad)
in
inc
xchg
jmp
lods
mov
pop
out
xchg
faddp
xchg
adc
mov
dec
inc
cmp
mov
or
dec
xor
fldenv
fadd
mov
lock
mov
dec
sahf
rol
add
jae
and
out
xor
mov
js
push
adc
sub
lods
aas
mov
sbb
imul
gs
jns
cmp
daa
ds
cmps
int3
sub
xlat
push
call
movs
sar
sbb
push
hlt
inc
jmp
enter
pop
sub
mov
cmp
outs
push
stc
pop
(bad)
stc
mov
inc
xchg
sahf
mov
movs
mov
pop
dec
mov
mov
out
call
mov
jmp
dec
pop
mov
mov
mov
leave
sub
xchg
jns
popa
pop
mov
or
imul
movs
les
push
xchg
imul
mov
mov
push
arpl
jb
xchg
pop
cmps
dec
jg
in
pop
clc
sub
test
outs
(bad)
call
pop
push
mov
add
es
mov
aaa
mov
sahf
scas
imul
jl
adc
mov
in
and
frstor
pop
mov
xchg
ret
out
sbb
retf
cli
inc
jbe
(bad)
pusha
add
or
retf
jns
je
stos
add
xchg
cmp
mov
xor
dec
sahf
push
daa
sub
clc
pop
test
xor
fisubr
pop
xabort
cmps
and
cmp
pop
in
jno
pop
outs
cli
or
je
shr
pop
jae
xchg
hlt
vcvtps2dq
(bad)
or
and
jp
loop
outs
add
js
push
cmp
pop
sub
mov
not
sbb
adc
pushf
div
sahf
add
ds
jp
lods
sub
std
dec
addr16
pop
dec
(bad)
xchg
movs
lahf
in
fs
mov
sahf
outs
pushf
dec
popa
mov
jecxz
pop
nop
fsub
pop
jns
jnp
retf
push
lock
add
ds
xor
(bad)
loop
pop
push
cmp
call
push
sbb
add
in
dec
call
mov
fstp
adc
fbld
add
inc
or
(bad)
push
pusha
(bad)
out
movs
adc
mov
or
call
pusha
stos
popa
jns
adc
scas
add
and
dec
push
mov
xchg
ret
rcr
jge
cmp
adc
jns
adc
mov
sti
pop
(bad)
hlt
sbb
mov
lods
(bad)
cwde
pop
mov
jo
dec
mov
ins
out
fisttp
ins
lahf
sbb
repnz
in
dec
jmp
(bad)
mov
loopne
mov
sbb
outs
ret
adc
mov
fs
arpl
cmc
sub
xchg
(bad)
jo
test
outs
js
push
fisttp
cli
push
cli
movs
sbb
cmp
pop
and
xor
(bad)
lods
lahf
pop
popa
jo
jg
cmps
sub
fucomip
push
aad
lahf
aam
mov
popf
stos
push
jae
pop
cmps
lahf
mov
sbb
scas
xchg
leave
pushf
push
add
lods
push
inc
das
or
ins
enter
jae
test
test
loope
out
fwait
mov
sub
test
mov
mov
sub
cmps
sub
inc
cmp
lods
mov
mov
mov
ins
xchg
fwait
dec
jo
dec
rcl
dec
or
jbe
push
icebp
stc
aam
cld
addr16
pop
mov
xor
add
fbld
daa
cwde
pop
sub
arpl
movs
retf
and
push
push
adc
ds
daa
mov
sbb
mov
jo
or
retf
clc
mov
sub
and
xor
xor
mov
js
outs
mov
cmc
mov
dec
iret
and
test
retf
jo
je
or
mov
add
mov
adc
mov
xchg
mov
data16
sub
fwait
test
out
sti
iret
mov
sub
or
or
pop
push
cmp
jbe
mov
in
mov
loope
(bad)
jns
out
mov
out
push
fiadd
push
xchg
aam
ins
pop
mov
mov
out
xchg
out
ins
and
dec
lea
push
cmp
or
pop
xchg
sbb
and
push
cld
xchg
test
scas
js
inc
not
push
push
push
pop
pslld
cli
adc
xchg
add
push
leave
sbb
dec
shl
and
inc
sti
pop
pop
sub
xchg
fmul
fs
faddp
mov
loop
jp
icebp
fld
cdq
mov
dec
loopne
jle
ffree
xchg
pusha
retf
in
lea
dec
and
in
and
xchg
xor
mov
cmovne
(bad)
retf
ret
pop
sub
and
sar
push
xor
fwait
push
push
nop
push
repz
(bad)
(bad)
push
mov
dec
mov
xchg
dec
imul
or
adc
mov
ds
xchg
jle
cmc
(bad)
sbb
(bad)
mov
fsubp
(bad)
movs
pop
gs
mov
les
add
test
xor
cmps
(bad)
adc
jg
mov
push
lahf
sub
js
ret
mov
(bad)
adc
iret
addr16
retf
psubusb
xor
dec
outs
dec
or
call
and
push
(bad)
(bad)
fnstsw
stc
(bad)
mov
push
or
pop
aaa
dec
push
dec
inc
mov
pop
sub
sbb
stos
pusha
pop
lahf
je
enter
pushf
xor
add
or
int3
jb
xchg
js
add
retf
jns
lods
mov
stos
and
dec
retf
or
(bad)
rcl
jne
popf
push
mov
adc
sti
push
int
xchg
js
fs
cld
mov
dec
pop
dec
mov
ss
sub
mov
call
sub
ficomp
loopne
repz
int
mov
ss
mov
mov
and
dec
icebp
xchg
add
ja
(bad)
adc
pushf
push
mov
mov
or
sub
xor
mov
jmp
test
cmp
out
outs
mov
call
mov
cmc
add
xchg
cmp
xlat
add
cwde
scas
imul
jge
in
rcr
or
xor
test
fisttp
fcomp
imul
cmp
(bad)
retf
and
cmp
pop
sbb
mov
test
jl
icebp
or
movs
shl
cdq
fimul
call
shr
add
push
test
xchg
(bad)
ret
add
jne
or
jbe
retf
in
push
dec
jle
std
sub
(bad)
mov
pop
mov
iret
mov
fiadd
mov
call
mov
cwde
repz
int
jbe
pop
nop
sbb
test
mov
cdq
imul
mov
xor
mov
sub
je
stos
loope
fsubr
loopne
das
sbb
paddusw
and
jge
sbb
push
sti
xchg
aam
mov
mov
cmp
add
add
mov
aam
adc
cmc
mov
sbb
test
mov
pop
ss
xchg
cmps
and
fucomp
sub
cmp
not
pop
or
mov
iret
jg
pop
or
add
xor
js
rol
ins
add
in
sbb
lea
mov
xchg
icebp
sub
dec
push
fwait
enter
or
adc
push
pop
out
pop
cmc
xor
jne
mov
xchg
cmp
cmps
arpl
inc
les
cli
add
ins
retf
bound
sti
ins
loope
xchg
sbb
mov
mov
test
cwde
fidiv
cmc
repz
pop
mov
sub
(bad)
dec
or
repz
sbb
(bad)
in
add
jae
movs
stc
pop
add
mov
das
sub
imul
nop
push
pusha
adc
cmps
jl
mov
mov
les
jg
hlt
ret
xlat
sub
xchg
sub
mov
lock
push
idiv
and
sub
je
pop
pushf
jmp
sub
cdq
mov
ins
(bad)
fsubr
shl
je
inc
retf
sbb
dec
push
fs
sahf
test
push
(bad)
shl
lods
test
aas
pop
sbb
dec
nop
push
popa
(bad)
jnp
fs
int
daa
popa
or
pop
rcl
pop
mov
out
lahf
jne
xor
mov
addr16
movs
and
cld
test
aam
lea
push
rcl
xchg
cmps
xor
cmc
mov
mov
aas
jne
cmp
push
fisubr
mov
lahf
jp
xchg
stc
and
nop
lea
cmp
xor
outs
sbb
scas
mov
inc
div
jbe
add
movs
add
enter
enter
fidiv
cwde
jbe
cs
call
stc
push
jp
pop
xor
or
jb
pop
jnp
push
dec
fmulp
ficom
xor
adc
(bad)
cmp
shr
or
adc
call
mov
inc
dec
fwait
int
adc
xlat
cmp
test
or
repnz
xor
and
jbe
or
push
retf
test
enter
loopne
test
mov
nop
jmp
push
pop
cmp
dec
mov
lahf
mov
mov
mov
cmp
add
test
addr16
cs
cmp
mov
cmp
test
dec
lods
lods
(bad)
mov
inc
lds
hlt
mov
xchg
inc
push
inc
or
mov
add
out
movs
rcr
sub
xor
pop
fild
arpl
jp
mov
ror
adc
sub
rol
inc
fldcw
stos
add
aas
leave
shl
(bad)
rol
jge
push
in
mov
sbb
mov
xor
ficomp
and
or
pop
bound
cmp
cld
inc
cmps
scas
dec
out
lea
sar
xor
mov
pop
adc
or
call
(bad)
mov
stc
lahf
sti
in
or
pusha
or
retf
inc
dec
and
adc
loop
sbb
adc
pop
mov
cmp
icebp
pop
jmp
popf
aad
(bad)
pop
xchg
xor
nop
(bad)
mov
or
fisubr
je
adc
ja
mov
sbb
in
or
sub
xchg
scas
repnz
adc
mov
cmp
or
(bad)
icebp
sub
mov
imul
inc
dec
lods
mov
mov
test
mov
push
mov
dec
mov
dec
jl
xchg
inc
jmp
mov
or
cmp
jns
pusha
fdiv
dec
sbb
sbb
sahf
cld
ins
neg
repnz
push
xor
add
xchg
scas
call
stos
adc
cmps
dec
rol
test
xchg
cmp
icebp
call
in
cmps
push
and
pop
adc
cli
pop
adc
inc
popf
test
and
xchg
outs
stos
shl
add
scas
cmp
xchg
int3
xchg
pop
std
popa
adc
add
pop
repz
adc
lds
lods
cmps
sbb
jne
lds
adc
int
push
(bad)
jg
fdivr
mov
int
dec
int
jae
add
pop
outs
fdiv
repz
pop
lock
xlat
jno
push
xlat
sbb
xor
jp
jecxz
xchg
xchg
cmovo
es
adc
gs
inc
push
aas
push
icebp
inc
fwait
sbb
mul
fsubr
jecxz
lock
inc
add
jno
xchg
xchg
push
sub
dec
mov
add
cli
adc
pushf
cmp
mov
imul
aam
xor
add
dec
xor
je
inc
push
not
enter
add
mov
cmp
out
and
icebp
mov
enter
dec
je
cmp
mov
mov
loopne
xchg
cmps
cmp
dec
add
rcl
sbb
call
mov
mov
jle
out
and
in
jb
cmp
dec
movs
mov
repz
ins
(bad)
enter
pop
adc
mov
call
test
nop
cmp
add
and
call
mov
shl
mov
mov
adc
sub
ds
mov
cmp
(bad)
retf
out
add
add
or
adc
jbe
sbb
fist
and
mov
pop
push
addr16
lahf
(bad)
jbe
movs
aad
nop
mov
cs
fmulp
jo
imul
sub
or
aam
mov
das
ja
push
xor
jg
aam
adc
push
sbb
push
mov
or
mov
loop
nop
in
add
dec
push
push
xchg
inc
jle
aaa
(bad)
pop
arpl
test
lea
xchg
mov
sbb
aas
out
xchg
repnz
rol
punpckldq
jns
add
aam
das
inc
mov
fsubp
(bad)
push
ja
pushf
sbb
mov
push
sub
test
sbb
xor
shl
jo
jmp
je
ret
sahf
jns
push
je
sub
mov
push
dec
jecxz
aaa
fwait
in
adc
dec
cmp
retf
sbb
imul
imul
push
xchg
pop
pop
xchg
scas
xchg
and
ret
xchg
fucomi
xchg
push
dec
push
in
pop
inc
mov
mov
mov
mov
fcomp
add
add
jns
test
jns
imul
pop
mov
mov
or
enter
add
test
out
jne
inc
and
xchg
xchg
mov
inc
nop
rcl
or
arpl
xlat
sbb
sahf
pop
stc
mov
aas
(bad)
mov
out
cmp
(bad)
out
xchg
mov
test
in
aam
sbb
cmp
mov
jmp
jmp
ins
xchg
loopne
loope
fnstcw
test
adc
jnp
cmp
and
cmc
outs
ret
(bad)
sbb
es
mov
arpl
or
std
rol
or
or
(bad)
pop
or
movs
imul
sub
jns
inc
dec
mov
inc
stc
mov
inc
outs
push
call
loope
and
imul
int
sbb
ror
std
test
loopne
sti
sbb
ret
pop
push
add
mov
test
shl
imul
or
imul
jmp
fsubr
in
push
shr
(bad)
in
test
dec
js
sar
in
cmps
fcomp
pushf
ror
sub
mov
ja
or
int
add
jg
sub
adc
fwait
push
(bad)
in
aad
neg
ins
fdivr
leave
xchg
adc
mov
fidiv
mov
jl
jns
call
push
pop
and
adc
gs
mov
dec
xor
inc
movs
xor
xor
and
out
and
rcl
pop
inc
std
adc
fst
cmp
jns
iret
(bad)
cmove
jl
mov
lods
xlat
in
pop
daa
in
mov
jg
scas
dec
jns
aad
adc
dec
xor
les
xchg
inc
and
mov
xchg
iret
jbe
scas
cmp
in
cli
mov
push
(bad)
add
gs
cmp
dec
in
jno
sub
rol
test
and
pop
daa
(bad)
nop
and
out
test
xor
sbb
stos
adc
ret
je
loope
sub
or
cmp
pushf
pop
test
jge
daa
pop
adc
ja
test
sub
jle
ret
mov
pop
jns
repz
scas
pushf
bound
mov
adc
cmp
leave
xchg
sub
pushf
mov
pop
test
stos
pop
aam
in
test
pop
push
mov
xchg
jbe
cs
ret
loopne
enter
outs
and
xchg
or
stos
add
push
lods
mov
(bad)
ud2
dec
push
test
inc
popf
push
sbb
iret
dec
xor
sbb
loope
ret
push
add
out
les
movs
stos
xor
mov
mul
adc
mov
pop
jb
and
sub
jge
and
imul
cs
xor
adc
push
mov
xor
inc
loopne
lods
mov
ds
cmps
xchg
js
and
cwde
pop
xor
or
cmp
sub
cmps
arpl
nop
ins
stos
shl
aam
je
inc
and
pop
push
fld
rol
sub
dec
test
sbb
sbb
adc
in
aad
mov
mov
mov
mov
mov
aas
ror
jo
jae
cmp
push
sub
mov
inc
jb
fisubr
fist
scas
fidivr
idiv
loop
cli
call
sub
mov
adc
cmps
movs
pop
xchg
icebp
jle
pop
mov
adc
(bad)
ins
dec
leave
gs
addr16
add
xchg
inc
and
lock
ror
add
inc
mov
cmp
sbb
push
popa
ins
fist
add
in
jbe
cmp
push
jnp
mov
push
fadd
(bad)
cli
dec
jmp
pop
fmul
add
jns
(bad)
das
or
popf
shl
push
pushf
cmp
ds
mov
mov
pusha
sub
jle
gs
outs
pop
ss
xchg
pop
mov
dec
rol
bound
or
dec
adc
test
fld
repnz
dec
cdq
loop
mov
mov
into
jle
rol
(bad)
repz
and
mov
stos
fsub
fild
retf
jbe
xor
push
ret
leave
sti
ins
pop
ret
retf
je
add
pop
stos
lahf
bound
jecxz
aam
out
inc
cdq
cs
pop
sar
mov
jp
adc
jae
xor
jbe
jb
call
inc
aam
sub
fmulp
jo
add
repz
xchg
or
dec
push
push
pop
inc
push
cld
sahf
fdiv
ins
inc
xor
cdq
int
ds
jnp
outs
jmp
sar
xchg
das
xchg
lock
cdq
jge
cld
popa
rcr
adc
sti
or
mov
cmp
out
into
scas
push
cli
jmp
jmp
mov
test
sti
push
xchg
icebp
adc
and
jmp
push
retf
clc
jecxz
lds
ret
fs
inc
ins
leave
pop
pop
xor
inc
mov
jmp
xchg
gs
mov
push
scas
cmc
cmp
xchg
aad
or
add
(bad)
and
jne
fild
bound
push
out
xchg
add
jbe
adc
mov
ja
pop
addr16
or
push
pop
and
addr16
cmp
daa
rcl
imul
jmp
dec
jp
js
cmp
cwde
adc
aaa
fcom
aaa
or
lods
mov
mov
inc
enter
in
pop
mov
inc
mov
adc
mov
xor
jne
sub
push
adc
jae
rcr
pushf
jmp
or
ds
fld
out
dec
ds
dec
add
xchg
out
out
cmp
add
shr
sub
add
fldenv
arpl
pop
inc
fdivr
(bad)
and
jmp
stos
jae
pop
mov
ss
inc
xchg
retf
(bad)
or
cmp
jb
cmp
pop
stos
xor
xor
mov
ror
enter
fs
or
sbb
jo
pop
ret
daa
cmp
mov
call
cmps
inc
push
cwde
(bad)
jo
mov
pop
cmp
in
pop
push
push
lahf
(bad)
out
mov
dec
pop
dec
xchg
lods
gs
dec
in
movs
xchg
out
int3
ret
arpl
lahf
mov
stos
push
iret
lds
repnz
or
js
clc
sub
outs
aad
ss
sar
out
loopne
outs
push
lods
sub
jle
mov
jns
out
test
mov
(bad)
sti
xchg
lahf
pop
xchg
enter
call
popa
sbb
enter
push
popf
repz
enter
or
mov
std
fild
pop
adc
or
mov
cwde
aaa
adc
jg
xchg
ss
mov
ins
jge
ds
sbb
add
mov
mov
es
push
neg
sbb
(bad)
jmp
(bad)
pop
mov
mov
imul
ds
scas
mov
xlat
sar
std
inc
and
icebp
repz
movzx
pop
xor
push
repz
mov
mul
pusha
sbb
xchg
or
add
xchg
jl
jns
mov
lahf
sar
push
enter
ins
cmp
jo
push
js
sbb
cmp
cdq
(bad)
push
sub
(bad)
add
fcomi
imul
jo
hlt
in
popf
sub
movs
aaa
push
push
sbb
arpl
bnd
cmp
fild
pop
pop
pushf
jo
mov
jmp
add
xchg
push
lods
cmps
popf
ins
mov
ret
push
xchg
aam
je
jmp
(bad)
es
push
xchg
cld
jg
pop
cmp
stc
and
xchg
repz
repnz
pop
retf
fisttp
hlt
xor
mov
aam
cmc
pop
or
xor
add
mov
and
outs
sahf
in
sbb
jmp
mov
repnz
pop
adc
jbe
ror
sub
loop
ret
xor
pop
fadd
in
mov
dec
add
lods
rol
pop
mov
push
lahf
outs
cmp
out
cmp
pushf
retf
add
in
scas
xor
push
pop
lahf
push
xchg
jne
in
movs
adc
inc
mov
jo
inc
add
inc
xchg
call
stos
sub
jle
ror
cmp
push
pop
pop
cmc
lahf
inc
into
in
xchg
add
call
push
jno
ja
pop
aad
(bad)
sub
leave
xor
scas
mov
sar
adc
and
fbld
popf
aad
in
lahf
fisub
stos
movs
xchg
mov
sub
jae
pop
out
xor
ret
int
daa
stos
add
retf
pop
into
mov
xchg
aad
xchg
mov
pusha
sbb
mov
inc
xchg
dec
jge
cwde
xchg
mov
cwde
pop
xchg
pop
pop
mov
push
push
test
dec
or
out
xor
arpl
bound
mov
mov
loope
stos
jnp
jmp
dec
xor
mov
adc
call
popf
and
mov
ret
inc
push
jne
add
jns
lds
sbb
jg
cs
lods
out
sar
xor
sub
not
cmps
xchg
popa
add
lock
ins
popf
dec
sub
cs
icebp
js
out
data16
fcom
cmp
cmp
jnp
jne
aad
lds
or
xchg
out
lods
mov
fs
push
sbb
dec
or
cmp
push
in
pop
into
cmp
mov
add
repz
inc
mov
jae
lahf
xchg
clc
cmc
mov
or
std
pusha
sub
loopne
adc
out
jns
sti
pop
fdivr
icebp
mov
mov
jmp
xchg
outs
lahf
sub
stc
jp
retf
xchg
les
in
mov
mov
pop
push
pop
and
inc
dec
sar
lea
cmc
mov
xchg
mov
loopne
mov
mov
mov
mov
cmps
or
sbb
out
lods
cli
mov
inc
das
ins
sbb
sahf
imul
mov
stc
stos
xchg
ins
cmps
(bad)
bnd
jg
out
nop
out
inc
jl
rcr
sbb
sar
pop
sbb
pop
stos
push
(bad)
je
adc
bound
pop
xor
mov
daa
cs
lds
out
(bad)
loop
ds
scas
(bad)
(bad)
fwait
sbb
fwait
rol
xchg
sub
fneni(8087
sub
in
add
sub
cmc
or
ins
add
jb
ret
jl
or
test
sub
aam
cmp
jb
adc
add
cdq
lea
shr
ret
xor
cwde
cmc
popa
adc
xchg
dec
lods
fs
jmp
jg
ins
dec
or
(bad)
ret
jecxz
mov
dec
sub
add
retf
adc
mov
fstp
sub
sub
mov
in
mov
inc
dec
arpl
js
jne
add
push
stos
loop
repnz
outs
mov
ret
xor
jno
mov
leave
repnz
data16
sbb
movs
dec
pop
ja
popf
xchg
jge
sub
(bad)
mov
aam
mov
rcl
and
(bad)
xlat
xor
addr16
pop
div
mov
stos
scas
mov
pop
cwde
out
xchg
mov
inc
(bad)
jmp
shl
xchg
jne
(bad)
stc
jmp
stos
aam
xor
vpacksswb
sbb
repz
loope
mov
dec
fldenv
rol
cmp
movs
mov
cmp
jg
cmp
pop
ins
and
or
sub
xchg
ins
mov
(bad)
xchg
or
and
and
inc
fisubr
dec
aam
sub
mov
xchg
jo
sbb
add
xchg
hlt
adc
or
(bad)
and
push
xor
and
pop
push
lds
sub
jmp
sub
jb
xor
xchg
dec
das
adc
xchg
cmp
mov
pushf
inc
cmp
jno
js
popa
xchg
clc
imul
push
lods
mov
and
add
sbb
(bad)
dec
stos
mov
mov
mov
jmp
dec
les
sub
dec
lahf
xchg
lods
test
mov
sbb
ror
pusha
push
mov
out
aam
mov
dec
lahf
arpl
add
das
xchg
sub
retf
lea
jae
and
mov
xchg
xor
mov
jg
idiv
or
shl
cmps
fcomp
or
push
jno
and
push
out
mov
inc
not
(bad)
and
mov
sub
cs
out
mov
xchg
test
xor
mov
xor
movs
call
sub
test
stos
push
ins
cmc
xchg
sub
cld
pop
push
jo
add
pop
mov
call
ficom
jae
or
(bad)
int
push
or
dec
std
or
push
sahf
dec
jecxz
or
popa
out
jmp
xchg
shl
sbb
cmp
push
loopne
outs
movs
and
in
bound
mov
lods
cmp
fbstp
sub
fchs
xor
jge
addr16
int3
sbb
pop
inc
jb
bound
inc
cwde
push
leave
and
call
push
dec
call
push
cmps
ins
xor
or
mov
stc
fs
data16
fstp
daa
ins
cmp
pop
test
fs
shr
inc
aaa
popa
push
inc
xor
sar
push
fucomi
push
pop
lock
xor
mov
bnd
addr16
sub
jbe
sahf
nop
dec
stos
rol
pop
cmp
xchg
inc
sbb
lods
cdq
mov
cmps
jno
test
test
fwait
adc
sub
push
xchg
fild
xlat
mov
xor
mov
mov
pop
repnz
neg
fld
das
and
fsub
and
mov
push
pop
sbb
push
movs
dec
shl
add
sbb
sub
mov
pop
add
dec
pop
shl
sbb
mov
mov
test
inc
scas
lods
inc
dec
cmp
sbb
pusha
rcl
movs
sub
lods
in
xchg
cld
in
add
scas
adc
loopne
ror
xor
bts
jb
mov
mov
add
push
popf
out
xor
fdivrp
dec
out
sub
test
pop
push
test
mov
jg
cmps
call
mov
out
scas
jno
mov
xchg
mov
xchg
into
and
in
pop
mov
mov
test
mov
sbb
jbe
call
outs
pop
bt
inc
sub
pop
pop
cmp
pop
xchg
sub
adc
data16
xor
xchg
dec
cwde
adc
das
stos
ins
push
mov
dec
bound
hlt
push
mov
rol
jecxz
mov
movs
loope
cwde
int
cdq
loopne
xchg
lock
lea
in
imul
outs
(bad)
sbb
(bad)
fsub
lahf
sub
mov
xchg
test
push
pop
push
adc
out
je
mov
scas
jnp
push
mov
pop
fcmovu
cmp
enter
pop
dec
jo
jl
js
push
dec
add
xchg
push
scas
add
pop
sub
xchg
cli
sbb
mov
ror
mov
add
call
retf
ds
cmp
sub
cli
xor
call
clc
les
sar
dec
and
dec
xchg
sbb
mov
mov
call
cmps
dec
and
(bad)
mov
cwde
dec
pop
inc
xor
push
lods
jae
retf
mov
or
dec
xor
test
mov
sub
sub
dec
sub
shr
fcos
aam
and
jne
xchg
and
add
test
cmps
pop
aad
call
outs
les
ror
cwde
inc
xor
mov
enter
fs
add
popa
add
clc
pop
pop
test
aad
lock
adc
jmp
or
fst
jmp
data16
mov
mov
push
retf
rcl
lahf
cli
push
hlt
(bad)
jmp
jg
outs
(bad)
dec
jbe
pop
cmp
inc
dec
fidivr
ins
jg
div
sub
setne
pop
sbb
stos
adc
ret
in
sti
(bad)
mov
iret
pop
cli
pushf
adc
ret
lods
and
and
jecxz
data16
pop
jo
pop
test
push
sti
cdq
adc
js
inc
xor
mov
mov
stc
or
adc
pop
outs
daa
push
mul
(bad)
jge
imul
daa
mov
stos
popf
pop
in
push
fimul
sti
imul
rcr
popf
push
inc
inc
sbb
ret
clc
mov
out
jmp
inc
add
lds
mov
outs
push
lods
cmp
xor
xchg
test
push
ret
test
icebp
jle
lods
add
gs
pushf
sbb
gs
xchg
cld
das
pop
ja
push
sar
test
fiadd
mov
out
push
and
and
fcmovbe
or
lds
dec
jg
adc
call
nop
jbe
call
jnp
pop
dec
icebp
pop
inc
test
loopne
jle
arpl
sbb
push
mov
adc
add
rcr
mov
in
in
ins
addr16
enter
bound
xor
lock
sbb
or
pop
pusha
pop
or
sub
adc
jmp
push
lea
and
mov
jae
test
inc
pop
mov
xchg
out
inc
mov
adc
dec
lock
scas
ret
loopne
cmp
push
jno
mov
sub
or
mov
inc
mov
cmp
jo
or
push
cld
fst
lods
fidiv
sub
pop
sbb
cli
les
sbb
mov
icebp
mov
jmp
fimul
repz
inc
mov
jno
mov
cmp
xor
daa
ror
(bad)
push
scas
mov
inc
jns
popf
cmp
add
(bad)
mov
jp
dec
ins
imul
and
xchg
in
cmp
adc
stos
addr16
scas
add
mov
(bad)
rcl
fwait
cmp
jae
pop
jnp
sbb
js
mov
std
mov
ja
push
repz
adc
stos
in
popf
stos
xor
inc
leave
pmulhw
mov
enter
cmovnp
ja
(bad)
imul
mov
out
fdiv
mov
mov
fidiv
pop
in
and
je
and
out
int3
and
rcl
adc
xchg
mov
pop
mov
push
xchg
push
repz
mov
xchg
add
inc
xchg
inc
addr16
pop
iret
xchg
(bad)
aas
(bad)
lahf
jmp
div
out
mov
sub
cmp
into
xor
jno
xchg
and
jmp
pop
arpl
sbb
dec
fwait
sbb
popa
adc
adc
pop
mov
shl
push
xor
inc
in
(bad)
popf
jne
call
aam
mov
lock
inc
pop
mov
pop
and
rcl
dec
aaa
and
push
cpuid
xor
mov
mov
add
imul
imul
movs
lahf
daa
hlt
cmc
jecxz
sbb
popa
inc
adc
sub
fstp
and
dec
push
les
jae
out
stos
fidivr
jae
pop
mov
js
popf
xor
sbb
mov
or
inc
xchg
fist
mov
fst
popa
jae
arpl
out
mov
fwait
loope
sar
push
pop
fimul
xchg
or
daa
test
sub
fst
stc
jp
clc
dec
jns
dec
add
mov
cli
xor
cli
sub
rcr
and
fild
(bad)
xchg
cmp
enter
sbb
mov
popa
jb
and
cld
pop
aas
cmp
repnz
nop
out
push
out
inc
jns
mov
inc
into
ds
dec
(bad)
ret
scas
cmp
mov
cmps
test
adc
jle
push
aaa
das
mov
(bad)
jmp
pop
or
xor
jnp
mov
rcl
imul
lock
add
lock
inc
pop
inc
push
jg
jnp
sti
arpl
xchg
fistp
repz
pusha
sub
add
outs
add
arpl
fwait
pop
add
xor
int3
mov
bound
sbb
pop
cmp
pop
dec
push
ret
shr
mov
repz
and
mov
stos
and
lahf
inc
push
mov
mov
stos
inc
in
(bad)
push
(bad)
mov
fdivrp
inc
mov
pop
iret
out
rcr
push
in
(bad)
fisttp
js
jo
push
nop
add
or
out
pop
fst
cwde
out
jb
stc
jnp
and
cmp
push
inc
adc
sub
dec
sub
fs
mov
jmp
sub
dec
xchg
loopne
pop
inc
in
test
leave
xor
dec
pop
pop
push
es
jb
imul
dec
out
jno
sub
xor
pop
add
retf
fmulp
sbb
shr
sti
fmul
loope
cmps
dec
movs
mov
aas
dec
jmp
dec
mov
inc
pop
xchg
pop
test
xor
enter
call
mov
lods
(bad)
lock
jnp
popa
dec
jo
addr16
jmp
add
dec
jecxz
jbe
in
cld
es
add
cli
aas
test
icebp
out
mov
pop
mov
cdq
sbb
(bad)
and
sub
or
mov
iret
mov
cmps
(bad)
lahf
jl
mov
test
ret
mov
mov
pop
mov
dec
pop
sub
or
icebp
(bad)
xor
cwde
call
jo
pop
call
xchg
in
inc
jle
dec
adc
aam
retf
push
mov
dec
add
arpl
fs
inc
lods
(bad)
(bad)
addr16
jecxz
jae
pop
dec
and
sahf
cmc
pop
mov
stc
mov
push
inc
pusha
pop
(bad)
sbb
xor
pop
enter
adc
xlat
aam
cmps
out
mov
jo
scas
sub
inc
lods
sub
(bad)
out
and
les
xchg
xchg
ins
call
retf
add
shr
and
fwait
jle
fstp
inc
aad
(bad)
movs
push
push
mov
xor
cmc
lods
lods
cdq
pop
jno
cli
and
pop
sbb
and
adc
xor
push
in
push
xchg
gs
fimul
ins
push
cmp
sbb
call
inc
int3
in
jne
cmp
inc
cmp
sbb
inc
mov
(bad)
or
mov
cs
scas
call
lea
dec
push
add
mov
and
push
or
mov
jo
mov
xchg
call
mov
mov
xchg
mov
cdq
aas
inc
psrld
inc
pushf
lods
jb
lea
sub
mov
pop
aaa
mov
jg
dec
jp
ja
mov
sbb
push
sbb
popf
mov
add
popf
mov
test
aas
(bad)
gs
pop
leave
and
dec
js
jnp
scas
fnsave
ror
push
rcl
jne
ret
mov
push
sahf
add
mov
jge
imul
sbb
jo
add
(bad)
sbb
pusha
dec
mov
mov
scas
or
dec
icebp
xor
icebp
sbb
or
ds
push
push
retf
shl
sub
sub
pop
shrd
cwde
cmp
mov
dec
sub
push
or
push
inc
sbb
retf
sbb
push
pop
stc
mov
dec
mov
rol
and
mov
inc
out
inc
inc
jl
aaa
mov
ss
loope
icebp
mov
mov
arpl
mov
addr16
push
pop
(bad)
aaa
cld
mov
ins
dec
mov
push
jl
outs
cmp
cmp
pop
and
popf
aad
bound
stos
mov
leave
push
sub
adc
fsubrp
xor
sti
shl
popa
and
(bad)
jg
xchg
scas
xchg
inc
mov
lock
(bad)
xlat
pop
mov
in
cmc
ret
dec
add
out
and
push
mov
xchg
mov
movs
aad
ss
addr16
loopne
mov
xlat
adc
sbb
retf
add
or
fimul
repz
xor
mov
cli
and
clc
mov
pop
cmp
sub
or
jp
pop
and
sub
in
xchg
pop
inc
jl
jne
movs
scas
ins
xor
das
cmp
push
adc
xor
ror
into
sub
adc
adc
jae
sub
jno
outs
cmp
or
stos
xchg
jne
xchg
aas
cmps
inc
les
and
mov
add
mov
and
mov
xchg
jbe
dec
adc
xchg
sbb
pop
fidivr
outs
lods
aad
xchg
sub
jmp
pop
xor
pop
cmp
aad
hlt
mov
mov
pop
in
xchg
pop
push
jmp
(bad)
mov
cmps
mov
sub
mov
mov
mov
call
jne
mov
es
popf
xor
(bad)
popf
les
cmp
rcr
sbb
mov
aaa
dec
cmp
sahf
fmul
callw
mov
cmp
clc
(bad)
addr16
in
or
mov
in
je
mov
sub
mov
loopne
fstp
inc
call
pop
dec
jp
out
test
jnp
test
fnsave
cdq
out
xor
or
mov
push
inc
add
outs
pop
xor
cld
push
fisttp
test
jnp
sub
jl
popa
pop
inc
ss
and
ret
adc
pushf
test
cli
inc
mov
(bad)
jmp
dec
mov
adc
mov
push
shl
pop
mul
cmp
and
fsub
mov
cmps
enter
test
mov
rcr
ficom
jnp
pop
(bad)
pop
push
mov
les
push
pop
int
ins
ret
loopne
cmp
movs
push
jnp
in
test
pop
out
mov
mov
and
mov
jp
push
loope
pushf
pop
adc
sub
enter
add
adc
imul
ja
dec
xchg
push
repz
pushf
mov
(bad)
int3
xor
pop
mov
xor
sar
push
lahf
mov
push
imul
xchg
(bad)
in
mov
jne
aas
and
xchg
jne
pop
mov
test
pop
push
sbb
jecxz
add
cmp
addr16
jnp
daa
clc
ds
jp
jns
ins
call
or
mov
mov
dec
mov
arpl
xor
or
pcmpgtw
dec
test
(bad)
sbb
push
fwait
adc
push
in
call
inc
cmp
jb
inc
add
out
mov
aaa
movs
(bad)
fmul
es
int3
repnz
push
fidiv
fs
add
fcomi
or
arpl
leave
mov
hlt
mov
sbb
gs
enter
xor
hlt
xchg
out
jmp
leave
push
mov
mov
popa
out
fadd
jl
jle
cmp
jecxz
hlt
push
dec
sti
js
mov
mov
enter
dec
pop
ss
dec
push
jle
sub
outs
sub
cmp
outs
sub
data16
(bad)
xchg
and
dec
and
jl
es
push
jg
sub
rcl
and
aam
pop
outs
jo
int3
adc
sbb
mov
or
and
lock
adc
inc
or
out
pop
mov
addr16
sbb
fsub
sbb
lods
into
sbb
cld
and
nop
push
sbb
add
mov
gs
pop
sbb
cmp
in
lahf
push
xlat
or
(bad)
ja
imul
mov
mov
out
fdivrp
dec
sub
mov
stos
mov
popa
jb
sbb
sti
jbe
jge
popf
loop
es
inc
cmp
in
push
pop
cs
jnp
mov
cs
mov
nop
cli
dec
cmova
lahf
push
sbb
mov
dec
fs
push
push
sbb
leave
icebp
cmp
or
dec
mov
sar
sbb
retf
mov
inc
xor
pop
pop
ret
adc
call
pop
push
adc
pop
jl
fisubr
sbb
ds
pminsw
xor
fadd
pop
mov
ret
rcl
nop
inc
fldpi
inc
sub
or
shr
mov
sbb
ficom
push
dec
jns
xchg
and
mov
and
pusha
(bad)
mov
fnstcw
inc
nop
scas
in
pusha
cmp
and
xchg
jbe
xchg
dec
sbb
imul
shr
je
lock
adc
jmp
(bad)
cmp
jno
jg
add
mov
test
xor
das
(bad)
jns
xor
outs
imul
pop
leave
xor
xor
adc
cdq
enter
mov
mov
inc
xchg
and
stc
pop
jp
outs
and
ret
jl
fadd
shr
cmp
into
add
xor
jns
pop
cmps
sub
add
loop
jmp
sbb
pop
ss
push
add
kxnorw
fistp
sub
cmp
pop
xor
push
add
cmps
cdq
clc
push
call
cmp
inc
shl
shr
jg
adc
or
pop
iret
pop
xchg
sbb
fcom
je
mov
cdq
jnp
sahf
push
aam
jge
jl
test
out
dec
pop
arpl
mov
mov
xchg
mov
xor
(bad)
test
pusha
or
stos
mov
ins
push
adc
push
(bad)
mov
in
inc
cmp
sbb
push
dec
lods
ds
mov
push
aad
jo
mov
cmps
sbb
xchg
loope
test
clc
out
add
fidiv
mov
add
ins
jne
call
outs
mov
inc
pop
sub
adc
jmp
retf
loopne
xchg
jg
sbb
movs
dec
xchg
fs
sub
aas
call
mov
mov
or
and
sbb
pop
fwait
in
pop
ins
push
adc
sub
inc
xchg
mov
jmp
out
jmp
ret
push
jbe
fsub
or
pop
lds
cmp
sbb
fild
add
mov
loop
mov
dec
mov
stc
and
repnz
xor
(bad)
loop
pop
fdivr
push
movs
pop
fcmovb
retf
and
ret
loop
stos
inc
jp
mov
push
aad
xor
push
mov
cs
inc
imul
add
test
and
inc
mov
pushf
movs
or
inc
ss
loopne
mov
add
jle
push
pop
push
aaa
mov
sahf
aam
inc
inc
inc
ret
addr16
mov
mov
xchg
cmp
jmp
jmp
jo
add
mov
pop
cmp
in
lea
pop
jns
pop
cli
xor
in
stc
dec
mov
retf
out
inc
dec
mov
sbb
adc
nop
ds
sub
(bad)
mov
mov
aas
(bad)
mov
jae
and
cdq
jno
cmc
shl
ja
mov
ret
stos
inc
adc
loop
add
pop
ret
aad
push
stos
je
sbb
push
pop
add
aas
mov
movs
shr
rcl
fdivr
mov
add
ret
std
popf
jb
icebp
mov
or
push
test
ins
cmp
sub
test
loop
fcomip
nop
cmc
or
scas
cmps
lods
pop
outs
pop
popa
pop
push
mov
test
pushf
cli
les
adc
sub
adc
dec
loop
dec
lds
add
in
cmp
push
push
stos
pop
les
cmps
xchg
mov
test
jb
imul
dec
ficom
cwde
(bad)
enter
adc
dec
push
adc
in
ds
cmp
xchg
sbb
popf
push
jecxz
dec
iret
cs
ret
pop
push
pushf
outs
ja
and
mov
call
mov
xchg
xor
inc
(bad)
mul
mov
stc
out
icebp
mov
dec
test
fidiv
loopne
lods
imul
cmp
pop
bound
xchg
mov
movs
and
mov
dec
push
daa
sub
retf
add
call
pop
sbb
push
mov
icebp
and
sub
fisubr
pusha
movs
cmp
aas
cdq
scas
pop
xlat
push
lods
scas
mov
or
sti
mov
data16
mov
xchg
pusha
inc
loop
push
cmp
addr16
mov
jno
jno
ret
jmp
fwait
inc
jle
xor
cmp
inc
(bad)
adc
pop
stos
es
or
pop
mov
push
cmc
(bad)
xlat
fwait
or
(bad)
cwde
pop
arpl
fwait
adc
call
jle
retf
mov
scas
call
movs
xchg
jnp
and
mov
xchg
bound
mov
movs
pushf
inc
dec
pushf
push
call
das
add
jp
sar
xlat
dec
cmp
dec
jg
or
out
arpl
out
(bad)
pusha
sbb
popf
cmps
iret
mov
mov
jb
in
mov
xchg
jnp
or
add
push
retf
and
sbb
and
adc
xchg
daa
int3
nop
aad
sbb
pusha
mov
pcmpgtd
test
popf
adc
pop
xchg
dec
lds
das
sub
adc
leave
aad
sbb
cmp
popf
movs
sbb
xor
sti
xor
dec
push
mov
and
adc
jp
(bad)
fisub
mov
imul
and
jb
aas
outs
adc
dec
or
(bad)
sahf
std
add
int
in
and
scas
out
dec
fldenv
test
mov
retf
jno
lods
ins
fidivr
xor
inc
fdivr
and
retf
(bad)
sbb
cld
add
and
jns
cmc
test
pusha
push
jbe
cwde
lods
inc
test
int3
pop
dec
test
push
jp
dec
test
pop
jp
jmp
scas
xchg
out
gs
xlat
aaa
cmovbe
pop
daa
xor
push
(bad)
push
adc
nop
ficom
loop
das
jle
aas
sbb
jo
mov
push
lahf
repz
inc
idiv
jle
jne
dec
mov
loop
(bad)
adc
(bad)
adc
imul
daa
fisttp
vhaddps
mov
jmp
add
pusha
(bad)
aam
and
in
sar
lea
push
movs
mov
aam
jnp
stos
out
call
loop
jb
cmp
sbb
mov
in
ret
shl
jle
sub
mov
xor
xor
out
pop
dec
retf
xor
dec
imul
not
daa
push
sti
idiv
bswap
sub
test
xor
cmp
push
cmp
jne
ja
pusha
cdq
iret
lods
cmp
jge
cwde
dec
adc
push
add
dec
mov
icebp
cmp
cmps
dec
push
xchg
test
push
or
jge
pop
sahf
mov
sahf
pop
dec
mov
cmc
xor
ffree
jne
xchg
shufps
repz
xchg
inc
inc
dec
inc
int3
cmps
mov
mov
inc
pop
stos
fisttp
mov
cmps
(bad)
lahf
inc
add
xor
cmp
xor
cmp
inc
push
sahf
mov
pop
adc
mov
adc
stos
(bad)
fdiv
nop
imul
cmp
out
sbb
add
fs
sub
test
shl
ds
sbb
aaa
stos
sahf
adc
popa
shl
sbb
cli
xor
jnp
xchg
jge
mov
add
xchg
iret
cmp
sub
lds
dec
repz
mov
jp
shr
fdivr
dec
mov
mov
call
inc
outs
es
cld
mov
outs
xor
jbe
push
inc
push
das
adc
push
int3
add
aaa
ret
jp
ja
cli
data16
mov
imul
stc
sbb
out
pop
fld
pusha
fiadd
and
les
retf
loope
jecxz
fmul
add
inc
mov
mov
es
push
push
test
jmp
inc
sub
or
out
and
in
out
pop
mov
jbe
push
and
lea
and
and
adc
imul
hlt
arpl
jle
jae
mov
push
xchg
fstp
shr
(bad)
daa
outs
sbb
cmp
push
or
test
pop
and
(bad)
into
xchg
jae
das
xchg
arpl
aam
inc
fisub
ds
and
stos
pop
or
fimul
xor
jg
mov
xchg
push
lock
js
mov
mov
sub
or
dec
and
push
sub
in
dec
out
call
mov
ds
das
cs
pop
lahf
adc
mov
dec
out
out
xlat
dec
retf
add
dec
dec
and
xchg
rol
imul
dec
frstor
mov
mov
pusha
call
dec
inc
lock
dec
stc
dec
repnz
mov
xor
shr
jle
mov
xor
pop
mov
cmps
sub
mov
inc
sub
iret
aas
xchg
sbb
sti
inc
jmp
and
jno
xchg
mov
repnz
sub
lods
loopne
out
add
push
mov
aas
cdq
or
lea
sbb
mov
lea
jae
loope
pop
or
xchg
mov
cmps
sub
jle
mov
test
jmp
sub
icebp
mov
shl
call
int
xchg
stos
scas
pop
movs
sub
das
pop
(bad)
lods
cvtdq2ps
bound
pop
mov
jmp
push
outs
inc
ret
inc
or
stc
xlat
test
imul
dec
test
and
ds
dec
aad
in
jnp
add
gs
nop
ins
pop
lea
pop
and
push
fisub
jle
in
add
(bad)
jg
movs
xchg
pop
popf
mov
adc
pop
cmp
cdq
cs
jle
retf
lock
icebp
pop
test
icebp
mov
or
and
fcomp
outs
or
push
int
popa
in
nop
sub
push
or
js
sub
stos
pop
sub
imul
mov
cmp
lahf
add
push
(bad)
out
jg
pop
(bad)
and
imul
or
xlat
jp
pop
adc
lds
jnp
(bad)
sbb
mov
fiadd
loop
ror
sahf
(bad)
dec
and
cmp
and
mov
xor
scas
inc
call
mov
sar
test
xor
sbb
rol
pop
pop
or
jecxz
cmp
inc
pop
add
inc
(bad)
(bad)
in
cdq
jae
mov
cmp
ds
push
mov
test
sbb
push
mov
sti
stos
out
scas
outs
jne
sub
xor
mov
and
out
icebp
adc
cmc
int
jmp
mov
sbb
movs
ds
sub
xchg
aad
test
xchg
out
sbb
mov
cwde
or
lods
mov
sbb
lea
cmps
popf
cwde
fsub
push
pop
jle
dec
sub
les
cmpxchg
adc
aam
inc
bound
mov
arpl
cmp
xchg
aas
xor
jecxz
add
push
mov
lock
xchg
lods
ficomp
mov
jb
add
(bad)
xchg
mov
jbe
jmp
outs
jo
fld
jno
xor
inc
sub
bound
ret
pop
test
mov
mov
call
jmp
dec
jno
push
ror
je
arpl
hlt
int3
nop
xchg
inc
fwait
lahf
stos
cmp
pop
mov
xor
in
pop
ret
mov
jge
fdivr
loopne
inc
dec
xchg
out
dec
imul
arpl
outs
ins
xor
push
call
aas
mov
mov
mov
push
adc
jge
dec
cli
movs
dec
out
pop
loope
push
cmp
sti
cmc
xor
in
aaa
popa
mov
mov
in
inc
cs
sbb
inc
cs
dec
and
pushf
inc
jae
xchg
ret
push
aas
popa
mov
or
mov
les
fadd
adc
cmp
xchg
jg
shl
ror
int3
pop
mov
add
xor
ret
adc
test
mov
sbb
in
jp
jnp
add
cld
mov
mov
stc
scas
bound
push
fimul
aas
sbb
or
sbb
jnp
xchg
mov
outs
or
jnp
jnp
add
and
ficomp
movs
lahf
adc
shl
sub
(bad)
mov
mov
aad
scas
int
scas
cmp
xor
jne
test
pop
sbb
iret
mul
ins
aam
inc
dec
call
sbb
inc
mov
xchg
lock
mov
fstp
hlt
mov
jl
xchg
fimul
dec
cmp
add
leave
mov
sbb
push
dec
dec
(bad)
ins
movs
xchg
hlt
xchg
push
sub
fs
addr16
or
push
(bad)
mov
arpl
rol
sar
xchg
mov
cdq
dec
leave
inc
cmc
retf
movs
jle
gs
shl
loopne
fiadd
pushf
dec
sbb
movs
inc
push
psubusb
xchg
adc
ret
dec
cmp
inc
push
mov
pop
mov
retf
adc
xchg
pusha
mov
std
scas
fwait
out
ins
cwde
push
sub
or
outs
adc
call
inc
mov
inc
pop
inc
mov
xchg
out
mov
xchg
sbb
lods
popa
add
(bad)
pop
sub
and
in
mov
sub
fwait
pop
leave
(bad)
pop
inc
inc
rcr
test
(bad)
xor
xor
xchg
dec
ds
data16
jae
or
(bad)
iret
cmc
pop
gs
dec
jle
aad
imul
mov
pop
sbb
and
xlat
arpl
test
stos
inc
fiadd
in
loope
icebp
mov
fwait
jmp
retf
xchg
loop
sbb
mov
sub
call
push
retf
jno
(bad)
xchg
sbb
xchg
push
jge
adc
push
and
fistp
cmps
js
xchg
xchg
xor
cmp
add
mov
sbb
push
dec
pop
imul
stos
js
pop
push
pusha
push
inc
xor
daa
mov
jae
jne
clc
push
jmp
sbb
dec
fcom
sub
int
mov
test
mov
add
mov
(bad)
sub
cmps
(bad)
in
dec
fbstp
ret
jns
mov
sahf
xlat
out
or
pop
lahf
test
mov
adc
out
pop
cmps
jmp
pop
inc
inc
xchg
bound
daa
pop
icebp
mov
and
pop
pop
movs
push
push
ficom
xor
mul
cmp
retw
stc
cmp
mov
ror
fiadd
iret
cwde
xchg
imul
mov
mov
addr16
sti
leave
addr16
adc
inc
in
push
test
jp
mov
sbb
iret
mov
fimul
push
xchg
mov
mov
push
jg
push
or
pop
xchg
inc
clc
jmp
or
and
xchg
cmp
add
aaa
(bad)
fisub
push
inc
fistp
stc
shl
icebp
push
mov
test
sbb
jbe
fdiv
test
xor
xchg
shl
hlt
pop
rdmsr
lahf
cmp
sub
adc
dec
retf
cmp
into
cld
or
or
retf
addr16
fnsave
jg
adc
xchg
cmp
xchg
mov
out
retf
call
push
dec
hlt
outs
mov
lahf
iret
ja
sbb
cmp
movs
nop
jns
mov
xor
cli
and
mov
jae
sub
hlt
push
cmp
mov
int
pop
in
inc
repz
popf
mov
xchg
mov
sub
pop
adc
call
arpl
in
pushw
stos
push
pusha
repz
aas
and
sub
(bad)
int
pop
sbb
scas
pop
dec
inc
ins
mov
call
mov
sub
das
loop
fcom
icebp
cld
lock
push
loopne
pop
cbw
rcl
and
mov
mov
push
call
enter
repz
call
mov
push
into
dec
icebp
ins
sbb
add
sub
jmp
and
dec
xor
xchg
fstp
cwde
inc
(bad)
mov
push
mov
bound
push
cli
and
mov
mov
push
lea
xchg
add
and
or
cmp
and
and
pop
ins
xlat
and
shr
and
sub
in
pusha
outs
dec
std
xor
sub
fstp
(bad)
in
and
or
mov
pop
xor
data16
sub
jecxz
imul
mov
xchg
add
jmp
lock
jge
or
dec
imul
call
xchg
dec
jge
fist
sub
mov
fild
mov
mov
(bad)
inc
loope
(bad)
repz
sbb
aaa
jecxz
aam
cli
add
xor
lods
out
push
test
inc
and
push
shr
xor
or
dec
push
mov
test
pop
test
pop
pusha
shr
in
jecxz
(bad)
mov
add
cld
or
adc
jmp
sahf
adc
in
call
test
stos
jp
sub
push
test
mov
xchg
and
jg
push
adc
ins
rcr
or
dec
adc
mov
add
cmp
ja
sti
out
dec
dec
sbb
jge
pop
imul
mov
sub
xor
fsub
dec
add
push
add
stos
xchg
mov
fnstenv
xor
stc
cld
push
or
and
loopne
int3
lahf
in
pop
lds
cmp
fnsave
int3
sbb
jmp
and
cmps
sbb
jns
ins
rcl
xchg
push
pop
shr
(bad)
lds
fisttp
lods
pop
stos
pop
or
pushf
and
jae
rcr
sti
or
xor
jecxz
sbb
call
nop
and
fisttp
adc
add
mov
ret
inc
cmc
popa
push
(bad)
jmp
and
cmp
js
stos
inc
and
repnz
(bad)
jl
mov
fstp
mov
cmp
in
xchg
sub
imul
jmp
mov
addr16
ror
add
xor
aas
dec
repz
pusha
stc
loope
(bad)
mov
cmp
push
and
(bad)
clc
call
bound
pop
sahf
out
retw
jo
xor
fs
out
arpl
or
add
test
mov
imul
mov
and
xor
(bad)
enter
repnz
iret
sub
sub
fisub
sti
std
cmc
pop
push
outs
sbb
retf
mov
jb
and
rol
mov
dec
xchg
es
cmps
sub
out
mov
pop
mov
mov
(bad)
pop
sbb
pop
pop
repnz
jae
movsx
(bad)
jmp
sub
retf
ror
in
adc
jecxz
pop
(bad)
into
mov
xchg
xor
xor
imul
dec
inc
jge
retf
repnz
mov
dec
lods
call
mov
gs
arpl
imul
out
xor
sub
xchg
jge
rcl
addr16
leave
dec
cwde
cmp
mov
mov
add
in
ss
and
inc
inc
mov
inc
fimul
jbe
cmp
mov
fisubr
inc
(bad)
and
and
xor
cld
and
xor
pop
inc
outs
out
or
retf
pop
cmc
mov
mov
je
push
adc
or
cdq
dec
xor
sub
shr
es
imul
loope
pop
out
pop
sub
inc
xchg
or
jae
add
iret
in
inc
cmp
mul
or
imul
std
lock
xchg
rol
popf
mov
xor
cli
sbb
push
call
std
adc
xor
inc
jle
retf
lods
jbe
jg
jo
pushf
jle
sbb
(bad)
pop
daa
mov
xor
push
and
mov
je
or
sbb
movs
inc
cmp
mov
or
pop
dec
mov
outs
cmps
rcr
idiv
push
scas
ss
mov
sub
test
mov
push
cmc
inc
mov
mov
loop
ffree
fidiv
movs
sub
call
sub
jl
fnsave
sbb
mov
fcomp
aaa
std
mov
pusha
scas
les
mov
inc
jmp
xchg
loopne
and
popf
mov
push
ror
xor
jle
inc
mov
scas
mov
dec
jns
push
mov
subps
(bad)
shr
cli
daa
lahf
in
jb
int
fadd
sub
mov
fst
shl
loope
pop
movups
jnp
mov
dec
mov
movs
popa
mov
lods
cmp
imul
aad
bnd
jmp
xchg
sbb
xor
addr16
dec
ja
out
push
data16
pop
mov
out
push
cs
stc
jg
mov
(bad)
jecxz
int3
cmps
repz
xchg
push
adc
dec
jmp
mov
movs
push
jne
adc
mov
mov
(bad)
lock
sub
aam
scas
in
jmp
sbb
cmp
sbb
or
add
sbb
dec
xchg
mov
nop
call
(bad)
call
cmp
push
mov
(bad)
jmp
xor
add
mov
dec
mov
aas
inc
out
xor
hlt
mov
mov
sahf
call
jle
fisubr
jbe
xchg
lock
sbb
mov
pop
js
or
jno
loop
aam
sub
pusha
ja
jae
outs
xor
pop
push
dec
pop
inc
cs
push
js
jae
add
push
call
or
jmp
fs
xor
xchg
retf
xor
push
enter
lahf
push
sbb
push
jmp
cmps
fsubr
add
stc
loop
shr
dec
sub
push
mov
mov
jge
movs
out
or
add
repz
xchg
jns
jle
mov
pushfw
cmp
pop
stos
push
rcr
xchg
adc
in
add
in
outs
aas
daa
xchg
jl
es
jmp
and
shl
std
imul
loop
mov
and
mov
mov
nop
mov
inc
push
ret
test
rol
dec
push
inc
jmp
inc
mov
jmp
mov
rcl
or
inc
arpl
imul
into
pop
xchg
ins
in
test
popf
imul
out
dec
fwait
sbb
cwde
mov
(bad)
and
daa
repz
es
mov
inc
pusha
(bad)
neg
adc
gs
inc
aas
inc
out
push
or
retf
mov
das
and
push
xchg
aaa
cmp
and
jb
shr
imul
mov
inc
jne
push
sub
inc
arpl
adc
or
dec
daa
inc
mov
ror
int3
dec
bound
test
repnz
xchg
cmp
dec
out
fs
mov
inc
into
sub
or
sahf
dec
fnstsw
pop
scas
mov
push
in
popa
mov
xchg
xor
or
pop
(bad)
pop
mov
lods
leave
mov
pop
sub
push
das
int
dec
arpl
std
mov
adc
cmp
out
pop
ins
mov
xchg
pop
(bad)
jno
retf
cmp
or
test
mov
pop
(bad)
outs
cmp
std
push
leave
(bad)
daa
pop
inc
popa
xor
pop
arpl
out
inc
adc
adc
and
fisttp
jp
add
movs
out
or
inc
add
fdivr
fldcw
lar
add
in
(bad)
mov
xor
dec
fisubr
cmp
push
push
scas
cli
loopne
shl
fcom
mov
cmps
pop
std
pop
dec
es
mov
add
inc
fbstp
out
mov
out
pop
(bad)
sub
dec
push
lahf
icebp
je
mov
fsubr
lods
xor
pop
lods
push
movs
repnz
jmp
cmp
shl
arpl
xor
sbb
lods
xchg
sar
popa
cwde
bound
and
imul
repnz
jp
pop
dec
dec
int3
imul
inc
mov
mov
sbb
fadd
mov
or
push
inc
adc
cld
jge
cmc
inc
push
mov
add
pop
jg
into
add
mov
sbb
mov
nop
mov
dec
mov
push
mov
lahf
mov
jl
call
shl
test
fs
aad
pop
addr16
mov
(bad)
out
mov
cwde
dec
popf
icebp
push
pop
sahf
(bad)
jl
call
xchg
sbb
xor
je
dec
xchg
and
leave
not
inc
xchg
and
and
aad
loop
daa
dec
ret
cmp
sbb
cmps
dec
repnz
cmps
adc
rcr
adc
push
push
in
cmp
mov
sbb
xchg
jnp
out
cmp
out
retf
test
pop
sub
inc
(bad)
cmps
mov
call
mov
dec
loop
mov
add
hlt
or
push
and
sub
sahf
cwde
rcr
faddp
adc
jnp
mov
je
xor
cdq
test
fimul
lahf
inc
pop
vshufps
xchg
pop
lock
retf
aas
adc
fcom
adc
mov
test
cmp
mov
repz
fnstenv
mov
das
dec
xchg
mov
mov
mov
sub
bound
iret
ja
int3
les
scas
jg
ret
jo
imul
add
jecxz
or
sar
sbb
adc
jle
(bad)
pop
mov
sbb
inc
in
in
(bad)
sbb
add
jae
and
fadd
dec
lods
sub
dec
mov
es
movs
jae
push
pop
mov
mov
bound
inc
repz
ss
call
popa
mov
jno
mov
add
and
cld
arpl
xor
nop
push
adc
scas
mov
sub
sub
jbe
mov
jge
outs
jp
inc
movs
xchg
(bad)
sbb
dec
movs
(bad)
cmp
js
sbb
lods
aas
pop
jg
test
mov
xor
jmp
enter
js
cmc
inc
fadd
mov
add
cmp
(bad)
push
xlat
js
sahf
push
mov
sub
dec
and
pop
fwait
imul
mov
or
out
push
xchg
fucom
je
and
mov
add
xlat
jl
mov
sbb
pusha
sti
jp
mov
sbb
clc
or
xchg
inc
mov
outs
push
pop
out
dec
xchg
gs
cmc
out
push
mov
xchg
xor
sub
(bad)
sub
cmp
es
cmp
adc
dec
movs
scas
jne
aam
cld
jno
push
loop
test
pop
les
repnz
test
mov
or
cmp
in
jo
push
aad
cs
std
out
out
and
sahf
jmp
push
rcr
sti
cmps
stc
in
in
mov
in
sbb
mov
(bad)
cdq
stc
mov
cmp
mov
ins
or
and
into
adc
add
jne
arpl
xor
sahf
test
test
icebp
inc
pop
ret
jns
pusha
shr
pop
mov
icebp
sbb
inc
sar
mov
pop
lea
pop
push
jo
fcmovnbe
mov
stc
or
xchg
pop
jae
dec
add
das
ins
enter
inc
add
or
push
mov
mov
or
cld
jecxz
or
mov
fcmovnu
shl
add
mov
dec
xor
stc
into
mov
jb
ret
arpl
push
dec
frstor
ins
jbe
sbb
adc
xchg
mov
push
jns
sub
mov
vaddsubps
fmul
cmp
sbb
aam
hlt
mov
jbe
jecxz
mov
jmp
in
mov
stc
add
ret
stos
shl
mov
jg
mov
aam
stos
(bad)
jle
mov
sar
push
loop
cli
or
mov
daa
sbb
aad
xchg
ja
out
mov
pop
sti
icebp
out
xor
mov
push
mov
or
pop
jg
clc
or
sub
inc
(bad)
pop
push
div
or
retf
sub
stos
push
jmp
dec
push
inc
sar
xchg
xchg
add
jge
xchg
and
xlat
mov
mov
dec
aad
sbb
repnz
retf
mov
or
push
fnstcw
jl
retf
outs
mov
fwait
test
xchg
xlat
lds
pop
mov
test
not
xor
pop
xchg
test
dec
lock
inc
(bad)
xchg
std
pop
daa
retf
xchg
jg
aas
outs
and
cld
outs
fmul
sub
fnsetpm(287
fbstp
add
sub
icebp
xor
rcr
pop
cmp
mov
push
add
shl
mov
xor
sub
sbb
and
push
in
dec
adc
push
in
xor
cmps
popf
push
adc
and
(bad)
rcl
pop
xor
sbb
inc
jo
popf
retf
in
push
xor
aas
sub
stos
mov
lock
dec
jg
xchg
nop
sahf
in
jae
test
test
fsubr
adc
dec
mov
jmp
jmp
jp
and
jmp
cmps
movs
cld
mov
jmp
mov
mov
in
xor
(bad)
push
fs
xor
pop
push
sahf
mov
call
sbb
push
sbb
loopne
push
repnz
clc
mov
dec
jmp
fdiv
ret
xchg
push
xchg
les
mov
mov
mov
or
and
lahf
adc
and
fstp
fimul
add
push
hlt
cdq
mov
cmp
mov
pop
pushf
xchg
add
sub
add
xchg
and
scas
scas
js
jecxz
push
retf
mul
addr16
mov
(bad)
mov
ror
dec
clc
sbb
add
call
and
mov
shl
(bad)
(bad)
lock
or
mov
aam
xchg
or
ss
jnp
or
xlat
mov
and
sar
cli
movs
xchg
push
sub
cdq
popa
dec
out
int
jb
lods
repnz
inc
add
push
lock
aas
popa
pop
mov
test
scas
mov
sub
fwait
push
xchg
xor
mov
and
cwde
jno
stos
push
pop
lock
loope
retf
inc
out
sbb
retf
sbb
rol
xchg
adc
loopne
sub
xlat
scas
xchg
loope
aam
das
xor
pusha
std
stos
test
(bad)
pop
aad
ret
and
popf
mov
add
aas
shr
mov
test
aad
push
loop
mov
sahf
cmc
push
push
mov
aam
cmp
mov
retf
mov
cmp
les
test
(bad)
stos
bound
inc
fmul
bound
popa
push
stos
jge
push
lock
pop
arpl
inc
fisttp
movs
inc
and
ret
mov
ret
aam
test
loopne
or
in
rcl
mov
jb
call
fidivr
pop
dec
push
add
push
ror
add
rcl
test
dec
fidivr
sbb
cmp
sbb
mov
xlat
mov
cdq
pop
add
test
xchg
lea
test
xor
sti
mov
pop
jg
cdq
and
ja
mov
add
lock
sub
ficom
imul
push
ss
lds
loop
ja
push
sbb
retf
js
int
mov
clc
in
jle
test
scas
or
push
adc
pmaxub
xor
inc
sbb
xlat
sub
pop
and
xchg
je
xchg
mov
inc
push
dec
dec
or
ficom
and
out
outs
push
inc
lock
or
dec
retf
repz
inc
xor
sub
mov
test
adc
(bad)
or
xchg
sub
xor
jecxz
mov
push
int
cwde
jl
loopne
mov
mov
bnd
rcl
ins
in
push
xchg
add
pushf
fs
cmp
push
ror
and
int3
jecxz
in
mov
adc
std
jp
ret
imul
add
not
xchg
or
or
jne
lds
setno
sbb
and
leave
cmp
dec
scas
and
call
scas
retf
pop
imul
adc
jb
mov
lea
test
aas
mul
and
hlt
jge
mov
dec
push
mov
sbb
sub
add
inc
out
dec
or
push
imul
pop
repnz
push
push
xor
test
mov
mov
imul
pop
jl
jmp
pop
lea
jle
and
dec
xor
push
inc
enter
test
sub
sub
inc
dec
mov
and
adc
mov
jmp
stc
fld
sbb
lock
xor
and
jle
mov
or
fnstsw
out
fistp
repnz
call
in
push
sbb
lock
cwde
mov
stos
scas
into
pusha
imul
xchg
daa
fld
cmp
mov
scas
pop
adc
xchg
idiv
xor
add
mov
cli
pop
fisubr
or
cmc
mov
inc
repnz
or
shr
cdq
pop
pop
enter
push
push
sbb
push
dec
mov
ret
cmp
aad
sbb
test
xchg
std
jecxz
lods
out
rep
fdiv
jnp
fimul
scas
push
xor
xor
pop
xor
mov
jge
(bad)
into
int3
xchg
or
out
jns
clc
mov
dec
or
mov
js
xor
sbb
mov
xchg
jmp
and
or
inc
and
jecxz
mov
pop
sub
retf
test
call
test
mov
xchg
shl
imul
xchg
and
sbb
pop
adc
outs
push
mov
call
arpl
pop
cmps
cdq
cli
jg
mov
mov
pusha
adc
sub
mov
loopne
xchg
cmp
jns
cmp
cwde
push
push
in
adc
outs
ins
add
stos
gs
xor
ror
mov
push
jo
hlt
fcomp
pop
adc
mov
push
sbb
adc
mov
in
mov
dec
xchg
adc
cmp
stc
sti
outs
into
(bad)
xor
add
adc
fsub
in
clc
movs
sbb
fs
cli
mov
rcl
mov
jmp
sti
cdq
popf
and
shr
or
mov
or
mov
push
je
hlt
adc
out
cmp
fldenv
jbe
adc
jmp
mov
rcr
push
push
je
add
jp
in
mov
push
jo
mov
pushw
dec
rcl
push
fisub
inc
adc
cmps
les
or
leave
pop
xor
adc
cmp
pop
push
aad
lds
jp
jns
cmp
jne
nop
sbb
ret
aad
mov
adc
or
in
xor
push
into
jg
xchg
pop
shr
sub
xor
aas
dec
retf
adc
arpl
sbb
stos
add
ds
push
cmc
xor
es
rcr
aas
ja
out
push
enter
jp
aaa
sub
inc
loope
(bad)
jne
add
in
mov
shl
mov
xchg
mov
cmps
test
lahf
mov
jp
movs
arpl
fimul
xor
mov
adc
dec
cmp
in
lds
dec
stos
xchg
xchg
inc
shr
pop
ror
fstp
dec
add
inc
jle
push
sub
iret
xor
ret
and
stos
cmp
ret
mov
cli
or
adc
pop
mov
add
push
mov
and
(bad)
sbb
fwait
and
pop
mov
xchg
lods
mov
shr
(bad)
in
fild
sti
aad
mov
mov
dec
jl
mov
pushf
sub
push
sub
cs
push
mov
shr
rcl
jecxz
add
stc
lock
or
or
sahf
imul
dec
mov
shl
mov
adc
lods
fdivr
cmp
mov
in
push
sbb
jo
mov
adc
jg
pop
mov
add
adc
dec
push
scas
adc
test
fs
mov
dec
xor
jae
stos
push
or
sub
xor
jp
cmp
xchg
inc
sbb
mov
adc
(bad)
push
sbb
inc
xor
inc
fldcw
fsubr
retf
push
into
out
ins
adc
mov
jge
lahf
dec
jnp
pop
sbb
test
ja
cmp
jmp
and
cmp
push
bound
pop
in
push
cs
pop
cdq
xchg
adc
pop
call
pop
aas
jo
and
in
fld
fs
xchg
add
stos
sbb
and
sbb
push
mov
je
mov
outs
addr16
mov
push
cmc
lods
aam
or
sub
mov
mov
aaa
pop
nop
lods
push
rcr
adc
mov
lds
or
pop
inc
xor
inc
sbb
ins
cld
retf
movs
pusha
jge
out
fbld
fisub
dec
adc
push
xchg
mov
push
sbb
xor
lds
inc
retf
(bad)
sbb
sahf
loopne
(bad)
ins
adc
div
loope
mov
mov
sbb
jo
mov
xchg
push
xor
jae
ret
mov
out
mov
sub
adc
sub
inc
sub
imul
or
push
int3
jns
fnstsw
lea
lea
mov
leave
push
add
xchg
ds
popf
call
and
add
outs
(bad)
movs
pop
test
inc
add
mov
jg
(bad)
out
loopne
sti
sbb
xchg
push
nop
cmp
xlat
(bad)
pop
ret
aad
push
push
bound
pop
mov
sub
shl
fwait
lahf
sub
jg
cmp
push
ror
push
inc
cmp
aaa
xor
xchg
and
mov
ss
jno
retf
pop
adc
cmc
xchg
adc
push
jp
xchg
mov
ins
aaa
adc
ins
cmp
inc
loopne
es
test
pushf
in
xchg
jae
adc
sar
mov
mov
adc
sbb
push
outs
push
(bad)
imul
test
icebp
outs
neg
ret
out
pop
xor
js
stos
enter
xchg
adc
gs
mov
ret
cmp
add
mov
or
jnp
cld
into
pop
or
xrelease
jmp
stos
je
sahf
loopne
adc
inc
cld
push
pop
ins
jp
cs
shl
or
addr16
pop
and
and
ja
cli
sbb
call
cs
push
sub
jno
push
std
(bad)
sub
int3
mov
adc
xor
popa
xchg
and
push
dec
shl
push
imul
inc
and
pop
jmp
mov
shl
pop
iret
jmp
aas
out
sub
lods
pop
out
xchg
enter
ins
jbe
push
mov
cmp
(bad)
gs
lods
icebp
sbb
xor
(bad)
jle
lods
or
pop
(bad)
fcom
sub
nop
stc
xchg
lods
pusha
(bad)
loop
repnz
mov
leave
cdq
(bad)
ins
stos
pusha
stos
aas
dec
mov
rcr
mov
sti
sbb
fnstenv
cmp
jecxz
lock
neg
jmp
ret
inc
es
int3
pop
and
call
dec
sub
jb
aaa
js
cdq
push
(bad)
bound
sti
inc
xor
shr
leave
sti
test
inc
sub
out
adc
out
jl
cmps
xchg
xor
fnstenv
cmps
and
idiv
mov
xchg
ds
in
repnz
cld
and
mov
adc
test
repnz
inc
(bad)
out
or
inc
xchg
ja
jb
ins
sar
inc
cs
out
or
retf
and
cmp
jecxz
pop
mov
mov
push
ret
mov
(bad)
das
ins
mov
jae
jae
dec
dec
pop
outs
out
into
daa
inc
popf
add
mov
scas
and
inc
ds
add
add
sub
pop
nop
mov
adc
(bad)
mov
ret
mov
stos
icebp
push
or
sbb
lahf
cmp
scas
sbb
inc
iret
xchg
jb
repnz
aam
lods
loopne
xchg
clc
aam
and
push
(bad)
dec
in
and
adc
and
mov
ficom
aad
xchg
icebp
es
ja
out
xchg
mov
jns
mov
push
push
fs
push
cld
imul
pop
cmc
inc
sub
jbe
mov
std
and
mov
and
out
sub
outs
adc
and
aam
rdtsc
hlt
fist
jno
lahf
jno
mov
cmp
out
inc
push
push
stos
lds
and
jbe
test
sub
je
cld
or
xchg
mov
adc
sub
cmp
test
imul
push
cmp
(bad)
retf
std
or
mov
stc
dec
add
cli
dec
test
cmp
repz
lea
shl
mov
scas
or
and
sar
rol
cmp
jmp
outs
cmp
or
jno
test
ss
adc
inc
ins
gs
mov
mov
pop
cli
jae
cli
adc
ins
outs
loopne
inc
scas
dec
cs
adc
icebp
ret
inc
into
pop
scas
add
mov
inc
loope
rcl
cdq
jnp
lods
cmp
sub
fld
std
shl
(bad)
outs
pop
lods
inc
in
and
sti
xor
pop
inc
jne
loope
pop
movs
jbe
mov
sbb
mov
mov
add
sub
xchg
shl
jmp
mov
addr16
add
loopne
pop
loop
mov
inc
mov
in
mov
add
retf
mov
mov
jbe
loope
jl
lock
mov
mov
jno
jmp
push
aaa
enter
pop
rol
addr16
lahf
leave
into
mov
pop
call
loopne
push
mov
cmps
sub
and
adc
stos
sub
int3
movs
cld
ss
pop
addr16
cmps
imul
jbe
loopne
xchg
push
pop
pop
mov
out
les
mov
cmp
cmp
add
mov
and
cmp
stos
add
jbe
xor
xor
lods
ret
dec
add
and
ins
je
adc
mov
xor
push
jno
xchg
dec
lock
mov
retf
pop
loopne
les
outs
pop
xchg
sti
dec
fadd
les
pop
sbb
xchg
pusha
push
mov
sub
cmp
or
in
ret
gs
push
and
sbb
xchg
mov
add
test
sub
pop
retf
pop
aas
dec
(bad)
call
fcmovnb
ja
mov
int
imul
jmp
inc
out
lods
sbb
int
pushf
stos
pop
out
arpl
sar
cmp
mov
test
and
test
rol
rol
scas
mov
out
pop
js
hlt
scas
sbb
and
sbb
or
mov
or
mov
xchg
jo
jno
sub
fucomi
sub
sub
mov
sti
mov
stos
ds
push
hlt
scas
aas
aaa
fistp
push
sbb
in
mov
pop
movs
pop
fscale
shl
(bad)
cmp
pop
test
xor
sub
inc
pop
adc
repz
dec
mov
fdiv
adc
or
retf
push
sbb
std
mov
leave
not
dec
pop
clc
fimul
mov
das
mov
xor
jne
push
inc
lahf
jne
push
add
jne
sbb
sub
add
xor
sti
mov
adc
cmp
push
retf
outs
ret
dec
out
fsubp
hlt
or
sbb
inc
push
dec
outs
push
or
stos
packssdw
outs
inc
inc
(bad)
xchg
pop
adc
pop
in
shl
xchg
cmp
mov
xor
ss
or
(bad)
mov
mov
shl
stos
mov
call
fild
cmp
xchg
mov
xchg
add
mov
test
xor
das
loopne
cwde
dec
cmp
addr16
movs
jp
adc
mov
xor
mov
gs
push
in
mov
sti
mov
sub
jae
mov
jb
mov
and
adc
int
mov
push
icebp
lods
ss
stc
fnsave
mov
mov
les
and
adc
or
sti
mov
pop
mov
mov
test
in
(bad)
and
jmp
(bad)
(bad)
jae
sbb
xchg
dec
(bad)
aas
leave
push
dec
idiv
std
jecxz
jmp
sub
gs
mov
es
retf
lock
lods
or
je
pop
jno
xchg
dec
xchg
inc
or
sub
add
and
pop
call
enter
or
pop
fidivr
test
or
hlt
xchg
sbb
and
out
push
pop
cs
int
push
movs
pop
rcr
mov
sub
scas
pop
int3
enterw
inc
sbb
scas
fcom
jge
mov
idiv
push
mov
jge
inc
cmp
push
and
cmp
retf
arpl
dec
push
push
push
mov
(bad)
in
push
retf
pusha
mov
fmul
cli
and
and
fild
cmp
or
mov
sub
jae
cmp
ins
inc
pusha
mov
sbb
mov
cli
fdivrp
jnp
jns
cmp
data16
push
jl
or
ret
ret
sar
ds
dec
and
add
into
dec
enter
loopne
add
mov
test
dec
loope
cmp
sbb
jge
push
inc
inc
je
or
cli
pop
add
test
mov
into
cs
sub
push
sub
xor
iret
push
es
sub
ror
sahf
movs
xor
out
pop
(bad)
cmps
sahf
adc
out
pushf
nop
jmp
in
ins
pop
call
sbb
mov
cmp
inc
out
dec
ja
das
addr16
cmp
jb
(bad)
mov
ret
push
mov
adc
sub
(bad)
(bad)
mov
popa
sbb
inc
push
jmp
call
popf
jp
int3
sub
popf
cmc
ds
loope
mov
mov
adc
mov
sar
sti
xchg
xchg
bound
jb
pusha
scas
jae
push
stos
dec
popf
push
aas
sar
sbb
inc
push
add
imul
add
jecxz
lahf
dec
pop
xor
dec
add
jle
push
xchg
cmovne
int
adc
cmp
test
cld
sbb
shr
pcmpeqd
add
push
ret
add
mov
ss
adc
call
js
cmp
(bad)
adc
xor
mov
ins
repnz
aaa
pop
and
outs
les
(bad)
daa
or
jg
mov
sbb
popf
push
aas
cmp
dec
dec
test
cwde
bound
jbe
jmp
push
or
push
xchg
arpl
nop
pop
lods
push
push
xchg
xchg
jb
or
xchg
aad
jmp
fnstsw
sbb
aas
ret
cdq
mov
xchg
cmp
sbb
adc
jle
add
dec
jo
jb
pop
sbb
gs
fldenv
jge
(bad)
pusha
(bad)
ror
jb
add
xchg
jmp
adc
inc
mov
into
sbb
das
dec
fs
(bad)
out
add
into
imul
pop
mov
lock
add
xor
xchg
aam
loopne
xor
lods
mov
inc
pop
pop
aaa
(bad)
sar
ficom
xchg
xchg
call
add
add
adc
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
