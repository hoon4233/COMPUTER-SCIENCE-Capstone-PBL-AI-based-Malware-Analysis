mov
pop
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
xor
mov
lea
mov
push
mov
mov
push
mov
mov
push
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
mov
call
test
je
push
call
add
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
lea
mov
push
lea
call
add
push
lea
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
push
mov
push
lea
push
mov
mov
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
call
mov
lea
mov
call
mov
mov
lea
mov
mov
call
xor
mov
lea
mov
mov
call
or
mov
mov
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
call
mov
mov
xor
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
mov
mov
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
lea
call
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
lea
push
mov
call
mov
push
mov
call
mov
mov
add
or
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
mov
call
mov
push
call
mov
call
test
je
push
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
sub
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
pop
test
jmp
push
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
cmp
je
lea
call
test
je
lea
call
test
jne
lea
call
test
je
lea
call
test
jne
lea
call
test
jne
lea
push
lea
call
mov
mov
mov
call
test
je
mov
jmp
xor
mov
test
je
and
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
pop
je
call
mov
mov
mov
push
mov
call
jmp
call
mov
mov
mov
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
mov
push
mov
mov
mov
lea
mov
add
test
jne
sub
push
push
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
push
mov
cmp
je
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
cmp
mov
jne
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
push
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
lea
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
mov
call
mov
mov
mov
mov
push
push
push
lea
call
lea
push
mov
call
mov
push
push
lea
call
mov
push
push
lea
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
call
mov
pop
outs
(bad)
jle
psubq
das
dec
in
(bad)
sbb
bound
xchg
adc
xor
mov
pop
add
leave
das
pop
dec
pop
stos
or
dec
pop
fild
cdq
adc
and
loope
bound
aaa
xor
sbb
add
fisttp
ins
das
pop
lods
jne
fcomp
inc
adc
gs
push
xchg
out
sar
xchg
push
std
enter
call
sbb
dec
xchg
push
in
mov
(bad)
mov
mov
dec
test
jbe
mov
lahf
loop
test
gs
out
shr
sbb
cmc
or
call
arpl
ret
loope
in
add
in
cli
jmp
lahf
jae
cs
xlat
mov
push
pop
pop
cli
das
jae
push
stos
push
sub
out
mov
test
xchg
mov
push
scas
lahf
aas
(bad)
jmp
inc
sti
imul
push
mov
aam
aad
js
sub
xchg
fstp
jns
jg
maskmovq
mul
fdivr
sbb
mov
or
shl
(bad)
pop
repz
aas
sub
aas
adc
cmps
cmp
retf
pop
retf
and
ds
fcom
cli
enter
mov
aas
push
sub
add
sub
jns
mov
mov
cmc
call
xor
push
cmp
jge
push
loopne
mov
cmps
cmps
inc
out
(bad)
movs
retf
cli
mov
mov
sub
bound
lds
sahf
iret
stos
mov
mov
out
std
and
inc
daa
aas
sahf
dec
rcr
sbb
xor
mov
mov
out
ins
repz
or
add
adc
mov
retf
cli
(bad)
pop
int3
outs
imul
inc
add
lahf
sbb
inc
sar
(bad)
retf
jl
mov
xchg
mov
mov
gs
pop
cli
xchg
aaa
add
and
or
push
movs
bound
stos
int3
and
je
jge
fnstsw
les
pop
add
dec
cmp
push
adc
push
scas
aas
scas
scas
aaa
fisubr
outs
mov
mov
add
ds
mov
mov
dec
scas
inc
xchg
lods
xadd
leave
add
aaa
arpl
add
inc
cmp
retf
in
cmp
outs
mov
je
sub
mov
retf
jae
mov
jne
pop
test
adc
pop
lahf
lods
add
or
sub
mov
lods
xor
jg
out
cwde
pop
div
retf
mov
dec
out
sub
or
dec
sti
das
push
pop
push
mov
jmp
lds
ret
mov
mov
scas
push
push
pop
gs
fs
cmp
cmp
sub
nop
std
ins
lods
pop
int
mov
jecxz
inc
iret
scas
cmp
mov
jbe
je
aas
push
push
mov
test
push
out
ins
movs
push
jnp
adc
(bad)
in
or
add
ror
scas
cmp
lahf
test
scas
stc
mov
out
(bad)
(bad)
jnp
gs
mov
ja
fsubr
push
lahf
out
and
out
push
adc
(bad)
ds
dec
jmp
mov
les
leave
retf
xor
push
imul
cmp
pusha
fwait
add
mov
aas
mov
mov
xchg
lahf
jl
std
add
ffreep
arpl
out
inc
(bad)
repz
and
and
cmp
push
repz
in
popf
in
popa
push
sahf
xchg
cli
sbb
out
dec
sub
outs
loope
imul
mov
jg
mov
scas
jnp
sub
sub
out
jge
pop
popa
inc
jg
into
pop
mul
sti
cdq
or
aas
js
push
pop
pop
pop
scas
(bad)
mov
or
or
and
fisub
lock
aaa
jle
adc
imul
(bad)
cmps
inc
cld
std
in
jg
pop
out
jno
es
inc
stos
popf
lahf
add
int3
in
jp
and
cmp
(bad)
mov
cmps
xchg
jno
mov
daa
test
or
push
mov
addr16
or
fild
fcmovb
pop
test
scas
or
xlat
dec
out
push
pop
stc
loop
jge
jmp
pop
mov
adc
fist
scas
ret
sbb
xlat
sar
mov
mov
push
mov
sti
add
dec
jb
in
mov
test
cmp
xchg
xchg
mov
(bad)
out
cmp
jb
fdivr
cld
aam
mul
mov
push
in
mov
das
mov
mov
pop
xor
xor
cli
ins
call
dec
push
aaa
xchg
pop
add
mov
jnp
mov
aaa
out
or
mov
sub
push
mov
nop
cmp
dec
push
xor
jecxz
cmc
lods
dec
sahf
mov
mov
fucomi
fsubr
sub
or
pop
mov
cmp
js
or
adc
test
ja
sbb
inc
inc
cmp
or
stc
dec
outs
add
cmps
std
mov
js
jmp
pop
mov
dec
push
dec
pop
and
jmp
jge
xchg
hlt
inc
stc
scas
inc
aas
pop
retf
mov
retf
fldcw
and
push
ins
std
or
repnz
cs
sub
out
cli
jbe
nop
mov
add
lahf
aaa
iret
xchg
push
pop
das
mov
fild
mul
shl
fisttp
stos
lea
push
sti
xchg
jecxz
push
jae
iret
push
xchg
jns
dec
xchg
or
or
push
mov
mul
push
ret
test
dec
pop
iret
xlat
dec
cs
xlat
jle
addr16
pop
dec
aaa
(bad)
std
sahf
adc
lahf
out
sbb
out
fwait
or
mov
leave
and
pop
push
outs
sub
call
movs
sbb
scas
iret
add
dec
scas
imul
addr16
pop
cmp
outs
mov
cmc
ds
fistp
jg
sub
mov
adc
fcmovu
fs
out
shr
cmps
push
push
add
pop
out
jne
xchg
pop
xchg
push
dec
scas
and
pop
out
pop
ror
cdq
xor
pop
inc
pop
mov
cmp
call
std
mov
jmp
pop
jnp
out
mov
pop
aaa
sbb
int
jmp
int3
fidivr
pop
xchg
call
mov
pusha
sti
push
push
lea
das
sbb
jae
aas
jmp
into
or
jl
fmul
dec
cdq
push
push
sbb
das
pop
test
jmp
int3
or
aaa
addr16
inc
test
xchg
test
push
pop
dec
sub
mov
add
xor
cmp
gs
mov
cs
mov
cmp
scas
add
in
dec
mov
imul
dec
fidiv
sub
push
jp
sbb
adc
rcr
aad
aaa
pop
es
lds
add
cmps
data16
xor
push
xchg
jl
lods
push
and
in
and
lods
lods
(bad)
jl
inc
nop
sahf
mov
dec
repz
mov
jno
(bad)
aas
sbb
cmp
push
add
jnp
fst
sbb
das
pop
add
push
jle
imul
jb
dec
pop
push
ret
ins
out
call
mov
xchg
xlat
cs
or
and
sbb
test
cld
xchg
mov
(bad)
stc
mov
jle
jl
or
outs
jno
xlat
call
pop
jp
mov
sbb
cmp
cld
xchg
jle
mov
ds
dec
jle
fimul
mov
and
cmp
mov
inc
pop
dec
arpl
dec
xchg
jg
mov
push
mov
bound
inc
push
cmp
scas
pop
mov
xlat
js
stc
scas
and
into
scas
xchg
sub
xchg
mov
enter
mov
jecxz
cmp
jmp
adc
adc
sbb
xchg
add
cli
repnz
xor
mov
stc
sbb
or
lods
mov
add
pop
xchg
out
ja
push
cli
ds
pop
mov
mov
das
cmp
in
in
mov
enter
int3
fild
pop
scas
stos
mov
pop
dec
sub
ss
scas
ins
cmp
sahf
stos
cmps
and
ds
or
ins
loop
or
int
sub
fistp
mov
out
jnp
push
sbb
jno
adc
mov
ins
pop
mov
pop
int
lahf
fiadd
outs
sub
jno
inc
mov
pop
add
jge
imul
jmp
test
jle
push
mov
and
pop
push
sub
mov
or
inc
out
mov
dec
outs
neg
test
aam
faddp
inc
jae
mov
jmp
movs
lea
pusha
cmp
out
xchg
mov
dec
adc
dec
scas
out
mov
lahf
bnd
jmp
mov
inc
xor
xchg
sub
pop
inc
je
inc
jl
add
stos
pop
mov
inc
jno
in
push
xor
jno
pop
popfw
js
sub
sub
jnp
mov
jg
(bad)
std
int3
dec
gs
repnz
mov
outs
xlat
mov
jns
adc
or
jbe
inc
push
xchg
jne
push
jle
je
retf
xchg
loope
xchg
xchg
dec
in
push
ins
jp
ins
xlat
jg
fwait
in
inc
cs
mov
into
mov
retf
jb
repz
cld
sbb
fldenv
add
ss
mov
je
adc
lahf
xor
mov
(bad)
fisub
sbb
(bad)
(bad)
aas
outs
movs
wbinvd
mov
sahf
mov
(bad)
in
cmc
out
rcr
ja
xor
imul
ret
(bad)
sbb
jno
or
mov
dec
cli
sub
mov
sub
pushf
pop
and
iret
sub
mov
retf
xchg
stos
push
iret
cmps
jmp
loop
push
out
jno
bound
enter
pop
fcomp
iret
jmp
cs
(bad)
ja
add
push
mov
cmp
xor
aaa
(bad)
in
push
mov
scas
fist
or
pop
adc
push
cmp
daa
sub
add
cmps
push
sahf
in
aas
jle
pop
ins
inc
and
scas
sbb
sbb
add
cmc
push
es
inc
pop
mov
outs
rcr
test
mov
cmp
pop
jbe
(bad)
adc
cli
cmc
(bad)
dec
jp
dec
mov
sub
push
sub
ins
into
mov
movs
hlt
scas
dec
sbb
stos
sub
out
clc
or
std
sub
mov
pop
fucomp
scas
and
test
mov
xor
cmps
adc
and
mov
das
mov
neg
mov
mov
pop
data16
lds
xlat
mov
retf
jle
pop
(bad)
sbb
fdivr
push
scas
jmp
gs
push
dec
mov
jecxz
push
out
mov
(bad)
shr
in
out
dec
sbb
sub
and
jge
ja
aam
push
dec
popa
mov
daa
scas
in
push
xchg
fist
and
lar
pushf
sbb
dec
iret
ss
sahf
pushf
mov
ror
fistp
push
into
pop
sbb
ss
adc
lods
or
mov
das
or
aam
xor
push
(bad)
in
(bad)
retf
xor
outs
(bad)
mov
scas
xchg
data16
dec
inc
mov
idiv
xlat
sub
or
dec
aas
into
inc
and
mov
sbb
add
xchg
adc
das
and
outs
dec
inc
cmp
inc
scas
xlat
adc
das
cld
ret
push
jle
rcr
sbb
pop
dec
push
push
xor
pop
out
(bad)
mov
fwait
mov
pop
jl
inc
outs
mov
retf
jg
pop
push
inc
ins
mov
(bad)
call
xlat
ret
pop
push
daa
sub
in
leave
(bad)
scas
xor
scas
dec
lods
fnstsw
mov
mov
xchg
jb
jp
les
pop
xlat
and
pop
cli
mov
jle
fcomp
movs
sahf
mov
mov
shl
fsub
mov
push
das
sahf
stos
push
xlat
in
loop
retf
int3
and
xchg
mov
sub
cmp
cmp
dec
dec
in
jmp
sti
jecxz
mov
sbb
sub
rcl
lahf
push
ficomp
mov
and
in
scas
cmp
sbb
mov
pop
jb
aad
sbb
gs
aas
inc
rol
inc
pop
mov
sbb
jg
sahf
cvtps2pi
pop
push
inc
mov
jge
jmp
xor
pop
push
sbb
cs
pop
js
mov
jne
xchg
xchg
out
or
push
iret
inc
stc
adc
out
jmp
and
jb
or
sar
add
inc
(bad)
in
mov
pop
pushw
(bad)
cld
daa
jo
aas
scas
aaa
mov
ins
pop
jae
dec
cli
mov
and
fs
imul
pop
enter
dec
adc
adc
sti
sbb
jg
fucomip
das
adc
(bad)
jl
std
lods
adc
(bad)
aas
ss
pop
mov
sbb
push
outs
(bad)
js
jecxz
mov
bound
out
lds
jecxz
jg
pop
sub
dec
jecxz
pop
sub
dec
dec
call
or
xchg
xor
mov
iret
clc
pop
jb
jmp
jmp
pushw
cdq
mov
jmp
pop
test
pop
imul
lods
stc
mov
movs
call
and
ret
fcmove
into
in
pop
(bad)
repnz
pop
(bad)
imul
mov
icebp
adc
outs
push
fst
imul
repz
out
ror
cmp
call
sub
and
push
cmps
mov
pop
mov
mov
(bad)
fiadd
mov
pop
cmp
mov
sbb
jbe
les
outs
push
sub
aas
or
gs
ins
cld
mov
cs
mov
in
in
fbstp
or
cmps
scas
sahf
adc
sbb
fwait
stos
add
xchg
out
sbb
popf
dec
imul
shl
jecxz
dec
adc
bound
add
jp
daa
mov
mov
(bad)
rcl
cmp
mov
ja
adc
dec
xchg
inc
shl
(bad)
mov
sar
or
or
mov
das
fdivr
out
outs
scas
xchg
into
or
rcr
inc
mov
xor
popf
int3
ja
lahf
dec
(bad)
xchg
fist
into
cmp
fwait
xchg
scas
and
lahf
bswap
dec
fistp
xor
loopne
jg
gs
out
pop
mov
xor
dec
scas
cwde
adc
outs
and
xchg
push
fnstsw
loope
lahf
mov
cdq
scas
fist
int3
pushf
lods
fsub
imul
dec
and
jb
inc
stos
or
sbb
cdq
mov
jle
pop
in
pop
mov
imul
imul
add
lahf
cli
xchg
cmp
das
push
cmp
out
inc
jg
gs
fisubr
in
sub
adc
mov
(bad)
out
test
(bad)
pop
out
inc
and
retf
(bad)
pop
mov
popf
inc
sub
or
inc
fild
pop
ds
add
aam
dec
cli
jl
leave
(bad)
and
popf
mov
loope
test
xchg
xchg
add
xlat
fs
jmp
int
das
mov
outs
jno
add
jns
mov
repz
jnp
ds
popa
push
fisubr
or
or
and
sub
not
clc
ja
jmp
cmps
sbb
add
cwde
jmp
sar
jge
cs
enter
stc
fbld
cdq
fwait
outs
imul
scas
fwait
mov
add
fdiv
out
outs
sub
outs
sub
imul
mov
jae
iret
lods
fidivr
retf
mov
dec
or
cdq
call
imul
stc
mov
or
idiv
cmp
(bad)
fadd
mov
lahf
das
xor
clc
dec
mov
call
push
inc
mov
call
ins
push
(bad)
lods
jmp
dec
pop
sahf
pop
sbb
xchg
lahf
push
dec
cs
enter
scas
jno
cs
ds
stos
mov
in
dec
mov
pop
jmp
stos
mov
das
mov
lods
add
jmp
and
retf
out
push
fcomp
inc
pop
fistp
cmovp
repnz
scas
push
ds
dec
inc
ins
iret
fcmovne
es
inc
mov
std
das
mov
leave
mov
xor
jp
fcmove
call
adc
lea
pop
ficomp
and
out
lods
sar
popa
gs
aam
out
dec
push
loope
push
jg
sub
fmul
icebp
inc
scas
mov
jmp
into
xor
clc
jle
data16
lahf
pop
jo
outs
cmps
iret
es
and
push
mov
mov
cmps
out
xor
jle
mov
mov
pop
sub
mov
pop
(bad)
mov
pop
inc
in
adc
sub
neg
and
cmp
inc
out
or
into
xchg
sar
mov
jle
idiv
fbld
mov
xchg
lods
cmps
out
xlat
out
hlt
cmps
cmp
inc
test
jl
scas
out
inc
dec
(bad)
outs
stos
push
mov
mov
cs
sbb
mov
jmp
outs
xor
popf
add
mov
stc
jecxz
mov
mov
jle
call
mov
out
sub
push
fcomi
(bad)
push
test
dec
les
inc
cmp
ds
aas
in
movs
pop
out
fwait
cmps
rcl
sti
rcl
stc
cmp
repnz
outs
out
jmp
pop
das
pushf
test
ret
pop
out
xor
stc
mov
lahf
test
dec
cmp
cs
inc
aas
pop
outs
dec
pop
das
les
ds
pop
in
mov
fcmovnu
push
leave
and
dec
sti
xor
fiadd
mov
or
add
cmp
lds
jo
and
jge
sub
jns
mov
pop
mov
adc
fcom
pop
mov
jbe
jmp
aas
add
(bad)
ins
cmp
dec
push
scas
pop
pushf
pop
rcl
call
pop
data16
dec
into
push
(bad)
js
pop
not
and
add
sub
push
fild
sub
aas
inc
stos
fisttp
lods
scas
jmp
int3
or
xlat
cmps
(bad)
lods
mov
popa
sbb
cs
das
outs
mov
cli
add
or
test
mov
in
push
std
mulps
mov
pop
mov
ins
scas
sub
fisttp
idiv
cli
or
fcmovb
(bad)
out
jb
inc
cmp
jle
int3
shl
out
out
mov
iret
mov
loopne
(bad)
jmp
into
fld
cvtps2pi
aad
inc
out
sahf
fdivr
aad
pop
pop
push
data16
sub
jnp
out
and
ss
add
sub
inc
pop
push
das
ins
stos
fisttp
repz
adc
int
cmps
cmps
mov
xchg
dec
ficomp
xor
rcr
fs
imul
je
js
loopne
outs
cmp
cld
mov
cs
and
xchg
and
outs
jp
jbe
mov
mov
rcr
push
xor
mov
int
cli
(bad)
lahf
aas
lods
je
mov
loop
cmps
mov
lahf
iret
dec
retf
(bad)
push
pop
adc
or
lods
cmp
pop
out
cmp
sbb
pop
das
xor
data16
movs
xchg
inc
stos
jp
fidiv
fwait
dec
push
and
push
adc
in
(bad)
cmp
jg
popf
mov
pop
push
or
dec
mov
push
sbb
cmp
xchg
sub
xchg
push
xor
outs
scas
iret
or
xor
in
lahf
fsub
pop
es
dec
sub
aas
mov
xor
(bad)
fidivr
and
jmp
adc
mov
dec
push
xor
xor
iret
fisttp
cmp
dec
outs
ror
mov
jmp
fidiv
mov
fisttp
aad
fiadd
and
pop
lds
call
push
div
add
dec
repnz
out
rcl
push
or
push
xchg
loope
or
(bad)
jp
xchg
mov
stos
or
imul
cs
loope
inc
pop
outs
mov
push
sub
leave
out
out
ds
xor
sbb
call
inc
sub
or
sar
in
add
out
mov
dec
(bad)
jmp
push
scas
push
pop
mov
(bad)
call
sti
call
movs
xchg
jge
outs
and
out
sbb
dec
cmc
push
pushf
ds
out
mov
mov
xlat
hlt
(bad)
mov
into
enter
mov
add
cmp
push
mov
popa
push
out
ret
pop
ficomp
les
add
dec
cmp
dec
mov
push
fdivr
into
(bad)
mov
cmc
dec
mov
mov
rcr
shl
int
loop
pop
and
mov
iret
sti
ror
loopne
je
aaa
adc
ins
mov
mov
test
das
pop
cs
dec
sbb
jmp
bts
dec
xchg
aas
dec
pushf
nop
adc
xor
mov
call
jg
or
jb
xchg
mov
pop
jbe
test
sub
cmp
fadd
push
push
pminsw
adc
lods
pop
dec
and
mov
sub
ficomp
outs
cmp
push
jns
push
sbb
stos
pop
dec
movs
pop
fist
pop
adc
mov
push
pop
xor
out
or
cs
bound
xor
jle
jle
push
and
push
ins
cmp
call
std
lds
mov
bound
imul
xor
mov
cmp
mov
pop
jge
or
dec
aas
dec
inc
ds
sbb
pop
jle
fsubrp
into
dec
icebp
out
jbe
pop
mov
repnz
jb
push
les
movs
scas
jle
inc
scas
lods
sahf
popf
lahf
dec
dec
mov
imul
inc
xor
ss
cs
bound
or
or
data16
jbe
std
adc
fidivr
mov
jge
push
jbe
jle
inc
mov
pop
ins
inc
or
mov
inc
mov
push
ds
jbe
jg
pop
sbb
cs
cmp
push
rcr
cmp
pop
test
sub
sub
xchg
mov
cmp
fwait
(bad)
jmp
sbb
push
pop
popf
dec
inc
mov
rcl
mov
jmp
popf
sti
sti
or
mov
xor
xchg
lods
jp
xchg
add
mov
retf
and
fidivr
pop
lods
in
xchg
push
lahf
add
jmp
pop
rol
into
lock
lods
aaa
(bad)
cmp
pop
cmps
or
out
fnstsw
in
jg
add
cmps
(bad)
loop
sti
mov
mov
pop
inc
mov
jnp
int
sbb
dec
ss
jmp
mov
movs
mov
sub
or
or
and
inc
or
rol
or
inc
fldcw
and
jg
pop
test
push
mov
jno
xor
cmps
inc
pop
idiv
dec
mov
cmp
pop
jnp
inc
iret
popf
loopne
outs
sbb
jo
add
and
mov
inc
ficomp
pop
pop
xchg
dec
pop
in
xchg
cmp
aaa
fbstp
mov
fiadd
addr16
xchg
cdq
(bad)
push
jle
scas
mov
in
fdiv
lods
dec
push
sbb
retf
int
sbb
push
out
call
pop
pop
sahf
cmps
(bad)
retf
jp
sahf
daa
push
mov
mov
inc
leave
pop
push
sbb
add
adc
sub
fisttp
mov
lods
mov
stos
sub
push
inc
mov
shl
push
mul
mov
adc
out
dec
into
in
pop
int
jle
iret
dec
int3
repz
xor
iret
cmp
nop
shl
cmp
fsubrp
mov
lahf
rcr
and
pop
mov
add
cdq
outs
mov
in
(bad)
or
fisttp
popf
out
mov
inc
aas
enter
shl
jle
inc
dec
jo
stc
int
div
stos
sahf
adc
cmp
add
sub
dec
ins
(bad)
loopne
pop
scas
xchg
ins
(bad)
sub
iret
dec
pop
es
test
enter
and
(bad)
cs
and
rcr
xlat
(bad)
xor
fs
pop
iret
shr
loop
pop
out
sbb
mov
(bad)
mov
mov
ins
pop
add
sub
pop
xchg
add
das
out
pushf
popa
pop
xchg
daa
std
inc
rcr
push
leave
mov
push
dec
xchg
mov
sahf
outs
test
dec
movs
jecxz
xor
int3
(bad)
fldenv
daa
dec
in
pop
repz
das
retf
cmp
sahf
mov
pop
into
icebp
arpl
mov
(bad)
stc
(bad)
fwait
rcr
pop
cmp
lsl
sbb
push
lea
or
(bad)
pop
jge
mov
lahf
pushf
sbb
int
outs
fbstp
add
and
addr16
(bad)
daa
jo
pop
mov
mov
jg
dec
jo
(bad)
dec
jg
into
push
jg
iret
outs
in
aaa
mov
imul
dec
idiv
daa
add
sahf
ins
or
int
fwait
xchg
dec
ret
fs
adc
or
push
cmp
jmp
jle
jne
mov
repz
push
mov
sub
xchg
popf
jle
icebp
lahf
and
pop
retf
dec
mov
inc
push
loopne
or
mov
div
icebp
out
or
dec
sahf
in
lahf
test
dec
pop
add
push
cmps
outs
dec
out
xlat
mov
push
xchg
(bad)
jg
shrd
lods
adc
mov
pusha
xor
aas
lahf
hlt
xchg
jp
mov
shr
aaa
mov
pop
or
mov
xchg
xchg
mov
sub
idiv
test
mov
sub
sub
pushf
pop
pshufw
popf
xlat
pop
pop
out
cs
ret
out
jns
push
(bad)
dec
fimul
jnp
pop
test
push
sbb
(bad)
push
test
inc
dec
mov
out
aaa
mov
addr16
mov
pushf
imul
hlt
mov
in
dec
aas
out
(bad)
(bad)
adc
ret
mov
pop
test
fdivr
out
dec
sbb
ss
jg
adc
cmp
mov
jle
mov
dec
ficomp
lea
retf
push
jge
aad
out
push
movs
out
add
dec
mov
pop
inc
mov
jl
daa
es
pop
mov
mov
lods
mov
xlat
jl
in
in
pop
leave
cs
xor
arpl
fcomip
cmp
mov
outs
mov
or
es
sub
aam
arpl
in
xchg
lahf
mov
ja
add
pop
or
push
call
xchg
add
xor
retf
mov
popa
das
addr16
out
stos
inc
outs
pop
sahf
shr
xor
outs
imul
call
adc
rep
pop
divps
sub
xlat
and
jae
fs
das
push
lds
jg
jecxz
repz
and
scas
sbb
imul
mov
out
cmp
je
das
aad
push
sti
cmp
inc
dec
adc
dec
pop
fbld
push
sub
and
xchg
outs
xchg
mov
sbb
retf
mov
mov
scas
mov
sbb
jecxz
fistp
mov
cmp
xchg
das
mov
(bad)
dec
pop
jno
scas
mov
push
movs
lock
outs
(bad)
mov
scas
mov
add
sbb
ins
call
xor
shl
out
xchg
clc
ds
mov
xlat
lahf
mov
repz
out
(bad)
push
pop
shl
(bad)
sbb
cmp
xor
lahf
xor
mov
rcr
outs
jg
mov
adc
sbb
fucomip
stos
push
fistp
lods
les
lock
inc
sub
sub
cs
cmp
or
(bad)
inc
mov
dec
inc
aas
xor
in
sub
outs
movs
pop
test
idiv
sub
leave
jae
out
mul
rcr
fld
outs
cmp
dec
jl
cli
xor
and
inc
mov
push
mov
sub
icebp
mov
ds
cmp
retf
or
aam
in
(bad)
cmp
sbb
mov
lea
rcr
and
sbb
popf
mov
cmp
retf
push
mov
sti
(bad)
push
dec
add
scas
xor
out
pop
fmul
mov
jl
push
fnstsw
or
les
mov
mov
mov
sub
cmps
pop
cmp
push
das
retf
sbb
jge
pop
ds
mov
mov
mov
popf
scas
out
imul
xchg
mov
pmaddwd
inc
ror
mov
dec
aam
mov
daa
btc
outs
pop
xchg
or
(bad)
pop
mov
outs
call
aas
(bad)
in
jge
xchg
lahf
sub
xor
fucomp
push
pop
and
push
jmp
popf
or
sbb
add
push
dec
movs
xor
jle
pop
lds
push
sub
dec
push
shr
xor
ins
les
comiss
scas
push
fisttp
gs
mov
stc
dec
stc
dec
or
xchg
cmp
clc
pop
aam
lahf
dec
push
daa
pop
jne
mov
jecxz
xchg
push
jb
inc
bound
add
xchg
sbb
cs
adc
imul
(bad)
cmp
inc
mov
cli
sub
fs
xor
lods
arpl
xchg
pop
push
push
scas
iret
outs
imul
in
hlt
out
out
adc
and
jne
es
mov
sub
imul
mov
cld
xor
aam
out
shl
push
iret
jne
sub
lods
into
jmp
cdq
pop
jge
std
or
mov
mov
dec
sbb
push
sbb
stos
xchg
aad
rcr
add
call
mov
mov
shl
aas
mul
das
mul
jmp
dec
lea
or
mov
xlat
sub
sahf
shr
rcr
push
mov
out
dec
mov
das
or
(bad)
add
test
or
xor
mov
mov
aam
fist
loop
bswap
emms
pop
dec
pop
jnp
out
sub
adc
pop
inc
cmps
call
in
xlat
dec
pop
xchg
jb
outs
mov
sbb
retf
les
adc
retf
dec
lds
inc
cmp
cmp
test
jle
adc
cmps
movs
retf
jne
aaa
scas
xor
xor
and
xchg
hlt
ret
xor
imul
xor
fsubr
aad
retf
in
outs
adc
movs
lods
fidiv
xchg
xchg
ss
dec
clc
pop
mov
mov
push
mov
xor
push
iret
dec
jnp
ja
xchg
sub
ror
out
(bad)
xchg
inc
or
add
xor
push
push
popa
jecxz
jmp
adc
aas
pop
std
jg
jg
jnp
scas
std
aaa
ds
ja
fwait
daa
or
ud2
out
cmps
push
dec
out
pop
out
(bad)
test
stos
and
jae
adc
sub
cmp
and
xor
out
(bad)
scas
add
scas
retf
dec
not
dec
jl
mov
(bad)
xor
jns
outs
pop
lahf
call
dec
mov
and
push
cmp
sbb
out
fist
jne
fcomi
ins
mov
(bad)
lods
dec
out
shl
push
cmp
or
sti
cwde
pushf
push
hlt
push
or
xchg
scas
add
lahf
(bad)
fldlg2
cmp
mov
(bad)
dec
push
into
or
call
mov
dec
sar
cwde
pop
outs
or
fwait
mov
xchg
mov
out
jns
cmp
dec
call
jg
mov
cs
pusha
daa
in
mov
mov
std
imul
cmp
out
out
and
cmc
jnp
xchg
inc
lods
cmp
pop
xchg
ja
mov
mov
inc
mov
(bad)
iret
adc
push
or
push
xor
jle
lods
dec
mov
scas
enter
xlat
push
outs
jle
mov
add
jae
jecxz
pop
sub
pop
push
mov
ds
loopne
hlt
mov
hlt
(bad)
js
mov
xchg
out
aad
into
push
inc
(bad)
jne
xor
dec
hlt
mov
std
and
(bad)
js
xchg
in
ja
dec
pusha
ret
cmp
push
cmp
aad
lea
dec
mov
ds
dec
mov
jecxz
pop
dec
(bad)
xchg
xchg
nop
sti
push
fmulp
pop
movs
fs
pop
push
jg
jp
dec
aas
xchg
(bad)
in
fstp
mov
ret
addr16
mov
out
cmp
mov
scas
icebp
sub
dec
cmps
pop
repz
popf
call
imul
les
sbb
sub
lods
sahf
adc
mov
stos
sbb
jge
push
sub
(bad)
lahf
lods
jo
ret
mov
sbb
push
add
and
daa
or
sub
fwait
dec
add
mov
mov
aad
mov
sub
dec
outs
aas
sub
aas
cwde
js
pushf
popf
movs
test
lds
(bad)
neg
mov
stos
cld
gs
sub
push
xchg
gs
push
sub
jmp
push
push
cmps
test
int
mov
into
aaa
imul
rcr
fwait
ds
jmp
xor
dec
xor
push
jmp
test
lahf
pop
outs
pop
test
cmp
mov
div
sub
dec
arpl
retf
imul
and
xchg
pop
cmc
(bad)
aas
repnz
or
mov
outs
daa
aam
push
lods
jmp
or
push
mov
inc
jbe
scas
arpl
(bad)
cld
or
xlat
cmps
lods
inc
dec
jmp
jle
retf
fisubr
xchg
cmc
mov
fistp
das
mov
retf
sub
fisub
dec
jmp
scas
sub
cmps
add
pop
jg
idiv
stos
xor
mov
and
adc
push
inc
jno
xor
mov
and
lods
call
mov
xchg
push
in
xor
xor
fidiv
dec
mov
mov
mov
push
xchg
int
sub
std
inc
cmp
mov
ss
js
out
mov
test
sub
add
(bad)
xlat
jl
xor
inc
dec
idiv
outs
(bad)
sub
jbe
data16
mov
push
test
sbb
cwde
addr16
aas
fcomp
add
push
adc
es
push
out
sahf
outs
stos
mov
js
lds
retf
xchg
cdq
dec
pop
jns
sub
test
mov
mov
sbb
mov
pop
cmp
xor
push
push
sub
pop
push
cmp
mov
xchg
aaa
sub
and
gs
imul
fcom
call
je
dec
push
cmps
push
popa
mov
jns
in
push
jnp
xchg
or
mov
pop
fsub
mov
xorps
adc
or
pop
or
retf
mov
iret
jle
adc
mov
cmp
js
inc
dec
lahf
rol
movhps
cmp
cdq
lahf
fdiv
mov
xlat
pop
xor
push
not
jmp
pop
icebp
fcmovu
cmp
pop
ja
cs
stos
push
retf
movs
sti
movs
mov
jno
push
imul
sar
outs
div
pop
fbld
pop
jbe
iret
xor
je
arpl
icebp
mov
sar
sahf
sar
cmp
stos
fstp
cmps
outs
mov
lods
cli
mov
inc
cmp
dec
dec
adc
adc
xor
pop
mov
pop
ins
aad
(bad)
mov
mov
neg
inc
pop
(bad)
pop
in
dec
not
(bad)
adc
jge
fnstenv
push
sbb
pushf
mov
test
push
mov
(bad)
rep
sub
aad
in
mov
sbb
cdq
push
push
fcmovb
or
dec
push
lds
ja
cmc
(bad)
xchg
iret
dec
lds
pop
dec
addr16
fidivr
icebp
out
(bad)
mov
cli
int
std
jb
mov
jg
(bad)
rcl
xchg
mov
movs
mov
mov
aaa
pop
adc
mov
mov
and
ja
dec
lea
lods
outs
hlt
dec
aas
mov
and
retf
push
fcmovb
mov
mov
sub
loop
es
call
sbb
(bad)
sar
push
ret
ins
push
enter
xchg
cmps
out
les
test
imul
scas
aas
xor
lods
push
out
xor
cmp
test
mov
inc
mov
inc
or
mov
mov
icebp
call
retf
push
stos
cmp
inc
push
neg
sbb
jg
lods
jmp
cli
ins
fstp
cs
mov
retf
adc
(bad)
mov
lahf
push
jp
mov
bnd
mov
inc
inc
and
mov
cmp
test
cmp
lahf
mov
icebp
xor
fst
(bad)
jge
mov
jp
ret
(bad)
jle
xchg
pop
push
mov
in
mov
aas
scas
dec
ds
and
aaa
in
loopne
jle
push
sahf
repz
lds
and
xor
shl
stos
cld
lds
mov
inc
cmp
xor
sbb
mov
js
pop
(bad)
sbb
jmp
imul
es
xor
dec
out
mov
ds
ja
jns
cmp
jl
push
gs
mov
mov
daa
ret
inc
jb
cmp
dec
popf
xor
(bad)
pusha
into
cld
ror
fadd
jb
mov
pop
test
jmp
not
jno
loop
movs
push
sti
dec
aas
sub
popf
mov
loop
sub
movs
and
lods
iret
retf
push
add
cmps
sbb
xchg
aas
xor
inc
or
sbb
mov
pop
sub
fld
fistp
cdq
fs
or
mov
adc
push
inc
jle
cmp
aas
stos
push
inc
stos
int
stos
or
inc
pop
inc
cmc
lahf
test
mov
xchg
fistp
bound
ret
dec
out
cmc
mov
cli
outs
mov
ins
dec
pop
iret
mov
or
retf
fwait
test
ins
in
fistp
dec
pop
jl
outs
pushw
xchg
mov
inc
jmp
les
add
dec
es
mov
enter
jg
iret
call
mov
(bad)
in
sbb
or
in
mov
out
cli
test
xlat
rcl
adc
mov
call
retf
lods
pop
hlt
addr16
lods
out
jg
call
stos
out
popa
imul
pop
lahf
jle
idiv
cmp
in
nop
out
jge
out
mov
sub
pop
jp
sbb
push
int3
es
clc
fistp
inc
iret
mov
jge
mov
pop
dec
push
jmp
cwde
bound
outs
imul
test
bound
xlat
xchg
outs
jle
int3
mov
mov
imul
fbld
pop
test
lock
mov
sbb
adc
mov
xor
lahf
xor
xchg
test
scas
xlat
les
call
ja
mov
outs
sub
fcom
jmp
push
adc
cs
dec
jg
jae
pop
and
iret
jg
xor
aaa
cmp
sbb
cli
repnz
push
jg
jp
push
not
das
(bad)
mov
out
sahf
out
in
or
daa
mov
mov
jg
mov
dec
aad
mov
bound
int
test
mov
pop
and
mov
scas
mov
mov
adc
mov
add
lods
pop
dec
cmps
out
mov
pop
or
outs
mov
das
(bad)
dec
aaa
pop
fs
mov
les
mov
pop
jmp
scas
cmps
iret
adc
(bad)
daa
pavgw
cmp
xor
jae
(bad)
mov
jp
pop
popa
cwde
je
push
fs
adc
test
fidivr
loope
inc
jmp
into
cmps
sub
test
pop
out
xchg
fs
sahf
jnp
sahf
push
mov
scas
ficomp
push
enter
pop
inc
pop
(bad)
and
dec
jg
xchg
test
sahf
popa
dec
mov
pop
out
pushf
mov
and
or
dec
pop
cmp
xor
in
mov
fild
and
in
mov
dec
aaa
data16
fimul
ins
fs
adc
and
popa
outs
xlat
sti
scas
mov
xor
mov
push
call
sub
jg
inc
jle
into
jno
push
inc
test
xchg
(bad)
loopne
pusha
or
xor
cmp
push
or
stos
(bad)
push
fsub
mov
out
daa
leave
retf
jmp
movs
dec
jg
pop
into
pop
or
rol
mov
inc
ss
sqrtps
push
stos
stos
arpl
aas
jg
ja
jmp
jmp
out
(bad)
sahf
adc
dec
sub
sub
or
repz
mov
aaa
fldcw
(bad)
mov
mov
stos
pop
xchg
xchg
ins
dec
lock
xor
dec
cmp
popf
ds
xor
int
fidivr
lahf
push
or
loop
dec
sub
jo
xchg
mov
fsubr
int
das
fld
(bad)
cs
push
pop
or
mov
or
ss
cmps
dec
jmp
pop
push
rcl
push
push
in
call
ja
dec
cld
enter
jg
sahf
push
mov
xchg
jmp
adc
sub
scas
jle
sub
mov
cwde
fidiv
mov
std
jo
std
lahf
daa
(bad)
cmp
imul
mov
push
jg
outs
add
int
xchg
lahf
std
div
aaa
pop
fmul
and
dec
fst
cmp
das
jg
sub
mov
cs
or
and
jb
pusha
jle
retf
xor
mov
into
scas
mov
ins
int
xlat
fistp
push
push
pop
loopne
ds
iret
xor
lods
mov
in
nop
dec
sub
xor
test
stos
mov
pushf
and
cmp
pop
inc
dec
sbb
mov
test
adc
addr16
mov
out
xor
pop
gs
dec
(bad)
(bad)
mov
cwde
test
movs
aam
pop
dec
cmp
dec
pop
dec
dec
pop
addr16
(bad)
popw
out
add
pushf
int3
jle
repnz
outs
mov
xor
or
and
aaa
fstp
push
push
dec
mov
mov
xchg
add
inc
cmc
pop
iret
add
pop
mov
cmps
pushf
mov
movs
out
add
xchg
dec
mov
(bad)
or
inc
xchg
mov
fimul
dec
jl
cli
addr16
call
push
cmp
pusha
mov
mov
mov
push
loop
in
retf
mov
out
cmc
lahf
shl
pop
nop
sbb
fcmovu
fisubr
ror
jmp
and
or
push
or
inc
mov
cmps
ds
fist
or
in
push
adc
push
xchg
cmp
inc
or
(bad)
push
popa
jmp
pop
add
dec
jmp
retf
stc
pxor
pop
cmp
xor
mov
adc
mov
push
pop
pop
(bad)
jg
movs
xor
call
jp
aas
out
mov
js
or
mov
test
jg
cmp
pop
inc
cmp
dec
inc
ins
div
mov
xchg
dec
shl
mul
cmps
out
fs
push
xor
xor
nop
pop
pop
mov
fbld
fucomp
mov
jno
leave
and
sub
or
iret
popa
mov
into
lods
fsub
lea
jmp
sbb
into
mov
pop
adc
fistp
fcom
mov
jg
ja
mov
jmp
loope
xor
and
xor
retf
scas
mov
loope
clc
jae
cli
mov
xchg
adc
jns
pop
pop
es
out
movq
cli
mov
(bad)
fimul
cmps
xor
jo
fwait
inc
pushf
outs
call
jne
stos
pop
jmp
int
nop
mov
in
in
push
ss
mov
push
daa
js
daa
or
test
(bad)
fst
mov
cmovl
dec
aas
icebp
(bad)
fsubrp
cs
das
pushw
push
push
scas
cmp
sub
xchg
cdq
mov
xchg
enter
cmp
outs
and
cmp
mov
cmc
xchg
lods
stc
popf
mov
mov
addr16
xlat
inc
ins
dec
adc
ds
out
sahf
jmp
fwait
aaa
adc
mov
or
(bad)
mov
dec
cmp
fsubr
(bad)
(bad)
jg
and
push
mov
(bad)
xchg
jnp
mov
dec
(bad)
std
pop
lods
gs
nop
jge
in
sahf
(bad)
out
aas
ret
sub
sbb
lahf
mov
scas
jno
vmwrite
(bad)
repz
cmp
cwde
cmp
xor
int3
and
mov
mov
ja
lods
cs
dec
mov
adc
fcmovu
(bad)
jp
std
jmp
sahf
in
sbb
push
imul
pop
movs
xor
mov
in
add
cli
xchg
test
jg
mov
push
lock
adc
fisttp
lea
or
xor
dec
paddq
hlt
pop
cmp
sbb
leave
mov
aas
std
mov
scas
pop
xchg
xchg
or
clc
inc
mov
or
repz
das
fbstp
std
push
scas
fst
loope
stos
mov
and
sahf
inc
neg
aam
ds
lds
cmp
into
mov
in
int
jmp
xor
cmp
dec
jo
nop
loop
hlt
or
pop
cli
mov
outs
lods
movs
push
ins
xlat
push
mov
sahf
jmp
ja
mov
lea
jnp
mov
xchg
pop
jp
ja
sar
pop
pusha
add
cmp
out
sbb
lods
addr16
fcmovnb
pop
pop
outs
(bad)
inc
fild
push
lods
popf
fisttp
(bad)
cli
push
cmp
dec
jns
dec
aad
jno
in
imul
and
into
iret
inc
jl
inc
mov
pop
scas
lahf
cmp
mov
xlat
fnstsw
and
(bad)
(bad)
cmp
ins
out
mov
cmp
jmp
mov
mov
sti
idiv
push
xchg
(bad)
aam
lahf
loopne
or
ja
jmp
cwde
xchg
xchg
mov
mov
fstp
or
or
jp
push
les
popf
stos
inc
ja
pop
add
mov
shl
jle
into
jg
loopne
int
fucomip
popa
pop
push
xor
mov
(bad)
out
push
or
jne
sahf
ficomp
outs
int
outs
out
(bad)
push
mov
push
mov
movs
mov
adc
das
fimul
adc
pop
ror
ss
adc
dec
xchg
cs
pop
jmp
fmul
test
mov
loope
jecxz
add
mov
xchg
jp
jmp
pop
scas
outs
iret
pop
popa
fild
push
in
int
push
or
xor
xchg
push
imul
stos
repnz
xlat
int3
cmp
pop
rol
jmp
loop
push
das
mov
outs
adc
movq
mov
jne
aas
lods
push
mov
ja
pop
jb
loope
xor
aas
std
je
addr16
iret
ins
dec
pop
lods
out
cs
mov
mov
arpl
mov
fdivrp
push
sti
sar
mov
and
es
int
scas
fist
sbb
xchg
mov
and
inc
pop
jnp
clc
jg
rcr
lock
ds
and
mov
push
jmp
adc
lock
ins
pop
(bad)
outs
mov
cmp
(bad)
adc
scas
jge
int
mov
in
jle
pop
bound
(bad)
ds
es
xor
lds
stc
repz
rcl
jg
mov
mov
pop
mov
lahf
xchg
inc
gs
sub
sub
pop
jl
jle
fistp
in
jns
sub
xchg
in
loopne
pop
in
mov
jb
je
dec
sbb
adc
push
xchg
pop
setno
push
sbb
jmp
call
mov
jnp
jae
mov
cmp
scas
aas
inc
js
mov
xchg
jne
mov
push
mov
cmps
jnp
dec
ins
add
mov
jg
repnz
repz
lods
sbb
dec
ins
aas
out
loopne
adc
pop
dec
or
shl
fld
lds
xor
rcl
inc
dec
fist
call
hlt
mov
aad
out
dec
adc
pop
dec
pop
mov
mov
imul
rol
mov
cld
xchg
sbb
fdivr
add
inc
fistp
scas
mov
cmp
das
xor
jne
gs
jo
scas
scas
loopne
push
dec
addr16
out
jp
fs
or
mov
push
ins
or
cmp
js
adc
adc
adc
loope
iret
sub
xchg
int
add
lods
lahf
hlt
cmp
(bad)
pop
mov
dec
mov
fsub
fcomp
xlat
mov
dec
outs
fsub
ds
sahf
mov
push
stos
daa
test
mov
cmp
xchg
out
outs
jnp
mov
mov
fsub
xchg
or
iret
sbb
push
xor
adc
scas
nop
outs
scas
cmps
mov
(bad)
out
or
xor
dec
out
jns
in
pop
sub
mov
imul
dec
stc
adc
mov
mov
push
shr
outs
and
cdq
sar
(bad)
dec
pop
out
lea
outs
jp
and
aas
mov
cmc
jns
inc
out
jge
pushf
enter
pop
fst
outs
cdq
jecxz
mov
ds
ja
pop
stos
jmp
inc
(bad)
call
es
test
iret
mov
push
icebp
dec
scas
cmp
rol
push
(bad)
aad
outs
push
mov
mov
sub
dec
ds
add
sahf
push
adc
retf
and
in
xchg
mov
outs
jecxz
xchg
sbb
add
ror
out
cmc
iret
iret
shr
retf
jl
(bad)
jnp
and
pop
inc
jae
jmp
push
cmp
(bad)
jne
(bad)
mov
sbb
icebp
outs
aas
or
jmp
mov
out
adc
push
sub
scas
dec
int3
adc
sbb
rcr
xor
mov
xor
xor
pop
(bad)
das
nop
jg
out
test
fisttp
dec
(bad)
(bad)
jmp
fs
outs
or
sub
pop
pop
lea
ds
cmp
mov
aad
movs
shr
mov
jb
int
retf
xchg
mov
repz
mov
jge
int3
mov
call
ja
and
add
sar
inc
jg
dec
sub
xchg
sbb
sti
add
xor
sbb
int3
inc
xor
pushf
jae
adc
fiadd
cmp
mov
push
das
or
in
xchg
sub
(bad)
pop
mov
and
xchg
jge
pop
out
mov
sub
shl
mov
pop
lods
xchg
sub
lods
xchg
xchg
jmp
ds
or
adc
fdivr
or
cmp
sub
into
(bad)
mov
js
das
retf
cs
pop
jo
popa
sbb
cmp
lods
xor
das
inc
scas
push
fimul
outs
sbb
xchg
and
xchg
xchg
movs
repnz
fisubr
jmp
lahf
fwait
push
fisub
cmp
jns
cmc
add
mov
or
mov
push
retf
cmovo
cmp
jl
mov
cld
mov
mov
jns
xor
jnp
mov
pop
and
cmp
movups
cli
dec
pop
je
add
fisub
adc
and
aas
mov
ret
adc
push
mov
inc
mov
jge
in
outs
mov
lods
outs
jg
pop
cs
sbb
pop
sbb
xchg
aas
jmp
sub
or
fwait
xchg
mov
xchg
pop
mov
fwait
mov
pop
adc
movs
(bad)
stos
inc
and
sbb
(bad)
cmps
rcr
mov
(bad)
dec
pop
mov
outs
jmp
test
ret
pop
or
or
pop
stos
pop
std
xor
fwait
lods
push
xor
cmp
pop
sbb
scas
in
aas
mov
xchg
dec
sub
jmp
pop
mov
mov
mov
push
int3
lahf
(bad)
aas
fisttp
sub
mov
stos
in
cmc
std
pop
ins
add
lods
repz
enter
sbb
mov
cs
pushf
lods
leave
fiadd
ret
(bad)
mov
mov
xchg
out
mov
jl
dec
or
in
xchg
leave
daa
arpl
lahf
imul
dec
xchg
out
pop
inc
pusha
dec
lods
mov
pop
iret
shl
xor
mov
aaa
pop
ja
inc
dec
fdiv
scas
mov
jp
xchg
or
bound
xor
pushf
adc
sbb
rcr
(bad)
out
cs
lods
divps
push
xlat
pop
mul
fcomip
mov
nop
inc
fisttp
repnz
xchg
out
cmp
jnp
fistp
lea
jg
int
jg
lods
ror
mov
retf
addr16
mov
and
mov
adc
lods
outs
aaa
ja
mov
shl
pop
icebp
pop
or
dec
fwait
sbb
mov
cmps
sbb
mov
xchg
lock
pop
or
dec
adc
sub
outs
pop
inc
dec
retf
out
lahf
iret
(bad)
mov
scas
cmp
nop
xchg
pop
paddsb
stos
jge
ret
sub
xchg
stos
daa
mov
or
sub
pop
sahf
fld
daa
cmp
add
or
push
mov
push
jno
(bad)
nop
or
jg
adc
das
sbb
sub
cmp
arpl
mov
pop
jp
sub
mov
fnstcw
mul
stos
sbb
jno
iret
and
jnp
xchg
stos
sahf
mov
xchg
push
mov
outs
pop
xchg
shl
das
push
pop
loopne
cmps
ins
mov
and
xchg
mov
jp
ins
sbb
adc
scas
cmp
in
adc
scas
ds
cdq
out
pop
mov
dec
lds
into
sbb
push
mov
dec
aaa
addr16
mov
jo
jmp
sub
jmp
xchg
scas
test
cmp
fidiv
adc
mov
xchg
sbb
adc
ja
inc
js
cmc
loopne
ret
pop
pop
fcompp
add
ss
add
(bad)
cs
jne
sbb
jge
dec
cmp
lahf
pop
popf
jge
movs
out
add
popa
jne
sub
(bad)
call
adc
jg
scas
pop
pop
xchg
outs
jg
stos
je
lea
cmps
fwait
sbb
cmp
xor
scas
out
ds
mov
lods
xor
or
mov
out
stos
mov
xchg
push
outs
dec
pop
mov
cwde
push
outs
pop
daa
adc
ja
imul
js
out
cmp
outs
or
cmp
or
jp
out
pop
sbb
adc
pop
fnstenv
pop
jns
sub
pop
dec
out
dec
mov
sbb
mov
loope
mov
and
add
ja
mov
fs
xor
xor
lods
sub
mov
and
mov
adc
push
cmc
pop
mov
repnz
jle
jno
xlat
test
pop
and
(bad)
sbb
mov
pop
pop
ja
nop
rcl
std
mov
mov
cwde
scas
mov
cmc
pop
rol
jno
adc
xchg
or
mov
push
push
mov
mov
pop
stc
mov
mov
int
(bad)
int3
or
mov
sbb
out
dec
in
and
dec
sub
cmps
add
push
mov
push
daa
xchg
iret
out
cs
fisttp
mov
(bad)
xlat
xor
jg
adc
sahf
mov
ds
jle
into
iret
aas
in
xchg
pop
arpl
pop
xor
mov
inc
jo
iret
sub
fld
stos
cmp
in
fwait
adc
das
push
xlat
dec
sbb
das
sti
aam
lock
shl
popf
iret
dec
scas
push
xchg
inc
aas
inc
mov
pop
dec
test
lock
stos
xor
fwait
scas
test
sub
mov
xchg
pop
movs
push
movzx
test
ins
adc
stos
enter
loopne
xchg
mov
dec
lea
scas
and
aad
mov
mov
out
stc
push
imul
dec
pmulhuw
ja
shl
pop
pop
jnp
outs
jnp
sbb
leave
aad
aas
pop
(bad)
(bad)
cmp
aad
(bad)
xchg
pop
mov
sub
aam
mov
pop
out
aaa
fimul
outs
(bad)
adc
repz
ins
cli
mov
lods
cld
cmc
pop
mov
pop
xor
and
dec
jp
push
ins
xchg
ror
pusha
add
test
add
aas
mov
dec
inc
mov
jmp
xchg
fisub
cmps
lock
inc
mov
scas
pop
or
loopne
shl
cmp
push
icebp
fisubr
and
inc
(bad)
cs
adc
in
add
out
sub
pop
(bad)
repz
hlt
sbb
ja
out
mov
mov
aam
jge
cmp
in
jp
inc
jns
fldcw
ins
jle
iret
in
xlat
lahf
or
loopne
popw
xchg
movs
pop
and
sbb
icebp
pop
mov
ds
cdq
gs
mov
ins
mov
inc
imul
pop
ds
cmp
pop
jno
out
outs
inc
xchg
pop
addr16
sbb
fincstp
cmp
mov
repnz
push
test
push
pop
mov
adc
(bad)
in
jmp
(bad)
popf
enter
ror
xor
xor
sub
lods
rol
aaa
dec
add
xor
push
(bad)
cmc
push
ds
rcr
pop
jne
pop
fistp
addr16
mov
mov
pop
ins
(bad)
mov
std
int
cmp
inc
pop
xchg
xchg
cmp
jno
and
je
jmp
fwait
jp
ins
aam
jno
ret
dec
sbb
dec
xchg
ret
or
inc
xchg
inc
jl
mov
xor
(bad)
lods
or
pop
xchg
push
icebp
call
and
(bad)
fstp
add
jmp
mov
call
pushf
aad
out
iret
jb
ficom
add
jno
imul
js
addr16
mov
sub
pop
or
les
and
push
aaa
mov
mov
aas
pop
and
inc
inc
mov
es
mov
xchg
mov
aaa
sbb
(bad)
cmp
cs
and
aas
push
or
cs
shr
daa
push
inc
enter
pop
cmp
ja
imul
dec
inc
stc
vaddsubpd
inc
inc
mov
(bad)
repnz
mov
sbb
xchg
js
in
push
fwait
(bad)
clc
pushfw
fst
fdivrp
lahf
in
les
adc
lahf
dec
movs
(bad)
lahf
in
xchg
dec
ss
test
inc
add
add
into
or
aas
pop
call
cmovb
dec
pop
ins
jg
cmp
out
push
aaa
xchg
pop
inc
dec
outs
mov
push
aas
push
leave
ja
push
fxch
out
stc
call
jbe
sub
fisttp
ins
(bad)
sbb
imul
xchg
enter
lea
and
sahf
add
popa
mov
retf
lock
sub
mov
retf
or
push
jp
jmp
sbb
jle
pusha
fwait
xor
leave
stos
lahf
add
les
dec
pop
mov
jge
mov
call
pop
pop
into
jns
enter
or
out
pop
daa
inc
jno
push
int
dec
aam
test
and
mov
push
jno
(bad)
mov
mov
fisttp
popf
(bad)
xchg
aaa
sahf
fst
popf
fdivr
fistp
sub
sahf
push
jno
das
das
adc
data16
mov
fs
das
out
in
lods
sub
retf
xlat
dec
cs
or
jle
out
sbb
ret
mov
jg
pop
mov
mov
dec
inc
xor
mov
xchg
std
sub
cmp
jle
stc
mov
push
add
(bad)
ins
xchg
jno
ret
out
mov
dec
mov
cmp
scas
stc
popf
pop
ins
or
jg
scas
out
lock
js
or
lahf
jmp
stos
jp
int3
mov
hlt
jl
or
jb
scas
push
mov
push
pop
std
mul
push
jae
in
out
div
rcl
dec
enter
ret
sahf
sahf
aas
inc
lds
loopne
les
outs
xor
push
aas
neg
sub
push
ss
aas
sbb
sub
stos
or
jo
call
aam
adc
jle
lods
ficomp
jmp
xchg
repz
mov
dec
and
test
ja
gs
pop
jl
dec
push
inc
lea
loopne
data16
pop
rcr
retf
js
retf
data16
push
paddusw
add
push
pop
cwde
int3
das
inc
fst
rol
dec
sbb
lahf
mov
sti
add
sbb
cmp
mov
in
outs
adc
loop
retf
cdq
jns
dec
dec
fcmovbe
inc
ret
icebp
lea
sbb
mov
xlat
push
jg
mov
fxam
shl
dec
inc
pop
pop
in
(bad)
fist
jl
scas
push
scas
fild
scas
fbstp
mov
push
mov
pop
adc
imul
movs
mov
pop
fsub
inc
jge
dec
iret
dec
pop
popa
cmps
dec
int3
daa
add
xchg
into
ret
sbb
fstp
ffreep
xlat
xchg
and
dec
cmp
or
cld
pop
clc
sub
cli
movs
and
pop
into
ficomp
cmp
js
pop
cmps
push
pop
mov
pushf
icebp
punpckhdq
loope
popf
(bad)
scas
jecxz
push
loopne
pushf
ins
scas
cwde
jle
icebp
addr16
ds
nop
sub
xor
sub
and
pop
and
push
ret
fwait
data16
dec
cmp
movs
jns
dec
push
(bad)
mov
out
mov
call
in
lahf
jmp
ja
out
aaa
outs
mov
lods
and
into
mov
and
in
mov
or
lahf
imul
lahf
iret
icebp
movs
bound
inc
pop
add
mov
in
ret
or
out
jp
xchg
lock
xor
inc
sbb
adc
out
inc
rol
sub
mov
test
xchg
mov
jg
cmp
(bad)
fbld
xchg
inc
rcr
bound
mov
mov
ss
sbb
imul
int
jb
outs
into
push
outs
sub
fs
pop
mov
hlt
push
adc
clc
scas
mov
mov
outs
mov
pop
popa
stos
fidiv
pmaxsw
iret
imul
jg
sub
mov
sti
div
or
and
pop
imul
popf
sub
arpl
mov
fldcw
cs
mov
lahf
mov
pop
push
pop
popa
dec
jle
(bad)
fst
pop
shl
scas
and
jmp
neg
jbe
iret
pop
fmul
stos
adc
dec
cmps
add
mov
(bad)
shr
fadd
cmp
mov
or
pop
and
(bad)
jg
adc
and
int3
dec
mov
(bad)
int
cmps
pop
cmp
xor
mov
xor
or
mov
mov
pop
out
push
iret
fisub
inc
fcmovnbe
adc
fistp
call
fld
scas
inc
out
push
add
iret
dec
lods
adc
std
mov
imul
fnstenv
pop
test
mov
test
push
bound
sub
test
sbb
jl
cmp
pop
mov
sbb
test
jnp
sub
jge
adc
jnp
mov
iret
enter
xor
mov
sahf
(bad)
xor
pop
fmul
push
scas
aad
xchg
push
scas
shl
xchg
mov
fisttp
in
(bad)
es
mov
ins
pop
or
ficom
int
mov
lds
push
pop
out
out
mov
cmps
ds
sub
mov
lods
mov
inc
or
mov
test
cmp
scas
xor
dec
loop
sahf
xlat
sti
push
punpcklwd
pop
adc
mov
scas
xchg
dec
lds
addr16
push
scas
cmps
aaa
scas
jle
sub
pop
int3
xchg
stos
stos
adc
daa
xchg
add
fdivr
out
int3
iret
push
xchg
ror
pop
iret
lahf
pop
ja
ret
push
jp
cmp
jo
mov
scas
mov
scas
mov
dec
adc
ds
add
sbb
push
cmc
sub
mov
ffreep
adc
cdq
add
es
mov
dec
mov
push
out
xchg
sahf
retf
stos
mov
pop
std
dec
ficomp
xor
jp
(bad)
dec
push
lahf
(bad)
int3
div
fldenv
nop
add
jg
lahf
pop
mov
out
scas
ins
dec
imul
or
add
jmp
dec
pop
mov
sbb
outs
mov
dec
lods
pop
pop
(bad)
jae
into
push
sbb
xor
daa
out
dec
fdiv
push
scas
clc
dec
push
push
scas
jle
sub
ror
push
lea
not
int3
lahf
outs
inc
adc
mov
xor
and
outs
stos
call
call
fdivr
ins
mov
xchg
and
add
not
fcomip
cdq
out
out
outs
mov
ds
push
dec
sub
push
pop
outs
out
sahf
(bad)
cdq
lea
jmp
add
cs
ins
aas
in
enter
sbb
iret
stc
jl
lods
sub
pushf
cmp
(bad)
sub
mov
stos
cmps
add
pop
les
stc
xchg
cmp
or
in
das
sbb
arpl
pop
fs
rol
test
aad
inc
loop
xor
outs
mov
into
das
add
cs
(bad)
push
aaa
imul
mov
cs
and
cmps
inc
aas
add
pop
ds
sbb
imul
mov
movs
xor
(bad)
scas
stos
enter
pop
dec
cmp
sub
dec
mov
out
push
(bad)
pop
fild
add
pop
pop
sub
aas
nop
pop
retf
jl
bound
bound
sub
ds
jmp
or
push
add
dec
dec
adc
xchg
in
or
pop
xlat
xchg
(bad)
in
test
jmp
in
call
and
mov
fwait
jg
push
dec
(bad)
cmp
(bad)
std
mov
aas
cmp
mov
mov
sub
int3
out
mov
sahf
fcmovne
mov
add
fimul
mov
ss
mov
out
call
rol
bound
and
in
jae
mov
pop
cld
hlt
jge
js
inc
mov
and
cmp
in
movsx
and
in
inc
jecxz
xchg
ror
(bad)
mov
xchg
outs
cmp
xchg
push
inc
cs
scas
icebp
lds
cmp
inc
movs
(bad)
icebp
xor
test
dec
imul
jl
outs
xor
scas
dec
clc
pop
shr
leave
pop
sti
lods
mov
and
cs
cmps
dec
jle
dec
out
xchg
inc
loopne
sbb
pop
cli
cdq
loop
outs
cmc
outs
mov
das
pop
mov
retf
pop
movs
cmp
jle
les
push
mov
stc
psubd
pop
cli
bndldx
das
fsubr
inc
pop
cmp
aaa
push
add
shr
sbb
std
scas
data16
xchg
ja
xor
scas
push
cs
mov
test
(bad)
pusha
or
pushf
cmps
xchg
mov
mov
inc
cmp
xor
adc
adc
movs
jg
out
jnp
mov
popa
inc
xor
and
jg
mov
fldz
dec
dec
cmp
mov
maskmovq
div
dec
out
mov
arpl
(bad)
imul
mov
jno
cli
mov
pop
or
clc
shl
stc
out
pop
push
inc
inc
es
es
sub
pop
mov
int
movs
adc
lods
scas
jge
adc
jmp
in
dec
pop
loopne
pop
add
mov
loope
push
ins
mov
or
pusha
fldcw
out
pop
pop
xchg
outs
mov
jnp
lahf
ficom
or
push
in
(bad)
or
std
and
je
addr16
or
inc
ror
mov
sti
pop
jns
push
and
cdq
aaa
and
dec
jns
inc
jmp
fwait
add
jecxz
nop
icebp
cdq
mov
and
ins
jg
sbb
imul
mov
mov
jnp
lods
xchg
xchg
(bad)
cmp
xchg
loop
or
mov
(bad)
pusha
cmp
iret
pop
cdq
out
inc
sar
and
(bad)
repz
ret
add
jmp
(bad)
mov
sahf
cmps
adc
cld
into
jg
stos
fistp
inc
lahf
fisttp
mov
jg
mov
sbb
(bad)
jmp
push
fisttp
repz
mov
jno
lds
sbb
jge
lds
fldl2e
neg
fiadd
call
inc
mov
movs
adc
add
mov
dec
js
sbb
aaa
xchg
jno
call
cmp
push
rcl
mov
call
aaa
xchg
jne
repz
inc
mov
cmps
push
jle
sub
jge
out
cld
pop
test
pop
jmp
xor
sub
or
(bad)
xchg
aad
push
das
xor
das
cli
les
sub
adc
fldcw
test
rcl
jmp
faddp
scas
dec
out
cmps
jmp
out
rdtsc
jg
pop
out
(bad)
xchg
aas
icebp
mov
pop
mov
sub
outs
push
fst
sahf
pop
add
sub
ins
pop
jg
pushf
jle
inc
xchg
je
mov
pop
pop
repnz
jl
pop
xchg
pop
fidiv
cmps
in
jno
push
push
lahf
les
icebp
aas
dec
add
das
cmp
cs
push
stos
lahf
jmp
lahf
mov
pop
retf
out
aas
dec
aad
xor
ud1
in
scas
or
cmp
pop
out
ins
or
dec
(bad)
leave
ja
push
sub
jecxz
mov
lahf
sahf
push
into
test
test
test
sbb
dec
imul
(bad)
outs
xcrypt-ofb
cmps
sub
push
out
mov
cmp
cli
outs
fisttp
in
test
mov
dec
enter
mov
pop
or
(bad)
sbb
push
movs
outs
push
outs
out
(bad)
fisttp
mov
fst
int
lmsw
call
sbb
xor
pop
aaa
dec
rcr
xchg
not
jmp
out
pop
dec
movs
push
push
or
inc
adc
cli
adc
pop
mov
mov
sub
(bad)
jno
es
dec
leave
loopne
pop
mov
mov
xchg
mov
add
mov
or
push
dec
movs
rcr
or
iret
pop
daa
mov
ins
dec
js
shl
outs
dec
adc
rol
adc
push
in
push
fdivr
outs
scas
or
test
hlt
fsubrp
mov
shl
iret
or
dec
ss
adc
mov
jge
sbb
(bad)
add
(bad)
(bad)
pop
xchg
(bad)
out
outs
jmp
enter
out
add
gs
and
and
sub
fnsave
and
or
das
xchg
push
fldcw
lea
mov
jl
call
hlt
not
adc
push
pushf
adc
out
inc
sbb
or
sub
popf
cmp
adc
mov
lods
call
pop
dec
xor
add
mov
shl
push
jnp
jbe
shl
test
out
addr16
das
xchg
pop
pop
mov
cwde
add
dec
mov
sub
hlt
jp
sbb
enter
out
cld
dec
inc
pop
cli
cld
push
mov
iret
call
jmp
out
cli
dec
cli
(bad)
fwait
lds
pop
std
dec
dec
jmp
call
sbb
dec
ror
jp
push
xor
std
aas
pop
mov
sbb
leave
pop
fs
sahf
in
aam
cmp
call
nop
jle
mov
and
xor
fstp
cmps
sub
int
out
inc
xchg
scas
neg
aaa
test
outs
retf
aaa
das
sub
mov
inc
ret
outs
(bad)
aad
out
adc
jmp
das
jnp
stos
std
dec
sbb
pop
sub
mov
cld
iret
sbb
cmps
out
fist
in
or
repnz
and
fdiv
stos
sbb
pop
jg
enter
stos
(bad)
sbb
ja
push
sar
fisub
jge
cmp
ret
mov
jo
lds
loope
lods
jp
mov
call
inc
scas
popf
sub
or
xor
les
ror
out
sbb
pop
jb
clc
fistp
fcom
fdivrp
(bad)
icebp
cli
scas
lods
mov
jle
dec
sbb
push
fsubr
inc
ins
into
push
xor
scas
into
sub
imul
mov
out
inc
push
call
push
btr
sahf
jbe
shr
xor
lock
das
adc
ss
test
cmp
outs
jg
popf
in
adc
mov
mov
and
inc
loopne
mov
outs
xchg
pcmpeqw
pop
jo
lock
ror
cwde
lahf
fimul
pushf
into
in
adc
pop
jno
jge
test
addps
scas
(bad)
lods
or
scas
(bad)
fiadd
xchg
(bad)
mov
pushf
jg
rcr
sub
(bad)
loop
fimul
jae
lods
imul
and
dec
xchg
and
cmps
jg
adc
pop
mov
scas
repz
sahf
dec
xchg
mov
aaa
dec
xchg
pop
sbb
ins
cmp
pop
push
and
pop
iret
mov
sbb
or
push
sbb
adc
mov
jmp
test
sub
fwait
cwde
pop
scas
sub
xchg
jb
cmc
pop
sbb
cs
adc
dec
jg
push
cmp
push
sub
or
call
das
je
pop
out
arpl
jne
sub
push
iret
mov
gs
pushf
retf
sahf
mov
mov
scas
je
sahf
daa
lahf
les
out
sbb
in
movsx
shr
adc
dec
dec
fisub
inc
retf
jns
or
aas
ins
fadd
mov
xor
retf
aas
dec
pushf
lods
pop
dec
cmp
lahf
aas
aas
sub
pop
mov
movs
cdq
and
mov
enter
or
jg
dec
jmp
scas
mov
movntq
out
mov
cmc
push
add
cmps
push
outs
xchg
jns
adc
iret
jge
mov
fdiv
ss
sbb
xor
(bad)
cmps
pop
pop
cs
ins
ins
out
(bad)
fidivr
loope
push
ret
add
mov
jg
fnstenv
outs
jg
jb
push
mov
push
xchg
iret
ret
mov
adc
out
cld
pop
mov
scas
dec
imul
nop
cmps
movs
lock
dec
popa
inc
sahf
fisubr
xor
pop
dec
jge
pcmpeqd
fwait
inc
mov
cmp
fild
xor
out
and
fisttp
mov
mov
pop
es
xchg
outs
dec
scas
ficomp
add
mov
int
ja
push
leave
test
or
add
dec
mov
fild
pushf
in
int
inc
fistp
iret
clc
adc
adc
cwde
mov
mov
mov
mov
dec
loopne
popa
mov
push
js
scas
into
pop
mov
push
in
jnp
cld
sub
jmp
sbb
nop
fld
cmp
or
inc
fnstenv
pop
mov
sbb
dec
imul
into
or
mov
xchg
ins
cmp
cli
test
icebp
(bad)
outs
mov
(bad)
(bad)
fdivp
cmp
inc
outs
pminub
adc
mov
mov
xchg
sub
out
push
out
push
mov
fadd
sub
jg
mov
xor
icebp
outs
pop
mov
jg
inc
pushf
push
pop
ds
test
dec
jmp
jnp
mov
aaa
mov
cmp
xor
mov
test
push
ret
scas
fisubr
lahf
fild
sub
cdq
test
aas
adc
imul
xchg
adc
mov
and
push
mov
ja
div
nop
lahf
xor
lods
adc
inc
mov
fisubr
pop
das
cmps
das
adc
fimul
loopne
and
jp
into
movs
inc
stc
and
fimul
(bad)
or
fnstsw
jp
ds
into
mov
mov
in
push
and
mov
cs
cli
into
push
sbb
(bad)
into
shl
cwde
pushf
pop
fwait
aaa
fmul
or
xchg
push
add
ds
pop
xor
mov
fdivr
dec
(bad)
call
imul
in
jg
dec
adc
mov
iret
stos
sub
cmp
sub
add
out
dec
test
pop
outs
nop
lods
icebp
clc
dec
sbb
mov
out
mov
scas
jl
dec
dec
aas
mov
jmp
mov
push
sub
pop
int
imul
in
cmp
mov
pusha
(bad)
jno
mov
jne
cmps
sbb
add
push
sub
lahf
(bad)
dec
or
jmp
mov
sahf
mov
xor
fyl2x
mov
dec
loopne
and
jb
lds
push
pop
repnz
test
das
pop
add
das
fisub
ins
scas
je
fiadd
mov
jle
mov
xchg
and
push
dec
push
cmp
(bad)
mov
leave
movs
iret
fucom
sahf
cmp
mov
jmp
dec
adc
and
call
iret
push
pop
mov
lock
outs
das
sbb
jge
outs
ds
or
popf
(bad)
fidiv
cld
inc
xor
xchg
mov
inc
(bad)
out
cdq
xchg
lahf
xchg
add
enter
js
jo
outs
fwait
ud0
ret
push
cmp
pop
cmp
daa
push
push
outs
mov
xchg
loope
sahf
(bad)
enter
dec
iret
dec
xchg
sub
jle
sub
ror
in
cmc
outs
lds
jbe
movs
mov
iret
enter
mov
lahf
(bad)
out
pop
test
unpckhps
mov
pop
push
pop
rcr
xchg
and
push
xchg
cmp
ins
sti
icebp
lea
out
scas
daa
call
pop
adc
clts
jmp
cmps
mov
add
and
jecxz
mov
in
jg
jge
jecxz
not
xor
pop
mov
dec
retf
adc
jmp
out
iret
or
push
mov
cmps
pusha
pop
(bad)
inc
or
pop
out
aaa
jge
cld
into
pop
mov
xor
fnstcw
inc
adc
cmps
ins
jb
jl
loope
nop
add
add
popf
cmp
cmp
jmp
jl
jle
sub
dec
mul
jmp
in
aas
(bad)
xchg
mov
cmp
sbb
inc
mov
popf
jmp
sti
mov
pop
dec
cmps
xchg
iret
jmp
(bad)
pop
mov
add
mov
fcmovnu
(bad)
pop
or
sbb
pop
jg
inc
sub
xor
fidiv
enter
push
adc
mov
inc
das
stos
mov
scas
xor
push
cmp
mov
pop
push
mov
cs
jae
jg
mov
sbb
sti
cmps
bound
xor
cmp
leave
and
pop
sbb
ins
or
dec
ror
ror
fstp
jmp
sbb
loop
adc
add
scas
imul
das
test
lahf
fst
lods
outs
outs
aad
scas
ss
jle
pop
pop
(bad)
jmp
cmp
push
aas
and
inc
imul
(bad)
popf
iret
dec
xchg
shl
cmovg
mov
popf
sbb
add
popa
mov
rol
mov
dec
cs
push
outs
sbb
aas
adc
ins
and
cmp
retf
mov
cmovle
es
in
xchg
dec
sub
jg
mov
ins
xor
out
fdiv
pop
and
fs
repnz
xchg
daa
aas
dec
jmp
xchg
mov
sahf
(bad)
mov
repz
jne
ja
sub
pop
lods
and
lods
sub
setae
(bad)
mul
daa
out
retf
xchg
ret
into
mov
pop
xor
add
or
mov
(bad)
pop
ins
clc
(bad)
loope
inc
stos
jmp
outs
pop
cmp
adc
adc
cmp
cdq
(bad)
mov
inc
imul
pop
cmp
popf
jmp
je
xor
and
lods
cmp
jle
sbb
adc
dec
jae
fisttp
dec
dec
repnz
or
out
fdiv
mov
and
(bad)
pop
mov
cmp
dec
arpl
outs
mov
mov
mov
sbb
push
in
pop
cli
fstcw
xchg
(bad)
pop
imul
jp
xchg
cs
mov
mov
cmc
mov
lea
aaa
push
mov
jns
push
push
dec
cmp
neg
or
sti
dec
sahf
push
push
ds
xchg
mov
arpl
cmp
mov
pop
sub
fcomi
mov
mov
loopne
movs
rcr
dec
dec
jmp
jge
mov
xchg
pop
lock
lea
inc
sbb
into
jle
lods
adc
outs
outs
pop
repnz
add
loop
sbb
push
ss
jns
push
addr16
jno
mov
movs
scas
ror
scas
dec
pop
push
fucomip
rol
outs
add
mov
fadd
mov
outs
les
add
fs
das
sbb
div
sub
sar
(bad)
xlat
pushf
fwait
cld
sbb
dec
dec
iret
rcl
jg
dec
jg
push
push
leave
outs
nop
sbb
aam
movs
jmp
ds
out
jle
aad
jl
hlt
pop
push
or
and
sbb
pop
xchg
mov
sti
sub
leave
bound
pop
pop
sub
dec
adc
fs
mov
inc
mov
adc
cmp
and
push
popf
push
ds
pop
movs
jmp
not
mov
xchg
push
movq
dec
ret
enter
mov
inc
scas
(bad)
fcomi
jmp
not
(bad)
mov
div
jp
pop
jb
retf
adc
jecxz
and
pop
jne
mov
or
xor
movs
cmp
jnp
push
push
aas
(bad)
adc
jmp
sub
jns
sub
mov
mov
sub
jbe
mov
mov
mov
(bad)
jle
je
(bad)
scas
or
sub
(bad)
sbb
fsub
mov
in
mov
and
xchg
(bad)
dec
retf
inc
mov
movs
sub
pop
push
arpl
xchg
and
outs
add
dec
or
inc
and
mov
lock
(bad)
jb
and
xchg
pop
cmp
imul
inc
jne
out
mov
icebp
jp
sbb
popa
aam
popf
adc
cdq
mov
mov
xlat
mov
xor
(bad)
ins
add
stos
fisttp
lds
sub
shl
cmp
xor
std
sbb
loope
call
fwait
pop
or
rcr
leave
sub
dec
cmc
mov
inc
adc
and
mov
cld
fs
jne
inc
jmp
xor
xchg
(bad)
mov
repz
daa
ret
jecxz
ja
fwait
mov
(bad)
outs
xchg
inc
movs
clc
jbe
jg
pop
nop
or
pop
mov
cmp
loopne
neg
or
cmps
cmp
pop
mov
sbb
sbb
and
pusha
and
ins
dec
imul
mov
and
cs
scas
xchg
lahf
push
mov
(bad)
getsec
stos
in
mov
sub
jb
jne
and
pop
add
xchg
mov
mov
loop
sbb
fdivr
mov
cmp
in
fwait
in
push
jmp
inc
movs
icebp
sub
push
ja
jp
cmc
or
or
jbe
das
int
adc
mov
(bad)
out
push
xchg
mov
subps
test
jle
adc
dec
jecxz
inc
push
push
mov
mov
fdivr
adc
sbb
fcmovnbe
push
push
jns
mov
adc
xor
push
rcl
xlat
pop
rol
lods
inc
jmp
dec
adc
sub
sub
pop
scas
push
mov
mov
(bad)
pushf
into
mov
pop
dec
out
mov
xchg
hlt
mov
loop
ins
daa
pop
jnp
hlt
test
cmc
sar
test
(bad)
ins
ins
or
jg
push
ins
movnti
jns
fistp
push
sbb
ins
(bad)
lahf
ja
cmp
jecxz
inc
push
mov
out
rep
cmps
aaa
ins
sub
push
jp
or
and
jmp
push
xlat
dec
shl
push
or
mov
sbb
inc
mov
nop
bound
pop
scas
or
jle
data16
scas
out
dec
mov
call
iret
(bad)
or
sub
rcr
loop
mov
mov
mov
into
sbb
push
mov
fwait
jae
dec
xlat
retf
push
jp
dec
sahf
in
hlt
and
arpl
fistp
or
or
pop
push
inc
das
sbb
das
mov
out
xor
movs
in
ret
mov
mov
adc
lds
and
cmps
outs
shl
cmc
xor
jo
fcomp
scas
addr16
es
das
mov
sub
lds
push
adc
inc
cs
fsub
and
add
lahf
pop
push
or
mov
inc
mov
pop
ins
mov
adc
sub
aaa
mov
outs
adc
fs
xchg
je
repz
outs
sub
jno
mov
mov
jno
pop
dec
scas
bswap
push
adc
stos
adc
in
in
jg
xor
dec
aas
mov
mov
mov
dec
sbb
fidiv
ins
pop
out
mov
std
jno
xlat
mov
cwde
iret
pushf
(bad)
xor
popf
dec
and
mov
pop
jmp
pop
mov
popf
out
stos
cmp
stos
sub
pop
sbb
pop
jg
push
setg
cdq
loopne
sub
jle
aam
cmp
jns
sub
cs
sub
mov
fmul
jno
ftst
rol
loope
(bad)
test
sbb
or
fwait
test
movs
ja
jnp
sub
test
test
stos
iret
cdq
cdq
mov
(bad)
mov
dec
add
pop
inc
leave
sub
jmp
popa
test
lahf
pushf
inc
or
popa
add
push
mov
dec
mov
fcmove
cmps
sti
dec
gs
es
dec
mov
add
and
pop
or
pushf
scas
jmp
adc
mov
cmps
addr16
pop
test
scas
pop
shr
stos
pop
test
ret
mov
stos
scas
sbb
stos
pop
inc
(bad)
dec
pop
sbb
pop
cmp
mov
mov
or
pop
adc
mov
pop
pop
cmp
push
sub
outs
dec
test
fmulp
push
stc
aad
pop
cld
mov
movsx
push
push
jg
sbb
mov
mov
fdiv
dec
hlt
mov
cmp
cmp
imul
lods
cmp
imul
jle
(bad)
fisttp
dec
mov
dec
dec
xor
dec
dec
mov
imul
mov
pop
int
fdivr
scas
sbb
fwait
popfw
pop
jp
iret
nop
pop
jg
dec
bound
push
sbb
adc
mulps
mov
rol
sub
(bad)
cmp
(bad)
or
movs
cmp
xchg
or
pop
or
or
push
mov
cmps
jmp
mov
push
mov
rcl
push
popa
fimul
paddsw
lahf
int
inc
das
ins
mov
hlt
jecxz
imul
je
sbb
mov
in
xlat
dec
sbb
cmc
gs
hlt
sbb
test
adc
dec
mov
sbb
sub
ficom
fwait
mov
(bad)
idiv
int
mov
add
pop
mov
dec
sub
stos
push
dec
push
pushf
and
mov
aas
daa
(bad)
loope
cmps
dec
lahf
lods
ja
(bad)
add
stc
cmps
fistp
jmp
or
sbb
or
jge
dec
sub
fst
outs
bound
cmp
pop
in
or
fimul
cmp
fnstcw
std
ss
imul
paddw
dec
aas
sbb
pushf
(bad)
dec
ins
xor
(bad)
arpl
std
sbb
inc
jg
cmc
cmp
fstp
hlt
js
(bad)
(bad)
pop
outs
loop
pop
adc
(bad)
inc
add
mov
jo
mov
sub
and
cld
arpl
pop
jg
outs
xor
in
popf
ret
push
int
sbb
xor
das
movs
mov
dec
mov
dec
cmp
ja
pop
aaa
xor
in
mov
outs
dec
or
adc
xchg
or
inc
sbb
adc
adc
add
rcl
xchg
pop
stos
test
mov
popa
push
movs
jecxz
scas
pop
adc
jnp
fiadd
add
(bad)
icebp
out
lods
add
jbe
and
inc
sub
inc
int3
(bad)
std
cs
or
ins
out
ret
jmp
in
cld
xchg
call
add
cmp
aas
pop
push
arpl
pop
in
and
mov
xlat
fild
mov
fisttp
fwait
out
outs
pop
ins
cwde
(bad)
inc
adc
out
repz
and
dec
ja
jae
loopne
cdq
pop
and
cmp
cli
push
cwde
and
or
stos
lahf
pop
inc
pushf
dec
push
xchg
push
cmp
sbb
lock
jp
idiv
out
cmp
jmp
dec
dec
ret
scas
call
xlat
xchg
push
ins
pop
fisttp
out
(bad)
repnz
test
mov
cmps
test
lahf
nop
jno
js
out
adc
sub
fcom
jp
push
jo
aad
jmp
or
daa
dec
aam
ins
pop
enter
dec
(bad)
mov
ror
repnz
movs
mov
add
jl
retf
or
ins
sub
fist
cmps
or
test
outs
inc
cmp
cmps
or
and
xchg
dec
pop
dec
cmp
(bad)
in
aas
sub
xchg
test
mov
xchg
outs
(bad)
mov
jno
(bad)
loop
xchg
mov
call
add
mov
(bad)
cmp
mov
lahf
mov
mov
jmp
fbstp
arpl
xchg
int3
fisttp
das
test
aaa
repnz
dec
add
jb
fdiv
mov
add
add
pop
add
inc
ret
cmp
dec
movs
dec
add
sbb
push
fild
aam
push
mov
test
in
dec
xlat
les
(bad)
adc
dec
lods
cmp
retf
push
dec
sti
cmc
(bad)
aad
fild
adc
mov
dec
adc
popa
loop
addr16
inc
jmp
lods
scas
test
out
add
sbb
add
popa
cs
jns
pmaxub
mov
pop
aas
ja
adc
cmp
in
into
jge
repz
mov
or
mov
and
pop
push
dec
xor
rol
adc
jecxz
gs
(bad)
sti
pop
popf
mov
shr
imul
cmp
rcl
cmp
in
mov
fsubrp
aaa
aad
enter
push
mov
cwde
dec
outs
pop
sub
and
pop
neg
mov
xchg
out
cmp
das
dec
ins
imul
xor
(bad)
xchg
pop
pop
aas
inc
mov
retf
push
mov
(bad)
scas
(bad)
ror
or
push
mov
xchg
addr16
shl
stos
lds
push
out
call
inc
pop
fwait
pop
inc
sbb
or
je
lods
in
mov
fmul
cmps
cmps
into
push
out
and
cs
pop
jp
add
lea
xchg
into
mov
xor
in
test
aaa
dec
dec
add
sub
shl
or
fcom
ds
xchg
or
sbb
jne
jo
out
shr
sub
(bad)
jg
jecxz
repz
(bad)
push
out
stos
pusha
mov
xor
push
pop
bswap
or
dec
mov
dec
pop
or
(bad)
mov
sub
aam
sub
icebp
(bad)
aam
or
pop
sar
je
push
mov
test
jl
xor
lahf
pop
adc
jecxz
or
pop
jmpw
cmp
loope
fld
sbb
ins
std
fistp
les
sbb
retf
stos
xchg
inc
int
push
jbe
mov
push
pop
fistp
push
mov
dec
in
in
enter
pushf
out
or
(bad)
shr
pop
pop
test
iret
add
mov
and
or
jmp
movs
pop
cmp
inc
dec
hlt
psrad
mov
mov
aaa
fldcw
sub
rol
test
das
lahf
sbb
pop
pop
fucomip
in
jns
adc
leave
mov
pop
inc
fdivr
jle
fst
sub
add
retf
scas
jl
jge
fisttp
sub
jp
jg
scas
jge
mov
cmp
ror
pop
mov
dec
(bad)
xor
cdq
sub
lahf
ins
out
test
push
jmp
jmp
out
std
je
xor
push
and
or
or
into
pop
out
jne
ins
push
xor
in
mov
mul
sar
cmp
dec
and
addr16
in
into
scas
shr
sub
fnstsw
xor
dec
cmp
mov
mov
xor
daa
ret
loope
movs
pop
inc
ds
shl
cmp
out
inc
push
je
bound
es
add
mov
mov
mov
mov
pop
sub
mov
mov
fcomip
iret
nop
int3
mov
mov
dec
scas
lock
and
mov
lds
fcmovnbe
push
call
sbb
je
aas
pop
push
xor
dec
pop
(bad)
mov
mov
(bad)
sbb
mov
fs
arpl
rcl
lea
(bad)
movs
lds
xchg
test
hlt
movs
jl
sub
faddp
outs
push
dec
sub
(bad)
in
add
or
xor
jns
push
repz
gs
loopne
ins
std
ja
pop
(bad)
(bad)
rol
xchg
mov
dec
test
adc
xchg
fst
sbb
mov
cmps
pop
lahf
or
ss
or
cmps
(bad)
ficomp
mov
ret
pop
mov
mov
retf
lods
or
inc
imul
dec
pop
lea
iret
mov
jp
dec
adc
add
out
outs
or
fild
adc
inc
aaa
or
test
in
or
rcl
int
es
dec
(bad)
sbb
iret
sub
test
fcom
mov
pop
sbb
sub
stos
repnz
mov
sahf
dec
inc
ds
push
js
xchg
adc
cmps
pusha
fldcw
inc
or
out
popf
aas
xchg
test
popf
scas
mov
dec
cmp
aas
(bad)
stc
push
and
sbb
inc
stc
icebp
mov
jl
mov
(bad)
jmp
add
or
leave
das
nop
xchg
sahf
mov
push
mov
call
xor
fisubr
dec
mov
mov
cmps
sahf
shl
sub
test
xchg
into
pop
xchg
mov
xchg
lea
inc
mov
or
sbb
cmp
add
scas
ins
sbb
outs
sub
inc
scas
mov
(bad)
pop
pop
or
or
fisttp
bound
pop
in
sub
and
cdq
fidivr
(bad)
repnz
xchg
not
jg
(bad)
ficomp
or
pop
sub
(bad)
dec
pop
scas
out
pop
ffreep
cmp
test
gs
jl
das
sub
pshufw
push
pop
push
movs
std
call
dec
sub
add
(bad)
addr16
repz
push
out
clc
aaa
adc
sti
jg
jne
sbb
std
or
add
ret
mov
push
scas
mov
sbb
mov
lods
xchg
dec
in
pop
inc
and
or
jle
ins
jb
retf
dec
or
enter
fdivr
repz
pop
pop
popa
jle
scas
stos
shr
or
call
jle
cmp
sahf
inc
ss
(bad)
in
mov
call
out
inc
cli
dec
(bad)
and
(bad)
fcmovne
xchg
sbb
ret
test
sub
push
add
dec
dec
das
inc
xor
scas
push
(bad)
and
or
loop
sahf
inc
popf
lock
pop
fild
dec
repnz
cdq
and
(bad)
in
sbb
out
sub
iret
test
out
out
or
loope
pop
dec
adc
mov
ins
mov
pop
daa
sbb
mov
data16
fcmovu
test
dec
lods
adc
outs
xchg
dec
dec
nop
call
jp
das
push
mov
mov
pushf
sahf
test
mov
(bad)
sbb
inc
loope
sub
out
mov
mov
lea
ficom
sub
xor
jg
shl
sahf
sbb
and
aaa
call
clc
lods
outs
(bad)
call
jo
pop
adc
test
leave
retf
jle
jp
imul
daa
mov
pusha
pop
jecxz
mov
xchg
int
inc
popa
xchg
jmp
ror
stos
push
fwait
out
dec
push
stos
dec
mov
push
ins
and
outs
or
sub
ins
and
repnz
sub
arpl
les
dec
mov
mov
aam
(bad)
cmps
sti
(bad)
lea
pop
cwde
fucomi
push
loopne
in
test
jg
or
pop
sbb
mov
inc
pop
js
dec
pop
(bad)
sahf
iret
mov
fistp
aas
lods
pop
jmp
mov
or
mov
add
fs
stos
sub
jns
std
jl
(bad)
jno
fistp
nop
out
sar
pop
movs
(bad)
lods
pushf
test
pop
out
aas
xor
and
pop
sti
lods
js
push
push
mov
repnz
fistp
jmp
fistp
xchg
lahf
cmp
push
aas
push
cmp
mov
push
leave
push
scas
fsubr
ret
lahf
fcomip
call
xor
inc
or
in
inc
sub
mov
or
mov
jae
inc
cmp
dec
jb
popa
ds
pop
hlt
aam
mov
jne
mov
or
pop
mov
add
cmps
cs
mov
push
test
jl
in
fwait
xchg
xchg
out
aam
add
scas
adc
push
cdq
cs
inc
cmc
xor
mov
shl
mov
inc
sbb
pop
imul
(bad)
icebp
adc
ret
sar
dec
cld
cli
pop
imul
hlt
inc
loop
fmulp
jle
bswap
sahf
loope
fwait
ror
call
pushf
imul
in
aad
iret
mov
adc
add
jg
sbb
cmp
imul
xor
or
xchg
sub
nop
dec
dec
mov
jp
or
inc
mov
ins
jg
xor
lahf
jle
into
xlat
dec
in
push
lock
pop
push
popa
das
hlt
mov
sbb
mov
lock
(bad)
mov
mov
or
out
dec
dec
dec
mov
(bad)
aaa
add
jg
xchg
aaa
cmc
fsubrp
pop
xchg
das
retf
loopne
dec
mov
mov
jae
call
inc
mov
xchg
sbb
push
les
dec
add
mov
nop
lea
jle
mov
(bad)
ds
jg
pop
mov
aas
dec
jp
push
mov
pop
adc
and
pop
pop
inc
adc
inc
or
xor
(bad)
stc
retf
imul
cmp
mov
push
lahf
pop
in
mov
dec
aaa
outs
ret
cdq
iret
cs
(bad)
mov
jmp
lahf
adc
pop
pop
repnz
adc
aam
aas
and
or
mov
add
sbb
or
jge
jns
leave
movs
pop
push
cmps
inc
outs
adc
pop
xchg
scas
retf
jge
mov
push
call
sbb
push
cmp
pop
out
xchg
pop
outs
mov
or
(bad)
jmp
add
add
dec
pop
sbb
jb
out
dec
aam
mov
jno
cmp
test
popa
jg
(bad)
xor
icebp
mov
push
or
scas
fucomi
pop
fcom
mov
xor
cmps
and
(bad)
mov
pop
add
dec
cs
retf
pop
in
push
push
imul
iret
push
mov
pop
loop
mov
int
retf
xchg
sbb
pusha
xor
fwait
retf
sub
add
push
std
sbb
aaa
cmps
inc
push
and
ds
stos
inc
daa
pop
mov
sbb
push
xchg
int
cmp
std
lahf
sti
mov
push
leave
cmp
scas
mov
dec
adc
pop
jo
lods
or
mov
adc
shl
mov
repnz
dec
mov
cli
mov
fdiv
(bad)
das
pop
lea
test
xchg
xchg
pusha
mov
dec
scas
dec
lods
dec
in
sbb
jg
fsubr
test
mov
in
xor
rcr
push
mov
push
sub
int
sub
inc
mov
adc
das
mov
jnp
add
pop
icebp
jmp
jae
push
sar
ins
cmp
sahf
mov
aaa
sar
test
jle
mov
dec
sub
add
lock
sbb
rcl
pop
cli
mov
scas
xlat
fbstp
pop
cmp
(bad)
jns
pop
xor
jle
in
cld
xor
retf
mov
ud0
jne
ins
ins
lods
scas
(bad)
cdq
lahf
leave
pextrw
loopne
xor
sti
pop
xor
dec
fbld
cmp
test
or
addr16
push
dec
lahf
es
arpl
fwait
imul
jle
loope
rcr
or
lods
hlt
push
mov
push
mov
mov
jg
mov
cmp
sub
enter
or
test
mov
jo
sahf
cmp
pop
cmp
shr
dec
cmp
in
ins
pop
movs
das
stc
pop
fucomip
mov
jg
dec
jae
add
daa
inc
and
push
mov
stos
dec
std
and
sub
inc
adc
shl
mov
pop
dec
push
mov
or
jl
movs
mov
test
jmp
mov
add
and
mov
jle
xor
(bad)
mov
push
mov
pop
ins
cmps
pop
enter
push
pop
jb
pop
xchg
out
pop
lds
xchg
xchg
inc
jmp
adc
push
adc
clc
push
stos
outs
sub
in
in
arpl
iret
fdivr
mov
outs
call
or
movs
pop
in
loopne
jle
pushf
ret
inc
retf
pop
je
mov
add
and
jg
cmp
sub
imul
aas
lea
sti
mov
out
sbb
mov
add
iret
add
retf
sahf
fimul
mov
je
cdq
call
(bad)
cmp
mov
sar
and
fild
je
add
sbb
sbb
mov
scas
out
lahf
or
fwait
push
scas
mov
inc
mov
cs
mov
rol
mov
in
jecxz
mov
je
ins
push
int
lea
sbb
popa
scas
fwait
bound
push
dec
cmp
adc
push
pop
adc
jg
std
sub
das
and
sub
mov
shr
mov
sbb
in
mov
dec
sub
push
and
stos
push
ins
scas
push
fld
inc
jmp
jns
adc
cs
push
xchg
(bad)
fild
mov
ins
pushf
or
mov
ds
imul
pop
and
sbb
or
pop
mov
jno
xlat
(bad)
pop
add
aaa
sbb
sbb
pop
stc
xchg
sar
mov
out
ins
dec
mov
rcl
outs
jns
jecxz
push
ds
test
(bad)
sbb
sbb
mov
and
pop
outs
adc
push
dec
pop
icebp
jbe
fstp
pop
push
pop
movs
out
stc
xor
inc
jp
outs
das
rcl
out
or
push
ret
call
jge
pop
das
setle
inc
addr16
pop
fneni(8087
test
cmp
jmp
test
add
jb
ficom
adc
out
sar
aaa
leave
in
add
pop
pop
adc
sub
jecxz
sbb
das
imul
stc
cmc
cmp
jns
inc
icebp
(bad)
adc
arpl
retf
and
retf
into
stos
mov
jno
iret
clc
mov
sbb
dec
jg
dec
mov
aas
push
xor
setp
call
jae
or
xor
pushf
outs
aas
(bad)
xor
cdq
push
iret
inc
mov
cdq
movs
inc
jne
jo
out
xchg
ins
jb
iret
outs
pop
out
aas
xchg
inc
and
iret
add
rcl
mov
jae
ins
cmp
pop
sbb
pusha
int
int3
pop
out
and
retf
scas
push
outs
jns
push
aas
jnp
push
dec
scas
inc
aad
ss
rcl
test
sub
retf
mov
mov
push
adc
pop
push
dec
xor
sahf
inc
pavgw
(bad)
setle
in
mov
fmul
leave
hlt
inc
cs
call
mov
clc
add
pushf
gs
mov
div
pop
scas
cmp
mov
repnz
xor
cs
das
dec
mov
repz
ror
(bad)
icebp
sbb
sub
sar
mov
mov
shr
mov
cmc
lea
and
(bad)
pop
ds
inc
scas
fdiv
push
popa
imul
mov
outs
mov
scas
adc
scas
das
fs
jns
aas
jb
adc
scas
dec
call
repnz
jmp
ds
mov
loop
call
(bad)
fsub
out
push
jp
test
icebp
lea
fild
add
inc
inc
imul
ins
popf
cmc
int3
and
add
mov
lahf
mov
ins
jo
ins
repnz
div
call
int
jae
dec
fcomp
test
cmp
inc
cmp
imul
fisub
test
mov
mov
push
inc
xchg
into
jno
jge
dec
stos
cmp
outs
das
push
adc
or
fisttp
mov
pop
inc
std
jo
adc
stos
jae
in
aas
sub
int
in
das
scas
push
sbb
mov
(bad)
(bad)
sbb
adc
sbb
lea
pop
leave
sar
daa
pop
rcr
ficom
sahf
sub
test
lahf
not
pop
mov
add
pop
sahf
dec
or
pop
mov
adc
not
loope
xchg
es
es
ins
dec
mov
pop
inc
mov
xchg
call
fisubr
fadd
adc
pop
fdiv
jmp
lock
(bad)
iret
retf
push
fs
repz
sti
cmp
jp
das
xchg
pop
pop
leave
fs
(bad)
mov
jno
mov
(bad)
jl
stc
out
mov
out
addr16
stos
dec
push
js
cmp
lahf
outs
dec
cld
popa
out
aam
dec
jnp
pop
pop
xor
ss
xor
arpl
aas
ja
enter
out
out
(bad)
out
(bad)
fcmovnu
and
icebp
loopne
outs
jg
in
ficom
scas
cdq
sbb
sbb
out
ror
cmc
jmp
pop
xor
int
jnp
das
mov
mov
nop
fist
jbe
out
sbb
xchg
aad
pop
mov
sbb
adc
cmp
int
call
cdq
fucom
daa
loope
rol
push
in
inc
jle
pop
dec
adc
(bad)
stc
outs
add
sbb
fdiv
inc
movs
pop
cmp
pop
dec
sbb
xchg
ins
sub
push
inc
or
dec
shl
icebp
(bad)
adc
and
mov
xchg
jmp
sti
in
push
mov
shr
xor
mov
dec
sub
movs
xor
outs
imul
dec
repz
ret
jnp
pop
sbb
not
imul
xchg
cld
pop
sbb
mul
sbb
add
and
sbb
or
cmps
and
imul
imul
int
inc
ja
mov
lahf
jnp
pop
pop
in
jmp
dec
aas
int3
inc
fadd
or
cmps
xchg
sub
sub
out
jno
adc
repz
leave
sahf
dec
iret
pusha
stos
dec
mov
arpl
sbb
(bad)
pop
dec
out
sub
out
out
(bad)
jmp
xor
into
or
jmp
jp
iret
xor
dec
in
lea
retf
xchg
inc
pop
outs
into
out
xchg
loope
mov
push
cmc
stos
stos
fnsave
inc
es
(bad)
cmps
mov
retf
jno
jo
mov
or
cmp
pop
sub
out
xchg
pop
xchg
cmp
retf
test
jg
xlat
fs
push
int
(bad)
ins
xor
rcr
out
arpl
movsx
jmp
cmp
push
mov
dec
jno
mov
sub
enter
xadd
in
push
fmul
int
push
dec
lahf
add
and
inc
xor
imul
call
inc
(bad)
rcr
scas
push
aaa
gs
jge
repnz
and
mov
sub
sub
mov
int3
or
jnp
int
out
in
mov
iret
fcomi
in
pop
mov
out
inc
dec
lods
cmp
fs
retf
into
es
ins
adc
clc
outs
pop
inc
jne
lea
mov
sti
jmp
pop
adc
jg
test
test
inc
xlat
sub
outs
push
(bad)
xor
jle
sbb
or
ret
mov
sahf
out
fwait
and
sahf
sti
adc
pop
pop
imul
pop
jge
(bad)
scas
lahf
icebp
out
call
fadd
jg
pop
jg
cmp
ins
or
aas
scas
pop
call
xchg
stc
and
mov
pop
in
jg
sbb
fdiv
bswap
clc
iret
sub
xchg
dec
mov
mov
popf
add
jbe
mov
repz
dec
lds
fprem
pop
aad
dec
inc
stos
cmp
dec
call
sub
cmps
pop
jg
imul
out
fidivr
xchg
cdq
aaa
faddp
mov
inc
cmp
inc
sbb
das
inc
mov
sbb
clc
push
xchg
mov
out
stos
test
cmps
push
pop
(bad)
mov
pop
idiv
sub
shr
push
popa
repz
mov
lods
pop
xor
scas
ret
sbb
dec
inc
aas
sbb
cdq
sbb
ins
xchg
adc
inc
mov
push
lahf
pop
ss
mov
inc
lea
(bad)
xchg
inc
iret
(bad)
sahf
shr
xchg
gs
add
addr16
aas
cmps
inc
pop
jl
pop
iret
cdq
and
push
or
or
push
mov
ror
push
pop
and
movlps
cmps
or
or
std
dec
retf
daa
sbb
lods
sub
pop
test
adc
in
stos
mov
mov
lods
fcomp
pop
cmp
mov
sahf
xchg
in
inc
(bad)
repnz
scas
mov
pop
outs
mov
push
stc
bswap
inc
xlat
sti
daa
sbb
ss
adc
xchg
into
hlt
outs
mov
outs
mov
push
add
mov
add
xchg
xor
sbb
xchg
and
cs
xchg
out
daa
je
repz
push
jmp
fisub
fistp
jmp
in
push
push
ja
in
mov
popa
(bad)
fdivr
adc
scas
scas
popf
dec
dec
rol
out
dec
mov
jl
dec
push
pop
daa
ds
iret
in
fisttp
loopne
fisub
out
adc
rol
lods
iret
push
aam
sbb
dec
mov
ins
xchg
out
pop
into
sbb
std
cmp
add
jg
jge
scas
jle
pop
fs
pop
lock
stos
pushf
loope
fisttp
or
dec
ins
jg
ds
out
fcomp
js
cli
call
pop
lds
mov
sbb
dec
cmc
sbb
pop
sbb
in
scas
xor
popf
or
out
stos
sub
mov
add
sbb
mov
sbb
(bad)
cmp
cmp
and
add
sbb
dec
dec
and
call
mov
icebp
outs
mov
adc
mov
adc
sbb
(bad)
push
iret
push
add
pop
inc
in
mov
repz
push
inc
inc
call
push
cli
xchg
cmc
fcomip
test
mov
push
jg
mov
loope
pop
mov
hlt
ds
fnstsw
pop
(bad)
daa
sbb
int
lahf
jo
jbe
push
add
andps
jno
outs
scas
mov
mov
int3
pop
add
test
in
dec
ins
dec
outs
test
sbb
repnz
ja
iret
mov
inc
outs
ja
shr
jmp
cwde
pop
push
sub
call
pop
loope
in
cs
dec
push
fsub
adc
shr
jnp
pushf
fnstcw
je
xchg
push
lock
cmc
add
paddw
inc
and
add
jne
jnp
outs
jecxz
loopne
(bad)
std
sahf
add
scas
cwde
(bad)
sbb
mov
xchg
push
sbb
xor
sbb
mov
loopne
xor
ins
pop
mov
das
scas
ror
outs
fucomi
lsl
cld
pop
arpl
stos
out
test
mov
std
push
push
push
sub
push
sti
pop
jmp
push
outs
push
std
fsubp
mov
cdq
pop
lods
rol
mov
das
push
push
out
pop
dec
das
jmp
scas
inc
neg
(bad)
scas
xchg
pop
call
cs
int3
or
daa
xor
(bad)
push
mov
outs
xchg
mov
pop
data16
dec
inc
sti
pop
mov
inc
dec
lea
push
pop
cmp
or
retf
scas
mov
test
mov
add
jmp
mov
dec
js
pop
add
push
jmp
int
fdivr
mov
ins
scas
pop
mov
popa
daa
add
fistp
pop
mov
cmc
outs
dec
jp
sub
adc
cld
sbb
iret
popf
dec
mov
scas
mov
dec
mov
pop
cs
fnsave
inc
aam
test
sbb
ins
ja
lahf
cmp
push
aas
lock
call
xchg
mov
(bad)
pop
outs
cli
imul
jnp
sbb
jae
xchg
mov
clc
dec
das
cli
dec
fwait
mov
stos
inc
aaa
cld
dec
dec
shr
call
dec
xchg
sbb
xchg
mov
into
ds
pop
jp
aam
push
dec
and
addr16
inc
pusha
(bad)
sub
pop
scas
jmp
das
popf
rcr
inc
jp
lahf
in
adc
lahf
mov
js
pop
or
mov
sub
pop
in
mov
xchg
arpl
dec
pop
pop
adc
rcl
dec
jb
scas
mov
dec
cmp
popa
pop
sbb
(bad)
sbb
pusha
aam
retf
das
add
cli
inc
push
inc
test
jle
into
jb
cmps
(bad)
pop
inc
test
mov
retf
mov
add
imul
ds
nop
nop
adc
jle
xchg
daa
adc
dec
dec
jne
(bad)
out
dec
int3
cmps
and
ins
mov
mov
inc
(bad)
aam
into
xor
and
cld
pusha
(bad)
jl
call
mov
lahf
mov
xchg
sbb
lock
std
cld
pusha
dec
cwde
pop
dec
inc
imul
nop
dec
sub
retf
ret
fs
stc
pop
pusha
inc
jne
mov
xchg
mov
pop
sbb
(bad)
and
outs
sub
xchg
jge
cli
inc
sti
aaa
pop
(bad)
popa
mov
jnp
in
xchg
inc
in
int
sub
mov
sbb
(bad)
cmp
lods
stos
inc
xor
add
fwait
outs
lods
mov
cmp
pop
in
test
outs
out
ins
rcl
into
sub
dec
scas
call
jp
shl
push
xchg
xchg
dec
pop
jle
jnp
inc
cmp
pop
ja
sar
int3
adc
out
mov
lahf
out
mov
(bad)
scas
jg
hlt
cmp
lahf
pop
fisub
mov
jbe
iret
sbb
pop
int
and
cmps
imul
jg
push
mov
fwait
scas
dec
pop
add
mov
push
lahf
pop
xchg
jne
or
sahf
stc
mov
xchg
call
mov
xor
hlt
pop
adc
fcomip
mov
inc
in
mov
es
pop
mov
das
test
dec
call
fisttp
into
jnp
jae
pop
icebp
mov
retf
jmp
jge
imul
sbb
mov
fist
scas
lahf
popf
or
mov
and
push
scas
outs
call
mov
jno
mov
push
das
sbb
sub
mov
add
xor
mov
jmp
push
stc
inc
call
push
jg
daa
fsubr
cmc
sub
out
inc
imul
xor
mov
cli
push
ds
ficomp
xchg
inc
stos
or
ins
test
jo
out
push
inc
imul
mov
mov
jb
inc
icebp
dec
ins
loopne
mov
mov
lds
int
lea
test
rcr
aaa
xor
add
jle
outs
das
invd
scas
mov
scas
xchg
jmp
sbb
xlat
ds
(bad)
inc
aas
rcl
jne
test
xor
jmp
int
out
adc
clc
leave
push
sbb
test
mov
jg
cdq
dec
jge
les
popf
or
loope
pop
inc
fsubrp
mul
dec
pushf
jmp
dec
rol
sub
push
adc
jle
dec
(bad)
out
or
das
shr
push
fisttp
cmp
mov
popa
mov
out
addr16
test
dec
inc
(bad)
ficom
pop
(bad)
fwait
je
jl
pop
jg
push
xor
sahf
xor
xlat
scas
(bad)
popa
pop
inc
fist
sahf
in
add
xchg
push
sub
or
mov
(bad)
fmul
iret
mov
inc
sbb
sub
popa
jmp
into
lock
cmp
lea
jg
nop
scas
fld
mov
cmps
aas
add
lods
xchg
ins
ss
xchg
jg
jg
iret
fisub
jg
adc
bt
dec
sub
and
push
push
(bad)
sbb
cwde
mov
mov
sbb
cmp
jg
pop
or
mov
(bad)
jle
in
sbb
call
mov
and
iret
das
call
aas
jo
test
cs
sub
ficom
stos
stc
test
retf
jns
xchg
out
cdq
fistp
mov
das
arpl
mov
(bad)
xor
mov
or
xlat
in
out
out
xor
into
pop
pushf
rol
(bad)
mul
mov
push
repnz
out
cld
xor
pop
xchg
or
in
dec
mov
out
push
dec
in
das
dec
fistp
cmp
out
es
jb
push
push
cmp
popa
imul
loop
cs
inc
dec
ins
rcl
fwait
ins
push
mov
repz
out
sub
loopne
pop
outs
pop
mov
dec
jmp
lahf
aaa
(bad)
fucomip
cmovns
dec
add
cmp
daa
xor
sbb
out
xchg
pmaxub
dec
mov
sbb
(bad)
retf
nop
std
inc
retf
mov
xchg
lahf
test
push
xchg
mov
das
fimul
outs
stc
outs
mov
jp
sete
icebp
repz
(bad)
iret
into
jns
fs
retf
popf
add
sub
add
(bad)
push
(bad)
cmp
inc
retf
cmp
outs
add
mov
or
(bad)
mov
pop
xor
xchg
loope
cmp
push
iret
aas
pop
cmp
dec
cli
movntps
in
(bad)
enter
sahf
jg
push
push
push
stc
imul
iret
inc
jg
xchg
or
frstor
mov
sbb
retf
fstp
outs
sub
jmp
fimul
lock
mov
pop
out
adc
mov
add
jl
imul
push
push
cmp
cli
cli
dec
jge
sbb
pop
add
push
cs
idiv
daa
les
sub
div
je
retf
icebp
or
scas
adc
sti
(bad)
jmp
sahf
pusha
fdivr
(bad)
lahf
adc
sub
pop
fist
mov
scas
neg
jnp
xchg
push
aas
ins
pop
push
retf
inc
inc
js
out
cmp
pushf
cmp
mov
pop
push
sti
dec
stos
jbe
cmps
or
lahf
xchg
cmp
push
jge
out
into
mov
movs
and
in
(bad)
fnstsw
mov
xor
jg
aam
jmp
mov
in
fnstsw
dec
popf
test
mov
or
jnp
sub
and
dec
and
jmp
int
ja
inc
iret
lea
or
gs
dec
hlt
cmp
fisubr
mov
mov
push
loope
cmp
xchg
stos
xchg
cli
cmc
aam
outs
lea
jns
retf
mov
scas
shl
cld
mov
cmp
(bad)
xor
and
mov
xor
int3
push
cmp
in
jns
mov
(bad)
fisttp
and
sub
inc
xor
dec
cmc
ficom
imul
loope
(bad)
xchg
cmps
jno
repnz
mov
test
pop
test
push
pop
repz
out
retf
sar
imul
dec
xchg
xlat
pop
das
pop
lahf
or
or
out
or
iret
daa
iret
sahf
out
xlat
scas
or
jb
pop
scas
iret
pop
jg
ins
cwde
jge
outs
aas
mov
pop
int3
imul
stc
cs
popf
mov
pop
outs
xor
mov
xlat
mov
jg
(bad)
(bad)
scas
sbb
pop
cvtdq2ps
inc
call
xchg
push
(bad)
pop
iret
loope
jns
cmp
lods
sahf
ja
loopne
pop
retf
ja
pop
popf
add
cs
adc
mov
leave
cdq
es
pop
push
sub
or
inc
jmp
dec
lods
mov
inc
mov
aam
mov
mov
push
jnp
or
imul
sbb
and
xor
mov
mov
xor
xchg
ins
aas
jb
sbb
or
scas
xor
aam
in
fiadd
(bad)
cmc
pop
push
xchg
dec
xchg
mov
mov
int
pop
addr16
sub
adc
rcr
stos
pop
int3
scas
dec
mov
jbe
sub
(bad)
jge
pop
pop
ror
psubsw
rol
mov
xchg
jle
mov
int
mov
jg
cmps
in
mov
es
out
or
push
idiv
push
ins
(bad)
div
je
pop
jle
push
cmovg
outs
or
das
pushf
jns
out
cmp
outs
nop
mov
pusha
dec
xchg
fisub
loop
xchg
sbb
pop
push
dec
sub
xchg
fisttp
mov
(bad)
sbb
(bad)
aam
jge
push
jmp
pop
scas
mov
push
pop
sar
enter
dec
cmps
lods
into
sar
push
pop
into
fisubr
jp
popf
cmps
aaa
mov
adc
jl
sahf
fmul
pop
arpl
mov
lods
adc
int
outs
lods
popa
fsubr
fnstsw
into
enter
dec
fwait
cmp
iret
fistp
call
inc
das
div
loopne
cmp
or
dec
mov
push
es
push
outs
push
cmp
fwait
jae
xchg
stos
fucom
xchg
inc
mov
sub
fstp
jg
mov
xchg
pop
ret
shl
mov
xor
sbb
ins
jg
and
cmp
je
xchg
xchg
out
leave
jbe
push
adc
ins
sbb
sbb
and
adc
bnd
xchg
dec
pop
(bad)
popf
in
ins
in
adc
fist
int3
or
inc
dec
jns
inc
jl
ins
repz
jae
add
or
iret
sub
mov
and
adc
loope
dec
shl
fs
mov
out
aaa
out
xor
jae
sbb
cmp
jmp
out
push
enter
ret
imul
dec
ret
out
gs
pop
pslld
adc
dec
pop
xlat
sub
nop
outs
pop
pop
scas
scas
dec
ret
dec
mov
sbb
popa
test
mov
popa
lds
pop
fdivr
jecxz
add
cld
mov
(bad)
int3
adc
das
aas
xor
repz
lahf
test
outs
or
mov
adc
pop
mov
and
jmp
imul
mov
scas
or
nop
adc
push
push
(bad)
in
lods
imul
cmp
dec
fwait
shr
cmp
cmp
cmp
call
arpl
or
sbb
mov
xor
push
mov
(bad)
scas
aam
or
adc
das
test
push
xchg
(bad)
in
nop
jbe
xor
mov
repz
das
xchg
pop
dec
hlt
jg
cmp
push
in
mov
sar
aas
and
or
push
xchg
adc
and
mov
sahf
or
lea
movq
pop
ds
scas
xor
cmp
fidivr
std
pop
adc
xor
rep
jmp
pop
aaa
rol
pusha
pushf
(bad)
or
xchg
es
or
inc
dec
aam
mov
outs
fsubr
adc
or
iret
push
pop
aam
inc
inc
je
xor
push
pop
movs
or
retf
mov
adc
jecxz
stc
jmp
enter
cmovp
ja
jb
cmp
out
mov
neg
dec
push
xchg
jg
inc
int3
or
mov
mov
and
dec
sbb
jge
mov
cmp
pop
outs
sub
sahf
call
mov
paddb
popa
inc
daa
ret
pop
push
pop
add
ja
push
add
repnz
xor
stos
cwde
je
ins
(bad)
push
ins
push
popa
push
sub
mov
cs
adc
repnz
adc
push
dec
ud1
cmps
lahf
pop
les
into
jmp
ret
leave
into
das
popf
sub
out
pushf
jnp
imul
lahf
repnz
std
inc
sub
outs
mov
repnz
xchg
aam
pop
mov
aaa
aas
adc
dec
mov
pushw
aam
pushf
sbb
(bad)
dec
ror
ror
mov
jmp
push
addr16
sbb
mov
add
mov
fild
adc
pop
(bad)
call
dec
fcomp
int
mov
dec
icebp
int
out
fistp
push
sbb
sub
div
into
add
mov
in
jg
and
stc
jge
sbb
dec
cmp
int3
mov
cmp
unpcklps
xor
push
pop
dec
out
push
add
outs
sbb
outs
out
das
das
pop
out
(bad)
fwait
pop
push
sbb
out
out
fsub
mov
lods
ins
cs
out
cmps
fisubr
sbb
xchg
addr16
lock
cld
mov
(bad)
daa
aas
mov
fsubr
sahf
pop
inc
daa
daa
int
and
cmp
mov
movs
push
punpckhdq
pop
push
and
xlat
std
repnz
leave
jl
aas
sub
iret
cmps
push
pop
loope
ror
and
ins
add
out
jbe
jo
(bad)
leave
or
pop
test
lahf
out
pop
clc
aas
(bad)
aaa
(bad)
fwait
mov
loop
aas
push
jg
(bad)
mov
(bad)
mov
and
test
adc
(bad)
std
addr16
xchg
dec
add
and
(bad)
fcmovnb
xchg
je
rcr
(bad)
push
ins
test
sub
outs
daa
pop
cmp
pop
dec
das
(bad)
leave
fidivr
retf
cmp
lahf
(bad)
mov
pop
sti
mov
or
icebp
lock
mov
fidiv
out
retf
and
(bad)
and
add
stos
(bad)
sub
outs
fsubr
in
sub
and
fidivr
pop
scas
stos
int
mov
xor
push
mov
xor
fsubp
jae
ins
push
jbe
daa
lahf
and
mov
out
rcr
int3
and
dec
jg
mov
comiss
jb
jnp
add
lahf
cmp
pop
ja
repnz
mov
pop
ss
push
cmp
fidivr
mov
ret
lea
dec
mov
rsm
loope
xor
xchg
pusha
xchg
rol
mov
(bad)
cmp
ins
fcomp
xor
xor
das
retf
jg
and
cli
push
and
lock
sub
mov
cmp
xchg
sub
mov
in
mov
sbb
mov
(bad)
mov
or
jge
nop
int3
inc
addr16
cld
clc
jmp
add
dec
jg
inc
or
sbb
push
adc
cmp
fdiv
scas
sar
dec
fsubp
sbb
jp
sbb
mov
not
fidivr
(bad)
cmp
pop
fistp
adc
or
std
cmp
iret
add
ins
leave
sbb
inc
mov
lods
ss
adc
push
lods
add
jg
leave
jecxz
adc
scas
mov
mov
sub
(bad)
inc
dec
pusha
pop
mov
add
sbb
mov
imul
xchg
imul
cmp
arpl
and
sub
jg
fisttp
stc
xchg
cmc
aad
fbld
cs
or
loope
jmp
xchg
dec
in
or
jns
shl
dec
xchg
mov
and
(bad)
jecxz
(bad)
imul
push
dec
lahf
mov
inc
cmp
fistp
push
jg
add
push
or
xor
dec
or
fadd
push
pop
fisttp
ins
hlt
xor
xor
cmp
mov
repz
and
stos
or
mov
(bad)
fstp
(bad)
dec
aas
mov
jp
lds
cmp
ins
and
or
pop
call
retf
dec
js
push
xlat
outs
imul
in
sbb
in
adc
pop
cmp
pop
pop
aaa
out
mov
enter
add
loop
push
bnd
stos
cmp
pop
jg
sbb
cmp
dec
les
push
out
pop
sub
mov
fdivr
(bad)
jmp
out
gs
cli
in
xor
fnsave
call
inc
cld
lahf
cmps
or
and
pop
in
lds
push
mov
imul
pop
dec
add
sub
add
hlt
shr
(bad)
retf
mov
out
lahf
iret
call
std
sub
and
pop
jg
test
lahf
jmp
leave
dec
dec
mov
ds
jno
ins
mov
dec
sub
out
sbb
and
mov
adc
jge
shl
dec
jno
sbb
addr16
es
clc
loope
mov
or
es
mov
cmp
mov
loop
xchg
daa
push
xor
call
loope
cwde
scas
jmp
pop
jns
(bad)
xor
addr16
mov
fs
cmps
iret
mov
dec
mov
je
sub
loop
ja
pop
inc
mov
xchg
cmp
popf
adc
daa
jmp
inc
(bad)
jo
xchg
sbb
dec
or
jbe
jg
push
and
adc
jg
into
ret
test
lock
dec
jg
mov
(bad)
cmc
aam
call
ror
out
neg
pop
aaa
and
sub
and
adc
sub
pop
call
fisttp
cmp
fcomp
and
sub
cmp
add
sub
imul
cmp
fnstenv
outs
or
push
xor
stos
pop
push
mov
cwde
je
dec
ja
fiadd
popf
mov
les
add
or
and
sahf
pop
mov
rcr
call
sahf
addr16
xchg
mov
lods
out
mov
and
mov
out
inc
iret
mov
in
cs
xor
xor
adc
push
mov
movs
iret
mov
ds
and
xchg
xlat
ret
and
sbb
xor
es
scas
mov
in
pop
push
daa
dec
dec
out
cmp
mov
aas
jmp
retf
into
or
int
ret
stos
dec
mov
or
lea
xor
sub
dec
push
sbb
(bad)
loop
clc
fidivr
xchg
(bad)
mov
jne
push
sub
mov
mov
ficom
out
pop
out
int3
sbb
jle
sbb
stos
mov
jns
sbb
(bad)
fcmovbe
push
cmp
pop
mov
pop
icebp
push
into
sub
in
rcr
cmps
jnp
adc
dec
(bad)
aam
xchg
pop
fstp
pop
js
pop
fld
pop
pop
out
push
fdivr
xchg
adc
das
cdq
jg
outs
mov
lods
push
sub
cdq
fistp
xor
or
add
lds
xor
pop
(bad)
jecxz
jge
mov
or
(bad)
sbb
mov
pushf
mov
pop
or
shl
jg
jle
mov
ds
fwait
es
leave
sti
and
loopne
mov
cwde
push
adc
jae
pop
mov
sbb
cmps
mov
cmp
fadd
inc
xchg
sbb
dec
pop
mov
ds
dec
jp
(bad)
inc
cmp
aam
and
gs
push
jg
mov
add
in
std
daa
fmul
daa
mov
push
outs
pop
imul
cs
fild
cs
cmp
repnz
fmul
jle
scas
dec
dec
sub
jnp
or
mov
sbb
imul
loop
mov
xor
jle
fild
cmp
pop
(bad)
pop
jg
cmp
and
or
jmp
pushf
data16
test
xchg
out
ins
fiadd
into
or
or
adc
mov
loope
test
cmp
cmp
scas
shl
cmps
mov
aaa
inc
hlt
scas
aas
rcl
or
adc
jmp
les
(bad)
inc
mov
lock
out
pop
push
sahf
push
enter
outs
sbb
or
pop
not
dec
scas
data16
ret
leave
jb
jle
sahf
fbld
inc
push
mov
das
ja
jmp
jge
out
xchg
mov
mov
in
sahf
sub
inc
daa
pop
add
ja
aas
and
sbb
pop
push
pop
(bad)
dec
dec
sub
(bad)
fnstcw
gs
jno
jge
data16
mov
mov
xor
rol
stc
sahf
lods
or
leave
in
call
js
dec
mov
retf
sbb
call
shl
scas
(bad)
cld
movs
and
dec
ins
cmp
out
jns
fst
daa
das
loopne
add
mul
fs
push
sub
dec
mov
inc
das
mov
push
jne
cmp
mov
jp
adc
mov
xor
dec
lahf
(bad)
loop
pop
out
fadd
dec
cs
inc
push
lahf
sub
ror
cmp
sbb
mov
in
sub
rcl
cdq
pop
pop
sbb
scas
lods
mov
into
adc
(bad)
xchg
jle
xor
sub
fild
ds
neg
je
aad
jo
xchg
mov
int
scas
cdq
popa
cmps
repz
leave
inc
sahf
fs
jnp
xchg
push
das
ret
fwait
sar
aas
adc
xor
and
dec
push
out
jno
jl
jns
mov
scas
cmp
in
scas
xchg
lahf
ds
xchg
scas
jbe
mov
(bad)
dec
push
fild
or
shl
sub
adc
mov
mov
sbb
push
xchg
pop
cmp
aad
jl
or
add
mov
or
mov
sbb
jp
gs
mov
mov
jnp
popf
or
aaa
into
in
(bad)
call
out
sti
stos
mov
sahf
aam
dec
mov
ret
jg
push
sub
(bad)
out
add
enter
pop
pop
into
sbb
cmp
(bad)
sbb
out
cwde
cmp
fstp
or
dec
cmp
sub
retf
sar
jmp
inc
and
pop
lock
(bad)
xchg
cmp
sbb
or
xchg
cdq
pop
cmp
cmp
xlat
test
imul
aas
jg
popf
aad
fs
(bad)
mov
in
lock
fcomp
jg
sbb
pop
inc
ficomp
aad
push
popa
dec
movs
add
mov
xchg
and
jmp
dec
sbb
dec
mov
adc
shl
mov
fwait
imul
jmp
sbb
cmp
into
sbb
(bad)
std
push
jge
in
sub
jno
call
jo
push
int3
mov
div
sahf
sbb
push
inc
xor
mov
popa
push
out
xchg
sbb
imul
loop
lea
mov
cdq
imul
pop
push
cmp
sub
rep
lods
mov
dec
sbb
out
sti
pop
test
mov
adc
mov
xor
fiadd
ja
ret
ficomp
imul
dec
pop
xor
(bad)
adc
iret
fistp
rcr
mov
sub
or
call
ss
or
shr
dec
cmp
xchg
cmp
out
jae
jl
push
pop
shl
xchg
adc
and
fwait
cs
test
cli
(bad)
mov
inc
sub
into
mov
sub
iret
rcl
pop
push
push
aaa
addr16
dec
adc
push
push
imul
scas
stos
aad
sahf
cmps
addr16
mov
or
push
cmps
fidivr
imul
fistp
sub
push
ret
jecxz
mov
rol
pop
sbb
jns
(bad)
mov
jge
pop
mov
push
adc
pop
call
dec
aam
push
sbb
vpcomq
sbb
ret
outs
cmp
pop
stos
int3
push
xor
aas
pop
jge
pop
mul
mov
mov
xor
idiv
or
jb
fidivr
popf
(bad)
aaa
jge
in
loopne
jl
repz
lahf
push
xor
imul
sbb
in
dec
imul
imul
dec
adc
push
out
(bad)
mov
das
push
push
jbe
push
out
das
adc
jg
dec
ror
into
scas
push
(bad)
into
pusha
scas
fcmovnu
je
and
sbb
je
scas
cmp
movs
(bad)
shr
pop
dec
add
pand
outs
and
retf
dec
sar
dec
aas
fcmove
lea
inc
pop
xchg
sbb
jge
pop
pop
sahf
mov
cmps
aam
inc
cmps
jmp
sub
dec
sub
ja
push
inc
pop
mov
out
mov
jmp
sub
xor
and
les
ins
sbb
shl
scas
(bad)
movs
aas
(bad)
xlat
pop
scas
dec
adc
xchg
aad
xchg
rcr
xchg
add
lahf
jl
xor
shr
int
inc
xlat
lods
or
mov
dec
inc
sar
sbb
into
mov
pop
stc
int3
and
fidiv
out
push
mov
fs
leave
push
retf
mov
push
cmp
paddusb
cmps
fisttp
call
adc
das
jl
sahf
popf
and
mov
push
jne
and
fdivrp
jno
ins
push
push
int3
stc
out
pushf
add
lahf
jg
pop
aas
pop
dec
test
ror
cwde
neg
sbb
sub
outs
aas
mov
cmp
pop
std
adc
xchg
jae
push
lds
cld
push
pandn
jae
mov
xchg
das
sahf
mov
das
cmp
pop
push
mov
pop
cmp
cmp
mov
pop
mov
sub
lahf
sbb
(bad)
jns
mov
dec
dec
inc
xor
out
xor
and
mov
pop
add
out
pop
jmp
mov
imul
dec
call
cmp
fwait
(bad)
outs
aad
lods
push
and
jno
inc
repnz
(bad)
xlat
mov
retf
mov
mov
aas
xor
repz
push
mov
out
pop
std
mov
(bad)
xchg
nop
xor
xor
pop
jp
outs
pop
aaa
mov
jo
iret
mov
daa
dec
fs
arpl
add
mov
push
mov
and
cs
jecxz
and
jg
push
xor
es
sbb
jecxz
repnz
sub
call
leave
xlat
(bad)
and
cmp
out
outs
jecxz
xchg
pop
std
daa
sbb
outs
inc
sbb
out
or
test
pop
into
add
iret
inc
sub
outs
sbb
mov
push
icebp
xor
call
aaa
sbb
lods
ret
dec
scas
mov
scas
test
lahf
(bad)
outs
out
xchg
pop
cmps
lds
out
push
pop
test
jp
inc
lods
and
lods
jge
test
scas
xchg
daa
js
or
jmp
mov
into
out
test
(bad)
dec
pop
xor
add
ins
dec
stos
push
fisttp
test
dec
retf
xor
shr
sbb
or
jb
dec
data16
adc
mov
sti
in
sub
cmp
shl
std
mov
ins
lods
xlat
xchg
pop
outs
daa
aaa
mov
xlat
xor
dec
xchg
cmp
jne
cli
lods
mov
xchg
add
cmp
sbb
pop
mov
out
pop
fmul
aam
ret
daa
pop
arpl
inc
inc
mov
outs
sub
clc
lahf
mov
xor
aas
dec
mov
popf
daa
ret
push
inc
or
rcr
das
(bad)
js
scas
pop
(bad)
movs
cdq
pop
jl
push
outs
(bad)
push
hlt
and
cmp
jecxz
ret
and
mov
in
push
push
in
aaa
inc
pop
test
(bad)
dec
sbb
stos
fistp
pop
xor
mov
movs
cld
xchg
push
(bad)
sar
ror
pop
es
daa
(bad)
cmp
and
xor
sahf
cmc
xor
ffree
and
fwait
icebp
in
aad
sub
sbb
jnp
jp
fcmove
retf
mov
mov
add
and
fist
sti
mov
xor
fnstcw
mov
xchg
mov
mov
fimul
mov
nop
mov
xchg
imul
push
mov
mov
test
cmps
rep
call
outs
pop
sbb
iret
add
xchg
mov
sbb
(bad)
xchg
shl
mov
aam
cld
mov
push
fild
xor
int
std
xchg
lock
dec
aas
test
ins
aas
xchg
dec
fwait
scas
dec
loopne
sub
dec
jae
mov
pop
out
mov
dec
stos
rcr
out
out
adc
dec
mov
mov
iret
pop
jne
pop
int3
push
stos
adc
aam
call
leave
scas
call
xchg
outs
fidivr
jge
mov
shl
lock
aad
mov
mov
sbb
mov
mov
jg
imul
retf
fldenv
pop
adc
xchg
movs
cmc
in
scas
lahf
mov
xor
mov
sub
repz
mov
leave
cmp
add
imul
daa
push
pop
pop
ds
dec
lea
mov
scas
mov
nop
mov
push
sub
dec
call
and
outs
scas
add
mov
sbb
sbb
ds
xor
inc
imul
mov
cmp
pminsw
in
(bad)
js
mov
dec
cmps
sub
add
inc
add
dec
aas
cmps
sahf
sbb
push
or
fidivr
lods
sbb
dec
ffree
pop
or
sub
stos
cdq
div
lahf
cld
jp
movs
lea
out
mov
fsub
(bad)
mov
pop
sbb
movs
fidivr
inc
and
lahf
and
test
or
xchg
shr
sahf
mov
imul
cmc
pop
xor
jecxz
jmp
fsubp
push
mov
push
xchg
fnstsw
jle
sub
mov
and
pop
cmp
sbb
xchg
aaa
not
sbb
cs
push
adc
hlt
mov
xlat
test
adc
add
repnz
dec
and
xchg
lods
cmp
xchg
(bad)
jecxz
adc
mov
push
adc
add
fiadd
mov
xchg
mov
icebp
test
addr16
dec
lods
push
in
outs
mov
dec
mov
(bad)
pop
fwait
ror
movs
pop
out
fadd
fisttp
push
aad
or
icebp
cmp
and
hlt
scas
push
mov
inc
inc
fild
push
shl
(bad)
aaa
mov
and
repnz
out
cmp
sar
aas
sti
out
test
shl
das
mov
xchg
loop
cmp
xor
call
mov
popf
mov
in
or
xchg
int3
mov
sub
or
pcmpgtw
xchg
mov
add
imul
in
ficom
xor
xchg
(bad)
out
inc
and
dec
lahf
xchg
sbb
mov
adc
call
pop
lea
call
jnp
xor
scas
mov
test
sbb
sar
enter
mov
in
sahf
test
das
aas
push
mov
rcr
call
aam
dec
xchg
cmp
in
outs
shr
pop
sub
mov
(bad)
mov
into
in
add
scas
jmp
sahf
aas
outs
mov
adc
xor
int
adc
pop
stos
mov
jle
jp
adc
sub
mov
popf
loopne
shl
rcl
lds
xchg
(bad)
fbstp
call
sbb
test
fimul
dec
jmp
popa
lock
push
fst
dec
push
in
scas
cmps
dec
ins
adc
mov
push
dec
std
xlat
push
pop
pop
iret
and
scas
xchg
data16
dec
das
movs
fist
and
ds
xchg
push
pop
or
int
jle
ficomp
mov
notrack
int3
add
jmp
iret
mov
xchg
fld
outs
xlat
sbb
fisubr
loopne
pushf
lock
mov
add
dec
sbb
jb
adc
mov
stc
mov
lods
jmp
xchg
inc
pop
dec
dec
mov
push
xchg
imul
push
cli
lahf
inc
int3
call
(bad)
mov
ins
pop
retf
scas
das
mov
hlt
js
ja
cmps
stos
call
test
fidiv
pop
dec
jmp
out
add
loope
pushf
dec
outs
xchg
push
pop
daa
mov
retf
and
mov
jle
pop
sbb
xor
push
inc
je
lods
push
mov
in
jmp
das
in
pop
pop
push
and
std
pop
add
sbb
das
data16
out
lods
outs
(bad)
(bad)
mov
stos
movd
cs
(bad)
cvtps2pi
or
dec
inc
jg
les
fisttp
mov
pop
pop
pop
es
loop
ds
pop
xchg
xlat
sahf
inc
dec
mov
mov
pop
pop
repz
sbb
psubw
mov
xlat
lds
add
jne
(bad)
std
cmp
cmp
(bad)
(bad)
mov
pop
xchg
ja
fs
pop
push
out
fsubrp
push
stc
dec
test
outs
or
xchg
sbb
stos
gs
aaa
sti
mov
fild
sbb
push
inc
jae
push
(bad)
and
dec
lock
sub
mov
ins
cmp
nop
mov
sbb
cmps
and
fbld
das
sbb
outs
out
out
xchg
sbb
stos
mov
cli
lahf
pop
setae
scas
push
xchg
iret
out
cmps
xchg
js
fwait
cmp
xchg
and
imul
and
in
cmp
or
mov
jae
out
das
lds
(bad)
das
dec
lods
daa
jns
lea
adc
or
sbb
(bad)
outs
adc
repnz
(bad)
fld
fwait
xchg
jmp
retf
je
cmp
pop
cmp
inc
dec
rcl
jnp
push
addr16
into
push
in
mov
(bad)
pop
shl
cmp
push
fcmovne
arpl
in
lods
cmp
out
xchg
xor
jmp
int
repnz
cmps
sbb
(bad)
sbb
push
into
lahf
sub
xor
adc
fmul
mov
stc
sub
ja
pop
inc
iret
mul
push
mov
(bad)
pusha
fnstcw
lods
mov
add
mov
dec
out
sbb
and
push
or
in
jns
test
pop
xchg
jg
or
(bad)
xchg
(bad)
mov
mov
add
add
jge
push
leave
mov
pop
dec
fisttp
jle
enter
in
es
pop
out
rcr
jle
and
(bad)
ldmxcsr
xlat
pop
fbstp
into
shr
push
jne
addr16
cmp
mov
jg
inc
jge
pop
stos
lahf
loope
push
adc
dec
leave
addr16
std
das
mov
sub
not
sahf
xlat
cmp
sbb
or
daa
jl
das
xchg
mov
push
cld
jno
dec
dec
pushf
mov
or
gs
cld
dec
pop
je
sub
mov
xchg
push
out
lods
stc
scas
std
cdq
mov
ss
push
retf
stos
dec
cmp
adc
data16
fsubr
fisubr
mov
push
push
cmp
push
rcr
mov
imul
jge
jbe
(bad)
fimul
add
scas
cmps
xor
sbb
aam
jae
not
lahf
mov
fimul
in
pop
rol
(bad)
ds
cld
outs
push
scas
fisttp
add
inc
(bad)
mov
(bad)
mov
cmps
add
ds
push
mov
mov
inc
in
push
jl
pop
lods
xor
jno
add
cli
arpl
dec
fsub
(bad)
adc
mov
inc
shl
jns
pop
call
fmul
inc
fisttp
cs
mov
fild
mov
push
jl
in
inc
pcmpgtw
adc
frstor
mov
psrad
mov
stos
stos
jp
out
or
js
dec
test
add
push
cmps
ins
inc
jge
popa
and
xor
retf
stc
clc
mov
and
add
or
push
inc
sub
dec
repz
retf
int3
pop
dec
mov
cli
xchg
sbb
pop
add
fisttp
sbb
sub
imul
sub
fs
stos
pop
(bad)
pop
lea
push
mov
push
pop
lea
lea
xlat
int3
add
jae
es
jno
push
jnp
lds
mov
mov
aaa
scas
(bad)
lods
mov
pop
pop
jmp
fld
add
popf
dec
int3
test
mov
or
mov
ror
cdq
nop
fs
sbb
push
jecxz
mov
pop
lods
ja
dec
dec
mov
xchg
mov
(bad)
in
jnp
fld
call
mov
dec
pop
retf
(bad)
mov
fdivr
cwde
and
cli
sbb
xchg
pop
push
cmps
mov
mov
cmc
cs
outs
retf
sbb
xor
jp
aad
aas
pop
inc
add
ds
dec
adc
mov
enter
test
ror
(bad)
xchg
dec
imul
inc
mov
mov
stc
mov
fs
xor
fsubrp
mov
cmp
pop
or
push
outs
jne
(bad)
div
js
push
cmc
jecxz
add
out
int
cmc
dec
(bad)
jnp
sbb
scas
cld
out
pop
(bad)
fild
lods
out
pop
aam
(bad)
jecxz
int
sub
and
int
mov
sub
call
frstor
lds
mov
sbb
mov
sbb
xor
cmp
imul
aad
jmp
es
sub
push
aaa
call
xor
pop
cmp
ins
inc
adc
outs
mov
pop
push
out
lods
push
das
dec
aas
bound
sbb
pop
jne
pop
test
xchg
xchg
mov
jl
out
ficomp
gs
aas
inc
ror
xsavec
push
jge
ja
retf
int3
adc
pop
pop
icebp
std
das
add
cmp
lods
adc
loop
sti
cmp
popf
mov
sub
int
das
inc
dec
jge
fs
mov
and
jnp
add
sub
loope
sbb
mov
idiv
dec
loope
pusha
arpl
pushf
xor
fadd
pop
jns
repnz
and
int3
cmps
cmp
pop
repz
mov
fwait
mov
cmps
in
mov
ficom
or
sbb
aam
leave
setae
fidivr
xchg
call
ret
xchg
pop
jge
fnsave
cli
sbb
stos
arpl
xlat
jbe
(bad)
jle
data16
mov
mov
pop
ss
(bad)
pop
xchg
push
cs
(bad)
cli
pop
fisttp
jg
dec
or
inc
inc
aas
ss
scas
popa
add
dec
scas
and
ficomp
mov
add
mov
inc
dec
out
inc
mov
cmps
aad
icebp
addr16
jnp
(bad)
loope
aas
popa
int
jno
scas
jne
xor
imul
cmps
pop
jnp
add
xor
das
pop
and
mov
lods
adc
xor
sahf
push
data16
cmp
call
mov
les
cmp
mov
mov
fs
call
ds
or
dec
(bad)
inc
mov
adc
dec
sub
mov
in
lock
ds
(bad)
xchg
lock
xor
movs
aaa
cmp
pusha
jmp
push
push
pop
ss
cs
(bad)
jg
xchg
or
push
mov
push
jl
mov
pop
dec
pop
or
(bad)
xchg
scas
xor
hlt
push
hlt
mov
push
fnsave
outs
cmps
aad
cdq
cmp
(bad)
and
mov
iret
repz
jmp
sub
mov
add
jle
mov
repz
scas
pop
xchg
outs
add
ss
outs
mov
xor
adc
inc
add
jg
pop
das
pop
sbb
les
jge
sar
or
out
ja
out
jno
icebp
xchg
outs
mov
sub
aaa
jbe
hlt
aas
sub
outs
mov
lock
dec
pop
stos
jle
inc
aas
mov
pop
cmp
pop
jae
outs
(bad)
mov
test
sahf
sbb
xchg
jae
pop
ins
in
push
or
jg
jge
or
rcr
into
inc
mov
jle
inc
dec
sub
out
cmp
xor
or
aas
sahf
inc
cs
(bad)
or
aaa
scas
pop
xor
dec
jge
inc
push
sub
repz
pop
push
pop
pop
cdq
mov
push
scas
test
out
jmp
sbb
ret
add
(bad)
call
xlat
(bad)
or
jns
or
sub
adc
inc
out
scas
inc
pop
xor
mov
cmp
adc
in
(bad)
mov
cmps
push
mov
ror
mov
jle
daa
fidivr
xchg
mov
inc
lods
jg
loope
mov
xlat
test
jmp
inc
lds
int
(bad)
(bad)
mov
iret
and
or
pextrw
fwait
sub
pop
retf
jp
iret
outs
mov
sub
aam
outs
pop
lahf
dec
and
xchg
and
pop
maxps
mov
mov
dec
lahf
adc
add
and
rcr
ret
rcr
(bad)
outs
add
hlt
inc
das
add
mov
outs
adc
(bad)
repz
ins
(bad)
dec
mov
ins
dec
lahf
dec
outs
add
scas
dec
jg
ret
cmc
fisubr
icebp
addr16
test
addr16
sub
xor
fwait
and
fist
push
add
shl
sub
jecxz
fyl2x
retf
jae
mov
push
nop
and
dec
lahf
jecxz
scas
mov
dec
stos
test
sub
dec
or
iret
cmp
in
dec
addr16
retf
cwde
jg
xlat
push
in
xchg
mov
pop
js
push
sbb
jg
lahf
sbb
(bad)
stc
(bad)
scas
fistp
data16
cmp
xor
stos
lahf
fild
shl
add
stos
imul
or
push
jmp
pop
repz
pop
call
xchg
(bad)
or
xchg
or
jbe
dec
mov
mov
mov
f2xm1
jnp
xor
je
retf
pop
imul
das
sbb
aas
ret
ja
fcomp
scas
std
mov
das
fild
sub
dec
(bad)
dec
pop
sub
call
outs
icebp
adc
dec
call
mov
or
jecxz
lahf
jnp
jp
sbb
jne
xor
sahf
cmps
(bad)
pop
push
sbb
jno
jg
das
sub
sub
rcr
das
fst
cs
cmp
xchg
retf
shl
mov
clc
pop
sub
pop
das
stos
fisubr
call
mov
movs
repnz
out
xchg
sbb
dec
lahf
pop
cmp
loope
pop
iret
and
popa
ror
jmp
mov
mov
ret
(bad)
mov
aas
outs
dec
outs
sub
ror
push
scas
mov
inc
lea
outs
xchg
nop
cmp
rcl
stos
push
popa
mov
dec
das
aas
outs
push
xchg
jns
xchg
mov
and
ja
cs
mov
stos
scas
jecxz
fisubr
das
cmp
cld
pop
div
call
sbb
xchg
cmp
scas
push
cmps
pop
jo
pop
leave
repnz
push
cmp
stos
jg
fstp
push
jae
add
pop
add
mov
jl
mov
xchg
jle
lods
iret
pop
inc
in
xchg
or
mov
jne
sar
rcl
arpl
jo
loop
enter
loope
fcomp
enter
stc
cmp
in
dec
inc
mov
push
inc
xchg
jecxz
iret
iret
cld
(bad)
fmul
adc
and
add
jg
test
push
pop
out
add
mov
inc
ds
inc
inc
xchg
cmp
jnp
retf
pusha
pop
movs
inc
bound
out
scas
call
imul
mov
sub
ss
imul
out
sbb
mov
mov
pop
jg
sbb
jg
mov
test
imul
jmp
mov
xchg
pop
xchg
mov
pushf
mov
push
cmps
cmps
pop
jg
push
fbstp
sar
fdiv
in
mov
dec
scas
or
add
adc
test
mov
movs
arpl
mov
int
xor
cdq
ins
sbb
lea
mov
push
int
mov
lods
pop
leave
lahf
jns
out
outs
cld
jle
mov
dec
and
jmp
outs
sbb
aas
fisub
(bad)
ror
adc
mov
dec
sbb
push
outs
mov
sahf
xor
and
scas
dec
comiss
or
xchg
lahf
jnp
data16
lahf
loope
mov
aas
dec
xchg
mov
sbb
movs
jo
xchg
pop
jb
dec
rcr
jmp
scas
retf
fisubr
out
xchg
fdiv
imul
arpl
cmps
mov
sbb
je
(bad)
lods
mov
stc
push
fwait
lods
pop
cmps
xor
dec
jbe
sub
je
cmp
xchg
mov
ficom
pop
das
scas
and
out
dec
lds
jecxz
dec
and
pop
into
dec
cmp
sbb
mov
mov
mov
scas
sub
out
cdq
pushf
scas
sub
adc
sti
pop
pop
sbb
sub
out
sub
call
sar
div
test
mov
jl
sbb
cmova
movsx
jno
fnstcw
fwait
add
gs
sub
test
sbb
mov
retf
pop
fndisi(8087
push
iret
(bad)
in
or
je
sbb
pop
out
push
xor
lahf
xor
imul
jle
pop
mov
pop
sub
sub
neg
je
lods
cmps
sbb
sub
cmp
pop
pop
sbb
xlat
leave
out
jle
gs
(bad)
cmp
test
ins
mov
mov
pop
pop
xchg
lahf
ds
out
jl
mov
jae
mov
lods
rol
jb
cmp
sbb
and
clc
test
outs
gs
(bad)
rcr
push
mov
xlat
mov
outs
cmp
in
push
and
or
pop
lods
iret
rcl
push
and
xrelease
(bad)
dec
pop
add
popa
fmul
and
loop
sub
pop
out
fcom
ja
(bad)
and
call
test
lahf
add
pop
mov
mov
test
fistp
dec
jae
ret
mov
mov
pop
test
(bad)
pushf
(bad)
ja
pop
mov
and
mov
jbe
pop
cwde
loopne
cmp
or
in
jp
dec
adc
add
sub
mov
bound
test
fs
sti
pop
adc
jae
pop
and
es
sub
lahf
stos
les
stos
mov
das
(bad)
call
aas
mov
add
or
out
fidiv
stos
jecxz
and
shl
push
jle
js
fs
mov
out
push
lea
xor
sar
fcmovnb
ror
out
fistp
jae
jae
adc
push
and
pop
(bad)
in
mov
pop
imul
mov
xor
jle
dec
popf
jbe
pop
repz
inc
call
(bad)
pop
das
cmps
dec
(bad)
pop
jecxz
scas
movs
stos
mov
das
outs
mov
retf
mov
ret
inc
jae
aas
sahf
sbb
fisttp
iret
arpl
dec
adc
mov
cli
inc
adc
jle
ror
add
adc
scas
dec
(bad)
ds
data16
int3
mov
mov
push
popa
jecxz
add
outs
loopne
dec
push
xor
inc
cmc
push
push
(bad)
lahf
ret
jl
sti
(bad)
into
mov
mov
out
test
inc
or
cmp
push
lock
xor
aaa
push
jle
xor
pop
sub
or
aas
sub
pop
or
jge
dec
ds
add
pop
popa
dec
popf
out
adc
call
pop
pop
into
dec
or
add
loop
dec
mov
stos
xchg
lahf
stc
inc
push
arpl
outs
inc
pop
pop
jl
mov
ds
push
scas
shl
and
fidivr
jno
cmps
out
mov
iret
adc
jae
mov
mov
int
in
sti
xchg
cld
bound
out
addr16
jg
int3
cmp
push
mov
sub
retf
fs
jmp
stos
jl
stos
and
fidivr
cmp
arpl
enter
fistp
mov
int
ret
or
cmp
xor
pushf
adc
adc
sbb
popa
imul
cld
jae
lods
imul
xor
lea
add
sub
popa
mov
pop
pusha
loope
adc
xchg
push
xor
jg
and
sub
pop
aas
(bad)
cmp
outs
cli
jg
outs
out
cmp
sbb
ds
jmp
dec
cmp
fcom
iret
inc
jg
out
test
pop
or
dec
cli
or
int3
test
push
dec
pop
pusha
jo
dec
stos
ss
and
mov
scas
xchg
jmp
add
sbb
popa
sbb
iret
sub
cwde
adc
dec
xchg
iret
pop
xlat
daa
iret
cmps
es
test
adc
xchg
loop
shl
xor
sub
out
jnp
jns
sahf
retf
outs
sub
sar
inc
test
mov
or
scas
adc
mov
mov
adc
rcl
cmp
das
push
inc
das
push
inc
mov
adc
fwait
xor
push
pop
xor
into
leave
shr
lds
sbb
retf
clc
cmp
cmp
pop
lahf
rol
mov
call
mov
in
icebp
pop
movs
dec
pandn
adc
cld
ror
cs
retf
rol
xchg
push
fild
dec
mov
mov
sbb
iret
sti
dec
ins
adc
mov
inc
pop
popf
mov
inc
(bad)
in
mov
mov
mov
inc
inc
aas
mov
dec
xor
icebp
jo
pusha
ret
out
or
lods
pop
imul
and
pop
fwait
push
adc
mov
les
mov
xor
mov
das
lahf
jl
xlat
mov
(bad)
cld
inc
int3
pop
aaa
jp
cmp
lea
adc
fcom
inc
xchg
sahf
cmps
pop
xor
icebp
cmp
jle
icebp
in
mov
fidiv
cmp
ins
or
std
retf
lods
inc
std
sub
inc
pop
clc
or
mov
dec
mov
movs
lahf
dec
pop
cs
dec
not
aas
call
mov
sbb
mov
jl
cs
cmp
sub
cmp
or
dec
pop
mov
test
sbb
out
outs
std
cmp
xor
and
mov
out
lahf
scas
mov
daa
pop
sar
pop
movs
fisubr
cmp
and
sahf
ret
cmp
push
or
ss
cmp
dec
pop
pop
sub
inc
or
fimul
shl
xor
(bad)
or
call
dec
(bad)
mov
cmp
ret
cdq
(bad)
idiv
push
stos
ficom
dec
xor
mov
scas
lods
mov
fbstp
stos
ficomp
xor
xchg
(bad)
mov
in
dec
push
mov
arpl
cmp
mov
(bad)
(bad)
bound
scas
out
lahf
ins
jne
cld
add
pop
push
outs
test
sbb
loopne
stc
leave
push
jl
(bad)
repz
ffreep
adc
mov
cmps
stc
(bad)
out
das
fdiv
inc
mov
mov
xchg
aas
cmc
in
push
rcr
iret
mov
or
adc
inc
adc
mov
aam
ins
nop
add
xchg
mov
mov
fdivr
adc
scas
lahf
cmps
fwait
xchg
xor
adc
aas
jno
stos
mov
loope
pusha
pusha
in
dec
adc
xchg
scas
or
pop
fisub
mov
rol
mov
pop
xchg
mov
lods
stos
popf
mov
pop
aas
std
dec
push
pop
sbb
cwde
ds
dec
loopne
mov
into
jb
sbb
inc
sbb
pop
cmp
push
dec
inc
xlat
dec
lock
data16
cli
mov
add
lock
lods
enter
mov
push
outs
pop
or
sbb
ret
hlt
jnp
rcl
test
xchg
and
sbb
mov
outs
(bad)
jmp
push
fistp
ins
or
ins
sbb
lods
pop
or
push
mov
jns
in
test
jns
or
js
stos
inc
je
dec
dec
daa
outs
std
jge
xchg
adc
(bad)
fcomp
(bad)
dec
aas
dec
add
gs
cmps
adc
(bad)
gs
mov
call
pop
fld
repnz
ins
daa
or
rdmsr
fcompp
aas
pop
jmp
(bad)
mov
or
fisubr
pop
repnz
jbe
jbe
pop
xchg
and
mov
push
pop
test
fcom
jp
push
dec
inc
push
adc
test
mov
cmp
fild
fucomip
sub
outs
and
pop
jnp
inc
cmp
and
popf
xchg
stos
stos
(bad)
(bad)
sbb
mov
pop
jmp
loope
jl
(bad)
and
and
mov
nop
sbb
jmp
mov
mov
sub
cli
cmp
mov
aas
cs
or
test
sub
adc
iret
ror
sbb
fisub
(bad)
test
das
xor
movs
or
shr
cli
mov
int
inc
mov
jecxz
add
ds
jns
aas
mov
stos
sub
sub
pusha
sbb
mov
pusha
pop
retf
mov
arpl
test
add
dec
or
fistp
imul
mov
sahf
data16
pop
cli
cmp
(bad)
push
dec
out
out
adc
dec
and
test
xchg
repz
push
into
cmp
and
fistp
or
mov
mov
aam
dec
push
mov
jb
lahf
sub
jmp
das
and
cmp
(bad)
out
push
fwait
enter
loopne
jnp
out
repz
mov
inc
push
xchg
aam
call
mov
push
je
xchg
das
xchg
mov
arpl
repz
xchg
inc
(bad)
cmp
popf
cld
stos
add
inc
fild
mov
inc
jmp
inc
mov
add
sbb
and
add
sahf
lock
inc
inc
rcr
inc
jae
push
lods
out
pop
mov
fist
ja
mov
push
mov
hlt
inc
add
repz
aas
loope
mov
push
aas
dec
cmp
pop
pusha
or
inc
adc
inc
inc
cmps
add
mov
jno
jp
outs
inc
xor
sub
sbb
scas
xor
in
outs
lahf
movs
xor
inc
shr
mov
lahf
mov
xchg
scas
and
xlat
fstp
lahf
jnp
push
jg
pop
jmp
fcomip
pop
call
jecxz
mov
dec
out
(bad)
std
push
jae
push
xor
cmps
jl
lds
push
das
push
dec
ror
cmp
or
(bad)
jg
scas
fstp
xchg
aas
iret
(bad)
out
mov
outs
jle
inc
out
nop
adc
push
(bad)
pop
push
xor
inc
scas
and
stos
(bad)
mov
xchg
jge
fisub
add
push
pop
jo
mov
das
aas
scas
rep
std
repnz
xor
fcmovne
push
pop
sbb
ret
jge
pop
xlat
xchg
mov
pop
lahf
pop
(bad)
xchg
fs
jecxz
jae
xor
js
pop
adc
mov
xor
ret
les
iret
dec
add
out
arpl
sub
scas
mov
stos
clc
push
lods
lds
scas
ret
dec
rol
sub
adc
popa
add
lods
and
out
jecxz
cmp
inc
ja
xchg
xor
cli
imul
jae
pop
das
and
jg
mov
dec
(bad)
pop
das
adc
iret
sbb
sti
repnz
neg
jecxz
xchg
mov
aas
mov
ret
fbld
das
mov
cs
cmp
sub
sub
pop
push
ret
scas
rcr
adc
xchg
add
xchg
mov
fdivr
xchg
fsubr
jbe
in
xchg
out
xchg
xchg
sbb
pop
scas
dec
js
inc
fild
fldcw
pop
aas
pop
das
(bad)
push
or
cmps
adc
imul
das
dec
mov
mov
jge
das
and
(bad)
maskmovq
div
fbstp
pop
shl
ret
inc
outs
(bad)
adc
aas
jg
(bad)
and
out
jg
fist
fbstp
or
bound
adc
xchg
dec
mov
jg
fistp
pop
bound
dec
iret
outs
iret
jg
(bad)
jecxz
loope
add
pop
iret
inc
aas
mov
out
sub
mov
iret
ret
mov
aad
add
dec
out
pop
jecxz
xor
arpl
mov
dec
fidivr
ret
jb
sbb
cmp
and
jb
push
dec
sbb
mov
arpl
push
(bad)
call
adc
std
adc
dec
push
jg
adc
or
dec
xchg
imul
lock
jb
jg
dec
lds
out
(bad)
out
fist
dec
jg
test
mov
sbb
or
ret
jo
lock
jle
or
and
mov
fidivr
and
ds
lds
push
mov
push
mov
mov
push
into
jle
out
inc
xchg
pop
out
neg
outs
test
cmp
je
fidiv
pop
cmps
das
pop
xchg
push
push
cmovle
or
lds
xor
adc
cmp
or
stos
inc
sub
cmp
adc
dec
sub
icebp
pop
sahf
test
rol
nop
mov
push
shl
sbb
repnz
jmp
iret
sub
scas
mov
je
jle
dec
mov
pop
cmp
mov
jbe
ret
call
cmc
xor
js
mov
inc
mov
fimul
add
retf
pop
scas
test
call
sahf
cmp
jmp
imul
repnz
ficom
pop
push
push
das
pop
xlat
cdq
mov
sbb
xor
ret
out
pop
es
mov
sub
iret
or
scas
cdq
sahf
loop
int3
mov
pusha
adc
mov
aaa
add
lods
aad
fistp
mov
xchg
pushf
test
adc
and
mov
arpl
mov
xchg
mov
and
aad
mov
fld
(bad)
loope
mov
arpl
outs
add
mov
in
iret
(bad)
ins
mov
fcomp
pusha
pop
(bad)
cmp
mov
dec
(bad)
frstor
mov
int3
push
sub
repz
xor
mov
(bad)
cmp
pushf
fistp
push
jnp
jg
ret
mov
cmc
xor
dec
xor
xor
mov
mov
jecxz
push
push
ret
mov
pop
call
mov
xor
(bad)
popa
outs
pop
add
in
les
(bad)
lahf
mov
fnsave
adc
pop
das
pop
add
mov
imul
jl
and
sub
lahf
dec
lahf
dec
fisttp
hlt
add
mov
inc
xor
mov
test
and
out
fisub
nop
fimul
shr
adc
mov
add
outs
and
inc
inc
in
fwait
arpl
push
inc
mov
fcmovbe
retf
jb
and
dec
jnp
dec
ds
pop
(bad)
sub
mov
inc
xor
adc
inc
cs
aas
inc
cwde
ds
aas
movs
sub
out
scas
repnz
push
cmp
inc
pop
mov
scas
std
iret
lock
movs
pop
(bad)
mov
mov
pop
mov
jns
cmp
adc
repz
iret
push
dec
push
das
fist
ret
sbb
add
jbe
inc
gs
shl
mov
fwait
gs
or
bnd
(bad)
loop
outs
fsub
pop
mov
pop
jae
shr
and
pop
push
add
mov
ret
add
lahf
cmp
shl
sub
jle
push
or
(bad)
icebp
dec
repz
add
cwde
out
mov
ficomp
dec
imul
mov
repz
std
or
outs
cs
arpl
adc
jmp
push
mov
das
jecxz
jg
imul
test
mov
jbe
adc
fdivr
scas
jmp
adc
xchg
sar
jl
imul
imul
iret
mov
das
mov
sbb
fimul
cld
mov
add
mov
jae
fistp
pop
or
mov
loop
push
sahf
das
xchg
cli
sahf
aam
push
jge
loope
pop
push
adc
xor
stos
sahf
pusha
xor
bound
jno
stos
aas
add
jo
inc
out
popa
fistp
push
ins
and
aas
pop
ss
and
into
ret
pop
loop
jo
push
jnp
btr
inc
retf
arpl
out
ret
inc
repz
xor
xchg
mov
(bad)
mov
fsubrp
sub
push
nop
popf
es
dec
mov
sub
jnp
fisttp
rol
adc
imul
sub
cmp
sub
mov
jo
outs
mov
inc
lahf
mov
push
cs
sbb
aas
cmp
pusha
popa
jb
mov
mov
xor
aas
mov
adc
jmp
mov
test
lahf
inc
dec
mov
and
(bad)
push
fisubr
popf
aas
ins
sbb
pop
xchg
daa
scas
fsubr
push
xor
and
test
cmp
mov
ror
pop
repz
retf
add
add
sahf
jl
into
jle
rcl
xchg
repz
jg
scas
bnd
movs
shr
mov
repz
into
jae
lahf
cmp
push
cli
scas
fidivr
add
adc
cli
mov
adc
fwait
inc
shl
sahf
stos
cdq
in
sbb
and
ficomp
call
fucomi
stos
add
push
pop
clc
and
xchg
add
push
ret
cvtdq2ps
adc
je
stos
xchg
data16
movs
addr16
xchg
loop
mov
bound
cld
pop
cmp
add
mov
bnd
cmp
les
movs
shr
pop
or
sub
sahf
scas
xchg
cwde
out
lahf
add
mov
mov
scas
setge
sbb
xor
aam
and
ins
aas
(bad)
in
sti
xor
rol
mov
ret
shr
dec
push
mov
dec
das
mov
jnp
cmp
mov
mov
jo
jne
or
mov
iret
cmps
stc
push
jg
mov
ret
mov
cli
or
in
rcl
pushf
int
xchg
test
sbb
fwait
pop
mov
and
jno
shl
xor
mov
mov
jp
xchg
js
mov
arpl
fisttp
ret
pusha
out
rcl
adc
mov
push
ror
ss
mov
ds
sub
enter
or
add
xchg
cld
shl
shl
pusha
pop
hlt
dec
in
mov
stc
(bad)
std
jno
mov
out
(bad)
aas
mov
(bad)
movs
repz
out
inc
ins
fwait
loop
sbb
pop
psrad
push
jae
retf
pop
call
add
jb
out
cwde
iret
fisub
or
(bad)
das
adc
sbb
mov
sbb
mov
adc
push
xchg
iret
nop
add
inc
push
jg
mov
or
shr
outs
cld
add
mov
call
mov
cmp
sbb
aaa
inc
ror
cld
mov
mov
out
mov
xlat
jg
cmp
pusha
scas
iret
call
add
xchg
xor
in
jns
and
out
jbe
xchg
stos
xchg
stos
scas
add
(bad)
fsub
imul
adc
imul
jecxz
call
out
sbb
imul
pop
add
nop
das
fldenv
neg
iret
imul
cmp
sub
dec
ds
pusha
ret
test
enter
stos
push
and
loop
or
scas
cmp
dec
cmp
fst
or
js
jb
push
sub
jle
mov
mov
neg
sbb
mov
cmp
push
aaa
je
jb
retf
dec
aam
and
ret
dec
adc
std
add
dec
xchg
or
sub
and
xchg
pop
iret
pop
xor
lahf
enter
addr16
loop
(bad)
int3
sbb
or
dec
jmp
sbb
repz
aam
lods
mov
dec
mov
push
movs
jl
pop
mov
inc
into
inc
mov
mov
pop
nop
or
(bad)
call
mov
jns
jne
dec
jb
shr
jecxz
(bad)
pop
or
or
xor
and
outs
iret
mov
dec
(bad)
fcmove
fisttp
mov
aas
stos
fs
dec
cld
sahf
xor
shl
push
cdq
sbb
add
out
mov
aas
fnstenv
es
or
out
mov
dec
mov
jp
shr
sbb
pop
pop
or
and
mov
sbb
lahf
mov
lahf
sub
sub
pop
sub
mov
dec
in
mov
mov
out
push
dec
or
in
fnstcw
pop
icebp
push
dec
outs
iret
pop
inc
push
(bad)
push
loopne
int3
pusha
pop
xchg
and
lahf
cmp
clc
push
imul
jp
fiadd
scas
inc
fld
(bad)
stos
xchg
jg
repz
nop
mov
dec
pop
cmps
pop
daa
ins
sub
arpl
(bad)
das
push
mov
sbb
xchg
enter
mov
xchg
inc
mov
sti
sub
test
pop
mov
sub
mov
in
mov
arpl
fimul
sahf
and
sbb
mov
iret
mov
xchg
aas
dec
add
xchg
(bad)
je
push
outs
adc
and
inc
dec
cs
ds
sub
cwde
sub
adc
adc
push
lea
cmove
jb
aas
pop
xchg
sub
fcmovnu
dec
sbb
lahf
lahf
xchg
fdiv
fs
pop
and
out
out
push
jae
pop
call
cmp
dec
sbb
sub
fisub
pusha
imul
lahf
cmp
mov
and
xchg
and
ret
pushf
mov
mov
outs
shl
aam
pop
cmp
jnp
adc
loope
call
mov
mov
cmp
out
ds
dec
jge
mov
push
or
dec
outs
das
sbb
dec
pop
sub
das
ror
(bad)
cmovo
ret
fst
out
lds
aam
dec
dec
mov
jg
int
fdivr
pop
jmp
cmp
(bad)
or
cmp
mov
idiv
push
pop
mov
rol
stos
fidiv
pop
test
cmp
cmp
push
into
(bad)
xchg
retf
int
lahf
hlt
sbb
inc
mov
or
repnz
movs
pushf
cmp
inc
adc
retf
push
js
cld
jp
outs
pop
or
push
lds
clc
jb
or
sahf
and
out
pop
cmc
jns
dec
jmp
shl
add
adc
nop
mov
lea
dec
sahf
inc
jbe
mov
sbb
sahf
das
aas
call
scas
cmp
gs
jns
loopne
js
xor
xor
adc
fucomip
in
add
and
scas
mov
xchg
out
push
repz
fisub
push
push
(bad)
mov
jge
ret
iret
mov
fcom
das
mov
popa
xor
gs
push
jb
outs
inc
mov
mov
mov
dec
jae
aas
fisttp
cmc
sahf
cmps
sbb
jle
lea
stc
paddd
das
clc
inc
pop
mov
btr
dec
out
stos
stos
cs
pusha
and
iret
sbb
nop
mov
mov
pop
test
mov
dec
das
or
adc
xor
lahf
fist
jl
ins
ins
and
mov
movq
inc
dec
adc
lods
cs
jae
jnp
push
pop
push
mov
repz
shl
dec
adc
and
adc
das
and
imul
cmp
inc
iret
jp
mov
jl
aas
lea
push
pusha
or
cmp
das
fild
outs
outs
and
iret
scas
int3
das
nop
sbb
add
add
inc
aas
dec
comiss
sbb
jb
jecxz
shr
addr16
adc
pop
ja
call
sub
scas
xor
jmp
(bad)
mov
mov
pop
jp
dec
push
jle
mov
pop
aaa
cmp
add
iret
jae
loopne
pop
mov
jmp
mov
mov
jg
mov
lahf
pop
pop
mov
and
addr16
popf
dec
mov
mov
xchg
add
and
mov
xchg
jecxz
sbb
mov
sahf
fwait
rcl
out
(bad)
adc
pop
inc
scas
imul
push
(bad)
jnp
arpl
ds
pushf
add
jg
scas
adc
mov
add
mov
xchg
fisubr
dec
sahf
pop
mov
fistp
clc
sbb
cmp
les
cmps
jmp
cs
outs
pop
mov
mov
jg
sub
jmp
jb
in
in
sub
cmc
cmp
fwait
jecxz
and
and
dec
call
pop
test
push
jnp
xor
lds
pop
and
dec
scas
jmp
dec
cmp
xchg
ret
test
movs
sar
cmp
rcl
call
nop
loopne
ret
add
or
nop
movs
xor
push
out
call
int
das
shr
out
pop
fistp
mov
mov
add
loop
mov
lahf
adc
mov
cmp
push
add
dec
push
xchg
mov
mov
lahf
std
pop
out
jle
dec
das
sbb
add
mov
(bad)
out
dec
out
sahf
js
enter
mov
push
jnp
(bad)
fild
pusha
sbb
rcr
scas
mov
lahf
mov
nop
dec
inc
test
pop
sub
and
outs
fisubr
iret
stc
jle
sbb
pop
scas
mov
xchg
scas
adc
jg
cli
call
call
mov
into
mov
adc
enter
pop
inc
das
mov
and
retf
xor
aam
nop
daa
retf
add
adc
test
push
jns
scas
scas
imul
sub
(bad)
das
cmp
cmp
fdiv
sbb
movs
mov
jmp
xchg
push
fwait
sbb
xchg
add
fiadd
ror
mov
pop
pop
jmp
dec
dec
fwait
into
sbb
outs
movhps
dec
push
fld
(bad)
mov
dec
sbb
ins
xchg
push
jns
das
jno
pop
lea
jge
js
and
jecxz
(bad)
xchg
stc
pmaddwd
cmp
sahf
sub
dec
mov
mov
popf
jecxz
pushf
pusha
cdq
pop
enter
dec
push
pop
add
ins
jg
jns
test
(bad)
mov
cmp
jno
rcr
test
ficomp
push
cli
rcl
jmp
xchg
push
push
push
xor
fwait
pop
gs
imul
loopne
in
cmp
popf
adc
sub
dec
sub
jge
pop
repnz
sti
mov
mov
jo
mov
xor
cs
mov
retf
add
push
dec
xlat
dec
mov
in
into
cmp
fmulp
outs
loop
(bad)
frstor
cs
push
jns
xchg
sub
jmp
call
ficomp
(bad)
out
jle
or
mov
mov
out
push
or
outs
sbb
inc
movs
sar
mov
mov
push
retf
sub
jecxz
mov
int3
inc
push
jb
adc
mov
mov
jb
pop
sar
lock
pop
cmp
pushf
sub
xor
cmp
push
icebp
aas
sub
(bad)
fwait
pop
xchg
jae
or
cmp
loope
ins
jae
jns
push
outs
sub
pop
ror
dec
mov
mov
nop
das
xor
call
pop
dec
add
pop
sbb
dec
loope
xchg
pushf
les
je
lahf
jmp
add
scas
dec
sub
ins
fild
adc
daa
pop
or
fcomp
sbb
push
xchg
out
xor
pop
(bad)
iret
and
push
or
push
xchg
pop
xchg
iret
cpuid
not
ins
mov
xchg
xor
sub
cs
scas
sahf
push
fidivr
mov
xor
or
(bad)
leave
imul
lock
mov
scas
adc
mov
(bad)
sbb
sub
or
scas
mov
pushf
(bad)
inc
mov
jbe
dec
push
mov
pop
in
cmp
add
in
pop
test
xchg
clc
(bad)
enter
dec
mov
push
lds
mov
sbb
in
fimul
aas
sub
js
xor
test
add
hlt
ret
mov
je
xchg
pop
jmp
test
mov
(bad)
mov
cld
in
xor
loope
mov
ds
test
xor
mov
(bad)
ja
mov
aaa
pop
xor
enter
add
and
pop
xor
pusha
daa
pop
fstp
loope
inc
mov
fwait
xor
adc
push
xchg
fdivrp
or
or
test
aaa
mov
pop
sub
xlat
or
push
stos
mov
pop
sbb
adc
daa
sub
enter
loopne
test
movs
cmps
sub
xchg
adc
inc
loopne
mov
add
cli
xchg
pop
enter
or
or
inc
mov
out
lods
mov
pop
clc
out
push
jb
push
hlt
sbb
mov
cmp
shl
cmp
jle
loope
repnz
out
add
xor
repnz
cmp
not
fcom
out
jmp
out
mov
push
inc
inc
mov
shl
pop
imul
out
sub
ror
jle
push
sbb
sahf
cmp
rcl
jb
cmp
mov
sbb
xor
push
lods
mov
mov
add
cmp
xor
ret
int
sub
cmp
cld
jb
pop
cmp
mov
sbb
xor
es
mov
div
ds
retf
mov
fnstcw
xor
fidiv
sbb
jbe
int
loope
bound
push
mov
jmp
ins
sbb
dec
(bad)
mov
out
cmp
cdq
div
sar
mov
rcr
cmp
test
xor
sub
cmp
mov
fnstenv
out
or
sub
mov
xor
je
mov
shl
mov
sbb
xchg
repnz
sbb
call
push
push
shl
addr16
and
push
dec
ins
push
out
cmp
lds
scas
add
xchg
das
call
or
inc
(bad)
fwait
jmp
add
inc
pop
mov
push
out
jb
iret
daa
mov
jmp
pop
in
mov
ret
jb
xor
fisub
mov
mov
ret
loop
xor
imul
imul
mov
ins
mov
mov
and
cmps
(bad)
shl
push
ret
add
add
add
test
out
push
jnp
jecxz
mov
inc
daa
push
mov
ret
addr16
xor
jmp
pop
push
cmps
sub
push
aaa
cmps
jo
ret
mov
inc
rcl
fldenv
(bad)
out
and
add
ret
pop
jmp
jnp
ret
cld
call
pop
adc
(bad)
(bad)
lahf
cwde
add
cmc
out
adc
in
jl
shl
add
add
push
addr16
ja
xor
mul
inc
imul
in
ja
fs
ja
and
mov
gs
xor
es
xor
out
mov
stc
fnstsw
pcmpgtb
loope
addr16
lahf
push
jmp
retf
fs
pop
pop
sbb
fisttp
call
mov
aam
jae
xchg
and
xchg
(bad)
and
xor
add
lds
mov
add
push
nop
or
push
or
lods
xchg
and
lods
pop
jle
lods
xlat
sub
shr
inc
enter
adc
xchg
inc
popf
push
(bad)
push
push
mov
sbb
sbb
and
pop
retf
xchg
xchg
cdq
xchg
cdq
xchg
sbb
popf
pop
jmp
cs
test
sbb
push
adc
dec
xchg
mov
push
es
inc
and
mov
leave
xor
xchg
lods
(bad)
lods
int
out
popf
or
popf
xor
ror
jecxz
inc
cmp
mov
lds
push
jge
in
ss
movs
xchg
not
lods
xchg
(bad)
adc
push
jmp
inc
push
(bad)
cs
sub
pop
push
sub
sub
stos
xchg
cmp
adc
dec
jbe
sti
jle
adc
out
arpl
dec
mov
sbb
sub
rcr
ins
ja
retf
cmp
push
and
pop
mov
xchg
and
sub
inc
jmp
push
in
push
pop
xchg
push
sbb
and
jmp
cmp
nop
push
imul
jmp
movs
out
mov
popf
sbb
jmp
sti
stos
mov
xchg
js
sub
xchg
in
dec
imul
xchg
push
cmps
bound
jmp
sbb
sbb
movs
nop
enter
js
cmp
dec
pop
loop
popf
or
add
xchg
retf
mov
enter
(bad)
int
ret
or
cmp
ja
jne
bound
jne
out
mov
mov
inc
push
mov
or
dec
aaa
div
dec
jecxz
test
push
pop
(bad)
cmp
cwde
mov
repz
mov
mov
lea
vcomiss
retf
mov
adc
ret
int
sub
inc
int
into
int
adc
pop
(bad)
in
dec
and
repnz
pop
shr
mov
ss
enter
into
jle
mov
inc
enter
enter
push
mov
ins
jge
mov
cmp
ret
add
adc
pop
enter
lock
inc
cmps
sub
push
fsub
(bad)
inc
call
into
pop
push
cwde
cmps
enter
test
jae
int
push
daa
or
enter
mov
push
add
or
cmps
in
jns
clc
enter
dec
push
ja
dec
bound
in
fs
cmps
in
scas
or
mov
ret
jb
js
sub
enter
push
inc
push
xchg
(bad)
or
rol
add
ins
dec
enter
test
push
inc
ins
stos
dec
and
dec
jp
sub
cmc
push
sbb
ins
outs
push
add
cmps
test
dec
es
or
push
inc
or
fcom
test
loope
bound
mov
or
pop
pop
retf
mov
(bad)
into
in
jecxz
add
add
es
mov
dec
sbb
int3
mov
in
sub
inc
retf
xchg
push
lods
add
out
mov
mov
dec
cmp
mov
pop
mov
or
add
xor
inc
jge
xchg
sub
loop
test
sbb
std
pop
lahf
and
or
fild
sbb
pop
and
xchg
aad
cmp
out
sub
es
inc
imul
jl
(bad)
mov
push
(bad)
push
stc
sub
xchg
jnp
loopne
and
adc
push
sbb
jno
arpl
add
dec
inc
sub
xchg
leave
mov
fmul
das
push
push
leave
or
cdq
inc
and
mov
lds
mov
in
inc
scas
out
sub
outs
mov
arpl
sar
push
lds
icebp
mov
sahf
jb
sub
sbb
rcl
inc
jecxz
icebp
add
jnp
arpl
icebp
jmp
sbb
mov
test
test
dec
or
arpl
ret
sbb
cmp
pop
xchg
rol
pop
and
fsubr
push
test
(bad)
fstp
ret
cli
shl
dec
mov
rcr
xchg
jcxz
ret
or
inc
dec
ins
repz
div
mov
or
(bad)
daa
adc
repz
cmp
jmp
inc
inc
ret
enter
div
inc
cmp
or
jecxz
daa
or
mov
xchg
pushf
xor
out
cmps
ret
mov
repz
into
mov
mov
ret
xchg
(bad)
addr16
xchg
lds
adc
push
je
cmc
call
stos
cmp
mov
sub
arpl
shl
inc
movs
packuswb
popa
out
jecxz
mov
stos
adc
daa
inc
jp
hlt
jecxz
out
push
addr16
scas
pushf
arpl
add
mov
test
jp
aaa
inc
cmp
or
adc
jecxz
add
arpl
daa
cmps
scas
mov
add
pushf
sti
inc
daa
jg
push
add
mov
mov
and
adc
das
push
add
enter
jnp
jmp
xor
cmp
jl
mov
and
adc
mov
call
test
mov
test
imul
enter
lahf
inc
pop
aaa
test
mov
pop
lahf
arpl
inc
mov
or
jecxz
lahf
inc
leave
das
not
mov
pop
cmp
sbb
inc
mul
inc
fbld
add
mov
test
mov
enter
pusha
push
mov
jbe
movlps
int3
dec
cmp
je
push
mov
test
icebp
jbe
jbe
mov
ss
not
cmps
aaa
xchg
mov
not
adc
hlt
imul
cld
adc
xchg
cmc
mov
ja
mov
dec
dec
jae
xchg
addr16
aaa
cmp
mov
xchg
adc
movs
les
es
mov
ja
cmp
cmp
frstor
stc
xchg
test
std
(bad)
std
lods
sub
aad
xor
fidivr
jbe
(bad)
jl
jmp
pop
jle
ds
mov
jbe
sbb
sbb
cmp
icebp
aaa
mov
dec
ss
in
repnz
mov
pop
mov
idiv
jmp
pusha
xor
jno
mov
in
or
pop
and
movs
outs
mov
mov
push
and
lods
push
int3
fs
pop
std
idiv
pushf
jns
xor
adc
mov
fstp
cdq
push
mov
not
jbe
sahf
(bad)
mov
fwait
mov
jbe
xor
test
push
fild
ins
push
fnstcw
sar
std
std
sbb
cmc
mov
sbb
pop
std
in
imul
jecxz
or
jle
push
mov
je
pop
sti
pop
jo
jns
aaa
std
imul
sub
jge
push
sub
sahf
ss
push
std
outs
add
jge
jge
mov
(bad)
ins
sahf
mov
push
les
xchg
sub
jmp
jge
mov
(bad)
ins
push
mov
out
jge
mov
outs
std
pushf
sbb
xor
push
xor
cld
(bad)
mov
stc
xchg
mov
sbb
mov
push
icebp
(bad)
std
xchg
mov
ins
jge
cdq
(bad)
test
mov
adc
xor
in
out
out
xchg
mov
jbe
mov
loop
(bad)
out
jnp
mov
outs
pop
xchg
xor
shr
(bad)
fnstenv
adc
bound
in
ret
jg
dec
scas
loop
push
cmp
add
icebp
sub
movs
jae
xchg
lds
mov
adc
mov
xchg
push
stos
popa
jae
stos
and
and
arpl
mov
jnp
mov
shl
stos
rcr
pop
adc
push
(bad)
mov
pop
test
mov
pop
mov
inc
gs
clc
xchg
pushf
ins
mov
xchg
add
jg
pop
jno
xchg
shl
inc
xchg
aas
stos
jae
mov
aaa
retf
lock
icebp
cmp
cwde
xor
test
shl
add
jmp
(bad)
mov
sub
sub
gs
xor
retf
push
cmp
std
jae
pop
and
inc
and
jb
arpl
inc
rcr
aaa
test
gs
shl
addr16
jae
push
and
rcr
aaa
fld
inc
pop
in
arpl
sbb
add
movs
fstp
fdivrp
sar
repz
stos
rcr
and
inc
mov
xchg
or
and
push
sub
add
rcr
mov
xchg
and
push
xor
icebp
and
lods
sbb
cmp
aaa
and
rcl
in
lods
and
mov
rcl
and
adc
lds
loope
dec
xchg
inc
lahf
test
adc
jae
shl
mov
push
pusha
fwait
add
and
add
stos
jo
mov
and
mov
retf
mov
ss
ins
loope
rcr
jb
adc
fcmovnb
jnp
ja
clc
xor
adc
jae
xchg
push
cmp
test
loop
xchg
popa
cmps
cdq
xor
bound
pop
rcr
(bad)
(bad)
jno
popf
adc
les
in
jno
in
push
mov
pop
js
sar
fnstcw
(bad)
movs
call
fnstenv
cdq
push
fwait
cmp
adc
sbb
test
fisub
mov
jl
or
int
in
xchg
mov
cmp
xor
jl
lahf
adc
push
inc
mov
dec
push
ins
cdq
jbe
call
or
test
es
mov
adc
int
adc
cdq
rcr
repnz
xchg
or
mov
xchg
cld
adc
mov
pop
cmp
mov
mov
jae
pop
clc
adc
idiv
mov
xor
xchg
cmp
in
and
pop
sbb
fld
pushf
mov
pop
pop
jg
adc
adc
mov
rcl
pop
inc
adc
push
shl
push
push
sub
cmp
xchg
adc
push
fxch
rcl
pop
push
fwait
push
xchg
push
cwde
rcl
cwde
shl
pop
adc
pop
leave
xor
mov
stc
shl
pop
fnstcw
mov
aaa
stc
xor
mov
repz
(bad)
adc
cmp
fisub
mov
rcr
jp
and
lahf
(bad)
cdq
repnz
stos
jg
xor
cdq
rcr
loop
call
out
and
outs
clc
out
outs
clc
inc
call
out
dec
add
ins
mov
mov
jnp
mov
xchg
jecxz
fcom
xor
adc
je
dec
push
mov
xchg
jecxz
fmul
jbe
dec
push
mov
clc
shr
xor
sar
sar
outs
je
dec
cdq
bound
dec
sbb
mov
lods
adc
enter
pop
or
ror
in
jns
(bad)
loopne
outs
(bad)
shr
mov
jmp
enter
(bad)
xor
jb
mov
mov
jo
jo
das
sbb
jp
mov
jae
dec
aad
xchg
sbb
jno
dec
fsubr
sbb
inc
aam
pushf
push
lahf
aad
cmc
jb
mov
mov
jae
jae
cs
rcr
mov
fst
ror
adc
imul
cmp
iret
arpl
int3
adc
cdq
dec
pop
stc
pusha
pop
ds
fldcw
out
cmc
pop
je
mov
lds
inc
clc
ror
xchg
pop
mov
cs
pop
or
jmp
xor
int3
repnz
mov
xchg
stc
xchg
adc
shl
(bad)
jge
sbb
das
ss
in
and
into
mov
loopne
push
xchg
xor
add
push
aas
jns
mov
dec
jmp
sub
test
cmp
aad
jg
iret
movs
test
push
inc
nop
fcom
test
xchg
xchg
pop
inc
test
shl
daa
cs
retf
imul
dec
dec
dec
sbb
(bad)
in
sbb
gs
push
adc
xor
mov
jb
aas
add
push
out
mov
lods
cmp
add
push
test
mov
push
sub
sub
mov
or
or
adc
test
mov
adc
adc
and
and
scas
mov
dec
and
push
sub
sub
push
xchg
test
lahf
out
out
data16
pop
sbb
mov
sbb
or
adc
sub
pop
sub
cmp
pop
xchg
inc
sbb
xor
inc
and
pop
cmp
mov
(bad)
and
rol
dec
xchg
dec
pushf
fisubr
add
ins
sahf
xchg
sub
jl
ins
cmps
(bad)
mov
xor
(bad)
cmc
jmp
das
push
pop
add
call
pop
jae
push
push
and
mov
inc
push
inc
push
inc
push
jne
je
sbb
dec
inc
jno
or
xor
outs
and
cs
xor
cmps
fadd
outs
sbb
dec
xor
inc
in
repz
xor
outs
inc
add
outs
pop
jnp
jo
ret
in
or
sub
sub
sub
adc
ins
das
push
sub
sub
sub
dec
jg
dec
sbb
dec
and
inc
outs
es
pop
jmp
or
inc
dec
ins
jno
jno
mov
mov
inc
lods
mov
int3
pop
fidiv
pop
pop
cmp
jo
and
sub
sub
adc
cs
inc
dec
jns
retf
inc
and
inc
and
inc
add
inc
loope
sbb
cmp
(bad)
mov
sbb
cmp
(bad)
mov
sbb
cmp
(bad)
mov
sbb
cmp
test
rcr
out
adc
test
sub
bound
rcl
test
cli
nop
retf
mov
sti
lock
sub
stc
out
xchg
fsub
lods
rcl
out
int
loope
loop
lock
stos
fisubr
rcr
stos
shl
(bad)
fldl2e
mov
fxch
retf
xor
pushf
cmp
lahf
mov
adc
mov
adc
(bad)
stc
out
push
cmps
mov
xor
lahf
stos
test
(bad)
mov
rcl
nop
cs
sti
inc
iret
imul
aam
and
and
mov
enter
ror
dec
dec
aam
add
or
jle
je
add
repnz
div
fs
pop
xor
call
push
jnp
push
adc
mov
retf
(bad)
pop
shr
fnstenv
lock
aam
data16
or
fild
adc
xchg
movs
push
jns
into
xor
das
push
pop
test
adc
add
pusha
std
xchg
cmp
cdq
rcr
jmp
and
in
call
sub
adc
ins
mov
sar
cdq
shl
pop
add
xor
fist
aad
xor
in
jne
xor
xchg
pop
das
sub
pop
inc
or
fist
fwait
jnp
cmp
sbb
mov
mov
test
xor
or
out
adc
pusha
jge
xchg
and
jnp
jo
pusha
dec
mov
push
mov
adc
xchg
lea
bound
or
jo
inc
pop
jb
mov
adc
call
jo
xchg
pop
jae
add
daa
frstor
push
or
out
ffree
mov
mov
sbb
or
xor
mov
call
leave
add
jle
ins
fnsave
ins
xor
push
and
add
lods
nop
xchg
popf
fnstsw
sub
or
jne
nop
mov
xor
cmp
movs
nop
fnstsw
mov
push
push
xor
dec
aad
fst
jmp
inc
outs
addr16
adc
das
lahf
mov
scas
out
hlt
cs
pop
inc
push
xor
loopne
idiv
cwde
scas
pusha
test
dec
not
shr
push
sub
xor
movs
call
daa
and
movs
mov
mov
sub
inc
cmp
aad
sbb
mov
sub
and
mov
loopne
out
(bad)
and
and
pop
and
sar
mov
rcl
fld
xor
cmp
and
ja
xchg
jl
into
adc
dec
and
scas
aad
call
sub
pusha
mov
(bad)
cmp
retf
pop
jnp
(bad)
scas
inc
cmp
mov
jo
or
inc
adc
mov
mov
(bad)
and
jmp
xchg
int3
mov
cmp
push
mov
out
je
ins
nop
fs
adc
in
mov
push
aam
cmps
push
push
(bad)
loop
movs
pop
hlt
mov
mov
mov
pusha
dec
(bad)
into
nop
mov
xchg
and
loopne
adc
add
sub
adc
push
xor
push
jle
jl
aad
mov
dec
dec
mov
in
pop
mov
ret
test
scas
inc
jne
pop
cmps
das
in
and
out
adc
rol
sub
cs
pop
jne
jmp
mov
inc
daa
fist
mov
jmp
aam
in
xor
dec
mov
ret
sbb
push
mov
movs
lods
ds
imul
lds
aaa
inc
dec
nop
mov
dec
and
ss
ins
cld
aaa
add
mov
adc
mov
dec
nop
push
cmp
mov
jg
shr
test
int3
sub
push
dec
inc
pop
cmp
jecxz
push
mov
lods
inc
mov
adc
push
add
jmp
mov
and
or
cmp
outs
loope
xchg
leave
push
add
adc
pop
add
fmul
mov
sbb
adc
cmps
std
xor
ss
push
in
adc
ja
xchg
push
shl
dec
xor
in
cwde
push
pusha
call
lahf
adc
(bad)
in
out
push
pop
mov
inc
and
add
loopne
sti
test
push
aaa
in
mov
pop
adc
push
xchg
aam
ja
loop
loop
fdiv
sar
pushf
cwde
mov
adc
mov
jb
repz
ja
sar
cld
not
push
adc
je
jae
fpatan
mov
sti
jg
pop
lahf
jbe
ja
inc
int3
xchg
pop
icebp
fbstp
dec
jae
xchg
xchg
movs
jo
enter
div
sub
sti
mov
fwait
retf
out
xlat
xor
mov
pusha
jae
ja
dec
arpl
sbb
push
xchg
jg
mov
dec
mov
adc
rol
div
cwde
mov
ins
loopne
xor
rcl
push
adc
out
jg
ss
push
sar
jmp
loopne
mov
xchg
fs
sbb
mov
out
add
fsubr
jmp
(bad)
sbb
mov
mov
lods
and
out
mov
popf
sbb
(bad)
cmp
sub
cmps
push
mov
add
xor
ror
lock
mov
add
popf
mov
jecxz
mov
les
xchg
js
jbe
ror
(bad)
xlat
in
push
push
push
or
or
mov
push
out
xor
push
cmp
arpl
mov
mov
fwait
iret
sbb
cmp
mov
lahf
or
sar
call
test
xor
out
cmps
mov
and
call
cmp
mov
cld
push
adc
add
aaa
jb
sbb
lahf
dec
lahf
rcl
xor
fiadd
adc
fld
retf
movs
jge
sbb
stos
lods
movs
popf
xchg
mov
jge
sbb
push
jmp
sub
xchg
xchg
out
sub
mov
sbb
in
inc
mov
xchg
xor
int
test
dec
jp
pop
push
clc
adc
push
add
out
xchg
daa
lahf
push
xchg
daa
dec
enter
pop
dec
not
ins
fidiv
push
ds
js
pop
jbe
scas
cmp
dec
fcomp
add
add
mov
sbb
das
adc
pop
and
pushf
dec
push
inc
mov
sbb
mov
xchg
sahf
scas
pop
jmp
jmp
(bad)
pusha
sti
xchg
push
ins
cmp
adc
push
pop
shr
lds
and
fld
add
adc
imul
xchg
leave
lahf
repnz
ds
jb
pop
pop
fcom
cdq
dec
rol
repz
cmc
mov
imul
and
cmp
jbe
call
movs
sbb
mov
push
cmp
xor
fcomp
stc
mov
mov
push
mov
stc
and
push
jle
jmp
push
sbb
(bad)
push
lods
popf
stc
fwait
add
leave
or
stc
xchg
stos
dec
or
pop
and
push
out
inc
addr16
cmps
mov
pop
outs
mov
js
jne
sbb
cmp
or
gs
cmp
popa
mov
jbe
mov
push
mov
loop
fdivr
sbb
jbe
scas
cmc
repnz
mov
mov
push
fdivr
lods
mov
mov
xor
sub
jmp
xchg
out
lods
rcr
loopne
adc
mov
mov
cmps
pop
adc
mov
xchg
xchg
rep
fsub
mov
xchg
mov
xlat
popf
adc
ficomp
lods
bound
ror
(bad)
fst
je
inc
pop
in
adc
dec
pop
imul
inc
(bad)
pusha
in
lods
push
cmp
adc
adc
int3
xchg
shl
rcl
mov
adc
inc
dec
sub
dec
adc
(bad)
push
jae
aas
fcomip
fs
mov
push
or
cdq
ret
mov
inc
xor
inc
cld
jl
ds
cmp
mov
outs
mov
shl
cmp
retf
mov
mov
mov
xchg
pop
adc
cmp
lods
add
shl
xor
and
xchg
sub
and
outs
mov
adc
push
cmps
mov
xchg
mov
ret
fsub
inc
cmc
inc
mov
test
cmp
mov
mov
mov
pop
jns
js
fisubr
sbb
(bad)
inc
daa
push
mov
cmp
pop
mov
push
retf
(bad)
add
inc
and
cmp
cmp
jne
inc
loope
or
fmul
imul
mul
jb
mov
ds
xchg
jb
cmp
sbb
mov
dec
in
xor
(bad)
iret
inc
stc
pop
jle
retf
add
clc
jo
mov
repz
call
sbb
fnstcw
mov
movs
jge
aam
(bad)
mov
ja
adc
icebp
dec
(bad)
out
cmp
xor
xchg
repnz
dec
sbb
xor
adc
fs
nop
in
ins
xchg
dec
outs
(bad)
inc
mov
jmp
outs
xchg
sbb
mov
gs
dec
scas
loope
dec
addr16
jge
icebp
test
cmp
add
stos
pusha
jns
lods
sar
leave
aad
int3
cdq
adc
inc
jmp
push
sub
sub
(bad)
cdq
ret
sub
call
mov
xchg
jno
sahf
jmp
int3
cmp
loop
fcmovne
jp
pop
and
fsubr
cmp
enter
push
dec
fadd
fldcw
iret
fsubp
jmp
aas
jne
cli
sbb
mov
sbb
cdq
jne
rcr
into
mov
push
iret
sbb
jg
sbb
test
std
pop
(bad)
mov
inc
dec
cmps
inc
retf
cdq
mov
aaa
iret
test
mov
pop
mov
mov
ss
je
pop
jp
push
fld
dec
cwde
sub
pop
mov
mov
pusha
push
iret
test
dec
call
pusha
fucomi
dec
outs
dec
sub
dec
rcr
aaa
pop
mov
aad
sub
and
sbb
stc
mov
pop
test
mov
dec
stos
xchg
neg
dec
ret
lods
xor
push
stc
dec
fisttp
push
jle
(bad)
push
out
and
fcomp
test
sub
leave
je
inc
jne
imul
lods
jne
scas
shr
cmps
pop
xor
enter
mov
ret
cmps
out
inc
sub
sbb
les
aas
mov
cli
pop
sbb
adc
sub
xchg
aad
push
mov
fdivr
call
nop
sbb
dec
pop
dec
fcomp
cmp
pop
cmp
sub
xor
xor
mov
mov
mov
push
shl
iret
cmp
sub
or
iret
or
cmp
mov
sbb
into
mov
xor
mov
pop
cmp
leave
mov
mov
add
mov
mov
mov
int
lea
iret
cmp
mov
mov
cmp
fstp
fnsave
das
cmp
adc
or
fistp
jnp
cmps
jecxz
mov
mov
stc
push
mov
mov
stos
in
pop
pop
jnp
mov
adc
inc
dec
mov
ins
cmp
test
stc
pop
sbb
jg
dec
jg
shl
or
pop
fstp
push
push
into
test
mov
call
jns
push
int
std
rcr
aas
out
or
fdiv
lahf
mov
out
lods
daa
in
loope
mov
add
dec
outs
pop
adc
mov
loope
and
jae
add
dec
pop
scas
mov
xor
arpl
and
shl
push
dec
add
jno
pop
push
mov
push
mov
dec
and
cmp
(bad)
cmc
push
mov
inc
or
inc
hlt
rol
shl
xor
push
pusha
loopne
mov
xchg
popa
inc
dec
and
cmc
sub
mov
adc
xchg
push
adc
and
push
arpl
xor
shl
mov
test
adc
xlat
and
movs
rcl
mov
inc
inc
or
and
addr16
push
jb
aaa
inc
es
inc
jno
mov
pop
add
mov
mov
push
aam
fcomi
mov
or
arpl
push
nop
call
in
add
imul
stos
clc
cdq
jmp
add
movs
cdq
mov
xor
pusha
out
lock
loop
lods
test
test
lds
cli
shr
test
inc
push
or
loopne
xchg
fwait
ret
fsub
sbb
add
inc
push
mov
mov
cmp
stc
aad
jmp
lahf
ret
leave
aad
inc
sbb
in
xor
lods
test
add
rol
push
jb
adc
sub
sbb
aas
xor
cdq
loopne
in
and
ret
add
inc
das
mov
push
mov
pusha
cli
loopne
sbb
pushf
jno
adc
les
push
out
mov
cmc
mov
mov
movs
imul
iret
outs
sar
push
aas
mov
xor
ror
add
(bad)
(bad)
les
iret
cld
xor
jle
dec
or
test
jmp
idiv
int3
inc
push
stos
and
outs
mov
xchg
(bad)
adc
aam
enter
nop
(bad)
push
adc
pop
inc
mov
lahf
cmps
inc
fs
push
test
mov
or
mov
push
and
mov
(bad)
das
setbe
test
xchg
loopne
leave
add
sbb
cmp
pop
cmc
inc
xchg
sbb
pop
cmp
sub
adc
das
loop
xor
(bad)
mov
stos
xor
es
loopne
sub
enter
ror
or
scas
das
mov
repz
cld
int
or
and
in
lds
and
xchg
mov
add
cmp
mov
and
ins
jnp
mov
shl
enter
mov
dec
mov
mov
cwde
scas
enter
out
popa
dec
pop
mov
pop
clc
shl
xchg
(bad)
mov
add
add
cdq
imul
nop
push
jb
scas
pop
pop
and
inc
sti
call
jb
dec
enter
mov
mov
mov
inc
xchg
lds
ja
adc
mov
popa
sub
sahf
mov
shl
test
rol
pop
fnsave
push
loope
mov
arpl
jg
cmp
inc
fwait
xchg
push
and
enter
cmc
cdq
addr16
add
lds
ret
(bad)
mov
jg
pop
sbb
xlat
test
in
popf
jge
aaa
mul
mov
pop
push
nop
or
out
inc
adc
pop
adc
inc
mov
cmp
xchg
pop
pop
adc
xchg
data16
(bad)
mov
add
and
enter
cld
push
mov
fdivrp
dec
dec
jle
out
lods
sahf
mov
cli
mov
push
inc
inc
xor
mov
adc
lods
call
or
mov
cmovg
js
sub
stc
aas
arpl
jl
and
mul
std
mov
stc
outs
ins
adc
and
aas
iret
paddusw
pusha
icebp
sbb
call
and
mov
mov
fs
add
nop
adc
ror
mov
and
test
xchg
ret
push
jo
push
repz
or
aas
pop
mov
xor
outs
loope
out
scas
aas
not
sub
pop
mov
xchg
pop
(bad)
popa
mov
repnz
dec
mov
xchg
push
movs
scas
iret
add
mov
(bad)
push
push
stc
pop
in
add
pop
pusha
jmp
out
mov
ins
(bad)
mov
cmps
loopne
adc
push
popf
dec
imul
pop
or
sub
push
push
cmp
adc
dec
(bad)
cdq
mov
call
das
retf
jl
jbe
pop
sbb
dec
inc
popf
(bad)
or
inc
in
(bad)
and
scas
mov
jae
mov
arpl
and
mov
push
push
cwde
add
mul
mov
loopne
out
ins
cmp
and
sbb
and
hlt
add
mov
(bad)
fidiv
sub
sbb
lahf
je
jb
xchg
out
mov
xor
mov
dec
ins
(bad)
icebp
out
mov
scas
push
imul
or
stos
pushf
mov
dec
xchg
call
or
cmp
xchg
stos
imul
sub
not
(bad)
arpl
mov
imul
bound
mov
pop
nop
xchg
inc
ss
(bad)
(bad)
rcr
push
adc
std
xchg
nop
and
retf
ds
adc
fs
jecxz
dec
and
and
(bad)
jo
loop
dec
arpl
sbb
cs
lock
cmp
sbb
sub
push
dec
inc
mov
adc
jmp
jns
push
nop
mov
inc
xchg
scas
ss
aas
jle
std
pushf
bound
scas
loopne
mov
or
jmp
ficom
ror
inc
mov
jae
inc
sub
or
xchg
gs
enter
test
das
loope
jo
sbb
add
xchg
jns
push
fstp
std
jo
(bad)
push
or
jo
fs
adc
sub
jb
repnz
fneni(8087
jle
sar
inc
nop
dec
adc
das
nop
psrad
enter
shl
xchg
inc
mov
clc
pusha
nop
dec
test
into
lods
cs
or
xchg
cmp
fldcw
mov
dec
sbb
push
push
xlat
mov
mov
mov
add
rcl
jne
out
push
sbb
clc
push
mov
mov
ret
xor
cmp
cmp
loope
hlt
mov
les
jae
nop
mov
nop
or
xchg
scas
and
push
(bad)
adc
icebp
mov
icebp
movs
loop
mov
jae
ins
rcr
jle
mov
pop
test
sbb
or
scas
aad
nop
icebp
test
test
loopne
sub
add
and
fisub
cli
mov
adc
add
xor
mov
add
adc
stos
xchg
pop
(bad)
and
cmp
adc
pop
call
pop
sub
scas
into
mov
or
bnd
imul
adc
pop
and
adc
(bad)
icebp
cli
call
lods
mov
stos
jl
push
jl
jns
mov
or
imul
enter
cld
fsubr
sahf
gs
adc
shr
dec
stc
pop
push
daa
pop
(bad)
pop
push
into
pop
call
movs
sub
pop
cld
js
and
loop
sbb
cmps
fiadd
inc
int
aaa
ret
leave
jg
in
aad
inc
push
fimul
mov
sbb
dec
add
xor
in
jle
cmp
fstp
ret
(bad)
mov
int
idiv
push
and
lock
dec
das
push
(bad)
pop
outs
std
lea
inc
repz
jns
dec
sub
inc
stos
inc
push
packssdw
paddusw
pusha
shr
fld
add
outs
das
fsubr
mov
sub
or
lahf
mov
cs
dec
or
ret
retf
out
xchg
push
lock
jne
into
jge
imul
sahf
or
cdq
scas
iret
or
mov
cmp
aas
mov
sub
push
in
cdq
cdq
call
hlt
out
cs
dec
add
cmp
mov
call
mov
mov
push
mov
mov
call
lea
push
call
mov
call
test
je
lea
push
lea
push
call
mov
call
mov
mov
sub
push
call
lea
add
mov
mov
lea
push
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
xor
push
push
mov
call
mov
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
add
call
push
mov
push
push
lea
call
push
lea
push
call
mov
call
test
jne
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
push
push
push
jmp
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
push
lea
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
call
mov
neg
sbb
add
push
mov
add
call
push
mov
call
mov
mov
push
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
push
mov
call
mov
push
mov
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
sub
push
call
lea
add
mov
mov
lea
push
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
push
push
mov
call
mov
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
add
call
push
mov
push
push
lea
call
push
lea
push
call
mov
call
test
jne
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
push
push
push
jmp
mov
cmp
je
mov
call
test
je
mov
call
test
je
mov
call
test
je
call
mov
mov
push
push
push
mov
call
add
call
mov
push
push
push
lea
call
push
lea
push
jmp
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
lea
push
mov
mov
call
mov
call
lea
call
mov
lea
add
push
mov
call
mov
mov
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
mov
mov
call
mov
mov
push
push
mov
call
add
mov
mov
push
call
mov
call
mov
mov
call
lea
push
call
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
mov
mov
and
mov
fild
and
mov
mov
fild
mov
sub
lea
fchs
faddp
fdiv
fstp
push
push
push
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
call
mov
mov
add
push
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
lea
push
push
call
mov
mov
add
push
push
lea
call
call
mov
mov
push
push
mov
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
cmp
jne
mov
push
push
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
lea
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
lea
call
mov
call
movzx
push
push
push
lea
call
lea
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
cmp
jne
mov
push
push
push
call
call
mov
mov
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
jne
cmp
je
lea
call
lea
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
lea
call
mov
call
movzx
push
push
call
mov
push
lea
call
push
push
lea
call
mov
mov
mov
push
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
push
call
mov
call
xor
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jle
push
push
call
add
cmp
je
sub
sar
cmp
je
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
call
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
mov
mov
mov
push
push
push
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
mov
call
test
jne
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
mov
push
mov
call
mov
lea
push
push
mov
call
mov
call
mov
mov
cmp
setne
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
push
lea
call
mov
mov
mov
mov
lea
push
mov
push
push
lea
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
push
lea
call
mov
lea
push
mov
call
mov
lea
call
mov
call
test
je
mov
call
test
jne
mov
call
test
je
mov
call
test
je
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
lea
push
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
mov
push
push
call
add
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
cmp
je
push
call
mov
call
test
jne
mov
call
test
je
mov
call
test
jne
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
lea
push
mov
call
mov
mov
call
test
sete
mov
lea
call
cmp
je
lea
push
mov
call
mov
lea
push
mov
call
mov
lea
call
mov
lea
call
push
push
lea
call
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
push
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
push
push
push
push
lea
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
mov
push
push
push
call
add
mov
lea
call
mov
mov
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
call
mov
mov
push
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
push
jne
push
push
mov
jmp
lea
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
push
mov
lea
push
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
mov
add
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
je
lea
call
test
je
lea
call
test
jne
mov
lea
push
mov
call
push
push
lea
push
lea
call
cmp
jne
call
mov
mov
push
push
push
mov
call
add
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
pop
pop
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
mov
call
lea
mov
call
lea
lea
push
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
call
push
mov
call
call
mov
push
lea
mov
call
mov
call
mov
call
push
mov
lea
mov
push
mov
call
mov
mov
mov
call
call
mov
mov
push
push
push
push
mov
call
add
push
lea
lea
push
mov
call
lea
push
mov
call
lea
mov
call
mov
push
mov
call
lea
push
call
lea
mov
call
mov
push
mov
call
mov
call
push
mov
mov
call
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
lea
push
mov
mov
call
mov
call
lea
mov
mov
call
test
jne
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
mov
call
lea
add
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
call
test
je
mov
push
push
call
test
je
lea
call
mov
push
push
lea
call
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
lea
call
mov
push
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
mov
sub
push
call
add
add
mov
mov
lea
push
lea
call
mov
push
push
push
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
lea
call
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
lea
call
mov
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
mov
mov
pop
ret
mov
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
push
lea
mov
call
mov
mov
mov
mov
lea
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
call
test
jne
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
cmp
je
push
mov
call
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
push
call
cmp
lea
jl
cmp
jne
mov
mov
lock
mov
pop
pop
pop
ret
mov
mov
mov
push
push
mov
call
mov
test
jne
jmp
mov
mov
mov
add
push
add
push
push
lea
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
lea
push
mov
je
cmp
lea
jge
cmp
jge
push
call
mov
mov
pop
mov
pop
ret
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
call
add
mov
pop
pop
ret
call
cmp
je
call
mov
call
xor
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
push
push
mov
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
mov
je
lea
mov
add
sub
jne
cmp
jle
mov
push
lea
call
mov
mov
push
push
push
push
call
add
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
int3
push
mov
mov
push
push
push
mov
push
mov
mov
mov
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
xor
push
mov
mov
mov
mov
mov
push
push
lea
push
push
call
mov
call
mov
mov
push
push
lea
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
sub
mov
push
mov
call
add
add
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
lea
mov
push
call
add
cmp
mov
jne
pop
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
shr
push
mov
add
mov
movzx
push
push
push
call
test
je
push
push
push
call
mov
add
test
jne
pop
pop
xor
pop
pop
ret
movzx
call
push
push
push
push
push
lea
push
push
push
mov
call
mov
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
movzx
mov
push
push
push
push
push
mov
push
push
call
push
call
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
mov
pop
pop
ret
push
call
int3
int3
int3
int3
push
mov
push
push
mov
test
mov
jne
call
pop
pop
pop
ret
mov
test
jne
push
call
mov
mov
mov
push
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
mov
cmp
mov
push
ja
lea
push
push
push
call
jmp
push
push
push
call
add
test
pop
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
ret
int3
int3
push
mov
sub
mov
push
xor
cmp
push
mov
mov
je
mov
push
mov
xor
cmp
jle
mov
cmp
jne
test
jne
mov
mov
sub
mov
sub
sub
or
mov
jge
push
mov
call
mov
mov
mov
add
mov
lea
sar
cmp
jl
test
je
test
jl
mov
cmp
jg
mov
mov
mov
pop
mov
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
test
push
push
mov
jg
jl
mov
cmp
jae
mov
xor
jmp
mov
push
push
push
push
call
push
push
lea
mov
mov
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
add
mov
mov
adc
mov
cmp
jl
jg
cmp
jbe
push
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
push
mov
push
mov
test
je
mov
mov
mov
or
jne
mov
push
push
mov
call
mov
mov
push
push
mov
call
mov
pop
pop
ret
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
call
cmp
je
push
call
mov
call
push
push
call
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
mov
jne
jmp
lea
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
mov
lea
push
call
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
jmp
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
lea
add
cmp
je
cmp
lea
jl
mov
cmp
jne
push
call
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
push
lea
push
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
xor
test
setne
mov
test
jne
push
call
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
jmp
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
call
push
lea
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
jne
mov
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
cmp
jne
xor
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
test
setne
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
test
je
mov
call
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
call
mov
add
test
je
push
lea
call
mov
call
mov
push
push
push
mov
call
mov
add
lea
push
mov
call
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
mov
test
je
mov
push
push
call
add
cmp
jne
pop
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
sub
push
mov
mov
mov
mov
test
mov
jge
mov
push
call
add
add
add
mov
test
je
mov
push
push
call
add
cmp
jne
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
movzx
mov
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
je
lea
mov
add
sub
jne
mov
cmp
jle
mov
push
lea
call
mov
push
push
push
push
call
mov
add
test
jne
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
call
mov
push
call
mov
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
push
je
mov
push
push
call
add
cmp
jne
mov
push
push
call
mov
mov
push
push
call
mov
add
test
je
mov
push
push
call
add
mov
pop
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
push
mov
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
push
push
push
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
call
add
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
xor
push
mov
mov
call
mov
call
mov
push
push
lea
push
lea
mov
mov
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
add
lea
push
adc
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
push
call
push
push
mov
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
test
je
mov
add
mov
call
cmp
ja
jb
cmp
jae
call
mov
lea
push
call
mov
call
mov
mov
lea
push
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
push
push
lea
call
push
lea
push
call
mov
sub
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
pop
pop
mov
mov
pop
ret
push
lea
call
mov
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jmp
mov
movsx
push
lea
push
push
call
add
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
push
call
cmp
je
add
cmp
jle
push
push
call
test
je
nop
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
jmp
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
lea
call
mov
test
je
push
call
add
mov
mov
pop
xor
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
push
lea
call
test
setne
call
mov
mov
add
push
call
lea
mov
mov
movzx
mov
mov
push
push
push
push
call
add
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
cmp
jne
push
push
lea
call
mov
call
mov
mov
movzx
push
push
push
push
push
call
add
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
call
push
mov
mov
push
mov
call
mov
push
mov
mov
push
call
mov
mov
call
mov
add
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
jne
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
push
push
push
push
push
lea
push
call
test
jne
call
push
push
lea
call
push
lea
push
call
mov
lea
push
mov
push
push
call
test
jne
mov
mov
push
call
cmp
jne
call
push
push
lea
call
push
lea
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
push
lea
call
mov
lea
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
nop
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
push
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
push
push
push
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
push
push
lea
push
push
mov
call
mov
call
mov
call
mov
mov
push
push
push
mov
call
add
push
lea
push
lea
call
mov
call
mov
push
push
push
mov
call
add
push
lea
call
test
jne
call
mov
mov
push
push
push
call
add
jmp
push
call
mov
test
mov
jne
mov
call
mov
mov
push
push
push
push
call
mov
add
push
push
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
lea
call
test
jne
call
mov
mov
push
push
call
add
jmp
mov
push
call
test
jne
call
mov
mov
add
call
mov
push
push
push
call
add
jmp
lea
call
mov
push
push
lea
call
test
je
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
mov
call
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
mov
push
mov
push
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
mov
add
cmp
jl
push
push
call
add
test
je
sub
sar
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
jmp
push
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jle
mov
push
lea
call
mov
push
call
add
cmp
jge
call
cmp
je
call
mov
push
push
mov
call
add
jmp
lea
call
mov
call
movzx
push
push
push
lea
call
mov
push
push
push
push
call
cmp
jne
call
mov
mov
push
push
call
jmp
call
mov
mov
push
push
call
mov
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
pop
pop
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
movzx
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
call
push
push
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
push
call
lea
add
push
call
mov
lea
call
or
mov
lea
call
mov
mov
call
push
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
call
mov
mov
jmp
mov
push
mov
lea
call
mov
mov
mov
ret
call
push
push
lea
call
mov
push
mov
lea
call
mov
lea
call
mov
mov
mov
ret
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
mov
mov
mov
cmp
jge
push
call
mov
cmp
je
cmp
je
mov
lea
mov
lea
cmp
mov
jae
push
push
call
mov
lea
add
cmp
jae
mov
push
push
call
mov
mov
add
add
lea
push
mov
mov
push
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
cmp
jge
mov
cmp
je
mov
mov
call
cmp
jne
call
mov
mov
mov
call
mov
mov
lea
mov
push
push
mov
call
mov
jmp
mov
mov
mov
mov
test
je
mov
mov
call
test
jne
call
mov
mov
mov
call
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
push
je
jmp
lea
mov
cmp
je
mov
lea
mov
cmp
ja
sub
mov
mov
mov
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
or
mov
lea
mov
mov
mov
sub
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
or
add
jne
mov
cmp
jne
mov
cmp
jbe
mov
sub
cmp
lea
je
mov
push
call
add
cmp
ja
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
push
je
mov
push
push
call
add
cmp
je
mov
call
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
cmp
push
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
jmp
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
add
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
push
lea
push
lea
call
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
test
sete
test
jne
call
mov
mov
push
push
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
push
lea
push
lea
call
push
lea
call
lea
call
lea
call
test
je
push
push
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
add
push
call
lea
mov
mov
mov
add
push
call
lea
mov
mov
mov
mov
push
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
jne
pop
pop
pop
mov
push
push
call
call
mov
push
push
mov
call
add
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
mov
mov
push
call
mov
call
or
mov
mov
call
lea
push
mov
call
mov
add
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
push
call
mov
call
test
jne
lea
call
mov
mov
push
call
push
push
push
lea
push
push
call
add
lea
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
push
mov
mov
push
mov
call
mov
call
mov
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
jmp
lea
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
or
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
jne
mov
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
mov
jge
mov
cmp
je
push
call
mov
jmp
push
lea
push
lea
call
mov
call
mov
cmp
mov
jl
mov
lea
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
lea
call
push
lea
call
mov
mov
push
push
lea
call
mov
push
lea
call
test
jne
push
push
push
mov
push
call
add
test
jne
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
cmp
jle
mov
cmp
je
push
call
mov
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
call
add
cmp
jne
mov
push
lea
or
push
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
cmp
jne
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
lea
call
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
mov
push
push
push
push
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
mov
mov
add
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
push
push
push
push
mov
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
push
push
lea
call
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
lea
call
push
lea
call
lea
call
mov
mov
mov
push
mov
push
lea
call
test
jne
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
jmp
mov
push
mov
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
push
mov
mov
lea
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
mov
ret
mov
lea
call
mov
lea
call
mov
jmp
call
mov
mov
push
push
push
mov
call
add
jmp
call
mov
push
push
mov
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
call
push
push
push
lea
call
push
lea
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
call
test
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
call
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
push
add
call
add
cmp
jle
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
call
add
cmp
jl
push
call
add
cmp
jg
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
test
jne
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
push
mov
call
add
cmp
jne
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
call
push
push
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
lea
call
cmp
jne
mov
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
sete
test
sete
test
je
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
lea
push
push
push
push
lea
call
push
lea
call
mov
call
push
lea
mov
mov
push
call
mov
mov
push
push
lea
push
lea
call
push
lea
call
mov
mov
call
call
mov
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
pop
xor
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
push
lea
call
mov
mov
push
push
lea
push
push
call
mov
mov
add
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
push
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
jmp
mov
xor
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
add
mov
push
mov
call
add
mov
mov
mov
mov
add
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
call
mov
lea
call
mov
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
add
lea
call
lea
call
test
je
push
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
lea
call
push
lea
call
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
xor
test
setne
push
lea
push
push
push
call
mov
mov
add
lea
lea
mov
add
test
jne
mov
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
call
test
jne
pop
pop
mov
lea
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jge
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
push
mov
call
add
cmp
jl
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
mov
push
call
mov
push
mov
lea
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
lea
mov
mov
add
test
jne
sub
sar
push
lea
mov
push
push
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
push
mov
call
add
cmp
jle
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
push
push
lea
call
mov
mov
test
jge
push
call
movzx
cmp
jne
cmp
jge
push
call
movzx
cmp
je
push
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
mov
call
test
je
call
mov
mov
push
push
call
add
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
lea
push
push
lea
push
lea
mov
call
mov
lea
push
push
lea
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
mov
cmp
leave
stos
lea
dec
pop
aaa
iret
es
add
pop
add
nop
nop
nop
nop
nop
nop
dec
cmp
stc
(bad)
mov
es
xchg
jmp
mov
xor
bsf
bound
inc
stos
push
xor
into
pop
push
mov
out
fs
cmp
push
mov
lock
cli
push
and
cwde
fist
jle
pop
dec
test
test
(bad)
std
rcl
push
adc
and
retf
sbb
mov
icebp
mov
dec
call
cmp
ror
and
std
xchg
pushf
push
push
das
loope
jae
mov
fcomp
scas
jmp
fisttp
mov
aas
movs
xor
sbb
adc
iret
lods
popf
sbb
arpl
dec
jno
push
pop
jb
inc
std
cmps
in
push
fistp
adc
retf
jle
lods
push
mov
call
and
jnp
pop
add
pop
mov
das
mov
(bad)
fs
jae
xchg
out
out
sar
mov
daa
std
push
imul
movs
inc
jae
out
lods
retf
std
push
jae
retf
xor
xchg
xchg
mov
test
mov
lods
int
xor
dec
das
dec
xchg
rcl
retf
jle
mov
in
outs
jmp
mov
stos
fs
dec
inc
cmps
mov
cmp
clc
aaa
iret
stos
cwde
xchg
cmp
and
mov
xchg
ds
pushf
ja
add
inc
push
nop
inc
or
cmp
pop
lea
dec
lea
mov
aas
jae
call
iret
dec
xchg
loopne
add
jge
lds
mov
push
jmp
mov
fwait
daa
imul
ins
xor
test
xchg
inc
mov
lods
ret
btr
sub
leave
sub
dec
pop
mov
test
mov
jle
inc
in
cdq
out
nop
out
js
scas
shr
jb
addr16
pop
mov
test
mov
stc
sbb
stos
(bad)
out
cwde
dec
cmp
push
out
push
sbb
xor
ss
pop
aaa
sub
or
stos
out
pop
inc
test
data16
inc
in
lea
pop
mov
les
cli
jb
xor
lods
shl
imul
cmp
and
and
mov
out
in
xchg
sahf
retf
and
sbb
cdq
push
fmul
inc
nop
xchg
pop
inc
push
mov
and
into
mov
and
mov
ror
out
dec
loopne
outs
mul
pop
push
outs
ffree
inc
retf
es
imul
mov
dec
pop
mov
push
fs
cwde
ror
cld
out
cmps
fistp
pushf
rcr
push
push
inc
lods
rcr
movs
push
and
fs
cwde
xor
push
mov
cmp
sub
nop
jecxz
inc
jnp
shr
and
retf
push
push
mov
xchg
jmp
mov
jne
add
popa
rcr
scas
leave
fistp
and
mov
sub
rcl
and
push
xchg
out
pop
dec
test
rol
jno
pop
js
add
mov
dec
xor
test
inc
aas
inc
and
fimul
push
inc
cmps
jbe
mov
cmp
ror
cmp
mov
in
mov
cmp
dec
aaa
aaa
iret
jbe
pop
dec
mov
push
mov
cmp
dec
aas
lods
(bad)
sahf
rol
pop
push
push
jmp
popw
dec
mov
adc
mov
lea
jb
fld
ret
(bad)
(bad)
nop
mov
push
sub
mov
xor
retf
or
mov
sbb
push
arpl
loop
cmp
sbb
shr
lock
push
jmp
popw
outs
mov
retf
xchg
mov
sbb
call
fmul
jno
inc
lock
mov
enter
fcmovne
mov
fnstcw
sbb
cmps
mov
cld
out
adc
aas
jmp
or
lea
fstp
mov
pusha
dec
mov
cmps
(bad)
xor
loopne
daa
pop
mov
or
scas
shl
les
and
mov
or
outs
adc
push
clc
aaa
inc
pusha
rcl
dec
iret
loope
jecxz
jmp
add
jne
mov
into
es
xchg
repz
sti
inc
out
mov
dec
push
bound
nop
cwde
push
push
cmp
dec
aam
shl
sbb
mov
sub
push
sti
mov
xor
cld
mov
pop
mov
or
scas
shl
aas
mov
imul
mov
xor
mov
xor
dec
pop
fmul
lods
shl
xor
and
ja
xor
cbw
call
out
fimul
rol
mov
mov
and
add
lods
xor
push
cmp
mov
inc
ins
sti
outs
loope
lea
retf
jae
jmp
nop
test
push
xor
pushf
jno
mov
dec
ins
mov
fcmove
mov
movs
(bad)
cwde
or
pop
aaa
inc
imul
out
ins
ss
jb
test
xor
hlt
aad
fwait
xlat
call
lods
fcomp
dec
pop
aaa
dec
sbb
imul
rcr
sub
cwde
xor
add
scas
(bad)
ss
sbb
or
dec
in
push
ret
and
outs
out
mov
inc
xchg
jmp
mov
and
sbb
mov
mov
stos
or
rcr
imul
stos
xchg
repnz
ds
jb
ror
aaa
out
sbb
inc
xchg
dec
push
inc
jae
cmp
jbe
push
cmp
inc
mov
cmp
int
ins
call
or
mov
fwait
mov
test
mov
mov
les
js
xchg
test
jmp
or
aas
movs
push
aas
cmp
cmp
cmp
int
jecxz
dec
cmp
sbb
dec
pop
aaa
(bad)
mov
jne
mov
into
clc
inc
shr
xchg
mov
cmps
xlat
add
adc
ret
and
adc
rol
rcl
aam
repz
(bad)
in
mov
ss
ret
paddd
dec
ins
xchg
dec
inc
mov
ret
loope
sar
iret
(bad)
dec
push
(bad)
lock
outs
push
push
out
mov
aas
movs
fist
xor
jns
inc
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
dec
lock
mov
lea
call
push
lea
push
lea
call
mov
call
mov
call
mov
mov
push
push
push
push
mov
call
mov
add
push
push
push
push
call
test
je
push
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
push
call
add
mov
mov
test
je
mov
call
mov
jmp
xor
mov
lea
push
lea
call
add
mov
mov
push
push
mov
call
mov
mov
test
je
mov
jmp
mov
push
lea
push
push
push
push
push
push
mov
call
mov
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
push
push
call
test
je
mov
cmp
jne
push
push
push
push
lea
push
call
test
je
mov
sub
je
sub
je
sub
jne
push
call
mov
call
jmp
call
mov
call
jmp
mov
push
push
push
push
call
call
mov
mov
push
push
push
push
call
lea
push
call
lea
push
call
push
call
lea
push
push
call
test
jne
mov
push
push
lea
mov
call
mov
and
cmp
pop
je
cmp
je
cmp
jne
call
mov
mov
push
push
push
mov
call
lea
add
cmp
jne
call
push
push
push
lea
call
mov
push
mov
call
mov
lea
call
push
lea
call
push
lea
push
call
push
call
add
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
cmp
je
push
push
lea
call
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
call
mov
mov
push
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
cmp
mov
je
call
cmp
je
call
cmp
je
call
mov
mov
push
push
push
call
add
jmp
call
mov
mov
push
push
push
call
add
lea
push
push
mov
call
push
call
test
je
lea
push
push
push
call
mov
push
push
push
lea
push
push
push
mov
mov
call
push
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
mov
test
je
call
push
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
mov
call
mov
pop
and
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
push
lea
call
mov
call
push
push
lea
push
lea
mov
call
mov
call
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
call
mov
call
mov
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
mov
cmp
je
mov
cmp
je
push
push
lea
call
mov
mov
push
push
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
movzx
movzx
push
push
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
push
lea
push
call
mov
mov
push
push
push
push
mov
mov
mov
mov
call
push
push
push
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
add
mov
call
mov
xor
cmp
je
mov
mov
cmp
mov
mov
je
mov
jmp
mov
mov
mov
add
mov
jne
mov
cmp
je
lea
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
je
push
mov
mov
mov
mov
mov
mov
add
mov
mov
call
cmp
jne
call
mov
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
mov
pop
mov
pop
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
xor
cmp
jne
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
cmp
je
call
mov
call
push
lea
push
lea
call
mov
call
test
sete
cmp
jne
push
push
lea
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
jne
mov
cmp
jne
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
cmp
jne
call
mov
mov
push
push
push
call
push
call
add
mov
mov
cmp
je
mov
call
mov
jmp
xor
mov
call
push
mov
call
mov
call
call
mov
call
call
mov
mov
cmp
je
mov
jmp
xor
call
mov
call
mov
push
call
mov
cmp
je
push
call
mov
call
mov
cmp
je
push
push
push
lea
push
call
mov
call
mov
push
lea
mov
mov
push
call
mov
call
mov
mov
call
mov
lea
call
mov
cmp
je
call
mov
mov
push
push
push
mov
call
mov
add
push
push
call
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
mov
mov
push
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
lea
push
lea
call
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
add
lea
lea
push
push
push
lea
call
push
lea
mov
call
mov
mov
mov
mov
push
add
call
add
cmp
jle
call
xlat
pop
ret
fwait
ret
lds
(bad)
dec
aas
adc
pop
mov
add
add
cmps
cmp
mov
out
xchg
mov
xlat
xor
add
xor
sub
movs
inc
gs
arpl
jno
inc
xchg
sbb
(bad)
in
mov
push
push
das
call
cli
(bad)
int
mov
addr16
mov
mov
fdiv
cmp
mov
mov
retf
lea
fisttp
fs
pop
or
fsub
mov
pusha
or
inc
xor
daa
pop
xor
sub
push
in
out
aad
rcl
je
ror
pusha
push
jns
inc
cs
hlt
sbb
push
and
je
pop
mov
sbb
inc
stc
push
shr
fmul
dec
xor
out
sbb
fcom
xlat
(bad)
sub
(bad)
xchg
out
mov
xchg
push
aad
mov
shl
aas
or
cmc
add
xor
(bad)
(bad)
or
aaa
daa
mov
mov
dec
add
push
stc
jo
push
and
mov
inc
retf
iret
pop
mov
fnsave
test
add
rcl
test
cmp
or
in
jne
iret
add
inc
shl
mov
push
aad
push
out
push
xchg
adc
(bad)
or
shl
or
dec
test
adc
loop
pop
push
das
(bad)
mov
push
jecxz
xchg
push
and
ins
cwde
lods
inc
jns
rcl
mov
sub
jle
stc
mov
hlt
mov
das
jge
ds
addr16
daa
xchg
lahf
pop
mov
jg
xchg
or
push
mov
push
xchg
dec
aas
mov
or
loope
sbb
push
push
outs
push
pop
mov
cld
enter
loopne
in
rcl
adc
mov
scas
xchg
xchg
ins
(bad)
xchg
mov
sbb
in
xor
sub
sub
imul
inc
rcr
xor
inc
les
ins
mov
jno
jno
or
and
pop
mov
push
jns
popa
ret
cmp
add
mov
mov
sub
or
movs
push
push
xlat
shl
push
xor
pusha
and
xchg
inc
cmp
call
xchg
ins
sub
pop
jne
pop
imul
add
xchg
test
jbe
out
es
jp
sbb
cmps
sub
cmps
pop
test
(bad)
xor
addr16
rol
push
inc
out
xchg
sub
dec
popf
sbb
mov
retf
icebp
int3
pusha
or
inc
out
jmp
aas
loope
xor
cwde
mov
xrelease
gs
xchg
(bad)
movs
retf
xchg
mov
call
jno
and
add
in
sub
sbb
inc
jl
movs
xchg
mov
mov
sub
or
sub
xlat
shl
and
or
jge
js
cwde
xor
lahf
jmp
mov
inc
int3
movs
push
cdq
hlt
movs
sbb
jmp
jmp
add
test
(bad)
pop
dec
pop
out
push
je
sahf
je
retf
mov
out
fs
rol
shl
xchg
mov
sbb
xchg
arpl
jns
push
stc
inc
out
(bad)
test
(bad)
aam
mov
or
ds
dec
fs
dec
popf
sbb
xor
leave
pop
out
and
inc
xor
push
data16
pop
add
cld
xchg
pop
or
and
jl
push
test
or
jb
inc
gs
pop
stos
and
rcl
in
fisttp
and
adc
mov
pop
sar
int3
and
ins
mov
cmps
pop
movs
inc
es
scas
jne
or
inc
cdq
aaa
sub
data16
push
xor
jecxz
bnd
mov
ficom
jg
add
sub
imul
lods
pop
pusha
pop
test
jmp
jp
and
and
xor
movs
xchg
dec
hlt
adc
pop
mov
or
push
aaa
ret
out
loope
dec
and
fsub
inc
mov
mov
jg
mov
mov
ins
mov
push
inc
jb
push
jae
dec
or
pop
popa
in
sub
sbb
popa
addr16
dec
fdiv
mov
push
mov
out
data16
movs
mov
push
or
pop
adc
(bad)
fsubr
aad
lds
jle
add
pop
stc
(bad)
loop
dec
jl
ja
lds
or
pop
(bad)
icebp
arpl
test
dec
jmp
jmp
and
xlat
dec
jp
push
push
loope
dec
push
sub
xchg
and
jle
xor
ror
shl
adc
data16
add
aaa
jno
leave
adc
stc
mov
sar
es
xlat
pop
pop
(bad)
cld
popa
xor
sbb
xchg
in
sub
out
push
fcom
les
sbb
loop
inc
movs
dec
inc
mov
sbb
pop
stos
imul
or
into
movzx
inc
cmp
shl
mov
gs
adc
mov
xor
mov
and
mov
shl
add
test
pop
in
(bad)
sbb
dec
out
loopne
arpl
xchg
push
hlt
int
loope
jbe
fs
adc
movs
add
add
jle
mov
fadd
xchg
adc
out
loopne
das
push
ffreep
lds
lds
xchg
sbb
jmp
out
lahf
out
or
dec
(bad)
adc
push
scas
les
mov
pop
pop
or
mov
jne
mov
pop
mov
mov
xor
xor
push
int3
ret
xor
lods
aam
leave
bnd
pop
adc
jmp
and
dec
cli
xor
call
push
xor
xchg
jmp
fwait
adc
mov
and
sbb
call
aaa
fldlg2
push
pop
out
mov
jb
aas
mov
(bad)
or
dec
mov
xchg
loopne
ret
aas
mov
test
cmp
loope
cmp
sub
xor
je
sub
inc
pusha
mov
jg
pop
std
mov
xchg
rol
in
outs
retf
jae
(bad)
mov
stos
fld
shl
outs
icebp
ret
aam
add
push
test
in
mov
push
jl
sub
jg
jns
test
pop
xchg
push
adc
adc
(bad)
loopne
xor
push
mov
mov
sub
mov
daa
inc
stos
out
je
add
mov
dec
cld
xlat
aad
pushf
xchg
stc
sub
(bad)
ins
inc
lods
out
popf
and
and
repz
sbb
addr16
adc
cwde
daa
mov
aas
inc
pusha
ret
outs
push
out
lea
adc
push
push
into
push
test
cmp
in
push
xchg
mov
xchg
dec
std
cli
(bad)
dec
add
fsubr
add
not
in
pop
jmp
and
pusha
add
add
test
mov
(bad)
push
ret
mov
fisttp
pop
and
sbb
stc
dec
lahf
shl
ja
es
in
mov
aam
lds
pop
jmp
pushf
out
xchg
push
mov
add
test
mov
cmp
dec
push
and
cmc
test
pop
jge
lahf
sub
and
and
and
(bad)
(bad)
mov
xchg
shl
inc
add
and
ss
mov
mov
push
pop
sub
addr16
inc
mov
into
int3
push
cmps
div
sti
add
xchg
das
add
not
pop
test
popa
xchg
xor
jl
mov
das
ins
fdiv
es
mov
(bad)
jns
inc
push
ja
(bad)
ja
outs
xor
scas
cs
out
lahf
adc
push
jbe
adc
cwde
xchg
inc
loope
xor
push
stos
pop
add
leave
pminub
push
add
shl
mov
mov
pop
outs
aas
jae
xor
push
ja
movq
fiadd
mov
inc
cdq
or
loop
push
lock
test
add
xor
sub
aam
es
jmp
mov
xchg
test
add
inc
mov
dec
cmc
pop
inc
adc
rcr
add
scas
stos
xchg
dec
lock
adc
and
mov
pop
sahf
fdiv
mov
mov
pop
sbb
sbb
jne
cdq
cmps
jbe
es
fs
xchg
call
xor
inc
js
mov
and
and
int3
mov
shl
fcomip
sub
lds
fisttp
adc
inc
ins
mov
mov
sbb
xor
ret
cmp
and
add
in
add
(bad)
mov
xor
cmp
jp
repz
loope
cmc
inc
int3
mov
adc
hlt
cmp
dec
and
xor
xchg
es
adc
out
mov
push
adc
movs
std
outs
daa
sbb
cmp
jns
mov
(bad)
loopne
nop
bound
aaa
out
cmp
xchg
out
jmp
mov
adc
pop
xlat
movs
test
adc
in
stos
add
xor
call
scas
jl
xor
inc
loope
xor
imul
push
pop
pop
and
inc
rcl
xor
cmps
mov
inc
icebp
out
push
adc
dec
sti
or
fcos
movs
repz
pop
jg
cmp
enter
popa
notrack
pop
push
mov
inc
xor
push
jne
call
cld
(bad)
cli
pushf
fistp
sub
in
xchg
out
jae
mov
lds
xchg
xchg
or
xchg
xchg
(bad)
in
jmp
gs
mov
xor
or
jnp
xor
inc
add
test
gs
xor
(bad)
out
mov
pop
test
jg
dec
addr16
std
jo
jge
test
repz
scas
sbb
leave
pop
(bad)
std
out
cmp
ret
popa
dec
push
push
mov
jae
call
cmp
retf
aam
xchg
sti
push
aaa
mov
sub
imul
in
outs
in
in
iret
lods
inc
(bad)
mov
sbb
pop
and
ins
fmul
div
push
ins
popa
in
cmps
int
xchg
outs
(bad)
les
mov
xchg
in
repnz
movs
addr16
aad
cmps
adc
call
test
and
imul
push
inc
jl
retf
mov
mov
xchg
dec
mov
pop
jge
xor
fild
int3
shl
push
stos
jmp
inc
mov
push
in
hlt
ja
dec
movs
stos
shl
fisub
out
xchg
mov
aam
in
inc
(bad)
jl
(bad)
and
xchg
and
bound
push
dec
inc
int
push
mov
sub
test
or
fdivr
out
inc
nop
sbb
pushf
add
xor
stc
adc
mov
ds
mov
aas
loop
sub
xchg
jmp
ins
or
jne
hlt
leave
xchg
leave
stos
(bad)
jne
gs
outs
ret
mov
and
jp
and
inc
test
or
loopne
mov
cmp
sub
push
xchg
push
leave
ins
add
jae
imul
inc
adc
bound
ficom
addr16
cmps
aad
push
dec
imul
pop
cwde
dec
int
xor
and
hlt
les
call
mov
pop
cmc
test
inc
xor
cld
pop
gs
jg
inc
and
aad
push
xchg
push
mov
xchg
sbb
ins
mov
and
mov
xchg
fs
and
jp
hlt
inc
mov
xchg
(bad)
xor
out
mov
inc
leave
jne
inc
xchg
outs
les
ins
pop
inc
mov
xchg
xor
shl
ins
xchg
xor
aaa
add
mov
xchg
xchg
sbb
out
fs
nop
push
in
sub
aam
in
xchg
sub
push
bound
adc
sti
adc
mov
xchg
xor
scas
mov
les
mov
ret
pop
push
push
push
inc
adc
push
xlat
push
mov
shl
jnp
sbb
xchg
sub
xor
and
jae
popf
mov
push
cld
mov
cmps
(bad)
fst
gs
and
pop
out
dec
je
and
es
mov
add
fs
adc
add
xchg
push
mov
hlt
adc
xchg
out
xor
sar
pusha
xchg
repz
xchg
mov
xor
jmp
jp
ret
mov
mov
cmp
lds
or
dec
and
shl
ss
out
loopne
add
pop
push
fs
imul
adc
and
(bad)
aas
inc
mov
mov
clc
inc
stos
mov
dec
xchg
pop
out
dec
push
xchg
pop
ja
ja
das
int3
mov
in
out
bound
mov
pop
stos
xor
aaa
add
adc
push
push
div
add
ja
xchg
add
xor
repnz
addr16
inc
push
(bad)
scas
xor
aad
nop
jmp
fwait
pushf
add
(bad)
and
in
es
inc
pop
jge
pop
(bad)
mov
xor
out
adc
sti
clc
les
push
and
test
aaa
and
popf
sbb
adc
xchg
sahf
(bad)
je
mov
clc
sahf
adc
(bad)
mov
jg
test
and
scas
shl
mov
popa
push
(bad)
ss
cmp
movs
inc
pop
imul
add
push
mov
or
xchg
addr16
push
and
xchg
mov
(bad)
mov
lds
mov
jecxz
ret
or
xor
call
test
ja
jb
aas
add
(bad)
push
mov
cmp
test
xchg
cmps
inc
pusha
inc
inc
ja
iret
lods
sbb
and
(bad)
cmc
jg
mov
adc
out
mov
aaa
add
mov
mov
push
xchg
xchg
aam
fidiv
or
inc
mov
jae
cmp
aad
push
mov
hlt
or
jle
sbb
sahf
pop
xchg
mov
xchg
enter
das
pop
adc
inc
jle
ds
(bad)
(bad)
out
(bad)
sub
xchg
mov
jmp
mov
xchg
jge
inc
or
in
pop
mov
jl
js
fisttp
pop
jne
mov
push
cli
ret
push
es
cmc
int
xlat
ret
outs
xchg
mov
sbb
mov
mov
xchg
xchg
dec
xchg
out
(bad)
mov
push
cmps
clc
test
mov
test
(bad)
movs
jne
jle
in
xchg
mov
in
push
jmp
or
push
add
or
and
and
popf
pop
popa
add
(bad)
add
lahf
in
push
aam
jl
mov
movs
add
push
xchg
xor
je
pop
xor
dec
cmp
in
jno
out
and
mov
or
jmp
shr
mov
xchg
lods
and
lods
sbb
out
rol
push
pop
and
fs
test
pop
movs
icebp
xor
jg
fs
cmp
jmp
lods
pop
cdq
push
mov
push
dec
dec
xchg
xchg
ins
and
out
add
call
push
xor
fstp
retf
cli
adc
and
dec
mov
loope
jle
ins
xor
test
xor
cmps
push
push
jne
cmp
movs
adc
jne
(bad)
push
sub
popf
das
mov
not
fbstp
pop
ja
cli
xchg
mov
enter
in
xchg
adc
mov
adc
ja
xchg
dec
dec
inc
ds
push
lahf
push
stos
shl
fisub
leave
push
dec
rol
ffreep
arpl
out
popa
jns
lahf
xor
xchg
daa
pop
sub
call
mov
xor
sub
lods
inc
mov
call
dec
aam
mov
inc
fsubp
mov
aaa
test
adc
es
pop
daa
in
jo
aaa
and
mov
mov
add
jnp
cmp
mov
sub
rol
push
ror
(bad)
test
loope
and
bound
movs
adc
jns
pop
(bad)
adc
outs
call
ret
xchg
loop
cmp
jg
outs
push
mov
and
xchg
dec
and
ins
xchg
xchg
mov
dec
push
or
adc
cdq
rcl
jbe
mov
and
(bad)
xchg
(bad)
pop
pop
xchg
pop
mov
je
sti
sub
scas
jmp
inc
outs
xor
pop
addr16
out
xchg
xor
pop
dec
pop
into
push
test
stos
enter
mov
iret
fcmove
cli
repz
sub
ficom
cli
not
and
sbb
aad
scas
xchg
sahf
in
sbb
shl
pusha
test
in
mov
jl
popf
retf
mov
mov
test
and
je
loop
aad
push
shl
jg
imul
ja
test
push
pop
mov
xchg
cli
arpl
inc
push
adc
cwde
pop
ins
loope
daa
stc
pop
mov
retf
es
cmps
fistp
cmp
fwait
repnz
pop
pop
loop
sub
cld
repz
cmp
mov
stos
frstor
fs
mov
movs
mov
sbb
mov
pop
cmp
push
cmp
int3
and
ret
xchg
xchg
lahf
mov
lahf
xchg
movs
push
gs
inc
xchg
inc
pusha
jl
int3
cmp
push
mov
cld
scas
xchg
in
mov
mov
addr16
cmps
dec
imul
mov
and
je
movs
lea
iret
test
mov
cmps
(bad)
sbb
jbe
ds
in
cmc
xchg
hlt
xchg
xchg
cmps
and
in
lock
xchg
jmp
mov
pop
mov
fmul
es
out
loop
xlat
and
sbb
and
and
inc
and
xor
sbb
cmp
jo
mov
jo
mov
mov
rol
aad
or
add
mov
(bad)
ja
hlt
aad
retf
xlat
test
(bad)
push
mov
dec
or
adc
sub
popa
xchg
movs
push
int
es
gs
out
jnp
dec
mul
retf
inc
add
xor
in
cmp
addr16
or
and
stos
outs
jmp
sbb
pop
xchg
inc
retf
xlat
mov
aas
jge
sbb
xchg
fldenv
loope
aaa
cld
add
sbb
aaa
fs
dec
push
in
mov
add
push
(bad)
leave
or
sub
and
xchg
jno
enter
jno
daa
mov
loop
inc
mov
cmps
sub
inc
or
mov
add
ror
je
hlt
dec
stos
stos
ss
(bad)
or
inc
push
gs
mov
and
xchg
cmp
mov
int
jl
sbb
ucomiss
inc
cmc
adc
test
mov
xchg
jbe
xor
lock
dec
or
mov
push
les
cmp
mov
inc
dec
retf
cmp
jb
add
adc
jmp
in
iret
std
aam
mov
outs
gs
sahf
push
sub
imul
sub
pop
movs
push
ja
cmp
mov
mov
jecxz
push
mov
enter
mov
push
ins
inc
adc
inc
and
xchg
and
call
aas
xlat
fs
repnz
cdq
sbb
xor
gs
ja
loopne
cmps
cmps
dec
push
stc
mov
mov
lock
fs
std
add
jmp
icebp
push
sub
inc
dec
cs
lods
cdq
dec
lock
add
jns
pop
outs
xor
ds
dec
nop
pop
sbb
fiadd
out
dec
mov
es
and
aad
fcom
cli
arpl
cmps
or
out
mov
jnp
lds
push
aaa
call
dec
sahf
test
clc
icebp
lds
mov
movs
(bad)
adc
jmp
sub
or
add
jno
jecxz
mov
mov
push
jl
push
cmp
les
push
inc
adc
jp
xchg
movs
and
mov
test
mov
mov
jmp
data16
popf
mov
cmp
enter
adc
test
dec
out
fwait
pop
adc
mov
sub
cs
push
jb
dec
fild
movs
mov
xchg
xchg
daa
push
xchg
inc
jmp
xor
das
or
mov
jmp
imul
idiv
aam
(bad)
idiv
push
xchg
cs
inc
aad
xchg
mov
pusha
or
add
test
dec
ss
in
pushf
cld
push
add
div
push
bound
cmp
movs
into
pop
in
xchg
xor
inc
cmp
xor
aad
lds
adc
shr
push
je
(bad)
sbb
not
test
jmp
and
fxch
lea
cli
out
out
xchg
movs
sti
sub
mov
xchg
(bad)
push
pusha
fdivr
jmp
fist
sub
gs
pushf
fstp
cmp
xchg
shl
shl
add
mov
xchg
js
push
and
and
push
iret
idiv
mul
dec
movs
test
fldenv
loope
inc
(bad)
fisub
jmp
ja
in
push
movs
pop
push
mov
mov
shl
ja
mul
loope
les
test
fmul
push
or
hlt
jge
arpl
in
fistp
xchg
in
mul
jo
aad
inc
shl
mov
and
cmp
(bad)
(bad)
in
cmp
fs
push
and
adc
scas
add
inc
dec
sbb
mov
(bad)
movs
xlat
xchg
gs
fwait
xor
arpl
lods
or
cmp
xchg
mov
cmc
pop
adc
das
repz
push
mov
xor
mov
add
in
sub
fadd
stc
and
in
dec
pop
mov
pop
cmp
mov
push
fcomp
xchg
out
xchg
jp
fwait
push
and
call
jbe
popf
jmp
(bad)
pop
pop
cmc
ficom
or
add
xlat
data16
cmps
movs
jle
cli
sbb
adc
les
mov
shl
mov
fcmovnbe
aad
jge
mov
daa
sbb
call
pop
and
pop
(bad)
lods
cdq
fisttp
xchg
aaa
xlat
rol
std
push
xchg
loop
mov
fisub
sbb
pop
dec
xor
(bad)
mov
iret
aas
and
movs
cmps
pop
mov
pop
jb
inc
addr16
(bad)
cwde
or
les
iret
pop
test
cmps
jge
aam
xor
jne
xor
int3
pop
arpl
nop
push
aad
adc
mov
xchg
and
xchg
adc
pop
ja
mov
dec
sub
lea
push
jo
mov
push
lods
inc
cwde
pop
sahf
xor
push
popa
jmp
fdivp
std
mov
mov
cmp
adc
jecxz
aaa
push
pop
rol
jns
mov
fidivr
and
ja
push
jb
lods
jns
or
xchg
cmps
out
jne
xor
jbe
cmp
jne
das
stos
jecxz
push
cld
std
or
mov
movs
scas
out
jl
retf
and
xor
sahf
jle
scas
ds
sub
mov
cmp
inc
jp
ins
or
mov
sub
sahf
(bad)
adc
fild
mov
mul
jp
iret
xor
jb
lock
xchg
lahf
ins
mov
inc
pop
xlat
retf
mov
inc
bound
test
and
stc
fsubr
inc
psraw
push
orps
cs
xchg
push
add
outs
gs
test
xchg
adc
or
(bad)
fwait
adc
adc
cmp
cmp
lods
xchg
hlt
mov
ss
pop
arpl
jl
cmp
or
push
mov
sti
xchg
aad
inc
xchg
and
xor
sbb
adc
vmovaps
fcomp
lods
int
jnp
imul
xchg
mov
test
xor
cdq
xor
jno
xchg
shl
inc
ja
xor
(bad)
xchg
xchg
pop
les
jmp
xor
(bad)
mov
test
mov
popf
xlat
test
icebp
add
pop
fisubr
scas
cld
idiv
and
(bad)
je
jo
mov
pop
xlat
test
mov
adc
movs
out
adc
add
inc
jmp
pop
sti
(bad)
out
lahf
scas
js
jle
call
fsub
xor
shr
es
dec
cmps
in
shr
les
repz
push
xchg
sbb
push
stc
test
xor
out
(bad)
out
or
xchg
leave
movs
mov
and
inc
sbb
inc
int3
pop
les
movs
(bad)
adc
inc
into
fcmovbe
int3
test
jne
pop
jnp
arpl
xlat
sub
dec
addr16
movs
lods
leave
je
in
or
ins
fist
or
or
inc
xor
adc
xchg
mov
add
ja
ret
push
nop
inc
test
add
and
cmp
xchg
add
loopne
mov
xchg
(bad)
(bad)
out
loopne
mov
outs
les
into
xchg
pop
outs
movs
xchg
ins
mov
and
jbe
lods
xchg
pop
sub
ins
aas
aam
push
and
xchg
outs
push
sub
out
dec
or
pop
cmp
(bad)
retf
cwde
test
cmps
(bad)
fxtract
gs
sbb
mov
pop
icebp
xchg
jno
dec
mov
pop
xor
cmps
mov
cmps
outs
(bad)
popf
hlt
cmp
mul
repnz
or
push
pop
fild
cmp
cmps
mov
call
jp
lods
(bad)
sbb
std
jne
jmp
scas
test
popf
and
xchg
pushf
or
push
and
mov
push
push
dec
pushf
and
add
loope
pop
cwde
xchg
stos
push
add
cld
xor
pushf
dec
daa
out
or
add
mov
sub
sub
xchg
stc
sub
pop
mov
xchg
test
pop
and
sub
movs
ja
loopne
in
or
in
jbe
mov
jge
inc
pop
push
xchg
or
(bad)
and
and
ret
pop
or
mov
rol
(bad)
loopne
in
inc
pop
jb
shl
pop
test
aam
push
addr16
cwde
iret
shr
sub
aaa
scas
ja
dec
rcl
push
fsub
mov
cmps
inc
aam
mov
ds
sub
jecxz
int3
jnp
mov
pushw
add
movs
fcomi
je
fld
cmp
adc
fiadd
sbb
out
sub
inc
lds
or
(bad)
mov
movs
lds
and
call
sub
jo
adc
push
xchg
loopne
imul
mov
test
ja
jb
jge
and
in
aaa
pop
jle
pop
or
push
out
das
dec
lods
inc
mov
sub
movs
jae
lds
mov
inc
test
adc
in
lods
xor
or
mov
cmc
int3
xchg
dec
xchg
mov
daa
pop
rcr
mov
out
push
rep
test
fisubr
pop
pop
and
dec
adc
inc
push
ja
pop
cmps
test
add
imul
inc
pop
add
ja
fdiv
adc
xor
jl
in
fldenv
push
xor
dec
sbb
lahf
in
inc
jne
inc
mov
pop
movs
shl
mov
shl
data16
(bad)
movs
push
outs
add
movs
inc
push
leave
or
mov
cs
out
pop
mov
add
mov
jo
inc
dec
out
sub
sub
mul
movs
shr
rol
lds
jno
out
int3
or
(bad)
add
and
mov
jl
xchg
xor
fs
add
add
jne
iret
cdq
dec
aaa
pop
hlt
push
and
mov
(bad)
cwde
pop
test
sub
xor
mov
test
lock
xor
mov
inc
lock
push
pop
mov
inc
push
call
ds
cmp
mov
mov
je
out
sub
xchg
shl
add
loope
(bad)
(bad)
push
inc
js
fnstcw
or
add
xor
mov
add
xor
mov
int
push
es
jnp
xchg
in
xchg
push
add
xchg
dec
das
dec
ds
stos
xlat
mov
xor
cmps
cwde
xor
sbb
jnp
fwait
inc
and
add
daa
inc
ja
loop
xchg
cmps
inc
das
gs
add
pop
out
repnz
and
fisttp
leave
xchg
(bad)
fsubp
jo
jmp
(bad)
aam
fstp
fs
sbb
test
or
xchg
mov
(bad)
or
jbe
xchg
aad
or
pop
mov
fwait
cmc
loope
aas
xchg
pop
or
xchg
and
inc
nop
push
sbb
push
mov
mov
fcomp
dec
jge
aaa
cli
leave
xchg
dec
pop
mov
outs
ins
ja
shl
(bad)
ins
addr16
mov
adc
mov
sub
sub
cs
jb
aaa
dec
add
mov
and
sbb
xor
ret
mov
call
adc
xor
jo
adc
sub
mov
xchg
es
xor
cdq
jmp
mov
int3
cmp
out
add
xchg
push
hlt
ret
fmul
das
jmp
aaa
shr
shr
or
adc
and
sub
jmp
test
jp
hlt
lds
mov
xor
shl
sbb
test
into
push
imul
or
xor
add
iret
sbb
in
or
push
dec
in
mov
jb
loope
mov
iret
or
and
jb
xor
xor
addr16
fwait
xchg
mov
xchg
repnz
aam
cld
(bad)
retf
and
push
push
xor
in
retf
push
ins
and
xor
xchg
mov
imul
xchg
inc
les
in
or
mov
xchg
(bad)
enter
and
mov
xchg
rcr
ror
rcl
jb
pop
jne
mov
or
dec
xor
aas
pushf
push
in
lea
std
push
inc
xchg
pop
push
dec
(bad)
shl
add
stc
push
mov
aam
mov
and
mov
push
outs
arpl
xchg
mov
mov
cmp
mov
hlt
repz
mov
mov
pop
inc
pop
test
lods
fbld
packuswb
sub
lds
xchg
xchg
cmc
test
xchg
mov
adc
dec
pushf
xchg
test
addr16
or
outs
add
fiadd
push
test
dec
in
mov
push
push
repz
scas
rcl
sbb
movs
push
out
lock
xchg
hlt
out
xchg
xor
dec
jne
fs
xchg
pop
lods
jnp
inc
mov
out
pop
push
daa
xor
and
dec
inc
jnp
adc
std
pop
jbe
jne
pop
xor
jmp
pop
mov
in
sbb
daa
shl
mov
mov
rol
jnp
adc
mov
adc
div
sbb
cmp
pop
pop
ja
mov
jmp
pop
ret
inc
loope
inc
dec
mov
hlt
xor
add
dec
jnp
adc
cmps
ret
mov
cmp
jg
jecxz
imul
xchg
aaa
in
ret
je
movs
pushf
xchg
mov
dec
xchg
mov
neg
jg
not
push
cmc
mov
xchg
call
das
inc
clc
pop
adc
das
mov
add
sub
fdivr
xor
adc
sbb
in
data16
sbb
xor
push
adc
adc
sbb
sahf
inc
push
in
aas
fbstp
cmp
mov
retf
shl
or
cmps
nop
out
call
les
je
popa
imul
push
addr16
cmc
push
(bad)
rcl
out
mov
aaa
int3
adc
cmp
pop
xor
lahf
hlt
xor
mov
add
pop
adc
je
xchg
push
or
or
test
(bad)
push
inc
ss
xor
cmp
(bad)
addr16
jl
inc
xchg
adc
jae
ss
shl
(bad)
mov
ins
pushf
(bad)
jae
push
jbe
mov
sbb
add
jno
add
lods
xchg
pop
sub
adc
in
dec
jno
add
outs
in
and
mov
xchg
daa
fwait
xchg
xchg
loope
mov
mov
fist
xor
inc
bound
daa
repnz
jno
pop
pop
cmp
addps
or
out
add
mov
adc
shl
inc
outs
add
sub
aam
lods
leave
ins
(bad)
movs
or
inc
or
add
(bad)
stc
scas
popa
test
add
pop
loopne
scas
dec
cmp
jp
xchg
(bad)
xchg
jle
rcr
iret
dec
mul
push
js
xlat
dec
adc
loop
xchg
retf
loopne
jl
ja
inc
shr
shl
rcr
push
cmp
pop
dec
test
jecxz
pop
mov
(bad)
es
outs
jge
mov
jmpw
test
inc
adc
adc
sub
mov
mov
inc
je
sbb
push
and
push
inc
dec
jle
xchg
xlat
pop
fidivr
int
mov
cld
sbb
data16
xchg
push
pop
test
call
pop
sub
xchg
mov
mov
fistp
dec
and
sbb
and
cmc
sub
adc
dec
pmullw
clc
test
push
arpl
push
out
add
add
(bad)
xchg
rol
xlat
xchg
fistp
scas
mul
dec
daa
push
addr16
test
adc
sub
loopne
test
leave
push
fstp
mov
add
add
adc
aad
pop
jae
out
int3
aam
mov
aaa
(bad)
daa
movs
xchg
ss
mov
retf
lea
push
adc
ins
push
and
inc
ins
fadd
movs
mov
dec
sub
push
loop
cmps
jmp
in
inc
sbb
inc
mov
or
pop
mov
jecxz
imul
inc
fimul
mov
and
(bad)
scas
out
ins
fcmovu
mov
inc
cmps
mov
int
xor
xchg
dec
out
xchg
jg
mov
repnz
mov
mov
bound
fiadd
xlat
xor
int3
mov
push
add
jmp
out
mul
or
mov
call
sbb
mov
push
cmc
fwait
lock
fs
cmps
sbb
adc
jg
pop
add
mov
push
sahf
pusha
xor
imul
xchg
add
loopne
lods
retf
aaa
out
mov
jnp
push
(bad)
dec
adc
daa
and
and
repnz
out
lds
daa
repnz
fnstenv
outs
push
ror
add
xchg
outs
cmp
cmps
call
jle
cli
mov
xor
sbb
add
pop
idiv
jne
scas
in
in
cmc
cmp
pop
adc
stc
test
add
es
mov
ret
in
lahf
hlt
pushf
inc
cld
and
fild
jns
fs
jecxz
mov
movs
je
cli
pop
lea
adc
cmp
cmp
or
cmps
into
test
(bad)
xchg
sub
mov
sub
cld
jp
je
cmp
jns
sbb
outs
(bad)
sub
leave
jae
sahf
int3
add
rcl
xchg
test
jp
stos
pusha
es
push
(bad)
jmp
xchg
aad
rcr
mov
cmp
lods
push
xchg
jge
scas
je
mov
or
xchg
or
push
fcom
xchg
or
dec
xor
out
push
push
pop
shl
pop
scas
aaa
sub
xchg
dec
pusha
pop
or
aaa
hlt
mov
cmc
xor
and
inc
fimul
(bad)
jno
test
mov
gs
lock
xor
push
hlt
xchg
data16
sbb
and
aaa
hlt
mov
and
stos
inc
xor
ja
ins
sahf
movs
sbb
dec
jne
stos
or
dec
call
les
jmp
cs
mov
dec
mov
cmps
sbb
mov
enter
out
dec
rol
dec
lahf
add
pop
pop
mov
push
lods
iret
test
es
xchg
jae
hlt
xor
add
jno
jae
jge
stc
xchg
dec
ss
movs
xor
push
popf
inc
push
ret
sub
(bad)
push
jg
lahf
jne
or
aam
stc
inc
cmc
movs
jbe
cmp
xchg
add
mov
(bad)
mov
sub
inc
lods
xor
hlt
add
xchg
fs
(bad)
fwait
mov
daa
push
into
cmp
inc
xor
ror
inc
sbb
es
(bad)
fnstcw
stos
jl
ins
or
add
and
and
push
ins
mov
mov
aad
adc
xchg
and
mov
pushf
or
adc
sub
cmp
out
add
imul
inc
lds
ss
sbb
cmp
jb
jnp
jnp
sub
fnstenv
das
inc
cmp
inc
cmps
inc
rcl
sbb
cmp
cmps
sub
das
jmp
or
bound
sub
es
idiv
mov
outs
jl
push
clc
adc
or
cli
pop
aaa
scas
adc
jge
or
lea
jmp
leave
in
xor
mov
sbb
xor
bswap
push
sbb
movs
out
xchg
ret
xchg
add
aas
or
jg
outs
imul
add
jns
pusha
mov
dec
aad
jno
call
push
sub
pop
ret
sub
dec
fs
xchg
xor
ss
pop
xchg
mov
lahf
sub
test
scas
out
das
ins
dec
inc
retf
test
dec
in
mov
loop
or
or
movs
jns
js
and
xchg
jno
(bad)
mov
fstp
call
xor
xchg
lock
dec
jno
jmp
xor
es
cld
xchg
es
mov
push
repnz
push
cmp
mov
dec
jl
add
xor
push
pop
and
push
sbb
adc
push
and
rcl
dec
push
cmp
in
mov
in
fwait
and
and
xchg
adc
popf
xchg
and
mov
push
xor
add
or
sahf
and
dec
and
mov
xchg
loopne
push
and
jb
fsubr
inc
xchg
xor
daa
add
jns
jl
jae
jmp
jge
not
test
fst
outs
and
cs
outs
or
(bad)
inc
(bad)
push
push
cdq
or
xlat
xchg
ret
(bad)
fiadd
mov
cmp
out
inc
aas
jne
adc
inc
int3
pop
jp
rol
(bad)
call
lahf
out
add
jo
or
loop
mov
xchg
sub
add
xchg
js
in
shl
xor
mov
inc
pusha
pop
popf
xor
outs
scas
in
retf
cmp
and
mov
jno
jb
add
sbb
pop
xchg
aad
aam
fimul
mul
and
push
(bad)
jl
sub
scas
ja
mov
add
sti
imul
outs
lock
daa
mov
sbb
mov
and
mov
cmp
(bad)
shr
xchg
sub
enter
mov
cmps
mov
xor
test
imul
aas
xchg
cmps
jmp
cwde
test
ret
mov
inc
adc
push
aad
into
mov
ror
test
and
adc
test
pop
movs
cmp
sbb
mov
iret
ret
out
mov
sbb
adc
stos
pop
inc
inc
mov
movs
push
stos
sahf
call
adc
xchg
cmp
je
inc
sbb
xor
fbstp
jbe
mov
dec
stc
mov
retf
addr16
push
xor
push
or
jno
lds
add
mov
es
scas
mov
scas
push
sub
inc
inc
gs
das
mov
aaa
scas
adc
push
mov
mov
out
test
push
(bad)
jg
out
outs
push
(bad)
bound
dec
or
xchg
push
push
push
cld
push
arpl
push
movs
ret
daa
xor
jle
retf
add
sub
mov
mov
(bad)
addr16
dec
js
test
push
xor
mov
stos
cmp
dec
cmp
push
fbstp
(bad)
in
inc
(bad)
dec
clc
sbb
push
call
inc
mov
aaa
les
jecxz
mov
mov
lods
dec
sbb
call
pop
sbb
out
test
data16
scas
popf
repz
call
mov
add
jbe
out
dec
movs
aam
in
xor
aam
push
push
pop
cld
inc
or
pop
cmc
and
add
aad
ins
(bad)
rol
mov
out
(bad)
adc
mov
sbb
pop
je
mov
adc
cmp
mul
shl
int3
and
loopne
mov
shl
cmp
and
mov
sbb
inc
(bad)
in
or
in
addr16
inc
dec
cmp
lahf
mov
(bad)
in
sbb
addr16
pop
stos
scas
in
arpl
icebp
clc
xor
(bad)
and
lock
mov
mov
mov
repz
sbb
aaa
retf
in
adc
(bad)
out
mov
js
push
xor
(bad)
push
sub
jecxz
cwde
movs
shl
add
out
push
cwde
hlt
(bad)
mov
xchg
ss
sbb
xor
cmps
mov
or
xor
fsub
retf
ficom
jmp
fcom
cli
push
outs
add
aas
dec
stos
stos
xor
out
in
mov
aaa
mov
inc
adc
pop
pusha
test
mov
shl
movs
push
js
sub
iret
(bad)
ins
xor
(bad)
aas
sbb
movs
mul
pushf
adc
xor
sbb
sar
pop
xchg
call
jae
mov
ror
cdq
add
push
and
or
xor
sar
(bad)
or
cli
pop
push
not
(bad)
enter
adc
hlt
in
xor
sbb
das
je
outs
repz
outs
cmps
cmps
test
pop
cmps
push
pop
es
jb
push
push
jb
dec
xlat
jle
in
xlat
or
jo
xchg
idiv
addr16
jp
sbb
enter
cmc
xchg
aam
fdivr
add
jmp
mov
add
push
in
cmps
idiv
test
rcr
dec
push
lds
les
push
pop
add
shr
xchg
cmp
aaa
jle
cmp
sbb
fwait
es
(bad)
retf
int3
rol
xchg
sbb
dec
fisub
inc
lock
jle
push
pushf
or
inc
and
or
fprem
mov
xor
mov
push
and
fld
ds
(bad)
push
xor
pop
test
or
out
loopne
sub
aad
cmp
sahf
cmp
jnp
stos
jbe
fisub
pop
xchg
stc
mov
test
mov
and
pop
in
push
outs
pushf
imul
adc
xor
xor
adc
lods
add
iret
mov
pop
not
add
xor
outs
xlat
(bad)
into
push
dec
add
loopne
jns
jmp
aam
jo
inc
pop
out
xchg
int
outs
mov
xchg
xchg
fwait
daa
das
xchg
(bad)
jecxz
lods
out
sub
xsha1
cmps
push
imul
aam
daa
pop
xor
cmc
sbb
mov
sub
jae
inc
mov
cmp
loop
jle
std
cli
pop
cmp
inc
xchg
cmp
xor
push
and
push
retf
pop
repz
out
scas
mov
(bad)
inc
xchg
jno
xchg
fst
push
and
mov
icebp
inc
push
es
mov
(bad)
retf
and
push
adc
xchg
and
mov
sub
xlat
loop
cmp
adc
mov
nop
aas
add
mov
je
imul
movs
fbstp
push
pushf
inc
mov
lds
stos
jbe
daa
xor
div
xlat
add
cld
icebp
je
xchg
mov
jp
js
cmps
call
sub
fdiv
out
add
jge
(bad)
movs
xchg
sbb
inc
pusha
jno
sub
push
inc
mov
ja
je
inc
std
push
test
sub
je
dec
cmps
out
inc
arpl
test
aam
pop
fst
jl
add
adc
stc
ficom
dec
aas
int3
push
xchg
cwde
mov
cdq
push
mov
inc
daa
sar
jns
inc
jp
and
xchg
addr16
mul
iret
loope
out
test
push
mov
xor
addr16
into
daa
fsubr
and
in
mov
aad
mov
mov
pusha
retf
jo
les
les
xlat
mov
xor
mov
jnp
add
and
lods
add
in
in
ja
mov
mov
jecxz
out
mov
jp
push
cmp
jg
mov
mov
imul
sub
daa
jo
jae
pop
ret
sti
cmps
mov
es
shl
sub
jb
movs
test
rol
mov
pop
outs
jae
xchg
enter
sar
adc
push
inc
add
cli
addr16
fidivr
or
ins
lock
scas
jg
xchg
mov
or
xchg
out
xchg
mov
push
pusha
jo
jo
mov
js
les
add
mov
daa
loop
cmp
das
mov
and
jmp
xlat
push
fs
lods
sbb
(bad)
xlat
jmp
add
push
bound
mov
and
dec
outs
xor
or
mov
push
and
adc
fdivrp
bound
dec
hlt
sbb
gs
xlat
jae
stc
repz
in
jo
push
sbb
add
push
(bad)
dec
xor
nop
push
rcr
std
push
fldenv
xor
push
repz
adc
mov
adc
xchg
aam
jmp
push
xchg
ret
pop
jbe
aam
or
pop
and
cs
push
movs
ror
stos
xor
jmp
cmps
inc
adc
pop
adc
lods
hlt
out
imul
data16
adc
pop
and
mov
sub
cmps
loop
int3
les
push
test
shr
iret
aas
cmp
es
xchg
lock
icebp
hlt
adc
jo
jb
xor
adc
pop
push
adc
sbb
dec
push
iret
cmp
out
dec
xchg
mov
lahf
push
or
push
xchg
xchg
mov
fidivr
movs
aad
and
(bad)
push
xor
cmc
mov
push
es
jno
or
xchg
rcr
inc
and
cld
sbb
mov
sub
inc
mov
xchg
pusha
movs
repnz
mov
icebp
cmps
inc
nop
add
adc
cli
outs
stc
test
cmp
jg
pop
and
adc
ins
add
div
add
cmp
fist
fdivr
jae
out
idiv
retf
jp
push
in
push
mov
aam
ret
push
xor
sbb
cwde
(bad)
pusha
inc
iret
sar
push
and
adc
enter
movs
cmp
pop
adc
mov
adc
pop
adc
daa
jge
rol
jmp
mov
xchg
mov
push
jne
out
(bad)
pop
rol
push
aam
aam
clc
cmps
test
add
inc
mov
leave
je
test
mov
je
icebp
add
push
or
mov
xchg
push
xchg
xor
jmp
jg
dec
aaa
(bad)
ret
dec
(bad)
mov
xchg
or
retf
pop
sbb
daa
and
cmc
ds
add
xchg
mov
or
dec
or
aam
aam
movs
ja
push
adc
mov
add
mov
mov
sbb
(bad)
xor
shl
aaa
fs
jmp
shl
das
sub
outs
push
icebp
bound
adc
push
inc
pop
inc
mov
cmp
mov
sbb
nop
test
xor
push
dec
das
pop
js
sub
fnsave
mov
inc
lock
fstp
scas
jmp
iret
imul
and
inc
cmp
daa
leave
not
pop
mov
pop
inc
fwait
loopne
rcl
sub
xchg
ss
es
mov
loop
hlt
in
(bad)
mov
(bad)
je
imul
jnp
inc
xor
xchg
and
call
fist
jmp
or
push
mov
jne
xor
cmp
je
rcr
pop
push
mov
add
cmps
jb
fiadd
jmp
xlat
arpl
xor
xchg
xor
push
inc
lods
loope
scas
jo
in
or
add
add
xor
fisubr
jmp
jl
pop
sbb
xor
cmps
loope
ds
adc
retf
test
push
jecxz
add
inc
xor
movs
js
loop
data16
jo
fldcw
mov
add
push
aam
and
shl
or
mov
iret
fsub
push
inc
xor
and
mov
jecxz
lahf
add
cmc
xchg
push
jp
mov
cmps
jno
adc
cmp
or
popa
mov
add
adc
lods
hlt
push
mov
sbb
leave
aad
dec
bound
fst
ficomp
test
inc
mov
stc
mov
cmc
xor
mov
cdq
pop
sbb
mov
repnz
aam
test
movs
bound
jp
cmp
addr16
es
xor
push
mov
pop
cmp
mov
mov
sti
inc
jbe
pop
call
retf
aam
adc
xchg
int3
(bad)
test
fadd
pop
pop
leave
xor
mov
outs
cld
inc
sbb
out
cmp
inc
mov
jns
mov
xlat
sbb
ror
aaa
cmps
not
gs
addr16
sbb
add
shr
add
stos
sbb
scas
xchg
or
fadd
(bad)
mov
cmp
enter
add
jno
dec
inc
daa
and
fild
pop
cmc
loope
fild
adc
xchg
push
fimul
jmp
loopne
iret
xchg
ss
(bad)
mov
movs
push
test
adc
xlat
sar
aas
mov
ss
xchg
call
xor
and
cmps
cdq
mov
aaa
ins
test
mov
ror
ins
inc
fadd
je
fs
or
push
cmc
es
cmp
xchg
sub
sar
ret
movs
aaa
add
pop
jmp
push
push
mov
cdq
mov
xchg
mov
fisub
xor
cli
mov
popf
(bad)
pop
dec
aam
jne
clc
inc
xor
add
sbb
movs
ret
sti
je
dec
pushf
out
or
ja
data16
xchg
stos
cmps
jns
xor
jnp
in
or
jp
arpl
inc
jle
call
sbb
in
lahf
rcr
jae
test
fdivp
add
push
xor
sar
div
out
(bad)
xor
jno
je
neg
adc
mov
xchg
fcom
int3
aam
xchg
and
cmp
xchg
cmc
repz
add
ss
imul
add
and
push
add
cmc
and
or
xchg
out
aam
add
push
call
mov
mov
jae
push
sti
jno
adc
ds
scas
(bad)
jbe
mov
test
mov
pop
(bad)
sbb
std
inc
ja
xchg
repnz
push
cmc
xchg
into
rep
mov
adc
arpl
pusha
shr
add
out
jl
add
addr16
mov
scas
mov
pusha
sbb
addr16
addr16
and
xchg
xchg
add
std
test
int
daa
jl
call
sub
push
add
outs
add
aas
je
imul
mul
xor
mov
daa
dec
cli
push
shr
ja
inc
pop
cmps
cmp
stc
shl
out
cmp
icebp
retf
scas
shl
cmp
(bad)
test
fsubr
xlat
shr
(bad)
xchg
test
fistp
data16
xchg
push
fwait
push
sbb
out
mov
(bad)
jmp
out
push
aaa
out
xchg
icebp
xchg
nop
(bad)
lds
call
mov
push
cmp
loopne
hlt
outs
push
xlat
and
retf
cmps
sub
dec
sub
mov
xchg
call
and
cdq
cmc
mov
lods
out
jns
je
les
cld
adc
jbe
xchg
adc
dec
gs
retf
mov
xor
rep
jmp
aad
add
push
cdq
xchg
iret
mov
fisub
cmp
out
iret
and
dec
ins
and
xor
mov
mov
int
jle
jmp
loopne
stos
mov
adc
cdq
aad
pop
movs
ds
dec
and
sub
cmp
es
aaa
dec
pop
hlt
rcl
cmp
(bad)
into
or
out
lods
inc
and
call
rcl
mov
mov
movs
sbb
call
and
adc
mov
push
sbb
inc
(bad)
add
das
sub
mov
rol
fdivr
xchg
pop
sub
sbb
enter
push
fbstp
enter
lea
jmp
push
sbb
mov
xchg
inc
aam
(bad)
outs
xor
mov
add
xchg
hlt
push
cmp
stos
dec
test
add
cmp
fs
bnd
and
jne
dec
jo
push
outs
out
inc
mov
out
(bad)
mov
mov
aam
mov
mov
addr16
pop
jle
arpl
movs
icebp
cmp
daa
ds
cmp
out
mov
fistp
stc
ja
out
sub
fld
rol
xchg
fidiv
leave
mov
and
jb
push
sbb
and
into
xor
xchg
mov
pushf
ror
add
push
cmps
add
(bad)
jecxz
inc
jbe
cmp
mov
out
mov
test
sbb
or
add
sbb
push
ins
ins
adc
test
(bad)
aas
inc
ds
or
or
mov
pop
iret
out
test
push
inc
les
popf
out
jle
addr16
and
xor
mov
or
scas
xchg
sub
call
in
ins
inc
lahf
daa
pusha
into
(bad)
les
cmp
xor
mov
(bad)
enter
les
das
ret
fld
lahf
into
pop
in
test
adc
das
cld
mov
in
fcom
stos
pushf
cmp
push
pushf
(bad)
jg
dec
ss
iret
sub
cwde
mov
cmps
mov
xchg
jb
repz
les
and
xchg
cmp
lds
add
xchg
aam
xor
sahf
lods
lds
push
mov
sub
add
push
int3
out
mov
sub
test
loopne
mov
in
and
je
mov
xor
inc
or
loope
add
test
das
out
fistp
bound
cwde
or
cmc
mov
in
xchg
xor
sbb
test
and
lahf
mov
retf
jbe
ror
inc
pop
aaa
icebp
xlat
add
xor
je
inc
retf
push
cmps
add
aad
jb
stc
cmp
jae
ret
mov
jbe
dec
mov
fistp
push
out
adc
and
pop
das
jb
hlt
mov
fild
imul
mov
mov
pop
(bad)
das
pop
xor
stc
adc
sti
in
xchg
push
mov
adc
sbb
adc
mov
or
in
(bad)
cmp
addr16
and
jae
mov
xchg
xor
ja
add
cli
nop
out
adc
mov
mov
je
div
das
outs
js
sahf
add
inc
dec
mov
adc
dec
retf
aam
nop
mov
or
push
jp
(bad)
fistp
lea
sbb
push
call
(bad)
mov
jge
lods
xchg
pop
retf
frstor
push
inc
js
in
pop
addr16
pusha
shr
or
les
and
pop
and
inc
xchg
imul
loope
pop
fld
pop
enter
and
arpl
mov
jns
pop
int3
sbb
cmc
and
or
pop
ret
mov
mov
mov
(bad)
xchg
jmp
inc
and
cmp
cmp
xchg
test
inc
xchg
inc
dec
cmp
stc
xchg
cmp
(bad)
mov
cmp
stc
dec
push
dec
inc
push
xor
pusha
push
and
out
cmps
movs
cmp
push
jge
inc
mov
outs
and
xor
add
push
and
jae
xchg
inc
pusha
mov
bound
fs
xchg
or
add
dec
rcl
push
aad
dec
mov
movs
jo
test
(bad)
jb
mov
daa
sub
sbb
xchg
sbb
mov
ss
std
mov
inc
pop
inc
ret
pop
(bad)
cmp
mov
jnp
xchg
xchg
jno
and
xor
push
lds
dec
call
imul
cld
pop
mov
popf
mov
jle
popa
xor
jl
shl
inc
mov
pop
bound
popa
xor
test
in
out
lds
out
nop
outs
and
sub
inc
(bad)
cld
retf
pop
(bad)
mov
add
or
addr16
into
movs
mov
inc
adc
test
dec
out
add
mov
push
inc
mov
jno
aam
int3
sub
xchg
imul
int3
fsubrp
jmp
cld
xor
imul
or
popf
or
cmc
sbb
xchg
cdq
and
xchg
sahf
in
ss
sub
push
test
scas
stos
xchg
pusha
cwde
mov
push
outs
pushf
push
out
mov
push
and
or
mov
mov
call
sbb
jmp
xchg
je
ret
sahf
ja
aaa
cdq
jbe
and
stos
(bad)
pusha
add
mov
push
mov
add
sub
pop
pop
cwde
jo
cmp
shl
jae
add
jl
jmp
(bad)
fstp
retf
dec
cld
push
jbe
repz
mov
inc
and
cmps
rcl
cmps
rcr
inc
jbe
mov
lock
idiv
int3
mov
ret
into
ja
dec
pushf
ss
fist
cmp
xor
gs
aas
mov
or
in
(bad)
push
jbe
aad
jne
xchg
add
ja
shl
sub
scas
jp
adc
shr
in
push
push
fist
pop
push
push
cmp
adc
and
mov
lods
xchg
adc
outs
(bad)
pop
stos
shr
movs
add
adc
inc
dec
jo
inc
jl
cmp
out
jbe
(bad)
stc
mov
mov
cmp
out
es
pop
shl
mul
outs
rcl
cmps
loope
movs
call
(bad)
iret
and
fs
fs
vxorps
mov
iret
push
in
sbb
sub
adc
inc
mov
mov
daa
je
cld
sahf
and
push
xchg
out
stos
(bad)
rcr
push
fsubr
xchg
scas
rcr
mov
daa
cmc
adc
inc
aaa
jge
(bad)
(bad)
addr16
es
push
shl
dec
inc
xchg
test
ins
xor
ja
loopne
das
sub
scas
into
xor
aam
push
cld
mov
(bad)
mov
daa
cs
fs
cmp
adc
cmps
and
add
xor
lods
fist
in
mov
addr16
push
xchg
je
ja
jne
cmp
cmp
cli
pop
cld
mov
(bad)
jecxz
(bad)
in
movs
sub
das
jge
inc
aaa
out
inc
inc
xchg
retf
xchg
(bad)
std
fwait
push
scas
mov
sbb
and
dec
adc
sub
fs
(bad)
daa
arpl
or
mov
jge
je
add
pop
mov
inc
inc
imul
scas
je
fbstp
cmp
jecxz
xchg
pop
test
loop
or
mov
jmp
in
adc
hlt
fnsave
stos
mov
imul
inc
mov
xchg
sahf
jg
scas
daa
adc
lods
sub
dec
fcomip
inc
in
pop
or
mov
mov
xor
aas
sbb
aam
fbld
movs
inc
inc
popa
es
pusha
push
addr16
mov
or
xchg
and
xchg
push
push
adc
ds
jl
sub
dec
sbb
mov
jle
pushf
hlt
xchg
test
mov
add
adc
mov
push
inc
loopne
into
sbb
add
aad
jnp
call
xor
sub
outs
in
push
dec
dec
and
jns
(bad)
xchg
mov
aam
sub
das
pop
inc
push
mov
and
lods
xchg
xchg
pop
push
les
add
icebp
pop
sbb
xchg
add
leave
retf
push
pop
pop
jbe
and
out
(bad)
push
cmp
adc
fsub
adc
sbb
push
das
dec
pop
push
pop
das
arpl
test
inc
in
dec
lds
mov
xchg
(bad)
scas
movd
sahf
mov
inc
les
cmc
pusha
fdiv
dec
mov
push
mov
(bad)
pop
dec
xor
add
sub
cmp
inc
test
inc
mov
pop
test
movs
xchg
(bad)
fisttp
adc
mov
mov
aas
fcomp
push
or
ins
mulps
sbb
lock
into
sbb
sbb
dec
mov
push
pop
jge
ja
rcl
pop
xchg
add
push
adc
jmp
mov
push
xchg
jbe
ret
xor
and
out
and
xchg
xchg
mov
xchg
lods
shl
cld
stc
in
mov
push
repnz
sub
or
mov
or
jbe
pop
cmc
inc
fsubr
out
push
jle
fs
push
or
outs
sbb
fisttp
cmp
xchg
jno
fs
push
inc
xor
add
xchg
cs
inc
sti
aam
lods
rol
and
cmp
cmp
mov
adc
mov
push
int3
inc
stc
xchg
mov
shl
int
repz
iret
fs
aam
or
ss
aad
je
mov
in
pop
cmp
xchg
hlt
sub
adc
and
sub
lds
repz
push
rcr
mov
dec
outs
retf
aaa
inc
nop
add
jecxz
fist
shl
imul
dec
aaa
inc
icebp
pushf
or
push
dec
xchg
cmc
(bad)
inc
pop
shl
add
inc
sub
test
test
inc
push
xor
xor
sbb
dec
pop
dec
ficomp
fmul
fs
cld
mov
test
sub
and
out
cld
jb
gs
mov
xchg
pop
xchg
mov
inc
mov
adc
inc
ret
ja
cmp
sub
test
add
inc
jne
test
fimul
sub
sub
mov
push
addr16
jmp
xchg
ins
mov
int3
mov
js
nop
mov
rol
pop
sbb
rcl
popf
jns
sahf
xor
inc
cmps
leave
jg
movs
inc
mov
in
or
jg
scas
mov
repnz
cmp
iret
aam
jmp
sub
xor
jecxz
xlat
or
jge
test
and
addr16
shl
mov
imul
inc
xchg
xchg
ja
and
xor
inc
jne
(bad)
in
or
fld
sti
je
adc
inc
imul
pop
mov
and
adc
aam
icebp
pushf
xor
fbstp
jb
jbe
daa
ss
mov
inc
in
jmp
icebp
sbb
fiadd
or
in
leave
xor
call
cdq
mov
ss
push
in
jne
mov
lds
xor
sbb
addr16
and
adc
movs
add
outs
adc
loope
scas
in
dec
adc
push
and
push
ins
cmps
fcmovbe
hlt
inc
xchg
(bad)
mov
mov
test
mov
aad
sub
inc
cmp
push
mov
xor
xchg
out
and
rcl
dec
ret
inc
pusha
vxorps
jne
xchg
(bad)
lock
add
xor
pop
out
les
or
mov
js
retf
lds
fmul
push
mov
aad
inc
add
(bad)
adc
push
xchg
cmp
ret
(bad)
cmp
and
lods
adc
imul
push
rol
mov
lock
aaa
adc
sub
xchg
gs
ficom
lods
ja
cmp
xchg
loopne
sbb
mov
out
pop
adc
aaa
inc
ja
mov
adc
or
push
ja
nop
mov
push
xor
adc
(bad)
mov
push
cmps
sub
mov
mov
pushf
push
ins
add
mov
movs
inc
je
adc
test
jnp
lea
or
out
arpl
adc
retf
jb
jmp
dec
cmps
pop
mov
(bad)
(bad)
in
es
add
pusha
aaa
fldcw
pop
and
push
mov
cli
loop
jno
aaa
pushf
jns
and
cmp
daa
push
jne
jne
es
das
lahf
out
xchg
lahf
hlt
bound
les
sub
adc
loopne
ins
addr16
addr16
inc
xor
pop
xchg
sbb
es
dec
test
mov
test
push
pop
ss
popf
and
in
ja
pop
retf
sbb
ror
adc
pop
and
push
cmp
mul
imul
pop
push
mov
stos
inc
push
adc
mov
mov
push
push
inc
adc
xchg
scas
enter
aam
bound
adc
imul
(bad)
in
cmp
or
movs
loope
test
add
outs
push
xchg
and
cmp
inc
outs
addr16
lea
xchg
test
jmp
(bad)
mov
fsubr
je
out
mov
ja
xor
jmp
out
sti
add
mov
aad
int
adc
imul
in
fdivr
inc
xor
pop
push
mov
jnp
or
inc
lea
cli
inc
aaa
idiv
stos
lock
loopne
xor
je
jb
mov
dec
xor
lock
mov
mov
scas
aad
fild
mov
movs
pop
xor
(bad)
push
push
test
push
xor
push
dec
sub
push
mov
(bad)
test
inc
sbb
cwde
addr16
movs
pop
pop
xor
loopne
aam
sar
test
rol
out
jne
out
test
dec
xor
add
xlat
movs
seto
jge
fs
inc
hlt
cdq
cmp
add
movs
jecxz
ror
jo
mov
loopne
adc
mov
xor
xor
xchg
sub
rcr
(bad)
or
xlat
enter
loop
fsubp
out
adc
div
lahf
sub
aam
jecxz
cmp
xchg
in
and
push
fwait
test
outs
js
cdq
adc
mov
mov
push
mov
cld
jnp
(bad)
and
cli
xlat
push
leave
gs
pusha
push
mov
sub
inc
retf
fmul
fcom
sub
mov
mov
repnz
aas
pop
or
(bad)
sub
movs
pop
pushf
push
pop
xor
ja
fistp
aaa
mov
out
cmp
out
or
movs
mov
arpl
lahf
xchg
call
je
int3
arpl
mov
rcl
call
iret
or
(bad)
loop
aas
stc
(bad)
cwde
and
enter
(bad)
in
shl
je
icebp
mov
loop
dec
jae
sub
and
daa
call
fwait
in
mov
adc
inc
pop
or
and
test
ja
clc
daa
or
cmp
mov
stos
dec
movs
hlt
das
add
xchg
cdq
movs
mov
push
hlt
lock
arpl
pop
push
(bad)
inc
aaa
jbe
xchg
(bad)
in
in
std
jno
addr16
stc
and
pop
inc
mov
ja
popa
jbe
inc
dec
xor
ror
jae
sbb
shl
and
int
lds
(bad)
xchg
mov
xlat
jne
mov
sar
shl
icebp
add
inc
xchg
ret
pop
sbb
shr
aad
je
push
enter
gs
push
arpl
xchg
test
cmp
outs
inc
lods
test
pop
and
add
das
popa
and
ss
movs
pop
inc
jns
sub
arpl
daa
loopne
je
push
xlat
gs
xor
in
or
xchg
loop
iret
mov
sub
mov
pop
lock
xor
les
pushf
adc
sbb
xor
in
sbb
mov
jecxz
xor
in
hlt
push
popf
xchg
(bad)
int3
(bad)
std
sahf
lds
cdq
jle
xchg
push
jno
jp
hlt
xor
dec
je
hlt
test
repz
fadd
jmp
mov
mov
movs
or
std
aas
ret
pop
mov
in
out
into
add
xlat
mov
ins
arpl
mov
cdq
cmps
inc
lahf
cmp
or
add
div
test
jecxz
cmps
push
int3
jae
mov
(bad)
mov
movs
sub
adc
jp
pop
cdq
or
dec
popa
rol
jmp
addr16
neg
xor
sbb
dec
inc
add
and
xor
div
fwait
sub
or
sbb
addr16
cmps
(bad)
mov
aaa
inc
out
outs
loopne
(bad)
xchg
jmp
xchg
jmp
rcl
push
inc
dec
ror
and
out
xor
inc
leave
jecxz
push
xchg
es
sbb
jmp
fs
add
lock
cwde
push
ret
adc
push
mov
mov
jo
scas
call
das
bound
loope
data16
and
cmp
ror
pop
push
and
es
push
cmps
inc
in
mov
mov
jno
and
cld
addr16
inc
dec
fs
clc
add
into
jo
sub
aam
aam
xor
into
vpor
test
cmps
neg
xchg
jp
in
jae
jp
dec
inc
in
sbb
add
inc
aad
sbb
mov
addr16
cmp
xor
xchg
xchg
jbe
into
pop
arpl
and
inc
call
out
fiadd
addr16
mov
jmp
xchg
les
pop
add
pop
(bad)
mov
and
xor
imul
repnz
dec
call
jg
sti
xlat
movs
xchg
xchg
les
jne
xchg
mov
sub
ror
mov
sub
adc
popa
and
and
jle
mov
(bad)
inc
mov
inc
test
push
sub
ss
dec
dec
rcr
xchg
ret
xchg
mov
jb
popa
cmps
adc
jl
mov
sbb
and
daa
gs
call
lods
mov
push
xor
test
mov
xchg
push
hlt
das
push
cmps
imul
js
popf
or
cmps
cmps
gs
(bad)
sahf
xchg
ret
adc
xchg
add
ds
rcl
adc
cld
stos
add
push
bound
mov
std
cmc
js
addr16
stc
loopne
js
out
adc
xchg
ja
jnp
cmp
dec
push
pop
cmps
dec
jmp
ss
sbb
lock
popf
inc
dec
cmps
aad
and
aaa
push
fadd
(bad)
out
lahf
ins
jbe
outs
sbb
lds
lds
test
addr16
ds
cmps
inc
jbe
mov
inc
stos
rcl
sub
les
cmp
push
xlat
das
sbb
scas
pop
jecxz
ret
out
lahf
adc
mov
dec
lods
sti
sub
inc
es
lods
cmp
dec
cmp
shl
loop
jns
hlt
xchg
mov
int3
cmps
jnp
in
xchg
push
dec
test
pop
fcom
popf
xor
inc
cmps
push
sub
imul
cmps
and
movs
inc
in
push
sub
or
or
inc
pop
dec
pop
ins
cs
inc
adc
in
adc
adc
mov
or
inc
call
fcom
xor
loop
pop
and
cmp
add
loop
inc
fist
jmp
and
push
cmps
cmps
fldenv
lahf
fist
mov
jecxz
neg
pop
add
add
or
dec
and
xor
sbb
inc
aad
xor
or
fs
aam
repnz
jmp
push
mov
unpcklps
cmp
mov
adc
pop
or
cmc
fsubr
inc
lock
ins
leave
cmc
dec
lea
inc
in
sub
sahf
jbe
cmp
(bad)
int3
xchg
push
pop
mov
inc
test
hlt
sbb
test
into
leave
jae
mov
mov
cmc
daa
push
test
aam
jmp
das
dec
mov
xchg
xchg
je
xchg
xchg
cmc
inc
int3
or
lahf
xchg
add
outs
jb
pop
add
push
movs
xchg
inc
or
imul
push
sbb
and
inc
mov
mov
pusha
(bad)
pop
sbb
adc
cdq
mov
in
call
in
fs
(bad)
xchg
jge
push
push
and
and
pop
jbe
inc
bound
bound
cmps
cmp
in
mov
mov
push
lods
das
cmp
(bad)
data16
sbb
(bad)
pop
inc
loope
jp
ret
sbb
ins
shl
(bad)
inc
inc
test
or
pop
popa
test
in
adc
push
imul
aam
inc
(bad)
scas
imul
out
fist
in
adc
and
fiadd
mov
enter
mov
jmp
jl
xchg
cmps
fmul
xchg
lahf
xchg
lds
sbb
and
rcr
test
lahf
hlt
aad
out
push
mul
leave
outs
out
test
add
pop
sti
add
in
pop
loop
repnz
(bad)
fmul
push
test
in
imul
jmp
sub
xor
aaa
pop
test
les
and
inc
into
adc
data16
pop
aad
xor
mov
std
cmps
cdq
push
icebp
sbb
fs
add
adc
and
in
(bad)
das
ficomp
jbe
mov
retf
fisub
or
ret
mov
ret
out
mov
add
retf
repnz
in
fst
xor
dec
loop
popf
mov
push
aam
mov
adc
ins
cmps
iret
scas
mov
scas
adc
lods
retf
movs
es
js
ins
nop
pop
sbb
and
shr
xchg
ret
(bad)
adc
xlat
(bad)
mov
sub
das
xchg
imul
pop
pop
(bad)
lea
loop
call
stos
test
sub
outs
bound
daa
sbb
push
jne
aaa
or
mov
xor
mov
(bad)
sahf
push
addr16
test
mov
leave
and
xchg
(bad)
gs
push
mov
xor
data16
mov
and
xchg
imul
mov
data16
push
scas
fucomip
cmc
push
xchg
mov
cmp
add
fucomip
sbb
fcom
mov
add
fs
ja
dec
mov
mov
sub
aad
stos
xchg
xchg
arpl
mov
(bad)
cmc
lods
loopne
icebp
xchg
addr16
jecxz
ss
(bad)
sub
and
je
lds
sbb
dec
arpl
movs
outs
not
xchg
shl
movs
xor
adc
cmps
arpl
jge
pop
mov
(bad)
mov
aas
push
gs
movs
lahf
adc
in
rcl
and
in
push
dec
out
fld
fdiv
mov
imul
mov
mov
shl
push
sub
jmp
aas
cmc
iret
cmc
xchg
jo
cld
dec
out
lock
ret
xor
push
out
bound
sbb
push
or
hlt
les
mov
ins
adc
pop
mov
lods
dec
mov
xchg
pop
mov
iret
test
(bad)
sar
and
push
call
gs
inc
xchg
push
cmp
jg
iret
add
jo
aas
shr
pop
fsubr
inc
mov
pop
or
cmp
inc
xor
mov
repz
and
push
cli
xchg
adc
call
pop
add
jmp
fs
jmp
bound
cdq
dec
and
push
mov
xor
mul
and
movs
imul
mov
in
es
dec
and
addr16
stos
xor
aad
add
xchg
mov
rcl
aam
pop
jae
push
mov
int
push
int3
jecxz
fisubr
hlt
cmps
je
jbe
out
and
sbb
push
ret
aam
sub
or
dec
lods
out
xchg
in
cmp
jmp
xchg
scas
xchg
test
out
xchg
and
add
mov
pop
(bad)
(bad)
lods
dec
pop
aaa
scas
mov
retf
xchg
in
fisub
xchg
inc
shl
and
popa
jne
adc
mov
(bad)
and
out
xlat
mov
cmp
gs
(bad)
push
cwde
lock
jbe
cmp
iret
adc
fdiv
sahf
ja
add
imul
in
sbb
cwde
shl
movs
cmps
xor
test
pop
add
mov
js
sti
in
(bad)
mov
gs
les
sbb
jae
sub
shl
stc
mov
lea
out
aam
xor
push
lock
and
mov
push
cmp
pop
pop
mov
jo
sbb
xchg
pusha
sub
push
popf
in
push
(bad)
mov
xor
sti
hlt
shl
and
ja
and
(bad)
rol
xor
xor
mov
loop
adc
mov
je
mov
and
aad
jl
mov
pop
out
movs
ret
mov
mov
pop
je
cli
nop
cwde
jg
idiv
arpl
nop
imul
lds
pusha
pushf
jp
fsub
jo
sbb
xchg
and
rcr
je
retf
std
jbe
retw
push
mov
adc
push
push
in
mov
inc
xchg
mov
in
jne
mov
inc
fisubr
cmc
or
jl
test
stc
movs
lds
mov
pop
jne
dec
hlt
fcmovne
fisubr
clc
shl
inc
addr16
or
pop
mov
mov
mov
sub
add
out
movs
or
cmps
and
test
sti
fild
xchg
ret
mov
retf
sub
xor
pop
bsr
(bad)
out
and
xchg
in
ficom
test
jmp
aad
ret
pop
push
test
ret
mov
int
sub
inc
push
(bad)
hlt
popa
add
or
(bad)
sbb
mov
sahf
or
sbb
out
cmps
(bad)
dec
cld
test
bound
adc
enter
fwait
es
adc
mov
frstor
dec
out
ds
sub
pop
in
cmp
xor
es
idiv
jmp
mov
sbb
gs
xor
pop
cmps
push
add
xchg
sub
shl
push
pop
mov
push
mov
lods
add
mov
dec
pop
es
fldenv
add
cmp
jnp
out
sbb
gs
lods
aad
adc
idiv
inc
xchg
aaa
push
cmps
cld
mov
mov
push
stc
les
push
mov
sbb
shl
adc
sub
lahf
movs
fmul
call
nop
add
pushf
ja
push
inc
not
jg
aad
push
pop
xor
inc
and
mov
xchg
(bad)
cmp
fs
pushf
int3
aaa
or
repz
mov
inc
nop
push
imul
push
lods
in
aad
clc
jno
ss
loope
aaa
or
cmp
pop
cmps
data16
xchg
push
xor
std
nop
adc
inc
ret
jge
(bad)
xlat
and
enter
shr
lea
arpl
jbe
push
xchg
mov
sub
jno
icebp
ret
sbb
movs
movs
xor
sbb
jne
add
adc
in
pushf
repnz
sub
xchg
rcr
(bad)
mov
jbe
outs
arpl
xchg
(bad)
xor
sbb
imul
xor
jns
aaa
push
(bad)
jb
jmp
pusha
add
mov
stos
scas
xchg
or
or
sar
sbb
movs
or
sub
sti
les
xchg
fstp
es
add
inc
into
sbb
dec
or
imul
not
in
cdq
stos
adc
sub
shl
mov
imul
mov
cmp
in
jle
test
pop
push
les
out
jecxz
inc
int
xchg
(bad)
cmp
pop
es
jmp
push
pusha
inc
mov
cli
pop
aam
xchg
cmps
jle
pusha
add
push
xor
xchg
sub
and
sbb
(bad)
out
(bad)
daa
xchg
adc
xor
push
inc
or
xor
retf
mov
gs
mov
sub
or
fwait
pop
into
or
jns
and
xchg
mov
xchg
hlt
inc
call
push
addr16
mov
es
dec
ins
inc
ret
inc
cmp
ret
dec
pop
cmc
pop
jp
add
fisttp
gs
das
gs
jae
jle
sbb
imul
mov
and
xchg
cld
jecxz
or
ja
test
aad
push
imul
cmp
jmp
cmc
dec
pop
pop
popa
sbb
nop
dec
test
daa
add
leave
pop
movs
xchg
stc
sahf
cmp
mov
mov
out
xchg
ret
pushf
pop
movs
jge
fs
int3
sub
push
jmp
xchg
mov
loope
xchg
pextrw
das
sub
or
out
and
test
pusha
(bad)
cmp
xchg
add
mov
je
jno
popa
xor
je
fdivr
push
(bad)
mov
aad
aam
xor
pop
ret
in
sbb
jmp
repz
aam
mov
test
movs
in
jb
ja
adc
add
pop
scas
jae
movs
push
les
retf
je
inc
push
fcmove
loope
mov
pusha
mul
arpl
les
ins
sub
mov
mov
leave
xchg
in
push
mov
inc
daa
pop
pop
es
jnp
dec
les
loope
aad
rcr
dec
movs
pop
ss
icebp
addr16
xor
xor
repz
(bad)
std
test
imul
push
clc
push
dec
push
pusha
icebp
pop
adc
(bad)
pop
xchg
jnp
mov
movs
test
xchg
push
xor
rol
mov
cmp
fild
and
popf
(bad)
dec
sub
ja
and
mov
jecxz
pop
loopne
aas
(bad)
adc
add
mul
xlat
fs
out
mov
outs
dec
jmp
les
loop
(bad)
mov
jne
mov
push
push
cmp
(bad)
aam
ficom
mov
mov
cmc
call
push
inc
addr16
shl
in
fidivr
int3
dec
(bad)
xlat
movs
xor
fucomp
and
out
icebp
sahf
jnp
test
add
dec
mov
fild
movs
sub
dec
(bad)
jns
jl
jg
push
fild
xor
arpl
push
outs
ds
scas
(bad)
rcr
sub
aam
cld
call
push
cli
inc
mov
popf
not
stc
cdq
mov
vpackuswb
cld
xchg
ins
xor
sti
aas
stc
and
inc
xor
push
hlt
mul
mov
inc
enterw
or
movs
lock
jnp
pop
xor
push
add
jne
pop
dec
loope
adc
sar
inc
dec
(bad)
dec
sbb
test
dec
push
icebp
pop
xchg
jae
and
jae
popa
test
adc
out
xlat
loopne
fcmovbe
cmps
mov
xchg
fist
call
les
and
push
loopne
xchg
gs
icebp
xchg
(bad)
repz
pop
popa
jno
sti
xchg
jno
mov
pop
ja
iret
pop
adc
retf
mov
in
add
inc
retf
aas
push
fld
call
mul
jbe
fcomp
xchg
rcpps
(bad)
clc
lds
jno
mov
ror
inc
shr
cmps
in
in
xchg
sbb
fiadd
push
daa
cs
mov
sahf
mov
rdpmc
int
adc
(bad)
xchg
lock
ds
adc
dec
stos
push
mov
mov
add
mov
(bad)
cld
jg
jbe
ss
push
hlt
imul
fild
inc
push
daa
aad
test
cwde
xchg
out
xchg
jmp
add
mov
mov
mov
xchg
sub
xchg
(bad)
movs
sub
and
adc
push
dec
fcomp
cmps
inc
mov
pop
clc
jmp
test
(bad)
icebp
dec
scas
xchg
repnz
ficomp
adc
aad
mov
pop
(bad)
mov
aad
clc
es
add
ins
adc
sbb
sub
jae
mov
mov
cli
es
movs
mov
mov
and
xchg
xor
inc
and
in
push
mov
adc
xor
sahf
ss
pop
call
(bad)
jmp
or
pop
adc
movs
iret
repnz
jmp
(bad)
push
mov
jno
and
dec
jae
test
lods
loope
(bad)
adc
(bad)
mul
mov
outs
inc
push
or
mov
push
mov
repnz
scas
out
xor
pop
daa
add
mov
jmp
pop
mov
ret
not
add
cmp
lahf
mov
gs
mov
dec
add
gs
fistp
(bad)
jle
mov
arpl
in
xchg
cld
jmp
out
push
jns
movs
pop
fbstp
inc
daa
mul
test
sbb
sti
jg
test
or
sti
test
movs
cmps
inc
pop
push
pop
fdiv
xlat
imul
in
and
es
inc
pop
xor
sahf
xchg
xor
aaa
in
or
ja
call
mov
mov
call
hlt
mov
pop
add
nop
add
mov
aam
or
out
mov
xchg
(bad)
sti
inc
dec
ja
mov
mov
cld
dec
mov
ins
jb
cmp
sbb
xor
jbe
call
xchg
adc
movs
pop
hlt
fs
or
mov
jmp
mov
cmp
mov
daa
inc
pop
scas
push
mov
jl
imul
pop
cmp
rcl
out
(bad)
or
dec
push
cmps
xchg
mov
push
movs
div
into
add
xchg
jge
movnti
dec
and
inc
aam
loope
lds
bound
js
ss
cmp
adc
mov
adc
(bad)
xchg
arpl
in
rol
pop
inc
in
mov
sub
in
cmp
xor
sub
not
adc
adc
not
(bad)
adc
nop
inc
out
push
fistp
xchg
gs
gs
in
inc
sub
or
hlt
test
mov
mov
sub
xchg
add
hlt
(bad)
cdq
mov
or
out
iret
aam
das
or
das
dec
mov
das
and
mov
add
adc
and
cmps
xchg
icebp
std
lds
xor
add
dec
leave
sbb
jle
scas
adc
sahf
cmp
pop
mov
mov
fiadd
(bad)
mov
xor
(bad)
add
inc
mov
sbb
scas
iret
not
out
inc
xlat
in
mov
mov
mov
in
xchg
jno
popa
sub
pop
jbe
push
shl
call
in
and
loop
mov
pop
add
mov
frstor
std
daa
add
int3
mov
cs
or
dec
jo
hlt
mov
mov
sub
jno
retf
loopne
sub
ret
xlat
movs
mov
mov
test
push
repz
mov
mul
xor
pop
aad
inc
icebp
or
idiv
in
or
outs
ss
pop
xchg
dec
lods
mov
or
adc
adc
test
mov
cs
int
inc
mov
popf
jns
sbb
out
add
aam
xchg
sub
loop
or
inc
dec
jno
cs
cmp
lods
mov
(bad)
(bad)
loope
xchg
sub
es
add
imul
mov
and
popa
fwait
int3
(bad)
test
lds
or
pop
add
add
adc
cmps
inc
jbe
mov
cmp
mov
dec
sub
aam
add
lds
xlat
mov
fnstenv
repnz
dec
mov
adc
xchg
leave
adc
and
cmp
test
movs
dec
imul
or
imul
bound
push
loopne
fsubp
lds
aad
cmp
popf
pop
repz
pushf
lock
ss
and
aad
inc
cmp
and
bound
cli
jle
push
movs
call
xchg
push
fwait
lods
nop
xchg
les
and
or
inc
lds
inc
ret
inc
jae
aaa
gs
push
pop
pop
add
(bad)
push
fisttp
lds
adc
jge
inc
pusha
mov
mov
jp
nop
mov
into
test
adc
mov
fsubr
test
in
mov
mov
pusha
pop
cwde
out
sub
js
(bad)
dec
add
mul
popa
movs
add
jbe
(bad)
sbb
xchg
adc
xor
cmps
popa
addr16
mov
mov
in
repnz
(bad)
call
cmps
movs
rol
call
xor
mov
inc
pop
adc
movs
fiadd
mov
aaa
in
and
push
data16
xchg
pushf
out
sti
add
jnp
xor
xchg
arpl
in
cmps
add
pop
and
pop
mov
inc
xchg
cwde
cli
aam
mov
mov
pusha
inc
xor
inc
push
or
and
lods
add
outs
int3
iret
sar
push
mov
push
fbld
xor
cmc
pushf
jo
dec
push
jne
(bad)
je
xor
push
movs
clc
(bad)
cmp
push
mov
out
movs
mov
mov
gs
add
xor
cmp
cmc
shl
loope
(bad)
xor
(bad)
gs
cmp
(bad)
and
scas
enter
add
push
mov
cmp
test
shl
call
aaa
xchg
cmp
test
dec
test
jae
cmp
comiss
mov
test
pop
pop
dec
sbb
push
and
or
or
sub
mov
mov
pop
rcl
mov
call
add
mov
push
push
clc
je
jno
pusha
or
inc
mov
mov
and
in
mov
inc
loop
pop
imul
fadd
repnz
out
mov
mov
in
sahf
push
jne
and
xchg
xchg
imul
(bad)
mov
mov
mov
lock
xor
or
pop
pop
ss
mov
inc
inc
retf
in
cmp
lods
adc
mov
xchg
retf
cmps
pop
sub
jp
addr16
sbb
jmp
sub
push
xchg
jno
jb
out
jbe
out
dec
sub
(bad)
pop
(bad)
out
inc
(bad)
jg
inc
and
and
in
je
rcl
jp
test
repnz
repz
mov
jl
sbb
pusha
retf
pop
fcom
scas
popa
mov
scas
jmp
pop
mov
loope
cmps
and
jb
(bad)
mov
and
rol
into
mov
push
jecxz
mov
repnz
xor
push
(bad)
jae
dec
dec
addr16
mov
hlt
cmps
out
in
push
add
xchg
mov
hlt
fst
test
fs
inc
push
xchg
lods
cmp
cli
cwde
sbb
lods
jmp
pop
stc
adc
and
mov
gs
ret
clc
daa
in
call
add
mov
aas
xchg
and
inc
jg
mov
aad
push
pusha
imul
jg
inc
in
sahf
lods
mov
push
jo
bound
sub
add
jmp
ret
rcr
mov
xor
imul
shl
test
adc
retf
jle
daa
inc
daa
js
fdiv
addr16
and
sbb
out
not
dec
nop
mov
popa
pop
jne
jecxz
cmp
and
dec
fcmovnbe
test
xchg
enter
lods
push
adc
push
js
hlt
mov
cmp
lods
inc
adc
xor
add
aas
dec
iret
push
int
adc
ret
das
inc
in
out
sub
(bad)
in
fscale
adc
inc
push
bound
adc
jl
xchg
aam
adc
cwde
lahf
sti
(bad)
inc
or
nop
cmc
out
xor
jns
dec
xlat
pop
pop
mov
inc
scas
(bad)
jle
xchg
adc
adc
aaa
loopne
add
cmp
not
ret
and
push
add
mov
xchg
std
jmp
arpl
test
(bad)
int
dec
ins
icebp
mov
mov
jb
sbb
call
and
xor
aaa
pop
(bad)
icebp
je
cmps
hlt
jae
push
dec
mov
cmp
and
pop
sub
jae
xchg
fld
ins
push
test
xchg
push
aaa
sahf
cmps
push
call
stos
mov
sub
jns
fs
les
adc
retf
xchg
mov
jno
in
lods
das
dec
fs
es
xchg
in
jnp
sbb
push
dec
fist
cmps
popa
out
data16
mov
inc
sbb
xor
cmp
push
lods
cs
fimul
inc
dec
ret
pop
xchg
push
nop
cmps
mov
dec
push
ds
pop
and
xchg
inc
fiadd
inc
cmp
retf
xlat
ret
sar
repz
test
aaa
mov
imul
inc
pop
push
cs
push
cmp
jne
test
dec
mov
cmp
add
gs
out
daa
inc
mov
xchg
(bad)
in
scas
fs
aad
xchg
mov
in
scas
inc
dec
cmps
or
mov
stos
mov
mov
xchg
dec
push
cmps
mov
lods
fbld
jbe
add
jp
mov
mov
pop
mov
fadd
in
sbb
not
xlat
mov
mov
ret
fmul
cdq
sub
pop
imul
call
add
ja
mov
dec
mov
mov
test
es
in
adc
sbb
xlat
adc
mov
xor
mov
adc
inc
xchg
ret
stos
ficomp
aam
(bad)
dec
dec
cmp
in
jge
sub
jmp
or
xor
sysenter
in
cmp
add
ja
adc
jnp
adc
jno
pop
mov
shl
jne
pop
pop
pop
xor
jns
inc
xor
and
dec
pop
movs
xor
mov
pop
ins
(bad)
lahf
ficom
adc
mov
stos
out
push
mov
inc
jne
pop
es
aam
mov
pop
lods
xchg
sbb
push
and
mov
xchg
outs
call
push
imul
xor
xchg
out
out
mov
shr
das
js
in
(bad)
xor
cmps
shl
cmp
test
not
idiv
push
rcl
jbe
jp
adc
loopne
pushf
aas
(bad)
shr
jge
(bad)
dec
dec
aaa
mov
adc
xor
push
mov
or
xor
retf
sub
mov
test
push
pushf
sub
sub
mov
or
outs
inc
inc
int3
mov
in
cmp
and
fwait
idiv
(bad)
sub
test
cdq
adc
mov
pushf
lock
movs
adc
adc
hlt
sub
aaa
cmc
es
inc
cdq
test
inc
rol
mov
and
add
adc
inc
rcr
inc
aaa
loop
add
xor
fs
inc
inc
sub
fst
jne
hlt
shl
ins
js
sub
dec
push
je
jl
out
in
pop
fwait
push
cmps
xor
push
in
pop
jnp
scas
(bad)
jo
aaa
mov
push
sbb
(bad)
mov
xor
out
dec
fld
xor
mov
(bad)
lds
fcom
shr
pop
pusha
sbb
add
aas
and
xchg
add
xor
loopne
xlat
cmp
js
outs
enter
aaa
inc
and
pusha
pop
fnstenv
and
mov
sub
mov
mov
jae
add
jae
add
es
test
(bad)
aad
xchg
dec
jbe
ins
js
mov
(bad)
out
shr
(bad)
mov
mov
in
jmp
add
adc
aam
cwde
sub
sbb
push
inc
(bad)
inc
cmps
pop
(bad)
imul
lds
(bad)
mov
push
jb
sbb
cmc
mov
mov
xchg
shl
lock
out
inc
add
dec
pop
xchg
xchg
xor
pop
hlt
loope
dec
mov
or
mov
and
push
iret
jne
cdq
mov
add
xor
adc
or
inc
movs
mov
sahf
dec
xor
push
out
aad
xor
and
sbb
cmps
and
and
mov
ss
(bad)
mov
push
and
xchg
pop
test
adc
adc
out
mov
mov
jbe
cmps
enter
and
jno
pushf
ss
test
mov
add
(bad)
(bad)
mov
loope
pop
pop
sbb
or
lahf
(bad)
cmps
inc
fdivp
jmp
daa
mul
push
mov
xchg
test
jmp
js
icebp
aaa
addr16
fcomp
push
or
dec
movs
daa
xchg
add
es
sub
call
fsub
data16
out
(bad)
jp
xchg
nop
inc
pop
sub
jmp
pop
sbb
jo
mov
mov
pop
inc
mov
ror
push
test
into
pop
js
addr16
xchg
out
hlt
stos
dec
leave
sbb
movs
bound
enter
dec
pushf
dec
xchg
call
inc
pop
and
ret
pop
adc
mov
bound
and
ins
push
sbb
lods
arpl
sub
aam
sub
hlt
mov
adc
jmp
cld
pop
out
test
div
icebp
push
lea
clc
shr
jno
pusha
pushf
adc
push
and
push
adc
lods
movs
(bad)
popf
iret
dec
xlat
ins
bound
push
jb
jne
xor
pop
test
sti
mov
in
mov
fwait
(bad)
mov
pop
adc
push
pop
adc
sub
retf
xchg
jae
test
scas
ret
jecxz
call
pop
jmp
rol
hlt
mov
jp
xchg
retf
xlat
mov
xchg
pop
sbb
arpl
or
push
cmp
sub
xchg
hlt
shr
movs
sti
nop
cmps
aaa
inc
fs
data16
inc
adc
and
(bad)
gs
sti
ret
push
jmp
sub
xchg
mov
in
xchg
inc
sbb
jb
and
rol
hlt
bound
push
fsubr
das
inc
loopne
inc
cli
xor
pop
les
pop
and
xchg
push
rcr
pusha
mov
mov
inc
retf
pop
mov
leave
mov
stc
in
and
mov
sbb
(bad)
push
cmp
lahf
mov
push
mov
sub
mov
sbb
xchg
dec
faddp
fiadd
mov
or
popa
popf
cmp
xor
aas
out
in
sub
iret
xrelease
mov
and
leave
mov
leave
xchg
les
imul
dec
push
pop
and
fs
je
xor
push
pop
sub
fidiv
push
push
lock
push
pushf
out
fdiv
push
xor
jne
mov
(bad)
adc
movs
in
je
or
(bad)
pop
loope
(bad)
out
in
dec
dec
adc
bound
mov
movs
xor
jge
push
xchg
inc
loopne
in
xor
adc
jmp
jg
in
and
and
outs
pop
add
div
dec
push
mov
inc
cld
test
aad
jbe
je
in
mov
and
pop
aas
movs
push
xor
pop
inc
cdq
jnp
in
xchg
xor
mov
mov
stc
cmp
or
cmp
dec
xchg
xchg
adc
in
mov
sti
jnp
sti
sub
xchg
pop
sti
cli
jl
ret
fmul
inc
jbe
fidivr
repz
mov
ss
sar
pop
jmp
sbb
sbb
not
pop
cmc
jg
inc
js
addr16
mov
pop
sub
aad
(bad)
jp
icebp
adc
test
or
mul
dec
jnp
mov
test
scas
xchg
pop
aad
retf
pop
jge
push
cs
xchg
sub
mov
cmps
std
loop
add
and
and
push
je
jecxz
cmp
ins
ficomp
and
dec
jmp
xor
mov
cmp
cwde
outs
scas
in
xchg
pop
test
aaa
sbb
outs
xchg
ja
enter
icebp
out
dec
inc
lds
mov
add
push
xchg
jle
inc
retf
cld
(bad)
cdq
or
ret
or
fdiv
xchg
inc
out
hlt
hlt
test
(bad)
imul
test
inc
jne
lods
mov
xchg
das
lea
sub
cmps
repz
mov
aaa
jecxz
mov
rcr
xor
sbb
mov
xor
and
cdq
jno
xlat
out
sti
into
sar
push
call
pop
add
push
cmps
popa
stc
inc
in
fs
inc
dec
add
pop
xor
in
push
je
gs
sbb
shl
cmp
enter
(bad)
jbe
push
mov
fchs
cli
pop
sub
mov
mov
jmp
fsub
mov
mov
fbstp
push
test
sbb
sub
fmul
ja
pushf
add
and
jo
mov
mov
cmp
mov
(bad)
aam
sti
das
hlt
int
mov
shl
fwait
pop
xor
addr16
mov
mov
dec
fld
pop
int3
test
daa
adc
push
hlt
mov
inc
dec
push
sti
es
and
inc
pop
and
retf
lahf
cmp
iret
jo
cmp
lea
or
cmc
ins
adc
nop
ficom
and
pop
je
popa
adc
in
mov
xchg
and
push
std
xchg
push
fsubp
inc
leave
xchg
arpl
(bad)
into
aad
push
push
pop
cmps
fs
into
and
push
adc
or
out
xchg
hlt
out
push
lods
aad
test
ins
pop
enter
xor
imul
sbb
sub
lods
outs
in
inc
loope
loopne
out
and
mov
out
xor
jmp
push
sbb
pop
xlat
push
mov
(bad)
xor
arpl
fmul
mov
cmp
retf
pop
xchg
enter
and
and
sar
xor
icebp
in
mov
xor
jbe
xlat
xor
push
out
je
inc
or
adc
in
cld
les
aam
fild
add
add
int
mov
aam
ins
imul
fisttp
xchg
pop
retf
sbb
push
dec
stc
sbb
loopne
in
sub
xchg
pusha
pop
jns
or
xor
mov
test
pop
push
(bad)
icebp
jae
inc
fcomp
sbb
pop
mov
mov
test
(bad)
xor
loope
and
scas
mov
push
sub
rcl
push
xchg
leave
and
retf
(bad)
test
xchg
out
jmp
cmps
xor
jae
inc
das
lds
mov
bound
fs
fcomp
ret
movs
xor
ds
int
mov
jns
pop
test
xor
test
xor
(bad)
pop
xchg
push
(bad)
in
mov
mov
push
inc
or
test
and
in
movs
xchg
push
add
imul
pop
dec
fwait
call
xchg
out
rol
bound
push
fist
pop
fs
call
sahf
fs
add
xchg
inc
in
sbb
retf
fcomp
sub
or
and
je
push
jns
mov
cmp
leave
test
xlat
xor
xchg
icebp
xor
push
sub
push
ins
in
cmps
dec
in
and
loopne
sbb
jns
xor
cld
movs
mov
movs
add
push
movs
sbb
out
mul
cmps
mov
and
fs
add
scas
dec
mov
mov
cmp
mov
inc
mov
or
sub
push
enter
cmp
gs
js
add
push
inc
jge
inc
fnstenv
push
cmp
daa
cmp
hlt
jne
data16
call
imul
movs
xor
pusha
push
push
inc
icebp
cmps
pushf
ds
shl
movs
test
sub
add
test
xor
outs
cmc
rcr
cmc
mov
div
test
test
xchg
or
adc
int
js
dec
test
push
mov
jno
test
and
add
add
xchg
(bad)
mov
mov
jl
sub
pop
in
gs
add
pop
xchg
ficom
outs
lea
cld
pop
movups
neg
scas
das
into
add
and
mov
push
and
rol
mov
mov
inc
retf
pusha
pop
test
int3
dec
jne
adc
bound
xchg
or
(bad)
jo
push
in
mov
adc
mov
mov
dec
mov
shl
enter
sbb
jle
aam
mov
hlt
cmp
and
cmp
sar
pusha
(bad)
jmp
xchg
shl
(bad)
cmc
in
test
cld
out
rol
loopne
add
inc
and
stc
xchg
aad
aam
in
push
jmp
sub
xchg
mov
adc
mov
fisttp
inc
scas
mov
xchg
neg
jl
pop
xor
mov
iret
out
push
out
cmp
test
aaa
cmc
cmp
es
mov
inc
js
cld
sub
dec
ud2
imul
call
fist
mov
stc
inc
adc
repz
loop
pop
add
inc
dec
jnp
xchg
test
mov
inc
mov
adc
xlat
push
or
cdq
es
mov
jb
adc
ret
xchg
sub
xchg
cmc
xor
lea
out
inc
(bad)
mov
jno
rcl
adc
pop
hlt
xchg
pop
das
jno
pop
shl
adc
mov
push
push
sti
xlat
push
and
(bad)
jno
sub
int
cmc
std
inc
adc
xchg
pop
mov
dec
or
xor
js
inc
in
sub
data16
in
push
pop
add
sbb
rol
daa
and
push
loop
xor
push
mov
xchg
shl
movs
pop
mov
repz
jno
jbe
(bad)
jge
test
call
mov
fidivr
push
movs
pop
fild
out
dec
cmp
(bad)
adc
mov
dec
dec
add
(bad)
hlt
pop
icebp
cmp
push
xor
push
in
out
xchg
push
ss
scas
out
and
inc
test
jle
icebp
mov
aas
and
xor
popf
dec
and
xor
sbb
scas
(bad)
push
ss
fadd
sar
lock
dec
push
add
add
add
stos
aam
movs
(bad)
mov
push
lods
mov
aaa
push
test
aad
retf
adc
in
and
aas
pop
stos
xor
movs
out
movlps
mov
fs
pop
ins
popf
mov
int3
or
push
jo
ja
ret
pop
aad
pop
mov
ret
add
push
push
mov
aam
imul
pop
or
(bad)
movs
jge
add
rcr
and
movs
ja
ins
aad
call
aam
bound
sub
mov
xchg
or
adc
pop
push
and
in
push
adc
ds
cmps
frstor
mov
out
bound
adc
inc
movs
pop
sahf
out
xor
fwait
gs
jae
aad
mov
xor
inc
push
pop
inc
push
mov
add
xor
push
inc
cmps
or
pop
inc
mov
lahf
aad
out
sub
and
bound
mov
push
push
mov
out
inc
pushf
mov
hlt
test
xor
test
jns
mov
dec
add
sub
lds
lock
mov
cmp
add
xchg
adc
popf
mov
(bad)
sbb
xchg
sbb
pop
dec
xchg
xlat
(bad)
and
pop
push
push
hlt
les
sub
mov
movs
or
pushw
enter
aad
nop
pop
mov
push
(bad)
ja
push
aaa
ds
xlat
(bad)
cmp
stos
jno
cmp
ret
imul
pop
mov
inc
or
adc
loop
mov
xchg
adc
scas
ss
adc
jmp
jecxz
mov
cmps
mov
iret
adc
fisubr
cmovnp
mov
aam
lods
cmp
les
mov
cmp
(bad)
sbb
aam
jp
push
cmp
jns
mov
xchg
fdivp
xchg
add
mov
icebp
push
ja
aad
dec
div
push
mov
xchg
push
add
out
pushf
mov
test
ror
leave
bound
jp
in
jg
mov
and
adc
popa
fwait
add
adc
pop
icebp
push
ds
push
loopne
pushf
je
pop
sub
clc
xchg
(bad)
outs
pop
jae
inc
out
xor
adc
pop
cmp
push
ret
jbe
inc
adc
and
inc
and
sbb
add
int3
arpl
xchg
pusha
sbb
xchg
pop
mov
cmp
imul
or
jbe
stc
xchg
mov
add
jmp
cmps
and
out
les
and
nop
dec
cmp
out
mov
mov
test
aam
(bad)
jo
cmp
retf
movlps
or
mov
xchg
and
xchg
(bad)
test
ret
not
push
or
sbb
xor
adc
adc
sub
jl
loope
mov
jbe
sbb
je
ins
jae
daa
adc
mov
pcmpgtb
les
aam
test
inc
mov
and
inc
push
jb
lahf
and
xchg
rcl
shl
jl
data16
mov
xchg
push
fsub
jmp
imul
mov
and
jnp
push
mov
aad
stos
(bad)
in
hlt
cmps
addr16
lods
push
mov
xchg
or
nop
bound
and
cmps
in
inc
std
xor
sub
mov
jae
xor
mov
push
sbb
mov
cdq
test
gs
adc
(bad)
fnsave
inc
xor
dec
add
and
stc
sbb
retf
mov
in
(bad)
retf
jo
jmp
or
dec
jbe
or
int3
or
and
sbb
cwde
jmp
sbb
sub
mov
scas
in
sbb
(bad)
push
ss
cld
cmp
(bad)
retf
add
dec
loopne
movs
dec
stos
push
lock
hlt
popf
mov
retf
mov
movs
pushf
ss
sub
bound
popf
mov
or
stos
mov
nop
in
ins
sub
push
push
inc
cdq
dec
add
mov
shl
fnsave
pop
or
shl
add
aad
mov
sub
idiv
pusha
imul
cmps
hlt
test
or
mov
das
mov
pop
(bad)
fisttp
add
leave
push
pop
jo
bound
arpl
lock
popf
test
or
mov
xchg
cld
inc
inc
sbb
int
(bad)
jecxz
gs
add
clc
sahf
scas
int3
or
addr16
out
iret
(bad)
cs
aaa
imul
inc
fdiv
outs
push
and
cmps
stos
adc
and
cmp
dec
pop
fs
ja
cmp
jb
or
cmp
sbb
inc
in
mov
lods
dec
inc
adc
mov
or
sbb
in
or
inc
pop
xchg
xlat
movs
loope
pop
lods
dec
popa
jp
and
add
adc
not
mov
test
jno
test
cmps
add
sbb
dec
inc
cmps
imul
ins
mov
in
js
mov
clc
push
adc
sar
call
mov
fist
push
push
rcr
sbb
inc
mov
sbb
add
xor
cmp
daa
cmps
in
push
int3
fcom
cmp
imul
mov
arpl
dec
cmp
xchg
xchg
mov
xchg
test
or
jno
sub
adc
rcr
es
rcl
icebp
fsubr
dec
jae
adc
inc
inc
gs
aaa
jns
xchg
fld
stos
lock
stc
pop
test
inc
pop
loope
dec
inc
xchg
(bad)
(bad)
jmp
pop
ins
mov
sti
hlt
aam
nop
loopne
cmps
inc
int3
or
push
xor
add
mov
pop
(bad)
adc
outs
push
jb
cld
adc
ja
in
scas
adc
mov
and
sbb
inc
adc
adc
leave
push
lock
xchg
xchg
or
test
push
xor
jmp
ret
xor
std
loope
fsub
xor
imul
add
xor
daa
in
je
dec
add
(bad)
dec
mov
(bad)
mov
push
push
imul
test
fucom
rcl
enter
pushf
dec
mov
aaa
test
xlat
inc
push
jno
cmp
push
lahf
adc
cmp
les
push
loop
movs
cdq
stc
xchg
mov
jne
jecxz
jnp
das
add
xchg
retw
mov
sbb
icebp
adc
repz
xchg
in
add
and
mov
jg
loopne
test
es
inc
out
hlt
xchg
xor
push
out
je
inc
jecxz
cmp
jnp
mov
cdq
jmp
stc
mov
mov
push
rol
xchg
jle
dec
bound
mov
jbe
or
add
iret
scas
lds
xchg
rcl
test
daa
pop
call
(bad)
adc
movs
jo
(bad)
cmp
mov
inc
mul
test
out
out
aaa
mov
push
nop
sbb
arpl
ins
push
mov
inc
les
sub
ja
test
inc
out
ret
daa
mov
test
out
mov
xchg
push
adc
ret
cmp
and
pop
mov
sub
hlt
mov
dec
dec
mov
mov
inc
push
in
aad
mov
hlt
add
xor
mov
pop
inc
ss
push
inc
sub
cmp
cmp
jmp
jge
mov
or
(bad)
arpl
add
mov
mov
loope
aam
xchg
mov
pusha
cmp
sahf
push
and
mov
jle
xchg
test
inc
pop
ins
sbb
sbb
movs
movs
mov
movs
push
cmps
loopne
ins
xchg
std
cld
xchg
cmps
pop
(bad)
leave
inc
fist
xchg
cld
inc
(bad)
dec
in
push
cmps
xor
gs
(bad)
xchg
cld
pop
sahf
out
xor
(bad)
ret
lea
adc
xchg
cmp
inc
lahf
sbb
mov
xchg
lods
fcom
pop
pop
dec
fs
adc
or
pushf
daa
mov
imul
cmp
mov
les
aaa
and
lds
sub
lea
xchg
push
xor
pop
sbb
shl
inc
mov
out
pusha
aas
cmps
add
stc
pop
push
ja
test
sub
cmp
cmp
cmc
je
or
lahf
pop
repnz
aaa
loop
sub
cmc
jnp
cmp
pop
imul
aas
push
les
in
inc
pushf
mov
jnp
das
lahf
ja
push
mov
xchg
imul
jb
push
or
pop
xor
sbb
les
mov
(bad)
push
imul
hlt
pop
xlat
mov
mov
push
add
in
out
pop
pop
xor
and
xchg
repz
jle
(bad)
inc
aas
inc
jbe
xor
(bad)
sbb
jecxz
inc
push
mul
mov
jmp
(bad)
mov
cmp
mov
addr16
sub
dec
ins
bound
push
xchg
add
mov
sbb
xchg
(bad)
movs
pop
fucomi
xchg
fisttp
fdivr
shl
xchg
mov
popa
rcr
pushaw
push
mov
and
mov
jle
pusha
add
and
int
mov
popa
aaa
aad
in
nop
jae
out
pop
retf
and
and
jecxz
dec
inc
test
daa
jne
jmp
mov
jge
xchg
push
mov
xchg
dec
pop
shl
movs
in
pusha
cdq
rcl
frstor
aas
rcl
add
add
mov
or
xchg
movs
adc
xchg
xor
(bad)
aam
into
xlat
inc
xchg
mov
jl
aad
inc
sub
aam
nop
sbb
ret
sub
mov
inc
xor
neg
ja
xor
fmul
xchg
test
xchg
pushf
jbe
xor
jno
call
push
aaa
rcl
jp
add
(bad)
pop
int3
es
idiv
mov
int
xlat
jecxz
lahf
pop
out
adc
hlt
test
ficom
aas
hlt
jbe
inc
xor
mov
ret
(bad)
hlt
idiv
sub
nop
(bad)
and
scas
xchg
daa
push
dec
bound
cwde
inc
enter
lds
xor
push
xor
adc
mov
aaa
cmp
xchg
ins
xchg
xor
(bad)
leave
lds
sub
adc
sbb
xor
xchg
in
or
out
push
jmp
pop
cmp
mov
sub
(bad)
push
scas
hlt
cmps
mov
fist
push
inc
je
fldcw
imul
and
and
cmps
pop
push
aaa
jmp
fsub
or
jle
adc
out
push
adc
xor
push
arpl
pop
(bad)
adc
aam
pop
mov
jae
push
xchg
push
movs
les
enter
cwde
cwde
fwait
and
call
in
push
retf
inc
xlat
xchg
push
es
mov
mov
inc
push
test
fs
arpl
sbb
add
push
inc
test
sub
ss
mov
sbb
loop
dec
cmp
jge
and
out
xchg
xor
mov
jp
stc
ss
(bad)
dec
arpl
sub
sub
mov
test
call
xchg
cmp
dec
retf
ins
test
mov
clc
fucomip
mov
leave
test
mov
push
pop
push
add
xor
mov
std
xchg
or
call
jnp
xor
inc
sbb
ror
add
fst
cdq
push
shl
out
in
mov
add
fcom
outs
ja
jne
adc
sub
nop
push
sahf
xchg
outs
movs
popa
cmp
mov
js
fs
inc
hlt
push
xchg
aas
(bad)
jecxz
out
inc
stos
das
imul
adc
(bad)
jnp
cmp
push
cmps
fwait
add
inc
data16
pop
cmp
cmps
or
into
mov
xlat
cdq
cmps
mov
mov
jne
sbb
add
and
sub
cmp
jmp
shl
out
rcl
mov
(bad)
pop
in
xchg
and
jno
pop
or
lahf
sbb
shl
int3
xlat
into
pop
neg
mov
pop
xchg
and
jnp
repnz
xlat
aas
add
push
in
js
call
push
mov
(bad)
lea
add
dec
inc
and
inc
mov
ret
cmp
jb
ins
mov
mov
gs
bound
test
inc
bt
inc
mov
icebp
fs
stos
xchg
inc
jmp
jmp
sub
je
ss
cld
mov
pop
pop
add
push
adc
mov
dec
jge
ret
pop
push
dec
fwait
adc
inc
div
iret
push
aas
push
inc
xor
ret
jnp
cs
and
mov
xchg
jecxz
cdq
cmp
push
daa
sar
mov
enter
pop
mov
inc
cwde
sbb
jne
pushf
xlat
mov
push
jnp
xchg
aad
xlat
shl
(bad)
push
ss
add
mov
inc
hlt
push
je
jp
not
mov
in
jne
hlt
test
cmp
cli
and
push
lock
fwait
mov
mov
iret
das
cmp
es
push
std
inc
adc
and
xlat
aam
jle
sbb
mov
movs
push
inc
mov
push
jg
sub
jbe
sub
and
pop
push
test
mov
jb
mov
ss
outs
(bad)
xor
sub
test
nop
rcr
mov
mov
xlat
pop
push
jmp
dec
and
push
in
inc
sub
lods
mov
cmps
sub
xchg
cmps
cmc
and
dec
push
das
aaa
cmp
push
aaa
cmp
rcl
mov
fdecstp
mov
movs
mov
(bad)
out
jecxz
mov
xor
retf
mov
pop
rcl
inc
add
sbb
cmps
mov
gs
jle
dec
inc
pop
popa
cmps
sub
jne
push
push
test
and
in
arpl
and
mov
mov
arpl
and
mov
jno
test
cmc
aas
dec
jb
bswap
push
mov
pop
lods
lds
dec
retf
popa
mov
outs
xchg
aam
cmp
adc
(bad)
jns
loop
and
mov
mov
mov
and
push
mov
aas
ja
xor
movs
ror
out
(bad)
fisub
jne
inc
cmp
pop
hlt
movzx
jp
shl
jno
mov
(bad)
retf
mov
call
dec
dec
and
shl
jl
cwde
push
mov
mov
retf
fimul
push
xor
xchg
scas
inc
retf
aam
jg
pop
push
mov
call
mov
dec
int
movs
xchg
xor
sub
aas
pop
xor
ja
stos
add
cmp
lahf
sub
je
and
subps
xchg
iret
xor
cmps
sbb
mov
ja
add
adc
rep
outs
shl
cdq
jle
jmp
fucomi
sti
mov
sahf
aaa
cmp
xor
inc
inc
push
shr
ins
add
lahf
pop
or
or
xchg
xchg
push
pop
cld
xchg
idiv
je
inc
imul
lock
cmp
xor
not
div
xchg
sub
xchg
in
mov
call
xor
mov
dec
adc
ret
mul
xchg
les
cmp
pop
or
jmp
in
(bad)
shl
aaa
mov
fbstp
xor
xchg
loop
adc
xchg
xchg
inc
add
jns
stos
inc
mov
xchg
jp
jns
push
lods
pop
xchg
in
xchg
cmps
adc
cld
addr16
in
and
div
nop
push
ins
jge
mov
ss
lods
add
cmovl
ja
cmp
popa
out
xchg
imul
idiv
or
cdq
mov
xchg
js
jg
xchg
sahf
(bad)
push
hlt
out
sub
jbe
out
jmp
in
aaa
xor
xchg
add
sub
rcr
mov
(bad)
ins
xchg
inc
sub
sti
mov
repz
mov
loopne
mov
cmp
sub
clc
adc
jmp
cmc
and
adc
adc
inc
cmps
cmp
cmp
addr16
xchg
push
pop
retf
xchg
rcl
pop
cmc
mov
retf
stos
adc
inc
adc
fwait
aad
(bad)
(bad)
mov
cld
mov
xchg
cmps
xchg
test
les
push
bound
sbb
ss
mov
mov
cld
(bad)
int3
push
mov
(bad)
pop
and
popa
mov
pop
jbe
les
mov
mov
xchg
and
jbe
cmps
jno
dec
jmp
mul
mov
jmp
popf
xchg
cmp
test
aad
xor
pop
mov
and
clc
movs
inc
pop
daa
mov
lds
hlt
out
shl
bound
sbb
push
mov
fdiv
cmp
pop
call
inc
jno
push
xchg
push
lock
in
data16
icebp
(bad)
call
mov
or
xchg
loopne
jge
ret
inc
gs
sub
jmp
iret
xlat
rcl
(bad)
in
retf
aam
call
push
inc
push
sub
inc
pop
fscale
jnp
pop
adc
ret
mov
aad
pop
xor
stos
mov
mov
jnp
in
test
xlat
mov
inc
mov
jb
in
je
cmp
mov
das
dec
adc
outs
jb
addr16
pop
mov
lds
inc
inc
push
(bad)
loope
mov
mov
das
and
jbe
pop
cmc
push
push
cmps
xor
repz
shl
xchg
shl
jmp
cwde
mov
movs
fs
xchg
es
ss
mov
mov
jp
push
scas
dec
rcl
pop
cmps
xor
add
fidivr
aaa
ss
movs
int
add
movs
inc
ja
mov
push
xor
int
add
dec
add
popa
jne
out
cmps
xchg
add
jne
and
int3
lds
jb
push
jo
dec
out
lds
adc
jmp
mov
es
les
cmp
xor
pop
int3
and
jno
mov
push
out
fdiv
lods
mov
mov
inc
add
dec
mov
add
xchg
out
dec
fwait
pushf
lock
in
cli
push
xor
into
add
pop
mov
jmp
test
cmps
outs
xor
xor
ret
imul
cld
div
push
xchg
jmp
lock
lea
mov
dec
or
sub
push
add
aam
aam
in
enter
cdq
mul
inc
cmp
inc
jl
in
ret
out
sub
cmc
mov
xchg
pusha
lods
shr
inc
pusha
mov
mov
repz
ret
aam
aaa
addr16
in
icebp
nop
test
loop
ret
add
nop
not
es
sbb
test
xchg
sub
xor
mov
shr
add
dec
jne
mov
frstor
adc
and
cmps
xchg
xor
das
and
in
in
xor
lods
hlt
pop
out
xchg
sub
ret
adc
cmps
sub
adc
mov
mov
fidiv
(bad)
(bad)
iret
dec
adc
mov
hlt
jp
dec
jb
or
in
(bad)
sbb
adc
es
arpl
je
cmp
jmp
lods
lahf
pop
movs
adc
mov
add
adc
cdq
inc
adc
mov
push
jg
stos
lods
repnz
out
cmc
jo
movs
clc
sbb
xor
inc
pop
xchg
add
retf
mov
xor
push
sbb
mov
int3
pusha
inc
ror
ds
inc
xor
sbb
icebp
or
mov
ror
xchg
inc
in
and
out
ds
sahf
jb
outs
in
rcl
in
inc
xchg
hlt
lds
ret
xchg
ds
dec
ss
leave
mov
int3
push
test
xchg
xor
or
sbb
(bad)
jmp
aad
(bad)
mov
inc
or
jno
lea
mov
mov
enter
loop
mov
xchg
hlt
pop
inc
nop
or
sub
pop
icebp
addr16
xor
pop
xchg
in
push
fcmovb
add
cmp
xlat
push
cs
add
movs
mov
out
or
hlt
jne
sbb
push
or
jle
add
cmps
inc
inc
adc
jno
mov
int3
cmps
inc
xchg
popa
adc
adc
ret
xor
sub
data16
jl
sbb
and
xor
scas
adc
test
es
es
sub
adc
adc
mov
fidiv
vsubss
hlt
loop
fsubr
outs
push
jns
dec
xchg
(bad)
ror
sar
mov
ins
pop
push
dec
in
xor
shl
stos
adc
mov
movs
and
gs
neg
stos
data16
arpl
out
fsub
add
aaa
xchg
imul
lds
push
leave
sub
add
repnz
iret
shl
scas
inc
inc
out
cmp
fst
cmp
test
inc
ffree
xor
add
jmp
nop
and
pop
in
js
addr16
inc
int3
scas
inc
(bad)
hlt
shl
xchg
(bad)
pop
test
adc
sahf
xchg
sub
inc
mov
jle
jns
xchg
cmc
mov
cmp
dec
adc
in
and
cmps
add
test
inc
pop
push
arpl
int
in
dec
call
test
aam
std
(bad)
cdq
shr
add
cmps
jno
test
pop
aam
test
mov
mov
test
out
jno
aaa
adc
add
enter
xchg
and
aam
(bad)
xchg
mov
mov
ss
jne
sub
in
pop
addr16
fadd
or
test
adc
test
pop
icebp
nop
hlt
mov
dec
cmps
pop
mov
xor
addr16
out
js
xchg
ins
adc
dec
inc
pop
scas
jae
out
push
(bad)
mov
es
not
mov
shld
int3
adc
adc
pop
jg
js
retf
jae
dec
mov
xchg
cmp
mov
out
and
shl
adc
loop
pop
mov
stc
arpl
mov
test
cmps
mul
sbb
jecxz
arpl
ficom
fcomp
sub
inc
repnz
shl
dec
push
sub
mov
adc
xor
dec
mov
scas
push
jg
int
xlat
mov
les
push
pop
jno
aam
and
adc
sub
or
gs
test
or
push
inc
xlat
aad
arpl
pop
push
rcr
lahf
(bad)
aad
dec
scas
aam
pop
xchg
shl
repnz
out
inc
mov
cmp
fs
add
add
mul
xchg
mov
out
mov
hlt
cmc
cmp
xchg
in
mov
(bad)
js
fisubr
stc
or
push
push
inc
jns
xchg
dec
jne
out
xchg
in
mov
xchg
pop
rol
xchg
add
pop
imul
jo
test
jge
scas
inc
popf
js
cli
das
hlt
jo
adc
test
es
dec
add
inc
or
pop
cmp
aad
cmps
sti
retf
imul
shl
shl
mov
push
xchg
nop
dec
shr
mov
daa
(bad)
leave
outs
std
test
xchg
push
or
sub
xor
pop
mov
mov
sbb
mov
lock
cdq
shl
xlat
rol
in
movs
push
je
fs
daa
test
push
push
enter
pop
sub
xchg
fwait
sub
fsub
mov
je
push
xor
fidiv
inc
icebp
or
cmps
ret
pop
cdq
data16
xor
xor
into
pop
pop
jge
aas
jle
mov
scas
lds
out
cmp
pop
dec
and
pop
or
push
mov
adc
and
jae
movs
push
add
stos
jmp
jns
popa
xchg
add
les
cmc
in
hlt
cmps
mov
mov
cdq
and
cmps
fdivr
inc
adc
xor
loopne
in
push
pop
(bad)
and
sbb
jne
fld
or
ss
push
(bad)
(bad)
mov
inc
scas
mov
aaa
and
hlt
and
inc
sbb
dec
and
mov
and
loop
xchg
neg
jbe
retf
mov
daa
inc
and
and
ret
dec
xchg
and
(bad)
int3
(bad)
xchg
les
mov
adc
add
jo
jno
div
test
mov
add
dec
add
hlt
fsub
add
jp
les
inc
jbe
sub
(bad)
cmps
sub
pop
sub
sti
addr16
pusha
movs
stos
push
test
les
fmul
mov
outs
movs
sub
xor
pusha
cmp
call
sub
jb
pop
mov
pop
xchg
add
ja
pop
sub
fucom
inc
and
push
movs
push
aad
jne
test
outs
and
pop
neg
fmul
shl
pop
xor
nop
dec
xchg
adc
lods
daa
jbe
push
scas
adc
cdq
sbb
leave
neg
out
xor
das
cmp
inc
movs
cmc
jb
popa
push
push
push
icebp
xor
fild
stc
(bad)
in
shl
xchg
out
fcom
(bad)
xchg
add
xor
sahf
mov
mov
mov
dec
add
ret
dec
push
aam
js
push
xor
(bad)
movs
xor
out
mov
mov
mov
pop
xor
and
push
popf
cmp
fcmovbe
aaa
pop
pop
jne
xchg
inc
test
pop
stc
je
mov
popf
test
lods
mov
in
or
aam
in
pop
movaps
aaa
or
sub
sbb
xchg
out
push
sbb
call
iret
push
mov
push
rcr
jmp
pop
jge
in
cmc
cmps
fdiv
out
xor
ins
aad
loopne
jnp
pop
adc
nop
or
scas
inc
and
(bad)
xor
jge
lea
jne
pop
jae
xor
in
push
aas
fcmovnbe
mov
fist
ins
out
movs
cmp
push
xchg
fidiv
or
mov
inc
lds
into
push
scas
xor
mov
fwait
push
mov
in
out
mov
aam
cmp
ret
add
push
adc
movs
scas
sbb
call
into
fnsave
push
imul
cs
xlat
jmp
stc
mov
mov
mov
inc
inc
aam
push
das
pusha
mov
mov
push
xor
mov
mov
jmp
jmp
dec
out
push
je
in
xchg
sti
xchg
inc
xor
mov
mov
fs
out
(bad)
(bad)
cmp
movs
jbe
data16
mov
fild
arpl
shr
mov
lea
rcl
rol
inc
prefetcht1
scas
fs
les
add
xor
iret
out
fs
cmps
inc
cmp
adc
jg
hlt
popf
nop
pop
adc
(bad)
and
lahf
les
retf
out
daa
mov
fs
sahf
pop
pop
jae
jmp
movs
push
xchg
or
stc
cmps
and
mov
xchg
pop
pusha
int3
mov
or
inc
jl
out
sub
mov
sbb
outs
dec
in
mov
or
jne
call
xor
xchg
leave
mov
add
sub
xor
cmp
outs
push
sbb
mov
scas
fsub
mov
sahf
mov
iret
dec
xchg
push
(bad)
sbb
dec
sbb
mul
pop
sti
cwde
aaa
ret
mov
xchg
push
ror
cmps
push
sub
adc
push
xchg
test
inc
cmp
push
lods
pop
mov
mov
cmp
ror
xchg
call
adc
iret
cwde
push
mov
stc
dec
add
xchg
aaa
ins
arpl
movs
jl
inc
add
mov
xchg
add
shl
(bad)
xor
fdivr
(bad)
out
fldenv
and
repz
call
xchg
push
dec
fs
mov
ins
mov
sub
and
inc
mov
test
mov
(bad)
jmp
movs
xor
add
xchg
cmp
je
adc
std
mov
addr16
jnp
stos
fs
cmp
out
pusha
push
(bad)
jne
push
jmp
push
cmp
and
retf
xchg
rcr
mov
fnsave
or
xor
imul
or
push
pop
xor
sahf
jge
pop
jne
pavgw
pop
jle
cmc
sub
xchg
inc
mov
and
cmp
shr
aam
movs
sub
lods
enter
(bad)
fnstsw
dec
repnz
loop
jne
jmp
mov
push
daa
mov
xor
aad
inc
into
sbb
das
int
inc
outs
adc
sbb
mov
inc
mov
mov
jp
xor
xchg
in
jp
in
addr16
push
push
dec
in
das
add
fmul
cld
ds
cli
ins
std
dec
push
test
jmp
dec
fsub
stos
xor
or
dec
adc
fist
cdq
sbb
sub
push
js
xor
add
adc
scas
leave
push
xor
push
(bad)
adc
and
es
je
jns
cli
jne
mov
adc
imul
adc
pop
add
jecxz
xchg
ret
mov
xchg
mov
repnz
push
bound
adc
mov
sbb
mov
inc
aam
scas
(bad)
popa
test
mov
test
adc
dec
xchg
sub
dec
es
add
lea
add
adc
or
idiv
lds
cmp
in
iret
adc
in
les
xchg
stos
xlat
inc
std
cmps
sub
aaa
lods
and
dec
cmp
sbb
mov
mov
aam
jmp
jmp
(bad)
out
aaa
adc
in
add
and
aas
scas
xor
or
xchg
jmp
mov
and
ror
js
push
and
jge
out
pop
add
jp
cmc
and
xor
test
mov
inc
fsubr
jne
in
mov
jbe
dec
mov
sub
mov
sahf
sahf
xchg
xchg
loop
ror
dec
pop
sbb
mov
jbe
dec
cwde
push
pop
jbe
and
pop
and
pop
(bad)
ret
rcl
movs
mov
inc
push
jnp
sbb
test
or
sbb
das
movs
push
xor
imul
arpl
not
mov
cmp
leave
mov
cmc
loop
or
cmp
xor
adc
inc
sub
shr
adc
aas
and
stc
inc
pop
das
push
arpl
movs
push
push
cmps
push
xchg
in
test
cmp
jl
lds
lds
xlat
and
cmp
adc
xchg
fnstenv
sbb
sbb
add
stos
je
mov
(bad)
xchg
push
or
adc
addr16
gs
arpl
or
xor
xchg
fiadd
sbb
(bad)
lahf
inc
push
push
mov
jp
out
sbb
mov
xchg
out
or
lods
or
push
sbb
dec
jnp
fsub
fild
(bad)
and
(bad)
sub
aam
mov
(bad)
adc
push
repz
and
push
sbb
into
aaa
jg
jg
mov
mov
add
xor
aam
addr16
fnstenv
jl
test
ficomp
sub
hlt
idiv
into
mov
in
sub
sbb
in
inc
mov
mov
cmp
dec
mov
stos
pop
add
and
(bad)
pushf
popa
jno
(bad)
popa
push
or
add
repz
jb
mov
dec
rcl
loopne
xchg
in
push
std
js
jecxz
pop
jg
xchg
loop
out
test
cmc
movs
(bad)
mov
jae
xchg
jne
sbb
dec
mov
scas
push
add
fs
or
aas
stc
stc
inc
sbb
repnz
cmps
xchg
into
rep
enter
in
xor
jmp
in
mov
and
out
push
loope
xlat
mov
jg
mov
add
shl
xor
inc
fdiv
pusha
pop
mov
fld
push
cmp
xchg
sbb
dec
pop
les
aam
imul
add
sub
out
xor
mov
push
push
sub
daa
and
loop
(bad)
lock
jg
adc
add
sbb
pop
loope
pop
jns
pop
daa
(bad)
imul
xor
ret
mov
sbb
cmp
mov
xchg
adc
inc
fs
add
xchg
pushf
ret
test
and
add
pop
push
pop
pop
shr
push
fs
adc
xchg
dec
and
xor
test
movs
int3
or
inc
add
xlat
jmp
arpl
mov
in
(bad)
xchg
mov
or
mov
(bad)
nop
fwait
icebp
inc
daa
mov
cdq
jmp
cmp
repnz
mov
movs
div
in
cwde
rcl
and
adc
test
jp
xor
and
imul
repnz
push
push
sar
lahf
inc
or
jne
pop
retf
mov
mov
bndstx
fs
retf
test
(bad)
xchg
xchg
nop
imul
pop
mov
push
popf
sub
xchg
add
ja
leave
sbb
push
push
mov
cmp
fiadd
gs
inc
in
or
loop
xchg
xchg
dec
retf
test
push
jo
test
in
bound
mov
mov
push
mov
jae
mov
mul
mov
push
xor
mov
mov
(bad)
out
pop
pop
adc
ja
data16
out
rol
jne
dec
mov
xchg
sbb
mov
lahf
ss
ror
and
adc
jecxz
js
xor
and
popa
sub
add
bound
dec
repz
push
adc
inc
retf
popf
jo
aad
in
hlt
mov
xchg
in
jae
push
je
cmp
das
aam
add
add
mov
mov
push
add
ret
xor
dec
and
and
or
fisttp
repz
mov
jl
mov
pop
xor
pop
ins
sbb
dec
test
pop
sbb
and
std
xor
movs
push
retf
mov
sub
fsubr
test
pop
mov
dec
(bad)
mov
push
mov
fs
inc
add
cmp
icebp
push
push
xor
jg
aam
add
jg
push
jmp
stos
add
out
adc
cmps
test
cmp
fstp
xchg
or
(bad)
(bad)
mov
ss
xchg
retf
jp
and
addr16
mov
xor
out
and
out
add
inc
pop
sub
mov
gs
sbb
mov
cwd
lea
addr16
add
pop
ret
gs
and
shl
add
retf
inc
(bad)
mov
push
mov
neg
push
jb
push
xlat
jl
outs
(bad)
js
add
test
add
mov
and
sti
or
les
push
dec
mov
(bad)
out
cmps
shl
aas
pop
cmp
lds
movs
and
inc
data16
xchg
pop
jmp
mov
(bad)
add
out
jae
inc
dec
imul
ss
fnstsw
sbb
and
xchg
movs
xor
push
push
mov
shl
daa
sbb
add
rsm
ins
iret
dec
je
push
push
aad
ret
cmps
mov
shr
adc
dec
pop
push
push
cld
icebp
add
add
or
(bad)
test
repz
xchg
mov
inc
ret
add
les
sti
or
mov
aad
(bad)
and
add
pop
or
cvttps2pi
dec
inc
loopne
loope
push
lahf
jge
leave
mov
and
sub
and
push
scas
(bad)
push
dec
int3
pop
cmp
movs
int
jbe
test
mov
sbb
push
fs
inc
dec
mov
dec
mov
push
jmp
mov
add
pop
xchg
mov
aaa
adc
jbe
xor
mov
inc
mov
or
xor
sbb
gs
test
gs
sar
les
cld
ins
xor
xchg
shr
cdq
jg
push
outs
bnd
jno
aam
aam
std
cmps
loopne
sbb
(bad)
xor
and
js
push
pop
aaa
add
jg
push
jb
ins
mov
adc
call
ds
cmp
xchg
push
mov
(bad)
rcr
es
mov
jle
in
outs
iret
add
and
das
push
cmc
out
lahf
mov
push
sbb
retf
mov
mov
push
aam
xor
push
xlat
movs
and
les
loopne
xchg
in
popa
mov
repz
out
dec
push
pop
push
xor
out
pop
sbb
std
out
idiv
test
adc
dec
xchg
outs
cmp
add
or
retf
(bad)
aam
hlt
dec
mov
ins
push
mov
imul
cmps
dec
cld
inc
jne
outs
aam
cld
xchg
(bad)
adc
sub
add
aam
shl
push
daa
les
and
pushf
rol
cmc
or
aad
inc
sub
dec
std
jbe
in
mov
pop
push
lock
es
mov
dec
out
xchg
mov
test
cli
sbb
inc
jo
jmp
xchg
(bad)
pop
leave
mov
repz
fucom
add
test
inc
xor
jnp
dec
xlat
scas
jl
cmc
inc
xchg
test
stos
xchg
mov
jae
inc
aam
jo
div
jge
sub
adc
add
inc
scas
in
jne
in
test
push
leave
call
mov
jg
xchg
lods
xor
add
(bad)
jp
call
mov
mov
adc
call
add
inc
mov
xchg
enter
cmps
cmc
jl
and
mov
push
cmp
shr
xchg
fbstp
cmp
or
or
and
sbb
lds
mov
and
pop
sub
inc
cs
mov
loope
ja
cmp
add
aaa
lods
and
push
lock
push
push
xchg
gs
cdq
cmps
ds
loop
mov
and
jbe
test
fisubr
sub
cmps
nop
or
fdiv
cdq
and
shl
push
mov
mov
out
cs
ins
push
retf
cmc
add
inc
pushf
pop
adc
in
push
push
sub
push
fcom
fwait
mov
call
loope
shl
or
in
ja
mov
and
sbb
ins
xchg
xlat
out
loopne
(bad)
add
ins
mov
sbb
inc
(bad)
pop
loope
pop
add
ficomp
mov
lea
cmc
inc
stos
ins
cmp
shl
xlat
cmp
mov
movs
jbe
jge
cli
and
push
mov
cmps
push
nop
cmp
cmps
xchg
mov
(bad)
iret
lods
add
push
and
xor
movs
add
pop
in
(bad)
(bad)
fdiv
mov
push
xor
leave
arpl
retf
cmp
adc
dec
aam
adc
sub
and
jg
and
xchg
mov
xchg
inc
(bad)
(bad)
dec
inc
scas
or
aas
sbb
scas
ss
xchg
inc
push
add
ss
mov
fist
mov
cmp
xchg
mul
(bad)
in
out
repnz
ss
push
dec
shl
mov
test
mov
jne
dec
pop
bound
mov
or
fcmove
mov
daa
fsubr
jb
ins
mov
push
div
fmul
in
sbb
jb
(bad)
mov
and
gs
mov
je
ins
pop
and
daa
push
push
es
call
push
mov
aad
leave
(bad)
ffree
(bad)
pop
adc
mov
and
test
jmp
fimul
xlat
cmc
jbe
shl
shl
jo
arpl
jmp
xor
mov
xchg
lea
movs
mov
mov
sti
jno
adc
cs
ds
adc
cdq
mov
push
add
test
es
je
or
cdq
lds
or
push
jmp
iret
ss
jp
and
rol
aam
sub
cmp
mov
cmp
pop
loopne
call
ins
movs
repnz
pop
mov
dec
push
in
loope
and
in
xor
cmc
or
data16
mov
xor
xchg
pop
jo
adc
int3
ret
stc
cmps
clc
push
xor
pop
jmp
in
fs
(bad)
jnp
(bad)
xor
rcl
addr16
push
mov
sti
dec
jbe
(bad)
adc
xor
rol
add
in
cmp
cli
push
push
lds
mov
sub
es
lea
mov
lods
repnz
movs
mov
getsec
push
and
in
ss
push
pop
dec
cmp
mov
out
out
inc
gs
in
out
push
or
test
inc
loop
inc
mov
adc
not
sahf
imul
imul
movs
movs
cld
fsub
into
cli
ror
aas
int
xchg
jmp
hlt
pop
jge
xchg
repnz
mov
push
jmp
pop
mov
mov
loopne
jbe
xchg
cmp
push
mov
pushf
aam
push
and
int3
pop
mov
js
test
iret
repz
inc
inc
mov
out
xor
push
sbb
and
into
dec
jp
and
fsub
sub
cmc
out
bound
movs
cmp
push
les
stc
ins
(bad)
hlt
xchg
adc
mov
pop
scas
shl
loope
mov
mov
push
jge
outs
call
fdivr
aaa
retf
or
fidivr
add
pop
dec
sar
std
xchg
jg
adc
cli
cmp
cs
scas
pusha
(bad)
in
add
mov
out
push
jb
(bad)
pop
imul
add
imul
and
dec
lods
inc
xor
test
(bad)
pushw
and
mov
push
out
and
mov
cld
fild
inc
and
xor
pop
xchg
sbb
(bad)
and
jmp
test
sbb
pop
jne
inc
out
jecxz
repnz
cmps
mov
rcl
(bad)
shl
cli
shl
cmp
sub
sub
jno
hlt
cmc
fbld
dec
aad
es
lds
xchg
shr
mov
icebp
fidiv
xchg
out
sub
test
outs
nop
xchg
cmp
imul
mov
test
jg
std
test
mov
and
sub
jns
push
jmp
int3
popa
dec
loopne
xor
dec
ss
and
push
add
gs
dec
cmp
cmp
push
in
les
xchg
pop
push
clc
or
mov
gs
call
leave
xlat
xor
push
(bad)
or
imul
ror
mov
dec
jmp
(bad)
pop
xchg
scas
push
aad
add
cmps
test
dec
in
sub
mov
xor
jne
cmp
(bad)
cmp
addr16
loopne
(bad)
out
outs
dec
sub
movs
pop
popa
fild
test
mov
mov
shl
int3
adc
pop
mov
sbb
cmp
fstp
push
mov
int3
xchg
fs
push
jmp
sub
jg
not
fs
out
add
push
pop
(bad)
retf
daa
iret
cmp
inc
imul
jmp
jo
pop
add
mul
in
adc
cld
xchg
addr16
push
movs
jne
repnz
sar
xchg
xor
fs
lahf
popf
je
aad
add
mov
or
dec
ja
xor
stc
xchg
adc
addr16
aad
movs
loope
mov
mov
mov
dec
mov
aam
or
mov
aad
dec
popa
je
jo
sbb
mov
hlt
add
(bad)
lods
xchg
xchg
movs
xchg
cmps
les
std
adc
jae
inc
push
xor
lahf
jb
fs
loop
mov
and
(bad)
ins
inc
cmps
popaw
add
popa
aaa
push
das
mov
xor
xchg
inc
inc
jne
jg
outs
mov
inc
add
sub
sub
cdq
add
repnz
pop
pusha
pop
jo
pusha
jmp
xor
xor
stos
aad
test
cmp
nop
cmp
test
cmp
add
and
jp
shr
sbb
and
aad
scas
sub
into
pop
les
push
jl
je
adc
mov
pop
pop
mov
int3
out
out
dec
aaa
jg
lods
jne
push
and
mov
dec
cmp
inc
jnp
fwait
or
mov
leave
dec
pop
add
int3
push
test
in
fild
sub
xchg
cli
inc
pop
data16
fidiv
add
add
pop
les
jns
mov
dec
sbb
ins
nop
test
ret
in
ds
push
xor
jge
pop
and
data16
pop
fimul
jne
cmp
jne
test
jnp
jno
push
leave
imul
lahf
or
shl
xchg
aam
gs
push
cmc
shl
scas
adc
mov
cwde
xchg
mov
movs
pop
retf
push
stc
hlt
inc
mov
scas
dec
mov
xor
xchg
inc
and
imul
pop
add
enter
push
inc
sahf
retf
ret
ss
fist
pusha
and
adc
idiv
xor
mov
test
cmp
dec
(bad)
scas
and
jns
push
dec
and
xor
mov
div
es
call
push
jg
jb
sbb
cmps
(bad)
out
cli
loop
mov
int3
inc
imul
jbe
adc
outs
add
fldenv
fcom
inc
(bad)
lahf
aas
ins
stc
sbb
xchg
out
clc
test
sub
int3
pop
cdq
call
inc
cmps
xor
mov
not
sub
or
ins
les
xchg
imul
cmp
enter
sub
sub
push
jbe
ins
cmp
ins
cli
aas
pop
jp
adc
enter
dec
fild
nop
js
inc
sbb
cmc
(bad)
adc
imul
ret
add
push
pop
cwde
push
stc
je
cld
gs
es
fs
je
mov
mov
jbe
xchg
mov
lds
das
jge
stc
sub
xor
mov
xor
gs
je
jo
cmp
popa
in
(bad)
fstp
adc
ds
cmp
add
test
shr
lea
push
movs
mov
xchg
push
out
jmp
dec
mov
xchg
ret
dec
add
mov
sbb
arpl
mov
and
sub
mov
aad
xchg
dec
mov
inc
ja
movs
pop
outs
inc
dec
lods
test
out
retf
mov
aas
or
cmp
and
movs
movs
les
(bad)
jecxz
nop
fild
push
(bad)
cmps
dec
pop
mov
xor
mov
pop
adc
lahf
ins
and
movnti
lods
cmp
adc
jle
arpl
sub
jnp
jns
iret
hlt
inc
sub
add
mov
ins
bound
push
std
cmps
and
sbb
cmps
enter
les
jno
add
xchg
daa
in
mov
fs
lods
or
mov
cmc
out
mov
movs
aaa
pop
jb
pop
js
push
push
sub
(bad)
(bad)
hlt
mov
sti
pop
mov
movs
cmp
loop
pop
js
push
pop
xor
loope
cmp
out
and
jns
movs
push
pop
pop
test
imul
in
je
fsubr
xchg
clc
xchg
(bad)
(bad)
shl
xor
xor
mov
jbe
dec
jmp
ins
(bad)
pushf
pop
loopne
push
cmps
cwde
sub
test
jl
dec
pop
hlt
jno
add
add
xchg
fidivr
push
fadd
xor
shl
add
adc
lahf
xlat
pop
addr16
push
sub
sub
imul
cwde
jbe
pop
fld
pop
jne
retf
ja
or
and
js
xchg
jnp
push
push
pop
inc
adc
xchg
push
stc
add
xchg
mov
inc
cli
pushf
sub
addr16
sbb
and
jae
or
mov
fwait
xchg
add
xor
(bad)
jecxz
pop
mov
jns
pop
push
dec
ins
mov
push
xchg
add
or
jmp
loop
add
test
mov
sahf
pop
popa
xchg
shl
repz
stc
test
iret
test
dec
add
add
xor
xchg
or
pop
lahf
or
and
adc
bound
sbb
jae
add
push
addr16
cli
inc
mov
mov
inc
adc
pop
mov
add
xor
xchg
mov
mov
xor
dec
pop
cmp
jbe
and
call
ins
sub
add
aad
push
push
in
pusha
ja
push
ins
cdq
frstor
inc
in
aam
push
jnp
adc
sti
mov
aaa
add
bound
push
pop
push
test
mov
aaa
not
icebp
and
nop
mov
sbb
xlat
fs
movs
mov
or
sub
scas
movs
cmp
inc
jge
push
push
lods
ret
aas
cmc
xchg
mov
and
or
enter
and
retf
inc
cmps
jmp
out
xchg
pop
(bad)
and
adc
loope
push
or
jb
push
jp
inc
add
sbb
nop
xlat
push
cmps
sub
jmp
pop
imul
mov
add
adc
and
xchg
fdiv
and
adc
neg
int3
int
ror
leave
or
sbb
shl
mov
mov
ret
inc
inc
push
dec
xchg
xlat
mov
xor
dec
jnp
sbb
mov
repz
cmp
adc
cmps
pop
inc
add
fidiv
ror
jmp
mov
enter
xchg
jnp
fwait
cmps
push
(bad)
push
jae
popa
jne
inc
push
and
pop
adc
dec
jecxz
popa
dec
rcl
out
adc
test
ficomp
mov
je
or
test
mov
pop
fst
popf
mov
fild
pop
pushf
pop
call
jno
cdq
add
cmc
or
popf
in
jbe
test
jg
jle
or
mov
cld
mul
repz
mov
add
jp
rcr
push
jo
inc
xchg
repz
mov
shr
push
inc
add
and
xor
sar
div
add
lock
jno
mov
dec
or
dec
pop
push
sub
imul
adc
inc
push
push
std
ret
loopne
mov
inc
lods
sub
push
add
mov
mov
test
and
pusha
ret
mul
adc
inc
mov
js
aad
inc
add
and
pop
ja
and
shl
jp
pop
fs
push
xor
pop
lods
lds
cmps
dec
arpl
ret
mov
push
xchg
jnp
daa
xchg
push
add
(bad)
out
imul
add
jmp
push
fwait
stos
mov
jae
lods
les
pop
fxch
xchg
out
cmps
mov
mov
test
stos
dec
inc
bnd
or
push
mov
test
push
(bad)
xchg
add
ja
cmp
xchg
loope
add
mul
in
rcr
xchg
ss
movs
xchg
push
inc
jbe
or
push
pop
popf
mov
and
shr
fdiv
jne
pop
xor
not
inc
int3
aam
test
sbb
(bad)
cmps
xlat
xchg
je
adc
(bad)
pop
add
or
push
pop
in
sub
push
jmp
retf
xlat
mov
mov
and
retf
(bad)
mov
adc
push
test
pop
mov
stos
bnd
jns
mov
push
inc
pop
sbb
das
adc
movs
lods
leave
xor
cmp
dec
dec
cmp
bound
push
push
sar
cli
pop
rol
mov
adc
inc
(bad)
inc
inc
adc
leave
and
add
pop
sti
dec
add
cmp
sbb
or
mov
repnz
data16
retf
mov
sbb
mov
xor
(bad)
push
inc
pop
add
not
push
push
addr16
dec
push
ja
mov
or
inc
int
cmc
(bad)
jmp
push
pop
push
mov
jnp
sbb
es
pop
mov
retf
mov
aaa
mov
test
adc
sbb
popa
xchg
ja
add
push
ja
inc
jl
ret
lds
ja
sub
jg
rol
dec
dec
push
ret
hlt
push
cli
push
(bad)
jmp
data16
and
aaa
je
adc
and
adc
sti
xlat
out
dec
mov
or
hlt
sahf
neg
pop
dec
adc
stc
add
mov
push
les
xchg
sub
movs
enter
imul
adc
pushf
xchg
mov
or
mov
fwait
cld
test
retf
push
(bad)
or
cs
pop
xchg
test
daa
test
push
cmps
fcomp
dec
neg
aam
je
movs
sub
sbb
(bad)
jb
pop
xor
mov
in
mov
xchg
cmp
aaa
fimul
imul
call
push
enter
push
ret
pop
aaa
dec
dec
js
scas
push
movs
or
jnp
or
add
pop
sbb
add
test
mov
mov
lahf
jbe
(bad)
movs
mov
sbb
cmp
sub
adc
dec
addr16
cmp
cmp
test
cmp
pop
fldenv
mov
sbb
adc
mov
aaa
in
mov
and
jp
push
adc
sbb
cmc
test
in
xor
pushf
jmp
cmps
mov
push
fucomp
unpcklps
shr
push
aad
(bad)
or
push
push
jmp
imul
imul
test
lahf
shr
dec
fs
les
adc
retf
push
(bad)
repnz
cwde
pop
fnstcw
or
mov
fld
hlt
or
sub
mov
or
retf
outs
cli
xchg
mov
push
push
sub
test
pop
add
and
je
das
jg
adc
and
leave
(bad)
scas
inc
aaa
mov
test
mov
mov
test
dec
push
loope
sbb
mov
push
(bad)
fcmovu
mov
inc
shl
pop
into
ss
or
add
movs
xchg
xchg
(bad)
out
enter
xchg
shl
sbb
push
xor
sbb
pushf
xchg
shl
cdq
mov
mov
(bad)
xchg
out
scas
lds
aam
mov
push
fisubr
(bad)
mov
test
cdq
add
push
pop
lahf
(bad)
xchg
aam
(bad)
stos
mov
ins
lahf
hlt
cmps
inc
pop
jo
fs
xor
das
jecxz
push
inc
enter
in
xchg
pop
dec
outs
dec
arpl
daa
pop
rol
add
xchg
push
push
xchg
pusha
xor
cli
stos
cmps
xchg
mov
push
out
mov
mov
and
inc
xor
inc
cmp
movs
ret
or
in
rol
xor
push
or
pop
adc
xchg
push
jb
mov
xchg
in
add
mov
lock
ins
xchg
(bad)
cmp
imul
fwait
pop
fstp
fwait
lahf
add
xchg
push
jmp
gs
push
dec
jl
adc
fwait
push
ins
or
fadd
jns
mov
arpl
dec
fisttp
jb
pop
sbb
sbb
(bad)
retf
cli
dec
je
inc
adc
loop
(bad)
cmp
dec
jno
push
mov
das
dec
aaa
dec
sbb
shl
(bad)
jecxz
rcr
mov
and
and
xchg
and
push
inc
les
sbb
jo
fwait
pop
cdq
sbb
jl
push
add
cmp
daa
push
aaa
mov
outs
aad
fld
ja
pop
aam
les
(bad)
push
xchg
sub
cmp
sub
(bad)
pop
and
push
jmp
in
call
out
jno
cmp
stc
sar
adc
(bad)
(bad)
std
xor
enter
ds
aam
adc
inc
(bad)
call
push
inc
loope
mov
ins
jmp
sahf
adc
push
mov
xor
lds
push
pop
adc
hlt
enter
in
test
dec
hlt
sbb
retf
push
daa
out
out
push
cwde
std
push
imul
(bad)
imul
push
int
call
xor
iret
dec
push
fs
ja
jg
push
data16
add
or
xlat
iret
pop
cmp
enter
xor
push
adc
jno
cmps
xor
call
inc
sbb
enter
add
and
sub
jb
mov
xor
jge
fwait
out
pop
lock
adc
mov
inc
(bad)
mov
and
pop
add
movs
and
cwde
push
lods
adc
nop
popa
inc
inc
je
pushf
sbb
daa
add
jns
xchg
pop
xor
pop
cwde
inc
stos
mov
jns
add
sbb
pop
cdq
fbld
(bad)
in
xchg
inc
out
repz
jmp
mov
fist
inc
push
add
ins
int3
push
rcl
inc
xchg
ret
pop
bound
xor
lods
push
and
les
sub
cmp
adc
xchg
enter
cwde
lds
xchg
pop
jb
ss
mov
push
xchg
xor
into
cmc
sti
bound
add
sbb
dec
jnp
mov
lds
fdivr
movs
enter
aam
in
inc
xchg
repnz
scas
repz
jmp
pusha
ja
fiadd
jl
xlat
xchg
and
(bad)
sub
les
or
mov
adc
and
in
push
xchg
push
xchg
fcomp
inc
xlat
jl
push
xchg
imul
or
push
add
xchg
scas
inc
and
add
(bad)
lock
cmps
(bad)
dec
stos
movs
adc
mov
popa
add
and
xor
into
scas
fwait
retf
adc
shl
xchg
jbe
xchg
and
ja
test
xor
nop
mov
cmp
mov
shl
add
daa
pusha
add
ja
addr16
cmps
dec
xchg
cld
pushf
out
sub
inc
sbb
mov
je
and
bound
cmps
test
mov
out
xchg
in
repz
add
gs
sbb
call
repz
push
xchg
in
(bad)
fwait
out
cmp
ret
xor
movs
push
inc
xor
mov
cmp
mov
out
xchg
xchg
fild
jbe
xchg
jb
add
sbb
push
jno
jns
sub
and
aam
mov
push
ja
imul
cmps
daa
(bad)
dec
inc
mov
(bad)
push
mov
es
mov
mov
das
repz
xchg
in
pop
jbe
out
cmps
leave
test
call
fisubr
popa
les
out
dec
push
push
in
dec
add
aad
lods
jmp
mov
scas
fcmovu
lods
mov
call
fstp
inc
push
sbb
hlt
mov
jmp
jne
sbb
dec
(bad)
mov
scas
div
adc
adc
arpl
and
(bad)
in
jp
mov
shl
test
in
les
sbb
sub
or
or
rol
push
fld
out
fld
inc
mov
and
push
cmp
cli
add
xchg
shl
pop
outs
lods
mov
loope
xor
cdq
stos
inc
cmp
push
out
es
add
add
in
inc
jmp
xor
cwde
mov
pop
(bad)
push
sub
sbb
jne
aam
ret
lds
retf
dec
test
mov
test
scas
mov
test
leave
inc
ror
retf
(bad)
in
xchg
add
and
enter
push
mov
out
daa
sbb
mov
xchg
inc
scas
test
leave
test
and
jmp
pop
dec
xor
push
icebp
pop
mov
and
jne
xor
test
sahf
into
cli
mov
cmc
inc
or
fmul
inc
popf
cmp
loopne
aam
inc
mov
pop
mov
fidiv
push
pop
xor
fnstcw
sub
leave
jno
dec
pop
jb
cdq
aaa
cdq
mov
aam
aad
add
stos
inc
hlt
push
aad
jmp
pop
sbb
pop
sbb
es
loope
test
pop
enter
mov
repz
arpl
cmp
mov
fwait
imul
clc
(bad)
sub
imul
aaa
(bad)
jle
jnp
mov
dec
aad
les
div
adc
jns
movs
mov
outs
aaa
adc
daa
popf
jp
xlat
mov
cs
test
lahf
in
jo
inc
adc
sub
xchg
loop
and
ja
movs
or
call
lods
dec
test
es
push
inc
push
hlt
fdivr
push
test
or
fbld
mov
add
lea
mov
mov
dec
dec
or
sbb
in
test
call
push
test
inc
scas
cli
push
jns
add
jmp
push
mov
icebp
mov
les
cmp
les
xor
dec
pop
mov
cmp
aam
pop
push
jne
popa
mov
mov
scas
test
cld
mov
push
mov
ja
jecxz
daa
enter
pop
jno
aas
enter
mov
push
push
in
imul
repz
and
cmp
retf
ins
in
retf
and
arpl
movs
add
push
mov
mov
add
push
push
cld
push
pop
cs
test
sub
clc
sub
cli
sti
cmc
mov
mov
mov
pop
popf
mov
push
dec
movs
dec
in
jl
js
push
xchg
ret
xor
out
inc
cs
fidiv
out
jmp
aam
std
xchg
dec
adc
sti
sar
and
cwde
lds
push
pop
cmps
push
xchg
mov
fdiv
push
in
xchg
mov
in
adc
sbb
mov
push
out
xchg
test
or
mov
adc
sbb
cli
sub
iretw
stos
adc
stc
xchg
lds
icebp
or
fsubr
pop
aam
sub
mov
cmps
sbb
inc
cmp
(bad)
addr16
lea
(bad)
push
retf
movs
xchg
or
fs
addr16
xor
sub
xor
inc
aaa
inc
sub
add
xchg
daa
aam
mov
pop
and
xor
in
stc
ins
pop
pop
xor
mov
std
fild
test
addr16
mov
out
dec
cmp
aas
cmp
test
push
or
repz
mov
call
push
mov
not
inc
xchg
or
mov
je
push
mov
xchg
sub
clc
or
pop
mov
xlat
pop
(bad)
xchg
div
es
mov
jmp
cli
pop
and
daa
inc
ret
xchg
xchg
xchg
xchg
sub
jnp
xor
mov
adc
cmps
cmp
push
test
ss
xor
and
and
and
movs
enter
gs
xchg
cmc
mov
test
cmp
aad
jo
push
xchg
mov
imul
aaa
lds
pushf
call
lock
je
leave
in
(bad)
or
retf
add
xchg
xchg
test
cmp
aaa
lahf
enter
sub
test
ss
mov
push
pop
pop
jge
add
dec
jecxz
cmc
mov
repz
test
mov
data16
xchg
adc
dec
ss
ins
or
(bad)
xor
mov
retf
adc
mov
mov
cmp
dec
je
stos
bound
retf
out
data16
repz
and
mov
cmps
in
inc
data16
pop
call
ins
(bad)
mov
addr16
adc
push
gs
cdq
adc
sbb
aam
sahf
xlat
cmp
mov
sbb
sar
sub
cdq
(bad)
mov
cmp
icebp
rcr
mov
pop
sbb
arpl
jns
xor
inc
xlat
test
mov
add
jo
add
xchg
adc
mov
retf
imul
pop
int
sar
xor
jae
jp
pusha
test
cmp
imul
xor
cmp
fisttp
push
and
imul
pop
and
jo
test
les
sbb
pop
cmps
mov
inc
hlt
stc
ins
lds
adc
fcomp
dec
pop
jns
dec
leave
movs
daa
pop
(bad)
mov
fs
sbb
sbb
push
mov
ss
sbb
lea
xor
hlt
push
inc
add
sub
xchg
xlat
fcmovnb
jmp
(bad)
mov
and
into
mov
push
imul
pop
inc
leave
and
popa
adc
add
cmps
sub
cli
push
aaa
inc
cmp
jmp
adc
or
mov
out
ret
fdivr
out
sbb
inc
sub
int3
test
cmps
hlt
mov
jmp
hlt
sub
and
ss
xchg
test
mov
clc
cmps
xchg
mov
cdq
test
dec
addr16
pop
je
push
(bad)
xor
mov
jl
push
jae
sahf
xchg
out
test
sets
(bad)
jle
push
and
lds
or
mov
xchg
add
or
leave
adc
loopne
scas
push
sahf
clc
sub
cli
pop
mov
stos
sbb
inc
xor
aad
(bad)
mov
sahf
in
mov
test
mov
cmps
sub
mov
imul
mov
in
dec
aaa
inc
mov
push
ja
mov
jns
jmp
inc
lock
test
fcmovnb
mov
xchg
or
(bad)
test
addr16
sub
mov
sahf
add
jnp
jbe
add
add
adc
sub
cmps
aad
push
mov
cmp
(bad)
xchg
push
jns
mov
jne
xchg
jnp
push
and
cmp
and
imul
repnz
jecxz
sbb
cmp
stos
gs
jbe
movs
and
mov
pop
jecxz
xchg
xor
jbe
sti
nop
adc
push
jmp
fdiv
shl
call
mov
lods
pop
cmp
test
fsubr
addr16
pop
lock
jmp
imul
dec
cli
inc
mov
lods
out
xchg
push
push
inc
mov
cmps
mov
mov
xor
cmp
mov
test
int
fwait
sub
mov
jo
mov
jp
mov
pop
cdq
js
mov
dec
push
lock
xchg
cmp
dec
jmp
pop
adc
in
std
(bad)
inc
addr16
mov
ss
sti
into
pop
mov
enter
jmp
xor
sbb
pop
sub
retf
movs
stc
inc
out
mov
or
push
cwde
ins
push
lods
push
sub
stc
mov
cwde
inc
inc
hlt
test
pop
repnz
sub
inc
cmp
in
hlt
mov
ss
sbb
dec
fisub
push
fimul
addr16
inc
imul
push
and
test
popw
jb
or
mov
mov
leave
int
xor
sub
add
arpl
push
push
push
dec
sahf
les
or
imul
sub
in
imul
inc
jnp
push
lock
repz
xchg
or
ins
(bad)
js
push
mov
add
aas
cmp
add
cli
outs
je
xchg
cmp
cmc
pop
in
cmc
inc
jne
cmp
cwde
in
test
repz
mov
cmp
retf
mov
pop
sbb
cwde
retf
retf
mov
pop
mov
jns
mov
movs
dec
dec
es
mov
cwde
jmp
push
adc
es
or
out
dec
in
add
nop
pop
sbb
sbb
int3
mov
(bad)
inc
or
sub
sub
stos
fnstenv
cmc
xor
sbb
sti
sub
addr16
adc
sub
retf
xchg
shl
mul
stos
rcr
cmps
fstp
push
clc
mov
scas
(bad)
and
out
jle
push
pop
sbb
mov
pusha
out
dec
jmp
in
xchg
pop
fcmovnu
fdivr
retf
jmp
mov
addr16
dec
xchg
xor
add
inc
cmp
add
hlt
(bad)
daa
pop
adc
fild
push
mov
inc
inc
adc
bound
test
pop
add
mov
push
sub
sub
aas
imul
push
jge
lahf
mov
push
rol
ret
dec
das
call
stc
jmp
inc
stc
fs
fnstenv
stc
jnp
add
pusha
(bad)
daa
pop
call
push
retf
cmps
push
cmp
adc
pop
xchg
push
push
xchg
mov
cmp
les
gs
sbb
mov
push
xchg
mov
or
jbe
pop
xor
lods
mov
hlt
sbb
push
xor
mov
out
push
loopne
dec
xchg
hlt
mov
js
ds
sub
push
push
mov
jmp
js
les
dec
leave
and
mov
les
inc
inc
les
fcmovnb
xor
lods
sbb
cld
mov
repz
lods
push
adc
mov
cli
jns
add
sqrtps
pop
push
das
out
sbb
mov
lahf
jbe
mov
push
repnz
dec
pusha
stos
sahf
xchg
adc
xor
ja
clc
cwde
jae
je
inc
dec
icebp
and
sbb
xchg
mov
je
pop
sbb
enter
imul
hlt
ja
pop
xchg
cmp
out
clc
rcl
(bad)
leave
adc
cli
push
adc
mov
stos
jbe
lock
fisubr
in
inc
repz
shr
xor
mov
repz
mov
jle
jle
jge
jns
pop
mov
sbb
and
loop
jno
and
sti
push
dec
ret
mov
pop
mov
loop
test
js
pushf
xchg
addr16
xor
les
and
loope
push
mov
call
push
or
mov
push
ret
adc
dec
xchg
adc
sub
add
push
in
push
push
cmps
dec
inc
movs
dec
inc
jle
mov
test
cld
cli
les
push
daa
push
pop
cmp
jecxz
cmp
push
xor
sub
imul
stc
movs
icebp
in
push
cmp
arpl
pop
mov
and
inc
xlat
mov
lock
xchg
mov
loope
lock
xor
xor
and
mov
xor
xchg
pop
lds
xchg
dec
outs
(bad)
mov
fwait
sar
in
adc
and
dec
retf
inc
aam
mov
outs
rol
ret
loope
cmc
inc
rol
adc
add
add
scas
aam
imul
movs
loope
mov
add
ss
mov
adc
xor
popa
cdq
mov
neg
cld
test
cmc
adc
add
addr16
aas
sub
and
imul
out
mov
add
inc
mov
mov
jb
cmp
nop
pop
pop
rol
mov
test
gs
pmullw
jne
data16
shr
push
cmc
xor
xchg
xchg
test
push
dec
fdiv
dec
and
mov
push
pop
xor
mov
test
movs
jb
sbb
push
jne
pop
push
mov
out
xchg
xor
(bad)
das
add
lfs
pop
aaa
add
jb
xchg
adc
jno
retf
mov
(bad)
rcr
test
ins
mov
inc
push
xor
addr16
bnd
sbb
sar
sub
add
adc
inc
arpl
ret
add
mov
in
inc
out
xchg
xchg
add
bound
test
ja
and
ss
or
adc
int3
in
xchg
test
xchg
jecxz
fnstenv
loop
cmp
cmp
ret
cmp
ja
xchg
xor
lods
hlt
(bad)
(bad)
aaa
popf
(bad)
xchg
mov
push
loope
js
inc
push
push
inc
xchg
outs
jno
adc
cmps
mov
jp
movs
cmp
jno
ja
or
in
(bad)
retf
test
pop
stos
lods
cmp
icebp
jnp
daa
pop
jmp
inc
sti
mov
push
xor
inc
ja
fsubrp
gs
and
sbb
sbb
arpl
ret
mov
push
cmp
cmp
xor
mov
jo
aaa
push
arpl
jmp
adc
dec
mov
inc
xor
xchg
xlat
nop
popf
cdq
fist
pushf
aaa
push
ja
sbb
or
xchg
fst
fwait
xor
dec
andps
jmp
adc
adc
adc
adc
hlt
pop
jno
ds
xchg
adc
(bad)
mov
(bad)
mov
ds
iret
mov
outs
xor
pusha
adc
push
push
mov
(bad)
push
out
mov
mov
fwait
jmp
push
rcl
aam
(bad)
xchg
out
or
mov
add
fcomp
adc
mov
out
daa
aam
xlat
jns
test
test
arpl
shr
mov
lahf
mov
arpl
test
std
adc
push
in
pop
into
(bad)
mov
sti
dec
(bad)
int
imul
stos
sub
xor
add
lock
push
and
addr16
aam
add
stos
push
push
xor
outs
and
cmp
arpl
mov
inc
dec
push
push
jl
fucomi
dec
aas
jmp
cli
push
nop
pop
test
stos
push
push
inc
in
xor
jo
jae
sub
pop
xor
(bad)
les
or
mov
mov
repnz
mov
inc
xchg
mov
sbb
sahf
test
sbb
pop
rol
and
movs
repz
jno
push
inc
pop
sbb
sbb
cmps
jle
rcl
(bad)
repz
mov
pusha
retf
mov
inc
jne
xor
jne
pop
push
xchg
in
ret
inc
sti
pop
sti
inc
lods
(bad)
mov
cmps
cmp
mov
xchg
and
pop
in
cmc
add
repnz
pop
mov
movhlps
cmps
aad
ja
sbb
popf
test
pop
mov
cmps
inc
xchg
add
bound
jg
cmp
push
add
neg
mov
push
sub
or
test
retf
mov
js
push
js
fnsave
movs
(bad)
aam
xor
outs
sbb
push
daa
sbb
xlat
fs
call
and
aas
daa
cmp
stos
retf
mov
push
inc
add
mul
aaa
pop
xor
loop
mov
push
adc
adc
mov
xlat
mov
ficomp
outs
int
or
test
call
fild
jns
jl
jmp
push
adc
sbb
sbb
cmp
mov
enter
add
jns
movs
mov
ja
xchg
inc
hlt
je
sbb
lods
(bad)
(bad)
aad
cmp
lock
dec
or
jmp
inc
mov
cmps
(bad)
cwde
lds
push
xor
push
jb
cmp
or
out
test
cdq
and
(bad)
mov
dec
or
jle
sar
mov
xchg
in
add
lea
push
sub
mov
mov
dec
mov
movs
add
cmp
push
ss
mov
push
movs
push
dec
pop
pusha
jne
dec
cmp
pop
mov
psadbw
xlat
or
(bad)
popf
arpl
repz
sbb
je
xor
fadd
mov
test
arpl
jmp
jb
inc
mul
or
jae
sbb
add
ins
nop
fwait
xchg
xchg
or
imul
loop
pop
push
cmp
inc
in
or
sbb
dec
or
add
(bad)
leave
call
loopne
sahf
pop
add
ins
aad
das
dec
daa
push
jns
xchg
add
add
mov
mov
or
(bad)
fwait
mov
iret
hlt
adc
(bad)
les
sub
push
push
push
je
jno
es
inc
sbb
mov
xchg
mov
mov
fcmovnbe
cmp
cmc
neg
xor
pop
xlat
ret
das
mov
out
loop
mov
ret
mov
sub
js
sbb
je
cmps
(bad)
inc
jno
sub
mov
jmp
rol
pop
hlt
xor
cs
sbb
mov
jp
xchg
jp
bound
loopne
sub
mov
addr16
adc
mov
loop
dec
scas
ror
mov
mov
(bad)
enter
jno
aad
xchg
cwde
and
cmp
out
inc
dec
lds
cmp
fstp
leave
add
sub
and
gs
test
xchg
jecxz
sub
sub
push
xor
jbe
ja
movs
hlt
pop
and
icebp
mov
popf
out
or
dec
mov
imul
fist
cmps
and
fs
jp
jbe
and
pusha
cmp
daa
rcl
xchg
test
repnz
not
push
sbb
fist
jns
movs
mov
inc
adc
xchg
xor
in
and
lods
(bad)
push
add
xchg
call
movs
(bad)
imul
push
popa
cli
aaa
mov
xor
xor
popa
cmps
jne
cmp
adc
inc
add
jb
xchg
ja
mov
push
jecxz
imul
aam
mov
inc
gs
lock
call
inc
retf
jns
inc
pusha
out
jae
repz
aam
loop
test
clc
mov
push
bound
dec
loop
out
xor
pop
(bad)
in
pop
test
and
out
test
and
add
xchg
pop
adc
cmps
aam
sub
pop
mov
ret
adc
inc
jge
xor
adc
dec
sub
aas
xlat
mov
pushf
dec
repz
push
and
mov
ret
or
sbb
repnz
mov
movs
and
cld
dec
add
fs
mov
add
mov
dec
repz
mov
push
sub
push
mov
test
out
or
je
retf
sub
inc
pop
or
hlt
pop
loopne
sbb
cmp
ds
mov
(bad)
push
and
(bad)
add
xor
xor
jnp
bound
(bad)
into
push
jp
jno
jl
out
cmp
and
mov
add
adc
cmp
imul
pusha
out
mov
retf
lea
popa
jg
adc
sub
loopne
push
pop
les
inc
icebp
jno
sub
pop
aam
mov
enter
adc
mov
dec
dec
xchg
adc
outs
arpl
in
mov
push
and
inc
daa
mov
and
lods
into
ss
sub
mov
imul
xchg
jecxz
sub
xchg
imul
inc
int
je
rcl
(bad)
mov
std
xchg
push
sub
aas
mov
jle
cwde
push
loopne
cdq
dec
test
adc
mov
js
jno
test
dec
push
out
std
aam
inc
push
retf
ja
ja
shl
xor
jae
cmp
(bad)
xchg
pop
dec
push
ret
aad
xor
out
ins
out
jae
call
les
mov
icebp
mov
jnp
mov
or
ins
stc
sar
imul
retf
popa
retf
push
dec
xchg
sub
pop
add
xor
mov
mov
mov
sub
mov
jecxz
xchg
outs
jmp
rol
or
(bad)
shr
mov
add
xchg
add
sub
adc
xchg
sahf
sahf
push
dec
xor
ds
adc
rcr
aam
aaa
sub
or
fldcw
call
outs
std
es
dec
push
shl
sub
add
mov
(bad)
daa
out
ror
retf
cli
mov
fmul
inc
push
popa
sbb
jge
push
push
test
mov
inc
push
mov
sub
xor
ret
dec
push
push
add
xlat
inc
rcr
(bad)
leave
cmp
jmp
ret
sbb
ss
int
or
jmp
(bad)
scas
leave
(bad)
loop
mov
xchg
and
add
fisttp
sub
mov
adc
push
push
scas
jb
dec
mov
sahf
daa
inc
sub
mov
loop
and
mov
imul
jb
int3
sbb
cli
or
ret
or
mov
inc
je
adc
add
jmp
add
fbld
adc
mov
adc
push
mov
mov
sahf
or
popa
imul
inc
jmp
movs
add
or
adc
adc
div
push
adc
cmp
sbb
call
sbb
cwde
xor
adc
xor
pop
and
add
add
cdq
mov
push
mov
(bad)
call
and
movs
hlt
push
mov
cld
adc
aam
rcl
fcomp
lea
xor
popa
hlt
popa
add
inc
test
movs
xor
cld
dec
fimul
mov
mov
imul
xor
xor
adc
jbe
lock
adc
lds
xchg
pop
cmc
xor
inc
rol
inc
cmp
icebp
push
jp
sub
add
in
and
mov
aam
test
push
or
push
arpl
les
add
adc
jmp
cmp
in
test
mov
add
ins
add
xchg
xor
add
or
mov
pop
push
mov
loopne
mov
adc
pop
or
push
lea
in
push
shl
sbb
and
ins
adc
xor
add
int3
dec
xor
inc
lock
inc
stos
adc
adc
push
test
(bad)
out
mov
sub
add
test
shl
fld
push
mov
lea
jmp
and
mov
paddsb
adc
jns
xchg
enter
punpcklbw
popa
push
inc
add
xchg
dec
ins
enter
test
mov
adc
inc
psraw
std
fsubr
add
pop
popa
std
and
cmp
rol
loope
and
sub
adc
les
mov
inc
inc
ret
pusha
and
loope
loope
popa
adc
test
dec
push
and
mov
(bad)
ret
mov
mov
push
mov
jmp
ins
stc
xchg
movs
add
or
adc
in
mov
cmp
gs
mov
loope
loopne
mov
cmp
add
inc
(bad)
out
xlat
es
pop
call
add
lea
and
icebp
xchg
jmp
(bad)
test
jnp
inc
push
xchg
popa
jo
pop
jno
out
jge
adc
inc
icebp
xchg
popa
shl
ss
test
xchg
pop
rcr
mov
push
and
lea
aaa
mov
fimul
mov
cmp
in
movs
and
gs
dec
outs
add
add
(bad)
jg
(bad)
mov
pop
ret
test
fsub
and
cmps
add
add
sbb
cmp
jbe
jns
mov
push
mov
lds
jns
outs
fst
aas
jb
cmps
jb
mov
mov
sub
xor
cmp
inc
mov
(bad)
mov
pop
xor
(bad)
push
mov
inc
fld
clc
xor
cmp
mov
jns
dec
or
mov
mov
out
imul
jae
cwde
clc
jl
xor
cmp
cli
cmp
and
(bad)
ficomp
sbb
test
stos
imul
data16
push
fisttp
xor
cmp
pop
mov
js
ds
jle
jge
add
js
jle
(bad)
mov
(bad)
sub
mov
sti
jl
loop
(bad)
push
mov
jle
dec
test
mov
mov
in
jge
cmp
int3
(bad)
fld
mov
jmp
fldenv
mov
pop
cmp
retf
or
pushf
(bad)
jns
xor
jnp
sub
xor
cld
cmp
cmp
scas
sbb
int
mov
(bad)
cli
outs
jns
test
sti
sbb
xchg
or
cmp
pop
mov
mov
aaa
xor
pop
mov
loope
xor
fptan
jns
je
cdq
jb
gs
movs
push
dec
repnz
test
xor
gs
sub
retf
sbb
xchg
add
fldenv
xchg
dec
ficom
xor
jmp
shr
loope
ret
mov
gs
in
ds
and
adc
adc
lahf
pop
ror
jno
retf
stos
inc
rcr
in
mov
addr16
sbb
adc
push
cmc
push
cmp
and
xchg
pusha
data16
loopne
out
pop
mov
repnz
sbb
jno
xor
fcmovbe
shl
xchg
cdq
push
pop
inc
fbld
aad
aad
cdq
ds
and
inc
mov
add
sbb
cdq
push
icebp
int
pushf
js
pusha
pop
add
cdq
mov
rcr
pop
test
inc
jae
dec
fst
cdq
loope
stc
mov
in
adc
add
cdq
xchg
mov
in
sbb
mov
mov
inc
sbb
sbb
sbb
ffree
mov
sbb
rcl
and
call
and
mov
bound
fcos
jno
daa
adc
add
mov
or
xchg
ficomp
xchg
cdq
sbb
inc
or
sbb
aad
mov
sbb
and
inc
icebp
(bad)
(bad)
mov
call
cdq
fst
sub
add
adc
pop
sbb
or
xchg
cmp
adc
push
divps
adc
retf
lock
fsubr
inc
das
push
loopne
imul
mov
clc
jl
(bad)
mov
popf
js
add
pushf
pop
xchg
jl
mov
mov
lahf
pop
jl
sbb
and
cld
test
lock
es
xchg
mov
dec
ror
lock
xor
inc
sbb
(bad)
xor
jl
mov
repnz
xchg
hlt
inc
sbb
pop
fist
cld
lock
cli
and
not
mov
pop
les
jge
cmp
je
aad
dec
cmp
push
fisttp
pusha
jp
outs
retf
dec
js
loopne
cmp
sub
in
call
add
icebp
mov
sar
sbb
clc
clc
mov
jae
jno
sti
pop
pop
test
lea
(bad)
lock
rcr
clc
in
add
jmp
aam
sbb
cwde
xlat
cmp
and
xchg
cli
add
push
pop
jne
jg
jl
sub
jae
inc
and
pop
(bad)
mov
arpl
adc
mov
scas
and
dec
fstp
aaa
pop
(bad)
inc
pop
loop
ret
(bad)
test
push
mov
out
cmps
and
adc
ret
pop
clc
call
rcl
(bad)
ins
pop
pop
add
mov
in
ins
pop
mov
inc
xor
push
sar
or
int3
mov
pop
pop
mov
add
aaa
sbb
ret
adc
inc
mov
sbb
rcr
in
xor
loop
xchg
imul
sub
test
out
pop
fsub
inc
call
mov
out
mov
les
mov
inc
xchg
sbb
pop
xchg
das
loop
ret
ret
loop
jbe
and
shl
pop
(bad)
repnz
test
aas
lea
xchg
(bad)
dec
jecxz
xchg
push
mov
inc
pop
dec
adc
push
out
mov
aas
cmp
arpl
xlat
loop
loop
bound
aaa
sbb
arpl
inc
jb
(bad)
(bad)
and
call
cmps
adc
xor
call
outs
jb
addr16
add
scas
cs
adc
fiadd
jb
ss
xor
push
iret
inc
adc
sub
out
mov
ins
aaa
jb
ss
xor
adc
and
and
sbb
and
idiv
clc
xchg
rol
jae
int
in
xor
imul
lds
jg
fdivrp
ret
int3
mov
xor
xchg
xchg
ror
xor
jp
push
les
in
out
push
push
cmps
ss
push
out
xchg
xchg
es
push
out
sbb
mov
jae
add
or
outs
test
jb
push
cmp
push
cmp
mov
cmps
adc
aaa
fsub
xchg
pop
jb
ss
int
push
das
push
pusha
(bad)
(bad)
jg
push
sar
xor
cmp
lahf
jmp
sub
lock
xor
and
retf
ins
or
jnp
xchg
loope
retf
add
pusha
mov
or
jmp
imul
cmp
mov
adc
ret
jae
jbe
dec
into
enter
push
retf
jb
lahf
push
mov
xor
scas
imul
xchg
sub
into
mov
out
mov
cmps
stos
cmp
mov
jno
and
dec
push
adc
push
jnp
xor
mov
inc
xchg
pop
push
jmp
dec
aaa
data16
xchg
out
xchg
xlat
shl
inc
stc
ds
arpl
inc
sti
push
lahf
into
mov
pop
mov
out
scas
mov
popa
jp
call
inc
clc
mov
mov
mov
mov
out
lods
jne
sub
push
sub
sti
dec
sub
sub
jge
sub
mov
xor
push
stos
jmp
in
inc
imul
sahf
mov
or
sti
popf
push
stos
dec
jmp
jnp
mov
stos
imul
sub
mov
loop
jne
jmp
mov
inc
repnz
mov
mov
mov
aas
test
jmp
jb
cmp
ja
jnp
mov
addr16
fstp
aas
cmp
retf
sti
daa
sti
(bad)
sbb
stos
loop
pop
pop
bound
xchg
loop
push
mov
mov
inc
and
and
xor
or
jne
fwait
int
pusha
loope
add
dec
and
fs
jg
mov
mov
and
dec
aas
les
test
mov
inc
jge
(bad)
idiv
int
ins
and
push
jge
lea
in
test
xchg
std
mov
and
or
(bad)
adc
fst
ins
daa
inc
add
sub
sub
shl
sti
int
mov
inc
sub
jno
mov
sub
repnz
fisubr
test
inc
ins
sbb
js
in
adc
ins
loopne
pushf
leave
sub
cdq
push
mov
xchg
and
in
leave
mov
(bad)
les
imul
cmp
add
add
gs
ins
vprotw
lea
loopne
or
and
and
pusha
mov
adc
dec
shr
mov
loopne
dec
cmp
mov
jmp
add
movs
inc
ins
(bad)
fmul
or
mov
dec
stos
cmp
sahf
mov
in
pop
stc
add
add
adc
or
push
sbb
inc
cmp
movs
xor
or
ins
mov
add
jmp
in
or
mov
in
movs
in
ins
adc
adc
retf
adc
int3
push
lods
xor
shr
lea
lods
loope
cmp
cmp
inc
int
mov
jo
xchg
mov
inc
push
ins
test
hlt
cmp
mov
and
mov
sbb
mov
fmul
jecxz
hlt
cmp
ins
icebp
pop
sti
dec
imul
repz
jp
(bad)
fistp
jecxz
iret
je
dec
xor
mov
xor
bound
test
push
cmp
xor
mov
sub
nop
mov
sub
movs
add
idiv
jmp
jae
mov
jge
xlat
cmp
dec
jge
jge
imul
ret
and
imul
jo
pop
dec
pmaddwd
mov
sub
jne
push
pop
mov
mov
idiv
xchg
fmul
icebp
jo
call
xchg
pop
or
mov
cld
dec
jno
mov
xor
cwde
imul
leave
mov
test
xchg
sbb
push
jge
mov
test
xchg
pop
mov
movs
adc
lea
pop
sub
dec
xor
mov
xor
add
mov
mov
jmp
jge
xor
test
jns
xor
inc
mov
mov
mov
clc
dec
cwde
call
cmp
punpckhwd
or
out
jo
cld
fs
mov
mov
popf
imul
mov
imul
leave
mov
jns
jnp
jo
loopne
or
ret
das
or
mov
retf
push
mov
cmp
pop
sahf
jl
icebp
popa
dec
xor
imul
lock
inc
mov
mov
xchg
xor
jp
lock
je
lds
adc
retf
je
mov
hlt
js
mov
lock
je
je
pop
lock
hlt
add
add
repz
cli
fwait
fs
hlt
and
jo
call
(bad)
xor
xchg
mov
pop
movs
inc
push
(bad)
jmp
addr16
ja
cwde
cmc
test
psubsb
sub
sub
push
iret
sub
call
iret
sub
push
iret
sub
call
iret
sub
push
iret
sub
call
iret
sub
push
iret
sub
call
iret
sub
push
xor
retf
call
adc
sbb
scas
test
test
push
and
outs
jle
xchg
inc
ffree
pop
dec
(bad)
std
push
adc
jno
cmp
out
and
adc
call
mov
pop
xchg
adc
pushf
call
lods
(bad)
mov
imul
or
out
mov
xor
mov
xchg
lods
dec
mov
ss
push
xchg
cmp
out
mov
into
call
inc
push
es
stos
cmp
and
dec
mov
sub
mov
mov
aaa
data16
xor
in
fistp
inc
adc
xchg
ficomp
aas
or
bound
pop
adc
mov
mov
or
sub
inc
sbb
dec
mov
aaa
data16
inc
ss
fidiv
retf
mov
call
push
jbe
sbb
call
inc
sbb
sbb
jbe
jmp
sub
jo
inc
cs
sub
scas
hlt
jmp
mov
dec
daa
push
retf
inc
jae
jg
jae
jbe
clc
retf
rep
cmc
mov
sbb
push
retf
hlt
mov
sub
sbb
fwait
clc
call
cmp
sub
jg
fmul
call
das
push
push
icebp
movs
call
cmp
idiv
call
xchg
jmp
adc
and
movs
pop
jmp
jae
stc
fstp
or
dec
mov
adc
hlt
mov
loope
push
arpl
xor
es
cmps
mov
xor
push
into
out
xchg
cmps
loop
in
stos
fcmovnbe
stc
push
inc
xor
mov
mov
stos
cmp
mov
pop
mov
cmps
and
mov
rcr
mov
mov
(bad)
out
mov
mov
and
cmp
stos
rcr
mov
scas
add
clc
jmp
loopne
mov
pushf
cli
sti
push
jge
into
jmp
mov
push
inc
jge
cld
cmp
mov
jmp
cld
mov
scas
stc
mov
xchg
mov
sbb
cld
xchg
mov
retf
xor
lahf
adc
nop
pop
mov
cli
mov
movs
loope
call
sbb
push
mov
out
xchg
mov
adc
xchg
adc
xchg
jecxz
dec
mov
sub
dec
mov
stos
inc
dec
mov
sub
dec
mov
cdq
inc
fwait
(bad)
(bad)
pop
out
sub
ret
inc
sar
or
dec
mov
inc
cmps
push
or
mov
xlat
add
and
add
lock
lock
sub
loopne
shr
sbb
sub
sbb
jns
cwde
or
ret
sub
mov
fldcw
aas
(bad)
jbe
das
lds
in
add
ret
sub
pop
lahf
adc
jae
adc
cmp
outs
lds
sub
push
lods
sub
and
mov
dec
sbb
adc
fwait
xchg
xor
jb
clc
daa
push
pop
mov
popa
mov
add
pop
inc
adc
jb
test
pop
retf
fdivr
call
hlt
mov
popa
lods
sbb
mov
les
call
xchg
dec
push
(bad)
cli
add
and
aas
pop
mov
xchg
mov
cmp
out
mov
imul
mov
inc
das
xor
outs
sbb
mov
call
fnstenv
popf
int
stos
mov
dec
push
dec
or
js
cmp
int3
pop
jns
shl
mov
enter
mov
push
ds
mov
fmul
sbb
aas
lods
mov
sbb
cmp
fistp
(bad)
arpl
or
das
dec
mov
mov
mov
or
sbb
push
or
mov
mov
mov
fistp
sub
pop
sub
pushf
dec
mov
lahf
pop
dec
call
pushf
and
or
sub
jmp
or
pop
sub
out
out
sbb
out
mov
dec
fmul
pop
pop
repnz
sub
pop
lods
fwait
mov
or
cs
std
and
mov
and
adc
call
pop
sub
adc
cmp
loop
ins
pop
aad
sub
mov
lea
mov
xchg
ret
(bad)
mov
imul
add
mov
add
pop
movlps
pop
pop
(bad)
fsub
les
popa
sub
cmp
in
loop
popf
int3
dec
fistp
ins
or
push
out
into
fwait
(bad)
in
sub
in
(bad)
fmulp
mov
push
pop
add
mov
push
cdq
(bad)
mov
and
bound
pop
push
mov
xor
pop
pop
nop
xchg
jg
out
jecxz
ret
pop
mov
sbb
in
cld
sub
push
push
push
pop
dec
adc
aad
fst
cmps
mov
inc
sbb
jp
jp
xchg
nop
dec
pusha
push
rcr
(bad)
fdiv
mov
jp
pop
adc
push
mov
and
jns
jns
sub
jge
in
mov
xchg
mov
push
push
sti
pop
push
cmps
mov
jmp
add
adc
cli
les
xor
std
ficomp
mov
cli
hlt
pop
adc
inc
call
mov
movs
std
xor
in
cmps
stc
mov
movs
std
inc
in
mov
adc
xor
sub
mov
mov
push
les
enter
xchg
and
inc
pop
idiv
(bad)
push
xchg
xchg
push
adc
xchg
push
cmps
ss
and
ja
push
adc
and
jbe
push
mov
nop
jbe
movs
push
mov
adc
gs
or
adc
push
jo
pusha
lods
add
adc
mov
ja
cmc
or
(bad)
out
xchg
in
in
jmp
bound
mov
loopne
inc
inc
movs
push
data16
jae
adc
mov
sub
aas
add
hlt
mov
jae
(bad)
hlt
xchg
out
add
inc
mov
push
or
jo
xor
inc
add
jne
outs
test
data16
and
addr16
mov
cmps
mov
inc
and
lock
or
and
adc
aad
(bad)
adc
jmp
mov
inc
inc
(bad)
(bad)
mov
ss
fwait
mov
cmp
jae
add
(bad)
rol
lods
sbb
fwait
push
mov
outs
push
es
jo
add
icebp
sti
inc
in
cmc
inc
xor
push
je
test
shl
cmp
sbb
retf
add
push
clc
dec
dec
push
and
cmp
pusha
xor
retf
int
arpl
jno
xor
xor
xchg
je
(bad)
mov
data16
add
add
xchg
jbe
xchg
sbb
jb
mov
and
call
sahf
inc
popa
jae
out
loop
nop
xor
add
adc
sar
or
xchg
adc
loop
add
iret
repnz
adc
cmps
mov
ss
adc
adc
xlat
mov
test
idiv
jnp
xor
stc
xchg
add
inc
inc
mov
test
sti
inc
mov
xchg
xchg
into
jbe
sbb
xchg
add
adc
das
movs
adc
add
in
xor
push
jmp
mov
jb
xor
xor
stos
das
mov
imul
add
adc
js
cdq
inc
mov
xchg
xor
mov
icebp
ins
xor
je
xor
js
mov
adc
test
and
jl
(bad)
out
sub
jo
movs
test
jns
mov
stc
pop
aas
jle
lods
iret
enter
out
les
mov
mov
push
repz
enter
mov
pop
leave
pop
cdq
cs
or
mov
jmp
or
dec
or
jecxz
enter
or
int3
leave
in
cdq
imul
ja
dec
adc
pop
jle
bswap
mov
call
les
les
mov
sub
pop
hlt
jmp
mov
push
pop
imul
shl
mov
or
sub
dec
clc
pop
mov
call
mov
or
mov
mov
(bad)
and
clc
test
cdq
into
js
inc
in
sbb
sbb
movs
les
test
xchg
and
enter
mov
jp
(bad)
mov
lds
test
gs
sbb
sub
test
xchg
out
cmp
bound
push
inc
fsubr
xchg
mov
fs
cmps
sbb
loop
mov
je
test
mov
popa
dec
mov
adc
push
and
cdq
repz
inc
icebp
movs
jmp
sbb
imul
or
pop
jno
xchg
and
es
imul
sbb
mov
test
mov
imul
sar
icebp
icebp
adc
mov
mov
sub
ror
adc
jnp
enter
cmps
mov
js
movs
mov
ror
aas
jns
pop
loop
aas
dec
xor
aad
out
inc
mov
xor
mov
bound
or
cmp
mov
leave
mov
scas
sbb
xor
loopne
shl
in
mov
in
femms
xchg
fadd
int
and
and
push
and
sbb
mov
outs
pop
xchg
shl
xor
mov
mov
xor
mov
shl
mov
push
loope
add
mov
xor
pushf
sbb
je
mov
dec
jno
int
lods
adc
xor
inc
imul
aaa
loope
js
pop
push
je
and
icebp
cwde
sahf
pop
jno
nop
sub
adc
xlat
mov
mov
push
cli
xor
fild
push
push
jle
and
xchg
icebp
pop
push
dec
jb
jmp
fcom
aas
mov
jmp
scas
je
xchg
out
iret
int
adc
int3
sbb
add
nop
jno
add
in
fst
or
imul
loopne
pusha
retf
fmul
ins
add
ins
cmp
xchg
in
and
add
inc
pushf
arpl
pusha
cli
imul
sbb
loopne
pop
call
pusha
or
jp
pusha
or
jae
rcl
pop
or
shr
cmp
push
nop
scas
cmp
gs
fist
test
xlat
push
mov
pop
mov
pushf
sub
adc
push
push
js
ins
cmp
add
mov
jbe
aas
xor
in
mov
jo
icebp
in
std
call
adc
ins
jne
scas
jo
(bad)
fld
adc
dec
push
adc
and
js
and
pushf
outs
xchg
mov
movs
fld
or
jns
jb
lock
lods
lea
mul
pusha
lods
inc
lods
int
pop
dec
and
pusha
jmp
sar
sub
jge
xchg
xchg
fucomip
xchg
adc
fisttp
outs
jb
inc
xchg
int
mov
push
adc
push
and
sar
jo
push
jmp
or
cmp
cwde
test
mov
or
std
dec
std
setg
xor
adc
mov
in
ds
add
loop
mov
fwait
cmp
cmps
xor
adc
mov
icebp
in
mov
test
cmp
retf
ror
cmc
add
jne
xchg
dec
(bad)
loop
cmp
xchg
clc
push
add
ror
mov
retf
or
int3
push
popa
imul
pop
jo
dec
jg
push
rol
xor
xor
and
nop
imul
retf
adc
cwde
imul
cmp
mov
inc
cmp
add
mov
daa
mov
and
jmp
add
xchg
addr16
xchg
jmp
mov
dec
xchg
mov
fiadd
push
mov
jmp
and
jo
out
cmp
and
ins
sub
loope
jle
cmp
mov
pop
nop
and
jmp
ss
rcl
jne
xchg
sti
(bad)
stos
nop
cdq
mov
or
cmp
in
or
push
mov
retf
sar
shrd
xchg
dec
push
add
(bad)
cld
out
fwait
retf
dec
enter
scas
adc
iret
sub
jmp
lods
mov
fdiv
mov
cld
fisttp
jae
fsubr
fcom
ds
jmp
fstp
fist
fwait
stos
pop
retf
lods
xor
fisttp
sbb
fdivr
shr
fnstsw
stos
xchg
mov
out
gs
les
dec
add
dec
or
mov
sub
(bad)
cld
xor
fwait
pop
gs
pop
(bad)
stos
(bad)
sub
xchg
lahf
movs
test
scas
mov
fcmovu
pop
cli
pop
jae
pop
push
dec
stos
inc
add
retf
stos
pop
push
jmp
gs
cmp
lods
cmp
fsub
sbb
mov
pop
out
xchg
or
cmps
dec
test
push
and
sub
sub
inc
mov
and
ror
sbb
mov
lods
mov
shl
sbb
inc
fild
outs
imul
and
(bad)
(bad)
stos
push
stos
mov
pop
(bad)
cmps
and
add
mov
sti
sti
xor
scas
(bad)
lods
data16
retf
idiv
sbb
dec
mov
mov
and
adc
ds
(bad)
xchg
cmp
xchg
adc
push
mov
(bad)
mov
jle
enter
ds
ins
xchg
enter
mov
xchg
gs
sbb
es
xor
bound
out
xchg
xor
dec
out
xchg
xchg
outs
mov
xchg
inc
ins
or
hlt
adc
mov
(bad)
ja
pop
outs
mov
imul
jns
sahf
dec
mov
jb
dec
push
dec
inc
enter
cwde
data16
cmp
mov
mov
aaa
adc
sar
sti
xor
adc
ds
adc
(bad)
push
sbb
xor
mov
mov
pop
leave
dec
test
int3
xchg
dec
shr
dec
mov
es
aam
add
adc
outs
xchg
mov
mov
clc
imul
adc
push
mov
jae
test
jp
ret
hlt
imul
xchg
jae
aad
adc
aad
fs
xchg
repnz
pushf
out
push
pop
loope
arpl
into
xchg
sbb
js
inc
push
aas
jne
nop
in
xchg
movs
in
ret
out
scas
imul
sub
dec
adc
mov
push
call
test
mov
jl
inc
adc
sbb
in
shr
adc
es
jne
sar
je
js
jecxz
bound
call
add
shr
or
call
out
pop
jns
(bad)
jl
(bad)
fisub
cmc
into
jmp
js
test
xchg
popa
pop
repz
cs
mov
pop
jne
loop
adc
sub
cs
adc
fnsave
(bad)
fadd
(bad)
xchg
leave
mov
out
stos
fbstp
imul
add
inc
lea
aaa
shr
sub
cmp
js
enter
cli
push
mov
enter
ret
jp
leave
or
sub
sub
ds
lock
mov
inc
push
cmp
fdiv
mov
sbb
lods
in
cwde
push
cdq
mov
cld
inc
sbb
push
sbb
sahf
mov
sub
and
or
cmps
push
mov
test
ins
push
in
add
cdq
xor
popf
pop
lahf
imul
pop
and
push
enter
cmp
xor
fst
mov
(bad)
dec
mov
sti
dec
mov
addr16
scas
push
push
xchg
cmp
jl
jnp
stos
sub
adc
jne
cmp
popf
popf
das
ins
inc
dec
lds
jns
test
or
lahf
je
or
mov
cld
hlt
xchg
jle
iret
ds
lds
push
adc
cmp
push
aad
sub
outs
add
inc
movs
fistp
add
fisubr
stos
iret
fisttp
mov
or
push
(bad)
or
pusha
xor
mov
movs
adc
xor
fsub
pop
(bad)
add
mov
xor
pop
or
push
fwait
sbb
dec
es
ja
shr
and
out
js
inc
data16
dec
push
sub
pop
mov
xor
inc
stc
cmps
pop
in
lods
stc
xchg
out
dec
ret
js
sub
fisttp
add
inc
mov
cmps
aas
pop
pop
daa
int
jbe
retf
pop
ja
pop
(bad)
and
push
pusha
xor
pop
or
push
pop
ss
sbb
xor
retf
test
repz
retf
fimul
jns
pop
or
lahf
into
dec
xchg
shl
push
jbe
xchg
(bad)
hlt
mov
sahf
iret
jle
pop
add
xchg
shl
xlat
xchg
les
js
sahf
iret
dec
ret
push
add
xchg
(bad)
fmul
jle
pop
or
retf
mov
xor
xchg
(bad)
jbe
push
add
les
(bad)
retf
jnp
pop
or
call
ret
xchg
(bad)
jbe
push
add
les
cli
enter
or
jg
sahf
iret
dec
pushf
int
add
jb
xchg
shl
rol
ja
push
pop
jbe
xchg
(bad)
aam
sti
retf
jnp
pop
or
cwde
leave
dec
popf
int3
jge
pop
or
int3
popf
int3
cld
(bad)
fmul
jb
push
add
xchg
shl
rol
jne
push
cmp
stos
into
dec
lahf
into
jg
in
push
mov
xlat
shl
out
arpl
sbb
pushf
mul
cmps
rcl
clc
js
mov
stos
idiv
jecxz
mov
mov
push
popf
sar
mov
fist
pusha
int3
jmp
leave
push
cli
fnsave
retf
jae
(bad)
xor
ss
pushf
mov
(bad)
jmp
mov
mov
sbb
addr16
pushw
cli
xchg
stos
enter
retf
mov
fcomi
addr16
fimul
dec
les
xor
pop
push
leave
daa
jnp
stos
out
sub
js
sub
add
mov
cli
push
xor
xchg
and
mov
push
fld
dec
xchg
and
wbinvd
ins
test
adc
jl
fmul
push
inc
test
pop
jnp
mov
mov
in
loop
shl
add
inc
cmp
push
xchg
sti
or
fstp
xor
mov
or
xlat
pop
daa
adc
sub
into
or
outs
mov
pushf
cdq
dec
and
xor
retf
ja
loope
outs
jb
mov
pop
mov
call
(bad)
jmp
xlat
imul
sti
cmps
adc
mov
mov
cwde
movs
fcmovu
(bad)
loopne
call
jnp
retf
xchg
call
fmul
jge
(bad)
lahf
pop
sub
xor
inc
aaa
xchg
enter
gs
(bad)
or
cmp
mov
out
sbb
push
xor
popf
inc
sbb
test
jmp
dec
mov
xchg
jns
dec
(bad)
vmovapd
cwde
add
pop
jno
pop
pop
jl
mov
mov
mov
cmp
push
fidivr
cmps
cmp
xor
sahf
pop
es
jmp
dec
inc
jno
mov
repnz
int
dec
enter
ja
stos
mov
push
sub
mov
dec
lea
dec
test
adc
sub
call
je
fbld
jmp
mov
sti
mov
stos
cmp
scas
out
pop
imul
add
push
cmp
scas
pop
push
js
mov
dec
aas
mov
in
or
bound
retf
icebp
out
call
sub
cwde
test
std
inc
sub
xchg
mov
shl
fucomp
int3
mov
inc
mov
inc
sar
cmp
xchg
mov
jecxz
int
and
imul
mov
in
dec
cmp
adc
push
xor
imul
daa
mov
sti
scas
aam
out
retf
xchg
push
imul
mov
outs
jg
dec
mov
jnp
ja
mov
mov
mul
xchg
out
mov
imul
loopne
daa
cmp
cdq
pop
mov
cdq
inc
xor
cwde
adc
sahf
cld
inc
stc
pop
out
adc
jmp
aam
and
dec
xor
ds
push
xchg
sbb
int
nop
xor
jmp
xchg
dec
daa
js
xchg
pop
dec
xor
aad
sbb
jge
or
adc
in
cmp
fsub
fsqrt
idiv
data16
add
cli
mov
pop
pop
or
xor
es
xchg
mov
jnp
xor
push
movs
shl
adc
gs
imul
aad
dec
fdiv
into
adc
xchg
xlat
test
pop
xor
push
add
push
repnz
aam
addr16
(bad)
xchg
mov
mov
xor
call
mul
imul
xchg
fistp
cld
jmp
push
es
and
jmp
sbb
xchg
lea
(bad)
call
dec
mov
and
pop
bound
popa
inc
jne
push
dec
imul
hlt
xchg
inc
bound
and
pop
and
push
xor
inc
pop
cmps
mov
xchg
mov
lods
rcl
loope
mov
shl
loopne
jle
push
(bad)
fdiv
popa
clc
aad
xchg
jge
add
and
clc
sub
or
sub
mov
mov
push
adc
xchg
push
sti
cmp
pop
sub
mov
gs
retf
pop
arpl
fnstenv
(bad)
fnstsw
xchg
ds
sbb
ins
pop
add
bound
xor
push
and
movs
fnsetpm(287
sahf
cmp
mov
lock
shl
inc
add
push
shl
ret
rcl
repz
push
adc
pop
leave
ret
xor
push
push
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
call
mov
mov
push
push
call
test
jl
push
push
mov
call
pop
ret
push
push
mov
mov
push
mov
xor
xor
test
jbe
push
mov
call
test
jl
inc
cmp
jb
pop
pop
pop
ret
push
push
mov
call
push
mov
call
pop
ret
push
mov
sub
mov
xor
mov
mov
test
push
mov
push
mov
mov
jne
mov
jmp
test
je
mov
and
push
lea
push
push
push
call
mov
test
mov
jbe
mov
xor
rep
xor
cmp
jl
mov
mov
mov
lea
movs
movs
lea
push
lea
push
movs
lea
push
mov
mov
mov
push
movs
mov
push
call
mov
test
mov
jl
xor
xor
mov
cmp
jb
mov
cmp
jae
mov
movsx
mov
mov
inc
add
jmp
mov
test
je
push
call
mov
push
call
mov
test
pop
je
mov
push
call
mov
mov
pop
xor
pop
call
leave
ret
push
mov
call
mov
mov
mov
lea
movs
xor
test
setne
movs
movs
mov
mov
test
mov
movs
mov
jne
mov
jmp
xor
mov
mov
mov
lea
push
push
push
mov
call
cmp
mov
jge
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
cmp
jne
and
mov
lea
push
push
push
mov
call
mov
test
mov
jge
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
lea
push
push
lea
push
push
call
mov
test
mov
mov
jge
test
je
mov
push
call
mov
or
test
jmp
test
mov
je
mov
push
call
jmp
mov
mov
and
xor
push
pop
mul
seto
mov
neg
or
push
call
and
pop
mov
jmp
mov
call
mov
ret
mov
mov
test
jne
mov
or
test
je
mov
push
call
mov
jmp
mov
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
xor
cmp
jne
push
mov
call
mov
or
pop
cmp
jmp
mov
mov
mov
cmp
jae
mov
mov
imul
mov
add
mov
cmp
jbe
cmp
je
mov
cmp
jne
mov
add
and
lea
push
and
mov
add
mov
xor
push
push
push
mov
mov
push
add
movzx
push
push
push
movzx
push
push
movzx
push
push
xor
push
call
add
jmp
cmp
jne
or
mov
mov
mov
mov
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
lea
and
mov
add
mov
xor
push
push
push
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
push
call
add
jmp
cmp
jne
push
lea
push
lea
push
push
xor
mov
mov
mov
mov
mov
call
cmp
je
mov
jmp
cmp
je
mov
lea
movs
movs
movs
movs
mov
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
push
call
push
and
mov
call
pop
pop
jmp
lea
mov
and
lea
movs
movs
movs
movs
mov
mov
imul
mov
mov
mov
mov
add
mov
movzx
push
call
mov
push
lea
mov
dec
not
and
mov
lea
and
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
jmp
movzx
cmp
jne
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
jmp
mov
jmp
cmp
jne
inc
mov
add
cmp
jne
mov
lea
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
push
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
push
mov
add
call
add
add
mov
inc
mov
mov
jmp
cmp
jne
push
mov
call
test
mov
jge
xor
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
push
call
push
and
mov
call
mov
or
pop
pop
test
jmp
mov
mov
push
and
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
mov
xor
cmp
jne
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
jmp
push
push
push
call
push
push
push
push
push
call
mov
add
cmp
jge
push
call
pop
mov
push
mov
call
mov
or
pop
cmp
je
mov
push
call
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
mov
mov
lea
push
push
push
call
cmp
mov
jl
mov
mov
lea
push
push
push
call
test
jl
mov
lea
push
push
mov
mov
push
call
test
jl
mov
mov
lea
push
mov
add
push
push
call
mov
mov
push
call
mov
mov
push
call
push
call
cmp
pop
je
push
mov
call
jmp
xor
mov
mov
mov
push
call
mov
mov
cmp
je
add
push
push
call
push
call
cmp
pop
je
push
push
mov
call
jmp
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
cmp
mov
jbe
mov
jmp
imul
push
call
xor
cmp
setne
mov
cmp
jne
jmp
mov
imul
push
push
push
call
mov
add
call
mov
call
jmp
mov
cmp
jne
xor
jmp
mov
lea
push
lea
push
push
push
call
cmp
jl
push
lea
push
mov
call
or
push
lea
push
mov
mov
mov
mov
mov
mov
call
mov
or
push
push
lea
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jge
mov
mov
push
call
mov
jmp
mov
lea
push
xor
push
mov
mov
xor
push
mov
mov
mov
mov
mov
push
call
cmp
mov
jge
mov
mov
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
mov
jle
xor
push
call
pop
mov
cmp
mov
je
push
mov
call
jmp
xor
or
mov
inc
mov
mov
add
cmp
jl
mov
cmp
je
cmp
jle
mov
push
pop
add
sub
mov
mov
jmp
mov
mov
mov
cmp
mov
je
jmp
mov
lea
push
mov
add
mov
call
mov
mov
push
push
mov
call
cmp
jne
mov
call
mov
cmp
je
mov
push
call
add
dec
jne
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
je
xor
cmp
je
inc
cmp
mov
jl
mov
mov
mov
mov
mov
cmp
je
mov
cmp
mov
je
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
mov
xor
inc
cmp
jne
mov
mov
lea
push
push
call
test
je
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
push
push
lea
call
mov
mov
push
push
push
add
call
push
push
movzx
push
push
lea
call
mov
push
lea
call
movzx
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
lea
jmp
push
push
lea
call
push
mov
call
mov
mov
mov
mov
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
mov
call
push
call
push
call
mov
mov
lea
push
push
call
jmp
sub
je
sub
je
dec
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
mov
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
jmp
push
push
lea
call
mov
mov
mov
push
push
push
push
call
push
push
push
push
push
call
jmp
cmp
jne
push
push
lea
call
mov
push
mov
call
mov
mov
mov
shr
lea
push
push
push
push
call
push
call
add
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
lea
mov
call
or
lea
push
call
cmp
jne
inc
mov
add
add
cmp
jle
cmp
jle
mov
xor
call
ret
lea
cmp
jne
mov
mov
push
push
push
call
cmp
jl
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
mov
je
mov
imul
mov
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
cmp
mov
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
lea
push
mov
call
lea
movzx
cmp
mov
mov
jl
cmp
jle
cmp
je
cmp
jne
or
push
lea
call
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
lea
push
mov
mov
push
mov
mov
push
call
push
mov
call
or
lea
push
call
inc
add
cmp
jne
inc
mov
add
cmp
jl
mov
cmp
mov
je
lea
push
lea
call
mov
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
push
mov
push
call
test
jne
inc
xor
inc
cmp
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
mov
mov
push
call
cmp
jne
cmp
jle
mov
mov
push
push
push
push
call
mov
cmp
mov
jge
mov
mov
call
mov
jmp
mov
cmp
jne
or
jmp
push
mov
call
mov
push
lea
call
xor
cmp
mov
jne
mov
cmp
je
mov
xor
cmp
setne
cmp
jne
call
mov
xor
cmp
setne
cmp
je
push
call
mov
call
mov
push
mov
call
mov
mov
cmp
je
push
mov
call
push
push
call
mov
imul
push
push
push
mov
call
add
or
cmp
je
push
push
call
xor
call
ret
push
mov
mov
test
je
mov
test
je
push
call
push
mov
test
je
mov
call
push
call
pop
and
pop
cmp
je
mov
call
mov
test
je
and
mov
push
call
mov
test
je
and
mov
push
call
pop
ret
push
mov
sub
push
push
mov
mov
xor
cmp
push
jne
jmp
mov
cmp
je
mov
call
cmp
mov
je
push
call
neg
sbb
inc
mov
je
call
push
call
mov
lea
push
push
call
lea
push
mov
push
call
mov
sub
mov
cdq
push
sub
sar
push
push
push
mov
sub
cdq
sub
sar
push
call
mov
push
call
mov
mov
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
push
push
push
call
cmp
mov
jne
mov
cmp
jge
cmp
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
push
call
cmp
jl
mov
mov
lea
push
push
call
mov
mov
push
call
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
mov
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
push
call
mov
call
cmp
mov
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
mov
call
mov
or
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
mov
push
mov
call
add
mov
mov
call
ret
push
mov
call
mov
cmp
jne
push
call
pop
mov
mov
and
test
je
push
call
jmp
xor
or
mov
mov
call
call
ret
push
mov
mov
test
push
je
mov
mov
push
push
call
mov
mov
mov
call
and
mov
test
je
mov
mov
call
mov
push
mov
mov
mov
movzx
lea
mov
call
mov
mov
mov
push
push
call
mov
test
je
mov
mov
call
pop
pop
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
cmp
je
lea
push
push
mov
mov
push
call
test
jl
mov
cmp
je
push
mov
push
call
mov
mov
push
call
mov
mov
push
call
jmp
mov
mov
cmp
je
mov
cmp
je
mov
push
push
call
mov
mov
cmp
jne
lea
mov
call
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
cmp
je
push
call
push
call
pop
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
cmp
je
cmp
mov
jle
xor
mov
mov
mov
cmp
mov
je
lea
push
mov
mov
call
cmp
mov
mov
jne
mov
mov
call
mov
mov
cmp
je
mov
push
call
inc
mov
add
cmp
jl
push
call
mov
cmp
je
push
call
mov
cmp
je
mov
push
call
mov
call
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
or
call
call
ret
push
mov
push
push
push
push
xor
cmp
mov
mov
je
push
push
call
cmp
je
cmp
jle
mov
lea
push
call
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
cmp
jne
mov
cmp
jl
jmp
mov
imul
push
mov
call
jmp
cmp
jle
and
mov
mov
lea
cmp
je
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
test
jne
add
inc
cmp
jl
mov
and
jmp
call
xor
cmp
jle
mov
mov
mov
mov
jmp
mov
lea
push
mov
mov
call
mov
cmp
je
mov
test
jne
inc
add
cmp
jl
jmp
mov
imul
push
mov
call
pop
pop
pop
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
xor
mov
xor
mov
mov
cmp
setne
cmp
jne
call
xor
cmp
setne
cmp
je
lea
push
call
mov
push
pop
lea
push
push
mov
mov
call
cmp
jne
mov
lea
push
call
lea
push
call
jmp
mov
lea
push
push
mov
call
test
je
movzx
mov
mov
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
cmp
jne
push
mov
call
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
push
lea
mov
call
lea
push
mov
call
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
jmp
sub
je
dec
je
dec
dec
je
dec
je
dec
jne
lea
push
push
mov
call
test
je
movzx
push
movzx
push
movzx
push
movzx
push
movzx
push
movsx
push
lea
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
push
fstp
movzx
push
movzx
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
movzx
fstp
movsx
push
push
push
push
push
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
cmp
fild
jbe
dec
fdiv
jne
cmp
jne
fchs
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
add
mov
call
mov
lea
push
call
lea
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
mov
jle
mov
mov
imul
mov
test
je
mov
test
mov
je
mov
shl
mov
lea
push
mov
mov
call
mov
push
lea
push
push
mov
call
add
lea
push
call
and
cmp
je
mov
inc
push
lea
push
mov
call
push
lea
mov
call
lea
push
mov
call
lea
jmp
mov
add
mov
lea
mov
xor
inc
mov
mov
mov
mov
test
je
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
mov
push
call
and
cmp
je
push
call
cmp
je
push
call
cmp
je
push
call
inc
add
or
lea
push
call
cmp
jne
inc
mov
cmp
jl
and
xor
call
ret
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
cmp
jne
mov
mov
cmp
je
mov
call
push
call
pop
mov
call
push
lea
push
mov
call
push
mov
push
call
push
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
lea
push
call
mov
mov
jmp
mov
cmp
mov
mov
je
mov
jmp
mov
mov
cmp
je
cmp
je
mov
mov
push
push
call
push
call
mov
cmp
pop
je
mov
mov
mov
cmp
jne
cmp
je
mov
cmp
je
add
cmp
je
mov
mov
push
push
mov
call
mov
cmp
je
cmp
je
dec
lea
mov
call
mov
sub
call
or
mov
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
test
jne
xor
jmp
mov
test
jne
xor
jmp
mov
push
push
push
push
call
ret
mov
mov
test
je
push
call
test
je
xor
inc
ret
xor
ret
push
mov
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
xor
pop
ret
test
je
mov
mov
call
test
jne
mov
test
je
test
je
xor
inc
pop
ret
mov
test
jne
ret
mov
test
je
jmp
push
push
call
and
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
call
ret
push
mov
push
push
call
test
je
push
push
push
push
call
mov
call
pop
ret
push
push
mov
xor
test
je
push
mov
push
push
call
and
cmp
jne
cmp
je
push
mov
call
push
call
mov
push
push
call
test
je
pop
pop
mov
pop
ret
push
push
mov
test
push
je
mov
mov
push
push
call
push
call
mov
jmp
push
call
push
call
push
push
call
mov
test
je
cmp
je
mov
push
push
call
push
call
test
je
mov
push
push
call
push
call
mov
push
push
call
test
je
push
mov
test
je
push
call
test
je
test
je
mov
call
test
jne
push
push
push
jmp
mov
push
call
push
call
mov
test
jne
mov
jmp
push
push
push
call
mov
pop
mov
pop
pop
pop
ret
push
mov
test
je
push
mov
xor
push
mov
test
jne
mov
test
jne
push
call
push
call
test
jne
test
je
test
jne
mov
mov
call
call
push
call
cmp
je
push
call
test
je
pop
pop
mov
pop
jmp
pop
pop
pop
ret
push
mov
test
je
push
call
test
je
push
mov
cmp
je
mov
mov
test
jne
push
call
push
call
test
jne
jmp
mov
xor
test
je
cmp
jne
push
call
test
je
test
je
test
je
cmp
je
push
mov
call
test
jne
mov
push
mov
call
pop
pop
ret
push
mov
push
mov
call
test
jne
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
mov
mov
call
cmp
je
push
push
push
call
mov
test
je
cmp
jne
xor
pop
pop
pop
ret
mov
jmp
push
mov
mov
test
je
push
call
pop
ret
push
push
call
mov
neg
sbb
and
add
test
je
xor
cmp
push
setne
push
push
push
call
pop
ret
push
mov
test
push
je
push
push
call
test
jne
push
push
call
jmp
push
push
push
call
mov
test
je
mov
push
push
call
pop
pop
push
push
push
call
mov
test
je
cmp
jne
pop
pop
ret
mov
push
push
push
push
call
mov
shr
cmp
jne
movzx
jmp
xor
inc
ret
push
mov
push
and
push
mov
push
mov
push
mov
call
test
je
test
je
push
push
call
test
jne
push
call
pop
mov
mov
cmp
push
jne
test
je
test
je
push
call
push
push
call
mov
test
je
cmp
je
push
call
test
pop
je
push
jmp
push
push
jmp
test
je
push
call
test
pop
jne
test
je
cmp
je
push
push
call
test
jne
push
call
push
push
call
mov
push
call
test
pop
je
mov
call
test
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
push
mov
mov
call
test
je
mov
test
push
push
mov
je
mov
lea
lea
push
mov
call
mov
mov
test
je
mov
cmp
je
mov
cmp
je
cmp
jne
xor
pop
pop
pop
ret
push
mov
push
push
push
mov
test
jne
call
mov
and
test
mov
je
mov
test
je
mov
jmp
mov
test
je
push
call
push
push
call
test
je
push
push
call
mov
jmp
inc
cmp
je
cmp
jg
push
push
call
test
pop
pop
jne
push
mov
call
mov
test
jne
mov
call
mov
test
je
test
mov
mov
je
xor
test
je
cmp
je
lea
push
lea
call
cmp
mov
jne
jmp
mov
jmp
lea
push
lea
call
mov
mov
cmp
je
test
je
test
je
cmp
jne
mov
mov
lea
push
lea
call
mov
push
push
call
test
pop
pop
je
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
jmp
cmp
je
mov
mov
call
test
je
cmp
jne
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
push
push
push
push
call
mov
test
jne
mov
call
mov
test
je
mov
test
mov
je
lea
push
lea
call
mov
mov
test
je
cmp
je
cmp
je
call
cmp
je
cmp
jne
jmp
mov
xor
push
push
push
call
mov
xor
cmp
je
push
call
test
pop
je
mov
push
push
call
mov
cmp
je
cmp
je
mov
cmp
je
mov
jmp
mov
cmp
je
push
call
test
je
mov
jmp
cmp
je
mov
mov
call
test
je
cmp
je
cmp
jne
mov
inc
cmp
jl
xor
pop
pop
pop
leave
ret
call
int3
push
mov
call
mov
test
jne
and
jmp
mov
mov
mov
mov
mov
call
push
mov
call
mov
cmp
mov
jb
cmp
jbe
add
cmp
ja
test
je
mov
mov
cmp
jne
push
call
push
call
cmp
je
push
call
push
call
mov
test
jne
test
je
mov
test
je
cmp
je
mov
push
mov
push
call
test
jne
inc
jmp
cmp
je
cmp
je
cmp
jne
test
je
mov
test
je
mov
movzx
cmp
jne
test
jne
cmp
jne
test
je
xor
jmp
mov
push
xor
mov
call
and
mov
mov
sub
mov
je
dec
dec
je
sub
jne
cmp
jne
push
call
test
jge
cmp
je
push
push
call
cmp
jne
test
jne
movzx
cmp
jne
test
jne
cmp
je
push
push
push
call
test
je
mov
test
je
push
mov
call
jmp
push
push
call
movzx
cmp
jg
je
cmp
je
cmp
je
cmp
je
mov
test
jne
push
push
call
test
mov
je
mov
call
push
call
cmp
je
call
push
call
push
call
pop
push
mov
call
test
je
mov
call
push
call
push
push
call
pop
pop
push
call
test
je
call
push
call
push
push
push
call
mov
call
ret
test
jne
push
call
mov
xor
test
setl
mov
push
push
call
test
je
cmp
je
mov
mov
push
mov
call
jmp
mov
test
je
push
call
jmp
push
push
mov
call
mov
test
je
mov
and
push
call
push
push
call
pop
pop
jmp
cmp
jl
cmp
jle
cmp
jle
cmp
jne
test
jne
push
call
test
pop
je
mov
mov
call
jmp
push
call
xor
cmp
mov
jne
jmp
xor
push
push
call
mov
cmp
je
mov
call
test
jne
push
call
jmp
cmp
je
push
push
push
push
push
push
mov
call
add
or
jmp
mov
call
mov
ret
mov
push
push
call
test
jne
cmp
mov
push
je
call
jmp
call
mov
test
je
cmp
je
mov
push
call
cmp
je
mov
mov
push
call
jmp
mov
test
je
push
call
jmp
push
mov
push
call
mov
test
je
mov
mov
xor
push
mov
call
cmp
je
push
push
push
push
call
mov
jmp
push
mov
call
mov
mov
call
mov
and
test
mov
mov
jne
test
je
call
mov
and
mov
neg
sbb
not
and
and
mov
mov
mov
mov
call
ret
push
call
pop
ret
push
push
call
pop
pop
ret
mov
xor
ret
push
mov
mov
push
mov
cmp
jbe
mov
test
jne
call
add
cmp
jb
mov
test
push
mov
jne
mov
call
jmp
mov
push
call
test
je
mov
mov
pop
pop
ret
mov
xor
ret
cmp
push
push
mov
ja
mov
cmp
jbe
call
mov
xor
cmp
jb
ja
cmp
jbe
mov
push
mov
call
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
pop
pop
ret
push
push
mov
test
mov
jne
xor
jmp
cmp
jne
call
mov
mov
cmp
ja
lea
cmp
ja
cmp
jae
sub
mov
mov
mov
push
add
push
push
mov
call
add
mov
pop
pop
ret
push
push
mov
test
mov
je
cmp
jne
call
mov
lea
cmp
jb
cmp
jbe
mov
push
mov
call
mov
lea
cmp
ja
mov
mov
push
push
add
push
mov
call
add
mov
cmp
jbe
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
add
mov
adc
jmp
cmp
jne
cmp
jl
jg
cmp
jbe
push
push
push
call
mov
xor
add
adc
cmp
jg
jl
cmp
jb
cmp
jbe
mov
push
mov
call
mov
pop
mov
xor
pop
pop
ret
push
mov
mov
push
xor
cmp
mov
mov
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
mov
jmp
push
mov
cmp
push
mov
jne
xor
cmp
sbb
neg
jmp
cmp
jne
mov
add
mov
cmp
jbe
mov
xor
jmp
push
mov
test
je
mov
test
je
cmp
push
mov
jne
mov
lea
cmp
jb
cmp
jb
cmp
jbe
mov
push
mov
call
mov
mov
add
cmp
mov
jne
mov
mov
add
cmp
jae
mov
mov
add
mov
jmp
call
cmp
jne
mov
sub
mov
mov
add
cmp
jae
mov
mov
add
mov
sub
add
mov
sub
pop
jmp
xor
pop
pop
pop
ret
mov
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
call
or
mov
mov
mov
mov
mov
call
call
ret
push
mov
push
push
push
push
call
mov
add
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
call
add
lea
push
mov
call
mov
xor
cmp
sete
xor
call
leave
ret
push
xor
cmp
je
xor
cmp
pop
setne
ret
push
push
call
push
mov
call
mov
cmp
je
mov
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
cmp
je
push
jmp
push
push
call
cmp
mov
je
xor
inc
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
mov
mov
xor
jmp
call
test
je
jmp
test
push
push
jne
mov
xor
cmp
jle
cmp
jle
mov
push
call
cmp
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
push
push
call
jmp
test
je
mov
jmp
push
call
test
je
lea
push
push
call
jmp
lea
push
push
call
test
je
push
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
mov
push
push
call
mov
xor
cmp
je
cmp
jne
cmp
jb
push
lea
push
push
push
push
push
call
mov
jmp
cmp
push
jne
mov
xor
cmp
je
cmp
jb
push
lea
push
push
push
call
test
je
mov
mov
push
mov
call
push
mov
call
lea
lea
movs
movs
movs
movs
xor
inc
cmp
mov
mov
jb
push
add
push
push
push
push
push
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
cmp
push
push
mov
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
jbe
mov
jmp
cmp
mov
jbe
mov
mov
mov
mov
cmp
jae
mov
add
add
inc
mov
mov
add
cmp
jb
cmp
jae
mov
mov
sub
shl
add
sub
lea
mov
add
sub
dec
jne
cmp
mov
jne
lea
mov
cmp
jne
lea
mov
lea
push
call
mov
add
cmp
ja
mov
push
pop
jmp
cmp
jne
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
cmp
mov
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
push
push
push
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
movzx
test
je
test
je
test
je
push
call
mov
mov
mov
add
jmp
mov
jmp
mov
and
mov
mov
sub
mov
push
movs
push
movs
push
movs
push
push
movs
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
push
mov
push
call
jmp
push
mov
push
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
movzx
test
je
test
jne
mov
mov
and
jmp
cmp
jne
push
call
mov
mov
mov
add
jmp
cmp
jne
mov
jmp
push
call
lea
mov
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
mov
test
jl
mov
mov
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jge
mov
mov
jmp
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
mov
jmp
cmp
je
mov
jmp
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
lea
push
call
mov
pop
pop
pop
leave
ret
lea
in
das
inc
add
xor
(bad)
xor
xor
inc
add
inc
add
xor
mov
xor
push
xor
mov
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
in
push
push
xor
cmp
push
push
jbe
mov
mov
lea
xor
push
push
call
test
jne
mov
mov
mov
mov
add
cmp
jb
cmp
je
inc
cmp
jb
xor
pop
pop
pop
leave
ret
mov
jmp
push
mov
call
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
call
mov
not
and
or
cmp
jne
xor
jmp
push
push
push
call
mov
xor
cmp
je
or
push
push
push
push
push
push
push
call
xor
inc
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
push
call
ret
ret
cmp
mov
je
jmp
jmp
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
push
push
push
push
call
jmp
push
push
push
push
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
push
call
xor
pop
ret
push
mov
push
push
push
mov
push
push
call
mov
test
je
push
push
call
mov
test
movzx
mov
je
cmp
jb
mov
or
or
push
push
push
push
mov
mov
call
test
jne
or
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
push
mov
mov
mov
mov
cmp
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
and
push
mov
mov
lea
push
push
mov
push
push
call
test
jne
push
mov
push
mov
push
call
mov
mov
pop
leave
ret
push
mov
call
mov
mov
mov
pop
ret
mov
mov
mov
ret
ret
push
mov
call
cmp
jne
and
push
push
mov
call
push
push
call
pop
ret
mov
ret
push
mov
push
push
push
push
push
call
pop
ret
mov
test
jne
mov
jmp
mov
xor
ret
mov
test
jne
mov
jmp
and
mov
ret
lea
cmp
jne
push
push
push
push
call
test
jl
xor
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
push
push
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
push
mov
push
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
push
mov
push
push
call
ret
mov
mov
push
push
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
xor
ret
xor
inc
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
mov
and
ret
xor
ret
mov
test
je
cmp
je
cmp
je
xor
inc
ret
xor
ret
mov
test
jne
call
and
xor
inc
ret
mov
test
jne
call
and
xor
inc
ret
mov
ret
mov
ret
mov
mov
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
movzx
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
push
call
ret
push
push
call
ret
push
push
call
ret
push
push
push
push
push
push
call
dec
dec
ret
push
mov
mov
cmp
je
mov
cmp
je
cmp
je
call
mov
mov
cmp
je
push
call
pop
ret
push
mov
mov
cmp
je
push
call
mov
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
push
mov
push
call
mov
call
mov
mov
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
push
mov
mov
mov
sub
push
sub
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
mov
push
mov
mov
sub
push
sub
push
mov
push
push
or
push
push
push
push
call
pop
pop
pop
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
cmp
mov
je
test
je
push
call
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
mov
test
push
jne
call
push
call
xor
test
mov
jle
mov
push
mov
call
test
je
cmp
je
push
push
call
test
jne
jmp
push
push
call
cmp
je
inc
cmp
jl
xor
pop
pop
pop
pop
ret
push
call
jmp
mov
mov
test
je
push
call
ret
push
mov
call
test
je
push
call
mov
pop
ret
push
mov
call
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
cmp
jne
xor
inc
jmp
cmp
jne
xor
mov
push
push
mov
call
jmp
push
mov
push
mov
call
pop
ret
cmp
jne
call
mov
test
je
test
jne
push
call
xor
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
lea
call
push
and
push
push
push
push
push
push
push
push
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
push
movs
push
movs
push
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
push
push
push
mov
test
jne
mov
jmp
push
mov
push
lea
call
cmp
mov
mov
pop
je
push
push
call
xor
pop
leave
ret
push
mov
call
mov
mov
xor
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
call
ret
mov
ret
jmp
mov
mov
push
push
mov
call
mov
call
mov
ret
push
mov
sub
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
test
je
push
call
jmp
push
push
call
mov
test
je
push
push
push
push
call
test
je
mov
push
mov
lea
push
push
call
test
jne
test
je
push
push
call
test
je
test
je
xor
test
mov
jne
call
test
je
mov
lea
push
push
push
call
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
call
jmp
push
call
mov
mov
lea
push
push
call
lea
push
push
call
push
lea
push
push
push
call
mov
mov
mov
mov
add
cdq
sub
mov
sub
mov
cdq
sub
mov
sar
sar
sub
mov
sub
mov
mov
add
cdq
sub
mov
mov
cdq
sub
sar
sar
sub
cmp
jge
mov
jmp
add
cmp
jle
sub
add
mov
cmp
pop
jge
mov
jmp
mov
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
leave
ret
sub
push
push
push
xor
push
inc
xor
test
mov
mov
mov
je
call
test
je
xor
push
call
or
mov
call
mov
mov
jmp
push
push
push
push
push
call
test
jne
cmp
je
push
mov
call
push
call
xor
test
jne
cmp
je
cmp
jne
push
push
push
push
call
test
jne
push
push
push
push
call
inc
test
jne
mov
cmp
jne
call
test
je
cmp
je
mov
mov
cmp
je
cmp
jne
push
mov
call
push
call
xor
mov
mov
call
test
je
push
call
test
pop
je
mov
mov
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
and
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
push
call
ret
push
mov
call
push
call
pop
mov
mov
xor
cmp
mov
je
call
call
ret
push
mov
call
mov
mov
and
test
je
call
call
ret
push
mov
cmp
jne
push
call
test
mov
jne
push
call
test
mov
setne
mov
mov
pop
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
and
lea
push
call
push
call
mov
test
je
and
lea
push
mov
call
mov
xor
test
setne
test
jne
jmp
call
mov
call
call
ret
cmp
je
push
push
call
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
lea
push
mov
call
mov
xor
cmp
setne
cmp
jne
call
push
call
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
call
mov
mov
call
ret
jmp
push
push
mov
call
mov
test
jne
jmp
call
mov
call
movsx
shr
movsx
mov
mov
lea
pop
ret
push
mov
push
mov
call
test
jne
jmp
push
mov
push
mov
push
call
pop
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
call
jmp
xor
or
push
mov
call
mov
call
ret
push
push
push
call
push
mov
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
add
jmp
ret
push
mov
test
push
mov
jne
xor
jmp
push
push
call
mov
push
lea
mov
call
push
mov
mov
call
xor
inc
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
push
lea
call
and
and
mov
pop
pop
ret
push
push
mov
call
mov
test
jne
jmp
call
cmp
je
mov
test
je
push
call
and
cmp
je
and
xor
pop
ret
xor
inc
pop
ret
push
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
push
push
call
mov
test
je
mov
push
call
mov
pop
jmp
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
xor
inc
test
je
mov
push
call
and
test
je
call
mov
test
je
cmp
je
push
lea
push
push
call
mov
add
mov
mov
lea
push
push
push
push
mov
mov
call
mov
mov
push
push
call
mov
mov
call
mov
push
push
call
cmp
jne
mov
mov
call
mov
test
je
push
push
push
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
push
mov
mov
push
xor
cmp
jne
cmp
jne
xor
jmp
cmp
je
push
call
cmp
jne
jmp
push
lea
call
mov
cmp
jne
cmp
je
cmp
jne
push
call
jmp
mov
mov
call
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
test
jne
call
mov
lea
push
sub
push
mov
mov
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
call
mov
mov
test
je
push
call
test
je
push
push
push
call
test
jne
cmp
push
jne
call
jmp
call
test
jne
push
call
jmp
push
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
pop
ret
push
push
mov
mov
jmp
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
test
jne
xor
pop
pop
ret
xor
inc
jmp
push
mov
push
mov
call
test
jne
call
push
mov
push
mov
push
push
call
pop
ret
push
mov
cmp
je
mov
mov
call
test
jne
mov
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
push
call
xor
inc
jmp
mov
call
neg
sbb
neg
pop
pop
pop
ret
push
mov
push
push
mov
cmp
jne
call
jmp
mov
and
lea
push
push
mov
push
call
test
jge
mov
jmp
mov
pop
leave
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
jmp
lea
push
call
push
push
push
push
lea
push
call
test
jne
mov
call
pop
pop
pop
leave
ret
push
mov
push
lea
mov
mov
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
lea
push
xor
call
mov
mov
call
cmp
je
push
call
test
je
mov
jmp
mov
and
cmp
jne
call
mov
mov
call
mov
mov
pop
leave
ret
push
mov
mov
push
call
mov
push
push
push
call
and
pop
mov
pop
jmp
push
call
test
je
mov
ret
xor
ret
push
mov
sub
test
jne
push
mov
mov
call
test
jne
lea
push
push
call
mov
mov
cmp
jne
mov
cmp
jne
push
push
call
push
call
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
call
push
mov
call
mov
xor
xor
cmp
setne
mov
cmp
jne
call
lea
push
mov
pop
lea
rep
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
cmp
je
mov
mov
push
call
and
cmp
jne
lea
push
lea
push
push
call
push
mov
push
mov
push
call
cmp
mov
jne
push
lea
push
push
call
jmp
mov
add
push
push
call
mov
mov
call
mov
ret
mov
mov
push
lea
pop
lea
rep
call
ret
push
mov
cmp
jne
xor
inc
jmp
push
mov
push
call
test
je
cmp
jne
push
push
push
push
push
call
jmp
push
push
push
push
call
pop
pop
ret
push
mov
call
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
and
or
mov
call
call
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
cmp
push
mov
jne
push
mov
call
test
jne
call
mov
cmp
jne
push
jmp
push
call
push
call
test
je
push
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
push
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
test
je
mov
test
jne
xor
ret
push
push
mov
push
jmp
mov
mov
call
test
jne
push
call
push
call
mov
test
jne
pop
pop
ret
mov
jmp
push
mov
test
je
cmp
jne
xor
pop
ret
mov
call
test
jne
mov
call
mov
test
je
mov
jmp
mov
mov
call
test
jne
mov
pop
ret
push
mov
push
push
push
mov
call
jmp
cmp
je
push
call
test
je
push
push
push
push
push
call
jmp
push
push
push
push
call
cmp
je
push
call
test
je
push
push
push
push
push
push
call
push
push
call
mov
test
jne
pop
pop
pop
ret
push
mov
call
push
call
test
jne
xor
jmp
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
push
and
lea
mov
call
and
xor
test
setne
or
mov
lea
call
mov
jmp
push
mov
call
call
ret
cmp
push
mov
je
cmp
jne
push
push
call
test
jne
mov
call
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
mov
mov
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
neg
sbb
and
add
ret
mov
mov
mov
mov
mov
xor
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
push
push
push
call
pop
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
call
pop
ret
mov
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
ret
mov
test
jne
push
call
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
cmp
push
mov
jne
push
call
test
je
mov
push
mov
call
jmp
push
push
call
test
jne
mov
call
pop
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
push
mov
call
test
jne
mov
call
pop
ret
push
push
call
push
mov
call
mov
test
jne
call
cmp
jne
push
call
test
pop
mov
jne
xor
jmp
push
push
call
test
mov
jne
push
call
and
jmp
push
call
push
push
push
push
call
pop
ret
push
mov
sub
mov
push
push
push
movzx
shr
xor
cmp
mov
mov
jne
cmp
jne
xor
jmp
lea
call
mov
push
lea
push
push
push
mov
mov
call
cmp
jne
xor
inc
jmp
mov
jmp
push
mov
call
cmp
jne
call
mov
cmp
je
push
push
call
test
jne
cmp
je
mov
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
push
push
mov
call
movzx
mov
mov
push
mov
mov
call
test
jne
call
mov
cmp
jne
xor
inc
jmp
push
push
call
test
jne
mov
push
lea
push
movzx
or
push
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
call
test
je
push
call
jmp
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
jmp
mov
push
call
test
jne
push
call
pop
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
push
push
push
push
push
push
call
mov
pop
jmp
push
mov
call
mov
test
je
cmp
jne
push
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
mov
call
pop
ret
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
inc
ret
xor
ret
cmp
jne
xor
ret
mov
mov
push
push
call
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
inc
jmp
xor
ret
push
mov
cmp
push
push
push
je
mov
test
je
mov
test
jne
mov
jmp
push
and
call
test
je
mov
add
mov
push
call
mov
xor
jmp
mov
xor
test
sete
test
mov
jne
push
push
call
test
pop
pop
je
cmp
je
push
push
push
push
call
test
je
cmp
jne
test
jl
add
mov
test
jne
mov
jmp
mov
pop
pop
pop
pop
ret
mov
mov
mov
mov
call
jmp
mov
inc
mov
ret
mov
dec
push
mov
jne
test
je
mov
push
call
mov
pop
ret
push
push
push
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
push
mov
mov
call
test
jne
push
mov
call
mov
test
je
push
mov
test
je
push
call
test
je
mov
call
cmp
je
test
mov
mov
jne
and
jmp
mov
mov
lea
push
push
push
push
call
pop
pop
pop
leave
ret
push
mov
cmp
push
jne
cmp
je
cmp
je
cmp
jne
mov
call
test
je
push
call
push
call
mov
test
je
call
push
call
cmp
je
mov
call
test
je
push
call
xor
inc
jmp
xor
pop
pop
ret
push
mov
call
mov
mov
push
push
call
and
and
mov
mov
xor
inc
sub
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
push
push
push
push
push
call
push
mov
lea
push
push
call
mov
call
ret
push
push
push
call
push
push
call
push
call
push
call
jmp
push
call
mov
shr
push
movsx
push
push
call
xor
test
sete
jmp
push
call
push
mov
call
push
push
push
call
test
je
push
push
push
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
push
mov
mov
call
mov
xor
test
setne
test
jne
call
cmp
je
push
push
push
push
call
jmp
mov
mov
mov
call
test
movzx
mov
jne
mov
test
jne
test
jne
cmp
jne
push
pop
push
push
lea
push
call
lea
mov
push
mov
push
push
call
add
test
mov
je
push
push
call
movzx
cmp
jne
jmp
push
lea
call
and
push
mov
call
mov
mov
call
mov
mov
call
mov
push
push
push
mov
call
cmp
je
mov
mov
and
or
cmp
je
push
push
call
jmp
push
lea
push
push
call
test
je
and
lea
push
push
call
test
pop
pop
je
push
push
call
test
mov
je
mov
push
push
call
test
jne
push
push
push
call
push
push
call
cmp
jne
push
call
push
push
push
call
push
push
push
push
call
cmp
mov
je
push
call
and
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
push
mov
call
mov
test
jne
call
push
mov
cmp
je
cmp
jne
call
push
push
push
push
call
test
mov
jne
call
mov
pop
pop
ret
push
mov
sub
push
push
mov
test
mov
je
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
push
mov
mov
push
call
test
je
mov
mov
call
mov
xor
push
push
push
push
call
push
push
push
push
push
push
call
mov
call
mov
cmp
jne
jmp
push
push
push
push
call
push
push
push
push
push
push
call
call
cmp
je
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
mov
xor
mov
mov
mov
cmp
mov
jne
push
mov
push
call
test
je
mov
jmp
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
jne
jmp
cmp
mov
jne
push
call
push
push
push
call
cmp
jne
mov
shr
push
movsx
push
push
call
test
jne
mov
test
je
cmp
jle
cmp
jb
cmp
jbe
cmp
jb
cmp
jbe
lea
cmp
ja
mov
mov
lea
push
push
push
push
call
test
jne
mov
mov
call
mov
xor
push
lea
mov
and
call
imul
mov
add
cmp
mov
jne
mov
mov
cmp
jne
mov
lea
mov
call
test
je
cmp
jb
jmp
mov
mov
mov
mov
mov
jmp
cmp
push
push
jae
push
push
call
test
mov
je
mov
mov
lea
call
mov
mov
mov
lea
cmp
ja
jmp
mov
mov
push
push
jmp
mov
mov
cmp
je
push
push
push
add
push
call
mov
test
jne
mov
call
mov
mov
cmp
jne
mov
and
lea
call
or
lea
call
xor
call
ret
movsx
shr
movsx
push
push
jmp
push
call
push
mov
call
jmp
push
jmp
mov
call
jmp
push
call
push
jmp
mov
shr
push
movzx
push
push
call
push
mov
call
jmp
push
push
call
jmp
push
jmp
lea
call
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
test
jne
mov
test
je
push
lea
call
test
je
mov
lea
push
push
lea
push
mov
call
and
and
lea
mov
mov
call
jmp
lea
call
mov
push
mov
lea
push
mov
mov
call
and
mov
lea
mov
call
jmp
mov
shr
push
push
call
push
movzx
jmp
mov
shr
push
movzx
jmp
push
call
push
mov
shr
jmp
mov
call
jmp
push
jmp
mov
shr
push
movzx
jmp
mov
shr
movsx
push
movsx
jmp
mov
shr
push
movzx
jmp
push
call
push
push
call
push
xor
cmp
sete
jmp
push
call
jmp
push
call
jmp
mov
shr
movsx
push
movsx
push
push
call
jmp
push
jmp
push
call
push
jmp
mov
shr
push
movzx
jmp
movsx
shr
movsx
push
push
push
call
jmp
push
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movsx
shr
cmp
movsx
mov
mov
jne
push
call
push
push
push
jmp
push
push
jmp
push
push
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzx
push
jmp
movsx
shr
movsx
push
push
push
mov
call
jmp
push
push
mov
call
jmp
movsx
shr
movsx
push
push
mov
shr
push
movzx
push
mov
call
mov
jmp
mov
call
test
mov
je
jmp
mov
lea
mov
call
mov
push
push
mov
call
mov
mov
test
je
mov
mov
or
lea
call
xor
inc
jmp
nop
jo
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
jo
add
outs
inc
add
outs
inc
add
jb
add
jno
add
jno
add
jo
add
jo
add
jo
add
jo
add
jo
add
outs
inc
add
outs
inc
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
inc
add
jno
add
add
add
jno
add
jno
add
jb
add
inc
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
outs
inc
add
in
mov
sub
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
push
lea
push
movzx
or
push
push
call
jmp
mov
xor
push
shr
push
or
push
push
call
test
je
mov
xor
inc
cmp
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
push
add
push
push
push
call
jmp
lea
cmp
ja
mov
push
mov
add
push
mov
lea
push
xor
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
and
push
mov
cmp
je
mov
mov
push
call
push
push
mov
call
pop
ret
push
mov
call
mov
xor
cmp
jne
mov
jmp
push
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
push
call
jmp
xor
jmp
mov
call
mov
ret
mov
xor
mov
cmp
je
mov
mov
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
and
call
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
push
lea
call
mov
mov
xor
push
push
lea
push
mov
mov
call
test
je
lea
push
push
push
push
lea
push
push
call
add
jmp
push
push
push
lea
push
push
call
add
push
push
mov
push
call
lea
mov
call
mov
push
mov
call
mov
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
mov
ret
push
mov
cmp
je
push
push
mov
push
lea
push
push
call
add
cmp
pop
ja
test
jne
pop
ret
mov
test
je
mov
xor
inc
jmp
pop
jmp
push
mov
call
mov
cmp
mov
jne
mov
call
mov
test
jl
mov
test
jne
lea
push
call
mov
test
jl
and
mov
mov
and
lea
push
push
push
call
test
jl
mov
lea
push
lea
push
mov
mov
push
call
push
push
push
call
mov
mov
mov
or
xor
test
je
mov
push
call
jmp
push
push
push
call
mov
mov
xor
mov
call
ret
push
mov
call
mov
lea
push
push
push
call
add
test
jne
push
call
test
pop
jne
xor
jmp
call
cmp
je
push
call
and
call
mov
lea
push
mov
call
push
mov
call
or
push
call
xor
inc
call
ret
push
call
push
push
call
int3
push
mov
sub
push
mov
push
xor
cmp
mov
mov
je
push
movzx
cmp
je
inc
inc
movzx
movzx
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
push
pop
xor
lea
rep
or
push
lea
mov
call
mov
mov
lea
push
push
movzx
push
push
mov
push
call
cmp
jne
and
mov
add
call
xor
jmp
cmp
je
cmp
jne
push
movzx
push
push
movzx
push
mov
push
call
cmp
jne
mov
add
cmp
jne
cmp
pop
je
mov
push
push
push
push
push
push
call
mov
pop
pop
leave
ret
mov
push
mov
push
mov
call
movzx
mov
mov
push
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
xor
inc
jmp
push
push
push
push
xor
lea
push
push
xor
call
mov
add
mov
call
test
mov
push
mov
mov
pop
mov
mov
je
lea
push
mov
mov
call
test
je
inc
test
je
or
lea
push
mov
call
test
je
or
test
je
lea
push
mov
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
lea
push
mov
call
or
and
test
je
push
lea
push
mov
call
or
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
or
mov
mov
mov
and
cmp
jne
or
mov
or
mov
and
pop
sub
pop
neg
sbb
inc
pop
leave
ret
push
mov
cmp
jne
push
call
mov
xor
inc
pop
ret
push
push
push
push
xor
xor
cmp
mov
je
call
mov
push
push
push
call
test
je
push
push
call
mov
test
je
push
call
mov
push
mov
call
test
mov
je
test
je
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
push
xor
inc
test
je
mov
mov
mov
mov
jmp
mov
add
cmp
push
ja
jmp
call
jmp
call
jmp
push
call
jmp
push
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
call
xor
cmp
sete
and
jmp
mov
test
je
push
push
call
jmp
push
jmp
push
call
mov
mov
jmp
xor
pop
pop
pop
ret
lea
dec
jge
add
inc
add
inc
add
inc
add
inc
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
mov
cmp
push
mov
jne
call
cmp
jne
call
call
push
mov
push
mov
push
mov
push
call
jmp
cmp
push
push
jne
mov
and
test
je
mov
mov
mov
call
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
mov
test
je
push
push
call
test
pop
pop
je
mov
mov
mov
add
mov
test
jne
mov
test
jne
mov
jmp
cmp
je
mov
shr
movzx
mov
jne
mov
mov
call
jmp
push
push
push
push
call
test
jne
call
mov
cmp
jne
xor
pop
pop
pop
pop
ret
push
push
push
push
push
push
push
call
jmp
mov
ret
mov
ret
mov
ret
mov
ret
push
push
mov
call
mov
mov
call
test
je
mov
call
push
call
mov
push
mov
call
pop
ret
mov
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ret
push
push
push
push
push
call
ret
push
mov
call
mov
xor
inc
xor
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
lea
mov
test
je
call
and
pop
ret
call
mov
mov
push
mov
call
ret
call
mov
mov
push
mov
call
ret
mov
ret
push
push
mov
mov
xor
cmp
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
add
or
push
push
push
call
jmp
cmp
je
cmp
jne
push
mov
call
cmp
jne
push
call
push
call
push
push
push
push
call
pop
push
mov
call
mov
pop
pop
ret
push
mov
mov
test
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
or
push
push
push
call
jmp
mov
test
je
push
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
pop
pop
ret
push
mov
test
push
push
mov
jne
call
mov
test
je
cmp
jne
mov
mov
push
push
push
call
mov
and
cmp
jae
push
push
or
push
push
mov
call
jmp
mov
test
je
push
push
call
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
push
call
movsx
shr
cmp
movsx
mov
jle
cmp
jg
jmp
cmp
jle
push
pop
lea
cdq
sub
lea
sar
mov
sar
mov
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
sar
add
imul
lea
lea
mov
mov
mov
movzx
mov
shl
inc
not
movzx
mov
mov
add
dec
jne
lea
push
push
push
push
push
call
test
pop
pop
mov
pop
jne
push
push
call
mov
mov
xor
call
add
leave
ret
push
mov
mov
push
xor
xor
cmp
setne
push
mov
call
cmp
je
cmp
jne
mov
cmp
jb
call
cmp
jne
call
cmp
je
push
mov
push
push
push
push
call
pop
pop
ret
push
push
mov
test
mov
je
cmp
je
cmp
je
call
cmp
je
push
call
add
cmp
jle
push
call
test
jle
cmp
jne
mov
jmp
push
and
call
push
call
pop
pop
ret
cmp
je
mov
mov
jmp
xor
inc
ret
cmp
jne
call
lea
cmp
je
mov
mov
mov
jmp
ret
cmp
jne
call
mov
mov
jmp
mov
mov
test
jne
call
add
cmp
jne
mov
push
call
jmp
mov
mov
push
mov
call
ret
cmp
je
mov
mov
jmp
xor
ret
mov
test
jl
cmp
jl
call
mov
lea
ret
mov
push
push
push
push
call
ret
push
mov
mov
test
jne
call
mov
mov
cmp
jb
push
mov
add
cmp
jb
call
lea
push
call
mov
mov
push
mov
call
test
jne
mov
mov
push
call
xor
pop
inc
pop
ret
push
mov
sub
push
push
push
lea
push
xor
mov
push
push
push
mov
push
mov
mov
mov
mov
call
test
jne
lea
push
lea
push
push
push
push
push
push
push
mov
push
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
je
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
push
push
call
push
call
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
cmp
push
mov
je
push
call
mov
test
je
push
lea
push
push
push
push
push
call
push
mov
call
xor
test
sete
jmp
push
lea
push
push
push
call
add
push
lea
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
mov
test
push
mov
push
jne
call
test
je
push
call
and
push
mov
lea
push
push
call
mov
add
cmp
ja
push
lea
push
push
call
cmp
jne
push
lea
push
call
test
je
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
test
jne
call
mov
test
je
push
call
and
pop
ret
push
mov
test
je
push
push
call
mov
and
je
push
dec
call
test
jne
push
call
pop
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
push
call
and
jmp
sub
sub
push
push
call
pop
pop
xor
inc
pop
ret
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
lea
push
push
call
lea
push
push
call
pop
neg
pop
mov
sbb
xor
inc
pop
call
leave
ret
push
mov
sub
push
push
lea
push
push
call
mov
push
push
jmp
push
call
test
je
push
push
call
test
je
lea
push
push
call
push
lea
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
leave
ret
mov
jmp
cmp
jne
xor
ret
mov
mov
jmp
cmp
jne
call
mov
mov
jmp
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
test
jne
push
lea
push
push
push
call
mov
test
jne
and
lea
push
lea
call
lea
push
push
mov
call
mov
mov
test
setne
add
mov
call
test
jne
or
jmp
mov
mov
call
mov
ret
mov
mov
cmp
je
cmp
jne
push
push
call
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
xor
mov
mov
mov
call
cmp
mov
je
lea
push
mov
call
cmp
je
mov
push
push
push
push
mov
call
cmp
jne
cmp
je
xor
cmp
setne
cmp
jne
jmp
push
lea
call
push
lea
mov
call
push
lea
push
lea
push
call
push
mov
push
lea
push
call
add
mov
add
mov
call
lea
push
mov
push
call
lea
push
push
push
call
test
jne
push
lea
push
push
push
call
cmp
jne
lea
push
push
call
push
call
lea
push
lea
push
push
push
call
mov
add
call
mov
add
call
xor
inc
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
xor
cmp
sete
mov
ret
call
add
push
call
ret
call
mov
mov
ret
call
mov
ret
call
cmp
jne
push
push
call
call
mov
test
je
mov
test
je
call
test
je
mov
mov
pop
jmp
call
cmp
jne
push
call
pop
ret
call
add
push
call
test
jne
jmp
ret
push
push
mov
test
mov
jne
push
pop
mov
test
je
push
call
and
pop
cmp
je
xor
push
pop
mov
mul
seto
neg
or
push
call
mov
shl
push
push
push
mov
call
add
mov
pop
pop
ret
push
mov
mov
test
je
push
call
and
pop
mov
and
and
call
and
pop
ret
mov
mov
mov
dec
mov
jne
call
ret
mov
push
mov
mov
shr
mov
xor
div
mov
mov
mov
test
je
mov
jmp
cmp
je
mov
test
jne
xor
pop
ret
test
jne
call
push
mov
test
jne
xor
jmp
push
mov
mov
xor
shr
div
mov
jmp
cmp
je
mov
test
jne
xor
pop
pop
ret
mov
jmp
push
mov
test
jne
xor
jmp
push
mov
mov
shr
xor
div
lea
mov
jmp
cmp
je
mov
mov
test
jne
pop
pop
ret
mov
push
mov
call
xor
inc
jmp
mov
push
mov
test
je
cmp
push
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
call
mov
test
jne
mov
shr
xor
push
mov
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
ret
mov
mov
xor
cmp
mov
jg
push
pop
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
inc
mov
and
and
pop
ret
push
mov
push
push
push
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
push
push
mov
call
mov
call
mov
mov
mov
shl
mov
mov
mov
mov
pop
add
pop
leave
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
call
inc
ret
push
mov
call
mov
mov
mov
push
mov
push
lea
call
and
push
lea
call
lea
push
mov
mov
call
xor
cmp
mov
jne
call
cmp
je
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
push
mov
call
mov
mov
test
jne
xor
call
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
add
mov
cmp
jne
mov
jmp
push
call
and
lea
mov
call
mov
test
jne
call
push
call
push
lea
call
push
or
mov
call
mov
add
mov
cmp
jne
mov
mov
jmp
push
call
push
push
call
int3
push
mov
sub
push
mov
test
je
mov
neg
sbb
mov
je
push
lea
lea
push
lea
push
lea
push
mov
call
mov
add
and
cmp
jne
and
push
call
cmp
jne
pop
lea
call
lea
call
pop
leave
ret
push
mov
call
mov
mov
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
call
mov
mov
xor
cmp
je
dec
cmp
mov
jne
cmp
je
cmp
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
push
call
mov
mov
call
mov
test
je
test
je
mov
test
je
push
call
cmp
pop
jae
cmp
je
mov
and
test
je
push
call
push
mov
call
pop
pop
push
call
test
pop
mov
jne
cmp
je
push
call
pop
mov
pop
xor
cmp
pop
setne
pop
pop
ret
push
mov
mov
push
xor
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
test
jne
call
mov
mov
dec
mov
jne
call
ret
test
jne
jmp
mov
test
je
mov
test
push
mov
mov
je
and
jmp
and
push
call
mov
pop
ret
mov
test
jne
call
cmp
push
jne
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
mov
mov
mov
mov
mov
inc
and
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
test
push
mov
jne
push
call
jmp
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
pop
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
call
pop
mov
mov
jmp
mov
cmp
jne
cmp
ja
push
call
push
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
sub
push
add
push
push
call
add
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
cmp
jl
push
call
push
mov
push
push
push
call
mov
mov
sub
push
add
push
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
mov
push
not
test
mov
push
mov
je
push
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
jmp
call
push
push
mov
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
pop
pop
pop
pop
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
xor
inc
ret
xor
ret
push
mov
call
push
mov
push
mov
and
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
mov
call
mov
mov
mov
and
push
push
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
test
jne
mov
jmp
mov
mov
xor
ret
push
mov
call
mov
mov
mov
test
jne
mov
jmp
call
push
mov
push
and
push
mov
call
mov
test
je
mov
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
mov
mov
mov
mov
ret
cmp
jb
call
movzx
mov
push
mov
push
add
jmp
cmp
je
test
mov
jne
mov
mov
and
cmp
jae
and
add
inc
mov
test
jne
pop
pop
ret
call
int3
mov
ret
mov
test
jl
cmp
jge
imul
add
ret
call
int3
mov
mov
mov
test
push
mov
mov
mov
mov
pop
je
test
jne
call
ret
cmp
je
push
call
pop
ret
mov
mov
or
sub
cmp
jae
mov
ret
add
mov
mov
xor
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
mov
pop
ret
mov
test
je
and
push
push
push
push
call
xor
add
inc
ret
push
push
call
mov
xor
mov
mov
push
push
lea
push
call
add
cmp
jge
mov
jmp
mov
call
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
call
mov
mov
lea
call
ret
push
mov
push
mov
push
push
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
push
call
pop
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
mov
jg
mov
mov
imul
push
call
push
xor
push
push
mov
call
add
cmp
jle
xor
mov
mov
add
je
mov
mov
add
dec
jne
jmp
cmp
jg
mov
cmp
jge
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
mov
mov
mov
sub
inc
cmp
jl
jmp
jle
sub
test
mov
jle
mov
imul
mov
push
add
call
mov
inc
sub
add
cmp
jl
jmp
mov
cmp
jne
mov
cdq
and
add
sar
cmp
jge
push
pop
jmp
mov
cmp
jle
mov
mov
add
cmp
mov
jl
mov
mov
cmp
jl
imul
push
call
mov
imul
push
push
mov
push
push
call
mov
mov
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
and
and
mov
sub
inc
cmp
jl
push
call
pop
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
mov
test
mov
je
test
jne
call
mov
mov
push
push
not
test
push
mov
mov
je
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
jmp
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
pop
pop
pop
pop
ret
mov
mov
cmp
je
cmp
mov
je
and
mov
mov
mov
mov
mov
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
mov
neg
sbb
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
cmp
mov
je
push
xor
cmp
jle
push
xor
mov
push
add
call
inc
add
cmp
jl
pop
push
call
pop
pop
pop
ret
push
push
mov
mov
not
test
mov
mov
je
push
call
jmp
call
push
push
mov
call
push
push
push
call
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
jmp
push
push
mov
test
mov
jge
call
cmp
jl
push
lea
push
call
push
mov
imul
add
call
pop
pop
ret
push
mov
mov
sub
mov
call
mov
sub
call
mov
sub
pop
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
add
cmp
je
cmp
jne
mov
mov
add
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
mov
movzx
mov
movzx
dec
mov
cmp
mov
je
test
je
and
or
cmp
jl
cmp
je
mov
mov
shl
cmp
lea
je
cmp
je
mov
push
push
add
push
push
mov
call
test
jl
mov
mov
jmp
cmp
jne
mov
and
mov
mov
jmp
cmp
jne
cmp
jne
mov
mov
mov
test
push
pop
je
cmp
jne
mov
test
je
mov
xor
cmp
push
setne
mov
call
test
pop
je
mov
mov
mov
jmp
and
push
push
lea
push
call
mov
and
push
push
mov
call
or
cmp
je
push
call
pop
mov
mov
push
pop
jmp
mov
mov
jmp
movzx
add
cmp
ja
jmp
movsx
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
push
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
call
test
je
mov
xor
mov
rep
mov
mov
rep
pop
pop
ret
call
mov
mov
mov
push
mov
push
push
push
call
add
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
movzx
jmp
movsx
jmp
movzx
jmp
mov
mov
mov
mov
add
jmp
fld
fstp
jmp
fld
fstp
jmp
xor
cmp
setne
jmp
mov
mov
add
inc
mov
cmp
jne
cmp
jle
mov
mov
mov
mov
jmp
mov
cmp
je
mov
mov
mov
mov
jmp
xor
call
ret
nop
aam
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
mov
call
mov
push
lea
call
mov
mov
xor
cmp
mov
mov
mov
jne
lea
mov
push
call
test
mov
mov
mov
movzx
mov
je
lea
push
call
test
pop
jne
or
cmp
je
push
push
call
mov
jmp
mov
call
mov
mov
push
push
lea
push
push
call
movzx
and
mov
add
inc
mov
mov
mov
mov
mov
xor
mov
mov
shl
push
call
test
pop
jne
or
cmp
je
push
push
jmp
mov
cmp
ja
shl
mov
call
mov
mov
push
push
push
call
add
push
push
call
mov
lea
push
call
test
pop
je
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
mov
push
push
push
push
push
call
test
mov
jne
movzx
cmp
push
push
push
mov
je
cmp
je
cmp
je
add
cmp
ja
call
mov
mov
jmp
call
mov
jmp
call
fstp
jmp
call
fstp
fld
fstp
mov
mov
xor
cmp
jbe
mov
mov
push
call
add
inc
cmp
jb
cmp
lea
je
mov
call
or
cmp
je
push
push
call
mov
jmp
mov
xor
cmp
jbe
mov
push
call
inc
add
cmp
jb
push
push
call
call
mov
test
je
mov
mov
movzx
add
cmp
ja
jmp
mov
jmp
mov
mov
mov
mov
jmp
fld
fstp
jmp
fld
fstp
jmp
neg
sbb
mov
jmp
lea
mov
movs
movs
movs
movs
jmp
mov
jmp
movzx
sub
je
dec
je
sub
je
dec
jne
test
je
mov
push
call
jmp
lea
push
call
jmp
push
call
lea
mov
call
or
cmp
je
push
push
call
xor
lea
call
ret
lea
xor
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
call
mov
mov
call
lea
mov
mov
call
and
lea
call
lea
call
mov
mov
mov
add
neg
sbb
and
cmp
mov
mov
mov
je
push
mov
call
neg
mov
sbb
and
add
mov
call
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
push
push
push
call
add
lea
push
mov
mov
call
test
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
cmp
je
push
lea
call
push
call
mov
add
mov
call
add
mov
cmp
je
push
lea
call
mov
push
call
lea
mov
call
jmp
push
mov
call
test
push
lea
push
je
push
call
mov
jmp
push
call
mov
push
lea
call
push
call
mov
add
mov
call
xor
cmp
jne
call
push
lea
call
push
call
mov
add
mov
call
cmp
jne
cmp
je
call
mov
push
lea
call
push
call
mov
add
mov
call
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
call
mov
mov
mov
mov
and
test
je
call
cmp
je
push
call
pop
or
mov
call
call
ret
mov
mov
cmp
jb
xor
ret
inc
cmp
mov
sbb
neg
ret
and
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
add
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
mov
cmp
jb
xor
jmp
mov
mov
imul
add
push
push
push
push
call
add
inc
xor
inc
pop
ret
push
mov
call
mov
push
add
lea
call
mov
and
test
je
and
mov
mov
mov
mov
mov
cmp
je
mov
push
mov
call
test
je
add
dec
jmp
mov
call
mov
ret
jmp
mov
test
je
sub
mov
xor
cmp
setne
mov
or
cmp
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
xor
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
dec
jmp
mov
call
mov
ret
xor
xor
cmp
setne
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
mov
call
or
cmp
je
push
push
call
xor
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
and
mov
mov
mov
mov
call
mov
mov
test
je
mov
jmp
mov
mov
add
push
call
add
and
mov
or
cmp
je
push
push
call
mov
call
ret
mov
call
mov
ret
push
mov
call
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
push
push
push
call
mov
mov
call
ret
mov
and
mov
ret
push
mov
mov
test
je
cmp
je
mov
push
call
and
pop
ret
push
mov
mov
test
je
push
call
and
pop
pop
ret
push
mov
call
mov
mov
mov
mov
pop
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
xor
cmp
setne
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
call
mov
xor
cmp
je
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
cmp
je
push
call
mov
test
mov
je
lea
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
xor
push
pop
mul
seto
neg
or
push
call
mov
mov
shl
push
push
push
mov
call
mov
shl
add
cmp
lea
mov
mov
je
mov
add
lea
add
push
mov
mov
pop
mov
movzx
test
mov
mov
je
and
or
mov
movzx
mov
cmp
jg
je
dec
dec
cmp
ja
jmp
add
add
mov
mov
jmp
add
add
mov
jmp
mov
add
mov
add
mov
mov
mov
mov
jmp
add
mov
fld
add
fstp
jmp
add
mov
fld
add
fstp
jmp
add
add
mov
jmp
add
add
mov
push
mov
call
cmp
mov
je
test
jne
call
add
add
mov
neg
sbb
mov
jmp
add
mov
add
mov
movs
movs
movs
movs
mov
push
pop
jmp
sub
cmp
ja
jmp
add
add
mov
mov
neg
sbb
push
and
mov
push
push
lea
mov
call
push
push
lea
mov
call
cmp
mov
je
push
call
pop
jmp
add
add
mov
mov
sub
sub
inc
mov
cmp
mov
jne
mov
xor
lea
push
xor
call
cmp
je
lea
push
lea
push
push
call
mov
mov
or
mov
add
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
lea
mov
call
mov
cmp
je
mov
shl
lea
jmp
cmp
jne
push
call
sub
inc
cmp
jne
push
call
cmp
pop
mov
jge
lea
push
call
cmp
je
push
call
cmp
je
lea
push
call
push
call
pop
mov
cmp
mov
je
push
mov
push
push
call
mov
push
mov
mov
call
test
je
push
lea
call
push
mov
call
push
call
test
je
push
lea
call
push
call
push
call
test
je
push
lea
call
push
call
mov
mov
mov
mov
push
lea
push
mov
call
mov
cmp
je
cmp
je
push
push
lea
push
push
call
mov
cmp
jge
lea
push
call
push
jmp
movzx
add
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
fld
mov
fstp
jmp
fld
mov
fstp
jmp
push
push
call
push
call
jmp
mov
xor
cmp
setne
mov
jmp
mov
lea
movs
movs
movs
movs
xor
jmp
mov
mov
mov
lea
mov
call
or
cmp
je
push
call
pop
call
ret
mov
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
test
inc
add
test
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
inc
hlt
mov
mov
xchg
jle
aas
dec
test
clc
imul
aas
or
adc
xchg
jno
jno
adc
outs
sbb
sbb
ss
cmp
stc
arpl
rcr
add
mov
push
jae
popa
test
inc
(bad)
movs
mov
leave
fcmovb
ret
fcomi
scas
fst
rcl
jmp
loope
bound
pusha
mov
xor
(bad)
and
sar
xchg
imul
adc
ds
jmp
data16
push
(bad)
sub
sbb
cmps
mov
mov
popa
retf
test
fisub
std
fs
enter
out
mov
sbb
xchg
movs
inc
ret
push
sub
sti
sbb
add
push
sbb
pop
jl
mov
aad
inc
fistp
mov
clc
jns
xor
adc
ins
sub
pop
std
mov
xor
scas
mov
pop
test
retf
leave
cli
test
sub
adc
push
lock
sub
xchg
retf
add
sahf
dec
mov
stos
imul
dec
add
clc
icebp
push
stos
jecxz
jmp
mov
cs
cld
fstp
sbb
cli
add
rcr
jp
fwait
cmp
mov
jno
jns
sub
add
jbe
cmp
mov
(bad)
imul
cmp
xchg
pop
(bad)
lds
cld
add
add
mov
and
xchg
mov
add
fadd
mov
xlat
aad
inc
ret
retf
jmp
pop
inc
push
popf
es
xlat
push
jmp
movs
icebp
xchg
loop
sbb
xor
es
xchg
cmp
adc
icebp
pop
mov
and
push
mov
(bad)
mov
and
nop
jbe
dec
test
sti
sub
inc
inc
cmp
add
push
mov
and
push
arpl
pop
and
adc
dec
rol
popf
je
dec
jecxz
dec
cdq
or
xchg
pop
shl
and
cmp
stc
imul
mov
jnp
sub
mov
loope
arpl
bound
jne
sub
xor
cmp
or
imul
jne
jnp
add
mov
or
xor
aad
ret
fnstcw
push
punpckhdq
mov
retf
push
int
mov
leave
fild
dec
lods
retf
ror
mov
fcmovbe
cmp
add
in
jecxz
les
ficomp
fld
rcl
inc
xlat
arpl
les
jmp
pop
mov
cmp
ss
or
jb
sahf
loope
inc
sub
in
add
adc
popa
loopne
fwait
les
xor
stc
outs
sub
aas
xlat
lock
pop
pop
pop
xchg
fisttp
dec
fs
mov
or
mov
stos
push
cdq
or
enter
shl
loope
ds
dec
(bad)
sub
(bad)
(bad)
cmp
mov
mov
inc
push
test
dec
and
pop
inc
sbb
shr
ret
dec
out
adc
pop
mov
pop
push
dec
test
arpl
and
xor
lods
imul
in
daa
dec
sbb
mov
pop
hlt
dec
call
fisubr
rcr
and
cmp
add
push
and
js
adc
mov
adc
les
test
sub
xchg
movs
inc
pop
dec
shr
cmp
push
test
jae
push
sbb
fidivr
arpl
loope
mov
icebp
xor
les
or
sub
push
adc
cmp
add
popf
and
lock
cmc
std
pop
lock
sbb
adc
stc
fldenv
std
sbb
push
jp
sbb
mov
sti
sbb
and
jno
sub
(bad)
jl
jecxz
xor
cmp
cwde
xor
loope
cmp
mov
fs
mov
js
dec
rcr
push
or
fstp
arpl
fistp
mov
xchg
add
xor
jle
ss
sbb
push
lds
jns
imul
mov
xchg
repz
mov
mov
push
cmp
test
stos
mov
pop
push
pushf
and
or
movs
dec
test
mov
dec
cmp
push
imul
ja
iret
push
mov
enter
and
xchg
jnp
xor
sti
and
jae
jbe
pop
cmp
inc
ss
gs
out
imul
pusha
jmp
pusha
sub
inc
pop
inc
sub
jbe
retf
iret
cmp
add
ror
retf
push
and
sbb
xor
xor
ror
pop
xchg
pop
push
jmp
push
ja
or
xchg
push
inc
mov
xchg
scas
push
mov
sub
mov
stos
test
cmps
jo
popf
pop
jo
pop
jmp
lock
mov
add
mov
scas
inc
mov
push
pop
sbb
mov
loope
cmp
sub
adc
mov
sbb
fdivr
xor
js
mov
ret
dec
(bad)
int3
out
jmp
and
pop
popf
mov
sub
push
and
or
loope
leave
mov
repz
jnp
retf
mov
mov
mov
scas
or
cli
(bad)
lds
mov
xor
xor
(bad)
xor
sub
cli
dec
(bad)
test
add
mov
sub
mov
sti
scas
jp
add
sbb
push
pop
test
pop
adc
mov
outs
loop
jmp
push
dec
outs
clc
lock
jge
cwde
leave
and
cwde
in
xchg
shl
xor
jns
xchg
ret
mov
dec
ror
adc
dec
out
and
sbb
or
js
lods
gs
dec
repz
xchg
xchg
mov
test
push
sub
pusha
dec
(bad)
jmp
aas
mul
cmp
mov
dec
stc
ret
repnz
pop
ja
cwde
test
mov
clc
xor
jge
retf
leave
jb
mov
add
popa
inc
inc
cmp
mov
lds
ins
shr
jge
jnp
add
nop
xor
inc
cmp
fdivr
xchg
sbb
stc
sub
enter
sbb
add
xlat
jmp
jnp
shl
or
sub
mov
sbb
dec
sbb
sar
add
ins
sub
adc
int3
or
loop
pop
and
mov
fbld
cmc
movs
dec
sub
inc
or
add
cmp
jnp
jecxz
xor
jo
cs
pop
sub
and
sub
enter
xchg
lahf
test
push
sub
or
gs
mov
pushf
sub
and
jge
or
mov
call
idiv
sub
mov
dec
xchg
fistp
mov
sbb
xor
ins
and
push
jmp
sbb
dec
adc
call
enter
fsincos
mov
ret
mov
(bad)
fimul
or
xchg
imul
fwait
inc
call
ret
mov
jbe
adc
mov
or
loope
xchg
hlt
outs
push
adc
nop
xchg
sbb
ins
std
mov
or
movs
xchg
gs
xor
xor
nop
push
xor
inc
or
movs
fstp
int
inc
push
stos
js
and
icebp
les
loope
pop
dec
jae
icebp
jle
mov
fwait
jnp
(bad)
pop
adc
or
push
(bad)
adc
push
dec
repnz
loope
das
(bad)
mov
loope
cmps
xchg
fs
repnz
lods
call
imul
(bad)
dec
push
add
shl
mov
(bad)
jmp
lock
sub
add
neg
jp
jmp
cmp
scas
mov
add
mov
sbb
xchg
jne
jno
popf
or
dec
pushf
inc
lods
adc
(bad)
mov
jp
popf
mov
dec
scas
rcl
int
xor
cmp
and
pop
push
dec
push
loopne
jo
outs
ds
dec
inc
or
inc
(bad)
fidivr
xor
loop
mov
mov
sub
inc
clc
sub
add
jno
mov
je
or
pop
mov
ret
pop
sti
movs
jnp
out
fwait
cmc
mov
out
scas
lock
pop
(bad)
jg
jae
adc
sub
pop
fwait
es
fs
cmp
jecxz
outs
jecxz
xor
mov
gs
push
sbb
stc
js
and
adc
call
ret
pop
push
fwait
cwde
ret
fwait
inc
adc
scas
cmp
mov
add
fnstenv
push
sub
and
and
inc
cmp
and
sbb
retf
mov
dec
movs
retf
sbb
xchg
(bad)
pop
test
nop
push
push
loop
add
fstp
push
dec
mov
retf
sub
pop
jle
das
jp
jbe
adc
dec
rcr
xlat
imul
fcmovnu
dec
retf
push
push
in
mov
int
inc
fs
push
or
xor
cwde
rcl
pop
cmp
sbb
adc
xor
pop
xor
icebp
fcom
xchg
xchg
push
inc
mov
dec
mov
jo
xchg
out
in
fisttp
fimul
(bad)
xor
out
xchg
push
lds
pop
jl
mov
movs
in
xchg
jnp
inc
cli
add
mov
or
mov
jo
shl
das
arpl
repnz
popa
cmovo
ror
xor
pop
inc
call
inc
cmp
pop
cs
jecxz
add
arpl
cld
pop
out
inc
jg
bts
dec
mov
xchg
or
mov
push
dec
xor
or
push
pop
push
call
pop
movs
icebp
jns
sub
dec
jno
cs
xchg
cli
pop
adc
loope
push
inc
sti
int3
movs
xchg
rol
jp
jnp
pop
cwde
add
cli
test
outs
popa
xor
mov
test
out
in
adc
push
jge
arpl
or
repz
(bad)
mov
cmps
cmp
prefetcht1
cli
jmp
xlat
push
xor
mov
push
mov
pop
pushw
pop
xor
pop
pop
push
imul
loop
cld
into
das
xor
mov
mov
jmp
cmp
outs
fnstcw
or
or
je
sbb
movs
retf
mov
ins
fwait
mov
jge
outs
jbe
arpl
mov
popa
loop
jl
addr16
fdivr
mov
or
loopne
jl
pop
mov
xor
sbb
in
cmp
ret
or
xor
leave
xor
dec
retf
and
xchg
rcr
xor
mov
xor
dec
ja
das
sar
mov
sti
movs
stos
push
mov
int
ror
and
loopne
out
add
retf
push
fimul
ins
mov
mov
aad
(bad)
and
jbe
dec
repz
cmps
jmp
dec
add
enter
pop
adc
cmp
ins
shl
lds
outs
jo
sbb
xor
mov
repz
stc
aaa
jae
mov
mov
imul
xchg
jnp
scas
jae
xchg
rol
dec
sti
cmp
jbe
push
jl
xchg
cmp
sbb
mov
shl
std
es
xlat
mov
push
pop
mov
mov
or
fild
jp
pop
xor
cmp
cmp
xor
popf
cli
div
mov
js
push
loopne
and
sub
jnp
jecxz
mov
mov
ret
ja
xor
les
xchg
movs
push
sub
ret
mov
push
xchg
pop
ror
cmp
fcomip
or
mov
mov
leave
mov
loopne
mov
popa
sbb
pop
and
pusha
mov
aad
clc
sti
push
dec
out
xor
pop
repz
imul
push
pop
mov
in
stc
lods
lock
retf
stos
lock
inc
cmp
jmp
adc
(bad)
lahf
lds
inc
rcl
outs
pop
pop
sub
cdq
cmp
dec
push
pusha
cmp
add
lock
inc
xor
pop
jae
inc
mov
shl
ret
jge
bt
les
push
lods
sub
jnp
fcom
fnsave
mov
mov
adc
sub
cmp
pop
sbb
fild
add
add
xchg
or
(bad)
xor
or
test
mov
(bad)
not
pusha
lahf
imul
adc
aas
cmp
js
repnz
pop
imul
popa
fldcw
stos
and
add
dec
mov
jp
cmp
fld
ficomp
jns
push
stos
shl
fwait
dec
jnp
fcomi
fild
sub
sub
in
(bad)
mov
mov
ss
xchg
xchg
cdq
push
in
je
lock
not
mov
sbb
sar
aad
scas
mov
out
dec
test
mov
dec
into
pop
adc
scas
leave
mov
dec
adc
adc
dec
les
push
cdq
dec
and
add
mov
enter
movs
cwde
fcom
cmps
shl
and
inc
stos
int
mov
fld
mov
jp
push
arpl
scas
stc
sub
inc
xor
or
push
sub
mov
cdq
mov
xor
jns
and
mov
out
retf
jle
icebp
mov
adc
aas
fcmovnbe
dec
push
stos
popa
jo
pusha
mov
imul
stos
xchg
call
or
push
retf
and
enter
(bad)
xchg
out
lahf
pop
xchg
mov
jno
jl
jl
adc
or
xchg
mov
mov
mov
sub
mov
inc
retf
inc
pop
add
cmc
pop
fucomp
ret
pop
cmp
push
ret
cmc
push
mov
inc
aad
iret
jecxz
mov
or
jnp
(bad)
sub
add
int
jne
loopne
test
scas
jmp
mov
cmp
stos
shl
pop
cdq
hlt
cmp
mov
cwde
lods
inc
sub
aad
pop
and
imul
jb
sub
into
mov
fstp
mov
add
scas
dec
add
jmp
test
jmp
int
mov
sub
cmc
outs
scas
sbb
fdiv
add
sti
inc
shl
je
jnp
sahf
aas
mov
adc
gs
imul
push
sbb
pop
xor
push
icebp
imul
xchg
add
mov
mov
jmp
sub
push
add
xchg
scas
ins
sbb
sbb
mov
lds
dec
fisubr
pop
fdivr
cmp
and
hlt
gs
jle
aad
ds
stos
mov
fcmovnbe
mov
mov
outs
or
lds
push
(bad)
push
mov
pop
sub
sbb
mov
rcl
in
ror
add
sti
jno
and
and
push
fsubr
(bad)
das
pop
cmp
pop
call
sar
or
inc
mov
lea
rcr
clc
stc
inc
push
jecxz
adc
mov
out
punpcklbw
mov
js
push
xor
mov
shr
jo
sbb
mov
sub
retf
sub
mov
shl
pop
je
or
call
rcr
cmps
inc
fistp
lds
aam
retf
adc
das
inc
jnp
mov
or
cmp
nop
call
jo
and
sbb
lock
xor
mov
sbb
xchg
sti
mov
xchg
pop
in
xchg
retf
arpl
pusha
daa
(bad)
rcr
es
shl
jl
pop
out
ds
xchg
inc
mov
lahf
out
pushf
xor
push
cmovs
cmp
and
pop
xor
adc
leave
jp
dec
rcr
pop
cmp
enter
lods
stos
fcomp
inc
mov
and
inc
xchg
aas
lods
pop
cld
pop
pop
inc
test
mov
xchg
mov
mov
scas
scas
hlt
aam
test
fnstenv
je
cli
fcomp
dec
and
inc
mov
inc
call
das
retf
sbb
sub
loopne
sub
enter
iret
imul
loopne
dec
jle
dec
ja
xor
adc
es
in
mov
leave
pop
jmp
fwait
xor
icebp
mov
adc
fcmovne
cmc
int3
ficom
jae
mov
fs
pusha
ror
scas
pusha
xlat
jmp
stos
cmp
push
sbb
pop
sar
sub
out
rcr
fxch
out
fsub
mov
int
dec
dec
arpl
sar
pop
mov
shr
push
test
cs
sub
inc
popa
fs
sub
xor
(bad)
gs
push
adc
cli
and
mov
push
stos
sbb
adc
fucom
push
movaps
sar
xchg
cmp
xchg
shr
ss
call
dec
(bad)
mov
jmp
push
add
sbb
xchg
int3
movs
mov
pop
fld
or
retf
ret
in
pop
out
mov
and
mov
xor
cld
sbb
in
ja
xchg
sub
div
inc
pop
xlat
add
pop
inc
push
bound
fwait
sub
mov
in
pop
cmp
push
cld
cmp
movs
imul
cmc
pusha
mov
(bad)
adc
in
pop
dec
mov
sti
retf
add
in
and
jge
and
jmp
jbe
je
hlt
and
push
cmps
cmp
imul
popa
dec
add
aad
jp
push
sbb
sti
mov
push
jne
out
jge
(bad)
and
or
inc
ror
(bad)
pop
xchg
cmp
adc
adc
adc
cmps
push
mov
push
push
mov
cld
dec
cmp
loopne
sahf
pop
push
cmp
inc
call
mov
sbb
jecxz
xchg
inc
icebp
pop
adc
gs
call
jmp
jg
inc
jns
mov
push
add
cwde
jge
jmp
pop
mov
pop
xor
inc
int
mov
mov
pop
push
xchg
mov
mov
adc
fmul
fiadd
inc
(bad)
jae
repz
fiadd
(bad)
pop
daa
fcomip
add
adc
lea
loopne
clc
jbe
inc
stc
(bad)
bound
pop
mov
sub
es
mov
sub
sbb
xor
mov
aad
xchg
rol
shl
cdq
fcmovne
pusha
stos
push
cwde
sub
xchg
xor
ret
loope
sub
mov
adc
leave
cli
pusha
(bad)
push
jno
push
cmp
jmp
xchg
mov
xchg
lock
pop
test
mov
xchg
cmp
outs
mov
jmp
or
repz
inc
lds
mov
push
sbb
mov
or
div
dec
sbb
dec
stos
js
and
mov
push
push
sahf
cmp
scas
jg
ins
dec
adc
push
push
loope
sub
mov
jg
cs
xchg
sbb
add
fwait
xchg
ds
pop
(bad)
sar
fwait
arpl
cmps
mov
test
shr
dec
xor
lea
retf
inc
jns
mov
mov
push
and
into
xor
loopne
sbb
sahf
les
out
icebp
icebp
mov
pop
lahf
sbb
rol
rcl
or
sub
cld
repnz
dec
jae
fnstsw
sti
(bad)
into
fs
imul
cmp
std
gs
mov
iret
outs
data16
xchg
xchg
dec
cmp
and
and
push
(bad)
in
test
push
mov
xchg
pusha
pop
dec
pushf
dec
pop
aas
mov
outs
adc
jg
ficom
mov
xor
xor
pushf
ins
(bad)
retf
cmp
mov
xor
mov
xchg
icebp
xchg
bound
jmp
mov
jne
arpl
test
sar
and
arpl
mov
jg
cdq
xchg
or
inc
cmps
test
jo
sub
imul
pop
and
sub
fstp
jmp
inc
aam
ins
icebp
dec
jae
adc
mov
fs
loopne
and
add
xor
push
jmp
dec
add
cld
fist
data16
adc
pop
mov
arpl
jb
jmp
out
add
mov
in
stos
and
and
fs
jnp
mov
fimul
mov
aam
xchg
std
dec
(bad)
into
sub
cmp
(bad)
(bad)
mov
ret
aaa
sti
jne
inc
pusha
lahf
and
leave
cmp
sub
jmp
mov
jno
inc
outs
cmp
adc
jbe
loop
jnp
xchg
mov
mov
cdq
rcr
push
int
pop
lock
stos
xchg
xchg
retf
jno
add
mov
push
sbb
pop
jno
mov
jns
ja
ja
pop
jno
inc
cwde
int
(bad)
add
sbb
and
push
mov
inc
cs
adc
add
add
mov
inc
or
sbb
pusha
inc
in
loope
push
pop
cmp
outs
nop
jecxz
push
sub
and
fnsave
pop
mov
sbb
adc
or
inc
jp
dec
out
cmp
shl
shl
xchg
loope
adc
pop
stos
iret
mov
mov
and
or
int3
and
das
add
mov
mov
test
sbb
sbb
pusha
dec
ins
and
push
adc
push
dec
and
xchg
fstp
jp
inc
jns
dec
lods
jecxz
es
mov
cwde
retf
in
(bad)
test
dec
test
push
movs
lock
ss
ins
inc
mov
jl
push
sahf
add
jnp
inc
or
push
pop
add
inc
popa
pop
xchg
jns
fistp
xchg
js
xor
cmc
cld
jmp
mov
sbb
sbb
fld
ins
mov
jns
push
mov
xchg
jns
mov
mov
mov
mov
cmc
cld
loop
add
mov
(bad)
(bad)
pusha
fidiv
mov
test
jecxz
neg
daa
retf
mov
call
push
aad
jl
inc
arpl
or
xchg
push
dec
(bad)
cmp
sbb
mov
cmp
cwde
jo
jns
imul
nop
mul
mov
idiv
ucomiss
cli
clc
xor
pop
mov
out
push
icebp
push
adc
mov
add
add
adc
sar
and
mov
mov
ret
call
cmp
ins
fwait
scas
jmp
cmp
xlat
(bad)
fild
jb
(bad)
lods
pop
pop
mov
fild
and
pop
sub
and
leave
pop
inc
push
cld
jle
add
xor
jecxz
mov
ret
jbe
sub
xchg
mov
cld
mov
pop
jmp
jge
xchg
clc
xlat
add
xchg
jmp
sbb
push
sbb
or
test
push
dec
int3
sti
shl
mov
icebp
stos
xor
icebp
and
sub
inc
call
rcl
xchg
jns
stc
in
(bad)
push
mov
stos
pop
inc
push
rcl
or
cld
xor
jae
fwait
push
dec
loope
(bad)
and
and
lds
lahf
xor
or
(bad)
adc
cmps
retf
adc
ins
pop
pop
mov
cmps
ret
cmp
daa
add
mov
pusha
mov
and
and
(bad)
scas
mov
ror
xchg
push
repz
jne
pop
cmp
mov
dec
or
outs
or
mov
fwait
(bad)
pop
test
add
mov
cld
aas
jnp
pop
xchg
add
test
ret
shl
xor
xor
or
add
add
jmp
and
jo
daa
ret
add
push
mov
(bad)
jns
xor
push
imul
pop
jae
mov
xchg
popa
icebp
pop
mov
fwait
sub
rcl
lods
fwait
pusha
iret
cmps
test
mov
inc
dec
popf
sub
cmp
sub
and
xor
xor
dec
jnp
dec
loope
xor
cld
mov
ficomp
test
hlt
imul
(bad)
das
push
les
out
aad
mov
and
mov
push
pop
loopne
inc
dec
out
cmps
mov
inc
inc
aad
imul
dec
sub
mov
sub
pop
push
cmps
out
(bad)
aas
mov
and
repnz
jnp
fst
mov
and
icebp
out
mov
pop
out
push
xchg
or
test
mov
jae
in
and
das
pop
out
jl
ds
or
push
mov
sbb
or
jae
mov
loop
xor
pop
stos
xor
cmp
jne
test
scas
gs
sub
gs
js
stc
shl
fs
push
(bad)
ficom
popa
sti
pop
in
ins
push
mov
xor
jle
inc
push
ss
daa
sar
add
movs
xor
push
and
cld
popf
or
in
(bad)
loope
jecxz
push
inc
xchg
fild
dec
cmp
das
mov
push
and
scas
ror
jne
sub
aad
in
repz
pop
xchg
sub
outs
mov
sbb
xchg
pop
and
icebp
das
inc
pop
aas
add
cmps
aam
dec
sbb
aaa
test
jmp
retf
jg
rcr
pop
sbb
adc
repz
sub
nop
leave
ja
cmps
neg
popa
xor
clc
ret
cmp
push
mov
(bad)
sbb
jmp
or
mov
nop
push
data16
push
fwait
sbb
jb
je
bound
sub
mov
add
or
xor
mov
dec
in
sbb
mov
in
ror
jmp
xchg
inc
test
push
jno
and
aas
arpl
mov
cmc
inc
and
fst
loope
sub
and
popa
in
jne
jno
cdq
mov
xor
push
lods
jnp
inc
and
xchg
adc
in
pop
xor
xor
and
fsubr
arpl
aaa
jnp
jns
inc
fsubr
or
ja
dec
test
stc
adc
jmp
scas
push
pushf
add
push
imul
xchg
and
icebp
and
adc
xchg
mov
les
jnp
repz
sar
pop
mov
mov
(bad)
fxch
jnp
or
outs
adc
inc
sub
stos
(bad)
repnz
add
mov
fst
jae
or
jmp
jge
jmp
aaa
imul
test
cwde
and
mov
inc
add
add
das
mov
in
mov
cmp
(bad)
sar
mov
iret
aad
pushf
mov
mov
adc
mov
adc
adc
imul
sub
add
rol
arpl
jecxz
mov
mov
adc
jmp
xchg
mov
shl
mov
push
sub
cli
inc
fnstenv
movs
test
pop
f2xm1
inc
push
xor
pop
ror
leave
fild
je
out
stos
adc
inc
mov
call
mov
mov
push
sbb
adc
sbb
xchg
pop
add
cmp
cmps
fs
lock
fdiv
push
js
retf
popa
ficom
mov
xchg
iret
mov
add
popa
mov
fdivr
xlat
push
in
inc
fist
xor
add
jle
imul
xor
pop
mov
mov
or
adc
mov
mov
lock
mov
cmc
ret
jbe
push
adc
xchg
cwde
push
addr16
(bad)
imul
fst
ficomp
sar
fstp
mov
sub
pop
mov
retf
push
xchg
ss
fcomp
pop
cmp
mov
mov
daa
loopne
pop
rcl
push
mov
or
jne
dec
or
das
xchg
push
fild
inc
mov
jnp
cdq
cld
das
call
fmul
cmp
adc
cs
mov
adc
iret
xchg
lahf
mov
ss
xor
push
test
sahf
in
movs
mov
jae
push
aad
ja
daa
sbb
fldcw
xor
leave
pop
rcl
js
xor
movs
jae
fwait
shl
jno
mov
or
fst
or
pop
sub
cs
dec
dec
jns
push
aad
out
inc
jl
xchg
mov
jmp
repnz
fist
inc
fnstenv
mov
jae
or
mov
aaa
mov
jne
sbb
xchg
icebp
pop
fcom
jmp
fldenv
stc
in
outs
loope
(bad)
(bad)
or
loope
mov
pushf
add
sbb
out
cvtps2pi
or
push
loopne
or
and
sub
xor
mov
mov
cmp
outs
pop
inc
push
iret
and
icebp
mov
gs
and
aas
cmp
push
in
loopne
retf
pusha
jge
out
mov
das
(bad)
dec
scas
mov
leave
movs
repnz
mov
jns
icebp
inc
cmp
sub
sub
mov
mov
jmp
retf
adc
adc
(bad)
push
mov
fst
push
int3
inc
jns
jno
(bad)
pop
mov
push
fwait
add
pop
adc
mov
dec
loopne
sbb
add
jmp
rcr
call
gs
mov
lds
add
mov
push
push
cmc
adc
sub
loope
mov
push
(bad)
sti
imul
cmp
arpl
adc
retf
add
jne
jle
push
jge
bound
mov
jnp
jmp
arpl
push
setp
loopne
pop
xchg
gs
enter
mov
idiv
scas
xor
mov
add
(bad)
int
rcr
jmp
jnp
test
fistp
cmp
push
push
lds
xchg
jnp
ins
sbb
xchg
mov
dec
int
jecxz
dec
jmp
(bad)
adc
lds
dec
lods
outs
test
popa
mov
aad
adc
les
push
fnstcw
adc
xchg
jnp
sahf
inc
cld
inc
fwait
jns
push
mov
retf
add
lods
je
cdq
jbe
scas
imul
sub
sbb
popa
retf
dec
mov
ret
retf
das
ins
dec
sub
mov
stos
rcr
sbb
sbb
fwait
sbb
call
(bad)
imul
test
pushf
shr
das
push
ss
push
inc
mov
int3
mov
sub
mov
add
jo
stc
ret
lea
fadd
dec
clc
mov
iret
sub
bound
mov
movs
add
jecxz
jnp
popa
xchg
jg
test
(bad)
mov
into
inc
fdivr
adc
and
push
or
sub
dec
daa
mov
or
sti
(bad)
xor
xchg
sub
pop
loope
repnz
cmp
int3
(bad)
pop
sub
data16
xchg
cs
push
gs
dec
pop
jp
mov
sahf
jo
mov
(bad)
shl
popa
outs
ret
mov
jl
push
inc
rcr
shl
stos
nop
lea
cdq
imul
in
ror
or
inc
sub
mov
mov
add
test
movs
arpl
mov
hlt
data16
jne
mov
pop
test
mov
repz
or
sub
push
xchg
into
mov
sub
xor
pop
xchg
pop
imul
or
dec
jmp
rcr
rol
(bad)
rol
mov
sar
add
scas
nop
xor
sub
dec
jo
jo
movs
sbb
jle
std
xchg
fdiv
or
js
dec
(bad)
icebp
cmovge
stos
cmp
mov
movs
sbb
mov
add
outs
mov
inc
inc
sbb
das
pop
mov
push
rol
mov
mov
xor
mov
push
stos
jmp
sbb
jno
jbe
mov
adc
sub
mov
sub
in
test
adc
out
sbb
cmp
neg
or
dec
mov
fisub
jne
pop
gs
cmp
or
xor
mov
or
sar
ror
mov
mov
jnp
movs
pop
hlt
and
icebp
pop
movs
push
xchg
or
and
test
mov
iret
cmps
mov
daa
stos
add
jno
inc
shr
or
jecxz
lods
into
(bad)
sub
jg
stc
adc
dec
rcr
mov
pusha
dec
pop
adc
sub
dec
aam
sahf
repnz
out
jnp
sbb
in
mov
movs
cmp
in
ret
inc
dec
getsec
dec
push
adc
xor
jb
mov
mov
aam
mov
and
pop
repz
add
pop
inc
mov
mov
fmul
daa
push
push
sub
fcom
stos
in
push
mov
mov
inc
iret
mov
dec
push
adc
and
xor
or
jnp
pop
xchg
mov
fmul
or
and
push
push
mov
call
test
ins
shl
jbe
loope
adc
js
fld
ret
mov
pop
dec
cmp
cmp
sub
cmps
cmp
xor
rol
retf
push
lods
lods
xor
or
cmp
movs
jnp
sub
and
loope
mov
arpl
stos
push
mov
sti
dec
fimul
cmp
popa
(bad)
sbb
rol
les
mov
mov
adc
inc
jp
jecxz
dec
jecxz
adc
sbb
aam
mov
repz
sub
rol
in
cmc
jle
pop
jge
or
(bad)
ja
push
out
test
xchg
xchg
and
imul
and
loopne
sar
dec
in
mov
call
ins
aas
inc
(bad)
bnd
cli
xchg
add
call
dec
icebp
dec
(bad)
and
inc
int3
add
aad
sub
in
inc
icebp
add
shl
add
xor
es
jmp
cs
aam
jno
xor
ret
out
push
retf
cwde
xor
xchg
cld
(bad)
dec
cli
(bad)
mov
enter
push
out
sub
fbstp
xchg
dec
rcl
push
shl
popa
add
mov
retf
inc
push
xchg
cmp
adc
sub
les
fwait
add
cdq
inc
inc
mov
fsubr
inc
imul
loope
and
jne
and
adc
aaa
mov
mov
inc
test
jns
fnstsw
lahf
out
popa
fnstenv
sub
mov
fst
jns
gs
inc
jmp
cwde
jne
mov
pop
stc
inc
or
xchg
xchg
fwait
ret
push
call
inc
fld
test
adc
lahf
inc
pop
fidivr
rcl
pusha
and
shr
loope
xchg
mov
jp
mov
lds
mov
jecxz
ret
mov
xor
dec
in
rcr
xlat
ficomp
pop
sub
pop
add
mov
xor
sti
adc
outs
mov
mov
fild
loope
mov
add
dec
cli
push
add
mov
sbb
jno
and
sahf
ja
test
sub
enter
fld
add
daa
imul
adc
inc
popf
jb
sbb
pop
fcom
outs
sbb
adc
add
add
fmul
mov
xchg
cmp
pop
mov
leave
lods
xchg
les
xor
jmp
cmp
int3
adc
jg
shl
es
add
and
out
sbb
repz
popf
add
loopne
jecxz
adc
iret
lods
shr
mov
lock
in
mov
xchg
sbb
lea
rcl
cld
mov
push
dec
mov
xor
add
pop
mov
inc
rcl
in
sti
adc
fsub
mov
sub
push
ret
out
cdq
jmp
cmps
xchg
add
dec
adc
(bad)
jle
test
sti
loop
ror
mov
adc
mov
fisttp
inc
mov
jmp
fwait
adc
es
sub
pop
xchg
inc
jmp
and
dec
push
push
rcr
jp
int
sub
mov
ret
dec
dec
dec
xchg
add
cmp
popa
pop
call
jp
int
je
or
sbb
or
inc
inc
xchg
push
stos
add
outs
call
add
(bad)
jno
sbb
adc
iret
xchg
sbb
cmp
sbb
xor
sbb
stos
pop
jo
loope
cmp
and
push
dec
iret
xchg
xor
mov
mov
pop
(bad)
cmps
mov
nop
push
push
jo
inc
hlt
push
popa
dec
sub
enter
xchg
xor
lock
push
xchg
js
mov
mov
adc
and
movs
or
jno
cmp
cs
and
xchg
popa
dec
test
stc
cmp
outs
out
cld
push
push
inc
retf
data16
inc
inc
sbb
scas
fs
jae
pop
mov
jns
or
mov
pop
imul
push
cmp
pop
xchg
(bad)
xor
aaa
rcr
xor
xchg
adc
inc
not
mov
mov
(bad)
jge
add
add
mov
dec
ss
loop
ja
adc
sub
inc
lea
xor
inc
fisub
pop
sti
cmp
pop
out
in
lds
pop
cmp
popf
(bad)
mov
outs
sbb
pop
jmp
ror
cmp
sar
popa
fwait
jno
push
cmp
jnp
rcr
mov
cli
sti
mov
add
int
mov
inc
push
mov
sbb
retf
aam
xlat
inc
mov
mov
push
push
cmp
and
test
dec
mov
clc
leave
ret
or
adc
mov
cs
sbb
mov
(bad)
add
mov
retfw
in
in
sbb
fbld
mov
outs
cdq
pop
cmp
add
adc
pop
sbb
in
cdq
popa
mov
rol
dec
sbb
and
lods
pop
out
lods
xor
je
in
mov
scas
dec
mov
mov
push
dec
cmp
rcr
xor
xor
inc
xor
int3
pusha
sbb
jmp
test
sub
mov
or
mov
sbb
sbb
into
and
pop
pop
mov
mov
sar
cdq
test
sbb
sub
popa
cld
shl
xor
add
(bad)
out
test
xor
(bad)
outs
int
and
(bad)
cmp
cmps
aad
js
pop
push
sahf
test
jecxz
add
outs
mov
jmp
mov
lea
or
das
test
into
lahf
mov
push
iret
out
fidiv
mov
icebp
das
sub
int
inc
pop
out
mov
inc
push
lock
bound
sub
xor
outs
sbb
retf
(bad)
inc
xor
add
push
pop
xor
xchg
stos
cwde
popa
adc
push
cld
loope
mov
sbb
in
daa
test
rcl
rcl
popa
shl
jecxz
loopne
ret
jmp
mov
push
popa
dec
or
fmul
ins
sub
outs
fld
loope
(bad)
mov
jo
dec
out
mov
je
and
or
pop
in
test
rol
pop
pop
or
popf
fisttp
mov
in
jle
push
out
sub
mov
hlt
lods
cmp
sub
sbb
jmp
mov
add
jmp
xor
and
popa
ret
mov
in
sub
pushf
aad
loopne
test
xchg
cmp
dec
aas
out
shl
adc
sbb
lea
push
packsswb
(bad)
clc
push
call
push
clc
fisttp
popa
pop
dec
imul
lock
mov
adc
mov
cli
fwait
into
mov
xlat
mov
test
cmp
das
xchg
test
mov
mov
fisub
int
cli
fst
inc
sbb
fnstenv
pop
xchg
jb
retf
stos
fstp
out
mov
arpl
fcom
call
cmp
mov
xor
ficom
pop
mov
push
jbe
and
aas
dec
xor
daa
xor
adc
push
add
sub
sbb
lahf
adc
xchg
pop
mov
xlat
cmp
cli
bndstx
in
push
ror
push
retf
movs
sbb
jnp
retf
pusha
inc
adc
jmp
sub
shl
(bad)
retf
mov
and
xor
sbb
jns
sub
lahf
sub
lds
mov
sub
in
icebp
jmp
add
addr16
test
in
jecxz
xlat
loopne
push
mov
inc
cmp
jae
imul
add
adc
and
lods
fld
fdivrp
xor
inc
or
cs
xor
sahf
in
adc
fwait
xchg
mov
push
push
mov
enter
sub
xchg
(bad)
mov
jnp
and
inc
pop
xor
loope
cwde
push
paddb
das
ret
pop
cld
mov
push
cmc
mov
and
shr
push
addr16
fisub
fwait
shl
fld
test
data16
xchg
retf
cmps
sbb
dec
cli
icebp
inc
mov
add
ficom
cmp
loope
push
ret
jne
xchg
(bad)
jns
popf
out
add
fbld
(bad)
pushf
in
icebp
test
fst
enter
icebp
mov
add
push
icebp
mov
mov
enter
mov
jno
xchg
sub
mov
cmps
fmul
nop
cmps
push
mov
retf
inc
(bad)
movs
cmps
xchg
mov
movs
fild
sub
sbb
(bad)
aas
stos
and
mov
clc
push
dec
gs
push
ins
jns
pop
pop
adc
daa
dec
mov
cmp
sbb
and
push
mov
add
ins
mov
xchg
mov
or
mov
popf
mov
cmps
test
mov
jnp
scas
iret
mov
sti
rol
imul
xchg
sti
adc
retf
xor
mov
retf
add
add
pop
dec
cmovl
push
or
jae
lods
cmp
dec
jle
and
mov
push
mov
pop
mov
pusha
(bad)
jbe
out
sbb
lock
aad
aaa
jns
repnz
mov
cwde
cdq
and
fisttp
stc
repz
lahf
sar
iret
daa
push
lock
outs
mov
dec
mov
inc
push
push
pop
(bad)
sti
(bad)
push
push
pop
lahf
ins
fwait
xchg
stc
xor
mov
rep
pop
push
xor
aaa
add
cdq
inc
jnp
inc
and
stos
xchg
sar
pop
xchg
sub
mov
loope
(bad)
cmp
(bad)
cli
and
dec
mov
xor
sbb
pop
neg
inc
xchg
cli
jns
xchg
add
xor
and
xchg
xor
ins
pop
retf
dec
(bad)
or
sbb
push
cmp
xor
jl
dec
leave
rol
mov
xchg
inc
or
sbb
or
jmp
pop
cmp
mov
dec
cwde
jl
out
mov
lods
cmp
jne
mov
inc
std
pop
imul
movs
cmps
inc
mov
mov
push
jne
out
push
push
fwait
cdq
out
test
je
inc
outs
adc
pop
sahf
xor
mov
shr
jg
mov
lahf
rcr
inc
cmc
pop
cld
adc
retf
jmp
sbb
jl
push
stos
mov
out
pop
lods
add
stos
ret
mov
cmp
and
mov
xchg
add
cmc
in
xchg
clc
mov
lahf
in
test
inc
sysret
jns
xchg
jmp
in
mov
shr
xchg
imul
fsub
xchg
data16
ret
stos
imul
or
les
xor
pop
test
mov
pop
jmp
js
ror
mov
mov
(bad)
call
inc
sbb
jo
mov
sub
pop
daa
mov
xor
inc
pop
(bad)
xor
jecxz
iret
jge
adc
adc
push
or
dec
mov
mov
xchg
push
sub
jge
or
push
mov
inc
mov
div
movs
ror
unpckhps
mov
jae
adc
xchg
aas
into
mov
xchg
xchg
loope
enter
retf
loope
and
jmp
push
adc
mov
ds
xchg
jecxz
sbb
mov
stos
xchg
sti
sub
pusha
test
mov
jnp
xlat
addr16
(bad)
lds
scas
mov
add
(bad)
in
popf
dec
test
cs
jmp
and
fs
jae
sub
cmp
pop
mov
add
ret
or
and
stos
and
call
test
movs
popf
(bad)
dec
clc
mov
pop
xor
jmp
and
in
pop
cmp
sti
rol
jmp
pop
jp
cmps
jl
jp
sbb
repnz
jg
mov
pop
test
adc
(bad)
lods
push
les
cmp
mov
les
mov
fld
mov
adc
jae
xor
es
mov
shl
push
ss
iret
cmps
cwde
cld
sub
icebp
mov
test
in
xchg
jmp
fstp
scas
sbb
jmp
fsub
mov
stos
cld
retf
pop
cmp
adc
add
into
call
jne
fmul
jns
push
sbb
or
ss
shl
inc
int
mov
inc
scas
jp
push
inc
mov
cmp
jmp
jnp
xor
repz
mov
icebp
icebp
sub
out
or
test
(bad)
repz
dec
(bad)
cmps
and
xchg
sub
xchg
call
fistp
adc
sbb
jge
gs
std
mov
popa
sub
arpl
and
mov
fbld
cmp
sub
stos
inc
xor
mov
sbb
stos
add
xchg
jmp
loope
sub
adc
pop
call
mov
pop
(bad)
sahf
dec
xlat
sti
out
xor
sub
outs
dec
imul
jne
mov
jno
(bad)
mov
dec
add
cmp
and
fidiv
xor
sub
mov
bound
jns
sbb
push
ins
sbb
jbe
push
xchg
(bad)
and
jmp
inc
jle
pop
mov
xor
dec
mov
clc
jnp
imul
mov
retf
bound
stos
jp
add
sbb
ja
ret
repnz
or
jns
mov
rcl
push
icebp
cmp
sbb
or
add
add
push
lods
es
loope
xchg
xchg
cmp
loop
lds
cmp
nop
(bad)
sti
retf
mov
push
(bad)
pop
ja
jmp
xchg
sub
jle
dec
aam
ja
call
mov
das
scas
fbstp
mov
jno
xchg
jae
push
mov
mov
fild
movs
jmp
dec
mov
mov
cdq
xchg
pop
adc
icebp
mov
dec
push
push
inc
cmp
push
popa
arpl
aam
fs
ror
push
jnp
xor
mov
and
mov
ins
pop
sbb
sbb
outs
ror
inc
mov
jb
xchg
pop
xchg
cdq
sub
push
xor
ins
mov
pop
adc
jnp
retf
cmps
std
jnp
out
rol
add
jae
pop
test
push
cmp
arpl
ret
bound
loope
je
hlt
fwait
in
xor
rcr
xchg
push
sub
les
and
popa
xlat
adc
fmul
xor
imul
loopne
imul
adc
dec
call
xchg
fwait
or
imul
leave
das
out
test
fadd
jno
jge
nop
sahf
and
push
cld
lock
mov
dec
dec
cli
or
cmp
loope
stc
in
dec
sub
jl
test
sbb
inc
mov
add
pop
cmps
jb
cmp
xlat
fcmovnbe
xor
mov
mov
movs
ficomp
cld
ins
add
cmp
ins
ror
jmp
jmp
add
je
xor
push
fidiv
lea
or
jecxz
xchg
cmps
dec
rcr
and
lea
sbb
or
test
xchg
pop
test
fidiv
shl
inc
out
sub
adc
aam
retf
pop
arpl
xchg
mov
lods
inc
fild
xchg
out
mul
mov
adc
xchg
cmp
pusha
aad
(bad)
loopne
mov
inc
imul
xchg
dec
inc
dec
aas
aaa
sub
jp
dec
jmp
js
in
mov
mov
adc
loopne
cmp
sub
adc
sbb
adc
aas
or
dec
adc
cmps
in
outs
sub
push
dec
or
jp
pop
js
fbstp
or
js
mov
bound
imul
dec
dec
(bad)
push
hlt
ret
arpl
retf
ins
or
sbb
fcmovbe
rol
out
cmps
or
sbb
jmp
data16
repnz
sub
jmp
jns
inc
mov
dec
sti
das
lahf
inc
xchg
mov
cs
dec
pop
mov
or
adc
cld
jmp
jne
xor
jmp
and
mov
bound
jge
popf
lock
sub
cmp
adc
xor
jle
dec
es
pop
jns
pop
cwde
push
leave
and
sbb
push
sub
int3
push
int3
pop
paddusb
pop
mov
xchg
cmp
xor
push
xor
sbb
out
cli
sbb
gs
gs
aas
add
sub
nop
popf
xchg
push
or
adc
fbstp
add
cmp
mov
icebp
dec
add
xor
data16
mov
cdq
jns
mov
pop
loope
je
sbb
push
mov
loopne
xchg
lods
pop
(bad)
arpl
scas
retf
iret
cmp
mov
test
sbb
mov
fstp
jmp
push
sub
pop
xchg
leave
sbb
cmc
mov
dec
sbb
inc
inc
adc
add
xor
jne
cmp
data16
dec
push
(bad)
aas
retf
fisttp
push
adc
jae
mov
jecxz
xchg
xlat
pop
stc
jno
rcr
or
jmp
pop
lods
sub
jnp
push
and
xlat
inc
shl
fsub
jg
and
jg
mov
test
cdq
push
jnp
push
xor
jnp
mov
add
in
out
(bad)
cs
sub
cmp
cmps
shr
mov
mov
cmp
(bad)
xor
outs
push
push
(bad)
jge
add
mov
lods
sbb
and
mov
sub
adc
stos
ret
mov
mov
mov
mov
jnp
add
and
and
out
add
(bad)
pop
sub
sub
les
out
or
or
repz
lock
shl
sbb
mov
mov
push
nop
sti
xlat
div
mov
inc
and
xchg
xor
adc
or
dec
xor
xchg
xor
ja
mov
les
fmul
movs
xchg
fldcw
add
outs
jge
xchg
add
cmps
xchg
loope
repz
aam
fwait
icebp
ret
std
mov
iret
mov
inc
mov
mov
jno
ror
test
adc
mov
lods
popa
sbb
sub
in
mov
add
gs
fadd
pushf
push
je
dec
sti
stc
popa
fwait
mov
pop
or
and
push
mov
punpckhwd
cmp
jo
jae
push
mov
mov
rcl
stc
cld
dec
xlat
xor
arpl
ja
fwait
mov
sbb
jo
popa
mov
cld
jae
sbb
adc
add
and
movs
gs
mov
xchg
shl
add
and
xor
xor
and
cdq
inc
js
sub
pop
ins
adc
shl
sbb
and
inc
push
fsubr
pop
sahf
xor
dec
scas
pop
inc
(bad)
xor
loopne
mov
mov
scas
add
push
dec
adc
jae
adc
js
sub
or
js
dec
test
jecxz
mov
aas
xor
add
pop
test
dec
push
sub
ds
dec
retf
fst
jecxz
jb
addr16
mov
mov
imul
mov
stos
jnp
rcr
push
popa
or
pushf
idiv
xchg
cmp
and
push
jae
sbb
pop
push
jmp
and
out
or
call
loope
jmp
cmp
lods
mov
(bad)
mov
add
lods
retf
dec
call
hlt
aas
mov
cmp
shl
int3
mul
sbb
jecxz
inc
cmp
add
mov
clc
add
loope
pushf
stos
pop
xor
movs
pop
inc
jmp
mov
jmp
mov
stos
lods
fidiv
loope
sub
fwait
scas
mov
retf
cmp
pop
jne
push
test
pop
fcmovbe
fs
inc
sbb
enter
xchg
sti
xor
inc
aam
leave
xchg
ror
jns
sbb
call
dec
inc
jno
mov
push
mov
or
test
imul
xchg
repz
and
int3
pop
mov
(bad)
xchg
xor
iret
add
pop
aaa
adc
std
xchg
add
(bad)
push
push
call
inc
xor
in
add
add
add
cmp
shl
loope
mov
xchg
fsub
mov
inc
popf
dec
call
sbb
sub
dec
cmps
adc
pop
arpl
inc
shl
push
jb
sbb
retf
xor
cmp
mov
mov
hlt
sbb
jno
push
sahf
in
cmp
mov
push
jbe
inc
in
jmp
mov
or
or
and
add
push
lods
fisttp
cmp
jp
sub
xor
and
adc
mov
fldcw
icebp
movs
cmp
inc
in
adc
jns
xchg
mov
pop
call
cmp
addr16
ret
test
aaa
xchg
(bad)
mov
call
out
daa
mov
mov
je
push
ror
rcl
fldenv
(bad)
clc
test
mov
ja
outs
cwde
push
int3
pop
addr16
cmp
fld
adc
iret
and
sub
nop
adc
jne
push
ret
mov
mov
rol
sti
loopne
outs
pop
or
adc
mov
dec
repnz
adc
gs
addr16
sahf
in
out
sbb
add
sti
mov
push
fdivr
test
imul
ret
adc
or
mov
xchg
dec
jnp
jb
dec
rcr
mov
ins
add
adc
mov
mov
pop
mov
stos
cdq
or
shl
fadd
push
shr
mov
inc
mov
in
and
add
je
xchg
(bad)
retf
inc
loope
add
in
inc
or
aad
sbb
push
dec
adc
push
xchg
mov
fistp
int3
jnp
push
loope
mov
cmp
sub
ins
or
(bad)
lock
lahf
in
or
aas
stos
dec
shr
loop
sub
cmp
jmp
loop
push
dec
addr16
inc
sar
aas
jno
mov
js
mov
dec
jnp
adc
xchg
shr
test
mov
stc
inc
mov
xchg
xchg
xchg
retf
mov
addr16
sahf
cwde
adc
mov
lock
aam
ret
inc
push
jb
mov
add
mov
dec
or
and
push
add
xor
sub
imul
push
mov
push
cmc
dec
out
imul
pop
mov
iret
xchg
inc
jmp
fldenv
sbb
mov
fcom
fcom
cmp
push
fadd
sar
std
and
dec
jmp
and
add
mov
jmp
push
sub
inc
or
pop
mov
pop
adc
xor
and
cdq
sar
inc
sbb
rol
push
cdq
jmp
sbb
nop
mov
mov
mov
jmp
push
adc
shl
sub
push
xor
push
mov
mov
sub
jge
xchg
aaa
iret
xchg
mov
mov
fidivr
lahf
and
addr16
fstp
retf
mov
xor
or
adc
inc
jmp
stos
sub
xchg
repnz
and
xchg
addr16
mov
popf
ror
in
cdq
mov
dec
retf
add
stos
sbb
shl
out
dec
int3
cs
mov
push
pop
push
jno
xchg
xchg
cmp
stc
popf
or
jo
and
test
loop
inc
out
and
sbb
add
inc
mov
and
add
scas
aaa
nop
rcl
repnz
jle
ja
pop
jo
xor
aaa
jmp
aaa
cmp
cli
fstp
shl
jmp
jmp
les
jl
inc
mov
ss
xor
call
je
arpl
imul
retf
into
cmps
jbe
add
adc
mov
push
cmps
add
lods
fwait
jno
add
mov
icebp
or
dec
jecxz
mov
sbb
call
mov
mov
stos
mov
dec
in
js
bound
add
dec
dec
pop
repz
jp
(bad)
fdivr
mov
(bad)
jno
inc
out
aas
pop
(bad)
shl
jne
dec
xchg
aas
sub
xor
fist
icebp
pop
xchg
hlt
or
or
cmp
dec
test
mov
enter
enter
iret
mov
mov
or
pop
out
push
sbb
mov
sti
fcomp
xor
mov
out
xchg
out
adc
mov
add
or
outs
adc
(bad)
mov
nop
aad
ss
mov
shl
sbb
inc
mov
and
dec
push
stos
jmp
cmp
clc
push
adc
jo
or
cli
retf
xchg
push
add
cmc
loope
add
jns
inc
fadd
xchg
xor
sub
xchg
pusha
fisub
retf
mov
out
sbb
cld
add
repz
dec
into
retf
loope
xor
out
mov
xchg
pusha
mov
or
leave
pop
out
jns
jnp
(bad)
dec
push
cmp
sti
sbb
cld
repz
cli
enter
aad
cmp
cmc
mov
out
shl
cmp
clc
mov
xlat
add
pop
mov
or
rep
add
movs
cdq
cs
arpl
and
adc
lea
cmp
rcr
scas
dec
popf
mov
jg
cmp
sbb
imul
push
enter
scas
lods
push
xor
sub
xor
push
ins
pop
aaa
(bad)
test
push
stos
pop
mov
dec
xor
lock
sub
mov
outs
fidivr
pusha
mov
mov
arpl
sbb
pop
xchg
jmp
repz
jo
pop
aad
imul
ins
ins
pop
out
jo
mov
mov
push
pop
and
(bad)
movs
adc
dec
sub
scas
push
cmps
push
clc
in
addr16
mov
es
sub
vmwrite
mov
pusha
dec
inc
dec
pop
xor
imul
sbb
push
mov
ficom
sub
cli
fs
stos
mov
push
ret
or
addr16
hlt
je
loope
arpl
mov
leave
jnp
pop
jle
int3
add
inc
imul
dec
sub
mov
dec
call
cmp
pop
dec
xor
into
popa
sub
mov
and
inc
mov
fisttp
loop
push
ror
sbb
ror
out
sub
ret
sub
xor
inc
inc
push
jmp
div
pop
xchg
stc
mov
cmp
shr
cmp
inc
cli
or
mov
and
daa
gs
pop
popa
xor
adc
(bad)
arpl
inc
xlat
repnz
jmp
push
cdq
repz
movs
enter
mov
add
inc
fidiv
dec
jle
sub
push
mov
aas
popa
jno
jne
(bad)
fisub
ja
xchg
popf
jbe
out
out
inc
repnz
inc
in
adc
xchg
std
in
xor
(bad)
dec
fmul
push
(bad)
popa
sahf
mov
inc
mov
mov
retf
lock
inc
xchg
xor
mov
jl
dec
sar
mov
cmp
and
push
stos
and
das
mov
(bad)
jmp
jp
jecxz
pop
call
aam
dec
icebp
jo
imul
mov
aaa
lods
jge
mov
mov
retf
shr
test
and
loope
cdq
mov
call
mov
add
in
pop
mov
xchg
push
sbb
and
xchg
mov
sar
cmp
repnz
call
into
popa
sub
dec
and
loope
imul
mov
loope
pushf
sub
and
push
push
in
and
inc
call
mov
nop
push
cli
stc
mov
push
loope
xor
inc
dec
sbb
jmp
mov
rol
or
fucomi
(bad)
loopne
and
xchg
in
mov
icebp
imul
enter
xor
lods
mov
int3
push
movs
(bad)
movs
loop
add
sbb
popf
les
sti
and
or
retf
dec
int
nop
adc
jne
fstp
and
lahf
popa
sub
push
jmp
adc
test
ja
jo
out
sub
lock
test
addr16
dec
jno
mov
xchg
imul
or
mov
cli
ror
cs
fwait
cli
ret
rcl
mov
mov
xor
pop
jo
test
icebp
pop
test
cmp
fstp
sub
adc
(bad)
sbb
jle
push
(bad)
push
es
pop
cmp
xor
js
shr
push
add
jmp
bound
fwait
xchg
movs
imul
jg
or
jecxz
cmp
mov
lods
push
fisubr
in
cmp
fcomip
pusha
sti
push
leave
jo
gs
push
jns
mov
mov
pop
or
icebp
test
movs
dec
and
xlat
adc
movs
lahf
jecxz
imul
push
(bad)
leave
icebp
jg
popa
push
fisttp
retf
dec
mov
pop
jmp
stos
or
sbb
cmp
in
lahf
push
hlt
mov
pop
push
xor
rcr
fld
call
add
dec
sub
out
push
shr
jno
sahf
dec
imul
test
int
int3
(bad)
mov
push
dec
fbld
imul
xor
jp
pop
push
fnstcw
mov
stc
fs
add
ret
sub
sti
xlat
cmp
pop
inc
sar
mov
add
fwait
or
and
or
bound
movs
mov
arpl
jnp
fstp
das
inc
cmp
out
ret
cwde
les
add
test
or
enter
scas
fild
push
or
cwde
and
xor
cmps
mov
dec
xchg
mov
cmp
in
(bad)
fneni(8087
test
inc
scas
adc
xchg
dec
arpl
lahf
sar
fnstcw
sti
inc
jmp
and
add
sbb
cs
imul
mov
dec
out
add
push
outs
mov
outs
dec
xor
in
retf
push
stc
adc
sar
cs
(bad)
fwait
sbb
(bad)
push
fwait
mov
jne
loopne
inc
(bad)
clc
dec
sbb
inc
sub
shl
aaa
mov
in
inc
ss
lea
mov
sub
cmp
and
pusha
cs
rcl
cmp
push
in
loope
adc
cmp
and
hlt
add
push
jae
les
retf
cmps
mov
sbb
add
ins
xor
stos
sub
out
push
stos
cmp
je
(bad)
fwait
sar
xor
clc
adc
cmps
test
jns
mov
adc
jle
mov
sub
jp
mov
jecxz
mov
hlt
mov
ror
jno
popa
mov
jmp
aad
stos
pusha
or
add
imul
cmc
sub
fistp
jo
sub
sbb
(bad)
fdivr
add
out
mov
addr16
xlat
leave
cmp
push
cmps
mov
sar
imul
rcr
pop
imul
xor
cmp
cmp
fwait
or
jmp
fwait
and
or
enter
mov
loope
loope
inc
sub
bswap
cmp
inc
call
or
addr16
movs
scas
add
rol
push
add
bound
fs
cdq
xlat
push
jnp
and
shr
jmp
cld
retf
fcmovbe
fild
dec
inc
je
shr
shl
pop
loope
mul
jb
ret
xchg
shl
ror
scas
daa
test
test
shr
jnp
inc
stos
mov
shr
out
jne
adc
aad
pop
mov
pop
mov
shr
ret
imul
pop
repnz
into
or
mov
and
add
jp
inc
lea
int
fldcw
inc
push
jmp
mov
xor
or
inc
mov
mov
lods
stos
mov
jl
or
repz
je
enter
push
mov
shl
adc
ss
(bad)
push
add
fdiv
icebp
jo
and
(bad)
push
jmp
ins
jb
out
test
inc
and
imul
or
or
adc
xchg
or
cmp
jp
adc
movs
out
retf
loope
push
out
cmp
jbe
mov
mov
ins
outs
dec
retf
jp
addr16
dec
fs
jno
ret
leave
cmp
adc
(bad)
jmp
aam
dec
repnz
daa
popf
cwde
div
mov
pop
cmps
sbb
add
ror
or
lahf
pop
mov
pop
jle
sub
xor
xchg
(bad)
ins
leave
movs
fldcw
dec
ss
repz
jle
outs
pop
sahf
sbb
arpl
cli
jmp
(bad)
jmp
ret
jns
repnz
add
enter
push
fucomip
or
jmp
iret
push
call
aas
daa
call
aaa
sti
int
daa
sbb
jp
scas
aas
mov
ret
movs
inc
ins
repnz
mov
cmp
cli
loopne
mov
rcl
and
or
mov
fwait
mov
test
sub
outs
clc
push
add
inc
or
shl
fstp
push
mov
sub
push
fwait
mov
mov
imul
cmp
jne
sub
scas
jno
jb
inc
fs
rcr
imul
sbb
pop
mov
dec
arpl
cmp
xor
sbb
leave
xchg
iret
jb
dec
jb
dec
out
jae
inc
or
shl
enter
test
retf
mov
pop
retf
jbe
icebp
movs
jae
stc
jecxz
mov
xchg
repz
or
mov
pop
ins
inc
jmp
mov
sbb
pop
retf
mov
jp
movs
xor
leave
xor
cmp
sbb
jp
lahf
and
mov
popa
cmp
fild
or
iret
jo
xor
adc
stc
cmc
adc
xchg
adc
jge
jmp
outs
outs
sbb
add
xchg
rol
lahf
out
ds
test
jmp
add
mov
xchg
das
sub
add
cmp
outs
mov
jae
push
mov
les
aam
mov
sub
bound
(bad)
addr16
pop
pop
add
mov
loop
push
dec
and
aas
mov
ret
imul
arpl
mov
and
sahf
adc
jp
lea
or
mov
test
mov
stos
popf
xchg
call
sbb
xlat
push
mov
inc
test
jge
add
test
jecxz
(bad)
fsub
adc
shl
cmp
test
jo
popa
pop
cs
call
xchg
mov
sbb
add
popa
stos
jle
lock
shr
std
enter
sub
mov
(bad)
jns
mov
daa
sahf
pop
push
or
cs
dec
sbb
xor
ret
mov
mov
(bad)
dec
(bad)
or
pop
cmp
push
push
mov
outs
scas
ret
ss
rcl
push
inc
test
mov
mov
xor
jnp
jl
pop
mov
loopne
aam
lock
movs
mov
movs
xchg
stc
pop
cld
sbb
out
and
cld
pop
int
test
xchg
repz
pop
fisubr
or
mov
xchg
test
cmp
jnp
push
jno
stc
dec
jle
push
js
add
mov
push
bound
mov
and
fwait
les
mov
mov
jnp
(bad)
nop
jo
push
or
mov
mov
aas
pop
ds
adc
retf
add
aam
popf
pusha
push
mov
cmp
xor
nop
inc
imul
add
jmp
cwde
push
cmc
inc
out
inc
adc
cmp
es
fadd
sub
mov
stc
sub
sbb
fisttp
ss
dec
shl
cmp
mov
xchg
daa
inc
aas
shr
xchg
fstp
movs
xchg
shl
(bad)
and
jb
push
test
jmp
and
push
daa
jns
lock
lods
sti
sbb
ror
scas
and
xlat
push
jbe
mov
scas
in
retf
lahf
fnstsw
xor
fisubr
jmp
ins
mov
fwait
int
jnp
xchg
push
cmp
test
inc
stos
cmp
retf
inc
jnp
pop
push
mov
das
sub
aad
add
push
jp
xor
push
xchg
sti
cmps
xchg
loope
push
repz
sub
(bad)
sbb
fwait
jne
(bad)
retf
aaa
es
hlt
mov
mov
xor
pushf
sbb
push
sbb
mov
or
add
adc
fsubr
popa
out
inc
outs
mov
call
popa
xor
popa
retf
gs
outs
or
outs
mov
retf
sbb
adc
(bad)
mul
lea
and
aas
ror
or
les
cmc
push
mov
scas
cld
adc
cmp
add
inc
and
inc
test
shr
dec
push
inc
les
adc
xchg
dec
xchg
rcl
sar
mov
(bad)
scas
cdq
jmp
sbb
out
movs
(bad)
sub
xchg
sub
fild
test
or
inc
xchg
ss
or
cmc
adc
dec
jmp
dec
and
or
xor
movs
sub
aaa
cmp
and
in
jmp
not
rcr
mov
adc
push
cmp
push
(bad)
pop
ins
mov
xor
and
mov
push
js
call
sbb
imul
sti
dec
(bad)
and
jo
and
call
cmp
stos
in
mov
ins
mov
pop
aas
mov
ins
aad
iret
pop
dec
daa
stos
aam
push
pop
movs
mov
mov
stos
xchg
mov
mov
xchg
pop
shl
jle
cld
inc
cmpxchg
out
imul
pop
das
cmp
xchg
and
stos
je
push
pusha
dec
xchg
dec
pop
xor
je
mov
test
sar
xchg
xchg
not
sbb
adc
and
popa
pop
pop
(bad)
sub
push
or
int3
sub
(bad)
cmp
push
js
retf
pusha
mov
cmp
xchg
push
pop
xchg
or
mov
test
shl
ja
push
mov
xchg
mov
or
leave
shr
fnstenv
sub
xor
out
sbb
lods
popa
sti
je
rol
cmp
push
dec
jo
adc
mov
mov
and
imul
mov
inc
mov
sbb
jne
or
enter
add
ror
sub
out
aam
sub
cld
call
fild
popf
mov
retf
sub
adc
(bad)
fwait
or
loope
sti
add
inc
and
and
cmp
cmp
retf
sub
ret
push
cmp
ins
jno
ror
imul
movs
mov
add
and
nop
mov
xchg
(bad)
out
dec
enter
cli
inc
cmp
pop
lahf
fcom
outs
mov
scas
mov
add
add
imul
fadd
lds
les
add
into
stos
pop
sub
lea
imul
adc
jnp
sbb
mov
pop
psubw
jmp
sti
jno
inc
add
daa
jp
jae
and
and
mov
popa
test
stc
mov
(bad)
retf
jg
inc
sbb
mov
popf
loop
mov
pusha
ins
jno
jns
dec
mov
push
repnz
scas
pop
aas
push
ror
add
popf
add
xor
mov
sub
jbe
in
nop
inc
sub
mov
jle
test
in
into
pop
shl
lods
popa
mov
push
out
jnp
xor
add
mov
mov
shr
fld
pop
mul
test
stos
or
cmp
bound
imul
fstp
test
scas
push
cmps
xchg
(bad)
into
or
jmp
outs
ss
add
fnstsw
rcr
sbb
cmp
cmc
stos
xor
adc
mov
or
fptan
pop
xor
inc
pop
aam
push
fidiv
inc
or
je
jbe
repz
push
pop
push
mov
jnp
loope
and
(bad)
mov
jp
jmp
push
fs
cli
mov
nop
and
mov
ja
xor
mov
and
lods
ret
adc
ss
xor
mov
dec
fisttp
ret
xor
sub
pop
cli
or
sub
hlt
js
jo
imul
add
outs
nop
cmp
xchg
inc
add
xor
into
je
nop
pop
sub
or
(bad)
inc
or
repz
pop
mov
and
inc
fadd
adc
or
xchg
lock
jnp
push
mov
ror
sub
rcr
cmps
dec
add
mov
pop
and
call
mov
add
cmc
jnp
xor
push
bound
mov
lea
rol
pop
add
loope
sub
jmp
add
ret
and
hlt
mov
add
repz
cmp
jmp
add
mov
push
jb
pushf
aam
ds
mov
mov
push
and
cdq
jp
imul
call
(bad)
daa
call
add
pop
add
xor
scas
cmp
dec
jno
mov
cmps
loopne
outs
mov
cld
push
jl
jns
or
jmp
rol
repz
mov
das
out
sbb
mov
inc
jb
sti
xchg
dec
adc
shl
sbb
xchg
inc
cmp
mov
xchg
fild
retf
retf
dec
lock
ret
and
imul
js
xor
jp
dec
pop
add
jae
pushf
cdq
xor
jp
outs
mov
loope
mov
pop
add
ret
jp
fist
(bad)
sar
fisub
imul
xor
xlat
stos
push
jns
mov
stos
add
cli
sbb
push
dec
dec
loope
sysenter
add
jecxz
adc
fwait
pop
jns
pop
xchg
mov
les
icebp
jns
je
fisub
lea
stos
(bad)
mov
mov
lds
push
inc
inc
test
gs
jo
addr16
imul
dec
xchg
or
leave
(bad)
sbb
imul
jg
dec
push
pushf
sbb
clc
xchg
push
add
fidivr
std
or
mov
adc
movs
rcr
sub
dec
mov
in
out
or
outs
cmp
shl
loopne
lds
mov
jo
mov
mov
mov
sbb
test
(bad)
or
mov
cmp
xchg
mov
in
loope
je
jbe
fs
pop
sub
and
or
(bad)
xor
pop
mov
and
mov
xor
ins
js
mov
xor
call
and
inc
add
adc
outs
pusha
xchg
and
mov
test
nop
push
fwait
xor
leave
ror
vcvttps2dq
sbb
jp
icebp
stos
fldcw
lock
sub
sub
mov
cmp
fwait
or
jmp
mov
mulps
icebp
aaa
mov
lods
repnz
mov
fiadd
retf
dec
lea
movlps
stc
or
mov
sbb
and
push
pop
test
mov
mov
push
inc
rcr
push
repz
mov
push
cld
or
sahf
mov
mov
or
push
or
jae
data16
jmp
jecxz
sahf
dec
daa
jg
cmp
imul
sub
movs
aas
sti
cld
lahf
fadd
or
sbb
retf
(bad)
rcr
mov
inc
cmp
fst
mov
jge
mov
hlt
loopne
ror
mov
mov
sub
pushf
push
retf
aam
fwait
les
or
jp
mov
push
sar
clc
call
ja
push
sbb
xor
jns
jp
retf
test
into
xor
rcl
dec
xchg
pop
jae
mov
adc
jmp
movs
mov
jp
jp
movs
dec
(bad)
out
int
mov
push
in
arpl
sbb
ret
enter
mov
mov
jmp
add
fwait
dec
sub
into
mov
pop
adc
add
dec
sbb
add
dec
adc
sbb
les
leave
add
aas
jmp
fild
cmp
xchg
ret
retf
push
cli
adc
rcr
inc
xor
jns
push
jge
mov
or
jns
(bad)
or
xchg
sahf
mov
add
mov
push
xchg
xor
mov
sahf
adc
pusha
in
inc
sub
seta
out
push
into
test
cdq
retf
mov
stos
dec
push
sbb
add
std
add
mov
sbb
mov
aad
add
rcl
cmp
mov
adc
lds
not
pop
mov
bound
(bad)
jnp
lea
ret
mov
mov
retf
fwait
mov
sar
out
mov
mov
bound
ss
out
push
fcmovnb
movs
cmp
jno
xchg
pop
mov
jg
add
xchg
arpl
iret
mov
xchg
dec
lods
pop
cmps
sub
ficom
mov
xor
nop
mov
dec
out
retf
sub
les
xor
jns
dec
inc
pop
cmc
imul
dec
mov
dec
lahf
dec
xchg
mov
jmp
jmp
push
xor
or
cmp
inc
lds
rcl
enter
xor
bound
mov
scas
and
pop
mov
test
or
rcl
adc
stos
lahf
int
cmp
jbe
dec
sbb
outs
push
in
rcr
movs
inc
inc
scas
sar
sub
mov
dec
ficom
repz
pop
mov
bswap
dec
mov
or
pop
adc
sbb
or
jge
icebp
scas
sbb
(bad)
lods
das
popf
xchg
and
retf
aaa
xor
ins
in
test
push
movs
pop
rcr
cmp
add
add
inc
and
mov
daa
mov
cmp
pusha
inc
xor
sbb
sbb
cmp
cmps
pop
aaa
xor
sbb
in
sahf
sbb
cld
ficomp
fistp
jl
sub
call
repz
add
aam
mov
clc
js
lock
mov
adc
push
stc
mov
dec
aas
fisttp
imul
add
aas
movs
test
(bad)
mov
nop
(bad)
(bad)
ror
ror
outs
adc
jne
das
sti
push
mov
dec
sbb
popf
inc
mov
das
xchg
cmp
or
mov
cli
adc
mov
mov
sahf
idiv
loope
rcr
jne
das
lods
adc
pop
pop
scas
push
adc
lahf
iret
retf
inc
ja
ret
and
mov
std
sub
cmp
nop
and
test
or
jp
shr
sub
ror
pop
(bad)
mov
std
mov
test
lahf
addr16
repnz
push
dec
sbb
arpl
(bad)
xlat
loop
or
mov
inc
fisub
fmul
pusha
jp
jmp
fdivr
or
xor
mov
fwait
adc
mov
inc
or
pop
nop
fwait
inc
adc
in
add
mov
movs
xor
or
dec
mov
lahf
das
pop
sbb
sbb
pop
push
test
les
adc
outs
and
out
xor
mov
adc
inc
mov
shl
and
jnp
cmp
sbb
pop
loop
(bad)
jmp
fdivr
(bad)
bound
retf
jg
stos
call
std
mov
sbb
ss
pop
or
pop
stos
push
add
call
jg
jecxz
inc
jmp
icebp
call
fsub
add
jecxz
mov
mov
inc
pop
pop
mov
sub
loop
jno
mov
dec
jno
mov
fistp
dec
or
cmc
imul
cmp
push
mov
dec
fdiv
cli
or
xor
sbb
inc
fmulp
inc
in
dec
cmp
out
mov
sub
cmps
mov
jne
mov
add
xor
mov
jne
add
push
loop
mov
cmp
xchg
xchg
stos
mov
cmp
test
xor
stos
sbb
shl
(bad)
inc
mov
pop
ror
or
xor
cli
imul
imul
scas
mov
sub
sbb
test
mov
or
sbb
mov
xchg
push
xchg
sar
iret
jmp
jecxz
sub
or
jns
pop
psubq
aas
add
cmps
jle
fadd
scas
nop
pop
jno
jg
dec
call
ror
xchg
bound
fist
loope
push
xor
lea
adc
loope
test
loopne
(bad)
test
test
sbb
push
rol
clc
jp
push
dec
push
imul
int3
adc
stc
adc
fisttp
mov
out
mov
pop
and
xor
inc
and
inc
fnstcw
jae
in
cmp
sbb
js
stc
dec
popa
xchg
dec
push
push
sti
jno
pop
mov
jle
addr16
inc
mov
sbb
xchg
inc
std
sub
cmp
les
shl
arpl
in
pop
clc
dec
inc
push
inc
pop
test
outs
xor
shr
pop
pop
ins
xor
(bad)
sar
and
and
popf
loopne
ror
mov
sti
inc
out
inc
jns
out
jg
out
xor
(bad)
or
int3
test
icebp
addr16
loop
jg
enter
scas
sub
ja
adc
mov
fstp
stos
adc
mov
sub
mov
mov
rol
stos
and
call
sub
mov
adc
retf
xor
sub
xlat
xor
minps
js
test
cwde
jno
mov
or
pop
icebp
push
inc
or
sub
and
cmps
sub
sti
loope
xchg
lea
add
adc
or
retf
in
adc
mov
xor
cmp
into
enter
nop
or
cmps
jno
cli
fwait
and
fwait
iret
popa
jle
mov
and
leave
mov
retf
jo
test
jmp
cdq
inc
inc
cmc
xor
mov
xor
cmp
push
adc
jmp
cs
xchg
add
sahf
jno
dec
dec
shl
loopne
or
ja
shr
or
popa
adc
fbstp
and
cdq
jo
sbb
ror
mov
aaa
outs
and
les
push
rol
sub
adc
pop
fstp
sub
retf
in
xor
lock
pop
jns
dec
repnz
in
popa
sbb
or
popf
add
popa
lods
pop
pop
loop
repnz
pop
movs
push
retf
sub
pop
mov
in
movs
lahf
(bad)
js
adc
jnp
into
mov
mov
adc
pop
mov
adc
jmp
test
and
sub
jmp
jb
shr
(bad)
pop
ret
sbb
sub
mov
cmc
jne
sub
adc
mov
xchg
pop
(bad)
cmps
adc
mov
pop
int3
fimul
sti
xchg
jmp
add
ror
mov
add
(bad)
lds
ja
mov
aam
mov
inc
mov
fadd
add
sahf
sub
sahf
repz
adc
jne
bound
mov
pop
add
das
xchg
mov
adc
push
js
pop
imul
sub
adc
or
jecxz
mov
and
aas
rcr
add
sub
pop
sub
sub
sbb
call
mov
int
dec
mov
sbb
mov
sub
inc
bswap
sar
or
dec
in
mov
into
(bad)
adc
test
cmp
dec
mov
ins
mov
retf
dec
retf
xor
rcl
xchg
test
dec
adc
pop
scas
lea
ins
mov
or
jmp
sbb
sub
popa
xor
jp
mov
(bad)
scas
(bad)
jnp
adc
mul
add
aad
mov
adc
cmps
aam
daa
mov
xor
stos
xchg
dec
imul
pop
mov
mov
push
popf
pop
mov
aas
ins
jmp
rcr
hlt
jnp
into
aas
inc
icebp
inc
fcom
push
scas
adc
adc
in
into
dec
xchg
mov
nop
mov
push
or
mov
pop
(bad)
ficom
cwde
adc
inc
stos
push
push
leave
xor
inc
or
sbb
jb
mov
jl
jmp
mov
mov
or
test
pop
mov
mov
jno
or
adc
loope
dec
push
(bad)
dec
xor
adc
inc
cmp
call
out
call
sub
add
adc
stos
ror
xor
mov
in
add
and
sbb
jno
into
cmp
cmp
mov
cmp
popf
xor
add
dec
pop
mov
jno
lods
mov
mov
pop
mov
mov
mov
sbb
and
adc
retf
xor
fimul
sbb
push
mov
pusha
dec
add
inc
mov
mov
pop
jp
xchg
ret
or
inc
pop
and
(bad)
fstp
and
xor
pop
rcl
mov
xor
je
and
inc
adc
mov
retf
add
mov
add
es
mov
test
push
repz
push
nop
pusha
mov
imul
stos
jb
add
jns
shr
fist
fnstsw
and
inc
aas
mov
jmp
xchg
or
fstp
sbb
imul
push
push
xrelease
mov
ror
mov
jns
adc
push
inc
push
fisub
push
jmp
je
sub
pop
out
repz
sti
out
mov
sub
jae
dec
loop
sbb
jg
out
mov
mov
sti
es
ins
stos
xor
mov
mov
out
fisub
ret
xor
ja
mov
pop
movs
repz
mov
loope
test
jl
or
(bad)
mov
aad
sbb
mov
int3
pop
add
ins
call
fmul
jge
test
aaa
outs
(bad)
mov
xor
cld
pusha
adc
(bad)
ja
dec
mov
xor
enter
push
xor
mul
in
xor
dec
lahf
fdivrp
rcr
xchg
and
cld
loopne
inc
sbb
cmps
call
retf
sub
dec
jp
les
xchg
mov
jae
adc
popa
push
push
inc
lds
pushf
cmps
daa
aam
cmp
mov
retf
sbb
(bad)
inc
nop
push
push
mov
stos
jecxz
mov
in
inc
sub
dec
loope
mov
adc
sbb
inc
jmp
add
hlt
dec
mov
jg
mov
arpl
popa
jmp
int
push
retf
xor
fisub
sub
mov
call
in
test
pusha
add
daa
and
jmp
sub
xchg
sub
call
repz
mov
push
loope
adc
addr16
cs
pop
les
test
cmp
mov
retf
cmp
stos
and
popf
ins
cwde
loopne
popa
sub
ret
mov
add
popa
inc
inc
sub
popf
pop
cmp
sub
sub
xchg
stc
add
ret
inc
in
sub
or
inc
inc
mov
test
repz
pop
inc
sub
mov
adc
stos
fisub
inc
or
stos
add
imul
arpl
pop
jecxz
adc
fsubrp
push
or
mov
dec
clc
xor
mov
jp
xlat
inc
jecxz
stc
adc
ja
mov
cwde
(bad)
(bad)
add
popf
shr
push
xor
dec
xchg
dec
mov
imul
jae
add
pop
loope
adc
xchg
arpl
fld
lock
aaa
lods
inc
adc
cs
push
push
cmp
cmp
cmps
fsub
mov
inc
mov
cmp
sbb
icebp
push
hlt
cmp
arpl
cli
mov
dec
outs
leave
arpl
jno
push
pop
icebp
dec
or
out
push
sti
xchg
inc
jl
mov
jle
xor
in
repz
dec
jno
xchg
ret
cmp
jne
in
inc
pop
cli
xchg
ret
jmp
push
mov
xchg
sbb
mov
xor
jmp
adc
cmps
push
in
out
adc
jns
lods
mov
add
ret
mov
pop
and
jmp
jle
scas
add
(bad)
aam
xchg
out
in
int3
mov
jns
cmc
and
test
inc
mov
jo
popa
ret
popa
in
inc
adc
or
nop
jno
jl
dec
imul
lods
mov
mov
ret
mov
mov
shl
movs
mov
push
inc
jno
jle
stos
sbb
and
push
lock
or
jp
mov
call
mov
test
mov
stos
jo
(bad)
cmc
leave
lahf
and
jns
fcos
adc
loopne
mov
xchg
mov
cmp
add
rcr
push
jns
inc
and
pop
jmp
enter
mov
jno
aas
mov
xchg
shr
or
jmp
push
and
iret
sub
xlat
mov
retf
fwait
pusha
(bad)
addr16
pop
adc
enter
stos
sbb
push
sub
call
mov
ins
and
xchg
push
pusha
mov
add
lock
aam
in
cmps
cmp
mov
jmp
fwait
repnz
pop
xor
jge
add
push
fwait
xchg
mov
movs
pop
mov
mov
test
jo
idiv
sub
std
dec
jecxz
fisubr
pop
cmp
loopne
adc
pop
add
jmp
loope
xchg
sub
adc
add
xor
call
push
imul
ror
pop
sub
jne
hlt
pusha
sete
xor
add
and
cmc
arpl
sub
sti
mov
int
daa
movs
and
jp
dec
int
int
cmps
dec
aas
lahf
test
inc
mov
and
push
jno
repnz
sbb
mov
xchg
inc
xor
loope
icebp
call
imul
push
jl
jecxz
cld
xlat
pushf
cmps
sub
in
pop
dec
mov
call
ret
pop
mov
jle
rol
dec
inc
lods
push
push
movs
xor
mov
inc
fimul
ds
inc
movs
or
sbb
adc
jne
cmp
mov
mov
fbstp
mov
mov
and
rcr
jo
push
arpl
sar
xor
int3
jno
aad
stc
dec
imul
aad
lds
jo
dec
lea
fidiv
mov
jecxz
cmp
sub
cmps
pop
pop
wrmsr
ins
jmp
add
and
out
fst
arpl
ret
or
push
cmp
popa
loope
mov
jno
push
sub
(bad)
and
cmp
adc
cmps
aad
mov
out
(bad)
rcl
retf
mov
mov
leave
cmc
sbb
jmp
or
jp
(bad)
jmp
in
cmps
or
push
or
cmc
inc
cmp
mov
sub
out
data16
addr16
in
ror
sub
movs
popf
stc
sub
dec
movs
push
jne
jecxz
scas
jns
fwait
outs
xor
or
pop
adc
dec
adc
call
mov
and
mov
pop
mov
in
aas
xchg
xor
cmp
adc
pop
pushf
sbb
or
loopne
jne
dec
(bad)
jp
adc
push
cli
pop
jg
xchg
sub
mov
mov
add
sar
mov
jb
jge
push
or
xor
rcr
inc
test
push
push
sbb
retf
loopne
jle
cmc
or
and
or
(bad)
cs
inc
clc
les
push
dec
mov
int
xchg
movs
xor
cmp
and
fiadd
pop
imul
jae
xchg
jo
fstp
lea
adc
pop
imul
push
mov
sbb
add
std
cmc
inc
ins
mov
push
fcom
mov
loopne
mov
sti
pop
out
sbb
jecxz
or
or
loope
pop
sahf
clc
arpl
in
outs
movs
sub
arpl
cmp
dec
cmp
inc
or
out
or
adc
sub
fld
int3
pusha
je
sub
fiadd
xchg
pusha
stos
jae
or
test
xchg
sbb
fild
gs
sahf
mov
push
add
pop
sbb
xlat
push
xchg
shl
js
mov
aaa
push
mov
mov
retf
jge
jno
pop
mov
movs
cmp
push
call
jl
ds
rcr
(bad)
lahf
adc
adc
xchg
fs
fs
cmp
sub
or
xor
jns
(bad)
mov
cmp
ss
lds
jmp
inc
add
jb
dec
fist
pop
xchg
cwde
adc
jns
test
adc
and
rol
pop
loopne
pop
or
stos
xchg
mov
stc
pushf
dec
inc
and
and
aas
push
lea
mov
mov
loop
or
sbb
cmps
pop
pushf
sub
icebp
pop
or
push
loope
imul
xchg
pop
pop
iret
add
popa
addr16
cmp
sub
inc
out
jns
inc
in
add
and
sbb
mov
(bad)
fidivr
sub
xchg
push
stc
jne
aas
inc
adc
enter
mov
jo
cmp
rcr
mov
mov
xchg
mov
in
pop
arpl
jnp
and
fwait
(bad)
and
xor
pop
mov
in
jnp
pop
mov
dec
inc
ds
test
xor
aad
inc
mov
dec
mov
xchg
cmp
mov
movs
in
out
sbb
xchg
retf
and
jnp
std
jmp
xor
cmp
add
int
or
and
sub
jae
mov
or
mov
mov
loope
fsubr
push
dec
xchg
push
jmp
in
icebp
pop
loop
jbe
mov
repz
test
xchg
fsub
sbb
push
mov
rcr
cdq
pop
lods
sub
adc
pop
push
cs
shl
jns
test
adc
push
xor
cmp
pop
mov
fild
(bad)
repz
bound
jge
push
adc
push
cmps
add
loop
retf
ja
sbb
or
pop
xor
lea
pushf
imul
daa
into
dec
popf
xchg
sbb
out
mov
adc
call
xor
shr
or
cwde
sti
loope
and
cld
add
mov
adc
fidivr
mov
pop
lahf
jno
pop
jno
cmc
je
dec
mov
sub
loope
push
(bad)
lahf
and
mov
dec
stos
or
test
lahf
xchg
dec
add
in
fwait
sti
adc
jmp
sti
loop
cld
fcomi
inc
push
mov
mov
inc
jnp
dec
sub
and
push
fs
dec
xor
jle
or
out
aam
pop
fild
fisttp
dec
sub
pusha
xchg
and
push
pop
sub
mov
jnp
imul
dec
or
mov
outs
scas
adc
cmp
pop
xchg
repz
loop
cmps
fmul
retf
mov
xor
fadd
mov
leave
imul
scas
push
xor
retf
mov
xchg
mov
xchg
iret
fdivr
lock
xchg
sbb
cmps
inc
or
jl
cmps
retf
xor
sub
lds
pop
aas
enter
fsubr
xchg
adc
in
(bad)
mov
das
mov
pop
xlat
into
dec
icebp
mov
mov
xor
loop
mov
push
sbb
cli
fisub
mov
shl
jno
push
fistp
fistp
mov
shl
dec
add
pop
and
fnstenv
pop
ins
cmp
dec
pusha
into
lods
int
cwde
ror
push
retf
arpl
sbb
mov
(bad)
sbb
dec
frstor
jae
loopne
cmp
sbb
stos
adc
add
aas
(bad)
mov
sbb
pop
sahf
sahf
leave
call
xor
cmps
js
dec
loop
lock
cwde
inc
fnstenv
ficom
lea
bound
sub
ret
push
dec
(bad)
jns
push
xchg
lds
mov
cmp
(bad)
cli
cmp
adc
sub
pop
das
mov
pop
cmc
dec
add
inc
dec
jmp
outs
add
xchg
mov
mov
sbb
mov
ret
out
xchg
cwde
pop
jle
push
inc
jge
dec
enter
pop
loope
xor
retf
jge
imul
pop
jnp
push
adc
mov
cmp
cwde
dec
xchg
pusha
and
cmp
icebp
xor
add
or
out
lds
jg
xchg
mov
jp
mov
sbb
test
add
xor
mov
dec
rcr
mov
imul
xchg
sti
inc
mov
inc
loop
stos
pop
ror
cmp
cmp
inc
cmp
leave
cs
inc
pushf
test
dec
push
nop
mov
cmp
jp
add
push
repz
adc
(bad)
cmp
mov
mov
pop
xchg
jne
jg
sbb
jno
mov
mov
adc
xor
lock
stc
ret
lock
inc
das
and
ja
jno
and
jecxz
sbb
xchg
pop
add
cmp
push
fstp
jb
pop
fwait
adc
(bad)
fistp
and
imul
movs
sub
cdq
jecxz
lds
sar
lahf
xor
xchg
int3
data16
sub
cmc
aas
lock
retf
adc
cmp
cmp
out
cmp
lock
push
cmps
and
xor
dec
fsub
sub
sub
rol
pop
xor
fcomp
mov
xchg
push
shr
enter
dec
rcl
test
mov
xor
or
mov
mov
pop
pop
repnz
mov
icebp
adc
or
out
jne
dec
xor
add
add
enter
repz
sahf
add
push
ret
jno
movs
jmp
imul
sub
std
jns
and
out
inc
popa
fidiv
adc
in
cli
push
cmp
mov
adc
std
mov
out
fimul
data16
mov
sti
dec
inc
sub
xchg
ins
inc
add
or
fisttp
mov
and
pop
sub
xchg
test
in
das
aad
retf
pop
xchg
and
retf
pop
retf
pop
cdq
cmp
push
stos
fldenv
mov
sbb
ror
xchg
adc
or
imul
fistp
mov
aam
mov
aad
mov
pop
pop
shl
clc
push
adc
leave
rcl
call
mov
mov
(bad)
test
retf
adc
je
in
iret
test
inc
ss
mov
fnstenv
adc
jne
adc
popa
mov
pop
shr
imul
jmp
mov
mov
enter
dec
jno
and
arpl
cmp
pop
jbe
or
bound
xchg
sbb
push
jbe
mov
jp
ins
iret
mov
adc
jno
loope
sahf
inc
mov
and
outs
inc
imul
and
jp
test
cdq
imul
inc
dec
sbb
fild
cwde
pop
inc
outs
dec
lock
retf
jno
test
pusha
xchg
data16
jae
jmp
in
loope
jo
push
jecxz
(bad)
loope
mov
dec
int
add
ror
sub
js
inc
lods
lock
or
movs
(bad)
mov
movs
sbb
dec
cwde
call
mov
mov
stc
enter
push
icebp
push
pop
lock
xor
sbb
cmp
pusha
dec
popa
inc
leave
dec
les
repz
stc
add
rcr
cdq
mov
addr16
(bad)
xchg
shl
outs
jmp
jno
lds
push
push
jo
sub
push
and
cmps
pop
sahf
xor
retf
imul
dec
mov
add
jle
jecxz
jmp
cmps
sbb
sub
jnp
scas
dec
xor
or
movs
nop
sub
jmp
jmp
pop
sbb
or
jae
jb
lock
push
push
mov
fild
hlt
lock
dec
sub
xchg
scas
adc
or
xor
inc
in
and
ret
inc
sbb
aad
xor
mov
and
mov
out
lea
fdiv
push
pop
jmp
out
stos
add
adc
jnp
inc
aad
in
sbb
or
mov
fs
sub
test
call
lahf
mov
imul
pop
cmp
neg
outs
mov
or
lods
or
push
ins
mov
jge
ins
popf
adc
cli
adc
imul
test
stos
fist
add
rcl
ds
ret
ins
aad
fst
ret
pop
in
shl
adc
mov
mov
pop
sahf
sbb
cs
movs
push
scas
fs
push
pusha
xor
pushf
pop
pop
sub
sbb
(bad)
outs
fist
sub
out
aad
xchg
xor
or
std
mov
rol
xchg
shr
jg
pop
int
out
dec
dec
stos
and
mov
cli
mov
in
fild
lock
or
adc
or
dec
and
mov
add
push
xchg
shl
adc
push
xor
in
push
cdq
fadd
jne
sar
adc
hlt
(bad)
fadd
addr16
and
pop
ror
or
mov
cmp
iret
ret
mov
add
(bad)
clc
sbb
sbb
push
xor
mov
dec
cmp
or
test
mov
retf
adc
adc
aas
mov
adc
and
bound
fstp
xchg
mov
test
mov
in
iret
and
or
push
sti
mov
inc
stos
aas
mov
dec
adc
xchg
fist
out
int
add
xor
(bad)
sbb
sahf
xchg
jp
mov
inc
ror
jae
lock
rol
fist
xor
not
pop
xchg
jp
repz
arpl
sbb
inc
pop
adc
jbe
jne
shr
xchg
xchg
into
popa
(bad)
sar
mov
and
xor
sub
pop
(bad)
xor
sbb
or
pop
(bad)
sti
add
jno
jo
push
or
adc
xor
and
dec
loope
mov
sbb
stc
aas
jb
ins
jge
retf
pop
mov
pop
stos
aas
jmp
mov
std
pushf
mov
pop
hlt
lea
and
mov
call
enter
mov
jne
popa
scas
cmps
sbb
pop
mov
or
sbb
jle
mov
lods
mov
xor
jmp
daa
fild
rcl
in
rcr
imul
and
sub
jnp
jecxz
dec
(bad)
push
fbld
mov
sbb
jo
ja
repz
test
adc
push
mov
pop
aad
jbe
mov
retf
xor
ja
inc
sub
dec
or
cli
iret
shr
inc
fld
mov
or
enter
ins
cmp
mov
mov
dec
loopne
jnp
mov
pop
pop
test
and
outs
std
cmp
rcl
scas
shr
(bad)
fcmove
test
mov
dec
pushf
push
iret
mov
retf
ins
xor
(bad)
data16
int
pop
xor
retf
shr
push
rcl
or
jecxz
(bad)
das
popa
pop
push
retf
dec
ss
nop
cli
imul
inc
adc
(bad)
lock
fcom
mov
into
dec
(bad)
mov
inc
out
out
jmp
int3
xchg
mov
adc
in
mov
xchg
dec
adc
stos
and
add
aad
aam
mov
sub
add
addr16
push
scas
cmp
add
inc
mov
and
jo
lahf
(bad)
inc
pop
pop
jmp
jp
icebp
mov
mov
stc
into
or
std
imul
fwait
jmp
pop
push
jnp
and
test
data16
popa
inc
leave
push
sahf
icebp
mov
push
mov
xor
dec
mov
mov
imul
sbb
ins
sbb
fdiv
xor
push
out
out
rol
inc
xchg
in
inc
call
shl
pop
pop
dec
retf
mov
stc
pop
in
test
call
inc
mov
xlat
push
sub
cmps
inc
cmps
pusha
xchg
mov
push
pop
or
daa
sti
adc
(bad)
xchg
imul
mov
pop
and
imul
addr16
push
jns
dec
mov
add
loopne
aaa
dec
(bad)
cmp
ror
out
es
(bad)
push
test
(bad)
rcl
or
sbb
xchg
mov
cmp
push
inc
push
scas
adc
add
sar
or
lds
dec
pop
xchg
fsub
retf
mov
fcom
retf
pop
inc
inc
xlat
or
ins
icebp
jmp
lock
pop
pop
and
mov
push
rcl
pop
mov
mov
(bad)
adc
add
sbb
jg
jecxz
hlt
sub
adc
lock
data16
imul
jb
imul
dec
push
push
mov
icebp
push
out
idiv
sub
cs
shl
push
mov
lea
mov
push
pushf
mov
mov
jmp
jmp
xchg
add
dec
xchg
mov
mov
pop
sub
xchg
adc
sub
mov
xchg
cs
add
pop
push
mov
mov
cmp
mov
cmc
mov
jb
bound
mov
aas
bound
and
add
loop
push
sub
fstp
jecxz
cmp
retf
pop
mov
ja
loop
enter
add
push
mov
cdq
add
jns
jae
fwait
xor
shr
lock
cmp
dec
dec
hlt
push
mov
idiv
out
stos
jno
int3
outs
lds
out
adc
out
mov
add
jecxz
popf
add
xor
push
idiv
(bad)
dec
outs
js
nop
dec
js
inc
fdiv
ss
mov
mov
inc
fyl2x
inc
test
icebp
adc
cmp
pop
popa
and
fs
mov
and
inc
rcr
retf
sub
mov
shl
icebp
pop
jge
xchg
or
xor
jbe
daa
sbb
add
rol
add
cmp
les
mov
dec
xor
leave
jne
ja
scas
retf
push
push
jecxz
inc
pusha
or
push
aam
xchg
das
mov
push
pop
push
clc
dec
xor
sbb
pop
inc
inc
or
cmp
out
cmps
sub
push
pop
sub
fild
popf
cdq
jcxz
(bad)
aaa
nop
push
mov
pop
mov
xor
clc
xchg
ret
pop
lahf
cmp
mov
out
ins
popa
inc
mov
or
mov
xlat
int3
cs
push
or
xchg
les
sti
pop
dec
cmp
xor
adc
inc
xor
sbb
addr16
cmps
xchg
imul
mov
push
adc
push
sti
hlt
dec
inc
jmp
ins
mov
pop
mov
or
mov
xor
cwde
dec
aam
inc
mov
inc
scas
cmp
lahf
mov
mov
fwait
ror
xor
jb
fisttp
(bad)
shr
push
call
addr16
loopne
shl
mov
js
fmul
je
(bad)
test
call
mov
sub
out
(bad)
je
push
vpshad
dec
adc
arpl
aam
push
xchg
mov
mov
jle
push
retf
pop
mov
adc
(bad)
dec
rcr
retf
xor
call
fnstsw
cmp
ret
dec
pop
pop
in
call
fldenv
int3
adc
xchg
aam
add
mov
scas
jno
rcl
idiv
sub
or
ret
mov
mov
aas
sbb
lods
mov
(bad)
xor
test
call
pop
cmc
jmp
repz
sub
mov
push
into
gs
stos
push
push
xchg
stos
xchg
and
jbe
adc
fnstenv
fld
imul
cmp
xor
stos
es
cmp
jne
repnz
sbb
cld
fisttp
inc
push
sti
or
xchg
fldenv
out
sbb
jecxz
or
imul
cli
sbb
inc
dec
stc
stos
xor
mov
arpl
dec
shl
fs
lods
fbstp
or
xor
lock
retf
cli
jmp
jb
adc
mov
mov
bound
push
icebp
push
xchg
xor
or
push
repz
fnstcw
nop
mov
mov
xchg
repz
cmp
pop
outs
ret
push
outs
adc
mov
xchg
bound
es
retf
aam
jg
out
pop
loopne
adc
rcl
lods
push
jo
shr
in
test
retf
xchg
cdq
push
mov
sti
out
mov
in
mov
sub
push
sub
icebp
icebp
inc
add
inc
das
xlat
pop
pop
cmp
mov
int
inc
dec
push
and
cdq
(bad)
mov
in
ret
inc
mul
mov
es
add
shl
pop
(bad)
jns
sbb
jmp
push
mov
cmp
dec
mov
shl
stos
add
dec
in
sbb
mov
jmp
jno
inc
xchg
sbb
jp
into
inc
xchg
scas
add
jbe
xchg
or
adc
loope
cwde
mov
icebp
sbb
xchg
and
pop
push
mov
mov
dec
fistp
ja
loope
out
hlt
mov
aam
inc
fstp
mov
fidivr
inc
sar
add
inc
mov
mov
lea
cli
inc
stc
push
pushf
inc
sahf
adc
jle
jnp
jae
das
dec
xor
in
xor
xor
pop
retf
scas
cdq
stos
xor
fs
je
xor
shr
jmp
sbb
rcl
push
not
pop
or
inc
call
hlt
sub
adc
cmp
test
mov
sub
outs
push
add
xor
adc
bound
cmc
inc
inc
call
call
loope
sbb
push
or
cmp
ins
fadd
loope
push
in
push
sub
sbb
jbe
cmp
aam
loop
mov
movs
cmp
adc
pop
into
dec
xor
mov
shr
test
jle
inc
jl
mov
cs
mov
xor
add
std
int
sahf
in
int3
sub
fs
xchg
into
or
and
sub
jp
push
dec
push
mov
pop
lds
hlt
sahf
in
cmp
test
jmp
cmp
cmp
mov
cmp
push
ror
mov
call
mov
addr16
fs
stc
dec
xchg
mov
mov
aam
jnp
mov
pop
(bad)
push
aad
mov
and
xor
xchg
out
dec
out
pop
pop
sub
enter
mov
in
sub
scas
adc
iret
clc
jg
ret
xchg
stos
or
xor
or
mov
pop
xchg
pop
cmc
pop
and
sub
leave
mov
jg
test
dec
dec
push
(bad)
cs
sub
clc
cs
pop
push
sub
and
outs
sub
jae
pop
sbb
add
daa
fisub
mov
imul
ds
add
mov
inc
imul
enter
jnp
jge
cmp
dec
imul
mov
lock
aad
cdq
or
retf
jecxz
add
sub
xlat
movs
add
cld
xor
sbb
pop
jnp
cmp
test
xchg
psrlw
icebp
mov
repz
jae
lea
or
fs
rcr
ret
jnp
lods
sbb
retf
dec
stos
pop
or
pop
jb
or
adc
adc
fidivr
mov
add
imul
(bad)
mov
rol
ret
jne
mov
add
fwait
push
cmp
inc
jae
push
jg
jo
popa
leave
and
jl
inc
ja
sbb
jle
sbb
sub
mov
jnp
push
loope
pop
xor
scas
cmc
js
jmp
popa
mov
mov
jns
pop
test
jmp
cmp
jmp
and
movs
push
and
inc
mov
(bad)
and
pop
ret
jb
xchg
stos
or
adc
fcomp
rol
fnstenv
add
fidivr
mov
jns
adc
fcmovu
jmp
inc
adc
lods
mov
cli
das
ror
retf
and
dec
cmp
fwait
push
cmc
push
test
jmp
cmp
mov
jne
cmps
test
xchg
inc
lea
push
pop
lds
aad
sub
push
cmps
retf
pop
in
aaa
mov
sub
icebp
push
jno
push
pop
shl
fs
mov
movs
shr
ss
dec
dec
dec
jecxz
in
or
aam
mov
dec
add
cld
cmp
dec
jecxz
ret
and
(bad)
rol
adc
retf
adc
jo
add
adc
daa
add
test
fdivr
lea
pop
stos
mov
loope
jo
lea
xor
into
jne
rdmsr
ins
add
retf
inc
bound
jl
xlat
add
sti
aas
int3
push
mov
inc
mov
in
mov
sub
stos
fisttp
icebp
aas
xchg
cli
pusha
in
ss
ins
stc
jno
sbb
(bad)
cmp
retf
lock
and
push
push
adc
mov
sar
jge
hlt
jle
inc
mov
or
lods
repnz
push
xor
ins
pop
hlt
out
lds
call
jne
repnz
inc
add
cmp
dec
sub
mov
sar
jnp
sbb
ficom
pop
sahf
outs
jmp
fistp
mov
cwde
xor
adc
mov
aaa
fmul
cli
icebp
mov
mov
xchg
call
adc
push
inc
adc
outs
(bad)
imul
sar
xor
add
jae
call
std
xchg
mov
icebp
jne
cmp
adc
ja
call
shl
sub
in
cs
sti
inc
jne
jne
test
pop
xchg
inc
clc
(bad)
pop
test
jmp
repz
jecxz
pop
out
aad
daa
ret
outs
inc
dec
mov
aas
inc
adc
in
fisttp
dec
cmp
retf
sbb
retf
loope
ror
cmc
mov
ss
adc
pop
daa
push
xchg
pop
dec
sbb
fldcw
xchg
into
lahf
ret
mov
fwait
aaa
stc
sub
cs
dec
sti
mov
lahf
popa
sub
ret
dec
inc
mov
repz
jb
mov
dec
adc
push
xchg
(bad)
cmp
mov
sub
jle
inc
cmps
js
(bad)
aad
dec
shr
inc
out
or
loopne
inc
jnp
xlat
test
ror
stc
sar
mov
xor
fild
cmp
push
sub
les
icebp
stos
mov
pop
pop
call
xchg
sar
sbb
add
aas
xor
inc
mov
sub
cmp
sub
xor
push
mov
mov
fsubr
stos
fnsave
mov
push
mov
and
sahf
push
(bad)
mov
mov
inc
leave
adc
div
ds
call
sti
movs
mov
push
movs
mov
lea
icebp
mov
stos
(bad)
stos
mov
jb
add
dec
cmps
nop
xor
cli
inc
dec
jecxz
call
mov
adc
sbb
les
int
retf
mov
idiv
popa
in
mov
mov
push
pop
cmp
mov
stos
or
aaa
outs
sbb
sahf
fst
mov
sbb
arpl
cli
shl
or
cwde
mov
dec
icebp
aam
lea
mov
and
mov
cmp
(bad)
cmp
inc
fsubr
mov
inc
aas
push
js
push
cmps
xchg
inc
pop
popa
inc
retf
jbe
fwait
or
les
call
cwde
nop
dec
scas
adc
pop
sbb
jge
cs
mov
rcl
js
fisub
or
adc
sub
sbb
push
add
dec
stc
stos
pop
out
aad
outs
xor
fild
sbb
fild
cmc
test
ins
sub
sub
call
cmp
out
jge
inc
cmp
jp
add
mov
inc
scas
and
pop
cmps
jl
ins
nop
dec
jns
pop
push
imul
mov
jb
and
cmc
mov
jb
iret
aaa
xchg
xchg
dec
dec
inc
ret
call
pop
push
mov
sbb
sar
lods
loope
fsubr
push
imul
bound
sbb
xor
or
push
and
jo
into
cdq
dec
mov
inc
jbe
jne
into
or
movs
fstp
mov
sub
or
dec
mov
call
dec
pop
mov
mov
fmul
add
rdpmc
daa
test
fs
sbb
(bad)
enter
popf
add
outs
or
fcom
or
imul
and
cwde
cli
mov
cli
loop
test
mov
sar
jno
(bad)
ds
(bad)
(bad)
or
test
add
in
lds
add
popa
jmp
cmp
bound
dec
out
add
mov
jns
mov
call
out
mov
add
icebp
rcl
fiadd
jmp
inc
jb
iret
jg
dec
mov
mov
nop
mov
dec
(bad)
pop
add
imul
arpl
jno
mov
cli
sub
clc
scas
mov
test
int
aad
in
inc
and
fbld
ss
mov
retf
xchg
cs
cmp
dec
lods
pop
cmp
jmp
adc
or
ins
add
or
mov
xor
and
and
mov
push
(bad)
loope
icebp
mov
outs
add
or
js
add
es
mov
gs
je
dec
xchg
mov
rcr
sub
movs
repz
ror
xchg
mov
xchg
push
adc
inc
(bad)
sub
cli
mov
sub
in
sub
sub
jge
inc
js
inc
stc
cmps
call
and
pusha
jmp
ficomp
scas
mov
aas
retf
push
icebp
mov
xor
sub
dec
adc
or
sub
popf
sti
jp
cmp
jns
fwait
add
pop
add
or
ret
(bad)
not
jg
nop
imul
mov
push
das
push
lahf
cmp
xchg
mov
sahf
add
push
jg
and
ror
lock
setge
mov
jle
add
ja
mov
outs
sbb
outs
fmul
fmul
cmp
icebp
mov
lock
push
jle
or
fwait
mov
jnp
mov
call
mov
xor
and
add
xor
and
sahf
and
fisub
add
out
call
fst
cwde
fild
shr
(bad)
sbb
pusha
in
add
aad
jnp
pop
mov
mov
xor
push
add
shr
rcr
mov
or
popa
jp
stos
push
jns
xor
push
and
push
arpl
lds
add
test
arpl
jl
data16
cdq
cwde
cld
leave
xchg
cmp
lahf
mov
xchg
xchg
out
ror
jg
push
add
adc
mov
adc
and
sub
leave
add
pop
or
(bad)
sbb
add
mov
mov
sub
push
inc
xchg
mov
mov
dec
or
inc
dec
repz
out
or
inc
or
ret
dec
sar
push
and
mov
inc
dec
push
(bad)
and
ins
push
fadd
stos
adc
mov
sbb
repz
sub
outs
fadd
pop
jo
cmps
cmp
and
out
shl
ds
push
mov
inc
xor
pop
ret
push
add
xor
lds
xchg
and
xor
call
sti
jo
cmp
pop
and
pop
pop
jo
mov
xor
jle
mov
ins
pop
ds
pop
and
mov
mov
xchg
das
mov
scas
call
sub
or
arpl
cmp
mov
out
xchg
daa
mov
sub
lods
jno
in
jae
sti
(bad)
ss
push
pop
jne
mov
sub
aam
rcr
jmp
adc
cmp
mov
(bad)
shl
hlt
fs
sub
sub
enter
fiadd
push
xor
mul
mov
jae
lds
ficom
fcmovu
inc
ins
aaa
das
in
dec
and
and
and
arpl
push
aad
and
mov
pop
push
test
sbb
pinsrw
loope
(bad)
push
sti
leave
mov
jecxz
outs
jle
inc
(bad)
adc
cdq
or
sbb
fxch
xchg
pop
in
outs
and
ret
mov
adc
psrlw
mov
push
pop
fbld
icebp
popa
jmp
rcr
sub
sbb
hlt
xchg
jno
inc
(bad)
fmulp
add
pop
cmps
add
cmp
aad
shl
xor
fwait
jae
inc
es
and
mov
in
shl
jle
cmc
clc
pop
sub
ret
in
rol
shl
nop
jmp
sub
mov
into
pop
or
lods
cdq
jecxz
inc
pop
vandnps
mov
xchg
xor
call
push
or
sbb
mov
sbb
in
leave
cdq
jae
inc
jae
clc
aad
outs
or
inc
xor
pop
icebp
sbb
fbstp
xor
pop
outs
scas
jmp
sub
dec
sbb
aad
in
jp
sbb
mov
out
add
jne
repnz
call
and
jge
out
popa
adc
and
jo
popa
sub
jmp
mov
add
adc
loop
out
xchg
clc
push
dec
sub
adc
je
mov
lods
mov
sbb
mov
imul
out
jns
push
sub
sahf
loope
add
push
repnz
sar
push
jle
add
enter
sahf
test
jno
mul
and
lock
push
hlt
loope
cmp
xchg
ror
lds
adc
mov
(bad)
mov
mov
xchg
sub
inc
mov
pop
mov
ja
aam
fdivr
and
loopne
aam
ds
daa
or
imul
inc
jmp
stos
inc
jmp
jmp
push
pushf
jmp
inc
inc
adc
in
xor
or
ins
inc
fwait
jp
xor
or
jnp
xor
adc
xor
inc
adc
jne
pop
mov
aas
(bad)
sub
stos
in
adc
pop
mov
jnp
cmp
jb
adc
dec
sbb
mov
cs
shr
dec
test
dec
sbb
cdq
inc
fldenv
dec
popa
mov
mov
jns
mov
push
mov
or
mov
stc
mov
test
fcmovnu
cmp
adc
jno
push
or
stos
mov
stos
pop
or
(bad)
mov
add
cmp
mov
sub
(bad)
outs
or
jns
arpl
imul
jns
imul
shl
scas
movs
xchg
retf
mov
add
xchg
cdq
mov
push
in
lea
lods
mov
dec
xor
and
test
xchg
out
mov
rol
pop
mov
outs
inc
jle
mov
test
retf
loope
sahf
or
pop
shl
cmp
addr16
mov
pop
xchg
pop
es
aaa
sub
aam
div
adc
jae
adc
mov
sub
je
cmp
jmp
or
call
and
mov
in
icebp
dec
(bad)
scas
mov
cld
sbb
adc
in
add
add
pop
sahf
push
mov
sub
mov
sub
cmp
adc
xor
push
mov
fiadd
mov
pop
sub
or
(bad)
sbb
test
cmp
test
add
cs
inc
jo
adc
push
sbb
jmp
fnstenv
fmul
dec
movs
pop
fisttp
or
test
cmps
inc
sahf
stc
jmp
stos
stc
cmc
push
(bad)
mov
xchg
xchg
mov
pushf
sbb
mov
mov
int3
mov
ret
mov
cmp
fcmovb
or
fdivr
push
push
add
jg
cmp
jge
push
rep
sar
mov
sub
jo
aad
cld
cmps
jne
inc
adc
pushf
push
(bad)
sub
clc
inc
icebp
stos
xchg
sub
mov
jmp
and
add
cmp
dec
shl
popa
mov
or
mov
movs
sbb
dec
dec
cmps
out
stos
movs
leave
xchg
lds
jbe
dec
enter
jl
sub
cmp
mov
icebp
jb
mov
leave
adc
cli
sti
lods
fidiv
or
call
stc
bound
pop
ror
push
rcl
test
inc
inc
popf
mov
jnp
leave
xchg
push
leave
jp
mov
cmp
das
scas
rcl
cmc
mov
mov
ins
add
jge
sti
movs
mov
fwait
retf
rol
je
loope
or
fwait
leave
mov
mov
or
jg
or
cli
push
out
dec
xchg
sub
pop
push
sbb
enter
xchg
gs
cmp
or
adc
mov
push
je
add
pop
push
mov
cwde
jg
or
sub
pop
mov
mov
add
loopne
cmp
cmps
std
sub
cmp
fnsave
jl
lock
mov
xchg
imul
jecxz
push
shl
or
mov
add
imul
gs
cmp
inc
imul
aaa
adc
push
push
(bad)
(bad)
xor
adc
jmp
nop
xor
sub
frstor
test
fs
imul
repnz
int
(bad)
sub
jae
mov
cmp
hlt
js
pop
push
sub
stos
or
popf
fwait
icebp
call
sub
jge
in
sub
(bad)
jp
push
retf
inc
addr16
sbb
sub
sti
popa
mov
mov
sbb
mov
fidiv
adc
xor
call
jnp
inc
sti
outs
mov
js
xor
dec
cmc
retf
call
mov
jne
fxch
neg
dec
mov
jo
popf
inc
(bad)
daa
ja
leave
out
and
test
fstp
movs
xlat
fcomp
jno
push
outs
cmps
dec
mov
adc
jmp
push
sub
push
mov
popf
in
fcomi
icebp
mov
repnz
cmp
push
sbb
push
jge
inc
shl
ins
cmp
dec
mov
popf
push
fucomi
or
adc
jo
in
mov
cmp
aam
sti
popa
jge
xchg
mov
sbb
sbb
or
fsubr
mov
outs
rcl
mov
mov
mov
xchg
movs
inc
shl
mov
mov
inc
or
dec
xor
outs
mov
loopne
add
and
ins
je
push
inc
jo
mov
or
pop
ret
mov
mov
ret
arpl
out
jge
xchg
inc
pop
shl
jg
pop
ins
rep
lea
jo
mov
test
pusha
repz
iret
cmp
loopne
popa
test
popa
rcl
or
out
add
clc
and
inc
xor
xchg
xchg
icebp
mov
bound
inc
cld
jle
mov
popa
cwde
inc
fcom
cmp
cwde
lahf
and
mov
dec
or
cmps
mov
mov
and
jp
jmp
xchg
fidivr
inc
mov
aam
mov
pop
xchg
xor
or
mov
ror
pop
dec
aad
movs
les
pop
inc
ja
nop
fld
(bad)
fmul
add
addr16
rcl
and
or
pop
cmc
call
nop
add
pop
push
xor
pushf
retf
retf
xchg
mov
push
outs
outs
enter
sti
out
jns
adc
mov
ror
push
stc
leave
(bad)
adc
call
xchg
fcomp
xor
jmp
xchg
out
lods
xor
mov
idiv
sbb
icebp
fst
xor
data16
inc
jb
mov
(bad)
jmp
push
mov
sub
jecxz
mov
rcl
data16
and
loopne
adc
inc
stos
jmp
jnp
xor
inc
rol
jb
test
es
xor
pcmpeqb
(bad)
or
sub
mov
iret
add
mov
sti
std
dec
shr
mov
add
int3
jmp
xchg
cmps
sahf
outs
add
(bad)
jmp
clc
movs
(bad)
mov
jne
leave
mov
icebp
mov
retf
dec
lods
sub
addr16
movs
aad
mov
xor
inc
cmp
jae
(bad)
push
mov
aad
xor
jnp
mov
repz
hlt
dec
scas
push
fld
cld
fdivr
out
fcmovbe
sbb
ins
add
push
mov
sbb
or
inc
test
cwde
sub
nop
call
and
rcl
movs
inc
bound
inc
mov
mov
dec
or
pusha
mov
xor
das
lahf
or
(bad)
loope
sbb
push
xchg
cmp
pop
cmp
sbb
mov
or
jle
daa
clc
in
jne
add
retf
out
icebp
mov
stos
imul
dec
mov
jns
daa
imul
push
and
jle
stos
xchg
push
loop
shl
pop
mov
clc
fld
or
ret
mov
jge
fsub
sti
add
shl
cmp
pop
sub
xchg
jecxz
push
adc
addr16
mov
sub
hlt
icebp
xor
int
test
imul
and
xor
jno
dec
pop
and
add
xlat
sbb
repz
stos
xchg
movs
pop
add
mov
and
xchg
hlt
std
test
sar
shl
mov
lea
cdq
and
jg
fsub
jge
clc
adc
mov
into
imul
cmp
mov
lds
ret
out
mov
imul
push
(bad)
push
cwde
xlat
ss
inc
fs
mov
add
push
jmp
pop
test
mov
xor
cmp
sar
loopne
mov
pop
gs
popf
cmps
fwait
scas
call
stos
pop
scas
bound
jle
or
jnp
dec
push
sub
cmp
mov
mov
add
inc
pusha
lods
imul
adc
aas
or
push
out
sbb
cmp
jb
pop
sbb
movs
cmp
pop
cmp
adc
in
lods
js
outs
rcr
mov
in
(bad)
and
out
fild
stos
fisubr
stos
or
adc
mov
jnp
ds
neg
aad
pop
loopne
xor
gs
arpl
shr
inc
out
sbb
xor
mov
inc
pminsw
imul
fld
nop
les
in
fmul
rcr
inc
fs
jno
in
pusha
mov
in
std
mov
jge
retf
dec
mov
push
stc
icebp
lock
pop
loop
cmp
and
out
adc
rol
ja
mov
push
adc
jmp
fsub
std
outs
mov
cmc
jo
addr16
and
xchg
loopne
cmp
sub
clc
xlat
aaa
sbb
inc
mov
lock
jno
mov
dec
mov
adc
arpl
mov
popa
push
push
mov
xchg
les
pop
jecxz
inc
or
push
cwde
in
jmp
pop
and
fisubr
movs
push
mov
jns
sbb
pusha
rcl
xchg
lods
loope
sbb
cmp
mov
jmp
lea
xor
adc
fdivr
add
ins
push
push
jl
cdq
(bad)
(bad)
jge
cmc
push
or
mov
jmp
pop
daa
mov
mov
outs
lds
xor
pop
sar
sub
repz
shl
scas
and
add
test
lea
ret
mov
shr
stos
sub
dec
jge
jb
cs
movs
rcl
(bad)
dec
push
inc
jns
jno
push
mov
xor
add
or
jmp
retf
jae
mov
dec
fwait
cld
mov
cmp
sbb
jp
(bad)
iret
fsub
mov
das
push
popf
adc
adc
mov
pop
jmp
mov
xchg
stc
dec
sbb
mov
cwde
es
mov
push
or
js
imul
retf
jae
outs
inc
sbb
lods
add
xor
outs
or
push
aad
aad
push
mov
mov
or
xchg
dec
mov
push
test
cmp
(bad)
call
push
add
in
push
xchg
icebp
push
stos
ret
nop
pop
call
data16
inc
mov
call
push
cmp
test
jecxz
pop
rcr
jne
mov
addr16
in
inc
pop
xchg
inc
add
fnstenv
jmp
sub
les
out
mov
inc
or
fwait
ds
fisttp
out
push
hlt
xor
jle
lock
ss
sbb
(bad)
idiv
test
cmp
or
cli
push
retf
ins
sbb
mov
pushf
retf
sub
xchg
cmp
fbld
fnclex
mov
sar
dec
scas
xor
jo
fwait
pop
sbb
add
fs
ret
imul
push
mov
or
mov
data16
mov
xchg
mov
cmps
in
cmp
mov
add
jnp
pop
sar
push
cli
push
push
xchg
jnp
adc
(bad)
push
sub
dec
inc
and
out
and
xor
int
jo
mov
or
adc
cmps
fstp
jnp
inc
rcl
or
fsub
mov
push
dec
mov
sub
mov
mov
mov
jnp
dec
test
arpl
int
mov
inc
jmp
mov
mov
cli
jo
mov
push
xlat
xor
and
ins
stos
ja
mov
pop
les
adc
hlt
push
nop
out
xor
cli
jl
or
inc
fild
or
add
fs
jl
push
inc
stc
imul
sahf
fwait
push
xchg
xor
mov
pop
mov
and
xchg
pop
mov
add
rcl
imul
add
adc
call
shr
mov
popa
jp
sbb
inc
and
mov
xor
push
sub
jnp
dec
adc
jnp
frstor
jecxz
rcr
lods
cmp
push
stos
xlat
bnd
ret
fndisi(8087
pop
test
in
scas
mov
pusha
jl
lock
pop
out
inc
xor
stos
push
popf
pop
xchg
out
jb
sahf
mov
add
in
and
popa
pop
mov
jne
adc
mov
inc
mov
dec
adc
and
push
jmp
cmp
data16
cmc
dec
icebp
or
out
cld
sbb
not
jge
push
fidiv
and
sbb
push
outs
sbb
sub
sub
ficomp
jae
add
mov
mov
push
inc
jg
and
jecxz
xlat
mov
jb
mov
jl
or
fwait
mov
mov
dec
(bad)
sub
jg
xchg
xor
and
mov
test
rcl
inc
sub
sti
or
stc
in
bnd
mov
xchg
lea
push
fs
cmp
fwait
lock
jnp
ret
cmp
dec
ins
fnstenv
xor
out
int3
dec
inc
pop
xchg
sub
sub
dec
jmp
out
mov
jns
mov
xor
inc
jle
dec
mov
jno
xchg
mov
mov
push
fwait
or
test
das
mov
sbb
cdq
pop
scas
loopne
sbb
std
clc
sbb
jbe
jo
jge
xchg
dec
test
pop
pop
gs
aas
(bad)
imul
sub
sub
jmp
fisubr
cmp
sub
call
xor
sbb
ja
pop
adc
push
shr
mov
xchg
mov
jb
call
sub
add
and
and
sub
shl
mov
or
dec
imul
xchg
pusha
and
inc
test
pop
adc
mov
retf
add
pop
push
in
sahf
movs
sbb
add
icebp
cmp
xchg
jmp
fs
aam
inc
dec
stos
cdq
sahf
and
out
mov
adc
sub
das
push
jnp
jg
repnz
movs
cmps
je
xor
push
sbb
ret
test
add
fsubr
leave
mov
push
cmc
sar
jmp
int
je
addr16
in
jb
xchg
sahf
clc
mov
mov
sub
jae
and
(bad)
xchg
and
sar
daa
adc
jno
or
std
pop
out
inc
loope
mov
jo
leave
movs
xor
retf
(bad)
cmp
les
(bad)
xor
rcr
movs
jl
mov
inc
repz
inc
mov
sbb
loope
cmps
push
enter
ror
push
addr16
mov
and
and
div
mov
outs
push
xor
(bad)
push
pop
adc
ins
imul
in
add
inc
fidivr
inc
pop
sti
cmp
hlt
data16
adc
jecxz
inc
pop
dec
cdq
jae
xor
push
div
push
or
sbb
daa
xchg
sti
mul
jb
mov
retf
pop
repz
mov
icebp
les
and
mov
jnp
add
mov
mov
lea
cmps
mov
cld
push
enter
add
jecxz
and
dec
inc
push
mov
fst
or
xlat
inc
lods
pusha
xor
in
outs
jno
or
xchg
aad
in
sub
pop
mov
cmp
jnp
cdq
cli
push
ins
xor
sti
lods
pop
(bad)
int
mov
stos
ficomp
scas
cs
and
ror
pop
mov
retf
arpl
and
fimul
icebp
out
pop
jno
add
cld
pop
and
mov
cmovne
adc
sbb
inc
jg
ins
ss
movs
das
or
mov
mov
into
scas
adc
jbe
add
mov
adc
mov
out
mov
xor
daa
inc
jl
out
jle
push
lea
adc
dec
mov
pop
in
cmp
retf
mov
ret
mov
sbb
jb
jb
or
sbb
out
jns
ror
add
outs
call
fild
adc
jne
ret
mov
mov
aas
(bad)
sbb
and
into
dec
jmp
dec
push
mov
cmp
shr
sub
(bad)
in
sub
mov
xchg
jmp
and
mov
sub
mov
ficomp
jmp
xlat
mov
repz
add
push
fild
outs
mov
push
into
or
jae
loope
stc
or
jb
lds
push
jmp
jmp
cdq
test
mov
dec
add
add
jae
pushf
and
push
xchg
in
adc
mov
adc
sub
fsubr
adc
adc
mov
add
xor
cmp
iret
jl
in
sub
add
cs
or
mov
mov
and
int3
dec
jmp
ins
and
or
adc
pop
into
stc
push
cdq
add
sti
sub
repnz
in
or
rcl
mov
inc
lds
(bad)
push
xchg
mov
call
sub
jmp
dec
mov
or
push
retf
(bad)
mov
fwait
or
in
mov
imul
or
dec
jp
lahf
js
xor
rcr
and
dec
test
pop
mov
xchg
stc
mov
xchg
and
ret
ja
mov
jmp
nop
push
in
cli
mov
ret
retf
sub
adc
cmp
sub
popa
loop
icebp
sar
std
add
pushf
iret
int3
dec
mov
mov
sbb
dec
sar
mov
shl
pop
push
(bad)
or
cli
dec
ja
add
cmp
shl
inc
lock
loope
iret
fldenv
or
ins
cmp
pop
rol
xchg
das
loopne
xor
loope
das
outs
or
xor
lock
mov
mov
pop
add
jns
jae
mov
stos
mov
mov
or
gs
sub
je
jo
adc
push
stc
and
sbb
adc
adc
fmul
je
inc
and
push
pop
in
jg
add
jp
pop
push
jmp
cmp
repz
xor
gs
inc
stc
cmp
push
dec
xor
in
or
(bad)
push
xor
cli
jmp
or
sahf
cs
jg
call
pop
fwait
repnz
xor
xchg
rcl
dec
shr
clc
and
gs
repz
or
sub
out
test
loop
dec
or
jno
retf
xchg
add
mov
xlat
lahf
pop
mov
and
push
sub
mov
jl
sub
mov
lahf
xchg
jg
adc
jns
push
jg
cwde
mov
(bad)
iret
xor
pop
ror
fs
push
or
fdivp
fsub
sub
iret
outs
jp
adc
loop
xor
sbb
loop
cmp
push
pop
adc
repnz
jecxz
sub
push
in
jb
inc
pop
mov
inc
nop
daa
dec
xor
bswap
jmp
fstp
cmps
in
data16
mov
shl
aad
das
aam
inc
jnp
add
mov
xchg
xchg
mov
pusha
add
in
jb
leave
nop
cdq
push
pop
(bad)
or
dec
popf
sbb
cmps
inc
sahf
xor
jge
pop
and
adc
xor
dec
xchg
mov
pop
movs
push
lea
stos
mov
push
mov
mov
(bad)
int
jl
xor
fs
push
lahf
push
stos
xchg
mov
sbb
repz
in
add
aas
mov
jns
or
cmp
and
call
shl
jl
mov
ja
push
pop
(bad)
mov
cmp
pop
sub
fwait
adc
movs
sbb
enter
arpl
sbb
gs
retf
xlat
cmp
shl
dec
sub
xor
or
pop
mov
xor
dec
cli
push
dec
mov
add
retf
(bad)
int3
pop
lds
xor
dec
repz
mov
icebp
jmp
pop
sbb
xchg
aad
icebp
cmps
sub
xor
adc
sbb
hlt
lea
or
pop
loopne
or
xchg
pop
fwait
mov
jg
cdq
jns
dec
jns
dec
and
mov
cmp
mov
mov
or
xor
(bad)
push
sti
lods
in
inc
mov
push
mov
stos
inc
lods
loopne
and
mov
pop
push
xor
sar
clc
adc
dec
mov
loope
sub
mov
or
sub
xor
jnp
in
leave
and
push
imul
mov
jecxz
and
cld
mov
jg
pop
in
mov
ficomp
adc
ret
jae
jg
outs
push
cs
mov
jns
mov
pop
ficom
nop
push
lods
ins
jmp
push
in
sbb
into
inc
jecxz
mov
dec
push
adc
dec
sti
xor
jnp
ret
jecxz
test
jae
stc
mov
bound
aas
inc
loope
cwde
enter
add
adc
lock
sti
jmp
sbb
jns
push
xchg
jo
scas
es
cmc
xor
stos
(bad)
sahf
retf
aas
mov
dec
mov
test
out
mov
aas
cmps
(bad)
fild
int3
scas
inc
imul
adc
jecxz
pop
cdq
inc
jb
jecxz
cdq
pop
sbb
test
jno
lods
aad
adc
fnsetpm(287
icebp
mov
mov
adc
push
push
sbb
cmc
jae
clc
fndisi(8087
mov
adc
adc
jle
push
(bad)
fld
fistp
rol
loope
jmp
stc
sar
fnstcw
cli
or
(bad)
shl
ret
es
mov
lds
jmp
pavgw
loope
shl
shl
je
mov
mov
or
inc
cli
jnp
jne
dec
in
xchg
repz
xor
pop
cmp
stos
test
call
movs
jmp
xor
add
jnp
and
sti
cmp
sti
sar
sbb
jp
dec
cmp
sub
icebp
cmp
or
xor
dec
jecxz
jae
push
sub
xor
cmp
sub
pop
aam
sahf
imul
inc
add
mov
sar
jnp
outs
adc
mov
jae
mov
xor
sub
xor
repnz
jae
sahf
or
shr
pop
ret
mov
test
out
xor
out
jp
aam
imul
mov
lea
push
add
fisttp
ds
retf
jb
or
adc
loope
in
mov
cmp
outs
cs
arpl
(bad)
mov
outs
lds
loop
xchg
add
not
xor
pop
fldenv
out
mov
sub
mov
inc
mov
mov
jmp
lock
cmp
dec
mov
adc
mov
ss
(bad)
xor
add
repz
cwde
cwde
scas
mov
push
hlt
stos
jge
scas
mov
out
dec
add
popf
fist
cld
dec
mov
and
dec
jnp
popa
addr16
jg
dec
xor
aas
mov
das
mov
(bad)
sub
add
sbb
pop
aaa
inc
jns
adc
push
jmp
out
xor
pop
sub
mov
fild
call
pop
xchg
jmp
loopne
in
push
ret
mov
push
mov
stc
in
mov
dec
ror
inc
(bad)
jns
sub
jae
ret
in
or
retf
pop
jmp
jmp
and
std
je
repz
jo
xor
in
pop
ins
dec
retf
add
hlt
outs
jge
dec
push
shl
inc
adc
outs
idiv
cmp
xchg
rcl
js
stc
inc
fnstcw
sar
int3
mov
pop
(bad)
aas
dec
popa
inc
cld
or
sbb
retf
push
stc
sbb
pushf
xchg
std
popa
cmp
test
cdq
cmp
cmps
mov
xor
pop
push
sub
dec
adc
loopne
sub
test
dec
scas
sub
push
dec
in
xor
lds
mov
outs
dec
ins
sub
jp
rcl
sub
sbb
xchg
stos
sti
inc
in
dec
xchg
dec
fstp
(bad)
test
mov
aas
pop
sidtd
inc
and
add
(bad)
and
add
mov
aad
sahf
(bad)
(bad)
jp
aam
mov
mov
das
and
mov
sbb
push
movs
push
stos
pop
int3
jno
or
sbb
mov
repnz
sti
cmc
ret
dec
retf
mov
pop
xor
mov
pcmpeqd
loop
ret
sbb
lea
jecxz
mov
mov
int3
push
repz
imul
call
dec
or
sub
daa
mov
xchg
call
xchg
inc
fmul
mov
pushf
mov
cmp
jmp
add
mov
add
pop
jbe
or
sbb
ret
jnp
shl
dec
pop
add
dec
pop
push
mov
or
pop
scas
ror
jge
fucomi
sbb
push
scas
mov
mov
xchg
retf
stc
shl
mov
fidiv
xor
and
xor
and
mov
push
repz
ret
imul
xchg
pop
out
sbb
sub
imul
pop
aad
sub
xchg
xchg
adc
jp
arpl
ret
jmp
pop
and
xor
or
stc
and
push
mov
test
arpl
mov
mov
mov
pop
js
cmp
call
sub
cmp
pop
icebp
cmp
jnp
mov
dec
add
pop
lds
xchg
pop
sar
addr16
rol
fyl2x
daa
dec
lahf
xchg
or
gs
rcl
add
inc
adc
push
inc
icebp
inc
sub
push
daa
popa
cmp
lods
dec
int
dec
in
shl
jno
or
cmp
push
popa
mov
xor
mov
dec
aaa
push
cmc
icebp
sbb
push
pop
cmp
add
mov
mov
sub
in
popf
mov
mov
push
ins
and
mov
in
jno
sub
outs
rcl
retf
ds
imul
loope
hlt
jae
adc
gs
jle
movq
push
cmp
xor
mov
dec
retf
inc
fstp
add
adc
sbb
shr
lock
(bad)
fstp
pop
(bad)
mov
out
xor
dec
aaa
sub
mov
push
das
mov
outs
pop
sbb
add
mov
mov
adc
cdq
test
ret
mov
je
cmc
adc
sti
add
fdivr
fs
or
xchg
jl
mov
test
(bad)
bound
and
jnp
sub
push
imul
push
loopne
jp
mov
jbe
xchg
aas
inc
add
jl
jno
cwde
sub
inc
cmps
sti
jnp
movs
sbb
jne
fnstsw
popa
mov
push
nop
icebp
pushf
inc
xor
jb
out
retf
gs
add
rcr
dec
mov
push
mov
cs
add
inc
push
and
cmp
jle
or
call
push
call
or
jmp
mov
fwait
inc
fcmovnbe
popa
or
xor
add
or
cmps
rcr
dec
and
xor
fisubr
push
jo
cmp
cmp
repz
adc
cmps
jo
push
cmc
xlat
stos
sub
xchg
outs
shr
push
pop
jbe
mov
and
adc
into
idiv
lea
xchg
xor
xchg
imul
addr16
rol
mov
push
add
cmp
and
mov
stos
loope
xor
test
cmp
xor
sub
cmp
lds
lds
push
je
stos
ja
call
jp
or
mov
rcl
pop
fwait
rcl
into
cmps
ret
out
clc
ret
mov
mov
sub
cmc
sub
neg
jg
and
pop
mov
dec
cmp
cwde
pop
sbb
mov
add
jmp
cmp
sar
rcr
sbb
push
mov
or
or
pop
(bad)
adc
out
cmps
sbb
call
int3
pop
push
mov
add
fisttp
(bad)
in
push
iret
add
arpl
jmp
xchg
shr
fisttp
in
or
retf
sbb
xchg
add
and
mov
clc
push
retf
adc
aam
pop
je
add
test
mov
stc
xchg
xor
in
cmp
mov
pop
aaa
gs
cs
bound
pop
fwait
mov
icebp
add
mov
mov
(bad)
sti
fisubr
(bad)
xor
(bad)
mov
add
shl
mov
push
arpl
div
arpl
sbb
push
jnp
scas
sbb
pop
(bad)
out
pop
cmp
mov
xchg
cmp
pop
jge
ds
jg
lds
call
cmp
push
xlat
scas
xchg
xor
pop
in
inc
retf
jnp
pop
mov
fbstp
sbb
pop
cmp
add
push
jp
cmps
in
sbb
sbb
push
dec
sub
imul
push
push
jle
jno
mov
cmp
aad
push
imul
mov
enter
(bad)
push
cmc
xor
retf
int
push
or
mov
push
retf
dec
cld
outs
and
and
cs
and
sar
pop
or
add
sti
add
mov
and
das
jg
sub
cmp
lods
inc
jp
movs
push
add
mov
int
fwait
jno
pop
rcr
and
pop
cmp
dec
aas
or
add
hlt
jle
jg
mov
dec
retf
push
or
loope
into
jno
repnz
jae
sub
rcr
jle
and
lea
nop
sbb
sub
loopne
mov
dec
inc
push
leave
movs
mov
sub
sbb
mov
mov
mov
jno
pop
dec
popf
jbe
mov
fisub
shl
push
cmp
ja
frstor
ror
sbb
sbb
std
pop
xor
add
shl
sahf
retf
mov
rcl
jo
jge
jo
add
sub
fldcw
jge
sbb
icebp
in
push
js
hlt
and
push
clc
ror
mov
shr
xor
xchg
jl
data16
xor
pop
(bad)
(bad)
pop
sbb
je
mov
cmovp
daa
outs
retf
sar
jbe
(bad)
add
jl
leave
call
stc
repz
sbb
call
xchg
shl
xor
idiv
push
dec
scas
push
jmp
repnz
pop
loope
xor
adc
jne
or
or
ins
lea
xor
jb
mul
mov
inc
pop
out
fwait
jnp
mov
(bad)
push
push
adc
aas
or
pop
jl
xchg
inc
add
jno
movs
jle
push
mov
push
push
push
test
aas
es
mov
xchg
or
jecxz
aaa
repz
mov
sub
test
test
adc
inc
outs
or
lahf
retf
(bad)
xchg
cmp
je
movs
mov
mov
dec
std
dec
in
cs
xor
and
inc
mov
inc
ss
sub
inc
sub
xor
sub
fnstcw
push
loope
xor
or
scas
push
retf
ins
popa
sbb
mov
stos
rol
inc
sti
movs
sti
xor
cdq
sahf
mov
jno
push
add
or
and
rcl
shl
sar
lea
cmps
pop
mov
cmp
retf
ins
push
inc
test
push
popa
daa
ror
sub
cmc
xlat
mov
call
mov
and
mov
aad
std
adc
aad
xor
fistp
ins
scas
std
fisttp
imul
(bad)
stos
test
scas
imul
ins
mov
jmp
xchg
stos
mov
dec
loopne
nop
aaa
rcr
cmps
pusha
stos
aaa
ds
add
cld
cmp
xor
sar
cmps
mov
pop
loopne
in
cmp
and
int3
jb
mov
lahf
ffree
cmp
scas
lea
imul
sub
pop
add
out
cli
jne
inc
enter
std
inc
or
adc
pop
pop
imul
inc
(bad)
enter
outs
ror
mov
out
leave
into
jp
sub
loopne
adc
std
call
outs
sbb
push
call
adc
add
cld
aas
test
push
fcom
push
xchg
shl
cmc
mov
jg
dec
fbld
daa
enter
das
mov
push
mov
add
mov
inc
mov
sub
pop
and
jp
mov
mov
mov
nop
or
xchg
xchg
push
ret
mov
xlat
dec
mov
mov
iret
xchg
push
jmp
shl
xor
jne
pop
xchg
sub
sub
xlat
ret
retf
jmp
mov
jg
push
(bad)
jns
xor
mov
push
in
inc
xor
push
push
pop
fs
mov
mov
push
retf
xor
adc
push
xor
and
test
pop
xchg
add
jnp
dec
xchg
aam
add
xor
addr16
xor
mov
pop
clc
pop
adc
retf
in
aaa
test
sbb
ret
js
das
call
dec
mov
jbe
test
sti
sbb
data16
shl
or
xchg
mov
sbb
cdq
repz
jnp
dec
inc
sbb
add
mov
sub
sti
push
adc
pop
lods
out
pop
jg
pop
mov
mov
push
inc
lock
xor
fistp
inc
xchg
xchg
adc
pusha
and
jb
push
ret
pop
adc
out
fstp
ret
das
ss
mov
xor
add
gs
xchg
call
push
cs
cmp
ds
scas
adc
fwait
pop
int
ror
imul
sbb
arpl
jnp
cli
cli
adc
jmp
cmp
xchg
cmc
imul
ins
(bad)
mov
dec
pop
adc
xchg
ins
in
dec
popf
adc
xor
fiadd
scas
dec
imul
pop
mov
nop
lds
xchg
mov
mov
and
xor
repz
push
pop
mov
and
mov
les
sti
xor
aas
je
inc
das
retf
or
retf
inc
retf
nop
ror
stos
cmp
shl
jne
repnz
test
nop
popf
add
pop
jge
aad
(bad)
(bad)
pop
ret
dec
inc
xchg
int3
dec
xchg
pop
inc
fisub
push
aaa
bound
jp
lods
inc
mov
jp
adc
stos
jmp
cmp
arpl
inc
mov
cdq
push
jp
mov
or
mov
sub
sub
fnstsw
mov
or
or
cmp
adc
stos
push
mov
sbb
shr
fisubr
pop
bswap
jle
jp
jmp
into
bound
cmp
push
sbb
lds
gs
inc
les
or
mov
sbb
popa
cmp
sbb
cdq
push
ror
icebp
jmp
jo
add
push
(bad)
lock
mov
mov
icebp
lods
je
retf
dec
dec
mov
mov
mov
aam
mov
loope
icebp
inc
(bad)
popa
in
jnp
in
stos
and
call
sub
pop
enter
and
mov
inc
in
inc
hlt
add
mov
pop
hlt
int
ins
inc
jmp
mov
test
repz
push
push
inc
jle
fadd
test
nop
and
rcr
aaa
imul
xchg
sbb
adc
inc
fld
cmp
jnp
outs
push
jmp
or
jnp
mov
pop
rol
xchg
aaa
push
arpl
mov
(bad)
dec
dec
stos
stos
add
and
fwait
mov
(bad)
je
cmp
add
adc
inc
icebp
mov
test
inc
adc
cmp
lods
stc
pop
sub
mov
stc
shr
push
(bad)
pusha
add
xlat
(bad)
xor
xchg
xor
inc
popf
jle
mov
outs
into
mov
outs
dec
inc
jmp
(bad)
cmc
retf
sub
xchg
scas
pop
repnz
stos
mov
fcom
loope
xchg
xchg
push
int3
push
mov
jae
imul
aad
aas
pop
mov
pop
(bad)
js
cmp
jl
mov
rcl
mov
sahf
jae
pusha
ins
cmp
ss
fwait
cmp
or
cli
mov
ds
fmulp
popf
and
je
mov
xor
out
test
xor
adc
pop
pop
fistp
jge
adc
adc
and
mov
out
jnp
cmp
pop
jo
data16
fcmovne
xchg
gs
inc
inc
fldenv
jnp
mov
call
adc
or
jbe
test
mov
cmp
jbe
retf
cli
add
setp
push
add
call
or
add
xlat
add
push
stc
mov
sub
dec
test
ret
cmps
mov
sbb
sub
hlt
dec
mov
cmps
or
xor
fbstp
fcom
jp
adc
nop
out
fnstenv
popa
mov
aas
xchg
or
les
dec
repz
pop
test
cmp
jg
dec
mov
push
jmp
xchg
push
jns
mov
sar
cli
call
mov
rcr
lods
cmp
jno
sub
sar
imul
cmp
adc
aas
jbe
sbb
stos
xor
out
aas
sbb
daa
cmp
jne
je
hlt
sbb
call
cmps
mov
jle
sub
cmp
adc
fsubr
iret
les
pop
fld
mov
loopne
adc
mov
cmp
xchg
retf
aaa
xor
daa
dec
imul
jmp
push
mov
jno
push
xchg
ror
dec
popa
gs
inc
and
and
test
sti
outs
rcr
lods
pop
and
into
fwait
cmps
mov
mov
das
fwait
push
dec
jl
inc
and
or
ja
ror
call
sub
cld
cmp
jmp
jbe
sbb
xor
mov
cmc
icebp
cmp
dec
xchg
ret
icebp
xchg
jno
xchg
xchg
adc
and
fnstcw
std
test
lods
push
dec
mov
cmp
(bad)
icebp
sbb
dec
fs
fcmovne
push
cmp
call
pop
sub
sub
loop
icebp
sub
retf
add
xchg
daa
arpl
pop
stos
and
call
fstp
xchg
shl
mov
xchg
repnz
lds
sbb
adc
add
cmps
or
push
ret
mov
movs
std
xlat
in
out
aad
or
jle
mov
or
jb
sub
push
sbb
fdiv
adc
add
inc
scas
in
call
mov
mov
fdivr
add
jo
jnp
sub
out
fs
cmps
and
sbb
mov
pusha
xor
mov
xchg
jmp
cmc
shl
adc
in
xchg
je
in
lahf
push
(bad)
dec
cmp
jle
jge
add
je
(bad)
daa
dec
daa
add
aaa
mov
cmp
jno
ret
outs
aam
xor
fcom
out
or
mov
push
lods
pop
jb
int
adc
push
inc
xchg
pop
mov
xchg
repnz
fmul
retf
(bad)
(bad)
loope
shl
fincstp
jns
sti
out
inc
add
xchg
cmps
inc
stc
dec
mov
aaa
jnp
(bad)
mov
mov
push
xchg
mov
mov
jmp
dec
es
jne
enter
mov
(bad)
lock
jecxz
shl
out
sbb
sub
mov
fwait
xchg
fidivr
mov
dec
popa
jae
fisub
add
outs
mov
fdiv
and
push
pushf
push
pop
adc
push
stos
push
or
and
xor
stos
mov
in
test
(bad)
aam
xchg
loop
mov
sbb
dec
xchg
imul
out
xchg
sbb
mov
inc
adc
dec
jecxz
xlat
dec
add
imul
mov
mov
xchg
sub
xchg
ds
inc
or
out
jmp
jbe
(bad)
fldenv
or
int
adc
loope
(bad)
cmp
shl
cs
fwait
mov
add
ficom
and
pop
shr
sub
(bad)
popa
inc
aad
or
fwait
lods
imul
les
adc
or
icebp
fwait
call
stos
int3
sbb
imul
sbb
pop
std
mov
pop
sbb
aaa
inc
aaa
push
retf
mov
in
fiadd
popa
ja
(bad)
pop
pop
shr
aaa
adc
or
mov
dec
xor
les
jae
hlt
sub
lahf
imul
popa
inc
sub
jb
ja
nop
pop
mov
xor
ins
cmps
retf
mov
xchg
retf
ror
dec
mov
mov
fistp
jge
sahf
mul
(bad)
push
imul
inc
and
lock
add
jmp
pop
inc
jge
pop
push
gs
fnstsw
(bad)
lock
ror
inc
lock
int3
mov
je
mov
ins
jnp
test
sub
std
leave
(bad)
push
(bad)
cmp
sbb
retf
push
retf
mov
mov
pop
sbb
mov
push
pop
lods
xchg
mov
adc
imul
inc
fadd
pop
mov
xlat
icebp
add
pop
std
test
sbb
lea
pop
lods
idiv
mov
cli
sbb
shl
pop
cld
sub
xchg
outs
lds
in
cmps
pop
cmp
pop
lods
lock
inc
push
jp
shr
cmp
cmp
cwde
lock
inc
(bad)
mov
inc
cmc
mov
mov
and
lock
adc
inc
sbb
mov
jbe
div
(bad)
sti
cs
sub
in
data16
jno
push
sub
(bad)
xlat
xchg
outs
(bad)
add
daa
and
sub
ja
or
push
xor
test
jmp
lds
mov
push
sbb
sbb
icebp
test
xchg
sar
jmp
jbe
scas
mov
out
add
in
cmp
nop
test
xchg
mov
fdivr
icebp
(bad)
loope
daa
stos
popa
mov
jae
inc
sub
xchg
(bad)
out
fldcw
add
mov
cli
sub
pop
int3
mov
pop
scas
dec
test
cmp
xchg
sub
mul
pop
cmp
xchg
shr
movs
xlat
jecxz
shl
aad
inc
in
pop
or
xor
add
in
mov
xchg
enter
pop
and
sub
push
jmp
push
dec
stos
pushf
fwait
xchg
fdivr
inc
in
jp
(bad)
lea
and
das
inc
retf
jno
lds
jmp
cmp
sbb
movs
in
xor
mov
mov
xor
dec
inc
shl
popf
daa
cmp
mov
scas
in
call
ins
jecxz
push
sti
xor
push
pop
jmp
js
fisubr
pop
sub
pop
adc
sub
or
and
and
rol
ror
call
clc
mov
cwde
inc
mov
ret
inc
and
ja
addr16
das
inc
icebp
sub
pusha
(bad)
cmp
push
sub
fisttp
mov
and
mov
xor
jmp
mov
je
dec
movs
mov
pop
xlat
mov
xchg
dec
cmc
lds
mov
mov
fs
ins
jae
dec
adc
mov
loopne
mov
scas
out
rcl
sahf
fsubr
push
jmp
add
mov
mov
sub
mov
cmp
pop
push
jmp
sbb
pusha
(bad)
sub
pop
std
dec
movs
out
test
xor
sub
and
(bad)
xchg
cmp
or
pop
add
out
push
push
sti
push
mov
mov
jno
mov
int
mov
push
inc
mov
jae
mov
call
outs
add
dec
scas
inc
jae
or
xchg
fisub
xor
mov
mov
sbb
stos
out
cmc
mov
mov
ins
(bad)
xor
and
mov
adc
mov
call
mov
iret
retf
jb
push
mov
pop
mov
mov
lds
sub
xchg
xchg
cmp
mov
fild
mov
outs
and
xchg
repz
aad
mov
pusha
jnp
inc
xor
dec
sbb
jp
and
sahf
push
adc
ret
stos
sar
pop
sub
pop
xor
sub
mov
fwait
push
pop
sub
mov
cmps
rol
jo
pusha
mov
cmp
aaa
lea
mov
add
mov
mov
test
push
scas
push
and
in
inc
pop
popa
nop
pop
jp
movs
add
call
mov
addr16
imul
cmp
xor
mov
sub
cdq
push
sahf
xor
out
jle
fs
sbb
sti
test
das
cmp
aas
pop
push
mov
push
mov
xchg
sub
in
imul
push
mov
sub
movs
push
jecxz
dec
cmp
in
stos
inc
les
mov
scas
add
xchg
dec
pop
jns
cdq
into
jle
test
imul
repnz
aad
pop
out
jmp
inc
movnti
stos
or
mov
jl
cmp
xchg
or
das
pop
bound
jl
jno
mov
sar
mov
push
loop
loopne
mov
sbb
jmp
das
dec
(bad)
scas
jnp
jg
pop
xchg
ror
push
ret
dec
in
push
jne
popa
das
mov
test
mov
ss
retf
fsubr
and
jg
popf
popa
sti
inc
mov
mov
mov
dec
add
cdq
adc
sub
lods
sub
jae
ins
mov
lock
adc
jecxz
xor
retf
push
fisubr
sub
pop
xchg
push
mov
and
xor
xlat
inc
pop
sub
(bad)
js
jae
add
inc
icebp
push
xor
sbb
call
xchg
pop
mov
enter
or
mov
jnp
test
out
bound
jmp
xchg
inc
xor
sbb
mov
mov
fcomp
push
dec
jb
xchg
mov
cs
ds
dec
loop
mov
dec
sub
cmp
aad
or
outs
es
std
bound
aaa
int
mov
fsubr
out
pop
enter
cmps
or
dec
fistp
jno
adc
shl
clc
pop
in
rol
jo
dec
xor
xor
daa
fnstcw
fnsave
js
fucomi
cmp
inc
xchg
ins
aas
mov
(bad)
jp
jmp
aad
into
pop
push
loope
mov
sbb
int3
mov
cld
sub
jbe
out
cmp
push
cwde
xchg
pop
out
ds
stos
adc
lods
lds
xchg
nop
and
fsub
pushf
(bad)
ins
or
sub
mov
push
adc
fwait
lds
retf
addr16
sub
mov
push
mov
jmp
lahf
inc
jns
push
mov
xor
pop
mov
rcl
jmp
les
or
xchg
mov
add
jp
pop
or
mov
add
popf
pop
mov
std
pop
(bad)
xchg
or
jo
sbb
xchg
jne
jae
push
dec
test
rcl
retf
adc
repz
sub
loope
out
sub
add
xchg
or
sbb
sub
jmp
call
out
out
jnp
(bad)
xchg
sub
mov
(bad)
js
jl
and
add
cmp
dec
out
jbe
inc
popf
cmp
nop
adc
jmp
fldcw
or
jge
(bad)
cmps
addr16
push
mov
add
dec
popa
mov
dec
cmps
jp
sub
jle
sub
push
fnstsw
jg
(bad)
cmp
repz
mov
add
(bad)
in
ds
push
in
int
inc
push
aas
test
push
push
xchg
test
in
idiv
jl
pusha
jbe
xchg
enter
lods
lds
out
mov
in
hlt
mov
js
xchg
cmps
jecxz
adc
stos
add
dec
loopne
lods
ret
pop
xor
xlat
jge
inc
xchg
aam
push
jg
ror
mov
or
or
outs
xlat
cmps
lahf
je
idiv
xlat
xor
mov
xchg
shl
mov
inc
jmp
mov
push
std
add
shr
push
daa
sahf
jns
into
icebp
sub
nop
fisttp
jmp
adc
adc
sub
(bad)
lock
in
mov
or
inc
test
sbb
and
outs
xchg
not
imul
xchg
cmps
inc
ins
mov
mov
(bad)
mov
dec
sbb
xchg
xlat
mov
test
mov
add
push
repnz
jnp
mov
jne
ret
loop
xchg
or
mov
pop
std
ror
mov
cmp
je
xchg
cmp
(bad)
xchg
add
xchg
sub
mov
jge
sbb
sub
sub
sbb
push
(bad)
dec
outs
inc
cmp
popa
stos
sbb
inc
enter
jge
jle
mov
mov
mov
iret
(bad)
lods
push
repnz
and
or
shr
adc
xchg
mov
adc
(bad)
mul
cmp
jge
mov
ss
add
ds
movs
or
stc
(bad)
mov
(bad)
adc
sub
push
cmp
inc
ds
rcr
jno
jle
ja
dec
js
dec
fidivr
movs
xor
ss
add
je
retf
add
mov
cmp
jne
ja
mov
mov
push
push
imul
mov
adc
fiadd
movs
mov
add
inc
icebp
push
ss
push
push
loope
cmc
pop
sahf
sbb
and
and
adc
or
shl
movs
xchg
adc
call
sbb
enter
sbb
xor
adc
and
mov
push
jbe
ror
inc
cmp
dec
add
dec
jo
or
sbb
mov
aaa
jle
movs
xor
pusha
mov
cmp
pop
push
mov
xchg
pop
mov
cmp
mov
or
daa
push
daa
jno
mov
mov
mov
and
call
call
sub
cmp
inc
mov
sbb
inc
inc
push
or
(bad)
hlt
or
xor
jp
aad
xor
scas
or
mov
pusha
out
in
fwait
std
mov
dec
xor
mov
sahf
add
outs
and
add
mov
dec
or
rcl
out
jmp
xchg
cmp
and
out
(bad)
and
rol
daa
fstp
lock
test
mov
ds
inc
sbb
mov
adc
push
pop
retf
pop
adc
ins
repnz
cmp
xchg
les
pop
or
outs
repz
mov
xchg
shl
adc
mov
inc
jae
mov
aam
inc
imul
xchg
cmp
cwde
lds
daa
mov
mov
pop
mov
fisub
or
outs
xchg
das
int
test
out
xchg
pushf
sub
sbb
test
mov
or
push
mov
sbb
lds
sub
clc
mov
cmp
jge
dec
cli
and
and
outs
sbb
mov
cmp
sbb
lods
sub
inc
in
shld
dec
xor
sbb
lods
cmps
sbb
out
repnz
adc
dec
mov
fist
jmp
ror
cwde
sar
jmp
or
push
or
(bad)
adc
jbe
fimul
js
or
retf
popa
cmp
pop
and
fwait
xchg
jge
mov
or
push
jb
fwait
(bad)
xor
int
jecxz
lock
inc
xchg
push
rcl
fmul
xlat
jge
push
(bad)
cmps
adc
mov
jp
and
mov
je
mov
push
sub
(bad)
mov
enter
dec
mov
jg
push
(bad)
fild
cld
push
mov
cs
add
add
in
and
and
mov
pop
mov
(bad)
jbe
add
jge
js
xor
fwait
xor
retf
(bad)
sbb
pop
iret
xor
add
xchg
mov
mov
outs
(bad)
add
shl
iret
(bad)
mov
loop
icebp
nop
dec
sub
lods
ficom
mov
push
or
jno
pop
retf
pushf
inc
xor
cwde
push
aas
jecxz
xchg
data16
sbb
jp
bound
or
aaa
push
test
pop
jle
and
cmp
in
in
cdq
aaa
mov
pushf
mov
sbb
xor
dec
inc
(bad)
dec
jg
loop
jl
adc
jo
xor
stc
popa
(bad)
stos
add
cmp
jnp
mov
test
pop
jle
mov
jmp
jmp
fldenv
ins
mov
and
and
jmp
daa
mov
or
bound
pop
mov
js
jmp
fstp
mov
inc
push
movs
popf
movd
inc
stos
push
scas
aas
and
lods
mov
xchg
add
cmp
jno
mov
imul
enter
dec
mov
iret
dec
mov
sub
sbb
out
sub
loope
cmp
pop
jb
movs
sub
xchg
or
sbb
and
(bad)
push
rcr
push
enter
or
jecxz
in
xchg
mov
shr
(bad)
retf
out
inc
mov
jmp
js
mov
int
mov
add
sbb
stc
stos
dec
popa
outs
jnp
or
cmp
jmp
cld
sbb
(bad)
pop
push
dec
mov
loope
mov
jno
out
aam
pop
cmc
scas
into
stos
adc
sub
push
aas
push
in
push
jg
std
popf
adc
ror
daa
cs
stos
imul
and
or
pop
xchg
push
and
cmp
jl
aam
lahf
mov
adc
add
cmp
retf
inc
clc
xor
out
mov
mov
xor
add
in
test
call
arpl
mov
add
inc
inc
mov
aaa
cdq
rcr
dec
mov
dec
xor
lods
sbb
fdiv
xchg
mov
or
adc
pusha
sbb
pop
bnd
out
das
ss
loop
sti
bound
fs
aad
shr
pop
rcl
sti
mov
push
inc
fst
call
and
cmp
add
mov
rcl
sar
pop
sar
sbb
cld
sub
(bad)
rcr
mov
inc
sbb
popa
push
add
fbstp
mov
dec
jl
push
xchg
sar
dec
les
inc
pop
mov
sub
ins
push
popf
inc
fisttp
sbb
fcmovnbe
mov
mov
jge
in
push
sbb
pop
and
sar
add
add
jns
xor
fistp
dec
sub
daa
sbb
jl
into
and
sub
cwde
int3
loopne
cmc
popa
cmps
mov
aad
cwde
movs
mov
mov
daa
pop
retf
mov
xchg
mov
xor
mov
fiadd
ficom
imul
addr16
ja
dec
call
movs
cmp
test
retf
mov
sbb
(bad)
and
add
push
popa
mov
test
pop
lds
pop
xor
and
xlat
mov
sbb
nop
xchg
jg
in
test
int3
add
mov
add
and
js
adc
jbe
sub
test
mov
dec
stos
push
mov
mov
icebp
ins
and
add
in
and
pop
xchg
hlt
ret
jge
inc
stos
pop
jge
jmp
std
cld
cmp
in
inc
js
test
nop
adc
outs
repz
nop
mov
shl
push
xor
je
add
stos
ror
stos
and
in
fstp
stos
push
stos
pusha
(bad)
dec
dec
int3
shr
push
je
fs
cmps
icebp
cdq
mov
push
dec
or
cli
push
mov
jno
cld
loopne
test
lods
test
fiadd
shl
mov
jg
sub
jmp
addr16
sbb
shl
jno
adc
out
mov
test
in
jnp
jnp
idiv
xor
cmp
jne
imul
sahf
push
ss
aad
push
nop
or
jae
cli
push
movs
mov
jp
mov
fwait
scas
and
call
jl
frstor
pop
inc
mov
shr
mov
dec
jae
push
fucom
sar
jno
ret
stc
push
push
push
cmp
call
retf
inc
pop
xchg
mov
pop
pop
xor
test
xchg
xor
jge
les
dec
aam
or
pop
ja
scas
mov
and
mov
xchg
xchg
out
xor
adc
ja
data16
les
sbb
daa
dec
(bad)
(bad)
data16
out
jbe
(bad)
push
ja
push
(bad)
data16
push
cmp
push
jbe
adc
shr
fld
arpl
out
pop
mov
pop
add
sbb
xchg
push
arpl
aas
ds
mul
add
not
(bad)
cli
in
push
ja
xchg
es
loop
neg
push
mov
jbe
(bad)
and
mov
test
pop
div
ds
xchg
push
cmps
xchg
gs
sbb
xchg
mov
adc
push
(bad)
out
xchg
xchg
mov
push
loopne
xor
test
into
or
not
in
pusha
push
sub
adc
jge
(bad)
mov
xchg
push
sti
jbe
push
repnz
lock
xchg
push
jbe
shr
jge
sub
bound
adc
xor
fnstsw
xchg
pop
jb
les
xor
(bad)
sbb
js
(bad)
jnp
retf
jnp
push
mov
push
rol
mov
fld
add
or
aad
mov
mov
inc
lods
outs
mov
xor
out
mov
das
jne
jecxz
or
xchg
mov
inc
cld
daa
movs
(bad)
sub
das
or
popa
cmp
mov
(bad)
sbb
dec
out
mov
adc
push
ins
imul
in
sbb
jecxz
and
ins
mov
clc
les
lods
or
in
and
jae
pop
mov
mov
jne
mov
arpl
out
or
(bad)
pusha
test
das
ins
inc
cdq
mov
scas
inc
inc
lods
out
dec
arpl
das
enter
int
ins
pop
into
repz
arpl
arpl
inc
dec
out
mov
arpl
cmp
arpl
or
xchg
dec
inc
pop
dec
out
dec
inc
shl
mov
push
shl
cmp
mov
inc
jecxz
arpl
test
or
leave
outs
int
push
das
adc
std
repz
pop
inc
mov
xor
or
mov
push
test
jg
arpl
fstp
rcr
int
in
(bad)
mov
jge
jg
test
jecxz
jecxz
das
movs
jae
inc
sub
add
push
outs
inc
imul
cs
(bad)
fldcw
or
xchg
or
mov
mov
enter
in
jmp
jnp
fmul
mov
test
pop
sub
in
lea
pop
test
jge
pop
adc
pop
rcr
jl
cmc
sub
mov
sbb
pop
xchg
mov
push
and
cwde
in
push
dec
hlt
aad
jl
mov
aad
fcom
cmp
clc
ja
inc
and
gs
js
sub
js
sub
or
jns
pop
mov
mov
rcr
sbb
pop
test
(bad)
mov
cld
repnz
shr
cmp
int
sub
test
cmp
cwde
jae
sub
jge
push
or
ja
pop
and
and
imul
pop
sti
js
add
gs
scas
ins
xchg
lods
imul
xor
push
gs
or
pop
lea
xor
pusha
and
mov
or
outs
in
xchg
mov
fst
fst
fnstsw
mov
shl
pop
cmp
stc
xor
push
jns
mov
pushf
lea
(bad)
and
sub
sub
and
jnp
mov
icebp
outs
lahf
adc
pop
xchg
shr
jmp
pop
call
jne
je
xchg
add
movs
jmp
cmp
mov
sbb
pop
(bad)
(bad)
fsub
or
pop
jmp
mov
push
sub
and
push
pop
test
stos
pushf
dec
dec
mov
call
dec
add
mov
dec
loop
stos
mov
mov
mov
mov
in
or
push
sar
mov
test
cmp
push
jo
ret
push
inc
adc
adc
adc
sub
dec
int3
mov
ins
cmps
cmp
jmp
sub
mov
or
mov
jecxz
stos
mov
xor
dec
mov
lods
sub
call
xchg
jo
sub
xor
push
adc
sbb
js
push
int3
ins
(bad)
pushf
pop
lods
or
dec
ins
dec
sub
scas
inc
push
pop
and
mov
daa
scas
mov
ss
or
dec
out
dec
in
retf
outs
retf
outs
retf
outs
retf
clc
push
sbb
pop
stos
cmp
sbb
mov
rcr
js
mov
loope
xor
in
sub
add
dec
sub
mov
push
add
sbb
xchg
iret
adc
arpl
cmp
inc
sbb
sbb
dec
call
push
ins
(bad)
test
in
ret
jmp
xchg
js
cwde
dec
add
arpl
xchg
mov
and
dec
bswap
xchg
mov
mov
(bad)
retf
dec
imul
int3
jecxz
stos
int
je
iret
mov
gs
push
sub
jl
test
xchg
inc
ret
or
int3
fs
pushf
mov
push
out
(bad)
xchg
js
xor
int3
shl
mov
xor
test
test
test
xor
clc
sub
enter
adc
mov
outs
call
add
mov
in
(bad)
xlat
out
lea
fldenv
outs
and
ja
xchg
sub
sub
mov
hlt
mov
pop
jl
test
out
loopne
addr16
sbb
xor
scas
int3
dec
mov
and
sub
mov
mov
lock
push
in
inc
stos
int3
ins
in
ins
ss
sub
dec
in
mov
ins
shr
pop
in
in
gs
in
ficom
leave
dec
pop
dec
cmp
dec
popa
xor
mov
adc
test
mov
clc
mov
cmc
scas
in
clc
lods
js
shr
pop
ins
mov
jmp
jl
mov
call
mov
mov
icebp
ins
rcr
in
fmul
(bad)
dec
sub
sub
fsubr
jno
and
lods
stos
jl
xlat
cmp
enter
ins
sbb
xor
pop
and
dec
xor
ret
enter
sub
ins
pop
xchg
mov
lock
cld
cmp
xchg
jge
sub
out
clc
ret
clc
mov
fs
ins
mov
or
mov
pop
dec
ret
mov
pop
mov
mov
mov
pop
cmp
loope
dec
or
mov
fmul
and
lea
pop
fwait
sub
gs
test
mov
pop
in
test
std
jne
sbb
mov
in
sub
inc
sub
push
std
or
pop
je
mov
(bad)
retf
dec
popf
jmp
dec
ret
push
scas
adc
push
mov
mov
js
jmp
fs
cmp
std
(bad)
pop
mov
mov
(bad)
(bad)
sbb
push
mov
lahf
xchg
xor
cli
rcl
sbb
js
jp
lahf
sub
xor
and
sbb
sar
push
xor
sub
and
arpl
push
aaa
cmp
or
jmp
mov
ins
shl
mov
cli
icebp
sub
imul
or
pop
cs
cmps
mov
mov
es
mov
mov
mov
dec
sbb
neg
test
push
sbb
outs
adc
sub
in
in
or
inc
pop
mov
xchg
pop
xor
push
xchg
push
icebp
jmp
and
pop
sbb
daa
mov
out
mov
lods
xchg
in
mov
int
xchg
(bad)
repnz
repz
cmps
lea
xchg
ret
mov
int
mov
cdq
mov
scas
sbb
repz
mov
xchg
shr
adc
push
stos
lahf
sar
and
xchg
jns
adc
inc
sbb
add
xchg
jb
adc
loop
pop
fs
push
arpl
imul
aaa
push
scas
jb
push
pop
ret
call
adc
and
sbb
arpl
mov
mov
or
stc
adc
or
inc
sahf
xor
inc
push
arpl
xor
jb
push
sbb
pop
int3
movs
cmp
(bad)
call
fnclex
adc
push
push
push
mov
xchg
xchg
js
sbb
jg
stos
add
jnp
mov
rcl
push
icebp
push
xchg
ins
mov
push
xlat
sbb
push
pop
push
xchg
adc
icebp
push
push
lods
xor
adc
inc
test
repz
xor
xchg
xlat
pop
push
push
pop
and
pop
cmc
out
push
in
stos
sbb
(bad)
fstp
xchg
push
xor
ss
rcr
stc
ret
loop
push
push
push
pop
repnz
mov
jb
lahf
xor
repnz
aam
(bad)
xlat
cmp
out
adc
mov
sbb
push
inc
loope
mov
adc
or
push
jmp
adc
cmp
push
jecxz
fstp
in
repz
push
and
ret
jno
not
cmps
pop
in
repz
cdq
ror
cmp
adc
stc
(bad)
cdq
mov
xor
push
inc
and
lock
dec
push
repnz
adc
jge
ror
xor
imul
adc
repz
add
xlat
or
test
loop
push
xor
and
mov
mov
jmp
fimul
out
sub
popa
jnp
add
mov
xchg
cdq
int
call
in
aad
push
popf
pop
mov
jl
ds
inc
mov
xor
(bad)
popf
mov
mov
or
xchg
mov
jbe
ss
loop
ret
call
cmc
mov
sub
mov
pop
out
mov
inc
pop
xor
idiv
pop
loop
jb
addr16
div
mov
add
rcl
out
repnz
imul
jge
xor
std
sub
(bad)
test
pop
pop
ja
(bad)
mov
adc
sub
das
xchg
lahf
xor
jb
jbe
popf
mov
jnp
inc
and
xor
mov
ret
push
shl
scas
gs
and
xor
and
data16
inc
out
cld
rdmsr
jbe
mov
xor
repnz
jo
pop
iret
loop
jb
sti
adc
neg
(bad)
xchg
dec
mov
lods
pop
jbe
push
pop
repnz
sbb
push
sbb
jb
xor
xor
xor
xor
mov
push
xchg
das
push
(bad)
std
loop
outs
jbe
pop
pop
jge
inc
repnz
mov
push
scas
jbe
pop
mov
jge
xchg
es
inc
push
data16
data16
push
mov
or
test
out
jge
inc
and
sbb
push
out
inc
outs
xor
mov
dec
push
push
cmp
push
icebp
xor
dec
mov
cmp
arpl
es
lea
jnp
cmp
(bad)
pushf
xor
fdivrp
push
fwait
mov
xchg
pop
xor
jb
fidivr
xlat
jbe
push
adc
adc
mov
ss
ins
pop
push
aaa
(bad)
pop
mov
xlat
add
pop
cs
out
sbb
dec
in
aas
cmp
(bad)
pop
scas
aaa
pop
xlat
ss
push
fisttp
aaa
mov
xchg
lahf
mov
(bad)
lock
cld
idiv
xlat
into
inc
push
xchg
into
out
xchg
aaa
push
mov
or
ret
jecxz
sbb
xlat
(bad)
mov
(bad)
pop
pop
xchg
cmc
or
mov
cmps
pop
sbb
jbe
pop
pop
int
jg
adc
pop
fisub
adc
cmps
ja
call
jbe
ss
mov
ja
pop
cmp
fidiv
mov
xlat
mov
fild
mov
mov
sbb
cmp
push
push
arpl
test
jg
enter
pop
es
call
addr16
mov
sbb
push
(bad)
jp
push
sub
xchg
and
pop
push
in
xchg
jmp
mov
mov
fiadd
mov
popf
xchg
inc
xchg
fst
in
jb
xchg
cmp
mov
cmc
push
pop
mov
push
out
adc
cmp
xchg
mov
jb
xchg
ins
pop
xchg
xchg
jae
xor
fwait
mov
ds
xlat
dec
mov
pop
sar
jno
dec
addr16
push
cmps
aaa
jmp
xchg
jbe
push
fdiv
into
imul
fisttp
adc
data16
cmp
xor
data16
fisubr
fistp
sbb
ds
les
sbb
push
cdq
mov
xor
jle
adc
push
sub
(bad)
mov
sbb
mov
cli
hlt
shl
cmp
mov
ja
data16
mov
cmp
popf
and
int3
adc
xchg
jle
sahf
ret
iret
push
xor
cld
lea
dec
loopne
dec
icebp
add
int3
mov
rol
ret
sahf
jl
mov
ret
and
jno
dec
jns
ret
ins
ret
(bad)
xor
or
jle
lds
mov
enter
mov
popf
popa
sbb
sbb
cmp
pop
mov
popf
add
jl
popf
popa
sbb
cld
test
sar
and
cmp
ret
sar
cmp
or
add
adc
imul
jle
jmp
sub
fdivr
inc
add
sub
popa
mov
cmp
mov
cmp
ins
xchg
cld
lds
mov
xchg
cmp
stos
fucomp
cmp
rol
jns
jl
test
popa
inc
mov
jo
ins
stc
mov
jl
mov
sahf
popa
cmp
aas
add
movs
lock
ins
adc
popa
aam
cld
ins
xor
enter
jl
or
or
ins
add
mov
push
je
cld
bound
cmp
jno
rcl
(bad)
ret
popf
clc
fidiv
sbb
lods
push
fist
jge
icebp
(bad)
icebp
push
lods
sbb
jp
std
(bad)
retf
mov
dec
xchg
cmp
(bad)
retf
xchg
cmp
out
mov
std
jbe
ror
mov
nop
inc
hlt
jge
push
ror
je
adc
mov
mov
dec
xchg
cmp
bound
imul
dec
sub
loopne
mov
sbb
fwait
into
xor
or
cmp
push
adc
sbb
jmp
retf
ja
aaa
mov
jmp
retf
ja
mov
mov
ja
ja
aaa
mov
imul
aaa
imul
imul
or
imul
aaa
imul
imul
or
jmp
retf
ja
mov
mov
ja
ja
aaa
mov
jmp
retf
dec
stos
mov
mov
rcl
add
pop
stos
test
mov
dec
stos
scas
jo
mov
ret
cmp
xchg
pop
cmp
adc
adc
ret
push
jns
dec
dec
mov
test
in
call
cmp
pusha
push
pop
inc
cdq
ret
add
adc
push
stc
enter
mov
stos
imul
stos
pop
lds
cmc
mov
xor
mov
mov
adc
mov
les
sub
cmps
adc
push
sti
jno
sbb
push
out
repnz
out
out
out
out
data16
data16
out
out
out
out
data16
data16
out
out
out
out
data16
data16
out
out
out
out
data16
data16
out
out
out
out
and
or
or
ins
xor
call
out
mov
fwait
jmp
ins
xchg
push
xchg
jb
push
mov
test
mov
out
out
xchg
hlt
adc
test
or
inc
adc
adc
movs
push
sub
xor
scas
add
jae
out
cmps
xor
cmps
push
mov
mov
pop
xchg
ror
pushf
adc
lahf
add
cmps
and
inc
mov
out
cmps
es
jno
mov
repnz
mov
in
cdq
and
dec
xchg
ss
sub
sub
in
jge
pop
call
xchg
out
nop
loop
pusha
inc
test
lods
jne
loop
xchg
fcmovnb
imul
mov
sbb
loop
mov
cmp
in
pop
pop
fsubr
jmp
push
in
adc
pop
fisttp
cmp
adc
xor
jnp
cmp
rol
mov
in
sub
mov
sahf
xor
dec
cmp
lods
cmp
in
cmp
mov
lea
lods
push
ret
sbb
outs
cwde
jge
cmp
pop
shl
mov
leave
pop
pop
lahf
or
xor
fadd
sbb
xor
in
xor
lahf
sub
adc
cmp
mov
je
je
in
(bad)
dec
(bad)
test
in
push
or
call
sub
sub
test
lods
pop
mov
mov
in
pop
lods
cmp
xchg
cmps
or
cmps
mov
(bad)
jmp
mov
inc
jmp
mov
(bad)
jmp
cmp
cmc
xor
xor
push
(bad)
jmp
xchg
dec
shl
loopne
jmp
retf
movs
add
icebp
fstp
mov
mov
lahf
retf
cwde
leave
cmps
stos
test
test
out
call
shl
rcr
in
mov
out
xchg
out
mov
repz
cmps
lods
repnz
arpl
fidivr
stos
(bad)
iret
test
fwait
les
mov
jmp
lahf
ret
out
lahf
mov
mov
add
iret
repz
or
cmc
inc
adc
and
mov
jge
sti
es
shl
xlat
xor
int3
xchg
dec
adc
lock
mov
hlt
xor
imul
scas
pop
mov
push
aaa
xor
out
sub
data16
imul
add
or
cli
outs
out
sti
mov
cmp
test
movs
pop
fs
(bad)
jnp
cmps
in
ret
push
jne
mov
inc
loopne
push
jb
adc
sar
mov
test
ja
(bad)
sub
add
(bad)
sbb
adc
push
inc
in
test
shl
je
mov
jno
repnz
aad
arpl
stc
push
lock
add
daa
ret
bnd
cs
rol
not
and
lds
shl
cmc
inc
add
cmc
push
in
ret
cdq
daa
cmps
daa
mul
out
and
mov
shl
and
hlt
mov
add
addr16
or
stc
mov
xchg
push
xchg
push
in
jnp
inc
adc
mov
ret
cwde
cli
jae
(bad)
lock
cmp
xchg
adc
push
icebp
(bad)
mov
lea
add
bound
xor
adc
mov
rol
inc
in
popa
mov
mov
adc
xchg
cmps
adc
addr16
movs
(bad)
sahf
sbb
xor
mov
shl
jo
loop
and
ret
and
addr16
push
xchg
adc
scas
ds
out
or
retf
and
fwait
sbb
and
popf
adc
and
mov
and
(bad)
outs
ror
daa
test
sti
push
cmps
pop
scas
rol
adc
adc
(bad)
shl
cmc
and
repz
push
test
ss
mov
mov
mov
push
xor
das
jne
add
xor
data16
inc
and
loopne
loop
out
mov
xor
hlt
les
(bad)
dec
mov
das
outs
xor
xchg
fild
mov
sub
or
mov
mov
fs
ret
add
mov
pop
pop
pusha
shl
mov
push
adc
and
lock
ds
xchg
les
adc
aam
scas
call
jmp
inc
iret
and
push
(bad)
adc
rol
jle
xor
xor
imul
push
movs
xchg
mov
adc
shl
clc
mov
xchg
dec
push
inc
xor
dec
in
rol
shl
and
mov
mov
scas
inc
iret
mov
xor
in
mov
push
mov
add
xor
dec
inc
fwait
loopne
(bad)
(bad)
fwait
je
gs
xor
pop
add
fdivp
mov
dec
or
aas
bound
in
movs
cmp
sub
popa
pop
push
cs
pushf
shl
push
outs
adc
xor
test
std
and
pop
dec
dec
push
push
adc
repz
rcr
and
sub
sbb
cmp
in
mov
pop
push
das
daa
mov
xlat
cwde
lock
fsub
dec
ins
push
cli
add
xor
movs
ins
sub
stc
push
mov
adc
lds
pop
cmp
and
push
xor
push
push
cmp
dec
jno
int
rep
std
push
(bad)
arpl
sub
push
call
cmp
daa
push
popa
jnp
xchg
mov
aad
sbb
pop
jbe
xchg
loope
idiv
jae
jo
pop
in
push
repz
add
gs
mul
mov
imul
out
sbb
enter
test
and
mov
fs
clc
ror
outs
icebp
mov
jne
and
xchg
fstp
cmc
push
out
push
test
mov
xlat
ss
call
cdq
shl
iret
sub
aas
lods
cwde
sub
mov
retf
sub
pop
enter
and
jae
pusha
xor
je
adc
(bad)
jle
mov
imul
push
(bad)
(bad)
addr16
cmp
mov
enter
and
outs
outs
movs
mov
mov
jp
aad
in
mov
cdq
dec
data16
inc
(bad)
pop
ins
push
adc
or
(bad)
in
sub
(bad)
push
adc
mov
xchg
fxch
retf
(bad)
xor
sbb
cmp
cmp
mov
mov
or
jns
out
stos
ds
dec
mov
push
mov
iret
xor
mov
xlat
mov
mov
(bad)
stc
clc
cmp
push
dec
gs
shr
retf
ret
mov
and
xor
aad
sub
inc
dec
call
and
shl
ins
add
clc
jae
fnsave
test
fdiv
or
clc
lds
pop
adc
add
xor
jno
mov
out
mov
je
mov
cmp
fcomp
sbb
(bad)
mov
cs
mov
fsubr
std
es
ja
push
int3
xor
fcomp
sbb
fisubr
retf
dec
pop
dec
pop
push
push
mov
mov
jg
jmp
fcomp
pop
dec
and
pop
fmul
(bad)
push
dec
hlt
and
mov
js
enter
cmp
mov
pop
loope
popf
inc
sar
pop
jg
in
pop
pop
mov
adc
neg
ret
mov
js
mov
jo
cwde
or
jl
mov
popf
mov
pop
addr16
dec
dec
push
in
fadd
test
jmp
and
aaa
pop
test
and
shl
iret
cdq
mov
fnstcw
sbb
pop
or
mov
sub
mov
lods
cmp
imul
cmp
clc
stos
sbb
lds
pop
cmc
xor
cmp
in
mov
sahf
lods
lock
xchg
out
sar
stos
xchg
sub
int3
out
mov
loope
int3
xchg
cmp
pushf
ins
push
push
cwde
lods
and
pushw
mov
mov
int
pop
add
sar
lods
dec
pushf
jl
push
(bad)
fisttp
or
jo
ja
int
pushf
int
mov
je
mov
cs
cmp
lods
add
and
add
ret
add
and
mov
imul
in
or
pushf
adc
dec
lock
jle
cld
pop
mov
ins
int
jno
call
stos
jno
mov
dec
pop
lahf
mov
jge
inc
or
dec
into
cld
jecxz
jae
jle
pop
(bad)
cld
lods
in
lods
int3
in
es
inc
pushf
test
cmp
ins
jl
cmp
add
loopne
lds
aad
js
inc
dec
mov
or
sub
jo
outs
(bad)
shl
jecxz
cld
std
in
lods
imul
cmps
fdiv
test
sub
sub
adc
popa
lods
pop
jmp
in
xor
inc
pop
in
ins
lods
jle
lods
cld
in
sbb
ret
push
pushf
cwde
or
pop
inc
call
int
cmp
and
sub
push
popa
addr16
stos
ins
neg
mov
push
popa
loop
mov
daa
xlat
jne
mov
fprem
pop
fdiv
xor
adc
mov
shr
addr16
or
xchg
fwait
out
mov
xchg
scas
add
es
cmc
push
jle
out
adc
push
jo
dec
test
pop
(bad)
fs
int3
sbb
inc
out
aaa
mov
sub
mov
mov
(bad)
cmps
push
mov
pop
dec
inc
add
sti
(bad)
pop
xor
push
push
and
sub
dec
je
inc
push
adc
mov
pop
sub
sar
movs
adc
cdq
cwde
(bad)
icebp
dec
aaa
push
aaa
leave
xchg
push
mov
dec
push
inc
(bad)
cwde
cmp
cmps
and
aaa
or
mov
cmp
lahf
mov
out
and
push
xchg
push
popw
rol
mov
inc
xor
add
xchg
adc
fcomi
xlat
inc
sbb
mov
loopne
hlt
sub
mov
dec
stos
xchg
jbe
cmps
xor
pop
pushf
push
rcl
dec
mov
push
adc
jo
sbb
int
push
xchg
cmp
into
movs
mov
and
outs
(bad)
pop
and
fcmovnu
in
sub
ret
add
xlat
cld
imul
pop
fcomp
and
inc
in
jge
xchg
das
dec
ins
inc
pop
inc
add
add
or
cmps
push
sbb
sbb
push
shr
call
pop
mov
lock
fisub
pop
inc
dec
loopne
dec
adc
sub
lods
push
addr16
in
mov
adc
cvtps2pd
inc
outs
jg
ror
xchg
bsr
mov
in
loope
mov
in
inc
push
sub
out
pop
xor
sub
lods
int3
loope
pop
pop
add
icebp
lods
adc
(bad)
jl
gs
mov
jge
shl
push
sahf
xor
pop
adc
sar
sbb
arpl
int3
or
bound
cld
loopne
xchg
fbstp
rcr
mov
mov
cmp
or
mov
mov
dec
or
xchg
dec
ficom
in
or
pop
and
pop
(bad)
jle
pop
cld
jle
mov
rcl
mov
sbb
cld
push
mov
pop
and
add
sbb
mov
inc
cmp
in
mov
mov
xchg
outs
inc
lods
or
bound
push
mov
sub
sub
loope
push
mov
popf
pop
add
xor
mov
and
out
cli
inc
mov
mov
or
popa
cmp
add
dec
adc
fcomp
sbb
mov
adc
push
add
inc
retf
sub
addr16
mov
cld
lods
push
xor
mov
shl
adc
pop
xchg
sahf
repz
bound
jns
pop
cmp
aas
rol
cmp
std
mov
sahf
xor
sbb
test
or
mov
(bad)
jle
and
(bad)
xlat
sub
test
inc
movs
(bad)
mov
sahf
or
mov
out
outs
xor
ret
loope
fdivr
stc
pop
xchg
inc
mov
sbb
adc
dec
add
icebp
cmp
add
cdq
std
(bad)
xchg
and
xchg
adc
(bad)
fucomp
aas
push
lods
vmovupd
adc
inc
xchg
mov
(bad)
jae
ret
nop
xchg
mov
lods
push
xor
jae
test
sub
push
and
retf
movs
sub
retf
lods
(bad)
xor
sub
and
imul
cmps
shl
mov
push
jge
pop
movs
sub
and
stos
dec
aad
xchg
mov
and
sub
pop
and
cmp
add
shr
sti
test
jnp
mov
pop
sub
aad
out
jb
or
lea
mov
push
daa
lods
retf
scas
xchg
mov
aad
and
adc
lds
test
sbb
adc
aam
inc
fld
repz
and
add
pop
sub
dec
xchg
jnp
sub
mov
stos
aas
scas
sub
push
and
aad
and
mov
sub
lods
ja
add
pop
adc
in
scas
data16
mov
push
sbb
xchg
pop
repnz
popf
or
popa
jmp
in
in
mov
sbb
pop
jge
dec
retf
cmp
mov
(bad)
das
mov
jmp
adc
stos
cmp
retf
or
imul
adc
xchg
into
dec
test
fst
pushf
call
pop
shr
sbb
pop
jmp
in
cmp
jge
jmp
pop
gs
ds
js
dec
push
retf
call
or
stos
mov
or
push
in
test
dec
in
hlt
xchg
cs
or
jmp
push
retf
sbb
cmp
cld
leave
or
mov
pop
loopne
sti
(bad)
mov
stos
out
aas
push
mov
outs
(bad)
enter
mov
clc
jns
fild
dec
push
xor
js
jle
adc
mov
or
dec
hlt
push
in
ins
addr16
cld
add
jno
push
stos
out
cmp
or
sbb
push
out
and
cwde
jmp
push
or
aad
ss
aad
gs
stos
adc
and
in
or
das
in
cs
shr
sar
sbb
gs
sub
cs
rcr
dec
jge
mov
(bad)
hlt
and
mov
fucomi
inc
add
gs
dec
dec
dec
pop
cmp
mov
xchg
push
jl
cmps
in
jne
xor
sub
xchg
fdivr
gs
imul
mov
push
cmps
mov
cmp
(bad)
stos
mov
dec
call
mov
int
sub
sbb
inc
nop
jmp
mov
div
into
adc
or
enter
dec
stc
mov
jl
bound
std
pop
out
cwde
xlat
ins
test
aam
cmps
lods
cwde
bound
mov
test
enter
pop
cmp
jmp
inc
inc
pop
icebp
mov
or
jge
cmp
data16
shl
les
loope
cmp
aam
push
inc
stos
or
cld
sub
xor
ja
stos
push
xchg
sar
loopne
std
call
stos
mov
cs
push
addr16
loopne
scas
(bad)
sti
in
adc
push
adc
xor
(bad)
pop
jmp
jmp
pop
push
fwait
push
je
add
movs
outs
in
cmps
push
arpl
cld
aas
outs
fwait
cmp
mov
jno
popa
mov
push
pop
ja
xchg
mov
test
(bad)
loopne
sahf
dec
nop
aaa
lock
jb
pop
movs
push
pop
cmp
pop
ret
push
inc
add
cld
pop
lods
mul
mov
test
jp
pushf
push
cli
push
mov
mov
das
jne
push
jmp
mov
add
cmp
stos
jl
inc
inc
mov
lahf
scas
ins
cmp
cmp
cmp
mov
push
cld
and
ficomp
sub
aam
and
add
add
push
push
rcl
jmp
enter
ins
sub
pop
and
fbld
inc
fadd
lahf
in
ss
(bad)
cmp
stos
hlt
test
inc
pop
mov
lea
je
lock
mov
inc
xchg
in
mov
sub
das
jmp
lods
dec
inc
jno
fldenv
jg
lock
shl
mov
dec
mov
inc
clc
push
aaa
mov
mov
outs
and
in
std
aam
xor
xchg
cmp
hlt
pop
in
push
clc
les
sbb
lods
cmp
imul
int3
inc
mov
or
jb
rol
mov
call
mov
retf
in
xor
add
push
shr
pop
xchg
sub
jnp
test
mov
(bad)
jb
(bad)
mov
sbb
push
aas
add
cmps
jns
pop
add
pop
mov
push
bnd
ja
aad
je
mov
fmul
mov
div
pop
fisub
mov
pop
jae
loopne
ror
dec
sub
or
mov
int3
cmp
scas
rcr
and
jl
fisttp
rcr
imul
(bad)
push
sbb
test
je
cmp
sahf
add
das
cmp
dec
dec
pusha
and
div
or
and
jnp
xor
stc
push
fild
pop
ja
inc
outs
nop
inc
sub
jbe
dec
ds
push
push
movs
aas
mov
xchg
inc
movs
ss
push
les
or
jnp
dec
push
outs
pop
in
mov
jnp
fs
xchg
loope
out
sub
in
mov
fdivr
fs
je
jnp
and
inc
in
je
out
les
add
mov
mov
into
mov
push
fiadd
push
bswap
adc
jno
push
push
iret
mov
jno
jp
je
out
mov
sbb
adc
dec
sub
inc
xor
(bad)
shr
call
fistp
imul
push
jg
arpl
inc
imul
jne
mov
mov
fs
mov
jnp
ins
mov
es
cs
je
xchg
fsubp
mov
jl
cmps
xchg
stc
mov
or
push
mov
mov
popa
push
pusha
add
jo
mov
push
mov
out
lea
jecxz
add
outs
cdq
jb
cmps
cld
dec
inc
push
aaa
out
dec
sbb
pop
lock
sbb
sbb
repz
in
(bad)
push
lock
cmp
cmps
add
stos
out
xchg
int3
ja
inc
push
inc
ds
in
cs
push
mov
cmp
sti
mov
xchg
push
popf
dec
ins
pop
out
popf
and
stos
out
xor
jno
jns
xor
mov
push
sub
ins
cmp
pushf
lods
(bad)
sbb
xor
push
cmps
pop
lahf
call
js
add
imul
cli
fisubr
test
stos
aad
jns
dec
data16
jno
pop
pop
adc
adc
ja
jo
pop
sbb
push
test
mov
mov
dec
sbb
test
fs
mov
mov
(bad)
cmps
xchg
or
test
xor
icebp
cmp
xor
sbb
ds
xchg
jg
xor
sub
push
jl
inc
loope
xchg
cmp
dec
xchg
mov
adc
xor
sbb
movs
sbb
and
popa
hlt
mov
cmp
aam
jns
adc
aad
cdq
scas
mov
fstp
xchg
ret
fwait
cmp
push
dec
std
push
es
add
xchg
push
and
pop
jmp
lods
imul
data16
sub
mov
aam
in
mov
push
cld
into
xor
fcomp
jbe
call
xchg
xor
(bad)
sub
pop
loopne
push
mov
fs
pop
enter
mov
mov
jnp
or
imul
imul
sbb
cmp
(bad)
out
dec
imul
add
pop
add
lods
shr
and
in
xchg
jmp
mov
xlat
add
push
sti
js
loopne
(bad)
or
mov
loope
mov
retf
jb
or
loopne
fnstcw
inc
jecxz
sub
pop
aam
mov
xchg
je
mul
jl
and
xor
repz
bnd
dec
mov
mov
xchg
jns
fwait
retf
dec
mov
icebp
mov
rcl
je
xchg
and
hlt
sub
cmp
leave
ror
ins
hlt
dec
enter
cwde
dec
xchg
jno
sahf
jb
rcr
mov
je
fist
aad
imul
fild
jnp
cmp
cld
cmp
and
inc
cmps
push
mov
into
push
mov
dec
jp
aad
scas
out
mov
add
cmps
push
addr16
les
adc
cmc
mov
push
inc
xor
popf
inc
sti
jmp
js
mov
push
inc
and
sub
push
push
popf
shl
imul
add
cmp
inc
fbld
inc
fld
dec
call
call
add
adc
cmp
mov
jne
mov
mov
xor
inc
cmp
jge
mov
inc
cmp
jl
mov
dec
mov
sub
push
mov
mov
push
push
push
call
push
add
pop
cdq
idiv
xor
push
push
push
push
mov
call
push
mov
cdq
push
push
push
call
push
add
adc
push
push
push
call
mov
imul
sub
mov
mov
xor
pop
pop
pop
leave
ret
push
call
mov
test
jne
pop
ret
push
push
call
neg
sbb
pop
not
pop
and
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
ret
mov
ret
mov
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
dec
jns
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
xchg
mul
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
dec
jns
neg
neg
sbb
pop
pop
ret
push
push
call
mov
test
jne
call
mov
xor
jmp
cmp
jne
push
call
test
pop
mov
jne
call
mov
mov
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
test
push
jne
push
call
cmp
pop
mov
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
je
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
dec
mov
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
jmp
dec
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
mov
jmp
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
push
lea
push
push
lea
push
call
add
test
jne
xor
cmp
jle
dec
js
mov
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
inc
cmp
jl
mov
jmp
add
js
mov
mov
mov
add
jmp
movzx
push
push
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
sub
push
push
push
mov
xor
push
mov
mov
mov
mov
jmp
inc
inc
cmp
je
movzx
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
inc
movzx
cmp
je
mov
cmp
je
movzx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
inc
movzx
cmp
jne
cmp
je
jmp
inc
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
mov
inc
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
mov
test
jne
test
js
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
jmp
shl
push
call
pop
mov
mov
mov
add
cmp
je
push
mov
add
push
call
pop
pop
test
mov
jne
push
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
cmp
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
lea
sub
mov
xor
mov
mov
push
xor
cmp
mov
mov
mov
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
push
mov
and
imul
mov
sar
push
lea
mov
add
mov
add
sar
cmp
mov
mov
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
test
pop
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
test
je
cmp
je
call
and
cmp
mov
mov
mov
jbe
and
jmp
mov
mov
test
jne
mov
xor
cmp
sete
movsx
push
mov
call
test
pop
jne
push
lea
push
push
call
add
cmp
je
jmp
mov
sub
add
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
mov
call
mov
test
je
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
mov
cmp
je
cmp
jne
push
call
cmp
pop
jne
inc
cmp
je
push
pop
push
mov
call
cmp
pop
jne
inc
inc
mov
cmp
jb
jmp
mov
add
test
je
mov
xor
cmp
mov
jne
cmp
mov
jbe
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jne
cmp
mov
jbe
mov
xor
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
mov
inc
inc
inc
inc
mov
mov
inc
inc
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
mov
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
cmp
mov
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
mov
test
jne
mov
xor
cmp
je
push
pop
cmp
jne
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
mov
or
jmp
sub
pop
pop
mov
xor
pop
call
add
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmp
jne
push
call
test
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
cmp
jne
and
jmp
cmp
jae
movzx
mov
mov
and
movzx
mov
jmp
push
lea
call
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
and
cmp
je
mov
and
movzx
movzx
and
leave
ret
push
mov
push
cmp
jne
xor
leave
ret
cmp
jae
movzx
mov
movzx
movzx
and
leave
ret
cmp
jne
push
lea
push
push
push
lea
push
push
push
call
add
push
push
push
call
add
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
xor
cmp
jne
mov
lea
cmp
ja
add
movzx
jmp
mov
cmp
jae
lea
push
push
push
call
add
test
movzx
je
mov
mov
movzx
jmp
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
movzx
je
movzx
cmp
je
mov
and
pop
leave
ret
push
mov
sub
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
push
lea
call
mov
mov
cmp
jne
mov
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
add
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
pop
leave
ret
push
mov
push
push
xor
cmp
jne
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
cmp
ja
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
push
push
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
push
mov
xor
mov
mov
cmp
push
je
mov
push
push
push
push
push
push
call
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
call
test
je
lea
push
push
call
test
pop
pop
jl
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
cmp
je
push
call
pop
jmp
push
push
xor
lea
push
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
add
cmp
jne
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzx
push
push
movzx
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
mov
ret
push
call
xor
inc
ret
push
push
call
xor
mov
push
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmp
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
mov
ret
push
call
test
pop
je
push
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
push
push
push
call
pop
push
call
add
cmp
mov
je
cmp
je
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
or
cmp
jne
mov
test
je
test
jne
mov
mov
dec
movzx
inc
mov
jmp
neg
sbb
and
add
or
mov
or
pop
pop
ret
push
mov
sub
mov
push
mov
push
pop
cmp
mov
mov
jne
call
and
call
mov
or
jmp
push
xor
cmp
jl
cmp
jb
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
and
imul
sar
push
lea
mov
add
mov
test
jne
call
mov
call
mov
jmp
cmp
ja
cmp
mov
je
test
jne
cmp
je
mov
add
sar
mov
movsx
dec
push
pop
je
dec
jne
mov
not
test
je
and
mov
mov
mov
jmp
mov
not
test
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
shr
cmp
mov
jb
mov
push
call
cmp
pop
mov
jne
call
mov
call
mov
or
jmp
push
push
push
push
call
mov
mov
mov
add
mov
mov
add
test
je
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
jne
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
push
lea
push
push
push
mov
push
call
test
je
mov
cmp
jl
cmp
ja
mov
add
lea
test
je
cmp
je
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
dec
cmp
jae
lea
cmp
jne
inc
inc
mov
mov
jmp
mov
jmp
inc
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
mov
sub
cmp
mov
jne
test
je
dec
mov
test
js
inc
jmp
xor
inc
movzx
jmp
cmp
jg
cmp
jb
dec
movzx
inc
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
add
test
je
inc
cmp
mov
jl
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
cdq
push
push
push
push
call
add
mov
sub
shr
push
push
push
push
push
push
call
test
mov
jne
call
push
call
pop
or
mov
cmp
je
push
call
pop
mov
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
add
mov
mov
jmp
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
movzx
cmp
je
cmp
je
mov
inc
inc
inc
inc
mov
jmp
mov
add
cmp
jae
lea
cmp
jne
add
mov
mov
jmp
mov
jmp
add
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
inc
sub
mov
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
mov
cmp
sbb
inc
jne
call
mov
call
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
push
xor
push
mov
mov
mov
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
or
mov
jmp
mov
or
xor
inc
inc
mov
cmp
push
je
lea
mov
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
xor
test
mov
mov
mov
mov
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
xor
jmp
xor
xor
movsx
push
sar
pop
cmp
mov
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
cmp
mov
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
(bad)
(bad)
inc
add
inc
add
aad
add
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
or
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
test
mov
mov
mov
mov
mov
je
inc
xor
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
mov
imul
movzx
push
shr
pop
cmp
mov
je
push
pop
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
and
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
and
and
lea
push
movzx
push
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
test
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
test
mov
je
mov
test
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
and
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
add
mov
mov
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
push
je
mov
mov
mov
jmp
mov
pop
add
mov
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
test
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
test
jg
jl
test
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmp
je
inc
test
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
xor
cmp
je
cmp
jne
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
nop
clc
loopne
add
inc
add
inc
add
fild
loopne
add
loopne
add
inc
add
loope
add
add
ret
push
mov
sub
push
push
lea
call
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
cmp
pop
jne
inc
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
cmp
pop
je
mov
and
leave
ret
push
mov
sub
push
push
lea
call
mov
mov
test
mov
je
mov
mov
mov
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
test
mov
jne
cmp
pop
je
mov
and
leave
ret
fldz
mov
fcomp
fnstsw
test
jp
xor
inc
ret
xor
ret
push
mov
push
push
cmp
push
push
je
lea
push
call
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
mov
mov
add
leave
ret
push
push
push
push
call
add
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
push
lea
mov
call
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
jle
mov
jmp
xor
add
cmp
ja
call
push
jmp
cmp
je
mov
xor
cmp
setg
xor
cmp
sete
mov
add
mov
call
mov
cmp
mov
jne
mov
lea
cmp
jle
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
add
add
cmp
jne
or
jmp
sub
add
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
lea
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
add
test
je
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
mov
jne
or
jmp
xor
cmp
sete
sub
xor
cmp
setg
sub
lea
push
lea
push
push
xor
cmp
sete
xor
cmp
setg
add
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
push
lea
mov
xor
mov
call
cmp
jge
mov
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
mov
add
cmp
mov
ja
call
push
jmp
mov
mov
mov
mov
mov
shr
mov
push
and
xor
cmp
jne
test
jne
mov
cmp
jne
or
jmp
add
push
push
lea
push
push
push
call
add
test
je
cmp
mov
je
mov
and
jmp
cmp
jne
mov
inc
mov
inc
cmp
push
sete
dec
and
add
mov
inc
push
call
test
pop
pop
je
cmp
sete
dec
and
add
mov
mov
jmp
and
xor
or
je
mov
inc
mov
mov
inc
test
sete
dec
and
add
mov
mov
inc
neg
sbb
and
and
xor
add
xor
or
jne
mov
mov
mov
and
inc
or
jne
mov
jmp
mov
jmp
mov
inc
mov
inc
cmp
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
mov
mov
cmp
jle
mov
and
mov
movsx
and
and
call
add
movzx
cmp
jbe
add
mov
sub
mov
mov
shrd
shr
inc
dec
cmp
mov
mov
jge
cmp
jl
mov
and
mov
movsx
and
and
call
cmp
jbe
lea
mov
cmp
je
cmp
jne
mov
dec
jmp
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
cmp
jle
push
push
push
call
add
add
mov
cmp
jne
mov
cmp
mov
sete
dec
and
add
mov
mov
mov
inc
call
xor
and
and
sub
push
pop
sbb
js
jg
cmp
jb
mov
inc
jmp
mov
inc
neg
adc
neg
cmp
mov
mov
jl
mov
jg
cmp
jb
push
push
push
push
call
add
mov
inc
cmp
mov
mov
mov
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
add
mov
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
mov
mov
mov
lea
dec
call
test
jne
call
push
pop
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
je
cmp
jne
xor
cmp
sete
add
add
mov
mov
cmp
mov
jne
mov
lea
mov
xor
inc
test
jg
mov
call
mov
inc
jmp
add
cmp
jle
mov
call
mov
mov
mov
mov
mov
mov
inc
test
jge
neg
cmp
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
jne
or
jmp
xor
cmp
sete
sub
mov
lea
push
mov
add
push
push
xor
cmp
sete
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
mov
dec
mov
xor
cmp
sete
cmp
lea
jne
or
jmp
sub
lea
push
push
push
push
call
add
cmp
je
mov
jmp
mov
dec
cmp
setl
cmp
jl
cmp
jge
cmp
je
mov
inc
test
jne
mov
push
lea
push
push
mov
push
call
add
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
mov
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
pop
ret
cmp
je
cmp
je
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
push
push
push
xor
push
call
add
test
je
push
push
push
push
push
call
add
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld1
fcomp
fnstsw
test
jp
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
push
call
push
call
test
pop
pop
je
call
add
cmp
jne
xor
jmp
call
add
cmp
jne
xor
inc
inc
test
jne
push
push
lea
cmp
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
or
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmp
je
push
mov
test
je
push
call
and
and
and
and
pop
pop
ret
mov
cmp
jne
mov
cmp
push
push
jne
call
test
pop
pop
mov
jne
xor
ret
mov
mov
mov
add
push
push
push
call
add
jmp
push
call
add
test
je
mov
shl
xor
inc
ret
push
push
inc
call
movzx
cmp
pop
je
push
push
call
test
pop
pop
jne
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
xor
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
mov
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
je
jmp
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
pop
pop
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
je
cmp
jne
cmp
je
mov
inc
inc
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
cmp
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
cmp
jne
push
inc
pop
inc
mov
jmp
mov
jmp
movzx
inc
inc
cmp
jne
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
cmp
ja
sub
inc
movzx
movzx
mov
mov
shr
add
mov
and
mov
shl
or
inc
dec
jne
mov
xor
jmp
movzx
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
jmp
push
push
lea
push
xor
push
mov
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
jmp
add
mov
jmp
add
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
mov
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
mov
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
shl
jmp
imul
jmp
test
jne
movzx
push
call
test
pop
je
mov
shl
call
movzx
mov
inc
cmp
movzx
lea
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
push
push
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
test
push
jne
movzx
mov
and
push
call
test
pop
je
mov
pop
ret
movzx
and
sub
pop
ret
cmp
je
jmp
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
mov
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
mov
jmp
mov
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
add
mov
add
mov
mov
cmp
mov
mov
jb
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
mov
je
jmp
mov
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
cmp
pop
pop
je
dec
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
mov
je
cmp
jne
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
mov
test
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
push
pop
cmp
jne
inc
mov
inc
mov
movzx
cmp
je
movzx
inc
inc
cmp
jne
mov
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
mov
cmp
ja
sub
movzx
inc
movzx
mov
mov
and
mov
mov
shl
shr
add
or
inc
dec
jne
and
jmp
movzx
mov
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
mov
jmp
and
push
push
lea
push
push
call
add
cmp
je
mov
test
jle
add
sub
mov
jmp
inc
inc
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
mov
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
shl
jmp
mov
imul
jmp
test
jne
movzx
push
call
test
pop
je
shl
mov
call
mov
movzx
mov
mov
inc
cmp
movzx
lea
mov
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
mov
jmp
mov
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
cmp
jle
and
jmp
mov
call
mov
jmp
push
push
call
mov
jmp
call
cmp
mov
je
and
jmp
mov
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
mov
xor
mov
mov
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
mov
test
push
mov
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
or
jmp
dec
mov
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
mov
jmp
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
xor
inc
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
movzx
push
call
test
pop
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
movsx
push
push
call
pop
or
jmp
push
mov
pop
push
lea
push
lea
push
call
add
cmp
jne
call
mov
jmp
add
js
mov
movzx
add
mov
jmp
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
call
cmp
pop
jne
call
mov
or
pop
ret
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
imul
sar
mov
lea
and
mov
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
cmp
push
mov
je
push
call
test
pop
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
call
mov
cmp
je
mov
cmp
jg
call
mov
jmp
mov
mov
jmp
mov
cmp
je
add
mov
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
lea
push
call
cmp
je
cmp
je
cmp
jge
mov
jmp
call
mov
mov
jmp
cmp
jle
mov
push
push
call
mov
cmp
pop
pop
jne
call
mov
call
mov
jmp
lea
push
push
push
lea
push
call
cmp
je
cmp
jl
call
push
call
pop
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
push
call
pop
and
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jae
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jmp
cmp
jb
or
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
mov
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
cmp
mov
je
mov
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
sub
test
movzx
movzx
mov
mov
jne
or
leave
ret
and
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
push
push
push
or
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
push
push
push
push
mov
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
push
call
push
call
pop
pop
mov
jmp
mov
mov
movzx
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzx
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
push
call
push
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzx
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
push
call
test
je
cmp
ja
movzx
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzx
movzx
jmp
mov
mov
movzx
inc
cmp
jle
inc
inc
cmp
jne
mov
push
push
push
add
push
push
push
mov
push
push
call
add
test
je
mov
mov
push
push
mov
push
add
push
push
inc
push
push
push
push
call
add
test
je
mov
push
push
add
push
push
mov
push
inc
push
push
push
push
call
add
test
je
cmp
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzx
movzx
cmp
jg
lea
jmp
mov
mov
inc
inc
inc
mov
mov
movzx
cmp
jle
mov
inc
inc
cmp
mov
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
pop
mov
jmp
push
call
push
call
push
call
push
call
xor
add
inc
jmp
lea
mov
cmp
je
push
call
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
xor
pop
call
leave
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
cmp
je
mov
test
jne
call
mov
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cdq
sub
mov
mov
sar
lea
push
mov
push
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
test
je
cmp
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
push
call
test
je
lea
push
call
pop
mov
xor
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
mov
sub
cmp
ja
add
movsx
shl
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
call
test
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
mov
and
push
or
push
mov
call
test
jne
xor
jmp
lea
call
cmp
je
cmp
je
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
mov
add
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
xor
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
test
pop
pop
jne
or
mov
jmp
test
jne
mov
test
je
push
lea
push
push
call
add
test
jne
push
or
mov
call
cmp
pop
jne
mov
jmp
mov
test
jne
push
call
test
pop
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
pop
xor
test
pop
jne
or
cmp
mov
je
or
mov
jmp
cmp
je
push
call
cmp
pop
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
cmp
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
call
push
sub
neg
sbb
inc
mov
call
sub
neg
sbb
and
inc
cmp
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
and
ret
push
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
test
jne
and
ret
push
push
push
push
call
mov
mov
xor
add
cmp
jne
or
jmp
lea
cmp
lea
mov
mov
je
cmp
je
push
push
push
call
add
mov
cmp
mov
je
cmp
je
mov
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
mov
cmp
je
cmp
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
test
jne
mov
jmp
mov
call
mov
mov
cmp
je
mov
add
neg
sbb
and
mov
call
mov
test
je
cmp
je
cmp
je
movzx
push
call
test
je
push
push
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
cmp
mov
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
push
push
call
test
je
push
lea
push
push
push
call
test
je
push
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
mov
test
jne
xor
jmp
cmp
push
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
add
cmp
jb
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzx
movzx
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
cmp
mov
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
cmp
mov
jne
call
test
je
push
call
pop
jmp
mov
and
imul
sar
mov
lea
and
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
mov
mov
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
jne
call
mov
call
mov
push
push
push
push
push
call
add
or
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
mov
or
or
mov
call
mov
mov
call
ret
push
call
pop
ret
inc
push
call
test
pop
mov
mov
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
ret
mov
cmp
jne
call
mov
xor
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
pop
ret
mov
and
imul
sar
mov
movzx
and
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
test
pop
pop
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
cmp
mov
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
push
push
push
push
call
add
ret
xor
inc
cmp
jne
xor
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmp
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmp
jb
or
jmp
or
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
push
call
mov
push
call
cmp
pop
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
mov
call
add
or
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
mov
push
push
mov
push
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
push
push
push
mov
push
call
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
test
pop
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
call
test
je
xor
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
mov
push
push
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
push
push
push
push
call
mov
cmp
mov
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
mov
jmp
push
push
push
push
call
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
call
mov
push
call
mov
add
mov
push
push
call
mov
push
push
push
push
push
call
xor
pop
ret
sub
mov
mov
mov
push
push
push
mov
push
xor
push
push
push
push
mov
call
mov
mov
cmp
je
test
je
mov
not
mov
jmp
mov
mov
mov
xor
xor
mov
cmp
je
test
jne
mov
mov
not
mov
call
mov
lea
xor
xor
mov
mov
mov
cmp
mov
mov
je
test
je
not
mov
call
lea
push
call
mov
pop
not
mov
mov
pop
add
ret
mov
mov
lea
mov
push
xor
call
push
call
mov
mov
mov
xor
xor
cmp
je
test
jne
mov
mov
pop
not
mov
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
mov
mov
mov
mov
and
test
jne
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
mov
xor
mov
add
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
cmp
jle
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
call
pop
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
call
push
push
push
call
mov
or
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
mov
push
mov
push
call
mov
or
mov
push
push
push
push
call
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
mov
or
mov
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
mov
push
push
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
or
mov
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
lea
push
push
lea
push
push
lea
push
push
mov
push
push
call
mov
or
mov
mov
or
mov
mov
push
push
call
mov
or
mov
push
push
mov
push
push
call
mov
or
mov
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
call
mov
or
mov
mov
push
mov
push
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
call
test
je
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
sub
cmp
jae
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
shl
mov
cmp
jge
mov
and
mov
sub
cmp
jae
mov
cmp
jae
mov
and
and
test
je
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
jbe
mov
shr
mov
mov
and
mov
cmp
ja
mov
jmp
mov
and
add
mov
jmp
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
shl
mov
lea
mov
jmp
mov
shr
mov
mov
and
test
je
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
and
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
add
mov
mov
add
mov
cmp
jne
mov
and
test
je
mov
add
xor
mov
and
shl
mov
mov
add
mov
mov
jmp
mov
add
xor
mov
and
shl
mov
mov
and
and
mov
lea
mov
mov
shl
mov
mov
mov
lea
cmp
jbe
pusha
mov
and
popa
mov
jmp
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
cmp
jae
mov
jmp
mov
add
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
sar
inc
add
cmp
(bad)
add
cmp
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
add
mov
push
mov
push
call
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
lea
mov
mov
xor
mov
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
mov
mov
mov
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
jmp
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
push
mov
mov
push
call
mov
mov
mov
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
fsubr
mov
(bad)
(bad)
mov
add
cmp
jl
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
add
add
cmp
jle
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
push
push
call
add
test
jne
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
fldz
push
mov
fstp
push
push
push
call
push
call
push
push
call
add
test
je
push
push
call
push
push
call
add
cmp
jne
push
push
call
fld
fcomp
add
fnstsw
test
jp
fstp
jmp
fstp
push
push
call
add
test
jne
fld
sub
fstp
push
call
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
add
call
add
sub
je
sub
je
push
push
call
add
pop
pop
pop
ret
push
push
call
mov
add
cmp
jge
mov
cmp
jle
push
jmp
lea
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jg
pop
push
push
push
call
add
pop
pop
xor
pop
ret
mov
push
push
push
call
add
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
push
push
call
mov
add
cmp
jl
cmp
jg
push
push
push
call
add
cmp
jge
push
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jl
pop
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
lea
push
push
push
push
call
push
push
push
mov
call
push
push
push
call
push
push
mov
call
add
test
jg
push
push
call
jmp
push
push
call
add
lea
push
push
mov
call
add
cmp
jge
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
mov
push
lea
push
push
call
add
add
cmp
jl
jne
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
add
lea
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
cmp
jge
push
mov
push
jmp
jmp
lea
mov
mov
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
mov
mov
sub
cmp
je
add
cdq
sub
mov
sar
push
push
push
call
mov
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
mov
push
push
push
call
add
jmp
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
cmp
je
push
push
push
call
push
push
call
lea
push
push
push
mov
call
push
push
push
call
push
push
push
call
mov
add
lea
add
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jle
push
push
call
add
push
push
call
add
jmp
jmp
lea
sub
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jge
push
push
call
add
push
push
call
add
jmp
cmp
jl
push
push
push
call
push
push
push
call
add
jmp
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
mov
mov
mov
mov
sub
sub
add
cmp
jge
sub
lea
mov
mov
mov
jmp
lea
lea
mov
mov
mov
push
push
push
call
add
cmp
jl
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
jle
push
push
push
call
add
push
push
call
push
push
push
call
add
pop
xor
pop
ret
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
sub
mov
xor
mov
push
lea
push
push
call
test
je
cmp
je
lea
push
push
call
add
test
je
lea
push
push
push
push
push
mov
call
add
push
push
call
push
push
call
add
mov
xor
call
add
ret
push
push
call
mov
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
call
push
push
mov
lea
push
push
push
push
push
call
test
je
lea
push
push
call
add
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
call
push
push
call
push
push
call
add
test
je
push
push
call
add
ret
push
push
push
call
push
push
call
push
mov
push
push
mov
call
push
push
call
push
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
add
test
je
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
call
mov
cmp
jne
push
call
mov
test
jne
call
test
mov
jne
pop
pop
pop
lea
pop
ret
mov
mov
push
push
call
test
jne
call
pop
pop
pop
mov
pop
ret
push
push
push
call
add
pop
pop
pop
xor
pop
ret
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
mov
call
mov
add
test
jne
lea
pop
pop
ret
push
call
push
push
call
add
cmp
mov
je
mov
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
push
mov
call
push
push
push
mov
call
push
push
push
call
mov
add
test
jne
push
push
push
call
add
push
push
push
call
add
cmp
mov
jne
lea
add
cmp
je
cmp
je
push
push
call
mov
add
test
jne
mov
lea
mov
add
test
jne
sub
lea
mov
sub
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
call
push
push
mov
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
push
push
call
add
jmp
push
call
add
mov
pop
pop
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
push
call
add
ret
push
mov
push
push
push
push
call
add
mov
call
mov
test
je
push
push
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
add
mov
mov
call
mov
test
je
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
push
mov
mov
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
push
push
call
add
test
jne
pop
pop
ret
push
sub
push
push
push
call
push
push
push
call
add
mov
call
mov
test
je
mov
call
push
mov
mov
call
add
test
je
cmp
je
push
call
add
push
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
push
call
add
cmp
je
push
push
call
add
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
add
pop
mov
pop
ret
int3
push
mov
push
push
push
push
call
push
push
mov
call
push
push
push
call
push
push
cmp
sub
aaa
sbb
mul
pop
std
mov
iret
int
sti
out
or
(bad)
pop
jg
aas
or
fisub
dec
pusha
icebp
stos
out
into
(bad)
dec
sti
push
adc
jle
cs
jo
mov
inc
scas
and
cli
jl
add
sbb
or
daa
jo
mov
inc
mov
inc
mov
jg
and
loop
or
pop
sub
dec
xchg
fwait
loop
outs
dec
push
dec
or
jle
out
mov
push
jno
into
lahf
push
rcl
cs
jg
fwait
stos
mov
push
dec
jl
add
add
daa
(bad)
sub
dec
fdivr
fld
jmp
fld
mov
mov
mov
aas
fnsetpm(287
lahf
(bad)
rcr
movs
int
jmp
jnp
ins
jecxz
cmp
in
jg
and
sbb
pop
jnp
mov
(bad)
xchg
neg
sar
ficomp
mov
scas
sar
iret
cs
dec
jp
push
(bad)
push
(bad)
call
aas
mov
jnp
and
pop
(bad)
mov
push
mov
jae
fisub
push
sub
push
inc
pop
pop
stc
sbb
jle
(bad)
jmp
cwde
cmp
ror
in
pop
xchg
in
cmps
ror
repz
inc
(bad)
or
or
retf
xor
jg
pop
mov
(bad)
dec
jp
mov
aas
mov
or
jnp
and
push
(bad)
stc
and
shl
mov
jecxz
fwait
aaa
push
or
movs
cmp
in
dec
lea
jl
or
into
lahf
ret
jp
das
retf
ficomp
jl
lea
stos
aas
and
or
sub
pop
mov
dec
test
cli
mov
push
inc
out
lea
mov
imul
dec
pop
jnp
das
xor
outs
int3
push
fs
and
out
pop
pop
cmp
dec
aam
cmps
push
jg
retfw
mov
jo
(bad)
mov
cmp
fninit
or
out
push
fisub
pop
xor
xchg
popf
bswap
cli
jo
stos
add
bound
add
mov
div
arpl
fdivr
addr16
lahf
jne
cmc
lahf
scas
dec
fstp
out
jp
pop
sub
dec
(bad)
xchg
jle
jmp
jmp
xchg
mov
jnp
pop
cld
sub
or
aas
dec
xor
pop
sahf
inc
jl
add
retf
stos
fcomp
xchg
pop
mov
out
mov
enter
cmps
sub
addr16
pop
sub
popf
fldenv
jmp
aam
out
cmp
pop
cmp
inc
add
jp
cmp
out
adc
mov
pop
arpl
push
pop
ficom
sbb
mov
dec
jmp
mov
mov
lea
xchg
sahf
add
push
repz
mov
ds
hlt
mov
jmp
sti
cli
jmp
mov
jge
xchg
test
pop
call
imul
xchg
and
into
pop
jns
retf
add
pop
lock
inc
mul
or
bswap
adc
xlat
stc
jmp
mov
aas
xor
popf
imul
pop
scas
stos
leave
cs
jb
fst
(bad)
std
std
(bad)
and
cwde
arpl
jp
(bad)
xchg
pop
stos
adc
add
push
sahf
inc
data16
inc
ret
cmps
xor
sbb
pop
sub
fimul
outs
cli
mov
jnp
sbb
jmp
xor
or
jp
or
cmps
mov
mov
psrlq
jg
outs
movs
or
or
call
push
lea
adc
and
mov
inc
xlat
fwait
sub
jne
push
imul
dec
(bad)
mov
pop
imul
iret
stc
sub
pop
jge
rcr
jge
iret
retf
cdq
mov
cmc
pop
stos
pop
mov
pushf
(bad)
sub
out
sub
fwait
cli
dec
and
call
imul
std
stc
dec
mov
stos
mov
ja
shl
adc
mov
out
jb
xor
mov
mov
dec
scas
popa
cli
leave
sahf
sbb
sbb
dec
mov
dec
nop
pop
or
cmps
pop
push
mov
sbb
out
inc
iret
inc
mov
cli
out
cmc
jmp
aad
mov
jecxz
movs
das
xor
dec
jle
aas
out
xchg
or
push
ins
xor
imul
call
adc
jo
test
or
cmp
sub
ds
xchg
or
jg
sub
sbb
mov
pushf
push
mov
adc
jl
fdivr
setno
aas
jae
imul
mov
push
retf
mov
sti
imul
cli
mov
(bad)
sahf
mov
dec
fild
call
mov
dec
movs
out
cmps
stos
dec
sub
out
add
or
sub
inc
jge
sub
jns
dec
into
aad
pop
or
sub
mov
cdq
dec
add
(bad)
imul
jmp
cmps
xor
cmp
mov
mov
mov
xor
outs
mov
movs
jb
push
push
mov
fs
fwait
dec
fcmovnu
add
dec
sar
out
and
pop
(bad)
dec
mov
lahf
rcl
stc
retf
mov
icebp
ins
cmp
dec
vmwrite
and
ret
mov
push
lea
cmp
adc
xchg
jmp
push
mov
add
jae
outs
push
scas
or
add
xlat
pusha
addr16
mov
adc
inc
xchg
stos
ret
das
add
xor
fisttp
dec
mov
scas
add
jb
cmps
push
sbb
addr16
dec
pop
std
push
jp
arpl
mov
leave
test
dec
idiv
mov
sbb
clc
inc
add
xchg
dec
pop
sub
les
jecxz
dec
cs
aas
popa
ja
mov
js
dec
xor
push
(bad)
cmp
mov
mov
or
fcmove
movs
sub
cmp
in
adc
pop
sbb
inc
std
ins
push
imul
scas
pop
sahf
icebp
add
cmp
add
mov
rep
mov
cdq
dec
mov
mov
outs
test
cmps
dec
dec
sbb
mov
cdq
mov
cmc
mov
mov
mov
sbb
cmp
add
xor
cmps
cdq
mov
scas
outs
(bad)
in
pop
inc
stc
inc
out
jo
test
sub
(bad)
mov
sahf
inc
in
or
test
mov
mov
retf
sbb
sub
mov
xlat
push
iret
jle
and
or
stc
pop
jmp
dec
pop
test
sbb
pop
add
pop
pop
or
pop
into
pop
test
sti
imul
ds
xlat
jg
jmp
shr
out
xor
div
sub
mov
das
sti
mov
mov
imul
push
(bad)
outs
or
stos
int
cmp
sbb
int
sahf
and
inc
or
inc
mov
jp
add
aad
(bad)
sbb
and
ins
jp
test
sbb
pusha
sub
fld
fistp
mov
inc
loope
js
jg
mov
(bad)
lds
mov
xchg
dec
aas
jle
xor
into
dec
imul
fstp
mov
out
sbb
repz
mov
or
test
cmp
outs
inc
movs
outs
in
in
pushf
stc
mov
out
jns
adc
xor
or
jmp
jg
dec
and
sub
cmp
call
jnp
sbb
clc
inc
mov
retf
int
dec
jg
stos
mov
adc
daa
ja
call
jb
pop
mov
jnp
cmps
jg
mov
mov
(bad)
jbe
scas
leave
jo
pusha
sub
data16
pop
xor
cmp
pop
retf
xchg
push
outs
cli
imul
ds
adc
sti
mov
ds
imul
addr16
fistp
dec
imul
xlat
pop
xchg
in
jb
leave
scas
rol
out
imul
in
(bad)
push
xor
cmp
in
fmul
cld
dec
aaa
aaa
mov
ficom
adc
out
sbb
xchg
and
les
(bad)
sbb
dec
xlat
xor
mov
sub
dec
xchg
fld
pusha
cwde
in
pusha
std
test
jl
dec
ret
fwait
jbe
add
(bad)
pop
cmps
dec
push
repz
mov
data16
fstp
aad
loopne
jg
mov
adc
out
push
sub
(bad)
sti
mov
xor
ds
xchg
inc
mov
in
mov
push
jnp
fild
sub
call
stc
(bad)
(bad)
stc
aas
dec
adc
xchg
dec
outs
int3
cld
fld
mov
mov
sti
inc
push
jno
pop
js
enter
pop
inc
inc
addr16
(bad)
jne
cmps
or
aas
push
loope
arpl
sub
out
jge
or
imul
ds
or
sub
add
sbb
imul
test
or
scas
pop
out
jl
mov
mov
ds
cmp
rol
(bad)
xlat
sub
pop
outs
fucomp
xor
dec
int3
stc
sbb
dec
mov
mov
pop
and
pushf
sti
xchg
jbe
and
cmp
xor
ror
push
fild
mov
xchg
clc
lds
lahf
outs
xchg
daa
push
jge
pop
repz
dec
mov
xchg
popf
dec
sbb
sti
retf
fisttp
retf
push
jge
cmp
aas
sub
cmp
test
out
test
sbb
in
out
jo
sub
(bad)
ficomp
push
cmp
gs
mov
scas
test
inc
pop
jmp
dec
dec
mov
push
or
adc
popa
popa
and
dec
popa
loope
test
imul
xchg
ret
jle
or
addr16
stc
sub
xchg
cmps
mov
or
in
or
mov
pop
into
inc
pop
push
test
mov
das
push
in
(bad)
cmc
das
jnp
iret
nop
dec
pop
mov
mov
dec
loopne
pusha
cdq
hlt
popa
sub
(bad)
sahf
adc
out
mov
pop
jg
nop
je
dec
mov
mov
xchg
jo
mov
test
jecxz
sahf
call
sub
rcr
inc
push
dec
jge
push
clc
pushf
sub
cmp
jmp
inc
pop
add
jns
outs
ins
pop
sub
fnsave
sbb
xchg
aad
mov
icebp
lds
mov
pop
std
xor
inc
loope
jle
xchg
mov
dec
mov
cmps
sbb
jno
sub
mov
test
and
add
scas
scas
shl
fld
fucomp
iret
pop
and
bound
stos
sub
test
out
nop
jle
pop
dec
sahf
lea
cmp
push
out
adc
cmp
inc
cmps
sbb
cmp
je
mov
inc
out
mov
push
dec
sahf
mov
pop
xor
shl
call
sub
cmp
fnstsw
or
js
mov
jmp
and
int3
bound
dec
jl
test
jg
(bad)
xor
adc
pop
mov
shl
not
mov
sbb
or
cmp
nop
jb
repnz
xchg
sub
pop
scas
imul
pop
(bad)
retf
das
into
and
xor
xchg
je
mov
push
test
outs
in
adc
pop
enter
sti
push
xor
dec
stos
and
call
fmul
loope
out
aad
mov
or
xor
fild
jae
scas
pop
mov
(bad)
xor
ret
test
scas
std
por
call
mul
cmp
sti
jno
stos
mov
out
bound
daa
(bad)
sbb
test
lods
pop
inc
loopne
sbb
out
cmp
or
mov
mov
pushf
sbb
cmps
cdq
int
in
outs
pushf
dec
out
jg
sahf
pushf
mov
jmp
add
mov
imul
call
stos
pop
pop
pop
cs
(bad)
call
in
pop
mov
mov
dec
fimul
push
fwait
mov
mov
dec
and
cmp
aaa
cmps
sbb
bound
outs
iret
mov
stos
test
int
xchg
cmps
jae
aaa
mov
stos
stos
mov
(bad)
std
dec
and
das
sbb
mov
push
push
or
ja
xadd
repz
mov
jno
sti
mov
push
or
enter
pop
inc
mov
leave
daa
(bad)
lods
cdq
lds
cdq
sbb
or
aaa
in
jecxz
sub
push
sub
rcr
popf
xchg
xor
inc
popw
xor
sbb
inc
mov
dec
rcr
jo
jg
jb
out
stos
pop
loop
mov
pop
stos
cmp
add
inc
out
dec
cwde
ja
xor
sbb
shl
fwait
out
out
shl
dec
inc
(bad)
push
(bad)
xchg
or
fdivr
or
jb
ins
loop
push
jmp
sub
push
out
les
fninit
stos
clc
stos
mov
push
dec
xchg
dec
dec
pop
or
sbb
push
in
xchg
test
retf
sbb
jmp
call
and
mov
sub
rcl
hlt
sti
iret
aad
add
jmp
jb
sbb
std
cwde
cmp
mov
push
adc
dec
retf
call
das
sbb
pop
retf
cmp
inc
push
scas
data16
fistp
iret
outs
xchg
scas
jb
sub
xor
or
les
fcomp
cli
lahf
sbb
cmc
xchg
xchg
scas
arpl
test
mov
dec
jmp
jns
xor
sub
fstp
dec
out
pusha
retf
push
sub
mov
aas
inc
sahf
out
cdq
imul
nop
sti
movs
(bad)
push
push
xchg
shrd
(bad)
in
pop
test
pop
movs
ds
call
std
ja
add
sbb
pop
stc
cli
stc
addr16
mov
fldcw
lds
enter
push
adc
push
retf
(bad)
or
iret
stos
(bad)
mov
or
pop
std
xchg
(bad)
popf
(bad)
aaa
push
leave
pop
sbb
cwde
push
pop
mov
jle
cli
int
pushf
movs
inc
fsubr
fistp
sbb
in
sub
iret
js
jns
push
mov
cmp
sbb
stc
ds
mov
pop
imul
test
push
jg
ins
jle
das
mov
pop
dec
ret
inc
cmps
lea
arpl
lock
imul
jl
je
sub
push
sar
or
xor
gs
pusha
push
out
retf
xor
retf
pop
xor
jge
sub
test
xor
movs
jns
sbb
adc
or
adc
retf
mov
in
mov
fwait
xchg
mov
sbb
push
repnz
out
dec
pop
xchg
mov
mov
lahf
jg
push
sub
in
xor
mov
imul
sub
push
pop
mov
std
fist
out
pop
cli
(bad)
enter
pop
push
ds
dec
outs
jecxz
and
sub
add
jbe
pop
cmp
add
jg
add
jns
push
xor
fisub
jae
gs
leave
ds
pop
cs
into
stos
xchg
jle
or
outs
xchg
sar
std
push
pop
cmc
mov
inc
and
or
jecxz
(bad)
stos
jle
fisubr
dec
aad
push
ret
stos
lahf
push
push
adc
mov
imul
pop
repz
out
push
(bad)
jl
adc
pop
shr
mov
rcl
movs
popf
dec
dec
adc
imul
adc
ins
loope
jle
mov
xchg
mov
outs
ja
fst
cmp
cmp
mov
mov
sbb
cwde
ss
push
and
ret
mov
mov
mov
jmp
clc
xlat
or
and
mov
inc
loope
jp
adc
fwait
or
call
retf
mov
xor
cmps
mov
or
or
jecxz
jno
(bad)
mov
aad
xor
fbld
fsincos
js
mov
push
ins
data16
out
jnp
ss
inc
fwait
jg
repz
in
sub
pop
mov
(bad)
jmp
movs
fs
repz
pop
push
ret
fucomi
iret
daa
test
sbb
xchg
dec
jnp
xchg
add
movs
out
cmp
aas
push
xor
mov
pop
xchg
pushf
jnp
push
dec
movs
inc
cs
sub
(bad)
out
dec
push
popa
sub
push
gs
loope
call
pop
test
aaa
enter
scas
in
hlt
fistp
outs
jmp
push
fwait
retf
test
adc
pop
icebp
cli
pusha
fbld
or
movs
xor
push
jne
arpl
xlat
add
call
sar
stos
push
lahf
shr
enter
cmp
jl
xchg
inc
mov
fwait
pushf
mov
into
or
jbe
cmp
xor
mov
cmps
pop
sub
mov
leave
sub
dec
and
mov
fwait
retf
ret
mov
pop
icebp
or
cs
arpl
fld
retf
pop
sti
push
movs
mov
test
rcl
scas
cwde
sahf
xchg
aas
or
(bad)
cmc
jle
stos
imul
or
mov
inc
cmc
psubusw
out
mov
cmps
ret
hlt
mov
jb
xchg
stos
cs
or
popa
mov
mov
cli
inc
mov
js
sar
lods
mov
xchg
leave
scas
test
das
retf
fwait
jnp
and
and
mov
fwait
pop
aas
popf
pop
or
adc
out
das
(bad)
psrld
pop
xlat
mov
imul
mov
stos
cld
mov
ds
popf
cwde
lods
add
sbb
fbstp
sar
out
xchg
adc
std
stc
bound
stc
popf
gs
mov
cmp
inc
jnp
out
aam
loop
hlt
loop
dec
ret
jmp
lods
imul
ret
pop
stos
adc
jle
sti
inc
sbb
sbb
ret
in
leave
ror
mov
pop
sub
inc
movs
push
push
mov
or
std
jmp
in
xchg
add
(bad)
fld
pop
das
inc
pop
xor
repnz
clc
mov
out
or
sahf
jmp
adc
push
pop
int
cmp
mov
(bad)
hlt
out
jne
pop
ja
sti
xchg
mov
mov
jge
cli
jne
xchg
push
popf
xchg
nop
stos
sub
stos
cld
jecxz
in
shl
or
out
imul
pop
dec
aas
push
outs
dec
aas
shl
fstp
mov
jl
xor
xchg
pusha
mov
cli
inc
aad
pop
je
sti
call
mov
xchg
mov
sbb
cli
mov
imul
pop
add
cmp
ins
mov
test
mov
push
into
mov
loopne
pop
jmp
pusha
push
fstp
xchg
or
clc
test
movs
pop
pusha
push
repz
and
or
outs
rcl
sbb
iret
inc
dec
popf
daa
cli
pop
int
sar
mov
aas
stos
or
push
addr16
mov
imul
mul
sbb
xor
mov
aad
jmp
push
imul
push
pop
mov
inc
mov
(bad)
push
sub
push
(bad)
dec
lea
mov
mov
retf
ins
pop
aam
adc
cli
das
push
inc
icebp
xor
jle
cmp
dec
je
add
cmc
dec
pop
loop
je
jl
(bad)
cdq
shl
into
mov
and
push
and
pop
ror
imul
(bad)
adc
mov
scas
test
cmp
cmp
mov
ror
xor
xchg
jne
mov
stos
mov
mov
jle
enter
cli
mov
mov
dec
jb
mov
mov
mov
cmp
mov
jnp
es
sbb
leave
test
lahf
sub
(bad)
lahf
out
xor
jp
test
and
iret
pop
push
out
lock
loopne
mov
and
pop
(bad)
fwait
or
jg
cs
cli
and
(bad)
pop
cs
pop
mov
mov
ficom
je
in
sti
xchg
iret
pop
jle
add
jge
cmp
dec
jmp
test
inc
dec
ds
outs
add
lahf
pop
jle
add
into
and
mov
mov
movs
mov
adc
imul
fwait
pop
stos
cdq
or
sahf
add
or
push
sub
push
cmp
into
rcr
jo
fsubr
iret
cmps
sbb
jb
dec
scas
call
cwde
cs
dec
xor
pop
mov
mov
repnz
fistp
(bad)
sub
mov
xor
dec
jg
add
outs
dec
lods
or
pop
stc
adc
daa
sbb
mov
sub
int
jmp
fdivr
das
sbb
fwait
mov
push
dec
xor
iret
push
and
cmps
in
lods
in
or
iret
stc
cmp
mov
adc
push
cmp
(bad)
mov
push
jge
lahf
adc
mov
pop
sbb
cmp
jnp
loope
movs
outs
imul
iret
cs
(bad)
inc
icebp
cmp
dec
into
push
mov
or
movs
mov
ret
fnstsw
push
add
scas
cmc
or
jle
cmp
pop
in
push
sti
xchg
mov
bound
out
mov
push
test
repnz
loopne
mov
les
fnstenv
mov
sahf
cmps
add
dec
cmc
loope
cmc
test
ror
sbb
or
pop
dec
dec
retf
mov
sbb
mov
mov
dec
mov
pop
cmps
mov
js
jl
stc
repz
push
mov
push
sti
jbe
repnz
mov
pop
repnz
xor
inc
jl
in
jbe
test
stc
in
jne
popf
inc
out
jns
add
cmp
outs
sar
dec
add
mov
push
imul
lahf
jmp
fistp
mov
imul
sbb
push
pop
cli
cli
inc
nop
lods
mov
ins
enter
nop
xchg
into
(bad)
push
frstor
push
pop
lar
pop
jo
push
lock
mov
xchg
fiadd
in
adc
cmp
les
sti
jl
fwait
mov
adc
cmps
dec
fcmovnu
mov
(bad)
scas
das
mov
hlt
test
cmps
or
test
inc
ret
aad
sub
pop
sub
push
xor
sub
and
fcmovu
jo
leave
test
pop
ja
js
pop
nop
dec
js
(bad)
fcom
mov
ja
outs
add
mov
xchg
xchg
mov
xor
out
cld
shr
inc
mov
add
sbb
into
push
fnstsw
mov
sub
rcl
dec
int
mov
fimul
outs
cmp
js
jmp
rcl
mov
popf
ffreep
xor
sbb
adc
ret
push
mov
icebp
jp
mov
jge
scas
or
push
pop
adc
jmp
(bad)
sub
xchg
sub
arpl
in
aas
adc
push
cmps
pop
ret
jl
addr16
cmp
pop
mov
pop
adc
out
imul
mov
cwde
stos
or
xchg
scas
mov
push
pop
mov
xchg
dec
fidivr
adc
scas
pop
mov
inc
pop
pop
mov
cs
sbb
or
and
adc
jp
pop
loopne
shl
jbe
pop
icebp
dec
xor
rol
rcl
sub
push
pop
data16
sub
mov
cli
mov
test
or
mov
dec
outs
dec
xchg
pop
ja
aam
xchg
je
jae
cld
adc
jbe
pop
and
push
mov
mov
xchg
mov
sbb
pop
cmp
pop
das
cmps
inc
add
cmp
pop
test
mov
pop
stos
sbb
pop
and
cwde
dec
(bad)
retf
xor
lahf
(bad)
scas
jb
lahf
lods
shl
scas
push
fcomp
push
fistp
mov
adc
pop
outs
push
(bad)
js
inc
aad
sub
add
out
inc
fsubr
mov
fwait
nop
hlt
inc
out
xor
xchg
retf
(bad)
jae
cli
stc
rol
mov
mov
js
call
and
inc
into
jmp
mov
(bad)
pop
scas
jp
jnp
jnp
push
dec
dec
lods
or
outs
dec
mov
out
jmp
or
xchg
sbb
cmp
fistp
imul
pop
retf
mov
or
mov
clc
sbb
outs
jmp
mov
ret
cmp
lods
fwait
xchg
aas
fidiv
(bad)
pop
in
mov
dec
fwait
arpl
adc
and
xchg
int
push
imul
pop
dec
or
test
jb
fisttp
sbb
fisubr
pop
mov
dec
scas
idiv
push
mov
jbe
mov
push
jae
cwde
icebp
sub
aam
fnsave
xchg
dec
mov
xchg
in
lahf
outs
(bad)
pop
and
inc
ss
ret
out
xor
aas
push
lahf
lods
sar
xchg
outs
daa
pop
(bad)
pop
cmp
in
push
fisubr
fcmovnb
ins
les
jnp
shr
jp
repz
mov
movs
xor
sub
shl
in
mov
les
cmp
outs
jb
fs
enter
(bad)
call
aaa
push
mov
sbb
pop
or
xor
sti
pushf
movq
js
mov
and
mov
mov
(bad)
inc
(bad)
shl
ja
mov
icebp
jae
call
mov
outs
jle
sub
(bad)
pusha
push
das
xchg
jns
frstor
mov
pop
stc
fst
scas
retf
pop
cmp
jmp
loopne
mov
jg
mov
dec
daa
mov
aas
and
stos
int
cmps
pop
scas
js
imul
aam
out
aaa
sub
pop
scas
jnp
retf
outs
pop
cld
jecxz
push
xchg
dec
xor
jo
push
imul
jns
test
adc
scas
iret
pop
fucomip
repz
mov
inc
cmps
xor
mov
jnp
sahf
into
add
stc
retf
retf
scas
iret
sbb
and
cmc
loop
pop
sbb
push
mov
test
dec
repz
mov
test
mov
add
jg
lods
push
xor
aad
jns
loop
fistp
pop
mov
iret
adc
and
in
mov
imul
leave
dec
cmp
inc
adc
ret
fistp
jge
or
scas
pusha
add
inc
adc
push
sti
aas
call
loope
add
push
push
out
sbb
cli
lahf
loop
push
mov
pop
(bad)
jmp
jecxz
stos
xor
retf
addr16
test
xor
in
pop
je
ins
fistp
push
cmp
xchg
sbb
loopne
dec
out
jns
call
leave
sbb
xor
push
jae
(bad)
into
das
ins
ins
cmps
inc
int
lahf
inc
ja
or
ja
shr
shl
enter
sub
(bad)
mov
popf
jmp
hlt
mov
cld
test
in
cwde
mov
xor
(bad)
push
xchg
push
outs
dec
cwde
lea
call
mov
xor
in
inc
push
cmp
mov
pushf
jle
or
cdq
lods
cwde
stos
ss
add
jnp
push
jge
pusha
fimul
adc
cli
xchg
loopne
repz
mov
mov
dec
pop
mov
pop
lods
fucomi
mov
stos
fcmovb
sbb
jnp
cmp
and
mov
ins
cli
int
in
dec
jnp
imul
test
sbb
mov
out
(bad)
pop
jp
call
mov
cmc
daa
xor
jle
daa
push
rcr
jmp
leave
stc
dec
into
or
imul
test
pop
shr
fcmovu
mov
pop
push
movaps
ja
ins
pop
std
rcl
call
stc
sbb
cmp
pushf
jmp
add
or
outs
jle
or
loopne
xor
sbb
stos
and
repnz
cmps
jmp
dec
dec
lods
mov
inc
cmp
and
gs
jge
inc
push
dec
dec
cs
push
xchg
adc
xor
and
add
push
pop
(bad)
cmp
into
cmp
push
push
mov
mov
xor
push
sti
inc
lahf
jmp
arpl
and
jp
sub
jge
int3
ret
mov
stc
xchg
leave
enter
cwde
(bad)
cld
std
cmp
mov
mov
mov
int3
sbb
pop
std
mov
push
push
or
test
icebp
cs
mov
cmp
dec
fs
sti
pop
fwait
push
mov
in
mov
(bad)
daa
pop
(bad)
xor
cmp
add
mov
pop
rcr
sbb
mov
xor
or
sub
or
mov
push
out
inc
mov
sbb
mov
pop
pop
jg
xchg
mov
imul
iret
repz
call
adc
add
aas
mov
inc
pop
adc
mov
ss
outs
into
inc
dec
enter
out
sbb
dec
jg
jmp
(bad)
lea
psubb
mov
imul
aaa
imul
imul
aas
mov
ror
jns
scas
xchg
and
jmp
mov
cs
or
adc
arpl
hlt
dec
sbb
mov
repz
dec
movs
stc
mov
adc
mov
aam
dec
cmps
cli
int
push
sub
rcr
rol
shl
cmps
sub
hlt
inc
or
je
pusha
mov
mov
(bad)
nop
or
out
xchg
or
sar
mov
pop
ret
xor
xor
cmps
pop
mov
clc
push
push
aaa
lods
add
fcomp
cmp
jge
cwde
cmp
xchg
out
data16
dec
and
push
das
add
fcmovne
jo
mov
lea
push
test
pop
mov
iret
retf
(bad)
sub
cmp
mov
imul
leave
inc
scas
add
test
mov
cmp
xchg
and
arpl
scas
xchg
jbe
je
and
pop
dec
dec
pop
cmp
das
jmp
xchg
jmp
stos
cmp
cmps
iret
inc
jecxz
or
int
xor
(bad)
xchg
mov
sub
xchg
aas
sbb
mov
inc
aas
sub
sub
add
fcom
cmp
inc
xor
test
(bad)
movs
movs
sbb
xor
jge
cmp
stos
aas
mov
retf
xchg
stc
out
jmp
xchg
les
out
retf
pushf
mov
ins
sub
int3
call
cmp
add
cli
pop
xor
mov
movs
loopne
or
cmp
fwait
inc
loope
sub
xor
retf
pop
(bad)
ror
push
xor
jmp
stos
jle
pop
inc
(bad)
fstp
mov
cmps
cmp
call
and
adc
adc
sub
jle
vmwrite
cdq
int
sub
loop
cmps
pop
adc
xlat
jp
std
and
cdq
xor
ror
retf
jg
and
sahf
ret
sbb
mov
test
inc
fwait
mov
mov
fistp
hlt
mov
or
inc
in
inc
push
pushf
push
xchg
movs
pushf
test
xchg
push
mov
and
sar
(bad)
cwde
pusha
dec
scas
xchg
movs
imul
(bad)
sub
mov
fsubp
fnsave
sub
hlt
adc
dec
mov
mov
shl
mov
mov
(bad)
aas
aam
mov
fmulp
fwait
std
fcmovu
mov
xchg
mov
ins
dec
sub
imul
mov
jle
pop
popf
retf
inc
jg
adc
pop
mov
gs
jns
rol
mov
cmp
xchg
ror
out
fidivr
cmps
scas
mov
imul
cmp
popf
(bad)
in
repnz
loop
pop
add
xor
mov
push
hlt
dec
dec
sub
les
in
sub
jo
ins
pop
mov
ja
inc
out
(bad)
xchg
pop
sub
jge
lea
and
jg
cmps
ins
out
popa
out
ss
repz
push
aam
fisub
mov
and
cli
mov
sahf
rcr
cmp
add
fistp
and
push
add
xchg
xchg
push
jmp
jp
aas
outs
pop
das
xchg
sbb
xchg
mov
jg
jmp
mov
cdq
pop
(bad)
jge
xor
test
pop
outs
cmp
cmp
pop
fidivr
sbb
lock
cli
aad
and
inc
cmp
aaa
popa
sbb
jnp
dec
inc
sbb
fprem1
arpl
(bad)
mov
xchg
adc
add
outs
popf
xchg
push
(bad)
jmp
ss
sub
js
pop
test
inc
inc
out
imul
jnp
daa
icebp
cmc
movs
adc
ja
inc
daa
jno
loopne
stos
cmc
sub
cmovb
es
data16
fistp
pop
inc
std
pop
mov
lahf
mov
movs
xchg
sub
xchg
add
xchg
je
mov
arpl
inc
pop
dec
dec
retf
fistp
neg
imul
xor
sub
stos
out
mov
dec
pop
xlat
pop
adc
outs
mov
bound
add
xchg
jecxz
ret
pop
sub
(bad)
test
sbb
mov
out
repz
cli
ja
jmp
ds
dec
add
jns
(bad)
fisttp
mov
cmp
cs
cmps
sub
mov
out
sub
xchg
dec
int
mov
cmps
(bad)
mov
cmp
sub
arpl
(bad)
jp
sbb
out
out
mov
and
or
mov
aas
dec
jge
test
cdq
aas
xchg
mov
sbb
jg
and
test
int3
outs
out
inc
stos
addr16
(bad)
jmp
stos
xor
pop
ficomp
fimul
das
sub
push
lea
call
imul
aad
mulps
mov
mov
inc
in
iret
or
xadd
mov
mov
pusha
call
lea
or
fld
(bad)
xor
or
dec
arpl
and
mov
retf
xor
mov
fstp
pop
sub
xlat
aad
mov
mov
xchg
sbb
jg
inc
int3
inc
retf
jle
(bad)
fxch
inc
sti
inc
add
dec
pop
adc
jl
ds
ins
push
pop
imul
dec
mov
neg
test
sbb
rdpmc
leave
les
sub
in
out
jle
scas
test
sbb
stos
mov
std
sbb
or
sbb
iret
retf
jmp
inc
sbb
adc
fwait
scas
pop
cmps
fst
mov
add
sahf
loop
dec
cmp
mov
inc
pop
out
xor
sub
aaa
shr
daa
adc
inc
scas
push
push
cmp
cmp
ficom
outs
push
(bad)
xor
(bad)
mov
cvtps2pi
push
pop
cmps
jle
leave
loopne
cmp
mov
movs
pop
mov
dec
or
cmp
cwde
ins
(bad)
aam
lods
push
pop
jp
mov
jmp
dec
stos
dec
fs
xor
jle
scas
iret
loope
stos
fadd
fcmovb
es
mov
out
imul
neg
lods
dec
xchg
xchg
mov
in
sub
leave
pop
imul
push
daa
or
test
cmp
mov
push
rsm
outs
sti
pop
xchg
(bad)
mov
int3
outs
or
int
jmp
xor
pusha
pop
jg
icebp
sub
aad
jns
add
inc
pop
push
clc
or
hlt
scas
jnp
or
clc
out
std
jge
js
mov
cmps
repz
leave
mov
adc
int
jg
xchg
jmp
sahf
jg
or
iret
aad
call
ficomp
cmp
pop
mov
loopne
jp
jge
mov
and
fistp
jae
mov
sar
mov
sub
imul
mov
loop
push
sub
les
cmp
mov
dec
jnp
sub
push
push
rol
xchg
aam
lea
int
repz
xlat
test
mov
mov
xchg
nop
(bad)
jp
gs
fld
jb
into
test
lea
ror
mov
out
pop
push
mov
out
fwait
sbb
fild
in
outs
push
test
test
hlt
adc
ja
xchg
(bad)
jg
scas
fwait
or
jp
and
paddb
pop
jecxz
out
into
add
pop
jp
scas
sbb
ror
and
scas
cdq
lea
dec
pop
xchg
int3
mov
xchg
jg
fimul
cmp
pop
out
retf
test
(bad)
iret
fwait
xor
fwait
mov
(bad)
fst
(bad)
xor
(bad)
hlt
jl
aas
mov
mov
movlps
cmp
jle
push
retf
and
fisttp
add
mov
scas
retf
xchg
jns
enter
push
xor
add
js
mov
inc
jle
test
arpl
loope
sub
popf
in
(bad)
enter
fucom
lods
stc
xchg
fnstsw
adc
lahf
inc
dec
cdq
cmp
mov
rol
sbb
push
callw
imul
in
adc
imul
jmp
xor
mov
mov
inc
sub
and
loopne
or
adc
aam
cmp
hlt
sbb
enter
cli
(bad)
nop
xor
adc
add
repz
jnp
mov
fnstcw
jle
or
je
push
or
loopne
mov
enter
add
jnp
ins
js
or
cmc
not
mov
jl
shl
cmp
ror
call
ds
je
fisttp
adc
mov
imul
mov
mov
jmp
mov
and
inc
jne
inc
bnd
lods
adc
xchg
scas
fucomi
fmul
dec
jno
sbb
jnp
sbb
push
or
out
cmp
cmp
mov
ins
inc
std
push
mov
pop
pop
cli
dec
cmp
pop
(bad)
jo
stc
loop
icebp
push
loopne
lea
aas
adc
dec
dec
pushf
mov
xor
cwde
into
dec
mov
fcom
cli
cli
jmp
(bad)
pop
mov
pop
popf
push
cmps
xchg
lods
sub
(bad)
push
out
push
pop
retf
das
ret
and
mov
sub
mov
cwde
mov
les
movs
in
xchg
repz
mov
adc
rcl
fwait
sahf
call
or
ja
mov
(bad)
dec
movs
cmp
jp
mov
sub
pop
pop
retf
loop
adc
add
xchg
lahf
leave
dec
lock
(bad)
sbb
(bad)
lods
neg
mov
sub
pop
pop
pop
dec
xor
out
xchg
pop
mov
movs
stc
push
enter
dec
and
sub
cmc
jmp
or
sub
xchg
out
ret
das
lods
scas
pop
mov
(bad)
aas
mov
or
dec
ret
mov
out
mov
repnz
or
pop
push
out
daa
mov
sar
jmp
call
inc
cwde
inc
pop
and
into
mov
pop
daa
(bad)
pop
std
push
stos
ins
int3
out
popa
mov
daa
int
cdq
pop
stc
push
leave
mov
sub
shr
pop
cmp
mov
add
mov
xor
mov
sbb
es
pop
cmps
push
jg
mov
and
jbe
lods
cmc
jnp
sbb
cli
ins
xor
jns
cmps
fild
mov
cmp
push
into
pop
(bad)
lock
jbe
ficom
xor
pop
mov
outs
jmp
lods
fwait
ds
ficomp
aas
sahf
push
mov
ja
(bad)
mov
out
les
mov
mov
call
hlt
and
fisubr
ret
icebp
push
inc
adc
xchg
sub
(bad)
adc
mov
jns
clc
fadd
scas
mov
pop
mov
sbb
add
mov
into
into
outs
js
aam
and
ins
mov
sbb
into
mov
adc
xchg
add
inc
movs
ret
pop
jno
setnp
dec
cmp
xchg
(bad)
enter
les
fdivr
cs
push
sbb
sbb
cli
mov
retf
dec
mov
push
scas
ret
push
lock
mov
into
cmp
adc
pop
popa
mov
scas
cli
out
fucomp
push
imul
mov
das
ret
add
popa
push
(bad)
jp
movs
fisttp
mov
std
cwde
inc
retf
scas
sti
sbb
add
fs
pop
cmp
dec
push
pop
and
jge
sahf
fimul
mov
add
adc
xadd
cmp
stc
push
add
xlat
sub
imul
mov
xchg
mov
xor
cli
xchg
imul
pop
cld
imul
lods
or
lods
sbb
inc
(bad)
iret
sbb
lock
cmp
inc
arpl
push
popf
mov
sar
push
jbe
sub
mov
pop
push
sub
and
jg
pop
jp
push
addr16
lods
daa
rcr
or
xchg
loope
inc
ret
xor
push
add
sahf
jmp
xlat
fisub
scas
test
mov
xchg
dec
call
dec
push
imul
cmps
aas
push
fistp
cmps
faddp
mov
cmp
jae
xor
movs
aas
mov
jg
scas
lahf
out
sar
fist
mov
inc
sbb
rol
sbb
mov
sti
sbb
inc
dec
mov
push
dec
xchg
call
add
or
cwde
mov
std
pop
stos
add
pusha
xor
sub
push
xchg
jnp
stos
outs
sbb
push
sub
fild
and
and
fimul
loopne
sub
pop
pop
cmp
or
pop
push
shr
popa
push
cmps
xchg
xchg
in
int
(bad)
fsubr
outs
mov
out
out
pushf
push
aaa
cmp
push
push
dec
inc
push
jmp
les
mov
addr16
pop
push
xor
xchg
stos
clc
mov
js
das
das
sbb
xchg
lahf
fcmovnbe
jg
inc
push
addr16
lods
xor
adc
dec
mov
imul
fcomp
ja
xchg
xor
inc
pusha
je
cli
mov
pushf
js
retf
ins
stos
push
inc
sbb
mov
retf
add
scas
and
sbb
jecxz
dec
(bad)
jp
or
sti
mov
popf
fmul
sub
add
retf
jecxz
pop
js
test
scas
retf
enter
pop
inc
push
sbb
push
mov
jae
ja
imul
enter
fcmovnbe
cmc
call
ror
ret
popa
pop
sbb
call
jbe
mov
stc
fimul
add
fwait
sti
mov
push
iret
fmul
fistp
cdq
into
rcl
sub
push
fld
popa
retf
or
or
dec
std
mov
arpl
pushf
adc
jo
mov
jbe
(bad)
adc
rdpmc
cmp
dec
inc
pop
push
push
cvtpi2ps
rol
popf
fidivr
jbe
fisttp
mov
mov
sub
addr16
out
daa
mov
out
xor
pop
pushw
sub
jecxz
sar
loopne
fsubr
lahf
and
adc
and
sahf
fdivr
jae
(bad)
mov
add
lods
cmp
aad
add
leave
inc
retf
pop
jbe
addr16
push
jne
push
inc
retf
inc
mov
aam
dec
mov
mov
in
push
jle
dec
jnp
cld
sub
xchg
in
rcr
stc
mov
mov
mov
(bad)
jg
rcr
(bad)
cmc
int3
test
ins
jp
fwait
int
push
or
popf
test
call
mov
stos
dec
iret
dec
jns
out
push
scas
in
sbb
or
outs
lea
aad
rcl
rol
nop
imul
sbb
outs
imul
pop
sbb
or
adc
inc
into
mov
dec
adc
or
call
iret
inc
xchg
mov
shl
sahf
nop
popf
push
(bad)
retf
xor
mov
scas
imul
mov
sbb
ror
cld
int
(bad)
mov
neg
sysenter
dec
sub
popa
adc
inc
and
inc
enter
mov
test
out
test
mov
lods
inc
or
pop
enter
inc
ret
dec
mov
(bad)
aam
pop
stc
clc
fldenv
push
xor
cmp
js
mov
popf
or
movs
jecxz
mov
fcom
jge
cs
dec
rcr
mov
push
jge
push
retf
adc
test
sbb
cmovno
or
outs
dec
(bad)
sti
ret
mov
adc
fld
fimul
mov
out
xor
aas
fs
movs
pushf
mov
in
jne
push
ret
shr
(bad)
fld
cwde
mov
jo
pop
xor
aad
leave
stos
mov
std
pop
stc
popa
out
and
outs
jge
sbb
cmp
ins
fisttp
dec
repz
(bad)
sti
push
dec
loope
mov
rcr
retf
(bad)
pushf
jne
xor
xor
mov
mov
pop
frstor
mov
pop
jmp
push
xor
leave
loop
scas
mov
mov
and
shr
aad
push
mov
or
pop
outs
stc
sub
add
xor
sub
adc
sbb
pop
fistp
mov
(bad)
loop
pusha
hlt
cmp
(bad)
mov
or
jge
xchg
jmp
jmp
aaa
jmp
in
push
stos
outs
and
(bad)
call
into
dec
push
cmp
or
imul
test
rol
pop
test
xor
sub
xor
mov
ds
aad
pop
(bad)
fcmovnb
sub
scas
sub
stos
mov
fsubr
mov
jae
mov
push
fmulp
mov
sub
fistp
repz
mov
push
xchg
daa
cli
stc
imul
sahf
and
cmp
push
jecxz
or
sbb
call
je
mov
cmp
lods
ja
dec
push
inc
and
jno
cmp
out
lahf
jg
mov
inc
call
cwde
jge
jp
mov
pop
dec
retf
adc
mov
mov
cmp
jbe
mov
adc
arpl
movs
dec
push
pop
addr16
xchg
cmp
lds
data16
(bad)
imul
or
pop
pop
lock
daa
cmp
jle
(bad)
xor
(bad)
cmp
into
jl
xor
push
cmp
add
mov
mov
push
sahf
pop
dec
fnstcw
cmc
jmp
add
cmp
pop
jp
xchg
pop
cmp
cmps
cmp
pop
popf
pop
jg
in
loop
push
jb
lods
(bad)
(bad)
repz
add
jnp
pop
adc
mov
pop
imul
stos
dec
pushf
in
xchg
(bad)
inc
mov
add
or
fisubr
lahf
push
data16
dec
adc
lea
cs
cmp
fadd
lahf
or
push
scas
cmp
jle
das
dec
mov
push
cwde
mov
cmc
sbb
jmp
jmp
and
ds
imul
out
loop
inc
mov
aad
scas
addr16
pop
(bad)
mov
add
pop
xchg
ret
sti
sbb
jmp
sbb
pop
daa
cdq
jmp
or
sub
or
dec
lods
xchg
push
in
jo
pop
mov
mov
mov
or
stos
jmp
jl
shl
sbb
mul
addr16
xlat
pop
out
inc
dec
xchg
pop
sbb
test
cmp
inc
popf
sub
cmp
jmp
push
fucomip
pop
es
mov
mov
xchg
cmps
jmp
cs
mov
outs
jmp
jg
xchg
imul
sets
sqrtps
(bad)
xchg
pop
cwde
or
lods
mov
mul
test
mov
test
cmps
lea
fadd
stos
cmp
and
inc
push
fidivr
ds
adc
mov
outs
cdq
jno
jnp
jb
out
sbb
lods
mov
add
pop
mov
fcmovne
mov
adc
and
pop
or
dec
push
sub
lock
jg
xchg
dec
movs
imul
or
std
dec
int
or
adc
cdq
cmp
cmp
inc
leave
dec
inc
pop
push
add
in
into
or
lahf
mov
sbb
outs
or
xor
lea
jae
mov
fwait
aaa
pop
stos
out
inc
mov
xchg
aad
jns
aaa
pop
sar
stos
cmp
(bad)
imul
add
adc
sbb
pop
dec
cmp
(bad)
lods
movs
jmp
jmp
inc
jle
gs
mov
jl
sub
push
aas
cwde
mov
pop
out
int
mov
jmp
sub
sti
cmp
cmc
push
sahf
lods
lock
cmp
cmp
fnstenv
jle
mov
hlt
pop
or
(bad)
jnp
call
cmc
repz
jnp
add
sbb
sahf
jge
jnp
dec
sbb
popa
outs
cld
mov
pop
mov
stc
jmp
scas
xchg
dec
push
dec
or
push
ret
retf
imul
ficomp
mov
mov
sub
mov
shr
sbb
push
or
sti
aad
lahf
mov
(bad)
jmp
cmp
push
fwait
movs
xchg
inc
jno
xor
jmp
ror
jp
outs
retf
lea
cmp
sbb
scas
sub
scas
sar
jns
ja
jae
mov
movs
std
xor
les
sbb
inc
loopne
sbb
push
jnp
dec
outs
dec
test
test
push
pop
fisttp
sub
or
into
es
jecxz
outs
repnz
push
dec
rcl
(bad)
cs
shl
fmul
push
sbb
sbb
push
cdq
call
aas
std
adc
sbb
adc
scas
push
dec
in
bound
push
dec
bound
jno
repz
pop
jg
ins
and
loope
sbb
xor
push
int3
inc
add
mov
pop
test
and
aas
aam
mov
sub
into
fst
jns
stos
das
(bad)
cmp
xchg
js
jg
push
pop
adc
pop
and
lahf
out
cmp
jg
sbb
dec
xchg
jno
mov
sahf
stos
mov
push
mov
out
sub
out
cs
mov
fbstp
aas
mov
pop
scas
mov
pop
loope
fld
xchg
pop
into
pop
sbb
scas
icebp
jne
add
jbe
dec
jl
fisub
fistp
retf
dec
dec
mov
iret
pop
aaa
or
xchg
sti
cs
(bad)
out
mov
or
jp
mov
fwait
xchg
retf
inc
xchg
xor
call
inc
xchg
push
int3
ffreep
mov
into
into
dec
pop
mov
jns
pop
xor
aas
pop
mul
sbb
movs
stos
(bad)
mov
jle
icebp
idiv
push
mov
xor
cli
mov
jb
sub
fwait
leave
out
fst
mov
mov
mov
daa
jmp
repz
jmp
out
or
sti
pop
test
es
sbb
mov
dec
ins
pop
xchg
pusha
fwait
fwait
mov
stos
cld
sub
add
jle
in
clc
pop
adc
fucomp
loopne
jg
inc
sub
inc
pop
mov
lahf
pop
or
loope
hlt
inc
jnp
adc
push
mov
in
leave
mov
lahf
(bad)
xor
adc
pop
ds
push
popa
pop
inc
or
cmp
push
ja
test
movs
xchg
sbb
jb
test
adc
and
leave
fwait
sub
add
add
xchg
dec
push
gs
div
push
mov
mov
or
fwait
sbb
mov
mov
cmp
push
mov
jbe
mov
mov
mov
or
mov
pop
outs
out
fistp
lods
inc
sahf
mov
sti
push
and
push
lahf
icebp
scas
mov
jg
fisubr
aas
or
ja
jle
or
in
out
cli
mov
sub
or
cmp
mov
and
data16
retf
icebp
stos
enter
jmp
pop
mov
mov
(bad)
xchg
cmps
jecxz
cmp
jmp
cmps
add
xchg
in
jg
cmps
in
pop
add
or
pop
inc
fbstp
push
push
rep
inc
fisubr
dec
loopne
jae
mov
jno
iret
sahf
int3
jl
cmp
movs
into
mov
pop
mov
cwde
push
cmp
inc
loop
pop
in
leave
mov
cmp
clc
push
dec
jp
test
and
scas
mov
jecxz
and
test
iret
call
mov
sbb
pop
inc
xor
jle
inc
repz
test
jmp
loop
sub
sar
jmp
add
push
test
mov
sub
sahf
mov
int
aas
xchg
dec
sbb
or
xor
jo
xor
test
mov
paddw
test
sbb
sub
dec
pop
jg
div
imul
adc
inc
mov
pop
cmps
adc
sar
rol
scas
sub
(bad)
and
jmp
dec
adc
cmp
loope
daa
(bad)
(bad)
mov
sub
outs
jmp
jge
nop
pushf
test
sub
sets
pop
jns
(bad)
fld
sbb
mov
or
ins
dec
clc
imul
test
jecxz
mov
pop
ins
or
mov
mov
pop
mov
push
jnp
cld
jmp
retf
js
pop
out
xor
dec
or
pop
xchg
jle
mov
xor
adc
jge
mov
cmp
mov
out
jb
in
ret
fmul
adc
pop
jp
rcr
daa
jmp
ds
scas
jg
and
pop
jl
ds
cmp
outs
cmc
xlat
jmp
sar
into
sub
imul
in
sbb
push
ins
lahf
mov
pop
inc
out
sub
add
sbb
out
jge
mov
clc
or
jmp
xor
clc
(bad)
xor
mov
lock
and
push
jnp
pusha
mov
mov
je
fiadd
pop
stc
(bad)
mov
add
cdq
pop
mov
punpckldq
sub
inc
out
test
cmp
aas
call
cmps
(bad)
out
lods
push
lock
fidivr
mov
dec
and
inc
fsubr
jb
inc
ror
out
and
mov
repz
das
pop
imul
std
add
or
jns
mov
mov
scas
cmp
sub
add
sbb
bnd
adc
inc
or
mov
adc
lds
movs
push
pop
pop
in
imul
lock
mov
daa
dec
sti
pop
dec
les
aas
popf
enter
xchg
clc
add
scas
pusha
and
pop
sub
sub
imul
jo
cmp
and
cs
push
(bad)
fnstcw
lods
and
pushf
arpl
pop
jbe
ins
out
pop
outs
jmp
ds
jge
out
(bad)
push
or
cmp
pop
les
push
add
mov
in
xchg
sar
or
xchg
fisubr
pop
ins
and
cmp
int
mov
in
mov
dec
rcl
cld
dec
clc
sub
cmp
inc
loop
sub
jmp
jge
inc
sub
mov
aad
cmp
fsubr
cld
jle
pop
xchg
dec
pop
cld
push
inc
mov
not
out
cli
outs
call
push
pop
aas
push
pop
mov
sbb
jns
(bad)
(bad)
sub
mov
data16
sub
sub
fucomp
pop
jl
jmp
pop
pop
dec
retf
jo
mov
and
pop
mov
cs
pop
push
je
jg
dec
loope
jmp
scas
mov
mov
mov
dec
push
dec
add
xchg
push
fnstsw
mov
movs
jecxz
jmp
ss
jmp
pop
scas
cmp
pop
outs
iret
imul
sbb
sub
js
ins
fdivr
mov
lods
(bad)
out
(bad)
std
fdivrp
in
retf
push
sub
iret
stos
xor
retf
mov
je
add
pop
imul
dec
(bad)
mov
mov
fsub
stc
sub
fldcw
or
jnp
pop
ins
pop
call
cmp
in
pop
xchg
cdq
fwait
xchg
iret
loope
loopne
pop
jecxz
(bad)
lahf
dec
pop
mov
ins
shr
fcmovnbe
shl
mov
xchg
jno
popf
daa
gs
adc
mov
sub
push
std
jge
mov
jl
cld
pop
(bad)
cmc
xchg
mov
aas
dec
cdq
test
popf
pop
inc
leave
xchg
xor
loope
inc
fidiv
cmc
mov
pushf
mov
ja
or
sub
not
and
push
outs
jae
ds
jp
iret
loopne
fistp
(bad)
sub
arpl
popf
sub
sbb
cmp
(bad)
aaa
(bad)
cwde
call
or
pop
out
out
imul
mov
cli
(bad)
into
(bad)
push
lds
push
mov
jmp
les
retf
inc
mov
adc
daa
mov
outs
ret
dec
and
ret
stos
mov
ins
xchg
jno
mov
adc
(bad)
pop
repz
or
je
jp
pop
adc
xor
stos
jmp
fidiv
sti
push
jmp
clc
jp
push
outs
or
test
fwait
stos
aaa
jno
daa
aam
ret
jnp
fbstp
cmp
dec
and
sbb
and
cs
jmp
jmp
addr16
ss
push
sbb
lahf
in
adc
mov
mov
fstp
xchg
into
sbb
js
push
addr16
mov
pop
xchg
fild
lods
stc
loop
das
pop
ds
sub
dec
cs
shr
in
inc
add
xchg
clc
inc
aas
loopne
fld
outs
cmp
int3
jg
(bad)
mov
or
jb
cwde
or
stos
fadd
sbb
push
cmps
pop
repz
adc
sub
jp
jns
mov
(bad)
(bad)
mov
into
mov
push
adc
jnp
inc
or
pop
dec
jl
mov
pop
sti
pop
inc
movs
enter
and
pop
std
lea
jecxz
mov
jnp
and
xchg
cmc
mov
aam
movs
jno
movs
(bad)
in
in
out
fsub
movs
sub
xlat
dec
jns
outs
neg
sub
addr16
sub
push
daa
cmp
dec
push
or
push
sar
js
iret
or
push
or
(bad)
or
cmp
xor
add
xchg
jae
hlt
mov
imul
pop
adc
ins
xor
dec
js
xor
or
ret
sub
push
(bad)
js
hlt
add
pop
jbe
stos
ret
in
fldln2
sbb
ror
dec
push
shr
sbb
add
mov
lods
scas
out
(bad)
inc
movs
push
pop
pusha
fisttp
sub
mov
mov
and
inc
pop
push
sti
iret
dec
(bad)
jo
pop
(bad)
xor
lahf
call
sbb
add
or
cmp
jmp
pop
inc
stos
out
or
add
and
int
or
jbe
push
(bad)
or
outs
sub
add
shl
pop
sbb
jg
call
mov
iret
das
jmp
jle
(bad)
pop
jnp
into
dec
ins
pushf
in
sahf
in
xchg
fst
jmp
inc
arpl
pop
mov
(bad)
loope
repz
popf
mov
fdiv
inc
in
inc
std
pop
mov
popa
xor
test
dec
inc
clc
mov
dec
gs
adc
dec
cmps
push
hlt
cmp
cmp
jbe
out
jbe
inc
sbb
pop
cmp
dec
pop
sub
std
or
retf
repz
xchg
jns
or
scas
aaa
jne
or
pop
nop
push
and
add
loope
inc
fstp
fbld
in
pop
cmp
dec
jnp
mov
fnstcw
not
movs
mov
arpl
call
inc
or
into
das
(bad)
mov
push
inc
lahf
das
jno
and
push
and
mov
pop
dec
pop
dec
outs
and
stc
sub
repz
lea
inc
xor
push
mov
imul
dec
clc
daa
dec
mov
pushf
jg
mov
adc
mov
adc
cli
sahf
cmp
test
pop
ja
push
dec
jbe
or
sbb
fnstcw
jb
sbb
or
out
push
scas
std
das
cmp
sub
ja
adc
(bad)
das
rcr
or
sbb
sbb
cwde
pop
aaa
aam
ds
add
xchg
clc
jmp
leave
adc
mov
mov
fnstcw
ins
test
fimul
shr
dec
push
(bad)
adc
fwait
mov
pop
cmps
call
xchg
adc
shl
push
test
lds
hlt
sbb
fs
(bad)
sbb
push
push
lods
sbb
(bad)
fld
out
ficom
jb
ins
aad
pop
push
dec
call
das
and
mov
ins
push
add
daa
mov
in
mov
sbb
dec
mov
mov
out
stos
repz
sub
pop
aad
sub
adc
fnstenv
(bad)
mov
mov
cmps
pop
std
movs
loopne
(bad)
in
jmp
sbb
mov
and
ss
jnp
dec
mov
jge
imul
int3
cli
(bad)
sbb
and
lea
stos
clc
inc
pop
cmp
adc
mov
movd
sti
push
pop
pop
sub
sub
rdpmc
mov
cdq
mov
sar
sub
jmp
loopne
push
das
pop
xor
and
aaa
sub
(bad)
or
lock
dec
or
lea
mov
retf
into
mov
das
mov
pop
jo
add
mov
stos
or
fwait
dec
js
mov
sbb
push
cmp
pop
scas
mov
outs
push
add
jmp
daa
pavgw
ins
mov
cdq
frstor
scas
adc
mov
jge
in
popf
cli
mov
sbb
aaa
in
out
cs
pop
pop
fidivr
fstp
jp
and
mov
jnp
rcr
ds
dec
mov
(bad)
jne
sahf
pop
or
dec
jmp
imul
rcr
mov
xchg
out
(bad)
inc
cmps
dec
sub
add
and
inc
mov
loopne
cmps
ror
pop
setg
sub
xor
or
scas
cwde
movs
or
jle
fwait
and
mov
in
jg
loop
ins
fdivr
nop
movs
stos
push
or
bound
cdq
dec
scas
fucomi
dec
in
xchg
psubusw
jmp
mov
cmp
or
sub
cmps
dec
mov
ins
cmps
ret
inc
mov
mov
xchg
call
mov
push
sub
dec
in
std
sub
xchg
push
in
(bad)
mov
xchg
xor
cmp
jp
jmp
mov
mov
jbe
pop
jl
lds
jno
stos
lahf
or
dec
jne
or
xchg
mov
mov
cli
mov
aad
sub
add
mov
mov
add
test
push
wrmsr
sahf
mov
retf
fldcw
cmp
pusha
mov
jno
cmp
jne
icebp
mov
lahf
clc
das
jmp
jo
or
movs
cmp
jecxz
ins
mov
mov
sub
mov
mov
nop
adc
push
mov
daa
das
xchg
dec
pop
jns
jae
fdiv
inc
fisubr
push
cmp
fldenv
stos
xchg
adc
adc
dec
hlt
stos
jle
dec
cli
inc
inc
(bad)
mov
mov
stos
loope
dec
fucomi
loop
dec
aas
(bad)
(bad)
repz
add
or
pop
pop
(bad)
jp
jmp
fisubr
fstp
mov
mov
push
push
adc
add
push
(bad)
dec
push
ins
repnz
dec
dec
sar
in
pop
jb
jl
popf
std
out
sbb
mov
sub
xor
jnp
sub
test
inc
sub
mov
and
add
pop
(bad)
retf
mov
test
dec
mov
push
cmps
cmc
aas
outs
ret
jo
mov
popf
aaa
xchg
xchg
sbb
push
jp
gs
lock
fldpi
pop
or
int
push
iret
in
sub
push
ins
inc
jge
mov
bound
ins
push
ds
dec
jae
mov
mov
sbb
retf
mov
into
sub
(bad)
stos
cmc
dec
js
push
jmp
push
ja
or
es
inc
sub
out
jmp
mov
mov
popa
mov
cmps
push
sub
aam
fwait
xchg
or
add
dec
mov
jge
setl
inc
cmp
aam
movs
jo
cs
outs
retf
nop
jae
mov
mov
add
pop
cmp
std
movs
fsubr
jno
lahf
jb
mov
add
pop
or
mov
mov
pop
shl
or
jp
pop
or
in
scas
scas
in
(bad)
and
scas
pop
jmp
das
inc
push
jl
sbb
sub
jnp
dec
ins
in
in
mov
call
outs
push
sysenter
inc
(bad)
push
jmp
or
clc
ins
mov
std
dec
jg
in
(bad)
fst
inc
pop
cmp
add
xor
mov
mov
out
inc
xchg
jae
ret
sbb
dec
das
aam
imul
cdq
jb
imul
sahf
jno
or
add
out
daa
and
lea
push
or
xor
ds
and
out
jg
mov
(bad)
inc
cwde
cwde
jns
in
scas
retf
cmp
xlat
pop
aaa
inc
sub
and
movs
std
xchg
sub
sbb
ds
stos
mov
mov
clc
test
lahf
adc
jg
std
jne
cmp
jmp
mov
inc
add
sbb
or
xchg
fwait
rcr
dec
vaddps
xchg
add
loope
jecxz
movs
inc
jbe
(bad)
jg
mov
adc
iret
xchg
xor
mov
lds
cdq
(bad)
and
int3
daa
adc
lods
(bad)
call
test
mov
inc
mov
jp
test
out
jns
nop
fistp
mov
in
sti
in
mov
sti
adc
xchg
outs
mul
xchg
mov
fadd
and
lahf
(bad)
jecxz
into
(bad)
out
lahf
jnp
fst
push
(bad)
sti
xchg
cli
mov
bound
cmp
enter
aaa
mov
sbb
repnz
mov
add
lahf
xor
lods
call
push
lock
icebp
jp
retf
sbb
mov
mov
sbb
popa
sub
xchg
pop
sti
xor
push
outs
fcmovnbe
mov
inc
add
lock
pop
push
or
mov
xor
mov
lahf
adc
inc
pop
in
push
stos
inc
xchg
iret
test
dec
cmp
es
sahf
cmp
pop
mov
ins
clc
fidiv
xchg
out
inc
pop
stos
cdq
test
ficomp
jmp
call
jle
inc
jmp
fs
cmc
gs
pop
fild
outs
jp
pop
add
push
push
dec
fdivr
dec
loope
mov
out
out
stos
add
sub
jbe
and
cmps
das
adc
or
pop
outs
pop
aad
das
cmp
and
fnop
ret
sbb
repz
or
int3
adc
sbb
jne
outs
jmp
mov
int
sbb
fcomp
cmc
popa
mov
mov
dec
das
aam
leave
inc
mov
push
daa
sti
call
fadd
dec
out
xchg
js
ds
test
pop
xchg
fdivrp
lods
mov
jne
jb
and
sub
call
popf
retf
cmp
dec
add
mov
neg
sub
aas
pop
fimul
(bad)
cli
pop
and
jo
call
inc
adc
popa
pusha
fild
fiadd
aas
xchg
cmp
in
jmp
mov
cmp
lock
adc
sub
lods
sbb
les
jle
cmc
in
adc
loopne
dec
dec
arpl
push
pop
mov
push
mov
cli
mov
push
pop
call
dec
dec
scas
sub
sub
dec
stos
and
dec
jno
jmp
sub
ds
cmp
jmp
xchg
sbb
cs
outs
movs
out
fisub
or
mov
call
push
scas
psubsw
das
cmp
inc
mov
(bad)
mov
stos
(bad)
jne
icebp
retf
sbb
mov
shl
dec
fldcw
mov
push
retf
outs
mov
ud1
push
ins
loop
dec
sbb
lahf
jmp
push
sub
(bad)
js
dec
jge
cmp
sub
mov
(bad)
ds
popf
xchg
leave
(bad)
xchg
ins
out
fisubr
mov
mov
jp
pop
int3
and
sbb
adc
jmp
aad
fidiv
out
adc
add
add
call
sbb
imul
jb
cmp
nop
push
lds
outs
inc
inc
retf
aaa
xor
sub
fstp
lods
in
mov
push
clc
mov
je
and
or
xor
inc
push
pusha
(bad)
stos
cwde
cld
mov
xor
cmp
outs
movs
shr
dec
xchg
add
cmp
xchg
or
pop
mov
pop
stc
add
inc
cmp
dec
pushf
retf
dec
cmc
jno
mov
je
or
icebp
stc
cmp
push
sbb
out
lods
sub
lea
pop
mov
sub
movsx
in
aas
jmp
adc
cmp
mov
jbe
and
in
cs
inc
sahf
pop
cli
int
adc
rol
dec
mov
cmp
jo
sti
into
xchg
ins
jmp
mov
pop
jns
(bad)
dec
je
xor
jmp
pushf
jmp
aas
or
push
jno
(bad)
popf
pop
cmp
add
sub
sahf
bound
movs
icebp
inc
(bad)
pop
add
cmp
push
mov
mov
in
icebp
mov
movs
ret
ret
cmp
imul
dec
pop
xchg
sbb
outs
rcl
and
or
pop
sub
xchg
xor
mov
out
push
mov
xchg
pusha
arpl
push
popf
fwait
int
dec
popw
lods
xchg
xchg
mov
hlt
xchg
or
xlat
loopne
not
fcomp
das
(bad)
mov
fist
lock
and
(bad)
lea
pop
jp
test
pop
cwde
aaa
adc
or
dec
stc
cmp
inc
mov
lds
mov
dec
adc
dec
ror
jne
add
adc
jmp
sahf
js
inc
fisub
(bad)
dec
push
mov
lea
imul
std
imul
stos
jnp
add
jnp
aad
rcl
aas
cld
dec
popa
xchg
mov
sub
into
jbe
dec
dec
cmp
mov
sub
xchg
add
pop
into
pop
adc
mov
xorps
data16
clc
or
movs
jmp
mov
add
popf
and
lods
sub
mov
jg
or
push
scas
mov
cmp
ror
(bad)
push
movs
push
outs
pop
loop
xchg
jle
or
imul
push
push
sub
ficom
std
or
jnp
out
sub
jne
movs
out
mov
jns
push
out
icebp
jno
cmp
pop
or
pop
and
xor
mov
sub
jg
and
test
stos
das
jmp
or
fiadd
(bad)
daa
mov
stos
js
ins
mov
xor
psubusb
add
aaa
int
jne
and
shr
sbb
sub
scas
dec
stos
inc
in
into
or
cmps
dec
imul
out
push
fcomp
jecxz
lahf
stos
sbb
dec
jae
cmc
out
fwait
out
adc
lods
push
ds
pop
cmovp
or
or
aas
xor
jle
hlt
in
dec
icebp
jg
or
mov
cmp
dec
sub
cmps
pop
add
sbb
inc
mov
pop
jno
xor
xlat
es
dec
pop
or
dec
mov
pop
ins
pop
push
nop
call
sbb
cmp
(bad)
mov
push
test
sbb
jp
mov
xor
lock
popa
call
leave
sbb
(bad)
idiv
ja
or
aaa
addr16
in
cmp
xor
cmp
imul
mov
pop
pop
iret
push
jmp
fstp
mov
icebp
mov
loop
sti
push
in
rcr
or
mov
add
arpl
ja
out
std
je
mov
xor
inc
or
dec
push
or
shl
dec
jo
or
cmp
push
ror
std
fyl2xp1
or
into
jg
mov
jg
mov
jo
imul
cmps
stos
lods
push
adc
jmp
or
dec
(bad)
fbstp
inc
(bad)
jb
sub
cmp
in
into
in
push
pop
jg
dec
pop
push
mov
mov
sbb
lea
adc
mov
pop
mov
stos
(bad)
clc
add
ror
or
cdq
mov
fsubr
data16
add
in
iret
sti
pop
jae
dec
ret
call
je
sbb
add
loop
add
xchg
push
mov
add
pop
pop
das
retf
sub
cld
jmp
sbb
sahf
push
pop
mov
daa
xchg
inc
(bad)
jmp
xor
cmp
jne
add
push
lds
add
out
scas
in
rcl
add
jnp
pop
ja
addr16
xchg
bound
dec
outs
mov
cmp
cmp
dec
rol
popf
or
outs
adc
adc
addr16
jmp
cmp
xchg
mov
(bad)
mov
jl
(bad)
mov
fwait
jecxz
jp
xlat
jmp
mov
out
jg
imul
adc
stc
out
iret
in
rcr
push
popf
mov
xchg
jg
cmp
into
aas
sub
scas
iret
push
pop
aas
mov
and
test
xchg
cmp
cmp
xor
mov
call
or
and
lods
mov
sub
jl
cli
inc
lea
xchg
icebp
icebp
fld
dec
cli
pop
pop
sti
mov
iret
xchg
pop
or
sub
push
jne
call
ja
pop
dec
mov
lods
dec
jno
fcomp
cld
sar
stos
or
push
mov
pop
fist
fisubr
leave
retf
jecxz
mov
leave
jle
scas
out
inc
pop
loopne
daa
jge
out
jnp
lea
inc
mov
adc
cmps
fist
imul
cmp
pop
inc
(bad)
cli
inc
pop
sbb
sbb
popf
jecxz
jmp
push
pop
sbb
push
mov
fs
retf
mov
idiv
mov
mov
fist
sub
inc
sbb
(bad)
fstp
mov
aaa
imul
loope
adc
or
aas
jo
clc
repz
jae
shr
sbb
std
mov
cmp
jnp
xchg
sbb
dec
retf
popf
mov
in
int
dec
mov
pop
xchg
aaa
jp
dec
pop
mov
fistp
pop
cmp
pop
scas
out
aas
dec
cmps
ins
fdivp
out
mov
(bad)
fld
sbb
cmp
loopne
add
int
imul
dec
test
in
add
jb
push
push
shr
jmp
cld
inc
dec
pop
(bad)
aas
mov
cmp
xor
push
out
retf
out
lar
aas
sub
jno
cdq
jmp
fcomp
sbb
lods
cmc
mov
sbb
das
dec
push
shl
outs
js
jl
xchg
ffreep
popf
cli
ds
xor
in
or
dec
(bad)
cmp
outs
jmp
cs
mov
aad
dec
push
jnp
iret
into
sub
add
inc
jecxz
cli
jecxz
and
mov
mov
in
xchg
xor
cs
sbb
movups
pop
pop
pop
fwait
scas
loope
mov
ror
clc
je
scas
jp
cs
or
add
jmp
dec
test
mov
scas
and
iret
and
in
xchg
or
xor
mov
mov
stc
sub
fmul
adc
lahf
pop
in
pop
or
lea
lods
jbe
push
imul
aaa
test
jle
xlat
or
push
sbb
mov
sti
outs
pop
ins
jmp
arpl
dec
stos
movs
mov
adc
iret
dec
cmp
iret
sub
inc
sbb
(bad)
sbb
cmp
(bad)
mov
mov
or
inc
test
mov
cdq
sub
scas
lea
int
sbb
inc
cmp
nop
movs
jl
mov
jecxz
fistp
sahf
jnp
push
push
movd
out
shl
sub
test
call
leave
int
fwait
push
add
inc
inc
fimul
cmc
imul
in
nop
jmp
paddsb
push
retf
add
fcomp
pop
add
inc
dec
ins
lea
sub
pop
xor
push
rol
dec
pop
test
mov
scas
outs
cli
in
cmc
sbb
call
test
jae
cmp
push
pop
adc
pop
aas
or
mov
movs
fdivr
out
(bad)
xor
leave
cmp
inc
pop
pushf
(bad)
mov
scas
jmp
fs
sub
mov
jnp
xlat
dec
adc
imul
or
imul
outs
push
pop
pusha
dec
out
(bad)
jl
sti
pop
stc
sbb
jecxz
dec
mov
adc
jmp
xlat
in
xchg
xor
lods
add
stos
rcr
pop
mov
les
pop
lods
pop
std
dec
jle
daa
call
add
iret
jmp
sbb
fcom
and
jbe
push
fcmove
js
pop
iret
inc
outs
cmp
xor
pop
mov
sub
add
sbb
int3
sub
and
mov
dec
push
sti
ret
add
xlat
out
sbb
je
pop
xchg
pop
xchg
adc
mov
test
cmp
call
mov
push
out
(bad)
addr16
test
sbb
fadd
push
inc
or
cmp
pushf
rcl
dec
cmp
mov
outs
xor
int3
inc
sti
sti
call
cs
cmp
ret
dec
mov
mov
inc
xchg
xchg
adc
call
sub
mov
or
pop
mov
lahf
ins
pop
mov
jp
fs
jb
iret
cmps
lods
xor
je
adc
push
ror
adc
mov
loope
sbb
fcomp
dec
sub
add
mov
cmp
pop
mov
mov
ja
repz
and
push
mov
sahf
enter
mov
xchg
popa
mov
popa
inc
jo
fwait
xchg
jmp
mov
sbb
int
jmp
xor
clc
mov
jo
cs
in
repz
sahf
cmp
pop
push
pop
pop
into
(bad)
in
sub
mov
sbb
inc
dec
call
inc
mov
sbb
sub
dec
and
mov
mov
adc
or
out
cmps
jl
jo
addr16
ins
inc
adc
(bad)
jmp
push
ins
mov
int3
sub
cdq
jno
dec
aas
fdiv
iret
inc
jbe
jno
in
inc
and
sbb
aaa
fwait
lods
xchg
jecxz
jbe
sahf
fs
mov
mov
mov
fs
stos
pop
(bad)
rcr
(bad)
outs
mov
or
inc
fcmovne
inc
cs
pop
push
popa
scas
inc
test
jp
cmp
aam
lods
cmps
push
aas
mov
push
adc
pop
stos
mov
adc
mov
cwde
pop
in
dec
daa
jp
jnp
add
mov
fcos
dec
pop
jmp
mov
popa
xor
popa
sub
push
and
or
icebp
or
scas
pop
sub
(bad)
sub
neg
in
cmp
sti
cmps
cmc
out
inc
push
jl
xchg
sbb
fwait
test
es
into
in
fdivrp
inc
sub
xor
scas
pop
fmul
jae
mov
fdiv
jmp
add
das
ror
sbb
aas
ins
scas
adc
or
xchg
cmp
mov
hlt
mov
fdivr
ins
ret
or
inc
lea
daa
xchg
inc
mov
fisubr
retf
in
fild
sbb
sbb
pop
push
or
mov
or
stos
movs
in
in
outs
dec
sahf
imul
les
outs
dec
retf
fucomip
test
add
and
and
dec
jo
jns
ss
ins
gs
cmp
add
sbb
mov
jb
mov
mov
popf
sub
cmp
jp
xor
lahf
dec
adc
aad
fwait
push
dec
iret
iret
mov
cld
dec
(bad)
jnp
(bad)
jb
pop
push
lahf
sbb
ins
clc
dec
into
nop
jb
or
popf
push
cmp
ret
or
jl
inc
xchg
out
inc
sub
pop
xor
and
movs
inc
out
retf
cli
rol
jle
dec
pop
cmp
inc
sahf
jns
mov
mov
les
and
call
dec
jmp
lahf
fwait
stos
jnp
sub
rol
cmp
and
add
push
retf
daa
xchg
jle
pause
lea
or
adc
push
sar
inc
in
sub
cmps
push
ficom
jmp
jne
adc
(bad)
daa
shl
test
mov
fdiv
cmp
test
fwait
push
jnp
jecxz
or
xor
adc
(bad)
or
add
add
mov
test
sti
rcr
sbb
inc
sti
aaa
fcomp
pop
jmp
sbb
xchg
mov
jp
int3
and
lock
or
fcom
push
call
cmps
jmp
jmp
pushf
cdq
pop
cmp
cs
sar
jge
inc
mov
pop
cmps
mov
movs
mov
mov
cmp
jge
out
out
or
cmp
outs
jl
addr16
inc
xor
(bad)
cli
pop
adc
mov
int
test
pop
sub
add
xchg
out
std
std
popf
imul
sub
retf
stc
jmp
xor
ds
out
adc
addr16
pop
stc
rcl
stos
sub
and
adc
cld
dec
scas
xor
sbb
adc
neg
(bad)
outs
or
iret
dec
ret
or
adc
jo
cmp
leave
popf
dec
adc
mov
ja
stos
push
sub
in
sub
pop
add
inc
dec
std
adc
cmp
push
mov
and
loope
jp
mov
cmc
pop
push
pop
sbb
jg
ds
lds
loope
and
sbb
xlat
lahf
bound
inc
push
test
cs
aaa
repz
stos
call
dec
mov
fucomp
push
lods
cmp
dec
mov
into
adc
outs
sub
and
enter
cli
loope
cmp
xchg
dec
push
sub
pop
or
jo
jns
xor
mov
(bad)
into
adc
ret
or
lahf
add
into
into
sub
dec
movs
mov
jnp
iret
cld
dec
aam
mov
jb
ficomp
jle
and
mov
ret
cli
das
repnz
jb
dec
cs
call
cmp
cmp
mov
les
xor
call
mov
jp
(bad)
imul
jmp
int3
push
ror
ss
mov
cmp
dec
inc
sbb
mov
sub
std
jno
mov
fild
mov
retf
sbb
retf
push
mov
mov
inc
pop
shr
push
inc
inc
clc
dec
call
mov
xchg
jge
dec
jecxz
in
dec
int3
and
push
and
sub
clc
das
pop
sub
fdivr
pop
outs
clc
imul
dec
outs
shrd
push
sbb
into
xchg
adc
dec
bound
xor
call
aam
call
adc
cmp
lods
mov
or
dec
lahf
jmp
mov
popf
pop
xor
retf
das
std
mov
mov
js
mov
gs
xor
mov
cwde
sti
jge
leave
and
push
mov
stos
adc
cmp
adc
fistp
mov
mov
lahf
mov
mov
mov
xchg
push
(bad)
sub
inc
dec
lods
aas
inc
dec
xchg
fisubr
mov
push
jl
je
fwait
loope
jge
adc
mov
fs
imul
and
shl
jmp
dec
daa
daa
ins
or
out
test
jge
xchg
push
test
pushf
icebp
inc
aas
and
push
punpckhdq
test
mov
pop
pop
cmc
das
mov
xor
adc
push
cmp
mov
shr
imul
stc
mov
enter
sub
xchg
shr
stos
push
dec
int
hlt
jnp
inc
jge
cmp
enter
sub
idiv
jnp
(bad)
pop
sub
ret
dec
pop
movs
test
test
mov
fisttp
ds
fsubp
les
inc
dec
cs
daa
sbb
retf
pop
mov
(bad)
fnstenv
sti
mov
xlat
mov
inc
lods
add
jmp
inc
inc
lea
shr
aas
repnz
xchg
out
cmp
jmp
mov
or
iret
mov
pop
xchg
mov
mov
push
cmp
int
mov
pop
push
mov
cld
mov
out
sub
sbb
mov
std
cli
imul
scas
leave
rcr
daa
inc
out
pop
dec
mov
test
aas
push
imul
add
mov
push
jne
(bad)
retf
cmps
rcl
call
mov
ins
jns
fcmovb
dec
imul
xchg
stos
lods
neg
lahf
xor
jbe
mov
(bad)
jnp
and
mov
sbb
pop
dec
sbb
jle
sub
lock
add
push
add
dec
rcr
cmp
jnp
in
sbb
dec
loop
fstp
cwde
dec
pop
pop
dec
in
retf
aas
iret
dec
sbb
scas
pop
pop
xchg
call
jae
jl
jmp
(bad)
out
sub
scas
sahf
sbb
daa
sub
nop
rcr
rol
jmp
pop
scas
and
mov
adc
imul
(bad)
imul
adc
fiadd
or
imul
mov
(bad)
into
adc
addr16
ja
sub
lock
sub
js
sub
sub
aas
ret
pop
(bad)
rcr
xor
push
push
jg
push
std
dec
out
mov
clc
fadd
pop
in
lds
gs
inc
fwait
push
sub
xor
loope
outs
xchg
inc
stc
into
adc
imul
push
fcmovb
xor
xchg
cmps
and
jns
xchg
clc
pop
xchg
cmp
test
jo
cmp
stos
cmps
cmp
(bad)
xchg
daa
xchg
jo
mov
and
push
dec
scas
sbb
mov
mov
jmp
jmp
sub
or
rol
xor
popf
das
call
pop
push
mov
dec
loop
sub
sbb
pop
lods
sbb
(bad)
xchg
loop
and
or
xlat
pop
cld
xchg
aas
sub
mov
imul
lock
sub
inc
mov
push
iret
sbb
(bad)
fucomip
pushf
sti
and
out
inc
into
mov
add
imul
fwait
mov
jnp
fistp
and
ds
push
jmp
lahf
pop
inc
je
shl
or
add
popf
mov
iret
sahf
or
push
imul
push
sbb
add
dec
sti
push
or
jp
sbb
dec
sbb
push
dec
sti
mov
lahf
jmp
scas
daa
int
shr
cdq
shl
sbb
dec
xor
xor
stos
push
cs
add
or
mov
push
cs
or
data16
push
push
mov
ss
mov
stos
and
mov
retf
push
cmp
cld
sub
dec
sub
(bad)
xchg
mov
sbb
add
and
stos
pop
and
xchg
aam
jle
mov
mov
cdq
hlt
lds
addr16
mov
fild
xor
push
or
call
push
inc
lds
sahf
cs
push
or
mov
sub
std
(bad)
daa
not
sti
jmp
movs
add
cs
cmp
addr16
test
cmps
mov
dec
pop
jb
mov
aas
movs
sbb
and
dec
stos
out
dec
ret
jg
or
pop
dec
jae
(bad)
jo
in
mov
lods
test
in
mov
out
ret
aas
jno
cmc
das
or
sbb
arpl
imul
xor
das
ja
or
psubb
fisubr
push
ror
mov
cmc
imul
cld
cmp
scas
rdtsc
popf
xchg
mov
stc
jae
in
adc
xchg
(bad)
pop
jmp
adc
xchg
(bad)
imul
push
and
arpl
push
or
fistp
cmp
das
aaa
add
sti
mov
sub
sub
mov
cmp
fwait
lods
cmp
(bad)
mov
lock
sub
sub
jnp
cmp
pop
pusha
dec
movs
or
(bad)
lahf
adc
sub
ja
rcr
jg
and
sbb
mov
jmp
xlat
mov
xchg
out
jne
mov
cmp
ins
movs
js
mov
ds
rcl
mov
xchg
mov
add
add
dec
dec
js
shl
sub
mov
sbb
push
aas
mov
cli
jbe
imul
and
(bad)
(bad)
mov
push
out
jmp
sub
xlat
mov
inc
enter
test
cli
add
dec
cwde
sbb
cmp
mov
imul
or
dec
jmp
mov
fadd
sub
mov
sub
cwde
cld
mov
or
aam
mov
mov
clc
push
xchg
mov
and
sub
mov
or
aas
push
adc
mov
ror
jne
mov
pop
outs
jmp
mov
fstp
ficomp
pop
(bad)
push
xor
jg
pop
retf
ret
retf
or
aas
call
push
je
jecxz
cmp
lahf
pop
imul
in
clc
retf
mov
cmp
or
cld
jge
pop
sbb
mov
or
cli
idiv
clc
out
popf
repz
(bad)
mov
dec
push
or
jnp
lea
push
mov
inc
mov
ja
out
mov
enter
sub
fst
cli
cdq
dec
jnp
dec
push
or
jle
sbb
(bad)
dec
xchg
into
lds
push
dec
das
jns
xchg
jbe
int
popa
mov
ins
(bad)
sbb
int
stos
push
icebp
fist
fstp
add
mov
dec
mov
out
jecxz
adc
push
(bad)
out
movs
sahf
movs
je
or
fcmovne
xor
mov
pop
mov
out
cld
xchg
das
inc
sbb
jb
outs
enter
mov
test
pop
adc
addr16
lods
pop
dec
xchg
cld
mov
push
mov
jecxz
sbb
fnstenv
std
push
mov
dec
cmp
sbb
int3
jge
mov
push
xor
arpl
dec
lods
adc
jle
imul
(bad)
enter
shl
jmp
cmp
xor
pop
adc
loopne
(bad)
cmp
and
cmp
mov
mov
or
stos
inc
xchg
stos
movs
imul
fild
and
pop
les
arpl
leave
iret
icebp
ss
dec
in
or
je
dec
jmp
js
test
mov
shl
xchg
retf
mov
aam
jo
xor
mov
icebp
add
sahf
jmp
aad
jmp
sub
mov
imul
mov
pop
mov
into
jg
sbb
mov
xchg
push
cmps
lock
and
out
into
movs
test
jmp
push
mov
or
out
enter
mov
in
cld
sub
and
pop
aaa
sbb
std
mov
hlt
xlat
dec
pop
add
sub
lahf
push
xchg
in
xchg
adc
push
dec
mov
push
push
iret
daa
cmp
mov
inc
out
lahf
sub
into
stos
jl
dec
fisubr
aad
cmp
cs
xchg
add
pop
sbb
mov
xchg
mov
xchg
mov
adc
js
lea
xor
(bad)
xor
inc
or
adc
scas
scas
add
jae
xor
outs
arpl
call
stos
mov
pop
iret
pop
or
idiv
mov
imul
mov
fadd
xor
(bad)
inc
mov
inc
pop
(bad)
out
sbb
xchg
mov
sbb
xchg
sar
addr16
add
outs
(bad)
retf
aas
jmp
mov
ucomiss
mov
cmp
jecxz
and
fcomp
arpl
mov
ins
aam
ja
shl
mov
dec
ins
fdivr
mov
fmul
cmps
imul
(bad)
cli
jge
push
push
ds
(bad)
push
dec
cs
push
scas
add
and
push
cdq
cmp
(bad)
int
mov
inc
and
lahf
mov
inc
or
lods
sbb
scas
(bad)
pop
bound
test
push
cs
cmc
sub
jo
fs
push
dec
mov
cmp
fwait
jns
ret
shl
out
pop
out
cdq
push
and
push
push
mov
icebp
or
fdiv
icebp
aad
adc
xchg
cwde
cmp
xor
mov
pop
jmp
test
shr
sub
mov
cmp
sub
cmp
out
lods
push
cdq
cwde
test
dec
mov
inc
jb
test
jle
mov
pop
data16
imul
into
movs
idiv
sahf
das
jmp
popf
fdivr
cvttps2pi
mov
push
sti
cmp
cdq
daa
dec
xchg
ins
repnz
(bad)
hlt
daa
sub
scas
imul
pop
add
sub
pop
push
xlat
push
push
inc
das
sbb
cmp
sti
xchg
arpl
or
mov
jae
ja
mov
retf
pop
sti
(bad)
sub
cld
mov
in
repnz
idiv
imul
xor
add
scas
mov
mov
jae
imul
out
cld
lahf
dec
frstor
jge
sti
mov
and
push
std
test
test
iret
imul
imul
and
pop
inc
inc
or
sub
mov
es
xor
adc
fistp
push
xchg
outs
sbb
movs
jno
repz
lods
jmp
(bad)
mov
cdq
(bad)
inc
cmp
(bad)
cmp
(bad)
mov
cmps
cmp
mov
out
ins
and
sbb
dec
nop
jmp
adc
and
push
enter
or
dec
stos
into
movs
adc
(bad)
jmp
cmp
cmps
mov
out
pop
pop
std
dec
jp
out
movs
mov
and
je
mov
movs
add
sbb
mov
repz
sti
xchg
jg
test
in
das
pop
sar
mov
sub
adc
jecxz
mov
add
js
dec
sti
xchg
xor
or
mov
pop
cmp
int3
push
ja
mov
out
lods
inc
iret
dec
sbb
popa
lods
xchg
dec
mov
aam
sbb
in
ret
xlat
movs
xchg
or
mov
ror
test
cwde
lahf
jmp
pop
into
dec
mov
jle
shl
inc
jmp
pop
pop
test
enter
jp
sub
sti
mov
dec
mov
mov
dec
stc
push
mov
xchg
cmp
push
jl
sub
mov
push
sbb
sbb
cmp
outs
pop
dec
sbb
pop
pop
dec
push
mov
test
inc
retf
popa
test
pop
or
scas
pop
jmp
jg
mov
dec
ins
pop
sbb
lock
pop
mov
or
add
mov
xor
in
or
cmp
movs
dec
push
(bad)
or
imul
sahf
(bad)
xchg
sahf
lods
mov
fldz
loopne
cli
lock
fmul
and
xchg
sahf
ins
stos
movs
push
call
fwait
popf
clc
enter
adc
aas
pusha
(bad)
and
jle
shl
je
mov
cmp
jmp
push
cmp
inc
inc
pop
lods
sbb
or
scas
scas
push
lods
mov
cmps
stos
mov
(bad)
repz
pop
loopne
sar
(bad)
jnp
ins
inc
ja
mov
sbb
sahf
stos
rol
jmp
or
push
push
neg
aaa
mov
or
test
aad
jmp
jbe
fstp
dec
xlat
cmp
push
inc
imul
je
scas
(bad)
mov
jno
cmp
in
mov
pop
cmp
ja
jle
inc
mov
in
sub
push
scas
and
fmul
push
or
cmp
jnp
sbb
sbb
fnstenv
push
xor
cmp
cli
add
ds
std
cmps
jnp
fld
mov
xchg
mul
test
std
sti
pop
les
jg
(bad)
das
push
mov
je
test
xchg
dec
mov
fisttp
dec
retf
fcmovne
mov
js
cmovnp
fild
push
mov
imul
popa
sub
sahf
outs
retf
xchg
pushf
push
sbb
add
xor
cmp
fwait
pop
sub
xchg
scas
out
dec
dec
jmp
jle
add
je
or
sub
or
sbb
movsx
or
scas
outs
xor
pop
mov
arpl
dec
xchg
repz
push
retf
scas
ret
stc
xchg
call
ss
sbb
sbb
ret
jnp
xor
(bad)
iret
mov
outs
and
cmp
retf
inc
loopne
or
push
pop
lahf
push
mov
sub
rol
fucomp
fucomip
mov
cmp
imul
(bad)
jmp
add
fcom
cdq
dec
aas
mov
lahf
arpl
out
mov
(bad)
fild
push
fiadd
dec
sub
cmp
or
inc
mov
fmul
scas
inc
jmp
stos
out
cmp
(bad)
dec
fstp
jg
xchg
retf
fadd
mov
ret
push
fdivrp
or
in
jle
add
test
inc
loopne
xor
jmp
xchg
jg
add
(bad)
mov
sub
push
push
sub
(bad)
jmp
out
adc
rcr
push
and
pop
retf
sub
jge
dec
sar
call
movs
pop
or
iret
jle
aam
cmp
das
pop
cmp
lods
or
(bad)
sahf
xor
cmp
jl
inc
and
jnp
xchg
xchg
je
iret
adc
(bad)
xor
lds
and
sbb
lods
popa
or
call
(bad)
lahf
mov
and
ror
cs
mov
aam
dec
jl
xor
adc
ins
sahf
mov
push
cmps
lods
int
cs
in
pop
hlt
mov
ja
sub
(bad)
sbb
inc
shl
sbb
aaa
or
xchg
bound
ins
and
push
rcr
mov
fnstcw
es
push
pop
pop
aam
(bad)
(bad)
jmp
mov
scas
jnp
outs
cli
push
jns
fwait
mov
ja
push
shr
test
cli
mov
jle
das
push
and
ficomp
ret
cmp
ficomp
call
out
popf
(bad)
fistp
dec
sub
or
das
outs
jle
outs
(bad)
jmp
call
fstp
add
aas
or
sub
and
mov
cs
stos
pop
enter
mov
out
or
pop
das
bound
js
scas
sub
mov
lock
lock
inc
jns
mov
nop
or
dec
mov
cmp
outs
and
les
and
lahf
retf
pop
push
retf
out
int
and
mov
pop
fabs
jmp
push
imul
call
pop
sbb
inc
jns
mov
mov
cdq
mov
dec
push
mov
movlps
out
dec
mov
scas
xchg
cmps
add
sbb
push
hlt
xchg
push
mov
or
and
push
add
or
mov
dec
dec
sub
sub
inc
cwde
repnz
pop
mov
mov
dec
fucom
cwde
stc
fcmovbe
jmp
add
jg
cmp
fwait
mov
stos
push
out
dec
addr16
test
pop
adc
stos
inc
lods
jno
pop
in
dec
dec
inc
cwde
sub
xchg
jle
test
push
sbb
cmp
jl
sbb
xchg
mov
sti
sahf
in
mov
ror
(bad)
cmc
sar
xchg
pop
ins
inc
sub
jbe
gs
mov
enter
retf
mov
cmp
sbb
pop
push
aas
sub
lods
cmp
outs
dec
dec
mov
inc
mov
inc
lods
xchg
pop
mov
xchg
cmp
ret
and
cmps
fisttp
mov
mov
sub
pop
shr
leave
jmp
pop
sub
cmp
outs
call
cli
fwait
sbb
mov
sti
push
pushf
mov
lea
stc
mov
xlat
scas
test
lods
or
mov
xlat
mov
sbb
and
sbb
je
movs
push
xchg
cs
push
pop
sbb
iret
mov
stos
hlt
imul
fnsave
jg
push
fcomi
sub
adc
jb
lea
jns
cmc
xor
cmp
mov
stos
call
xchg
aam
adc
jle
mov
pop
jl
mov
mov
xor
pop
push
mov
div
aam
cwde
inc
lahf
push
sbb
leave
nop
mov
jmp
out
cmp
int3
pop
popa
ins
ret
fmul
cli
jge
in
cmp
xchg
aam
retf
neg
pop
mov
pop
movs
push
push
or
jo
cwde
xchg
dec
push
pop
scas
std
xchg
push
push
fisttp
inc
mov
mov
dec
cld
jne
inc
cdq
push
scas
pop
test
jl
inc
dec
ja
lea
in
(bad)
shr
out
jo
fbld
stc
movs
mov
test
es
iret
add
mov
cmp
and
inc
imul
dec
cmp
fidivr
test
aaa
push
(bad)
and
and
sub
inc
sar
fs
jo
aas
sbb
xchg
imul
jecxz
neg
sar
xor
repnz
inc
adc
pop
sub
mov
push
inc
push
fsubr
retf
(bad)
pop
test
jmp
dec
dec
movs
pop
or
pop
test
(bad)
mov
push
xor
mov
mov
out
jl
dec
jge
mov
adc
xchg
jle
jmp
cld
sbb
push
sbb
jne
jp
int
dec
ret
cmp
test
(bad)
fucom
(bad)
cs
popf
mov
(bad)
jg
and
pop
lahf
dec
sti
(bad)
cmp
out
in
dec
outs
mov
or
push
imul
add
and
ficom
call
mov
into
lahf
(bad)
ficom
and
or
out
mov
cdq
push
cmp
aad
jmp
mov
ja
dec
std
adc
in
xchg
test
(bad)
aam
dec
add
inc
dec
adc
cmps
dec
push
dec
xlat
sar
retf
inc
mov
push
out
adc
pushf
loope
inc
inc
sbb
sub
adc
ins
xor
cwde
or
cmp
pop
jae
cwde
mov
stos
je
imul
arpl
jno
mov
dec
mov
jge
cmp
pop
jp
pop
xor
or
pop
nop
jg
jo
jge
xchg
cmp
fimul
inc
inc
popf
xchg
jbe
das
mov
sub
(bad)
repz
cmc
and
(bad)
ds
inc
fucomi
jno
neg
or
dec
or
jle
aaa
and
fst
ins
mov
out
add
rcl
cmp
or
sub
scas
test
mov
fs
push
das
push
pop
xchg
mov
ja
dec
sub
cmovle
push
stos
mov
stos
(bad)
(bad)
outs
loope
outs
xchg
ds
jns
imul
mov
sar
rcr
aam
in
les
cmp
pop
sub
mov
out
rcr
ficom
clc
push
jae
enter
lock
and
ret
loope
jmp
test
pop
rcl
out
cld
jmp
xchg
mov
mov
mov
dec
fsub
and
int
push
int
mov
cmps
sub
xchg
int3
push
retf
adc
inc
das
fdivr
and
or
icebp
inc
unpckhps
inc
cmp
xor
inc
lahf
call
stos
jmp
(bad)
mov
loopne
sub
test
sti
jne
movs
cmps
adc
(bad)
sub
mov
ins
adc
in
dec
out
inc
bts
sbb
pop
(bad)
mov
or
aas
xlat
and
adc
or
stos
(bad)
ret
jg
call
jmp
add
and
adc
push
xchg
add
or
sub
xor
pop
add
cmp
jp
cmp
daa
ja
cdq
mov
mov
call
movs
cmp
not
in
aam
inc
jg
ins
arpl
lods
push
out
int
mov
dec
jbe
repz
jg
sti
push
mov
push
test
sti
in
ins
pop
popf
xlat
fiadd
imul
mov
mov
dec
cmp
lods
icebp
retf
mov
sahf
jecxz
aam
bound
out
add
fnstenv
sbb
dec
sahf
popa
imul
das
fmul
pop
aad
mov
lds
sar
scas
push
adc
idiv
lahf
in
retf
fdivr
xchg
fwait
dec
add
sub
xchg
nop
push
jmp
and
mov
fsub
cmc
cli
out
call
and
ins
mov
std
dec
sbb
mov
mov
ins
fwait
mov
lods
popf
test
pop
sub
inc
clc
dec
cmp
push
or
mov
das
mov
sbb
sub
mov
dec
xor
call
jmp
pop
clc
test
dec
cmp
das
mov
inc
inc
lahf
imul
in
fadd
rcr
ds
and
adc
ja
inc
pushf
push
pushf
fstp
ins
scas
inc
aaa
hlt
out
test
pusha
fdiv
xchg
sub
mov
popf
shl
xchg
mov
(bad)
sti
cli
mov
outs
enter
add
and
dec
or
inc
lock
ja
cmp
fnstenv
mov
test
xchg
(bad)
mov
imul
les
push
adc
push
xchg
ror
and
shl
int
into
stos
sbb
inc
cmc
stos
pushf
sub
jns
retf
pop
aas
shl
push
adc
das
fwait
jb
aam
add
push
cmc
nop
sbb
outs
outs
aad
pop
dec
jmp
cmp
(bad)
jmp
in
add
push
sbb
jecxz
mov
dec
cmp
jle
dec
scas
popf
(bad)
jmp
dec
push
seto
frstor
int
mov
shl
cmp
fdivr
outs
sub
mov
xchg
enter
out
test
jno
or
adc
je
arpl
jnp
ss
cli
loope
jecxz
mov
lds
outs
or
pop
dec
test
arpl
pop
sbb
xor
repz
dec
les
push
sti
dec
ins
jae
not
scas
retf
pop
retf
fisttp
add
or
pusha
or
fisub
mov
jge
xchg
cmp
and
jmp
scas
cli
pop
and
pop
cmp
mov
rcr
movs
int
std
test
repnz
in
or
mov
mov
inc
cmc
sub
icebp
nop
fwait
cmp
out
mov
sub
cmp
sub
sub
jmp
sti
add
xor
(bad)
fwait
int3
test
mov
sub
mov
sub
aas
pop
(bad)
cmp
sti
je
mov
sub
jmp
pushf
cmp
rcl
sahf
dec
xchg
jg
shr
or
mov
sub
fcmovnb
or
cmp
cmovnp
dec
frstor
loope
rcr
clc
lahf
sar
ja
mov
jecxz
out
sbb
pop
push
mov
xchg
test
push
pop
adc
into
jmp
mov
jne
jae
int3
cmp
aam
addr16
ror
sbb
icebp
cmps
mov
call
rcl
xchg
and
std
xchg
xchg
jecxz
fimul
das
jno
int
stc
sti
sbb
mov
stos
and
pop
push
inc
scas
jg
stos
call
fild
out
clc
sahf
mov
shr
sub
lahf
and
push
lods
fidiv
add
mov
fistp
int3
test
push
mov
push
adc
lods
test
les
fsubr
call
inc
mov
push
dec
scas
mov
pop
test
mov
scas
loope
mov
into
sti
enter
adc
cs
mov
call
sub
das
iret
jnp
xor
sub
mov
scas
dec
imul
inc
jle
jle
pop
ja
aam
hlt
in
xchg
retf
mov
xchg
movs
shr
outs
sbb
sbb
xchg
push
and
or
lods
jg
dec
jo
adc
stc
cmp
in
(bad)
(bad)
mov
mov
cwde
cmp
rcl
sub
jmp
movs
shl
sub
outs
retf
ret
arpl
das
or
test
add
jmp
cmp
nop
(bad)
out
fldenv
cmps
(bad)
dec
pushf
add
enter
test
aam
gs
adc
jne
scas
xor
jnp
and
pop
pop
ror
jle
cmp
lods
mov
fs
sbb
xchg
fisub
fistp
mov
mov
ret
aas
pop
jae
mov
mov
mov
or
rcl
test
jae
ins
mov
or
jmp
push
push
pop
cmp
push
sbb
jnp
sbb
test
test
cld
xchg
dec
pop
pusha
pop
(bad)
in
mov
adc
pop
in
jge
clc
xchg
push
rcr
fbstp
xchg
pop
pusha
sbb
call
pop
ja
scas
mov
movs
or
or
int
scas
jbe
mov
pop
into
aam
jg
enter
mov
sahf
mov
nop
mov
cmps
shl
iret
push
sbb
sbb
sar
dec
fdivr
fidiv
out
je
cmp
mov
test
cli
push
dec
popa
or
sahf
retf
dec
int3
mov
push
repz
cli
in
pop
fmul
mov
fnstcw
add
push
rcr
aad
xlat
in
cmp
idiv
sub
mov
mov
loope
loope
mov
fcomp
scas
mov
repz
ror
je
mov
xchg
repnz
fistp
iret
mov
xchg
add
in
dec
mov
mov
aas
or
sub
out
test
pop
mov
cli
popf
mov
ret
int
shl
fwait
repnz
out
jnp
mov
or
into
imul
imul
jmp
jg
mov
jae
jo
test
aaa
xor
(bad)
idiv
mov
xchg
sar
push
pop
xor
(bad)
cmp
jno
pop
xchg
inc
sti
or
or
cmp
xor
imul
dec
fidivr
jns
(bad)
jp
aas
add
or
out
mov
inc
ret
add
or
jne
and
cmp
inc
retf
jge
fcom
imul
sub
hlt
dec
call
scas
push
je
or
jno
mov
test
sti
adc
sbb
(bad)
je
pminub
dec
cmp
xor
push
fwait
(bad)
stos
js
mov
stos
out
sbb
pop
mov
out
movs
mov
cmp
mov
retf
or
das
push
xor
and
test
ins
sub
jg
xchg
mov
out
push
std
in
retf
pinsrw
punpckhdq
hlt
sub
lods
(bad)
fwait
(bad)
scas
mov
sahf
mov
fmul
pushf
fistp
aaa
cs
dec
xlat
or
gs
test
mov
ror
add
cs
sbb
call
add
mov
imul
dec
arpl
cli
shl
jg
stos
rcr
dec
push
fsubr
retf
call
mov
(bad)
cmp
stos
mov
cwde
rcl
inc
and
sub
pop
int
sahf
idiv
aas
int
fidivr
push
jb
xor
outs
xchg
iret
sub
fld
add
xchg
pop
jmp
test
or
out
ret
ret
mov
(bad)
lahf
jno
xchg
sbb
or
mov
push
dec
cmp
ins
dec
pusha
mov
sbb
out
and
pop
mov
xor
mov
lea
mov
icebp
adc
pusha
repz
sub
pop
jae
pop
adc
jnp
out
cld
mov
in
sub
loop
sbb
and
cmp
mov
loopne
cmovp
sti
inc
scas
lea
dec
iret
sub
fistp
aaa
jno
ja
pop
jo
outs
mov
retf
test
ins
dec
jns
push
in
enter
ins
dec
test
ret
divps
dec
sbb
clc
dec
push
leave
inc
add
or
dec
add
fwait
lods
jmp
pop
imul
lahf
rol
inc
fldcw
xchg
lds
ret
or
mov
fsub
bound
jle
mov
mov
pmaxsw
arpl
sti
push
dec
jge
cmp
ret
stc
pop
cli
imul
in
in
imul
retf
push
mov
cmps
sbb
popa
xchg
dec
xchg
sub
dec
test
xor
xor
jmp
retf
or
sub
inc
inc
(bad)
pop
stos
and
cdq
xchg
dec
test
lahf
sbb
(bad)
repz
cmp
dec
add
imul
cmp
test
dec
mov
in
add
jp
sbb
scas
hlt
scas
lock
stos
jnp
xchg
jmp
sub
mov
fs
repnz
retf
sar
or
lahf
mov
in
sbb
mov
mov
ds
in
es
push
and
mov
mov
unpcklps
adc
mov
popf
xchg
sbb
and
(bad)
cli
jne
in
icebp
inc
mov
pop
inc
cmp
cmp
jnp
leave
cmp
rcl
sub
outs
leave
dec
fsubr
mov
cmp
cmp
clc
popa
jb
out
mov
pop
lea
pop
jle
cmc
add
or
mov
mov
nop
inc
lahf
js
dec
jmp
xor
pop
sti
(bad)
dec
jns
imul
sub
dec
loopne
mov
pop
lods
sub
cmp
js
pop
pop
pop
aas
mov
mov
mov
aaa
fimul
mov
cld
sub
push
int3
pop
inc
mov
jae
mov
iret
stc
int3
popa
pop
cli
jp
nop
shr
sbb
ret
add
test
add
mov
jmp
imul
pop
outs
or
add
fidivr
mov
push
and
dec
inc
pop
pop
mov
jmp
int3
out
clc
les
rol
pop
or
or
dec
push
mov
and
loop
mov
sub
scas
mov
jno
mov
ror
jge
mov
lock
pop
shl
stos
lock
mov
and
dec
sub
and
sbb
stos
jp
outs
lods
(bad)
stos
add
or
xchg
test
out
js
sbb
cmp
push
xor
dec
adc
jbe
or
add
pushw
int3
push
outs
jnp
(bad)
int3
push
adc
ror
cmp
in
test
mov
xor
pop
sub
(bad)
neg
(bad)
push
popa
add
cmp
xchg
mov
retf
stos
iret
pop
dec
cmc
jmp
sbb
or
lock
mov
outs
call
mov
retf
call
xlat
jnp
sub
and
mov
addr16
inc
jl
sahf
push
sbb
pop
pop
inc
jmp
aam
(bad)
pusha
in
add
add
(bad)
xchg
push
adc
leave
test
in
xchg
loope
pop
pop
pop
inc
sbb
and
lods
test
add
mov
jmp
ins
sub
scas
adc
dec
sbb
dec
scas
fcmove
fmul
dec
inc
jnp
sbb
push
loope
or
jmp
mov
pop
psubd
cmps
aam
or
jbe
loope
std
mov
add
sti
lahf
add
inc
lfs
pop
adc
mov
jns
div
(bad)
int3
int3
xor
ss
fwait
dec
jg
xor
shl
out
dec
aam
cmp
loope
inc
es
xchg
inc
je
and
fsubr
aaa
sub
gs
and
cmps
imul
lea
adc
out
stos
icebp
movs
shr
mov
mov
ja
or
jb
jl
jg
fwait
ja
cmps
pop
and
lahf
stc
arpl
cmp
cmp
movs
or
aas
(bad)
das
push
aaa
icebp
jp
leave
pop
sahf
dec
jmp
ja
or
pop
xchg
jmp
pop
mov
pop
pop
xchg
das
mov
es
sbb
enter
or
js
mov
and
data16
pop
xlat
shr
cmp
stos
gs
cmp
outs
scas
int3
in
mov
push
sub
mov
xor
bound
rcl
mov
xchg
sbb
push
cmp
jne
pop
popf
dec
(bad)
pop
cmp
mov
(bad)
loopne
push
adc
add
push
pop
sub
outs
push
cwde
scas
jmp
or
rcr
jns
mov
add
push
cmp
ds
rcl
ror
jmp
(bad)
jbe
(bad)
(bad)
icebp
pop
xor
dec
mov
dec
les
bnd
es
repnz
sub
push
dec
int3
retf
mov
push
jmp
pop
je
ds
sbb
outs
jge
lahf
sub
loop
test
xchg
aaa
adc
xor
sub
jb
outs
ins
cs
fwait
mov
in
imul
imul
mov
push
jne
push
jg
dec
das
fistp
mov
dec
mov
mov
pop
out
retf
pop
jg
pop
dec
add
(bad)
shr
call
loop
xchg
adc
sar
(bad)
xchg
pop
fidiv
jl
cmp
pop
jo
sbb
jge
jnp
fwait
lods
lahf
mov
pusha
mov
cld
adc
aam
sub
sbb
dec
ins
push
xor
xchg
mov
cli
pop
inc
mov
add
or
jl
outs
or
and
add
sti
std
pop
jmp
fcmovnu
lods
or
gs
adc
dec
std
inc
jnp
pop
stos
repz
mov
hlt
bound
test
sbb
leave
xchg
mov
adc
ss
leave
mov
mov
stos
cmp
and
cmps
call
lods
pop
lea
lods
call
rcr
retf
dec
enter
je
(bad)
pop
(bad)
enter
mov
mov
dec
cmp
sahf
add
das
and
outs
outs
and
dec
ror
cmp
out
lds
retf
sub
jne
pusha
das
adc
pop
sahf
jmp
lahf
mov
pop
shl
push
cmps
sbb
or
dec
mov
clc
and
scas
das
jge
xor
inc
je
in
repnz
fs
lods
scas
movs
xchg
iret
sbb
call
addr16
inc
es
std
je
aam
xlat
cmp
scas
xchg
jb
ret
dec
push
(bad)
adc
jno
cmp
ds
lahf
sbb
cdq
pop
adc
fidivr
test
imul
outs
ss
jg
in
mov
imul
or
mov
sar
fistp
sub
cmp
nop
push
outs
outs
pop
out
ja
arpl
push
call
arpl
sahf
mov
pop
jnp
daa
sub
idiv
lods
push
inc
stos
lods
mov
pop
arpl
mov
(bad)
pop
mov
(bad)
fwait
or
mov
inc
xchg
sahf
mov
test
rcr
movs
or
nop
outs
mov
mov
scas
clc
or
pop
push
rcl
cmp
jp
xchg
shld
arpl
lds
aas
mov
add
mul
add
add
cs
cmps
inc
pushf
outs
cmps
push
jo
push
mov
fnstsw
out
int
cs
sbb
es
(bad)
cmp
xchg
(bad)
dec
or
mov
sbb
jmp
jle
pop
xor
mov
enter
jg
pop
mov
sbb
push
ds
cmp
movs
int
jnp
jg
adc
bts
call
bnd
and
cmp
dec
mov
or
mov
add
cmp
pop
adc
ja
repz
les
xchg
cmp
addr16
pop
stc
loopne
push
je
dec
pop
dec
dec
leave
fwait
push
jns
xor
jno
add
pusha
adc
mov
scas
jmp
adc
gs
rcr
push
loope
dec
mov
sub
push
dec
jmp
adc
fild
outs
das
addr16
sti
daa
xor
pushf
jg
(bad)
jl
cwde
out
jecxz
mov
sub
jge
inc
jmp
dec
cmp
nop
test
jae
push
sbb
pop
sahf
je
jno
jae
mov
out
mov
retf
mov
call
out
jg
in
add
test
fimul
scas
pop
rcr
push
or
dec
mov
rcl
jmp
push
jecxz
pop
dec
out
push
xchg
outs
inc
mov
inc
mov
fwait
sbb
push
loop
arpl
jno
and
jno
(bad)
mov
xchg
push
lods
xchg
cmc
cmp
jmp
pop
xchg
push
dec
stc
cmp
(bad)
lods
push
movs
mov
icebp
fisttp
push
call
pop
shl
lods
jmp
dec
xchg
mov
fimul
jo
(bad)
rcr
imul
sti
ja
sbb
outs
pop
dec
pop
dec
pop
test
sub
sahf
pop
ret
xor
dec
jnp
add
inc
push
dec
pop
sbb
test
leave
inc
mov
sahf
retf
aas
dec
jnp
cld
repnz
stos
(bad)
xchg
dec
in
add
xchg
aaa
mov
rcr
retf
sub
test
mov
xchg
das
mov
in
outs
sbb
push
in
mov
xchg
popf
js
ds
cwde
mov
inc
ins
push
jge
push
cdq
sub
cmp
mov
in
addr16
pop
inc
cmp
push
imul
cs
jae
inc
rcr
retf
cmp
jle
fisttp
into
fwait
dec
and
mov
mov
(bad)
sbb
enter
mov
and
inc
jnp
(bad)
fild
push
stos
scas
je
sub
or
xlat
dec
mov
or
clc
xchg
imul
xor
sbb
cmp
icebp
inc
or
jno
mov
repz
hlt
fsub
sbb
dec
fiadd
lock
mov
fadd
outs
test
ja
jl
popa
mov
lahf
popa
inc
dec
dec
mov
and
icebp
lea
shl
in
xor
mov
mov
mov
pop
int3
cdq
or
popa
enter
sbb
sbb
rcr
mov
jp
or
adc
mov
adc
xchg
test
jg
dec
repnz
stos
push
mul
sbb
cli
push
push
pop
mov
mov
punpcklwd
fst
pop
push
sti
loopne
xor
push
je
out
outs
or
fisttp
jnp
rcl
xor
dec
pushf
adc
mov
and
pop
scas
sub
sahf
and
xor
lock
mov
add
jmp
cmp
mov
mov
mov
mov
cmp
mov
pop
jecxz
enter
scas
ss
jmp
jb
adc
hlt
xor
jnp
xchg
xchg
inc
mov
or
mov
mov
iret
je
pop
adc
or
outs
mov
ficomp
mov
(bad)
sbb
pop
jecxz
push
aam
cwde
stos
cmp
or
loop
iret
pop
into
xor
push
dec
ror
push
sbb
fld
cmp
or
and
sbb
ds
push
aas
out
imul
fidivr
jb
ins
clc
bound
jecxz
or
cmp
into
fcmovne
in
rcr
or
cmp
or
sti
cmp
in
or
pop
les
repnz
stos
ret
mov
ja
call
xor
enter
inc
jecxz
mov
aas
shl
xchg
mov
push
sub
outs
adc
adc
mov
movs
add
ret
sbb
adc
or
sub
fbld
pop
mov
xchg
or
jnp
mov
xchg
pop
cmp
xor
xchg
outs
jnp
xchg
cdq
or
push
or
inc
or
dec
xchg
mov
mov
imul
cmp
rol
jbe
imul
fnstcw
xchg
xchg
push
lods
jecxz
sub
jmp
push
cmp
ror
popa
or
mov
dec
pop
xchg
int
jmp
icebp
mov
arpl
call
add
xor
data16
cmp
das
add
fimul
jbe
adc
xor
divps
outs
lods
out
imul
mov
into
dec
mov
mov
pushf
mov
mov
dec
imul
fmulp
lea
icebp
stc
fiadd
lahf
push
mul
cmp
cld
sbb
pop
pop
les
push
adc
dec
inc
(bad)
std
ret
fwait
pop
pop
mov
iret
sub
cwde
lods
sbb
mov
adc
xchg
xchg
push
sbb
pop
retf
jnp
neg
jne
scas
imul
lods
cmps
or
iret
lahf
cmp
mov
pop
int3
arpl
inc
test
adc
test
mov
loope
mov
push
pop
mov
pop
mov
jns
add
or
mov
xchg
inc
lahf
fucomip
sbb
pusha
jp
retf
cmp
or
fnstenv
call
cmps
mov
jp
xchg
mov
aaa
sub
cli
push
pop
adc
dec
push
in
jl
or
fwait
xchg
jnp
stc
adc
sbb
hlt
xchg
addr16
pop
sahf
mov
jnp
leave
sub
sahf
scas
mov
cli
dec
fimul
adc
dec
setnp
or
scas
sbb
(bad)
dec
mov
retf
jnp
fucomi
outs
xchg
mov
idiv
inc
loope
out
xchg
or
lock
out
out
retf
movs
or
push
dec
push
inc
jg
in
(bad)
out
cmps
cmp
out
int3
mov
pminub
sub
adc
push
or
xchg
jmp
stc
mov
jns
imul
aas
sbb
sub
fsubr
pop
xchg
jp
mov
(bad)
adc
pop
ficomp
or
mov
jmp
loop
(bad)
bound
push
das
dec
addr16
es
or
sub
dec
xor
dec
sahf
mov
push
retf
pop
dec
cmps
stc
mov
sub
pop
mov
xchg
dec
mov
fst
fwait
xchg
cmp
lea
sub
rcr
push
clc
and
lods
call
mov
mov
inc
or
(bad)
stc
sub
adc
dec
lds
repnz
ins
and
dec
nop
mov
(bad)
mov
push
xor
outs
or
adc
jno
dec
pop
sbb
ins
pop
sbb
vmptrld
sti
xchg
cwde
push
sbb
mov
clc
js
fwait
or
push
inc
(bad)
jmp
out
pop
mov
push
jns
cmp
mov
sub
mov
int
mov
push
push
pop
adc
loopne
cmp
inc
mov
sti
xchg
fwait
adc
test
mov
fs
(bad)
xchg
and
(bad)
test
iret
imul
pop
(bad)
adc
dec
fwait
pop
fwait
mov
inc
shl
lods
sbb
adc
mov
cmp
int
arpl
out
loopne
cwde
inc
jns
dec
mov
push
cwde
std
adc
jns
out
ror
(bad)
fstp
dec
cmp
mov
(bad)
(bad)
into
mov
add
pop
dec
ins
fwait
out
xchg
and
pop
out
cli
add
dec
jae
cdq
mov
pop
loope
sub
xchg
mov
xlat
out
pop
cs
data16
xor
xchg
jmp
sbb
repz
ret
xor
fdiv
xlat
retf
aam
ret
jge
jg
mov
jl
xchg
hlt
addr16
fisttp
out
fsubrp
in
sar
xlat
into
add
jo
xchg
je
outs
daa
test
imul
and
stos
je
jns
jmp
loope
mov
js
push
adc
push
xchg
stos
sub
mov
imul
das
add
sub
sbb
push
dec
shr
push
sub
or
cmp
dec
mov
hlt
retf
out
lods
dec
or
cmp
fsubr
mov
(bad)
cli
fld
xor
das
stos
shr
push
inc
xchg
lahf
sub
mov
dec
shr
jl
cmps
cmc
pop
daa
mov
sub
pop
mov
add
cmp
pop
mov
cs
in
push
iret
and
or
sar
imul
data16
sub
leave
jg
adc
enter
or
pop
push
jmp
mov
xchg
mov
inc
add
pop
retf
or
inc
and
outs
fs
rol
dec
xchg
imul
mov
cmp
imul
sub
cdq
mov
add
ror
cmp
iret
xor
(bad)
and
pop
outs
cmp
fiadd
push
retf
pop
ret
ja
popa
shl
mov
ds
fsub
icebp
pop
sbb
dec
dec
popf
ss
clc
arpl
mov
push
mov
or
pop
outs
gs
jp
dec
pop
out
xchg
mov
cmp
retf
bound
sar
jle
pusha
pop
dec
fistp
xor
and
cmp
inc
fnsetpm(287
enter
(bad)
mov
xchg
imul
mov
lahf
ret
into
shl
jmp
shr
dec
push
sub
inc
fistp
movs
adc
mov
mov
mov
adc
mov
sbb
jge
and
out
xchg
leave
mov
or
xchg
in
dec
fmul
test
mov
pop
das
and
sbb
mov
sahf
(bad)
movs
and
dec
push
or
movs
mov
dec
pop
sub
xchg
jno
fidivr
lods
jl
sbb
xor
xchg
jb
daa
sbb
imul
add
scas
mov
adc
jmp
std
dec
jb
sub
in
and
(bad)
sub
sbb
idiv
cli
pop
dec
pop
mov
aam
imul
ds
pop
dec
jns
jmp
jecxz
iret
imul
xor
jbe
into
sub
and
sbb
push
mov
int3
inc
lods
fsubr
xlat
mov
in
add
scas
mov
pop
add
pop
xchg
dec
fwait
pop
repz
mov
jmp
lods
loop
in
push
adc
pop
dec
add
inc
iret
call
(bad)
xchg
jp
push
pop
adc
cmp
rol
lahf
dec
pop
cmp
dec
sub
push
sahf
(bad)
std
scas
mov
sahf
xchg
das
pop
jmp
pop
adc
idiv
scas
push
mov
ja
ret
popa
jbe
push
icebp
inc
cmps
call
(bad)
sahf
jmp
mov
dec
psubsw
mov
cld
dec
jl
adc
pop
gs
stos
sub
mov
jmp
dec
pop
jg
mov
pop
sbb
push
pop
pop
jnp
pop
mov
in
or
mov
push
lea
cmp
jle
ins
out
push
test
jl
arpl
scas
icebp
stc
push
adc
dec
ds
into
sub
mov
test
cmps
jnp
sub
inc
dec
cmp
pop
stos
inc
bound
retf
add
out
pop
pop
mov
arpl
loope
bound
jmp
(bad)
cmps
jne
enter
jge
std
out
es
jnp
push
pusha
fdivr
dec
xchg
int
mov
(bad)
in
(bad)
jp
lods
jp
sar
daa
lds
pop
ss
sbb
jbe
(bad)
iret
retf
stos
jmp
into
cs
jecxz
(bad)
outs
mov
push
jp
xor
fld
inc
js
xchg
fnstsw
push
mov
jecxz
xchg
into
and
xlat
dec
push
xchg
scas
js
repz
jmp
push
adc
sbb
mov
(bad)
sbb
int3
repnz
cmovne
dec
ins
dec
and
dec
sub
aam
xor
mov
sbb
push
xchg
loopne
pop
(bad)
push
hlt
icebp
sub
scas
push
dec
cdq
pop
repnz
aas
out
ret
leave
pop
adc
neg
stos
and
pop
jl
iret
pop
push
jecxz
xchg
test
inc
xlat
leave
aad
nop
iret
or
jl
pop
imul
or
outs
aad
(bad)
ja
stc
popa
dec
or
sahf
mov
mov
mov
pop
lahf
mov
inc
iret
adc
int3
add
inc
or
test
add
sbb
pop
push
jae
je
clc
out
and
call
mov
mov
xchg
fcomp
inc
fidiv
add
les
mov
imul
pop
cmp
push
rcr
xchg
pop
fs
(bad)
ror
sar
mov
aas
mov
sbb
loope
popf
das
inc
iret
mov
movs
mov
sub
shr
or
sub
fild
sub
cdq
rcl
cmp
jae
xchg
jae
sub
out
retf
aas
sti
jl
jl
and
imul
sub
stos
fwait
retf
retf
ins
pop
sub
push
mov
shr
xor
push
(bad)
cdq
bound
mov
data16
fsub
retf
pop
int
ins
cmp
push
sub
in
mov
imul
pop
in
dec
pop
dec
aaa
imul
sub
js
pop
ja
(bad)
popf
push
iret
call
popf
mov
jnp
mov
and
add
mov
mov
(bad)
jl
add
in
cmp
dec
pop
das
mov
imul
mov
xchg
inc
(bad)
pop
sbb
add
rol
lds
inc
fimul
(bad)
cmp
dec
scas
jo
and
addr16
adc
sub
jmp
rcpps
pop
outs
pop
jg
(bad)
call
sar
psubb
pop
add
aaa
mov
jp
shr
cmp
imul
pop
jae
pusha
adc
jecxz
movs
and
stc
movs
mov
pop
cmps
es
sbb
pop
pop
push
jle
mov
repnz
xchg
fmul
add
retf
add
mov
pop
aas
adc
sbb
das
pop
and
jge
sahf
ret
pop
stos
out
(bad)
fld
test
pop
das
sahf
mov
ret
push
pop
push
jae
test
mov
fwait
sub
jmp
xchg
xlat
aad
sbb
push
lock
pop
sub
movs
adc
and
lds
xor
call
ds
es
int3
adc
pop
cmp
pmaxub
cmp
mov
stos
call
mov
lahf
jmp
je
out
mov
or
ret
sbb
cdq
mov
push
and
jnp
push
mov
int
sub
mov
mov
jae
mov
push
outs
pop
adc
retf
or
outs
push
pop
cmp
movs
cmp
sbb
shl
xchg
fldenv
jb
push
sub
(bad)
sub
in
mov
ret
lods
jbe
inc
mov
ins
pop
sub
cmp
int
mov
mov
iret
stos
mov
mov
ins
sbb
mov
es
in
addr16
inc
outs
lods
xor
ds
push
lahf
test
dec
data16
out
pop
xchg
pop
outs
dec
mov
xchg
mov
clc
mov
out
push
push
sbb
adc
outs
jo
loopne
repnz
cwde
popf
adc
(bad)
push
retf
idiv
retf
mov
lahf
dec
pop
sbb
sbb
mul
pop
clc
shl
xlat
xchg
out
sbb
pop
pop
lds
xor
cmp
loope
jns
ds
lods
jmp
dec
scas
mov
stos
sbb
arpl
xchg
pop
ins
push
ret
jle
addr16
pop
push
imul
dec
loope
mov
pop
retf
int
int3
dec
pop
ret
pop
aas
jmp
sar
push
mov
cli
pmaxsw
mov
push
popa
mov
fwait
retf
std
inc
push
adc
cmp
sbb
pop
jns
cs
js
stos
sbb
fstp
xchg
loop
iret
dec
or
jle
push
or
retf
fnsave
adc
leave
push
xor
fstp
add
sar
mov
ja
sbb
scas
pop
mov
scas
jbe
mov
xor
mov
or
mov
loope
pop
addr16
fdiv
aam
sahf
std
out
jnp
sub
jnp
sub
sbb
sbb
mov
xor
les
pop
mul
outs
stos
imul
pop
xchg
inc
enter
pop
mov
push
and
test
adc
mov
xchg
add
cld
iret
pop
jge
test
push
jbe
jbe
mov
mov
cmp
sbb
xor
mov
pop
dec
sub
push
fwait
xchg
adc
and
(bad)
mov
ret
add
test
enter
les
(bad)
push
inc
push
arpl
imul
xchg
nop
scas
jo
pop
jmp
rcl
push
mov
pushf
add
outs
pop
xor
and
mov
in
cmp
adc
cwde
push
mov
pop
sub
jl
jns
nop
rcl
fld
mov
add
in
hlt
jge
pushf
adc
fucomip
add
or
push
gs
jl
mov
fidiv
test
int
gs
hlt
jmp
sub
hlt
out
dec
push
pop
and
xor
sub
push
jae
repz
sub
pop
sub
mov
fdivrp
pushf
and
stos
stos
add
out
cli
mov
mov
sbb
jg
pop
popf
lds
pop
sub
in
jp
scas
add
shr
dec
cmp
mov
xor
sar
mov
cld
jecxz
sti
jno
push
mov
jmp
out
mov
mov
fnstcw
inc
retf
mov
(bad)
mov
rcr
mov
cs
jae
sub
fbld
jmp
mov
ret
jp
add
sbb
repz
sub
jg
push
push
ins
sbb
mov
mov
pop
pop
leave
xchg
mov
sub
jle
stos
xor
sub
out
sti
mov
popf
mov
xor
int3
in
sub
xchg
movs
dec
mov
sub
out
sub
stos
fs
test
in
scas
call
addr16
lods
scas
or
cdq
pop
repz
in
dec
scas
mov
outs
adc
sar
push
mov
sti
fld
out
ret
fistp
mov
mov
inc
sub
mov
aaa
xchg
aaa
ror
test
aas
int
cmp
cmp
jge
ja
push
pop
jns
sar
dec
fwait
mov
fwait
outs
(bad)
or
pop
sub
mov
and
push
fisttp
jle
jmp
ss
adc
sysenter
stc
and
cwde
js
fstp
adc
jae
mov
lock
div
loope
popf
mov
jle
add
jg
loope
addr16
fistp
push
scas
jg
pop
mov
push
cmp
out
pop
les
aas
xchg
dec
aas
or
mov
jmp
enter
adc
lods
retf
xlat
add
mov
push
nop
jp
mov
(bad)
mov
xor
cs
and
cwde
pop
int3
dec
add
jge
pop
stos
sbb
cld
popf
popf
sahf
jmp
jae
enter
ds
jns
pop
mov
retf
mov
btr
push
cmp
sub
sbb
add
cmp
stos
mov
fimul
cmps
lds
mov
cli
xchg
adc
pop
(bad)
jae
imul
imul
or
pop
shl
ds
inc
adc
stos
jne
call
mov
in
or
bts
push
imul
mov
mov
in
movs
mov
icebp
(bad)
pop
jmp
jg
xchg
xor
in
pop
push
mov
dec
push
inc
aas
jecxz
sahf
lahf
imul
mov
jge
idiv
mov
sub
cmc
js
pop
adc
lahf
test
lahf
xchg
lock
clc
fidivr
mov
fisubr
(bad)
cmc
ins
mov
outs
jle
jmp
mov
cdq
out
cmp
pop
sub
adc
call
add
sti
sbb
(bad)
cmc
sub
(bad)
int3
int3
lahf
push
jns
push
shr
mov
add
jae
adc
jmp
popf
test
adc
sub
adc
popa
jae
push
outs
and
lahf
adc
in
jle
push
rol
add
adc
mov
pushf
dec
daa
jmp
adc
stos
mov
mov
mov
cmp
jge
inc
jge
popa
pusha
sbb
scas
int3
outs
jmp
arpl
loop
dec
jmp
sti
daa
or
es
aas
jnp
push
aas
mov
daa
out
lods
arpl
aad
xlat
jne
xor
jge
mov
int
out
dec
add
cwde
sbb
imul
(bad)
rol
xchg
jmp
retf
mov
add
sbb
mov
or
iret
sbb
leave
pusha
sbb
sub
mov
lock
fiadd
mov
xchg
jmp
jl
in
ret
adc
push
movs
stos
mov
clc
(bad)
cmp
mov
pop
dec
fcomp
xchg
fstp
fs
outs
les
xor
pop
call
loope
adc
das
mov
and
push
jecxz
int3
arpl
dec
pop
lock
sar
or
cmp
or
sbb
daa
mov
jg
jno
mov
sbb
push
std
add
sub
cmp
lahf
sub
sub
repz
nop
mov
push
sub
ins
mov
jo
inc
pop
cdq
aad
dec
and
dec
je
add
fcmovne
mov
xchg
into
(bad)
jg
mov
stc
retf
test
pop
push
je
jne
xchg
sbb
aas
adc
jmp
and
out
pop
jmp
or
or
push
sbb
popf
mov
cmp
mov
stc
das
dec
(bad)
call
leave
add
call
fs
ja
into
es
pop
mov
xchg
repnz
pop
cmp
adc
inc
imul
jb
aad
pop
pop
inc
ja
inc
jg
ror
int3
jmp
jmp
aad
jmp
lahf
xchg
call
ins
out
rol
mov
sub
xor
adc
push
mov
mov
push
dec
into
push
cmp
dec
xchg
and
push
test
adc
(bad)
call
fiadd
mov
das
retf
ins
ss
call
xchg
jnp
in
inc
stc
ret
push
pop
push
or
leave
push
adc
adc
xor
mov
sbb
iret
sar
inc
jns
lods
xchg
cmp
ss
add
sub
pop
push
inc
mov
inc
fsub
lahf
shr
sahf
mov
push
sbb
imul
imul
pop
les
hlt
call
add
jo
pop
jg
in
outs
in
jp
call
mov
cmps
or
push
mov
sbb
or
mov
pop
div
cmp
lock
jmp
cmp
and
jp
pop
cdq
ja
dec
sbb
loope
adc
sbb
bound
stos
into
xor
inc
inc
icebp
test
pop
fidiv
mov
and
inc
jb
sub
push
push
ret
cmps
neg
call
mov
out
fcmovne
stc
and
jmp
(bad)
(bad)
aam
fadd
dec
cmp
scas
lahf
mov
(bad)
(bad)
scas
and
les
pop
out
inc
add
dec
inc
jecxz
sbb
arpl
pop
push
push
in
inc
pop
jle
(bad)
or
jmp
fist
xchg
cmp
adc
aam
push
retf
loop
add
push
cmp
daa
push
and
iret
sbb
and
mov
xchg
adc
retf
jecxz
mov
mov
retf
dec
jns
in
scas
jbe
fcmovnu
cmp
cld
mov
cld
xor
(bad)
and
mov
jle
pop
push
mov
pop
shl
dec
fwait
test
push
popf
pop
cli
dec
(bad)
cld
(bad)
outs
adc
jmp
sub
fs
xchg
sub
fdivr
and
pop
repnz
cdq
xor
cmp
dec
es
imul
mov
and
shl
cmp
arpl
or
sub
retf
vmread
cmp
and
in
xchg
jmp
das
adc
or
xlat
jge
(bad)
xor
and
sub
mov
xchg
ins
in
jns
fstp
out
sti
or
aas
adc
data16
in
or
push
shl
ret
outs
jmp
mov
jl
mov
xor
push
cmp
dec
sub
sub
fimul
or
ror
fst
fcmovnu
pusha
xor
pop
push
fidiv
or
sahf
out
retf
push
xchg
retf
dec
fcmove
inc
scas
(bad)
mov
cmp
push
(bad)
loop
cmp
mov
mov
int
dec
sbb
mov
ja
xor
cmps
jmp
jne
cmp
int3
or
dec
mov
inc
mov
or
xchg
or
xchg
mov
mov
add
movs
sar
shr
popf
or
outs
dec
inc
call
jmp
xchg
dec
pop
enter
ds
out
jg
addr16
aad
daa
mov
fldcw
retf
test
scas
popf
ins
rep
ins
movs
xor
lea
stos
lods
adc
pop
lods
jns
ret
and
or
stos
fidivr
xchg
imul
loop
xchg
push
(bad)
sbb
mov
jmp
pop
(bad)
dec
xchg
js
ror
cld
fwait
sub
cmps
mov
gs
std
or
dec
outs
ins
mov
mov
dec
adc
sbb
addr16
sbb
push
jne
in
int3
sbb
out
mul
dec
dec
stc
outs
in
mov
aaa
retf
fild
inc
pop
and
cwde
pop
pop
mov
scas
pop
pop
out
fldcw
jmp
mul
cmp
retf
or
jg
cmp
jmp
mov
push
stos
sbb
in
dec
dec
jmp
ds
or
(bad)
fadd
dec
aaa
out
xchg
mov
fucompp
xchg
jne
mov
push
ret
pop
cmc
jge
or
in
or
cmp
pop
movs
ret
in
cmp
aam
pushf
arpl
cmps
aaa
lahf
sub
mov
outs
jnp
aas
jae
fcomp
xor
jb
and
stos
push
mov
push
movs
or
mov
outs
bound
fwait
dec
retf
mov
mov
add
fsub
outs
arpl
pop
adc
ins
out
or
mov
cli
xor
adc
sub
imul
aad
push
les
sbb
fstp
sbb
or
jmp
mov
mov
shl
or
xchg
popf
jl
or
movs
ror
mov
das
fstp
not
out
xchg
or
mov
rol
iret
out
mov
shr
mov
xchg
dec
jmp
cmp
movs
or
or
adc
movs
cmps
sub
push
dec
es
push
pop
cmp
jmp
inc
hlt
push
adc
bnd
ja
pop
scas
ss
inc
sbb
adc
movs
int3
dec
jnp
loop
adc
add
and
gs
bound
pop
fstp
pop
dec
adc
scas
sbb
cli
add
jmp
mov
(bad)
mov
push
sbb
jmp
(bad)
jge
cmp
xor
into
popf
xchg
cmp
dec
mov
test
aas
sbb
mov
adc
sub
stos
shr
mov
div
cs
(bad)
push
in
daa
push
xor
jecxz
call
mov
ins
xchg
sbb
or
fistp
stos
mov
and
inc
inc
sub
in
fidivr
push
out
xor
pop
xchg
ins
inc
mov
pop
or
dec
in
mov
(bad)
sbb
fidivr
test
cmp
jne
push
addr16
cmp
inc
test
pop
mov
add
cmp
repz
imul
or
dec
jb
in
cwde
mov
loope
gs
xor
mov
sbb
mov
or
cmp
push
or
int
sbb
enter
movs
mov
cmp
inc
stc
jns
leave
cli
dec
in
popf
fstp
lea
rcl
dec
cli
or
jl
inc
mov
fisttp
out
outs
shl
inc
sub
jbe
loope
fist
sar
push
xchg
cdq
ret
sti
scas
mov
adc
popa
fbstp
outs
rol
mov
(bad)
in
shr
retf
pop
xor
mov
jp
mov
mov
xor
cmps
pushf
mov
mov
add
mov
outs
call
mov
push
sahf
mov
mov
sub
cmp
out
outs
mov
xchg
call
outs
mov
xor
(bad)
repnz
jle
xchg
mov
push
pop
jae
cmp
fisttp
shr
aas
or
aas
pop
sub
cmps
fisub
imul
pop
pop
cmp
into
out
pop
pusha
enter
ret
xchg
xchg
jne
arpl
repz
cmp
adc
in
pop
in
dec
cmps
addr16
popf
cs
pop
pop
inc
dec
cmps
jecxz
repz
push
movs
sub
fidivr
(bad)
in
push
arpl
sbb
xchg
cs
cli
fwait
jmp
jmp
lods
mov
push
out
scas
ss
sbb
into
push
imul
lahf
mov
jle
mov
into
push
cli
add
jns
xchg
fsub
jo
jno
imul
jmp
std
fstp
pop
outs
push
out
in
jno
outs
jmp
fld
gs
xchg
lods
mov
lahf
xchg
fcomp
pop
into
push
daa
(bad)
cmp
aas
sar
(bad)
mov
sub
sub
sbb
dec
push
inc
pop
ret
aas
jg
jmp
dec
xor
mul
mov
add
cdq
sti
push
out
or
and
into
daa
ja
pop
ss
cdq
int
push
sub
xor
mov
pop
xchg
jg
test
mov
fdiv
sub
mov
mov
div
outs
out
mov
jecxz
sub
rcl
sub
jmp
push
add
jg
pop
cmps
scas
cmc
pop
dec
loopne
outs
test
fsub
inc
cdq
pop
pandn
sahf
gs
add
mov
int
sub
or
or
dec
and
pop
sub
rcl
mov
in
xchg
ds
push
(bad)
outs
call
movs
gs
xlat
mov
add
jle
jg
push
fwait
push
mov
fild
push
leave
xchg
mov
repz
adc
faddp
push
xchg
sar
mov
jmp
hlt
movs
mov
push
ret
dec
(bad)
call
mov
mov
not
daa
pop
aas
and
ds
jmp
push
sahf
xchg
pop
mov
push
jmp
cmp
das
(bad)
shl
add
idiv
sub
and
mov
mov
mov
repz
stc
loop
into
xchg
mov
out
aaa
push
sub
(bad)
or
inc
add
push
sub
inc
mov
adc
pop
(bad)
sub
mov
test
retf
pop
shl
cli
(bad)
(bad)
sub
call
cmc
add
and
push
jnp
adc
jl
movs
enter
jle
int
movs
lods
rol
out
popf
sub
add
(bad)
int3
outs
push
lds
jg
jnp
mov
sub
cdq
jae
sbb
outs
push
loope
lahf
push
or
add
fnstsw
addr16
push
test
jg
sbb
sbb
dec
mov
push
sub
fcomi
call
mov
dec
mov
fcmove
arpl
out
lea
outs
xchg
jne
adc
fild
dec
dec
sub
pop
pop
imul
fild
ret
psllw
and
fisttp
push
jmp
xchg
jg
das
retf
push
sbb
retf
scas
mov
push
push
pop
mov
retf
cwde
cmps
lahf
or
add
hlt
jl
fcmove
push
xor
lahf
jmp
cmps
jle
scas
xchg
mov
pop
lahf
(bad)
das
(bad)
adc
add
xchg
or
or
jnp
mov
push
push
test
jne
scas
and
xchg
iret
jmp
adc
in
out
sub
std
jecxz
aas
shl
push
scas
fwait
ror
adc
ret
and
sbb
adc
scas
jecxz
mov
cmp
push
(bad)
mov
mov
iret
push
push
jecxz
daa
push
add
aas
sub
pop
xchg
ja
addr16
inc
lahf
jnp
(bad)
lahf
fwait
mov
test
xlat
out
(bad)
fst
das
jmp
pop
imul
or
mov
and
out
retf
dec
cmp
sub
sbb
imul
jg
mov
imul
out
mov
jmp
in
sbb
(bad)
pop
jnp
imul
dec
xchg
out
dec
stos
jp
scas
int
push
mov
fucomi
in
inc
xor
pop
sub
das
push
cmp
push
sbb
imul
sbb
push
retf
call
cli
jnp
pop
jp
pop
imul
retf
(bad)
(bad)
cmp
xor
and
test
iret
push
lahf
mov
outs
lahf
sbb
and
jo
mov
sbb
xchg
dec
mov
jmp
mov
mov
loopne
(bad)
rdpmc
xchg
mov
dec
pop
cwde
outs
jg
ins
lods
(bad)
stos
jg
mov
iret
or
push
test
dec
addr16
xor
imul
cmps
call
adc
scas
mov
retf
mov
jp
jg
xchg
(bad)
push
mov
test
loop
mov
adc
pop
cmp
js
mov
or
(bad)
cdq
mov
mov
addr16
jne
dec
jmp
fwait
add
fld
pop
inc
(bad)
retf
stos
or
and
mov
cmp
push
mov
inc
sbb
push
push
ins
add
scas
or
xor
sub
cmp
dec
push
pop
pop
xor
shl
test
mov
scas
mov
inc
sub
(bad)
xor
xchg
mov
cwde
mov
sbb
mov
mov
aad
sbb
fild
dec
ss
and
dec
mov
sbb
(bad)
push
xchg
adc
imul
mov
aas
rcl
sbb
imul
sub
mov
fwait
lods
dec
leave
mov
das
or
outs
lea
imul
retf
pop
dec
inc
aam
div
sub
mov
into
jge
enter
dec
jmp
pop
pop
dec
mov
imul
xchg
mov
and
sub
jmp
fsubr
das
jl
xor
popa
fidiv
clc
iret
pop
jns
inc
fild
scas
pop
pop
dec
pop
sub
test
and
sbb
dec
push
jge
(bad)
mov
sbb
jge
mov
shr
push
or
stos
clc
push
add
test
ins
mov
pop
popa
js
cld
mov
test
das
or
js
sub
sbb
fild
mov
mov
dec
fist
call
sti
xlat
sub
sub
pop
repnz
mov
(bad)
mov
cmps
rcl
outs
push
mov
xor
sub
sbb
ud0
int
cmp
add
jb
jg
dec
sbb
add
mov
cs
loope
lods
comiss
clc
stos
cmp
cwde
ja
cmp
pop
sbb
xor
es
mov
sub
sti
cmp
mov
add
mov
call
mov
xor
imul
mov
imul
out
add
das
mov
fld
sahf
stc
popa
or
fistp
cmps
leave
scas
push
fisttp
mov
xchg
nop
jmp
fstp
pop
sti
mov
mov
add
mov
mov
cld
iret
arpl
cmp
xor
sub
fsub
scas
add
mov
ins
(bad)
sar
aaa
jge
mov
out
lahf
data16
dec
mov
jmp
adc
scas
(bad)
arpl
xor
call
cmp
out
call
iret
adc
add
daa
push
aas
fld
jmp
sbb
sbb
or
cli
jb
pusha
inc
jmp
fcomip
mov
jge
daa
mov
es
xor
mov
xchg
imul
sbb
jle
xor
or
movs
add
sbb
outs
int
arpl
xlat
mov
test
fnstsw
(bad)
stos
push
(bad)
adc
(bad)
addr16
cmps
dec
cmps
fistp
push
or
jae
jnp
shr
scas
mov
jnp
fistp
mov
and
lock
ucomiss
push
jp
cmps
xchg
xchg
or
int
xchg
fidiv
out
pop
push
(bad)
retf
fwait
scas
ds
int3
test
cmp
sbb
mov
hlt
dec
mov
fisub
jne
cmp
aas
leave
loopne
fstp
repnz
jnp
std
inc
sub
mov
push
(bad)
mov
movs
in
adc
call
stos
dec
or
mov
and
hlt
push
sbb
dec
push
aaa
push
and
add
sub
jge
and
imul
jecxz
out
imul
stc
jns
imul
xor
leave
dec
outs
pop
and
ins
mov
(bad)
xchg
fwait
mov
sahf
mov
jnp
sub
mov
sbb
dec
ja
cld
push
jmp
sti
retf
sub
mov
movs
or
inc
cld
in
mov
sidtd
ds
dec
push
loop
nop
jo
(bad)
or
push
scas
stos
or
cdq
inc
sbb
cli
aas
push
lods
push
inc
cmp
pop
imul
jb
cld
sar
inc
stc
cmps
test
sbb
clc
pop
cmp
fimul
dec
xor
ja
jl
dec
das
mov
ret
out
scas
(bad)
pusha
pop
sbb
(bad)
fisubr
jle
jno
sub
cs
pop
jp
push
inc
addr16
jmp
movs
shl
sbb
(bad)
sbb
fidiv
adc
and
cmc
add
cmps
push
dec
sahf
push
dec
sti
jmp
outs
enter
out
es
xchg
(bad)
mov
cmp
arpl
inc
add
das
pop
fidivr
shl
dec
aad
and
jnp
and
stos
lahf
mov
dec
aaa
and
into
mov
cmps
mov
int3
(bad)
les
cmp
inc
(bad)
imul
jnp
imul
js
out
sub
fcmovnbe
cmp
(bad)
ror
ja
or
pop
data16
inc
inc
dec
jmp
stc
jae
test
push
xor
jmp
and
sub
adc
dec
jae
pop
cli
push
jle
outs
mov
(bad)
stos
add
sti
(bad)
push
and
retf
mov
jbe
stos
pop
mov
xor
xor
(bad)
jmp
push
jns
and
lahf
scas
pop
jl
or
idiv
dec
hlt
cmp
push
adc
cmp
call
jb
outs
mov
inc
out
cwde
(bad)
jb
or
cmp
or
not
cli
and
adc
test
shr
xchg
push
mov
mov
xor
or
cmp
fild
nop
push
push
dec
test
test
and
cmp
sub
cs
jns
push
adc
adc
imul
stc
ja
int
adc
retf
mov
jl
mov
in
movs
aam
outs
mov
int3
or
dec
or
test
mov
xchg
scas
push
push
mov
int3
sub
js
shl
pop
lods
mov
ret
outs
inc
push
arpl
dec
pop
outs
fist
mov
or
xor
dec
pop
stos
dec
addr16
movs
pop
(bad)
lods
enter
imul
outs
jmp
(bad)
adc
pop
js
push
dec
or
ja
(bad)
sti
mov
mov
popf
mov
scas
jmp
mov
jg
cdq
es
in
mov
daa
(bad)
inc
sar
std
mov
pop
sbb
dec
xchg
imul
mov
jg
outs
jg
pop
paddq
ret
rcl
sti
les
xchg
pop
mov
and
xchg
rol
pop
mov
xchg
test
neg
mov
inc
iret
ret
dec
aas
es
mov
jge
ins
mov
cdq
jp
inc
jbe
stos
pop
pop
ror
mov
lahf
out
retf
cvtpi2ps
mov
dec
cwde
push
(bad)
fdiv
outs
mov
je
xchg
add
dec
stc
mov
jmp
jo
cmp
dec
fs
lods
imul
lods
mov
retf
jmp
push
(bad)
pop
imul
mov
jne
mov
out
ror
rcr
std
fs
ficomp
cmp
js
or
call
lods
retf
and
sbb
mov
mov
int
mov
inc
call
lea
scas
pop
mov
in
fld
or
ja
loop
fisub
mov
pop
repz
mov
jae
gs
retf
test
push
dec
or
sbb
arpl
movs
push
dec
js
add
int
lock
lock
or
or
adc
ja
mov
mov
mov
xchg
pop
daa
sbb
or
xor
and
ret
jmp
call
pop
jns
push
mov
mov
mov
out
cli
lds
dec
loopne
sti
call
inc
mov
shr
dec
aam
mov
pop
enter
push
inc
stos
retf
or
addr16
cdq
jge
cwde
ins
test
sub
aad
jb
push
jp
or
cwde
jge
inc
push
ds
or
retf
retf
repnz
push
xchg
outs
ds
mov
inc
pop
jnp
push
lahf
dec
pop
cmps
dec
mov
(bad)
dec
or
cli
into
fwait
inc
mov
and
inc
dec
mov
out
cs
adc
jp
dec
lods
data16
addr16
inc
rol
loop
call
mov
jl
pop
mov
out
mov
push
xchg
sti
data16
cmp
xor
pop
out
sub
jmp
cli
mov
into
(bad)
out
int3
push
jbe
inc
loope
pop
(bad)
push
popf
dec
mov
fnsave
pop
xchg
int
cmp
mov
(bad)
and
pop
or
xor
push
scas
loope
pop
popf
arpl
retf
clc
mov
mov
dec
in
ficomp
aas
jge
pop
ins
call
pop
imul
mov
mov
out
pop
(bad)
rcr
sbb
aas
sbb
or
push
xor
pop
nop
ins
sbb
jnp
mov
lods
mov
fild
loop
jmp
xor
push
mov
sub
fst
retf
movs
cmps
(bad)
lahf
aam
ret
xlat
xchg
fadd
xor
mov
xor
stos
and
loopne
push
clc
inc
(bad)
fistp
mov
pop
lahf
jne
push
cmp
dec
xchg
mov
cmc
dec
fwait
mov
retf
(bad)
cs
idiv
fcomp
ins
das
dec
cwde
push
aam
stos
test
repz
jmp
or
leave
xchg
dec
adc
push
xor
jle
out
jae
repz
mov
sub
test
enter
je
bound
pop
sbb
in
add
mov
sbb
out
cmp
or
mov
pop
aas
lods
pop
ret
dec
pushf
nop
stos
les
clc
mov
out
mov
dec
out
inc
jle
and
ins
fcomp
sbb
repz
clc
dec
adc
mov
stos
test
or
xchg
test
or
cmp
add
(bad)
inc
cwde
cmps
outs
clc
scas
xchg
push
stos
stos
jp
repnz
movs
popf
and
pushf
scas
and
jb
les
pop
mov
in
and
adc
imul
push
or
sub
neg
pop
retf
lahf
rcr
pop
(bad)
sub
add
(bad)
in
retf
add
adc
sbb
or
and
mov
push
fsubr
stos
pop
pop
mov
adc
enter
and
or
into
lea
push
in
test
dec
cmp
cdq
in
call
xor
adc
cmp
jle
pusha
mov
pushf
(bad)
loopne
adc
mov
push
outs
push
lea
mov
cmps
dec
icebp
(bad)
fmul
push
mov
push
movs
imul
push
pop
rol
test
sub
stos
push
pusha
or
outs
scas
scas
cwde
(bad)
and
dec
mov
jp
in
repz
mov
pop
jg
or
dec
mov
cmp
jns
repz
les
inc
stos
or
jb
stos
es
and
in
mov
and
fnstsw
xchg
jle
pop
out
les
push
es
shl
mov
push
imul
cmp
leave
sahf
inc
push
mov
aad
mov
fisttp
dec
push
sbb
pop
inc
and
xor
aas
push
sar
pop
pop
emms
cmp
stos
fcomip
cmp
je
aaa
sub
jb
xchg
cmps
outs
dec
scas
dec
jo
xchg
(bad)
fwait
imul
retf
or
mov
addr16
xchg
shl
pop
jnp
inc
mov
daa
mov
xor
ja
test
retf
out
inc
push
xor
mov
lods
inc
mov
(bad)
inc
xor
xchg
dec
push
push
add
retf
aad
(bad)
mov
mov
popf
push
pop
push
mov
aas
repz
sbb
fbstp
xlat
jmp
loop
out
pop
mov
mov
pop
lahf
pop
adc
mov
sti
daa
or
shl
jmp
cs
cli
inc
scas
jae
and
and
sbb
(bad)
or
bound
and
lock
jmp
stos
sti
mov
lods
fcmovnbe
aam
out
fadd
ror
push
cmps
out
icebp
scas
stc
lods
js
bound
inc
mov
cwde
jno
nop
sti
add
adc
fsubp
stos
aas
mov
(bad)
mov
xchg
jnp
movs
es
inc
dec
jge
pop
mov
jg
sub
rcl
xor
out
or
push
dec
pop
add
mov
add
sbb
push
push
fisub
xchg
add
dec
das
retf
xchg
in
pop
cmps
sbb
je
push
pop
pushf
xchg
xchg
(bad)
add
sbb
iret
(bad)
sbb
setge
pop
(bad)
fwait
mov
push
or
jmp
mov
call
cmp
ss
sbb
push
pop
rol
fwait
lods
ss
aam
(bad)
mov
xor
mov
js
fwait
jg
xor
lods
(bad)
sti
mov
sbb
mov
test
idiv
dec
ja
push
movs
mov
jmp
or
clc
sti
push
inc
das
cmps
or
loope
sti
call
fucomip
scas
nop
pop
jg
xchg
dec
inc
dec
xchg
dec
outs
or
retf
or
(bad)
pop
xor
cmp
mov
dec
inc
jns
pop
mov
mov
jg
(bad)
ja
xchg
sbb
adc
push
jnp
inc
xlat
dec
out
jae
arpl
cwde
cvtpi2ps
enter
add
retf
fnstenv
cmps
push
fisubr
test
outs
add
push
mov
out
dec
mov
shr
dec
out
sub
fs
pop
cli
dec
imul
inc
mov
lds
sbb
pop
sub
int3
sbb
pop
loop
test
inc
imul
xor
ds
sti
mov
sti
lahf
xor
shr
mov
cmp
sub
ds
jae
arpl
mov
fwait
int
ss
call
xchg
xor
shl
dec
sbb
test
scas
jmp
iret
sbb
inc
das
retf
adc
(bad)
cmps
jg
mov
or
push
fcmovne
popa
xchg
mov
mov
sub
mov
(bad)
cmp
sbb
cs
pushf
out
dec
inc
iret
dec
xchg
or
jmp
inc
xor
pop
adc
retf
es
inc
shl
inc
cmps
cmps
call
inc
xor
leave
sub
in
sub
push
test
outs
pusha
xlat
push
fwait
movs
dec
lahf
ds
call
dec
push
pop
scas
add
rol
xchg
retf
int3
test
mul
(bad)
dec
leave
iret
sti
pop
sbb
std
ds
push
mov
dec
outs
xchg
dec
pusha
sahf
stos
jns
push
inc
fstp
loopne
vmread
sub
les
lea
dec
push
cmp
cs
cmps
mov
or
(bad)
sbb
fst
mov
sbb
outs
jp
lahf
add
push
push
in
out
rol
outs
xchg
out
mov
out
and
fnstcw
out
fdivr
in
push
mov
bound
sub
inc
out
jbe
(bad)
jp
ss
aaa
out
or
or
pop
jbe
(bad)
jae
outs
stos
sahf
xchg
cmp
push
sbb
fstp
adc
sub
mov
and
(bad)
mov
pushf
sti
cmps
in
(bad)
fcmovnbe
mov
sub
das
js
stos
inc
sub
xor
test
fisttp
jnp
pop
pop
fist
adc
fdivr
lea
int3
outs
dec
scas
stos
outs
cmp
jge
ret
add
js
jmp
cmps
aas
movs
pop
sub
ss
xchg
(bad)
push
sahf
mov
sbb
dec
push
pop
xchg
jnp
inc
stos
mov
mov
add
aad
test
cmp
enter
(bad)
pop
push
sub
pop
push
jmp
or
xchg
sbb
fwait
dec
cmps
mov
cli
push
hlt
out
sub
lds
mov
and
xor
(bad)
pop
push
xor
test
mov
cs
sbb
pop
into
in
stos
scas
mov
ret
push
aas
sub
add
ja
xor
mov
mov
or
stos
cwde
outs
and
daa
adc
ds
(bad)
jmp
fwait
dec
ja
sub
sahf
lods
jmp
ss
ffreep
repz
push
xor
xchg
or
push
and
xor
mov
loopne
sub
aas
sbb
aam
call
fst
loop
dec
test
cmps
sub
add
ficom
xchg
push
jbe
adc
push
loop
outs
pop
sahf
xchg
mov
in
cmp
or
push
call
cs
scas
jae
pop
(bad)
pop
pop
test
imul
push
jmp
push
sub
cld
jl
or
cs
and
push
imul
cli
fisttp
nop
mov
das
pop
out
xor
inc
pushf
jae
pushf
popa
mov
loope
iret
jmp
inc
aaa
cs
mov
and
es
mov
inc
mov
call
out
inc
daa
fcmovbe
scas
ret
call
push
ja
stos
push
mov
mov
cmp
jecxz
cs
pop
imul
mov
int
xchg
jbe
iret
test
sbb
sbb
jbe
cmp
ror
mov
cmp
add
(bad)
scas
stos
shl
xchg
cmps
push
mov
cli
dec
mov
jmp
or
cmps
dec
fisttp
xchg
cdq
test
xchg
outs
mov
das
xor
inc
in
es
sub
or
xchg
enter
mov
pop
(bad)
mov
mov
adc
aas
enter
mov
jnp
cmp
sub
pop
xor
or
movsx
(bad)
aam
mov
cs
pop
jnp
test
les
stos
sub
popa
fdivr
adc
push
jno
dec
pop
out
stos
stos
xchg
mov
jb
scas
pop
fist
(bad)
cmps
cmp
mov
out
xlat
out
pop
inc
pop
ret
mov
cmp
sbb
rcr
and
or
sbb
inc
into
mov
dec
mov
push
test
cmp
xchg
dec
ret
pop
out
adc
or
xchg
adc
bound
xchg
int
add
push
xor
sbb
cmp
(bad)
dec
out
aas
jle
mov
jnp
cmp
retf
mov
push
jp
cmp
xor
jmp
mov
jb
adc
ret
call
aas
add
daa
retf
jmp
lods
or
mov
jae
iret
jbe
ss
or
(bad)
(bad)
push
xlat
jbe
fsub
and
pop
inc
jp
mov
jle
mov
xchg
out
lahf
ret
retf
das
ins
mov
mov
cmp
mov
pop
mov
scas
sbb
imul
jge
pop
retf
mov
nop
dec
dec
mov
das
mov
in
ds
mov
jns
in
retf
(bad)
scas
arpl
push
inc
mov
scas
or
mov
sbb
ror
or
and
aas
cmp
ins
js
mov
inc
nop
dec
pop
pop
mov
das
or
xchg
dec
add
retf
mov
pop
jge
into
push
outs
mov
xchg
arpl
push
retf
das
das
dec
and
stc
cmp
xlat
inc
inc
xchg
ds
imul
jle
rcl
sub
ss
cdq
lahf
repnz
repz
call
pop
ficomp
jae
xchg
jge
inc
mov
ret
sub
add
push
aaa
sub
loope
sub
push
jb
into
fimul
fwait
jnp
imul
push
dec
packssdw
jbe
jle
pop
push
cmp
stos
repnz
mov
call
ds
call
(bad)
lock
(bad)
mov
sbb
rcl
(bad)
stos
xor
pop
jg
xor
sub
out
add
and
mov
cli
mov
xor
push
inc
jnp
repz
cmp
fistp
mov
popa
mov
stos
dec
dec
fdiv
mov
inc
cld
aaa
loopne
pop
imul
or
aaa
bound
xlat
xor
daa
add
jp
arpl
xchg
push
loop
xor
mov
adc
cwde
jmp
and
lds
adc
inc
lea
enter
inc
cmp
ss
pop
mov
imul
xor
sbb
mov
adc
imul
dec
mov
imul
fld
push
mov
movs
mov
pop
(bad)
fs
aam
daa
iret
or
addr16
in
in
(bad)
test
cmp
cdq
inc
iret
bound
fbld
retf
(bad)
fnsave
loopne
test
sbb
inc
repz
and
mov
fistp
xchg
xlat
test
gs
jecxz
syscall
xor
or
xchg
scas
and
xor
add
aas
pop
(bad)
stc
pop
loop
dec
push
fbstp
lea
cli
jg
into
outs
cmp
ds
mov
pop
sub
xchg
xchg
cmp
cmps
movs
sti
add
(bad)
arpl
add
sbb
cmp
out
ins
push
push
push
lea
sbb
aas
inc
leave
pop
dec
jmp
and
xchg
imul
je
jb
iret
sub
inc
xchg
add
fst
(bad)
pand
sbb
into
pop
stos
jae
or
sub
(bad)
mov
push
mov
lock
lahf
fwait
jg
adc
add
sub
xor
imul
sahf
or
iret
push
mov
gs
les
adc
lock
xor
test
xor
push
outs
or
test
in
in
xchg
jo
setbe
pop
js
mov
xchg
sbb
shr
std
js
dec
and
mov
adc
xchg
cmp
imul
outs
pop
pusha
mov
xchg
jae
cmc
or
fsin
pop
pop
xor
dec
pop
sub
test
sbb
pop
lods
mov
mov
out
sti
add
arpl
push
jge
dec
ret
xor
jmp
or
pushf
ds
mov
mov
xor
or
mov
mov
jno
pop
push
and
mov
dec
fsubrp
mov
pop
mov
ins
lahf
das
cli
push
dec
and
mov
sub
jp
dec
fild
call
ds
push
fmul
out
and
fwait
pop
sbb
cmp
and
sbb
test
jmp
sbb
imul
bound
lods
ret
into
enter
jle
cli
sbb
fdivp
dec
inc
(bad)
mov
push
stos
(bad)
movs
test
xchg
add
xlat
in
loop
pop
xchg
imul
sub
pusha
or
out
call
repnz
dec
cmp
xor
ins
(bad)
(bad)
arpl
sub
dec
push
mov
retf
or
mov
mov
int
sahf
fwait
lahf
sbb
xchg
jp
mov
aas
ss
and
stos
test
mov
sahf
imul
cld
aas
retf
cmp
ins
sbb
lods
cmps
(bad)
jmp
jae
or
shr
push
cmp
sbb
scas
or
out
mov
cmps
sar
xchg
dec
sbb
retf
inc
pop
sub
jmp
sti
retf
pop
retf
clc
out
fidiv
loop
push
add
dec
mov
dec
jnp
dec
or
outs
xchg
jmp
fisttp
call
cmp
fnstcw
jp
ja
in
sti
movs
cli
and
iret
iret
loope
mov
sbb
sti
jnp
mov
pop
pusha
in
scas
lods
(bad)
xchg
jp
add
mov
or
aas
dec
sub
push
dec
mov
inc
lahf
mov
add
cli
stc
das
sti
lahf
jmp
cmc
call
call
push
mov
and
jmp
ds
into
xchg
mov
(bad)
sbb
loopne
ror
or
xchg
outs
mov
xchg
test
mov
dec
pop
in
repnz
mov
xchg
lds
fisubr
(bad)
sub
jne
fwait
scas
push
fadd
jmp
(bad)
sub
cmp
jne
mov
pop
dec
ret
jnp
sti
mov
mov
jecxz
jecxz
(bad)
cmc
pop
in
ror
call
cdq
push
mov
out
(bad)
es
push
aad
daa
xchg
cmp
lahf
lds
adc
sbb
cmp
test
xchg
jg
mov
mov
mov
dec
mov
add
mov
xor
cmp
mov
sti
xor
jl
or
pop
iret
jmp
sti
fnsave
jae
cmovle
mov
test
ds
push
test
adc
popf
xor
shl
stos
in
retf
jmp
adc
into
add
xchg
or
lahf
repz
mov
sub
daa
cmp
bound
adc
out
popw
xchg
jo
call
aas
push
sahf
dec
in
es
jmp
je
aas
outs
pop
test
sbb
std
mov
xor
lods
mov
out
push
push
test
(bad)
movs
iret
push
mov
les
lods
lock
lods
jl
pop
fcom
(bad)
cmp
and
adc
aas
enter
inc
inc
add
(bad)
and
cmp
pop
sahf
or
pop
scas
dec
cmp
outs
xor
jno
cdq
pushf
pop
mov
cmp
sub
xchg
pop
pushf
cmp
(bad)
not
add
cmps
sub
enter
add
and
sbb
jecxz
ret
jnp
jo
xlat
les
inc
sbb
sbb
retf
sti
xchg
mov
in
push
jecxz
jae
into
aad
imul
sahf
or
scas
sbb
sar
inc
dec
in
out
jmp
gs
pcmpgtw
mov
push
mov
sub
mov
aaa
das
mov
test
pop
xor
xchg
data16
mov
into
jmp
mov
push
add
nop
jp
xor
out
popa
dec
outs
pop
mov
push
nop
mov
jg
pop
jp
inc
in
test
mov
call
rcr
scas
lock
xchg
outs
jbe
sub
div
mov
or
arpl
stos
inc
pop
mov
sub
sub
mov
mov
jg
repnz
outs
adc
fsub
aaa
icebp
jecxz
out
sti
pop
mov
cmps
ins
sub
mov
bts
push
popa
shl
in
push
add
cmp
and
push
cmp
dec
je
js
jnp
dec
sahf
je
ret
mov
fstsw
out
out
or
inc
imul
pop
mov
imul
dec
dec
sbb
pop
xchg
(bad)
out
xor
cmp
mov
cmps
pop
jnp
sbb
mov
pop
addr16
outs
mov
and
arpl
sub
cmp
or
and
hlt
sahf
movs
jo
push
mov
sbb
xchg
cmps
mov
in
adc
and
ret
das
inc
xchg
add
hlt
jecxz
lea
xchg
pop
adc
adc
(bad)
int
leave
inc
movs
adc
xor
in
jmp
sub
pop
xor
mov
xchg
inc
(bad)
rcr
push
in
int
rsqrtps
cdq
in
pop
lahf
xchg
pusha
fist
lods
test
jns
fidivr
xlat
jg
daa
push
jmp
mov
fwait
sub
add
pop
pop
dec
scas
ss
(bad)
inc
hlt
and
add
sti
call
leave
mov
inc
fnstcw
inc
in
aam
xchg
and
data16
scas
retf
inc
pushf
loopne
fild
out
inc
aaa
cmp
fwait
xchg
lds
mov
pusha
mov
xor
pop
adc
push
les
adc
outs
xchg
pusha
pop
hlt
jb
lods
jge
call
and
adc
mov
jg
rcl
cmp
pop
xchg
bound
jl
fistp
in
fstp
add
push
adc
cdq
popa
aas
cdq
call
stc
outs
fmul
enter
mov
jno
fs
or
dec
lock
push
popf
dec
sbb
sbb
and
sbb
adc
fist
pop
imul
shr
xor
push
in
add
jg
shufps
push
pop
push
ret
ins
mov
aad
cmp
leave
push
(bad)
adc
cwde
sub
mov
sub
js
jb
fmul
mov
xlat
sar
cmp
dec
loope
fsub
mov
retf
jne
fstp
popa
stos
pop
sub
iret
fild
or
dec
pop
fild
pop
je
sahf
sub
push
stos
mov
mov
call
mov
dec
cmp
or
loopne
dec
cmp
cdq
iret
dec
out
aad
sti
mov
cwde
in
or
cmps
clc
cmp
push
aaa
inc
mov
aad
inc
pushf
push
inc
lods
lock
add
idiv
fldlg2
jmp
(bad)
add
scas
je
cdq
push
jmp
mov
pushf
add
(bad)
dec
mov
pop
ffreep
imul
jmp
or
loop
fdivr
mov
inc
lahf
dec
leave
aam
xor
aas
or
sbb
inc
daa
das
mov
pop
(bad)
and
and
cwde
mov
cli
sbb
(bad)
jns
xor
retf
stos
jmp
mov
stos
mov
xor
adc
mov
fmul
jle
mov
out
lods
(bad)
mov
sti
push
daa
mov
in
je
out
scas
int
pslld
mov
mov
sbb
add
ror
cmp
stos
cmp
or
ror
dec
das
pop
lahf
(bad)
mov
stos
fild
std
sahf
enter
ficomp
push
ror
xor
dec
mov
jmp
scas
mov
ud1
mov
pop
mov
cmp
in
jnp
cmps
shl
pop
pop
sbb
je
out
bound
mov
loopne
pop
mov
retf
sub
jb
mov
loop
lea
out
loope
outs
sub
jne
jae
add
mov
mov
stos
xchg
mov
(bad)
fsubr
push
pop
and
sub
or
jmp
sahf
mov
outs
stos
mov
cmp
test
mov
jbe
retf
or
mov
ficomp
jns
jns
push
pop
aas
xchg
iret
call
lods
xor
mov
lea
mov
js
stos
gs
push
cwde
stos
call
push
add
rcl
sub
in
ja
enter
shl
mov
jb
sbb
jg
into
das
in
add
out
in
mov
das
test
add
pop
mov
mov
lods
cmp
shl
popf
push
jl
iret
and
adc
or
or
xor
mov
test
shl
push
xor
je
movs
shr
repz
inc
xor
and
cmc
mov
inc
repnz
rcl
mov
daa
jmp
aas
jecxz
adc
imul
adc
(bad)
scas
inc
mov
mov
inc
pushf
cmps
pop
push
sub
jo
add
aaa
push
and
push
adc
jbe
(bad)
dec
xchg
xchg
arpl
xlat
push
repz
jmp
mov
xor
loop
or
jnp
xchg
jb
sbb
ja
dec
mov
in
fwait
repnz
push
pop
bound
sub
xor
xchg
pop
mov
movs
enter
pcmpgtw
sti
push
xlat
clc
jae
and
jge
cld
xchg
push
xlat
pusha
xor
push
aaa
aaa
test
push
mov
daa
inc
retf
sub
pop
fild
push
xlat
adc
jecxz
pop
adc
mov
adc
cmp
inc
enter
arpl
xchg
sbb
ss
jnp
or
dec
mov
xlat
daa
push
mov
addr16
sub
dec
shl
push
gs
add
push
ss
es
les
js
out
mov
or
mov
jg
ror
add
les
dec
add
and
jmp
mov
and
sub
jg
data16
jns
int
dec
in
xchg
push
ror
in
push
fnstcw
and
sub
mov
stc
inc
and
imul
test
inc
ins
push
stos
data16
push
(bad)
fnsave
or
and
add
mov
std
push
dec
push
gs
push
cmp
in
es
jbe
sbb
inc
or
test
push
adc
or
out
test
and
sub
loope
inc
clc
add
sub
add
loopne
adc
es
mov
sub
mov
or
shr
sub
movs
bound
movs
or
xlat
ins
loope
xchg
stos
dec
and
mov
pop
in
dec
inc
pop
out
jge
ins
retf
sub
aas
movs
jecxz
push
pop
push
push
xchg
cmp
jmp
or
sbb
pop
sbb
test
jmp
lods
out
jge
leave
outs
sub
scas
cmps
or
dec
sub
xchg
mov
push
ftst
movs
cdq
ins
enter
pop
inc
or
call
jbe
push
loop
xor
lea
mov
and
push
inc
xchg
fisubr
mov
jb
jp
fs
in
data16
xchg
push
test
cmp
jge
or
xchg
sahf
test
push
cmp
jae
sub
test
adc
or
ins
jbe
scas
and
sub
pusha
mov
mov
mov
cli
mov
adc
pusha
inc
cmp
test
mov
cmp
in
adc
fidiv
or
adc
xchg
mov
or
mov
lods
mov
dec
in
cmps
fs
in
in
cli
mov
lods
mov
mov
test
pop
lods
jp
xchg
fnsave
neg
and
in
stc
aas
mov
in
neg
and
aam
in
cli
pop
cli
sub
mov
adc
cmp
xchg
add
lods
cmp
shl
add
add
or
sub
js
loopne
push
call
stc
mov
or
in
mov
xor
call
mov
int3
cs
scas
es
jl
sub
test
and
mov
ror
shufps
push
cmps
shl
xchg
mov
or
leave
stos
cmp
jo
outs
push
(bad)
rcl
xor
sub
sub
mov
es
xor
les
mov
and
xor
into
aas
jo
jo
xor
mov
aaa
ins
mov
xor
lahf
mov
xor
xor
in
aas
pushf
jae
xor
mov
mov
aad
addr16
mov
sbb
xchg
dec
adc
mov
shl
mul
jbe
add
mov
xor
jecxz
xchg
sbb
int
shr
mov
lahf
in
fst
(bad)
pop
push
jge
xor
pushf
fcom
jno
mov
gs
sar
test
jbe
push
cld
cmp
pushf
imul
cmp
mov
imul
fdiv
xchg
mov
mov
lods
inc
push
mov
outs
ja
jb
dec
popa
and
inc
fmul
shl
xor
sbb
ret
repnz
ficomp
imul
jecxz
ret
fisubr
push
xor
or
dec
mov
jb
jbe
daa
ret
xor
div
pop
loope
ss
mov
mov
xchg
dec
jbe
test
call
iret
int
aam
pop
xor
mov
inc
arpl
mov
dec
pop
fdiv
retf
cmp
lods
inc
jecxz
jl
iret
bound
adc
iret
inc
in
mov
push
mov
dec
lahf
in
jmp
xor
cmp
repnz
jns
xchg
xlat
shl
xchg
xor
adc
fsub
mov
sub
jecxz
cmps
sbb
fsub
(bad)
repnz
and
cmps
test
in
inc
add
sub
and
addr16
push
in
push
bound
push
dec
and
rcr
inc
scas
pop
add
scas
aam
sar
aaa
mov
daa
ins
dec
or
xchg
aad
mov
in
and
xchg
push
push
cmps
push
sub
das
scas
mov
cmp
addr16
xchg
icebp
adc
lods
stc
push
js
ja
clc
arpl
push
inc
mov
lods
mov
xor
mov
daa
or
outs
or
lods
test
dec
xchg
ins
sub
div
cmps
pop
ret
data16
cmps
stos
outs
add
and
icebp
jo
inc
cmps
repz
jae
mov
and
add
or
and
or
cmps
add
lahf
aaa
mov
and
repz
xchg
sbb
arpl
sbb
mov
cmp
add
popa
pop
sub
ret
and
add
jecxz
dec
add
outs
mov
daa
mov
iret
div
push
cmps
stos
stos
(bad)
jecxz
loope
add
adc
daa
sub
arpl
and
push
mov
imul
or
or
cmp
pop
push
out
sub
test
cmps
movs
out
fadd
sub
inc
popa
pop
sub
pop
push
(bad)
and
lods
jns
add
xor
xlat
pop
movs
scas
inc
dec
int
stos
dec
(bad)
movs
aam
outs
aam
stos
ins
out
xchg
or
or
dec
icebp
xor
add
mov
mov
xor
adc
sbb
retf
data16
not
inc
adc
call
jae
out
repz
test
xchg
es
adc
cmp
mov
mov
sbb
and
ins
ror
or
dec
add
repz
pop
push
push
(bad)
xchg
push
or
es
push
nop
cmp
jge
je
or
shl
lock
repz
pop
sbb
dec
mov
xor
je
scas
aas
cmp
cmp
mov
cmp
sub
inc
cmp
mov
add
or
sbb
scas
retf
stos
lds
sub
data16
cmp
imul
push
(bad)
xchg
xor
(bad)
xchg
push
dec
in
stos
xchg
aad
push
inc
lock
mov
int
fnstsw
hlt
cdq
out
push
int
mov
push
push
push
bnd
stos
in
sbb
push
pusha
and
mov
inc
sub
sub
ins
dec
xchg
std
and
cmp
sub
pop
or
cmps
sbb
and
mov
das
inc
int3
fisttp
mov
adc
outs
mov
xchg
stc
jb
hlt
and
dec
repnz
jge
pop
es
mov
mov
rol
scas
mov
push
mov
xchg
cmps
retf
mov
es
bnd
mov
int3
mov
and
jmp
clc
ror
inc
add
push
ins
dec
push
out
and
add
bound
sahf
lods
mov
and
es
and
push
cmp
test
pusha
mov
or
enter
inc
(bad)
inc
sbb
in
push
push
repnz
and
add
or
aad
xchg
add
mov
jg
or
test
jmp
fsubr
js
test
sub
sub
push
clc
outs
jbe
pushf
lods
sar
repnz
or
in
ins
bound
cmps
dec
bound
add
test
popa
mov
push
std
neg
and
leave
fldcw
jecxz
outs
pop
es
push
and
dec
and
add
call
or
test
mov
aam
or
pop
add
dec
mov
loopne
(bad)
loopne
popf
test
lods
pop
test
ins
popf
sub
pusha
and
ins
jbe
ret
lods
ret
sub
mov
push
or
arpl
cmps
call
mov
bound
inc
mov
in
inc
(bad)
popf
pop
or
rcl
retf
push
sbb
fild
mov
push
in
es
(bad)
push
xchg
pop
inc
or
mov
stc
pop
bound
xchg
sbb
outs
ss
or
movs
lahf
mov
neg
and
or
cmps
fiadd
mov
ret
pushf
sub
and
mov
imul
xchg
cmps
and
jo
mov
jo
or
xor
or
jb
lock
lea
loop
fcomp
in
push
(bad)
pop
add
pop
mov
pop
jbe
(bad)
out
dec
or
mov
stos
cwde
adc
test
or
adc
jl
xchg
das
sbb
cwde
es
shl
push
xchg
mov
push
sbb
lahf
xchg
cmc
xchg
lods
shr
(bad)
jmp
adc
mov
or
add
scas
lods
shl
or
or
dec
ret
pop
in
jb
pushf
(bad)
enter
and
enter
or
cdq
push
pop
out
xchg
out
push
or
bound
mov
out
mov
loope
enter
call
xchg
or
or
mov
mov
or
or
enter
mov
mov
cwde
(bad)
fadd
jl
sbb
mov
cmps
and
out
xchg
sbb
jl
in
and
sbb
sbb
retf
fisttp
jl
mov
or
sbb
xor
push
les
mov
(bad)
or
ss
push
leave
jb
inc
dec
mov
sbb
fistp
push
push
aam
push
lods
test
hlt
int
das
cmp
aaa
and
dec
mov
loopne
cmp
jo
xchg
add
push
xlat
mov
fisttp
das
cwde
push
pushf
mov
fbstp
fwait
je
aas
push
hlt
jg
xor
cmp
xchg
je
lods
jg
sub
sti
or
cmp
dec
aas
mov
fcom
test
pop
xor
pop
mov
pop
xor
rcr
cld
push
das
xor
clc
or
adc
dec
icebp
mov
push
add
ds
pop
mov
jne
mov
pop
fst
ja
pushf
hlt
lock
push
mov
fistp
jmp
push
enter
sahf
int3
fcom
sbb
int3
push
xchg
xlat
mov
pop
je
and
pop
pop
xchg
aaa
pop
and
das
(bad)
and
add
cld
adc
das
aaa
pop
xchg
sbb
fcomip
cmp
cdq
mov
xchg
jmp
mov
loopne
aas
mov
pop
mov
pop
ins
dec
inc
dec
sbb
cmp
cmp
cld
jnp
jg
push
scas
dec
scas
sti
and
fcomp
hlt
clc
jnp
aas
pop
lahf
out
push
pop
mov
lahf
add
loop
fistp
push
in
arpl
mov
pop
push
scas
dec
and
cld
pop
mov
sub
das
hlt
jp
(bad)
fcmovbe
aam
mov
ds
xchg
xchg
pusha
mov
clc
and
sbb
cmps
xchg
(bad)
aaa
xchg
fnstcw
fistp
mov
mov
cld
hlt
push
jg
psrlw
fistp
sbb
lods
pop
cwde
jg
mov
mov
and
cmp
sbb
lods
jnp
jg
pop
ja
adc
cwde
push
(bad)
(bad)
loope
fs
push
and
cmp
stos
fst
out
xor
stc
(bad)
push
scas
jge
frstor
into
in
sub
sbb
mov
shr
pop
ja
xchg
fiadd
mov
or
xchg
push
sub
sub
std
out
pop
sub
scas
jne
lods
repnz
adc
pop
test
push
stos
lea
inc
js
mov
mov
jne
xchg
sbb
sub
sub
sub
pop
cmp
push
xor
popf
aas
std
jg
jg
aas
popf
aas
pop
into
pop
dec
fsubr
jl
fmul
popf
mov
outs
js
jge
cmp
fmul
retf
mov
outs
pop
push
popf
mov
clc
dec
std
mov
lods
xor
lods
ins
push
or
mov
push
outs
cdq
test
movs
enter
push
outs
ins
scas
test
inc
popf
push
jge
pop
ins
jge
mov
(bad)
js
jl
cmp
push
fsubr
mov
das
sub
std
scas
jecxz
mov
cdq
and
shl
lods
mov
retf
mov
dec
frstor
mov
pop
cmps
popf
push
mov
scas
popf
lods
mov
and
pushf
stos
adc
jge
adc
cdq
std
es
bound
aad
dec
outs
(bad)
punpcklbw
sbb
pop
test
jecxz
sahf
iret
push
adc
adc
lds
js
enter
add
repz
dec
pop
call
pop
jge
mov
sbb
dec
pop
sub
mov
sub
pop
aad
dec
sub
in
mov
call
in
push
jmp
call
sahf
call
cld
cmps
or
mov
pop
inc
aad
mov
imul
hlt
popf
pop
or
sub
xor
rol
mov
pop
pop
pop
pop
sbb
(bad)
(bad)
push
sbb
sbb
cli
sti
mov
jnp
jnp
mov
(bad)
(bad)
mov
arpl
mov
mov
pop
sbb
sbb
fstp
fstp
sbb
inc
icebp
div
ja
test
movs
stos
lahf
ror
mov
aaa
xor
icebp
test
jae
mov
movs
mov
ss
mov
pop
outs
push
loop
adc
sti
pop
jmp
ret
stos
arpl
push
cwde
and
retf
mov
popa
popf
adc
dec
or
(bad)
in
fstp
and
jg
(bad)
(bad)
jb
inc
fwait
stos
in
jp
out
xchg
mov
cdq
outs
xor
shl
movs
add
loopne
ret
jbe
xlat
xor
and
movs
sbb
pusha
test
sbb
mov
and
(bad)
sbb
pop
mov
cmp
pop
add
retf
fs
mov
dec
sub
push
add
inc
js
jp
push
pusha
dec
sub
add
and
test
mov
mov
loop
ret
push
mov
aad
repz
test
lock
and
loope
loop
outs
(bad)
cmp
dec
cli
lds
mul
repz
jns
jnp
out
stc
dec
repz
shl
(bad)
jae
in
repz
pop
(bad)
lods
(bad)
jmp
mov
ja
xlat
outs
loop
rcl
lods
jne
jae
pop
push
fdiv
outs
loope
ficomp
mov
jmp
inc
aad
lds
jmp
jns
push
cmps
repz
pop
repz
scas
push
test
fcom
push
test
xlat
dec
les
inc
int
mov
pop
movs
or
pop
shl
dec
jnp
jnp
xchg
pop
cmps
xchg
fmul
clc
adc
test
addr16
push
mov
or
ins
aaa
fadd
fnstenv
test
ret
out
in
push
into
add
outs
mov
stos
mov
jae
jp
jp
ds
iret
mov
mov
xchg
xor
cmp
cmps
ss
xchg
outs
mov
cdq
cmp
and
jg
jg
mov
lods
fs
jg
jns
retf
xchg
retf
clc
or
bound
popa
movs
clc
es
xchg
test
mov
cli
retf
gs
sub
push
movs
push
cwde
xchg
or
(bad)
clc
out
retf
popf
cmp
outs
into
and
and
xchg
stos
jl
sahf
gs
or
push
ror
cmp
cmp
sti
sub
enter
and
jp
pop
push
(bad)
mov
inc
fwait
inc
cmc
cmp
jecxz
jecxz
or
xor
push
sub
jns
or
dec
cwde
dec
clc
jns
fwait
cdq
mov
int3
fwait
cdq
mov
int3
fwait
cdq
mov
int3
fwait
cdq
mov
mov
pop
cwde
mov
stc
fistp
mov
mov
mov
leave
ret
iret
pop
jno
xchg
out
in
xlat
mov
neg
or
stc
test
clc
fldlg2
repz
enter
into
in
mov
(bad)
lock
je
mov
jmp
ficomp
cmc
cdq
fimul
pop
clc
fidivr
mov
jmp
sbb
retf
fwait
cdq
jmp
mov
fdivrp
fwait
retf
adc
mov
stc
mov
mul
mov
(bad)
mov
jbe
jg
mov
subps
lods
cmps
sub
inc
xchg
and
sbb
jne
imul
in
cmp
dec
pop
enter
icebp
mov
or
(bad)
enter
lods
push
repz
dec
das
iret
loopne
retf
sahf
push
(bad)
mov
or
mov
dec
std
push
pop
(bad)
mov
cmp
lahf
repnz
jno
es
add
push
cmp
pop
stos
outs
mov
push
mov
loopne
das
jae
jno
or
popf
mov
jg
xor
(bad)
aas
push
(bad)
cld
jl
neg
adc
mov
cmp
jno
jp
out
mov
sti
sbb
(bad)
pop
mov
inc
adc
rcl
stos
jae
es
add
sbb
clc
and
push
mov
pop
cmps
cmp
xchg
(bad)
(bad)
bound
mov
push
popf
add
idiv
adc
cmps
lods
icebp
into
push
mov
fdivr
ins
push
push
jnp
inc
mov
add
repz
mov
into
xor
in
push
std
push
not
cmps
mov
cmps
jo
or
xor
mov
sbb
inc
mov
data16
add
mov
pushf
push
mov
shr
push
inc
sahf
les
jle
mov
in
push
fiadd
push
cmp
aad
xchg
cmp
jne
mov
mov
sbb
enter
fwait
ret
sbb
xchg
push
jmp
and
out
inc
push
loope
and
xor
inc
int
enter
dec
in
shr
jae
jno
push
push
dec
xchg
into
or
jp
lea
dec
mov
shl
cmps
push
test
lods
sar
ret
call
mov
mov
xor
imul
add
out
sti
add
push
fild
div
mov
xchg
push
jmp
adc
cmc
xchg
hlt
lahf
inc
fiadd
gs
cs
jnp
push
rol
lahf
ins
and
pop
repnz
out
daa
and
push
shl
repz
inc
icebp
inc
add
sbb
loope
inc
mov
and
lds
lods
and
bound
add
and
and
add
or
les
fs
xchg
xlat
adc
je
push
add
sbb
xor
add
sti
xor
hlt
sub
add
adc
xor
loope
mov
lds
inc
push
mov
inc
in
add
lea
loope
push
inc
shl
in
xchg
xlat
xchg
data16
or
add
ins
lock
fwait
jbe
push
adc
jmp
mov
sub
adc
and
adc
bound
jle
jbe
movzx
loop
sar
adc
inc
ror
xor
hlt
mov
xlat
and
push
pop
jo
shr
jp
mov
xchg
mov
fs
jns
fs
push
push
inc
in
inc
lahf
shl
stc
pop
loopne
mov
push
popa
(bad)
inc
push
lahf
lock
gs
mov
stc
in
shr
push
pop
or
push
pop
(bad)
(bad)
mov
push
sub
xor
sbb
test
js
jae
jle
out
add
sbb
dec
add
dec
js
mov
adc
ror
pop
jne
dec
sub
es
mov
cld
jns
hlt
les
in
lahf
cmps
leave
ret
cld
out
jg
enter
adc
stos
pushf
aaa
aas
in
pop
fs
ja
fs
das
aam
mov
cmp
jmp
in
arpl
xor
in
hlt
fstp
jns
mov
pushf
inc
scas
rcl
jp
mov
mov
in
xor
and
cmps
stc
adc
inc
push
in
or
hlt
push
stos
cmp
dec
movs
cld
sbb
mov
cmc
mov
xchg
mov
cmps
pushf
and
jne
cmp
clc
outs
jl
sbb
ret
shl
das
jae
push
add
jb
jnp
xchg
frstor
sub
mov
jnp
sar
(bad)
retf
inc
mov
es
jno
sbb
or
sbb
ins
inc
cmp
and
push
xchg
inc
pop
imul
adc
sub
xstore-rng
cmps
test
popf
adc
cmp
mov
fiadd
mov
(bad)
sbb
push
jl
xchg
sbb
mov
cwde
xchg
imul
inc
fs
addr16
loop
ins
dec
cmp
mov
push
aaa
adc
repz
popa
pop
pushf
(bad)
mov
mov
lods
pop
test
mov
mov
ss
push
push
xor
pushf
neg
jge
pop
pop
mov
cld
iret
clc
inc
xchg
cmps
pushf
xchg
pop
dec
sbb
sbb
mov
xchg
movs
pushf
mov
cli
pop
out
xchg
and
mov
jge
ret
out
and
add
mov
push
xchg
mov
mov
cmps
lock
push
sub
jp
jge
dec
enter
add
icebp
cld
dec
movs
sub
mov
pop
jb
jg
push
stc
mov
lea
and
jno
pushf
dec
outs
ficom
and
int3
cmp
icebp
sbb
imul
sbb
ins
arpl
pushf
jno
repnz
lods
repz
dec
mov
mov
xchg
mov
jl
mov
or
repnz
push
add
inc
ins
xchg
pop
xchg
sub
xchg
out
sbb
pushf
ret
imul
repz
clc
mov
cmp
xor
push
lods
sbb
dec
mov
addr16
sbb
or
and
daa
nop
jge
mov
mov
jl
arpl
lods
pop
mov
data16
push
and
rcr
ret
jne
sub
inc
cmp
lods
ins
and
and
jl
adc
sub
add
mov
mov
mov
mov
xchg
inc
and
pop
xchg
ds
dec
jecxz
mov
jno
icebp
push
mov
xchg
cmp
xchg
xor
inc
ss
mul
idiv
cmps
enter
inc
adc
mov
dec
test
aaa
call
xchg
xchg
inc
nop
out
mov
les
sbb
nop
in
in
(bad)
idiv
out
(bad)
dec
out
push
pusha
xlat
mov
adc
mov
mov
mov
push
cmp
cmp
sbb
stc
push
mov
emms
cmp
xor
inc
mov
push
test
mul
cmc
cmc
mov
ror
daa
push
adc
stc
test
int
in
dec
adc
neg
push
out
out
xchg
sbb
imul
idiv
ficom
shl
neg
jb
xor
ja
sub
or
add
mov
data16
dec
dec
out
mov
test
push
(bad)
out
daa
mov
mov
fs
int3
jmp
mov
nop
adc
or
aaa
imul
stos
imul
fwait
sbb
or
push
sub
xchg
cmc
aaa
push
and
and
xlat
pop
pop
fdiv
push
retf
and
aaa
lds
out
inc
(bad)
add
xor
cmps
aas
sbb
dec
and
jl
sbb
and
pop
loope
sbb
icebp
rcr
pop
jl
sbb
add
lods
mov
push
das
mov
aas
popf
push
xchg
mov
jmp
mov
packsswb
add
adc
div
inc
jo
inc
call
pop
dec
inc
lock
dec
das
stc
out
sub
pop
es
push
outs
lods
inc
add
ins
aad
push
in
add
mov
sar
pop
or
mov
outs
es
iret
or
ds
and
mov
and
retf
xor
outs
mov
dec
cmp
(bad)
jl
mov
dec
cmp
mov
or
adc
sub
outs
sub
shr
dec
inc
dec
mov
enter
loope
jno
(bad)
cmp
shr
adc
lock
lahf
jle
xchg
and
int3
jmp
das
dec
outs
cmps
movs
jnp
adc
push
and
cdq
inc
pop
ja
fadd
pushf
cld
or
mov
cmps
pushf
jle
pop
scas
into
jle
dec
dec
ss
pop
das
jae
bound
inc
cs
jnp
jb
cmp
out
out
mov
std
lea
ins
pop
push
aas
jae
pop
test
pop
std
dec
cmp
xchg
dec
pop
dec
fiadd
enter
scas
out
ins
pop
and
dec
mov
dec
into
pop
leave
push
(bad)
or
mov
lahf
sbb
ret
lock
int3
dec
scas
push
int3
mov
cmp
retf
test
(bad)
fstp
inc
lods
sub
push
jge
and
test
out
int
rol
fild
or
fbstp
cmp
sbb
mov
or
stc
mov
fisttp
mov
mov
sub
ds
ins
sub
jle
and
popf
(bad)
and
or
iret
repz
mov
add
and
(bad)
mov
dec
sbb
std
(bad)
std
out
jle
cmp
aad
pop
jge
sbb
inc
scas
mov
and
jl
loopne
popa
das
in
mov
xchg
xor
bound
jle
jbe
mov
cld
xor
popa
mov
dec
xor
pop
(bad)
les
mov
sub
sbb
(bad)
retf
addr16
movs
mov
cdq
dec
push
ins
jge
std
iret
pop
and
outs
xchg
repnz
dec
jl
jle
add
sub
jnp
cmp
inc
loopne
and
inc
mov
out
iret
loop
sar
pop
ja
jae
nop
loopne
sub
add
push
aad
add
in
push
call
fbld
arpl
push
div
and
mov
add
shl
xlat
stc
or
jae
push
mov
and
sti
jae
arpl
xor
inc
outs
pop
jne
dec
fst
hlt
(bad)
inc
adc
repz
add
cmp
add
xchg
sahf
test
shl
push
jae
lods
in
movs
push
lds
or
xchg
jmp
xlat
sub
push
xchg
ja
shr
sahf
les
push
mov
retf
fsub
and
xor
fs
popf
adc
xor
outs
xchg
sbb
jge
les
pop
add
out
movs
test
sub
shl
mov
test
stos
fadd
js
and
vmptrld
mov
mov
push
mov
ss
in
lock
test
jge
packssdw
push
add
sbb
popf
pusha
mov
mov
mov
js
test
jl
clc
aaa
inc
jle
call
mov
popf
fdiv
fsubr
pop
cld
dec
push
dec
pop
dec
add
cmps
fstp
sub
jo
std
push
pop
push
mov
mov
or
popf
jecxz
lock
sti
rcl
push
push
movs
pop
push
stos
mov
sbb
lods
icebp
add
pop
test
mov
frstor
fstp
mov
jo
mov
rcr
fst
hlt
push
pop
jbe
cmps
rcl
lock
and
xlat
push
int
mov
shl
xor
mov
mov
rcr
loop
mov
or
rcr
test
xchg
in
pusha
cmp
pop
data16
jnp
fwait
rcr
cmc
mov
gs
adc
es
xor
add
retf
aam
adc
xlat
ds
movlps
sbb
fcmovu
rol
add
pop
lock
sti
loop
adc
movs
mov
popa
pop
movs
in
mov
fld
cmp
jge
pop
mov
dec
(bad)
dec
mov
jp
or
mov
mov
arpl
mov
jmp
out
or
fstp
mov
in
ficomp
call
jmp
push
fimul
addr16
cmp
fstp
lods
sub
pop
mov
(bad)
pop
jne
imul
test
imul
dec
retf
pop
mov
lods
clc
sbb
mov
aad
mov
dec
dec
int
mov
mov
scas
and
lea
stos
jmp
arpl
rcr
sub
sahf
mov
fisttp
push
clc
fucomi
mov
int
fnstsw
sbb
push
imul
jb
mov
jl
adc
fstp
or
call
inc
in
ins
mov
dec
mov
mov
fiadd
nop
cwde
or
cmps
adc
fldpi
aas
mov
pop
jns
sbb
pop
xchg
cwde
lods
(bad)
hlt
out
mov
or
or
jmp
jp
mov
into
jecxz
leave
mov
push
dec
popa
add
outs
jns
jmp
sub
xlat
out
aad
jle
mov
hlt
mov
inc
fld
das
push
pop
movs
into
xlat
(bad)
(bad)
lods
or
je
fwait
mov
and
fadd
js
pop
iret
ds
sbb
jge
or
dec
sub
mov
gs
push
dec
and
sbb
stos
mov
rcl
pop
dec
sub
mov
xchg
pusha
inc
in
xor
pop
lock
sbb
repz
repnz
pop
dec
or
xlat
push
(bad)
ss
pop
sbb
movs
xor
mov
jns
xchg
out
mov
call
sub
add
inc
out
jp
loop
iret
out
or
movs
arpl
fwait
push
push
push
push
(bad)
mov
hlt
mov
pop
and
cmps
std
ins
dec
sbb
and
daa
bnd
jmp
addr16
gs
adc
rcl
inc
cmp
and
mov
add
ss
fadd
push
mov
xchg
daa
push
jp
jns
into
jmp
push
sbb
dec
xlat
daa
int3
cmp
shl
cmp
mov
jecxz
mov
pusha
adc
scas
push
arpl
out
lods
cmp
daa
sbb
fucomi
out
fld
xor
cmc
inc
int3
neg
sub
fadd
cmps
jecxz
bound
(bad)
adc
and
sbb
add
out
mov
shl
mov
or
cdq
ins
adc
fs
mov
inc
pop
test
sub
sbb
aas
push
xchg
clc
or
fldcw
stc
(bad)
aas
push
loope
sub
adc
shl
push
scas
sub
sbb
xor
xor
pop
(bad)
pop
loop
push
cwde
(bad)
jae
sub
call
inc
daa
lds
mov
mov
xchg
dec
dec
idiv
jl
sub
jo
loope
(bad)
scas
push
cmp
pop
sbb
pop
or
xchg
jno
imul
daa
mov
repz
dec
xlat
add
movs
sbb
push
pop
cmc
jmp
mov
sub
cmp
pushf
mov
or
in
scas
ss
xchg
add
xchg
mov
mov
sbb
or
or
lods
add
loop
mov
inc
add
adc
movs
repnz
inc
shr
jmp
sahf
jae
push
push
es
dec
inc
or
sub
pop
adc
jmp
bound
out
imul
pushf
jle
fld
xchg
outs
xor
pop
hlt
pop
xor
mov
fisub
loopne
jno
push
jns
ret
push
add
inc
loop
inc
lds
adc
adc
lods
xchg
xlat
jns
inc
inc
shl
fist
xor
mov
adc
(bad)
rcl
and
inc
inc
add
mov
xchg
clc
push
ret
inc
pop
jns
push
and
retf
dec
je
mov
pusha
(bad)
repnz
dec
dec
and
pop
or
retf
xor
xchg
addr16
pusha
mov
das
and
adc
fld
push
add
add
das
scas
cmp
popa
scas
fild
sbb
pop
(bad)
sub
lahf
ds
inc
fbstp
(bad)
jno
lock
mov
xor
mov
out
xchg
mov
into
push
sub
or
cmps
vpand
mov
rol
nop
loopne
(bad)
scas
push
cmp
stos
pusha
mov
cmc
or
(bad)
xor
jle
mov
lock
adc
mov
jae
cmps
push
out
aaa
cmp
fsubr
mov
test
xor
push
lock
mov
in
call
xchg
xor
sub
or
mov
ins
inc
in
and
xchg
adc
test
push
retf
pop
jecxz
mov
clc
arpl
arpl
ins
mov
ror
ret
dec
adc
or
daa
ror
pop
ja
push
ins
jb
aam
call
std
(bad)
into
push
push
xchg
adc
push
iret
push
fist
pop
add
add
add
jle
outs
and
pop
or
test
lahf
dec
div
push
jb
mov
jle
and
adc
xor
jecxz
fnop
cld
push
outs
push
lods
push
jg
add
les
(bad)
push
mov
js
(bad)
cld
fmul
retf
mov
cdq
imul
je
mov
ret
cwde
jg
xor
mov
and
pop
lahf
xchg
inc
dec
or
push
cmp
push
mov
out
shr
lods
xor
cli
iret
jmp
jb
mov
push
mov
je
cld
adc
adc
in
and
movs
fimul
and
popf
jb
cld
cmps
aad
es
mov
inc
lds
cmp
clc
mov
xchg
bound
or
push
add
xor
cmp
inc
sub
mov
jne
mov
je
lods
and
gs
je
cmp
xor
adc
fsub
cld
ret
mov
test
(bad)
jnp
arpl
push
outs
inc
stos
sub
test
push
shr
cmp
imul
dec
pop
pop
lods
lds
push
jge
rcl
jp
adc
cmp
imul
aam
pop
hlt
xchg
aam
mov
mov
(bad)
jmp
sub
and
adc
div
lods
mov
push
adc
outs
push
je
inc
wbinvd
std
fld
pusha
(bad)
repnz
sub
pushf
iret
jae
scas
mov
out
mov
mov
cmp
inc
push
sti
cwde
and
data16
xchg
or
idiv
loopne
xchg
movs
xchg
lds
xchg
fist
add
adc
int3
inc
pop
dec
popa
in
xor
adc
scas
xchg
push
mov
addr16
mul
mov
sbb
ins
out
scas
cmp
bound
or
out
test
jmp
mov
jmp
push
das
fldcw
neg
fs
mov
stos
in
mov
outs
nop
adc
pop
adc
jmp
cmp
push
jo
dec
pop
xchg
in
imul
sahf
sbb
jp
std
scas
sbb
stos
jmp
in
out
jns
mov
imul
add
jb
test
jmp
sbb
jge
xor
mov
aam
xor
popf
scas
test
and
or
aas
xor
and
dec
and
sahf
xchg
mov
(bad)
jmp
jmp
sbb
inc
jg
sbb
mov
movs
add
dec
mov
outs
push
(bad)
xchg
or
dec
adc
inc
mov
push
add
pop
sub
stc
and
sub
push
push
sbb
lahf
jg
pop
inc
sti
iret
pop
push
stos
enter
xchg
cmp
jno
or
add
(bad)
test
or
stos
or
sbb
sub
enter
je
jne
mov
call
call
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
pop
jmp
push
mov
mov
push
push
push
mov
sub
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
mov
mov
mov
pop
ret
push
push
lea
push
mov
call
call
mov
mov
mov
push
lea
push
push
push
push
mov
call
add
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
cmp
je
cmp
je
lea
call
mov
push
lea
mov
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
test
je
call
mov
mov
push
push
call
add
mov
lea
call
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
mov
mov
mov
pop
ret
push
push
lea
push
mov
call
call
mov
mov
push
mov
lea
push
push
push
push
mov
call
add
lea
push
mov
call
mov
call
test
je
mov
call
test
je
lea
push
mov
call
call
mov
push
call
movzx
push
push
lea
push
push
call
add
lea
push
mov
call
cmp
je
mov
test
je
call
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
call
mov
push
lea
mov
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
jne
mov
call
call
push
push
lea
call
push
lea
push
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
add
mov
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
call
mov
mov
mov
mov
push
push
call
mov
mov
test
sete
movzx
mov
push
mov
push
mov
push
push
push
push
call
add
cmp
je
mov
test
je
mov
push
push
xor
call
test
je
lea
cmp
jge
call
mov
mov
push
push
push
push
call
add
push
call
mov
mov
push
push
add
call
test
jne
mov
mov
push
push
call
test
je
call
mov
push
push
push
mov
call
add
mov
call
call
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
lea
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
mov
pop
jne
call
mov
push
push
mov
call
mov
add
call
call
push
push
jmp
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
test
je
mov
push
push
call
test
jne
mov
jmp
mov
jmp
mov
call
mov
mov
push
push
mov
push
push
push
mov
call
add
jmp
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
test
je
cmp
je
cmp
je
push
lea
call
mov
mov
push
lea
mov
call
mov
push
lea
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
pop
je
mov
call
test
je
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
mov
call
mov
mov
lea
push
push
push
push
mov
call
mov
push
mov
call
lea
push
call
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
mov
push
call
ret
int3
push
mov
push
mov
mov
test
push
je
push
call
add
mov
cmp
mov
je
xor
mov
mov
mul
seto
neg
or
push
call
add
test
mov
jne
call
lea
push
push
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
mov
jne
mov
mov
pop
pop
ret
push
call
test
mov
jne
push
call
int3
int3
int3
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
test
je
mov
mov
push
call
mov
mov
mov
pop
ret
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
mov
pop
ret
push
mov
sub
lea
push
call
mov
mov
lea
push
push
push
push
mov
call
call
mov
mov
push
push
push
mov
call
add
lea
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
call
mov
mov
xor
div
mov
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
push
push
call
add
test
jne
mov
test
jne
pop
pop
xor
pop
pop
ret
pop
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
add
push
call
add
add
mov
mov
lea
call
call
mov
mov
push
push
push
push
mov
call
mov
add
push
call
mov
push
push
push
push
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
xor
cmp
je
cmp
jbe
push
lea
mov
mov
test
mov
je
lea
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
add
cmp
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
fld
sub
fstp
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
lea
mov
mov
call
mov
lea
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
mov
mov
call
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
movzx
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
test
je
mov
mov
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
call
mov
mov
mov
push
mov
push
push
push
push
push
mov
call
add
lea
call
mov
mov
lea
push
push
mov
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
push
call
push
push
push
call
push
call
mov
push
push
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
mov
mov
test
je
mov
mov
push
call
mov
lea
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
lea
call
lea
mov
call
push
push
push
call
push
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
push
push
call
mov
test
jne
call
mov
mov
call
push
mov
push
push
call
add
jmp
xor
mov
mul
seto
neg
or
push
call
mov
add
mov
mov
mov
push
push
call
test
jne
call
mov
mov
call
push
mov
push
push
call
mov
push
call
add
jmp
lea
call
mov
mov
mov
cmp
je
push
call
push
lea
push
push
mov
mov
call
add
push
push
push
push
push
push
lea
push
push
call
cmp
jl
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
lea
call
mov
mov
push
sub
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
je
lea
push
push
mov
mov
push
call
mov
mov
lea
call
cmp
je
add
cmp
jne
add
cmp
jne
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
call
add
lea
push
call
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
call
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
push
call
add
lea
call
mov
lea
call
test
jne
call
mov
mov
push
push
push
push
mov
call
add
jmp
mov
add
push
call
add
add
mov
mov
push
push
lea
call
mov
lea
jmp
lea
mov
add
sub
jne
mov
lea
push
push
call
mov
cmp
je
mov
lea
mov
add
push
call
add
add
mov
mov
lea
push
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
lea
call
test
je
lea
push
push
call
add
test
je
lea
push
push
call
add
test
je
push
push
lea
mov
mov
push
call
mov
mov
lea
call
lea
push
push
call
mov
neg
sbb
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
push
call
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
push
jne
mov
push
push
lea
push
call
mov
mov
shl
add
lea
js
mov
mov
mov
sub
sub
test
jge
mov
xor
test
setne
test
jne
call
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
mov
push
mov
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
mov
add
test
mov
mov
jne
mov
mov
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
mov
push
lea
mov
call
lea
call
mov
push
add
call
add
cmp
jg
lea
push
lea
push
lea
call
mov
call
test
je
push
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
lea
call
jmp
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
cmp
sete
test
push
je
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
mov
mov
push
call
mov
mov
lea
call
jmp
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
push
lea
push
lea
call
mov
call
sub
lea
fstp
call
mov
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
add
call
add
cmp
jle
mov
push
push
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
lea
push
mov
call
add
mov
mov
mov
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
xor
jmp
call
push
push
jmp
call
push
push
push
lea
call
push
lea
push
jmp
sbb
sbb
test
sete
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
mov
mov
push
push
push
push
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
je
mov
test
je
push
call
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
mov
push
push
mov
call
cmp
jne
call
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
test
push
jne
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
not
test
push
mov
je
mov
push
mov
call
cmp
je
xor
cmp
mov
jbe
mov
mov
test
je
push
push
push
call
push
lea
push
push
call
mov
test
jne
mov
add
cmp
mov
jb
pop
pop
pop
mov
mov
mov
pop
ret
mov
call
mov
test
je
jmp
lea
push
push
push
push
lea
sub
push
mov
call
mov
push
lea
push
push
call
push
lea
push
push
call
mov
lea
push
lea
push
push
mov
mov
call
test
jne
cmp
jne
mov
xor
mov
mov
mul
seto
neg
or
push
call
xor
add
test
setne
mov
test
je
lea
push
push
push
call
mov
mov
add
xor
cmp
setne
test
je
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
push
call
test
jne
mov
pop
pop
pop
mov
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
xor
mov
mov
push
push
call
cmp
jne
mov
lea
call
pop
pop
mov
mov
mov
pop
ret
mov
push
lea
push
lea
push
lea
push
mov
mov
call
cmp
je
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
lea
push
push
push
lea
push
push
push
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
mov
push
call
mov
lea
call
pop
pop
pop
mov
mov
mov
pop
ret
push
call
cmp
mov
jne
push
call
mov
push
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
lea
mov
add
sub
jne
mov
mov
mul
seto
mov
neg
or
push
call
add
xor
test
mov
jbe
lea
lea
xor
mov
mov
jmp
lea
mov
test
jl
mov
cmp
jge
mov
add
mov
test
jne
xor
mov
jmp
push
call
mov
test
mov
je
mov
mov
lea
test
mov
je
test
jne
xor
jmp
push
call
push
push
call
mov
mov
mov
mov
mov
push
call
sub
sub
add
add
cmp
jb
mov
mov
mov
lea
lea
mov
add
sub
jne
lea
push
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
push
push
push
or
mov
mov
push
push
mov
call
mov
push
mov
call
add
test
jge
call
mov
mov
mov
push
push
push
push
push
call
add
mov
lea
push
call
jmp
call
mov
mov
call
test
je
push
mov
call
mov
push
call
mov
lea
push
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
push
call
test
jne
lea
call
mov
mov
mov
push
push
lea
call
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
mov
mov
pop
mov
pop
ret
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
push
push
mov
mov
mov
mov
push
push
push
call
mov
mov
sub
mov
sub
mov
lea
sub
add
or
mov
jge
push
mov
call
mov
mov
mov
push
push
add
push
mov
lea
push
call
add
test
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
mov
lea
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
push
mov
call
mov
mov
add
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
pop
mov
mov
mov
pop
ret
push
push
lea
push
push
lea
push
push
call
test
je
mov
mov
test
jbe
push
lea
push
lea
call
mov
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
push
lea
push
push
call
test
jne
push
call
pop
xor
pop
mov
mov
mov
pop
ret
push
call
mov
pop
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
push
mov
push
mov
mov
jne
call
cmp
jne
call
mov
cmp
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
lea
call
push
call
add
add
mov
mov
pop
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
push
mov
mov
mov
mov
cmp
mov
mov
je
push
lea
mov
or
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
cmp
mov
mov
jne
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
call
mov
mov
push
lea
call
mov
lea
push
lea
push
mov
call
mov
mov
lea
call
test
pop
je
lea
push
lea
push
call
mov
mov
push
mov
push
call
add
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
sub
push
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
mov
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
test
je
lea
push
mov
call
mov
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
lea
push
lea
push
call
add
mov
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
call
add
test
je
mov
push
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
push
mov
call
mov
mov
push
push
push
push
call
call
mov
mov
push
push
push
call
push
call
mov
add
test
jle
push
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
mov
call
xor
test
setne
test
je
mov
mov
mov
call
add
mov
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
je
sub
je
sub
jne
push
lea
push
lea
call
mov
call
push
push
lea
push
jmp
push
lea
push
lea
call
mov
call
sub
fstp
lea
push
push
call
add
jmp
push
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
lea
push
call
add
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
test
jg
pop
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
call
mov
add
pop
pop
mov
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
push
mov
mov
push
push
push
mov
call
push
mov
mov
call
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
call
mov
mov
add
cmp
ja
jmp
call
mov
mov
mov
push
push
push
call
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
mov
call
push
call
add
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
add
call
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
pop
mov
mov
pop
ret
push
inc
dec
add
dec
add
inc
dec
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
push
or
test
jne
or
mov
mov
call
push
mov
mov
call
add
mov
mov
test
jne
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
mov
mov
add
mov
cmp
je
call
cmp
mov
jne
call
mov
mov
mov
push
push
push
push
call
add
cmp
jne
call
mov
jmp
call
mov
mov
push
push
push
call
add
mov
mov
pop
pop
mov
pop
ret
mov
push
push
push
call
add
test
je
mov
test
jne
lea
call
mov
mov
test
jne
mov
mov
push
mov
lea
push
push
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
call
mov
mov
pop
pop
mov
pop
ret
cmp
jne
cmp
jbe
mov
call
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
call
mov
mov
push
push
call
mov
push
call
push
push
call
xor
add
test
mov
mov
jne
mov
mov
mov
push
lea
push
lea
call
mov
test
je
test
je
push
call
add
mov
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
test
jne
mov
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
mov
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
je
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
mov
push
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
push
lea
call
mov
push
lea
push
mov
call
mov
push
push
lea
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
pop
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
mov
sub
call
test
je
push
call
pop
mov
pop
ret
push
mov
jmp
dec
cmp
je
mov
call
add
cmp
jne
pop
ret
jmp
push
mov
jmp
dec
cmp
je
mov
push
call
add
cmp
jne
pop
ret
jmp
push
mov
push
mov
push
call
push
call
add
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
push
call
push
call
add
mov
mov
jmp
mov
cmp
jne
mov
shl
push
call
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jge
mov
sub
push
lea
push
call
jmp
jle
sub
push
lea
push
call
pop
pop
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
mov
cmp
jl
shl
push
call
mov
mov
shl
push
push
mov
shl
push
push
call
mov
mov
sub
push
lea
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
test
push
mov
jge
call
cmp
jl
push
lea
push
call
mov
push
lea
call
pop
pop
ret
push
mov
mov
push
not
test
mov
push
mov
je
push
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
jmp
call
push
push
mov
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
pop
pop
pop
ret
mov
ret
mov
ret
mov
and
mov
ret
xor
ret
push
mov
push
mov
test
jne
mov
jmp
and
push
push
push
call
test
mov
pop
pop
jne
push
push
call
test
pop
pop
jne
lea
push
push
call
test
pop
pop
jne
mov
jmp
mov
xor
pop
pop
pop
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
xor
pop
ret
mov
and
mov
ret
push
push
push
mov
call
test
pop
pop
je
mov
add
neg
sbb
and
jmp
xor
pop
ret
push
mov
push
add
call
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
call
pop
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
push
call
pop
ret
mov
mov
mov
push
call
ret
mov
mov
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
call
xor
ret
mov
mov
ret
xor
inc
ret
mov
mov
mov
mov
xor
ret
xor
inc
ret
xor
inc
ret
mov
and
mov
ret
push
mov
test
jne
mov
jmp
and
push
mov
cmp
je
mov
mov
call
test
je
mov
mov
push
call
mov
mov
xor
jmp
mov
pop
pop
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jl
cmp
jge
mov
lea
ret
push
push
push
push
call
int3
push
mov
push
push
lea
push
push
call
add
test
jge
push
call
mov
leave
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
mov
push
call
xor
pop
ret
mov
test
jne
mov
jmp
and
mov
test
je
mov
mov
push
call
xor
jmp
mov
ret
mov
test
je
mov
push
call
ret
push
mov
call
xor
cmp
jne
cmp
je
push
push
lea
push
push
push
call
pop
ret
push
mov
push
xor
cmp
jle
cmp
jne
call
cmp
push
jle
lea
push
mov
call
mov
push
push
call
test
pop
pop
je
inc
cmp
jl
xor
pop
pop
pop
ret
xor
inc
jmp
mov
mov
lea
test
je
mov
mov
mov
ret
push
push
push
mov
call
push
call
add
test
je
mov
mov
mov
add
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
mov
jne
mov
push
call
push
call
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
mov
je
mov
lea
push
call
mov
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
call
test
jl
mov
test
je
mov
lea
push
push
call
mov
test
mov
je
mov
push
call
and
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
je
cmp
jne
cmp
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
call
test
jne
inc
mov
mov
imul
lea
cmp
jne
jmp
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
and
push
call
push
call
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
call
mov
and
mov
movzx
and
test
jge
mov
lea
call
mov
lea
call
ret
movsx
cmp
jbe
mov
jmp
test
je
mov
shl
cmp
ja
push
call
test
pop
je
movsx
shl
call
mov
jmp
movsx
shl
push
lea
call
mov
jmp
xor
test
je
movsx
xor
test
jle
mov
sub
dec
shl
add
mov
movsx
inc
cmp
jl
mov
mov
test
je
sub
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
test
jne
lea
push
push
lea
push
movsx
push
movzx
push
push
lea
push
push
call
mov
lea
push
call
jmp
push
mov
call
mov
mov
lea
mov
and
mov
and
push
mov
mov
mov
push
push
call
and
mov
call
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
mov
mov
mov
lea
push
push
push
call
mov
mov
cmp
jne
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
mov
test
je
push
lea
call
push
mov
or
push
call
test
pop
pop
mov
je
mov
test
je
push
and
call
cmp
jne
inc
mov
imul
add
cmp
jne
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
mov
mov
call
imul
push
mov
mov
mov
mov
add
call
mov
test
je
xor
test
setne
mov
dec
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
xor
jmp
push
push
mov
call
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
and
test
je
push
push
call
jmp
xor
test
je
mov
xor
inc
call
ret
push
mov
call
mov
mov
call
test
je
xor
inc
jmp
mov
xor
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
or
cmp
mov
jne
cmp
je
mov
push
call
jmp
cmp
je
mov
push
call
xor
call
ret
push
mov
call
mov
push
lea
call
lea
xor
push
mov
call
mov
cmp
mov
je
mov
cmp
jne
push
call
push
push
lea
push
push
call
mov
push
push
lea
call
mov
push
push
lea
mov
call
mov
push
push
lea
mov
call
mov
push
lea
push
push
push
push
mov
push
call
mov
lea
push
call
lea
push
call
lea
push
call
lea
push
call
push
call
call
ret
push
mov
push
xor
lea
mov
mov
mov
cmp
je
push
push
call
mov
mov
mov
pop
pop
ret
push
mov
call
mov
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
cmp
jle
lea
push
mov
call
mov
mov
add
mov
cmp
je
inc
cmp
jl
or
test
je
mov
push
call
xor
call
ret
or
test
je
mov
push
call
xor
inc
jmp
push
mov
mov
mov
cmp
push
jne
test
jne
xor
inc
jmp
lea
test
jl
cmp
ja
push
push
push
call
add
test
je
mov
mov
push
mov
push
call
inc
xor
inc
pop
pop
ret
xor
jmp
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
push
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
call
mov
xor
test
setne
test
jne
push
call
and
mov
and
push
pop
lea
push
push
push
call
test
mov
jl
and
mov
lea
push
push
call
test
mov
jl
test
je
mov
cmp
je
test
jne
movzx
cmp
jne
push
push
call
pop
movzx
mov
pop
jmp
sub
je
sub
je
dec
je
movzx
jmp
push
jmp
push
jmp
push
pop
test
je
mov
mov
push
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
push
push
push
push
mov
xor
cmp
jne
mov
jmp
mov
lea
push
push
mov
call
cmp
jl
mov
push
xor
cmp
jbe
mov
lea
push
push
push
call
cmp
jl
mov
mov
cmp
je
mov
push
push
call
mov
mov
movzx
inc
cmp
jl
push
mov
push
call
mov
cmp
je
movzx
cmp
jle
mov
jmp
cmp
mov
jle
mov
add
mov
movzx
cmp
mov
jne
mov
mov
mov
or
mov
cmp
jne
mov
push
push
call
pop
mov
mov
pop
inc
movsx
inc
inc
add
cmp
jl
movzx
movzx
sub
je
dec
je
dec
je
dec
jne
push
jmp
xor
jmp
push
jmp
push
pop
mov
mov
mov
mov
mov
push
mov
mov
push
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
test
je
test
je
test
je
push
mov
mov
movs
movs
movs
movs
mov
mov
movs
movs
movs
xor
cmp
movs
mov
mov
mov
je
lea
push
push
mov
mov
push
call
mov
xor
cmp
jl
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
jl
mov
push
lea
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
lea
push
push
push
mov
call
test
jl
mov
cmp
je
push
mov
push
push
call
mov
jmp
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
lea
push
push
call
mov
cmp
jl
mov
lea
push
mov
mov
push
call
mov
cmp
je
xor
cmp
jbe
mov
mov
lea
push
push
push
call
mov
cmp
jl
cmp
je
mov
movzx
inc
cmp
jl
jmp
mov
mov
lea
push
push
push
call
mov
cmp
jl
mov
lea
push
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
cmp
je
push
push
push
push
call
mov
mov
add
push
push
call
mov
cmp
je
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
pop
jmp
mov
mov
pop
xor
pop
call
leave
ret
push
push
push
push
call
ret
mov
push
push
push
call
ret
push
mov
push
and
push
mov
push
push
call
push
mov
push
mov
push
push
lea
push
push
mov
call
test
je
mov
jmp
mov
push
mov
call
mov
lea
push
push
mov
push
call
test
jge
mov
jmp
test
je
mov
mov
imul
mov
call
mov
mov
push
lea
call
mov
mov
mov
call
cmp
je
test
je
xor
cmp
mov
setne
dec
mov
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
mov
test
mov
je
push
lea
push
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
push
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
test
jl
and
and
lea
push
movzx
push
push
movzx
push
lea
push
call
mov
test
mov
jge
or
test
je
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
mov
test
jge
mov
or
test
je
mov
push
call
mov
jmp
lea
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
call
ret
mov
test
jne
mov
jmp
push
push
push
push
push
call
add
ret
push
mov
call
mov
mov
call
mov
xor
lea
mov
mov
mov
call
mov
mov
lea
call
lea
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
call
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
lea
call
lea
call
lea
call
mov
sub
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
sub
call
or
mov
call
call
ret
lea
push
push
push
add
call
ret
push
mov
mov
test
je
mov
push
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
push
push
call
test
pop
pop
je
inc
mov
imul
add
cmp
jne
mov
jmp
imul
mov
mov
mov
lea
push
push
lea
push
mov
push
call
test
jge
xor
jmp
push
lea
push
mov
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
lea
mov
call
test
je
push
xor
cmp
push
jle
push
lea
call
mov
push
push
push
call
push
mov
call
inc
cmp
jl
lea
call
xor
cmp
jle
lea
push
mov
call
mov
add
mov
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
add
push
add
push
push
lea
call
push
mov
call
mov
test
mov
je
mov
call
push
call
pop
inc
cmp
jl
lea
call
pop
pop
pop
leave
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
pop
mov
push
push
push
mov
call
cmp
je
cmp
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
mov
mov
push
push
call
test
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
sub
push
push
push
push
xor
push
mov
call
pop
mov
call
lea
push
push
call
cmp
jne
push
mov
call
push
mov
call
mov
cmp
je
mov
call
cmp
je
mov
lea
push
push
push
call
test
jl
push
lea
call
mov
lea
cmp
jne
push
push
push
push
push
lea
push
push
push
lea
push
mov
call
mov
call
mov
push
push
push
call
test
jge
mov
mov
call
mov
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
push
push
push
push
push
mov
call
pop
pop
xor
pop
inc
pop
add
ret
push
mov
call
mov
and
and
lea
lea
mov
push
mov
call
cmp
je
lea
push
push
push
mov
call
mov
call
mov
or
test
je
mov
push
call
call
ret
mov
push
mov
cmp
jne
call
lea
cmp
je
push
push
call
lea
call
pop
ret
push
mov
call
mov
call
lea
xor
cmp
je
push
push
call
lea
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
mov
mov
push
call
cmp
je
push
push
call
mov
or
cmp
je
mov
push
call
mov
call
call
ret
mov
ret
push
mov
call
mov
mov
cmp
jne
and
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
cmp
je
and
mov
mov
and
lea
push
push
call
push
lea
call
push
mov
mov
call
mov
add
call
push
or
call
push
lea
call
push
mov
call
mov
mov
push
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
mov
mov
mov
lea
push
call
lea
push
call
mov
mov
mov
mov
cmp
mov
je
mov
lea
mov
lea
push
call
mov
mov
cmp
je
cmp
jne
mov
push
mov
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
lea
mov
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
cmp
je
lea
push
sub
mov
lea
movs
movs
mov
movs
movs
sub
mov
lea
movs
movs
movs
push
movs
call
mov
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
cmp
je
mov
cmp
je
mov
cmp
jl
mov
cmp
mov
mov
je
mov
push
call
mov
add
call
mov
cmp
mov
je
mov
push
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
call
ret
push
mov
call
mov
mov
lea
mov
xor
mov
call
cmp
mov
jne
xor
jmp
mov
mov
mov
imul
lea
mov
cmp
je
cmp
jne
mov
push
lea
push
push
mov
mov
call
mov
xor
cmp
je
push
mov
call
test
jne
push
mov
mov
call
pop
mov
mov
cmp
mov
je
mov
neg
lea
sbb
push
and
push
call
mov
mov
jmp
mov
call
mov
ret
mov
mov
mov
test
jne
mov
or
push
call
mov
jmp
lea
push
push
push
push
call
test
mov
jl
lea
push
lea
call
jmp
push
mov
call
jmp
push
pop
cmp
jne
push
mov
call
test
jne
and
push
lea
push
push
mov
mov
call
mov
test
je
and
mov
lea
push
push
push
mov
call
mov
test
je
and
mov
lea
push
push
mov
call
cmp
je
and
push
mov
call
pop
mov
mov
test
mov
je
push
mov
push
neg
lea
sbb
and
push
push
call
jmp
xor
mov
mov
jmp
mov
call
mov
ret
mov
mov
cmp
jne
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
jmp
lea
push
lea
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
or
test
je
mov
push
call
inc
xor
jmp
mov
call
ret
mov
push
mov
cmp
jne
push
call
push
mov
call
pop
ret
mov
mov
mov
mov
jmp
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
ret
push
push
call
mov
xor
cmp
jne
mov
jmp
cmp
push
mov
jne
push
push
call
cmp
pop
pop
mov
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
jne
call
mov
call
mov
call
ret
mov
push
call
pop
mov
test
je
push
call
pop
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
call
cmp
je
xor
jmp
xor
mov
push
call
pop
ret
push
mov
push
and
push
push
lea
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
lea
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
add
cmp
je
test
je
mov
add
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
add
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
or
je
mov
mov
dec
jne
mov
mov
jmp
mov
mov
dec
je
push
push
lea
lea
cmp
jbe
mov
rep
pop
pop
sub
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
push
push
push
push
push
call
pop
pop
cmp
je
lea
push
call
or
je
mov
cmp
jne
mov
or
je
push
call
jmp
mov
push
push
call
add
push
mov
call
mov
mov
mov
mov
mov
cmp
adc
mov
add
jmp
mov
pop
ret
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
je
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
cmp
setge
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
je
mov
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
mov
cmp
je
dec
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
inc
cmp
jne
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
mov
cmp
setne
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
mov
push
call
pop
pop
mov
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
xor
mov
cmp
sete
dec
call
ret
mov
push
call
pop
ret
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fsin
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fsin
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fcos
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fcos
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fptan
fstsw
sahf
jp
fstp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fptan
fstp
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
fld
je
fchs
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fxch
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
je
fldpi
jmp
fldz
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fld1
fpatan
cmp
jne
mov
lea
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
test
je
fchs
jmp
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
je
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpnlepd
cmp
jl
cmp
jg
andpd
addsd
movq
fld
ret
fld
ret
cmpnlepd
andpd
movq
fld
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
jne
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpltpd
cmp
jl
cmp
jg
andpd
subsd
movq
fld
ret
fldz
ret
cmpltpd
orpd
andpd
movq
fld
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
fxch
cmp
je
fprem
jmp
call
fstsw
fwait
sahf
jp
fstp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
movapd
movapd
psllq
psrlq
psrlq
andpd
movd
psubd
mov
psrlq
psllq
movd
cmp
jl
cmp
jg
movq
subsd
orpd
movq
fld
ret
movq
fld
ret
cmp
movq
je
movq
cmp
fldz
jl
fchs
ret
movapd
addsd
movq
andpd
cmpneqpd
pextrw
andpd
orpd
mov
cmp
jne
movq
fld
ret
sub
movlpd
mov
mov
add
mov
add
mov
sub
mov
call
fld
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
fst
call
call
add
ret
lea
call
push
fstcw
mov
je
cmp
je
call
test
jne
fsqrt
cmp
jne
mov
lea
jmp
test
jne
test
jne
cmp
jne
jmp
call
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fxch
fstp
fst
mov
call
add
ret
lea
call
mov
push
fstcw
cmp
je
call
and
lea
cmp
je
call
je
test
je
mov
and
jne
fyl2x
call
cmp
jne
fchs
cmp
jne
lea
mov
jmp
cmp
jne
lea
mov
call
pop
ret
lea
call
test
jne
inc
jmp
faddp
mov
jmp
test
jne
faddp
mov
jmp
xor
jmp
xor
and
or
jne
lea
call
mov
mov
and
and
cmp
jne
or
jne
test
jne
sub
mov
push
sub
fstp
fstp
fsave
call
add
pop
frstor
fld
add
test
je
mov
jmp
mov
and
or
jne
fstp
mov
and
or
je
call
mov
shr
test
je
fld
test
je
fchs
mov
jmp
fldz
test
je
fchs
jmp
fstp
fld1
jmp
fld
call
fchs
test
jne
fstp
fstp
fld
mov
jmp
fld
frndint
fcomp
mov
fstsw
sahf
jne
fmul
inc
fld
frndint
fcompp
fstsw
sahf
jne
inc
ret
fstp
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldln2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldlg2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
fldz
add
jmp
push
mov
push
push
call
fld
mov
mov
and
cmp
pop
pop
jne
or
push
push
fstp
call
cmp
pop
pop
jle
cmp
jle
cmp
jne
push
fld
push
push
fstp
push
call
add
jmp
fld
jmp
fld
fadd
push
sub
fstp
fld
fstp
push
push
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
fld
add
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
push
call
mov
mov
and
cmp
pop
pop
jne
fld
push
push
fstp
call
test
pop
pop
jle
cmp
jle
cmp
jne
fild
push
sub
fstp
fld
fstp
push
call
add
jmp
push
push
call
pop
pop
jmp
fld
push
fadd
sub
fstp
fild
fstp
fld
fstp
push
push
call
add
jmp
fldz
fcomp
fnstsw
test
jnp
fld
lea
push
push
push
fstp
call
mov
mov
add
test
jge
mov
sub
cmp
jl
jmp
mov
sub
cmp
jg
add
cmp
jle
push
sub
fstp
fld
fstp
call
fstp
fild
fstp
push
push
fld
fstp
push
push
jmp
cmp
jle
add
push
push
push
fstp
call
add
push
sub
fstp
fild
fstp
jmp
cmp
jge
fmul
push
sub
fstp
fild
fstp
fld
fstp
push
push
jmp
cmp
jge
add
push
push
push
fstp
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
add
fld
pop
pop
leave
ret
call
mov
mov
ret
call
mov
imul
add
mov
mov
shr
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
add
xor
je
sub
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
add
xor
je
sub
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
je
push
mov
mov
lea
push
push
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
cmp
jl
jg
cmp
jb
mov
test
jl
mov
jg
test
jb
sub
sbb
mov
mov
fild
pop
ret
call
fldz
mov
pop
ret
push
mov
sub
push
push
xor
push
lea
push
push
mov
mov
xor
call
add
cmp
je
cmp
jne
push
push
push
push
push
call
add
mov
cmp
mov
mov
jne
cmp
je
push
push
call
mov
neg
pop
sbb
pop
inc
jmp
cmp
push
mov
mov
mov
je
call
mov
call
mov
push
lea
push
push
push
call
add
mov
call
cmp
je
mov
jmp
cmp
je
call
cmp
jne
call
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
test
mov
jne
mov
push
lea
push
push
push
call
add
mov
pop
push
call
pop
pop
mov
pop
leave
ret
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
mov
mov
push
push
push
xor
xor
sub
je
dec
je
dec
jne
mov
jmp
mov
push
pop
jmp
mov
push
jmp
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
mov
cmp
je
cmp
je
mov
inc
cmp
jne
mov
jmp
mov
inc
mov
sub
push
add
push
push
call
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
push
push
call
mov
push
xor
inc
push
push
call
add
inc
cmp
jb
or
jmp
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
sub
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
xor
mov
call
mov
mov
push
call
pop
test
jne
mov
mov
call
mov
jmp
push
call
pop
mov
cmp
jne
mov
push
jmp
mov
push
pop
cmp
jne
push
call
pop
jmp
push
push
mov
call
pop
test
pop
jne
push
push
call
pop
pop
test
je
mov
cmp
jne
call
mov
cmp
jne
mov
jmp
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
push
push
jmp
cmp
je
push
call
pop
cmp
jb
mov
cmp
je
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
call
mov
mov
mov
mov
call
cmp
je
mov
jmp
xor
push
call
pop
ret
mov
mov
mov
call
ret
push
mov
push
and
lea
push
push
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
jmp
mov
push
call
pop
test
jne
call
mov
jmp
push
call
pop
mov
mov
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
inc
push
mov
sub
push
push
call
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
jmp
push
push
mov
call
pop
pop
test
jne
call
mov
mov
cmp
jne
mov
jmp
mov
call
mov
mov
call
mov
push
push
push
push
lea
push
call
add
cmp
jne
push
push
mov
call
pop
pop
test
je
call
cmp
jne
call
mov
mov
cmp
je
push
call
pop
mov
cmp
jne
push
call
pop
jmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
cmp
je
call
mov
mov
call
ret
xor
mov
cmp
je
push
call
pop
push
call
pop
ret
push
mov
push
and
lea
push
push
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
sub
mov
sbb
xor
push
add
push
adc
push
push
call
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
mov
xor
add
adc
mov
mov
xor
pop
leave
ret
mov
mov
push
mov
lea
jmp
cmp
je
add
cmp
jb
cmp
pop
jb
test
jne
lea
cmp
jb
cmp
jae
push
push
push
call
add
test
je
mov
inc
mov
lea
ret
xor
ret
push
push
call
xor
xor
mov
mov
mov
mov
mov
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
jne
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
or
push
push
lea
push
call
add
cmp
je
xor
inc
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
push
call
pop
test
jne
push
call
push
call
pop
pop
jmp
push
call
pop
mov
mov
mov
call
mov
lea
mov
push
push
push
lea
push
push
mov
sar
and
imul
mov
push
push
call
test
je
push
call
mov
mov
lea
push
mov
push
call
add
mov
cmp
je
xor
call
mov
cmp
je
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
jne
mov
cmp
je
mov
jmp
mov
lea
push
call
pop
test
mov
jne
mov
push
pop
push
push
lea
push
call
add
mov
mov
mov
cmp
mov
je
mov
mov
cmp
mov
je
mov
mov
mov
mov
push
call
mov
push
call
lea
mov
push
call
lea
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
call
mov
mov
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
jmp
mov
push
mov
push
call
pop
pop
mov
mov
cmp
jne
push
call
push
call
push
call
add
call
mov
mov
jmp
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
je
push
call
push
call
push
call
push
call
add
jmp
mov
push
push
push
call
add
mov
cmp
je
cmp
je
push
call
pop
lea
mov
mov
cmp
jne
push
push
call
pop
pop
cmp
jmp
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
call
push
mov
call
pop
pop
mov
add
mov
cmp
jae
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
push
call
push
call
pop
pop
push
call
push
call
pop
pop
push
mov
call
push
call
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
jmp
mov
push
call
pop
mov
mov
mov
mov
shl
cmp
je
push
call
pop
mov
shl
cmp
je
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
test
je
push
call
pop
mov
call
mov
cmp
jne
call
mov
jmp
push
call
call
mov
call
mov
push
push
lea
push
call
add
cmp
jne
call
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
push
push
push
call
add
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
lea
push
push
push
push
push
call
add
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
je
cmp
jne
mov
lea
cmp
jbe
jmp
mov
and
mov
push
call
pop
mov
push
call
push
call
pop
pop
and
mov
test
je
or
lea
push
pop
jmp
mov
cmp
jne
push
call
pop
cmp
jne
inc
or
jmp
or
jmp
or
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
push
mov
push
push
push
lea
mov
call
mov
test
je
mov
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
fldz
jmp
mov
cmp
jle
lea
push
movzx
push
push
call
add
jmp
movzx
mov
movzx
and
test
je
inc
jmp
lea
push
push
push
push
call
pop
push
lea
push
push
call
add
test
mov
je
mov
add
mov
mov
test
je
test
fldz
fstp
je
mov
jmp
test
je
cmp
fld
jne
fchs
jmp
test
je
fldz
fcom
fnstsw
test
jp
fstp
call
mov
jmp
fstp
fld
fstp
cmp
je
mov
and
fld
pop
pop
pop
leave
ret
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
push
test
push
je
mov
add
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
jne
sub
jmp
sub
jmp
sub
jmp
sub
mov
test
jne
mov
shr
jne
jmp
mov
add
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
mov
pop
pop
pop
ret
mov
xor
mov
mov
pop
pop
pop
ret
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
mov
mov
cmp
jne
push
push
call
pop
pop
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
jmp
add
cmp
je
mov
and
pop
leave
ret
push
push
push
call
add
ret
mov
ret
mov
ret
push
push
call
and
mov
mov
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
and
mov
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
mulsd
movlpd
fld
add
ret
movlpd
mulsd
subsd
mulsd
movlpd
fld
add
ret
jmp
nop
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fwait
mov
shl
sar
rol
mov
and
xlat
movsx
and
mov
add
add
jmp
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fxch
mov
fxam
fstsw
fxch
mov
shl
sar
rol
mov
and
xlat
mov
shl
sar
rol
mov
and
xlat
shl
shl
or
movsx
and
mov
add
add
jmp
call
fxch
fstp
ret
call
jmp
fstp
fstp
fldz
ret
fstp
fstp
fld1
ret
fstp
fld
test
je
mov
ret
mov
fadd
ret
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fld
test
je
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fstp
fld
cmp
jg
mov
or
ret
or
je
fchs
ret
int3
int3
int3
int3
int3
int3
fld
frndint
fsub
fxch
fchs
f2xm1
fld1
faddp
fscale
fstp
ret
mov
and
or
mov
fldcw
ret
test
je
mov
ret
fadd
mov
ret
mov
and
cmp
je
fld
ret
mov
sub
or
mov
mov
mov
shld
shl
mov
mov
fld
add
test
mov
ret
mov
and
cmp
je
ret
mov
ret
cmp
je
fldcw
pop
ret
mov
cmp
je
and
je
fstsw
and
je
mov
call
pop
ret
fldcw
pop
ret
sub
fst
mov
add
and
jmp
sub
fst
mov
add
and
je
cmp
je
mov
cmp
je
and
jne
fstsw
and
je
mov
cmp
je
call
pop
ret
call
pop
ret
fldcw
pop
ret
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jae
fmul
jmp
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jbe
fmul
jmp
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
jmp
push
mov
add
mov
fstp
mov
mov
mov
mov
mov
lea
lea
push
push
push
call
add
fld
cmp
je
fldcw
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
or
je
call
fsubrp
jmp
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
call
or
je
fld
call
fxch
call
fsubrp
fdivp
ret
mov
call
or
je
call
fld1
fchs
fxch
fscale
jmp
fstp
fld
jmp
fstp
fld
ret
ret
call
jmp
jmp
mov
call
jmp
fldl2e
fmulp
xor
call
not
test
je
call
fxch
fstp
test
jne
not
fld1
faddp
fscale
jmp
call
faddp
or
jne
fld1
fadd
faddp
ret
fld
fld1
or
jne
fadd
fchs
fxch
fdivp
ret
int3
int3
int3
int3
push
mov
add
push
fstcw
fwait
cmp
je
call
or
call
pop
leave
ret
fxch
fst
fxch
fst
jmp
push
mov
add
push
fstcw
cmp
je
call
or
and
call
pop
leave
ret
fst
jmp
push
mov
add
push
push
push
call
add
push
push
call
add
fstcw
or
mov
call
call
pop
leave
ret
and
cmp
jne
fst
mov
or
je
cmp
je
cmp
je
or
je
movsx
mov
jmp
mov
and
jne
fstsw
and
je
mov
jmp
fldcw
fwait
ret
mov
and
or
je
cmp
je
jmp
mov
and
cmp
je
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jae
fmul
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jbe
fmul
push
push
mov
inc
mov
test
jne
cld
lea
lea
movs
movs
cmp
je
lea
lea
movs
movs
fstp
lea
lea
push
push
mov
mov
movsx
push
call
add
pop
pop
fld
jmp
push
mov
add
push
push
push
call
add
fstcw
and
call
call
pop
leave
ret
push
mov
add
push
mov
mov
and
cmp
jne
or
mov
mov
mov
shld
mov
mov
fld
jmp
fld
pop
leave
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
pextrw
and
pinsrw
sub
movlpd
subsd
movlpd
fld
add
ret
jmp
lea
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
unpcklpd
movapd
mulpd
cvtsd2si
movapd
addpd
movapd
subpd
movlpd
add
movapd
mulpd
and
mulsd
mov
mulpd
shl
subpd
mulpd
add
shl
add
addsd
movapd
subpd
movlpd
shl
lea
andpd
movapd
add
subpd
unpckhpd
divsd
subpd
movapd
subsd
mulpd
subpd
movapd
mulpd
movapd
mulpd
addsd
movapd
mulpd
addpd
addpd
mulpd
addpd
addpd
movapd
mulpd
mulpd
addpd
movapd
mulpd
addpd
movapd
mulpd
mulsd
mulpd
mulpd
movsd
addpd
movsd
mulsd
unpckhpd
addsd
unpckhpd
addsd
subsd
addsd
movsd
movlpd
unpckhpd
addsd
mulsd
addsd
addsd
addsd
movlpd
mulsd
movlpd
andpd
mulsd
mulsd
subsd
subsd
subsd
mulsd
movsd
subsd
addsd
subsd
addsd
subsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
movsd
mulsd
movlpd
mulsd
addsd
mulsd
movlpd
fld
add
ret
jmp
mov
lea
add
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
repnz
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
fimul
add
add
add
add
data16
add
jb
add
add
add
outs
add
je
ja
popa
add
add
add
popa
jo
je
push
outs
push
je
add
add
adc
add
add
(bad)
inc
add
add
add
add
dec
add
lea
repnz
loopne
dec
add
inc
add
je
dec
imul
push
dec
add
add
(bad)
inc
add
add
add
add
fimul
lock
inc
add
sbb
jns
gs
jb
popa
jns
add
fisttp
das
xchg
inc
add
xchg
inc
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
retf
inc
add
leave
inc
add
inc
add
inc
add
retf
inc
dec
ins
gs
imul
inc
js
gs
imul
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
(bad)
fwait
inc
add
inc
add
dec
add
xchg
inc
add
pushf
inc
add
sbb
inc
add
inc
add
sbb
shl
add
jg
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
cmps
inc
add
loopne
add
movs
inc
add
inc
add
movs
inc
add
cmps
inc
add
inc
add
imul
inc
add
add
add
add
je
and
popa
add
add
add
bound
push
add
je
jae
add
push
add
arpl
push
add
js
je
and
inc
add
jb
ins
add
je
add
add
inc
add
ins
add
dec
add
ins
add
push
add
add
imul
dec
add
ins
add
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
add
arpl
jb
imul
outs
add
add
add
dec
add
push
add
je
and
inc
add
jae
arpl
jb
imul
outs
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
ins
add
add
add
outs
add
jb
arpl
add
add
add
ins
add
add
add
add
add
bound
push
add
je
add
dec
add
push
add
je
dec
add
outs
add
add
add
dec
add
outs
add
jb
dec
add
outs
add
add
dec
add
je
imul
add
add
inc
dec
outs
jne
add
cmp
add
add
add
inc
add
add
add
add
inc
add
inc
add
sbb
inc
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
gs
add
add
loope
add
jg
add
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
mov
add
mov
add
inc
add
loop
add
add
inc
add
inc
add
mov
add
inc
add
imul
imul
add
add
inc
add
add
add
add
add
loop
add
mov
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
mov
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
mov
inc
add
mov
add
inc
add
add
add
add
add
jbe
add
ins
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
inc
add
add
add
add
add
mov
add
push
add
add
mov
add
adc
add
dec
mov
add
push
add
add
push
add
add
add
and
add
add
add
dec
add
dec
add
add
add
add
outs
add
add
je
popa
add
ins
add
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jbe
add
bound
pop
add
add
add
add
add
je
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jae
add
jbe
add
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
dec
add
add
add
jb
outs
add
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
outs
add
jb
outs
add
dec
add
outs
add
add
jb
xor
xor
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
add
jb
jbe
add
xor
xor
add
and
add
dec
add
dec
add
add
add
add
bound
pop
add
add
add
add
add
je
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jb
bound
pop
add
add
add
add
jo
add
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jae
add
je
popa
add
ins
add
add
add
add
inc
add
add
inc
add
add
add
add
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
jne
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
ins
add
add
outs
add
add
and
add
add
add
dec
add
dec
add
add
add
imul
push
add
add
add
add
xor
xor
add
add
inc
add
add
inc
add
add
add
add
push
add
outs
add
push
add
jb
jbe
add
xor
xor
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
push
add
je
add
xor
add
add
and
add
add
dec
add
push
add
je
add
xor
add
add
inc
add
add
inc
add
add
add
add
imul
popa
add
ins
add
inc
add
add
inc
add
add
add
add
data16
jne
ins
add
add
je
add
jae
imul
add
and
add
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
jno
add
dec
add
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
add
add
ins
dec
add
outs
dec
add
jo
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
jno
add
dec
add
jno
add
dec
add
dec
add
jb
add
jb
add
jb
add
jno
add
add
jno
add
add
dec
add
jb
add
jb
add
jb
add
jecxz
add
rol
dec
ins
gs
jne
jns
imul
inc
dec
ins
gs
imul
push
add
add
inc
add
add
add
dec
add
dec
add
inc
add
add
add
add
add
inc
add
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
rol
mov
inc
add
inc
add
inc
add
add
jae
je
add
add
add
xor
add
add
pop
add
add
inc
add
add
add
add
add
inc
add
pop
das
mov
rcl
xchg
adc
add
push
or
cmp
rcl
cmp
mov
in
add
in
add
rol
push
outs
imul
outs
and
arpl
je
outs
outs
add
add
ins
loopne
add
add
add
add
stos
mov
push
stos
(bad)
dec
int3
and
movs
in
dec
pop
jg
ins
call
jmp
ja
lock
lods
push
lods
push
sub
int
iret
adc
or
or
retf
push
mov
pop
xor
pushf
in
out
ret
fnstenv
xchg
xor
or
and
push
aas
dec
push
mov
and
clc
sbb
cmp
jmp
xchg
xor
add
sub
add
mov
(bad)
pop
and
or
lods
shl
leave
out
sub
dec
enter
fnstsw
pushf
cmps
mov
sbb
in
int
pop
enter
(bad)
fadd
add
dec
cmps
lea
mov
clc
sbb
lods
mov
mov
fs
mov
icebp
lea
sbb
push
int
ficomp
jl
push
popf
jns
mov
and
add
call
leave
call
int
pop
int3
xchg
xchg
test
add
retf
mov
dec
scas
enter
int
int3
aam
sar
pusha
add
call
pop
int3
movs
test
mov
jl
pop
int
in
jns
dec
fsubr
jb
into
mov
jl
adc
and
mov
out
cmp
or
jle
lods
stos
pop
sub
cmps
pop
inc
cmp
inc
jl
ins
adc
dec
lahf
sub
add
in
in
or
cmp
enter
stc
sub
mov
cmp
pop
(bad)
mov
sub
out
(bad)
out
jg
cmp
stos
call
lock
sahf
pop
or
cmp
sbb
adc
cmp
dec
hlt
popf
lods
sub
dec
(bad)
fdivr
sbb
mov
or
adc
cld
dec
movs
or
dec
pop
aam
popa
xchg
add
and
mov
addr16
pop
aad
mov
adc
cmp
les
xchg
jno
cld
mov
stos
sbb
and
ins
in
lea
mov
in
stos
int3
jmp
sbb
ss
neg
rol
jmp
pop
cdq
jnp
sbb
mov
jbe
pushf
das
ror
mov
and
jl
std
cmp
ror
loop
popf
dec
frstor
and
imul
or
js
jb
(bad)
js
or
push
cld
rol
sub
pusha
int
stos
sub
(bad)
fwait
jecxz
jl
ficomp
mov
nop
(bad)
aas
(bad)
pushf
jns
dec
pop
fdivr
adc
mov
in
cs
mov
jmp
in
jg
int3
cmp
dec
sub
pop
test
mov
cld
push
(bad)
pushf
push
sbb
mov
jns
outs
ins
jno
pop
imul
push
cmp
xchg
jecxz
(bad)
push
les
es
pushf
sbb
push
cld
das
fcmovb
pop
js
imul
int
add
test
pop
stos
mov
jg
in
xor
pop
sub
adc
dec
push
sbb
inc
jl
test
les
cwde
mov
fnstsw
rcr
test
(bad)
repz
xlat
push
mov
mov
test
pop
enter
daa
sub
dec
ror
js
sbb
ins
jge
stc
dec
mov
lods
xlat
or
lods
mov
lock
xor
bound
int3
(bad)
mov
inc
(bad)
cmps
dec
adc
mov
add
int3
imul
jns
pop
add
pop
sub
loopne
cli
jecxz
inc
cwde
ins
clc
bound
jne
sahf
push
in
add
iret
mov
mov
jns
lea
dec
push
movaps
jecxz
pushf
(bad)
ss
jge
jg
cmp
das
test
sbb
fmul
or
pop
jae
into
loop
fbstp
(bad)
jns
mov
cmp
fsubr
scas
inc
lds
les
mov
mov
sub
call
dec
lods
ins
adc
fcomp
sbb
inc
aam
mov
sahf
push
enter
stc
sbb
lds
inc
idiv
popa
xor
call
pop
jl
cmp
js
add
lods
jmp
pop
dec
(bad)
adc
clc
and
in
push
sbb
sub
(bad)
aam
pop
sub
sub
sahf
sub
add
or
jge
jnp
fucomip
stos
cmps
mov
and
test
xor
loop
push
jle
sub
cwde
push
sub
pop
cmp
in
js
cmc
dec
mov
fld
sbb
aam
pusha
ja
enter
jns
cwde
js
rcl
mov
inc
mov
xchg
sbb
mov
int3
mov
jg
jno
xchg
popf
jno
out
or
ss
dec
sub
arpl
and
dec
scas
add
rol
scas
jb
mov
dec
pop
and
es
ret
jns
push
jmp
test
jp
mov
nop
dec
icebp
out
fld
dec
sub
cmps
out
mov
aad
sbb
cli
in
aad
jmp
pushf
cmps
dec
shl
test
jl
cwde
dec
les
jmp
hlt
clc
or
sti
shr
imul
stc
xor
cmp
xchg
cmp
scas
jp
test
fistp
(bad)
cwde
mov
je
push
add
js
gs
push
int
test
in
mov
mov
test
mov
mov
test
lahf
(bad)
pop
jne
(bad)
xor
pop
push
(bad)
popa
add
je
stos
jno
dec
jl
leave
inc
pop
call
mov
xchg
jp
idiv
mov
test
cmp
enter
lahf
sbb
enter
sahf
retf
cld
cmp
fisubr
push
mov
adc
mov
cmps
mov
xchg
mov
leave
inc
test
push
ins
lods
xchg
mov
and
int3
pop
cli
push
cli
call
int3
and
mov
jne
fs
ja
cmp
aam
mov
mov
in
cmp
dec
fstp
pop
pusha
and
outs
das
outs
movs
xchg
fld
mov
ror
push
sbb
popf
fdiv
ins
fsubr
mov
mov
mov
jmp
adc
push
dec
jo
sbb
popf
mov
jmp
(bad)
sti
mov
js
dec
add
or
rol
mov
arpl
cmp
retf
sar
dec
cwde
add
test
test
add
mov
rol
inc
mov
test
in
cmp
xor
outs
push
pop
mov
test
movs
jns
stc
call
pop
in
sub
aas
mov
cmp
jge
inc
clc
fstp
sub
retf
sbb
mov
nop
jmp
outs
aam
xchg
fdivr
cmp
retf
pop
(bad)
mov
sub
push
outs
inc
mov
repz
sub
in
mov
push
mov
adc
fs
jo
push
cdq
pop
inc
sub
dec
dec
pop
cmps
mov
in
or
cmp
add
test
std
mov
sahf
add
js
into
adc
add
sysexit
iret
or
and
sbb
or
xchg
in
xchg
fwait
mov
sub
dec
xlat
pop
mov
jg
sub
enter
dec
mov
jl
icebp
lds
outs
pop
adc
jl
mov
or
pushf
push
leave
mov
xor
sub
jl
ins
pop
lds
dec
enter
xor
jne
or
enter
or
cmp
xor
sub
or
imul
iret
xchg
or
xor
test
call
dec
stc
ja
or
(bad)
pushf
mov
pop
inc
pop
(bad)
add
or
jo
sbb
or
sti
cs
mov
pop
loopne
sbb
fdiv
rol
sub
cmp
pop
dec
or
jns
and
add
mov
cmp
mov
stos
cmp
mov
call
loopne
mov
mov
retf
sbb
mov
sub
cmc
push
fcmovu
mov
cmps
mov
jmp
leave
cmps
xor
cld
pop
in
bound
pop
jne
lea
imul
(bad)
(bad)
clc
sub
int3
in
jl
call
sbb
icebp
mov
inc
push
mov
je
jl
jg
pop
enter
add
popf
adc
pop
out
sbb
or
arpl
adc
frstor
popf
sbb
clc
xlat
fmul
rcr
jge
jl
dec
mov
aad
out
pop
mov
mov
aam
and
sub
jnp
rol
imul
enter
shl
js
xchg
mov
hlt
mov
popf
jae
cmp
add
or
xchg
loopne
clc
mov
enter
mov
neg
mov
or
sbb
jnp
and
scas
cmps
pop
xchg
jae
movs
sbb
pop
scas
sub
mov
(bad)
pop
movs
cld
cdq
test
rcr
sub
pop
aas
jle
sbb
imul
int
or
in
jle
sub
scas
and
xor
cmp
int
stos
or
jno
mov
sub
jle
inc
push
jbe
or
inc
je
adc
int3
jp
pop
sub
outs
hlt
(bad)
sub
cli
leave
ret
jne
bound
dec
and
sti
rol
sub
sub
loopne
mov
push
dec
ds
xor
dec
pop
pop
pop
ja
fs
scas
dec
jmp
sub
mov
or
mov
sbb
pop
or
xor
jne
hlt
cmps
fld
fstp
push
dec
sahf
movs
push
jae
cmp
pop
fucomi
pop
mov
(bad)
outs
fwait
push
jecxz
fnstcw
jmp
repz
mov
add
fistp
repnz
cmp
cdq
mov
dec
fwait
lods
(bad)
jae
jge
test
in
and
scas
test
dec
je
int
test
aaa
sub
dec
popf
fst
jmp
stos
and
pop
icebp
jae
clc
pop
mov
fst
add
in
jge
loopne
das
mov
imul
fwait
popf
jge
fiadd
imul
add
cwde
retf
jbe
mov
inc
std
xor
sbb
repz
and
mov
mov
jg
or
fidivr
jmp
fidiv
outs
ss
xor
or
cmc
jne
mov
ror
or
mov
dec
jb
bound
sbb
adc
mov
mov
sbb
adc
js
imul
fs
mov
jmp
add
sbb
stc
mov
cmp
xor
mov
xchg
and
push
and
mov
jl
jo
fs
adc
push
fisttp
dec
sti
cmp
add
cmp
fld
enter
adc
xchg
sub
sbb
pop
imul
inc
sub
push
fs
dec
out
jo
pop
xor
ds
add
loop
jns
shl
sub
pushf
scas
mov
out
dec
in
stos
fsub
pop
jle
sbb
ds
and
add
lahf
into
cmps
or
hlt
sbb
(bad)
fistp
aam
or
sbb
jae
inc
xor
or
cmp
adc
and
mov
(bad)
clc
pop
xor
sbb
movs
pop
shl
movs
sbb
retf
pop
imul
jle
ja
xor
test
mov
lea
cmps
test
sub
fld
or
push
fnstcw
clc
sub
push
je
pop
push
ret
cmp
es
cmc
data16
cmp
sbb
lods
jp
arpl
jmp
cdq
pop
xchg
pusha
(bad)
pop
rol
out
push
enter
call
mov
test
push
mov
jae
fidivr
or
or
cmp
mov
mov
or
add
jmp
mov
pusha
pop
pop
jle
xor
fidivr
popf
pop
mov
repz
pusha
test
sbb
retf
iret
mov
sub
inc
shr
retf
pop
ret
sub
mov
inc
or
(bad)
push
pop
ins
inc
mov
xor
cmp
jg
xor
loop
xchg
test
jg
ficomp
add
neg
dec
lds
inc
cmps
add
enter
jecxz
xor
push
or
fstp
jge
pop
fidiv
dec
adc
push
ret
sahf
jns
imul
adc
in
fwait
jnp
lods
adc
xor
or
push
aam
dec
mov
mov
cmp
les
in
sahf
sbb
or
ficomp
xor
mov
mov
push
call
adc
pop
jl
movs
push
xchg
(bad)
movs
dec
or
jmp
lods
loopne
mov
ror
inc
cmp
cmps
retf
cmp
mov
sbb
xchg
(bad)
sub
hlt
inc
cs
out
fdiv
mov
aaa
scas
dec
mov
test
inc
out
outs
clc
jb
sub
jns
jae
or
cwde
cld
dec
mov
nop
(bad)
jge
cmp
sub
das
cmp
sbb
addr16
add
repz
add
outs
test
xor
and
fdivr
sub
retf
popf
cld
mov
nop
pop
test
sbb
int3
stos
adc
cmp
int3
aaa
jl
xor
xchg
adc
cmp
push
sbb
adc
fcom
rol
and
mov
add
dec
fcmovnu
jg
lahf
lds
pop
or
dec
jns
sub
cdq
int
xor
sbb
je
lds
push
adc
xchg
and
je
sub
std
test
cli
cdq
fstp
out
imul
ins
fnstsw
pop
aad
xchg
call
pop
jge
xor
cmp
sti
jp
fstp
fndisi(8087
ins
jp
sbb
push
loop
int3
cmp
add
cdq
cmps
retf
push
sbb
pop
mov
js
cmp
es
imul
pop
pop
fisttp
gs
dec
ficomp
jbe
pushf
movs
add
cld
inc
mov
leave
push
xlat
mov
lea
mov
out
jbe
pushf
add
cdq
mov
gs
shl
mov
stc
xor
std
jge
movs
inc
pop
sub
std
enter
outs
pushf
test
outs
jl
inc
stos
aas
cmp
call
stc
ins
cs
cld
stc
xchg
pop
xchg
loopne
int3
(bad)
xor
pop
test
add
inc
(bad)
sub
(bad)
push
sub
mov
push
fidivr
mul
pop
fst
pop
xchg
mov
or
iret
sub
mov
cmp
jp
shl
jnp
mov
sbb
enter
dec
(bad)
movs
call
adc
icebp
imul
inc
shr
sbb
outs
mov
das
(bad)
fcom
aam
ret
jb
pop
sti
cmp
inc
mov
(bad)
ror
add
lea
fs
aaa
add
dec
shl
sub
jne
add
mov
mov
jl
jge
(bad)
pop
dec
push
cmp
mov
pop
and
imul
jns
cmp
lds
pop
dec
sub
sbb
out
(bad)
mov
xchg
js
push
(bad)
icebp
pushf
cmp
hlt
retf
pop
cli
pop
out
outs
aas
popa
repnz
dec
adc
sbb
in
push
and
pusha
jg
cmp
stos
mov
add
or
lods
dec
(bad)
mov
cmp
mov
add
fdivr
pop
adc
push
xor
cmp
sub
dec
push
dec
and
cmp
sub
jle
imul
into
push
nop
sub
sub
adc
and
mov
test
jb
in
inc
mov
in
cmps
jmp
mov
lea
shr
cmps
dec
sbb
loope
or
push
dec
(bad)
(bad)
fistp
mov
sbb
sub
and
or
add
pop
hlt
jns
jne
mov
adc
fs
or
pop
iret
push
jno
or
mov
test
dec
xlat
call
dec
lds
cmps
fs
pushf
xchg
fldcw
dec
jo
jg
sub
sub
bound
cmp
or
in
pop
(bad)
int
pop
leave
dec
and
loopne
cmp
dec
dec
pop
retf
mov
in
adc
dec
pop
jnp
push
int3
or
ins
mov
inc
mov
adc
pop
xchg
std
jbe
je
adc
push
lods
adc
mov
add
pop
cmp
movs
test
rcr
test
pop
jae
ja
shl
pop
cmc
mov
sub
lock
inc
aad
jg
dec
retf
(bad)
jge
movs
mov
cmc
jmp
jl
loopne
dec
xchg
stos
je
popfw
mov
mov
mov
in
sbb
dec
jge
enter
ds
nop
or
dec
leave
dec
jb
int3
or
add
loopne
lock
hlt
vmread
fdivr
mov
aaa
loope
in
sbb
inc
fs
in
add
fidivr
daa
call
mov
pushf
jmp
in
out
jns
ficomp
cwde
sbb
mov
popf
mov
mov
dec
mov
cmp
xor
and
ret
xor
inc
aam
mov
es
aaa
xchg
outs
iret
popa
loop
lea
jle
cmp
mov
and
std
cli
sbb
cmp
loope
clc
or
ss
push
fcmovnbe
clc
dec
cdq
cmp
data16
cmp
test
fild
push
xchg
pop
jnp
in
inc
ret
push
(bad)
into
int3
inc
js
popf
ds
lea
ror
movsx
rcl
jmp
aas
dec
into
sub
retf
ins
jns
inc
pusha
mov
stc
add
and
or
pop
sbb
hlt
enter
pop
and
in
jmp
xor
cs
cmc
retf
rcl
mov
or
sbb
adc
sub
and
sub
into
or
mov
mov
cmp
cmp
call
cmp
call
xor
ins
hlt
shr
stc
pop
lods
xor
mov
mov
push
ret
jl
push
mov
inc
je
shl
adc
mov
mov
pop
mov
xor
stos
sbb
je
out
or
dec
pop
cmp
jl
fs
xchg
jmp
or
or
adc
mov
popf
gs
inc
out
clc
cmp
leave
lahf
push
jle
jmp
out
dec
inc
in
or
int
and
ficomp
inc
call
je
cmp
popf
lea
in
cmc
out
imul
nop
dec
jae
push
hlt
cdq
push
lods
xchg
fstp
out
sub
cmp
clc
jg
retf
adc
jo
sub
js
dec
std
or
mov
lods
imul
fidivr
(bad)
sbb
dec
je
daa
sub
dec
out
sbb
cwde
ffreep
or
or
cmp
xchg
cmp
add
mov
jns
imul
es
push
mov
clc
push
jns
sbb
adc
mov
imul
cwde
ja
sub
test
js
loope
fucomp
sahf
jns
sub
jno
(bad)
test
lods
push
out
add
imul
jge
sub
cmp
sub
xor
jg
dec
cdq
mov
mov
test
and
sahf
fwait
jns
dec
sbb
popa
cwde
popf
add
dec
xor
les
mov
mov
or
jae
int3
add
fst
push
mov
jl
loope
or
scas
push
jmp
fs
dec
les
and
mov
mov
mov
das
and
call
pop
add
push
aas
cdq
ds
addr16
mov
ss
das
js
fdivr
inc
dec
mov
ins
std
jge
shl
jl
push
jo
lods
pushf
imul
pop
cmp
enter
out
loope
imul
add
int3
dec
repz
mov
or
mov
cmp
(bad)
dec
push
dec
cwde
std
inc
sar
or
cmp
or
xchg
add
mov
dec
mov
jl
pop
sahf
cmp
stc
cmps
lock
fdiv
ja
and
icebp
push
repnz
retf
fnstcw
mov
test
jmp
add
mov
fadd
cmp
mov
idiv
aas
sbb
and
lock
xchg
mov
jb
addr16
(bad)
jge
pop
inc
jg
dec
inc
cmp
cmp
mov
in
popa
or
addr16
jle
out
jo
inc
retf
push
or
dec
(bad)
adc
add
iret
int3
ret
in
nop
in
leave
ds
and
sar
in
out
out
loop
sub
push
mov
cmp
pop
stc
mov
mov
cdq
or
int3
shr
adc
cmp
popf
nop
fwait
ja
inc
xlat
jle
dec
gs
mov
lods
and
stos
outs
jnp
(bad)
pop
stos
dec
or
fcomp
jmp
ja
mov
adc
fdivr
jne
jl
and
adc
gs
or
mov
mov
cdq
mov
jns
inc
add
imul
icebp
push
cld
jne
rcr
pop
fmul
push
push
pusha
fmulp
sbb
out
dec
fistp
sub
ins
sbb
jnp
dec
pop
arpl
sbb
mov
xor
mov
pop
cmp
retf
(bad)
fs
int
lea
std
clc
mov
mov
les
cmp
(bad)
int3
mov
push
mov
add
jge
mov
pusha
ins
jae
imul
mov
leave
dec
cmp
cmp
push
or
popf
cmc
mov
jge
pop
sti
push
mov
pop
retf
cmp
ins
pop
fbld
push
stos
pop
pop
sub
xchg
dec
xor
mov
push
(bad)
jmp
sub
mov
dec
xor
dec
push
fstp
out
popa
mov
popf
std
jnp
aad
add
cmp
mov
movs
into
ins
outs
clc
in
fdivr
lock
xchg
add
leave
push
out
and
(bad)
loope
xor
loopne
push
loopne
fcom
xor
dec
neg
retf
jge
push
fdiv
and
out
mov
pop
nop
pop
call
xchg
cmps
out
xchg
outs
lea
aam
icebp
aad
pop
jno
adc
sub
pop
lods
xlat
mov
cmc
xor
lds
push
test
inc
sbb
xor
pop
das
sub
cmp
repnz
or
push
mov
add
pop
fst
jecxz
(bad)
cli
outs
jecxz
pop
push
push
adc
jo
test
lock
fidiv
imul
mov
fsub
adc
loop
mov
dec
jns
std
je
pop
(bad)
imul
xchg
pop
pushf
jno
(bad)
in
sbb
call
fmul
pusha
xchg
mov
nop
in
std
dec
xor
sbb
inc
dec
mov
cmp
mov
cmp
xchg
mov
je
or
les
xchg
push
ins
adc
jnp
push
mov
out
push
lea
outs
xchg
sub
sbb
mov
sbb
ret
test
dec
fwait
inc
inc
mov
lods
neg
popa
cmps
inc
shl
pop
inc
mov
lods
sbb
cmp
add
sub
push
push
ins
fcomp
and
call
data16
and
dec
jle
jmp
clc
aam
xor
dec
push
or
(bad)
jno
in
mov
xchg
lods
test
dec
clc
xor
cmp
stos
mov
mov
mov
into
iret
stc
cld
adc
jl
pop
or
mov
cwde
adc
fisubr
adc
push
pop
arpl
cli
jne
sbb
popf
mov
(bad)
call
neg
loopne
xchg
add
pop
ss
fs
dec
imul
mov
mov
fisubr
pop
push
stos
adc
inc
and
ins
jno
or
mov
mov
nop
fs
pop
fnstsw
push
jb
in
mov
dec
ret
xor
jl
sub
or
enter
dec
outs
push
ds
or
mov
retf
dec
or
mov
test
ins
xchg
out
mov
adc
cli
cmp
fcmovnb
jnp
enter
ret
adc
aas
into
mov
push
das
sbb
test
jg
(bad)
rcl
cwde
pop
cmp
test
pop
fnsetpm(287
cdq
push
sub
cwde
int3
jnp
nop
mov
or
mov
cmp
call
hlt
xor
sbb
stos
gs
into
cmpxchg
or
retf
and
aas
or
dec
cmc
adc
push
pop
cmp
sub
test
add
jle
push
iret
jecxz
dec
adc
cmp
ins
inc
out
push
sub
mov
sbb
and
pop
into
lods
xchg
stos
fmul
sub
jb
inc
fdivrp
mov
xor
pushf
pop
cld
pop
int3
mov
push
adc
fsubr
out
dec
pop
scas
cmp
outs
les
in
xlat
push
stc
mov
ins
sti
mov
idiv
dec
fimul
mov
rcr
outs
call
jno
fdiv
push
fs
daa
call
sub
xor
(bad)
leave
in
pop
or
scas
test
push
test
outs
sub
or
cs
dec
outs
aas
mov
fstp
mov
xchg
mov
mov
mov
sahf
mov
aaa
lea
mov
imul
dec
imul
in
in
cmp
aam
pop
stos
or
add
pusha
pop
mov
imul
cmp
sbb
dec
add
sub
aam
in
jmp
cmp
mov
ins
lods
leave
cmc
dec
mov
cwde
enter
ins
faddp
divps
pop
sbb
mov
xlat
dec
stc
mov
sar
pop
sbb
mov
sub
push
sub
int3
push
enter
(bad)
(bad)
jge
adc
fnstcw
frstor
sbb
cdq
(bad)
outs
gs
mov
in
nop
and
je
sbb
sbb
cmp
(bad)
aad
mov
jbe
ins
es
inc
outs
bound
retf
mov
sbb
cld
pop
xor
or
xor
leave
leave
fmul
out
shl
mov
and
cmp
lods
mov
mov
rcr
jl
test
cmc
xchg
popf
enter
xchg
fs
nop
lock
ror
call
clc
cmp
outs
scas
call
lods
sub
call
or
cmp
loope
enter
fcomp
scas
inc
jb
leave
sub
jp
and
(bad)
push
leave
cld
test
mov
mov
sahf
sub
aaa
add
daa
pushf
xor
movs
xchg
mov
call
(bad)
mov
pop
cdq
mov
(bad)
mov
jl
aam
or
sbb
jnp
pop
pop
call
mov
lock
in
js
inc
cmp
jl
out
or
call
adc
scas
lods
dec
cmc
daa
fidivr
dec
ror
or
sbb
js
call
adc
xchg
fcom
xchg
shr
mov
xor
lock
ficom
dec
sbb
cld
sbb
ins
mov
test
mov
test
psubd
pop
frstor
lahf
hlt
mov
das
sar
sub
mov
xor
loope
aad
pop
les
(bad)
int3
lods
call
dec
fstp
cmp
pushf
add
push
sahf
sub
sti
nop
mov
fwait
sbb
repz
scas
in
sbb
add
out
out
pop
sbb
pop
jg
jmp
leave
test
out
xor
jle
cli
pop
ds
int
call
dec
push
pop
add
jl
mov
sbb
repnz
sti
into
sbb
fsub
adc
cmp
mov
cmp
or
loope
js
xor
scas
lock
jmp
aas
pop
fdivr
neg
add
dec
test
in
pushf
in
mov
dec
repnz
jecxz
fcomp
jecxz
arpl
inc
cmps
dec
dec
pop
shl
mov
int3
sar
jmp
sub
add
pop
lods
jno
paddd
pop
mov
clc
lods
xchg
mov
jbe
mov
aam
sub
leave
inc
cmp
fsubr
aas
cmp
popf
sub
scas
xchg
loopne
jmp
or
add
adc
test
mov
sbb
jmp
leave
enter
test
imul
adc
scas
sti
movs
jmp
dec
mov
cmp
cld
sbb
mov
jle
dec
mov
nop
push
dec
pop
(bad)
adc
imul
ror
out
mov
daa
jnp
fldcw
jbe
test
or
gs
icebp
add
cmc
fimul
pushf
fwait
or
or
ror
jl
xor
aaa
mov
and
dec
lock
add
pop
push
dec
in
fs
xchg
sbb
repz
sbb
arpl
push
cmp
fild
push
mov
or
ds
dec
jmp
stos
jb
loop
mov
lods
scas
or
clc
or
dec
fwait
dec
mov
dec
cmp
sbb
pop
fxch
xchg
mov
mov
mov
xchg
xchg
cmp
dec
ss
test
dec
ja
sar
sbb
dec
popa
xor
pop
call
mov
sub
mov
loop
jge
movs
imul
(bad)
jnp
nop
xchg
mov
test
scas
push
xor
inc
stc
lock
mov
push
fadd
repz
mov
in
mov
xchg
sub
mov
mov
rcr
rol
and
cmp
enter
cwde
mov
je
mov
int3
clc
mov
jns
and
jmp
retf
in
add
jae
jmp
push
stos
push
xchg
nop
lods
pushf
xchg
mov
dec
int
mov
fs
xchg
xchg
lods
stos
sub
or
jmp
or
scas
lar
or
pop
sub
jecxz
cmp
push
or
push
mov
fidiv
or
addr16
mov
pusha
mov
cmp
aam
mov
fs
mov
loop
retf
mov
pop
and
pop
(bad)
cwde
sbb
fsubr
cmp
in
mov
push
call
and
jmp
or
ins
sahf
mov
ror
jns
enter
test
or
outs
pop
mov
push
imul
(bad)
pop
cli
ins
fisubr
sbb
mov
pop
xchg
out
add
mov
fnstcw
sbb
sbb
inc
pop
nop
hlt
imul
ins
mov
cmp
popa
fcom
xor
gs
xchg
mov
inc
mov
pop
mov
xor
inc
jae
add
push
ret
or
jl
lahf
xchg
cmp
cmps
push
test
cmp
in
retf
pusha
jle
mov
in
repz
fiadd
sub
pop
fucomi
clc
xchg
scas
cmp
ret
dec
mov
iret
clc
sub
inc
in
stos
idiv
xchg
test
cld
jbe
push
das
imul
dec
mov
sub
cmp
in
dec
test
jge
lds
jo
add
mov
inc
sbb
pushf
fucomi
outs
pop
dec
mov
int
(bad)
mov
cmp
imul
sar
(bad)
(bad)
cdq
push
jae
cmp
fisub
lea
pop
cli
cs
pop
cmps
mov
jbe
test
jmp
xchg
jl
movs
inc
dec
cmp
mov
mov
add
outs
dec
cmp
loop
enter
push
fwait
xchg
cmps
mov
and
mov
ds
dec
jo
aam
cmp
movs
add
dec
out
add
xchg
push
mov
jl
ja
add
loop
or
ja
lock
jmp
dec
add
inc
mov
jo
jle
test
in
fs
pusha
xchg
test
rsqrtps
lods
jge
inc
mov
leave
std
mov
push
inc
add
rcr
or
adc
cs
sbb
stc
inc
adc
fistp
clc
dec
dec
out
std
inc
add
lds
jl
in
dec
aas
pop
int
cmp
test
mov
test
dec
enter
pop
jmp
clc
(bad)
add
lock
test
icebp
aas
sar
cmp
push
pop
addr16
or
jge
fidiv
add
xor
or
inc
or
ss
js
mov
dec
jae
mov
jge
leave
mov
movs
push
sbb
sub
call
mov
pop
push
dec
call
fcom
stc
in
and
popf
push
rol
pop
ins
test
ss
imul
dec
push
inc
mov
repz
push
add
xlat
inc
pop
out
sub
jbe
push
not
jo
sar
icebp
pushf
je
sahf
hlt
dec
int3
ret
inc
xchg
stos
test
cld
cdq
cmp
dec
retf
xor
jl
xlat
ret
mov
mov
add
ror
test
pushf
lock
and
fcomi
(bad)
fisttp
call
int3
add
dec
mov
xor
cmc
dec
imul
cld
mov
mov
mov
inc
ins
jae
dec
cmps
or
sub
sub
lods
jl
push
cli
and
scas
outs
add
jge
call
daa
or
mov
xor
mov
jmp
dec
ins
adc
outs
ins
test
shl
mov
add
jg
add
pop
imul
cwde
fstp
or
lods
fadd
stc
fldln2
or
cmp
or
jnp
lahf
xlat
clc
or
push
mov
jns
add
and
push
scas
dec
inc
fdivr
adc
iret
sbb
jecxz
aas
daa
cmps
sbb
lods
pop
dec
into
fisttp
jecxz
fcomp
enter
int
test
jo
add
sbb
imul
xlat
jns
test
adc
mov
push
aam
cmp
hlt
jmp
clc
imul
out
inc
or
(bad)
jb
push
and
jne
ins
ss
push
push
inc
mov
jge
fcom
outs
out
cmp
sub
mov
cmc
and
pop
mov
lea
push
xor
icebp
push
push
cs
xor
cmps
and
pop
push
cli
jl
je
addr16
jmp
lods
mov
loopne
iret
call
retf
iret
mov
and
sbb
mov
inc
or
push
cs
xchg
adc
in
into
jne
clc
push
jo
mov
cmp
cmp
sbb
lods
enter
mov
bnd
retf
cs
xor
mov
or
clc
in
int
push
(bad)
test
sbb
cmps
inc
ret
push
jmp
sbb
jmp
pop
push
lahf
cmp
call
xchg
jb
rcr
rcr
mov
test
sbb
and
push
and
out
cmc
dec
and
mov
js
in
fwait
stos
cmp
ltr
add
jbe
sub
inc
xor
lods
std
mov
sub
sub
fldcw
cld
mov
ins
adc
and
mov
es
jmp
mov
push
and
add
or
lods
(bad)
aad
xor
xor
xchg
push
scas
xor
or
dec
outs
jge
mov
adc
jmp
fistp
push
mov
xor
loopne
clc
mov
xchg
test
pop
xchg
sbb
dec
sbb
sbb
sbb
adc
fstp
and
shr
popf
mov
inc
call
inc
lods
xor
enter
mov
sti
dec
cmp
mov
fcmovne
mov
das
retf
mov
or
mov
aam
hlt
loop
data16
or
mov
loope
pop
push
mov
out
cmp
(bad)
fnstsw
sub
sbb
mov
test
xchg
mov
fwait
in
dec
enter
xchg
dec
inc
cld
pop
xchg
js
jbe
xchg
ins
xor
jns
mov
arpl
imul
push
pop
outs
enter
sub
(bad)
outs
test
cld
mov
sbb
int3
sub
pop
out
cwde
sbb
fs
mov
add
in
mov
jne
sub
outs
das
sub
(bad)
repnz
mov
je
push
lds
shl
jbe
ins
mov
lds
push
stc
mov
or
test
mov
cmp
call
daa
jns
popf
mov
ins
outs
add
cmp
aaa
into
and
std
sub
ins
xchg
add
stos
ins
fnstsw
dec
and
neg
lea
pop
cmp
sub
add
push
retf
push
adc
outs
in
rcr
fs
fidivr
out
mov
xchg
(bad)
loope
mov
push
ret
cmps
retf
aam
sub
and
add
rcr
adc
add
pushf
loopne
mov
mov
sub
dec
mov
sub
leave
rcl
cmps
loop
cmp
adc
repz
jbe
dec
cwde
sub
mov
push
pop
ds
mov
call
sbb
loopne
(bad)
cld
stos
mov
push
sbb
jns
push
retf
repz
lock
and
lock
arpl
mov
aam
cmp
xchg
imul
scas
dec
lea
inc
mov
xchg
mov
jp
pushf
sub
sbb
pop
fs
xchg
shl
mov
lock
aad
lock
int3
adc
out
cmp
mov
ins
xchg
cmp
aam
ins
or
sbb
pop
dec
dec
cmp
adc
sbb
mov
and
cli
cld
into
sub
cld
int3
mov
jmp
or
push
push
stc
adc
pusha
fisubr
mov
push
aam
cmp
pop
lods
or
jnp
xchg
add
arpl
sub
pusha
xor
or
xchg
call
int3
stos
or
jge
in
jb
(bad)
jle
lods
cmp
repz
outs
push
sar
cmp
int3
inc
sub
pop
adc
outs
aaa
(bad)
adc
add
(bad)
(bad)
inc
push
aas
sbb
arpl
das
xor
ins
xchg
imul
jle
in
cmp
aam
clc
and
sbb
push
mov
push
dec
add
dec
inc
imul
pop
and
cwde
out
sbb
loopne
jmp
adc
sbb
stc
aad
aaa
stos
xor
in
bound
pushf
sub
mov
push
sub
(bad)
ret
test
std
mov
mov
pop
retf
aas
push
mov
push
clc
ror
imul
std
adc
pop
xchg
loopne
and
jl
out
jmp
fldcw
mov
adc
jle
hlt
ins
ret
dec
pop
cmp
pop
fisttp
adc
fadd
push
dec
fwait
int3
adc
das
mov
neg
mov
mov
cmps
inc
jmp
gs
pop
ret
cwde
cld
ins
in
es
xor
out
(bad)
push
fstp
mov
outs
adc
add
jno
enter
outs
jns
or
retf
scas
add
sar
dec
sub
aad
mov
stos
cmps
mov
mov
test
pop
adc
div
or
outs
jns
or
mov
push
push
es
jae
mov
lea
dec
out
mov
imul
and
sbb
mov
test
lock
inc
out
in
sahf
mov
sbb
fnsave
sbb
ret
mov
sbb
and
sbb
es
dec
add
call
ins
push
push
ficom
dec
popa
inc
nop
sbb
mov
cmp
in
jmp
dec
stos
repnz
pop
push
movs
out
sub
js
push
shl
and
mov
ins
fmul
ret
inc
add
mov
out
or
or
(bad)
clc
mov
lahf
xchg
enter
or
adc
xchg
lea
lods
retf
scas
test
sbb
pushf
mov
cmp
mov
mov
mov
test
push
pop
retf
movs
or
dec
test
out
jb
push
pop
test
call
sti
dec
ret
leave
sub
pop
(bad)
cwde
pop
int3
inc
call
in
mov
and
sub
fmul
xchg
xchg
sbb
movhlps
shl
ror
fisubr
mov
jae
out
les
jp
mov
stos
sbb
inc
fmul
ins
mov
lock
push
push
dec
ss
cmp
sbb
pop
sub
cmps
(bad)
jmp
sti
cwde
jmp
or
dec
xchg
jbe
sahf
ins
push
in
mov
dec
sub
rol
out
mov
lods
in
sub
lods
loopne
(bad)
test
and
test
pop
scas
adc
mov
mov
push
fidivr
or
push
jo
movs
ins
fadd
push
es
jo
shrd
scas
popa
cmp
pop
mov
ret
push
adc
scas
jle
sub
in
out
(bad)
dec
sbb
into
into
adc
add
push
sahf
adc
jnp
out
adc
out
jl
pusha
dec
pop
test
mov
cld
in
xchg
sub
push
and
jnp
mov
and
mov
ins
test
pushf
pushf
jmp
jns
dec
js
sub
xchg
out
adc
jge
ss
lock
cmp
pop
xchg
jns
fisttp
xchg
ja
jb
(bad)
jnp
dec
retf
ret
pop
fdivr
and
test
mov
push
lods
daa
mov
cmp
fmul
push
ret
sub
mov
shr
aaa
daa
push
ins
dec
sbb
push
push
pop
mov
fbstp
int
lds
mov
fdivrp
sub
fdivr
stos
or
out
and
repnz
or
inc
call
scas
cdq
cmp
inc
sbb
in
ins
pop
shl
add
mov
sbb
mov
adc
hlt
pop
hlt
or
fcmovne
test
sub
in
push
pop
mov
call
mov
and
or
out
call
mov
sub
xchg
push
dec
or
cmp
jnp
adc
xchg
jae
mov
popf
add
sub
dec
pushf
or
sbb
or
leave
stos
push
ja
pushf
pop
popf
loopne
mov
sbb
push
test
xor
add
jbe
in
pushf
push
jg
arpl
ds
lea
fnsave
dec
pop
movs
xchg
mov
imul
xchg
into
js
jo
scas
sbb
cmps
pushf
repz
pushf
cmp
add
pop
test
ins
dec
sbb
xor
cs
cmp
cmp
cmp
(bad)
in
or
aaa
imul
inc
in
mov
movs
cwde
push
fisttp
xor
lock
dec
or
jl
pop
pushf
or
jp
pop
xor
sbb
push
fistp
sub
and
cmp
xchg
xchg
out
dec
rcl
leave
int3
pop
sbb
stc
mov
push
cmps
pop
aas
stc
fbstp
test
lea
popf
sub
jmp
dec
add
(bad)
or
cs
cmps
push
mov
mov
push
sbb
sbb
ss
ret
pop
xchg
mov
ins
leave
sahf
sbb
fisttp
outs
into
add
out
jbe
jge
adc
imul
push
mov
dec
jecxz
xchg
push
inc
repz
fisubr
xchg
pop
push
mov
retf
cmp
js
mov
sbb
retf
jl
mov
mov
enter
xchg
das
jl
or
inc
clc
mov
push
jb
enter
push
push
cwde
mov
pop
inc
or
sbb
jle
loop
mov
sbb
ins
jne
add
or
dec
jge
cli
jecxz
push
sbb
push
in
mov
inc
push
popf
jp
xchg
loopne
mov
push
add
imul
aam
ja
mov
push
sub
aas
ins
mov
es
repz
jge
sti
jg
sbb
xchg
jns
cmp
fs
loope
iret
add
cmps
dec
ins
mov
mov
adc
adc
mov
sub
cmp
test
or
inc
jle
imul
or
sub
xchg
(bad)
or
jl
dec
push
ret
fxch
sete
or
or
in
std
enter
into
adc
je
in
outs
(bad)
stc
add
bound
nop
xor
xor
mov
push
loopne
stc
js
addr16
xlat
rol
aad
jl
imul
das
adc
daa
or
xlat
mov
mov
cmp
imul
neg
hlt
mov
mov
out
sub
aaa
mov
(bad)
adc
or
xor
dec
push
data16
sub
cmp
test
and
add
and
sub
mov
js
pop
iret
push
in
mov
xchg
sub
mov
(bad)
dec
sub
test
add
sbb
xchg
out
into
push
es
loopne
cmps
nop
mov
mov
sub
clc
fst
pop
nop
fsub
jmp
adc
xor
pop
in
mov
mov
mov
dec
in
push
or
mov
(bad)
out
stc
ret
xor
sahf
push
cmp
addr16
aaa
mov
xor
mov
stc
jmp
in
sub
dec
iret
cmp
popf
sbb
jbe
or
(bad)
cmp
mov
js
adc
fs
jb
pushf
and
mov
pushf
sbb
mov
sub
jl
jnp
push
adc
xchg
sub
jmp
cli
inc
dec
(bad)
sbb
test
push
xor
adc
mov
fldpi
ror
pop
inc
mov
adc
out
ja
in
jne
xor
jg
push
call
pop
adc
fldcw
dec
push
jo
out
das
jnp
(bad)
cmp
mov
and
addr16
dec
les
xor
cli
inc
mov
adc
int3
inc
enter
sbb
or
mov
sub
xor
in
inc
stos
mov
mov
fmul
addr16
or
xor
mov
idiv
js
mov
leave
lea
sbb
pop
mov
lea
push
cwde
cmp
mov
push
mov
cmp
int
sub
or
jo
jg
adc
cld
sti
and
sub
adc
dec
dec
push
and
lea
push
sti
cmp
jmp
xor
imul
xor
cmp
in
or
fs
cmc
ret
cmp
mov
ins
jg
cmps
mov
xor
push
(bad)
push
clc
jae
fmul
stos
inc
in
mov
push
ja
iret
adc
ins
fmul
pop
js
bound
xor
rcr
call
or
pop
test
call
pop
js
sbb
or
pop
xor
and
mov
adc
ins
test
fsub
ret
ins
pop
adc
es
cmc
sbb
(bad)
inc
stc
sub
dec
clc
pop
inc
ins
push
bswap
mov
shl
dec
pop
sub
sub
out
mov
sub
stos
inc
sar
push
inc
xchg
mov
fldcw
adc
push
jg
jl
ja
or
mov
xor
adc
pop
add
inc
and
mov
lahf
xchg
cmp
dec
out
stc
fbld
test
pushf
or
fimul
int3
mov
add
or
lods
jmp
jp
cld
cmp
sbb
push
sub
ss
aam
mov
(bad)
in
cmp
adc
mov
into
adc
pop
or
add
fldcw
xor
push
xchg
push
mov
xchg
call
cmps
push
lods
test
in
inc
push
pop
mov
sub
mov
sbb
lahf
push
cmp
xchg
xor
pop
into
js
push
sbb
dec
in
ret
into
pop
ins
xchg
xor
sub
sbb
stc
push
aam
sahf
je
jl
sub
dec
mov
mov
mov
dec
add
ds
mov
pushf
add
mov
adc
xchg
stos
jg
or
iret
int
in
adc
push
leave
in
sub
fcomp
dec
int3
movs
jmp
dec
std
fmul
mov
mov
fadd
rcr
sbb
int3
test
fidiv
fwait
jl
mov
in
dec
mov
fucomp
div
jmp
pop
xchg
(bad)
sti
int3
ror
mov
imul
call
fwait
sbb
rol
ins
or
push
push
in
rcr
mov
(bad)
jmp
or
rcl
sub
ins
jle
push
cs
movs
xchg
(bad)
(bad)
cwde
addps
test
mov
gs
and
sub
push
and
push
cwde
stos
out
fsubr
ror
lods
test
xchg
or
cwde
fdiv
dec
cmp
(bad)
stc
jl
nop
jg
fidivr
sub
xchg
lea
cmp
jns
data16
jge
mov
adc
adc
arpl
mov
mov
call
ror
lods
and
fstp
(bad)
dec
mov
sub
push
dec
dec
out
sub
cs
jae
or
mov
and
shr
stos
mov
out
repnz
dec
(bad)
fidivr
out
int3
cmp
(bad)
push
ret
out
cmp
jp
push
out
jg
pop
or
ins
pop
dec
mov
pushf
adc
fstp
mov
mov
sbb
inc
ficomp
lahf
jmp
xchg
push
dec
pop
dec
push
std
push
js
xor
mov
popf
lods
int3
xchg
mov
call
or
ins
or
adc
xchg
ss
cmp
bnd
je
sbb
cs
ret
sbb
push
xchg
inc
xchg
imul
mov
fmul
js
cmps
mov
je
pop
stc
cmp
data16
push
jns
pop
adc
inc
rcl
sbb
and
or
in
cmova
pop
les
mov
aas
or
in
jg
xchg
stc
out
std
sub
mov
sub
ins
push
pop
dec
cmps
push
mov
push
mov
inc
sar
es
add
xor
pop
mov
loope
dec
lods
xchg
sub
and
(bad)
call
xor
outs
jns
retf
mov
jg
scas
mov
stc
clc
int
ins
pop
addr16
stos
cs
popf
and
inc
(bad)
cmp
jno
nop
xor
outs
cmps
fadd
cdq
cmps
ret
xor
mov
lea
repnz
inc
dec
(bad)
sar
les
lods
cmps
outs
ret
call
sbb
adc
sbb
inc
xchg
hlt
mov
xchg
js
pop
sti
das
fild
popf
data16
sbb
ins
dec
in
cli
mov
or
pop
cld
pop
pusha
adc
push
call
inc
pop
scas
nop
call
frstor
pusha
sbb
and
stc
cs
lods
scas
mov
and
dec
or
push
or
jne
add
jge
sbb
or
out
fsubr
ret
(bad)
(bad)
jnp
push
mov
or
fstp
stos
xor
xchg
inc
jl
pop
lods
mov
xchg
imul
jmp
je
retf
fs
adc
jns
and
out
jge
cmps
mov
xchg
xchg
jmp
mov
stc
daa
dec
pop
pusha
clc
cmps
mov
pop
cmp
sub
mov
adc
sbb
lds
cmp
ds
fld
sbb
pop
lods
les
pop
or
clc
cdq
in
cld
aad
sub
imul
add
out
stc
pop
push
popa
mov
pop
fistp
pushf
jle
cmps
mov
fsub
sbb
fdivr
mov
and
sub
fcomp
mov
clc
test
mov
es
pop
jns
mov
cmps
pop
dec
push
out
imul
xor
push
sub
lock
cmp
xchg
xchg
fwait
jmp
dec
lods
push
js
fbld
cmp
mov
stos
sub
mov
adc
pop
in
or
dec
inc
retf
pop
cs
add
lahf
fadd
or
stos
lahf
dec
cmps
and
dec
lea
fld
setge
mov
test
popa
mov
mov
xchg
mov
mov
mov
sub
dec
and
push
call
push
or
popa
dec
jp
push
(bad)
pop
pop
stos
cmp
jmp
mov
jns
inc
nop
pop
in
int3
xchg
lock
mov
in
or
xor
sub
xor
dec
es
mov
imul
in
test
push
mov
sbb
add
repz
xchg
cli
js
in
fist
mov
out
lds
int
repnz
ins
mov
xchg
lds
adc
repz
rcr
inc
lds
clc
dec
push
aad
fisttp
jb
sub
sbb
in
mov
out
push
xchg
or
xchg
fnstenv
xor
sti
sbb
ss
mov
or
add
aaa
cwde
(bad)
cli
call
test
out
(bad)
mov
add
mov
sub
ffree
mov
add
mov
push
cwde
push
js
call
sub
mov
in
out
jnp
mov
pop
mov
dec
xchg
lods
xchg
xor
int3
fsubr
mov
ds
cmp
pop
out
dec
ret
aam
or
lock
outs
lods
pop
out
jl
daa
pushf
mov
shr
xchg
std
cmps
or
mov
fmul
dec
loope
push
mov
fdiv
cwde
inc
sbb
xchg
jge
test
imul
push
sbb
push
xchg
aas
or
sub
dec
push
push
mov
clc
jge
cmp
inc
repnz
sbb
sbb
test
(bad)
pop
movs
mov
aas
or
jae
cmc
dec
(bad)
push
es
ds
or
lock
in
inc
loopne
adc
fbld
fimul
sbb
fcom
xchg
arpl
jbe
add
icebp
inc
(bad)
push
add
pushf
in
popf
(bad)
sbb
(bad)
fadd
jno
inc
xor
hlt
mov
jb
cmp
sub
fs
xor
cmp
pop
(bad)
out
cli
push
cmc
cdq
adc
inc
sbb
int
cmp
pop
ins
aas
xor
mov
sub
test
(bad)
out
lea
int3
sbb
mov
mov
popa
cmps
or
add
loopne
inc
scas
dec
lea
add
repnz
jb
inc
sti
push
pop
mov
jno
add
jmp
mov
rcl
test
ins
test
movs
and
js
dec
cmps
imul
dec
push
xor
mov
cld
cmp
test
lods
mov
xchg
sbb
dec
call
pop
dec
fcomi
stos
iret
push
adc
mov
jae
out
push
jp
clc
inc
pop
fnstenv
fisubr
pop
into
jnp
popa
mov
call
and
(bad)
bnd
data16
std
adc
pop
out
push
xor
sub
sub
cmp
fnstcw
xor
pop
add
addr16
mov
sahf
push
jl
add
add
mov
add
popa
pushf
dec
sbb
pop
int
pop
adc
out
stos
cmp
sub
cmp
mov
rol
mov
fprem
enter
out
dec
or
mov
jle
loop
mul
jns
mov
std
xchg
icebp
pop
cmps
pop
test
dec
fisub
shr
fstp
pop
mov
lea
mov
fs
jns
out
pop
dec
dec
adc
dec
jno
call
xor
mov
repnz
mov
stc
jge
pop
shl
(bad)
jl
mov
jbe
cmp
xchg
popf
dec
nop
enter
dec
dec
jl
loope
rcr
call
(bad)
adc
or
or
jge
ret
and
or
sub
adc
add
fnsave
or
scas
imul
xor
cwde
mov
nop
jnp
mov
mov
add
sbb
mov
(bad)
bound
lods
mov
mov
rol
xor
inc
cmps
outs
pushf
mov
int
sbb
jge
mov
inc
aam
nop
lea
cld
adc
mov
call
pop
imul
in
mov
xor
loop
loop
or
(bad)
enter
dec
xor
movhps
movs
sbb
adc
sbb
push
(bad)
std
lock
dec
bound
fsub
adc
jle
addr16
pop
xchg
sbb
inc
mov
sub
add
cld
cmp
adc
inc
adc
pop
fmul
vcvtsi2ss
and
add
dec
mov
cs
push
out
ins
jg
inc
inc
fild
(bad)
movs
or
sub
xlat
lea
dec
jp
cmp
in
call
mov
popf
adc
ds
jbe
pop
in
out
xchg
(bad)
imul
ins
cld
cwde
jnp
pushf
sbb
test
test
mov
pop
mov
fld
pop
stc
inc
mov
movs
pop
adc
sbb
xor
jmp
loop
stos
mov
sub
das
test
sbb
outs
std
or
push
sbb
fstp
movs
push
or
stc
cmp
cmp
cwde
mov
fcom
inc
arpl
pop
aam
ins
stc
or
sbb
mov
jl
hlt
movs
dec
sub
fsub
jno
dec
mov
mov
aad
xor
mov
dec
in
scas
cmp
je
in
pop
fnstsw
pop
outs
std
fst
mov
out
jecxz
cmp
ss
sub
push
retf
in
scas
stos
ins
mov
pop
sbb
mov
not
in
in
cmp
stc
add
retf
(bad)
xchg
leave
(bad)
rcr
sti
mov
sbb
das
ja
dec
sbb
xlat
jno
sub
or
mov
add
and
adc
imul
(bad)
sbb
(bad)
mov
ret
mov
aas
int3
mov
dec
dec
jge
pushf
sub
sbb
mov
aam
lods
add
xor
or
xchg
repnz
stc
dec
jb
sbb
sub
dec
lea
into
fldenv
sbb
call
push
(bad)
or
or
inc
and
mov
inc
jg
add
jg
mov
pop
mov
jl
mov
pmuludq
inc
pop
lods
rcr
popa
pop
nop
leave
imul
mov
cmc
bound
xchg
out
ins
ss
iret
mov
push
lods
pop
lods
out
in
sub
or
pop
pop
add
or
div
out
daa
cwde
ins
dec
dec
cmp
xchg
cmp
fistp
je
add
mov
(bad)
pusha
std
mov
add
push
adc
scas
mov
enter
std
and
call
sub
inc
inc
addr16
call
xchg
aas
jo
mov
je
mov
push
mov
lods
repz
push
push
mov
mov
js
fmul
ror
(bad)
jnp
cs
push
test
and
out
sbb
sbb
jae
loopne
cmp
dec
call
les
or
or
cmp
adc
or
popa
mov
(bad)
cwde
and
fs
adc
ret
daa
out
jl
or
jmp
mov
arpl
(bad)
adc
cmp
cmp
or
push
push
mov
and
mov
jnp
stc
jmp
mov
out
mov
cmps
pop
fwait
cld
aad
xchg
fadd
ins
(bad)
sar
mov
lea
cdq
sbb
dec
adc
stos
sub
cmps
adc
(bad)
nop
mov
or
sbb
xor
or
sub
in
(bad)
push
ins
ins
hlt
ja
scas
and
dec
dec
scas
dec
aaa
inc
bound
ins
add
loop
mov
rcr
adc
push
cmp
mov
push
ins
aam
mov
outs
xchg
sti
cwde
inc
sub
jmp
ret
push
inc
in
loope
das
pop
mov
sbb
in
movs
ja
jle
dec
js
add
pop
mov
pop
call
clc
out
fldenv
sbb
cli
xor
les
fsubr
mov
jae
inc
gs
inc
mov
or
shr
and
call
dec
sbb
rol
fistp
and
sbb
cmp
mov
mov
sub
jge
cdq
push
in
les
pusha
int
(bad)
stos
fmul
xor
stc
or
js
ins
jo
test
xor
add
jae
int
(bad)
mov
movs
mov
or
xor
in
mov
fisubr
cmp
pop
aaa
ins
cmp
sahf
out
mov
sub
jo
sbb
push
fdivr
movs
or
mov
outs
xchg
pop
imul
and
mov
inc
dec
(bad)
cli
push
pop
je
jge
mov
push
retf
lea
lods
shr
enter
fcmovne
fsubr
test
pushf
cwde
addr16
pop
jbe
into
sbb
ret
add
add
sbb
(bad)
fistp
movs
stc
xchg
ds
jp
adc
jp
pop
jns
fidivr
pop
sub
retf
js
ds
pop
(bad)
stos
outs
call
pop
test
mov
dec
enter
enter
cdq
adc
in
sub
jbe
out
and
leave
cli
leave
cld
pop
jmp
or
nop
or
retf
scas
fmul
rcr
pop
rcr
test
repz
mov
xlat
int
xchg
xlat
popf
neg
or
cdq
sbb
fisttp
hlt
pushf
lods
and
jne
outs
sub
dec
mov
sar
mov
xor
out
jle
and
cwde
lahf
mov
inc
loope
push
push
xor
jg
mov
push
idiv
dec
leave
xor
mov
mulps
popa
aam
cld
push
push
std
cdq
ja
mov
dec
cmp
jl
mov
and
test
sbb
push
out
adc
adc
stc
int
pop
cmp
ins
es
mov
dec
(bad)
icebp
or
inc
gs
mov
pop
sub
out
and
fsub
outs
enter
sub
push
cs
fisub
jne
data16
cdq
cmp
fucomi
adc
push
jmp
out
out
pop
dec
fdivr
shl
call
leave
pusha
les
push
pop
mov
pop
jp
xchg
or
mov
repz
mov
imul
js
int3
imul
adc
add
aam
mov
jl
int
nop
mov
(bad)
fimul
adc
(bad)
icebp
jg
ins
in
int3
iret
sub
push
rol
cmc
mov
daa
or
fdiv
in
cwde
or
loop
rol
push
add
stc
xor
dec
enter
pusha
mov
in
fsub
pop
mov
sbb
loopne
(bad)
or
jecxz
pop
out
mov
and
mov
mov
js
and
int3
test
or
test
dec
out
pop
pop
mov
push
pop
and
sbb
and
sbb
je
in
dec
fwait
inc
inc
lds
fstp
fwait
outs
mov
push
xchg
out
push
out
jle
outs
dec
imul
fwait
xchg
jmp
les
lsl
int3
pop
or
jo
fsub
push
fsub
lahf
fstp
add
iret
into
dec
dec
add
jle
push
jnp
stc
retf
ficom
daa
cmps
mov
push
(bad)
inc
inc
test
cmp
lods
sub
ins
mov
dec
shr
jmp
std
dec
cs
mov
fsubr
push
mov
fstp
sub
pop
dec
aas
inc
shl
add
imul
call
in
std
dec
sub
jmp
stos
fcomp
ficomp
jp
or
inc
dec
and
adc
ficom
cmp
test
cwde
xchg
aaa
test
loopne
inc
les
or
aaa
repz
hlt
enter
lods
mov
div
push
pushf
je
fwait
out
sub
ds
fmul
sbb
jbe
and
pop
dec
addr16
call
sbb
push
sbb
dec
popf
jae
sti
mov
js
call
aad
push
jg
stos
fucom
hlt
(bad)
jg
xor
sub
ror
movs
cmp
clc
dec
dec
xor
jns
cmp
inc
es
sbb
pop
out
pop
jle
add
jo
mov
push
std
loopne
sub
fcomp
inc
mov
add
in
mov
and
ds
(bad)
mov
div
test
out
push
lods
add
loop
call
aaa
sub
jp
in
imul
jmp
js
fcom
and
or
or
jns
rol
fsubr
movs
or
test
push
ins
retf
pop
fbld
(bad)
dec
or
sti
or
test
push
stos
ret
fist
shl
mov
mov
sbb
ins
jmp
dec
test
and
push
hlt
rcr
in
loopne
pushf
int3
pop
adc
fwait
and
sbb
iret
das
jl
sub
fs
std
rcr
mov
shl
cmp
loop
in
sbb
ins
pusha
arpl
sub
cwde
fcomp
cmp
push
inc
mov
dec
sub
mov
mov
sbb
sub
js
enter
dec
scas
imul
dec
sub
sub
mov
or
dec
inc
leave
mov
sub
add
ja
push
aaa
test
sti
mov
push
jl
mov
mov
outs
outs
push
call
clc
jnp
outs
pop
sub
jle
fcomp
in
js
and
popf
fs
lock
aad
xchg
mov
pop
jno
ins
scas
or
sub
push
or
int
pop
dec
stc
sub
leave
xor
outs
outs
mov
mov
ds
pop
xor
test
cwde
and
pop
sub
and
cmp
fcmove
cld
loop
mov
sub
push
push
out
mov
icebp
cmp
pop
jns
stc
dec
pop
mov
mov
mov
(bad)
jmp
repz
test
js
push
fadd
mov
mov
push
or
cmp
(bad)
lock
call
or
sbb
inc
les
fild
xchg
jge
push
adc
pop
add
cmp
xor
jge
ret
or
mov
in
call
ja
int
or
mov
mov
mov
dec
enter
and
add
lea
fcmove
inc
dec
shr
dec
sbb
in
sahf
jmp
(bad)
clc
rcl
mov
call
mov
mov
mov
add
pop
inc
adc
fsubrp
cmp
in
cmp
jg
or
cli
mov
add
outs
dec
xor
or
cmp
outs
sub
(bad)
dec
jnp
push
jl
pop
test
push
mov
xor
cld
imul
cld
je
mov
daa
call
dec
xchg
mov
or
pop
fucomip
fs
(bad)
sub
jnp
lds
cwde
adc
sub
inc
cmp
enter
test
pop
xlat
sub
test
and
pop
sub
jmp
sub
(bad)
pop
nop
push
cwde
mov
imul
or
clc
outs
loope
xchg
(bad)
into
repnz
sub
inc
sub
sub
adc
adc
pop
clc
pop
int3
mov
xchg
(bad)
sub
mov
push
ret
scas
xchg
mov
rcr
fdivr
pop
outs
dec
or
and
ja
jnp
jbe
or
lods
push
adc
fs
hlt
movs
push
push
mov
add
and
sbb
xlat
jge
lock
mov
ins
cld
(bad)
jo
std
stos
jne
jl
popa
jp
fidivr
inc
out
lea
or
pop
mov
push
add
scas
sub
xor
xor
jnp
mov
cmp
fcomp
inc
mov
sub
retf
sub
out
or
pop
and
je
pop
les
sbb
loop
cmp
stos
lods
mov
sbb
popf
in
int
mov
mov
xchg
pop
push
jl
sbb
aad
jae
fistp
inc
cmp
test
pop
out
xchg
test
fnstsw
pop
sar
js
push
mov
aam
test
test
sub
cmps
inc
inc
aam
jle
xor
dec
in
rol
lea
xchg
adc
mov
cmp
inc
(bad)
or
dec
cli
mov
addr16
(bad)
test
sti
in
popf
bound
sub
xor
cmp
out
cmp
or
pop
mov
int3
rcr
dec
pop
cwde
dec
push
push
hlt
cmc
cmps
pop
and
dec
add
movs
jmp
push
fisttp
mov
xchg
leave
mov
outs
jl
test
sub
bound
mov
leave
call
sti
cs
push
popf
push
clc
pop
mov
cwde
jnp
push
xchg
push
rol
ins
sub
fcomp
mov
mov
adc
push
xor
ds
jle
mov
pop
jmp
push
int
adc
hlt
cdq
imul
cmp
hlt
push
int
or
sub
push
fst
scas
mov
push
xor
pop
push
inc
fwait
cli
sub
test
xchg
jae
mov
xor
pop
pop
pop
dec
(bad)
aam
int3
jbe
stos
outs
jecxz
adc
jne
shl
dec
mov
jmp
push
jg
loopne
clc
ret
dec
or
aam
mov
sbb
or
sti
jns
jnp
sahf
outs
mov
ins
dec
sub
mov
sbb
xchg
pop
xchg
fldcw
mov
loope
bound
aas
push
or
fwait
dec
scas
jle
sub
mov
mov
movs
push
ret
es
pop
and
sub
sub
sub
clc
sub
cs
enter
pop
pop
pop
jl
dec
sub
xchg
lods
test
cmp
ds
mov
fcomp
dec
mov
and
rcr
jge
and
pop
fs
mov
retf
and
into
mov
adc
mov
ins
cmp
stc
dec
out
pop
in
call
mov
jl
jg
sbb
stos
enter
or
mov
cmps
pop
pop
add
outs
fld
sbb
aam
xor
or
int
or
sahf
cmp
inc
jge
sub
hlt
(bad)
jge
pop
ins
push
push
fsub
nop
mov
mov
mov
dec
pop
pop
dec
jge
push
pop
dec
jle
lock
cmp
push
out
lods
out
dec
gs
sub
fsubr
cmp
jle
clc
rcl
xchg
mov
jno
iret
push
mov
loop
out
push
aas
sub
push
in
call
mov
sar
jo
sbb
jle
jo
push
mov
ins
sbb
sbb
push
scas
sbb
mov
mov
mov
aam
addr16
sbb
ffree
xor
pop
inc
or
cmp
sub
clc
push
cdq
mov
out
fld
aad
outs
pop
dec
sbb
cdq
mov
in
cmp
pop
cmp
stos
sbb
jle
jecxz
repz
xchg
sbb
or
jns
inc
cmp
out
inc
ret
fidiv
or
dec
je
cmc
call
fidivr
add
inc
icebp
cmp
or
fcomp
xchg
jecxz
icebp
cwde
inc
ror
add
pushf
nop
out
nop
cli
mov
jge
adc
mov
dec
retf
jp
(bad)
fbstp
call
fld
in
xor
rcl
int3
push
arpl
sub
sar
and
mov
loopne
cwde
out
aas
cmp
sub
fidiv
xor
jb
sub
lods
dec
cmp
cmp
ror
and
jnp
add
or
add
or
rcr
sahf
dec
imul
fadd
(bad)
in
cdq
jg
dec
cmp
or
pop
and
sub
xchg
outs
enter
cmp
(bad)
(bad)
arpl
mov
add
sub
push
xchg
enter
dec
push
jge
call
mov
mov
dec
mov
or
pop
sub
xchg
push
fcomp
mov
or
stos
mov
enter
pop
cmp
cwde
mov
sub
and
mov
or
pop
dec
push
sbb
fisttp
out
aaa
int3
jmp
not
pop
das
(bad)
cmc
into
daa
outs
jge
or
and
pop
dec
cmp
out
call
pop
cdq
cmp
fcom
mov
adc
outs
in
sub
xchg
ret
test
xor
scas
dec
mov
or
fucomip
pop
call
(bad)
loopne
pop
pop
push
jne
and
inc
cwde
add
jmp
pop
gs
sub
or
mov
mov
outs
movs
jo
sbb
sbb
int
mov
lods
push
sub
or
lods
xlat
pop
mov
push
cli
jmp
mov
pop
fxch
adc
pop
scas
fs
sbb
push
sub
out
loop
xchg
inc
pop
(bad)
mov
add
mov
(bad)
repnz
mov
and
xchg
push
adc
out
cwde
and
mov
inc
retf
ror
cmp
pop
inc
push
inc
adc
mov
adc
xor
ins
fidiv
mov
jg
jo
and
jne
loop
fidivr
pusha
jno
bound
cmps
cli
icebp
cmp
inc
jns
(bad)
dec
es
mov
call
or
repz
xchg
xchg
mov
outs
call
pop
mov
sub
xchg
push
cmp
call
sub
push
dec
enter
sub
or
add
je
(bad)
jb
(bad)
fld
adc
test
scas
fsubr
jmp
pop
fidiv
jb
sbb
cwde
cs
scas
outs
popf
ins
xor
out
xor
pminsw
fcomp
xchg
push
or
lods
cdq
xor
jecxz
cmp
data16
push
jbe
sub
sbb
sti
mov
mov
nop
adc
xchg
jecxz
bndstx
les
add
pop
mov
cld
add
inc
into
test
lods
adc
sbb
cmps
and
js
jecxz
sub
xchg
mov
mov
dec
mov
cmp
pop
popf
push
shl
outs
dec
(bad)
retf
mov
arpl
lea
cmp
fst
or
je
fstp
push
int3
test
jl
dec
pop
cmp
pushf
sub
lds
jns
pop
dec
mov
ret
and
daa
inc
call
dec
hlt
inc
(bad)
jl
lock
(bad)
sbb
xchg
(bad)
xor
stc
int3
xchg
jge
cld
jle
push
fadd
push
mov
push
push
or
in
scas
lock
int3
jmp
and
and
int
and
test
dec
stos
mov
adc
sbb
sti
test
call
mov
mov
xchg
outs
enter
lods
pop
or
and
imul
fidiv
(bad)
sub
neg
push
cwde
mov
mul
adc
mov
cmp
or
dec
test
push
sete
fucompp
out
mov
cmp
(bad)
mov
pop
daa
into
push
or
(bad)
fmul
clc
push
fisttp
xlat
push
fstp
outs
(bad)
call
icebp
ds
cmc
xchg
xchg
fdivr
mov
add
lods
jb
lahf
mov
adc
fbstp
push
mov
clc
inc
jb
pop
and
pop
in
jb
mov
inc
mov
sbb
outs
in
mov
dec
shl
push
ret
push
jae
or
test
ds
sbb
push
sbb
js
push
jmp
movs
shl
shr
not
je
xchg
sub
stos
fcmovnu
or
cwde
mov
aad
inc
or
mov
sub
cmp
(bad)
in
test
lods
adc
(bad)
mov
jmp
mov
lahf
mov
in
fist
xor
hlt
jp
imul
pop
out
add
or
sub
and
pushf
sub
jo
and
push
(bad)
xor
addr16
cmp
fwait
jge
retf
movs
add
std
clc
movs
inc
movs
or
ds
stos
arpl
nop
(bad)
xchg
hlt
fisub
enter
xor
pop
xor
(bad)
nop
add
ret
ror
clc
dec
inc
sbb
sub
mov
pop
mov
adc
add
ds
pop
lods
aam
popf
cmps
in
leave
add
push
fs
sub
dec
xchg
test
mov
out
xor
pusha
jb
xchg
sub
js
mov
mov
xchg
pop
xor
push
(bad)
je
addr16
cmp
sub
sbb
sti
pop
cmps
(bad)
push
xchg
and
cmp
outs
mov
push
popa
sub
add
mov
mov
sub
xchg
push
aaa
cmp
jge
sbb
and
sar
mov
mov
cmp
movs
add
popa
or
cdq
fsubr
mov
hlt
lods
jmp
js
out
scas
enter
clc
pop
dec
movs
xor
push
mov
fsubr
xor
ret
mov
int
mov
sbb
pop
pop
or
xchg
movs
mov
pop
push
nop
ds
sbb
inc
pop
adc
cld
xchg
fidivr
in
mov
add
mov
and
mov
or
cmps
arpl
(bad)
fidiv
push
movs
xchg
or
jbe
imul
gs
in
fnstenv
push
(bad)
xor
icebp
jmp
push
pusha
(bad)
call
out
dec
add
add
fwait
dec
dec
stos
mov
pop
jb
cmp
and
stc
add
ja
mov
or
retf
stc
inc
js
fcomp
and
cmp
fild
jne
stc
mov
mov
ss
dec
ins
out
lods
push
fwait
das
sbb
cwde
dec
jmp
clc
xor
xor
push
imul
mov
mov
loopne
mov
loope
leave
mov
mov
xchg
jmp
gs
sbb
mov
mov
dec
jns
int3
test
sbb
sbb
mov
out
cdq
es
jp
dec
fbstp
cmp
pop
stos
and
dec
inc
cdq
pop
test
movs
and
pop
dec
addr16
lods
xchg
or
(bad)
lock
mov
inc
pop
jge
jbe
or
(bad)
and
fst
imul
scas
sub
in
and
and
sub
fsub
pop
and
cmp
test
ins
stc
dec
jecxz
hlt
lods
cwde
mov
pop
dec
ins
pop
imul
call
ins
jl
je
cld
mov
jl
cmp
mov
pop
and
mov
mov
popa
je
pop
fsubr
pop
js
jl
data16
adc
ins
test
jbe
bound
bswap
dec
movs
pop
pop
mov
pop
js
jp
sti
ds
pop
test
sbb
in
bound
lds
rcr
jno
or
aas
sbb
mov
add
add
stos
cs
ins
pop
xor
or
sbb
or
cld
fmul
mov
mov
loop
fsubr
add
in
test
mov
adc
ror
pop
inc
pop
add
rcl
hlt
pusha
xor
push
adc
mov
xor
dec
sbb
sub
daa
pop
popa
mov
mov
js
mov
dec
mov
call
inc
inc
mov
pushf
and
mov
int
mov
adc
sub
mov
(bad)
pushf
mov
cmp
mov
xor
test
mov
pop
mov
out
idiv
into
js
push
scas
sbb
jg
mov
aam
pop
cdq
cmp
mov
icebp
inc
ds
dec
push
xor
popf
loope
adc
jle
sub
inc
jb
mov
(bad)
cdq
cmp
cld
mov
jno
push
jne
popf
xchg
or
mov
sti
pop
stos
sbb
cs
mov
pop
sub
mov
sub
enter
add
sar
xchg
mov
dec
sbb
test
push
call
xlat
test
outs
pop
retf
or
in
bound
sub
or
ret
sub
dec
cdq
jno
mov
iret
xchg
in
mov
addr16
inc
dec
adc
cmc
mov
lea
pop
jle
xchg
jnp
cmp
mov
and
inc
pop
ins
sub
dec
cmp
push
ds
sar
mov
jle
dec
mov
pop
ds
in
mov
jmp
mov
cmp
adc
push
test
in
or
jb
pop
in
mov
in
(bad)
sbb
and
in
sbb
rol
jl
rol
cs
js
adc
cmps
call
mov
jnp
inc
in
dec
add
mov
or
out
inc
jnp
jmp
mov
cmp
aam
sbb
pusha
out
sub
sbb
(bad)
pop
scas
and
push
repnz
inc
xchg
xchg
xor
bnd
add
pop
pop
outs
dec
cmp
sbb
inc
cmp
popf
imul
repz
out
int
shr
cwde
push
imul
dec
lea
jnp
jle
js
scas
les
je
je
lahf
adc
lods
scas
rcr
jae
cdq
arpl
pusha
rcr
pop
minps
mov
and
mov
cmp
xchg
ss
jp
jno
adc
aad
(bad)
push
adc
or
(bad)
std
rcl
adc
dec
shr
ret
aaa
cmp
xchg
cmp
sub
popf
sti
outs
fld
mov
add
sahf
mov
xchg
xchg
jge
adc
(bad)
lahf
sub
inc
stc
sti
cmc
sub
fcmovu
jg
sbb
jmp
comiss
(bad)
(bad)
jo
fdiv
cmp
outs
fidivr
sbb
sbb
cwde
ror
ret
jns
js
adc
push
in
bound
or
cwde
xchg
(bad)
mov
fisttp
push
std
jae
mov
or
push
in
leave
dec
inc
leave
popf
leave
loop
or
iret
imul
stc
int3
mov
lods
xor
out
sbb
ret
sub
pop
mov
aam
jns
push
cmps
fnstcw
mov
scas
dec
fcmovne
xlat
xor
mov
mov
stc
int3
mov
ins
sub
push
repz
adc
or
aas
cld
push
hlt
fmul
cmp
sub
(bad)
sbb
jbe
je
push
dec
xlat
cmp
(bad)
loopne
sub
clc
out
push
call
pusha
iret
(bad)
ror
neg
inc
cdq
mov
addr16
and
test
pop
or
repz
sbb
mov
push
jmp
xor
aaa
xchg
mov
or
jge
int
jmp
mov
(bad)
sub
fdivr
in
cld
imul
and
inc
push
bound
inc
mov
js
sbb
(bad)
cwde
sub
imul
add
xor
jb
dec
mov
jg
pop
sbb
jnp
adc
rcl
test
jmp
mov
in
sub
lods
int3
rcr
jle
pusha
clc
sub
mov
fst
ss
bound
mov
push
push
outs
xlat
mov
xchg
int3
outs
xor
ins
add
mov
jno
mov
fwait
movs
push
mov
in
xchg
call
mov
jl
fdivr
push
sbb
fwait
js
cmp
ds
pop
jg
push
(bad)
aas
out
in
pop
jecxz
in
mov
int3
aam
xor
outs
adc
icebp
inc
and
push
xchg
sub
stc
stos
es
iret
neg
or
pop
xor
xchg
jae
sub
(bad)
(bad)
scas
mov
popa
les
pop
sub
mov
(bad)
bound
or
sub
sub
pop
hlt
rcr
int3
sub
nop
sub
fmul
retf
sub
or
or
retf
int3
loop
sbb
sub
cmp
mov
cwde
imul
fcmove
jns
mov
loop
push
dec
lods
xor
cmp
mov
fisttp
rcr
(bad)
scas
clc
mov
call
sbb
fsub
pushf
xor
(bad)
call
or
mov
mov
mov
push
sbb
test
retf
out
dec
pushf
out
call
and
mov
xchg
xchg
aaa
(bad)
daa
or
lea
and
cmp
fild
sti
pop
xor
and
pop
jp
fcom
mov
movs
add
mov
fwait
add
popf
shl
call
fwait
sub
sub
test
sub
cmp
pop
sbb
mov
push
ret
arpl
lods
jp
cmp
or
js
iret
leave
pop
mov
mov
mov
sbb
aas
or
fldenv
fstp
cmp
call
call
call
mov
or
pop
or
push
fisubr
jge
(bad)
je
stos
jb
cdq
fistp
dec
popf
mov
sub
jg
push
or
jle
in
mov
imul
cmc
adc
sbb
jne
pop
lahf
cs
mov
inc
rcr
loop
mov
pop
adc
(bad)
jle
sti
sar
or
stos
pop
out
xor
sub
pop
fs
xor
mov
mov
or
and
or
fs
sbb
popa
data16
and
mov
xor
jl
sbb
mov
out
aam
adc
idiv
dec
fs
div
inc
mov
or
and
cmp
xchg
or
ror
mov
retf
mov
or
add
scas
dec
mov
jle
push
and
(bad)
mov
je
iret
mov
pop
repnz
sub
in
movs
jle
stos
popf
or
jno
scas
inc
sub
mov
scas
sbb
xchg
call
lea
(bad)
bts
cmp
or
loopne
rcl
and
std
sub
pop
fnstcw
pop
inc
je
clc
dec
jmp
or
outs
imul
cmps
inc
push
lods
push
mov
call
dec
cdq
outs
hlt
xchg
mov
inc
jmp
xchg
sar
mov
in
lea
dec
nop
jp
sbb
inc
jns
popf
push
outs
sti
mov
loopne
jns
push
std
arpl
lods
aad
mov
movs
(bad)
rol
ins
jns
xor
test
adc
pop
inc
clc
fisttp
retf
or
sbb
aam
adc
sub
xchg
ja
mov
pop
in
push
xchg
sbb
int3
push
mov
inc
clc
in
or
fstp
jae
mov
ficomp
mov
jb
mov
call
jo
arpl
cmp
daa
mov
(bad)
jnp
fistp
fnstsw
sbb
pop
scas
int3
and
std
sbb
cmp
rol
popa
stos
hlt
in
jo
ins
pushf
mov
adc
popa
mov
mov
pop
mov
jecxz
push
or
jg
je
or
shr
mov
and
mov
mov
sub
add
aas
leave
loop
call
in
loop
(bad)
or
pop
fistp
loopne
adc
mov
aas
push
mov
pop
les
and
shr
dec
or
scas
cli
sub
dec
jb
cmp
add
leave
sbb
add
or
inc
ret
jmp
jns
dec
mov
fdivr
jo
shl
cmp
retf
push
fimul
push
in
cmp
or
push
sbb
push
inc
lahf
sub
pop
movs
enter
in
je
xchg
icebp
sbb
mov
mov
adc
neg
dec
js
add
push
or
sbb
or
dec
add
pop
or
mov
daa
mov
xchg
cmc
mov
dec
(bad)
fimul
jp
int3
stos
adc
pop
fisttp
push
ror
or
push
leave
dec
int3
push
iret
leave
push
lahf
cmp
mov
test
sub
in
aas
in
cwde
jge
mov
or
sub
(bad)
dec
out
cmp
mov
mov
mov
sbb
dec
mov
or
sbb
push
arpl
jns
(bad)
cwde
cld
dec
dec
cmp
pop
call
ja
mov
outs
aad
mov
call
(bad)
push
ins
leave
sbb
sti
or
dec
jmp
inc
push
clc
mov
mov
inc
mov
jl
inc
stos
push
mov
pop
mov
fmul
push
mov
sub
sbb
mov
sbb
lds
in
sub
mov
dec
in
inc
push
outs
cdq
call
jle
in
test
std
pop
and
sub
sub
ret
cmp
push
sub
std
jl
nop
cli
jb
pop
mov
or
in
cmp
xor
es
cmp
rol
in
gs
popf
dec
js
mov
cmc
lods
jl
jbe
outs
and
mov
adc
pop
leave
cmp
ins
mov
(bad)
cmp
push
stos
push
in
xchg
mov
sbb
test
cmp
jge
pop
cmp
mov
popf
inc
or
ror
cmp
cmp
dec
push
rcr
pop
add
stos
stos
cld
ins
pop
or
sub
sbb
pop
outs
jle
(bad)
clc
or
mov
pop
lods
(bad)
jmp
dec
lea
(bad)
fsubr
js
cdq
pop
mov
lods
mov
sub
rcr
cmp
outs
in
push
pop
ds
or
jb
mov
jp
push
jp
lock
xor
je
cmps
jge
ds
add
inc
jp
(bad)
sahf
push
out
push
out
js
arpl
int3
out
int
pushf
cmps
cmp
push
lahf
and
sbb
jbe
add
mov
jl
push
mov
outs
fs
fidivr
lods
pop
int
push
dec
stos
xor
jmp
in
aam
add
fcomp
inc
shr
mov
mov
call
sbb
lock
inc
jbe
mov
dec
test
inc
lds
push
push
and
jno
aam
jecxz
mov
pop
push
enter
fsub
inc
lea
in
inc
int
scas
xchg
xor
cmp
in
call
sbb
test
pop
or
pop
repnz
test
push
into
dec
fcom
mov
retf
sar
jb
fld
test
jge
inc
test
ror
aam
add
mov
mov
dec
or
fs
ins
cmp
pop
lods
sbb
retf
ffreep
loop
out
mov
sub
pop
sub
imul
adc
jl
sbb
mov
sub
int
outs
cmps
dec
imul
adc
sub
ds
clc
or
jp
dec
mov
in
lock
adc
sbb
pop
push
mov
clc
sbb
js
into
ja
push
mov
adc
mov
push
lods
(bad)
imul
jb
in
fdiv
inc
pop
fistp
add
or
push
or
arpl
je
inc
in
mov
cs
pop
jns
cmp
dec
scas
mov
sbb
js
cmps
icebp
lahf
cmp
jb
lahf
jmp
leave
dec
cs
add
pop
xchg
in
jmp
and
addr16
xchg
and
and
fmul
cdq
repz
mov
sub
pop
scas
(bad)
test
dec
sub
mov
adc
inc
out
mov
icebp
mov
mov
ja
dec
fsubr
pusha
cs
jg
shr
movs
xor
fcom
ror
jne
or
sbb
hlt
cmp
mov
iret
js
adc
imul
lahf
jl
sub
adc
cmc
cmp
es
nop
dec
sub
inc
sbb
inc
pop
push
dec
or
out
js
in
xor
adc
xchg
pop
in
mov
push
mov
or
(bad)
and
mov
jmp
cs
std
mov
sbb
cwde
or
cmp
sub
or
fadd
cmp
adc
xor
aad
(bad)
or
jnp
bound
push
mov
je
scas
dec
mov
jmp
je
sub
xor
pop
mov
adc
clc
dec
repnz
xchg
ins
jmp
nop
jnp
jmp
mov
fst
push
cmp
pop
sbb
sti
pop
popf
sub
cwde
(bad)
int3
jne
add
jne
pop
loop
enter
je
and
jmp
int3
popa
in
loopne
out
inc
dec
mov
add
mov
push
sbb
(bad)
ret
mov
dec
adc
(bad)
cdq
daa
or
dec
xchg
popf
push
lds
push
or
ror
rcr
out
pushf
and
in
ja
jmp
(bad)
in
lock
loop
pushf
lahf
retf
push
sbb
mov
or
mov
xor
push
pop
cmp
mov
outs
lock
cmp
inc
aaa
dec
fst
popf
cmp
movs
(bad)
ds
int3
sub
(bad)
and
call
push
nop
mov
clc
push
cmc
cwde
paddusb
paddd
pusha
push
mov
lods
jmp
cmp
sti
mov
call
pop
dec
cwde
jnp
jnp
mov
std
std
icebp
pop
sub
pushf
push
ja
sbb
cmp
pop
inc
cdq
mov
out
cmp
cmps
mov
push
jl
mov
sbb
ret
cmp
scas
pushf
pop
pop
cmp
stc
cmp
push
movs
mov
mov
sbb
fbstp
jmp
mov
mov
in
and
ss
inc
mov
jns
sub
lahf
dec
sub
pop
lock
sub
sti
and
cmps
pushf
outs
push
pop
in
fbstp
(bad)
fsub
inc
out
clc
(bad)
ror
mov
fbstp
push
fsubrp
cli
stos
mov
movs
xchg
(bad)
push
mov
cmps
jecxz
and
push
push
shl
and
mov
imul
inc
cmp
mov
xchg
cdq
aad
jp
pop
enter
mov
jmp
dec
js
(bad)
xchg
xor
push
pop
cmps
dec
dec
push
xlat
sar
ins
jnp
dec
xchg
(bad)
jecxz
std
les
or
cwde
xor
add
push
fidiv
inc
aad
pop
jp
mov
cmp
mov
in
mov
int
sub
cdq
mov
int
in
or
xor
leave
sub
sbb
movs
sub
sub
pop
and
xor
mov
add
and
in
mov
sahf
mov
push
ja
cmp
addr16
cmp
das
fistp
sar
dec
imul
leave
cwde
fcomp
sbb
pusha
mov
dec
xor
xor
stos
not
push
out
lds
test
jnp
pop
and
cmp
lea
sar
mov
das
push
(bad)
fisttp
mov
push
cmp
push
outs
jo
popf
adc
mov
sbb
mov
dec
rcl
jno
stc
cmp
fnstsw
imul
iret
aam
xor
and
je
mov
dec
inc
call
push
cld
adc
call
pop
jb
jg
mov
dec
push
les
ret
in
sub
outs
out
cs
enter
sar
cdq
pop
lods
imul
lahf
(bad)
mov
mov
mov
push
sbb
mov
jecxz
adc
mov
les
sahf
sar
add
pop
int3
retf
pop
(bad)
in
call
popf
pop
push
adc
fmul
push
push
push
and
mov
std
jl
mov
mov
inc
dec
dec
push
mov
cdq
movs
dec
call
mov
dec
mov
cli
jl
psubusb
sti
sub
sbb
xchg
sbb
pop
xor
mov
stos
outs
push
mov
mov
bound
stc
xchg
aad
enter
rcl
test
ds
sbb
adc
(bad)
sub
in
call
idiv
ja
fistp
mov
push
iret
jo
jmp
popf
dec
cmp
and
dec
call
add
stos
mov
sar
push
mov
lods
adc
cmp
shl
add
or
cld
jns
push
sub
dec
arpl
lds
aad
mov
in
pop
xchg
leave
sbb
cmc
imul
xchg
pop
outs
push
lods
fxch
cmp
cmp
ins
or
add
popa
lock
add
stos
cmp
push
sub
sbb
jecxz
dec
xchg
xchg
jl
aaa
jmp
dec
mov
mov
push
pop
push
popf
or
cli
xor
pop
cmp
int3
mov
(bad)
stos
popa
mov
jnp
sub
fs
dec
into
sar
push
add
xchg
mov
pop
add
and
pop
mov
jg
mov
call
adc
outs
jo
xor
and
sbb
clc
inc
clc
inc
stos
ds
popa
aam
xchg
add
mov
cmps
jb
movs
call
pop
call
mov
pop
or
sub
daa
push
sahf
imul
dec
xor
mov
jb
cld
or
dec
int3
mov
sbb
mov
scas
test
into
jb
jns
mov
mov
and
shl
popf
mov
jo
push
cmp
push
fisttp
push
jmp
sub
std
cmp
bound
mov
inc
xor
(bad)
and
es
xor
in
mov
or
outs
in
std
or
repz
add
inc
mov
inc
leave
jecxz
fisttp
sub
call
cdq
test
stos
push
call
aas
push
mov
fnstcw
ja
push
out
cmp
and
imul
push
xor
cmp
cmps
fwait
dec
pop
cdq
sbb
sub
xchg
push
sbb
xchg
jmp
pop
leave
xor
cwde
sbb
into
fnstsw
cmp
sbb
sub
push
fst
fldcw
int
imul
dec
push
or
push
cdq
pop
leave
sub
icebp
out
xlat
loope
mov
and
outs
dec
lea
cld
sub
push
mov
test
cmp
sub
sbb
cmovne
xchg
jne
std
mov
outs
fld
xor
cmp
imul
lods
push
cmps
pop
in
cdq
sub
loop
sub
lods
dec
xchg
pop
dec
mov
inc
dec
(bad)
mov
mov
jmp
sub
in
jmp
fcmovnbe
or
cli
test
es
mov
adc
rol
sbb
shr
sub
and
cdq
pop
dec
lds
ins
pop
(bad)
and
ins
mov
jb
inc
or
lods
sbb
int
or
pop
mov
data16
dec
cmp
retf
inc
push
add
or
inc
iret
cmp
sub
inc
call
dec
jae
repz
mov
sbb
dec
and
sbb
mov
cli
sub
repz
in
repnz
pop
sub
push
fisttp
sbb
cmp
scas
lods
add
pusha
dec
jno
outs
sar
pushw
or
xor
sbb
and
mov
inc
xchg
jo
jecxz
push
inc
pop
cli
cmp
ret
sbb
icebp
xor
xor
push
stc
js
mov
adc
xchg
or
int
mov
mov
(bad)
fisttp
scas
sub
dec
or
imul
lds
dec
sbb
repnz
push
lock
sub
xchg
mov
or
imul
or
sbb
sbb
movs
pop
or
push
popf
sbb
pusha
xlat
mov
mov
lea
in
leave
push
outs
(bad)
fs
pop
jmp
scas
pop
mov
dec
fwait
push
mov
mov
pop
sbb
in
lahf
clc
dec
ins
pusha
or
push
mov
jb
std
jae
scas
sub
sbb
pushf
mov
aad
ss
inc
sbb
pop
mov
repnz
pop
mov
ror
fild
xor
adc
call
mov
ins
pop
pushf
ja
push
sbb
mov
fld
dec
rsm
inc
push
ins
mov
xchg
es
ja
imul
add
sbb
adc
int
scas
das
scas
es
mov
fld
ret
jmp
xor
ins
stc
adc
lock
movs
cmp
jmp
std
dec
iret
pop
mov
mov
nop
imul
retf
pop
daa
sti
hlt
pop
or
jns
nop
dec
cwde
call
adc
js
jge
neg
mov
aas
es
pop
mov
jecxz
push
(bad)
mov
push
mov
dec
pop
cmc
sti
jbe
adc
cli
mov
aam
sub
(bad)
aas
lds
adc
push
nop
and
pushf
xchg
cdq
inc
retf
sbb
fsub
(bad)
jge
xchg
ins
jp
inc
push
mov
cmp
or
add
lods
cmps
inc
(bad)
into
dec
mov
loopne
jl
cld
add
sub
mov
call
pusha
clc
sbb
in
pop
add
movs
mov
mov
jo
arpl
pop
adc
ds
into
lock
(bad)
push
hlt
popa
cmp
push
dec
in
test
inc
sti
sbb
aas
xchg
out
retf
dec
scas
mov
fldl2e
jae
into
mov
in
dec
int3
mov
jmp
mov
dec
sbb
pop
ds
int3
sub
or
fs
retf
pusha
jmp
mov
fstp
jge
mov
xchg
xchg
dec
xor
rcr
nop
loopne
pop
mov
cmp
lock
jae
mov
push
pop
cmp
xor
adc
add
sti
mov
(bad)
push
out
fwait
out
daa
pop
jae
(bad)
gs
outs
sub
jg
in
dec
mov
jp
jnp
(bad)
sbb
xor
adc
ss
adc
popf
xchg
(bad)
mov
push
mov
ds
sahf
jge
leave
pop
sbb
jp
mov
cdq
(bad)
in
or
fmul
or
adc
pushf
jo
bound
daa
xor
mov
add
sti
call
xor
dec
test
call
bound
sbb
fcom
pop
jp
xchg
add
and
enter
(bad)
in
dec
std
pushf
inc
dec
fld
loope
mov
(bad)
sbb
inc
push
xor
mov
ins
(bad)
in
bound
(bad)
cld
imul
into
xlat
sahf
pop
mov
ins
mov
cli
pop
xor
fsubp
jo
dec
jl
mov
push
mov
mov
mov
adc
sbb
arpl
test
popf
mov
stc
pop
lds
int
mov
push
les
dec
push
mov
cmp
xor
jmp
jne
jmp
add
sbb
nop
int
call
inc
cs
inc
or
inc
cmp
inc
dec
xlat
cmp
xlat
push
jnp
inc
cmp
or
fwait
(bad)
fidiv
xor
sub
add
jmp
(bad)
xchg
jo
add
sub
mov
gs
scas
neg
push
aas
cmp
fstp
or
push
in
ins
rcl
ins
aam
push
and
mov
lahf
cdq
push
in
fmul
int3
stos
sti
and
dec
or
sbb
cmp
ins
or
dec
fwait
ins
ret
jg
imul
mov
add
jbe
dec
sub
jl
das
je
in
pop
inc
bound
cld
push
fstp
stc
hlt
pop
fwait
xor
or
push
pop
cmp
out
xlat
mov
nop
cli
icebp
daa
mov
and
mov
sbb
sub
jmp
adc
mov
mov
jl
ins
outs
call
xlat
imul
daa
jno
push
cmp
cmp
sbb
mov
sub
in
scas
and
jle
pop
and
mov
fidiv
jl
dec
mov
and
cmp
jmp
pop
mov
sbb
mov
mov
push
aas
mov
pop
fimul
lock
or
sbb
les
dec
dec
popf
mov
push
pusha
test
call
popf
sbb
jae
loop
repnz
push
clc
retf
sar
cdq
mov
call
in
(bad)
test
cmp
(bad)
cmp
js
out
sti
mov
in
mov
xchg
stos
mov
imul
mov
ins
jmp
mov
test
ret
sub
fsubr
xchg
cmp
or
ja
xchg
and
mov
mov
pop
loop
pop
xor
dec
sbb
fadd
mov
shl
fsubr
add
push
push
int
call
fldcw
in
(bad)
ffree
dec
cmp
sub
push
iret
push
sbb
or
stc
test
outs
adc
in
popa
mov
push
xor
or
stos
cmp
pop
pusha
mov
dec
xor
jns
sub
or
pop
adc
sub
loop
repnz
retf
lods
sti
not
lea
push
or
pop
adc
inc
daa
mov
inc
sar
fistp
or
sub
scas
fimul
xchg
fdivr
in
xor
lea
(bad)
iret
jns
mov
in
jle
mov
xor
mov
dec
mov
sbb
sbb
stos
or
mov
add
pop
adc
mov
cmp
enter
repnz
cmc
fdivr
rcr
sbb
xor
adc
or
pop
mov
sbb
mov
test
dec
dec
clc
push
sbb
jne
jmp
leave
loop
mov
push
pop
sbb
sbb
dec
or
pop
jb
add
cmc
(bad)
stos
lods
les
push
add
stos
sbb
adc
pop
cmp
inc
cmp
pop
fild
div
jbe
pop
daa
mov
sbb
lock
int3
xchg
dec
(bad)
cld
xchg
sbb
sub
mov
push
in
lahf
push
aam
shr
fistp
repnz
and
int3
shr
push
ins
adc
loop
mov
mov
mov
jns
dec
aam
cmp
scas
sub
cmps
ins
adc
mov
add
clc
out
js
ins
loopne
lea
gs
adc
sbb
sub
ror
sbb
or
rcr
gs
call
cmps
mov
jge
pushf
outs
jp
cmp
in
jg
fisttp
imul
popa
lods
ficomp
fnsave
mov
mov
fwait
out
retf
dec
and
push
mov
or
call
lahf
xchg
add
push
test
lahf
sub
cld
lea
xor
mov
(bad)
push
sbb
cwde
add
repz
xchg
pop
fsubr
lods
out
fsub
or
sbb
xchg
neg
stc
inc
cmp
push
add
inc
jmp
xchg
sub
dec
jg
lds
outs
add
movs
out
mov
adc
retf
pop
aam
out
outs
(bad)
adc
lds
jmp
add
or
mov
mov
sbb
cwde
mov
or
fwait
mov
mov
out
pop
fwait
int3
popa
jns
cld
xchg
sahf
jbe
sub
js
sub
adc
xor
add
push
(bad)
fld
lods
hlt
ins
push
lock
cmps
mov
pop
inc
test
dec
pop
popf
adc
fstp
push
stc
jg
sbb
jle
(bad)
and
cs
inc
pop
xchg
in
mov
ret
into
sbb
push
(bad)
ja
repz
cli
ins
cmps
sbb
jns
in
add
pop
push
clc
sub
inc
call
fidivr
jne
nop
fiadd
or
xchg
cwde
out
mov
aaa
loope
pop
sbb
xchg
call
into
jbe
push
xor
push
call
push
mov
pop
cld
lock
mov
inc
xor
imul
test
xchg
daa
loope
mov
stos
xor
jge
mov
mov
(bad)
das
pop
push
jmp
outs
mov
inc
mov
mov
mov
aam
fist
push
dec
stc
clc
or
in
test
cmp
jg
(bad)
into
js
cmps
sbb
cdq
push
int3
mov
test
jge
das
push
fadd
and
cdq
dec
add
sbb
push
cwde
pop
(bad)
or
fdivr
in
pop
add
mov
stos
popa
aam
clc
adc
adc
cmp
push
imul
jo
lods
push
jge
dec
pop
into
pop
int3
or
das
das
push
mov
cs
jne
shr
mov
mov
(bad)
push
mov
popf
hlt
les
and
fdiv
scas
movs
sub
in
arpl
dec
mov
cdq
jnp
test
cld
(bad)
sbb
mov
ins
sahf
in
jne
cmp
fsub
sub
sar
pop
pop
lahf
fstp
pop
bound
cmp
push
push
sbb
popf
data16
retf
xchg
jns
ins
loop
leave
and
or
sbb
inc
ins
push
push
mov
jl
nop
ret
jge
test
mov
mov
cbw
stc
fcomi
dec
cdq
inc
jg
xchg
inc
adc
sar
out
shl
xor
push
les
sahf
(bad)
(bad)
lods
sahf
popa
dec
cmc
out
lds
pop
addr16
xchg
icebp
jmp
sub
out
cs
cli
sbb
push
outs
lods
inc
push
sub
pusha
inc
dec
dec
loop
mov
mov
dec
inc
pusha
pop
movs
or
fcom
push
fldcw
int
cld
jb
mov
pop
dec
cmp
(bad)
cmp
out
pop
sub
lds
push
or
xor
mov
ins
mov
leave
xchg
imul
xor
xchg
je
aad
enter
nop
jl
dec
mov
xor
ret
dec
cwde
aam
(bad)
rcr
enter
or
test
mov
pusha
mov
and
mov
inc
adc
call
mov
not
inc
scas
adc
or
addr16
mov
mov
add
pop
xchg
pop
add
test
push
jo
rcr
cmp
rcr
(bad)
cmp
stc
xor
fcmove
inc
sub
cmp
outs
mov
push
sar
or
fidivr
sbb
fwait
imul
dec
test
inc
pop
fst
or
jns
popf
pop
js
add
imul
dec
pop
xchg
jecxz
lock
jne
les
jl
jmp
sub
sbb
int3
cmps
cmp
stos
mov
sbb
push
int
or
jmp
jge
and
mov
clc
inc
setb
gs
xchg
fstp
or
ins
popf
mov
es
ror
adc
stc
pop
stc
lods
cdq
sti
sbb
mov
idiv
dec
or
bound
cmp
lahf
jo
pop
addr16
sub
cmp
push
adc
clc
fstp
fsubr
pop
(bad)
pop
nop
pop
outs
adc
std
cmp
sub
dec
and
pop
popf
adc
enter
in
inc
ficom
mov
cmp
push
sub
cli
fcmove
inc
rcr
mov
jle
lea
mov
fcomp
fwait
int3
inc
add
pop
mov
mov
push
mov
adc
pushf
add
pop
sti
outs
dec
fistp
imul
mov
loopne
jge
ror
mov
mov
xor
es
xlat
fisubr
sbb
sbb
jl
jmp
jl
sub
loope
mov
add
leave
call
in
add
jmp
add
imul
jns
(bad)
stc
fdivr
outs
fmul
adc
jo
fnsave
push
lds
gs
sbb
in
or
mov
mov
cdq
(bad)
fadd
cmp
mov
fstp
pop
dec
lods
mov
push
xor
jge
push
rcr
and
push
fwait
ins
dec
push
push
fcomp
test
int
imul
sub
push
mov
enter
enter
fld
clc
ret
adc
mov
imul
outs
dec
push
jmp
jle
mov
idiv
adc
push
jmp
cld
push
or
jnp
jmp
push
out
mov
or
push
stos
sbb
scas
jno
in
test
imul
inc
dec
(bad)
push
test
call
ins
mov
lea
inc
dec
pop
jp
xor
sbb
push
(bad)
clc
sub
fstp
pushf
cmps
and
jno
cmp
je
or
push
fmul
xor
jbe
jl
fxch
pop
push
mov
inc
cmp
pop
jbe
stos
pop
popa
cwde
add
pop
fidiv
fnstenv
mov
fs
mov
jg
dec
int
rcr
mov
out
call
stc
leave
dec
imul
(bad)
fild
enter
pop
test
mov
ss
cdq
(bad)
jge
ins
cmp
push
sub
lods
das
mov
icebp
adc
cmps
mov
lea
cmps
sub
sbb
ss
imul
jge
jae
lods
sbb
leave
loop
mov
or
mov
inc
adc
xchg
mov
pop
outs
div
mov
adc
js
jns
outs
clc
cmp
mov
cmps
das
sbb
cmp
cmp
push
sbb
pop
xchg
fisttp
or
sti
ins
loop
sub
popf
hlt
jns
adc
fmul
dec
dec
out
sbb
scas
or
mov
pop
sub
es
dec
add
and
dec
mov
rol
scas
seto
pop
mov
(bad)
aas
cmp
das
test
ja
pop
cli
push
jge
mov
shl
sub
inc
add
(bad)
or
sbb
mov
rcr
outs
es
adc
cld
jb
lds
dec
mov
sbb
cmp
jne
dec
xor
push
or
loopne
pusha
dec
push
sbb
aaa
dec
fcomp
in
loopne
sbb
xor
jl
sub
jb
out
mov
outs
rcr
loop
xor
ficom
jl
pop
int3
cmp
jp
push
sbb
jns
ins
retf
adc
ror
(bad)
push
adc
cmps
imul
sub
leave
lods
cmp
xor
sub
inc
inc
into
fwait
adc
fdivr
dec
in
jno
popf
mov
int
fs
repnz
dec
jg
or
mov
fisubr
dec
cmp
retf
in
sbb
xchg
or
imul
in
dec
int3
js
sub
int3
add
cmps
gs
movs
retf
xchg
xor
xor
and
ins
mov
jl
js
cmp
ret
pop
sub
fwait
out
jnp
xor
jp
cmp
aaa
push
cmp
push
stos
stos
and
daa
cs
mov
lea
mov
pop
ror
xchg
out
repnz
scas
dec
sahf
push
out
sbb
(bad)
scas
xchg
mov
(bad)
test
in
clc
xor
test
and
in
xchg
leave
out
outs
dec
add
lods
inc
lods
rcr
push
sub
js
mov
mov
fmul
ret
push
mov
iret
sbb
popf
nop
add
xor
and
mov
repnz
sbb
call
cmp
leave
mov
addr16
idiv
stos
push
hlt
rcl
xchg
or
call
cmp
jbe
lock
lock
add
call
lock
inc
dec
stos
(bad)
clc
bound
jp
lock
sub
int3
sub
test
rol
jnp
xlat
nop
pop
cld
push
jne
popa
fs
cmp
clc
cmp
mov
jmp
out
stc
js
imul
sbb
xor
pop
push
mov
sbb
dec
mov
in
jge
les
xor
mov
ds
cdq
int3
pop
js
mov
loopne
sbb
scas
mov
adc
pop
sar
(bad)
stc
in
movs
and
jae
adc
js
sbb
aas
xchg
ins
jnp
dec
mov
das
mov
fistp
mov
mov
xor
std
jbe
pop
int3
cli
fisubr
in
or
mov
jns
cmc
or
call
jns
stc
in
push
xor
mov
mov
inc
sbb
call
aad
lods
pop
lahf
push
fisttp
in
retf
(bad)
pop
je
lods
js
mov
sbb
icebp
fld
fdivr
push
addr16
xchg
dec
mov
ret
sbb
sbb
in
out
pop
fcomp
sub
or
lods
push
sub
inc
fwait
or
sbb
pop
in
xlat
inc
or
ret
sub
mov
mov
mov
out
push
into
xchg
retf
leave
popa
pop
cmp
push
test
dec
lods
clc
int3
stc
inc
cwde
sbb
add
mov
shr
push
leavew
fmul
js
and
cdq
or
dec
cwde
pop
dec
mov
sub
mov
pushf
push
(bad)
stos
outs
mov
sahf
sub
ins
mov
je
enter
js
and
leave
jbe
jp
dec
fiadd
arpl
mov
push
stc
ds
adc
xchg
adc
test
xchg
add
or
loopne
(bad)
jmp
push
dec
or
pop
repnz
scas
sar
pop
or
cmp
fimul
in
pop
hlt
pop
mov
fcom
jle
inc
lahf
sbb
fistp
loope
ror
shr
dec
inc
sbb
mov
pop
rcr
mov
mov
loope
dec
add
xchg
inc
rol
clc
aaa
sub
cmp
test
ficomp
cmps
mov
xchg
cdq
call
jb
jb
xor
xor
ins
aad
imul
adc
dec
dec
xor
call
sub
pop
ror
scas
dec
sar
sub
std
pop
iret
pop
jnp
sbb
cmps
sbb
mov
fucomp
xor
ds
dec
fistp
cld
cmp
push
popf
cmp
mov
dec
or
push
mov
and
(bad)
inc
std
inc
pop
push
cmp
fbstp
fs
leave
dec
retf
daa
fmul
test
pop
aam
mov
(bad)
js
add
mov
dec
test
push
out
les
setl
out
sti
clc
pop
mov
daa
dec
push
push
pop
cwde
pusha
retf
dec
push
(bad)
xchg
and
sbb
and
in
xor
mov
push
or
or
sub
stc
enter
call
or
adc
(bad)
and
pop
jb
aad
clc
xor
pop
pushf
fwait
stos
xor
cs
mov
pop
fdiv
cmp
add
bound
movs
sti
in
mov
je
mov
add
hlt
fcmove
rcr
xor
adc
xor
icebp
mov
sbb
push
pop
retf
cmp
sbb
pop
in
and
push
xor
jmp
jmp
jnp
dec
lods
fdivr
mov
in
jo
jmp
mov
rol
fwait
add
js
push
(bad)
test
mov
(bad)
loopne
pop
jbe
and
pop
dec
je
pop
pop
or
adc
lods
mov
jl
mov
sti
std
call
mov
cmp
enter
mov
xor
popf
out
or
jle
movs
dec
test
cdq
and
ss
pushf
inc
cld
dec
mov
scas
mov
and
in
scas
pop
(bad)
jge
in
inc
xor
test
into
outs
(bad)
sub
repnz
sti
bound
dec
aam
fcmovbe
adc
dec
sbb
dec
mov
xor
mov
push
push
fnstsw
movs
outs
fnstcw
inc
lea
sbb
mov
dec
inc
addr16
cmp
pop
mov
and
xor
call
jns
nop
push
fnsave
mov
mov
inc
rcr
push
clc
ins
sbb
ror
fadd
cs
add
mov
xor
mov
in
pop
imul
mov
sub
pop
xor
movs
popf
dec
xor
push
xor
push
sub
mov
jle
fwait
sbb
scas
and
in
loop
frstor
jo
push
dec
nop
and
xor
jge
dec
adc
jmp
jne
jle
mov
popf
out
lds
fsin
(bad)
push
cli
push
pop
dec
pop
aad
lds
mov
jecxz
ret
aam
aam
outs
jnp
int
outs
es
mov
mov
(bad)
mov
xlat
leave
clc
pop
inc
je
out
test
pop
outs
stos
xchg
int3
sub
aas
imul
setns
mov
test
xor
imul
mov
and
mov
pusha
leave
jle
(bad)
test
jmp
adc
clc
sbb
push
mov
stos
sbb
shl
cmc
pop
aam
imul
or
jmp
xchg
cmp
enter
ror
mov
sbb
push
ds
push
rcr
cmps
retf
pushf
out
pop
and
sbb
mov
jno
scas
dec
or
retf
mov
hlt
sub
cmp
outs
js
ja
(bad)
imul
lods
scas
cmp
(bad)
push
lock
dec
popf
iret
pushf
scas
xchg
ins
pop
mov
ja
dec
shl
pop
mov
adc
mov
and
dec
sbb
mul
shr
add
pop
mov
jno
add
ins
fisub
sbb
push
jns
dec
jns
ins
call
inc
lea
lea
xchg
adc
pushf
sub
push
jbe
sbb
clc
fstp
or
std
repz
fcmovu
enter
in
std
mov
ins
sub
xchg
dec
out
(bad)
cmps
jl
mov
jmp
dec
into
(bad)
push
pop
or
in
push
jae
lods
out
dec
dec
push
fstp
enter
pop
stc
pop
cmp
or
xor
xor
inc
ins
outs
leave
stos
das
popf
imul
aas
cmp
imul
mov
jle
fstp
fucomip
or
call
jmp
and
push
mov
imul
xchg
out
mov
in
addr16
or
pop
daa
cmp
mov
data16
cld
mov
aam
lods
inc
cmp
adc
std
loopne
xchg
sbb
cs
or
push
inc
adc
push
push
cmp
call
cmc
imul
add
jmp
xor
loope
dec
mov
fcomp
push
loop
push
or
in
or
push
loop
addr16
in
stos
mov
test
js
sub
pop
xchg
cmp
cmp
sbb
jge
cld
clc
xchg
fmul
jl
aas
sbb
sbb
cmp
ret
movs
cld
sbb
imul
dec
cmp
ret
mov
sar
bound
inc
xor
repz
or
adc
sub
xchg
jae
fisttp
inc
push
or
scas
scas
mov
cmp
aas
push
imul
pop
psadbw
jmp
lods
iret
ds
mov
cmp
xchg
das
push
test
aaa
jb
jne
add
sbb
sub
mov
sbb
rcr
jmp
lea
rcl
sahf
cmp
out
imul
movs
mov
in
jae
and
mov
cmp
ds
or
lea
jg
mov
arpl
imul
dec
mov
(bad)
scas
cmp
sub
dec
clc
or
jmp
test
jb
mov
sbb
mov
jmp
pop
outs
push
cld
(bad)
js
mov
leave
xlat
pop
inc
pushf
push
aam
nop
scas
adc
int3
lods
or
cmp
call
or
dec
xchg
test
je
retf
jbe
(bad)
sub
xchg
cmp
test
jns
adc
movs
and
mov
adc
jne
int3
(bad)
int3
push
cdq
popa
push
int
aaa
std
push
pushf
lds
inc
pop
adc
pop
shl
mov
das
mov
pop
pushf
pop
daa
mov
mov
and
pop
stos
lods
leave
in
dec
mov
mov
mov
cld
ret
add
push
out
push
sbb
(bad)
jmp
mov
or
jne
xor
loopne
(bad)
mov
in
mov
fdivrp
jae
xchg
push
add
dec
jae
adc
inc
add
fwait
cmp
inc
xor
dec
xor
lods
sub
daa
fwait
test
fwait
xor
test
mov
dec
in
xchg
or
adc
sbb
mov
(bad)
mov
dec
ret
sub
jle
pop
neg
jp
std
adc
cmp
jns
cwde
dec
sbb
xchg
es
push
sub
jae
retf
sahf
shl
mov
sub
addr16
sub
cmp
pop
mov
sbb
adc
jecxz
mov
js
pusha
mov
sub
idiv
stos
push
test
in
shr
sbb
xor
inc
stos
sbb
mov
sub
jne
add
popa
push
lahf
xchg
or
sar
ja
lods
js
sbb
mov
cmp
pop
(bad)
cmp
data16
sub
dec
out
adc
pop
cld
adc
jl
push
out
add
inc
ds
popf
push
sbb
out
ja
outs
push
pop
cmps
adc
cmp
mov
call
scas
add
mov
(bad)
adc
pop
fild
int
popa
cld
mov
sbb
xchg
xor
mov
(bad)
fs
sbb
dec
clc
pop
or
jge
lods
inc
adc
popf
cmps
scas
mov
in
fadd
mov
pop
cld
ficomp
movs
xor
ror
outs
sbb
rcr
fstp
dec
fidivr
inc
push
test
ins
test
inc
mov
jecxz
add
aas
lods
int3
sbb
retf
sbb
or
sahf
mov
ja
and
jl
rcr
call
add
cmp
repnz
out
idiv
mov
lods
jl
imul
mov
inc
inc
out
fild
popa
mov
cmp
mov
or
pop
dec
adc
and
std
mov
jge
loopne
pop
sbb
into
fucomip
mov
imul
and
cdq
(bad)
(bad)
cld
mov
loopne
in
aam
(bad)
jnp
call
dec
or
mov
fisub
jmp
or
arpl
ins
fs
pop
mov
mov
mov
cld
or
aad
int3
push
mov
mov
sahf
data16
sub
cdq
test
adc
dec
jl
ss
outs
mov
cli
dec
sub
jbe
stc
ins
sbb
sbb
imul
lods
sub
sbb
push
les
mov
mov
or
cmp
dec
leave
cmp
sahf
xchg
out
push
mov
call
push
adc
out
xor
(bad)
sti
mov
iret
in
xchg
fmul
imul
lahf
jmp
mov
cmps
and
cmp
jne
js
and
push
fisttp
mov
(bad)
or
mov
icebp
(bad)
sahf
stos
push
mov
gs
call
call
adc
cdq
sti
leave
popa
stos
jmp
rcl
test
dec
dec
sub
and
mov
rcl
push
(bad)
adc
sub
mov
jge
shl
cmp
mov
pop
jne
movs
jns
dec
fmul
sbb
popa
in
inc
pop
into
push
pop
cmps
cli
mov
sub
cs
cwde
je
(bad)
fidiv
mov
sbb
sub
mov
sub
inc
bound
sahf
cmp
or
dec
lods
jb
mov
mov
push
push
fbstp
sub
out
std
pusha
int
and
jmp
lea
jecxz
popf
jb
sbb
pop
jle
and
or
sub
pop
push
push
mov
fdivr
push
int
pusha
or
or
stc
and
mov
fmul
clc
int3
pushf
ins
dec
je
and
or
das
stc
sbb
ins
test
mov
inc
call
dec
jns
mov
push
(bad)
fwait
lods
push
sbb
jns
pop
sub
mov
mov
or
mov
rol
jmp
ss
ja
fdivr
add
ficomp
and
arpl
jl
sub
or
or
pop
imul
sbb
and
cmp
cmp
pop
cdq
aas
stc
push
adc
mov
add
or
adc
sub
not
mov
ror
mov
push
jge
dec
pop
lahf
inc
xchg
mov
repnz
test
into
xchg
mov
dec
sti
pop
sub
xchg
dec
(bad)
std
inc
aaa
push
fisttp
es
clc
pop
inc
mov
imul
add
(bad)
pop
sbb
fnstcw
mov
sti
jo
xchg
mov
sbb
add
es
pop
inc
popf
sub
outs
inc
adc
daa
dec
inc
repz
pop
pop
int3
fsubr
ss
fimul
daa
dec
jl
jl
jl
mov
xchg
cdq
mov
cmp
pop
jecxz
scas
cmps
or
mov
enter
xlat
dec
test
sbb
out
jmp
mov
fucomip
adc
push
pushf
inc
mov
or
mov
test
stos
cwde
or
ret
mov
sub
pop
int
(bad)
inc
pusha
mov
push
mov
mov
fiadd
loopne
cmp
mov
div
sbb
call
fadd
popa
mov
mov
add
outs
call
fmul
std
call
pushf
xchg
mov
mov
cmc
and
addr16
sti
pand
int3
fst
pop
xchg
gs
jne
(bad)
(bad)
shl
inc
adc
jae
pop
loopne
sbb
pop
mov
test
jne
std
addr16
push
jle
inc
xor
mov
out
cdq
pop
aam
pushf
stos
and
stos
or
sbb
jb
push
in
dec
mov
out
ficomp
mov
mov
scas
cmp
mov
ds
scas
cmp
(bad)
sbb
mov
call
(bad)
sti
inc
sub
cdq
mov
mov
dec
out
jbe
retf
pop
iret
xchg
jl
popf
mov
mov
push
sbb
in
dec
pop
pop
pop
jmp
add
xor
or
leave
or
dec
call
jo
or
cli
jmp
cmp
ss
fisttp
pop
retf
dec
sbb
inc
cld
cwde
out
push
mov
push
or
fwait
sub
mov
push
jecxz
sub
jp
cmp
xor
mov
sbb
or
xchg
sbb
test
lds
or
mov
dec
lock
or
mov
in
add
in
inc
lahf
jecxz
in
stos
sub
mov
push
dec
mov
mov
ss
mov
loopne
pop
fadd
jl
dec
cli
add
and
out
adc
rep
xchg
(bad)
push
or
sbb
push
sub
adc
cmp
mov
je
movs
lock
mov
mov
cli
mov
loop
or
aam
or
add
test
xchg
push
inc
retf
fwait
arpl
or
dec
sub
mov
push
mov
lods
in
and
push
mov
sti
add
and
cmp
call
add
add
and
or
mov
mov
xchg
push
cmp
jns
pop
mov
or
inc
fist
outs
leave
xor
or
lods
add
or
dec
xor
stos
jne
xchg
or
xor
lods
or
jne
scas
call
pop
push
(bad)
mov
movs
sbb
ror
icebp
das
dec
xor
lods
sbb
test
es
rcr
jo
lds
int
jge
inc
fcomp
mov
cmp
arpl
dec
or
leave
fadd
jb
sub
lahf
sbb
in
jbe
or
or
sbb
mov
arpl
mov
lods
rcl
jo
in
pop
mov
stos
mov
leave
push
xchg
(bad)
clc
test
je
imul
dec
mov
enter
int3
jge
(bad)
sub
test
or
jmp
shr
sti
cmps
sbb
call
inc
dec
dec
inc
mov
mov
icebp
retf
pop
inc
popf
mov
cmp
stc
lahf
sbb
lea
xor
sub
cdq
fs
xor
adc
jno
dec
hlt
mov
int
fmulp
test
mov
icebp
sbb
push
repnz
push
push
lods
pop
adc
imul
cwde
stc
sub
in
sbb
pusha
dec
jmp
movs
fsin
or
adc
test
bound
or
frstor
jns
test
mov
int3
in
pushf
es
nop
sbb
or
leave
lea
jmp
jns
sbb
jge
imul
jns
and
cs
jo
call
mov
jmp
daa
(bad)
test
into
adc
cmp
cld
stos
imul
pushf
fwait
dec
cmps
xor
sub
push
sbb
clc
mov
push
stos
and
inc
sub
cmps
in
inc
xor
cmp
adc
int
dec
pop
pop
(bad)
cmp
mov
pop
bound
fnstenv
cmp
sbb
leave
inc
adc
sub
sub
cmp
mov
and
cmp
gs
xchg
add
dec
sahf
pop
fs
cwde
or
ret
test
jns
dec
pop
ret
fisttp
mov
pushf
mov
mov
lea
dec
lea
xchg
pop
ret
out
inc
pop
dec
jl
or
xor
dec
scas
dec
bound
add
pop
and
loopne
sbb
adc
inc
hlt
mov
loope
sbb
dec
hlt
in
enter
fdivrp
mov
ffreep
out
int3
and
retf
or
retf
ror
loope
pop
mov
fwait
or
ficomp
movs
mov
setae
lahf
test
xor
shl
sbb
or
js
lds
and
repz
push
ss
out
iret
mov
out
es
mov
daa
inc
repz
rcl
mov
jmp
mov
mul
pop
int
jg
jge
lods
pop
sbb
jge
jle
pushf
push
cmp
fidivr
fist
out
lods
push
leave
out
fcom
pop
cmp
pushf
test
lods
movs
pop
push
mov
xchg
fnstsw
push
adc
stos
cmp
adc
push
sbb
dec
int
dec
fimul
pusha
jo
push
add
in
call
int
cs
(bad)
das
pop
mov
ror
movs
push
aam
ret
sbb
stc
adc
scas
cmp
enter
sub
jae
fcomp
xchg
cdq
lahf
dec
jmp
cwde
xchg
sahf
push
cmp
jmp
sub
sbb
packssdw
pop
pop
lahf
xchg
mov
aam
sti
stc
ins
clc
or
dec
push
push
enter
js
or
and
pop
retf
test
aaa
sbb
mov
retf
mov
jmp
mov
cmp
pop
push
jnp
mov
adc
in
mov
pop
les
fimul
fistp
cld
sub
pushf
std
fbld
mov
mov
jmp
push
mov
movq
imul
xor
sbb
pop
fsubr
push
clc
xor
es
mov
(bad)
mov
iret
out
fnsave
gs
fiadd
std
push
pop
fimul
sbb
mov
mov
xlat
xchg
adc
adc
ret
test
dec
popf
xchg
hlt
out
jmp
push
jmp
cmp
mov
js
dec
hlt
retf
je
sti
ins
jbe
or
and
and
mov
ja
jle
or
cmp
or
or
icebp
lahf
or
sbb
lahf
inc
fisttp
mov
bound
and
push
xlat
pop
dec
dec
pop
sub
ins
test
popf
xor
mov
inc
stc
jne
pop
push
fadd
lods
and
es
xchg
xchg
or
jl
and
mov
pop
mov
popa
add
(bad)
sub
sub
sti
addr16
dec
xlat
pop
inc
cmc
cmp
or
in
push
cld
jne
mov
push
ror
out
aad
sahf
sbb
push
(bad)
jge
cmps
fwait
dec
sar
cmc
adc
sbb
or
(bad)
and
xchg
xchg
ins
jge
dec
clc
pop
mov
mov
pop
dec
sub
cs
sbb
fidiv
sub
dec
dec
and
test
dec
xor
add
outs
pop
push
cwde
popf
jno
or
or
xor
xchg
mov
sub
rol
fidivr
cmps
pushf
push
aaa
ins
dec
fst
cdq
leave
adc
(bad)
push
stos
sbb
out
jbe
cwde
mov
dec
ins
int3
aam
jmp
xchg
pop
fsubr
js
shl
jge
mov
push
cmp
inc
fstp
push
fidiv
cmc
ds
pop
popf
xchg
mov
nop
stc
ins
jp
cmp
enter
add
sbb
test
cdq
inc
icebp
xchg
in
xor
mov
out
js
pop
sbb
jne
sbb
clc
mov
ficomp
mov
push
pop
mov
addr16
scas
sbb
jmp
pop
imul
das
sub
jmp
cmp
adc
lods
jmp
ret
xor
jne
sbb
out
jnp
sbb
xor
mov
in
push
xchg
int3
inc
test
fwait
cmp
scas
movs
jmp
pop
imul
popf
cmp
aam
inc
mov
jmp
pop
add
loop
xor
fadd
retf
cdq
fnstsw
ret
iret
test
xor
jns
dec
jmp
push
sbb
cmp
daa
mov
adc
inc
push
and
hlt
sti
clc
cdq
(bad)
(bad)
jge
or
test
std
jns
or
sub
mov
adc
lahf
imul
aam
sub
or
mov
repz
mov
outs
call
test
adc
pusha
xor
pop
jge
repnz
or
mov
loopne
lods
fwait
lods
cmp
cwde
test
mov
cli
xchg
movlps
ficomp
(bad)
mov
cmc
fdiv
or
int3
sub
int3
outs
(bad)
rcl
jmp
repnz
mov
jmp
out
pop
(bad)
loopne
sti
sar
cmps
mov
in
dec
mov
ds
enter
jns
fs
leave
xor
xchg
js
push
or
lock
mov
imul
sub
in
mov
dec
(bad)
mov
pop
jbe
fisub
scas
push
push
lea
jle
mov
adc
fimul
outs
ins
pop
dec
or
in
or
es
sub
fdivr
in
xor
fs
sti
mov
and
pop
add
movlps
scas
sub
cmp
or
mov
ds
jle
into
sbb
mov
add
xchg
cmp
jne
cmp
dec
inc
jno
pop
js
mov
dec
mov
test
mov
repz
(bad)
dec
cwde
(bad)
loopne
(bad)
(bad)
loopne
jmp
fwait
cdq
ss
jb
cmps
ds
add
imul
sar
ja
ss
inc
nop
mov
pop
mov
sahf
sbb
mov
sub
es
mov
ds
sbb
or
test
dec
mov
out
push
jp
jg
in
xor
or
mov
aas
(bad)
icebp
pushf
inc
sti
lahf
add
ret
mov
mov
js
mov
mov
xchg
mov
dec
movs
in
cmp
sbb
xor
add
inc
or
lods
rol
ins
cmp
enter
push
imul
lahf
out
inc
in
sti
mov
cwde
popf
xrelease
xor
or
xor
(bad)
movs
sub
inc
dec
cmp
sub
mov
js
psubsw
or
or
cli
addr16
(bad)
jb
jmp
mov
cli
clc
jp
xchg
nop
push
sub
rdpmc
or
pushf
bound
dec
and
cmp
sbb
(bad)
jmp
in
jl
loope
scas
int3
xor
push
pop
jg
js
sbb
mov
jae
mov
or
mov
mov
mov
out
dec
xchg
pop
pushf
iret
enter
(bad)
xchg
or
push
sub
movs
pop
fs
cmp
ret
cdq
dec
xchg
into
mov
push
scas
push
test
add
(bad)
push
cmp
das
mov
loop
pushf
ins
repz
cmp
sub
out
fcomp
fsubr
sub
sbb
fstp
rcr
enter
clc
call
sbb
mov
jb
push
icebp
not
jae
mov
jg
or
mov
pop
aam
nop
sub
(bad)
into
retf
inc
adc
call
call
loopne
push
mov
in
lea
aaa
jb
sub
icebp
cs
mov
inc
js
fisttp
and
mov
fdiv
mov
mov
cmp
test
jl
icebp
sti
ficom
pop
dec
retf
fcomp
add
jmp
cli
fidiv
int
shl
pop
jmp
jbe
rcr
or
push
imul
div
arpl
stc
inc
pusha
inc
fldenv
in
stos
aas
(bad)
lods
push
retf
pop
inc
push
rol
mov
std
rcr
outs
lds
cdq
dec
xor
repz
lahf
dec
sti
repnz
jns
or
cmp
mov
cmc
outs
in
ret
mov
outs
jge
sub
sbb
pop
mov
cmp
pop
jecxz
clc
call
cld
push
mov
jne
loope
sub
call
xchg
dec
xchg
pop
out
jle
adc
test
sbb
pusha
enter
xchg
mov
push
cmp
stc
push
ds
xor
test
(bad)
fnstsw
out
xchg
cmp
sahf
sbb
in
ds
test
cmp
stc
outs
test
xchg
scas
and
popf
sub
xor
inc
push
adc
arpl
lods
jmp
dec
push
in
xlat
jl
je
test
ror
mov
cld
int
pop
xor
cmps
loopne
dec
in
jp
or
sar
leave
sahf
out
inc
add
mov
mov
mov
mov
pop
in
call
nop
sar
aam
cdq
mov
fdivr
int3
stc
ja
xor
lock
idiv
in
pop
push
pop
dec
jno
dec
xchg
push
leave
movs
and
movs
cdq
xchg
push
pop
jp
call
add
push
loope
scas
adc
dec
jb
hlt
sbb
arpl
or
adc
cld
sti
jmp
dec
ss
xor
cdq
and
imul
mov
or
dec
xchg
jecxz
pop
adc
mov
pop
pop
dec
out
xchg
and
mov
test
mov
xchg
or
lods
popf
mov
and
cmp
or
scas
in
retf
or
pop
dec
jo
ror
dec
ret
pop
push
test
xchg
movs
call
pop
std
imul
xchg
iret
dec
jle
cmp
inc
jl
cmp
test
mov
movs
ins
fsubr
adc
je
xchg
mov
mov
sbb
cmp
int
lods
xor
arpl
mov
mov
das
mov
push
aam
int3
jecxz
jp
and
adc
sub
fist
and
xlat
(bad)
cmps
in
ins
xchg
(bad)
cld
cs
(bad)
jge
es
adc
fidivr
pop
lea
dec
mov
fwait
(bad)
(bad)
je
scas
xchg
fdiv
mov
es
adc
or
sbb
push
sub
fldlg2
js
dec
daa
jge
xor
fdivr
add
pop
sbb
push
mov
rcr
call
jmp
sbb
adc
nop
in
pop
or
jl
das
or
adc
push
out
add
jne
mov
pop
sbb
cmp
in
jl
add
test
cwde
shl
xchg
repnz
sbb
lock
das
std
stos
adc
sar
or
or
ss
mov
push
xor
sub
mov
call
std
cs
bound
mov
sub
call
xor
data16
push
dec
imul
mov
and
add
add
out
xchg
sbb
imul
cdq
ds
call
and
call
outs
lea
mov
sub
mov
xchg
sar
in
push
test
int3
and
in
imul
cmp
fisubr
push
out
jae
(bad)
int
out
rcr
xor
(bad)
mov
inc
adc
mov
sahf
(bad)
push
xchg
sub
mov
ret
rcl
fdivr
imul
cwde
ret
xchg
jnp
dec
pop
sbb
out
call
sbb
test
js
push
cli
dec
(bad)
and
dec
jb
repz
aad
test
add
icebp
jnp
cld
adc
in
xchg
out
sbb
dec
and
sub
movs
mov
cmc
mul
sbb
clc
sub
data16
inc
jecxz
and
cmps
or
fdivr
fiadd
arpl
xchg
and
fwait
inc
in
sar
shl
or
or
lods
popf
retf
or
mov
dec
ss
xlat
dec
cwde
mov
pop
fnstcw
sub
int
push
mov
push
jmp
in
add
or
cmps
push
icebp
pop
mov
xchg
imul
xor
mov
mov
pop
dec
cmp
mov
sub
rcr
cmp
add
dec
jp
out
push
push
(bad)
xchg
xchg
das
mov
sbb
test
div
adc
outs
xchg
inc
or
or
inc
in
fiadd
xor
stc
movs
ret
sub
dec
cmp
cmp
movs
xchg
inc
jbe
or
push
add
jne
inc
rol
shl
and
int
js
mov
push
je
fist
cmp
push
pop
mov
ins
inc
push
sahf
inc
and
xor
push
(bad)
xor
lods
mov
jns
rol
or
sub
inc
pop
mov
cdq
test
test
scas
mov
cmp
inc
(bad)
shl
xchg
jb
add
cmc
aam
xchg
cmp
test
xlat
fnstcw
push
mov
push
jmp
sub
pusha
mov
jge
push
jle
mov
jg
dec
cmp
fisub
std
popa
push
ror
sub
jne
push
lods
and
loope
enter
sbb
stos
rcr
sbb
int3
in
mov
mov
push
cmp
mov
pop
ret
test
lock
lds
pop
sbb
jle
inc
jo
rcr
xchg
mov
outs
or
pop
fmul
add
push
dec
in
mov
fstp
sbb
jge
in
lods
jne
pop
dec
jmp
pop
stos
xor
(bad)
aaa
cmc
add
div
add
mov
cmps
ror
pop
test
(bad)
xchg
pop
iret
inc
fsubr
fidivr
aad
sbb
js
movs
fsubr
or
mov
int3
mov
repnz
mov
inc
add
jb
dec
mov
sbb
aas
mov
js
in
xor
sbb
popf
jmp
ins
add
jp
cdq
mov
out
xchg
dec
sahf
mov
push
jnp
xchg
repz
ret
mov
adc
call
sbb
jb
sub
popa
inc
inc
lea
mov
ins
test
ins
or
sbb
sbb
int3
aad
clc
popa
jno
mov
das
stos
adc
xchg
pushf
imul
push
lea
int3
loopne
test
ror
mov
outs
pop
sub
into
jmp
lock
das
sahf
out
bound
sbb
imul
mov
in
retf
retf
dec
das
jb
sbb
sbb
les
add
fadd
in
xchg
ss
mov
jnp
and
retf
xchg
add
loopne
sub
data16
and
arpl
pop
push
out
push
movs
movs
add
rcl
and
leave
cmp
jp
addr16
std
les
push
mov
out
adc
dec
inc
stc
inc
out
xchg
cmp
aaa
stc
mov
add
loop
dec
mov
out
mov
icebp
pusha
mov
add
cmp
lods
(bad)
aad
inc
in
or
movs
pusha
mov
sub
sub
push
or
inc
or
cmps
and
out
sbb
adc
clc
mov
inc
and
ins
add
es
in
dec
push
mov
fidivr
inc
call
lods
shr
inc
ja
sub
mov
hlt
push
enter
les
xor
das
push
mov
leave
lds
sbb
ficomp
movs
pop
push
sbb
imul
inc
push
inc
xor
adc
push
(bad)
mov
jne
dec
lock
mov
xchg
or
retf
jmp
(bad)
adc
jbe
mov
dec
mov
hlt
call
hlt
fnsave
das
leave
pop
dec
adc
cmp
pop
xchg
pop
lock
jmp
aaa
ror
adc
lods
fstp
dec
pop
imul
jmp
xchg
adc
imul
jle
jo
jle
jne
mov
nop
in
bnd
dec
test
jo
iret
push
daa
stos
adc
adc
ins
call
int3
sub
mov
pop
fs
sbb
scas
push
or
mov
cli
mov
adc
ja
push
mov
sub
push
ret
pusha
sbb
and
clc
mov
gs
fsubr
shl
dec
js
sub
popf
jae
sahf
out
adc
dec
xchg
push
hlt
js
push
mov
push
js
sub
xchg
fadd
loopne
lock
mov
or
cmp
xor
mov
out
sub
sar
call
aam
pop
dec
movs
jge
cmp
fimul
adc
stos
pop
jge
sub
std
cwde
jge
push
fs
movs
lock
test
fidiv
xchg
enter
push
cwde
frstor
daa
loop
xor
daa
mov
inc
mov
pop
push
adc
push
jns
inc
jl
ror
and
in
cmp
xchg
std
mov
and
test
dec
adc
push
js
les
cmp
imul
out
adc
push
jmp
pushf
ret
jbe
dec
arpl
clc
in
fs
fisubr
sbb
cmp
or
sbb
retf
xchg
(bad)
xor
enter
inc
mov
adc
cs
je
(bad)
fcom
cmp
or
fadd
icebp
or
mov
cmp
int
pop
ror
sub
pushf
mov
test
cmp
inc
add
sbb
and
in
inc
add
xchg
or
mov
mov
dec
cwde
pusha
es
sbb
and
fs
xor
pop
pushf
adc
cmp
ins
int3
dec
(bad)
or
movs
call
inc
add
ins
imul
cs
je
mov
cmp
imul
push
xchg
stos
pop
xchg
or
push
mov
js
in
fld
mov
sbb
lods
pop
leave
shr
std
sbb
sbb
(bad)
jns
pusha
fcomp
or
movs
sbb
cmps
stos
fisub
ins
pop
add
jno
mov
dec
cwde
pop
sbb
sbb
mov
pop
fldlg2
cmp
or
js
push
aad
cdq
mov
fcomp
stc
jl
movs
sbb
mov
rol
and
push
mov
push
stc
jb
cmp
fdivr
jmp
jns
xor
pop
add
push
cwde
mov
fld
add
pushf
mov
dec
jmp
mov
sbb
mov
jle
cld
pop
rcl
cwde
pop
sbb
xor
pop
pop
loop
jmp
outs
mov
cmp
aaa
sar
add
cld
cli
pop
push
xor
adc
pop
jl
imul
pop
sbb
sub
or
ss
pop
sub
sub
push
fdivr
pop
rol
xchg
rcr
cwde
mov
cmc
sub
push
adc
fdivr
js
xchg
mov
mov
aam
mov
pop
mov
nop
fs
push
bound
dec
idiv
mov
fsubr
fldenv
lods
pop
pop
sbb
xlat
dec
mov
inc
xchg
gs
lock
loope
lock
push
inc
pop
sub
adc
jge
les
movs
push
hlt
mov
or
cli
sub
ret
mov
push
push
(bad)
fidivr
(bad)
push
push
mov
fsubr
push
xor
push
mov
sbb
push
pop
fcmovnb
xor
lea
sahf
movs
lods
ins
test
xchg
jl
or
push
lds
cwde
pop
pop
cmps
fild
sbb
mov
pop
or
pop
in
and
cmps
jle
mov
dec
sti
jl
jp
mov
shl
sub
test
sub
ins
mov
std
mov
div
or
push
mov
pushw
xchg
mov
or
sub
scas
movs
jl
xchg
loop
in
sbb
sub
cmp
ins
hlt
cli
sti
int
sbb
es
pop
js
bound
fdiv
adc
ss
jl
sbb
sbb
stos
int
bound
test
pop
mov
mov
dec
shl
lods
enter
and
js
add
mov
push
jnp
sub
iret
jmp
sub
pop
or
inc
scas
mov
out
dec
xchg
jl
test
jmp
fisttp
or
(bad)
cwde
sub
loope
dec
fistp
xlat
and
xor
or
sbb
xor
fcmovu
arpl
xor
add
sbb
aaa
sub
dec
inc
ins
and
int
push
js
mov
fstp
(bad)
push
fist
pop
jle
dec
movs
fnstcw
test
fsubr
mov
leave
inc
mov
repnz
mov
dec
test
xchg
cwde
ja
(bad)
imul
adc
fdiv
lods
cmp
xchg
adc
and
push
sahf
fild
pop
mov
lds
jmp
cmp
adc
dec
mov
in
outs
jp
call
pop
xlat
ret
sub
in
pushf
pop
test
sbb
enter
pop
retf
sbb
or
jae
dec
xchg
(bad)
jo
adc
xchg
out
hlt
aas
int3
dec
xchg
ins
fdivr
repnz
je
or
cli
out
ja
push
pop
mov
rcl
lds
sbb
mov
xchg
aam
into
jp
sub
mov
in
add
mov
clc
mov
dec
mov
xor
test
mov
lds
mov
dec
pop
fmul
iret
xchg
ins
in
ja
js
stc
sub
push
xchg
test
jmp
icebp
dec
dec
retf
loope
jne
ja
sbb
cmp
fs
mov
outs
or
call
int
loope
fcomp
or
test
push
or
jns
clc
in
mov
gs
adc
pusha
mov
leave
lds
add
imul
sub
inc
or
xchg
outs
sub
retf
retf
lahf
imul
mov
fprem
aas
cwde
(bad)
dec
lea
test
mov
pop
cli
mov
mov
icebp
aas
nop
mov
out
lahf
das
dec
iret
adc
dec
xchg
push
dec
in
jle
js
mov
xchg
shr
fidivr
sbb
xlat
or
fistp
and
stos
lea
lods
aaa
test
addr16
or
stc
movs
jl
lahf
mov
mov
ins
(bad)
push
clc
cdq
mov
stos
mov
and
sub
inc
xchg
(bad)
and
cld
jge
xchg
rcr
js
jmpw
arpl
ins
out
push
in
sbb
pop
mov
jae
pop
stc
lods
or
pop
push
(bad)
cwde
dec
dec
loop
int3
cwde
fdiv
ins
in
or
cdq
bound
or
adc
ja
test
mov
imul
mov
jl
push
dec
pop
fdivr
call
jl
ins
imul
xchg
xor
jecxz
adc
mov
push
lods
loopne
mov
or
dec
mov
or
push
push
pop
sub
cmp
dec
(bad)
push
jo
stc
stc
push
add
mov
jl
dec
inc
sub
sub
jmp
dec
jae
xor
adc
pusha
ds
sub
cmp
pop
adc
xchg
mov
mov
ds
and
mov
dec
xrelease
test
mov
icebp
imul
cdq
mov
mov
and
loop
and
mov
sbb
xchg
push
int
sub
jns
imul
inc
imul
hlt
mov
mov
sub
inc
cmp
pushf
sbb
sub
test
enter
fcomp
shl
sbb
loope
sti
fwait
jl
sbb
inc
scas
push
inc
push
repnz
sub
sub
sub
retf
dec
or
sub
sub
xchg
cmc
(bad)
test
test
cmp
inc
cmc
sahf
add
jmp
pop
jb
xor
call
dec
or
lds
or
push
push
scas
mov
mov
imul
gs
stos
scas
jnp
mov
std
aas
jmp
cs
jns
ud1
sbb
xchg
fidiv
and
add
jge
dec
jl
xor
or
cdq
sbb
ins
(bad)
mov
push
int3
rcr
mov
or
aas
fisttp
jp
mov
shr
ds
lahf
dec
push
call
lea
sub
cld
aaa
adc
ins
mov
cmp
hlt
adc
sub
xor
push
xor
mov
lock
loopne
maskmovq
test
or
clc
add
mov
call
adc
test
sbb
push
jns
pop
mov
sbb
push
in
(bad)
adc
fcom
fdiv
(bad)
push
push
mov
and
xor
int3
sar
test
xor
jg
js
sub
mov
push
test
hlt
loope
rcl
ret
out
inc
xor
add
mov
push
pushf
cmp
jl
addr16
test
jnp
inc
mov
int
mov
sti
mov
out
fild
in
mov
test
dec
leave
fstp
dec
xor
push
jg
retf
cmps
(bad)
imul
das
xchg
push
scas
mov
fwait
dec
ins
jmp
pushf
and
jae
scas
fwait
add
sub
push
leave
addr16
std
or
retf
jecxz
mov
jge
ja
mov
js
mov
pop
push
shl
jge
sbb
rol
and
int3
inc
retf
call
xchg
and
mov
leave
iret
and
jbe
sbb
in
jmp
aaa
push
retf
test
and
mov
not
call
lock
push
fcom
mov
mov
sub
js
pop
popa
bnd
inc
cmp
mov
nop
out
mov
xchg
xor
mov
cmp
rcl
pop
dec
jbe
pop
lahf
outs
pop
fmul
imul
push
xor
lds
lods
imul
and
inc
sbb
pop
add
push
fs
cmp
iret
inc
and
sub
out
je
sub
add
mov
jb
mov
mov
or
xchg
mov
test
addr16
pop
mov
sbb
inc
sub
adc
inc
inc
in
pop
sti
pop
in
sub
xlat
push
pop
pop
jge
mov
in
add
jp
push
je
cmp
sbb
ds
addr16
cmp
in
xchg
std
cmp
cmp
or
imul
pop
nop
inc
jmp
push
not
push
cld
sub
push
(bad)
or
jne
xor
xchg
les
inc
ins
pop
rcr
rcl
mov
(bad)
dec
cld
pop
sbb
call
xchg
and
xchg
or
mov
mov
cwde
push
fimul
cmp
adc
retf
jmp
outs
mov
jno
xor
(bad)
sbb
and
call
cdq
cmp
icebp
int3
sbb
daa
aad
fmul
sbb
xchg
addr16
in
retf
lea
rcl
dec
jge
adc
(bad)
dec
retf
aad
mov
test
dec
sbb
fstp
or
movntq
out
push
cmp
scas
push
mov
xchg
ins
popa
mov
pop
shr
test
add
iret
cwde
int
and
lock
mov
jae
test
sbb
xchg
push
aad
jnp
cwde
adc
cwde
std
ins
mov
in
sbb
fiadd
fisttp
xor
mov
cmp
push
pop
sbb
or
xor
pop
jno
push
(bad)
mov
or
int3
sbb
adc
shr
and
inc
cmp
inc
sti
fidiv
push
push
sti
pop
pop
call
mov
add
xchg
and
cdq
or
or
call
cmps
jns
int3
add
hlt
mov
jo
dec
lods
inc
std
jmp
mov
cwde
fdivrp
mov
retf
movs
cmp
in
add
jl
fdivr
mov
movs
push
ror
(bad)
arpl
xorps
lods
cmp
lods
pslld
mov
call
int
mov
dec
xchg
(bad)
ds
inc
retf
stos
sub
cld
les
adc
mov
iret
cmp
adc
dec
clc
test
jg
dec
inc
mov
std
mov
jo
daa
sbb
cmp
mov
mov
test
stc
ds
lods
ins
scas
lea
mov
jle
push
xlat
mov
add
jl
enter
out
js
dec
fcomp
(bad)
outs
retf
adc
jae
mov
cld
out
iret
jmp
push
fidivr
pop
nop
adc
pop
and
pop
or
add
in
and
aam
mov
dec
imul
dec
sbb
enter
cld
ins
jmp
aam
sbb
xchg
fcmovnu
stc
mov
jbe
mov
ror
adc
mov
or
fld
movs
pop
xchg
sbb
pop
fmul
fisttp
jg
mov
scas
xchg
clc
js
inc
movs
ins
xlat
loope
fsub
xchg
mov
jmp
cmp
jp
jns
ins
enter
sbb
in
jb
jl
clc
outs
xor
pop
aas
add
dec
movs
imul
push
mov
les
or
xchg
jbe
rcl
cs
in
fiadd
sub
mov
fistp
mov
jae
push
jge
sbb
test
dec
int3
sahf
sbb
jle
pop
mov
push
es
fld
test
leave
cmp
in
add
lahf
stos
cwde
into
sbb
xor
popa
push
add
stc
pop
repz
adc
ret
int
push
dec
(bad)
in
xchg
jmp
mov
push
test
jmp
or
fnsave
sbb
call
pop
add
dec
sbb
fs
call
pop
dec
mov
ret
hlt
push
rol
lods
cmp
cmp
push
nop
fcom
addr16
sub
mov
push
mov
sbb
enter
std
add
sahf
adc
inc
scas
add
aad
xchg
pop
xlat
pop
inc
in
xlat
add
rcr
mov
enter
cwde
pop
push
hlt
dec
mov
xor
jns
mov
add
and
fcomp
(bad)
sbb
cmp
inc
fiadd
add
mov
lods
mov
jge
xor
jp
fld
ins
ins
loop
inc
lods
push
inc
lock
push
hlt
xor
inc
dec
inc
sbb
or
push
(bad)
add
loope
loop
or
sar
mov
cmp
sub
xor
popf
aaa
in
xor
ss
in
add
lods
(bad)
nop
loopne
cwde
out
js
test
test
clc
ror
mov
and
pushf
cmps
lods
push
pop
cmp
dec
xor
nop
pop
or
test
jp
icebp
loop
ins
jo
mov
test
dec
inc
sub
cdq
and
pop
pop
das
iret
cmp
int3
movs
stos
loope
es
lds
dec
adc
and
pop
and
add
jo
adc
out
outs
cmps
push
cmp
lods
adc
mov
(bad)
fld
and
enter
loope
ja
in
mov
ss
lock
rcl
xchg
retf
and
sbb
rol
daa
jne
inc
int3
in
ins
icebp
cwde
(bad)
out
mov
sbb
in
enter
and
stc
enter
fisttp
(bad)
in
sbb
cmp
(bad)
adc
ins
(bad)
div
fnsave
adc
stc
fcom
iret
cmp
sub
fdiv
add
pop
sbb
pmaxub
pusha
or
dec
sub
inc
jmp
mov
je
in
je
(bad)
fcomp
sahf
hlt
aaa
or
in
jb
sbb
dec
push
fmul
mov
loopne
xor
fsubr
stos
or
mov
in
cmp
fld
jno
sub
nop
stos
jne
ins
and
inc
adc
mov
jb
outs
sbb
pusha
call
mov
clc
or
nop
pushf
jmp
icebp
(bad)
js
shl
sub
clc
inc
test
add
push
mov
pop
xor
cld
scas
rol
imul
dec
mov
adc
sub
cmp
adc
mov
es
pushf
xchg
test
push
mov
jo
cwde
add
jl
fmul
js
fs
dec
cmp
shl
loopne
dec
dec
push
xchg
mov
movs
shl
hlt
add
stc
lods
jmp
loope
in
je
jg
push
cmc
dec
sub
pop
sbb
and
mov
pop
adc
int3
push
loop
shl
sub
mov
arpl
or
cwde
sub
hlt
inc
movs
xor
pop
clc
in
dec
in
jp
int
lahf
js
test
shl
daa
xchg
mov
imul
lock
daa
inc
cdq
int3
mov
push
dec
and
outs
sub
cdq
jl
mov
cvtpi2ps
ins
mov
stos
pop
dec
dec
popa
dec
jo
shl
dec
or
mov
int
cmc
sbb
xchg
pop
xor
sbb
push
test
cmp
and
test
sub
push
xchg
int3
mov
test
mov
jns
outs
add
rol
dec
fistp
fcom
inc
mov
int3
and
imul
in
into
mov
xchg
addr16
jbe
dec
and
xor
push
popf
fisttp
shr
shl
call
lds
jmp
sub
frstor
cdq
pop
cld
xchg
test
call
adc
adc
inc
mov
push
xchg
fldenv
cwde
inc
int3
or
mov
mov
pop
dec
stc
and
icebp
xchg
call
pusha
out
push
int3
fwait
gs
mov
(bad)
jge
adc
les
aaa
fst
sub
les
pop
jle
xor
dec
shr
jl
mov
pushf
ins
jmp
inc
xor
xor
out
cmp
jmp
or
hlt
dec
adc
dec
aam
push
xor
or
test
hlt
stc
bound
jbe
sub
(bad)
fstp
mov
pop
pop
or
push
cmp
fxch
stc
adc
test
sbb
push
adc
ins
jmp
pop
inc
ins
fcmove
imul
sbb
adc
cdq
arpl
enter
pop
mov
sbb
or
pusha
fs
in
mov
push
fadd
push
mov
mov
clc
sub
mov
push
jl
movs
je
in
inc
pop
inc
and
or
enter
cmc
mov
lods
in
jns
stc
xchg
pop
sbb
aad
push
add
adc
or
jmp
inc
mov
cmps
or
dec
std
stc
repnz
mov
adc
adc
retf
das
inc
pop
pop
cli
arpl
jne
jns
sub
xor
add
sbb
pop
std
(bad)
mov
int
fcomp
rcr
xor
loopne
xor
not
inc
and
inc
push
rcl
mov
mov
jo
pusha
pusha
mov
push
sbb
xchg
popf
in
cmp
mov
gs
icebp
mov
inc
clc
mov
pop
cmp
xchg
aas
test
sti
mov
push
mov
add
jge
sub
movs
int
or
fidiv
push
cdq
and
jmp
cmp
mov
lods
shl
loopne
jmp
mov
push
mov
fisub
xor
aad
cmp
repnz
fmul
cmps
fdiv
lock
xor
fld
sbb
mov
sbb
or
adc
sbb
jae
inc
clc
aam
cli
inc
hlt
cli
ret
repnz
int3
clc
leave
sbb
js
ins
or
cdq
out
imul
jo
inc
(bad)
dec
leave
mov
sub
(bad)
or
call
lea
or
je
repz
push
dec
push
test
ret
fadd
in
sbb
jg
or
push
mov
mov
movs
test
add
dec
or
shr
mov
mov
dec
idiv
inc
cmp
shl
and
fld
(bad)
(bad)
add
jne
into
jecxz
into
sbb
mov
sbb
retf
inc
hlt
sahf
inc
mov
and
in
je
mov
out
cmp
jge
xchg
push
mov
jmp
out
push
sbb
and
cmp
xchg
fld
loopne
lock
xchg
cmps
in
jns
mov
adc
or
dec
ret
pop
ficom
dec
ret
sub
push
xchg
lods
sub
mov
jne
jmp
mov
xor
into
fisttp
cs
sub
pop
bound
dec
aam
cmp
xor
lahf
cmps
sub
fisttp
cmp
sub
sar
jle
(bad)
enter
fwait
jno
sbb
sahf
mov
sbb
in
xor
rcl
dec
sub
mov
gs
aam
movs
fadd
mov
push
push
dec
enter
cmp
int3
and
and
xor
(bad)
loope
pop
ficom
inc
ret
test
adc
lods
xor
mov
sar
xor
aaa
add
pop
sub
test
and
mov
sahf
jo
adc
loopne
jecxz
push
clc
mov
adc
push
and
retf
sub
and
xor
div
icebp
test
je
test
pop
or
ds
mov
fcmovnb
add
cwde
or
or
xchg
cdq
int3
pop
jecxz
and
mov
cmp
sbb
(bad)
xor
ret
and
cs
fistp
add
dec
jp
mov
(bad)
xchg
std
ins
jecxz
shl
mov
push
mov
push
(bad)
(bad)
loopne
sub
adc
mov
cmp
adc
mov
jne
cli
xor
(bad)
push
xor
xchg
cmp
add
addr16
xchg
inc
shl
mov
xchg
fucom
mov
inc
imul
cld
and
xchg
lds
sub
js
jge
jecxz
cmp
jne
sub
ds
jb
dec
pop
sahf
mov
(bad)
adc
loope
lock
sub
xchg
jg
lods
mov
pop
jl
test
test
jecxz
in
push
jl
sub
in
aad
add
jae
lds
pop
popf
aam
and
mov
mov
mov
lds
mov
jp
xchg
cld
test
add
js
dec
ret
sub
test
and
pop
(bad)
cmp
xchg
cwde
sbb
fdiv
xor
xor
add
ins
lea
sbb
xchg
pusha
fwait
ins
adc
int
cmp
test
mov
loop
es
leave
xchg
inc
mov
pop
pushf
pop
jecxz
jge
cmp
or
jmp
pusha
rol
mov
mov
add
mov
adc
sub
ror
sub
out
mov
adc
fisttp
int3
push
xchg
xchg
jl
in
xor
inc
xchg
iret
cmp
push
add
ins
pop
jecxz
jns
fcmovbe
imul
or
mov
pop
dec
fs
rol
cmp
stos
int3
add
enter
outs
cmp
or
push
scas
(bad)
mov
rol
pop
sub
rcl
jo
fdivr
in
js
hlt
fiadd
xchg
test
adc
dec
add
push
lods
and
xlat
dec
pop
sbb
imul
push
(bad)
pusha
call
sahf
and
mov
inc
cmp
js
hlt
jmp
dec
ds
inc
mov
push
mov
sahf
scas
call
repz
leave
outs
fsub
sub
inc
pushf
or
pop
stc
pop
xchg
dec
ins
or
push
cwde
push
out
add
or
es
in
stos
cld
lea
push
jge
sbb
push
or
xor
movs
cmp
add
lods
pop
fisubr
mov
into
stos
xchg
call
pop
fld
mov
pop
push
mov
pop
fst
mov
dec
jle
jbe
stos
dec
mov
icebp
jl
cmp
jo
nop
cmps
int3
daa
or
clc
les
jle
cmp
stc
sbb
mov
sbb
lds
or
cmp
int3
stos
pop
fdiv
sbb
fcomi
iret
or
lods
dec
adc
cwde
or
pop
in
cwde
mov
fdivr
out
jle
push
hlt
jne
gs
fmul
dec
pushf
or
lea
outs
(bad)
cmp
cdq
enter
mov
sar
cmc
cmp
push
cmp
mov
fcomp
into
fcom
sub
jns
xchg
stos
dec
retf
pop
fcomp
fnstcw
mov
daa
cmp
(bad)
iret
mov
xor
jnp
fcomp
(bad)
dec
mov
imul
or
and
cmp
sub
push
clc
push
(bad)
stos
mov
push
dec
adc
cmp
cmp
xor
pusha
leave
call
jge
loop
adc
(bad)
fcom
in
xlat
pop
fmul
mov
dec
and
cwde
div
cmp
sahf
(bad)
test
mov
stc
jo
sub
jge
add
sbb
enter
call
aas
fcom
sub
pop
sub
inc
fcomp
clc
sbb
ins
in
hlt
test
sub
lods
mov
cmp
cld
jbe
adc
push
sbb
sbb
fdiv
jl
mov
mov
pop
fnstsw
sub
xor
adc
hlt
xchg
adc
inc
lods
mov
daa
fisubr
dec
jl
pushf
pop
sbb
outs
jae
and
mov
xor
stos
je
mov
sbb
inc
aam
nop
in
aam
mov
add
loop
cld
shl
adc
sahf
dec
inc
xor
inc
mov
loop
outs
jmp
mov
stc
inc
dec
sbb
push
pop
mov
sbb
sbb
xchg
ds
sub
pop
ins
sbb
sar
mov
cmp
add
push
lahf
popf
(bad)
pop
pop
arpl
ins
pop
cmp
mov
push
and
mov
cwde
push
in
adc
repz
clc
xor
dec
lds
inc
fnstenv
in
fistp
dec
and
push
loopne
das
xchg
ja
inc
dec
mov
add
pushf
mov
repnz
std
(bad)
push
cmp
and
inc
pop
test
rcr
push
std
(bad)
out
mov
ret
cmp
mov
les
and
cmp
dec
hlt
sahf
jl
dec
or
into
lds
shr
nop
fstp
shl
mov
and
out
and
ret
mov
push
ds
popf
ret
call
push
or
shr
dec
and
inc
fwait
jmp
add
jl
les
sbb
call
inc
fstp
(bad)
ins
loope
out
cmp
daa
ja
outs
sub
in
rcl
dec
inc
rol
dec
or
dec
xchg
push
js
push
jae
dec
retf
cld
fdiv
(bad)
jge
daa
pushf
push
dec
mov
ins
adc
dec
out
pushf
fild
cmp
das
das
mov
dec
mov
hlt
scas
jp
or
cmp
jo
fwait
mov
push
pop
dec
sbb
mov
in
stc
pop
pop
add
sbb
or
jge
dec
dec
inc
fldcw
fcomp
clc
loop
mov
jmp
nop
mov
dec
hlt
movs
loopne
push
addr16
je
and
push
pushf
sbb
imul
pushf
arpl
cmp
xor
mov
mov
and
jmp
mov
imul
les
lods
add
cwde
test
adc
(bad)
cmp
lahf
mov
sbb
pusha
xor
pop
ins
idiv
iret
hlt
ret
xor
test
cld
mov
mov
loopne
sbb
int
std
fdivr
mov
outs
xor
hlt
movs
cmc
sbb
pop
clc
jae
lods
adc
cwde
xor
das
stos
iret
mov
cwde
or
sbb
and
into
stc
pop
add
imul
icebp
xchg
cs
movs
cmovs
jne
in
mov
mov
cmps
mov
adc
(bad)
cld
mov
mov
adc
popf
pop
or
clc
sbb
adc
fmul
push
mov
popa
out
in
push
fnstsw
movs
or
retf
jb
mov
sti
sbb
mov
call
inc
call
cmp
and
mov
rol
mov
inc
mov
jecxz
xchg
scas
xor
mov
sbb
bound
hlt
push
mov
call
mov
dec
cmp
mov
cmp
xchg
pop
int3
ds
mov
stos
dec
leave
les
mov
leave
jae
xchg
push
and
jnp
or
cmps
cmp
ret
xchg
adc
out
sub
inc
lods
sub
adc
sbb
pop
mov
mov
xor
out
call
jnp
pop
aad
mov
fsubp
adc
xchg
mov
inc
xor
and
jg
jno
cmp
dec
mov
xor
mov
xchg
cmp
clc
mov
mov
mov
sub
addr16
call
push
mov
movs
rcl
lods
inc
lds
dec
test
push
stos
add
or
je
fwait
in
cmps
cmc
jns
(bad)
cmps
sub
loopne
loope
mov
js
call
clc
mov
pushf
aam
cmps
call
je
cdq
lea
retf
pop
sub
cmp
wrmsr
adc
js
sub
daa
jl
dec
xor
pop
jnp
jle
pop
xlat
or
lods
das
fdiv
sub
jp
dec
mov
arpl
mov
jae
xlat
les
mov
popf
mov
hlt
ins
inc
and
mov
pop
imul
fsubr
push
mov
cmp
lock
jo
movs
into
push
sub
call
adc
ret
fild
push
or
fnsave
es
sar
mul
je
pop
jp
fcom
xchg
in
je
std
jo
add
sub
outs
call
cmps
rcr
mov
lea
jmp
std
sub
jno
cs
push
add
pop
sub
push
sub
pop
pushf
out
arpl
dec
cmp
pop
sub
je
cmps
pop
push
arpl
mov
pop
scas
fdivr
loop
cmp
sar
outs
and
inc
push
push
sbb
push
(bad)
adc
leave
or
mov
sub
enter
or
fidiv
lods
cld
call
mov
test
jno
or
jp
dec
arpl
repz
jge
or
pop
fs
dec
dec
clc
pop
arpl
or
dec
imul
shr
std
push
push
inc
sub
jne
and
push
xchg
aaa
ins
and
sub
sub
mov
push
sub
jmp
aas
fild
mov
xor
cs
cmp
fchs
mov
popf
popf
cmps
mov
push
std
sub
sahf
mov
mov
adc
daa
int3
mov
ds
aas
aaa
cmps
mov
imul
retf
pop
aam
(bad)
sbb
cmp
call
call
icebp
ficomp
sbb
push
mov
ins
jge
jg
(bad)
xchg
mov
sbb
dec
lods
pop
cld
add
pop
aad
xlat
scas
sbb
pop
push
inc
iret
push
ds
scas
shl
add
pop
or
or
xlat
dec
cmp
rcr
add
jge
jle
or
push
ret
movs
jmp
push
js
pop
dec
push
and
and
jl
add
push
push
xchg
cmp
jp
push
lods
(bad)
ja
int
mov
aad
ins
ins
mov
iret
fnstsw
xor
fnsave
or
popa
mov
ins
cmp
xor
cld
jnp
rcl
inc
mov
inc
jno
sbb
lds
mov
xor
xor
cld
pop
int3
test
mov
test
out
mov
adc
sbb
neg
dec
dec
daa
mov
xor
jecxz
mov
xchg
add
lahf
jbe
push
xchg
sbb
or
pop
out
mov
(bad)
clc
sahf
repz
pop
jmp
(bad)
imul
fs
push
fiadd
repnz
dec
sahf
sub
mov
inc
retf
lods
test
jle
mov
icebp
pop
and
adc
push
pop
mov
adc
loope
rcr
(bad)
loop
and
fcmove
call
inc
sahf
mov
retf
cmp
aam
mul
xor
mov
sar
xor
push
sub
push
add
inc
lods
xor
mov
sahf
test
cmp
push
inc
out
retf
cmp
inc
call
or
mov
pop
mov
not
add
add
retf
mov
aas
fs
inc
ret
adc
and
shr
or
xor
push
mov
test
dec
jle
mov
pop
or
retf
sbb
stos
test
gs
add
cmp
ror
and
test
pop
imul
imul
sub
cmp
mov
push
pop
push
(bad)
sub
jp
jle
arpl
sbb
mov
fwait
fs
icebp
xchg
xchg
cmp
jae
pop
mov
adc
xlat
aas
xchg
push
mov
sar
es
jo
sub
cmp
lahf
sub
icebp
sbb
cmp
jg
jnp
fwait
mov
inc
adc
mov
inc
out
je
push
ds
mov
push
shl
fwait
inc
mov
rcr
std
nop
rcr
pop
fwait
xor
adc
sbb
adc
mov
pushf
jnp
aas
stc
das
inc
jns
mov
popa
icebp
inc
xchg
cmc
xrelease
adc
xor
in
mov
add
xchg
outs
sbb
xor
mov
ja
pop
xchg
aaa
icebp
mov
adc
in
data16
xchg
push
aad
stc
sbb
test
mov
push
gs
mov
xchg
pop
jmp
les
sub
js
loope
sbb
mov
cmc
fwait
cmp
aad
jns
rcr
mov
xor
adc
outs
adc
aad
(bad)
push
mov
(bad)
jns
jnp
arpl
and
rcr
xchg
jns
nop
fist
(bad)
xor
jmp
jae
cmp
call
lock
jg
retf
inc
mov
icebp
push
xchg
pop
test
fwait
push
mov
out
sahf
enter
mov
lahf
mov
mov
jmp
jecxz
sbb
es
imul
stc
push
push
inc
ins
imul
sub
cdq
mov
aaa
das
xor
sbb
add
pop
dec
or
pop
push
jle
xchg
push
arpl
pop
aad
and
jo
iret
cmp
mov
test
iret
xor
jae
cmps
mov
inc
xchg
xor
loope
xlat
mov
fld
cld
push
push
or
(bad)
iret
push
and
mov
mov
xor
xor
sbb
mov
pop
adc
xor
mov
stos
add
xor
iret
pop
retf
iret
(bad)
aad
inc
dec
xor
jge
(bad)
sbb
das
in
sub
mov
cmc
loope
add
xor
xor
add
push
call
or
or
pop
or
sbb
jle
mov
mov
add
scas
and
imul
inc
aad
dec
mov
fwait
nop
jg
fwait
jg
in
dec
jne
pusha
dec
xor
push
mov
loopne
std
lea
or
sbb
sbb
ror
mov
add
lea
xor
call
add
int
repz
arpl
adc
jae
dec
loope
mov
push
(bad)
and
push
xor
mov
xchg
or
sbb
mov
movs
jb
xor
xor
mov
mov
test
xchg
and
ss
clc
mov
lock
ss
jo
or
or
mov
(bad)
mov
or
icebp
sub
jns
cdq
mov
mov
mov
xor
mov
pusha
mov
movs
cmp
jmp
hlt
pusha
push
ror
cwde
adc
push
add
in
jmp
mov
arpl
in
or
and
xchg
enter
adc
fistp
mov
out
sub
mov
mov
(bad)
dec
jbe
je
mov
jo
jo
aaa
daa
aaa
daa
mov
mov
mov
and
addr16
repz
(bad)
lock
fs
sub
push
outs
and
aam
nop
mov
hlt
test
adc
cmp
movs
movs
test
mov
mov
fs
test
jge
out
dec
iret
fstp
xor
iret
add
sub
jg
xor
shl
inc
and
aas
into
(bad)
addr16
push
dec
js
pop
jae
fcom
inc
and
fisttp
xor
sub
aaa
push
leave
dec
add
mov
mov
and
outs
fbstp
xor
ins
dec
ins
icebp
mov
dec
fadd
lods
arpl
mov
loope
(bad)
cmp
outs
popa
out
popa
outs
not
and
into
adc
push
loope
inc
sub
popf
mov
loopne
movs
data16
gs
scas
popa
loope
lods
pop
cs
shl
jmp
adc
popa
loopne
bound
scas
outs
in
in
cs
inc
cmc
scas
test
sub
lahf
in
and
shr
cli
neg
mov
loope
cmp
repz
cs
jmp
sub
dec
push
sub
dec
jmp
cmp
es
lods
movs
out
call
or
movs
dec
scas
addr16
add
out
stos
pop
jmp
jno
loope
dec
jbe
adc
and
mov
movs
push
in
and
outs
dec
and
popa
jmp
movs
dec
movs
cli
dec
dec
add
movs
dec
sub
mov
sub
aas
xor
push
adc
addr16
aam
movs
dec
int
jmp
outs
and
dec
jmp
cmp
jmp
cmps
stos
test
mov
call
test
sub
jbe
dec
push
ror
jmp
repz
(bad)
scas
popa
jmp
lods
movs
dec
sub
and
outs
das
and
imul
xor
popa
scas
into
jb
cmc
dec
mov
retf
mov
(bad)
sub
push
sub
arpl
inc
iret
call
mov
clc
jp
xchg
cmp
mov
cwde
data16
cmps
jle
add
jns
sahf
mov
jmp
cmps
sub
dec
cmp
ss
inc
retf
adc
cmps
adc
dec
scas
xor
es
inc
shr
or
int3
jmp
outs
es
dec
fimul
adc
or
push
push
arpl
and
jle
cmps
sub
mov
es
pop
xlat
or
xchg
inc
mov
add
ins
cmp
ror
jae
jp
mov
jge
shr
jnp
jbe
test
pop
lds
dec
sahf
mov
adc
xchg
or
dec
ret
xchg
push
mov
loope
into
pop
into
push
cmp
pop
lds
add
test
icebp
lahf
(bad)
push
jb
jle
aam
enter
js
push
test
inc
push
dec
gs
push
xor
out
dec
fdivrp
sahf
inc
push
dec
inc
and
test
or
stos
or
out
jae
data16
jns
pushf
hlt
outs
sbb
mov
push
ds
jecxz
loope
aad
mov
popf
retf
and
adc
aas
xor
(bad)
loope
dec
ja
neg
dec
repnz
push
and
out
pop
mov
adc
mov
sbb
xor
pop
mov
fwait
dec
inc
cli
(bad)
aam
mov
dec
inc
jne
add
cmc
mov
or
mov
outs
shl
call
xor
mov
fist
lea
repnz
scas
call
mov
mov
repnz
call
xor
pusha
mov
sbb
jno
xchg
ret
mov
aas
cmp
push
adc
jno
xchg
adc
sbb
adc
rcr
repnz
pop
mov
(bad)
sbb
jl
pusha
cli
jle
fadd
aas
inc
or
sbb
hlt
mov
and
sub
jmp
(bad)
sub
push
fstp
arpl
jp
ja
pop
mov
inc
xchg
popa
mov
in
dec
jg
lahf
xor
pushf
pop
mov
xlat
shl
aas
shl
push
adc
and
pop
cmc
mov
adc
xor
xor
fistp
stc
lahf
and
aas
adc
mov
out
or
aas
mov
into
test
dec
mov
call
pop
jl
and
pushf
fbld
pop
xchg
mov
les
dec
aad
push
pop
inc
pop
arpl
inc
pop
and
lahf
jecxz
rcr
mov
scas
pop
in
mov
ret
popf
dec
fdivrp
test
mov
jno
inc
inc
loope
sbb
push
pop
call
add
in
inc
shl
inc
and
xor
xchg
lea
aam
inc
pop
adc
mov
sub
dec
and
inc
std
stos
mov
lea
fs
mov
(bad)
test
sub
iret
inc
movs
mov
outs
ins
daa
iret
lds
jo
(bad)
inc
iret
lahf
push
mov
inc
and
fidivr
(bad)
sbb
push
inc
dec
adc
dec
movs
inc
mov
mov
and
and
dec
inc
sbb
xchg
inc
test
add
xchg
sub
and
mov
retf
add
add
lds
test
call
(bad)
jg
mov
setp
and
lea
adc
test
pusha
rcr
xchg
mov
adc
adc
add
pop
pop
add
pusha
pop
mov
pop
push
and
into
inc
loope
push
push
mov
inc
les
out
aaa
in
add
sub
pushf
icebp
xor
aam
mov
or
mov
aam
xor
test
xor
aam
adc
test
cli
and
xchg
xchg
adc
enter
test
movs
mov
aam
xchg
and
std
inc
mov
js
mov
xchg
xor
(bad)
aam
adc
adc
aam
aam
xchg
sub
jle
movs
je
inc
shl
and
rol
adc
movs
and
xor
lods
sub
xchg
sub
inc
jno
and
add
cmp
inc
lods
pop
push
push
mov
movs
test
or
int3
in
inc
aaa
leave
inc
or
push
nop
xchg
sub
test
dec
je
js
mov
dec
mov
retf
mov
ret
stc
es
push
sbb
scas
and
or
xchg
les
mov
jns
dec
cmps
push
and
sub
cs
icebp
retf
int3
mov
int3
pop
cwde
or
xor
clc
xchg
out
bound
call
lds
or
or
test
mov
sub
inc
in
mov
and
ins
xor
push
mov
pushf
jmp
clc
push
cmp
addr16
pop
ja
dec
imul
add
loope
add
into
nop
pop
add
jecxz
bound
and
mov
test
mov
mov
push
mov
push
xchg
mov
call
pop
mov
jge
add
cmp
js
call
dec
xor
push
enter
fdivr
mov
dec
mov
(bad)
movs
pop
fisubr
in
or
xchg
retf
push
push
sahf
cs
or
addr16
(bad)
out
mov
dec
sub
lds
add
shl
test
jmp
or
mov
mov
push
or
pushf
lds
inc
jg
or
or
or
push
or
jmp
aaa
jp
cmc
aaa
jg
ret
outs
dec
mov
sub
push
ss
xor
gs
sub
dec
vmovapd
rcl
pop
test
fild
ja
pop
lock
and
pop
retf
add
call
mov
aam
mov
sbb
xchg
hlt
xchg
xchg
cmp
inc
xor
jno
mov
out
cmp
ror
cmps
push
jae
xchg
mov
ret
cmps
adc
call
pushf
lea
shl
add
mov
mov
cmp
sub
and
xor
or
aam
idiv
fbstp
aam
hlt
call
stc
push
sbb
pop
xor
jne
rcl
aam
xchg
bnd
je
cmc
xchg
adc
aam
push
jb
xor
cmc
rcl
push
mov
jb
repz
push
je
adc
not
bnd
xor
mov
push
nop
xchg
ffree
xchg
mov
out
jb
push
arpl
push
nop
pop
test
fbstp
push
arpl
xor
sbb
idiv
aam
int3
mov
mov
repnz
out
jl
imul
and
mov
xor
sub
mov
xchg
xlat
xor
xlat
pop
add
aam
adc
and
sub
mov
enter
jo
push
mov
sbb
xchg
rcl
aam
inc
mov
pop
pusha
sti
push
jnp
(bad)
icebp
repz
aam
sub
xchg
push
xor
xlat
push
xor
aam
(bad)
lds
addr16
out
inc
sub
ja
pop
xor
sub
lds
mov
push
imul
inc
xchg
sub
push
xor
sub
das
js
aad
mov
mov
jl
cmp
jl
xor
out
ret
sbb
xchg
cmps
sbb
jl
xor
aad
aad
xchg
movs
xchg
or
dec
adc
sbb
cmp
cmp
jl
pushf
add
mov
daa
call
mov
arpl
mov
mov
adc
inc
in
inc
cmp
test
int
ja
inc
out
inc
out
sub
shr
sub
sub
inc
out
add
shr
add
add
shr
add
sub
inc
out
sub
shr
sub
adc
mov
add
push
in
or
inc
jae
cli
push
mov
inc
sub
(bad)
fist
dec
loopne
adc
mov
add
aas
cmps
cld
out
push
ret
dec
jbe
mov
xlat
dec
and
jl
rcl
fild
adc
jo
aaa
scas
push
sub
pop
sub
adc
push
mov
enter
stos
test
fucomip
loope
xchg
jp
nop
push
mov
mov
repnz
test
jae
adc
xor
aam
mov
xchg
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
inc
jne
js
pop
jge
fcom
sar
je
fdivr
inc
pop
mov
rcr
mov
out
call
pop
imul
jmp
retf
fldpi
shl
pop
pop
inc
mov
repz
jb
mov
int3
cmp
xchg
pop
pop
pop
inc
inc
xor
mov
fadd
and
clc
aad
pop
inc
jo
push
push
push
mov
shl
fdiv
shl
push
stos
push
cmps
rol
xlat
rcl
loopne
mov
inc
fs
xchg
xchg
shl
int
int
ja
push
pop
push
push
push
lods
rcl
icebp
test
sbb
inc
js
les
sahf
or
pop
sub
or
sub
pop
sub
ins
shl
and
cmps
cdq
retf
popa
mov
xchg
mov
cld
mov
push
fcom
call
xchg
sbb
(bad)
push
(bad)
cmp
pop
pop
mov
sti
sub
jge
push
dec
fld
int3
pop
pop
jmp
sub
or
sub
int3
pop
jo
push
fild
aas
stos
dec
leave
dec
sti
sub
int3
add
arpl
pop
stos
das
mov
je
inc
pop
int3
pop
sub
or
sbb
dec
fimul
pusha
icebp
pop
and
jo
ror
push
stos
(bad)
fimul
arpl
inc
xor
ret
sub
pop
cmp
jmp
inc
repnz
test
ret
and
jo
or
sub
cmps
pop
pop
sahf
push
sahf
sub
setbe
push
(bad)
je
xchg
push
je
xor
xor
in
mov
ret
jae
push
mov
mov
fadd
addr16
mov
xchg
fimul
jmp
sahf
sub
int3
pop
sub
or
sub
dec
fisubr
aad
nop
(bad)
jo
nop
push
aad
nop
inc
lock
nop
push
aad
nop
(bad)
jo
nop
push
aad
nop
inc
lock
nop
push
add
inc
dec
(bad)
scas
push
adc
stc
xchg
in
dec
add
aaa
nop
push
shr
call
scas
add
jecxz
les
sbb
inc
mul
mov
push
test
iret
sub
movnti
push
in
adc
popa
std
das
mov
xor
jno
ins
(bad)
sub
jne
cdq
sbb
loop
mov
je
xchg
adc
cmc
and
cmp
xor
inc
icebp
push
nop
sub
push
dec
dec
mov
jno
or
xchg
lds
fcom
cmp
mov
cwde
gs
mov
push
jb
neg
xchg
sub
nop
mov
int
out
jnp
(bad)
retf
mov
repz
pop
in
xlat
das
mov
call
fimul
lock
stc
add
pop
or
hlt
mov
pop
seta
and
test
and
ret
xlat
test
push
les
add
pop
jmp
daa
inc
sub
mov
les
jl
jo
add
push
add
pop
xchg
adc
test
fst
les
imul
adc
mov
xchg
addr16
mov
nop
je
inc
jne
and
lock
rcl
mov
inc
xchg
aam
jo
add
jl
jb
pop
mov
xor
pop
and
movs
xchg
loop
mov
bound
nop
icebp
lock
inc
add
xor
xchg
inc
jae
push
mov
les
inc
rol
and
stos
mov
out
aam
icebp
inc
fstp
dec
dec
jbe
xchg
iret
loope
mov
mov
push
daa
push
ret
dec
inc
push
loopne
adc
and
adc
jno
aam
mov
popa
xor
mov
lock
mov
bound
add
enter
dec
inc
mov
rcl
and
repz
cmps
inc
jbe
pusha
pop
jne
std
in
movs
adc
cld
inc
mov
xchg
cdq
(bad)
(bad)
sbb
inc
adc
push
mov
aam
icebp
in
fst
jmp
dec
adc
std
xchg
movs
ret
xchg
popf
aam
jl
dec
add
bound
jecxz
into
int
xchg
aam
ja
adc
mov
push
inc
mov
xchg
jo
je
mov
ret
push
les
ja
mov
hlt
das
push
femms
(bad)
ror
xor
cs
xchg
in
xor
xchg
addr16
sti
ficom
jns
sbb
call
sar
loop
xchg
(bad)
cdq
push
xor
inc
add
dec
add
push
adc
pop
rol
xchg
imul
push
imul
imul
in
pop
test
test
xor
rcr
loope
xchg
sbb
push
stc
xchg
cmp
stc
mov
mov
push
imul
and
add
push
ret
mov
sbb
stc
mov
sbb
cwde
call
pop
mov
in
lock
inc
pushf
pop
ins
mov
(bad)
sub
push
loop
js
fwait
add
idiv
cmp
scas
aaa
imul
or
pop
(bad)
bound
mov
cmps
jns
mov
ja
cmps
sbb
hlt
jae
sub
or
in
sub
cmps
mov
int
mov
loop
inc
dec
push
call
inc
popf
xchg
xlat
mov
inc
mov
outs
outs
ror
and
pop
out
add
daa
xor
(bad)
dec
repz
xlat
stc
push
jmp
and
xchg
or
data16
retf
test
lds
push
and
pop
outs
fdivrp
push
(bad)
xlat
pop
shl
cmp
in
test
add
cli
ins
sub
lods
mov
mov
popf
and
cli
jp
mov
ins
cmp
push
call
fdivrp
(bad)
mov
ja
bound
repnz
fist
xlat
popf
jle
mov
addr16
sbb
sbb
xor
outs
out
outs
call
mov
pop
jmp
out
mov
mov
mov
xor
add
in
xchg
retf
ficom
imul
push
mov
lods
pop
idiv
xchg
cmp
outs
sub
in
aad
jne
out
add
call
stc
lea
jmp
pop
cs
adc
ficom
sahf
push
daa
adc
data16
shl
add
push
xchg
shr
repz
xor
dec
mov
in
pop
test
test
mov
test
xor
int
sbb
and
sbb
or
sti
in
scas
sub
inc
sub
lock
cmc
test
gs
mov
mov
adc
add
xor
cmp
loop
jmp
in
or
js
retf
or
mov
add
pop
and
sbb
mov
ins
test
push
sub
add
in
add
mov
mov
adc
add
dec
sbb
sbb
jo
jnp
adc
pushf
adc
jno
stos
add
loopne
cs
xor
mov
ins
adc
inc
xor
jg
cmp
mov
stos
nop
lock
mov
std
mov
jp
and
sti
(bad)
(bad)
cli
retf
and
xchg
sub
add
fsubp
fnstsw
shl
stc
int3
ret
and
ret
mov
fbld
xor
pop
imul
fild
jmp
and
xor
adc
xor
mov
inc
outs
nop
ret
mov
and
rcl
das
ror
popf
mov
mov
call
push
std
sub
ins
jbe
inc
rcl
imul
nop
mov
xor
xor
push
dec
lahf
add
movs
mov
aaa
(bad)
xor
test
adc
and
pop
and
das
loopne
and
pop
inc
mov
mov
pushf
pop
loope
int3
rcl
add
xchg
(bad)
mov
pop
xchg
(bad)
lock
add
jle
jo
add
and
pop
and
out
shl
loopne
mov
add
adc
icebp
mov
push
std
add
gs
adc
jmp
les
and
std
xchg
add
add
retf
pop
call
jne
cmp
cmp
cmp
outs
loope
rcl
xchg
cdq
dec
and
(bad)
pushf
(bad)
ja
pop
mov
xor
movs
mov
sub
outs
push
aad
xor
in
into
lahf
into
test
test
dec
cmp
sub
jns
sub
xchg
and
push
pop
sbb
pop
not
mov
jmp
cli
pop
sub
fst
mov
pop
mov
mov
int3
aam
cmp
cwde
mov
xchg
mov
ja
add
call
gs
xor
sbb
inc
cli
into
sti
ins
jp
cmp
or
mov
add
test
xor
push
lea
push
pop
adc
xor
jp
pop
or
fwait
jmp
and
push
inc
movs
sbb
mov
fnstsw
retf
lahf
ja
scas
push
xor
jp
test
push
stc
sbb
mov
cli
sbb
sub
inc
enter
pop
mov
push
mov
xor
xor
xor
cdq
xor
test
mov
pop
lds
and
push
retf
mov
jnp
fisttp
xor
or
jle
in
push
mov
ret
mov
js
jb
inc
xchg
arpl
sbb
rcl
fisubr
mov
hlt
push
adc
pop
lds
dec
cli
push
(bad)
jmp
jae
out
ror
dec
aam
sbb
in
pop
call
imul
xor
rol
cmps
xor
cli
push
inc
in
pop
call
push
jp
stos
or
dec
mov
or
(bad)
in
jmp
cmp
cmp
pop
mov
mov
sub
jl
dec
mov
imul
sub
push
pop
inc
fwait
hlt
mov
leave
imul
cdq
mov
sub
pop
int3
push
test
(bad)
adc
push
pusha
enter
leave
stos
js
inc
mov
mov
call
cdq
in
leave
xchg
mov
call
fwait
sbb
pop
or
mov
and
push
aam
retf
or
test
add
call
mov
out
mov
mov
repnz
ror
retf
sub
rol
arpl
push
jno
fcmovbe
imul
retf
dec
sub
leave
bound
sub
jmp
inc
ins
in
pop
dec
mov
jmp
in
dec
nop
into
jmp
xchg
jmp
cld
inc
(bad)
(bad)
mov
retf
and
inc
call
ins
icebp
jb
push
dec
or
bound
aad
or
mov
and
out
push
(bad)
rol
cld
mov
sahf
in
mov
mov
lods
cli
sbb
jno
pop
pop
cmp
loop
push
ja
(bad)
push
std
ficom
mov
repnz
fs
lock
pop
mov
bnd
jbe
mov
repz
add
jae
mov
rcl
jb
and
xchg
in
add
xlat
xchg
xchg
xor
icebp
mov
sbb
xchg
xor
std
test
je
add
fcom
enter
push
mov
jne
and
outs
dec
div
fidiv
cld
fdivr
repz
mov
pusha
push
jno
add
popf
push
add
jge
adc
test
ret
fwait
sbb
inc
lahf
inc
ss
or
fdiv
repz
adc
xor
push
mov
fimul
ds
fist
lods
jb
sub
sbb
push
xchg
outs
out
push
inc
xor
adc
aam
mov
mov
mov
mov
dec
shr
cmp
cmp
cmp
cmp
imul
push
mov
cmp
int3
xchg
dec
lock
mov
push
xor
dec
popa
adc
movs
push
adc
jecxz
xchg
retf
jne
into
call
mov
add
(bad)
jmp
mov
jne
cmps
movs
jo
fcmovb
loope
push
sub
or
lds
movs
retf
clc
jl
xor
add
clc
adc
cli
sbb
sbb
retf
leave
jg
dec
call
pop
pop
mov
lea
mov
push
jnp
ja
adc
hlt
mov
mov
push
mov
(bad)
out
jnp
jns
mov
ret
gs
push
jmp
cmp
xor
gs
cmp
repz
fcom
sub
sub
cmp
or
or
leave
movs
dec
pop
push
mov
test
push
adc
pop
sar
fucomi
xor
lock
aad
iret
xchg
xchg
sahf
mov
pop
add
pop
jmp
(bad)
mov
into
adc
sar
push
sbb
sbb
in
pop
inc
push
and
xor
aad
ja
xchg
jne
int3
sbb
pop
ds
dec
in
sbb
iret
push
jg
mov
or
push
jg
push
jge
jae
jae
adc
fcomp
sub
call
jo
(bad)
cli
dec
cld
fwait
sbb
dec
push
repnz
das
outs
jl
inc
pop
jl
pop
outs
cld
lahf
out
lahf
cli
lahf
mul
out
mov
adc
lahf
std
mov
mov
pusha
sbb
repz
jp
in
outs
or
inc
ins
jg
jb
push
bound
mov
dec
add
nop
adc
jnp
lahf
mov
or
out
jp
dec
jmp
cmp
sub
push
pop
or
xor
jae
pop
test
sub
mov
in
in
cdq
stos
pop
cmp
cld
dec
pop
sbb
jl
or
sub
dec
pop
mov
cs
popa
xchg
stc
retf
retf
jg
pop
or
pusha
sbb
mov
sub
scas
cmp
pop
or
int3
mov
in
pop
stos
jle
adc
inc
fwait
jns
dec
push
loop
pushf
cwde
js
stos
scas
xor
sbb
std
(bad)
mov
scas
push
stos
retf
xchg
imul
mov
push
sub
sbb
stos
jp
pop
fmul
xchg
lds
and
inc
jmp
fdivr
add
bound
mov
cmp
ja
hlt
cmp
jnp
add
dec
mov
mov
into
sub
mov
fs
popf
pop
fdivr
mov
mov
stc
mov
sub
push
in
fwait
push
mov
cmps
lahf
mov
or
push
imul
in
sub
sub
call
add
test
pop
ret
adc
or
dec
mov
ins
ins
movs
add
mov
dec
or
je
cmp
or
mov
add
imul
retf
je
scas
aaa
or
je
ins
mov
jns
pusha
mov
fs
mov
mov
jno
xor
mov
mov
jp
jmp
adc
aam
jecxz
leave
add
data16
scas
fs
call
idiv
in
mov
cmp
adc
fwait
xor
aam
add
fbld
push
adc
cmp
cmp
data16
fild
sub
ins
lea
and
xchg
inc
jno
push
sahf
(bad)
stc
ja
es
ss
popf
mov
sbb
cdq
inc
ds
pop
(bad)
out
gs
cmc
test
dec
ss
inc
jmp
mov
mov
out
and
movs
xadd
and
arpl
fs
pop
push
jo
push
aad
jp
cdq
push
dec
fld
jnp
out
xor
std
shl
and
icebp
cmc
iret
cs
(bad)
stos
sub
std
pusha
das
sub
fisttp
and
(bad)
xchg
pop
stc
out
cli
jp
retf
xor
jne
addr16
(bad)
data16
push
(bad)
(bad)
and
and
in
mov
add
mov
mov
pop
jae
xchg
ins
push
test
dec
or
test
jno
fild
sub
jb
inc
cld
or
adc
out
leave
mov
loop
fidiv
addr16
pushf
std
mov
inc
mov
outs
adc
loope
shl
faddp
cmp
sbb
leave
push
movs
cmp
arpl
push
pop
jno
xlat
fwait
in
jo
inc
pop
aaa
sub
sub
sbb
adc
mov
jle
xchg
cmp
jno
or
xchg
dec
cmps
icebp
pop
fs
call
jmp
xchg
dec
test
cmc
sub
ja
and
dec
jmp
push
cmp
fidivr
inc
aas
stc
or
mov
fistp
adc
arpl
xlat
pop
cmp
adc
and
scas
sub
mov
pop
inc
push
or
push
icebp
jo
dec
sbb
in
pop
mov
cmp
aas
mov
push
jne
push
fsubr
pop
movs
call
jmp
out
cld
mov
ficom
cmc
sub
push
imul
adc
or
out
outs
mov
xchg
nop
sub
xchg
fst
cmp
and
data16
loopne
fdivrp
arpl
add
adc
mov
or
fstp
or
push
jbe
(bad)
mov
popa
or
cmp
xchg
(bad)
int3
pop
mov
out
lods
ss
pushw
(bad)
out
push
ds
cmps
pop
push
cs
jle
outs
jle
add
cdq
(bad)
std
mov
push
mov
inc
xchg
jns
dec
sub
push
push
adc
je
xchg
movs
hlt
in
fs
das
jo
xor
mov
inc
sub
xchg
lock
dec
loope
inc
in
lahf
inc
pop
leave
jmp
sbb
mov
pop
jge
xchg
jecxz
and
fnstcw
mov
arpl
jmp
es
xchg
ret
jle
call
bound
jbe
and
imul
lods
outs
mov
sub
add
lods
xor
xchg
loope
cmc
popa
sbb
in
pop
movs
nop
and
xchg
pop
adc
xor
xchg
adc
gs
push
es
sub
xchg
dec
mov
ins
cmp
in
popf
les
mov
div
mov
cdq
in
xor
or
push
test
pop
test
pop
jmp
leave
rcl
sub
icebp
jnp
icebp
in
mov
cwde
and
jmp
inc
xchg
mul
loopne
icebp
add
in
ss
dec
adc
mov
or
sub
xchg
xchg
xor
cmp
repz
lds
and
loop
dec
push
mov
inc
call
adc
sahf
popf
xor
test
push
in
xchg
inc
xor
dec
inc
sbb
fisub
retf
sbb
mov
xlat
xchg
mov
pop
(bad)
das
mov
xchg
and
mov
inc
pop
mov
dec
es
mov
sub
popa
out
jmp
push
test
fdivr
push
bound
hlt
cmc
adc
jae
dec
out
aad
ret
inc
ret
rcl
dec
xchg
or
jne
jnp
pushf
stos
pop
test
add
clc
jge
sbb
add
shr
shl
xor
adc
stos
repnz
mov
rol
push
mov
jbe
outs
xchg
jge
jns
add
jecxz
mov
mov
mov
jae
jb
mov
mov
ss
icebp
dec
jne
adc
add
ror
popa
push
cmps
dec
inc
dec
mov
sbb
shl
sbb
add
pusha
leave
or
add
push
rol
int3
gs
cli
(bad)
sar
into
in
push
loop
mov
sbb
sar
imul
push
mov
(bad)
mov
add
in
imul
(bad)
arpl
das
clc
and
add
(bad)
jns
push
xor
inc
mov
aas
xor
adc
xor
mov
mov
pop
push
dec
or
inc
or
push
adc
aas
fcomp
adc
mov
test
sbb
cmps
repnz
inc
dec
loope
xlat
and
mov
add
aam
jmp
xchg
mov
or
mov
sar
adc
(bad)
jl
cmp
mov
pop
cmp
jns
cdq
and
pusha
pop
lods
jle
adc
lods
daa
dec
icebp
dec
(bad)
std
cmps
inc
in
push
xchg
adc
xchg
push
shl
and
add
inc
jecxz
sub
push
aam
fsubr
arpl
push
xchg
loope
(bad)
dec
cmp
ror
dec
mov
xchg
jle
pop
inc
push
or
ret
sbb
cmp
aam
ss
mov
sbb
retf
xchg
dec
pop
xor
call
mov
test
jmp
lods
sub
stos
lods
inc
jmp
popa
in
or
mov
imul
(bad)
lods
outs
call
lea
in
retf
je
or
jnp
test
mov
dec
ins
(bad)
sbb
ins
in
pop
lods
fsub
lods
pop
pushf
cld
retf
push
lods
test
xchg
inc
jne
and
xchg
mov
cs
mov
leave
outs
mov
cli
and
mov
loope
out
into
int3
mov
pop
mov
inc
jp
adc
ret
jnp
movs
jb
ja
fnstenv
or
mov
dec
neg
mov
scas
inc
push
clc
nop
stc
sahf
sahf
gs
sbb
pop
int3
sub
enter
mov
fst
pop
nop
lods
cmp
fwait
pop
jl
add
jp
or
js
test
ins
cwde
ins
mov
mov
jno
lods
jecxz
nop
sahf
pop
or
sbb
sub
sbb
mov
mov
shl
iret
mov
jb
out
pop
mov
add
(bad)
sub
add
push
mov
arpl
pop
cmp
push
sbb
jge
dec
fcomp
or
pop
dec
mov
(bad)
fcomp
(bad)
sbb
(bad)
and
xor
or
add
stos
int3
cmp
iret
pop
push
cmp
or
add
mov
and
adc
cmp
push
add
aas
lea
and
add
add
rol
push
imul
add
add
inc
jbe
aaa
stc
xchg
xor
adc
aas
jno
ins
loope
ins
sub
adc
add
and
cmp
adc
add
and
add
aam
pusha
push
aas
jmp
cld
loop
or
cmp
pop
and
aas
xor
cdq
or
sbb
pop
aas
jecxz
jb
hlt
sti
in
cmp
add
sub
or
sub
dec
addr16
mov
add
sbb
aas
stos
inc
mov
cmp
sbb
cmc
jae
shr
inc
cmp
pop
ror
xchg
sbb
imul
or
mov
aad
test
cmp
and
or
out
jo
pusha
jno
cmp
and
or
cld
bnd
not
inc
cmp
mov
mov
cmp
daa
inc
push
aas
iret
jmp
pop
test
add
sub
(bad)
daa
push
lock
add
add
sub
(bad)
data16
xor
mov
inc
cmp
push
inc
adc
jno
add
outs
jnp
cmp
pop
nop
adc
out
addr16
and
add
neg
lock
sbb
pop
(bad)
inc
cmp
sbb
aas
inc
cmp
cmp
sbb
into
xor
add
popa
sbb
adc
or
mov
add
add
pusha
adc
out
pop
add
cmp
push
rcl
ret
push
mov
ss
pop
and
aas
aam
adc
repnz
jmp
adc
adc
jno
push
sub
add
add
add
and
adc
mov
pop
dec
cmp
and
adc
jl
aaa
pop
and
das
cmp
and
adc
pop
mov
dec
cmp
es
lock
daa
xor
add
inc
daa
inc
adc
sahf
sub
cmp
sub
jp
mov
add
adc
add
aas
mov
xor
sub
aas
ja
push
xor
mov
cmp
sub
push
aas
inc
out
mov
adc
dec
cmp
adc
aas
and
(bad)
add
cmp
das
jo
aas
sub
pop
jl
ds
xor
pop
aas
lods
ds
stc
clc
sbb
xlat
xor
sbb
adc
inc
int
dec
cmp
xor
sbb
bound
add
clc
cmp
add
xor
push
lods
cmps
test
aaa
inc
sbb
jl
jnp
jle
dec
cmp
cmp
sbb
fnstcw
add
sbb
inc
pop
(bad)
loop
mov
add
add
cmp
sbb
int3
jnp
mov
add
add
cmp
or
iret
shl
adc
aas
movs
jmp
add
add
add
jo
aas
cld
jnp
scas
and
dec
cmp
inc
rcr
std
sbb
cmp
inc
and
mov
jne
and
cmp
add
add
int3
imul
cmp
dec
loopne
aas
xlat
cmc
outs
mov
add
add
dec
xor
aaa
mov
dec
cmp
dec
nop
sbb
int
test
cmp
dec
lock
xchg
add
dec
cmp
dec
push
push
aas
or
daa
mov
add
add
mov
xor
inc
scas
inc
cmp
push
add
aas
sub
inc
cmp
push
pusha
pop
aas
dec
and
loope
mov
add
inc
rcl
cmp
or
adc
aas
jmp
ror
add
sub
(bad)
mov
xchg
dec
cmp
cs
xor
cmp
das
cwde
and
fcmove
and
add
add
xor
and
lods
mov
adc
add
shl
lock
nop
and
cmp
xor
and
mov
and
cmp
xor
and
repz
adc
out
inc
cmp
xor
mov
jne
inc
cmp
ss
aas
ins
mov
push
fld
xor
dec
aaa
fsub
aas
sub
cmps
push
mov
add
jne
or
aas
mov
and
and
cmp
add
aas
hlt
pop
js
jns
inc
cmp
cmp
aas
bound
ficomp
add
aam
nop
and
jne
in
jecxz
inc
cmp
cmp
mov
fdiv
adc
lock
add
inc
sub
ss
cmp
aas
and
aas
hlt
daa
pushf
xchg
loope
inc
cmp
inc
dec
and
xor
push
test
add
aas
jne
jge
add
dec
cmp
inc
test
aas
sub
aaa
cmp
inc
fsub
aas
sbb
cmp
add
add
push
lods
popf
retf
or
add
add
xor
xor
xor
dec
pusha
and
push
cmp
add
nop
and
loope
fsubr
add
add
test
cmp
dec
call
jnp
cmp
cmp
dec
sbb
push
ja
dec
cmp
dec
dec
and
sub
add
add
js
aas
cmp
inc
repnz
push
mov
or
cmp
add
xor
cmp
fs
cmp
push
add
aas
jle
dec
jl
or
xor
es
push
les
cmp
push
pop
es
repz
ret
dec
inc
cmp
pop
mov
aas
push
sbb
dec
cmp
pop
mov
addr16
cmp
pop
call
inc
repnz
cmp
ror
pop
mov
movs
retf
add
add
rcr
push
mov
ins
mov
add
mov
popf
fwait
loope
sub
aam
push
mov
movs
shl
pop
push
mov
sbb
dec
mov
aad
push
mov
into
fs
mov
(bad)
call
adc
sbb
mov
(bad)
iret
adc
jno
pushf
xor
xlat
lahf
adc
(bad)
push
test
add
outs
adc
out
and
add
add
aas
adc
mov
stos
inc
mov
fstp
adc
ss
dec
mov
(bad)
adc
dec
xchg
pushf
cmp
inc
mov
fidivr
xor
inc
test
add
add
(bad)
adc
xor
jne
inc
retf
adc
add
add
fcomp
mov
pop
sti
clc
mov
fsubr
adc
repz
mov
add
add
call
mov
pop
ret
add
add
repz
mov
scas
adc
popf
fmul
add
add
mov
cmp
dec
ds
fisttp
mov
(bad)
add
pop
adc
sub
mov
loope
adc
jl
sbb
test
mov
inc
jge
pop
inc
mov
loop
adc
mov
mov
loop
adc
icebp
adc
add
add
adc
xchg
mov
jecxz
adc
jmp
add
fist
mov
loopne
dec
mov
in
adc
(bad)
mov
in
adc
div
add
add
dec
adc
ret
test
mov
out
adc
imul
add
out
adc
jl
xor
out
adc
add
adc
add
add
(bad)
adc
sbb
xor
add
add
int
jmp
add
cmp
aas
adc
mov
cs
jmp
jle
cld
jae
xor
add
add
retf
in
add
add
mov
pop
movsx
dec
dec
mov
(bad)
dec
mov
xor
sub
xlat
lahf
push
mov
std
inc
sti
mov
fdivr
push
mov
retf
mov
(bad)
or
xor
iret
stc
mov
ficomp
test
mov
mov
fstp
or
ins
or
cmp
(bad)
or
xchg
ffreep
scas
xchg
dec
mov
fdivr
mov
cmp
add
fstp
or
lahf
fwait
lods
xor
cmp
fidivr
(bad)
rcr
add
add
cmps
and
or
mov
loopne
or
add
sub
mov
scas
repnz
mov
mov
loop
or
mov
add
loopne
dec
mov
(bad)
mov
add
inc
clc
mov
std
mov
add
mov
aas
or
push
add
pop
in
or
jo
dec
mov
out
or
xchg
js
mov
out
or
sbb
add
js
sbb
mov
call
popf
(bad)
jbe
sbb
add
add
call
push
cwde
fisttp
xor
jmp
mov
push
shl
add
add
pop
push
mov
out
dec
mov
jmp
add
or
ror
add
jmp
add
stc
(bad)
xor
in
aas
add
push
scas
movs
and
add
add
fild
fmul
cmp
in
in
jg
mov
add
daa
mov
out
aas
add
adc
ds
out
fild
mov
lods
jbe
mov
out
jg
mov
xchg
push
daa
mov
lock
add
mov
sub
lock
push
inc
fiadd
add
jl
pop
add
in
inc
mov
repnz
mov
or
dec
mov
repnz
add
mov
add
push
repz
add
add
mov
repz
mov
mov
add
and
lahf
add
fdiv
add
sub
stc
xchg
dec
mov
jmp
mov
add
add
(bad)
(bad)
mov
xor
mov
in
aas
(bad)
mov
push
mov
add
std
mov
loopne
cmp
inc
out
mov
mov
cmp
mov
out
aas
cld
mov
daa
mov
mov
out
jg
mov
int
inc
mov
lock
mov
mov
icebp
(bad)
stc
mov
inc
call
add
aas
stc
mov
mov
add
and
jg
mov
(bad)
repz
mov
repz
ror
add
add
pop
je
xlat
push
dec
mov
cmc
aas
idiv
retf
sub
add
add
cmc
mov
mov
iret
test
mov
idiv
hlt
mov
sub
add
cmp
aas
hlt
mov
aas
adc
add
add
idiv
mov
fldl2t
inc
mov
clc
mov
mov
shr
add
add
stc
push
mov
pop
push
pop
mov
stc
aas
icebp
mov
adc
cmp
add
add
jg
mov
or
sub
add
add
jg
mov
pop
and
sbb
jg
mov
call
adc
(bad)
in
mov
jo
aaa
mov
idiv
mov
sti
xor
clc
(bad)
jmp
cmps
out
dec
mov
stc
jg
mov
lock
add
push
dec
jmp
xor
sti
jg
mov
shr
pop
mov
sti
jmp
mov
cmp
cld
jmp
mov
xor
inc
mov
cld
jg
mov
stos
sahf
cmp
cli
(bad)
fistp
push
fistp
mov
sti
(bad)
fdivr
cmp
add
cmp
fnstcw
mov
add
call
mov
mov
add
lock
call
mov
cmp
ss
(bad)
call
mov
out
inc
mov
(bad)
dec
mov
push
push
cmp
(bad)
inc
mov
loope
inc
mov
(bad)
inc
mov
shl
add
add
push
or
add
add
or
mov
mov
mov
push
mov
les
out
push
fs
cmps
ret
jns
arpl
mov
inc
cs
mov
add
lock
xor
push
lock
mov
mov
cmp
xor
sub
aas
pop
or
adc
call
outs
leave
ja
sbb
nop
mov
mov
lock
gs
movs
loop
lea
neg
sub
lock
es
loop
xchg
mov
xchg
aas
inc
cmp
repz
retf
lock
xor
dec
xchg
cmp
mov
ins
pop
mov
aas
or
dec
cmps
cwde
cmp
inc
jb
xchg
int3
lock
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
aas
push
jnp
daa
pop
cmp
sbb
(bad)
scas
data16
lock
jnp
dec
(bad)
in
fwait
imul
icebp
aas
cmp
xchg
mov
mov
movs
ins
mov
mov
mov
call
call
movs
enter
aas
or
cmp
jge
mov
mov
mov
jmp
aas
imul
shl
adc
jmp
mov
dec
jnp
pop
mov
pop
add
loopne
icebp
aas
pop
imul
xor
stos
mov
icebp
aas
cmp
mov
cmp
frndint
and
icebp
aas
mov
xchg
mov
cmp
repnz
xchg
test
jne
lea
fdivr
dec
pop
repnz
in
movs
xchg
xchg
jle
cmp
jne
jp
repnz
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
repnz
movs
hlt
hlt
mov
fnstsw
inc
imul
fldl2t
inc
cdq
xor
cmc
loope
test
aas
jge
aas
mov
dec
call
sahf
repnz
push
adc
cmp
(bad)
sar
repnz
mov
or
or
in
test
repnz
aam
fist
nop
cmp
das
ds
and
inc
bswap
jno
adc
push
repz
in
xor
push
xchg
fmul
and
aas
jl
sbb
call
fs
cmp
aas
movs
pop
test
daa
xchg
cmp
lahf
xchg
pop
lds
aas
sub
pop
out
pop
mov
jno
aas
loope
inc
mov
data16
aas
mov
xchg
sahf
mov
(bad)
popa
(bad)
ss
mov
sub
sub
clc
call
dec
cmps
fdivp
aas
mov
fimul
add
cli
repz
repz
push
stc
and
xchg
mov
or
hlt
aas
js
xor
repz
mov
cmc
xor
aas
cwde
jns
jecxz
mov
aas
iret
sub
jp
dec
cmp
add
aas
jbe
ror
pushf
cmp
cmp
mov
xchg
aas
lock
cmp
rcl
lock
shl
(bad)
retf
cdq
cmp
sub
aad
mov
in
scas
xchg
inc
jge
or
fdiv
aas
xor
mov
cmps
sub
jbe
stc
hlt
aas
jecxz
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
sub
sbb
setb
movs
push
cmc
aas
call
mov
inc
outs
cmc
aas
lods
xchg
sbb
cmp
(bad)
xchg
aam
(bad)
cmc
aas
out
call
push
dec
fld
stos
cmc
aas
lods
inc
inc
add
mov
pop
mov
leave
cmc
aas
mov
dec
cmp
dec
and
aas
pop
out
xor
cmps
fwait
cmp
fdiv
loope
idiv
inc
ficom
inc
loop
mov
jle
idiv
xchg
mov
jle
adc
inc
inc
idiv
xor
mov
(bad)
idiv
xor
xchg
mov
mov
push
xor
inc
scas
cmp
int
jg
sahf
mov
mov
xor
fwait
mov
adc
idiv
or
jmp
mov
das
sbb
mov
idiv
stos
mov
cmp
push
stc
jge
idiv
test
and
je
in
call
cdq
jp
xchg
cmp
aad
ins
fldcw
inc
push
jmp
idiv
shr
push
pop
and
mov
imul
cwde
cmp
add
jae
mov
add
ja
test
shl
aad
push
ror
cmp
dec
iret
ss
aas
jle
adc
cmp
sbb
push
daa
add
aas
sub
xchg
mov
mov
adc
mov
sbb
aas
sti
int
mov
in
xchg
inc
fldcw
aas
mov
(bad)
lahf
mov
(bad)
mov
aas
cmp
cdq
cmp
mov
clc
aas
es
xchg
jmp
mov
xor
clc
aas
stos
jecxz
xor
jo
ss
cdq
scas
icebp
clc
aas
ins
xchg
jecxz
adc
test
call
aas
and
popf
mov
aaa
aaa
stc
aas
mov
pop
addr16
inc
pop
stc
aas
cmp
movs
xchg
jl
jbe
push
dec
ficomp
rol
popf
mov
icebp
mov
into
xchg
mov
lock
aas
mov
jl
cmp
and
sbb
stc
aas
outs
dec
out
retf
cmp
in
jnp
or
aas
xor
sbb
dec
pop
xchg
mov
fwait
xor
aas
stos
fdivr
xor
mov
push
cli
aas
loope
(bad)
fld
popf
mov
sahf
jns
aas
(bad)
arpl
retf
fwait
cmp
std
jns
imul
push
leave
cli
nop
cmp
repz
shr
xor
(bad)
mov
lahf
call
pop
xor
mov
lea
pop
push
sti
aas
and
or
mov
mov
xlat
test
pop
and
pop
in
jb
sti
aas
jecxz
mov
mov
jbe
sti
aas
cmp
mov
mov
sti
aas
sub
cld
sahf
mov
push
int3
sti
aas
test
cmp
xlat
pop
ret
aas
jb
imul
std
sahf
mov
fwait
sbb
aas
fisttp
mov
cmp
inc
cld
aas
or
and
inc
fwait
cmp
rcl
icebp
addr16
aas
lods
cmp
dec
xchg
cmp
out
xchg
ins
(bad)
cld
aas
inc
pop
or
jno
imul
jmp
cmp
ret
pop
push
or
cld
aas
jb
adc
lea
pop
std
aas
pushf
jp
inc
aaa
mov
or
aas
ja
popf
jno
dec
popf
mov
sbb
aas
push
aaa
pop
xlat
add
cmp
leave
push
jecxz
std
aas
call
push
xchg
mov
out
std
aas
xor
pushf
cmp
mov
repz
std
aas
ret
js
ficom
xor
dec
sbb
movs
xchg
mov
inc
es
aas
xchg
adc
and
aas
mov
cs
(bad)
aas
(bad)
int3
test
cmp
dec
(bad)
sti
push
jp
aas
loope
or
and
xchg
cmp
nop
movs
mov
xchg
sub
icebp
mov
dec
iret
(bad)
aas
mov
pushf
mov
sbb
(bad)
aas
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
cmp
inc
outs
pop
jbe
(bad)
aas
mov
cdq
cmp
mov
(bad)
aas
or
popf
mov
shl
repz
dec
xchg
jno
sub
sar
aas
out
gs
je
bound
add
add
add
inc
add
add
add
cmp
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
aas
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
addr16
jg
push
aas
mov
imul
mov
aas
mov
cmp
mov
cli
inc
out
add
add
(bad)
(bad)
(bad)
inc
add
inc
inc
adc
add
add
lock
add
add
add
jg
add
add
add
inc
add
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
adc
add
add
add
clc
inc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
clc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
(bad)
jg
cmp
inc
out
xor
xchg
push
repz
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
lds
aas
adc
and
(bad)
dec
mov
lds
mov
push
push
aad
push
jp
cwde
cdq
cdq
leave
aas
sbb
add
add
loopne
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
add
lods
jmp
add
add
add
aas
add
add
add
aas
add
add
add
jmp
repnz
cwde
jmp
cwde
jmp
inc
jmp
inc
jmp
in
jmp
add
in
jmp
add
call
add
add
add
aas
add
add
add
aas
add
add
add
call
add
cli
call
add
lods
call
add
lods
call
add
(bad)
call
add
(bad)
call
add
sbb
aas
add
add
add
call
add
shl
aas
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
jecxz
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
add
add
add
test
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
cmp
test
(bad)
aas
adc
mov
leave
fidivr
add
fwait
jp
aas
xlat
out
daa
fldcw
and
add
ret
cmps
aas
shl
test
pop
cmp
xor
aas
inc
inc
mov
cmp
pop
inc
mov
rcl
rol
inc
cmp
mov
mov
inc
push
push
cmp
cmp
ins
xchg
mov
dec
jns
ds
pop
and
(bad)
aas
inc
cmp
cmp
sahf
xlat
sar
dec
js
and
or
cdq
ret
or
jns
dec
cmp
jb
dec
les
mov
sub
idiv
jbe
add
aas
in
(bad)
xlat
push
xor
or
out
and
add
mov
(bad)
xor
aas
cmp
mov
retf
sub
jmp
aaa
cmp
test
ds
xchg
into
aas
sbb
xchg
and
cmp
fdiv
and
iret
pop
aaa
cmp
add
sar
inc
or
out
xor
cmp
sbb
sar
mov
or
sbb
cmp
sub
test
cmp
loop
sar
ret
adc
and
add
push
sbb
sar
add
add
ret
aam
(bad)
int
or
cmp
sbb
pushf
or
cmp
sbb
pop
cli
mov
clc
dec
and
test
aas
sbb
mov
das
jb
cmp
sbb
aas
shl
(bad)
xor
mov
xlat
aas
mov
inc
addr16
scas
aas
cmp
rcr
push
pop
data16
cmp
add
fnstcw
inc
imul
push
fnstcw
pop
inc
repnz
add
fidivr
adc
adc
xchg
inc
fstp
(bad)
mov
xor
cmp
add
daa
sahf
int
fstp
push
fwait
xchg
outs
mov
cmp
mov
fdivr
ret
call
add
push
fnstsw
(bad)
cmove
sub
cmp
stos
aam
aas
std
sbb
sub
add
fidivr
mov
mov
cs
movups
aas
fdiv
aaa
popf
ja
sub
add
fistp
ins
(bad)
push
adc
ror
movs
and
dec
ins
sub
cmp
push
jb
aas
mov
loop
cmp
push
mov
rcr
dec
cs
jmp
loope
out
sub
adc
xor
aas
ret
shl
cmp
mov
loope
push
sub
add
outs
addr16
loope
stos
cmp
add
aas
jnp
dec
outs
push
cld
adc
sahf
ja
aas
jns
xor
cmp
sub
shl
mov
cmp
or
xor
pop
jecxz
xor
bound
fwait
xor
or
xor
cld
xchg
inc
sbb
fld
jecxz
mov
mov
fist
sbb
fsub
aas
ds
test
int
sub
iret
sbb
aas
test
push
mov
add
inc
iret
pop
arpl
aas
lods
retf
aad
sub
add
(bad)
call
test
xchg
test
ins
js
shr
in
and
xor
shl
es
sub
aas
leave
mov
push
add
sbb
xchg
ins
in
sahf
outs
shr
add
pop
push
stos
in
cli
arpl
jp
aad
add
and
sub
aas
mov
add
cmp
inc
cs
xor
xchg
push
repz
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
rcr
add
add
add
fstp
adc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
cmp
(bad)
jg
add
cmp
(bad)
jg
js
push
adc
pop
mov
pop
xor
pop
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
into
xchg
(bad)
adc
xor
or
xor
rcl
xchg
fadd
push
aas
neg
push
inc
xor
jp
mov
ins
jp
aas
add
in
test
jl
sbb
push
sub
add
fidiv
add
imul
add
xchg
aas
sbb
cld
cmp
ficomp
sahf
rcr
xor
neg
lods
mov
or
sbb
idiv
mov
icebp
bound
or
push
pop
cmps
aas
fist
sbb
mov
xchg
ror
push
shl
cmp
xor
lods
aas
pop
inc
fprem
fstp
cmp
adc
mov
jbe
scas
sub
pusha
icebp
in
pop
pushf
mov
aam
push
push
aas
loopne
cmp
sbb
mov
loop
cmp
daa
xchg
mov
rep
(bad)
int
les
cmp
jae
mov
lahf
jge
and
ret
pop
cmp
ja
mov
jp
mov
cmp
or
mov
int3
in
cmp
mov
mov
xor
icebp
ss
mov
mov
and
push
sub
es
sub
jmp
add
mov
repz
and
mov
lea
mov
add
cmp
fwait
ins
sar
cli
loope
lea
fisubr
lock
mov
cmp
aas
mov
xchg
icebp
sbb
add
(bad)
push
ret
ja
inc
or
sbb
test
or
add
pshufw
aas
jmp
mov
je
les
xor
mov
cmp
and
les
push
push
cs
jne
lds
sub
fbstp
cmp
sbb
lds
adc
sub
add
nop
push
mov
cdq
xchg
cld
sub
in
cmp
add
ins
pop
and
aas
int
inc
bound
push
sbb
xchg
mov
aas
lds
xchg
push
add
enter
xchg
add
push
or
int3
enter
iret
mov
add
out
fistp
aas
in
(bad)
jp
and
pop
jmp
repnz
push
xor
mov
sub
add
push
lds
stos
fs
imul
stc
jl
mov
aas
jb
js
and
xor
jecxz
int3
aas
jl
push
int
retf
xor
popf
xchg
int3
aas
jb
out
inc
mov
cmp
sti
adc
aas
or
sbb
pop
lahf
int
jae
xlat
mov
add
push
cmp
xchg
repnz
into
aas
xchg
adc
pop
pop
iret
aas
add
pop
cmp
sbb
idiv
and
pop
or
aas
jg
push
and
pop
cmp
or
(bad)
adc
cmp
xor
mov
cmp
jno
sar
xor
xor
add
sar
sbb
cmp
das
inc
sar
mov
xor
xchg
jp
aas
cdq
pop
sub
cmp
jp
sar
jle
jmp
iret
cmp
adc
fisttp
or
cs
daa
cmp
push
sar
stc
pop
movs
sub
jle
cmp
bound
aas
adc
or
sbb
inc
shl
aas
jns
sahf
lods
imul
or
aad
aas
mov
jmp
mov
sar
xor
mov
cdq
xchg
cmp
adc
pop
mov
pop
xor
pop
cmp
add
fstp
add
add
add
fstp
add
add
add
aas
add
add
add
aas
add
add
lock
add
lock
add
loopne
fidivr
add
add
loopne
fidivr
add
add
rcr
aas
add
add
rcr
aas
add
add
mov
add
add
add
add
add
add
add
add
fnstcw
add
add
push
add
aas
add
add
and
add
and
add
loopne
fdivr
add
add
loopne
fdivr
add
add
sub
xlat
aas
add
add
sub
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
ror
xlat
aas
add
add
ror
xlat
aas
add
add
add
aas
add
add
add
aas
add
add
test
(bad)
aas
add
add
test
(bad)
aas
add
add
shl
(bad)
aas
add
add
shl
(bad)
aas
add
add
jo
aad
add
add
jo
aad
add
add
adc
add
adc
add
sub
aas
add
add
sub
aas
add
add
inc
and
aas
add
add
inc
and
aas
add
add
shl
aam
add
add
shl
aam
add
add
pusha
cmps
aam
add
add
pusha
cmps
aam
add
add
push
add
add
aam
add
add
clc
sub
aas
add
add
clc
sub
aas
add
add
js
sar
add
add
js
sar
add
add
cmp
add
add
add
adc
add
add
add
add
clc
dec
sar
add
add
clc
dec
sar
add
add
js
sar
add
add
js
sar
add
add
jo
sar
add
add
jo
sar
add
add
loopne
sar
add
add
loopne
sar
add
add
fdivr
aas
add
add
fdivr
aas
add
add
dec
dec
sar
add
add
dec
dec
sar
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sar
add
add
jo
sar
add
add
pop
imul
add
sar
add
add
mov
add
add
add
add
add
add
add
add
jmp
add
add
sar
add
add
fadd
sar
add
add
fadd
sar
add
add
cmp
add
cmp
add
adc
aas
add
add
adc
aas
add
add
jo
sar
add
add
jo
sar
add
add
shl
aas
add
add
shl
aas
add
add
cwde
add
aas
add
add
cwde
add
aas
add
add
loopne
iret
aas
add
add
loopne
iret
aas
add
add
sub
add
add
sub
add
add
and
iret
aas
add
add
and
iret
aas
add
add
shl
aas
add
add
shl
aas
add
add
pusha
lahf
into
aas
add
add
pusha
lahf
into
aas
add
add
add
aas
add
add
add
aas
add
add
nop
sbb
aas
add
add
nop
sbb
aas
add
add
xor
int
add
add
xor
int
add
add
rcl
add
xchg
int
add
add
push
pop
int
add
add
push
pop
int
add
add
loopne
int
add
add
loopne
int
add
add
pusha
jecxz
aas
add
add
pusha
jecxz
aas
add
add
lock
int3
aas
add
add
lock
int3
aas
add
add
jo
int3
aas
add
add
jo
int3
aas
add
add
add
int3
aas
add
add
add
int3
aas
add
add
xor
aas
add
add
xor
aas
add
add
add
retf
aas
add
add
add
retf
aas
add
add
add
add
add
add
add
lock
add
add
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
sub
inc
adc
sub
adc
cli
inc
xchg
add
cli
inc
xchg
cmp
sahf
mov
cmp
sahf
mov
in
shl
pop
movs
push
push
push
lds
sub
es
push
movs
aas
jnp
(bad)
(bad)
(bad)
(bad)
fistp
dec
jne
push
mov
xor
sub
add
mul
push
ror
mov
add
popa
enter
mul
enter
inc
xchg
add
pop
cmps
call
pop
mov
add
pushf
das
jo
mov
shl
in
jecxz
add
mov
mov
rol
adc
add
lock
lds
call
bound
test
cmp
jb
add
mov
jmp
mov
cmp
imul
call
aam
add
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
add
repnz
cwde
sub
cmp
jl
gs
imul
xor
cmp
pop
cmc
popf
sahf
add
mov
or
xor
cmp
add
cmps
test
add
mov
mov
jne
cmp
add
dec
clc
rcr
fisttp
mov
cmp
add
jge
int3
mov
mov
aaa
cmps
jno
add
shl
xor
cmps
add
ins
dec
sub
and
dec
cmps
fiadd
add
mov
mul
or
add
adc
cmp
mov
or
add
mov
cmp
cmp
mov
xchg
mov
jp
into
nop
jbe
daa
sub
aad
mov
sub
cmps
sub
jbe
stc
add
pop
out
shl
popf
push
sub
sbb
daa
mov
inc
outs
add
loop
arpl
fld
stos
add
sub
xor
outs
out
add
mov
cdq
test
mov
mov
and
add
fdiv
xchg
cdq
cmp
and
cmp
add
mov
cmp
cmp
sahf
mov
into
xchg
sbb
mov
push
add
and
call
cmps
cmps
pop
mov
popa
mov
push
jmp
pop
add
inc
mov
jae
mov
(bad)
stos
loope
gs
dec
iret
ss
add
addr16
mov
adc
dec
cdq
mov
enter
xchg
cmp
xchg
inc
fldcw
add
lea
mov
or
inc
pop
repz
xor
cmp
ja
cdq
scas
icebp
or
cmp
push
pushf
mov
(bad)
aaa
aaa
or
stos
(bad)
stc
and
call
ficomp
daa
into
xchg
sub
scas
jno
nop
lock
add
ins
fwait
cmp
in
jnp
or
add
daa
xchg
cmp
and
or
mov
jae
test
cmp
std
jns
imul
xchg
ja
mov
call
sub
cmp
adc
or
scas
add
mov
bnd
or
int
pop
or
push
ror
int3
or
mov
scas
xor
push
test
fwait
sbb
lods
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
push
imul
nop
out
fsub
mov
add
jo
cmp
mov
dec
sub
pop
cmp
cmp
movs
sti
fcomp
pop
or
aad
pop
mov
test
dec
sbb
mov
jnp
xchg
cld
or
pusha
add
je
idiv
mov
cs
push
add
dec
or
fst
push
add
and
cmp
pop
popa
out
sbb
push
add
test
xor
inc
outs
pop
jbe
ltr
mov
fcom
sldt
add
add
add
aas
add
add
add
adc
out
cmp
inc
xchg
add
mov
add
add
add
lock
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
cmp
add
cmp
fs
add
fs
add
outs
gs
popa
data16
jb
add
outs
bound
add
pop
jns
add
xor
pop
jns
add
jns
outs
je
add
popa
bound
add
popaw
bound
add
add
arpl
add
add
cs
add
add
bound
add
add
arpl
add
add
cs
add
popf
ja
and
add
add
add
mov
mov
cmc
scas
aas
sub
ss
out
addr16
cmp
add
mov
add
add
out
mov
push
xchg
pusha
je
pop
add
add
add
add
mov
cwde
mov
enter
popa
add
add
add
aas
add
add
out
(bad)
ret
aas
xchg
clc
cmp
add
les
add
add
mov
xor
fdiv
add
add
add
enter
add
nop
retf
aas
and
and
add
add
add
add
aas
add
add
jne
iret
aas
(bad)
fld
(bad)
or
add
add
add
aas
add
add
inc
retf
mov
add
add
add
sar
add
add
(bad)
imul
add
add
add
aas
add
add
jo
mov
aam
adc
add
add
aas
add
add
not
aas
inc
adc
push
add
add
add
fdivr
add
add
dec
mov
aas
jmp
mov
add
add
fidivr
add
add
out
fidivr
jge
mov
pop
popa
cs
add
add
fdivr
add
add
mov
fdivr
fs
clc
sahf
in
adc
add
add
add
fidivr
add
add
lods
fnstsw
leave
fisttp
add
add
add
loopne
add
add
fld
aas
shl
mov
add
add
add
loope
add
add
sub
sbb
add
add
add
loop
add
add
inc
or
add
add
add
jecxz
add
add
sbb
idiv
add
add
add
in
add
add
xchg
loop
mov
in
or
add
add
add
in
add
add
inc
jecxz
pushf
or
add
add
add
out
add
add
shl
mov
(bad)
adc
add
add
add
out
add
add
test
and
div
add
add
add
call
js
cmp
aas
imul
add
add
add
jmp
test
adc
rcr
cmp
add
add
add
jmp
ins
out
add
and
add
add
add
jmp
add
add
cmps
add
aas
pop
xchg
out
arpl
add
add
aas
add
add
test
in
shl
add
add
aas
add
add
mov
push
lods
cmp
add
add
add
out
aas
add
add
cmc
lahf
call
mov
add
add
add
out
aas
add
add
jmp
adc
add
add
add
add
lock
add
add
cmp
mov
fcomp
add
add
add
add
and
pop
cmp
sub
add
add
add
icebp
aas
add
add
mov
mov
add
add
add
add
dec
add
aas
xchg
jb
in
daa
or
add
add
add
repnz
add
add
mov
cmp
sbb
add
add
add
add
jo
jmp
cmp
and
add
add
add
repz
add
add
popa
push
call
add
add
xor
add
add
in
aas
daa
pop
sbb
jl
cmp
add
add
add
hlt
aas
add
add
push
in
aas
into
jge
fs
and
add
add
add
add
push
outs
in
aas
xlat
mov
dec
push
js
add
add
add
cmc
aas
add
add
retf
xor
sub
add
add
add
add
out
aas
or
das
mov
add
add
add
aas
add
add
jl
aas
xchg
cmc
js
jl
xor
add
add
add
add
out
aas
sbb
fstp
cmp
adc
add
add
add
idiv
add
add
and
aas
mov
lea
add
add
xor
add
add
or
aas
mov
fnstenv
add
add
clc
aas
add
add
shr
gs
cs
add
add
add
push
lock
mov
cmps
inc
add
add
add
stc
aas
add
add
sub
aas
jbe
pop
mov
add
add
add
add
dec
lock
push
inc
pop
mov
add
add
add
cli
aas
add
add
adc
aas
daa
pop
loope
ror
add
add
add
add
lock
fwait
lahf
es
sahf
ret
add
add
add
sti
aas
add
add
lock
mov
dec
jb
push
inc
add
add
add
add
shl
aas
frstor
das
movs
daa
call
add
add
cld
aas
add
add
movs
repnz
pop
pop
int
add
aas
add
add
add
add
jmp
icebp
aas
or
aam
jge
pop
add
add
add
std
aas
add
add
gs
aas
out
dec
sbb
inc
add
add
add
add
sbb
rcr
push
into
nop
aas
add
add
add
(bad)
aas
add
add
addr16
aas
xchg
mov
sub
add
add
cmp
add
add
xor
sbb
xchg
dec
add
add
add
(bad)
aas
add
add
cmc
pushf
icebp
aas
xor
dec
add
add
add
add
int
arpl
repnz
inc
add
add
add
add
add
sub
shl
aas
fst
js
out
add
add
add
inc
add
add
call
adc
add
add
add
add
add
sar
add
add
add
add
add
lock
repnz
lds
xchg
mov
(bad)
dec
add
add
add
add
add
and
das
repnz
push
inc
dec
test
add
add
add
inc
add
add
mov
repnz
mov
add
add
add
add
xchg
pop
repnz
mov
adc
sar
add
add
add
add
add
push
out
jo
aas
xchg
push
dec
mov
add
add
add
inc
add
add
test
aas
inc
ss
xor
add
add
inc
add
add
xor
and
add
add
add
and
repnz
jae
add
add
add
add
add
add
inc
mov
retf
or
fsub
add
add
add
add
add
sub
fdivr
scas
rol
add
add
add
inc
add
add
push
out
aas
ffreep
sub
add
add
add
add
mov
push
dec
add
add
add
add
add
js
or
aas
sub
mov
add
add
add
add
add
add
in
repz
xor
jmp
add
add
add
inc
add
add
(bad)
sub
sub
ret
add
add
add
add
ds
mov
cmc
stos
xor
add
add
add
add
add
add
fwait
xlat
or
dec
add
add
add
add
shr
pop
aam
or
add
add
add
inc
add
add
out
repz
in
sti
cmps
sbb
add
add
add
add
cwde
cmp
cmp
add
add
add
add
ins
push
repz
push
loop
pop
push
sub
add
add
add
push
inc
add
add
repz
mov
cmp
add
add
add
inc
add
add
retf
and
cmovb
add
add
add
add
repz
test
jmp
add
rol
add
add
(bad)
repz
fwait
sbb
es
add
add
pop
inc
add
add
xchg
aam
aas
push
clc
inc
add
add
add
inc
add
add
(bad)
jo
ins
add
add
add
add
add
outs
adc
add
add
add
pop
inc
add
add
cld
repz
pop
mov
dec
add
add
add
or
add
(bad)
lds
hlt
aas
sub
lds
add
add
add
inc
add
add
adc
ins
sar
add
add
add
add
jne
in
inc
jecxz
add
add
add
or
add
inc
jo
hlt
aas
mov
push
adc
stc
xor
add
add
add
or
add
movs
cmp
hlt
aas
mov
mov
add
add
add
inc
add
add
inc
hlt
aas
div
aaa
add
add
add
add
push
hlt
aas
or
inc
retf
add
add
add
or
add
adc
cmp
dec
add
add
add
or
add
ror
hlt
aas
sbb
cmp
add
add
add
inc
add
add
ret
xchg
sbb
add
add
add
add
jnp
aas
xor
mov
xor
add
add
add
or
add
dec
sbb
test
add
add
add
or
add
mov
hlt
aas
(bad)
shl
inc
add
add
add
inc
add
add
imul
xchg
shl
add
add
add
add
movs
hlt
aas
js
xor
fwait
jne
add
add
add
or
add
cld
adc
dec
sub
bound
add
add
add
or
add
add
movs
mov
aas
sbb
es
int
inc
add
add
add
inc
add
add
cdq
sar
jecxz
dec
add
add
add
add
pop
retf
dec
outs
mov
add
add
add
or
add
add
js
hlt
aas
sub
cdq
cmp
add
add
add
or
mov
ss
dec
inc
sbb
cmp
add
add
add
inc
add
add
dec
in
aas
mov
dec
add
add
add
add
hlt
aas
adc
adc
add
ror
(bad)
div
aas
ds
es
add
add
add
push
inc
add
add
or
add
add
add
inc
add
add
dec
pop
cmc
aas
adc
push
push
or
add
add
add
add
pmaddwd
mov
movs
dec
add
add
add
push
inc
add
add
test
cmc
aas
xchg
mov
add
add
add
cmovo
add
pushf
jae
cmc
aas
add
xchg
dec
sti
push
dec
add
add
add
inc
add
add
inc
daa
cmc
aas
into
scas
mov
add
add
add
add
imul
cmc
aas
cmp
and
add
add
ror
add
add
movs
leave
iret
jmp
add
add
adc
add
or
ds
aas
xor
xchg
dec
arpl
add
add
add
adc
add
shl
aas
adc
xchg
add
add
add
inc
add
add
cmc
aas
add
dec
add
add
add
inc
add
add
push
cmc
aas
test
or
add
add
add
add
fcomp
aas
or
and
add
add
mov
add
sbb
aaa
add
add
add
adc
add
sub
cmp
add
add
add
adc
add
xor
cmc
aas
xchg
dec
adc
xor
add
add
add
inc
add
add
jbe
aas
push
mov
cs
and
add
add
add
adc
add
in
jl
aas
call
add
add
add
inc
add
add
in
and
mov
add
add
pusha
adc
add
xchg
nop
mov
aas
outs
sbb
add
add
add
add
neg
sub
add
add
add
add
sbb
mov
add
add
add
adc
add
add
pushf
cmc
aas
push
push
stos
js
jg
add
add
add
adc
add
push
push
mov
mov
mov
add
add
add
adc
add
xor
test
aas
push
(bad)
pop
and
mov
add
add
adc
add
adc
cmc
aas
lods
in
cmp
mov
add
add
add
inc
add
add
cmc
aas
jno
mov
or
add
add
add
inc
add
add
mov
and
xlat
shl
add
add
adc
add
add
cmc
aas
or
mov
add
add
add
add
adc
cmc
aas
or
shr
pop
cmp
add
add
add
adc
add
inc
pushf
retf
scas
mov
cli
cmp
add
adc
add
les
shl
aas
xchg
or
(bad)
cmp
add
adc
add
mov
stos
cld
xchg
(bad)
test
add
add
adc
add
test
(bad)
aas
mov
cs
xor
add
add
add
inc
add
add
loopne
aas
loop
jne
jl
cmp
add
add
add
inc
add
add
inc
sbb
cmp
add
add
add
add
push
lods
xor
std
mov
add
add
add
jnp
cmc
aas
sub
outs
inc
add
add
add
adc
add
and
hlt
cmc
aas
js
xchg
clc
adc
add
add
add
adc
add
adc
stc
cmc
aas
retf
aad
ins
test
add
add
add
adc
add
add
push
(bad)
cmc
aas
xchg
lock
cmp
add
add
adc
add
add
sub
scas
ficomp
cmp
add
inc
adc
add
add
cmc
pop
idiv
add
cmp
add
add
inc
add
add
lods
or
aas
sbb
push
and
add
add
add
add
mov
inc
ds
add
add
add
cmc
and
pusha
(bad)
dec
add
add
add
adc
add
add
test
idiv
cdq
jge
adc
xor
add
add
add
adc
add
add
push
pop
idiv
scas
xor
add
add
add
adc
je
and
aas
jmp
inc
add
add
add
adc
xor
daa
idiv
mov
and
and
add
add
add
inc
add
add
sub
aas
xchg
in
fiadd
add
add
add
inc
add
add
mov
cmovne
add
add
add
add
into
xor
aas
out
popa
repz
add
add
mov
add
add
idiv
stc
lea
mov
inc
add
add
add
adc
in
cmp
dec
inc
push
cmp
add
adc
inc
dec
inc
idiv
int
add
neg
add
add
push
inc
add
add
pusha
inc
idiv
popa
jo
dec
xor
add
add
push
inc
add
add
movs
cdq
cmp
add
add
add
inc
add
add
arpl
aas
movs
repnz
add
add
add
inc
add
add
push
idiv
dec
jns
ficomp
add
add
adc
add
add
cmp
aas
jbe
addr16
das
add
add
add
add
push
fimul
add
add
rcl
add
add
jmp
out
jecxz
jns
add
add
add
push
inc
add
add
pusha
idiv
inc
and
sbb
add
add
add
pop
inc
add
add
sti
out
movs
sahf
dec
add
add
add
pop
inc
add
add
and
aas
shl
shl
dec
add
add
add
inc
add
add
leave
imul
imul
sbb
jge
add
add
add
inc
add
add
mov
mov
add
add
add
add
cwde
fwait
clc
add
dec
add
add
add
add
mov
aas
sub
dec
add
add
add
pop
inc
add
add
jp
aas
jmp
icebp
inc
daa
cmp
add
add
pop
inc
add
add
jge
aas
pop
or
in
in
add
add
add
sbb
add
mov
xor
xor
dec
add
add
add
sbb
add
fsub
idiv
push
loop
adc
add
add
add
inc
add
add
idiv
push
dec
push
or
add
add
pusha
sbb
add
js
mov
aas
(bad)
push
xor
jmp
add
add
add
mov
aas
in
sub
add
add
add
add
idiv
jno
enter
dec
add
add
add
sbb
add
dec
jmp
idiv
enter
cmp
add
add
add
sbb
add
cmp
cwde
idiv
(bad)
mov
add
add
add
inc
add
add
fwait
idiv
retf
and
mov
add
add
add
sbb
add
inc
jne
idiv
out
xchg
repnz
add
add
inc
add
add
xchg
mov
add
add
add
inc
add
add
movs
idiv
pop
mov
add
add
add
add
test
xor
jge
add
add
add
add
stos
idiv
xchg
or
cmp
add
add
add
sbb
add
mov
lods
idiv
ins
or
push
pop
add
add
add
add
sbb
add
call
cli
test
shl
pusha
or
add
add
add
sbb
add
add
fs
idiv
add
add
add
sbb
add
adc
mov
aas
loope
push
jbe
inc
inc
add
add
add
inc
add
add
mov
enter
dec
add
add
add
inc
add
add
jge
adc
mov
add
add
add
mov
jbe
sti
loop
add
add
add
add
ret
int3
scas
sub
add
add
add
sbb
add
mov
(bad)
idiv
xchg
sti
call
xor
add
add
add
sbb
add
jl
(bad)
idiv
pop
jae
stos
mov
inc
add
add
add
sbb
add
adc
idiv
stos
fs
xchg
push
sbb
add
add
add
sbb
add
push
dec
idiv
mov
dec
dec
add
add
add
inc
add
add
iret
idiv
imul
(bad)
xor
add
add
add
inc
add
add
shl
aas
mov
retf
add
add
add
add
aam
aas
push
mov
mov
add
add
add
add
fwait
xlat
idiv
(bad)
(bad)
jmp
add
add
add
sbb
add
cmp
(bad)
aas
mov
mov
add
add
sbb
add
js
fdiv
aas
aaa
outs
lods
in
stos
dec
add
add
add
sbb
add
add
push
fcomip
aas
cmps
dec
arpl
pop
test
add
add
add
sbb
add
add
fsub
idiv
sti
jp
xchg
inc
add
add
inc
sbb
add
add
in
aas
and
icebp
inc
arpl
add
add
add
inc
add
add
aad
idiv
xlat
push
fisub
call
add
add
dec
jmp
hlt
add
add
add
add
add
xlat
ins
and
hlt
cmp
add
sbb
add
add
sbb
and
add
add
add
sbb
add
add
lock
pop
dec
add
add
add
sbb
cmp
repnz
add
sahf
dec
cli
test
add
add
add
sbb
dec
dec
cmc
idiv
call
add
add
add
inc
add
add
idiv
mov
sub
add
add
add
inc
add
add
idiv
cmp
idiv
std
xor
add
add
add
add
pop
jnp
jg
inc
add
add
add
add
mov
idiv
cli
inc
pop
retf
xchg
jg
add
add
add
sbb
inc
into
add
aas
push
xchg
nop
xor
add
add
add
sbb
clc
or
idiv
ja
xor
sbb
xor
add
add
add
push
inc
add
add
inc
add
dec
call
add
add
push
inc
add
add
pop
idiv
dec
pop
lods
das
add
add
add
inc
add
add
adc
add
add
add
inc
add
add
mov
pusha
xchg
add
add
add
add
idiv
call
add
add
add
add
and
idiv
ins
add
add
add
add
push
inc
add
add
inc
adc
aas
jle
sub
mov
add
add
add
push
inc
add
add
push
dec
rcl
add
add
add
pop
inc
add
add
jnp
mov
inc
add
add
add
pop
inc
add
add
idiv
jecxz
xor
ror
and
add
add
add
inc
add
add
test
xor
dec
or
add
add
add
inc
add
add
pop
inc
ficom
add
add
add
add
(bad)
addr16
shr
add
add
add
add
xor
sub
add
add
add
pop
inc
add
add
push
pusha
inc
xor
add
add
add
pop
inc
add
add
cmp
retf
inc
add
add
add
and
sub
stc
aas
pop
pop
adc
cmps
xchg
cmp
jns
je
ins
push
outs
outs
je
add
and
mov
mov
add
mov
repnz
retf
rcl
mov
add
dec
mov
les
or
scas
int
adc
leave
loop
popa
stc
push
mov
xor
adc
xlat
add
xor
rcl
mov
add
dec
fld
sbb
add
add
add
sbb
add
jmp
add
push
push
inc
push
cmp
repnz
mov
inc
div
mov
add
add
cmp
imul
outs
jb
sub
xor
outs
jae
popa
ins
ins
gs
ja
outs
outs
ja
pop
bound
ins
fs
jb
ins
gs
jae
pop
popa
jo
jae
bound
je
je
popa
jo
gs
jo
bound
add
icebp
dec
add
add
add
add
add
dec
add
add
add
add
icebp
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
mov
dec
add
(bad)
(bad)
inc
add
add
add
cwde
mov
add
add
add
add
add
test
dec
add
add
icebp
dec
add
mov
add
add
add
add
add
aam
dec
add
mov
add
cld
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
repnz
add
add
add
add
add
add
sbb
dec
add
mov
dec
add
add
add
repnz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
pusha
mov
add
add
add
add
add
jo
dec
add
add
mov
add
add
add
add
add
pushf
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
and
dec
add
mov
add
add
add
add
add
call
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fdivr
add
pop
repz
add
dec
add
add
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
repz
add
dec
add
add
add
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
hlt
dec
add
add
add
add
add
add
int3
mov
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
mov
add
add
add
add
add
sbb
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
or
add
pusha
hlt
dec
add
dec
add
add
add
dec
add
add
mov
add
pusha
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
mov
add
mov
dec
add
add
add
add
add
add
lods
mov
dec
add
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
mov
add
mov
mov
add
add
add
add
add
clc
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
add
add
hlt
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
hlt
dec
add
add
add
add
add
add
xchg
ror
ror
ror
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
hlt
dec
add
ror
add
add
add
add
add
add
ror
ror
mov
add
cld
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
ror
add
add
dec
add
add
add
dec
add
add
mov
add
adc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
ror
ror
mov
add
push
cmc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
ror
add
add
add
add
add
add
ror
ror
add
add
add
(bad)
(bad)
inc
add
add
add
rol
dec
add
test
dec
add
add
add
ret
cmp
dec
add
dec
add
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
dec
add
test
dec
add
add
add
dec
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
dec
add
add
add
ret
int3
ret
inc
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
ret
add
add
or
dec
add
dec
add
ret
inc
mov
add
test
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
ret
xor
dec
add
add
add
pop
ret
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
ret
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
ret
dec
add
ret
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
add
add
ret
dec
add
ret
dec
add
add
dec
add
add
and
dec
add
les
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
add
js
dec
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
pop
dec
add
add
add
add
add
add
int3
les
fadd
dec
add
ret
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
add
add
add
add
add
sbb
dec
add
lds
inc
lds
add
add
pop
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
add
add
jo
dec
add
add
dec
add
add
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
pop
dec
add
lds
add
add
in
lds
clc
lds
inc
mov
add
lock
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fadd
dec
add
dec
add
(bad)
dec
add
add
add
(bad)
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
dec
add
(bad)
dec
add
ret
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
(bad)
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
(bad)
dec
add
dec
add
add
add
dec
add
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
(bad)
dec
add
or
loopne
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
add
add
add
enter
add
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
enter
add
add
or
lods
enter
add
add
add
add
add
mov
enter
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lods
enter
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
leave
dec
add
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
leave
dec
add
add
add
add
leave
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
je
dec
add
leave
dec
add
add
ror
dec
add
leave
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
dec
add
add
and
dec
add
retf
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
or
push
add
add
add
add
add
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
or
mov
dec
add
add
add
retf
aam
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
or
add
dec
add
add
add
dec
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
or
push
retf
dec
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
retf
dec
add
or
movs
retf
dec
add
add
add
dec
add
ret
inc
mov
add
and
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
retf
dec
add
dec
add
retf
dec
add
add
add
dec
add
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
hlt
retf
dec
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
int3
dec
add
dec
add
add
add
add
add
add
pushf
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
int3
dec
add
add
add
int3
dec
add
int3
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fmul
dec
add
int
add
add
add
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
or
jo
dec
add
add
add
int
add
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
or
add
int
add
add
add
int
add
int
add
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
or
add
into
dec
add
add
add
into
dec
add
into
dec
add
int3
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
dec
add
add
dec
add
add
add
add
add
add
movs
into
dec
add
lds
add
add
pusha
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
into
dec
add
add
add
add
add
into
dec
add
iret
dec
add
dec
add
dec
add
add
iret
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
lock
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
iret
dec
add
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
add
add
iret
dec
add
add
add
add
or
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
or
or
dec
add
or
add
add
ror
add
add
dec
ror
pusha
ror
jl
dec
add
leave
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cwde
ror
add
add
test
dec
add
add
leave
dec
add
add
or
dec
add
add
add
ror
in
ror
or
dec
add
add
add
add
or
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
or
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
ror
inc
mov
add
sub
dec
add
add
add
ror
js
dec
add
ror
or
dec
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
ins
push
dec
add
add
add
add
add
add
add
ror
sub
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
ror
add
add
or
dec
add
dec
add
ror
je
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
clc
ror
les
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
add
add
ror
cmp
dec
add
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
nop
ror
add
add
mov
ror
dec
into
dec
add
cmovge
rcl
add
ror
call
ror
inc
ror
adc
add
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcl
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
add
xor
dec
add
dec
add
add
into
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
ror
add
add
jo
dec
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
add
add
lods
ror
adc
add
add
ror
add
add
(bad)
dec
add
ror
add
add
nop
cmovge
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
add
add
adc
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
cmovge
dec
aam
add
add
add
add
add
into
dec
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
aam
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
aam
add
add
add
dec
add
add
dec
add
aam
add
add
add
aam
add
aam
add
aad
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pop
aad
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
add
aad
add
into
dec
add
aad
add
add
add
aad
add
dec
add
(bad)
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
dec
add
add
adc
ins
(bad)
dec
add
add
add
add
dec
add
add
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
(bad)
dec
add
dec
add
add
add
add
add
add
int3
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
dec
add
(bad)
dec
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
xlat
dec
add
dec
add
add
add
dec
add
xlat
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
xlat
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
in
xlat
dec
add
add
add
xlat
dec
add
xlat
dec
add
add
dec
add
dec
add
add
add
dec
add
dec
add
add
fmul
adc
add
add
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
add
fmul
fmul
test
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
fmul
add
add
aam
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
add
add
dec
add
fmul
adc
add
add
(bad)
add
add
dec
(bad)
pop
(bad)
sub
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
(bad)
add
add
cwde
(bad)
test
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
add
add
call
(bad)
add
add
ins
adc
(bad)
(bad)
(bad)
inc
add
add
add
fcomp
dec
add
dec
add
add
add
fimul
cmp
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
dec
add
leave
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
adc
mov
add
add
add
add
add
add
fimul
aam
dec
add
fimul
add
add
enter
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
adc
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
dec
add
fimul
cld
adc
cmp
dec
add
add
add
dec
add
add
enter
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
add
fisttp
mov
aad
add
fisttp
adc
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
fisttp
mov
aad
add
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
push
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
fmul
add
add
add
add
or
add
movs
fmul
fcomp
dec
add
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
fmul
fcom
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
fisttp
hlt
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
add
add
jl
dec
add
fisttp
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
inc
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
fisttp
movs
fisttp
add
add
inc
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
dec
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
mov
fmul
add
add
adc
add
add
add
mov
fmul
in
dec
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
fimul
loopne
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
or
dec
add
dec
add
adc
dec
add
add
add
dec
add
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
adc
dec
add
add
sbb
add
dec
add
fisttp
dec
into
dec
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
int3
fisttp
add
add
(bad)
dec
add
fisttp
dec
into
dec
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
loopne
add
fisttp
dec
into
dec
add
dec
add
loopne
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
loopne
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
dec
add
loopne
add
add
add
loopne
add
loope
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
loope
add
add
add
dec
add
dec
add
add
push
dec
add
dec
add
add
add
loope
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
add
add
aam
dec
add
fimul
sub
dec
add
add
dec
add
loope
add
add
add
dec
add
dec
add
leave
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
loope
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
loop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
loop
add
add
add
dec
add
add
dec
add
loope
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lock
add
jecxz
add
loop
add
fimul
sub
dec
add
add
pop
dec
add
dec
add
add
add
dec
add
dec
add
enter
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
pop
dec
add
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
dec
add
in
add
add
add
in
add
in
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
and
dec
add
icebp
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
in
add
in
add
mov
add
pushf
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
add
dec
add
add
add
add
add
add
and
dec
add
in
add
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
dec
add
add
add
add
add
add
add
dec
add
dec
add
fimul
sub
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
in
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
add
in
add
loope
add
leave
dec
add
add
dec
add
add
dec
add
add
add
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
add
add
cmp
dec
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
add
add
add
add
dec
add
dec
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
cmp
add
add
js
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
jns
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
add
add
dec
add
dec
add
out
add
add
add
out
add
out
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
shl
add
dec
add
call
add
add
add
add
add
xor
dec
add
dec
add
into
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
call
add
add
add
add
add
sub
add
aad
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
cmp
add
call
add
add
add
push
add
add
call
dec
add
dec
add
leave
dec
add
add
jmp
dec
add
add
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
shr
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
dec
add
add
add
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
cmp
add
call
add
js
dec
add
in
add
add
add
add
add
add
dec
add
in
add
add
jg
add
and
add
adc
add
nop
inc
add
add
pop
or
fist
or
sti
pop
or
sbb
or
cmp
or
pop
sbb
add
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
js
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
mov
or
mov
sbb
add
or
sbb
add
sbb
add
sbb
add
or
dec
sbb
add
or
mov
or
fcomp
add
sbb
or
pop
sbb
or
cwde
sbb
or
fcomp
or
test
or
scas
push
or
ficomp
or
xor
or
test
or
loope
or
sub
or
fldenv
or
clc
and
add
and
add
or
jnp
or
cwde
and
add
and
add
and
add
and
add
or
mov
or
int3
and
add
and
add
or
test
or
shl
or
repz
add
and
add
and
add
or
mov
and
add
and
or
pop
or
push
or
jae
or
mov
or
mov
or
(bad)
or
stc
or
sub
or
pop
daa
or
mov
or
test
or
call
sub
add
or
cwde
sub
add
sub
add
sub
add
sub
add
sub
add
or
xchg
sub
add
sub
add
sub
add
or
push
sub
add
sub
add
sub
add
sub
add
or
mov
sub
add
or
sub
test
sub
add
sub
add
sub
or
fsubr
or
dec
or
push
or
fld
or
or
or
cmp
or
pop
das
or
mov
das
or
fsubr
or
and
or
popa
xor
add
xor
add
xor
add
xor
add
or
mov
or
mov
xor
add
xor
add
or
js
or
cwde
xor
add
or
and
add
cmp
add
cmp
add
cmp
add
cmp
add
or
icebp
cmp
add
cmp
add
or
jnp
or
stos
cmp
add
cmp
add
cmp
or
mov
aas
or
xor
add
or
jns
or
fwait
inc
or
mov
inc
or
sti
inc
or
and
add
or
leave
inc
or
cmp
mov
inc
or
sub
add
or
mov
inc
or
add
add
or
imul
add
inc
or
call
dec
or
sub
add
or
push
dec
or
mov
dec
or
fisttp
add
dec
or
sbb
add
dec
or
pop
dec
or
xchg
dec
or
test
or
fisttp
add
dec
or
cmp
add
or
jle
or
cwde
dec
or
ds
or
pop
dec
or
mov
add
add
dec
or
mov
dec
or
clc
dec
or
cmp
add
or
fmul
add
or
mov
dec
or
inc
dec
or
clc
dec
or
mov
add
push
or
rcl
add
or
clc
push
or
call
push
or
pop
push
or
test
push
or
rcl
add
push
or
and
add
or
jo
or
nop
push
or
loope
or
clc
push
or
sbb
add
or
js
or
test
or
mov
pop
or
push
pop
or
xor
add
or
jo
or
cwde
pop
or
rcr
add
pop
or
adc
xor
push
pop
or
cdq
pop
or
mov
pop
or
xor
add
or
enter
lock
or
and
add
pusha
or
push
pusha
or
mov
add
pusha
or
push
popa
or
sub
add
or
xchg
popa
or
lock
or
enter
nop
arpl
add
or
inc
or
jo
or
mov
or
nop
or
loopne
or
adc
add
or
and
mov
or
pop
or
clc
or
cwde
push
or
call
push
add
ins
or
pop
ins
or
call
ins
or
shr
add
add
outs
or
loopne
or
or
add
outs
or
cwde
outs
or
shr
clc
outs
or
js
or
test
or
repz
add
or
sbb
lds
fdiv
cld
je
add
jne
add
or
xchg
jne
add
jne
add
jbe
add
or
jg
or
stos
jbe
add
jbe
add
ja
add
or
push
ja
add
or
pushf
ja
add
ja
add
ja
add
js
add
or
imul
add
js
add
jns
add
or
xchg
jns
add
jns
add
jns
add
jp
add
jp
add
or
sahf
jp
add
jp
add
jp
add
jnp
add
or
inc
jnp
add
or
fwait
jnp
add
jl
add
jl
add
or
xchg
jl
add
jl
add
jl
add
jge
add
or
pushf
jge
add
jge
add
jle
add
add
or
call
add
jle
add
jle
add
jg
add
jg
add
or
mov
add
jg
add
or
cmp
or
outs
or
mov
or
rol
add
or
sbb
or
pop
or
add
or
add
or
xor
or
xchg
or
int
or
lock
adc
or
pop
or
jl
or
lahf
or
ret
add
or
or
add
or
jno
or
xchg
test
add
test
add
test
add
test
add
or
jbe
or
movs
test
add
test
add
xchg
add
xchg
add
or
add
add
or
mov
or
iret
xchg
add
xchg
add
mov
add
or
jle
or
mov
mov
add
mov
add
mov
add
mov
add
or
xchg
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
add
mov
add
mov
add
or
daa
mov
add
or
jb
or
xchg
mov
add
mov
add
mov
add
lea
add
lea
add
or
mov
lea
add
lea
add
mov
add
or
push
mov
add
or
mov
(bad)
(bad)
(bad)
vprotb
or
into
(bad)
(bad)
nop
or
bound
or
test
or
retf
nop
or
out
nop
or
adc
or
jne
or
call
add
xchg
or
or
xchg
or
push
xchg
or
jns
or
pushf
xchg
or
rcl
or
pop
xchg
or
sub
or
jo
or
adc
add
xchg
or
icebp
xchg
or
add
add
or
xchg
xchg
or
test
or
retf
xchg
or
icebp
xchg
or
adc
or
push
xchg
or
jnp
or
mov
xchg
or
clc
xchg
or
xor
or
js
or
inc
xchg
or
js
or
adc
or
dec
cwde
or
inc
cdq
or
nop
cdq
or
push
call
or
add
or
cwde
pushf
or
adc
or
mov
popf
or
lock
or
and
or
pusha
sahf
or
mov
sahf
or
push
lahf
or
and
or
mov
lahf
or
lock
or
or
or
dec
mov
or
mov
mov
or
push
mov
or
and
add
mov
or
xor
add
movs
or
and
or
and
add
movs
or
loopne
or
sti
movs
or
and
or
push
cmps
or
enter
add
or
js
or
cmps
cmps
or
shl
add
test
add
or
xchg
test
add
test
add
test
or
push
test
or
mov
test
or
pop
stos
or
mov
or
in
or
pop
stos
or
sub
or
jo
or
fwait
stos
or
mov
stos
or
add
or
push
lods
or
cmps
lods
or
(bad)
(bad)
(bad)
push
dec
add
add
add
mov
add
add
(bad)
(bad)
call
add
add
in
dec
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
hlt
hlt
dec
add
(bad)
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
dec
add
add
add
add
inc
adc
add
add
fs
dec
add
add
add
dec
add
add
(bad)
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
xor
inc
add
add
add
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
and
inc
add
(bad)
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
add
dec
add
(bad)
(bad)
push
add
add
sub
dec
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
dec
add
(bad)
(bad)
jmp
sbb
and
add
in
dec
add
(bad)
(bad)
inc
sbb
and
add
adc
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
and
add
cmp
dec
add
(bad)
(bad)
call
dec
add
add
add
js
dec
add
(bad)
(bad)
push
dec
add
add
add
movs
test
(bad)
(bad)
(bad)
call
add
add
shl
dec
add
(bad)
(bad)
push
add
add
cld
test
(bad)
(bad)
(bad)
call
sbb
and
add
sub
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
(bad)
(bad)
clc
sbb
and
add
push
clc
dec
add
(bad)
(bad)
call
sbb
and
add
mov
dec
add
(bad)
(bad)
push
sbb
and
add
mov
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
loopne
dec
add
(bad)
(bad)
push
dec
add
add
add
adc
dec
add
(bad)
(bad)
jmp
add
add
inc
stc
dec
add
add
add
nop
stc
dec
add
(bad)
(bad)
call
sbb
(bad)
(bad)
(bad)
(bad)
fcomp
dec
add
add
add
sbb
add
add
jmp
dec
add
add
add
sbb
add
add
(bad)
sbb
and
add
in
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
add
add
inc
sbb
add
add
dec
sbb
(bad)
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
adc
dec
add
(bad)
(bad)
call
add
add
add
add
dec
cli
dec
add
(bad)
(bad)
push
add
add
jl
dec
add
(bad)
(bad)
call
sbb
and
add
test
dec
add
add
add
clc
cli
dec
add
(bad)
(bad)
push
sbb
add
add
clc
sbb
add
add
add
add
add
add
sbb
add
add
add
sbb
add
(bad)
(bad)
push
sbb
add
add
add
sbb
add
add
add
dec
add
add
add
and
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
pop
sti
dec
add
add
add
mov
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
sbb
add
(bad)
(bad)
dec
sbb
add
(bad)
(bad)
call
sbb
add
add
add
in
dec
add
(bad)
(bad)
push
sbb
add
(bad)
(bad)
(bad)
clc
sbb
add
add
add
and
dec
add
add
add
js
dec
add
(bad)
(bad)
call
sbb
(bad)
call
sbb
add
and
add
sub
add
xor
(bad)
(bad)
cmp
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
or
dec
add
(bad)
(bad)
push
add
add
xor
dec
add
(bad)
(bad)
call
sbb
xchg
sbb
add
add
dec
add
add
add
mov
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
sti
sbb
add
add
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
add
add
or
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
(bad)
jns
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
inc
dec
(bad)
(bad)
(bad)
inc
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
cmp
add
add
add
loopne
dec
add
(bad)
(bad)
push
push
dec
add
add
add
push
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cwde
dec
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
pop
dec
add
add
add
and
add
add
push
and
add
add
sbb
dec
add
add
add
and
and
add
pop
add
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
(bad)
(bad)
(bad)
dec
and
(bad)
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
push
and
and
add
loopne
dec
add
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
call
and
and
add
or
dec
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
inc
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
push
add
add
add
add
in
dec
add
(bad)
(bad)
call
and
add
add
(bad)
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
and
add
add
sti
and
and
add
dec
add
add
add
add
add
movs
add
add
add
(bad)
(bad)
jmp
and
add
add
adc
dec
add
add
add
and
add
add
and
dec
add
add
add
dec
add
add
add
dec
add
add
add
daa
inc
add
add
add
add
add
add
add
add
add
cmc
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
dec
add
(bad)
(bad)
jmp
and
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
push
and
(bad)
(bad)
(bad)
inc
and
(bad)
(bad)
(bad)
dec
dec
add
add
add
add
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
jmp
dec
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
add
add
enter
(bad)
(bad)
(bad)
inc
and
add
add
enter
and
add
xchg
add
add
add
add
add
add
add
add
add
shl
add
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
and
add
add
call
add
add
adc
add
(bad)
(bad)
(bad)
inc
and
add
add
add
inc
add
add
(bad)
(bad)
(bad)
jmp
and
add
add
add
and
add
add
add
jo
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
movs
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
fadd
add
and
add
cmp
dec
add
(bad)
(bad)
push
add
add
add
add
and
add
(bad)
(bad)
dec
and
add
(bad)
(bad)
call
and
add
(bad)
(bad)
push
and
add
add
add
and
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
and
add
sub
add
xor
add
ds
xchg
sbb
add
xchg
push
dec
add
add
add
add
add
add
add
pop
dec
add
add
add
inc
pop
dec
add
add
add
push
dec
add
add
add
cmc
dec
add
(bad)
(bad)
jmp
inc
add
add
add
icebp
dec
add
add
add
inc
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
into
and
add
(bad)
and
add
add
add
adc
add
loope
dec
add
add
add
and
add
add
add
adc
add
jmp
add
pop
es
add
add
add
and
(bad)
dec
es
add
(bad)
(bad)
call
es
add
(bad)
(bad)
push
es
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
add
add
push
add
add
(bad)
(bad)
jmp
add
add
add
add
xchg
or
add
add
(bad)
(bad)
inc
es
add
add
add
es
add
add
add
enter
(bad)
(bad)
(bad)
jmp
es
add
add
add
cld
or
add
add
(bad)
(bad)
call
daa
dec
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
push
or
add
add
(bad)
(bad)
push
dec
add
add
add
or
add
(bad)
(bad)
jmp
add
add
lods
or
add
add
add
add
cld
or
add
add
(bad)
(bad)
inc
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
dec
or
add
add
(bad)
(bad)
inc
sub
add
add
or
dec
add
add
add
sub
(bad)
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
jmp
sub
and
add
xchg
or
add
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
(bad)
(bad)
push
dec
add
(bad)
(bad)
call
add
add
int3
or
add
add
(bad)
(bad)
push
add
add
clc
or
add
add
(bad)
(bad)
call
sub
and
add
and
dec
add
(bad)
(bad)
push
sub
and
add
push
or
add
add
(bad)
(bad)
call
sub
and
add
jl
dec
add
(bad)
(bad)
push
sub
and
add
test
dec
add
(bad)
(bad)
call
dec
add
add
add
aam
dec
add
(bad)
(bad)
push
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
xor
dec
add
(bad)
(bad)
call
sub
add
add
shr
add
add
add
sub
add
add
jmp
add
add
pusha
or
add
(bad)
(bad)
inc
sub
and
add
movs
or
add
(bad)
(bad)
push
sub
add
add
and
dec
add
add
add
sub
add
add
dec
sub
and
add
ror
add
(bad)
(bad)
jmp
dec
add
add
add
adc
dec
add
(bad)
(bad)
inc
add
add
inc
or
add
(bad)
(bad)
(bad)
jmp
add
add
ins
or
add
(bad)
(bad)
(bad)
inc
sub
and
add
cwde
or
add
(bad)
(bad)
(bad)
push
sub
and
add
les
add
(bad)
(bad)
(bad)
call
sub
add
add
sbb
dec
add
add
add
lock
add
(bad)
(bad)
(bad)
push
sub
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
and
dec
add
add
add
mov
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
push
dec
add
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
(bad)
fsubr
dec
add
add
add
sub
add
add
call
(bad)
(bad)
push
sub
(bad)
(bad)
(bad)
(bad)
clc
sub
and
add
dec
cmovl
(bad)
(bad)
(bad)
call
sub
add
(bad)
(bad)
call
sub
add
add
add
sub
add
add
add
sub
add
(bad)
(bad)
push
sub
add
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
(bad)
(bad)
inc
sub
add
(bad)
(bad)
dec
sub
add
add
add
fmul
dec
add
(bad)
(bad)
jmp
sub
add
add
add
sub
add
add
add
sub
add
add
add
adc
dec
add
(bad)
(bad)
call
sub
add
sbb
add
and
xchg
sbb
add
add
add
add
add
lods
adc
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
and
dec
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
sub
(bad)
dec
sub
(bad)
call
sub
(bad)
push
sub
add
clc
sub
(bad)
(bad)
clc
sub
add
add
dec
add
add
add
pop
adc
add
add
add
add
rcl
add
(bad)
(bad)
jmp
cs
add
add
add
cs
add
add
add
cs
add
add
add
cs
add
add
add
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
add
add
cmp
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
call
cs
add
add
add
jo
dec
add
(bad)
(bad)
push
cs
add
add
add
pushf
adc
add
add
(bad)
(bad)
jmp
das
dec
add
add
add
enter
(bad)
(bad)
(bad)
call
dec
add
add
add
hlt
adc
add
add
(bad)
(bad)
inc
add
add
dec
add
add
add
dec
add
add
add
add
add
and
dec
add
(bad)
(bad)
push
add
add
adc
add
add
(bad)
(bad)
call
das
dec
add
add
add
nop
adc
add
add
(bad)
(bad)
inc
xor
add
add
lock
dec
add
add
add
das
dec
add
add
add
xor
and
add
mov
add
add
(bad)
(bad)
inc
dec
add
add
add
xor
add
add
cmp
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
push
dec
add
(bad)
(bad)
(bad)
js
dec
add
(bad)
(bad)
inc
add
add
inc
adc
add
add
add
movs
adc
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
xor
(bad)
(bad)
(bad)
push
xor
and
add
int3
adc
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
and
add
clc
adc
add
(bad)
(bad)
inc
dec
add
add
add
sub
dec
add
(bad)
(bad)
push
dec
add
add
add
pop
adc
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
test
add
(bad)
(bad)
(bad)
call
xor
(bad)
(bad)
(bad)
(bad)
fdiv
dec
add
(bad)
(bad)
jmp
xor
and
add
rcl
add
(bad)
(bad)
inc
xor
and
add
cld
adc
add
and
add
dec
push
dec
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
push
xor
add
add
cmp
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
add
add
add
dec
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
xor
add
add
enter
add
add
shl
dec
add
add
fdiv
dec
add
xor
add
xor
add
xor
add
add
lock
add
add
clc
xor
add
add
add
dec
add
add
or
dec
add
add
adc
dec
add
add
sbb
dec
add
add
and
dec
add
add
and
dec
add
add
sub
dec
add
add
xor
dec
add
(bad)
(bad)
(bad)
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
int3
pop
dec
add
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
or
add
jmp
add
add
xor
or
add
shl
add
add
add
xor
or
add
shl
dec
add
add
add
xor
add
add
stc
xor
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
test
dec
add
(bad)
(bad)
dec
cmp
add
add
xor
add
add
add
xor
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
xor
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
adc
dec
add
xor
add
sub
add
xor
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
ja
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
iret
xor
add
fidiv
add
in
dec
add
add
add
xor
add
sti
xor
add
push
ss
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
ss
add
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
ss
add
add
clc
ss
add
add
add
dec
add
add
push
aaa
dec
add
add
sbb
dec
add
add
and
dec
add
add
das
aaa
dec
add
add
cmp
dec
add
add
inc
aaa
dec
add
add
push
aaa
dec
add
add
pop
aaa
dec
add
add
data16
dec
add
add
jno
dec
add
add
jl
dec
add
add
xchg
dec
add
add
xchg
aaa
dec
add
add
popf
aaa
dec
add
add
test
dec
add
add
mov
dec
add
add
mov
add
add
aaa
dec
add
add
aam
dec
add
add
fdiv
dec
add
add
out
dec
add
add
out
aaa
dec
add
add
div
dec
add
add
push
dec
add
add
pop
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
popa
add
add
cmp
popa
add
add
cmp
arpl
add
inc
cmp
arpl
add
dec
cmp
add
add
dec
add
add
pop
cmp
add
add
dec
add
add
outs
cmp
imul
dec
add
add
jg
dec
add
add
xchg
dec
add
add
(bad)
cmp
ins
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jb
add
out
cmp
jb
add
idiv
dec
add
add
add
cmp
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
call
cmp
and
add
pusha
sbb
add
add
add
mov
add
add
(bad)
(bad)
push
cmp
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
pop
cmp
add
add
pusha
cmp
add
add
push
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
dec
add
cmp
or
cmp
or
cmp
or
add
jb
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cmp
or
add
retf
add
add
add
cmp
pop
add
add
cmp
sbb
add
loop
dec
add
add
add
cmp
or
add
repnz
or
add
cli
cmp
sbb
cmp
push
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
push
add
add
cmp
or
add
inc
cmp
or
add
dec
cmp
add
add
cmp
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
(bad)
dec
cmp
and
add
sub
dec
add
add
add
sbb
add
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
push
cmp
add
add
clc
cmp
add
add
add
dec
add
add
add
cmp
add
add
adc
dec
add
add
add
cmp
(bad)
(bad)
(bad)
jmp
cmp
and
add
in
push
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
je
dec
add
add
jl
dec
add
add
add
dec
pop
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
cmp
and
add
jo
dec
add
(bad)
(bad)
inc
cmp
add
add
add
movs
pop
dec
add
(bad)
(bad)
push
cmp
add
add
add
rcr
dec
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
cld
pop
dec
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
cmp
dec
add
(bad)
(bad)
inc
cmp
add
add
add
cmp
add
add
add
je
dec
add
(bad)
(bad)
(bad)
call
add
add
cmp
add
add
add
test
dec
add
(bad)
(bad)
call
cmp
xchg
sbb
add
add
and
add
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
pusha
cmp
add
push
add
add
dec
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sar
add
cmp
add
sar
add
fdivr
add
loopne
dec
add
add
loopne
dec
add
add
add
cmp
add
loopne
dec
add
add
add
cmp
add
clc
cmp
add
add
dec
add
add
add
ds
add
ds
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
cmp
dec
add
add
add
ds
add
add
add
dec
add
add
add
ds
add
add
add
dec
add
ds
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
ds
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
dec
add
add
add
dec
add
aas
dec
add
aas
dec
add
aas
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
add
(bad)
(bad)
call
aas
dec
add
add
add
aas
dec
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
lock
dec
add
add
clc
aas
dec
add
add
add
add
add
or
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
add
add
dec
add
add
jo
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
enter
and
add
rol
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
jmp
inc
dec
add
add
add
fsub
add
(bad)
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
(bad)
(bad)
call
add
add
adc
dec
add
(bad)
(bad)
push
add
add
inc
daa
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
ins
daa
dec
add
(bad)
(bad)
push
inc
dec
add
add
add
cwde
daa
dec
add
(bad)
(bad)
call
inc
dec
add
popf
call
fstp
sbb
out
sub
xchg
es
sub
push
sub
sub
dec
stos
mov
in
inc
and
jae
cmp
xor
jnp
fild
xor
sbb
je
mov
push
cmp
xor
sets
retf
js
not
jle
or
ins
add
mov
out
out
dec
sub
mov
mov
pop
ret
xchg
jmp
std
retf
mov
mov
jg
push
cs
cmp
adc
enter
pop
fst
int
mov
outs
retf
in
sub
cmps
inc
bound
sub
dec
cli
pop
cmp
out
fwait
jnp
cli
out
mov
cmp
push
cdq
or
pop
sub
pop
push
inc
jns
cli
dec
adc
jecxz
mov
sbb
or
dec
imul
sbb
fld
cmp
addr16
pushf
or
jbe
xchg
retf
stos
sub
pushf
sar
stos
rcr
(bad)
arpl
outs
jg
call
dec
push
mov
or
sub
xchg
fs
add
pop
pop
cdq
dec
in
pop
fiadd
or
xor
int
sub
imul
(bad)
out
sti
(bad)
jecxz
mov
(bad)
sbb
jmp
imul
xchg
movs
pop
loop
sahf
fistp
jns
mov
fisttp
push
loop
dec
or
cmp
jns
dec
sti
dec
dec
imul
neg
sti
add
mov
cmp
aas
test
push
jp
mov
addr16
sti
lods
sub
jns
imul
pop
mov
mov
movs
pop
nop
pop
imul
xchg
sbb
ds
mov
icebp
imul
cmp
lahf
mov
jnp
movs
push
dec
stos
cmp
dec
sbb
cs
mov
test
or
push
mov
std
mov
outs
sbb
and
dec
fild
aas
xchg
aad
mov
add
test
popf
cmova
jnp
jg
push
sbb
repz
sbb
pop
ret
inc
les
mov
(bad)
stos
mov
in
xor
or
pop
hlt
or
jge
sub
and
add
outs
call
test
xchg
add
retf
push
ret
jle
xor
push
sub
(bad)
cld
mov
pop
inc
mov
sub
enter
mov
push
movs
adc
test
imul
dec
cmp
ret
jae
loop
shl
mov
fwait
mov
cli
jne
das
and
mov
sbb
or
ins
js
jns
mov
jl
push
inc
jmp
push
leave
inc
sub
sti
js
adc
pop
pop
mov
jmp
ins
push
cmp
pop
jmp
sub
aam
enter
pop
add
bound
fcmovnbe
cwde
sbb
retf
fcmovnu
stos
adc
sub
out
pop
mov
retf
xchg
dec
movs
test
stos
add
fstp
repz
bound
adc
movs
pop
cmp
push
cwde
call
jl
mov
or
retf
cmps
mov
pop
adc
dec
push
iret
sbb
pop
mov
pop
jb
push
arpl
fld
push
rcr
fstp
pop
push
dec
test
shr
or
sahf
es
xor
inc
outs
and
sub
cmp
imul
or
and
adc
cmp
pop
outs
sbb
and
push
in
mov
mov
icebp
jge
dec
mov
or
push
cli
pop
dec
xchg
or
fimul
jl
stos
int
iret
sub
cmp
ficomp
jns
neg
cmp
jge
jb
ret
xchg
call
mov
mov
add
cmp
outs
imul
jp
in
cdq
fisub
jmp
test
daa
fwait
sbb
test
cmp
mov
push
loope
iret
mov
xchg
mov
push
stos
push
sti
add
dec
xor
fwait
idiv
js
push
mov
leave
mov
push
sub
cli
jle
dec
inc
das
push
cmp
sbb
dec
xor
call
mov
mov
stos
xchg
dec
fadd
fwait
xchg
fcom
sbb
xor
xchg
add
out
(bad)
mov
stos
push
or
cmp
imul
call
mov
cs
stos
dec
dec
dec
test
and
rcl
jmp
pop
int
sbb
xor
int
pop
fadd
outs
pop
jp
fistp
dec
and
sar
or
ror
rcr
xlat
push
push
adc
cmp
fwait
(bad)
aad
lahf
into
xchg
outs
test
xchg
sbb
cmps
jp
ror
push
dec
jnp
mov
pushf
mov
or
enter
popf
add
jmp
add
sbb
mov
mov
add
imul
sbb
shr
jp
aad
mov
cmp
cwde
or
cli
dec
or
xchg
push
jae
or
inc
xchg
inc
(bad)
sti
lds
in
(bad)
aas
mov
jo
in
mov
pop
mov
fistp
jb
rol
sbb
nop
add
out
fnstsw
jle
(bad)
mov
xchg
stos
js
stos
jns
sbb
cmp
ret
jne
cmovo
sub
pop
out
add
mov
sub
add
ds
pop
push
adc
out
mov
(bad)
je
cmc
pop
mov
mov
dec
dec
add
and
loopne
fistp
mov
jne
mov
and
mov
xor
aaa
gs
xchg
call
std
rcr
mov
push
jmp
shr
cs
dec
pop
shl
mov
cwde
dec
dec
pop
mov
fld
mov
and
and
mov
mov
pop
mov
cwde
jae
xlat
sti
(bad)
push
mov
sbb
ret
inc
cmp
or
fimul
pop
or
cwde
out
pop
std
push
mov
(bad)
hlt
and
movs
mov
ret
inc
divps
adc
mov
mov
push
fbstp
or
bound
jno
mov
inc
mov
arpl
mov
fwait
adc
cld
mov
xchg
popf
cs
xchg
dec
jb
test
fstp
inc
into
rol
adc
lods
add
sub
test
push
or
(bad)
mov
lea
inc
repz
or
mov
sub
mov
inc
dec
mov
(bad)
(bad)
and
sub
pop
sbb
scas
pop
dec
mov
push
pop
jmp
fiadd
sti
and
fistp
mov
fstp
ss
cwde
mov
pop
sub
cwde
add
adc
(bad)
mov
ds
sub
or
mov
xor
mov
jo
jo
dec
mov
ins
pusha
cmp
jmp
and
sub
or
pop
movs
dec
sti
jle
mov
loop
xor
dec
xor
add
mov
sbb
sub
inc
dec
(bad)
shr
sti
in
xchg
push
cwde
mov
mov
sbb
cmp
xor
sbb
pop
adc
jmp
push
mov
jmp
ret
jne
sbb
sbb
push
pop
or
inc
dec
jne
inc
sub
and
stc
fcmovbe
stc
jnp
and
mov
or
cmp
pop
popa
lods
std
dec
inc
call
add
push
fldenv
or
test
jmp
adc
movs
xlat
push
bnd
fcmovnu
retf
adc
mov
inc
and
push
and
mov
jp
jb
fwait
mov
add
push
jecxz
xor
sub
sbb
push
mov
sbb
push
test
fmul
cld
loop
dec
jb
ret
cmp
fcmovnu
sti
add
mov
push
xchg
xor
mov
dec
adc
jno
mov
jmp
sub
js
cli
movs
cdq
scas
aaa
stos
jmp
lock
jmp
aad
dec
cmp
imul
mov
ret
addr16
jmp
adc
cmp
jnp
(bad)
call
or
(bad)
cmp
jo
outs
outs
mov
dec
xor
and
and
call
mov
ret
cli
(bad)
rcl
cmps
mov
into
cmp
outs
push
mov
cmps
js
imul
and
jg
call
mov
(bad)
mov
mov
xchg
clc
enter
sbb
outs
jmp
xor
stos
adc
cmps
retf
stos
push
cmp
aaa
adc
sub
mov
cmp
pop
test
push
call
rol
jmp
mov
test
pop
adc
mov
jg
gs
test
ror
and
cmps
inc
aad
jnp
mov
mov
in
retf
sub
mov
test
mov
es
or
into
cmp
add
jo
pusha
push
dec
rcr
mov
sbb
retf
stc
(bad)
or
inc
and
pop
stos
dec
xor
loopne
cmp
mov
retf
fcmovu
dec
dec
fiadd
mov
add
cmp
out
mov
or
stos
cmp
mov
lods
cmc
sbb
fwait
(bad)
std
loope
and
int3
test
out
pop
dec
jp
mov
std
leave
jmp
jp
inc
cmp
or
jbe
push
leave
inc
adc
daa
retf
xor
cmp
nop
outs
inc
(bad)
cdq
mov
inc
xchg
jae
inc
inc
or
imul
jg
push
mov
add
mov
mov
stos
loop
add
inc
push
fimul
in
and
mov
sub
xchg
movs
mov
xchg
fwait
adc
xor
add
pop
dec
push
jge
(bad)
into
xchg
in
mov
clc
jmp
sbb
jmp
into
or
popf
lds
cmp
lds
mov
sbb
mov
sub
pushf
int
inc
clc
in
jmp
push
call
rcr
inc
ins
jmp
retf
shl
loope
inc
sets
pop
push
mov
das
icebp
cmp
rcl
mov
mov
xlat
(bad)
sbb
inc
dec
aas
mov
mov
xor
cwde
mov
pop
mov
cmp
test
sub
fidiv
pop
shl
jl
out
les
mov
loopne
js
ja
add
(bad)
movlps
dec
xor
shr
and
jns
sub
scas
mov
rcl
sub
and
out
pusha
stos
and
shl
push
out
(bad)
out
stos
jno
dec
outs
imul
imul
adc
fidiv
cli
inc
call
mov
rcr
dec
add
cmps
fwait
stc
inc
shr
inc
fadd
cmps
dec
mov
mov
mov
adc
push
jl
stos
shl
(bad)
cld
stc
mov
pop
or
aam
sub
sbb
xor
mov
dec
mov
mov
test
xor
addr16
sbb
sub
jae
pop
popa
adc
mov
pop
ror
leave
dec
mov
jns
sub
dec
fwait
cs
mov
loope
jl
ins
aad
cmp
mov
fisubr
xor
pop
mov
and
jle
xor
dec
jbe
fldcw
daa
in
inc
and
pop
fwait
popa
jnp
or
jnp
out
add
movs
cmp
dec
jp
add
(bad)
sbb
pop
mov
dec
mov
adc
out
or
mov
xor
scas
mov
add
fadd
jns
scas
mov
fisubr
pusha
fist
data16
adc
aas
push
ins
pop
sahf
add
adc
dec
inc
in
in
pop
jbe
(bad)
(bad)
add
jp
jnp
add
fwait
jbe
mov
into
lea
and
jg
push
ja
fbld
inc
mov
cmp
aas
xor
inc
pushf
jecxz
cmp
add
mov
or
cwde
mov
and
mov
or
cs
mov
idiv
neg
pusha
call
and
aam
sbb
imul
sub
jns
jns
or
mov
enter
lahf
cmc
sti
push
jmp
loop
mov
enter
jbe
test
ret
mov
cmps
or
fcmovbe
adc
(bad)
mov
sub
call
inc
jp
jge
and
inc
push
mov
je
rol
jae
das
add
cs
jg
mov
dec
cmp
sti
cli
pop
fcom
add
(bad)
jae
sub
fadd
mov
sti
jp
or
sbb
push
retf
aad
cli
xchg
sub
or
or
cwde
repnz
mov
sub
add
loop
or
in
cli
dec
mov
pop
mov
pop
jbe
ss
popa
cmp
rsm
or
cmp
mov
xor
and
retf
jmp
jns
je
arpl
push
addr16
cld
inc
add
out
repnz
xor
mov
(bad)
fwait
cmp
mov
cli
rol
or
xlat
stos
jl
mov
shl
sbb
jne
mov
je
jle
mov
lods
test
bound
imul
xor
xlat
xchg
test
arpl
inc
cmp
mov
cli
xor
loop
ja
or
lds
stos
xchg
mov
adc
fwait
mov
rcl
sub
jp
add
fiadd
imul
sbb
call
xor
sbb
(bad)
add
fmul
imul
ficomp
and
into
loope
cwde
jbe
stos
jmp
pop
jmp
cmp
sar
test
out
sbb
adc
xor
(bad)
dec
push
(bad)
sub
clc
out
stc
aaa
pop
cmps
outs
fs
jmp
nop
or
test
xor
jno
cli
xchg
or
cmp
cli
movs
push
add
jecxz
mov
sub
retf
rcr
or
pop
jmp
mov
stos
xor
ins
leave
into
fisubr
xor
dec
mov
dec
and
cmp
mov
jnp
jge
mov
rcl
ss
movs
(bad)
out
scas
mov
sub
jge
fmul
pushf
pop
jne
mov
push
mov
add
lock
mov
jno
and
jns
adc
cmps
mov
scas
dec
in
pop
pop
inc
mov
jge
add
adc
sub
dec
push
fnstsw
cld
mov
push
pop
mov
call
xor
sti
xchg
std
xor
data16
jmp
jmp
out
cmps
(bad)
push
fstp
cdq
add
xor
pop
sub
hlt
adc
mov
xor
inc
das
pop
mov
dec
jns
sbb
pop
jg
jmp
and
cmp
adc
sahf
jmp
push
imul
mov
out
mov
mov
push
out
xlat
cmp
das
fisttp
sub
jmp
aaa
adc
test
mov
js
mov
fucom
sti
jmp
xor
outs
inc
inc
aas
dec
gs
push
in
lods
pop
sbb
mov
cmp
xchg
das
jmp
xor
mov
popa
retf
je
scas
ror
call
loopne
call
idiv
inc
sbb
push
jnp
test
sbb
mov
push
test
adc
pop
cmp
jg
mov
inc
mov
adc
xchg
jmp
sub
inc
jp
and
cli
stos
sbb
and
add
mov
mov
and
imul
and
das
mov
lock
lock
pop
and
xchg
pop
mov
(bad)
push
mov
fs
dec
sbb
out
pop
pop
or
cmp
sub
pop
and
fnstsw
bound
sbb
into
cmps
shl
retf
push
sbb
idiv
bound
add
pop
adc
retf
sub
inc
or
call
mov
and
mov
das
jp
jb
pop
in
adc
stos
stos
popf
xor
and
call
or
jge
dec
fimul
cmc
sahf
lahf
ficomp
sub
mov
push
call
cmp
and
add
xor
aad
arpl
(bad)
xchg
pop
out
fxch
jae
icebp
lea
dec
arpl
xor
cmp
cdq
cmp
mov
loop
inc
and
pop
add
push
mov
mov
mov
popa
add
loop
push
sbb
arpl
in
(bad)
int
inc
imul
(bad)
and
(bad)
clc
adc
fwait
mov
(bad)
pop
jae
xchg
fnstenv
hlt
push
adc
sbb
xchg
mov
xchg
pop
sbb
int3
sbb
and
sbb
imul
pop
mov
and
cmp
pop
jg
push
dec
iret
jno
pop
mov
jmp
or
mov
fisub
(bad)
out
rcr
jmp
(bad)
stc
int3
mov
xchg
sub
or
mov
retf
jo
xchg
fadd
outs
js
outs
imul
fisttp
sub
jp
fcmove
scas
and
arpl
add
mov
(bad)
mov
jp
(bad)
push
jg
iret
push
jp
mov
enter
and
cmp
dec
pop
mov
(bad)
retf
repnz
test
call
(bad)
pop
lea
mov
lahf
test
adc
mov
add
xchg
xchg
push
icebp
jno
dec
inc
xor
imul
inc
scas
pushf
rol
in
call
popf
sub
xchg
pop
out
pop
dec
and
cdq
retf
mov
mov
cld
in
sar
sub
xchg
sub
in
cmp
adc
fimul
mov
retf
fsubr
fidiv
cli
scas
mov
push
cmp
push
dec
aas
into
pslld
xor
aas
shl
xchg
fnstsw
dec
sbb
jp
cs
cdq
sub
aad
fwait
mov
das
(bad)
repz
jae
stos
or
lahf
adc
aas
fwait
out
shl
sub
jmp
sbb
inc
push
shl
add
xor
add
(bad)
retf
fldcw
mov
xor
jecxz
imul
mov
or
jns
fld
enter
add
add
cwde
inc
out
cmp
sub
jb
pushf
fnstsw
xor
dec
or
mov
sub
sub
call
imul
or
cmps
jmp
outs
mov
std
or
sub
push
sbb
mov
in
lds
xchg
arpl
sbb
fidivr
imul
mov
push
push
es
xor
std
in
sub
push
xchg
lds
mov
mov
mov
(bad)
jp
dec
call
test
das
push
pop
fistp
dec
fs
jmp
add
pop
jae
inc
cmp
imul
dec
test
stos
sti
ins
mov
std
les
clc
jmp
stos
xchg
arpl
in
mov
sbb
fcompp
mov
or
sbb
mov
imul
and
pop
shl
jo
out
mov
sub
or
mov
cli
(bad)
cmps
inc
(bad)
mov
mov
adc
pop
xor
iret
scas
aam
js
call
push
xchg
fist
jns
jp
mov
jmp
dec
xchg
pop
call
jmp
js
inc
shr
adc
xor
pop
add
pop
iret
or
mov
mov
inc
aaa
mov
xchg
mov
xor
dec
pop
or
imul
xchg
xor
pop
add
mov
or
xchg
push
bound
push
or
or
jp
fchs
test
jmp
int
and
adc
inc
jnp
das
and
pop
sti
repnz
mov
sub
mov
mov
ficom
cwde
cld
call
clc
cli
loopne
cmp
cmp
cmp
icebp
repz
leave
jp
push
sub
sahf
mov
dec
cmp
popf
sbb
cmp
call
test
push
push
sbb
and
dec
js
inc
xor
jp
mov
sbb
pusha
sub
loop
je
inc
aam
push
loope
or
call
retf
fcmovnu
mov
xlat
stc
push
pop
lahf
sbb
pop
lods
dec
cmp
out
sar
push
mov
inc
(bad)
fcomp
loop
nop
dec
aas
xchg
cmp
fstp
fld
shr
ins
inc
jno
fmul
retf
std
jne
mov
cmc
ja
mov
jnp
fdiv
and
bound
leave
int3
int3
xchg
mov
dec
cmp
leave
cdq
cmp
jno
fimul
(bad)
imul
jb
sub
sbb
scas
das
jp
es
push
cmp
dec
cmp
push
jmp
jmp
mov
jno
and
mov
rol
test
inc
dec
gs
lds
cmps
xchg
retf
mov
ret
sub
push
inc
iret
pop
aas
jbe
mov
fld
xor
retf
fiadd
and
mov
fptan
xchg
ja
nop
sub
cmp
lods
arpl
dec
or
dec
and
rol
adc
jno
inc
jmp
retf
xchg
cmp
cmp
pop
data16
test
mov
sbb
cs
xor
or
jb
add
inc
jp
cmp
div
repz
imul
xor
jmp
or
(bad)
fsubr
retf
jns
add
fcomp
dec
sub
xchg
sub
fcmovbe
push
cwde
xor
dec
out
mov
jae
sbb
aaa
or
mov
mov
ret
xchg
sti
dec
int3
repnz
inc
cmp
pushf
or
stos
add
stos
test
push
cmp
and
fucomp
sub
dec
fstp
dec
repnz
dec
cmps
mov
sahf
pushf
scas
and
sbb
xor
fimul
jmp
loope
sbb
(bad)
out
pop
imul
push
fstp
out
or
inc
and
popf
dec
jl
mov
mov
xchg
or
test
mov
ins
scas
jmp
dec
lods
inc
jae
and
jge
sub
xlat
int3
or
xor
mov
cmp
cmp
cmp
mov
das
test
push
mov
mov
in
xchg
jmp
pusha
cmp
mov
hlt
shr
dec
test
sbb
sti
pop
retf
out
pop
jnp
jg
mov
xor
xor
sub
stos
test
sti
pusha
movs
sti
(bad)
(bad)
lahf
pop
push
aaa
cwde
nop
loop
lahf
retf
outs
pop
mov
scas
imul
mov
mov
pop
fsubr
test
add
and
pop
xchg
pop
cmc
jbe
jne
clc
aas
out
fld
iret
cli
fstp
add
outs
rol
lea
dec
les
adc
pop
mov
aam
call
cmps
sbb
retf
stos
jb
shr
jg
lahf
cli
mov
call
fs
fs
pop
jae
sti
mov
push
loope
pop
scas
jp
loopne
ins
in
sahf
jmp
cmps
stc
(bad)
mov
push
stos
iret
jb
cmp
outs
or
sbb
jnp
push
movs
imul
or
std
inc
repz
arpl
adc
outs
cmc
rol
sbb
inc
jp
test
fisub
stos
lods
call
cld
leave
or
push
mov
or
loope
push
je
or
aam
xchg
inc
or
retf
sbb
and
xor
pop
jbe
jb
xchg
ret
mov
sub
xor
xchg
sub
dec
dec
addr16
je
ds
mov
std
adc
(bad)
jae
sbb
repz
sti
lahf
mov
sti
and
and
and
mov
loopne
inc
scas
adc
rcr
mov
mov
sub
cmovs
repz
rcr
clc
retf
mov
and
mov
div
add
cs
ss
mov
cmp
ret
aas
jae
das
popf
push
dec
jmp
xor
jg
sahf
lods
mov
mov
retf
sub
or
mov
daa
mov
jle
add
mov
xor
mov
sbb
ret
test
aad
xlat
push
mov
int3
mov
sbb
jecxz
movs
shl
hlt
sbb
add
jg
pop
and
mov
retf
js
call
cmp
push
sti
ins
mov
sbb
imul
push
ror
stc
lods
push
ret
fwait
sub
hlt
stos
fs
in
push
outs
pop
sub
ret
jnp
mov
stos
sub
mov
mov
adc
fisttp
mov
es
test
shl
pop
jp
pop
xor
fmulp
stos
mov
sub
(bad)
mov
cmp
sub
movs
sbb
jae
sub
cwde
(bad)
int
cmp
fsubr
xchg
and
xchg
pop
pusha
out
pop
push
repz
pop
cmc
outs
test
mov
cmp
sbb
push
jp
daa
imul
jmp
ret
cdq
dec
imul
sbb
and
(bad)
in
fistp
mov
cmp
adc
dec
fnstcw
cmp
loopne
call
mov
pusha
int3
and
inc
aad
cmp
push
sti
jmp
(bad)
in
popf
xchg
lahf
pop
sub
cli
jg
outs
jg
rol
outs
lock
or
in
leave
repz
pslld
mov
add
test
push
sbb
adc
js
jmp
aad
loop
pop
add
mov
mov
mov
inc
add
cmp
fwait
pop
rol
sahf
xor
mov
sbb
add
inc
dec
imul
fwait
xchg
stc
iret
fwait
push
retf
mov
cmps
sbb
sub
dec
retf
pop
lods
retf
pop
jns
adc
inc
scas
stc
mov
out
ret
jns
sub
xchg
or
int
or
jnp
bound
sbb
es
in
pop
inc
and
loopne
out
imul
jl
lods
out
sub
pop
cmp
popf
xchg
dec
stos
inc
mov
mov
hlt
stos
sahf
stos
pushf
shl
lods
xlat
fldz
mov
lods
(bad)
inc
jmp
cmp
ins
mov
pop
fsub
jb
stc
sub
test
and
sub
mov
fwait
pop
sub
cmp
stos
stos
push
xchg
sar
pop
mov
or
test
loop
loope
imul
mov
push
stos
push
dec
pop
sbb
pop
jne
jge
not
mov
jne
in
mov
sti
rcr
bound
sub
push
or
cmp
jnp
adc
out
mov
fnstsw
ret
and
xchg
dec
mul
ror
sbb
push
ja
cmp
cmc
ret
mov
enter
push
stos
sti
xlat
push
inc
and
adc
sub
pusha
xchg
mov
cmp
push
fcmove
(bad)
xlat
xor
fwait
dec
jnp
out
repnz
shl
mov
jb
bound
cmp
xor
icebp
daa
out
sub
sti
and
pop
(bad)
jae
int3
imul
fcmovnu
cmps
jo
aad
rol
sbb
add
stos
sub
sub
pop
dec
add
in
pop
fstp
call
(bad)
pop
mov
ror
loop
test
test
fadd
daa
jge
add
pop
sbb
in
push
push
inc
dec
xchg
ins
mov
mov
mov
push
in
ins
mov
xchg
inc
pop
test
pushf
mov
out
mov
call
mov
mov
daa
pop
inc
aad
jmp
add
mov
movs
pop
stos
mov
in
daa
cli
mov
lods
mul
iret
je
xor
jp
push
push
fcmovnb
ret
test
xor
adc
call
arpl
push
lahf
jmp
gs
cmps
fadd
mov
call
xchg
push
adc
leave
xchg
push
or
sub
adc
mov
into
stos
retf
imul
push
pop
xchg
fwait
adc
sbb
xchg
fwait
adc
scas
xor
mov
adc
mov
or
jmp
call
nop
fwait
stc
out
shr
push
mov
fcomp
push
pop
push
mov
out
cmc
or
cmc
scas
pop
(bad)
in
push
dec
fnstsw
jge
push
dec
aas
inc
jns
arpl
lds
scas
cmp
loope
outs
call
outs
cli
pop
mov
sti
dec
jmp
pop
movs
jne
sub
jecxz
retf
stc
into
dec
push
sbb
sbb
push
jb
push
lock
pop
cmp
fcmovb
or
sti
idiv
and
inc
outs
aas
mov
les
sahf
and
and
push
sub
sar
sti
sub
dec
adc
mov
(bad)
fld
pushf
daa
dec
or
js
dec
cmp
sub
mov
mov
popf
call
push
pop
xor
ja
sub
xor
sub
pop
fwait
sub
pop
call
sti
jp
fisubr
fistp
sub
jmp
mov
sub
inc
jp
pusha
mov
jmp
fmul
push
add
sbb
rcr
cmc
mov
sbb
push
push
jmp
pop
shl
(bad)
mov
enter
out
jne
jbe
xchg
sub
xchg
sbb
pop
lods
imul
gs
into
repz
cmp
mov
pop
pop
adc
sub
dec
mov
fwait
aad
mov
enter
jmp
sbb
jmp
push
int
inc
ins
cmp
and
aaa
dec
inc
popa
addr16
or
dec
sub
stos
dec
inc
retf
mov
pmulhw
in
(bad)
dec
(bad)
jmp
jg
dec
scas
inc
dec
add
dec
test
loop
mov
xchg
leave
sbb
xor
add
xchg
cs
test
jno
pop
aam
and
leave
push
imul
xor
or
and
jb
sbb
test
mov
xchg
dec
lea
adc
mov
mov
cwde
ins
ja
jne
shl
lds
push
push
not
add
sbb
adc
pop
push
inc
cmp
dec
sti
dec
mov
arpl
pop
dec
pop
dec
jmp
jmp
pop
daa
adc
movs
addr16
retf
pop
jne
ja
adc
sbb
mov
push
cwde
xchg
sti
fistp
sub
pusha
clc
push
sub
call
scas
dec
imul
adc
jmp
(bad)
neg
call
add
repnz
nop
fsubp
jmp
repz
or
sbb
mov
mov
es
nop
or
mov
and
sbb
jbe
(bad)
push
dec
mov
mov
call
sar
mov
adc
sti
outs
mov
push
rcl
mov
dec
or
in
int3
fstp
pop
mov
outs
adc
std
xor
jp
mov
push
mov
add
std
mov
je
mov
jecxz
push
sti
call
jmp
pop
ror
jecxz
jbe
loope
push
mov
xor
xor
mov
pushf
pop
scas
cmp
adc
lock
mov
loop
icebp
dec
cmps
dec
inc
hlt
imul
enter
in
fadd
xor
test
fadd
push
jmp
jmp
shr
sbb
in
std
pushf
mov
out
jp
dec
mov
cmp
push
add
ins
xchg
fcom
movs
mov
cli
dec
fs
pop
sbb
rcr
inc
stos
adc
in
xlat
stos
mov
imul
fstp
dec
in
stos
jbe
out
cmp
imul
mov
enter
push
mov
sub
lods
loop
add
aam
xchg
call
imul
dec
xchg
xchg
mov
xchg
mov
jns
jns
jmp
jmp
out
pop
inc
or
jnp
jae
mov
dec
sub
cmp
stc
xchg
and
cmp
mov
repz
or
repz
fist
or
or
xchg
jmp
test
sub
cdq
ror
jmp
jmp
sti
shl
nop
ss
pop
adc
sub
add
mov
movs
pop
aam
iret
adc
or
mov
sub
int3
outs
cli
mov
ins
xlat
(bad)
lahf
mov
shl
and
cld
pop
add
sub
pop
sbb
mov
mov
jl
jmp
sti
push
movs
add
test
pop
inc
push
cmp
stos
gs
pop
jnp
lahf
inc
or
xchg
das
inc
out
lods
lods
add
neg
pop
fwait
cmc
data16
or
fs
arpl
sbb
aad
mov
aad
pop
jmp
push
jecxz
or
scas
jns
test
popf
cmp
sub
inc
sub
js
pop
push
jo
mov
ret
cdq
adc
call
jmp
and
cmp
push
jo
lods
(bad)
jae
retf
or
(bad)
ffreep
movs
loope
jmp
xor
sub
sub
xchg
jg
pop
js
xchg
(bad)
clc
mov
jg
dec
in
sbb
pop
aam
pop
or
cmps
pop
std
addr16
inc
fcomp
pushf
cmp
fstp
dec
daa
jle
inc
xchg
inc
cli
jmp
arpl
sahf
jmp
ret
mov
pop
sti
call
inc
push
call
push
dec
add
int
jno
pop
out
aas
cld
jmp
mov
lock
out
fsubr
es
or
mov
sub
addr16
sub
imul
push
xor
jns
cwde
sbb
mov
cmp
and
hlt
fsubr
dec
push
mov
data16
dec
jle
sti
in
adc
sbb
mov
retf
outs
dec
stos
ficom
lds
or
or
push
stos
mov
leave
stos
dec
arpl
cmp
jmp
fisttp
fmul
sahf
bound
jae
pop
or
sahf
cdq
dec
out
(bad)
push
cmpps
ret
in
mov
int3
xor
dec
sbb
call
imul
nop
cmp
ins
retf
int
mov
xor
arpl
and
jle
clc
sbb
out
ds
mov
cdq
jp
sbb
add
ins
repnz
call
mov
sbb
stos
outs
retf
fisub
sbb
xor
jp
push
xor
inc
pop
sbb
mov
jle
mov
mov
mov
mov
fisttp
ins
sbb
add
rcl
mov
stos
stc
xrelease
fwait
das
or
sub
shr
test
jmp
cmp
stos
xchg
arpl
jns
imul
mov
sbb
mov
mov
ss
fiadd
xchg
push
loop
imul
push
gs
in
jmp
pop
pop
mov
xlat
pop
jmp
sahf
into
pop
pop
(bad)
jb
or
dec
dec
pop
pop
mov
cmp
sub
fwait
cmp
ja
aad
in
outs
dec
test
pop
fsubr
jbe
lods
add
mov
cwde
inc
sbb
xchg
retf
scas
fwait
sub
mov
lock
xor
rcr
das
test
sub
xchg
loope
popa
or
ret
pop
sbb
ret
icebp
mov
mov
push
push
rcr
cmp
addr16
dec
aaa
pop
sub
mov
lds
inc
mov
arpl
jns
mov
popa
jp
push
push
bound
jecxz
scas
mov
jo
dec
mov
sahf
push
ja
(bad)
cmps
ret
fisub
jecxz
(bad)
xor
push
and
jp
dec
or
sar
sbb
mov
loope
(bad)
mov
repnz
(bad)
leave
scas
ficomp
out
inc
rol
popf
(bad)
and
adc
sub
sub
cdq
and
jae
dec
outs
fidivr
cmp
fmul
or
fidiv
jecxz
dec
sub
inc
cmp
jmp
fnclex
push
pop
stos
dec
ins
add
add
pusha
in
loop
jno
clc
movs
std
mov
mov
repz
inc
ret
retf
out
adc
test
in
cli
cwde
cmp
inc
mov
sbb
sub
jp
icebp
xor
mov
jmp
sbb
xor
push
xchg
mov
outs
retf
call
fcom
fiadd
cwde
call
enter
stos
(bad)
pop
je
jb
mov
lock
mov
dec
mov
leave
push
mov
out
nop
(bad)
jle
dec
movs
sub
sbb
pusha
in
mul
ins
pop
add
mov
or
inc
int
and
test
out
stc
jno
xor
out
rcl
xchg
iret
or
out
dec
cmps
call
jg
mov
aad
jle
or
loop
outs
add
add
xchg
xor
inc
popa
shl
or
hlt
nop
call
xor
stos
inc
outs
fisttp
fwait
mov
dec
sub
pop
dec
sub
inc
gs
add
les
ja
fwait
sub
cmp
ins
mov
enter
mov
imul
push
xor
push
dec
cmps
adc
sahf
xchg
xchg
(bad)
loop
repz
popf
test
dec
pusha
pop
pop
mov
push
push
outs
les
jae
jbe
cli
inc
add
lahf
pop
or
je
iret
mov
and
jmp
cmc
jmp
movs
and
jnp
fninit
dec
push
and
mov
shr
outs
clc
in
arpl
pop
pop
mov
dec
mov
call
stos
cmp
jmp
es
aam
sub
mov
push
in
mov
std
jnp
shr
pop
sub
xor
mov
fsin
lahf
sbb
retf
or
retf
(bad)
call
leave
nop
xor
mov
data16
arpl
(bad)
outs
or
push
imul
fwait
push
div
pop
cmp
ja
or
dec
retf
or
sub
jmp
je
aad
mov
cmps
fstp
push
jmp
(bad)
jmp
xchg
jb
loopne
stos
or
sub
arpl
fcmovnb
ror
mov
sub
stos
imul
ficomp
scas
mov
cld
ins
sar
stos
sub
dec
pop
sar
in
mov
pop
test
xor
out
adc
or
mov
pop
jmp
jmp
imul
dec
inc
sub
dec
mov
or
test
out
inc
out
jge
xor
and
mov
dec
jmp
cli
jecxz
dec
cmp
push
sub
pop
pop
scas
pushf
(bad)
jmp
sub
jmp
inc
jge
and
ret
jle
imul
out
push
mov
mov
retf
fcmovbe
pop
jns
dec
das
add
inc
fidivr
cs
call
adc
mov
dec
inc
aaa
mov
inc
ror
fnstenv
push
scas
and
int3
fmul
aad
ret
cmc
xor
or
inc
out
pop
dec
bnd
jb
movs
movs
dec
fisubr
jmp
rcr
pop
sbb
hlt
mov
add
push
into
mov
or
out
aas
mov
ret
popf
retf
xchg
jg
push
xchg
jb
mov
mov
addr16
imul
lahf
lods
test
fisttp
pop
and
call
mov
or
loop
retf
in
out
retf
retf
retf
sbb
cmp
inc
adc
sub
dec
mov
adc
cmp
out
pop
and
retf
stos
push
jecxz
inc
rol
arpl
jno
(bad)
pop
mov
and
mov
cmp
cli
dec
mov
ins
not
xlat
xchg
push
xchg
mov
ins
fdivr
leave
cmp
add
dec
jmp
jmp
sbb
jae
fsubr
leave
aaa
cmp
add
arpl
les
aaa
adc
and
cmp
mov
test
dec
xchg
mov
sub
(bad)
div
pop
push
and
pop
mov
movs
jle
shr
lahf
stos
lds
mov
out
dec
add
or
fs
iret
cmp
sar
jge
xchg
mov
sub
retf
mov
aam
cmp
add
jmp
test
sub
cmp
push
inc
jle
inc
int3
sbb
cmp
cdq
mov
lods
inc
sub
jmp
repnz
fwait
rcr
inc
out
xchg
dec
sti
pop
fistp
loopne
push
leave
pop
or
or
add
pop
ret
add
or
into
pop
jmp
sub
(bad)
sbb
mov
movs
loope
sbb
mov
sbb
imul
pushf
dec
(bad)
cmc
mov
stos
mov
retf
mov
ret
test
cmp
jnp
sti
mov
fst
sub
fcmovnb
fmul
sti
sti
call
or
and
sbb
stc
jo
mov
arpl
int3
ret
bound
cmc
cdq
jp
pop
daa
pop
lds
jle
popf
dec
fldpi
mov
xchg
xchg
mov
hlt
or
push
adc
add
jecxz
out
adc
jbe
cmps
stc
sub
fist
popf
fcomi
jne
call
(bad)
or
stos
dec
sbb
jecxz
cmp
or
repnz
and
sbb
mov
jp
cmp
cmp
imul
pusha
outs
cmps
lahf
repnz
or
fiadd
push
dec
mov
pop
push
or
xor
leave
push
call
in
icebp
xchg
rcl
mov
in
add
hlt
inc
dec
jp
inc
pop
xchg
mov
stos
or
into
or
retf
scas
jae
jnp
dec
push
pop
inc
adc
push
mov
cmp
retf
mul
mov
mov
outs
jp
sub
cmp
dec
test
add
mov
aam
push
aam
sub
mov
ret
and
mov
pop
push
inc
fldcw
stos
stos
jmp
xchg
and
out
mov
mov
dec
dec
adc
adc
or
bound
ret
sub
inc
int
sbb
(bad)
mov
lods
fimul
sbb
xchg
imul
push
mov
js
dec
ins
xchg
mov
xor
adc
adc
jge
fidiv
pop
out
jbe
or
cli
mov
sbb
test
sbb
cmps
jp
rcl
daa
mov
mov
add
xor
ror
and
pop
rcl
dec
mov
inc
cwde
arpl
cmp
jae
pop
and
jmp
imul
mov
pop
jo
mov
jbe
into
sub
mov
adc
jg
enter
in
mov
fiadd
out
fcomp
dec
cmp
fstp
pop
stos
iret
cs
pop
pop
bound
pushf
push
mov
mov
mov
(bad)
retf
pop
enter
call
ror
imul
sub
subps
loop
cwde
fwait
call
jmp
call
push
gs
xchg
sub
inc
xor
adc
stc
or
aad
iret
push
ins
jle
gs
into
test
push
std
dec
fcomp
jno
xor
imul
dec
dec
push
aas
and
lock
jmp
mov
mov
sbb
or
mov
cs
xor
clc
lock
int
dec
or
js
mov
fistp
mov
mov
pop
test
pop
adc
mov
jnp
pop
jle
stc
mov
out
scas
stos
or
mov
jg
mov
inc
jg
retf
lock
out
stc
jmp
int
xor
movs
push
inc
inc
cld
cli
xor
shr
gs
push
lods
outs
out
cmp
dec
ins
cld
pop
dec
jmp
outs
adc
or
outs
dec
pop
jb
adc
fucomi
xor
or
enter
fdiv
cmp
and
pop
repnz
jecxz
clts
(bad)
push
test
lods
cmp
or
add
call
push
int
ds
dec
std
push
ficomp
and
sbb
jne
rcr
cmc
cmps
outs
jp
cmps
push
jecxz
call
hlt
sub
and
push
mov
clc
shr
or
(bad)
sti
pop
dec
adc
sbb
js
pop
and
mov
xchg
jae
dec
test
push
iret
add
pop
cmp
jle
mov
push
js
test
mov
jns
add
sar
and
aas
pop
(bad)
pop
add
mov
lock
xor
jecxz
rcl
mov
jnp
sub
pop
jae
and
aam
inc
movs
outs
dec
sbb
pop
sahf
not
(bad)
mov
imul
cmps
fwait
xor
test
mov
mov
sbb
sti
push
pop
pop
pop
(bad)
(bad)
sub
scas
and
(bad)
jp
and
jp
fwait
mov
hlt
das
jbe
stos
adc
js
test
leave
inc
mov
(bad)
cli
xor
cmp
fucomp
jle
ds
pop
in
ja
inc
fwait
cmp
cmps
or
clc
jbe
sti
push
aam
ins
cld
sbb
adc
aad
pop
xor
jmp
scas
push
add
pop
pusha
rcl
bound
mov
sub
dec
cli
jmp
cmc
mov
sbb
jo
push
sbb
cmc
jbe
call
in
or
out
daa
daa
shr
ds
or
in
test
sbb
jnp
or
jle
inc
fwait
xchg
dec
add
or
mov
enter
pop
jg
loop
rol
jmp
fnstsw
retf
or
mov
loope
or
add
jmp
and
popf
inc
push
mov
cld
rcl
aaa
fwait
xlat
xchg
fwait
mov
mov
out
cdq
repnz
cmp
stc
cmp
mov
or
(bad)
dec
inc
pop
jnp
mov
inc
push
and
jmp
or
aas
mov
xchg
inc
(bad)
cmp
outs
dec
test
jmp
jmp
ror
(bad)
fwait
(bad)
jmp
sbb
or
clc
fs
dec
gs
call
mov
mov
fucomip
rcl
dec
in
push
sub
cmp
dec
jnp
mov
sbb
mov
mov
sub
adc
xchg
pusha
ror
outs
cmp
or
push
ss
mov
and
imul
retf
sub
dec
push
sbb
or
jge
mov
retf
adc
and
sub
aad
pop
call
out
mov
inc
sahf
fwait
adc
ss
cld
add
hlt
jmp
je
add
add
xor
js
push
add
shl
ss
mov
pop
aas
sub
dec
sahf
iret
pop
sub
(bad)
adc
cmp
outs
ret
imul
repnz
std
(bad)
cmp
mov
mov
ins
cmp
out
pusha
aam
add
outs
cmovs
pop
mov
fisttp
jns
imul
push
das
mov
mov
lahf
(bad)
sti
cmp
push
mov
pop
push
lea
stc
out
dec
jb
push
or
les
dec
mov
sar
scas
xor
mov
int3
push
jae
mov
clc
(bad)
(bad)
fsubr
ret
call
jl
dec
jmp
lock
cmp
jmp
push
mov
(bad)
mov
inc
dec
lock
lea
rcl
call
cmovg
pop
imul
rol
lods
jb
mov
jae
sbb
inc
cmp
and
ja
test
loopne
sahf
mov
jg
test
and
cmc
cmp
or
stos
push
jmp
xor
lods
cmp
test
repnz
sub
mov
mov
ins
mov
mov
mov
push
fcmovnbe
ret
sbb
sub
xchg
jnp
jmp
dec
push
retf
cmp
cmc
imul
das
dec
or
adc
or
and
fwait
xchg
cmp
mov
int3
and
retf
dec
rcr
push
mov
pop
scas
je
js
inc
gs
cld
jp
int
cmp
sbb
add
dec
dec
jmp
arpl
mov
pop
ss
cmp
pop
jnp
xchg
movs
repnz
mov
scas
or
int3
in
leave
cmp
int3
mov
jmp
sbb
cdq
sub
mov
or
adc
pushf
rcl
arpl
lea
js
ds
cmc
add
ret
bound
jg
cmps
pop
mov
retf
(bad)
in
jl
cmp
aas
mov
cli
repnz
imul
ret
xchg
pop
bound
mov
imul
ja
and
and
outs
push
mov
mov
jnp
mov
aaa
add
add
pop
or
mov
in
dec
jl
hlt
jns
adc
loop
cs
fdiv
jl
repnz
mov
sub
imul
sub
outs
ror
inc
iret
nop
loop
in
mov
outs
push
or
or
dec
mov
icebp
jge
or
cld
and
xor
mov
jecxz
pop
pusha
or
cmps
mov
or
jnp
mov
push
mov
xchg
xor
outs
add
jl
jo
mov
cmps
jmp
scas
mov
mov
sbb
push
jg
push
dec
clc
sti
ins
(bad)
mov
pop
fcomi
mov
repnz
sbb
sar
cmp
dec
jl
lahf
xlat
cmp
retf
aam
sbb
cmc
xchg
xor
pop
or
jo
retf
sub
jge
enter
jp
ins
call
xchg
sub
pop
imul
(bad)
es
pusha
(bad)
je
and
dec
or
jecxz
dec
mov
xor
stc
sub
dec
popf
dec
movs
ret
mov
inc
adc
and
dec
sub
dec
mov
mov
(bad)
cdq
push
and
or
rcr
test
xchg
cmp
or
mov
jmp
or
repnz
loop
sbb
jmp
xchg
fisubr
mov
xchg
fild
adc
cs
adc
int
xlat
outs
pop
aad
inc
sub
es
mov
mov
fwait
and
xchg
sar
loop
pop
cmp
outs
jb
addr16
jg
xor
shl
push
stos
sub
cmps
cli
retf
cdq
xchg
jb
adc
jmp
pop
xchg
dec
mov
fld
xchg
fild
and
addr16
sub
or
bound
mov
push
xor
dec
(bad)
(bad)
push
add
mov
es
push
cmp
jecxz
aam
sti
outs
rcr
push
in
out
jmp
mov
jne
xchg
inc
(bad)
leave
adc
adc
lahf
cwde
retf
mov
ja
mov
test
test
mov
stos
jmp
cmp
push
sub
outs
or
fs
sub
dec
cmps
cmp
sti
sub
sbb
in
js
cmp
call
sub
mov
sub
repnz
int
adc
cs
cmp
sbb
jp
mov
mov
mov
movs
xchg
dec
pop
and
jl
mov
jo
xchg
div
cwde
and
push
popf
fmul
dec
not
cli
aas
sbb
iret
mov
sub
nop
or
mov
mov
imul
or
pop
jnp
jg
xchg
cmp
mov
fdivr
add
and
sbb
popa
add
retf
ins
(bad)
cwde
or
sub
retf
pop
mov
jp
sti
es
add
inc
ja
mov
jg
xor
dec
mov
icebp
int
out
jae
sbb
(bad)
cmp
movs
mov
pushf
mov
push
mov
(bad)
(bad)
ins
xor
call
sbb
jne
rol
sub
pop
adc
sub
mov
rcr
xchg
retf
call
pop
sbb
in
bt
test
sub
mov
fwait
sbb
scas
aas
inc
xchg
mov
dec
mov
jg
jbe
jne
jmp
repz
enter
stos
aas
test
push
dec
popa
dec
sbb
mov
fadd
jge
out
add
stos
stc
sub
call
cmp
cmp
iret
(bad)
mov
mov
dec
mov
and
mov
jle
cs
or
add
call
push
lods
push
cmp
dec
stc
out
mov
cld
es
nop
xchg
js
pop
stos
test
movs
cli
enter
stc
cmp
fisttp
sub
dec
test
push
call
mov
test
fimul
mov
sub
cdq
pop
xor
les
and
mov
sub
pushf
or
addr16
pop
xor
or
ss
adc
sub
sahf
xchg
iret
fst
push
cmp
mov
cmp
and
add
pop
jnp
pop
(bad)
mov
mov
sar
les
and
add
imul
jge
jns
mov
(bad)
popf
stos
imul
fwait
jg
lds
sbb
sub
outs
pusha
jmp
mov
mov
xchg
clc
repnz
xlat
ret
mov
lahf
jmp
jl
xor
dec
movs
pop
fwait
cmp
jmp
int3
adc
inc
lock
add
or
push
jae
dec
xchg
cdq
sbb
lahf
mov
fdivp
iret
popa
into
leave
leave
adc
cmp
sbb
inc
scas
cmps
and
add
jg
jmp
out
retf
sub
mov
or
jae
bound
dec
sbb
add
rcl
js
(bad)
sbb
push
cmp
sbb
inc
test
(bad)
dec
lea
mov
cdq
aaa
mov
push
lea
inc
mov
jl
add
add
cdq
lods
jge
aas
add
leave
cli
sub
pop
dec
cmp
ror
dec
mov
push
mov
dec
fwait
pop
push
outs
mov
test
aam
jne
jp
test
sbb
bnd
test
stc
pusha
cmp
loopne
call
dec
lds
scas
fistp
call
test
adc
push
pop
add
js
cmp
dec
xchg
push
jge
arpl
test
imul
rol
setge
jmp
push
bound
js
imul
ss
fnstcw
leave
mov
ret
enter
sub
adc
cmp
cmp
rcr
inc
dec
mov
cmps
sub
ds
sub
fsub
mov
cs
jmp
fdivr
sbb
mov
cmp
cmp
xor
retf
jmp
int
or
sub
and
lds
sub
mov
jne
cmc
into
cs
dec
loope
pmuludq
xor
test
cld
mov
mov
lods
push
mov
and
cli
into
jmp
test
jge
rol
xchg
pop
mov
out
das
sahf
fadd
test
jle
lods
pop
mov
stc
aas
jmp
out
scas
shr
jg
and
push
sbb
pop
js
push
sahf
nop
mov
dec
jmp
and
addr16
add
lea
pop
es
mov
popf
cwde
jge
mov
sbb
out
xor
mov
ins
mov
push
inc
add
xor
(bad)
stos
stos
add
add
inc
add
dec
cwde
imul
ja
cdq
std
jmp
pop
mov
xor
popf
dec
in
cmp
mov
sbb
pop
ficom
dec
out
js
adc
pop
pop
das
mov
nop
aad
mov
aad
sbb
cli
outs
test
out
dec
sti
ds
adc
sbb
mov
pop
mov
out
iret
in
push
and
out
dec
outs
jmp
inc
js
pop
sbb
and
push
les
add
loope
je
js
cli
iret
sbb
dec
sub
pop
mov
jp
shr
jnp
jmp
ss
add
and
fistp
xor
(bad)
jecxz
lods
dec
sub
pop
push
shr
mov
mov
test
xor
inc
inc
and
sbb
ficom
cmp
sbb
pop
jo
outs
push
shl
into
xchg
mov
pop
fidivr
push
inc
inc
repnz
enter
push
cld
jnp
pop
add
and
push
in
xor
xor
fiadd
test
enter
adc
pop
(bad)
movs
pop
test
pop
popf
pop
push
js
pop
fisubr
add
sub
add
mov
dec
mov
sti
pop
inc
mov
call
xor
or
dec
sbb
cmp
cli
cmp
bound
repz
(bad)
lods
push
xchg
call
call
and
inc
push
retf
add
bound
lds
sbb
jecxz
mov
sbb
arpl
lock
jg
push
adc
lea
sbb
or
mov
cmc
or
mov
in
sbb
stos
mov
xor
leave
out
mov
cmp
jae
ret
mov
in
sti
sbb
sub
or
gs
mov
dec
pop
push
stos
inc
mov
and
push
scas
retf
in
push
jns
sub
scas
loope
xor
imul
jmp
cdq
daa
cmp
lods
jbe
dec
mov
hlt
sbb
inc
xchg
pop
addr16
repz
xchg
pop
(bad)
stos
test
retf
test
dec
jecxz
nop
das
mov
adc
daa
in
cmp
dec
enter
mov
aam
mov
sbb
xor
sbb
imul
fdiv
push
ret
stos
sti
(bad)
mov
mov
mov
mov
fisub
test
into
sti
sar
fs
cli
ins
add
sbb
mov
push
jnp
mov
(bad)
adc
add
pop
mov
mov
mov
scas
mov
jecxz
aam
pusha
mov
in
pop
mov
fisub
inc
sub
cmp
aad
cld
xchg
and
jg
cmp
in
repnz
iret
jmp
jno
es
fst
pop
cld
in
sub
gs
int
(bad)
ficomp
cld
mov
retf
retf
cli
loope
jmp
(bad)
mov
es
inc
ret
sub
(bad)
mov
ss
sub
mov
inc
in
adc
xor
outs
stos
cmp
leave
sahf
ficom
pushf
ss
mov
cmp
pop
sbb
jp
repnz
and
out
stos
(bad)
nop
pop
xchg
dec
sti
sbb
cmps
and
adc
imul
jmp
sub
das
jb
push
inc
xchg
cmp
add
fist
sub
pop
popa
cli
es
lods
test
jae
bound
mov
xchg
xor
popa
aas
fild
sub
jmp
pushf
cmp
ret
stc
nop
xchg
cmp
adc
xor
mov
push
push
sbb
adc
mov
cli
cli
(bad)
lahf
push
ja
dec
jb
repz
out
xchg
mov
and
aad
loopne
push
sub
dec
mov
or
and
stc
pop
(bad)
(bad)
jns
pop
aam
bound
sub
pop
cmp
pop
fstp
gs
push
inc
mov
cmp
out
cmc
cmps
les
sub
or
imul
mov
imul
aam
jp
xlat
ret
repz
retf
lock
sub
daa
adc
call
les
cmp
or
jbe
(bad)
adc
cmp
faddp
sbb
dec
sub
sub
in
sbb
cs
pushf
cmp
add
adc
arpl
jae
mov
fwait
jecxz
mov
sub
xchg
retf
sub
push
or
adc
or
ret
or
jae
inc
pop
sbb
cmp
aas
inc
iret
inc
jmp
movs
jge
aam
retf
ins
cmps
pop
mov
repz
(bad)
mov
sbb
cld
stos
outs
xlat
nop
adc
jecxz
int3
aaa
mov
shl
sti
jno
push
je
repnz
fisttp
ficomp
cmp
lods
jmp
mov
or
inc
xor
mov
outs
jnp
cmps
shr
gs
or
sub
jl
pop
sbb
jmp
lahf
push
dec
cmp
hlt
xchg
ja
or
cmp
aaa
sti
jns
jnp
xor
xor
rcr
adc
fcomp
pop
adc
ds
stos
jp
jp
pop
out
test
icebp
mov
push
add
inc
inc
pushf
mov
or
fldenv
cmp
enter
mov
push
add
cmp
and
sub
test
mov
jg
call
sub
cdq
rcr
test
cmp
push
sub
xchg
in
jmp
or
sar
das
mov
arpl
jno
or
rcr
adc
inc
lahf
adc
enter
jl
dec
push
(bad)
jmp
xor
int
or
mov
pop
pusha
fmul
fsubr
outs
mov
adc
lock
mov
inc
inc
mov
sub
sbb
inc
aaa
imul
retf
sub
lods
movs
xchg
cmp
cli
lods
sbb
retf
jmp
adc
xchg
cmp
push
iret
inc
sub
stos
inc
(bad)
ret
sub
cmp
stos
sbb
clc
shr
ret
mov
mov
aam
movs
mov
jmp
pop
cmp
xchg
mov
cmc
mov
sbb
(bad)
daa
and
sub
mov
jno
mov
mov
jmp
lds
cmc
jns
loop
and
cmp
dec
xor
jmp
xchg
jmp
ss
mov
inc
jmp
bound
dec
cmp
mov
test
cmc
adc
repnz
lock
mov
jmp
iret
pop
popa
fiadd
sbb
jmp
mov
or
xchg
jmp
mov
mov
retf
sub
(bad)
call
pop
fwait
mov
dec
(bad)
mov
inc
or
xchg
sub
push
xchg
sahf
in
jmp
jmp
in
cmp
sub
fwait
jmp
mov
xchg
shl
sub
jno
in
sbb
es
or
pop
jmp
stos
cmp
cmps
mov
retf
repnz
ror
push
and
dec
cdq
mov
sti
xchg
or
scas
retf
fcmove
inc
mov
pop
jb
sti
jl
mov
in
cld
fnstsw
inc
cmp
cmp
xor
xchg
inc
adc
pop
cdq
push
enter
inc
movs
into
mov
ficom
jno
add
data16
mov
ins
jl
ficomp
sub
cdq
mov
(bad)
retf
ret
mov
xchg
xchg
cmp
imul
clc
sub
(bad)
cli
sub
dec
mov
mov
sub
cli
cmp
test
sbb
call
lahf
test
fcmovnb
pop
xor
fdivr
dec
ss
dec
jns
scas
lods
jge
iret
cwde
xchg
dec
lahf
cld
jp
iret
lds
loopne
cmc
sbb
sbb
ret
sub
xor
lea
out
xchg
dec
(bad)
leave
mov
dec
call
mov
push
pop
fwait
sub
jp
retf
jns
mov
inc
xchg
scas
xchg
xor
ss
repnz
jle
pop
lods
loopne
imul
data16
sub
push
fdivr
loopne
retf
jp
mov
jmp
fdivr
cmp
inc
push
xor
mov
sub
mov
daa
and
sar
jmp
mov
popf
fldenv
out
fcom
jmp
out
shl
dec
sbb
scas
cmc
sub
(bad)
movs
and
std
fwait
test
dec
cmp
mov
or
adc
cld
sbb
je
mov
cmp
push
sub
pop
aas
ficomp
data16
loop
int
scas
cdq
sub
cdq
or
xor
mov
pop
leave
sbb
cmp
pusha
mov
xchg
imul
mov
or
stos
out
sbb
add
xor
mov
push
ficom
mov
popf
push
or
jae
adc
push
enter
add
adc
sar
and
imul
jmp
mov
fisttp
xor
and
cli
jno
pop
test
pop
retf
scas
xchg
imul
push
sbb
jno
call
dec
fucomp
hlt
out
ficomp
fsubr
mov
sbb
cmp
cmp
mov
push
pop
test
pop
and
fimul
mov
aaa
lock
jmp
jmp
cs
call
les
or
mov
mov
les
add
loopne
imul
das
add
fadd
bound
shr
jmp
jge
pop
ds
popa
js
jmp
rcr
lods
sub
retf
idiv
mov
pop
cmp
sub
fimul
lock
inc
or
mov
sar
in
jle
jno
aaa
rcr
inc
imul
dec
stos
pop
jmp
inc
leave
mov
mov
and
mov
inc
cli
mov
das
ss
cmps
xchg
popa
test
test
cmp
pusha
jp
jnp
stc
sar
sub
test
adc
(bad)
cmp
std
jp
mov
pop
sbb
push
or
push
sbb
pop
test
(bad)
fist
add
sbb
mov
jecxz
jp
jp
cmp
jo
fsub
or
jae
in
mov
std
mov
stos
out
sub
pop
jae
cmp
call
(bad)
test
mov
leave
popf
test
(bad)
and
shl
and
aas
add
lock
cmp
imul
icebp
lods
(bad)
inc
sub
ret
popf
push
in
pop
add
stos
cmp
shl
jbe
jmp
nop
cmp
ret
fyl2xp1
stc
and
jmp
(bad)
sbb
mov
mov
sub
pop
test
enter
scas
add
mov
adc
mov
loopne
push
inc
adc
test
sbb
ret
jmp
sub
outs
aas
mov
mov
stos
loopne
(bad)
jns
scas
dec
or
xor
loope
cld
pop
fiadd
sbb
(bad)
add
scas
mov
or
cli
adc
sbb
xor
mov
or
xchg
pop
dec
cmp
or
add
aas
out
iret
scas
mov
daa
push
dec
pop
daa
rcr
dec
xchg
das
lods
mov
jge
xchg
bnd
sbb
ficom
push
lea
imul
cmp
or
xor
in
(bad)
jmp
cmps
js
add
dec
jae
ret
fwait
scas
test
dec
shl
xchg
ins
jg
sub
or
xor
cli
div
call
add
rcr
ror
stos
js
rcl
popf
fsubrp
std
push
and
gs
leave
hlt
and
aaa
pop
and
sahf
inc
cmp
cmp
mov
sbb
cmp
pop
xor
jle
imul
int
test
mov
jmp
outs
adc
dec
fmul
pop
cmp
sbb
cmp
fwait
sub
mov
ins
movs
(bad)
jns
and
jmp
outs
xchg
ins
pop
xor
mov
mov
push
jg
imul
es
mov
ins
arpl
ins
retf
sbb
adc
scas
push
sub
retf
les
sub
pop
xchg
push
push
call
out
shl
or
call
cmp
push
jmp
pop
jge
pop
xchg
pop
fistp
cmps
mov
sbb
cld
jle
mov
inc
adc
dec
dec
mov
(bad)
pop
xor
icebp
nop
mov
pop
mov
enter
stos
sbb
pop
retf
rcl
js
dec
pop
and
int
mov
pop
lahf
jecxz
aam
cmp
push
ds
cmp
leave
call
and
mov
jmp
mov
loopne
jle
retf
mov
or
aaa
jb
xchg
and
imul
pop
mov
push
or
cmc
and
pop
fcmovne
imul
xor
sahf
jp
push
mov
xlat
pop
(bad)
xlat
push
fistp
fnsave
cs
sub
ja
test
sbb
(bad)
sbb
pop
sub
sbb
addr16
xor
aas
cmp
cmp
push
mov
int3
cli
fnstenv
test
test
dec
lds
mov
loope
scas
pop
jmp
inc
scas
dec
pop
mov
out
xchg
fstp
xchg
ss
jle
lods
std
scas
push
jecxz
mov
cmps
int3
je
stos
xor
leave
cli
xchg
add
sbb
rol
movs
sub
ins
test
sbb
test
sub
ror
inc
push
pop
arpl
xor
xor
cmp
sti
popa
inc
inc
repnz
dec
push
add
sub
sub
movs
push
sbb
test
mov
xchg
stc
paddsb
popa
and
mov
pushf
fstp
imul
push
mov
leave
fcom
cmp
cld
push
bound
or
push
jb
cwde
mov
pop
ja
clc
pushf
adc
mov
into
cs
call
xchg
mov
fbstp
outs
pop
mov
push
aam
add
dec
mov
lahf
ret
cdq
ins
cmps
outs
js
dec
out
repnz
and
cmp
jno
and
mov
gs
stc
sub
mov
pushf
neg
inc
jmp
or
fucomi
retf
mov
pop
lahf
mov
out
test
scas
stos
pop
jmp
jmp
cwde
mov
dec
lds
(bad)
stos
push
pop
pushf
sbb
jmp
rol
rcr
mov
dec
push
jbe
add
addr16
mov
cli
(bad)
stc
femms
pop
xchg
shl
mov
aad
xrelease
movs
lods
inc
jmp
adc
mov
mov
xor
inc
inc
pop
xchg
jmp
pop
cwde
ret
add
into
adc
out
cwde
cmp
pop
sti
retf
and
lahf
xor
or
fwait
push
fstp
push
push
mov
dec
loopne
bound
dec
and
sub
cmp
cs
or
adc
mov
retf
rol
adc
aam
pop
cmp
test
fcmovne
xchg
dec
into
fld
fisubr
mov
lahf
out
mov
jmp
lods
pop
imul
and
nop
dec
cmc
or
es
clc
addr16
mov
aaa
or
dec
cwde
popa
imul
enter
loop
jb
cmp
imul
movaps
dec
clts
cmp
push
jno
dec
pop
stos
cmp
ret
xchg
imul
fcomp
push
jp
or
test
(bad)
(bad)
pop
jo
pop
dec
push
call
jecxz
outs
mov
pop
push
mov
push
jbe
shl
test
aam
mov
out
push
call
xor
(bad)
mov
sahf
mov
dec
xchg
and
ins
ror
addr16
in
stos
sub
into
xor
in
cdq
and
js
sbb
stc
jns
adc
jmp
xor
repz
int3
imul
dec
(bad)
jge
pushf
imul
aam
dec
xchg
rcl
adc
pop
add
mov
push
add
test
std
cli
pop
pop
xor
fisubr
pop
ror
leave
jg
aad
jo
push
test
scas
sub
push
(bad)
mov
jno
mov
sbb
inc
xchg
cdq
xchg
inc
dec
dec
sub
adc
inc
fisttp
or
call
loope
xor
mov
mov
call
pop
je
sti
jl
jo
jmp
test
cmp
jecxz
bound
or
pop
dec
or
push
mov
sub
fisttp
test
and
ret
mov
das
cmp
mov
add
sub
call
rcr
add
test
xchg
jge
fsub
lods
push
adc
mov
xchg
mov
mov
fimul
xchg
ficom
and
stc
xor
je
or
stc
pop
pop
pop
or
mov
hlt
pop
enter
pop
ds
out
add
mov
and
adc
jl
jnp
fisub
or
mov
cmp
(bad)
mov
sub
sahf
imul
inc
movs
(bad)
jns
sub
sbb
je
cmp
adc
in
popf
mov
push
cwde
movs
jp
cld
dec
popa
push
or
in
scas
mov
add
push
rcl
or
push
dec
sbb
jne
jmp
pop
fcmove
rcr
add
cld
add
cmps
arpl
sbb
and
mov
jo
call
(bad)
cmp
xchg
fsub
mov
mov
dec
test
lods
cmp
in
jno
aas
sub
retf
pop
and
fwait
retf
mov
(bad)
mov
adc
cmp
cmp
mov
jns
sub
scas
jae
in
pop
aam
sub
fiadd
stos
cdq
add
jmp
mov
enter
sbb
fmulp
jle
rcr
push
outs
sbb
adc
loopne
xchg
mov
test
(bad)
inc
aam
call
es
mov
pop
push
imul
cmp
lock
mov
mov
mov
dec
fcomp
xchg
aad
and
xchg
cs
push
out
push
push
or
rcl
push
mov
leave
pop
sbb
sbb
inc
mov
jmp
mov
add
and
push
sar
fnstenv
jnp
cmc
call
pop
xlat
imul
je
xlat
imul
pop
mov
ficomp
sbb
fild
dec
inc
das
adc
add
sbb
enter
mov
scas
ss
pusha
or
xchg
lock
dec
rcl
mov
cmp
test
jmp
ins
dec
imul
cmp
fiadd
mov
cmp
sub
movs
push
dec
into
cli
shl
stc
leave
or
mov
inc
cmp
dec
xchg
lahf
ret
jle
sub
test
xchg
pop
jnp
aam
(bad)
xchg
sbb
xor
xlat
xchg
sbb
popa
fnstsw
pop
ficom
ins
enter
xor
in
out
push
sbb
cmp
mov
(bad)
cmp
lods
pop
into
scas
sahf
push
add
jmp
stos
stos
mov
retf
pop
aas
push
pop
dec
push
mov
out
pop
mov
cmps
inc
push
fwait
enter
or
dec
daa
xor
imul
in
xchg
push
leave
add
adc
sar
(bad)
aas
pop
mov
popf
pop
out
xchg
jne
sbb
sahf
shl
ror
jmp
push
out
add
push
mov
sbb
aam
mov
jne
sub
(bad)
sub
mov
mov
add
xchg
call
stos
push
jg
into
movs
cli
xor
cwde
dec
adc
fild
inc
jmp
sbb
stc
fimul
fcmovne
dec
sbb
add
jmp
pushf
imul
sbb
retf
xor
mov
ret
aas
xchg
jae
pop
or
xchg
push
inc
xor
add
int
stos
ret
fnstenv
and
adc
call
stos
pop
sahf
(bad)
scas
pop
popa
cmp
xor
xchg
retf
pop
retf
sti
jns
scas
out
xor
dec
retf
jbe
fisttp
push
push
call
jmp
add
xor
inc
imul
pop
jne
bound
nop
fwait
and
jecxz
dec
cmp
pop
mov
mov
imul
adc
jnp
sub
lds
push
ins
or
enter
out
pop
aas
aam
in
lods
cmp
pushf
movs
cmp
int
js
repz
leave
fisub
pop
test
sub
cmp
cmps
out
mov
mov
(bad)
(bad)
cmp
pop
daa
ds
cmp
aaa
jmp
sbb
nop
mov
lods
sbb
pop
call
and
adc
jnp
and
mov
leave
cmp
xor
inc
lea
inc
inc
dec
cmc
dec
push
push
push
cmp
pushf
add
test
mov
jmp
popa
or
jp
or
in
jnp
imul
cmc
inc
adc
sti
cmp
in
clc
fdivr
mov
js
aaa
or
imul
clc
pop
sbb
push
jnp
sub
pop
retf
or
dec
js
or
in
mov
ins
xchg
mov
lea
or
push
mov
xchg
loope
ror
adc
sub
fsub
jnp
cs
fidivr
xor
adc
sti
loop
xor
sbb
outs
pop
push
stos
sbb
cmp
sbb
pop
mov
jmp
mov
mov
push
sub
fisttp
retf
data16
setle
sbb
push
pop
js
bound
mov
fnstsw
lahf
jbe
movs
das
push
ficom
inc
xchg
sbb
mov
pop
jno
push
xchg
mov
pop
inc
call
rcr
sti
fld
or
sub
cmp
pop
pop
sbb
jb
mov
push
inc
fsubrp
mov
cmp
mov
sub
sub
mov
fstp
int
in
mov
mov
dec
mov
test
(bad)
jb
retf
sbb
scas
inc
leave
mov
mov
retf
fisubr
ins
xchg
sti
test
cwde
retf
rcl
or
outs
xchg
mov
xor
or
shr
dec
inc
jae
xlat
test
inc
sub
and
cld
fs
call
mov
push
mov
lods
scas
inc
imul
jno
stos
add
int
pop
sub
mov
retf
or
mov
push
mov
repz
(bad)
adc
add
loopne
sub
xor
pop
jno
(bad)
dec
sbb
and
sub
jl
or
sub
mov
cmp
lock
and
test
es
pop
sbb
call
pop
jge
jae
inc
cs
dec
shr
cwde
mov
call
xchg
jge
ss
mov
aas
daa
xchg
lahf
jmp
jae
fld
jp
fisubr
das
or
mov
mov
sub
add
fwait
xchg
xchg
fcomp
push
jmp
and
push
dec
push
lahf
gs
mov
repz
pop
mov
xor
ret
cmp
jp
gs
outs
dec
int3
xor
(bad)
mov
cld
jp
retf
data16
loop
into
mov
rol
sub
call
clc
(bad)
repnz
imul
and
mov
cmp
sbb
jne
jmp
xchg
pop
pop
mov
(bad)
ficom
iret
adc
xor
(bad)
xchg
and
movd
(bad)
cld
adc
in
sub
call
in
jp
xor
and
shl
cmp
mov
jnp
xchg
pop
dec
fcomp
stos
xchg
jae
ret
push
imul
cli
lea
scas
or
sbb
push
dec
pop
(bad)
cli
int
mov
das
icebp
fist
sub
or
jmp
add
js
jae
cmps
xlat
call
push
push
sub
dec
nop
sti
jns
jle
cmps
int3
or
inc
dec
in
mov
iret
pop
retf
and
xor
sbb
lds
bound
fwait
outs
sti
adc
pushf
pop
inc
dec
fdiv
xchg
cld
sbb
fild
sbb
mov
add
jp
and
out
outs
sub
dec
stos
cmp
sub
mov
fwait
cdq
nop
popf
arpl
pop
mov
mov
mov
js
sbb
jnp
popf
pop
xchg
xchg
(bad)
pusha
dec
or
call
cs
fwait
or
and
mov
(bad)
fwait
jbe
fcmove
cmps
sub
test
xor
mov
mov
rol
cli
adc
push
sbb
je
pop
inc
test
js
sbb
jnp
jecxz
push
pop
fisubr
sub
xor
push
push
dec
aas
mov
dec
test
xor
mov
fadd
jns
movs
jae
sti
in
jo
dec
into
(bad)
xor
(bad)
xor
xor
iret
fwait
cli
lea
stos
adc
add
inc
outs
dec
imul
push
repz
inc
xchg
push
fmul
mov
jmp
or
dec
test
mov
inc
xchg
retf
pop
test
and
leave
test
fcmovne
cmp
mov
mov
push
mov
shl
stos
rol
mov
outs
cmp
pop
in
ret
and
mov
and
sbb
jecxz
jns
push
xchg
cdq
pop
mov
hlt
cmp
sbb
in
sbb
or
(bad)
cmp
nop
sbb
push
das
inc
outs
mov
sbb
xchg
ja
pop
jmp
ret
(bad)
(bad)
jg
pop
or
sub
and
mov
mov
mov
or
lods
sbb
shl
into
out
aas
sbb
mov
sbb
inc
hlt
mov
or
sbb
lods
mov
xor
stos
aas
push
cmp
lods
mov
mov
imul
push
push
nop
out
cmp
lods
push
pop
mov
outs
test
aas
retf
gs
(bad)
adc
jb
scas
or
push
and
aaa
fisub
ret
jle
cmps
sahf
xor
ret
stos
icebp
push
jae
add
cmc
sar
cmps
fucomi
call
push
sub
mov
inc
xor
xor
sub
inc
and
xchg
data16
in
sti
add
sub
and
cmp
and
mov
push
call
shr
ins
jo
cs
mov
and
ror
sbb
xor
imul
xor
jp
pushf
hlt
jp
(bad)
mov
scas
mov
mov
fist
mov
sti
or
(bad)
dec
loopne
push
mov
data16
pop
mov
stos
cmp
je
(bad)
dec
das
push
sbb
pop
sbb
loopne
lock
movs
cld
mov
mov
fnstcw
(bad)
jle
jbe
cmp
fistp
stos
imul
push
ret
pusha
cs
sub
int
sar
fnsavew
imul
jb
imul
inc
fild
fbstp
stos
cli
adc
jmp
jnp
fist
(bad)
cmp
das
fwait
mov
nop
retf
dec
rol
cmp
sti
jmp
inc
cmp
les
pop
or
leave
pop
jp
outs
dec
mov
inc
jl
out
inc
and
sti
cmp
push
push
call
ja
and
rol
or
std
(bad)
pop
imul
das
and
scas
or
pop
dec
jnp
gs
lods
jle
mov
cmp
stos
retf
retf
ds
add
cmp
jb
mov
(bad)
ror
and
fsubr
fwait
push
cmps
pusha
clc
retf
adc
dec
inc
call
fld
lds
pop
sbb
or
sub
jg
fidivr
dec
gs
fwait
add
fistp
push
in
push
fs
stos
call
mov
push
and
jnp
fisub
push
out
or
(bad)
in
push
jbe
adc
aam
scas
push
outs
div
mov
jnp
fist
cmp
inc
rcr
jl
outs
cli
mov
(bad)
jecxz
lahf
mov
in
shr
xlat
jle
and
sbb
sar
loop
ins
jmp
test
cmps
jl
pop
mov
xor
loope
dec
sbb
scas
or
dec
push
call
repz
jnp
cwde
movs
fwait
and
inc
sbb
ficomp
inc
jmp
pusha
scas
jmp
fwait
push
add
ss
pop
(bad)
cmp
xchg
scas
sbb
rcl
shr
push
jne
iret
sub
stos
jmp
mov
repz
xor
push
mov
out
(bad)
test
jae
leave
add
cli
out
add
ficomp
or
dec
xchg
jo
es
jae
mov
lods
retf
sub
jmp
jmp
pushf
sub
(bad)
pop
sbb
fwait
(bad)
jmp
or
ins
jnp
cmp
sub
mov
dec
movs
or
(bad)
xlat
loopne
jp
enter
jno
sub
sbb
jge
data16
addr16
push
ficomp
sti
retf
xchg
mov
mov
rcr
xor
or
jle
push
stos
outs
cmp
pop
mov
mov
loop
cwde
fmul
hlt
adc
xor
ror
push
pop
movs
or
sbb
inc
imul
sbb
or
add
mov
loope
mov
xchg
pop
cld
or
mov
mov
mov
jp
sub
fimul
jl
sub
daa
jmp
mov
mov
(bad)
int3
and
push
aad
mov
dec
push
inc
(bad)
out
popa
mov
push
dec
ins
ins
sbb
mov
mov
int3
or
sar
lods
jge
inc
inc
out
or
mov
icebp
jp
das
dec
call
rcr
cmp
mov
jl
ror
push
into
(bad)
scas
mov
xchg
fldcw
sbb
in
pop
dec
dec
jnp
lods
fs
pop
lock
mov
jle
bound
add
dec
xor
jbe
mov
mov
push
shr
stos
jmp
fucomi
stc
mov
fwait
lods
jae
test
scas
in
fsubr
or
fistp
jae
push
xchg
jmp
sbb
mov
shr
xor
mov
sbb
sbb
dec
push
ror
mov
or
cdq
mov
add
mov
imul
dec
jmp
les
dec
inc
sub
test
bsr
adc
mov
xchg
mov
vmulpd
outs
pop
stos
and
sub
mov
push
clc
retf
sahf
aad
inc
mov
dec
(bad)
or
cmp
xor
addr16
mov
loope
jmp
mov
std
stos
dec
jp
imul
xor
mov
sbb
mov
fst
sti
cmps
ret
inc
cli
and
sbb
cmp
mov
push
fisttp
test
dec
jmp
mov
outs
fwait
mov
arpl
jnp
mov
js
popf
adc
ins
sub
push
jmp
data16
lea
push
(bad)
sbb
pop
test
repnz
sbb
aad
adc
retf
mov
imul
cmps
xchg
sub
cmp
mov
retf
add
adc
dec
mov
mov
repnz
shl
add
stos
retf
lahf
retf
fst
dec
loope
fsubr
push
mov
mov
dec
adc
jp
repz
int
inc
ins
xor
out
adc
jne
ds
cli
dec
adc
mov
adc
clc
pop
inc
add
loopne
frstor
in
lahf
cmp
lods
cmc
(bad)
mov
xchg
add
mov
mov
pop
rcl
sar
fdiv
inc
dec
fincstp
add
mov
pushf
mov
xor
aad
adc
pop
dec
dec
pop
popf
fdivr
jle
jmp
pop
cli
pushf
mov
stos
and
stc
cli
out
push
or
adc
nop
mov
ins
repnz
or
pop
cmp
cmp
fsqrt
sub
stos
xor
popf
inc
inc
cmp
pop
shl
(bad)
xlat
fwait
sti
cdq
cdq
fwait
repnz
fdivp
add
fcmovbe
push
push
stos
aas
dec
xor
scas
sub
retf
call
sti
inc
and
pop
or
sbb
call
jnp
xor
jnp
dec
pop
mov
mov
or
or
push
or
rol
mov
sub
jnp
add
mov
or
in
iret
push
call
clc
jl
aas
dec
jne
xor
cmp
dec
push
and
dec
cmps
enter
(bad)
movs
or
stc
leave
pop
add
bound
cmp
xor
sub
stos
mov
mov
in
xor
fmul
xchg
inc
sti
mov
sti
(bad)
scas
addr16
jg
das
lahf
(bad)
jp
adc
ins
stc
adc
mov
sub
sbb
aas
hlt
jmp
mov
test
jbe
sbb
sbb
out
lock
or
aam
pop
fld
stos
push
mul
out
jmp
or
fdiv
sbb
fmul
cmp
adc
data16
imul
pop
dec
mov
fld
mov
std
add
jg
xor
jge
or
push
(bad)
sahf
rcl
jb
in
push
fwait
cmp
call
scas
ficom
nop
mov
pop
bound
ret
std
mov
cmp
jp
sbb
imul
nop
mov
retf
outs
pop
sub
sub
test
mov
fisttp
mov
cwde
mov
into
imul
stos
push
add
retf
lea
ret
loope
cs
xor
cli
jmp
movs
sbb
mov
gs
(bad)
dec
dec
jnp
mov
fisttp
fadd
xor
sahf
shr
idiv
sub
dec
pop
js
dec
stos
push
cmps
sahf
bound
jmp
addr16
imul
shl
mov
jae
dec
loop
mov
daa
ja
stos
sub
mov
pop
sub
fsubr
mov
hlt
ror
mov
enter
fcmove
inc
cmp
ins
and
js
ins
mov
mov
das
loope
div
call
pop
push
call
dec
imul
fs
cs
das
fmul
lods
rol
cdq
data16
or
pop
jnp
dec
scas
frstor
movs
push
inc
je
scas
lahf
jo
cli
push
fidiv
jmp
xchg
sbb
jb
jg
add
cmps
dec
mov
sti
jmp
fwait
adc
mov
repz
pushf
sbb
pop
add
sbb
pop
and
ret
and
test
outs
fwait
add
sbb
dec
adc
in
mov
je
mov
mov
int3
idiv
call
inc
sub
push
or
mov
jne
or
lds
or
or
outs
mov
in
or
rcr
(bad)
out
add
mov
loopne
jmp
adc
jmp
aam
cmp
lods
push
push
mov
cdq
retf
bnd
test
outs
lock
mov
mov
pusha
cs
out
stos
outs
movs
inc
je
or
in
(bad)
jno
repz
lds
fwait
cmp
js
mov
repz
jno
or
pop
das
pop
std
add
scas
sub
sbb
or
jp
in
sti
loopne
pop
adc
ret
sub
jp
stos
cli
ins
rol
dec
sbb
adc
in
mov
test
inc
popf
cmc
sbb
xchg
add
sbb
cmp
sbb
loope
push
ja
dec
call
into
test
fidiv
push
push
sbb
pop
pop
pop
pop
pop
jnp
repnz
sbb
pop
sbb
in
jmp
fdivr
cwde
sar
js
or
ins
mov
add
loop
inc
xchg
mov
test
or
xor
jnp
dec
mov
dec
ins
cmp
call
in
mov
pop
inc
ds
cs
or
(bad)
retf
and
ss
push
sbb
(bad)
jmp
pop
mov
aas
ja
ret
pop
jb
cmp
push
jnp
sti
dec
xchg
repnz
dec
cmp
jle
repnz
or
or
xor
js
jecxz
fadd
jl
gs
add
stc
push
repnz
ss
or
or
lsl
cmps
icebp
ret
loop
xchg
(bad)
cmp
icebp
into
sub
cmp
or
mov
jp
cdq
mov
mov
fwait
movs
(bad)
std
add
xor
dec
stos
dec
xor
test
mov
sbb
mov
lahf
push
fwait
xor
pop
dec
push
or
pop
mov
push
movs
or
and
inc
cmp
adc
je
dec
ja
int3
inc
mov
das
xchg
retf
sbb
mov
jmp
mov
inc
sbb
dec
inc
aas
xor
dec
push
out
out
in
pop
or
movs
shl
popa
adc
in
in
outs
mov
call
sbb
sbb
push
cmp
in
call
arpl
daa
cmp
aas
nop
sub
leave
add
sub
stos
cs
fstp
call
or
xchg
aam
dec
add
fbstp
fbstp
adc
fstp
or
jnp
sbb
xchg
mov
fidivr
and
pop
lock
rcl
and
loope
call
jae
in
and
ficomp
pop
cmp
into
retf
fwait
add
fscale
dec
xlat
pop
sub
dec
add
scas
sub
add
int
sbb
fisubr
inc
mov
add
shr
jl
clc
mov
lods
inc
or
mov
pop
push
loope
jg
mov
mov
mov
fild
adc
(bad)
jle
cdq
pop
sbb
xchg
adc
sub
pop
adc
jecxz
jmp
mov
push
xchg
imul
clc
(bad)
lods
mov
icebp
dec
push
mov
mov
cmp
cmp
pop
retf
call
mov
jmp
aad
jmp
movs
pop
retf
pusha
ja
push
xchg
clc
mov
aam
jmp
repnz
cmc
fcmove
loope
in
adc
fisttp
into
adc
jnp
xor
pop
mov
jb
and
lea
stos
sti
adc
ja
and
or
jp
pusha
or
outs
cmps
xor
cmp
icebp
js
pushf
inc
retf
jno
sub
imul
sub
push
call
jmp
cdq
dec
cdq
fwait
imul
retf
mov
cmp
xor
aam
jge
stos
xor
stos
jb
xchg
pop
dec
aad
push
repz
cmp
popf
das
ret
aas
xchg
mov
int
retf
jmp
cmp
sbb
outs
stos
mov
add
xchg
jns
pushf
mov
mov
cs
mov
sar
or
div
data16
or
mov
setnp
push
fldcw
push
stc
fwait
fwait
sbb
xor
jge
stc
outs
push
out
mov
ret
sbb
jmp
pop
lods
mov
in
and
dec
inc
arpl
aas
stos
push
out
retf
adc
pop
push
ds
stc
sbb
cmp
jnp
fsubrp
dec
aaa
clc
cli
call
inc
fwait
inc
mov
cs
cli
int3
test
pushf
test
ret
inc
dec
inc
aas
or
aad
push
ret
sti
outs
imul
int
lods
and
sbb
test
and
sbb
test
retf
dec
xchg
dec
push
mov
or
mov
(bad)
mov
popa
fldcw
sub
jmp
call
adc
dec
leave
ins
jno
lods
xchg
sahf
jmp
sbb
inc
jecxz
in
add
fidiv
arpl
popf
fwait
and
out
stos
pop
adc
lds
mov
ror
rcr
(bad)
ds
push
outs
pop
movs
daa
inc
loopne
cdq
add
pop
retf
jge
arpl
sbb
rcl
icebp
mov
or
inc
sahf
adc
push
aas
mov
cmp
push
sub
and
inc
in
inc
push
nop
and
sub
mov
shr
pop
scas
or
dec
or
int
mov
sub
xor
(bad)
loop
retf
(bad)
cmc
fwait
repz
pop
cmp
cmp
sbb
jo
pop
cmps
or
movs
pop
popf
test
in
stos
ficomp
loope
or
inc
and
jle
stc
fs
adc
cdq
stos
int3
fidiv
xchg
hlt
stos
or
mov
divps
dec
jge
mov
sbb
cmc
(bad)
(bad)
retf
in
outs
(bad)
push
movs
cmp
pushf
repnz
and
shr
sub
fwait
pop
cwde
mov
sub
jo
call
icebp
pusha
xchg
rcr
adc
xchg
std
dec
and
sub
pop
scas
inc
mov
rcl
dec
and
outs
(bad)
bnd
lahf
test
das
fisub
cli
jecxz
cmc
inc
cmc
sbb
or
imul
sub
bound
fiadd
dec
jp
js
and
jmp
std
addr16
jno
mov
xor
pop
test
cmps
add
lahf
cmp
std
dec
mov
fstp
mov
pop
dec
mov
adc
jne
dec
nop
adc
(bad)
xor
cwde
jns
or
push
aaa
mov
cmps
dec
mov
icebp
sbb
sbb
push
sub
mov
and
idiv
mov
cdq
mov
and
inc
(bad)
push
xchg
pop
mov
dec
pop
imul
ret
das
pop
jl
aaa
pop
pushf
test
dec
pushf
xchg
add
mov
repnz
cdq
xor
repz
mov
pop
cmp
sub
pop
pop
mov
gs
push
mov
in
pop
aam
pop
sub
or
sub
test
sbb
jp
ds
retf
mov
jae
inc
adc
jnp
shl
or
cdq
or
xchg
jae
dec
adc
mov
xchg
cli
xchg
add
sub
xor
jmp
xchg
dec
test
jmp
dec
scas
mov
ror
dec
push
(bad)
out
test
std
popf
xlat
xchg
cli
mov
fisttp
xor
and
xor
scas
inc
push
adc
and
jge
mov
xor
push
mov
call
cmp
jmp
and
out
mov
xchg
fwait
dec
in
test
sbb
jmp
mov
sub
add
mov
shl
dec
retf
cli
inc
add
lea
xor
aas
pop
dec
cdq
test
ja
pop
sub
cwde
arpl
jp
out
lds
jne
ret
mov
(bad)
fadd
fbld
jnp
xor
dec
retf
xchg
cli
xor
rol
das
and
dec
xchg
(bad)
push
mov
loopne
aam
or
cmps
pop
push
pop
outs
test
das
jmp
sub
mov
scas
cmp
jmp
or
xlat
stc
mov
stos
shr
inc
push
fist
stos
imul
jmp
jmp
dec
mov
pop
(bad)
into
inc
ror
jecxz
or
xor
repz
jns
movs
movs
cmp
leave
sbb
popa
hlt
sub
and
in
cs
pop
sub
dec
push
call
arpl
imul
lock
jp
pop
dec
in
arpl
xchg
and
test
sub
adc
int3
xchg
cmp
or
fstp
pop
out
xlat
or
lods
jne
and
xor
popf
mov
js
adc
in
movs
sbb
sub
sbb
cs
mov
lahf
(bad)
repz
mov
xchg
sub
and
nop
fwait
push
inc
push
bound
lods
loop
or
test
cdq
xchg
bnd
jp
push
pop
(bad)
jnp
aam
jo
sbb
mov
aad
mov
pop
add
int
pusha
add
outs
dec
sub
xor
scas
inc
cwde
(bad)
and
sub
cmc
and
shl
dec
in
repz
mov
jp
scas
pop
xor
out
loop
or
arpl
gs
mov
(bad)
adc
cmp
jae
movs
jp
cli
movs
ss
arpl
sbb
stos
call
jg
dec
lahf
pop
arpl
mov
stos
dec
imul
xor
mov
add
and
aaa
sbb
fistp
xor
fcmovne
movs
and
sbb
add
mov
inc
dec
cmp
sub
fs
(bad)
aaa
push
inc
or
mov
bnd
sti
imul
cmp
sub
xor
js
inc
inc
pop
div
ins
pop
jmp
(bad)
mov
pop
stc
push
enter
outs
fsub
mov
retf
push
sub
retf
cmps
fwait
scas
aad
enter
push
add
sub
sbb
sbb
(bad)
cmp
sub
clc
dec
mov
xchg
mov
cli
call
aaa
xchg
mov
mov
xchg
out
test
mov
dec
nop
out
(bad)
jge
sbb
sub
inc
jecxz
fist
inc
stos
xor
and
enter
psrad
adc
je
div
mov
enter
leave
aas
fidivr
js
adc
jle
or
and
repnz
mov
cmp
lods
pop
inc
fs
sub
nop
push
inc
or
sub
stc
dec
out
ficomp
mov
pop
pop
mov
cwde
lea
adc
adc
pop
stos
push
mov
movs
lods
in
dec
cmp
clc
(bad)
mov
jo
jmp
fwait
call
mov
jno
mov
xchg
fs
xor
push
mov
outs
jp
out
sbb
leave
jle
push
adc
cmp
scas
(bad)
enter
cwde
(bad)
fsub
cli
xor
outs
xchg
jge
dec
fwait
pop
dec
sbb
loop
fcmovb
pushf
jmp
leave
pop
mov
xchg
cmps
cs
mov
or
outs
stos
and
call
sbb
fisttp
cmp
int3
jno
ds
leave
jns
jbe
mov
mov
mov
xor
mov
push
xor
sbb
dec
dec
xchg
nop
ins
xchg
dec
mov
push
push
pop
outs
xor
js
pusha
int3
sub
addps
sub
fild
xor
sub
mov
jg
xor
xor
jp
xor
pop
mov
sbb
lods
int
cli
jp
int
cld
cmp
dec
mov
inc
mov
mov
imul
fisttp
xchg
mov
dec
xor
mov
adc
jmp
retf
cmps
pop
imul
(bad)
hlt
outs
mov
push
xchg
(bad)
idiv
mov
sub
mov
lock
jmp
bound
leave
sahf
retf
sahf
(bad)
stos
int
jg
ret
stc
xchg
push
dec
jne
sub
aam
sbb
pop
lock
ret
fidivr
jne
dec
and
and
cmp
into
inc
dec
call
in
mov
imul
retf
lock
aaa
cmp
jo
inc
hlt
outs
push
cwde
shr
jmp
mov
mov
mov
mov
cs
sbb
cmp
rcr
mul
adc
mov
ret
push
in
movs
xor
mov
mov
ins
scas
push
push
xor
call
movs
fcompp
fwait
sbb
dec
sub
lahf
jmp
sbb
popa
cmc
mov
int
push
xchg
call
pop
stos
outs
adc
fsin
(bad)
leave
dec
adc
pop
sub
jg
imul
mov
fmul
cld
pop
push
repz
js
inc
xor
leave
jp
sub
bound
fsubr
imul
(bad)
ja
sub
(bad)
out
inc
jnp
cli
dec
movs
adc
sar
sti
jle
jo
inc
cli
adc
fisttp
sbb
into
jae
push
(bad)
popa
fisttp
mov
pop
call
mov
std
cli
mov
aas
adc
loopne
pop
scas
das
repnz
mov
push
aam
add
ins
retf
adc
pushf
push
clc
and
jle
push
das
and
pop
popf
shr
in
shr
js
sbb
pop
pop
sbb
pop
push
jl
stos
dec
bound
fisubr
pop
sahf
jno
stos
sub
jne
cmp
push
sbb
into
push
(bad)
lea
ret
add
arpl
mov
push
mov
push
cmp
add
mov
mov
sbb
add
xor
test
dec
retf
add
(bad)
or
ins
stos
retf
dec
aad
pop
outs
jg
push
aam
call
pop
imul
imul
in
stos
mov
and
fwait
imul
adc
imul
or
ror
sbb
cmp
cwde
pop
mov
int
pop
cmp
es
sub
mov
enter
je
jns
loope
adc
cmp
dec
cdq
add
stos
sbb
popa
int3
mov
out
jnp
or
aaa
push
adc
(bad)
out
ss
adc
mov
fwait
aas
into
add
sub
xor
hlt
jecxz
test
in
jp
lock
leave
xchg
xchg
dec
mov
jo
repnz
stos
aam
out
mov
dec
add
xchg
adc
ins
fist
mov
push
mov
mov
cmp
fidiv
pop
xor
sub
pushf
popf
mov
shl
sub
mov
test
loope
fsubr
adc
push
std
test
js
outs
outs
mov
fisub
and
sti
jns
inc
sub
cld
jg
cwde
or
jb
call
scas
xor
cmp
sub
cmp
and
jecxz
dec
stos
dec
fadd
jmp
inc
dec
pop
cmp
enter
cdq
pop
pop
repz
jge
lock
sti
retf
dec
mov
mov
sub
scas
xor
mov
cdq
or
and
mov
xor
mov
retf
leave
leave
gs
and
fistp
in
jp
(bad)
imul
add
mov
sbb
inc
jns
mov
retf
inc
jl
cmc
dec
jmp
mov
or
dec
push
xchg
dec
sahf
and
or
call
mov
jecxz
std
sbb
in
sti
mov
fucomip
mov
ins
ja
lds
mov
retf
cmp
sbb
sub
and
jp
pop
mov
fld
fisub
test
pop
inc
ss
xchg
or
pop
pop
jmp
in
retf
stos
xor
mov
ficomp
bound
pop
lock
or
mov
pop
push
xchg
mov
mov
dec
loop
sub
add
dec
sbb
push
cmps
dec
adc
xchg
cmp
std
fwait
scas
cmp
cmp
(bad)
stc
jmp
jg
(bad)
pop
cmp
dec
adc
loopne
inc
mov
jp
jl
pushf
lahf
mov
loopne
hlt
das
pop
ins
fistp
mov
jnp
sub
xchg
and
int
imul
jne
shl
repz
call
add
imul
fild
daa
jmp
xor
sub
xchg
das
jp
popa
mov
sbb
add
stos
sbb
mov
pop
cmp
push
imul
test
fldcw
cmp
(bad)
push
fbld
mov
jecxz
and
iret
fstp
mov
sbb
lods
add
(bad)
push
out
dec
retf
das
pop
aaa
dec
fisub
pop
stc
xchg
or
fwait
mov
mov
inc
push
test
mov
mov
iret
lods
dec
stos
jl
iret
sbb
lahf
sti
jp
lahf
sub
mov
sbb
jg
lea
push
stos
jmp
push
mov
pop
mov
mov
mov
push
push
mov
movs
or
mov
dec
cmp
popf
pop
rcl
pushf
mov
jge
mov
imul
dec
pop
pop
jnp
mov
test
sbb
xor
push
repnz
inc
push
outs
imul
push
jmp
jnp
(bad)
fucomp
adc
retf
(bad)
adc
std
dec
or
dec
sub
dec
jmp
ret
xchg
jno
push
xchg
retf
aaa
mov
xor
shl
cld
xchg
cmp
cs
xor
sub
or
inc
stos
in
sbb
repnz
pop
push
dec
pop
sub
cmp
xchg
cmps
xchg
xor
dec
cmc
jecxz
fwait
sbb
dec
outs
mov
inc
es
sbb
pop
call
scas
cli
retf
sahf
stc
stos
push
dec
add
mov
mov
scas
pop
xlat
push
push
std
xchg
cdq
mov
push
aas
push
leave
inc
sahf
adc
and
mov
push
push
jp
xchg
sub
cs
retf
push
jb
retf
adc
pop
push
call
pop
or
sub
hlt
adc
in
sub
xchg
push
test
sub
sub
(bad)
cmp
dec
into
icebp
in
mov
or
int
adc
shr
inc
cmps
sbb
test
cdq
sbb
das
mov
je
xlat
fstp
cmp
inc
xchg
movs
push
push
pop
jle
dec
sbb
cmp
mov
sub
ins
mov
popf
lahf
sbb
xchg
pop
push
ins
or
lock
ror
outs
mov
xchg
mov
push
call
outs
shr
jnp
mov
in
stos
jle
fistp
adc
pop
clc
push
mov
mov
jno
jb
mov
ins
xor
xor
leave
test
adc
aam
cli
pop
dec
fs
cmp
and
sbb
imul
mov
movs
repz
movs
imul
(bad)
pop
fsubr
fist
xlat
sbb
jmp
cld
add
popf
les
jle
mov
pop
js
inc
xchg
mov
(bad)
or
jmp
pop
xor
sbb
xor
mov
dec
push
and
idiv
fwait
cmp
jmp
lods
xchg
ins
inc
fidivr
out
es
jl
jmp
or
call
pop
mov
dec
dec
sar
not
or
(bad)
fldl2t
mov
cs
adc
mov
pushf
push
adc
inc
or
imul
push
mov
jge
dec
out
icebp
mov
mov
dec
sbb
jbe
pop
fsubrp
sti
retf
mov
xor
add
or
dec
jmp
sbb
fsubr
icebp
fwait
inc
sbb
sub
or
stos
mov
aaa
push
sahf
adc
mov
out
cmp
inc
fdivr
xchg
dec
sbb
pop
sub
add
pop
popf
add
jbe
push
or
dec
retf
out
cmc
xor
mov
inc
sub
ja
inc
pop
stos
outs
jns
test
push
clc
adc
push
pop
call
pop
adc
sbb
dec
pop
add
pop
cdq
xchg
mov
fstcw
cmp
jge
rcl
sbb
sbb
enter
jbe
pop
out
or
xor
repz
mov
adc
push
addr16
xchg
push
dec
inc
xchg
push
sbb
fwait
mov
int
jmp
jge
add
xchg
rcr
sub
ss
jmp
fdiv
dec
cmp
retf
cli
enter
aaa
stos
stos
lahf
mov
mov
cmc
int
sub
enter
clc
mov
adc
stos
mov
xchg
in
test
fisttp
add
imul
daa
mov
(bad)
xchg
fistp
xchg
push
into
aaa
call
rcl
sbb
add
nop
pop
loop
fwait
jmp
pop
loop
or
(bad)
movs
lahf
pop
inc
bound
call
jecxz
add
fist
cmp
stos
jl
jle
mov
mov
mov
cli
push
cmp
mov
aad
push
mov
pop
sub
push
(bad)
mov
mov
stos
retf
inc
xchg
pop
push
loop
jl
sti
dec
es
or
or
div
inc
mul
jmp
cmp
adc
mov
cmp
xchg
out
adc
pop
push
dec
mov
fnstsw
push
test
sti
loop
mov
cld
xor
push
cmps
addr16
jmp
js
test
mov
out
and
mov
cmp
leave
sub
fnstcw
gs
shl
leave
jmp
cmp
jl
ins
popf
imul
jns
aam
sti
aad
jns
jmp
fwait
and
push
or
push
xchg
shl
fst
ret
inc
mov
mov
sbb
cli
ficom
imul
repz
std
and
repz
sbb
mov
adc
faddp
lock
dec
mov
call
pop
retf
retf
xchg
leave
retf
pop
mov
lods
cmp
jo
xchg
mul
mov
sbb
xor
in
or
cmp
popa
cld
cmp
dec
dec
pop
jge
mov
test
call
jmp
jp
push
push
jne
push
xor
jmp
push
jmp
xchg
mov
cmps
mov
push
sbb
xchg
out
sub
or
ficomp
sbb
pop
cs
add
xor
and
fistp
cwde
das
dec
jle
xor
xchg
xchg
and
sar
and
ret
pop
stos
or
outs
aaa
fimul
outs
sub
in
pop
call
jmp
je
dec
ret
sbb
add
(bad)
aam
pop
fist
mov
cmps
or
fcmovbe
add
(bad)
fild
ret
aam
rep
xor
adc
in
cmc
les
and
dec
sub
dec
xchg
mov
dec
fdivr
mov
(bad)
je
jmp
pop
inc
cmc
add
jb
mov
(bad)
nop
dec
sub
jmp
retf
stos
push
mov
jnp
jge
push
push
cmp
pop
push
fstp
adc
pop
test
sub
inc
dec
add
icebp
xor
fimul
sub
adc
pop
sub
mov
or
push
das
cdq
xchg
adc
mov
push
pop
pop
rcr
ficom
nop
pop
inc
gs
lods
cmp
mov
int
stc
cmp
lods
test
sub
jo
sbb
sub
fsubr
adc
xchg
and
jmp
add
mov
ins
fwait
and
push
xchg
add
jae
lahf
add
aas
inc
add
out
push
cdq
into
and
rcr
imul
out
stc
js
sub
jbe
add
pop
and
inc
jge
fdivr
jge
xlat
adc
mov
mov
mov
rcr
mov
sbb
mov
or
jmp
inc
xchg
or
mov
mov
pop
ins
aad
sbb
(bad)
sbb
stos
gs
scas
mov
sar
xor
push
or
mov
clc
push
add
push
std
rcl
or
dec
xor
mov
movs
and
sbb
dec
or
push
pop
jb
das
bound
inc
pop
push
cmp
or
xlat
iret
imul
gs
sbb
mov
in
mov
jle
retf
adc
sbb
jge
outs
inc
mov
push
sbb
mov
jne
mov
mov
leave
scas
cmp
sbb
das
retf
jmp
push
inc
or
retf
cmp
fimul
imul
pop
push
stos
in
ss
xchg
fidiv
mov
mov
cs
arpl
outs
sti
sub
retf
pop
sbb
cmp
mov
out
sub
mov
mov
xlat
jae
mov
nop
loop
ins
xchg
jbe
(bad)
jmp
push
sbb
stc
sub
sbb
test
pop
jmp
lahf
ins
rcl
test
out
jl
sbb
rcr
jp
cmp
sub
cmp
mov
outs
mov
pop
pop
imul
imul
sbb
pushf
mov
mov
add
pop
pop
sub
cdq
mov
cwde
jmp
out
sub
mov
call
push
pop
(bad)
dec
imul
cs
leave
xor
popa
repz
mov
ins
and
dec
pop
sbb
xchg
and
in
fisttp
fistp
push
fsubrp
or
(bad)
test
push
jecxz
pop
adc
xchg
or
jbe
push
rol
push
jecxz
(bad)
mov
push
lods
cmp
cmp
add
fistp
or
mov
xor
and
call
mov
daa
mov
call
pop
jle
mov
std
jmp
lock
rcr
xchg
xchg
into
loopne
loop
jle
cmp
dec
mov
xchg
cmc
(bad)
jmp
sar
daa
loope
jae
sar
(bad)
aad
and
sbb
outs
ins
push
outs
push
or
out
xchg
fild
aam
xchg
add
mov
in
(bad)
jmp
arpl
cdq
jmp
xor
pop
pop
mov
loop
jbe
dec
test
cmp
sahf
cs
push
dec
cmp
mov
mov
cmp
pusha
movs
sbb
add
ret
fwait
push
pop
mov
push
cli
mov
push
cmps
or
shr
in
data16
pop
push
sahf
js
jg
jmp
test
dec
jmp
and
jnp
sti
imul
ins
mov
fsub
mov
imul
push
mov
pop
jp
jg
fstp
adc
pop
jmp
movs
cmp
arpl
jp
pop
jmp
fisubr
call
retf
cdq
mov
arpl
loop
or
pop
jecxz
pop
push
or
(bad)
mov
jbe
fimul
cwde
cmp
add
stos
js
jp
sbb
pop
cmp
dec
pop
xor
sti
mov
and
ror
call
jg
push
arpl
fwait
stos
dec
xor
into
ds
fbld
mov
mov
push
sub
xchg
test
or
fwait
lock
mov
shr
fdivr
or
add
imul
push
inc
or
lods
ficomp
mov
rcr
call
cmps
fdivr
mov
mov
pop
fild
pop
sub
lock
mov
sbb
cli
in
jmp
les
sti
xchg
imul
or
push
jnp
mov
ins
sbb
add
add
cs
outs
pop
dec
or
lahf
ficomp
popf
retf
add
aas
xchg
out
mov
dec
jg
push
or
imul
test
pop
ror
jmp
pop
cld
out
inc
sub
aad
xchg
pop
mov
pop
in
or
pop
outs
mov
imul
lahf
(bad)
ds
fadd
dec
add
imul
jg
ins
out
add
push
icebp
jno
ds
sbb
mov
cmp
call
int
pop
in
jp
sti
arpl
fild
pop
lds
push
jecxz
fld
iret
xchg
mov
inc
mov
cmp
stos
(bad)
pusha
retf
outs
sub
repnz
mov
dec
das
inc
xchg
pop
leave
adc
dec
sub
mov
xchg
enter
dec
dec
xchg
call
add
jge
jmp
loopne
cmp
pushf
(bad)
cmp
daa
sub
fdiv
jb
xchg
call
scas
pop
pop
push
sti
stc
add
adc
rcl
in
pop
pop
jnp
loope
call
movs
mov
pop
cmp
or
jns
mov
or
mov
adc
je
xchg
dec
sub
scas
xchg
mov
(bad)
push
hlt
fmul
fisub
jl
sbb
bswap
test
mov
(bad)
xchg
or
push
jle
js
fmul
pop
jae
jnp
push
inc
punpckhbw
add
enter
fnstcw
mov
push
inc
scas
lds
sub
movs
sbb
mov
jnp
jae
or
call
dec
ja
fcomp
mov
pop
sub
xchg
ficom
loop
(bad)
add
cli
stos
and
and
dec
push
sbb
jae
aaa
cmp
mov
iret
sti
mov
dec
jp
adc
out
bound
retf
push
push
shr
push
xchg
retf
call
cmp
sbb
cli
xor
fwait
cmp
mov
pop
bound
aam
sahf
mov
cli
retf
(bad)
out
aaa
sahf
sub
inc
shr
arpl
push
mov
mov
mov
ror
push
sar
pop
jnp
icebp
sbb
test
js
mov
out
test
ds
(bad)
clc
ds
add
aam
jmp
cmp
jmp
stos
pusha
cld
push
repz
scas
or
cmp
bound
push
dec
mov
(bad)
lock
mov
(bad)
test
loopne
dec
mov
pop
mov
retf
jl
add
or
test
enter
fstp
les
(bad)
pop
lahf
or
icebp
pop
sub
or
or
imul
mov
stos
fistp
jnp
sub
or
adc
call
jae
sub
mov
sbb
jne
rdtsc
test
in
push
push
cwde
sbb
outs
out
inc
ret
(bad)
xor
sub
xchg
dec
(bad)
daa
cmps
addr16
in
mov
cwde
sub
sti
xor
jmp
repz
aam
inc
cmp
int
sbb
mov
sub
and
sub
jmp
or
mov
ror
pop
int
xor
stos
arpl
movs
cld
pop
sti
xchg
jp
adc
inc
mov
ins
cmp
add
out
jecxz
ds
mov
shl
in
stos
movs
and
mov
ror
imul
and
xchg
mov
std
loopne
or
arpl
(bad)
mov
sbb
jecxz
pop
test
gs
add
retf
jle
push
mov
add
inc
pop
and
push
and
push
mov
pop
cmp
cmc
xchg
xchg
inc
lds
xlat
mov
dec
jmp
cld
push
cmp
sti
push
shl
(bad)
iret
clc
out
push
cmp
pop
push
retf
dec
loopne
jge
outs
ja
sbb
or
jno
loop
sbb
pop
lahf
sbb
popf
sbb
dec
das
adc
push
sub
inc
mov
pop
dec
nop
(bad)
repnz
out
jb
in
fmul
dec
mov
cmp
push
les
add
loop
sar
retf
xchg
mov
arpl
push
dec
push
ds
xchg
movs
test
fisttp
push
(bad)
iret
xlat
xchg
jl
imul
into
jmp
dec
adc
nop
mov
test
fwait
mov
jecxz
pop
push
clc
xor
cmp
fwait
enter
ja
or
dec
imul
mov
dec
in
mov
(bad)
push
js
adc
mov
cmp
cld
sti
cdq
cwde
lods
jae
xor
push
cmp
pop
push
inc
(bad)
call
add
cmp
sbb
(bad)
pushf
sub
ins
lahf
mov
shl
leave
lock
jp
cld
sub
out
or
jnp
push
loope
fsubr
jmp
scas
(bad)
out
sti
mov
ins
mov
inc
xchg
mov
retf
fcomi
dec
or
cwde
xor
in
adc
xor
jp
aad
ins
push
and
into
xor
add
xor
jno
jmp
or
xchg
ret
scas
in
rcl
sub
jo
call
sub
dec
or
mov
cli
cld
retf
pop
stos
cmps
jb
ins
inc
test
cld
mov
or
gs
cs
pop
inc
xor
adc
mov
cmps
pop
and
fwait
sbb
sbb
adc
cwde
jae
push
xchg
retf
imul
imul
lahf
(bad)
and
int
in
jno
dec
aam
pop
adc
sub
jne
(bad)
out
mov
and
fst
jmp
xor
sbb
sbb
mov
pop
out
jo
test
cmp
dec
sub
mov
pusha
fmul
lods
test
jmp
sbb
xor
push
imul
mov
(bad)
cli
(bad)
out
sbb
out
test
xchg
inc
pop
rcr
cdq
ficomp
sbb
xchg
jp
pop
call
ror
mov
fwait
mov
pop
jp
push
inc
xchg
call
movs
inc
cmp
ret
imul
rcr
out
mov
pop
sub
and
mov
ins
mov
xor
dec
xchg
pop
mov
dec
dec
push
test
mov
(bad)
mov
out
(bad)
stc
js
sub
fistp
sub
or
cmp
retf
retf
popa
mov
out
call
cs
sbb
pushf
ror
cmp
jle
mov
data16
xchg
mov
dec
sub
stc
mov
inc
jbe
fist
push
mov
pop
dec
scas
fwait
sub
repnz
cwde
mov
jmp
ficom
sbb
ss
popf
add
sahf
dec
jle
or
mov
sbb
adc
cmp
adc
jno
dec
je
out
subps
adc
cli
sti
add
dec
mov
aas
cmp
scas
pushf
inc
(bad)
inc
push
sub
lahf
cmp
sbb
(bad)
das
in
cmp
jnp
arpl
fisttp
sbb
call
inc
movs
ficomp
or
scas
xor
leave
dec
bound
inc
and
jecxz
lock
loopne
aas
(bad)
mov
es
or
pop
jmp
pop
std
adc
int3
sbb
inc
inc
test
movs
mov
ins
lock
adc
dec
add
sbb
sub
xchg
call
jmp
xor
and
push
cmp
les
dec
dec
push
stc
out
stc
stc
mov
shr
or
cmc
jmp
dec
jge
adc
mov
stos
call
or
dec
aaa
add
cmp
pop
dec
call
(bad)
lahf
loop
ret
mov
mov
or
out
xor
add
sbb
cmp
jle
fwait
or
in
enter
in
ins
sti
imul
pop
or
sbb
in
leave
imul
js
fcmovne
adc
pop
mov
and
sbb
mov
jmp
popa
jnp
stc
mov
dec
ins
imul
sub
sbb
sti
push
xchg
push
sar
cmp
nop
add
(bad)
adc
dec
outs
cdq
(bad)
fisttp
test
ret
popf
xor
mov
ja
paddsw
jns
push
fild
mov
bound
sbb
dec
jnp
or
cwde
sub
aad
jecxz
push
push
(bad)
lds
sahf
or
push
jmp
push
sub
clc
sub
fs
scas
add
mov
jns
adc
fwait
test
imul
pop
lock
dec
mov
dec
pop
mov
loope
scas
jne
cli
xchg
push
inc
mov
imul
retf
add
sbb
call
push
out
xor
cmp
ret
sub
lock
inc
adc
adc
cwde
jp
push
jb
push
jno
fwait
jb
sub
inc
(bad)
mov
mov
mov
(bad)
bnd
pop
and
pushf
dec
iret
mov
push
jnp
pop
fwait
jmp
(bad)
bound
xchg
cmp
pushf
jne
push
enter
dec
push
dec
or
popf
int
(bad)
mov
(bad)
ds
jle
jle
mov
jnp
fs
rcl
shl
lock
push
jns
and
(bad)
js
or
sbb
pop
call
and
stc
jge
fwait
hlt
popaw
scas
stos
adc
stos
setp
js
mov
mov
push
(bad)
xor
retf
or
rcl
sbb
fisttp
iret
nop
sub
mov
addr16
mov
sti
jb
call
fimul
enter
popa
sbb
sub
fild
sahf
add
cmps
xchg
fwait
cmp
mov
xchg
mov
pop
jmp
pop
call
retf
and
cmp
retf
pop
call
mov
test
leave
fld
sbb
adc
or
movs
inc
out
jg
ja
xlat
fcmovnu
pop
sbb
call
add
or
jl
xor
fcmovbe
popa
jne
mov
mov
jne
retf
int
cli
std
retf
pop
or
push
jle
inc
mov
and
ficomp
outs
mov
inc
cs
rcr
fcmovnu
stos
pushf
(bad)
fimul
outs
add
jnp
push
cwde
(bad)
clc
ds
mov
jmp
pop
or
jns
and
scas
nop
call
cdq
sub
sub
clc
ret
pop
(bad)
sub
fistp
mov
cmp
shl
pusha
in
and
mov
jp
push
xchg
pop
test
cmp
and
cmp
hlt
jmp
pop
mov
cmp
add
retf
das
xchg
push
pop
stos
pop
(bad)
das
in
daa
inc
mov
pop
jg
sub
jle
scas
call
(bad)
sar
cli
fist
jl
in
push
and
mov
mov
(bad)
pop
xchg
or
test
dec
cmc
inc
xchg
jmp
in
push
mov
sbb
pop
push
pop
fmul
(bad)
cli
add
or
sar
ja
jae
xchg
int3
in
stos
movs
fisttp
sti
rcr
push
aam
outs
jmp
xor
add
push
ficom
(bad)
pop
cmp
out
jns
dec
adc
btc
sbb
or
jns
push
and
lea
sbb
ret
mov
fwait
aaa
test
dec
retf
inc
scas
sbb
pop
or
jp
(bad)
rcl
(bad)
call
cmp
adc
sub
fwait
in
stos
jnp
add
test
mov
out
and
ss
dec
ds
lock
daa
inc
mov
scas
mov
int3
lahf
and
jnp
aad
cmp
pop
mov
pop
fwait
mov
inc
mov
push
xlat
mov
pop
lds
pusha
mov
in
sti
ror
sub
or
gs
xor
cmp
fidivr
mov
cmp
xchg
sbb
call
or
sub
stos
cli
cli
int
push
js
pop
(bad)
fiadd
pushf
cmovl
ins
push
popa
dec
jg
cmp
data16
or
popa
dec
neg
pop
or
mov
inc
xchg
nop
xor
and
aam
rol
and
dec
push
add
push
leave
pop
mov
ins
test
rcl
(bad)
cwde
cmp
in
ret
jmp
lods
pop
pop
pop
int3
sub
aaa
dec
sahf
jecxz
ins
cli
push
mov
cmp
dec
add
(bad)
std
dec
or
(bad)
pop
pop
leave
clc
jno
add
or
leave
jo
cmps
sub
inc
(bad)
lds
stos
lock
push
xor
cli
sbb
addr16
xchg
mov
cwde
je
jl
mov
test
fwait
fwait
jg
mov
je
test
or
mov
push
push
add
and
imul
stos
jp
cli
shr
lea
xchg
arpl
ret
cmp
jp
lods
retf
(bad)
fwait
adc
cdq
hlt
out
xor
(bad)
movs
xlat
adc
lds
mov
mov
jge
out
inc
stc
mov
push
test
or
popf
fdivrp
loope
loope
dec
sub
dec
hlt
movs
inc
jp
imul
movs
push
jl
push
sbb
stos
or
call
dec
fs
aam
fcomp
(bad)
cmp
out
cld
fst
cmp
stos
stc
mov
stos
sahf
retf
stc
mov
dec
and
mov
leave
sbb
add
adc
ret
jp
jge
xchg
std
imul
enter
fld
xor
sahf
ins
push
xor
sub
out
scas
ficomp
xor
dec
div
clc
mov
adc
stos
xor
retf
push
inc
jns
adc
les
loopne
mov
popa
sbb
dec
inc
push
cs
dec
pop
popf
pop
fwait
inc
push
repnz
fwait
xchg
cs
mov
cmp
popf
jmp
stos
cs
jp
cmps
jnp
daa
sti
push
imul
fs
(bad)
dec
test
pusha
mov
stc
jg
call
jge
jbe
pop
pop
jecxz
mov
cmp
pop
shr
or
ja
mov
dec
cli
int3
and
or
or
in
jmp
mov
mov
pop
mov
jle
cld
dec
jp
outs
dec
out
cmp
cs
push
dec
sbb
adc
retf
sbb
sbb
mov
mov
and
enter
loope
cs
in
fadd
es
in
cdq
adc
scas
and
xor
call
out
jecxz
pop
adc
jo
cmp
dec
outs
je
rol
fwait
sub
ret
pushf
xchg
nop
retf
mov
dec
pop
dec
fs
scas
jae
dec
jnp
call
movs
push
or
xor
sub
sahf
fdivr
bound
jnp
adc
outs
dec
out
rol
mov
sub
or
jmp
adc
mov
imul
fistp
pop
leave
or
push
fidiv
in
retf
or
bound
sub
(bad)
ficomp
fwait
dec
jl
sub
fwait
test
repz
movs
pop
inc
mov
test
xor
call
(bad)
xor
je
cmps
in
sub
fidiv
jmp
xchg
mov
loopne
cli
jl
and
in
xor
inc
jae
dec
js
dec
xor
push
jmp
aaa
sbb
mov
data16
mov
push
pop
mov
ins
cmp
aas
(bad)
xor
(bad)
in
cli
jo
neg
xor
pop
mov
and
push
cmp
test
ins
fcmovu
xchg
push
cmp
sbb
aaa
mov
imul
adc
mov
js
dec
mov
or
out
fsub
cmps
rcl
retf
outs
mov
sub
mov
mov
mov
lods
popa
sub
fs
mov
sub
pop
movs
shr
fnstcw
pop
sahf
add
jge
retf
call
or
sub
fisttp
xchg
fs
adc
xor
mov
iret
mov
sbb
mov
lods
stc
and
dec
pop
loopne
adc
call
mov
dec
outs
mov
xchg
sbb
adc
in
(bad)
stos
and
mov
hlt
ret
retf
aad
mov
fwait
or
or
fmul
int
mov
lods
mov
aaa
stc
mov
mov
jecxz
push
and
mov
mov
adc
leave
xchg
shr
stos
ins
sbb
ss
sbb
push
test
loop
stos
mov
mov
cld
imul
xchg
jecxz
push
cmp
ret
mov
dec
jnp
sub
xor
fist
call
sub
push
imul
sub
jns
mov
fdivr
shr
xlat
jnp
sbb
pop
xchg
add
add
dec
push
push
mov
ret
pop
dec
dec
add
in
das
repz
pusha
push
(bad)
addr16
inc
sbb
imul
or
stos
repnz
call
loop
add
pop
xchg
das
lea
mov
fucomi
sbb
out
add
cmps
retf
pop
jmp
aas
xor
dec
xchg
pop
scas
imul
xchg
test
mov
sub
int
adc
jmp
or
xchg
cmp
mov
cmc
push
pop
push
or
sbb
ret
pop
xchg
cmc
pop
or
call
xchg
int
shl
loopne
in
jg
dec
adc
pop
adc
(bad)
dec
jge
stos
pop
push
sub
xor
int3
add
cli
cld
xchg
adc
pop
and
lods
clc
jae
movs
and
mov
in
sar
or
cmp
ins
popf
addr16
int3
pop
or
and
hlt
retf
repnz
test
ja
sti
call
inc
pop
cmp
fmul
sar
mov
pop
cli
ss
or
jbe
sti
pop
retf
out
dec
sahf
xor
arpl
ficom
jge
push
cli
inc
scas
adc
inc
dec
adc
push
push
dec
cmp
cmp
xchg
lods
lds
xor
dec
retf
daa
pop
ins
sbb
jmp
lock
test
rol
jae
lar
mov
cmp
and
int3
repnz
out
cmp
jecxz
sti
sub
in
or
push
pop
push
stos
retf
popf
setno
jbe
xchg
or
fistp
jb
xor
or
push
retf
adc
das
loope
ins
fist
aas
fs
cdq
aad
(bad)
jmp
cmp
jnp
or
mov
in
stos
fmulp
aas
jecxz
int
sbb
retf
sbb
pop
inc
push
mov
mov
in
retf
xchg
bswap
pop
mov
jmp
or
es
or
add
or
cmp
jne
out
aad
(bad)
mov
dec
push
dec
pop
adc
or
mov
inc
fild
aas
cmp
dec
cmp
pop
add
jne
movhps
jmp
test
mov
imul
rol
mov
xchg
jae
ja
(bad)
ins
test
out
(bad)
int3
pop
adc
adc
fistp
xchg
imul
push
and
dec
jne
dec
aam
mov
inc
call
pop
dec
popf
lds
push
gs
push
dec
sub
icebp
xchg
pusha
stos
jecxz
cli
in
xchg
adc
scas
jmp
mov
fs
add
test
leave
jmp
fisubr
stos
mov
sub
out
int3
xor
sbb
add
mov
sub
inc
sub
fld
xor
jmp
icebp
push
xchg
ret
fisttp
iret
jge
dec
sub
jp
rcl
repnz
test
in
sti
jmp
push
or
loope
cmp
ds
dec
dec
bound
mov
(bad)
test
add
mov
jb
ror
mov
test
mov
pop
aaa
out
call
inc
sub
sub
inc
dec
loopne
sub
push
push
in
push
inc
cmps
or
pusha
nop
test
xchg
rcr
cli
cmps
pop
rcr
cld
imul
add
div
xchg
loopne
aas
push
xor
jge
dec
fisub
adc
push
hlt
(bad)
and
jmp
bound
or
dec
pop
add
cdq
popf
jle
mov
fwait
jmp
xor
aas
outs
jle
push
gs
lds
nop
xchg
inc
jmp
and
mov
push
repz
sbb
mov
mov
call
cmp
outs
movs
(bad)
pop
fist
sbb
jnp
or
call
fcmovnu
push
sahf
dec
sub
pop
inc
fcom
fimul
and
jne
add
sub
int3
das
lahf
ret
cdq
sti
jp
jp
sbb
fneni(8087
sub
(bad)
imul
stos
cli
mov
push
mov
jmp
add
push
and
into
pop
mov
int3
imul
fwait
ds
retf
in
les
or
lea
dec
out
push
pop
mov
cmp
lods
cdq
test
call
mov
les
dec
ret
jg
je
gs
sbb
test
cmp
cmp
push
sbb
test
pop
nop
jp
mov
dec
sbb
arpl
jbe
mov
or
icebp
xor
ja
call
stc
in
mov
int3
dec
ficomp
xor
dec
call
retf
std
or
jns
stos
and
pop
arpl
fsubr
mov
push
xchg
sbb
jne
mov
push
sti
cmps
ret
mov
lahf
into
(bad)
out
sbb
push
xchg
adc
sub
sub
mov
fwait
jmp
into
aad
mov
repz
xor
mov
aad
shr
jne
mov
fsub
dec
add
stos
test
dec
adc
cmp
cdq
call
lds
jmp
adc
pop
jns
mov
jmp
xchg
mov
lods
dec
dec
push
ficom
std
inc
leave
das
add
aas
(bad)
(bad)
pop
aam
cmc
mov
sub
inc
sbb
and
aaa
out
sub
xor
adc
not
movs
std
mov
test
sar
and
mov
imul
mov
fnstsw
call
sbb
sub
retfw
jb
sar
and
hlt
fimul
std
sbb
ins
or
inc
mov
jmp
out
lds
jmp
or
sbb
in
and
dec
sbb
int3
sub
mov
mov
in
call
out
xchg
fidivr
sub
stos
icebp
mov
jae
fwait
xchg
pusha
call
stos
mov
fild
xchg
and
or
test
aad
xchg
dec
in
dec
jnp
out
pop
xchg
stos
(bad)
jl
jmp
fiadd
fs
and
movs
sub
mov
loope
mov
adc
into
nop
xchg
sub
push
imul
xor
movs
fwait
push
stos
into
adc
dec
pusha
ins
sahf
dec
jp
fidivr
push
pop
cmp
xchg
retf
fstp
cwde
mov
mov
cmp
dec
or
sub
ror
pusha
xor
inc
retf
aam
xor
mov
jne
enter
outs
pop
fldenv
in
pop
dec
pop
push
movs
sub
lock
push
out
mov
cmp
stos
mov
push
addr16
xchg
leave
fs
mov
test
mov
fcmovu
(bad)
imul
jne
lea
jl
std
mov
jns
xlat
jp
sbb
stos
sub
popf
(bad)
cmp
sti
arpl
push
stos
push
repnz
and
and
inc
inc
sbb
loop
imul
aaa
out
aad
sub
or
hlt
popa
cmps
outs
sub
pop
pop
mov
jl
dec
daa
call
mov
xor
punpckhdq
pop
call
adc
fidiv
push
scas
sbb
jno
xchg
nop
dec
mov
stc
push
movs
dec
movs
loope
jb
mov
mov
or
fisubr
mov
push
xchg
jbe
mov
mov
jb
(bad)
adc
pop
das
mov
addr16
pop
ret
retf
or
dec
jl
inc
mov
or
and
push
mov
push
out
sar
(bad)
fcmove
sub
push
mov
aas
jge
xchg
and
pop
inc
imul
push
lods
iret
sbb
push
out
cmp
hlt
lds
(bad)
stos
mov
inc
mov
imul
dec
fimul
imul
jnp
lea
jno
jbe
cmp
lahf
mov
test
mov
cli
sti
ret
mov
cli
or
sbb
dec
(bad)
or
hlt
cmp
into
test
fistp
cld
inc
dec
mov
loop
add
dec
push
inc
neg
pop
loopne
dec
cli
mov
sti
out
(bad)
sahf
pop
jmp
jg
mov
imul
out
sar
mov
xchg
xchg
cdq
js
mov
or
mov
jnp
dec
jmp
in
and
iret
imul
pop
xor
xor
sbb
adc
retf
and
sub
fimul
cmp
push
ins
jnp
mov
dec
shr
lds
push
in
jle
call
mov
cmp
sbb
or
loop
fsqrt
dec
push
mov
sbb
fwait
mov
call
in
dec
and
push
push
xchg
bound
in
jmp
push
call
call
sti
jecxz
stos
fist
adc
cmp
or
icebp
cdq
mov
test
cmp
mov
jmp
mov
(bad)
dec
and
add
dec
rcl
test
aas
or
dec
ins
mov
xchg
add
jnp
fwait
xchg
sub
xor
xchg
pop
dec
adc
fdivr
retf
add
jp
ins
ror
scas
scas
test
jbe
(bad)
add
push
cmp
aam
cdq
jg
push
pop
sub
mov
jb
stc
imul
jmp
test
sub
daa
sub
fdiv
mov
cmp
and
call
pop
test
pop
mov
call
sbb
adc
dec
mov
(bad)
adc
pop
sub
in
das
dec
mov
(bad)
cmp
mov
mov
mov
stos
rol
add
cmp
dec
mov
mov
sbb
dec
loope
and
mov
jl
int3
mov
out
sahf
imul
jge
cmp
push
push
or
jg
jl
enter
je
sbb
sub
or
xor
cmp
cli
sub
sbb
inc
pop
sbb
cwde
test
fld
mov
jbe
sub
mov
cmp
fwait
cs
dec
imul
ins
call
sbb
or
xchg
scas
push
cwde
test
jl
out
and
test
mov
mov
sub
or
sbb
or
push
jle
daa
cwde
cmps
xchg
mov
push
mov
cmp
mov
in
jg
and
loopne
dec
bound
pop
add
inc
cmp
inc
push
js
inc
icebp
enter
or
js
xor
clc
or
jmp
call
or
cmp
stos
pop
aas
cmp
bound
dec
push
push
pop
imul
retf
bound
inc
inc
jmp
mov
loope
pop
or
jmp
sbb
clc
jmp
test
add
xor
jl
cli
or
ret
leave
xchg
cmp
in
push
adc
leave
loope
and
cwde
xchg
or
jecxz
jp
(bad)
mov
dec
sbb
cmp
scas
hlt
mov
cmps
retf
sbb
retf
sbb
lods
cs
inc
daa
sbb
push
xor
mov
mov
mov
scas
(bad)
(bad)
dec
fwait
gs
inc
cmp
jmp
mov
es
clc
aad
pop
or
xchg
jp
or
lds
and
push
(bad)
fs
cli
dec
jb
xchg
cdq
fild
pop
jmp
mov
nop
cdq
out
push
lods
dec
sub
dec
jmp
loop
fwait
and
and
scas
out
jmp
and
adc
bound
pop
or
sub
out
loopne
mov
cli
data16
mov
repnz
push
jecxz
mov
jp
cmps
mov
hlt
ret
push
fld
inc
out
sub
mov
cmps
mov
mov
and
mov
dec
pusha
pop
mov
dec
leave
mov
out
push
imul
sub
mov
(bad)
(bad)
leave
enter
or
pushf
mov
scas
data16
or
out
mov
dec
xchg
push
adc
shr
mov
push
mov
(bad)
sbb
cmp
imul
cmp
or
mov
mov
mov
retf
aas
xchg
call
mov
scas
ja
jnp
push
jecxz
rcl
adc
pusha
and
lods
std
sbb
and
dec
adc
loop
fisttp
jp
out
mov
cmp
cs
mov
sbb
out
fcomp
mov
repnz
mov
fld
ins
inc
jge
enter
mov
jmp
repz
int3
fwait
xor
mov
push
cmp
xor
dec
jmp
out
xor
std
pop
mov
clc
jnp
push
xchg
mov
je
shr
xchg
push
out
mov
push
mov
es
mov
das
jns
mov
push
cmp
sbb
icebp
fisubr
sahf
loope
cvtps2pd
loop
jnp
(bad)
adc
mov
in
in
and
mov
mov
ror
retf
mov
sti
movs
(bad)
iret
dec
out
xor
outs
test
bnd
dec
inc
and
into
xor
jg
jo
ins
ins
or
adc
arpl
and
jp
jno
jge
mov
pop
sub
lock
arpl
xchg
aaa
mov
mov
push
cmp
xor
jmp
adc
fadd
inc
mov
sub
retf
pop
sub
inc
push
jp
mov
repnz
and
enter
dec
pop
xor
(bad)
push
xor
push
loope
jle
xor
movs
sbb
movs
icebp
or
(bad)
cs
sub
jp
dec
cdq
jb
cmp
cmp
pop
xchg
mov
lock
mov
mov
dec
addr16
cmp
mov
jae
sbb
push
jp
push
dec
pop
push
jp
mov
jp
ror
xlat
sub
movs
out
stos
xor
cmps
(bad)
and
pop
dec
retf
retf
adc
es
jmp
pop
call
test
push
ret
xor
or
jecxz
mov
outs
imul
inc
pop
and
fist
dec
xor
mov
fidiv
dec
xor
or
sub
xor
mov
and
(bad)
jae
mov
cmps
loop
mov
mov
jmp
fisttp
inc
mov
lock
retf
mov
stos
xchg
imul
and
xchg
ret
lea
mov
or
mov
mov
fiadd
mov
dec
mov
das
addr16
inc
inc
fwait
mov
pop
or
stos
cmps
neg
arpl
mov
psrlq
add
mov
cmp
pop
mov
daa
mov
mov
pop
in
push
imul
add
jmp
sub
icebp
scas
xor
retf
add
div
mov
dec
push
or
jle
or
xchg
pop
fnstenv
jp
fs
xlat
cs
sbb
pop
popf
out
loopne
push
or
adc
adc
xor
movs
pop
stos
jb
pushf
inc
push
mov
arpl
retfw
clc
add
imul
xor
mov
mov
mov
popa
xor
loope
add
movs
cmp
pop
add
jnp
(bad)
sbb
add
test
cli
imul
inc
mov
fcmovu
into
bound
push
(bad)
jmp
inc
push
xchg
cwde
xchg
out
(bad)
push
cli
add
(bad)
(bad)
neg
pop
push
add
cmps
les
sub
sbb
stc
xchg
dec
fild
add
aaa
jg
je
cmps
push
gs
iret
push
mov
xchg
(bad)
xor
jmp
stos
pop
xor
mov
add
add
test
fsubr
cmp
pop
fsub
push
mov
cmc
js
out
mov
sbb
inc
cmp
out
aas
xchg
sti
loopne
rcr
ret
fidiv
bnd
inc
xchg
push
dec
mov
pop
add
out
push
call
dec
call
xchg
mov
or
or
cmp
mov
mov
retf
fwait
or
push
jmp
sub
ret
and
inc
mov
cmp
cmp
aas
jae
stc
mov
push
(bad)
fisub
ins
out
jmp
dec
mov
mov
loope
jmp
cmp
inc
inc
pushf
adc
xchg
call
mov
(bad)
and
mul
mov
cmc
cmp
loopne
pop
popf
push
mov
imul
cmp
out
cmps
daa
test
pop
imul
fidiv
mov
sub
(bad)
push
cmp
stos
jg
cmp
inc
xchg
adc
imul
dec
fwait
lahf
imul
jmp
scas
cmp
push
pop
shr
jg
cmp
lea
fwait
dec
mov
imul
cli
mov
jmp
inc
fidivr
out
outs
call
retf
mov
sub
cld
sahf
adc
mov
push
shl
ss
inc
xchg
inc
dec
push
stos
addr16
popa
call
xlat
fimul
imul
imul
or
mov
cmp
xchg
data16
sub
mov
call
dec
(bad)
cmp
pop
das
jp
or
inc
mov
sbb
test
aas
mov
jnp
cmp
sub
pusha
leave
fcom
mov
fmul
cli
sti
fidivr
push
shr
dec
mov
mov
jnp
push
into
fsubr
jmp
and
call
jmp
fisttp
ja
push
imul
loopne
jp
loop
mov
sti
retf
fisttp
pop
cmp
fnstenv
add
(bad)
frndint
xchg
(bad)
pop
sti
dec
mov
sub
cmp
push
inc
shr
fmul
out
fcmove
clc
out
ret
call
int
or
sbb
cli
pop
jmp
jmp
pop
dec
mov
jle
pop
or
mov
lahf
sub
imul
sbb
pop
pop
mov
sbb
or
sbb
mov
sbb
or
and
sub
xor
call
xchg
adc
jmp
cli
pop
aad
neg
dec
not
jbe
mov
mov
dec
jns
call
mov
stos
call
jp
or
push
or
adc
cmps
mov
pop
iret
pop
ret
cli
push
mov
(bad)
add
fcomp
int
mov
mov
test
pop
inc
out
pop
jne
pop
cli
jp
cmp
cli
(bad)
sub
aam
popa
test
jmp
dec
mov
les
mov
sbb
outs
sbb
ds
fisubr
jp
lods
sub
dec
sbb
xlat
mov
test
les
retf
inc
pusha
stc
pop
or
inc
fwait
inc
inc
ins
test
daa
test
adc
or
sub
movs
sub
in
movs
mov
lea
test
retf
ins
gs
sub
mov
retf
add
jnp
call
mov
cmp
cmp
fistp
sub
or
sbb
mov
mov
mov
stos
add
mov
mov
dec
mov
inc
retf
mov
cmps
leave
jmp
cmp
in
xchg
push
or
scas
stos
(bad)
mov
cli
imul
in
pop
dec
pop
ret
pop
dec
xchg
add
movs
mov
mov
xchg
call
pushf
(bad)
mov
xor
push
pop
sub
in
push
pushf
stos
cmc
xor
xchg
inc
hlt
pop
int
cwde
inc
dec
cld
outs
loopne
xchg
xchg
cmp
sub
test
popf
shl
fcmovb
or
int
pop
pop
or
or
cmp
dec
dec
pop
xchg
jl
mov
jmp
das
pop
xchg
mov
push
test
jp
adc
test
div
jl
jns
dec
test
in
lahf
ja
sub
sti
or
and
sar
fild
push
xchg
cs
lods
cmp
scas
cmp
sub
stc
ja
jmp
rcr
xchg
fisttp
int3
stos
pop
pop
xor
pusha
(bad)
(bad)
daa
push
inc
cmp
pop
sbb
(bad)
jp
inc
xor
xor
mov
dec
xor
sbb
shl
(bad)
mov
rcl
sub
inc
mov
addr16
sbb
shl
push
outs
mov
idiv
mov
pop
call
jno
(bad)
in
or
add
in
ins
sti
movs
adc
imul
mov
psubusw
cmp
mov
or
call
ins
sahf
pop
cmp
xchg
movs
frstor
retf
mov
retf
es
sub
sbb
std
(bad)
ja
mov
imul
lahf
fisttp
data16
not
sub
pop
stos
cmp
sub
retf
not
mov
cmps
out
sar
lahf
ins
mov
retf
ss
pop
(bad)
pop
ins
jmp
push
push
xchg
fimul
push
cmp
loopne
and
xchg
sbb
push
sbb
cdq
pushf
repnz
pop
sbb
clc
(bad)
sbb
xlat
cmp
hlt
dec
pop
or
ficomp
mov
sti
push
in
in
push
aas
or
cdq
dec
pop
sub
xchg
dec
jle
fwait
mov
mov
stos
inc
cmc
add
sub
mov
xor
into
and
(bad)
or
imul
push
cmc
pop
pop
retf
(bad)
call
jl
ds
xchg
pop
adc
fstp
stos
test
scas
int3
int3
sbb
push
jl
aam
iret
pop
or
pusha
jnp
js
mov
mov
retf
out
sbb
stos
pop
mov
pop
and
in
sbb
sub
clc
pop
nop
xchg
dec
ja
push
push
sti
popf
pop
ficomp
in
out
push
fidivr
xchg
ret
inc
jge
or
adc
mov
sbb
clc
neg
ror
aam
(bad)
cli
xlat
dec
push
dec
push
jne
push
sub
inc
mov
mov
xor
hlt
pop
add
retf
pop
aam
mov
shl
retf
push
jecxz
jp
jmp
pop
test
fisub
fcomi
jmp
push
push
sbb
sbb
and
lds
pop
jbe
data16
cmp
stos
pop
mov
push
int
imul
mov
sbb
sub
call
call
xlat
out
or
retf
cmps
jmp
push
sub
inc
pushf
jmp
mov
fwait
xchg
stos
cmps
jns
retf
sbb
aaa
jmp
out
or
xchg
sub
mov
cli
dec
mov
pop
sahf
xchg
stos
dec
adc
cmc
out
not
xor
retf
mov
mov
push
call
stos
mov
push
or
sti
adc
cmp
daa
cli
push
fwait
pop
pop
jnp
pop
push
(bad)
fidiv
sbb
sub
sbb
cld
dec
(bad)
das
mov
pushf
pushf
and
sbb
sub
mov
sub
fild
xor
inc
jb
mov
fwait
and
dec
inc
stos
pop
and
mov
push
sbb
sbb
or
daa
retf
or
sub
and
xlat
mov
pop
adc
lock
scas
stc
retf
and
aad
push
cmp
cmp
jl
push
jl
outs
jmp
fidiv
sbb
cmc
or
(bad)
jb
and
dec
out
xchg
dec
add
jle
mov
addr16
push
xlat
ds
dec
(bad)
sbb
out
(bad)
mov
push
ja
ins
imul
mov
add
or
(bad)
pop
(bad)
call
dec
mov
cmp
stc
call
lahf
mov
js
sbb
inc
ror
pop
fs
dec
into
pop
(bad)
fisttp
std
cmp
sub
push
lds
inc
cmp
inc
pop
mov
or
mov
(bad)
sbb
push
push
cmps
sub
pop
or
mov
sbb
lods
lods
sti
imul
push
sti
pop
test
cwde
sbb
xchg
fld
fistp
lods
or
dec
outs
pop
cmp
cmp
mov
jnp
fcomp
xchg
push
pop
dec
mov
jmp
cmp
arpl
cld
call
mov
repnz
jmp
and
cmp
adc
imul
(bad)
fldenv
xchg
call
mov
inc
shl
pusha
icebp
push
jmp
and
inc
cmp
rcl
ds
push
jmp
push
mov
and
dec
sbb
dec
mov
jmp
mov
(bad)
xchg
sub
pop
jae
pop
mov
gs
jmp
in
out
aas
pop
jbe
aam
sub
mov
or
cmp
xchg
mov
mov
xlat
cdq
jp
or
cmp
jmp
inc
xlat
ror
aam
sbb
imul
test
jnp
in
daa
jl
in
fucomp
jne
inc
and
imul
fmul
pop
sahf
mov
lock
inc
pop
mov
enter
sti
sub
mov
xor
dec
cmp
dec
jo
popf
jns
jmp
cs
js
stos
gs
sub
pop
popf
addr16
inc
inc
fistp
dec
inc
mov
imul
adc
mov
mov
call
push
dec
mov
lock
leave
call
neg
jnp
enter
dec
xchg
dec
jp
push
gs
dec
imul
inc
sub
leave
daa
rcr
adc
data16
shl
mov
add
sub
out
fucomi
movs
jns
pop
push
xchg
dec
sub
sub
cmp
inc
call
in
and
sub
pop
xor
pop
ins
pop
cld
imul
or
mov
(bad)
cld
dec
cmp
or
or
stc
dec
inc
imul
sbb
pop
or
int
ffreep
test
(bad)
movs
imul
fisubr
adc
movs
xchg
ins
push
push
fwait
pop
mov
stos
fidiv
pop
jmp
(bad)
push
fiadd
rcr
(bad)
daa
push
dec
push
cli
jo
imul
lea
into
fcmovu
(bad)
in
or
push
sbb
fcomp
arpl
rol
mov
add
pop
call
sti
push
push
sar
or
sbb
call
movs
pop
(bad)
push
cli
fdiv
call
call
iret
and
dec
sub
mov
hlt
mov
mov
sbb
sbb
cld
in
pop
sysexit
and
ins
pop
enter
fwait
pop
scas
popf
dec
stos
mov
clc
in
retf
mov
pushf
mov
pop
cli
fwait
or
into
mov
sbb
pop
adc
shl
stos
imul
pop
call
cli
in
sbb
pop
push
pop
sub
cmp
sub
push
xchg
call
stos
aaa
sbb
jne
(bad)
movs
mov
jmp
call
cld
mov
push
dec
cmps
leave
push
jno
(bad)
sbb
xlat
ret
cmp
mov
add
mov
mov
enter
retf
jne
pop
repnz
mov
jp
dec
push
pushf
xchg
cdq
mov
leave
mov
xlat
fsubrp
stos
daa
dec
jg
outs
push
inc
je
cs
cmp
jp
sahf
(bad)
dec
pop
fistp
(bad)
lods
mov
daa
jge
dec
or
(bad)
dec
outs
mov
xchg
cmp
in
lock
sub
out
imul
or
or
mov
sub
sbb
push
xor
(bad)
sbb
or
sub
aas
sbb
or
(bad)
lea
or
in
or
in
pop
xchg
mov
stos
sbb
dec
jl
or
or
scas
fcomi
(bad)
jmp
lahf
mul
jmp
xor
jbe
(bad)
fwait
jg
cli
pop
(bad)
loop
(bad)
pop
xchg
loop
daa
in
jp
and
imul
xor
fcomp
mov
jle
sahf
enter
or
jne
mov
(bad)
sub
fnsave
mov
test
addr16
popa
pop
cli
fidivr
and
sub
cmps
or
jno
repnz
test
outs
cmp
mov
ficomp
scas
(bad)
pop
retf
jmp
das
jnp
push
xchg
xor
dec
retf
jmp
imul
stos
cli
iret
fld
pop
int
pop
sub
call
push
pop
(bad)
scas
icebp
stos
lods
mov
add
out
jmp
or
push
jl
dec
adc
jno
mov
and
sbb
(bad)
ja
retf
cli
shr
fistp
dec
out
hlt
(bad)
or
pusha
mov
(bad)
jmp
inc
aam
fbld
retf
cs
dec
cmp
cmp
cli
mov
stos
addr16
jmp
cmp
cli
fcmovnb
sbb
pop
out
cmp
std
push
daa
pop
aaa
sahf
push
adc
jne
div
mov
mov
and
sti
push
push
inc
ja
ins
and
mov
sub
fld
std
xlat
push
adc
mov
xchg
jmp
push
xchg
mov
push
sub
mov
adc
stos
dec
xchg
pop
sbb
daa
inc
xor
xor
call
mov
fwait
jmp
or
jg
adc
mov
mov
cmps
stos
jno
into
es
jecxz
cmp
retf
xchg
xchg
jp
xchg
push
fwait
or
retf
mov
sti
jae
sbb
sbb
aas
xor
gs
mov
sbb
(bad)
mov
jp
in
ja
daa
jno
loop
stc
dec
push
push
cmps
dec
jo
lds
cmps
jnp
jle
cli
mov
push
adc
std
xchg
pop
and
ret
pop
push
pop
push
mov
outs
pop
inc
mov
cmp
xchg
clc
adc
push
mul
not
jp
inc
idiv
outs
and
push
imul
sbb
ja
inc
repnz
sbb
loop
gs
dec
fwait
push
dec
add
jns
mov
jae
ficomp
pop
sub
xchg
jmp
es
stos
jp
xchg
out
jnp
stos
(bad)
fisub
retf
pop
ficomp
pop
jne
xor
jmp
ficom
loope
mov
adc
push
sti
fiadd
dec
imul
jmp
sub
addr16
test
stos
or
sbb
dec
mov
cmp
push
sar
mov
leave
rcl
dec
es
add
ss
or
les
xchg
out
mov
push
fs
retf
(bad)
and
mov
push
xlat
sub
and
mov
dec
push
mov
dec
popa
adc
movs
push
fmul
stos
mov
inc
pop
scas
mov
inc
fwait
nop
mov
addr16
stc
sub
ret
jbe
fstp
lock
mov
stos
dec
xlat
push
stos
mov
jne
sub
push
stos
and
xor
dec
imul
jmp
(bad)
dec
je
imul
test
scas
idiv
in
pop
or
cmp
xchg
mov
retf
xor
dec
(bad)
enter
test
mov
jge
and
sub
pop
sbb
cmp
(bad)
xlat
fldcw
pop
mov
dec
mov
inc
jmp
or
xchg
cld
setne
outs
mov
js
ret
pop
mov
inc
bound
mov
jmp
push
movs
cmp
int3
fisttp
int
jnp
cmp
xchg
inc
cmps
jno
clc
retf
jmp
push
xor
fwait
mov
and
ror
ja
outs
inc
dec
call
inc
adc
and
out
fucomp
or
(bad)
pop
jmp
nop
sub
test
cli
cmps
arpl
retf
jmp
shr
test
push
push
dec
inc
pop
mov
cdq
(bad)
xlat
outs
ret
jmp
or
inc
nop
add
mov
dec
push
or
(bad)
jno
push
jmp
retf
sub
sub
call
xor
xchg
mov
jmp
out
leave
push
or
or
push
stos
test
movs
outs
test
(bad)
mov
xor
add
xlat
aam
adc
jecxz
cmp
pop
push
xchg
popf
cli
or
cmp
mov
xchg
dec
dec
adc
fwait
into
cmp
jecxz
sbb
mov
retf
stos
xchg
shl
or
sub
test
add
push
cmp
jg
lahf
sub
call
cli
sub
jnp
xchg
(bad)
or
or
xchg
xor
jbe
pop
lods
ds
lea
sti
ficomp
fisub
popf
loop
and
pop
ss
cmp
inc
push
mov
xor
inc
jmp
rcl
xor
pop
ficom
les
jge
in
dec
cli
adc
pop
pop
push
sbb
mov
or
sti
ss
adc
pop
push
fiadd
xchg
mov
pop
call
mov
imul
dec
stos
imul
xor
push
jo
shl
sub
jmp
(bad)
fisubr
mov
adc
dec
sub
push
push
mov
ret
fcmovne
das
std
mov
sub
stos
jnp
mov
in
pop
outs
clc
call
lea
es
cmps
outs
mov
sub
mov
retf
neg
inc
mov
cld
retf
dec
add
call
mov
push
pop
jmp
push
fisubr
inc
cli
ins
addr16
push
fistp
sub
(bad)
fcmovb
in
cld
sub
aam
mov
aam
mov
pop
push
cmp
fs
stos
or
push
leave
jmp
shl
or
or
pop
xchg
cmp
aaa
lods
leave
xlat
retf
sti
cs
mov
imul
ss
cmp
int
les
fwait
fwait
retf
sub
jmp
pop
fisttp
cmp
xchg
sbb
sbb
cmp
sub
xchg
mov
test
xchg
xor
jge
cmp
dec
das
jmp
in
outs
call
fadd
stos
jno
neg
mov
inc
enter
sbb
enter
mov
jns
push
mov
jno
mov
sbb
out
cmp
daa
fs
ja
pop
int
xlat
jnp
test
pusha
push
aam
cmp
pop
jmp
popa
frstor
pop
popf
into
loopne
lods
addr16
pushf
ret
sub
cmps
dec
adc
out
push
adc
sti
sub
dec
lahf
lock
add
dec
stos
mov
inc
sub
out
push
in
(bad)
xor
retf
push
sub
cli
fwait
mov
or
cmp
call
sub
jmp
pop
jp
inc
test
pop
(bad)
and
pop
push
or
call
dec
dec
push
inc
mov
cli
stos
and
ds
mov
dec
into
sti
sbb
stos
stos
mov
push
push
sub
pop
pop
jp
out
out
or
add
aaa
test
mov
cld
std
push
loop
or
addr16
fidivr
aam
addr16
js
fimul
add
push
pop
outs
outs
mov
adc
loope
and
mov
mov
mov
pop
push
dec
pop
dec
cmp
mov
cld
xchg
shr
out
cmp
(bad)
movs
(bad)
popa
addr16
sbb
aam
scas
out
push
push
mov
test
or
xor
push
xlat
mov
sbb
repz
stos
or
jnp
cdq
mov
gs
adc
pop
xchg
push
pop
sbb
add
cmp
cli
adc
or
xlat
xlat
mov
stos
or
mov
(bad)
out
ss
arpl
sbb
xor
sub
(bad)
cmp
daa
cli
xor
sbb
daa
jmp
call
push
nop
pop
mov
cmps
mov
mov
xchg
pop
cmps
stc
cli
call
js
fadd
jnp
iret
fistp
out
neg
ins
push
shl
sub
out
mov
inc
pop
pop
mov
aad
mov
or
xor
jmp
test
sub
loopne
push
jmp
push
imul
out
xlat
push
out
mov
ds
sbb
fidiv
sub
pop
rcr
and
stos
cli
stos
out
cmp
daa
xor
xchg
xlat
(bad)
jmp
pop
push
out
xchg
sub
pop
jno
data16
addr16
stos
call
sub
jp
cmc
xor
dec
push
sbb
xchg
imul
mov
(bad)
xchg
scas
or
jns
jp
dec
xchg
call
jbe
scas
int
add
cmps
pop
out
cmp
pop
xchg
fnstenv
out
inc
pop
addr16
imul
fs
div
cmp
aas
icebp
leave
shr
cmps
push
pop
mov
cdq
sahf
fwait
cmps
mov
shr
jmp
int
jle
cmp
mov
enter
dec
(bad)
mov
jmp
or
ror
sti
clc
sti
push
mov
or
lods
popa
dec
imul
jp
lods
inc
retf
jp
fimul
scas
sti
cli
dec
test
or
rcl
or
push
dec
mov
cwde
mov
iret
popa
stos
leave
xchg
popa
cmp
cmp
mov
dec
xor
or
rol
addr16
sub
mul
mov
pop
dec
push
out
out
push
push
inc
jl
cmp
jp
bound
inc
lds
test
aaa
push
fidivr
ds
mov
xchg
ins
pop
stos
test
jbe
cli
push
cli
test
loope
or
cmp
xchg
pop
(bad)
bound
xor
jmp
cli
adc
push
retf
(bad)
(bad)
xor
add
outs
mov
imul
lods
mov
mov
or
or
inc
jp
pop
test
test
test
cli
ss
(bad)
(bad)
aam
push
pop
sub
aaa
div
jns
nop
test
lds
ins
xor
cli
sub
rcr
jle
call
mov
jo
jbe
adc
fxch
inc
retf
retf
xor
jmp
sar
push
xchg
sub
push
sbb
fimul
xlat
stos
rcr
add
inc
out
jmp
jmp
pop
pop
scas
nop
jp
mov
gs
leave
mov
xchg
jmp
adc
sub
sbb
mov
gs
mov
fcomp
jmp
out
cwde
out
cmc
ss
loope
jmp
call
cdq
les
mov
jp
mov
mov
(bad)
push
push
lds
cmps
xor
push
push
hlt
ja
add
inc
push
ins
mov
(bad)
out
cli
repnz
xchg
pushf
pop
dec
push
scas
jl
pop
pop
jbe
imul
or
or
or
repnz
cld
div
daa
push
jl
pop
xchg
movs
jp
sub
push
mov
pop
and
jne
sbb
lods
pop
inc
push
jmp
jl
mov
cli
jnp
stos
(bad)
cmps
daa
ret
data16
sbb
pop
les
sub
mov
(bad)
out
fwait
xchg
mov
or
in
movs
xchg
jmp
xor
(bad)
data16
cmp
fidivr
mov
or
ficom
or
out
cli
in
sbb
jecxz
jp
push
or
movs
lods
add
into
jmp
sbb
icebp
popf
out
(bad)
(bad)
fidivr
jp
mov
imul
leave
xlat
aam
mov
fiadd
pop
(bad)
cmp
or
jl
ins
stos
fidivr
test
dec
(bad)
enter
mov
ror
imul
push
scas
mov
cli
or
adc
mov
stc
sbb
push
adc
sub
sbb
xor
xor
dec
mov
push
mov
out
mov
out
shl
cmp
int3
adc
das
xlat
jl
out
lods
mov
in
shl
sbb
mov
push
bnd
sbb
iret
pop
retf
mov
fidivr
jge
pop
fcmovnb
iret
adc
sub
inc
pop
xor
sub
cmp
or
pop
jnp
dec
jnp
jg
fimul
mov
add
ins
ja
pushf
mov
sbb
push
fwait
xor
rcr
out
fnstenv
push
cmp
or
pop
mov
lods
mov
mov
(bad)
mov
in
dec
xor
imul
cmp
cdq
xchg
sub
mov
enter
sub
mov
inc
sub
ja
mov
movs
mov
call
ror
(bad)
int3
cdq
sub
hlt
mov
push
pop
call
sbb
mov
jne
jmp
cwde
mov
ret
cs
mov
std
jle
add
xor
sahf
dec
imul
inc
lahf
fnsave
test
(bad)
out
xchg
mov
cmp
jb
add
outs
jmp
retf
leave
int
fwait
cdq
stos
test
mov
push
dec
pop
mov
pop
imul
and
daa
mov
ret
into
out
cmps
scas
out
jmp
test
lahf
in
sbb
dec
ins
fsubr
inc
pop
push
mov
cmp
es
std
mov
mov
sbb
int
cld
dec
ds
pop
stos
jp
retfw
cmc
xchg
pop
retf
fidivr
or
jmp
pop
lea
cs
es
fimul
mov
(bad)
cmps
push
inc
push
(bad)
push
(bad)
add
(bad)
adc
or
xchg
pop
retf
daa
and
mov
xlat
xor
add
cli
jmp
test
add
sub
in
dec
leave
and
and
sbb
adc
add
cmp
jp
xchg
inc
fistp
push
mov
push
fimul
retf
retf
and
or
mov
add
jp
call
iret
sbb
(bad)
enter
enter
imul
jge
adc
push
scas
jge
cmp
add
xchg
retf
call
or
(bad)
inc
pop
or
dec
(bad)
mov
imul
in
enter
inc
sub
shr
test
inc
in
(bad)
mov
stos
xor
push
aad
(bad)
xchg
adc
sbb
cmp
or
push
adc
mov
push
push
lahf
test
test
and
inc
and
fdivr
xchg
push
leave
out
mov
ja
add
das
sbb
and
movs
adc
or
mov
dec
jle
test
push
aam
adc
scas
adc
sub
and
cmp
xchg
gs
mov
push
dec
cdq
ja
daa
mov
pop
pop
loope
popw
icebp
jb
mov
and
lods
ret
(bad)
pop
mov
mov
mov
sub
sbb
out
mov
in
rol
mov
push
fisub
(bad)
std
rcl
mov
push
std
xor
lahf
outs
(bad)
xor
imul
test
cs
retf
or
pop
mov
cs
xchg
dec
loope
call
cld
std
(bad)
pop
gs
jl
and
call
es
neg
jb
cmc
fild
retf
cmp
push
and
outs
xor
imul
lea
mov
aad
sti
cmp
add
in
loopne
bnd
jnp
add
call
retf
fcmovb
add
sysret
rcl
call
sub
fwait
les
outs
aas
(bad)
xchg
mov
nop
mov
mov
adc
je
xor
fistp
scas
call
call
out
(bad)
(bad)
out
pop
and
out
xor
add
mov
mov
ret
push
mov
adc
bound
pop
inc
jmp
or
cmp
mov
addr16
bound
cs
dec
pop
lock
jbe
push
mov
(bad)
hlt
(bad)
and
sti
cdq
sub
xchg
mov
mov
adc
imul
sub
mov
sbb
sub
jmp
lods
push
inc
cwde
mov
or
retf
(bad)
cmp
mov
pop
cli
sub
inc
mov
out
stos
jg
mov
cmp
rcl
jmp
inc
add
cli
xor
and
dec
mov
pop
mov
enter
adc
daa
and
es
push
movs
pop
lods
cmps
cli
mov
daa
mov
mov
dec
adc
dec
retf
sub
das
jnp
test
imul
mov
add
in
or
cmc
push
data16
aam
sub
adc
sbb
popa
mov
pop
mov
inc
sub
sbb
pop
dec
push
sbb
xchg
push
xchg
dec
int3
pop
pop
lods
mov
stos
(bad)
jno
mov
xchg
xchg
cli
adc
out
stos
jle
retf
mov
or
sbb
ficomp
cmc
data16
int3
rcr
or
inc
stos
rcr
cmp
and
mov
ror
test
imul
imul
aaa
test
das
jne
jecxz
pop
scas
cmp
push
jnp
mov
jg
scas
sub
(bad)
mov
sbb
or
dec
stos
push
outs
jp
pop
add
mov
pop
jp
add
fnsetpm(287
hlt
stc
adc
or
fs
pop
xchg
retf
dec
data16
je
mov
pop
ds
or
retf
sti
jmp
retf
fcmove
dec
das
push
fidivr
inc
and
lahf
test
or
shl
cli
add
cmp
push
jmp
in
dec
dec
aas
mov
cmp
fwait
mov
inc
out
(bad)
fisubr
sbb
push
mov
pop
pop
sbb
push
jp
xor
jl
fsub
aas
push
mov
mov
sbb
jmp
imul
mov
add
xor
scas
xchg
cmp
or
cmc
and
mov
jl
jp
mov
push
shl
movs
xlat
pop
push
push
xor
add
ds
fimul
pop
push
mov
mov
repnz
(bad)
retf
in
or
or
enter
adc
call
ja
mov
pop
cmp
mov
fnsave
fcom
adc
adc
pushf
cmp
retf
(bad)
mov
cli
inc
imul
xchg
outs
dec
or
dec
mov
lods
je
lock
mov
imul
sti
stos
and
int
stc
and
xor
das
arpl
ds
into
ret
mov
scas
jnp
fld
ficomp
daa
and
xchg
cmp
mov
bound
jnp
int
mov
pusha
movs
jnp
retf
out
xor
mov
sti
pop
and
mov
inc
inc
inc
push
out
idiv
call
or
sbb
push
push
clc
sub
pop
(bad)
dec
pop
aaa
sub
jmp
fbld
je
jl
xchg
cmp
inc
test
call
mov
gs
pop
sbb
jmp
push
pop
adc
push
leave
adc
test
pop
stos
popf
and
ins
dec
fimul
(bad)
mov
fcomp
sti
imul
into
ror
cmp
sub
xor
jnp
push
jle
dec
lea
call
inc
ss
xor
lea
cmp
inc
and
movs
sub
jg
push
pop
sahf
stos
in
stos
xlat
mov
lea
mov
dec
sti
in
fmul
sub
mov
pop
fidiv
test
pop
dec
mov
div
pop
sbb
sub
ja
mov
mov
cmp
imul
lock
lds
adc
cmp
into
outs
and
lea
jmp
stos
mov
cmp
aas
sub
adc
dec
mov
retf
aam
les
stos
shl
cmps
mov
aaa
or
scas
xor
adc
mov
ds
sti
call
imul
cmp
cmp
jns
jo
dec
jge
lahf
setno
mov
cmp
aas
xchg
js
pop
ret
xchg
and
pop
lods
inc
and
or
xchg
cmps
pop
aas
dec
retf
call
stos
mov
adc
mov
hlt
mov
test
mov
inc
pop
(bad)
(bad)
out
pop
push
xchg
jbe
push
popf
out
push
xor
rcl
mov
jbe
inc
mov
cmc
push
mov
jns
aaa
push
mov
jne
jne
fs
in
idiv
xchg
cmp
pop
lahf
jne
or
shl
xor
inc
sbb
mov
ins
push
std
cmp
sahf
xor
ss
scas
xor
cmc
mov
sub
xchg
icebp
xchg
jbe
sbb
jbe
loopne
or
xchg
jbe
cmc
xchg
mov
jp
push
adc
mov
dec
mov
add
arpl
nop
jo
jne
pusha
jb
add
cs
div
cmc
cs
mov
retf
mov
push
xor
(bad)
push
lock
into
mov
push
mov
xor
mov
cli
(bad)
jecxz
mov
jle
push
hlt
and
and
popf
cmp
jbe
jmp
xor
pop
dec
xor
and
pop
mov
pop
into
retf
mov
xchg
lock
mov
lods
or
aam
(bad)
mov
mov
and
push
and
xchg
retf
retf
cmp
jl
test
repz
mov
jmp
fisubr
dec
aam
xchg
(bad)
jmp
test
test
jbe
outs
imul
xor
rcr
addr16
adc
(bad)
push
jge
lea
cmp
push
sub
pop
gs
adc
inc
mov
xchg
dec
jge
mov
fidivr
int
test
lea
ja
push
dec
cmp
fwait
in
jne
fisubr
dec
aas
jge
mov
loope
inc
xlat
leave
outs
gs
dec
nop
dec
push
and
(bad)
or
mov
sbb
cwde
add
out
mov
ins
outs
push
xchg
out
or
adc
add
sbb
xchg
lea
sub
xchg
sub
pop
xchg
jae
aaa
dec
push
push
jb
xlat
in
in
jnp
(bad)
sbb
jo
fwait
add
or
ins
mov
xlat
leave
xchg
mov
leave
aam
and
pop
push
test
mov
repz
(bad)
fsubr
sbb
fisubr
pop
cdq
xor
out
scas
jge
leave
js
xlat
leave
mov
test
ja
shr
les
or
ds
jae
mov
ins
daa
sbb
aas
mov
jbe
ja
(bad)
(bad)
xlat
aad
int
aad
test
inc
push
sti
(bad)
repz
push
inc
mov
cld
or
(bad)
(bad)
ss
jge
aad
bound
(bad)
sbb
push
xchg
pop
cli
dec
aam
(bad)
(bad)
jge
loop
(bad)
xchg
jg
cmp
fidiv
inc
cmp
fstp
retf
sbb
xor
cdq
pop
sahf
adc
les
sub
ret
push
xor
jle
xor
dec
sub
(bad)
mov
pop
push
jnp
fcmovnbe
jg
mov
sti
lea
sti
cmp
push
cmc
or
dec
cdq
add
les
(bad)
mov
cmp
cli
sub
fwait
ins
jp
(bad)
xor
push
aas
push
(bad)
xor
lea
sbb
pop
push
sti
sbb
test
cdq
jnp
pop
mov
sti
jno
sbb
xchg
or
push
mov
jno
push
sbb
xchg
jg
fwait
imul
mov
cmp
pop
cmp
jge
lods
sub
ds
dec
lods
sti
jge
xor
mov
fild
(bad)
fldcw
stos
sub
pop
inc
stos
lods
fidivr
push
inc
dec
mov
mov
into
cmp
push
mov
push
push
add
pop
cmp
push
pop
sub
in
inc
and
std
aaa
mov
mov
push
cmp
mov
lahf
lahf
cld
mov
pop
mov
cwde
enterw
fistp
ins
mov
fsubr
cmp
lock
gs
popa
ja
fbld
popa
into
sub
pop
enter
retf
fadd
fmul
fadd
pop
dec
pop
dec
sbb
(bad)
retf
xchg
lds
dec
rcr
pop
dec
pop
dec
fcmove
fcomp
jne
jne
sub
movs
inc
aaa
xor
retf
pop
inc
lahf
inc
lahf
inc
pop
pop
adc
rcr
dec
pop
femms
(bad)
retf
fmul
dec
pop
mov
mov
fwait
jnp
retf
add
sbb
rcr
shr
sub
call
fild
pop
or
aas
mov
ficomp
sbb
pop
dec
(bad)
pusha
ret
add
jl
out
int
push
pop
(bad)
push
retf
fmul
fmul
fcmovne
fcmovne
pop
dec
pop
dec
pop
dec
int3
fistp
(bad)
and
add
jmp
mov
xchg
inc
fldenv
fisttp
fiadd
xsha1
fld
fld
mov
test
les
cwde
fild
xchg
adc
stos
nop
pop
inc
call
out
out
inc
pop
stos
xchg
xchg
xlat
rcr
leave
jecxz
out
push
psubusb
xlat
inc
mov
cmp
dec
(bad)
(bad)
call
addr16
and
xor
retf
pop
xor
mov
pushf
fisttp
inc
pop
enter
xor
xlat
loopne
or
retf
fadd
(bad)
sbb
mov
out
fcomi
inc
pop
cmp
sub
push
je
mov
inc
iret
(bad)
pusha
repnz
jl
xor
dec
aaa
add
add
mov
mov
test
jle
test
iret
mov
inc
dec
aas
iret
cmps
leave
mov
enter
cwde
mov
mov
mov
add
pop
test
dec
jns
pop
pop
mov
mov
mov
or
cld
mov
addr16
cmp
inc
ja
out
mov
int3
jb
mov
pop
out
or
addr16
xor
dec
ja
ja
out
not
lahf
les
test
cmp
neg
cwde
mul
push
pop
pusha
push
jg
aaa
mov
les
ja
mov
iret
dec
dec
cmp
movs
sub
push
shl
sbb
mov
loopne
inc
aaa
inc
mov
add
enter
scas
jl
arpl
or
cmp
loopne
fs
aas
or
cmp
les
inc
dec
or
add
fiadd
ja
ja
lahf
add
cmp
(bad)
idiv
lahf
pusha
mov
out
scas
aaa
dec
test
dec
xor
mov
jns
inc
cld
iret
ja
lahf
in
mov
loopne
mov
push
dec
leave
ja
push
adc
div
mov
arpl
ja
retf
xchg
cmp
les
inc
dec
or
add
lock
mov
inc
push
mov
dec
sub
aam
iret
outs
inc
sahf
adc
das
jl
sti
sub
idiv
sbb
inc
iret
mov
lds
inc
pop
pop
sub
adc
mov
cmp
pop
sti
movs
xchg
into
sbb
pop
fbld
cmp
repnz
(bad)
sub
iret
int3
test
mov
adc
push
sbb
xchg
jb
fdivr
mov
cmc
xchg
lods
xchg
xlat
pop
pop
jb
fdivr
and
iret
pop
(bad)
pushf
lods
rcr
adc
call
cmc
xchg
mov
scas
in
mov
xlat
pop
adc
cmp
mov
jb
inc
fstp
and
fst
sub
in
cmp
pop
mov
xchg
adc
or
pop
adc
mov
ja
push
push
xor
xor
ja
js
jae
jo
adc
push
sbb
das
mov
mov
jmp
jmp
inc
push
aam
sub
into
dec
jb
mov
pop
sub
cmp
jb
imul
cld
push
xor
test
lds
cmp
outs
xor
sbb
stos
xchg
fidivr
jl
xor
mov
das
sub
shr
clc
jg
retf
loopne
cwde
xor
lods
stos
sbb
xor
mov
jmp
inc
lods
mov
inc
cmp
inc
pushf
mov
cwde
fisubr
pushf
ds
push
add
jmp
inc
push
pop
loop
int3
es
cmps
neg
lock
shl
popa
mov
push
cmp
lods
dec
dec
mov
and
retf
mov
in
es
dec
push
fisubr
inc
iret
jp
xchg
pusha
dec
in
out
mov
mov
mov
xchg
cmp
sub
xlat
dec
lock
pop
inc
jg
or
pop
adc
out
(bad)
mov
stos
adc
ret
push
fstp
mov
mov
lods
pop
push
mov
int3
inc
inc
xchg
sbb
push
std
xor
int3
stos
dec
rcr
repnz
jl
pop
dec
mov
das
mov
ret
cli
lods
hlt
inc
sub
in
pop
sbb
and
cmp
fbld
aas
lods
push
dec
jae
pop
retf
and
add
lods
or
lods
hlt
mov
pop
mov
cli
and
cmp
shl
mov
xor
fistp
cld
jmp
cwde
jb
fwait
mov
stos
xchg
inc
mov
out
leave
cmp
repnz
iret
pop
push
mov
popa
push
retf
add
in
data16
push
dec
inc
cmp
sbb
cmp
pop
sar
dec
push
stos
fmul
in
pop
pop
or
popf
popf
mov
icebp
(bad)
cmp
loope
mov
inc
mov
push
out
bound
int3
ds
mov
sahf
jo
cdq
inc
jns
cmp
fimul
jge
pop
ja
mov
inc
imul
sahf
stos
push
mov
xchg
cmp
cmp
push
jns
pop
outs
cmp
leave
push
fcomp
pop
jp
jp
cmp
jnp
cli
mov
pop
sub
cmp
mov
pop
repnz
(bad)
sbb
fidivr
pop
outs
neg
pop
mov
scas
fnstenv
pop
std
mov
ja
fcomp
mov
jns
pop
push
mov
bnd
std
cs
stc
pop
stc
cmp
mov
int
jl
pop
cmp
jae
cmp
xor
jno
xchg
test
aad
test
std
or
mov
mov
jne
or
sbb
pop
cmp
loopne
leave
jno
pop
cs
xor
jbe
xor
add
int
cmp
mov
cmp
cmp
rcr
aas
out
mov
jle
stos
push
push
jae
adc
mov
outs
bound
fidivr
cmp
and
lods
stos
int
addr16
stos
lods
stos
dec
push
lods
fldcw
sub
stos
ret
push
adc
cmp
jmp
std
in
xor
jmp
dec
push
push
sar
pop
ins
in
jmp
jmp
(bad)
imul
mov
cmp
out
jo
adc
ins
cli
xor
cmp
das
push
fisubr
mov
jp
pop
dec
mov
mov
imul
push
ret
sub
pop
scas
mov
jns
imul
cli
mov
fnsave
push
mov
jbe
push
xchg
jg
cli
xchg
mov
(bad)
adc
imul
jmp
aas
push
sar
sub
inc
hlt
adc
fwait
dec
imul
cmp
xor
fldcw
mov
push
push
pop
add
xchg
xor
in
cli
xor
int3
sbb
mov
loope
push
shl
shr
ss
lahf
js
adc
je
pushf
cli
in
sbb
cli
cmp
xor
clc
mov
fiadd
jp
ss
adc
lahf
and
lahf
int
cmp
pop
loope
or
push
xchg
jl
pop
or
push
sar
or
and
rcl
imul
ins
sbb
and
adc
inc
jne
mov
pop
adc
xor
pop
shl
lods
ins
mov
cld
rcr
push
mov
pop
cdq
repz
mov
int
clc
sahf
xchg
xchg
sbb
mov
ins
in
scas
adc
ret
daa
push
sub
aad
push
pop
fmul
pop
pop
fcomp
and
(bad)
xchg
js
sbb
cmp
lods
xchg
sbb
or
icebp
push
dec
dec
cmp
xor
xor
sub
mov
or
rcl
sub
clc
mov
cli
(bad)
in
jl
sub
add
cld
pop
clc
mov
jp
sbb
ja
xor
add
(bad)
js
sub
jl
js
jl
js
fisubr
out
push
cmp
pop
xchg
rcl
mov
(bad)
xchg
xchg
mov
pop
pop
(bad)
cmp
js
mov
loop
rcl
xlat
mov
popa
jl
retf
ss
loope
pop
or
mov
nop
xchg
mov
fcmovbe
inc
jl
pop
sti
imul
pop
(bad)
cmp
jle
xchg
hlt
xlat
js
add
mov
jmp
ins
bound
dec
pop
lods
ins
xchg
sub
xchg
jo
sub
mov
out
sbb
fild
cmp
rcl
loope
js
pop
push
xor
ret
jl
xchg
jb
retf
ret
push
aad
xor
arpl
pop
xor
dec
ret
retf
jb
leave
pop
push
cmp
std
loopne
stos
inc
mov
mov
and
rol
push
pop
cdq
bound
and
cmp
fist
(bad)
mov
inc
cmp
jge
loop
mov
ret
cmp
std
pop
stc
add
pop
std
in
bound
and
pop
ins
ret
popf
cmp
sbb
mov
pop
stos
shl
mov
fnsave
mov
mov
sbb
ret
int3
out
stos
xor
and
add
lock
mov
sbb
inc
test
cmp
sbb
stos
std
lods
mov
ins
addr16
inc
gs
ss
std
pop
fld
jge
stc
out
mov
ffree
lahf
out
pop
into
shr
stos
daa
mov
test
out
mov
cwde
push
xor
sbb
dec
ss
(bad)
mov
jmp
inc
es
ins
out
int
cmps
sub
int
adc
(bad)
lea
sbb
push
mov
jmp
dec
cmps
shr
push
or
cmp
dec
fbld
and
inc
mov
inc
mov
repnz
or
jmp
inc
sub
setl
push
jmp
adc
sbb
mov
push
test
std
in
mov
sbb
sub
movs
mov
shl
pop
inc
cmp
inc
mov
aas
mov
and
mov
push
test
lods
(bad)
ins
jge
xchg
cmp
(bad)
call
and
pop
call
xor
data16
fist
pop
scas
or
fwait
push
dec
fwait
in
lods
(bad)
pop
pop
stc
lock
mov
in
mov
call
fadd
xchg
adc
jp
cwde
fwait
and
stos
in
adc
fwait
das
push
mov
sbb
mov
xchg
(bad)
push
test
popf
ret
inc
xchg
loope
jg
nop
in
add
aas
inc
push
js
push
jae
sbb
ss
enter
push
div
add
mov
or
or
mov
sbb
and
adc
mov
inc
mov
xchg
push
gs
jl
sub
pushf
ds
dec
push
dec
dec
stos
int
int
int
int
dec
dec
dec
push
dec
dec
stos
int
int
dec
dec
dec
sub
retf
int
int
dec
dec
dec
push
dec
dec
sub
retf
int
int
dec
dec
dec
push
retf
dec
dec
dec
push
dec
dec
stos
int
int
int
int
sbb
push
arpl
dec
retf
test
mov
frstor
and
push
mov
scas
test
sub
and
test
test
iret
xor
cmp
fmul
scas
test
test
int
ds
and
and
fimul
mov
movaps
stos
mov
movs
mov
sub
das
sub
test
movs
cwde
mov
ds
cmp
retf
int
int3
(bad)
and
sub
dec
cmp
mov
and
stos
test
test
mov
push
sub
movs
test
adc
stc
arpl
les
and
dec
in
lds
and
xchg
fs
adc
inc
es
stos
enter
push
popf
dec
scas
mov
sub
dec
arpl
int
push
dec
dec
push
addr16
sbb
or
or
pop
es
inc
or
aas
pop
aas
pop
call
and
or
adc
dec
call
jmp
inc
push
push
adc
dec
adc
iret
xlat
lahf
or
jae
and
(bad)
int
xchg
aas
jg
sbb
sbb
push
or
pop
ror
push
dec
inc
adc
or
mov
jge
pop
dec
push
jg
add
pop
(bad)
mov
aas
push
push
push
push
and
call
sub
cmp
inc
sbb
fadd
mov
call
mov
push
mov
inc
xor
out
rcr
push
imul
test
arpl
mov
push
arpl
and
jns
push
mov
sbb
fdivr
pushf
repz
sbb
fdivr
pushf
repz
jmp
dec
inc
inc
pushf
xchg
pushf
jbe
xchg
xchg
mov
fdiv
pushf
popf
test
test
jns
ds
lock
mov
xchg
mov
sub
cmp
sbb
push
lds
fcmovb
mov
and
sar
xchg
mov
pusha
jno
mov
mov
sbb
jbe
xchg
xchg
in
mov
push
xrelease
pushf
xor
push
or
sbb
jge
sub
cmps
jmp
or
ins
addr16
or
ins
dec
cmp
mov
sub
movs
je
das
nop
xchg
or
and
mov
mov
ss
imul
jmp
icebp
inc
std
fs
shr
int3
in
ret
rol
xor
fdivr
ja
int3
movs
sbb
pop
cmp
mov
mov
into
mov
imul
(bad)
cwde
mov
int
cmp
ud2
mov
cmp
cwde
mov
and
pop
push
pop
cmp
mov
out
sbb
scas
(bad)
sti
pop
sbb
mov
fistp
cmp
pop
ins
fcmovne
fmul
fucomp
fisubr
push
xor
jg
stos
mov
enter
scas
pop
sbb
or
retf
pop
lahf
stos
fnsave
sar
or
dec
enter
mov
fs
dec
cld
in
mov
sub
jnp
mov
lods
ficomp
mov
pop
(bad)
fnstcw
dec
or
jge
(bad)
mov
or
call
mov
cmp
xor
sbb
pop
stc
jnp
cli
cmp
pop
sbb
or
jge
call
pop
fidiv
or
fcomp
mov
jmp
xor
leave
les
(bad)
xor
sbb
mov
mov
call
cmp
mov
call
pop
dec
or
call
sahf
test
or
pop
pop
and
lea
fwait
jmp
stc
cs
pop
sti
imul
stos
dec
retf
cld
jmp
xchg
in
add
stc
or
and
mov
pushf
mov
inc
pop
dec
bound
imul
nop
mov
arpl
aas
xor
add
leave
and
adc
jno
or
inc
mul
mov
xchg
and
data16
dec
push
and
not
xchg
push
or
mov
(bad)
idiv
dec
adc
not
xchg
(bad)
out
and
push
xor
push
rol
rcl
pusha
push
loopne
xor
ud2
je
pop
dec
or
add
sbb
push
pop
test
sub
adc
xchg
movs
arpl
add
data16
or
int3
popf
(bad)
pop
cmp
adc
xor
xchg
es
add
ror
xor
mul
xor
stos
hlt
nop
xchg
and
nop
neg
and
push
arpl
adc
pusha
cmps
(bad)
xchg
xchg
cs
hlt
scas
push
cli
std
shl
cwde
rcl
ins
push
jmp
sbb
out
hlt
or
sub
in
xor
inc
push
sti
adc
mov
and
mov
out
xchg
cld
mov
(bad)
adc
call
in
stc
or
sti
cmc
or
pop
das
in
aaa
jns
and
test
shl
imul
rcr
fnsave
adc
adc
verw
shr
mov
push
mov
adc
fnsave
xchg
cmps
mov
lds
fmul
add
adc
rcr
jmp
jmp
int3
xor
cmp
cld
sar
push
or
popa
ins
mov
(bad)
mov
lds
push
inc
and
xchg
mov
fwait
sub
sub
adc
xor
cmp
jnp
loop
(bad)
std
mov
fwait
add
and
pop
mov
stos
xor
push
loope
int3
fstp
ins
(bad)
cld
pop
cmp
push
mov
mov
retf
fcomp
mov
jmp
pusha
inc
sbb
dec
ret
mov
retf
cs
cmp
or
lods
dec
sub
dec
scas
arpl
into
mov
sub
jmp
popf
mov
dec
enter
into
retf
add
or
imul
fisubr
push
mov
xlat
gs
mov
sti
pop
scas
cdq
stos
lock
cmps
lods
pushf
and
adc
scas
aas
push
sahf
mov
cmp
sbb
push
or
dec
or
cs
test
pop
inc
movs
inc
cmp
or
sbb
or
jecxz
stos
jmp
mov
cs
fmul
sub
lods
rol
lds
iret
dec
mov
inc
fstp
cmp
psubusw
sbb
pushf
movs
mov
inc
mov
mov
lods
xor
sub
retf
inc
mov
mov
in
inc
or
xor
mov
test
int
mov
mov
sub
pop
mov
inc
repnz
mov
pop
popa
retf
les
sub
(bad)
imul
enter
sbb
push
push
test
in
jle
xchg
or
dec
pop
xchg
fwait
and
sub
sub
add
fwait
ret
sti
int3
xor
jp
cmps
in
sub
and
dec
inc
sub
dec
cmp
dec
sub
cmp
repnz
jmp
cmps
sar
dec
inc
adc
in
fistp
repnz
mov
out
imul
cmp
dec
push
dec
dec
cmp
cmp
out
jbe
xor
out
mov
sbb
not
add
pop
jg
dec
pop
jp
jmp
xor
fs
popf
movs
sub
(bad)
call
pop
in
mov
mov
retf
sub
and
push
or
fdivr
add
imul
sub
fwait
retf
dec
cld
jp
dec
aas
cli
jae
in
hlt
ret
ss
es
dec
int
xor
sar
int3
add
rcl
sub
fsub
sbb
cmp
dec
mov
aaa
pop
inc
xor
popf
jmp
and
call
add
cli
sub
sti
mov
mov
mov
push
js
jbe
out
(bad)
cmc
out
xchg
ss
hlt
not
jbe
xchg
mov
aam
and
push
gs
sub
je
inc
pop
pop
xlat
clc
sub
push
stc
xor
mov
ret
or
push
push
mov
sbb
(bad)
push
aaa
and
fild
(bad)
hlt
rol
jecxz
mov
retf
sub
and
pop
mov
inc
lahf
shl
dec
jge
repz
test
push
(bad)
jbe
push
dec
inc
cmp
aam
xchg
mov
inc
mov
in
mov
loop
push
sbb
ja
out
xchg
ficom
inc
mov
mov
jo
pop
mov
inc
ficom
xor
inc
lahf
cdq
jo
jg
push
mov
jge
out
fidivr
pop
mov
mov
jne
es
mov
xchg
idiv
sbb
je
cmp
(bad)
and
aam
mov
clc
lods
adc
(bad)
not
je
mov
or
mov
jmp
mov
push
shl
push
sub
mov
pop
out
jl
daa
mov
inc
mov
sbb
mov
fwait
xchg
test
aaa
sbb
and
scas
inc
inc
xchg
mov
mov
das
leave
mov
mov
das
ja
call
xor
repnz
ret
push
sbb
fisttp
xchg
pop
enter
test
les
pop
add
inc
push
test
div
jno
rol
inc
repnz
repnz
pop
fld
addr16
cmp
cli
jb
(bad)
mov
stos
cmps
repnz
out
rcl
aaa
jle
or
idiv
jmp
les
std
fadd
out
push
sbb
std
repnz
sar
dec
fcom
jno
shl
lock
sahf
mov
mov
sub
iret
cwde
(bad)
in
mov
add
pop
ret
pop
adc
jmp
fdiv
mov
and
add
sbb
sbb
xchg
xchg
inc
cld
and
sub
fdiv
xor
xchg
pop
mov
movs
js
lds
pop
cld
mov
push
repz
js
fisttp
clc
loop
push
xor
(bad)
pop
clc
mov
mov
loop
cli
push
loopne
xor
push
stos
lea
rcl
cmps
lock
out
std
shl
in
adc
sbb
pop
mov
mov
xlat
ins
or
fmul
pop
pop
mov
cmp
xor
cs
fwait
movs
fst
xor
pop
mov
aas
sub
mov
ins
and
or
ins
inc
mov
inc
(bad)
in
push
push
adc
dec
add
mov
adc
sbb
mov
movs
mov
or
inc
xchg
sar
mov
mov
(bad)
in
xchg
mov
test
sbb
adc
sub
add
sub
in
in
clc
mov
ds
fsubr
cmp
iret
addr16
ret
fcom
mov
ins
in
mov
cmc
dec
inc
call
lods
inc
dec
mov
ja
sub
sbb
mov
jae
stos
sub
jbe
cmp
aas
jno
inc
push
repnz
mov
int3
or
repnz
popf
inc
cmp
and
and
lods
sub
data16
mov
push
lods
imul
int
lods
scas
mov
xchg
mov
mov
or
aaa
cmps
icebp
cmps
out
daa
repz
dec
and
lods
adc
movs
xor
sub
addr16
add
pop
pop
sub
cmps
push
pop
or
push
aad
sub
scas
sub
and
in
loopne
or
and
add
sbb
push
push
mov
sub
clc
enter
pop
lea
sbb
cmp
test
(bad)
fcomip
cmps
inc
(bad)
daa
push
and
pop
ja
movs
xchg
and
std
out
xchg
test
add
(bad)
ins
cmp
arpl
fsub
sbb
adc
xchg
and
sub
inc
mov
lods
in
mov
push
repnz
adc
test
mov
pop
fdiv
aas
clc
scas
inc
push
sub
stc
xor
stos
xchg
mov
or
idiv
cli
xor
xor
jmp
push
jge
pop
sub
lods
xor
cmps
imul
sub
mul
xor
sbb
test
daa
xor
ret
ret
push
cmp
lock
cwde
data16
scas
jmp
sub
xor
(bad)
cmps
adc
rcr
pushf
inc
outs
mov
jnp
mov
xchg
sti
pop
xchg
xchg
idiv
push
sbb
pop
pop
add
pushf
es
xchg
nop
push
adc
adc
xchg
test
adc
std
jg
jmp
dec
xchg
mov
pusha
adc
mov
xchg
xor
call
xchg
adc
xchg
pop
loopne
adc
fwait
ins
cld
xchg
xchg
in
pusha
cmps
adc
xchg
(bad)
lahf
sub
pop
(bad)
scas
dec
shl
push
xor
add
jl
jb
push
push
and
push
adc
mov
nop
and
mov
cld
and
aam
and
(bad)
adc
xchg
adc
push
xor
or
arpl
push
sbb
adc
xchg
inc
push
sub
push
enter
push
mov
adc
not
add
jo
xchg
inc
push
push
out
(bad)
test
push
mov
inc
je
cmp
mov
mov
aas
data16
setne
pop
mov
cmp
adc
int3
and
sub
clc
gs
pop
push
ins
das
mov
jmp
mov
inc
sbb
add
jns
xchg
test
mov
cli
cs
add
aad
test
out
sar
imul
sub
adc
lea
push
lods
out
xor
sub
mov
push
outs
movs
mov
test
cmp
sub
or
sub
cli
dec
and
jne
and
jne
mov
mov
ret
shl
push
mov
das
and
cmp
pop
std
sub
test
adc
or
fild
mov
nop
push
test
push
pop
loopne
in
mov
pop
(bad)
in
dec
or
pop
aad
mov
rcr
xor
cmp
imul
fisttp
push
push
push
xchg
in
ret
(bad)
inc
scas
ret
push
ds
ret
ror
xchg
sbb
addr16
stos
aad
xchg
sub
pop
and
movs
arpl
stos
jns
push
or
jge
lods
inc
lds
cmp
pushf
ror
iret
mov
inc
dec
aaa
mov
out
hlt
bound
(bad)
retf
mov
push
jmp
arpl
or
movs
outs
or
pop
call
rol
sub
rcl
mov
adc
ds
je
daa
lds
call
cli
(bad)
cmp
mov
jl
sub
cmp
lock
(bad)
sti
sub
cmp
cmp
retf
jne
jmp
and
loope
rcl
lahf
dec
cmp
(bad)
adc
in
pop
fwait
mov
xor
lock
popa
and
inc
(bad)
and
add
push
mov
retf
jecxz
xlat
dec
movs
scas
pop
add
fsubr
mov
inc
ss
hlt
mov
retf
push
adc
inc
call
stos
lods
jmp
mov
xchg
pop
xor
mov
mov
das
pop
push
mov
cmps
lods
mov
test
push
ins
ss
rcr
pop
psubusw
sbb
dec
dec
jge
push
stc
icebp
es
test
xor
and
dec
mov
push
lods
std
pop
outs
mov
xchg
nop
call
es
mov
sar
ins
neg
or
adc
sbb
mov
and
mov
shl
je
cli
pop
or
sbb
jnp
sbb
clc
(bad)
fdivrp
sbb
sbb
pop
pop
jge
adc
lock
(bad)
shl
adc
dec
pop
pop
pop
jns
pop
sbb
fcmovnu
aad
adc
push
jno
push
push
je
adc
fdivrp
sbb
sbb
pop
pop
jge
adc
not
adc
pop
jle
push
sbb
fcmovu
(bad)
adc
sub
jno
push
adc
rcl
shl
adc
ins
jp
sbb
sti
sbb
pop
jns
pop
pop
jl
pop
adc
rcl
shl
adc
pop
jnp
sbb
stc
(bad)
fsin
sbb
sbb
pop
pop
jge
sbb
aam
adc
pop
jo
push
push
jno
push
adc
rcl
shl
adc
pop
jp
sbb
clc
pop
sbb
jle
pop
pop
jl
sbb
cld
fcmovnu
(bad)
sbb
jge
pop
pop
jge
adc
aam
xlat
lock
adc
jno
push
push
jbe
pop
adc
shr
(bad)
sub
pop
pop
jle
push
sbb
or
dec
jp
sbb
cmp
mov
jmp
mov
pop
pop
cmp
mov
lea
inc
push
(bad)
or
mov
push
(bad)
xchg
add
retf
call
xchg
mov
pop
es
and
push
mov
dec
push
pop
mov
dec
retf
push
shl
not
xchg
inc
jmp
imul
mov
int3
pop
cmc
mov
pop
or
(bad)
repnz
cli
dec
out
cmp
mov
xchg
cmp
push
leave
enter
addr16
repz
mov
jmp
hlt
jle
gs
lahf
xor
mov
inc
outs
stc
fild
out
mov
mov
loope
repz
fs
scas
cmps
cld
pop
fs
push
add
ins
cmps
adc
mov
xchg
mov
mov
sbb
mov
adc
cmp
inc
imul
sar
hlt
jmp
gs
mov
imul
pop
sti
lea
test
mov
ins
fsub
and
adc
das
jl
and
int3
mov
push
lods
xchg
push
movs
xchg
cli
out
neg
jbe
pop
jecxz
jbe
(bad)
(bad)
hlt
jo
imul
dec
push
cmp
int3
mov
cmc
fistp
mov
or
jno
ins
inc
je
xor
jp
lods
sub
clc
out
dec
call
dec
jns
pushf
movs
in
test
xchg
(bad)
jmp
aas
xlat
xchg
cmps
pop
sub
stos
xchg
mov
ficomp
mov
cli
retf
fistp
mov
xor
loope
xor
in
push
or
aas
mov
push
jne
add
cmps
aad
cmps
cmp
add
add
mov
addr16
(bad)
movs
psrlw
cdq
dec
ja
mov
mov
pop
sbb
inc
mul
pop
call
pop
sub
(bad)
fwait
mov
out
movs
lods
xor
xchg
and
xchg
and
or
or
mov
or
pop
repnz
(bad)
int
push
sub
pop
adc
sub
jne
pusha
and
cmc
jle
gs
cmp
les
in
mov
in
je
jmp
aam
and
mov
(bad)
fdiv
aaa
rol
and
add
pop
aam
(bad)
es
jmp
jmp
add
hlt
sub
cmp
stos
sub
and
xor
inc
movs
xor
ds
xchg
dec
mov
retf
xchg
jno
pop
les
daa
pop
mov
push
dec
add
xchg
aad
jne
sub
cli
adc
mov
sub
test
push
push
fwait
jnp
xchg
retf
mov
je
mov
fwait
sub
(bad)
jmp
pop
aaa
sbb
jno
cmps
dec
inc
lock
dec
jmp
xchg
mov
push
je
jne
pop
stc
rol
lock
pop
popf
mov
cmps
xchg
mov
push
(bad)
cmp
sub
lods
push
mov
call
cwde
xchg
cs
xchg
xlat
cmp
adc
or
or
xor
xor
lock
jp
lds
in
add
inc
nop
dec
mov
or
sbb
arpl
cli
jmp
scas
pop
mov
add
movs
fwait
into
inc
cdq
leave
mov
xchg
dec
mov
arpl
sbb
mov
cmp
inc
pop
test
enter
jns
or
mov
stos
and
jge
fld
pop
xchg
push
jb
fwait
mov
jmp
call
sub
mov
mov
daa
das
lds
push
pop
fidivr
outs
fs
in
xchg
mov
sbb
sar
cs
ret
or
retf
not
push
out
push
test
adc
lahf
lods
cwde
lea
(bad)
sbb
jmp
stos
add
mov
mov
pusha
cmp
das
rol
retf
test
mov
fdivr
arpl
or
mov
fs
stos
dec
stos
rcl
or
push
jl
cmp
mov
cs
or
mov
or
jmp
sar
hlt
add
daa
addr16
xor
add
mov
sti
inc
(bad)
aam
js
retf
jmp
inc
out
jg
cld
out
sbb
mov
sub
pop
or
fsub
int3
iret
jae
lea
jnp
jge
imul
pop
pop
pop
fs
repnz
fild
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
cmps
imul
cmps
imul
cmps
imul
cmps
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
mov
loop
dec
add
add
add
outs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
jg
jg
jg
lods
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
cld
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adc
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
ficomp
frstor
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
cmp
or
imul
mov
xchg
add
in
or
(bad)
leave
and
(bad)
mov
popa
retf
dec
sub
xor
or
dec
cmp
adc
ror
loopne
inc
test
lods
adc
pop
ret
push
jne
push
push
enter
jg
fsubr
or
pop
addr16
sbb
jge
jnp
jo
pop
je
mov
cwde
push
stos
loop
mov
pusha
xchg
cmp
daa
mov
sti
movs
and
xchg
sub
ss
test
mov
sub
out
test
pop
or
ins
xor
daa
jo
sar
push
mov
dec
dec
jno
dec
sbb
(bad)
sti
push
test
xchg
cmp
cmp
lahf
popf
sti
test
sti
icebp
cmps
jns
hlt
idiv
loope
jmp
in
int
call
ja
xchg
ins
inc
xor
dec
add
scas
push
lds
stos
push
and
sbb
lds
shr
popf
mov
js
dec
push
mov
mov
mov
movs
test
ror
or
int
or
stos
xchg
js
mov
jl
nop
adc
jne
fst
outs
mov
adc
sti
shl
inc
lahf
pop
or
pop
sar
push
pushaw
fcom
xor
dec
or
push
fadd
(bad)
movs
lods
and
fs
std
daa
movs
dec
loopne
mov
cld
lods
pusha
mov
xchg
xchg
loop
das
sub
mov
das
xor
out
xchg
pop
test
popf
popf
sub
out
mov
push
add
mov
ss
cmp
repz
not
xor
loop
repz
pop
lock
ret
ds
xchg
dec
add
shr
mov
sti
fsubr
loopne
imul
mov
(bad)
dec
xor
leave
jle
lods
mov
mov
ja
or
lds
xchg
sub
mov
pop
cmp
inc
adc
inc
push
sahf
cmp
and
add
sub
sbb
cmc
push
fdiv
sub
fwait
aas
fwait
imul
(bad)
adc
pop
dec
in
xchg
or
lock
push
cli
mov
rcl
fwait
xchg
sbb
xchg
push
push
das
icebp
mov
ins
lods
clc
xlat
jo
cld
shl
sub
gs
test
out
mov
daa
xlat
add
movs
fisubr
fisubr
and
fst
loop
add
mov
leave
jle
ds
adc
jge
mov
out
stos
int3
sar
(bad)
pusha
ss
jno
neg
pop
inc
jne
sbb
xor
je
mov
ret
xor
cdq
nop
mov
lea
imul
leave
push
inc
out
dec
repnz
dec
dec
sub
or
pushf
ror
and
jnp
pusha
inc
jg
inc
add
pop
shl
xchg
push
inc
ins
xchg
xor
and
lds
dec
fwait
adc
pop
adc
xor
sbb
cmp
pop
push
pop
push
sbb
sqrtps
push
xor
popf
adc
mov
xchg
and
int
and
jmp
sub
jns
test
rcl
sub
mov
push
lods
(bad)
adc
ror
imul
jl
out
fcmovnb
retf
mov
out
lock
sbb
loop
sbb
mov
daa
stc
les
mov
lea
cmp
aad
mov
sahf
mov
lods
call
push
or
xor
ins
data16
fidivr
mov
mov
div
rol
add
jg
add
loope
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
in
add
repnz
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
fiadd
add
fadd
add
mov
add
add
add
add
add
add
add
rol
add
pop
add
test
add
loopne
add
xor
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
fld
add
outs
add
add
add
add
add
add
add
lods
add
add
add
jno
add
test
add
add
add
stos
add
add
add
or
add
movs
add
add
add
add
add
add
add
add
add
add
add
jp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
jb
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
ja
add
stos
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
push
add
adc
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
dec
add
add
add
pusha
add
add
add
add
add
cmps
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
arpl
add
xor
add
mov
add
popa
add
add
add
call
add
add
add
add
add
jbe
add
out
add
lea
add
sbb
add
cli
add
add
add
test
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
pusha
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
loopne
add
sub
add
out
add
test
add
into
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
mov
add
inc
add
add
add
add
add
sahf
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
lea
add
rol
add
inc
add
add
add
imul
add
test
add
add
cmps
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
leave
add
add
add
add
add
add
add
xchg
add
ins
add
add
add
add
add
add
aam
add
scas
add
add
add
add
add
push
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
retf
add
add
add
add
add
test
add
fiadd
add
jb
add
lds
add
inc
add
add
add
add
push
add
add
add
ins
add
add
add
add
add
add
add
or
add
add
add
ins
add
add
add
ror
add
add
push
jae
add
pop
add
clc
or
or
mov
ror
test
dec
add
dec
add
lds
in
dec
add
dec
add
dec
add
dec
add
add
add
add
add
cs
inc
push
inc
inc
outs
ins
fs
popa
arpl
addr16
inc
add
add
mov
ror
mov
ror
mov
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
add
add
add
cs
inc
push
aas
and
dec
popa
jo
push
aas
and
push
je
imul
push
aas
and
je
push
jb
imul
push
aas
and
push
je
inc
push
push
inc
pop
push
inc
inc
push
dec
inc
inc
inc
inc
inc
inc
push
dec
inc
inc
push
inc
pop
push
dec
inc
inc
dec
inc
inc
add
add
cs
inc
push
inc
dec
je
ins
inc
imul
add
add
add
cs
inc
push
inc
inc
dec
je
ins
inc
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
jbe
outs
je
imul
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
inc
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
add
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
test
(bad)
push
loope
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
in
dec
add
add
add
add
inc
dec
dec
add
add
add
add
add
add
cs
inc
push
inc
push
je
imul
jns
inc
add
(bad)
(bad)
(bad)
call
add
cs
inc
push
inc
inc
dec
je
ins
inc
outs
outs
je
outs
ins
push
imul
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
ins
gs
outs
je
jbe
outs
je
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
jb
ja
gs
outs
outs
je
outs
ins
push
imul
xchg
jne
add
add
add
aas
inc
push
dec
inc
outs
arpl
jae
push
dec
dec
popa
outs
fs
gs
inc
add
add
add
outs
add
jae
je
outs
add
imul
add
add
add
add
outs
jae
add
add
popa
outs
add
ins
outs
add
add
add
add
add
add
add
test
dec
add
test
dec
add
test
dec
add
test
dec
add
test
add
test
dec
add
test
jb
add
loopne
jo
ja
add
add
ins
outs
add
add
add
xor
add
jg
add
add
add
add
test
enter
mov
test
ins
test
inc
test
sbb
dec
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
cmc
dec
add
dec
add
cmc
dec
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
cmc
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
add
(bad)
push
fimul
leave
(bad)
aas
add
add
add
lock
or
or
add
or
add
or
add
or
add
add
nop
imul
imul
add
add
add
add
stos
dec
add
add
stos
dec
add
outs
jae
add
add
test
add
stos
dec
add
popa
outs
push
add
add
add
add
dec
add
add
stos
dec
add
add
add
add
xor
add
add
add
add
add
dec
add
ror
ror
ror
test
add
test
add
test
add
ror
ror
test
add
test
add
aas
pop
add
add
add
add
add
add
or
add
jo
add
mov
add
add
add
add
add
add
or
add
add
add
out
aas
add
add
add
lock
add
add
add
lock
add
add
add
aas
add
add
add
loopne
add
add
add
(bad)
(bad)
(bad)
jg
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
dec
add
dec
add
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
dec
add
leave
dec
add
dec
add
dec
add
dec
add
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
retf
and
dec
add
retf
(bad)
retf
jbe
dec
add
retf
ret
add
retf
loope
dec
add
retf
push
retf
dec
add
retf
dec
add
retf
dec
add
add
pop
add
add
add
add
xlat
mov
or
add
add
dec
or
sbb
xchg
std
aas
add
add
add
loopne
add
jo
add
mov
test
add
loopne
add
jg
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
adc
add
lods
dec
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
dec
add
add
add
add
dec
lods
dec
add
lods
dec
add
add
add
dec
add
add
add
add
stos
dec
add
add
add
add
sub
add
add
add
dec
add
add
add
lods
dec
add
mov
add
in
dec
add
add
add
lods
dec
add
add
add
mov
add
shl
add
adc
add
lods
dec
add
add
add
mov
add
enter
and
add
les
add
mov
add
add
mov
dec
add
mov
dec
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
and
add
pusha
add
add
add
nop
add
or
add
inc
add
or
add
add
loopne
add
clc
add
adc
add
adc
add
sub
add
add
add
add
add
add
adc
pop
add
add
add
pop
add
or
add
jo
add
mov
add
mov
add
add
add
add
add
or
add
call
add
add
add
adc
add
sbb
adc
add
xor
adc
add
dec
add
adc
add
pusha
add
adc
add
add
nop
add
adc
add
test
add
add
add
add
add
add
add
add
add
add
adc
add
fadd
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
data16
add
add
add
js
add
add
add
loopne
add
add
add
add
add
add
adc
add
add
clc
add
add
xor
add
push
add
add
add
add
push
add
adc
add
dec
pop
add
add
add
add
cwde
pop
add
mov
add
enter
adc
add
loopne
add
clc
pop
add
adc
add
sub
add
inc
or
sbb
add
pop
or
sbb
add
add
mov
add
mov
add
add
add
add
add
add
add
arpl
add
mov
add
add
add
add
add
add
sldt
jns
add
or
adc
add
call
jns
add
or
sbb
add
sbb
add
xor
add
dec
or
sbb
add
pusha
or
sbb
add
add
nop
or
sbb
add
test
add
ror
and
add
fmul
add
lock
and
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
js
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
adc
add
mov
add
cwde
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
fmul
add
call
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
sbb
add
adc
add
sub
add
or
add
push
add
add
add
add
add
add
add
or
add
pop
push
add
adc
add
push
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
fsub
add
in
add
add
add
nop
mov
add
in
add
add
add
les
add
in
add
add
add
clc
movs
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
enter
xor
add
in
add
add
add
cld
stos
or
add
add
add
add
add
lods
or
add
add
add
add
add
add
add
in
add
add
add
cwde
scas
or
add
add
add
add
add
scas
or
add
add
add
add
add
mov
add
add
in
add
add
add
xor
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
mov
or
add
add
add
add
add
or
add
add
add
add
add
fmul
add
add
add
add
add
fisttp
add
add
add
add
add
or
add
add
add
add
add
fimul
add
add
add
add
add
fisttp
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
in
or
add
add
add
add
add
or
add
add
add
add
add
test
in
add
add
add
mov
pop
add
in
add
add
add
nop
push
push
add
pop
add
in
add
add
add
fs
push
add
add
in
add
add
add
fcom
push
add
pop
add
in
add
add
add
movs
sbb
add
add
in
add
add
add
sbb
push
add
add
in
add
add
add
xchg
sub
add
add
in
add
add
add
or
push
add
add
add
add
add
or
push
add
add
in
add
add
add
add
sub
add
in
add
add
add
lods
dec
push
add
add
in
add
add
add
fmul
add
add
in
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
pusha
pusha
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
in
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
in
add
add
add
inc
xchg
push
add
add
in
add
add
add
mov
add
add
add
add
pop
popf
push
add
add
add
add
add
popf
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
stos
push
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
in
add
add
add
pop
mov
add
add
add
add
add
add
add
in
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
ins
mov
add
add
in
add
add
add
xor
in
add
add
add
xchg
mov
add
add
in
add
add
add
test
push
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
add
add
in
push
add
add
in
add
add
add
clc
mov
add
add
in
add
add
add
or
push
add
add
in
add
add
add
and
add
in
add
add
add
xor
push
add
add
in
add
add
add
dec
mov
add
add
in
add
add
add
pop
mov
add
add
in
add
add
add
jo
push
add
add
in
add
add
add
int3
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
add
pop
add
add
add
add
add
sbb
add
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
pop
dec
push
pop
inc
push
pop
inc
push
add
rcr
inc
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
shl
jg
jo
inc
clc
add
sar
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
pop
add
add
add
test
add
leave
dec
add
test
dec
add
or
add
rol
add
cmp
add
add
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
inc
add
inc
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
(bad)
inc
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
clc
jg
push
aas
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
ud0
loopne
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
adc
add
add
xchg
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
jg
(bad)
cld
aas
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
ud0
pushf
pop
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
cld
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
add
and
add
mov
add
and
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
jg
(bad)
clc
jg
push
jg
jmp
jg
inc
jae
inc
inc
(bad)
inc
inc
(bad)
inc
jae
jmp
jg
push
jg
(bad)
clc
jg
(bad)
cld
jg
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
inc
adc
add
add
and
add
sbb
add
add
add
add
or
add
add
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
inc
repz
inc
ret
(bad)
inc
cmp
out
(bad)
(bad)
inc
(bad)
(bad)
cld
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
sbb
add
and
add
inc
add
and
add
and
add
sbb
add
add
and
add
and
add
adc
add
or
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
dec
ret
(bad)
inc
cmp
inc
ret
(bad)
inc
out
inc
jg
inc
aas
(bad)
inc
pop
(bad)
inc
ud0
rol
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
cld
add
and
add
add
add
add
add
add
add
add
add
add
test
add
add
inc
and
add
add
and
add
sbb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
jmp
add
push
add
(bad)
clc
add
(bad)
cld
add
(bad)
inc
(bad)
jmp
add
inc
cmp
add
(bad)
inc
repz
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
inc
or
add
add
inc
and
add
add
inc
add
inc
add
add
add
inc
dec
add
dec
test
add
add
pusha
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
jg
inc
iret
(bad)
inc
add
dec
xchg
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
or
add
add
nop
or
add
or
add
mov
or
dec
adc
adc
or
adc
or
adc
add
mov
add
or
adc
add
or
add
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
repz
dec
lock
dec
lock
(bad)
aas
clc
push
jo
lock
pavgb
adc
loopne
adc
lock
psubb
jo
cld
(bad)
aas
dec
lock
(bad)
(bad)
dec
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
cld
add
rol
add
add
add
inc
and
inc
inc
adc
inc
and
adc
or
adc
and
inc
add
inc
add
add
cld
add
and
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
(bad)
aas
cld
(bad)
(bad)
aas
cld
jg
aas
cld
aas
clc
ds
lock
pavgb
sbb
loopne
sbb
lock
psubb
jl
cld
aas
cld
aas
(bad)
aas
cld
jg
aas
cld
(bad)
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
idiv
dec
repz
dec
lock
dec
lock
push
jo
clc
or
pop
clc
or
pop
cld
push
jo
dec
lock
(bad)
(bad)
dec
repz
(bad)
out
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cld
(bad)
(bad)
aas
cld
jg
ds
clc
cmp
pop
clc
cmp
pop
cld
ds
(bad)
aas
cld
jg
aas
cld
(bad)
(bad)
mov
(bad)
(bad)
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
(bad)
cwde
add
add
add
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
and
add
or
add
add
add
add
add
fadd
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
mov
mov
add
(bad)
(bad)
(bad)
(bad)
dec
clc
xchg
ja
add
add
mov
lock
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
(bad)
inc
clc
xchg
js
add
add
mov
(bad)
push
clc
xchg
ja
add
add
mov
(bad)
(bad)
(bad)
clc
xchg
ja
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
add
js
js
add
xchg
add
add
add
js
xchg
idiv
add
or
(bad)
(bad)
push
jle
jg
inc
js
sub
xchg
out
idiv
clc
add
or
mul
and
stos
jle
jg
push
add
ja
mul
and
cmps
out
(bad)
(bad)
push
or
mul
and
(bad)
(bad)
(bad)
clc
add
ja
imul
and
(bad)
push
clc
add
ja
mul
test
add
ja
jle
and
maskmovq
test
mov
lock
(bad)
jg
add
ja
out
fwait
(bad)
jg
inc
jg
out
add
ja
jle
mov
idiv
jle
ja
or
out
fwait
fwait
xchg
(bad)
(bad)
jp
out
add
ja
out
out
jmp
jg
stos
jle
add
ja
out
out
out
out
jg
push
idiv
add
ja
out
out
out
xchg
(bad)
jg
jp
add
or
outs
outs
outs
outs
call
ja
add
or
loopne
out
out
jg
jg
add
add
ja
(bad)
inc
add
mov
add
ja
(bad)
(bad)
(bad)
inc
add
out
add
add
ja
mov
add
add
add
add
mov
mov
push
add
add
or
mov
ja
add
add
or
clc
(bad)
push
mov
add
add
(bad)
push
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
clc
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
clc
add
add
or
(bad)
(bad)
clc
(bad)
idiv
mov
add
add
clc
jg
push
pop
sar
add
aas
rol
pop
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
add
stos
mov
add
jp
pop
js
ja
js
mov
cwde
js
jp
js
jb
js
jp
js
ja
stos
ja
pop
js
ja
jp
jp
js
js
or
mov
xchg
xchg
mov
jns
ja
mov
mov
add
pop
ja
ja
jp
add
ja
ja
mov
mov
mov
ja
ja
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jmp
add
jmp
ins
jmp
add
add
in
imul
jmp
adc
out
lock
hlt
or
adc
add
out
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
repz
xchg
fst
fstp
(bad)
(bad)
jmp
add
repz
lock
repz
push
or
mov
sbb
mov
fstp
mov
add
or
jne
xchg
(bad)
(bad)
(bad)
fstp
(bad)
or
fmul
or
or
(bad)
scas
add
mov
fcmovnu
fcmovnu
mov
call
fisttp
iret
add
add
mov
(bad)
add
add
repnz
repz
add
add
mov
div
ins
add
add
mov
or
or
hlt
hlt
adc
add
add
fstp
mov
inc
pop
add
add
mov
mov
loope
add
rol
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
adc
scas
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
adc
adc
jmp
or
or
ins
adc
or
or
or
or
or
ins
out
repz
icebp
pop
in
ins
adc
jmp
adc
or
or
or
pop
lock
(bad)
(bad)
(bad)
push
mov
(bad)
fucom
repz
repnz
jmp
or
pop
pop
out
repz
hlt
hlt
(bad)
push
(bad)
mov
(bad)
(bad)
fstp
fucom
hlt
push
scas
inc
adc
or
or
out
out
pop
repnz
or
or
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
push
scas
adc
or
or
pop
out
pop
repnz
or
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
hlt
(bad)
(bad)
push
jmp
icebp
icebp
icebp
hlt
or
push
cs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
adc
mov
mov
jmp
fstp
(bad)
(bad)
(bad)
fstp
fdivp
(bad)
(bad)
(bad)
(bad)
push
jmp
icebp
icebp
loop
push
push
push
sub
(bad)
(bad)
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
mov
fstp
(bad)
call
iret
iret
pop
(bad)
push
hlt
hlt
(bad)
out
inc
test
icebp
loop
pop
pop
push
dec
mov
fstp
fstp
push
hlt
repnz
adc
repz
fdivr
pop
push
mov
fstp
fstp
push
repz
fstp
pop
adc
repz
mov
in
fstp
fstp
hlt
push
mov
mov
fst
(bad)
fnsave
lock
repnz
mov
outs
(bad)
(bad)
(bad)
(bad)
push
(bad)
hlt
repz
(bad)
(bad)
(bad)
mov
or
lock
fadd
cdq
cdq
push
dec
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
(bad)
(bad)
(bad)
(bad)
fsubr
mov
(bad)
(bad)
fdiv
(bad)
push
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jmp
fstp
fstp
(bad)
(bad)
(bad)
iret
in
or
or
mov
fcmovnu
fcmovnu
fcmovnu
(bad)
fstp
fstp
fstp
(bad)
mov
or
or
icebp
(bad)
icebp
loop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
(bad)
push
repz
fstp
fnsave
or
icebp
lock
mov
aam
aam
fcmovu
(bad)
loop
fdiv
or
or
lock
mov
loop
(bad)
fcmovnbe
aam
aam
mov
mov
scas
test
or
or
icebp
repnz
fsub
(bad)
(bad)
(bad)
(bad)
push
repnz
icebp
(bad)
fcmovnbe
aam
scas
inc
adc
or
or
icebp
repz
pop
pop
mov
hlt
hlt
repz
icebp
icebp
mov
or
or
or
or
icebp
repnz
scas
scas
scas
iret
mov
pop
mov
icebp
icebp
icebp
lock
pop
out
or
or
or
or
mov
iret
iret
scas
iret
iret
iret
iret
mov
mov
icebp
repz
repz
adc
or
or
or
or
pop
hlt
hlt
(bad)
fcmovnu
(bad)
fdiv
mov
(bad)
push
hlt
out
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loop
repz
hlt
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
fstp
fucomp
loop
hlt
(bad)
(bad)
in
adc
or
or
or
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
jmp
jmp
or
or
or
or
pop
pop
(bad)
(bad)
fstp
fld
in
mov
mov
or
or
or
or
or
or
or
mov
mov
mov
or
or
or
or
jg
push
pop
sar
add
rol
xadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
ins
ins
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
ins
or
or
or
or
or
or
jmp
ins
ins
ins
jmp
or
or
or
or
or
or
or
or
or
ins
in
icebp
lock
in
ins
adc
adc
ins
or
or
or
adc
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
ins
in
mov
push
pop
in
in
jmp
or
scas
mov
or
fnsave
adc
or
or
or
or
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
adc
scas
mov
fstp
fstp
sbb
hlt
repnz
scas
scas
adc
or
or
or
or
or
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
fdiv
fstp
fstp
sbb
repz
hlt
(bad)
out
scas
adc
or
or
or
lock
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
scas
mov
(bad)
fstp
fstp
fstp
fstp
sbb
hlt
(bad)
push
scas
adc
or
or
imul
idiv
jno
or
call
(bad)
fsubr
(bad)
fstp
fstp
fstp
fstp
sbb
(bad)
(bad)
push
scas
adc
or
or
mov
sbb
sbb
jno
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
push
scas
adc
or
or
or
idiv
sbb
sub
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
out
scas
adc
or
idiv
sbb
cs
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
sub
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fdivp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
out
repnz
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
fst
(bad)
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
or
out
repnz
icebp
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
(bad)
mov
or
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
lock
adc
out
repnz
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
fucomp
scas
in
scas
mov
hlt
hlt
hlt
hlt
hlt
hlt
scas
adc
out
repnz
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
call
scas
sbb
mov
hlt
push
repnz
adc
or
or
repnz
fnstsw
jge
push
push
jmp
fstp
fstp
fstp
(bad)
dec
in
sbb
(bad)
icebp
icebp
icebp
icebp
icebp
icebp
in
adc
or
or
repnz
fnstsw
jge
jns
jmp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
in
adc
or
or
repnz
fnstsw
push
push
push
push
dec
mov
fstp
fstp
fstp
hlt
(bad)
(bad)
mov
(bad)
fst
fstp
fstp
fstp
in
adc
or
or
repz
fcom
push
push
push
push
dec
in
fstp
fstp
sbb
(bad)
(bad)
(bad)
fdivrp
fnsave
(bad)
(bad)
(bad)
fstp
fstp
(bad)
or
repz
fcom
push
push
push
push
dec
scas
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
fst
(bad)
(bad)
(bad)
fstp
fisttp
scas
adc
or
or
repz
or
(bad)
fcom
push
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
mov
in
or
or
out
(bad)
ror
repnz
(bad)
(bad)
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fucomp
adc
or
or
pop
fcmovnbe
ror
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
scas
ins
or
or
or
fcmovnbe
lods
or
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
(bad)
(bad)
(bad)
push
fstp
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
or
pop
fld
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
call
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
scas
in
or
or
or
pop
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
or
(bad)
push
sbb
fstp
fstp
fstp
fst
(bad)
(bad)
scas
scas
or
or
or
or
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
scas
mov
(bad)
push
repz
fstp
fstp
fstp
fst
scas
scas
or
or
or
or
pop
sbb
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
aad
in
hlt
push
hlt
repz
fstp
fstp
fisttp
scas
scas
or
or
or
or
or
lock
repnz
fcmovnbe
aam
aam
aad
fcmovnu
fcmovnu
fcmovnu
fcmovne
scas
out
repnz
hlt
repz
fstp
fnsave
or
or
or
or
mov
sbb
aam
repz
fcmovnbe
aam
aam
aam
aad
aad
scas
scas
mov
fstp
fisttp
mov
scas
in
or
or
or
or
or
or
mov
sbb
fcomi
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
mov
scas
scas
scas
scas
scas
or
or
or
or
or
or
or
or
(bad)
push
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
adc
or
or
or
or
or
or
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
repz
icebp
icebp
icebp
lock
ins
adc
jmp
or
or
or
or
or
mov
mov
mov
pop
lock
hlt
hlt
repz
icebp
icebp
icebp
lock
or
or
or
or
or
mov
scas
scas
scas
scas
scas
scas
in
in
mov
pop
pop
lock
icebp
icebp
icebp
lock
out
or
or
or
or
or
or
or
scas
scas
scas
scas
in
in
in
in
in
in
in
in
mov
mov
pop
icebp
repnz
icebp
icebp
icebp
lock
or
or
or
or
or
or
or
repnz
in
in
in
in
in
in
mov
mov
mov
lock
hlt
hlt
hlt
repz
adc
or
or
or
or
or
pop
repz
fcmovnu
(bad)
fmul
mov
mov
mov
mov
mov
mov
hlt
(bad)
(bad)
push
hlt
hlt
out
adc
or
or
or
or
or
repnz
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
or
or
sbb
hlt
hlt
lock
or
or
or
or
hlt
hlt
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
or
fstp
repz
hlt
(bad)
(bad)
in
adc
or
or
or
or
pop
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
fstp
repz
hlt
(bad)
(bad)
(bad)
mov
or
or
or
or
pop
pop
pop
fcmovnu
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
out
repz
hlt
(bad)
(bad)
(bad)
push
jmp
or
or
or
or
or
pop
pop
out
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
mov
(bad)
(bad)
(bad)
inc
jmp
or
or
or
pop
pop
pop
out
out
div
mov
mov
fstp
fstp
fstp
fstp
fld
adc
out
(bad)
(bad)
(bad)
push
lock
pop
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
pop
out
out
out
out
or
fucomp
jmp
or
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
dec
add
inc
jg
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
sbb
inc
add
inc
aas
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
mov
add
add
add
add
mov
add
add
add
ja
push
js
mov
add
or
add
add
add
add
(bad)
(bad)
js
mov
out
div
div
add
add
add
ja
(bad)
(bad)
(bad)
(bad)
push
ja
mov
jg
jg
test
(bad)
(bad)
(bad)
push
xchg
out
out
(bad)
(bad)
(bad)
js
add
add
ja
(bad)
dec
xchg
jg
push
add
add
ja
(bad)
jmp
and
xchg
out
(bad)
(bad)
(bad)
(bad)
js
add
or
(bad)
jmp
and
and
jle
jg
(bad)
(bad)
clc
add
add
ja
(bad)
jmp
and
sub
out
(bad)
(bad)
(bad)
push
add
or
(bad)
jmp
and
sub
stos
stos
jle
jg
(bad)
(bad)
(bad)
inc
ja
jmp
sub
sub
stos
stos
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
add
ja
(bad)
jmp
ja
stos
jg
(bad)
(bad)
(bad)
(bad)
push
js
add
ja
(bad)
jmp
sub
xchg
ja
push
(bad)
(bad)
jg
jg
add
or
(bad)
jmp
div
jg
add
push
div
clc
add
or
(bad)
jmp
sub
xchg
jg
test
jg
js
add
ja
mov
mov
div
push
pop
ja
push
div
clc
add
or
(bad)
out
sub
jg
test
jg
js
add
ja
mov
stos
fwait
fwait
xchg
div
(bad)
inc
out
clc
add
or
(bad)
out
mov
jg
(bad)
push
ja
(bad)
jle
jg
add
or
mov
fwait
fwait
fwait
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
(bad)
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
jle
jle
add
or
mov
(bad)
(bad)
dec
push
div
cmps
out
add
or
(bad)
out
out
out
out
out
xchg
(bad)
(bad)
(bad)
jg
ja
stos
jle
add
or
mov
out
out
out
out
call
div
div
cmps
call
ja
mov
out
out
out
out
call
jg
ja
jp
js
add
or
mov
out
out
out
out
out
xchg
push
div
div
stos
add
add
ja
mov
out
outs
out
out
out
call
jg
ja
test
add
add
ja
mov
out
out
out
mov
div
div
div
add
add
or
mov
outs
outs
outs
outs
outs
push
jg
jo
add
add
or
xchg
add
out
out
out
mov
ja
add
add
add
or
mov
test
outs
push
add
add
add
or
xchg
test
out
add
add
add
add
ja
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
ja
js
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
or
mov
mov
(bad)
push
add
add
add
(bad)
clc
mov
mov
js
add
add
add
add
ja
mov
js
pop
add
add
(bad)
push
js
mov
jo
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
js
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
or
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
push
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
push
add
(bad)
(bad)
push
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
inc
add
add
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
inc
cmp
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
enter
add
add
add
dec
add
add
add
add
dec
add
popa
add
add
add
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
push
add
add
les
add
add
add
(bad)
inc
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
ja
(bad)
inc
add
add
add
add
add
add
daa
ins
add
arpl
je
ins
add
pop
add
jb
outs
add
jb
add
jae
xor
xor
add
add
add
add
add
add
or
jns
(bad)
inc
add
les
enter
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
ja
and
add
add
add
mov
add
add
add
xor
fs
inc
add
add
add
push
add
add
mov
push
add
add
add
add
inc
add
push
add
add
mov
pop
add
add
add
add
inc
add
arpl
add
add
add
add
add
push
add
add
mov
sub
sub
push
add
(bad)
inc
add
ins
add
add
add
enter
add
add
add
or
sbb
mov
inc
add
add
add
add
add
push
add
add
push
add
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
push
add
bound
xor
pop
xor
add
xor
xor
pop
xor
xor
push
xor
outs
xor
xor
js
mov
data16
pusha
xor
inc
xor
add
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
adc
xor
xor
pop
add
xor
xor
add
add
ins
add
popa
add
add
add
add
xor
xor
xor
xor
add
xor
xor
xor
mov
xor
xor
xor
add
shl
ret
xor
xor
xor
or
push
loopne
outs
xor
push
std
and
dec
xor
mov
jle
pop
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
mov
pop
xor
push
js
mov
data16
pusha
xor
inc
xor
xor
add
xor
jmp
add
fs
dec
and
and
add
ins
add
popa
add
add
add
add
dec
xor
jle
pop
xor
add
popa
add
ins
add
popa
add
add
outs
add
add
xor
xor
xor
mov
data16
xor
xchg
xor
xor
add
xor
add
popa
add
ins
add
popa
add
add
add
add
mov
xor
xor
xor
sbb
aad
mov
xor
add
add
ins
add
popa
add
add
add
add
pop
xor
imul
pop
sub
xor
pop
xor
and
push
push
iret
xor
xor
xor
xor
pop
xor
xor
fs
dec
xchg
xor
dec
xor
pop
xor
xor
xor
xor
xor
sbb
mov
addr16
xor
and
and
add
ins
add
popa
add
add
add
add
inc
jge
xor
nop
push
xor
push
xor
and
add
jns
ins
add
popa
add
add
add
add
mov
xor
xor
pop
xor
xor
xor
xor
and
and
add
outs
add
and
xor
pop
add
add
add
ins
add
popa
add
add
add
add
xchg
pop
mov
data16
xor
or
and
push
push
(bad)
xor
xor
xor
add
xor
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
jno
push
push
(bad)
xor
xor
push
jle
mov
jle
pop
xor
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
mov
outs
xor
push
mov
sub
jbe
jne
xor
push
xor
daa
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
dec
xor
imul
jbe
jne
xor
push
xor
push
inc
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
bound
ins
add
and
je
outs
add
add
imul
and
je
push
add
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
add
add
and
imul
je
popa
add
add
je
imul
and
jo
popa
add
imul
add
add
and
je
push
add
add
outs
add
ins
add
add
add
add
add
and
je
outs
add
add
popa
add
imul
add
add
add
outs
add
jb
jne
jo
je
imul
add
add
add
imul
and
je
push
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
add
outs
add
add
add
add
add
outs
add
jb
add
je
ins
add
add
inc
add
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
test
jne
push
call
xor
cmp
jae
mov
mov
sub
mov
add
push
push
mov
call
test
jne
mov
cmp
jne
mov
push
add
push
mov
call
test
jne
mov
cmp
jne
mov
cmp
je
cmp
jne
push
call
mov
cmp
je
cmp
jne
mov
mov
add
mov
mov
push
mov
push
xor
push
mov
call
mov
dec
mov
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
or
call
add
cmp
je
mov
and
leave
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
movzx
lea
inc
cmp
ja
add
movzx
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
call
pop
pop
jmp
push
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
and
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
pop
pop
jmp
push
push
push
call
add
pop
pop
ret
push
push
push
call
add
ret
cmp
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmp
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
push
push
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
mov
xor
cmp
setne
cmp
je
push
call
pop
mov
cmp
je
push
call
mov
inc
push
push
call
add
mov
cmp
jne
call
mov
call
mov
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
cmp
je
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
push
push
mov
push
call
mov
mov
test
pop
jne
call
mov
or
mov
jmp
test
je
call
mov
jmp
test
je
and
test
je
mov
and
mov
mov
mov
and
and
push
push
and
pop
or
test
mov
jne
call
add
cmp
je
call
add
cmp
jne
push
call
test
pop
jne
push
call
pop
test
push
je
mov
mov
lea
mov
mov
sub
sub
test
mov
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
mov
cmp
je
cmp
je
mov
and
imul
mov
sar
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
push
lea
push
push
mov
mov
mov
call
add
mov
cmp
je
or
mov
jmp
mov
and
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
cmp
jbe
mov
cmp
je
mov
xor
jmp
mov
cmp
je
or
cmp
jbe
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
lea
call
mov
cmp
jne
mov
cmp
jbe
cmp
je
cmp
jbe
push
push
push
call
add
call
mov
call
cmp
mov
je
mov
and
pop
pop
pop
leave
ret
cmp
je
cmp
ja
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
jmp
mov
mov
cmp
je
mov
cmp
je
mov
and
jmp
lea
push
push
push
push
push
lea
push
push
mov
push
call
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
call
cmp
jne
cmp
je
cmp
jbe
push
push
push
call
add
jmp
push
push
push
push
push
call
add
ret
push
mov
sub
push
xor
test
push
push
mov
mov
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
sub
mov
mov
je
dec
je
dec
je
call
mov
or
call
push
pop
push
push
push
push
push
mov
call
add
jmp
mov
jmp
test
je
test
jne
mov
jmp
mov
mov
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
test
mov
je
mov
not
and
test
js
mov
test
je
or
or
cmp
jne
or
test
je
or
test
je
or
jmp
mov
jmp
test
je
or
call
cmp
mov
jne
call
mov
or
call
mov
jmp
mov
mov
push
push
mov
push
lea
push
push
push
push
call
cmp
mov
jne
mov
mov
and
cmp
jne
test
je
and
push
push
lea
push
push
push
push
push
call
cmp
mov
jne
mov
mov
and
imul
sar
mov
lea
and
call
push
call
pop
call
mov
jmp
push
call
cmp
jne
mov
mov
and
imul
sar
mov
lea
and
call
mov
push
call
pop
push
call
cmp
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
mov
and
imul
sar
mov
pop
pop
mov
or
mov
mov
mov
and
imul
sar
mov
lea
and
mov
and
mov
jne
test
je
test
je
push
or
push
push
call
add
cmp
mov
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
mov
cdq
push
push
push
call
add
cmp
je
push
push
push
call
add
cmp
je
test
je
mov
test
mov
jne
mov
and
jne
or
jmp
or
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
and
cmp
jne
mov
jmp
mov
test
je
test
mov
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
cmp
jbe
cmp
jbe
cmp
je
mov
mov
and
imul
sar
mov
lea
mov
xor
and
xor
mov
mov
and
imul
sar
mov
lea
mov
mov
shr
shl
and
or
cmp
mov
jne
test
je
mov
mov
and
imul
sar
mov
lea
or
mov
mov
mov
and
cmp
jne
test
je
push
call
push
push
lea
push
push
push
and
push
push
call
cmp
jne
call
push
call
mov
mov
and
imul
sar
mov
lea
and
push
call
pop
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
jmp
mov
cmp
jbe
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
add
and
cmp
jne
jmp
mov
and
cmp
jne
push
call
pop
call
push
pop
mov
mov
jmp
cmp
jne
push
push
push
call
add
cmp
je
mov
jmp
push
push
push
call
add
jmp
movsx
xor
dec
je
dec
jne
mov
mov
jmp
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
je
add
cmp
jg
jmp
push
call
pop
call
mov
mov
jmp
mov
mov
sar
mov
and
imul
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
or
xor
cmp
setne
cmp
je
cmp
je
mov
and
neg
sbb
inc
je
mov
push
push
push
push
lea
push
mov
call
add
mov
mov
call
mov
cmp
je
or
call
ret
xor
mov
cmp
je
cmp
je
mov
mov
sar
and
imul
mov
lea
and
push
call
pop
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
mov
or
pop
sbb
lea
dec
outs
sbb
cmp
sub
stos
test
sub
(bad)
popf
enter
mov
xchg
sub
cmp
inc
call
xchg
dec
mov
sbb
push
mov
mov
lea
div
(bad)
(bad)
shl
shl
sub
sub
sbb
popf
sub
(bad)
scas
fcomp
or
lea
dec
in
push
and
mov
dec
mov
pop
out
sub
aas
jg
push
je
cwde
sub
dec
clc
and
mov
xor
sbb
cld
dec
in
mov
ds
jl
je
mov
(bad)
mov
mov
mov
fwait
and
add
pop
fstp
and
mov
in
mov
or
in
repz
(bad)
enter
or
add
nop
or
pop
inc
push
add
scas
daa
mov
mov
mov
pop
cs
clc
jl
jno
fidivr
pop
adc
xor
call
call
pop
aad
std
cmp
jmp
mov
cmps
dec
dec
inc
aam
mov
int3
mov
int3
hlt
and
js
pushf
lods
sub
sub
and
xchg
jmp
fst
clc
jl
mov
and
or
cmp
sub
ins
dec
je
test
jmp
mov
jl
xor
dec
inc
push
fs
jg
xor
jno
add
sub
or
in
fld
fmul
cmp
push
(bad)
sbb
jecxz
stc
(bad)
xchg
ror
or
sub
push
fmul
aam
adc
fiadd
pop
jmp
cdq
imul
js
(bad)
ror
sub
pop
cmp
or
jnp
jae
pop
inc
xchg
fimul
xlat
loopne
xchg
(bad)
in
jnp
sub
loopne
sbb
sub
mov
cmp
sbb
popf
jns
xchg
cmps
sub
pushf
fcmove
mov
pushf
sub
je
dec
in
push
sbb
retf
xchg
lahf
call
(bad)
call
aam
arpl
add
fmul
ds
in
ins
dec
out
push
lds
bound
ins
sub
stc
rcr
push
or
sbb
push
enter
fsubr
jae
(bad)
fistp
ins
add
movups
dec
cli
sub
ins
pop
js
fcomp
(bad)
jns
out
(bad)
or
inc
pop
sub
sti
ror
js
in
fnstcw
nop
mov
(bad)
fsubr
in
(bad)
sbb
ror
sub
adc
popa
pop
pop
retf
(bad)
stc
es
daa
push
stos
jl
dec
push
rcr
pop
les
mov
mov
rcr
pop
sar
rol
mov
popf
enter
cdq
retf
jne
(bad)
pop
cs
jl
ins
inc
fistp
leave
scas
lods
and
push
in
sub
jmp
retf
sbb
sbb
push
dec
(bad)
movs
jb
movs
or
out
xchg
ror
cmp
pop
mov
push
and
cmp
sbb
pusha
enter
rcl
add
aaa
sbb
ds
sub
lods
jmp
pushf
aam
outs
int
(bad)
into
je
test
fcomp
lods
(bad)
lods
and
loop
cld
cmp
call
fstp
mov
hlt
mov
pop
inc
pop
lock
push
and
sub
pop
(bad)
out
enter
fcom
clc
test
add
call
fsub
jle
mov
adc
loop
pop
idiv
dec
jge
push
fwait
loop
cmp
adc
cmp
shr
lods
and
int3
inc
out
pop
icebp
add
dec
shr
sub
mov
xor
mov
clc
jl
lahf
lods
push
sub
imul
cmovbe
in
sbb
pop
in
int
data16
cld
mov
clc
aad
add
fsubp
lock
mov
jl
nop
sub
in
mov
(bad)
ret
fs
fldcw
jecxz
lahf
mov
shl
xchg
dec
sub
ret
cwde
in
arpl
rol
xlat
mov
jge
or
sbb
imul
mov
jge
sbb
jle
rep
adc
(bad)
das
rol
dec
adc
dec
mov
imul
fstp
in
xor
aam
pop
mov
sub
ret
and
leave
or
arpl
in
mov
and
scas
imul
fadd
pushf
pop
mov
jnp
cmp
loope
sub
les
jp
or
sahf
outs
adc
mov
sbb
shl
or
dec
xor
sub
mov
mov
dec
out
sbb
(bad)
sbb
in
aas
leave
add
data16
std
jbe
add
add
call
leave
and
jmp
jecxz
js
gs
scas
movs
ficomp
(bad)
out
js
das
xchg
lea
mov
mov
movs
inc
mov
int3
in
dec
repz
fdivr
push
out
sbb
or
clc
dec
je
cmps
cmp
sub
inc
cmp
mov
push
fwait
stos
pop
mov
dec
lods
xchg
dec
cmp
fiadd
inc
adc
mov
hlt
jl
mov
jge
push
dec
xor
mov
(bad)
push
push
hlt
fimul
je
dec
xor
jl
xchg
lock
in
(bad)
fisub
jnp
dec
sub
mov
lods
movs
cmc
pop
fld
xor
call
fneni(8087
ins
adc
mov
sbb
movs
adc
inc
xchg
xor
ss
ins
lods
sub
inc
mov
jmp
or
cld
cdq
cld
sub
(bad)
cmp
push
stos
push
leave
cmp
xchg
repnz
neg
sbb
nop
push
mov
push
adc
jle
scas
xor
mov
mov
cmp
mov
ins
hlt
and
mov
pop
div
xchg
stc
mov
aad
sahf
cwde
cmp
mov
(bad)
pop
and
inc
push
test
cmp
call
lods
js
sahf
je
mov
cmp
dec
shl
std
mov
mov
lods
in
in
cs
in
pushf
test
mov
or
adc
sub
test
test
adc
sbb
cmc
hlt
xchg
cs
hlt
dec
mov
ss
loopne
data16
and
cmp
int
in
call
dec
jo
test
dec
dec
push
test
sbb
mov
in
mov
mov
jns
push
sub
jb
mul
and
push
aad
ss
push
std
clc
add
jl
mov
clc
dec
adc
sbb
not
loope
rcl
mov
scas
fbstp
pusha
and
mov
inc
cmp
out
fs
pop
fsub
jne
pop
push
enter
sbb
jmp
add
cdq
pop
(bad)
mov
mov
ins
iret
(bad)
(bad)
sti
enter
retf
retf
inc
cmps
pop
pop
aaa
and
fimul
push
adc
sbb
cmp
add
or
or
mov
or
int
jo
lods
int
pop
es
nop
cmp
add
mov
inc
inc
cmp
dec
sbb
or
test
push
add
sahf
fild
cmp
cmp
fld
add
or
push
fbstp
pop
push
pop
push
inc
call
sbb
inc
scas
xor
rcr
in
and
cdq
xlat
(bad)
int
sahf
push
xchg
jmp
stc
cmp
sbb
fnsave
push
sbb
mov
mov
sub
aas
out
push
xor
cmp
pop
ret
jge
jle
cmc
xor
retf
mov
inc
fsub
cli
inc
mov
dec
shl
push
cld
dec
rcl
popf
jno
les
lea
into
(bad)
(bad)
popf
ins
nop
jns
mov
push
dec
pop
cmp
ins
push
dec
inc
sbb
sub
(bad)
push
aam
pop
jo
mov
call
fistp
sub
not
fist
jno
shr
mov
sub
pop
into
daa
pop
mov
dec
xor
jo
popf
jo
push
push
add
jecxz
and
sub
scas
or
mov
sbb
daa
mov
in
or
cld
jnp
stc
test
(bad)
inc
cmp
into
mov
xchg
fisub
mov
mov
imul
fcomi
sbb
std
add
pusha
jp
in
fisttp
or
or
cmp
mov
xchg
fwait
les
push
push
sti
or
into
push
pop
jmp
pop
dec
out
inc
loope
push
mov
push
add
mov
mov
jnp
out
retf
leave
cli
jae
xchg
cmp
xor
addr16
xchg
addr16
cmc
sti
xor
jge
fmul
and
(bad)
cmp
adc
daa
es
arpl
dec
fsub
loop
int3
inc
cmp
push
mov
xchg
mov
and
and
outs
push
and
jno
test
pusha
inc
mov
xor
adc
xor
cmp
pop
mov
dec
(bad)
ins
imul
stos
addr16
xchg
add
jmp
daa
push
pop
dec
inc
into
repz
into
cmp
mov
fldenv
cmp
sti
scas
mov
sub
fsubr
jle
fistp
(bad)
cli
inc
xor
popa
enter
adc
push
test
jae
das
push
or
sub
and
push
loop
out
ret
mov
rcr
aad
retf
leave
sbb
dec
inc
aas
test
je
or
loope
fnstsw
shl
loopne
pusha
xor
pop
cmps
sub
retf
lds
jne
sbb
test
clc
loope
or
jo
push
int3
push
retf
jmp
jl
or
xchg
ficom
into
jne
mov
out
loop
enter
cmps
sti
add
xchg
sbb
fiadd
xlat
stos
or
xchg
scas
ret
fnsave
cmp
jmp
test
dec
je
xchg
sti
fs
xchg
ret
mov
stos
mov
add
pop
retf
cmc
xor
mov
cmp
ret
js
dec
out
pop
dec
loopne
inc
sbb
mov
push
repnz
jg
leave
ficomp
pop
jmp
mov
add
ffreep
fnsave
(bad)
fstp
sub
dec
fld
rol
nop
sub
lods
xchg
mov
popf
fsin
xchg
xchg
sti
fsubr
mov
sti
dec
or
adc
sub
movs
push
cdq
stos
mov
add
or
fisubr
push
scas
pop
xchg
push
add
push
add
dec
push
into
in
imul
loope
jp
xchg
dec
test
mov
lods
or
loope
xchg
pusha
pushf
(bad)
sub
je
mov
lods
jns
xlat
push
and
jg
stos
xchg
mov
mov
mov
(bad)
fimul
xor
cwde
pop
fmul
aas
nop
push
(bad)
repnz
call
mov
sbb
loopne
sub
lods
mov
fisttp
mov
nop
call
popa
loopne
in
mov
add
pop
jbe
popa
pop
and
jmp
movs
stc
cwde
cmp
or
sub
int3
xchg
jmp
ins
xor
rol
add
mov
nop
mov
jne
add
sub
sbb
outs
jge
cmps
test
cld
cmc
arpl
cmp
inc
xchg
lods
and
add
pop
adc
dec
clc
xor
dec
arpl
jl
imul
mov
enter
jp
cld
ds
push
jmp
ins
(bad)
push
and
imul
mov
or
mov
hlt
and
jmp
mov
pop
mov
or
or
in
cmp
sbb
adc
or
sbb
int3
mov
add
sbb
enter
jp
mov
test
test
ror
sub
ins
(bad)
push
sub
cs
lock
jl
mov
aaa
mov
clc
ins
out
push
ds
std
les
sub
in
(bad)
jle
dec
mov
and
dec
fdiv
(bad)
int3
cmp
das
mov
hlt
movs
out
jns
fisttp
sub
daa
aam
and
fbstp
or
or
xchg
sub
or
pop
jb
sbb
cmps
push
xchg
fsubr
pop
aad
xchg
dec
into
xor
push
jp
mov
movs
adc
adc
or
stos
std
jecxz
cmp
jp
cli
pusha
jmp
(bad)
ret
es
ins
jnp
or
pop
cmps
dec
mov
fcomp
repnz
fidivr
iret
xor
inc
or
xchg
(bad)
out
fmul
test
add
cmp
pavgb
js
cs
or
sub
fisubr
sub
pop
xor
xchg
aad
jge
aam
adc
popa
pop
adc
xor
cmc
dec
retf
ins
jecxz
ins
pop
js
fwait
mov
call
shl
cmp
stos
jge
icebp
fsubr
fild
mov
mov
jecxz
enter
sbb
push
inc
imul
jmp
pop
pop
cpuid
push
sbb
in
sbb
in
inc
int3
ror
ror
mov
fisttp
sahf
mov
ret
cwde
in
pop
fs
je
imul
mov
mov
sbb
sbb
loopne
cmp
or
pushf
jmp
iret
dec
leave
out
in
dec
mov
push
sbb
mov
xchg
js
mov
cmc
mov
jge
clc
call
xor
test
and
nop
jnp
xchg
cmp
retf
sbb
cld
movs
xor
dec
mov
mov
mov
jl
in
sbb
lods
mov
push
xchg
hlt
pop
dec
pop
mov
retf
lds
or
not
mov
stc
fcomp
call
fld
sub
push
fisubr
test
lahf
mov
imul
and
out
rol
or
push
adc
cmp
or
lods
pop
jns
adc
stos
inc
lods
sub
in
clc
sub
push
sbb
push
mov
lods
push
and
clc
pop
fst
lahf
out
sar
mov
pop
sbb
adc
jp
lods
pop
mov
sub
cld
addr16
add
sbb
or
mov
popf
fnsave
arpl
cld
rcl
or
sub
cmp
xchg
das
ss
push
cmp
fistp
xor
push
icebp
(bad)
into
rcr
mov
sub
lods
clc
mov
dec
adc
(bad)
arpl
push
mov
aam
cld
in
jne
ds
pop
mov
call
sub
aaa
mov
imul
sbb
xor
dec
jge
nop
pop
data16
cmps
adc
xchg
ss
jl
jle
xchg
sub
cmp
scas
push
cmp
pop
mov
xchg
in
retf
add
jp
sbb
jmp
test
(bad)
xchg
imul
cdq
mov
jl
mov
mov
push
popf
and
mov
or
call
in
adc
cmp
dec
enter
inc
sub
mov
(bad)
loopne
fsubr
jo
or
rcr
call
sti
mov
and
pop
test
ds
add
sahf
push
pop
cwde
cmps
jo
mov
lods
pop
sub
sub
adc
dec
jl
dec
cs
ins
dec
dec
jns
push
jl
mov
movs
js
fmul
mov
test
lods
test
jo
sbb
xchg
jbe
and
into
mov
cwde
mov
mov
inc
pop
les
xor
pop
cmp
add
sar
stos
cmp
cli
mov
int3
cld
out
cmp
sub
ins
aas
inc
arpl
push
pop
clc
mov
sub
mov
stos
outs
mov
cmp
inc
jp
sbb
fcomi
xchg
mov
inc
outs
ds
les
and
or
cmp
leave
dec
sbb
pop
pop
mov
clc
int
daa
push
push
sbb
add
cmp
lds
pop
lods
or
mov
cmc
pushf
and
in
cmp
shl
es
mov
(bad)
stc
or
popa
stos
dec
into
lods
mov
mov
lock
(bad)
cmp
mov
adc
or
scas
test
dec
in
cld
sub
cmc
xor
fisub
sbb
jns
xchg
mov
mov
xchg
push
xor
ret
sbb
or
fdivr
lahf
cmp
adc
movs
dec
cdq
jle
or
imul
jb
fdivr
(bad)
fcomp
adc
aas
inc
dec
jmp
hlt
inc
xchg
jl
es
daa
sahf
out
xor
ins
mov
mov
push
dec
retf
push
sub
sub
xchg
pop
mov
push
lods
lods
dec
aas
mov
jbe
bound
enter
mov
movs
sub
pop
mov
mov
fdiv
stos
cmp
mov
outs
test
fstp
lea
push
pop
jge
pop
pop
imul
mov
lods
mov
jl
mov
dec
cmp
fnstsw
mov
or
fmul
xchg
push
call
mov
cmp
dec
addr16
dec
mov
ja
mov
cmp
jb
ss
vmovapd
sbb
pop
pop
repz
and
(bad)
pusha
scas
sahf
jecxz
(bad)
lods
es
out
scas
jmp
loope
mov
jle
or
pushf
inc
fsubr
enter
jnp
leave
je
xchg
imul
aad
adc
jmp
mov
(bad)
cmps
mov
cwde
cli
into
push
mov
cwde
mov
inc
sbb
pop
sbb
dec
or
sub
mov
test
stos
sub
xchg
sub
aam
push
aaa
xor
je
push
cmp
nop
clc
int
sbb
and
outs
add
mov
mov
pop
dec
test
hlt
xchg
stos
test
mov
mov
mov
fs
mov
sbb
(bad)
mov
and
(bad)
popf
and
lods
enter
out
mov
or
sub
mov
or
or
es
loope
cmp
in
xlat
mov
push
stos
cmp
xor
cwde
jmp
scas
ret
inc
mov
fs
mov
or
gs
movs
mov
xchg
and
xor
fadd
xor
enter
mov
adc
mov
adc
dec
in
jmp
sub
mov
dec
dec
adc
inc
or
test
sbb
fsubr
pop
sub
cwde
addr16
mov
xor
addr16
cbw
cmp
add
fcom
cmc
push
or
jge
inc
out
mov
add
jnp
mov
sbb
adc
in
dec
fidivr
mov
std
stc
std
mov
fsin
inc
inc
aas
cli
mov
(bad)
(bad)
test
in
jnp
or
neg
xor
add
mov
add
test
inc
or
push
mov
sbb
jle
scas
mov
je
sub
cmp
into
js
pop
int
iret
cmp
push
int
into
xlat
sub
ins
xor
push
dec
fcomp
push
outs
jge
in
dec
and
jne
inc
pop
pushf
hlt
movs
scas
sbb
mov
in
call
scas
inc
fcom
call
jp
frstor
int
ror
dec
cdq
aam
jns
dec
sbb
cmp
aas
inc
cmc
sub
xor
int3
jmp
aad
pop
leave
push
rol
or
dec
mov
cmp
push
shl
test
adc
test
in
and
pextrw
test
jmp
mov
mov
es
into
xchg
test
push
jb
call
bswap
cmp
inc
cdq
ins
call
mov
enter
sub
or
or
popf
test
adc
xchg
in
cmovl
jnp
cli
into
popf
or
test
frstor
jmp
fistp
sub
sbb
push
or
mov
mov
outs
fucomp
cmc
fild
pop
inc
xchg
inc
mov
sub
lods
repz
mov
rcr
cli
call
xchg
jmp
dec
mov
sbb
xchg
bound
(bad)
aam
mov
scas
scas
mov
push
scas
stc
push
aam
inc
pop
cmc
bound
pushf
xchg
loop
xchg
pop
inc
ret
outs
call
sub
lea
ja
das
mov
fs
mov
imul
outs
addr16
sub
and
popa
mov
div
or
sub
pop
loope
cmp
mov
pop
pop
jb
test
mov
scas
jne
push
mov
jae
or
stos
test
bound
shr
test
mov
mov
fdivr
jb
xor
(bad)
inc
leave
lahf
sahf
sahf
stc
bound
ret
dec
pop
aas
xchg
ror
jp
mov
and
mov
enter
int3
mov
call
mov
leave
xor
(bad)
std
stos
cmp
jbe
and
outs
pop
pop
fwait
pop
rcr
mov
sub
dec
and
sbb
dec
test
jns
call
sbb
adc
jl
hlt
push
scas
mov
gs
cld
(bad)
stc
sbb
test
enter
shl
sar
ds
sub
outs
push
test
sti
shl
int3
leave
pop
leave
dec
sub
arpl
cdq
mov
push
xchg
dec
mov
jne
cmp
xchg
(bad)
inc
pop
jo
and
out
add
test
dec
gs
mov
shl
test
loopne
cmp
std
jnp
dec
pop
rcr
in
jne
add
sbb
jmp
jns
pop
jmp
in
mov
es
bound
stos
dec
sbb
test
out
xchg
stc
fcmovb
jecxz
pop
or
push
jns
cmp
imul
inc
mov
test
jge
pop
xor
retf
out
or
add
sar
sub
lock
add
cmp
mov
cs
push
scas
push
or
ja
jno
xor
mov
in
cmp
mov
lahf
pop
or
pop
sub
pop
inc
xchg
dec
mov
push
adc
and
scas
lods
mov
sub
jp
jge
stc
das
retf
pop
adc
test
jg
push
jae
or
mov
sub
dec
pop
mov
loopne
push
cmps
cs
pop
ja
mov
aam
and
sbb
repz
jnp
into
jl
jns
aad
sbb
sbb
dec
pushf
and
sub
mov
dec
mov
and
sub
cmp
ds
sub
and
jp
(bad)
out
mov
ins
inc
in
jnp
retf
(bad)
push
or
xor
push
gs
scas
mov
or
ds
xchg
pop
xor
cdq
inc
jbe
aad
xchg
shl
cdq
popf
cmc
or
push
push
pop
outs
jmp
push
(bad)
fidiv
pop
inc
fs
mov
dec
mov
rcr
fdivr
scas
and
scas
fsubr
sbb
inc
add
jb
std
shr
sub
lahf
(bad)
adc
cmp
pop
jae
dec
repz
mov
xor
ss
jb
add
push
(bad)
push
cdq
or
bound
pop
cmp
xor
fadd
dec
ror
outs
shl
push
cdq
pop
xchg
and
dec
push
rcl
repz
ror
or
push
aam
xchg
cdq
mov
nop
push
repz
push
xchg
(bad)
repnz
sub
popa
outs
xchg
bound
lods
xor
je
sbb
push
mov
popa
je
mov
retf
nop
std
clc
popa
mov
es
pop
push
imul
cmp
mov
cmps
clc
leave
xor
push
lock
pop
loop
dec
out
dec
add
mov
push
into
nop
lods
or
imul
push
xchg
aas
mov
outs
jb
jnp
mov
(bad)
in
shl
sub
mov
ja
push
cld
mov
fcomp
push
jecxz
cld
loopne
cmp
fcomp
outs
sahf
neg
(bad)
xchg
aam
add
sbb
jge
adc
rol
lods
dec
in
adc
(bad)
xchg
push
stos
addr16
xor
scas
hlt
cwde
test
out
fdiv
rcr
jl
jg
out
cmps
push
jae
imul
in
or
xchg
ret
pusha
mov
jmp
push
push
pop
push
clc
clc
sub
adc
sub
clc
fldcw
inc
jecxz
stc
in
rcr
push
mov
cwde
mov
xlat
scas
fcomp
cli
rcr
or
fld
sub
cli
pop
aam
test
pop
mov
fcmovu
fdiv
pop
mov
aam
fnstcw
shr
fdiv
(bad)
mov
mov
pop
sbb
call
and
test
rol
ins
add
je
dec
inc
add
push
nop
inc
dec
jmp
dec
pop
mov
inc
cwde
jge
xchg
mov
xor
mov
jns
out
push
imul
imul
test
pushf
mov
pop
sub
mov
push
jne
retf
add
mov
jecxz
mov
push
dec
in
hlt
cmps
pop
outs
cmp
ficomp
xor
mov
nop
pop
xchg
pop
ret
loopne
test
popa
pop
lock
cmp
lods
and
push
pop
daa
out
jl
test
cdq
or
aaa
sti
jle
retf
aaa
test
pop
lahf
mov
outs
and
test
inc
(bad)
jg
xchg
push
fldcw
push
clc
sbb
jecxz
jmp
pop
dec
fidiv
add
int3
jg
mov
lods
loopne
ja
bound
mov
sub
lea
push
lea
in
sub
pop
fwait
mov
jl
or
push
imul
scas
xor
or
nop
sbb
xabort
cmp
dec
cmp
fsub
lods
jmp
mov
adc
fwait
pop
stos
es
loop
mov
mov
ficomp
retf
pop
cwde
jnp
mov
adc
cmps
int3
and
fucom
sub
loop
enter
fsub
fdivr
or
ficomp
add
and
adc
pop
(bad)
cmp
repnz
mov
icebp
lods
mov
in
cld
xchg
pusha
adc
nop
pop
jle
xchg
jno
push
sub
sahf
push
in
xor
pushf
sar
or
in
mov
push
ror
jp
(bad)
ss
pusha
jg
jbe
jl
inc
cmp
sub
iret
pop
scas
jl
pop
dec
stos
mov
adc
push
or
in
ror
pop
es
(bad)
or
sub
dec
push
sahf
xchg
clc
or
imul
fsub
fld
jmp
in
cmp
fstp
inc
movs
cmp
mov
adc
test
push
sar
xchg
mov
mov
fnstsw
and
or
aaa
dec
xlat
stos
(bad)
stc
cmp
test
xchg
push
arpl
or
call
sub
int3
arpl
jns
mov
(bad)
retf
sti
out
pop
sub
xor
jl
adc
ret
cwde
push
call
ja
int
push
les
popf
mov
and
mov
push
cmp
imul
lea
sahf
cmps
clc
and
jle
sti
sub
sbb
cmp
imul
cmp
mov
scas
cli
(bad)
in
mov
push
adc
adc
dec
dec
shl
call
xchg
scas
mov
hlt
cld
hlt
test
fbld
jge
or
push
or
outs
mov
sbb
and
les
movs
xor
or
or
sub
cdq
mov
sbb
jmp
or
cmp
dec
ss
adc
loopne
dec
retf
pop
shr
adc
or
fsubr
or
dec
sbb
sbb
outs
stos
sbb
sahf
mov
pop
int
out
arpl
sbb
or
mov
ds
adc
ss
int3
imul
inc
or
sbb
call
pcmpgtd
mov
sbb
jns
jns
mov
int
and
es
sar
jmp
ins
cdq
mov
in
ror
cmp
dec
js
mov
sar
and
inc
mov
sbb
out
mov
dec
ins
lods
leave
mov
push
pop
psrlw
mov
nop
push
cmp
and
neg
popa
sbb
jb
push
repz
imul
or
push
push
sub
pop
push
loop
xchg
dec
fcomp
in
aas
pop
add
shl
push
xchg
movs
lahf
cmp
adc
push
jl
sub
push
lds
xchg
leave
lods
push
xchg
enter
dec
fidiv
test
iret
sahf
stos
cwde
pop
dec
sub
sbb
sub
or
retf
xchg
scas
cmp
mov
jns
adc
push
inc
popf
sbb
enter
fs
pop
in
aaa
sbb
ds
pushf
out
adc
lods
std
dec
jmp
loope
mov
sub
dec
mul
sub
out
inc
mov
imul
loopne
sbb
cmc
jl
jmp
xor
mov
push
jl
in
sar
mov
test
clc
push
sbb
shl
xchg
adc
sub
push
sub
test
movs
mov
(bad)
daa
clc
mov
and
mov
lods
cmp
out
or
jmp
fimul
pushf
jg
dec
sbb
test
ret
pop
add
mov
retf
call
js
push
push
jno
enter
pop
push
aaa
and
loop
iret
lock
and
fstp
pop
or
cmp
xor
cmp
pop
inc
dec
call
cli
mov
cmp
sahf
adc
fstp
push
add
test
sub
xchg
mov
out
cld
jmp
push
test
ret
sub
cli
stc
mov
mov
ins
sti
or
dec
pop
hlt
or
popa
dec
pop
pop
xor
mov
mov
sbb
in
or
pop
push
cs
push
mov
xor
lods
lods
or
test
push
xlat
pop
sbb
neg
(bad)
pop
pusha
cmp
jge
inc
or
push
stos
adc
scas
call
out
xchg
pop
dec
or
mov
jle
jmp
aaa
mov
sub
ins
inc
cld
fcom
push
fdiv
ins
xor
shr
jno
test
mov
imul
push
nop
fadd
fmul
pushf
sbb
xlat
outs
jbe
js
sub
sbb
call
xor
dec
in
add
sbb
mov
enter
out
clc
fistp
mov
clc
in
int
dec
js
pop
xor
pop
and
out
push
lock
jmp
or
stc
dec
mov
push
mov
pop
jnp
cmp
mov
or
(bad)
fdivr
clc
cli
push
or
push
sub
sbb
sti
call
cli
pop
in
jnp
clc
pop
(bad)
pop
fcomp
dec
jp
fsub
adc
into
push
retf
pop
fiadd
mov
cmp
(bad)
loopne
xchg
push
jbe
sub
or
enter
inc
inc
sub
sub
popf
mov
sub
cld
lds
xor
jnp
or
stc
push
xor
packuswb
push
pushf
popa
mov
sub
adc
mov
js
or
sar
adc
jle
push
dec
jge
addr16
into
and
inc
gs
push
lods
or
ss
pop
ins
fbld
or
adc
in
mov
aad
add
int
xchg
enter
fwait
lods
or
clc
cmp
adc
cld
inc
push
or
or
clc
cwde
dec
mov
dec
add
push
mov
rcl
adc
xchg
movs
jg
xor
jbe
mov
cmp
cmp
loope
cmc
jnp
js
je
mov
pop
cmp
leave
xchg
pop
daa
sub
mov
sar
movs
cmp
mov
js
push
jl
sbb
mov
retf
dec
push
scas
or
clc
imul
pop
and
fld
aam
jl
mov
or
add
cmc
xchg
inc
mov
movs
lahf
ja
dec
sets
mov
pushf
push
sbb
mov
xor
fisttp
int
dec
int
push
pushf
sbb
(bad)
call
xchg
(bad)
sub
dec
jge
jmp
popa
outs
cmp
cld
(bad)
(bad)
not
add
mov
sub
sbb
aam
mov
xor
pop
sub
cwde
inc
cs
push
push
sub
jno
jl
(bad)
xor
in
in
ficom
cmp
or
or
outs
mov
mov
or
jmp
rcl
sub
push
sub
and
push
fwait
cmps
inc
jns
(bad)
fwait
pop
dec
pop
dec
pushf
dec
push
push
push
jne
cmp
fdiv
sbb
shl
xchg
retf
cmc
call
out
mov
(bad)
mov
mov
mov
push
lahf
or
cmps
test
out
dec
pusha
fstp
scas
hlt
js
cld
sti
pop
test
or
jge
push
inc
sbb
jae
cld
stos
out
cld
in
mov
jp
mov
cld
cmp
add
jl
iret
xchg
pop
and
xchg
out
in
pop
imul
xor
jmp
aam
xchg
and
and
cli
sbb
mov
(bad)
mov
and
xlat
outs
adc
repnz
cmps
in
lahf
push
enter
mov
retf
xor
repz
div
and
in
jp
push
mov
hlt
das
sbb
cmp
cmp
cli
cli
xchg
cwde
xor
pop
xor
and
outs
bound
(bad)
mov
daa
cdq
xor
cdq
mov
xchg
mov
pop
sub
xchg
into
sbb
in
(bad)
js
inc
test
(bad)
mov
or
call
inc
sbb
jmp
ins
xor
mov
xor
mov
xchg
leave
cld
loop
mov
mov
(bad)
push
cmp
xor
and
(bad)
repz
add
cld
movs
or
sbb
(bad)
(bad)
sbb
fdivr
jle
fdiv
pusha
mov
sub
xlat
dec
xor
or
lock
fsin
not
pop
(bad)
repz
out
and
in
sub
(bad)
sub
or
sbb
ret
mov
adc
xchg
jo
cmp
sub
test
xor
jl
push
mov
fwait
shr
out
out
fdiv
(bad)
cli
and
pop
sbb
mov
cmp
sub
cmp
fcomp
mov
imul
rol
cmps
call
xor
pop
sbb
dec
in
adc
xor
add
adc
add
dec
aas
call
fs
cmps
sbb
test
cmp
or
pop
dec
lahf
sub
mov
mov
sub
fld
shr
sahf
fwait
sub
and
xchg
stos
stos
gs
adc
popa
rol
test
hlt
mov
and
or
mov
jl
cmc
push
inc
sahf
mov
mov
mov
mov
stos
sbb
cwde
mov
dec
out
les
cmp
lods
out
inc
sub
and
js
out
adc
sti
test
cmps
sbb
jg
add
inc
fisub
mov
mov
jmp
mov
add
call
pop
sar
jmp
and
hlt
push
call
xchg
fcmovb
push
loopne
mov
jno
cmp
push
js
jmp
into
hlt
jge
xor
lahf
mov
shl
dec
(bad)
xor
fs
fld
pop
or
fnsave
xchg
dec
dec
jmp
cmp
cmps
lea
jb
test
push
repz
neg
rcl
call
xor
cmp
mov
mov
add
jge
cmp
cmp
imul
icebp
push
xchg
stc
ret
xchg
out
in
xor
aaa
out
loop
pop
hlt
aas
pop
or
push
jl
je
daa
inc
pushf
push
inc
xchg
xchg
gs
sub
sub
out
add
shrd
sub
sbb
dec
cs
xchg
xor
retf
inc
loopne
lahf
(bad)
jl
adc
out
pop
and
mov
push
sub
mov
pop
dec
rcl
jns
push
outs
loopne
je
imul
inc
sbb
jle
mov
mov
push
pop
push
ss
outs
mov
pop
mov
int3
js
mov
les
mov
nop
test
lods
cmp
add
mov
retf
sub
cld
mov
ins
pop
loope
ss
push
pushf
shl
mov
push
xor
jmp
leave
out
mov
lods
mov
ins
inc
pop
xor
push
loopne
push
xor
ins
cmp
jbe
mov
mov
hlt
gs
mov
xchg
sub
lods
mov
mov
mov
vpunpckhbw
cmp
xor
cmp
dec
mov
lea
jns
or
fstp
mov
xchg
imul
movs
call
js
mov
popf
xor
mov
jle
push
cli
jnp
or
cli
mov
cwde
cmp
scas
mov
cwde
jg
imul
mov
test
push
fistp
xchg
jmp
jp
or
rol
cmovbe
inc
mov
cdq
mov
jns
fcmovu
ror
jp
test
pushf
jle
sar
scas
fdivr
push
or
and
cmp
jnp
test
lea
sub
dec
sbb
in
pushf
clc
sub
cmp
out
add
xor
sub
in
jge
aam
add
sbb
out
ret
mov
cmc
retf
sbb
addr16
mov
mov
(bad)
mov
call
int3
(bad)
stos
or
push
std
adc
stos
xor
xor
fsub
(bad)
sub
mov
loopne
cmp
popf
push
dec
and
pop
add
repnz
push
push
mov
int
lods
xlat
repnz
mov
or
lods
(bad)
xchg
xor
sub
dec
test
xchg
hlt
enter
and
dec
inc
sahf
and
popf
adc
inc
data16
cmp
adc
push
fidivr
or
pop
clc
clc
sub
mov
dec
adc
adc
pop
dec
sub
pusha
add
xchg
inc
cld
cmp
clc
fadd
jecxz
inc
pop
fs
out
les
cld
fwait
inc
sbb
rcr
jmp
xor
rcr
in
cmp
stc
xor
cs
sbb
dec
out
jbe
mov
stos
and
leave
(bad)
xor
fsubr
push
mov
idiv
jg
cmc
dec
mov
fcomi
ins
mov
aad
(bad)
out
pop
(bad)
xor
lock
outs
lock
ss
in
ss
dec
sub
aad
mov
loopne
shl
movs
cmp
jp
pop
jno
out
aaa
pusha
sub
mov
arpl
retf
in
push
push
xchg
sbb
ins
pop
mov
lahf
(bad)
lds
add
in
ss
add
out
clc
stos
aaa
fsubr
push
outs
sbb
loopne
jge
retf
or
push
sub
vmulss
scas
mov
ja
ins
push
std
cmps
push
pushf
pop
xor
mov
xor
pop
(bad)
rol
jo
enter
mov
push
jnp
out
loop
out
adc
xor
add
adc
mov
mov
mov
(bad)
stc
add
cld
(bad)
pop
or
and
(bad)
sbb
adc
fsubrp
sub
mov
and
mov
fsub
js
dec
pusha
dec
scas
sub
inc
cs
popf
xor
sbb
mov
sbb
sub
(bad)
dec
add
ja
enter
sti
cld
sbb
mov
in
adc
hlt
test
addr16
dec
pop
sbb
dec
daa
adc
popa
iret
lods
cdq
daa
adc
into
pop
ds
jp
movs
or
in
mov
test
or
or
imul
sub
xchg
hlt
dec
std
add
fstp
ins
or
cdq
pop
stos
cmp
movs
in
leave
(bad)
sub
jle
push
stc
(bad)
sub
or
lods
leave
dec
lea
cmp
nop
int3
sar
adc
or
or
xor
outs
stc
add
sub
mov
mov
jmp
fstp
mov
shl
cmp
pop
out
xor
xchg
push
ins
push
push
mov
psubsb
loope
out
dec
ins
pop
xchg
inc
js
xor
sar
mov
cli
scas
outs
fdiv
or
jnp
sti
ins
mov
push
cmp
xor
sbb
cwde
push
inc
jbe
cwde
cmp
test
mov
into
out
repz
mov
pop
in
adc
lock
sbb
sub
fwait
inc
pushf
adc
popa
aas
fisubr
js
inc
adc
dec
lock
arpl
call
inc
jg
add
pop
xchg
or
out
movs
push
or
adc
cmp
aad
aad
dec
pop
outs
add
and
into
(bad)
ret
xor
arpl
sub
mov
mov
scas
gs
stos
add
call
mov
or
(bad)
mov
fs
lods
jo
adc
add
mov
mov
pop
push
cs
das
xor
pop
and
pop
aad
xor
je
push
lock
fcomp
or
xchg
jmp
in
(bad)
js
in
leave
enter
mov
jle
jo
pop
cmps
clc
sbb
xchg
or
mov
inc
pop
sbb
repnz
out
mov
mov
mov
or
jb
mov
sub
fisttp
push
inc
fadd
cmp
lock
outs
cmps
mov
mov
pop
int
das
movs
sub
movs
cmp
jmp
hlt
xor
ds
inc
in
cmp
pusha
je
lea
dec
js
js
cmp
std
daa
push
in
sahf
in
out
call
retf
pop
mov
into
jle
stc
ror
adc
dec
xor
jg
call
jl
inc
jge
jae
cmc
jge
or
and
sub
jge
dec
push
adc
fisttp
sbb
(bad)
ficomp
jp
xor
sbb
jge
stos
sub
mov
mov
aaa
fstp
(bad)
loop
pushf
or
push
jbe
dec
outs
or
test
das
js
in
sti
in
adc
mov
cmps
push
pop
arpl
push
inc
jl
pop
dec
jo
repz
mov
cdq
dec
popf
push
sub
jecxz
(bad)
mov
jmp
das
push
mov
out
movs
cld
push
inc
cld
fld1
xor
std
mov
push
sub
mov
inc
mov
lods
add
loope
sbb
ret
cmp
call
(bad)
shl
jno
sbb
aaa
pop
xor
cmps
pop
(bad)
add
and
(bad)
fwait
ds
lock
pop
sahf
xchg
daa
add
out
jno
sbb
mov
outs
cmp
push
xchg
js
dec
ins
dec
pop
ret
movs
cmp
or
hlt
jp
and
aad
lods
sbb
or
pop
loop
dec
sar
adc
call
jle
jb
sub
mov
clc
push
xchg
fstp
xchg
push
lods
adc
jmp
daa
clc
sbb
sbb
mov
inc
xchg
test
cmps
out
mov
mov
inc
adc
dec
dec
movs
add
mov
lods
xor
jmp
mov
mov
lods
and
jl
dec
mov
out
fcomp
sbb
fmul
ds
push
and
cmp
jl
mov
mov
mov
fmul
gs
sbb
push
stc
jmp
stos
cwde
sub
clc
or
lahf
cdq
stos
scas
cs
(bad)
dec
call
pop
mov
imul
cs
outs
or
jnp
outs
imul
sub
sub
shr
cmps
jae
and
sub
mov
mov
pop
jmp
and
ins
mov
dec
xor
je
push
leave
inc
ficom
inc
bound
(bad)
mov
test
mov
sahf
add
mov
int3
sahf
add
nop
arpl
fstp
xchg
ss
icebp
dec
sbb
ror
les
(bad)
out
inc
dec
retf
stc
leave
or
mov
sar
pop
leave
loopne
data16
js
call
loop
mov
mov
sub
sbb
int3
in
add
mov
fs
popf
and
cmps
cdq
and
dec
mov
mov
fwait
lea
dec
mov
or
inc
std
ss
or
adc
gs
fisttp
mov
cdq
pop
and
dec
pop
mov
arpl
rcl
dec
pushf
jne
jns
xor
add
mov
int
jb
jl
push
sub
sub
mov
in
add
fs
push
dec
sahf
leave
(bad)
xor
adc
dec
gs
icebp
int
jl
mov
jle
push
fidivr
in
add
enter
aas
sbb
in
mov
ror
or
cmps
sbb
xor
mov
lds
mov
pop
retf
pop
addr16
mov
icebp
mov
mov
push
or
cld
jo
cmp
fsub
push
pop
cmp
jle
out
ins
or
sbb
mov
mov
in
clc
dec
stos
or
in
push
adc
or
bnd
push
int
push
call
sar
out
daa
cmp
(bad)
iret
call
xchg
jmp
lea
mov
mov
fsubrp
(bad)
in
and
inc
inc
or
dec
pop
adc
cmps
mov
push
xchg
sti
stc
jmp
jge
inc
(bad)
and
pop
jb
jo
ins
xchg
dec
call
lock
(bad)
bound
lds
mov
mov
pop
or
loopne
mov
inc
cmp
mov
in
int3
in
jge
and
repz
pop
jl
cmp
or
xchg
stc
lods
pushf
or
loope
outs
mov
cmp
cmp
adc
inc
je
cld
lds
rcr
cmp
cdq
and
fisttp
adc
or
mov
mov
lods
adc
sub
push
cwde
dec
(bad)
test
retf
sbb
or
test
out
dec
outs
pop
(bad)
lds
ret
pushf
mov
pushw
pop
imul
outs
in
push
scas
inc
mov
jbe
fmul
enter
and
adc
sbb
js
pop
push
ds
in
dec
pop
mov
xchg
enter
into
or
sub
call
outs
mov
stos
mov
mov
test
sbb
(bad)
mov
adc
fldlg2
pop
pusha
loope
mov
mov
pop
cmp
shl
aas
mov
and
mov
sbb
or
aam
add
pop
sbb
xor
jg
int3
or
xchg
mov
hlt
dec
test
fsubr
add
push
sub
sbb
cmp
push
mov
xchg
test
mov
mov
cld
inc
rcl
sbb
inc
or
xchg
adc
adc
inc
sbb
jns
adc
push
or
cmp
mov
push
pop
out
es
les
or
cwde
fidiv
jns
mov
or
and
pop
sbb
dec
or
pop
cmp
jl
dec
mov
dec
mov
in
imul
ins
mov
jp
mov
mov
fucomi
fiadd
mov
adc
dec
lahf
pop
push
(bad)
(bad)
lahf
adc
jecxz
mov
xchg
ja
fldcw
mov
and
mov
ja
mov
sbb
dec
iret
cli
repnz
aam
ret
and
mov
aad
stc
imul
int
sub
mov
sbb
push
xor
sub
test
pushf
jecxz
daa
aam
lods
jnp
sub
sbb
mov
dec
pop
stc
dec
loop
pop
out
fnsave
inc
jns
test
and
aaa
sbb
sbb
add
int3
test
stos
enter
pop
mov
or
pop
jg
mov
jmp
pop
sub
adc
push
pop
pushf
inc
sbb
(bad)
loop
out
in
push
addr16
and
cmp
imul
ficomp
ins
sub
jmp
dec
xor
push
fmulp
sbb
mov
xchg
mov
or
fcomp
daa
std
pop
pop
sbb
lods
repz
mov
out
mov
fld
fcomp
sub
test
in
dec
sub
cmps
lea
dec
pushw
ds
mov
cmp
jbe
nop
movaps
lock
pop
pop
pop
sbb
pushf
jg
fst
jns
push
add
fistp
sbb
cmp
pusha
or
sub
xor
popf
xchg
ins
xchg
cdq
cdq
push
mov
shl
test
fnsave
arpl
inc
jnp
out
nop
sbb
test
mov
out
ds
cdq
push
repnz
sbb
push
ins
test
jmp
dec
fisub
fsubr
lea
mov
or
dec
out
iret
imul
icebp
cmc
adc
leave
or
mov
leave
pop
mov
clc
repnz
xchg
add
pop
jno
or
call
dec
xor
outs
jl
add
rcl
test
and
repz
daa
sub
push
ins
ins
mov
das
cmp
gs
xor
xor
pop
add
inc
in
stc
pop
add
jecxz
scas
imul
int
arpl
sub
scas
(bad)
popf
mov
(bad)
fcomp
mov
adc
add
xchg
cld
out
inc
xor
ror
sub
cmp
add
shr
fstp
push
aam
cmp
out
jge
pusha
push
pop
cmc
or
mov
lods
(bad)
scas
enter
pop
fsubr
in
test
cmp
jmp
pop
out
xchg
jne
fucomip
out
cld
js
mov
rcr
gs
imul
in
mov
lea
les
jno
leave
fdivr
mov
push
lods
imul
fstp
clc
cmp
das
or
js
out
int3
adc
jmp
add
mov
pop
sub
mov
mov
scas
mov
jnp
icebp
adc
fadd
sub
nop
dec
loopne
sahf
test
push
imul
ror
cdq
sbb
cli
aas
cmp
dec
aaa
mov
add
ins
ror
jnp
fimul
mov
ficomp
xchg
(bad)
int
out
iret
mov
xor
ins
sbb
out
xor
mov
ret
fstp
int
mov
out
push
test
add
lock
cld
out
pop
push
mov
loopne
and
push
mov
xlat
arpl
push
es
push
or
lahf
mov
inc
neg
sbb
cmp
dec
scas
add
cmp
push
or
(bad)
fild
dec
push
push
cmp
je
repz
inc
mov
lods
out
and
add
xlat
inc
(bad)
mov
jns
sub
mov
ins
mov
mov
pushf
cwde
mov
clc
nop
or
xor
jmp
xor
inc
inc
imul
mov
shl
(bad)
sub
sbb
xchg
dec
or
inc
cmp
pop
mov
xor
add
les
mov
add
sub
stos
icebp
dec
jp
hlt
nop
cmps
sbb
jmp
pop
dec
push
cmp
fnstcw
test
sub
aas
jge
mov
imul
(bad)
out
mov
stc
dec
xchg
ins
dec
jp
cs
cmps
or
cmp
in
cwde
in
xor
out
mov
add
jl
or
xlat
ret
cmps
ret
lods
mov
fstp
dec
pop
ret
add
push
and
adc
(bad)
sbb
mov
push
cs
scas
bound
pushf
fnsave
fstp
cmp
test
stos
mov
fmul
ror
in
mov
jo
pop
jg
mov
test
mov
push
aam
call
sub
cmp
sbb
add
lahf
mov
xchg
stos
pop
cli
outs
and
(bad)
push
lods
loop
pop
add
or
gs
stos
pop
ins
jns
inc
jmp
das
test
xlat
mov
popf
mov
pop
push
mov
mov
sub
(bad)
jmp
mov
mov
mov
mov
xlat
loopne
xchg
mov
sti
cmp
jge
movs
imul
addr16
sbb
jb
jle
mov
dec
je
jnp
adc
shl
mov
bound
sub
pop
adc
fs
jne
mov
daa
mov
test
mov
jmp
shr
dec
inc
scas
cld
xchg
sbb
sbb
add
jo
dec
mov
int3
call
jns
jb
neg
add
ficomp
(bad)
sbb
mov
fiadd
mov
das
dec
mov
add
xor
jg
jl
in
lea
xchg
jmp
pop
jl
addr16
mov
fild
jbe
push
in
lock
retf
mov
mov
mov
int3
push
mov
(bad)
fdiv
cmp
retf
leave
xor
push
lods
fld
mov
mov
retf
enter
stc
sar
enter
(bad)
jae
ret
ins
(bad)
pop
inc
outs
xor
call
pop
(bad)
mov
stos
outs
dec
dec
dec
or
cmp
or
mov
mov
loopne
adc
loop
jl
pop
sbb
mov
js
cwde
shl
xchg
repz
fstp
test
dec
xor
in
es
ret
clc
lock
xchg
mov
mov
pop
icebp
test
mov
and
or
pop
test
mov
into
fcmovnb
mov
xchg
adc
cli
add
lds
pop
push
rol
fwait
push
and
repz
push
sub
push
and
fistp
inc
inc
adc
cli
or
loope
mov
(bad)
sbb
adc
psubusw
fcomp
pop
(bad)
cwde
jo
xchg
js
adc
nop
or
adc
inc
add
sub
and
or
fistp
jmp
inc
mov
push
push
shr
(bad)
hlt
icebp
dec
xchg
fld
jmp
push
and
stc
adc
ror
cmps
jbe
bound
cmp
out
push
pop
test
mov
pushf
mov
dec
jbe
jle
mov
clc
cli
lea
neg
xor
retf
pop
movs
(bad)
xlat
cmp
xor
cmps
dec
adc
mov
sub
push
outs
add
push
cmps
rcr
pop
mov
(bad)
push
sub
add
popf
clc
jo
fild
in
es
fs
jae
lahf
xchg
lods
test
pop
fld
dec
or
xchg
or
dec
jg
pop
int
jle
sub
and
push
ins
cdq
clc
leave
fsqrt
add
(bad)
cmp
das
aas
mov
cld
call
test
in
(bad)
mov
shl
push
or
hlt
inc
call
dec
push
jp
retf
(bad)
fisttp
cld
js
(bad)
dec
jle
outs
shl
dec
xchg
jne
popa
fild
leave
in
pop
adc
(bad)
cdq
(bad)
fst
mov
push
and
loopne
jns
pop
pop
jnp
adc
xchg
mov
mov
ja
(bad)
inc
dec
xor
or
cmc
adc
sbb
jle
lods
repnz
mov
sahf
or
ds
cmp
sbb
iret
inc
cwde
mov
xchg
fcomp
pop
in
in
xor
adc
hlt
test
daa
adc
pop
dec
fdivr
repz
jmp
mov
fist
or
leave
inc
cmp
dec
sub
sbb
ret
mov
pop
mov
sub
xor
pushf
test
pop
fnstsw
(bad)
ss
mov
sti
push
ja
fmul
fldcw
xor
lods
popf
dec
test
push
cmp
iret
and
dec
sub
iret
fcomp
pop
sub
mov
stc
mov
adc
loope
ds
cmp
dec
adc
mov
movs
dec
sub
sahf
stos
xchg
in
mov
cld
test
xchg
test
pop
aas
xor
add
rcr
test
cmc
or
jb
jbe
hlt
dec
xor
pop
jl
cli
and
retf
push
dec
into
dec
into
lahf
push
imul
cmc
addr16
scas
jmp
int
repnz
lea
scas
jb
add
scas
popa
int3
(bad)
sar
shl
out
int3
clc
lahf
pop
sbb
jns
cld
(bad)
in
jle
or
mov
push
jge
pop
out
mov
add
(bad)
ins
clc
sti
dec
and
scas
shr
das
add
xor
push
push
jg
pop
xchg
add
inc
pop
xchg
vpaddd
clc
outs
inc
xor
cmps
lods
xchg
or
shr
in
sbb
xchg
push
sahf
inc
stc
or
dec
mov
mov
mov
add
cmp
sub
es
imul
sbb
lods
les
(bad)
pop
test
push
lea
push
cwde
les
xor
ret
xlat
mov
xchg
pop
adc
dec
mov
jl
arpl
es
movs
add
add
imul
pop
ficomp
ins
fwait
pop
sub
xchg
sbb
jae
pop
dec
int3
daa
adc
jp
mov
pop
push
loopne
mov
dec
imul
fsub
push
outs
and
clc
pusha
xchg
cmps
pop
dec
inc
scas
imul
dec
movs
test
dec
sbb
call
fst
and
xor
fild
clc
xchg
enter
hlt
loop
xchg
and
adc
rcr
adc
dec
push
xor
cwde
hlt
lea
adc
pop
or
fstp
adc
aas
mov
lock
inc
sub
dec
es
shl
jne
xor
mov
mov
out
mov
les
jb
lods
cmps
sbb
dec
cmp
arpl
jge
pop
aam
push
adc
fisubr
jne
ins
aaa
dec
cmp
push
dec
push
mov
and
cmp
ss
jns
adc
add
fwait
dec
cld
mov
dec
ins
pop
popf
cmp
mov
in
mov
mov
push
pop
retf
sub
jnp
int3
jae
int
pop
sbb
inc
test
push
xchg
(bad)
test
cmp
mov
adc
xor
sbb
mov
cli
(bad)
call
inc
cwde
in
mov
mov
add
ds
ins
sbb
and
sbb
xor
pop
ror
push
pusha
icebp
jmp
pop
imul
loopne
cdq
mov
mov
or
jne
xchg
pop
or
loopne
sub
repnz
hlt
sti
out
cmp
pop
lods
adc
mov
(bad)
jp
dec
sub
xchg
add
das
test
push
movs
and
sbb
add
cmp
sbb
ss
pop
mov
pop
in
stos
add
add
or
loope
mov
sbb
xor
xchg
add
dec
and
or
dec
cli
add
cld
mov
jb
jmp
out
mov
popa
test
add
pop
cwde
sbb
adc
mov
call
cs
call
out
fcomp
and
pop
inc
or
fist
neg
int
test
jg
sub
dec
fsubr
popa
addr16
lods
pop
fisubr
test
leave
and
push
in
ror
fst
mov
mov
(bad)
mov
sbb
hlt
jge
mov
movs
lahf
dec
pop
int
fsubr
mov
data16
dec
(bad)
mov
or
out
add
pop
push
ins
dec
jl
sbb
add
rcl
gs
and
sbb
in
ja
mov
stos
mov
push
cwde
scas
and
inc
lea
jge
sub
mov
daa
jmp
pop
jmp
loopne
sbb
mov
(bad)
fbld
adc
(bad)
jbe
adc
repz
test
dec
jge
or
loopne
je
cmp
test
sbb
pop
in
jecxz
push
dec
cmp
jle
pop
or
jp
mov
mov
loope
and
cmp
cld
fsubr
pusha
jbe
hlt
xchg
or
int3
jnp
xor
cmp
pop
mov
dec
mov
stos
xchg
adc
(bad)
mov
and
xor
push
ret
mov
jp
in
mov
sub
push
ins
test
dec
enter
push
data16
jmp
fsub
cmc
xor
outs
je
add
xchg
adc
sbb
cdq
xchg
dec
push
shl
int3
(bad)
mov
sbb
push
icebp
(bad)
jmp
or
sub
dec
cmps
call
sar
pop
or
scas
push
inc
pop
int3
fdivr
and
add
arpl
cs
jl
fs
xchg
push
mov
(bad)
call
pushf
cmp
pop
pop
sub
xchg
jmp
mov
out
jle
sbb
(bad)
sub
aam
sbb
pop
shl
movs
pusha
fdivr
jl
scas
(bad)
aas
int
adc
cmp
add
push
into
outs
mov
mov
adc
fiadd
sbb
xchg
stos
or
call
or
push
aas
(bad)
lahf
popa
xchg
push
fild
fcmovnu
mov
ret
stos
cwde
repz
cld
cmp
add
mov
mov
stos
inc
mov
xchg
test
or
shr
jne
or
inc
pop
js
leave
enter
in
xor
cld
repnz
imul
sbb
sbb
nop
mov
cli
or
jb
jge
repnz
cwde
sbb
xchg
cmp
ficomp
and
fcmovbe
aas
imul
pop
imul
int3
fcmovnu
nop
mov
fldln2
stos
pop
pusha
dec
xor
das
add
popf
popf
sbb
test
jp
out
mov
pushf
in
out
sahf
in
in
fisub
scas
je
sbb
pushf
pop
jne
mov
out
pushf
pushf
mov
stc
jo
xchg
loopne
pop
mov
clc
fcom
pop
outs
dec
pop
arpl
leave
push
pop
xor
cli
test
fidiv
in
test
dec
push
aaa
fwait
call
add
and
scas
and
clc
cmp
dec
cmp
enter
cdq
bnd
imul
ret
dec
pop
ins
or
add
adc
shl
out
adc
sub
fs
pop
sub
mov
int3
xor
call
retf
aaa
xchg
mov
in
lds
dec
push
bound
sbb
xor
(bad)
js
inc
test
adc
add
mov
call
ins
imul
sub
in
ret
jne
jmp
mov
fcmovne
scas
pop
cmp
sbb
fisub
popf
pop
or
dec
icebp
pop
test
movs
loop
push
loope
cwde
mov
mov
jb
fs
test
and
mov
push
cmps
neg
fs
inc
add
sahf
or
mov
xor
(bad)
xor
inc
xchg
mov
cmps
fstp
sbb
add
bound
outs
pop
int
popf
iret
push
xchg
shr
outs
js
xchg
xchg
lods
jno
xor
inc
push
fld
pop
sub
cmp
aas
ror
enter
cmp
jns
icebp
cmp
popf
or
mov
mov
retf
arpl
sbb
add
sub
push
cwde
jl
push
sar
cwde
xchg
dec
ja
add
push
push
shr
(bad)
xchg
js
or
stos
push
fwait
sub
mov
cmp
xchg
neg
fimul
sbb
push
pop
dec
cwde
test
or
fild
in
fiadd
into
dec
mov
sub
sbb
dec
pusha
aam
dec
jmp
lods
stos
stc
mov
lods
mov
(bad)
(bad)
jl
(bad)
sbb
loope
dec
movs
jp
sub
loopne
adc
sub
dec
jge
repnz
add
sbb
sbb
into
sub
mov
cmp
stos
fcomp
or
cwde
mov
xchg
sub
out
mov
push
jns
imul
pushf
jl
je
jecxz
sub
in
add
add
mov
mov
aaa
adc
call
not
pop
xor
ja
jmp
fcomp
int3
mov
arpl
sub
push
sbb
js
sbb
and
push
idiv
sub
es
or
lea
iret
push
cmp
popf
outs
sub
int
jmp
ret
adc
dec
aam
loop
sub
jp
fidivr
jp
jp
or
in
in
push
ret
movs
int
test
cli
jmp
in
ret
pusha
cmp
sub
xor
popf
dec
xlat
(bad)
test
int3
cmp
mov
mov
or
mov
push
sub
into
pop
dec
cmp
dec
test
push
sar
and
(bad)
das
pop
fisubr
jp
or
push
pushf
xchg
adc
iret
(bad)
lods
je
jne
(bad)
std
call
(bad)
repnz
psadbw
pop
dec
mov
mov
and
out
cld
stos
(bad)
(bad)
stos
xchg
cmp
add
push
cmps
(bad)
vmwrite
loop
fucomip
cwde
jle
lahf
add
aad
movs
cmp
lods
cmp
fdiv
pop
pop
jne
xlat
cmp
stos
push
fldcw
adc
call
sub
sbb
test
test
or
mov
dec
out
repnz
jmp
sbb
cmp
outs
enter
cld
pop
(bad)
xchg
div
lods
je
sbb
adc
ins
cli
dec
clc
int3
scas
sbb
dec
mov
mov
in
test
repz
dec
or
cmp
(bad)
popa
stos
lods
inc
repnz
sahf
sub
ror
in
out
stos
xchg
in
mov
mov
aas
imul
mov
sti
je
test
cli
(bad)
(bad)
jl
in
fidiv
js
aaa
mov
dec
adc
sbb
mov
sub
pop
or
inc
pushf
cmp
adc
pop
stos
jns
call
cli
pushf
and
mov
xor
sub
cwde
adc
sub
addr16
jnp
mov
loope
and
cdq
push
ja
test
daa
std
pop
in
or
hlt
pop
fidiv
outs
inc
not
dec
cs
shl
xchg
mov
mov
and
les
adc
push
mov
mov
cdq
mov
dec
cmp
repz
jg
outs
push
jb
lahf
mov
xchg
mov
fsubr
ror
shr
push
clc
inc
dec
push
adc
cmp
sbb
(bad)
cld
mov
rcl
fs
mov
test
mov
fdiv
retf
out
cli
push
and
or
push
lds
data16
call
push
cdq
xor
psubd
lods
test
lock
sub
add
mov
dec
aas
mov
add
rcl
push
dec
xchg
dec
lahf
mov
sbb
push
cmp
(bad)
jno
sbb
mov
or
fdiv
or
in
sub
ins
mov
repz
cdq
movs
iret
sbb
mov
loop
add
in
addr16
or
adc
je
les
jge
(bad)
sbb
jecxz
mov
fucom
pushf
xchg
fsubr
mov
je
sar
mov
imul
mov
(bad)
adc
inc
out
(bad)
out
jl
out
cli
movs
or
cmp
xor
(bad)
out
imul
mov
cmps
push
dec
pop
mov
pusha
sbb
push
mov
mov
xor
mov
or
cwde
push
or
pop
fsubr
pusha
and
js
sbb
loop
jg
loop
bound
mov
int
push
or
cli
adc
cmps
imul
pushf
lods
push
sbb
sub
outs
retf
fcom
fistp
leave
push
pop
cdq
sbb
dec
xor
sbb
stos
mov
call
fidiv
shl
pop
jle
test
ret
or
loope
adc
dec
(bad)
push
mov
loop
push
leave
add
icebp
and
sar
lds
ja
and
stos
mov
fsubp
pop
mov
(bad)
hlt
aad
or
sub
in
mov
and
icebp
jbe
and
jno
clc
pop
xlat
stos
cli
jmp
mov
pop
leave
sub
or
pop
pop
and
sbb
mov
mov
sbb
or
add
push
mov
jns
test
int
fbld
out
mov
add
outs
jno
adc
cmp
in
fistp
cmps
jle
jno
dec
sbb
inc
je
retf
pop
jge
ret
sbb
mov
sbb
in
mov
mov
xchg
inc
mov
gs
cmp
adc
bound
int3
data16
into
xchg
xor
in
xchg
add
dec
cmps
(bad)
sbb
sub
icebp
int
js
adc
mov
mov
mov
xor
push
cmp
sbb
fdivr
adc
xor
loop
and
lods
pop
mov
ss
mov
shr
jae
sub
inc
lds
ror
cld
mov
sub
shl
or
mov
push
aam
in
out
sbb
fsub
into
jle
push
test
cmp
sbb
cmp
ins
mov
sti
imul
push
popf
sub
in
fsubr
push
pushf
mov
movs
imul
fdiv
dec
ja
les
jp
cmp
xchg
call
cld
add
jg
adc
adc
clc
mov
adc
pop
jo
sbb
jecxz
inc
dec
inc
lods
cdq
mov
push
popa
mov
dec
or
mov
mov
pop
cmc
pop
push
leave
mov
jnp
test
aam
xchg
adc
xor
xor
sbb
xchg
idiv
or
(bad)
out
clc
enter
dec
inc
jae
pop
into
dec
(bad)
push
imul
xchg
cmp
mul
dec
fdivr
mov
lods
mov
push
(bad)
or
dec
push
popf
pop
dec
mov
fisttp
sub
retf
lea
(bad)
ins
sub
enter
cld
mov
pusha
or
inc
or
xor
test
mov
mov
xor
sub
sti
fmul
jg
(bad)
test
jp
add
mov
(bad)
and
ins
cli
pop
dec
pop
pop
das
jns
hlt
pop
pop
(bad)
jne
fs
clc
in
cs
mov
pop
or
push
dec
test
mov
or
pop
imul
lods
xor
pop
dec
sub
push
ja
dec
and
ret
sbb
cld
or
jge
inc
cwde
popf
stos
mov
out
int3
inc
sub
sub
mov
add
outs
outs
jecxz
je
mov
mov
inc
(bad)
jbe
or
in
outs
adc
test
or
ss
xchg
int3
int
mov
nop
daa
mov
inc
ds
jecxz
adc
sbb
je
mov
xchg
adc
imul
xor
mov
push
mov
inc
or
push
gs
xchg
push
mov
sbb
xchg
xor
sbb
es
sbb
dec
push
bound
jl
ins
mov
and
or
lods
pop
and
xor
mov
imul
inc
pop
std
and
(bad)
(bad)
jp
daa
iret
fild
lds
aad
cdq
cmp
jno
inc
push
pop
ins
sbb
pop
pop
int
jmp
dec
test
mov
shl
div
jmp
mov
lahf
in
xchg
push
(bad)
sub
ins
(bad)
cld
iret
cli
sub
mov
fstp
fisub
push
and
sbb
cmp
dec
test
cwde
pop
sbb
dec
(bad)
sub
cld
lock
les
inc
fucomp
or
sub
mov
or
inc
dec
jp
add
ficomp
push
mov
ins
retf
jb
jbe
mov
enter
pop
jbe
sub
sbb
(bad)
arpl
jnp
jmp
jb
in
out
fstp
lea
or
scas
not
push
mov
adc
mov
jl
imul
pushf
mov
or
repz
cmp
or
pop
xchg
cmp
or
or
adc
adc
sbb
test
hlt
mul
mov
mov
mov
mov
and
jl
pop
mov
or
sbb
leave
sub
inc
inc
add
stos
ror
lods
ret
imul
call
les
add
repnz
loopne
pusha
pop
or
pop
inc
imul
sub
adc
imul
or
ins
jecxz
ins
dec
mov
mov
mov
or
dec
or
xchg
aas
popf
jmp
pop
test
or
fs
mov
pop
or
or
lock
mov
fadd
or
(bad)
ret
xchg
mov
xchg
shl
xor
and
jo
in
adc
dec
outs
fcomp
inc
add
ins
inc
xchg
(bad)
fcom
mov
sub
mov
or
test
pop
xchg
in
sbb
inc
and
xlat
and
ret
xchg
pop
jg
cmps
dec
xor
push
add
cmp
pop
mov
cwde
arpl
pop
mov
lock
sbb
pop
arpl
push
jmp
pop
in
inc
xchg
sbb
add
sar
gs
pop
dec
std
clc
cli
pop
xor
xchg
mov
outs
cmp
mov
iret
push
cld
inc
xor
lock
int3
or
mov
fcom
jo
xor
in
hlt
mov
imul
adc
or
imul
and
jl
sub
sbb
bound
add
push
pushf
and
addr16
fld
mov
jb
nop
movs
stos
pop
in
adc
xchg
xor
xchg
jp
scas
pop
pop
dec
pop
lock
mov
in
and
popf
cmp
ins
jbe
push
popa
cmp
lahf
mov
jno
lock
repz
fadd
cmp
mov
ret
cmp
jo
stos
dec
bound
xlat
sahf
ror
cmovs
dec
sub
std
mov
fwait
dec
nop
ins
jno
add
cli
(bad)
(bad)
into
aam
es
push
test
in
or
mov
jecxz
mov
loope
or
sbb
cmp
xor
pop
xchg
movs
adc
test
rcr
adc
xchg
push
pop
mov
(bad)
pop
sub
mov
xor
sbb
ret
and
lods
push
mov
jmp
clc
sbb
inc
mov
cmp
in
fstp
enter
mov
jl
push
jmp
xchg
fadd
je
int3
jl
and
dec
inc
fldenv
pop
lods
dec
sbb
pop
cs
mov
div
(bad)
fisubr
and
mov
dec
xor
dec
or
int
cmp
xor
jmp
cld
jbe
xor
cmp
bound
pop
dec
ja
imul
mov
std
loop
cmp
add
or
pop
or
mov
push
adc
push
imul
fstp
jo
mov
rcr
clc
dec
push
stos
sbb
dec
add
adc
lods
es
mov
js
push
jnp
test
cli
jle
jle
(bad)
sub
cmp
adc
(bad)
or
mov
pop
test
xlat
(bad)
es
cmp
jle
jb
loopne
or
call
cmp
or
xchg
cmp
inc
cli
aam
sbb
add
or
mov
cld
fwait
push
(bad)
std
mov
shl
add
and
jbe
push
sbb
mov
pop
pop
lock
adc
pop
je
test
mov
test
sub
jle
sub
inc
dec
in
mov
aad
or
lods
nop
ins
sub
inc
aas
mov
fsubr
pop
outs
div
or
jg
mov
pushfw
hlt
pop
mov
adc
lods
or
daa
adc
jae
repnz
sbb
inc
xchg
and
sub
jmp
cld
or
xchg
sbb
ins
adc
mov
jge
pushf
inc
retf
push
add
jge
idiv
repz
mov
jne
adc
push
cmps
mov
lock
popa
in
bound
or
in
or
cdq
adc
lds
jmp
out
xor
jo
stc
fsub
les
stos
or
mov
mov
adc
mov
push
clc
sbb
lods
and
call
test
arpl
inc
inc
jo
mov
jo
or
(bad)
daa
loopne
iret
mov
rcl
cmp
xchg
jnp
xchg
mov
pop
cmp
cdq
push
push
pop
nop
adc
pop
jne
xchg
mov
iret
repz
std
jg
movs
pop
cs
mov
dec
inc
add
ins
and
mov
in
call
inc
sub
dec
cdq
neg
or
lea
pushf
xor
clc
jg
movs
mov
mov
(bad)
ror
pop
or
sbb
pop
out
ds
movs
or
out
sub
and
js
adc
(bad)
ret
mov
aas
push
fsub
mov
jns
fist
add
pop
sti
sbb
retf
jo
lods
(bad)
lahf
mov
call
jno
outs
and
cs
rcl
mov
dec
mov
mov
inc
in
cld
mov
das
or
cmps
sub
jl
ins
mov
loopne
mov
test
jp
stc
or
cmps
out
sub
sbb
popa
xchg
int3
retf
or
pop
and
inc
cmp
dec
dec
cld
test
movs
mov
sbb
test
ret
or
shl
jmp
and
inc
into
aas
mov
sbb
jbe
lea
les
rcr
sbb
xchg
dec
sar
aaa
mov
ror
dec
lahf
mov
(bad)
ret
in
out
minps
pop
les
mov
aam
push
pop
dec
pop
ins
inc
mov
pop
pop
dec
cmps
pop
jecxz
fimul
pop
inc
fadd
jne
dec
dec
or
in
(bad)
cwde
sahf
es
fisubr
add
cli
cld
add
imul
sbb
in
dec
add
or
dec
dec
enter
xor
cmp
vpmovzxbq
loop
mov
dec
and
or
test
mov
lock
mov
cmp
or
test
mov
in
ja
test
inc
std
(bad)
fwait
xor
pop
in
retf
movs
cmp
out
push
jp
push
jmp
scas
sbb
pop
int
or
test
dec
mov
mov
stc
enter
test
or
pop
pop
imul
jl
popf
call
std
sub
cmp
inc
in
dec
dec
push
mov
cmp
das
jl
xor
dec
cmp
jmp
hlt
push
and
jecxz
imul
mov
loopne
jp
fdivr
inc
imul
out
out
or
sbb
aad
clc
ficomp
or
sub
cmp
ins
and
push
mov
add
rol
hlt
rcr
mov
mov
mov
ja
pop
or
or
xchg
mov
or
das
pop
int
jbe
jle
int
cmp
mov
xor
jp
inc
push
call
leave
imul
sbb
int3
jbe
xchg
fidivr
dec
adc
push
adc
pushf
pop
xchg
sub
pop
dec
jo
test
or
mov
ret
sbb
pop
les
xor
xchg
mov
scas
mov
(bad)
icebp
fucomi
rol
rcr
ins
lahf
push
xor
add
cmp
ins
sbb
mov
(bad)
cmp
jne
test
fsubr
add
add
sbb
sbb
loop
pop
sbb
mov
xlat
adc
fimul
imul
jo
cs
outs
ins
cmp
mov
mov
imul
mov
mov
in
cmp
inc
call
lods
sar
jmp
pusha
mov
or
test
cmp
pop
sub
mov
mov
(bad)
pop
push
pop
add
popa
sbb
nop
sbb
std
js
cs
sbb
aas
or
movs
scas
call
shr
and
jl
add
add
mov
(bad)
lods
mov
xlat
lods
jns
fmul
fiadd
xchg
sti
cmp
mov
(bad)
aas
movs
call
or
mov
shr
test
or
leave
ins
nop
neg
sub
jae
sar
cmp
adc
add
pop
pop
or
sbb
loopne
add
pop
ss
jmp
ror
push
fldcw
push
xor
and
cmp
out
(bad)
call
sahf
mov
pop
(bad)
cmp
xchg
cmp
and
pop
pop
inc
jns
xlat
push
inc
pop
mov
jp
xchg
fidiv
movs
mov
jmp
sub
cmp
xlat
push
adc
fldln2
inc
pop
jmp
repnz
aad
sbb
or
pop
test
rol
jmp
ja
mov
xchg
lds
and
clc
dec
dec
dec
mov
sbb
lahf
jmp
mov
mov
enter
fistp
and
jl
jmp
fdivr
sti
and
pop
xor
xlat
dec
sbb
mov
outs
call
push
rcr
mov
xor
xor
sti
inc
adc
ins
sbb
pop
shl
push
pusha
cmps
adc
sub
inc
cmps
mov
outs
jge
jge
fistp
int3
mov
(bad)
push
mov
or
gs
add
int3
xchg
pop
and
aas
pop
out
cmp
daa
push
fidiv
loop
sbb
jbe
mov
in
inc
outs
pop
add
sbb
sub
dec
sahf
sub
enter
jns
and
in
loopne
push
cmps
out
sbb
fs
push
inc
ins
mov
and
mov
and
movs
xor
cmp
xlat
popf
push
call
std
sub
xchg
xor
mov
adc
in
dec
inc
cli
sub
cmps
stc
stc
iret
jno
jne
stc
pop
jmp
test
pop
ds
aaa
sub
fldenv
jo
adc
movs
into
or
sub
adc
cmc
dec
mov
retf
in
xchg
pop
sub
aas
out
lock
retf
cmps
dec
pushf
mov
test
jae
stos
dec
ss
test
in
lods
popf
pop
mov
pushf
or
rcl
pop
(bad)
loopne
jmp
mov
pop
outs
add
movs
mov
cmp
xor
xor
in
xor
mov
clc
sub
add
mov
mov
sti
iret
aam
psrad
in
(bad)
bound
movs
mov
jmp
mov
push
pop
or
jp
mov
std
(bad)
pushf
fisubr
repnz
jb
es
dec
and
jb
inc
fldcw
push
sbb
pop
push
xor
adc
inc
push
in
js
hlt
shl
mov
les
cmp
fld
js
cmps
movs
adc
pop
jle
inc
and
call
mov
in
sub
inc
and
mov
stos
push
dec
mov
(bad)
lock
mov
sub
inc
pushf
dec
ins
push
inc
sub
mov
mov
fwait
adc
cmp
push
(bad)
clc
inc
jae
mov
mov
ret
jp
mov
retf
leave
ins
mov
les
les
nop
pop
dec
mov
loopne
push
push
sub
or
mov
inc
mov
retf
mov
in
test
push
dec
mov
aaa
sub
mov
sub
std
mov
sbb
cli
lods
pushf
add
jnp
call
jl
adc
or
ins
scas
mov
fsubr
push
mov
push
stos
adc
inc
adc
loopne
lahf
fs
mov
jmp
jbe
test
sbb
dec
jns
sub
in
sub
push
add
or
and
dec
pop
mov
cmp
loope
jnp
push
jle
fcmovnu
enter
cmp
xchg
call
js
fimul
int
xor
and
dec
out
enter
out
cmp
ins
in
jns
dec
inc
and
jp
mov
cmps
jmp
into
call
enter
pop
jnp
lds
(bad)
sub
inc
aam
fcmovnbe
cmps
sub
pushf
sub
push
(bad)
xchg
cmp
pop
iret
jle
ror
jno
pop
xchg
sbb
jmp
jae
dec
fbld
and
cmp
sbb
das
cmp
js
pop
mov
aam
jno
(bad)
jmp
jl
xchg
js
aas
mov
cmp
mov
in
int3
loop
(bad)
inc
mov
sub
mov
bound
in
in
retf
push
jp
out
stos
xchg
out
cmp
mov
push
popf
fld
pop
ins
es
mov
sub
jle
cmpxchg
nop
inc
push
call
scas
pushf
sub
cmps
sub
call
(bad)
inc
fstp
jbe
jnp
mov
xor
inc
jns
fucomip
sbb
lea
jns
push
out
mov
sub
in
or
test
push
pop
outs
cdq
repnz
ror
lahf
mov
jge
ins
fadd
fwait
dec
push
sbb
adc
test
scas
pushf
mov
xchg
dec
out
imul
cmp
(bad)
cli
jle
mov
test
cmps
jae
dec
pop
xchg
imul
stos
stc
pop
or
cli
hlt
sub
mov
xchg
push
jnp
call
adc
xchg
sar
pop
xchg
rcl
jns
rcr
jnp
mov
mov
test
push
add
mov
int3
dec
adc
and
xchg
fild
lods
cmp
ins
jge
add
enter
neg
mov
mov
pop
add
lods
lock
cmp
stos
cmp
sub
imul
or
test
mov
cs
xor
mov
mov
lock
rcr
cmp
push
sub
adc
mov
dec
call
sub
mov
mov
fldenv
lea
sbb
jmp
(bad)
fwait
scas
adc
lea
int3
imul
rcr
movs
xchg
mov
(bad)
xchg
mov
mov
inc
adc
inc
mov
loope
xchg
cmp
fst
fmul
push
jmp
ret
mov
push
mov
cmp
jp
adc
mov
imul
pop
cwde
test
push
fstp
cmp
jmp
jp
add
int3
and
cmp
cmp
push
clc
ins
push
dec
rol
mov
out
pop
movs
ins
jo
stos
jge
mov
in
dec
add
in
mov
mul
pusha
mov
sbb
scas
out
sub
inc
sub
out
jno
aas
rol
fcomp
pusha
lods
or
test
push
or
fimul
xchg
loop
jno
mov
pushf
pusha
(bad)
int3
outs
pop
pop
loopne
cld
or
or
popf
jp
es
jbe
inc
data16
push
sub
lea
int3
pop
mov
dec
sub
push
mov
jb
cdq
inc
bound
jae
imul
cmps
test
fcom
pop
mov
(bad)
mov
retf
outs
cmp
mov
imul
cmp
add
mov
js
push
fisubr
mov
jecxz
push
sti
call
and
or
lea
xchg
jp
xlat
cmp
popa
int3
mov
or
xor
sub
push
iret
sbb
icebp
aad
mov
imul
call
sti
and
or
adc
sub
mov
push
push
cmp
lods
in
fst
push
mov
pop
or
sub
pop
(bad)
out
or
mov
ret
mov
and
in
push
jmp
data16
lahf
aaa
rcr
test
adc
nop
out
mov
out
push
push
or
pushf
sub
mov
fxch
fld
test
jmp
mov
jns
daa
call
jnp
movaps
push
fcmovu
push
out
mov
or
sub
xor
adc
dec
mov
mov
jmp
or
cwde
enter
or
push
dec
push
sbb
or
dec
push
cmc
mov
mov
jle
ror
cmp
push
inc
rep
outs
lods
ins
fcom
jle
cwde
fiadd
aaa
mov
mov
test
fmul
mov
call
call
lahf
sub
js
or
mov
adc
out
push
not
stc
pushf
mov
jp
sub
ins
dec
in
fwait
or
push
aas
pop
adc
mov
mov
or
out
push
aaa
jl
dec
mov
sahf
push
les
cmp
xor
or
dec
dec
jb
mov
sti
out
push
dec
lods
xchg
outs
stc
ds
loope
jns
sub
imul
or
scas
iret
mov
xor
lahf
cmp
fbstp
jecxz
sub
cmp
pop
inc
test
push
cmp
jb
std
or
(bad)
test
call
lods
repnz
test
or
ins
sbb
and
cld
dec
or
cs
fyl2x
fcomp
cmp
jge
mov
or
cwde
pop
xchg
scas
(bad)
mov
mov
das
pop
daa
or
lahf
sbb
sub
ja
in
pop
lods
xchg
jl
and
pushf
(bad)
fs
sub
lea
cmps
dec
cmp
xor
test
push
xlat
loope
sub
out
(bad)
mov
test
outs
jg
lods
mov
fstp
gs
fcomp
enter
inc
in
jae
adc
les
mov
jl
test
std
rcl
cs
sbb
outs
xchg
inc
mov
not
movs
test
fwait
inc
stc
mov
fmulp
and
xor
sub
idiv
sbb
movs
mov
pushf
cwde
xchg
and
loopne
cmp
xchg
cs
add
adc
push
cmp
inc
xor
stos
fmul
xchg
in
xchg
cmp
or
retf
jae
sub
sub
and
rcr
jmp
cmp
ss
sub
outs
enter
sub
xchg
jmp
mov
mov
push
cmc
in
(bad)
(bad)
daa
cwde
add
xchg
cdq
adc
or
imul
aad
sti
xchg
aaa
mov
xor
int
pop
ins
mov
sbb
fst
in
out
mov
sub
ret
adc
pop
cmp
arpl
scas
es
xchg
aad
pop
fsubr
mov
lds
enter
scas
loopne
int3
xchg
push
dec
cmp
ds
leave
pop
fisttp
pop
aad
enter
or
push
shl
mov
in
jo
retf
dec
mov
add
in
dec
mov
mov
sahf
adc
js
mov
js
pop
sbb
push
xchg
js
enter
sub
fisttp
imul
cmc
loop
sbb
xchg
stos
cmc
into
je
pusha
(bad)
mov
mov
jns
fld
or
xchg
sbb
inc
adc
mov
pop
sar
sbb
or
jg
loope
ret
add
mov
pop
rcr
xor
pop
add
pop
push
stos
dec
test
xor
cmc
ja
stos
mov
sbb
lods
inc
test
mul
or
(bad)
cwde
outs
push
dec
dec
ror
ds
and
adc
cld
jl
sub
retf
pop
and
or
or
adc
enter
in
ds
enter
rcr
sbb
sbb
ds
pop
cli
mov
xlat
lods
mov
sub
add
in
and
ss
ror
scas
test
cmovns
jne
cmp
mov
mov
stos
dec
ja
shl
mov
sbb
add
ret
adc
int3
pop
or
lods
repz
cmc
dec
or
xchg
add
aam
jle
pop
loopne
mov
fwait
daa
sub
dec
scas
xlat
push
xor
dec
int3
sbb
dec
mov
sub
daa
push
mov
and
loop
cdq
popf
jmp
int3
lods
mov
fwait
and
pop
cmps
push
push
in
enter
adc
push
sar
cmps
pop
gs
sub
ins
push
out
enter
dec
out
sub
int3
ret
loopne
cwde
pop
outs
imul
xchg
mov
repnz
cmc
fcmovu
bound
sub
aaa
test
or
cmp
hlt
mov
or
xchg
pop
inc
test
mov
inc
or
lea
mov
loopne
mov
push
pop
jp
mov
dec
jo
mov
aas
mov
cwde
stc
cmp
movsx
fst
mov
cmp
sbb
call
pop
ret
sub
retf
enter
or
sub
xor
mov
cmp
sar
mov
fimul
and
adc
ja
clc
jge
and
lahf
(bad)
scas
mov
fcmovu
in
(bad)
xor
jmp
or
ret
xchg
dec
mov
or
add
inc
int
call
(bad)
xchg
into
mov
fstp
stos
sub
mov
adc
dec
jne
or
or
mov
sbb
test
xchg
stos
add
mov
or
not
adc
add
mov
cmp
mov
fcmovnbe
add
loop
or
fcom
push
call
das
mov
or
(bad)
pusha
cmp
adc
pushf
and
cmp
sbb
mov
fucomp
bound
mov
pop
xor
retf
popf
add
or
sub
jge
pop
or
xor
(bad)
dec
cld
and
retf
or
aad
retf
inc
pop
inc
imul
xor
out
fnstcw
jbe
mov
or
mov
jbe
or
push
mov
fist
or
adc
mov
fild
das
jge
imul
pop
pop
je
jnp
xchg
std
xchg
cli
mov
or
fwait
mov
out
pop
jno
ret
sti
frstor
fs
dec
pop
out
shl
pop
fcom
push
xor
sbb
or
mov
aaa
mov
cmp
mov
sbb
xor
fdivr
jecxz
lock
sahf
aas
movs
aas
xlat
pop
or
data16
call
mov
enter
sbb
ins
or
sti
loopne
sbb
into
nop
pop
cwde
adc
fcomip
and
mov
jmp
adc
or
call
stc
mov
pop
sbb
dec
out
(bad)
jge
pop
and
mov
or
cli
fsubr
fcomip
mov
and
dec
pop
loope
inc
addr16
and
dec
lods
adc
pushf
xor
and
adc
fistp
cmc
ror
push
pop
out
outs
fbld
std
stc
jns
mov
cmps
jl
clc
jns
pop
cmp
enter
or
loopne
test
or
loop
adc
ss
sbb
pop
imul
cmp
push
lods
mov
clc
push
push
int3
push
fimul
es
int3
scas
adc
mov
xor
popf
bswap
fcmovne
fdivr
pop
jno
xchg
dec
xchg
sbb
fidiv
pop
out
test
lock
jo
lods
push
xchg
adc
fs
(bad)
mov
and
xchg
xor
stos
scas
punpcklwd
mov
fstp
push
lock
cmp
ret
test
pop
cld
imul
mov
aaa
mov
or
std
neg
sbb
jae
jns
mov
xchg
stc
stc
and
fcom
ds
int
mov
mov
fnsave
jnp
fstp
or
mov
dec
repz
pop
cmp
idiv
pop
or
and
push
sub
cmc
lahf
rcl
push
mov
fdiv
sti
cmps
arpl
es
mov
xchg
xchg
xor
fbld
adc
imul
pop
mov
dec
sub
movs
xchg
or
mov
in
cmp
test
fs
idiv
into
mov
mov
(bad)
or
or
cmps
mov
push
dec
xor
add
push
sub
mov
mov
pop
pop
cwde
popa
and
jmp
outs
jle
pop
sub
mov
mov
imul
int
push
sub
mov
mov
in
mov
push
out
retf
push
fcomp
dec
push
jg
call
cmp
xor
xchg
ins
dec
jmp
pop
jge
pushf
int
inc
xor
pop
mov
sub
add
leave
shr
fcmovu
in
jge
xchg
sub
fldcw
outs
pop
inc
or
lods
out
inc
jnp
ror
outs
test
addr16
(bad)
mov
stos
aas
aad
test
cmc
push
mov
cdq
push
data16
fldcw
into
dec
popa
mov
inc
sbb
lock
mov
(bad)
fisubr
repz
cmp
sub
push
adc
lea
xchg
fnstsw
jnp
and
inc
fidivr
jl
mov
push
mov
cmp
push
(bad)
(bad)
mov
mov
int
jne
mov
mov
outs
mov
pop
push
jl
jne
push
dec
adc
or
push
cmp
ficomp
cmps
ficom
imul
xchg
in
aas
jle
sub
pop
fwait
pop
ins
add
cmp
arpl
int
icebp
enter
sub
or
in
fdivr
fsubr
push
lods
cmps
cmp
and
jp
call
in
push
add
adc
fs
arpl
add
inc
aaa
mov
ss
dec
iret
(bad)
adc
adc
imul
xchg
ins
sub
in
imul
and
mov
xchg
cmp
(bad)
in
push
(bad)
adc
dec
aaa
or
dec
mov
mov
ins
dec
inc
inc
in
sbb
jmp
adc
or
add
inc
retf
daa
or
test
cld
sbb
int3
push
xlat
arpl
push
adc
mov
imul
nop
call
stos
xor
sub
movs
jo
sub
dec
pop
inc
inc
cmp
adc
mov
cdq
scas
rcr
aas
popf
arpl
pushf
rcr
stc
rcr
adc
stc
xchg
(bad)
and
jo
jb
mov
stc
es
xchg
lods
mov
call
loope
retf
(bad)
in
(bad)
dec
sbb
aam
ins
in
dec
mov
mov
pusha
aas
jge
push
outs
adc
jg
mov
or
xor
dec
stc
jns
mov
add
scas
add
test
push
jns
sub
or
mov
mov
pushf
scas
aad
mov
mov
(bad)
pop
imul
cmp
add
fs
sub
popa
push
mov
cld
outs
jnp
push
out
fsubr
call
(bad)
in
and
js
jle
and
les
add
enter
lahf
sbb
mov
dec
mov
push
dec
xor
out
lods
daa
add
retf
fild
xchg
cmp
fisttp
sub
push
or
jo
rsm
mov
retf
inc
imul
movs
sbb
outs
mov
or
add
dec
mov
cdq
push
cmps
sahf
mov
xchg
es
daa
js
or
sbb
mov
fimul
add
mov
int3
ds
jecxz
fcom
adc
adc
ins
add
sbb
add
mov
in
dec
mov
bound
add
cmp
mov
dec
cmp
xchg
std
push
call
enter
popf
jge
je
icebp
int3
repnz
mov
mov
es
dec
inc
pushf
xor
adc
int
inc
rcr
and
or
inc
fs
push
sbb
sbb
sub
cld
fldz
popa
jle
mov
fidivr
stos
adc
sub
pusha
out
xrelease
int3
jl
pop
inc
mov
jg
jmp
mov
ins
retf
addr16
xchg
cmps
cmps
jp
mov
aam
lods
int3
cmp
jge
hlt
imul
daa
sub
dec
pop
or
test
xchg
scas
int3
das
adc
push
std
test
jmp
or
test
in
shl
aam
jle
fldcw
(bad)
cmp
imul
test
outs
jno
aas
sahf
adc
mov
retf
stos
and
cmp
or
xor
imul
outs
jge
jl
dec
test
cmp
xchg
jo
rcr
inc
dec
int
call
and
test
(bad)
fcomp
cmp
xchg
outs
sti
mov
rol
mov
jmp
cdq
js
scas
clc
scas
pop
dec
fsubr
rcr
mov
call
jle
xor
fmul
fldl2e
shr
push
jmp
fidiv
push
test
and
and
sub
cmc
fcom
in
out
pop
mov
sahf
xchg
lods
dec
loop
cmp
cli
push
dec
push
dec
mov
or
xlat
fwait
push
ins
or
leave
int
stos
mov
pusha
mov
leave
in
aaa
inc
movs
and
mov
fbld
cld
dec
pop
popf
(bad)
movs
xlat
pushf
jl
cmp
outs
sbb
add
mov
int
pusha
mov
sub
imul
xor
dec
pop
aad
out
iret
pop
dec
jl
and
pop
lods
mov
xor
dec
jmp
jl
push
jle
scas
ins
add
movs
cdq
jge
ins
gs
retf
in
sub
pop
jno
dec
in
or
jne
adc
mov
push
mov
or
pop
dec
aaa
in
jnp
mov
sub
jl
(bad)
xchg
cli
mov
jne
fidivr
ins
outs
cdq
cmp
int
push
inc
call
test
sti
inc
call
dec
push
fdivr
fcmovb
lods
jns
inc
pop
or
dec
mov
pop
cmp
cdq
fnstcw
jmp
jns
pop
xor
jae
(bad)
js
loopne
jecxz
mov
dec
cmp
loope
sbb
push
into
fwait
sub
fstp
js
adc
(bad)
jne
movq
ficom
(bad)
jbe
pop
lods
sahf
inc
push
pop
inc
fcmovbe
sub
pop
cmp
fcomp
sbb
imul
add
inc
dec
cmp
jmp
dec
or
test
mov
cwde
pushf
dec
loop
call
aas
or
push
jno
push
push
or
je
pop
test
xor
lds
movs
ins
sar
mov
xor
sbb
mov
add
cmc
in
popf
push
pop
retf
icebp
xlat
or
pushf
or
or
xchg
sbb
add
and
(bad)
sbb
sub
dec
popf
cli
dec
jle
(bad)
pop
push
retf
test
aam
and
fwait
retf
add
out
sbb
outs
sbb
push
push
fcomip
mov
cmps
sub
sahf
icebp
psrlw
or
js
mov
(bad)
out
xchg
imul
adc
push
fcmove
rcl
into
or
dec
push
sbb
mov
loope
scas
movs
js
push
dec
pop
shl
mov
mov
stos
pop
push
dec
adc
pop
mov
inc
lock
enter
fisubr
dec
mov
pop
cmp
xor
inc
jbe
clc
mul
sbb
mov
or
cmp
(bad)
in
test
leave
fcom
imul
adc
sub
or
neg
ficom
repnz
xor
and
daa
adc
add
pop
xor
popa
or
leave
dec
mov
push
and
mov
fnstcw
or
cli
dec
test
outs
icebp
movs
ret
xor
nop
fucom
sbb
scas
lods
dec
mov
mov
add
add
sub
ds
jmp
dec
outs
xchg
cmp
or
sar
pop
(bad)
or
push
or
or
pop
leave
sbb
cmp
adc
dec
in
loope
in
pop
pop
icebp
pop
imul
clc
add
popf
test
loopne
fistp
hlt
imul
imul
pop
das
lods
pop
icebp
(bad)
movs
mov
cmps
add
mov
iret
std
int3
cmp
xor
aaa
and
or
aas
sbb
xchg
lea
pop
cdq
sbb
in
sbb
xlat
or
mov
or
xchg
push
or
(bad)
in
mov
sti
pop
ins
jnp
leave
dec
ret
hlt
xor
sub
mov
test
imul
shl
(bad)
in
push
rol
repz
mov
pop
sbb
(bad)
nop
cmc
mov
sub
std
sbb
xchg
or
inc
push
jbe
je
outs
fst
stos
dec
ja
mov
enter
add
sbb
jns
pop
push
sub
inc
je
or
call
pop
cmp
fcmovu
pop
retf
scas
cmp
popf
mov
scas
add
shr
cmp
pop
mov
mov
out
or
pop
dec
stos
mov
lods
dec
pop
mov
push
push
pop
dec
ins
jne
adc
jmp
adc
sbb
cmps
ins
xor
inc
inc
fsub
adc
lea
enter
fisubr
sbb
enter
mov
test
jmp
popa
cmp
push
popa
cmps
dec
push
xchg
jg
aad
push
call
in
movs
jmp
mov
inc
test
cmp
push
adc
ins
pop
xchg
sub
add
pop
cmp
dec
pushf
clc
imul
xchg
pop
mov
mov
clc
es
fdivr
xchg
sbb
fmul
cmp
pop
mov
jne
mov
push
retf
xchg
push
mov
je
clc
aaa
(bad)
sbb
int
jbe
dec
cmp
movs
push
inc
es
retf
pop
lock
in
int3
fucom
(bad)
neg
xchg
inc
and
or
xchg
in
cli
sub
adc
push
sub
dec
js
stos
or
pop
mov
or
lea
popf
loop
mov
adc
push
xor
or
cmps
and
sbb
int
pop
or
out
xchg
scas
add
xchg
into
jp
lods
adc
jl
pop
push
cli
pop
lock
call
xchg
mov
xor
and
xchg
mov
outs
dec
lods
mov
daa
push
xor
fdiv
clc
or
dec
dec
add
imul
out
jae
test
or
add
push
stos
mov
or
mov
dec
push
ficomp
mov
dec
pop
pushf
(bad)
or
into
scas
popa
aas
cld
ins
mov
in
mov
or
mov
sub
pop
imul
dec
scas
(bad)
and
push
leave
in
stos
loope
cmp
fwait
or
dec
pop
jmp
scas
jmp
dec
std
push
mov
mov
jbe
adc
ins
hlt
ins
xchg
sub
ins
int3
clc
jmp
pop
adc
mov
push
(bad)
or
inc
lds
mov
test
sub
sbb
lahf
fcmovb
pop
in
pop
fcomip
push
jb
pop
(bad)
mov
fadd
dec
les
dec
xchg
test
popf
repz
(bad)
jbe
in
daa
in
jl
dec
xor
xchg
cmp
imul
bound
pushf
mov
or
sub
cmp
pinsrw
dec
loope
enter
shr
lds
sub
add
jge
inc
push
push
loopne
mov
lock
imul
daa
xlat
pop
mov
or
nop
jl
push
push
mov
inc
jg
into
mov
push
into
js
mov
cmp
test
mov
shr
popa
jg
popa
(bad)
in
mov
retf
call
sub
test
(bad)
pop
push
mov
and
jecxz
inc
lods
outs
mov
fdivr
and
sub
mov
or
sub
in
outs
cmp
jg
ja
sti
sub
test
jae
retf
mov
cmp
loope
test
jnp
fadd
sbb
jge
lods
into
mov
or
stos
lock
int
hlt
cmp
cmc
and
push
mov
mov
or
mov
jne
stos
inc
enter
mov
movs
(bad)
push
push
(bad)
mov
jns
xor
rol
adc
xchg
dec
js
bound
aam
scas
cwde
sahf
nop
sbb
call
es
and
fldcw
dec
ss
lods
(bad)
ss
mov
mov
cs
pop
mov
adc
adc
aaa
pop
push
ret
out
icebp
xor
mov
in
mov
push
jg
loop
jns
daa
cmp
lahf
xchg
iret
xchg
pop
jl
cmp
push
jmp
outs
sbb
ins
inc
pop
fidiv
inc
xchg
xor
js
xchg
call
rcr
mov
push
loope
popf
lea
lods
cmps
into
mov
mov
ins
ins
cmp
ror
imul
loop
dec
mov
ficomp
stc
pushf
sbb
sbb
mov
mul
jnp
mov
sbb
pop
cwde
dec
sub
or
pop
int
jb
sub
adc
lods
out
nop
call
mov
sub
push
fst
sub
mov
lea
mov
fisubr
loop
pop
sub
jp
push
cmp
pop
ins
pop
pusha
push
mov
xchg
fidiv
add
neg
pop
pop
movq
mov
jle
mov
inc
mov
nop
push
jo
cmp
test
jbe
nop
aas
add
sub
xchg
mov
stos
and
int3
dec
xor
jne
ja
cmp
cmc
pop
pop
mov
popf
idiv
mov
fcomp
rcr
fs
jl
js
jnp
in
pop
mov
or
inc
adc
int3
add
dec
es
je
xor
(bad)
sar
and
xor
cmp
add
xchg
mov
fdiv
sbb
dec
aas
xor
ret
addr16
pushf
in
cmc
lahf
jns
retf
or
out
je
inc
xor
adc
cmp
fsub
jl
and
jno
mov
mov
fdivr
or
pop
lods
push
pop
sub
mov
ins
mov
sbb
cmp
adc
push
or
(bad)
clc
ins
xor
and
mov
inc
jecxz
lods
fsub
lds
out
je
dec
xor
(bad)
adc
ins
out
shl
in
mov
sbb
push
mov
cld
pop
jp
jg
mov
fistp
and
fld
mov
in
mov
or
cdq
ja
cmp
lods
sar
ins
xor
stc
sub
repz
paddw
arpl
dec
cdq
mov
aas
sahf
neg
jmp
or
mov
xchg
push
sub
push
push
add
leave
sbb
pop
stc
aam
retf
cmp
cmp
sbb
jmp
fmul
pop
lds
shl
sti
mov
mov
cmp
mov
add
mov
(bad)
cmp
mov
out
repnz
mov
push
das
cwde
and
or
mov
enter
sbb
(bad)
pushf
loope
pop
ds
out
dec
imul
out
iret
xchg
mov
mov
cdq
lods
cmc
movs
out
adc
or
mov
push
retf
(bad)
je
jmp
push
je
push
or
ret
test
test
(bad)
sub
mov
push
scas
sub
mov
pushf
push
in
clc
into
cs
mov
ss
ins
popa
or
xor
mov
mov
lods
mov
push
sub
and
lea
cmp
fisttp
in
adc
mov
sub
int
out
(bad)
fnstenv
aam
lods
ins
pop
popf
or
mov
enter
movs
sub
(bad)
jmp
outs
ja
sar
mov
nop
sub
loopne
fnstsw
jns
ins
xchg
fild
xchg
adc
pop
mov
pop
scas
pop
pop
cmp
cmp
or
iret
fnstsw
neg
mov
or
fidivr
or
or
adc
mov
ins
sub
cmp
jl
jnp
mov
lods
mov
enter
clc
inc
cs
test
jb
cdq
enter
psubusw
inc
mov
es
ins
inc
mov
push
loope
inc
pop
pushf
lock
ret
dec
mov
call
out
mov
jmp
ins
push
jo
clc
pop
xor
call
mov
clc
jmp
mov
jne
out
push
popf
cwde
les
jl
or
push
popf
add
ins
mov
imul
sbb
mov
and
out
cwde
inc
ds
stc
dec
cmp
mov
cmp
sbb
add
fdivr
dec
fcomp
mov
std
aad
iret
mov
pop
outs
cwde
adc
xchg
(bad)
jecxz
pop
pushf
retf
js
lods
mov
adc
mov
test
std
sar
jge
cdq
fiadd
add
test
scas
movs
xor
jl
dec
adc
stc
pop
cwde
sbb
mov
cmp
cwde
pushf
and
pusha
push
retf
mov
xchg
pusha
cmp
xchg
test
mov
or
in
pop
aaa
adc
or
and
or
or
mov
dec
inc
jbe
and
sar
fsubr
enter
sub
mov
pop
fwait
jl
mov
and
cld
sbb
push
out
and
or
and
push
fcomp
out
push
add
out
dec
mov
aad
in
aaa
push
inc
jno
add
scas
ins
xor
mov
inc
lds
das
sbb
xor
stos
xor
scas
mov
mov
sub
cmp
xor
inc
mov
mov
dec
jg
cli
jp
and
cmps
enter
dec
push
in
retf
add
pushf
imul
(bad)
sets
pop
mov
cld
stos
lods
cmc
inc
mov
sbb
enter
sbb
clc
ja
mov
ds
or
imul
test
daa
mov
test
in
cwde
push
daa
mov
int3
sub
test
mov
mov
cld
xchg
push
test
push
int3
into
sbb
(bad)
inc
mov
mov
xchg
mov
xchg
jb
xor
dec
cmp
dec
gs
push
sub
clc
inc
pop
(bad)
int3
js
ss
das
inc
pop
mov
cmp
add
dec
lds
jl
lods
stos
mov
sar
fstp
daa
mov
adc
movs
inc
inc
popf
lods
sub
jno
loopne
test
cld
movs
cld
and
call
jb
pop
fdivr
ror
jbe
aad
dec
or
mov
je
dec
xor
std
pop
adc
cmp
sbb
jp
adc
call
xchg
inc
inc
mov
fpatan
lock
mov
ins
fisttp
dec
and
mov
mov
inc
pushf
sub
add
in
add
cmp
jge
push
mov
pop
out
arpl
fnop
mov
mov
mov
mov
sbb
sbb
jno
mov
xor
mov
loop
mov
mov
stos
push
jne
popa
clc
sar
xor
adc
(bad)
out
mov
jecxz
and
jno
mov
and
mov
inc
repz
movzx
sbb
daa
mov
push
popf
loopne
dec
hlt
xchg
jae
fimul
je
out
sbb
test
pop
lods
lods
aad
xor
scas
in
xchg
or
cmp
sub
push
mov
push
pushf
xlat
push
mov
ja
xor
xlat
xchg
mov
fs
pop
test
(bad)
fsubp
mov
mov
das
cmp
mov
enter
sbb
scas
jg
sbb
xchg
push
or
push
dec
sub
nop
jae
in
jmp
pop
std
mov
or
push
adc
mov
test
mov
jo
dec
(bad)
push
mov
sbb
ret
outs
pushf
jl
ds
mov
push
aaa
(bad)
cld
mov
mov
push
mov
fld
adc
aad
(bad)
sub
mov
or
sbb
scas
mov
stos
rcl
and
enter
add
sub
dec
and
push
pop
xor
mov
out
mov
daa
and
jnp
sbb
ins
in
add
mov
and
adc
jge
iret
push
aad
lea
pop
jmp
ss
sub
jnp
push
dec
dec
fisttp
cmp
mov
iret
dec
stos
mov
sbb
test
fwait
mov
inc
add
jnp
retf
call
sub
cmp
push
sbb
ret
pop
adc
mov
ds
dec
cmp
scas
sbb
nop
mov
or
pop
dec
sahf
mov
(bad)
mov
push
mov
(bad)
int3
add
sub
adc
pushf
out
shl
pop
sub
scas
into
(bad)
movs
mov
rep
sub
rdpmc
cli
fs
neg
stos
mov
cmp
xor
gs
push
jns
mov
cmp
pop
js
cli
lds
imul
mov
and
push
out
test
leave
jg
cmp
pop
stos
xchg
push
stc
jmp
jno
push
in
retf
cmp
or
int3
js
dec
jl
fsubr
mov
rcr
(bad)
xchg
out
dec
sub
jl
cmp
cmp
mov
mov
(bad)
in
sbb
jl
cli
sub
pusha
sbb
push
lods
ins
iret
dec
lods
or
in
aas
fstp
cwde
mov
mov
adc
jb
mov
mov
stos
retf
shr
or
je
jb
js
mov
push
aam
mov
mov
int3
sbb
sbb
jmp
push
or
out
or
push
ins
adc
aam
cdq
fdiv
mov
add
cmp
cmp
ror
push
mov
dec
mov
mov
retf
mov
sbb
jne
jl
or
frstor
mov
or
push
fnsave
in
pop
imul
xchg
loop
inc
or
(bad)
ror
cmp
test
test
cmps
jl
sbb
cdq
ret
mov
dec
pushf
inc
push
cmp
lods
ins
mov
int3
fwait
mov
mov
push
addr16
fmul
fist
cmp
imul
int3
mov
jmp
adc
xchg
pop
ins
or
pop
push
mov
mov
(bad)
clc
leave
lods
(bad)
ja
dec
dec
cs
inc
xor
inc
xor
jge
dec
cwde
lods
fsubrp
jae
mov
add
repz
retf
and
dec
dec
mov
cld
jmp
sbb
xchg
pushf
push
pop
popf
ret
pop
mov
xchg
call
ins
in
cmps
nop
mov
sub
stos
in
xor
dec
ret
push
pop
mov
dec
mov
xor
jmp
cld
cld
or
fcomp
data16
cdq
or
dec
movs
enter
pusha
je
fidivr
cs
ror
out
mov
(bad)
or
mov
dec
cmp
xchg
mov
clc
mov
loopne
inc
pushf
daa
cdq
cwde
cld
scas
aaa
xor
in
aam
movs
inc
test
mov
push
mov
adc
cld
sub
sbb
stc
aad
movs
and
push
cmp
mov
jmp
push
pop
enter
ja
loope
or
lods
push
xchg
test
push
call
xchg
jmp
sub
add
xlat
out
jmp
mov
ja
mov
movs
sahf
ja
jo
add
xchg
int
mov
lea
xor
fsub
inc
add
xlat
push
jne
cmp
pushf
add
in
cmps
lea
(bad)
cli
or
jb
hlt
mov
sub
push
call
cs
shr
xchg
or
push
add
scas
and
stos
out
pop
lods
lods
and
push
add
arpl
pop
sahf
lock
in
loopne
lahf
mov
in
jae
lods
js
test
lods
xchg
mov
push
sahf
scas
in
mov
sbb
jmp
cmp
test
jge
aaa
dec
cmp
dec
jo
fsubrp
push
mov
add
(bad)
mov
inc
xchg
cs
in
jp
inc
cli
push
int
mov
pop
dec
outs
jns
mov
enter
jle
fs
dec
nop
push
adc
sbb
pop
pop
test
push
movs
cmp
(bad)
push
sbb
stc
mov
int3
jl
dec
jle
xchg
(bad)
push
enter
xchg
xor
imul
fnstcw
mov
icebp
pop
mov
fisubr
fstp
fcomp
bound
into
sub
sbb
les
mov
inc
jp
jge
fcomp
pmuludq
xchg
adc
pop
mov
xor
test
dec
mov
in
adc
(bad)
inc
(bad)
ja
or
ins
mov
js
scas
inc
leave
push
pop
jmp
aad
push
fnstenv
mov
cmp
push
dec
dec
or
movs
or
cmps
inc
jmp
sub
jno
dec
pop
rol
ja
loopne
pop
movs
add
repz
mov
iret
push
mov
stos
arpl
stc
sub
ins
jnp
pusha
outs
jns
frstor
dec
retf
mov
dec
call
push
in
or
mov
pop
push
mov
popa
int3
add
add
mov
lods
aas
dec
ins
cmp
sub
das
or
(bad)
hlt
inc
int3
fdivr
(bad)
call
pop
(bad)
sar
inc
jge
jae
dec
enter
sub
xchg
sub
les
push
jmp
sub
js
(bad)
pop
cwde
inc
adc
out
xor
jg
popf
mov
aam
and
dec
sub
add
cmp
(bad)
pop
call
push
push
pop
mov
and
mov
repnz
cmp
inc
mov
mov
call
leave
mov
imul
repz
adc
xchg
push
mov
mov
stos
outs
mov
mov
inc
cli
xlat
mov
adc
test
mov
out
fnstenv
stos
iret
sbb
lods
sbb
push
jns
add
clc
mov
fnstsw
pushf
aam
outs
jnp
xor
mov
sub
sub
vpsubsw
rcr
loopne
dec
rol
dec
pop
lock
imul
push
dec
nop
lock
cmps
(bad)
mov
idiv
cmp
push
jg
pop
das
ins
js
push
and
or
sub
daa
sub
push
loop
sub
sub
sub
push
(bad)
sbb
imul
iret
xor
enter
fmul
mov
fdivr
in
cwde
push
lods
dec
ins
scas
pop
clc
push
dec
jns
call
xor
add
mov
sbb
rcl
jns
mov
adc
push
xchg
clc
dec
mov
adc
mov
pop
sbb
nop
inc
sub
ror
sbb
mov
and
test
and
les
mov
sub
pop
mov
mov
int3
xor
pop
repz
push
cld
or
adc
sub
sbb
mov
mov
stc
pop
fsub
mov
xchg
mov
rol
mov
and
jle
movs
dec
cmp
jb
adc
push
mov
stos
popa
shl
push
jbe
push
enter
mov
pop
dec
xor
mov
stos
add
jl
(bad)
pop
dec
push
addr16
pop
xchg
pop
xchg
xor
sbb
jge
adc
dec
fisubr
dec
sbb
cwde
inc
mov
mov
push
mov
push
adc
pop
call
fwait
sub
xor
(bad)
mov
aaa
inc
aas
je
push
and
outs
mov
clc
mov
fwait
call
div
sub
(bad)
cmp
push
pop
mov
in
nop
push
test
pushf
jmp
mov
sub
js
inc
sbb
adc
int3
in
int
mov
test
mov
test
aad
out
mov
push
sub
mov
imul
in
sub
pop
pop
fistp
mov
dec
adc
or
imul
call
add
adc
add
sub
cs
and
in
mov
in
pusha
pusha
fdivr
pop
sub
stos
inc
xchg
pop
sub
lahf
xchg
inc
jecxz
(bad)
xor
push
cdq
cmp
sbb
add
(bad)
sub
ins
scas
dec
jae
test
dec
add
gs
mov
data16
enter
fstp
xchg
xchg
push
mov
in
icebp
sub
or
shl
push
pop
xchg
lock
and
pusha
adc
xor
mov
pop
or
cli
fmul
nop
inc
retf
inc
fld
dec
jmp
mov
sbb
pop
ret
xchg
mov
out
mov
test
xor
popa
int3
rol
inc
jo
push
sub
push
mov
or
int
cli
fs
cmp
or
xor
dec
pop
mov
out
lods
jnp
in
es
mov
iret
loopne
push
iret
inc
out
es
repz
push
sub
sar
into
leave
cmc
or
sub
dec
sub
cs
(bad)
sbb
mov
lods
pop
bnd
inc
adc
cmp
cmp
retf
test
mov
push
mov
mul
pop
sar
lea
jmp
add
pop
fisttp
cmps
jae
mov
xor
sti
outs
ins
jo
add
dec
jb
call
clc
fbstp
add
add
jb
jge
je
pop
call
mov
adc
push
or
fsubr
ror
or
fs
imul
xchg
test
dec
out
mov
imul
test
je
sbb
(bad)
dec
push
into
mov
jnp
in
mov
cmps
adc
out
in
sub
les
js
mov
cld
aaa
call
dec
mov
dec
shld
mov
cmp
cwde
mov
retf
mov
or
icebp
stos
xchg
dec
fadd
dec
adc
in
popa
add
and
pop
in
sbb
cwde
push
lds
sbb
and
mov
ins
and
(bad)
inc
loope
fnstcw
test
les
mov
xor
adc
sti
movs
mov
xchg
mov
stos
mul
jmp
div
pop
lods
ror
call
lock
pushf
(bad)
scas
mov
lock
comiss
out
pop
nop
jecxz
fist
call
mov
jmp
bnd
pop
push
fcomp
add
jae
enter
psubsb
mov
lock
mov
dec
cmp
div
dec
mov
dec
mov
test
mov
(bad)
in
mov
scas
sbb
xchg
xor
xchg
add
mov
lods
jns
mov
not
dec
sub
and
loope
loopne
pop
mov
mov
pop
mov
jle
fs
add
ins
sbb
and
jmp
mov
fistp
jge
add
cmp
inc
mov
jg
xchg
and
iret
(bad)
sar
xchg
mov
fmul
call
sub
retf
(bad)
jg
inc
gs
shl
cdq
pop
cli
and
jl
lock
add
mov
clc
pop
es
push
push
div
lods
mov
imul
stos
and
mul
xor
nop
ins
ror
popa
jl
sbb
mov
and
pop
inc
fxch
or
ins
enter
mov
retf
ins
int
ror
fiadd
retf
cmp
pop
and
or
repnz
push
pop
mov
mov
mov
retf
out
cwde
adc
test
cmp
cmp
sub
push
(bad)
pushf
imul
in
jae
(bad)
inc
call
fnstcw
mov
mov
cs
test
sbb
outs
inc
(bad)
in
jmp
inc
icebp
inc
sahf
enter
adc
push
sbb
add
cmp
arpl
inc
rol
js
in
loopne
hlt
cs
jp
xchg
sbb
aam
(bad)
sbb
sbb
or
sub
lahf
repz
test
(bad)
(bad)
int
das
sti
mov
inc
inc
imul
xchg
inc
inc
jns
sbb
test
cs
test
jnp
pop
xor
pop
enter
adc
dec
or
jns
dec
ins
aam
(bad)
clc
dec
daa
add
dec
int3
les
inc
dec
fisubr
push
mov
outs
cmp
mov
das
cmp
sub
ds
imul
jae
stos
mov
clc
sub
inc
les
cmps
adc
jns
iret
aas
shr
pop
jb
inc
jb
xor
inc
je
sub
rcr
sar
push
or
pop
ror
movs
mov
scas
sbb
ret
ins
add
cmp
xor
sysexit
inc
int
fist
inc
jp
scas
mov
lods
outs
pop
dec
ret
ror
dec
cmps
sub
jae
mov
pusha
push
xchg
fcmovu
push
das
add
mov
cmp
add
pop
shl
out
xchg
sar
xlat
rcr
or
test
pop
pop
add
jmp
clc
inc
dec
mov
jno
iret
xchg
call
push
sti
pushf
imul
xchg
xor
das
mov
mov
aam
out
int
or
fnstsw
scas
scas
fs
enter
push
add
dec
mov
outs
dec
imul
xor
aad
add
inc
cmps
and
and
stc
add
icebp
ja
pop
dec
pcmpgtd
add
push
adc
cli
xor
xlat
sbb
dec
cld
jo
test
std
push
pushf
dec
mov
mov
arpl
fwait
xchg
(bad)
adc
or
push
nop
mov
shl
loopne
or
pop
mov
retf
push
xor
cdq
shr
fmul
or
dec
push
sub
icebp
fwait
in
push
lea
add
cmp
xor
ins
cmp
ret
pop
jmp
in
or
retf
(bad)
ins
clc
cwde
test
ror
mov
cmp
jmp
sub
std
add
movs
iret
clc
or
(bad)
shr
sbb
adc
dec
aas
dec
cmps
cmp
popa
add
lea
outs
call
fsub
dec
jbe
mov
daa
retf
fs
test
je
mov
mov
xor
call
fsub
inc
xchg
push
test
sbb
cmp
sub
xchg
add
imul
mov
das
cmp
add
jp
mov
lock
stos
cmp
sub
je
fwait
sti
dec
es
mov
mov
daa
mov
aaa
in
push
stc
fmul
sti
call
std
mov
adc
add
ds
adc
jmp
shl
mov
ins
push
js
pop
retf
mov
test
inc
nop
lods
rcl
(bad)
jns
sub
push
fnsave
stos
clc
push
jo
pop
fmul
ret
and
inc
mov
bndldx
dec
das
ror
jns
js
jno
sahf
loope
xchg
mov
int3
jmp
mov
fcomp
nop
lock
rcr
stos
pop
out
sbb
push
enter
pop
xchg
sar
mov
and
movs
bound
mov
pushf
lods
iret
mov
(bad)
mov
sbb
fdiv
ins
sbb
aaa
js
jnp
jmp
ds
stos
dec
retf
stos
or
mov
lods
or
ja
rcl
daa
dec
push
pop
mov
mov
mov
call
adc
cli
pop
mov
mov
inc
(bad)
jmp
push
add
or
sbb
cmp
lods
(bad)
cld
push
inc
stc
xchg
popf
dec
leave
cmp
fsubr
sub
add
push
inc
mov
imul
cmp
rcr
push
and
repnz
out
xor
sub
cld
sub
call
pop
icebp
jl
cmp
mov
cmc
or
mov
call
es
icebp
icebp
or
mov
mov
mov
ins
js
cmp
je
sub
mov
and
xchg
mov
clc
inc
dec
pusha
test
arpl
aam
shl
push
fcom
ret
rcl
cmp
fist
cmp
pusha
stc
icebp
clc
add
add
xchg
cli
adc
aaa
mov
int
cld
rcr
jp
pop
jge
sbb
mov
test
ret
rcl
push
mov
f2xm1
and
mov
lods
and
fmul
dec
sub
dec
movs
sub
repnz
jmp
pop
inc
retf
les
aam
pop
or
ins
add
jle
test
sti
or
sbb
loope
imul
dec
sbb
pop
in
inc
pushf
add
cld
mov
fcmove
in
(bad)
test
in
pop
cmc
mov
out
dec
into
ja
add
cmp
popf
xor
add
repnz
fucomp
clc
pop
pop
lea
enter
adc
xchg
test
fcomp
pop
and
mov
cmp
in
movs
mov
in
cdq
sub
shr
xchg
pop
mov
xor
jmp
add
add
sti
or
out
add
jno
out
push
push
dec
jg
mov
dec
inc
dec
jmp
shl
cmp
mov
daa
je
mov
mov
ror
mov
xchg
stc
iret
in
(bad)
xchg
lods
in
sbb
sbb
pop
jle
cdq
mov
lea
lods
cli
fbld
pop
jge
cmp
cmps
les
push
int
push
out
jno
inc
std
stos
jp
mov
pop
mov
inc
clc
out
movs
adc
or
ins
cmps
jmp
pop
xchg
mov
mov
retf
pop
sub
xchg
fsubr
int3
mov
or
mov
pop
les
or
es
jns
test
fprem
push
inc
sbb
jnp
jl
dec
add
ret
ret
or
push
inc
(bad)
dec
pop
cmp
push
in
je
fcmovnbe
mov
sub
aaa
mul
es
cld
call
cmp
jmp
in
imul
cmps
jne
push
sbb
xchg
cdq
cwde
out
hlt
and
retf
leave
xor
sbb
mov
call
mov
cmp
aam
imul
mov
cwde
shl
stos
adc
imul
lods
cmps
xor
ror
leave
test
call
lahf
out
fs
inc
arpl
int
enter
aas
std
fisubr
or
jbe
addr16
xchg
mov
or
mov
(bad)
fcomp
out
push
jae
cli
push
push
and
pop
hlt
in
js
inc
push
pop
imul
clc
in
jg
test
lods
pushf
cwde
or
dec
lahf
pop
mov
pop
je
or
jae
fst
jmp
popf
enter
or
mov
sar
fwait
enter
sbb
xchg
(bad)
gs
or
adc
dec
dec
or
add
xor
xchg
cli
lahf
adc
clc
mov
or
sbb
dec
(bad)
push
pop
int
mov
add
fwait
mov
enter
popa
push
imul
arpl
outs
js
cs
pusha
test
xor
pop
retf
xlat
add
or
add
ins
fs
push
jle
(bad)
pop
enter
xor
call
inc
sub
cwde
add
shl
adc
repz
popf
or
xor
fstp
in
call
mov
cwde
push
jge
push
mov
test
push
pop
test
cwde
dec
cdq
aaa
xor
gs
scas
pop
sub
dec
cmp
mov
sub
aad
push
jl
pushf
mov
js
(bad)
pop
jmp
mov
inc
dec
enter
sbb
mov
cld
xor
cmp
enter
mov
pop
test
popa
sub
lock
push
jae
adc
test
fnsave
enter
push
jg
out
cmp
(bad)
js
jae
dec
in
or
dec
push
lds
cmp
xchg
(bad)
rcl
adc
lock
test
ins
in
in
cs
sub
pusha
inc
ss
sub
std
arpl
and
call
jmp
fdivr
(bad)
int3
clc
iret
mov
push
rcr
mov
dec
ror
inc
or
mov
sub
xchg
mov
les
jno
cmps
retf
adc
mov
cmc
sub
cmp
ins
cdq
lods
mov
lea
mov
inc
nop
int
movs
mov
xchg
scas
mov
nop
loopne
mov
test
pop
pop
cmp
mov
sub
cmp
data16
adc
adc
sub
mov
lods
sti
pop
loopne
ficomp
cmps
push
cmc
in
(bad)
icebp
push
adc
jecxz
inc
mov
clc
sub
push
jge
outs
mov
cmps
pop
mov
and
aas
fmul
je
mov
push
test
cmps
cmp
pop
fs
jecxz
pusha
call
popf
push
mov
in
jno
test
enter
jg
in
lods
nop
enter
test
loop
lods
sbb
les
inc
or
fdivr
imul
(bad)
cmp
(bad)
shr
fmulp
retf
inc
jns
cmp
or
sub
stos
cmp
retf
lods
pop
adc
dec
lods
aas
pop
pop
into
sub
sbb
dec
pop
(bad)
ja
bound
iret
test
cld
jmp
or
mov
aas
std
cmp
or
daa
and
cmp
xchg
ins
jp
mov
lock
dec
or
and
stos
fxch
jmp
mov
imul
jmp
fmul
mov
movs
les
hlt
out
xor
pop
into
jb
retf
xchg
inc
push
mov
xlat
movs
ins
retf
aam
std
adc
push
retf
pop
enter
popf
add
aas
retf
mov
sahf
adc
add
pop
inc
xor
mov
push
dec
push
pop
dec
sbb
enter
in
xlat
cdq
dec
test
les
xlat
xor
add
sti
(bad)
(bad)
cmp
(bad)
idiv
outs
ins
jecxz
clc
jl
and
jp
adc
xor
stc
in
int3
and
add
js
push
adc
ficom
jns
xchg
les
cli
(bad)
clc
xchg
mov
or
jns
adc
fadd
repz
lea
std
fwait
pop
adc
jbe
int
shl
sbb
push
popa
cmp
adc
fdiv
push
mov
(bad)
mov
les
std
push
mov
push
(bad)
not
mov
loope
jb
jge
fiadd
mov
adc
dec
xor
mov
pmaxsw
adc
(bad)
sub
push
mov
clc
sar
rcl
mov
fimul
jmp
mov
dec
pop
xchg
jle
sub
inc
mov
fiadd
jb
pop
popa
fsubr
idiv
cmp
mov
or
pop
in
mov
mov
lea
inc
xor
in
add
scas
call
lods
je
and
mov
cs
loop
ins
xor
call
ins
popf
(bad)
in
imul
(bad)
loopne
dec
pop
push
inc
push
sbb
mov
mov
std
shl
or
jne
stos
and
dec
(bad)
jle
test
push
mov
retf
sub
cmp
rcl
stos
fidivr
call
inc
jmp
push
sbb
mov
sub
xchg
ins
std
enter
data16
dec
loope
icebp
mov
clc
jne
out
inc
sbb
add
jnp
inc
aas
cwde
rcr
push
cmp
ret
imul
stos
sbb
sbb
mov
imul
mov
fcomp
mov
call
fisttp
fnstsw
bound
(bad)
pop
adc
pop
lds
mov
mov
in
pop
pop
lea
cmp
and
popa
xor
sub
adc
mov
mov
mov
movs
ja
add
add
daa
xor
jnp
pop
dec
xchg
mov
inc
mov
sub
cmc
bound
out
loopne
call
pushf
mov
jmp
in
dec
push
adc
imul
add
xor
push
je
mov
outs
fnstsw
jno
jp
dec
shr
pop
cmp
inc
mov
pop
sti
mov
mov
jb
mov
imul
test
adc
and
aam
cmps
inc
rcr
das
test
jg
arpl
out
add
popf
mov
sar
jns
dec
out
jbe
daa
cmp
and
pop
jno
outs
sbb
jno
repnz
call
iret
sahf
(bad)
pop
stc
xchg
jge
jmp
sub
pop
aad
stc
pop
mov
pop
sbb
loopne
rol
outs
jbe
sub
jmp
(bad)
cdq
cli
mov
fwait
dec
ss
in
mov
mov
imul
pop
adc
mov
je
xor
out
stos
sub
lods
and
mov
sub
mov
sub
jno
cmp
nop
pusha
cmp
(bad)
aad
or
mov
call
leave
sbb
add
lds
pop
aas
add
imul
xchg
sti
add
int
sbb
jae
call
push
outs
inc
icebp
test
call
aam
fst
jmp
add
mov
in
in
imul
test
stos
xlat
mov
jo
push
ins
test
mov
pop
jb
cdq
or
ds
inc
and
rcr
sub
pop
dec
mov
xchg
mov
mov
push
fnstsw
lock
and
push
sar
rol
fwait
sar
cmp
imul
shr
imul
ins
rol
ins
inc
in
cwde
dec
add
stc
adc
sub
clc
mov
div
mov
xor
(bad)
cld
dec
gs
arpl
push
mov
(bad)
adc
lds
rol
pop
jge
mov
ins
cmp
pop
mov
mov
iret
jb
pop
rcl
sbb
movs
pop
ins
enter
int
mov
and
cwde
xchg
xor
fmul
push
(bad)
xchg
dec
fcomp
cmp
inc
sub
jmp
outs
js
jnp
or
mov
or
in
popa
in
popf
enter
test
sub
dec
push
jecxz
jne
jns
push
xchg
inc
xor
jno
push
adc
adc
sbb
sbb
sbb
and
pop
cs
sbb
loop
test
sbb
sbb
or
adc
cwde
xchg
xor
dec
js
mov
ins
(bad)
mov
repnz
sbb
xor
and
lea
push
imul
clc
push
retf
inc
and
ins
sbb
adc
pop
ret
push
std
lea
fwait
adc
inc
clc
xor
sub
icebp
sbb
or
ins
repnz
xchg
pop
cmps
sbb
sub
cmp
inc
or
ins
pop
imul
and
je
fsubr
cmp
mov
adc
push
adc
push
jg
or
or
clc
mov
mov
leave
push
loop
add
maxps
rcl
inc
add
jl
push
ss
fmul
mov
sbb
jle
popf
inc
jg
lods
or
or
xchg
dec
test
jl
mov
imul
cmp
pop
xchg
(bad)
pop
outs
inc
mov
mov
(bad)
jecxz
out
dec
cmp
pop
dec
aas
iret
inc
dec
aad
add
push
fdivr
push
dec
clc
cmp
cmp
sbb
xor
mov
idiv
mov
lahf
popa
aas
xchg
dec
mov
and
push
enter
dec
dec
pop
inc
shr
loope
stos
and
test
mov
jmp
out
sbb
adc
adc
adc
in
clc
int
and
mov
pop
or
cmc
(bad)
sub
and
mov
fcmovnu
cdq
(bad)
fnstsw
pop
cmp
and
dec
push
or
std
mov
std
push
aam
inc
sub
lock
imul
fwait
in
mov
jl
in
hlt
imul
sub
pop
outs
inc
xchg
test
adc
cs
movs
stos
fldcw
(bad)
mov
cli
hlt
int3
ficom
cmp
fmul
push
cmp
mov
retf
int3
stos
into
xor
cmp
push
cld
leave
dec
test
cmp
adc
fucom
lea
imul
xor
push
adc
loop
into
inc
out
sbb
test
shr
sti
mov
fiadd
jo
sbb
sub
jle
sbb
test
cmp
mov
push
jns
sub
or
icebp
fsubr
nop
adc
aas
loope
loopne
push
jecxz
sbb
jecxz
vpaddw
gs
popf
lock
jno
pop
ret
lods
shr
dec
mov
or
and
push
leave
dec
or
mov
cmp
jne
cmp
lea
fcomp
jo
jmp
or
xchg
push
ror
in
xor
hlt
mov
sub
nop
dec
and
ins
adc
cmp
retf
or
push
gs
pushf
(bad)
jge
rcl
push
dec
(bad)
push
cs
mov
xchg
and
mov
mov
jno
add
mov
sbb
data16
sbb
xlat
fidiv
movs
sub
call
jne
pop
add
xchg
les
imul
jo
mov
lea
mov
enter
mov
shr
mov
sub
add
lahf
lock
jne
add
xchg
xor
stc
cli
mov
cmps
push
jmp
pop
test
sub
sub
add
push
mov
push
or
int3
push
mov
dec
push
hlt
dec
jmp
test
cld
mov
fstp
add
add
mov
mov
dec
movs
or
jmp
ins
cdq
xchg
sub
sub
sti
mov
jmp
mov
fsubr
fbld
loopne
iret
inc
cwde
loop
fdivr
lods
das
test
int3
push
jl
fs
in
nop
cmp
outs
stos
xchg
sub
sbb
mov
ror
(bad)
in
jnp
adc
pop
pop
cli
fmul
rol
jle
mov
dec
mov
fistp
and
aam
js
sbb
jb
lahf
cmp
js
jb
sub
adc
imul
or
fdecstp
or
sub
mov
mov
mov
sbb
out
inc
shl
push
enter
inc
ins
(bad)
std
imul
push
mov
dec
dec
jns
mov
repnz
sbb
jmp
in
mov
and
movs
cld
pop
fstp
mov
mov
test
xor
test
pop
cmp
fisubr
lea
xchg
xchg
or
jns
out
shl
xchg
sar
clc
cs
pop
sbb
call
ins
fwait
mov
sbb
test
sub
out
in
push
cmp
jle
ins
jmp
aam
adc
lds
mov
std
sbb
clc
push
jmp
pop
ins
cmps
dec
loope
shl
cdq
sbb
inc
dec
dec
dec
jo
fldcw
sbb
or
(bad)
in
mov
test
aas
rcl
les
dec
cmp
jmp
mov
mov
aad
les
mov
and
mov
loopne
imul
lods
mov
push
or
(bad)
push
dec
(bad)
jmp
xchg
pop
ja
cmp
sub
sub
test
mov
test
out
add
(bad)
fistp
push
or
lods
or
and
out
dec
cmp
out
out
cmp
(bad)
aaa
dec
jae
stc
into
retf
repnz
jne
inc
dec
adc
jecxz
sbb
retf
fiadd
loopne
lods
cmp
ds
adc
leave
mov
xor
mov
ja
fs
(bad)
sahf
sbb
or
push
lock
jb
jge
jge
cld
inc
xor
fs
stos
outs
sbb
mov
ins
scas
jge
inc
or
or
cmp
rcl
popf
sbb
movs
or
cmp
mov
push
push
lods
sti
pop
mov
inc
cmc
fisubr
sbb
ins
mov
xchg
test
adc
outs
add
add
mov
lahf
int3
push
and
inc
mov
inc
cwde
sub
sar
push
iret
or
loopne
cmp
aad
mov
bound
cld
fcomi
icebp
int
out
inc
test
sbb
mov
data16
inc
mov
in
imul
shl
mov
mov
pop
mov
cmp
imul
shr
ins
sub
inc
es
and
xchg
iret
fmul
mov
stos
lahf
jne
(bad)
out
fmul
sub
xor
cs
mov
fldcw
leave
dec
mov
mov
sahf
out
jo
fimul
shr
inc
addr16
and
jg
ins
xchg
into
push
mov
add
gs
push
or
adc
lods
retf
push
cmp
outs
(bad)
je
jbe
bound
enter
sub
pop
addr16
aam
movs
pop
add
push
push
pop
mov
xchg
popf
lds
mov
(bad)
shr
cli
adc
jb
imul
ja
or
movs
lods
cmp
mov
aas
dec
(bad)
rcl
push
mov
(bad)
int
(bad)
mov
xchg
mov
aad
pop
cmp
popa
or
sub
movs
push
fldln2
scas
inc
imul
jbe
push
(bad)
cmp
mov
out
push
lods
inc
mov
jne
ret
jno
push
inc
ror
test
push
inc
int
sub
and
hlt
push
data16
cmps
std
test
dec
and
leave
(bad)
repz
pop
scas
sub
jne
movs
(bad)
add
aaa
jl
int3
out
push
pop
cmp
test
lods
loopne
mov
test
rcr
fnstcw
int3
adc
jne
test
fwait
mov
call
hlt
repnz
test
mov
xor
push
stos
dec
lahf
popa
test
ja
dec
push
pop
std
inc
jmp
cmp
aam
pop
mov
add
popf
jo
popa
mov
adc
push
xchg
lea
push
push
sbb
cdq
xchg
addr16
cmp
xor
shr
fmul
inc
(bad)
hlt
jp
mov
adc
sahf
js
cmp
clc
jnp
gs
mov
call
xor
sub
div
mov
cwde
mov
clc
fsubr
rcr
int3
xchg
cmp
(bad)
and
and
xor
jl
mov
hlt
add
call
in
and
adc
add
pop
aaa
ins
inc
jl
dec
movs
pushf
xchg
push
mov
mov
fisub
xchg
hlt
jge
sub
xor
pop
test
xchg
outs
mul
shr
adc
or
sbb
jmp
fs
inc
pop
dec
jo
lods
call
mov
shl
lea
aas
xor
xor
adc
add
imul
ins
inc
jl
mov
mov
cwde
loopne
fisubr
sub
jp
jns
cmps
sbb
mov
movs
push
cwde
sub
pop
sub
retf
dec
sub
dec
pop
ins
and
fistp
ins
(bad)
jecxz
sbb
test
scas
cmp
or
je
push
sub
sbb
stos
or
fwait
ins
push
mov
xor
dec
sbb
mov
add
pop
or
mov
jo
enter
mov
jg
test
hlt
mov
int3
jb
ret
jo
jnp
les
cmp
cmp
mov
mov
dec
popf
popf
sbb
stc
mov
fcmovnu
ret
push
mov
mov
ins
push
pop
or
pop
fdivr
or
hlt
sub
ror
cmp
sbb
fwait
dec
add
xor
sub
add
sub
test
mov
test
mov
imul
pop
push
stos
cs
outs
outs
push
cld
sub
ret
(bad)
mov
movs
jl
mov
call
inc
push
aas
mov
mov
test
mov
pop
mov
mov
retf
sub
movs
pop
xchg
mov
push
out
pushf
call
xchg
mov
lods
push
stc
fcomp
fsub
int3
fcomi
jp
jp
imul
scas
nop
pusha
sub
jecxz
add
cmp
mov
mov
mov
mov
mov
cmps
pop
repnz
call
push
nop
xchg
in
xor
add
xchg
lock
lods
movs
rcl
adc
aam
cmc
mov
sub
push
aad
sbb
inc
xchg
mov
cmp
pushf
push
sbb
jne
sub
inc
test
in
inc
adc
dec
sbb
fld
int3
clc
pop
cmp
fsubr
sbb
or
jl
test
jp
out
or
loop
xor
call
int3
mov
or
cmp
scas
and
lods
popf
stos
leave
adc
pop
xchg
in
cwde
xor
xor
jmp
mov
cmp
mov
or
jmp
mul
cmp
test
cmp
ins
cmp
push
fst
jo
xchg
test
cmps
mov
icebp
int
push
jp
add
fmul
test
clc
int3
adc
jg
fwait
out
inc
outs
xor
xchg
mov
popf
data16
mov
les
mov
fsubr
sub
add
jo
in
inc
out
out
inc
sbb
popf
movs
sti
pop
mov
inc
or
cmp
repz
je
add
stos
or
fldcw
pop
adc
sbb
sub
dec
nop
ins
xchg
push
mov
sbb
es
inc
jmp
js
ret
dec
clc
scas
pop
cmp
pushf
inc
pop
pop
pop
sbb
sub
shl
mov
mov
jecxz
js
(bad)
push
imul
or
or
sbb
sbb
adc
and
rcr
mov
push
or
cmps
sub
mov
js
pusha
int3
inc
sbb
scas
cmp
mov
icebp
lods
out
icebp
cwde
(bad)
rcr
xlat
stc
repz
inc
les
adc
sahf
sbb
jp
jge
cmp
ss
cld
test
addr16
adc
jl
sar
cld
sub
fsubr
cli
mov
or
ins
js
inc
inc
pushf
call
mov
cli
(bad)
and
dec
in
adc
imul
xchg
inc
shr
sbb
sub
cmp
imul
cwde
cmp
mov
pushf
or
rep
xlat
std
jge
rcl
sbb
xor
stos
pop
mov
popf
mov
sub
jg
cmp
jecxz
jo
pushf
jmp
stc
ss
iret
jmp
add
ficom
xor
repnz
pop
jge
jae
push
mov
stc
inc
mov
adc
loop
sbb
out
imul
in
jns
fstp
dec
je
jae
fcompp
lods
or
and
sbb
(bad)
js
push
mov
push
cwde
in
jp
sbb
mov
mov
bound
pushf
in
into
and
pushf
fnsave
ins
add
cmps
adc
(bad)
aaa
jnp
in
push
jo
pusha
test
jle
(bad)
mov
mov
in
sbb
dec
jmp
push
inc
pop
add
movs
push
mov
test
out
cmp
pop
sbb
push
or
cmp
lahf
(bad)
dec
in
imul
cmp
sbb
popf
push
xchg
inc
test
mov
dec
out
inc
call
movs
fstp
sub
inc
push
cmp
enter
mov
sbb
mov
sbb
test
mov
das
leave
imul
pop
mov
sub
mov
mov
sbb
movs
out
stc
jg
add
pop
mov
push
jb
fcomp
mov
inc
mov
inc
push
inc
xchg
in
(bad)
iret
loop
xor
(bad)
daa
push
and
cmp
outs
mov
and
in
pop
add
aad
mov
mov
loope
cld
rcr
mov
jns
sub
wrmsr
retf
mov
stos
adc
jge
and
push
enter
stc
push
clc
sub
out
sub
push
ins
sbb
jge
imul
cdq
mov
js
cmp
mov
lock
and
loope
sbb
mov
mov
movs
adc
test
fsubr
stos
fcom
lock
jecxz
pop
fsubr
in
pop
sub
xchg
jge
dec
xor
cdq
(bad)
hlt
pusha
xor
adc
stc
pop
test
les
mov
mov
mov
push
movs
inc
adc
int
loopne
lock
or
shr
push
int3
(bad)
in
jns
imul
call
popa
cld
in
mov
hlt
pop
xor
dec
jb
sub
sub
cmps
xchg
push
xor
popf
mov
push
sbb
mov
sub
mov
ds
lahf
in
js
movs
not
(bad)
lock
mov
rcr
lds
adc
enter
xor
addr16
jb
mov
sahf
stc
mov
and
sbb
pop
int
bnd
push
shl
mov
sbb
push
push
xchg
sub
cld
fst
pusha
popa
mov
test
mov
mov
data16
out
ds
pop
into
cmp
mov
popa
dec
out
mov
fisttp
lods
sub
push
sub
push
and
dec
jnp
call
rol
lods
call
sbb
cli
xchg
sub
mov
outs
adc
call
mov
rol
f2xm1
(bad)
das
push
push
fndisi(8087
sbb
pop
sub
add
ins
ss
stos
mov
setl
mov
bound
mov
cs
xlat
fs
push
inc
fimul
int
(bad)
(bad)
fnstsw
repnz
jp
in
clc
cmp
mov
(bad)
fdivr
pushf
test
cwde
in
add
js
js
mov
inc
test
jne
enter
fwait
sbb
cdq
fisubr
in
cmovge
int3
push
fucomp
sbb
(bad)
je
fs
pop
test
dec
fdiv
repz
sub
inc
fsub
or
sbb
adc
outs
outs
lods
ja
sub
stos
dec
mov
pop
in
cmp
and
mov
mov
pop
mov
mov
mov
cmps
js
xchg
aaa
test
cmc
push
mov
arpl
and
mov
fisttp
lahf
jae
fiadd
shr
clc
lock
movs
pop
fbstp
movs
cmp
call
xchg
popf
mov
and
add
push
cld
daa
add
js
cmp
and
adc
pop
imul
rol
jmp
xchg
ror
data16
sub
(bad)
cmps
arpl
jnp
shr
add
sub
sbb
fimul
adc
sbb
dec
or
pop
fmulp
into
jb
add
dec
or
xchg
push
mov
out
pop
stc
lods
mov
ins
or
push
shr
add
daa
lea
xor
movs
mov
sub
dec
into
icebp
and
ret
rcr
cmp
sub
js
test
or
push
outs
dec
enter
mov
mov
mov
jmp
dec
cmp
mov
sub
and
inc
cmp
mov
and
loopne
nop
dec
cmp
and
inc
in
add
xor
js
rcl
push
mov
mov
or
rcr
out
(bad)
ins
lods
push
and
popa
(bad)
add
mov
movs
ins
stc
mov
sbb
mov
mov
dec
in
sub
sbb
out
test
push
pop
mov
mov
or
enter
lods
in
xor
das
sub
ror
jmp
mov
gs
mov
aad
cmps
popf
cmp
jecxz
fld
adc
mov
enter
cmp
aam
je
or
je
adc
mov
jbe
mov
add
mov
shr
sub
in
xor
(bad)
push
mov
push
pop
push
mov
call
neg
cmp
mov
in
pop
mov
pop
adc
popa
mov
test
lods
pop
int
retf
sbb
xor
mov
or
pop
data16
sbb
dec
aad
nop
sahf
push
jne
pop
in
mov
sbb
jno
fmul
sub
pop
add
outs
rol
jmp
lds
pop
ret
sbb
dec
cli
dec
lahf
sub
inc
dec
pop
fst
jle
mov
jnp
sub
lock
(bad)
clc
xor
pop
add
xchg
dec
sti
data16
jge
shr
adc
push
sub
pop
aam
sub
sbb
pop
js
mov
or
fdivp
arpl
leave
mov
jne
int3
sub
fisttp
and
test
imul
movs
mov
mov
jmp
add
lods
dec
pop
inc
push
data16
add
mov
mov
xor
dec
sbb
add
inc
(bad)
jnp
or
mov
in
stc
mov
fwait
push
(bad)
faddp
push
sti
cmp
enter
dec
mov
neg
into
mov
or
sti
sub
pop
push
sub
cmp
lahf
jns
lods
retf
ret
push
loop
dec
sti
ja
loopne
jno
inc
icebp
sub
lods
sub
lods
mov
fcom
enter
jns
sub
or
dec
cmp
aaa
push
outs
fwait
enter
out
jno
stc
and
dec
jb
ret
or
sub
inc
and
push
sar
add
xor
out
sbb
cmp
jnp
or
sbb
popa
pop
dec
sbb
dec
out
xchg
pushf
lods
aam
mov
cs
ins
and
dec
repnz
push
push
dec
push
imul
jne
jmp
ds
pop
mov
xor
mov
adc
or
sub
xchg
cmp
stc
mov
jmp
xor
and
stc
iret
iret
push
mov
js
lahf
mov
ins
stos
mov
ret
lods
xchg
lea
and
xor
ja
push
leave
ins
or
lds
dec
mov
das
clc
lods
cmps
mov
lods
xchg
imul
sub
push
add
in
clc
ror
sub
dec
dec
inc
adc
or
ins
sbb
sbb
mov
scas
out
mov
mov
sub
jecxz
xor
jl
mov
jl
fidiv
jl
or
inc
adc
imul
gs
mov
cdq
mov
in
out
int
sub
xchg
sub
jl
mov
clc
std
pushf
repz
sbb
mov
stos
lahf
adc
jne
jns
div
mov
push
dec
sbb
popf
les
shl
sub
adc
or
push
adc
sbb
pop
aam
std
(bad)
into
pushf
sbb
es
mov
jbe
sub
dec
rcr
hlt
dec
fs
movs
jb
cmp
enter
push
push
popa
adc
jmp
ret
mov
pop
bound
inc
jns
int3
sbb
gs
sub
jns
clc
pop
pusha
lock
jb
pop
ss
sbb
(bad)
sub
cmp
sbb
in
pop
cmp
mov
std
movs
sahf
dec
pop
mov
adc
mov
aad
das
xchg
mov
cwde
ins
gs
mov
push
dec
lods
cmp
jns
repnz
out
enter
frstor
out
and
sar
push
loopne
dec
inc
shr
mov
push
cmp
cmp
push
aam
fsubr
jl
fcomp
xchg
je
mov
mov
je
sub
not
test
xor
clc
mov
fsubr
jl
aad
popf
movs
scas
push
mov
sub
sbb
pushf
push
xor
lods
mov
mov
push
test
xchg
ja
mov
loope
sub
dec
gs
mov
call
fcom
in
leave
ins
jmp
and
jl
pop
push
mov
in
inc
loopne
sbb
rol
ins
out
cld
cdq
and
adc
mov
pop
xchg
call
mov
xor
das
in
retf
mov
shl
mov
push
js
sar
gs
nop
lds
sbb
push
and
in
cmp
bnd
popf
dec
pop
push
pushf
sahf
jno
add
adc
int
loopne
inc
mov
mov
mov
pop
nop
out
(bad)
nop
sar
dec
in
sbb
push
int
jo
sub
jmp
dec
mov
(bad)
lahf
dec
lods
mov
(bad)
and
adc
pop
inc
push
ret
jl
dec
call
push
dec
cmps
(bad)
cmp
sub
cld
leave
cld
cmp
sub
or
pop
xor
mov
push
(bad)
mov
dec
in
iret
leave
clc
or
cmp
inc
mov
mov
shl
cmc
pop
test
sub
cld
fmul
out
xchg
jmp
int
mov
pop
pop
jmp
stc
nop
les
js
jle
dec
rcr
loopne
pop
xor
call
jmp
mov
or
push
ins
popf
ja
xchg
(bad)
jle
addr16
add
sbb
mov
cmps
add
push
fcom
movs
inc
push
fsub
mov
pop
in
inc
sub
mov
int
or
lods
mov
sahf
clc
mov
sub
(bad)
enter
and
mov
mov
cmp
je
inc
or
fxch
dec
rcr
loopne
jae
jl
adc
outs
push
mov
jl
cmp
lods
inc
mov
adc
fmul
enter
sub
adc
(bad)
cmp
mov
add
mov
mov
or
inc
ss
or
int3
sub
cmp
nop
sbb
dec
shr
dec
or
fadd
enter
in
cmp
cmp
pop
sti
pop
jae
fldenv
call
mov
xor
movs
ins
adc
pop
push
call
ins
pop
movs
xor
mov
mov
leave
inc
lds
sub
and
mov
ror
(bad)
and
pop
out
and
and
xchg
mov
dec
ins
mov
jns
les
sti
jmp
or
mov
jo
mov
sub
sub
add
cmp
jbe
cmps
pop
xchg
pushf
mov
(bad)
call
shl
ror
imul
push
mov
imul
int
sbb
inc
inc
or
mov
mov
inc
jno
(bad)
mov
xor
fnstcw
imul
retf
lods
xor
hlt
ror
aam
test
adc
ins
inc
pop
cwde
dec
inc
scas
pop
xor
hlt
push
popa
std
jecxz
ret
fucomp
mov
pop
loopne
aad
inc
mov
mov
xchg
jns
xchg
add
test
xor
or
rol
adc
not
inc
sub
sbb
loopne
cdq
mov
jae
jae
pop
add
cmp
jmp
mov
enter
jle
or
loopne
jnp
or
mov
jne
or
or
cdq
cwde
pop
aam
out
cmp
jl
fadd
or
stos
mov
and
sti
push
cs
and
jb
pusha
jne
(bad)
pop
out
les
pop
(bad)
std
add
adc
lds
sub
inc
sub
adc
test
pop
push
cmp
aam
call
xor
lea
pop
nop
jge
pop
test
enter
xor
cli
into
fcmovnb
jecxz
cmp
out
cwde
mov
pop
std
add
xor
jp
sbb
ror
sbb
mov
dec
adc
bound
push
mov
mov
test
clc
sar
or
jmp
and
push
aam
or
or
ds
lock
cmp
retf
cmp
pop
sbb
dec
popf
imul
fisub
repnz
jmp
push
and
cwde
cmp
sub
cmp
mov
fisubr
(bad)
fistp
or
sbb
clc
sub
pop
dec
ret
shr
sbb
call
cmp
and
shl
mov
cdq
cmc
mov
sar
sub
sbb
push
mov
and
fld
test
add
or
pop
icebp
in
test
adc
xlat
cmp
imul
test
arpl
or
inc
nop
adc
dec
inc
add
imul
ins
cld
pushf
lea
cmc
add
xlat
jl
out
hlt
out
das
add
adc
addr16
test
pop
ss
je
fs
clc
jle
pop
push
es
popa
(bad)
mov
jne
inc
icebp
aad
pop
jle
add
xchg
pusha
lods
inc
mov
rcr
ja
aaa
push
enter
add
fild
std
cmp
(bad)
jmp
cmp
shr
mov
shr
loop
mov
mov
pop
push
jne
mov
lods
jmp
jb
lods
repnz
sar
or
popf
add
push
jp
out
dec
dec
dec
rcr
in
mov
jb
(bad)
cld
aas
out
test
or
xchg
inc
push
lods
lods
mov
sbb
sar
adc
fcomp
jo
jns
mov
dec
jge
mov
mov
adc
dec
cli
dec
adc
fidiv
fsubr
mov
mov
sub
mov
fldcw
aam
pop
mov
push
sub
out
push
add
cmp
pop
inc
js
and
(bad)
test
les
xchg
int
xor
pop
loopne
pushf
ds
xor
out
push
mov
mov
ret
push
xor
mov
cmps
scas
jne
dec
mov
push
push
mov
in
aam
fcomp
mov
mov
lods
mov
cdq
leave
push
sub
and
ret
push
shl
adc
mov
xchg
mov
(bad)
in
stc
push
xlat
daa
sbb
pop
push
inc
ins
xchg
leave
add
cmp
mov
dec
jge
adc
mov
or
cmp
push
push
les
dec
cmp
aam
push
pop
les
dec
sub
fcom
shl
sub
sbb
inc
or
inc
lea
pop
dec
nop
pop
or
imul
aad
imul
sub
jbe
fnstenv
jmp
and
cmc
aam
pop
cld
add
popa
cmp
push
mov
scas
sbb
mov
sub
fadd
cmp
cmp
add
inc
sbb
data16
dec
inc
mov
and
add
leave
sub
fdivr
xlat
mov
pushf
hlt
inc
dec
add
mov
out
mov
pop
imul
xchg
fdiv
int3
call
xchg
fsubr
and
xchg
push
push
mov
mov
mov
ss
push
int3
add
pop
call
mov
sar
inc
movs
jmp
and
cli
dec
adc
add
(bad)
pop
mov
cmp
mov
(bad)
popf
test
add
dec
and
sbb
adc
xchg
push
ja
sbb
mov
mov
imul
repnz
inc
push
leave
jno
mov
clc
mov
stos
mov
inc
pop
xchg
and
std
pushf
pop
rcr
aam
push
cmp
stos
dec
mov
push
in
jo
dec
dec
imul
lea
movs
add
jge
pop
ja
adc
xchg
cmp
loopne
sbb
fcom
mov
(bad)
cmp
(bad)
loopne
jne
push
xor
dec
fadd
in
fdivr
les
xor
mov
test
fadd
add
adc
mov
fcom
popa
mov
jbe
jmp
inc
push
or
lods
sbb
ret
xchg
and
cwde
pop
test
inc
cmp
sbb
rcl
test
iret
adc
jge
pop
movs
xchg
test
sbb
int3
pop
adc
test
cmp
push
and
call
mov
sub
test
adc
jns
adc
fdiv
sbb
mov
sbb
test
fdivr
sub
mov
pop
fs
inc
mov
sub
or
add
dec
pop
fcom
jg
and
pushf
je
add
inc
out
es
(bad)
sbb
sbb
enter
rcr
push
xchg
mov
in
out
xor
mov
push
or
dec
sbb
mov
jbe
fstp
sbb
ror
xchg
outs
cmc
jnp
jns
sbb
sahf
dec
sbb
in
cmc
stc
in
or
jle
cld
retf
fsubr
cmp
lods
cmp
push
sub
pop
sub
sahf
lock
hlt
dec
fld
das
clc
test
jo
sbb
rdtsc
cmp
sbb
mov
cmp
shl
mov
sbb
cmps
pop
mov
mov
ins
jnp
fsubr
mov
fcomp
mov
outs
out
push
sub
popa
inc
lahf
xchg
mov
js
jle
call
pop
mov
(bad)
push
sub
dec
stos
mov
loopne
dec
nop
sti
mov
jmp
lods
scas
pushf
(bad)
ror
dec
or
outs
jg
dec
mov
shr
mov
fmul
retf
stos
cmp
pop
sub
sbb
cmp
add
stc
cmps
in
(bad)
cmps
(bad)
scas
in
adc
push
sub
cmp
mov
pop
jp
pop
and
xchg
pop
pop
ret
loopne
mov
loop
icebp
cmp
pop
and
out
and
and
imul
retf
int3
rcr
in
jge
mov
fcom
call
ins
out
scas
ficomp
jl
iret
scas
dec
loope
loope
and
pop
inc
dec
cmp
mov
ja
lds
fisttp
cwde
xchg
in
mov
outs
es
mov
jne
pop
cmp
xchg
add
or
aam
pop
ret
in
les
jnp
cmc
fstp
mov
aas
sub
rcr
xor
jmp
xchg
test
fimul
call
jo
mov
movs
mov
fs
cs
mov
sbb
fld
sub
(bad)
push
clc
sbb
in
pop
call
les
pop
(bad)
jle
call
mov
f2xm1
pop
loopne
adc
sbb
hlt
lods
jmp
jno
ja
dec
inc
fcom
adc
and
jl
push
sub
sbb
pop
add
lahf
dec
add
mov
(bad)
cdq
pushf
aad
out
sbb
add
mov
or
pop
nop
dec
pop
jb
fbstp
inc
imul
push
push
shr
xchg
jae
daa
in
xor
push
jae
inc
sub
sub
and
add
fs
dec
pop
mov
mov
dec
mov
xchg
push
mov
repz
pop
sub
sub
mov
adc
ds
sbb
jo
imul
jmp
and
dec
add
jbe
adc
inc
mov
popf
loope
adc
test
dec
imul
dec
lods
xor
pop
push
cmp
imul
ins
push
ficomp
sub
inc
sbb
jmp
sahf
push
pusha
pop
push
jo
pop
mov
pop
lods
hlt
rol
in
shl
mov
cmp
cmps
aas
std
xor
in
mov
cmp
fnstcw
repnz
iret
sbb
cmp
or
loop
mov
movs
jo
arpl
call
in
mov
enter
sbb
inc
jl
mov
jne
adc
xchg
repnz
cld
loope
hlt
sub
add
jno
xchg
sbb
sbb
add
je
sbb
inc
pusha
mov
jns
out
cmp
xor
push
dec
sbb
les
cld
xor
push
mov
mov
push
fmul
cmp
es
pop
outs
sub
sbb
into
test
mov
xlat
mov
and
std
aaa
loopne
jne
cmp
push
(bad)
mov
int
in
aad
fwait
and
mov
scas
addr16
adc
sbb
in
dec
pop
pop
sbb
or
movs
xor
add
adc
mov
fsubr
adc
mov
jge
pop
xchg
pop
nop
mov
fsub
cs
adc
sbb
stc
pushf
dec
popf
jno
mov
movs
mov
mov
int
ffree
pushf
leave
loopne
lods
loopne
or
std
aad
call
adc
mov
cdq
lods
xchg
jge
out
sub
or
ficom
inc
jle
jl
mov
xchg
lods
cdq
adc
cmps
jbe
aaa
push
arpl
leave
mov
xchg
cmp
sub
cld
pop
ins
js
aam
out
aam
loope
xor
aam
fsubr
sbb
mov
mov
int
pop
xchg
or
pushf
cwde
or
push
pop
add
fidivr
sar
cld
in
push
pop
sub
jl
in
stos
sub
xor
mov
imul
push
std
aam
inc
jb
or
adc
sub
cmp
pop
movs
dec
or
mov
repz
test
sti
pushf
push
cmp
stc
xlat
jecxz
sub
inc
icebp
push
int3
retf
mov
pop
mov
jno
lds
adc
loopne
nop
cmps
fimul
pop
lahf
dec
mov
xchg
dec
mov
xor
iret
sub
inc
mov
push
jge
hlt
call
cmp
ret
cwde
jae
gs
jge
dec
mov
cwde
inc
mov
push
inc
int3
out
hlt
cld
jl
add
daa
ror
cmp
or
pop
dec
jae
jb
dec
addr16
sbb
call
dec
(bad)
(bad)
sub
xor
loopne
std
outs
(bad)
ficomp
mov
test
cdq
and
int3
rol
bnd
fsubr
xchg
ret
dec
test
cs
leave
inc
arpl
int3
dec
das
mov
pop
sub
lds
xlat
mov
xchg
cmp
lods
std
cs
jg
(bad)
(bad)
lock
mov
mov
mov
cmp
add
outs
jnp
xor
mov
xchg
cmp
imul
fsub
mov
add
add
shl
xchg
mov
sti
or
xchg
sub
jle
mov
dec
mov
push
shl
adc
pushf
push
lahf
jmp
jmp
mov
jb
test
lock
arpl
popa
addr16
js
out
mov
dec
cli
jmp
fldcw
fwait
push
dec
outs
push
jne
jecxz
test
pop
or
call
mov
xchg
pop
icebp
push
dec
movs
aam
je
add
pop
cmp
hlt
enter
mov
push
pop
test
(bad)
imul
cwde
lods
ja
mov
std
cmps
or
or
jl
jg
and
fwait
adc
xchg
sub
sub
iret
mov
cld
pop
sub
sbb
and
int
popf
aad
(bad)
fwait
sub
adc
mov
push
popa
mov
push
out
push
in
push
jge
xor
push
add
pop
jmp
jecxz
aad
shl
sbb
or
push
mov
icebp
sbb
push
test
or
fisub
dec
(bad)
pop
pop
push
push
cmp
sub
inc
jmp
and
pop
pop
jle
sbb
xchg
imul
imul
cdq
(bad)
jmp
dec
or
dec
and
mov
retf
dec
jae
adc
sbb
mov
out
cs
(bad)
mov
sub
and
add
dec
dec
popf
or
stos
mov
pop
pop
retf
cmp
sbb
aas
add
inc
out
call
jns
pop
or
mov
call
cdq
pop
cmp
fdivr
cmp
sahf
inc
(bad)
xchg
pop
dec
outs
cmp
mov
(bad)
repz
and
sub
cld
push
add
pushf
cmp
call
scas
push
dec
scas
stc
scas
push
and
dec
bound
popf
scas
and
mov
xchg
add
ror
jmp
out
push
xchg
outs
push
and
jno
add
push
push
jp
rol
mov
adc
mov
rcl
(bad)
adc
jmp
lods
fnstsw
jecxz
sbb
mov
cwde
fnstsw
popf
cmp
lea
cmp
jg
fstp
jecxz
pushf
pushf
xor
or
daa
jg
(bad)
ds
jo
mov
pop
and
cmc
(bad)
pop
dec
repz
mov
in
jmp
sbb
mov
icebp
movs
or
sub
outs
or
sub
fld
ins
cs
adc
mov
cs
retf
enter
jg
jg
sub
mov
rcr
sbb
aad
and
mov
arpl
jbe
in
inc
mov
fwait
enter
sbb
cmp
arpl
adc
imul
pop
cmp
cs
mov
cmps
stc
repnz
in
bound
aam
add
or
cmps
sahf
xchg
pop
pushf
pushf
ficomp
test
push
test
outs
les
test
loop
imul
mov
adc
sub
push
xchg
sub
mov
in
pop
cs
pushf
mov
(bad)
pop
ds
jae
push
out
das
scas
in
cmp
push
or
push
jae
mov
(bad)
jge
(bad)
cwde
in
cmp
cmp
lock
cmp
popa
xchg
or
mov
mov
adc
mov
clc
mov
sub
sub
push
jl
clc
push
adc
and
sub
ds
adc
mov
pop
xchg
(bad)
outs
clc
sub
or
js
mov
(bad)
sbb
jae
pushf
or
mov
outs
js
pop
push
jl
mov
in
push
jnp
retf
cmp
int
jae
sbb
hlt
and
lahf
arpl
or
mov
pop
push
retf
mov
sub
clc
and
cmp
or
cmp
dec
clc
(bad)
iret
jge
pop
ds
neg
into
clc
je
pop
mov
sbb
dec
ret
sbb
mov
out
out
stos
mov
fnsave
sbb
je
mov
pop
add
scas
mov
add
sbb
dec
pop
ret
addr16
cs
std
and
mov
ins
shl
and
sahf
pop
push
aam
jnp
cwde
pop
jnp
stos
outs
cmp
xor
rep
stos
or
mov
pop
sbb
int
dec
cwde
dec
cmp
jle
bsf
mov
stos
lock
fmul
dec
jmp
sub
(bad)
push
mov
js
dec
gs
push
push
add
ret
js
jmp
push
(bad)
push
fisub
clc
xchg
sub
test
add
loop
or
les
and
inc
sub
ror
loope
adc
dec
popa
(bad)
add
call
outs
sub
jg
data16
call
or
cmps
call
or
push
push
sub
movs
inc
call
jp
(bad)
push
mov
pushf
movs
scas
sub
sti
call
sub
push
xchg
mov
in
test
sub
fisub
push
sub
xchg
out
push
aad
pop
mov
inc
call
retf
xchg
push
push
aad
scas
sub
js
popa
ss
push
outs
test
call
push
mov
imul
imul
adc
fadd
mov
add
scas
mov
pushf
imul
push
push
sub
popa
das
add
inc
sar
dec
les
out
cs
inc
call
sub
push
push
int3
or
adc
sub
push
jmp
jmp
and
mov
inc
jb
inc
jo
cwde
pop
je
pop
rol
mov
outs
push
jae
push
push
xor
enter
pop
call
mov
(bad)
sbb
xchg
jo
add
add
mov
fstp
push
call
repnz
sub
sahf
pop
loop
push
mov
loop
imul
jbe
(bad)
cwde
mov
push
fnstenv
push
inc
in
mov
leave
mov
push
jl
jl
or
inc
pop
cwde
inc
lock
test
mov
repnz
test
dec
fnstenv
aam
aad
push
jbe
and
cmp
sub
push
push
cmp
jo
sub
xchg
jbe
mov
repnz
push
mov
mov
pop
repnz
add
jo
xchg
cmp
shr
mov
rcr
shl
dec
jo
push
jb
fld
hlt
pop
cmp
adc
fmul
or
and
aam
sub
lock
jbe
inc
xchg
pop
test
fadd
les
mov
adc
fdiv
mov
pop
pop
cmp
fst
rol
aaa
lods
lock
in
mov
daa
aam
nop
xchg
aad
and
in
xor
scas
jp
push
hlt
fcom
icebp
retf
mov
xchg
cdq
sahf
inc
fprem
test
adc
cmp
xor
pop
pop
cmp
jae
fstp
jno
test
stos
fst
int
mov
mov
push
sar
or
cmc
jmp
xchg
push
push
jbe
imul
movs
sti
or
loopne
push
shr
lods
adc
jae
jne
jno
inc
sub
jmp
clc
or
or
mov
js
js
clc
cli
jno
jne
xor
add
mov
push
push
cli
rcr
or
stos
cmp
idiv
mov
(bad)
jmp
jno
gs
mov
enter
popa
sub
call
cmp
icebp
jmp
sbb
das
div
and
sahf
es
jmp
shr
mov
or
mov
push
push
ins
jb
repnz
repnz
repnz
bnd
popa
inc
sub
clc
retf
jl
or
pop
into
popa
and
gs
xor
cs
cmps
mov
std
sub
xor
cmps
xor
sbb
jle
mov
mov
fucomi
xor
cs
loopne
add
mov
jne
jne
jle
jle
aad
xor
push
push
(bad)
cmp
xor
loope
stos
cmc
imul
mov
add
adc
mov
lods
and
mov
mov
jp
loope
push
lock
(bad)
outs
movs
xor
sub
add
outs
xor
ja
push
xor
jb
or
pushf
retf
outs
aas
push
cmp
cmp
hlt
fadd
js
xlat
add
loopne
imul
xor
jo
lds
push
xchg
push
pop
push
and
cld
xlat
sbb
inc
and
call
aad
fild
outs
js
xchg
jecxz
pop
sbb
out
and
aas
sub
mov
push
adc
cmp
fcomp
pushf
adc
fwait
adc
inc
xchg
clc
dec
(bad)
sar
pusha
push
loopne
pusha
pop
outs
nop
loopne
scas
and
repz
int3
das
mov
(bad)
xor
outs
mov
ss
pop
push
out
sbb
lahf
js
setg
les
mov
bswap
adc
sub
popf
mov
xlat
xor
adc
push
push
jae
xchg
fdivr
xlat
lahf
pop
mov
lahf
rcl
clc
fist
xor
js
fnstenv
shl
push
sbb
pop
lahf
sbb
cmc
leave
adc
lock
outs
sbb
fcomip
outs
mov
cwde
aas
loopne
sbb
adc
mov
jge
lock
clc
stos
sbb
pop
mov
clc
and
add
loope
pop
mov
pop
mov
adc
mov
or
xor
loopne
mov
popa
sti
pop
mov
pop
mov
push
push
(bad)
js
mov
pusha
iret
sar
enter
cld
and
inc
js
lea
aaa
int3
and
xlat
pop
jl
pop
popa
mov
xlat
cld
and
jb
lahf
in
lahf
(bad)
jne
aad
in
pop
aam
adc
js
xlat
jno
xchg
adc
aad
or
adc
mov
dec
out
xor
push
jmp
jbe
mov
fsub
daa
xchg
mov
cmps
and
add
add
aad
xchg
fcomp
shl
clc
std
call
retf
jg
inc
(bad)
sahf
sti
jne
les
adc
xchg
dec
test
fst
scas
mov
dec
ror
sbb
jne
cdq
inc
mov
jg
jl
or
sti
jne
cdq
inc
mov
(bad)
cmps
ins
xor
repz
jge
cmp
jne
pop
push
mov
test
jp
fucomp
stc
and
loop
aad
jg
pop
imul
pop
add
mov
cmc
(bad)
push
adc
or
ins
cmc
jg
movs
mov
and
(bad)
fld
xchg
mov
pop
dec
call
xor
ins
adc
cmp
aas
cmp
daa
cmc
lds
cmc
inc
push
cmp
inc
lods
addr16
mov
cli
dec
fstp
lods
test
xor
inc
push
iret
or
shl
aas
fadd
out
mov
inc
push
call
push
or
xchg
hlt
imul
out
mov
adc
jo
or
jnp
cld
out
push
fwait
movs
popf
xor
sbb
push
adc
sbb
retf
ret
pusha
inc
mov
xor
(bad)
int
push
sbb
shr
xor
aad
and
scas
adc
xchg
out
sub
and
push
aam
loopne
push
ss
popf
out
push
xor
adc
es
popf
mov
repnz
dec
cmps
xchg
ret
scas
fwait
mov
clc
arpl
sub
and
and
or
aam
mov
push
jl
ins
(bad)
pushf
push
out
ins
jge
shl
sbb
sbb
std
and
aam
lds
lock
pop
mov
xor
movs
aad
stc
adc
int
data16
add
sbb
hlt
sbb
(bad)
aam
mov
push
and
push
mov
mov
add
mov
jecxz
jo
shl
lock
and
inc
inc
mov
inc
inc
out
xchg
hlt
ret
and
and
xlat
pop
psubq
scas
jo
push
pop
jo
push
sub
cli
push
out
mov
jle
mov
lock
fmul
cwde
push
xchg
push
(bad)
setbe
out
inc
lds
sbb
mov
stc
inc
pushf
cwde
retf
enter
inc
es
cmp
loopne
pop
int
repz
inc
add
push
push
jge
xchg
pop
xor
xor
iret
scas
push
push
xor
rol
push
inc
data16
or
icebp
dec
xor
out
dec
xor
sub
jp
in
icebp
aam
push
xor
test
jno
cdq
cli
cmp
ins
xor
xor
repnz
jo
or
(bad)
and
push
adc
inc
call
add
fwait
(bad)
sar
jno
aam
jno
push
add
inc
stc
cs
cmp
pop
fcomi
out
shl
fxtract
xchg
ret
or
jg
aas
sub
icebp
inc
clc
xchg
mov
sbb
aas
icebp
or
mov
bnd
mov
and
cmp
lods
sbb
mov
icebp
out
cmp
sub
cmp
ficomp
mov
mov
dec
lods
inc
cmp
jp
mov
or
xchg
mov
std
aaa
push
call
sti
jbe
into
jge
or
ret
jg
lea
pop
gs
call
and
ja
mov
fst
std
loop
out
mov
jns
xchg
scas
xchg
loope
outs
icebp
push
gs
loope
push
xor
cli
aad
std
test
cmc
ds
ins
push
out
and
add
outs
movs
mov
mov
(bad)
scas
pop
js
js
mov
icebp
cs
outs
fwait
clc
adc
and
shr
jbe
jl
shr
outs
xchg
jge
cs
out
xor
push
test
out
xchg
jge
inc
push
imul
rcl
test
xor
cmp
icebp
adc
icebp
cs
cmp
mov
jne
push
mov
popf
(bad)
out
pop
mov
loope
in
mov
icebp
fcmovbe
repnz
sbb
out
dec
test
mov
jb
push
ds
sub
cmp
cmc
xor
jle
xchg
xor
sbb
aad
leave
jbe
inc
cld
sub
daa
fst
xor
lea
loope
out
leave
push
sahf
or
inc
dec
call
into
dec
jg
into
jmp
dec
popf
pop
in
add
mov
arpl
test
in
inc
mov
outs
mov
in
jnp
dec
inc
mov
add
push
and
add
mov
dec
pop
sub
fwait
jae
cmc
(bad)
test
or
retf
and
cmp
push
add
mov
or
jns
fwait
or
in
ins
sub
nop
or
inc
aad
adc
imul
stos
in
add
sub
add
mov
push
jg
out
aas
sti
in
mov
push
in
test
pop
mov
mov
ror
add
sar
movs
jno
sub
or
cdq
sbb
loope
(bad)
mov
dec
dec
sar
jecxz
cmps
mov
pushf
test
push
in
xor
pop
ss
and
jo
lds
leave
mul
dec
inc
push
xor
(bad)
mov
sbb
jg
test
pop
sub
test
stc
or
mov
in
leave
push
sbb
xor
push
lds
add
jmp
adc
movs
xchg
test
popa
mov
(bad)
or
mov
call
pop
add
cmp
pop
pop
int
sbb
add
dec
add
pop
movs
call
cmps
mov
movs
pop
dec
inc
movs
addr16
in
adc
(bad)
(bad)
outs
or
das
mov
push
push
shl
fidivr
xor
inc
lock
loopne
test
add
ins
adc
ror
pushf
rcl
xchg
inc
imul
push
imul
jns
inc
xchg
mov
in
(bad)
cmps
jne
fxam
jmp
jo
pop
lahf
das
inc
push
rcl
call
loopne
clc
add
outs
and
call
outs
xchg
int
in
ror
rcl
rcr
shl
push
sar
and
push
nop
and
add
add
shl
out
xor
mov
call
das
lock
pop
dec
shr
nop
jmp
int3
shr
push
jg
and
call
das
xchg
movs
cmp
jg
lahf
pop
add
lahf
shr
(bad)
lock
cmp
or
(bad)
hlt
cmc
cmp
dec
cmp
(bad)
fldcw
sbb
inc
pop
lods
nop
add
sub
or
xchg
add
or
rol
popf
rol
add
mov
add
add
xchg
mov
test
or
lahf
shr
loopne
and
hlt
adc
jmp
push
sub
fcom
and
mov
jno
shr
nop
cwde
pop
pop
add
and
int
cmc
loopne
pop
jne
push
rcl
push
fbld
pop
(bad)
jle
cdq
mov
mov
call
lahf
lock
xor
jbe
push
inc
fcmovu
dec
fcomp
jmp
bound
js
lods
movs
mov
pop
sbb
and
lods
movs
mov
push
push
dec
push
sbb
jmp
pop
sbb
bound
js
cwde
xlat
mov
std
dec
sbb
sbb
int3
or
(bad)
retf
mov
jae
js
sahf
scas
mov
mov
adc
cmp
sbb
jecxz
imul
fwait
add
pop
retf
fadd
sahf
ret
in
(bad)
fmul
cmp
mov
xchg
mov
mov
lods
sub
loop
test
mov
cmp
cmp
jo
push
aaa
fs
cs
cs
out
sbb
push
cs
outs
pop
aas
dec
or
pop
gs
sub
hlt
mov
mov
push
push
lds
out
cmp
ror
mov
neg
pop
jge
push
aaa
bound
pop
(bad)
push
push
cmp
pop
lahf
sub
pushf
dec
mov
dec
add
mov
cdq
mov
ss
mov
inc
enter
ins
ror
sub
rcl
add
jno
jns
stos
bound
jae
in
pop
outs
inc
fwait
scas
out
mov
adc
adc
or
pop
pop
dec
xchg
cs
dec
inc
outs
inc
dec
inc
cs
out
ror
cs
dec
inc
outs
inc
into
shr
dec
inc
scas
ror
out
ror
scas
inc
dec
inc
outs
inc
dec
inc
scas
ror
out
ror
ror
out
ror
cs
dec
inc
outs
inc
dec
inc
dec
mov
into
mov
and
outs
and
daa
ins
ret
int3
rcr
inc
pop
add
shr
into
mov
sub
xor
dec
daa
cs
mov
lods
scas
ror
inc
sbb
movs
iret
lods
scas
movs
stos
rol
sub
and
into
mov
movs
mov
xor
and
sub
lods
iret
scas
call
inc
or
xor
mov
xor
sub
and
mov
and
push
inc
cmp
scas
out
mov
ror
inc
or
and
mov
scas
(bad)
dec
enter
adc
dec
test
shl
ror
fadd
retf
sahf
push
retf
mov
je
or
sbb
dec
stos
fdivr
ins
mov
and
les
lds
push
jae
add
mov
shr
movs
and
pop
lock
int3
add
xchg
add
sub
sub
sub
inc
rcl
cmps
sbb
sub
jae
cmp
lahf
add
ror
mov
inc
mov
dec
xor
and
inc
adc
sub
xor
scas
sub
dec
jmp
into
outs
adc
das
shl
shl
outs
cmps
(bad)
fld
sub
pop
popf
cmp
xor
scas
cmp
or
push
push
in
in
and
and
cmps
sbb
(bad)
pop
shl
xchg
xchg
cmps
xor
add
aad
pusha
pop
fmul
pop
jecxz
add
jnp
mov
sbb
add
ror
or
xchg
xor
aam
hlt
je
adc
je
xor
je
xchg
xor
aam
hlt
je
adc
je
imul
mov
xor
push
adc
je
sbb
je
push
into
pop
mov
(bad)
pop
mov
sbb
sti
cmp
adc
cmps
in
push
cmps
cmp
add
mov
cdq
ret
pop
cmp
mov
out
mov
loopne
xor
mov
aam
xchg
sbb
or
adc
and
adc
pop
hlt
adc
cmps
je
xor
aam
mov
sbb
jns
dec
pop
sub
sahf
jnp
pop
mov
stos
pop
and
loope
imul
push
vpmullw
sbb
fmul
arpl
jnp
pop
popa
das
jb
pop
leave
or
dec
mov
push
sbb
push
arpl
cmps
int3
hlt
and
test
mov
sbb
sub
adc
mov
xchg
pop
shr
and
rol
icebp
pop
and
in
rol
fs
push
call
sar
test
scas
xor
add
jl
rcr
xchg
stos
mov
call
and
test
sbb
xchg
pusha
xor
adc
lods
rcl
add
fld
das
ja
xchg
faddp
stos
xchg
ins
gs
jp
push
fs
imul
test
jne
add
fwait
sub
fidiv
cmp
xor
push
mov
pop
addr16
mov
aaa
(bad)
push
xor
(bad)
imul
sahf
xor
bound
jl
xchg
xlat
sub
or
or
dec
cmc
mov
inc
pop
adc
aad
push
clc
shr
test
pop
xor
push
push
imul
movs
or
outs
pop
sbb
icebp
fst
enter
or
jle
adc
mov
sub
imul
pop
jne
jb
test
aaa
js
ins
jno
and
mov
(bad)
xor
push
sti
test
mov
mov
jne
std
inc
scas
jbe
pop
adc
test
cmp
sub
mov
jne
adc
cmp
mov
mov
or
data16
mov
mov
xor
or
add
mov
shr
fs
pop
daa
pop
cmps
cli
inc
leave
xor
ins
pop
cmp
clc
in
cmp
pop
or
mov
stos
jmp
mov
test
push
sub
das
and
push
jno
retf
sub
or
xchg
push
jmp
sub
aas
pop
pusha
dec
xchg
add
(bad)
adc
scas
xchg
mov
in
adc
or
movs
jle
lahf
ins
jle
retf
lods
iret
or
sbb
mov
push
fdivr
call
mov
pop
mov
enter
gs
ficomp
dec
stos
ds
in
sub
mov
(bad)
clc
mov
cwde
push
fwait
adc
cdq
(bad)
mov
(bad)
jnp
in
(bad)
pop
retf
sub
(bad)
sti
dec
pop
sub
cs
push
pop
mov
dec
mov
fistp
mov
or
fstp
sub
pop
ins
stos
or
into
or
cwde
push
out
outs
cld
push
lods
adc
jge
pop
bound
(bad)
in
stos
scas
push
loop
mov
imul
cmp
mov
test
mov
jle
cwde
fsubr
sub
jnp
cwde
call
mov
push
cmp
enter
cwde
ds
pop
js
cs
fimul
scas
fsubr
push
xor
xor
cld
iret
in
sbb
sbb
sub
fdivp
jmp
pop
sub
scas
or
hlt
mov
aad
test
pop
jle
mov
or
cmp
cmc
jl
imul
push
in
repnz
arpl
inc
xlat
or
pop
inc
out
stc
ins
mov
imul
dec
pop
jge
dec
stos
cwde
fcmovne
pop
(bad)
cmp
cmp
rcl
cmc
cwde
je
jl
ins
clc
js
fmul
pand
sub
pop
sub
push
mov
dec
dec
js
fidiv
push
sbb
jbe
dec
mov
adc
xchg
ss
add
mov
ss
add
scas
test
in
xor
inc
mov
cmp
adc
ins
push
and
jg
arpl
push
gs
(bad)
retf
dec
ins
xor
fs
mov
mov
and
(bad)
repz
mov
call
in
xor
jb
loopne
loopne
ins
pop
out
xchg
rcr
nop
je
inc
inc
(bad)
rcl
repnz
ja
xor
push
adc
mov
popf
gs
cmps
add
sbb
push
call
loop
or
inc
sub
shr
aad
in
push
ja
inc
push
inc
inc
inc
dec
sub
aad
and
pop
int3
data16
inc
inc
in
retf
stc
or
test
test
fs
loop
ret
das
test
xchg
retf
sbb
cmp
ret
mov
bound
ret
pop
fadd
call
push
xor
adc
ret
and
aam
or
fcmovne
(bad)
fdivrp
das
rsqrtps
mov
mov
fidivr
(bad)
pop
fldenv
call
sahf
repnz
dec
mov
aam
and
js
mov
int
lods
push
push
es
push
nop
cmc
push
xor
out
mov
pusha
jp
stos
mov
cli
cmp
aam
aad
mov
ja
mov
jl
std
mov
pop
hlt
mov
idiv
sbb
call
call
add
push
stos
inc
aad
jp
pop
in
mov
pop
mov
repz
push
gs
xchg
out
(bad)
repnz
cli
adc
je
and
scas
out
ret
retf
sbb
retf
in
cld
cli
lds
xchg
jp
jg
js
or
cli
fwait
mov
jns
test
retf
test
xchg
lock
and
retf
adc
movs
adc
scas
fcomp
add
(bad)
cmps
shl
add
jg
cli
xor
jmp
xchg
jp
pop
jge
lods
or
addr16
hlt
sti
enter
inc
retf
jne
(bad)
outs
jne
je
inc
pop
test
mov
mov
stos
outs
jns
mov
inc
mov
cmp
push
push
fwait
aad
push
aad
jae
pop
ins
scas
cs
int3
sub
or
(bad)
ds
dec
loopne
push
mov
adc
cmp
pushf
xor
mov
sub
fcmovu
out
test
cmp
loopne
sub
repnz
shr
push
popf
pop
or
ins
mov
dec
out
dec
pavgb
scas
mov
rcr
jl
ins
and
and
push
pushf
scas
pop
scas
fwait
or
jmp
jg
sub
jo
dec
pop
inc
setge
dec
push
shl
shl
std
sub
out
fadd
neg
mov
jmp
mul
int
inc
dec
(bad)
mov
jae
and
in
les
xlat
bound
dec
(bad)
out
inc
or
sub
sar
test
sbb
int3
repz
xchg
pmaxsw
adc
test
stos
or
jbe
add
out
and
sbb
sub
and
ret
mov
fmulp
sub
hlt
lahf
int3
(bad)
dec
test
cmp
in
loopne
nop
jl
ins
rol
cld
adc
mov
in
mov
sub
add
push
fldcw
popa
outs
nop
aad
rcr
scas
adc
cmc
ret
push
iret
inc
lods
adc
rcl
das
pop
push
hlt
fmul
and
dec
jl
mov
and
adc
jl
int3
loop
or
pusha
push
sbb
cmps
stos
ja
hlt
adc
or
sub
add
aam
dec
jae
gs
or
push
or
and
and
stc
ret
movs
sbb
mov
(bad)
cmp
loope
inc
xor
add
xor
pop
call
xor
mov
movs
in
mov
sbb
or
fwait
lds
(bad)
adc
call
lahf
scas
data16
imul
fisub
mov
mov
stos
push
xor
sbb
add
dec
jg
xlat
movs
or
sub
retf
add
add
cmp
sbb
adc
jae
xchg
stos
test
mov
jmp
mov
ret
add
shr
shl
sub
and
fnstenv
sub
and
jne
xor
imul
or
sub
das
push
push
cli
add
mov
cmps
pop
arpl
sub
push
mov
mov
cmp
aam
es
sbb
das
mov
or
mov
and
push
sbb
xor
loope
ins
test
mov
pusha
mov
xchg
xor
leave
popf
and
push
add
pusha
mov
(bad)
push
push
es
xor
inc
mov
(bad)
lock
xor
rol
pop
pushf
(bad)
jmp
movs
movs
sub
xor
xor
push
xor
jo
scas
adc
xor
mov
and
and
push
mov
test
sub
nop
test
mov
pop
test
lock
mov
adc
inc
lock
adc
mov
adc
xchg
scas
mov
hlt
shl
cld
sahf
cdq
aam
adc
shl
jle
mov
add
mov
dec
scas
lock
pop
int3
jecxz
outs
cmp
setae
and
push
jmp
sub
jmp
adc
(bad)
push
xor
add
jae
mov
xor
dec
cli
pop
(bad)
mov
push
xor
pop
(bad)
mov
xlat
push
mov
ds
in
test
cmc
movs
add
gs
sub
rol
mov
(bad)
jl
mov
xor
xchg
xor
retf
and
lock
cmps
sub
daa
out
xor
rcr
mov
adc
pop
aas
pop
adc
movs
cli
mov
mov
sar
xchg
or
and
or
adc
fidivr
cwde
cmc
push
(bad)
jecxz
lds
popf
mov
les
sar
jae
push
cli
sub
jl
std
xchg
dec
nop
in
call
movs
adc
movs
fstp
gs
call
les
and
loopne
inc
add
js
lahf
xor
in
mov
add
outs
sar
inc
xlat
add
dec
clc
adc
aaa
cs
cli
lds
adc
xlat
retf
xchg
(bad)
add
icebp
ror
data16
xor
movs
imul
nop
push
movs
in
test
push
mov
pop
adc
in
pusha
sar
jmp
xor
cmc
adc
loop
adc
movs
bswap
cs
mov
test
test
jmp
xchg
cmp
push
jl
xchg
fwait
mov
and
pop
addr16
in
inc
mov
mov
movs
es
mov
enter
popa
shr
in
mov
pop
lahf
frstor
push
adc
nop
mov
dec
aas
push
aas
sub
retf
movs
fild
xchg
dec
cmp
push
daa
pop
daa
or
iret
in
pop
popa
gs
inc
sbb
sub
addr16
movs
jmp
das
jecxz
pusha
lods
cmp
mov
dec
xchg
pop
inc
adc
adc
test
sbb
inc
jg
pop
jecxz
arpl
mov
rcl
stos
aad
xlat
mov
rcl
jecxz
mov
mov
pop
loop
adc
iret
xchg
outs
mov
fnstenv
lahf
push
jmp
mov
sub
jl
pop
dec
xor
xchg
adc
mov
jb
(bad)
pushf
jbe
loop
hlt
sbb
mov
ret
dec
push
shl
sbb
ins
aaa
test
mov
cmps
dec
test
(bad)
in
dec
pop
xchg
mov
pop
mov
ins
sar
push
mov
and
popa
jmp
(bad)
or
gs
repz
shl
sbb
push
enter
outs
xor
cmp
or
loop
jmp
outs
ficomp
mov
xchg
inc
in
dec
mov
mov
test
mov
sti
rcr
jmp
lahf
neg
add
add
call
cmps
dec
push
aas
dec
dec
xor
jns
stc
addr16
pop
push
dec
sbb
xchg
and
mov
cmp
sbb
add
scas
dec
xor
add
imul
ror
pop
ins
stc
push
pop
or
movs
push
test
stos
jns
ins
test
icebp
pop
rcl
xchg
rcr
fs
inc
pop
loop
fnsave
push
jbe
movs
xchg
cmp
push
inc
repnz
xchg
pop
xchg
push
rcl
sbb
jp
lock
fwait
dec
call
cmps
push
popa
ret
push
lock
or
push
dec
cmc
dec
push
int3
pusha
and
lods
and
out
add
xchg
data16
cmp
test
pop
icebp
mov
shl
xor
stc
outs
pusha
(bad)
lock
dec
or
or
aaa
cmp
adc
dec
add
rcl
add
xor
ins
jp
xor
mov
or
mov
(bad)
dec
cli
mov
mov
mov
mov
cmp
pusha
data16
in
xchg
sbb
fs
out
sub
mov
ret
sti
dec
or
loopne
cmp
cld
and
mov
fucom
ins
call
cmp
out
push
mov
jne
mov
cmp
popa
aaa
out
ret
add
mov
mov
div
mov
test
icebp
sub
sbb
pop
and
dec
rcr
xor
mov
out
scas
pop
imul
hlt
mov
div
adc
pop
and
(bad)
fadd
and
mov
mov
mov
or
pop
mov
int3
cmp
mov
mov
sub
xor
sahf
mov
adc
imul
sahf
add
pop
mov
cmc
or
call
cmp
xor
fwait
leave
push
mov
inc
imul
stos
cmc
jnp
cs
fcmovnu
mov
cmps
sub
cmc
out
xchg
pop
in
mov
outs
push
push
sahf
xchg
(bad)
rcr
sar
nop
lahf
xchg
jl
pop
push
jge
call
cdq
xchg
fwait
je
push
pop
jae
nop
sahf
icebp
loope
sar
xchg
fwait
xchg
jnp
pop
pop
jbe
xchg
call
xchg
mov
jge
fwait
xchg
sti
xlat
fcom
clc
xchg
cdq
cdq
jbe
push
pop
jne
nop
mov
std
xchg
call
cwde
xchg
mov
cmc
popf
xchg
pushf
jae
push
pop
jo
nop
sahf
icebp
(bad)
loope
xchg
sahf
xchg
jle
pop
push
jg
lahf
nop
std
rcr
aad
cwde
xchg
pushf
jo
push
pop
jo
xchg
sahf
icebp
loope
sar
xchg
pushf
xchg
jl
pop
push
jp
fwait
xchg
sti
aam
xlat
clc
xchg
cdq
xchg
jbe
push
pop
ja
xchg
fwait
hlt
fcmovbe
(bad)
call
jae
xchg
sahf
icebp
fsubrp
loope
xchg
sahf
xchg
jg
pop
push
jg
popf
xchg
cli
aad
aam
xchg
cwde
xchg
js
pop
push
js
cwde
xchg
stc
(bad)
(bad)
stc
xchg
xchg
cwde
ja
push
pop
je
xchg
fwait
cmc
fcmovbe
(bad)
popf
xchg
pushf
jo
outs
popa
jle
scas
xchg
cli
aad
aad
xchg
call
sub
std
fxch
and
dec
in
jmp
push
mov
inc
ja
xchg
adc
sub
mov
jecxz
lock
mov
in
mov
sbb
cwde
xor
and
add
out
mov
mov
call
push
ins
push
or
adc
lock
xchg
fs
mov
outs
call
mov
push
(bad)
aam
cli
(bad)
fsub
adc
sar
js
mov
gs
xor
stc
sbb
sbb
mov
dec
movs
outs
cwde
in
jg
mov
pop
pop
scas
cmp
(bad)
iret
or
stc
popa
mov
leave
in
xchg
jecxz
push
ja
add
test
sbb
mov
dec
sbb
repz
jo
addr16
hlt
mov
sbb
jbe
iret
(bad)
addr16
jae
bound
mov
push
pop
pop
xchg
jl
jmp
sbb
ret
jne
aad
add
and
xchg
mov
xor
aam
aad
sub
inc
jnp
mov
(bad)
lock
loop
call
adc
push
mov
add
and
or
mov
sub
xchg
mov
mov
ins
xchg
dec
hlt
shl
mov
sub
(bad)
mov
sahf
pop
div
shr
das
outs
(bad)
cmp
adc
das
stos
push
test
test
or
clc
and
repnz
push
or
arpl
loope
ins
iret
and
mov
add
lock
inc
jbe
inc
dec
mov
push
pop
call
jmp
cmps
test
inc
xchg
jmp
pop
bnd
jbe
or
jmp
cmp
jle
aas
mov
and
std
jae
mov
sub
(bad)
adc
xchg
add
repz
cmp
xchg
mov
xchg
outs
lea
jns
js
mov
or
cmp
xor
(bad)
ins
ficomp
hlt
cmp
mov
test
or
xchg
xchg
pop
mov
dec
fadd
mov
out
xchg
add
shl
xor
test
imul
lock
lock
(bad)
dec
inc
xor
loop
mov
ret
rcr
mov
xor
gs
shr
cmps
mov
pop
shr
push
push
pop
mov
mov
or
lods
cmc
out
ss
ja
jmp
xchg
sub
arpl
int3
and
imul
pop
mov
sbb
jne
jecxz
pcmpgtw
add
pop
push
adc
adc
(bad)
mov
xchg
(bad)
cmps
popa
cwde
(bad)
pop
add
ret
leave
push
data16
rcl
bound
mov
lock
repz
inc
jns
jmp
jns
out
(bad)
and
cmc
fs
xchg
outs
inc
add
popa
test
push
pop
xor
(bad)
adc
pop
out
popf
sahf
mov
fidivr
sub
popa
out
cdq
and
mov
push
repnz
iret
mov
or
jl
mov
push
jp
inc
push
mov
inc
push
das
cmp
aad
repnz
jmp
in
ret
pop
add
cmps
pop
or
mov
add
repnz
js
retf
pop
inc
push
arpl
mov
jecxz
pushf
inc
sub
xor
and
ja
add
push
or
aas
inc
xor
pop
sbb
dec
mov
and
ficomp
xor
jp
cs
jp
pop
sub
loope
jns
fdivr
sub
mov
jae
dec
or
ds
loope
push
sub
lock
sbb
std
ins
cmp
(bad)
jle
mov
jmp
or
cmp
push
mov
in
mov
cmp
(bad)
outs
mov
(bad)
fstp
dec
pusha
pop
lods
lea
mov
add
clc
(bad)
push
add
mov
ror
push
push
scas
call
iret
adc
mov
jle
push
pop
and
dec
test
sub
int3
imul
retf
cmp
int3
divps
or
enter
imul
aad
adc
in
sbb
sbb
or
or
or
stos
xchg
sub
or
scas
or
repnz
mov
iret
cmc
outs
aas
call
push
or
cmp
sub
mov
sbb
fcmovne
repnz
fadd
jo
dec
dec
dec
sbb
(bad)
adc
add
cmp
jg
mov
jmp
movzx
cmp
jmp
mov
shl
cmp
jne
jmp
movzx
add
cmp
jge
cmp
jne
mov
jmp
cmp
jmp
mov
cmp
jl
lea
movzx
cmp
jge
add
cmp
jl
mov
jmp
movzx
add
cmp
jge
cmp
lea
je
cmp
jge
cmp
jg
add
mov
jmp
test
je
movzx
lea
cmp
jge
mov
sub
cmp
jne
mov
push
call
add
test
je
jmp
test
je
lea
movzx
cmp
jge
cmp
jl
mov
jmp
sub
test
jle
jmp
test
jle
movzx
add
cmp
jge
cmp
jne
mov
add
add
mov
cmp
jmp
cmp
jge
mov
mov
mov
movzx
mov
lea
cmp
jge
mov
cmp
jl
mov
lea
mov
and
cmp
je
test
jne
add
add
cmp
jle
cmp
je
mov
jmp
mov
test
je
test
jne
sub
cmp
jne
mov
push
call
add
test
je
movzx
lea
cmp
jge
mov
add
cmp
mov
jl
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
mov
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
add
add
add
push
push
add
push
push
push
push
push
push
push
push
add
push
push
pop
pop
or
or
or
or
int3
int3
int3
int3
mov
mov
push
push
push
call
add
neg
sbb
neg
ret
int3
int3
int3
test
je
mov
and
shl
add
cmp
jne
mov
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
push
push
jne
mov
mov
cmp
jne
cmp
mov
jne
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
push
lea
push
push
call
mov
add
test
mov
jne
push
push
push
call
mov
and
add
cmp
ja
movzx
jmp
mov
shr
shr
and
cmp
jge
mov
cmp
mov
je
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
mov
shr
shl
mov
mov
pop
pop
add
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
test
je
mov
shr
mov
pop
pop
add
pop
mov
mov
pop
ret
mov
pop
pop
mov
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
jg
inc
add
popa
inc
add
popa
inc
add
bound
lahf
popa
inc
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
cmp
jne
cmp
jg
mov
cmp
jne
mov
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
push
shr
push
and
push
call
add
pop
ret
xor
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
mov
cmp
jne
mov
cmp
jne
push
mov
mov
call
mov
cmp
mov
jne
mov
cmp
jne
mov
jmp
xor
mov
push
add
push
lea
push
call
mov
push
push
lea
push
push
push
call
add
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
push
mov
mov
test
je
push
mov
add
cmp
je
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
pop
cmp
jg
push
push
call
add
add
mov
push
add
push
push
call
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
lea
push
push
push
call
push
call
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
xor
cmp
mov
jne
mov
mov
mov
or
push
mov
mov
mov
lea
push
push
mov
mov
call
add
pop
pop
mov
lea
pop
pop
ret
mov
mov
cmp
je
jmp
lea
movsx
add
cmp
ja
movzx
jmp
mov
mov
call
jmp
cmp
je
mov
mov
call
mov
jmp
or
mov
jmp
movzx
mov
jmp
cmp
je
mov
lea
push
mov
call
mov
add
jmp
xor
cmp
mov
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmp
jne
mov
pop
pop
pop
pop
ret
dec
gs
add
fs
add
fs
add
gs
add
gs
add
inc
add
add
add
add
add
add
add
add
add
int3
push
push
mov
push
mov
xor
xor
cmp
push
mov
jne
mov
mov
add
add
mov
jmp
mov
test
je
mov
lea
mov
mov
lea
push
push
push
push
call
push
push
mov
call
add
test
je
test
mov
jne
mov
jmp
mov
mov
mov
sub
cmp
jg
push
push
call
add
add
push
push
call
add
test
je
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
cmp
jae
lea
cmp
je
add
cmp
jb
mov
push
push
push
push
call
add
pop
pop
pop
pop
ret
sub
lea
push
push
sar
push
call
add
test
je
mov
push
push
push
mov
push
push
push
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
mov
mov
cmp
je
cmp
jne
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
call
add
test
mov
je
mov
mov
push
push
push
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
mov
push
push
call
add
xor
ret
push
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
push
mov
push
mov
mov
mov
push
mov
push
push
push
push
call
mov
add
test
jne
test
jbe
mov
push
push
call
add
sub
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cdq
push
mov
mov
sub
sar
cmp
jl
cmp
jl
mov
push
push
call
add
jmp
lea
cmp
jge
mov
mov
xor
mov
div
push
lea
cmp
pop
ja
mov
mov
imul
imul
mov
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
add
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmp
je
push
push
mov
lea
cmp
push
ja
lea
push
push
push
push
call
add
jmp
push
call
add
test
mov
mov
jle
mov
xor
mov
rep
mov
xor
cmp
mov
jle
mov
mov
test
je
lea
mov
mov
and
test
mov
mov
mov
mov
jne
mov
mov
mov
add
cmp
mov
jl
mov
mov
add
push
add
push
push
push
call
add
mov
pop
mov
pop
pop
pop
pop
ret
int3
push
mov
lea
cmp
push
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
push
lea
and
push
mov
mov
mov
call
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
add
mov
mov
add
cmp
jbe
cmp
jg
add
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
mov
shr
add
cmp
mov
mov
mov
jb
movzx
mov
shl
add
mov
shr
add
sub
xor
cmp
jae
mov
mov
mov
mov
mov
sub
and
mov
test
je
jmp
lea
cmp
jne
cmp
mov
lea
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
mov
jg
or
jmp
mov
xor
test
je
mov
mov
test
jne
push
mov
push
call
add
pop
pop
pop
pop
ret
mov
mov
mov
movzx
movzx
not
and
test
je
pop
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
cmp
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
mov
pop
ret
int3
push
mov
mov
mov
add
cmp
jbe
cmp
jb
push
push
push
call
add
mov
push
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
pop
mov
mov
mov
mov
add
pop
ret
int3
int3
push
push
push
mov
xor
lea
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
or
mov
add
add
add
cmp
mov
jl
pop
pop
pop
ret
int3
int3
push
mov
cmp
jge
push
call
add
test
push
je
mov
mov
push
push
call
add
pop
ret
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
push
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
test
je
cmp
jl
cmp
jg
push
call
mov
mov
add
jmp
push
push
call
add
push
mov
push
push
push
call
add
mov
push
push
call
mov
add
pop
pop
xor
call
add
ret
int3
int3
mov
mov
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
mov
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
cmp
je
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
add
cmp
pop
jl
mov
push
push
push
call
add
ret
int3
int3
int3
int3
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
lea
add
test
mov
mov
jbe
mov
movzx
add
mov
mov
pop
ret
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
call
add
test
jne
pop
ret
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
ret
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
call
test
mov
mov
je
mov
movsx
jmp
mov
mov
mov
mov
test
mov
je
lea
mov
sub
cmp
jne
mov
test
jne
mov
mov
push
push
call
add
test
jne
mov
mov
test
mov
mov
je
sub
cmp
jne
mov
test
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
call
test
je
mov
mov
call
nop
mov
push
call
add
test
jne
cmp
jne
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
push
mov
call
mov
mov
mov
mov
add
test
pop
pop
je
sub
cmp
jne
mov
test
jne
mov
mov
mov
push
push
call
add
test
jne
mov
call
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
lea
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
je
mov
mov
cmp
jne
pop
mov
pop
pop
mov
xor
call
add
ret
mov
or
pop
sub
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
mov
call
mov
lea
cmp
ja
movzx
jmp
test
mov
jne
mov
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
test
mov
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
add
test
push
je
mov
push
push
jmp
mov
push
push
call
mov
add
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
test
jne
mov
mov
jmp
test
je
push
call
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
mov
push
call
add
test
mov
je
mov
mov
mov
mov
lea
sub
sub
push
lea
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
nop
fbstp
inc
jbe
add
jne
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
mov
lea
cmp
ja
movzx
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
lea
cmp
mov
ja
movzx
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
jmp
push
call
add
test
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
xor
xor
mov
mov
lea
lea
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
jge
push
call
add
test
jne
cmp
jle
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
push
call
add
jmp
mov
push
call
add
mov
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
mov
mov
sub
push
add
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
lea
or
inc
add
add
js
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
or
or
or
add
or
or
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
xor
push
mov
mov
lea
cmp
ja
movzx
jmp
call
jmp
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
call
cmp
mov
mov
jl
push
mov
mov
call
mov
add
mov
jmp
cmp
je
jmp
lea
mov
cmp
je
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
jmp
push
call
add
test
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
pop
pop
pop
mov
pop
mov
xor
call
add
ret
call
cmp
jl
push
mov
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
cmp
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
xor
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
push
mov
call
mov
add
test
push
je
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
call
neg
pop
sbb
pop
neg
pop
add
pop
mov
xor
call
add
ret
call
add
test
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
test
jne
mov
push
call
add
test
jne
mov
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
push
call
add
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
lea
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
jbe
pop
pop
movzx
pop
add
pop
mov
xor
call
add
ret
mov
pop
pop
mov
pop
pop
xor
mov
call
add
ret
cmp
inc
add
add
inc
add
test
add
jg
add
jge
add
inc
add
inc
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
sub
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
mov
or
add
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
add
cmp
jne
mov
mov
shl
or
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
je
sub
je
mov
mov
jmp
mov
mov
jmp
mov
mov
test
je
mov
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
fcomp
fnstsw
test
jp
mov
ret
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
add
cmp
push
ja
jmp
fld
sub
fstp
call
add
pop
pop
ret
mov
mov
shl
mov
pop
sub
and
shl
add
pop
ret
mov
mov
shl
pop
sub
and
shl
add
pop
ret
mov
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
pop
ret
lea
add
inc
add
inc
add
test
jmp
inc
or
push
mov
jne
or
pop
add
ret
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
pop
add
ret
push
mov
mov
call
mov
push
jmp
lea
lea
push
push
call
add
test
jne
cmp
jne
cmp
jl
mov
cmp
je
mov
test
jne
mov
push
push
call
add
pop
pop
xor
pop
add
ret
mov
sub
pop
sar
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
mov
push
push
call
mov
add
add
cmp
jge
mov
mov
shl
lea
nop
cmp
jne
add
add
cmp
jl
sub
mov
mov
shl
cmp
jge
mov
mov
shl
lea
jmp
lea
cmp
jne
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
fild
mov
shl
fstp
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
shl
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
push
mov
push
push
xor
xor
xor
cmp
lea
jle
mov
lea
mov
mov
test
jle
add
mov
cdq
sub
sar
cmp
jle
mov
mov
cmp
je
add
add
mov
cdq
sub
sar
cmp
jl
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
push
xor
mov
mov
mov
mov
mov
xor
cmp
mov
jle
mov
cmp
jg
jmp
cmp
jg
mov
mov
mov
sub
shl
add
lea
add
cmp
je
add
add
sub
jne
mov
add
add
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
mov
shl
push
mov
mov
test
je
mov
shl
mov
sub
add
sub
cmp
je
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
mov
lea
add
add
mov
jmp
xor
add
add
test
jne
mov
mov
add
mov
pop
pop
mov
pop
ret
mov
mov
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
cmp
ja
mov
mov
shl
push
mov
shl
push
push
push
call
add
jmp
push
call
add
mov
cmp
mov
jge
mov
mov
shl
sub
xor
push
mov
mov
add
sub
jne
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
xor
cmp
jne
xor
shl
mov
add
mov
mov
pop
pop
pop
ret
add
push
call
mov
add
add
cmp
jle
mov
push
push
call
add
mov
mov
shl
lea
cmp
ja
mov
mov
shl
push
push
push
push
call
add
jmp
mov
push
call
add
cmp
mov
jle
xor
mov
nop
mov
add
add
sub
mov
mov
mov
jne
shl
add
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
xor
push
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
call
add
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
push
mov
je
mov
mov
shl
push
shl
push
push
push
call
add
mov
mov
push
shl
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
lea
cmp
jae
mov
shl
lea
pop
add
ret
fild
fst
fldz
fucomp
fnstsw
test
jp
mov
jmp
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
shl
add
mov
cmp
jne
fcom
fnstsw
test
jnp
mov
test
jne
mov
fstp
pop
add
ret
mov
fstp
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
shl
mov
sub
and
shl
add
mov
cmp
jne
cmp
je
mov
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
sub
je
sub
je
sub
jne
mov
pop
add
mov
jmp
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
mov
push
push
call
add
pop
add
ret
mov
push
mov
call
mov
lea
lea
push
push
call
add
test
jne
mov
test
jne
pop
mov
pop
add
ret
mov
pop
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
cmp
mov
jne
mov
test
push
mov
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
push
push
mov
call
add
cmp
je
mov
mov
add
cmp
ja
push
push
call
add
cmp
jne
mov
sub
cmp
jbe
push
lea
shr
push
push
call
add
cmp
jne
mov
jmp
mov
push
push
call
add
cmp
je
add
push
push
call
add
cmp
jne
lea
pop
pop
pop
ret
mov
mov
sub
cmp
ja
pop
pop
pop
mov
pop
ret
mov
mov
test
push
jbe
mov
mov
shl
cmp
jne
xor
cmp
jbe
push
lea
shr
mov
shl
cmp
jne
mov
jmp
mov
mov
sub
cmp
ja
pop
mov
pop
ret
cmp
je
pop
mov
jmp
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
movzx
mov
cmp
mov
push
mov
mov
jle
mov
mov
call
mov
mov
push
mov
call
add
cmp
jge
lea
mov
mov
mov
shl
mov
mov
mov
mov
sub
jmp
lea
mov
mov
cmp
lea
je
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
add
add
sub
jne
cmp
ja
mov
mov
push
shl
push
push
push
call
add
mov
jmp
mov
push
call
mov
add
mov
jmp
mov
mov
mov
shl
lea
test
mov
jl
mov
mov
shl
lea
cmp
je
push
push
call
add
cmp
mov
jne
mov
test
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
test
jge
mov
cmp
je
push
shl
push
push
push
call
add
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
xor
push
mov
push
push
call
add
ret
mov
mov
shl
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
mov
mov
call
add
add
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
lea
add
add
mov
jmp
xor
add
lea
push
lea
call
mov
mov
sub
add
push
push
push
mov
call
add
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
mov
call
mov
cmp
jne
cmp
jne
mov
cmp
mov
jbe
add
mov
cmp
je
mov
cmp
ja
add
jmp
test
jne
mov
push
mov
mov
call
push
push
push
call
add
pop
pop
pop
pop
ret
lea
mov
call
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
rep
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
mov
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
call
add
cmp
jne
mov
lea
push
push
push
mov
mov
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movzx
and
sub
cmp
ja
push
mov
mov
jmp
mov
or
test
je
test
je
push
push
call
add
mov
test
je
and
movzx
sub
cmp
jbe
pop
pop
ret
mov
cmp
jl
mov
test
je
push
push
call
add
lea
cmp
jne
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
adc
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
mov
mov
xor
test
je
mov
test
jne
cmp
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
or
mov
mov
mov
mov
test
lea
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
xor
cmp
mov
mov
je
test
je
push
mov
push
call
add
mov
cmp
je
test
jne
mov
mov
push
push
push
call
mov
add
cmp
je
cmp
jne
mov
add
push
push
call
mov
mov
neg
sbb
add
push
neg
push
mov
call
add
neg
sbb
neg
test
mov
jne
test
je
mov
mov
add
or
add
add
add
and
or
mov
mov
mov
mov
mov
test
je
test
je
pop
pop
pop
mov
pop
pop
ret
test
jne
mov
test
je
mov
mov
shl
jmp
lea
mov
sub
add
sub
cmp
jl
mov
test
je
push
push
call
add
test
jne
mov
mov
shl
test
je
mov
shl
lea
mov
sub
add
sub
cmp
jne
cmp
jl
mov
jmp
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
test
jne
cmp
jne
cmp
jne
pop
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
and
push
xor
cmp
jle
push
xor
jmp
lea
mov
add
cmp
jl
mov
test
je
mov
push
push
call
add
add
add
cmp
jl
pop
xor
cmp
jle
mov
cmp
je
mov
mov
and
add
cmp
jl
xor
cmp
jle
mov
cmp
lea
je
mov
test
je
push
mov
push
call
add
add
cmp
jl
xor
cmp
jle
xor
jmp
lea
mov
cmp
je
mov
lea
mov
mov
mov
and
mov
add
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
push
push
call
add
cmp
push
push
je
xor
cmp
jbe
lea
cmp
jl
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
mov
test
je
push
push
call
add
xor
cmp
jbe
lea
lea
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jl
mov
test
je
push
mov
push
call
add
mov
mov
cmp
push
mov
push
push
mov
ja
nop
mov
cmp
jae
mov
add
cmp
jbe
mov
cmp
jae
cmp
jl
mov
test
je
mov
push
push
call
add
add
cmp
jb
cmp
ja
xor
mov
add
cmp
jbe
sub
mov
sar
cmp
jg
mov
sub
mov
imul
sar
mov
shr
add
add
add
cmp
jge
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
lea
cmp
jge
cmp
jle
cdq
sub
sar
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
movzx
or
add
cmp
ja
jmp
mov
push
push
mov
call
add
test
je
and
mov
mov
mov
shl
pop
pop
lea
shl
ret
mov
mov
call
cmp
movzx
je
shl
pop
add
pop
ret
pop
lea
pop
ret
mov
mov
mov
push
mov
mov
and
push
mov
call
mov
mov
add
add
pop
lea
shl
pop
lea
pop
ret
mov
push
mov
call
mov
mov
lea
lea
add
add
add
add
add
pop
lea
pop
ret
pop
xor
pop
ret
xor
inc
add
cdq
inc
add
cdq
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
push
mov
test
mov
je
test
je
mov
shl
jmp
lea
mov
sub
mov
add
sub
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
mov
test
jne
mov
mov
shl
test
je
mov
shl
nop
mov
sub
add
sub
cmp
je
mov
cmp
jl
mov
jne
and
jmp
test
jne
mov
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
cmp
mov
jl
mov
test
jne
mov
test
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
movzx
add
cmp
ja
jmp
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
mov
add
mov
push
add
push
push
push
call
add
ret
mov
push
add
push
push
push
call
add
ret
lea
pop
fwait
inc
add
add
fwait
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
movzx
push
push
mov
mov
xor
test
je
lea
mov
mov
sub
test
mov
jbe
cmp
jne
mov
push
lea
push
push
call
add
mov
movzx
xor
test
je
mov
and
and
or
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
test
jne
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
mov
cdq
and
add
sar
cmp
jae
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
cmp
jbe
push
mov
shr
lea
cmp
ja
mov
push
push
push
push
call
add
mov
pop
mov
pop
ret
push
call
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
or
mov
test
mov
je
test
jne
mov
mov
push
push
push
call
add
test
je
mov
push
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
push
add
push
push
call
mov
add
mov
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
cmp
je
mov
call
mov
cmp
jne
pop
ret
push
mov
push
mov
push
push
lea
push
push
mov
call
xor
add
cmp
jle
mov
push
lea
push
push
call
add
add
cmp
jl
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
lea
mov
mov
test
je
test
je
push
push
call
add
add
sub
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
cmp
je
nop
test
jne
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
call
xor
cmp
je
mov
call
cmp
jne
mov
mov
mov
test
je
push
push
call
add
push
call
add
cmp
je
jmp
lea
mov
call
cmp
jne
mov
cmp
mov
mov
je
lea
mov
call
cmp
jne
mov
mov
mov
mov
test
je
lea
mov
test
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
mov
mov
or
lea
mov
mov
mov
test
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
mov
test
je
mov
mov
mov
mov
and
and
or
push
push
mov
call
add
cmp
jne
xor
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
xor
add
sub
sub
lea
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
movzx
cmp
push
ja
jmp
mov
call
pop
pop
xor
pop
ret
cmp
je
pop
pop
mov
pop
jmp
push
call
add
pop
pop
xor
pop
ret
mov
mov
mov
lea
push
push
add
push
mov
call
mov
add
cmp
jl
mov
mov
sub
add
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
add
mov
cmp
jne
push
mov
call
mov
pop
mov
sub
add
pop
pop
mov
pop
ret
xor
cmp
je
call
mov
cmp
jbe
add
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
xor
pop
ret
mov
ins
mov
inc
add
mov
inc
add
pop
and
push
mov
mov
push
lea
add
jne
mov
mov
sub
add
mov
call
sub
cmp
je
test
jg
cmp
je
mov
cmp
jae
mov
add
pop
mov
pop
pop
ret
mov
add
pop
mov
mov
pop
pop
ret
mov
mul
shr
imul
pop
mov
pop
pop
ret
int3
int3
int3
push
push
mov
mov
cmp
ja
xor
lea
mov
mov
mov
mov
mov
mov
cmp
je
lea
mov
call
cmp
jne
call
cmp
je
mov
call
cmp
jne
mov
mul
shr
imul
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
push
push
call
add
ret
mov
mov
mov
and
and
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
mov
mov
mov
test
jne
cmp
jne
mov
or
mov
cmp
jl
mov
test
je
test
je
push
push
push
call
add
pop
pop
ret
mov
and
and
or
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
shl
add
push
push
push
push
call
mov
push
push
push
call
mov
add
pop
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
push
push
lea
push
push
push
push
call
mov
push
push
push
call
mov
add
test
mov
mov
mov
je
lea
sub
sub
test
mov
jne
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
push
push
push
call
lea
add
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
mov
push
lea
push
mov
je
mov
mov
cmp
jb
je
cmp
mov
jne
push
push
push
push
call
mov
mov
mov
add
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
pop
pop
pop
ret
mov
movzx
movzx
and
not
test
je
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
cmp
je
mov
push
mov
mov
mov
mov
mov
pop
push
push
push
mov
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
je
push
mov
push
lea
mov
cmp
jb
mov
mov
movzx
movzx
not
and
test
lea
je
cmp
je
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
call
add
cmp
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
xor
push
push
push
call
mov
push
push
push
call
add
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
push
mov
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
mov
push
shl
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
lea
mov
add
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
movzx
je
shl
add
push
push
mov
push
push
call
add
ret
lea
push
push
mov
push
push
call
add
ret
int3
mov
mov
push
push
xor
test
push
jle
mov
mov
mov
lea
mov
cmp
jg
cmp
jge
sub
je
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
pop
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
cmp
push
mov
ja
jmp
push
push
push
call
add
mov
mov
add
mov
pop
pop
ret
push
push
jmp
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
pop
pop
ret
push
cmps
inc
add
cmps
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
lea
push
mov
lea
push
push
mov
mov
call
add
test
jne
mov
mov
push
push
call
mov
mov
add
mov
pop
mov
pop
ret
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
mov
sub
sar
shl
add
push
mov
mov
test
je
lea
mov
sub
sar
shl
add
mov
mov
test
jne
mov
cmp
ja
nop
mov
sub
sar
shl
add
add
mov
mov
sub
sar
shl
add
mov
mov
sub
sar
shl
add
mov
cmp
jbe
mov
sub
sar
shl
add
pop
mov
ret
int3
int3
push
push
push
mov
mov
push
mov
lea
lea
cmp
ja
mov
mov
shl
push
shl
push
push
push
call
add
jmp
push
call
add
shl
add
mov
pop
mov
mov
mov
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
lea
cmp
ja
mov
lea
add
lea
add
add
add
push
add
add
push
push
push
call
add
jmp
push
call
add
mov
mov
sub
mov
imul
sar
mov
shr
add
lea
lea
lea
mov
lea
pop
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
cmp
mov
jg
add
mov
jmp
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
mov
je
cmp
je
mov
mov
mov
push
mov
push
mov
push
mov
sub
sub
mov
cmp
mov
mov
jne
mov
jmp
sub
mov
mov
imul
sar
mov
shr
add
mov
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
mov
lea
add
push
mov
push
mov
call
mov
mov
add
add
mov
mov
mov
add
pop
pop
mov
pop
mov
pop
xor
call
add
ret
int3
int3
sub
push
movzx
push
push
mov
xor
cmp
mov
jge
mov
sub
add
mov
mov
mov
add
sub
jne
test
je
mov
mov
mov
sub
cmp
mov
jb
push
call
add
push
push
push
call
mov
add
xor
test
jle
mov
neg
shl
mov
jmp
lea
mov
mov
mov
lea
push
push
push
add
call
mov
add
mov
mov
mov
mov
mov
mov
add
cmp
jl
mov
mov
push
push
push
call
mov
push
push
push
call
fild
mov
add
fstp
mov
mov
shl
mov
sub
test
jle
add
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
jne
test
je
mov
lea
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
call
mov
sub
mov
add
cmp
je
push
push
push
call
add
mov
cmp
jbe
lea
mov
mov
mov
mov
mov
mov
sub
sub
cmp
ja
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
add
mov
mov
add
mov
mov
mov
mov
pop
mov
pop
ret
sub
push
push
push
push
mov
call
mov
mov
mov
add
cmp
jne
test
je
mov
mov
test
lea
mov
je
push
push
push
call
add
test
jne
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
test
push
je
call
mov
lea
mov
mov
test
mov
mov
mov
mov
mov
mov
je
push
lea
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jne
pop
xor
cmp
jle
jmp
lea
sub
mov
add
cmp
jg
mov
pop
mov
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
lea
nop
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
sub
mov
add
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
mov
pop
ret
add
push
push
call
add
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jbe
push
push
call
add
mov
mov
shl
sub
mov
mov
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
call
mov
mov
mov
mov
add
cmp
jb
push
call
add
cmp
mov
je
mov
mov
push
mov
lea
push
push
push
call
mov
mov
movzx
push
push
push
call
xor
add
mov
cmp
mov
jbe
push
lea
nop
push
call
mov
movzx
add
add
add
cmp
jl
mov
pop
mov
mov
mov
mov
sub
mov
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
pop
pop
ret
add
push
push
call
add
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
mov
call
mov
mov
push
push
push
call
mov
add
cmp
mov
mov
jle
mov
sub
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
add
xor
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
push
add
push
call
mov
mov
mov
cmp
je
push
call
mov
mov
push
call
add
push
call
int3
int3
int3
int3
int3
int3
mov
cmp
jle
push
push
call
add
push
push
call
add
cmp
jle
push
push
call
add
add
mov
ret
int3
int3
int3
mov
cmp
push
push
mov
push
je
mov
call
mov
mov
mov
sub
mov
mov
mov
sub
cmp
mov
jne
push
mov
movzx
mov
shl
cmp
jg
mov
cmp
jg
lea
push
jmp
add
push
push
call
add
mov
add
cmp
jne
movzx
shl
lea
lea
cmp
jbe
mov
jmp
mov
sub
sar
sub
push
mov
call
mov
add
add
mov
mov
cmp
jne
call
jmp
add
mov
mov
mov
mov
movzx
shl
add
mov
mov
mov
mov
xor
mov
mov
mov
cmp
pop
jae
jmp
lea
mov
add
cmp
jb
test
mov
mov
je
add
push
push
push
call
add
add
pop
pop
xor
pop
ret
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
cmp
jne
call
jmp
add
mov
mov
add
mov
add
mov
mov
mov
mov
add
mov
mov
test
je
push
push
push
call
add
mov
mov
mov
mov
push
call
add
test
jge
pop
pop
mov
pop
ret
mov
shl
sub
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
movzx
cmp
jb
jne
push
push
call
add
mov
mov
push
push
push
call
add
test
jne
push
push
call
add
mov
add
mov
cmp
jb
push
call
add
pop
ret
cmp
jb
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
mov
jne
mov
push
add
push
push
call
add
test
jne
jmp
mov
mov
mov
cmp
je
mov
push
push
call
add
test
je
mov
mov
mov
jmp
mov
mov
mov
sub
mov
imul
sar
mov
shr
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
test
jne
mov
cmp
je
mov
call
pop
ret
movzx
cmp
jb
mov
call
pop
ret
mov
mov
shl
push
sub
push
add
push
push
mov
mov
call
mov
add
test
je
mov
push
push
push
mov
call
mov
mov
add
mov
mov
add
pop
pop
ret
movzx
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
movzx
mov
mov
sub
push
mov
mov
mov
mov
mov
push
push
push
mov
mov
call
mov
add
test
je
mov
add
push
push
call
push
push
push
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
add
cmp
mov
jle
sub
mov
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
mov
add
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
push
mov
mov
sub
push
push
mov
lea
push
push
push
mov
mov
call
mov
push
mov
mov
push
push
push
call
add
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
add
test
jne
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
cmp
je
push
push
push
call
add
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
test
jne
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
cmp
jne
push
push
call
push
push
call
mov
add
push
push
push
call
add
ret
push
push
push
call
mov
add
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
push
lea
push
push
push
mov
call
add
push
push
mov
call
add
test
je
lea
push
push
push
call
add
push
push
call
add
test
jne
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
call
add
cmp
jne
push
push
push
call
push
push
push
call
push
push
mov
call
push
push
push
call
add
lea
push
push
push
call
add
test
jne
mov
push
push
jmp
push
push
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
lea
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
add
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
push
mov
call
add
push
push
call
add
test
je
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
add
push
push
call
push
lea
push
push
call
mov
add
test
je
push
push
push
call
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
lea
push
push
call
push
push
call
push
push
push
call
add
push
push
call
push
lea
push
push
call
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
push
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
add
cmp
jne
push
mov
mov
mov
push
push
call
mov
add
test
pop
jl
push
push
call
add
push
push
push
call
add
pop
ret
push
call
add
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
push
push
xor
call
add
test
je
mov
push
push
call
add
test
je
or
push
push
call
add
test
je
or
cmp
jle
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
push
call
push
push
call
add
cmp
je
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
push
call
add
test
jg
push
push
call
xor
add
mov
xor
jmp
push
lea
push
push
call
push
push
push
mov
call
push
add
push
push
call
mov
push
mov
call
add
mov
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
mov
jmp
mov
push
push
call
push
mov
call
add
test
je
cmp
je
push
push
push
call
add
jmp
call
push
push
call
push
push
call
push
push
call
add
xor
test
je
mov
mov
test
je
mov
add
test
pop
je
mov
add
mov
lea
push
push
call
push
call
push
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
call
add
push
push
call
call
push
lea
push
push
call
add
test
je
push
push
mov
lea
mov
xor
repz
je
lea
lea
mov
add
test
jne
sub
push
push
lea
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
call
add
push
push
push
push
call
add
push
call
call
add
push
push
call
add
push
push
call
call
add
push
push
call
call
push
lea
push
push
call
add
test
jne
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
mov
push
push
mov
call
add
cmp
jne
push
push
mov
call
add
mov
jmp
mov
mov
mov
lea
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
jmp
xor
cmp
sete
mov
push
call
add
cmp
jne
push
push
jmp
lea
push
push
call
add
test
je
push
push
push
call
add
push
push
push
call
lea
push
push
push
call
add
test
je
add
cmp
jle
cmp
je
lea
push
lea
push
push
call
add
test
jne
mov
sub
mov
jmp
push
push
push
call
lea
push
push
push
call
add
test
je
lea
add
push
lea
push
push
call
add
test
jne
mov
mov
jmp
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
mov
add
test
jle
push
push
push
call
add
mov
cmp
je
mov
push
push
push
call
jmp
mov
mov
cmp
jne
push
push
call
add
jmp
cmp
je
cmp
je
mov
push
lea
push
push
push
call
add
jmp
push
push
push
call
add
push
call
sub
push
push
call
add
lea
push
push
push
call
add
test
jne
push
call
sub
push
push
call
add
mov
pop
pop
pop
pop
xor
mov
call
add
ret
mov
push
push
push
call
add
mov
ret
int3
int3
int3
push
mov
push
push
call
fabs
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
push
call
fstp
call
fstp
fld
add
fstp
push
call
fld
add
fstp
push
call
add
mov
pop
add
ret
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
fdiv
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fmul
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
fstp
call
fstp
add
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
push
mov
push
push
call
add
push
push
push
call
fstp
call
fstp
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jne
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jp
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
call
cdq
mov
idiv
mov
push
mov
fild
fdiv
fstp
call
add
sub
je
sub
je
sub
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
mov
push
push
mov
call
mov
add
cmp
jle
push
push
push
call
add
sub
add
mov
fild
sub
fmul
fstp
call
fiadd
jmp
push
push
call
add
cmp
mov
jge
push
push
push
call
add
fild
sub
fmul
fstp
call
fadd
jmp
fld
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
mov
push
push
call
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
lea
push
push
push
call
mov
push
push
mov
call
add
test
jge
lea
xor
test
setl
push
mov
push
push
push
sub
and
mov
call
add
test
jge
lea
xor
test
setl
pop
sub
and
cmp
jge
mov
mov
cmp
jle
mov
cmp
jg
sub
add
push
lea
push
push
call
add
pop
pop
mov
pop
pop
ret
push
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
lea
push
mov
push
push
call
lea
push
push
mov
call
add
cmp
je
jmp
lea
nop
sub
lea
cmp
jb
lea
push
call
add
mov
mov
mov
mov
add
cmp
jne
sub
lea
push
call
mov
add
pop
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
lea
push
push
push
call
push
push
mov
call
lea
push
push
mov
call
add
test
jle
lea
mov
push
lea
push
push
sub
call
add
test
jg
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
lea
push
push
push
call
mov
push
push
push
mov
call
add
test
jge
lea
mov
xor
test
setl
sub
and
push
push
push
call
add
test
jge
lea
xor
test
setl
sub
and
test
jg
mov
mov
cmp
jbe
mov
cmp
jle
pop
pop
xor
pop
add
ret
mov
sub
add
lea
cmp
jg
push
push
call
add
push
push
push
push
call
add
xor
test
jle
mov
lea
mov
movzx
push
push
call
add
add
cmp
jl
pop
mov
pop
pop
pop
add
ret
int3
sub
mov
xor
mov
push
push
push
mov
push
call
mov
lea
push
push
call
mov
add
cmp
jl
push
mov
push
push
call
mov
movzx
add
cmp
je
push
push
push
call
add
lea
cmp
jb
lea
push
call
add
mov
mov
add
add
cmp
jle
pop
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
push
push
call
lea
push
push
call
lea
push
push
push
call
add
test
je
push
push
call
add
lea
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movsx
add
cmp
je
cmp
je
mov
pop
ret
cmp
jne
add
nop
cmp
jne
mov
push
push
call
add
mov
add
cmp
jne
cmp
je
add
cmp
jne
lea
pop
ret
cmp
jne
mov
push
push
call
add
lea
pop
ret
int3
int3
int3
push
push
mov
call
add
add
cmp
ja
movzx
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
xor
test
sete
mov
push
call
add
test
je
mov
pop
ret
xor
test
sete
pop
ret
xor
cmp
sete
pop
ret
nop
(bad)
rol
rcl
inc
add
rol
in
rol
cli
rol
pop
rol
adc
inc
add
rol
rol
cmp
inc
add
inc
add
or
add
or
or
or
add
or
add
or
or
or
int3
push
push
push
mov
cmp
push
mov
jne
mov
add
mov
add
cmp
jae
lea
lea
mov
cmp
jne
movzx
add
mov
add
call
test
jne
mov
jmp
cmp
jne
cmp
jae
movzx
add
add
cmp
jg
movzx
cmp
jg
mov
pop
pop
pop
pop
ret
movzx
cmp
je
add
add
cmp
jb
xor
cmp
pop
pop
sete
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
mov
je
cmp
jne
mov
push
push
call
add
mov
cmp
je
pop
xor
pop
ret
mov
movsx
mov
add
cmp
push
movsx
jae
movsx
cmp
jne
sub
jne
pop
pop
lea
pop
ret
cmp
jne
add
add
cmp
jb
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
xor
cmp
jae
push
mov
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
mov
add
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
add
add
cmp
jb
test
pop
jl
mov
add
mov
push
lea
push
push
call
add
test
jne
sub
jns
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
mov
lea
push
mov
push
push
call
add
test
jne
mov
cmp
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
jmp
lea
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
mov
lea
push
add
push
push
call
add
test
je
pop
pop
pop
pop
ret
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jl
mov
push
push
call
add
mov
mov
push
mov
mov
push
add
push
mov
call
add
test
pop
jne
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
js
lea
lea
cmp
je
sub
sub
test
jge
mov
push
push
call
add
mov
mov
push
mov
sub
push
push
mov
call
add
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
add
push
push
mov
js
cmp
jge
cmp
jne
mov
push
push
call
add
mov
mov
sub
cmp
jb
cmp
mov
push
mov
mov
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
pop
jne
lea
pop
pop
ret
pop
xor
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
mov
lea
movsx
cmp
ja
movzx
jmp
mov
cmp
je
cmp
je
movzx
push
call
add
test
je
movzx
mov
mov
call
mov
test
je
add
jmp
mov
add
cmp
je
mov
push
push
call
add
mov
call
cmp
mov
jne
xor
jmp
mov
lea
movzx
push
mov
call
add
test
jne
movzx
push
mov
call
add
test
jne
xor
pop
pop
pop
pop
ret
mov
lea
mov
call
mov
test
je
add
jmp
cmp
je
mov
mov
call
cmp
mov
mov
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
add
push
mov
mov
call
mov
add
jmp
movzx
mov
call
mov
test
je
mov
jmp
xor
movsx
add
cmp
ja
movzx
jmp
test
je
lea
push
lea
push
push
call
add
test
jne
lea
jmp
test
je
add
mov
jmp
cmp
lea
mov
mov
jne
push
add
push
call
add
pop
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
pop
ret
add
mov
mov
push
call
add
pop
pop
pop
pop
ret
pop
mov
pop
pop
pop
ret
mov
xor
cmp
pop
setne
sub
and
pop
pop
pop
ret
push
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
push
push
add
push
push
call
add
pop
pop
pop
pop
ret
push
push
push
mov
call
add
pop
pop
pop
pop
ret
lea
jne
inc
add
inc
add
xlat
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
call
xlat
inc
add
(bad)
inc
add
xlat
inc
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
mov
push
mov
je
cmp
jbe
pop
xor
pop
ret
sub
sub
push
push
jne
pop
xor
pop
pop
pop
ret
lea
mov
mov
movsx
push
push
push
call
add
test
je
add
cmp
lea
mov
mov
jb
lea
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
je
mov
sub
add
mov
jne
pop
pop
pop
xor
pop
ret
pop
pop
pop
add
pop
ret
int3
int3
cmp
jl
test
jne
sub
push
mov
push
push
call
add
ret
mov
push
push
call
add
ret
push
mov
cmp
jne
mov
push
push
call
add
mov
mov
push
push
push
call
add
pop
ret
cmp
jne
mov
sub
mov
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
test
push
jne
test
je
mov
mov
push
push
push
call
add
xor
test
jle
mov
mov
call
add
cmp
jl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
push
push
lea
push
push
push
call
lea
push
push
push
mov
call
mov
push
push
push
mov
mov
call
add
test
jge
lea
xor
test
setl
sub
and
mov
sub
mov
jns
xor
jmp
cmp
jbe
mov
cmp
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
sub
push
push
mov
add
push
call
add
test
je
mov
sub
lea
push
push
call
mov
add
push
push
call
add
pop
pop
mov
pop
add
ret
mov
cmp
jne
add
mov
mov
jmp
mov
add
add
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
mov
add
cmp
jae
cmp
jne
mov
jmp
cmp
je
sub
add
push
push
call
sub
push
push
call
push
push
lea
call
add
pop
pop
add
pop
add
ret
push
push
lea
call
add
pop
pop
pop
add
ret
push
call
add
pop
pop
mov
pop
add
ret
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
lea
push
push
push
call
push
push
push
mov
call
mov
add
push
push
mov
mov
mov
mov
call
mov
add
add
cmp
ja
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
add
cmp
jbe
pop
pop
pop
xor
pop
add
ret
mov
sub
cmp
jne
add
push
push
call
push
push
call
mov
add
test
jne
test
je
mov
mov
jmp
mov
mov
mov
push
push
push
call
add
xor
test
jle
lea
mov
mov
lea
call
add
cmp
jl
mov
pop
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
lea
push
push
push
call
xor
add
cmp
mov
mov
jbe
lea
cmp
je
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
movzx
add
push
call
add
test
jne
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
mov
cmp
jne
mov
mov
sub
push
push
push
call
add
jmp
mov
movsx
mov
sub
call
push
call
mov
add
add
cmp
jb
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
mov
call
add
add
cmp
ja
jmp
mov
push
mov
push
mov
call
add
pop
pop
pop
ret
push
push
call
mov
push
push
mov
call
push
push
push
call
add
jmp
mov
push
mov
xor
call
push
push
call
add
pop
push
push
call
add
test
jne
push
push
call
mov
sub
push
push
push
call
mov
add
push
call
add
pop
pop
pop
ret
push
push
call
add
test
jne
push
push
call
push
push
call
push
push
push
call
add
mov
push
call
add
pop
pop
pop
ret
xchg
fiadd
xchg
fiadd
iret
fiadd
lods
fiadd
sub
mov
xor
mov
push
push
push
push
mov
lea
push
push
push
call
push
push
push
mov
call
push
push
mov
call
mov
add
push
push
push
mov
call
add
cmp
mov
jne
add
mov
jmp
mov
cmp
mov
je
cmp
je
cmp
je
cmp
je
push
push
push
call
add
lea
push
push
call
mov
add
add
cmp
mov
mov
mov
jle
push
lea
push
push
mov
call
mov
add
test
je
add
lea
push
push
lea
call
add
cmp
jbe
mov
jmp
mov
cmp
jae
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
cmp
jne
mov
cmp
jl
mov
sub
push
lea
push
push
call
lea
push
call
mov
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
push
push
push
lea
push
push
push
call
lea
add
cmp
mov
jb
push
call
add
mov
mov
add
cmp
je
lea
sub
movsx
cmp
ja
movzx
jmp
cmp
jb
push
call
add
mov
mov
add
cmp
jb
push
call
add
mov
mov
mov
jmp
push
push
push
call
add
jmp
push
push
push
call
add
jmp
cmp
jb
push
call
add
mov
mov
mov
add
add
cmp
jne
sub
cmp
pop
pop
jb
push
call
add
mov
mov
add
pop
ret
nop
mov
inc
add
inc
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
push
push
mov
mov
je
movsx
push
push
call
add
test
je
add
cmp
jne
mov
sub
cmp
jb
push
push
call
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
add
cmp
jne
movzx
add
push
call
add
test
je
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
push
push
call
add
mov
sub
lea
push
mov
add
push
push
call
add
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
lea
push
mov
push
push
call
mov
lea
mov
push
lea
push
mov
call
add
cmp
jae
cmp
je
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
add
cmp
jne
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
lea
push
mov
add
call
mov
movsx
sub
add
add
cmp
ja
movzx
jmp
push
push
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
lea
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
nop
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
fnstcw
movzx
or
mov
fldcw
fistp
mov
push
fldcw
jmp
push
push
call
fstp
lea
push
lea
push
call
add
jmp
mov
lea
mov
call
jmp
lea
push
push
push
call
lea
push
push
mov
call
add
test
jne
cmp
jb
push
push
call
lea
push
call
jmp
push
lea
push
lea
push
call
add
lea
lea
mov
mov
add
test
jne
sub
push
lea
push
lea
push
call
add
cmp
jb
lea
push
call
add
mov
mov
pop
pop
pop
pop
xor
call
add
ret
movsx
push
push
push
call
add
jmp
nop
inc
in
add
in
add
inc
add
inc
add
inc
add
inc
add
out
add
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
push
push
push
push
push
push
push
push
push
add
add
add
add
push
push
push
push
add
add
add
add
int3
int3
int3
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
add
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
push
call
add
call
mov
pop
ret
int3
int3
push
mov
push
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
lea
push
call
add
test
jne
push
push
call
add
pop
mov
xor
call
add
ret
lea
push
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
mov
fild
mov
sub
fdiv
fstp
push
call
mov
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
push
push
call
push
push
mov
call
add
test
jg
push
call
add
jmp
push
push
call
add
call
mov
mov
cmp
jne
lea
push
call
add
add
jmp
lea
push
call
add
test
mov
jne
push
call
add
jmp
push
push
mov
mov
mov
xor
repz
jne
push
push
push
call
mov
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
add
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
test
jl
push
push
call
push
push
push
call
add
jmp
lea
push
push
mov
mov
call
mov
add
test
je
cmp
jne
cmp
je
mov
mov
push
add
lea
push
mov
lea
push
push
call
push
lea
push
lea
push
call
add
jmp
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
mov
add
test
jne
lea
push
call
add
pop
pop
mov
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
add
test
jg
push
call
add
jmp
push
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
mov
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
jne
or
jmp
push
push
call
add
mov
push
push
call
lea
push
mov
call
add
pop
mov
and
cmp
mov
jne
push
call
add
mov
pop
add
ret
fild
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
push
sub
fstp
push
push
call
call
push
push
mov
mov
call
call
push
push
push
push
call
fstp
add
push
call
add
pop
pop
mov
pop
ret
int3
push
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
call
mov
push
call
mov
push
push
push
push
call
push
push
push
call
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
add
test
je
push
push
call
add
test
je
push
push
push
call
add
test
je
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
add
pop
mov
pop
ret
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
mov
push
call
add
xor
cmp
setne
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
call
mov
mov
push
call
add
mov
neg
sbb
add
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
je
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
mov
add
test
jne
push
push
push
call
add
mov
pop
ret
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
mov
push
push
mov
call
push
push
call
add
call
test
mov
jne
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
test
jle
push
push
push
push
call
mov
add
test
je
push
push
push
call
push
mov
push
push
mov
call
push
push
call
mov
push
push
call
add
test
mov
pop
jne
push
push
call
jmp
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
add
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
push
push
call
add
cmp
jne
fld
mov
sub
fstp
push
call
add
mov
add
ret
xor
add
ret
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
call
lea
push
call
push
mov
push
push
call
add
test
je
mov
lea
lea
mov
add
test
jne
sub
je
cmp
je
add
lea
push
call
push
mov
push
push
call
add
test
jne
lea
push
call
push
push
call
add
xor
cmp
sbb
pop
neg
pop
mov
xor
call
add
ret
mov
lea
lea
push
mov
call
mov
add
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
mov
push
push
lea
push
push
mov
call
add
mov
lea
push
call
add
cmp
jbe
mov
push
push
push
push
call
add
add
sub
je
cmp
je
lea
push
call
add
test
je
push
push
call
add
test
ja
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
call
mov
sub
push
mov
call
add
test
jne
push
mov
call
mov
add
mov
add
push
call
add
test
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
pop
ret
push
add
push
push
call
mov
add
mov
sub
test
je
push
push
call
add
cmp
jne
push
push
call
add
test
jne
push
call
mov
push
push
call
push
push
push
call
xor
add
cmp
setne
mov
jmp
push
mov
call
mov
jmp
push
push
push
call
mov
add
test
je
cmp
je
push
push
push
call
add
movsx
sub
je
sub
je
sub
jne
push
mov
call
mov
jmp
push
mov
call
mov
jmp
push
or
call
mov
add
add
cmp
jne
jmp
push
push
push
call
add
pop
pop
pop
pop
ret
test
jne
push
push
call
push
call
add
pop
mov
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
test
jne
push
push
call
add
push
call
push
mov
call
add
test
je
call
mov
push
call
push
push
push
call
add
pop
pop
pop
ret
test
je
pop
pop
mov
pop
ret
push
push
call
add
test
je
push
push
call
push
push
call
add
call
pop
pop
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
mov
call
add
sub
mov
je
jmp
mov
sub
push
push
mov
call
add
cmp
jne
test
je
push
push
call
fstp
mov
push
push
call
add
test
jg
xor
add
cmp
jne
call
test
mov
je
push
push
call
add
mov
pop
pop
mov
pop
ret
lea
push
push
push
call
add
test
je
mov
mov
push
push
push
push
call
add
cmp
jne
mov
jmp
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
mov
call
add
pop
pop
ret
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
push
call
push
push
push
mov
call
mov
push
push
push
call
add
test
pop
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
push
push
push
call
add
mov
call
test
mov
jne
push
push
call
add
lea
pop
pop
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
push
push
call
add
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
add
push
push
call
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
int3
push
mov
push
push
call
add
test
jg
push
push
push
call
push
call
add
pop
ret
push
push
push
push
push
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
add
push
call
push
push
call
push
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
push
push
call
push
push
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mulps
mulsd
addsd
mulsd
addsd
pshufd
addsd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pmovmskb
psllq
andpd
psrlq
movsd
movlpd
movsd
subsd
mulsd
addsd
subsd
mulsd
movsd
andpd
psllq
pextrw
orpd
sub
add
mulsd
mulsd
movapd
mulsd
mulsd
subsd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
subpd
movsd
mulsd
and
shl
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
pinsrw
addsd
pshufd
subsd
addsd
orpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
mulpd
pshufd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pextrw
andpd
pshufd
andpd
movsd
movlpd
movsd
subsd
mulsd
addsd
mulsd
subsd
movsd
mulsd
mulsd
subsd
subsd
addsd
subsd
movapd
pshufd
subsd
addsd
pshufd
addsd
mulsd
addsd
pshufd
divsd
movapd
movapd
movapd
mulpd
movsd
mulpd
mulpd
and
mulsd
mulpd
addpd
movapd
mulsd
mulpd
movapd
mulsd
addpd
pshufd
mulsd
sub
mulpd
addsd
xorpd
pshufd
mulsd
pshufd
addsd
movsd
pinsrw
subsd
addsd
addsd
addsd
subsd
subsd
subsd
subsd
orpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
movlpd
movlpd
movlpd
addsd
andnpd
orpd
sub
movlpd
fld
add
ret
movlpd
xorpd
addsd
mov
jmp
movlpd
xorpd
sub
movsd
pextrw
and
sub
cmp
jb
addsd
orpd
mulsd
movlpd
fld
add
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
subpd
mulsd
addsd
mulsd
subsd
pshufd
addsd
subsd
subsd
movlpd
fld
add
ret
sub
cmp
jae
psrlq
psllq
pmovmskb
andnpd
subsd
movsd
mulsd
addsd
orpd
subsd
mulsd
movsd
subsd
sqrtsd
and
shr
neg
movsd
andpd
psllq
pextrw
orpd
movd
pshufd
sub
add
mulsd
mulsd
mulsd
mulsd
subsd
andpd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
addpd
movsd
mulsd
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
addsd
and
pinsrw
movsd
pshufd
addsd
subsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
movapd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
pshufd
mulpd
pshufd
subsd
pshufd
subsd
subsd
subsd
subsd
subsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
xorpd
andpd
movlpd
movapd
mulsd
movapd
subsd
movapd
pshufd
sqrtsd
mulpd
pshufd
pextrw
mulpd
addpd
movlpd
mulpd
cmpltsd
mulsd
addpd
pshufd
mulsd
andpd
mulpd
andpd
pshufd
subsd
addsd
mulsd
subsd
subsd
mulsd
pshufd
subsd
divsd
sub
addpd
mulpd
pshufd
addsd
and
pinsrw
pshufd
addsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
pextrw
shr
neg
movd
pshufd
movlpd
movlpd
andpd
andpd
addsd
sub
movlpd
fld
add
ret
movlpd
movlpd
addsd
sub
movlpd
fld
add
ret
xorpd
addsd
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movq
unpcklpd
movapd
andpd
comisd
jp
jae
comisd
jae
comisd
jb
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
comisd
jae
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
movq
xorpd
comisd
jae
movq
movq
movq
addsd
psrlq
psubd
movd
lea
movq
movq
subsd
mulsd
addsd
divsd
unpcklpd
jmp
mov
movq
movq
divsd
unpcklpd
movq
movq
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
subsd
subsd
orpd
movq
fld
ret
comisd
jne
fld
ret
comisd
jae
fld
fmul
sub
fstp
fld
add
fadd
ret
fld
fmul
fadd
ret
movq
movq
andpd
ucomisd
jp
mov
shr
fld
fadd
ret
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
nop
int3
int3
int3
int3
call
xchg
jmp
call
fxch
jmp
fabs
fld1
mov
xor
jmp
mov
fabs
fxch
fabs
fxch
fpatan
or
je
fldpi
fsubp
or
je
fchs
ret
fabs
fld
fld
fld1
fsubp
fxch
fld1
faddp
fmulp
ftst
fstsw
fwait
test
jne
xor
fsqrt
ret
pop
jmp
fstp
fld
ret
fstp
or
je
fstp
fldpi
or
je
fchs
ret
fstp
fldz
or
je
fchs
ret
fstp
jmp
fstp
mov
jmp
call
jmp
push
mov
sub
xor
cmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
push
call
pop
jmp
mov
mov
mov
cmp
jg
je
cmp
jg
je
mov
push
pop
sub
je
dec
je
sub
je
dec
je
sub
je
dec
je
sub
jne
mov
mov
fld
lea
fstp
push
fld
fstp
fld
fstp
call
test
pop
jne
call
mov
jmp
mov
fld
lea
fstp
push
fld
mov
fstp
fld
fstp
call
pop
jmp
mov
mov
jmp
mov
fld
fstp
fld
fstp
fld
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
jmp
mov
jmp
mov
fld
fstp
jmp
mov
jmp
mov
jmp
fld1
jmp
mov
mov
jmp
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
fld
fmul
fst
fld
fstp
fld
fstp
lea
fstp
push
mov
call
test
pop
jne
call
mov
fld
fstp
pop
pop
pop
leave
ret
mov
sbb
dec
add
ret
dec
add
ret
dec
add
dec
add
ret
dec
add
(bad)
aaa
jge
(bad)
cli
in
aad
je
das
pushf
loop
ins
adc
adc
loopne
and
add
xchg
adc
fs
xchg
fadd
jmp
cmp
sbb
xchg
pop
(bad)
aam
out
cmps
cmp
inc
or
repz
call
fs
push
or
sahf
dec
js
adc
fmul
add
or
lock
fdivrp
pop
lds
sub
sbb
sub
icebp
call
mov
fild
mov
jmp
sbb
bound
int3
imul
lahf
xchg
mov
mov
repnz
xchg
or
popf
mov
or
add
xchg
and
or
loope
fsubr
inc
pushf
sbb
sar
mov
sub
call
cmp
in
and
mov
cmps
cdq
inc
dec
rcl
and
mov
mov
or
fcomp
stos
out
mov
imul
and
jbe
cmp
or
test
dec
(bad)
je
lea
mov
out
push
jae
pop
xor
or
jo
xor
cmps
repnz
pop
mov
sahf
jns
inc
popa
ss
sub
dec
dec
dec
jmp
dec
jnp
or
sub
jl
cmps
mov
shl
enter
movs
and
div
jb
bound
ret
jo
sbb
mov
push
lods
xchg
nop
test
jmp
int3
mov
adc
jae
pop
pop
mov
lods
inc
pop
aam
or
aas
aad
out
xlat
lods
jmp
or
int
in
mov
xchg
pushf
sbb
jmp
xchg
mov
dec
mov
pop
rcr
push
aaa
movs
mov
cli
sbb
nop
les
call
cmp
inc
xor
push
inc
cmp
aas
movs
add
(bad)
out
out
shr
sbb
stos
pop
xchg
sub
ins
js
sbb
xchg
fnsave
push
adc
jle
mov
mov
fcom
sub
jno
(bad)
push
fdivr
mov
adc
lods
dec
call
adc
xor
out
cld
out
jbe
ss
push
xchg
and
xlat
nop
ftst
loop
hlt
and
test
sub
sub
adc
add
pop
shl
cdq
push
mov
ficomp
inc
add
popf
les
nop
or
call
test
stos
and
mov
es
sub
aad
inc
mov
mov
ins
xchg
mov
pushf
mov
repnz
push
jl
pushf
xchg
fsub
into
enter
in
sub
push
jb
inc
test
dec
ins
add
ss
retf
or
movs
mov
jl
in
arpl
bnd
push
popf
inc
cmp
or
push
sub
hlt
mov
push
std
jle
mov
es
jmp
sbb
push
mov
and
cmp
pop
xchg
adc
(bad)
jne
xchg
cld
cmps
sti
mov
push
pop
inc
arpl
es
pop
in
ds
xor
out
aad
sbb
jecxz
arpl
push
sub
fs
inc
scas
xlat
mov
iret
mov
sub
ins
dec
movs
mov
outs
ret
lods
inc
sar
or
shl
sar
sub
(bad)
shr
je
ret
mov
popf
bound
mov
in
ds
scas
mov
jmp
jp
mov
xor
adc
mov
movs
sbb
les
add
repz
ror
or
push
movs
daa
jle
jne
xor
push
shl
mov
adc
add
push
cmps
and
cmp
and
out
push
out
pop
cmp
xor
into
fsub
es
jae
add
adc
mov
popa
push
dec
stos
lea
dec
pop
in
adc
pop
es
pushf
dec
sub
xchg
int3
rcr
dec
jmp
jae
int3
retf
sbb
sbb
ret
neg
popa
sbb
mov
add
imul
fcmovbe
mov
out
jb
fild
pop
push
or
mov
int3
pop
(bad)
cmps
in
ja
imul
scas
adc
pop
loopne
sbb
dec
cs
sub
mul
mov
loop
mov
push
data16
cmps
cmp
(bad)
seta
mov
fld
int3
xlat
ficom
xchg
cdq
sahf
xchg
std
dec
mov
or
jno
js
or
and
jmp
das
mov
cmp
mov
retf
pop
dec
inc
jbe
or
inc
loop
mov
mov
jb
dec
mov
jb
push
stos
adc
xchg
push
(bad)
fimul
pop
rcl
ins
add
xchg
stc
je
and
fldcw
adc
dec
mov
loop
call
sub
cdq
jle
mov
mov
popa
stc
shl
xchg
jmp
sbb
int
mov
sub
and
mul
aam
out
int
cmc
arpl
aad
shl
push
cs
popf
inc
inc
xlat
jge
pop
and
or
or
or
cmp
cdq
repnz
loop
test
mov
pop
pop
and
mov
mov
in
int
lods
out
(bad)
loopne
inc
fimul
mov
int
and
jns
test
xor
das
lods
(bad)
sub
mov
jbe
mov
stos
mov
icebp
inc
aas
inc
inc
nop
cmp
aad
push
cmp
stos
call
and
pop
inc
or
repz
sbb
and
faddp
or
mov
xchg
xchg
ins
stc
mov
ret
dec
stos
ror
cmp
sahf
and
adc
shl
jbe
jge
or
stos
pop
fcom
push
sbb
cmp
sahf
loopne
jbe
or
dec
add
in
cld
sahf
pop
sahf
and
dec
out
sar
push
shl
out
and
pop
add
std
push
jp
ficom
jl
push
mov
pop
ret
jmp
jnp
sbb
mov
cmp
mov
sahf
xlat
shl
jo
imul
xor
adc
inc
lods
aad
mov
int3
cmps
shr
xchg
lods
sbb
cld
sub
fstp
fwait
lods
adc
mov
add
(bad)
fcom
es
test
aam
fcomp
bound
xchg
repz
int3
jo
mov
sbb
mov
cmp
or
dec
xlat
shr
dec
push
aam
mov
outs
ins
or
jb
mov
xor
and
(bad)
(bad)
and
xchg
or
(bad)
pop
jmp
xchg
mov
fidivr
mov
cmp
mov
lods
mov
add
inc
out
sbb
stos
adc
out
cld
jg
daa
xor
mov
ja
cmp
inc
or
mov
jno
adc
inc
xor
idiv
mov
aaa
mov
xchg
add
in
sub
imul
ficomp
jge
lods
adc
add
dec
cli
jmp
xor
into
xor
ror
adc
push
jl
leave
adc
or
and
push
and
ror
add
retf
in
pop
mov
in
int3
jae
arpl
push
mov
xchg
(bad)
iret
and
mov
cmp
mov
sbb
xchg
inc
sbb
fld
test
mov
and
in
cmp
fstp
adc
mov
lods
push
xchg
movs
push
mov
(bad)
sub
ss
out
mov
push
js
inc
je
movs
sbb
push
sti
sahf
bound
lock
xchg
sbb
test
pop
(bad)
data16
cmp
mov
mov
xor
add
sub
in
sbb
clc
call
cmp
xchg
mov
push
call
xor
xlat
repnz
in
and
and
or
push
movs
cmp
xchg
repnz
dec
pop
fdivr
ins
mov
mov
sbb
(bad)
ret
adc
xor
dec
clc
ret
cmc
imul
daa
sbb
pop
jmp
in
arpl
les
leave
(bad)
mov
cmp
mov
int3
icebp
xor
jnp
inc
int3
pop
inc
clc
pop
je
pushf
jle
mov
sub
xor
inc
jnp
push
jno
jns
push
and
ret
cmp
int
xchg
and
xchg
rcr
jb
add
jne
add
and
fucomi
inc
not
push
rcl
div
inc
xchg
mov
inc
mov
push
mov
mov
mov
es
in
or
inc
sti
adc
jle
pop
dec
xchg
dec
sbb
jmp
sbb
and
int
cmc
mov
xchg
xor
pop
or
sub
add
add
in
add
test
sub
fcomp
push
add
add
xchg
jmp
and
xchg
xor
sub
inc
ja
fs
int3
sbb
pop
(bad)
mov
cli
inc
add
rol
and
ja
rol
cmp
test
(bad)
dec
mov
mov
cmp
(bad)
sahf
loop
or
add
mov
(bad)
mov
jne
in
jno
(bad)
scas
sub
mov
clc
sbb
xor
and
or
nop
and
push
cdq
pop
and
mov
(bad)
adc
ficom
lds
add
jbe
lods
mov
mov
jl
iret
cmp
jns
cwde
stos
fcom
add
fisub
in
cmps
add
lods
aas
sti
sub
iret
ins
test
std
je
dec
jno
mov
dec
test
sub
(bad)
sub
jne
sbb
push
sti
addr16
fucomp
lock
repz
jle
dec
rcl
dec
push
jae
jae
(bad)
dec
repz
push
test
fild
mov
ret
in
push
cmp
pop
sub
pop
lods
ins
ja
add
mov
cmp
xor
retf
dec
hlt
mov
fcomp
or
mov
sbb
shr
lock
and
sbb
cmp
jo
mov
mov
retf
pop
dec
outs
inc
add
push
mov
mov
(bad)
cmp
ret
push
shl
lock
push
push
sahf
push
lea
xchg
ins
sub
mov
jmp
mov
imul
dec
jo
(bad)
movs
rcl
scas
repnz
iret
ret
jle
inc
es
jbe
push
pushf
shr
cmp
adc
stos
jno
mov
ret
xor
cs
loopne
(bad)
jle
in
repz
shr
cmp
mov
adc
sub
(bad)
push
jecxz
pop
sti
xchg
in
xchg
cmp
mov
pop
add
scas
cmc
adc
cmp
clc
mov
jge
fild
aas
cli
add
adc
inc
and
add
jnp
pop
repnz
lods
dec
int3
out
xchg
cmp
mov
xor
std
clc
(bad)
pop
cmp
mov
jp
lods
pop
mov
iret
mov
fcmovnb
cmp
inc
or
in
es
mov
clc
stc
scas
fwait
stos
int3
push
mov
inc
mov
pop
shl
aaa
push
push
loopne
cmc
xor
loope
fs
in
ret
mov
fwait
shl
std
inc
pop
dec
mov
pop
lds
shr
and
vsubsd
mov
sbb
jno
cmp
xor
xor
pmaxsw
jle
jmp
mov
push
jge
mov
mov
xor
retf
or
in
mov
inc
and
pop
es
ja
pop
sar
and
xchg
lods
les
repz
aas
inc
xchg
loopne
mov
in
int
ja
retf
xor
(bad)
push
mov
loop
out
inc
rcr
cmp
fs
dec
jb
xchg
adc
lods
push
or
push
sub
int
lock
daa
gs
nop
mov
cmp
dec
jge
jae
dec
sbb
push
mov
lods
test
cmp
sar
mov
int
add
mov
xchg
in
(bad)
add
xlat
sbb
cld
popf
sbb
pop
mov
xlat
pop
aas
mov
xlat
cmps
xchg
push
cmp
cmp
mov
fxch
mov
fisubr
shl
jl
jns
xor
pop
les
(bad)
(bad)
frstor
mov
xor
sub
imul
jmp
repz
mov
jmp
push
or
popa
fs
pop
call
xchg
sbb
lods
ret
ds
jbe
inc
shr
call
loopne
iret
ficom
cli
mov
scas
lahf
int
mov
jl
mov
adc
jbe
test
inc
psubq
ja
ds
popf
mov
add
sar
mov
pop
and
inc
mov
faddp
adc
mov
push
inc
test
mov
jecxz
retf
into
repnz
(bad)
and
pushf
xchg
icebp
adc
retf
stc
add
mov
mov
out
dec
pop
mov
in
jp
or
daa
inc
pop
push
aaa
mov
cmp
call
mov
mov
mov
mov
dec
push
xchg
pop
pushf
add
sub
std
inc
cs
dec
mov
inc
and
cmp
inc
mov
and
mov
sbb
push
inc
inc
xor
xlat
(bad)
jecxz
ficomp
jg
gs
inc
add
lods
(bad)
push
adc
pop
aad
pop
inc
adc
pushf
adc
xor
xor
mov
adc
mov
pop
(bad)
push
cmc
idiv
popa
lea
iret
push
int3
out
add
jmp
jp
push
mov
jns
jo
sbb
das
add
ds
adc
test
jo
int
jl
mov
mov
shl
(bad)
loop
shl
mov
sbb
push
cmp
int3
inc
and
cmps
add
and
scas
pop
in
aaa
inc
or
xlat
loope
adc
daa
jge
push
cmp
push
push
fisub
push
push
dec
popf
xor
mov
dec
outs
and
pushf
inc
lea
xor
mov
mov
xchg
cs
add
imul
or
les
dec
aaa
xor
inc
ret
aad
test
clc
loopne
jecxz
nop
ja
jb
arpl
arpl
adc
dec
lods
ja
nop
sbb
bnd
stos
fimul
sub
dec
add
test
shl
enter
lahf
jl
in
sysexit
xchg
mov
or
data16
mov
xor
std
inc
out
(bad)
sub
aam
pusha
rcr
lahf
test
or
push
adc
dec
mov
or
pop
in
mov
mov
(bad)
int3
js
fs
fwait
push
push
rol
ds
sbb
xlat
add
inc
repz
add
jno
ins
out
mov
int3
rcr
stos
rep
sbb
xor
mov
cmp
sbb
or
push
mov
jns
fwait
mov
inc
push
std
cmp
jbe
pop
jle
fld
fadd
xchg
mov
xor
sbb
dec
cli
es
int3
push
jb
adc
xor
aam
shl
ins
int3
scas
push
pop
das
mov
out
pusha
out
ret
push
and
mov
cmp
leave
xor
xchg
test
mov
int
arpl
ficom
or
dec
mov
std
leave
push
sub
jl
inc
jecxz
mov
out
ja
sar
or
jne
and
mov
shl
or
pop
ds
mov
sbb
mov
sbb
and
stos
xchg
div
dec
inc
ins
dec
add
xchg
jmp
adc
lea
jmp
mov
add
mov
push
mov
in
daa
push
cmp
fdivr
sbb
retf
dec
test
(bad)
fs
xchg
cld
mov
add
ins
std
stos
lods
mov
popf
mov
jmp
and
jmp
dec
(bad)
iret
das
loope
jmp
sahf
and
xchg
scas
inc
adc
cmp
lods
popf
and
xchg
sahf
cli
in
jmp
cmp
repnz
dec
jbe
pop
outs
xchg
cmp
or
xchg
xchg
sahf
sub
jmp
mov
test
mov
adc
or
imul
repz
call
push
(bad)
retf
int3
pop
in
xchg
fisttp
es
ins
adc
xchg
in
lds
mov
fnstcw
sbb
cmp
dec
sub
mov
mov
in
sar
sar
fwait
xchg
inc
(bad)
lods
mov
cmp
cli
loope
jb
adc
inc
dec
bound
cmp
pop
mov
push
repnz
fnstcw
push
jl
data16
pop
mov
cmp
push
cmp
ret
mov
mov
inc
mov
xchg
sub
mov
mov
int
das
iret
adc
or
repz
jnp
movs
in
mov
popa
pop
xchg
nop
mov
mov
lock
mov
stc
pop
mov
rcr
cmp
xor
mov
ja
fidiv
pop
adc
mov
mov
push
pop
cdq
dec
jne
shr
bound
in
mov
inc
into
rcl
cmp
sbb
cmps
xchg
ss
pushf
jecxz
xor
movs
fbld
clc
stos
clc
push
xchg
pop
pop
cwde
(bad)
mov
and
in
adc
(bad)
xchg
adc
push
fld
mov
jecxz
dec
arpl
cmc
pop
pop
fdivr
sbb
enter
jns
or
ds
mov
push
sub
std
dec
push
into
(bad)
xchg
jne
retf
sub
sub
cld
loope
mov
push
jge
dec
pop
lods
nop
sub
jne
and
pop
int3
jae
inc
add
mov
or
imul
cmc
in
lds
jmp
xchg
inc
jmp
or
bound
mov
pop
ror
push
jle
fnsave
xchg
lods
fistp
pop
iret
push
in
add
fld
adc
jbe
xchg
retf
mov
sbb
sub
out
push
(bad)
pop
aas
ins
loope
jae
push
or
and
stos
aas
jmp
addr16
inc
pop
js
in
(bad)
push
lock
imul
cmp
pop
gs
xchg
test
data16
shl
jmp
pop
add
cmp
push
adc
add
dec
xor
ins
xor
in
dec
xchg
and
(bad)
jnp
int3
cmp
shr
dec
jl
cmp
loopne
mov
sub
mov
lods
sub
jne
daa
lds
repnz
pavgb
mov
lods
and
icebp
iret
hlt
retf
test
and
pushf
stos
push
or
xchg
push
js
js
add
cmp
fidiv
enter
push
and
rcl
xor
sub
ret
aam
sub
cld
jo
addr16
jecxz
dec
or
ins
movs
mov
sub
mov
adc
lods
nop
xor
and
retf
xlat
adc
bound
mov
ds
shl
loopne
mov
add
lds
sbb
lods
retf
jo
js
rcl
add
adc
mov
arpl
ss
and
pop
shl
stc
int
repz
mov
push
mov
jno
add
or
fcmove
push
in
dec
shl
(bad)
jg
in
pop
and
dec
in
bound
add
sub
sbb
jmp
mov
mov
in
stos
mov
or
ja
xchg
mov
out
pop
adc
in
outs
jnp
cmp
test
shr
and
ret
sbb
push
scas
pop
mov
in
in
cmp
add
ret
loopne
lods
adc
jmp
sub
clc
scas
mov
mov
mov
adc
bound
mov
xlat
mov
mov
lods
retf
lea
xor
and
cmp
fiadd
fxch
sub
jecxz
push
popf
mov
pop
push
mov
in
shl
dec
clc
and
xor
push
xor
push
cmp
mov
jge
imul
ror
xchg
and
mov
xchg
mov
mov
jb
outs
arpl
adc
cmp
mov
lock
in
in
xchg
and
in
inc
cmp
xor
xor
in
addr16
mov
cmp
mov
test
test
pop
and
inc
inc
bound
call
mov
inc
sub
xor
push
lea
ins
xor
and
mov
pop
add
clc
add
or
inc
ins
das
test
cmp
retw
pop
movs
jnp
aaa
out
fist
sbb
daa
test
leave
pop
sub
add
fimul
dec
or
sub
dec
jmp
xchg
jmp
jmp
je
and
jmp
jmp
retf
jae
inc
arpl
sub
xor
iret
or
rol
lods
repnz
mov
into
fmul
mov
retf
mov
cmp
inc
arpl
mov
adc
sti
dec
shr
lock
movs
pop
stos
sub
push
xchg
inc
jne
push
jge
sbb
mov
cdq
mov
mov
hlt
lea
das
or
lods
cdq
xor
bound
pop
out
and
das
rcl
popf
dec
mov
inc
out
mov
mov
rol
dec
and
jb
lods
imul
inc
pop
and
adc
imul
bound
icebp
aas
popa
inc
mov
cmp
and
(bad)
mov
popa
xchg
sub
std
mov
lea
cmp
cli
add
inc
pop
sbb
jns
aad
push
mov
or
adc
test
out
aad
hlt
cmp
sbb
les
xchg
or
pop
aaa
(bad)
cld
ret
adc
out
movs
popf
sbb
mov
push
imul
rol
test
push
mov
xor
add
push
push
mov
dec
stc
(bad)
sub
or
nop
sti
sub
jge
and
pop
jbe
push
add
(bad)
pop
stos
mov
rol
out
add
pusha
jb
mov
pushf
mov
cmp
xchg
dec
jg
mov
retf
scas
lea
iret
movs
or
pop
jnp
nop
outs
lock
xor
cs
add
cmp
ins
enter
xchg
aaa
xchg
mov
ds
sub
and
adc
sub
outs
repz
push
out
sti
fstp
adc
movs
adc
sbb
push
ss
cmp
pop
daa
addr16
retf
jne
mov
ror
pop
cmp
gs
mov
and
repnz
adc
xchg
(bad)
cmc
jmp
jmp
repnz
test
stc
lahf
gs
or
fsubr
push
je
mov
std
jle
lods
test
out
(bad)
dec
add
cmp
repnz
mov
mov
std
pop
lock
sbb
inc
and
movs
aam
(bad)
xor
lods
cld
imul
xor
nop
fcom
outs
adc
xchg
jae
mov
mov
dec
cmp
ror
je
or
cli
xor
ret
cmp
stos
sbb
pop
in
jmp
lods
push
dec
es
mov
je
jmp
dec
lea
mov
stc
xor
mov
lods
adc
mov
or
jl
xlat
(bad)
movs
das
mov
adc
aas
(bad)
inc
fst
xor
mov
cdq
inc
inc
mov
mov
jb
loope
mov
jg
mov
sub
mov
push
shr
in
loop
mov
jns
dec
xchg
pop
sti
imul
and
xlat
jge
xor
jae
fldenv
adc
in
dec
inc
mov
movs
xor
in
fs
mov
aaa
and
mov
mov
inc
ins
mov
pop
mov
dec
pop
xchg
sub
iret
xchg
jns
xchg
jg
int3
arpl
lea
pop
outs
and
cs
sbb
dec
inc
test
and
out
cmps
imul
jnp
cmp
mov
(bad)
inc
out
in
jb
dec
lods
lds
xchg
jg
xor
add
mov
sbb
push
cmp
fidivr
pop
ret
or
adc
js
jge
mov
imul
daa
mov
mov
mov
and
cmps
lods
and
jg
mov
or
mov
mov
pop
call
cs
lods
pop
mov
int
xchg
mov
fdivr
clc
int
cmps
in
lea
dec
mov
push
jb
adc
fs
daa
xor
or
mov
push
jmp
pop
lahf
sti
je
mov
adc
inc
cs
add
xlat
push
inc
nop
enter
ss
arpl
(bad)
mov
imul
retf
lea
pop
inc
lea
inc
mov
mov
test
sub
xor
icebp
ret
mov
sub
std
xchg
mov
mov
dec
in
adc
mov
ret
or
mov
int3
dec
aam
mov
test
push
pop
sub
in
loope
xchg
sbb
fs
in
in
data16
loope
or
jns
bound
push
mov
pop
pop
jns
pushf
shr
dec
mov
pop
test
dec
mov
xlat
popa
and
adc
push
outs
sbb
pop
(bad)
pusha
inc
ins
idiv
stos
mov
retf
xor
or
xor
push
cmp
push
dec
in
in
xor
mov
outs
movs
arpl
mov
and
es
in
les
popa
push
mov
imul
mov
repnz
pop
jp
test
sbb
inc
mul
std
aas
push
push
xchg
mov
enter
std
add
mov
mov
hlt
mov
fist
lods
cs
into
mov
dec
jmp
mov
add
out
clc
fs
add
push
inc
mov
inc
pop
pop
popa
xor
xor
outs
mov
inc
sbb
nop
mov
fwait
adc
das
cmp
in
sub
ins
jl
add
ds
sbb
cld
rol
out
xor
xor
shl
dec
pop
push
sub
xchg
bound
fstp
mov
and
out
mov
test
movs
in
push
dec
pusha
and
fs
mov
sti
jae
fist
adc
push
test
xchg
mov
into
or
sub
inc
fs
addr16
jnp
fnsave
ficom
popf
test
jne
adc
dec
push
xchg
fadd
mov
xchg
cmp
push
mov
fstp
or
div
(bad)
mov
xor
outs
inc
repnz
lahf
cli
sub
aaa
retf
mov
repnz
shr
mov
mov
pop
lock
enter
dec
pusha
adc
lods
and
rcl
xor
mov
xchg
fidivr
ret
mov
lahf
sbb
pop
mov
and
ret
push
jl
clc
cmp
stc
lahf
xchg
push
in
xor
std
mov
or
adc
int3
inc
cmp
ror
add
(bad)
jmp
mov
adc
popa
outs
push
push
bound
mov
out
or
popf
pop
xchg
inc
cmp
lods
js
(bad)
fadd
(bad)
clc
dec
ins
pop
push
ja
mov
sub
iret
out
xor
test
gs
fstp
rol
pop
xchg
inc
or
push
dec
data16
xchg
pop
jge
adc
nop
mov
(bad)
int
or
std
mov
out
clc
inc
mov
pop
daa
aas
loop
pop
mov
call
outs
xchg
(bad)
jb
jge
add
mov
cmps
xchg
add
ins
(bad)
add
cmp
add
je
and
jl
dec
imul
xor
into
test
mov
mov
dec
sbb
jmp
stos
xor
xchg
inc
fldcw
mov
fwait
enter
xor
lods
adc
lods
and
and
lock
push
xor
mov
xor
nop
sahf
cmp
mov
retfw
jnp
pushf
int
and
out
mov
push
pop
lahf
add
add
mov
jge
jle
cmp
and
rcl
into
ins
sub
mov
and
jmp
push
int3
scas
mov
push
or
es
jo
(bad)
leave
dec
in
div
ins
fdiv
and
push
xchg
dec
imul
xchg
and
mov
shl
mov
xchg
cmp
test
inc
push
in
add
lods
sub
and
sbb
loop
popf
clc
out
sbb
test
test
jae
fisubr
pushf
or
xor
imul
stos
cld
pop
call
mov
xor
or
xor
pop
mov
movs
leave
push
xor
lods
stos
loope
cwde
jl
push
ins
bound
jecxz
push
shl
cmp
cs
popf
or
mov
rcr
jmp
jnp
push
add
cmps
fdivr
fs
test
stos
jp
sbb
pop
jecxz
jo
fdivp
jle
adc
adc
rcl
xor
xor
and
dec
jp
clc
(bad)
push
pushf
ja
xchg
mov
icebp
pop
add
addr16
and
out
repnz
sahf
xchg
sub
pop
xchg
inc
sbb
push
pop
add
sbb
add
stos
js
xchg
std
cmc
mov
retf
adc
mov
psubb
stos
xchg
mov
pop
mov
or
xchg
xchg
xor
in
jnp
inc
jle
sbb
dec
push
clc
jecxz
scas
push
sub
in
test
aam
pop
mov
ficomp
inc
sbb
ss
out
ins
fs
jb
lock
dec
mov
lods
(bad)
push
cmp
cmp
or
pop
mov
out
ss
push
mov
in
push
ret
adc
cmp
and
sub
xor
mov
out
xor
bound
ins
xor
inc
les
add
repz
loope
xor
div
mov
idiv
sub
shl
cs
push
xchg
sub
mov
jae
mov
scas
into
aad
ins
add
xchg
xchg
ins
movs
push
into
jb
lods
push
adc
bnd
mov
jmp
dec
push
pop
es
(bad)
sub
add
mov
cdq
sahf
adc
xchg
cmps
cli
sub
pop
push
jecxz
pop
in
(bad)
retf
aas
mov
ror
adc
mov
inc
push
dec
cmps
or
enter
loope
and
push
add
in
pop
mov
pusha
pushf
push
int3
or
shl
shr
mov
and
les
jmp
out
sbb
inc
ret
sub
stos
stos
jecxz
mov
in
iret
sub
xchg
retf
daa
jmp
in
xor
dec
push
mov
stos
daa
adc
pop
add
in
outs
mov
or
sbb
jb
pusha
imul
lahf
cdq
popf
mov
jae
push
ja
js
out
xchg
mov
test
jbe
loope
idiv
and
push
sub
sar
xchg
ins
jp
stc
dec
dec
test
push
je
or
arpl
xor
xor
jl
sar
(bad)
xchg
jl
and
xor
dec
xchg
jge
fldenv
in
arpl
cmp
mov
shl
push
sub
xor
cmp
popa
pop
retf
dec
push
inc
imul
add
(bad)
enter
fwait
cli
ret
rcr
(bad)
mov
(bad)
ins
add
inc
or
cmp
aam
sbb
pushf
and
sbb
out
push
ficomp
leave
push
or
jl
and
shr
mov
adc
push
call
push
ret
push
icebp
cmp
push
shl
in
leave
cmp
mov
mov
add
lock
and
jp
(bad)
xor
mov
loope
ret
cs
stos
and
pop
(bad)
in
(bad)
cli
jne
cmp
xchg
xor
add
mov
inc
repnz
ja
out
es
pop
std
push
cmp
aad
push
jl
dec
ret
cmp
out
daa
mov
mov
bound
dec
push
sar
jmp
xor
shr
in
hlt
popf
js
mov
movs
mov
ret
jl
pop
popa
repz
mov
inc
mov
(bad)
xor
call
or
mov
inc
nop
xchg
jo
stc
push
mov
stos
sahf
mov
jnp
dec
shl
adc
ret
cmps
inc
jns
in
arpl
and
sahf
ss
cmp
shr
imul
mov
arpl
or
or
jne
mov
xor
pop
xchg
push
push
push
push
dec
jnp
cmc
ja
das
ins
cmps
js
jecxz
and
fisub
sub
mov
(bad)
cmps
jb
outs
fdivr
add
push
lods
stos
pop
mov
fwait
lods
add
(bad)
inc
push
arpl
enter
jbe
addr16
pop
dec
aad
inc
(bad)
pop
lea
ins
push
imul
cwde
adc
test
cmp
mov
inc
and
sbb
cmp
pop
adc
shl
mov
fsubr
or
dec
imul
xor
jb
sbb
sub
in
icebp
leave
lahf
aas
ins
ret
ins
mov
test
lock
test
add
je
sub
cli
xor
cld
mov
mov
fcmovnb
fsub
mov
test
test
cmp
call
inc
fist
repnz
iret
push
ss
cld
repnz
out
mov
or
int
mov
mov
rcr
sbb
scas
movs
push
sub
push
in
das
xchg
pusha
loop
ja
out
ret
pusha
jae
jle
push
out
mov
das
out
dec
je
adc
mov
enter
loope
ret
retf
mov
jbe
jnp
addr16
and
push
frstor
add
(bad)
sbb
sbb
sbb
xchg
fidiv
js
ins
arpl
repnz
inc
and
inc
sar
and
hlt
cdq
(bad)
out
pop
mov
scas
jae
inc
cs
(bad)
loope
xchg
adc
sar
test
lea
mov
sub
rcr
xor
int
adc
ins
out
or
test
xchg
movs
fs
sbb
push
jecxz
xchg
pop
sahf
hlt
or
jmp
retf
call
or
dec
mov
imul
ss
pop
inc
inc
and
push
imul
jecxz
xchg
test
stos
mov
dec
ret
dec
xchg
pop
ins
sub
bswap
inc
rcl
xor
call
mov
js
rcr
dec
icebp
clc
mov
and
rol
mov
add
xchg
rol
ins
rol
or
xchg
or
mov
ins
pusha
pop
push
jge
and
pushf
sahf
add
lahf
es
xor
adc
add
stc
cmps
out
loop
jno
ret
mov
fld
fdivr
inc
xchg
jb
ret
sbb
sbb
lock
xchg
cmps
stos
cmp
outs
mov
cmp
jmp
xchg
xor
mov
repnz
es
int
or
xor
and
popf
ins
or
mov
jns
add
mov
mov
outs
xor
inc
xchg
shl
mov
test
push
inc
test
outs
punpckldq
aas
xchg
or
fsub
ja
cmps
loop
ja
aaa
mov
adc
sbb
and
xchg
sbb
das
xor
dec
xlat
shl
movs
xchg
je
mov
mov
call
jo
push
sub
loopne
aaa
or
xor
stc
in
mov
cwde
mov
imul
fisubr
les
sub
jno
and
inc
xchg
neg
mov
xchg
sub
je
jge
repz
ret
xchg
xchg
cwde
call
jo
mov
in
(bad)
iret
push
scas
aas
sub
aas
je
stc
pop
push
std
lods
adc
push
imul
leave
jp
sub
mov
je
and
iret
xchg
mov
mov
loopne
repz
ror
dec
in
fld
xor
dec
aas
and
(bad)
aam
sub
adc
lods
xchg
ret
pop
jg
dec
rcl
or
inc
outs
sbb
sbb
mov
fidiv
pop
stos
and
ret
pop
dec
mov
ds
daa
lock
dec
sar
in
shl
jno
je
pop
pusha
cmps
int3
outs
sub
xchg
or
mov
adc
mov
cmps
in
pop
dec
jp
pop
loop
push
dec
sub
pop
add
or
lock
out
fdivr
shr
(bad)
fcom
dec
xor
mov
repz
repz
bound
fstp
jb
aam
aad
sbb
jae
fsub
mov
lods
mov
addr16
push
stc
mov
cmp
adc
cmps
inc
ins
pop
ret
in
jb
sbb
cmps
or
daa
sbb
mov
shl
push
das
mov
(bad)
xlat
scas
xor
iret
lahf
into
push
das
cmp
and
fidivr
loopne
mov
sbb
cwde
lods
xor
jns
inc
fisttp
pop
push
aam
cmp
out
sub
and
jmp
mov
adc
mov
leave
ins
pop
cmp
fdivr
movs
xchg
outs
call
inc
or
mov
cmp
xchg
fist
pop
rcr
or
and
sahf
mov
jae
shr
aas
jmp
push
in
mov
mov
and
jb
sbb
fmul
inc
imul
sub
scas
mov
in
lds
outs
popf
leave
sahf
dec
cmp
inc
test
sbb
js
bound
adc
ret
loop
and
leave
std
add
ins
push
push
outs
hlt
std
mov
mov
mov
mov
sar
gs
int3
aaa
fwait
cs
or
loope
mov
int3
push
inc
mov
adc
fisttp
mov
or
inc
jnp
sahf
xor
shl
or
fbld
nop
in
mov
mov
dec
test
mov
mov
or
and
ror
cmp
test
add
sbb
test
add
fcomp
dec
shr
in
cmp
or
jecxz
mov
aaa
imul
pop
jge
fimul
retf
int
cmp
das
icebp
(bad)
hlt
lock
mov
xor
into
pop
cmp
iret
ja
xor
adc
jmpw
mov
mov
add
fs
ror
ss
xchg
pop
push
icebp
js
repnz
xchg
popa
jo
(bad)
popf
mov
mov
push
inc
jmp
or
dec
cmp
lahf
xor
ins
inc
mov
into
mov
or
jle
test
sbb
(bad)
(bad)
mov
cli
xchg
or
jnp
fsubr
add
adc
jmp
std
ins
int3
dec
cmp
mov
gs
loop
dec
shl
rol
cmp
mov
call
mov
jecxz
mov
or
retf
hlt
ret
jo
stc
arpl
dec
shr
adc
lahf
jmp
sbb
aas
cmps
outs
enter
sar
ins
sbb
cmps
mov
cwde
dec
push
fnsave
int3
pop
mov
xchg
pop
mov
and
pop
sub
dec
jo
sti
in
push
hlt
add
hlt
push
repnz
or
test
xor
mov
xchg
(bad)
xchg
div
pop
mov
cmc
pop
push
inc
mov
shl
add
aaa
test
hlt
popf
mov
icebp
mov
js
cmc
xor
mov
int
adc
pop
mov
add
or
pop
les
or
sbb
jbe
add
in
sahf
inc
push
pop
mov
dec
out
lods
sub
inc
mov
int
sub
xchg
jmp
pushf
test
popa
adc
inc
in
sub
mov
push
jb
in
loope
jp
daa
sbb
stos
test
jecxz
dec
or
add
xchg
push
jecxz
jb
add
lahf
cmp
sbb
repz
inc
pusha
aad
mov
scas
ds
sar
dec
paddsw
sub
retf
inc
mov
jle
mov
or
xchg
test
rcr
adc
(bad)
mov
mov
stos
aad
inc
cmp
jmp
das
cmc
outs
test
xchg
mov
lock
dec
leave
mov
xchg
jnp
ja
dec
bound
pop
jae
imul
dec
xchg
and
mov
mov
mov
pop
sbb
push
std
cmc
add
xor
(bad)
cmc
out
add
lock
sub
pop
fidiv
jg
or
(bad)
add
mov
aam
cmp
inc
add
cmps
push
mov
jmp
xor
and
xchg
lods
push
adc
dec
test
xchg
and
ins
rcr
shl
in
dec
jno
push
mov
pop
cs
mov
xchg
mov
adc
add
inc
lods
sub
dec
dec
int3
(bad)
scas
mov
mov
mov
cmps
imul
pop
adc
ins
shl
fdivr
add
add
shr
sbb
mov
imul
cmps
xchg
mov
sub
sar
sub
mov
jge
dec
(bad)
mov
mov
scas
js
ds
inc
pop
rcl
arpl
jb
jl
jp
xchg
dec
mov
jne
jae
inc
call
mov
(bad)
mov
or
push
push
add
punpckldq
add
stos
xchg
fwait
or
movs
sahf
pop
mov
test
add
cmp
dec
xlat
xchg
loope
mov
hlt
aam
pop
mov
xor
xchg
or
xchg
(bad)
leave
xchg
pop
loopne
shl
mul
fistp
adc
loop
enter
xor
popa
repnz
cmps
nop
cdq
inc
jnp
adc
aas
jmp
xchg
ss
shl
movs
popf
sub
add
sub
mov
jne
pop
dec
sub
jle
outs
jge
scas
std
lahf
dec
jmp
stc
out
test
xchg
jae
jne
popfw
popf
pop
js
mov
bound
sub
pop
outs
ds
sahf
xchg
or
fs
in
pop
daa
inc
cdq
push
popa
and
in
out
sub
out
(bad)
push
dec
dec
cmp
ins
xor
adc
lahf
mov
std
xor
xor
dec
(bad)
into
retf
xchg
movs
in
(bad)
mov
cli
xlat
lods
xchg
sbb
push
cld
repnz
pop
fcomp
pusha
loopne
push
add
bound
add
xchg
ret
jmp
ins
mov
int3
sar
and
add
cmp
jnp
sub
movs
mov
mov
mov
hlt
and
xchg
add
test
mov
test
jecxz
cmp
mov
jle
aad
mov
mov
mov
push
pop
aad
xchg
adc
jl
hlt
xchg
iret
push
pop
shr
add
aaa
das
or
(bad)
sbb
sub
sti
out
aas
lods
(bad)
out
or
xor
jo
xor
sub
cmp
pusha
out
jb
and
nop
mov
mov
imul
pop
xor
ds
shr
push
fistp
neg
outs
sub
mov
push
xchg
dec
sub
adc
push
jl
gs
loope
fsub
pop
inc
movs
ds
sub
repz
cmp
fsub
out
add
data16
push
mov
pop
aaa
adc
add
ja
test
mov
jae
int3
pop
cmp
ins
inc
mul
or
pushf
das
sahf
rol
in
cmc
cs
pop
lahf
inc
xchg
test
mov
sub
aam
pop
cmp
ret
xor
adc
ss
int
inc
sbb
shl
inc
inc
cmp
movs
cmp
ss
sar
ret
inc
pop
jae
test
push
cmp
out
dec
push
nop
push
and
adc
ret
int
shr
pop
jne
arpl
fwait
and
mov
push
xchg
ds
clc
add
in
arpl
xchg
movs
jmp
js
shl
adc
xor
jb
or
cmp
mov
add
jbe
cmps
inc
popa
push
jge
pop
or
and
in
ret
out
adc
ror
into
xchg
cmp
nop
dec
stos
aaa
add
or
sbb
dec
xor
call
jecxz
cmp
or
xor
mov
add
jge
mov
xor
in
add
lock
mov
lods
(bad)
fs
dec
adc
adc
push
adc
test
fild
mul
ss
rol
arpl
xchg
push
or
dec
or
les
sbb
jno
(bad)
jae
sub
(bad)
sub
xor
push
push
mov
mov
add
ins
xor
jae
daa
and
lods
das
fcmove
or
sti
ret
out
mov
test
je
popf
cmps
push
xchg
pop
stos
jbe
jae
icebp
jle
dec
and
bound
inc
and
mov
into
pushf
push
push
jmp
lahf
cmc
cmp
in
loop
inc
and
add
add
leave
pop
mov
repnz
pushf
aaa
push
frstor
pop
shr
push
clc
retf
lods
cs
(bad)
mov
neg
mov
(bad)
test
push
out
test
int3
cmp
icebp
ja
int3
mov
jmp
adc
out
mov
push
pop
mov
cli
dec
push
sbb
pop
fcomp
cmp
sub
in
ret
or
add
pop
push
mov
xlat
jae
mov
xlat
out
jne
stos
ds
push
fidivr
dec
and
(bad)
or
adc
xchg
adc
fabs
pushf
out
aam
movs
xchg
jmp
pop
ins
adc
xor
xchg
add
sub
popa
add
mov
add
in
sub
mov
adc
imul
addr16
xchg
ret
dec
jle
push
sbb
test
xchg
xchg
mov
or
int3
pop
fstp
dec
nop
xor
xor
push
adc
outs
mov
xlat
push
test
add
pushf
int
cmp
fstp
in
sub
pusha
aaa
dec
pop
(bad)
aad
adc
daa
sbb
jp
and
iret
movs
enter
mov
push
fld
pushf
sub
pop
push
push
cmp
fisub
push
jecxz
js
jl
int3
mov
stos
mov
movs
fcom
daa
loope
ror
les
sub
fwait
dec
push
mov
loopne
ja
sub
cmp
push
pop
test
sub
jbe
clc
cld
mov
ins
adc
push
fcomip
fsub
mov
mov
push
adc
cs
loop
pop
scas
sar
push
mov
lods
js
xor
adc
stos
pusha
jl
lds
loop
and
rcr
cmp
jae
dec
or
sbb
jnp
xchg
inc
sbb
out
push
cmp
adc
shl
inc
xor
cmps
xchg
cld
addr16
fstp
out
fpatan
jmp
nop
jge
es
add
ja
cmp
pop
cmp
jnp
hlt
push
call
sbb
push
cmp
adc
xor
pop
loope
cdq
add
cmp
js
call
repz
mov
ins
adc
icebp
or
inc
sar
inc
pop
rcl
repnz
mov
int3
jnp
iret
ret
loopne
mov
jle
and
add
push
mov
fs
movs
scas
repz
stos
in
sahf
xlat
mov
lods
and
popf
add
cmps
sub
xchg
push
fst
repnz
jnp
sbb
dec
push
pusha
dec
sbb
dec
sbb
xor
les
xor
pop
mov
sub
mov
jmp
cld
push
ins
sub
jns
sub
mov
fidivr
inc
mov
add
mov
and
loopne
sub
inc
lock
fst
pop
hlt
mov
jno
aas
fadd
(bad)
fst
mov
ins
retf
cmp
fmul
sbb
xor
xchg
jmp
cmp
lock
mov
mov
hlt
lods
or
mov
sbb
dec
sub
outs
xchg
jle
fst
adc
jecxz
sti
cwde
mov
xchg
fadd
and
pop
xchg
(bad)
inc
and
and
ror
idiv
pop
mov
pop
dec
out
mov
lock
jo
nop
cmp
or
(bad)
mov
cld
call
stos
sbb
add
cmp
mov
add
inc
rcl
cmp
xchg
movs
xlat
inc
or
fst
sbb
sti
cmc
sub
stos
xor
jle
jb
mov
mov
push
mov
dec
cmp
jno
push
and
lods
cmp
mov
sar
rcl
shl
iret
in
loop
(bad)
call
mov
or
ror
and
sub
out
cmc
cmp
leave
and
jecxz
cmp
lds
iret
clc
push
jmp
mov
imul
in
into
and
sub
xchg
sti
cld
cmp
jecxz
xchg
sub
sbb
pop
mov
and
int
jmp
ins
test
sub
and
dec
pop
inc
dec
jg
sub
ret
dec
inc
xor
lea
xlat
xor
jmp
fnstcw
scas
cmp
gs
cld
call
pop
and
in
push
inc
mov
cmp
loopne
fld
sbb
sbb
call
adc
cmp
int
pop
iret
jb
outs
inc
xor
sub
push
push
lds
xlat
imul
cmp
mov
cli
iret
xchg
daa
xor
sub
pop
jae
dec
xchg
add
xor
ret
mov
in
mov
dec
pop
imul
xor
das
ret
mov
int
ins
push
jbe
fs
jle
fistp
mov
or
sti
mov
sub
mov
pop
jl
jno
fldenv
push
xchg
xor
int3
pop
sub
cwde
sub
sub
outs
lods
mov
mov
xchg
pop
cwde
mov
and
clc
dec
mov
sub
ins
or
and
popa
out
(bad)
js
mov
mov
outs
cmp
mov
xchg
dec
add
ins
das
xor
das
sahf
dec
mov
fwait
cmp
mov
ds
jo
sbb
dec
mov
mov
inc
xor
dec
xor
mov
inc
iret
pop
push
pop
pop
add
hlt
retf
jl
iret
or
and
sbb
in
or
out
mov
popa
rep
movs
and
adc
jae
stos
cmps
shr
sub
mov
add
mov
neg
popa
jmp
add
aad
jmp
loopne
std
imul
loop
std
in
lods
mov
xchg
inc
cmp
fld
mov
test
icebp
jb
enter
lea
and
sysret
mov
jbe
pop
aaa
rol
xchg
aaa
sbb
lea
mov
dec
(bad)
retf
mov
lods
hlt
popf
add
(bad)
adc
pushf
add
inc
xor
inc
cmp
call
lahf
push
ds
mov
mov
fnstenv
xlat
stos
sbb
sbb
pop
mov
int
jmp
repz
sar
mov
in
repz
data16
fwait
jmp
mov
adc
int
or
xchg
cmp
mov
dec
mov
cs
test
sub
cmps
or
jns
dec
in
lea
test
jg
cmp
dec
les
int3
cmc
inc
mov
out
nop
mov
shr
repnz
ret
std
jl
ret
les
jb
outs
loopne
inc
pushf
lods
retf
stos
cmps
mov
mov
ins
and
out
lods
or
lea
cmps
out
mov
mov
or
mov
jno
xchg
sub
je
es
add
call
mov
dec
pop
adc
push
cld
push
add
pop
mov
sahf
fimul
out
loope
push
xchg
div
(bad)
ins
clc
dec
in
out
push
sbb
pop
int
mov
sbb
dec
adc
xchg
mov
mov
add
cmps
jp
daa
outs
aas
pushf
pop
sub
lods
repz
int3
sub
hlt
push
xchg
or
shr
jl
sub
or
xchg
add
ins
sbb
mov
mov
xor
mov
push
mov
retf
test
retf
adc
jge
(bad)
fstp
icebp
in
dec
pushf
cdq
lahf
stos
stos
fldcw
sbb
mov
in
test
inc
and
xchg
fwait
jb
les
and
cmp
xor
test
popf
inc
std
repnz
sbb
(bad)
mov
pusha
daa
in
into
test
arpl
arpl
add
mov
push
sbb
mov
mov
xor
loop
add
jmp
mov
xchg
ret
mov
jp
cmp
sbb
mov
aad
shl
lock
mov
jecxz
mov
or
ror
pusha
pusha
dec
pop
cmp
pop
pop
loope
inc
(bad)
xor
fcom
ds
in
stos
xor
jno
mov
in
push
shr
int
dec
shl
retf
cmp
dec
xor
call
in
jo
or
xchg
pop
dec
cmp
jbe
mov
inc
mov
ins
jg
aaa
adc
sbb
push
outs
js
fisttp
loope
pushf
pop
and
fisttp
jl
repz
lock
and
rdpmc
ret
mov
enter
mov
loop
lock
and
mov
test
pop
sti
dec
test
fimul
pushf
(bad)
call
pop
inc
inc
call
div
pop
sti
(bad)
jle
fadd
xor
add
cmp
mov
push
adc
sub
sub
push
clc
or
adc
repnz
jle
lods
imul
aam
(bad)
into
rcr
js
pusha
mov
push
inc
sbb
xor
cmps
repz
enter
push
neg
repz
stc
and
mov
push
mov
retf
out
call
adc
jmp
sar
xor
lods
mov
enter
and
push
ds
je
shl
pop
out
push
mov
xor
js
out
jle
lods
pop
out
scas
push
aaa
iret
les
sti
mov
pusha
fcom
(bad)
gs
inc
pop
in
cli
aaa
aam
(bad)
pop
gs
in
addr16
xchg
pop
(bad)
pop
mov
add
cld
call
jge
xchg
popf
mov
mov
lea
ret
mov
and
pop
add
xor
(bad)
fsub
scas
loope
push
push
jp
mov
outs
lods
add
adc
sub
(bad)
loope
jecxz
and
call
arpl
pop
les
pop
add
push
add
ds
imul
out
mov
add
xchg
jns
push
mov
das
adc
adc
ret
mov
movs
out
stos
ror
jmp
cmps
int
dec
adc
arpl
sahf
dec
mov
adc
addr16
dec
(bad)
stos
dec
data16
xchg
and
inc
jle
cwde
inc
jmp
scas
add
or
cld
jle
xchg
je
lea
cmp
inc
or
inc
cmp
outs
cmp
pop
jno
loop
ret
ficom
fisubr
shl
nop
pushf
push
dec
adc
xor
test
mov
pop
jmp
adc
(bad)
arpl
or
jmp
and
je
sahf
daa
in
xchg
popa
adc
(bad)
sbb
int3
xchg
xor
retf
ins
xor
hlt
(bad)
adc
dec
js
cmp
inc
sar
sar
inc
dec
lods
mov
sbb
inc
dec
add
inc
fcom
add
push
xchg
adc
imul
sub
pop
inc
xchg
inc
mov
shl
mov
lods
dec
xchg
mov
out
add
movs
push
jecxz
test
lahf
dec
jno
inc
outs
ins
push
push
sub
inc
cmps
pushf
cwde
fadd
inc
dec
call
idiv
push
dec
sub
es
xchg
and
ins
adc
into
add
lea
jb
stos
pop
jb
(bad)
stos
jno
mov
dec
repnz
or
dec
call
adc
jg
pop
xlat
out
dec
xor
sahf
ins
jmp
pop
sbb
aaa
in
loop
xchg
stc
sub
arpl
icebp
mov
add
push
loop
cli
lea
jmp
xchg
push
repnz
xlat
je
ret
add
arpl
retf
fst
jp
mov
pop
push
jge
aam
xor
inc
xor
(bad)
repnz
jo
jp
ss
(bad)
enter
movs
lods
and
fcomp
sbb
std
push
fidiv
mov
lock
cwde
xchg
data16
pusha
jmp
adc
add
inc
inc
pop
bound
ins
data16
cmp
ror
test
shl
ror
retf
mov
in
push
jmp
je
mov
lea
ds
sbb
fwait
retf
lock
pop
xchg
stos
xchg
dec
mov
mov
pop
call
in
rol
xor
into
sbb
add
mov
jnp
cdq
push
stc
adc
stos
js
xchg
xlat
in
(bad)
cld
ret
mov
mov
xlat
or
and
sbb
mov
inc
sbb
fwait
and
fnstenv
mov
mov
movs
mov
shl
fscale
pop
lods
(bad)
xchg
and
fstp
int3
ror
clc
in
cs
mov
or
sbb
pusha
sub
mov
and
or
pop
std
ins
outs
jl
xor
nop
fcmove
cmp
inc
imul
push
leave
pop
push
out
pop
rol
stos
sub
mov
popa
pop
inc
push
rol
mov
mov
mov
in
pusha
or
cmps
cmp
mov
xor
fisttp
std
cmps
xchg
push
push
fiadd
out
pop
push
inc
fld
aas
add
mov
pop
movs
mov
xor
aam
outs
mov
adc
test
scas
add
sbb
xor
rol
lods
leave
and
inc
out
out
test
call
push
sub
ins
dec
cmp
sbb
jg
push
jge
dec
cli
mov
and
ficom
push
or
push
and
imul
cmps
shr
mov
mov
xor
(bad)
push
dec
movnti
not
lock
fild
jns
popf
dec
cli
pusha
ins
loop
inc
xor
loopne
push
pop
(bad)
(bad)
lods
frstor
cmp
jg
enter
sub
push
or
sbb
mov
xlat
sahf
xchg
std
jb
in
and
xor
out
push
pusha
repz
push
jne
sub
test
rol
mov
stc
mov
xor
mov
neg
cs
imul
cmp
sbb
loop
mov
xor
repz
popa
pop
adc
lea
add
enter
imul
inc
or
imul
mov
or
int
movs
call
ror
outs
mov
cmc
dec
dec
das
cmp
adc
idiv
jmp
inc
lods
mov
sub
pop
pop
push
jl
fadd
dec
cs
xor
inc
xchg
push
xchg
ss
fucom
adc
bound
cdq
mov
push
lock
imul
adc
loop
jae
popa
outs
pop
adc
mov
ins
push
pop
cmp
in
mov
add
fwait
sub
add
pop
dec
pop
mov
add
cmp
mov
or
loop
pop
adc
jne
mov
sbb
jae
add
fdivr
mov
out
sub
cmp
mov
aam
out
lock
add
fild
mov
pop
push
dec
dec
icebp
enter
adc
dec
imul
daa
in
xor
cmp
adc
mov
das
add
and
imul
mov
sbb
adc
pop
stos
xor
pop
cld
out
mov
pop
mov
rcr
mov
call
and
ds
in
mov
adc
jae
fdivr
and
push
sub
and
inc
cmp
(bad)
out
adc
mov
mov
stos
xchg
jbe
or
xor
test
add
sub
loop
ret
cmp
hlt
in
push
xchg
dec
mov
dec
push
or
adc
bound
cmp
mov
mov
dec
leave
int3
mov
lock
in
ins
test
mov
sub
or
cmps
cmp
inc
cmp
jno
mov
retf
in
sbb
mov
sahf
lds
push
repnz
fisubr
loop
push
clc
cmp
nop
mov
xor
(bad)
(bad)
fmul
in
xchg
xchg
pop
pushf
cmp
push
out
(bad)
fisttp
ror
es
ins
imul
cmps
test
scas
ss
addr16
mov
push
pop
mov
and
ss
xchg
rcr
bnd
xlat
push
sub
mov
cmp
pop
fadd
mov
xor
mov
jnp
retf
stos
push
jb
pop
jnp
mov
and
adc
std
cmp
fcomp
div
jp
int3
lods
fidiv
nop
dec
pop
mov
xor
push
dec
loopne
cmp
repz
inc
pushf
mov
mov
adc
pop
jo
sub
jbe
xchg
mov
or
mov
cwde
lods
add
in
loop
xchg
int
jmp
dec
gs
jge
pop
(bad)
mov
add
(bad)
cmps
(bad)
fsub
pop
repnz
arpl
in
mov
ins
not
mov
mov
inc
pop
out
jb
mov
ins
scas
movs
push
jl
or
test
nop
push
jp
or
xchg
mov
(bad)
in
mov
mov
test
bound
add
cmp
popf
adc
adc
cmp
sub
cmp
mov
and
(bad)
aas
addr16
pop
and
adc
(bad)
jmp
lea
or
addr16
push
cmp
sub
jnp
mov
fs
aad
pushf
pop
sub
mov
pop
aaa
push
loopne
imul
inc
adc
adc
les
push
aad
loop
icebp
dec
(bad)
pop
or
fdivr
movs
sub
dec
movs
adc
repz
push
mov
loope
nop
test
push
mov
push
mov
movs
pop
push
mov
mov
in
sub
push
mov
bound
jo
sbb
das
or
jb
sbb
sbb
int3
fist
test
or
mov
shl
xor
call
outs
or
push
(bad)
dec
and
jae
and
aas
mov
mov
rcl
aad
outs
aaa
cmp
scas
lock
jns
repnz
adc
ins
loop
xor
xlat
loopne
jge
int
xchg
jecxz
nop
cld
cli
aas
iret
rol
test
cld
cli
xor
pop
sub
lds
xchg
and
addr16
mov
dec
dec
sbb
sub
js
and
dec
repz
js
dec
and
scas
cmp
hlt
jle
or
sub
push
adc
in
shr
jl
arpl
sti
(bad)
cdq
das
jns
inc
retf
sub
mov
mov
xchg
inc
mov
jno
mov
jmp
cmp
popa
retf
lods
inc
mov
inc
cmpps
test
and
and
ins
push
sbb
push
push
std
sub
lock
cld
sub
idiv
fs
xchg
and
out
mov
cmp
jae
jmp
pushf
arpl
ret
xchg
ret
mov
xchg
gs
repnz
test
mov
jbe
jns
mov
int3
cmp
push
jmp
inc
enter
mov
sub
in
popf
mov
ja
(bad)
(bad)
fistp
movs
pop
push
int
add
jecxz
dec
shr
adc
ds
cmc
sub
jg
lock
test
dec
stc
push
js
inc
les
mov
clc
ret
push
dec
adc
bound
cmp
add
cmps
add
movs
jmp
add
cld
data16
adc
mov
xchg
adc
sub
mov
sub
aaa
dec
ja
pop
into
push
mov
int
(bad)
repnz
sbb
push
add
inc
pushf
dec
pop
sbb
jge
repnz
ins
and
xchg
fmul
push
push
dec
jle
inc
jmp
and
(bad)
call
sub
gs
or
xor
dec
dec
loop
push
ret
and
pop
adc
xor
fisubr
or
dec
or
and
mov
neg
sahf
push
dec
lock
add
jae
idiv
xor
add
add
gs
test
inc
(bad)
push
pop
les
repz
enter
add
mov
mov
jae
jmp
sbb
cmp
stos
jno
rcr
lods
xlat
in
cmps
rcr
hlt
pop
lods
cmp
push
in
inc
xor
xchg
mov
adc
push
gs
dec
jb
add
xor
stos
jl
jg
aaa
xchg
ror
sbb
dec
and
repz
add
adc
rol
int3
daa
sbb
aaa
cmp
ret
fmul
lahf
lods
mov
or
jge
arpl
je
push
or
lods
bound
loope
fisub
fistp
jb
sbb
repnz
and
jb
jno
pushf
sub
pop
int3
cmp
and
push
cld
iret
sbb
push
je
pop
xor
push
pop
pop
ror
mov
ss
mov
inc
xor
xchg
je
or
and
sub
jg
sar
stos
stos
adc
paddw
sub
pushf
jo
shr
out
inc
ds
addr16
imul
sbb
cmp
and
mov
sbb
call
imul
rcl
out
cmp
ret
ret
loope
xor
jecxz
sbb
and
jg
jl
pushf
arpl
push
mov
xor
or
mov
mov
dec
sub
jl
xor
imul
enter
fadd
repnz
sbb
push
test
and
add
adc
lods
push
inc
mov
xchg
in
push
mov
repz
rcr
test
dec
rcr
loope
addr16
rol
add
pop
ins
add
test
mov
fsubr
mov
push
or
cmp
add
inc
pop
mov
outs
fmul
ret
push
and
push
and
fcomp
in
adc
sub
sub
or
inc
mov
fistp
daa
mov
loopne
ss
sbb
push
sub
xor
int3
dec
mov
cmps
adc
jp
inc
stos
push
int3
xchg
xor
and
inc
push
outs
ins
repz
shr
loop
retf
mov
add
sahf
icebp
mov
xor
or
xchg
jmp
dec
xlat
in
lea
das
fidiv
jb
dec
hlt
add
mov
push
aad
pop
out
(bad)
stc
cld
pcmpeqb
in
push
cld
mov
dec
mov
ds
fcomip
les
test
xor
outs
imul
lock
xor
cmp
pop
arpl
call
int
cdq
pop
int
lods
xor
sub
inc
retf
sahf
loop
and
icebp
es
push
out
mov
cld
retf
adc
push
dec
inc
sub
mov
xchg
pop
mov
pop
jb
fistp
jg
adc
xlat
and
retf
xchg
dec
rol
mov
imul
fistp
jo
into
or
xor
cli
icebp
jae
test
imul
jne
push
test
xchg
cmc
cmp
loopne
inc
adc
fwait
ret
xor
out
enter
jle
sub
cmp
fmul
inc
push
leave
xor
xchg
out
dec
not
pop
sub
and
add
add
mov
pushf
dec
data16
mov
xchg
(bad)
sub
(bad)
cmp
aas
inc
adc
cmp
sub
les
or
cmc
push
push
movs
xchg
add
and
xchg
je
pop
(bad)
in
dec
xchg
cmp
xchg
cmp
xor
cmp
xor
jo
adc
xchg
lods
outs
loopne
xchg
xchg
jmp
push
loop
cmp
mov
dec
outs
in
bound
cmp
or
dec
fwait
(bad)
jmp
rol
mov
pop
dec
retf
push
and
lahf
xchg
idiv
(bad)
and
xchg
mov
inc
imul
cmps
pop
scas
push
cmp
das
jge
xor
cmp
push
aaa
fisubr
test
xchg
das
hlt
or
inc
jbe
sub
sub
fnsave
jl
jbe
jae
push
or
jae
imul
jge
ins
dec
adc
adc
fs
xchg
dec
retf
shl
test
out
ret
sub
arpl
add
stc
mov
mov
cmc
out
sub
inc
mov
and
xchg
cmp
push
lock
mov
adc
xchg
ins
outs
bound
cmc
inc
sbb
mov
jbe
call
and
test
repnz
call
pop
adc
lahf
dec
ficomp
sbb
dec
dec
call
xlat
pop
lea
ins
inc
jge
stc
popf
cmp
js
int3
mov
fisttp
std
or
sub
test
js
add
not
loope
movs
cmp
mov
loopne
fldcw
cmp
mov
lods
popf
xchg
xor
in
jecxz
mov
or
adc
cmc
and
es
and
int
shl
sbb
cmp
push
in
fadd
clc
cmp
or
shl
add
cmp
pop
jae
xor
call
aam
icebp
loopne
ins
xchg
add
retf
int3
(bad)
mov
fidiv
dec
inc
(bad)
mov
repnz
ins
neg
mov
pop
pop
cwde
int3
sub
push
(bad)
movs
fbld
pop
in
outs
in
jno
mov
push
shr
pushf
push
retf
cmps
pop
popa
mov
ins
ror
sti
int
inc
jl
sbb
out
stc
repz
inc
push
xlat
cs
sbb
das
dec
jne
arpl
mov
cld
rcr
xchg
daa
clts
inc
ins
inc
iret
jne
(bad)
leave
popf
mov
shr
mov
jnp
mov
cli
clc
push
dec
dec
mov
jnp
jb
jno
call
ficom
mov
xor
scas
xchg
gs
cmps
pop
adc
cmp
cmc
scas
mov
pushf
or
pop
fs
pushf
repnz
push
arpl
sahf
loopne
fidivr
fadd
scas
and
mov
mov
scas
adc
jmp
sbb
in
pop
mov
and
hlt
xchg
mov
mov
mov
or
push
fnstenv
xor
jle
pop
addr16
(bad)
or
in
lods
mov
sbb
mov
or
mov
xchg
inc
jnp
sbb
push
sub
pop
ret
mov
pcmpgtw
cmovb
inc
outs
jb
not
div
dec
inc
inc
std
rol
push
cmp
pop
xchg
in
pop
xor
sbb
add
adc
stos
aam
sahf
imul
sbb
into
cmps
js
in
ins
dec
lods
(bad)
loope
add
repnz
popf
add
into
in
(bad)
retf
cmp
test
mov
cmp
dec
and
xor
pop
inc
sub
sbb
xchg
retf
xor
add
add
xlat
test
xchg
in
js
mov
sub
dec
and
jbe
and
pop
mov
mov
sub
stos
dec
xchg
int3
mov
add
cmp
dec
push
or
jbe
mov
je
pop
rol
pop
lods
pop
dec
ins
movs
sbb
xchg
and
mov
mov
out
mov
in
(bad)
pop
xchg
mov
adc
(bad)
retf
and
sbb
push
mov
retf
stos
in
and
rol
push
clc
cmp
ins
(bad)
fimul
test
mov
lods
out
inc
push
lods
inc
movs
loop
nop
es
dec
dec
add
dec
push
sbb
loopne
or
inc
mov
pusha
cmp
and
sbb
(bad)
daa
push
add
popf
stos
push
ror
mov
push
inc
push
pslld
scas
add
sbb
xchg
xor
imul
mov
aam
call
popf
push
inc
jno
enter
adc
or
xor
sti
popa
or
mov
dec
cmp
aas
and
int
jmp
imul
ss
xor
mov
mov
jl
out
mov
(bad)
push
(bad)
shl
out
out
into
test
pop
dec
call
cmp
pop
pop
and
mov
in
clc
lahf
push
mov
clc
jmp
pop
push
loop
fdivrp
jb
(bad)
int
and
jne
sub
pop
enter
push
jno
test
test
push
pusha
jnp
pop
and
cmp
rcr
ret
cli
in
add
repz
pushf
inc
mov
fs
dec
jmp
adc
aam
mov
jmp
(bad)
int3
xchg
nop
std
in
dec
in
mov
push
jbe
(bad)
les
(bad)
in
aaa
ret
push
sbb
clc
rcr
dec
int
mov
push
ret
retf
adc
pop
(bad)
lahf
sbb
sar
loop
vmaxpd
mov
inc
popa
add
clc
outs
inc
lock
sbb
adc
adc
(bad)
cmps
cmps
shl
lea
fsubr
mov
push
push
shl
int3
adc
adc
mov
dec
sub
movs
inc
imul
sub
xchg
imul
adc
mov
and
stos
cmp
fiadd
enter
nop
xchg
or
xchg
adc
xor
inc
sbb
mov
je
mov
xor
sahf
int3
repnz
aad
ret
mov
mov
adc
push
clc
imul
push
xor
int3
mov
ret
cld
inc
dec
jmp
inc
in
clc
dec
data16
ret
lods
add
clc
sub
scas
imul
call
mov
addr16
test
into
popf
out
std
out
out
dec
jmp
int
inc
in
stos
xchg
mov
cld
push
jnp
in
adc
test
mov
ds
arpl
and
retf
ins
(bad)
in
jecxz
dec
adc
jp
jb
mov
xchg
ror
std
test
cdq
cld
cld
mov
shl
rcr
jne
pop
fadd
outs
es
pop
std
mov
lods
nop
jo
movs
xor
xchg
inc
fld
pop
jbe
aas
je
or
jo
inc
sbb
mov
dec
add
loope
dec
ret
push
mov
aas
add
adc
mov
mov
int3
sub
fcom
stos
ins
test
xchg
arpl
fwait
ds
les
int
mov
pushf
neg
cmp
ins
push
mov
(bad)
mov
mov
cmp
lods
jp
test
je
test
push
adc
push
cmp
imul
and
ret
call
xor
leave
sbb
sahf
jbe
inc
fdiv
(bad)
retf
idiv
ret
sbb
dec
mov
popa
arpl
mov
xor
pop
push
dec
(bad)
cli
loopne
das
xchg
cmp
adc
scas
test
je
sbb
sub
pop
addr16
in
lods
enter
sbb
inc
mov
ss
mov
adc
cmp
stos
adc
dec
sub
das
jg
fsub
dec
add
jle
or
fmul
sub
cmc
jl
loope
sbb
xor
shl
loopne
ins
jmp
(bad)
test
sub
scas
test
cmps
add
inc
or
sbb
loope
hlt
cli
fstp
scas
mov
jl
sbb
test
or
push
xor
mov
movs
cwde
sbb
popf
cmp
xchg
mov
pop
sub
mov
mov
mov
dec
pop
lock
stos
lahf
xchg
xchg
sar
ds
mov
add
xchg
xor
rcr
add
pop
dec
loopne
or
mov
pop
mov
lods
lods
call
call
int3
adc
jecxz
sahf
adc
out
cmp
xor
jge
push
repz
add
push
cs
dec
pop
loopne
in
loope
inc
aas
pop
scas
xchg
mov
push
scas
pop
retf
shr
hlt
adc
inc
jmp
into
or
inc
cmp
xchg
sbb
sub
out
gs
out
mov
xchg
mov
ret
shl
pop
push
les
dec
fs
dec
push
sub
scas
outs
sbb
mov
std
sbb
stos
cmps
sbb
jge
lods
(bad)
xchg
or
ja
ret
add
jl
jae
idiv
dec
jmp
sbb
(bad)
in
mov
sbb
arpl
cmp
sub
sub
imul
xor
jmp
or
nop
in
retf
jmp
mul
test
popa
into
sbb
jb
jg
clc
jb
sbb
fsubr
mov
or
cmp
mov
fnstcw
movs
pop
xchg
pop
mov
pop
jnp
push
test
adc
mov
sar
jb
add
hlt
adc
dec
stc
pop
(bad)
cmc
inc
(bad)
cmp
sbb
or
mov
bound
dec
test
mov
sar
mov
jnp
jnp
xor
jnp
das
inc
pop
mov
es
jl
cmp
jb
ins
mov
rcr
mov
or
jl
rol
pushf
and
mov
dec
pop
xchg
call
pop
lahf
call
sbb
push
mov
sbb
mov
int
dec
retf
jge
(bad)
scas
mov
aas
mov
sbb
je
fcom
inc
test
int
mov
cmc
push
int3
into
mov
sbb
adc
push
push
pop
or
pushf
or
mov
shr
rcl
in
jge
iret
sbb
dec
arpl
adc
nop
sub
movs
mov
add
fcom
hlt
xor
mov
adc
loop
cmp
imul
xchg
xlat
xchg
sbb
pusha
movs
dec
pop
pop
mov
pop
inc
test
sub
cmp
lods
pop
sub
cmps
shl
mov
mov
les
cmps
inc
in
jnp
mov
shl
into
push
repz
pop
xor
in
mov
and
pop
out
loopne
test
in
jo
(bad)
arpl
iret
addr16
movs
mov
jbe
mov
sub
mul
mov
ror
pop
jmp
sbb
pop
cmovl
daa
shl
and
mov
add
jo
dec
push
out
loope
sub
sub
inc
test
je
leave
pop
cs
data16
and
mov
push
ret
pop
jp
pop
or
xchg
sbb
jmp
add
mov
pop
push
es
cmp
movs
mov
scas
and
sub
cmc
mov
fwait
sti
and
jne
stc
ins
loope
loope
add
or
and
cdq
sub
sbb
push
mov
lea
addr16
dec
out
adc
add
loope
shr
dec
in
loop
mov
and
mov
and
sub
push
rol
sbb
test
xor
mov
mov
jp
mov
inc
sub
inc
out
leave
shl
sti
push
outs
std
xchg
sar
mov
push
neg
and
jb
dec
idiv
ror
inc
and
sub
mov
mov
mov
or
dec
loopne
inc
cmp
mov
push
inc
sbb
cwde
sbb
jle
pop
aas
jle
aad
in
repnz
mov
int3
ja
cmp
and
add
inc
pop
adc
adc
xchg
sar
jb
or
leave
inc
jmp
sti
add
dec
mov
mov
xchg
jb
or
dec
sbb
fcomi
pop
inc
push
popa
xor
add
pop
adc
(bad)
(bad)
push
imul
add
or
add
into
push
pop
ror
ret
cmp
sti
in
mov
repnz
lock
push
aam
cmp
push
(bad)
add
and
inc
daa
mov
jecxz
jmp
movs
repnz
(bad)
popa
mov
(bad)
jge
sub
mov
ret
cmps
retf
jmp
mov
int
push
or
dec
(bad)
int3
push
inc
cld
adc
jl
mov
nop
imul
xor
ins
or
test
cmp
pop
mov
add
hlt
popf
mov
mov
sbb
sahf
ds
lods
adc
sub
imul
into
(bad)
retf
fsub
mov
test
fucomi
jg
dec
xchg
xchg
jns
mov
jo
in
push
pop
add
enter
dec
fisub
push
test
mov
in
ror
jge
or
mov
mov
fcmovnb
es
into
pop
mov
in
sahf
xor
loop
mov
and
int
into
or
add
fsub
into
test
sbb
imul
adc
fdivr
arpl
dec
test
inc
sar
jnp
jne
les
cs
mov
and
ins
call
stos
xchg
mov
push
ja
push
arpl
bound
or
call
lods
mov
aam
mov
cmp
add
mov
and
mul
sbb
outs
cld
jp
je
test
push
jle
xor
xchg
add
mov
cld
adc
cmp
ss
push
pop
push
bound
fidivr
and
jbe
in
jp
pop
in
movs
mov
iret
popf
fimul
mov
gs
jns
pushf
add
pop
ret
cmp
jmp
in
xor
test
jp
shl
xor
mov
add
xchg
xor
xor
and
sub
ins
mov
jp
xor
popf
xchg
add
push
xchg
jne
sbb
jne
es
into
cmp
jg
pop
add
repnz
retf
add
sbb
gs
xchg
sbb
in
(bad)
add
jp
frstor
inc
inc
in
lds
mov
ins
jne
mov
(bad)
fwait
inc
mov
sbb
mov
mov
push
(bad)
test
cld
pusha
test
sub
push
jl
movs
mov
mov
lahf
mov
dec
pop
mov
pop
or
fwait
add
jl
not
pop
fwait
mov
sbb
jnp
or
xchg
sbb
shr
pusha
nop
clc
sub
ror
lods
push
popf
lgs
mov
adc
or
cmp
fucomi
or
into
xchg
int3
cwde
imul
push
movs
daa
fs
jg
mov
and
fmul
out
test
clc
mov
xchg
mov
sub
cld
dec
fst
ins
xor
retf
pop
mov
fs
mov
adc
std
xchg
xor
popf
sbb
push
int3
bound
push
sub
popf
(bad)
stc
push
hlt
pop
mov
or
test
sub
test
je
movs
add
stc
not
mov
pop
jmp
mov
int
mov
xchg
in
stos
jae
ror
xor
and
and
mov
push
jae
loopne
stos
outs
push
push
cmc
jp
sub
mov
int
das
std
out
ret
dec
imul
mov
sub
add
sub
arpl
fimul
(bad)
push
enter
inc
xchg
data16
call
push
jne
jg
adc
shl
adc
mov
add
add
clc
dec
sbb
leave
jmp
cmp
movs
dec
adc
adc
cdq
xor
call
pop
ror
hlt
sub
aaa
imul
sub
xor
sub
ja
add
mov
ins
inc
inc
bound
imul
les
mov
mov
pop
cmc
push
bound
(bad)
pop
call
imul
bndldx
(bad)
iret
call
ins
push
sbb
fiadd
or
fmul
hlt
inc
ins
dec
mov
loop
jmp
jnp
fwait
xchg
push
sahf
jecxz
int3
inc
loopne
pop
cld
hlt
mov
cmps
je
pop
adc
inc
repnz
add
push
adc
fwait
je
push
in
pop
jl
inc
leave
mov
mov
fild
and
aad
scas
sub
mov
mov
push
mov
jmp
or
popf
shr
xor
and
or
pushf
mov
test
cmp
scas
push
fcom
xchg
in
mov
cmps
pop
lods
dec
xchg
mov
loop
mov
add
fnstcw
clc
sbb
je
jg
repz
jg
pusha
scas
and
inc
ss
popa
pop
fbstp
cmps
cs
retf
shl
sbb
cmp
adc
xlat
pop
in
dec
jae
adc
aam
inc
jo
ror
inc
cmps
and
sahf
imul
xor
bound
fwait
repz
rcr
lds
sbb
stos
test
xor
fsubr
jl
sbb
in
push
or
or
dec
test
ret
cmps
ret
in
push
mov
shl
sub
pop
cmp
mov
cmp
enter
jle
sbb
jmp
mov
popa
or
mov
ss
out
xlat
cmp
xlat
neg
cmps
mov
pop
push
ret
pop
inc
adc
push
sub
(bad)
bnd
add
inc
inc
cmp
sbb
or
or
mov
or
scas
jmp
scas
xor
sbb
in
mov
and
gs
lods
push
xor
mov
add
shr
cmc
xor
jecxz
jns
and
rep
outs
shl
and
loopne
xlat
(bad)
cs
fwait
out
stos
sbb
lahf
js
xchg
pop
bnd
retf
push
cli
ror
mov
push
fistp
cmp
(bad)
xchg
adc
in
fild
mov
xchg
cmp
in
clc
mov
mov
fsubr
xor
add
retf
ror
data16
jge
ficomp
in
mov
push
jae
daa
mov
call
js
pop
(bad)
cld
jmp
dec
les
ds
repnz
ds
mov
push
jae
and
arpl
dec
or
sub
xor
sti
js
push
jl
call
retf
(bad)
in
loop
xor
mov
stc
dec
mov
ins
jo
pop
jge
sub
arpl
adc
call
or
call
sub
jno
xchg
pushf
cs
out
and
and
push
outs
lods
push
or
leave
adc
out
ss
mov
mov
mov
xchg
mov
mov
in
cmp
cdq
jecxz
test
cmp
clc
pop
(bad)
ficomp
jb
pop
mov
pushf
pop
enter
neg
dec
cmp
mov
dec
scas
sub
pushf
stos
je
stc
cmp
dec
pop
imul
or
pop
fstp
mov
fld
in
jecxz
repz
xchg
mov
push
shl
push
loopne
sub
inc
and
ror
test
adc
scas
bound
inc
mov
js
push
sub
jecxz
pop
outs
test
out
xor
mov
jecxz
in
jbe
adc
xchg
cdq
jecxz
scas
retf
inc
imul
or
pop
sbb
lods
pop
mov
add
sbb
in
jl
(bad)
xchg
inc
or
xchg
imul
jno
ins
imul
or
jnp
lods
lock
mov
clc
rol
pop
xor
test
mov
cmps
inc
hlt
mov
clc
jecxz
cmp
movs
jb
out
pop
pop
outs
cmp
pop
and
push
jmp
lods
lds
mov
inc
or
push
or
mov
mov
fwait
mov
test
xor
stos
or
xor
sti
push
or
shl
jl
sub
out
bnd
mov
ins
jl
mov
dec
cmc
sbb
mov
out
stos
cmp
mov
(bad)
loopne
inc
mov
sbb
out
jo
ins
repz
or
shr
lahf
add
sahf
mov
pop
aaa
jo
jno
push
push
inc
dec
sub
push
ins
js
stos
sbb
ja
add
ins
aam
jge
ins
das
int3
jl
and
add
lods
fs
sbb
or
mov
cmp
mov
and
mov
stc
cmp
movs
sub
sub
lds
mov
sbb
mov
(bad)
dec
sbb
popa
outs
pusha
jle
hlt
fs
sub
in
cmp
es
push
fld
call
ja
arpl
nop
push
pop
jl
or
mov
jne
xor
or
call
call
xchg
adc
das
xor
cdq
mov
std
or
es
jecxz
scas
mov
jmp
lds
(bad)
push
daa
jns
scas
sbb
outs
bnd
fwait
xchg
scas
sub
or
pop
movs
ss
fcom
jecxz
push
repnz
mov
ja
cs
idiv
imul
fmul
push
push
push
les
add
mov
mov
ins
test
sbb
pop
push
mov
rcr
into
jae
inc
mov
sbb
lods
mov
pop
pop
mov
repz
mov
(bad)
loope
jae
shr
(bad)
push
pop
ret
mov
iret
xchg
xchg
test
std
lock
xor
push
cmps
lods
pop
imul
mov
xor
adc
(bad)
xor
pop
jmp
into
add
add
add
sub
cmp
fdivr
jmp
cdq
ret
fwait
ror
dec
mov
repnz
mov
jge
hlt
(bad)
ja
fidiv
or
test
push
cld
adc
mov
sahf
fadd
cmps
add
mov
dec
(bad)
lock
mov
push
jmp
sbb
add
jmp
loope
mov
sub
jge
movs
push
xor
sub
loopne
sbb
mov
and
repz
xor
mov
jo
add
xchg
(bad)
mov
std
idiv
jmp
adc
ds
jge
xor
bound
pop
fstp
je
jo
loop
dec
icebp
inc
rcr
mov
ins
test
sub
add
jb
mov
test
das
aaa
and
dec
(bad)
imul
outs
ror
ret
pop
push
fmul
push
cmp
(bad)
xor
fsubr
leave
rcr
outs
repnz
call
lock
lock
mov
push
dec
dec
xchg
and
imul
add
enter
jle
fnsave
push
rcr
jb
icebp
jl
or
popf
jb
push
adc
ins
mov
rcl
pop
je
push
gs
mov
in
push
into
aam
ret
dec
icebp
shl
scas
pop
shl
mov
pushf
or
adc
out
jae
adc
mov
push
dec
mov
shr
pusha
lods
or
cmp
fyl2x
xor
mov
push
test
test
lea
push
retf
test
pop
mov
daa
cmp
aam
mov
neg
movs
movs
pop
fs
mov
std
fist
inc
cmp
je
adc
pushf
inc
shl
sbb
sar
arpl
add
ins
xor
cdq
(bad)
mov
popf
test
repnz
mov
mov
jl
bnd
cmp
lea
mov
mov
ja
outs
jnp
jae
cli
jmp
(bad)
fs
sub
cwde
ficom
mov
adc
in
jae
(bad)
(bad)
mov
xchg
in
scas
or
adc
inc
dec
xor
mov
push
scas
inc
mov
rol
in
ret
repz
mov
sbb
ss
lods
clc
or
push
xor
fdiv
les
pop
mov
cmp
pop
and
icebp
push
or
xchg
mov
dec
mov
int
out
mov
mov
fucomp
inc
imul
js
jnp
xchg
jmp
std
mov
int
mov
aam
sbb
outs
mov
jb
(bad)
adc
nop
minps
popf
sbb
jg
pushf
xor
push
clc
fs
jp
jae
sbb
in
and
or
fucomp
(bad)
fimul
jnp
outs
mov
lea
adc
pop
push
and
sbb
fmul
and
cmp
pop
(bad)
mov
sub
sahf
aam
pop
inc
inc
popf
pop
push
into
idiv
rcl
jecxz
jns
xchg
jmp
test
jno
sbb
mov
aad
sub
xchg
fdivr
lea
fnstenv
push
adc
or
sbb
sbb
scas
mov
xor
(bad)
mov
xchg
sbb
cmps
bound
xor
loop
push
sub
xor
shld
cmp
push
dec
jge
in
xchg
lods
nop
mov
mov
call
sti
out
push
retf
dec
push
imul
sbb
adc
ja
rcr
sahf
push
jne
jae
nop
ret
aaa
fwait
shr
mov
or
pop
fs
push
cld
sub
mov
and
cwde
fidivr
xchg
pusha
fnstsw
inc
sbb
or
movs
xchg
pop
popa
sub
pop
aas
icebp
int3
and
mov
or
nop
sbb
fisubr
mov
and
in
pop
test
loopne
nop
mov
shl
stos
dec
scas
hlt
mov
push
imul
mov
addr16
cdq
enter
mov
jae
mul
nop
mov
sub
pop
xchg
sbb
js
retf
(bad)
and
inc
cld
pop
mov
xchg
fadd
fs
mov
push
xor
push
popf
pop
xor
cmp
fxch
clc
pop
aad
ficomp
xchg
icebp
ja
call
mov
jle
cld
and
mov
sbb
movs
mov
mov
xchg
mov
jae
cld
mov
or
lea
int3
sbb
into
mov
outs
jmp
mov
ins
(bad)
out
mov
bound
lods
cmp
aaa
xchg
pop
stos
sub
ret
xor
ret
loop
or
(bad)
outs
repz
jl
xchg
cdq
cmp
cmps
ins
mov
retf
jno
fldcw
cmp
xor
dec
ret
xchg
mov
xchg
or
ds
arpl
add
retf
sbb
movs
add
inc
sbb
adc
loop
mov
mov
or
sub
push
or
mov
int3
jmp
adc
in
fs
outs
xchg
and
stos
rcl
push
loope
hlt
pop
pop
or
cmp
idiv
ret
shl
gs
dec
mov
enter
mov
aas
mov
inc
rol
adc
mov
mov
dec
add
fst
pop
and
push
xor
jle
pop
xchg
jle
cmp
pop
push
or
imul
stc
push
fisub
adc
mov
repz
cmp
pop
mov
xor
out
jmp
jae
xor
ins
pop
xchg
into
xor
and
jns
hlt
pop
xlat
mov
rcr
dec
add
(bad)
pushf
dec
pop
pop
sbb
je
retf
dec
mov
fadd
xchg
sub
dec
adc
ins
das
inc
test
inc
pop
ret
jne
call
push
mov
xlat
and
dec
les
sub
pop
jp
inc
rcr
inc
mov
shl
sbb
xor
mov
inc
ret
dec
and
sub
mov
call
push
sbb
cmp
cld
hlt
sar
jge
hlt
jns
repz
sbb
mov
xchg
and
mov
ss
sbb
mov
jp
pop
fidivr
dec
jp
scas
xor
add
mov
ds
and
add
jmp
lahf
xor
pop
inc
jp
retf
add
push
loopne
inc
dec
push
jae
jmp
jnp
adc
rcr
arpl
xchg
jecxz
pop
ret
shr
mov
adc
push
xchg
xchg
sub
add
test
aam
and
ret
lahf
iret
jl
inc
lahf
daa
gs
push
leave
fs
(bad)
gs
xchg
dec
shr
popa
ins
in
fsubr
push
hlt
shl
xchg
pop
(bad)
push
and
(bad)
fnstcw
and
enter
arpl
inc
shl
jp
loop
inc
ret
ja
sbb
pop
sbb
inc
retf
add
sbb
or
adc
mov
push
(bad)
stc
push
in
ins
adc
xchg
cwde
xchg
adc
int3
movs
in
test
imul
mov
enter
adc
xor
cmps
outs
leave
(bad)
(bad)
add
jle
mov
pop
sbb
pop
xlat
sub
and
cmp
(bad)
int
dec
jl
mov
lods
or
mov
mov
in
mov
(bad)
or
retf
sbb
fstp
loop
inc
jne
mov
jae
fcom
xchg
or
les
sub
fs
ss
adc
and
xchg
cmp
push
fcmovne
and
not
sub
ins
xor
out
sbb
mov
sub
inc
iret
inc
(bad)
bnd
dec
and
xor
(bad)
dec
pop
sub
add
pop
sub
and
inc
add
div
pushf
mov
rcr
or
pusha
pop
xor
cmps
push
ins
jp
div
mov
mov
push
jne
or
sbb
add
add
fmul
js
mov
aaa
test
repz
icebp
adc
pop
sub
xor
cdq
xchg
cwde
retf
add
xlat
add
les
jp
xchg
push
into
xor
shl
loopne
lahf
mov
imul
inc
adc
mov
ror
lods
dec
push
mov
cs
cmps
add
fadd
sbb
dec
xor
nop
cmp
pop
outs
dec
xor
jne
mov
xor
sub
mov
sbb
jge
mov
fstp
mov
fcom
and
mov
repz
jle
mov
stc
aad
adc
(bad)
jno
xchg
dec
ja
add
xor
dec
jl
jb
ret
jae
inc
ret
adc
and
cmp
mov
fadd
mov
adc
arpl
xchg
jmp
hlt
inc
sbb
sahf
mov
sub
sub
cmp
or
xlat
jns
xor
pop
jne
int3
mov
and
sub
in
fwait
in
pushf
xchg
mov
pop
jge
add
adc
pop
add
call
xchg
inc
xchg
add
jl
and
or
inc
sbb
repnz
sar
arpl
shr
stos
dec
mov
push
dec
jbe
adc
test
daa
adc
xor
(bad)
sar
mov
sub
push
(bad)
pop
sbb
xor
mov
ins
cmp
cdq
arpl
mov
mov
stos
pop
push
cmps
ret
cmc
daa
sbb
sbb
inc
cmp
jne
test
loopne
mov
sbb
push
inc
je
jge
push
jecxz
cmps
pushf
mov
sbb
fdivr
out
stos
repz
scas
cmp
sub
adc
es
mov
mov
sub
sub
pop
or
inc
pop
adc
fistp
leave
add
ret
xchg
xor
cli
mov
jo
mov
aaa
ins
adc
inc
push
xchg
test
movs
pop
sub
jmp
pop
cld
jecxz
retf
arpl
or
repz
mov
or
xor
outs
mov
data16
daa
int3
sbb
popa
scas
sbb
push
and
jg
cmp
xor
push
dec
sub
les
cdq
sub
das
rcr
cmp
outs
jne
in
cwde
cdq
push
nop
bound
icebp
jbe
outs
mov
mov
add
and
call
add
aad
pop
daa
or
cmps
aaa
pop
dec
and
js
xchg
jno
dec
or
dec
push
inc
and
stos
xlat
rcr
es
sbb
repz
push
arpl
inc
add
push
add
pop
dec
sub
ror
ror
jmp
push
int3
fidivr
sbb
shl
xor
adc
arpl
add
ret
mov
test
pop
xchg
mov
cmp
adc
sete
xlat
pop
out
not
movs
sub
dec
xchg
adc
pop
add
pop
fs
mov
loopne
jecxz
loop
jns
imul
mov
push
mov
and
ret
cmps
mov
loop
call
stos
stos
pushf
cmp
pop
push
or
sub
jns
mov
xchg
lods
dec
jl
sti
mov
sbb
dec
ficom
xchg
push
jae
sbb
pop
sbb
mov
fucom
mov
sub
dec
cmp
nop
xor
std
dec
sbb
jmp
test
mov
fisttp
ret
cmp
sahf
lar
jl
sbb
and
int
iret
cmps
adc
sub
fcomp
sub
and
fistp
sbb
xchg
add
sbb
int3
dec
out
or
in
int3
ss
xor
pusha
xor
daa
sbb
push
mov
pop
xlat
xchg
lods
fldln2
mov
cwde
mov
mov
sbb
adc
add
jbe
or
add
xlat
pop
pop
sbb
es
lods
fsub
push
cmp
lods
ins
mov
pop
ins
jnp
add
adc
xchg
ja
mov
add
jmp
sub
mov
push
(bad)
jns
push
je
cmp
mov
push
cmp
les
ror
lods
or
aam
mov
cdq
lahf
or
and
add
add
ss
cmc
adc
dec
mov
mov
fwait
int3
mov
ss
ret
xor
(bad)
push
test
lahf
lock
mov
aad
mov
jo
jbe
add
or
push
call
xchg
mov
xchg
mov
dec
inc
push
mov
je
in
xchg
lods
cld
sahf
inc
adc
pop
sar
test
btr
mov
push
dec
add
pop
mov
sar
(bad)
outs
push
in
fidiv
jnp
push
scas
mov
repz
es
or
adc
xchg
mov
cmc
jo
cld
mov
dec
popf
mov
adc
ins
adc
dec
std
sbb
and
pop
mov
mov
fist
out
pop
sub
sbb
mov
and
in
mov
popa
dec
hlt
sti
dec
jbe
inc
and
in
or
pop
xchg
inc
lea
ins
stc
data16
adc
add
pop
(bad)
xor
adc
add
bound
arpl
mov
or
nop
sbb
sub
adc
xor
pop
pop
icebp
lods
mov
(bad)
test
into
inc
cli
dec
add
stos
mov
dec
xchg
(bad)
xor
jo
loopne
xchg
and
xchg
inc
out
adc
sbb
sbb
sbb
and
xlat
das
push
dec
jmp
cmp
sub
popf
mov
data16
sub
dec
(bad)
test
movs
and
sub
cmc
cwde
out
dec
repnz
push
in
jno
mov
sahf
shl
push
ror
dec
adc
fld
ss
push
loopne
call
lea
out
rcr
cmp
hlt
sbb
mov
lea
inc
xor
push
leave
jne
add
test
cmp
jecxz
mov
fild
sub
pusha
jg
icebp
ins
pop
pushf
push
push
dec
call
mov
cmp
lods
imul
pop
pop
adc
mov
mov
mov
push
dec
and
xor
and
das
mov
sahf
mov
(bad)
sbb
test
push
loope
fs
or
mov
jb
cmp
sbb
fstp
in
data16
or
int3
xor
cmps
jl
(bad)
ficomp
mov
xchg
lods
daa
jmp
pusha
ins
fistp
leave
mov
add
test
xor
je
test
inc
xor
loop
lea
and
fistp
xor
push
xchg
mov
mov
daa
inc
and
jo
xlat
xor
dec
push
inc
cmp
test
dec
scas
dec
js
and
mov
lea
fdiv
jecxz
ja
sbb
mov
ret
lock
dec
push
out
mov
fs
jecxz
mov
ins
js
sbb
adc
mov
pushf
dec
mov
mov
retf
cld
in
loop
lds
push
rol
sar
dec
and
xor
(bad)
les
shr
push
mov
je
shr
adc
push
cmp
ja
dec
aam
or
mov
jae
pop
mov
xor
ror
dec
xor
repnz
sti
mov
mov
pop
pop
mov
pop
jecxz
adc
gs
hlt
adc
inc
mov
add
sub
dec
ror
cmp
fdiv
jno
mov
mov
hlt
cld
out
imul
les
add
mov
jge
int3
inc
lock
mov
push
sar
hlt
in
neg
mov
mov
cld
ret
iret
adc
std
ret
or
sub
xor
sub
mov
sbb
nop
cmp
test
pop
or
jae
jg
test
sbb
cmp
nop
adc
fwait
mov
lds
popf
add
xor
xchg
clc
ins
and
int3
jb
mov
imul
lea
adc
add
imul
jge
mov
push
stos
mov
jnp
repnz
adc
ret
xchg
loopne
retf
mov
fadd
mov
mov
jno
inc
mov
invd
pop
fadd
nop
mov
aas
push
fs
mov
std
sub
jge
push
add
jmp
iret
inc
pushf
fmul
mov
mov
mov
dec
cmp
push
pop
add
int3
mov
cmp
test
sub
jl
xchg
push
and
cmp
ret
inc
pop
faddp
(bad)
mov
or
cdq
mov
mov
or
jl
push
inc
sub
mov
test
xor
push
pusha
cmc
je
lods
xchg
push
(bad)
mov
ins
out
inc
add
bound
add
push
push
stos
call
aaa
push
inc
lock
lock
jbe
mov
enter
inc
mov
bound
aas
scas
mov
lods
test
mov
dec
or
adc
mov
mov
mov
dec
into
cwde
dec
adc
xchg
cmps
mov
cmp
dec
inc
ins
sub
mov
sbb
push
int3
pop
sbb
inc
or
mov
out
clc
repnz
cmp
in
cmps
es
movzx
test
adc
mov
das
xchg
dec
push
or
sbb
fs
or
mov
jns
enter
call
adc
xchg
retf
jge
sbb
loop
and
mov
mov
rol
xchg
dec
mov
push
add
push
push
mov
in
mov
(bad)
jp
push
popf
in
and
cmc
out
fsubr
data16
xchg
adc
cmp
lods
fdiv
and
jp
icebp
dec
sub
rol
imul
jp
inc
mov
or
fimul
bound
iret
dec
test
and
scas
and
imul
ins
aad
ret
sbb
aad
dec
pop
add
mov
xchg
jl
ror
sbb
adc
jns
xchg
xchg
in
(bad)
ins
movs
mov
pop
in
or
inc
dec
or
adc
pushf
lea
push
cmc
addr16
jmp
jmp
pusha
ss
xchg
pop
stos
and
xor
dec
cmp
push
aad
xlat
movs
clc
mov
pushf
jo
mov
mov
mov
(bad)
jns
xchg
shl
jmp
jmp
jecxz
mov
frstor
outs
ja
iret
xor
addr16
ret
add
mov
ds
push
into
and
pop
sbb
pop
or
cmp
(bad)
pop
push
std
xchg
push
mov
gs
jae
xchg
and
ss
push
mov
and
mov
fdivr
out
fs
sbb
mov
repz
jmp
adc
inc
dec
sub
push
push
out
sbb
movs
repz
cmp
push
sub
ins
push
push
idiv
movs
in
sub
popa
ins
ja
add
ja
xchg
xlat
lods
movs
hlt
cmp
mov
xchg
popf
(bad)
inc
inc
jle
es
or
jecxz
je
daa
int
lods
pop
in
not
bound
or
fidivr
add
and
push
inc
dec
call
dec
mov
jle
or
repnz
mov
jb
ins
push
and
leave
clc
call
mov
icebp
jbe
add
ss
push
in
or
or
bound
pushf
or
(bad)
es
popf
nop
test
in
popf
push
out
jb
int3
or
dec
jbe
cmp
std
push
xchg
clc
sar
xchg
stos
dec
mov
std
paddusb
lods
inc
dec
and
cli
daa
out
sar
clc
sub
pop
jle
xchg
push
inc
mov
addr16
xchg
or
xor
and
out
sub
cmc
fist
ins
lock
shr
dec
xchg
cmps
movs
mov
sub
ret
add
clc
in
loop
adc
pop
sti
aad
jns
jno
adc
das
in
cmps
dec
inc
(bad)
xlat
aam
les
pop
fwait
xchg
lods
adc
lds
pop
or
dec
push
mov
je
push
jl
xchg
ss
add
shl
in
in
adc
inc
mov
cs
jmp
or
mov
sub
push
push
sbb
jecxz
fsub
mov
iret
dec
push
mov
cli
pop
push
cmp
inc
jb
sub
int
xor
add
sub
sub
ins
aad
xor
and
cwde
fsub
lea
in
inc
mov
iret
jae
sub
sbb
cld
or
mov
ins
push
in
pop
pusha
push
push
push
mov
hlt
ret
not
clc
push
lods
(bad)
push
cmp
mov
sbb
fld
xor
repnz
stc
xchg
adc
iret
pop
mov
pushf
test
sub
add
mov
das
cwde
dec
movs
lods
dec
dec
in
enter
lods
ins
stos
mov
add
pop
in
outs
out
mov
ins
push
mov
add
mov
lock
xchg
ret
lahf
ja
cmp
push
test
sub
add
lock
ret
cwde
adc
repz
jmp
add
fcomip
dec
cli
mov
dec
dec
mov
fmulp
test
iret
call
shr
test
adc
lods
cmps
xlat
push
pop
outs
jl
out
mov
ror
add
inc
cmp
mov
scas
lods
cmp
stos
cmp
int3
push
sub
or
pusha
xchg
adc
push
dec
mov
jno
dec
sbb
add
jp
and
jecxz
ret
loop
test
xchg
mov
rol
xor
ret
loopne
out
repz
repz
ja
loopne
jmp
mov
dec
retf
inc
pop
ins
arpl
loopne
test
jl
adc
fstp
sub
sub
xor
out
stc
ja
mov
jp
cdq
and
popa
out
lods
add
sbb
ficom
shl
add
lock
adc
(bad)
(bad)
cli
xor
cs
scas
jmp
sub
adc
inc
dec
cli
mov
(bad)
daa
stc
inc
fdivr
out
jne
add
shr
in
adc
test
inc
dec
repz
xchg
and
xchg
or
mov
icebp
es
and
fstp
jb
inc
lods
cmp
push
mov
mov
fild
pop
sub
stos
dec
aas
je
sahf
fmul
popf
jnp
or
jae
out
outs
push
ret
(bad)
test
add
bound
(bad)
shl
xchg
jl
cmp
pop
pop
pop
data16
jne
sub
mov
sub
fld
mov
add
push
mov
push
add
mov
dec
(bad)
jno
mov
stc
ins
add
ins
les
inc
loop
enter
std
jmp
sbb
cld
add
out
hlt
fbld
inc
in
inc
xchg
test
aad
inc
int
fnsave
fwait
sub
jo
pusha
push
pop
push
dec
cli
or
dec
push
ss
pushf
aaa
push
clc
or
test
or
dec
jno
mov
cmp
sub
ins
inc
leave
movs
xchg
jle
or
adc
mov
mov
mov
xchg
inc
mov
xchg
ror
mov
bnd
xchg
mov
push
inc
ins
inc
adc
js
bound
es
sbb
call
fwait
jg
xor
sbb
jns
bnd
adc
cmp
les
sbb
and
std
mul
ins
scas
or
es
sub
jb
popa
push
pushf
out
mov
ret
ins
icebp
jbe
(bad)
fild
loop
test
stos
fdiv
sub
add
imul
jnp
and
pop
xchg
test
push
mov
icebp
test
pusha
sub
mov
add
pop
arpl
stos
(bad)
test
arpl
jns
jmp
les
adc
mov
fisub
loopne
sub
out
dec
pop
pushf
jge
pop
pusha
push
das
xchg
cld
xchg
fidivr
mov
in
inc
dec
es
shl
js
mov
stos
cmp
mov
and
mov
mov
xchg
stos
jb
jne
push
js
in
xchg
pop
pop
int
fs
loop
div
ret
mov
and
sbb
imul
xor
mov
push
cld
jb
inc
call
ret
mov
mov
pop
mov
aaa
aaa
pushf
inc
xor
push
out
cli
mov
lea
and
pop
std
push
push
ret
aad
mov
ret
pop
cld
loope
mov
xor
cmp
add
pop
in
mov
xchg
dec
pushf
aad
add
bound
mov
mov
sbb
clc
cmps
imul
jmp
mov
and
stos
ret
or
jae
rcr
test
hlt
pop
mov
ret
leave
cmp
test
sbb
std
test
inc
pop
nop
jns
and
push
pop
je
sbb
movs
lea
add
ret
or
or
pop
push
inc
push
xor
es
mov
add
xchg
aaa
add
jns
inc
in
mov
and
adc
movs
and
lahf
mov
jge
mov
jae
cmp
call
adc
outs
(bad)
lock
fisttp
movs
jp
inc
in
inc
sbb
idiv
add
jecxz
shl
xchg
out
push
mov
loop
mov
sahf
outs
sti
pushf
mov
pop
daa
fsubp
mov
cdq
jno
jl
pop
xchg
fst
in
shl
xor
(bad)
xchg
mov
fidivr
or
add
js
cmps
sbb
rcr
retf
shl
mov
iret
pushf
xor
loop
push
outs
outs
mov
xor
hlt
ret
aaa
push
scas
fcmovnu
iret
cs
lods
or
ja
sub
add
inc
sub
in
arpl
xchg
fadd
pop
sub
adc
inc
cmp
inc
jmp
enter
into
jb
in
pushf
or
dec
add
mov
or
cmc
call
sbb
or
xchg
xchg
mov
(bad)
pushf
cli
int3
std
mov
mov
pop
adc
sub
in
in
out
repnz
mov
push
clc
sbb
cmps
data16
add
push
sub
clc
xor
arpl
push
lahf
mov
aad
cld
mov
lea
xchg
cld
adc
mov
mov
fucomp
(bad)
rol
add
and
ins
adc
sbb
or
xor
jns
xchg
mov
fsubr
data16
addr16
cld
outs
loope
sub
mov
mov
fsubr
cld
push
and
xor
pop
inc
fidiv
xchg
push
popf
xor
mov
xchg
cmp
cmp
lods
xchg
fwait
hlt
imul
std
loop
adc
pop
not
or
sbb
scas
shr
add
fmul
push
mov
push
rcl
mov
pop
fstp
movzx
ins
xor
inc
retf
repnz
loopne
jno
in
add
stos
push
mov
daa
xchg
loopne
fsubr
cmp
jns
cmp
retf
ins
push
scas
loop
xchg
test
mov
je
mov
into
mov
enter
adc
xchg
into
push
(bad)
xor
adc
pop
push
mov
popa
add
xchg
sbb
daa
rcr
mov
jno
bound
mov
les
(bad)
mov
ins
rol
mov
test
jbe
aam
push
pop
fistp
repnz
(bad)
std
xor
mov
(bad)
icebp
xchg
jnp
(bad)
mov
lea
push
sbb
mov
push
aad
in
cmp
bound
(bad)
fld
popf
xor
cmps
mov
cmp
jmp
fild
lds
dec
out
or
mov
sbb
cmp
mov
cmps
cdq
add
das
mov
fdiv
sar
cld
ins
dec
and
mov
cld
dec
out
add
cmp
inc
dec
or
retf
(bad)
sbb
mov
aaa
ret
inc
jecxz
sub
sbb
out
(bad)
je
xchg
bnd
cmp
mov
inc
jne
sub
fnstenv
pop
pop
xchg
push
cmps
inc
in
xchg
mov
push
or
xchg
sahf
cmp
fadd
fisttp
adc
ja
out
pop
test
push
bnd
jae
(bad)
push
iret
repnz
fsub
lods
popf
ins
retf
imul
nop
out
jb
mov
test
cmp
out
(bad)
fisubr
lods
std
std
mov
xchg
jp
dec
add
aam
in
rol
test
retf
bound
ret
mov
cmp
push
ins
adc
pushf
jg
(bad)
(bad)
xor
mov
xchg
or
xchg
jecxz
xchg
sbb
lods
mov
inc
bound
jmp
daa
retf
jmp
jp
loope
sbb
jns
xchg
aam
pop
mov
push
ficom
or
ret
lds
shl
test
nop
int3
xor
sbb
push
xor
mov
push
jb
jle
push
and
push
dec
mov
out
aaa
scas
jmp
idiv
or
jb
adc
jle
adc
cmp
and
xor
ja
loope
jle
cmp
pop
inc
jg
enter
ror
lahf
push
cmps
adc
lock
inc
mov
add
pop
scas
push
push
sub
pop
test
mov
mov
xor
ins
mov
pop
or
mov
mov
cld
dec
int3
mov
lods
mov
add
or
sub
push
int
or
rcl
xor
bound
je
fnsave
pop
popa
add
shr
cld
in
mov
sar
jl
pop
and
jge
pop
pop
sub
enter
test
test
mov
inc
dec
mov
pop
in
adc
sub
mov
add
xor
dec
aam
cmp
(bad)
xor
popf
dec
int3
loopne
fcomp
pop
clc
out
pushf
ja
aam
xlat
cmc
xor
push
sti
sub
mov
repz
sbb
mov
pusha
or
jb
daa
ins
loop
xchg
loop
outs
mov
add
adc
rcl
dec
or
shl
cmp
push
ror
in
scas
mov
shr
fidiv
ds
sbb
and
int3
fs
repnz
inc
pop
ret
adc
js
inc
iret
mov
or
xchg
push
mov
hlt
cli
out
cmp
mov
add
daa
pushf
in
nop
aad
jl
adc
sbb
sub
dec
(bad)
mov
or
xor
push
jnp
call
lahf
mov
xor
iret
sbb
inc
and
ret
ja
pushf
xchg
dec
sbb
push
adc
adc
shl
or
push
enter
outs
xchg
imul
imul
and
vpsrlq
pushf
or
jmp
hlt
adc
lock
daa
movs
fstp
(bad)
(bad)
and
mov
cmp
mul
aas
scas
(bad)
pushf
lock
jmp
dec
push
push
(bad)
js
cmp
jle
and
push
mov
dec
fcom
test
(bad)
pop
rol
jmp
xor
cmp
jno
dec
leave
test
clc
lods
in
out
cmp
dec
pop
gs
sub
adc
dec
hlt
rcl
mov
push
jmp
jp
sub
hlt
mov
or
and
adc
push
outs
lahf
add
mov
xchg
mov
push
pop
mov
fstp
lea
jmp
fcomp
pusha
iret
dec
push
jge
pop
and
add
cli
enter
std
cli
lea
mov
out
cmp
cmps
cli
push
add
in
cmc
fucomp
mov
lahf
xchg
nop
rcl
scas
cmc
jb
pusha
dec
sbb
inc
scas
adc
shl
jl
push
ins
sbb
mov
into
inc
jle
outs
mov
pop
ja
in
mov
mov
adc
pop
in
mov
dec
pushf
push
push
jge
adc
aaa
jge
mov
bnd
jns
mov
pop
scas
popa
inc
jo
and
and
xchg
mov
and
and
in
mov
pushf
mov
push
inc
add
add
cwde
jae
jmp
cs
arpl
push
int
cmp
out
or
test
sbb
adc
push
pop
pop
lods
cld
cmp
inc
add
and
dec
sbb
(bad)
loop
mov
ins
mov
push
dec
xor
fisubr
and
adc
ins
mov
sub
outs
xchg
cmp
es
pop
int3
mov
cld
adc
push
pushf
mov
pop
bnd
or
pop
adc
push
pusha
leave
dec
pop
xchg
sub
mov
cmps
mov
fs
push
mov
xor
cmp
adc
mov
pop
xchg
dec
les
push
jno
cmp
mov
mov
push
sub
nop
int3
sbb
add
arpl
xchg
pushf
xchg
sub
outs
jmp
shr
jmp
jle
sub
pop
ffreep
inc
sbb
push
cmp
int3
ins
cmp
shl
pusha
int
scas
pusha
sub
mov
pop
lods
call
jnp
sbb
mov
ds
loopne
jns
rcl
jp
enter
pop
add
ds
xor
inc
xchg
retf
stos
sub
jge
into
mov
xor
mov
int
pop
cmp
out
rol
popa
jnp
int3
adc
mov
out
or
jl
pushf
fs
aaa
sub
lea
dec
leave
pop
cmp
(bad)
idiv
dec
bound
clc
sahf
push
mov
jl
sbb
inc
(bad)
pop
repnz
ret
mov
sub
xchg
add
dec
out
retf
cli
dec
clc
xchg
call
stos
xchg
pop
push
sub
inc
ret
xor
inc
mov
sar
test
xlat
repnz
push
and
call
push
call
cmp
mov
fdivp
ss
in
sub
or
js
ins
mov
fisub
pop
mov
mov
mov
jmp
aas
dec
sub
cmps
sbb
enter
aam
mov
or
sub
mov
jp
rdpmc
les
cld
bnd
popf
jbe
pop
std
pusha
push
inc
jle
jmp
ins
push
and
or
neg
popf
add
(bad)
aam
cmps
mov
add
and
cwde
or
into
outs
fld
mov
call
dec
push
push
xor
lea
aam
sbb
int
pop
add
mov
mov
pushf
push
jge
rcl
pop
div
jp
in
xchg
xchg
add
xor
jl
xor
fwait
fs
shl
arpl
add
mov
mov
dec
loopne
jb
mov
mov
je
push
adc
or
pop
fmul
lods
arpl
rcl
ins
jl
and
(bad)
lock
addr16
mov
arpl
mov
test
div
sbb
dec
and
cs
sahf
xchg
mov
pop
mov
clc
jne
jge
cmps
xchg
mov
call
dec
cmp
sbb
cwde
js
inc
mov
daa
jbe
jmp
push
mov
in
adc
arpl
out
jmp
mov
cmp
jle
ins
jle
repz
add
mov
add
div
mov
clc
shl
jle
sub
mov
xor
push
into
ficomp
fild
nop
cli
cs
out
xor
inc
mov
mov
rcr
sub
xchg
and
lea
and
sbb
je
pop
jb
(bad)
mov
mov
in
call
sub
dec
sbb
xchg
popf
add
adc
jecxz
repz
cmps
mov
pop
push
test
int
sbb
adc
dec
mov
cmp
ret
push
pop
dec
lea
jg
or
stos
jmp
and
lea
cmc
jne
dec
cwde
and
push
iret
aam
and
movs
or
push
mov
mov
inc
xor
or
jge
sub
dec
aaa
pop
(bad)
ret
das
fsub
js
xor
test
ds
adc
dec
ds
xchg
stos
pop
and
inc
push
ror
jle
fdivp
js
cmp
rol
dec
sub
cmp
or
std
out
inc
scas
movs
cmp
cmp
cmp
dec
ja
pop
jmp
lods
inc
sub
dec
daa
push
rol
lods
mov
ror
add
pop
jbe
(bad)
popa
fdiv
fwait
cmp
dec
shr
rol
cdq
adc
inc
adc
xlat
scas
mov
mov
ret
jbe
ficom
inc
inc
scas
pop
xchg
inc
out
daa
pop
inc
inc
and
pushw
xor
jb
popa
int3
add
imul
adc
fidivr
inc
inc
fnsave
xchg
bound
xor
xor
sub
test
mov
out
inc
mov
ret
jnp
or
adc
xor
sub
std
das
push
lods
fst
pop
lahf
scas
in
lea
pop
inc
push
sbb
imul
das
(bad)
sub
cmp
ror
ins
pop
xor
sub
(bad)
and
aam
ins
fiadd
pop
fstp
gs
and
jp
adc
or
mov
add
jo
fisub
jp
fwait
xchg
fcomp
dec
cmp
adc
push
add
xchg
scas
xchg
or
sub
adc
xor
xor
jmp
add
cmp
inc
stos
lock
test
or
popf
mov
dec
mov
in
sub
xor
je
and
ret
lds
in
push
or
add
mov
and
xchg
cdq
sub
mov
sbb
dec
xchg
pop
ret
(bad)
xlat
dec
add
daa
jo
rcr
mov
adc
adc
sbb
sbb
cmp
or
imul
jbe
inc
cmp
dec
push
or
ror
iret
mov
imul
sbb
pop
inc
scas
pop
movs
in
inc
push
ss
mov
sub
imul
imul
sub
xchg
mov
out
dec
cld
frstor
xchg
dec
outs
cmp
jno
mov
or
mov
ins
adc
pop
push
out
xchg
ret
or
jae
push
sbb
test
cmps
(bad)
rcr
xchg
jo
jno
xchg
test
loop
mov
jge
inc
js
xor
push
jmp
loop
test
ins
mov
rcr
jg
hlt
in
(bad)
(bad)
or
mov
mov
imul
cmp
mov
lods
sub
dec
sbb
adc
sar
sbb
cld
jae
int3
mov
cmp
sbb
jns
enter
into
jge
xor
cmp
push
cli
shl
pop
mov
cld
out
arpl
sbb
dec
sbb
and
lods
add
push
sbb
adc
and
mov
pop
push
cld
jecxz
ja
arpl
jmp
mov
mov
retf
sbb
and
mov
mov
adc
leave
adc
je
mov
popf
xchg
cmp
sub
push
or
cmp
sbb
movs
rol
cwde
add
mov
pop
loopne
je
cli
inc
xchg
and
mov
mov
jae
fyl2xp1
jecxz
mov
mov
sbb
push
pusha
inc
add
push
add
and
sbb
mov
xchg
lahf
sar
rcl
jp
cmp
mov
sub
imul
loopne
cmp
xor
cmps
dec
(bad)
push
ds
data16
sar
sub
sbb
dec
or
xchg
stc
mov
out
pop
test
js
cmp
xor
addr16
and
das
ja
push
pusha
jmp
jnp
cmc
mov
add
pop
jnp
push
push
ins
sbb
fadd
stos
push
jecxz
or
push
icebp
outs
adc
or
ins
idiv
cmp
jp
je
(bad)
out
mov
xchg
xchg
rcr
cmps
das
push
sbb
push
push
dec
push
mov
push
push
dec
je
arpl
jp
xchg
xor
je
mov
daa
das
fistp
push
mov
bnd
fmul
retf
jns
icebp
jb
pop
fst
push
mov
daa
fs
ins
mov
inc
xchg
ins
xor
scas
and
ins
in
retf
and
cmc
and
bnd
jl
sub
nop
and
mov
int3
xchg
popfw
sub
push
adc
imul
cs
jns
inc
shl
rcr
out
repnz
(bad)
adc
fstp
mov
rol
pop
daa
jmp
(bad)
cwde
dec
lods
sub
mov
and
in
push
ret
mov
cwde
(bad)
cmc
jcxz
jg
sbb
mov
test
in
sub
and
cdq
add
xor
mov
xchg
test
mov
(bad)
hlt
hlt
arpl
add
out
daa
cld
shl
adc
cmps
ror
jle
std
movs
fild
lahf
push
xchg
xchg
sbb
int
pop
inc
pop
add
cmp
jb
jmp
push
jmp
mov
cmp
(bad)
jmp
add
jmp
stc
and
and
cmp
movs
ror
push
mov
jl
lea
cld
sbb
repz
or
lahf
xor
or
mov
pop
loop
jbe
add
add
fbstp
mov
fadd
fmul
pop
adc
lahf
cld
sbb
cmp
inc
and
fisubr
iret
xchg
enter
lea
cmp
neg
pop
or
test
fs
(bad)
clc
pop
popf
aad
out
xor
jle
and
pop
pop
fdivr
into
inc
push
loop
push
pop
shl
ret
(bad)
xchg
add
xlat
xchg
in
sbb
pop
mov
add
out
rol
fmul
push
inc
lods
sbb
mov
mov
sub
lahf
pop
sbb
jecxz
mov
xor
mov
pop
sahf
int
push
lods
xor
fnstsw
or
ror
es
mov
fmul
rcr
lods
cmp
bound
or
ins
and
ret
adc
in
push
xor
mul
data16
loope
mov
cmp
sbb
lea
aas
pushf
int3
adc
lods
mov
xor
int
add
retf
arpl
outs
cwde
pop
xor
and
mov
loope
jmp
pop
and
cmps
xchg
push
lea
mov
jg
call
(bad)
push
xchg
adc
mov
pop
pop
push
or
xlat
push
mov
add
mov
jae
aad
mov
lods
pop
(bad)
pop
not
aaa
pop
mov
popf
dec
inc
fdiv
(bad)
in
cdq
cdq
or
sub
jno
cmp
cmp
adc
sbb
add
mov
inc
mov
addr16
test
sbb
sub
fdivr
lods
sub
xor
aam
(bad)
imul
lods
xor
mov
stc
arpl
inc
push
push
sbb
or
push
and
pop
shr
fdiv
mov
sbb
in
lods
or
ins
pusha
add
lahf
add
jl
pop
push
rol
loopne
cmp
pop
sahf
jae
cwde
jg
mov
sub
jnp
pop
jae
inc
(bad)
test
(bad)
imul
inc
or
bound
popf
inc
push
nop
jno
test
xor
sti
inc
fs
cmp
xor
mov
int
inc
sti
mov
adc
ins
xchg
test
jge
push
inc
xchg
adc
dec
rcl
or
add
ret
sbb
fadd
es
ror
mov
xor
loop
push
mov
add
and
clc
(bad)
or
inc
xchg
aas
imul
jecxz
xchg
in
les
aad
jb
adc
or
enter
add
push
sbb
js
sbb
push
xchg
mov
sahf
xlat
sahf
mov
adc
dec
jge
sbb
push
fwait
xor
cmps
sbb
jecxz
loopne
mov
xchg
inc
out
push
cmc
and
or
pop
cmp
xor
fsub
loopne
mov
mov
cmp
jge
lea
hlt
xor
mov
pop
aam
push
mov
ds
sbb
cmp
in
dec
ins
lock
jge
xor
adc
popf
loopne
add
mov
add
push
push
mov
cwde
stc
out
dec
scas
mov
popf
mov
aaa
mov
sub
loopne
jle
or
addr16
and
inc
push
cmp
lds
data16
(bad)
mov
xchg
or
ds
sub
xor
push
xchg
add
cmp
test
repnz
adc
push
cmps
movs
ins
mov
lods
push
cmp
ficom
or
dec
cmp
enter
mov
movntq
dec
pop
mov
add
aad
sub
xchg
cmp
sti
enter
retf
sub
cli
push
call
(bad)
mov
push
clc
mov
rcr
jge
addr16
hlt
xchg
movs
(bad)
xchg
inc
das
pop
dec
ret
out
adc
lock
imul
mov
xchg
jno
adc
jmp
sub
shl
mov
rcl
mov
mov
dec
loope
out
(bad)
or
sub
xor
(bad)
scas
in
adc
fs
mov
push
dec
sti
ins
inc
cli
ja
fidiv
daa
xor
into
outs
sub
mov
ins
outs
push
mov
imul
adc
xchg
and
test
push
call
jmp
push
mov
mov
in
sbb
shl
add
inc
fcmovne
inc
inc
push
dec
inc
sti
mov
stos
aam
add
int3
sar
movs
std
popf
cwde
and
mov
mov
fadd
daa
sub
xchg
aam
scas
out
rcl
shr
hlt
push
jns
xchg
mov
xchg
cmp
js
pop
repnz
jb
xchg
test
outs
jbe
cmp
bound
mov
ror
stos
sub
mov
out
inc
sbb
and
in
mov
mov
std
cmp
mov
mov
cmp
(bad)
out
std
mov
test
test
(bad)
mov
jno
ins
mov
lods
inc
dec
loopne
hlt
ins
sub
xchg
inc
test
lock
or
retf
push
mov
or
sbb
xchg
ds
mov
sub
or
pop
add
mov
ret
pop
xor
arpl
mov
sub
mov
cmp
push
or
xchg
xor
mov
jle
and
out
and
jl
or
add
xchg
push
nop
sub
dec
and
push
xor
adc
dec
fild
in
push
int3
xchg
inc
lahf
loop
das
adc
push
das
popa
retf
sbb
or
neg
jmp
mov
pop
shr
dec
inc
cmp
loop
xor
pop
xor
push
test
mov
ret
pop
fcomp
sbb
(bad)
cmp
(bad)
sbb
lods
retf
push
fistp
jecxz
mov
or
jmp
mov
mov
sub
(bad)
std
push
xor
dec
and
inc
lods
popf
jb
fld
xchg
sbb
mov
popa
mov
call
mov
and
push
nop
push
mov
fild
mov
sbb
rcl
cld
pop
imul
inc
fdivr
js
adc
or
loop
enter
inc
push
jg
cmps
call
lods
xlat
adc
push
lea
sti
fs
jle
sbb
pushf
jp
add
out
in
out
in
or
adc
fisttp
or
shl
add
or
mov
and
cmc
xor
inc
movs
sub
and
stc
fldenv
or
popf
or
add
js
sbb
pop
xchg
lahf
sahf
adc
xor
rcl
mov
js
xchg
push
push
and
jp
data16
xchg
gs
test
hlt
into
jge
jnp
add
pop
jno
xor
or
adc
call
sar
(bad)
ins
push
mov
pushf
sbb
mov
lods
xlat
mov
ins
sub
and
mov
jle
mov
cmp
lea
(bad)
ins
pushf
adc
sub
cmp
lods
jmp
jmp
dec
adc
cld
jno
mov
xor
dec
fcomp
out
lea
fcom
or
dec
push
jnp
jae
xchg
into
cmp
das
cmp
mov
pop
inc
retf
mov
out
test
and
sbb
push
loop
inc
push
pop
(bad)
aam
cmps
mov
sti
arpl
lods
(bad)
ins
repnz
lea
mov
dec
mov
fdivr
int3
test
add
or
fs
xor
add
sub
(bad)
in
ret
das
call
mov
lahf
cmc
ror
mov
inc
sub
xchg
dec
test
mov
lods
fwait
into
loope
ror
mov
mov
push
sbb
pop
outs
mov
inc
sbb
sub
ret
or
dec
inc
jmp
rcr
clc
daa
aaa
lods
jmp
fstp
test
iret
ror
int
or
dec
sar
sti
mov
outs
sti
pop
(bad)
sub
add
int
mov
sbb
mov
movs
enter
inc
in
cld
cmp
push
adc
sub
pushw
sbb
mov
rcr
jns
mov
cmp
sbb
sub
stc
or
movs
test
fld
hlt
add
jo
fmul
xchg
mov
mov
bound
inc
push
dec
pop
mov
sub
push
push
xchg
mov
adc
pop
fstp
(bad)
pushf
icebp
pop
and
imul
or
inc
jg
js
jmp
pop
or
mov
ret
mov
or
arpl
das
pushf
pop
cmp
test
retf
stc
and
mov
sub
adc
add
fldlg2
sub
cmp
sti
ds
(bad)
sbb
rcr
sub
mov
pop
repnz
test
mov
std
fs
pusha
pop
inc
pop
xor
dec
fisttp
adc
sub
mov
std
sbb
bound
ret
jo
push
cmps
stos
into
push
adc
lea
mov
pop
jmp
xchg
and
xchg
jo
or
outs
cmp
dec
lahf
es
add
inc
cmc
loop
push
clc
rcl
cs
jbe
xchg
outs
cmp
sub
xor
rcr
aad
sahf
cmp
mov
sbb
push
fistp
pop
add
push
rcr
out
add
and
stos
inc
sbb
sub
out
cwde
and
and
outs
mov
mov
pusha
outs
push
lea
imul
or
bswap
retf
xchg
adc
cmps
lods
xchg
inc
pop
jg
or
pop
(bad)
jae
or
mov
pop
dec
arpl
movs
and
ins
pop
fsubr
cld
ins
dec
or
adc
sbb
adc
pop
and
popf
loop
and
idiv
ret
jecxz
cli
mov
pop
aam
lock
sahf
fs
(bad)
xchg
int3
add
mov
and
xor
add
or
mov
sbb
mov
ins
loope
jb
push
punpckhbw
ja
test
mov
xchg
mov
xor
test
sub
mul
mov
(bad)
shr
retf
push
adc
into
shl
loope
mov
jne
dec
push
loop
ins
(bad)
out
jae
call
ja
jb
loop
push
jmp
cmp
pop
out
or
adc
int3
es
xchg
mov
stos
movs
dec
call
push
jb
dec
int3
leave
leave
in
rol
lea
cmps
sub
fwait
mov
out
idiv
jb
das
pop
ins
mov
and
cmp
in
fcomp
xlat
cmps
xchg
xchg
adc
stos
dec
cld
ret
pusha
jecxz
jmp
push
adc
nop
cmp
sub
jmp
pop
xchg
inc
sub
xor
pop
test
jmp
mov
jmp
hlt
(bad)
jo
rcl
add
inc
and
xchg
push
movs
lahf
sbb
inc
sub
lods
xchg
cli
fcmovu
shl
sahf
mov
clc
repz
xchg
jns
pop
dec
ja
push
enter
lahf
pop
cmp
lods
mov
std
mov
(bad)
fadd
lods
cmp
pusha
ret
das
cs
test
or
cmp
and
fdivr
xchg
shl
nop
add
enter
cmp
inc
rol
je
fstp
into
mov
test
imul
mov
mov
push
sar
or
popf
aam
ds
cmp
movs
ret
outs
push
rol
dec
xor
mov
and
cmp
out
loopne
stos
movntq
mov
pop
imul
sub
out
cmp
cmp
jecxz
fisub
or
jbe
adc
mov
xor
rol
scas
gs
push
lods
sub
loope
xchg
jge
xchg
mov
repnz
(bad)
jl
mov
sbb
lahf
inc
push
cmp
rol
pop
adc
inc
mov
push
xor
(bad)
loopne
mov
sbb
mov
clc
leave
cmp
(bad)
sbb
mov
cmp
cmp
push
jl
(bad)
xlat
push
fsub
sbb
sbb
mov
or
pop
pop
cmp
and
pushf
mov
(bad)
fadd
and
dec
icebp
je
sbb
add
pop
push
in
adc
into
sbb
mov
push
mov
out
std
sub
mov
push
xor
mov
sub
lods
int3
stos
push
es
scas
test
pop
movs
sbb
(bad)
std
outs
and
xchg
popf
or
cmp
shl
out
std
xor
enter
mov
dec
fidivr
div
clc
sub
and
and
inc
fsub
ins
pop
fs
loope
sti
cmp
popa
stos
pushf
out
mov
pop
push
fwait
dec
scas
mov
pusha
rol
inc
or
or
pushf
repnz
pop
jns
adc
gs
pop
scas
gs
push
ret
push
cmps
mov
loope
shl
aaa
outs
mov
inc
push
pusha
stos
popa
mov
xor
and
hlt
test
(bad)
popa
inc
aam
je
push
adc
push
xor
cmp
pop
dec
in
leave
jp
mov
mov
push
sub
ret
pop
or
xchg
mov
cmc
sbb
das
pop
jmp
in
ror
jns
es
sub
fdiv
xor
push
pop
and
loop
xor
rcr
sbb
ds
add
mov
rol
and
out
or
fadd
das
int
adc
lea
push
out
sub
ins
or
mov
mov
pop
call
or
or
sbb
mov
pusha
add
fadd
and
xor
xchg
jmp
xchg
jle
fadd
cmp
out
es
inc
test
push
or
int3
add
mov
movs
loopne
inc
jns
dec
xor
mov
sbb
test
daa
aas
aad
(bad)
jecxz
push
out
jnp
aam
add
cmps
hlt
push
jmp
and
dec
test
cmps
fs
push
imul
int
in
or
jge
ds
fsubr
cmc
and
pusha
cdq
jbe
mov
pop
sbb
or
ins
mov
fimul
aas
(bad)
loop
jb
addr16
push
push
outs
push
shl
ret
mov
aam
into
std
xchg
pushf
add
jns
mov
cmp
mov
sbb
popf
push
pusha
push
xchg
pop
fstp
xchg
cwde
addr16
rcr
jb
rcr
or
dec
push
push
cs
fisttp
mov
push
in
lods
shl
push
sub
ds
cmp
test
jmp
sub
mov
fild
sbb
or
loopne
add
ror
bound
mov
sub
rcr
adc
outs
push
cli
jae
call
sti
dec
into
mov
call
lods
(bad)
and
push
adc
add
sbb
jnp
lock
add
mov
and
jecxz
or
lea
push
in
push
cmc
mov
inc
mov
or
int3
ror
mov
sbb
stos
and
lods
pushf
sbb
arpl
out
loope
jp
jmp
pop
cld
mov
jmp
inc
cli
sar
dec
test
sub
and
dec
mov
push
push
and
sar
sbb
xchg
push
xchg
retf
jmp
and
sahf
push
mov
add
nop
call
out
or
les
adc
add
sub
jae
add
mov
dec
jbe
sbb
retf
add
sub
fild
mov
out
sub
(bad)
fcom
test
out
mov
push
and
les
shr
je
inc
and
xor
cmp
sar
add
rcl
int3
cmp
lods
mov
xor
cs
push
mov
mov
xchg
inc
outs
sbb
or
jmp
scas
repnz
jo
add
sbb
jbe
jp
bound
mov
std
xor
mov
mov
in
loope
cli
cmp
sbb
in
xchg
nop
mov
or
dec
(bad)
sbb
mov
jle
cwde
add
push
mov
shr
sbb
in
pop
inc
push
cmc
push
dec
xor
lock
jl
repnz
dec
inc
sub
and
and
fbld
lock
cld
out
retf
test
shl
jb
inc
sub
in
lock
jo
scas
bnd
ds
shl
fidiv
jnp
out
jl
dec
or
xchg
jmp
(bad)
in
adc
bnd
jg
popa
shl
fadd
jecxz
ret
das
ror
and
dec
call
sbb
inc
(bad)
aas
repz
adc
mov
push
mov
test
std
fiadd
inc
rcr
fs
mov
xchg
dec
sub
pop
nop
xor
jmp
fsubr
xor
test
sti
sti
das
mov
addr16
adc
movs
add
adc
push
dec
cs
ret
dec
add
mul
stos
sbb
popa
scas
mov
adc
(bad)
xchg
push
loope
xor
lods
adc
xor
fstp
inc
dec
inc
cwde
pusha
cli
cmp
cmps
fwait
add
retf
inc
sbb
in
add
inc
cwde
mov
jmp
or
xchg
mov
mov
mov
or
fiadd
int3
fwait
icebp
out
pop
pop
loopne
ror
cmp
pop
mov
mov
js
cmc
and
mov
fldl2e
pop
or
or
push
test
xor
push
pop
cwde
pop
cmp
ds
ret
jle
xchg
pusha
out
data16
lock
mov
leave
icebp
jb
popf
push
jg
push
mov
sbb
scas
cli
sub
pop
xchg
xchg
sbb
leave
pop
and
push
jmp
sub
sbb
loop
(bad)
and
or
shr
mov
jge
dec
jns
icebp
pop
sbb
test
stc
repz
retf
mov
repnz
add
imul
adc
aas
and
and
inc
jno
add
dec
mov
fucomp
push
out
pop
mov
mov
jp
sub
push
and
jo
xor
xchg
clc
lds
and
test
ins
sub
and
neg
(bad)
dec
pop
int3
mov
cli
je
xor
xchg
repz
mov
jnp
lods
pop
jbe
iret
(bad)
faddp
cli
js
adc
add
jecxz
cmp
outs
aam
add
js
and
int
pop
imul
and
push
test
jmp
mov
adc
out
mov
sub
test
sbb
push
xor
add
loop
daa
dec
pop
stc
fwait
outs
out
sub
(bad)
mov
inc
mov
pushf
xlat
data16
test
aam
jmp
adc
mov
loope
js
jmp
adc
(bad)
push
ror
and
dec
loop
lods
fst
ds
ds
xor
pop
xchg
sub
out
and
pop
sub
retf
mov
mov
inc
mov
popf
les
cmps
(bad)
in
add
sub
outs
in
sbb
mov
add
nop
les
loopne
outs
push
sbb
rol
ss
inc
ss
jl
in
daa
in
xchg
pop
stos
lock
push
sbb
movs
mov
inc
inc
mov
mov
xor
lahf
jmp
into
pop
icebp
pop
add
int3
inc
dec
mov
mov
ret
mov
xor
pop
(bad)
loop
frstor
add
jbe
popa
jle
push
adc
and
jle
cmp
xor
addr16
sahf
xchg
mov
iret
sbb
das
inc
sar
ret
mov
(bad)
xor
cmp
ss
lock
xchg
pop
std
xor
or
in
out
out
jle
or
imul
cmp
xchg
arpl
sbb
lock
push
rcl
mov
sbb
inc
adc
sbb
dec
xor
xor
jle
or
in
rcr
(bad)
into
shl
inc
sbb
mov
inc
dec
xor
add
cmp
fucomip
pop
ins
jbe
mov
fild
mov
jae
repz
in
daa
loope
sahf
sti
xor
push
xchg
xchg
xchg
mov
dec
dec
in
mov
mov
pushf
imul
xchg
rcr
out
in
ret
sbb
mov
cmc
mov
repz
inc
inc
push
lea
sbb
stos
cmp
inc
dec
jge
ins
mov
mov
idiv
mov
sub
ss
sbb
adc
or
sbb
xor
test
je
loop
jmp
cmp
adc
xor
xor
xor
mov
addr16
pop
call
stos
stc
fcmovb
pusha
mov
ret
clc
and
out
cli
push
leave
scas
dec
jge
mov
mov
das
xchg
or
rcr
in
std
repnz
xor
xchg
int3
mov
pop
pop
ins
outs
sub
mov
xchg
or
aaa
cld
dec
popf
shr
sahf
stos
cmps
outs
mov
adc
cmp
pop
xchg
fld
je
mov
scas
or
ficomp
sub
ins
xor
add
sbb
rcr
add
ret
cmp
cmp
cmp
jmp
dec
jmp
ds
shr
das
xchg
gs
jo
mov
jecxz
and
sub
jmp
out
sub
mov
push
dec
pop
pop
mov
inc
sbb
or
fsubr
rol
shl
mov
repnz
xlat
cmp
or
jle
mov
mov
jle
(bad)
repz
out
jecxz
or
cli
cmp
(bad)
cld
pusha
out
out
test
bnd
adc
xor
dec
dec
shr
adc
repnz
or
retf
xor
jle
inc
xor
dec
adc
adc
(bad)
fcom
data16
xchg
mov
pop
(bad)
sbb
ss
add
push
popaw
(bad)
cmp
push
loop
add
es
hlt
or
ds
xchg
mov
outs
pop
inc
push
loop
inc
(bad)
(bad)
mov
adc
adc
mov
mov
arpl
cmc
add
adc
sub
push
scas
test
jl
jmp
mov
sbb
xchg
inc
ret
pushf
test
mov
inc
aas
movs
push
xchg
shl
mov
pop
stos
leave
mov
cmps
cmp
inc
ins
jo
aaa
and
ja
inc
sub
and
stos
adc
or
aaa
into
fcom
mov
bound
pop
ja
sub
jl
inc
dec
inc
ret
ret
cmp
or
lods
mov
inc
lods
scas
or
fadd
xor
cmp
icebp
(bad)
adc
in
div
mov
pop
mov
arpl
cld
dec
outs
leave
into
or
mov
jne
push
ins
and
cmp
pusha
adc
inc
ficomp
shl
mov
mov
in
jg
aas
in
mov
sub
cmp
cmp
xor
push
mov
xchg
xor
cld
out
fwait
add
dec
xchg
sar
int3
rcl
sbb
arpl
ja
cmp
clc
repnz
repz
mov
sub
jg
hlt
push
jno
rol
xchg
loop
add
scas
lea
push
bound
inc
jno
in
cwde
xor
pusha
out
jecxz
jno
mov
clc
xchg
add
lods
out
sbb
(bad)
mov
out
aaa
and
dec
and
add
xor
jl
jbe
(bad)
mov
sub
jg
mov
int
jl
sub
jbe
jnp
add
push
jg
aaa
inc
ins
scas
mov
mov
sbb
adc
sbb
retf
mov
xor
mov
xchg
xchg
fadd
mov
das
adc
dec
dec
sbb
push
das
repnz
sub
(bad)
fdivrp
adc
or
mov
mov
mov
jne
mov
add
faddp
mov
xchg
and
icebp
sbb
aaa
fcom
aaa
bound
inc
xor
jle
and
ss
ret
cs
(bad)
lea
mov
mov
rcl
ret
in
jae
pushf
icebp
sar
mov
out
sar
sub
mov
or
push
or
jnp
lock
fldenv
fadd
and
xchg
pushf
neg
sub
xchg
add
dec
cwde
cli
fisttp
mov
inc
cli
repnz
je
sbb
push
xchg
cmpxchg
xor
pusha
hlt
shr
mov
adc
push
call
mov
lahf
add
push
sub
mov
push
cmp
inc
cmp
int3
or
popf
jb
repnz
mov
scas
dec
iret
xchg
mov
adc
rcl
call
lods
scas
mov
mov
mov
rol
cwde
repnz
js
sub
pushf
loop
jb
movs
and
xchg
mov
mov
ret
mov
daa
jmp
repz
scas
das
push
add
shr
mov
mov
cmp
dec
outs
sub
ret
aam
ds
push
mov
jne
lahf
lahf
dec
outs
add
bound
mov
add
iret
jo
adc
sbb
xor
aas
jp
push
sar
icebp
mov
jg
mov
or
cmp
int
fadd
(bad)
gs
mov
push
pushf
retf
mov
jbe
lods
jne
or
call
loopne
(bad)
aam
xchg
(bad)
xchg
shl
dec
pop
cmp
shl
and
inc
fdiv
adc
pushf
mov
add
pushf
mov
pop
bnd
cmp
cmp
mov
neg
cmp
jge
retf
pop
rcl
sbb
or
sbb
ds
fsub
mov
xchg
fdivr
ja
sar
jle
or
fisub
dec
ret
or
dec
jae
mov
mov
retf
inc
xor
mov
dec
(bad)
inc
mov
ret
xchg
mul
dec
scas
pop
push
popf
movaps
iret
fst
imul
jmp
stc
add
rol
imul
int
inc
push
loope
xchg
sbb
add
cmp
retf
xchg
push
xor
icebp
lds
sub
adc
dec
sti
mov
retf
je
add
in
rcl
mov
cmps
inc
pop
inc
outs
pushf
mov
xlat
fwait
daa
dec
push
stc
mov
jmp
(bad)
jmp
adc
mov
sbb
or
aas
js
mov
ins
rcr
call
mov
and
and
sub
sub
push
js
cld
lea
xor
jno
jge
test
and
push
push
in
or
(bad)
cmc
(bad)
lods
inc
or
test
(bad)
adc
bound
add
in
xlat
rol
popf
add
scas
xlat
in
mov
fist
mov
xchg
push
pop
inc
inc
jo
pusha
adc
out
sub
(bad)
aam
dec
jl
add
pop
xchg
fst
and
sub
int
pushf
xchg
jecxz
dec
ja
jns
jmp
mov
add
xor
push
aaa
jae
loopne
test
pop
inc
or
shl
add
ins
jle
ret
xor
dec
adc
cmps
ss
fld
jo
xor
cld
adc
adc
xchg
hlt
add
jo
std
push
test
adc
fwait
sub
adc
sar
jl
aas
pop
int
rcl
repnz
inc
retf
mov
arpl
mov
ins
ret
aas
jae
and
ret
mov
jge
in
sub
mov
lea
and
add
sub
(bad)
in
cdq
sahf
jno
sbb
mov
xchg
sbb
jae
retf
das
push
cli
cs
fidiv
xor
adc
jbe
mov
mov
or
int3
mov
sub
ror
cmp
sbb
scas
jecxz
movs
out
mov
arpl
fcom
mov
adc
xchg
xchg
jecxz
mov
mov
cdq
mov
xor
ins
stos
pop
push
popa
jg
pop
pop
mov
mov
std
dec
adc
push
mov
ficomp
add
xchg
(bad)
mov
jg
add
iret
xor
shl
mov
and
retf
xchg
iret
push
stos
mov
add
daa
je
outs
cmps
jg
fcom
sbb
sbb
in
xor
mov
mov
les
(bad)
push
lock
jle
test
das
cmovg
push
add
mov
dec
in
jp
icebp
inc
inc
or
sahf
and
jecxz
xchg
popf
mov
jp
pop
dec
mov
jp
cmp
jno
sti
fsubp
inc
rol
stos
jge
rcr
loop
jb
(bad)
push
popf
cmp
push
fistp
cs
int3
into
mov
xor
mov
je
aad
gs
cld
hlt
mov
ret
cmp
in
dec
(bad)
(bad)
scas
cli
je
cmc
add
xor
popa
fs
jnp
int3
push
mov
rcr
pop
popf
outs
fwait
in
ret
ficom
cmp
pop
dec
xchg
or
stos
inc
ins
pusha
fs
mov
push
cld
mov
popf
ins
int
mov
bound
test
mov
cmps
sbb
repnz
ret
push
adc
or
ins
add
cli
loope
mov
pop
or
pusha
adc
pop
push
inc
mov
cmp
push
stc
loopne
repnz
fisttp
push
scas
jl
rcr
addr16
mov
cmps
sub
jae
xchg
inc
movs
mov
adc
dec
ret
jno
push
int3
jo
repnz
repz
ds
dec
mov
aad
int
mov
call
test
aam
or
in
js
or
fwait
mov
adc
loopne
(bad)
jbe
cdq
xor
in
das
cmp
lods
mov
fdivr
in
cmp
fmulp
adc
mov
int
and
popa
fnop
inc
repnz
dec
xchg
ss
push
mov
mov
cmc
gs
mov
repz
cmp
mov
fld
and
add
dec
adc
jmp
lods
mov
out
(bad)
pop
sti
cmp
iret
pop
inc
lods
in
cmps
ins
cwde
lahf
and
inc
fadd
push
and
add
mov
push
mov
cmp
and
mov
out
push
dec
pop
jo
push
push
test
pop
push
repnz
inc
adc
sar
cld
imul
ds
arpl
inc
int3
nop
cmp
sub
dec
adc
adc
cmp
sub
stos
into
frstor
xor
dec
xchg
xchg
mov
or
movhps
mov
adc
push
xchg
int3
int3
mov
int
or
pushf
shl
mov
jo
mov
dec
ret
sub
fst
cmp
fst
jg
dec
adc
cmps
aas
pusha
mov
inc
dec
mov
inc
stc
or
fidivr
or
pop
repz
arpl
xor
sbb
mov
sbb
pusha
aas
jecxz
fisttp
add
sbb
xchg
push
mov
cmps
cld
pop
push
mov
dec
cmp
gs
dec
ret
cmp
cs
mov
cld
jecxz
movs
mov
add
xchg
mov
in
adc
jne
xchg
dec
das
mov
xchg
cwde
add
sub
and
mov
test
movs
mov
stos
add
sbb
mov
xchg
or
lods
ret
in
pop
adc
fsubr
cmp
mov
mov
les
or
rcl
outs
pop
sbb
ret
or
call
sbb
lods
(bad)
jns
movs
rol
dec
push
sub
adc
scas
js
aad
inc
push
out
push
push
cmp
add
cli
mov
std
jno
and
(bad)
push
sbb
ror
ret
adc
outs
pop
retf
xchg
inc
xchg
lods
jns
stos
pop
lods
out
and
out
mov
cmp
or
or
add
lea
sub
and
add
sti
jb
sbb
push
and
iret
arpl
mov
jl
pop
add
in
sub
jecxz
jbe
inc
out
leave
repz
mov
in
fs
fild
sar
cmp
icebp
hlt
xor
adc
adc
mov
inc
bound
xchg
xor
mov
loop
fldcw
push
fild
outs
lds
es
adc
jae
inc
and
bound
(bad)
idiv
adc
xchg
mov
mov
ins
bound
mov
shl
cld
xor
jle
into
out
js
mov
pop
mov
jb
std
adc
sub
mov
std
push
mov
mov
repnz
and
nop
js
push
fsubrp
sub
into
aam
scas
ret
add
call
add
or
stos
mov
xor
jno
shl
(bad)
fwait
movs
xchg
mov
popa
jge
or
mov
sbb
add
lds
pop
retf
adc
inc
sub
adc
jecxz
sub
ja
mov
in
rol
ins
xchg
loope
adc
inc
jecxz
call
loopne
ins
lods
jae
clc
ret
push
outs
in
add
sbb
out
mov
shl
add
push
add
push
xor
or
inc
push
(bad)
jne
dec
pop
and
sbb
loop
fbld
xchg
aas
xlat
inc
arpl
bound
rcl
sahf
ds
sub
icebp
arpl
or
enter
dec
jb
dec
jl
pushf
out
jp
jmp
adc
std
int
lods
add
in
repz
pop
movs
mov
jg
adc
mov
mov
out
sbb
xchg
sub
or
sbb
xor
ror
imul
xchg
add
fnstcw
jmp
out
jle
xchg
sbb
mov
jle
push
stos
xor
ret
jo
dec
shl
jge
ss
in
rcl
xor
jg
jno
jb
dec
sbb
mov
mov
xlat
out
out
int
dec
arpl
xor
fadd
cmp
xchg
and
fcom
adc
sbb
inc
fisubr
add
icebp
fsubr
fisubr
pushf
gs
lock
into
das
dec
fisttp
fcom
jo
cld
pop
add
cmp
jo
push
bnd
loop
jge
call
shr
adc
sub
xor
lods
dec
dec
outs
inc
cmp
push
dec
dec
aaa
in
or
and
sub
push
idiv
sub
add
lock
lock
inc
sbb
pusha
(bad)
and
sbb
rcl
ret
mul
iret
jp
sbb
or
scas
lds
cld
push
mov
sbb
and
sbb
jl
jp
ins
push
or
into
dec
mov
in
fwait
xlat
mov
inc
into
outs
scas
or
cld
pop
sbb
cld
sbb
(bad)
adc
loopne
in
cmp
cld
jg
add
je
inc
js
imul
das
ret
mov
sub
loopne
dec
iret
dec
dec
add
cmps
adc
push
and
cs
xacquire
jl
mov
jp
jno
jb
mov
sbb
rol
pop
adc
inc
fiadd
xchg
lods
mov
or
fs
shl
mov
(bad)
fcmovnbe
mov
loopne
neg
lahf
nop
inc
xor
cmp
icebp
xchg
daa
loopne
int3
neg
push
sub
push
int3
push
pushf
or
pop
imul
push
fcomp
shr
adc
cmp
lods
in
xchg
into
or
dec
ret
shr
ror
out
clc
cs
(bad)
sub
cmc
inc
pushf
adc
lock
arpl
jl
cmp
clc
jbe
popf
pusha
push
cs
loope
mov
out
repnz
push
outs
xchg
cmps
out
(bad)
in
mov
jno
out
jo
pop
sbb
jno
leave
cmps
jecxz
jns
mov
mov
jno
imul
add
dec
jp
dec
pop
mov
cmps
mov
call
shl
fiadd
dec
int3
sub
lock
xchg
cmp
ins
push
jb
add
mov
lods
(bad)
in
sar
xor
lock
lods
sub
xchg
popf
les
and
cmps
dec
nop
sub
gs
sar
nop
xchg
jl
int3
mov
dec
xchg
ret
mov
int
sbb
sub
cmp
int3
ret
addr16
repnz
mov
ins
dec
pop
inc
mov
jo
shr
xor
xor
loopne
pop
(bad)
cmp
pop
fwait
jno
mov
in
inc
pop
mov
mov
jmp
aas
push
ins
cli
cld
adc
seto
sub
inc
fmul
xchg
sub
xor
dec
ret
dec
out
cld
(bad)
sub
push
in
dec
pop
push
shr
cmp
sahf
test
add
mov
xchg
nop
xchg
jb
fs
push
mov
retf
mov
stos
call
jnp
or
jmp
push
mov
dec
xor
jge
ret
(bad)
cld
repnz
icebp
(bad)
leave
cdq
lock
out
dec
push
mov
pop
sbb
ins
rol
and
jmp
push
(bad)
fiadd
xrelease
inc
jge
dec
scas
dec
popa
pusha
inc
push
and
cmp
jmp
out
ins
imul
pop
mov
add
sbb
push
push
shr
jmp
loop
and
or
push
inc
test
rol
add
in
repz
or
(bad)
popf
push
cmp
cmp
cwde
jb
push
jge
imul
cmc
inc
cld
lea
or
lahf
das
pop
cmps
outs
iret
xchg
sbb
out
fsubr
sub
inc
cmp
repnz
add
mov
and
mov
imul
push
sub
(bad)
cmp
ret
cmp
scas
jo
adc
(bad)
jno
mov
xchg
sub
and
mov
(bad)
lods
mov
imul
cmp
ffree
pop
retf
(bad)
dec
adc
xlat
mov
cmp
outs
in
mov
dec
cld
pop
jo
(bad)
out
cmp
mov
lds
loope
pop
icebp
jmp
out
test
mov
jg
pop
pushf
ja
cs
sbb
cmc
mov
pusha
addr16
(bad)
loope
sub
jb
pop
retf
mov
pop
test
push
and
mov
xlat
mov
push
jg
push
jge
loope
aam
out
movs
movs
rcl
or
ret
movs
mov
inc
jb
xor
cmp
arpl
push
loop
cs
(bad)
mov
xor
in
fisttp
xlat
push
test
fcomp
xor
test
rol
mov
dec
dec
cmp
fldenv
cs
(bad)
xor
lahf
int
mov
fdivr
jmp
inc
js
jo
dec
shl
xor
add
shl
stos
loopne
inc
sbb
pusha
sbb
dec
repnz
mov
aas
out
and
push
sbb
imul
cmp
es
xchg
mov
ja
mov
cdq
imul
int
xor
loopne
add
std
repnz
jge
pop
pop
dec
push
ins
bound
cmp
dec
jmp
rcr
out
xchg
mov
xor
in
pop
repz
in
adc
inc
es
xchg
in
push
sahf
pop
add
cmp
xchg
mov
fdiv
loopne
pop
adc
cmp
je
cmp
jnp
(bad)
ja
arpl
mov
xchg
aad
shl
cmp
dec
fwait
dec
inc
fisub
or
bound
mov
loope
mov
xor
shl
or
xor
out
xchg
xchg
arpl
xor
adc
call
cmp
dec
push
inc
jl
inc
scas
xchg
dec
lea
add
jecxz
add
or
mov
bound
div
mov
jae
out
fnstenv
std
jl
sbb
sbb
adc
inc
pusha
pushf
fnstenv
cmc
and
cdq
xlat
js
int3
cs
ret
lods
pop
shl
dec
cmp
in
sub
ins
and
cld
int
es
and
outs
push
xchg
loope
call
xchg
jmp
and
inc
mov
js
int3
out
cmp
(bad)
mov
sub
add
inc
adc
mov
(bad)
jb
jno
fsubrp
adc
push
mov
sub
and
and
pusha
leave
adc
rcr
xchg
repz
out
pause
xlat
in
scas
icebp
test
push
xchg
or
mov
push
jp
out
and
sub
xchg
or
ja
inc
jo
jg
dec
jg
mov
ins
imul
ret
cmc
and
int
jno
push
xor
pop
inc
lods
push
pop
jge
push
int3
add
jb
xchg
aam
or
loop
shl
jae
loopne
ins
mov
js
imul
loop
out
mov
adc
xchg
add
push
jge
sub
lds
hlt
jmp
(bad)
cmp
pop
mov
jle
xchg
jae
inc
int
stc
lods
nop
pushf
aas
sub
scas
loop
push
out
xchg
clc
fnstsw
jp
in
in
daa
repz
sub
xchg
popf
xchg
test
int
stos
ror
pop
ds
into
pushf
scas
or
sbb
pusha
and
mov
add
sbb
pop
test
in
add
xor
test
pop
cld
(bad)
mov
aas
mov
out
arpl
dec
iret
cwde
adc
mov
xor
into
jae
mov
dec
and
lods
js
push
inc
xchg
and
xchg
sbb
xchg
inc
(bad)
std
cmp
pushf
pop
sub
daa
push
jae
mov
pop
pop
xchg
mov
inc
aam
and
xor
jns
push
out
shr
jl
sar
fdiv
push
icebp
std
mov
pop
int3
clc
inc
sub
sar
or
dec
inc
jbe
push
mov
mov
sub
dec
xchg
mov
mov
lahf
into
mov
sub
ins
leave
daa
mov
or
jo
mov
add
js
sbb
sub
push
jle
mov
pop
xchg
xor
aad
loopne
pop
and
and
aas
jns
nop
lods
nop
add
lock
scas
mov
bound
out
push
adc
or
push
adc
jo
lods
inc
movs
adc
and
and
pushf
ret
shl
repnz
xchg
inc
dec
hlt
mov
sbb
mov
push
int3
jecxz
jmp
sbb
mov
mov
pop
addr16
inc
push
pop
cdq
jg
(bad)
fisub
not
iret
xchg
fld
jae
ins
mov
shl
jne
add
(bad)
cli
add
jl
repz
or
repz
mov
mov
mov
cwde
int3
add
mov
dec
ror
in
loopne
lock
pushf
data16
fidiv
lods
js
jae
pop
inc
push
add
pop
pop
or
fst
inc
cmp
dec
xchg
(bad)
mov
or
xchg
lea
mov
dec
scas
push
in
rcr
inc
retf
jp
pop
mov
cwde
add
xchg
push
inc
xchg
sbb
inc
adc
and
xor
sub
outs
aaa
pop
jno
loope
xchg
scas
outs
fistp
outs
out
mov
es
popf
cmp
popw
shl
rol
dec
xlat
or
push
(bad)
sbb
les
jbe
jae
sub
cmps
jl
mov
and
ror
mov
cmp
(bad)
push
daa
cmp
lods
dec
shr
std
movs
scas
shr
mov
sub
leave
ss
call
outs
sub
sbb
inc
mov
mov
xor
mov
imul
in
out
adc
mov
scas
cmp
test
mov
setno
add
jg
in
mov
int
fst
retf
sbb
sub
mov
dec
jl
push
psrlq
inc
sahf
jnp
add
push
dec
add
inc
pop
push
inc
or
xchg
mov
ret
sbb
push
fnsave
xlat
sbb
push
dec
inc
scas
jnp
in
cmp
dec
inc
mov
icebp
(bad)
out
xchg
ins
fsubr
mov
ret
in
push
mov
jnp
push
push
inc
int3
push
loope
push
(bad)
pop
shl
retf
cld
(bad)
and
jp
or
cmp
pop
ret
pop
daa
pop
out
mov
ror
sbb
or
inc
dec
mov
std
hlt
mov
xchg
sbb
mov
icebp
mov
out
out
in
inc
dec
jecxz
loopne
jno
loope
out
ficom
sub
rcr
cmp
mov
adc
test
jp
inc
outs
add
in
cmps
paddsb
lock
out
push
inc
inc
int
and
cmps
push
je
dec
bound
fsub
fisubr
fsubp
fs
mov
(bad)
and
xor
retf
fs
push
popf
jnp
(bad)
shl
call
and
lea
ss
push
sbb
xor
test
call
repnz
dec
repnz
mov
or
jmp
mov
call
and
lock
movs
imul
lahf
pop
jg
mov
add
lock
rol
out
dec
lahf
addr16
jb
xor
jno
bound
jbe
inc
sub
mov
jno
inc
cmp
pop
and
push
iret
mov
repnz
pushf
push
jmp
sbb
(bad)
not
cmp
jp
dec
push
pop
inc
ds
inc
mov
rol
lahf
add
xchg
cmps
call
inc
jmp
fisttp
xchg
loop
dec
xor
rcl
ins
sub
loopne
sar
neg
cmp
sbb
sbb
xor
add
xchg
sahf
mov
pop
jbe
xor
inc
sahf
pop
ins
movs
mov
je
ror
push
(bad)
pop
mov
sub
xor
sbb
adc
sar
pop
mov
cld
mov
shr
lods
jecxz
in
addr16
or
jecxz
ins
fst
jg
xor
inc
adc
rol
pop
pop
pop
fwait
or
mov
pop
fadd
int3
cmp
sub
adc
outs
mov
aam
int3
mov
cdq
pop
sub
cmp
shl
in
and
(bad)
pop
mov
aas
shl
jb
adc
adc
cmp
add
adc
call
fdiv
cmps
(bad)
ja
xlat
push
sbb
sbb
sbb
or
aaa
xchg
jno
test
into
jmp
inc
fndisi(8087
cwde
test
xchg
popf
dec
ja
sahf
cli
jae
push
dec
jp
mov
cmp
ficomp
pop
or
adc
mov
mov
repnz
xchg
nop
adc
and
push
add
or
ret
sbb
cmp
xchg
xlat
and
sbb
or
out
sbb
cdq
out
sbb
icebp
fnstenv
lods
mov
jl
push
xor
inc
and
xchg
cwde
iret
adc
mov
cmp
data16
in
out
loop
jecxz
cmp
dec
adc
int3
(bad)
sbb
adc
cmp
in
and
daa
lock
xor
mov
popa
dec
pop
lods
cmp
cmps
in
leave
imul
adc
dec
loope
les
adc
bound
mov
push
or
dec
adc
mov
mov
cld
iret
daa
imul
frstor
mov
mov
push
mov
out
or
leave
mov
cdq
xor
ja
je
ror
mov
outs
fs
fisubr
sbb
fnstsw
push
dec
cmp
cmps
mov
and
add
jae
iret
je
push
(bad)
pop
pop
je
inc
sbb
or
cdq
int3
jge
pause
and
cmp
cmc
loopne
lea
xchg
jbe
push
mov
outs
or
mov
ins
and
popf
mov
pop
push
jo
mov
(bad)
sub
push
cmp
jo
xchg
dec
jo
mov
sbb
jns
ins
mov
pop
loop
sbb
nop
jo
xlat
sub
sar
jns
pushf
into
lock
outs
and
pop
adc
xchg
in
in
sbb
push
sub
lods
xchg
inc
mov
cmp
sbb
and
(bad)
in
jl
add
push
push
fst
rcr
outs
sahf
xchg
pop
rcl
jle
and
and
retf
jecxz
shl
in
icebp
jl
jecxz
and
inc
mov
mov
xor
xor
inc
add
ins
loope
jae
adc
mov
push
scas
scas
pusha
outs
mov
inc
add
and
sub
out
inc
jle
(bad)
adc
mov
mov
cdq
xchg
pop
push
sbb
cmp
sbb
xchg
cmps
cld
(bad)
int
pushf
ins
sbb
cld
int
jb
push
lods
mov
mov
push
cld
adc
fdiv
call
push
sar
or
jge
imul
outs
mov
or
xor
lahf
lods
mov
ret
adc
xchg
adc
mov
pop
mov
(bad)
jg
sbb
imul
ins
xchg
sbb
scas
data16
inc
pushf
ret
xchg
pop
inc
std
mov
arpl
jae
mov
ja
nop
lods
xchg
cli
sub
mov
mov
add
in
sbb
popf
and
mov
data16
scas
mov
hlt
and
loop
jge
mov
std
(bad)
jl
push
add
test
xor
(bad)
jae
adc
gs
dec
dec
mov
jns
jmp
sub
mov
adc
or
ror
dec
es
int
or
add
clc
add
jmp
(bad)
jg
arpl
adc
xor
arpl
daa
cmp
clc
jnp
fisttp
in
clc
dec
mov
and
mov
out
mov
sub
in
xor
or
fnstsw
and
pop
dec
xchg
adc
mov
jp
loop
pushf
and
push
or
xor
lods
loop
in
(bad)
enter
pop
movs
lods
mov
push
es
or
jb
push
mov
pop
(bad)
loop
test
jmp
test
dec
push
pop
inc
push
pop
jle
ror
leave
cmp
pop
jne
ret
outs
stc
lock
aas
jno
retf
in
mov
ds
xchg
and
(bad)
ret
into
loopne
mov
mov
sbb
inc
dec
inc
pop
std
scas
test
cdq
pop
out
add
xchg
int3
daa
sub
xor
sbb
in
xor
xchg
pushf
or
movs
lods
mov
inc
pushf
movs
mov
cld
xchg
sbb
lods
pop
mov
into
shl
(bad)
mov
stc
jb
lahf
std
lods
popf
mov
inc
fnsave
xor
xor
jmp
into
mov
dec
xchg
pushf
out
(bad)
mov
outs
outs
imul
mov
jne
(bad)
mov
loope
add
pop
add
mov
out
lahf
push
inc
icebp
ss
pushf
ret
mov
mov
dec
lods
xchg
les
ja
jge
adc
xor
inc
adc
repnz
repz
inc
cmp
mov
adc
popa
mov
adc
or
in
sub
sub
shrd
dec
in
xor
inc
sbb
jle
add
xchg
mov
push
mov
adc
int
pusha
push
cmps
lods
fsubr
js
mov
push
rsqrtps
cmc
fisub
mov
pushf
shl
movs
imul
sbb
retf
dec
inc
je
and
cli
xlat
lahf
sbb
mov
push
mov
push
jg
jl
pop
hlt
fistp
jmp
push
adc
mov
repz
or
aas
iret
imul
pop
cmp
shl
data16
loope
repz
jns
sbb
cmp
aas
dec
sub
hlt
inc
daa
cmp
stos
out
mov
adc
push
cli
inc
pop
mov
adc
fidiv
xchg
repz
sub
adc
mov
stc
cmps
dec
mov
or
dec
aad
rcr
sub
and
aas
add
sbb
jge
ret
push
sahf
idiv
adc
xchg
enter
jp
fadd
jno
int3
in
nop
aam
mov
mov
cmp
sub
in
loop
xor
out
jp
sbb
jb
push
popf
jae
add
fiadd
sbb
and
dec
sub
adc
imul
and
add
mov
adc
jle
pushf
jb
push
stos
push
cmps
daa
loop
and
and
and
inc
aam
setbe
pushf
sbb
pop
sub
add
ret
mov
call
mov
fmul
or
cwde
jo
ror
bound
shr
cmps
fist
push
f2xm1
xchg
jmp
mov
pop
les
in
jnp
fcom
mov
mov
inc
xor
cmp
cmp
dec
jb
xchg
push
nop
fmul
xlat
fs
cmp
pop
ins
xor
jmp
xor
adc
mov
push
stos
loop
adc
in
std
sub
mov
push
mov
cmp
xchg
push
stos
add
cmp
(bad)
or
sub
(bad)
or
mov
mov
test
scas
cmp
cmps
fadd
sub
or
imul
call
and
(bad)
jmp
jle
push
push
add
out
or
mov
or
js
movs
push
jmp
jmp
xchg
mov
daa
inc
outs
mov
shr
(bad)
(bad)
cs
or
mov
mov
mov
icebp
mov
jmp
adc
push
push
add
arpl
dec
cmps
mov
wbinvd
in
add
jmp
rcr
loop
mul
(bad)
or
out
cmps
adc
retf
outs
mov
mov
popa
mov
push
iret
into
adc
and
jmp
xchg
call
add
popa
mov
mov
in
sub
scas
dec
mov
mov
sub
outs
data16
mov
pop
sar
pop
push
cmp
mov
pop
xchg
adc
ds
aad
retf
ins
(bad)
stc
fld
or
adc
mov
xchg
mov
xor
xor
sbb
sbb
pop
xchg
lods
(bad)
jbe
inc
push
pop
adc
jb
sti
cli
mov
mov
pop
push
dec
mov
push
fs
lods
out
jb
adc
int
fwait
cli
lea
call
jb
cdq
outs
pop
xchg
adc
fcom
ss
adc
jb
(bad)
xor
pop
inc
mov
push
xor
cs
or
xchg
jp
push
xor
pop
imul
out
sbb
pop
cmp
ds
orps
pop
nop
mov
fistp
ss
stc
pop
(bad)
sar
jbe
(bad)
pop
and
xor
rcl
adc
stos
mov
jg
es
idiv
or
push
push
sbb
sahf
xchg
sahf
jb
in
or
push
pop
ss
mov
push
ins
mov
fiadd
jno
call
call
aad
inc
xlat
mov
mov
outs
inc
call
ret
fidivr
pusha
fadd
mov
lea
push
or
push
mov
loop
in
xor
ss
pop
push
mov
stc
pop
sahf
jp
jbe
jb
rol
mov
jb
lahf
ds
sub
sti
pop
xchg
call
inc
cmp
push
dec
ret
pop
ret
int3
stos
xchg
mov
lock
mov
inc
retf
mov
mov
aas
sub
stos
stc
add
mov
test
shl
push
push
push
aaa
sub
push
aad
sti
sbb
add
pop
sub
test
sub
ret
jmp
mov
sub
daa
(bad)
ds
mov
sti
push
mov
xchg
clc
cmps
push
sub
cmp
push
adc
(bad)
mov
push
push
dec
mov
push
sub
pop
mov
out
jecxz
mov
cmps
outs
jmp
lahf
pop
mov
and
inc
cmps
dec
adc
pusha
ret
pop
jns
outs
jb
fisttp
jmp
aad
stos
shr
shr
sub
mov
pusha
cmps
retf
stos
pop
jmp
call
inc
pop
inc
jbe
fbstp
adc
arpl
cmp
das
scas
mov
pop
ins
stc
outs
xchg
cmps
mov
mov
fld
je
fdivr
(bad)
cdq
xor
and
push
ins
mov
fstp
mov
pop
mov
pushf
and
adc
(bad)
sbb
add
pop
and
mov
push
add
cmp
pop
cld
sbb
pop
xor
cmc
movs
push
sahf
jne
not
jne
jecxz
leave
fisubr
scas
inc
scas
jae
(bad)
das
gs
std
cmp
mov
aas
lods
jp
xor
aad
and
pop
dec
lea
popf
adc
shl
pushf
gs
jne
mov
jne
sbb
mov
xchg
mov
pushf
lahf
in
mov
jmp
sbb
jmp
cmc
retf
mov
sbb
xchg
popf
cmp
mov
test
sbb
xchg
push
jmp
pusha
pop
fcomp
jne
mov
int
int
repnz
fwait
jb
jb
jb
in
push
inc
xor
icebp
sbb
mul
or
jne
mov
gs
(bad)
pushf
popa
jmp
xchg
sbb
sbb
dec
scas
pop
(bad)
jmp
xor
mov
loope
jge
inc
mov
pop
scas
sbb
aad
pop
mov
cmp
add
jl
loopne
xor
retf
mov
jno
or
sar
xchg
loop
jb
dec
call
inc
cmc
jmp
std
add
imul
xchg
ja
mov
fdiv
cmps
pop
add
mov
xchg
jl
cs
jno
pop
jmp
push
cmp
ret
call
xchg
xor
call
xchg
adc
dec
pop
pop
adc
or
inc
and
gs
jne
popw
xor
out
mov
cmp
adc
mov
pop
pop
addr16
pop
cld
xchg
adc
xor
mov
test
xor
das
pop
pop
push
xor
sbb
lahf
mov
pushf
sbb
cmps
pop
fs
xchg
test
fs
sbb
sbb
and
pop
test
in
inc
push
adc
xchg
cld
push
pushf
jle
test
inc
mov
or
jo
mov
sbb
dec
cdq
sub
ret
sub
sub
xchg
mov
or
add
xchg
xchg
test
xchg
xor
aam
xchg
sub
or
add
pop
jne
xor
ror
adc
mov
xchg
dec
push
xlat
lahf
jmp
fsubr
test
cmp
in
push
ror
add
sub
jmp
and
push
mov
pop
cmps
push
enter
mov
lods
mov
xchg
dec
pop
pop
sbb
sub
or
sar
adc
pop
pop
rol
mov
sub
jl
test
sbb
xchg
nop
repz
js
pop
xchg
ins
fmul
cmps
ror
jmp
fsub
ror
sub
pushf
xor
pop
pop
outs
xchg
add
inc
and
jecxz
push
push
pop
mov
pop
outs
inc
xor
xchg
jle
push
daa
sbb
mov
jecxz
in
lahf
je
sar
cmp
xchg
sub
and
cmp
mov
and
xchg
mov
cmp
sbb
pmaddwd
clc
shr
test
add
pop
fwait
pop
adc
push
pop
xor
pop
adc
cmp
mov
(bad)
into
leave
std
sbb
psrld
dec
jg
add
int
(bad)
cmp
xor
das
mov
sbb
loopne
fwait
pop
add
jae
xchg
jp
retf
lods
int
rdtsc
in
pop
dec
dec
cdq
sbb
or
xor
int
or
xchg
mov
adc
clc
int
dec
cmp
jmp
in
into
push
dec
cmp
hlt
xchg
pop
xor
fdivr
jno
sub
sti
ss
pop
mov
pop
ins
sub
xchg
(bad)
pop
movs
outs
dec
xor
dec
xchg
sub
cwde
or
js
(bad)
lea
mov
mov
mov
cmp
out
(bad)
pop
xchg
inc
pop
iret
mov
cwde
(bad)
mov
and
ins
xor
and
nop
loopne
sbb
jno
sbb
xor
adc
push
outs
xchg
(bad)
lods
ins
out
popa
movs
push
xchg
outs
lahf
adc
aam
mov
xchg
adc
xor
jne
jns
pop
pop
call
smsw
xchg
adc
cdq
fild
hlt
jae
outs
aaa
mov
les
and
jo
inc
mov
sbb
cli
call
add
mov
ror
icebp
cmp
test
cld
mov
cmp
cmp
test
aaa
and
mov
dec
pop
sbb
jno
sub
adc
adc
xchg
pop
(bad)
xor
aas
mov
sbb
and
adc
pop
push
pushf
ja
xchg
cmc
jo
push
adc
push
xchg
sahf
mov
mov
xchg
or
fist
imul
add
mov
les
out
or
rcr
popa
adc
cmp
adc
xor
pushf
lods
jno
xchg
adc
mov
push
std
into
jl
movs
sbb
(bad)
push
mov
jno
inc
repnz
popa
repnz
xchg
jns
jne
adc
(bad)
jns
sbb
jno
inc
repnz
xchg
mov
fcom
enter
retf
stc
adc
gs
pop
pusha
mov
push
loop
jno
aas
dec
xor
pop
aas
adc
std
xchg
(bad)
test
sbb
mov
aad
mov
cmc
cmc
sbb
jno
adc
daa
adc
retf
outs
push
xchg
dec
cdq
xchg
xchg
dec
inc
push
adc
adc
pop
arpl
cmp
mov
scas
sbb
lods
test
cmp
push
mov
jno
call
addr16
xor
push
xor
mov
sbb
mov
in
outs
jmp
inc
stos
arpl
pop
or
push
add
repnz
adc
call
scas
sub
shl
mov
stc
jmp
arpl
adc
in
pop
mov
pop
sbb
cwde
es
sub
dec
adc
push
add
xor
ret
rcr
mov
fnstcw
inc
xor
fcmove
nop
icebp
aas
or
cmp
retf
push
(bad)
jbe
xor
jge
xchg
pop
arpl
fistp
jge
retf
dec
aad
cwde
xchg
sub
cmp
adc
call
call
xchg
fisttp
popf
movs
popf
out
mov
fucom
add
cmp
cli
xor
pop
into
xchg
or
sbb
and
pop
in
inc
inc
retf
mov
fist
mov
mov
pop
sub
push
outs
sahf
nop
dec
shl
lahf
(bad)
repz
sbb
and
mov
sub
call
or
enter
and
adc
and
imul
retf
push
or
es
repz
retf
push
or
(bad)
mov
dec
sbb
dec
retf
pop
ficomp
xchg
mov
retf
imul
dec
jmp
or
ret
in
xor
push
(bad)
sbb
mov
mov
inc
dec
arpl
pop
test
adc
xor
push
imul
or
pop
cmps
nop
loop
dec
mov
dec
cvtdq2ps
rol
or
retf
xchg
sbb
cdq
pop
sbb
xchg
add
jbe
sbb
in
pop
out
(bad)
sbb
xchg
add
mov
lock
data16
xchg
sbb
add
xchg
mov
adc
test
(bad)
fiadd
mov
mov
add
cli
int
test
push
mov
pop
push
mov
repnz
pusha
stos
fisub
cmp
push
sub
sub
jmp
mov
sbb
(bad)
rcr
cmp
sub
retf
push
mov
xchg
test
scas
jle
sbb
mov
fisub
jne
pop
sub
jge
jecxz
adc
imul
mov
add
mov
(bad)
arpl
into
push
cld
test
mov
dec
(bad)
loopne
rcr
sbb
pusha
fisubr
ret
sar
shr
mov
ror
shl
inc
ficom
shr
mul
pop
movs
adc
adc
cmp
push
mov
rcr
xor
in
inc
sbb
rol
push
dec
jp
and
hlt
sub
adc
mov
cli
jnp
cld
mov
pop
in
xchg
and
inc
pop
cmc
mov
popf
mov
mov
jne
dec
rol
sub
shl
das
sbb
imul
dec
push
mov
lahf
call
dec
inc
and
dec
mov
mov
je
jg
pop
js
sub
pop
rcl
cmp
adc
mov
jp
xlat
mov
push
fwait
adc
inc
xlat
push
fwait
dec
xor
retf
push
scas
inc
arpl
cmp
loopne
aas
mov
les
rcr
cmp
sbb
add
ror
xlat
loopne
sar
test
jecxz
mov
loopne
sub
mov
aas
nop
cmp
mov
fcom
nop
cmc
jle
shr
fsubr
dec
fcom
push
jbe
fcom
icebp
mov
js
sbb
clc
rcl
sar
fwait
jne
fcom
jns
cmp
or
push
lds
lock
cmp
xor
xchg
popf
and
mov
shl
test
repnz
shl
adc
mov
mov
fcom
xor
push
mov
popa
ror
aam
out
loope
stos
xchg
jne
mov
outs
xor
push
retf
outs
stc
lock
mov
mov
adc
push
repz
nop
push
je
jne
fwait
ss
aad
clc
jns
outs
xor
push
pop
jne
fs
clc
jns
outs
xor
fsubr
nop
in
out
retf
fsub
push
adc
sti
pop
nop
cmc
mov
int
jo
sbb
test
aad
cmc
mov
sbb
jne
push
loop
dec
nop
nop
inc
(bad)
mov
inc
mov
inc
push
retf
nop
ss
dec
ror
(bad)
mov
push
xor
jl
sar
push
fldenv
xor
sbb
jae
adc
inc
popf
pop
cmc
pop
pop
imul
and
aad
outs
dec
mov
jle
(bad)
out
cmp
push
inc
mov
xchg
lds
mov
test
into
(bad)
loopne
dec
and
or
pusha
cmp
pop
ror
dec
pop
adc
pop
jne
ror
sbb
cmp
gs
jp
mov
push
sub
xor
dec
inc
push
xchg
cdq
lea
int3
jo
enter
mov
jge
ret
dec
in
loopne
mov
shl
cmp
pop
(bad)
mov
retf
retf
retf
retf
or
or
dec
dec
dec
dec
or
or
retf
retf
retf
retf
or
or
dec
dec
dec
dec
or
or
retf
retf
retf
retf
or
or
dec
dec
dec
dec
or
or
retf
retf
retf
retf
or
or
dec
dec
dec
dec
or
or
retf
retf
retf
retf
or
or
dec
dec
dec
dec
or
or
retf
retf
jle
or
or
sbb
and
cmp
mov
pop
mov
pop
sub
popa
cld
int
push
and
call
fs
mov
mov
scas
dec
mov
sub
mov
lds
je
std
fstp
movs
int3
push
lods
mov
in
imul
sub
mov
push
pop
outs
adc
mov
or
scas
ret
dec
add
mov
loop
fst
out
xchg
mov
inc
popa
arpl
jo
movs
push
and
sub
mov
rcl
cmp
daa
sbb
ins
sti
and
and
mov
(bad)
cmp
and
inc
mov
xchg
test
pop
fistp
jno
pop
xchg
push
adc
sbb
es
(bad)
ds
(bad)
ds
mov
jmp
jecxz
cmp
das
cmps
imul
sti
(bad)
sbb
loop
(bad)
adc
(bad)
adc
dec
sti
push
out
data16
retf
jg
jge
int
(bad)
fild
test
adc
fimul
push
nop
retf
ja
ja
jle
inc
aam
sti
sub
mov
jae
jnp
pusha
mov
push
loope
std
sbb
stc
jnp
adc
sbb
daa
cld
imul
bound
adc
fsubr
dec
jmp
in
jmp
stos
pusha
scas
pusha
call
push
imul
inc
sahf
adc
imul
dec
fimul
mov
out
call
cld
push
ds
push
(bad)
xor
adc
rcl
cmp
push
ficom
stos
ret
cld
icebp
in
pop
pushf
dec
dec
(bad)
cmp
stos
sbb
mov
xlat
adc
daa
and
jb
(bad)
sbb
pusha
jle
sbb
cmp
dec
retf
push
lea
xchg
push
hlt
jle
shl
jnp
pop
(bad)
adc
inc
fist
hlt
jle
loop
loop
xchg
adc
adc
hlt
push
push
call
jne
sbb
loop
jle
jle
mov
je
js
pop
fisub
xchg
adc
inc
int
xchg
(bad)
jno
push
shl
popf
dec
adc
dec
int
cdq
adc
(bad)
daa
sbb
into
jnp
je
js
jge
adc
xchg
jle
mov
xchg
sar
fidivr
mov
xor
es
(bad)
dec
es
mov
je
test
mov
xor
pop
fimul
hlt
(bad)
add
sbb
mov
add
mov
xor
adc
hlt
jle
fnstenv
adc
je
adc
arpl
pop
jmp
jmp
sub
sub
imul
sub
mov
sub
imul
mov
mov
and
jb
xchg
imul
dec
les
pop
sub
or
sub
inc
sub
or
pop
aas
pop
sbb
aaa
or
dec
sub
int
jl
adc
inc
(bad)
sbb
shl
or
es
adc
outs
inc
mulps
jmp
or
sbb
(bad)
nop
mov
inc
cmp
aaa
add
dec
aas
mov
mov
fs
push
sbb
cmp
push
pop
jnp
sub
push
push
sub
inc
add
fsubrp
push
pop
out
cmp
push
loopne
dec
push
nop
xor
jl
sub
sub
pop
xor
pop
xchg
pusha
xor
cmp
arpl
mov
scas
mov
fisttp
jge
fwait
xchg
daa
push
mov
lods
mov
ds
adc
adc
enter
int
in
pop
and
dec
int
sbb
nop
mov
out
add
iret
sti
xchg
into
idiv
dec
fist
ss
out
(bad)
sbb
add
dec
xchg
inc
cmp
(bad)
sub
popf
jno
outs
stos
xor
sub
nop
inc
mov
mov
out
mov
ds
jb
lds
leave
jle
fdivp
lods
xor
(bad)
das
iret
es
dec
out
and
out
mov
movs
push
cmp
jnp
xchg
cmp
sbb
(bad)
std
movs
cwde
cmc
sbb
aam
movs
scas
movs
pop
cmc
dec
imul
mov
push
pop
add
mov
sub
ss
push
gs
and
neg
or
push
aam
into
jb
cmps
outs
adc
imul
psubsw
cmp
inc
mov
in
ficom
hlt
jae
sahf
inc
mov
mov
pop
inc
sbb
je
aaa
fbld
es
aaa
out
xchg
jne
test
je
add
lods
adc
movs
mov
and
fisubr
xor
fsub
in
arpl
mov
jb
jmp
ins
xor
dec
retf
adc
xor
dec
pop
pop
popf
sbb
adc
cmp
mov
lds
ss
adc
mov
xchg
loopne
in
fcom
cmp
xchg
jl
lods
daa
inc
frstor
pop
in
outs
xchg
nop
ret
jns
push
adc
jmp
push
pushf
std
je
or
adc
lods
mov
(bad)
sub
add
movs
mov
loop
mov
push
add
adc
sar
jns
dec
dec
mov
repz
scas
cmps
lds
xor
adc
sahf
add
mov
cmp
adc
popa
out
je
push
jl
lods
add
cld
xor
jmp
push
lods
test
or
jmp
adc
xor
scas
fxch
mov
stos
ficom
add
add
sahf
add
xor
dec
xchg
lods
loope
je
aam
daa
sub
sbb
jmp
xchg
jmp
aam
add
cwde
mov
push
cmp
adc
xchg
(bad)
mov
scas
(bad)
cmp
pop
adc
and
sahf
mov
add
adc
adc
mov
add
push
xor
mov
ds
cmp
pop
add
xchg
enter
les
dec
je
add
mov
adc
ins
cmp
dec
outs
dec
or
jmp
fcmovnu
xor
ret
int
sbb
stos
jecxz
aad
(bad)
out
add
and
ins
inc
mov
loop
rol
add
jbe
pop
jno
fucom
int
adc
cmp
push
or
sahf
mov
fimul
in
scas
add
xor
icebp
dec
fisttp
push
and
add
sbb
mov
mov
jge
into
sbb
iret
retf
fcom
jmp
cmps
push
lods
outs
hlt
das
popf
adc
cmp
jns
sub
scas
add
add
mov
(bad)
neg
fs
jbe
xchg
std
out
cmp
ror
push
add
icebp
pop
jne
or
cmps
test
adc
lods
outs
mov
lahf
cmp
mov
or
fstp
lods
and
ins
or
stc
adc
jbe
jg
fisttp
test
lahf
xor
repz
and
fisttp
je
pop
jl
popa
cmp
jp
xchg
scas
cmc
scas
retf
bound
pop
fmul
mov
iret
scas
fstp
xlat
repz
scas
cmp
clc
jg
push
test
clc
dec
or
dec
popa
add
or
ins
push
loope
jb
sbb
mov
jle
fst
into
(bad)
jp
push
(bad)
cmp
add
aad
or
or
das
cmp
sahf
mov
push
fwait
(bad)
adc
call
loopne
jns
mov
add
adc
cmp
(bad)
pop
repnz
cmc
sub
jno
fucomi
(bad)
mov
(bad)
iret
or
cmp
fnsave
mov
mov
dec
data16
into
(bad)
call
shl
mov
stos
ror
nop
sub
leave
or
inc
mov
sbb
sub
scas
(bad)
mov
movs
pop
hlt
cmp
cmp
idiv
repz
jmp
test
xchg
aad
dec
sub
ins
pop
call
mov
syscall
jmp
shl
pop
fisub
sbb
(bad)
std
ss
inc
add
in
outs
shl
in
in
add
and
shl
cmp
repnz
sbb
cmp
fisttp
xchg
test
in
(bad)
xor
xchg
add
push
in
lods
lds
aam
dec
in
jge
(bad)
and
adc
push
lods
repnz
dec
jmp
lahf
gs
push
or
mov
vpsubd
or
add
xchg
mov
dec
out
lds
push
out
mov
mov
ss
cmp
(bad)
adc
jmp
or
call
jns
mov
pop
dec
push
xchg
add
lds
xor
add
aad
lods
adc
and
jle
cmp
movs
outs
cmp
sbb
mov
fs
pop
adc
int3
(bad)
or
in
xor
or
jl
pop
stc
cmovp
or
movs
int3
imul
int3
in
adc
ins
test
jl
inc
lahf
or
mov
in
mov
mov
jne
sbb
sbb
push
jae
inc
mov
movs
dec
into
adc
ins
xchg
test
mov
jle
and
cs
and
push
mov
add
fs
or
inc
lea
adc
lods
add
jl
push
or
bnd
mov
or
data16
or
and
xchg
fld
mov
int
cld
xor
ret
movs
inc
push
inc
xchg
jne
or
js
mov
add
sbb
popa
jl
xor
es
fimul
inc
jecxz
stos
ins
ins
mov
add
inc
adc
jno
fld
or
fisub
xchg
pushf
movs
xchg
inc
arpl
jmp
push
add
inc
push
lahf
clc
xchg
addr16
pop
jg
mov
xchg
or
add
inc
ficom
xor
mov
dec
adc
push
in
(bad)
cdq
bound
mov
pusha
js
sbb
jb
outs
xchg
sbb
movs
repnz
sub
ror
mov
or
and
and
lea
inc
jo
adc
ret
cmp
xchg
sbb
mov
mov
cmps
retf
lods
shl
jne
pop
inc
fstp
inc
pop
push
inc
movs
pusha
cli
inc
mov
fmul
das
push
int3
movs
int3
jp
pop
rol
jno
mov
jp
jnp
mov
neg
inc
mov
mov
or
ds
sbb
cmp
call
inc
(bad)
dec
push
call
and
sub
mov
and
(bad)
icebp
jmp
lock
xor
jmp
jno
nop
clc
and
adc
mov
mov
retf
and
shl
mov
dec
ss
in
loopne
mov
outs
aad
inc
push
mov
mov
setp
ins
mov
stc
ror
add
in
jae
(bad)
push
inc
jmp
div
addr16
ret
pop
pop
sti
inc
mov
pusha
in
sar
fisub
pop
pop
das
mov
dec
daa
cmp
pop
sbb
inc
aad
dec
pushf
and
fimul
push
xor
shr
mov
pusha
mov
daa
xchg
pop
rcl
imul
pusha
fisub
cmp
dec
sbb
mov
pop
xor
lahf
add
mov
repnz
bound
xor
xchg
cmc
mov
mov
xchg
and
mov
int3
bound
movs
mul
add
lock
in
jmp
imul
inc
sbb
xchg
in
jecxz
push
jp
stc
pop
mov
adc
push
jbe
jp
out
mov
nop
push
mov
imul
xchg
inc
pop
mov
mov
mov
or
fbstp
pop
xor
test
pop
(bad)
push
adc
pop
lds
test
repnz
add
push
push
pusha
lahf
inc
(bad)
xchg
or
sahf
shl
push
and
push
loope
test
and
adc
push
inc
dec
push
imul
pop
pop
dec
jne
es
sbb
out
stc
out
xchg
mov
pop
push
dec
out
fs
mov
mov
push
shl
and
test
mov
out
push
sbb
(bad)
jle
dec
std
inc
movs
out
stos
cmp
(bad)
cwde
call
push
xor
mov
fidiv
mov
sbb
push
adc
hlt
xor
xchg
adc
and
lods
test
sahf
jecxz
(bad)
in
push
mov
ret
adc
sub
adc
pusha
push
push
push
shl
test
mov
mov
mov
ret
call
(bad)
push
stc
iret
lock
shl
popa
gs
xchg
addr16
aad
adc
loop
or
ja
arpl
mov
jg
jne
pop
fs
ret
fisub
out
in
fld
outs
gs
jl
mov
in
lahf
xchg
gs
popa
movs
gs
fist
test
push
jmp
bound
sbb
aaa
leave
les
dec
stc
push
movs
cmp
loopne
out
aas
mov
loop
int
xchg
cmp
or
add
sbb
mov
jo
push
mov
retf
or
adc
gs
add
push
cmp
jmp
or
mov
fisubr
jp
fcomi
or
jl
push
popf
dec
sahf
inc
mov
fidiv
stos
mov
cld
mov
sub
sub
or
ret
push
xchg
jno
clc
fild
fs
dec
ds
std
xchg
cmp
jbe
adc
pop
dec
pop
adc
(bad)
xor
xchg
push
jp
dec
jge
div
aad
popf
and
jno
popa
mov
push
add
mov
gs
loope
mov
in
xor
sbb
stos
push
adc
push
ss
dec
in
sahf
in
inc
test
inc
xor
xchg
in
out
shl
gs
popa
loope
jne
add
call
adc
push
ja
ins
push
or
retf
popa
out
loope
mov
gs
cld
nop
mov
fwait
arpl
hlt
ja
gs
jo
mov
call
adc
arpl
ins
jmp
lods
test
test
adc
inc
jecxz
arpl
arpl
pop
daa
xchg
jno
addr16
(bad)
rcl
adc
loope
cwde
xor
shl
movs
arpl
(bad)
xor
xor
inc
loope
div
(bad)
mov
and
mov
icebp
jne
xchg
retf
push
in
ja
mov
(bad)
loop
xor
adc
xchg
and
ja
pop
mov
gs
adc
movs
mov
adc
mov
lock
ficom
aam
hlt
xor
mov
fiadd
ins
aaa
aas
rcr
pop
nop
xchg
pop
adc
push
push
rcr
dec
push
in
jb
(bad)
(bad)
xor
ror
shr
sbb
mov
xchg
retf
cmp
loopne
pop
fidivr
fld
mov
pop
push
add
and
inc
dec
xchg
into
jns
adc
pop
jo
jb
sub
mov
push
sbb
cmp
xchg
int3
ror
xor
cwde
xchg
sub
std
pop
(bad)
jb
push
cwde
xchg
test
ror
int3
les
lds
fld
arpl
jle
or
sub
add
je
pop
dec
cmp
inc
enter
fst
mul
fimul
adc
pop
sbb
adc
xchg
push
mov
sbb
sub
or
xor
sbb
fistp
cmc
sbb
daa
mov
movs
push
adc
mov
popf
sti
ds
dec
int
or
retf
ja
jle
or
pop
xor
mov
stos
leave
int
sti
pop
jl
jnp
jge
sub
retf
popa
leave
mov
push
xchg
dec
es
xchg
daa
cmp
or
cmp
clc
shr
repz
mov
mov
or
add
and
cmp
pop
test
jns
dec
add
or
fidivr
mov
lods
sbb
lahf
or
pop
mov
jae
popa
adc
sub
xor
(bad)
jle
pop
inc
mov
add
(bad)
cmps
pop
les
into
sar
fadd
dec
mov
dec
cwde
inc
push
pop
sahf
fcomp
lea
stos
push
mov
push
jns
test
or
call
add
push
clc
or
iret
pop
jge
call
(bad)
cmp
fsubr
xchg
dec
mov
shl
xchg
cld
or
and
enter
dec
sidtd
push
loope
js
xchg
enter
xor
adc
jmp
test
pop
mov
dec
repz
sti
in
dec
dec
addr16
sbb
jnp
mov
adc
fwait
aad
or
neg
aas
sbb
sbb
fwait
adc
pop
or
inc
mov
push
or
xlat
dec
cmps
mov
sti
or
fstp
or
or
mov
jnp
sbb
push
loopne
scas
cld
fwait
cdq
jmp
add
fwait
pop
cwde
push
lods
out
xchg
fild
sahf
ins
jmp
pop
lahf
sti
mov
pop
test
mov
cdq
xchg
sbb
push
mov
jmp
mov
nop
mov
jg
in
popa
popf
cmp
pop
cmp
ret
cmp
fld
clc
add
sar
pop
xchg
pop
retf
ror
test
dec
cmp
(bad)
ds
fld
or
retf
xor
push
mov
push
int3
xor
fild
stc
add
(bad)
ds
pop
test
pop
lds
ror
icebp
or
iret
xor
pop
cmp
(bad)
aas
(bad)
fld
xor
push
into
aaa
iret
(bad)
pmaddwd
lea
ret
fild
cli
add
ret
cmp
pop
cmp
aad
cmc
or
int
int
cmp
sar
fld
inc
ffreep
ds
pop
xchg
pop
lds
ror
xor
push
mov
push
leave
aaa
into
xlat
push
test
int
int
(bad)
retf
sbb
ret
cli
add
sar
pop
xchg
pop
les
add
les
test
retf
ror
repnz
enter
mov
push
into
ss
aad
pop
add
push
aas
(bad)
pop
xchg
pop
(bad)
aas
(bad)
fbld
scas
add
push
in
dec
ret
adc
jno
lods
adc
call
in
inc
jb
mov
or
jb
xchg
into
mov
and
fiadd
js
sbb
or
scas
push
mov
add
cld
mov
nop
es
xor
inc
std
xor
movs
add
inc
xor
ins
lods
mov
mov
pop
(bad)
ror
jecxz
fdivr
repz
mov
dec
xchg
jle
cmps
neg
inc
jp
jge
pusha
or
add
xchg
or
into
(bad)
xchg
gs
imul
jl
gs
sbb
fsubr
test
ror
adc
enter
mov
in
popa
xchg
xor
push
jo
jp
mov
mov
jae
sub
adc
mov
mov
push
sub
ror
add
fs
in
hlt
call
mov
jae
arpl
ret
jecxz
sub
mov
sub
aad
sar
sub
or
mov
xlat
xchg
ror
and
loope
pop
push
xor
aam
xlat
sbb
jecxz
movs
int
cmp
aad
jo
push
xor
aas
mov
stos
std
jle
mov
or
mov
xor
bound
and
dec
shl
sub
aam
cmp
shl
imul
and
addr16
popa
jge
repz
push
lds
iret
aas
outs
pop
js
shr
fstp
pop
jnp
ja
mov
pop
mov
jno
adc
repz
jmp
dec
and
ins
dec
xor
ds
div
sbb
leave
dec
adc
loop
arpl
sub
push
mov
jge
lea
jl
cmp
push
enter
aas
add
lea
push
add
jns
add
fbstp
fbstp
mov
add
pop
mov
fs
ret
or
sub
aas
pop
inc
ret
adc
in
sahf
gs
mov
sar
mov
sbb
retf
add
xor
in
ins
adc
in
mov
pop
xor
pop
cwde
adc
sub
lods
pop
mov
adc
out
cmc
out
int3
jno
sar
inc
mov
cld
sub
scas
adc
jge
outs
xor
sbb
test
mov
jle
sub
xchg
sub
enter
mov
sub
jl
jb
xchg
mov
xchg
xchg
aad
repnz
mov
iret
sahf
popf
popa
and
sub
mov
pop
scas
jg
shl
xor
mov
dec
shl
sbb
cmp
sbb
cmp
out
or
mov
rcl
sbb
xlat
push
fsub
(bad)
or
clc
outs
enter
scas
rcr
inc
add
push
fsubr
adc
xchg
push
int
adc
sub
ficomp
jo
sub
mov
repnz
push
movs
(bad)
add
sti
dec
dec
xchg
cmp
ret
repnz
nop
cmps
pop
icebp
add
cmps
ret
pop
lea
fcom
jb
iret
retf
in
jecxz
mov
jno
cmp
bound
jne
sar
sub
sub
xor
adc
and
sub
push
pop
out
xor
mov
add
std
mov
rcr
iret
enter
jl
add
dec
inc
or
or
and
test
sbb
fstp
pop
aam
xlat
fiadd
xor
push
sti
bound
add
ds
fiadd
mov
sub
xchg
(bad)
dec
rcr
mov
pop
cmp
cmp
in
jo
icebp
fld
mov
mov
inc
lods
inc
das
ss
sub
sbb
call
mov
mov
aaa
fcom
push
jg
mov
jg
mov
cmp
adc
dec
jge
sub
and
xor
and
loop
adc
push
movlps
(bad)
mov
inc
jnp
mov
clc
cmp
out
jne
jmp
mov
or
jecxz
xchg
imul
test
ret
enter
lods
ffreep
and
dec
mov
jp
mov
cmp
pop
pop
(bad)
fcom
fwait
fwait
stos
adc
jmp
mov
inc
jno
mov
lods
mov
inc
xor
or
not
or
sahf
out
add
out
add
or
pop
out
add
or
xor
or
es
add
or
push
ror
out
ror
(bad)
ror
int3
ror
mov
or
movs
ror
xchg
ror
mov
or
outs
ror
pop
ror
dec
ror
ror
sub
or
adc
or
add
or
lock
(bad)
ror
mov
ror
mov
ror
jbe
or
push
ror
cmp
or
xor
or
sbb
or
or
or
clc
iret
or
call
iret
or
(bad)
iret
or
mov
iret
or
pushf
iret
or
mov
or
jp
or
outs
iret
or
(bad)
iret
or
pop
iret
or
dec
iret
or
cmp
or
sub
or
adc
or
add
or
out
into
or
fmulp
or
ror
or
mov
into
or
call
add
or
pop
into
or
cmp
or
sub
or
adc
or
clc
int
add
int
add
int
add
int
add
int
add
or
push
int
add
int
add
int
add
or
clc
int3
or
loop
or
ror
or
ret
add
or
mov
or
jl
or
data16
or
pop
int3
or
dec
int3
or
cmp
or
sub
or
sbb
or
or
or
repnz
or
fmul
or
ret
add
retf
or
test
or
jbe
or
pusha
retf
or
push
retf
or
cmp
or
xor
or
and
or
adc
or
add
or
cmps
aam
add
retf
add
add
(bad)
in
add
add
add
add
pop
add
adc
add
or
add
or
add
adc
add
mov
add
add
add
xchg
add
add
add
xchg
add
and
add
push
jecxz
add
jecxz
add
add
add
or
(bad)
in
add
or
mov
or
cmp
or
add
add
rcr
or
mov
or
movs
fimul
xchg
fimul
sbb
add
or
push
fimul
inc
fimul
cmp
or
sub
or
sbb
or
or
or
add
or
repnz
(bad)
or
retf
add
fisttp
xchg
fisttp
xchg
or
jl
or
push
or
pop
fisttp
dec
fisttp
xor
or
and
or
or
or
cld
fmul
out
or
fcomp
or
into
fmul
mov
fmul
xchg
fmul
sbb
add
or
pusha
fmul
inc
fmul
xor
or
out
or
sbb
or
or
or
hlt
fisttp
out
or
fcmovu
or
into
fisttp
ret
add
fisttp
cwde
fisttp
mov
or
js
or
(bad)
fisttp
push
fisttp
inc
fisttp
xor
or
and
or
push
fisttp
add
or
lock
(bad)
or
retf
add
or
cwde
fimul
mov
or
jl
or
je
or
(bad)
fimul
repnz
adc
or
push
fmul
and
or
mov
or
xor
or
inc
xlat
or
push
xlat
or
push
xlat
or
xchg
xlat
or
sahf
xlat
or
stos
xlat
or
mov
or
(bad)
xlat
or
push
fisttp
sbb
or
sub
or
inc
fisttp
and
or
fcmovbe
or
call
xlat
or
or
or
sbb
or
sub
or
fmul
dec
fmul
(bad)
fmul
jbe
or
test
or
xchg
fmul
movs
fmul
push
fimul
inc
fimul
xor
or
and
or
push
fimul
cld
(bad)
in
(bad)
rcr
or
rcr
add
or
mov
or
jl
or
ins
(bad)
pop
(bad)
dec
(bad)
cmp
or
(bad)
push
(bad)
or
or
neg
or
call
fmul
enter
mov
or
add
add
mul
or
fsub
or
(bad)
in
add
add
sbb
or
push
in
add
in
add
add
add
in
add
or
lock
add
in
add
or
shl
or
mov
or
sahf
jecxz
add
or
pop
in
add
add
jecxz
add
or
add
add
ds
add
dec
add
scas
dec
add
dec
add
dec
add
mov
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
scas
dec
add
dec
add
dec
add
dec
add
scas
dec
add
dec
add
mov
add
mov
add
add
inc
add
inc
add
xchg
inc
add
cdq
dec
add
add
add
add
inc
mov
(bad)
sti
dec
add
add
dec
cmps
xor
add
add
add
add
add
enter
enter
inc
add
jae
popa
add
ins
add
add
add
add
outs
add
bound
ins
add
add
add
imul
outs
add
ins
add
add
add
push
add
add
add
add
push
add
jno
jne
imul
jae
add
add
push
add
arpl
imul
add
add
add
add
push
add
jb
imul
add
add
push
add
and
push
add
jno
jne
add
arpl
add
add
dec
add
add
imul
add
inc
add
jae
popa
add
ins
add
and
push
add
add
add
push
add
jo
jo
outs
add
je
add
add
imul
add
jae
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
and
push
add
jo
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
jae
add
inc
add
ins
add
popa
add
jns
and
push
add
outs
add
je
and
dec
add
ins
add
add
add
inc
add
ins
add
popa
add
jns
and
dec
add
ins
add
add
add
push
add
outs
add
add
je
add
inc
add
data16
jne
ins
add
add
add
popa
add
add
add
add
jne
jo
jo
outs
add
je
add
add
add
popa
add
add
add
push
add
jno
jne
imul
jae
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
push
add
add
je
jae
add
push
add
ins
add
jae
push
add
outs
add
add
jp
add
add
jo
ins
add
jae
push
add
outs
add
add
ins
add
jb
add
add
push
add
ins
add
jae
push
add
outs
add
add
arpl
add
add
jo
ins
add
jae
push
add
add
outs
add
add
push
add
ins
add
jae
push
add
js
je
add
push
add
ins
add
jae
push
add
arpl
imul
add
outs
add
outs
add
add
jo
ins
add
jae
push
add
add
popa
add
add
popa
add
add
outs
add
add
add
add
jne
add
arpl
add
add
add
popa
add
imul
jae
je
add
popa
add
add
add
dec
add
outs
add
data16
jae
je
add
imul
add
inc
add
outs
add
add
add
jo
jo
add
add
add
ins
add
imul
jb
add
add
add
jbe
add
add
je
popa
add
add
add
xor
add
add
jae
arpl
jb
imul
add
add
data16
add
outs
add
outs
add
je
add
add
js
add
arpl
ins
add
popa
add
add
push
add
add
add
aas
add
add
add
je
add
add
ins
add
add
js
je
jb
popa
add
je
add
add
add
outs
add
popa
add
imul
add
add
add
jo
popa
add
imul
add
add
add
jo
ins
add
jae
inc
add
add
outs
add
add
jae
arpl
add
jo
ins
add
jae
inc
add
jb
add
jo
jae
add
add
ins
add
jae
add
add
jo
jae
add
add
jbe
popa
add
add
jp
add
ins
add
outs
add
add
add
dec
add
add
add
bound
outs
add
add
add
add
add
bound
jne
add
add
add
add
add
data16
add
add
add
outs
add
imul
outs
add
add
bound
outs
add
je
add
add
outs
add
jb
add
jae
imul
outs
add
add
add
add
jo
jb
outs
add
add
je
dec
add
ins
add
add
jo
outs
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
jo
jbe
add
add
jb
add
jne
ins
add
add
add
dec
add
inc
add
jae
add
add
add
add
push
add
arpl
imul
add
add
add
add
push
add
popa
add
arpl
push
add
add
add
push
add
ins
add
add
add
push
add
add
data16
data16
ins
add
add
arpl
add
je
add
jo
add
add
ja
imul
jb
imul
add
add
ja
imul
imul
add
jae
jns
jae
ja
outs
add
add
add
add
jae
jns
jae
je
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
outs
add
ins
add
outs
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
inc
add
ins
add
outs
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
add
add
arpl
outs
add
data16
add
imul
add
add
arpl
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
jae
add
and
ins
add
imul
jne
jae
add
and
ins
add
arpl
popa
add
add
add
jns
jae
and
ins
add
imul
add
jae
jns
jae
and
ins
add
arpl
popa
add
add
add
add
add
add
add
je
outs
add
add
add
add
add
add
je
imul
and
inc
add
ins
add
outs
add
and
push
add
jb
jae
imul
add
je
add
add
add
add
je
imul
and
push
add
jb
jae
imul
add
je
add
add
add
je
imul
and
inc
add
arpl
outs
add
popa
add
add
outs
add
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
add
jb
outs
add
add
je
jae
pop
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
pop
add
push
add
dec
add
add
add
add
add
add
add
add
outs
add
add
outs
add
add
add
add
outs
add
arpl
add
add
outs
add
add
add
popa
add
add
add
inc
add
add
add
push
add
add
and
ins
outs
arpl
imul
dec
add
dec
add
dec
add
dec
add
dec
add
mov
inc
add
mov
inc
add
aad
add
aad
add
mov
inc
add
inc
add
inc
add
dec
add
and
and
add
mov
inc
add
sbb
inc
add
mov
inc
add
inc
add
mov
inc
add
push
inc
add
inc
add
and
sbb
add
and
inc
add
jae
jo
ins
add
jns
inc
add
jb
outs
add
and
and
inc
add
jb
outs
add
and
pop
add
add
add
jo
ins
add
jns
inc
add
jb
outs
add
dec
add
imul
and
inc
add
jae
jo
ins
add
jns
imul
and
add
jb
outs
add
and
ins
add
jae
jae
popa
add
add
add
add
mov
inc
add
aad
add
inc
inc
add
dec
inc
add
inc
add
dec
add
sub
adc
pusha
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
sub
ror
add
inc
add
inc
inc
add
dec
inc
add
inc
add
mov
inc
add
add
jb
jb
outs
add
add
add
and
add
add
add
ins
add
popa
add
add
add
add
add
ins
add
popa
add
add
outs
add
add
ror
cmp
nop
cs
add
dec
add
cmp
inc
add
add
add
add
aas
inc
add
inc
add
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
add
inc
add
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
add
outs
add
popa
add
add
add
outs
add
imul
outs
add
add
je
add
jo
dec
add
dec
inc
add
inc
add
cmc
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
imul
dec
add
inc
add
imul
and
push
add
popa
add
ins
add
and
je
outs
add
add
imul
and
ins
add
add
ins
add
and
data16
ins
add
and
outs
add
ins
add
add
add
add
inc
add
ins
add
je
add
imul
dec
add
inc
add
imul
and
push
add
add
add
add
js
add
jne
je
add
add
popa
add
ins
add
add
add
add
add
add
pop
add
add
imul
dec
add
and
dec
add
push
add
add
pop
add
push
add
add
add
add
add
dec
add
add
add
add
je
pop
add
jb
add
je
push
add
dec
add
add
add
and
das
add
and
and
and
add
add
inc
add
dec
add
add
imul
and
jae
je
imul
and
add
imul
jae
and
add
add
add
add
ins
add
and
add
ins
add
add
add
add
outs
add
js
imul
ins
add
add
add
dec
add
add
add
add
pop
add
add
imul
cmp
ins
add
jae
je
pop
add
jb
add
je
push
add
ins
add
add
add
add
outs
add
js
imul
bound
popa
add
add
add
popa
add
add
add
jb
jb
outs
add
cmp
and
and
and
dec
add
jae
jae
popa
add
add
add
add
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
inc
add
arpl
outs
add
outs
add
add
add
add
popa
add
add
add
jb
jb
outs
add
and
imul
and
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
dec
add
outs
add
add
outs
add
and
add
jb
outs
add
cmp
and
pop
add
add
add
add
add
add
and
add
add
arpl
cmp
and
and
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
imul
jae
push
add
add
jb
outs
add
add
jae
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
add
add
outs
add
imul
and
imul
je
popa
add
add
jb
and
bound
add
popa
add
jae
add
add
outs
add
je
popa
add
add
add
popa
add
and
outs
add
je
and
jae
jne
arpl
arpl
add
jae
data16
ins
add
add
add
push
add
outs
add
popa
add
outs
add
add
popa
add
add
add
add
jb
jb
outs
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
push
add
imul
and
add
arpl
add
je
imul
jae
and
pop
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
outs
add
je
popa
add
add
jb
and
jne
jo
outs
add
and
add
imul
pop
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
popa
add
add
add
add
add
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
arpl
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
ja
push
add
outs
add
popa
add
outs
add
add
push
add
and
data16
jb
and
add
imul
imul
and
imul
je
popa
add
add
jb
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
jo
popa
add
imul
add
add
add
popa
add
popa
add
add
add
add
add
jnp
inc
add
xor
inc
add
add
inc
add
sub
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
outs
add
and
arpl
ja
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
data16
inc
add
popa
add
ins
add
inc
add
outs
add
add
ins
add
outs
add
je
popa
add
outs
add
jb
add
add
ja
push
add
outs
add
popa
add
outs
add
add
outs
add
je
inc
add
ins
add
outs
add
inc
add
outs
add
add
ins
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
and
add
add
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
jae
je
popa
add
add
jb
add
inc
add
dec
add
add
jae
jne
ins
add
add
add
push
add
push
add
jb
add
add
outs
add
je
popa
add
add
jb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
sub
sub
add
inc
add
inc
add
inc
add
add
add
add
dec
add
dec
add
add
add
add
add
inc
add
dec
add
dec
add
add
inc
add
push
add
push
add
add
add
add
dec
add
add
inc
add
add
add
dec
add
add
dec
add
add
jne
je
add
add
add
add
mov
addr16
add
outs
inc
add
fs
add
jno
add
jno
add
inc
add
jae
add
inc
add
inc
add
addr16
add
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
jbe
ins
add
add
add
add
add
add
add
add
and
add
and
add
and
add
add
add
inc
add
add
pop
add
add
inc
add
bound
add
add
or
add
add
add
and
add
and
add
cmp
add
jns
add
add
je
jb
jne
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
je
push
add
popa
add
imul
add
add
add
jae
and
outs
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
outs
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
jo
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
add
imul
outs
add
ins
add
jae
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
jp
add
add
inc
add
imul
popa
add
imul
add
add
add
add
imul
inc
add
imul
jae
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
jb
jb
add
je
inc
add
ins
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
inc
add
inc
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
sub
and
jo
outs
add
imul
outs
add
cmp
and
and
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
jb
outs
add
inc
add
ins
add
inc
add
imul
add
add
add
add
add
add
add
jb
outs
add
and
je
push
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
jb
add
add
add
add
add
add
js
jo
add
je
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jb
imul
push
add
inc
add
ins
add
add
add
add
inc
add
imul
add
add
add
add
jb
imul
and
je
outs
add
add
imul
and
and
add
add
popa
add
add
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
ja
jb
imul
add
cmp
and
and
add
add
js
jo
add
je
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
add
outs
add
jo
jb
add
jae
and
add
je
popa
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
outs
add
jo
jb
add
jae
and
je
push
add
outs
add
jne
je
and
data16
ins
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
ins
add
jae
add
add
popa
add
imul
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
ins
add
jae
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
push
add
add
je
add
add
dec
add
and
push
add
jae
imul
outs
add
and
push
add
jae
outs
add
jb
arpl
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
add
add
inc
add
imul
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
add
add
js
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
add
outs
add
jo
jb
add
jae
add
add
add
jns
je
add
and
outs
add
and
and
add
add
inc
add
imul
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
inc
add
ins
add
add
push
add
add
and
inc
add
outs
add
add
add
add
add
and
add
je
jb
popa
add
je
imul
and
outs
add
add
popa
add
add
outs
add
add
add
add
add
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
js
je
jb
popa
add
je
and
jo
jb
outs
add
add
ins
add
and
popa
add
add
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
js
je
jb
popa
add
je
add
add
add
add
add
je
je
add
jo
je
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
and
add
push
add
and
imul
and
add
add
add
jns
je
add
and
imul
jae
imul
add
add
add
data16
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
and
imul
je
push
add
add
popa
add
imul
add
add
add
jne
je
jo
jne
je
inc
add
ins
add
add
add
data16
ins
add
outs
add
ins
add
add
add
and
add
add
imul
outs
add
ins
add
and
arpl
popa
add
and
outs
add
je
and
bound
add
add
jne
ins
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
cmp
and
dec
add
popa
add
add
and
popa
add
add
add
popa
add
add
outs
add
add
add
add
add
outs
add
add
imul
and
daa
add
add
add
jae
and
outs
add
je
and
popa
add
add
popa
add
add
add
add
add
jb
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
and
xor
and
cmp
and
and
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jo
add
add
add
popa
add
imul
add
add
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jb
add
je
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
jb
add
add
add
jb
imul
add
add
jb
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
add
jb
imul
and
ins
add
add
sub
and
data16
ins
add
and
imul
ins
add
jb
imul
add
add
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jo
add
push
add
arpl
imul
add
add
add
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
sub
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
imul
jb
add
add
add
add
add
outs
add
add
add
jp
imul
popa
add
imul
add
add
add
add
inc
add
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
jae
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
add
add
add
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
and
add
add
popa
add
add
add
outs
add
and
jb
add
add
outs
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
add
outs
add
and
and
add
add
add
add
and
jo
popa
add
imul
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
ins
add
outs
add
ins
add
and
and
add
ins
add
add
add
and
add
imul
jae
and
imul
jo
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
jb
popa
add
add
imul
add
inc
add
imul
add
add
add
add
add
add
add
and
inc
add
inc
add
add
popa
add
imul
add
and
popa
add
je
add
and
add
popa
add
imul
and
and
add
add
popa
add
imul
add
add
add
outs
add
je
and
ins
add
imul
add
add
add
imul
and
bound
add
add
outs
add
jb
jne
jo
je
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
cmp
and
push
add
ins
add
jbe
imul
and
daa
add
add
add
jb
outs
add
and
je
push
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
add
push
add
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
add
push
add
outs
add
jb
popa
add
inc
add
ins
add
jae
inc
add
jb
add
inc
add
ins
add
outs
add
inc
add
ins
add
jae
inc
add
jb
add
add
sub
add
inc
add
add
push
add
pop
add
push
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
add
add
inc
add
dec
add
push
add
inc
add
pop
add
add
inc
add
add
inc
add
add
inc
add
dec
add
push
add
inc
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
push
add
push
add
push
add
add
dec
add
dec
add
dec
add
dec
add
push
add
inc
add
add
add
dec
add
dec
add
inc
add
add
dec
add
add
inc
add
add
dec
add
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
push
add
dec
add
add
add
dec
add
dec
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
dec
add
push
add
push
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
cmp
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
cmp
add
add
push
add
inc
add
dec
add
add
dec
add
push
add
inc
add
add
inc
add
add
add
push
add
dec
add
push
add
dec
add
inc
add
dec
add
push
add
add
dec
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
push
add
inc
add
push
add
add
add
dec
add
push
add
add
pop
add
add
dec
add
dec
add
inc
add
add
dec
add
push
add
push
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
push
add
push
add
add
dec
add
add
add
push
add
push
add
add
add
add
inc
add
add
push
add
inc
add
push
add
add
push
add
dec
add
push
add
dec
add
inc
add
add
push
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
add
dec
add
add
inc
add
push
add
inc
add
add
pop
add
add
dec
add
dec
add
dec
add
push
add
add
push
add
push
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
dec
add
pop
add
push
add
push
add
add
dec
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
push
add
add
dec
add
push
add
dec
add
inc
add
add
inc
add
add
push
add
add
inc
add
dec
add
inc
add
add
add
inc
add
push
add
push
add
push
add
add
inc
add
push
add
push
add
add
add
dec
add
push
add
inc
add
dec
add
add
pop
add
push
add
dec
add
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
push
add
push
add
add
dec
add
add
inc
add
push
add
push
add
dec
add
push
add
add
inc
add
inc
add
add
add
add
inc
add
inc
add
push
add
add
add
push
add
push
add
add
add
inc
add
push
add
push
add
push
add
push
add
add
inc
add
push
add
dec
add
dec
add
add
add
push
add
dec
add
add
push
add
add
add
dec
add
push
add
dec
add
add
add
add
push
add
inc
add
inc
add
push
add
add
add
dec
add
add
dec
add
push
add
add
add
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
add
add
push
add
push
add
add
xor
xor
add
add
push
add
push
add
add
add
push
add
dec
add
add
add
add
and
add
add
add
add
and
add
add
and
or
add
add
and
or
and
add
inc
add
outs
add
ins
add
outs
add
add
outs
add
cmp
cmp
push
add
jb
jae
add
outs
add
ins
add
outs
add
add
outs
add
and
inc
add
data16
jne
ins
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
jne
jae
je
outs
add
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
add
add
cmp
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
dec
add
je
add
outs
add
ins
add
add
add
ins
add
add
add
add
add
add
outs
add
and
and
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
daa
add
jnp
daa
add
add
outs
add
outs
add
add
add
jne
je
and
outs
add
and
add
add
outs
add
and
daa
add
daa
add
add
outs
add
outs
add
add
add
add
outs
add
add
js
jo
popa
add
jae
imul
and
data16
jb
and
daa
add
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
inc
add
arpl
add
add
add
add
popa
add
imul
ins
add
add
jne
ins
add
add
and
outs
add
and
jbe
popa
add
imul
ins
add
and
add
jo
popa
add
jae
imul
jae
sub
and
and
add
add
add
add
add
outs
add
je
popa
add
outs
add
and
popa
add
add
jns
arpl
ins
add
arpl
and
jbe
popa
add
imul
ins
add
add
add
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
push
add
jo
ins
add
arpl
add
add
add
add
add
imul
and
daa
add
add
add
add
jnp
jge
add
and
jnp
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
dec
add
imul
outs
add
ins
add
add
je
jb
imul
and
daa
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
push
add
je
dec
add
cmp
and
push
add
je
je
imul
and
and
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
inc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
add
imul
and
imul
and
data16
ins
add
and
and
add
dec
add
imul
ins
add
cmp
and
and
add
jae
and
popa
add
and
imul
popa
add
add
add
imul
add
inc
add
outs
add
inc
add
ins
add
cmp
and
dec
add
add
add
add
outs
add
and
data16
ins
add
and
and
add
add
add
add
add
add
outs
add
add
add
add
jb
imul
bound
ins
add
add
add
dec
add
dec
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
arpl
je
imul
and
and
add
popa
add
and
imul
add
jae
and
and
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
dec
add
jns
jae
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
je
and
and
add
add
add
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
and
add
add
add
jae
and
outs
add
je
and
add
imul
inc
add
dec
add
push
add
push
add
push
add
dec
add
push
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
inc
add
dec
add
dec
add
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
push
add
ins
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
je
and
and
add
add
add
add
add
dec
add
imul
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
jb
jb
outs
add
and
and
add
dec
add
imul
ins
add
cmp
cmp
push
add
je
push
add
ins
add
add
add
add
add
add
add
outs
add
add
jae
and
xor
xor
xor
xor
and
push
add
xor
and
jae
jns
jae
je
add
and
imul
outs
add
je
and
arpl
outs
add
jo
popa
add
add
ins
add
and
ja
imul
and
jbe
arpl
jb
add
add
je
pop
add
cmp
add
add
js
add
add
add
inc
add
add
add
add
add
add
jne
jae
je
and
bound
add
add
outs
add
je
popa
add
add
add
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
dec
add
push
add
jae
je
add
dec
add
push
add
je
push
add
add
add
add
je
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
dec
add
inc
add
outs
jbe
ins
imul
gs
push
and
gs
je
jb
ins
popa
jo
jae
je
push
and
and
add
dec
add
inc
add
imul
pop
add
add
add
push
add
outs
add
add
xor
xor
add
push
add
outs
add
add
add
add
imul
xor
xor
cmp
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
imul
popa
add
add
add
push
add
outs
add
imul
popa
add
xor
xor
add
push
add
outs
add
imul
popa
add
add
add
imul
xor
xor
xor
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
push
add
add
add
add
push
add
outs
add
push
add
xor
xor
add
add
push
add
outs
add
push
add
add
imul
xor
xor
xor
add
and
add
add
jae
push
add
ja
add
push
add
outs
add
add
jae
and
data16
imul
add
and
add
jb
outs
add
and
and
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
inc
add
jns
jae
je
add
dec
add
data16
add
add
imul
gs
xor
add
add
dec
jae
outs
ja
xor
jb
arpl
jae
add
add
add
jb
jae
imul
inc
add
and
data16
imul
add
add
outs
add
imul
and
inc
add
jns
jae
je
add
dec
add
data16
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
ins
add
popa
add
add
add
ins
add
add
outs
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
add
add
add
ins
add
add
outs
add
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
ins
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
dec
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
add
add
add
jb
outs
add
and
and
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
popa
add
add
outs
add
popa
add
add
add
inc
add
add
je
add
jo
add
popa
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
je
dec
add
add
ins
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
inc
add
aas
inc
add
sbb
dec
add
pop
inc
add
inc
add
sbb
push
add
ins
add
jae
push
add
push
add
add
add
push
add
ja
popa
add
add
add
add
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
and
jo
popa
add
imul
add
add
add
imul
and
ja
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
je
and
ins
add
arpl
popa
add
add
outs
add
add
add
add
and
je
push
add
add
popa
add
and
arpl
popa
add
jae
add
add
jb
outs
add
ins
add
ins
add
inc
add
add
popa
add
add
jb
ins
add
add
add
popa
add
add
and
daa
add
add
and
ja
popa
add
and
add
je
add
je
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
add
jne
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
jae
and
ins
add
jae
jae
imul
and
popa
add
add
popa
add
add
add
add
inc
add
and
imul
popa
add
add
add
add
jo
outs
add
popa
add
jns
and
add
jb
add
je
outs
add
jns
and
ja
popa
add
and
add
je
add
je
add
add
add
popa
add
add
add
add
add
add
add
add
js
imul
jae
cmp
and
and
add
add
jae
inc
add
ins
add
cmp
and
and
add
add
jae
push
add
popa
add
add
ins
add
cmp
and
and
add
outs
add
add
outs
add
popa
add
add
add
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
and
ja
popa
add
and
jae
jo
add
imul
add
add
outs
add
add
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
daa
add
add
add
add
add
ins
add
dec
add
jae
je
popa
add
add
je
imul
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
outs
add
add
imul
jae
add
add
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
add
imul
jae
imul
cmp
and
and
add
add
and
dec
add
or
inc
pop
add
and
arpl
outs
add
je
popa
add
outs
add
cmp
or
add
inc
add
outs
add
jb
popa
add
add
add
add
add
je
and
outs
add
and
data16
ins
add
jae
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
jbe
add
jb
imul
jae
push
add
je
push
add
data16
add
inc
add
add
add
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jbe
add
jb
imul
jae
and
ja
imul
and
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
popa
add
add
and
outs
add
add
jb
imul
jae
cmp
and
daa
add
add
add
add
popa
add
imul
add
add
outs
add
popa
add
add
add
jne
je
jo
jne
je
and
data16
ins
add
and
daa
add
add
add
add
add
add
add
js
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
dec
add
ins
add
and
add
jb
cmp
add
add
jb
outs
add
add
je
dec
add
ins
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
push
add
jb
jae
imul
and
add
jb
cmp
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
outs
add
jns
and
je
push
add
popa
add
add
add
imul
and
je
outs
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
je
push
add
popa
add
add
add
outs
add
add
add
je
imul
je
imul
and
data16
ins
add
jae
and
popa
add
add
add
add
and
jae
popa
add
add
add
add
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
jae
add
add
imul
cmp
and
and
add
add
jne
je
jo
jne
je
and
inc
add
ins
add
cmp
and
and
add
popa
add
imul
add
add
outs
add
bound
ins
add
and
je
outs
add
add
imul
and
data16
ins
add
and
and
add
add
popa
add
add
add
add
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
popa
add
imul
add
add
imul
and
and
add
and
data16
ins
add
outs
add
ins
add
and
arpl
outs
add
data16
add
je
jae
and
ja
imul
and
popa
add
outs
add
add
jb
and
data16
ins
add
and
imul
je
push
add
popa
add
imul
add
add
and
popa
add
add
add
popa
add
and
outs
add
je
and
jo
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
push
add
arpl
imul
add
add
add
add
add
add
add
jo
add
imul
and
outs
add
je
jo
jne
je
and
jo
popa
add
imul
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
outs
add
popa
add
imul
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
outs
add
jns
and
outs
add
and
jo
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
imul
and
jo
popa
add
imul
add
add
add
outs
add
je
add
je
jae
add
add
add
outs
add
popa
add
add
add
js
je
jb
popa
add
je
imul
and
add
jb
add
je
outs
add
jns
and
daa
add
add
add
popa
add
and
jo
jb
outs
add
imul
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
imul
add
outs
add
push
add
je
push
add
je
ins
add
add
add
and
add
add
add
add
imul
add
outs
add
push
add
je
inc
add
jb
add
je
imul
add
add
push
add
jae
imul
add
outs
add
push
add
je
dec
add
js
add
add
push
add
jae
imul
add
outs
add
dec
add
arpl
jb
add
add
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
add
add
outs
add
popa
add
add
add
add
ins
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
outs
add
and
add
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
and
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
add
and
add
je
jb
popa
add
je
imul
and
add
imul
and
daa
add
add
add
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
imul
jb
jns
and
pop
add
dec
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
add
add
bound
outs
add
je
add
add
inc
add
dec
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
outs
add
je
and
data16
ins
add
pop
add
add
add
add
ins
add
add
outs
add
je
add
add
add
add
data16
jb
arpl
add
jae
imul
outs
add
add
add
add
add
ins
add
popa
add
jae
dec
add
jae
je
popa
add
add
ins
add
jbe
popa
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
ins
add
arpl
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
outs
add
je
popa
add
add
jb
add
push
add
data16
add
jb
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
je
and
and
add
jae
and
add
outs
add
add
jae
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jne
outs
add
je
imul
and
pop
add
add
add
dec
jae
outs
jb
dec
outs
push
jae
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
add
add
outs
add
and
data16
outs
add
je
imul
and
pop
add
add
add
add
dec
add
jae
push
add
jb
je
dec
add
push
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
je
je
add
jo
je
and
je
outs
add
add
add
add
add
add
jb
popa
add
jns
and
pop
add
add
add
dec
add
dec
add
push
add
push
add
dec
add
add
add
add
add
add
and
data16
jb
jae
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
outs
add
ins
add
add
add
add
imul
outs
add
jb
add
je
and
outs
add
ins
add
add
and
outs
add
and
jo
popa
add
popa
add
add
add
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
outs
add
je
add
jae
add
add
outs
add
jae
pop
add
js
imul
add
add
arpl
outs
add
data16
add
add
ins
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
push
add
je
inc
add
jb
jb
add
je
inc
add
jb
add
je
outs
add
jns
sub
sub
and
data16
imul
add
add
imul
and
add
jb
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
add
add
add
and
add
dec
add
dec
add
inc
add
push
add
add
add
add
ja
popa
add
add
add
outs
add
je
add
add
popa
add
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
popa
add
arpl
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
outs
add
je
imul
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
dec
add
popa
add
add
add
outs
add
je
popa
add
add
jb
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
inc
add
and
imul
outs
add
and
ins
add
outs
add
add
and
jae
jne
jo
jo
outs
add
je
add
add
outs
add
add
add
jae
and
jbe
add
jae
imul
and
outs
add
and
push
add
ja
popa
add
add
add
ins
add
jns
add
add
add
add
add
jae
add
add
ins
add
jns
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
outs
add
outs
add
add
add
and
pop
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
jns
add
add
ins
imul
je
outs
and
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
jae
inc
add
cmp
add
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
add
add
add
outs
add
jae
inc
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
outs
add
je
imul
imul
push
add
arpl
imul
add
add
popa
add
popa
add
add
cmp
and
push
add
popa
add
arpl
push
add
add
and
pop
add
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
add
outs
add
add
add
outs
add
imul
outs
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
inc
add
imul
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
imul
and
je
push
add
add
and
add
jbe
imul
outs
add
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
imul
add
jb
popa
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
outs
add
add
add
add
and
ins
add
popa
add
add
outs
add
imul
outs
add
add
je
add
pop
add
dec
add
pop
add
add
add
pop
add
dec
add
pop
add
and
cmp
add
outs
add
je
imul
sub
add
add
add
add
add
add
add
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
pop
add
push
add
pop
add
add
and
jne
outs
add
popa
add
imul
add
jb
add
add
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
dec
add
add
add
data16
add
add
and
ins
add
popa
add
add
jb
add
ins
add
outs
add
add
add
jae
and
add
jo
je
jns
and
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
daa
add
add
add
jae
and
popa
add
and
jne
outs
add
jne
jo
jo
outs
add
je
add
add
add
imul
jb
jns
and
push
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
add
jb
outs
add
and
je
jb
jns
imul
and
je
outs
add
add
add
add
add
add
imul
jb
jns
and
jbe
popa
add
add
and
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
jb
add
imul
jb
jns
and
jbe
popa
add
add
and
daa
add
add
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
dec
add
push
add
add
add
dec
add
push
add
add
add
dec
add
add
add
add
outs
add
outs
add
ja
outs
add
add
jb
jb
outs
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jb
outs
add
cmp
and
inc
add
jb
outs
add
and
dec
add
jae
jae
popa
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
outs
add
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
add
add
add
outs
add
add
je
imul
and
outs
add
je
and
popa
add
add
outs
add
ins
add
popa
add
and
jbe
popa
add
add
add
add
jb
outs
add
dec
add
add
outs
add
add
outs
add
add
outs
add
add
add
and
jbe
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
cmp
and
inc
add
jae
add
je
and
data16
imul
add
add
add
add
add
and
and
push
add
jae
je
outs
add
add
add
add
je
jne
jb
add
and
add
and
add
add
dec
add
jae
je
popa
add
add
add
add
bound
push
add
ins
add
arpl
je
add
add
add
add
add
je
jne
jb
add
je
push
add
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
je
popa
add
ins
add
add
add
je
push
add
imul
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
add
sub
sub
sub
and
inc
add
add
jne
je
imul
and
and
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
ins
add
jbe
add
ins
add
add
add
add
add
je
je
imul
jae
add
and
and
push
add
jb
jae
imul
and
inc
add
popa
add
add
add
and
add
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jo
popa
add
add
popa
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
outs
add
je
imul
push
add
je
push
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jbe
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
cmp
push
add
jbe
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
and
popa
add
add
ins
add
outs
add
add
add
add
popa
add
je
imul
and
outs
add
and
and
add
outs
add
and
and
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
imul
outs
add
popa
add
add
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
imul
and
jb
add
add
outs
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
popa
add
ins
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
popa
add
ins
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
add
outs
add
and
outs
add
add
popa
add
add
outs
add
add
add
add
push
add
add
outs
add
jb
imul
ins
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
dec
add
imul
popa
add
add
add
add
jns
jae
je
add
and
jae
push
add
add
outs
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
push
add
jo
jo
jb
add
jae
imul
and
popa
add
je
outs
add
popa
add
add
and
jb
add
outs
add
je
sub
and
jo
ins
add
popa
add
add
add
add
outs
add
je
and
je
push
add
popa
add
push
add
and
ins
add
outs
add
popa
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
inc
add
outs
add
je
imul
and
je
push
add
outs
add
je
popa
add
add
jb
and
add
add
add
add
add
add
jne
imul
add
add
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
outs
add
add
add
add
add
dec
add
popa
add
add
add
jne
outs
add
add
outs
add
je
popa
add
add
jb
and
inc
add
je
add
and
push
add
bound
outs
add
je
add
and
and
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
and
add
add
add
add
add
add
outs
add
add
imul
add
add
jo
add
popa
add
add
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
jb
popa
add
jo
add
add
add
and
and
inc
add
ins
add
ins
add
je
add
add
outs
add
add
popa
add
imul
add
add
add
add
outs
add
add
outs
add
and
inc
add
arpl
imul
add
add
jae
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
arpl
popa
add
add
outs
add
and
push
add
add
je
push
add
jno
jne
add
arpl
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
je
imul
and
push
add
add
imul
bound
push
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
add
popa
add
add
add
add
add
push
add
dec
add
and
bound
outs
add
add
add
add
and
jo
popa
add
add
add
outs
add
add
imul
and
jo
popa
add
popa
add
add
add
jae
and
ja
add
add
add
ins
add
je
jns
add
add
je
imul
add
add
imul
add
add
jo
popa
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jae
and
outs
add
je
and
popa
add
add
jne
jo
jo
jo
outs
add
je
add
add
add
popa
add
add
and
add
data16
jne
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
jb
imul
jb
jns
and
dec
add
outs
add
jne
popa
add
add
add
popa
add
add
and
data16
jne
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
js
popa
add
je
and
ins
add
je
arpl
push
add
outs
add
and
push
add
jo
jo
outs
add
je
add
add
add
popa
add
add
sub
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
outs
add
ins
add
jae
push
add
outs
add
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
popa
add
popa
add
add
add
add
add
add
popa
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
inc
add
outs
add
add
ins
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
imul
add
dec
add
popa
add
jne
outs
add
je
imul
jae
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
imul
add
add
add
and
dec
add
popa
add
add
jne
outs
add
je
imul
jae
add
add
add
je
jb
popa
add
je
imul
pop
add
add
add
add
xor
add
popa
add
je
imul
add
add
ins
add
imul
add
popa
add
arpl
add
add
popa
add
je
dec
add
dec
add
ins
add
add
jbe
add
je
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
push
add
inc
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
popa
add
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
add
add
push
add
outs
add
je
imul
push
add
je
push
add
js
jo
popa
add
add
popa
add
add
add
add
add
add
bound
outs
add
je
inc
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
outs
add
add
ins
add
add
add
add
add
je
je
imul
jae
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
jae
je
popa
add
add
add
jb
outs
add
add
je
jae
add
add
inc
add
jae
add
je
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
imul
push
add
add
dec
add
inc
add
add
outs
add
add
dec
add
add
jne
add
arpl
add
add
add
imul
push
add
add
add
push
add
outs
add
push
add
add
add
inc
add
jae
popa
add
ins
add
push
add
add
push
add
add
je
push
add
bound
outs
add
je
add
push
add
bound
outs
add
je
inc
add
add
imul
add
imul
inc
add
imul
jae
add
add
push
add
jo
popa
add
imul
add
arpl
imul
add
add
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
push
add
add
js
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
add
dec
add
add
add
popa
add
outs
add
outs
add
add
inc
add
jb
outs
add
add
inc
add
add
push
add
add
add
add
add
add
imul
jb
jns
add
add
inc
add
ins
add
je
add
add
add
outs
add
add
push
add
jbe
add
add
add
outs
add
add
dec
add
jae
push
add
je
je
imul
add
add
inc
add
je
push
add
je
je
imul
inc
add
add
add
add
je
je
imul
add
add
inc
add
dec
add
add
popa
add
add
outs
add
add
outs
add
ins
add
add
add
push
add
ins
add
popa
add
add
add
add
add
add
add
add
ins
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
jb
imul
and
arpl
outs
add
jo
ins
add
je
add
and
jae
je
popa
add
je
imul
and
arpl
ins
add
popa
add
sub
add
add
add
outs
add
je
jae
je
jb
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
je
jae
je
jb
popa
add
and
je
push
add
add
and
jae
arpl
jb
imul
add
inc
add
ins
add
push
add
jb
jae
imul
add
inc
push
push
dec
push
cmp
push
outs
popa
bound
je
and
fs
je
and
jae
jne
arpl
and
jae
jb
jno
imul
and
je
jae
popa
outs
and
ins
jns
and
je
jae
popa
jb
and
popa
imul
inc
js
outs
and
and
jb
gs
outs
outs
imul
popa
and
outs
jb
and
and
je
jo
jb
or
add
add
add
outs
add
inc
add
ins
add
dec
add
data16
pop
add
add
and
add
pop
add
add
add
add
jb
imul
push
jb
outs
jae
popa
je
outs
outs
add
add
and
add
add
add
add
add
add
add
add
outs
jbe
ins
imul
gs
imul
inc
dec
outs
je
jne
jo
jb
gs
js
gs
imul
gs
outs
jb
inc
js
gs
imul
inc
inc
js
gs
imul
dec
add
add
add
inc
add
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
ret
dec
add
inc
add
sbb
inc
add
inc
add
sbb
add
dec
add
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
push
les
test
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
inc
dec
ins
gs
js
gs
imul
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
sbb
fs
add
sbb
inc
add
sbb
push
sbb
clc
les
inc
sbb
inc
add
inc
add
dec
bound
arpl
ror
mov
dec
add
ror
movs
ror
mov
dec
add
dec
add
dec
add
dec
add
add
(bad)
inc
add
jb
push
js
gs
imul
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
loopne
dec
add
sbb
(bad)
and
push
sbb
inc
dec
popa
jo
je
imul
jb
outs
add
enter
push
das
inc
add
xor
inc
push
je
imul
add
inc
dec
add
add
(bad)
inc
add
add
add
add
dec
add
aaa
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
xchg
xor
mov
xor
inc
add
add
xor
add
xor
jns
inc
add
ss
add
xor
add
aaa
inc
add
(bad)
dec
add
ss
add
sbb
inc
add
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
arpl
je
outs
outs
and
outs
ja
and
and
je
jne
je
jb
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
gs
je
arpl
add
in
(bad)
dec
add
cmp
inc
add
dec
add
and
aaa
cmp
inc
add
cmp
inc
add
(bad)
dec
add
inc
inc
add
add
outs
inc
add
cmp
pop
cmp
inc
add
xchg
inc
add
cmp
inc
cmp
ins
cmp
push
inc
inc
add
and
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
outs
je
data16
imul
add
jne
jae
add
xor
xor
add
add
add
add
imul
add
je
je
imul
jae
add
add
push
add
add
imul
push
add
add
jae
add
add
ror
movs
add
add
inc
add
add
add
add
add
add
add
inc
add
dec
dec
add
add
add
add
add
add
add
add
inc
loope
add
add
add
inc
add
add
add
(bad)
(bad)
call
loope
add
loope
add
add
repnz
add
add
add
add
loope
add
loope
add
add
add
inc
add
arpl
popa
je
inc
arpl
js
add
add
je
jbe
je
inc
arpl
js
add
ins
gs
jae
inc
arpl
js
add
inc
jb
popa
je
inc
arpl
js
add
add
inc
add
dec
add
dec
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
js
jo
ins
add
jb
add
add
dec
add
push
add
outs
add
add
outs
add
add
jbe
add
add
add
push
add
jae
je
jb
imul
push
add
outs
add
add
outs
add
add
add
outs
add
add
je
inc
add
jae
arpl
outs
add
outs
add
arpl
je
add
add
dec
add
push
add
arpl
add
je
inc
add
arpl
jae
dec
add
jae
je
outs
add
jns
add
dec
add
inc
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
add
add
jb
imul
add
add
outs
add
outs
add
add
add
add
add
jb
imul
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
outs
add
add
add
add
add
add
outs
add
ins
add
arpl
add
inc
add
jb
add
dec
add
inc
add
arpl
imul
add
je
je
outs
add
add
add
dec
add
inc
add
ins
add
dec
add
jne
add
cwde
enter
dec
inc
add
push
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
dec
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
push
inc
add
mov
jp
inc
add
mov
scas
dec
inc
add
dec
inc
add
inc
add
inc
add
ss
add
inc
add
add
add
dec
inc
add
cs
add
add
test
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
outs
add
add
add
add
add
add
add
add
outs
add
je
jb
outs
add
add
popa
add
add
add
add
imul
add
jo
pop
add
add
outs
add
jb
arpl
add
add
popa
add
add
add
add
je
jns
je
ins
inc
gs
jne
je
dec
dec
popa
outs
addr16
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outs
addr16
add
add
and
add
add
add
add
imul
add
mov
add
add
inc
add
add
add
add
dec
add
pop
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
push
inc
add
add
add
add
add
ins
cmp
das
add
outs
add
add
inc
inc
outs
outs
je
add
inc
inc
imul
add
inc
push
popa
imul
add
inc
push
imul
add
add
ins
imul
add
inc
inc
inc
add
jae
jb
js
gs
imul
gs
jne
arpl
js
gs
imul
dec
add
add
add
inc
add
add
add
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
add
add
inc
add
dec
add
add
add
(bad)
inc
add
add
add
dec
dec
add
dec
add
add
(bad)
inc
add
add
add
dec
dec
add
add
add
inc
add
add
add
dec
dec
add
dec
add
add
add
inc
add
inc
dec
add
dec
add
add
add
inc
add
add
add
dec
add
dec
add
add
add
inc
add
add
add
dec
add
inc
add
fs
add
sbb
inc
add
inc
add
sbb
add
dec
add
pop
inc
add
sbb
inc
add
inc
add
sbb
add
add
push
retf
adc
add
addr16
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
pop
inc
add
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
retf
sbb
push
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
dec
add
pop
inc
add
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pop
inc
add
push
add
sbb
dec
add
outs
inc
add
dec
add
int3
dec
add
jae
add
int3
dec
add
je
add
int
add
int
add
add
ins
add
je
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
add
add
add
add
add
add
int
add
je
add
jle
add
jg
add
inc
add
mov
inc
add
add
add
add
add
add
into
dec
add
jle
add
jg
add
inc
add
mov
inc
add
add
push
push
add
lods
push
dec
add
add
inc
add
add
add
ror
fild
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
scas
test
imul
inc
add
add
xchg
mov
mov
jbe
inc
add
inc
imul
(bad)
call
dec
add
add
add
inc
add
add
add
add
dec
add
nop
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
mov
mov
lea
cwde
lea
mov
inc
add
mov
add
inc
add
mov
inc
mov
test
inc
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
arpl
gs
add
imul
je
outs
outs
add
adc
adc
add
(bad)
inc
add
add
add
inc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
dec
add
add
adc
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
gs
add
add
dec
add
add
dec
add
add
add
ror
xlat
jg
add
scas
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
test
inc
add
inc
add
xchg
inc
add
xchg
inc
add
stos
inc
add
inc
add
inc
add
cmps
inc
add
xchg
inc
add
add
sbb
dec
add
xchg
inc
add
add
sbb
inc
dec
cmp
push
gs
gs
jae
dec
popa
outs
popa
addr16
gs
outs
arpl
add
ins
add
arpl
ins
add
add
add
add
add
add
add
add
inc
add
mov
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
mov
add
mov
inc
add
inc
add
inc
add
lods
inc
add
inc
add
scas
inc
add
cmps
inc
add
add
add
test
add
test
inc
add
lahf
inc
add
inc
add
ror
dec
stos
inc
add
scas
inc
add
inc
add
add
retf
add
add
lods
ror
aas
test
inc
add
inc
add
inc
add
retf
movs
retf
movs
retf
jp
inc
add
test
inc
add
retf
mov
cdq
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
cdq
dec
add
add
add
call
add
add
loopne
dec
add
add
add
pushf
dec
add
add
add
add
add
(bad)
(bad)
push
int
adc
adc
fs
add
dec
add
std
(bad)
inc
add
cmp
(bad)
call
add
add
std
(bad)
inc
add
add
std
(bad)
inc
add
add
std
(bad)
dec
add
add
add
add
std
(bad)
inc
add
ss
(bad)
inc
and
xchg
and
stos
add
push
mov
retf
inc
add
adc
xor
sbb
push
add
jae
sbb
into
adc
inc
ja
push
cmp
sbb
into
adc
inc
ja
mov
jae
sbb
into
adc
inc
ja
add
sub
adc
inc
ja
cmp
dec
add
add
fld
pop
leave
inc
add
test
inc
add
add
leave
inc
add
aam
add
inc
add
inc
add
inc
add
retf
movs
retf
(bad)
in
add
retf
mov
aad
add
retf
pushf
in
add
retf
mov
inc
add
inc
add
aad
add
retf
sbb
inc
add
inc
add
(bad)
dec
add
retf
inc
add
xchg
inc
add
xchg
inc
add
test
inc
add
inc
add
jmp
inc
add
jmp
call
add
xchg
inc
add
lock
add
icebp
inc
add
icebp
inc
add
repnz
add
repz
add
int
add
xchg
inc
add
xchg
inc
add
repz
add
hlt
inc
add
inc
add
sub
adc
inc
ja
rol
add
add
inc
or
add
add
add
rol
add
add
inc
xor
jae
sbb
into
adc
inc
ja
add
add
or
dec
add
fld
test
fld
movs
retf
and
inc
add
leave
inc
add
fld
test
inc
add
inc
add
retf
in
fiadd
push
fild
xor
inc
add
fild
repnz
push
loopne
add
inc
add
in
add
add
inc
add
loope
add
inc
add
inc
add
fild
jge
inc
add
add
add
dec
add
jg
add
sbb
loopne
dec
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
inc
add
inc
add
xchg
inc
add
xchg
inc
add
rol
loopne
inc
add
fiadd
cmp
inc
add
les
or
inc
add
lds
lds
add
add
mov
mov
mov
ret
add
enter
enter
fiadd
clc
fiadd
xor
inc
add
inc
add
enter
fild
fild
push
cmovae
inc
fadd
popa
aad
add
rol
sbb
inc
add
mov
and
inc
dec
gs
inc
imul
pop
dec
add
add
add
inc
add
add
add
add
add
sub
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
sub
cmp
inc
add
sub
fisubr
inc
add
xor
fld
inc
add
sub
loopne
inc
add
sub
(bad)
sub
cli
sub
jg
inc
add
sub
inc
push
outs
add
add
add
add
(bad)
(bad)
(bad)
inc
data16
push
add
add
add
add
jne
add
add
inc
add
js
inc
add
outs
add
add
ins
add
popa
add
cmp
xor
jae
jne
add
inc
add
js
dec
add
add
jb
popa
add
add
add
add
jne
add
inc
add
js
inc
add
popa
add
add
jb
push
add
add
cmp
xor
jae
jne
add
add
inc
add
js
dec
add
add
outs
add
je
jb
outs
add
add
add
jne
add
inc
add
js
dec
add
add
outs
add
add
outs
add
xor
xor
xor
add
add
fs
add
pop
dec
add
pop
dec
add
add
inc
add
dec
inc
add
add
add
add
add
je
outs
outs
imul
inc
add
je
outs
outs
imul
push
add
jne
inc
imul
gs
arpl
push
add
jne
inc
imul
outs
outs
imul
outs
imul
push
outs
imul
dec
outs
outs
imul
push
arpl
outs
outs
imul
push
imul
add
je
jns
je
ins
dec
gs
imul
push
add
inc
add
xor
xor
add
add
inc
dec
push
push
dec
inc
pop
add
arpl
arpl
push
add
jb
add
je
add
popa
add
arpl
inc
add
imul
inc
add
jne
outs
add
add
arpl
arpl
inc
add
imul
add
add
popa
add
arpl
dec
add
ins
add
add
popa
add
arpl
push
add
ins
add
add
add
add
arpl
arpl
inc
add
jae
arpl
jb
imul
imul
add
add
popa
add
arpl
push
add
ins
add
add
popa
add
arpl
push
add
add
add
add
add
arpl
arpl
dec
add
ins
add
add
popa
add
arpl
dec
add
ins
add
push
add
jo
imul
add
popa
add
arpl
dec
add
jns
bound
outs
add
jb
add
push
add
add
je
add
popa
add
arpl
inc
add
arpl
jne
jae
add
add
popa
add
arpl
push
add
ins
add
arpl
je
imul
add
add
popa
add
arpl
inc
add
data16
jne
ins
add
add
je
imul
add
add
popa
add
arpl
push
add
ins
add
arpl
je
add
popa
add
arpl
dec
add
arpl
popa
add
add
outs
add
add
arpl
arpl
dec
add
jbe
imul
je
add
add
arpl
arpl
dec
add
je
push
add
jae
je
add
add
popa
add
arpl
inc
add
inc
add
data16
jne
ins
add
add
je
imul
add
add
(bad)
(bad)
xor
inc
add
add
inc
inc
add
inc
inc
add
aaa
inc
add
aaa
inc
add
inc
inc
add
inc
add
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
add
dec
add
dec
inc
add
dec
inc
add
inc
add
cmp
push
fimul
xor
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
jbe
add
jg
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
inc
add
cmp
pop
cmp
and
inc
add
inc
add
aaa
inc
add
xchg
cmp
adc
cmp
jp
mov
inc
nop
xor
and
add
outs
imul
inc
outs
outs
je
outs
ins
jae
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
add
ins
ins
dec
gs
jo
add
add
arpl
outs
arpl
add
dec
add
inc
add
addr16
add
addr16
add
retf
sub
dec
add
addr16
add
addr16
add
addr16
add
pusha
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
popa
inc
add
pusha
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
inc
add
pusha
inc
add
pusha
inc
add
inc
add
dec
add
add
add
add
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
adc
add
add
add
rol
add
add
inc
and
xor
xor
aaa
add
add
add
add
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
gs
popa
data16
imul
add
pop
add
popa
dec
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
push
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
popa
inc
add
add
add
add
pop
inc
add
add
add
add
add
push
inc
add
add
add
add
add
bound
and
add
sbb
add
lea
add
add
sub
add
ins
push
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
add
lods
fs
add
add
pop
add
add
push
inc
add
add
add
je
add
add
add
add
add
add
push
add
add
inc
inc
add
add
push
add
add
fs
add
rol
sbb
add
pop
inc
add
add
add
add
add
push
inc
add
outs
add
ins
add
je
jb
ins
add
inc
add
popa
add
dec
add
jae
je
dec
add
add
add
add
ins
fs
popa
jb
gs
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
fs
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
gs
add
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
clts
add
add
fs
add
add
add
inc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
cmp
add
das
or
inc
add
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcr
dec
add
fisttp
and
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
loopne
add
dec
add
add
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
loopne
add
loopne
add
loopne
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
loope
add
dec
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
loope
add
loope
add
dec
add
dec
add
dec
add
dec
add
dec
add
loop
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
loop
add
dec
add
dec
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
in
add
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
in
add
add
add
dec
add
dec
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
dec
add
in
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
dec
add
out
add
dec
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
dec
add
dec
add
out
add
out
add
out
add
out
add
out
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
dec
add
out
add
out
add
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
add
