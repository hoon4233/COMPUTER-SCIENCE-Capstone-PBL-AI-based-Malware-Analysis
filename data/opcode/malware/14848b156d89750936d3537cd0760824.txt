(bad)
call
mov
mov
jl
push
sahf
jnp
push
sahf
arpl
add
pop
mov
clc
mov
stos
and
mov
jae
pop
fdivrp
rcr
jae
sar
push
(bad)
shl
jnp
sub
push
int
sahf
push
add
adc
sar
jnp
adc
jae
lea
inc
push
push
mov
neg
lock
sub
adc
in
and
xor
arpl
mov
or
pop
out
test
xor
jg
cmp
mov
pop
mov
jp
clc
jae
inc
sub
mov
dec
xor
pop
mov
iret
neg
cli
mov
xor
out
dec
not
dec
test
or
fld
ficom
jae
pop
aaa
jg
fld
cld
repnz
into
push
mov
sar
lahf
jge
xor
push
xor
shr
lahf
jge
sbb
sbb
dec
inc
sbb
neg
dec
data16
not
pop
sbb
dec
inc
sbb
xor
add
sub
stos
add
cs
push
jp
fisub
mov
lea
fsub
mov
and
cdq
inc
mov
fnstcw
jnp
int3
clc
repnz
xor
movs
out
cld
(bad)
rol
jnp
push
int3
clc
ret
adc
movs
inc
inc
ss
es
stos
sbb
or
or
shl
pop
stos
ret
mov
mov
neg
js
xor
jae
fnstcw
call
jge
out
clc
jae
pop
mov
and
push
mov
sbb
neg
cwde
rcr
inc
mov
dec
or
div
cmp
inc
sbb
jae
sahf
mov
jae
add
out
jne
xchg
ret
mov
mov
jae
pop
push
fwait
push
jbe
xor
xor
jb
pop
mov
jae
pop
mov
mov
xor
arpl
jg
jae
pop
cmp
jg
push
and
data16
adc
cmc
adc
div
mov
jae
jle
xor
xor
pop
mov
mov
jb
xor
movs
(bad)
push
inc
sbb
xor
rcr
fwait
scas
sub
mov
(bad)
cmps
mov
psadbw
mov
stc
mov
jae
rcr
out
mov
jae
or
and
ror
sbb
sar
add
cli
xor
mov
sbb
xor
repz
jp
xor
mov
or
pop
xor
neg
mov
das
mov
sbb
xlat
aas
xchg
inc
and
xlat
aas
mov
inc
and
pop
jmp
jae
lods
shl
retf
not
ds
push
jmp
lods
jb
pop
cmp
neg
jbe
call
neg
lock
mov
inc
mov
loope
xor
mov
and
pop
push
xor
jnp
inc
and
inc
and
mov
sbb
movs
iret
jg
das
mov
dec
and
mov
jnp
jae
lods
into
ja
call
or
jmp
push
or
xor
outs
and
ja
call
sbb
neg
cwde
cli
rol
adc
inc
mov
in
xor
or
int3
(bad)
jae
pop
jg
xchg
mov
aaa
or
shr
pop
mov
jg
das
mov
scas
and
test
imul
or
cmps
sbb
movs
iret
arpl
das
inc
fwait
mov
mov
push
or
mov
sbb
sbb
mov
repnz
push
add
xor
mov
popf
dec
jge
inc
cli
mov
xor
sbb
push
cli
mov
inc
jbe
out
clc
jae
aas
dec
jae
aas
inc
jae
xor
test
pop
inc
cli
mov
xor
push
lods
fist
mov
inc
jbe
out
clc
jae
movs
push
dec
jge
inc
jb
shr
jnp
in
jno
in
dec
iret
mov
jb
ror
movs
cli
repz
push
packsswb
out
inc
mov
iret
jbe
pop
inc
cwde
into
(bad)
mov
ror
movs
cli
repz
push
packsswb
inc
movs
dec
aaa
fnstenv
mov
xchg
das
inc
dec
mov
mov
mov
inc
jae
add
out
cli
adc
mov
dec
sbb
mov
shl
arpl
fild
or
cmp
or
mov
(bad)
mov
xor
(bad)
sar
movs
cli
repz
push
packsswb
pushf
aas
jb
movs
inc
jae
ins
xor
stos
xor
(bad)
shr
jb
movs
inc
xor
test
cdq
jge
inc
mov
movs
xor
or
xchg
xor
mov
jae
fistp
sub
jg
cmp
jge
mov
mov
or
or
ss
dec
xchg
mov
dec
push
adc
jae
rol
jnp
mov
adc
or
mov
mov
mov
fwait
inc
ins
fist
js
xor
xor
sbb
lods
mov
imul
dec
mov
dec
push
sbb
call
test
jae
mov
dec
jmp
jg
pop
inc
push
mov
mov
mov
cwde
xor
or
cwde
shl
xor
(bad)
loopne
ds
dec
jmp
aaa
lods
push
mov
pop
jnp
jmp
add
mov
cwde
(bad)
loop
cld
dec
sub
ins
mov
cs
xor
sar
jnp
pop
mov
cli
mov
xor
add
dec
cli
mov
in
lods
xchg
jns
jg
cmp
jge
stos
clc
stos
dec
jge
or
dec
jg
inc
mov
cs
xor
ror
jmp
dec
jg
xchg
cmp
stos
dec
es
push
arpl
push
sar
(bad)
jg
inc
cli
mov
dec
push
push
sar
cmp
inc
ss
out
cli
adc
in
and
das
mov
sbb
rcl
ja
loope
neg
jbe
out
clc
jae
das
mov
test
clc
jae
mov
mov
movs
xor
or
(bad)
jg
or
mov
mov
or
push
or
inc
mov
fnstcw
test
rcr
movs
or
clc
stos
push
add
cli
push
pop
inc
cli
xor
iret
jae
sar
xor
jae
or
push
(bad)
xor
pop
neg
ja
pop
xor
(bad)
pop
mov
(bad)
jg
in
lods
xchg
jns
jg
jmp
mov
in
outs
icebp
jg
mov
mov
shl
shl
jmp
mov
or
clc
out
movs
jmp
xchg
jg
inc
cli
xor
in
lods
xchg
jns
jg
cmp
jge
mov
jae
in
aaa
jg
mov
push
neg
fdiv
xor
jae
pop
dec
and
mov
add
pop
xor
neg
mov
xor
sub
pop
shl
pop
aaa
ss
or
xchg
cli
xor
push
es
pop
push
jp
das
mov
push
fnstcw
cmps
xor
nop
mov
xor
ins
xor
dec
scas
jae
pop
mov
test
sar
xchg
jg
mov
ss
xchg
call
cli
cwde
stc
or
jnp
movs
inc
sub
aam
neg
mov
add
mov
dec
push
jb
mov
add
pop
jmp
aas
stos
xor
mov
(bad)
mov
inc
mov
pop
into
je
jg
(bad)
mov
mov
jae
pop
mov
jb
mov
jg
and
xor
loop
sub
pop
dec
nop
jg
bound
shl
pop
out
sti
shl
in
jnp
test
cmp
stc
clc
jae
fist
mov
movs
mov
mov
movs
jmp
pop
mov
xchg
mov
aaa
not
movs
inc
mov
movs
cmp
neg
jg
jg
shl
mov
jae
lods
pop
cli
jae
inc
lea
sar
mov
jmp
or
dec
or
cmp
add
not
pop
mov
jae
fbld
push
push
pop
cmp
out
clc
jae
movs
mov
stos
test
xor
add
cmovb
mov
cmovb
mov
xor
sar
mov
popf
neg
jae
pop
iret
jae
add
stos
fild
call
push
sar
fwait
push
es
xor
xlat
inc
jne
stos
cli
adc
mov
(bad)
jge
mov
mov
clc
leave
movs
in
push
jg
inc
repnz
push
jp
lods
xor
shl
mov
clc
into
movs
scas
dec
neg
jae
pop
inc
jp
das
xchg
lods
pop
cli
jae
inc
lea
sar
jae
inc
lea
or
out
push
sbb
in
pop
mov
jp
das
scas
mov
es
xor
movs
inc
jae
sar
jg
fbld
or
xchg
stos
jg
cmp
stc
clc
jae
cs
push
clc
jae
ror
ss
sar
xchg
pop
inc
jl
jno
mov
fstp
jae
or
lods
xchg
jns
jg
cmp
dec
js
pusha
(bad)
inc
jb
sar
add
dec
cli
push
jae
cli
xor
fisttp
jbe
mov
fbstp
jae
pop
mov
or
or
jae
ror
add
lahf
jae
mov
cli
push
jae
cmp
stos
push
xchg
sar
jnp
push
mov
jnp
outs
into
ja
aas
inc
jae
pop
mov
mov
mov
xor
mov
pop
neg
mov
fist
(bad)
pop
mov
xor
pop
push
out
add
mov
xchg
cmps
mov
cli
xor
(bad)
(bad)
imul
out
shl
ds
xor
mov
repnz
fisttp
aam
inc
inc
push
sar
sub
das
mov
jnp
pop
mov
and
mov
repnz
lds
sbb
ss
fiadd
inc
or
mov
pop
stc
movs
iret
jnp
push
xor
mov
sbb
jg
xchg
mov
shl
pop
shl
pop
shl
pop
mov
in
mov
push
inc
xchg
cli
mov
shl
pop
shl
mov
add
pop
xor
(bad)
sar
movs
cli
repz
push
psrlq
not
test
push
leave
retf
xor
sbb
xor
mov
inc
push
push
mov
add
pop
cmp
das
inc
fwait
loop
mov
mov
dec
idiv
sbb
mov
jle
stos
mov
mov
jae
rcl
jae
sar
xchg
movs
inc
(bad)
jae
inc
lea
or
or
call
jg
xchg
stos
jg
shl
or
sub
neg
idiv
movs
inc
mov
cmps
jne
pop
jmp
or
or
cmp
stc
clc
jae
cs
add
xlat
aas
xchg
or
xor
or
dec
or
mov
sub
imul
movs
inc
mov
pop
xor
push
movs
inc
mov
addr16
ss
jns
mov
mov
sub
pop
mov
lea
or
out
push
sbb
and
sar
(bad)
jg
mov
or
imul
push
mov
xor
movs
btr
movs
inc
fwait
shl
mov
xor
inc
mov
jbe
or
mov
jae
xlat
aas
int
movs
inc
and
sbb
test
dec
or
mov
stc
fild
neg
lock
in
lea
pop
mov
outs
pop
mov
mov
movs
mov
jae
xor
jae
fild
or
inc
mov
mov
xor
into
inc
movs
inc
mov
dec
nop
jg
push
mov
movs
xor
or
jae
fiadd
les
inc
lea
sbb
(bad)
jae
inc
lea
or
and
mov
jae
sahf
mov
inc
fisttp
mov
movs
jl
repz
xor
pop
cmp
inc
movs
inc
mov
fld
jae
fistp
pop
add
stos
pop
mov
fisttp
movs
inc
cli
xor
mov
sbb
div
cmp
neg
push
pushf
pop
sar
dec
cmps
inc
lea
or
inc
lock
mov
pop
mov
(bad)
or
sbb
xor
mov
shl
push
sbb
mov
mov
or
shl
jecxz
xor
xlat
pop
mov
movs
inc
and
stos
dec
mov
fnstcw
retf
movs
inc
jae
cs
jae
inc
lea
pop
mov
sbb
clc
jae
or
xor
mov
xchg
movs
cmp
neg
push
pushf
pop
ror
adc
mov
lea
or
inc
lock
mov
pop
mov
(bad)
or
repnz
xor
jae
or
xor
mov
xchg
movs
cmp
neg
push
pushf
pop
ror
adc
mov
lea
or
inc
lock
mov
pop
mov
(bad)
or
sbb
xor
xchg
mov
shl
push
sbb
mov
mov
or
jge
inc
movs
inc
mov
pop
mov
lock
mov
jae
inc
dec
mov
fnstcw
retf
movs
inc
jae
cs
jae
inc
lea
pop
mov
sbb
or
xor
mov
xchg
movs
cmp
neg
aaa
pushf
pop
ror
adc
mov
lea
or
inc
lock
mov
pop
mov
sbb
out
mov
movs
in
fwait
dec
scas
inc
mov
mov
or
jge
inc
movs
inc
mov
pop
mov
inc
neg
into
inc
movs
inc
mov
das
lods
mov
sub
xor
pop
aaa
test
inc
mov
movs
jecxz
out
mov
jb
push
sbb
idiv
faddp
mov
xor
xor
inc
mov
movs
mov
jae
or
movs
inc
mov
movs
inc
and
inc
and
sar
(bad)
call
mov
mov
movs
jmp
or
dec
or
xor
jne
inc
jae
fild
neg
(bad)
and
bound
sar
push
mov
or
into
dec
movs
inc
mov
push
xor
neg
repnz
cmp
neg
inc
mov
pop
jge
inc
movs
inc
mov
pop
mov
mov
movs
jmp
or
imul
movs
inc
mov
inc
cmp
jnp
outs
mov
movs
jmp
fistp
mov
movs
jmp
pop
mov
jp
push
aas
and
pop
mov
lea
or
mul
movs
inc
mov
mov
(bad)
jg
mov
or
mul
pop
mov
mov
movs
jmp
or
dec
or
mov
xor
cmc
pop
mov
lea
or
imul
movs
inc
mov
bound
ss
bound
sar
mov
mov
test
movs
inc
cli
xor
movs
inc
and
push
mov
movs
jmp
pop
inc
jp
push
aas
add
lods
cmp
test
mov
cmp
push
movs
inc
mov
movs
jnp
cmps
cli
sti
jae
fild
or
mov
lock
mov
lea
pop
push
popa
cmc
pop
mov
push
neg
stos
mov
aaa
test
inc
mov
pop
aaa
test
inc
mov
pop
cmp
movs
inc
mov
pop
xor
sbb
and
movs
inc
mov
movs
inc
lock
xchg
dec
pop
mov
inc
inc
lea
fst
jg
add
pop
mov
fwait
or
and
sar
(bad)
ja
dec
and
pop
mov
stc
fistp
jno
pop
cmp
pop
movs
inc
mov
xlat
aas
fisttp
movs
inc
and
sar
ror
movs
inc
and
inc
addr16
pop
mov
(bad)
ja
mov
neg
mov
(bad)
jno
pop
aaa
not
inc
mov
movs
inc
and
inc
and
sar
(bad)
dec
add
jae
lods
pop
cli
jae
inc
lea
sar
mov
mov
fisttp
movs
inc
jae
mov
jae
xor
jae
shl
adc
movs
inc
cli
xor
movs
inc
mov
pop
xor
pop
movs
inc
mov
ret
movs
aaa
div
inc
mov
movs
inc
lock
xchg
dec
pop
mov
inc
inc
lea
fst
jg
add
pop
mov
fisttp
movs
inc
and
gs
and
sar
(bad)
ja
and
mov
stc
(bad)
jb
pop
cmp
jle
inc
mov
xlat
aas
sti
or
xor
sar
test
bound
retf
pop
mov
(bad)
call
mov
mov
movs
mov
jae
xlat
aas
adc
movs
inc
and
inc
mov
xor
movs
in
push
jg
inc
retf
addr16
mov
imul
cdq
cmp
or
imul
fld
adc
movs
inc
jnp
fbstp
neg
into
sahf
movs
inc
mov
push
ds
pop
mov
mov
or
sahf
movs
inc
mov
ror
fnstcw
jg
std
cli
dec
push
inc
mov
fisttp
rcr
repz
add
or
idiv
mov
mov
movs
mov
ja
out
push
mov
movs
aaa
test
inc
mov
pop
aaa
test
inc
mov
pop
cmp
sar
jnp
inc
lea
fnstenv
mov
xchg
das
inc
cli
jae
inc
lea
movs
(bad)
or
inc
mov
or
test
inc
mov
mov
and
xchg
shl
fnstcw
pushf
pop
aaa
test
inc
mov
pop
aaa
test
inc
mov
pop
cmp
sar
dec
rol
or
jae
fistp
mov
movs
jmp
ret
imul
inc
lea
sar
jae
inc
lea
sar
xlat
or
lea
push
cmp
movs
inc
clc
jae
inc
lea
or
inc
or
clc
jae
inc
lea
or
inc
or
mov
inc
lea
sar
xchg
or
lea
push
cmp
dec
stos
inc
lea
pop
iret
je
fild
or
(bad)
cli
xor
movs
inc
and
inc
and
or
mul
movs
inc
mov
push
add
mov
fisttp
movs
inc
cli
xor
movs
inc
jae
push
xor
and
mov
movs
inc
mov
push
xor
sub
mov
pop
mov
fisttp
movs
inc
cli
xor
movs
inc
and
inc
and
or
jns
jg
ror
xor
arpl
pop
mov
push
neg
jae
mov
and
popf
call
jge
pop
cli
push
lods
pop
cli
mov
xor
push
rol
xchg
xor
inc
jae
pop
mov
inc
neg
sub
pop
mov
jae
sahf
mov
mov
cmp
mov
mov
retf
push
imul
push
sub
(bad)
xchg
xor
inc
mov
movs
inc
cwde
rcr
mov
mov
aas
push
mov
add
cs
div
inc
mov
movs
in
lods
retf
xor
push
sbb
pop
mov
jae
rcr
mov
out
cli
push
imul
xor
(bad)
mov
shl
pop
rcr
mov
fwait
cmp
jg
in
fwait
sbb
mov
jae
lods
pop
cli
mov
xor
rcr
sbb
and
scas
and
xchg
mov
sub
jae
test
push
repnz
mul
xor
dec
xchg
jg
inc
cli
aaa
fstp
jae
jg
in
mov
mov
xor
pop
jge
sbb
sti
jae
pop
mov
jg
pop
jge
mov
sti
jae
pop
mov
stc
idiv
cli
jmp
and
not
jl
fnstsw
jae
pop
mov
mov
jae
jle
jecxz
sbb
xor
sbb
hlt
pop
mov
xor
imul
jp
out
adc
xchg
repnz
add
dec
imul
mov
in
mov
cli
test
bound
jae
pop
cli
jmp
push
out
mov
mov
jae
pop
inc
jbe
(bad)
ja
test
(bad)
hlt
pop
mov
xor
mov
jno
pop
inc
jbe
out
clc
jae
pop
mov
pop
icebp
imul
pop
mov
jae
lods
pop
cli
mov
xor
mov
stos
shl
dec
sub
div
dec
jbe
(bad)
repnz
jo
pop
cmp
jbe
mov
call
mov
pop
icebp
imul
pop
mov
in
mov
mov
ds
jb
aaa
cli
cli
jmp
mov
mov
pop
mov
pop
icebp
imul
pop
mov
in
mov
mov
jae
popf
mov
jno
pop
mov
mov
pop
mov
pop
icebp
imul
pop
mov
mov
out
(bad)
hlt
popf
mov
jno
pop
mov
mov
pop
into
(bad)
mov
inc
jbe
(bad)
jg
mov
out
(bad)
mov
mov
neg
lahf
imul
jb
bound
jb
sar
sti
inc
and
sahf
neg
rcr
(bad)
sti
jae
call
div
sbb
outs
sbb
xor
mov
jae
pop
sbb
repz
jae
pop
inc
jbe
out
clc
jae
pop
sub
pop
mov
jae
(bad)
mov
imul
xor
mov
mov
jae
call
sti
inc
and
adc
pop
mov
fwait
jg
xor
cmps
cli
clc
jae
in
mov
jp
es
lock
push
lds
aas
jecxz
sbb
jae
sbb
or
movs
sahf
div
in
clc
jae
push
mov
cwde
shl
cwde
fsincos
push
out
mov
mov
jae
js
jbe
(bad)
ja
jmp
neg
jle
(bad)
mov
mov
ss
jb
pop
xor
or
(bad)
mov
dec
jbe
(bad)
mov
ds
pop
mov
jae
sub
xor
shl
pop
sar
cmp
vcvtsi2sd
xor
jg
jae
pop
xor
add
jbe
sti
clc
jae
mov
mov
mov
xchg
jb
mov
test
push
sub
mul
mov
neg
xchg
jg
push
cli
aaa
push
or
add
jae
pop
iret
js
push
and
neg
jnp
sbb
xor
pop
iret
data16
dec
jae
push
cmp
add
jne
mov
mov
mov
test
das
sahf
repz
inc
and
mov
jg
cld
stc
idiv
pop
out
mov
mov
repz
pop
je
pop
dec
repz
test
das
mov
xor
pop
cmp
retf
div
xor
retf
jl
xor
bound
xor
movs
mov
sar
retf
iret
pop
mov
mov
enter
lds
pop
cmp
retf
div
xor
retf
jl
xor
repnz
mul
mov
jae
pop
mov
mov
enter
into
(bad)
mov
xor
data16
jne
fwait
dec
push
neg
sub
cdq
out
cli
adc
jmp
sbb
out
mov
sar
(bad)
jg
inc
jbe
out
clc
jae
push
add
div
xor
or
mov
jae
jb
xor
or
mov
jae
fs
cli
mov
xor
test
rol
(bad)
sti
jae
adc
xor
or
mov
jae
add
xor
or
mov
jae
add
mov
rcr
sbb
jmp
and
xor
or
(bad)
mov
shl
dec
sbb
mov
push
sbb
neg
mov
stos
jg
cmp
sbb
ss
sar
xor
dec
xor
pop
mov
repnz
(bad)
(bad)
mul
mov
retf
sub
mov
outs
sar
xchg
mov
jae
pop
jge
sub
jae
xlat
mov
cli
mov
inc
jbe
out
clc
jae
pop
or
pop
mov
jae
popf
inc
neg
jae
aas
add
daa
push
inc
pop
mov
fwait
cmps
xor
adc
inc
data16
sti
jae
cdq
pop
dec
neg
ss
shl
pop
push
and
shl
das
pop
fwait
jbe
mov
and
das
push
(bad)
mov
jmp
pop
inc
jbe
out
clc
jae
pop
inc
push
push
xor
sbb
movs
iret
xchg
push
add
push
sub
push
stos
test
mov
xor
xlat
call
jnp
pop
and
dec
dec
out
mov
xor
adc
(bad)
jae
add
out
cli
adc
push
outs
xor
inc
add
cmps
xor
or
(bad)
jg
pop
dec
clc
mov
(bad)
xchg
imul
mov
ss
xor
(bad)
mov
jmp
mov
dec
and
scas
inc
imul
push
jge
into
icebp
jae
lods
fisttp
mov
jae
mov
adc
and
fisttp
lahf
pop
mov
xor
movs
iret
jnp
movs
inc
data16
sti
jae
pop
jns
jg
cmp
jge
mov
stos
push
inc
jbe
out
clc
jae
movs
mov
xacquire
push
or
rcr
neg
push
ficom
aaa
rcr
neg
push
jmp
mov
pop
mov
aaa
rcr
neg
jl
push
mov
arpl
mov
sti
loop
jl
or
lds
pop
fmul
mov
mov
loop
xor
pop
xor
loopne
js
jae
mov
lock
mov
loop
xor
mov
jl
dec
lods
dec
xor
aam
push
fst
stc
in
mov
jae
das
in
inc
pop
inc
sbb
push
aaa
ja
xor
xor
or
stos
pop
mov
sbb
aaa
jcxz
push
xor
or
fwait
mov
pop
inc
lock
xor
out
out
pusha
repz
inc
lock
xchg
mov
push
pop
xor
add
jmp
push
mov
fwait
repnz
xchg
mov
cwde
(bad)
push
or
or
jp
jbe
mov
jae
push
cmp
or
inc
or
push
xor
fiadd
cli
push
adc
dec
lock
iret
cmp
cmp
repnz
cli
cli
push
fst
jbe
mov
mov
mov
dec
sahf
cs
dec
pop
mov
mov
mov
push
loopne
bound
dec
aaa
daa
into
pop
cmp
jg
scas
jb
pop
mov
push
xchg
rol
jbe
mov
mov
mov
push
cmps
rol
push
pop
cmp
pop
iret
xor
repnz
or
lock
jae
pop
into
je
mov
jae
das
xchg
lock
xor
out
out
pusha
repz
inc
lock
xchg
mov
repnz
mov
stos
(bad)
mov
mov
ja
cmovb
loop
mov
dec
enter
jg
repnz
push
mov
pop
cmp
pop
iret
dec
jg
cmp
imul
mov
push
fst
stc
in
mov
jge
movs
mov
dec
or
jae
inc
push
shr
dec
aaa
daa
in
mov
cli
repnz
mov
repnz
jae
push
cmp
or
jae
mov
push
jmp
pop
inc
sbb
outs
(bad)
movs
push
je
data16
push
std
repnz
dec
repnz
test
jge
mov
push
pop
mov
stos
pop
mov
jae
fnstcw
pop
into
(bad)
mov
mov
mov
rol
jae
xor
fwait
jb
inc
mov
sbb
dec
push
pop
mov
call
fisttp
cs
dec
loop
inc
ss
mov
or
push
cwde
rcl
mov
(bad)
mov
mov
mov
mov
mov
cmp
mov
mov
arpl
inc
mov
mov
sub
lock
xor
jg
mov
fwait
repnz
mov
pop
mov
jge
inc
cli
out
mov
lock
xchg
mov
movs
jbe
mov
fwait
repnz
mov
pop
push
cli
repnz
and
aaa
mov
loop
mov
push
pop
or
in
lods
xchg
jns
jg
add
rcr
fwait
xor
mov
fwait
or
pop
lods
or
mov
jae
sub
mov
pop
jl
add
fnstcw
je
out
lods
or
or
add
mov
sbb
into
adc
cs
pushf
or
push
xor
pop
iret
jno
add
lds
push
mov
shr
fld
movs
inc
sbb
push
xor
or
lods
pop
mov
mov
sar
jae
in
das
sbb
inc
sbb
aaa
jg
test
xor
or
hlt
shr
xlat
sub
jmp
pop
mov
mov
sar
jae
fisttp
or
dec
pushf
or
xchg
loope
jae
push
aas
or
push
mov
pop
mov
arpl
pop
jno
scas
push
sbb
fisub
ja
pop
mov
arpl
pop
jno
dec
scas
and
mov
mov
movs
mov
repz
mov
mov
popa
pop
mov
mov
sar
stos
sub
push
xor
shr
cmps
sub
push
gs
mov
mov
test
inc
mov
movs
push
push
sahf
pop
stos
jae
or
scas
pop
mov
jb
mov
inc
pushf
or
stos
jae
popa
daa
xchg
movs
inc
add
sub
jecxz
mul
mov
mov
pop
push
push
pop
mov
jae
out
push
pushf
or
inc
mov
inc
inc
mov
fnstcw
jg
inc
jp
cs
push
fisub
pop
xor
jbe
inc
mov
cmp
fwait
pop
jno
cmovbe
ret
xchg
repnz
push
into
push
mov
mov
pop
mov
repnz
mov
cs
mov
div
inc
mov
dec
mov
xor
int3
lds
das
inc
fwait
out
mov
aas
lahf
sbb
mov
mov
ja
mov
pop
xor
mov
mov
fsub
mov
movs
inc
jbe
out
clc
jae
out
bound
pop
mov
jae
in
das
sbb
inc
mov
pop
xor
jp
xor
shr
xchg
movs
inc
lock
scas
push
mov
pop
xor
add
mov
jno
mov
xor
shl
pushw
test
jge
dec
pushf
or
arpl
hlt
pop
test
sbb
push
mov
pop
mov
mov
cs
xor
fiadd
nop
sub
shr
push
or
sbb
cmc
dec
mov
cli
arpl
mov
fnstcw
cmc
pop
xor
outs
test
jge
sbb
outs
test
jne
cmps
jo
sar
out
movs
inc
clc
jae
mov
shr
out
movs
inc
jo
sar
jecxz
movs
inc
cli
jae
mov
sar
cmps
sub
mov
xor
mov
or
sub
loop
not
aas
cmps
sub
mov
das
stc
clc
jae
mov
sar
(bad)
sub
mov
fiadd
nop
sub
shl
pop
call
movs
inc
mov
push
call
mov
fwait
push
jg
xor
out
test
sbb
out
clc
jae
in
das
sbb
inc
mov
pop
xor
sub
outs
lods
or
das
xor
push
or
add
mov
call
mov
mov
or
mov
jmp
jae
mov
jnp
push
ds
neg
clc
jae
push
mov
push
or
retf
mov
jae
cs
mov
jl
mov
mov
jb
pop
xor
add
mov
lock
aaa
aaa
hlt
pop
xor
adc
sbb
pop
mov
xor
adc
repnz
pop
iret
pop
jg
cmp
add
mov
repz
pop
iret
addr16
cmp
adc
jne
mov
jp
mov
mov
cs
xor
push
or
push
test
aaa
mov
push
test
push
test
not
jne
mov
jae
das
lods
clc
repnz
mov
fwait
or
inc
sar
xchg
sub
dec
cwde
stc
sar
xchg
movs
inc
jb
jae
stc
loope
stos
xor
out
lods
or
sbb
inc
iret
sbb
hlt
rol
push
add
pop
mov
jae
pop
mov
dec
hlt
pop
mov
repz
jae
pop
mov
dec
repnz
mov
repz
jae
pop
mov
mov
sub
pop
repz
pop
jmp
mov
movs
inc
mov
mov
mov
mov
movs
cmp
sub
cmp
add
das
xchg
movs
inc
mov
pop
xor
pop
pop
mov
pushw
test
jg
stos
mov
push
mov
fild
xchg
movs
inc
jae
pop
mov
pop
inc
sbb
mov
dec
pushf
or
dec
pushf
or
xchg
loope
jae
push
aas
pop
or
add
mov
sbb
and
xor
inc
jecxz
adc
retf
jecxz
mov
cli
mov
xor
push
pushf
dec
outs
into
into
mov
add
pop
mov
mov
xchg
mov
cmovb
mov
clc
jae
push
mov
dec
out
jae
pop
mov
repz
iret
jl
sar
mov
xchg
mov
cmovb
mov
mov
cwde
loopne
mov
dec
mov
pop
push
lock
mov
mov
repz
mov
add
fcmovnbe
mov
es
jae
(bad)
mov
jl
cmova
dec
bound
mov
mov
push
or
mul
jae
pop
(bad)
push
dec
push
jmp
mov
jb
mov
mov
mov
lahf
mov
pop
mov
ja
pop
inc
jb
in
stc
jb
cwde
cmp
adc
repz
mov
push
sbb
ja
pop
inc
jb
in
stc
jb
sbb
xchg
icebp
fld
sbb
or
lds
pop
mov
jae
pop
cmp
or
ss
jo
jae
push
or
retf
lods
mov
test
(bad)
mov
(bad)
mov
fcmovb
mov
push
cmp
or
mov
jl
cmovbe
dec
imul
(bad)
mov
mov
repz
mov
add
sar
mov
jb
mov
dec
push
ds
mov
pop
inc
jl
pop
xchg
neg
push
repnz
mov
push
or
or
out
cli
adc
jmp
jnp
jmp
sub
jg
inc
cli
xor
inc
jae
pop
in
sbb
mov
and
pop
xor
jbe
mov
mov
push
cmp
push
iret
je
push
lea
mov
cmp
movs
mov
sub
cdq
out
cli
adc
mov
neg
jp
pop
mov
sbb
cmp
mov
adc
aas
(bad)
cli
xor
iret
jg
movs
iret
jnp
fistp
fwait
test
jae
lods
pop
cli
jae
mov
sar
jae
pop
mov
or
neg
lock
test
xchg
mov
in
aas
cdq
out
cli
adc
in
int3
addr16
ja
cmp
jae
lods
pop
cli
mov
xor
das
mov
div
in
xor
mov
and
cmps
sahf
repnz
jae
xor
jae
pop
shl
pop
shl
pop
cmp
pop
mov
mov
pop
into
jne
pop
mov
(bad)
pop
cmp
call
sub
mov
mov
or
xor
shr
not
dec
imul
xor
pop
into
jnp
pop
mov
mov
push
jne
pop
inc
cli
mov
inc
push
push
or
or
jmp
jmp
not
inc
inc
push
sar
mov
in
lods
xchg
jns
jg
jmp
movs
or
int3
xchg
push
jo
ja
push
jno
pop
shl
fidivr
sbb
xor
mov
das
mov
mov
pushf
cmp
ss
repnz
(bad)
jae
xor
and
not
(bad)
jg
fwait
cmp
neg
mov
shl
cmovbe
movs
movs
iret
jg
mov
and
pop
shl
pop
inc
and
mov
jae
or
pop
cmps
pop
mov
jae
mov
dec
neg
sub
add
mov
or
int3
jp
and
ja
ror
pop
shl
fidivr
sbb
xor
mov
das
mov
inc
or
mov
mov
inc
push
repnz
xor
and
div
mov
mov
or
bound
jmp
pop
dec
xchg
jg
inc
cli
xor
xor
rcr
sbb
and
xor
inc
mov
and
test
test
stc
in
mov
dec
mov
xchg
sbb
div
xor
or
js
xor
out
(bad)
sahf
popa
pop
xor
mov
daa
neg
mov
imul
push
or
call
sbb
jae
sahf
mov
int
mov
push
imul
fiadd
mov
fs
xor
daa
mov
push
or
pop
adc
mov
jae
sahf
mov
mov
xor
push
sar
xchg
aas
inc
cli
mov
xor
or
out
cli
adc
push
arpl
push
xor
cli
popf
dec
jge
inc
cli
mov
xor
add
dec
cli
mov
ror
sbb
jae
imul
push
or
int
rol
sbb
jae
sahf
mov
iret
lods
enter
pop
xor
mov
and
pop
jecxz
fwait
cmps
lods
jnp
pop
in
lods
xchg
jns
jg
cmp
dec
push
mov
out
loop
jns
pop
dec
nop
jg
data16
xor
pop
mov
lock
mov
lock
mov
aaa
inc
ins
out
jae
pop
mov
repnz
fcmovb
arpl
das
mov
imul
(bad)
jnp
in
cli
jno
pop
inc
cwde
rcl
bound
cdq
mov
mov
mov
mov
dec
lock
mov
mov
das
mov
repz
movs
mov
push
and
xchg
dec
neg
nop
jg
(bad)
cli
xor
in
cli
jno
pop
inc
cwde
aad
or
or
aaa
rep
cmp
jbe
inc
jno
pop
cmp
push
pop
xor
jbe
inc
jb
daa
inc
jae
lea
hlt
fstp
test
cdq
xor
cli
push
or
jl
dec
xchg
mov
neg
les
pop
call
ds
lahf
stc
in
not
es
call
neg
ss
push
or
jnp
in
call
les
pop
call
inc
sbb
les
pop
clc
mov
in
lods
xchg
jns
retfw
data16
arpl
aad
jae
jecxz
jg
jo
div
retf
cs
jecxz
retf
dec
sub
data16
jecxz
retf
retfw
data16
jecxz
retf
retfw
data16
retfw
sub
sub
data16
ret
mov
sub
es
mov
ret
div
retf
data16
jecxz
retf
dec
sub
data16
retfw
cs
data16
push
jecxz
retf
retfw
cmp
out
inc
mov
retf
retfw
neg
jae
retf
retfw
retf
sbb
xor
retf
retfw
jge
mov
and
retf
(bad)
dec
sub
retfw
repnz
iret
xchg
sub
retfw
retfw
jne
mov
retfw
test
jecxz
xchg
sub
retfw
retfw
xchg
mov
bound
movs
mov
cld
mov
idiv
jo
ret
mov
push
mov
mov
ret
adc
sub
data16
arpl
retf
add
retfw
push
pop
sub
cs
retf
call
jecxz
retf
aaa
retf
imul
retf
retfw
shl
retfw
add
sub
retfw
sub
retfw
retfw
data16
jg
jo
inc
(bad)
retf
pop
inc
jecxz
retf
add
sub
data16
ret
mov
sub
push
pop
sub
cs
retf
es
arpl
retfw
aaa
retf
imul
retf
retfw
shl
retfw
add
sub
retfw
sub
retfw
retfw
data16
aaa
ret
inc
(bad)
retf
pop
inc
jecxz
retf
add
sub
cmp
jecxz
retf
pop
popa
stos
mov
cdq
jns
jg
cmp
jge
mov
mov
fdivr
mov
jge
or
(bad)
mov
xlat
(bad)
jecxz
mov
ss
call
xchg
mov
ss
dec
neg
xchg
neg
cli
cs
dec
and
adc
xor
mov
xor
or
(bad)
mov
das
mov
cwde
fdiv
xor
push
loop
or
pop
add
jl
cmovno
(bad)
imul
mov
pop
jmp
inc
stc
repnz
xchg
test
or
dec
xor
inc
dec
mov
mov
dec
mov
repnz
xchg
out
bound
sbb
ds
jo
out
sub
neg
push
or
jmp
(bad)
xor
jae
pop
aaa
ss
push
es
pop
inc
and
mov
cmp
mov
fwait
(bad)
adc
aaa
ss
xor
(bad)
adc
sahf
clc
mov
xor
or
jl
nop
movs
inc
mov
dec
inc
mov
add
out
cli
adc
push
dec
movs
or
int
inc
and
stos
dec
xchg
jg
data16
xor
add
pop
jp
jg
dec
cdq
not
inc
ins
fist
js
mov
mov
jl
retf
sahf
pop
xor
pop
iret
je
call
mov
jmp
movs
inc
lock
mov
call
stc
in
(bad)
pushf
aaa
mov
push
into
mov
xchg
addr16
repnz
xor
shr
jg
push
and
in
(bad)
pushf
aaa
mov
adc
mov
xor
pop
in
fwait
scas
adc
jae
das
cmps
jae
lods
pop
cli
mov
xor
jg
mov
jae
pop
push
and
sbb
jae
fnstcw
push
xchg
pop
xor
sar
(bad)
sbb
pop
inc
clc
jecxz
pop
xor
imul
xor
dec
mov
mov
jae
pop
inc
add
sti
outs
into
mov
xor
push
mov
cli
push
pop
dec
cli
xor
bound
mov
clc
jae
dec
cmp
push
pop
sbb
repz
mul
mov
mov
xchg
mov
jl
mov
out
ins
cli
retf
mov
xor
mov
neg
cmp
xor
cmp
mov
mov
and
pop
arpl
lea
dec
sub
clc
jae
mov
ins
neg
xor
shl
repz
mov
push
sbb
mov
push
imul
jb
xor
bound
scas
xor
out
jae
dec
cmp
add
mov
repz
pop
xor
arpl
xchg
mov
fs
mov
stos
cmc
pop
dec
clc
jecxz
pop
xor
imul
and
clc
jae
pop
(bad)
into
mov
xor
sub
sub
mov
sbb
mov
push
out
jae
push
push
mov
xor
shl
retf
sahf
pop
xor
push
or
sbb
pop
into
mov
xor
out
jae
push
cmp
lods
pop
cli
mov
xor
sbb
push
inc
mov
mov
jmp
sbb
mov
fnstcw
pushf
pop
shl
pop
shl
pop
shl
pop
cli
mov
pop
mov
jae
pop
push
and
das
pop
and
das
pop
fwait
(bad)
adc
adc
pop
inc
push
adc
jmp
jae
call
mov
dec
mov
and
popa
test
cmps
fist
pop
mov
xor
lock
mov
sbb
cli
xor
add
jg
dec
cdq
aaa
mov
xchg
mov
xor
jge
jg
xor
or
jb
je
pop
mov
daa
inc
leave
and
sar
sbb
inc
je
mov
push
jg
cmp
or
jb
pop
inc
dec
(bad)
sub
mov
pop
inc
mov
pop
push
cmp
js
adc
movs
inc
mov
pushf
aas
jne
movs
inc
inc
jg
dec
xchg
jg
push
mov
movs
xor
or
clc
jae
scas
pop
xor
xlat
aas
mov
movs
inc
and
xchg
icebp
jae
xor
sbb
xor
xor
inc
mov
movs
jmp
fisttp
or
xor
jle
clc
jae
mov
cmp
pop
shl
fisttp
or
mov
xor
movs
ja
adc
mov
movs
push
sub
cs
xor
or
scas
pop
sbb
mov
or
mov
jae
cli
xor
aas
mov
movs
inc
and
xlat
aas
mov
movs
inc
and
mov
jae
pop
inc
jbe
out
clc
jae
cdq
pop
xor
xor
mov
aaa
test
inc
mov
ficom
neg
and
xor
xchg
mov
shl
pop
cmp
jne
out
repnz
out
jae
add
out
cli
adc
jmp
rcl
mov
cs
xor
fstp
mov
mov
(bad)
mov
jmp
xor
jae
pop
shl
das
mov
adc
mov
imul
ror
movs
cli
repz
push
psrlq
mov
das
inc
and
or
stos
mov
pop
mov
sar
xchg
jns
jg
jmp
dec
mov
xor
rol
adc
dec
loop
adc
neg
jb
movs
iret
or
stos
mov
mov
jae
pop
cmp
mov
shl
xlat
fist
ficomp
sbb
xor
mov
movs
iret
jnp
pop
mov
imul
jmp
mov
jp
test
jae
pop
inc
and
inc
and
mov
sbb
movs
iret
jg
das
mov
not
mov
ja
call
or
jmp
push
or
mov
adc
or
mov
mul
inc
fwait
adc
sub
cdq
out
cli
adc
push
arpl
sar
imul
mov
jb
sar
lock
xor
jnp
inc
and
xor
push
(bad)
mov
cmp
pop
mov
sbb
sbb
or
sbb
xor
push
or
mov
adc
or
mov
or
mov
mov
push
jp
mov
dec
cli
xor
xor
dec
xor
leave
sahf
rol
push
sar
retf
cmps
ins
xor
pop
into
push
push
cmc
(bad)
jae
or
mov
mov
test
cmps
ins
xor
arpl
mov
mov
sbb
xor
neg
jae
pop
shl
cmp
div
sbb
xor
jae
push
jp
repnz
movs
(bad)
(bad)
and
mov
jae
pop
inc
cwde
lock
sbb
test
jns
jmp
stos
adc
aaa
rcr
xchg
mov
mov
mov
or
clc
adc
iret
dec
out
repnz
rol
jg
bound
dec
enter
jge
mov
or
js
jg
mov
arpl
pop
bnd
fnstcw
jg
xchg
ss
shr
arpl
pop
mov
mov
mov
cli
cs
cli
xor
pop
iret
mov
daa
mov
cmp
enter
jg
repnz
push
jecxz
jmp
pop
mov
cli
mov
xor
sbb
pop
mov
push
adc
jae
sar
cs
(bad)
cli
xor
ror
mov
jmp
pop
mov
cli
mov
xor
push
mov
inc
ss
cli
lods
pop
cli
mov
xor
xor
mov
and
popf
inc
ja
dec
fcomp
and
mov
jae
sar
mov
imul
push
outs
mov
mov
ss
sar
xor
out
add
push
gs
in
mov
jp
cs
inc
pop
mov
push
sub
ja
sbb
push
push
sub
xor
inc
jae
mov
jl
daa
inc
jl
cmp
mov
test
shr
cmp
cli
push
jecxz
jae
pop
add
sahf
hlt
test
push
jo
orps
and
jge
mov
xor
xchg
mov
in
fwait
loop
mov
adc
inc
pop
inc
dec
mov
enter
dec
cwde
cld
sar
cmp
mov
cmovp
add
mov
pop
mov
jae
or
and
lock
loope
bound
sar
push
scas
inc
lea
pop
cmp
sbb
aas
mov
movs
inc
and
das
mov
cmps
stos
inc
mov
mov
xor
jns
mov
das
mov
js
pop
cmp
push
movs
inc
mov
das
mov
push
imul
call
scas
fwait
sbb
mov
movs
add
pop
mov
lea
sar
cmps
or
inc
mov
xor
stos
or
outs
mov
movs
aaa
iret
int3
pop
mov
xor
test
jae
sar
(bad)
retf
sub
mov
mul
movs
inc
mov
inc
push
(bad)
xor
dec
mov
mov
jae
mov
inc
mov
xor
(bad)
sar
mov
aaa
fnstenv
mov
xchg
das
inc
cli
xor
mov
arpl
inc
and
mov
or
jle
sahf
cvtdq2ps
mul
cld
jae
fnstcw
sahf
adc
xor
movs
jg
es
mov
fwait
inc
pop
mov
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
push
fnstcw
push
sar
jae
jecxz
jae
pop
and
jns
or
pop
mov
and
inc
mov
movs
in
sbb
mov
int3
neg
mov
shl
sar
cmps
pop
mov
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
push
fnstcw
sahf
ins
pop
xor
movs
jg
stos
pop
mov
fwait
out
pop
mov
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
push
fnstcw
push
test
mov
neg
test
fld
mov
xchg
mov
mov
jae
lods
inc
and
inc
mov
movs
in
sbb
mov
fs
neg
mov
movs
iret
push
sahf
dec
pop
xor
sar
(bad)
and
or
mov
mov
stos
mov
mov
neg
test
fld
mov
adc
mov
inc
lea
mov
aaa
neg
mov
xor
(bad)
or
(bad)
jae
fnstcw
push
cmp
jae
jecxz
jae
pop
and
dec
rol
inc
cmps
inc
lea
mov
aaa
neg
mov
xor
(bad)
or
(bad)
jae
fnstcw
ja
mov
push
mov
mov
jae
lods
inc
lock
(bad)
push
push
dec
(bad)
jae
jecxz
jae
pop
and
movs
inc
mov
pop
in
fwait
out
mov
fwait
push
sbb
jae
ret
dec
mov
aaa
into
sub
push
xor
pop
aaa
imul
movs
inc
mov
fild
or
clc
jae
mov
xor
pop
cmp
neg
jns
pop
mov
mov
daa
cdq
fwait
push
sbb
jae
ret
dec
mov
inc
and
fs
xor
or
mov
cmps
mov
test
cmps
inc
cli
xor
pop
add
pop
mov
mov
daa
test
jae
out
inc
mov
movs
push
(bad)
mov
mov
cmp
pop
mov
lock
(bad)
pusha
sahf
xchg
pop
xor
movs
jg
sahf
sbb
fwait
rcr
mov
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
stc
jae
fnstcw
ja
les
neg
in
sbb
test
inc
mov
pop
jmp
sahf
scas
fwait
sub
mov
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
clc
jae
fnstcw
push
in
clc
jae
jecxz
jae
pop
and
dec
rol
inc
cmps
inc
lea
mov
xor
pop
cmp
neg
jns
pop
mov
mov
daa
cdq
fwait
jbe
mov
jae
ret
dec
mov
inc
and
fs
xor
or
mov
push
(bad)
pop
mov
sbb
jne
jp
or
mov
jae
movs
mov
jae
mov
inc
mov
cmp
dec
movs
inc
mov
mov
clc
jae
inc
mov
pop
aas
iret
or
inc
lea
sub
clc
dec
call
or
test
push
jecxz
jae
pop
and
rol
in
pop
mov
mov
lods
pop
mov
pop
xor
inc
movs
inc
mov
cmp
pop
inc
mov
pop
aaa
into
neg
mov
pop
cmp
or
inc
mov
fidivr
mov
inc
lea
movs
iret
imul
jae
movs
jmp
or
pop
push
sbb
jae
fnstcw
ja
lea
neg
repnz
mov
jae
lods
inc
lock
(bad)
pusha
sahf
pop
pop
xor
movs
jg
push
sbb
fwait
stos
sbb
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
sti
jae
fnstcw
push
ins
sti
jae
jecxz
jae
pop
and
dec
rol
inc
cmps
inc
lea
mov
xor
pop
cmp
or
mov
lea
sar
mov
movs
inc
dec
jae
inc
mov
push
cmp
or
inc
mov
fisttp
lahf
pop
mov
jae
pop
cmps
cli
jae
inc
lea
mov
jb
pop
cmp
neg
mov
push
ds
pop
mov
jae
sar
outs
repz
jb
mul
mov
movs
inc
jl
push
mov
mov
movs
inc
cli
jae
inc
mov
movs
iret
addr16
add
not
aas
xchg
cmps
inc
and
std
cli
jae
fnstcw
jnp
dec
mov
movs
cmp
neg
mov
fdivr
dec
cwde
inc
mov
shl
sar
jae
mov
les
inc
mov
xlat
ds
movs
inc
mov
pop
aaa
test
inc
mov
movs
cmp
or
inc
lea
movs
iret
imul
dec
mov
movs
xor
or
ficom
ret
jae
sahf
mov
jae
push
mov
mov
mov
xchg
mov
inc
(bad)
or
cli
jae
fnstcw
ja
call
pop
mov
jae
lods
inc
lock
(bad)
pusha
sahf
xchg
pop
xor
movs
jg
(bad)
sbb
fwait
xor
jae
push
mov
mov
mov
xchg
mov
inc
(bad)
or
test
fnstcw
or
dec
mov
movs
push
and
pop
mov
lea
shl
adc
cmps
inc
cli
xor
movs
inc
and
out
inc
mov
movs
in
fwait
(bad)
lods
inc
mov
mov
jae
inc
lea
push
jp
jae
inc
mov
xor
(bad)
or
test
fnstcw
ja
fimul
push
ss
pop
mov
jae
lods
inc
lock
(bad)
pusha
sahf
pop
pop
xor
movs
jg
xchg
gs
fwait
(bad)
gs
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
test
fnstcw
push
mov
mov
neg
test
fld
mov
adc
mov
inc
lea
mov
dec
neg
mov
xor
(bad)
or
test
fnstcw
jg
xchg
stos
jg
push
into
enter
cld
pop
mov
lock
(bad)
push
push
icebp
test
jecxz
jae
pop
and
movs
inc
mov
pop
in
fwait
pop
fs
fwait
jle
mov
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
test
fnstcw
push
cmp
neg
test
fld
mov
mov
inc
cmps
inc
lea
mov
dec
neg
mov
mov
dec
neg
jns
pop
mov
mov
daa
test
jae
out
inc
mov
movs
push
cs
xor
cwde
out
xor
jae
jecxz
jae
pop
and
jns
jb
pop
mov
jae
lods
inc
and
inc
mov
movs
in
sbb
mov
inc
dec
neg
mov
xor
(bad)
or
test
fnstcw
push
xchg
xchg
jecxz
jae
pop
and
dec
rol
inc
cmps
inc
lea
mov
dec
neg
mov
loop
aaa
neg
nop
jg
jp
or
pop
xor
movs
jg
ds
fwait
jb
mov
jae
ret
dec
mov
mov
xchg
mov
inc
(bad)
or
xchg
fnstcw
sahf
inc
pop
xor
movs
jg
addr16
sahf
mov
pop
jne
jae
mov
inc
mov
push
dec
retf
pop
mov
jae
lods
inc
lock
(bad)
pusha
sahf
stos
pop
xor
movs
jg
stos
addr16
(bad)
jae
inc
mov
or
test
inc
mov
pop
jmp
sahf
stos
fwait
or
jae
push
mov
mov
mov
xchg
mov
inc
(bad)
or
xchg
fnstcw
sahf
pop
pop
xor
movs
jg
(bad)
addr16
repnz
mov
dec
neg
jns
pop
mov
mov
daa
test
jae
out
inc
mov
movs
push
scas
retf
lock
jmp
mov
cli
and
jge
rcr
and
out
mov
movs
in
sbb
test
jae
mov
dec
neg
mov
mov
dec
neg
jns
pop
mov
mov
daa
test
jae
out
inc
mov
movs
push
dec
pop
mov
jns
pop
mov
retf
or
lods
mov
inc
(bad)
or
xchg
fnstcw
push
jge
jae
jecxz
jae
pop
and
dec
rol
inc
cmps
inc
lea
mov
dec
neg
mov
mov
dec
neg
jns
pop
mov
mov
daa
cdq
fwait
push
popa
mov
jae
ret
dec
mov
inc
and
fs
xor
or
mov
mov
inc
cmps
inc
lea
mov
dec
neg
mov
xor
sbb
xor
xor
das
mov
mov
jae
fist
or
xor
or
mov
xchg
movs
inc
and
movs
jg
inc
mov
mov
mov
dec
neg
(bad)
push
movs
inc
mov
xor
jg
out
bound
and
not
aas
lahf
or
jae
mov
pop
mov
pop
mov
sti
cli
push
imul
pushf
dec
imul
push
or
or
sar
sub
mov
mov
or
int
mov
lods
mov
aaa
test
inc
mov
ficom
push
movs
inc
lock
or
or
add
mov
jae
adc
div
mov
ret
inc
sbb
test
jae
and
push
lods
mov
shl
pop
cmp
jne
call
add
pop
repnz
mov
and
push
shl
rol
adc
aas
repz
pop
out
or
mov
into
pop
mov
fstp
jg
sub
(bad)
sar
jae
fbstp
mov
movs
xor
mov
mov
xor
jl
mov
pop
xor
(bad)
xlat
out
jno
sbb
out
cmps
inc
mov
pop
xor
and
mov
movs
push
jmp
xor
and
jbe
push
mov
jmp
movs
inc
cli
push
imul
or
push
rcr
jae
inc
mov
movs
psrlq
movs
inc
fwait
xchg
ins
mov
mov
movs
inc
(bad)
outs
cmps
inc
mov
or
jnp
xlat
retf
movs
aaa
daa
cld
pop
xor
call
jb
push
mov
sti
or
in
div
mov
inc
rcr
jae
inc
mov
fisttp
cdq
pop
mov
(bad)
jae
inc
mov
or
iret
pop
mov
jae
mov
dec
neg
ja
pop
mov
mov
or
fsubr
sbb
jae
pop
mov
pushf
or
jp
in
push
push
pop
mov
jno
pop
cmp
pop
inc
mov
rol
push
sar
repnz
mov
lea
movs
jmp
or
ret
mov
inc
mov
movs
pavgw
movs
inc
mov
inc
mov
movs
psubq
movs
inc
mov
inc
mov
movs
psrlq
movs
inc
and
or
inc
mov
call
push
jp
sti
or
(bad)
ret
pop
mov
jb
pop
rcl
sub
mov
mov
or
iret
pop
mov
jae
xlat
aas
(bad)
or
inc
lea
movs
jmp
jmp
or
cmc
jae
xor
sbb
xlat
aas
retf
or
xor
jle
ja
xchg
ja
pop
jge
dec
movs
inc
mov
fistp
or
fdiv
pop
mov
mov
pop
into
outs
nop
popf
aas
fwait
or
inc
pop
push
sar
jae
inc
mov
or
sbb
push
mov
movs
jmp
or
jae
pop
rcl
pop
shl
pop
aaa
test
inc
mov
outs
mov
not
mov
mov
movs
push
push
pop
mov
jae
mov
inc
mov
inc
(bad)
bound
pop
xor
xor
lods
mov
aaa
test
inc
mov
pop
cmp
or
xor
jnp
inc
lea
movs
jmp
and
jp
das
mov
jae
cdq
mov
fidivr
sbb
movs
inc
jb
(bad)
mov
movs
xchg
xchg
mov
or
jae
pop
mov
jae
out
mov
movs
mov
xor
push
loop
pop
mov
jae
fild
or
(bad)
jae
xor
jae
fild
or
inc
mov
mov
or
cmp
push
inc
mov
mov
lock
mov
pop
cmp
pop
cmp
push
inc
mov
xlat
aas
(bad)
or
mov
fstp
xchg
pop
mov
jae
xor
mov
mov
inc
neg
(bad)
push
cmps
inc
mov
push
mov
sar
out
or
inc
test
sar
sbb
movs
inc
cli
xor
mov
lock
and
dec
pop
cmc
popa
nop
rol
push
sar
adc
ret
cli
xor
xor
or
jge
mov
push
push
push
ret
cli
xor
xor
or
mov
sar
jg
dec
and
push
mov
sar
jg
dec
jl
pop
inc
jl
cmovbe
push
or
jl
cmovle
mov
xchg
and
mov
jo
pop
dec
xchg
jg
dec
cli
xor
lock
jl
call
repnz
jmp
ror
cmps
mov
inc
neg
mov
movs
iret
jnp
stos
cmp
(bad)
pop
mov
jae
movs
iret
jg
in
dec
mov
push
test
mov
les
pop
mov
mov
pop
jmp
push
or
jne
push
or
jl
cmovl
mov
mov
jae
loop
add
pop
dec
xchg
jg
push
cli
xor
dec
sahf
push
out
xor
xor
inc
neg
mov
movs
in
fwait
imul
jae
pop
inc
and
pop
xor
adc
jge
push
cmc
mov
sar
mov
rdpmc
xchg
dec
adc
inc
neg
and
dec
cli
xchg
fdivr
sar
adc
aas
retf
push
movs
inc
cli
xor
inc
xor
pop
mov
mov
or
div
mov
fsubr
(bad)
pop
mov
jl
enter
fisttp
repnz
mov
xchg
or
mov
mov
inc
inc
(bad)
ds
mov
jle
mov
mov
mov
jae
pop
mov
sbb
iret
push
movs
inc
and
jp
or
xchg
jae
push
jp
ret
inc
push
sar
or
jle
or
mov
mov
inc
inc
(bad)
ds
mov
ret
jae
mov
js
pop
mov
pop
imul
rol
push
sar
test
jae
mov
jp
jae
mov
jae
or
and
pop
mov
inc
das
ins
dec
ja
cs
pop
xor
movs
xor
ret
mov
mov
das
inc
cli
xor
mov
sub
inc
and
cmp
jle
jg
mov
es
sbb
jae
fnstcw
jg
dec
xchg
jg
dec
lods
or
inc
mov
sar
jae
pop
mov
or
ret
lock
pop
ret
retf
mov
lock
(bad)
addr16
stos
pop
xor
xlat
aas
jae
movs
inc
and
adc
jnp
pop
mov
jecxz
jae
pop
and
jae
xchg
pop
mov
jae
lods
inc
and
mov
sbb
out
xchg
or
mov
fwait
cmp
jae
push
mov
mov
mov
xchg
mov
aaa
div
mov
push
inc
neg
mov
fist
pop
mov
jae
fistp
fwait
imul
jae
push
mov
mov
mov
xchg
mov
aaa
div
mov
adc
pop
cmp
neg
jns
pop
mov
mov
daa
xchg
fwait
mov
cmp
mov
inc
and
add
xlat
pop
jae
movs
inc
and
adc
arpl
das
stos
sbb
mov
mov
sbb
mov
mov
fisubr
jae
sahf
scas
cli
push
jae
cli
xor
add
pop
mov
mov
daa
scas
sbb
mov
mov
fwait
(bad)
imul
jae
fistp
fwait
cli
imul
jae
push
mov
mov
mov
xchg
mov
aaa
div
mov
pop
inc
neg
mov
xor
div
mov
push
mov
ror
push
sar
push
mov
mov
mov
inc
neg
adc
pop
mov
dec
pop
mov
or
mov
mov
or
mov
pop
push
sbb
mov
or
les
lock
dec
les
retf
mov
lock
(bad)
addr16
stos
pop
xor
xlat
aas
jae
movs
inc
and
or
jle
dec
dec
clc
jae
lods
pop
cli
jae
mov
sar
test
jae
fistp
fwait
ret
jae
sahf
mov
push
imul
test
mov
mov
xchg
mov
aaa
div
mov
mov
neg
mov
xor
div
mov
inc
inc
neg
mov
fstp
pop
mov
jae
push
mov
mov
mov
xchg
mov
aaa
div
mov
je
neg
mov
movs
iret
jg
fistp
sbb
test
jae
fistp
fwait
jp
mov
fwait
call
jae
ret
dec
mov
mov
xchg
mov
aaa
div
mov
xor
pop
cmp
mov
aaa
div
mov
int3
inc
neg
mov
mov
inc
neg
jns
pop
mov
mov
daa
scas
sbb
mov
mov
fwait
cmps
imul
cmp
jae
mov
inc
mov
push
mov
pop
mov
jae
lods
inc
cli
and
jge
rcr
and
out
xchg
or
clc
jae
out
xchg
or
mov
fwait
cmp
jae
push
mov
mov
mov
xchg
mov
aaa
div
mov
push
inc
neg
mov
xor
pop
aaa
div
mov
ins
inc
neg
mov
ror
adc
aas
fwait
sub
cmp
neg
jns
pop
mov
mov
daa
scas
sbb
mov
mov
fwait
push
push
jae
sahf
mov
xchg
push
jae
push
mov
mov
mov
inc
neg
adc
pop
mov
dec
pop
mov
or
mov
mov
or
mov
mov
jae
pop
mov
or
(bad)
pop
mov
jae
pop
shl
pop
shl
pop
mov
mov
jae
mov
fstp
pop
mov
mov
or
fistp
sbb
xlat
pop
mov
movs
inc
and
xlat
pop
jae
movs
inc
and
out
inc
lods
or
mov
mov
mov
pop
neg
mov
mov
repnz
jae
add
out
cli
adc
push
jecxz
pop
mov
sti
jmp
xchg
repnz
jae
fstp
out
or
cmp
pop
mov
push
mov
jae
shr
jnp
push
mov
mov
movs
xor
jb
inc
mov
push
jmp
xchg
jae
mov
xchg
movs
add
sahf
pop
mov
repz
xor
into
fstp
cli
jae
inc
mov
rol
adc
aas
prefetch
stos
sbb
xlat
aas
xlat
or
xchg
jae
xor
test
mov
pop
rol
sub
mov
repz
das
pop
mov
fnstcw
call
mov
jae
xlat
aas
(bad)
and
push
mov
movs
jmp
mov
inc
(bad)
push
cmps
inc
mov
movs
inc
and
push
inc
mov
fnstcw
call
mov
xor
xlat
aas
(bad)
and
mov
aas
(bad)
or
inc
lea
movs
jmp
rcr
or
aas
jmp
movs
inc
repnz
jae
xor
sbb
xlat
aas
retf
or
xchg
jae
fnstcw
dec
ret
imul
inc
mov
sar
jae
inc
mov
push
mov
xchg
or
mov
mov
pop
into
push
nop
popf
aas
fwait
or
fistp
pop
dec
xchg
jg
into
mov
movs
xor
movs
jmp
xlat
aas
xlat
or
add
div
mov
sbb
xor
mov
or
jae
jge
jae
push
jp
jb
mov
fisttp
movs
inc
fwait
push
jae
jae
mov
inc
(bad)
push
cmps
inc
mov
xor
lods
mov
aaa
test
inc
mov
pop
cmp
or
outs
xor
xchg
aaa
test
inc
mov
pop
push
fstp
cli
xor
push
in
xor
neg
out
pop
mov
mov
pop
xor
and
mov
out
pop
mov
jae
mov
pop
neg
ja
pop
mov
mov
or
fwait
push
jo
jae
mov
and
sahf
xor
xlat
aas
jecxz
movs
inc
and
sub
mov
fnstcw
retf
movs
inc
jae
push
cmps
neg
(bad)
jae
inc
mov
or
fwait
mov
mov
ss
ds
neg
sbb
movs
movntq
movs
inc
(bad)
jae
inc
mov
or
fistp
(bad)
jae
inc
mov
or
bound
ins
mov
sar
sub
xor
xchg
inc
(bad)
bound
nop
jae
xor
inc
fcomp
and
or
(bad)
fistp
lock
mov
jae
js
sbb
jae
(bad)
mov
movs
cmp
imul
inc
mov
mov
movs
or
movs
clc
jae
inc
mov
fst
cmps
or
(bad)
bound
ins
mov
fnstcw
ja
sbb
pop
in
fwait
(bad)
jae
jae
fbld
mov
movs
mov
mov
mov
push
mov
movs
jmp
pop
inc
(bad)
push
cmps
inc
mov
or
inc
test
sar
pop
or
movs
(bad)
or
mov
mov
movs
in
lods
xchg
js
test
xchg
jne
stos
and
in
add
daa
cmp
mov
pop
neg
ss
movs
iret
jg
add
out
mov
mov
fwait
data16
jae
pushf
xor
movs
or
inc
rcr
and
popa
xchg
jae
movs
iret
jg
push
mov
push
neg
fwait
cmp
mov
aaa
or
shl
xor
sub
pop
shl
pop
push
push
fistp
cli
xor
inc
and
mul
lods
dec
neg
xchg
jg
dec
cli
xor
dec
rcr
and
not
dec
add
jge
test
jae
mov
dec
mov
jae
or
int3
and
push
jg
mov
or
mov
bnd
jae
pushf
mov
sbb
sbb
mov
mov
not
aas
jb
movs
inc
and
pop
shl
das
mov
jae
dec
mov
or
inc
movs
inc
lock
mov
pop
mov
cwde
cli
xor
jae
sar
add
xor
dec
stos
xchg
adc
dec
mov
mov
mov
mov
dec
mov
aaa
sbb
push
cmps
fcomp
(bad)
mov
jmp
pop
inc
inc
jbe
clc
jae
imul
jo
xor
mov
aaa
sbb
push
fcmovu
pop
mov
sbb
shl
sbb
pop
imul
mov
adc
pop
fmul
movs
cmp
aas
cdq
out
cli
adc
jmp
or
add
xor
or
jl
div
mov
sbb
xor
sbb
xor
jb
pop
shl
pop
shl
dec
push
fistp
cli
xor
mov
inc
jb
clc
jae
stc
xchg
jae
xor
inc
push
(bad)
sti
jae
leave
xchg
jae
ror
adc
dec
mov
ficomp
xor
mov
pop
neg
jb
xor
xor
mov
pop
neg
jb
xor
xor
mov
pop
neg
jb
xor
xor
mov
pop
neg
popf
xor
jae
pop
in
sbb
movs
(bad)
push
imul
mov
sbb
movs
(bad)
jecxz
sbb
jae
pop
in
sbb
movs
pop
push
sbb
jae
mov
inc
neg
jb
xor
xor
mov
push
neg
jb
xor
xor
mov
push
neg
jb
xor
xor
mov
push
neg
jb
xor
xor
mov
push
neg
sub
inc
bound
mov
ror
mov
push
rcr
rcl
iret
cli
jae
mov
xor
xor
ret
mov
xor
mov
push
neg
(bad)
shl
mov
jae
mov
xor
xor
ret
ficomp
xor
mov
push
neg
vpshld
mov
push
rcr
rcl
(bad)
sahf
mov
xor
xor
ret
jbe
xor
mov
push
neg
mov
mov
inc
inc
jmp
jae
stc
mov
call
(bad)
outs
arpl
mov
jae
cmps
inc
inc
faddp
sti
jae
popf
pushf
jae
stc
ret
pop
rcr
or
mov
jae
cmps
inc
inc
(bad)
(bad)
push
stc
pushf
jae
stc
xchg
jmp
mov
push
imul
mov
inc
jb
clc
jae
and
cmps
in
mov
rcr
or
mov
jae
cdq
out
cli
adc
push
imul
mov
cli
xor
dec
scas
mov
inc
push
(bad)
mov
(bad)
mov
mov
xor
or
jmp
sbb
sbb
out
pop
mov
jae
xlat
inc
rcr
sbb
movs
pop
sbb
or
xchg
pop
dec
and
mov
xchg
mov
rcl
neg
jae
add
mov
shl
outs
mov
mov
shl
xor
ss
fst
cmps
xor
jae
or
mov
sbb
jae
pop
push
push
rcr
shl
(bad)
ja
mov
neg
jae
outs
mov
mov
shl
outs
(bad)
shl
pop
mov
ss
fst
cmps
xor
sbb
xor
scas
pop
sbb
jae
pop
push
xchg
rcr
rcl
pop
shl
pop
shl
pop
shl
pop
shl
pop
ror
hlt
pop
mov
sbb
xor
jae
pushf
shl
xor
xor
mov
push
neg
jae
outs
mov
mov
shl
outs
(bad)
shl
ins
mov
sbb
xor
pop
sub
mov
jae
pop
push
push
rcr
ror
pop
inc
inc
ret
jae
pop
inc
inc
mov
sti
jae
dec
rcl
pop
mov
sbb
pop
mov
xor
xor
mov
shl
gs
jae
stc
sbb
mov
xor
sbb
jge
mul
mov
aaa
push
sbb
jb
pop
rcl
neg
sbb
xor
mov
sub
clc
jae
pop
push
mov
pop
mov
jae
pop
inc
inc
ret
jae
pop
inc
inc
mov
sti
jae
dec
ror
neg
sbb
mov
jae
pop
jmp
and
xor
jae
dec
and
mov
outs
and
mov
cmp
xor
xor
sbb
pop
shl
pop
mov
xchg
mov
shl
sub
mov
push
neg
fwait
imul
repnz
fnsave
xor
scas
mov
shl
sbb
rcr
sbb
pop
shl
neg
mov
mov
xor
mov
push
neg
jae
outs
mov
mov
shl
outs
fcmovbe
mov
rcr
pop
mov
jae
pop
ror
sahf
pop
mov
xchg
mov
shl
sub
mov
push
neg
repz
sbb
inc
imul
(bad)
adc
mov
jae
data16
neg
sbb
mov
repz
xor
mov
shl
sub
mov
push
neg
pop
imul
inc
mov
sti
jae
pop
inc
inc
mov
sti
jae
dec
ror
mov
shl
pop
shl
pop
jmp
and
xor
jae
retf
not
inc
test
sar
fwait
jg
shl
outs
mov
mov
shl
outs
(bad)
shl
fstp
jae
pop
shl
pop
mov
and
xor
mov
shl
cmp
into
shl
mov
mov
shl
outs
(bad)
shl
cmp
mov
jae
pop
mov
scas
mov
shr
div
sbb
sbb
inc
imul
(bad)
aaa
push
sbb
jae
pop
rol
pop
mov
jae
or
pusha
sub
mov
jae
pop
push
xchg
pop
mov
jae
pop
inc
inc
ret
jae
pop
inc
inc
mov
sti
jae
dec
shl
div
sbb
pop
shl
pop
jmp
and
xor
jae
into
sbb
div
mov
xor
xor
xor
xor
jae
retf
mov
sbb
pop
cmp
sahf
xchg
div
mov
jae
pop
mov
jae
ficomp
xor
xor
xor
xor
xor
xor
jae
cdq
mov
sbb
pop
cmp
sahf
retf
div
mov
jae
pop
mov
jae
inc
das
xor
fisttp
loop
mov
inc
imul
(bad)
adc
mov
sbb
pop
mov
jae
(bad)
sbb
mov
xor
xor
jbe
pop
mov
jae
pop
inc
inc
ret
jae
pop
inc
inc
xchg
cli
clc
jae
inc
rcl
sahf
scas
mov
sbb
pop
cmp
sahf
xchg
div
mov
jae
pop
mov
jae
jp
xor
xor
xor
xor
xor
xor
jae
repz
sbb
pop
cmp
sahf
mov
inc
test
pop
shl
leave
fwait
jae
stc
and
mov
push
add
movs
inc
cli
push
pop
inc
cli
xor
in
aas
cdq
out
cli
adc
push
addr16
pop
mov
dec
int3
jae
xor
mov
inc
push
(bad)
mov
test
movs
xor
test
add
sbb
sbb
jae
mov
jge
mul
mov
jae
pop
dec
and
pop
cmp
pop
inc
inc
ret
jae
pop
in
clc
mov
xchg
add
xor
push
jno
and
mov
scas
pop
sbb
jae
pop
mov
push
neg
aaa
push
sbb
inc
imul
ror
pop
inc
pop
mov
cmp
pushf
dec
shl
(bad)
sbb
cmp
xor
xor
jae
pop
and
mov
outs
and
mov
push
sbb
div
xchg
jb
pop
xor
push
jno
xor
and
mov
xchg
mov
shr
div
sbb
push
sbb
sbb
xor
sbb
xor
jno
pop
shl
pop
sar
dec
push
(bad)
(bad)
pop
mov
scas
hlt
pop
mov
inc
or
in
mov
push
jle
pop
mov
inc
imul
(bad)
adc
mov
sbb
xor
and
xor
scas
mov
shl
pop
call
pop
xor
sahf
and
div
mov
jae
outs
push
out
mov
push
into
jmp
xchg
jae
pop
shl
neg
mov
mov
xor
mov
ins
neg
dec
data16
clc
jae
das
lods
sbb
xor
jae
outs
push
out
mov
push
cli
jmp
xor
jb
pop
inc
inc
push
(bad)
sti
jae
sub
mov
outs
and
mov
cmp
xor
xor
inc
pushf
dec
ror
sahf
pop
mov
xchg
mov
shl
sub
mov
ins
neg
repz
sbb
cli
xor
mov
xor
xor
xor
xor
dec
pushf
dec
rcr
neg
sbb
pop
cmp
sahf
xchg
div
aas
scas
mov
shl
jge
jae
stc
xchg
in
mov
push
or
movs
inc
sbb
movs
pop
sbb
aaa
push
sbb
jae
pop
rcr
div
mov
and
sbb
jae
pop
push
call
clc
jae
lods
jmp
jae
outs
mov
mov
shl
outs
(bad)
shl
cmp
mov
jae
pop
mov
scas
mov
shr
div
sbb
sbb
inc
imul
(bad)
aaa
push
sbb
jae
pop
rcl
neg
sbb
or
pusha
sub
mov
jae
pop
push
add
pop
mov
jae
pop
inc
inc
ret
jae
pop
inc
inc
mov
sti
jae
dec
shl
div
sbb
pop
shl
pop
jmp
and
xor
jae
into
sbb
div
mov
xor
xor
xor
xor
jae
mov
movs
sbb
pop
mov
xor
xor
mov
shl
movs
cmps
jae
stc
(bad)
shl
xor
(bad)
pushf
pop
inc
inc
mov
sti
jae
dec
ror
or
jae
inc
shl
pop
jmp
and
xor
jae
cli
sbb
div
mov
xor
xor
xor
xor
jae
ja
addr16
pop
mov
shl
mov
jae
frstor
out
pop
shl
outs
mov
mov
shl
outs
fcmovbe
mov
shr
jb
xor
neg
jmp
pop
xor
xor
and
pop
mov
jae
lods
mov
neg
jae
outs
mov
mov
shl
outs
fcmovbe
mov
shr
shr
dec
shl
(bad)
sbb
mov
xor
xor
data16
mov
jae
pop
inc
inc
ret
jae
pop
inc
inc
mov
sti
jae
dec
shr
neg
sbb
inc
shl
(bad)
sbb
mov
mov
jae
ret
div
push
lods
add
fdiv
add
xor
mov
into
(bad)
mov
mov
jge
div
cmp
pop
shl
pop
shl
pop
mov
jnp
cmc
mov
lock
mov
fwait
pop
inc
mov
pushf
inc
sbb
jae
mov
push
pop
cmp
or
add
jae
xlat
inc
cmps
xlat
dec
sahf
addr16
xor
xor
adc
lock
mov
mov
jge
stos
cmps
leave
cmp
call
daa
sub
push
inc
push
(bad)
mov
xchg
or
dec
jg
cmp
push
pop
into
outs
pushf
pop
shl
pop
inc
and
das
stos
sbb
out
clc
jae
pop
mov
ror
movs
cmp
aas
cdq
out
cli
adc
push
ja
pop
mov
jle
imul
mov
pushf
lea
neg
rol
mov
mov
or
out
pop
mov
jae
push
mov
mov
xor
or
(bad)
mov
das
stos
sbb
clc
jae
fistp
fwait
mov
mov
jno
dec
shr
jae
inc
mov
or
out
pop
mov
jae
fcmovb
mov
das
stos
sbb
jmp
or
mov
ja
dec
shl
sbb
mov
or
loope
mov
push
out
mov
mov
aaa
div
movs
inc
mov
pop
cmp
or
sahf
adc
xor
xlat
aas
jae
movs
inc
and
popf
lods
jae
fisttp
pop
mov
push
out
faddp
mov
aaa
div
movs
inc
mov
pop
cmp
or
bound
xlat
aas
jae
movs
inc
and
leave
lods
jae
fcmovb
mov
das
stos
sbb
jae
fistp
fwait
mov
jae
daa
inc
jns
dec
shr
pop
inc
mov
or
loope
mov
cli
jae
inc
mov
sar
movs
mov
out
mov
div
movs
inc
mov
pop
cmp
or
bound
xlat
aas
jae
movs
inc
and
jno
jae
fcmovb
mov
das
stos
sbb
call
mov
fwait
loop
mov
jge
dec
shl
inc
sbb
mov
or
loopne
mov
sbb
popa
xor
xlat
aas
jae
movs
inc
and
mov
xchg
or
mov
jae
sbb
mov
movs
shl
test
jne
xchg
cli
push
pop
dec
cli
xor
in
aas
cwde
mov
and
push
add
retf
fmul
mov
ss
jge
add
out
pop
mov
and
mov
pushf
or
jp
(bad)
xor
jae
add
mov
repnz
jae
or
and
or
pop
push
sar
pop
dec
cli
xor
enter
aaa
neg
lods
inc
mov
pop
push
cmps
in
pop
mov
jae
lods
inc
sti
arpl
pop
or
inc
jb
dec
rcr
inc
sbb
mov
or
loopne
mov
jae
mov
inc
mov
cmp
add
das
stos
sbb
call
push
test
movs
jmp
out
mov
movs
mov
shl
mov
pop
cmp
add
das
stos
sbb
jmp
push
test
movs
jmp
out
mov
movs
mov
shl
mov
pop
xor
push
lods
inc
mov
cmp
add
das
stos
sbb
jmp
push
test
movs
jmp
out
mov
movs
mov
shl
mov
pop
cmp
add
das
stos
sbb
fist
or
mov
xchg
jg
data16
movs
xor
or
xor
mov
aaa
neg
lods
inc
mov
pop
cmp
add
das
stos
sbb
jae
fist
or
mov
mov
movs
mov
out
jae
mov
aaa
neg
lods
inc
mov
pop
cmp
add
das
stos
sbb
jmp
push
test
movs
jmp
pushf
ins
or
pop
cmp
add
das
stos
sbb
out
clc
jae
fist
or
mov
mov
movs
mov
out
call
lods
inc
mov
pop
rol
push
sbb
mov
or
sbb
(bad)
jae
xor
shl
mov
mov
stos
cli
jae
dec
mov
fiadd
or
inc
inc
adc
push
lods
inc
mov
push
ds
cmc
pop
mov
cli
xor
jl
std
pop
mov
sbb
fidivr
or
jle
jg
push
mov
movs
mov
stc
fild
jno
pop
push
nop
hlt
pop
mov
mov
pop
mov
pop
pop
mov
vfrczps
mov
mov
movs
inc
dec
stc
fbld
test
inc
mov
ror
push
sar
mov
rol
sbb
mov
or
out
pop
mov
into
push
mov
xchg
fwait
stos
inc
mov
push
add
inc
ins
fist
jge
int
inc
mov
movs
mov
rcr
jne
(bad)
mov
mov
shl
mov
mov
or
out
pop
mov
jae
xor
shl
mov
mov
or
out
pop
mov
xor
xlat
aas
(bad)
push
movs
inc
and
gs
jae
fisttp
pop
mov
mov
or
arpl
cmps
inc
mov
or
loope
mov
jae
fild
or
mov
(bad)
jae
inc
mov
or
jecxz
mov
mov
fnstcw
cmps
xlat
aas
(bad)
push
movs
inc
and
xlat
aas
(bad)
push
movs
inc
and
lds
arpl
inc
mov
pop
shl
scas
pusha
xor
xlat
aas
(bad)
and
ret
or
jle
call
mov
(bad)
mov
or
loope
mov
mov
movs
xor
jne
inc
mov
movs
mov
jo
mov
mov
movs
inc
sbb
clc
jae
mov
aas
(bad)
push
movs
inc
and
jno
jae
fnstcw
sahf
aad
xor
xlat
aas
(bad)
and
add
aas
(bad)
and
add
aas
stos
add
aas
stos
add
inc
lea
movs
xchg
push
out
aas
stos
add
inc
lea
movs
mov
stos
add
dec
mov
pop
int
ja
add
(bad)
push
mov
inc
lea
movs
jmp
fild
or
mov
(bad)
jae
inc
mov
or
in
mov
mov
xlat
pop
(bad)
and
mov
pop
cmps
add
stos
and
sbb
in
mov
mov
xlat
aas
(bad)
push
movs
inc
and
out
dec
mov
movs
push
fsubp
pop
mov
mov
or
in
mov
mov
or
inc
mov
mov
(bad)
neg
test
pusha
mov
mov
movs
jmp
movs
inc
sbb
cli
jae
pop
shl
shr
jbe
pop
mov
mov
or
mov
inc
mov
mov
mov
cli
sar
ss
aas
pop
or
inc
mov
mov
popa
neg
popf
xchg
jae
sbb
push
neg
call
loope
xor
mov
pop
in
mov
jae
or
enter
sbb
cmp
pop
xor
sahf
into
or
div
mov
jae
adc
xlat
sbb
mov
push
and
fwait
ret
jae
sar
jnp
outs
and
sub
pop
dec
nop
jg
push
sahf
or
jmp
pop
shl
imul
fwait
dec
mov
jae
xor
shl
mov
jae
mov
data16
cwde
jmp
mov
jae
xlat
aas
ret
inc
and
das
mov
or
jae
pop
shl
push
sbb
mov
or
ins
movs
inc
lock
mov
pop
mov
jae
fnstcw
jnp
jg
(bad)
mov
inc
jbe
out
clc
jae
in
test
lods
pop
cli
jae
push
mov
sar
ds
mov
adc
or
mov
mov
mov
fwait
inc
ins
fist
jge
xor
xor
or
inc
mov
mov
fwait
outs
dec
mov
rcr
inc
leave
and
sar
sbb
inc
je
mov
push
jg
cmp
bound
sahf
or
inc
mov
sar
rcr
inc
dec
(bad)
sub
mov
icebp
push
mov
pop
push
and
pop
mov
jb
push
jl
pop
mov
mov
pushf
aas
fstp
movs
inc
inc
jg
mov
not
inc
mov
pop
sar
jae
push
mov
or
loop
mov
in
sbb
or
or
jnp
and
fwait
cmp
sbb
xchg
popf
inc
mov
mov
cli
xor
lds
or
push
pop
out
mov
jae
mov
inc
mov
shl
adc
test
push
sbb
jae
sbb
pusha
neg
mov
daa
mov
popf
or
clc
jae
jnp
jae
test
pusha
xor
xor
shl
mov
jae
shr
pop
sbb
bound
mul
cmps
jae
pop
dec
adc
sar
pop
cmp
sahf
retf
div
jl
mov
rcl
sbb
jae
out
sahf
or
clc
jae
jns
jae
test
pusha
xor
xor
shl
mov
jae
jno
jae
fnstcw
jnp
add
or
clc
jae
push
mov
repnz
xor
sbb
xor
xor
mov
jl
pop
xor
inc
xor
and
cdq
mov
neg
jns
in
pop
mov
jl
pop
aaa
ss
or
test
mov
pop
aaa
inc
inc
mov
inc
xor
mov
jae
das
add
sbb
push
fwait
sbb
jae
pop
aaa
ss
or
jno
stos
pop
xor
movs
iret
(bad)
push
lea
retf
or
jae
pop
add
jnp
setl
movs
jmp
xlat
setl
movs
cmp
neg
mov
jmp
or
and
shl
pop
add
pushf
pop
rol
sub
idiv
pop
mov
push
clc
pop
mov
cli
xor
sbb
inc
imul
aaa
jbe
and
jae
pop
jp
mul
push
xchg
stc
pop
mov
aad
pop
mov
ret
sbb
push
mov
sar
cmc
and
push
mov
mov
jge
sub
jae
xor
jae
pop
bound
pop
cmp
xor
jle
neg
mov
xchg
mov
ss
or
stc
pop
mov
inc
imul
mov
sbb
xor
jae
mov
pop
scas
mov
shl
inc
stos
jae
stc
mov
out
sbb
fwait
scas
push
mov
mov
movs
inc
lock
cli
sti
pop
mov
repz
sub
mov
jae
and
xor
or
sti
pop
mov
mov
loop
adc
jg
adc
pop
mov
mov
push
mov
test
inc
mov
fist
popf
or
cmp
jnp
add
jae
push
mov
or
pop
inc
sbb
jae
or
xor
xor
jmp
xor
mov
pop
cmp
out
clc
jae
popf
mov
jb
pop
mov
mov
mov
neg
inc
mov
xor
mov
shl
pop
push
data16
pop
mov
jae
xlat
aas
fistp
movs
inc
and
leave
xor
xor
jle
pop
jmp
pop
rol
mul
mov
jae
inc
aaa
adc
push
mov
pop
mov
cli
xor
mov
jge
pop
shl
pop
shl
pop
pop
and
add
and
stos
jae
rcr
sbb
jae
or
and
xlat
enter
push
push
pop
mov
mov
push
ds
clc
fld
stc
fmulp
jb
pop
push
mov
pop
mov
jae
fmulp
jno
pop
xchg
pop
mov
jb
pop
mov
push
push
mov
jae
push
repz
call
rol
mov
mov
jae
xor
mov
inc
inc
sahf
out
clc
jae
gs
mov
sar
lahf
or
pop
cli
jae
inc
mov
sar
sbb
push
mov
movs
push
outs
adc
xor
push
cmps
inc
mov
bound
inc
mov
mov
mov
jle
pop
mov
stc
fidivr
jae
pop
aaa
idiv
cmps
inc
mov
sbb
jae
call
or
inc
mov
mov
mov
jno
mov
es
movs
clc
jae
inc
mov
jno
scas
or
xor
and
jbe
or
shl
fistp
or
inc
mov
movs
inc
pop
jae
inc
mov
or
jae
pop
inc
inc
mov
sti
jae
icebp
mov
not
inc
pop
push
sar
retf
ds
xor
pop
mov
inc
pop
mov
xor
stc
rol
mov
xor
jne
faddp
mov
mov
xor
pop
iret
jg
outs
rol
mov
push
test
movs
inc
sub
retf
pop
mov
jae
movs
(bad)
sbb
mov
mov
pop
xor
push
pop
and
jnp
fucomip
je
pop
shl
pop
mov
div
sbb
sbb
jnp
das
mov
out
mov
mov
push
pop
icebp
pop
mov
test
inc
mov
les
pop
xor
push
xor
xor
jae
outs
xor
jbe
jbe
stc
clc
jae
jle
jbe
sti
clc
jae
inc
xor
dec
xor
push
xor
fild
neg
jae
das
stos
fwait
push
push
mov
lea
movs
xor
dec
xor
push
xor
push
rol
out
mov
into
cli
pop
mov
jae
das
stos
fwait
push
push
mov
jo
pop
cmp
push
cmps
inc
mov
fstp
xchg
or
pop
mov
movs
jmp
fist
or
mov
cli
xor
cmp
movs
mov
jb
movs
inc
and
outs
push
out
mov
push
xchg
pop
mov
mov
pop
iret
push
pushf
pop
shl
or
div
mov
jae
outs
push
out
mov
push
jle
pop
mov
jae
lods
inc
neg
div
movs
inc
mov
dec
mov
movs
jl
add
xchg
inc
sbb
jae
pop
ror
pop
inc
mov
or
jb
clc
jae
aad
jae
xlat
aaa
jb
movs
inc
lock
cli
repz
push
psubusw
test
jb
add
xor
xlat
daa
jb
movs
inc
and
pop
sub
movs
inc
jae
das
call
cmp
pushf
pop
push
mov
ret
ficomp
xor
mov
jns
pop
push
pop
repz
mov
cli
xor
aas
jb
movs
inc
and
dec
mov
movs
jmp
fisttp
or
mov
sbb
pop
mov
mov
movs
jmp
mov
jp
pop
cmp
mul
call
cmp
pushf
pop
push
sbb
pop
mov
xor
mov
jns
pop
push
(bad)
repnz
mov
mov
fnstenv
mov
xchg
das
inc
lock
dec
into
push
pushf
pop
shl
mov
mov
jae
outs
cmps
out
pop
push
xchg
call
call
mov
cwde
retf
push
or
mul
mov
dec
(bad)
es
sbb
xor
jae
pop
push
xchg
pop
mov
xor
mov
jp
pop
push
sti
repnz
mov
mov
pop
xor
mul
enter
mov
div
movs
inc
mov
movs
inc
and
xlat
aas
xchg
movs
inc
and
std
mov
neg
jle
sahf
movs
mov
jb
movs
inc
and
outs
cmp
mov
push
(bad)
call
repz
pop
inc
mov
pop
iret
push
pushf
pop
shl
popf
arpl
div
mov
jae
outs
cmp
mov
push
pop
call
call
mov
cli
jae
inc
mov
sar
jae
inc
mov
or
test
inc
mov
pop
aaa
test
inc
mov
pop
cmp
neg
div
movs
inc
mov
sbb
jae
out
mov
movs
mov
sbb
xor
stos
mov
shl
push
mov
mul
mov
jae
les
jb
movs
inc
and
dec
mov
movs
jmp
fisttp
or
mov
sbb
pop
mov
mov
movs
jmp
mov
jnp
pop
cmp
mul
call
cmp
pushf
pop
push
(bad)
pop
mov
xor
mov
jnp
pop
push
dec
cmc
pop
mov
mov
fnstenv
mov
xchg
das
inc
lock
pop
into
push
pushf
pop
shl
jbe
xor
xor
jae
outs
xchg
in
mov
push
push
(bad)
pop
mov
jae
fild
or
or
or
jb
movs
inc
dec
(bad)
es
sbb
xor
jae
pop
push
inc
(bad)
pop
mov
xor
mov
je
pop
push
mov
jae
inc
mov
pop
xor
or
retf
mov
div
movs
inc
mov
movs
inc
and
xlat
aas
xchg
movs
inc
and
mov
jle
sahf
movs
mov
jb
movs
inc
and
outs
call
pop
mov
mov
pop
iret
push
pushf
pop
shl
dec
arpl
div
mov
jae
outs
call
pop
mov
jae
fild
movs
mov
test
inc
mov
jb
movs
inc
dec
(bad)
es
sbb
xor
jae
pop
push
push
icebp
pop
mov
xor
mov
je
pop
push
arpl
pop
mov
mov
pop
aaa
(bad)
mul
inc
xor
mov
lds
inc
mov
arpl
pop
rol
adc
aas
fwait
or
inc
mov
sar
jae
inc
mov
or
test
inc
mov
pop
aaa
test
inc
mov
pop
cmp
adc
aas
xchg
or
inc
mov
sar
div
mov
sbb
xor
xor
mov
jae
fisttp
or
shl
out
dec
lea
movs
push
(bad)
pop
mov
xor
pop
iret
xor
push
mov
mov
cmp
neg
mov
shl
iret
dec
mov
movs
call
xor
movs
ja
push
pop
mov
test
inc
mov
mov
dec
lea
movs
push
mov
pop
mov
mov
fnstenv
mov
xchg
das
inc
sbb
xlat
das
or
inc
and
movs
inc
and
out
dec
lea
movs
push
jmp
aas
or
inc
and
mov
mov
mov
jbe
pop
xor
or
dec
lea
movs
push
(bad)
pop
mov
xor
mov
jne
pop
shl
pop
shl
pop
shl
pop
mov
jecxz
pop
push
retf
mov
mov
fist
mov
xor
xchg
movs
inc
fwait
ss
mov
shl
cmp
pop
iret
mov
shl
iret
dec
mov
movs
call
xor
movs
ja
neg
jae
pop
aaa
test
inc
mov
cmp
or
dec
lea
movs
push
xchg
repnz
mov
mov
mov
jo
pop
jge
call
jae
mov
shl
pop
rcr
inc
sbb
jae
or
xor
xor
loope
movs
inc
lock
jbe
outs
mov
mov
push
xchg
repz
mov
cli
jae
inc
mov
sar
out
iret
or
stos
mov
mov
jbe
pop
in
lods
xchg
js
test
xchg
jne
mov
mov
in
popa
inc
pop
add
adc
dec
cli
addr16
idiv
pop
mov
jp
fistp
neg
inc
jb
clc
jae
push
inc
inc
push
(bad)
sti
jae
std
mov
add
pop
dec
xchg
jg
dec
cli
xor
fwait
imul
push
std
movs
(bad)
repz
sbb
jae
outs
cmp
mov
iret
js
outs
xchg
in
mov
push
push
repnz
mov
xor
das
mov
ret
inc
das
xor
mov
ja
pop
xor
int
cmps
out
pop
iret
js
outs
xchg
in
mov
push
cmp
pop
mov
xor
das
mov
ret
jp
xor
mov
ja
pop
add
dec
cmp
out
clc
jae
das
mov
ret
mov
xor
mov
ja
pop
xor
int
call
addr16
pop
mov
not
mov
jae
add
outs
(bad)
iret
cli
jae
mov
add
pop
xor
(bad)
int
xchg
in
mov
iret
jne
inc
sahf
in
mov
add
pop
xor
retf
int
xchg
in
mov
iret
jne
inc
ret
pop
cmp
outs
call
inc
xchg
jmp
clc
jae
pop
xor
(bad)
inc
scas
mov
or
fwait
mov
jae
push
add
ret
pop
mov
xchg
in
lods
xchg
js
neg
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
rcr
mov
pop
xor
xor
fwait
cmps
pop
mov
cli
mov
mov
xor
mov
mov
pop
or
cmps
xor
in
jp
cs
sbb
mov
sbb
(bad)
cs
sbb
mov
jae
pop
shl
xor
mov
add
push
jae
pop
mov
jae
pop
sahf
dec
test
test
sahf
mov
pop
mov
jnp
call
or
adc
das
xlat
repz
sahf
jnp
rol
push
repnz
xor
rcr
jnp
pop
mov
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xor
jae
jg
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
.byte
.byte
