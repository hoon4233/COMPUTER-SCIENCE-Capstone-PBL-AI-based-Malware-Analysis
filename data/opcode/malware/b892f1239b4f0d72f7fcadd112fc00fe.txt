(bad)
(bad)
(bad)
call
in
push
push
push
mov
xor
test
jbe
mov
push
push
mov
test
test
pop
(bad)
(bad)
(bad)
call
sbb
js
push
mov
pop
jns
cmps
fstp
pop
cmps
mov
xor
div
mov
xor
(bad)
(bad)
call
je
push
mov
pop
jne
push
pop
push
test
xor
iret
jb
pop
pop
pop
pop
ret
(bad)
(bad)
push
sub
cmp
cmp
test
sub
mov
(bad)
(bad)
call
and
pop
pop
mov
mov
push
push
push
test
xor
add
or
pop
pop
pop
(bad)
(bad)
(bad)
inc
inc
add
pusha
sub
and
popa
mov
mov
push
push
push
and
test
mov
(bad)
(bad)
(bad)
jmp
and
pop
pop
pop
mov
je
mov
mov
xchg
jne
enter
mov
(bad)
(bad)
(bad)
js
adc
mov
jnp
xchg
clc
mov
inc
lds
inc
add
call
push
sub
add
or
xor
cmp
(bad)
(bad)
push
inc
pop
enter
mov
pop
jge
sbb
pop
push
mov
dec
or
stos
sub
aad
(bad)
(bad)
(bad)
jns
add
jl
xchg
xchg
jge
fbstp
push
dec
daa
add
or
(bad)
jg
dec
mov
add
add
adc
xchg
pop
sub
js
and
jge
fdivr
call
inc
or
push
push
mov
inc
pop
pop
pop
mov
or
sub
or
(bad)
call
mov
mov
jg
aaa
jecxz
hlt
and
int
mov
rcr
mov
or
mov
add
fsub
or
mov
vmread
add
cmp
out
(bad)
in
push
sbb
inc
cld
mov
rep
stos
stos
jle
ja
push
pop
jg
cld
lea
push
push
call
or
cmp
or
cmp
or
pop
mov
push
push
cwde
push
idiv
aaa
cld
push
call
fisttp
adc
add
mov
neg
in
sub
mov
lea
xor
push
mov
jae
pop
or
or
and
add
xor
mov
pop
sbb
and
leave
dec
clc
and
call
add
in
mov
mov
in
rol
clc
push
add
mov
push
pusha
test
and
and
test
cmp
popa
mov
mov
mov
mov
(bad)
(bad)
(bad)
jmp
jmp
push
add
test
dec
test
or
sub
or
or
cmp
popa
mov
mov
inc
nop
(bad)
pop
dec
add
push
push
inc
sub
dec
cmp
cmp
test
or
test
test
pop
pop
mov
cld
(bad)
dec
xor
mov
inc
cmp
mov
jl
mov
pop
mov
lods
outs
clc
sbb
jle
mov
jg
adc
test
mov
push
or
push
test
pop
adc
(bad)
(bad)
cmp
jb
or
jae
loope
lods
mov
cdq
mov
mov
pop
idiv
out
jl
inc
ds
sbb
les
clc
push
jo
jne
mov
push
or
sub
test
xor
out
fcomip
inc
cmp
bound
or
or
cmp
pop
pop
and
xchg
std
adc
test
je
mov
icebp
fld
and
stc
and
call
cld
retf
test
sub
push
or
pop
xor
mov
lea
test
cld
mov
mov
jb
or
mov
ror
lea
lea
push
push
lea
jbe
add
popf
adc
jmp
xor
pop
adc
ret
inc
cmp
data16
jo
inc
(bad)
sub
popf
pop
pop
pop
cmp
or
xor
xor
push
ror
loopne
lea
push
lea
push
push
icebp
or
neg
sbb
neg
mov
add
xor
xor
stos
dec
neg
or
mov
data16
std
mov
mov
sbb
dec
push
cmp
jecxz
aaa
push
or
pop
adc
push
retf
or
inc
(bad)
clc
push
push
push
call
add
push
jg
fnstsw
mov
push
push
push
in
int
add
(bad)
push
push
dec
and
jne
arpl
or
sbb
lock
push
pop
and
push
push
dec
sub
mov
pop
pop
add
aaa
lock
jp
(bad)
and
jnp
mov
(bad)
(bad)
push
push
push
push
test
and
cmp
pop
pop
pop
push
call
not
adc
add
(bad)
out
jmp
sub
push
push
mov
or
xor
push
push
mov
jg
and
sbb
sub
test
add
(bad)
out
ja
out
ins
dec
mov
push
call
adc
mov
das
and
sub
push
push
push
outs
loopne
adc
mov
mov
push
adc
jmp
and
mov
test
mov
push
and
and
sbb
(bad)
and
mov
sbb
loope
lods
sti
jle
and
and
ja
or
mov
xchg
je
(bad)
mov
pop
pop
mov
adc
or
pop
(bad)
jg
in
adc
add
push
or
or
mov
or
rol
push
push
push
(bad)
mov
sbb
xor
add
test
pop
jne
add
and
sbb
aam
jo
jo
xor
int3
lahf
and
lea
out
push
mov
mov
arpl
mov
jmp
or
lahf
adc
loopne
cwde
pop
lahf
rcl
mov
outs
cli
mov
mov
mov
xchg
lock
mov
adc
sti
(bad)
out
mov
or
pop
fisubr
es
lea
fbstp
fld
lea
inc
add
mov
push
je
mov
sbb
add
cld
mov
cld
jl
push
mov
inc
add
call
add
clc
mov
mov
push
mov
je
fsub
push
push
push
and
pop
and
mov
pushaw
push
test
or
pop
popaw
addr16
jl
pop
test
and
jbe
push
rcr
push
retf
mov
xor
clc
out
sub
icebp
fst
sbb
and
pusha
adc
adc
xchg
adc
mov
mov
mov
cmp
sbb
add
iret
or
je
and
fdivr
push
adc
xor
divps
cmps
and
fstp
je
push
sbb
test
mov
inc
mov
mov
(bad)
fdivr
clc
(bad)
(bad)
push
mov
push
and
cmp
test
cmp
test
xor
pop
mov
mov
adc
or
imul
(bad)
call
and
or
and
and
xor
add
or
pop
xchg
jnp
(bad)
xor
push
xor
pop
pop
loop
std
xchg
or
or
cmps
mov
(bad)
out
xor
adc
push
push
push
inc
xchg
lods
add
(bad)
jg
push
push
pop
jae
scas
bound
pushf
dec
call
test
lea
fist
inc
call
inc
dec
mov
ret
and
or
sub
daa
or
aaa
or
xor
adc
(bad)
imul
outs
adc
xchg
add
hlt
add
(bad)
dec
mov
stos
js
mov
jns
sub
xchg
and
cmp
ds
(bad)
inc
cmp
xor
pop
lea
pop
mov
push
and
push
sub
clc
push
mov
push
mov
or
adc
outs
push
in
pop
or
adc
lea
cld
(bad)
call
addr16
push
push
(bad)
outs
adc
push
sub
dec
adc
push
cs
retf
sub
dec
daa
pop
out
sub
push
xchg
mov
sub
jb
cmp
jle
outs
stc
cld
jl
clc
jmp
mov
mov
sbb
test
pop
pop
wrmsr
xor
rcr
add
mov
cmp
adc
mov
je
push
pop
ja
pop
hlt
pusha
test
sbb
shr
and
out
jle
jge
mov
push
call
mov
pop
and
mov
loope
out
xor
leave
je
mov
or
and
nop
daa
or
mov
or
icebp
xor
clc
or
daa
mov
clc
jg
push
sub
cmp
add
pusha
and
pop
pop
xor
xchg
and
cmp
addr16
push
push
push
ds
(bad)
jmp
bnd
mov
nop
xchg
jno
mov
repnz
mov
and
dec
clc
lea
or
mov
fs
cld
dec
and
inc
dec
clc
adc
push
jmp
cli
aaa
cli
add
push
mov
or
(bad)
sbb
(bad)
dec
ret
nop
nop
dec
pcmpgtd
push
or
xor
pop
pop
pop
mov
pusha
adc
cli
cmp
mov
mov
add
push
test
cmp
add
pop
cmp
aaa
(bad)
mov
or
sub
cmp
loope
js
and
pop
leave
test
mov
lock
lock
clc
je
push
mov
pop
jne
pushf
popf
push
cmps
(bad)
(bad)
(bad)
mov
test
and
and
cmp
mov
sub
test
pop
dec
sahf
cli
pop
pop
cmp
mov
mov
(bad)
fcomip
mov
inc
cmp
rcl
js
jb
mov
push
push
push
xor
clc
hlt
(bad)
fiadd
test
pop
pop
pop
fidivr
or
xor
inc
(bad)
or
std
pop
xor
test
jbe
mov
ja
or
rcr
stc
lahf
inc
fwait
cli
(bad)
(bad)
cmp
mov
jb
push
cmp
sub
sub
retf
jmp
es
pop
mov
mov
lea
jmp
retf
lock
jmp
inc
movs
inc
jo
leave
pop
fnstcw
sub
mov
push
push
lea
push
or
sub
jne
dec
(bad)
push
push
cmp
dec
pop
pop
pop
mov
mov
ret
adc
mov
mov
(bad)
xor
sbb
dec
nop
nop
push
out
and
sbb
fsubr
shl
jmp
sbb
jmp
and
mov
clc
mov
mov
(bad)
aad
dec
push
dec
mov
ret
xor
mov
inc
pop
in
scas
popf
iret
test
push
mov
(bad)
fst
test
outs
sub
mov
nop
mov
rol
sar
xchg
enter
push
mov
add
das
pop
pop
xor
pop
je
mov
xchg
jne
inc
loopne
sbb
sub
cmp
jl
ss
hlt
push
mov
repz
sub
add
cld
out
pusha
ret
fist
test
jg
adc
test
je
jb
mov
aaa
cld
inc
dec
adc
cmp
mov
ja
add
(bad)
jmp
mov
mov
cmp
jne
lea
lea
lea
xor
repz
je
loop
loopne
mov
mov
inc
cmp
jbe
(bad)
pop
ret
pop
mov
pushf
mov
lahf
push
stos
cmp
push
inc
push
mov
add
dec
clc
inc
mov
sti
pop
neg
pop
jmp
push
push
push
add
push
jmp
(bad)
call
inc
retf
dec
or
cmp
add
dec
dec
cmp
pop
call
jecxz
adc
pop
(bad)
(bad)
dec
push
push
xor
add
cmp
sub
or
cmp
xor
dec
dec
ret
test
pop
pop
xchg
sub
sub
jp
mov
mov
or
mov
mov
sub
test
xor
cwde
clc
cld
or
mov
xor
repnz
not
dec
push
dec
mov
retf
push
push
sbb
call
into
(bad)
mov
inc
or
(bad)
dec
jne
jo
out
pop
push
mov
pop
jno
call
jnp
lock
xor
xchg
adc
(bad)
test
pusha
pop
jno
ins
sti
dec
adc
push
push
push
mov
pop
mov
adc
jl
out
push
aaa
add
or
(bad)
mov
xchg
test
je
cmp
cmp
test
(bad)
js
std
dec
sub
cmp
inc
and
pop
pop
sub
mov
(bad)
mov
dec
sub
and
and
cmp
cmp
xchg
push
add
inc
pop
pop
mov
inc
in
ja
sbb
(bad)
xor
mov
or
int3
jne
push
call
call
lea
mov
fsubp
cs
movs
pop
addr16
push
push
jo
add
inc
dec
mov
jnp
pop
pop
rol
xchg
jecxz
push
cdq
mov
ret
adc
inc
cmp
jb
pop
pop
pop
imul
sub
hlt
outs
loop
dec
cmp
inc
test
test
pop
lea
lea
call
sub
outs
add
js
sub
inc
clc
push
loop
push
lock
lea
xor
or
mov
dec
xchg
cmpxchg
push
test
cmp
pop
mov
mov
pusha
sub
or
bound
or
sbb
(bad)
add
sub
or
fs
call
ret
add
sub
pop
pop
jb
cdq
push
mov
pop
jae
retf
in
sub
(bad)
inc
scas
sub
sbb
dec
sbb
push
and
xor
adc
mov
ret
mov
aas
sbb
add
cmp
push
push
mov
pop
ffreep
(bad)
push
(bad)
jno
sbb
mov
ror
cmp
or
add
(bad)
inc
inc
xor
and
jb
xlat
jae
xor
lea
jbe
mov
fdiv
movs
or
sbb
mov
jbe
inc
fsubr
stc
or
jne
mov
stc
sbb
sbb
inc
sbb
adc
or
add
pop
push
adc
mov
je
fist
mov
leave
inc
inc
test
and
mov
and
mov
pop
(bad)
fnstsw
pop
or
aad
push
mov
pop
jge
lea
xchg
xor
mov
dec
sar
(bad)
jg
inc
add
push
and
cmp
xor
or
pop
pop
mov
cli
es
and
add
sub
outs
call
dec
add
jl
cmp
cmp
and
(bad)
(bad)
inc
pop
mov
pusha
test
test
or
mov
cmp
add
mov
push
push
xlat
push
dec
and
sub
gs
mov
adc
mov
dec
(bad)
(bad)
(bad)
dec
and
cmp
and
xor
add
test
or
or
(bad)
(bad)
call
repnz
pop
pop
mov
jp
mov
mov
xchg
jnp
psrlw
enter
daa
in
add
(bad)
js
pop
add
adc
or
jne
jo
add
repnz
sbb
in
push
push
rcr
rcr
cli
ja
test
mov
rol
add
clc
fist
in
mov
sbb
add
push
push
push
jp
bound
sub
push
mov
and
push
add
push
adc
pop
sbb
cli
lea
mov
mov
mov
jg
ror
pushf
and
push
sbb
add
cmp
jo
jae
sbb
adc
jbe
mov
call
xchg
clc
out
(bad)
pop
push
push
call
and
push
xchg
clc
out
add
dec
and
es
fwait
sub
push
push
out
fdivr
inc
and
cld
adc
and
int
add
or
je
aaa
lea
mov
cmp
out
ret
repnz
mov
add
xchg
inc
or
or
xchg
sub
mov
mov
mov
push
mov
dec
fwait
std
int
dec
retf
dec
rep
jne
movsx
mov
scas
jnp
in
push
mov
push
popf
xor
adc
xlat
lock
call
push
push
fstp
fstp
dec
jo
and
popa
dec
mov
dec
cwde
sti
add
test
push
js
mov
cs
mov
push
cwde
js
movs
dec
sub
xchg
push
push
push
dec
push
or
add
push
sub
pop
movs
pop
jno
ret
xchg
xchg
and
scas
and
push
xchg
jns
inc
in
adc
add
ror
or
mov
int
test
mov
jle
add
inc
sub
mov
mov
push
ins
xor
jmp
pop
pop
mov
cmp
shr
jecxz
or
mov
or
fmul
gs
lea
cdq
test
jp
icebp
(bad)
(bad)
jmp
pop
jnp
outs
cmp
aas
pop
(bad)
gs
sbb
mov
push
dec
xor
push
test
test
mov
pop
pop
mov
ja
shl
sar
call
dec
pop
inc
mov
mov
mov
inc
cmp
mov
jl
outs
dec
push
lds
push
push
push
test
fbld
dec
dec
or
xor
or
rol
call
jmp
add
jecxz
add
push
lea
mov
mov
rol
shl
bound
bound
and
mov
in
sbb
(bad)
cmp
outs
stc
mov
test
sbb
pop
dec
cs
das
push
lds
adc
sti
jmp
les
cmp
pop
pop
lea
bound
jno
jo
rol
addr16
cli
retf
movs
sub
icebp
enter
test
(bad)
test
lea
call
aam
mov
mov
pop
sub
push
mov
ins
mov
inc
lock
push
lea
push
push
push
call
sbb
push
iret
pop
pop
mov
jo
or
lahf
dec
xchg
outs
xor
pusha
dec
jp
pop
ret
adc
add
or
xor
xlat
loopne
mov
cwde
mov
rep
in
cmp
mov
jp
xchg
mov
or
jecxz
mov
out
out
cmps
add
sub
dec
test
xchg
je
jmp
mov
retf
add
aas
sub
mov
(bad)
push
push
inc
pop
pop
push
clc
enter
push
push
(bad)
out
scas
adc
xor
fld
js
leave
ja
or
loopne
mov
adc
or
shl
les
push
adc
idiv
push
push
fs
sub
hlt
cmp
je
and
or
or
push
or
push
ror
add
dec
sub
push
mov
das
push
fbstp
xor
push
push
and
pop
lock
push
push
push
or
mov
cmp
and
pop
pop
push
cwde
push
(bad)
int3
aam
mov
inc
icebp
loopne
je
call
inc
jbe
aaa
sub
inc
(bad)
pop
mov
es
pop
xchg
xor
push
push
adc
add
inc
add
gs
jmp
cmp
inc
retf
push
out
(bad)
(bad)
inc
jb
push
mov
pop
jae
cmc
adc
xor
sbb
lock
call
push
call
adc
and
xor
or
xor
sub
and
in
add
dec
add
dec
or
or
push
cmp
xchg
xchg
mov
xchg
ja
inc
(bad)
test
xor
fsub
sub
or
push
dec
(bad)
jmp
iret
jecxz
sub
cmp
and
out
push
or
pop
mov
pushf
aas
xor
or
sub
lods
jecxz
aas
inc
test
test
pop
pop
jle
sub
sbb
dec
xchg
add
test
push
cmp
je
loop
pop
jne
add
sti
push
ins
in
loopne
aad
xor
push
and
push
push
fcos
jg
pusha
ss
test
popa
push
push
mov
ss
sub
aaa
xor
sub
mov
retf
mov
pop
and
jae
fs
(bad)
mov
fsub
add
cli
pop
mov
leave
pop
data16
and
pusha
and
or
or
ins
push
neg
cwde
dec
xor
sub
sbb
jge
push
adc
js
das
loopne
inc
mov
dec
fmul
mov
popa
xor
daa
in
pushf
sub
push
add
mov
pusha
pusha
in
xor
adc
and
or
xor
inc
and
mov
test
or
imul
sbb
and
xor
enter
fsub
inc
gs
or
(bad)
addr16
xor
in
ins
hlt
and
add
fdivr
fild
push
push
push
and
or
dec
inc
cmp
mov
jmp
xor
cmp
dec
pop
pop
pop
das
or
xchg
add
fld
or
daa
and
dec
or
and
in
jmp
test
leave
ret
jl
xor
cmc
mov
push
push
jae
aaa
jl
mov
fs
jge
push
xor
cld
push
stos
jo
push
cmp
jg
mov
loopne
xor
push
test
sub
es
adc
mov
pop
pop
push
jnp
mov
idiv
push
dec
inc
xor
inc
mov
inc
nop
mov
sub
push
rol
mov
push
push
add
pop
mov
add
pusha
push
leave
test
inc
xor
push
push
jo
sbb
push
adc
mov
loope
pushw
xor
fs
jp
pop
push
and
cmp
inc
adc
or
aaa
rcr
ins
push
push
or
push
push
sub
inc
loopne
adc
add
ret
adc
adc
fcom
pop
ret
nop
sub
lea
lea
rol
and
push
push
push
ins
or
xchg
sbb
call
je
mov
cmp
jbe
shr
or
add
(bad)
iret
sub
test
mov
std
out
inc
and
mov
add
rcr
push
and
ins
add
jb
cld
mov
mov
mov
lea
push
push
push
push
adc
sub
push
adc
mov
aaa
and
add
loopne
xchg
fist
or
sub
or
push
cmp
and
add
jmp
sti
add
pop
ja
mov
add
and
mov
retf
stos
sub
cmp
or
add
lea
push
sti
jmp
aas
push
push
push
cmp
mov
test
cmp
add
add
pop
pop
pushw
lds
add
call
mov
or
enter
faddp
add
mov
out
jmp
or
mov
shr
push
push
push
aaa
sbb
mov
cmp
adc
xchg
xchg
xchg
ja
mov
mov
mov
call
mov
mov
add
dec
pop
mov
cmp
inc
cmp
jb
mov
int
lock
xchg
inc
jno
sub
icebp
mov
test
in
dec
cmp
jb
inc
sub
add
mov
inc
icebp
mov
xchg
jle
dec
xor
xor
(bad)
aas
sbb
rol
or
and
pop
pop
stc
ficomp
pop
mov
mov
mov
push
inc
xor
(bad)
pop
popf
std
(bad)
dec
mov
(bad)
pop
mov
out
push
cmp
mov
mov
mov
je
mov
inc
icebp
inc
push
out
jne
mov
push
lea
pop
clc
inc
pop
lea
int
call
pop
(bad)
pop
call
mov
mov
popf
clc
mov
mov
lea
cmp
neg
out
dec
mov
mov
adc
bound
inc
int3
sbb
push
cmc
mov
push
mov
inc
fdivr
inc
fcomp
push
out
mov
test
mov
mov
mov
mov
mov
(bad)
stos
test
mov
mov
mov
jle
sti
add
(bad)
out
mov
popf
jle
mov
mov
mov
loopne
frstor
lea
call
mov
jg
gs
mov
adc
sar
nop
adc
(bad)
sub
fwait
aam
sub
pop
call
add
ret
adc
mov
lock
push
push
sahf
shl
mul
or
push
call
cmps
jnp
and
enter
bound
pop
xchg
and
mov
inc
ja
stc
pop
mov
jg
add
mov
cmp
inc
je
fnsave
pop
xor
sbb
sub
lds
mov
jmp
push
add
into
push
or
xor
inc
test
dec
mov
int3
add
mov
aad
add
inc
push
mov
add
adc
mov
out
cld
aas
add
or
xor
jmp
push
mov
mov
push
push
push
inc
cmp
pop
pop
pop
xlat
ins
cmp
jle
test
in
and
les
loop
fdiv
add
ret
out
scas
dec
call
call
(bad)
out
outs
pusha
pop
adc
push
mov
or
add
adc
idiv
jp
push
mov
pop
jnp
adc
push
lea
clc
push
push
sahf
pop
and
adc
jo
ror
scas
(bad)
fdiv
add
push
out
sbb
pop
nop
xchg
and
jno
push
push
push
push
inc
in
jbe
push
push
or
es
dec
and
sub
shl
es
adc
mov
push
mov
push
cmps
arpl
add
neg
(bad)
aaa
lock
mov
int3
hlt
loop
push
cld
pop
sbb
mov
push
jp
sub
sbb
mov
push
push
push
push
call
add
imul
inc
and
cmp
adc
pop
mov
add
and
dec
jne
lods
pop
and
xor
lea
mov
push
loop
mov
inc
adc
add
push
jb
pop
pop
pop
lds
mov
js
add
ret
mov
add
jge
jg
and
fs
test
imul
clc
pop
or
xor
xchg
push
test
sub
cmp
add
and
scas
es
dec
fbld
jl
xor
sub
xchg
rcr
rcr
sbb
je
shl
cwde
stos
movs
or
or
dec
pop
push
mov
mov
test
jne
jp
test
adc
inc
mov
pop
add
and
inc
sbb
div
xchg
push
or
mov
data16
addr16
pop
je
push
sub
cmp
call
inc
aas
loopne
push
inc
sub
push
or
jbe
cmp
call
sbb
dec
push
shl
push
shr
xor
and
cmps
(bad)
into
and
adc
mov
add
jbe
mov
push
push
aam
adc
cmp
push
out
call
ret
xlat
xchg
dec
cmp
add
push
cs
sar
adc
arpl
bound
mov
push
es
push
xlat
lods
sbb
into
jmp
rcl
sbb
mov
and
ffree
call
jmp
pop
repz
pusha
pop
ins
ja
nop
mov
dec
or
loop
pop
pusha
inc
or
inc
mov
test
jbe
dec
sbb
ins
mov
test
jecxz
sti
mov
mov
add
mov
dec
inc
xlat
and
test
movs
pop
inc
call
ror
mov
add
dec
ins
adc
call
rol
movs
and
inc
or
in
sbb
and
mov
lahf
fcmovnb
mov
cmp
cmp
or
adc
(bad)
cmp
xchg
adc
std
(bad)
pop
nop
jmp
add
les
pop
jg
cmp
mov
dec
inc
add
ja
fwait
jp
push
fs
add
out
push
push
mov
fnsave
hlt
gs
add
adc
or
std
mov
push
call
test
or
adc
arpl
add
test
inc
or
push
neg
adc
cmp
push
push
fnstsw
daa
cmp
mov
xchg
lea
push
push
mov
mov
inc
nop
add
add
jg
arpl
add
add
mov
mov
cmp
out
jg
and
inc
or
add
and
adc
scas
sti
pop
and
mov
lea
dec
inc
aaa
test
je
movzx
aam
push
cmp
jbe
sub
cmc
push
pop
push
push
push
xor
out
pop
jo
cmp
mov
xor
jnp
(bad)
in
mov
mov
mov
dec
cmp
pop
pop
ret
mov
push
dec
data16
out
call
fadd
(bad)
data16
sub
rol
jmp
rcr
int3
jmp
sub
xor
pop
or
dec
inc
add
add
or
scas
sub
pcmpgtw
add
push
(bad)
(bad)
imul
dec
add
sbb
push
push
inc
aas
(bad)
fst
sbb
sbb
(bad)
(bad)
(bad)
(bad)
in
push
push
repnz
push
adc
push
aaa
pop
xor
bound
push
cmps
sbb
jg
dec
and
jae
jae
jmp
push
ins
inc
aaa
call
and
cmp
sar
mov
(bad)
(bad)
dec
hlt
scas
or
pop
int3
out
out
xor
cmps
movs
(bad)
aad
outs
add
outs
es
(bad)
call
mov
int3
adc
stos
push
adc
pop
cli
add
and
mov
jg
xchg
inc
(bad)
jg
sub
push
sub
out
iret
jae
mov
push
pop
inc
cmp
inc
push
dec
add
pop
loopne
inc
pop
lahf
jne
ja
jmp
push
push
out
dec
(bad)
xor
mov
push
mov
aas
dec
push
xlat
leave
push
push
inc
das
sub
js
sbb
pusha
sbb
cmp
ja
idiv
sbb
dec
sbb
sub
dec
add
inc
lss
push
mov
push
push
fstp
pusha
xchg
sub
daa
daa
inc
cmp
pop
inc
jle
mov
sub
dec
loope
push
dec
push
and
imul
jmp
jae
sub
fistp
inc
aas
test
mov
push
ret
dec
add
cwde
fstsw
enter
dec
xchg
imul
mov
cmp
sbb
push
xor
push
ja
aas
test
jl
add
inc
cmp
loopne
sbb
xchg
pop
fld
or
das
or
fdiv
cwde
out
bound
std
fbstp
daa
push
and
leave
nop
into
sub
pop
out
popa
pop
inc
xchg
jmp
mov
jg
inc
inc
mov
sbb
leave
fld
jmp
js
fadd
xor
fisubr
dec
aas
dec
jecxz
leave
push
pop
cmps
push
push
bound
enter
push
push
(bad)
(bad)
(bad)
inc
add
jecxz
sbb
and
inc
aas
lds
sbb
push
xchg
leave
aas
dec
xlat
(bad)
push
repz
push
lods
cmp
add
push
push
fst
push
sar
cmps
jmp
inc
aas
stc
lea
mov
fsubr
dec
aas
dec
push
leave
push
push
mov
add
inc
push
push
stos
fcom
mov
rol
or
enter
push
sub
fisubr
xchg
aaa
loop
nop
jno
push
scas
arpl
cld
mov
push
xchg
or
dec
dec
loop
and
dec
xchg
scas
add
inc
or
aas
sbb
(bad)
(bad)
dec
pop
xor
jp
xchg
pop
jmp
jle
leave
scas
(bad)
lds
push
push
sub
jno
ror
jmp
loop
and
movs
test
sbb
inc
push
adc
inc
nop
(bad)
(bad)
(bad)
inc
cmp
call
test
or
push
(bad)
loopne
inc
cwde
cdq
in
loope
dec
and
mov
leave
push
push
adc
enter
fcomip
(bad)
dec
cmps
aaa
(bad)
rcl
int
imul
scas
(bad)
shl
fcom
mov
(bad)
jmp
pop
push
or
xchg
fdivrp
jmp
ret
scas
mov
psrlw
nop
and
sub
mov
sti
mov
cwde
jmp
test
jp
dec
sub
(bad)
and
(bad)
(bad)
(bad)
call
sub
xchg
push
pop
sub
pop
push
or
sbb
std
sbb
(bad)
(bad)
jmp
arpl
push
push
sar
xchg
add
adc
sbb
sbb
xor
call
push
lods
aaa
ret
mov
cwde
retf
imul
ja
xchg
inc
sub
dec
cmp
or
jne
iret
xchg
scas
dec
fadd
xchg
(bad)
(bad)
(bad)
inc
mov
adc
xor
fsubr
xchg
les
dec
sbb
psubusw
mov
stos
push
bound
push
in
mov
popa
clc
and
sti
and
fistp
lods
push
inc
aas
rol
(bad)
jmp
cmp
add
(bad)
mov
push
mov
leave
xchg
(bad)
(bad)
(bad)
dec
popf
aam
(bad)
xor
sbb
jmp
sbb
xor
sbb
cmc
dec
mov
(bad)
dec
add
push
adc
pop
cmc
jp
push
ss
ror
scas
dec
cmp
aaa
(bad)
(bad)
(bad)
push
ja
data16
dec
add
add
leave
sbb
stos
lods
adc
nop
push
fwait
jnp
cmp
rcr
icebp
(bad)
call
lods
mov
xchg
cmps
dec
xchg
mov
out
pushf
jg
and
push
xchg
jnp
in
dec
(bad)
call
clc
test
mov
leave
cmp
retf
cmp
mov
mov
dec
mov
jl
mov
add
xor
rol
push
push
jmp
es
xchg
test
jne
pop
push
sub
lods
xchg
inc
push
mov
(bad)
jmp
and
inc
out
lea
scas
rcr
jmp
mov
add
arpl
imul
test
jmp
fwait
(bad)
call
add
in
icebp
mov
jo
adc
mov
pop
shr
std
sbb
pop
jecxz
je
inc
sbb
data16
mov
(bad)
(bad)
push
or
(bad)
out
int3
loopne
mov
cs
add
jo
(bad)
jmp
cmps
stos
fcom
add
or
xlat
stos
lods
mov
in
int3
sar
push
rcr
(bad)
(bad)
(bad)
dec
xchg
and
mov
xchg
inc
in
int
and
push
push
leave
stc
adc
add
(bad)
fcomip
test
sar
push
adc
test
sub
int
rol
fsubr
push
inc
dec
push
arpl
(bad)
call
fbld
jecxz
ds
xchg
pop
jne
sub
sub
js
lods
rcl
mov
lods
shr
push
xchg
nop
retf
aas
push
mov
daa
add
mov
(bad)
sti
ja
fiadd
jmp
push
cmc
mov
inc
outs
mov
out
(bad)
(bad)
(bad)
jg
sbb
jmp
mov
icebp
mov
xchg
inc
rcl
inc
mov
cmp
into
(bad)
push
(bad)
scas
push
rcl
ficom
xchg
push
leave
ror
in
push
call
jmp
ret
ror
fwait
fs
test
in
push
shl
mov
(bad)
inc
inc
stos
inc
ds
push
sub
mov
hlt
adc
shl
sub
rol
jmp
cmps
mov
cdq
sub
scas
adc
(bad)
(bad)
(bad)
jmp
inc
add
pop
push
js
push
and
je
pop
cs
add
ja
aaa
cdq
clc
xor
push
inc
aad
or
cmp
imul
add
ss
fwait
xor
aam
lods
sub
push
mov
push
loop
mov
es
inc
ins
aaa
or
xchg
lahf
pop
mov
push
sub
stos
shr
jo
jns
(bad)
(bad)
(bad)
std
sub
mov
xor
repz
leave
mov
push
xchg
xor
push
stos
es
push
dec
call
outs
cli
imul
mov
sbb
xchg
aas
ss
(bad)
(bad)
jmp
pop
sub
pop
or
pop
test
mov
ins
sub
sbb
(bad)
(bad)
out
or
adc
popa
push
sub
dec
add
and
(bad)
(bad)
(bad)
call
pop
ret
(bad)
adc
mov
sbb
stos
outs
pop
imul
stos
jle
imul
(bad)
(bad)
call
cmps
dec
push
sub
int
sbb
or
inc
test
ins
xor
pop
jno
mov
inc
jns
lahf
adc
or
xchg
jae
jno
enter
push
popa
scas
cmp
(bad)
(bad)
(bad)
inc
mov
xchg
jecxz
stos
push
sub
fsubr
mov
and
xor
(bad)
(bad)
(bad)
inc
jmp
jmp
jno
addr16
daa
ret
dec
add
arpl
xchg
arpl
sub
jp
(bad)
(bad)
(bad)
jns
jecxz
or
pop
push
iret
and
sub
inc
arpl
xor
pop
inc
test
xchg
mov
nop
xchg
cmc
lock
push
pop
fadd
aaa
jg
jp
out
and
(bad)
jmp
push
xor
lahf
mov
dec
gs
xchg
sbb
push
inc
pop
add
cli
fstp
les
xor
jns
enter
push
jmp
ins
xor
imul
cmp
mov
or
(bad)
dec
and
fs
and
(bad)
mov
cmp
imul
outs
sub
fcomip
(bad)
(bad)
mov
fisubr
sub
sar
mov
test
(bad)
(bad)
(bad)
push
add
sahf
xchg
mov
das
push
push
sar
test
arpl
scas
in
or
mov
jmp
(bad)
sbb
push
fiadd
aaa
cmp
xchg
in
int
ds
imul
sub
mov
mov
sbb
dec
pop
add
pop
ja
call
ret
jo
movs
popf
xchg
fsubrp
mov
movs
test
jg
jmp
pop
inc
sub
data16
sub
xchg
and
les
push
cwde
push
cld
jmp
icebp
jmp
sbb
stc
add
pop
nop
mov
dec
and
jecxz
jecxz
adc
push
lods
push
and
mov
cwde
jmp
xchg
stos
xchg
(bad)
(bad)
dec
mov
mov
sub
cmps
and
jge
pop
iret
(bad)
(bad)
(bad)
jg
jle
inc
out
mov
mov
or
cs
adc
xchg
fwait
dec
int
dec
(bad)
(bad)
inc
out
pop
xor
xor
ss
add
icebp
dec
xor
lock
clc
xor
xchg
jle
pop
jnp
stos
nop
dec
xor
popw
mov
xor
ficom
inc
ds
pop
std
or
mov
push
test
push
dec
add
jo
icebp
(bad)
mov
and
adc
lea
in
push
popf
enter
xadd
cmp
sub
sub
jae
or
cld
je
push
mov
xlat
pushf
xor
leave
in
or
cmps
test
mov
(bad)
mov
sub
add
or
mov
fidiv
dec
(bad)
(bad)
jg
pop
retf
dec
test
retf
loopne
(bad)
fsub
mov
cmp
sub
ja
jnp
xor
imul
jo
stc
cmp
(bad)
push
and
les
inc
loop
mov
mov
adc
(bad)
or
jg
mov
push
in
push
inc
rep
(bad)
(bad)
(bad)
mov
push
icebp
push
jg
add
daa
jle
and
out
cdq
jmp
sbb
cmp
bound
jnp
mov
iret
jp
sbb
cwde
cmc
je
push
sub
add
(bad)
mov
or
mul
xchg
js
sub
in
xchg
push
ja
(bad)
jmp
mov
push
dec
add
xor
sbb
push
inc
sar
cmc
mov
test
scas
(bad)
(bad)
(bad)
call
sub
imul
xchg
bound
add
add
inc
aas
mov
test
dec
ficom
lods
shr
sub
hlt
aaa
in
mov
jmp
dec
dec
bound
cmp
lock
push
sbb
cmovne
div
or
cdq
daa
sbb
imul
icebp
(bad)
(bad)
dec
adc
jne
xchg
adc
xchg
loopne
pop
add
sbb
sar
jle
inc
loopne
sbb
int
ss
add
leave
sub
mov
pop
jne
(bad)
call
mov
movs
(bad)
xchg
scas
rol
loopne
repz
push
dec
pop
xor
call
shl
les
fbld
jmp
ror
inc
pop
dec
cmp
out
cwde
sbb
call
mov
inc
and
inc
xchg
int
add
xor
sti
(bad)
(bad)
jmp
mov
sbb
adc
sub
(bad)
(bad)
(bad)
inc
push
shr
and
jbe
sub
leave
xchg
mov
jl
sbb
scas
(bad)
(bad)
(bad)
inc
es
imul
xchg
sbb
add
dec
xchg
dec
push
(bad)
fwait
cmp
pop
imul
(bad)
(bad)
ffreep
sbb
popa
fcom
fisubr
sbb
mov
aam
inc
pop
push
(bad)
(bad)
(bad)
jmp
push
push
ja
sub
sub
jb
mov
and
nop
and
(bad)
(bad)
call
add
ror
mov
cwde
dec
sbb
jmp
jmp
xor
or
(bad)
sti
xchg
in
(bad)
(bad)
call
fisttp
(bad)
je
or
dec
lods
mov
mov
inc
push
inc
cmp
mov
pop
fstp
cdq
pop
or
xchg
xor
lea
dec
out
mov
pop
adc
add
jb
pop
test
jmp
(bad)
call
mov
addr16
sub
mov
mov
pop
and
and
call
fld
in
mov
mov
sbb
scas
movs
mov
inc
jg
adc
(bad)
call
inc
pop
stos
cmp
dec
pop
addr16
scas
aaa
mov
mov
mov
cmp
push
mov
add
sub
mov
lock
(bad)
jmp
mov
adc
jl
out
das
ret
mov
test
pop
jae
mov
xchg
out
mov
pop
inc
push
fwait
push
jb
dec
(bad)
and
(bad)
(bad)
aam
dec
ins
retf
jne
mov
mov
je
adc
add
(bad)
jg
sar
xor
and
pop
and
(bad)
push
adc
test
ror
push
aaa
xchg
std
push
xor
mov
sub
cmp
call
adc
inc
xchg
xchg
addr16
sets
jmp
jg
(bad)
dec
jecxz
inc
jmp
out
arpl
int
sub
and
(bad)
mov
add
(bad)
(bad)
call
aas
ja
xchg
jae
inc
pop
in
pop
retf
shl
inc
cmp
and
jge
adc
imul
imul
inc
in
xchg
push
movs
jmp
(bad)
(bad)
dec
fild
push
sub
nop
ret
xor
or
int3
pop
push
push
call
mov
retf
jnp
ror
xor
repz
mov
stos
jmp
loope
mov
inc
pop
pop
cmp
and
rol
and
and
(bad)
inc
pop
pop
popf
clc
push
or
push
sub
add
nop
ja
add
sbb
mov
or
ret
pop
jp
xor
mov
test
aam
cmp
push
sub
(bad)
push
mov
cdq
sub
inc
xor
int
add
add
pop
adc
add
call
jne
push
cmp
aad
addr16
jbe
inc
(bad)
(bad)
call
loop
dec
(bad)
(bad)
or
outs
mov
mov
mov
pop
jno
pushf
pop
lds
aas
sub
jmp
mov
(bad)
(bad)
fild
or
sub
add
mov
rol
dec
test
addr16
(bad)
cmc
call
xor
je
push
mov
xor
push
mov
jge
(bad)
inc
and
mov
push
sub
cmps
inc
data16
or
xchg
dec
pop
cmp
sti
(bad)
out
arpl
sbb
cmp
jle
mov
and
(bad)
mov
arpl
push
pop
call
push
jmp
dec
aam
bound
lock
xchg
pushf
shl
jno
push
jno
gs
mov
(bad)
jmp
pop
(bad)
ss
cwde
dec
pusha
xcrypt-ofb
cmps
in
jl
and
mov
push
aaa
mov
xchg
ds
ja
cmp
(bad)
popf
shr
sub
push
push
sub
dec
nop
imul
sti
sub
add
pop
(bad)
(bad)
call
fbld
outs
add
add
ds
cmps
adc
call
dec
pop
js
push
inc
pop
adc
and
scas
shr
pop
adc
call
sbb
add
fistp
jno
(bad)
out
ja
or
xchg
pop
int3
inc
(bad)
or
inc
xchg
xor
call
(bad)
sub
adc
ins
aad
popa
cmp
mov
gs
dec
imul
scas
adc
pop
adc
add
aaa
data16
gs
cmp
and
movs
adc
test
cmp
(bad)
xor
fldcw
add
push
inc
jmp
out
mov
mov
push
mov
xor
and
out
dec
icebp
(bad)
dec
inc
out
lods
mov
leave
push
scas
stos
xchg
jae
out
ja
fidiv
je
cmc
sub
dec
mov
(bad)
(bad)
jg
inc
push
rcr
push
mov
imul
js
mov
jnp
ss
test
out
xchg
xchg
push
mov
pusha
adc
add
(bad)
jmp
cmp
aaa
dec
popa
cmp
inc
push
or
addr16
inc
sti
retf
out
(bad)
push
popf
aaa
loop
lar
sbb
ret
push
(bad)
out
mov
js
add
xor
or
xchg
(bad)
fwait
or
(bad)
jg
out
push
push
shr
mov
invlpg
xchg
ret
aaa
hlt
push
aas
repz
rcr
push
sub
call
xor
xchg
and
pop
xor
or
popf
lock
(bad)
(bad)
fst
stc
out
lods
jecxz
xor
out
add
aaa
cmp
(bad)
dec
(bad)
xchg
scas
push
dec
fcomp
adc
fst
jecxz
inc
in
xor
test
das
jecxz
jns
xchg
push
lahf
cmps
aas
cmp
or
adc
xor
imul
sahf
ficom
push
adc
adc
or
repz
mov
lds
ret
aam
push
shl
pop
mov
dec
ja
cmp
inc
test
lods
mov
scas
sub
mov
idiv
xchg
pusha
stos
fild
xor
xchg
sbb
clc
das
jp
add
lea
pop
jbe
dec
std
inc
pop
das
call
nop
daa
xchg
shl
aad
pop
das
mov
sbb
push
mov
dec
cwde
inc
scas
in
xchg
mov
xor
sub
shl
mov
mov
(bad)
mov
fwait
aaa
loop
loop
dec
in
in
dec
pop
and
push
ins
mov
addr16
sub
outs
jmp
jmp
cmp
jmp
or
inc
inc
adc
lods
push
mov
mov
jmp
pushf
ret
mov
ret
stc
ret
dec
cdq
inc
cmp
xchg
jg
adc
push
inc
imul
aas
scas
ss
or
xor
bnd
cmp
xchg
sahf
inc
and
mov
(bad)
aas
pop
jl
mov
sbb
aaa
loop
add
adc
dec
loopne
jo
mov
jb
cmp
and
push
jmp
popa
cmp
fwait
scas
shl
(bad)
inc
ss
xor
arpl
(bad)
(bad)
mov
mov
inc
fldcw
loopne
mov
pop
aas
lods
xchg
es
sahf
xchg
mov
in
cs
and
pop
and
stc
cs
(bad)
mov
xor
ret
pop
dec
scas
test
push
adc
jecxz
outs
dec
add
pop
and
and
add
dec
xchg
and
fistp
cmp
imul
cdq
aaa
loop
gs
mov
add
ja
add
sbb
xchg
scas
dec
aad
jno
stos
adc
mov
push
(bad)
pop
and
add
call
into
mov
sub
arpl
or
out
mov
jmp
scas
shl
inc
sbb
out
mov
mov
dec
jp
in
ret
pop
pop
leave
add
jne
push
pop
dec
cmp
(bad)
out
jmp
mov
dec
daa
pop
stc
(bad)
jecxz
or
(bad)
call
(bad)
mov
pop
mov
push
dec
aam
xor
int3
add
out
loop
(bad)
loopne
sbb
or
test
jp
fist
sub
stos
mov
stc
(bad)
(bad)
(bad)
call
ror
jecxz
scas
push
out
ja
and
inc
ret
inc
movs
cdq
scas
rol
rol
jecxz
xchg
ja
add
push
xchg
(bad)
mov
xchg
scas
jl
enter
scas
jmp
cwde
lods
xchg
test
pop
(bad)
inc
aas
dec
add
mov
ficom
fld
push
gs
cmp
arpl
add
xchg
jg
or
call
(bad)
ficom
add
inc
popf
mov
(bad)
mov
pop
sbb
mov
cmps
daa
adc
cli
xor
std
inc
(bad)
jmp
sub
or
repnz
add
xor
daa
xchg
add
icebp
add
ret
pop
mov
mov
(bad)
dec
jmp
aaa
lods
dec
rol
lods
ja
(bad)
sub
jecxz
xchg
cmc
dec
popf
aam
xor
cmp
xchg
stos
add
(bad)
(bad)
mov
push
rol
add
ins
lock
cmp
jmp
jg
sbb
cmp
push
inc
inc
ins
xlat
scas
das
scas
xlat
sub
push
push
xchg
(bad)
(bad)
inc
add
cld
add
lahf
sbb
inc
sub
push
dec
push
call
mov
imul
rcl
or
jl
xchg
mov
or
rcr
loop
lock
jmp
mov
pop
pop
sbb
or
daa
stos
mov
inc
call
ffreep
outs
cli
xchg
addr16
pop
mov
xor
bound
adc
aaa
jno
pusha
dec
inc
pop
stos
dec
fldcw
push
push
clc
push
ja
xchg
jnp
data16
and
dec
test
dec
pop
mov
sub
bound
in
adc
sbb
ror
add
out
sar
(bad)
jmp
add
jg
clc
or
(bad)
out
aam
mov
dec
add
push
ret
jg
loopne
faddp
stos
push
dec
or
sbb
sub
jmp
repz
jo
pop
or
and
call
repnz
scas
es
gs
xchg
or
push
pop
(bad)
jmp
jmp
jmp
scas
xchg
repnz
in
pop
jne
int3
cmc
fistp
mov
lods
fiadd
jmp
(bad)
pop
and
shr
test
loop
jmp
inc
add
push
nop
addr16
or
nop
cmp
jmp
jecxz
sbb
fisttp
add
push
mov
sub
add
push
pop
jne
xor
sub
sbb
push
(bad)
jmp
es
or
imul
fwait
inc
sti
call
fcmovu
invd
sub
and
mov
sub
(bad)
call
push
sahf
xchg
ret
adc
pop
adc
add
je
and
lea
mov
aas
sub
mov
push
push
xchg
dec
outs
xchg
dec
jae
shl
stos
add
xchg
mov
lds
sahf
pop
xor
ret
inc
cld
ss
xchg
inc
fs
sbb
fidiv
jge
nop
aam
bound
fistp
xor
or
fcomp
out
sar
mov
and
and
pop
imul
mov
(bad)
push
addr16
xlat
in
lods
leave
in
inc
mov
das
frndint
mov
pushf
mov
ins
sbb
mov
ud2
inc
and
cmp
inc
aaa
cmc
adc
inc
scas
fbld
nop
mov
cwde
cmp
ds
mov
sub
sub
sub
imul
mov
sub
or
mov
mov
aaa
push
xchg
ins
push
adc
adc
pop
(bad)
mov
push
(bad)
mov
inc
xor
stc
aaa
inc
jmp
push
add
pop
outs
test
rcr
(bad)
jmp
adc
xchg
or
out
aad
movsx
psubusb
xchg
sahf
test
ret
xchg
scas
and
pop
mov
sub
scas
inc
cmp
or
imul
test
rcl
imul
mov
add
pop
mov
jno
sar
lea
clc
xchg
sti
call
cdq
ret
jmp
mov
das
xchg
aaa
loop
xor
(bad)
xor
(bad)
mov
mov
ret
adc
js
xchg
fucom
xor
and
dec
xchg
mov
shl
lods
inc
sub
mov
mov
cld
lds
(bad)
inc
cmc
mov
xor
mov
mov
sub
ja
cmp
sbb
out
inc
js
test
xchg
cs
pop
sub
mov
(bad)
(bad)
jg
pop
out
nop
add
cld
dec
xlat
mov
dec
mov
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
mov
lods
iret
mov
or
stos
xchg
stos
cmp
jmp
push
ror
(bad)
(bad)
inc
jle
outs
ret
add
mov
enter
arpl
xor
jg
pop
cmc
dec
mov
loop
cmp
jmp
inc
mov
dec
inc
and
aam
dec
dec
and
add
(bad)
sub
rol
xchg
int
mov
fdivr
push
js
sub
jb
push
xlat
or
cld
(bad)
cmp
push
jbe
dec
pop
ss
xchg
inc
mov
adc
or
in
adc
lahf
(bad)
(bad)
(bad)
inc
stos
lods
leave
jp
sub
out
leave
sbb
outs
add
ins
sub
mov
retf
ret
jle
popf
idiv
(bad)
call
add
add
xchg
mov
or
adc
pop
and
xor
or
sbb
sbb
inc
or
mov
fcmovnb
aas
lods
sub
cmp
or
sub
(bad)
(bad)
(bad)
inc
adc
mov
scas
aad
shr
shl
aad
loop
call
(bad)
stc
retf
bound
gs
in
xchg
push
mov
add
sar
(bad)
call
ficomp
out
aaa
or
cwde
fldl2t
jnp
adc
adc
adc
mov
jno
(bad)
mov
inc
or
push
inc
add
push
hlt
cmp
int
inc
mov
pop
stc
ja
(bad)
(bad)
jp
push
sahf
dec
outs
test
int
pop
xchg
xor
cmp
(bad)
(bad)
(bad)
call
mov
mov
ja
in
hlt
add
inc
xor
(bad)
out
(bad)
(bad)
(bad)
inc
mov
inc
cmp
dec
popa
cmp
pop
mov
mov
push
gs
inc
push
in
call
cmp
or
jl
mov
inc
int3
(bad)
mov
push
call
push
ja
stos
pop
xor
scas
jmp
or
mov
int
dec
mov
movs
mov
or
in
ins
push
cmps
dec
jg
cmp
jmp
(bad)
loope
ins
frstor
add
cmp
aaa
test
xchg
scas
shr
add
dec
(bad)
lock
out
push
or
test
lods
push
fisttp
dec
(bad)
js
in
jl
int
(bad)
aaa
retf
xor
aaa
xchg
inc
sti
stos
pop
sub
push
(bad)
(bad)
(bad)
dec
rcr
xor
mov
scas
aaa
stc
or
jo
sub
arpl
fcomp
mov
(bad)
(bad)
call
inc
popf
ins
xor
xor
rcl
push
and
fucom
mov
cmp
aas
movs
imul
(bad)
dec
push
push
lods
stos
push
inc
aas
dec
jae
cli
test
inc
sti
stos
push
sub
pop
jl
cmps
cmc
mov
(bad)
(bad)
(bad)
jmp
and
fidivr
sub
fadd
and
push
das
scas
jecxz
pop
push
call
rcr
js
sbb
(bad)
(bad)
mov
mov
sar
mov
mov
cdq
(bad)
(bad)
(bad)
call
push
sub
dec
add
cld
sub
sbb
in
nop
jne
push
sub
adc
leave
jg
ja
push
popa
(bad)
sbb
in
in
jo
imul
in
mov
(bad)
dec
inc
inc
cmp
mov
mov
sti
fnstsw
lods
sub
stos
(bad)
cmp
cmc
pop
cmp
cmp
xor
jle
leave
in
icebp
leave
xchg
push
std
outs
loop
inc
dec
retf
fld
test
imul
test
cmp
dec
sbb
icebp
pusha
push
in
shr
in
vcmpltps
dec
(bad)
(bad)
(bad)
dec
in
lock
jmp
out
shr
pop
nop
jne
out
lods
les
cmp
jmp
ja
add
inc
dec
inc
aas
gs
cmc
adc
push
(bad)
call
dec
cmp
pop
inc
mov
or
fiadd
shl
cwde
loop
xor
in
or
clc
ins
jmp
mov
shr
mov
(bad)
mov
sbb
inc
(bad)
(bad)
(bad)
mov
push
test
xor
(bad)
jnp
mov
loope
mov
sar
(bad)
(bad)
jmp
dec
mov
mov
inc
jns
pop
pop
lods
aaa
aaa
mov
or
enter
or
add
sbb
loope
(bad)
cmp
imul
xchg
imul
push
push
push
(bad)
jg
xchg
mov
jmp
mov
lods
inc
add
(bad)
push
mov
int
mov
stos
loope
add
dec
clc
ror
inc
dec
out
loope
jg
(bad)
dec
fld
mov
loope
mov
sub
xor
mov
mov
mov
mov
imul
(bad)
fiadd
xchg
sub
jno
jmp
adc
mov
test
dec
sbb
xor
xchg
jg
(bad)
(bad)
jl
push
xor
xor
test
ins
test
add
mov
leave
cmp
daa
inc
push
sub
xchg
mov
shr
mov
add
add
outs
daa
add
xchg
cmp
inc
in
push
push
test
add
fdivr
scas
(bad)
(bad)
(bad)
jmp
pop
sar
sub
ficom
(bad)
ds
or
jmp
(bad)
push
iret
in
loopne
xchg
fstp
aam
xchg
(bad)
jg
push
xchg
repz
cmps
test
iret
cmp
test
mov
jb
xor
mov
sti
push
dec
inc
cwde
cmp
add
or
xchg
(bad)
aas
mov
test
mov
adc
pop
retf
pushf
retf
cmp
add
add
jp
sbb
xchg
inc
cmp
data16
mov
(bad)
in
pop
sbb
add
mov
mov
je
sti
je
enter
fild
push
(bad)
mov
and
aas
inc
xchg
int
scas
and
pop
lock
call
sar
pop
int
ret
ror
(bad)
out
faddp
mov
jnp
jle
test
jg
(bad)
(bad)
stos
inc
mov
enter
fisttp
adc
push
push
repnz
(bad)
(bad)
mov
scas
in
xor
jmp
dec
cld
sti
adc
dec
sysexit
sbb
enter
(bad)
mov
mov
jmp
jne
call
(bad)
cld
cmp
xor
pop
sub
push
inc
mov
mov
xchg
out
loopne
test
mov
int
mov
rol
mov
sets
call
push
aaa
rcl
push
push
ret
and
out
push
(bad)
(bad)
(bad)
call
aad
and
mov
or
fdiv
leave
push
scas
cmps
mov
pop
retf
cmp
xor
pop
push
xchg
(bad)
out
loopne
pushf
retf
jge
jmp
cmc
aaa
test
pop
aaa
mov
push
xchg
fucomp
and
xchg
inc
stos
mov
push
in
mov
ins
test
cli
mov
scas
aad
lods
lods
mov
dec
sbb
mov
mov
sbb
cmp
fist
xor
movs
(bad)
(bad)
(bad)
inc
fadd
scas
pop
xor
std
or
pcmpeqb
stos
inc
dec
dec
sbb
arpl
mov
cwde
adc
pop
sub
mov
add
test
xor
aad
ret
(bad)
(bad)
fild
retf
imul
daa
xchg
xchg
add
and
dec
(bad)
jg
pop
mov
xchg
xchg
add
into
nop
pop
js
push
mov
dec
les
js
mov
add
or
add
mov
(bad)
fbld
xchg
xor
dec
sub
cmp
fwait
movs
and
jge
(bad)
(bad)
inc
rol
push
push
xor
pop
addr16
xchg
outs
cmp
fnstsw
cmc
xchg
(bad)
mov
sub
imul
retf
(bad)
jg
shl
or
mov
(bad)
jg
inc
aad
test
imul
scas
sub
add
mov
(bad)
sbb
sub
jl
stos
test
data16
cs
and
xor
das
and
idiv
jg
push
lods
xchg
data16
je
jecxz
jnp
lahf
das
sub
(bad)
(bad)
fisttp
mov
add
mov
pop
cmps
inc
adc
ds
mov
lock
loope
dec
daa
add
inc
sub
clc
aad
lods
mov
loop
sar
imul
nop
leave
pop
movs
xor
xchg
sti
mov
das
inc
xlat
dec
add
leave
xchg
jge
loopne
inc
mov
ds
mov
jmp
dec
fsubr
add
xchg
xor
fistp
imul
jmp
loop
push
ror
xor
movs
das
cdq
ss
dec
fnstsw
dec
inc
ss
test
shl
pop
stos
sbb
push
in
pop
mov
and
(bad)
(bad)
(bad)
dec
dec
cmp
dec
adc
pushf
test
add
inc
cmps
dec
stos
es
xlat
test
xchg
in
or
(bad)
(bad)
inc
pop
pop
dec
fisubr
xchg
movs
cmp
int
pop
(bad)
cmc
jo
aas
(bad)
leave
std
add
push
pop
and
mov
fwait
clc
call
and
jne
or
cmp
sbb
dec
(bad)
(bad)
(bad)
mov
lods
movs
(bad)
idiv
jb
or
pop
sbb
sub
push
int3
jb
pop
in
xchg
and
in
pop
and
or
mov
pop
adc
ins
cs
aaa
adc
aaa
ffree
mov
cmp
call
jmp
sbb
dec
xor
dec
mov
hlt
(bad)
(bad)
fild
mov
inc
ins
ja
nop
lods
inc
enter
and
(bad)
(bad)
(bad)
fbld
scas
cmp
push
sbb
fsubr
xor
ins
wbinvd
dec
or
call
cwde
cmp
out
cmp
xchg
cld
rsqrtps
jnp
mov
(bad)
(bad)
jmp
stc
sub
jmp
jbe
or
mov
stc
ss
pushf
and
(bad)
(bad)
dec
aas
(bad)
mov
jno
cmp
jmp
popa
sub
out
dec
loope
inc
pusha
xor
pusha
adc
scas
(bad)
daa
pop
ret
(bad)
jnp
jmp
loop
data16
daa
(bad)
ja
mov
(bad)
out
imul
das
arpl
adc
repz
sbb
sbb
xchg
pop
jmp
mov
push
push
push
sub
inc
js
lds
push
sbb
jl
add
jne
adc
sub
(bad)
(bad)
(bad)
fucomp
ds
call
imul
sub
scas
rcr
xchg
push
mov
and
xchg
sub
push
sub
in
push
pop
aaa
lock
and
in
fild
push
(bad)
(bad)
(bad)
jg
add
in
(bad)
aam
sbb
inc
push
movs
adc
addr16
xor
out
cli
call
(bad)
(bad)
call
mov
push
mov
adc
sbb
inc
inc
inc
sub
gs
jl
jp
or
push
and
pop
div
js
xchg
shl
add
retf
jle
add
lods
pusha
enter
sbb
sub
adc
sbb
shl
xchg
push
repnz
mov
arpl
loop
(bad)
(bad)
fld
xchg
cmp
sub
xchg
adc
jb
dec
outs
jo
ss
into
sbb
(bad)
dec
lea
or
mov
and
stos
push
dec
mov
loop
jl
sub
and
push
fist
adc
jg
shl
scas
aas
scas
mov
pop
rcl
mov
fcomip
(bad)
push
fucomi
lods
in
mov
fidivr
or
cmp
(bad)
(bad)
jmp
arpl
or
gs
jmp
cwde
repnz
adc
addr16
cmp
sub
jae
xor
or
mov
jns
(bad)
(bad)
(bad)
cmp
and
bound
sbb
push
repnz
ss
or
push
dec
aam
sbb
imul
sbb
adc
or
add
push
mov
enter
cmp
(bad)
jg
mov
leave
add
xor
adc
inc
idiv
(bad)
inc
or
pop
ror
mov
cmp
fcomp
mov
inc
addr16
(bad)
(bad)
jmp
js
scas
inc
dec
imul
jp
xor
mov
push
mov
repz
fst
test
mov
xor
xchg
jle
xor
fisttp
fst
sbb
test
add
mov
rcl
ds
xor
pusha
sub
ss
call
pop
aam
xor
dec
xor
push
jmp
push
call
mov
mov
imul
out
dec
pop
je
push
push
mov
in
pop
in
sbb
(bad)
(bad)
cmp
into
imul
pop
xor
js
push
(bad)
(bad)
(bad)
(bad)
mov
std
or
cmp
add
jmp
inc
ins
mov
inc
call
(bad)
mov
imul
scas
jne
jecxz
or
imul
or
imul
movs
inc
pop
push
ins
cmp
jl
sti
(bad)
(bad)
jg
dec
push
inc
std
dec
add
cmp
rcr
xor
(bad)
mov
xor
inc
cdq
ss
scas
jp
cdq
inc
push
(bad)
(bad)
(bad)
inc
inc
dec
loopne
or
adc
push
inc
or
mov
jnp
cmp
test
xor
stc
xor
std
(bad)
call
dec
or
mov
jle
jnp
lar
mov
ja
cmp
out
leave
sbb
adc
pusha
push
int3
movs
ja
(bad)
call
addr16
dec
xchg
imul
cwde
repnz
pushf
dec
jbe
sbb
pop
push
push
call
add
inc
imul
aas
push
(bad)
(bad)
std
jmp
scas
cmp
not
jne
push
xchg
push
cmps
mov
xor
pop
jbe
popa
mov
test
sbb
in
add
mov
fst
dec
cmp
std
lods
push
outs
sub
mov
in
test
(bad)
(bad)
fnsave
xchg
test
sar
push
retf
push
cmp
mov
dec
push
push
push
cwde
push
dec
xlat
mov
cmps
loopne
std
(bad)
in
push
jno
xor
push
xchg
inc
xchg
sbb
mov
sbb
rol
dec
shl
retf
dec
sbb
mov
outs
sub
xchg
and
or
(bad)
(bad)
(bad)
clc
call
xchg
les
adc
(bad)
(bad)
sbb
sbb
shl
call
jmp
ins
xor
imul
aaa
inc
pop
adc
pop
mov
dec
fld
in
or
(bad)
(bad)
inc
bound
adc
dec
adc
sbb
jg
jecxz
add
mov
xor
sbb
adc
and
scas
inc
dec
js
shl
sbb
mov
jmp
dec
pop
addr16
enter
or
mov
iret
pop
mov
jle
(bad)
jmp
push
imul
ret
mov
test
add
and
(bad)
(bad)
inc
lock
dec
adc
inc
pop
(bad)
bound
ret
scas
(bad)
jmp
cmp
cmc
mov
rol
inc
ds
fcom
(bad)
(bad)
(bad)
jg
cmp
rcl
enter
or
ficom
bound
xchg
xchg
std
and
push
jno
cmp
inc
aas
mov
(bad)
jg
add
push
sbb
aas
ror
mov
or
mov
std
xor
jp
inc
ins
xor
clc
or
js
(bad)
sbb
shr
lods
icebp
movs
pop
xchg
xchg
popf
xchg
fidivr
ror
pushw
bnd
lock
outs
mov
seto
hlt
jmp
cmp
mov
pop
pop
cmp
cs
(bad)
fist
test
push
inc
aas
aas
pop
push
sahf
push
xchg
outs
and
xor
leave
sbb
ja
and
pushf
jns
cmp
cmp
xlat
scas
adc
push
out
push
sub
xlat
(bad)
cmp
mov
lahf
movaps
lods
mov
xor
(bad)
call
xchg
mov
xchg
xor
(bad)
inc
aas
enter
jl
dec
das
push
push
dec
mov
adc
pop
and
cwde
xchg
sub
out
mov
test
add
das
push
aas
dec
test
push
iret
data16
push
push
inc
outs
sbb
inc
cmp
cdq
imul
mov
(bad)
mov
scas
jmp
mov
mov
push
or
inc
hlt
cmp
hlt
aas
movs
cmp
iret
pop
(bad)
sub
js
stc
dec
dec
pusha
jne
push
loop
ret
inc
xor
sbb
jbe
ror
(bad)
cmp
aam
mov
push
jmp
pushf
or
imul
rcl
loope
ffree
in
jg
xor
and
add
imul
or
jne
xchg
xor
hlt
outs
loop
pop
sub
int3
(bad)
push
sbb
js
xchg
dec
aas
dec
shl
ror
rol
inc
stos
dec
mov
out
stos
loope
or
cmp
cmp
jecxz
or
or
jecxz
repnz
mul
mov
jg
lods
jb
out
das
jmp
(bad)
jmp
push
shl
adc
cs
dec
out
pop
adc
aaa
std
(bad)
call
adc
stos
and
and
cmp
lock
in
ja
popf
(bad)
(bad)
jg
leave
adc
imul
pop
add
xor
movs
bound
pop
lahf
and
sbb
aam
mov
sar
add
out
mov
sbb
sub
(bad)
call
add
jmp
scas
ds
mov
stos
and
outs
jns
sub
imul
in
div
cdq
push
cld
mov
bound
push
dec
adc
popa
jg
(bad)
call
pop
adc
push
leave
sbb
push
(bad)
sbb
imul
xor
and
sub
xchg
cmp
dec
jbe
and
sub
mov
add
or
imul
sub
mov
pop
add
retf
and
aas
fidiv
movs
pop
out
(bad)
(bad)
call
aas
xor
inc
out
and
ror
stc
retf
in
pop
jne
push
ret
xchg
xchg
push
sbb
data16
sub
mov
adc
pop
loop
xchg
or
movs
in
push
(bad)
jg
aas
daa
pop
mov
xor
iret
push
cmp
imul
push
dec
add
mov
repz
jb
popa
and
sub
pop
xor
mov
inc
pop
(bad)
(bad)
(bad)
push
jg
add
mov
xchg
add
in
jmp
jle
xchg
mov
pop
cmps
sbb
loopne
cmp
xor
sub
cmp
(bad)
aad
cmovs
jno
cmp
sub
and
pushf
rcr
ja
jns
sbb
fisubr
(bad)
(bad)
(bad)
fucomip
push
outs
cli
cmp
adc
xchg
xor
fisub
mov
aas
push
push
das
test
jmp
ds
mov
push
sub
ins
fadd
jg
pop
outs
daa
mov
adc
pop
mov
inc
jecxz
loop
mov
rcr
jno
(bad)
dec
adc
xchg
mov
push
ror
push
ja
xor
push
and
(bad)
dec
enter
jne
(bad)
jmp
shl
(bad)
mov
push
sti
inc
ret
(bad)
inc
push
fwait
leave
lods
push
in
pop
rcl
mov
pop
(bad)
cmps
rol
mov
mov
leave
xchg
ja
(bad)
push
call
xor
dec
test
cli
xor
xchg
xchg
scas
shr
stos
rcl
nop
push
clc
cmp
mov
stos
dec
ss
mov
cmp
push
xor
(bad)
(bad)
out
cld
loop
cmp
mov
jge
js
addr16
pop
xor
jle
jmp
stc
clc
(bad)
jmp
push
push
ret
pushf
aas
popf
fidiv
mov
nop
ja
add
jecxz
leave
imul
mov
out
sub
add
std
aas
ret
(bad)
jg
cmp
mov
js
bound
jnp
stos
adc
addr16
aaa
push
hlt
ds
cmp
dec
jbe
icebp
mov
daa
pop
icebp
(bad)
(bad)
call
scas
fst
outs
mov
pop
mov
pop
push
xchg
inc
push
(bad)
(bad)
out
fistp
mov
sahf
and
and
jbe
es
xor
retf
and
std
(bad)
(bad)
fcom
pop
mov
xor
lods
scas
retf
cmp
pusha
repz
stos
jp
(bad)
(bad)
(bad)
call
aaa
sbb
int
cmp
call
mov
stc
xchg
xchg
mov
(bad)
jg
mov
cmp
push
push
pop
cmp
sbb
push
xor
call
call
aaa
xor
test
les
mov
inc
mov
aaa
loop
loop
shl
stos
mov
div
sar
(bad)
arpl
adc
(bad)
dec
cs
sbb
add
cmp
leave
in
push
dec
mov
clc
(bad)
(bad)
dec
mov
add
gs
mov
and
mov
inc
xor
das
icebp
pop
jg
(bad)
cmp
cli
outs
sub
xchg
int
ss
aas
dec
mov
lahf
xchg
fnsave
push
sbb
es
xor
add
adc
js
int
je
call
int
push
jp
cmp
xchg
(bad)
jg
cld
and
or
push
arpl
stos
test
jp
sbb
push
outs
retf
jp
mov
cmp
push
jl
inc
adc
into
push
sub
retf
idiv
or
mov
add
aad
inc
in
push
cmp
outs
rol
cwde
sbb
cmp
(bad)
jmp
enter
fs
mov
daa
pop
mov
adc
xchg
repz
int3
test
daa
inc
(bad)
(bad)
mov
ins
jecxz
sahf
shr
mov
inc
(bad)
(bad)
(bad)
ds
in
inc
inc
push
in
cs
ds
cld
fild
sub
shl
clc
(bad)
jg
push
xchg
jno
rcr
fnsave
sar
mov
ja
(bad)
push
movs
test
ins
push
jns
mov
lds
xor
jg
call
adc
mov
aas
inc
xlat
add
(bad)
mov
int
loope
cmps
and
xchg
(bad)
retf
dec
or
jne
into
xchg
(bad)
(bad)
(bad)
jmp
pop
out
and
aam
retf
imul
mov
repz
idiv
push
fmul
ins
cmp
out
outs
mov
in
adc
lock
or
std
(bad)
call
cmp
in
push
shr
mov
cmp
leave
add
xor
push
fld
add
fwait
(bad)
icebp
jg
(bad)
(bad)
(bad)
(bad)
clc
aaa
sbb
ror
push
sbb
xor
aas
dec
addr16
arpl
daa
(bad)
or
mov
xchg
(bad)
(bad)
(bad)
inc
push
(bad)
rol
ret
inc
push
add
jb
lods
jbe
jnp
rol
aaa
icebp
dec
mov
inc
inc
inc
sar
sbb
and
dec
lds
and
pop
add
mov
jmp
and
icebp
rol
mov
call
test
ja
jmp
aad
inc
clc
or
cwde
dec
imul
xor
and
ss
call
and
cld
rcr
mov
xlat
aaa
adc
lahf
push
xchg
sbb
(bad)
jmp
push
push
push
xchg
pop
cmp
sti
aad
dec
xchg
jae
iretw
xchg
cmp
(bad)
(bad)
inc
jne
xchg
sub
lods
inc
dec
lahf
xor
imul
pop
enter
(bad)
(bad)
dec
xor
fld
push
pop
(bad)
shr
scas
out
add
enter
adc
call
clc
mov
lods
jp
dec
add
(bad)
push
inc
iret
mov
js
ins
mov
sub
mov
es
dec
inc
aas
sub
(bad)
jnp
scas
xchg
or
ffreep
cs
xchg
and
imul
push
add
push
icebp
call
cli
mov
inc
push
xor
ins
cmp
aad
push
(bad)
(bad)
mov
pop
data16
jg
sti
test
enter
fidivr
arpl
mov
stc
inc
(bad)
(bad)
(bad)
jg
or
int
pop
sar
test
sbb
test
pop
sar
xchg
jl
xchg
and
xchg
clc
push
fild
sti
shr
call
sub
push
jmp
xchg
aaa
jnp
fmul
xchg
int
mov
das
aas
xchg
xor
addps
jno
in
mov
or
push
mov
mov
mov
cmp
cmp
(bad)
jmp
or
push
sub
xchg
dec
mov
fsubp
(bad)
in
mov
add
mov
cmp
adc
(bad)
out
out
jno
xor
adc
shl
push
xchg
ja
pop
mov
cmps
in
add
shl
jno
in
fsubr
cwde
retf
push
mov
fst
call
cli
test
mov
sti
jmp
aas
dec
add
aad
in
fcom
mov
ret
push
dec
aas
scas
pop
lods
lods
mov
es
loopne
fsubr
cmp
mov
xchg
jge
mov
mov
sbb
or
cwde
mov
sub
sub
out
push
sub
(bad)
(bad)
out
fcom
call
xor
les
aas
into
lds
in
xchg
push
mov
inc
jnp
mov
(bad)
loope
loop
xchg
fist
push
repz
pushf
nop
mov
imul
(bad)
mov
sub
cmc
(bad)
mov
lods
push
(bad)
dec
add
push
(bad)
loopne
int3
fcom
scas
mov
icebp
cmc
mov
cmp
push
cmp
push
sub
push
cmc
add
jmp
enter
dec
ins
(bad)
in
pop
sub
mov
mov
pop
test
(bad)
idiv
pushf
mov
fcom
les
(bad)
xchg
jnp
fld
push
add
imul
pop
jae
sub
push
sbb
dec
xor
mov
mov
in
cmc
test
cmps
(bad)
jmp
dec
or
mov
xchg
movs
push
rol
and
lock
ja
cmps
pop
push
jmp
mov
mov
dec
aaa
sbb
sbb
inc
aam
sbb
pop
retf
or
nop
adc
jg
jb
nop
mov
adc
out
call
popf
add
and
xchg
mov
cs
xchg
and
enter
iret
cmp
cmp
retf
push
arpl
push
jg
loopne
ffree
xchg
scas
inc
sub
fidivr
cdq
psubq
xor
inc
call
push
push
push
loopne
enter
mov
lea
lock
mov
xor
test
loopne
push
std
out
int
sbb
ss
and
div
inc
fnstenv
cwde
aas
jmp
movs
push
adc
pop
jle
inc
add
(bad)
add
mov
sub
pushf
scas
sar
pop
dec
add
stos
(bad)
xchg
push
adc
sbb
sbb
cld
inc
pop
push
pop
sbb
(bad)
jmp
mul
popf
jmp
enter
nop
dec
ud2
inc
xchg
cmp
sbb
rcl
in
ror
scas
jl
out
mov
sbb
xchg
dec
test
aad
mov
loope
mov
out
imul
mov
(bad)
dec
mov
shr
or
xor
mov
inc
jbe
push
dec
pop
mov
add
nop
loop
mov
inc
ret
idiv
pusha
add
shl
test
mov
jg
jne
inc
in
sub
add
inc
mov
std
dec
cmc
lea
sahf
push
xchg
push
jl
(bad)
cmps
(bad)
push
sbb
stos
lods
adc
(bad)
fstp
clc
mov
or
sub
(bad)
div
inc
icebp
loop
(bad)
(bad)
mov
bound
push
sub
mov
and
cmp
sub
shr
jg
cmp
push
pusha
adc
cdq
fimul
shl
test
and
xchg
pusha
(bad)
(bad)
out
loopne
hlt
mov
and
jo
push
push
cwde
fstp
or
(bad)
ffreep
inc
mov
(bad)
stos
fcomp
outs
in
add
push
(bad)
(bad)
jp
push
rol
inc
push
push
pop
push
mov
push
fst
jge
inc
inc
outs
(bad)
push
adc
mov
sahf
mov
aas
mov
aas
test
lds
(bad)
call
scas
sub
cmps
addr16
xor
mov
clc
or
pop
pop
add
test
cmp
(bad)
(bad)
(bad)
inc
dec
out
test
fsub
xchg
dec
call
add
sub
imul
call
lods
aaa
cmp
xchg
dec
mov
mov
cmp
adc
nop
rol
push
fild
xor
into
jb
add
sbb
call
ins
sbb
jecxz
loope
sub
mov
(bad)
fcomip
mov
test
or
(bad)
jne
xlat
xchg
push
cmp
iret
mov
std
test
lock
and
sub
mov
aas
or
stos
shl
test
mov
ja
loopne
enter
clc
outs
loopne
stos
rcr
pop
les
arpl
inc
lock
pop
stos
push
(bad)
(bad)
call
nop
into
cmp
dec
imul
in
mov
push
sub
sbb
lods
(bad)
(bad)
(bad)
jmp
mov
mov
sub
outs
xor
clc
sub
inc
push
inc
pop
push
push
inc
test
lea
inc
aas
dec
ror
push
hlt
(bad)
(bad)
inc
mov
mov
xchg
les
loope
(bad)
dec
movs
xlat
adc
in
fdiv
aaa
daa
push
sub
ins
scas
xchg
pop
mov
lahf
push
jmp
pop
adc
jge
xor
test
sahf
aaa
icebp
(bad)
dec
push
inc
fcomp
push
push
fidiv
add
cmps
retf
fst
and
mov
cmp
pop
xchg
jno
mov
(bad)
(bad)
dec
test
fbstp
nop
sbb
jge
push
xor
out
push
push
pop
mov
mov
addr16
jl
test
add
sub
cmps
pop
push
lds
dec
add
inc
gs
cmp
dec
jbe
inc
std
lods
les
popa
push
in
sbb
(bad)
or
push
movs
fistp
iret
jne
push
fcmovnbe
out
loopne
das
push
inc
jl
frstor
ins
aad
dec
dec
(bad)
jmp
push
cld
lods
pop
mov
es
xlat
iret
inc
ja
pop
test
std
xchg
adc
ds
jmp
rcl
fs
mov
jmp
(bad)
(bad)
(bad)
fsubr
call
or
ficom
sbb
les
cld
(bad)
out
loopne
imul
xchg
cwde
repnz
rcr
jne
push
es
(bad)
call
out
inc
adc
xor
mov
inc
das
retf
add
call
cdq
mov
test
and
test
mov
adc
(bad)
(bad)
call
mov
xchg
push
xchg
(bad)
js
sub
int3
into
fwait
mov
push
stos
lods
mov
addr16
(bad)
jg
pop
stc
rcr
les
inc
aas
cmp
sub
sbb
(bad)
lea
cld
mov
fiadd
iret
and
pop
dec
jb
mov
adc
mov
(bad)
(bad)
inc
mov
lahf
xchg
outs
ja
dec
hlt
sub
mov
xor
pop
and
push
inc
mov
and
push
stos
mov
ss
aam
gs
and
mov
dec
clc
jmp
in
(bad)
(bad)
fild
imul
sar
nop
xor
mulps
inc
cmc
adc
clc
aas
dec
rcl
ja
push
push
jmp
leave
jmp
pop
int
ins
aaa
add
cmps
cmp
test
in
in
pop
push
test
test
das
pop
test
push
inc
aas
mov
(bad)
imul
sbb
ja
xchg
scas
or
mov
je
jge
rcl
(bad)
(bad)
(bad)
in
pop
(bad)
nop
ds
add
scas
jmp
mov
mov
sub
imul
je
(bad)
mov
cld
or
enter
dec
mov
cs
(bad)
fcos
push
cld
inc
push
aaa
pop
stos
pop
cmp
xor
ret
mov
cmp
inc
ds
dec
bound
cmp
js
jmp
pop
shl
sar
cmp
xlat
mov
lods
rol
popa
dec
xor
je
in
mov
mov
fcom
mov
and
loop
in
nop
and
inc
std
mov
sbb
dec
enter
retf
test
in
into
stc
jnp
in
xor
cmc
rcl
push
es
or
lds
cmp
out
jmp
sbb
pop
inc
(bad)
cmp
dec
iret
jge
pop
xor
(bad)
push
push
inc
(bad)
ins
dec
imul
lds
stos
(bad)
loopne
lock
adc
sub
cld
(bad)
idiv
outs
inc
xchg
inc
jno
(bad)
cs
bound
cmps
mov
es
es
loop
imul
fdivrp
cmp
inc
(bad)
push
ret
fsubr
shl
int
cs
call
out
dec
mov
jbe
aad
xor
jo
leave
cmp
sub
(bad)
(bad)
push
xchg
scas
test
sbb
mov
sti
push
mov
xor
idiv
xor
or
dec
jg
es
push
dec
jmp
(bad)
(bad)
(bad)
jmp
inc
jne
pop
dec
lods
aaa
sub
(bad)
mov
(bad)
dec
pop
adc
clc
dec
enter
ror
inc
or
(bad)
(bad)
(bad)
jg
dec
in
arpl
repnz
pop
xchg
fs
sbb
xchg
gs
push
inc
xlat
(bad)
test
mov
call
loope
or
out
jmp
sbb
mov
(bad)
fist
pop
call
mov
lods
mov
(bad)
(bad)
(bad)
call
dec
add
sbb
jns
pop
add
push
push
mov
leave
xchg
std
jne
cld
(bad)
jmp
shr
fidiv
push
and
mov
mov
gs
sar
enter
in
(bad)
jmp
xor
push
repnz
push
sub
shr
add
ds
cs
jle
jp
pushw
inc
cld
and
jmp
push
addr16
pusha
dec
mul
xcrypt-ofb
cmps
out
inc
outs
mov
sbb
adc
xchg
inc
pop
xor
jmp
sbb
sub
add
jae
jl
pop
inc
cmc
mov
(bad)
out
fdivp
add
xor
mov
and
mov
push
call
inc
pop
test
sti
mov
dec
int
fs
jge
and
aas
xor
retf
int
push
mov
push
test
(bad)
push
popf
cmp
push
add
lds
lock
xchg
cmp
(bad)
jge
pop
mov
jmp
inc
test
cmp
pop
(bad)
dec
cmp
add
sub
js
in
xor
(bad)
jmp
xor
jp
popa
fwait
stos
jle
sub
std
sbb
shl
dec
lods
retf
jp
jl
jo
shl
cmc
or
call
(bad)
loopne
sbb
(bad)
fbstp
push
mov
nop
xor
sub
leave
or
call
mov
rcl
aaa
(bad)
(bad)
jmp
push
xor
sub
xchg
sbb
mov
imul
mov
div
jmp
pop
(bad)
(bad)
(bad)
jmp
fild
add
cmp
pop
push
iret
fist
jae
leave
add
or
pop
push
jl
cmp
js
jp
push
xor
push
mov
mov
or
xor
jns
iret
inc
or
sub
mov
sbb
dec
jle
and
inc
dec
clc
call
push
sbb
enter
push
sub
test
jbe
or
add
push
or
jmp
aam
sbb
push
push
popa
or
cdq
push
jmp
fisttp
fidivr
leave
push
arpl
cld
pop
push
push
adc
leave
jmp
and
jne
xchg
push
adc
push
xor
idiv
sbb
jne
sub
mov
sbb
imul
lods
push
in
inc
inc
in
xchg
scas
jge
push
sub
jb
sbb
stos
data16
(bad)
call
leave
sbb
add
adc
add
cli
iret
int3
lods
ss
(bad)
xor
js
ret
xchg
in
xor
repz
or
cld
jmp
lods
add
ds
push
dec
(bad)
scas
dec
test
pop
sbb
sub
test
inc
xor
outs
movs
mov
mov
aas
repnz
add
call
mov
(bad)
(bad)
jg
dec
cmp
adc
pushf
pop
sbb
xchg
lods
shr
add
jmp
cmp
mov
js
jmp
ss
test
mov
xor
(bad)
out
xchg
lock
ret
shr
xor
mov
(bad)
call
push
xlat
arpl
js
jmp
or
sub
aas
dec
add
push
mov
dec
test
dec
mov
pop
test
rol
loop
pop
scas
mov
or
pop
cld
sbb
(bad)
lds
pop
cmp
mov
std
pop
or
adc
jmp
mov
mov
inc
pusha
ficom
jmp
pop
add
jge
fdivr
aaa
mov
rol
fsub
inc
jns
adc
rcr
mov
loop
fstp
mov
sub
das
push
sub
push
jmp
dec
adc
scas
dec
add
sbb
mov
(bad)
cmp
cmc
mov
jno
nop
or
mov
enter
or
arpl
fild
les
pop
scas
xchg
push
rol
jae
sti
test
(bad)
push
xchg
sub
and
sub
aaa
push
xchg
(bad)
ja
push
test
shl
add
and
lods
mov
fdivr
mov
aas
bsr
(bad)
ins
aad
les
jg
push
xchg
jne
pop
cli
inc
mov
xor
and
(bad)
(bad)
fucomip
xor
or
push
jns
jg
leave
jo
sub
mov
dec
(bad)
(bad)
fistp
adc
pop
sbb
dec
fnstcw
lsl
add
ror
mov
mov
cmp
outs
mov
sti
push
enter
or
faddp
jmp
cdq
in
jmp
bound
mov
fstp
test
dec
add
loope
std
mov
mov
call
adc
ds
add
in
jmp
lock
mov
sbb
movs
push
dec
mov
gs
mov
xor
mov
or
(bad)
(bad)
cmp
leave
xchg
push
iret
push
xchg
movs
adc
cmp
mov
call
xchg
mov
popf
cmp
scas
imul
ja
clc
jne
(bad)
call
inc
pusha
arpl
rcr
cmp
aas
leave
ror
into
pop
imul
iret
dec
add
or
shl
jae
call
mov
jl
repz
inc
push
into
xchg
inc
mov
sbb
or
fsub
pusha
outs
clc
call
out
push
cmc
jge
leave
add
xchg
rol
ror
(bad)
(bad)
(bad)
in
push
retf
push
cmp
movs
sbb
push
loopne
clc
test
mov
mov
std
packsswb
clts
dec
jmp
mov
adc
mov
mov
sbb
and
or
icebp
adc
push
call
cmps
mov
or
jg
mov
add
int3
fcom
sahf
mov
in
mov
fwait
(bad)
cs
sub
add
(bad)
aaa
or
loope
(bad)
out
push
sub
xchg
dec
mov
fs
(bad)
leave
sub
fsub
call
push
mov
loopne
les
ss
in
sub
fcmovu
push
xchg
push
xchg
add
dec
bound
dec
sub
push
sub
xchg
(bad)
(bad)
(bad)
fnstsw
sbb
adc
mov
scas
lahf
or
jb
scas
dec
push
or
cmp
es
push
push
jl
cmp
push
jl
pushf
add
(bad)
ins
movs
out
leave
sbb
stos
mov
sbb
pushw
rcr
or
rcr
cli
fstp
imul
mov
mov
cmp
jnp
and
ss
add
xor
(bad)
push
add
int
pop
scas
push
or
stos
shl
mov
ficomp
ret
fidiv
invd
ja
push
rol
(bad)
jl
dec
push
adc
cmp
sbb
cmp
sub
pusha
sub
and
out
mov
cwde
dec
push
and
cmp
or
or
mov
mov
pop
scas
mov
test
inc
sbb
push
clc
push
lock
inc
sub
lods
jl
je
and
inc
loop
shr
in
and
cmps
mov
mov
push
push
data16
cmp
inc
sbb
ins
mov
dec
mov
mov
mov
call
mov
inc
popa
imul
jnp
pop
xchg
lods
xchg
std
(bad)
(bad)
push
add
addr16
or
add
push
imul
mov
xchg
sahf
repz
fldenv
(bad)
inc
(bad)
xor
cmp
jmp
(bad)
mov
ja
sbb
movs
dec
sub
lods
mov
(bad)
(bad)
(bad)
(bad)
cmp
loop
shl
xchg
ja
cmps
push
fmul
cmp
dec
in
pop
and
sbb
(bad)
(bad)
push
into
xchg
jmp
pop
adc
jg
aaa
mov
cmps
sub
jp
mov
arpl
cld
je
inc
add
sub
or
jnp
(bad)
(bad)
(bad)
jmp
and
add
prefetchnta
fld
lods
pop
ror
inc
mov
jmp
adc
(bad)
(bad)
jmp
pop
ror
xchg
push
int3
xchg
inc
and
pop
inc
repz
mov
test
ins
and
lea
mov
add
leave
jnp
add
pop
add
fdiv
dec
int
dec
icebp
and
pop
jmp
mov
mov
call
imul
cmp
fisttp
(bad)
(bad)
aas
sub
xor
cmc
add
imul
ret
aam
inc
call
(bad)
jg
mov
mov
mov
xchg
jbe
stc
ja
push
dec
mov
sar
call
ret
faddp
and
dec
sbb
xor
mov
and
adc
test
into
(bad)
jl
aad
aad
(bad)
(bad)
fist
push
inc
mov
jmp
test
scas
inc
mov
add
rcr
inc
aas
dec
mov
pop
mov
cdq
push
add
(bad)
jmp
dec
pusha
inc
rol
dec
test
arpl
pop
lods
fwait
push
ret
clc
jg
push
stos
aaa
lods
scas
cwde
cli
nop
mov
jmp
cmovp
push
hlt
outs
and
adc
xchg
mov
jmp
ror
cli
(bad)
dec
push
push
stos
sbb
pusha
inc
sub
(bad)
mov
imul
vmread
or
ja
daa
cmp
and
cmps
xchg
xchg
mov
(bad)
test
mov
inc
pop
arpl
cmp
cs
aaa
ror
mov
ret
ficomp
lahf
dec
leave
hlt
pushf
sub
movs
call
xor
push
jns
cmp
pop
(bad)
(bad)
(bad)
jmp
push
mov
inc
or
lea
imul
and
push
dec
pop
icebp
(bad)
call
or
cmp
xor
sbb
ja
scas
add
popf
aaa
loop
cmp
jo
clc
in
mov
call
push
jmp
loopne
addr16
sbb
add
add
out
dec
std
dec
xchg
push
jl
sahf
push
aas
dec
xor
push
movs
enter
loopne
loope
cli
fcomp
shl
add
add
rol
(bad)
sbb
fcmovu
push
push
inc
mov
pop
push
push
jbe
jp
dec
fs
cmps
cs
jns
mov
mov
and
je
std
mov
dec
movs
rol
pop
push
push
fwait
dec
comiss
arpl
mov
add
lea
das
xchg
xor
ja
rol
jl
inc
mov
mov
hlt
mov
mov
mov
mov
bound
push
das
lahf
push
mov
retf
je
add
pop
daa
add
enter
(bad)
cmp
mov
adc
push
add
aas
cld
fwait
cli
jge
(bad)
call
loopne
and
inc
sub
pop
xchg
loopne
(bad)
push
movs
in
jno
(bad)
adc
cmp
sub
shr
fiadd
sahf
xchg
shl
sub
das
mov
out
ins
jo
xor
and
call
js
sbb
cmp
(bad)
(bad)
loopne
mov
fadd
scas
cmp
loop
jo
pop
or
sar
and
sar
out
push
jle
lock
ja
xor
xchg
adc
mov
cmp
outs
push
and
dec
out
adc
xor
ja
and
(bad)
dec
in
nop
(bad)
aas
inc
test
push
push
sub
xor
add
sar
push
lods
cmp
dec
(bad)
inc
std
pop
popf
pop
aas
ficom
adc
cmp
test
mov
rcr
aad
(bad)
mov
adc
data16
out
or
mov
data16
fisttp
retf
std
(bad)
xchg
cmp
mov
mov
sti
xchg
dec
inc
add
sub
(bad)
jg
pushf
cwde
jnp
dec
xchg
push
test
mov
pop
enter
cs
lods
ins
add
dec
xchg
std
inc
mov
push
les
or
call
jp
mov
cmp
ss
cdq
das
add
imul
pop
int3
lock
jne
lock
push
jmp
xor
xchg
es
push
dec
jne
cs
mov
mov
mov
icebp
(bad)
mov
mov
fmul
push
mov
and
pop
mov
(bad)
(bad)
fild
jns
int3
dec
imul
rcl
xor
call
(bad)
call
arpl
or
xchg
xor
int
cmps
hlt
dec
xchg
popa
jp
and
es
add
loopne
inc
inc
mov
dec
out
push
aaa
das
sub
cmp
sbb
cmps
fist
cmc
or
aaa
ds
aaa
icebp
(bad)
(bad)
in
call
clc
sub
push
unpckhps
fnstenv
(bad)
(bad)
(bad)
mov
cwde
lock
xchg
je
inc
xchg
ror
ja
add
adc
mov
movs
mov
retf
cmp
les
enter
ds
outs
enter
push
jae
call
(bad)
in
sub
rcl
test
xchg
inc
sub
pop
mov
and
outs
pop
xor
sbb
adc
and
(bad)
addr16
enter
fs
inc
inc
call
or
push
sbb
dec
sysexit
sbb
mov
mov
or
xor
and
inc
test
sbb
mov
push
adc
cs
clc
sti
(bad)
aas
jae
(bad)
add
cmp
int
lahf
jecxz
out
test
(bad)
(bad)
mov
sub
push
inc
sub
xchg
cmp
push
lods
rcl
into
add
(bad)
fwait
sbb
xchg
icebp
(bad)
aam
rcr
(bad)
sbb
push
imul
hlt
ss
nop
movs
pop
xchg
sbb
push
and
mov
add
shl
pushf
mov
and
add
mov
std
or
(bad)
xchg
jne
cmp
mov
mov
loope
int
out
leave
xor
rcl
out
or
and
dec
inc
xor
int
cwde
dec
and
inc
dec
push
sub
es
dec
xchg
and
sar
xchg
dec
push
sub
mov
std
push
add
idiv
xchg
stos
ins
mov
xchg
movs
or
mov
jmp
add
jmp
fld
add
and
call
or
inc
retf
xchg
xlat
xor
xor
xchg
dec
or
cdq
in
or
repz
imul
ja
(bad)
shl
inc
stos
(bad)
call
adc
add
aas
dec
cmp
dec
xchg
imul
xor
imul
ja
fldenv
inc
aaa
push
inc
mov
jnp
les
jmp
dec
mov
mov
ins
pop
mov
loope
pop
push
int
push
xchg
adc
pop
mov
pushf
js
frstor
loopne
dec
add
aam
dec
cmp
sub
and
outs
cmp
(bad)
out
push
sahf
or
push
shr
or
leave
cmp
mov
test
clc
jle
and
mov
mov
mov
ja
stos
inc
ds
mov
xchg
scas
rcr
mov
ins
xchg
cli
in
lock
aad
aad
lods
add
cmp
aaa
or
hlt
jae
call
cmp
xor
mov
dec
je
mov
pop
and
clc
push
fsqrt
(bad)
jmp
xchg
xchg
sbb
push
pop
leave
das
sub
adc
mov
push
imul
sar
xchg
and
jo
ja
sub
ins
adc
mov
ficom
mov
xor
cmps
outs
push
push
stos
lock
(bad)
call
pop
add
movs
lahf
popa
cmp
out
push
cs
lods
arpl
push
imul
mov
repz
fistp
out
jno
enter
data16
aas
call
retf
sbb
in
nop
pop
push
mov
or
adc
jmp
mov
pop
adc
cmc
retf
pop
xor
mov
dec
(bad)
(bad)
inc
sub
sbb
shr
aam
sub
jo
mov
(bad)
(bad)
clc
xor
jns
push
call
mov
pop
or
lahf
call
scas
nop
adc
jg
jle
mov
pushf
mov
sub
sbb
scas
adc
(bad)
adc
lods
aam
in
dec
imul
fidiv
in
test
xor
out
jmp
push
pop
shr
scas
clc
pop
xchg
int
and
push
(bad)
(bad)
dec
add
loop
sbb
jl
add
imul
and
jmp
(bad)
add
and
stc
push
inc
hlt
(bad)
push
jmp
sbb
popa
and
mov
ins
enter
hlt
push
loopne
mov
mov
cwde
movs
arpl
es
sub
add
call
prefetcht2
out
push
sub
xlat
out
stc
cmp
(bad)
(bad)
dec
pop
cmc
mov
mov
imul
push
push
inc
ins
sub
lds
(bad)
(bad)
(bad)
call
mov
iret
retf
fidiv
inc
xlat
sub
inc
push
es
shr
ret
xchg
hlt
xor
outs
cmp
stc
and
aas
sub
in
push
loopne
cmp
out
xchg
movs
enter
mov
pop
push
imul
pushf
addr16
push
fdiv
add
lea
je
xor
int
fnstenv
pop
mul
imul
imul
leave
adc
pusha
mov
push
je
(bad)
cmp
inc
imul
int3
loop
(bad)
ffreep
daa
jne
or
adc
cld
xor
sbb
in
and
cmp
outs
rcl
(bad)
call
jno
bound
sub
inc
sub
mov
adc
push
pop
cmp
add
or
push
mov
mov
(bad)
mov
and
xor
leave
push
push
sub
sbb
jmp
je
movs
sbb
in
xchg
jno
pop
enter
cmp
inc
popa
add
mov
enter
hlt
(bad)
(bad)
jg
pop
les
out
ds
mov
pop
aam
aas
dec
add
jae
scas
nop
iret
sar
sbb
cmp
xchg
pop
sub
outs
movs
mov
(bad)
(bad)
fist
in
cmp
aam
xlat
push
dec
add
and
jmp
jae
xchg
or
call
mov
(bad)
call
call
adc
and
mov
xchg
cs
adc
(bad)
(bad)
dec
adc
ja
adc
push
push
retf
jp
mov
dec
data16
xor
clc
adc
xchg
add
add
pop
(bad)
sbb
mov
arpl
enter
cmps
stos
ret
shr
push
(bad)
jmp
lds
stos
enter
(bad)
cld
jnp
mov
adc
jmp
cmp
dec
and
xchg
mov
and
(bad)
(bad)
jmp
jno
scas
imul
sub
repnz
mov
(bad)
dec
push
jl
test
outs
sub
mov
enter
call
or
mov
pop
add
cld
adc
inc
cwde
mov
fcom
repnz
std
ret
mov
mov
(bad)
call
loopne
stos
lods
adc
mov
inc
xchg
scas
cmp
inc
sub
enter
scas
loope
xchg
push
aaa
push
ret
fnstsw
inc
mov
rcl
sub
rol
aaa
dec
bound
(bad)
add
std
xchg
pop
adc
nop
jo
add
sahf
dec
fs
fadd
add
mov
cmc
ja
inc
sub
sub
jl
cs
push
mov
cdq
in
std
int
cmp
pusha
ss
(bad)
mov
pop
lods
xor
aad
sbb
aas
push
iret
jp
mov
js
sti
adc
outs
pop
addr16
(bad)
inc
jnp
nop
cli
add
inc
js
call
outs
aad
je
lods
inc
and
cmps
xor
xchg
int3
shl
addr16
or
ds
hlt
sbb
clc
rcl
and
aam
pushf
aas
loop
loope
test
mov
mov
lods
jnp
inc
repnz
loop
clc
push
fiadd
aaa
push
push
sub
dec
push
hlt
sub
push
inc
jmp
add
xchg
adc
xor
xchg
push
ja
add
xchg
sbb
(bad)
repz
fwait
cli
inc
int
fsubr
push
push
jns
inc
(bad)
les
jg
imul
aam
ds
daa
add
inc
repz
xor
int
xchg
mov
fsub
lods
mov
inc
sub
lea
add
mov
xlat
pop
push
xchg
add
or
cmp
dec
add
(bad)
(bad)
clc
jns
(bad)
push
aad
sbb
mov
ret
mov
scas
jmp
aad
xor
sbb
pop
std
inc
push
das
adc
pop
dec
mov
ds
pop
mov
(bad)
mov
rcr
dec
fld
add
dec
sub
jecxz
or
popa
dec
add
in
jmp
(bad)
dec
adc
add
movs
test
xor
or
rol
or
jp
mov
js
fild
sub
add
adc
int
(bad)
mov
(bad)
inc
mov
mov
aam
aas
sbb
(bad)
ins
dec
dec
mov
pop
test
pop
sbb
xor
inc
pop
iret
sar
mov
push
xchg
add
mov
retf
popf
jge
cmp
test
rcl
mov
push
shl
(bad)
(bad)
jg
jge
data16
and
leave
add
cwde
xor
rol
cmc
mov
sub
imul
scas
sti
add
inc
and
(bad)
xchg
inc
clc
(bad)
call
lea
inc
iret
dec
arpl
dec
mov
mov
jg
add
cwde
or
cmp
std
jmp
add
loop
cmp
push
inc
jmp
clc
cmp
pop
and
(bad)
call
nop
sbb
daa
ds
jno
sbb
ja
movs
mov
sub
mov
dec
cdq
clc
or
mov
cmps
sbb
mov
leave
dec
enter
and
jle
dec
in
jl
push
lods
xchg
inc
ins
sbb
ss
add
das
bound
pextrw
xchg
out
ins
loop
add
(bad)
jg
inc
sub
add
fild
inc
jbe
mov
(bad)
call
repz
fidivr
(bad)
maxps
and
aaa
adc
les
mov
inc
mov
ja
outs
inc
mov
(bad)
(bad)
call
jmp
push
lods
mov
addr16
add
lds
adc
cmp
push
dec
xor
fnsave
push
sub
or
inc
adc
(bad)
(bad)
mov
test
push
jae
rcl
sub
lods
jne
outs
xchg
and
pop
(bad)
dec
enter
ss
xchg
movs
cmp
jecxz
icebp
xor
rol
fldcw
(bad)
(bad)
jmp
cmp
xchg
inc
mov
in
sbb
sub
dec
dec
mov
retf
outs
inc
mov
shr
inc
jp
aas
addr16
ja
push
mov
leave
rcl
sbb
mov
jmp
and
cmp
sbb
push
inc
imul
push
in
in
test
xchg
xor
fistp
imul
pop
cli
es
or
(bad)
ror
ja
out
(bad)
(bad)
aas
sar
cmp
jb
mov
daa
or
call
mov
dec
sub
push
jnp
cli
inc
add
push
and
(bad)
(bad)
(bad)
(bad)
call
dec
add
xor
push
in
daa
inc
and
sub
fld
stos
pop
scas
daa
mov
hlt
dec
stc
and
pop
xor
jmp
mov
push
push
dec
out
push
and
mov
mov
cmp
(bad)
(bad)
push
and
fist
rol
xchg
scas
push
sub
add
outs
cld
ins
cmp
ins
adc
(bad)
(bad)
(bad)
push
ret
xchg
scas
cwde
in
inc
mov
sti
push
pop
add
dec
cmp
imul
out
(bad)
(bad)
dec
push
cdq
push
cdq
dec
adc
add
or
jecxz
ss
sbb
dec
push
push
(bad)
inc
fst
push
pop
mov
add
push
pop
cmp
pop
cmps
dec
mov
fst
mov
stos
bound
cs
in
adc
les
jmp
sub
push
cs
mov
xchg
add
stos
mov
mov
(bad)
(bad)
call
(bad)
push
add
inc
pop
cmp
or
into
push
dec
mov
adc
and
or
xchg
rol
jg
jmp
pop
lea
hlt
nop
sti
adc
pop
and
(bad)
aam
pop
retf
cld
sti
ret
add
out
jmp
xchg
add
repz
xchg
and
ja
cmp
or
rcl
jae
jae
push
aaa
lock
xchg
push
sub
mov
xor
jmp
xor
(bad)
lahf
mov
or
mov
(bad)
mov
push
mov
adc
ja
out
jmp
fwait
sub
aam
push
add
(bad)
push
rcl
or
inc
aas
pop
cmp
clc
push
and
(bad)
push
jbe
ret
add
xor
fimul
fsubr
hlt
cmp
inc
and
icebp
loopne
les
movs
inc
xchg
retf
pop
adc
and
or
pop
sbb
xor
mov
xchg
sbb
(bad)
call
push
in
pop
or
adc
xchg
xor
pop
sub
out
add
push
retf
inc
in
in
in
in
test
mov
inc
icebp
sbb
add
push
icebp
pop
mov
sub
add
nop
push
add
fwait
fwait
add
adc
xor
mov
xor
in
or
mov
mov
mov
nop
popa
xor
pop
ins
faddp
movs
inc
ja
cld
cdq
add
xchg
cmps
mov
mov
ja
adc
dec
in
nop
and
test
dec
sub
ror
mov
mov
les
sub
cwde
inc
push
add
jle
fistp
inc
push
adc
inc
sbb
mov
push
add
xchg
mov
sti
dec
mov
cmp
mov
shl
mov
rol
(bad)
push
shr
xchg
test
int
mov
jp
cmp
int3
xchg
scas
cmps
pop
and
jmp
mov
daa
and
and
xchg
scas
lods
mov
jecxz
stc
fldenv
pop
test
adc
sbb
cs
addr16
mov
dec
fisub
std
push
sbb
mov
stos
lock
xchg
mov
sub
mov
dec
pusha
inc
popa
shl
pop
mov
test
push
and
jmp
aas
push
inc
icebp
(bad)
(bad)
call
adc
mov
hlt
dec
imul
rol
inc
ds
cmp
(bad)
(bad)
push
call
push
clc
aaa
sub
(bad)
int3
mov
sub
xchg
pop
and
pop
pop
inc
pop
rcl
push
(bad)
sahf
(bad)
sbb
dec
pop
push
dec
loop
imul
push
mov
mov
jmp
adc
xchg
pop
stos
pop
push
jbe
in
ins
fist
mov
(bad)
call
sub
mov
sbb
push
cmps
lods
push
fmul
push
jg
ja
pop
aad
jg
ss
fwait
sti
data16
sub
mov
pusha
aaa
adc
sbb
sbb
out
jg
xor
jl
sahf
xchg
fld
(bad)
adc
push
mov
loop
inc
sahf
mov
out
int3
cdq
mov
fdivr
dec
xor
jmp
mov
push
push
inc
pop
adc
dec
mov
lea
jp
(bad)
(bad)
mov
retf
cmp
or
jns
int
sub
mov
(bad)
dec
dec
aas
adc
jbe
inc
daa
xchg
cs
js
push
pop
fstp
push
jmp
les
jecxz
cmp
bound
imul
adc
(bad)
(bad)
imul
jae
sbb
dec
cmps
adc
or
test
(bad)
mov
fstp
sub
dec
rcl
push
out
cmps
shl
cmp
mov
fsub
gs
aad
add
(bad)
cmp
mov
(bad)
jmp
push
add
stos
inc
scas
xchg
sahf
mov
(bad)
rcr
(bad)
(bad)
jmp
(bad)
movs
pushf
loopne
fadd
sbb
xor
js
aad
and
leave
jnp
add
(bad)
(bad)
(bad)
fcomp
lea
retf
lds
mov
in
push
ret
push
fcomip
mov
mov
pop
test
dec
aam
rcl
in
sbb
add
or
test
jo
xchg
shl
mov
xchg
push
xchg
aaa
loop
inc
(bad)
(bad)
mov
sti
enter
xor
rol
and
test
je
mov
ja
(bad)
(bad)
inc
cld
cmp
int3
mov
push
sub
lods
push
out
mov
xor
xor
(bad)
(bad)
inc
or
sub
shl
push
loope
ins
in
mov
inc
stc
mov
jns
(bad)
(bad)
jmp
and
mov
xchg
inc
add
in
add
xlat
fidivr
sub
sar
call
push
outs
sub
cld
aad
test
adc
(bad)
outs
mov
add
(bad)
(bad)
(bad)
(bad)
out
push
popf
fadd
ret
outs
shr
sahf
sub
cmp
std
psrlq
(bad)
(bad)
push
ins
loopne
mov
scas
pop
xchg
sbb
repz
lock
xor
bound
push
test
pop
in
nop
jb
mov
mov
xchg
call
jecxz
in
std
leave
dec
fidivr
(bad)
(bad)
(bad)
inc
jbe
add
ss
ins
xchg
in
and
test
cmp
(bad)
(bad)
(bad)
push
into
pop
js
in
sbb
mov
rcl
aas
cmp
scas
(bad)
icebp
mov
dec
ret
push
push
(bad)
(bad)
(bad)
call
jmp
in
pop
out
and
cmp
sbb
aaa
shr
cdq
es
(bad)
(bad)
call
ins
jle
sbb
jmp
cli
nop
lods
cwde
xchg
arpl
adc
test
js
(bad)
(bad)
jmp
lds
and
sbb
scas
mov
xchg
sbb
pop
mov
test
jmp
inc
stos
adc
aad
adc
xor
fist
xchg
inc
mov
(bad)
call
lds
retf
add
js
xchg
ret
xor
movs
lock
inc
push
test
(bad)
jge
and
jmp
sbb
es
adc
(bad)
in
jne
lods
pop
xchg
jbe
sbb
repz
(bad)
(bad)
(bad)
(bad)
mov
or
ins
iret
and
mov
xchg
fs
and
xchg
jmp
mov
jecxz
loop
fidiv
imul
push
xchg
jl
mov
xchg
jo
repnz
(bad)
(bad)
aas
leave
or
rol
aam
loopne
xchg
adc
enter
fbld
mov
(bad)
dec
aad
leave
sti
jge
inc
mov
xlat
pop
xchg
mov
fs
push
mov
(bad)
(bad)
(bad)
jmp
adc
jo
stos
and
js
sbb
iret
mov
sbb
cld
sahf
stos
xlat
(bad)
(bad)
(bad)
call
cmps
jne
loop
in
jnp
mov
imul
xchg
xchg
add
(bad)
(bad)
(bad)
js
xor
into
xor
jb
lods
xchg
xchg
aas
cmp
or
in
and
(bad)
xor
(bad)
(bad)
call
data16
mov
push
scas
shl
and
dec
mov
pushf
(bad)
(bad)
(bad)
dec
or
iret
rol
mov
push
out
xchg
add
(bad)
inc
popa
(bad)
loope
(bad)
(bad)
(bad)
push
call
mov
cmp
xlat
movs
clc
(bad)
rol
push
mov
(bad)
call
stos
movs
scas
dec
ret
or
sub
and
fild
cs
xchg
pop
pushf
xor
fs
(bad)
(bad)
(bad)
push
les
aaa
fmul
outs
icebp
fwait
pushf
cmp
(bad)
xor
lahf
std
mov
xchg
(bad)
(bad)
(bad)
jmp
mov
mov
ret
sub
rcl
cmp
outs
jge
loope
pop
(bad)
(bad)
(bad)
(bad)
cmp
out
add
sti
mov
aaa
lea
adc
jo
cmp
test
and
(bad)
(bad)
inc
mov
cmc
sub
and
fist
add
xchg
pop
sahf
xor
fs
mov
sbb
fld
(bad)
(bad)
(bad)
push
ror
add
mov
xor
dec
mov
scas
addr16
cmps
pop
mov
ret
lods
push
(bad)
(bad)
(bad)
inc
xlat
sbb
adc
ret
mov
test
pop
mov
(bad)
(bad)
push
mov
fistp
fldenv
std
(bad)
pop
xchg
mov
(bad)
loope
retf
or
movs
push
push
jg
fnsave
std
clc
pop
xor
push
and
popf
fs
xchg
jge
movs
retf
xchg
adc
lock
fwait
loope
aam
fidiv
push
(bad)
cwde
inc
fdivrp
inc
(bad)
(bad)
(bad)
call
xchg
enter
sbb
fstp
or
mov
push
push
cmps
cmps
add
(bad)
(bad)
jmp
xchg
and
xor
jnp
out
lock
fwait
in
push
adc
adc
xor
(bad)
inc
not
mov
loope
fbstp
cwde
inc
jmp
mov
lock
test
push
(bad)
(bad)
(bad)
jmp
mov
xchg
push
jg
mov
fwait
les
adc
adc
xor
imul
mov
loope
fisttp
inc
in
aas
dec
test
or
sub
mov
(bad)
(bad)
call
ficom
stc
aad
dec
addr16
stos
xor
jne
xchg
pushf
sub
(bad)
xor
jns
retf
(bad)
(bad)
(bad)
call
inc
dec
aas
jno
mov
call
daa
or
dec
cmp
lahf
add
cmp
(bad)
(bad)
stc
call
pop
aam
das
les
add
call
aam
cmp
(bad)
(bad)
(bad)
dec
jno
mov
sbb
mov
dec
and
fcomp
fidivr
xchg
(bad)
(bad)
call
aas
dec
pop
pop
shl
or
sub
or
sbb
es
(bad)
(bad)
(bad)
dec
mov
sbb
xchg
sbb
inc
dec
xor
test
fimul
stc
fcmovnbe
adc
(bad)
(bad)
(bad)
call
xor
xor
cmp
xor
ja
leave
or
cmp
call
inc
cmps
or
jg
xor
jb
dec
and
or
repz
dec
mov
push
(bad)
(bad)
(bad)
call
pop
scas
dec
lods
mov
cmp
push
les
(bad)
dec
pop
cmp
call
je
(bad)
(bad)
call
stos
or
ja
inc
lahf
(bad)
adc
dec
retf
xchg
lds
dec
fisub
fs
(bad)
jmp
cmp
inc
les
out
mov
ss
pop
popa
rcr
les
push
(bad)
(bad)
(bad)
aas
pop
pop
dec
lahf
stc
adc
aaa
retf
rol
pop
pop
dec
scas
and
inc
lods
mov
sar
dec
xlat
sbb
push
out
sti
or
push
popa
xchg
and
fist
test
xor
push
cmp
mov
jmp
inc
xor
out
mov
(bad)
(bad)
(bad)
push
mov
enter
stos
pop
cmc
rcr
sbb
dec
push
idiv
and
add
(bad)
push
movs
test
cmps
push
and
dec
(bad)
call
or
adc
outs
mov
neg
std
jmp
test
push
inc
and
sub
cmp
icebp
fdivr
fwait
push
jg
(bad)
(bad)
dec
ins
mov
ins
(bad)
lock
adc
ins
mov
neg
jb
mov
stos
gs
in
cmp
dec
aaa
imul
icebp
(bad)
mov
mov
mov
(bad)
(bad)
(bad)
call
pusha
sbb
outs
fstp
call
or
out
mov
test
(bad)
(bad)
dec
jbe
sub
pop
ins
aas
dec
push
push
outs
fcom
sbb
push
mov
je
arpl
(bad)
(bad)
call
xchg
xchg
sbb
lods
inc
les
fxch
aas
push
imul
mov
adc
aad
(bad)
(bad)
push
pop
loope
push
jnp
or
xchg
or
push
(bad)
push
mov
inc
inc
push
push
sbb
repz
lea
push
dec
inc
cwde
sub
mov
jg
xor
pop
loope
push
dec
push
sbb
in
xchg
or
pop
(bad)
mov
das
push
xchg
push
jno
ja
pop
(bad)
(bad)
(bad)
call
mov
out
retf
pop
push
push
inc
lea
dec
fidiv
inc
mov
in
xor
(bad)
fstp
retf
mov
out
xchg
adc
arpl
test
inc
inc
aas
push
sbb
(bad)
(bad)
(bad)
dec
lods
rcl
dec
push
movntq
movs
out
and
call
(bad)
(bad)
(bad)
(bad)
aas
test
mov
jle
leave
add
loop
retf
hlt
xlat
xor
add
aas
mov
int
(bad)
mov
dec
pop
mov
out
movs
shl
data16
pop
stc
sub
mov
push
outs
test
sub
and
and
retf
xlat
adc
(bad)
(bad)
dec
xchg
addr16
push
out
movs
int
jge
out
call
ror
(bad)
(bad)
(bad)
(bad)
in
sub
in
sub
cmp
movs
in
add
xor
add
rcr
pop
jmp
mov
(bad)
into
pushf
mov
jbe
repnz
scas
arpl
(bad)
cld
sub
daa
int3
loop
icebp
(bad)
push
jno
cmp
movs
call
add
ss
xlat
xor
and
out
cld
fist
into
sbb
mov
lods
push
out
cmp
in
jg
cmp
(bad)
(bad)
(bad)
(bad)
jg
rol
push
xor
xchg
aas
lock
mov
add
ja
cmp
jp
inc
(bad)
(bad)
(bad)
dec
ret
fcmovne
add
dec
inc
sahf
sub
inc
movs
mov
adc
fnstenv
dec
fist
int3
push
out
add
(bad)
(bad)
call
xor
lock
mov
add
jp
or
jp
inc
add
(bad)
(bad)
mov
mov
inc
movs
mov
fist
int3
pop
out
add
(bad)
(bad)
jmp
adc
xchg
sub
pop
mov
dec
inc
dec
push
adc
mov
ret
call
or
inc
cmps
sub
dec
movs
cmps
test
int3
inc
out
add
(bad)
(bad)
(bad)
jge
push
imul
mov
add
xchg
iret
or
imul
jg
(bad)
(bad)
inc
loope
sbb
addr16
jp
cmp
popa
push
dec
imul
xor
push
pusha
retf
sbb
adc
(bad)
(bad)
push
movs
dec
int3
dec
pushf
test
loopne
iret
cmp
mov
imul
loope
cmp
xchg
sub
cmp
push
jle
les
jns
push
push
(bad)
(bad)
(bad)
mov
ins
int3
dec
pushf
mov
iret
cmp
mov
push
fidivr
loope
cmp
(bad)
(bad)
cmp
lahf
cmp
cmp
pop
push
pusha
imul
push
jns
push
dec
retf
or
or
xor
outs
(bad)
(bad)
(bad)
dec
addr16
push
pushf
mov
add
movs
iret
cmp
cdq
or
leave
jg
loope
xor
sti
jg
(bad)
(bad)
call
mov
hlt
xor
aam
pusha
mov
popa
xor
adc
sar
fcomi
dec
(bad)
(bad)
(bad)
dec
fist
adc
add
test
nop
dec
mov
lahf
push
add
(bad)
jg
mov
hlt
(bad)
(bad)
(bad)
call
repz
push
lea
add
inc
cmp
fcmovnu
dec
ins
inc
rcl
call
repz
push
nop
ins
mov
lahf
imul
cmp
sub
sbb
out
(bad)
push
mov
popa
xor
push
sbb
mov
xor
push
mov
jo
(bad)
(bad)
(bad)
call
pusha
push
es
xor
idiv
sbb
and
ins
add
mov
(bad)
(bad)
(bad)
(bad)
jmp
push
sbb
dec
lods
add
inc
or
jmp
jmp
(bad)
(bad)
push
xor
sar
sbb
and
pop
sub
mov
(bad)
in
xchg
(bad)
(bad)
push
lods
add
jno
xchg
repnz
nop
cmp
les
jo
pusha
cmp
xor
(bad)
(bad)
call
jge
sbb
and
je
test
es
dec
or
in
xchg
(bad)
(bad)
dec
xchg
or
repnz
or
xor
add
iret
pop
(bad)
(bad)
mov
inc
jne
aam
int3
data16
xor
dec
fld
lods
sub
stc
addr16
lock
and
jl
out
hlt
xor
(bad)
(bad)
(bad)
jmp
add
call
inc
retf
stc
das
sub
xchg
dec
inc
loope
cld
sub
int3
in
(bad)
(bad)
(bad)
push
push
aam
dec
fist
mov
call
out
pop
int3
(bad)
dec
idiv
mov
jo
pop
sub
out
dec
loope
cld
adc
sahf
push
js
popf
add
(bad)
(bad)
(bad)
dec
dec
lock
cmp
into
jo
or
hlt
nop
push
add
jne
loopne
(bad)
(bad)
(bad)
call
aad
xchg
popa
sbb
fst
xchg
(bad)
dec
lods
mov
shl
jmp
addr16
cld
pop
les
neg
jg
es
lahf
jmp
shl
add
xlat
dec
enter
sbb
(bad)
jmp
jmp
dec
shl
xor
sbb
(bad)
(bad)
(bad)
dec
add
out
scas
int3
add
fstp
pop
xor
setae
sub
(bad)
inc
pop
inc
not
or
shl
adc
ret
cs
test
stos
jo
sbb
and
mov
call
scas
fadd
jne
fcomp
rdmsr
xor
test
ss
scas
push
inc
(bad)
(bad)
(bad)
call
rol
jae
mov
and
stos
dec
xchg
lods
ins
jle
stos
sbb
out
(bad)
call
mov
or
mov
xor
jmp
xor
fs
(bad)
(bad)
fst
or
ror
and
out
cs
mov
xor
daa
mov
icebp
and
(bad)
call
aas
xlat
pop
xchg
int3
adc
stc
stos
adc
mov
cs
scas
xchg
cwde
fidivr
outs
popa
fnstenv
das
sar
out
jg
xor
adc
jmp
test
xlat
(bad)
(bad)
(bad)
dec
xchg
not
inc
dec
sub
xchg
test
shufps
xchg
iret
xchg
cli
fcmove
inc
or
xor
(bad)
(bad)
inc
dec
cli
sbb
xchg
out
jg
xor
mov
jecxz
xchg
and
push
xlat
xor
(bad)
adc
cmp
rsm
cs
xchg
xchg
xchg
stos
ficom
xor
hlt
pop
and
lods
push
xor
es
or
cmp
aas
adc
inc
mov
jb
pop
lods
scas
pop
inc
or
(bad)
(bad)
call
adc
push
lods
mov
pop
jl
sbb
cmp
fisttp
(bad)
(bad)
(bad)
push
lahf
or
mov
dec
inc
call
or
adc
shl
(bad)
(bad)
call
pushf
jno
add
dec
mov
les
jo
in
and
dec
out
cmp
(bad)
(bad)
(bad)
jmp
mov
js
test
mov
inc
leave
push
cmp
aaa
fdiv
sub
rcl
out
dec
sahf
and
jmp
pop
and
cmps
push
in
push
xchg
aam
xor
mov
(bad)
(bad)
call
iret
xor
ror
pop
jge
loop
push
inc
mov
(bad)
(bad)
(bad)
jmp
ss
clc
or
mov
(bad)
call
mov
cmp
xchg
dec
fwait
push
arpl
(bad)
(bad)
(bad)
push
cmp
push
mov
(bad)
or
in
(bad)
popa
sti
adc
add
cmp
mov
(bad)
(bad)
dec
retf
enter
sub
adc
fwait
push
arpl
je
cs
(bad)
(bad)
jmp
sub
add
mov
sbb
dec
add
cmp
(bad)
fdivr
aaa
fdivr
enter
sub
fwait
inc
arpl
sar
push
scas
xlat
pop
xchg
je
stos
leave
fs
push
mov
(bad)
(bad)
(bad)
jg
pushf
xchg
pop
(bad)
mov
jbe
push
xchg
retf
xor
mov
(bad)
(bad)
(bad)
mov
xchg
and
push
inc
and
push
movs
and
sbb
mov
xchg
add
pop
(bad)
(bad)
(bad)
jmp
mov
aas
into
rcl
mov
adc
nop
xchg
pop
mov
or
mov
or
(bad)
(bad)
(bad)
fcmovbe
std
lods
popf
dec
xchg
mov
jnp
jecxz
scas
repnz
and
sbb
pusha
hlt
(bad)
(bad)
(bad)
push
ret
hlt
test
pop
dec
rol
movs
sub
test
imul
jno
ja
ds
jmp
dec
(bad)
(bad)
(bad)
call
retf
ss
push
jmp
fwait
and
mov
sub
xor
retf
call
imul
leave
mov
hlt
test
clc
ret
loope
jge
daa
dec
cmp
ret
loopne
adc
sub
push
cmps
mov
cmps
pop
in
pop
pop
xchg
push
push
jmp
in
pusha
js
(bad)
(bad)
dec
jmp
add
adc
mov
mov
dec
xor
(bad)
stos
push
inc
mov
(bad)
call
(bad)
ins
mov
add
add
and
aas
mov
stos
dec
mov
(bad)
push
imul
aad
ret
icebp
jge
and
dec
pop
cwde
mov
retf
jge
(bad)
(bad)
inc
loopne
sbb
push
xor
movs
icebp
lock
jne
sub
(bad)
(bad)
(bad)
inc
fdiv
out
xor
(bad)
es
pop
dec
enter
(bad)
xchg
nop
add
mov
call
add
adc
in
add
jle
jl
leave
fidivr
sbb
pop
xlat
adc
aas
neg
mov
(bad)
pop
xchg
mov
test
enter
xchg
ret
pop
sahf
(bad)
(bad)
(bad)
jmp
js
xchg
fadd
pop
mov
out
js
lahf
cmp
out
ret
add
adc
cmp
(bad)
fmul
push
mov
push
outs
pop
out
lds
add
(bad)
(bad)
dec
push
js
int
fdivr
outs
sub
jmp
jno
xchg
push
jmp
and
mov
fidiv
les
call
leave
les
(bad)
(bad)
call
out
pop
sbb
test
xchg
push
sub
movs
add
lock
les
xchg
cmps
xor
(bad)
mov
push
mov
jmp
es
sub
test
push
fbstp
jmp
mov
movs
push
out
push
ret
cmp
mov
(bad)
(bad)
jmp
sub
je
jmp
inc
pop
nop
lds
jb
xchg
popa
imul
(bad)
(bad)
(bad)
call
mov
mov
pushf
inc
div
mul
lahf
movs
jae
sub
das
xchg
in
(bad)
(bad)
jmp
sub
imul
outs
in
inc
mov
ret
sbb
iret
cmps
adc
cmp
call
fimul
add
lods
repnz
fwait
cli
ja
sub
(bad)
out
mov
nop
mov
leave
push
std
out
and
mov
mov
dec
pop
xchg
mov
dec
div
aam
cmps
jno
das
jne
in
and
sub
jge
out
test
mov
lahf
test
mov
enter
popf
mov
xor
call
call
cmp
ja
imul
mov
inc
sub
dec
test
mov
js
(bad)
(bad)
inc
out
jp
jns
ror
xor
movs
mov
xchg
in
jge
and
icebp
(bad)
dec
mov
outs
mov
jl
imul
xlat
or
(bad)
(bad)
call
mov
(bad)
jns
push
scas
enter
mov
inc
xlat
ds
cmp
sbb
jg
stos
jmp
stos
(bad)
(bad)
(bad)
call
push
cwde
(bad)
iret
mov
inc
or
xchg
ficom
test
loop
(bad)
(bad)
(bad)
(bad)
fist
push
mov
(bad)
mov
inc
out
fistp
sbb
jg
xor
popf
add
(bad)
(bad)
push
call
ror
mov
js
scas
cmc
add
sub
pop
cli
sub
adc
mov
sub
fwait
or
adc
xor
into
xor
sub
repnz
pop
mov
cmp
rol
adc
leave
push
inc
jo
or
inc
std
(bad)
(bad)
js
sbb
push
in
xchg
add
shr
retf
sbb
mov
mov
push
or
xor
loop
push
call
mov
out
mov
es
or
or
(bad)
inc
(bad)
in
sti
and
cmp
jnp
(bad)
mov
movs
cmps
inc
push
jmp
shl
(bad)
pop
pusha
fisubr
push
adc
sbb
or
or
cmc
pop
pop
pop
xchg
sub
(bad)
jg
push
push
cmp
push
movs
xor
cld
add
mov
nop
.byte
