repnz
add
add
cmp
add
add
add
adc
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
xchg
add
add
add
icebp
add
xor
icebp
add
push
icebp
add
arpl
add
jp
add
mov
add
xchg
icebp
add
mov
add
add
add
add
icebp
add
lock
lock
std
lock
nop
lock
or
add
cwde
lock
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
ins
add
push
inc
push
dec
xor
cs
ins
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
ins
push
jb
je
arpl
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
push
imul
jb
add
add
je
imul
imul
jns
add
add
gs
je
inc
imul
jb
je
inc
imul
outs
jae
dec
popa
outs
fs
add
add
imul
jae
add
push
outs
jae
push
push
dec
gs
popa
addr16
add
add
outs
push
inc
dec
popa
outs
popa
addr16
add
add
and
add
pop
add
add
add
add
add
movs
push
add
add
add
ins
or
add
mov
das
jae
mov
das
imul
and
shr
cli
jg
jae
jo
push
dec
jg
inc
mov
mov
gs
mov
jg
imul
mov
sub
sar
js
and
mov
mov
mov
mov
out
mov
push
adc
cmp
and
addr16
sahf
mov
xchg
neg
adc
mov
jmp
and
push
popf
das
ret
and
aad
fmul
jge
mov
hlt
cmp
loop
lods
pop
inc
leave
mov
jnp
repnz
push
push
sar
mov
jbe
clc
sbb
pop
xchg
adc
imul
mov
aas
(bad)
gs
test
or
into
jg
lods
mov
jo
xchg
xchg
dec
sahf
jbe
xor
popf
jo
inc
stos
mov
(bad)
mov
jecxz
inc
psrad
sbb
in
sbb
fdivr
adc
cmp
mov
test
and
lds
shl
cmc
cmovge
test
cmp
mov
mov
retf
clc
mov
pop
inc
add
adc
and
or
loope
arpl
jbe
mov
adc
(bad)
sub
(bad)
in
repnz
xchg
add
loop
sub
retf
mov
adc
jecxz
mov
mov
mul
js
and
add
(bad)
xchg
mov
dec
fcos
fild
and
dec
daa
(bad)
dec
sub
clc
aad
inc
(bad)
dec
scas
and
loope
push
and
adc
sbb
pop
add
in
mov
scas
sahf
mov
or
jmp
(bad)
loopne
loop
sar
mov
jg
out
nop
lods
call
mov
push
add
aam
imul
(bad)
and
mov
jbe
popf
adc
add
jmp
pop
lods
sahf
loop
cmps
(bad)
loop
pop
cmc
jno
fistp
mov
inc
rcr
clc
imul
mul
(bad)
fbld
cmp
jno
mov
cmp
fsub
xchg
out
repz
scas
movs
fdiv
mov
and
scas
lds
out
pop
pop
and
scas
imul
test
stc
and
loopne
mov
iret
aad
popa
mov
jmp
lahf
fs
jo
les
mov
pop
mov
aam
and
push
sbb
sahf
cld
cmp
add
dec
shl
adc
les
xchg
mov
cmp
jbe
aam
stos
mov
sub
ret
mov
out
inc
ins
pop
not
xor
or
mov
gs
in
sub
scas
add
xchg
fidiv
and
(bad)
lock
xchg
mov
add
test
nop
out
retf
popf
fisttp
sbb
push
rol
and
inc
jae
enter
push
ror
js
daa
jmp
xlat
shl
imul
sub
inc
jg
xchg
fwait
sbb
out
and
shl
xor
and
inc
push
test
cmp
dec
shl
repz
mov
mov
push
jecxz
dec
pop
cmp
inc
(bad)
out
jp
cmc
adc
out
mov
icebp
loope
and
mov
ror
in
mov
mul
mov
shl
dec
push
pop
and
js
mov
inc
and
bound
jge
bound
sub
(bad)
sahf
push
mov
and
cmps
aas
stos
push
ret
shl
sbb
xor
shl
int3
scas
cmp
call
rol
inc
scas
int3
sub
(bad)
push
jb
jg
test
sahf
mov
bound
lock
mov
fwait
outs
inc
(bad)
push
dec
mov
gs
test
inc
cmps
inc
je
cmps
and
cmp
push
cmps
pop
adc
adc
daa
xchg
jp
mov
cmp
call
adc
sbb
mov
test
test
scas
fsubr
lea
sar
out
retf
in
jns
fwait
cwde
addr16
int3
loopne
jle
mov
mov
xchg
cmp
ret
aam
push
sahf
xor
rcr
add
hlt
mov
lods
cmp
sbb
(bad)
add
test
cdq
(bad)
mov
adc
addr16
popf
cli
jbe
mov
in
jmp
and
xchg
cmp
sar
push
add
adc
mov
jbe
inc
or
push
pop
ins
xor
lods
or
jnp
nop
or
das
pop
lahf
test
mov
adc
movs
stc
push
xor
sub
or
fiadd
clc
adc
xor
inc
mov
imul
push
xor
popa
inc
ins
retf
enter
(bad)
rcl
in
adc
jg
std
(bad)
mov
ds
sub
xchg
mov
cmp
(bad)
int
mov
and
scas
int3
push
mul
or
aas
or
ja
xchg
std
(bad)
in
repnz
push
and
popa
fcom
(bad)
mov
dec
jmp
int3
sub
inc
mov
lods
add
jle
mov
in
fwait
loop
(bad)
in
cmp
pop
pop
mov
mov
and
jmp
pop
popf
out
add
shl
ins
jge
jmp
adc
ds
push
and
or
ss
push
aas
jge
shl
addr16
sbb
sbb
or
jg
daa
aad
call
push
mov
int
inc
jne
mov
jae
cmps
movs
stos
rcr
test
dec
(bad)
jns
outs
pop
pop
enter
mov
or
lahf
jg
pop
test
sub
loop
pop
dec
hlt
mov
adc
pop
aas
mov
test
(bad)
scas
pop
push
push
shl
dec
int3
dec
ds
inc
fwait
nop
or
retf
adc
loope
or
mov
sub
jnp
xchg
mov
int3
add
and
push
fwait
lock
jae
mov
and
lahf
movs
les
dec
ds
push
jmp
xor
loope
cwde
hlt
inc
popa
and
sub
es
ins
ds
push
mov
fs
int
int
aam
adc
jp
nop
pop
cmp
adc
xor
dec
cmc
fcom
pop
and
mov
mov
xchg
fst
mov
pushf
or
loopne
add
mov
neg
sahf
jg
(bad)
mov
imul
pop
(bad)
mov
lods
lahf
data16
fs
pop
push
and
jnp
popf
jns
ja
in
xlat
mov
mov
pusha
jle
dec
cli
pop
sbb
pop
adc
call
jb
cmp
mov
ins
rcl
pop
adc
jmp
cmp
mov
ret
mov
push
loopne
push
dec
scas
rol
nop
(bad)
jge
mov
jo
mov
rcl
jno
xor
mov
int
sahf
es
jnp
mov
(bad)
out
rcr
sub
daa
stc
jle
inc
mov
int
sub
xor
ucomiss
add
cwde
(bad)
movs
sbb
mov
(bad)
mov
out
mov
ret
imul
mov
cmps
xchg
ficom
mov
adc
adc
dec
sbb
mov
or
into
sbb
mov
fbld
inc
add
pop
div
(bad)
out
adc
stc
mov
and
adc
jecxz
sbb
adc
sub
mov
(bad)
dec
pushf
stos
repnz
push
adc
fiadd
push
cmps
test
cmovae
jmp
out
fisub
shl
pushf
ins
inc
xor
sti
ja
cmps
sbb
pusha
inc
loop
lea
push
xor
mov
pop
adc
xchg
pop
cmc
sub
cmp
push
adc
je
pop
into
sub
dec
add
addr16
push
sbb
sub
(bad)
push
push
paddq
fwait
mov
xchg
cdq
sbb
push
lock
jmp
sbb
retf
loope
jne
ja
fsubr
iret
loope
mov
shl
push
sub
jae
dec
sar
push
ja
mov
push
mov
jmp
jbe
xchg
frstor
(bad)
inc
fwait
pop
ss
adc
movs
scas
push
in
fimul
sub
mov
mov
loope
or
mov
mov
lea
jg
jecxz
and
xchg
cwde
lahf
xchg
and
test
push
inc
repnz
push
push
test
inc
push
push
lock
xor
les
lds
repnz
mov
in
jmp
or
sbb
jno
pushf
aaa
adc
inc
cmp
shl
les
(bad)
sar
mov
pusha
mov
jl
adc
sub
push
cmp
add
jnp
test
sbb
pop
add
into
mov
rcr
cmp
daa
lock
ins
cmc
push
popf
stc
jno
cmc
sbb
mov
and
push
cwde
sub
aaa
push
push
fmul
imul
(bad)
mov
out
sahf
xchg
sbb
xor
out
xor
adc
pusha
pushf
add
cmp
xchg
jl
add
inc
stc
jo
and
inc
xchg
ret
dec
ds
mov
xchg
fisub
push
out
inc
out
popa
xchg
mov
jmp
icebp
mov
sbb
mov
pop
popf
sub
push
push
adc
sti
int3
jmp
rol
sbb
xchg
ror
add
arpl
pushf
std
adc
pushf
leave
xor
(bad)
fdiv
inc
xchg
nop
retf
mov
and
shl
ins
pop
mov
jmp
add
and
mov
shr
clc
mov
pop
shl
cmp
and
je
cmc
cmp
test
scas
or
and
je
push
fldenv
rcl
lock
jbe
xlat
pop
sar
(bad)
xchg
push
sahf
xor
push
cmp
popf
retf
adc
pop
clc
sub
xor
mov
jo
fiadd
es
test
sub
jle
adc
(bad)
mov
stc
jecxz
cmp
(bad)
fisttp
js
adc
or
aad
arpl
mov
cmp
push
pop
not
add
cmp
lods
add
lea
mov
and
sbb
mov
(bad)
je
jmp
jbe
shl
mov
loope
dec
adc
test
push
jo
addr16
xchg
sbb
mov
mov
pop
push
xchg
mov
arpl
cli
mov
in
(bad)
fstp
push
into
push
mov
or
stos
xor
inc
dec
js
sbb
push
sub
push
movs
cmps
call
aam
out
int
push
leave
(bad)
jo
ficomp
ficom
mov
add
fs
mov
mov
jmp
aaa
cld
cmp
lods
adc
icebp
mov
and
sub
inc
int
xor
pop
hlt
rol
in
inc
dec
mov
cli
push
xor
sbb
pop
aaa
or
jmp
sbb
cmp
rcr
adc
pop
xor
inc
or
dec
sub
aam
lods
pop
ins
dec
cld
loop
into
dec
xchg
sub
div
dec
pushf
fcmovbe
push
dec
sub
cs
and
leave
ror
retf
fadd
or
fiadd
jmp
inc
lods
sub
nop
jecxz
xor
push
push
mov
imul
(bad)
std
mov
xor
in
push
jl
cmp
inc
pop
in
mov
ret
mov
and
cmp
xchg
cmp
xor
enter
retf
in
enter
xchg
shl
sbb
lods
jne
fnsave
(bad)
out
adc
rcr
movs
test
fdiv
inc
outs
adc
fmul
stos
xor
mov
retf
imul
fadd
pop
lahf
push
mov
mov
movs
cmp
push
rcr
fwait
and
push
push
clc
cmp
stos
jg
out
sti
pop
sub
inc
jecxz
stos
mov
and
mov
jmp
ret
xor
out
inc
dec
mov
js
pop
ret
pop
cmps
addr16
mov
inc
cld
cs
aad
inc
rol
arpl
stos
lds
repnz
xlat
test
imul
inc
sbb
adc
lods
dec
jecxz
sbb
mov
mov
leave
mov
outs
inc
pusha
sahf
pop
dec
(bad)
jmp
cmps
dec
sbb
adc
ss
mov
inc
das
inc
scas
or
test
mov
dec
shl
inc
mov
jb
je
mov
or
outs
xor
inc
mov
push
mov
push
fs
jns
push
add
sub
and
fnstsw
repnz
aad
in
mov
lahf
push
hlt
jl
gs
inc
lahf
push
mov
jbe
lsl
mov
and
popf
and
les
dec
aaa
inc
lods
(bad)
cmp
cld
dec
arpl
pop
mov
jne
inc
jmp
jge
jo
in
cmp
(bad)
xor
or
repz
rcr
ja
out
jae
pop
sub
sub
mov
enter
mov
(bad)
xchg
pmuludq
rcl
push
sbb
pop
jb
stos
fidivr
push
cmp
mov
iret
xor
mov
dec
cmp
data16
mov
cwde
mov
add
lds
mov
add
xchg
cwde
jns
push
stos
pop
jb
cmp
jno
arpl
scas
aaa
dec
dec
(bad)
sbb
mov
repz
cmp
or
push
or
jne
mov
jl
or
gs
xchg
and
mov
mov
xchg
sbb
and
cmp
push
mov
sbb
lods
outs
jecxz
hlt
repnz
clc
cmp
add
das
mov
mov
jmp
(bad)
push
xchg
and
daa
sbb
dec
adc
mulps
mov
test
cmps
pusha
out
rol
push
call
xor
push
add
mov
mov
push
movs
and
popf
xchg
mov
push
scas
je
(bad)
retf
das
sub
in
jb
ret
dec
loopne
mov
jnp
jo
fcmovnbe
retf
jl
jnp
(bad)
in
mov
call
cld
lods
mov
stos
and
leave
pop
push
inc
mov
xor
push
stos
jmp
not
jbe
imul
or
xlat
inc
mov
aad
add
sub
xchg
lahf
ret
dec
mov
sbb
in
std
(bad)
rcr
out
adc
sti
add
jle
xor
stos
stos
fcmovnu
dec
scas
push
mov
jmp
dec
(bad)
test
stos
xor
mov
stos
jmp
test
jecxz
scas
jge
test
fistp
stos
shl
(bad)
pop
fnstcw
xor
sub
out
add
jno
scas
mov
sub
stos
adc
dec
or
dec
je
cld
sbb
fnsave
dec
ja
push
pop
gs
add
rol
in
mov
cmp
pop
xor
ins
fisubr
in
into
dec
gs
inc
mov
jno
dec
add
push
sub
xchg
inc
pop
push
sub
pop
out
and
jb
fs
es
jge
int
push
and
jp
lods
xor
fsub
sub
adc
pop
adc
and
push
jnp
movs
dec
mov
(bad)
dec
stos
sub
inc
sti
test
cmc
and
in
cmp
lds
xchg
stos
cmps
pop
sbb
ds
clc
mov
(bad)
imul
mov
sar
fistp
ins
test
mov
mov
popf
pop
aad
mov
outs
out
mov
adc
scas
icebp
mov
xchg
in
mov
and
mov
mov
popa
das
jae
push
jno
dec
js
je
mov
jns
jmp
imul
push
cs
xor
shl
xor
shl
clc
mov
jae
(bad)
cmp
mov
ins
cld
cmp
adc
add
xor
jp
call
sub
ret
mov
add
sbb
ret
stos
test
scas
sub
lods
mov
lods
cmp
cmc
jmp
leave
ins
cmps
xor
xor
imul
jmp
int3
push
lock
repnz
sub
sub
das
jle
ret
(bad)
mov
test
repnz
popa
mov
cmp
add
jo
mov
jl
sub
aaa
inc
cdq
je
retf
and
cmp
sbb
sub
mov
fld
stc
mov
mov
mov
ficomp
outs
xchg
xor
push
mov
cmp
cmp
div
fwait
ins
mov
mov
jp
cli
jmp
es
xor
jae
cmp
outs
fld
imul
or
cmps
or
jo
mov
jnp
inc
rol
mov
xor
sub
mov
std
sub
mov
das
xor
das
xor
pmuludq
lods
das
mov
jl
inc
pop
xor
das
jae
in
ins
cli
enter
sbb
jns
cld
out
test
jg
push
jae
mov
sbb
aas
sbb
inc
mov
outs
inc
je
test
loope
mov
das
lock
fisub
jo
enter
lds
sub
mov
mov
loop
jno
js
mov
jae
xchg
push
mov
jg
bound
out
mov
jae
jae
lock
adc
mov
xor
lea
(bad)
fbld
scas
sbb
and
cli
cli
mul
inc
jne
in
cmc
imul
mov
bnd
repnz
shr
xchg
adc
inc
cmps
add
and
xor
add
and
adc
mov
aas
inc
stc
mov
mov
icebp
cmp
xor
adc
sbb
ficomp
xchg
(bad)
aas
jae
cmp
push
jae
xor
jbe
call
push
xlat
xchg
movs
ins
sub
and
inc
sub
mov
arpl
xchg
and
test
pop
not
addr16
lea
or
xchg
or
pop
int
mov
jnp
jne
adc
pushf
rcl
rol
enter
gs
xchg
jmp
push
adc
test
xchg
pop
call
retf
jbe
in
lds
dec
scas
adc
(bad)
loop
pop
movs
out
ret
mov
mov
sbb
jecxz
push
call
cdq
clc
test
ss
sbb
cmp
sbb
cmp
into
in
scas
outs
dec
xor
rol
imul
shr
clc
rcl
mov
jnp
mov
outs
mov
cli
(bad)
cli
cmp
out
mov
ret
add
inc
jp
icebp
ret
xchg
inc
jmp
ins
jo
rcl
out
adc
jmp
mov
scas
gs
xor
outs
inc
jp
icebp
ret
sub
cmp
mov
xor
inc
sub
movs
fiadd
mov
adc
aaa
arpl
ret
inc
mov
call
lds
das
stos
jb
jnp
hlt
ret
sub
pop
mov
aas
cmc
or
cmp
out
out
out
not
test
sub
and
scas
arpl
ret
cmp
pop
call
inc
xor
ret
mov
push
sbb
push
jbe
arpl
sbb
pop
or
scas
arpl
inc
sub
sti
mov
stos
sub
mov
cmc
mov
(bad)
adc
imul
ins
adc
je
arpl
or
sbb
jbe
sti
aas
jg
das
gs
xor
out
lods
adc
sahf
hlt
lds
push
loop
es
in
mov
ins
lahf
mov
les
cmc
ret
mov
repz
xor
and
sub
das
popa
adc
sti
jbe
cmc
mov
and
adc
mov
lods
fnstenv
add
idiv
mov
cmp
scas
into
or
push
mov
cmp
out
cli
jnp
outs
add
pusha
mov
sti
mul
and
xchg
ins
shl
inc
sahf
lea
mov
pop
frstpm(287
sar
mov
loope
gs
mov
push
mul
add
ds
sbb
out
nop
xchg
push
fild
stos
hlt
sbb
mov
lea
xor
retf
cmp
pop
ffree
ds
dec
inc
ss
push
mov
lock
mov
sti
mov
stos
das
push
ret
sub
sub
xchg
stos
rcr
call
lds
das
movs
adc
sub
in
add
rcr
sti
cmp
push
pusha
mov
mov
fwait
push
xlat
cwde
mov
xor
outs
mov
ret
mov
sub
jnp
xchg
jno
jmp
(bad)
mov
idiv
ss
mov
add
out
shr
gs
shl
cmp
(bad)
ret
cmc
inc
sub
idiv
or
mov
out
or
adc
jne
adc
lea
movs
or
sbb
test
call
repz
inc
sub
and
mov
(bad)
cmc
ret
cmp
xchg
(bad)
cmp
fstp
sub
jae
les
push
sub
sub
push
loop
outs
les
das
imul
das
ins
adc
mov
out
xchg
ret
out
inc
sub
in
fdiv
idiv
(bad)
(bad)
cmc
cmp
out
cmp
or
sub
arpl
ret
mov
les
pusha
jg
aas
aad
mov
and
push
add
mov
jg
and
add
and
cmps
lds
pushf
fsubr
lods
lahf
(bad)
sub
ret
mov
dec
fsub
push
gs
and
fidiv
add
pop
xor
(bad)
jmp
pop
xchg
sbb
repz
inc
fnstenv
jnp
sti
scas
mov
dec
xor
mov
pop
pop
call
cs
ins
ins
fdivr
fiadd
jp
ror
mov
test
(bad)
nop
push
hlt
mov
popf
fucom
xor
sub
xchg
inc
pop
iret
push
xrelease
or
xor
popa
mov
movs
jae
fldcw
ficomp
xchg
dec
in
sub
jge
or
xchg
push
inc
xchg
xlat
xchg
jge
out
cmp
cdq
jbe
mov
jmp
jge
xlat
dec
aad
cmp
dec
scas
call
dec
loope
adc
bound
inc
lock
and
ja
push
arpl
pop
cmp
jb
movs
adc
jbe
daa
mul
fist
aam
leave
retf
cmps
dec
scas
lahf
shl
fnstcw
cmc
jne
movs
mov
or
push
xor
push
(bad)
scas
fist
jp
inc
xor
clc
pop
arpl
mov
jle
lods
lahf
sbb
push
lock
outs
sbb
shr
mov
add
cld
out
stos
scas
outs
lds
das
stos
adc
cmp
in
fstp
adc
pop
add
push
aas
ret
xor
mov
cmp
add
shr
cli
mov
or
adc
push
xor
inc
xor
popa
mov
sub
popa
jecxz
js
fs
mov
bound
and
inc
xor
mov
add
inc
jbe
jg
xor
jbe
mov
dec
jbe
call
icebp
leave
jb
mov
sub
add
mov
sub
push
push
add
sub
pop
pop
push
mov
sub
sub
pop
push
pop
sub
pop
pop
push
pop
sub
add
mov
add
mov
sub
add
mov
pusha
push
pop
sub
push
push
add
mov
add
mov
add
sub
sub
mov
mov
add
add
ror
rol
push
push
add
mov
sub
add
call
xlat
fbld
jae
pop
inc
mov
mov
imul
aad
scas
aaa
mov
adc
test
prefetchw
or
into
cmp
clc
sbb
cmps
std
inc
(bad)
adc
xor
sub
(bad)
or
jb
push
dec
sbb
ret
pop
xchg
and
jbe
ins
in
pop
fstp
sub
or
rol
mov
inc
and
push
xor
pop
pusha
mov
add
dec
shl
leave
fcmovnu
call
pop
aad
fsubr
cwde
(bad)
fnsave
jecxz
fimul
fidivr
adc
cwde
je
test
mov
push
and
and
adc
or
mov
or
jae
jnp
imul
rol
dec
inc
jge
sbb
mov
add
and
push
push
or
lock
dec
xchg
or
sub
pop
int3
inc
xchg
outs
sbb
mov
rcr
adc
aam
inc
push
int3
push
adc
pop
test
sbb
mov
les
je
cld
add
sub
sub
mov
lea
push
push
pop
add
pop
xchg
mov
mov
add
sub
push
sub
add
push
sub
add
push
mov
add
sub
pop
mov
push
sub
add
pop
push
mov
add
pop
push
push
pop
sub
pop
sub
add
mov
sub
dec
push
add
pop
push
pop
sub
sub
add
mov
sub
sub
pop
pop
push
push
pop
mov
mov
mov
add
push
push
add
lea
push
xor
add
xchg
add
sub
mov
add
push
lea
sub
xchg
pop
push
add
pop
mov
sub
push
sub
sub
mov
add
sub
mov
add
xor
jmp
mov
add
push
push
add
sub
add
mov
sub
add
mov
mov
sub
add
add
mov
push
push
pop
sub
pop
push
mov
add
add
pop
mov
sub
add
sub
sub
mov
mov
add
sub
mov
mov
add
mov
mov
add
push
mov
add
add
pop
sub
push
push
pop
sub
pop
mov
push
pop
sub
push
pop
sub
add
sub
mov
add
push
mov
or
sub
add
inc
sub
mov
add
push
inc
pop
add
sub
sub
mov
inc
dec
push
mov
xor
add
push
mov
sub
sub
pop
push
xor
pop
sub
sub
mov
add
push
sub
add
push
lea
add
xchg
pop
mov
sub
push
push
add
mov
push
mov
pop
push
push
pop
sub
pop
push
mov
mov
add
sub
pop
pop
push
pop
sub
lea
push
mov
add
xor
pop
xchg
push
add
pop
add
nop
push
push
mov
pop
mov
push
push
pop
push
push
pop
add
mov
push
pop
push
sub
pop
pop
mov
sub
mov
add
sub
add
mov
sub
add
mov
mov
add
sub
add
mov
sub
mov
mov
add
add
push
mov
push
push
add
add
sub
mov
add
add
mov
add
sub
sub
mov
lea
push
lea
sub
xchg
pop
xchg
mov
add
push
add
add
mov
sub
push
push
add
mov
sub
add
mov
sub
add
sub
sub
sub
push
add
pop
mov
sub
push
push
pop
inc
push
pop
pop
sub
add
dec
ror
rol
xor
mov
mov
add
push
mov
push
pop
sub
add
mov
sub
mov
add
push
sub
add
push
push
add
pop
add
sub
sub
mov
add
mov
mov
add
add
sub
mov
add
pusha
nop
mov
popa
push
nop
nop
mov
push
lsl
pop
sub
pushf
popf
test
push
push
pop
pop
pop
nop
nop
jne
jmp
call
add
les
sbb
push
mov
sub
pop
pop
push
add
add
push
mov
pop
push
add
pop
sub
add
mov
sub
sub
add
sub
mov
add
sub
sub
mov
push
push
add
push
add
pop
push
add
add
push
mov
mov
pop
mov
mov
add
add
sub
sub
mov
push
pop
sub
mov
push
xor
dec
pop
dec
mov
pop
sub
mov
add
push
push
add
pop
mov
push
push
pop
sub
pop
mov
add
sub
mov
push
push
add
ror
pop
push
push
add
rol
pop
push
push
xor
pop
push
push
jmp
mov
add
sub
pop
add
sub
mov
push
mov
add
push
pop
push
lea
sub
xchg
pop
push
xor
add
sub
pop
pop
jmp
push
lsl
pop
mov
mov
add
mov
push
push
pop
add
sub
mov
add
push
push
add
push
mov
add
mov
push
push
add
mov
push
push
add
mov
add
sub
jmp
mov
add
add
mov
push
push
mov
pop
push
push
add
sub
pop
pop
add
add
add
push
mov
pop
mov
mov
add
push
push
add
mov
mov
mov
add
sub
mov
add
push
pop
sub
add
sub
sub
mov
add
mov
sub
add
mov
sub
mov
add
sub
push
add
add
mov
push
pop
sub
mov
mov
sub
pop
pop
add
sub
sub
mov
push
mov
mov
add
add
sub
mov
add
sub
jmp
mov
add
sub
pop
pop
jmp
mov
add
push
push
add
mov
sub
add
sub
mov
add
sub
sub
mov
push
jmp
mov
add
add
add
mov
mov
sub
jmp
call
xor
loope
outs
mov
ins
pop
pop
lsl
cs
sar
dec
loopne
mov
addr16
icebp
or
add
outs
dec
and
inc
jg
xor
cld
sahf
hlt
rcr
xor
xchg
lea
jns
push
add
push
fwait
push
mov
iret
rcr
mov
jecxz
pop
pop
scas
xchg
adc
(bad)
fnsave
cwde
pop
call
pop
jmp
jae
jmp
jne
push
xor
fdiv
xchg
shl
gs
out
lods
add
and
out
int3
xor
nop
mov
popa
add
mov
push
sub
add
mov
add
sub
mov
popa
sub
add
mov
sub
lea
push
sub
add
xchg
push
add
pop
sub
add
mov
sub
push
push
mov
mov
pop
pop
push
push
pop
add
pop
push
push
add
add
sub
pop
pop
mov
sub
push
push
add
mov
sub
add
mov
sub
add
sub
add
sub
mov
mov
add
sub
push
push
sub
pop
sub
add
mov
sub
sub
mov
add
push
sub
add
sub
mov
pop
jmp
mov
add
sub
add
mov
sub
add
sub
pop
pop
mov
sub
push
push
pop
sub
pop
push
add
pop
mov
sub
push
push
mov
pop
sub
mov
add
sub
jmp
mov
add
push
push
add
mov
jmp
mov
add
sub
push
mov
push
push
add
pop
push
mov
add
add
push
add
pop
push
push
add
push
add
pop
sub
push
pop
sub
push
add
add
pop
add
mov
add
sub
add
sub
mov
jmp
mov
add
push
push
pop
sub
pop
push
mov
sub
add
pop
mov
sub
sub
add
sub
mov
push
pop
sub
add
sub
mov
sub
add
add
sub
mov
call
push
push
add
push
push
mov
mov
pop
pop
push
push
pop
sub
pop
sub
sub
mov
add
push
mov
push
mov
pop
push
sub
add
sub
add
sub
mov
push
mov
add
sub
pop
push
sub
add
push
mov
sub
sub
pop
sub
add
mov
sub
push
push
pop
push
mov
add
push
add
pop
add
sub
mov
add
sbb
out
fwait
cmps
test
ja
pop
(bad)
cmp
mov
cmp
sbb
add
cmp
push
pop
sub
call
sub
nop
inc
mov
jbe
jl
inc
inc
inc
xor
ja
jmp
mov
mov
or
adc
jmp
movs
or
jge
jne
cmp
rol
add
jl
cld
push
push
mov
pop
mov
mov
mov
add
push
sub
add
sub
add
mov
sub
push
mov
sub
add
push
push
xor
add
mov
mov
add
push
add
add
mov
push
push
pop
sub
pop
push
push
pop
add
pop
mov
sub
inc
dec
not
push
mov
add
push
push
xor
pop
push
mov
pop
push
mov
sub
sub
pop
add
add
mov
push
sbb
not
pop
not
push
mov
not
xchg
pop
push
push
add
add
jmp
mov
add
mov
push
push
add
mov
mov
mov
add
sub
push
push
pop
sub
add
add
sub
mov
add
mov
add
mov
push
mov
add
sub
pop
push
push
pop
add
mov
pop
mov
sub
sub
add
mov
sub
push
push
add
push
push
mov
mov
pop
pop
mov
push
add
pop
push
add
pop
sub
add
mov
sub
not
push
mov
add
push
lea
add
xchg
pop
push
xor
add
pop
mov
add
push
push
add
mov
push
mov
sub
add
push
add
pop
not
not
add
jmp
mov
add
mov
push
add
add
mov
push
push
add
push
push
add
mov
add
mov
lea
push
mov
lea
push
xor
pop
xchg
add
mov
xchg
mov
mov
add
mov
push
push
mov
pop
push
push
xor
pop
jmp
mov
add
push
push
add
mov
push
mov
mov
pop
push
mov
add
sub
pop
push
push
pop
pop
jmp
mov
add
push
push
add
mov
push
push
mov
mov
pop
pop
push
lea
add
xchg
pop
push
sub
add
pop
add
sub
mov
add
add
mov
mov
add
sub
sub
mov
mov
push
push
pop
push
push
add
mov
add
mov
add
sub
mov
push
push
add
pop
lea
push
push
pop
sub
mov
pop
xchg
mov
mov
add
sub
mov
sub
pop
pop
sub
mov
add
mov
push
add
add
mov
push
push
pop
add
pop
sub
push
push
pop
sub
mov
pop
mov
push
mov
sub
add
mov
sub
add
sub
mov
add
sub
mov
add
push
mov
push
mov
add
add
jmp
mov
add
push
push
add
mov
mov
mov
add
mov
add
mov
push
push
add
mov
sub
add
mov
sub
add
mov
lea
add
sub
sub
mov
not
push
mov
add
push
push
pop
sub
mov
pop
add
jmp
mov
add
xchg
jmp
mov
add
mov
sub
add
mov
sub
push
mov
add
mov
sub
add
mov
sub
push
push
pop
add
mov
mov
add
add
sub
sub
mov
sub
add
mov
sub
push
add
pop
push
mov
add
xor
pop
push
mov
add
mov
add
sub
add
mov
sub
add
sub
sub
mov
add
mov
mov
mov
add
add
sub
mov
mov
push
push
add
mov
push
mov
add
mov
add
mov
mov
add
mov
add
sub
sub
mov
push
push
xor
pop
add
lea
add
sub
sub
mov
add
add
sub
mov
xchg
add
sub
mov
mov
push
mov
add
add
pop
sub
push
push
pop
sub
pop
mov
push
push
pop
push
push
add
mov
inc
dec
push
mov
xor
add
mov
add
sub
mov
jmp
mov
add
push
push
pop
push
push
pop
add
mov
push
mov
sub
add
pop
push
pop
sub
mov
add
push
pop
sub
push
push
sub
pop
add
add
jmp
mov
add
mov
push
push
xor
pop
push
pop
sub
add
mov
push
mov
mov
add
add
jmp
mov
add
mov
push
sub
add
push
push
xor
pop
sub
sub
mov
add
sub
add
mov
sub
push
push
mov
mov
pop
pop
push
mov
sub
add
pop
ror
rol
sub
mov
add
add
sub
sub
mov
add
sub
sub
mov
sub
pop
pop
push
push
add
mov
push
mov
add
mov
mov
add
push
push
pop
add
mov
pop
push
mov
add
add
pop
push
lea
add
xchg
pop
push
pop
sub
mov
sub
mov
add
sub
mov
add
push
mov
mov
mov
mov
add
mov
push
sub
add
push
add
pop
mov
sub
add
sub
sub
mov
mov
add
mov
push
pop
sub
push
push
add
mov
mov
mov
add
push
sub
add
push
mov
add
add
sub
mov
push
mov
push
push
add
add
add
jmp
mov
add
jp
jnp
jmp
xchg
pop
add
push
push
sub
sub
pop
pop
mov
jp
jnp
jmp
hlt
mov
add
add
mov
jmp
add
add
div
inc
add
add
adc
add
add
add
add
add
add
add
pop
and
add
and
add
and
add
and
add
add
outs
imul
ins
ins
add
popa
jb
gs
add
add
add
add
add
sub
iret
push
inc
popf
push
shl
mul
rcl
push
pop
pushf
retf
pop
sub
arpl
loopne
outs
je
and
test
sti
ins
sub
sbb
xchg
push
push
cmp
aad
aad
in
neg
add
lods
or
(bad)
adc
mov
dec
pushf
jg
das
dec
push
loope
cmp
jnp
pop
dec
fwait
mov
jp
div
and
inc
icebp
dec
fs
ins
xchg
stc
mov
sahf
inc
mov
jns
sub
xor
pop
retf
mov
mov
mov
data16
stos
mov
scas
xchg
xor
cmp
pop
mov
pop
in
retf
or
push
ss
xchg
or
outs
sbb
dec
pop
xchg
(bad)
push
(bad)
and
and
shl
pop
inc
mov
jp
ror
sbb
or
rcl
mov
pop
daa
dec
push
sbb
sub
push
pop
mov
lea
xor
cmps
xchg
popf
push
call
mov
lods
je
xchg
(bad)
jmp
stc
(bad)
jmp
or
cmp
mov
mov
jb
movs
in
mov
push
aaa
pop
cmp
je
(bad)
aaa
out
xor
fcmove
jne
adc
repnz
pop
add
mov
pop
cwde
jae
(bad)
sub
xchg
jecxz
push
cmp
xor
lock
mov
push
pop
inc
das
xchg
movs
jnp
clc
jnp
mul
pop
ss
shl
pop
test
jne
scas
or
pop
test
das
pop
push
inc
sbb
inc
jo
xchg
aad
call
push
lods
cmps
fstp
outs
mov
cmp
inc
push
or
mov
jno
(bad)
repz
and
push
loope
movs
pop
sbb
popf
and
add
mov
pop
mov
inc
das
xchg
dec
gs
mov
cdq
inc
xor
dec
xor
into
xchg
movs
lods
test
xlat
outs
jmp
ins
or
xor
in
ss
pop
out
push
or
adc
movs
(bad)
or
jl
je
outs
fsub
shr
rcl
pop
cmp
mov
ret
push
ins
das
sub
xchg
js
sub
mov
mul
mov
rcr
test
ret
mov
or
mov
push
iret
test
sbb
push
(bad)
and
sub
add
fwait
jnp
lods
and
in
push
add
leave
inc
mov
xchg
mov
mov
in
gs
loope
gs
add
cmp
xchg
mov
ror
ja
outs
xor
sbb
pop
xor
pop
fcom
mov
sub
pop
scas
nop
stc
push
cmc
cmp
push
(bad)
xor
pusha
dec
jne
jns
(bad)
fsubr
inc
icebp
sbb
imul
jle
ds
inc
pop
imul
jle
mov
sub
dec
loop
mov
mov
push
xor
les
js
cmps
and
je
popa
loopne
jle
sbb
pop
jae
paddsw
aas
mov
xchg
xor
pop
stc
hlt
and
and
nop
mov
ret
(bad)
fstp
clc
push
fwait
and
iret
mov
mov
pop
pushf
pop
mov
sti
test
(bad)
mov
cld
sub
out
cwde
jle
mov
push
fldz
lahf
jle
sub
mov
push
movs
movs
stos
ins
std
fwait
cli
jmp
sbb
repz
stc
ficomp
int3
sub
in
imul
mov
dec
leave
add
fs
stos
fs
cmc
push
sbb
jno
(bad)
mov
(bad)
dec
pop
xor
test
(bad)
test
(bad)
mov
xchg
test
(bad)
sbb
xor
retf
fcom
cmp
cmp
cdq
and
add
addr16
dec
pop
gs
ret
mov
pop
sub
jg
push
sbb
cmp
test
push
aas
sbb
scas
(bad)
leave
push
add
xor
ja
mov
js
aas
pop
(bad)
jne
movs
les
iret
popf
cwde
push
mov
mov
jno
imul
push
mov
lds
inc
pop
mov
xor
inc
dec
xchg
add
add
xchg
leave
scas
push
pop
idiv
popa
addr16
or
mov
retf
call
xchg
lock
aad
daa
leave
in
mov
test
jb
push
add
fs
shr
xchg
jp
or
cmp
or
mov
aad
xchg
in
jecxz
add
mov
out
call
ret
rol
sbb
mov
es
xor
inc
mov
jmp
stc
sub
sbb
(bad)
out
scas
mov
xchg
into
push
stos
mov
stos
jb
add
shr
bound
aaa
lea
jns
leave
stc
mov
inc
xchg
push
outs
nop
movs
add
imul
out
xchg
push
adc
movsx
ret
and
mov
mov
jl
add
stos
inc
sbb
mov
jns
in
jno
ins
test
mov
imul
jmp
push
loope
xlat
fwait
pusha
push
out
div
push
gs
(bad)
and
dec
(bad)
in
and
jmp
das
sar
call
sub
push
dec
adc
xor
mov
(bad)
push
sub
pop
fld
jae
fistp
ins
push
or
pop
jmp
pop
xchg
ret
das
dec
movs
pop
popa
rcr
sub
loopne
(bad)
not
dec
js
daa
add
mov
loope
push
mov
pop
fdiv
and
aad
or
xchg
cmps
fldenv
fcmovu
shl
inc
pusha
(bad)
pop
aad
cmp
nop
xchg
mov
popa
inc
test
mov
ret
stos
xchg
jnp
scas
enter
out
push
repz
(bad)
jne
ds
test
aaa
push
mov
push
ds
jno
adc
sbb
out
aad
repnz
popf
cs
pop
xlat
out
cmps
pop
cs
add
mov
mov
xchg
mov
lahf
adc
pop
leave
mov
mov
movs
fs
or
fwait
lds
pop
fwait
xchg
jmp
outs
add
aaa
or
enter
shl
ds
ds
loope
xchg
mov
cmp
cld
gs
adc
mov
fst
inc
sti
and
mov
cmp
addr16
dec
cmp
push
dec
or
test
add
push
mov
and
movs
mov
mov
test
pop
outs
(bad)
shl
xor
push
push
xchg
push
jnp
dec
cmps
jl
aaa
iret
das
cld
and
(bad)
fs
rcr
sub
mov
jle
add
xchg
add
xor
inc
pusha
cmp
test
push
mov
int
jecxz
inc
push
adc
cdq
xchg
aas
push
ficom
mov
cli
arpl
dec
imul
xchg
mov
inc
shr
leave
cwde
cmp
mov
jp
and
rcr
sahf
pop
leave
ins
cmp
test
and
pushf
dec
lahf
test
test
icebp
iret
push
int
push
cmc
xchg
(bad)
data16
add
push
clc
inc
out
enter
fwait
(bad)
outs
pop
cdq
leave
ret
popa
dec
cli
or
dec
push
cmp
jns
rcl
cmp
mov
xor
adc
mov
jmp
cld
lahf
sbb
in
jns
movs
fild
push
jnp
repnz
ror
in
loope
and
repnz
es
dec
adc
add
iret
outs
add
push
out
or
inc
push
or
(bad)
dec
cmp
jle
ret
out
lea
addr16
mov
addr16
aaa
shl
imul
out
jg
shr
lahf
aam
push
movs
addr16
repnz
in
rcl
cs
mov
fdiv
inc
sbb
mov
lds
jbe
fwait
sub
xlat
lahf
out
sub
push
std
mov
mov
ins
xchg
inc
lds
cmp
and
cmp
cld
rcr
into
lock
dec
push
(bad)
sbb
mov
(bad)
or
push
or
cmp
add
test
mov
adc
popf
fcomp
out
jno
icebp
data16
push
jbe
ins
push
in
loop
pop
sbb
cmps
into
jne
xchg
lea
mov
inc
pop
push
jmp
or
pusha
nop
inc
lods
movs
or
xchg
lahf
cmp
inc
push
das
rcr
mov
scas
into
popf
hlt
inc
or
cli
jg
out
or
inc
pop
jne
ins
push
xor
pushf
in
bswap
ins
out
push
mov
fisubr
div
shl
inc
dec
xchg
in
xchg
sahf
adc
push
mov
jno
cmp
(bad)
(bad)
bound
pop
mov
xchg
lahf
jp
ret
add
mov
aam
outs
sbb
or
jge
and
fnsave
mov
adc
mov
sub
popf
push
and
sub
dec
xor
iret
add
out
cmp
test
movs
fist
dec
push
call
jno
push
sub
xor
fstp
in
jge
jmp
fwait
(bad)
data16
popf
jecxz
jmp
sbb
test
jbe
rol
fild
sbb
add
sbb
jo
inc
adc
sub
xchg
rol
adc
in
cmp
imul
cs
sbb
in
dec
mov
call
or
fstp
xchg
scas
mov
adc
dec
cmp
fidiv
sub
(bad)
push
pop
imul
popf
mov
and
pop
fcomp
ins
lods
pop
xor
jb
lds
or
mov
ja
cmps
push
fwait
push
xchg
xor
mov
push
ret
add
movs
ss
jge
dec
lock
fmul
jp
jmp
aaa
test
xor
adc
jns
and
cmp
mov
dec
lock
outs
xor
cwde
xchg
mov
in
imul
mov
mov
shl
jns
addr16
aad
adc
test
ss
call
div
jmp
pop
inc
push
hlt
mov
inc
pop
pop
xor
or
sbb
sbb
mov
inc
mov
ja
cmps
jnp
call
add
loop
jne
pop
iret
(bad)
pop
adc
test
ficom
mov
rol
jg
int
mov
add
shr
pusha
movs
addr16
push
and
sub
imul
sbb
push
in
retf
or
mov
out
test
sub
fidivr
xor
movs
cmp
sub
(bad)
sub
sbb
sbb
mov
push
mov
mov
call
xlat
hlt
cmp
mov
(bad)
cmp
jns
xor
call
adc
xchg
push
stos
repz
xchg
mov
loope
push
imul
push
lock
movs
fs
out
adc
cwde
scas
dec
lods
xlat
dec
sub
mov
js
(bad)
(bad)
push
mov
jmp
inc
adc
pop
leave
mov
fld
mov
repz
rsqrtps
sub
imul
pusha
pop
out
loope
jne
fnstenv
push
jge
aaa
js
or
cmps
enter
nop
inc
retf
stos
xor
jecxz
jp
outs
in
mov
ins
aaa
add
daa
jmp
(bad)
lea
fnstenv
mov
push
xchg
xchg
ss
mov
loop
or
adc
ins
add
add
aam
adc
jb
inc
push
mov
push
or
lock
lds
das
fld
cli
or
inc
xchg
sbb
ins
pop
cli
inc
es
cwde
sbb
inc
jg
jecxz
lods
repz
and
mov
in
mov
imul
std
sbb
sub
ret
push
mov
scas
push
stos
dec
pop
jnp
rcl
pop
xchg
push
outs
stc
imul
imul
js
and
mov
pushf
test
call
sub
inc
js
add
mov
mov
mov
loopne
mov
test
pop
xchg
inc
fwait
dec
xlat
mov
and
out
push
out
aaa
mov
xchg
mov
pop
mov
sbb
pop
outs
movs
cld
fisubr
or
aas
adc
push
push
loop
mov
inc
inc
xchg
xchg
xor
(bad)
or
push
xchg
adc
mov
cmc
fcomip
and
jnp
es
scas
mov
out
cdq
outs
mov
inc
clc
push
mov
popa
xor
push
dec
mov
lea
pop
call
add
rcr
xchg
adc
or
mov
daa
jge
imul
mov
push
ss
inc
jecxz
jg
jns
movs
push
push
mov
ds
pop
xchg
dec
pop
fisttp
mov
out
dec
xchg
test
out
add
xor
jecxz
mov
mov
mov
inc
ds
sbb
jne
adc
icebp
inc
out
add
mov
ins
xchg
push
mov
sub
sub
pop
xor
repz
add
push
sub
cdq
std
cwde
int
in
in
outs
add
dec
sbb
fcom
inc
jp
sub
test
xchg
(bad)
pop
sub
loope
iret
aaa
call
fcom
add
loop
pop
imul
call
imul
cmps
or
jns
sub
push
pop
jae
outs
dec
pushf
mov
add
stos
jnp
mov
or
fld
mov
je
jmp
inc
lea
loop
ins
dec
sub
daa
lods
(bad)
adc
retf
pop
test
xchg
jnp
or
jl
sbb
lock
pop
in
setb
out
xor
daa
nop
and
hlt
sub
cdq
cmp
add
jl
daa
push
add
cmp
(bad)
fnstcw
out
jbe
enter
cmp
dec
aad
dec
stc
(bad)
lods
jl
mov
adc
mov
scas
or
sbb
pop
arpl
sahf
imul
outs
mov
mov
call
test
or
jno
mov
jae
push
(bad)
fdiv
test
test
in
icebp
hlt
pop
cmps
ja
fsub
lea
call
ret
in
lods
cmp
je
inc
lock
jb
xchg
pop
adc
or
mov
cmps
outs
sbb
add
xchg
pop
sar
cmp
pop
aaa
push
cmp
mov
fcomp
mov
call
jmp
mov
cmps
daa
adc
loopne
mul
rcr
frstor
ins
and
(bad)
loop
ja
inc
dec
xor
jp
dec
or
mov
out
into
jbe
(bad)
je
test
leave
test
scas
rcr
repnz
pop
test
test
cli
xor
xchg
data16
sbb
pop
jbe
mov
cmps
and
and
inc
push
sbb
mov
pop
ret
loopne
test
and
cmps
ss
ds
rcl
aad
and
fcompp
add
mov
push
(bad)
(bad)
cmc
aad
into
dec
add
and
mov
repnz
and
adc
lods
fs
in
inc
daa
jno
xchg
push
bound
mov
cwde
pop
dec
in
xor
xchg
mov
fsub
movhps
jne
ss
movs
aas
or
pushf
add
mov
push
fistp
shl
imul
(bad)
int3
mov
inc
mov
dec
bound
adc
xchg
iret
movs
jae
pop
push
sub
xor
inc
sbb
push
loope
call
jnp
in
mov
enter
inc
push
cmp
cmp
xor
mov
mov
mov
test
mov
mov
sbb
add
fstp
aam
add
(bad)
sti
ret
lock
mov
aaa
pop
push
mov
out
xchg
push
mov
inc
pushf
sub
test
or
mov
pop
xchg
sub
push
mov
dec
xor
lods
xchg
test
mov
lock
lahf
shl
adc
mov
sub
lods
pop
cld
or
shr
adc
sbb
stos
adc
enter
es
mov
shr
or
push
mov
sub
stos
and
jnp
sub
cdq
nop
or
cmps
fwait
jecxz
pop
xor
inc
xor
sbb
pop
fs
stos
sub
ret
(bad)
mov
or
jg
dec
sbb
sti
fwait
push
mov
(bad)
cli
adc
mov
cmp
push
ins
outs
cmps
sbb
sub
pop
(bad)
dec
sahf
pop
test
inc
sbb
lock
imul
ds
dec
fwait
out
sbb
lock
imul
pop
int3
sar
pop
mov
xchg
jl
add
int
scas
lods
outs
aaa
xchg
adc
ds
push
or
(bad)
clc
xlat
push
dec
lock
mov
inc
add
fdivr
out
xor
mov
pop
pusha
clc
sbb
and
xchg
out
mov
jg
in
mov
mov
sahf
adc
xchg
cmps
and
out
in
cwde
adc
icebp
mov
les
push
inc
adc
pushf
ins
aas
adc
push
sar
ins
push
xor
aaa
mov
jecxz
rcr
add
ins
or
clc
shr
xchg
sahf
push
movaps
push
inc
jmp
push
mov
sub
xor
push
mov
movs
dec
pushf
mov
fldcw
cmp
in
jb
mov
mov
xchg
int
addr16
out
addr16
inc
lds
mov
sub
push
cli
xor
jg
adc
retf
cmp
(bad)
mov
inc
(bad)
push
aam
test
add
mov
mov
xchg
mov
push
mov
cmp
js
hlt
enter
call
stc
cmp
mov
jl
pop
or
or
jno
out
mov
int3
inc
loope
push
ror
leave
or
jne
mov
es
ins
in
daa
cdq
sar
xchg
and
sub
not
(bad)
mov
cli
ja
lds
ins
retf
push
ret
mov
jle
push
(bad)
in
add
retf
cmp
or
inc
fcom
cmp
add
jp
fs
sahf
stos
shl
aad
and
and
jne
mov
mov
imul
xchg
xor
nop
pop
popa
sub
leave
ret
cmp
jno
adc
cli
call
stos
jnp
gs
pusha
sbb
mov
mov
dec
xchg
mov
das
(bad)
jmp
add
mov
stos
or
jmp
js
dec
mov
inc
fcmove
jmp
or
push
in
fimul
(bad)
fisub
mov
mov
push
dec
sub
arpl
mov
addr16
test
mov
sub
in
int3
mov
aad
sbb
out
adc
js
adc
xchg
xor
rcl
inc
mov
mov
movs
add
xchg
pop
pusha
fld
jns
adc
mov
adc
push
popa
cmp
push
mov
(bad)
or
cs
(bad)
outs
push
sti
push
lods
jb
repz
and
push
or
in
fs
dec
(bad)
outs
mov
arpl
in
call
gs
jmp
in
mov
test
pop
push
pop
cwde
iret
sbb
mov
xchg
mov
xchg
jae
push
add
pusha
fisttp
xchg
mov
xorps
test
popa
adc
in
aaa
dec
push
inc
jmp
int3
(bad)
lea
imul
push
dec
imul
mov
xchg
mov
mov
xor
stc
or
or
outs
shl
and
jmp
cmps
mov
rcl
ins
and
into
ret
cli
mov
ficomp
retf
inc
dec
popa
int3
jecxz
mov
and
mov
loopne
fsubr
xor
das
out
jns
cmp
mov
iret
mov
out
(bad)
bound
jae
test
ret
imul
out
(bad)
xor
and
xor
dec
lods
test
push
cwde
lods
std
repz
and
stos
and
pop
sahf
and
mov
lds
xchg
sub
push
sbb
mov
xor
push
xor
rol
mov
je
test
xchg
cmp
lods
pop
out
outs
sbb
dec
test
jno
imul
stos
xchg
aad
xlat
std
or
inc
shl
dec
push
cmp
daa
jne
ss
(bad)
aas
cmps
stos
mov
jb
mov
pop
sub
mov
imul
mov
and
test
lock
jle
imul
aaa
fstp
mov
mov
fwait
int
or
or
push
(bad)
imul
lock
adc
sub
mov
sbb
ror
in
lock
add
sbb
inc
popa
aad
dec
sub
iret
in
inc
fcmovnbe
fucomi
dec
les
outs
jns
jmp
adc
and
pop
adc
add
dec
movs
repnz
xchg
(bad)
popa
adc
xchg
outs
dec
icebp
(bad)
scas
dec
lods
stos
ret
add
aam
jb
sub
rcr
or
and
rol
lock
mov
stos
mov
sbb
pop
and
adc
mov
in
repz
lods
fucom
outs
aad
stos
sahf
data16
jmp
out
(bad)
call
dec
mov
xchg
sti
cmp
xchg
repz
in
jbe
or
pop
pushf
xchg
mov
jge
add
outs
or
shl
inc
rcr
inc
cdq
aad
ins
lock
dec
sub
adc
outs
add
sti
inc
push
addr16
cli
xor
mov
jne
ds
mov
mov
and
or
pop
push
jae
pop
fnstsw
jecxz
scas
(bad)
mov
fwait
mov
stc
(bad)
out
sbb
outs
jmp
inc
lods
add
mov
aam
dec
sub
fistp
arpl
sbb
pop
add
dec
mov
lods
sbb
inc
sub
scas
iret
cwde
into
pusha
stc
mov
int3
add
jnp
mov
xor
dec
out
pushf
mov
push
outs
cmp
(bad)
mov
push
and
sub
push
pop
cmp
mov
js
push
mov
outs
mov
jbe
ins
pop
push
sub
push
jecxz
xchg
inc
test
lock
push
cmp
jl
out
pusha
mov
inc
stos
mov
xchg
clc
cmps
mov
add
ins
sub
retf
inc
jle
test
dec
lea
sbb
mul
pop
mov
add
pop
rcr
xchg
inc
mov
mov
retf
(bad)
scas
outs
dec
(bad)
imul
dec
jnp
jp
jo
cmps
scas
sbb
or
mov
push
mov
mul
lods
bnd
adc
ins
mov
add
in
out
pop
fwait
mov
call
jg
in
js
stc
xor
clc
mov
mov
fadd
sahf
movs
cmp
xchg
fcomp
push
ret
fnstcw
cmp
sbb
push
ror
or
cld
dec
fcmovu
fdivrp
rcr
mov
rcl
in
sbb
push
movs
fbld
dec
add
pop
movs
in
mov
mov
or
and
mov
mov
sbb
mov
(bad)
and
xor
or
adc
pop
frstor
lock
test
xchg
imul
test
(bad)
mov
sub
int3
or
sub
loop
mov
jg
cmp
xchg
ret
sar
das
cdq
pop
and
sar
aaa
lds
lds
arpl
mov
aad
sub
dec
xchg
in
sbb
add
push
jmp
cdq
jbe
mov
mov
push
and
xor
mov
mov
jmp
neg
adc
test
mov
xchg
test
adc
scas
call
or
mov
and
pop
rcl
sub
mov
cli
push
in
loope
inc
clc
pusha
mov
pop
scas
aas
xlat
push
inc
and
jle
das
test
(bad)
xchg
or
sbb
cmps
xor
sti
sub
call
movs
sub
dec
adc
push
out
cmp
inc
leave
sub
push
loopne
adc
stc
out
ret
sbb
cdq
add
lds
arpl
mov
cmp
lahf
sbb
imul
sbb
shr
xchg
dec
sub
call
fmul
and
mov
cmp
sub
je
or
mov
xchg
popf
retf
pop
jno
dec
mov
push
shl
mov
div
lock
jg
sub
sbb
sbb
jmp
shl
daa
xadd
ins
pusha
mov
icebp
sub
int3
repz
imul
popa
outs
and
dec
cmp
dec
rcl
popf
rcl
or
xor
push
movs
jbe
add
enter
fcom
push
cmp
push
xchg
xchg
add
mov
xchg
xchg
rcl
mov
sub
pop
das
xchg
dec
mov
clc
imul
mov
jbe
es
push
aaa
not
mov
xor
jmp
or
idiv
fcmovu
inc
popa
or
mov
enter
mov
ds
popa
xor
dec
scas
sbb
pop
or
stos
outs
jmp
mov
daa
enter
jne
outs
pop
jmp
sub
xor
inc
jbe
sub
cmps
xchg
mov
stc
std
scas
test
stos
mov
xor
sbb
test
jmp
dec
je
popf
dec
rcr
jg
rol
hlt
pop
fisttp
lahf
out
inc
ja
dec
push
cmp
xor
in
stos
loop
pop
push
shl
mov
lahf
iret
push
jo
arpl
mov
mov
xchg
push
or
in
movs
inc
int3
addr16
mov
dec
jle
pop
xchg
ss
inc
inc
sub
outs
mov
mov
push
imul
fucom
mov
ds
cmp
xchg
hlt
push
test
pop
push
leave
imul
pushf
add
pop
jns
mov
fisttp
rcl
stos
xchg
xor
sub
mov
scas
mov
xor
sub
xchg
add
jg
sbb
push
jmp
xor
sub
push
pop
jno
dec
int
cmp
pop
mov
cli
and
cmp
sahf
mov
mov
cwde
mov
jmp
fs
pop
push
mov
and
arpl
mov
sbb
mov
dec
dec
cmp
jge
mov
into
mov
mov
stc
sub
jae
jg
adc
dec
push
imul
idiv
imul
mov
pop
ins
inc
pop
mov
add
or
inc
mov
push
sbb
jno
jae
add
xchg
mov
(bad)
and
not
jbe
inc
fldenv
ss
push
into
mov
mov
fidivr
shl
mov
jecxz
es
or
clc
aaa
cmp
dec
or
dec
fwait
jnp
jae
std
sub
xor
pusha
pushf
retf
fcom
retf
movs
mov
ficomp
add
mov
add
mov
pop
in
add
jmp
arpl
mov
stos
dec
jae
stc
scas
pop
ja
push
mov
xchg
add
es
fdiv
inc
aaa
cdq
mov
retf
and
and
fdivr
out
cld
lods
popf
sub
push
pop
sbb
mov
loope
xchg
xor
dec
sbb
xor
xor
xor
push
add
xchg
sbb
mov
push
jnp
lds
aam
std
mov
cmp
ins
stc
mov
outs
ins
sbb
std
fld
xor
jo
and
push
adc
pusha
aad
dec
mov
iret
je
dec
inc
ss
rcr
xchg
sub
in
sub
push
xlat
dec
pop
cld
cmps
jmp
cmp
mov
pop
stc
push
mov
mov
cmp
add
or
std
aaa
and
scas
cmp
out
lock
hlt
retf
pushf
inc
aam
pusha
cs
icebp
mov
xchg
jae
mov
int
push
sbb
cwde
push
push
loope
and
hlt
data16
adc
leave
shl
in
jae
ja
inc
push
sar
aam
lahf
or
leave
test
mov
jns
cmc
mov
pushf
outs
adc
or
fld
ins
jno
out
cmp
cmc
mov
mov
xchg
sub
popa
into
pop
xchg
(bad)
ret
mov
dec
add
add
retf
mov
inc
xchg
addr16
scas
fs
mov
aaa
mov
push
jo
and
xchg
mov
jge
pop
loop
xchg
pop
cld
mov
pop
xlat
fild
pop
xchg
lds
push
sbb
repnz
int3
mov
jge
xor
retf
jmp
dec
es
push
push
push
jecxz
popf
cdq
inc
push
shl
dec
sub
push
add
dec
adc
jecxz
push
mov
or
in
(bad)
pop
mov
call
(bad)
outs
mov
test
je
sub
adc
dec
ror
or
xchg
dec
rcr
xor
int
jne
cmp
aam
ret
dec
(bad)
rep
cli
pusha
mov
shr
test
mov
dec
dec
(bad)
cmp
jno
jmp
jg
int
sar
out
xchg
clc
call
mov
adc
pop
adc
inc
xchg
ins
push
push
mov
inc
and
(bad)
mov
push
ins
mov
popa
jns
adc
fld
cs
aas
push
pusha
fdiv
pusha
jg
es
repz
jmp
cld
push
add
push
(bad)
out
push
test
stc
add
in
push
mov
ins
aad
enter
sti
pop
adc
mov
(bad)
xor
outs
mov
(bad)
loop
push
mov
repnz
aaa
popf
rcl
aaa
and
fild
ror
xor
mov
cs
(bad)
inc
into
pop
pop
(bad)
dec
mov
push
test
push
push
add
pop
fstp
pushf
xor
mov
adc
(bad)
es
das
icebp
aas
xor
sahf
mov
jne
test
(bad)
stos
jae
cmp
stc
cs
enter
fild
in
mov
sbb
outs
mov
mov
lahf
mov
call
shl
jg
jo
inc
mov
mov
ror
mov
sub
pusha
adc
je
mov
outs
pop
inc
or
inc
adc
inc
or
cli
xchg
es
movs
pop
out
mov
arpl
jb
jl
cmps
jns
sahf
int
sub
(bad)
repz
mov
add
daa
mov
xchg
cli
xchg
fwait
pop
sbb
rcr
jno
sahf
push
pusha
xor
xor
mov
out
movs
add
xchg
into
fmul
mov
push
mov
call
xchg
test
inc
in
stos
pop
fsubr
xor
out
(bad)
jg
or
xchg
mov
fistp
lahf
xchg
jecxz
je
sbb
mov
mov
into
pop
or
js
iret
ret
cmp
sbb
out
fidiv
mov
lock
push
adc
mov
inc
cdq
mov
push
sar
ss
mov
dec
inc
ss
mov
mov
in
frstor
or
or
pop
mov
in
test
add
hlt
dec
sbb
jae
dec
int
adc
sub
xor
add
ds
adc
xchg
call
pop
add
movs
xor
xchg
or
and
psubsw
sbb
pop
retf
jmp
mov
and
mov
(bad)
std
inc
aas
lea
in
dec
(bad)
jle
mov
cwde
(bad)
iret
imul
das
cli
pop
sub
mov
mov
xchg
cmp
icebp
cmps
push
adc
push
mov
cmc
jb
shl
or
das
retf
sub
and
mov
mov
xchg
fisubr
sbb
pop
fcom
cwde
sub
push
stos
mov
pusha
push
push
lahf
and
mov
(bad)
loopne
repnz
in
jno
xchg
xor
(bad)
fisub
sub
sbb
sub
mov
jecxz
sub
(bad)
dec
imul
adc
sub
cs
jg
or
or
ficomp
inc
aaa
pop
(bad)
mov
es
cwde
shl
retf
push
push
sahf
sbb
mov
dec
shr
in
into
div
sbb
mov
xor
mov
xor
mov
mov
bound
data16
stc
movs
rcl
rcl
fistp
xchg
and
test
sub
adc
fld
cwde
mov
hlt
push
daa
addr16
or
fst
or
adc
loope
pop
ret
test
pop
xchg
push
add
stos
std
push
xchg
ret
adc
fisubr
scas
lahf
sub
sbb
mov
xchg
push
fild
xlat
jmp
dec
popf
fwait
mov
movs
aaa
jecxz
jnp
mov
adc
xor
popf
hlt
out
ins
jecxz
pop
add
dec
inc
fmulp
mov
retf
push
adc
lahf
inc
xchg
adc
xchg
pop
and
mov
mov
mov
loope
jmp
and
jnp
call
cmp
xchg
jl
jg
jge
xchg
jo
movs
dec
jo
mov
pop
cdq
jle
loope
mov
popf
cmp
xchg
push
test
shl
xor
mov
pop
rcl
pusha
(bad)
push
pop
rol
(bad)
xchg
in
cmp
dec
push
sahf
push
cmp
inc
mov
pop
jg
das
div
cs
ds
in
in
and
push
outs
cld
dec
lods
cmp
cmp
retf
fdivr
sub
push
xor
cmp
es
fisub
mov
mov
xchg
stos
mov
(bad)
cs
retf
dec
sub
inc
popa
loop
pop
add
and
xchg
push
mov
cmps
loopne
pushf
xchg
push
retf
sbb
pop
sub
fdivr
ins
(bad)
jg
xlat
(bad)
inc
repnz
sar
or
add
fwait
add
adc
xor
push
fdivr
mov
(bad)
(bad)
icebp
cmp
mov
xchg
xchg
push
sbb
mov
mov
xor
in
and
mov
inc
repnz
test
and
jns
adc
retf
mov
jmp
aam
aas
push
(bad)
xchg
js
xchg
sbb
sub
jae
imul
jmp
in
ins
jb
cmp
dec
and
add
js
and
add
leave
adc
ror
cdq
int
inc
xchg
dec
es
div
fisub
add
sbb
ja
add
sbb
jb
mov
movs
icebp
out
pusha
xchg
jne
mov
mov
test
inc
jle
xchg
or
xchg
mov
mov
cmp
rcl
call
and
pop
mov
and
jnp
sub
nop
lods
fmul
cmps
push
or
mov
leave
jl
and
mov
inc
out
pusha
dec
dec
sahf
int
jmp
sbb
pop
js
add
adc
imul
mov
or
aad
mov
sbb
sti
fwait
jle
adc
push
cli
and
jg
cld
ret
repz
fwait
inc
dec
xchg
sub
ret
int
jmp
sbb
(bad)
mov
in
js
pushf
pop
inc
push
xor
test
inc
out
push
(bad)
jg
pushf
jge
bound
add
pop
fsubr
cmp
cld
scas
mov
les
and
inc
mov
or
adc
dec
mov
jb
out
dec
mov
add
cmp
retf
aam
dec
mov
add
jg
or
or
movs
ins
xor
adc
cmp
out
push
inc
jb
jmp
addps
and
mov
mov
cmp
cmps
ds
in
jecxz
push
jl
retf
dec
and
in
sub
cmps
test
mov
inc
(bad)
push
sub
rcl
repz
jnp
sbb
and
test
mov
daa
jbe
in
nop
loop
repnz
xor
mov
repnz
stos
neg
dec
aam
xchg
sbb
out
dec
add
or
leave
pop
retf
xchg
and
jmp
xchg
mov
mov
dec
es
cld
out
xchg
add
js
add
sbb
rcl
repz
xor
pusha
leave
and
mov
ficom
std
movs
inc
popf
test
out
dec
scas
push
aas
ret
test
mov
inc
fistp
fwait
and
aas
aaa
lahf
sbb
sbb
dec
jnp
mov
pop
fst
mov
mov
xor
or
and
test
lods
outs
(bad)
out
push
sub
into
mov
adc
or
cmp
enter
sub
in
xor
mov
xor
mov
add
cmp
and
aad
sbb
dec
sahf
jg
fcom
inc
pop
mov
inc
sbb
inc
inc
pause
test
cmps
(bad)
imul
sbb
mov
daa
xchg
sub
pop
stos
sub
not
jae
mov
mov
ins
(bad)
int3
lock
sub
and
push
xchg
push
jne
push
add
test
mov
xlat
stos
dec
jl
pop
sub
inc
rep
and
sub
jb
mov
out
xor
xchg
cwde
xor
mov
add
inc
mov
push
inc
ret
aas
int
jnp
test
ret
jecxz
inc
xor
mov
xor
arpl
out
add
and
les
jmp
cwde
loop
mov
shr
iret
cmp
fild
or
test
adc
mov
sub
cmp
lods
push
popa
dec
stos
dec
lods
inc
or
lahf
das
and
lahf
ror
inc
aad
aas
stos
fisttp
mov
in
ret
jnp
push
and
dec
sbb
mov
dec
sar
fimul
neg
sti
dec
(bad)
jb
cld
in
jmp
mov
je
inc
add
fs
out
jns
xchg
pushf
cmp
imul
stc
pop
xor
and
lea
fs
add
pop
aas
and
or
push
jnp
pop
jno
cwde
jae
push
(bad)
(bad)
ficom
test
and
fwait
in
mov
ds
lahf
push
into
push
dec
mov
(bad)
dec
jmp
xchg
out
arpl
jmp
sub
dec
neg
inc
cs
test
pushf
hlt
jge
and
jmp
bound
jbe
in
jo
push
shl
scas
call
xchg
mov
int3
popf
pusha
dec
adc
mov
sub
mov
repz
mov
and
cmp
fmul
or
scas
(bad)
sbb
aad
xor
push
mov
mov
ja
xor
outs
ins
enter
cwde
retf
mov
out
push
call
inc
mov
rcr
sti
popf
inc
sahf
mov
push
mov
or
(bad)
jnp
jbe
inc
dec
push
mov
push
mov
fcmovb
jno
add
push
stos
pop
movs
pop
fs
mov
(bad)
cmps
enter
inc
pop
xchg
xchg
shl
inc
mov
test
sbb
xor
dec
cs
mov
inc
aam
and
push
or
pop
popf
icebp
pop
cmp
movs
pop
inc
or
frstor
dec
das
lahf
imul
stos
adc
test
bound
aam
and
popf
out
aad
or
std
cwde
push
aas
sub
sbb
rcr
sub
xchg
add
(bad)
sar
inc
stos
or
aaa
push
fistp
nop
aas
idiv
jg
mov
mov
sbb
xor
cs
repz
rcr
dec
xchg
dec
and
cmp
fs
or
das
jl
loopne
pushf
sbb
or
arpl
scas
icebp
adc
mov
nop
jnp
push
jp
jne
or
xlat
mov
cmps
test
ja
adc
mov
sub
fdivr
repnz
push
dec
ret
or
or
std
dec
push
cmps
xor
or
mov
add
sbb
xchg
add
push
mov
stos
push
cmps
loopne
cld
sub
into
in
dec
jmp
and
nop
push
jl
fdiv
les
cdq
mov
add
jmp
dec
add
mov
pop
and
sub
je
push
adc
in
inc
outs
inc
test
and
lahf
mov
xchg
jp
cmps
lods
fistp
scas
out
int3
xor
mov
aas
xchg
xchg
repz
mov
ins
sub
dec
mov
cmp
sbb
push
movs
jge
or
jl
mov
adc
mov
sub
jbe
push
(bad)
arpl
pop
iret
repz
cmp
cmps
(bad)
retf
stos
and
and
pop
ja
aas
pop
bound
jbe
rcl
in
enter
call
idiv
dec
fcom
xchg
shl
in
xor
jmp
mov
or
pop
xchg
mov
jle
lods
lods
cmp
cmp
call
jge
mov
or
test
pop
adc
mov
mov
jecxz
ror
add
sbb
push
pop
mov
pusha
stos
js
xchg
xchg
fwait
xor
ds
(bad)
gs
or
push
or
dec
mov
inc
xor
jg
sub
js
fimul
or
test
rol
cmps
aad
xchg
adc
dec
movs
pop
stos
adc
test
ja
sti
sbb
dec
push
pop
sub
add
outs
xchg
jmp
add
push
add
adc
fucomp
cmps
cmp
ds
je
fstp
fisttp
pop
cmc
sbb
mov
cmp
add
pop
and
adc
icebp
inc
mov
std
pop
sub
popf
ret
push
imul
scas
pusha
(bad)
sti
test
sub
mov
sar
xchg
xchg
jmp
jne
xchg
pop
repnz
div
and
aad
shl
test
enter
sub
mov
mov
sub
mov
into
lods
imul
xchg
add
and
xor
aad
push
fnstsw
mov
push
leave
dec
stc
add
mov
repnz
movs
xchg
sub
(bad)
pop
shl
sub
aaa
and
fcmovu
fmul
xor
pusha
movs
imul
mov
fidivr
adc
scas
aam
mov
lahf
fbld
mov
lods
(bad)
es
pop
or
call
dec
sub
es
rol
cdq
retf
scas
aas
out
mov
ret
push
add
scas
jb
nop
fwait
jo
(bad)
fistp
mov
xlat
dec
lahf
mov
jnp
nop
es
xor
push
(bad)
pop
add
repnz
xchg
retf
inc
mov
rcr
mov
pop
stc
ds
icebp
xor
push
push
(bad)
and
sbb
scas
add
mov
mov
retf
ss
ss
lods
mov
mov
or
es
dec
or
gs
aas
mov
sub
sar
sub
push
psubsb
stc
jp
inc
call
cs
xchg
mov
mov
dec
sub
and
push
adc
jmp
aad
clc
dec
in
icebp
sbb
mov
nop
hlt
sahf
retf
mov
mov
ret
inc
je
stc
mov
jle
add
jnp
add
lahf
mov
dec
arpl
outs
loope
xchg
js
cmp
arpl
aam
cs
jg
test
or
mov
jbe
loop
xchg
pop
mov
ins
rcl
cli
pop
add
into
mov
leave
jne
push
cdq
aas
or
add
push
pusha
jp
push
xchg
dec
(bad)
cmc
and
push
iret
and
jp
dec
xor
cmp
int
sbb
jp
mov
xor
ret
rcr
dec
not
in
stc
push
ins
shl
or
ss
jno
iret
and
cmps
in
fidivr
mov
int3
sub
cmps
jmp
aaa
push
dec
mov
inc
aam
sar
leave
gs
out
es
popa
jmp
popf
in
aam
sub
push
cli
lods
bound
hlt
pop
lahf
jmp
pop
sar
cli
je
test
xor
(bad)
sar
jno
pop
pop
inc
dec
mov
xor
adc
mov
repnz
in
fs
rcl
pop
jl
dec
and
loope
sub
out
add
dec
stc
cmc
ins
cmp
sub
cwde
mov
ret
pop
jp
adc
arpl
ins
inc
cmp
push
dec
mov
ret
out
test
js
ins
push
dec
cli
out
fstp
xor
pop
sub
mov
jl
sub
fmul
and
push
adc
cwde
mov
test
enter
nop
hlt
test
or
out
cmp
pusha
aad
mov
cmp
sbb
and
fstp
mov
adc
mov
inc
inc
mov
in
shl
fsub
mov
xchg
retf
and
sbb
cmps
push
call
adc
dec
inc
pop
sbb
pop
dec
push
pop
arpl
mov
pop
out
push
ins
shl
clc
cld
cmp
stos
bound
mov
cmps
pop
cmp
add
je
ds
push
bound
ret
sub
mov
(bad)
and
sub
test
pop
leave
aas
sub
dec
ret
dec
fs
mov
xor
stc
daa
aam
std
div
loopne
pop
mov
and
and
push
dec
movs
rcr
ja
xor
imul
cmp
and
cmps
push
and
jmp
aam
xor
add
pop
inc
scas
mov
scas
shr
into
add
outs
lods
fst
int3
dec
stos
imul
sbb
mov
sbb
mov
pushw
das
xor
mov
cmc
mov
cmp
sbb
mov
mov
popa
mov
inc
xchg
cmc
xchg
leave
ret
add
pop
jmp
sub
dec
xchg
inc
cwde
test
int
or
sub
pop
(bad)
push
out
push
push
jo
fsub
dec
push
movs
test
test
xor
lahf
clc
loope
pop
out
loope
mov
aam
pusha
jb
outs
xchg
push
push
mov
in
sub
lea
mov
pop
add
or
int3
std
and
fcomp
lds
mov
ds
push
popf
add
adc
sub
cs
(bad)
push
(bad)
fisttp
int3
dec
fadd
jg
mov
pop
test
and
pop
call
adc
mov
mov
imul
pop
ds
dec
test
xor
fcom
mul
aam
dec
retf
int3
aaa
fisub
inc
into
mov
sbb
mov
test
adc
and
cwde
out
mov
mov
xchg
les
xchg
sbb
or
lea
push
pop
test
addr16
ins
pusha
int3
xlat
fcomp
jb
jo
jbe
pushf
sbb
sub
pusha
nop
jg
xchg
mov
popf
fmulp
icebp
jmp
adc
xchg
test
push
call
cvtps2pd
and
dec
not
xchg
push
cmp
or
data16
aaa
bound
add
fdivr
adc
and
and
mov
mov
sbb
mov
lea
mov
pop
and
push
mov
sub
sahf
mov
fimul
xchg
fucomi
test
push
or
cmp
imul
icebp
jb
inc
adc
xchg
mov
out
(bad)
add
jle
add
mov
mov
pop
jb
in
xchg
add
xchg
push
mov
gs
mov
cmp
(bad)
in
and
fsub
pop
cmps
rol
loop
in
mov
xchg
pop
lock
jb
push
jo
pop
cmp
mov
sbb
scas
jmp
daa
out
fnstsw
mov
jmp
js
ja
pop
call
jp
add
cmp
retf
pop
add
and
out
xchg
enter
aaa
cmp
lods
mov
out
std
sbb
fisttp
aas
mov
mov
in
enter
cmp
shl
test
or
lods
dec
mov
loope
shl
sbb
(bad)
neg
in
push
xor
enter
fcomp
popa
fucomi
or
neg
cs
call
stos
movs
fsubr
imul
mov
adc
push
dec
mov
shl
mov
outs
scas
mov
and
add
ret
xchg
fild
shl
repz
sub
and
mov
dec
push
mov
pop
mov
mov
std
xchg
push
mov
pushf
push
jg
int3
retf
pop
lds
or
mov
push
pop
les
xchg
imul
add
retf
or
lock
iret
inc
add
imul
and
aam
(bad)
jmp
push
inc
sbb
iret
mov
jge
je
aad
call
shl
js
xchg
addr16
jmp
or
dec
or
pop
inc
outs
test
push
stos
mov
and
test
popf
jmp
xor
push
dec
ror
mov
and
fs
test
mov
xor
ret
aas
stos
add
xchg
loop
mov
xor
rol
pop
mov
add
lods
xlat
xor
or
cdq
xor
jbe
mov
or
sub
mov
sbb
cmp
mov
cs
int
inc
nop
gs
push
jecxz
mov
push
test
adc
(bad)
push
adc
fs
cmps
mov
cmp
popf
jle
into
mov
cmp
sub
outs
hlt
or
ret
jmp
repz
in
pop
stc
test
xchg
ror
(bad)
imul
mov
dec
sub
jge
or
pop
pop
retf
mov
sub
iret
add
ret
aas
jno
mov
cmc
push
xchg
fimul
mov
ins
ror
push
push
stc
cmc
xchg
retf
sbb
cmp
loope
sbb
xlat
mov
loopne
rol
sar
jecxz
adc
or
mov
and
jmp
rcl
pop
dec
xchg
sbb
sub
mov
inc
jmp
inc
aas
and
cmp
fldcw
dec
mov
mov
adc
add
(bad)
repnz
loop
pop
cmp
jnp
aaa
jmp
sub
sub
dec
fisttp
sahf
repnz
add
cld
leave
pop
mov
or
retf
call
dec
shl
mov
loop
sub
call
cmc
mov
ret
jns
sbb
sar
scas
pop
jmp
jmp
or
imul
test
ret
into
out
cs
xor
(bad)
lahf
pop
sub
ret
sub
fwait
or
leave
mov
sti
(bad)
pop
pop
xchg
mov
rol
imul
jae
ss
xchg
push
jne
mov
sbb
int
loope
les
not
push
je
inc
xchg
jg
jle
outs
dec
(bad)
loopne
jl
hlt
cs
and
add
int3
fst
loope
data16
mov
ss
pop
call
fsubr
in
pop
cmp
fwait
mov
jns
mov
push
stos
or
scas
pop
je
out
data16
mov
adc
push
pop
bound
xchg
or
jb
sub
sbb
(bad)
or
xor
leave
dec
ins
mov
(bad)
inc
loopne
mov
in
das
outs
cli
rcr
(bad)
js
push
xchg
mov
jg
pop
leave
jle
repz
adc
add
sahf
mov
dec
inc
outs
fnstcw
ret
cld
jae
cmps
js
dec
call
dec
ret
scas
js
out
ffreep
xor
or
and
repnz
pop
js
iret
xchg
mov
gs
aas
(bad)
ror
dec
outs
mov
pushf
loop
mov
ret
push
adc
sub
inc
(bad)
adc
repz
sub
shl
xchg
and
push
jae
pop
pop
adc
mov
inc
push
inc
(bad)
jecxz
and
mov
sub
xchg
sti
repnz
jno
mov
jmp
sbb
loope
cmps
sbb
and
fidivr
lea
movs
dec
das
xchg
xchg
or
(bad)
push
jno
in
inc
test
xchg
(bad)
into
fxch
sbb
push
jp
mov
xor
or
movs
dec
sbb
adc
je
int
icebp
sub
bound
retf
or
test
xor
repz
sahf
mov
or
pop
pop
cmps
mov
aas
arpl
or
cmc
and
stc
out
movs
add
in
push
popf
std
ins
ja
loopne
icebp
pop
adc
pop
les
out
hlt
loopne
mov
cli
xchg
jnp
push
mov
es
adc
iret
xchg
xchg
dec
push
fcom
aaa
dec
ficomp
xor
int3
xchg
cmps
or
ret
stc
cmp
xchg
(bad)
enter
and
push
fs
(bad)
xchg
popa
inc
cmc
and
push
ins
cwde
adc
mov
xlat
arpl
and
ret
fcomp
dec
mov
push
(bad)
mov
mov
cld
or
out
loop
(bad)
sbb
add
xor
and
inc
ins
sti
mov
mov
movs
stos
mov
stos
imul
int
pusha
ds
div
and
xchg
mov
(bad)
jecxz
dec
mov
je
jmp
jge
mov
sub
rcl
mov
and
imul
ins
(bad)
adc
mov
jmp
dec
fdiv
ins
mov
or
shr
or
pop
jb
mov
ins
cmp
mov
cmp
cmp
ret
sbb
(bad)
pop
sbb
ins
push
cwde
(bad)
je
xor
lea
mov
xlat
cmps
(bad)
(bad)
es
out
icebp
mov
inc
fstp
and
mov
sbb
fcom
loopne
xchg
mov
push
jp
adc
xchg
xor
jl
adc
sub
call
mov
jl
inc
lods
scas
nop
jb
cmp
xchg
loop
or
xchg
cmps
lds
inc
(bad)
push
mov
xchg
outs
in
sub
ins
popf
scas
stc
fwait
or
pop
adc
xchg
push
pop
in
in
push
xchg
sub
lods
loopne
pop
or
aaa
or
ins
push
(bad)
inc
arpl
out
sar
ja
xor
xor
ja
dec
mov
mov
mov
cld
push
rol
push
pop
into
outs
push
xchg
test
jmp
outs
dec
gs
shl
inc
mov
xchg
leave
mov
mov
ret
fmul
(bad)
push
jnp
aaa
adc
mov
mov
mov
cdq
(bad)
jle
xchg
mov
mov
sub
retf
div
aad
mov
pop
popa
adc
scas
(bad)
daa
xlat
mov
push
repnz
pop
ins
inc
jecxz
mov
pop
mov
xor
xor
jp
jb
lock
(bad)
aas
xlat
sahf
jb
mov
ret
mov
push
mov
fldenv
jmp
and
div
sahf
lods
fucomi
loop
xchg
adc
aam
mov
jmp
pop
lahf
sbb
loopne
ret
test
dec
loopne
xlat
mov
jbe
dec
xor
jo
jbe
cmp
lahf
mov
or
and
les
ror
push
and
(bad)
push
dec
popa
mov
adc
cmps
dec
in
jmp
dec
sub
pop
pop
adc
push
xor
ins
(bad)
sbb
pop
clc
aam
mov
inc
iret
inc
jp
and
jecxz
mov
dec
retf
mov
div
mov
shl
mov
cmp
xor
jg
les
add
or
inc
test
mov
stc
xor
js
stos
test
ret
dec
dec
xor
lahf
leave
call
cmp
aad
pop
mov
pop
sbb
imul
mov
sar
loope
mov
xchg
std
dec
lock
(bad)
push
movs
(bad)
push
sub
dec
lods
inc
inc
les
mov
pop
push
sar
icebp
daa
push
push
ja
xchg
xchg
jmp
mov
pop
and
or
cli
nop
cli
fisubr
dec
cs
pop
xchg
inc
stos
rcl
pop
ds
xchg
push
(bad)
xor
mov
cmp
mov
retf
sub
mov
cmps
rcl
cmc
xchg
mov
mov
mov
imul
lea
std
ds
leave
mov
loopne
jae
and
outs
cmc
sub
cmp
cmps
sub
cwde
cli
ret
jo
ins
(bad)
int3
jmp
mov
aad
xchg
cs
inc
cmp
movs
sub
into
pop
dec
cmp
scas
mov
cmp
addr16
cmp
enter
retf
js
add
cdq
xchg
aad
test
mov
in
or
pop
(bad)
jmp
mov
mov
xor
es
push
mov
xor
inc
fild
pop
out
pop
cmp
loope
fmul
loopne
jnp
jg
and
add
retf
fstp
push
cmp
ror
repz
and
stc
cmp
xchg
pop
sub
rcr
push
push
repz
xchg
jae
add
cmp
xchg
repnz
mov
sub
fsub
das
xchg
ret
sbb
fimul
jno
xchg
inc
push
inc
xor
jb
pop
sbb
hlt
cld
adc
test
inc
jno
lods
leave
or
call
push
fcmovnu
retf
pop
sbb
aas
sbb
arpl
add
(bad)
nop
rcr
cld
dec
mov
clc
inc
stos
push
lods
lods
sub
mov
call
retf
jns
mov
or
xor
xchg
stos
sahf
sub
jg
dec
jno
jp
or
sub
jmp
idiv
adc
movs
pop
add
stc
adc
cmps
addr16
dec
inc
inc
popf
xchg
ss
cmc
dec
int3
inc
cmp
int
aaa
adc
and
lods
or
mov
out
jns
push
pushf
add
(bad)
hlt
ss
outs
mov
cli
jmp
ret
sbb
push
xor
pop
(bad)
jae
in
dec
outs
cmc
inc
call
cdq
jns
(bad)
or
je
mov
mov
mov
test
sti
add
and
mov
pop
jecxz
aas
cmps
jp
sub
lock
(bad)
shl
(bad)
js
into
dec
test
cwde
test
and
pop
push
ret
mov
cmp
xor
mov
xor
cld
inc
inc
outs
cmps
cmp
lods
mov
push
ins
repnz
ja
fsubr
mov
les
xchg
sbb
ret
pop
ja
mov
sbb
mov
mov
mov
inc
cmc
stos
fdivr
mov
xor
outs
jnp
xchg
aaa
adc
dec
xchg
fcomp
popa
mov
pop
call
into
shr
ret
mov
es
adc
inc
push
jl
mov
test
sbb
push
mov
pop
and
add
xchg
cmp
mov
leave
sub
dec
sbb
sub
xchg
out
mov
(bad)
aas
mov
pusha
gs
jmp
xor
fs
or
fs
int3
int
dec
cdq
pop
cmp
enter
call
xchg
push
in
inc
inc
cmp
fist
mov
jmp
paddq
ins
sub
sahf
inc
jbe
push
mov
fnstcw
loopne
call
mov
ja
sar
icebp
mov
xchg
pop
mov
fisub
out
shl
push
sub
popa
pop
adc
push
sbb
or
cmc
or
mov
dec
jg
popa
cdq
xchg
mov
xchg
test
(bad)
test
fld
mov
inc
xchg
and
sbb
sub
xor
loope
jnp
push
icebp
xchg
repz
push
cmp
cmp
(bad)
xchg
loopne
mov
mov
stc
gs
inc
rcl
dec
ret
pop
cmp
xor
out
(bad)
stc
sub
rol
mov
sbb
sub
cmp
das
mov
dec
push
pop
sbb
push
sbb
clc
aad
inc
pop
mov
mov
xchg
xchg
(bad)
(bad)
imul
cmps
out
fcmovnu
out
inc
in
xchg
add
scas
popa
fdivrp
icebp
fcomi
mov
ret
inc
add
xchg
popf
loop
rcr
mov
pop
js
ret
adc
enter
mov
pop
ins
cmp
push
pusha
or
cli
mov
jns
enter
or
and
or
(bad)
cmp
gs
imul
aam
(bad)
cmps
mov
scas
sar
outs
mov
lahf
mov
ds
je
xor
mov
(bad)
and
ins
mov
sub
daa
int3
hlt
push
mov
int
fimul
rcr
call
jle
repnz
cld
fcmovnu
fdiv
ficom
dec
mov
stos
push
xchg
std
sbb
aam
sub
or
inc
xor
stos
dec
mov
xor
push
xchg
mov
sbb
imul
xchg
ss
jnp
adc
gs
sbb
mov
in
jae
rcl
stos
inc
into
retf
mov
cmp
in
and
or
and
xchg
out
push
jp
and
stos
inc
jg
cmps
cwde
aas
push
sub
dec
into
or
cmps
and
sti
das
mov
sub
mov
mov
xchg
cmp
(bad)
push
dec
data16
cmp
rcr
lds
jbe
test
aam
scas
ins
push
mov
and
xlat
mov
gs
movs
test
movs
mov
mov
aam
in
int
retf
inc
nop
ja
out
nop
xchg
inc
pop
sbb
sbb
paddq
and
call
out
pop
cmp
inc
or
fldenv
scas
clc
adc
loope
sub
sbb
mov
adc
fmul
jg
fcmove
inc
cs
jae
in
ins
pop
es
xor
test
push
push
pop
(bad)
loop
retf
je
pop
xchg
fcom
ss
pop
mov
mov
sub
in
jo
cmp
imul
jne
je
not
not
ins
push
xor
mov
and
shl
jne
or
inc
ret
push
imul
inc
call
mov
dec
(bad)
aad
cmp
sub
mov
(bad)
out
pop
and
mov
sub
sub
and
in
shl
jns
mov
scas
xlat
push
cdq
and
enter
rcr
dec
jecxz
test
into
ror
mov
xlat
call
or
push
mov
pop
mov
add
shr
gs
push
xchg
inc
mov
lahf
push
pop
dec
fist
retf
adc
sbb
xchg
add
inc
stos
mov
add
jmp
mov
jecxz
jge
leave
mov
fisttp
sub
enter
pop
imul
leave
push
mov
pusha
mov
scas
mov
cmps
mov
mov
js
mov
cmp
aam
mov
pushf
add
push
in
cmp
clc
dec
hlt
out
mov
push
xor
jbe
repnz
push
cmp
cmp
popf
ss
lods
gs
int3
je
mov
and
nop
dec
xor
mov
scas
test
shl
cmp
jg
mov
add
xchg
cmp
mov
sub
xchg
mov
mov
mov
jmp
test
adc
sub
fsub
stc
jns
sbb
push
push
out
mov
jbe
jae
add
pop
aas
inc
daa
add
lds
loop
xor
xchg
(bad)
retf
into
jmp
inc
sbb
xor
pop
fucomip
popa
in
adc
sub
aas
into
retf
ja
push
lods
or
out
inc
rcl
jne
pop
outs
cmp
stos
repnz
jecxz
ja
movs
pop
inc
adc
pop
imul
add
fild
jnp
int3
push
loope
cld
ss
dec
in
push
repz
pop
cmp
pusha
or
sub
mov
mov
xchg
cmp
mov
mov
movs
mov
hlt
jae
jmp
in
sbb
sbb
fwait
mov
cmp
daa
(bad)
pop
jb
in
fst
or
rol
mov
mov
jno
or
mov
movs
cmp
(bad)
jmp
test
xlat
push
mov
dec
or
addr16
stos
call
mov
out
fsub
mov
popf
and
imul
mov
mov
and
pop
mov
call
xor
or
adc
sbb
push
and
fild
xchg
add
repz
pop
inc
pop
sub
adc
jle
add
jno
arpl
in
sub
push
xor
jns
adc
push
(bad)
call
test
inc
repz
hlt
mov
rcl
add
jp
sbb
sbb
jb
outs
popa
bound
div
dec
mov
movs
jns
pop
call
pop
test
(bad)
out
push
inc
test
nop
pop
lds
sbb
(bad)
push
imul
(bad)
in
add
mov
in
fadd
(bad)
loope
pop
mov
ins
or
into
stos
push
clc
mov
inc
jp
adc
push
jns
jbe
test
jg
push
xchg
sbb
xchg
mov
aad
or
add
sbb
pop
loop
lods
ret
jns
mov
pop
popf
xor
lds
or
xorps
aam
rol
fidiv
test
xchg
dec
aad
sar
clc
lock
and
inc
or
aaa
nop
cmp
mov
fcmovb
pop
xor
stc
xor
ficom
sar
inc
enter
xor
repz
push
test
shl
xchg
mov
je
and
stos
inc
aad
imul
test
mov
dec
mov
add
ins
jbe
je
cmp
addr16
andnps
push
imul
fsub
pop
js
mov
adc
sar
loope
adc
pusha
rcr
ins
addr16
repnz
xchg
popa
xor
(bad)
xor
cmp
out
test
lea
addr16
je
rcl
push
lock
dec
ja
xor
cmp
push
push
jo
sahf
fisttp
rcl
jno
xor
aam
call
lea
ja
mov
iret
add
scas
add
outs
ins
mov
add
call
inc
jmp
addr16
inc
push
hlt
clc
cmp
popf
fmul
lahf
add
add
mov
adc
jbe
jne
aas
repnz
cmp
test
adc
mov
cli
push
(bad)
xchg
xchg
loope
adc
xchg
cmp
jmp
xchg
jo
or
hlt
mov
daa
jmp
or
faddp
sbb
dec
cvttps2pi
sub
mov
mov
pushf
dec
cwde
fs
mov
mov
cmp
or
pop
call
lods
clc
jmp
pop
je
jb
shl
add
dec
pop
xor
sti
mov
mov
sub
pop
ret
push
push
push
cmp
cmp
push
mov
