ror
add
add
add
dec
add
add
add
add
add
or
add
add
add
hlt
and
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
xor
add
and
jb
outs
addr16
add
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
ficomp
add
aas
add
add
fwait
add
add
add
ja
add
retf
sahf
add
add
add
lods
add
add
add
add
add
add
add
sbb
add
jl
add
add
add
push
add
add
add
add
add
test
add
lock
add
add
mov
into
add
add
add
test
add
add
jnp
bound
cmp
aaa
bound
sub
sub
sub
xor
data16
jge
cmp
outs
fs
gs
jae
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
mov
jae
dec
mov
dec
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
cwde
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
pop
sub
into
add
add
rol
add
adc
push
add
push
inc
add
push
add
add
add
dec
fisub
pushf
fild
jp
sti
sbb
in
cmp
jl
adc
jns
cmp
add
push
dec
xor
xchg
mov
add
cwde
movs
lahf
stos
js
pop
mov
adc
ret
arpl
(bad)
outs
sbb
adc
dec
jle
sub
ins
dec
ficom
imul
aad
sub
in
ss
or
mov
out
out
stos
xor
pop
mov
ds
call
sbb
xchg
mov
enter
loope
jle
or
fbld
aad
push
movs
movs
push
ret
lods
outs
push
fcom
mov
push
out
pusha
fsub
retf
frstor
int
in
lea
adc
sub
and
imul
add
data16
add
call
popa
dec
jmp
and
inc
xor
pop
or
cmps
jnp
test
mov
sti
dec
xor
xor
pop
sbb
cmp
shl
retf
int3
lea
shl
call
sbb
mov
add
adc
and
jne
mov
mov
push
jge
outs
js
adc
outs
inc
into
dec
and
iret
xor
push
push
xchg
add
xor
jb
fcmovb
aad
dec
sbb
cmp
mov
rcr
mov
test
jge
push
mov
int3
xor
nop
int
pop
outs
mov
pop
adc
xchg
dec
adc
pop
push
cmps
rcl
cmp
in
or
jns
xlat
cmp
fbld
sbb
jg
adc
js
mov
imul
or
jbe
add
push
inc
lahf
xchg
adc
cdq
fadd
in
outs
push
repnz
push
jns
jge
sub
aas
ret
cmp
mov
scas
stos
movs
mov
mov
xchg
xor
pop
adc
jns
or
dec
cmps
or
sub
mov
cmp
clc
call
push
adc
sub
cmovae
cmp
cdq
inc
test
push
add
and
ds
dec
mov
jb
test
sub
loopne
popa
pusha
scas
and
mov
(bad)
push
adc
xchg
lahf
dec
adc
cmp
fs
(bad)
jge
test
pop
cmp
xchg
sbb
and
adc
jns
sbb
cdq
stos
repnz
mov
push
out
retf
inc
test
mov
ins
ins
dec
fs
cmp
shl
retf
jmp
imul
inc
sub
jmp
loopne
jns
lea
scas
add
mov
mov
(bad)
pop
adc
aaa
popa
cmp
addr16
sahf
add
icebp
jne
sub
shl
pop
sti
das
add
adc
dec
pop
push
out
out
addr16
adc
or
mov
(bad)
and
arpl
mov
pop
lock
lods
inc
push
pop
sbb
out
cmp
sbb
fistp
stos
fstp
xchg
inc
sbb
mov
or
js
sahf
fnstsw
inc
shl
mov
(bad)
push
sbb
sbb
call
cli
mov
mov
in
mov
inc
leave
xor
sub
sub
ja
jne
into
sbb
in
mov
push
sahf
aaa
mov
gs
lods
push
mov
jle
sbb
leave
pop
lahf
xor
hlt
or
test
aaa
and
adc
repnz
nop
dec
ss
jbe
push
inc
push
adc
retf
push
stc
cdq
fisubr
pop
sbb
mov
adc
or
add
dec
sbb
loope
mov
aas
out
test
xchg
repz
sbb
bound
daa
mov
fdivr
popa
and
jo
movs
ficomp
(bad)
aam
scas
sbb
fld
xor
out
sti
mov
and
mov
test
mov
es
mov
jmp
push
jmp
sar
mov
movs
rol
mov
push
loop
pop
xchg
jno
test
or
adc
fdiv
sbb
inc
add
into
cld
pop
add
in
dec
pop
jbe
sub
ret
mov
sbb
xor
int
and
mov
in
iret
xlat
push
mov
stos
clc
or
into
test
sbb
pop
jmp
pusha
stos
ja
mov
push
pop
es
push
cmp
push
adc
std
ds
adc
pop
push
or
inc
ds
scas
jle
pop
ror
mov
repnz
leave
das
fs
repz
lea
nop
icebp
mov
mov
jns
cmp
sar
sbb
scas
addr16
sti
std
pop
push
test
mov
xchg
dec
mov
ds
cmp
mov
adc
pop
ret
sub
shl
(bad)
sub
push
sbb
xor
pop
pop
repnz
mov
aad
dec
or
or
xchg
int
ds
mov
arpl
cli
mov
and
pop
sub
dec
movs
in
cmp
cmp
loop
test
lods
sbb
repz
je
mov
imul
aad
lods
js
mov
retf
sub
cmp
cdq
mov
pop
mov
jbe
add
pop
mov
div
ror
cmp
aam
and
int
push
leave
or
out
dec
ficomp
imul
test
or
aaa
or
mov
mov
mov
loop
sub
jle
pushf
push
lea
or
sbb
mov
adc
inc
ret
mov
jo
xor
shr
es
sub
cmp
retf
mov
mov
cmp
mov
popa
and
or
idiv
or
scas
cmp
push
mov
and
sbb
jl
aas
fcom
jle
jo
in
popa
and
xchg
lds
call
cmp
shr
adc
icebp
test
in
arpl
inc
rcr
stos
and
movs
xchg
push
sub
shl
pop
fimul
fisub
mov
push
mov
cmps
adc
lods
sub
jecxz
out
pop
xor
mul
jmp
pop
test
mov
push
mov
shl
cmc
fwait
test
jge
and
cmp
and
(bad)
gs
sbb
push
dec
div
pop
cdq
xor
jecxz
stos
mov
inc
cdq
adc
fidivr
inc
in
test
(bad)
jl
sahf
mov
movs
cmp
and
out
add
pop
add
scas
int
test
pop
scas
mov
loope
scas
jle
imul
mov
mov
test
nop
les
ret
dec
jg
sahf
or
xor
or
sar
out
sub
and
jmp
xor
or
jmp
add
loope
outs
rcr
cmp
dec
sub
push
xor
pop
lds
idiv
mov
mov
sbb
xor
data16
adc
cmp
ins
ret
(bad)
push
jae
mov
mov
push
ret
retf
test
popa
and
sub
jp
test
mov
movs
popf
jl
add
jmp
into
mov
or
std
inc
sti
adc
ret
xchg
ja
push
sbb
aam
icebp
cmps
pop
and
iret
nop
adc
mov
loop
(bad)
jmp
add
enter
test
call
push
inc
xor
rcl
popa
jmp
mov
inc
jg
rcr
stos
cmp
pop
imul
mov
ror
jecxz
sbb
mov
inc
xor
icebp
cmp
mov
test
loopne
push
jno
push
adc
cmp
iret
jbe
mov
cs
and
rol
cmp
mov
fldenv
add
pop
data16
stos
mov
sub
pop
inc
pop
and
and
fxch
adc
out
cwde
sbb
sub
xor
(bad)
xor
clc
push
xor
(bad)
in
in
xchg
sub
pushf
xor
(bad)
xchg
xor
es
jo
out
mov
add
inc
push
leave
lahf
or
fistp
mov
or
stos
add
cmp
mov
daa
xchg
repz
pop
sbb
in
jmp
or
add
lahf
test
fild
or
jg
arpl
retf
mov
and
into
push
out
into
out
scas
add
xor
outs
sbb
mov
icebp
fisub
clc
and
dec
clc
inc
sar
cmps
cli
bound
dec
(bad)
mov
pop
scas
sub
cmp
fs
inc
add
jecxz
imul
add
je
and
int3
adc
pop
ds
pop
add
or
inc
xchg
loop
cmps
rol
xor
hlt
imul
pop
jle
inc
xchg
pop
push
mov
jle
pop
pop
pop
and
mov
iret
mov
xor
ret
outs
lods
std
shl
ds
jnp
or
sbb
push
ret
cmp
xchg
data16
lds
push
cmp
sub
aad
iret
add
ja
jnp
and
jmp
inc
adc
xchg
jle
or
push
adc
jp
fmul
inc
add
xchg
fs
scas
adc
leave
fadd
jmp
test
adc
sub
and
movs
cmp
imul
test
cmps
inc
or
stc
into
loope
sub
mov
daa
cmc
popa
or
push
push
(bad)
loopne
jns
or
xchg
xchg
push
imul
mov
mov
inc
aas
fmul
pop
push
js
mov
or
cmp
xchg
sub
dec
fwait
and
inc
and
lock
lock
push
cdq
or
lods
repz
or
lds
inc
setne
lods
daa
adc
mov
popf
fild
ret
mov
mov
mov
mov
mov
leave
scas
(bad)
outs
fldenv
mov
movs
jp
push
in
cs
jl
fcomp
push
pop
nop
popa
sub
sti
and
(bad)
aad
pop
jg
cmp
les
sub
dec
stc
dec
hlt
and
icebp
sbb
push
xor
jmp
jnp
sub
dec
lds
cmp
add
fadd
aas
jp
iret
sbb
pop
cli
mov
jbe
mov
mov
push
les
fsub
cmp
loop
in
movs
jb
mov
xchg
ds
imul
mov
jne
push
add
rol
adc
popa
jg
xlat
mov
jg
cmc
mov
fldcw
cmp
repz
xor
xor
jmp
aad
sbb
mov
sub
movs
adc
xchg
sbb
add
inc
outs
adc
test
cmp
push
or
pop
test
loop
sub
(bad)
cld
inc
sbb
rcr
les
cld
cmp
sbb
outs
inc
cmp
pop
jmp
cmps
push
cs
sub
in
mov
jp
ins
inc
test
cli
sub
dec
mov
add
retf
mov
stos
inc
aaa
pop
je
(bad)
sahf
cs
push
ins
jle
mov
push
(bad)
lahf
and
rcr
cmps
cmps
sbb
aas
leave
pop
leave
xchg
test
cmps
xchg
sub
imul
jmp
cmps
movs
in
cmp
pop
stos
pop
mov
retf
xor
gs
or
in
test
xchg
lods
imul
adc
pop
push
add
mov
pop
enter
sub
out
jo
movs
and
es
pop
add
add
cmp
in
or
cs
mov
mov
and
or
fldcw
cwde
cmp
ins
aam
outs
jnp
mov
shr
pop
daa
pop
inc
repz
test
nop
ror
aam
and
fistp
das
cmp
ja
xor
sub
ins
std
cmc
push
retf
dec
dec
std
inc
test
fmul
and
jle
sbb
cmp
pop
ret
aas
xchg
xor
dec
loopne
leave
paddb
xchg
pop
ror
pusha
add
pushf
hlt
push
aas
js
call
mov
cmps
mov
repnz
scas
in
fdivr
or
mov
add
push
retf
mov
mov
jnp
mov
loop
lods
rol
adc
pusha
into
push
(bad)
pop
cmp
gs
xchg
xor
push
xor
es
fld
jecxz
pushf
leave
retf
jl
mov
cli
inc
xor
jne
test
and
pop
mov
(bad)
jl
arpl
xor
retf
mov
pop
mov
loopne
test
mov
inc
jns
into
mov
scas
add
or
inc
jmp
das
sbb
push
adc
lods
mov
xchg
int
mov
jmp
mov
push
mov
dec
cmp
sar
loop
mov
int
pop
or
and
in
pop
sbb
mov
arpl
dec
mov
inc
push
je
pop
push
inc
jns
call
pop
xchg
mov
mov
xchg
xchg
xor
mov
clc
out
out
repnz
mov
repz
or
sti
lea
xchg
mov
sahf
(bad)
hlt
mov
add
or
es
adc
(bad)
fcom
inc
lods
and
pop
jns
jne
movs
pop
or
adc
dec
es
cli
pop
sub
sar
xor
pop
mov
lods
dec
adc
xor
jge
int
dec
mov
setl
xchg
cmp
pop
add
mov
mov
adc
mov
pop
push
cdq
repnz
jmp
ret
fldl2t
xor
cdq
jge
inc
mov
xor
retf
cli
repnz
idiv
(bad)
jl
das
jle
stos
xchg
ins
pop
cwde
out
mov
pop
adc
repnz
popf
je
xchg
inc
outs
mov
dec
push
shl
hlt
sar
and
push
sar
movs
pusha
add
mov
jmp
mov
out
jne
out
jo
or
imul
fwait
ret
mov
pop
mov
lahf
retf
das
mov
leave
mov
and
leave
pop
push
mov
pop
inc
push
stos
sub
idiv
les
or
inc
aad
iret
pop
test
jno
js
mov
out
jb
inc
data16
and
and
sub
jo
dec
fs
pop
js
xchg
cmc
stos
sub
and
(bad)
or
out
push
shl
fisubr
scas
jmp
pusha
sub
outs
adc
bound
push
rcr
stc
cwde
xchg
push
popf
or
ror
ja
(bad)
in
repnz
enter
add
loopne
jno
push
fwait
mov
mov
sub
jns
dec
inc
or
lods
arpl
or
addr16
add
jmp
mov
pop
repnz
mov
loopne
aam
ret
in
mov
popa
aad
pop
mov
or
mov
adc
mov
mov
lods
fisubr
into
inc
inc
xor
cmp
sbb
jle
imul
dec
jno
pop
pop
fsubrp
mov
push
sbb
mov
fimul
mov
out
or
imul
popa
out
dec
dec
cmps
ja
not
push
std
jmp
(bad)
mov
cmp
das
cli
add
test
jno
pop
mov
stos
cmc
pop
inc
cs
add
push
pop
or
jecxz
std
cdq
pop
enter
pop
mov
mov
fwait
lock
ret
ins
xchg
stos
loopne
retf
adc
cmp
rcr
xor
je
aas
fsub
loope
mov
ret
shl
test
push
xchg
imul
or
xor
or
les
xor
das
lods
mov
pop
fcomp
jb
nop
scas
adc
or
mov
push
shl
xchg
xor
xchg
mov
dec
mov
in
cdq
(bad)
lods
jb
jmp
sbb
dec
sbb
and
mov
adc
(bad)
rcl
push
mov
mov
xor
mov
aaa
push
arpl
rol
(bad)
cmc
js
clc
repz
loope
xor
sub
imul
dec
in
mov
xor
loopne
pop
scas
lahf
adc
mov
(bad)
addr16
adc
lods
popf
dec
scas
and
or
retf
mov
sub
or
or
test
sub
jo
iret
mov
pop
sar
cmps
shl
push
arpl
inc
xchg
mov
int
test
add
pop
fiadd
inc
jne
mov
jae
scas
cmp
pusha
dec
mov
sbb
inc
jbe
nop
adc
cdq
push
push
scas
shr
mov
daa
jmp
jmp
mov
push
jb
add
or
add
and
cmp
pop
sti
fnsave
mov
das
push
(bad)
mul
mov
push
mov
sub
retf
dec
dec
push
(bad)
jle
pop
add
sub
sbb
imul
adc
jbe
inc
cmps
inc
and
dec
mov
jo
repz
call
(bad)
mov
int3
dec
mov
dec
js
jg
sbb
or
mov
or
hlt
ds
ja
fucom
cmps
popa
mov
retf
push
mov
int3
jp
or
push
xchg
loopne
out
add
jne
mov
pop
pop
fidiv
hlt
or
inc
shr
sbb
or
cdq
stos
cmps
scas
add
outs
and
jmp
(bad)
jge
lea
mov
in
(bad)
and
ds
sahf
xchg
ss
mov
mov
in
jmp
clc
loope
shl
xor
sub
or
jne
stos
out
mov
in
(bad)
inc
sub
jnp
ret
sub
mov
add
idiv
jbe
shr
ret
test
aam
sbb
jmp
add
js
jge
jb
xchg
clc
or
mov
push
retf
xor
stc
add
jl
mov
ja
xchg
sub
int3
enter
aas
cmp
push
sbb
(bad)
push
xor
add
imul
movs
scas
js
or
fldcw
(bad)
scas
pop
lahf
dec
fadd
mov
dec
push
xor
xor
loope
outs
mov
or
movs
cmp
test
pop
fistp
fld
dec
ins
fmul
(bad)
movs
pop
mov
outs
repnz
lods
pop
outs
daa
pop
icebp
in
and
idiv
sbb
(bad)
outs
adc
and
xchg
leave
fwait
jno
in
add
mov
retf
xchg
into
sar
inc
cmp
pop
jg
or
repnz
mov
add
in
inc
pop
gs
pop
adc
lods
sub
adc
sti
mov
pop
cmps
(bad)
mov
stos
jns
add
xchg
ror
xlat
pop
in
div
cmps
adc
add
retf
fsincos
dec
lock
inc
mov
in
test
cmp
les
inc
inc
rcl
in
dec
lock
retw
ins
sti
sti
push
jbe
test
sar
mov
lods
ret
in
or
lea
js
imul
movs
xchg
stos
fdiv
cmp
lock
mov
cmp
xchg
cmps
pop
(bad)
repnz
dec
(bad)
data16
xchg
sub
push
cmp
push
test
and
inc
xchg
jg
dec
lea
sub
inc
loop
aas
pop
ss
mov
jno
movs
adc
dec
test
inc
lahf
dec
sbb
loope
aas
jns
mov
ds
mov
mov
cmp
cmps
inc
push
das
mov
ins
lods
es
repz
or
or
fsub
xchg
push
mov
es
push
in
pop
mov
(bad)
mov
inc
pushf
(bad)
push
inc
adc
pushf
cld
mov
mov
loope
aam
mov
mov
xchg
test
pop
sahf
sub
dec
repz
cmp
pop
jle
popa
mov
mov
sub
int3
xor
or
sub
pusha
xor
adc
sbb
xor
or
cmps
outs
in
cmp
and
jbe
adc
jge
sti
rcl
mov
pop
mov
popf
jns
ins
in
mov
and
and
stc
imul
in
pop
rol
adc
enter
sbb
repz
movs
aam
xchg
or
mov
outs
inc
cdq
jp
mov
jp
xchg
getsec
retf
sbb
stc
fsubr
push
sbb
dec
xor
mov
ins
(bad)
fsubr
add
mov
stos
aam
(bad)
jmp
add
jg
mov
inc
pop
jbe
add
jo
retf
fiadd
cmp
dec
mov
push
cmps
mov
push
aas
pushf
jno
pop
sub
cmps
dec
pop
out
xchg
inc
movs
inc
lds
pop
aas
repz
xor
mov
inc
stos
xor
lods
adc
daa
int3
mov
add
add
cs
jecxz
and
gs
mov
push
sub
sbb
pop
add
pop
add
add
cmp
xor
mov
js
retf
ins
xor
sbb
adc
aad
inc
jns
sahf
cs
mov
mov
jmp
mov
in
cmp
in
dec
mov
mov
retf
cmp
jnp
xor
or
sub
outs
mov
xor
stc
stos
popa
dec
cmc
int
fisub
xchg
mov
dec
faddp
(bad)
pop
fld
or
adc
in
loope
jne
clc
dec
mov
inc
or
scas
jecxz
gs
aam
ret
mov
or
inc
ds
(bad)
xor
lahf
mov
xor
cmps
ds
push
and
lods
dec
js
sbb
cmp
in
lods
popa
dec
cs
mov
adc
rcr
sbb
jg
push
test
push
arpl
and
fbstp
(bad)
add
sar
retf
retf
leave
addr16
leave
call
aad
mov
add
xlat
inc
stc
sub
(bad)
out
js
aaa
pushf
jp
xor
adc
mov
cmp
retf
and
ret
in
fs
add
push
rol
pop
or
pop
sbb
fsub
ja
cld
(bad)
cli
mov
out
dec
outs
sbb
push
(bad)
inc
push
or
xchg
dec
mov
or
out
shr
movs
movs
ret
repz
mov
ins
fnstcw
cmps
sysret
dec
adc
mov
outs
cmp
jmp
arpl
neg
push
int
adc
sub
sbb
pop
push
xchg
xor
out
xor
xor
pop
stos
retf
sahf
ja
ret
dec
jnp
pop
adc
jecxz
nop
jo
xchg
sub
out
pop
neg
test
stc
jbe
iret
push
repnz
pop
daa
aaa
adc
mov
sbb
cmp
cmp
in
sub
pop
jmp
shl
sbb
pop
add
mov
call
in
inc
shr
mov
cs
xchg
pop
pushf
inc
pop
fld
pop
jnp
dec
js
sbb
sub
pop
cmps
repnz
das
mov
xchg
mov
mov
leave
addr16
inc
push
(bad)
ret
mov
(bad)
mov
mov
mov
push
xlat
cmp
xor
pop
pop
dec
in
mov
cmp
rcl
lock
jp
inc
push
push
test
fs
(bad)
mov
in
(bad)
shl
mov
pop
fnstsw
add
ins
push
rcl
sub
js
adc
stc
(bad)
out
sub
jecxz
repnz
adc
retf
gs
loop
or
jle
mov
jbe
test
xchg
cmp
pushf
mov
xor
jl
int
cmp
hlt
bound
pop
push
cmp
jns
stos
cli
fisub
mov
push
push
(bad)
jns
adc
iret
and
fsubr
mov
int3
fisubr
sbb
adc
push
fimul
mov
inc
xor
test
lods
fadd
xor
push
or
jp
retf
mov
(bad)
ss
xor
pop
rdmsr
dec
call
mov
xor
inc
jmp
add
inc
inc
ins
cmc
push
adc
mov
or
mov
dec
fwait
je
stc
xchg
out
or
imul
mov
pop
mov
ret
xchg
sub
rol
mov
out
pop
cmp
inc
fisub
mov
pop
pop
cmp
sub
call
outs
mov
jno
xor
les
jno
aam
cwde
dec
and
shl
push
call
pop
je
(bad)
inc
add
mov
or
and
adc
mov
cld
test
das
sub
fs
cld
sub
bound
sbb
je
into
inc
jp
xchg
and
adc
xor
sub
out
int3
test
xlat
test
push
test
xor
pop
push
shl
out
cmc
mov
mov
ja
sbb
daa
pop
push
jbe
mov
pop
jecxz
pop
(bad)
sbb
cmp
adc
fdivr
jecxz
outs
xor
movs
sbb
mov
out
data16
mov
fldcw
pop
xor
in
and
jnp
mov
mov
lock
sbb
mov
cmp
ja
pop
arpl
movs
imul
inc
retf
xchg
std
cwde
in
ja
vandps
fisttp
xlat
cmp
loop
sti
cmp
jecxz
and
add
inc
xchg
xchg
out
iret
mov
in
icebp
test
adc
leave
mov
inc
nop
cmp
adc
ins
push
dec
sar
inc
cs
jge
retf
push
(bad)
inc
aam
push
retf
fild
repnz
sbb
add
cs
jo
imul
xlat
or
mov
inc
shl
repnz
xor
aas
sub
xor
dec
dec
popa
sbb
xor
in
daa
mov
ins
jns
add
mov
jnp
lods
aas
es
in
lods
sti
and
cmp
add
iret
jae
sbb
jcxz
xor
pop
mov
pop
je
mov
mov
std
add
push
cmp
mov
cmc
or
mov
sbb
xchg
icebp
xchg
pop
cs
inc
loop
loop
aas
pop
xor
mov
stos
jp
jp
int
push
xor
and
ins
shl
and
aad
mov
inc
and
xchg
sbb
out
loop
mov
fcom
movs
push
ds
xor
es
repnz
cld
jmp
out
std
mov
fsub
fnstcw
push
aaa
inc
xsha1
cmps
dec
int
fistp
int3
ret
arpl
fcom
pop
fcmovnb
mov
fcom
mov
add
fcom
jo
jmp
test
jns
or
sti
cmp
xor
xor
lock
xor
mov
xor
sub
repz
stos
jle
dec
pop
bnd
adc
mov
jno
xchg
push
inc
outs
or
(bad)
aam
mov
push
mov
cs
sbb
(bad)
out
or
push
loopne
inc
jl
mov
jmp
mov
sahf
add
push
xchg
fwait
sub
cmp
cmp
sub
shl
or
fst
clc
mov
sub
adc
jns
cmp
(bad)
jns
outs
cmp
stos
adc
pop
fidivr
mov
xchg
in
jo
addr16
rep
or
xchg
fs
jge
mov
mov
sub
dec
xor
ffree
stos
inc
pop
push
outs
xchg
jl
lahf
dec
data16
fwait
mov
(bad)
inc
loop
push
mov
add
pop
out
sti
jnp
push
add
push
loop
shl
mov
push
and
mov
xchg
retf
stos
scas
jo
aas
inc
ficom
les
add
mov
sbb
mov
dec
xchg
pop
inc
je
jae
hlt
or
imul
rcl
sbb
das
inc
rcl
clc
(bad)
test
adc
fild
xchg
scas
xchg
push
stc
sahf
xor
inc
and
stos
les
mov
es
repz
and
lea
(bad)
outs
aas
ret
mov
mov
daa
dec
sub
mov
jmp
xchg
jp
inc
add
into
jle
push
loop
sbb
inc
in
out
mov
in
mov
lea
nop
mov
ins
or
aaa
cmp
jns
pop
inc
jmp
dec
gs
sub
(bad)
imul
in
gs
or
add
mov
dec
dec
test
(bad)
ins
cmp
jmp
in
sbb
xchg
scas
enter
ds
cli
cld
or
push
and
test
xlat
pop
xchg
inc
xchg
or
push
push
fild
mov
sti
leave
repz
adc
push
xchg
jl
sub
cwde
shr
sti
popf
inc
cmp
lods
jnp
sub
mov
xchg
and
retf
dec
cmps
mov
and
pop
add
fld
stos
scas
jge
jnp
imul
or
in
jmp
ins
repnz
ud0
cmp
fisubr
inc
pushf
jae
mov
int3
sbb
sub
xchg
mov
or
lds
cmp
mov
and
daa
jno
mov
add
in
retf
or
cmp
call
ret
je
popa
mov
in
mov
push
xlat
mov
cmps
mov
cmp
jae
cmp
ud0
sbb
pop
xchg
cmps
mov
or
ds
sbb
dec
fwait
into
cmps
inc
inc
cmps
movs
pop
fmul
movs
stos
inc
or
or
div
cli
pop
adc
jmp
push
push
in
mov
jo
jnp
bound
xor
movs
dec
push
jns
stc
cmc
inc
test
push
lods
jns
sub
cmp
add
or
mov
ds
jmp
mov
mov
adc
seta
cli
fidiv
ins
call
loopne
and
pop
fnstcw
xor
loop
or
leave
stos
push
js
adc
sahf
jbe
sub
popa
aas
dec
movs
lods
test
cmc
sbb
adc
sbb
test
and
and
xor
shr
xchg
jnp
push
in
sbb
add
popf
sbb
or
mov
sti
push
and
add
fdivr
fnstsw
mov
mov
sar
jl
(bad)
jbe
lods
inc
push
shl
fsubr
out
ret
add
test
xchg
lea
xor
dec
aaa
cmp
xchg
ret
pop
push
ja
mov
ins
jne
push
add
movs
jle
or
sahf
sub
clc
ret
pop
xor
mov
dec
js
fwait
imul
sbb
std
mov
fadd
aas
adc
push
leave
cdq
cmp
ret
sbb
pop
jmp
jg
aad
push
jb
inc
push
clc
push
mov
pop
mov
lods
jo
jmp
mov
inc
jge
pop
mov
clts
sub
add
add
jecxz
pusha
je
loop
and
enter
sub
dec
sub
push
repz
ret
addr16
sub
or
(bad)
dec
into
xor
or
mov
out
dec
imul
popf
ret
push
repnz
jno
dec
fst
rcr
jmp
test
lock
xchg
add
adc
adc
mov
leave
fst
xor
mov
call
icebp
stos
movs
push
xor
adc
pop
cdq
je
clc
mov
mov
mov
stos
jae
adc
ret
or
aas
push
push
sub
jne
inc
(bad)
les
es
add
aam
fnstcw
dec
es
lods
out
aaa
imul
hlt
or
mov
repnz
cmp
or
inc
jne
fild
(bad)
xchg
test
cmc
mov
inc
mov
popa
push
pop
repnz
aam
inc
repz
dec
sub
jmp
into
jns
xchg
in
sub
js
push
inc
push
lds
stc
push
movs
xchg
fcomp
mov
out
(bad)
cs
in
sbb
dec
jmp
test
out
aaa
add
jmp
cmps
xchg
ret
xchg
sub
outs
retf
int
xchg
sahf
sub
stc
call
call
inc
push
cmp
pop
call
mov
mov
xchg
dec
daa
sahf
mov
jg
cmps
leave
fbld
dec
cmc
fcomi
jecxz
(bad)
addr16
pop
jo
mov
or
mov
inc
mov
out
out
sbb
fidiv
mov
and
pop
(bad)
sar
cmp
xchg
sub
pusha
sbb
call
adc
nop
adc
xchg
xor
les
mov
mov
dec
xor
imul
retf
inc
jns
fild
call
mov
lock
pop
es
std
mov
add
mov
jmp
ins
jle
shr
or
sbb
sbb
jge
and
dec
cmp
lds
and
stos
push
sbb
add
xchg
pop
dec
add
sbb
inc
cmps
call
cmp
inc
ds
and
sub
fidiv
stos
jecxz
cmp
or
ror
adc
mov
aam
sti
sbb
and
xor
adc
xor
scas
mov
jno
in
fdiv
out
cmp
push
mov
mov
fs
mov
push
and
push
and
fwait
xchg
xchg
jmp
popa
sahf
cmps
cmp
push
sbb
mov
(bad)
scas
sub
sub
mov
push
rcl
sti
rcr
pusha
adc
in
into
ret
pop
or
js
dec
in
sbb
cmp
mov
pushf
xchg
out
unpckhps
movs
lds
mov
fst
inc
neg
inc
sub
imul
sar
add
data16
adc
cmc
mov
lahf
pushf
cs
and
sbb
sub
jmp
outs
xchg
das
push
cli
mov
xchg
push
jae
or
fisub
push
nop
or
ror
cdq
lea
inc
and
push
inc
repnz
stos
mov
dec
xchg
mov
imul
pop
xchg
pop
xor
jp
lock
jbe
leave
in
sub
mov
push
dec
dec
mov
cmp
lock
test
pop
aas
sahf
stos
das
xchg
enter
test
leave
cs
scas
jb
push
fisttp
xchg
cld
sub
inc
push
mov
mov
aad
int3
outs
sub
or
stc
call
sbb
sub
mov
push
mov
out
add
add
adc
adc
or
xchg
and
test
rcr
hlt
in
jmp
fs
scas
add
mov
dec
pop
(bad)
rcr
xchg
(bad)
fdivr
add
stos
loope
out
shld
cwde
call
cli
xor
in
sbb
outs
or
mov
or
pop
push
ja
add
aaa
jbe
vpmullw
sbb
inc
mov
pop
fadd
test
fbstp
fwait
stc
nop
or
sub
cmp
sti
aas
mov
icebp
loope
test
cmp
retf
sub
cmc
sub
and
push
jecxz
fimul
and
movs
fadd
loopne
mov
outs
sub
pop
sub
lods
sar
(bad)
test
jae
add
shl
add
inc
add
xor
mov
leave
lods
mov
in
js
pusha
or
fwait
cmp
inc
les
inc
mov
jb
xor
cmp
inc
adc
ins
inc
cmp
inc
rcr
mov
xor
jmp
or
sub
push
imul
cmp
adc
int
inc
daa
mov
jmp
ror
ficomp
sbb
std
dec
add
psubsb
jno
repz
cdq
ss
push
mov
iret
in
or
add
pusha
aas
cmps
daa
fsubr
je
ror
push
outs
test
add
ret
ret
sbb
pop
lea
dec
fisub
xor
lock
adc
sub
or
loop
mov
test
sbb
sub
sub
pop
fs
imul
mov
pop
add
and
xor
test
push
jg
xchg
out
jl
adc
nop
(bad)
in
sar
sbb
jecxz
mov
test
add
adc
loope
xlat
outs
push
mov
ror
imul
js
scas
adc
in
mov
cwde
pop
pusha
dec
daa
push
push
ret
cmp
data16
mov
popf
add
push
cwde
jl
loopne
mov
aad
jnp
rcl
sub
dec
jmp
out
xchg
push
lea
popf
lods
cwde
sub
sub
cmp
in
push
dec
mov
add
add
mov
test
mov
add
jp
stos
scas
ja
dec
(bad)
aad
mov
jae
addr16
add
cmp
mov
bound
push
leave
lods
ja
push
cmp
mov
jns
shr
xchg
test
ror
pop
outs
aaa
lods
std
inc
popa
(bad)
jle
push
ds
aad
push
fdiv
adc
cmps
add
movs
pop
push
sar
push
stos
js
xchg
lahf
mov
adc
addr16
mov
or
mov
(bad)
push
dec
mov
je
bound
inc
jmp
cmp
aam
push
nop
mov
jl
mov
jbe
inc
sub
push
pop
or
sbb
jb
outs
iret
add
(bad)
aad
add
sub
sbb
int3
sub
out
vpcmpgtw
inc
popa
sbb
mov
loop
add
outs
call
jg
or
ja
xchg
xchg
xor
leave
xchg
ror
push
loope
shl
cmp
cmp
sahf
idiv
or
adc
pop
fistp
ins
jns
push
jno
and
iret
retf
cwde
push
aaa
xor
sar
mov
out
aaa
ficom
pop
or
mov
call
clc
and
aam
push
sar
sbb
mov
xchg
inc
pop
sbb
mov
fnsave
enter
test
aam
loop
nop
in
int3
or
div
aas
js
test
retf
mov
inc
fistp
dec
add
loope
add
movs
jmp
fld
xchg
cmps
sbb
mov
xchg
pop
retf
jae
repnz
xchg
inc
xchg
adc
test
movs
ins
cs
fbstp
add
sbb
dec
jns
(bad)
addr16
lods
imul
or
ret
mov
fiadd
imul
sub
inc
and
jge
daa
mov
sbb
dec
stos
sar
push
mov
sub
cli
jae
out
mov
aaa
cmc
mov
cli
lods
retf
out
clc
mov
jo
fistp
je
imul
push
sbb
mov
mov
push
iret
sbb
push
mov
jno
int
dec
jne
adc
mov
jl
(bad)
sbb
cdq
push
shl
(bad)
inc
jbe
jae
sbb
push
cwde
cdq
ins
js
adc
cmp
adc
aam
adc
sbb
jge
adc
out
or
aad
scas
inc
call
add
mov
jne
out
daa
adc
jb
das
ins
fistp
inc
cwde
inc
cmc
test
outs
xor
retf
xchg
data16
jae
retf
stos
add
test
mov
mov
nop
xor
pop
xchg
loope
mov
or
lock
push
inc
mov
sbb
out
imul
div
mov
sbb
cmp
pop
push
in
fstp
inc
xchg
mov
cmp
pushf
mov
adc
ins
jae
nop
push
aad
mov
(bad)
cdq
shl
std
adc
jmp
push
xlat
stc
mov
sub
movs
loopne
je
mov
push
dec
fsub
jg
enter
data16
inc
add
inc
jae
xor
cmp
call
push
xchg
sub
dec
push
sbb
arpl
adc
and
inc
int
ror
scas
stc
js
mov
cmp
lock
mov
fmul
adc
inc
or
imul
adc
imul
loope
jl
mov
add
jl
(bad)
call
jno
(bad)
int
jno
dec
mov
pop
repnz
sbb
or
fisttp
pop
imul
ss
or
loop
imul
jns
cmps
xchg
adc
sub
cld
sub
out
cmps
jecxz
inc
pop
repnz
iret
mov
pop
lock
sbb
or
aas
adc
test
jo
mov
jae
iret
movs
mov
push
aas
pop
rcr
adc
lahf
xchg
xchg
outs
push
into
arpl
pop
sub
mov
popf
(bad)
xchg
hlt
cld
sbb
retf
xor
enterw
xlat
or
test
xchg
mov
sub
sub
cmp
retf
mov
scas
push
push
adc
dec
jecxz
add
out
popf
pop
cs
enter
shl
popa
jnp
in
stc
pop
mov
dec
mov
imul
push
add
shr
cdq
rcl
dec
and
pop
pop
jns
push
mov
nop
loope
mov
add
in
jb
or
mov
push
retf
rcl
lahf
mov
sti
pop
or
dec
data16
jbe
jnp
iret
addr16
adc
cmp
movs
popa
aas
addr16
xchg
bsr
aas
sbb
cmps
jmp
add
push
adc
fist
adc
push
fadd
sub
ret
cmc
xor
xor
or
cmp
test
in
lods
es
lods
int3
icebp
add
add
lds
std
outs
inc
fdiv
jl
xchg
sub
iret
pop
int
loopne
leave
fimul
into
outs
fcmovne
aas
out
push
imul
scas
bound
test
sbb
addr16
mov
nop
mov
mov
inc
mov
cmp
test
mov
dec
out
xchg
sub
and
mov
sahf
push
scas
fchs
dec
iret
jg
jecxz
in
dec
cmp
xor
adc
dec
sbb
jne
fst
and
les
inc
test
iret
neg
cdq
test
pop
add
push
lahf
rcl
and
push
int3
repnz
popf
jg
mov
xor
lods
outs
arpl
fisub
inc
add
xor
add
or
loopne
and
aad
imul
jo
aaa
jecxz
(bad)
fbstp
dec
ret
xchg
test
sbb
mov
into
jle
push
imul
loopne
mov
ins
std
xchg
movs
imul
mov
ret
mov
push
hlt
cmp
push
loopne
lds
fnstenv
aad
ss
sub
ficom
sub
nop
mov
mov
push
(bad)
sub
mov
imul
xor
aam
sbb
iret
or
sbb
and
inc
jle
jno
mov
hlt
mov
and
or
test
adc
push
ja
aad
(bad)
call
jp
gs
pop
in
in
sbb
ror
sahf
dec
out
mov
dec
fnstsw
jg
cmps
in
pop
es
mov
or
pop
mov
push
cmp
mov
xchg
enter
push
sbb
cmp
rcr
into
in
enter
iret
fld
jl
pop
mov
jmp
jnp
add
scas
shl
jae
xor
and
push
js
scas
retf
and
dec
into
xchg
div
(bad)
(bad)
xor
add
push
hlt
repnz
movs
in
or
lahf
outs
ja
xchg
lods
loope
lods
cmps
ss
adc
adc
pop
sub
sbb
mov
jno
push
adc
sbb
cmps
xchg
jne
pop
add
xchg
sub
loope
fsub
jmp
mov
shr
jmp
push
mov
sbb
pop
adc
lea
fs
mov
jo
sbb
jbe
push
bound
aad
inc
mov
inc
dec
inc
sub
js
pop
jle
out
dec
leave
add
dec
fild
sbb
dec
pop
push
ins
in
dec
loopne
push
mov
and
imul
stc
jge
add
retf
cmp
cs
lods
test
or
push
int3
mov
mov
mov
jp
jne
xchg
jecxz
lods
mov
stc
mov
iret
icebp
jl
mov
jmp
xchg
adc
shl
mov
jmp
mov
cs
or
hlt
jnp
and
into
int3
xor
mov
test
push
bound
ret
cmp
ins
inc
iret
test
mov
ret
clc
or
psrlq
adc
sbb
out
std
and
or
mov
push
jbe
lods
loop
shl
jno
cld
xchg
fild
mov
pop
das
add
push
dec
xchg
lock
inc
out
ficom
add
std
sbb
shl
sbb
int3
xchg
mov
sub
pusha
scas
pop
xchg
xchg
add
ss
mov
rol
cmp
jp
ins
movs
pop
jmp
frstor
aam
and
imul
or
test
dec
ins
push
mov
cmp
(bad)
add
adc
xchg
xchg
(bad)
jns
push
xchg
pop
in
lods
cmp
pop
or
jmp
sub
and
adc
pop
mov
test
mov
dec
shl
push
pop
pop
sbb
jns
mov
xchg
loop
ins
pmaxsw
jp
adc
sbb
mov
push
dec
inc
add
mov
cmc
and
adc
out
push
or
pushf
mov
das
loope
push
lods
imul
scas
rol
pop
inc
shr
mov
mov
popf
cmp
cmps
mov
in
jle
scas
jnp
mov
out
pop
dec
adc
mov
test
mov
pop
pop
not
xor
mov
pop
xor
add
sub
dec
inc
xor
push
xor
lods
adc
cli
jns
ins
fsubr
dec
push
sub
(bad)
and
ret
xchg
shr
push
push
ja
and
inc
mov
add
jl
(bad)
or
mov
mov
shr
jecxz
sbb
and
sub
push
xchg
icebp
outs
or
sahf
mov
aam
(bad)
dec
dec
jmp
adc
pop
xchg
mov
or
fwait
push
(bad)
cs
imul
lds
scas
ret
cli
cmp
sub
aad
mov
adc
inc
xor
(bad)
xchg
pop
imul
jns
nop
es
cmp
(bad)
sti
and
stos
mov
jns
sahf
ror
or
(bad)
jns
aam
add
sub
adc
in
xchg
jge
loop
push
cmp
push
aaa
jl
jmp
dec
fistp
stos
dec
pop
xor
rcl
xor
clc
xchg
pusha
fistp
jecxz
pop
out
xor
fidiv
repz
push
jae
jl
mov
mov
inc
int
jg
sahf
imul
movs
inc
call
scas
neg
xor
xor
and
fwait
push
pop
mov
pop
fimul
mov
mov
inc
cli
inc
adc
sbb
xchg
sbb
inc
and
sbb
mov
dec
mov
dec
sar
retf
popf
jae
sub
call
push
fwait
(bad)
cmc
jmp
sub
mov
xchg
stc
mov
lds
sti
cmp
inc
jo
and
aaa
jbe
loopne
imul
sbb
fist
jns
pop
mov
pop
inc
push
in
out
out
retf
jnp
pop
js
add
xor
fidiv
movs
je
scas
int
movs
xor
cmp
push
jl
mov
jo
ds
imul
pop
pop
retf
cmp
pop
xlat
int
repnz
in
pop
inc
mov
mov
in
test
pop
inc
test
push
imul
pop
cdq
mov
in
mov
sahf
and
pop
aaa
xchg
in
rol
xor
div
sti
ss
adc
push
pusha
or
jmp
iret
fldz
(bad)
loop
mov
das
retf
in
sub
outs
lods
sub
cmps
out
adc
cdq
lds
fsubp
push
test
adc
xchg
lock
xlat
and
mov
inc
lock
call
fist
scas
adc
mov
or
imul
cmps
cmps
xor
xchg
mov
sub
rcr
inc
jle
rcl
xor
xchg
sbb
or
inc
adc
sub
xor
jg
mov
lods
push
mov
aas
sub
mov
scas
psubd
cdq
ret
ret
add
mov
push
fxam
jle
stos
sbb
(bad)
dec
pop
aaa
jmp
mov
xor
dec
xchg
in
movs
jo
mov
push
nop
and
out
ror
sub
sub
test
adc
xchg
cmp
pop
xor
rcl
sahf
fstp
add
loopne
es
iret
mov
xchg
mov
into
xor
mov
push
popf
movs
fisub
mov
cmp
out
add
xchg
mov
jmp
adc
xchg
xchg
cs
scas
jne
add
movs
dec
clc
sub
cmp
jecxz
xchg
add
neg
mov
stos
add
cmps
mov
add
call
inc
adc
inc
mov
daa
jo
pop
popf
pop
mov
repz
(bad)
movs
sbb
stos
sbb
inc
sbb
sbb
fstp
xchg
mov
loopne
retf
mov
test
dec
pop
test
fcmovnu
in
mov
rcl
jge
inc
cmc
cld
call
xchg
add
mov
cmps
sti
rcr
push
or
xor
pop
stos
or
mov
xchg
sub
(bad)
lahf
ds
pop
mov
(bad)
shl
add
inc
dec
jge
adc
dec
mov
call
mov
nop
pop
push
pop
and
das
inc
xchg
jne
aas
add
sub
push
hlt
inc
mov
dec
jae
(bad)
loopne
mov
xor
in
jmp
push
cmps
dec
inc
mov
ret
dec
cwde
arpl
and
jns
fist
mov
or
mov
xor
call
mov
int3
sbb
pop
aas
mov
iret
cld
cmp
ret
pop
(bad)
mov
ret
sub
push
xchg
ret
mov
retf
pop
jne
add
push
adc
fcmovnb
pop
mov
call
and
pop
popaw
sbb
test
jae
outs
mov
or
call
ret
in
jnp
mov
sbb
add
icebp
clc
stos
popa
(bad)
xchg
rol
xor
jmp
stos
sub
mov
xor
mov
retf
xlat
dec
das
ret
dec
shl
jle
sbb
shr
inc
stc
ja
movs
xchg
int3
mov
pop
lods
mov
cmp
aas
sub
mov
or
adc
fst
pop
test
push
fprem1
(bad)
jmp
xchg
xor
xor
add
cmps
sbb
(bad)
repnz
popa
(bad)
icebp
cmp
adc
jmp
retf
imul
cwde
loop
sar
stos
fsubr
inc
mov
mov
(bad)
cdq
(bad)
fsubr
call
dec
in
(bad)
call
mov
in
cmps
pop
imul
mov
repz
fucom
mov
addr16
out
and
(bad)
out
movs
xchg
leave
call
out
lods
not
add
mov
add
sahf
inc
in
dec
jp
das
inc
dec
xchg
inc
push
dec
test
fbstp
add
xor
in
jl
sub
outs
mov
push
xor
mov
xor
fdivr
mov
xor
add
ds
lahf
mov
jg
jmp
sub
push
into
(bad)
bndldx
repz
clc
mov
in
aam
aad
jl
retf
fsubr
gs
mov
mov
sub
mov
add
push
aam
ins
pop
fbstp
mov
cmp
(bad)
cld
lock
mov
sub
inc
jno
out
loop
mov
shr
xchg
cmc
into
jge
xchg
aas
loope
adc
cmc
outs
neg
jns
call
jne
sub
xchg
xor
add
inc
cmps
push
adc
pushf
push
sti
mov
xlat
xor
js
arpl
ret
jo
jne
(bad)
mov
dec
aaa
mov
cmp
xor
add
mov
in
ins
fwait
mov
in
mov
jle
pop
clc
sbb
pop
adc
in
fxch
jb
mov
(bad)
bound
test
mov
xchg
jmp
fnstenv
cmp
jne
push
hlt
bound
aas
and
inc
mov
loopne
push
nop
les
inc
adc
mov
push
xor
aaa
hlt
sbb
sbb
js
rol
ins
xlat
push
ins
(bad)
stc
jno
imul
adc
into
ins
daa
ins
jnp
xor
ins
dec
jno
mov
mov
cmc
sub
adc
pop
loope
loopne
std
scas
outs
std
addr16
add
jns
mov
sbb
mov
xchg
sbb
inc
inc
cld
sub
(bad)
pop
jmp
add
stc
mov
or
sub
cmps
and
out
mov
clc
nop
(bad)
mov
out
loopne
sub
daa
frstor
cmp
and
push
xchg
mov
jmp
inc
push
hlt
cmp
jl
mov
fsubr
repnz
mov
aas
mov
(bad)
jl
xchg
stos
xor
adc
inc
mov
jnp
adc
jmp
inc
push
inc
jb
data16
into
xor
push
not
out
mov
retf
repnz
mov
dec
sub
push
xchg
hlt
test
push
(bad)
and
inc
sahf
out
dec
cmp
std
jp
lds
outs
cmp
out
in
ja
xchg
jae
rcr
or
mov
push
jecxz
imul
(bad)
mov
xor
out
xor
jmp
push
adc
lods
imul
sbb
adc
mov
cs
sbb
popf
push
and
shl
pop
sahf
fcomp
push
gs
dec
sti
xchg
pop
dec
jle
enter
inc
and
inc
in
scas
icebp
sti
test
mov
xor
sti
xor
inc
inc
jbe
sti
sbb
pop
push
loop
and
cmp
mov
pop
sub
sub
lods
dec
in
scas
in
adc
xchg
lds
jg
jb
test
xchg
gs
mov
mov
cdq
dec
bound
call
fld
aaa
imul
ret
test
xchg
mov
pop
xor
ror
fisttp
ins
leave
or
out
add
sub
mov
je
sub
jns
and
xchg
push
rcl
mov
sub
push
out
daa
arpl
mov
xor
jge
lea
ret
movs
rcr
cli
push
pop
or
(bad)
fild
jmp
movs
sti
pop
ret
ins
cld
repnz
sbb
int3
dec
in
repnz
pusha
mov
sub
push
fcomp
int
xchg
push
jmp
or
xchg
pop
inc
push
repz
loope
mov
push
mov
push
out
sub
sahf
mov
mov
in
mov
sbb
fcmovne
mov
fsubr
inc
xchg
loopne
lea
push
pop
out
stos
aad
fdivr
push
call
add
xlat
cmp
pop
popf
dec
fdiv
push
sub
in
repz
mov
sbb
bnd
and
xchg
movs
push
pop
not
mov
aas
xchg
xchg
jno
mov
jb
sub
sbb
add
(bad)
add
sti
lods
in
or
mov
xor
fwait
(bad)
inc
(bad)
adc
into
jo
sub
sub
mov
fiadd
leave
mov
sub
sahf
sbb
inc
cmp
cwde
inc
mov
jg
ror
mov
(bad)
pop
xor
sub
adc
aam
jge
jl
imul
adc
div
add
add
fmul
mov
fcomp
mov
jnp
and
popa
test
pop
out
stc
mov
ins
iret
gs
xchg
arpl
test
mov
stos
dec
sub
loope
inc
test
mov
(bad)
mov
fist
adc
out
lock
lea
push
pop
mov
out
and
jnp
rol
dec
loope
pop
cmp
push
mov
mov
xchg
jmp
cmc
sbb
xor
xor
jnp
ror
mov
les
into
mov
cmp
mov
push
je
mov
or
leave
sub
mov
addr16
repz
pop
ja
cmp
inc
sub
xor
xor
inc
ret
mov
add
jg
add
pop
leave
test
cli
and
(bad)
jmp
enter
xchg
pop
fsub
add
and
push
xchg
mov
xchg
or
arpl
cmp
out
in
dec
aad
sub
ins
jo
push
mov
ja
into
xor
mov
cdq
inc
xor
in
jmp
or
pusha
cmps
sbb
cmp
addr16
fnstsw
in
pop
and
or
and
pop
dec
pcmpeqw
mov
jp
cld
in
je
or
(bad)
or
setle
xchg
mov
mov
xchg
sbb
add
cmp
mov
sbb
aad
scas
xor
xchg
cmp
loop
lods
jg
aam
les
dec
jg
xor
mov
in
retf
sbb
adc
iret
cmp
lods
jp
loope
xor
push
(bad)
out
sti
jno
fisttp
xor
hlt
cmps
push
mov
mov
jne
mov
xchg
pop
push
loop
pop
pop
outs
mov
cwde
push
arpl
push
rcl
in
jne
stos
adc
imul
dec
in
fimul
enter
push
fcomp
enter
mov
add
xor
std
std
mov
stos
xchg
ucomiss
sub
and
aad
outs
or
pushf
add
cld
xor
or
and
int3
test
(bad)
pop
mov
in
out
add
pop
mov
mov
jg
or
sbb
scas
out
movs
xrelease
jae
popf
movs
sar
lds
xchg
add
adc
jg
mov
stos
mov
jge
(bad)
fcomp
push
jae
jb
and
cmc
retf
sub
dec
adc
out
test
in
cmp
xchg
sbb
cmp
icebp
es
push
sbb
call
adc
adc
push
leave
mov
daa
not
maxps
call
jns
cdq
fisub
push
mov
addr16
fucomip
mov
out
movs
mov
or
xchg
dec
adc
or
mov
cli
aam
mov
and
rcr
add
aad
inc
addr16
pop
cmc
push
ds
(bad)
lahf
sbb
fldcw
add
add
and
inc
xor
call
fiadd
test
sbb
repz
fwait
mov
push
movs
dec
fcmovnbe
or
jge
clc
(bad)
mov
sub
xor
adc
stc
stos
pushf
cmp
jne
dec
and
dec
(bad)
cmc
iret
jae
pop
mov
mov
lods
add
dec
and
test
ss
mov
or
into
adc
fsubr
es
cmp
movs
jns
jmp
cmp
repz
xor
cli
loopne
sbb
xchg
je
stos
mov
sbb
outs
sahf
mov
jmp
xchg
cmc
pop
mov
jge
lds
ror
add
sbb
xor
jo
xchg
cmc
mov
ins
iret
jo
test
xor
(bad)
retf
sbb
pop
push
jo
mov
retf
jmp
pop
mov
inc
cmp
retf
sub
mov
pop
dec
mov
adc
sbb
cmc
ins
mov
les
push
outs
addr16
gs
cdq
jae
sub
into
mov
inc
dec
xchg
nop
sub
out
push
cdq
xchg
push
cmp
mov
js
cmp
adc
in
and
inc
mov
in
mov
jmp
xor
aaa
inc
adc
icebp
inc
shl
push
das
scas
lahf
inc
inc
das
add
mov
std
push
mov
inc
xor
push
xor
js
nop
sahf
jns
cmc
mov
pop
lock
out
leave
mov
out
cmp
jb
stc
aad
jp
lea
call
sbb
fimul
mov
jmp
add
mov
push
mov
loope
pop
or
jle
je
jmp
stos
test
xchg
inc
xchg
jge
(bad)
pushf
pop
fdivr
dec
add
inc
sbb
pop
das
in
pop
inc
mov
and
sub
xor
mov
jmp
sahf
cmp
in
into
inc
xchg
inc
aas
or
sub
popf
ret
imul
sbb
call
xchg
or
lods
mov
inc
jmp
imul
pop
aam
add
gs
in
out
jmp
xchg
pop
add
test
ret
adc
pusha
ja
sti
jo
sbb
mov
xor
sbb
xchg
aam
mov
out
rol
aas
movs
jecxz
xlat
cdq
and
jno
ins
aas
retf
mov
sbb
cmp
rol
sub
call
cmp
pushw
pop
xchg
pushf
sub
ins
call
or
xchg
int3
push
inc
sub
aad
sbb
mov
loop
inc
jmp
cmp
dec
cli
out
adc
fwait
rol
mov
xchg
pop
mov
fnstcw
pop
(bad)
adc
test
lock
aaa
int3
dec
outs
test
push
inc
(bad)
cmp
mov
stos
imul
pop
retf
adc
inc
pop
test
xchg
jae
scas
outs
std
int3
aam
pop
ss
imul
pop
xchg
or
stos
jno
hlt
jo
mov
sbb
test
add
pop
ror
popf
jp
cld
sub
mov
push
retf
or
daa
pop
push
xor
scas
xor
jmp
mov
es
xor
gs
sahf
hlt
call
sti
ds
stos
scas
dec
pop
lahf
movs
dec
sub
(bad)
fisttp
sbb
les
xor
jnp
out
push
mov
pusha
or
xchg
add
repz
sbb
or
xchg
add
or
jb
icebp
jns
(bad)
in
mov
not
shl
xchg
mov
scas
cmps
stos
leave
ds
jno
inc
and
jl
arpl
movs
fld
fs
lahf
or
jp
aas
inc
outs
loopne
scas
pop
adc
jbe
push
hlt
in
mov
pop
inc
xchg
and
movs
push
stos
test
repz
mov
scas
dec
mov
cwde
pop
retf
or
and
pop
in
sub
ss
mov
cmp
stos
push
jnp
cmp
lods
jmp
ret
and
and
mov
cmp
in
inc
hlt
or
add
mov
mov
sbb
inc
fbld
cmp
call
hlt
push
sub
arpl
pop
(bad)
xlat
cwde
shr
add
lods
cs
mov
mov
mov
sub
jmp
(bad)
fld
cmps
xchg
pop
jge
jno
xor
mov
cmp
ja
dec
cmp
cmp
pop
ret
loop
lods
test
into
sub
rcr
push
inc
inc
js
fdiv
stos
or
retf
add
dec
loopne
icebp
jle
fistp
inc
add
or
pop
call
cld
cmp
imul
jecxz
xchg
adc
adc
add
and
shl
sti
xor
dec
lods
adc
xchg
pushf
push
pushf
add
mov
xor
jge
outs
xor
nop
or
dec
in
test
lea
out
cmp
push
dec
scas
push
pop
mov
cmp
fbstp
sbb
inc
mov
imul
sub
mov
into
push
int3
adc
push
gs
jno
add
test
adc
mov
add
jmp
jge
xchg
mov
fld
(bad)
cmc
pop
and
retf
lods
cdq
sbb
(bad)
out
or
data16
(bad)
loopne
idiv
(bad)
call
cmp
dec
and
mov
jno
and
aad
jo
sub
jb
fild
neg
pushf
fdiv
sbb
gs
sbb
pop
adc
adc
ins
add
call
ins
lods
jecxz
xchg
mov
dec
aaa
dec
push
ret
(bad)
sbb
mov
jmp
mov
inc
arpl
lahf
inc
mov
mov
mov
(bad)
dec
je
and
mov
push
pop
push
rcr
ins
inc
dec
and
adc
jns
sub
mov
repnz
adc
leave
dec
jae
mov
fist
jae
mov
mov
inc
xchg
push
xor
inc
adc
pop
mov
sti
jmp
jg
shl
inc
and
into
fst
movs
push
mov
mov
mov
sub
inc
ret
mov
js
cmp
idiv
cs
mov
adc
push
out
fwait
mov
shr
test
stos
adc
pop
enter
fs
cli
sahf
addr16
dec
push
xchg
or
xchg
bound
shl
clc
test
lods
sub
pop
lea
xor
(bad)
aad
mov
ret
jp
fist
(bad)
mov
mov
mov
dec
jo
ret
mov
jb
mov
aam
aad
xor
into
call
or
mov
repnz
sub
mov
inc
stos
mov
out
xchg
inc
lods
mov
add
int3
pop
inc
dec
scas
int
fisub
mov
test
aam
pop
mov
and
sub
jmp
(bad)
xor
cs
popf
push
and
mov
lods
movs
mov
and
repnz
dec
jg
lahf
rcr
(bad)
loope
or
loop
mov
jle
stos
out
rcr
xor
les
not
arpl
test
mov
enter
sbb
add
xor
lds
arpl
(bad)
jle
nop
data16
add
stos
pop
pop
shr
dec
jl
hlt
sbb
outs
jo
xor
movs
fdiv
aas
ja
mov
add
movs
adc
and
cmovg
es
add
into
retf
test
(bad)
aam
les
mov
std
retf
jbe
sar
gs
sti
add
das
popa
(bad)
les
sub
push
in
pop
rcl
sub
stc
mov
xlat
ret
arpl
and
mov
ret
movs
cwde
sbb
iret
stc
xchg
cdq
sahf
or
push
mov
lahf
sub
add
jnp
loop
xor
(bad)
jecxz
and
mov
sbb
js
(bad)
shl
pushf
bound
les
mov
pop
pop
or
adc
sar
push
push
jmp
and
in
pop
jnp
pop
test
mov
stos
fst
repz
mov
mov
stos
adc
int
sbb
xor
dec
(bad)
je
mov
push
fwait
(bad)
loope
sbb
je
mov
sbb
ds
lock
jle
repnz
movs
mov
sbb
loopne
xor
push
mov
jmp
(bad)
mov
cmp
out
mov
mov
mov
pop
pop
add
jne
mov
mov
mov
xor
sbb
retf
pcmpeqb
mov
daa
div
xchg
out
push
es
ins
xchg
fisub
pop
pusha
aad
mov
(bad)
sub
out
inc
outs
jae
in
xchg
gs
jb
fisubr
pop
adc
jl
xchg
inc
and
clc
push
loop
fisub
add
icebp
aam
test
push
cli
ds
jno
pop
jmp
mov
fs
repnz
imul
popa
test
mov
mov
sub
mov
fisttp
xor
jp
jno
sub
mov
jg
and
dec
add
or
test
call
jmp
push
push
inc
pop
or
mov
jecxz
cmps
fmulp
pop
fidivr
mov
in
stos
pop
add
push
xchg
shl
push
or
xchg
aaa
rcr
test
js
jmp
mov
cmps
repnz
rcr
fdivp
rcr
cmp
fdiv
popf
mov
loope
jge
div
sbb
adc
inc
mov
in
dec
dec
and
cmp
push
addr16
(bad)
cmp
popa
sub
jbe
ja
mov
mov
lods
ror
out
dec
xchg
add
add
mov
sar
ja
je
add
xchg
iret
div
ds
lahf
stc
sub
sub
sub
(bad)
cmps
mov
jg
xchg
push
and
xlat
inc
gs
push
push
shl
out
dec
(bad)
mov
inc
in
lea
(bad)
cmp
xchg
mov
push
adc
mov
sbb
cmps
outs
cmp
jmp
(bad)
loop
adc
das
lea
cs
pusha
jne
push
cmps
aas
lock
fdivp
adc
sub
fstp
std
adc
daa
jae
dec
jge
retf
popa
scas
call
popa
mov
jp
retf
dec
add
mov
cs
jae
in
out
cld
pop
xlat
ins
out
jmp
jnp
in
call
ret
std
rol
push
sbb
in
shl
mov
or
xchg
add
popf
mov
pop
sar
cmp
push
psrlw
fisub
ins
pushf
icebp
mov
inc
ret
int3
aas
cmps
push
aad
and
or
inc
mov
push
xor
test
mov
in
push
stos
fimul
mov
idiv
cmps
sub
daa
push
repz
retf
daa
lahf
jle
mov
neg
or
addr16
xchg
fidiv
(bad)
mov
cwde
arpl
arpl
jnp
fistp
sahf
fisttp
sbb
cmp
int3
xor
iret
lods
mov
sbb
(bad)
jl
and
push
test
bound
lods
imul
cmc
pop
ja
xor
(bad)
loope
imul
jae
fldcw
jb
lock
loop
ficomp
and
mov
sbb
adc
push
mov
xchg
fimul
add
fimul
mov
sub
imul
je
xor
pop
add
pushf
sbb
test
data16
data16
adc
push
imul
retf
xchg
cwde
xlat
or
or
pop
inc
daa
or
into
cmp
cmps
outs
int3
add
cmp
test
and
and
fld
push
ret
loopne
xor
cmps
sbb
mov
test
shr
or
sub
fsub
fstp
popf
scas
add
addr16
pop
stc
jnp
ffree
jl
mov
lock
in
rcr
dec
inc
daa
sub
lods
aas
mov
push
sbb
gs
or
dec
push
pop
je
or
adc
mov
fs
movs
icebp
dec
ds
out
adc
jmp
test
test
inc
or
lea
pop
push
inc
adc
xor
cld
outs
cmps
leave
das
call
jbe
push
pop
lahf
jae
aaa
pop
es
and
bound
inc
inc
add
lods
mov
stos
scas
dec
repz
xchg
dec
sbb
mov
or
aaa
pop
dec
mov
inc
sti
and
scas
dec
icebp
pop
ss
in
push
clc
adc
pop
and
push
push
sub
mov
or
ficomp
mov
(bad)
into
push
cmc
xor
push
mov
(bad)
(bad)
xchg
mov
xchg
test
and
call
xchg
aaa
dec
rol
cmp
push
jecxz
mov
pop
add
lods
adc
cwde
jae
jo
mov
fidiv
mov
(bad)
jle
sbb
imul
sbb
stos
pusha
adc
mov
cmps
outs
sbb
stos
push
mov
outs
adc
pop
bound
jns
pop
push
fisttp
and
pop
jmp
bound
xchg
stc
cmps
push
ins
push
nop
jbe
pushf
loop
push
mov
mov
sti
sbb
cvtdq2ps
mov
ja
ds
js
jne
sub
cmp
add
icebp
jns
cmp
test
call
lods
and
jnp
lods
(bad)
aad
xor
cs
sub
cmc
or
(bad)
out
sub
leave
outs
mov
stos
push
pop
push
sti
add
jp
xor
call
mov
push
cdq
mov
les
add
mov
mul
loopne
icebp
call
cs
pop
push
xchg
mov
cld
xlat
jo
test
cld
adc
ret
adc
mov
xchg
clc
bound
(bad)
loope
aam
les
dec
push
out
lods
popa
cmova
popa
scas
(bad)
retf
cmp
jns
dec
jbe
imul
sub
cld
movs
mov
add
ds
into
xor
inc
(bad)
mov
xchg
mov
sahf
inc
cli
test
ds
xchg
and
je
rcl
int
loope
jae
jl
xchg
pop
addr16
sub
cmps
jle
dec
das
fild
add
jo
adc
dec
inc
push
jne
aad
loope
(bad)
out
into
add
adc
inc
inc
or
sar
imul
or
sbb
mov
cli
movs
ja
xchg
fild
inc
cs
out
and
sub
loope
pop
cmp
arpl
sbb
mov
dec
(bad)
dec
enter
cmps
inc
jmp
or
mov
xchg
or
push
mov
pop
in
(bad)
adc
out
iret
mov
fidivr
pushf
div
in
lea
pop
aaa
outs
sub
sbb
inc
xlat
dec
cmps
ficomp
mov
sbb
sti
adc
repz
fimul
xchg
sbb
retf
sub
or
(bad)
pop
sahf
jb
mov
or
inc
mov
icebp
test
fnstenv
fsubrp
scas
or
fwait
cdq
call
ret
aad
pop
mov
jmp
jae
xchg
addr16
rol
mov
xor
jae
inc
mov
and
sti
scas
imul
shl
outs
pop
mov
jl
fsubr
movs
jp
fidivr
test
cmp
sub
xor
mov
lock
ds
jo
cmp
add
dec
int3
mov
(bad)
bound
xchg
sub
xlat
test
push
sbb
loopne
out
jb
leave
xchg
or
xor
adc
cwde
imul
mov
mov
sbb
loopne
mov
or
mov
ret
jecxz
test
push
jno
push
add
or
scas
xchg
xlat
xchg
push
sub
in
sub
and
sub
xor
jmp
inc
lds
mov
dec
jl
(bad)
push
sub
add
imul
std
inc
rcl
cmps
sbb
mov
xchg
imul
scas
aad
and
mov
mov
(bad)
adc
ss
rcl
stos
out
stos
and
and
mov
jp
xchg
mov
es
push
ins
and
adc
jmp
or
into
icebp
dec
pop
cld
adc
jae
mov
setl
inc
ss
setno
cmp
or
shr
mov
pop
dec
mov
mov
pop
add
mov
cmp
cld
inc
retf
mov
pop
cmc
mov
xor
mov
cmps
or
push
mov
ja
push
std
int
jae
imul
repnz
in
sub
sub
cdq
lahf
sub
jle
das
cmps
push
dec
push
or
sub
ficom
js
movs
lods
jp
bound
retf
cld
(bad)
pop
sbb
mov
pop
enter
jge
mov
repz
fisttp
into
sbb
enter
repnz
jno
sbb
mov
hlt
xchg
or
cmp
mov
stc
jno
in
lods
inc
pop
mov
jmp
inc
push
jle
push
jmp
into
mov
add
dec
dec
dec
or
stc
pop
and
sbb
jl
mov
sbb
enter
push
mov
or
data16
fmul
adc
call
jmp
mov
mov
or
sub
ins
push
xchg
mov
iret
enter
loope
pop
cmps
xchg
or
or
adc
push
sub
into
(bad)
int
movs
sub
push
xor
mov
call
jp
into
(bad)
xchg
mov
dec
sbb
sub
inc
(bad)
adc
outs
pop
adc
rcpps
xchg
mul
xchg
hlt
push
mov
test
sbb
out
call
xchg
stos
cli
fadd
mov
pop
inc
cmp
(bad)
jp
rcl
popa
nop
push
out
xor
popf
inc
inc
sbb
inc
mov
dec
jnp
out
cmps
push
daa
lods
out
mov
mov
sbb
leave
cmp
ror
inc
jae
xchg
mov
in
mov
push
(bad)
dec
and
adc
sahf
adc
xchg
mov
cmp
sub
in
cmps
and
inc
and
movs
outs
cwde
lea
ds
inc
jecxz
xor
icebp
dec
sbb
lock
cwde
mov
sbb
dec
mov
xchg
mov
or
cmp
lds
mov
mov
mov
dec
sub
adc
adc
dec
push
adc
sub
imul
test
stos
out
pop
xor
and
movs
mov
add
add
loope
sub
pop
int
inc
cdq
adc
les
sbb
or
cdq
jmp
pop
enter
inc
adc
inc
ds
enter
pushf
fs
ss
repz
jno
or
cdq
cwde
dec
sub
pushf
fistp
sub
xchg
aas
and
sub
xor
aad
pop
call
or
cwde
and
loopne
daa
xor
xchg
dec
mov
das
mov
dec
sbb
mov
jge
sub
and
out
pop
std
jle
mov
ret
arpl
push
call
add
repz
pusha
push
jecxz
ret
xor
push
inc
mov
aas
mov
push
xchg
je
retf
das
push
ss
xchg
mov
std
jecxz
lahf
add
data16
pop
aaa
xchg
xor
dec
out
cmps
out
cmp
adc
fwait
lods
aaa
xchg
icebp
jl
dec
sbb
je
mov
cwde
out
es
std
stos
lods
dec
inc
ret
and
xor
faddp
pop
xor
sbb
out
dec
push
out
cmc
sbb
sbb
jae
add
test
loopne
test
jae
or
inc
sub
fld
fsubr
xor
enter
inc
loop
sbb
jg
test
retf
dec
adc
push
push
sar
stc
lds
dec
fwait
nop
cmc
add
pop
jnp
adc
in
ds
pop
retf
add
or
dec
pop
push
jmp
aam
cmp
or
loop
and
cld
test
test
jl
mov
mov
add
mov
adc
lahf
sub
int
jecxz
dec
data16
jnp
jmp
inc
cmova
inc
and
int3
push
cld
fcomi
sub
mov
movs
sub
sbb
mov
and
js
sbb
sbb
push
lock
in
fmul
pop
fld
sub
in
into
ins
das
(bad)
adc
in
mov
cdq
xchg
jg
jl
nop
mov
stos
retf
movs
jg
mov
jl
jb
fisub
jae
pop
jae
mov
add
sub
fmulp
mov
dec
lock
(bad)
adc
(bad)
mov
add
push
test
pop
cmps
ret
(bad)
nop
mov
sub
sub
mov
jae
(bad)
cli
inc
aad
xchg
lods
mov
test
inc
push
(bad)
js
aad
loop
call
xor
pop
int3
pop
jecxz
mov
je
dec
inc
or
in
fidiv
arpl
xchg
cmps
les
sahf
jmp
add
arpl
sub
out
stc
or
sahf
out
mov
pop
mov
js
(bad)
fs
ins
mov
push
mov
jg
and
xor
xchg
enter
mov
daa
push
ss
dec
xchg
pop
shl
push
pop
pop
and
push
mov
into
fcmovnb
push
mov
out
jnp
mov
aas
sbb
sbb
jns
dec
cmps
cs
int
stc
cld
mov
les
out
loope
sub
pop
fs
mov
inc
xchg
inc
cmps
retf
iret
mov
vmovhpd
mov
gs
ds
gs
add
ret
cmp
call
jmp
rol
cmp
jl
dec
push
loop
ret
dec
ins
cmp
sti
gs
(bad)
pop
retf
dec
daa
mov
loop
push
cmps
xor
xchg
arpl
dec
in
sub
dec
std
push
inc
cmp
adc
and
inc
test
push
mov
mov
leave
add
aas
cmp
ss
dec
inc
rcr
cdq
or
and
loop
in
xchg
test
xor
cmp
mov
movs
frstor
enter
int3
jmp
push
ds
aas
nop
add
popa
pusha
mov
and
cs
mov
or
mov
std
and
jge
sbb
in
pop
out
ins
inc
das
sbb
lds
rcr
xlat
in
ffree
or
push
and
cli
xlat
pop
into
pop
test
das
leave
cmps
lock
inc
cmp
xchg
mov
push
jge
mov
je
adc
jb
hlt
hlt
dec
int
push
cmp
ins
ds
sub
cmp
arpl
not
aas
jl
jmp
loope
inc
adc
mov
xchg
lods
lods
shr
scas
push
xchg
push
mov
int3
ret
inc
nop
ror
pop
mov
dec
iret
not
sbb
push
aas
mov
hlt
pop
test
dec
fistp
mov
(bad)
sbb
enter
neg
scas
lods
jmp
cmp
loopne
and
and
ret
fimul
das
add
and
mov
and
out
add
std
cmp
dec
push
dec
jp
outs
or
(bad)
jl
or
xchg
sbb
sub
cmps
dec
data16
mov
dec
mov
pop
int
(bad)
aaa
das
push
mov
pushf
jle
out
cmps
xchg
add
sbb
div
frstor
stos
cmp
dec
mov
into
and
or
pop
jmp
jmp
sar
std
pop
inc
dec
add
pop
push
loopne
and
sbb
in
mov
shl
sub
outs
inc
repnz
ret
lock
inc
xor
sub
jbe
pop
repz
(bad)
scas
inc
adc
ins
inc
leave
fidiv
fs
cli
mov
add
dec
(bad)
std
mov
enter
push
shld
jb
scas
or
icebp
jbe
lods
shl
adc
xor
pop
ror
jo
adc
jnp
sbb
cli
pop
mov
stos
fistp
or
leave
ret
mov
in
adc
and
pop
sub
in
add
jle
adc
in
mov
(bad)
stos
xlat
outs
inc
dec
sub
sub
and
xor
xchg
inc
xchg
fsubrp
retf
daa
and
sbb
dec
or
mov
mov
mov
push
out
or
xchg
cmp
push
cmp
std
test
cmc
cmp
and
ins
sub
and
adc
imul
cmp
push
bnd
push
mov
sub
xor
push
outs
js
lea
adc
push
stos
or
add
pusha
xchg
fsub
jmp
cli
ins
shl
out
add
cmps
(bad)
mov
add
pop
dec
mov
jl
neg
loopne
pop
in
fiadd
nop
dec
fsub
shl
push
ret
xchg
adc
inc
jge
loope
into
mov
cld
or
jp
inc
mov
jb
fsub
clc
sahf
add
(bad)
mov
mov
cdq
arpl
pop
jne
and
icebp
call
xchg
xchg
jno
xchg
sub
dec
clc
adc
pop
or
ror
sbb
inc
call
mov
xchg
mov
pop
stos
jns
push
sub
jno
aad
mov
pop
jo
(bad)
jl
das
div
mov
and
aaa
inc
outs
inc
cmc
xor
fsubr
iret
cvtps2pi
dec
pop
mov
lahf
ss
into
sub
and
mov
dec
mov
jmp
fistp
push
push
jge
test
inc
mov
and
mov
mov
(bad)
(bad)
xor
or
aaa
jle
(bad)
pop
es
loopne
sbb
imul
fsubr
push
push
dec
push
pop
xchg
inc
sub
out
in
sub
mov
(bad)
(bad)
ins
sub
jae
std
cli
cmp
pop
sti
or
and
xor
call
ss
(bad)
and
cs
pop
push
jbe
adc
jle
enter
fwait
mov
movs
push
test
sahf
stc
ja
fistp
adc
test
inc
jns
iret
mov
scas
ret
(bad)
sti
xchg
pmulhuw
push
pop
retf
xchg
cwde
or
cmp
popf
nop
pusha
ins
movups
call
inc
std
pop
imul
fwait
lods
dec
movs
int3
lea
pop
mov
push
retf
es
pop
add
sub
jge
dec
outs
data16
jo
sub
push
or
fild
not
leave
loope
nop
lahf
push
pop
imul
stos
jl
fst
xor
fstp
outs
(bad)
xor
cmp
sbb
(bad)
sahf
cmp
push
repz
jle
dec
cli
mov
jae
fwait
adc
xor
mov
int
cmp
in
mov
mov
xor
out
xchg
inc
arpl
cdq
call
fsub
mov
mov
and
repnz
mov
mov
mov
xor
mov
inc
fs
addr16
dec
inc
icebp
push
test
add
sbb
test
fsqrt
pop
adc
mov
add
mov
jne
cmp
repz
inc
movs
xchg
inc
inc
mov
idiv
push
or
sahf
jae
add
adc
jns
test
(bad)
jae
mov
das
push
imul
or
push
imul
jecxz
movs
cmp
add
xchg
mov
and
sbb
xor
stc
pop
push
push
jmp
iret
js
ret
outs
inc
mov
jo
mov
jmp
(bad)
pop
add
loop
mov
mov
test
pop
inc
stos
movs
mov
mov
test
mov
test
lea
xchg
and
(bad)
call
or
push
dec
xchg
mov
jg
inc
scas
pop
add
fcom
cmps
push
push
cmp
retf
test
mov
pop
rcl
adc
int
fstp
stc
cli
or
retf
and
movs
clc
dec
je
dec
push
xchg
inc
daa
jmp
mov
push
clc
(bad)
mov
push
shl
and
dec
and
xor
pop
or
cmp
push
call
imul
int
jmp
dec
sbb
jne
add
data16
icebp
pop
push
add
sar
(bad)
leave
je
es
imul
mov
mov
nop
ret
xchg
fdiv
mov
adc
push
mov
cmp
mov
and
jae
push
inc
mov
movs
jge
scas
lock
push
int
xlat
inc
add
push
sar
retf
xlat
mov
add
cmp
mov
neg
jnp
mov
sti
mov
mov
clc
inc
xchg
ins
lea
aam
fisttp
out
pop
fistp
(bad)
and
xchg
sub
repz
sahf
mov
movs
inc
add
or
and
pop
inc
test
xchg
jnp
mov
push
push
lea
test
shl
dec
nop
sar
mov
sbb
shr
les
ret
dec
mov
popa
sub
aam
loop
xor
sbb
pop
in
add
adc
int3
outs
pop
in
and
stos
jns
gs
out
cli
fcmovne
pop
mov
gs
jno
mov
pop
add
adc
and
cmps
das
aad
test
fwait
and
push
jmp
loope
add
inc
gs
jae
pop
loopne
(bad)
scas
pop
pop
leave
or
mov
sbb
mov
mov
or
out
pop
adc
retf
jns
jno
cmp
lea
inc
scas
lds
sbb
lods
popf
aam
jl
in
mov
hlt
add
lahf
je
and
pop
stos
pop
jl
lahf
jnp
add
jne
dec
stos
push
inc
sub
pop
mov
pop
sub
sbb
les
xchg
cmp
mov
cmp
ret
int3
mov
push
or
xchg
mov
jnp
adc
rcr
push
push
retf
cmp
sar
int3
adc
mov
adc
and
inc
cmps
dec
retf
fidivr
mov
add
push
sbb
ss
and
add
mov
rol
pop
mov
adc
cmp
xor
mov
fcmovnu
arpl
aas
mov
or
mov
cmp
lahf
inc
push
sbb
rcl
xor
jge
es
cmc
pop
fsub
outs
arpl
fucomp
loopne
cmp
aad
or
stos
in
add
push
stos
or
mov
int
mov
push
lea
adc
inc
dec
push
dec
icebp
cmps
sub
ins
cwde
addr16
call
and
jmp
out
pop
les
sbb
lahf
scas
xor
fist
rcl
or
push
push
mov
rcr
pop
int
push
cli
pop
sbb
or
fidivr
dec
mov
fisub
popa
cmp
test
pop
nop
jnp
nop
dec
push
xlat
fdivr
xlat
jl
adc
mov
in
pop
gs
addr16
aaa
fist
jge
cmp
lds
mov
jle
fdiv
aam
add
mov
or
stc
pop
mov
cdq
and
mov
mov
in
movs
jb
lods
pop
fld
arpl
nop
sub
callw
retf
(bad)
out
jp
cmps
mov
lea
aam
rcl
cmp
sub
je
sub
pop
xchg
xchg
jmp
pop
leave
add
call
add
sbb
xchg
test
mov
pop
sub
dec
ret
cmp
jl
add
nop
cmp
arpl
retf
jl
mov
and
in
inc
jmp
dec
jmp
out
jecxz
pop
mov
cmp
retf
mov
popa
pop
daa
cdq
(bad)
rcr
lds
pop
sub
jmp
push
ja
cs
xor
jmp
sub
xor
stc
jecxz
push
rol
cld
fmul
nop
rcr
push
xchg
in
cmp
mov
xor
sbb
jp
jnp
fucom
idiv
xchg
sbb
stc
xor
push
xchg
xor
push
arpl
or
pop
nop
dec
fst
jmp
arpl
(bad)
xchg
mov
adc
mov
out
push
scas
iret
idiv
int3
or
cmp
fiadd
mov
cmc
popf
out
xor
pushf
xor
push
les
xor
adc
fisttp
mov
dec
push
mov
jbe
adc
sbb
into
repz
frstor
movs
sub
ins
imul
aad
sahf
dec
gs
jo
sbb
inc
add
ins
inc
dec
icebp
clc
push
pop
in
movs
push
or
cmp
and
into
xchg
enter
ins
push
push
retf
xchg
pop
fldenv
sti
out
movs
pop
mov
(bad)
pop
(bad)
push
in
and
cmp
or
xchg
dec
mov
cs
pop
pop
inc
rcr
cmp
adc
iret
or
sub
sbb
iret
es
adc
call
mov
cwde
sar
sbb
pshufw
mov
and
aaa
cmp
jg
adc
loopne
jnp
(bad)
mov
out
(bad)
nop
pop
gs
mov
sbb
scas
ror
(bad)
xchg
lock
pop
pop
ficom
dec
and
lods
xchg
mov
daa
sub
push
xor
dec
inc
sbb
rol
(bad)
aam
fnsave
pop
(bad)
dec
push
adc
push
inc
clc
jae
push
test
jecxz
stos
sbb
mov
aaa
cmp
into
test
xchg
xor
cmp
gs
adc
or
pushf
popf
rcl
addr16
dec
sbb
cs
xchg
dec
test
sbb
push
or
lods
dec
and
sbb
data16
js
jp
popf
out
xchg
retf
and
je
and
pop
inc
xor
mov
xor
ins
mov
fs
xor
sahf
sub
repnz
inc
dec
pop
in
int
pop
mov
test
dec
inc
(bad)
jmp
out
not
push
out
adc
push
out
xchg
xchg
or
adc
xor
gs
xchg
cmp
fiadd
xlat
pop
sub
xor
pop
push
pop
(bad)
jmp
xor
lods
iret
loope
cmps
jmp
or
push
push
nop
sbb
sbb
push
mov
cmp
add
cmp
pop
retf
cwde
test
in
stos
jb
mov
stos
push
ins
pushf
jecxz
test
inc
call
mov
push
leave
dec
sbb
shl
xchg
mov
adc
add
inc
and
out
and
sbb
into
push
shl
inc
fmul
aad
mov
aam
mov
clc
mov
not
(bad)
mov
outs
jo
adc
dec
sub
add
push
mov
pop
addr16
fcom
mov
pushf
mov
jle
int
out
pavgw
mov
movs
test
ror
inc
cmp
sbb
lock
jecxz
adc
xor
cmp
pushf
jo
jecxz
dec
mov
xor
test
jecxz
cmp
add
sbb
dec
sti
dec
imul
les
mov
ds
loopne
mov
outs
or
bnd
sahf
fstp
adc
lods
test
adc
cmp
nop
popa
aad
push
leave
sub
cmp
fisub
ret
mov
scas
pop
push
pop
repz
and
jbe
lea
(bad)
repnz
hlt
nop
icebp
sub
fidiv
fisub
rol
outs
xchg
repnz
gs
push
sbb
call
cdq
ror
sub
xor
ja
cdq
or
xor
cmp
adc
cs
or
push
movs
mov
int3
imul
cmp
(bad)
test
test
dec
popa
imul
dec
imul
push
fcomip
hlt
fucomi
pop
or
cmp
leave
cmp
into
push
add
mov
xchg
pop
loop
aaa
jmp
inc
cmp
or
scas
pop
cmp
adc
pop
imul
xchg
cmp
pusha
adc
mov
cwde
rcr
xor
(bad)
jmp
pop
push
pop
pusha
sub
inc
stc
pusha
mov
inc
xor
or
out
adc
xor
fwait
pop
mov
add
add
or
mov
fsub
xor
bound
cmp
scas
sbb
cmp
sbb
pop
dec
stc
sub
xchg
push
or
vmread
sub
dec
jmp
stos
aas
jb
test
sbb
into
sub
jmp
jle
mov
inc
cs
add
out
fild
and
mov
call
inc
pop
jg
mov
push
ror
and
adc
nop
mov
arpl
in
pop
sbb
repz
scas
jl
cmp
imul
pop
and
imul
mov
xor
pop
push
shr
adc
pushf
sbb
push
or
sub
ins
mov
jo
pop
inc
call
jae
pop
(bad)
scas
lea
je
fs
add
jo
adc
mov
mov
inc
mov
sub
add
push
mov
jl
mov
xor
adc
sahf
lds
jecxz
sub
push
lea
xchg
xor
imul
nop
and
inc
cmp
jmp
rcr
or
jmp
sbb
pusha
xchg
dec
push
lock
scas
dec
in
fstp
jno
dec
add
pop
(bad)
popf
arpl
add
sbb
push
push
push
add
pop
sbb
add
fisub
iret
in
sub
sub
loope
std
dec
inc
sub
mov
or
xchg
push
lock
jp
inc
jne
inc
sub
dec
jae
fnstenv
pop
jb
sahf
test
mov
jo
(bad)
mov
movs
mov
mov
and
sub
and
retf
or
or
sbb
mov
inc
push
cdq
icebp
push
and
jo
xchg
mov
mov
lock
in
je
test
ja
fst
jne
dec
repnz
mov
push
test
pusha
lods
ret
stos
mov
xchg
cs
iret
xor
mov
xor
enter
push
sub
mov
in
test
cdq
and
stos
imul
mov
rcl
and
hlt
push
mov
sbb
rol
aaa
dec
aad
cmps
(bad)
test
sub
sub
or
lods
inc
sbb
mov
sub
cld
out
mov
pushf
in
bound
(bad)
in
sbb
outs
dec
jb
inc
rcl
sub
fnstsw
push
push
mov
pop
out
push
loope
cmps
inc
leave
mov
mov
data16
jecxz
sahf
pop
push
pop
cs
ja
xchg
or
sbb
outs
mov
stos
jne
imul
or
dec
or
dec
xor
popf
clc
pop
or
loope
cmps
test
xor
retf
add
test
aad
mov
neg
stos
or
or
add
mov
sar
fcomp
sub
dec
mov
add
fdivr
jb
pusha
(bad)
shl
cs
sub
out
(bad)
(bad)
xlat
je
dec
sbb
outs
std
pop
fdiv
push
and
push
xor
inc
loopne
dec
jns
mov
mov
push
mov
ins
jbe
pop
aas
call
sub
hlt
mov
sahf
jg
dec
test
push
adc
test
cdq
sbb
lahf
add
scas
add
pop
neg
and
xor
jmp
dec
sbb
std
outs
stc
mov
lea
iret
je
shl
jecxz
sbb
jno
sbb
inc
ss
xchg
xor
add
cdq
jmp
imul
pop
pop
fs
ficomp
xor
push
jge
int3
lds
adc
add
dec
and
cmp
jmp
aad
retf
fiadd
stos
add
inc
loop
bound
or
popa
(bad)
and
imul
push
jmp
sbb
ja
push
or
ds
adc
ret
test
adc
retf
add
cmp
sbb
fcom
pop
mov
inc
ror
shl
aas
xor
push
leave
shl
inc
mov
mov
xor
repz
aaa
test
cld
dec
popf
push
out
enter
inc
jo
jecxz
int
mov
mov
push
jle
sbb
pop
xchg
cdq
movs
dec
(bad)
sbb
nop
icebp
test
movs
rol
ficom
out
lock
jp
(bad)
push
(bad)
cmp
cmp
out
pop
movs
add
mov
cmp
sbb
push
push
(bad)
cmps
loop
adc
mov
jmp
add
mov
pushf
xor
ror
jb
sub
mov
sti
pop
enter
(bad)
scas
enter
dec
addr16
mov
or
js
push
fnstsw
(bad)
dec
stos
cs
push
xchg
jl
fdiv
sbb
and
jl
aam
popf
mov
int3
or
cmp
or
sbb
mov
movs
sbb
mov
ins
sbb
push
and
add
push
cmp
retf
fs
les
mov
imul
sub
mov
cmps
mov
ret
mov
inc
pop
cmp
push
cwde
mov
test
iret
add
push
rcl
rcr
mov
cmps
pusha
xchg
leave
daa
pop
or
dec
rol
inc
lea
push
jle
mov
jne
xor
xor
mov
dec
loopne
test
ins
int
rol
arpl
cwde
rcl
imul
jmp
sub
xor
cwde
mov
mov
jns
dec
mov
mov
shr
call
retf
arpl
pop
test
fstp
add
mov
shl
stos
in
xchg
xor
out
inc
lds
mov
iret
cwde
iret
arpl
lds
jge
add
inc
or
loope
dec
std
mov
sti
ret
jnp
adc
mov
js
aaa
and
adc
mov
inc
pop
in
mov
cmova
inc
sub
shr
(bad)
leave
jb
call
sbb
jae
out
sub
cmp
cmp
les
out
js
rol
repz
cmc
out
mov
scas
call
pop
mov
clc
test
lock
stos
jbe
push
(bad)
adc
xor
stos
jno
out
shl
jns
shl
int
push
mov
or
mov
cwde
enter
lea
cmp
fiadd
stos
lahf
test
bound
or
stos
lock
(bad)
push
cmp
jnp
movs
xchg
add
inc
mov
in
mov
dec
repnz
scas
mov
inc
mov
sbb
fwait
mov
arpl
repnz
(bad)
fadd
sbb
dec
out
sub
push
addr16
fcmovnu
arpl
(bad)
push
cwde
imul
xchg
jb
inc
int
nop
sbb
jne
xor
call
rsqrtps
xchg
pop
mov
scas
stos
cwde
push
mov
cmps
pop
jnp
dec
pop
lods
icebp
dec
aam
sub
sbb
adc
dec
mov
dec
xchg
repz
shl
xlat
repnz
rcl
jne
or
push
mov
call
cld
mov
shr
jnp
mov
stos
jp
imul
bound
pushf
test
loopne
icebp
pop
imul
fsubr
cld
jp
cmp
mov
sbb
fucom
popf
xchg
pop
push
js
xchg
out
push
mul
sbb
mov
ss
cmp
and
pop
sub
call
mov
cmps
sub
and
sbb
adc
pusha
fsubr
dec
enter
xor
mov
ins
rcr
xchg
test
inc
aas
push
das
cmc
adc
add
out
add
cli
out
pop
push
retf
pop
sar
dec
adc
mov
xor
xor
nop
retf
(bad)
das
test
shl
inc
cli
fwait
sti
ret
aaa
fucomip
xor
push
add
sahf
inc
push
lods
add
adc
pop
daa
imul
lea
add
add
mov
cmp
cmpxchg
inc
stos
pop
scas
outs
jg
fs
sahf
or
add
jb
(bad)
dec
adc
test
cmc
popa
outs
cwde
mov
lahf
push
leave
mov
or
das
addr16
sar
push
not
pop
sbb
in
mov
pop
es
or
xchg
rol
dec
xchg
mul
xor
xor
xchg
push
inc
gs
jo
imul
(bad)
loop
cmp
jmp
add
(bad)
test
mov
loope
mov
stos
mov
jl
xchg
adc
xor
xchg
sar
iret
mov
or
add
das
push
or
imul
mov
xor
dec
push
push
retf
loopne
cmp
aas
add
out
add
sub
jnp
rcr
inc
mov
stos
aas
mov
icebp
je
(bad)
nop
mov
(bad)
lahf
daa
sbb
(bad)
push
sbb
std
daa
push
push
sbb
xchg
dec
adc
or
lea
dec
xchg
dec
xchg
mov
int3
ror
sbb
ja
mov
sub
lds
jecxz
outs
stos
fs
mov
clc
xchg
fsub
shr
loop
push
inc
in
outs
jbe
jmp
popa
pop
gs
sbb
jmp
fadd
arpl
inc
mov
mov
(bad)
mov
xchg
sbb
jb
dec
out
cwde
outs
add
cmp
ret
call
sbb
sbb
mov
push
adc
cmp
xchg
imul
jbe
mov
or
lods
test
mov
scas
push
or
fdivrp
push
adc
and
push
adc
push
out
sbb
push
arpl
mov
xor
mov
and
mov
pop
(bad)
out
adc
push
ins
mov
scas
or
out
push
imul
(bad)
ds
adc
xor
mov
rol
rol
out
out
add
sub
sbb
add
repz
cmp
imul
mov
jle
aam
fcomip
or
scas
xchg
out
mov
cmp
jle
pop
add
jne
sub
in
scas
cdq
das
adc
ss
xchg
mov
stos
cmp
inc
dec
lea
les
sahf
dec
jne
cmp
inc
mov
mov
cmps
sbb
adc
dec
test
test
jbe
push
jmp
cwde
out
mov
or
pop
fcomp
adc
push
(bad)
outs
in
dec
aam
js
ins
clc
jge
fldenv
inc
scas
pop
push
retf
test
jae
lock
mov
jo
mov
mov
(bad)
fist
in
mov
or
inc
sub
mov
inc
mov
repz
mov
xchg
stos
jecxz
jns
cs
or
push
or
pop
pop
adc
dec
nop
mov
xor
xor
lock
call
movs
and
stos
and
mov
test
adc
out
cld
dec
int
fiadd
pop
jbe
or
popa
sbb
dec
jnp
jb
mov
pushf
fs
sub
mov
jns
or
push
cmps
fistp
mov
pusha
adc
ins
(bad)
aad
pusha
sub
dec
mov
and
cmp
icebp
sub
hlt
or
jmp
mov
es
sbb
fs
adc
dec
leave
test
sub
clc
aaa
stc
cs
mov
inc
rcr
out
retf
sub
in
jae
in
add
sub
shl
inc
sub
jmp
cld
out
(bad)
out
jp
mov
out
xor
mov
(bad)
and
sub
and
sub
adc
aaa
mov
sbb
jno
cmp
dec
xlat
inc
inc
push
pushf
popa
add
jmp
pusha
je
mov
xor
repz
sbb
cmp
in
add
lea
pop
test
jo
fld
movs
sub
xor
or
popf
add
in
clc
out
sub
add
sbb
sub
retf
loop
rcl
int3
sub
adc
cmp
adc
loopne
ins
shr
inc
retf
gs
sahf
jnp
call
rol
iret
mov
out
scas
retf
xor
xchg
imul
scas
push
test
or
(bad)
xchg
ins
pop
cmp
add
ss
out
loope
loopne
fist
scas
lds
dec
sahf
lock
pop
fld
retf
loop
in
out
in
mov
or
adc
retf
cmp
cmp
jmp
xor
sub
pop
and
mov
mov
mov
adc
dec
mov
dec
test
mov
push
mov
mov
shr
sahf
adc
mov
push
retf
jns
xchg
and
sbb
iret
and
sub
fisubr
dec
xchg
fwait
daa
adc
add
in
out
and
shl
outs
(bad)
(bad)
pop
jo
arpl
xchg
sbb
ins
ss
(bad)
call
cdq
cmp
ja
push
cld
mov
sub
aam
jecxz
pop
lea
dec
and
mov
repz
shr
scas
test
and
ficomp
mov
pop
mov
aas
xchg
sbb
movs
xchg
and
xor
xchg
cmp
aas
pop
fisttp
out
ins
fist
xor
mov
adc
aad
and
ss
retf
outs
ror
scas
daa
shl
dec
cmp
xor
adc
test
pop
into
movs
fcom
jo
aas
sar
push
mov
inc
mov
lock
sub
icebp
call
daa
jle
push
cmp
dec
push
lds
sub
pop
out
in
mov
aam
ret
push
xor
jne
in
ja
adc
or
sub
dec
push
lock
stos
jl
js
jecxz
in
xchg
and
dec
pop
daa
dec
inc
test
jae
popa
adc
sub
and
out
xchg
in
movs
push
mov
sahf
push
ror
inc
add
inc
mov
stos
adc
icebp
sar
pop
ret
or
jno
dec
inc
adc
fmul
jp
jge
imul
into
(bad)
retf
xchg
stos
cld
adc
test
stc
dec
push
dec
mov
bnd
sbb
repz
pop
lock
sub
ficom
mov
in
mov
adc
mov
or
fwait
jmp
and
(bad)
call
cmp
dec
movs
out
adc
mov
stos
inc
mov
test
shl
out
pop
stos
(bad)
push
fstp
out
icebp
add
push
cmp
bound
inc
stos
pushf
xchg
add
mov
add
cmp
dec
or
sbb
pop
pop
push
mov
inc
add
add
mov
arpl
pop
dec
sbb
jbe
pop
sbb
lock
add
cmps
add
inc
xor
sbb
mov
iret
gs
enter
out
jle
mov
add
leave
(bad)
jnp
push
jae
xchg
push
in
addr16
sbb
cmps
scas
xor
je
fldenv
mov
pop
nop
mov
dec
pusha
inc
(bad)
pop
push
fadd
cs
mov
(bad)
and
js
jnp
sbb
stos
pop
sub
xor
shl
xchg
mov
imul
(bad)
mov
in
xor
shl
lds
ror
xor
pusha
(bad)
xor
push
cmp
mov
push
or
sbb
sbb
and
dec
stos
dec
xchg
xor
sub
aad
int
cwde
arpl
call
jo
cmp
das
xchg
xor
mov
jnp
div
idiv
stos
hlt
pop
ret
and
or
mov
cmp
and
les
stc
xchg
push
(bad)
mov
ja
retf
push
mov
(bad)
test
sub
mov
add
daa
jle
cmp
loop
out
mov
test
(bad)
daa
push
push
mov
sub
adc
push
jmp
sbb
fwait
rcr
test
int3
jns
aad
aad
je
test
pop
sti
xor
idiv
movs
jno
ja
lahf
or
rcl
les
bnd
pop
ins
dec
test
popf
nop
rcr
ja
imul
hlt
and
imul
jne
movs
enter
adc
stc
xor
inc
xor
mov
shl
xor
pop
bound
jp
mov
ins
fdivrp
clc
dec
add
loope
cmp
sar
call
cli
mov
add
(bad)
or
lahf
mov
mov
xlat
or
test
mov
out
push
pop
push
mov
sub
sbb
cs
inc
dec
mov
inc
cmp
add
jecxz
xor
dec
jae
xchg
sub
add
ins
cdq
mov
sti
out
mov
popa
mov
push
xchg
add
mov
(bad)
xchg
mov
sbb
(bad)
notrack
add
retf
or
dec
mov
mov
and
scas
mov
mov
stos
neg
les
push
sbb
pop
test
sub
cmps
loopne
and
push
add
mov
es
shr
jecxz
cmps
dec
sbb
outs
dec
mov
data16
mov
cmp
lods
js
mov
sbb
or
sets
scas
xchg
cmp
xchg
xor
pop
ds
cmps
es
pop
aas
jl
lds
test
xchg
cmp
(bad)
pop
mov
lods
xor
scas
pop
jbe
pop
cdq
xor
pop
cwde
ins
adc
mov
mov
cmp
(bad)
icebp
or
rcl
jl
and
cmp
mov
push
push
cwde
pop
lea
cmp
es
lds
data16
pop
lea
pusha
push
pop
push
sub
jo
nop
add
jl
mov
popa
out
xchg
test
mov
ficom
lock
(bad)
dec
lods
or
sbb
js
mov
cmp
jg
fidivr
sub
and
dec
mov
sub
add
daa
push
lods
mov
pop
push
pop
in
ins
push
push
dec
shl
je
mov
mov
loope
cli
pop
xchg
mov
rcr
int
stos
push
fstp
jp
cmps
cs
adc
dec
inc
mov
outs
fldenv
daa
adc
outs
sub
pop
pop
cmp
gs
cmp
xchg
iret
(bad)
cdq
retf
sbb
add
inc
push
gs
push
sbb
jo
xor
sub
data16
dec
lods
push
and
mov
shl
stos
(bad)
enter
jnp
and
fst
imul
cmp
lods
push
adc
sbb
mov
stos
xchg
sar
pop
mov
addr16
sub
pop
push
ret
enter
test
mov
fs
sahf
jno
addr16
cmps
xchg
inc
rcl
add
xchg
xor
mov
aas
rcr
loop
iret
xor
mov
xchg
dec
mov
or
dec
aaa
adc
std
push
jmp
pop
cli
rol
pusha
lods
and
cld
pop
sbb
xchg
xor
pop
mov
mov
rcr
aaa
xor
adc
test
int3
jecxz
call
aaa
adc
imul
xor
xchg
mulps
xchg
xor
ja
clc
add
sti
jmp
ds
daa
das
mov
sub
dec
fmul
ret
push
mov
sub
xchg
ins
pop
das
icebp
add
mov
and
inc
(bad)
mov
out
out
(bad)
lods
pushf
(bad)
hlt
or
fisubr
inc
retf
movs
test
pop
mov
lods
add
mov
or
jecxz
aam
add
adc
sahf
loop
xor
mov
cmp
xchg
add
jmp
and
dec
push
push
fsubr
fisubr
stos
mov
cmp
arpl
sar
loopne
dec
xchg
dec
xor
into
les
sahf
call
cld
mov
into
scas
lahf
add
iret
imul
sub
push
inc
sbb
xor
mov
jge
(bad)
mov
cmc
pusha
gs
and
aam
mov
push
jl
dec
sbb
mov
mov
out
imul
push
ret
outs
das
push
inc
sbb
stos
mov
inc
pop
ja
mov
sub
(bad)
aam
xlat
mov
repnz
fsubr
cli
mov
aas
pop
jb
sub
cwde
ds
or
ret
ret
xor
adc
sbb
dec
iret
and
cmps
scas
pop
mov
push
dec
and
inc
pusha
push
int3
cwde
add
mov
scas
jmp
xchg
scas
cld
mov
or
pop
test
daa
and
test
ret
outs
(bad)
cmp
scas
leave
inc
or
mov
scas
fs
mov
xor
inc
lods
fmul
out
ins
rcl
sub
mul
arpl
jmp
icebp
mov
cmp
pop
dec
stos
mov
out
jmp
xchg
outs
fs
and
aaa
add
int3
pop
pop
imul
in
and
sub
cwde
xchg
dec
ins
mov
sub
shl
enter
clc
and
icebp
xchg
call
or
test
hlt
adc
dec
xor
and
jecxz
jnp
clc
cld
xchg
scas
(bad)
mov
push
push
push
icebp
inc
push
xor
std
add
adc
cli
inc
mov
loop
sub
sub
and
leave
mov
imul
retf
mov
test
xchg
pop
shl
rcl
mov
jne
add
push
cmp
rcr
je
(bad)
repz
jmp
adc
adc
outs
jle
adc
xor
mov
fsin
add
enter
repnz
ficom
bnd
jne
xchg
mov
imul
cli
mov
jnp
mov
ret
sub
bound
popf
add
jb
add
shl
gs
xchg
cmp
adc
sub
aad
cmp
arpl
into
pop
xor
test
push
dec
sbb
out
test
fild
les
xchg
mov
(bad)
sti
push
sbb
cmps
cmp
push
push
pushf
cmp
push
bound
inc
jno
adc
ds
idiv
pop
js
inc
aaa
call
push
fld
dec
mov
pushfw
mov
mov
jmp
seta
add
icebp
fdivr
inc
repnz
mov
sbb
or
add
out
sbb
das
mov
xchg
cld
das
arpl
fcomp
fisttp
ins
or
jmp
lds
mov
push
sub
pusha
aas
adc
cmps
cmp
xor
jmp
mov
mov
push
xor
ret
sub
cmp
call
mov
push
iret
ins
push
call
test
push
pop
cli
push
xor
fsub
jae
cs
mov
inc
pop
mov
mov
mov
mov
clc
test
push
(bad)
movs
les
rol
mov
seta
ins
pusha
ins
mov
fadd
leave
add
pop
(bad)
movs
pop
mov
adc
test
and
xor
pop
push
ficom
cmp
call
(bad)
jge
cmp
sbb
dec
dec
shr
in
jle
pshufw
mov
push
lods
dec
xchg
pop
in
aas
mov
mov
stos
into
ret
rcl
mov
cmp
out
test
(bad)
pop
movs
cmp
aad
and
mov
xor
bound
rcr
jo
adc
cwde
jge
aas
test
ja
cmp
mul
call
cmp
mov
push
fs
jbe
retf
cld
or
fsubr
jnp
in
mov
xchg
and
or
dec
nop
arpl
jmp
test
mov
(bad)
mov
rcl
cmp
in
(bad)
inc
mov
(bad)
xchg
out
jb
das
inc
icebp
or
add
inc
xchg
mov
out
or
icebp
in
mov
fmulp
test
ja
fisub
pop
sbb
push
repnz
mov
std
out
pop
sar
cmps
outs
jo
mov
mov
jbe
mov
in
rcl
btc
rol
cmp
cmp
das
sub
dec
ror
sub
(bad)
push
xor
dec
jle
loop
hlt
pop
inc
xchg
hlt
xlat
dec
scas
dec
adc
icebp
leave
dec
jnp
out
fbld
mov
mov
pop
adc
aas
pop
les
fld
or
push
loope
test
sub
not
das
mov
jae
ins
repnz
cwde
xor
mov
repz
xchg
cmps
in
jmp
adc
notrack
fcomp
outs
sbb
jl
jmp
div
push
jo
sub
lahf
xor
hlt
not
xchg
and
xor
jl
mov
mov
jle
xor
test
mov
retf
aad
fwait
outs
inc
hlt
das
std
xor
xor
stos
adc
lock
repz
xor
dec
ds
sbb
pop
fst
or
enter
pop
das
cmps
stc
push
inc
dec
xchg
test
mov
jno
inc
cmp
popa
mov
(bad)
aaa
pushf
retf
rcr
movs
add
push
rcr
adc
addr16
popa
inc
test
ins
sti
or
fdiv
inc
xor
retf
cli
jno
add
ins
arpl
pop
mov
jb
ins
sbb
mov
sbb
jecxz
js
ret
push
ret
sub
mov
xor
dec
cmp
(bad)
retf
jae
pop
fisttp
stos
rol
jmp
fst
test
stc
mov
(bad)
dec
jmp
mov
ins
adc
push
outs
mov
mov
mov
push
mov
shr
shl
stos
fmul
neg
adc
aad
mov
je
cmp
push
inc
stc
add
xchg
jecxz
cmps
xor
out
pop
lds
or
dec
cmp
sbb
mov
sbb
push
test
dec
jmp
jl
aaa
mov
jbe
push
das
aas
sub
test
pop
stc
fisttp
mov
test
lods
hlt
fist
add
cmp
je
pop
inc
es
icebp
pop
loop
stos
outs
add
stc
pushf
pop
mov
mov
fwait
xchg
inc
pop
shl
push
dec
iret
cmp
pop
add
ret
inc
inc
dec
test
add
iret
retf
cmc
push
retf
sub
in
and
sar
pop
mov
jle
outs
push
pop
aaa
xor
cmove
and
lahf
dec
sbb
scas
push
pop
loopne
arpl
imul
sbb
(bad)
fist
fdiv
mov
std
out
pop
mov
jmp
mov
cwde
dec
data16
or
jg
fs
cmp
lods
mov
mov
mov
punpckhdq
retf
je
into
icebp
cmp
mov
shl
cwde
leave
pop
mov
fucomi
or
sub
dec
xor
dec
adc
cmps
pop
iret
std
xchg
cs
and
stc
mov
jg
mov
pop
mov
(bad)
repz
mov
into
out
pop
ret
dec
imul
inc
sar
(bad)
nop
ins
ds
jmp
dec
cwde
inc
shl
mov
call
jne
add
sti
inc
(bad)
loopne
sbb
and
jge
cmps
mov
push
ret
les
pop
fsubr
push
daa
jns
sbb
(bad)
pushf
jmp
mov
jecxz
mov
mov
jmp
iret
push
adc
lahf
add
inc
pop
ret
aas
sbb
std
idiv
or
repnz
cld
mov
push
xchg
push
xchg
jns
out
cwde
out
add
cwde
ret
pusha
jb
sbb
out
pusha
jae
sub
jp
mov
data16
jne
adc
xlat
jns
inc
sbb
and
icebp
cli
mov
test
je
or
arpl
add
ds
fld
pop
retf
mov
ficom
fwait
sub
xchg
mov
cmps
add
mov
movs
xor
push
and
inc
and
in
div
mov
fst
jns
shl
aas
outs
movs
rcl
(bad)
int3
push
sbb
sub
ins
sub
pop
fiadd
push
xchg
mov
call
fisubr
repnz
push
mov
or
std
retf
shr
call
sbb
and
jo
xchg
pushf
mov
jecxz
imul
xbegin
add
mov
add
jecxz
das
mov
test
and
pop
pop
xor
push
and
cwde
mov
xor
std
sbb
or
test
cmp
adc
inc
stos
call
xchg
mov
mov
sub
pop
fld
loope
enter
(bad)
jmp
cld
mov
sbb
xor
cmp
rcl
enter
dec
add
inc
push
xlat
adc
retf
adc
dec
enter
and
mov
es
cmc
fst
xchg
push
xchg
sub
mov
sbb
push
cmp
push
sub
out
stc
mov
cli
out
les
jle
pop
sahf
out
and
add
pusha
nop
fnstcw
mov
in
inc
shr
xor
dec
in
sahf
cmp
inc
or
sub
add
cmp
mov
in
into
jecxz
add
mov
inc
pusha
mov
(bad)
outs
js
dec
(bad)
in
ss
(bad)
cmp
out
sub
(bad)
stc
jns
mov
sub
jmp
(bad)
adc
push
sbb
cmp
adc
sahf
lahf
stc
mov
xchg
push
push
dec
arpl
mov
movs
add
xchg
out
stos
cs
lods
movs
inc
push
pop
mov
mov
mov
xchg
cli
ins
adc
scas
sub
scas
or
jbe
jp
push
xchg
jle
cld
xor
neg
xchg
xchg
add
mov
fcmovb
sar
mov
adc
sub
stc
cmp
sbb
cdq
sbb
adc
aas
in
out
fstp
adc
sbb
adc
rep
mov
sub
shl
ficomp
sub
mov
sbb
iret
and
fwait
add
test
into
mov
rcr
inc
je
sar
pop
push
cmp
cld
outs
push
push
in
sbb
sar
add
push
out
push
and
sub
cli
lea
icebp
dec
pop
je
or
xchg
inc
fldenv
sub
push
imul
jg
inc
adc
imul
cmps
dec
sbb
hlt
mov
popa
or
cmp
scas
(bad)
fcom
adc
inc
inc
rol
dec
stos
rcr
aas
dec
push
lods
sub
inc
dec
push
idiv
cmps
(bad)
in
mov
pop
xchg
pop
loope
jo
xchg
call
lock
jnp
ror
mov
jbe
or
in
mov
sahf
jg
mov
es
stc
ds
mov
pop
lods
jmp
shr
mov
out
jle
sbb
push
xchg
and
xor
xchg
mov
out
int3
lock
ss
xchg
dec
sub
mov
clc
lahf
add
xchg
mov
mov
pop
(bad)
rcr
fninit
outs
popf
nop
cmp
pop
daa
lods
cmp
sbb
adc
add
pop
jae
jo
jo
push
mov
xor
jbe
and
stos
dec
or
or
mov
sti
mov
jo
cmps
test
cmps
inc
sahf
nop
(bad)
xor
(bad)
xor
dec
sahf
mov
adc
(bad)
cmp
add
in
test
cs
cwde
nop
rcr
push
arpl
es
fsubr
push
or
pusha
inc
jne
sbb
jae
push
jg
(bad)
jo
adc
gs
sub
ja
sub
(bad)
std
arpl
cmp
loopne
enter
enter
jb
test
inc
sahf
fstp
pop
xchg
adc
inc
or
jno
cwde
(bad)
imul
jno
push
cs
inc
lods
ret
leave
jge
aam
cmp
pusha
pop
inc
xchg
add
and
cmps
jb
mov
data16
mov
bound
xchg
cwde
fisttp
jmp
jle
aas
xchg
cmp
pop
fdivr
adc
std
xchg
cdq
and
lds
mov
mov
mov
out
fsub
adc
fs
inc
push
adc
outs
mov
mov
arpl
jo
iret
pop
mov
retf
call
and
inc
call
mov
imul
add
cmc
mov
sahf
ins
mov
jmp
daa
mov
jge
add
xchg
add
dec
cmp
cmps
xor
sahf
jmp
retf
adc
pop
pop
dec
daa
jbe
test
rol
fsubr
stos
inc
dec
dec
jno
out
out
push
scas
loopne
xor
mov
fisub
sbb
push
jge
int
loop
fidivr
jecxz
pop
sbb
test
jno
cmp
push
inc
rcr
bound
in
sub
jmp
xchg
mul
inc
popf
pop
xchg
mov
dec
cdq
sub
data16
pushf
inc
jbe
dec
cmp
loop
cmp
inc
in
retf
int
pop
fucomip
cmps
test
aas
add
push
mov
sub
daa
xchg
mov
mov
and
sub
pop
shl
mov
fldcw
loop
pop
push
jg
push
(bad)
je
xlat
jge
lods
jle
or
(bad)
sti
call
sbb
cmp
frstor
stos
sub
in
or
ins
jmp
jl
xor
popa
cwde
add
mov
std
(bad)
rol
dec
sahf
dec
int
lock
repz
sbb
and
inc
or
lea
lea
inc
int3
xchg
xchg
mov
xchg
xchg
movntq
xlat
sbb
cmp
cmp
sbb
gs
mov
dec
push
ss
pop
scas
scas
pop
pop
adc
or
cmp
scas
mov
das
sbb
lods
mov
call
jmp
std
in
repz
in
dec
cmps
mov
loopne
mov
cmps
mov
push
and
and
outs
mov
mov
push
(bad)
dec
add
jecxz
lods
fisub
retf
btc
data16
xchg
in
dec
jle
jo
stc
adc
in
and
adc
pop
int3
call
cmovno
mov
stc
(bad)
rcl
(bad)
lahf
and
sub
cmps
out
loop
ret
xor
pop
mov
fwait
pop
lahf
(bad)
pop
test
pop
cmp
imul
sahf
inc
lds
pop
jae
xor
imul
out
shr
xchg
sbb
ret
mov
and
dec
ds
add
gs
sbb
push
inc
mov
ins
neg
pop
stos
std
mov
clc
jnp
push
ja
sub
loopne
(bad)
sub
xor
mov
and
sbb
loopne
jmp
out
mov
xchg
imul
mov
cmp
xor
jb
iret
call
adc
push
jns
js
cld
outs
adc
addr16
jmp
test
jnp
loop
fnstsw
sub
xchg
lds
jbe
sar
jns
mov
aad
and
scas
adc
leave
pop
adc
test
dec
pusha
lea
or
ret
inc
test
mov
scas
jne
sub
jge
cli
jle
mul
imul
mov
xlat
imul
daa
test
or
cdq
lahf
xor
jnp
dec
xchg
mov
fnsave
das
sar
xchg
or
cmp
stos
je
push
adc
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sgdtd
fimul
add
add
add
ror
add
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
