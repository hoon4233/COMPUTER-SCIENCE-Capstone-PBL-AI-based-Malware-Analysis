xchg
adc
add
adc
add
or
adc
or
pushf
adc
add
add
add
add
xor
or
lods
adc
add
adc
add
or
mov
adc
add
or
int3
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
ins
add
inc
jb
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
gs
xor
fs
ins
add
imul
gs
popa
addr16
outs
js
add
popa
fs
jo
xor
cs
ins
add
pop
daa
add
add
push
gs
jo
outs
dec
gs
js
add
arpl
arpl
xor
fs
ins
add
mov
add
add
imul
inc
outs
outs
je
outs
ins
jae
add
jae
gs
ins
xor
cs
ins
add
arpl
add
add
gs
ins
inc
bound
je
add
ins
jae
outs
jb
gs
ins
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
add
pop
cmp
es
xchg
add
add
adc
add
sub
add
lods
add
or
add
jl
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
or
inc
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
movs
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
add
add
add
add
add
add
add
add
bound
xor
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
popa
add
ja
jae
js
add
js
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
inc
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
jno
popa
add
ja
jae
js
add
js
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
in
and
add
add
add
add
add
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
sub
aas
ds
ins
jbe
cmp
jae
ins
bound
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
js
imul
ja
ja
ja
outs
jb
das
xor
xor
das
pop
dec
dec
push
arpl
ins
popa
sub
popa
outs
arpl
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
sub
shl
sar
adc
and
mov
sar
rol
and
inc
or
and
and
and
and
and
xchg
rol
and
mov
mov
rol
sar
and
mov
shl
rol
adc
sar
sar
mov
rol
sar
adc
shl
ror
mov
mov
mov
shl
imul
and
and
and
and
and
and
mov
mov
mov
sar
and
adc
shl
gs
gs
gs
js
arpl
imul
ins
and
mov
sar
mov
adc
mov
adc
ror
cs
and
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
push
jbe
imul
jne
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
and
and
and
xchg
rol
and
mov
mov
rol
sar
and
mov
sar
shl
shl
and
mov
mov
rol
sar
rol
and
test
mov
mov
shl
rol
rol
shl
mov
mov
shl
sar
or
and
and
and
and
and
and
adc
mov
rol
sar
sar
shl
mov
and
adc
shl
gs
gs
gs
js
arpl
imul
ins
cs
and
and
and
and
and
and
and
cmp
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
jbe
cmp
jae
ins
bound
or
add
add
mov
add
xchg
or
add
add
add
add
lods
or
add
add
push
mov
clc
lods
cmp
out
fmul
sub
add
and
xchg
cmp
cs
shr
pop
out
call
jnp
pushf
sub
inc
aaa
outs
imul
jne
movs
push
dec
dec
setnp
(bad)
iret
or
and
pop
mov
movs
mov
dec
stc
ins
cli
or
rcr
movs
mov
div
pop
mov
xor
adc
dec
popf
sbb
xchg
jb
or
cmp
daa
cmp
sbb
(bad)
cmp
bound
scas
(bad)
data16
lea
adc
mov
clc
cmp
jb
(bad)
mov
loopne
xor
mul
bound
rcl
push
mov
(bad)
xor
shl
ins
jnp
arpl
mov
ss
push
(bad)
in
fwait
and
fwait
sar
pop
xor
sbb
stos
imul
add
jmp
call
add
call
jmp
addr16
mov
jb
jno
jmp
dec
xchg
jl
push
mov
jmp
out
add
dec
inc
leave
add
jmp
loope
cmp
add
add
mul
jmp
xor
add
add
pop
jmp
(bad)
jecxz
add
jge
jmp
cvtpi2ps
jmp
jbe
add
add
xor
add
xchg
mov
jmp
imul
add
jmp
xor
stos
imul
add
out
pop
jmp
add
add
mov
mov
mov
mov
jmp
fidiv
add
ins
mov
popf
jmp
and
jmp
sbb
or
add
and
jbe
add
jle
xor
lods
pop
jmp
call
les
add
ror
inc
pop
jmp
(bad)
in
repnz
xor
jmp
cmp
jmp
xor
xchg
xor
add
nop
jmp
fnstenv
or
add
in
or
add
push
jmp
mov
jmp
cs
jmp
mov
shr
add
mov
jmp
mov
iret
jmp
or
jmp
imul
add
inc
outs
add
jmp
mov
add
sub
jmp
sub
sbb
add
xchg
jmp
jmp
adc
shr
add
jns
loop
jmp
jnp
in
add
aam
data16
jmp
mov
jmp
sub
enter
mov
jmp
mov
jne
jmp
ror
add
(bad)
jmp
push
jmp
adc
add
add
(bad)
(bad)
dec
and
add
cs
mov
jmp
imul
cmp
test
push
cld
jmp
ret
(bad)
or
add
sub
jmp
cmp
add
add
sub
add
nop
jmp
int
retf
or
pop
sub
mov
add
shr
jmp
and
(bad)
(bad)
jmp
add
add
jmp
call
mov
jmp
rol
mov
add
cmps
push
jmp
or
mov
and
jecxz
jo
je
jmp
nop
jmp
mov
jmp
mov
add
add
add
shr
jmp
enter
aam
inc
shr
add
repnz
jmp
mov
iret
jmp
sub
push
add
jno
and
jmp
fisub
jecxz
ret
lea
jmp
cmp
test
cmp
add
jmp
enter
stc
jmp
jmp
enter
mov
add
mov
gs
jmp
mov
add
jmp
lds
shl
(bad)
(bad)
jmp
or
inc
add
sub
call
(bad)
(bad)
jmp
jmp
and
test
add
add
xchg
jmp
jmp
mov
add
add
popf
add
add
add
lock
jmp
add
push
add
add
xor
enter
test
jmp
inc
stc
jmp
sbb
jmp
bound
retf
mov
push
add
add
cmp
(bad)
(bad)
jmp
shl
test
jmp
fisttp
add
popf
test
jno
mov
push
std
(bad)
(bad)
jmp
shl
add
add
shl
jmp
mov
add
jno
jge
jmp
mov
cmc
xor
loopne
add
fldcw
in
add
sbb
jmp
in
jmp
xchg
push
or
add
mov
add
push
mov
jmp
mov
call
ror
jmp
imul
add
mov
ret
jmp
and
push
xchg
push
jmp
and
jmp
cmp
shl
jo
mov
jmp
mov
jmp
repnz
lods
jmp
mov
adc
addr16
lock
jo
jmp
test
push
mov
jmp
lds
add
pop
scas
lea
jmp
sbb
cmps
pop
add
jmp
fistp
dec
lock
jmp
push
jmp
imul
call
lea
jmp
fistp
add
jmp
and
imul
push
jmp
xor
add
jmp
xor
mov
jmp
lock
add
adc
add
add
lods
(bad)
(bad)
(bad)
jmp
jmp
or
fs
pop
jmp
sbb
push
jmp
sub
jmp
es
jmp
fbstp
adc
add
pop
mov
jmp
sub
hlt
jmp
jecxz
jne
jmp
ror
jmp
mov
(bad)
jmp
mov
add
call
jmp
call
pop
jmp
test
cdq
cmps
xchg
add
add
(bad)
jmp
cmp
add
je
mov
jmp
ds
mov
jmp
fmul
add
add
add
mov
jmp
fisttp
xchg
mov
jae
retf
sti
(bad)
(bad)
jmp
and
aaa
outs
jnp
(bad)
imul
push
mov
push
jnp
out
mov
sub
repnz
jno
and
mov
pop
sbb
xor
int3
pushf
push
xor
xchg
mov
retf
fs
clc
lock
or
mov
repz
ret
sbb
cdq
dec
xchg
cwde
mov
fsubr
jecxz
imul
fdivr
popa
retf
xchg
and
popa
movs
stc
push
stos
jecxz
ins
inc
out
xchg
in
loopne
mov
js
push
xchg
test
mov
mov
lea
pop
imul
nop
pop
xor
pop
dec
rcr
inc
nop
mov
pop
pusha
or
sbb
loopne
cmp
shl
xchg
inc
ins
not
xchg
addr16
outs
add
fwait
leave
push
mov
daa
jno
movs
sub
fwait
jmp
xor
jmp
inc
lahf
push
aam
(bad)
push
sbb
push
call
xor
mov
data16
pop
pop
push
in
pop
pushf
and
add
mov
or
hlt
sub
cmp
arpl
xchg
call
adc
int3
inc
(bad)
push
inc
sub
mov
rcl
fwait
cwde
ss
stos
bound
push
loopne
xor
cli
inc
push
or
mov
mov
lods
mov
jne
inc
jno
inc
push
dec
cs
icebp
jecxz
jne
mov
xor
repnz
outs
dec
dec
addr16
sbb
add
inc
retf
rol
mov
or
in
adc
sub
xchg
icebp
mov
ror
push
inc
pop
ror
pop
stc
mov
jns
cmp
and
add
movs
or
jns
fcom
clc
cmp
outs
dec
xchg
sub
inc
mov
xor
jp
(bad)
aad
push
xor
xchg
mov
cld
mov
addr16
or
cmp
push
inc
mov
push
push
xchg
sub
aad
bound
jp
out
js
mov
jne
jmp
loopne
mov
and
shr
jbe
pop
test
jl
loopne
jno
test
sar
int3
sbb
jmp
arpl
cmp
xchg
scas
int
mov
rol
pop
repz
ja
icebp
test
lds
(bad)
xor
mov
jmp
dec
jle
add
xchg
xor
lods
cmp
outs
jb
pop
jmp
dec
inc
cmp
inc
addr16
sbb
repz
adc
pop
cwde
retf
iret
cmps
cmps
int
ds
jecxz
dec
pop
sub
jp
neg
int
and
sahf
push
mov
(bad)
scas
mov
xchg
mov
imul
js
out
mov
cwde
jne
sti
(bad)
ins
inc
fstp
mov
(bad)
gs
div
cmp
mov
icebp
mov
std
dec
movs
mov
adc
loopne
pop
or
pusha
aas
mov
and
jae
fcmovnu
xchg
test
std
jne
hlt
cmc
daa
cmp
mov
fbld
enter
mov
dec
repnz
sub
enter
fbld
js
mov
imul
fild
mul
mov
push
ins
rcr
ja
sub
pop
push
and
dec
adc
nop
lea
sub
xchg
fimul
loope
push
pop
mov
mov
ja
test
sub
pushf
push
jnp
mov
inc
test
(bad)
or
dec
jl
pop
ret
shr
and
test
(bad)
mov
push
dec
jne
pop
js
gs
sbb
nop
sbb
or
in
dec
jge
repz
and
imul
sub
sbb
inc
sbb
xor
jmp
push
pop
sub
dec
test
jg
sbb
cmp
xchg
dec
mov
mov
les
retf
ds
inc
jo
cmps
daa
sti
lods
clc
hlt
ret
xchg
inc
shl
ret
xchg
out
out
dec
call
or
dec
adc
cld
dec
out
mov
fist
call
dec
loopne
repz
mov
or
mov
dec
push
pop
push
stc
lds
jae
dec
mov
mov
xlat
add
push
sbb
mov
int3
int3
xchg
sbb
and
and
inc
lock
rcl
sti
mov
cdq
cmp
add
add
dec
movs
js
bound
xchg
out
add
lods
cmp
sbb
(bad)
adc
xchg
and
inc
lods
iret
dec
jnp
movs
in
jmp
out
fcom
pop
mov
jbe
bound
mov
xchg
in
(bad)
jmp
jne
pop
sub
sub
mov
fisub
mov
push
add
add
fdiv
xchg
sub
mov
jecxz
xor
push
mov
icebp
inc
cmps
sbb
jecxz
lock
ss
mov
mov
call
adc
fild
pushf
jl
pop
in
daa
mov
jecxz
add
je
or
out
or
mov
jge
sub
test
call
dec
dec
aas
push
ret
scas
inc
in
lea
dec
push
xlat
fwait
xor
iret
std
lods
jmp
shl
mov
ret
arpl
xchg
loopne
mov
and
mov
xchg
out
adc
inc
fcmovnb
jge
stc
pop
and
loope
dec
xor
out
mov
and
sub
push
pushf
in
(bad)
lock
mov
(bad)
int3
sub
xchg
loop
pop
pop
fs
hlt
inc
inc
mul
or
inc
jb
sbb
cdq
xor
mov
and
test
rcr
mov
enter
call
out
mov
(bad)
ficom
add
jle
jne
nop
lea
clc
and
sub
and
shl
sub
inc
sbb
hlt
sub
and
call
and
repz
add
icebp
xor
cmp
test
inc
(bad)
dec
in
cmp
out
or
mov
jp
dec
sbb
or
dec
jb
and
jae
and
jnp
(bad)
jg
jl
push
adc
movs
or
xor
pusha
not
mov
(bad)
leave
(bad)
or
dec
dec
adc
xchg
imul
jle
movs
jmp
repnz
(bad)
shl
xchg
cmps
ret
jno
sub
cs
stos
cmp
iret
les
jb
push
js
jle
enter
sub
dec
xchg
or
jl
enter
ja
ds
icebp
je
lods
add
aam
addr16
xor
(bad)
ins
pop
outs
retf
daa
call
ss
xchg
out
mov
nop
cmps
cli
or
dec
mov
fwait
cwde
or
inc
push
addr16
or
xor
repz
jecxz
fs
inc
xchg
and
pop
mov
dec
xchg
pushf
cmp
aam
push
into
enter
or
ret
fs
mov
inc
lds
imul
xor
pop
les
outs
lea
xchg
icebp
ret
inc
xlat
push
ret
(bad)
xor
adc
(bad)
lock
mov
push
or
inc
outs
xchg
(bad)
imul
dec
pop
push
jb
jl
(bad)
fwait
das
jb
xlat
or
lahf
lock
jno
cmps
pop
retf
lods
adc
fnstsw
sbb
cwde
test
gs
adc
retf
inc
jbe
or
jmp
int
mov
and
fdivrp
mov
and
inc
xchg
lods
mov
cmps
mov
int
call
je
fldcw
xor
and
mov
(bad)
and
in
pop
pop
idiv
sub
je
pop
(bad)
adc
push
push
xor
sub
call
adc
pop
xor
sub
cwde
(bad)
into
jbe
icebp
add
(bad)
sub
ds
add
popa
es
ins
std
jmp
jmp
xchg
xor
inc
lea
mov
int3
pop
push
inc
push
inc
xchg
imul
sub
inc
mov
test
mov
int
hlt
mov
shr
cmp
clc
int
mov
fidiv
sub
mov
mov
pushf
stos
mov
stc
lds
xchg
mov
(bad)
cwde
adc
popa
pushf
ficomp
pushf
mov
(bad)
push
pusha
jno
jo
test
jmp
xchg
arpl
inc
cli
inc
mov
test
outs
add
and
xchg
movs
and
sar
xchg
(bad)
shl
lds
cmp
adc
mov
loop
sar
(bad)
int3
call
sbb
(bad)
xor
cmc
aad
pop
cmp
ins
fisub
pop
ret
aaa
dec
aas
(bad)
xchg
sbb
pop
cmps
out
mov
repnz
jae
adc
cmp
mov
out
and
push
aam
adc
(bad)
out
adc
outs
cs
dec
out
scas
push
push
sub
pop
xor
rcr
and
or
add
adc
mov
arpl
les
xchg
iret
and
push
push
add
ins
or
lahf
fwait
or
mov
(bad)
fadd
arpl
hlt
fistp
xchg
les
sub
jmp
fs
xchg
xor
rcr
pop
xor
or
dec
pushf
xchg
lods
gs
gs
ins
loopne
xchg
push
mov
in
sbb
popf
push
(bad)
ficom
pop
aam
fdivr
lds
pop
sar
inc
mov
cmp
pop
fs
mov
in
mov
repz
clc
xchg
in
(bad)
aas
or
adc
jnp
popa
daa
jle
int
jecxz
push
jmp
or
or
fsub
lahf
and
fcomp
mov
movs
das
mov
mov
and
(bad)
mov
add
xor
aam
cli
or
mov
loope
mov
pop
je
pop
das
adc
sub
sub
jb
imul
stos
shl
xchg
cmp
mov
scas
ins
jmp
std
popa
(bad)
or
mov
hlt
push
lea
ins
add
imul
push
les
test
jmp
cmps
shl
enter
mov
out
test
jmp
scas
cmp
in
in
ror
or
jmp
jge
cmp
push
fisttp
call
and
(bad)
loop
in
mov
out
icebp
in
outs
adc
imul
lea
dec
sub
xchg
push
imul
add
(bad)
sbb
sbb
mov
(bad)
adc
out
and
jae
cmp
lea
mov
(bad)
jb
dec
std
cmp
or
sub
inc
and
lods
xchg
test
cmp
out
cmp
mov
pop
ds
and
sub
test
dec
jno
push
ins
mov
stos
add
sbb
out
pop
dec
dec
sbb
push
shr
mov
call
jp
data16
nop
std
xor
(bad)
fiadd
lods
cli
cmp
int
sbb
jo
lods
xlat
repnz
out
dec
imul
pop
dec
cmps
mov
xchg
sti
je
adc
scas
push
cmp
and
std
xor
or
lods
test
in
xchg
or
sub
push
xchg
jb
sbb
movs
shl
xchg
ror
sar
shl
or
cmp
push
retf
fisubr
das
lods
out
sbb
inc
popa
jae
inc
mov
shl
sbb
imul
or
test
(bad)
jecxz
outs
cli
daa
mov
jae
movs
xchg
add
jae
mov
loop
or
sbb
movs
jbe
adc
and
enter
fcom
inc
and
fbstp
icebp
adc
loope
test
es
int3
in
sub
ins
arpl
aad
inc
inc
jmp
sbb
push
stos
sub
(bad)
stos
mov
push
xchg
ror
push
aas
hlt
loopne
and
sbb
add
in
pusha
sbb
test
pop
cmc
rol
sbb
sbb
out
shl
test
pop
mov
cmp
mov
mov
dec
and
out
scas
pop
dec
pop
or
pop
(bad)
out
xchg
lods
inc
xor
ja
jmp
mov
push
add
xor
ins
add
sbb
mov
cmp
push
in
xchg
ss
jmp
fmul
sbb
cs
or
sbb
sub
je
(bad)
mov
pop
cwde
outs
push
outs
fisubr
test
std
jae
jb
cmp
rol
xchg
in
sbb
pop
(bad)
and
and
or
enter
scas
addr16
push
call
bound
xchg
jno
dec
ret
add
(bad)
xchg
mov
dec
push
or
fwait
sub
cli
clc
sub
add
and
out
movs
inc
push
mov
popa
ja
in
or
sub
mov
rcr
push
mov
cmp
movs
outs
cmp
popf
sar
jg
iret
in
inc
shr
pop
loope
push
or
dec
sbb
mov
outs
cmp
jne
xor
inc
jmp
xor
mov
mov
test
inc
mov
cmp
pushf
movs
mov
out
dec
sbb
sbb
test
outs
mov
fsub
js
fidiv
jmp
sub
ror
cmp
scas
and
sahf
sub
rcl
pop
mov
mov
arpl
ins
or
adc
xchg
xchg
mov
imul
cld
(bad)
lahf
repz
aas
xor
leave
in
test
ja
lahf
(bad)
mov
push
jecxz
push
pop
lahf
pop
shr
xor
add
shr
adc
jp
daa
dec
loope
inc
jo
mov
push
ds
dec
cmc
mov
scas
scas
and
ss
push
rcr
xor
mov
test
test
ror
dec
test
fistp
push
mov
pop
mov
lods
ins
mov
imul
iret
je
ror
xor
jle
jnp
xchg
jb
push
cwde
aas
stc
push
movs
stos
movs
imul
jl
mov
cli
cs
leave
or
dec
cld
call
jae
jb
mov
cmp
mov
scas
fild
mov
jmp
sbb
or
cdq
inc
xchg
add
adc
pop
xor
xlat
fist
das
xlat
jge
out
jge
(bad)
stc
push
cli
fadd
movs
mov
nop
cmp
inc
or
ss
pushf
xor
js
in
hlt
sti
ss
sub
std
lds
dec
out
mov
imul
div
mov
ret
jno
or
aad
fidivr
push
scas
in
sbb
dec
sar
ud2
shl
sbb
or
xchg
and
jmp
inc
cmps
sub
or
jb
mov
lahf
push
fisttp
add
adc
repnz
push
imul
cmps
xchg
jp
fldcw
cmp
lods
or
je
into
outs
rol
push
sub
mov
cmp
jbe
(bad)
int
js
out
adc
add
addr16
rcl
cs
sti
push
lea
imul
mov
mov
mov
dec
setl
mov
nop
not
stc
je
imul
stc
test
xchg
loopne
or
pushf
das
jmp
push
loopne
and
retf
out
cmc
repnz
ins
ffree
scas
fisub
mov
mov
pop
dec
in
mov
lods
cmp
cld
pop
xchg
pop
fldcw
push
(bad)
int3
int3
mov
or
lock
call
push
add
sbb
inc
xor
arpl
push
mov
clc
jmp
stos
xor
outs
push
dec
loope
pushf
pop
es
cdq
and
mov
mov
jp
cdq
jae
ficom
jp
test
and
inc
ins
movs
das
mov
rcl
popa
add
icebp
jb
push
ja
ins
pop
jmp
xchg
or
xchg
mov
jmp
xchg
add
aam
cdq
sub
cmc
cmp
sbb
test
push
ins
fistp
mov
jecxz
inc
cmps
rcr
mov
loop
push
test
xor
mov
jl
test
dec
cmps
les
ins
jae
int
aam
in
into
scas
mov
retf
mov
jo
cld
jle
fcmovnb
push
or
mov
dec
inc
scas
xor
scas
cld
xchg
into
xchg
mov
int3
and
(bad)
movsx
(bad)
(bad)
xor
push
mov
dec
mov
jmp
loop
cli
pop
cmps
xor
mov
sub
fdiv
(bad)
jmp
cld
xor
jae
pop
outs
push
in
jmp
out
mov
cmp
push
imul
fdivr
popf
adc
(bad)
gs
xor
enter
in
xchg
cs
mov
mov
jg
adc
movs
dec
ret
popa
js
rol
cld
push
iret
int3
push
(bad)
lods
test
mov
je
xchg
jge
mov
dec
xchg
sti
sub
or
mov
jno
xor
repnz
das
repz
int3
or
xor
jp
test
jnp
mov
jecxz
mov
or
pushf
jecxz
das
sbb
cli
push
inc
icebp
pop
leave
scas
jmp
or
neg
leave
pop
(bad)
(bad)
pop
sbb
mov
ds
xchg
data16
movs
out
cwde
mov
cmp
cli
mov
push
leave
clc
stc
or
dec
dec
mov
das
or
push
add
test
push
out
jo
inc
das
ins
lods
jmp
int
push
push
mov
sbb
pusha
sar
(bad)
shr
aad
(bad)
dec
aam
sub
in
jo
mov
imul
pop
xchg
pop
xor
pushf
cmp
repnz
jns
mov
add
mov
dec
mov
outs
mov
nop
adc
jo
repz
ds
xor
pop
nop
add
int
push
inc
test
in
inc
dec
repz
icebp
ss
push
scas
out
test
(bad)
repnz
inc
movs
jb
push
cdq
mov
cmp
inc
inc
sbb
and
ret
lods
aas
dec
jle
mov
fnclex
cli
pop
and
add
arpl
out
xor
cmp
cwde
and
jne
cmp
sub
hlt
cmp
inc
repnz
or
jo
xor
xor
dec
fbld
mov
pop
lahf
in
xchg
in
xor
js
sbb
inc
fistp
aas
lods
push
pop
xchg
push
int3
mov
mov
pushf
jno
shl
adc
hlt
pop
mov
or
popa
add
mov
(bad)
sti
(bad)
push
stc
out
in
cmp
jne
push
jnp
cmp
mov
stos
test
daa
inc
bound
sub
sbb
adc
outs
data16
rol
sar
cmps
fdivp
sub
aas
cld
dec
pop
cwde
mov
shr
push
jns
fwait
or
js
mov
adc
jmp
sbb
or
jmp
pop
pop
mov
pop
fwait
adc
push
jle
das
inc
xor
jl
popa
sbb
ss
add
cmp
rol
je
lods
mov
and
inc
sub
lods
push
xor
sub
scas
lods
movs
and
mov
retf
and
dec
xor
cmps
lahf
ds
aaa
push
xchg
xchg
or
test
retf
mov
inc
xor
push
mov
push
pop
retf
pop
fistp
or
jp
out
adc
xchg
cld
les
arpl
or
vaddsubpd
jb
test
hlt
add
mov
mov
add
ja
mov
jae
mov
xchg
mov
stos
cmp
mov
push
(bad)
shl
nop
sub
pop
sbb
clc
stos
xchg
add
fcmovnb
jnp
push
xor
(bad)
or
inc
adc
ficom
mov
ins
call
in
mov
je
ret
inc
or
fwait
ss
jg
xor
cs
mov
mov
fisubr
fsubr
dec
repz
stc
mov
jge
push
les
scas
push
sub
imul
aaa
repnz
mov
leave
std
xor
idiv
stos
(bad)
cld
push
push
repz
and
sub
neg
outs
hlt
dec
call
jnp
xor
out
xchg
ror
loopne
mov
inc
ss
mov
aaa
add
dec
hlt
mov
fnstenv
int3
retf
jnp
popf
fild
ret
shr
fisttp
xor
pop
jns
sbb
loope
psubq
and
xchg
out
dec
fwait
nop
xor
iret
in
movs
loope
or
jge
inc
jne
popa
inc
push
or
cmps
mov
inc
shl
fs
push
das
and
ins
mov
cmc
ror
sahf
leave
and
sbb
jle
add
ja
inc
sti
aad
push
loopne
into
inc
mov
dec
push
in
adc
mov
mov
int3
jge
xchg
outs
ins
cmps
int3
pop
movs
mov
sahf
lds
lods
xlat
dec
push
push
mov
pop
(bad)
or
xchg
dec
and
push
out
add
xor
push
aas
rol
jae
rcr
cmp
mov
pop
and
and
div
push
test
mov
mov
sbb
add
xchg
ins
int3
dec
mov
movzx
sub
clc
jmp
ins
xor
scas
call
dec
dec
arpl
jae
cs
mov
aas
push
movs
mov
xor
test
loope
call
mul
scas
xchg
mov
loopne
jmp
aad
sub
fwait
leave
or
fisttp
into
push
push
inc
ror
mov
neg
or
rcl
dec
iret
mov
aas
mov
mov
enter
in
sbb
jbe
adc
mov
and
cmp
lods
loopne
pop
and
lds
inc
sbb
pop
add
jecxz
jae
test
jecxz
add
call
test
cld
js
add
mov
mov
cmp
xchg
xor
stos
repnz
out
fwait
xor
add
fld
adc
jno
sar
sub
mov
push
mov
jae
mov
rol
dec
mov
jne
repnz
loop
mov
imul
movs
aaa
inc
mov
mov
rcr
sbb
xor
xor
push
aaa
dec
jge
sbb
inc
cmp
xlat
sub
movs
xchg
shr
dec
push
or
cld
ret
ds
push
ins
lds
cmp
add
sbb
or
mul
sbb
or
jg
dec
adc
or
outs
test
add
xor
mov
jno
sub
mov
mov
mov
js
dec
jne
adc
out
je
mov
sbb
fild
outs
or
in
sub
aas
sub
outs
retf
pusha
dec
mov
sub
adc
call
outs
xchg
cmp
sbb
or
ror
mov
mov
movs
lods
movs
mov
dec
pop
xchg
mov
aad
outs
mov
dec
dec
cmp
jp
xchg
clc
test
lahf
and
nop
das
cwde
adc
(bad)
leave
ret
(bad)
das
xchg
inc
popa
dec
mov
inc
cmp
or
jae
int3
xlat
les
call
stc
xchg
or
fdivr
pop
test
(bad)
pop
mov
aas
ror
mov
mov
retf
dec
mov
adc
adc
jno
cld
cwde
push
in
xor
shr
xchg
jecxz
xchg
mov
shl
mov
xor
(bad)
out
out
add
outs
fcomp
cmp
pop
mov
push
das
adc
dec
test
rol
push
inc
sbb
or
shr
test
pop
dec
xchg
lods
dec
and
idiv
adc
(bad)
fcomip
mov
dec
and
pop
scas
jge
xor
icebp
jmp
mov
push
push
ror
imul
jno
mov
push
xor
fld
aad
cs
or
sbb
cwde
dec
dec
xor
cmc
sbb
jne
jb
aad
js
jp
push
mov
test
aam
cs
cmp
aas
scas
loop
rcl
mov
adc
out
loopne
jo
pop
in
push
add
lds
(bad)
movs
push
jno
fld
test
adc
movs
js
int3
sbb
mov
retf
loope
adc
mov
retf
xchg
mov
nop
in
pop
aad
or
push
mov
imul
aaa
nop
mov
in
jecxz
or
dec
or
(bad)
push
dec
xchg
mov
sbb
fwait
repz
push
cld
lods
pop
inc
jo
or
xchg
sbb
mov
pop
and
xor
jbe
out
shl
xchg
xchg
imul
pushf
arpl
mov
ss
mov
and
(bad)
cmc
pop
xor
pop
imul
outs
ja
mov
rcl
scas
dec
push
pop
repnz
ds
inc
and
xchg
xor
lock
push
xchg
mov
push
push
dec
idiv
loope
dec
aas
xor
cmps
shl
rcr
xchg
scas
test
dec
(bad)
adc
rcl
test
clc
adc
jno
sahf
mov
push
(bad)
pop
pop
pop
jl
xchg
in
sbb
xor
movs
test
or
inc
arpl
leave
data16
add
inc
xor
sub
cwde
frstor
sub
push
or
test
into
pop
push
leave
sbb
jo
cwde
sub
fimul
iret
(bad)
dec
fst
iret
cmps
movs
cli
jnp
mov
fcmovu
cmp
nop
sbb
lahf
sub
mov
lock
xor
jg
cmc
and
lods
cwde
sbb
stos
cmp
adc
gs
mov
xor
loop
push
pop
pop
in
int
sub
push
add
adc
(bad)
dec
sbb
mov
add
lods
call
fwait
inc
and
lods
add
xchg
pop
push
test
push
out
cmp
shl
sbb
cmp
hlt
test
or
in
(bad)
mov
ret
clc
test
test
cmp
mov
xor
pop
inc
push
jmp
xor
jg
dec
scas
sub
(bad)
pop
fdiv
add
pop
loopne
jmp
ins
mov
push
sbb
push
fisttp
mov
fstp
test
sar
dec
bound
xchg
outs
add
outs
push
ret
sub
gs
ror
scas
mov
std
int3
mov
and
xor
(bad)
push
or
push
jno
mov
mov
and
cmps
xor
jle
mov
jno
inc
xlat
fiadd
ins
add
xchg
pop
ins
mov
inc
dec
pop
mov
daa
dec
sbb
xor
sub
frstor
repnz
int
dec
mov
cmp
aaa
ins
outs
sub
cmc
xchg
dec
and
pop
mov
(bad)
sub
add
fwait
or
lock
push
int
jne
cmp
out
lea
cli
test
ja
push
inc
rcl
jmp
std
adc
adc
(bad)
push
xchg
test
inc
pushf
scas
add
daa
pop
pop
dec
ror
xor
lds
stos
dec
add
mov
jl
popa
add
cli
rcl
nop
push
xor
jl
adc
mov
adc
fcom
les
popf
outs
clc
jge
jns
cmp
push
mov
popa
add
arpl
fldcw
or
fs
sbb
jb
mov
nop
mov
rcl
xchg
(bad)
popa
out
push
and
icebp
cmc
jns
fdivr
sar
jb
dec
ret
je
loope
loopne
sub
mov
iret
mov
rol
dec
ud2
pop
sub
adc
icebp
jecxz
pusha
jne
add
xchg
inc
jbe
push
fwait
sar
fwait
jne
jmp
jbe
mov
adc
jmp
imul
push
add
out
and
mov
(bad)
pop
mov
outs
mov
into
jb
int3
or
ret
inc
sub
fs
enter
add
mov
loop
lock
call
test
sahf
call
fcomp
movs
cdq
and
push
mov
cmps
movs
xchg
or
fwait
sbb
leave
gs
sbb
mov
aaa
popf
add
pop
test
mov
push
xchg
call
or
mov
stos
jmp
xchg
adc
or
push
and
shr
out
push
out
or
xchg
pushf
test
pop
inc
mov
adc
sbb
dec
cmp
pop
fidivr
xchg
dec
xchg
mov
pop
fidiv
push
pushf
dec
mul
mov
xor
fisttp
sub
imul
leave
mov
scas
loopne
mov
and
sub
(bad)
in
jno
fcomp
jns
pop
and
dec
std
ret
jnp
xchg
or
stc
mov
jnp
xchg
(bad)
mov
pop
fbld
ins
int
or
data16
cmp
or
jnp
and
adc
xlat
add
and
pop
mov
call
dec
retf
add
push
or
inc
pop
jbe
push
mov
pop
ret
stos
test
xchg
rcl
xchg
mov
pusha
jmp
leave
mov
mov
push
ficom
mov
movs
ror
popf
fmul
not
adc
xchg
aaa
adc
mov
jns
add
cmps
enter
clc
call
mov
mov
xor
mov
jmp
mov
in
jo
sub
aad
shl
cmp
sbb
test
call
jno
nop
dec
add
inc
adc
aas
push
cmc
scas
xchg
mov
aas
mov
xchg
sar
cmps
push
call
add
js
out
test
cmp
test
movs
mov
ins
aas
fcom
add
loope
xchg
mov
loope
sbb
fbstp
pop
mov
sbb
and
xlat
mov
daa
fucomp
or
pop
and
dec
mov
and
ret
push
das
das
rol
mov
xchg
push
mov
hlt
cwde
into
jb
minps
int3
push
je
dec
ins
xchg
fld
rol
xor
and
mov
in
inc
(bad)
pop
and
or
in
mov
fist
pop
sbb
(bad)
dec
fdiv
call
jge
xor
fadd
fisttp
pop
les
(bad)
xor
xchg
leave
mov
add
jmp
hlt
dec
adc
mov
mov
outs
pop
sub
push
or
ins
cwde
mov
retf
jmp
vcvtdq2pd
pusha
mov
adc
in
pushf
aad
inc
push
stos
push
push
loop
daa
cli
imul
cdq
dec
jae
shl
dec
jo
mov
aam
inc
xchg
stos
mov
mov
push
arpl
or
xor
xchg
fld
das
jo
sub
dec
cmp
mov
push
outs
lods
cmp
movs
xor
mov
add
mov
mov
test
mov
fwait
add
fs
dec
or
iret
fcmovnb
push
jne
inc
add
pop
data16
aas
aad
std
jns
pop
cmc
add
loop
fcomp
rcr
mov
sub
in
test
mov
test
scas
out
aaa
leave
bound
jmp
mov
push
cld
mov
xchg
and
cli
clc
inc
int3
push
mov
int3
xlat
inc
fbld
mov
xor
mov
push
ror
aaa
cwde
movs
and
pmulhw
mov
ds
cmp
loope
mov
adc
push
loop
mov
in
mov
in
push
sbb
retf
in
cmc
pop
mov
cmp
xchg
daa
ret
xchg
sub
add
push
add
pop
(bad)
jge
mov
fs
sahf
mov
mov
mov
(bad)
cmp
aam
pop
leave
jnp
out
jle
pop
(bad)
hlt
add
push
out
jno
sti
call
cmp
(bad)
fisubr
jns
pop
or
out
xchg
les
xchg
inc
lods
(bad)
jmp
aad
ror
add
test
cli
or
pop
add
ds
(bad)
out
push
les
sbb
xor
idiv
adc
and
mov
jmp
lds
stos
inc
mov
mov
retf
in
(bad)
jae
ror
shr
add
fld
jo
cld
call
xchg
pop
sbb
lea
dec
sahf
call
and
das
cmp
je
arpl
mov
mov
sub
bound
mov
xchg
sbb
xchg
shl
loop
mov
sub
in
dec
add
icebp
push
rcl
cwde
movaps
cmp
sbb
inc
ins
ret
mov
or
mov
dec
push
jecxz
dec
pop
jmp
mov
sbb
push
jns
pushf
sbb
or
xchg
sub
or
adc
in
mov
inc
mov
push
adc
(bad)
jg
inc
ja
mov
cs
add
ins
div
sbb
fdiv
xchg
jecxz
jg
in
mov
cmp
push
mov
adc
jne
into
xchg
test
dec
fist
mov
fnstenv
rcl
mov
test
xchg
(bad)
cli
jo
pop
xchg
pushf
pop
sub
aam
es
aad
mov
cmp
xchg
data16
fisttp
jmp
imul
test
(bad)
div
and
sbb
rcr
push
inc
push
sbb
jecxz
ror
sub
nop
retf
(bad)
jge
cdq
dec
dec
imul
fnstsw
movs
push
loope
inc
mov
and
in
int
dec
cwde
je
pop
adc
add
and
fsub
and
xor
mov
cmp
int3
cwde
das
jle
mov
retf
stos
stos
sub
popa
add
push
sub
sbb
pop
out
jae
sbb
popf
push
mov
repnz
push
pop
push
adc
sub
dec
repnz
dec
sub
add
cli
inc
sti
popf
or
outs
lock
stos
mov
clc
sbb
pop
dec
scas
or
ret
push
bnd
xor
push
xor
mov
aaa
push
xor
fadd
xor
out
xchg
sti
add
ja
mov
or
dec
dec
fimul
sub
iret
push
outs
fist
inc
dec
dec
adc
aad
mov
jo
xlat
gs
sbb
jmp
and
call
mov
inc
rol
inc
adc
and
pop
xchg
outs
or
adc
enter
rcr
es
maskmovq
neg
loope
std
cmp
adc
pop
loop
cmp
out
ja
push
enter
mov
push
test
out
dec
dec
xchg
scas
jl
mov
xchg
outs
xchg
fwait
scas
xor
mov
cdq
icebp
imul
xchg
aas
data16
repz
adc
test
(bad)
jg
cmp
(bad)
mov
adc
jo
mov
test
shl
jb
es
stos
jge
push
jp
mov
mov
mov
push
xchg
mov
adc
daa
jne
push
outs
push
lea
fwait
add
pop
xchg
adc
enter
xchg
pusha
enter
adc
mov
aaa
inc
dec
mov
jle
retf
ror
xchg
cs
and
loope
dec
sbb
mov
cmp
or
pop
pop
imul
sub
nop
int3
xchg
sbb
cmp
mov
imul
and
int3
fmul
sub
adc
cmp
xchg
bound
fmul
das
adc
(bad)
push
cwde
fwait
mov
xchg
outs
sbb
int
inc
jns
jno
(bad)
sub
push
aaa
test
fidivr
pop
ins
cmps
js
movs
rcl
pusha
mov
jno
(bad)
jmp
push
jl
jge
jnp
cmp
push
out
rcr
dec
inc
scas
retf
push
(bad)
leave
cmc
add
rcl
jmp
adc
cdq
xchg
jmp
xlat
pop
dec
push
cdq
in
nop
cld
sahf
cld
mov
push
scas
dec
or
pop
fwait
repnz
call
jmp
pop
out
les
hlt
jns
(bad)
fld
repz
imul
(bad)
int
cmp
cmp
mov
cli
sbb
sti
cli
push
or
jge
shl
and
aad
pop
enter
aaa
lods
cmp
pusha
xchg
cmp
sahf
push
or
fsubr
pop
(bad)
xlat
pusha
push
es
sti
icebp
dec
loopne
lods
mov
sub
mov
mov
inc
rcr
movs
fs
fcmovbe
pop
sbb
pop
jb
rcr
aaa
mov
or
enter
ins
or
mov
pop
mov
pop
test
mov
mov
xchg
aas
mov
ja
ret
stos
test
cmp
jge
shl
(bad)
xor
mov
stc
into
inc
or
mov
pusha
jns
(bad)
lds
clc
add
add
scas
push
cmp
stos
dec
add
test
sub
jge
stos
and
mov
xchg
mov
adc
pop
cwde
add
or
retf
sbb
ret
xchg
fst
in
out
push
das
rcr
std
daa
push
cmp
push
es
loopne
int3
inc
pop
mov
les
xlat
imul
ds
repnz
push
div
nop
mov
lock
push
gs
xchg
or
aad
fwait
adc
inc
int3
inc
mov
fiadd
lods
(bad)
retf
add
push
cmc
push
cmps
xor
ret
mov
pop
and
mov
fnop
imul
dec
ins
adc
add
test
rcr
scas
add
mov
je
mov
pop
and
(bad)
inc
scas
jecxz
push
sbb
sbb
sbb
stos
rcpps
xchg
gs
dec
fcom
cld
dec
or
push
dec
cmc
es
ficomp
and
fsubr
push
aas
dec
mov
addr16
xchg
fucomip
cmc
sbb
mov
aam
ficomp
or
mov
mov
movs
jg
aaa
dec
dec
xchg
adc
imul
push
xchg
out
out
push
and
pop
sbb
dec
stc
loop
add
sbb
repz
xchg
lods
mov
push
mov
stos
push
fwait
xor
daa
xchg
mov
inc
sub
xchg
pusha
dec
jbe
push
popf
test
cdq
and
sbb
adc
je
aaa
jns
imul
add
(bad)
cmps
int3
pop
data16
xor
imul
stc
inc
add
loopne
and
mov
add
inc
std
fistp
(bad)
out
inc
xor
and
popf
mov
dec
and
cmp
dec
mov
cmp
xor
lods
rcr
jbe
sub
rol
stos
jmp
arpl
movs
adc
fwait
jmp
push
jge
pop
mov
xchg
cli
retf
jno
dec
shl
cmp
sub
dec
call
icebp
sbb
or
hlt
xchg
cmc
adc
dec
(bad)
ret
lock
call
mov
pop
shl
mov
mov
push
stc
xchg
jbe
push
pop
or
sbb
daa
in
dec
lods
int
push
addr16
adc
outs
dec
out
cmp
iret
test
jo
ss
cs
aaa
mov
stos
and
cmc
retf
jle
adc
rcr
hlt
push
gs
adc
pop
jmp
int
call
and
mov
add
lods
mov
or
jmp
jne
fmul
adc
js
adc
lods
iret
mov
adc
adc
cmp
sub
imul
jb
aaa
or
clc
or
inc
push
gs
mov
adc
dec
(bad)
adc
xchg
inc
les
xor
jbe
jl
and
add
sub
xchg
or
inc
test
mov
xor
scas
nop
jge
xor
icebp
repz
fild
adc
sub
and
in
jmp
pusha
shl
inc
inc
in
pushf
push
jo
mov
jo
popa
into
(bad)
loopne
jmp
adc
adc
push
or
ret
cmp
std
adc
sub
dec
mov
inc
ins
push
xor
(bad)
sbb
pop
gs
test
lock
push
outs
cmps
js
mov
daa
cmp
mov
movs
sub
mov
add
pop
adc
stos
cmp
mov
push
std
cmp
pop
mov
repz
lods
scas
sbb
enter
mov
push
jns
push
ds
fwait
sub
mov
jmp
into
and
xchg
shl
sbb
ins
or
adc
mov
shufps
or
pop
cmp
popf
mov
data16
cld
int
loope
outs
xlat
xchg
retf
mov
dec
in
jmp
inc
push
das
mov
cmp
imul
pop
imul
sbb
jne
inc
mov
es
add
jnp
sbb
mov
or
cmp
mov
test
retf
jecxz
enter
ret
mov
stc
ret
gs
xchg
push
shr
add
aas
jb
out
hlt
mov
sub
cmp
clc
push
or
imul
adc
mov
loop
dec
push
jns
cmps
ror
lods
(bad)
shr
repz
xchg
push
dec
pop
loopne
mov
repnz
cmp
ficom
pop
movs
adc
jae
lods
(bad)
adc
pop
inc
xchg
xor
or
clc
dec
add
lods
int
mov
add
mov
mov
call
out
sbb
dec
mov
cs
mov
in
adc
mov
into
and
inc
ret
sbb
dec
gs
lock
xchg
sbb
nop
push
xor
xchg
sti
mov
jg
(bad)
fcmovu
adc
push
xchg
or
push
adc
cdq
sub
ss
add
inc
gs
add
pushf
sub
push
(bad)
adc
mov
fmul
aaa
out
add
and
fs
jbe
sbb
xchg
addr16
xor
sbb
dec
shl
mov
cld
into
outs
pop
rol
je
sub
(bad)
pop
lock
out
mov
sbb
data16
stos
sbb
jmp
shr
ds
inc
xchg
les
imul
addr16
add
rcl
xchg
xlat
call
scas
scas
loope
jno
and
jmp
xchg
xchg
bound
clc
jae
sbb
in
adc
mov
mov
je
dec
add
(bad)
adc
repnz
mov
repnz
jg
ret
or
add
addr16
icebp
out
and
add
push
adc
ror
lods
rol
fsubr
mov
adc
call
loope
das
out
aas
arpl
add
icebp
sbb
and
mov
loope
push
daa
cmp
pop
addr16
imul
aam
popa
mov
sub
nop
sbb
mov
push
cli
push
adc
xchg
idiv
ja
stos
cdq
jbe
retf
push
and
or
and
es
cmps
(bad)
dec
dec
call
and
add
sti
popf
fst
ja
setl
mov
mov
leave
fdivp
push
lods
rol
(bad)
and
stc
cmps
or
jmp
jae
das
and
push
push
xchg
ds
jne
xchg
adc
rol
call
gs
movs
bound
cmp
retf
retf
xor
and
js
movs
inc
push
popa
inc
inc
xchg
xlat
adc
pop
or
jbe
(bad)
jns
add
sar
cwde
test
aam
mov
test
retf
in
jne
hlt
fistp
and
aam
cmp
vmread
mov
dec
jb
lea
sub
fucom
inc
enter
lods
sbb
mov
(bad)
int
xor
out
adc
sbb
push
aam
and
push
ret
pop
cmp
jne
mov
dec
jp
cmp
fidiv
bswap
jns
ror
mov
mov
cmp
nop
fcomp
fs
mov
mov
inc
loop
sbb
mov
out
dec
xor
mov
dec
test
cld
mov
mov
test
sub
add
out
mov
imul
leave
cmp
push
dec
xlat
shl
xchg
lods
pop
sbb
into
mov
xchg
sbb
push
jge
and
(bad)
fadd
int
movs
cmp
jge
mov
pushf
dec
or
xlat
jecxz
btc
pop
addr16
enter
xchg
sti
sub
jle
and
xchg
imul
ror
enter
fmul
jmp
xor
mov
fwait
xchg
jne
es
xor
je
adc
in
pop
lea
and
pop
xor
je
xchg
mov
inc
mov
mov
ins
dec
inc
gs
js
sbb
cmps
cmp
loope
and
movs
jge
jmp
movs
mov
inc
push
sbb
inc
jmp
inc
repz
jnp
push
bnd
pop
repnz
dec
lahf
sbb
xor
xchg
jmp
mov
std
cmp
lods
mov
push
cwde
movs
xchg
fs
xor
fldenv
push
ss
jo
and
sbb
sbb
(bad)
adc
push
icebp
jno
lock
or
das
fisub
retf
xor
nop
and
out
mov
pop
push
add
mov
sub
gs
inc
ds
pop
mov
aad
add
and
add
repnz
popa
cmps
jle
fadd
stos
mov
cmp
mov
bound
jl
jnp
jbe
mov
cdq
push
jmp
call
push
(bad)
xchg
daa
xchg
movs
xchg
loope
out
fnsave
in
inc
pop
out
mov
mov
sbb
aad
push
xor
pusha
xchg
or
push
cmp
sub
lahf
add
jmp
outs
int3
and
mov
jmp
add
test
adc
and
retf
repz
dec
and
push
and
sub
push
jecxz
fst
xchg
mov
fwait
mul
adc
in
shl
mov
stos
add
movs
jno
loop
mov
in
cs
add
test
bnd
dec
sbb
outs
arpl
add
enter
cmp
mov
mov
xchg
xchg
nop
out
into
(bad)
mov
test
dec
jecxz
and
adc
mov
jb
stos
sub
inc
jb
jmp
fadd
dec
xor
xchg
pop
sahf
pushf
push
sbb
fwait
ja
inc
pop
test
push
pop
in
fwait
dec
cwde
retf
pop
(bad)
int3
cli
sbb
mov
inc
jg
cli
lods
arpl
xchg
bnd
xchg
or
or
dec
add
pusha
mov
pop
xor
add
mov
jle
loope
sti
out
mov
adc
jecxz
pop
inc
mov
or
enter
mov
mov
in
or
enter
sti
push
cwde
inc
mov
retf
jmp
loope
inc
gs
fidivr
jbe
xor
pop
fdivr
push
sbb
mov
outs
mov
jbe
jae
arpl
ja
call
adc
in
mov
nop
mov
mov
rol
sar
jbe
mov
(bad)
and
or
push
xor
and
in
js
sbb
push
and
mov
push
mov
xlat
js
fstp
inc
frstor
(bad)
mov
test
das
les
jbe
mov
in
rol
xlat
test
(bad)
push
inc
stos
btc
pusha
fldz
aas
and
loopne
sub
gs
dec
cmps
out
mov
xor
imul
int
leave
ins
loop
and
out
mov
pop
dec
push
int3
dec
mov
pop
ret
add
sbb
adc
mov
pop
inc
fs
inc
pop
test
dec
imul
dec
lock
add
xchg
fs
or
mov
sbb
mov
in
inc
ret
or
or
lods
hlt
out
stc
push
dec
sbb
in
jg
loopne
mov
(bad)
mov
stos
sub
dec
push
fmul
cmps
push
je
mov
std
loopne
mov
loop
xor
pop
jmp
fstp
mov
icebp
push
add
sbb
ret
cmp
std
push
xor
enter
test
add
xor
mov
test
adc
in
xchg
jbe
sahf
lahf
call
into
outs
mov
daa
les
dec
(bad)
adc
inc
sub
lods
xor
repnz
xchg
es
outs
dec
cli
test
mov
test
movs
imul
and
jno
in
inc
jecxz
cli
mov
xor
xor
sbb
test
sub
(bad)
mov
cmp
mov
and
scas
icebp
out
sar
jns
fwait
inc
and
ja
cmp
jmp
push
and
or
test
outs
push
xchg
push
test
push
or
les
or
jmp
xchg
mov
daa
ret
loop
prefetcht1
xchg
add
dec
fnstenv
cmp
ds
dec
jo
popa
shl
jbe
mov
sub
in
test
out
mov
xor
ret
sbb
and
aas
jmp
sbb
idiv
call
xchg
cmc
cmp
jmp
ins
push
gs
movs
mul
arpl
jl
xchg
jae
ja
jmp
xor
xchg
jno
imul
shr
pop
(bad)
ins
shr
pop
stc
and
pop
js
cdq
adc
cmp
pushf
and
in
aas
and
pop
jo
push
mov
lea
and
add
push
test
shl
aaa
fdivr
adc
pop
mov
add
arpl
mov
mov
fwait
test
xchg
jl
mov
adc
sub
add
js
mov
les
xlat
jp
test
repnz
loopne
add
inc
aas
add
cmp
pusha
jns
xor
scas
lock
mov
mov
scas
sahf
or
das
and
xchg
mov
jnp
cmp
(bad)
popa
xor
scas
ss
sbb
mov
gs
inc
inc
jbe
push
outs
adc
push
fsubp
test
jp
jne
add
or
je
lods
sbb
inc
(bad)
mov
arpl
jae
cmp
(bad)
mov
or
mov
outs
and
pushf
mov
sbb
and
loopne
ins
jle
call
in
xor
pop
lods
xchg
repnz
adc
fdiv
cmp
je
(bad)
fsubr
fs
(bad)
cmp
retf
enter
fucomip
rol
clc
(bad)
icebp
fdivr
sbb
mov
cmps
mov
fldcw
adc
add
adc
sub
test
xchg
call
lock
movs
adc
mov
pop
dec
pop
rol
ins
mov
call
push
jno
stos
cmps
mov
fisub
test
ds
add
or
or
inc
int3
add
jo
sub
pop
rcl
ja
or
pop
sub
sbb
mov
(bad)
imul
cmp
mov
cmp
push
(bad)
xchg
out
fld
mov
stos
pop
jb
xchg
in
sub
cld
push
and
jle
(bad)
mov
idiv
mov
shl
sub
mov
sbb
retf
ja
lock
mov
xchg
pushf
and
sbb
cmps
xchg
jp
cmc
and
push
lods
add
aad
mov
mov
and
jno
out
popf
ja
test
jo
aad
inc
call
je
(bad)
int3
ret
std
arpl
pusha
scas
mov
repnz
and
out
test
fwait
shl
mov
mov
int
push
sub
ds
rcr
xchg
xchg
pusha
out
push
sar
jmp
movs
sbb
int
stos
test
jae
jmp
xchg
adc
sbb
ret
push
dec
in
or
jge
cdq
dec
repz
es
jp
xor
(bad)
mov
push
es
mov
xchg
bound
push
xchg
mov
fcmovb
ins
push
mov
jo
and
in
lea
daa
cmp
fsub
dec
pop
pop
jo
pop
xor
pop
test
xchg
out
dec
out
retf
dec
(bad)
sub
mov
hlt
or
int
stos
not
push
pop
add
cmp
js
xor
sub
mov
fisub
xchg
jo
xor
repz
and
mov
push
std
pusha
rol
pop
mov
arpl
lahf
add
and
mov
jo
mov
aam
mov
int3
adc
mov
xchg
dec
ja
ss
std
mov
sub
add
xchg
cli
lds
outs
jecxz
mov
lods
mov
data16
xor
icebp
outs
lods
fisubr
fs
xchg
test
data16
call
aad
sub
xchg
(bad)
in
mov
sbb
xlat
mov
lods
dec
(bad)
mov
push
jg
out
and
fsub
xchg
rol
pushf
pop
xor
imul
sub
cmp
neg
mov
fs
scas
(bad)
popa
mov
dec
shl
faddp
push
in
sti
pop
sbb
mov
mov
out
scas
outs
mov
dec
mov
(bad)
cld
jo
mov
in
xchg
mov
or
cmps
fwait
xchg
sti
and
ds
rcl
imul
popf
and
jae
mov
retf
mov
mov
jge
inc
cmp
imul
cmp
jmp
retf
loop
outs
sub
mov
jg
aas
jmp
jnp
mov
jbe
pop
jo
cmc
mov
ins
inc
push
mov
fidiv
mov
(bad)
ins
cli
aam
outs
push
inc
sbb
sub
out
shr
fcmovnu
add
popa
jmp
ficomp
ins
js
mov
jmp
inc
mov
shr
ins
test
test
add
je
ja
aaa
adc
pop
lds
add
ffreep
arpl
es
popf
add
test
icebp
test
mov
xor
loopne
dec
xor
aaa
jae
fwait
lahf
sbb
fistp
cli
jp
pop
iret
sti
movs
push
push
push
lods
test
mov
test
inc
cmps
jl
adc
in
pop
adc
shl
xchg
jb
popf
xchg
mov
or
rcl
idiv
mov
in
jns
push
mov
pop
xchg
jb
inc
and
lahf
in
fwait
popf
add
mov
stos
ins
xchg
push
mov
pop
pushf
sbb
fwait
mov
scas
dec
in
pusha
xchg
jo
xchg
gs
jns
mov
push
std
arpl
in
cmps
jmp
repz
jle
stc
jmp
inc
sbb
jecxz
stos
pop
jns
xor
adc
dec
sbb
xor
pushf
cmp
mov
add
mov
outs
mov
scas
out
dec
icebp
int3
fimul
loope
and
imul
add
ror
cmc
or
ret
xor
inc
mov
xchg
in
push
jecxz
sbb
adc
push
jge
jp
mov
les
jbe
ror
adc
aas
jns
xor
shl
in
xor
jmp
je
mov
push
xchg
adc
int
mov
shl
(bad)
and
add
jno
call
sbb
ret
cld
jb
xchg
add
rcl
call
bound
in
mov
add
test
clc
xor
addr16
and
dec
sub
ss
repnz
sub
shl
nop
sti
cdq
sti
jno
dec
pop
pop
jle
addr16
ja
test
in
loope
cdq
inc
(bad)
fcomip
xrelease
sbb
dec
push
sub
mov
repnz
call
test
rcl
int3
bound
mul
and
sub
mov
mov
cmp
xor
hlt
movs
and
inc
(bad)
cmp
sub
sbb
pop
scas
add
retf
mov
sbb
xchg
in
jno
sub
dec
into
(bad)
popa
shr
jp
pop
out
mov
js
adc
loope
jge
push
fist
mov
or
add
or
mov
gs
lods
mov
add
xlat
imul
jp
(bad)
out
imul
cmps
sub
inc
cmc
movs
ret
adc
mov
fdivr
js
push
xchg
mov
std
cmp
stos
je
jne
push
int
int
push
jg
mov
fcom
dec
pop
jb
cld
retf
fwait
pop
cmp
in
or
mov
out
jnp
shl
push
mov
shl
push
mov
in
xchg
xchg
cmp
pop
dec
data16
icebp
xlat
or
cmp
mov
pushf
loope
imul
ja
or
xchg
bound
inc
out
(bad)
je
sub
shl
std
sub
aad
adc
sub
inc
jne
pop
in
loope
mov
(bad)
(bad)
aas
dec
sbb
inc
shl
das
xchg
xor
rcl
out
je
ins
sbb
pop
outs
cmp
fbstp
dec
jge
mov
sub
fisub
push
xor
in
add
fidivr
addr16
pop
mov
fwait
js
shl
xchg
mov
add
mov
cmp
mov
push
xchg
pushf
stos
test
retf
lahf
retf
into
sbb
or
out
pop
test
sahf
add
(bad)
iret
jl
xlat
ret
loop
or
retf
ficom
jmp
sahf
movs
mov
movs
push
mov
sti
sbb
push
xor
outs
stos
(bad)
call
in
les
cmp
dec
pop
retf
sbb
pop
mov
inc
adc
sub
jmp
loope
movs
hlt
fnstenv
and
push
mov
rol
fcom
mov
(bad)
and
movs
jg
mov
sbb
test
pushf
nop
jae
dec
jp
lock
fnsave
loop
ja
sub
stos
pop
pop
shr
aad
jmp
inc
xchg
fadd
jg
bound
movs
out
(bad)
out
push
push
scas
fist
call
or
pop
pop
dec
sahf
out
cmc
and
pusha
add
cmp
mov
mov
adc
xchg
mov
jbe
pop
pusha
xchg
repnz
xor
sbb
pusha
fdivr
cld
sbb
mov
push
imul
jae
movs
push
out
scas
rcr
sbb
add
arpl
je
and
sub
mov
xchg
fwait
retf
int
fs
das
aam
adc
mov
aaa
pop
popf
mov
nop
adc
sub
xchg
test
out
and
mov
mov
aaa
inc
mov
push
sub
and
push
dec
(bad)
pop
xchg
jle
inc
scas
and
xchg
pop
ss
fcomip
adc
popa
neg
xchg
int3
add
mov
ds
jmp
xor
pop
dec
xchg
xchg
jge
(bad)
jno
inc
jmp
mov
lahf
out
xor
aas
jmp
arpl
xchg
test
inc
fst
shl
jp
(bad)
iret
out
mov
out
adc
shl
mov
cmp
xor
test
pusha
out
(bad)
lea
xor
jo
inc
mov
sbb
shl
fisub
aad
push
push
outs
call
jecxz
dec
mov
cld
(bad)
repz
rol
pop
sbb
std
ss
pop
lahf
add
bound
pushf
or
mov
xchg
fnsave
sbb
jmp
loop
xor
and
sbb
fild
xor
test
adc
jmp
shl
(bad)
(bad)
int3
xchg
jne
push
loope
fist
nop
js
xchg
or
leave
mov
idiv
jl
and
push
popa
push
inc
jmp
fs
jl
xor
jns
sub
adc
push
sbb
inc
mov
sub
mov
test
mov
out
inc
clc
adc
jle
sub
sbb
adc
xchg
and
xchg
dec
lahf
leave
(bad)
and
loop
(bad)
loop
sub
popa
push
xor
and
mov
inc
xor
inc
mov
mov
mov
(bad)
enter
mov
xor
shl
push
sub
retf
xchg
push
mov
mov
ror
push
pusha
mov
sahf
test
daa
pop
mov
mov
mov
inc
mov
mov
sbb
es
dec
shl
fisttp
mov
arpl
jl
and
jmp
jg
sub
mov
sbb
sbb
lea
jnp
arpl
in
popf
mov
test
psrlq
pop
lods
imul
stc
xchg
or
mov
cld
lods
imul
mov
mov
add
aaa
pushf
or
clc
xchg
mov
popa
and
shr
add
mov
mov
dec
inc
push
mov
repz
xchg
and
push
cdq
hlt
stos
xor
adc
rcr
sub
sub
add
and
mov
mov
dec
add
ss
test
in
sbb
addr16
mov
aaa
imul
sar
aam
shr
adc
mov
and
add
jmp
(bad)
pop
pop
fist
scas
out
packssdw
js
mov
sub
sub
rol
sbb
cmps
sub
mov
cwde
push
lock
cmp
xlat
push
push
push
movs
jae
inc
xchg
das
adc
scas
leave
jg
nop
popa
push
mov
out
pop
std
and
les
fcmovbe
mov
pusha
cmps
fild
add
into
iret
bnd
cmps
fwait
aad
pop
in
(bad)
mov
frstor
dec
and
mov
fcom
jg
scas
iret
out
addr16
push
loop
mov
aas
(bad)
xchg
(bad)
jb
mov
inc
mov
aaa
ins
arpl
add
(bad)
movs
jg
aam
shr
js
ins
jns
loopne
retf
lods
jecxz
inc
(bad)
fsub
shl
pushf
adc
cwde
xor
dec
mov
lea
mov
outs
je
inc
aad
test
mov
lds
fisttp
pop
arpl
jg
je
rcl
cli
daa
and
das
nop
jge
mov
inc
sti
movs
out
cmps
adc
adc
add
fsub
loop
or
pop
sbb
add
mov
xor
jo
iret
push
jmp
sahf
icebp
dec
int3
cmp
mov
iret
cmp
addr16
jecxz
mov
shr
xchg
(bad)
sahf
pop
ficomp
and
jg
dec
push
or
jmp
pop
(bad)
shl
rol
mov
out
mov
fstp
push
das
or
std
outs
cmp
leave
popa
imul
lahf
(bad)
xlat
cmp
or
stc
add
push
cmp
arpl
dec
outs
inc
daa
adc
push
mov
adc
mov
movs
sub
and
imul
mov
add
jg
cmc
repnz
xchg
out
dec
sub
xchg
xor
and
shl
sub
data16
sub
test
xchg
shl
sub
les
es
dec
into
dec
add
call
(bad)
cmp
push
pop
inc
mov
fldenv
mov
mov
in
lahf
scas
add
test
xchg
les
mov
mov
call
push
lea
popf
test
push
sub
mov
and
out
cmps
and
lods
mov
xor
dec
dec
rcr
sub
mov
pop
cld
aas
ja
push
mov
jle
scas
push
push
retf
imul
inc
mov
adc
sub
cmps
push
adc
jae
xchg
mov
sbb
lahf
cmp
into
mov
popa
mov
xor
(bad)
cld
sbb
mov
stos
dec
dec
fiadd
les
cmp
jle
push
inc
or
or
bnd
and
aaa
cmc
sub
jge
scas
mov
and
pop
fld
mov
xchg
int
push
jecxz
xchg
fbld
xchg
or
mov
les
adc
ret
xor
cmp
out
adc
push
jmp
pop
xchg
dec
inc
retf
adc
push
xor
pop
(bad)
scas
add
shl
adc
int3
arpl
arpl
cmp
dec
mov
mov
add
or
jg
jp
sbb
xor
pusha
cmp
(bad)
sub
or
aad
pop
sbb
jl
mov
xor
xlat
mov
push
lock
cmps
xor
popf
call
pop
push
lock
aas
add
mov
or
movs
ins
xchg
or
fs
pop
and
cli
and
fcmovnbe
add
bound
retf
ds
(bad)
fst
adc
gs
sbb
imul
imul
imul
fnstcw
ds
push
sub
push
push
jo
out
fnstsw
jle
xchg
cwde
sbb
jmp
add
or
test
add
push
xlat
jp
pop
mov
iret
jno
stc
or
fwait
cmps
mov
push
test
call
dec
cs
jae
std
ja
xchg
dec
jecxz
mov
arpl
out
add
pushw
cmp
(bad)
cmp
js
push
(bad)
invd
retf
fsub
push
xlat
sub
xchg
push
mov
jnp
pop
jecxz
aas
nop
dec
in
jae
or
aad
inc
mov
sbb
pop
gs
adc
mov
test
pop
xor
lahf
sahf
mov
pop
mov
mov
cmc
ins
loope
icebp
stos
into
call
pop
mov
js
and
and
sahf
jp
fs
xchg
ret
cmp
mov
into
movs
push
jmp
or
cli
cmp
mov
xchg
jge
ror
in
(bad)
mov
mov
sbb
shl
fdivr
dec
xor
xchg
cmp
movs
rol
cld
dec
jmp
dec
jg
lahf
div
fsubrp
cdq
int3
jo
cli
gs
test
cmp
push
sub
jnp
inc
jne
sbb
inc
addr16
imul
sub
push
mov
sub
mov
mov
pop
dec
in
and
shr
mov
outs
dec
sbb
pop
iret
or
fucomip
popf
inc
jle
loopne
aas
cmc
outs
sar
lock
mov
dec
adc
hlt
fsubr
sub
cmp
ror
ds
mov
xor
imul
push
inc
sub
rcr
xchg
imul
cmps
cmp
jbe
dec
mov
movs
and
popa
imul
dec
and
add
xchg
neg
movs
fstp
cld
sbb
out
dec
cmc
(bad)
je
xchg
fcmovbe
jecxz
movs
data16
repnz
xlat
repnz
cld
cs
inc
push
imul
pop
loop
xchg
daa
xchg
into
dec
dec
adc
cwde
dec
(bad)
in
retf
adc
xchg
icebp
aas
outs
mov
pop
xchg
jno
out
pop
icebp
into
lods
or
mov
fwait
add
jbe
cmps
fs
rsqrtps
in
loope
(bad)
imul
and
pop
push
pop
aam
mov
lods
mov
xor
xchg
inc
call
cli
pop
sbb
fnsave
xor
imul
mov
shl
sub
push
repz
rcl
inc
scas
les
fbstp
das
xchg
mov
inc
xchg
ins
jne
ret
push
(bad)
fprem1
fisttp
data16
jl
adc
or
leave
pop
sub
mov
neg
jmp
adc
fisttp
sub
lods
jge
outs
popf
clc
push
ret
inc
push
mov
and
push
pop
or
jp
pop
inc
pop
or
(bad)
mov
imul
adc
add
cwde
outs
jmp
stos
fcom
xchg
out
fs
xlat
inc
enter
push
es
push
sbb
nop
hlt
sbb
push
mov
mov
and
pop
cmp
scas
std
clc
(bad)
jbe
adc
xlat
inc
ds
jmp
clc
inc
into
inc
(bad)
mov
inc
inc
outs
xchg
and
push
mov
adc
mov
dec
clc
mov
mov
imul
rcl
pop
mov
fistp
(bad)
fist
mov
and
ret
mov
shr
inc
movs
aas
sub
icebp
sbb
inc
ret
pop
int3
lods
mov
jp
mov
adc
add
dec
mov
repz
mov
jmp
add
sub
(bad)
jle
ja
xlat
push
mov
push
das
cmp
ja
push
xor
jbe
cmc
jge
adc
(bad)
xchg
addr16
ret
test
test
mov
xchg
dec
aad
ror
loope
loope
xchg
hlt
sahf
mov
sub
mov
daa
enter
(bad)
nop
sahf
jb
lahf
ins
cdq
push
into
ror
jmp
pop
sbb
pop
lock
cmp
loopne
pop
neg
mov
mov
lods
fidiv
mov
sar
(bad)
sub
sub
sbb
xchg
scas
lea
ss
stc
cs
jl
shr
arpl
push
add
popf
shl
je
push
pop
push
dec
call
adc
add
ds
fwait
push
push
push
in
jl
fist
mov
into
int3
mov
xchg
add
inc
mov
icebp
mov
jno
fcomp
in
mov
mov
push
cmc
fcom
add
sub
push
jnp
adc
jle
jbe
rcl
or
inc
dec
stos
lock
es
(bad)
xor
xor
push
test
fnstsw
jmp
loop
inc
jo
xchg
xor
shl
mov
adc
xor
pop
in
lds
and
jge
lahf
ins
outs
popa
mov
aam
mov
out
lds
push
mov
jae
pop
cli
call
clc
loopne
(bad)
pop
and
push
mov
out
repnz
cli
mov
mov
inc
and
or
popf
xor
gs
in
dec
retf
jle
xor
imul
mov
sub
mov
imul
(bad)
rol
xchg
dec
mov
stos
ror
inc
in
add
xor
xchg
repnz
mov
sbb
xchg
cmp
jno
scas
mov
aad
pop
test
push
ds
cmp
push
dec
fs
fst
inc
pop
adc
ins
aas
das
and
retf
and
pop
add
jle
sbb
mov
and
mov
cld
sbb
fdiv
(bad)
cmp
imul
inc
mov
and
mov
pop
aaa
xor
test
push
xchg
iret
jge
sub
xor
xchg
sub
popa
mov
mov
sub
(bad)
pop
sar
mov
push
push
sti
adc
adc
mov
jecxz
pop
ret
call
dec
aam
jne
aaa
in
ret
test
mov
call
pop
imul
icebp
shr
in
mov
dec
aad
cmp
xor
call
mov
jp
call
adc
out
cs
inc
xor
std
rol
cmp
adc
stc
fldenv
xchg
out
mov
xchg
cwde
lods
push
and
push
xchg
pop
and
add
dec
bound
mov
jmp
cmp
inc
add
(bad)
fsubp
sbb
push
xchg
sbb
xor
mov
sti
xchg
mov
ins
data16
in
bound
outs
add
dec
inc
pusha
mov
(bad)
movs
icebp
dec
scas
mov
fimul
xor
jecxz
pop
(bad)
and
xchg
inc
mov
or
push
fwait
ret
sub
jns
iret
xlat
mov
aad
in
popa
loope
out
cmc
lahf
and
xor
cmp
xor
and
sub
mov
sub
adc
xchg
pop
loope
ins
retf
mov
sbb
ror
pop
inc
jne
sbb
jp
mov
sahf
sbb
fnstenv
add
dec
ss
test
pusha
sbb
jecxz
mov
mov
ins
cmp
imul
jle
pop
add
cmp
nop
sub
add
aas
fwait
shl
mov
sbb
(bad)
and
jb
jl
test
push
push
cs
cmp
jne
dec
retf
pop
(bad)
jo
lods
or
cmp
ins
or
push
out
sbb
sar
hlt
jl
stc
and
sub
jae
jo
fidiv
mov
ss
jmp
into
movs
push
adc
sahf
mov
test
jle
xchg
xchg
mov
arpl
push
push
dec
dec
fxsave
scas
mov
int
or
cs
mov
and
jne
lahf
push
cmp
test
pop
(bad)
jns
pop
cmp
out
es
xor
sahf
xchg
fcomp
inc
jg
and
jmp
adc
inc
aaa
pusha
jo
imul
push
push
jb
and
hlt
xor
aaa
xchg
in
push
cmp
inc
dec
dec
fstp
fdivr
dec
sub
fcmove
inc
jmp
in
mov
addr16
ja
shl
aam
xchg
inc
imul
sbb
and
mov
pusha
cmp
sub
pop
or
fwait
sub
and
ds
fs
and
nop
jmp
cdq
xchg
mov
push
xor
aaa
adc
je
nop
and
out
cmovae
cmp
sbb
int3
adc
jae
mov
inc
mov
sub
mov
call
rcr
inc
pop
loope
movs
popf
pop
mov
mov
inc
mov
cli
adc
push
inc
ds
xchg
out
int3
mov
not
mov
outs
xchg
dec
aad
jmp
dec
cdq
xor
aam
cmp
clc
xchg
clc
push
loopne
cmps
sub
cld
mov
add
aas
ins
mov
pushf
fimul
fmul
shr
je
idiv
rcl
sbb
out
jg
sub
mov
jp
pop
nop
sbb
cli
push
adc
push
jno
(bad)
or
dec
int3
rcr
out
aaa
sub
xchg
jle
js
mov
cli
sbb
pop
lea
sbb
mov
jb
js
mov
inc
jecxz
inc
mov
jecxz
rcr
adc
inc
bound
data16
std
ror
icebp
ficomp
pop
mov
mov
xchg
test
jae
leave
(bad)
into
arpl
jmp
je
pop
dec
call
cdq
cmp
ins
sbb
std
pop
dec
aaa
cmp
push
lods
outs
sbb
or
pop
pop
or
pop
pusha
sub
add
xor
add
(bad)
std
loope
inc
outs
push
mov
into
int
push
nop
xor
loopne
rcr
jmp
push
and
mov
adc
shr
mov
cmp
mov
(bad)
xchg
call
pop
adc
inc
rol
loop
leave
cmp
out
popf
or
cdq
retf
jno
lods
jnp
test
sbb
mov
xor
jge
pop
mov
(bad)
out
lahf
mov
ds
mov
in
xchg
mov
popa
xchg
(bad)
mov
daa
and
jmp
call
mov
imul
mul
adc
cmp
std
sbb
(bad)
leave
test
push
sti
mov
fist
jnp
imul
ror
inc
inc
jmp
and
jne
cdq
push
jnp
xor
fwait
ja
push
mov
ds
sbb
out
pop
inc
daa
jmp
ror
popf
mov
(bad)
pushf
push
xchg
adc
lea
jne
pop
sub
popa
daa
jo
fidivr
inc
mov
outs
ins
xchg
shl
fmul
int3
dec
sbb
in
push
imul
out
cmp
dec
imul
add
pushf
mov
mov
cwde
aad
lahf
retf
sbb
fist
dec
lods
xor
sahf
jo
(bad)
jl
add
leave
mov
adc
test
pop
or
(bad)
lods
hlt
xor
fbld
pop
hlt
xchg
lea
jns
sar
imul
jle
mov
mov
out
call
popf
pushf
dec
or
xor
pop
cmps
fild
dec
and
sar
cdq
sub
push
mov
add
inc
stos
xor
xor
in
adc
test
jp
jmp
es
jnp
out
into
test
mov
shl
xor
mov
or
inc
mov
dec
out
int3
aas
mov
cmp
mov
mov
mov
and
je
lahf
add
mov
jecxz
out
cmps
jp
jne
mov
fdivrp
push
pop
add
(bad)
add
aas
push
lods
dec
xchg
jmp
out
cmps
(bad)
sub
pop
fldcw
scas
hlt
mov
dec
fild
push
jnp
inc
sub
call
mov
das
push
inc
or
ins
(bad)
pop
push
xchg
mov
cmp
xlat
stos
mov
std
ret
mov
adc
shr
inc
adc
cmp
mov
mov
or
adc
enter
jnp
movs
(bad)
pop
fldenv
stos
mov
pop
arpl
lds
fistp
push
and
sbb
pop
std
or
nop
pop
ror
retf
out
push
jmp
mov
ror
leave
jge
or
pushf
xchg
les
adc
ja
jge
test
or
daa
outs
and
aas
mov
adc
add
mov
jns
lahf
ins
mov
mov
xchg
into
push
lea
or
pop
xchg
sbb
fist
fidiv
jmp
jne
leave
mov
(bad)
and
push
xchg
mov
in
je
jo
and
xchg
icebp
and
and
push
and
mov
sbb
pop
cmps
in
xor
mov
pop
lea
jge
fwait
ja
add
in
xor
jmp
out
lds
(bad)
ret
popa
into
sbb
repz
jnp
es
or
and
or
ret
loop
adc
pop
push
xchg
mov
add
inc
or
xchg
cs
imul
jmp
ret
push
rol
int
push
or
mov
dec
test
pop
mov
pop
clc
push
shl
out
ins
xor
xchg
enter
cld
mov
dec
pop
and
add
mov
mov
into
or
mov
pop
add
fsub
cld
mov
cs
xor
adc
adc
lea
or
(bad)
lock
mov
hlt
js
icebp
aad
test
jp
adc
adc
mov
fwait
dec
push
dec
call
xchg
cdq
xchg
fwait
pop
(bad)
pop
add
cmc
mov
mov
push
jo
mov
sub
int
push
loopne
repz
arpl
and
or
jl
inc
imul
jge
shl
adc
push
aam
xchg
call
jle
cs
je
xchg
jmp
sbb
inc
jge
xchg
enter
neg
addr16
in
cwde
mov
adc
addr16
fiadd
call
imul
std
cdq
mov
pop
fsubrp
fs
jo
adc
xor
hlt
mov
push
shl
fwait
sbb
out
pop
push
xor
pop
adc
dec
adc
jne
mov
repz
cmp
imul
pop
pop
leave
popf
and
sub
push
cmp
imul
lds
je
or
mov
jp
cld
xor
stc
xchg
mov
call
add
leave
das
cmps
adc
in
mov
ins
stos
push
fnstcw
ror
ds
pop
xor
mov
mov
cmp
icebp
xchg
dec
lea
adc
mov
and
mov
stc
lock
jmp
mov
gs
in
xor
(bad)
jmp
xchg
dec
xchg
popf
pop
inc
lods
inc
jbe
fdiv
lahf
ficomp
pop
mov
mov
jge
add
xlat
or
shl
in
nop
sbb
cwde
icebp
jmp
push
jge
sti
fwait
sahf
fidivr
xor
push
inc
shl
test
mov
push
pop
cli
pop
jmp
sub
ds
aaa
shr
repz
inc
push
and
icebp
add
popf
mov
cmp
jg
ss
call
add
fisubr
sub
cld
pop
lahf
out
inc
sub
(bad)
mov
pop
mov
pop
fisttp
and
cmp
mov
push
jns
cmp
enter
cmp
ds
out
mov
xor
or
aad
cwde
xchg
imul
into
xlat
in
pop
sar
xchg
jmp
adc
stos
mov
ror
retf
(bad)
dec
sbb
inc
in
test
mov
movs
stc
ss
scas
ds
aam
or
jecxz
sbb
xchg
or
mul
mov
jns
fidiv
cmps
outs
iret
ins
sub
ja
outs
stos
daa
mov
jmp
scas
cmp
sbb
aam
sub
les
jecxz
leave
test
mov
(bad)
sub
test
xchg
xchg
mov
lods
bound
shr
ret
push
adc
push
or
xor
push
cmp
out
dec
xor
mov
loope
xchg
push
or
xchg
inc
xor
pop
mov
cdq
hlt
inc
cmps
ds
inc
jbe
stc
push
out
repz
add
mov
in
jae
or
dec
jmp
or
push
jg
addr16
jp
adc
pop
cwde
fstp
jmp
loope
loopne
mov
ror
mov
mov
push
into
retf
add
push
fsubr
pop
jecxz
imul
mov
mov
bnd
xor
inc
pop
das
in
lods
stos
add
cmp
aam
and
scas
(bad)
sbb
inc
mov
pop
pop
mov
mov
mov
inc
cmp
sar
clc
mov
mov
add
pop
and
sub
(bad)
aad
and
inc
jno
mov
inc
enter
inc
int
and
jle
sbb
mov
push
jl
addr16
push
lock
push
mov
mov
iret
(bad)
out
popa
ja
fst
xchg
(bad)
popa
ror
out
cmp
cmp
ins
xchg
scas
mov
inc
and
scas
or
inc
jecxz
mov
pop
into
aad
push
xchg
inc
pop
pushf
xor
and
xchg
out
loope
das
enter
push
pop
cmp
(bad)
hlt
aaa
outs
inc
cmp
imul
loope
js
adc
imul
mov
cmp
mov
scas
cli
adc
adc
les
fisttp
clc
inc
stos
in
pop
mov
lods
jmp
push
pushf
movs
mov
mov
xlat
or
add
or
mov
es
sbb
xchg
mov
jo
(bad)
dec
neg
dec
fldcw
mov
arpl
inc
subps
maxps
(bad)
out
add
aam
movs
mov
push
xchg
pop
out
enter
and
add
or
ret
fcomp
push
jecxz
push
shl
mov
jmp
cwde
push
or
mov
das
retf
call
std
(bad)
mov
add
jo
mov
sub
sub
mov
stos
push
mov
xchg
div
ret
and
test
fld
clc
dec
or
aad
jno
jmp
jmp
shr
or
and
add
mov
mov
xchg
jmp
cmps
lea
leave
lds
sahf
retf
call
pushf
or
pop
stos
sub
mov
(bad)
scas
popf
xchg
jge
add
cwde
lock
in
cmp
inc
lahf
sub
xor
test
stc
js
call
ret
repz
jbe
(bad)
and
test
sbb
sbb
leave
int3
sub
stc
retf
sub
xchg
pop
inc
(bad)
iret
sub
or
test
out
in
mov
mov
(bad)
xchg
data16
dec
xor
mov
push
dec
mov
dec
or
mov
jno
sub
mov
and
sub
fcmovne
cld
clc
jno
and
aad
fidivr
iret
(bad)
fsubr
push
je
mov
cs
mov
pop
mov
imul
sahf
movs
sbb
daa
retf
inc
cmps
cmp
sbb
cwde
dec
mov
xlat
psllq
pushf
mov
push
aas
cmp
or
pop
addr16
sbb
adc
xchg
fstp
out
mov
call
std
pop
adc
lahf
add
popf
cwde
out
int
xor
das
cmps
bound
mov
or
in
jo
ja
xchg
jg
scas
sbb
hlt
cwde
imul
push
push
pop
push
outs
outs
pop
movs
mov
test
dec
es
push
out
std
fsub
fadd
sti
neg
add
push
push
adc
push
adc
push
and
xor
outs
aad
jnp
stos
je
push
xchg
mov
pushf
pop
shl
in
scas
clc
out
sub
mov
jnp
and
dec
mov
imul
les
xor
in
(bad)
lahf
imul
push
movs
ja
inc
out
sub
mov
movs
jge
cwde
fadd
mov
in
or
pop
std
inc
pop
cmp
pop
popf
cli
xor
jmp
loope
pop
xor
outs
pop
std
xchg
outs
sub
xchg
ja
loopne
test
nop
dec
sub
cmp
pop
jnp
jnp
aaa
into
int
mov
xor
pop
dec
movs
mov
jl
xchg
sub
inc
movs
fs
lock
scas
in
sbb
arpl
mov
mov
ss
xlat
dec
or
clc
jmp
jmp
mov
(bad)
cwde
loop
inc
jecxz
fcmove
retf
retf
jbe
lods
hlt
stc
sub
hlt
jecxz
pop
mov
std
mov
mov
jo
cmps
cmps
push
or
outs
not
mov
popf
sbb
lods
in
les
cdq
inc
js
(bad)
ins
and
addr16
inc
pop
and
bound
cmp
mov
pop
enter
mov
fcomp
popa
push
pop
das
sbb
sbb
outs
cmps
pop
pop
add
sar
mov
fucomi
pop
dec
inc
cmp
clc
jbe
aas
ins
and
inc
imul
xchg
sbb
dec
lea
and
jno
mov
mov
xor
std
daa
jo
fidivr
pusha
jns
out
scas
cmps
outs
or
sti
xchg
scas
(bad)
ror
mov
mov
cmp
push
cmp
pop
push
push
rol
push
cmp
test
and
dec
mov
or
and
xor
iret
leave
pop
in
outs
les
test
outs
es
outs
aaa
sbb
out
adc
cli
out
(bad)
retf
mov
ficom
loope
mov
xchg
movs
add
icebp
or
popf
fcmovbe
loope
(bad)
mov
daa
inc
push
inc
popf
mov
xchg
lea
cli
popf
xchg
das
arpl
push
pop
xchg
scas
cli
and
mov
cli
add
inc
aas
into
les
aaa
push
(bad)
jmp
cwde
enter
loope
sbb
retf
or
adc
fst
addr16
and
push
sub
or
mov
inc
(bad)
outs
mov
retf
fwait
cdq
dec
std
loope
mov
xchg
and
xchg
retf
pop
adc
shl
jge
fwait
inc
shl
les
xor
out
xchg
in
test
add
or
loope
mov
inc
repnz
mov
fnstcw
sbb
jmp
mov
aas
(bad)
mov
xchg
sbb
adc
jne
outs
mov
in
nop
inc
iret
call
popf
or
push
sub
and
push
aaa
pop
or
fwait
adc
jnp
inc
(bad)
xchg
loopne
pop
push
sub
sub
dec
add
(bad)
cdq
mov
hlt
sub
jecxz
fs
pop
mov
in
pusha
push
leave
test
loop
mov
arpl
aas
xchg
mov
mov
stos
add
(bad)
fs
jnp
loope
and
mov
inc
lods
pop
mov
aam
data16
mov
adc
jmp
test
or
sahf
nop
push
scas
in
in
popf
out
jmp
out
add
cmp
xchg
add
test
out
ja
add
pop
dec
nop
out
leave
push
inc
and
mov
push
cmps
dec
ja
or
mov
and
hlt
inc
xchg
call
dec
xchg
cmp
out
test
(bad)
push
sbb
cmp
push
pop
xchg
add
sub
push
pextrw
xor
cmp
mov
neg
jne
add
sar
movs
pushf
xor
fstp
xchg
bound
scas
ss
or
jnp
das
je
adc
mov
test
cmp
lds
sbb
(bad)
xchg
pushw
dec
lock
and
jo
adc
retf
cld
test
ins
or
popf
out
movs
push
stos
mov
shr
and
arpl
idiv
inc
or
ins
xor
mov
sub
into
cmp
or
rcl
mov
sub
sub
retf
stos
pop
add
and
cld
in
hlt
addr16
inc
out
cli
adc
addr16
test
cmp
hlt
mov
cwde
sub
and
inc
add
call
and
ja
pop
lods
jl
add
fcmovbe
mov
inc
(bad)
loopne
add
mov
dec
add
data16
or
(bad)
fdivr
inc
popa
call
jno
repz
xchg
xor
jecxz
and
ret
mov
not
idiv
(bad)
xchg
idiv
out
jp
jns
scas
pop
jg
cmp
and
sbb
std
xor
clc
sub
xchg
and
int
jne
retf
cmps
enter
rcl
inc
test
stos
jp
leave
xor
sbb
inc
mov
jecxz
adc
addr16
loop
aaa
pop
push
pop
test
mov
push
sbb
add
es
or
ja
mov
mov
and
xchg
fsubr
lock
in
movs
lods
outs
cli
xchg
pop
pushf
pop
sub
repz
imul
gs
jle
cli
sar
fcom
mov
sbb
outs
out
mov
mov
test
jbe
or
cmp
(bad)
fst
in
lahf
dec
test
inc
hlt
outs
int3
adc
lock
push
jmp
or
clc
and
sbb
dec
adc
push
mov
ret
xchg
enter
sub
sahf
in
xor
je
cmp
ins
xor
addr16
(bad)
adc
call
xchg
xor
pop
xor
lock
test
push
fsubp
inc
pop
mov
aaa
outs
enter
mov
lea
jp
or
scas
jnp
adc
push
cmp
or
xor
inc
dec
cwde
sub
xor
inc
inc
pop
xor
cdq
fwait
add
push
mov
enter
dec
pop
inc
cs
adc
add
or
out
(bad)
(bad)
enter
imul
fild
iret
clc
cmp
(bad)
ficomp
call
aaa
sub
dec
ror
stos
sbb
push
xor
inc
sub
mov
shr
xchg
sar
and
and
shr
or
das
fist
inc
xchg
sbb
hlt
jmp
fistp
sub
outs
xor
dec
sub
int
std
mov
dec
arpl
les
add
shr
ret
lahf
pop
mov
push
and
pop
iret
out
xchg
(bad)
cmc
cmp
cmc
jl
aas
fnop
xlat
mov
das
xchg
mov
jecxz
jae
mov
pop
(bad)
iret
out
jnp
ret
dec
out
in
dec
fisttp
push
outs
pop
arpl
or
in
and
int
cmps
pop
push
cmc
and
cmc
mov
pop
aaa
out
ss
xchg
adc
loopne
push
or
add
or
jl
das
and
popa
js
std
sub
ins
jmp
inc
dec
sub
or
cdq
or
sub
mov
cmps
mov
xchg
in
mov
ret
jae
fisttp
out
pop
inc
outs
sub
repz
jae
out
mov
cwde
pushf
xchg
fnsave
out
add
jo
fcom
fistp
and
lods
or
imul
cmp
inc
lock
test
aad
repz
mov
out
jns
imul
cwde
call
mov
cmp
repz
xchg
sbb
and
and
lods
retf
rcr
outs
test
lea
mov
(bad)
fs
lods
addr16
fucom
xlat
jb
daa
fs
ja
(bad)
bnd
mov
(bad)
jno
mov
sahf
lea
das
cmp
pop
mov
mov
jno
jp
xor
jle
push
push
jge
pop
and
les
sub
mov
stos
pop
cmp
inc
cmc
jp
push
(bad)
cmp
sahf
push
movs
jbe
mov
jge
imul
or
jl
adc
inc
aam
pop
adc
inc
rol
mov
movs
add
fidiv
ins
test
add
ret
sti
test
and
cmc
xor
cli
loope
je
jmp
mov
xchg
out
(bad)
cmp
jns
inc
or
iret
inc
push
push
xor
(bad)
jle
mov
shr
xchg
and
push
movs
fcmovnu
sbb
das
(bad)
(bad)
addr16
or
mov
xchg
cmps
dec
jg
pop
fs
mov
add
nop
xchg
mov
adc
xchg
fsub
fs
sbb
test
xchg
out
push
out
fist
nop
stos
jle
dec
sbb
pop
inc
vpmulhuw
mov
mov
loopne
inc
enter
mov
sbb
(bad)
(bad)
shl
push
or
sahf
shl
fild
fild
jo
test
cmp
shl
mov
jno
aad
adc
mov
call
mov
pop
in
mov
inc
jl
push
lods
inc
gs
mov
repz
dec
rcl
sbb
xchg
das
push
jbe
cwde
rcl
ja
in
pop
out
push
xor
dec
inc
cmp
jl
aas
inc
xor
test
into
shr
or
scas
adc
cwde
enter
mov
push
jmp
add
test
push
cwde
(bad)
mov
cmps
int
push
inc
add
sub
inc
mov
vpbroadcastmb2q
xchg
xor
mov
cs
sub
jb
cs
mov
test
jo
retf
dec
fdiv
test
fs
adc
jle
adc
data16
mov
je
mov
(bad)
push
push
xchg
push
jge
ja
pop
cmps
pop
push
xlat
sub
and
sti
outs
add
iret
fwait
jmp
mov
dec
push
push
jno
inc
in
lods
adc
(bad)
xchg
xor
mov
call
dec
dec
shr
aad
sub
pop
and
cmp
cmp
(bad)
and
rcl
les
pop
mov
leave
js
retf
enter
(bad)
out
daa
dec
sub
sub
or
lock
in
repz
or
pop
and
mov
inc
xor
outs
push
xlat
aas
imul
fiadd
cmp
call
mov
hlt
dec
push
mov
scas
test
push
cmps
rol
cmp
cmc
dec
pop
mov
mov
xor
mov
sub
xchg
pop
test
shl
in
cmp
aaa
mov
addr16
adc
and
sbb
fcmovbe
fimul
push
mov
out
lahf
mov
pavgw
out
fsub
push
pop
hlt
add
xchg
mov
cmp
jmp
jae
outs
out
ins
cmp
mov
or
inc
sar
push
mov
adc
mov
pop
sbb
outs
test
dec
lahf
in
and
and
adc
imul
pop
stos
retf
push
lahf
and
dec
call
add
fwait
rcl
pusha
mov
and
nop
xor
out
popa
rol
ret
aaa
call
fisttp
test
xor
lea
rol
pop
mov
fmul
leave
retf
loopne
sbb
push
inc
or
add
push
pop
adc
test
nop
push
or
push
pop
cmp
scas
push
cdq
jmp
dec
adc
fisubr
pop
xchg
(bad)
ja
mov
dec
js
mov
mov
test
mov
gs
adc
sub
inc
adc
add
cmp
outs
and
in
inc
push
lock
add
mov
jnp
lds
mov
pop
mov
push
push
pop
call
enter
sub
jg
stos
bound
sub
fisub
je
out
nop
xlat
ja
mov
aaa
cmp
call
aam
xchg
mov
fwait
sar
test
pusha
bound
ret
repz
out
lahf
into
imul
dec
ret
push
stc
inc
lea
pop
test
adc
mov
loope
out
jge
cmc
cmp
adc
xchg
test
retf
sti
jno
cmp
and
iret
fst
or
and
fdiv
sbb
ins
jnp
rol
mov
bound
mov
adc
cmp
mov
xchg
inc
or
mov
lahf
push
jmp
jl
or
ss
or
xor
mov
je
fnstcw
aas
mov
jne
mov
xchg
and
lea
jecxz
ret
xchg
sti
dec
and
fistp
pop
out
aad
and
ss
sbb
cwde
xchg
mov
jp
scas
fucom
jae
in
cmp
mov
enter
mov
cs
scas
mov
cmp
mov
add
clc
hlt
test
loopne
fcmovnu
int3
and
jge
mov
dec
jnp
hlt
sbb
enter
mov
cmp
adc
data16
ret
cmc
test
adc
pop
cmp
adc
sub
les
pop
pop
rep
sbb
jge
or
ja
xchg
jns
inc
sbb
push
jmp
add
bound
(bad)
(bad)
cmp
daa
movs
int3
mov
push
mov
test
adc
mov
hlt
mov
lds
rcr
lods
cdq
idiv
jecxz
inc
sbb
int3
adc
xchg
scas
mov
out
mov
mov
jb
cmp
sub
std
push
sbb
push
and
xor
js
popa
ret
loopne
add
shl
daa
jecxz
in
(bad)
sti
sar
fbld
cmp
daa
scas
push
icebp
enter
mov
push
icebp
cmps
push
mov
inc
daa
clts
xchg
shr
popf
lods
mov
(bad)
sti
loopne
fcom
mov
loop
cmps
dec
aam
xchg
nop
std
jmp
xor
add
sahf
pop
mov
add
lahf
stos
add
ins
pusha
dec
add
dec
ja
mov
mov
push
dec
jge
inc
mov
enter
inc
push
adc
jo
iret
inc
in
adc
dec
iret
xor
pop
out
mov
mov
ret
int
jl
outs
add
call
repz
sbb
jb
sub
add
inc
sub
(bad)
addr16
add
sahf
xchg
jae
(bad)
fwait
rep
jne
bound
cmp
int
cwde
repnz
or
pop
lock
xor
sub
and
jle
xor
xor
mov
movs
sahf
lock
xchg
xchg
ss
mov
pop
jns
cmp
in
jg
mov
sub
jns
sub
stc
out
lock
or
je
or
ins
loopne
cmp
cmp
je
stc
imul
jmp
mov
pop
and
pop
stos
or
loop
adc
test
push
or
pop
mov
adc
jmp
or
aas
xchg
mov
jl
dec
dec
sti
fild
fwait
loope
shl
pop
cli
out
mov
add
in
cmc
retf
push
push
mov
jle
and
pop
(bad)
adc
das
shl
push
retf
dec
loopne
xor
sub
clc
dec
sub
lods
mul
push
data16
and
sub
cs
(bad)
fild
sub
sbb
(bad)
ins
ss
test
cs
je
inc
aad
mul
cmps
dec
jo
call
aad
movs
aad
mov
push
add
bound
cmp
xor
cmp
mov
imul
push
xchg
data16
enter
xchg
and
sub
and
imul
ss
jno
sbb
in
sub
cmp
mov
test
mov
and
mov
xor
mov
sbb
mov
daa
repz
fdivr
(bad)
ins
pop
add
mov
(bad)
sub
push
shl
mov
scas
sbb
push
aad
imul
out
and
add
cmp
in
cdq
cs
adc
push
test
das
imul
sbb
add
les
dec
xlat
mov
mov
jne
sub
xchg
dec
adc
call
cmp
(bad)
mov
rcl
xchg
retf
shl
mov
repnz
mov
sahf
pop
mov
loope
ins
add
push
ja
sub
lahf
mov
lea
cmps
add
mov
lds
inc
lods
cwde
push
mov
aam
es
jb
pushf
lahf
and
mov
rcl
inc
cmc
mov
and
leave
sbb
gs
(bad)
mov
lock
fsub
mov
sbb
push
dec
mov
add
and
pushf
fcom
test
dec
inc
xchg
pop
xor
mov
add
push
sbb
pop
jle
add
and
out
and
clc
push
ret
icebp
or
jno
retf
xchg
xlat
fldcw
xchg
mov
(bad)
fcom
test
repnz
jae
adc
fs
mov
adc
fstp
call
inc
lock
jp
cmp
std
dec
ret
shl
shr
inc
add
cmp
fist
mov
cld
push
popa
push
popf
cmp
test
adc
xor
js
mov
inc
sub
mov
in
jle
push
mov
jns
mov
lods
sub
pop
cmp
push
pop
xchg
jecxz
xchg
xchg
stc
mov
retf
sub
scas
jmp
mov
xchg
inc
addr16
std
jl
mov
pop
bound
add
adc
mov
ins
pop
loopne
mov
mov
xor
cli
ficom
aam
leave
cmps
or
or
adc
push
or
call
add
mov
sar
pop
inc
out
js
neg
and
fdiv
in
inc
neg
cmp
(bad)
gs
jnp
loop
push
(bad)
retf
inc
pop
data16
jo
mov
cmc
jne
sbb
mov
jl
or
aam
in
shl
test
jp
add
mov
and
js
fst
inc
pushf
rol
pop
adc
(bad)
pop
jno
dec
push
lods
jecxz
mov
out
enter
xor
jmp
sbb
cld
(bad)
popf
adc
div
push
test
inc
or
or
xor
fldenv
out
dec
rcl
inc
stc
inc
fild
xchg
add
rol
ja
add
cmps
xchg
shl
adc
jae
int3
or
mov
dec
jl
loop
test
pop
or
cmc
push
lods
and
outs
shl
cli
cmps
push
sub
and
add
inc
sar
xchg
mov
dec
mov
rol
inc
mov
mov
in
imul
call
dec
dec
or
or
lods
inc
fsubr
adc
in
push
imul
xor
out
jmp
push
add
repnz
jp
xlat
pop
cli
mov
pop
adc
mov
cmp
out
add
lea
adc
ja
or
cmp
arpl
mov
jmp
sub
aad
pop
fild
push
movs
retf
push
lea
xchg
push
inc
(bad)
movs
fistp
push
jmp
xor
jmp
adc
lds
movs
xor
fsub
daa
pop
ds
lods
and
ins
cmp
or
push
movs
ins
xchg
dec
out
sar
movs
adc
sub
dec
sbb
xor
jmp
mov
push
repz
out
aaa
outs
dec
sub
ins
adc
ret
push
dec
add
mov
fs
and
ror
xor
jo
pusha
stos
and
and
std
lds
fistp
fistp
inc
inc
jo
into
and
adc
fiadd
pop
mov
lods
test
not
cwde
pop
pop
call
fld
adc
fiadd
mov
adc
sub
push
sbb
test
sub
(bad)
adc
jns
sub
lods
and
xor
mov
add
addr16
nop
stc
ret
scas
in
push
repz
sub
push
push
jp
in
inc
xchg
sahf
lahf
arpl
mov
xor
repnz
stos
inc
sbb
rcr
icebp
es
es
pop
mov
and
call
cmp
mov
out
mov
xor
out
out
jl
push
fsubr
adc
ja
mov
daa
into
into
(bad)
inc
out
in
mov
cmp
in
xor
mov
inc
pushf
fld
pop
push
dec
arpl
inc
fist
jle
xchg
cmp
das
rol
sub
or
lock
mov
inc
and
jo
mov
movs
into
xchg
push
cmp
(bad)
loop
into
lods
cld
push
ss
sub
loop
(bad)
inc
and
mov
inc
xchg
dec
dec
aaa
jmp
pushf
lahf
push
sahf
sub
rol
add
push
jl
dec
into
cs
call
inc
mov
std
les
jns
mov
cmc
add
adc
das
lods
int
sub
test
pop
popf
sbb
and
outs
daa
push
adc
les
and
push
pop
and
and
push
in
aas
mov
mov
or
stos
jecxz
cmp
movs
(bad)
jns
out
mov
stos
call
repz
(bad)
daa
xchg
mov
rol
js
pop
push
xor
xor
cwde
(bad)
cmp
add
inc
mov
sbb
pop
shl
jmp
pop
movs
jecxz
scas
rcr
retf
inc
aam
jmp
cdq
add
ror
xchg
and
loopne
jo
push
inc
cmps
dec
xchg
mov
call
adc
add
push
sub
or
fst
nop
repz
imul
lds
es
or
adc
jle
cmc
and
int
add
and
test
outs
jmp
sub
cmp
mov
imul
pop
xchg
aad
adc
(bad)
arpl
retf
dec
cmp
and
bound
pop
mov
pusha
cmc
fisubr
sbb
inc
fwait
xor
xchg
pop
xchg
pop
pop
aaa
xchg
mov
xor
mov
sysret
xor
lea
fidivr
in
sub
xlat
or
or
into
fistp
cli
shl
lock
push
fwait
mov
(bad)
or
jge
(bad)
sub
xchg
push
int3
out
mov
ret
js
pop
gs
adc
cmc
sar
push
mov
cmc
aas
outs
ror
xchg
popfw
or
fsubr
mov
retf
scas
hlt
div
sbb
and
test
(bad)
test
sti
(bad)
jmp
mov
mov
and
or
sbb
les
mov
jp
inc
cmps
repz
ret
rcr
stos
sub
retf
ret
addr16
push
call
pop
test
sahf
pop
das
push
mov
push
inc
fst
sub
push
ins
or
push
call
(bad)
xchg
popa
sub
les
jmp
ror
int3
(bad)
pop
pop
jle
push
dec
jae
loop
call
test
push
pop
repnz
jb
mov
bound
clc
loope
fnstsw
mov
enter
outs
retf
mov
cmps
std
fs
adc
(bad)
mov
(bad)
pop
pop
(bad)
jmp
push
in
imul
frstor
pop
sbb
add
push
mov
xchg
loopne
inc
bound
mov
mov
dec
inc
push
sbb
or
ins
(bad)
lea
fisubr
push
mov
retf
jo
lods
sbb
lahf
sbb
imul
cmp
pop
fist
retf
inc
fnstsw
mov
sbb
mov
fs
ja
mov
lds
rcl
add
jne
push
stc
push
hlt
sub
fsub
test
mov
cmp
adc
idiv
sbb
call
push
int3
lods
out
inc
in
dec
loopne
pop
mov
dec
mov
ins
mov
bnd
adc
pop
int3
ret
call
retf
jle
aam
cmps
out
xor
push
push
pushf
(bad)
push
loop
stos
and
and
sbb
iret
and
into
jmp
fwait
repz
jl
add
push
xchg
xchg
xchg
inc
sub
adc
sub
outs
sbb
repz
jne
mov
add
cmps
adc
ja
dec
cld
inc
xchg
out
rol
cdq
sbb
popf
loopne
loop
cdq
xor
sub
int
les
jmp
dec
out
pop
inc
int3
iret
xchg
fimul
sub
push
retf
daa
dec
je
jp
mov
into
jmp
mov
(bad)
xor
pop
or
test
pop
test
mov
mov
adc
test
cmp
pop
or
adc
jns
cmps
js
jecxz
jo
xlat
mov
adc
inc
sub
inc
test
or
aaa
(bad)
out
cs
jns
dec
loop
in
cmp
imul
or
ret
inc
sbb
out
and
cmps
push
retf
or
adc
xor
dec
inc
cwde
cmp
fcmovnb
xlat
arpl
cwde
ret
clc
inc
gs
and
adc
dec
cwde
stc
retf
data16
clc
mov
cmp
adc
nop
pop
and
sub
adc
call
add
test
test
xor
and
mov
scas
sbb
adc
sar
mov
das
mov
ins
ds
sbb
aas
xchg
mov
cmp
mov
xchg
icebp
test
scas
xchg
mov
sbb
pop
inc
jne
daa
push
jmp
inc
pop
imul
repnz
mov
fbld
bound
(bad)
push
jecxz
jl
ficomp
pop
lods
stos
fdiv
(bad)
imul
bndldx
and
leave
inc
jecxz
into
fisubr
push
mov
popf
pop
xor
xor
sbb
inc
mov
jmp
in
cwde
mov
loop
enter
(bad)
nop
push
lock
cmp
sub
xor
lock
out
xor
inc
push
ds
pusha
jnp
hlt
sar
fsub
repz
xchg
in
mov
(bad)
dec
and
jl
popf
imul
sbb
stos
call
popf
daa
add
adc
or
das
adc
ins
fcomi
pop
push
pop
mov
mov
jb
jmp
add
push
cmp
aam
punpckhdq
add
pushf
xchg
sub
cs
sahf
sub
xchg
(bad)
mov
dec
cdq
push
fimul
xchg
sub
and
in
cwde
addr16
cmp
scas
sub
dec
jecxz
fcomp
cmp
call
mov
cwde
sbb
mov
mov
and
jmp
call
cld
xchg
pop
aad
into
adc
cmps
inc
test
sub
add
xchg
and
sbb
retf
xchg
not
enter
inc
sbb
popa
and
ins
stc
mov
mov
pushf
jae
sub
js
pop
jb
imul
sbb
popf
adc
jb
icebp
mov
inc
sbb
call
xchg
sbb
inc
sbb
or
and
sbb
jns
sub
xor
cmp
jg
adc
pushf
mov
push
add
leave
stc
movs
sbb
mov
pop
dec
ret
(bad)
retf
lahf
neg
mov
sbb
pop
jnp
mov
cmc
in
push
xchg
or
movs
frstor
jp
cwde
push
hlt
sahf
adc
and
mov
sub
fs
out
push
lods
sahf
push
fs
dec
repnz
jecxz
popa
push
outs
mov
loop
and
cld
push
sbb
jmp
pusha
sbb
xchg
xor
xchg
inc
add
ja
mov
mov
std
push
cmp
jge
lahf
sbb
cmc
cld
add
icebp
and
and
cmc
sub
out
mov
mov
mov
cmp
stc
and
lea
sti
push
out
jo
or
pushf
fild
and
ja
fcomp
or
movs
fisttp
jnp
(bad)
js
out
pop
mov
adc
shl
pop
lahf
out
(bad)
ffreep
mov
push
scas
xchg
sub
xchg
pusha
mov
mov
mov
cmc
push
xor
or
sub
je
scas
mov
mov
out
inc
(bad)
and
ja
adc
fsubr
shl
das
xor
jns
popf
shl
imul
pop
xor
inc
fld
pop
clc
mov
push
(bad)
pushf
fnstsw
movs
mov
jo
sbb
repz
loop
jns
shl
aas
mov
ret
inc
or
dec
mov
xchg
stc
jmp
aad
adc
inc
pusha
sbb
rol
pop
mov
adc
cmp
jg
and
cmp
sbb
mov
sar
sbb
loopne
int3
ret
repz
(bad)
jo
in
retf
in
add
adc
call
inc
fdivrp
sub
into
cld
popf
cmp
push
loopne
cdq
shr
loop
sub
jae
(bad)
cmc
jmp
add
dec
fild
in
test
test
pop
lock
js
imul
dec
dec
loope
dec
mov
ret
shl
jecxz
call
mov
adc
jo
fsubrp
cmp
je
lahf
mov
adc
add
ins
jns
push
scas
xor
mov
jae
jb
xor
mov
out
fcmovnu
sar
(bad)
cli
push
jnp
cmp
enter
ja
xchg
mov
add
and
adc
push
jmp
inc
push
hlt
imul
pop
cmc
push
jb
jns
inc
mov
imul
xor
fld
cs
fs
mov
sbb
loop
out
imul
shl
call
mov
cwde
ret
pop
mov
inc
mov
sub
lahf
push
inc
data16
setl
mov
mov
ffreep
adc
jmp
jmp
leave
mov
mov
prefetchwt1
xor
mov
in
fcomp
ret
add
add
shr
imul
fwait
movs
rol
and
inc
cmps
std
jmp
fwait
xor
mov
or
in
and
or
mov
das
or
mov
fxch
push
fstp
adc
fadd
fsubr
fldcw
jmp
in
fnstenv
jns
mov
in
xchg
and
scas
pop
xor
xchg
dec
xchg
or
jp
retf
ror
pop
inc
cmc
imul
inc
ja
dec
pop
mov
aad
or
cwde
sub
inc
mov
adc
cmp
out
loopne
push
enter
or
lock
and
xlat
(bad)
sbb
push
cmp
jmp
xchg
adc
jge
sti
int3
call
sbb
mov
mov
je
es
(bad)
(bad)
movs
push
in
mov
mov
xchg
or
stc
(bad)
or
pusha
or
sbb
fs
and
jbe
cmp
imul
push
xchg
cmp
into
mov
movdq2q
(bad)
addr16
dec
jns
ror
push
mov
xor
sbb
push
fcomp
mov
pop
push
cmp
(bad)
xchg
and
add
sbb
cmp
add
mov
jno
pop
or
bndldx
jg
std
fadd
sub
test
inc
jno
shr
std
pusha
fwait
mov
dec
cmp
pop
dec
fcom
pop
sbb
mov
sbb
inc
mov
sub
iret
ss
clc
aas
adc
add
mov
adc
add
cmps
jl
aam
repz
cmp
sbb
aas
test
in
adc
jns
(bad)
stos
int3
inc
in
ss
adc
es
xor
shl
mov
mov
imul
inc
gs
mov
outs
sbb
inc
jp
dec
sbb
pop
aaa
shr
adc
xor
sti
mov
ss
jb
cmc
aaa
dec
xlat
mov
outs
sbb
mov
jno
xchg
pop
in
cwde
nop
add
or
das
pop
mov
sahf
or
ret
or
aad
mov
pop
xchg
neg
lds
outs
mov
pop
cmps
sub
push
fwait
push
ss
repnz
fsubr
cmps
mov
dec
sbb
push
test
or
into
adc
xchg
call
jo
add
(bad)
dec
push
ficom
jecxz
cld
dec
or
mov
dec
mov
in
mov
inc
(bad)
and
sub
cmp
sti
lea
out
out
das
test
dec
or
xchg
adc
sub
mov
pop
aaa
sub
es
out
adc
call
adc
inc
dec
sti
les
sub
add
add
cmps
lea
sub
(bad)
pop
in
icebp
rol
retf
or
int3
cli
cs
test
lods
adc
inc
xlat
addr16
mov
mov
cmp
cs
lods
ins
int3
stc
or
lods
mov
push
dec
xor
test
scas
dec
add
retf
add
and
push
in
pop
dec
or
aad
out
mov
std
jbe
sbb
xor
adc
lods
cmps
jge
cmp
adc
mov
loopne
nop
repnz
fsubr
pop
test
adc
call
popa
jno
cmp
mov
jl
shr
sbb
test
aad
or
xchg
jmp
ret
adc
rol
(bad)
adc
out
mov
xchg
vorps
sahf
loop
leave
(bad)
mov
mov
sbb
xorps
call
ror
daa
lahf
ret
sti
pop
scas
pop
div
push
mov
sub
jecxz
imul
lahf
mov
(bad)
clc
dec
daa
cwde
dec
in
test
lods
push
lods
jne
sbb
daa
idiv
int3
push
enter
and
loope
pop
in
sub
sbb
dec
hlt
jp
das
pop
(bad)
mov
in
popa
cmp
test
gs
jg
xchg
mov
mov
inc
lods
inc
fdiv
imul
shl
bound
and
popa
out
(bad)
jecxz
cmp
cmp
cmp
push
mov
mov
dec
ins
jae
lods
cmp
iret
out
pop
cmps
push
xchg
jg
pop
mov
into
pop
xchg
test
(bad)
cdq
fs
leave
je
mov
daa
shl
popf
push
xchg
sbb
xchg
mov
sub
and
jnp
xchg
dec
stc
xchg
mov
movsx
pop
pop
cmps
or
or
pushf
(bad)
push
lods
dec
mov
inc
std
das
dec
cmps
scas
mov
int
add
or
fs
or
leave
pop
in
adc
or
xchg
mov
cmp
inc
or
jb
shl
enter
fidivr
cs
int3
pushf
lods
or
cwde
dec
popa
push
cld
lahf
gs
into
mov
fistp
sbb
outs
push
ds
sub
(bad)
ins
jns
and
into
push
jle
ret
cmp
sbb
mov
or
push
in
xor
pop
mov
(bad)
out
xor
mov
cmp
pop
jmp
sti
sar
xor
das
repz
lock
inc
es
sub
jl
aam
cwde
in
(bad)
arpl
lea
add
xor
adc
(bad)
cmp
les
lods
mov
or
sbb
xor
push
cmp
adc
adc
xlat
sub
dec
lds
sub
push
fcomp
sub
and
les
ret
call
in
cmp
xor
jmp
mov
dec
push
stos
in
inc
lods
sbb
cli
mov
inc
(bad)
mov
and
dec
jmp
lds
pop
push
retf
out
loope
gs
sti
cmp
fdiv
sbb
cmp
cmp
in
fmulp
inc
shl
mov
xchg
sbb
mov
cmp
arpl
xchg
push
mov
cmc
mov
out
jl
js
out
arpl
js
push
mov
fs
inc
push
and
int3
shl
frstor
and
std
xor
lahf
jae
sbb
dec
lahf
inc
xchg
fld
sbb
push
ds
loope
sub
or
push
push
pop
mov
jge
mov
ss
js
stc
mov
add
cmp
ret
idiv
xor
xchg
and
and
jp
mov
sbb
imul
xchg
in
inc
inc
jns
mov
or
in
cdq
sti
sub
pop
and
fsub
and
dec
sub
dec
cmps
(bad)
xchg
xor
inc
xchg
loope
std
inc
icebp
mov
js
fild
std
cmps
xor
pop
mov
iret
mov
and
out
mov
mov
popa
jne
push
(bad)
pop
out
mov
add
test
ins
cwde
aam
push
sub
std
outs
mov
xor
in
mov
ret
lods
mov
dec
add
xor
pop
xchg
cli
adc
arpl
sahf
xchg
and
add
jmp
dec
test
icebp
dec
and
pushf
neg
dec
js
pop
lods
(bad)
int
pop
shr
or
cmp
or
and
jmp
mov
push
and
and
(bad)
mov
mov
add
(bad)
popf
sbb
sbb
dec
add
ror
sub
ja
ret
mov
es
int3
pop
sub
mov
mov
inc
ss
ja
add
scas
movs
adc
or
stos
pop
and
and
arpl
fstp
mov
fcom
mov
xchg
cmp
cmp
or
jb
dec
xor
shl
mov
repz
jae
add
in
aam
ins
mov
mov
dec
cli
adc
pop
mov
repnz
inc
xor
out
das
push
ins
fiadd
pcmpgtd
(bad)
jmp
or
loop
mov
inc
in
pop
mov
repz
mov
mov
scas
call
mov
cli
or
rcr
pop
mov
enter
xor
lahf
in
imul
test
scas
xor
inc
ror
scas
xchg
ficomp
push
and
jle
jo
add
jle
mov
fadd
pop
adc
jecxz
clc
push
ror
in
test
xor
xor
jmp
adc
das
and
ficomp
(bad)
pop
imul
xchg
dec
add
imul
iret
fnsetpm(287
xchg
pop
cs
les
jl
pop
mov
sbb
pop
cs
jge
aad
mov
fnsave
push
push
stos
dec
in
xor
daa
and
(bad)
pop
lahf
mov
inc
movntq
jno
and
add
dec
push
cs
movs
in
loopne
test
or
push
dec
and
jmp
push
xchg
test
sbb
and
nop
pop
pop
mov
push
retf
cmp
scas
push
dec
and
sbb
out
clc
mov
sub
adc
xchg
inc
adc
xor
push
mov
out
jmp
cmps
mov
bound
xchg
imul
mov
out
xchg
pop
and
xchg
adc
push
movs
jle
add
adc
mov
pop
adc
test
ins
mov
enter
out
push
jo
ret
mov
jmp
and
adc
sub
mov
or
push
icebp
aas
gs
mov
in
popf
fwait
jbe
stos
cli
xlat
pushf
lock
in
ss
and
fs
pop
mov
push
(bad)
inc
pop
add
cmp
mov
data16
pop
and
test
push
mov
xchg
int3
lock
or
cmps
cmp
xor
jl
ret
pop
xchg
or
in
adc
sbb
pop
mov
int3
enter
xchg
inc
jle
jbe
sar
jg
cdq
in
popa
mov
push
adc
sub
nop
adc
pop
mov
pop
retf
or
pop
jge
dec
pop
adc
sub
mov
ret
test
jmp
call
dec
sti
sub
sub
pop
xor
or
stc
outs
call
jns
pop
lock
jbe
rcl
repz
loope
in
dec
pop
add
retf
cmp
xlat
pop
xor
xchg
inc
adc
sbb
pushf
xchg
sub
jecxz
je
cmps
mul
pop
les
add
adc
push
adc
adc
cmc
push
mov
cmp
xchg
stos
jne
rol
stos
mul
jmp
add
mov
leave
cmp
sbb
pop
and
mov
and
in
inc
sub
mov
mov
sub
shr
stos
aad
(bad)
or
stos
jo
setbe
inc
stos
jmp
and
ins
imul
rcr
xor
in
mov
mov
push
pop
pop
scas
mov
add
outs
icebp
xchg
stos
push
es
xchg
(bad)
imul
in
and
leave
outs
pop
rol
shr
push
and
xchg
dec
shl
ja
adc
inc
add
scas
(bad)
mov
or
pop
mov
mov
(bad)
pop
(bad)
jmp
push
adc
stos
stos
mov
jns
jle
inc
fwait
inc
mov
inc
lods
iret
fs
sbb
xchg
call
mov
dec
fisttp
call
loop
in
mov
dec
xchg
sbb
cmps
lahf
lds
cwde
stos
jmp
cmp
leave
sbb
rcr
cwde
test
dec
int
mov
ret
bnd
or
imul
add
icebp
xchg
or
push
sub
in
or
sbb
jb
mov
and
cmp
mov
mov
shl
mov
adc
js
test
loop
mov
stos
pop
jg
test
aaa
bound
rcl
dec
mov
mov
mov
pop
scas
add
dec
aaa
loop
add
xchg
dec
jne
mov
xor
or
mov
push
ret
nop
mov
adc
or
jmp
adc
in
addr16
jmp
test
stc
jge
inc
cmc
jbe
aam
fnstenv
mov
fs
sub
and
repnz
iret
push
sub
xor
xor
test
scas
cdq
(bad)
and
sbb
push
mov
lods
pusha
mov
xor
inc
cmc
std
rcl
jg
shl
not
sti
aam
outs
jle
fisttp
jge
mov
scas
dec
adc
mov
scas
sub
add
and
inc
dec
jns
jae
and
jo
and
iret
popa
lods
lods
adc
int3
shl
and
mov
xchg
out
sub
(bad)
bound
fwait
shl
sti
aam
cmps
cmp
cmps
dec
cdq
adc
das
loope
xchg
adc
rcl
xchg
inc
mov
fdivr
sbb
mov
cdq
cmp
(bad)
jmp
mov
add
ror
inc
call
jns
jge
mov
mov
(bad)
mov
bound
or
jnp
iret
sahf
retf
cld
dec
cmps
xchg
pop
mov
xchg
test
lds
stos
or
into
xlat
ins
pmulhuw
mov
jmp
add
inc
or
retf
cwde
scas
and
xchg
cmp
cmp
test
pop
xor
out
mov
inc
shl
xchg
cmps
adc
shl
test
push
sbb
sbb
mov
aaa
pop
std
popa
ins
pop
xchg
cmp
mov
rol
sub
test
cwde
lods
sub
xchg
inc
cli
pop
sbb
or
mov
(bad)
iret
(bad)
mov
and
aaa
mov
in
lods
loope
fsub
shr
repnz
mov
cmps
cmp
clc
fnsave
jl
aam
out
sar
arpl
or
adc
addr16
pop
les
int
cmps
cmps
sub
shl
outs
iret
push
mov
xchg
mov
aas
add
jne
std
pop
cmp
sub
pop
fcmovnbe
nop
sub
pop
popf
repz
int
(bad)
in
pop
lock
push
add
les
xor
dec
adc
in
movs
jg
and
std
repnz
cmc
fstp
ret
or
outs
arpl
and
hlt
jbe
sahf
adc
std
jns
leave
nop
rol
mov
inc
sub
mov
shr
pushf
add
mov
test
adc
cld
cmps
imul
pop
in
loop
jle
rol
inc
adc
jbe
mov
sbb
in
sub
iret
push
je
pop
jnp
aad
sub
xchg
and
fist
mov
shl
push
call
sub
je
push
sub
sbb
add
xlat
sbb
xor
add
mov
sub
and
addr16
adc
es
sbb
rcl
dec
mov
and
mov
fld
or
ja
aad
inc
xlat
stos
jle
out
mov
or
in
aad
call
adc
pop
jp
lea
cwde
imul
mov
rol
test
(bad)
enter
push
jns
arpl
(bad)
pushf
xchg
inc
pop
xchg
test
jle
setl
jne
fstp
iret
test
jo
push
sbb
out
mov
out
cli
mov
add
cmovl
scas
mov
pusha
add
dec
xor
mov
fisttp
arpl
out
jb
or
push
mov
bnd
adc
mov
push
stos
mov
adc
loopne
mov
jbe
push
(bad)
jmp
jg
(bad)
nop
(bad)
out
sbb
jmp
mov
retf
rcl
sahf
mov
cs
add
cli
sbb
jmp
nop
inc
aas
cmp
sub
xor
ds
leave
loop
or
test
jne
pop
mov
sti
mov
test
dec
xor
add
jno
pop
repz
repnz
dec
pusha
ss
add
sub
nop
mov
xor
xchg
pop
cmps
aas
mov
stc
mov
mov
mov
xor
(bad)
mov
rcr
fsub
hlt
jo
or
adc
in
ja
jne
pusha
and
out
xchg
jno
jmp
adc
das
mov
xchg
and
pusha
sbb
push
shr
ja
and
push
or
mov
iret
lods
js
fstp
add
ins
adc
or
lea
sbb
sub
(bad)
ret
add
pop
dec
or
cmp
push
mov
(bad)
xor
rol
mov
xor
jo
sbb
fdivr
bnd
mov
and
repnz
sbb
xor
inc
sar
xchg
jl
mov
mov
cmps
cmp
retf
adc
in
int
call
pop
loop
jne
iret
xchg
jl
push
sbb
scas
and
or
and
jne
xchg
aas
popf
sbb
sub
test
sbb
int
add
mov
adc
repnz
gs
inc
mov
xchg
push
add
jmp
push
loope
enter
xor
mov
pop
into
fistp
lahf
cdq
cli
mov
xor
mov
mov
ret
lods
cmps
out
adc
mov
imul
or
mov
xchg
fdivr
mov
(bad)
mov
inc
or
inc
xchg
outs
iret
jno
or
hlt
mov
or
sbb
and
ss
xor
in
sbb
mov
in
xchg
in
addr16
mov
int3
pop
aas
arpl
mov
push
cmps
or
cmp
lds
or
push
int3
xchg
xlat
mov
lock
mov
retf
(bad)
sbb
retf
imul
and
dec
add
pop
shl
pushf
push
ins
cdq
lods
push
jmp
movs
repnz
inc
xchg
mov
imul
push
mov
aam
pop
pop
daa
ret
lock
cli
gs
sub
lahf
pop
in
inc
or
fisubr
lds
add
les
stc
xchg
dec
add
cs
retf
not
add
sar
xor
pop
ret
aas
(bad)
pop
loop
jge
mov
pop
cmpxchg
aas
and
lahf
and
js
sbb
push
popa
jecxz
inc
mov
and
xchg
into
mov
test
xlat
imul
xor
and
ja
jge
xchg
inc
xlat
push
std
sub
dec
sti
imul
cdq
in
imul
movs
popf
dec
std
test
stos
out
dec
(bad)
arpl
xchg
divps
add
or
ds
int
aam
cmp
xor
pushf
outs
imul
xchg
xor
mov
test
lock
sbb
mov
inc
xchg
inc
dec
lods
mov
push
icebp
mov
loop
movs
pop
jne
pop
mov
pushf
mov
popf
jns
add
loopne
push
sbb
jne
xchg
xchg
fs
adc
mov
or
xor
or
out
or
std
or
xchg
in
cmp
clc
jge
jp
inc
sti
(bad)
jmp
pop
pop
mov
rol
das
movs
pop
pop
xchg
retf
cmp
adc
fmul
out
add
push
loop
or
outs
mov
xchg
push
cwde
test
lahf
add
call
mov
dec
cmp
dec
sub
push
int3
jno
sub
pop
sbb
ficomp
sbb
rcl
dec
cmp
fwait
and
sbb
dec
leave
shl
mov
adc
loop
loope
aaa
mov
ds
popf
mov
test
pushf
movs
loope
sar
jmp
mov
jg
pop
push
pusha
jae
mov
jp
and
mov
xor
scas
rcl
adc
xor
std
xchg
pop
pop
loopne
daa
dec
imul
mov
aam
test
mov
clc
(bad)
fstp
inc
scas
je
les
xor
icebp
cli
loop
into
test
out
lods
inc
inc
popf
xor
fist
shl
or
xchg
mov
mov
cdq
add
dec
loope
sbb
cmp
sub
call
jge
retf
jnp
iret
jae
push
sbb
jno
shl
stc
out
clc
(bad)
scas
scas
gs
pop
jecxz
nop
sub
imul
and
cmp
add
xchg
fs
inc
arpl
jbe
lea
cmc
popa
in
ja
dec
addr16
and
inc
sbb
dec
icebp
rol
dec
retf
int3
call
fst
cli
std
sub
cmp
sub
(bad)
fcomp
(bad)
cmc
xor
and
(bad)
in
je
not
addr16
out
(bad)
shl
pusha
(bad)
sub
arpl
lock
sub
or
stc
imul
inc
lods
xchg
jmp
call
fs
mul
popa
pop
adc
lock
test
out
test
ja
movs
fadd
mov
pusha
std
mov
jb
jne
rcr
mov
shr
int
or
xchg
fucomi
pop
enter
xchg
dec
retf
sub
lock
xchg
(bad)
xchg
int
lods
fmul
or
sub
mov
into
ffree
mov
jbe
sub
cmc
sti
in
and
daa
and
sbb
fisub
lods
leave
cdq
sbb
(bad)
sbb
dec
sub
scas
repz
adc
sbb
cdq
cmp
aad
sub
inc
lock
cs
xchg
add
mov
sahf
cmps
add
pop
pop
xchg
loope
xchg
fucomi
pusha
jbe
fcom
iret
(bad)
lock
shr
jecxz
dec
out
inc
scas
sahf
in
lods
or
sub
jmp
and
scas
je
jnp
add
loope
adc
push
mov
(bad)
(bad)
cwde
push
sbb
dec
cmp
sub
lea
jmp
loopne
inc
and
rcr
mov
div
sub
add
imul
jns
push
jg
ds
fidivr
les
xchg
mov
cmc
sub
mov
or
test
adc
lahf
fidiv
mov
aam
or
leave
sahf
xor
mov
jmp
adc
(bad)
int3
xchg
adc
fnsave
(bad)
xor
sbb
sahf
jecxz
or
jbe
xchg
imul
cwde
xchg
jg
sbb
ficom
dec
dec
iret
(bad)
arpl
ss
cmp
jp
cmp
fimul
icebp
jb
popf
and
mov
dec
mov
ror
sti
in
xchg
fdivr
jmp
add
jne
dec
popa
(bad)
int
(bad)
xchg
icebp
xchg
out
out
(bad)
hlt
retf
and
and
cmc
cmp
sub
cmp
adc
outs
pop
daa
mov
dec
idiv
das
dec
mov
add
inc
sahf
and
mov
sbb
add
sbb
jle
cmp
mov
dec
out
sub
clc
call
dec
imul
inc
inc
dec
cmps
inc
xor
clc
add
cs
jmp
and
jge
int
jge
popf
fsubr
adc
rol
sti
push
pusha
test
stos
aad
xchg
inc
push
xchg
mov
add
and
cmp
cli
xchg
add
pusha
pop
xchg
fcomp
cmp
add
sub
cli
das
sti
jp
mov
xchg
ins
addr16
mov
(bad)
pop
out
cdq
popf
fmul
loope
cli
push
push
and
xchg
sub
mov
ins
adc
(bad)
sahf
(bad)
jl
inc
inc
enter
and
ins
imul
jno
retf
dec
push
xor
xor
retf
movs
fnstcw
and
or
and
scas
out
lods
(bad)
pop
gs
and
call
adc
or
jp
(bad)
fwait
retf
xor
xor
sbb
sub
cmp
mov
lock
aam
ins
test
mov
inc
jmp
ja
hlt
mov
leave
mov
mov
das
adc
adc
jmp
sub
pop
cmp
sbb
mov
mov
mov
cli
mov
jmp
(bad)
jmp
sub
ins
jmp
scas
xor
je
fwait
sub
dec
mov
scas
mov
shl
mov
rcr
cmp
adc
scas
or
rol
sbb
cmc
pop
inc
push
pushf
lock
pop
mov
ror
jp
test
or
adc
mov
movs
cmp
out
cmps
fcom
mov
pop
mov
retf
shl
sbb
out
nop
and
fidiv
add
xor
mov
retf
add
dec
xor
pop
std
dec
push
fst
popf
push
mov
add
js
sub
jno
(bad)
sbb
(bad)
mov
or
mov
call
adc
cmp
dec
div
cld
xor
push
(bad)
je
xor
add
xor
mov
xchg
xchg
rcr
mul
add
les
jnp
dec
mov
or
dec
push
hlt
mov
push
lock
aas
jmp
add
inc
jg
jp
jmp
in
pop
leave
ins
lock
ficom
test
test
jo
ret
push
add
out
les
cmp
into
inc
pop
(bad)
jno
fild
lods
nop
push
ds
scas
dec
xchg
cwde
jmp
pop
pop
or
fidiv
aas
repnz
test
jo
xchg
(bad)
adc
dec
pop
jae
mov
push
pop
cld
aad
mov
out
pop
xor
repnz
out
mov
in
or
fdivr
mov
ins
jno
jmp
in
(bad)
call
jb
sbb
fs
pop
push
imul
aaa
ror
mov
pop
pop
mov
push
lock
ins
ds
cmp
shl
loop
dec
dec
outs
cld
ins
in
cwde
ret
mov
stos
outs
pop
mov
xchg
cmc
out
imul
adc
(bad)
in
add
and
add
das
cmc
dec
les
xor
shl
push
xchg
xchg
add
in
bound
xchg
gs
stos
xor
shl
fs
out
xor
jae
(bad)
icebp
jl
lds
cli
jno
sbb
mov
mov
fild
pop
fimul
rcr
jp
pop
or
mov
sub
call
jne
mov
jno
or
add
aad
xchg
adc
dec
xchg
mov
lahf
je
jno
popa
movs
or
and
cmc
ds
jne
test
mov
push
sub
inc
je
test
and
mov
adc
mov
cmps
ror
(bad)
cmps
xchg
jo
outs
das
das
cmp
pushf
pop
in
scas
sbb
cmps
stos
jl
in
ins
adc
test
cmp
add
inc
pslld
icebp
add
les
scas
sbb
aam
push
and
inc
je
je
adc
ss
push
out
scas
fwait
add
xor
(bad)
in
clc
stos
jg
mov
push
push
out
ret
and
cmp
push
mov
jnp
inc
into
fnstenv
cmp
add
adc
or
jae
sbb
fmul
out
mov
push
sbb
xor
pop
pop
leave
pop
pop
retf
sbb
push
mov
ror
or
push
jg
push
push
inc
ins
jecxz
pop
cmp
pusha
dec
dec
pop
popa
and
mov
fwait
daa
fldenv
neg
dec
dec
mov
inc
dec
cli
pop
xor
call
and
pop
daa
jmp
mov
test
and
iret
mov
ins
mov
inc
fdivr
hlt
arpl
push
popf
xor
xchg
and
sti
mov
mov
mov
sub
call
sbb
adc
push
jnp
test
pop
cli
cs
out
sbb
pusha
xchg
sti
mov
popf
outs
(bad)
aaa
xor
aad
or
hlt
cld
ds
xor
mov
cmp
mov
lahf
int3
int
stc
sbb
xor
inc
xor
or
and
push
jne
jne
sub
loope
repz
scas
cmps
jg
push
clc
mov
loop
push
fld
add
cdq
loopne
aad
xlat
test
pop
jno
or
sbb
xor
dec
leave
add
adc
sub
push
xor
dec
push
mov
mov
mov
and
inc
jae
jbe
and
out
popf
test
ret
in
lods
mov
(bad)
xor
jo
cld
dec
add
imul
scas
inc
pop
jmp
dec
aam
out
inc
cmp
(bad)
fldcw
or
mov
int3
rcr
aas
sar
lahf
(bad)
push
cmp
adc
pop
fdivr
cmp
mov
(bad)
retf
dec
and
push
test
aaa
push
(bad)
outs
add
fisttp
retf
mov
lahf
xchg
xor
popf
mov
outs
jle
adc
xor
dec
sub
inc
pop
dec
sub
add
xor
dec
adc
cwde
xchg
cmp
adc
std
mov
push
and
ret
push
push
xchg
cld
fldenv
stc
test
adc
mov
cli
dec
or
in
push
gs
sbb
(bad)
or
mov
jp
dec
ret
les
inc
(bad)
mov
and
jmp
scas
pop
add
lods
mov
std
lds
and
mov
cmp
and
pop
mov
fisubr
repnz
push
jmp
jb
add
enter
jb
cmps
shr
or
dec
mov
xor
xchg
js
mov
pop
jbe
and
in
in
push
jmp
fisttp
or
pop
imul
add
xchg
inc
std
push
lea
fs
cmp
movs
out
aas
loopne
js
push
loopne
lea
arpl
(bad)
and
push
ficom
je
and
fild
adc
or
(bad)
mov
dec
ds
dec
sti
(bad)
test
push
mov
out
add
xchg
popa
into
stos
xor
pop
sub
push
ins
adc
daa
xchg
repz
xchg
dec
rcr
fiadd
push
jne
dec
(bad)
loope
dec
sbb
dec
dec
xchg
lea
pop
dec
cmps
dec
cmp
fwait
ret
xlat
dec
jle
in
mov
mov
cmp
inc
sbb
gs
rcl
enter
pop
sbb
pop
lds
mov
sti
or
jo
loop
lods
xchg
jge
fwait
sub
pop
jbe
mov
pop
cmp
push
les
add
dec
sbb
lahf
fisttp
inc
inc
loop
shr
sub
mov
xchg
leave
test
pop
adc
out
ror
scas
in
xchg
mov
cmp
mov
pop
add
xchg
(bad)
sbb
in
jp
js
mov
jae
dec
lds
adc
xchg
icebp
xor
dec
int
ins
lock
adc
nop
dec
cmp
fwait
sbb
imul
pop
call
jae
cmp
jl
add
sub
in
pop
(bad)
ins
inc
sbb
movs
mov
in
mov
aaa
jmp
mov
out
and
je
rcl
or
dec
mov
call
ins
test
and
jl
mov
in
pop
cmp
es
mov
inc
popa
daa
xchg
xor
fs
sub
popf
mov
sbb
cmps
dec
and
adc
xchg
push
(bad)
or
jg
push
mov
enter
mov
std
call
sbb
retf
test
cmp
(bad)
mov
jecxz
addr16
jp
lds
out
sbb
and
jmp
jns
fucom
js
add
repz
mov
pop
les
das
adc
into
(bad)
add
js
std
popf
mov
sub
xor
(bad)
leave
pop
dec
push
jnp
mov
fiadd
addr16
sub
mov
pop
inc
xchg
pop
jb
hlt
clc
xor
mov
fs
jmp
in
sub
hlt
jg
(bad)
out
rol
scas
(bad)
fmul
pop
xchg
add
call
gs
inc
jno
imul
jmp
push
or
(bad)
ins
aas
xchg
in
and
pop
mov
sahf
inc
les
sahf
xchg
sbb
ret
xchg
loopne
test
in
sbb
xchg
sub
out
mov
xor
mov
xchg
xchg
movs
mov
ret
leave
sub
jnp
ds
jo
jno
std
jg
dec
scas
data16
lock
jae
xchg
mov
aas
lds
push
mov
stos
and
leave
xor
push
loope
loope
rcl
mov
push
jmp
shl
lods
or
jg
loopne
sbb
in
mov
adc
cmp
mov
lods
push
cwde
and
sub
mov
cdq
dec
iret
jmp
pop
dec
out
(bad)
mov
retf
jo
sbb
inc
jnp
retf
xor
enter
cmc
jg
loopne
push
test
xchg
sbb
addr16
fcom
(bad)
jecxz
and
loope
mov
and
inc
mov
cld
and
add
aaa
jge
ja
outs
xor
push
aad
push
inc
jne
int3
mov
adc
test
imul
fld
push
bound
mov
aaa
mov
adc
pop
pop
inc
sbb
lea
repnz
push
mov
inc
or
movs
dec
or
inc
movs
bound
cdq
push
lea
rsqrtps
(bad)
adc
inc
push
stos
lahf
jmp
retf
ror
(bad)
dec
imul
inc
jb
jnp
push
rol
dec
ret
clc
hlt
xor
ins
push
ror
mov
and
xchg
add
mov
imul
jle
or
cmp
cdq
adc
cmp
rcr
scas
push
call
mov
adc
mul
xor
add
sbb
push
sub
jae
pop
push
xor
ret
adc
jg
aas
arpl
rcr
push
xchg
in
ror
cwde
push
pop
jno
push
repz
xor
shl
mov
push
add
push
mov
and
sub
lea
cwde
cmp
test
sbb
mov
arpl
push
cdq
sti
(bad)
jmp
cwde
aaa
pop
retf
dec
sub
cs
fsub
sub
cmps
sbb
js
mov
mov
dec
inc
cmp
pop
arpl
inc
mov
ds
pop
outs
fsubr
clc
call
dec
push
repnz
dec
sar
mov
inc
fmulp
dec
enter
cmps
pop
dec
icebp
mov
test
push
xor
rcr
loopne
jmp
fcomp
pop
fwait
dec
fs
or
into
test
adc
sbb
dec
xchg
pop
push
inc
js
pop
xchg
test
pushf
xor
xor
stos
es
scas
ja
jge
mov
iret
je
jnp
xor
xor
loop
pushf
and
pop
pop
int3
fistp
loop
sbb
hlt
in
std
cmp
rol
jmp
movs
int
xor
sub
jmp
push
ror
out
ds
xchg
jae
pop
adc
call
add
std
cmp
mov
push
mov
gs
xor
arpl
sbb
lods
ret
adc
out
inc
dec
jae
das
outs
fwait
add
cmc
sti
sbb
lods
aas
int
shl
inc
lds
popa
aam
mov
sub
xor
push
pop
add
addr16
xchg
arpl
and
rcr
push
adc
mov
add
js
daa
pop
jo
les
sub
push
cwde
loopne
rol
sti
cmp
xor
(bad)
mov
jne
xlat
add
mov
nop
xlat
mov
retf
cmp
pusha
inc
out
cdq
inc
adc
pop
outs
not
in
xchg
pop
or
retf
cmp
(bad)
jl
inc
xor
js
add
mov
sbb
aad
retf
mov
out
in
(bad)
lahf
imul
mov
pop
inc
mov
stos
test
out
sub
mov
xchg
loopne
push
add
add
push
mov
push
rol
or
loope
mov
fild
sbb
cli
std
lahf
adc
xchg
jb
mov
sbb
ficom
sbb
adc
clc
mov
pop
jnp
xchg
sub
out
mov
or
inc
mov
stos
xchg
cmp
pushf
sub
dec
cmc
xchg
stos
jmp
popf
xchg
add
and
mov
pushf
dec
and
push
ss
sbb
movs
xor
adc
out
dec
mov
jmp
lds
jmp
cmp
sub
sbb
add
sub
jmp
xchg
out
jne
pop
inc
inc
xchg
inc
sbb
call
xor
push
(bad)
cli
nop
or
sbb
and
sahf
push
stos
jle
push
add
xchg
mov
js
xchg
add
jl
iretw
pop
adc
ss
ror
sbb
dec
push
cmp
pop
std
push
stos
nop
or
sbb
cmps
mov
jb
retf
mov
push
fadd
rcr
inc
adc
xor
jae
and
shl
mov
mov
dec
jmp
cwde
mov
mov
ja
outs
push
pop
mov
idiv
imul
loopne
xchg
push
mov
mov
sar
xchg
push
das
repnz
jb
xchg
xchg
out
aas
xchg
(bad)
fld
push
loopne
(bad)
repz
adc
fisttp
sbb
test
test
sbb
push
ins
push
or
cld
out
xor
or
push
daa
push
lods
push
rcr
push
aaa
cdq
push
mov
repnz
lds
pop
test
jmp
xchg
cmps
push
add
xor
mov
cmps
enter
xlat
clc
sbb
ret
call
pop
add
pop
in
xor
inc
test
dec
push
and
sbb
js
sti
mul
pop
xchg
or
xchg
jno
pop
xor
cmp
daa
pop
and
mov
loop
mov
lods
les
imul
dec
and
push
sahf
push
fsubrp
loope
jno
dec
push
movs
and
je
adc
test
add
mov
and
stc
jb
push
xor
pushf
xchg
in
dec
cmp
(bad)
mov
pop
inc
add
(bad)
scas
dec
mov
pop
cmp
xlat
and
xchg
pop
or
cwde
scas
add
and
jb
loop
clc
adc
sbb
xor
pop
inc
mov
out
ins
jl
in
test
xor
push
fmul
xor
mov
push
sbb
ret
pop
mov
repnz
xchg
rcr
jne
push
enter
pop
dec
ins
sbb
adc
dec
adc
pop
fild
dec
xchg
jecxz
enter
xor
bound
iret
rcr
xchg
daa
(bad)
cmp
adc
pop
aas
push
test
les
scas
xor
sbb
push
push
outs
aaa
imul
inc
mov
inc
push
xchg
fwait
je
xchg
adc
test
xor
test
adc
sub
mov
add
xor
sar
(bad)
ins
xchg
mov
call
or
sub
cli
sbb
xchg
loop
push
mov
ds
movs
test
scas
xchg
pop
jo
iret
or
push
je
adc
adc
and
jbe
and
pop
enter
xchg
cdq
jo
xchg
push
push
jle
adc
cdq
imul
mov
pop
push
popf
imul
xchg
popf
lahf
push
dec
int3
mov
iret
cmp
fnstcw
dec
ds
mov
loope
rcl
xor
sahf
mov
loop
cmp
cmp
push
call
lock
xor
sbb
inc
jge
xchg
mov
and
cmp
es
pushf
mov
popa
sub
cmp
cli
sbb
aas
mov
repnz
pop
jmp
or
pop
inc
xlat
loope
call
in
imul
lods
or
shl
out
jno
out
sbb
pusha
outs
mov
inc
aad
stos
mov
pushf
iret
in
inc
push
popa
mov
cmps
(bad)
stos
sbb
es
int
arpl
dec
inc
or
inc
inc
pop
mov
xchg
sub
fbld
pop
push
imul
leave
xor
pop
clc
dec
cmp
outs
jbe
dec
jp
ret
mov
xchg
cmp
out
or
add
imul
xchg
dec
sbb
int
xor
inc
int
inc
add
or
imul
push
xor
xor
out
lea
xor
add
inc
ficom
fdiv
inc
dec
pop
dec
xchg
push
push
xchg
shl
sub
jg
and
xchg
inc
push
out
out
jmp
mov
sbb
inc
bound
fs
sub
bound
das
xchg
test
loop
ins
scas
inc
scas
por
cs
xchg
loop
or
jno
cli
les
(bad)
cli
hlt
rol
leave
push
adc
xlat
cdq
inc
ins
in
mov
xchg
out
fcomp
cwde
ficom
lock
inc
xchg
fucomi
inc
call
aam
cmp
clc
jns
(bad)
sbb
sub
mov
inc
arpl
mov
imul
and
leave
xor
cs
pop
xchg
ins
mov
mov
aad
adc
or
push
in
mov
inc
cdq
(bad)
cmps
adc
xchg
fbstp
sbb
call
or
test
loopne
or
aad
mov
arpl
and
cli
jns
push
ja
and
jp
xchg
xchg
inc
xchg
arpl
jg
mov
xchg
stos
jp
fdivr
in
jnp
jle
aam
cld
cmps
add
xchg
dec
pushf
xor
fs
adc
and
repnz
loope
jecxz
fild
xchg
cs
(bad)
pop
shl
add
xlat
add
add
popa
repz
add
pop
mov
sub
dec
(bad)
(bad)
repz
fchs
ret
mov
fstp
mov
and
sbb
mov
fst
fnstsw
loopne
or
std
pop
pop
xor
les
jge
ret
popa
jge
mov
pop
lds
cmp
jp
jbe
(bad)
mov
repz
rcr
mov
cmps
mov
or
and
and
adc
shl
sub
xchg
call
sub
mov
inc
popa
nop
xor
inc
pusha
mov
out
aam
or
retf
out
cmp
sub
push
push
mov
out
fdiv
and
popf
inc
mov
pop
lods
or
or
popa
jp
pop
sbb
push
cmp
test
mov
or
xchg
in
idiv
mov
jg
cmp
fnstenv
shr
(bad)
cmp
loop
test
mov
call
pop
cmp
and
mov
push
inc
fucompp
and
sbb
shr
mov
repz
dec
jbe
sbb
adc
outs
inc
adc
in
shl
jbe
sbb
retf
(bad)
cwde
(bad)
add
dec
cmp
into
jo
popf
inc
repz
mov
and
jmp
lea
jmp
inc
jp
jge
inc
or
inc
mov
xor
dec
bound
pop
sbb
dec
jp
shr
jecxz
pop
lds
leave
shl
inc
dec
mov
jo
ret
cmc
dec
pop
das
xor
std
ja
or
imul
jecxz
test
mov
out
inc
lods
in
in
mov
xchg
clc
xchg
push
mov
in
xchg
pop
push
jp
adc
and
jecxz
mov
movs
add
cs
cs
jl
loope
jmp
jp
into
je
mov
inc
ror
xor
sbb
(bad)
jbe
out
and
jno
or
sbb
sub
(bad)
lahf
mov
mov
or
add
add
cdq
rsm
fisttp
sti
cmp
sbb
pop
mov
sub
loope
inc
or
xchg
daa
inc
outs
pop
jmp
in
adc
or
jnp
mov
xchg
test
cdq
inc
lock
sti
mov
inc
in
xor
xchg
sub
stc
ror
dec
mov
fld
cmps
pop
mov
xchg
aas
xor
xchg
rcl
xor
aad
xchg
pushf
pop
das
mov
sbb
dec
scas
mov
addr16
call
fbld
mov
into
lock
jae
fild
sub
or
or
frstor
cld
imul
push
shl
ds
add
cmp
xor
aaa
popa
je
dec
imul
mov
inc
retf
pop
mov
or
aad
cmp
mov
shl
sbb
icebp
jnp
cmp
dec
les
adc
mov
xchg
add
and
and
add
pop
popa
aad
in
push
inc
(bad)
mov
xor
gs
xlat
adc
fimul
movs
out
sbb
popf
add
hlt
iret
in
push
cs
sar
lods
and
jmp
jg
jg
or
scas
mov
jnp
adc
(bad)
fsincos
push
mov
xor
inc
in
pop
mov
ja
ret
adc
fs
ret
(bad)
jns
movs
gs
jns
mov
(bad)
cli
push
pop
loop
jns
addr16
loopne
or
in
cmc
pop
sbb
shr
repnz
pusha
push
data16
jl
sub
addr16
lods
pop
sbb
dec
pusha
jnp
int
addr16
pop
xchg
sbb
rol
std
loop
jmp
enter
inc
or
or
mov
js
mov
mov
in
push
ret
ja
sbb
icebp
dec
mov
or
push
scas
leave
xlat
mov
das
imul
mov
mov
pushf
ja
pop
and
add
pop
adc
pop
outs
cld
movs
jg
sbb
mov
xchg
inc
xchg
mov
mov
imul
dec
jns
test
sub
push
ficomp
mov
pop
jmp
repnz
data16
jbe
fwait
pop
pushf
mov
clc
xchg
mov
pusha
mov
int
add
(bad)
cmp
clc
pop
dec
xor
in
adc
and
loop
mov
inc
adc
inc
cmp
push
test
pop
cmp
and
jle
inc
fstp
addr16
xor
push
addr16
scas
inc
adc
stc
inc
int3
imul
fs
jno
pop
or
mov
lea
inc
sub
mov
ret
xchg
cmp
mov
pop
jb
int
popa
jae
sbb
popf
pop
mov
jmp
push
sbb
out
inc
out
inc
fisubr
mov
ret
mov
mov
jne
jo
loope
scas
sbb
sbb
daa
mov
pop
gs
cld
retf
push
jg
adc
jae
ficomp
sbb
xchg
pop
jbe
aam
out
aam
jmp
jle
push
mov
sbb
dec
mov
add
dec
cmp
rcr
mov
lahf
in
les
push
retf
cmps
pop
imul
sub
pop
pop
iret
jecxz
and
arpl
push
inc
ss
in
xor
fdivr
ss
movs
push
push
push
jl
cmp
and
xor
pop
das
movs
stos
mov
pop
bound
(bad)
add
mov
jnp
xlat
out
push
dec
push
lock
shl
push
in
xchg
mov
inc
xchg
(bad)
xor
int
es
mov
(bad)
xor
jle
inc
inc
icebp
dec
popf
dec
test
sub
mov
cmp
xchg
jns
mov
je
leave
sbb
loopne
ror
imul
hlt
jmp
mov
ja
fsub
mov
jne
mov
add
push
mov
loopne
push
ds
xchg
aaa
pop
mov
mov
ins
mov
push
aaa
xchg
popf
das
lahf
cmp
dec
icebp
and
xor
sub
push
into
push
inc
shl
stos
(bad)
xchg
inc
shl
rcl
ss
lds
lods
out
jle
dec
cmp
add
sub
inc
xor
inc
movhps
jp
push
mov
or
les
sbb
mov
mov
fistp
xchg
jecxz
aad
sub
or
pop
adc
cmps
and
out
test
xor
lods
mov
aam
int3
cmc
test
dec
lahf
jae
push
les
imul
mov
or
cmp
stos
push
icebp
and
jle
jbe
movs
push
dec
cmp
fstp
push
xchg
cmps
push
in
pop
jb
xlat
jnp
leave
xor
push
repnz
stos
push
ror
sub
mov
ret
sbb
sti
xchg
imul
add
les
cld
fbstp
xchg
add
jae
push
repnz
mov
je
add
fldenv
test
push
inc
adc
mov
sub
call
call
(bad)
cmp
sub
out
sub
stos
retf
pusha
mov
test
xchg
push
sbb
retf
mov
mov
adc
pop
push
out
mov
mov
hlt
push
pop
inc
lods
pop
or
test
ficomp
ret
ret
mov
push
jae
mov
stc
in
jp
ret
rol
pop
lods
add
rcr
jb
xor
add
js
aam
dec
push
mov
add
sar
(bad)
fmul
pop
es
std
xchg
pop
fisttp
sub
and
pop
cs
inc
in
iret
jl
clc
or
(bad)
cdq
retf
into
xor
and
call
repz
pop
sbb
or
pushf
mov
or
fmul
xor
dec
adc
stos
ss
add
shr
sub
call
test
inc
mov
sbb
mov
inc
(bad)
fcomp
pop
mov
cdq
pop
xchg
cwde
jg
xor
cmp
push
inc
or
jg
outs
lods
pop
push
fadd
sub
outs
xchg
mov
test
sub
out
jb
int
pop
test
inc
xchg
idiv
fisub
retf
inc
(bad)
and
fs
jecxz
inc
and
movs
fnsave
mov
mov
mov
or
and
mov
mov
inc
aaa
sbb
mov
ins
test
daa
les
cmc
sub
mov
clc
call
xchg
in
fadd
xor
or
jno
scas
pop
inc
aam
aam
mov
jb
dec
xchg
fmul
mov
pop
movs
push
repnz
sbb
jecxz
sti
jo
ins
jae
lock
push
outs
idiv
arpl
adc
aad
rep
adc
in
mov
pop
push
cmp
call
xchg
mov
mov
mov
jbe
arpl
fmul
shl
out
mov
sbb
aas
xor
inc
iret
cmps
mov
push
pop
dec
loopne
pushf
out
and
mov
mov
ds
in
pop
movs
sub
lods
(bad)
les
lds
ins
bnd
jp
jp
les
cwde
mul
les
push
imul
xchg
add
ss
in
or
fisubr
fidiv
or
jge
sbb
adc
mov
iret
jb
jno
mov
fisub
call
sar
xchg
mov
fistp
stos
pop
jne
ins
dec
dec
je
outs
mov
out
stos
fldcw
inc
cmp
adc
jle
iret
(bad)
stc
daa
(bad)
jo
sbb
cmp
shl
inc
shl
jmp
sbb
stc
dec
sub
imul
or
add
mov
inc
pop
mov
xchg
dec
lock
pop
lds
sbb
in
pusha
shr
(bad)
mov
ins
es
mov
ss
xchg
lahf
jne
pop
jl
ret
sub
mov
stc
mov
retf
cmps
in
jne
xchg
mov
cmp
mov
leave
mov
outs
repnz
call
dec
div
cmc
inc
jmp
out
enter
jle
mov
nop
xor
push
repnz
jmp
aaa
add
js
jnp
and
xchg
push
mov
stc
leave
loop
fisubr
call
std
js
movs
sar
fidivr
arpl
xor
mov
movs
fistp
js
(bad)
pop
xchg
cmp
mov
mov
jo
lahf
jp
push
popf
xlat
daa
xchg
hlt
fidiv
ret
or
adc
push
add
ret
push
popf
test
jbe
sbb
and
pop
loope
ins
aam
push
push
pop
or
dec
jnp
iret
stos
repnz
ins
adc
xchg
sub
dec
les
xchg
stc
add
es
push
out
ror
mov
movs
mov
cmc
ss
inc
jno
sbb
xor
dec
mov
mov
mov
in
inc
cld
cwde
into
aad
sbb
or
mov
mov
mov
mov
xor
adc
mov
cmp
cdq
adc
cmp
xor
lea
clc
mov
imul
mov
dec
xchg
add
nop
ds
in
ins
mov
leave
mov
int3
sub
cmp
lea
pop
les
pop
mov
cmp
loop
xchg
imul
inc
pop
mov
fiadd
push
fldenv
mov
daa
es
xchg
inc
(bad)
cli
cmp
call
daa
cmp
and
cmp
adc
push
call
inc
test
push
cdq
mov
repz
jl
outs
int3
adc
test
cld
push
push
cmp
dec
xchg
xlat
cmp
xchg
gs
idiv
adc
jmp
mov
fldcw
cld
loope
mov
or
xor
out
movs
test
hlt
inc
test
call
in
aas
inc
outs
rol
pop
hlt
jp
dec
ror
fistp
push
lock
cmp
jno
(bad)
mov
xchg
hlt
pop
mov
fist
xor
jp
adc
pop
inc
cmp
mov
jbe
pop
jbe
les
cmc
jo
clc
inc
add
cdq
lahf
es
aas
sbb
xchg
mov
mov
aaa
sahf
jns
adc
test
stos
dec
push
shr
lds
pop
or
jl
pop
clc
imul
in
push
xchg
add
push
mov
inc
shl
arpl
inc
clc
out
jl
mov
jmp
rcl
es
in
mov
mov
movsx
jg
hlt
sub
mov
push
jp
inc
adc
lods
gs
xor
sbb
add
or
xchg
cmp
sub
push
sub
push
adc
(bad)
xor
inc
xchg
fimul
sbb
mov
add
or
xor
nop
push
jg
push
dec
arpl
jae
ror
lods
fcmovb
cmc
xor
dec
pop
rcr
adc
in
xchg
shr
pop
inc
(bad)
cmp
lds
add
and
test
ret
or
movs
cmps
pop
cmp
js
enter
mov
ss
lea
jle
inc
scas
loope
cmp
dec
cmp
mov
cmp
or
ffree
adc
sub
ret
xchg
pop
push
mov
addr16
mov
inc
lahf
add
xor
sti
movs
mov
cmovno
push
push
stos
ja
es
cmps
mov
cmp
sahf
mov
jbe
rcr
mov
push
mov
rol
fdiv
or
rcr
and
or
cmp
mov
(bad)
mov
cmp
imul
jae
movs
ds
retf
out
(bad)
pop
jno
adc
push
dec
mov
imul
jg
scas
retf
pop
push
fcomp
sub
dec
add
dec
movs
clc
(bad)
push
adc
cs
and
mov
xor
gs
mov
push
shl
mov
scas
inc
rcl
fmul
sub
add
and
or
add
cmp
clc
jg
add
lods
out
xchg
dec
xchg
pop
cmp
retf
cmc
sbb
or
ret
movs
mov
outs
jecxz
lods
test
xchg
bound
dec
mov
sbb
outs
jbe
and
in
popf
jg
lahf
cmp
xchg
push
xchg
cmc
inc
gs
in
es
imul
ret
shr
dec
fs
pusha
test
lods
cmp
cld
lahf
jnp
jl
sahf
mov
(bad)
retf
or
fwait
das
test
push
jl
cmp
outs
inc
mov
push
push
rsm
pop
sub
jecxz
inc
push
xor
dec
fisttp
cmps
not
dec
cmp
inc
add
push
and
ins
mov
jle
leave
cmp
mov
int
das
mov
aas
mov
push
leave
scas
retf
ja
in
mov
add
mov
jno
xchg
or
inc
jnp
ret
ret
push
cmp
xchg
adc
add
mov
loop
retf
sbb
movs
imul
add
fstp
mov
enter
lock
push
sub
std
in
push
arpl
shl
sbb
in
pop
out
mov
lahf
test
movs
mov
sbb
repnz
or
rcl
jae
xlat
cmp
mov
aad
jp
cmp
ror
in
lods
push
call
mov
push
xor
xor
and
xchg
test
inc
fld
fisubr
js
cmp
js
push
daa
outs
mul
inc
call
xor
int
bound
aaa
sbb
fs
or
outs
sbb
push
ins
xchg
mov
adc
inc
jns
push
retf
stos
push
dec
gs
out
mov
pop
pop
int
mov
pop
into
dec
aam
xadd
push
mov
pop
add
lods
stos
add
sub
fldenv
xchg
jnp
neg
pop
loopne
jnp
fisttp
mov
mov
aas
into
and
jmp
xchg
or
inc
mov
cwde
add
imul
std
ins
repz
sub
hlt
mov
push
popf
mov
into
mov
mov
mov
jne
out
push
push
test
push
int3
jne
lahf
ret
and
std
out
popf
loop
test
adc
mov
in
in
adc
dec
add
adc
mov
inc
js
or
pop
rcr
inc
sub
ds
push
into
outs
int3
jnp
cmps
arpl
mov
mov
push
in
mov
stos
(bad)
jmp
lods
xchg
push
push
mov
sahf
or
cmp
and
xchg
pop
scas
shl
iret
pusha
aam
jno
or
add
jg
pop
push
enter
in
xchg
out
stc
fist
pop
mov
dec
add
sub
cmp
adc
adc
test
xor
ins
dec
les
or
ds
div
push
enter
cmps
ficom
lahf
loopne
bound
sub
stos
jbe
cmp
ins
xchg
or
push
outs
fistp
test
je
mov
pop
icebp
sub
(bad)
cmp
or
repnz
bound
add
sbb
imul
mov
movlps
fisttp
inc
sbb
xor
cmps
stos
ins
aas
bound
mov
stos
loopne
out
or
shr
dec
aas
push
mov
jmp
int3
xchg
jmp
push
pop
or
or
pop
xchg
popa
cwde
sbb
xor
sub
and
push
mov
pop
jnp
scas
jno
jno
cli
je
and
pop
scas
or
data16
push
aaa
adc
xor
fild
xlat
push
or
jnp
and
daa
dec
dec
test
shl
inc
pop
xor
mov
adc
xor
xor
adc
test
push
mov
inc
sti
or
push
shr
inc
xor
mov
call
fisub
aaa
leave
les
in
and
fmul
mov
pop
and
sbb
std
and
js
sbb
dec
xchg
sbb
mov
and
sub
das
icebp
cmp
push
enter
lock
fucom
jmp
popa
dec
stos
sbb
sub
mov
or
sbb
inc
outs
inc
(bad)
or
xchg
js
jp
and
call
xchg
add
addr16
data16
sbb
push
in
shl
xor
jnp
retf
pop
clc
mov
mov
in
sbb
cmc
ins
push
add
imul
mov
or
call
out
fs
mov
mov
xor
and
scas
dec
jb
jb
inc
gs
adc
pop
mov
mov
add
ret
adc
and
sub
aad
arpl
outs
test
sub
jbe
xchg
add
es
sub
mov
in
lock
lods
rcr
je
dec
clc
xchg
std
enter
sbb
sub
mov
jle
adc
loop
or
dec
test
hlt
xlat
nop
or
ret
stos
mov
mov
lods
ss
int3
mov
pushf
adc
pop
lods
add
push
pop
push
dec
add
xor
popa
sub
mov
fsub
xchg
in
cmp
jle
jle
adc
xlat
stos
mov
fisubr
fs
push
push
dec
clc
and
push
sbb
or
div
jns
xchg
(bad)
pushf
popa
std
and
mov
cdq
adc
scas
ins
dec
lea
cmc
dec
cmp
aas
sbb
(bad)
(bad)
xchg
jb
out
pop
or
ss
adc
cmp
push
clc
push
jle
mov
mov
or
call
dec
jns
and
movs
(bad)
and
pop
push
dec
push
test
in
mov
jno
sbb
icebp
mov
adc
adc
out
pusha
dec
sub
adc
sbb
dec
push
adc
fcom
and
aam
push
jp
and
xchg
pop
jmp
or
ds
jne
add
(bad)
in
jmp
in
ret
(bad)
stos
xchg
les
xor
retf
mov
int3
test
and
mov
pop
inc
shrd
dec
and
pop
aam
xor
lock
lods
adc
push
mov
mov
aam
mov
and
out
cwde
inc
adc
fdivr
mov
rcr
dec
dec
add
pop
movs
mov
scas
or
popa
call
lock
mov
dec
test
clc
push
stc
test
stos
stos
jmp
ds
pop
frstor
pop
in
and
out
add
fbld
cld
cs
es
mov
pop
push
fstp
cs
popf
dec
pop
outs
dec
call
inc
loopne
xor
inc
es
jns
pop
cmp
pop
ret
cs
imul
sahf
sti
popf
mov
sbb
or
aas
das
jmp
pop
sar
(bad)
mov
(bad)
call
stos
add
and
or
push
into
out
add
retf
sbb
or
mov
pop
mov
mov
jbe
retf
icebp
aam
add
lods
scas
add
arpl
xor
mov
xchg
shr
shl
(bad)
aam
jmp
jmp
cmp
sub
mov
push
mov
xlat
push
xor
inc
dec
inc
ficom
jmp
int
mov
jns
fs
xchg
test
or
(bad)
sub
mov
ret
sub
dec
xchg
es
xchg
or
jae
push
mov
movs
mov
sub
cmps
or
adc
pusha
aas
in
movs
lods
je
stos
(bad)
mov
je
inc
or
pop
push
xor
or
adc
pop
mov
push
mov
in
push
iret
leave
pushw
pop
pusha
xchg
movs
inc
or
lds
loope
push
sub
push
inc
das
aas
pusha
jg
push
sub
fadd
mov
jae
or
in
mov
xchg
addr16
pop
push
mov
cmp
xrelease
in
dec
push
aaa
add
xchg
(bad)
icebp
dec
data16
push
lahf
jle
cdq
outs
neg
nop
popf
jns
inc
dec
cmp
jle
mov
arpl
int
clc
loope
mov
and
mov
push
popf
and
out
sub
pop
mov
or
test
es
ins
loop
rcr
mov
lock
(bad)
sub
idiv
and
push
repnz
sub
js
mov
xchg
imul
(bad)
sbb
sahf
add
and
sbb
div
shl
das
sub
jo
ret
call
out
mov
push
(bad)
dec
dec
sbb
fwait
xor
movs
jnp
in
mov
int
cwde
ja
jnp
or
pop
jmp
mov
jge
mov
fiadd
xor
mov
mov
push
add
and
and
shl
or
sub
cmp
arpl
(bad)
imul
pop
or
mov
xlat
pop
in
mov
scas
pop
mov
push
pushf
call
sub
addr16
(bad)
push
or
push
aas
call
inc
or
fiadd
dec
mov
das
dec
xchg
jb
loopne
jle
inc
mov
cwde
clc
jne
loop
xor
and
jg
inc
pop
push
sti
xor
lea
mov
sbb
xor
int
cmp
stos
out
pop
test
ds
jl
xchg
std
(bad)
dec
adc
jne
ficomp
ins
xor
ret
call
ja
inc
mov
ret
test
or
out
test
adc
rcl
inc
or
and
mov
cmp
icebp
icebp
push
sbb
sub
adc
sbb
adc
retf
xchg
xchg
lods
movs
out
and
jb
push
mov
mov
bnd
lea
and
js
mov
cmp
add
in
cwde
dec
lahf
ror
pop
addr16
adc
xchg
add
sbb
dec
int3
inc
dec
xor
out
inc
add
mov
fidivr
retf
jne
jne
xchg
add
or
xrelease
sub
and
cs
jp
fs
jmp
push
enter
stos
(bad)
out
jmp
and
mov
add
stos
sub
mov
mov
pop
aam
mov
mov
out
mov
ins
(bad)
sahf
mov
xchg
sub
push
daa
icebp
pusha
mov
lea
(bad)
(bad)
mov
push
jno
fadd
or
(bad)
mov
cmp
cli
jl
push
popa
shl
cs
mov
mov
sub
push
mov
mov
outs
leave
call
das
cdq
in
dec
nop
inc
hlt
jl
xchg
fcom
fs
xchg
das
sub
sub
push
into
xchg
push
xor
jb
mov
inc
popf
fsubp
jne
dec
stos
cmc
sbb
and
mov
movs
scas
mov
retf
je
dec
mov
out
inc
pop
retf
pop
mov
push
xor
sub
popf
adc
clc
test
or
cmp
shr
xchg
push
inc
pop
daa
stos
add
cmps
pop
jnp
pop
adc
lea
test
or
loopne
into
sbb
add
sub
loopne
adc
ds
push
inc
xor
mov
mov
mov
mov
cmc
add
jp
cmp
outs
retf
nop
push
imul
xchg
test
outs
inc
pop
cs
leave
aad
mov
or
sbb
out
loopne
xchg
retf
cmp
gs
fdivr
sti
es
xor
add
outs
jb
xchg
push
mov
sub
sbb
cmp
pop
sbb
mov
add
xor
loope
icebp
xor
aas
add
scas
fwait
or
cli
inc
jge
and
iret
jnp
cmp
pop
xchg
adc
ins
pushf
in
push
aas
xor
sbb
cmp
iret
pop
sti
pop
xor
nop
pop
aam
loopne
mov
test
ror
add
call
addr16
mov
jg
sub
mov
and
dec
mov
cmc
iret
sahf
cmps
rcr
sbb
dec
dec
xchg
loopne
and
mov
test
jne
cmp
fxch
mov
das
add
mov
mov
mov
sub
jl
sub
(bad)
cmp
push
je
mov
or
xor
sbb
push
loope
shr
mov
adc
xor
cmc
inc
es
cmp
int
mul
cmp
push
xchg
(bad)
popa
cmp
inc
pop
rol
cbw
aad
stos
push
cmps
imul
cli
je
ret
std
jo
stos
sbb
rol
int3
mov
loop
je
sbb
mov
cmps
mov
loope
fmul
les
rcl
lods
mov
stos
xor
out
pop
push
sub
gs
cmp
fwait
shl
pusha
out
cmc
mov
enter
sbb
sbb
daa
mov
cmp
push
fisub
jne
add
ss
or
push
and
neg
rcr
or
cmp
and
and
js
mov
sub
lods
adc
(bad)
cld
ins
sbb
jmp
mov
xlat
xchg
scas
cmp
test
jecxz
repnz
dec
sar
xchg
outs
iret
pop
xchg
jns
cmp
sbb
push
pop
mov
mov
stc
xor
push
jb
fsubr
js
sbb
nop
add
sub
lock
adc
mov
aam
and
xchg
pop
retf
les
mov
jns
cmp
push
mov
jge
dec
out
je
sub
add
xor
sub
pop
sbb
sbb
jno
xchg
xchg
push
(bad)
pushf
ret
movs
add
(bad)
cmp
push
iret
jbe
jecxz
outs
fnstsw
jle
sbb
xor
inc
sar
(bad)
jnp
inc
lods
cmp
fcom
pusha
outs
retf
add
mov
shl
cmp
jg
dec
jne
aad
mov
iret
(bad)
into
sbb
jne
push
lds
rcr
lea
push
inc
push
stos
sbb
xchg
push
ret
lock
cli
or
scas
arpl
cld
out
(bad)
adc
jle
sbb
and
inc
ret
ss
jb
rol
test
cmp
mov
outs
mov
adc
shl
cmp
adc
sbb
jo
sub
movs
xchg
sbb
push
mov
ins
adc
cdq
cmp
cmp
sahf
in
call
fwait
ds
jnp
ds
mov
pop
adc
dec
lods
mov
rcl
inc
ds
(bad)
jb
mov
push
mov
push
pop
dec
sbb
sub
or
je
adc
mov
and
and
cmp
adc
adc
pop
iret
fld
adc
xchg
stc
mov
pop
pop
les
push
mov
and
sbb
lods
dec
push
sub
xlat
or
add
lods
mov
fs
mov
mov
jge
cmc
mov
imul
jmp
or
mov
inc
cmp
pop
sbb
fiadd
shr
jb
jmp
sbb
loop
adc
cmps
ja
dec
scas
sub
jp
hlt
cmp
xlat
jne
or
ret
add
cmp
leave
mov
xchg
mov
sahf
fucomip
repnz
das
adc
js
je
imul
cmp
call
aaa
inc
pop
jg
imul
push
mov
mov
jecxz
fdiv
jo
inc
test
mov
adc
mov
xor
add
add
scas
(bad)
jb
xchg
lods
jo
sbb
lds
scas
das
jns
add
imul
adc
int3
jb
test
and
mov
lock
jb
jmp
adc
add
ficom
or
or
mov
and
xchg
mov
jecxz
imul
and
pop
mov
daa
movlps
jmp
push
jb
leave
adc
ins
xchg
and
(bad)
jno
cmp
adc
adc
add
test
sbb
inc
das
jmp
or
frstor
movs
and
sub
jp
cmps
mov
jo
sbb
fldenv
fisub
cmps
inc
pushf
imul
ds
xor
fcom
jmp
cmp
cwde
mov
(bad)
outs
je
jne
mov
mov
ins
inc
mov
hlt
in
leave
ret
sub
add
js
cmc
jge
push
mov
loope
push
xchg
ror
or
cmp
sar
pushf
add
(bad)
sub
clc
jg
pop
je
mov
xor
shl
gs
mov
fidivr
popa
mov
jbe
fwait
fwait
ins
jbe
ror
popf
jnp
mov
nop
imul
jne
inc
addr16
jge
lock
in
xchg
and
jmp
or
push
out
add
pusha
xor
inc
xchg
cs
in
cmp
call
mov
vphadduwd
and
in
mov
lods
fistp
push
sub
cmp
inc
fs
fisttp
xor
arpl
or
call
jb
cmp
push
and
pop
das
lahf
adc
aad
test
mov
stos
pop
jae
cmp
xor
jnp
in
call
adc
push
inc
mov
aas
sub
test
repnz
loop
push
fnsave
sub
in
sbb
sub
repnz
push
or
inc
xor
out
push
jbe
icebp
fidiv
jns
cmp
sti
jb
ds
imul
cmp
add
inc
or
jmp
test
pop
addr16
(bad)
stos
sub
sbb
in
lods
ja
repnz
out
pushf
arpl
mov
sbb
or
push
ficom
mov
push
test
jl
popf
or
in
outs
sbb
bound
fisub
daa
ret
mov
push
mov
fadd
or
pop
pop
and
jo
cmp
sar
jno
test
sti
loop
scas
push
xor
push
(bad)
outs
sbb
gs
aad
adc
add
mov
cmp
or
aad
mov
out
into
std
inc
push
ds
sahf
je
xchg
daa
aam
sub
lods
inc
pop
adc
push
fs
cdq
retf
pop
je
inc
imul
pushf
ror
add
mov
xchg
push
xchg
and
push
int
xchg
mov
(bad)
pop
(bad)
dec
xor
cli
push
fstp
sti
or
inc
and
int
aas
scas
mov
setb
mov
cmp
mov
dec
fld
cli
out
popa
jne
stc
xlat
or
mov
retf
xchg
aas
call
sub
sahf
adc
mov
je
fldenv
pop
jbe
les
in
mov
mov
cmp
or
xchg
mov
test
sub
or
or
lods
out
lds
cwde
sar
and
cwde
fmul
or
hlt
sti
loop
int3
fmul
or
scas
fcomp
adc
ret
cmps
xor
mov
jnp
and
dec
inc
cmp
xchg
jmp
into
cs
add
sub
adc
pop
cmps
inc
movs
pop
mov
add
aas
add
lar
or
out
popa
rcr
pop
pop
aad
add
sbb
mov
mov
popf
push
popa
cmc
stc
xor
iret
jbe
addr16
inc
sahf
sti
push
pop
push
retf
test
mov
stc
fld
fcompp
rcr
mov
rcr
dec
jo
ins
xor
sbb
(bad)
retf
mov
addr16
fisub
xchg
adc
ss
or
icebp
ja
es
pop
push
dec
bound
outs
push
cmp
mov
pop
mov
xor
fiadd
mov
rol
mov
pop
out
aad
jns
push
jmp
inc
cmp
mov
add
stos
xor
jl
outs
sub
ins
jmp
addr16
xchg
xchg
or
retf
mul
sbb
mov
or
std
xchg
mov
shl
lahf
or
cmps
test
mov
mov
or
retf
push
fidiv
jns
or
mov
(bad)
hlt
push
pop
rcl
cmps
pop
loopne
ins
add
mov
pusha
add
jecxz
ja
and
adc
bound
adc
(bad)
xlat
push
jecxz
adc
mov
mov
add
clc
pop
pop
into
cmp
cmp
movs
cli
jecxz
das
pushf
lods
sbb
sub
or
scas
xor
inc
call
ja
push
ror
cmp
lea
daa
xchg
stos
aad
cdq
push
lahf
jns
sar
shl
cmps
mov
adc
call
mov
std
adc
stos
mov
leave
clc
push
fisttp
fsubr
xor
xchg
stos
imul
jae
cmps
xchg
je
push
stos
fsubr
inc
mov
pusha
aam
mov
mov
mov
jecxz
pop
xor
cmps
icebp
push
inc
std
xchg
iret
sub
mov
mov
fcmovbe
dec
(bad)
fistp
movs
sub
fisub
aas
add
lods
int
ja
cmp
jmp
xor
in
lods
mov
lahf
ins
inc
std
gs
int
call
pushf
ficom
xor
jle
fsubr
inc
test
mov
repz
mov
pop
es
push
int
mov
lods
dec
inc
cmp
inc
fnstenv
fsub
mov
xchg
xchg
inc
jge
mov
mov
repnz
mov
mov
mov
sbb
dec
int3
stos
mov
jb
cmp
ret
(bad)
pop
xor
inc
jno
scas
(bad)
scas
das
outs
and
pop
fsubp
ss
lea
adc
sub
pop
mov
rol
xlat
cs
loop
inc
fwait
les
lods
test
lock
inc
adc
mov
mov
cmp
ret
push
aad
xchg
push
aas
loopne
enter
sbb
stos
nop
or
inc
retf
jmp
fsubr
pop
mov
out
pop
xor
cld
push
xor
cld
pop
inc
mov
push
inc
add
shl
mov
jae
jge
(bad)
int3
in
test
cmp
pop
jmp
jp
fisttp
(bad)
push
loop
add
and
js
arpl
in
mov
sbb
and
pop
or
mov
sar
push
ins
es
cmp
(bad)
bound
pop
mov
loope
sbb
std
xchg
mul
rcl
or
popf
push
xchg
push
(bad)
push
out
nop
lea
mov
xchg
int3
xchg
pop
cld
(bad)
push
ficom
xor
outs
sbb
adc
mov
outs
add
sub
jl
push
in
add
pop
pop
leave
stc
cli
jns
dec
shl
pusha
nop
fstp
stos
in
dec
dec
fsubrp
push
cmp
mov
jle
and
lahf
or
add
fcom
xor
jmp
ror
mov
xor
in
in
loopne
and
je
dec
dec
or
outs
test
mov
and
and
in
fdiv
mov
pop
movs
cmp
mov
arpl
mov
test
pusha
lods
xor
xor
mov
sub
xchg
into
dec
jge
jno
add
fs
lahf
pop
inc
mov
lods
test
add
or
sub
fistp
xor
repz
push
cmps
and
fild
lods
sbb
push
outs
sub
cmp
ss
xchg
outs
cmp
adc
cs
jbe
lods
sub
mov
not
mov
cmovle
mov
mov
nop
sbb
jmp
pop
sub
popf
add
aas
in
cmp
xor
neg
arpl
iret
mov
pop
push
lss
or
cmp
into
cmp
sbb
ror
ds
scas
(bad)
xchg
pop
stos
add
inc
inc
xchg
adc
jae
xor
jnp
call
sbb
xlat
nop
lods
retf
fidivr
aaa
add
mov
dec
scas
add
loope
pop
sub
xchg
sub
retf
jecxz
mov
pop
push
push
test
inc
frstor
sub
sti
mov
push
push
adc
cli
mov
xchg
pop
in
push
add
jmp
int3
inc
loop
mov
or
mov
adc
aam
ins
and
mov
cmp
adc
inc
xchg
jae
addr16
aaa
fistp
in
cld
mov
popa
pop
inc
iret
shr
adc
out
or
in
fwait
add
ds
sti
sub
push
xor
jle
bnd
jb
inc
cs
inc
sub
nop
pushf
mov
pop
dec
dec
scas
cdq
and
enter
fidivr
test
leave
jl
cli
cmp
ins
out
push
mov
aaa
mov
jmp
call
pushf
pop
mov
cld
test
jecxz
mul
cmc
jno
iret
jne
test
retf
sti
jmp
jecxz
xchg
xchg
sbb
jp
push
xchg
push
(bad)
shl
jecxz
movs
int
sbb
jno
xor
sub
mov
(bad)
mov
add
pusha
and
or
mov
imul
outs
add
(bad)
mov
inc
adc
cmp
jb
imul
add
push
or
hlt
sub
stos
cmc
or
mov
jbe
aad
loop
add
pop
(bad)
rcr
or
div
jp
cmp
ss
mov
les
adc
inc
or
nop
scas
mov
cmp
arpl
mov
test
jne
outs
mov
mov
or
xor
add
inc
jg
sub
pop
in
nop
mov
in
int
cmp
jno
lea
int3
and
lods
pop
push
push
push
dec
test
bound
(bad)
nop
jo
cmp
mov
ins
call
mov
and
call
pop
(bad)
out
and
mov
pop
adc
inc
jp
mul
lahf
lods
jne
jmp
xchg
into
sbb
(bad)
jo
leave
mov
xor
das
adc
add
cmp
xchg
js
xor
and
call
(bad)
push
cmp
xchg
or
in
loop
je
stos
fistp
add
push
retf
pop
jge
pop
fs
and
outs
pop
inc
nop
hlt
push
dec
nop
or
cmc
inc
cmp
mov
cmp
pop
adc
mov
inc
jmp
out
mov
adc
xor
jmp
btr
sub
sar
cmps
stc
dec
cs
mov
cmp
stos
dec
or
lahf
sub
inc
jae
lods
das
xor
(bad)
cmc
or
xor
lods
icebp
dec
test
psubsw
inc
jle
mov
push
jae
aad
inc
ja
ret
pusha
aad
mov
mov
lock
mov
pusha
sub
aas
cmp
out
popf
(bad)
int3
sar
icebp
dec
mov
js
int3
xchg
mov
and
add
fldcw
std
jne
fidivr
test
sar
jmp
imul
out
nop
and
cwde
out
xor
adc
push
jbe
dec
mov
repz
sahf
shl
sub
cwde
ffree
mov
inc
sbb
movs
dec
mov
jmp
pop
jmp
jnp
jg
ins
jnp
mov
dec
repz
cwde
(bad)
sbb
rol
sbb
lock
sub
push
retf
xchg
scas
jno
int
fsubr
shl
int3
mov
add
mov
outs
(bad)
(bad)
int
repnz
push
lods
retf
cmp
or
pop
(bad)
les
and
ins
pushf
pop
push
add
mov
mov
add
int
call
out
into
and
rcl
cld
std
and
js
sub
pop
inc
cmps
xchg
pushf
rcr
cmp
int
jg
pushf
sub
jne
aas
jp
cmp
sbb
add
inc
inc
cmp
imul
pop
dec
xor
mov
imul
xor
jbe
cmp
cmp
icebp
dec
loope
cmps
ja
icebp
jge
cdq
jo
gs
add
retf
jp
fadd
mov
les
out
and
push
adc
inc
les
inc
add
pmulhuw
nop
xlat
sub
xchg
das
mov
imul
sub
jmp
aam
mov
std
cs
outs
xchg
dec
dec
jle
push
mov
retf
adc
stos
xor
push
aam
jae
jmp
arpl
or
push
ins
xchg
push
mov
test
hlt
jnp
dec
mov
mov
pop
mov
add
xor
in
inc
sub
xor
cmp
hlt
movs
into
sbb
add
mov
enter
fistp
test
sbb
and
js
mov
xlat
stos
mov
out
(bad)
dec
dec
cmp
xlat
add
pop
xor
push
icebp
in
das
and
and
jmp
rcl
sti
sub
lahf
sar
mov
push
out
sbb
dec
retf
xchg
adc
sbb
(bad)
imul
sub
and
scas
lods
fwait
iret
ins
scas
les
pop
es
in
pusha
je
or
fild
sbb
xchg
mov
aad
es
and
mov
les
test
test
xchg
and
ret
xchg
sahf
mov
and
enter
add
push
stos
dec
leave
sbb
xor
pop
pop
dec
test
int3
mov
xor
jg
rol
sub
xchg
lock
xor
in
sti
sbb
cs
stos
jns
dec
cmp
je
fldcw
and
sub
sahf
sti
dec
jmp
out
in
rcr
and
mov
adc
add
enter
push
push
mov
xchg
dec
in
mov
jl
mov
sub
loop
cmps
xchg
jbe
cmp
idiv
cmp
or
adc
inc
int
push
mov
mov
sub
in
xchg
jmp
jbe
and
ja
inc
jmp
jl
cwde
mov
or
stos
fwait
test
xor
mov
lahf
jle
loopne
clc
dec
cmp
outs
xor
sub
adc
gs
movs
clc
or
shr
imul
xor
out
or
mov
in
popf
lods
and
jge
outs
jno
rcr
inc
jmp
inc
sub
or
pop
loop
jnp
mulps
mov
or
adc
retf
push
mov
cmp
pushf
xchg
push
sti
test
mov
mov
and
add
sub
adc
and
ins
dec
(bad)
pop
mov
mov
jge
mov
add
cmp
push
(bad)
mov
jmp
pop
and
rcl
mov
fcomp
pop
popf
scas
xlat
pop
or
mov
imul
dec
push
inc
jo
lods
or
(bad)
cmp
xor
mov
cmp
loope
cmp
imul
call
lods
rcl
jmp
(bad)
(bad)
mov
outs
or
ret
and
dec
push
or
int
xchg
pop
loope
fsubp
mov
xchg
js
enter
popf
mov
xlat
shl
mov
ret
xchg
cmp
loope
xchg
fistp
not
js
addr16
dec
je
mov
pop
xchg
(bad)
(bad)
rcl
(bad)
neg
icebp
out
jno
scas
ss
in
and
adc
(bad)
mov
mov
mov
mov
mov
xor
adc
jp
and
dec
jnp
mov
into
mov
enter
cdq
push
xor
jmp
cmp
loope
js
or
or
rol
mov
je
or
aad
push
arpl
(bad)
je
das
lds
pop
in
push
xlat
leave
push
and
int3
jge
cli
(bad)
push
outs
sbb
data16
push
push
mov
jecxz
sbb
sub
and
sub
push
pop
jl
fdiv
mov
sbb
jb
and
std
pop
(bad)
push
rcr
inc
lea
call
sbb
js
push
jecxz
xchg
inc
mov
ror
push
inc
fidiv
cmp
xchg
aaa
je
test
std
jmp
jae
mov
inc
sbb
das
sub
ja
mov
xor
aaa
xor
pop
vpscatterqd
ret
mov
inc
pop
pop
hlt
inc
cmps
data16
cli
adc
cs
loope
mov
xor
xchg
xchg
faddp
mov
imul
xchg
jle
(bad)
jl
jbe
dec
jl
test
jno
adc
das
adc
mov
lods
sbb
stos
ss
int3
and
mov
scas
push
and
xchg
iret
dec
xchg
xlat
ret
stc
add
mov
test
or
xor
leave
push
mov
add
cli
sub
mov
sub
pusha
jge
ffreep
or
pop
sbb
pop
inc
and
adc
cmp
clc
fcomi
or
bnd
or
add
xchg
aam
push
inc
mov
mov
push
jmp
shr
and
adc
sub
ins
scas
xor
dec
pop
aaa
xchg
inc
outs
loop
fst
(bad)
sbb
shr
xlat
(bad)
loope
mov
sar
push
xchg
(bad)
pop
hlt
jmp
pop
jle
cmp
cmps
dec
mov
aas
arpl
fstp
std
mov
jnp
outs
dec
push
sub
mov
ins
xchg
stc
lods
sub
loope
dec
mov
hlt
or
aaa
xchg
shr
and
icebp
xchg
dec
repz
mov
lahf
cmp
shr
out
lahf
popf
dec
pop
mov
clc
mov
call
enter
or
in
adc
mov
adc
push
in
sbb
xor
adc
mov
leave
icebp
sahf
sbb
mov
pop
sub
push
outs
inc
cwde
push
and
aaa
push
or
xlat
rol
(bad)
jmp
jne
adc
pop
aam
inc
popf
xor
cmp
loopne
pop
pop
or
or
repz
ret
js
or
cld
clc
ror
fcmovb
test
shr
cli
(bad)
hlt
lds
dec
or
mov
mov
and
or
jmp
mov
psllq
dec
sbb
test
ret
mov
sbb
xchg
into
cli
push
mov
adc
adc
xor
lahf
push
outs
dec
xchg
pop
xchg
dec
scas
fisub
pop
inc
in
sbb
ins
push
shl
ret
dec
adc
ret
sub
inc
xor
fisubr
test
adc
sub
adc
fnstsw
lods
cmps
scas
xchg
inc
push
add
imul
stos
les
xchg
ins
stos
and
xor
xor
mov
jecxz
dec
ret
sbb
(bad)
clc
xor
out
out
pop
inc
jb
imul
and
pop
js
outs
sub
gs
sub
aas
and
mov
mov
retf
dec
adc
aam
sub
test
jne
clc
rcl
push
mov
out
out
lods
add
dec
pushf
aam
inc
inc
js
adc
push
aam
enter
shl
js
in
push
add
xchg
inc
repz
push
scas
das
pop
mov
sub
int3
in
out
(bad)
loopne
mov
sbb
retf
repnz
mov
pop
cmp
jno
lahf
retf
pop
call
test
fisttp
inc
inc
ss
push
lock
jo
ret
data16
xor
icebp
call
xchg
test
inc
daa
jne
mov
xor
xor
imul
inc
clc
add
jmp
ds
pop
inc
fldenv
int3
push
jns
ja
ret
xlat
mov
mov
call
jp
jns
mov
sbb
and
aas
jmp
outs
push
cld
fldenv
iret
js
out
jle
sbb
repnz
adc
xor
ins
dec
les
leave
cmc
mov
dec
pop
addr16
ds
imul
pop
push
retf
cmc
gs
stos
adc
out
jl
std
iret
push
and
aad
mov
out
movs
or
into
fcomp
das
push
and
mov
test
popf
jmp
sub
pushf
test
pop
iret
sbb
cli
or
cmp
das
or
retf
in
movs
call
inc
(bad)
cli
lock
cld
pop
sbb
sbb
and
fwait
aam
adc
into
mov
test
inc
ret
xchg
in
push
jl
retf
repnz
inc
cmp
rcr
gs
fsub
inc
enter
dec
(bad)
cmp
push
inc
shl
fbstp
cwde
(bad)
enter
or
mov
sar
xchg
pop
xchg
lock
mov
inc
imul
mov
cdq
repnz
pop
sar
imul
dec
or
movs
xchg
inc
cwde
pusha
push
movs
mov
and
lock
call
stos
ins
rol
stc
dec
xor
lds
inc
aas
les
gs
xor
out
loopne
xchg
cmp
mov
mov
and
push
shl
push
adc
sub
push
cmp
or
jg
mov
aam
pop
pop
jg
add
pushf
xchg
mov
xchg
scas
pop
jmp
xor
xor
adc
add
mov
jns
sub
xchg
xchg
adc
scas
push
sbb
retf
xor
xchg
(bad)
xchg
mov
adc
jge
test
cmp
inc
push
pusha
pop
pop
jl
in
into
popa
in
push
jp
nop
push
arpl
and
push
mov
jnp
ss
pop
sbb
(bad)
xor
jg
(bad)
xor
xchg
pushf
test
leave
(bad)
mov
(bad)
and
xchg
dec
fwait
xlat
lods
shl
jae
adc
xor
mov
jl
popa
mov
adc
sbb
(bad)
cmp
push
lods
imul
jg
jae
repnz
xchg
dec
add
cmp
adc
fstp
cmp
not
xchg
and
bound
mov
sbb
hlt
sbb
jmp
jbe
dec
cmp
pop
bound
daa
sar
stos
add
push
add
mov
test
cmp
dec
pop
fadd
in
leave
xor
ror
inc
sub
xor
loop
ss
xchg
mov
cs
add
in
imul
mov
cmp
dec
in
sti
adc
jne
mov
out
loope
push
add
ror
out
outs
pop
out
xchg
cmp
test
push
cs
xchg
repnz
cmps
xchg
ds
xor
mov
into
and
push
stc
xor
add
les
movs
dec
jmp
mov
jne
pusha
xor
mov
loop
icebp
loop
sbb
or
sub
inc
(bad)
add
xchg
sub
or
popa
lahf
loopne
push
mov
sbb
inc
pop
test
cdq
push
sbb
xchg
push
mov
mov
loope
cmc
(bad)
nop
pop
cwde
repnz
aad
aam
nop
cmp
sbb
shr
or
shl
bound
inc
lock
push
or
mov
les
arpl
adc
pop
dec
add
ds
pop
nop
inc
mov
retf
test
sub
int
fucomip
aas
movs
jae
mov
ficom
and
fisubr
jmp
ret
es
gs
jge
loopne
cdq
gs
into
pop
clc
pop
dec
addr16
cmp
out
adc
pop
lods
push
push
inc
sbb
sbb
sbb
sub
add
jno
cmp
test
and
test
push
aaa
xor
add
mov
cmps
ret
mov
cwde
dec
mov
jmp
jecxz
jne
cmp
loop
jmp
cwde
inc
jle
(bad)
enter
xchg
rol
cwde
lods
mov
test
adc
push
(bad)
jb
test
iret
shl
push
inc
outs
xlat
rcl
push
aaa
mov
adc
adc
in
ds
call
popa
mov
je
push
push
mov
fwait
cmp
jae
arpl
sbb
mov
out
test
imul
int
mov
sbb
fcompp
push
cmps
and
cmp
add
inc
pop
repnz
pop
loop
jmp
xlat
stos
dec
dec
sbb
jae
gs
shl
mov
inc
in
mov
movs
and
loop
aad
sub
cmp
and
popa
inc
add
imul
mov
jne
aad
pop
std
sbb
js
dec
dec
out
sbb
and
dec
cbw
in
pop
jno
test
push
xor
push
or
push
in
push
jge
in
adc
add
les
dec
mov
push
cmp
movs
in
sbb
loope
bound
cli
fwait
add
lahf
mov
dec
js
mov
add
xchg
jecxz
add
cmp
cwde
ret
leave
repnz
div
loopne
ret
stc
mov
(bad)
mov
fld
fdiv
inc
pusha
test
fisttp
sti
bound
sub
mov
bound
ins
stos
xchg
stc
js
adc
gs
out
in
push
in
xor
cmp
inc
out
enter
retf
sti
dec
mov
pop
jmp
movs
int3
outs
jle
mov
xchg
dec
pop
jnp
xchg
(bad)
sbb
nop
xchg
inc
std
sbb
add
or
push
cmp
cmp
pop
push
add
push
and
scas
cmp
out
or
arpl
inc
inc
mov
dec
cmps
pop
pop
sti
(bad)
sub
(bad)
sub
dec
xchg
test
aaa
out
or
les
sub
cmp
scas
push
cmps
cmc
fdivr
ret
aam
dec
lahf
jbe
jae
push
cmp
and
(bad)
fcmovb
in
(bad)
fist
dec
test
(bad)
pop
jmp
push
cmp
(bad)
loopne
into
xchg
sbb
pop
mov
je
adc
or
sbb
cmps
enter
cmp
mov
data16
add
sub
push
jl
aaa
push
pop
scas
add
sar
mov
jnp
repz
cmp
pop
xor
and
adc
push
mov
aas
cli
inc
iret
loop
and
icebp
inc
shl
mov
xchg
shl
ffree
shl
jg
mov
sahf
inc
push
movs
jb
(bad)
fnstcw
dec
(bad)
sbb
mov
adc
pusha
cmps
mov
sbb
imul
ret
pop
leave
fadd
fidivr
arpl
sub
xor
lock
fwait
add
and
xor
aas
jp
add
fdivrp
test
(bad)
std
or
test
xchg
test
loope
in
js
retf
sub
xchg
(bad)
fsub
stos
push
sub
aaa
repnz
pop
xchg
test
sub
lea
xor
scas
mov
leave
pop
stos
test
jg
jle
rcr
push
(bad)
(bad)
dec
adc
push
xor
xor
loope
inc
cdq
lods
push
jmp
sbb
dec
mov
sub
jecxz
call
or
in
sbb
js
stos
popf
cmc
mov
xor
lods
dec
jmp
out
cmp
leave
pusha
nop
mov
popa
cmp
js
xor
pop
mov
mov
fs
dec
mov
das
and
stos
ins
xor
stc
(bad)
ret
sahf
fimul
ins
stos
movs
enter
dec
push
scas
mov
jl
loopne
(bad)
and
sahf
push
cmp
add
cli
stos
gs
or
jmp
test
or
in
retf
mov
test
push
out
sbb
aas
shl
mov
outs
popf
or
imul
aas
cmp
pushf
sbb
jno
push
fisub
scas
sbb
pop
stos
pop
inc
pop
inc
movs
mov
leave
add
fistp
(bad)
lds
or
add
cmp
cmps
jle
or
les
adc
out
cmps
outs
hlt
adc
pop
aam
push
stos
je
xchg
jbe
sbb
dec
ss
in
xchg
inc
test
outs
or
mov
sbb
ret
cli
xor
outs
jnp
sbb
pop
and
pop
push
mov
jae
test
fisttp
pop
adc
mov
out
pushf
mov
ins
adc
retf
fldcw
in
ficom
dec
cwde
(bad)
mov
cmp
xor
(bad)
inc
shl
xlat
sub
cmp
push
repz
pop
jo
(bad)
mov
dec
out
adc
xlat
clc
sbb
jl
jb
loope
clc
or
push
add
pushf
jne
sbb
in
out
scas
xchg
scas
dec
adc
sub
jle
es
sahf
hlt
ror
ds
aad
cld
pop
ret
pop
cmps
push
sub
or
jmp
and
inc
push
daa
or
pop
xchg
iret
dec
lods
push
aaa
pop
inc
and
call
jae
nop
xchg
jl
pop
cld
add
sbb
aad
neg
aas
pop
in
das
and
sbb
dec
jmp
mov
aas
jbe
pop
mov
outs
jno
loop
mov
sbb
jmp
fmul
imul
and
lods
popf
les
jmp
into
ja
push
lods
xor
push
sub
retf
adc
imul
out
movs
inc
into
inc
jb
dec
mov
adc
lods
mov
daa
pop
mov
pop
and
dec
sti
hlt
out
(bad)
adc
sar
mov
test
xor
cld
xchg
aam
adc
icebp
mov
in
test
(bad)
jmp
pop
cld
mov
jle
mov
add
popf
or
outs
jb
enter
push
mov
shl
push
pusha
jecxz
dec
fist
out
fwait
push
loope
cmps
adc
add
cmps
lock
enter
cmp
xor
call
ds
push
jno
mov
fdivp
out
sbb
adc
mov
aam
fldln2
enter
mov
cmps
push
jb
mov
xchg
cmp
into
fist
test
add
mov
pushf
mov
pop
pop
xchg
(bad)
push
js
mov
ret
cmc
xchg
dec
or
xor
fimul
jp
(bad)
popf
(bad)
mul
icebp
push
xlat
(bad)
pop
(bad)
mov
loopne
test
neg
aas
adc
mov
pop
cmps
scas
pop
ficom
xor
ret
fnstcw
inc
mov
adc
(bad)
fbld
ins
dec
in
push
sar
(bad)
push
mov
mov
cmps
or
in
xor
sub
out
sbb
out
mov
xchg
xchg
in
out
sbb
jp
mov
adc
(bad)
jecxz
faddp
neg
adc
and
sub
ucomiss
inc
mov
or
or
iret
pop
and
cdq
outs
mov
mov
mov
ins
ror
mov
mov
ja
xor
adc
adc
xchg
dec
jmp
pminsw
push
pop
sbb
push
icebp
jo
or
jo
loopne
mov
mov
push
mov
push
int3
les
push
cmps
lods
fild
cdq
mov
jmp
lea
sbb
test
rol
jl
stc
jge
and
aas
ret
dec
dec
leave
jae
mov
fiadd
adc
in
mov
mov
lock
xchg
mov
inc
movs
inc
sub
sub
je
scas
lea
jg
inc
mov
stos
mov
xchg
sbb
push
inc
mov
jne
jp
fdivr
pop
pushf
jae
mov
dec
inc
scas
and
sub
add
and
loopne
jmp
mov
pop
in
pop
push
and
cmp
cmp
mov
imul
push
scas
jo
in
mov
aam
or
ja
cs
imul
adc
cmc
addr16
test
mov
pushf
gs
dec
test
(bad)
push
mov
sbb
lock
aad
cmp
movs
dec
dec
sub
aas
(bad)
push
jmp
xchg
sub
mov
jmp
fadd
je
inc
mov
cmp
xor
push
popf
mov
sub
dec
rol
imul
ret
xor
int3
dec
inc
bound
adc
adc
jge
dec
or
jo
adc
addr16
mov
repz
ins
xor
pop
push
pop
inc
arpl
out
outs
adc
adc
xor
pop
ret
daa
ss
test
ins
mov
adc
push
or
stos
or
push
ret
cmp
sub
int3
push
in
rol
add
test
sbb
jmp
sub
adc
cmp
mov
fld
loop
sub
into
shr
mov
pusha
adc
es
(bad)
ds
or
stos
ret
jg
lea
sbb
out
outs
lock
ins
xor
push
scas
pusha
cs
inc
cmp
xor
lea
inc
ss
cwde
sar
enter
nop
jo
scas
inc
dec
pop
or
dec
(bad)
push
in
cmp
lds
mov
xor
add
xchg
lahf
mov
dec
addr16
ds
xchg
data16
mov
aas
mov
inc
sub
bound
fld
dec
push
cwde
xor
mov
mov
jno
add
sar
sbb
int
int
iret
inc
adc
addr16
std
aas
dec
ss
imul
inc
test
in
aam
jp
imul
loopne
ds
mov
mov
mov
mov
scas
mov
mov
pop
and
in
mov
push
sbb
rol
or
shr
push
stc
inc
sti
jmp
popa
add
and
movs
inc
mov
(bad)
fsub
xor
or
out
jl
or
mov
outs
mov
daa
push
call
fs
inc
dec
mov
in
aam
jae
and
jbe
sub
adc
xor
adc
fs
mov
xlat
pop
inc
adc
shl
mov
pusha
in
adc
adc
ds
cli
aad
push
fsub
lock
pop
inc
add
pop
sub
xchg
xchg
or
pushf
inc
aas
test
popf
sbb
into
jno
adc
push
hlt
shl
cmp
jno
cmp
(bad)
sub
(bad)
pop
(bad)
inc
and
sub
and
outs
in
jp
jp
out
shr
out
xchg
and
lea
pop
mov
leave
mov
xchg
cmp
out
rcl
cmp
xor
rol
shl
sub
out
and
sub
ins
pop
das
cmps
stos
imul
clc
and
mov
retf
push
push
add
adc
push
repz
jae
fcmovne
mov
data16
scas
fdivr
cmp
and
mov
lods
pop
fnstenv
mov
aam
jae
jmp
xor
cmp
imul
ret
sbb
dec
push
mov
jle
mov
mov
mov
fdiv
outs
and
mov
(bad)
and
into
add
repz
ins
lods
aam
adc
mov
neg
mov
sub
pop
int3
int
sub
and
pop
repnz
adc
jg
(bad)
repnz
dec
fidiv
xchg
xor
fwait
xchg
lods
enter
sbb
push
test
movs
mov
jns
imul
bnd
jno
xchg
cld
jae
mov
pop
sbb
inc
push
popa
addr16
xchg
jns
retf
cdq
cld
js
xor
push
cmp
mov
xchg
sub
imul
(bad)
xor
add
iret
jle
outs
(bad)
mov
pop
add
shl
jbe
sar
pop
pop
mov
dec
and
or
push
cmp
mov
outs
lods
repnz
mov
pop
mov
loope
and
sub
in
clc
or
adc
adc
imul
jb
sbb
fld
fsubr
dec
pop
adc
add
add
fild
pop
dec
mov
and
mov
jbe
ins
pop
stos
shl
mov
mov
xor
ins
sub
loop
jp
push
dec
sbb
mov
(bad)
jp
pop
cmps
push
bound
xor
inc
scas
sbb
jbe
std
inc
jmp
push
stos
ss
xchg
pop
inc
cmp
ficomp
outs
jle
pop
fist
out
dec
rcr
mov
push
out
pusha
out
cmp
std
repnz
fisubr
ds
into
push
xchg
cmp
div
cmp
stc
in
sub
dec
inc
in
retf
sbb
(bad)
sub
sbb
das
jle
mov
push
push
ffree
test
cli
out
int
cmp
arpl
scas
jp
mov
(bad)
cld
or
fisubr
rol
or
xor
test
movs
das
xchg
add
(bad)
xchg
(bad)
imul
sar
push
add
loopne
mov
xlat
fidivr
pushaw
adc
sub
add
loope
idiv
ficomp
or
and
repnz
push
es
or
in
xor
mov
into
add
adc
adc
(bad)
cli
xchg
push
mov
sub
pushf
add
mov
sti
xchg
iret
or
inc
and
ja
dec
jmp
outs
add
shl
ins
inc
sbb
mov
jg
sti
int
add
adc
dec
shr
push
(bad)
ficomp
mov
sbb
(bad)
mov
imul
add
call
gs
fnsavew
inc
mov
mov
mov
dec
(bad)
fst
push
outs
in
out
and
mov
clc
push
shr
and
pop
adc
cdq
out
mov
inc
iret
jbe
cmps
cmp
adc
int
cmp
dec
add
call
ja
test
clc
inc
fsub
push
mov
loope
or
dec
shr
das
shl
int3
xchg
mov
or
sahf
les
call
cmps
inc
call
push
out
int
dec
or
aas
xor
dec
sbb
jecxz
aad
sub
ja
test
jbe
imul
mov
cmps
push
out
xchg
add
jmp
ror
call
shl
in
ror
pop
mov
dec
push
xchg
(bad)
mov
mov
ror
rcr
pop
inc
pop
fwait
mov
outs
cs
xor
mov
mov
ins
sbb
mov
loop
test
(bad)
or
leave
test
das
in
pop
in
mov
cmp
xchg
add
pop
lea
jmp
pop
jecxz
outs
cmp
std
ret
add
aam
aad
or
xchg
outs
and
mov
xor
sahf
fcmovne
sub
icebp
rcl
js
hlt
(bad)
not
repz
sbb
and
in
mov
jp
or
push
rcr
aad
mov
fs
xor
outs
sub
or
jb
lea
jg
test
das
mov
xsaveopt
les
stc
jmp
mov
jno
inc
data16
fdivr
scas
test
int3
pop
xchg
nop
loop
add
fidivr
jno
ret
sbb
push
pushf
enter
add
mov
cmps
fmul
jl
push
mov
lds
or
jp
inc
jmp
cmp
aaa
ss
jmp
pop
repz
mov
pusha
pop
fisttp
adc
jg
out
mov
and
dec
pop
inc
pushf
mov
dec
add
mov
nop
xor
mov
cmp
xchg
shl
pop
mov
cwde
push
shr
cld
mov
add
pop
mov
cmp
xor
xchg
hlt
(bad)
(bad)
mov
call
jmp
or
shl
pusha
mov
das
pop
adc
ret
test
idiv
in
cmps
cwde
add
(bad)
cdq
jl
mov
loop
xchg
dec
add
and
mov
loop
xlat
ins
adc
adc
ja
cmp
mov
cmp
lea
sbb
mov
push
loopne
cdq
mov
aam
pop
or
ds
push
lock
mov
cmps
sbb
mov
ins
lahf
sbb
adc
xor
cmps
neg
adc
rcl
aam
pop
inc
xchg
repnz
das
data16
and
add
cmc
in
addr16
cdq
cmp
or
popa
mov
retf
cli
imul
xlat
mov
push
stc
fwait
int
mov
ret
pushf
jbe
jno
ins
ret
aaa
adc
popa
or
sbb
jp
popa
dec
aad
jae
lods
cmp
icebp
pop
cmp
add
xchg
(bad)
jecxz
daa
pusha
mov
push
sub
push
loope
push
(bad)
(bad)
mov
jnp
push
addr16
jg
jecxz
stc
mov
mov
push
scas
(bad)
lods
fild
dec
repnz
int3
sbb
out
int
cld
xor
aam
or
jbe
pop
clc
popf
adc
mov
popa
xchg
pop
sbb
mov
aad
cmp
in
leave
lods
adc
dec
push
bound
xor
push
stc
mov
dec
pop
mov
test
sub
rol
mov
jl
das
mov
int
int3
stos
cli
mov
pop
ins
mov
pushf
mov
daa
adc
aam
mov
popf
shl
mov
mov
sbb
fdiv
test
lock
push
inc
aad
mov
call
cdq
pop
pushf
sahf
xchg
cmp
dec
ret
movs
xchg
jbe
addr16
mov
dec
sub
inc
ret
inc
push
pop
mov
popf
or
ins
movs
movs
mov
ficom
imul
outs
addr16
xchg
sbb
sbb
jbe
mov
sub
dec
mov
jmp
int
dec
jnp
pop
les
icebp
or
mov
daa
es
pop
and
pop
and
inc
adc
call
ins
pop
repz
and
ins
(bad)
neg
les
test
jmp
daa
lahf
test
stos
sub
(bad)
adc
or
pop
inc
xor
xor
mov
sub
mov
add
dec
imul
inc
inc
sub
mov
mov
push
pop
lds
fs
jecxz
js
clc
retf
mov
cmp
and
fadd
pop
hlt
xor
das
lock
xlat
fsubr
into
cmps
call
loop
rcr
dec
mov
retf
sahf
popf
sub
pusha
mov
push
call
cmp
and
cmp
pusha
or
(bad)
pop
aaa
fld
dec
cmps
mov
jmp
fdiv
and
ins
add
adc
fs
cmps
retf
sbb
inc
add
int3
stos
fstp
sbb
out
dec
sub
fcomip
jmp
jno
sahf
mov
sub
xchg
inc
fldcw
push
in
mov
or
lods
sti
xchg
dec
xchg
pop
ffreep
ret
and
jbe
lods
stc
je
jns
mov
mov
out
mov
nop
cmc
pop
dec
or
cmp
and
sub
jg
or
and
fs
pop
ja
ins
mov
movs
cmp
inc
int3
hlt
int
sar
xor
fld
cmp
mov
pop
in
xor
adc
arpl
jp
add
(bad)
jno
inc
sbb
mov
addr16
mov
ja
sbb
xor
ret
popa
fiadd
popf
clc
pop
cmp
dec
mov
xchg
aaa
jne
xlat
movs
pop
sbb
out
adc
fsubr
xlat
test
dec
fld
stos
jbe
cs
push
push
ficom
push
jae
inc
jbe
test
mov
cli
das
add
pusha
and
mov
pop
fucomp
mov
(bad)
jmp
dec
(bad)
int3
xchg
mov
xchg
and
dec
xchg
and
std
sub
daa
push
mov
fist
jp
inc
inc
hlt
cmp
pop
scas
lea
pop
imul
push
add
mov
inc
pushf
js
xchg
sbb
ds
rcr
xor
jns
stc
mov
aad
adc
fidiv
pop
mov
sub
xor
dec
add
mov
not
ret
jp
cwde
and
imul
mov
imul
dec
cli
es
fbld
jp
cmp
xchg
repz
or
jmp
adc
xchg
ret
lock
adc
das
inc
push
cwde
adc
repnz
sub
sub
fdivr
add
ins
or
cmc
adc
out
and
mov
xchg
or
pop
ret
push
add
cmp
in
(bad)
sub
cmp
sbb
push
int
or
ins
xchg
je
std
add
jmp
pop
out
jecxz
inc
fadd
add
mul
cmp
cmp
inc
ror
pop
jne
not
pop
test
jl
dec
xchg
out
mov
xchg
fnstsw
arpl
mov
pop
cmp
outs
pushf
mov
leave
into
icebp
arpl
iret
cmp
mov
daa
sbb
ins
sbb
scas
xchg
pop
xchg
nop
out
in
sbb
mov
adc
mov
mov
jle
mov
jmp
push
add
adc
mov
and
je
push
repnz
cmps
ds
aaa
mov
xor
jg
xchg
ds
das
mov
jmp
addr16
cmp
mov
out
movs
add
sahf
sub
jg
test
push
mov
add
bound
jns
sub
repnz
xchg
popf
mov
jbe
(bad)
mov
sbb
ror
dec
xor
add
retf
cmp
sbb
jmp
sub
xchg
les
or
shr
les
jge
and
fyl2x
push
fisttp
js
jno
push
add
cmp
stos
(bad)
int
jmp
not
inc
retf
aad
jo
retf
sub
add
push
sbb
mov
scas
push
mov
add
(bad)
dec
mov
mov
sbb
imul
(bad)
sub
or
into
inc
and
daa
(bad)
call
cld
xor
movs
dec
xor
pop
shl
addr16
(bad)
fbld
adc
lea
aam
clc
ds
(bad)
fcomi
add
adc
std
jl
(bad)
std
call
dec
movs
mov
or
cs
outs
ins
ret
jge
adc
repz
ret
in
hlt
mov
pop
push
scas
scas
jmp
xor
xor
loope
add
cld
jo
push
xchg
xchg
jl
and
(bad)
loopne
push
sub
jo
test
dec
cmp
ficom
push
mov
mov
enter
fadd
call
fwait
stos
stos
retf
sub
cmp
js
push
outs
mov
mov
test
sar
add
fsubp
mov
ret
popa
outs
inc
xlat
dec
sahf
std
adc
dec
shr
and
(bad)
div
scas
sub
add
shr
mov
xchg
xor
xchg
pop
(bad)
outs
mov
fadd
outs
cmp
sbb
sub
xchg
retf
and
jae
jns
ds
pushf
xchg
or
add
inc
test
inc
movs
xchg
push
daa
sub
sub
mov
hlt
stc
and
mov
enter
cmp
push
clc
rol
pop
(bad)
cld
xor
ret
outs
and
jmp
cs
cmp
and
fdiv
inc
aad
cmp
clc
xchg
push
push
pop
dec
sbb
call
das
je
dec
sub
pop
js
jmp
dec
cmp
xor
ds
and
mov
mov
addr16
test
and
push
imul
pop
data16
arpl
aaa
adc
inc
movs
movs
mov
lods
push
push
call
(bad)
les
and
out
call
mov
pop
clc
int
sub
fsin
cmc
jne
fcom
sbb
ss
int3
push
sbb
leave
loope
or
push
mov
mov
fdiv
jmp
cdq
push
xchg
sub
outs
sbb
sbb
loop
jl
ins
cwde
adc
add
cwde
aaa
xchg
cwde
push
cmp
add
sub
seta
pop
sub
or
das
imul
push
mov
aas
lahf
push
call
aas
scas
sbb
mov
adc
push
sbb
xor
(bad)
bound
lock
scas
in
xor
mov
dec
push
and
out
sbb
sub
add
xor
push
(bad)
std
mov
loop
cld
mov
or
adc
pop
jb
ror
cmp
adc
adc
push
fcom
sub
out
lock
xor
jmp
hlt
stc
mov
call
mov
xchg
out
jmp
pop
pushf
nop
clc
es
cmps
or
push
cmp
scas
std
dec
xor
sub
jns
xor
pop
sub
inc
mov
cmps
or
lods
or
adc
pop
fisttp
mov
and
jne
outs
mov
je
inc
aaa
test
jb
(bad)
fsubr
sub
stc
lods
and
fbld
pop
mov
in
call
sub
jo
lods
mov
out
daa
add
add
(bad)
mov
rol
or
ja
push
leave
adc
push
adc
arpl
in
retf
data16
jne
out
and
call
push
(bad)
fnsave
ja
inc
movs
outs
mov
int
mov
mov
adc
sbb
imul
pusha
push
push
adc
jge
xor
popa
popf
retf
les
mov
stos
inc
pop
cmp
retf
dec
pop
mov
ja
mov
outs
std
sbb
pop
xchg
js
int3
call
cmps
mov
push
xchg
add
cmp
sub
into
sub
retf
in
or
(bad)
daa
test
mov
jmp
and
inc
jecxz
and
ror
stos
fisub
retf
pop
xor
outs
mov
jae
mov
sbb
cmp
sti
sar
in
lds
inc
mov
cmp
mov
mov
mov
adc
repz
in
or
mov
ja
lods
ds
rol
sub
sub
ins
cmps
ret
outs
pop
jp
retf
mov
mov
mov
cld
scas
ret
and
sub
out
pop
and
dec
pop
(bad)
mov
mov
les
push
ror
mov
std
pop
retf
push
sub
sub
leave
loop
xchg
loop
or
pop
push
dec
stos
cwde
pop
sbb
mov
pop
lods
xchg
scas
mov
and
inc
and
or
cs
dec
pop
add
push
out
loop
add
js
loope
clc
dec
pop
(bad)
sbb
adc
nop
sub
dec
aad
cmp
xchg
mov
arpl
and
mov
dec
mov
jl
and
inc
mov
in
jo
test
test
push
and
shl
add
mov
cmps
sbb
call
fcomp
sahf
jmp
push
mov
push
loope
inc
inc
call
ror
pop
es
int3
and
ds
xchg
mov
pop
inc
dec
dec
movs
sub
pop
add
clc
xchg
cwde
push
jne
mov
and
push
fimul
in
cmps
sahf
xor
dec
push
bound
ficom
retf
sbb
in
stos
pop
sahf
lea
(bad)
jne
scas
mov
aaa
lods
jo
mov
neg
jns
pop
mov
test
pushf
and
xlat
pusha
jmp
pusha
pop
xchg
aaa
(bad)
fucomip
inc
arpl
inc
ficom
call
scas
repnz
rcl
dec
mov
xor
xor
pop
nop
xchg
std
mov
cmps
dec
push
adc
scas
aas
dec
rcr
loopne
jne
arpl
inc
cdq
std
mov
repnz
shl
inc
pop
xchg
push
sub
dec
xchg
enter
mov
sub
nop
ret
clc
xor
fnstcw
enter
ret
xor
xor
and
(bad)
pop
ins
inc
mov
movs
mov
std
xchg
inc
in
pop
aad
inc
scas
fst
outs
or
dec
adc
jge
mov
cmp
pop
test
les
and
dec
mov
mov
push
jae
mov
sar
push
push
pop
mov
xchg
stos
pop
rcr
push
pop
fs
in
les
dec
mov
shl
fisttp
mov
popa
(bad)
mov
cmp
out
xchg
in
xchg
push
pop
das
arpl
add
jne
mov
sub
int3
(bad)
adc
popf
sub
pop
xchg
(bad)
cmc
inc
call
movs
jmp
retf
dec
and
inc
iret
xchg
movs
mov
or
mov
test
cmp
(bad)
pop
popa
test
gs
pop
stos
shr
xchg
inc
adc
arpl
aas
pop
add
push
lds
and
push
adc
(bad)
out
bound
call
retf
adc
mov
test
scas
mov
jb
int3
(bad)
xchg
sbb
pushf
scas
sbb
fsubr
push
inc
cmc
sbb
test
push
add
adc
cwde
loop
in
out
add
pop
rcr
xor
and
sub
cwde
sbb
les
pop
faddp
movs
out
lahf
inc
ja
xchg
cmps
rcr
or
or
outs
jns
fsubr
pop
add
add
push
fcom
(bad)
dec
mov
add
ds
add
mov
lds
(bad)
jmp
xchg
pop
iret
cmc
jbe
cmps
push
and
xchg
cmps
ja
das
xchg
mov
ja
mov
mov
outs
ins
call
inc
jns
cld
or
lods
nop
pop
cmp
sbb
mov
jne
adc
test
push
mov
fs
adc
test
push
gs
mov
sar
mov
(bad)
pushf
xor
xchg
xor
sub
or
push
jno
out
mov
mov
rcr
ret
jecxz
jl
outs
pusha
adc
sub
adc
fst
dec
xor
pop
es
mov
xor
stc
addr16
jp
(bad)
nop
xchg
das
scas
int3
lods
fsqrt
ret
mov
stos
pusha
dec
cdq
sbb
sbb
fdivr
int
retf
mov
fnsave
push
adc
lea
mov
xor
dec
sbb
imul
mov
inc
ret
or
sub
adc
cwde
cmp
sar
mov
jno
movs
in
nop
adc
adc
xlat
ins
test
cld
xor
push
push
push
lock
sahf
into
stos
jp
mov
xchg
fcom
pop
xchg
loope
test
cmp
cdq
fnstsw
xor
push
mov
je
fadd
sahf
ret
cmp
je
lods
mov
iret
mov
int
mov
add
push
jle
xor
pop
pop
xor
xor
in
push
mov
xor
arpl
jp
and
cli
(bad)
addr16
add
xchg
test
int
shr
mov
cmp
and
mov
rcr
pop
add
and
push
sti
mov
int3
clc
je
lock
xor
fldenv
nop
js
dec
dec
mov
mov
xchg
push
cdq
fild
scas
push
loop
xchg
and
push
fistp
gs
ret
jo
jne
mov
int3
(bad)
ret
(bad)
xchg
inc
cdq
add
cmp
popf
inc
hlt
mov
in
mov
dec
mov
out
cwde
mov
in
mov
fcmovbe
push
add
ss
pushf
mov
cmp
sbb
fld
mov
cmp
jl
fidiv
test
add
cs
push
and
xchg
xor
pop
adc
(bad)
fwait
test
push
cmp
cmp
addr16
mov
aam
test
sbb
dec
pop
or
stc
retf
icebp
fist
push
and
clc
inc
loopne
lock
xchg
mov
shl
sbb
cmp
es
push
push
push
sti
ficom
into
cdq
jo
cmp
push
out
xchg
scas
pop
add
pop
into
or
div
push
mov
sub
mov
shr
fsub
jmp
bound
sahf
sbb
pop
jb
mov
out
mov
shl
popa
stos
in
cmp
push
sti
popf
lods
pusha
sbb
imul
adc
mov
or
jo
push
bound
popa
jne
or
xor
fisttp
dec
retf
mov
in
inc
stos
(bad)
sub
popf
test
jmp
add
lds
inc
int3
dec
jle
and
push
pop
shl
dec
retf
adc
and
xchg
push
cmp
stc
adc
repz
jl
sbb
cmc
inc
mov
mov
jmp
mov
mov
pop
push
fwait
shr
outs
inc
rol
or
jae
sbb
add
push
sub
inc
jmp
mov
mov
push
jb
shl
aad
pushf
imul
pop
adc
icebp
inc
dec
xor
fwait
jo
mov
(bad)
xor
stos
std
push
stos
bound
dec
js
pop
pusha
xchg
mov
or
pop
call
dec
test
xchg
(bad)
xor
inc
inc
mov
int
xchg
rcl
mov
in
jmp
cld
and
inc
out
jmp
sbb
outs
jnp
cmp
neg
addr16
jo
pushf
stos
ret
dec
mov
cwde
add
sub
inc
sbb
js
sub
push
pop
out
outs
and
movq
mov
sub
fdivp
nop
cwde
mov
push
scas
cmp
and
shr
popa
imul
cmp
push
sti
out
jno
std
aaa
add
pop
push
ds
cwde
es
sbb
xchg
hlt
mov
ins
mov
and
fbld
mov
inc
or
sub
imul
nop
xlat
retf
mov
scas
loop
pusha
test
fcomp
mov
cmps
shr
add
mov
int
mov
mov
pop
ins
cmp
or
sbb
js
sub
in
enter
ss
xor
sbb
xor
pop
les
cmp
add
out
push
cmps
sub
dec
sbb
(bad)
adc
cmp
push
dec
pop
cmps
xor
push
in
mov
into
push
das
mov
stc
xlat
(bad)
add
add
clc
rcpps
lds
cmc
dec
jge
lds
cmp
adc
inc
xor
in
adc
or
ss
enter
fwait
adc
ins
dec
lods
add
test
or
movs
xchg
lods
pusha
pusha
clc
es
and
push
add
cli
mul
dec
pop
icebp
xor
mov
(bad)
stos
xchg
jle
imul
pop
push
or
push
adc
cmp
push
cmp
out
xchg
pop
rcl
int3
pop
add
dec
je
mov
pop
xchg
repnz
es
pop
mov
ins
inc
lock
pop
stc
in
jae
(bad)
rcr
cs
shl
rcr
ins
push
mov
loopne
out
xchg
(bad)
or
shl
inc
pop
jnp
mov
jns
pop
scas
add
mov
cli
jb
ror
popf
lods
add
mov
adc
imul
or
dec
fisttp
mov
jecxz
xchg
aam
jnp
in
mov
and
lea
push
adc
std
leave
fdiv
sbb
movs
fisub
or
pop
cmp
add
dec
fs
stos
dec
jmp
ins
push
icebp
out
mov
jmp
sti
push
call
sbb
rep
loope
shl
outs
lods
mov
push
fcomp
bound
movs
jmp
push
push
add
ins
or
mov
sub
and
xchg
mov
push
stos
dec
pop
stos
cmp
pop
sub
adc
sbb
inc
xchg
jno
int3
daa
mov
aad
mov
retf
pop
pop
xchg
movs
push
jns
mov
icebp
test
shl
lods
leave
jae
int3
and
jmp
mov
idiv
inc
ja
retf
mov
pop
mov
add
pop
addr16
jnp
jecxz
call
sbb
inc
fdiv
mov
xchg
test
retf
fsub
repnz
call
dec
daa
lahf
mov
ss
xchg
mov
frstor
xchg
mov
push
push
sub
push
or
aad
dec
dec
das
ja
scas
adc
adc
(bad)
mov
test
sub
imul
push
mov
jle
jecxz
sbb
cmp
mov
xor
imul
es
loope
loopne
dec
aad
je
xor
test
add
lock
jp
cli
inc
popa
lods
vprotb
cmps
mov
inc
in
aad
xor
pop
int3
push
mov
or
clc
sti
dec
pop
dec
daa
stos
add
xor
jge
mov
outs
and
inc
or
(bad)
fbstp
sets
test
mov
adc
bound
movs
int3
mov
inc
pmaddwd
mov
adc
in
ds
jns
cmps
cmp
inc
sub
or
cmp
call
in
loop
cmp
mov
sub
push
leave
shl
pop
ret
fnstenv
sub
rol
leave
unpckhps
in
push
adc
fld
ficom
stos
push
pusha
pop
je
mov
jmp
xchg
xor
bound
cmps
stos
aad
addr16
adc
adc
sbb
xor
fild
sbb
adc
repnz
jno
inc
and
jmp
pop
test
inc
and
dec
ret
imul
fxch
push
jbe
push
push
add
push
shr
es
push
push
aaa
jmp
jb
jne
inc
mul
or
jecxz
and
jns
jmp
scas
mov
sub
lea
push
sbb
sbb
push
jge
adc
mov
rol
push
ret
enter
les
pop
nop
cli
jmp
aam
xchg
jbe
cmp
icebp
jbe
out
xchg
and
mov
push
lahf
push
fisubr
in
cmps
sbb
jg
jg
inc
lods
mov
or
jp
mov
pop
or
dec
cmc
push
fisub
mov
shr
jl
and
cmp
and
mov
out
jae
pop
dec
movs
xor
inc
(bad)
mov
imul
mov
stos
popf
ins
pop
sti
lods
sub
stos
xchg
outs
shl
(bad)
repnz
xchg
dec
in
in
fistp
cmps
push
mov
sbb
push
sbb
push
hlt
inc
adc
test
sbb
push
cmp
sbb
jb
cmps
fdiv
icebp
shr
cli
in
mov
mov
dec
sub
sti
cmp
mov
ss
popf
or
xchg
retf
mov
mov
mov
mov
or
mov
jp
rol
lahf
mov
inc
mov
lea
or
jp
sub
fidiv
push
jo
in
dec
fwait
push
fwait
pop
add
adc
xor
neg
scas
cld
xchg
jne
or
pop
cmc
mov
int3
mov
xchg
cmp
(bad)
test
xor
jmp
add
or
neg
or
jb
jge
pop
retf
cmp
fcmovbe
mov
mov
aad
add
imul
rcr
xchg
sub
(bad)
stos
or
call
jp
dec
sbb
push
(bad)
push
jmp
push
movs
pushf
psrlw
in
xchg
leave
xor
adc
mov
cmc
xor
push
xchg
pusha
inc
aas
mov
inc
push
xchg
add
cmp
xor
(bad)
mov
pop
jg
mov
sbb
sbb
inc
dec
cmp
push
mov
ret
cs
fs
cld
int3
push
scas
jbe
push
icebp
pop
cdq
mov
jo
(bad)
fisubr
jle
std
(bad)
mov
ja
pop
fisub
mov
mov
mov
jns
mov
bound
and
lods
fist
mov
cmps
daa
dec
pop
jg
outs
or
lods
data16
sbb
clc
push
add
inc
add
movs
pop
mov
fsub
int
sti
jb
rcl
push
mov
dec
clc
push
in
sbb
adc
jb
mov
pop
mov
mov
push
jge
pop
je
push
jp
push
bnd
dec
mov
in
or
stos
and
and
pop
lahf
xor
ss
dec
dec
test
sbb
movs
std
and
xor
repz
pop
fimul
cmp
jno
adc
fisubr
adc
(bad)
mov
jmp
add
sub
dec
push
sbb
jl
sbb
outs
mov
push
push
push
or
sbb
cmovne
xchg
shl
cdq
or
outs
ins
push
jmp
loop
and
and
or
stos
pushf
pop
mov
fbld
mov
outs
gs
push
xor
add
jge
ficomp
jno
lahf
mov
sbb
xchg
test
jl
fdivr
sub
shl
mov
nop
adc
inc
push
jne
and
ret
pop
xor
sub
lds
push
into
sub
pusha
cmps
push
popf
ret
mov
jne
iret
int3
mov
sub
add
cmp
push
and
xor
fist
dec
cmp
outs
and
mov
mov
inc
lock
fsubrp
fist
push
pop
mov
lds
das
xchg
mov
retf
je
rcr
push
stos
popf
inc
ss
sub
cmp
jle
mov
ins
aad
adc
int
nop
xor
adc
sub
je
push
movs
sbb
(bad)
outs
push
retf
imul
fadd
ret
adc
test
xrelease
es
icebp
(bad)
test
mov
push
test
lds
fmul
ins
xchg
pop
out
enter
cmc
je
in
sub
outs
cmp
out
sar
jl
push
jmp
cmp
xchg
lods
inc
cmp
stos
mov
fwait
movs
mov
ror
sti
jne
cmc
xor
and
xchg
bound
pop
cmp
pop
mov
movs
aad
hlt
push
fiadd
arpl
stc
mov
mov
cli
xor
adc
sbb
or
push
loopne
hlt
cmp
mov
add
lds
leave
icebp
leave
rcl
xchg
mov
es
mov
js
mov
pop
imul
and
xchg
mov
fistp
mov
cmp
or
pop
lds
sub
outs
cmp
retf
iret
jae
xchg
mov
mov
out
cmps
int3
push
adc
cdq
rcl
dec
div
push
leave
pop
add
push
pop
and
ins
xor
outs
adc
dec
lds
movs
(bad)
push
(bad)
sahf
push
sti
and
loope
rol
sub
push
xchg
or
lods
dec
adc
xchg
pop
mov
repz
push
inc
xor
adc
or
or
outs
gs
mov
test
call
mov
jb
mov
mov
pop
test
xchg
pop
ds
int
stos
add
(bad)
lods
add
inc
mov
push
mov
in
out
cmps
fwait
or
xor
sahf
dec
or
xchg
push
jle
mov
mov
repz
dec
pop
in
shl
push
out
sahf
mov
jmp
pop
mov
adc
lods
inc
push
shr
aas
pop
inc
push
aad
push
adc
pop
jecxz
rcr
add
push
ficomp
push
pop
bound
lahf
ret
ret
cmp
cmps
and
pop
add
xchg
push
out
sub
adc
ret
bound
or
hlt
cmp
cmp
call
clc
add
jp
xor
pushf
jae
adc
cmps
ja
out
fidivr
aam
mov
jne
in
(bad)
push
loope
pushf
xchg
mov
inc
pop
aaa
dec
shl
mov
imul
movs
jl
nop
out
fld
repz
add
pushf
ret
das
mov
lds
sub
xor
cmp
lds
test
(bad)
xchg
xchg
xor
fcmovnbe
cmp
pop
enter
into
lods
sbb
cmp
sti
push
mov
lods
rcr
addr16
scas
cdq
adc
out
pusha
and
imul
xor
std
jno
sub
mov
mov
or
xchg
cdq
test
es
sbb
in
sub
fwait
stos
pop
enter
mov
dec
in
dec
das
mov
(bad)
clc
xchg
push
sbb
inc
cmps
cdq
push
ins
loope
sbb
and
or
loop
pusha
repz
cmp
pop
xchg
jne
cmp
push
cmp
push
idiv
or
call
outs
stc
and
fnstcw
js
out
ret
popa
rcl
scas
mov
add
mov
sti
or
sbb
dec
adc
jbe
xor
cld
stos
cwde
int
adc
or
mov
or
shl
jmp
call
sub
sub
aad
js
fnstenv
sbb
push
mov
(bad)
or
test
test
xor
in
loop
loopne
adc
jno
in
push
dec
mov
mov
cmp
lds
dec
mov
sub
mov
daa
pop
mov
(bad)
xlat
mov
loop
es
add
ret
inc
xor
inc
fcom
pop
add
xor
mov
sub
jecxz
shr
sbb
sbb
stos
sbb
pop
aad
and
xor
and
fs
(bad)
cmp
push
push
mov
mov
cmp
mov
jl
pop
les
hlt
test
enter
jp
scas
jle
mov
fisttp
mov
lock
pop
sbb
ds
xchg
and
mov
mov
jle
lds
movs
(bad)
sub
pop
cdq
xchg
stos
and
std
idiv
adc
pushf
out
loop
arpl
push
cmp
sub
retf
aas
and
les
cdq
pusha
jle
movs
test
stc
xor
dec
imul
jl
and
or
call
sbb
jge
sbb
push
loopne
mov
bound
scas
inc
iret
add
fidiv
(bad)
xor
out
cmc
cmps
ja
inc
aaa
mov
mov
stc
pop
test
push
cs
fistp
sbb
daa
loopne
mov
xchg
push
inc
xchg
adc
mov
cli
leave
push
or
sbb
cs
sti
js
nop
and
cld
lods
push
xchg
test
(bad)
push
or
enter
dec
push
mov
pop
pop
push
sbb
inc
rol
js
and
mov
js
xor
push
shl
mov
xor
inc
nop
sbb
arpl
sbb
aad
movs
aas
call
in
jnp
std
xchg
cmp
mov
add
push
add
sub
mov
inc
scas
nop
(bad)
pop
mov
xchg
jmp
adc
jecxz
js
icebp
dec
std
jecxz
mov
sbb
mov
out
inc
out
add
and
pop
sbb
mov
aad
push
adc
push
stos
xchg
enter
sbb
(bad)
popf
rol
xor
jno
mov
dec
(bad)
(bad)
mov
inc
pop
retf
jno
jno
xchg
jle
dec
jbe
pop
cdq
aam
pop
sbb
cs
call
jno
pop
sbb
(bad)
ret
ja
shl
and
cmps
jmp
(bad)
jp
outs
inc
sahf
mov
or
jge
repz
adc
fisub
stc
into
iret
mov
sti
mov
outs
jns
ins
bound
outs
pop
pop
(bad)
shl
sbb
shl
mov
aas
(bad)
push
dec
xchg
cmps
jmp
repnz
sub
test
test
dec
fs
dec
call
int3
adc
jge
push
sub
dec
inc
xor
scas
jl
gs
pop
mov
dec
mov
xchg
lock
or
cmps
lea
jmp
std
ret
movs
mov
call
stos
mov
jne
jns
push
mov
(bad)
call
cs
scas
in
dec
pop
ins
test
inc
adc
jo
(bad)
fldcw
jmp
sahf
push
es
jbe
inc
(bad)
and
(bad)
jmp
sbb
ja
js
mov
ins
hlt
xor
loop
call
cvtps2pi
push
mov
dec
mov
xchg
je
adc
xor
jg
adc
jg
cmps
lods
cmc
(bad)
(bad)
test
jne
dec
xchg
mov
inc
popa
mov
shl
scas
mov
push
inc
inc
lahf
lea
pop
sbb
inc
pop
je
inc
pop
inc
sbb
xchg
cmps
pop
jge
cmc
mov
xor
in
rcl
sub
inc
rcl
xor
mov
and
popa
mov
sbb
pushf
jle
gs
dec
xchg
inc
mov
out
out
in
sar
call
je
xor
lods
sti
aas
and
pop
sbb
shr
cmp
add
daa
fiadd
mov
sbb
addr16
or
cmp
xchg
jmp
pop
push
rcr
icebp
fnstenv
ins
cwde
xor
or
test
neg
in
cmp
push
mov
out
xchg
or
loopne
es
pop
jnp
dec
cmp
stc
jmp
dec
jb
fnstcw
bound
call
xchg
mov
mov
or
jmp
pop
jne
mov
mov
sbb
imul
sbb
ja
shl
pushf
xor
mov
inc
enter
push
adc
xchg
pop
(bad)
lahf
or
mov
xchg
les
add
in
jno
xor
dec
inc
sub
popa
mov
neg
fidivr
jge
inc
mov
mov
xchg
aam
lods
xor
sbb
xor
jge
jne
fistp
cld
cs
adc
pop
mov
sub
outs
cmp
scas
lahf
imul
ret
xchg
sub
xchg
stos
cmp
sub
lea
(bad)
retf
xor
xchg
pop
ret
lock
fs
xchg
mov
push
xchg
jl
jb
outs
imul
ret
cld
into
jno
loope
cdq
xor
scas
(bad)
jbe
out
test
pop
mov
nop
dec
xor
add
or
adc
xorps
jp
je
dec
sub
(bad)
or
jbe
push
push
inc
mov
sub
sti
dec
push
pop
stc
inc
cmps
xor
jmp
mov
push
push
cmps
or
clc
int
adc
jmp
outs
push
sar
imul
fidiv
aas
cmp
xchg
sbb
fdiv
xchg
sub
mov
dec
mov
sub
imul
adc
mov
aad
jne
or
and
ins
std
add
inc
loop
pushf
aam
lock
pop
push
jo
mov
js
lods
adc
adc
imul
mov
ja
mov
in
push
cs
lea
sar
add
cmps
mov
xchg
mov
add
xchg
les
lahf
mov
jge
jb
add
mov
xchg
xor
or
xchg
(bad)
cmc
dec
lahf
pushf
bound
les
aaa
out
ret
sub
sub
aad
and
rcr
mov
(bad)
or
adc
std
ret
jecxz
cmp
in
scas
popa
mov
push
push
pop
push
xchg
cmp
cwde
mov
outs
stos
shl
popf
repz
daa
jmp
ret
stos
js
jl
or
dec
imul
ret
out
jb
jecxz
xchg
cmp
or
and
call
push
outs
inc
test
pop
push
cwde
sbb
pop
cmp
sub
push
std
mov
xor
out
ret
xor
push
mov
(bad)
out
mov
cmps
outs
sbb
call
xchg
stos
push
cmp
mov
ret
outs
mov
fisubr
jmp
retf
pop
mov
leave
sbb
(bad)
(bad)
dec
mov
arpl
add
jno
lds
push
xchg
xor
int
push
das
cmp
je
out
push
call
stos
push
jl
stc
sbb
xor
jne
adc
retf
dec
fst
mov
or
push
(bad)
pusha
sub
pop
push
nop
js
push
shl
mov
jno
std
mov
ins
test
fucom
mov
mov
mov
(bad)
or
es
ins
test
cdq
add
pop
push
jecxz
push
pop
fst
push
sub
bound
push
movs
xchg
shl
sub
mov
ins
add
and
scas
and
mov
mov
mov
stos
mov
fwait
inc
jo
gs
mov
add
lods
repz
mov
sti
adc
mov
aaa
imul
pop
ret
movs
push
add
int
xor
pushf
fadd
leave
jae
and
lds
(bad)
movs
(bad)
addr16
inc
pushf
lods
or
mov
adc
and
mov
dec
and
fidiv
push
icebp
mov
jae
lock
addr16
mov
ret
mov
lahf
sbb
jmp
js
hlt
ret
or
or
call
shr
repnz
inc
add
arpl
xor
repnz
xchg
ins
xlat
and
or
sub
int3
cwde
std
outs
pop
fidivr
adc
dec
dec
push
in
stos
ret
dec
jge
xchg
movs
retf
xchg
fs
daa
mov
pop
adc
mov
nop
inc
fidiv
(bad)
mov
mov
fbld
push
push
(bad)
push
and
mov
pop
(bad)
jmp
pushf
inc
jae
call
in
xor
pop
jne
pusha
pop
cmps
loope
shl
xchg
(bad)
rcl
sbb
leave
repz
aaa
(bad)
pop
mov
inc
loope
jne
sbb
mov
xor
cmp
pop
pop
mov
adc
add
fadd
and
mov
aam
imul
(bad)
jp
jnp
(bad)
pop
dec
inc
and
adc
push
pop
test
jg
sub
stos
mov
jne
mov
add
mov
test
test
push
cdq
stc
mov
sbb
mov
mov
mov
jo
mov
jmp
sbb
test
sbb
add
aas
daa
jl
mov
int
daa
cmp
std
enter
loopne
dec
lock
pop
rol
arpl
inc
jb
loope
push
cwde
add
pop
push
imul
nop
pop
lsl
enter
fimul
mov
out
mov
xlat
iret
inc
sub
retf
in
adc
nop
dec
and
sub
js
dec
push
movs
sub
cmp
push
and
shl
cwde
pop
aas
push
mov
dec
sub
imul
rol
add
sbb
aaa
xchg
mov
mov
fwait
(bad)
mov
xchg
cli
xchg
adc
xchg
ss
jge
and
and
xchg
pop
into
sub
lea
pop
push
icebp
fldenv
test
jne
int
lea
dec
mov
sbb
sub
pushf
xor
inc
(bad)
dec
sbb
inc
xchg
shr
aas
mov
cmp
lds
mov
div
pop
int3
rol
cli
in
out
loop
bound
lds
bound
xor
cli
data16
push
movs
nop
cli
cld
adc
shl
inc
sub
sbb
(bad)
into
pop
rol
xor
dec
push
mov
sbb
mov
lds
addr16
push
arpl
dec
push
add
jle
pop
push
push
test
cmps
pop
jno
frstor
push
add
vsqrtpd
mov
and
enter
sbb
(bad)
push
xchg
sbb
retf
idiv
inc
test
pop
shl
jno
sahf
iret
ins
mov
popa
or
pop
movs
inc
pop
sahf
mov
mov
pop
out
imul
pop
cmp
xchg
xor
neg
frndint
pop
(bad)
aas
daa
or
outs
fcmovu
pushf
jmp
cmp
outs
pop
pop
mov
je
loop
das
xchg
adc
ins
mov
int
(bad)
fnstenv
js
jmp
inc
push
push
lods
pop
mov
dec
cmp
bnd
ds
xlat
jbe
dec
jle
out
popa
ret
push
adc
addr16
ja
fisubr
fcmovb
fisubr
cdq
or
scas
enter
int
imul
dec
add
sub
das
inc
pop
xchg
rcl
xchg
and
cwde
cld
mov
dec
idiv
push
in
mov
adc
sbb
mov
pushf
les
inc
add
jmp
stos
push
test
cmps
jp
repz
mov
pop
add
gs
mov
or
mov
or
mov
xchg
addr16
jl
push
stos
stos
les
sub
enter
repz
ret
mov
and
stos
out
outs
mov
call
call
pop
xchg
loope
mov
and
stos
call
clc
ret
setnp
nop
in
mov
and
adc
loop
fidivr
daa
add
clc
ret
rol
leave
fdiv
adc
dec
pop
rcr
setno
xor
cmp
imul
sbb
adc
loopne
or
adc
lock
inc
test
ror
mov
cmps
adc
shl
mov
and
fbld
and
and
adc
stos
mov
stos
cmp
outs
mov
jecxz
pop
(bad)
push
sbb
mov
xchg
mov
sbb
mov
sub
call
push
pop
dec
test
in
add
sahf
pop
mov
add
push
mov
lock
test
push
jo
cmc
ret
cmc
nop
enter
jae
mov
call
fsub
inc
scas
sub
xor
imul
mov
jb
xor
aad
iret
pop
ds
push
inc
sbb
push
sub
imul
pop
cmp
push
xor
jae
lea
pop
dec
stos
imul
jp
gs
iret
clc
mov
dec
inc
ja
imul
and
pushf
mov
out
or
pop
cmp
loop
sbb
sub
pop
xchg
adc
(bad)
lahf
aaa
jb
not
xor
xor
push
ss
(bad)
add
push
xchg
sti
mov
aad
retf
pop
ret
inc
outs
sbb
aam
inc
xor
test
inc
adc
pop
dec
ret
mul
mov
clc
lods
bound
test
xor
fucomip
in
jae
dec
push
outs
int3
hlt
div
pop
icebp
test
or
aad
inc
mov
call
push
call
and
cmps
push
std
ror
mov
dec
add
mov
hlt
mov
adc
push
xor
jg
bound
rcl
mov
aam
cmp
pop
or
push
pop
jo
loope
gs
ror
das
xchg
in
inc
jae
sub
mov
test
sti
jnp
retf
pushf
mov
outs
cwde
or
lods
ins
shl
push
(bad)
aad
test
jno
mov
mov
int
and
es
mov
add
js
cmp
or
cli
icebp
mov
outs
push
int3
cmp
mov
add
pop
repz
cmp
mov
push
add
fwait
les
sub
test
or
test
not
imul
pop
mov
mov
xchg
call
cld
xchg
jnp
inc
sbb
lahf
out
add
sbb
mov
dec
dec
addr16
pop
dec
xchg
lds
fcomp
pushf
cmc
mov
cmc
hlt
loop
imul
loop
loope
mov
push
cmp
mov
sbb
ins
dec
xor
cmovb
mov
in
sub
cmps
mov
int3
cld
rcr
test
jmp
loopne
add
fwait
rol
js
adc
pushf
aam
pop
jg
clc
cmp
imul
pop
lock
scas
sbb
stc
mov
stc
ins
lods
push
mov
xchg
ret
sti
int3
mov
repnz
shr
inc
retf
push
sub
loop
mov
pop
aam
sub
mov
enter
push
add
jbe
stc
adc
cwde
xor
mov
inc
mov
in
mov
fmul
adc
mov
inc
imul
inc
repz
cli
imul
aam
bound
adc
cld
cs
das
jne
pop
popf
cmp
addr16
mov
xchg
les
xor
cmp
and
popf
out
daa
jmp
test
fst
add
int3
ret
xor
push
mov
(bad)
ja
mov
out
mov
ret
out
out
fst
dec
dec
mov
daa
std
mov
sti
add
push
clc
sbb
mov
mul
imul
mov
pop
fld
and
repz
jmp
in
or
or
add
popa
rol
adc
dec
sbb
or
clc
sub
sbb
lds
repz
mov
lock
mov
cmc
icebp
inc
sbb
daa
cmp
in
icebp
push
fstp
dec
call
mov
loopne
jmp
ret
neg
add
out
aas
je
bound
mov
test
jmp
popf
or
mov
inc
sbb
pop
repz
loop
fbld
cmp
xor
pop
fnstcw
pop
inc
xor
mov
xchg
add
aam
sub
push
fcmovnb
retf
or
jmp
pop
push
dec
in
pop
push
dec
cwde
fwait
ret
iret
loope
rcr
jmp
dec
dec
aad
mov
mov
xchg
dec
fbstp
inc
cld
out
or
mov
push
xchg
mov
mov
call
lea
mov
adc
push
(bad)
sub
loop
pop
push
xchg
aad
mov
in
add
or
test
sub
psrad
imul
jmp
fsub
xchg
push
mov
cdq
cmp
xor
mov
sbb
cli
dec
movs
ret
cmp
cmps
cli
or
dec
mov
shl
xlat
mov
cmps
hlt
mov
cmps
stc
adc
fild
scas
sub
(bad)
mov
pop
push
cld
xchg
adc
ins
nop
push
scas
test
jmp
mov
cmp
repz
jae
pop
addr16
loop
sub
push
gs
movs
clc
add
add
bound
push
ja
arpl
mov
xchg
mov
daa
mov
cwde
scas
imul
mov
xor
add
outs
clc
clc
mov
xchg
jb
scas
pop
into
sbb
push
ret
push
xchg
jle
fwait
(bad)
sbb
jmp
inc
shl
cmp
popa
aam
mov
in
adc
iret
adc
clc
iret
mov
test
retf
pop
inc
adc
mov
ret
icebp
dec
(bad)
pop
or
cmps
repz
(bad)
stc
add
je
mov
pop
das
test
iret
jns
mov
mov
push
test
mov
dec
sub
jmp
ins
mov
mov
jno
repnz
add
enter
sub
pop
jno
dec
xchg
popa
mov
shr
cmc
xchg
fidivr
dec
pop
repz
xor
hlt
jb
lods
inc
jmp
in
cmp
stos
sub
bound
dec
gs
fstp
popa
mov
(bad)
iret
xlat
call
mov
jle
mov
scas
push
xchg
imul
and
pop
pop
push
add
push
mov
jne
loop
mov
xor
jo
mov
sbb
mov
aas
jl
push
pop
cmp
mov
inc
sub
mov
sub
jp
nop
fimul
icebp
mov
xor
mov
add
jmp
and
xchg
push
shl
add
ret
cli
xchg
cmps
out
mov
mov
clc
out
xor
call
loope
lahf
sbb
das
aaa
pop
sbb
push
and
jg
inc
or
mov
aad
xor
(bad)
sar
xchg
call
ret
ja
push
sbb
das
daa
add
lods
loope
or
loop
xor
xchg
xchg
and
xchg
stos
mov
imul
sub
std
cmp
retf
or
xchg
inc
adc
push
adc
xchg
add
daa
dec
ins
pop
fistp
rol
inc
jmp
add
mov
sub
fiadd
mov
add
daa
stc
ror
(bad)
and
jbe
cmps
xchg
sbb
xor
mov
push
and
cmp
popf
mov
arpl
xchg
xchg
push
mov
imul
and
push
bound
daa
cmp
dec
mov
sbb
ss
inc
movs
mov
xor
test
daa
sti
popf
data16
sbb
or
fiadd
adc
sbb
fist
push
sub
fwait
gs
ss
int
aas
mov
nop
adc
clc
add
lock
inc
mov
jns
pop
js
sbb
adc
xchg
das
jmp
push
mov
das
ficomp
sbb
mov
mov
imul
retf
fmul
jmp
push
movs
or
push
test
loopne
cli
(bad)
pop
adc
jns
cmp
enter
jo
sub
cli
mov
mov
push
sub
cmp
xchg
xor
shr
lahf
lds
rcl
mov
adc
push
cmp
retf
(bad)
fcom
sbb
and
into
lea
and
outs
cmovae
jmp
push
jbe
dec
mov
test
cmp
or
jne
push
mov
les
aaa
scas
add
push
pusha
(bad)
sar
nop
xchg
or
repnz
push
dec
aas
cmp
jmp
cmp
int3
sub
cmp
pop
jb
(bad)
gs
retf
sbb
movs
cmp
hlt
inc
rcr
jns
mov
sbb
movs
call
adc
push
stos
pop
adc
adc
daa
idiv
sbb
iret
cmp
retf
out
out
inc
adc
dec
sub
inc
adc
inc
push
fdiv
sub
sbb
xchg
mov
mov
mov
xchg
std
push
sbb
leave
(bad)
or
cmps
push
xchg
dec
mov
test
push
(bad)
jmp
mov
cmc
nop
mov
out
imul
cdq
or
xor
stc
shld
out
sub
scas
mov
cmc
or
sub
retf
mov
dec
div
adc
rcl
add
inc
jb
mov
push
xchg
sub
xchg
bnd
inc
addr16
clc
into
jmp
mov
out
in
pop
addr16
ret
popa
xor
pop
ins
nop
jnp
fild
push
loope
mov
outs
arpl
imul
rcl
sub
xor
lods
push
scas
xchg
pop
sbb
jb
in
cmp
stos
aaa
xor
mov
cmc
cld
int
and
pusha
pop
retf
test
cwde
add
xor
push
or
stos
cmp
pop
(bad)
pop
mov
retf
sbb
arpl
ja
jge
(bad)
pop
xchg
and
imul
ja
mov
sub
ins
mov
into
(bad)
push
push
push
and
sub
loopne
fdivr
and
jmp
adc
push
dec
adc
and
and
push
daa
repz
cmp
jmp
cwde
aas
aad
cmp
shl
ret
lods
pop
in
push
jns
xor
arpl
xor
inc
jecxz
pop
mov
jmp
test
cmps
jno
cmp
cs
mov
outs
clc
out
and
popa
imul
rcl
pop
fisub
cmp
sahf
add
hlt
jo
sbb
pop
inc
inc
ja
lds
xchg
jns
or
ss
push
pop
rcr
pushf
imul
inc
mov
inc
aam
jns
sbb
dec
test
push
lds
fidiv
jge
(bad)
outs
jae
sahf
mov
fsubr
pop
movs
jle
push
inc
mov
sub
pop
xchg
mov
mov
cld
loop
dec
test
stos
dec
in
dec
pop
xor
and
xlat
mov
push
jbe
sub
in
imul
push
push
cmp
sbb
clc
(bad)
out
push
(bad)
xchg
sti
das
or
div
retf
jmp
retf
push
and
sub
jo
in
jle
sbb
and
dec
inc
cdq
popa
adc
adc
shl
or
ret
cwde
mov
mov
jmp
repz
cmps
into
das
mov
(bad)
mov
mov
push
and
and
mov
into
and
sub
sti
ret
cmc
jmp
out
add
dec
stos
out
dec
int3
push
scas
push
out
jbe
imul
and
scas
gs
push
mov
data16
jnp
inc
test
dec
stos
mov
xor
test
mov
pop
jecxz
shl
jge
js
dec
mov
fcmovnb
mov
mov
cld
inc
xor
mov
push
adc
lock
push
add
pop
sbb
cmp
sbb
leave
xchg
adc
(bad)
and
or
push
sbb
fidiv
movs
ins
ja
retf
dec
loop
cli
or
inc
jmp
cwde
xchg
cwde
add
(bad)
mov
js
stos
push
mov
dec
lea
mov
jns
xor
mov
push
cmp
mov
inc
test
ss
in
mov
mov
mov
pop
xchg
out
vhsubps
out
adc
rcl
sub
jp
sbb
push
pop
add
test
mov
fsub
xchg
adc
out
add
and
mov
mov
jmp
and
and
ss
xchg
xchg
call
xor
cmps
jns
dec
and
jmp
xchg
cdq
xchg
das
mov
xor
aas
jns
cwde
add
cmp
js
push
aaa
clc
mov
mov
hlt
shl
mov
or
pop
test
cmp
add
stc
pushf
ret
retf
and
add
cmp
push
xor
push
mov
push
xchg
(bad)
jmp
nop
(bad)
dec
(bad)
jl
jmp
ret
inc
sbb
movzx
sbb
xlat
mov
leave
outs
or
daa
jecxz
sbb
jp
into
les
push
jne
and
(bad)
mov
jecxz
or
js
xchg
clc
xlat
inc
neg
xor
ins
repnz
pusha
push
and
dec
jns
cmps
aaa
xor
(bad)
ret
push
fdiv
mov
or
outs
out
mov
dec
cs
push
in
and
push
dec
fwait
xor
push
xlat
hlt
and
adc
popa
outs
pop
ret
sub
and
and
scas
aas
outs
cs
(bad)
sbb
push
std
fs
repz
lahf
gs
(bad)
dec
repnz
push
push
cmp
pop
clc
mov
jle
xchg
(bad)
call
addr16
int3
jmp
mov
dec
mov
jns
in
inc
xor
push
call
inc
int3
mov
add
clc
cwde
jmp
jmp
nop
xchg
(bad)
inc
cmps
lock
pusha
mov
cmp
or
out
dec
and
out
outs
mov
or
lods
mov
dec
inc
xor
popa
fist
push
ss
loop
lea
mov
addr16
sub
out
call
pop
sub
rep
mov
xchg
push
mov
and
pop
xchg
daa
mov
test
leave
cmp
fs
leave
(bad)
cdq
(bad)
or
fmul
test
test
test
test
pop
fisub
je
pop
lea
fwait
std
repz
and
mov
out
mov
push
fdivr
mov
lods
or
in
test
je
cs
les
dec
push
mov
xchg
jg
and
fdiv
pop
push
fimul
stos
ja
aad
popf
int3
aad
aas
fneni(8087
fsub
mov
ds
add
fadd
or
xlat
mov
fisubr
pop
mov
ficomp
daa
xor
push
bound
push
and
pop
loope
push
mov
fwait
dec
je
stos
ror
pop
bound
push
mov
aad
push
lahf
fist
jns
in
out
mov
lock
mov
mov
push
or
jl
cmp
gs
retf
xchg
call
fstp
in
std
stc
adc
jl
sbb
jnp
out
shr
sbb
sbb
pop
sub
call
fcomp
push
enter
pop
push
jns
lds
test
pop
fbstp
(bad)
out
mov
(bad)
imul
mov
mov
or
fiadd
in
and
sub
test
inc
mov
clc
test
rol
mov
lods
scas
sub
pop
mov
stos
imul
outs
sbb
jbe
adc
push
adc
add
cmps
gs
retf
or
inc
ds
dec
nop
or
movs
sbb
dec
cmc
sbb
(bad)
dec
mov
je
ficomp
sbb
sar
je
add
jmp
and
mov
xor
test
and
dec
xchg
pop
cmc
jns
test
xchg
cmp
dec
bound
enter
ffreep
xchg
sbb
nop
ret
jno
sbb
and
jne
inc
add
movs
shr
or
jmp
xchg
outs
mov
xchg
pusha
add
sbb
scas
and
and
fiadd
add
jge
popa
imul
pop
aaa
stos
test
fidiv
rcl
adc
gs
dec
shl
or
shl
scas
mov
js
and
adc
int3
out
and
enter
cmp
cmp
xor
out
pushf
stos
adc
inc
push
add
xchg
sete
inc
(bad)
xchg
xchg
daa
sub
or
cmp
loope
(bad)
fmul
push
cli
popf
fs
pop
fwait
adc
(bad)
cmp
dec
mov
mov
popf
addr16
jmp
push
cld
inc
test
fwait
call
xchg
jbe
sbb
dec
outs
cs
sub
jp
das
push
cmp
movs
mov
shl
pusha
jge
std
jecxz
push
cmp
mov
xchg
lea
push
in
aad
mov
loopne
leave
add
push
cmps
xchg
mov
in
fs
xor
outs
fisttp
int
or
popa
pop
in
xchg
xor
xor
sbb
cmps
test
lods
aas
dec
or
arpl
pop
add
fisttp
cmp
or
ja
mov
in
push
shl
add
ror
dec
call
pop
fisttp
iret
rcr
jl
mov
mov
jbe
add
adc
dec
inc
mov
add
mov
inc
rcr
mov
add
jge
sbb
inc
push
mov
repnz
(bad)
xor
push
sbb
dec
hlt
repnz
std
mov
cmp
loopne
int3
test
pop
cmps
xchg
xor
lock
inc
ret
rol
sahf
rcr
pop
xchg
cmp
cwde
pop
adc
jae
icebp
pop
and
lea
jl
gs
je
(bad)
sbb
cs
test
adc
repz
push
inc
add
xor
sub
mov
retf
in
cmp
test
cmp
jo
dec
jns
and
cmp
push
mov
sub
pop
es
shl
icebp
mov
inc
mov
xor
les
xor
pop
movd
cld
jo
dec
push
cdq
popa
(bad)
xor
loopne
(bad)
fwait
jle
fistp
fld
fs
test
retf
stos
sbb
mov
dec
dec
cmp
mov
adc
call
or
cs
xchg
dec
mov
arpl
repnz
les
sbb
jp
and
add
xor
push
mov
xchg
pop
inc
push
inc
mov
or
seto
xor
cmp
loop
jnp
xchg
inc
pusha
xchg
movs
inc
mov
fwait
jmp
hlt
push
dec
xor
icebp
rcl
sub
xchg
push
push
dec
dec
neg
sub
inc
rcl
rep
push
loop
xor
and
sub
or
xor
outs
aad
push
lods
fisttp
loope
push
pop
ins
mov
sbb
imul
movs
sbb
pop
push
mov
mov
push
les
fsub
pop
mov
add
pop
push
jmp
and
or
or
jns
jb
adc
xchg
push
mov
in
jl
ins
push
pushf
icebp
sbb
pop
mov
mov
stc
jb
add
stos
jb
mov
int
mov
test
sub
(bad)
mov
mov
cmp
loopne
or
loop
mov
and
dec
sbb
dec
xor
ja
loop
push
daa
fwait
inc
adc
xor
ror
in
cmps
stos
call
sbb
inc
dec
fwait
pusha
dec
pop
adc
jge
pushf
push
lods
lds
xlat
test
sub
ror
dec
cmps
or
push
les
sti
imul
mov
sub
xchg
xchg
and
inc
imul
add
sbb
xor
inc
mov
stos
test
not
pop
outs
cmp
or
fisttp
jecxz
cmps
popf
test
es
int3
jns
pop
dec
dec
sub
cwde
loope
or
mov
nop
sar
and
cmc
adc
xchg
repz
loope
movs
xor
movs
je
outs
repz
pushf
aas
ja
paddsw
shl
xor
lea
out
js
adc
cmp
inc
push
in
sub
jmp
call
gs
(bad)
addr16
mov
mov
jmp
fcmovne
jb
mov
aaa
fdiv
retf
rcl
push
sbb
inc
gs
cmps
cmp
fstp
xchg
add
mov
icebp
or
xor
sbb
call
iret
jg
push
das
xor
push
lods
aaa
aam
dec
rcl
cmp
lods
dec
mov
test
ins
push
imul
mov
push
sbb
adc
lods
inc
(bad)
jp
push
call
or
xor
fdiv
mov
push
mov
movs
stos
pop
inc
push
ret
dec
inc
(bad)
jns
repz
addr16
fstp
(bad)
ret
jae
xchg
mov
aad
(bad)
pushf
xchg
lds
or
mov
push
dec
nop
fild
sti
ins
aad
jne
push
pushf
aas
fdivrp
dec
rcr
cdq
xor
jle
jle
test
xchg
adc
sbb
adc
adc
and
mov
xchg
(bad)
push
mov
cmp
or
jmp
js
imul
nop
in
(bad)
ret
popa
and
or
lds
bnd
add
aas
adc
into
pop
add
push
dec
fsub
movs
arpl
cmp
mov
push
jbe
or
adc
das
adc
out
xor
pop
jg
adc
dec
(bad)
xlat
popf
jl
shl
sub
dec
lods
mov
jmp
lods
data16
aam
jno
adc
lahf
add
repz
rcl
je
addr16
movs
mov
out
mov
outs
jae
xor
je
dec
imul
and
adc
fmul
mov
sub
xor
sar
iret
inc
sub
jnp
xor
xor
xor
xchg
jg
dec
mov
pop
rol
(bad)
(bad)
icebp
clc
icebp
mov
add
jnp
test
jns
push
sar
pop
mov
and
push
cs
or
jg
retf
push
adc
pop
mov
adc
xchg
mov
mov
(bad)
pop
imul
or
mov
fsubr
add
add
fld
push
cmp
jg
xor
xor
xlat
lea
sar
mov
sbb
cmp
cld
inc
cmp
repnz
xor
push
jnp
inc
pop
jl
stos
and
pop
jge
jg
cld
jle
ror
stos
fidiv
lods
out
sub
jne
pop
sti
inc
scas
xchg
push
shr
mov
mov
stc
out
popa
dec
sub
xor
inc
repnz
mov
and
dec
adc
inc
adc
imul
jl
or
popa
cs
dec
adc
jg
imul
mov
clc
fbstp
mov
or
xor
or
lods
mov
or
int3
sub
(bad)
mov
xor
or
fnstcw
int
sbb
xchg
jae
jae
jmp
cld
pop
sbb
mov
shl
cs
aas
imul
sbb
xchg
mov
mov
cs
fld
dec
jg
inc
pop
add
pop
out
in
mov
ins
jmp
push
pop
iret
cmp
imul
and
push
mov
mov
push
push
sbb
(bad)
int
test
push
xchg
repnz
mov
inc
cdq
xchg
or
jp
inc
movd
pop
imul
(bad)
aad
sbb
ss
aaa
sbb
xor
inc
rol
adc
mov
pop
(bad)
aaa
jae
or
push
int3
fisttp
lods
cli
jb
stos
jne
mov
mov
sub
sahf
mov
or
int
or
fist
push
lods
dec
outs
(bad)
sbb
leave
mov
hlt
pushf
cmp
out
aas
xchg
rcr
add
icebp
push
and
stc
cdq
or
lods
fwait
cdq
mov
inc
inc
lods
inc
add
in
mov
(bad)
push
hlt
lds
out
mov
xor
pop
push
fs
jle
jnp
sub
dec
mov
test
mov
xchg
sbb
pop
fcomip
stc
je
lods
mov
dec
jmp
lods
sub
pop
mov
mov
push
sub
and
jno
in
jo
sub
lea
mov
stos
lea
jae
adc
push
sar
mov
jmp
mov
rol
cli
push
and
dec
xchg
out
cmp
push
iret
or
repz
mov
push
cmp
es
xchg
jmp
fwait
push
stos
inc
dec
push
sbb
les
add
shl
jns
aas
jmp
mov
addr16
mov
dec
mov
cmp
aam
push
sbb
sbb
aaa
leave
and
in
push
aam
jmp
ins
sbb
pop
jo
into
mov
cmc
stos
jns
clc
inc
(bad)
mov
mov
shl
fdivr
addr16
add
in
fsub
icebp
shr
js
jnp
jae
cmp
xchg
jno
mov
mov
dec
ret
jo
or
rcl
inc
cmp
xchg
call
out
lahf
xor
pop
test
xchg
lahf
movs
pop
jnp
fcmovne
pop
mov
bnd
lods
adc
mov
and
sbb
fidiv
(bad)
rcl
push
xor
mov
mov
xchg
pop
pop
mov
test
div
inc
scas
jmp
fcom
int3
xchg
adc
out
or
dec
lea
js
mov
or
xor
xor
mov
adc
adc
push
(bad)
aad
out
xor
xlat
jns
add
lds
dec
push
jp
adc
ror
xchg
arpl
mov
xchg
jne
int3
cdq
inc
sub
mov
fstp
push
ja
int3
fsubr
mov
test
xchg
push
mov
sti
ficomp
push
pop
dec
mov
push
jp
xchg
div
pop
pop
cmp
cmp
xchg
leave
push
add
rol
dec
xor
repnz
cmp
dec
dec
into
daa
int3
in
and
inc
mov
jmp
inc
adc
stos
movs
(bad)
mov
mov
iret
lods
leave
jl
outs
sar
das
out
lock
add
xchg
icebp
and
jecxz
pop
fs
das
into
aas
sub
repnz
out
jbe
xlat
and
pop
retf
adc
aaa
(bad)
push
adc
pushf
addr16
into
xchg
mov
jmp
clc
inc
call
jge
fmul
sub
dec
lds
xchg
dec
dec
shl
je
mov
push
dec
xchg
jmp
or
jle
push
nop
push
and
mov
pop
pusha
rcl
loope
pop
fcomp
pop
ret
push
push
xchg
mov
outs
mov
iret
push
inc
and
fld
push
xor
jne
(bad)
mov
inc
cwde
jo
jb
fistp
mov
in
mov
in
daa
and
adc
add
dec
dec
push
push
das
push
add
(bad)
mov
jmp
pop
popa
mov
aaa
test
call
and
das
jo
mov
dec
and
(bad)
mov
mov
xchg
ret
mov
lods
pop
xor
call
nop
xchg
pop
jno
call
sbb
(bad)
jnp
call
out
scas
sbb
data16
push
ret
movs
jns
mov
lock
icebp
ret
stos
mov
dec
jno
xchg
daa
enter
(bad)
and
int
idiv
mov
cmp
sub
(bad)
cmp
push
cmp
fisttp
xchg
in
fcomi
icebp
call
push
inc
mov
jno
cmp
push
or
add
xchg
sahf
outs
sub
shl
cmp
jne
fldcw
lahf
jno
dec
in
(bad)
dec
sar
xchg
xor
xor
lods
out
inc
mov
adc
dec
pop
add
call
int
sbb
scas
icebp
sahf
xor
fld
test
adc
inc
mov
fld
test
mov
pop
and
inc
mov
fwait
lods
lock
ret
mov
hlt
add
or
and
mul
adc
mov
adc
out
xor
addr16
adc
add
ja
pop
ficomp
(bad)
or
jbe
fisttp
and
arpl
sub
pop
jle
and
cmps
dec
iret
mov
pop
xor
cmp
cmp
in
adc
or
nop
ins
and
ja
xor
and
mov
(bad)
and
sbb
icebp
repnz
movs
jb
mov
fisttp
sahf
lock
repnz
in
pop
dec
loope
aad
mov
mov
ret
jmp
ins
mov
adc
cmp
lock
leave
fst
adc
mov
fdivrp
fs
mov
enter
call
fst
fwait
ret
add
adc
add
mov
out
nop
addr16
cs
pop
stc
and
fld
xchg
(bad)
repnz
(bad)
xor
ds
sub
or
sar
loope
daa
sar
das
xor
mov
xchg
pop
adc
adc
jg
loopne
mov
scas
mov
jno
inc
mov
jg
js
cwde
jecxz
repnz
repnz
or
xor
sub
pop
or
mov
pop
mov
jecxz
movs
int3
jmp
cmps
xchg
mov
push
stos
or
rcr
dec
or
pop
std
xor
adc
mov
xlat
jmp
enter
popf
xchg
outs
cwde
add
inc
ret
shl
in
pop
push
arpl
(bad)
fnsave
jo
pop
movs
push
hlt
xlat
push
mov
mov
ret
(bad)
dec
dec
xor
inc
stos
movs
in
in
leave
mov
sahf
xchg
jno
pop
inc
jmp
addr16
pop
sub
xchg
pop
in
imul
dec
sbb
mov
inc
add
sbb
loope
jns
push
add
out
or
jae
xor
out
push
imul
ins
mov
inc
sbb
outs
loope
pushf
ins
push
shl
pop
cmps
xor
aam
movs
rol
xchg
enter
aam
pop
fimul
cdq
fwait
les
fwait
das
xor
mul
test
push
add
mul
sbb
add
ds
mov
loopne
sbb
xor
jmp
daa
sbb
cwde
xchg
cmp
jno
ja
test
arpl
cs
cmp
dec
mov
lods
add
pop
cmps
fst
mov
cs
lds
mov
pop
jae
sub
mov
adc
mov
and
and
shl
push
pop
dec
xchg
mov
(bad)
fnstsw
mov
dec
mov
sti
in
test
idiv
mov
or
xchg
ficom
dec
add
fisub
(bad)
xor
imul
adc
cmp
jb
cmp
mov
cmc
mov
xchg
js
sbb
test
xor
add
cmps
mov
xor
into
and
daa
mov
jecxz
sub
sar
fucompp
popa
jmp
pop
push
stos
movs
icebp
and
dec
push
xor
jbe
mov
add
push
add
scas
rcr
lods
inc
mov
cwde
push
imul
sub
push
mov
adc
mov
xor
enter
mov
pop
dec
lods
cmp
sub
cmc
pusha
test
sar
in
icebp
rcl
sahf
les
xchg
jo
sar
and
(bad)
iret
xchg
into
loopne
xchg
cmp
pop
iret
pop
xor
sub
gs
shl
loope
dec
aas
pushf
fist
loop
mov
arpl
jmp
push
pop
popa
and
sub
call
mov
sub
retf
sbb
or
jge
fisttp
xor
push
adc
xchg
out
xchg
and
sti
cmp
jns
and
cli
sbb
jle
fdiv
inc
push
inc
test
in
xchg
scas
bound
dec
sub
stos
fs
cmp
lock
cmps
cmp
ins
jle
in
rcr
inc
mov
inc
or
mov
sahf
cmps
inc
sub
retf
push
lods
xor
push
xchg
pop
iret
xor
imul
in
in
mov
inc
mov
test
jp
shl
mov
shl
(bad)
out
push
dec
sub
mov
add
xor
mov
lods
xor
inc
pop
mov
xchg
mov
pop
ret
out
mov
shl
inc
test
jecxz
aad
cs
add
mov
fistp
int3
out
jmp
scas
sbb
push
jecxz
dec
out
imul
lea
inc
mov
xor
sub
dec
mov
and
mov
leave
aaa
add
push
test
cmps
sbb
and
test
(bad)
(bad)
fisub
pushf
popa
fdiv
lods
sbb
mov
mov
int3
in
jp
out
sbb
imul
inc
push
sti
or
inc
xchg
(bad)
or
pop
push
out
mov
inc
push
sub
push
imul
int3
repnz
push
adc
jp
fs
push
stos
outs
mov
in
and
pusha
cmp
fs
or
ins
pop
dec
xor
mov
sbb
ud0
es
mov
sub
xor
dec
clc
fnstsw
std
xlat
pop
cmc
es
test
int
sub
ret
sub
jns
or
cmp
out
fisub
fisubr
in
sub
jnp
scas
adc
push
add
push
xor
jae
loop
jg
or
mov
js
and
push
inc
and
mov
bound
inc
mov
adc
mov
xchg
jl
and
pop
fstp
shr
repnz
sbb
xor
add
out
dec
scas
mov
test
sbb
jne
xchg
push
scas
sbb
ret
imul
rcl
test
dec
into
cmps
jmp
fst
ror
stos
xchg
sub
push
daa
or
or
test
jnp
ret
jnp
xchg
sbb
in
movs
rol
add
mov
jl
sbb
(bad)
jp
pushf
popf
scas
jb
cs
repnz
mov
div
fstp
push
lea
ret
fneni(8087
fidiv
in
out
sbb
adc
cmp
or
int
xchg
add
call
not
mov
add
mov
cmps
xchg
shr
mov
sahf
jns
daa
mov
mov
js
(bad)
outs
xchg
pop
out
cmps
ret
jae
(bad)
or
(bad)
sar
fldenv
push
xchg
mov
stos
out
sbb
sub
pop
pop
jp
lahf
dec
xchg
jg
xchg
popa
jecxz
pop
ret
sub
jbe
ins
test
sbb
or
sbb
mov
sar
pusha
popa
pop
mov
jae
xchg
in
repz
pop
jmp
mov
mov
sti
js
daa
mov
mov
adc
retf
cmps
aaa
adc
pop
test
mov
(bad)
xlat
mov
inc
out
add
lock
and
inc
jns
lods
pusha
xchg
cmp
sti
push
inc
ffree
ja
mov
mov
sar
das
sbb
xchg
pop
fidivr
retf
add
mov
out
xor
jbe
mov
and
mov
push
cwde
punpckhdq
retf
movs
loop
mov
pusha
xor
outs
sbb
mov
sub
sbb
leave
or
jnp
fwait
dec
popf
push
xor
xor
xor
scas
cmc
jns
cmc
jecxz
fidiv
pop
out
jp
int3
sbb
lea
add
outs
mov
cmps
addr16
jmp
dec
cmc
nop
sti
out
mov
dec
push
jl
adc
pusha
adc
repz
test
cmc
out
std
fndisi(8087
mov
jo
in
stc
or
(bad)
inc
ror
das
sbb
out
cmp
test
jb
adc
das
(bad)
icebp
pop
imul
jge
sti
and
sbb
push
loop
sub
or
xor
mov
jg
jmp
push
pop
dec
call
mov
sar
jae
call
inc
dec
jns
mov
sbb
(bad)
loope
out
add
pop
ror
jp
pop
jmp
sbb
mov
pop
sbb
loop
call
dec
add
les
mov
xor
adc
pop
sbb
sbb
out
mov
nop
sahf
and
loopne
mov
fisub
enter
inc
pop
cmp
test
fadd
jo
repnz
sub
scas
test
mov
and
pop
sbb
xor
mov
cmps
xchg
addr16
mov
ds
sti
jb
adc
shr
adc
test
ins
or
shl
int
xchg
jbe
movs
rol
jg
mov
sub
imul
cmp
mov
ja
xor
ins
push
lock
mov
or
dec
loop
inc
es
or
push
and
clc
add
jge
pop
mov
(bad)
stos
aas
aad
into
gs
scas
lahf
xchg
add
test
cmp
dec
hlt
jle
jne
dec
lea
sub
adc
in
movs
push
push
pop
jo
std
sbb
fsub
push
xchg
daa
lea
outs
outs
inc
mov
pop
mov
push
jl
pop
xlat
stc
mov
lock
adc
mov
fisubr
dec
jnp
data16
xor
inc
in
pop
jge
fxch
clc
push
stos
push
test
jge
or
aas
loopne
popf
mov
push
push
or
mov
mov
and
xchg
cdq
inc
das
or
mov
inc
cmc
ret
jmp
mul
or
jmp
inc
adc
hlt
push
pop
cmp
pop
add
adc
sub
inc
add
xchg
xchg
popf
adc
int
nop
mov
push
or
xor
cmps
mov
pop
loopne
add
inc
lds
fwait
sti
lahf
dec
push
xchg
push
cdq
cli
xor
push
dec
add
mov
pusha
pop
mov
in
imul
xor
cmps
int3
rcr
and
arpl
mov
inc
cmc
cld
pop
mov
fcompp
cwde
mov
aad
jg
fstp
mov
cmps
dec
fld
push
xchg
ins
stos
push
loopne
jae
mov
outs
fimul
mov
gs
dec
and
ret
fcmovbe
push
stos
test
push
outs
mov
cmp
push
push
or
push
sub
retf
or
ror
enter
xchg
(bad)
fs
cmp
xchg
(bad)
int
fsub
push
jnp
(bad)
leave
icebp
mov
retf
rcr
cmps
pop
mov
or
jno
sub
sbb
add
pop
or
xchg
inc
jns
dec
out
cmp
outs
add
iret
pop
repz
call
jo
or
mov
sub
gs
stos
pop
jo
popf
jmp
lods
mov
ss
out
mov
sbb
mov
sahf
mov
push
imul
pop
mov
push
mov
ror
sbb
adc
and
xchg
push
(bad)
(bad)
repz
push
cmp
clc
loopne
add
jo
fs
imul
call
and
or
(bad)
out
or
hlt
mov
xor
cmc
sbb
imul
mov
(bad)
cli
cmp
inc
jo
sahf
xchg
cli
push
add
stos
sbb
jp
loopne
lahf
stc
and
xchg
mov
cmp
cmp
jnp
mov
jae
fisttp
dec
mul
out
lods
sbb
push
cli
stos
cmp
jecxz
sbb
jmp
in
jns
test
adc
add
outs
mov
xor
push
jbe
push
sub
int3
ins
fisttp
mov
cwde
iret
gs
add
or
push
xchg
mov
push
and
push
and
push
xchg
or
xlat
jae
adc
jb
out
loope
mov
jle
mov
sub
(bad)
icebp
cvtdq2ps
jb
call
push
sahf
add
rol
xlat
xchg
bound
clc
in
mov
adc
out
push
mov
mov
pop
ja
rcr
push
lahf
movs
mov
sbb
inc
pop
sub
iret
retf
sub
fsubp
inc
mov
imul
daa
fwait
and
(bad)
fidiv
daa
bound
ds
fidiv
mov
pop
lea
scas
cs
mov
daa
jmp
pusha
mov
adc
lods
mov
pop
and
mov
je
aas
cmp
mov
mov
fidiv
jns
fsub
inc
xchg
and
jno
and
push
sbb
sub
loopne
jbe
ins
das
push
mov
outs
and
pop
test
sahf
loop
mov
in
test
mov
xchg
pusha
(bad)
(bad)
mov
fldcw
out
arpl
jmp
mov
jecxz
add
fs
in
adc
mov
cmps
dec
daa
jge
ror
pop
sbb
adc
push
into
ret
out
not
jnp
fldenv
loope
inc
test
ds
push
addr16
rcr
xlat
addr16
push
jge
int
sub
xor
xor
pop
adc
gs
ja
pop
call
adc
jns
ret
es
int3
pushf
outs
pushf
xchg
cmp
add
jmp
xchg
pop
cmp
pop
dec
fiadd
mov
aaa
push
loope
or
push
xchg
or
inc
or
call
retf
mov
loop
retf
and
adc
mov
enter
xchg
push
cmps
add
add
jns
or
and
pop
int3
mov
mov
fstp
loopne
mov
rol
or
ins
add
cmp
cmp
neg
js
sbb
xor
push
jne
mov
jbe
call
mov
ja
cld
shr
sub
add
dec
and
mov
call
lock
sub
cld
push
cli
push
mov
jno
rcl
call
nop
mov
loop
std
adc
lock
jl
daa
fiadd
add
or
push
stos
jo
imul
lea
dec
mov
scas
outs
or
push
retf
bound
rcr
xchg
dec
stos
xchg
adc
mov
xchg
arpl
xchg
nop
sbb
pop
inc
les
dec
inc
xchg
sbb
popf
pusha
mov
push
out
inc
dec
and
sbb
je
enter
movs
lods
dec
mov
add
bound
cmp
aam
out
push
sub
sbb
popf
xchg
int3
or
daa
loop
scas
push
jmp
pop
test
push
cld
lock
es
dec
cmps
and
push
xor
xlat
jbe
cwde
push
xchg
ins
(bad)
rol
xchg
add
xor
out
stc
popf
mov
cmp
mov
jg
cmc
lock
test
call
lock
cdq
and
shr
push
mov
cmc
inc
or
sahf
sbb
mov
pop
mov
in
leave
push
cmp
xor
shl
out
dec
mov
and
or
dec
pop
ins
xchg
cmp
mov
sbb
fadd
data16
jo
sbb
add
mov
shl
mov
jl
xchg
mov
jae
lea
out
(bad)
mov
cmps
lock
cmp
aaa
sub
lock
shr
jge
sbb
in
mov
fisttp
push
xchg
push
mov
inc
and
inc
fs
adc
fdivr
cmp
dec
inc
dec
push
sbb
pop
cmps
or
pop
das
jmp
lea
loop
ror
sbb
(bad)
pusha
mov
jmp
fadd
aad
stos
ds
mov
mov
(bad)
out
or
dec
sbb
and
mov
cmps
cs
imul
pop
lahf
pop
cmp
jge
scas
xchg
push
push
push
pop
jmp
daa
fnstcw
xchg
retf
add
adc
daa
jecxz
repz
fisubr
pop
cmp
enter
xchg
jmp
mov
push
shr
mov
fsubr
std
imul
(bad)
call
in
adc
call
cmps
mov
stos
pop
sub
loopne
cmp
sub
rcr
(bad)
xor
mov
mov
pop
mov
pushw
push
(bad)
pop
or
rcr
and
repnz
hlt
mov
adc
mov
repz
push
dec
fs
lods
cmp
cmp
js
push
or
out
dec
mov
and
cmp
xor
adc
popa
(bad)
fcom
adc
xor
mov
and
xchg
xchg
mov
loope
and
idiv
sub
dec
cmps
dec
outs
mov
inc
mov
adc
jmp
aaa
cld
dec
aaa
outs
fadd
cmp
xchg
mov
pop
in
or
je
jl
test
xchg
inc
cmp
xor
push
jl
(bad)
fldcw
rcl
loop
mov
xchg
repz
mov
add
dec
cs
xlat
jmp
inc
pop
fwait
test
mov
rcr
adc
aad
jnp
in
aas
dec
mov
mov
push
sahf
hlt
mov
xchg
sub
xor
mov
or
retf
clc
mov
adc
rcl
test
inc
or
(bad)
adc
xlat
mov
or
icebp
xlat
push
inc
outs
xchg
popa
fdivr
jl
cdq
movs
dec
gs
icebp
sbb
push
or
mov
in
add
outs
xor
shl
out
jb
sbb
lds
push
cmp
lea
jae
je
push
add
ror
in
jecxz
add
inc
jne
jmp
aaa
out
nop
ins
imul
repz
jecxz
nop
cwde
aam
and
movs
icebp
cmp
int
shl
rcl
js
out
add
cmp
ror
scas
sub
jns
jmp
push
adc
add
das
ret
aaa
sbb
dec
mov
je
je
inc
test
adc
push
call
push
imul
inc
fdivr
mov
popa
pusha
mov
test
lods
mov
add
inc
xlat
in
sbb
sbb
retf
call
nop
dec
arpl
arpl
mov
inc
pop
sti
rol
(bad)
ror
outs
test
fbld
pusha
mov
xchg
push
push
movs
stos
add
mov
add
mov
lods
hlt
xor
in
xchg
xorps
stc
scas
add
movs
jnp
push
ret
imul
push
loop
sub
mov
inc
push
jno
cld
out
mov
sub
mov
sbb
xchg
xchg
(bad)
addr16
sbb
aas
jge
push
inc
inc
add
ret
loope
adc
clc
cmp
clc
xchg
mov
stos
inc
mov
adc
push
jae
add
ss
sub
mov
int
nop
jmp
out
loope
iret
(bad)
enter
retf
into
jbe
repnz
jecxz
cmp
mov
jns
adc
and
mov
daa
jp
sbb
xor
mov
sub
dec
out
outs
ret
cli
aaa
jb
lea
(bad)
jb
jns
xor
inc
into
daa
mov
movs
dec
push
int3
sbb
cmp
scas
xor
cmp
mov
jle
inc
stos
icebp
pop
test
or
daa
cli
test
in
fwait
cmps
pop
rcl
dec
fadd
fstp
xor
add
inc
push
aas
leave
cmps
mov
mov
xor
gs
cmp
call
mov
xlat
jg
and
mov
(bad)
jmp
jmp
ret
pop
pop
fwait
push
push
push
mov
mov
jg
push
pop
xchg
and
or
xor
mov
pop
jmp
add
pop
inc
mov
in
dec
pop
(bad)
or
imul
ins
aad
mov
or
xlat
sub
into
mov
popf
cmp
jmp
(bad)
push
loop
lods
jg
out
add
gs
xchg
retf
ret
xchg
popf
clc
mov
jns
in
xchg
aad
inc
xchg
sub
std
jnp
sahf
mov
adc
pop
mov
jge
pop
mov
movs
loop
ret
call
loop
xor
push
adc
stos
nop
neg
jmp
jnp
mov
add
ficomp
test
dec
je
aaa
cmp
enter
cld
fldcw
nop
lahf
out
xchg
inc
sti
mov
(bad)
push
pushf
jmp
and
sbb
mov
in
cmp
inc
imul
and
pop
fisttp
or
icebp
mov
in
fs
or
imul
lds
jne
repz
push
loop
daa
loopne
aad
mov
in
pop
push
push
loopne
outs
mov
inc
fild
mov
cs
call
out
jg
(bad)
dec
sub
pop
mov
sub
shl
add
push
inc
or
retf
or
and
push
clc
mov
xchg
sbb
int3
sbb
push
mov
loop
dec
cmp
enter
sub
mov
ror
je
inc
push
icebp
ror
xor
pop
mov
(bad)
stos
cs
xor
ret
mov
mov
sti
in
movs
ror
aas
mov
pop
pop
popf
leave
xchg
adc
add
mov
aam
mov
cmp
xor
adc
push
icebp
in
std
sbb
aas
mov
adc
dec
xchg
dec
pop
fiadd
int
retf
and
push
pop
aad
dec
lock
dec
test
xchg
mov
push
xor
fisub
mov
scas
xchg
stc
mov
(bad)
sbb
stc
push
ror
out
sbb
std
cmp
push
test
lds
mov
push
sub
adc
out
inc
imul
jmp
push
fisttp
and
je
sub
fwait
in
shl
loop
outs
ret
ret
leave
pop
data16
xchg
cmp
sub
lea
pop
fisub
ret
or
retf
fincstp
xor
mov
out
in
test
mov
jmp
sub
fadd
les
lods
shl
mov
dec
mov
jb
sbb
repnz
imul
mov
stos
fild
sti
scas
sub
xor
std
xchg
cmp
je
call
(bad)
imul
mov
xor
call
xor
clc
pop
xchg
adc
icebp
and
neg
sahf
cmc
dec
stos
mov
sub
sub
shl
dec
data16
dec
sti
xchg
jnp
sbb
dec
ins
lock
add
nop
add
push
fidivr
(bad)
not
push
mov
cmps
retf
mov
lahf
inc
repnz
(bad)
mov
pop
xchg
fisttp
gs
or
leave
mov
cmp
sbb
mov
leave
jnp
cmp
jmp
or
dec
popw
jnp
outs
bound
sub
push
mov
adc
shl
xor
test
(bad)
(bad)
test
scas
inc
mov
adc
(bad)
push
add
(bad)
pusha
sbb
out
sub
call
aad
(bad)
pop
cmps
dec
jmp
adc
jno
push
add
sar
(bad)
outs
fdivr
cs
(bad)
ret
inc
jbe
daa
sbb
sbb
cmc
and
xchg
adc
pop
jmp
movs
add
in
cdq
add
mov
xchg
xor
xchg
je
(bad)
xlat
nop
lods
scas
ficom
and
xor
scas
idiv
lods
sub
pop
scas
in
aaa
retf
pop
out
and
shr
jmp
stos
aad
add
movlhps
adc
mov
pushf
(bad)
aaa
ret
jae
mov
pop
sbb
pop
(bad)
aam
retf
or
and
cmp
out
popa
pop
js
ins
mov
(bad)
out
or
scas
add
imul
in
lock
xchg
les
push
pop
fidiv
scas
loop
repz
cli
or
jmp
clc
cmc
cld
sub
retf
mov
into
mov
push
pop
xor
adc
popa
mov
and
mov
call
sti
pop
shr
retf
ds
mov
ret
mov
adc
not
shl
fprem
les
test
pusha
imul
aam
cmp
cmp
adc
inc
xchg
faddp
mov
xor
ret
cmp
pop
inc
pop
scas
ret
(bad)
mov
and
sub
xlat
push
(bad)
xlat
dec
cwde
sbb
loope
push
xchg
push
ins
aam
push
sub
adc
xor
jno
sbb
pop
pop
in
and
xor
xchg
popf
fstp
aad
mov
mov
and
jo
not
mov
sbb
cli
dec
mov
mov
js
(bad)
mov
add
loop
cmps
mov
jno
jg
aaa
or
mov
js
lds
call
and
mov
cmps
inc
stos
mov
je
cwde
mov
(bad)
ss
inc
or
cwde
aaa
push
mov
add
mov
mov
push
les
icebp
mov
push
sub
ja
leave
pusha
mov
fst
in
xor
adc
seta
adc
adc
sub
cmp
cmp
pop
mov
mov
stos
(bad)
fwait
and
adc
inc
fistp
aad
pop
pop
test
adc
(bad)
cmp
jmp
inc
xchg
lea
or
jp
dec
pushf
cmp
(bad)
addr16
jmp
dec
popa
mov
fs
push
adc
mov
(bad)
sti
div
mov
ja
out
(bad)
fadd
loop
and
mov
pop
aad
dec
jae
aad
popf
jne
adc
and
ror
test
mov
xchg
adc
dec
push
jmp
sbb
dec
push
and
jl
icebp
lds
loop
xor
test
jno
les
cmc
stos
pusha
cmp
arpl
sbb
xchg
and
fwait
jbe
mov
mov
push
sbb
sahf
sar
dec
adc
push
mov
dec
xchg
mov
(bad)
lahf
mov
pop
jecxz
imul
adc
sub
and
ds
and
xlat
and
push
retf
xchg
pop
lahf
mov
or
popf
mov
jnp
call
cmp
adc
xchg
test
nop
adc
lds
cmc
add
xor
leave
call
(bad)
jo
nop
inc
xor
dec
dec
jnp
lahf
mov
nop
retf
mov
pop
popa
sub
mov
popf
adc
adc
iret
pushf
fstp
dec
rcl
ins
ins
ret
jmp
mov
aam
xor
rcr
sub
or
fisub
iret
xlat
popf
adc
cmp
in
mov
pushf
mov
inc
xor
movs
(bad)
fld
out
inc
jnp
or
cmp
push
inc
xchg
rcl
cmps
sub
add
xchg
sahf
mov
mov
and
mov
xchg
iret
fmul
imul
sti
inc
int3
jo
stos
push
loop
ins
(bad)
scas
jbe
test
sub
(bad)
pop
cmc
lds
mov
push
mov
push
pop
ins
jecxz
int
pop
mov
sbb
and
aaa
push
mov
hlt
and
add
and
cmc
xor
sahf
test
dec
dec
inc
xchg
loop
pop
lods
sub
xor
bound
fisttp
mov
mov
data16
(bad)
pop
sbb
pop
pop
test
sti
mov
fwait
enter
popf
mov
dec
dec
(bad)
xchg
xor
ds
add
jle
cmc
jg
gs
repz
(bad)
adc
cs
ss
call
cmp
adc
int
and
mov
pop
scas
out
cwde
inc
adc
push
hlt
leave
test
inc
jb
mov
movs
adc
lahf
cli
mov
scas
popf
out
stc
mov
sub
into
call
ror
dec
and
inc
or
loop
sub
mov
je
or
outs
sbb
arpl
mov
cmp
push
(bad)
mov
pop
test
les
call
jne
lock
sub
(bad)
stos
fnstenv
lahf
sbb
ja
sbb
pop
and
add
mov
inc
pop
std
or
ret
xor
mov
jl
aas
mov
pop
lods
add
stc
loop
lods
bound
sub
inc
mov
loopne
push
dec
retf
push
xor
ins
repnz
sbb
inc
mov
data16
adc
add
push
ins
(bad)
call
std
pop
aad
out
adc
das
mov
into
mov
out
cmps
enter
and
gs
stos
aam
and
mov
jne
or
jo
dec
lock
in
push
repnz
cmp
and
jae
in
adc
jnp
stos
test
push
push
inc
cdq
enter
sbb
nop
mov
cli
jae
lods
add
sub
lahf
in
pushf
loopne
cmp
test
push
mov
and
mov
iret
std
jmp
popf
add
nop
jmp
hlt
test
in
pop
movs
mov
jle
cmc
push
mov
sub
lds
dec
xor
xchg
cs
out
shl
data16
lahf
pop
sub
sub
sub
pop
sub
cmps
jns
push
push
or
scas
stos
push
add
in
jnp
mov
imul
sar
dec
push
dec
or
inc
sahf
sub
and
or
retf
fs
ret
int
daa
mov
jecxz
and
mov
and
pop
iret
xor
push
sbb
test
fwait
div
cdq
sbb
shl
or
jae
fdivr
mov
mov
cwde
sub
cdq
or
lock
jmp
ss
pop
ins
xlat
mov
adc
leave
dec
mov
sbb
push
retf
xor
mov
outs
add
pusha
jbe
leave
sbb
sub
(bad)
and
or
mov
add
add
sbb
sub
dec
and
jne
xor
cmp
or
mov
cli
ror
dec
and
mov
xlat
inc
loope
mov
and
test
cs
fist
jp
mov
jmp
sbb
idiv
and
test
ins
lods
fwait
jp
or
fcmove
lds
rcl
out
cli
xchg
mov
mov
mov
mov
mov
dec
aad
xchg
loope
lock
add
rcr
inc
sbb
or
dec
dec
loope
cs
cs
jmp
dec
fs
fstp
out
stos
mov
add
imul
jnp
xchg
leave
lahf
loop
adc
(bad)
sbb
(bad)
and
cli
push
or
sbb
mov
xor
xchg
sub
in
cmps
xor
inc
pop
sub
popa
jle
push
or
pushf
jp
lds
dec
into
mov
mov
test
std
or
hlt
cmp
cmp
jle
sbb
mov
xor
sbb
mov
in
xchg
pushf
div
push
inc
test
push
xor
push
mov
std
lods
add
jns
dec
fisubr
jo
xchg
jae
and
mov
mov
stos
xlat
jnp
xchg
popa
add
test
sub
mov
stos
sar
xchg
mov
add
push
mov
cmc
cmps
lock
(bad)
xor
js
and
push
lods
inc
fdiv
int
rol
jns
xor
add
neg
pop
out
jne
mov
dec
jnp
sahf
and
inc
add
clc
mov
add
in
cld
or
ret
das
inc
jo
daa
sahf
jecxz
ret
and
cdq
in
pop
pop
outs
call
fsub
adc
and
sub
push
jge
pop
(bad)
(bad)
mov
jne
cmps
je
adc
loopne
mov
sub
or
test
xor
out
and
mov
nop
call
or
and
enter
and
sub
popf
push
push
in
ds
mov
(bad)
outs
xchg
aas
retf
pop
push
inc
call
mov
add
inc
rcr
mov
popf
sub
jecxz
sbb
lahf
mov
cmps
jno
in
sbb
aas
pop
jecxz
add
jnp
shl
lea
call
jno
mov
sbb
fidivr
or
shr
jnp
add
or
xchg
lock
(bad)
mov
ins
jp
je
add
jle
js
pop
lea
mov
ja
cmps
or
jno
movs
and
or
lods
sbb
sbb
(bad)
mov
cli
sub
push
and
jmp
retf
fmul
xlat
sub
shl
clc
xchg
jno
mov
mov
test
(bad)
jb
pusha
sub
ss
push
clc
xor
repz
mov
mov
fwait
mov
xchg
pop
xchg
jns
jmp
outs
or
push
adc
call
push
in
add
jne
test
scas
in
cmp
inc
and
pop
shl
sbb
repz
aam
lods
in
push
loopne
or
hlt
cs
fisub
dec
add
and
sub
fnstsw
repz
push
push
or
out
inc
mov
or
es
pop
dec
lods
div
jge
inc
call
shl
xor
adc
cmp
jg
or
fist
inc
mov
mov
data16
xor
gs
fistp
adc
mov
adc
lods
outs
movs
adc
sub
push
mov
dec
fadd
mov
pop
in
in
push
cs
ins
punpckhbw
in
leave
mov
hlt
test
fldenv
mov
pop
adc
sbb
mov
imul
or
call
outs
xor
stc
out
xchg
or
mov
sub
in
adc
mov
addr16
cmp
cld
ret
adc
jl
sbb
daa
push
xchg
lods
mov
and
push
mov
nop
jae
call
mov
pop
and
daa
cmc
cdq
stos
retf
jmp
mov
sub
in
sbb
out
nop
or
dec
sbb
mov
iret
scas
cdq
sub
xlat
in
cmp
xor
xor
cmps
adc
mov
cmp
adc
cwde
js
mov
push
jle
iret
mov
xchg
cmp
or
leave
cmp
push
shl
dec
shl
push
(bad)
mov
jmp
sbb
and
daa
xor
mov
imul
push
inc
adc
mov
sub
(bad)
leave
retf
popf
and
inc
push
test
iret
mov
inc
movs
leave
test
cld
inc
stos
mov
add
adc
adc
not
cmp
in
and
mov
movs
cmp
test
push
inc
dec
lea
add
jl
test
push
xchg
push
mov
mov
repnz
sbb
and
add
mov
add
mov
adc
rcl
test
adc
sbb
xor
movs
int
cmp
dec
(bad)
and
aas
xchg
jno
scas
mov
fwait
call
mov
stos
fnstcw
fadd
lea
dec
sbb
pop
(bad)
iret
mov
test
push
lea
lea
cmp
add
or
dec
pop
cwde
cmp
dec
test
ret
add
sbb
xlat
into
mov
stos
lds
fimul
add
dec
pop
push
jle
call
jno
inc
aaa
push
mov
jne
loope
mov
add
rol
mov
jb
movs
adc
xchg
or
scas
add
xor
inc
enter
mov
xor
imul
(bad)
out
mov
enter
aad
mov
cmps
and
test
ror
inc
cld
aaa
mov
cmp
jbe
fmul
test
adc
aas
xor
cdq
lock
push
mov
jnp
adc
shl
push
pop
scas
sti
out
cmps
xlat
push
clc
out
sub
push
jae
je
xchg
rol
and
mov
sub
ds
dec
mov
jg
cmp
(bad)
in
push
inc
test
jb
cmp
pop
cwde
mov
mov
outs
stos
mov
mov
into
jno
aam
adc
int
sbb
or
xor
popa
retf
add
addr16
mov
pop
jecxz
in
push
xor
loopne
(bad)
retf
lock
sar
fld
or
rcr
fldenv
dec
mov
mov
mov
inc
push
aad
adc
jb
mov
push
xchg
xor
adc
sahf
mov
fucom
int3
out
sti
inc
mov
push
cmp
mov
hlt
push
mov
test
(bad)
(bad)
and
mov
retf
cdq
jne
movs
pop
push
int3
mov
jle
test
pop
xor
shl
movs
push
popa
test
gs
cld
push
xor
sahf
cli
daa
icebp
inc
mov
cmp
ret
popf
jns
cmp
push
mov
add
iret
fistp
mov
pop
and
and
repz
mov
xlat
fmul
and
hlt
scas
popf
and
push
stc
mov
add
enter
aaa
or
dec
sub
mov
call
sub
mov
xor
pop
aam
aad
lock
dec
fwait
cmp
dec
and
adc
imul
jae
inc
aam
jo
pop
sbb
in
xchg
or
dec
outs
sti
and
xor
xor
sub
fidiv
lods
std
je
std
mov
enter
loope
mov
jbe
mov
int3
jl
xor
mov
xchg
fwait
cmp
sbb
jb
and
jecxz
cmps
or
outs
mov
retf
dec
cmp
cmps
inc
dec
push
add
movs
(bad)
mov
inc
jecxz
mov
test
add
jb
jmp
(bad)
fld
test
xchg
iret
imul
fistp
mov
cli
adc
imul
fsubr
jmp
iret
jle
cdq
scas
in
pop
sub
call
loop
cmp
fsubr
inc
addr16
jg
mov
cmp
fstp
div
in
(bad)
fsubr
test
adc
es
imul
aas
fistp
(bad)
or
cmc
push
aaa
cmp
inc
int
lods
add
pusha
icebp
imul
loop
inc
scas
(bad)
push
fs
adc
push
mov
xchg
test
push
pop
mov
push
sbb
mov
jo
ret
cmp
daa
mov
mov
pop
lds
add
mov
push
pop
xor
or
and
jmp
push
add
shr
jne
ins
test
cwde
scas
cmc
jle
mov
mov
scas
cld
adc
es
popw
in
cmp
cmc
fnstenv
mov
ss
loope
xor
loopne
ins
dec
lods
push
pop
dec
mov
rol
out
inc
push
mov
loope
popf
xchg
lods
fcmovnbe
sbb
(bad)
in
jbe
gs
loop
pop
adc
jbe
pop
imul
repnz
and
dec
mov
jne
movs
push
stos
clc
or
dec
repz
adc
cmps
scas
jl
in
out
inc
addr16
jmp
bound
pop
fistp
and
xchg
fadd
cs
out
and
xchg
(bad)
aaa
dec
lods
stc
jbe
xchg
xor
not
call
in
mov
shl
dec
xchg
hlt
push
or
mov
imul
ins
or
adc
push
sub
ret
pop
adc
jo
add
mov
pop
jne
dec
sahf
(bad)
cwde
add
mov
sub
lea
mov
iret
jae
or
iret
loopne
mov
ins
jmp
dec
sbb
jno
movs
outs
xchg
loopne
push
pop
mov
stos
mov
aad
retf
jbe
outs
mov
cmp
cdq
xchg
mov
(bad)
bound
retf
ss
sar
scas
mov
push
pop
xor
push
cmp
jno
leave
(bad)
nop
cmp
inc
not
inc
sbb
and
inc
fs
fs
scas
sub
das
pop
push
xchg
idiv
xacquire
int
jbe
fisub
mov
fldcw
mov
test
jbe
mov
call
stos
xchg
dec
sbb
mov
inc
(bad)
call
cli
mov
(bad)
ja
mov
push
pop
dec
cli
lea
jge
pop
cmp
shl
cld
jno
out
mov
test
sub
jl
fs
mov
out
adc
int3
cmc
mov
mov
xchg
dec
int3
cmp
loop
mov
sti
jge
or
js
cmps
inc
add
test
test
jns
mov
pop
or
sbb
leave
jp
pop
pop
or
sub
or
pushf
ds
push
mov
hlt
call
cmp
clc
call
cmp
imul
xchg
sub
aad
xchg
add
mov
push
nop
pop
cmp
sub
fst
fcmovb
call
outs
mov
mov
imul
ret
sub
add
push
(bad)
sub
add
imul
lods
pop
ss
test
adc
xor
and
dec
push
arpl
jnp
adc
xchg
or
sbb
pop
jp
adc
xlat
or
push
jmp
mov
pop
cmp
and
das
pop
jns
jae
retf
aas
sbb
inc
jl
adc
cmp
mov
test
imul
(bad)
pop
or
fnstenv
add
jge
jp
arpl
adc
cmp
push
popf
loop
push
jl
cmp
mov
ror
call
jl
aad
fsub
aas
leave
cli
or
adc
int3
rol
jmp
ret
(bad)
repnz
mov
mov
loope
mov
aad
ss
mov
and
jp
mov
jbe
bound
lods
push
mov
adc
and
sbb
popf
sbb
or
add
xchg
addr16
dec
mov
cmp
shl
and
inc
sbb
mov
sbb
push
xchg
mov
xchg
push
lahf
fimul
imul
jmp
sub
ror
retf
std
lock
scas
out
shr
retf
fwait
mov
or
xor
dec
in
(bad)
jge
inc
cdq
ret
arpl
das
or
jl
aas
fadd
or
mov
or
imul
movs
sbb
xlat
es
push
sbb
xor
mov
xor
fldln2
gs
ins
imul
fimul
sbb
pop
es
retf
inc
fdivr
pop
ja
mov
mov
mov
jmp
jne
stos
loop
mov
mov
cmp
push
mov
mov
sub
dec
dec
adc
xchg
and
inc
xor
stos
mov
cmp
fbld
push
adc
(bad)
stos
fpatan
sti
ret
sub
or
push
adc
in
jecxz
sbb
ss
retf
dec
mov
mul
je
cmps
fidiv
inc
push
mov
ret
xor
movs
je
cmp
push
inc
push
(bad)
mov
retf
pop
adc
pop
repz
jge
fstp
inc
jmp
int
xchg
dec
jmp
(bad)
xchg
movs
test
aad
or
scas
mov
sbb
lds
jl
in
std
pop
fcomp
out
and
iret
retf
lds
pop
loopne
sbb
shr
shl
inc
jmp
(bad)
inc
dec
ds
xor
cmp
xlat
pop
add
lds
mov
xor
xchg
mov
fdivp
dec
cmps
dec
shl
pusha
daa
loop
inc
rcr
rcr
std
xor
jb
bound
xchg
mov
out
fild
lods
pop
jp
inc
cs
xchg
pop
pop
imul
in
or
out
xchg
test
lock
in
push
out
and
mov
sub
not
jb
sub
call
jge
out
popf
ins
jno
adc
imul
add
cdq
(bad)
xor
mov
retf
out
std
pop
movs
jbe
retf
cmp
jae
inc
or
xor
retf
mov
ss
retf
cdq
lods
loop
mov
mov
dec
stos
aad
jae
sub
les
lods
aaa
jle
mov
jne
pop
push
or
or
mov
(bad)
cmp
pop
shl
retf
inc
daa
add
xchg
shr
(bad)
out
xchg
cmp
mov
cs
sar
xlat
xchg
pop
jnp
dec
enter
inc
pop
daa
sub
dec
adc
xor
mov
add
pop
mov
ret
mov
iret
sbb
ins
inc
jnp
repz
xchg
cmp
sub
movs
dec
fist
inc
dec
vmread
retf
popf
inc
clc
push
movs
xchg
ins
xchg
jae
(bad)
repnz
es
fsub
sub
sbb
in
add
(bad)
test
pusha
lahf
jg
lods
test
adc
fnstcw
jle
and
cmp
lods
dec
add
das
imul
cmps
jmp
adc
mov
add
ins
mov
into
(bad)
std
or
push
xor
adc
mov
addr16
popf
push
xor
mov
lds
in
fbstp
add
mov
ret
pop
inc
dec
xchg
test
or
ds
or
mov
fucomip
movs
imul
ficom
adc
inc
push
inc
mov
push
clc
pop
cmc
and
jns
lea
jmp
xor
sbb
or
in
sub
push
inc
jl
push
cmp
xchg
mov
and
clc
mov
sbb
inc
daa
movs
fxch
add
xchg
mov
dec
stc
addr16
xchg
es
pop
loope
mov
enter
je
and
addr16
add
mov
jne
stos
jg
mov
out
ja
clc
jns
cli
mov
push
mov
mov
popf
out
and
mov
xchg
xchg
mov
retf
inc
and
mul
cmp
call
cmp
(bad)
in
jl
imul
repz
inc
(bad)
in
pop
push
push
pop
rol
(bad)
out
les
mov
(bad)
or
inc
cmps
jno
add
mov
push
dec
dec
pop
push
ret
jl
mov
sbb
fsub
jge
jb
inc
pop
push
sbb
inc
ja
fwait
aam
pop
retf
fcmovbe
lods
test
and
xor
pop
inc
and
xchg
sub
leave
mov
pop
xchg
inc
pop
jmp
mov
wrmsr
sub
sub
fisub
xor
cmp
rep
pop
xlat
xor
sub
(bad)
mov
add
repz
xor
dec
aam
mov
js
fwait
sbb
dec
(bad)
leave
sub
jno
rcr
push
iret
mov
adc
pop
add
int3
sub
inc
pop
stc
stos
push
inc
mov
adc
call
sub
repnz
pop
scas
mov
jno
mov
(bad)
mov
or
lahf
dec
push
iret
fs
cld
jns
ins
ins
test
mov
pop
pop
pop
pushf
add
cmp
retf
fxch
mov
lock
lods
arpl
push
aad
test
(bad)
mov
div
cs
jle
mov
xchg
sub
out
imul
sbb
and
jb
adc
push
aad
int
and
cmp
cmps
cmp
lahf
pop
rcl
sbb
inc
xor
lods
ds
pop
mov
lock
push
mov
pusha
and
jne
test
sbb
inc
test
cmps
std
je
cdq
push
test
mov
jns
shl
cmps
hlt
mov
in
lods
mov
enter
jne
sbb
sbb
shl
fwait
cdq
aad
mov
aas
sbb
sar
stos
out
xchg
nop
sbb
jno
and
push
out
js
bound
push
aam
mov
neg
xchg
(bad)
sbb
or
sub
lods
fsub
cwde
daa
jb
movs
jb
(bad)
and
dec
mov
sub
sbb
xchg
push
dec
pop
inc
daa
ffree
out
loop
ins
repnz
add
mov
lea
add
fld
mov
in
xchg
outs
(bad)
outs
fwait
mov
bound
and
js
loope
movlps
xor
stos
and
dec
add
push
int
mov
loopne
sbb
iret
add
cmps
daa
cmps
pop
jmp
mov
lock
jb
add
shl
sub
stos
in
mov
in
arpl
pop
outs
mov
movs
sbb
push
add
and
mov
repnz
push
push
scas
int
push
mov
mov
or
repnz
(bad)
mov
xchg
adc
push
js
xor
or
jl
jmp
mov
cmp
push
sub
pop
mov
jge
(bad)
stc
ss
jge
fimul
scas
xchg
icebp
xor
lgs
retf
xchg
ret
xchg
inc
nop
test
rol
(bad)
fnstenv
jne
xchg
in
(bad)
mov
gs
cwde
mov
lods
not
or
pop
stos
gs
retfw
jp
and
dec
sub
aaa
and
mov
mov
lahf
mov
push
xchg
jle
mov
or
mov
test
xchg
mov
in
dec
mov
xor
inc
inc
xor
dec
ins
stos
scas
jo
push
ins
inc
jmp
repnz
(bad)
out
outs
cmps
outs
sub
xchg
cmp
outs
xor
mov
aad
mov
xchg
in
or
leave
xor
lea
jmp
add
rcl
xor
cmps
mov
mov
inc
mov
sar
cmp
xor
push
and
enter
add
pusha
int3
stc
test
adc
data16
mov
repnz
sbb
jb
fs
push
xchg
(bad)
sbb
(bad)
jae
xor
jmp
repz
dec
pop
repnz
xor
rcl
mov
dec
dec
push
(bad)
jb
adc
jne
jae
in
push
mov
mov
inc
sub
jge
xchg
xor
aaa
sub
movs
popa
mov
in
jle
inc
pop
stos
sbb
xlat
shl
jne
push
pop
xchg
mov
mov
test
aas
push
rcr
aas
fcom
in
fs
pop
fwait
ja
mov
push
cmc
fwait
add
in
push
inc
jbe
int3
sbb
movs
not
(bad)
stc
add
sub
ins
adc
in
sbb
pop
call
(bad)
movs
sub
xchg
or
adc
aas
mov
push
jg
add
stc
adc
sub
jae
(bad)
mov
stos
and
and
add
pop
aad
jmp
or
sub
push
daa
jb
jle
cmp
shr
ja
iret
xchg
scas
mov
pop
mov
outs
ss
fst
sbb
rol
mov
xchg
mov
jno
mov
jo
xchg
pop
mov
inc
(bad)
cmps
mov
adc
pop
loopne
fstp
sub
fidiv
(bad)
push
pop
lea
ins
push
ins
push
aam
nop
mov
out
call
inc
jle
fwait
leave
dec
lock
aad
jnp
or
pop
pop
movs
pusha
adc
pop
imul
xchg
sub
sbb
push
in
bound
lds
xchg
ror
daa
(bad)
jmp
sub
inc
cdq
sub
leave
test
pop
jno
or
(bad)
stos
jno
and
sub
dec
dec
cs
scas
dec
pop
or
or
aad
adc
movs
or
pushf
out
les
and
pushf
retf
xchg
cmc
sbb
test
lea
push
repnz
test
inc
push
pop
jp
adc
xor
xchg
xor
cmc
and
dec
(bad)
mov
ja
mov
mov
mov
sti
clc
int
(bad)
fbstp
sti
mov
mov
push
rcr
xchg
lea
adc
dec
leave
scas
pushf
cld
mov
addr16
cld
out
gs
or
push
pop
sbb
dec
ror
pop
sub
sub
cmp
lea
je
test
dec
pop
xor
jmp
dec
inc
jp
xchg
sbb
cmp
or
adc
test
stc
call
mov
sahf
mov
cmps
jge
jbe
xor
pop
mov
pop
or
fst
fldcw
and
sub
add
add
mov
dec
sub
(bad)
mov
push
pop
inc
and
sahf
jno
enter
dec
mov
xchg
cdq
cmp
and
sbb
cmp
adc
add
loop
mov
or
mov
push
enter
fnsave
fcmove
add
pop
stos
push
(bad)
stc
lods
adc
or
repz
dec
test
xor
sbb
inc
or
mov
sbb
add
sbb
into
enter
daa
aas
cmps
test
push
inc
mov
jns
mov
popf
sub
mov
mov
outs
sbb
ss
lea
cs
(bad)
stos
push
inc
and
jns
fild
fcomp
lods
mov
xchg
(bad)
push
or
jmp
lea
inc
cmps
sbb
(bad)
fsub
xchg
add
add
ins
imul
push
test
movs
jp
jle
cmps
jns
mov
and
adc
(bad)
push
in
out
dec
retf
shr
add
xor
std
(bad)
dec
in
push
leave
popa
push
sub
aaa
call
ja
mov
xchg
into
repz
repz
test
jae
fld
test
icebp
ret
inc
fwait
clc
and
xor
jne
dec
gs
dec
cmp
and
and
out
popf
mov
clc
clc
and
push
pop
jp
jl
cmp
inc
or
outs
into
or
jle
mov
adc
sar
mov
inc
xor
pop
pop
test
sbb
pop
shl
rcr
cmps
xchg
push
cld
stos
cmp
imul
loopne
jg
inc
nop
inc
cmp
icebp
push
leave
ins
push
shl
int
xor
mov
mov
icebp
aaa
jns
pop
popf
sbb
retf
xchg
xor
loopne
xor
pop
popa
jl
or
cld
add
mov
dec
pop
scas
retf
or
pop
push
adc
data16
jmp
bound
dec
jne
adc
sbb
sbb
mov
stos
cli
lea
inc
push
in
or
ins
dec
xor
lea
jg
rol
add
and
sub
jmp
push
ret
add
xor
mov
imul
das
dec
rcr
jns
and
dec
fist
bound
test
push
shr
sbb
fistp
nop
aaa
mov
cmp
scas
jns
(bad)
adc
inc
dec
jnp
repnz
movs
test
push
dec
xchg
mov
jl
enter
and
inc
mov
jge
daa
(bad)
push
out
lods
cmps
cmp
push
cmp
movs
nop
into
movs
in
cmp
cdq
pushf
add
aam
or
cmp
push
lea
mov
mov
mov
in
cmp
cmc
mov
mov
test
mov
xchg
out
pop
xor
ins
xor
retf
stc
jl
inc
push
xor
mov
adc
hlt
sar
dec
and
fwait
push
movs
fsub
std
lods
dec
add
call
(bad)
mov
loopne
ja
cmps
push
bswap
jae
sbb
push
in
sub
(bad)
push
xlat
add
in
repnz
movs
in
push
lahf
jmp
stc
mov
or
call
mov
mov
jge
fwait
dec
mov
popa
(bad)
mov
cmc
out
ins
mov
(bad)
retf
sub
test
fsub
sub
mov
add
out
pop
xchg
aam
xchg
and
dec
ror
leave
push
mov
add
pop
sub
sub
data16
pop
iret
inc
dec
into
out
jns
sub
dec
enter
fbld
mov
hlt
and
pop
fild
pop
in
popa
jmp
ror
cdq
(bad)
adc
inc
cmp
(bad)
adc
fstp
cmc
sub
aaa
fst
jnp
call
push
sbb
inc
cs
xlat
lahf
xor
fisttp
test
pop
push
repnz
test
sub
add
xchg
seto
and
xor
mov
repnz
mov
js
mov
inc
add
xchg
and
stc
div
jns
sub
push
push
push
jo
mov
popa
mul
pop
ja
mov
clc
mov
ins
gs
shl
or
idiv
in
push
mov
jge
mov
mov
in
ss
or
jmp
into
and
fstp
push
loopne
xchg
xor
in
cmp
jmp
dec
mov
movs
aas
icebp
push
jecxz
mov
neg
hlt
leave
aas
xchg
les
scas
movs
pop
inc
pop
mov
sub
test
push
pop
and
and
inc
sub
cdq
ds
fnclex
icebp
stc
sub
dec
retf
and
int3
jo
sbb
add
sub
adc
aaa
adc
mov
mov
adc
jl
sbb
cmps
mov
jmp
xor
loopne
xchg
inc
sbb
retf
cmp
fs
pop
jns
mov
in
mov
push
inc
stc
mov
sub
push
outs
mov
xlat
pop
mov
aam
jle
inc
pushf
test
dec
dec
nop
icebp
adc
mov
cmps
test
lods
push
repnz
sbb
add
mov
mov
jp
xlat
inc
push
adc
jp
fild
adc
jecxz
adc
inc
sti
or
mov
daa
mov
cmp
mov
xlat
pop
popf
mov
lods
in
mov
jo
push
test
push
push
push
xor
push
imul
fldenv
pop
xchg
in
test
test
cmovg
mov
xchg
addr16
push
std
xor
ret
dec
or
je
dec
mov
push
mov
aam
loopne
out
xchg
and
arpl
push
mov
mov
mov
and
lock
cmp
jle
cmp
sub
mov
data16
mov
pop
hlt
gs
xlat
and
add
or
add
jno
mov
pushf
outs
add
sti
or
ffreep
call
dec
mov
jne
mov
or
out
add
scas
retf
dec
shl
stos
ret
sbb
and
mov
lods
jne
imul
and
(bad)
out
rol
push
retf
not
call
ss
mov
pop
add
push
fmulp
outs
sbb
movs
xchg
cmc
outs
or
or
pushf
jg
stc
jo
mov
mov
xor
out
inc
mov
repz
loop
in
addr16
jns
pop
mov
in
dec
and
or
xchg
clc
mov
pop
or
bound
add
sbb
mov
(bad)
push
data16
jb
adc
cdq
ins
push
test
mov
mov
mov
mov
bound
rol
test
cmp
adc
sub
lods
out
and
daa
test
inc
(bad)
cmp
ret
jmp
or
hlt
pop
mov
mov
movs
mov
and
cmps
xor
gs
mov
into
add
ss
jae
pop
and
mov
jb
sub
icebp
fiadd
xchg
jge
pushw
mov
xchg
fidiv
fwait
inc
sbb
inc
ror
(bad)
cmp
data16
cmp
mov
xor
stos
retf
mov
dec
outs
jmp
pop
rcl
lock
lock
std
add
cmps
pop
inc
and
pop
inc
sub
mov
and
out
out
jecxz
cs
jbe
outs
add
mov
push
mov
mov
push
adc
les
popf
ins
fdiv
and
xchg
fnsave
xchg
pop
push
fmul
gs
es
adc
pop
outs
cld
loope
dec
push
aam
les
dec
es
push
xchg
inc
push
hlt
push
sub
pop
push
mov
dec
sub
mov
retf
inc
pop
cmp
hlt
mov
out
in
or
inc
sbb
rcl
xchg
mov
add
or
shl
mov
ret
push
pop
shr
data16
fadd
or
sti
in
into
(bad)
xor
lock
shl
call
inc
mov
inc
retf
test
jp
stos
int3
mov
sub
adc
outs
std
cmp
xchg
shl
mov
inc
loope
dec
cmp
mov
jecxz
int
or
or
mov
xor
je
push
mov
nop
dec
sub
sbb
dec
mov
(bad)
sti
inc
ror
lods
(bad)
loopne
pop
xchg
or
pop
out
mov
int
pop
xor
lea
shr
mov
dec
adc
push
stc
mov
sub
or
in
addr16
cdq
jnp
hlt
push
adc
sbb
cmp
mov
xchg
xor
sbb
sub
dec
je
inc
fucom
jecxz
retf
add
jne
pusha
stos
daa
int3
xchg
fs
cmp
mov
add
mov
ret
enter
cmps
mov
jl
fwait
sub
pop
mov
sbb
lds
bnd
loope
add
daa
add
sahf
push
cdq
pop
imul
add
es
xchg
push
ds
xchg
cwde
inc
test
das
je
xor
imul
jl
shl
cmp
lods
xchg
mov
dec
clc
cmp
pop
jne
repnz
inc
xchg
daa
mov
adc
push
inc
mov
xor
xor
sub
jmp
les
leave
pushf
out
pop
test
mov
xor
bound
inc
out
push
mov
cmp
scas
clc
jle
call
pushf
push
je
jb
mov
sbb
(bad)
push
fcomp
or
inc
push
aas
bnd
pop
mov
inc
mov
icebp
stc
aas
jbe
cmp
inc
dec
rcl
inc
je
mov
fisub
fisttp
xor
aas
js
mov
mov
xchg
xchg
pop
(bad)
xchg
mov
cmc
mov
mov
mov
mov
cmp
cmp
or
push
cmp
xor
mov
sbb
xor
inc
inc
cmp
add
and
xchg
push
in
movs
jno
pop
stos
lods
mov
inc
les
fs
xchg
add
and
mov
test
nop
push
fdivr
mov
mov
xchg
loop
mov
cmp
cvtdq2ps
stos
inc
jb
jg
aaa
push
cld
pushf
cmp
out
sub
mov
or
aad
ins
or
cmp
or
sbb
sbb
ret
and
aas
add
sub
mov
xchg
fistp
fcomp
mov
mov
shl
xchg
ss
xlat
cmp
mov
mov
icebp
cwde
out
mov
inc
stc
dec
mov
mov
adc
shr
mov
and
rcl
iret
aaa
mov
inc
push
fstp
xor
sub
stos
ret
fdivr
(bad)
idiv
cmp
(bad)
test
call
adc
out
lahf
popa
(bad)
mov
dec
sub
mul
push
sbb
ins
clc
in
or
cmp
pop
lods
arpl
pop
cdq
shl
mov
outs
push
mov
jns
xor
sbb
int3
sub
add
mov
push
inc
pop
push
adc
xor
(bad)
xor
loop
sub
mov
add
ret
add
fnstenv
mov
push
mov
lods
ds
sub
and
outs
xor
lods
iret
loopne
repnz
sub
sub
inc
fdiv
or
push
jno
icebp
jmp
test
inc
inc
pusha
xor
aas
scas
movs
loope
mov
std
push
mov
add
rcr
cli
arpl
mov
cmp
in
mov
jge
push
cmps
pushf
fidivr
hlt
outs
lods
jmp
xchg
jno
or
rol
xor
lock
xor
arpl
je
inc
leave
mov
stc
adc
sbb
dec
xchg
movs
aas
fsubr
mov
sti
nop
xor
mov
cmp
aas
push
call
or
sub
cmp
aas
nop
out
fs
mov
add
mov
xacquire
nop
xor
jp
rcl
sub
xor
out
inc
lahf
(bad)
xchg
add
aaa
push
cmp
shl
sbb
retf
daa
loop
ja
bound
sub
outs
sti
sbb
cmp
or
or
pusha
enter
call
dec
fwait
xchg
lahf
leave
ja
xchg
mov
dec
lahf
and
mov
xchg
cmp
mov
dec
xor
mov
inc
pop
push
addr16
stc
lods
inc
lahf
cld
push
and
inc
les
and
pop
xor
aam
int3
pop
aad
data16
je
pop
dec
call
jne
mov
mov
stos
push
ja
out
pop
xor
ss
lods
add
mov
pop
je
push
call
sbb
xchg
dec
outs
cwde
add
push
outs
retf
mov
xchg
movs
fisubr
outs
push
xchg
cwde
xchg
loope
inc
pop
stos
cmp
rcl
mov
scas
or
sti
jo
and
xchg
adc
ja
cmp
ja
add
repz
stos
popf
cdq
jp
dec
dec
lea
in
int
mov
addr16
es
pop
ds
mov
(bad)
mov
jne
dec
push
inc
(bad)
jo
bound
jb
repnz
pop
outs
and
sbb
jns
and
leave
repz
mov
retf
sbb
sub
pop
fistp
push
test
cmp
(bad)
out
adc
cmp
sub
jl
fisub
mov
xor
cdq
sub
les
push
jecxz
lock
into
xor
out
ficomp
call
or
fs
add
stos
sbb
xchg
out
cs
push
inc
cmp
dec
and
out
jecxz
push
(bad)
int3
push
jnp
jb
repnz
(bad)
in
push
jp
xchg
aam
and
sub
pop
mul
mov
gs
push
cs
fs
test
stos
jns
mov
jne
ror
mov
inc
jge
jo
sub
cmps
xor
fimul
dec
aas
dec
scas
call
xchg
and
shl
retf
lea
adc
arpl
addr16
icebp
jmp
mov
(bad)
aam
retf
pop
and
cld
mov
pop
shr
sbb
mov
lock
imul
dec
pop
or
mov
lds
jmp
outs
dec
jmp
imul
dec
daa
xchg
mov
mov
pop
jno
mov
mov
shr
cmp
sbb
xchg
(bad)
out
int3
mov
mov
out
enter
xor
fadd
fiadd
movs
aad
mov
pop
cmc
push
cmp
(bad)
cmp
cmp
daa
mov
mov
adc
cmp
or
loopne
mov
ficom
scas
sti
in
and
ins
push
rol
mov
jp
stc
and
dec
data16
mov
cmp
int3
cmps
sub
sbb
add
inc
xchg
(bad)
out
adc
scas
int3
sbb
out
push
lods
jne
ja
xor
or
jecxz
cld
dec
fwait
push
cmc
stc
std
ret
xor
push
jo
fild
jb
les
add
push
mov
(bad)
push
xchg
xor
fadd
sub
loopne
fs
lahf
push
data16
add
clc
pop
cmp
neg
cmp
iret
xchg
cmc
popf
or
test
adc
loop
dec
pushf
sbb
mov
popa
mov
dec
into
out
cmps
push
loopne
mov
rcl
adc
add
sbb
movs
xor
and
or
pop
xor
pop
pop
(bad)
fdivr
gs
ins
loopne
mov
sub
ja
add
pop
push
nop
xchg
jns
jno
push
jmp
mov
add
mov
push
aas
push
daa
cmp
in
xchg
jbe
and
popf
push
int3
repz
ret
je
fisub
add
lods
jno
dec
mov
add
dec
sbb
loope
xchg
call
lods
(bad)
aad
sub
test
ins
mov
nop
mov
jo
or
inc
jge
cmp
je
dec
adc
inc
add
xchg
pop
jecxz
mov
xchg
loopne
inc
cmps
lock
mov
outs
sub
call
pop
imul
pop
xchg
rol
pop
adc
and
and
int3
out
pop
push
test
dec
test
gs
aad
push
cmp
inc
call
fisubr
das
outs
inc
rcl
dec
cmp
cwde
and
mov
mov
pop
cmp
add
cdq
xor
add
push
fadd
inc
loop
mov
arpl
xchg
and
dec
xchg
mov
fs
push
scas
rcr
sub
adc
cmc
pop
scas
daa
xor
pop
adc
push
shl
iret
sbb
ret
ret
ja
sub
daa
cmp
pop
sub
jge
or
stos
push
cs
mov
pop
mov
icebp
and
adc
dec
mov
mov
leave
std
sub
xchg
popf
cmp
xor
pusha
mov
pop
jae
sar
ret
inc
push
stos
inc
ss
mov
xchg
cmp
jmp
call
pop
cmp
or
adc
mov
sub
popa
sbb
sub
push
jl
int3
pop
leave
pop
xor
ins
dec
mul
fld
cmps
cmc
sub
stos
mov
nop
push
movs
jnp
rcl
and
cmps
out
out
xor
push
push
xlat
sahf
out
das
rcl
jne
sub
dec
mov
(bad)
fidiv
bound
lock
xor
loope
push
add
clc
push
in
pop
cli
pop
outs
ret
outs
test
xor
pop
pusha
cmp
ins
xor
push
es
hlt
pop
sbb
mov
push
aaa
hlt
pop
adc
and
inc
xchg
mov
xchg
sbb
sahf
movs
jmp
in
ss
and
shr
jl
scas
jecxz
enter
loopne
sbb
push
xor
nop
xchg
xlat
or
mov
dec
mov
or
dec
mov
out
lock
inc
push
lock
shr
inc
out
pop
push
xor
or
sub
add
xchg
dec
sub
mov
mov
hlt
das
bound
dec
mov
push
sub
sub
fld
cmp
pop
jb
sti
push
pop
rol
in
shr
mov
pusha
cmp
pop
pop
jno
sub
xchg
lods
mov
cmp
cs
rol
ja
cmp
imul
xor
sub
pop
int3
into
stc
in
ja
enter
jo
pop
inc
outs
xchg
push
sti
js
mov
xchg
pop
out
not
or
pop
jbe
sub
push
test
jae
clc
out
push
fsub
push
dec
repz
mov
cdq
sub
movs
pop
std
iret
mov
jg
dec
mov
pop
jmp
jle
dec
cmp
call
and
call
sub
pop
test
enter
(bad)
cmp
push
xchg
xchg
gs
ret
jecxz
mov
sbb
div
outs
push
aad
and
dec
jnp
xchg
xor
mov
pop
(bad)
dec
stc
out
sub
call
xchg
aad
int
arpl
movs
adc
test
stos
xlat
sbb
test
xor
mov
jb
outs
sbb
in
jp
sbb
aad
xor
call
mov
mov
sahf
fst
mov
sahf
shl
hlt
and
dec
leave
jb
or
icebp
scas
sub
inc
xlat
adc
sub
cmps
setne
daa
in
inc
jno
aaa
mov
in
call
or
rcl
inc
dec
in
ror
inc
adc
and
dec
mov
pop
movs
dec
pop
add
xor
iret
sub
je
cmc
js
jne
les
push
or
sub
shr
rcr
sub
or
sub
cmp
push
push
repnz
(bad)
jbe
ror
ja
fild
adc
adc
pushf
sahf
jge
mov
pop
pushf
in
lea
hlt
xor
out
push
dec
aam
mov
mov
mov
(bad)
outs
stos
mov
xchg
mov
pop
inc
sub
mov
xchg
inc
xchg
xor
repz
fistp
rcl
xor
dec
cmp
retf
mov
dec
cmps
int
ret
mov
loopne
cmp
jecxz
cwde
retf
movs
ja
push
sub
cs
jmp
cmc
sbb
and
scas
imul
sbb
sub
mov
push
add
jp
fidiv
jge
push
call
in
jge
in
pop
cmps
int3
movs
dec
imul
rol
mov
inc
cmp
sbb
shl
iret
or
inc
ficomp
jae
into
in
fild
add
mov
dec
dec
test
sub
jmp
loopne
push
shl
jb
cmp
aad
add
pop
xor
movs
idiv
out
pop
mov
adc
(bad)
mov
nop
sub
stc
and
(bad)
inc
add
mov
sbb
jnp
pusha
fnstcw
call
(bad)
push
cmps
das
jmp
adc
stc
dec
sbb
cmp
push
sub
fisub
or
mov
test
push
ja
mov
ret
(bad)
jb
inc
xchg
mov
or
inc
sub
push
clc
cdq
xchg
mov
icebp
fsub
xor
repnz
xor
or
inc
aaa
jg
cmp
mov
cmp
ins
sub
leave
mov
jb
neg
clc
hlt
xchg
rcr
inc
stc
add
ins
fsubr
sbb
push
cs
adc
(bad)
neg
ror
inc
ss
call
pushf
mov
shl
inc
mov
out
daa
inc
push
dec
out
jo
sti
ins
dec
scas
dec
out
cmps
rol
adc
(bad)
(bad)
jge
nop
xlat
sbb
sti
sti
inc
push
xchg
das
mov
mov
xlat
(bad)
jb
retf
in
inc
movs
add
stc
fmul
pop
mov
cmp
dec
inc
adc
push
jp
push
imul
mov
add
(bad)
fxch
sub
and
lahf
mov
adc
clc
and
xor
and
inc
(bad)
call
imul
mov
movs
push
xchg
sub
sbb
je
xor
cmp
and
cmc
out
fistp
fs
dec
jg
jmp
add
jl
sbb
mov
arpl
(bad)
mov
inc
out
cmp
jle
in
push
in
xchg
fsubr
and
mov
add
jne
mov
out
(bad)
(bad)
xlat
adc
jno
hlt
push
stos
lods
pop
sub
lea
test
jg
ror
mov
ja
xor
sbb
jnp
pushf
add
(bad)
bnd
outs
std
mov
dec
addr16
or
cmp
dec
dec
call
iret
mov
int3
pop
das
cmps
sbb
and
add
dec
sbb
stc
test
(bad)
or
in
stos
mov
adc
xchg
mov
jl
mov
add
pop
xor
mov
dec
idiv
adc
fld
test
or
test
push
mov
push
mov
stc
dec
mov
push
jmp
jg
dec
jmp
mov
mov
push
cmc
xlat
in
dec
pop
repz
jle
adc
stc
daa
dec
lahf
cmp
add
scas
push
fcom
in
cmp
imul
into
test
add
fistp
jl
mov
lock
stos
mov
pop
xchg
sub
movs
xor
push
mov
loope
js
pop
(bad)
sub
adc
movs
mov
arpl
test
inc
and
loop
inc
pop
(bad)
fstp
aam
(bad)
fucomi
iretw
push
push
sbb
add
sub
push
mov
out
cmps
aas
mov
or
les
jae
sbb
add
mov
jecxz
jmp
dec
and
inc
sti
sbb
inc
pusha
push
jno
lahf
mov
sbb
cmps
inc
rcr
cmp
push
xchg
rcl
pushf
mov
in
jecxz
ins
loopne
inc
xor
(bad)
mov
xor
xchg
xchg
jmp
sahf
sbb
aas
(bad)
aas
dec
jg
pop
pop
or
repnz
add
sub
adc
or
mov
mov
retf
aam
mul
add
sbb
mov
js
leave
loopne
aam
jmp
push
leave
in
jmp
bnd
iret
stc
push
ror
and
fiadd
(bad)
cmp
int
movs
jg
push
dec
rcl
add
outs
push
inc
sti
into
in
and
xchg
sbb
adc
into
cmp
mov
rcr
jno
dec
sbb
sbb
dec
iret
daa
or
arpl
nop
sbb
xchg
jecxz
push
mov
mov
js
push
in
or
dec
or
xor
lahf
ins
(bad)
mov
add
adc
dec
xchg
call
mov
popa
add
jecxz
imul
push
xchg
dec
xor
dec
push
retf
or
mov
xlat
cmp
jno
das
xchg
xchg
adc
cmp
inc
or
enter
imul
pop
cmc
and
icebp
mov
inc
shr
stos
dec
jns
xor
mov
mov
(bad)
fld
dec
dec
hlt
cld
cdq
scas
aad
jge
cmps
xchg
pop
sbb
and
xlat
xor
jns
inc
jo
cdq
dec
add
sti
ja
adc
xor
mov
lds
jecxz
std
dec
popf
sbb
jge
xchg
cli
or
add
mov
jbe
sbb
sar
int3
ins
mov
sbb
mov
jmp
mov
shl
sub
cmps
push
push
popf
mov
shl
or
aad
sar
arpl
sbb
adc
pop
in
pop
ins
add
mov
xor
into
les
out
mov
js
jbe
sub
sub
test
pusha
mov
fnstsw
add
icebp
add
repz
test
pushf
movs
jno
mov
rcl
jne
xor
adc
cmc
repnz
or
shl
lds
pop
mov
dec
push
pop
adc
(bad)
sti
cdq
or
xor
loop
fscale
push
fidivr
ja
add
lahf
outs
cmp
push
(bad)
xchg
imul
inc
or
dec
cmp
sbb
push
jne
add
sub
mov
mov
imul
fnsave
jl
jge
inc
addr16
xchg
sub
inc
pop
mov
in
ror
stc
mov
ins
fistp
pop
hlt
add
or
and
sub
in
and
fwait
xchg
pop
jecxz
jne
(bad)
loop
ret
jo
add
aad
das
sub
push
daa
adc
mov
cdq
push
cmp
adc
loop
xchg
imul
out
setbe
jle
sbb
lsl
inc
add
add
xchg
stc
mov
inc
imul
cwde
dec
push
jne
(bad)
mov
icebp
jb
test
fadd
ins
ret
sbb
(bad)
(bad)
mov
shl
and
cmp
out
jl
push
pop
dec
call
aaa
gs
out
ins
popf
ins
aas
fisubr
pop
push
sahf
popf
and
add
dec
jne
out
jp
adc
pop
adc
je
jle
push
dec
(bad)
xchg
out
xor
iret
push
aas
add
xchg
pop
test
cmps
aaa
adc
scas
and
jle
fisttp
jne
fild
int
adc
xchg
icebp
mov
and
xor
push
scas
cmc
inc
mov
and
mov
aaa
or
pop
lods
int3
jg
ret
xchg
cmp
jae
dec
add
add
xor
jo
ret
jo
adc
mov
and
mov
and
xchg
jl
fstp
push
test
loopne
pushf
adc
daa
adc
sbb
and
cmp
shl
icebp
xchg
sub
ds
sbb
pop
pop
mov
pop
add
mov
cli
sub
mov
or
outs
loop
popf
in
shr
dec
repnz
xor
call
(bad)
test
push
shr
dec
mov
movs
xchg
inc
test
jno
shl
xchg
cmp
out
arpl
adc
fwait
ja
dec
adc
pop
mov
fbld
jmp
loope
in
push
mov
mov
enter
lods
cmp
add
pop
add
add
add
xor
jo
scas
or
std
push
mov
mov
sub
add
inc
inc
aaa
imul
sbb
cmc
cmp
mov
mov
test
jecxz
cli
scas
push
fbld
xchg
cmp
(bad)
imul
sbb
xchg
aad
nop
sbb
sbb
mov
or
js
pop
popf
jp
rcr
mov
rcl
xchg
out
call
mov
in
enter
jl
push
add
loope
out
dec
jg
test
pop
pusha
movs
ins
sbb
jmp
icebp
and
lods
pusha
jmp
pop
cmp
inc
pop
shl
mov
cdq
pop
das
retf
clc
or
push
cmp
pop
(bad)
mov
push
fadd
aad
fsub
fmul
sub
mov
or
cdq
add
fild
pop
push
dec
jbe
mov
jl
cmps
test
push
std
ss
repnz
xor
xor
pop
pop
push
xor
call
(bad)
pushf
mov
hlt
out
aaa
shl
fdiv
dec
push
out
cmp
xchg
ins
jp
into
sub
add
xchg
inc
shl
mov
jae
xchg
mov
leave
ficomp
xor
mov
scas
retf
mov
fsubr
maskmovq
test
push
inc
sbb
outs
mov
push
dec
jle
je
(bad)
retf
mov
enter
sbb
cmp
pop
cmps
fld
ja
into
bound
push
push
xchg
and
sbb
repnz
hlt
add
retf
pop
outs
outs
stos
jbe
imul
xor
(bad)
push
xchg
xchg
xor
mov
push
cmps
mov
sbb
inc
fsub
or
mov
or
imul
cmp
jp
imul
add
aas
sub
arpl
xor
cwde
or
xchg
cmps
mov
mov
cli
sub
rcl
push
hlt
pop
out
sahf
ret
jge
xchg
mov
xor
(bad)
fwait
dec
stc
pop
xlat
pop
add
jmp
(bad)
cld
xor
xchg
sub
(bad)
aad
sbb
jmp
lock
mov
out
test
inc
adc
xor
push
push
inc
fisttp
mov
je
sbb
add
inc
sub
sub
mov
out
dec
add
xchg
scas
push
mov
daa
popf
mov
fdiv
push
loope
popf
jmp
test
xchg
and
dec
cmovns
out
pushf
and
in
and
mov
and
rcr
repz
bound
push
out
lahf
mov
or
mov
imul
jl
mov
pop
add
push
cli
cmp
pop
or
repnz
push
mov
ins
cmps
mov
xlat
jp
leave
fisttp
jp
cs
inc
(bad)
mul
jge
dec
inc
mov
cdq
add
add
or
lods
dec
push
pop
into
push
inc
xor
xor
pop
shr
adc
mov
inc
sub
mov
mov
mov
test
sub
lds
lods
add
cmps
mov
add
or
nop
sub
mov
jge
mov
cmp
jb
stc
arpl
in
int
loop
fsub
inc
test
pop
dec
(bad)
push
jg
fstp
xor
pop
add
outs
mov
cs
cmp
pop
jg
mov
jb
inc
aad
(bad)
in
ret
pop
(bad)
and
push
cmp
dec
js
and
mov
mov
lods
and
push
push
sub
dec
std
ins
sbb
aas
sub
jecxz
dec
pop
xchg
loopne
addr16
in
sbb
cmps
or
sahf
call
inc
cmc
arpl
inc
cmp
jmp
cmp
pop
shr
rol
push
mov
xchg
mov
in
jae
adc
fbstp
mov
jo
not
repz
sbb
cmps
and
in
scas
cmp
adc
ins
and
repnz
dec
dec
stos
call
mov
cdq
enter
or
stc
push
and
mov
test
clc
aam
inc
leave
aam
push
ss
cmp
jb
sbb
and
jg
sbb
jg
dec
loope
stos
cmp
retf
out
iret
xchg
inc
rcr
mov
jmp
add
adc
je
pop
imul
mov
in
sub
mov
mov
ds
jbe
adc
out
scas
int
call
cmps
loopne
xchg
cmp
xchg
out
mov
jge
mov
(bad)
fsubr
add
inc
xchg
pushf
jg
and
sbb
(bad)
ins
mov
adc
inc
jmp
pop
sbb
cmp
or
mov
imul
push
fimul
div
(bad)
mov
dec
xchg
sub
cmp
mov
ficom
sub
or
pop
sub
pop
xor
dec
mov
(bad)
lahf
inc
mov
es
mov
test
in
inc
fnstenv
fdivr
pop
fidiv
int3
inc
addr16
inc
movs
push
mov
jne
daa
sti
pop
ja
sahf
pop
mov
test
xchg
fild
push
sub
xor
outs
xchg
xchg
mov
stos
out
sub
sti
pop
jmp
and
mov
mov
inc
mov
mov
pop
daa
dec
mov
outs
mov
xchg
mov
mov
mov
xchg
test
mov
or
dec
lods
call
maskmovq
div
mov
mov
ret
jmp
fxch
adc
sar
and
scas
add
jp
(bad)
loope
sbb
arpl
arpl
mov
int
mov
outs
aaa
dec
inc
adc
adc
nop
call
fstp
ins
ins
(bad)
std
xchg
dec
bound
cs
push
or
mov
xchg
push
push
pop
pusha
retf
or
mov
leave
in
rcr
sub
sbb
push
movs
sbb
pop
sub
pop
dec
lods
mov
out
mov
mov
and
pop
out
pop
cdq
dec
jo
rol
(bad)
cmp
xchg
imul
(bad)
sub
jns
dec
sahf
ret
mov
scas
pusha
movs
mov
mov
loope
pop
(bad)
js
in
mov
in
loope
push
and
mov
pop
mov
pop
push
imul
fmul
in
mov
retf
imul
xor
or
test
jne
ret
push
mov
add
sbb
mov
out
fs
sbb
stc
and
push
dec
adc
jno
pusha
scas
ror
ret
ss
clc
and
outs
cmp
ror
repz
rcl
ins
jae
or
cmp
(bad)
ins
cmp
cmp
popf
adc
ins
push
add
fwait
and
mov
xchg
push
scas
inc
je
int3
cmc
push
adc
rcl
jb
sbb
push
out
push
and
mov
ss
add
cmp
lds
fsubr
lock
test
mov
push
jl
ret
ror
jae
cmp
push
into
sub
mov
xchg
mov
jl
xchg
rcl
das
xor
push
xchg
xchg
stos
(bad)
cli
cmps
lods
stos
(bad)
sub
arpl
xor
xchg
das
mov
out
xchg
inc
(bad)
fs
lea
in
and
std
mov
and
sub
fcmovu
inc
jecxz
mov
mov
call
out
js
gs
push
mov
bound
push
das
xor
shr
ins
(bad)
mov
cmps
scas
adc
dec
xor
push
nop
mov
(bad)
test
repnz
rcl
dec
stc
xor
(bad)
lahf
jmp
inc
jge
(bad)
push
dec
fidiv
fwait
or
pop
fs
mov
cmp
cmp
cmp
dec
xor
jo
ret
and
xchg
or
lods
test
cdq
mov
or
jmp
inc
and
jl
dec
xor
pop
xor
mov
cmps
test
adc
xchg
sahf
cdq
mov
sti
ins
or
push
and
(bad)
jl
jns
outs
mov
adc
addr16
mov
adc
mov
jo
lea
mov
adc
popa
adc
stc
add
je
fldcw
and
in
dec
int
push
(bad)
sbb
int3
fcmovbe
hlt
shl
pop
push
push
int3
pop
sub
push
cld
pop
jnp
xchg
cdq
pop
fadd
int
out
test
retf
rcl
in
clc
aam
ret
jg
aad
std
mov
js
lea
fst
aaa
out
cmps
shl
retf
and
pop
inc
(bad)
cli
push
dec
push
movs
jmp
movs
xchg
lock
iret
or
adc
repnz
mov
rcr
mov
cmp
cmp
xor
jecxz
fs
cmp
daa
in
fld
push
sub
and
jno
aam
fisubr
das
arpl
fistp
adc
jmp
ins
inc
jae
test
inc
inc
std
and
pushf
cmp
xchg
or
fstp
mov
jp
arpl
dec
mov
(bad)
push
sbb
push
das
dec
adc
ds
(bad)
maskmovq
cmovno
jle
or
jmp
or
arpl
inc
je
push
xor
enter
popf
addr16
push
dec
fisub
add
imul
fistp
cmc
or
or
not
xchg
in
and
pop
stc
cmp
sub
pop
push
fwait
xchg
imul
stos
mov
xchg
jmp
sbb
and
xchg
shl
stos
sub
push
sub
das
add
cmps
sahf
(bad)
pop
pop
add
fs
fmul
hlt
stos
sbb
fistp
repnz
(bad)
(bad)
adc
das
xchg
mov
push
xchg
inc
jb
icebp
test
dec
ins
pop
jbe
inc
fistp
loop
add
outs
neg
das
jbe
mov
ret
addr16
cwde
mov
sub
repnz
cwde
jne
push
dec
ret
add
sub
and
ds
inc
add
popf
push
jmp
cmp
lods
leave
repnz
sahf
pop
mov
mov
push
mov
(bad)
loopne
es
jle
dec
pop
fs
gs
jmp
dec
(bad)
cwde
and
int3
ret
addr16
stos
or
sub
in
push
pop
retf
not
movq
sub
sbb
test
dec
in
in
addr16
add
popf
xor
dec
scas
icebp
dec
test
jg
mov
arpl
addr16
inc
dec
xchg
imul
bound
add
or
out
pop
dec
aad
inc
add
(bad)
jb
adc
adc
jnp
xchg
out
lock
call
pop
mov
ins
repnz
inc
xchg
mov
loop
arpl
aam
xor
push
clc
dec
and
xchg
pushf
pushf
or
sub
sti
or
sub
mov
jne
push
nop
movs
cmp
xchg
retf
inc
push
cwde
nop
std
adc
adc
repz
out
enter
fidiv
sub
ins
in
repnz
mov
not
jb
sbb
mov
cdq
loopne
fs
xchg
sub
call
and
stc
xchg
sub
inc
push
call
xchg
stc
mov
xor
lea
jg
lods
pop
adc
ja
mov
mov
jno
clc
loope
inc
call
cmp
(bad)
aaa
test
push
cdq
frstor
jnp
cld
xchg
cmp
sbb
(bad)
adc
imul
bound
clc
out
adc
(bad)
or
mov
dec
fsubr
ins
lock
inc
cmp
test
jmp
in
dec
rol
idiv
repnz
xlat
pusha
movs
cli
mov
mov
pop
push
push
out
(bad)
push
sbb
jb
and
mov
add
cmp
xchg
div
cmp
add
push
jg
clc
or
mov
out
test
lds
fs
push
sbb
aas
jl
nop
loope
clc
cmps
and
cmp
jne
add
hlt
imul
nop
xchg
xchg
pop
xchg
(bad)
out
test
dec
cmps
in
mov
mov
rcr
adc
xchg
shl
retf
push
dec
enter
jo
stos
bnd
lock
rcl
pop
test
or
cli
ror
data16
call
inc
xchg
ja
cmps
enter
or
mov
adc
jle
xchg
scas
popf
and
out
outs
scas
sbb
xchg
xor
or
(bad)
push
xchg
dec
or
push
imul
cmp
clc
xchg
cdq
pop
gs
dec
mov
pop
cmp
test
sbb
neg
mov
push
mov
arpl
pushf
xchg
pop
pop
dec
or
(bad)
pop
icebp
dec
test
xor
xchg
mov
mov
jp
push
pop
add
adc
mov
adc
dec
scas
adc
and
sbb
arpl
dec
mov
lahf
aaa
mov
mov
lock
add
dec
into
sub
int3
sub
xchg
aam
cwde
aaa
scas
fcom
dec
cmc
or
lods
add
test
sub
cmp
daa
and
mov
mov
push
sbb
call
pop
pop
cmp
jo
inc
push
in
push
jecxz
xchg
enter
mov
push
test
aam
xchg
test
dec
xor
push
bound
add
inc
push
mov
rol
addr16
es
jge
lahf
jle
mul
dec
test
addr16
add
jle
inc
dec
dec
pop
aaa
icebp
pop
cmp
(bad)
(bad)
fadd
nop
jl
imul
lea
push
xor
fmul
bound
leave
inc
xlat
leave
cmp
xor
push
dec
jne
imul
mov
cmp
xor
gs
add
cmp
cmp
xchg
scas
stc
inc
pop
jne
jp
cmp
push
mov
mov
pop
movs
inc
inc
lods
jnp
mov
out
call
adc
into
pop
xor
lock
test
pop
daa
daa
cmp
cwde
mov
lock
movs
push
les
mov
jno
lds
ss
mov
in
mov
call
scas
aad
les
imul
sub
jne
imul
or
adc
outs
cwde
and
lods
pop
jmp
xchg
into
mov
mov
das
sbb
mov
lahf
mov
jb
xchg
shl
sub
jp
test
call
jmp
inc
(bad)
xor
xor
add
int3
push
jno
or
pop
bound
xor
xchg
sbb
repnz
push
mov
mov
add
dec
in
(bad)
loope
ins
fsub
scas
push
in
ror
mov
cmp
adc
ret
mov
cmp
cmps
adc
cmp
in
jg
(bad)
or
xchg
pop
mov
xor
ror
xchg
daa
jno
jp
cmp
push
sbb
sar
in
popf
jmp
sub
or
mov
in
mov
call
mov
mov
scas
xlat
call
and
popf
mov
add
xchg
jmp
out
mov
out
push
addr16
sbb
cld
aaa
loopne
dec
out
lahf
ficomp
pop
sbb
in
push
arpl
icebp
lods
push
popa
push
inc
pushf
xor
mov
outs
dec
pop
scas
loop
ss
and
or
xchg
dec
das
mov
mov
mov
scas
add
adc
mov
sub
cmp
addr16
test
pop
lock
cmps
sbb
inc
stos
mov
aad
iret
push
pop
and
out
pusha
cmps
iret
jno
pop
lods
push
sahf
inc
add
in
nop
jne
push
inc
into
int
mov
sbb
fmul
je
sub
pop
jmp
retf
adc
nop
cdq
push
ins
imul
dec
nop
(bad)
std
xor
jmp
test
fwait
xor
mov
call
push
mov
rcpps
dec
and
(bad)
or
cwde
in
pusha
mov
mov
adc
push
jno
cmp
out
pop
sti
test
std
jnp
mov
cmp
addr16
mov
or
jno
inc
xor
or
and
cmp
cli
sub
add
inc
and
pop
sub
ins
rcl
cmp
mov
ret
call
or
iret
rcr
ficom
cmp
xor
cmp
aaa
sub
dec
(bad)
out
retf
(bad)
cmp
xchg
loope
pusha
fcom
push
idiv
cmps
scas
or
jmp
add
call
push
sahf
mov
outs
or
mov
xchg
xor
clc
inc
xchg
mov
sbb
cs
rol
call
into
ret
jle
fdiv
aaa
arpl
sub
push
cmp
sub
xor
adc
(bad)
addr16
push
mov
mov
enter
mov
fidiv
sbb
and
cmp
aam
pop
and
push
sub
mov
jne
jmp
mov
ret
adc
scas
sub
sbb
scas
fstp
mov
ds
push
adc
mov
inc
jg
push
sub
add
mov
xor
jno
jp
(bad)
mov
xchg
loope
jecxz
in
inc
pop
mov
push
fist
fimul
cmps
jmp
jnp
sub
mov
(bad)
daa
leave
nop
out
sub
xchg
sub
stc
xor
adc
mov
adc
scas
movs
sbb
fs
lods
add
xchg
mov
sbb
jl
mov
inc
dec
cmp
sbb
loop
mov
icebp
jl
inc
jno
hlt
cld
and
lahf
or
jp
(bad)
mov
mov
jge
cmp
dec
mov
mov
mov
je
xor
adc
mov
mov
xlat
jl
jnp
sub
sub
inc
mov
sub
in
jno
xchg
sbb
fdivr
out
fwait
or
in
push
xlat
sbb
cmc
dec
(bad)
loopne
in
xor
call
and
inc
and
sub
lds
jecxz
scas
rol
xlat
pop
xchg
xchg
ret
sbb
movs
push
adc
ret
dec
jecxz
jne
movs
aad
mov
bound
mov
dec
inc
ja
mov
int3
add
loop
mov
inc
push
pushf
aad
in
cs
dec
push
jmp
or
pusha
push
jmp
das
sub
sbb
pop
inc
mov
mov
sbb
stos
movs
(bad)
ret
imul
push
test
cmp
lea
sbb
sbb
lds
nop
mov
sub
into
push
ja
mov
cmp
ins
cmp
xchg
xchg
stc
out
in
adc
sub
stos
fs
adc
in
or
push
jbe
repnz
mov
mov
je
cmp
outs
push
mov
leave
push
aad
adc
pop
(bad)
adc
into
cmp
(bad)
jnp
xchg
cdq
lea
in
jg
lock
int3
inc
aad
pop
pop
(bad)
xor
icebp
jae
dec
xchg
dec
cwde
cmp
dec
jno
sub
ds
jmp
fsub
xchg
sub
cld
cli
fdiv
bound
bound
xlat
fadd
ins
outs
dec
xchg
or
mov
loope
fadd
adc
ja
jle
lds
mov
inc
mov
cmp
fld
sub
les
pushf
iret
loope
pushf
add
xchg
icebp
xchg
jbe
call
ja
cmp
mov
mov
enter
adc
pop
mov
mov
mov
ins
or
retf
sub
add
add
fmul
hlt
imul
and
dec
xor
mov
mov
pop
in
pop
xchg
fimul
mov
cmps
cmp
sub
push
pop
lock
jge
sahf
mul
jl
std
std
add
stos
xchg
addr16
push
or
sbb
idiv
sti
ret
bound
push
mov
(bad)
push
fidivr
mov
pop
and
jo
enter
pop
bound
imul
jbe
xor
aam
fmul
adc
sar
mov
adc
mov
test
mov
in
test
cwde
repz
sub
in
mov
mov
test
cwde
sub
xchg
push
mov
retf
or
sti
mov
in
cmp
cmp
mov
out
jecxz
aaa
or
mov
fadd
mov
lock
in
mov
lods
fist
std
adc
ss
ds
cmp
nop
mov
out
and
jbe
cmc
scas
in
xchg
add
push
inc
add
mov
xchg
pop
jp
mov
or
sbb
icebp
mov
pop
inc
mov
(bad)
fwait
jns
xchg
scas
cmp
pop
shl
leave
mov
push
adc
cli
mov
push
not
imul
mov
pop
leave
inc
dec
sub
test
fnclex
mov
enterw
loope
pop
xchg
mov
xchg
pop
xor
(bad)
xchg
sbb
adc
dec
stos
mov
cmp
add
dec
fs
jb
sbb
movs
push
inc
jge
lods
dec
movs
mov
sbb
ins
sub
mov
std
(bad)
and
lea
stos
ret
xchg
mov
mov
(bad)
push
xlat
mov
push
xor
or
(bad)
xor
test
push
test
mov
inc
add
add
fnstsw
add
out
les
xor
int3
sbb
(bad)
mov
sub
jb
inc
mov
fiadd
jecxz
(bad)
bound
jns
rol
lods
add
push
mov
(bad)
mov
add
popf
dec
pop
fs
cmp
int3
pop
xor
jmp
(bad)
test
test
push
inc
lahf
mov
adc
es
ds
enter
push
repz
push
lock
mov
xor
test
ja
sbb
dec
lods
push
pop
mov
int3
cdq
(bad)
popf
enter
mov
or
and
rcl
loopne
bound
int
rcr
mov
or
dec
aaa
dec
es
lea
and
push
in
fisub
leave
add
push
ret
dec
mov
gs
mov
add
arpl
cmp
movs
lea
loop
xchg
out
ins
(bad)
or
sbb
sbb
mov
mov
xchg
fnstcw
cmps
jecxz
adc
push
hlt
rol
cmp
jno
fdivr
or
jbe
fsub
test
popa
cmp
cmp
sbb
imul
add
addr16
cmp
les
aam
lods
sub
lea
nop
mov
rcr
mov
mov
retf
cmp
xor
psraw
mov
jge
jecxz
push
sub
test
push
and
in
movs
outs
cwde
pop
push
outs
mov
pop
nop
mov
call
xchg
pop
sbb
mov
stos
ret
cmps
(bad)
xchg
je
cmp
xchg
push
dec
cmps
xor
dec
mov
sbb
push
shl
xlat
sbb
int
popf
stc
in
cmp
fnstcw
add
mov
fsub
not
stos
inc
xor
scas
ins
fs
pop
aas
dec
push
lahf
(bad)
sub
movs
mov
(bad)
out
aam
xchg
or
add
push
push
ror
dec
icebp
adc
je
pop
popf
pop
in
lods
push
inc
and
retf
or
pop
ss
aas
and
into
push
into
mov
xor
movs
add
push
stc
push
loope
mov
(bad)
push
fdiv
imul
test
dec
adc
movs
xor
or
mov
pop
jl
aad
push
mov
or
rcr
fcomp
mov
adc
push
push
sti
pop
pop
sub
(bad)
push
dec
xchg
ss
call
xchg
lods
add
(bad)
cmp
mov
mov
hlt
dec
sbb
pop
or
test
retf
adc
pop
leave
xlat
out
dec
idiv
pop
xchg
lods
mov
adc
or
arpl
inc
and
sub
ret
mov
and
pop
test
imul
pop
add
sbb
or
sbb
adc
fxtract
add
sete
pop
leave
mov
xchg
fstp
cmp
jae
fimul
sub
cmp
add
imul
test
jmp
xor
or
cmc
add
adc
cmps
jno
movs
ins
sub
movs
xor
cmp
sub
inc
adc
lds
jmp
xor
movs
mov
xchg
add
cmp
push
push
fs
inc
xchg
int3
call
push
mov
cmp
jb
pushf
fbstp
add
mov
sub
push
lods
pmullw
and
lods
call
wbinvd
pop
sbb
stc
add
mov
mov
jge
test
mov
(bad)
pop
pop
push
lods
outs
inc
shr
mov
dec
adc
sub
(bad)
and
lods
int
and
ror
clc
mov
fdivr
shl
or
fbld
ja
xor
ret
ja
mov
(bad)
iret
or
or
add
push
(bad)
cdq
mov
jmp
mov
test
pusha
mov
jnp
mov
cs
leave
push
cdq
loope
aam
sub
addr16
in
mov
mov
retf
repnz
rol
adc
setbe
cmp
or
sub
cmp
ja
(bad)
xchg
xchg
and
jle
mov
int3
cwde
daa
test
cmp
pop
sbb
push
(bad)
mov
pop
cwde
pop
mov
loopne
cwde
retf
in
test
std
sub
sbb
fisttp
(bad)
bnd
mov
sub
add
adc
shr
mov
in
push
or
xchg
cwde
push
ins
(bad)
(bad)
jbe
mov
pop
shr
scas
rcr
xchg
adc
xchg
push
and
inc
lods
xor
sbb
mov
or
mov
xchg
push
sub
dec
aam
jnp
rcl
mov
cdq
ins
xchg
dec
push
xor
jno
cmp
pop
jno
sbb
lock
in
dec
das
pop
test
dec
dec
aas
mov
xchg
mov
sub
cmp
push
sbb
repz
xchg
push
push
mov
dec
sbb
(bad)
popf
cwde
mov
xchg
add
mov
cld
mov
push
test
mov
retfw
or
xchg
scas
paddusw
pop
jg
push
xor
ror
mov
mov
aas
aaa
nop
push
inc
test
xor
mov
cmp
and
out
lods
or
jl
mov
stos
or
outs
test
movs
cmc
mov
outs
sbb
xchg
int3
pop
movs
outs
test
jg
ins
inc
pop
mulps
push
es
jmp
stos
inc
dec
nop
mov
xchg
pop
mov
sub
cmps
pop
or
aam
shl
jp
fst
mov
cmp
dec
das
daa
jmp
push
pop
and
outs
or
add
sub
or
mov
test
inc
or
hlt
jmp
mov
push
mov
or
cmps
and
popf
xchg
pop
call
shr
jno
test
sub
dec
test
and
and
mov
add
push
in
jo
lods
std
lahf
and
xchg
ds
not
add
repz
ret
jg
xchg
inc
(bad)
inc
out
pop
sbb
adc
in
mov
in
xor
dec
pop
aas
imul
xchg
xchg
xchg
(bad)
jne
dec
push
dec
or
repz
fdivr
je
push
push
shl
bound
mov
mov
or
test
or
push
in
mov
and
rcr
ds
xor
test
idiv
daa
and
stos
repnz
popa
or
jle
dec
ret
aas
xor
(bad)
mov
mov
dec
repnz
inc
lahf
push
mov
sar
cmp
or
push
pop
inc
xlat
pop
sbb
mov
add
cmps
push
lock
mov
div
mov
cld
mov
mov
ss
inc
ss
xchg
sub
xchg
sbb
and
xor
out
aam
inc
xchg
jle
outs
sub
push
add
push
(bad)
pushf
push
push
aaa
inc
aam
aas
push
(bad)
jbe
inc
adc
test
pop
jae
jbe
or
xor
imul
ficom
mov
add
pop
mov
and
bound
cmps
xchg
fnsave
dec
jge
repnz
mov
push
jg
(bad)
push
retf
lods
xor
mov
ret
sub
jle
popf
cwde
sub
nop
outs
sahf
push
cmovo
or
mov
aas
retf
mov
fwait
rcr
repz
mov
dec
jecxz
int3
je
push
jle
fwait
div
xor
fstp
sub
out
xchg
xchg
adc
aad
mov
mov
sbb
ins
int
xchg
fdiv
push
mov
in
dec
aas
pusha
idiv
rcr
arpl
nop
(bad)
jne
mov
pop
adc
test
(bad)
inc
call
shl
mov
fdiv
and
xor
jmp
sbb
xor
movs
pop
das
mov
add
pop
rcl
in
sbb
das
fst
cld
mov
clc
and
mov
cmp
jno
lock
and
lock
push
test
xor
pop
push
ja
ins
mov
aas
and
jg
hlt
(bad)
or
jo
jp
shr
pop
sub
xchg
add
push
std
inc
or
cmp
dec
push
push
jae
mov
(bad)
movs
dec
and
jne
pop
out
push
mov
adc
add
shl
pop
js
lods
push
adc
sar
sub
cmp
pop
popa
mov
lds
xchg
jp
mov
xchg
or
(bad)
std
shr
retf
push
dec
mov
add
test
push
adc
mov
call
mov
jle
rcl
nop
test
ins
shr
xchg
shl
xchg
mov
(bad)
cmc
call
mov
inc
dec
es
xchg
jmp
mov
mov
stc
retf
pop
xor
(bad)
push
cmp
fist
inc
mov
sub
or
dec
dec
add
arpl
push
xor
or
out
test
push
xor
add
add
xchg
mov
push
neg
dec
mov
mov
sub
popa
mov
mov
inc
sub
jecxz
mov
dec
(bad)
xchg
or
int3
adc
imul
pushf
add
inc
sub
aam
xchg
stos
scas
and
out
movs
add
jp
stc
mov
bound
add
jmp
mov
mov
int
mov
jmp
inc
pop
push
xchg
jo
popf
fistp
fbld
push
jecxz
sub
jno
xchg
lods
into
push
push
imul
test
jmp
mov
stos
aaa
sar
mov
or
sub
(bad)
jae
mov
and
jmp
xchg
mov
push
ss
jecxz
push
cmp
aad
nop
push
mov
mov
pop
or
std
jne
std
dec
mov
jae
mov
les
into
adc
xchg
adc
adc
push
leave
ss
jge
fwait
or
ds
test
mov
and
out
daa
jg
xchg
scas
pushf
stos
push
arpl
xor
jno
mov
pusha
pop
in
jecxz
cmc
fistp
mov
or
mov
dec
xchg
add
movs
and
mov
outs
pop
(bad)
int
sti
call
mov
jp
gs
pandn
mov
ja
cmp
jae
jmp
dec
mov
rcr
aas
ins
push
fcmovnbe
mov
cmp
repnz
mov
adc
or
arpl
fstp
aam
test
sbb
push
xor
xchg
dec
pop
int
sub
fnstsw
or
cs
adc
imul
ja
jmp
push
push
mov
inc
adc
leave
and
stos
pop
icebp
fwait
cs
lahf
add
outs
ficom
and
loopne
mov
xchg
and
rcr
mov
or
rcl
popa
cmp
aam
xchg
add
(bad)
fisubr
mov
aaa
pop
(bad)
popa
sub
push
and
fidiv
out
test
xchg
add
push
icebp
sub
inc
sbb
sbb
test
dec
and
sub
fsub
into
fld
push
nop
dec
out
xchg
iret
outs
imul
dec
xchg
leave
cdq
jmp
ficomp
mov
xchg
sub
lahf
das
xchg
mul
out
in
std
clc
jmp
ja
push
push
mov
add
cmp
iret
dec
and
inc
lds
pushf
pop
pop
in
mov
aas
cmp
mov
adc
sbb
push
ss
inc
xor
jo
inc
jae
mov
ja
jmp
imul
jnp
pushf
push
mov
push
ja
add
loopne
pop
cmp
cmp
loope
mov
dec
fs
fst
test
(bad)
xor
outs
xchg
sub
ret
aas
dec
xor
dec
add
cmp
jnp
out
push
js
add
std
mov
push
int
add
hlt
push
leave
inc
cmp
pop
ja
add
stc
stc
pop
fst
sar
push
mov
clc
xchg
sti
mov
jae
fiadd
jecxz
xor
dec
loopne
push
mov
and
or
xchg
call
loope
mov
adc
pop
push
les
in
in
clc
push
repz
push
adc
lods
movs
push
enter
aad
and
in
jmp
mov
(bad)
mov
addr16
fstp
outs
iret
jge
sbb
cmp
or
nop
push
inc
clc
add
sub
mov
test
iret
stos
cmp
enter
out
(bad)
pop
mov
xchg
in
cdq
popf
mov
sbb
sahf
and
mov
cmp
inc
xchg
push
jbe
rep
sub
dec
inc
call
loope
stos
cld
retf
xchg
(bad)
stc
aad
dec
adc
adc
mov
icebp
loope
add
leave
sbb
xor
sub
in
ja
mov
rcr
es
out
dec
and
or
jnp
sbb
sbb
es
dec
mov
scas
int3
push
(bad)
mov
adc
inc
push
inc
loopne
out
hlt
push
sub
push
das
(bad)
ror
lock
(bad)
cs
jl
es
inc
mov
sbb
repz
int
shr
imul
add
mov
sti
shl
mov
cmp
jl
and
xor
mov
div
pop
push
xchg
mov
popf
or
mov
xchg
out
xor
movs
fsubr
fisub
jnp
and
sbb
and
pop
dec
mov
mov
shl
iret
inc
xor
dec
movs
xchg
jp
pop
xor
sti
or
shr
mov
or
push
retf
sub
out
and
xchg
test
repz
jae
pop
into
idiv
fiadd
lds
cmp
into
and
mov
in
xchg
jns
sub
repz
ins
inc
es
sub
enter
nop
xchg
clc
pop
adc
jb
xor
mov
repnz
cdq
ror
pop
adc
mov
test
adc
jno
sbb
sbb
jmp
dec
mov
push
inc
push
pop
stos
pop
cld
sahf
(bad)
neg
test
fs
mov
loope
jbe
aam
aas
ror
in
or
xor
xchg
sbb
cmp
les
rol
sar
or
jmp
(bad)
rcr
ins
movs
popf
jno
jno
call
sub
sub
or
(bad)
inc
repz
inc
mul
add
ret
stos
mov
sbb
stos
mov
out
mov
repz
or
mov
xchg
mov
adc
retf
push
jp
or
and
pcmpgtw
or
mov
lods
js
sub
xchg
xchg
ja
or
cmp
call
(bad)
cld
test
sub
jmp
loope
out
nop
(bad)
mov
jb
jle
mov
movs
shr
test
fs
rol
dec
add
mov
popf
push
test
jo
xchg
iret
push
xor
fst
imul
ret
je
sete
mov
jo
and
push
mov
inc
xchg
mov
ror
scas
jbe
je
dec
inc
cmp
lds
dec
repz
fsubr
ret
mov
cmps
out
add
sub
call
rcl
mov
int
out
add
retf
adc
inc
pop
xor
into
and
and
inc
add
ret
pop
dec
or
mov
leave
jae
or
out
adc
mov
mov
in
(bad)
in
sar
pop
enter
fcmove
add
fimul
mov
loope
hlt
neg
or
jns
enter
popa
mov
push
inc
xor
sbb
inc
scas
adc
or
jmp
popf
jle
ins
outs
pop
mov
hlt
mov
sbb
adc
rcr
(bad)
jns
test
cmp
loopne
jl
(bad)
mov
mov
repnz
into
and
mov
xchg
push
jmp
(bad)
fcomp
cli
imul
xor
(bad)
rcr
adc
add
inc
ja
mov
ficom
cmp
jmp
push
into
dec
inc
pop
(bad)
data16
in
pop
xchg
test
in
inc
in
sar
loope
loopne
in
and
xchg
shr
pop
lods
mov
adc
pop
je
scas
jl
jmp
mov
js
mov
ficomp
(bad)
adc
cmp
gs
jl
in
xor
mov
xor
pop
test
sub
jns
inc
fcom
add
stos
or
pushf
inc
mov
sub
dec
mov
mov
ins
push
sub
push
pop
out
stos
mov
adc
dec
push
sahf
jbe
push
fisub
sbb
mov
dec
jne
mov
pop
cs
in
push
call
pop
xor
outs
movs
cmps
loop
int3
mov
mov
enter
clc
aam
and
sub
mov
adc
(bad)
adc
rcl
mov
push
out
mov
adc
ins
cmp
loope
mov
hlt
mov
mov
inc
nop
mov
stos
mov
push
inc
loop
or
daa
dec
sbb
aaa
jns
movs
lds
repz
xchg
sub
rcr
adc
adc
mov
mov
aas
fiadd
pop
mov
xchg
in
jg
cdq
inc
xlat
cli
jecxz
hlt
sbb
or
push
lods
call
(bad)
stc
xor
push
pop
icebp
ret
jbe
mov
push
mov
and
push
sti
repz
xchg
ss
inc
das
xor
leave
xlat
add
cmp
add
xchg
push
jne
arpl
inc
jp
mov
mov
jmp
cli
loopne
jo
fwait
jge
jns
jbe
addps
add
mov
out
loopne
sbb
daa
mov
push
add
adc
(bad)
xchg
sub
sub
sub
in
cmp
sbb
jp
mov
jp
push
out
fs
add
and
push
icebp
add
mov
les
xchg
and
mov
push
popa
les
jp
mov
and
pop
scas
lea
fs
jnp
ins
outs
adc
ficomp
stos
jmp
pop
push
cmc
mov
push
out
sbb
mov
leave
cli
les
inc
push
ss
jbe
aas
imul
push
push
adc
xchg
aas
ret
ret
ret
sbb
(bad)
stos
cmps
xchg
inc
dec
mov
add
cmp
mov
mov
mov
call
in
or
jno
push
cdq
xor
add
adc
mov
or
mov
out
cdq
fs
retfw
jmp
call
and
sub
clc
sbb
mov
daa
push
sbb
leave
cdq
call
sbb
ficomp
dec
sbb
mov
and
daa
pop
out
or
enter
xor
push
ss
cmp
jne
int3
(bad)
out
hlt
inc
jmp
jmp
sbb
clc
mov
inc
(bad)
fisttp
test
or
adc
in
sbb
adc
pop
pop
mov
jecxz
fmul
mov
mov
dec
fild
inc
push
fnstcw
sub
xor
shl
mov
pop
push
imul
test
or
push
pop
pop
mov
popa
cmp
cmp
cmp
jns
lds
jle
les
rcr
ds
push
(bad)
lds
mov
sub
pop
and
shl
shl
jns
push
iret
sahf
mov
mov
sti
dec
add
pop
push
mov
inc
test
mov
aaa
retf
mov
xchg
pop
jo
sbb
daa
ss
xchg
lods
jae
addr16
repnz
jl
mov
xchg
pop
jmp
and
hlt
out
sti
mov
fsubr
fs
xor
xchg
add
or
sub
lock
ret
mov
hlt
and
push
jmp
fucomip
jle
pop
add
inc
clc
mov
sbb
xchg
xchg
jns
sahf
adc
push
and
push
loopne
add
push
shr
and
dec
jns
movs
sbb
aas
movs
push
adc
imul
iret
les
adc
xor
mov
dec
sub
cmp
(bad)
fidivr
ss
pop
in
add
shl
pop
jb
pop
or
mov
xchg
sub
mov
inc
fs
jecxz
xor
into
mov
push
into
sbb
adc
jecxz
push
es
loopne
xor
or
sbb
mov
xchg
test
test
call
add
fbstp
ror
cmps
pop
fnstsw
loope
mov
mov
adc
add
sbb
inc
jmp
jbe
clc
cli
icebp
pop
sbb
das
hlt
xor
shl
dec
gs
js
scas
popa
call
xlat
outs
ss
jl
jbe
nop
les
jecxz
gs
ins
inc
xor
jb
add
fst
lahf
out
fsubr
icebp
test
data16
fldenv
sahf
outs
icebp
aam
arpl
mov
or
jge
jo
add
dec
add
(bad)
repz
test
fadd
xor
fdivrp
push
stos
push
pop
and
sub
and
xlat
inc
sub
mov
push
popf
stos
fnstsw
xor
mov
(bad)
test
xor
ss
retf
mov
call
movs
add
dec
xchg
clc
popa
cld
jl
jecxz
scas
cli
xchg
pop
(bad)
mov
lds
push
cwde
mov
jmp
push
mov
pop
test
gs
sbb
fsubr
aad
and
(bad)
pushf
in
ret
sub
jmp
push
or
fist
pop
daa
in
inc
div
ins
loop
cmp
push
aad
idiv
inc
jnp
fnstsw
mov
jo
pop
jp
je
repz
repnz
leave
ins
scas
div
fxch
cmp
pop
lods
xlat
xchg
scas
sub
lock
stos
jmp
sbb
cli
clc
push
inc
dec
icebp
test
scas
in
or
mov
jmp
adc
add
mov
mov
icebp
cli
mov
sbb
out
push
pop
leave
mov
das
retf
sahf
jge
sub
fs
adc
ja
retf
fdivr
fsub
and
fbld
in
fsubp
or
xchg
icebp
ja
popa
gs
(bad)
mov
add
jmp
sti
repz
mov
(bad)
cmp
sbb
jg
jmp
mov
rol
xor
sbb
cli
mov
fdiv
(bad)
jne
cmp
inc
leave
pop
adc
cwde
pusha
add
mov
and
mov
mov
retf
mov
into
sub
test
mov
loopne
add
pop
mov
fdivr
ret
data16
xchg
or
inc
lahf
call
out
cwde
call
dec
xor
adc
stos
push
inc
mov
pop
outs
pop
push
cld
push
inc
mov
mov
add
adc
ds
enter
xchg
mov
inc
jecxz
setp
or
fadd
mov
ds
sbb
push
push
mov
pushf
nop
ins
xor
int
add
mov
xchg
or
jmp
inc
add
inc
jnp
adc
xor
sub
ins
inc
pop
sahf
nop
rep
sbb
xchg
packsswb
mov
std
cs
xor
cmc
sahf
jbe
push
shl
frstor
mov
sbb
mov
stc
mov
lods
xchg
(bad)
jns
jns
rol
inc
scas
movs
mov
cmp
jbe
lock
imul
jae
dec
pop
mov
adc
(bad)
ss
inc
mov
dec
jg
lds
xchg
ss
jmp
xor
lahf
push
jg
retf
or
lds
push
jo
push
pushf
sub
cmps
mov
cmp
xchg
sub
mov
xchg
fild
popa
mul
mov
hlt
loope
xor
cwde
jnp
jl
mov
pop
mov
fidivr
inc
out
movs
ret
sbb
call
ins
les
and
pop
pushf
call
fiadd
clc
jmp
push
sub
cmp
lods
ret
repnz
xor
pop
push
cmp
xchg
popa
adc
sub
mov
add
js
ins
lods
push
jo
ficomp
loopne
sbb
icebp
and
pop
pop
xchg
mov
call
imul
aad
out
xor
mul
jno
adc
pop
ror
inc
mov
in
and
sahf
mov
bnd
cmps
cdq
xor
rcl
popa
inc
cdq
retf
lock
inc
mov
dec
mov
into
jbe
not
sar
mov
shl
jno
fcomp
push
xchg
aad
pop
inc
dec
or
and
cld
dec
out
(bad)
inc
cs
cmp
pop
aaa
sbb
jle
lods
push
std
fisubr
int3
xor
xchg
xchg
outs
jmp
inc
scas
sbb
ds
inc
mov
scas
mov
adc
sti
xchg
push
pop
bound
sbb
mov
sti
sub
fadd
test
push
mov
push
mov
xchg
cmp
jo
lahf
or
mov
gs
xchg
push
aad
cmp
call
mov
sub
xchg
mov
add
inc
or
mov
rcr
push
inc
mov
out
jecxz
fisttp
sbb
adc
xchg
aaa
stos
fldcw
jb
xlat
pop
shr
aas
lods
or
fwait
(bad)
jecxz
push
add
div
in
mov
leavew
aad
lods
inc
mov
out
cmp
lahf
inc
jnp
nop
add
in
mov
in
neg
mov
inc
mov
mov
loop
in
repnz
clc
jl
xor
pop
sub
enter
sbb
ret
add
fldln2
es
movs
sub
lods
pop
ror
add
ja
push
sub
retf
cld
jae
(bad)
jno
in
inc
pop
int3
cmps
jbe
in
cmp
xor
adc
push
cmp
idiv
jl
push
inc
push
mov
rol
hlt
sti
mov
imul
xor
enter
pusha
adc
es
adc
stos
and
cmp
xchg
loope
aas
sbb
dec
mov
loopne
ins
mov
retfw
sub
pop
adc
cmp
inc
jbe
repz
stos
test
xor
leave
sub
rol
fimul
rol
inc
shr
lahf
es
jne
cdq
sbb
xchg
jae
sub
cmps
add
inc
jmp
xchg
fisubr
ud0
adc
jecxz
int
icebp
movs
or
mov
hlt
pop
div
sub
lods
jne
and
adc
pop
push
or
pop
inc
and
aas
jle
fsub
dec
jle
cmc
arpl
cli
xchg
js
mov
cmps
test
inc
retf
inc
faddp
or
mov
(bad)
sahf
fs
repnz
inc
aam
sub
rcl
jae
std
mov
cmp
int3
pop
jb
pop
test
dec
test
lds
mov
cmps
jae
and
mov
cs
ret
xlat
clc
pop
xchg
adc
popf
popa
int3
jmp
fcomp
add
fdivr
adc
loop
cwde
push
sahf
arpl
jb
mov
jp
adc
in
mov
pop
jp
and
shl
adc
arpl
xor
lahf
movs
imul
scas
and
inc
(bad)
jne
push
push
mov
fwait
pop
ret
dec
push
retf
scas
and
cdq
jbe
popa
fadd
mov
dec
cmp
aaa
xor
sbb
fild
mov
adc
mov
sbb
jae
loopne
sti
mov
inc
cmps
add
mov
cs
rol
ret
jmp
ret
movs
inc
into
xor
and
inc
xor
pop
xchg
scas
mov
fld
test
push
jmp
inc
je
int3
loopne
jecxz
cmp
xlat
out
fldl2e
xchg
add
push
mov
inc
pop
jle
fist
fadd
sub
sub
mov
dec
repnz
jmp
push
mov
sub
pop
out
fwait
adc
and
and
jmp
fdivr
jle
xchg
and
ficomp
mov
daa
or
ds
xor
mov
mov
iret
fwait
and
in
dec
scas
retf
arpl
push
cs
popf
or
repnz
and
mov
cmc
push
xor
push
jbe
sbb
idiv
rol
or
sti
arpl
retf
xlat
test
and
push
sub
xchg
call
call
push
sbb
iret
jmp
cmps
(bad)
cmps
je
stos
xchg
ds
add
cmp
(bad)
mov
add
ret
dec
pushf
push
sub
ret
jnp
clc
adc
outs
test
mov
push
push
fcmove
mov
or
bound
aad
(bad)
lahf
jbe
(bad)
jns
cmps
sub
cmp
aad
sbb
and
lock
lea
cmp
lods
rol
sub
lahf
sub
add
and
stos
imul
and
mov
outs
jno
pop
jno
pop
sbb
in
jle
int
inc
jmp
mov
loop
sbb
and
or
pop
xor
push
inc
out
mov
sbb
mov
lock
fbld
sahf
in
inc
dec
add
mov
ss
clc
ror
jp
jg
mov
fidivr
sbb
push
std
sbb
jnp
cmps
gs
xchg
les
imul
scas
mov
push
push
adc
sub
adc
aaa
cmps
dec
xchg
and
adc
(bad)
fisubr
outs
mov
jecxz
lods
push
jbe
fild
adc
not
sub
iret
repz
push
push
js
push
mov
sub
out
jmp
jb
jbe
push
sti
jb
aaa
pop
addr16
mov
push
xor
aaa
out
fstp
call
sub
fmul
(bad)
ret
lods
mov
xchg
sub
test
adc
xlat
ret
add
fdivr
cmp
repnz
mov
push
std
loopne
xchg
imul
mov
loope
sub
jno
iret
mov
cmps
fsubr
inc
in
mov
daa
or
mov
int3
dec
sub
push
popa
dec
(bad)
js
or
mov
cmp
fnstenv
adc
es
in
pop
scas
dec
aaa
ja
mov
das
stos
je
jecxz
lods
icebp
psrad
fst
adc
mov
xor
add
lods
or
cmp
mov
cmp
xor
lods
fidivr
sti
mov
inc
inc
in
mov
imul
scas
sub
int3
and
iret
bound
or
mov
jnp
test
(bad)
mov
imul
and
xchg
mov
or
call
or
xchg
pop
rcr
xchg
enter
xchg
sub
dec
pushf
cmp
mov
xlat
mov
imul
(bad)
dec
gs
mov
fld
rol
movs
xchg
jmp
sub
mov
sbb
pusha
scas
mov
aaa
xchg
dec
lods
add
dec
dec
stos
aaa
add
mov
aad
pusha
push
add
jno
sub
inc
sbb
jbe
in
out
and
xor
(bad)
aam
sbb
lods
gs
add
xchg
jmp
xchg
das
sbb
sub
cmp
sbb
mov
pop
int
pop
mov
scas
mov
adc
jns
inc
shl
push
call
movs
shl
mov
bound
idiv
int3
(bad)
out
inc
cli
js
loop
xchg
out
in
jnp
cmp
rol
movs
rol
mov
aas
mov
sti
cmc
jle
repnz
adc
push
jmp
mov
pop
test
gs
sbb
inc
out
addr16
lods
popf
inc
xor
inc
fst
add
mov
dec
and
and
das
loop
in
pop
das
mov
or
adc
inc
mov
xchg
jne
pop
jb
jmp
mov
sahf
cmp
lods
mov
popa
jmp
stc
jne
sub
mov
and
mov
dec
fmul
into
or
xor
data16
dec
(bad)
mov
stos
cmps
inc
jp
test
aam
loope
jns
or
sbb
jge
cmp
jns
lock
test
dec
out
mov
cmp
imul
imul
pop
sub
pop
jo
icebp
imul
mov
push
scas
cwde
shl
inc
mov
mov
jo
mov
push
jmp
dec
enter
out
pop
push
adc
push
or
jo
xchg
inc
lock
ror
retf
mov
lea
add
ss
movs
loop
mul
push
popf
in
jo
xlat
ins
xchg
inc
inc
retf
fsubr
inc
wbinvd
xchg
add
daa
mov
add
jge
cmp
xchg
fstp
fisttp
das
mov
push
imul
push
inc
mov
cs
lock
cmp
mov
pop
sar
add
test
jmp
pop
leave
inc
mov
push
adc
ret
mov
out
jns
xchg
jb
jle
jbe
xor
or
inc
inc
jbe
pop
sbb
adc
lods
adc
sbb
add
sub
xor
add
jbe
data16
or
add
cs
pusha
sub
cmp
mov
add
lods
cmc
pop
into
fbstp
in
xchg
lahf
jmp
jmp
cmp
mov
test
and
jno
fdiv
into
cld
inc
cmp
xchg
pop
jne
in
pop
movs
mov
dec
cmp
ins
bound
imul
fwait
sar
mov
or
mov
dec
mov
jae
jmp
loope
cmps
sub
in
or
scas
push
cwde
outs
cmp
ret
in
lea
push
xchg
lea
jge
or
stos
out
in
aad
jnp
icebp
or
push
dec
jg
js
ins
xor
inc
add
push
(bad)
jge
sub
dec
int
nop
mov
xor
addr16
xchg
leave
push
int3
stos
jg
xor
(bad)
adc
neg
inc
sbb
cli
jns
ret
and
push
xchg
push
push
push
dec
aam
xor
xor
xor
hlt
out
or
in
in
mov
fild
shl
aad
pop
or
push
test
imul
and
mov
xchg
mov
push
pop
cmp
and
loopne
pop
and
jp
(bad)
out
xor
sbb
adc
sub
add
sti
jae
pop
test
mov
stos
lods
js
pop
leave
adc
aad
sbb
xchg
mov
xor
std
mov
cmp
mov
and
push
pop
das
in
xchg
jmp
dec
pop
push
hlt
sub
pop
xchg
add
sbb
mov
outs
fs
jnp
idiv
pop
pushf
add
dec
fs
xchg
sbb
push
mov
pop
sbb
or
cs
adc
gs
test
fidivr
outs
pop
in
lea
shr
ffreep
out
fs
adc
pop
jnp
mov
inc
push
xchg
rol
pop
push
cmp
xchg
ss
mov
mov
jp
sub
data16
and
das
mov
dec
sti
fidiv
iret
jl
sbb
pop
dec
ins
jb
inc
std
jmp
shl
cvttps2pi
dec
shl
push
(bad)
sub
addr16
repz
aaa
push
jno
sar
and
mov
aam
add
inc
push
das
mov
mov
daa
retf
ficomp
xlat
aam
adc
jl
cmc
adc
adc
call
cmps
fdivr
dec
sbb
es
or
or
call
hlt
outs
inc
and
inc
mov
cmps
jl
add
je
pushw
into
inc
mov
jnp
mov
xchg
fnstcw
adc
stos
cmp
mov
add
pop
loop
das
movs
sar
sub
(bad)
test
push
mov
es
jp
dec
fdiv
mov
lods
loope
xchg
mov
pop
dec
adc
push
imul
lods
add
inc
pop
mov
push
rcr
pop
and
jp
je
cmp
jle
pop
xchg
aad
mov
nop
jno
jecxz
cmp
sbb
lahf
retf
push
sbb
jp
adc
mov
fmulp
out
jmp
ret
xor
repnz
mov
pop
ins
sub
test
(bad)
xchg
ss
jle
jo
cmp
in
cmp
dec
in
imul
loopne
stos
push
lds
and
xor
out
mov
push
cmps
sbb
or
jg
and
jge
loop
sub
shl
pop
jmp
lods
add
fwait
pop
pop
xchg
jmp
mov
pusha
pop
dec
daa
test
mov
xor
sub
repnz
ss
jl
jmp
out
sti
cmps
adc
inc
inc
and
cld
repz
pop
xchg
inc
fnstcw
cmp
and
jl
ins
rcl
push
jp
jle
lahf
jb
scas
jne
(bad)
cmc
add
ja
push
cmp
xor
mov
xchg
cmp
jno
adc
into
fdivr
mov
adc
div
sub
call
fstp
test
xchg
sbb
jle
mov
movs
lock
fist
test
mov
push
and
imul
inc
sti
inc
xchg
sti
shl
push
push
cli
into
in
lock
stos
cmp
push
movs
in
repnz
(bad)
fiadd
daa
fwait
xor
xor
in
and
and
enter
and
jb
mov
pop
inc
out
cwde
enter
rol
cmp
xchg
xchg
lea
push
dec
dec
and
call
std
call
pusha
scas
mov
stos
push
lds
cmps
jge
imul
sti
popa
xlat
inc
nop
sbb
cmps
cmp
sub
lea
cwde
(bad)
pop
xchg
push
jp
adc
and
or
xchg
jns
int
cld
aam
sbb
xor
inc
scas
int3
pop
mov
or
addr16
mov
aas
in
arpl
call
or
inc
repz
fld
or
push
aam
imul
sub
add
add
ins
popa
sbb
push
mov
popf
and
les
xor
test
stc
pop
dec
mov
lahf
or
sub
cmp
(bad)
push
(bad)
cmp
enter
gs
inc
retf
sub
sbb
cmp
mov
pushf
dec
pop
push
jo
cmp
mov
mov
movs
mov
das
mov
pop
xchg
xor
jg
mov
xchg
add
and
push
ins
stc
or
(bad)
and
push
push
ror
outs
mov
scas
hlt
xchg
dec
das
ret
and
dec
out
add
pop
or
lods
nop
sub
scas
mov
les
jns
cmps
mov
push
jl
inc
add
ins
mov
scas
call
sar
pop
cmc
or
ds
adc
xor
pop
cmp
mov
jl
imul
mov
hlt
sahf
jle
es
jno
push
jae
aad
inc
cwde
call
(bad)
or
push
sub
out
fstp
cmps
in
test
inc
push
add
jg
int
xor
jecxz
xchg
and
ficom
jns
mov
push
add
push
outs
cwde
popa
sti
fisub
jbe
mov
(bad)
int3
push
aam
adc
cdq
inc
nop
and
aas
lea
(bad)
pushw
xor
or
cwde
fcmovbe
xor
aad
push
mov
mov
xchg
jns
inc
jmp
sub
pop
inc
adc
dec
fnsave
mov
not
push
pop
mov
or
or
cmps
arpl
pop
and
int
add
dec
pusha
popf
outs
out
jae
pop
pop
mov
jle
das
outs
cmps
loop
adc
xor
test
pop
xor
mov
loope
(bad)
lock
mov
scas
in
(bad)
(bad)
adc
or
jmp
mov
imul
sbb
call
cwde
mov
mov
clc
nop
(bad)
stc
cs
lods
mov
iret
fbstp
mov
mov
scas
xchg
ins
inc
fcom
xchg
cmp
out
scas
leave
jecxz
lods
sbb
sbb
sbb
cmp
jbe
push
xor
push
mov
mov
in
std
jecxz
cmp
fwait
cmp
(bad)
push
adc
sahf
out
inc
cmc
xchg
in
fs
and
aad
je
gs
jmp
xor
pop
dec
cmp
xchg
idiv
dec
jno
call
(bad)
loope
cmps
fsubr
call
pusha
sub
test
mov
add
cwde
mov
pop
scas
mov
mov
ret
(bad)
xor
mov
je
mov
sbb
cmps
add
aas
in
(bad)
into
dec
repnz
ja
mov
into
btr
push
jbe
(bad)
pop
sahf
cmp
dec
add
ins
and
test
or
and
stos
push
sub
sbb
test
sbb
inc
sbb
mov
scas
or
aad
movs
cwde
add
push
dec
push
mov
add
ror
pop
call
pop
lods
jp
inc
sub
loopne
xor
adc
mov
in
xlat
push
sub
lahf
in
push
imul
fst
mov
mov
dec
mov
popf
add
jb
retf
adc
mov
lock
out
mov
aad
mov
inc
fidiv
mov
mov
iret
push
mov
sub
add
ds
call
sbb
in
cld
pop
gs
scas
je
lock
dec
adc
or
mov
mov
dec
adc
or
mov
mov
mov
hlt
dec
cmp
mov
mov
int
mov
js
push
cwde
in
or
fnsavew
popf
ret
dec
jge
cmps
mov
fisub
mov
daa
mov
cmp
mov
sbb
lods
shr
jecxz
js
nop
sti
(bad)
adc
or
adc
add
inc
test
lock
loopne
sub
js
xchg
xor
shl
stos
xchg
pop
inc
push
sbb
loop
leave
xchg
mov
and
and
xchg
leave
retf
(bad)
xor
pop
pmullw
mov
jbe
mov
xor
hlt
push
sti
cs
es
mov
mov
jbe
jae
jo
fistp
add
pop
fcomp
bound
lds
sbb
(bad)
arpl
imul
xchg
ins
ds
cmp
repz
lahf
js
into
push
cmc
sub
mov
dec
(bad)
push
cmp
or
gs
repnz
mov
jb
inc
mov
jns
xchg
push
push
adc
adc
add
inc
dec
in
shl
retf
in
push
mov
mov
mov
xchg
dec
ja
inc
adc
add
sbb
jo
aad
mov
fcom
out
push
bound
pushf
mov
jmp
cmp
nop
xor
in
lock
in
jmp
xor
add
loopne
cmps
adc
xor
adc
gs
push
mov
mov
jg
sbb
mov
shl
mov
mov
int3
inc
(bad)
jmp
mov
add
xor
dec
shr
sub
stos
mov
aas
(bad)
repnz
les
push
iret
add
mov
scas
cs
outs
mov
imul
mov
dec
cmp
es
sbb
xchg
imul
in
or
sbb
cmc
loop
pop
out
adc
add
sbb
(bad)
and
cmc
retf
es
mov
cmp
mov
es
cmp
xlat
push
data16
pushf
inc
mov
xor
mov
add
adc
dec
mul
jmp
(bad)
cld
psubd
in
gs
ins
sub
fld
fcom
push
lea
pop
sbb
push
mov
test
jno
sub
cmp
or
mov
adc
cmp
mov
jle
fwait
imul
imul
push
mov
jae
adc
test
ins
int
out
daa
xchg
pop
pop
sbb
fs
jo
mov
aaa
repz
inc
push
add
ret
pop
enter
or
leave
test
dec
inc
sub
mov
test
adc
leave
mov
pushf
dec
mov
out
jnp
xor
mov
dec
xchg
lock
scas
daa
in
pop
add
mov
adc
sub
gs
mov
stos
inc
sti
jmp
leave
jmp
mov
cmps
int
jnp
cmc
ja
adc
std
loope
arpl
mov
mov
mov
xchg
inc
push
jmp
clc
mov
and
shl
sbb
ins
jb
ins
mov
icebp
xor
stos
fimul
ret
add
das
fadd
xor
push
cmc
adc
imul
xchg
in
jb
adc
pusha
cdq
ins
add
lea
cmc
adc
cld
das
or
mov
pop
hlt
(bad)
out
pop
pop
jns
mov
xor
pusha
and
in
ret
idiv
inc
aas
lea
ror
inc
call
jle
push
cli
sub
cmp
mov
pop
repnz
sub
mov
daa
rcl
repz
js
ins
sbb
xor
or
inc
jmp
cmp
dec
nop
or
ret
add
inc
cmps
outs
or
mov
ins
or
inc
or
or
mov
or
sahf
mov
inc
shl
jle
sub
es
xchg
pop
pop
imul
(bad)
cmp
and
in
sti
xor
lods
sbb
jle
xlat
ds
scas
dec
push
pop
imul
movs
and
cs
inc
pop
imul
ror
mov
mov
inc
clc
sar
pop
test
inc
gs
xchg
ret
ficom
inc
dec
adc
and
fwait
test
xor
xor
(bad)
push
pusha
loop
scas
adc
xor
pop
retfw
pop
jbe
cld
pop
push
in
xor
movs
cmp
push
out
mov
stos
add
and
cmp
int3
shl
aas
lock
in
neg
out
dec
cmps
popa
xor
mov
inc
inc
mov
cmp
(bad)
push
inc
dec
or
ret
je
mov
inc
ins
push
sub
add
add
mov
int
and
mov
(bad)
fcomi
in
pop
xor
aad
jnp
cmp
or
inc
hlt
dec
or
(bad)
lahf
test
mov
push
loope
xchg
sub
dec
mov
mov
neg
popf
jl
pop
std
mov
push
pop
nop
mov
jne
aaa
jae
(bad)
std
mov
add
aaa
add
mov
jno
clc
mov
mov
adc
cmps
sbb
retf
fbstp
hlt
jl
xchg
ss
out
stc
sbb
out
fidiv
pop
sbb
out
or
mov
outs
mov
push
pop
mov
add
push
aaa
sub
out
push
int3
push
mov
sahf
jmp
popa
imul
cmps
jbe
cdq
out
push
test
adc
and
push
xchg
sbb
data16
mov
ins
mov
ror
out
mov
pop
xlat
iret
sub
push
fisttp
mov
(bad)
out
aam
in
dec
imul
push
adc
jmp
mov
ins
mov
movs
mov
xchg
call
adc
repnz
push
mov
cld
sbb
bound
jbe
jmp
jg
pop
ret
mov
jne
(bad)
repnz
push
mov
popa
lahf
inc
jmp
cmp
fnstcw
fdiv
shr
adc
cmps
inc
out
mov
mov
test
(bad)
test
dec
int3
lock
sub
(bad)
sub
or
fcomp
add
sub
mov
in
jo
jl
movs
dec
adc
loope
sbb
fisub
es
mov
fmul
add
mov
popa
in
dec
(bad)
inc
xor
mov
cmps
mov
and
pop
adc
bnd
push
xor
hlt
scas
inc
and
cwde
arpl
pushf
mov
lods
xchg
or
mov
imul
ins
fwait
jne
sub
xchg
add
and
inc
fist
xchg
sbb
jnp
inc
sub
(bad)
jns
mov
and
pop
push
sub
int
aaa
shl
lods
add
inc
fld
hlt
jnp
inc
dec
mov
scas
out
push
fcomip
rol
mov
mov
and
test
shr
out
add
lods
int
test
loopne
(bad)
js
jl
mov
xchg
hlt
push
cli
cmc
cld
cld
les
pop
jo
mov
aas
movs
push
jne
movs
sbb
mov
test
test
push
arpl
mov
enter
xchg
push
loopne
les
dec
call
pop
shl
enter
in
xor
lock
outs
outs
xlat
ins
jne
rcr
test
loop
mov
cmp
(bad)
dec
es
arpl
scas
icebp
mov
adc
(bad)
lahf
(bad)
xchg
push
fsubr
mov
inc
adc
jp
fld
adc
add
ja
cmp
sub
add
hlt
movs
in
cdq
popf
test
nop
push
dec
jp
jne
push
and
mov
dec
cmp
pop
rol
dec
jp
adc
sub
push
dec
in
shl
ins
sbb
jns
retf
test
fiadd
xchg
cmc
xchg
xchg
cmps
aas
in
adc
icebp
xchg
loop
sbb
xchg
sub
jmp
dec
rcl
lea
cld
sub
xlat
retf
popf
popa
xlat
xor
(bad)
fild
data16
adc
mov
stos
cld
lahf
mov
adc
mov
pushf
xchg
jno
outs
mov
enter
sub
mov
in
xchg
and
jmp
mul
ret
out
aam
adc
popf
sub
in
nop
xor
lea
int
cmp
sbb
cmp
xchg
xor
cmps
scas
fdiv
je
xchg
push
sahf
leave
mov
imul
jae
xchg
dec
jecxz
sub
aam
rcr
jl
loope
icebp
std
mov
add
rol
jns
mov
sbb
imul
xor
jo
cli
out
inc
inc
nop
xchg
je
mov
xchg
cmp
ds
lds
and
in
jno
jg
mov
xchg
fdivr
aas
pop
sub
dec
and
stos
fwait
cmc
add
jns
add
hlt
inc
aaa
sbb
mov
jno
xchg
(bad)
sbb
add
and
and
nop
xchg
js
push
leave
test
rcl
add
arpl
inc
dec
push
xchg
pop
jns
cdq
aaa
fld
fcomp
inc
ins
cmp
inc
shl
call
mov
pop
hlt
pop
mov
sub
push
adc
mov
sti
and
xor
xchg
or
ss
cld
fs
sub
dec
mov
push
mov
daa
lds
jae
jge
adc
push
dec
imul
adc
loope
sub
sub
mov
sub
pop
(bad)
pop
cmps
pop
jb
push
jg
push
dec
jne
add
mov
lds
(bad)
cs
movs
adc
ficomp
or
mov
loop
int
icebp
lods
xchg
push
ins
pop
push
je
pop
cmp
pop
cmp
pop
push
xor
pop
mov
pop
cli
sub
or
or
sub
pop
repz
data16
or
pop
mov
jl
stos
scas
leave
sahf
mov
cdq
pop
mov
das
std
test
inc
sbb
jle
mov
mov
pop
loop
and
sub
addr16
in
dec
sti
jne
mov
mov
rcr
nop
jmp
iret
cmp
nop
jb
jmp
or
sbb
mov
loope
pusha
mov
repz
inc
pusha
(bad)
imul
mov
cmp
repnz
xchg
(bad)
int
mov
bnd
stos
popa
mov
sub
popf
push
jmp
jecxz
or
stos
sbb
dec
sbb
push
inc
mov
xor
in
mov
mov
fmul
mov
loopne
imul
dec
push
hlt
push
inc
inc
adc
pop
(bad)
scas
mov
lock
(bad)
int3
sbb
push
xchg
cmp
or
out
cmps
(bad)
mov
jge
jl
sti
aaa
scas
add
cmp
cli
or
fwait
cmp
or
imul
fwait
stos
out
xchg
dec
and
je
cmps
mov
mov
inc
jae
adc
out
scas
xor
xchg
cwde
lahf
mov
fs
sub
mov
popf
jge
jno
xor
sbb
cmp
inc
sbb
dec
xor
mov
in
pop
cmp
pop
xchg
sub
shl
popa
xor
fcmovnu
pop
jle
sub
retf
mov
xlat
inc
nop
es
mov
sbb
xchg
add
loop
lods
add
cmp
xchg
push
mov
mov
ja
aam
jmp
std
xchg
xor
out
iret
cmp
daa
xor
adc
in
xchg
outs
shl
sar
pop
(bad)
adc
sub
dec
adc
adc
inc
dec
pop
int3
sub
sbb
jle
icebp
out
xor
pop
push
xor
inc
(bad)
jbe
loopne
jle
rcl
mov
mov
push
inc
jno
jb
(bad)
daa
mov
imul
ret
and
cld
push
lock
jo
arpl
xchg
push
push
imul
mov
call
add
mov
adc
xchg
or
add
pop
push
rcr
test
fdivr
mov
bound
dec
mov
fcomp
add
add
pop
add
add
dec
inc
inc
sub
pop
(bad)
jmp
push
xchg
inc
add
mov
icebp
not
lds
cwde
pop
addr16
inc
leave
inc
aad
shl
(bad)
push
mov
call
jge
fidivr
call
xchg
jmp
mov
das
mov
lds
dec
add
jne
imul
sub
shr
mul
cmp
inc
in
mov
cmps
repnz
xor
cmp
add
inc
clc
aas
ins
push
cmp
and
inc
fild
int3
repnz
outs
adc
and
mov
imul
push
test
shl
dec
pop
cmps
mov
mov
mov
test
jg
push
int3
test
in
mov
loopne
xchg
add
add
jmp
scas
retf
or
pushf
pop
lea
jg
lods
adc
test
and
je
fs
dec
mov
sete
das
cmp
mov
lds
pop
stos
or
out
imul
mov
bound
pop
inc
aas
je
jmp
gs
fdivr
movs
rol
and
mov
icebp
test
mov
retf
je
lahf
jne
mov
push
inc
data16
stos
dec
jno
pushf
add
cmps
rol
sub
sahf
or
repz
mov
repnz
or
shl
or
repz
inc
xchg
loopne
fwait
cmp
add
adc
out
popf
ss
aam
test
and
jo
dec
sahf
jns
into
shl
stos
jmp
dec
leave
mov
sbb
popa
cmp
xchg
repnz
sbb
sbb
xchg
xor
test
pop
outs
es
test
aam
shl
add
inc
adc
in
int
sbb
mov
jl
mov
leave
sub
jg
push
xchg
cmp
pop
fistp
cmp
call
mov
or
or
loop
pop
ds
jo
push
movs
push
pop
aas
jns
cmp
lahf
mov
hlt
shr
aam
mov
or
sub
jbe
(bad)
out
pop
mov
addr16
mov
mov
(bad)
(bad)
add
mov
mov
jno
cmp
add
push
mov
mov
add
ins
dec
retf
and
fisub
out
cmp
xchg
fisttp
xchg
fstp
push
adc
pop
sahf
out
mov
enter
iret
jno
or
cmp
gs
pop
int3
test
dec
(bad)
in
xchg
sbb
ja
cmp
addr16
loope
cli
addr16
pop
mov
cmps
mov
cmp
push
mov
fisttp
mov
fwait
xor
retf
dec
clc
pop
and
and
(bad)
mov
aaa
jae
(bad)
push
push
lahf
outs
cmp
cs
xchg
xchg
ss
ins
stos
dec
ror
mov
or
push
popa
mov
repz
into
sti
arpl
loop
xor
loop
and
mov
bound
sar
add
pop
mov
ror
jecxz
mov
ds
cdq
mov
ja
fptan
dec
repnz
call
outs
std
aaa
aam
add
lock
lods
mov
cmc
outs
xor
(bad)
aad
xlat
jl
add
sub
jmp
mov
adc
and
test
aas
push
mov
das
das
and
add
cmc
pop
scas
jp
xchg
outs
push
cdq
pop
mov
sub
inc
imul
cmp
mov
xlat
sbb
sub
add
push
and
repz
imul
mov
inc
xor
fs
in
xor
out
adc
mov
movntps
pop
fsub
xor
jl
and
das
sbb
or
adc
pop
sub
pop
outs
js
lea
cmp
mov
sub
add
movs
xchg
ret
cli
stc
bound
lods
jae
pop
or
sub
pop
push
or
pop
in
in
xchg
leave
mov
jo
outs
and
mov
ss
mov
push
cmps
xchg
ins
mov
imul
push
add
pop
retf
scas
push
cmp
mov
push
adc
and
pop
in
jae
(bad)
ja
mov
push
scas
push
sbb
jae
pop
dec
ret
imul
test
addr16
sbb
jg
das
pushf
gs
ficom
cmps
mov
sti
mov
into
xchg
sbb
jbe
je
je
sti
inc
push
fcmovnb
mov
xor
xchg
cmc
in
nop
xchg
rol
dec
cmp
pop
das
jg
push
popf
pop
adc
adc
cmc
sbb
pop
(bad)
mov
ds
idiv
loope
jno
dec
movs
add
inc
lods
std
jmp
ret
push
arpl
es
je
pop
mov
xchg
mov
imul
push
sub
or
jo
and
scas
jge
mov
mov
cdq
jmp
push
in
repnz
out
and
pop
cmp
fcomi
mov
popf
sti
les
ja
stos
(bad)
add
push
add
or
repz
popa
(bad)
xchg
cwde
lods
sub
pop
inc
mov
bound
fistp
dec
cmps
inc
sar
neg
imul
iret
dec
or
mov
or
lea
into
inc
stc
sbb
movs
adc
test
cmp
test
outs
pop
inc
adc
jbe
add
add
or
fwait
add
pop
jmp
cmp
outs
pusha
xchg
out
fmul
jbe
mov
ret
push
push
inc
jne
lods
mov
or
mov
sahf
leave
inc
daa
jecxz
sub
cmp
sbb
out
imul
lahf
int
daa
jecxz
retf
and
add
out
imul
dec
cwde
push
in
mov
mov
test
pop
jns
hlt
push
adc
fdiv
adc
outs
pop
jae
fadd
jo
hlt
test
mov
sub
(bad)
sti
mul
jmp
imul
and
push
jmp
test
out
std
sbb
mov
mov
or
push
sbb
test
xor
adc
pop
adc
cmps
es
scas
jbe
jge
loop
inc
jns
lahf
add
out
or
xchg
push
push
adc
sub
(bad)
es
mov
lea
mov
push
adc
shl
push
ret
and
xchg
or
ror
xchg
and
arpl
and
inc
idiv
mov
pop
xchg
xchg
and
out
lds
inc
pop
mov
data16
lods
jno
sub
sub
pop
pusha
loop
xor
or
ja
cmp
arpl
sbb
mov
test
cdq
fild
push
mov
aam
or
dec
aas
(bad)
(bad)
dec
outs
mov
dec
push
fwait
addr16
js
movs
lods
cwde
adc
mov
movs
pop
loopne
enter
in
dec
dec
daa
jg
xlat
push
cmps
xchg
sbb
movs
mov
mov
and
aam
cmps
pop
mov
mov
xor
push
jecxz
jmp
jle
and
sti
sbb
hlt
movs
int
dec
rcl
and
push
push
jg
fisub
cmp
cwde
fcomp
add
popa
jmp
je
mov
sbb
fst
mov
lock
out
inc
cdq
popf
sahf
(bad)
rcl
(bad)
lods
jnp
jg
pop
fsubp
fwait
loope
mov
test
jno
inc
pusha
packsswb
imul
cmps
aas
fistp
add
mov
xchg
and
xor
xchg
loopne
inc
xchg
daa
retf
sbb
push
out
aad
push
jnp
cwde
popf
(bad)
lds
and
gs
inc
add
pop
xchg
aad
or
sub
mov
(bad)
xor
jmp
imul
or
cli
lahf
shr
lea
icebp
(bad)
mov
cld
xchg
repnz
aam
add
inc
adc
lods
adc
(bad)
fisttp
fild
ret
fbstp
out
fistp
mov
mov
call
data16
int
dec
sub
pop
aaa
cmps
or
clc
mov
imul
lock
outs
lock
sti
sti
cmc
add
bound
leave
fistp
inc
jge
pop
ror
mov
add
inc
push
call
repnz
mov
rcl
lods
test
jl
lock
jno
mov
mov
sub
mov
xor
sahf
scas
ror
test
mov
sbb
cvtdq2ps
ret
arpl
push
leave
int3
dec
scas
nop
shl
jmp
cld
adc
es
fstp
lods
inc
imul
mov
mov
fdiv
xchg
cwde
mov
xchg
not
retf
imul
sets
inc
gs
cli
out
pop
sbb
and
push
xchg
inc
ins
retf
mov
imul
rcr
add
cmc
push
stos
xlat
popf
inc
jo
dec
hlt
mov
ja
jne
cdq
jb
stos
inc
jbe
inc
cli
lods
into
jecxz
adc
fwait
pop
retf
ret
out
into
cmps
fcom
scas
(bad)
cmp
sbb
pop
pusha
pop
xor
push
mov
mov
popfw
fistp
loope
add
out
mov
scas
xchg
loop
mov
ins
retw
imul
dec
imul
cmp
ret
inc
aaa
add
or
aas
test
div
pop
jl
ds
xchg
pushf
push
sub
or
dec
push
cs
outs
or
pushf
cmp
ror
or
std
add
xchg
movs
arpl
mov
adc
pusha
sbb
ret
pushf
mov
cmp
push
mov
cs
adc
arpl
ss
push
mov
mov
pop
(bad)
cld
mov
fdivp
push
lds
jnp
cmc
ds
cmovne
shl
sub
fisubr
std
arpl
mov
data16
ret
movs
out
cmp
and
adc
sbb
fstp
lahf
cmps
mov
xchg
lods
mov
mov
pop
jnp
pop
mov
stos
in
hlt
sbb
cmps
fucomp
daa
mov
(bad)
ror
daa
cmps
test
frstor
movzx
jle
push
dec
pop
adc
rol
rcl
aad
bound
push
(bad)
mov
mov
sub
jmp
pop
cmc
rcl
ss
and
fwait
adc
mov
pop
test
mov
xchg
adc
xchg
xchg
xor
iret
adc
cmp
gs
push
and
jb
out
mov
ds
dec
call
push
les
xchg
in
(bad)
mov
mov
arpl
xchg
adc
mov
loop
sbb
cwde
dec
les
cmp
inc
mov
popa
pop
in
jns
div
and
fs
sub
pushf
jecxz
bound
cld
mov
dec
sub
xor
dec
sar
rcr
or
or
sbb
shl
xor
xor
jnp
pop
jmp
push
inc
pop
(bad)
ins
mov
cmp
in
xor
add
ins
cmp
and
mov
fimul
xlat
addr16
addr16
call
cmp
(bad)
shr
lods
mov
xor
mov
outs
inc
call
cmp
es
sbb
retf
xchg
in
inc
fimul
mov
dec
mov
fbld
int3
push
add
das
ror
push
mov
repnz
fiadd
fiadd
mov
cwde
pop
test
or
jns
ror
icebp
stos
aad
repz
call
and
pop
fidivr
add
addr16
inc
hlt
and
jmp
enter
(bad)
cmp
call
mov
call
dec
mov
int
jmp
(bad)
jbe
test
push
xchg
movs
push
popa
and
pop
mov
cli
clc
cmp
sbb
mov
not
pop
dec
(bad)
movs
push
pop
ret
xchg
push
(bad)
jmp
mov
lds
(bad)
(bad)
inc
cmp
(bad)
jbe
repz
arpl
stc
aam
sbb
popf
lods
dec
mov
mov
fdivr
or
in
daa
jne
cmp
pop
shr
or
in
or
adc
cmp
dec
mov
adc
loopne
adc
mov
mov
push
stos
xor
xor
jmp
cmp
push
paddsw
ret
aad
div
not
or
mov
xlat
inc
pop
push
pop
jl
jmp
scas
lock
xchg
rcr
pop
cmp
dec
jg
inc
dec
movs
xchg
xor
out
out
test
sbb
pop
fistp
sbb
push
ror
jbe
lods
ret
mov
jne
sbb
out
mov
mov
sub
in
push
and
adc
push
mov
and
out
clc
jmp
call
cdq
jne
outs
jecxz
sbb
(bad)
xchg
cmc
cmp
rol
xchg
mov
pop
fstp
adc
jnp
cmc
xchg
push
jns
add
cmp
sub
and
or
push
ror
mov
cmp
jp
fs
and
pushf
add
jle
mov
rol
jp
ret
imul
leave
mov
js
rcl
pusha
int3
aaa
mov
xlat
jmp
je
jns
lea
retf
stc
and
retf
inc
pop
dec
jmp
in
ss
ret
push
call
or
(bad)
jae
bound
bound
mov
inc
mov
cmc
ror
das
mov
xchg
and
mov
mov
inc
gs
xchg
push
ja
inc
jp
inc
je
inc
in
fcom
test
int3
popa
jmp
clc
mov
test
arpl
out
inc
cmp
cld
xor
pop
push
popf
cld
pop
pusha
xor
push
jp
inc
pop
es
or
xor
jns
test
lock
je
mov
jmp
cld
rol
out
out
fldcw
and
mov
push
call
push
dec
and
scas
out
adc
movs
loope
mov
nop
mov
jb
scas
and
(bad)
xor
mov
xchg
pop
xor
pop
push
cmp
and
inc
push
(bad)
(bad)
lds
rcl
push
jge
ss
add
pop
mov
jo
clc
pop
pop
(bad)
(bad)
xchg
fcom
fsubr
loop
sub
jl
sub
fisttp
jno
jne
jne
mov
int
lds
fwait
je
test
dec
cs
lock
jmp
jmp
hlt
mov
nop
js
pop
mov
in
pop
int
push
xor
pop
dec
dec
cmp
in
in
mov
in
and
imul
dec
das
push
call
mov
mov
cdq
adc
adc
cwde
ret
dec
stos
push
xor
enter
fstp
push
jno
push
cld
das
cmc
add
mov
fdivr
sub
adc
add
fdiv
xchg
and
in
dec
dec
jbe
dec
mov
and
pop
adc
or
sub
pop
into
lods
ja
cmp
adc
(bad)
ja
je
jne
in
nop
(bad)
sub
mov
(bad)
mov
daa
sar
xchg
cmp
pop
bound
inc
and
aad
and
int
std
cdq
sahf
cmp
cmp
pop
es
movs
or
rol
je
lahf
test
scas
nop
bswap
pop
lock
jo
ja
sub
cs
mov
out
frstor
xchg
mov
sets
fnstsw
push
adc
call
inc
pop
dec
les
adc
fwait
sub
inc
fwait
scas
cmp
jns
xor
rol
dec
push
cld
es
out
mov
dec
fxch
add
fld
ror
sbb
clc
dec
(bad)
fst
mov
jo
sbb
fld
pusha
pop
sbb
out
mov
cs
js
cmp
js
push
in
add
call
push
imul
popa
cli
je
adc
mov
fcomip
inc
adc
jp
and
cmp
out
bound
mul
in
and
imul
movs
lahf
ins
stos
outs
dec
pusha
mov
cmp
ret
arpl
inc
mov
aam
pushf
pop
or
daa
and
ins
sbb
add
sub
idiv
es
push
mov
fcom
mov
retf
int
inc
call
mov
(bad)
and
int
mov
int3
add
mov
xor
pop
in
cmp
data16
or
cmp
mov
cmps
jmp
movs
adc
nop
out
lods
add
xchg
sub
fcomp
inc
sbb
ret
mov
jle
jns
xchg
dec
pop
aad
repz
push
push
sub
and
push
push
dec
cmp
clc
jecxz
jmp
mov
movs
ss
jno
mov
in
cmc
imul
adc
add
mov
mov
adc
xor
sub
jo
test
sbb
sbb
adc
add
mov
xor
stos
push
outs
(bad)
cmp
fmul
pop
sbb
gs
aam
in
inc
(bad)
pop
out
pusha
dec
(bad)
in
cmp
jmp
and
mov
mov
push
loopne
fdiv
int3
shl
adc
loope
adc
push
push
sub
push
outs
rep
cmp
cmps
imul
dec
push
inc
fisubr
inc
jge
push
or
jns
push
jp
stos
inc
lock
test
arpl
cmp
push
sub
cmp
push
add
dec
adc
xor
data16
mov
ret
std
pushf
or
imul
jmp
cs
lock
fst
ficom
adc
cld
sbb
out
popa
dec
cmp
xchg
fsubr
aaa
mov
xchg
push
ror
pusha
loopne
sub
je
movs
pusha
jmp
mov
sbb
sub
inc
mov
lea
cmp
inc
pop
fsubrp
popf
sub
jae
jb
or
lods
cmps
stc
pop
pop
inc
and
mov
scas
scas
pusha
nop
jae
or
jnp
and
or
rol
sbb
inc
imul
jg
imul
xlat
mov
fbstp
std
dec
dec
cmp
dec
xor
jl
js
test
inc
(bad)
xchg
les
dec
out
push
adc
adc
int
mov
cmc
dec
inc
out
jmp
sub
(bad)
and
jmp
or
fcomp
dec
push
ss
mov
inc
mov
mov
xchg
mov
fdivr
xchg
jmp
push
cmps
mov
popa
out
inc
out
or
cli
push
and
(bad)
stc
or
or
mov
dec
adc
dec
stos
outs
cmp
xor
int3
imul
mov
mov
mov
cmps
sbb
mov
scas
lock
test
jecxz
inc
or
push
mov
inc
ficom
je
mov
popa
jl
das
dec
mov
xor
push
bound
popf
push
and
in
mov
push
cmp
in
adc
sub
scas
test
mov
xchg
leave
cmps
neg
imul
adc
fadd
aas
call
mov
scas
mov
add
add
mov
stos
aad
jae
inc
into
mov
sub
dec
(bad)
push
pop
mov
cld
adc
imul
into
or
out
nop
and
aam
bound
rcr
inc
ror
adc
daa
lahf
call
out
fldcw
mov
add
and
add
dec
xchg
cmp
fstp
mov
adc
div
mov
call
iret
add
cmp
adc
pop
fs
rcl
sub
jo
std
push
fdiv
(bad)
jno
lock
sub
nop
rcr
in
dec
into
fild
neg
imul
lahf
sub
imul
(bad)
fcmovu
imul
pop
ret
xor
jo
out
jle
inc
pop
out
int3
sbb
out
lea
add
addr16
mov
jg
pop
clc
mov
dec
push
ja
add
jb
inc
es
mov
jge
xchg
stos
out
out
mov
imul
or
sbb
xor
push
scas
loop
mov
adc
out
cmps
arpl
in
data16
test
cmp
adc
xor
movs
arpl
cmps
sub
mov
mov
add
std
and
xchg
xor
sbb
or
or
dec
lahf
jns
adc
test
adc
push
pop
fs
or
(bad)
fcomp
ins
nop
xchg
loope
rcr
jno
dec
into
xlat
mov
sub
sub
js
xor
adc
inc
or
or
fsub
jbe
js
(bad)
dec
sahf
xor
jmp
pop
mov
mov
repz
pcmpeqw
test
shr
jnp
popf
(bad)
adc
fsub
(bad)
in
push
push
cli
push
es
ror
cmp
adc
push
mov
mov
or
(bad)
sub
xchg
out
ret
ret
int3
pop
sub
dec
xor
adc
jp
in
ins
jp
pop
ins
mov
sbb
mov
(bad)
adc
adc
and
mov
xchg
xor
retf
pushf
(bad)
ins
push
test
fchs
(bad)
fs
div
sub
cmp
leave
in
adc
aam
out
jnp
hlt
daa
loopne
jg
icebp
inc
or
push
or
sub
imul
mov
cld
xchg
inc
ss
dec
sbb
call
ins
fstp
inc
cmp
shl
iret
push
rol
(bad)
mov
test
mov
jl
loop
push
inc
fild
repnz
fs
pop
mov
in
adc
xchg
shr
mov
call
fsub
xor
jg
nop
repz
enter
or
adc
(bad)
or
add
fwait
inc
push
test
add
inc
nop
loop
lahf
js
out
sar
add
pop
stos
mov
or
mov
xor
push
hlt
xchg
dec
(bad)
lods
sbb
pop
imul
(bad)
cmps
fmul
gs
ror
es
fdivp
cld
outs
jmp
pop
inc
sbb
pop
mov
retf
inc
fild
shl
xchg
in
jl
push
imul
xor
ds
rcl
ret
jecxz
aad
mov
mov
sbb
ja
jge
fdivr
mov
fstp
adc
or
xchg
loopne
add
(bad)
mov
pop
cdq
mov
jae
and
jo
cmp
sbb
cmp
push
add
inc
lods
mov
sbb
shl
cdq
dec
jnp
cdq
call
push
loopne
sahf
fs
xchg
imul
sub
cmp
inc
cdq
in
hlt
js
div
inc
je
ins
sub
jbe
popa
(bad)
pop
gs
stos
jbe
repnz
mov
pop
sar
dec
out
test
cmp
push
call
jae
add
and
ins
fisubr
(bad)
mov
sbb
mov
ror
dec
sbb
inc
adc
jns
shl
mov
jae
adc
pop
mov
mov
leave
push
(bad)
jne
sbb
xchg
enter
mov
inc
xlat
mov
sbb
ins
adc
out
inc
cli
aaa
and
sahf
sbb
xor
loop
sbb
push
clc
inc
sub
leave
push
das
into
mov
stos
jmp
cld
inc
ss
outs
inc
loop
loope
inc
std
cld
adc
fwait
lock
mov
pop
imul
xchg
jl
push
sub
pop
es
cmps
mov
fisubr
retf
jle
cmp
lahf
fist
push
int
dec
inc
push
loop
int
retf
sbb
jns
xchg
dec
sbb
in
fisubr
sahf
pop
xchg
dec
sbb
sbb
in
jns
xlat
jns
std
js
mov
dec
mov
push
pushf
ja
pop
inc
push
enter
jno
jle
(bad)
or
loopne
mov
(bad)
pop
sbb
call
nop
mov
adc
adc
icebp
stos
adc
ret
cmc
fcmovnu
shl
lahf
sbb
xchg
icebp
dec
mov
fnstenv
inc
xchg
pop
loopne
cmp
jae
test
cld
mov
push
mov
and
adc
and
xlat
hlt
mov
call
outs
rcl
movs
jl
mov
in
mov
ret
stos
ror
mov
popf
cmc
xchg
jmp
or
adc
aam
push
in
retf
pop
fistp
jge
lahf
jge
hlt
and
add
push
pushf
fsub
out
mov
xchg
inc
xor
or
iret
bound
lods
daa
jno
not
dec
push
cli
dec
test
push
in
aad
test
es
xchg
and
push
js
xchg
stos
push
mov
idiv
push
sbb
pop
ret
(bad)
push
scas
addr16
mov
push
adc
addr16
stos
out
add
scas
outs
adc
pop
push
ret
jp
or
imul
add
call
inc
pushf
nop
outs
pop
dec
nop
dec
mov
sub
and
adc
jnp
lods
sub
sbb
xor
aas
div
and
or
jmp
into
mov
xchg
xchg
(bad)
cdq
outs
je
sub
aaa
jnp
out
dec
push
xchg
adc
inc
aas
mov
inc
and
sar
out
call
jae
mov
fst
test
jnp
push
cli
aaa
or
enter
cmp
outs
or
outs
sbb
inc
xor
sbb
pop
stos
add
pop
mov
sbb
inc
enter
mov
repz
push
aaa
out
or
push
push
jae
add
mov
inc
inc
xlat
xchg
sar
jmp
push
std
ret
stos
push
out
imul
fwait
dec
jbe
(bad)
add
xor
not
sub
jb
mov
std
inc
(bad)
je
inc
cmp
int3
inc
cli
mov
jl
out
shl
and
jo
and
hlt
push
jle
add
cli
push
inc
and
and
push
es
or
mov
pop
fsubr
outs
pop
int3
add
mov
(bad)
sti
push
retf
sbb
pushf
fsubr
aad
mov
mov
xchg
iret
mov
push
iret
das
and
in
mov
hlt
inc
(bad)
mov
rcl
outs
(bad)
(bad)
mov
pop
and
mov
out
test
ja
push
pop
dec
das
fstp
push
xor
mov
ins
inc
aas
test
cmp
mov
scas
mov
sub
xchg
retf
dec
div
ins
in
mov
dec
fiadd
leave
dec
xchg
outs
out
sbb
xor
mov
push
mov
cld
scas
repz
call
mov
movs
(bad)
sahf
ret
test
ds
mov
push
mov
jmp
out
push
mov
adc
mov
adc
cmp
not
fidivr
jp
dec
adc
out
imul
retf
add
jne
dec
out
(bad)
aas
or
outs
in
mov
push
pushf
fcom
dec
dec
mov
leave
and
rol
ins
and
jmp
add
mov
xor
push
ret
out
mov
jns
xor
clc
arpl
data16
xor
jle
aad
popf
lods
ds
jne
popa
fnstcw
sbb
add
cmps
push
pop
jno
add
add
dec
stos
repz
jb
pop
fstp
cwde
cli
xchg
test
adc
cmp
cmp
xor
sar
fwait
movs
mov
in
ret
mov
dec
out
push
sbb
push
mov
in
mov
call
js
fwait
mov
mov
jg
pop
out
popf
add
push
cwde
sahf
jle
cmp
sbb
pop
aam
push
push
mov
or
or
pop
pop
jne
(bad)
scas
sub
sbb
xor
repnz
in
inc
push
mov
mov
cmps
repz
stc
loopne
lds
sub
xchg
push
push
outs
retf
and
pop
in
jmp
js
and
adc
rcr
rcr
cdq
push
enter
aad
xchg
test
xor
pushf
repnz
sahf
(bad)
jbe
(bad)
in
xchg
push
ret
dec
repnz
inc
int
sbb
(bad)
aam
jnp
add
nop
pop
mov
(bad)
dec
xchg
adc
mov
add
push
mov
(bad)
xlat
call
jge
or
test
sub
add
(bad)
mov
pop
sahf
(bad)
dec
cwde
inc
add
push
fcmovbe
add
xor
div
mov
out
cmp
xchg
cmps
lods
jecxz
jecxz
rol
jecxz
dec
(bad)
mov
adc
sbb
rcl
ret
xchg
xchg
ss
scas
mov
sbb
dec
imul
mov
mov
xchg
and
ins
pop
fistp
(bad)
out
push
mov
mov
call
imul
mov
jmp
xchg
clc
fs
push
dec
popa
jne
cmp
xchg
cli
sbb
jge
add
add
in
adc
clc
js
test
push
repnz
adc
push
shl
aam
stos
icebp
ret
or
pushf
js
sbb
push
shl
frstor
leave
inc
aas
std
jb
dec
push
ins
movs
or
cli
jmp
retf
es
enter
fs
dec
mov
bound
xor
or
aas
cmp
test
cmp
test
xor
fdiv
test
mov
mov
fisttp
add
jl
call
adc
out
int3
push
int3
sub
les
lds
sbb
out
das
sub
ins
enter
jo
jp
xor
sbb
test
jge
or
shl
adc
aam
or
out
fdiv
sub
push
in
ret
or
iret
push
xchg
es
xor
jnp
out
bound
adc
pop
and
cmc
inc
jns
retfw
jp
sub
and
and
add
jno
xchg
mov
sbb
add
test
test
loop
ss
cmc
cld
and
mov
ror
xchg
js
stos
test
pop
inc
cmp
int
test
out
mov
mov
xor
xchg
jmp
fsub
inc
inc
add
out
je
jne
or
and
icebp
repnz
aas
fistp
fnstsw
aam
test
lods
(bad)
ins
push
stc
mov
cmps
cmps
and
jnp
cmc
push
add
std
xchg
sub
mov
ds
jl
lds
out
pop
jb
iret
(bad)
movs
mov
cwde
add
xchg
aam
(bad)
ja
daa
dec
stos
xchg
ret
xor
xor
imul
ror
jae
in
pop
jmp
mov
adc
mov
inc
push
dec
not
movs
sti
fwait
push
xchg
aad
or
or
mov
arpl
xor
fadd
movs
and
push
and
aam
adc
mov
cmp
jge
jg
mov
jnp
pop
or
sub
jge
sahf
add
ss
dec
jne
aaa
scas
mov
pop
int3
sbb
(bad)
jge
adc
mov
shl
xchg
cmp
sub
in
add
jmp
adc
dec
rcl
add
xchg
sub
sti
adc
pop
jp
cmp
mov
loop
push
shl
pop
(bad)
push
(bad)
mov
jb
sti
cmps
xchg
xor
add
cmc
mov
adc
mov
sahf
push
in
push
mov
out
cmc
ins
cwde
add
mov
call
ficomp
out
jecxz
xchg
je
stc
aad
mov
adc
stos
xor
mov
mov
test
retf
mov
in
retf
mov
cmp
ins
jl
clc
out
(bad)
cmp
inc
adc
popf
imul
mov
sub
xchg
jge
loopne
fcomp
inc
mov
enter
shr
jae
fisttp
xlat
pop
fiadd
xor
call
push
mov
or
adc
lahf
xchg
pop
mov
inc
mov
clc
popa
movs
cmp
test
sbb
enter
xchg
call
leave
adc
mov
movs
sbb
jmp
jbe
lds
pop
cmps
js
sub
xor
cdq
or
aad
mov
ins
addr16
jno
out
mov
daa
mov
mov
push
sub
scas
(bad)
xor
mov
mov
stos
call
shr
pop
xchg
inc
add
xchg
cmp
xchg
xchg
push
sbb
icebp
xchg
sub
push
js
push
ss
rcr
jno
cmp
stc
xchg
or
cmp
leave
ret
xor
inc
test
sti
lods
mov
in
push
mov
pusha
dec
cmp
add
shl
in
daa
xchg
clc
jns
add
test
jns
enter
stc
pushf
movs
sub
push
call
and
out
sahf
scas
mov
movs
popa
mov
mov
jmp
je
xchg
or
bound
test
ss
test
mov
or
jmp
pop
dec
mov
push
dec
cmp
(bad)
cwde
clc
aam
mov
ins
rcl
mov
xor
add
sub
movs
loopne
jle
test
and
and
bound
bound
ja
shr
stc
fs
test
pop
loop
mov
dec
mov
es
jl
popa
shl
mov
sub
jae
sbb
mov
and
mov
cld
loopne
jle
and
pushf
aas
arpl
mov
mov
daa
call
das
lock
jg
and
out
fstp
push
adc
std
lock
dec
loop
add
cmp
add
cmp
icebp
jmp
gs
jns
ret
xchg
adc
push
dec
fcom
aad
sbb
jl
mov
push
pop
sbb
call
(bad)
cmp
xchg
add
mov
add
(bad)
push
push
ret
in
pop
dec
scas
stc
jge
xor
mov
aaa
and
cmps
cs
dec
jp
mov
inc
loope
adc
nop
push
dec
(bad)
mov
add
sub
mov
cmp
jnp
fbstp
jp
mov
(bad)
int3
jle
imul
xchg
pop
adc
pop
cmp
push
cmps
loopne
aad
and
dec
sub
sbb
push
outs
mov
shl
mov
mov
cmps
pushf
jmp
sti
pop
cld
lds
sub
std
movs
in
pop
lea
int3
shl
nop
shl
in
push
jbe
cld
dec
jl
jne
fwait
dec
adc
(bad)
inc
cmp
jle
aaa
outs
xchg
jg
dec
test
neg
cmps
mov
popf
mov
fucomi
jns
cmp
mov
and
mov
imul
adc
iret
pop
jecxz
add
sub
push
mov
and
push
(bad)
push
pop
and
mov
cmp
pop
rcl
sar
inc
jle
jle
inc
cld
repz
or
or
cwde
mov
mov
or
xchg
mov
cs
sub
(bad)
sub
sti
mov
ins
nop
fsub
mov
adc
jmp
and
test
dec
mov
sbb
cmc
mov
addr16
pop
dec
sub
push
fs
ins
dec
cli
in
mov
leave
push
mov
mov
outs
sbb
cs
add
cmps
jb
cmp
sbb
xchg
or
scas
aad
shr
out
sti
xchg
jne
daa
mov
mov
xlat
popa
nop
loope
jmp
test
outs
inc
add
jmp
push
les
dec
xlat
cli
das
mov
aas
les
cmp
ror
ds
push
call
nop
popa
lock
stc
pop
dec
dec
int3
xchg
pop
mov
mov
aas
dec
movs
sar
stc
test
ret
retf
mov
test
sub
add
cmp
leave
xor
mov
icebp
outs
ret
add
test
data16
jne
mov
jb
test
xchg
into
xor
mov
(bad)
(bad)
aad
xor
fwait
or
mov
push
mov
cwde
ins
mov
icebp
int
bound
xchg
fild
lock
fsubp
in
test
out
sbb
fstp
rol
sub
mov
pusha
ins
xchg
jge
xor
stc
mov
add
jg
xor
inc
mov
mov
mov
xchg
push
sub
jp
cdq
adc
push
mov
or
push
mov
ret
in
add
and
movs
xchg
repz
mov
ins
mov
pop
sar
and
jnp
jp
and
ja
divps
push
push
mov
push
or
lock
lods
hlt
or
cmp
enter
inc
rcr
fistp
add
or
push
fmul
jge
pushf
and
jecxz
stc
inc
jne
inc
jo
pop
sbb
mov
cmp
jb
pushf
jo
stos
ror
add
stos
clc
nop
sahf
popf
jmp
jl
outs
ja
inc
jp
popf
xchg
loop
aaa
pop
call
and
cmps
aad
int
cmp
jl
dec
mov
cld
dec
dec
ins
mov
ss
sub
mov
sbb
repz
cwde
sbb
popa
int
(bad)
je
adc
movs
add
shl
sub
dec
fsub
and
add
jecxz
sub
je
out
sub
ja
jg
sub
call
push
fst
xor
(bad)
in
jbe
add
push
push
hlt
add
adc
gs
sbb
fldcw
add
cmps
xor
jne
jmp
js
dec
and
mov
movs
xchg
adc
jno
jnp
sub
arpl
(bad)
mov
sbb
pop
rcl
cmps
jl
sahf
in
ds
sti
sbb
push
imul
mov
sub
jbe
data16
mov
movs
inc
mov
and
es
or
ds
int3
mov
push
rol
pop
push
pop
or
ja
push
add
and
sub
outs
cmps
add
loope
cmps
(bad)
mov
test
mov
(bad)
mov
scas
leave
sbb
cli
add
stos
leave
(bad)
fnsave
sub
push
(bad)
mov
and
frstor
js
ds
cdq
out
or
mov
das
mov
adc
pushf
test
mov
jno
popf
loope
fistp
mov
ins
push
ins
dec
fwait
xchg
dec
dec
clc
xor
shl
and
push
push
aam
xchg
adc
icebp
hlt
daa
out
sbb
jns
arpl
pop
imul
dec
xchg
xchg
mov
(bad)
adc
ins
loopne
les
gs
sbb
sub
push
cmps
xchg
out
aas
jge
xor
xor
pop
bound
mov
std
jg
xor
(bad)
xchg
xchg
lea
cmc
dec
or
mov
mov
push
sbb
inc
gs
sbb
imul
cmps
xor
xchg
shr
into
jmp
and
jmp
lahf
sub
push
sbb
test
inc
inc
push
scas
jge
jae
mov
push
add
mov
lahf
dec
fidiv
sti
cmp
outs
es
mov
les
dec
icebp
sub
gs
and
push
aad
jecxz
jmp
dec
sbb
cs
pop
aad
stos
cmc
ins
cmps
pusha
ret
adc
jp
dec
loop
les
test
xchg
dec
(bad)
(bad)
stos
adc
add
ins
(bad)
cvtps2pi
add
dec
aad
cmp
xchg
pop
jnp
xor
shl
add
xlat
jbe
pop
inc
sbb
bound
aaa
test
adc
out
imul
ficomp
neg
xchg
or
pushf
pop
push
adc
(bad)
lahf
retf
fs
fsin
jne
inc
xor
mov
sub
inc
js
cdq
in
mov
pop
xchg
lods
or
pop
inc
sbb
test
push
pop
imul
lds
pop
daa
bound
adc
sub
mov
div
fs
jle
or
sbb
lods
xor
div
popa
or
addr16
out
pop
stos
inc
or
js
dec
mov
in
push
ins
popa
sbb
icebp
stos
xchg
xor
cs
out
push
jmp
call
mov
cmps
aas
fnstcw
dec
(bad)
or
and
and
add
test
in
icebp
imul
sub
cmp
mov
pop
imul
or
xor
and
icebp
je
mov
pop
push
ret
fwait
push
lahf
fild
stc
mov
ret
imul
add
addr16
push
jge
in
enter
test
inc
and
dec
ins
jg
(bad)
mov
xor
imul
retf
dec
sar
fwait
(bad)
nop
pop
pop
mov
push
sub
adc
or
sub
lods
cmp
adc
int3
cwde
call
sub
xchg
push
sbb
sub
adc
sub
arpl
std
scas
sbb
jecxz
xor
imul
xchg
mov
jle
and
sub
std
out
mov
push
in
(bad)
scas
push
mov
rcr
and
mov
cmps
or
mov
jge
cmp
ret
adc
and
test
test
cmp
idiv
ffreep
(bad)
add
push
fisub
bswap
add
rcl
xsaves
sar
jl
daa
mov
fimul
inc
je
xor
out
xchg
or
push
outs
jmp
jecxz
mov
out
or
cmp
cld
gs
sti
outs
xchg
dec
jb
dec
das
push
adc
cmp
add
(bad)
pop
dec
cld
jne
mov
xor
sub
hlt
jmp
xlat
jbe
mov
mov
int3
dec
fld
ins
sahf
pop
cmps
mov
mov
(bad)
in
ins
mov
xor
or
loop
ret
adc
pop
jo
arpl
xor
cmp
les
add
mov
ss
fwait
fwait
loopne
sub
push
jb
inc
mov
add
push
adc
lds
push
jmp
push
inc
retf
rol
in
dec
mov
cmp
pop
mov
push
fnstenv
dec
or
push
call
fdiv
cld
ins
bound
pop
push
mov
add
push
out
xor
add
sub
loop
out
or
mov
cmc
push
xor
sub
pop
xchg
adc
lahf
xlat
or
rol
rol
push
mov
int3
inc
sbb
cmp
fistp
les
or
lea
xchg
sub
or
inc
arpl
loop
dec
mov
push
sbb
push
in
bnd
out
idiv
test
xchg
aas
in
xchg
int3
rol
jg
mov
call
adc
out
in
mov
push
or
add
adc
and
add
jae
inc
sub
ja
dec
sub
push
push
cli
dec
pop
cmp
arpl
pop
sahf
adc
jnp
dec
pop
fwait
sub
daa
mov
mov
lods
inc
in
ins
inc
push
int
cmps
aad
cmp
je
inc
sub
repz
sub
retf
(bad)
icebp
sbb
jno
pop
je
dec
and
test
retf
mov
pop
dec
dec
retf
add
es
lds
push
in
fmul
add
xchg
lods
ds
ret
and
sub
sub
mov
xor
stc
mov
sbb
hlt
cld
hlt
in
imul
xchg
cs
inc
arpl
sub
pop
das
push
lds
out
cmps
imul
sub
ret
adc
xchg
shl
outs
rcl
clc
lahf
and
pop
popfw
sbb
mov
test
jmp
xor
jae
dec
mov
push
push
xchg
dec
mov
dec
add
ficom
in
xchg
es
dec
jae
(bad)
and
mov
cmp
shr
mov
into
mov
das
dec
or
cmp
inc
dec
aaa
and
ret
neg
xor
dec
mov
mov
fstp
xor
pop
aam
test
jmp
movs
xor
pop
pushf
jae
xor
push
mov
jle
test
xor
pushf
sub
lea
fnsave
out
inc
jp
(bad)
cmp
jle
cmp
scas
pop
cld
xor
add
xor
fwait
inc
shld
or
mov
(bad)
ret
dec
or
push
mov
mov
pop
push
mov
jle
pop
mov
popa
adc
push
fnstsw
lods
inc
leave
sbb
mov
out
popf
fistp
jb
cmp
mov
(bad)
cmp
push
xchg
push
cmp
cwde
call
aam
popf
shr
loop
sar
sahf
aad
push
inc
daa
inc
push
or
fs
mov
cmp
mov
add
sub
cmps
ja
xor
add
and
ja
xchg
add
mov
rcr
jo
fs
ja
xchg
in
cld
inc
aaa
jmp
or
out
sbb
jo
aam
in
cmp
aad
mov
jmp
leave
test
(bad)
and
mov
mov
mov
jbe
outs
inc
in
cmp
test
rcl
in
jecxz
stc
mov
stc
pusha
in
fst
push
adc
scas
push
lods
mov
pop
retf
add
mov
out
inc
cs
fnstenv
lahf
cmp
mov
or
test
pop
cmps
mov
mov
scas
inc
dec
inc
call
sub
rcl
sahf
xchg
push
outs
dec
pop
push
inc
aaa
xor
xlat
xor
int3
lods
in
or
cmp
fimul
sub
jmp
xor
xor
or
mov
sub
fnsave
jmp
pop
cmps
out
fdiv
ret
(bad)
fisttp
sbb
fnsave
js
or
pop
mov
xor
psubw
mov
(bad)
dec
dec
xchg
bound
sbb
push
das
stc
push
in
jae
retf
lods
jb
inc
std
repz
inc
xchg
xlat
call
mov
xchg
fnsave
jae
dec
rcr
and
sbb
fimul
int
mov
shr
adc
xlat
xchg
test
fwait
push
cmc
mov
rol
mov
mov
add
push
iret
xchg
(bad)
mov
(bad)
ins
mov
retf
sub
(bad)
fmul
xchg
sbb
sub
cmps
mov
cmp
(bad)
mov
aam
mov
push
std
mov
popf
sbb
sub
add
jg
cmp
cwde
arpl
or
or
mov
outs
push
inc
stos
push
push
add
xchg
xor
mov
mov
mov
pop
fidiv
adc
retf
jmp
call
mov
push
ins
imul
fidiv
dec
adc
adc
sub
stc
xchg
adc
mov
mov
sbb
sbb
(bad)
add
jmp
and
and
mov
movs
jmp
sbb
jb
xchg
sub
bound
push
enter
test
cmp
ss
lods
mov
movs
adc
xchg
cld
sbb
mov
(bad)
out
and
nop
and
xor
xchg
in
xor
inc
mov
sbb
popa
fst
addr16
adc
cli
scas
mov
and
sbb
jno
jge
mov
inc
push
fcmovnu
adc
out
repz
cmps
push
sar
inc
mov
mov
xchg
push
int
les
adc
cmp
push
or
test
and
mov
mov
mov
mov
ja
xor
daa
cmp
inc
lds
push
push
mov
fwait
push
fidivr
xchg
jbe
(bad)
sbb
aas
ds
out
xor
clc
ja
sub
mov
mov
adc
jno
(bad)
jns
sub
ja
(bad)
daa
out
push
sti
je
(bad)
mul
mov
pushf
test
not
xchg
mov
shl
lock
and
xchg
adc
(bad)
fsqrt
adc
test
xchg
inc
add
dec
ss
push
icebp
sbb
sbb
lods
imul
mov
add
aam
test
je
clc
sbb
push
jns
push
sbb
jb
adc
xor
pop
sar
bnd
mov
in
mov
fmul
jno
movs
xchg
je
(bad)
js
lods
data16
in
xchg
outs
fst
mov
sbb
add
pop
push
cmp
outs
sub
repnz
stc
aam
ins
mov
pop
jns
fincstp
icebp
frstor
pop
mov
mov
mov
add
cmp
xchg
xchg
fsub
push
rcr
mov
and
sti
jae
out
inc
in
icebp
push
mov
dec
xlat
clc
sbb
jne
xchg
ret
pusha
jp
cwde
ret
mov
(bad)
jg
sbb
xchg
or
add
movs
push
inc
cmps
lods
shr
inc
addr16
rcl
add
dec
mov
mov
test
dec
out
enter
mov
pop
je
mov
mov
jbe
in
cmp
das
mov
sbb
retf
aad
mov
call
lea
and
adc
add
cmc
mov
xor
int3
xchg
xchg
and
out
fisub
jne
sbb
mov
inc
jmp
xchg
jmp
ret
fnstsw
add
popf
adc
push
sbb
add
lahf
lock
sub
sub
out
cwde
repz
cmp
cli
mov
adc
aaa
jecxz
mov
ds
pusha
jle
mov
cmp
add
inc
inc
mov
stos
(bad)
inc
add
cmp
pusha
jae
xor
or
bound
mov
jp
(bad)
and
mov
(bad)
mov
mov
dec
sbb
movs
inc
sti
xlat
call
ror
popf
lock
lea
lods
xchg
dec
stos
lods
leave
adc
mov
popa
rcr
and
out
mov
repnz
div
push
pop
xchg
shl
xor
stos
push
push
fs
sub
mov
pop
inc
sub
shr
cdq
jne
push
push
cmp
dec
xor
pop
pcmpeqd
xlat
(bad)
push
adc
out
mov
jns
add
sbb
ficomp
jge
add
je
loop
lea
daa
fldcw
test
jmp
aam
push
shr
push
nop
mov
(bad)
call
retf
pushf
hlt
fsubr
arpl
jmp
nop
jle
inc
sbb
sar
sub
repnz
inc
jb
xchg
push
es
mov
mov
imul
jge
pop
xlat
xor
rcr
cmc
pop
pop
arpl
stos
jg
xchg
cmc
leave
les
std
nop
xor
ins
mov
movs
pop
sub
adc
inc
jae
leave
mov
(bad)
cld
in
and
mov
xlat
jle
push
pop
fstp
xor
dec
sbb
fwait
dec
hlt
lods
shl
push
scas
sub
dec
pop
xor
mov
pop
loop
mov
fistp
icebp
sbb
sub
pop
sbb
mov
sar
repnz
repnz
push
out
fwait
adc
outs
sbb
sub
mov
xlat
jno
pop
rol
pop
rcl
xchg
adc
add
enter
xchg
mov
pop
fsubr
movs
xchg
(bad)
cmp
aam
pop
pusha
fldcw
lods
mov
jnp
pop
addr16
not
cmp
hlt
mov
mov
sub
fnsave
mov
pop
sbb
fdivr
sub
jb
fsubr
inc
pmaddwd
add
jmp
test
jmp
ins
nop
ja
add
push
sub
xor
out
mov
push
aaa
mov
mov
retf
xchg
inc
jmp
inc
adc
adc
mov
cwde
ret
sbb
jbe
nop
mov
pop
mov
clc
adc
fild
in
push
hlt
fst
(bad)
dec
ss
das
pop
daa
adc
call
xor
mov
add
ret
cmp
cmps
push
mov
mov
imul
mov
adc
push
rcl
scas
pop
ficom
lock
(bad)
ins
mov
out
lahf
xor
adc
in
sbb
fild
xchg
mov
cmp
add
(bad)
jns
in
dec
lds
bound
pushf
jg
js
imul
aad
retf
hlt
mov
sub
sub
mov
mov
xor
cmp
dec
inc
push
cmp
sbb
sbb
mov
outs
add
test
icebp
ror
sub
xor
pop
in
pushf
arpl
in
push
jle
out
test
cmc
rcl
out
(bad)
fwait
cmps
mov
cmp
cdq
leave
and
mov
adc
arpl
jmp
mov
jle
test
inc
jle
mov
mov
push
int3
sar
xchg
lods
jns
clc
bound
mov
cmp
pushf
push
sahf
cmp
cmps
mov
xchg
mov
jns
mov
sbb
dec
cmps
mov
dec
mov
aaa
dec
scas
test
jecxz
xchg
dec
adc
fmul
mov
fwait
std
pushf
mov
adc
arpl
shl
pop
(bad)
pop
inc
xchg
lea
adc
leave
cmp
push
xchg
push
(bad)
ins
cmp
add
enter
mov
pop
xor
ret
jo
jp
leave
mov
push
xchg
sub
jbe
mov
leave
or
es
and
and
aas
(bad)
stos
es
lea
cli
loop
hlt
das
stos
inc
cmp
push
jge
mov
ss
int
pop
add
push
pop
(bad)
call
jp
retfw
outs
(bad)
cdq
pop
push
pop
test
adc
xchg
add
jo
ret
sar
lahf
cmp
(bad)
pop
fild
pop
int
sbb
jno
lods
jno
dec
mov
test
outs
outs
enter
movs
mov
pop
imul
xor
aam
std
lock
dec
lahf
(bad)
fist
fucomip
repnz
retf
arpl
rol
ret
cmps
fsub
mov
pop
dec
xchg
aas
xor
xchg
pop
out
out
jno
stos
push
add
cmps
dec
(bad)
not
std
xor
jp
ror
pop
sub
pop
out
mov
aaa
or
and
jp
shl
xchg
xor
inc
mov
scas
jbe
sub
sbb
sbb
xchg
repz
xchg
rcr
mov
in
sbb
push
push
cmp
jns
retf
addr16
cmp
cmp
and
fisubr
jnp
cdq
add
pop
loope
jns
and
fild
arpl
mov
jle
int3
jno
stc
sahf
movs
je
mov
push
pop
add
(bad)
lods
movs
dec
add
retf
ins
and
loopne
(bad)
stc
lods
dec
sub
and
loope
dec
loope
mov
sub
xlat
push
dec
add
mov
int3
or
icebp
leave
cmc
cwde
shl
add
xchg
push
ss
jecxz
mov
xlat
adc
lea
or
and
push
(bad)
push
das
xor
xlat
je
outs
adc
fcom
out
dec
mov
inc
pop
or
cmp
jge
test
fbld
imul
inc
add
clc
adc
sub
or
sub
aad
mov
xlat
cmc
push
add
loope
mov
and
xchg
and
mov
int
sahf
and
out
and
push
sahf
add
mov
mov
cdq
push
xchg
jo
cmps
add
daa
shl
cmp
shl
es
inc
ror
add
jg
jae
push
arpl
pop
imul
inc
jg
lods
mov
push
mov
aas
xchg
inc
dec
bound
mov
or
lea
dec
js
jne
adc
retf
xchg
adc
dec
lods
aas
mov
test
lods
add
loopne
shl
push
mov
jecxz
xor
mov
aam
dec
ja
(bad)
popf
mov
sub
push
sub
inc
jae
in
sar
ja
scas
jo
dec
xchg
dec
ins
add
jp
and
cmp
ds
xor
add
add
test
sahf
mov
mov
jp
bnd
push
or
sbb
nop
push
xchg
jle
repz
mov
mov
dec
xor
das
pop
(bad)
ret
sub
arpl
pushf
jno
iret
fdivr
push
pop
sub
(bad)
call
mov
scas
movs
pop
push
dec
jno
out
(bad)
push
fdiv
xchg
push
cmp
or
or
test
das
push
mov
fstp
or
out
jbe
scas
shl
mov
test
jno
pop
inc
(bad)
and
mov
loopne
mov
push
stos
and
cmc
sahf
test
cmp
call
inc
cmp
mov
jg
push
shl
sub
pop
stos
(bad)
lods
je
xchg
mov
call
and
test
movs
cdq
sub
pop
js
or
jae
scas
pop
dec
nop
mov
int
rcr
inc
jne
enter
mov
cmp
xlat
les
and
sbb
aad
add
inc
add
or
repz
add
aas
fdiv
imul
pop
jmp
xor
jle
inc
or
out
fld
inc
test
push
aad
mov
inc
sub
and
sub
sub
pop
lods
jmp
push
pop
jbe
sub
shl
retf
(bad)
ins
cdq
xchg
out
inc
retf
js
out
stos
fdiv
sub
mul
(bad)
xlat
mov
adc
outs
fisttp
lds
push
adc
ins
or
or
shl
aad
(bad)
xchg
dec
pop
mov
add
jle
mov
mov
and
dec
dec
iret
jmp
enter
arpl
xrelease
(bad)
sub
sbb
cdq
pop
mov
rcl
outs
add
mov
push
ret
jle
repnz
shl
push
and
xor
addr16
cdq
sbb
pop
fdivr
scas
scas
lods
pop
push
cmp
xchg
push
mov
xchg
push
(bad)
in
adc
xchg
mov
(bad)
mov
adc
(bad)
push
pop
pushf
and
add
jmp
bound
adc
fstp
adc
and
jnp
sub
inc
sti
mov
jno
movs
test
fadd
dec
mov
and
and
lock
or
cmc
sbb
or
ss
lahf
xor
(bad)
dec
loope
call
lea
sub
enter
fcom
push
sbb
inc
xor
jmp
sbb
ja
jo
or
imul
sbb
ret
das
and
shl
pop
jmp
or
mov
and
push
push
or
popf
aam
xchg
clc
call
ja
dec
scas
cmc
test
pusha
arpl
sbb
push
ja
fst
gs
sub
(bad)
repnz
sub
mov
mov
mov
fsub
shl
shl
sub
movs
pop
mov
push
mov
pop
jns
rcl
movs
(bad)
std
test
sub
pop
inc
rcr
loope
imul
sbb
jne
loopne
call
push
in
mov
jae
pop
test
sti
add
or
stos
mov
sbb
mov
enter
stos
add
ds
data16
test
imul
(bad)
jo
jl
scas
stos
jo
in
push
xchg
test
cdq
or
mov
or
pop
dec
jl
sbb
mov
mov
mov
xchg
lock
mov
sar
je
push
pop
movs
fs
push
push
jbe
inc
repz
adc
add
or
out
dec
jbe
jmp
push
jb
retf
sub
(bad)
ds
in
shr
mov
sub
or
inc
mov
inc
leave
mov
lea
add
test
fcom
mov
and
lods
out
or
push
outs
(bad)
lock
or
cmp
xchg
stos
pushf
pusha
jl
and
das
pop
adc
jmp
push
jge
dec
imul
adc
mov
aaa
sbb
xor
mov
xlat
pop
daa
test
(bad)
and
xor
outs
pop
jmp
test
mov
mov
repnz
and
pop
adc
mov
into
test
movs
inc
div
add
movs
mov
ret
fnstenv
fwait
mov
movs
cmovs
dec
aam
(bad)
mov
cli
call
dec
ins
pop
xor
xchg
xchg
mov
pop
ror
push
aaa
ret
push
(bad)
push
enter
into
mov
push
mov
fdiv
imul
ins
cld
or
xchg
aas
xchg
int3
aas
sti
(bad)
aad
into
jo
(bad)
outs
outs
pushf
aam
mov
mul
fcomp
sti
(bad)
aad
sub
pop
mov
sti
push
test
(bad)
imul
sbb
add
pop
pop
loop
pop
int
lods
adc
data16
cmps
or
push
cwde
jmp
call
inc
ds
xchg
add
pop
fist
aam
sbb
ins
adc
or
sub
aad
and
outs
add
in
inc
cmp
pop
es
fxch
data16
mov
add
push
es
fs
pop
retf
push
cmc
xchg
call
xchg
push
loop
mov
pop
popf
lds
outs
jno
add
aad
push
pop
add
push
add
mov
aaa
xor
gs
mov
mov
setne
pop
jmp
and
push
loope
test
ds
pop
xor
sbb
mov
hlt
pop
mov
hlt
rcr
retf
dec
stos
xor
lods
lock
ins
cmc
pop
add
shl
dec
adc
jmp
cs
jg
cmp
cmps
sbb
div
cmps
dec
jmp
jl
clc
dec
call
lock
imul
es
iret
leave
shl
cmps
fcom
mov
dec
inc
enter
arpl
cmp
pop
test
lahf
mov
inc
fidiv
xchg
inc
arpl
pop
add
jmp
clc
(bad)
loope
or
inc
fs
jnp
ficom
hlt
je
pop
cli
add
(bad)
xor
sub
push
int
fnstsw
jmp
imul
das
jle
jge
daa
adc
les
loop
out
add
outs
mov
inc
pop
pop
and
jp
push
xchg
add
pop
dec
cmp
into
mov
jg
mov
pop
adc
adc
scas
jl
and
jmp
adc
mov
repnz
std
arpl
hlt
in
data16
idiv
mov
mov
sub
sar
mov
and
clc
cli
xchg
mov
mov
xor
cld
mov
outs
repz
or
fldcw
clc
and
xor
jmp
and
stc
mov
inc
dec
bound
mov
add
cmps
fiadd
loop
lods
or
(bad)
outs
mov
call
cmc
xor
add
loope
mov
inc
jp
jo
into
dec
mov
cmp
daa
mov
xor
out
add
out
loope
and
push
imul
loop
sbb
test
mov
inc
fist
or
jge
test
imul
out
adc
cmp
jb
test
fdivr
(bad)
stos
retf
test
retf
ins
pusha
loopne
sbb
aad
or
call
gs
fcomp
repz
jo
adc
sahf
cli
add
xchg
shr
aaa
jp
idiv
mov
adc
lock
push
mov
xchg
shl
mov
inc
fcmove
cmp
jae
add
std
(bad)
icebp
fsubr
lahf
rol
loope
push
or
ss
repnz
add
fldenv
jae
sub
in
adc
adc
(bad)
retf
sub
mov
popf
mov
adc
test
ficomp
mov
jb
pusha
pop
repz
dec
shl
jnp
push
push
mov
aam
jno
popa
cmp
test
fisubr
pusha
dec
cmp
cmp
arpl
fsub
pop
(bad)
out
mov
shr
shl
jae
inc
jg
push
mov
pop
or
add
ror
push
sbb
in
clc
mov
add
dec
inc
add
fcom
cmp
jmp
jmp
ds
shr
xor
in
cdq
popf
xor
or
mov
std
or
pop
pop
jb
mov
ins
xor
add
xchg
shr
xor
div
shr
inc
xchg
sbb
test
mov
nop
out
outs
(bad)
mul
mov
mov
scas
aam
or
cmp
mov
mov
int3
outs
mov
jne
enter
test
jmp
sub
xor
add
mov
(bad)
iret
idiv
movs
nop
mov
or
bound
test
jne
shr
mov
mov
pusha
mov
push
fcom
js
inc
add
cld
adc
jmp
jmp
test
hlt
outs
mov
je
test
cmps
pop
dec
inc
(bad)
loop
js
xlat
jg
imul
pop
push
cmps
pop
or
in
cdq
pop
sub
imul
enter
sbb
add
inc
push
ss
xor
push
dec
loop
pusha
sub
scas
mov
lods
sub
aas
test
in
mov
pop
mov
hlt
lock
sbb
pop
xchg
scas
cmp
mov
fidivr
leave
pop
pop
push
iret
fnsetpm(287
push
xchg
enter
(bad)
loop
inc
daa
cmp
xor
lods
push
out
mov
dec
inc
add
mov
push
lods
stos
lahf
aas
sub
sub
lods
rcr
lea
das
in
push
rep
add
dec
aam
add
mov
ror
out
inc
jecxz
outs
and
arpl
loopne
int
pop
fiadd
pop
ret
sbb
mov
lods
cld
ins
xor
mov
es
mov
push
std
and
icebp
int
es
sbb
ja
jle
arpl
scas
or
or
jmp
out
in
xchg
outs
pop
in
test
and
push
inc
out
xor
fsubr
aad
xor
xchg
cmps
ds
test
popa
nop
jl
mov
add
mov
ds
jae
dec
out
sub
nop
xor
mov
inc
push
test
(bad)
mov
mov
call
xor
in
bnd
and
sbb
sbb
xchg
out
jo
(bad)
in
dec
fcom
or
cmp
inc
cmp
in
or
jne
daa
xchg
les
jecxz
xchg
push
sub
cs
dec
push
jle
pop
push
call
dec
xlat
add
pop
dec
jle
repnz
jp
test
adc
xchg
inc
mov
and
in
sub
ret
mov
retf
call
(bad)
and
dec
lds
cmc
xchg
retf
scas
push
cmps
add
add
lahf
sahf
push
push
xor
test
(bad)
xor
pop
xor
xor
inc
mov
test
jb
das
rcr
rcr
cmp
pop
mov
daa
push
and
xor
xor
sub
sub
jmp
xor
(bad)
or
stos
or
jae
test
js
pop
movs
pop
cmp
movs
xlat
sub
retf
xlat
cmp
sbb
xchg
jg
jne
pusha
out
lods
mov
data16
dec
jbe
sub
rcl
xor
mov
lea
loopne
or
scas
push
fsub
stos
(bad)
xchg
dec
mov
mov
push
sahf
jno
sub
cmp
fcom
in
sub
je
nop
dec
frstor
push
jbe
arpl
(bad)
push
icebp
xor
or
ins
jno
mov
mov
cmp
mov
add
jb
std
lahf
push
pop
jo
add
xchg
retf
add
inc
cmp
sbb
mov
xor
and
dec
fcomip
loope
inc
xchg
xor
mov
pop
(bad)
mov
xor
bound
sbb
add
rol
add
test
test
pop
test
sub
int3
fisttp
test
mov
(bad)
adc
jge
push
loopne
mov
popf
test
dec
push
aad
push
cld
daa
imul
sahf
xor
aad
xor
imul
aas
push
cmp
push
and
loopne
and
sub
and
ja
cli
add
fidiv
sub
mul
test
dec
mov
fbstp
out
push
rcr
pop
jge
int3
fwait
push
pop
fwait
jns
fs
pop
cmp
fbstp
jbe
mov
xchg
outs
ds
leave
jle
or
and
pusha
mov
dec
inc
cmps
cmc
js
fst
popf
(bad)
imul
popf
jnp
mov
xor
jmp
pusha
xor
inc
mov
push
cmps
movs
(bad)
or
add
mov
loopne
push
cmp
or
loop
sahf
ins
aaa
cld
or
(bad)
cwde
data16
ret
add
cmp
sbb
add
imul
adc
pusha
enter
xlat
arpl
repnz
outs
vandnpd
jo
and
jl
inc
mov
add
mov
in
sti
xchg
push
sub
mov
mov
push
mov
adc
push
test
nop
sub
cli
add
or
in
in
scas
pop
jno
ror
fmul
add
pause
and
out
inc
jge
dec
mov
(bad)
outs
out
bound
aam
stos
daa
xchg
mov
dec
mov
outs
or
jns
shl
ins
inc
repnz
jne
ficomp
mov
movs
movs
fisub
inc
cmp
jg
ds
dec
add
mov
cmc
scas
sti
and
call
jb
sub
retf
out
call
cmc
fst
and
adc
jmp
pop
outs
outs
mov
jle
cmps
and
sub
pusha
push
add
aas
jecxz
out
mov
mov
sbb
dec
mov
jmp
shr
cmp
iret
pop
xor
test
loope
fadd
xchg
loop
daa
push
outs
fnsave
and
jl
mov
push
dec
dec
stos
and
out
pop
test
pop
fistp
jmp
or
mov
int
call
cs
pop
mov
jnp
pop
cmp
mov
adc
and
push
js
xchg
rol
push
dec
mov
pop
xor
push
lock
adc
shr
and
pop
pop
popa
clc
cmps
jo
pop
in
and
(bad)
scas
pushf
retfw
dec
jge
mov
lods
push
add
inc
hlt
gs
xchg
loop
mov
test
adc
fadd
inc
pop
jg
jo
adc
mov
and
pop
ds
test
jecxz
jae
push
add
cli
lods
fsub
mov
inc
lds
retf
inc
inc
outs
and
xor
xor
sub
xor
and
scas
pop
(bad)
xor
xchg
xchg
stos
cmps
aad
mov
adc
pop
pop
test
push
push
pop
test
fld
shl
imul
call
mov
in
xchg
xchg
ss
pop
and
mov
ds
or
leave
fild
test
outs
or
out
icebp
mov
xor
adc
loop
sahf
pop
cld
rol
leave
iret
ins
add
jecxz
sub
cmps
mov
jmp
dec
inc
data16
jae
adc
gs
push
jbe
xchg
ins
add
out
lods
shl
fild
mov
out
test
adc
xchg
dec
push
out
mov
jp
and
imul
cmp
ret
and
sub
sbb
pop
out
rol
mov
pop
frstor
cmp
arpl
mov
mul
mov
and
fist
mov
adc
or
lock
jl
and
adc
popf
into
jg
jle
adc
test
sub
push
ficomp
js
mov
sbb
adc
adc
sahf
test
dec
xchg
enter
scas
mov
mov
(bad)
jg
push
ror
aam
push
or
movs
in
cmp
stos
inc
sub
push
sub
add
mov
fisttp
push
popf
ret
cli
out
call
cmp
mov
test
fnstsw
cmp
xor
mov
xchg
inc
mov
and
loope
call
jecxz
retf
or
sahf
jmp
in
scas
jnp
xor
pop
mov
inc
sbb
lds
data16
push
jnp
inc
rol
imul
xchg
add
call
jp
mov
mov
cmp
pop
in
pop
sub
jmp
imul
sub
(bad)
sbb
dec
mov
jae
xor
inc
cli
fsub
movs
loope
cwde
in
aad
sub
lea
xchg
icebp
ins
push
cld
loope
pop
sub
sbb
mov
mov
jmp
sbb
rcr
cmps
jae
jo
dec
ins
sbb
sub
sbb
in
mov
inc
jno
pop
out
or
aaa
sbb
adc
mov
cvtps2pd
jecxz
jb
ret
(bad)
scas
sub
ret
and
data16
xchg
retf
iret
in
jge
adc
dec
(bad)
jle
dec
xchg
loopne
adc
into
scas
shr
or
or
lahf
mov
aas
push
clc
int
jle
mov
jp
mov
iret
lahf
pop
dec
(bad)
icebp
je
xor
nop
mov
sub
fs
es
mov
lock
loopne
fmul
daa
ret
inc
mul
test
test
xchg
enter
push
movs
popa
dec
sbb
push
loopne
loope
jo
les
inc
pop
sub
push
dec
imul
test
cmp
outs
sub
xor
add
ins
mov
inc
imul
scas
cmc
jnp
ret
jecxz
push
out
dec
stos
shl
pop
jae
cmp
ss
xor
jbe
je
inc
add
push
push
push
push
(bad)
js
jae
or
lods
clc
addr16
xlat
or
jmp
in
adc
adc
aaa
aam
fcomp
inc
push
test
mov
xchg
mov
in
stos
and
sub
mov
inc
lods
jbe
shl
pop
ins
stos
out
aam
adc
in
or
jmp
push
and
inc
outs
cld
add
add
pop
sbb
sbb
adc
sub
mov
mov
or
nop
mov
xchg
sti
call
retf
ins
or
ds
and
shl
test
call
add
dec
movs
jne
sti
repz
ins
ja
mov
(bad)
mov
in
inc
test
xchg
jno
sub
aas
fild
xor
repnz
cmp
pusha
xchg
mov
add
(bad)
daa
and
push
sbb
fistp
dec
pusha
ret
test
ja
mov
cmc
xchg
(bad)
ja
enter
push
mov
fwait
push
mov
dec
stc
cdq
ret
pop
sti
or
push
push
mov
sub
push
sti
test
add
xor
xor
arpl
push
arpl
mov
mov
aas
xchg
(bad)
pushf
out
mov
jp
clc
outs
popa
das
jle
dec
fstp
and
(bad)
add
shr
pop
cs
das
rol
sbb
sbb
pop
gs
(bad)
int
out
rol
std
clc
popa
lahf
mov
scas
fwait
stc
fcomp
(bad)
es
idiv
pop
sbb
mov
neg
or
stc
ins
xchg
push
cmp
cld
mov
test
xchg
mov
test
popa
jg
loopne
adc
mov
jmp
add
in
xchg
xchg
jmp
push
test
mov
jb
xchg
xchg
jg
aas
cli
lods
jge
enter
retf
jo
out
dec
dec
int3
jmp
cmp
or
mov
jo
ror
call
bound
ret
std
popf
jg
push
cmc
push
adc
adc
test
or
pop
sub
leave
fsub
mov
xor
sub
sar
dec
pop
cmp
xchg
sahf
aas
repz
sub
cs
xchg
aaa
xchg
movs
fs
jns
cmp
jb
cmp
(bad)
jmp
xor
arpl
adc
je
jg
cdq
xchg
lods
pop
gs
sub
push
in
cmc
inc
sub
sub
jl
xchg
and
pushf
and
test
(bad)
popf
cmps
inc
stos
mov
mov
mov
iret
jmp
dec
jmp
and
adc
out
mov
mov
fild
push
push
mov
pop
dec
cli
jp
xlat
and
push
sub
fiadd
mov
jb
cld
fsubr
push
(bad)
mov
test
out
out
es
in
cs
out
stos
cmp
push
std
inc
mov
pop
pop
xor
cmp
mov
movs
imul
add
xor
cmp
jmp
aas
rcl
xor
cli
frstor
add
mov
pop
fld
push
fcmovne
pop
out
lock
cwde
dec
popa
add
pop
add
mov
adc
xchg
push
fnstenv
mov
cmp
das
pop
and
mov
dec
push
lahf
mov
stc
es
or
add
push
daa
xchg
pusha
icebp
adc
xor
fnsave
call
test
ins
push
or
test
jns
aam
aaa
xor
mov
lea
retf
fsub
fdiv
xchg
push
pop
dec
gs
imul
xchg
out
retf
adc
sar
jecxz
push
ds
aas
pop
ins
(bad)
loope
div
cs
out
rcr
mov
jp
std
xor
jae
lock
xlat
inc
jmp
adc
cmps
xor
push
mov
xor
ficom
ins
stc
scas
sbb
mov
sbb
not
and
push
mov
xor
lds
lods
dec
in
add
add
(bad)
retf
jns
pop
imul
mov
xor
jg
outs
pop
enter
mov
sub
mov
cmp
or
es
hlt
outs
popa
retf
pop
arpl
mov
mov
arpl
fst
jno
mov
sti
fld
enter
and
mov
pop
mov
jg
or
lods
and
or
gs
pop
shr
mov
sub
adc
push
jmp
and
xchg
sbb
mov
mov
xor
cwde
fist
std
data16
jo
cmp
pop
jle
dec
fild
sbb
add
das
cmps
mov
pop
mov
jno
ja
mov
shr
adc
mov
imul
mov
jo
xchg
loop
jbe
not
jo
nop
jae
imul
mov
push
adc
mov
popf
xchg
out
fidiv
xor
xor
enter
stos
inc
add
mov
jns
popf
adc
mov
xchg
pop
stos
cmp
iret
mov
dec
rol
push
(bad)
shl
in
stos
jge
cmps
call
mov
or
aam
sub
mov
xor
pop
fadd
jmp
test
jmp
xchg
retf
shr
dec
ins
stos
sub
ret
mov
fst
sub
jge
(bad)
aas
repz
retf
cs
sub
sbb
or
lock
cmps
fcmovnb
fdiv
cld
dec
inc
test
dec
mov
push
sub
popf
push
ror
pop
jae
xor
mov
imul
inc
jg
into
je
xchg
rep
sub
retf
test
add
mov
inc
ds
adc
jb
loop
cli
sbb
pop
pushf
cmps
jp
push
jb
ds
retf
clc
inc
jno
je
pop
ror
inc
mov
ins
sbb
mov
xchg
test
sub
push
mov
push
push
sbb
out
jbe
or
xchg
addr16
and
(bad)
pop
push
jbe
cmp
cmp
stos
adc
and
mov
popf
xchg
cmps
mov
jp
aam
fs
sbb
cmp
fld
aam
pop
rcl
or
mov
cli
fst
adc
lods
mov
aam
cmp
std
repnz
pop
sub
mov
adc
lea
push
rol
mov
cmp
(bad)
adc
std
ds
inc
adc
leave
mov
xchg
ja
xchg
sub
popa
lock
mov
mov
je
adc
les
inc
pop
cwde
mov
mov
inc
or
clc
cmps
inc
aas
pop
sbb
sbb
jmp
add
cmps
in
inc
dec
dec
mov
nop
dec
ins
dec
xchg
dec
fstp
repnz
push
or
cmc
mov
adc
and
scas
ret
dec
jnp
sbb
test
cmp
sti
jge
adc
mov
ja
add
push
repz
and
loop
pop
xlat
ins
sbb
and
jno
dec
ss
cmp
rcr
push
loop
shl
jg
js
pop
or
lahf
cmp
int3
nop
mov
dec
imul
pop
sub
scas
pop
cmp
shl
out
test
inc
sti
pop
and
push
fdivr
push
shl
xchg
cli
movs
dec
pop
mov
and
test
dec
cs
jae
outs
or
in
jnp
in
cmps
in
add
call
dec
or
sub
pop
pop
shl
(bad)
(bad)
into
movs
cmp
int3
inc
xchg
mov
mov
mov
pop
add
xlat
ins
sub
jmp
stos
and
adc
test
or
sbb
test
enter
inc
dec
into
cs
mov
mov
mov
fisubr
test
aas
retf
movups
stos
mov
jle
adc
dec
cmps
mov
xchg
inc
pop
pop
jle
lea
cmp
sti
call
(bad)
es
movs
sbb
jo
cmp
scas
dec
add
dec
cmps
xor
in
aas
retf
shr
cmc
cmp
(bad)
daa
adc
adc
(bad)
push
ss
lahf
in
xchg
les
inc
mov
cmc
push
out
cmc
mov
lea
gs
xchg
(bad)
js
imul
pop
fwait
mov
sub
cmps
pop
cmp
repnz
push
push
movs
ins
jmp
fcom
add
jmp
add
bnd
pop
test
mov
add
clc
sar
pop
xor
mov
cmp
pop
push
dec
lods
lods
nop
rol
dec
pop
pop
dec
fdiv
and
inc
ds
mov
jge
out
xor
jl
retf
adc
dec
addr16
dec
sbb
mov
and
dec
mov
jo
jp
mov
movs
mov
or
in
cmp
mov
mov
(bad)
pop
cld
leave
pop
pop
in
lods
iret
dec
mov
movs
sub
mov
mov
mul
add
stos
cmc
fstp
aam
mov
and
jg
retf
and
ud2
js
aad
push
cli
(bad)
sbb
lea
pop
dec
inc
inc
xchg
jmp
retf
mov
sub
inc
ins
dec
data16
sbb
pop
sub
test
xchg
loopne
dec
xchg
pop
std
and
xchg
add
adc
fsubp
mov
mov
jmp
and
or
or
mov
bound
aam
dec
sbb
(bad)
aad
or
inc
push
sub
mov
int
arpl
sahf
sbb
loopne
cmp
sub
ss
mov
dec
sub
icebp
fisub
inc
cwde
pusha
ret
aaa
or
cmp
outs
xchg
cmp
inc
adc
rcl
and
iret
aam
jmp
in
ins
inc
inc
hlt
fnstsw
push
xchg
push
jnp
fwait
push
mov
and
sbb
popa
xchg
mov
jbe
lods
lds
pop
sbb
mov
stos
shr
jnp
push
jae
and
pushf
inc
jmp
or
(bad)
fmul
in
xor
adc
sbb
push
ss
pop
fcomi
jmp
pop
int
jbe
jns
push
push
sahf
sbb
(bad)
jle
dec
test
push
cmp
mov
clc
sbb
xchg
mov
mov
fcmovnbe
clc
mov
jge
add
nop
jns
fst
xor
jmp
stc
cs
mov
cld
push
call
int3
in
or
imul
sub
and
mov
mov
push
sahf
or
and
jbe
xchg
je
mov
rcl
js
lea
loopne
sub
xlat
leave
pop
dec
xor
jnp
(bad)
aaa
inc
es
nop
ja
movs
std
or
ror
sar
sbb
neg
add
sbb
sti
jnp
call
sahf
mov
jnp
sub
lods
retf
in
ror
aaa
cmps
inc
add
mov
retf
inc
je
jne
call
gs
shr
xchg
rcr
push
inc
add
mov
std
mov
rcr
in
xchg
and
inc
adc
and
inc
mov
sahf
mov
setge
push
aas
mov
stc
xor
arpl
inc
push
shl
pop
daa
xor
mov
and
sub
daa
aad
adc
inc
inc
push
psubq
add
xor
aam
test
sub
(bad)
in
mov
jle
jne
cld
lahf
jnp
pop
ret
dec
fld
loop
not
xor
cdq
fwait
mov
pop
out
stos
jmpw
xor
cli
pop
fdivp
push
loop
iret
out
test
inc
push
shl
or
fisttp
and
mov
sub
leave
in
xchg
out
jge
jle
inc
and
cmp
in
ficomp
push
(bad)
push
sahf
out
push
or
ret
xchg
aad
(bad)
pusha
(bad)
sti
jp
pusha
rcr
push
in
xchg
jns
movs
pop
xchg
mov
retf
js
inc
or
adc
add
xlat
popa
jl
xor
inc
lds
mov
repnz
jnp
clc
add
push
pop
push
jo
mov
loope
xor
jmp
and
add
or
out
hlt
add
les
fist
sub
mov
adc
gs
inc
test
xchg
mov
mov
pop
pop
stos
std
bound
es
or
pop
push
repnz
lahf
mov
cmp
inc
outs
fwait
mov
sahf
cmc
xor
fwait
test
pop
sbb
mov
mov
sub
js
mov
call
cli
outs
mov
inc
inc
pminsw
dec
sub
pusha
out
js
lock
(bad)
jl
dec
xlat
addr16
idiv
pop
jl
mov
les
movups
repnz
mov
lods
repz
cmp
mov
sub
or
push
jno
pop
test
push
les
test
jo
jne
inc
jmp
push
pop
jg
adc
and
inc
addr16
mov
ret
in
repz
push
xchg
stos
xchg
dec
add
lahf
int
jp
in
inc
stos
xor
adc
ja
and
xchg
repz
cmc
add
sub
sub
mov
mov
imul
xor
or
enter
sbb
out
or
int3
repnz
mov
pop
sbb
xlat
shl
dec
adc
cmp
mov
dec
pop
mov
lfs
stc
lahf
sub
ja
pop
lods
loopne
repz
mov
sar
call
les
jp
mov
ds
scas
sub
dec
test
int
fidiv
test
js
int3
pop
dec
inc
js
enter
mov
bnd
clc
push
jge
dec
in
pop
pop
(bad)
jnp
add
sub
mov
movs
push
ss
lods
icebp
push
adc
adc
lock
cld
cld
or
pop
xchg
xor
mov
cli
fwait
shl
jns
mov
in
push
in
inc
or
(bad)
jmp
retf
pop
and
aas
cwde
iret
sub
cld
leave
sbb
pop
or
inc
retf
cmp
push
push
add
jmp
std
repnz
dec
aad
push
shl
push
in
jp
and
inc
mov
adc
aam
dec
xor
movs
add
das
mov
sub
and
into
inc
or
push
sub
push
xor
mov
push
xchg
lds
cmp
sub
scas
inc
fs
dec
sub
icebp
(bad)
fimul
movs
inc
xchg
fs
hlt
xor
push
dec
(bad)
jmp
fadd
push
ror
inc
mov
cmc
pop
and
iret
std
push
pop
xchg
loopne
aam
outs
std
bnd
out
pop
rcr
arpl
js
jecxz
or
aam
or
mov
jnp
hlt
loopne
mov
leave
jg
dec
cmp
stos
inc
push
jae
test
jmp
sub
ret
aas
and
cli
mov
mov
stos
bound
xor
dec
clc
and
xor
xor
psubb
add
and
dec
jg
sti
ds
mov
enter
cmps
pop
xlat
adc
(bad)
fld
dec
sub
lods
and
clc
xchg
xchg
adc
push
outs
ficomp
jo
sbb
inc
sahf
lods
adc
mov
xor
or
stos
and
adc
ja
fisttp
enter
or
pop
or
pusha
movs
dec
and
push
cmp
dec
ret
mov
mov
out
jmp
outs
mov
or
pop
(bad)
pop
or
ins
push
outs
and
and
pop
idiv
(bad)
in
call
adc
add
jmp
bnd
dec
fild
test
jp
mov
mov
inc
outs
lds
std
cld
push
dec
pop
jl
mov
inc
xchg
add
inc
xchg
(bad)
jae
and
sahf
xchg
cmps
nop
sub
sbb
pusha
sub
retf
inc
sbb
add
and
loopne
add
jmp
xchg
mov
cmp
lods
fcomip
pop
sub
fs
mov
mov
jae
sub
push
ds
aad
shl
out
xchg
pop
xor
shl
sub
fstp
stos
icebp
stc
xchg
(bad)
and
mov
lea
nop
mov
mov
pop
fsub
hlt
call
arpl
(bad)
sar
pop
mov
addr16
xor
or
shr
jl
test
repz
repz
leave
mov
hlt
nop
(bad)
in
sub
in
push
daa
sub
and
call
(bad)
cmp
jne
out
mov
ins
sbb
push
lods
lea
xlat
mov
imul
jg
je
int3
sbb
xor
fdiv
sub
mov
mov
fs
dec
xchg
lds
xor
movs
push
cmp
xor
and
jbe
adc
xchg
addr16
clc
int3
(bad)
test
sbb
xor
(bad)
push
dec
mov
test
and
cmps
lahf
pop
into
call
xchg
mov
mov
push
pop
pop
aas
pop
mov
push
cmp
jnp
mov
outs
cwde
or
mov
jbe
std
mov
dec
cmps
xor
addr16
fs
retf
and
jo
xor
xchg
cwde
jb
jmp
mul
es
and
xor
cmc
popf
vmwrite
pop
sar
mov
cmp
test
(bad)
pop
stc
pop
adc
addr16
sub
sub
repz
push
imul
out
and
cmp
dec
ja
iret
and
or
pop
mov
lock
call
clc
fcmovb
xchg
sar
out
jne
dec
mov
ds
clc
gs
or
fst
sub
ss
mov
into
sub
(bad)
mov
fwait
sub
pop
stos
mov
pop
div
ja
push
test
clc
mov
adc
xlat
xchg
pop
push
push
aaa
hlt
cmc
rcr
jno
out
repnz
lods
or
sti
push
push
icebp
movs
and
pop
xor
cmp
es
ins
out
fcmove
out
dec
jno
xor
fldenv
cmps
jmp
or
or
add
xor
mov
xchg
inc
inc
ss
cmps
adc
pop
std
clc
add
fldcw
cmp
neg
mov
js
xor
cmp
movs
add
add
mov
sub
xchg
cmc
in
mov
adc
mov
test
daa
dec
test
or
push
outs
leave
popf
rcr
mov
sbb
cmp
outs
dec
data16
cmp
add
inc
push
jae
add
fisttp
push
jp
fiadd
xchg
in
mov
jmp
enter
lock
hlt
(bad)
mul
or
push
dec
popa
out
jmp
mov
iret
(bad)
adc
jle
loope
ret
mov
jmp
push
test
mov
test
add
test
cmp
rol
jecxz
popf
or
lea
mov
cmps
aaa
outs
or
ins
fnsave
imul
push
mov
out
aad
cmp
jp
pop
mov
mov
jecxz
mov
test
cmp
mov
loope
gs
shr
xlat
push
push
retf
mov
and
mov
mov
jle
mov
ins
mov
out
test
lea
ss
or
pop
cmps
imul
mov
loopne
mov
mov
ds
pop
cld
xchg
adc
popw
movs
pusha
ja
cmp
or
mov
loopne
mov
xor
and
sub
pop
dec
pop
(bad)
xor
mov
sti
and
out
lods
sub
in
shr
mov
push
mov
xlat
test
int3
push
out
ror
rcl
and
jp
arpl
inc
aaa
push
repz
pop
ss
cmp
push
jp
or
jns
(bad)
scas
xchg
mov
mov
fsubr
aad
(bad)
adc
shl
mov
imul
inc
les
cmc
fild
stos
test
jecxz
fsubr
adc
jmp
fldlg2
punpckhbw
sbb
imul
(bad)
int
inc
mov
repz
ret
int3
xor
imul
data16
aaa
call
jge
pop
sbb
or
aam
jbe
cdq
jg
test
xchg
es
and
jl
jno
mov
push
cmps
arpl
(bad)
adc
pop
adc
mov
jg
sbb
jp
push
sub
ja
imul
aas
push
jecxz
xchg
sti
or
(bad)
pop
retf
xor
add
xor
jbe
push
pop
inc
das
push
daa
xor
je
jmp
pop
mov
stos
in
or
push
ds
jle
mov
mov
push
sub
inc
hlt
pop
(bad)
ficomp
cmc
adc
icebp
add
jo
jae
add
je
push
sbb
icebp
std
pop
or
test
cmp
jge
out
fistp
sahf
xchg
pop
sar
loope
add
lahf
clc
jle
dec
sti
add
test
xor
xchg
adc
sub
xor
sbb
or
inc
xchg
adc
inc
mov
cmp
out
sti
(bad)
loope
pop
fdiv
sub
add
scas
out
lahf
jns
inc
adc
int3
pusha
jne
mov
pop
push
jle
add
loopne
add
jp
pop
sub
and
rol
ds
retf
hlt
repz
int3
adc
repnz
add
jmp
mov
cmp
cmp
js
fimul
sti
mov
mov
mov
jg
aam
xlat
imul
std
mov
pop
cmp
shl
daa
mov
scas
std
lahf
cs
dec
fs
jle
out
push
push
cmps
fld
scas
shl
or
xchg
or
push
test
js
or
dec
icebp
lods
(bad)
sbb
shr
enter
sbb
cld
mov
or
cmp
gs
pop
jno
adc
jg
cmp
movs
push
das
ret
mov
and
into
ret
pop
push
cld
fsubr
jmp
std
repz
jmp
test
ror
jp
(bad)
data16
cdq
inc
mov
and
cmp
cmp
daa
xchg
(bad)
sub
sti
dec
(bad)
shr
sub
fcom
mov
and
xchg
mov
mov
test
daa
or
pop
jle
sti
out
push
lds
mov
or
clc
in
test
adc
dec
test
xor
jno
mov
dec
mov
inc
imul
ret
inc
lds
shr
and
xchg
xchg
dec
cmp
es
push
pop
pop
push
xor
dec
lahf
inc
sub
pop
outs
dec
jle
sbb
pusha
icebp
lds
js
push
dec
retf
mov
sub
dec
fucomi
or
and
js
nop
sti
mov
lods
call
call
push
or
outs
clc
mov
pop
stos
fld
(bad)
mov
pop
movs
pop
adc
enter
(bad)
in
pop
inc
mov
inc
aaa
cmp
cmc
jl
test
xchg
loope
aam
stos
jle
mov
push
data16
and
mov
leave
jb
retf
push
inc
into
sbb
test
sub
ret
adc
mov
or
pop
pusha
mov
cdq
enter
xchg
pop
mov
pop
or
mov
mov
ds
cmp
mov
pop
add
retf
xchg
ss
mov
inc
scas
sbb
jecxz
mov
xchg
sbb
jecxz
ret
dec
sbb
pop
mov
and
sar
add
fistp
mov
mov
mov
enter
imul
ss
push
scas
stos
push
mov
inc
inc
aad
lods
ror
pusha
mov
jnp
test
mov
mov
jbe
cmp
or
lock
sbb
shr
jbe
cld
shl
addr16
cli
lahf
fistp
mov
std
bound
sbb
pop
clc
sub
sub
pop
sbb
push
cld
dec
popa
cmps
cwde
pop
pop
(bad)
loopne
jl
xchg
cmp
pop
jle
int
mov
data16
pop
dec
cmp
jb
dec
mov
adc
scas
xor
cdq
mov
pop
fadd
xor
xor
les
(bad)
in
mov
hlt
stos
pop
movs
out
xchg
add
ins
add
rcl
mov
push
dec
(bad)
xchg
mov
dec
mov
pop
fld
add
hlt
and
stos
es
ret
pop
dec
xor
mov
mov
fisub
loopne
call
pop
mov
xor
stc
int
fistp
xor
xchg
movs
rcr
mov
jecxz
mov
ror
(bad)
jbe
mov
cdq
in
daa
es
inc
jmp
not
xchg
pusha
add
test
and
fsub
aaa
(bad)
je
js
pop
mov
jle
mov
jne
jmp
je
jmp
retf
jno
daa
adc
rcr
ja
push
cmp
out
or
pop
mov
outs
xor
cmp
iret
push
mov
sti
push
mov
xlat
rol
mov
in
jbe
leave
mov
or
mov
dec
mov
sub
in
repz
and
fmul
cmp
fisttp
dec
dec
push
pop
ins
mov
push
(bad)
popa
sbb
push
add
fidiv
lods
cmps
dec
int3
bound
neg
loope
fidivr
xchg
hlt
movs
fdivr
mov
js
sbb
jae
mov
xor
mov
retf
push
mov
add
xchg
jge
test
int
pop
test
jmp
cmp
arpl
add
lock
mov
xor
xchg
and
or
xchg
push
or
mov
adc
xchg
fistp
pop
sub
or
test
imul
scas
cmp
(bad)
mov
or
adc
push
xchg
add
repnz
cdq
pop
add
and
addr16
mov
jle
lods
mov
adc
lea
movs
adc
jae
xor
outs
fs
or
int
sbb
nop
hlt
push
inc
aaa
mov
fmul
outs
cdq
je
ins
inc
in
adc
adc
and
jmp
mov
mov
pop
jmp
mov
imul
rol
mov
fistp
xor
sub
sbb
frstor
pop
jl
jns
adc
fild
lods
out
mov
mov
push
xchg
idiv
idiv
sbb
sub
icebp
ss
mov
pop
lods
cmc
int
pop
imul
loopne
mov
xchg
sub
and
xchg
mov
xchg
imul
iret
mov
sbb
shl
(bad)
mov
pop
xchg
sub
mov
xor
mov
push
bound
inc
out
rol
nop
dec
mov
imul
fstp
sub
mov
cwde
test
(bad)
nop
push
xchg
adc
adc
jg
rcl
(bad)
push
jl
out
add
shl
(bad)
loop
aas
inc
mov
sub
mov
dec
arpl
lods
arpl
add
jno
push
xchg
jb
loop
mov
add
xchg
cmp
sbb
outs
xchg
ja
lock
mov
(bad)
xlat
pop
xchg
mov
dec
or
loopne
dec
shl
rcr
and
fadd
repz
aad
repz
cdq
pop
jnp
mov
ret
cmp
popf
pop
mov
retf
or
pop
not
or
loop
inc
lds
(bad)
js
enter
mov
add
pop
out
jmp
mov
test
mov
mov
xchg
popa
or
or
push
dec
push
retf
and
lds
call
aas
sbb
pushf
adc
sbb
aas
jp
pop
fwait
cmp
jle
fldcw
repz
xor
test
int
cmp
int
ins
mov
jp
xlat
jmp
das
outs
dec
jno
mov
push
xlat
mov
iret
lock
mov
sub
test
(bad)
adc
repz
xchg
adc
sbb
mov
aad
cwde
pushf
jmp
push
sub
in
pop
lock
(bad)
stos
pushf
and
int3
adc
dec
xor
scas
cmp
adc
pop
div
sbb
fld
scas
sar
loopne
hlt
mov
mov
out
adc
mov
inc
pop
test
cmp
cmp
or
inc
jo
sbb
daa
sahf
xchg
and
inc
(bad)
repnz
sub
and
pop
mov
sahf
fadd
cmp
ds
cmp
push
push
(bad)
jnp
add
out
dec
push
push
jnp
sub
gs
mov
pop
mov
xchg
pop
enter
adc
out
mov
jno
or
int3
push
cmps
loope
(bad)
call
jmp
(bad)
neg
or
aad
xchg
push
mov
ds
aad
xchg
jae
jbe
mov
sub
add
or
push
les
shr
dec
lea
ret
fcomi
fimul
push
dec
pop
inc
cmp
xor
hlt
lds
and
xor
mov
test
cli
push
sub
out
add
add
dec
jl
test
xlat
sbb
shl
dec
aad
cdq
pushf
repnz
test
xchg
jp
push
call
sbb
ins
pop
cmp
mov
rcl
adc
mov
lods
add
jo
jl
cmp
lahf
sbb
sbb
call
cdq
mov
push
adc
test
xchg
scas
pop
push
push
aam
movs
mov
mov
push
clc
jle
mov
xchg
inc
cmp
loope
hlt
fstp
dec
jp
test
(bad)
cmp
fst
xchg
mov
push
iret
or
fnsave
fst
jecxz
jle
or
adc
or
je
test
ret
cdq
(bad)
mov
or
cmp
cmp
ins
pop
aaa
clc
push
jl
push
mov
dec
sub
es
jno
std
arpl
daa
loope
scas
xchg
mov
leave
lea
clc
iret
(bad)
mov
out
sub
es
movs
test
dec
lods
cmp
xchg
loop
ins
jp
ret
cli
retf
pop
daa
dec
xchg
pusha
and
mov
mov
jl
fidivr
addr16
dec
push
jmp
xchg
mov
xor
adc
call
or
ja
neg
(bad)
xchg
jnp
jno
lds
mov
lock
mov
mov
jae
jmp
mov
clc
pop
fs
repz
aad
dec
push
pop
or
mov
jnp
push
sbb
shr
fsubr
push
push
inc
cdq
mov
cmp
sti
sub
(bad)
lea
(bad)
ja
or
mov
mov
retf
inc
retf
dec
(bad)
xchg
(bad)
cmp
jg
out
dec
lods
shl
lds
call
xchg
imul
sahf
mov
jmp
mul
add
mul
test
cwde
shr
dec
ficom
mov
adc
popa
out
inc
retf
frstor
jne
push
cmps
bound
outs
lods
mov
dec
fwait
std
mov
mov
cmp
dec
dec
imul
in
xor
xor
es
les
sbb
and
jmp
jmp
mov
ins
outs
push
repnz
adc
dec
dec
xchg
jmp
pusha
dec
mov
dec
mov
lahf
mov
test
or
stos
test
push
cli
aaa
pop
or
add
pop
adc
sbb
idiv
jnp
xor
cdq
push
in
and
add
push
sbb
es
imul
mov
fs
push
jbe
shl
mov
push
jge
or
les
add
(bad)
or
clc
push
inc
sti
fwait
inc
jmp
mov
inc
mov
(bad)
pop
fsubp
fcmovu
xlat
loopne
cli
fild
jmp
cmp
movs
sub
inc
adc
mov
in
or
jbe
fild
daa
mov
mov
dec
cdq
sub
dec
rcl
cmp
ret
push
mov
mov
lahf
in
ins
lods
sub
jne
or
inc
iret
imul
bswap
pushf
outs
out
jno
xchg
popa
bound
in
stc
out
pusha
sti
sub
shl
mov
inc
push
jge
sub
fstp
mov
push
mov
aas
pop
push
push
push
lahf
out
dec
in
inc
test
jp
mov
add
push
push
sti
int3
cs
xchg
xor
jno
jb
push
pushf
pop
scas
dec
fstp
pop
xchg
movs
pop
outs
and
jle
movs
in
repnz
(bad)
fnsave
scas
out
push
out
sub
push
push
in
pop
add
adc
mov
lods
sub
jp
xor
(bad)
nop
pop
shl
ja
js
jmp
test
sub
aas
inc
icebp
jge
mov
test
jno
test
loop
cmp
adc
sbb
fbld
push
and
sub
fstp
mov
mov
(bad)
std
inc
ret
and
hlt
call
mov
(bad)
iret
sbb
inc
sub
rol
pop
inc
(bad)
mov
inc
or
aad
xor
jmp
jp
mov
out
retf
int3
mov
lea
xchg
jo
add
lods
mov
mov
dec
push
or
dec
(bad)
shl
push
or
mov
iret
xor
aas
hlt
pop
mov
and
inc
into
jb
push
sbb
(bad)
xchg
sbb
mov
call
stos
fcmovnb
es
scas
or
mov
mov
cmp
cdq
mov
ins
fucomp
ret
ins
cmp
icebp
ss
xor
adc
dec
call
cmp
sbb
aas
out
adc
cmp
lods
ins
sub
jmp
ret
or
adc
xor
adc
(bad)
call
and
cld
xor
mov
mov
ss
or
or
mov
shl
(bad)
sub
movs
cmp
xchg
mov
test
rcl
xchg
enter
addr16
cmps
lahf
and
ja
test
mov
fisub
push
mov
add
js
(bad)
xchg
(bad)
push
mov
lock
cmp
neg
pop
leave
in
fistp
pop
pop
sbb
retf
rcl
push
xchg
sub
aad
or
popf
xchg
xchg
lds
int3
sar
cmovnp
aam
pop
jecxz
in
or
or
mov
inc
aam
pop
ds
out
cli
fidiv
adc
jae
les
cmp
mov
inc
in
call
dec
cld
sbb
cmp
mov
shr
lock
test
cmp
out
ins
cs
mov
movs
fs
jge
cwde
std
xlat
jl
xor
add
addr16
mov
ins
pop
xor
or
inc
pop
nop
and
xchg
jle
mov
dec
pop
je
call
xor
outs
sahf
jno
icebp
sub
out
arpl
inc
pushf
pushf
push
stc
jge
aad
jmp
mov
out
xchg
aaa
aas
inc
rcl
mov
fwait
push
xor
movs
push
dec
pop
not
or
xor
ret
mov
(bad)
sbb
lds
xchg
or
xchg
adc
mov
fs
cmps
scas
jno
push
addr16
popf
mov
inc
jl
ret
fs
push
dec
fcom
dec
push
bound
hlt
loope
jbe
lock
retf
(bad)
mov
mov
mov
mov
add
pop
sahf
addr16
call
sti
adc
(bad)
or
mov
fneni(8087
xlat
jbe
adc
inc
mov
mov
dec
out
dec
jecxz
sbb
adc
fldcw
cs
mov
sub
dec
ja
push
xchg
fidivr
add
(bad)
inc
mov
xchg
xchg
in
mov
adc
sub
mov
cld
mov
retf
imul
in
out
pop
mov
mov
and
mov
sub
sub
mov
cmp
push
imul
mov
fdivr
dec
outs
dec
bound
(bad)
jp
rcr
setnp
cmp
xor
push
mov
mov
inc
int
push
mov
dec
cmp
inc
and
cmp
jno
int3
retf
xor
pop
xchg
jl
jmp
jns
in
mov
(bad)
cmps
imul
adc
fld
lea
cmp
or
ja
pop
xchg
fld
push
push
mov
inc
test
sub
cmp
test
mov
out
pop
ds
icebp
mov
push
(bad)
repz
mov
push
dec
repz
stos
sub
jb
es
pusha
js
dec
mov
jecxz
loopne
dec
gs
icebp
push
add
outs
xchg
cli
dec
xor
jmp
or
mov
imul
es
jl
push
call
push
fs
jb
fcmovne
jg
mov
mov
shr
mov
pop
pop
xor
jecxz
mov
adc
mov
loope
push
call
lock
fnstcw
ja
mov
push
xchg
jnp
add
test
loope
inc
ret
adc
inc
mov
stc
xlat
dec
or
outs
in
jns
aam
mov
cmc
fsubr
out
sub
int
inc
or
fisub
clc
push
and
inc
xchg
pop
or
mov
mov
dec
mov
push
jae
into
cmc
sub
dec
jb
stos
mov
scas
in
cmp
mov
fldcw
jmp
add
xor
out
xchg
cmp
jmp
jmp
imul
cmp
mov
sbb
xchg
fistp
in
push
mov
lea
push
nop
and
push
mov
pop
xchg
mov
repz
ins
lock
stc
std
mov
xor
js
xor
and
popa
and
xchg
addr16
popa
cmp
mov
test
(bad)
in
push
stc
hlt
sbb
xchg
aas
aad
mov
xor
addr16
jmp
jmp
retf
sub
fyl2xp1
lea
push
push
or
test
mov
pmaddwd
xchg
or
gs
cwde
dec
adc
movs
dec
inc
xor
les
jmp
pop
sbb
(bad)
adc
leave
push
push
push
mov
push
xor
jne
mov
and
mov
jnp
inc
arpl
mov
and
jnp
and
retf
jnp
dec
lea
push
imul
mov
cmp
aaa
sbb
jle
out
repnz
push
retf
popa
stc
adc
popa
push
loope
jmp
jg
enter
mov
adc
mov
cdq
sub
xchg
data16
(bad)
leave
nop
aas
mov
dec
add
inc
pop
pop
call
push
jecxz
cli
push
cmps
fdiv
loopne
inc
pop
(bad)
lock
rcl
or
xor
pop
fadd
adc
pop
movs
mov
xlat
push
movs
bound
int
xchg
rcr
nop
xor
in
stc
cld
pop
adc
lahf
xchg
or
mov
outs
and
push
dec
nop
cdq
sysenter
sub
inc
test
pop
jl
add
ret
mov
xchg
call
adc
fiadd
hlt
jbe
scas
ja
or
in
xchg
(bad)
inc
jg
jl
mov
sub
mov
es
popa
push
and
cs
xchg
addr16
es
and
sub
mov
jge
add
fprem1
js
lods
scas
pop
xor
or
or
lds
outs
lea
inc
ffree
leave
and
and
sahf
pop
adc
jns
or
sub
rcr
push
and
adc
ins
jg
adc
sahf
push
(bad)
imul
sahf
mov
loop
test
lods
daa
aaa
sub
add
xchg
imul
test
jmp
fwait
cdq
push
cmp
inc
sub
test
xchg
mov
xor
fsub
mov
sub
not
xchg
adc
jmp
icebp
sbb
sub
push
movs
dec
or
add
push
push
sti
xor
call
arpl
frstor
push
dec
mov
mov
popa
ret
imul
mov
xor
xchg
aad
xchg
mov
fimul
retf
jge
ds
neg
push
and
mov
ficom
and
sub
mov
mov
(bad)
push
fs
xor
mov
mov
add
mov
inc
mov
shl
jl
and
mov
nop
data16
in
js
xchg
imul
fistp
jmp
ins
push
xchg
test
and
adc
mov
sub
adc
test
out
cmp
scas
and
loop
pop
adc
mov
sbb
jecxz
jb
xchg
pop
lea
cld
adc
xor
call
int
cmp
push
xchg
in
fnstcw
push
aaa
loop
pop
lods
lahf
sub
cmp
ins
cli
stc
sbb
or
jae
or
test
adc
add
fdecstp
std
pop
retf
loopne
jl
mov
mov
or
push
jecxz
imul
and
shl
inc
rcr
outs
adc
rcl
mov
in
push
and
mov
jae
sbb
jno
rol
and
dec
out
scas
in
adc
add
popf
aas
sbb
mov
sbb
std
and
xlat
jmp
and
pop
(bad)
movs
mov
or
scas
cmp
mov
sub
and
icebp
in
sbb
jae
xchg
out
stc
sub
pop
in
mov
jp
in
mov
rcr
inc
adc
jecxz
mov
in
and
mov
inc
ins
sahf
cmps
cmp
jle
add
mov
popf
inc
rcr
jmp
lock
xlat
mov
movs
fnsave
(bad)
push
cdq
push
gs
or
inc
rcr
repnz
cmps
push
mov
mov
addr16
inc
fcom
dec
sub
test
ror
enter
in
jmp
outs
pop
mov
scas
xor
mov
and
inc
cmp
shl
mov
outs
daa
sub
mov
xor
dec
cmp
in
sahf
mov
out
lea
inc
nop
xchg
test
mul
hlt
out
xor
lods
cli
in
call
pop
add
enter
push
jle
push
inc
xor
int
lea
ret
inc
cdq
sub
test
scas
aam
imul
(bad)
sub
jmp
sbb
sub
pop
dec
cmps
fiadd
movs
hlt
fld
mov
fadd
inc
fcomip
jg
and
xor
and
or
adc
ins
(bad)
icebp
and
jl
jae
mov
ds
mov
mov
adc
test
cmp
jg
jmp
push
into
(bad)
xchg
adc
or
daa
inc
sub
das
dec
icebp
sub
repz
shl
mov
rcl
xchg
shl
out
add
push
or
sbb
mov
out
mov
jo
mov
clc
call
and
mov
(bad)
cli
dec
(bad)
clc
cli
jne
repnz
or
mov
or
jecxz
inc
out
(bad)
lea
or
cmp
shl
(bad)
out
mov
mov
in
std
neg
xor
cs
out
int
clc
and
add
cdq
outs
dec
mov
jno
mov
mov
jl
adc
fisub
repnz
mov
ficomp
stos
cmp
fsubr
(bad)
imul
fsub
data16
sbb
dec
shr
sbb
outs
dec
(bad)
push
aam
inc
mov
fst
mov
pop
add
cld
cmp
and
retf
outs
cmp
test
fdiv
les
sti
jnp
jno
call
mov
(bad)
cmp
mov
inc
push
add
mov
cmp
lods
scas
test
dec
cmps
test
inc
or
leave
mov
ret
adc
pop
xor
fwait
cmp
push
xchg
jmp
arpl
jbe
pop
nop
inc
aaa
rcl
jno
xchg
mov
jg
adc
pusha
mov
jle
push
dec
dec
loope
push
cs
sub
mov
adc
jl
xor
sub
inc
mov
fidivr
mov
imul
stos
push
shr
jecxz
push
fs
addr16
fnstsw
xchg
adc
and
mov
mov
pop
retf
pop
xchg
and
(bad)
inc
fistp
cwde
shr
push
and
inc
lods
adc
in
call
lods
ds
out
xchg
mov
pop
cmp
xor
packuswb
(bad)
cmp
sub
fisubr
ins
push
xchg
or
jmp
ja
rol
push
fmul
push
in
iret
sub
sbb
jae
cmp
mov
lahf
gs
ins
pop
dec
adc
sub
jl
inc
test
jne
arpl
xchg
shl
mov
out
fwait
push
push
cmp
mov
mov
inc
add
mov
xchg
mov
nop
fdivr
out
jle
aad
add
xor
or
mov
shl
clc
int
popa
(bad)
pop
mov
js
jge
mov
or
cli
or
mov
sub
js
mov
add
loope
xor
icebp
sub
idiv
cmp
loope
ds
ins
jge
popa
xchg
adc
jne
(bad)
in
fmul
lods
leave
cmp
inc
ins
xchg
test
call
xchg
add
and
add
xor
lds
push
xchg
neg
jmp
in
xchg
adc
sti
int3
xchg
dec
mov
stc
scas
inc
cld
lods
jl
sbb
aaa
pop
ret
xor
xchg
stc
cmc
fcompp
mov
clc
and
ret
add
ins
mov
sbb
mov
sub
pusha
push
dec
add
mov
adc
bound
loope
(bad)
in
xor
cmp
mov
adc
mov
out
fiadd
xor
jo
push
lods
fadd
xor
sar
xor
int3
mov
popf
ror
and
jno
leave
and
push
mov
div
sbb
icebp
jb
add
xchg
fnstsw
aad
cwde
xor
ins
jge
loopne
xchg
pop
mov
jmp
call
adc
pop
xchg
and
fidivr
cmp
push
call
and
mov
in
mov
enter
sbb
cmp
(bad)
imul
in
fisttp
and
jo
pop
ror
inc
lods
ret
xor
aam
test
adc
push
and
cmp
jecxz
mov
xor
lock
xchg
sub
xchg
inc
pop
mov
mov
rcr
sub
jno
mov
push
mov
dec
icebp
outs
and
loope
fiadd
retf
jo
out
pop
add
int
jno
add
mov
aaa
lahf
jge
aaa
mov
or
js
sbb
repnz
(bad)
fiadd
xchg
(bad)
out
jle
and
retf
rol
pop
push
mov
scas
daa
gs
dec
fwait
aaa
jo
out
fsubr
rol
fcmovnb
into
int
imul
jne
test
cmp
sbb
mov
ret
(bad)
jmp
or
add
cli
lds
in
pop
in
stos
aad
cmp
sub
pop
add
into
in
rol
lods
fsubr
popa
push
and
fwait
mov
cmps
icebp
scas
dec
cdq
stos
outs
or
cmp
icebp
sbb
mov
scas
xor
pushf
or
xchg
or
dec
out
ficomp
and
lahf
bnd
add
enter
pop
in
xor
jmp
icebp
ficom
or
sahf
cmp
lods
retf
test
loopne
xor
jno
sub
movs
mov
xchg
xchg
xchg
in
sub
in
into
fwait
dec
push
sbb
mov
int3
sbb
pushf
mov
sbb
or
rcl
xchg
int
bound
cli
lods
aad
ja
add
push
dec
mov
mov
mov
addr16
cli
mov
dec
inc
idiv
jl
jmp
(bad)
(bad)
fldenv
ficomp
sbb
(bad)
movs
dec
ret
dec
adc
add
push
mov
scas
loop
xchg
sbb
push
or
mov
js
jns
xlat
xor
sbb
mov
stos
mov
test
pop
adc
leave
movs
pop
add
into
jge
in
inc
push
push
lods
fimul
shr
sub
mov
or
jb
mov
and
enter
mov
mov
fldenv
and
dec
cmps
mov
cmps
(bad)
dec
(bad)
fdivp
cmp
cmps
mov
repz
shr
jl
cmp
pop
cmc
stc
sub
pop
xchg
inc
imul
cmp
cmova
jmp
mov
je
jb
mov
and
ror
sbb
pop
shl
push
out
jb
mov
fcomp
std
lods
or
or
ret
nop
pop
mov
pushf
jle
ss
push
cld
mov
stos
pop
cmp
jmp
mov
xor
push
fs
stos
xchg
adc
pusha
inc
jbe
push
fisubr
icebp
popf
pusha
lds
or
ins
jg
cmp
xlat
arpl
xlat
push
sbb
or
jg
xor
xor
pusha
mov
call
in
xchg
jo
aad
aas
imul
add
repz
mov
outs
pop
shl
dec
pop
sbb
cld
mov
les
lahf
ins
sbb
add
shl
or
(bad)
mov
arpl
pop
add
fs
and
sub
jge
pop
inc
xor
dec
ds
fs
xor
pop
cmps
push
jae
mov
dec
pop
imul
sub
pop
sub
inc
(bad)
out
mov
push
xchg
ror
cwde
cmp
mov
jo
jae
test
pop
adc
mov
sub
imul
in
xor
int
pop
mov
add
mov
cmp
pop
rep
xor
addr16
push
in
inc
push
in
es
cmp
inc
pop
mov
popf
in
outs
mov
xor
sub
add
lods
into
repnz
iret
fs
inc
ficom
ss
xlat
sahf
mov
push
inc
gs
sbb
mov
scas
ror
movs
daa
inc
es
dec
in
fist
fisubr
sbb
retf
xchg
add
or
retf
nop
adc
mov
aas
xchg
movs
adc
out
sbb
adc
cmc
sub
imul
pop
ror
mov
cld
push
xchg
mov
and
vphaddubq
ds
xchg
mov
inc
lods
add
mov
ds
ins
repnz
rcr
call
or
sub
scas
stc
lea
test
push
dec
sub
jae
dec
fdiv
es
sbb
xchg
lea
dec
lea
data16
nop
jbe
xlat
jmp
ins
pusha
pop
fdiv
ss
div
arpl
int
sub
or
(bad)
inc
add
add
jmp
xor
inc
jmp
push
(bad)
imul
cmp
jae
and
push
xor
dec
loopne
mov
pop
popa
cmp
pop
push
(bad)
xor
and
cmps
push
push
popf
pop
sar
xchg
xchg
call
inc
scas
and
push
fadd
jmp
sbb
pop
(bad)
or
mov
xchg
jne
push
out
adc
daa
iret
into
call
or
xchg
adc
fidivr
ficom
push
ja
jmp
mov
sbb
sub
cmc
push
pop
mov
xor
repnz
sub
call
cmp
ror
jge
test
push
das
xor
dec
mov
xlat
adc
sub
out
xchg
jnp
loope
xchg
jns
repz
mov
ret
gs
movs
cmp
stos
repnz
inc
sbb
mov
gs
pop
out
out
sub
cmc
call
sub
inc
loope
xchg
dec
(bad)
or
sub
or
sbb
mov
stos
addr16
adc
ss
cdq
xlat
in
or
sbb
push
mov
(bad)
mov
aaa
xor
sbb
pop
sbb
nop
idiv
pop
adc
mov
sbb
pop
(bad)
mov
fidivr
aam
or
dec
aam
jg
loopne
fs
jg
int
xor
add
sahf
inc
sub
out
pushf
fsub
cmp
dec
adc
or
push
js
sbb
(bad)
retf
stos
dec
add
adc
ins
pushf
pushf
xor
jns
test
int3
inc
mov
pop
dec
sub
ret
pusha
push
pusha
jns
jns
dec
jb
pop
test
jbe
inc
into
imul
rcr
cmp
scas
test
out
shr
retf
inc
push
dec
xchg
dec
push
loope
inc
lock
outs
pushf
jmp
mov
dec
and
aas
xchg
scas
mov
mov
pop
adc
cmp
adc
stos
xchg
mov
mov
sbb
ss
sahf
ins
add
imul
mov
sub
push
dec
movd
mov
jge
movs
xadd
cdq
arpl
pushf
fnsave
pop
xchg
in
sbb
xchg
or
popa
xchg
adc
mov
lds
inc
lock
lods
shl
lahf
ins
ss
les
sbb
pop
xchg
out
mov
adc
mov
add
ins
mov
out
cmp
(bad)
adc
mov
adc
dec
ja
in
xchg
sbb
retf
hlt
sub
push
ins
ror
inc
ret
and
dec
mov
dec
les
sti
sar
ss
pcmpeqw
dec
jns
je
inc
bnd
test
dec
jns
add
cmp
mov
sub
ins
div
fsubr
cmp
(bad)
jmp
adc
and
push
cs
(bad)
lods
mov
test
mov
xchg
je
xlat
repz
adc
imul
pop
enter
push
mov
sub
jmp
push
fwait
gs
cmp
outs
cmp
out
dec
mov
(bad)
stos
ror
dec
cs
fs
mov
loope
ins
push
leave
jo
xor
add
jbe
loope
scas
sbb
aam
jo
adc
fsubr
cmc
loop
rcr
retf
xchg
pop
je
int
adc
adc
add
jno
fld
cmps
loope
mov
cmp
fwait
pop
mov
mov
das
cmp
idiv
clc
jne
mov
xor
mov
xlat
leave
mov
es
add
sbb
in
cmp
lea
mov
test
fild
fnstcw
dec
loop
lea
sar
mov
jmp
sbb
and
stos
and
jp
pop
sahf
iret
inc
js
arpl
outs
in
add
jp
cld
fisubr
add
xchg
in
adc
add
jnp
in
in
stc
(bad)
retf
nop
push
arpl
(bad)
adc
popa
pop
aas
xor
pop
dec
cmp
or
sub
jmp
aad
fstp
sbb
jbe
adc
mov
xor
ret
out
xchg
not
sub
mov
jge
out
dec
pushf
sub
enter
inc
add
mov
addr16
(bad)
cs
sar
test
retf
test
push
shl
rcr
sbb
fs
mov
mov
inc
push
or
mov
jl
ja
cmps
jp
test
mov
xchg
xchg
push
out
aaa
sub
jg
mov
sbb
adc
xor
cmp
or
add
jge
mov
push
push
adc
inc
mov
ins
mov
imul
scas
ret
adc
gs
ror
mov
aad
push
leave
mov
fnstenv
fwait
ja
xor
outs
mov
xor
jbe
cmp
mov
das
aad
xchg
add
call
lahf
push
mov
sbb
aad
mov
xor
push
enter
add
push
mov
or
add
mov
pop
push
std
arpl
call
retf
(bad)
(bad)
mov
mov
fs
jmp
cmp
mov
enter
dec
mov
jmp
dec
jmp
fldcw
imul
adc
cwde
dec
js
xor
and
loopne
mov
pop
daa
or
stos
mov
push
(bad)
cdq
(bad)
push
call
lods
rol
lods
sbb
lds
or
push
popf
loope
cmp
sub
mov
mov
mov
jge
addr16
aam
push
test
shl
jb
out
jmp
into
add
popf
scas
push
add
lods
or
jmp
push
div
mov
mov
retf
adc
idiv
sbb
cdq
mov
xchg
(bad)
in
sub
dec
cs
mov
xchg
out
gs
push
repz
imul
loop
sub
(bad)
test
cmc
inc
cli
sbb
cmp
jnp
sbb
out
and
pop
adc
pop
sbb
das
test
icebp
mov
pusha
into
iret
xor
scas
hlt
retf
imul
scas
aam
jmp
mov
sbb
sbb
sbb
rol
jmp
add
ds
mov
mov
xchg
add
out
push
lods
or
or
xchg
jo
mov
sbb
xchg
clc
rcl
cmp
dec
mov
mov
sbb
mov
movs
ret
sahf
test
cdq
mov
jae
jo
fs
sub
arpl
cs
popf
jno
out
retf
pop
retf
scas
xchg
inc
sub
fs
adc
dec
dec
jo
out
mov
les
(bad)
lods
inc
mov
jne
dec
xchg
(bad)
push
push
and
cmp
in
jb
or
cmp
ins
mul
push
sbb
add
jp
test
ins
xchg
xlat
push
sbb
clc
and
xor
mov
(bad)
inc
mov
dec
repz
or
pop
or
mov
or
jge
xchg
xor
arpl
xchg
test
aaa
dec
fstp
mov
mov
add
pop
clc
out
aaa
stos
ds
add
jnp
pop
or
jmp
cmp
rcl
int3
xor
gs
pop
mov
dec
xchg
pop
push
ins
mov
aas
jne
mov
mov
push
cmc
xchg
cmp
outs
cmps
shl
sbb
xor
aad
call
sub
xchg
dec
xor
pushf
or
ins
mov
sub
xor
pop
mov
hlt
out
pop
ret
add
sbb
rcr
jne
xchg
lods
and
add
in
out
call
and
cmp
ror
imul
(bad)
and
data16
pop
dec
push
xlat
push
cmps
sahf
xlat
lods
cmp
sbb
add
pop
retf
push
mov
push
cmp
push
jecxz
sbb
xchg
add
mov
ficom
repnz
imul
outs
pop
add
fsub
adc
std
xlat
cs
nop
push
arpl
in
or
cmp
mov
loope
lea
mov
(bad)
push
push
mov
movs
retf
cmps
cld
cmp
(bad)
popa
enter
sbb
inc
adc
jl
cmp
loop
xor
ret
sub
cmp
add
stos
or
push
sub
and
sbb
adc
adc
jge
inc
pop
xor
lods
mov
xlat
loop
dec
xchg
cwde
pop
jmp
jb
sub
div
in
daa
jp
dec
mov
sub
icebp
sub
int
(bad)
mov
inc
mov
retf
dec
pop
mov
add
inc
pop
add
mov
jle
shl
xchg
jno
pop
adc
lods
sbb
aad
ficomp
push
adc
scas
mov
cwde
inc
push
xchg
jl
push
dec
mov
dec
loopne
retf
shl
xchg
sub
cmps
pop
xor
adc
cdq
enter
pop
jg
imul
pop
jp
xchg
mov
and
sbb
or
icebp
jae
sub
or
sbb
add
jle
cld
adc
out
cmp
loop
fcomp
cmp
mov
sub
xchg
fdiv
mov
xchg
xchg
xchg
jecxz
inc
or
jmp
xor
xchg
fld
daa
test
int
aad
xchg
push
push
push
cmp
test
sar
shl
jno
and
cmp
dec
nop
repz
in
adc
aas
int
out
xor
out
xor
aad
aas
lock
xchg
iret
fist
and
lahf
out
lods
cmp
mov
loopne
bound
jns
and
mov
lds
adc
clc
pop
adc
dec
mov
lods
std
cdq
icebp
jnp
sub
add
push
mov
mov
cmp
mov
sbb
fcomp
xchg
int
sub
jecxz
pop
shl
test
fild
neg
call
cs
xor
scas
or
loop
cmp
int
test
dec
dec
dec
or
mov
mov
inc
add
test
mov
retf
shl
push
or
and
jg
fcom
rol
add
fist
adc
sbb
xchg
pushf
adc
mov
mov
test
or
ds
icebp
or
adc
das
sahf
lea
sub
bound
popa
push
add
cmc
and
mov
xchg
repz
push
call
outs
imul
arpl
pop
mov
into
cli
xor
adc
jmp
xlat
pusha
pop
jnp
les
sub
cmps
push
pop
push
pop
rcr
mov
inc
lea
(bad)
fs
or
call
not
fwait
hlt
adc
mov
ret
xchg
pop
mov
push
or
push
inc
dec
frstor
sbb
das
shl
push
jp
repz
mov
sub
sub
fidivr
outs
jmp
jnp
(bad)
in
pusha
mov
aam
xchg
sbb
in
push
inc
push
div
push
mov
mov
and
stc
ins
mov
imul
inc
std
ins
cmps
mov
jmp
xchg
div
das
jl
dec
into
movs
dec
jae
dec
mov
inc
mov
lds
ret
jge
loope
pop
int
cdq
or
rcr
add
idiv
adc
int
lods
pop
jno
xlat
shl
out
pop
fcmovbe
iret
imul
or
push
shr
xchg
fild
mov
push
repnz
cmp
sub
imul
dec
aam
dec
call
fsubr
cmp
aas
cmp
out
js
aaa
jmp
cmp
jmp
add
push
scas
les
ficomp
fisttp
int3
and
add
imul
mov
dec
dec
push
stos
test
push
cmc
repnz
int3
inc
fdiv
call
or
aas
rcr
iret
inc
sbb
imul
ret
cmps
xchg
dec
pop
mov
ds
pop
imul
dec
repnz
jge
ins
and
mov
enter
or
fwait
retf
outs
enter
rcr
scas
jb
xlat
scas
push
mov
mov
fadd
jmp
lea
cmp
pop
fistp
jae
mov
jo
imul
add
or
and
cdq
pop
pop
push
cmp
mov
mov
adc
out
push
xchg
lods
adc
push
in
mov
mov
ins
jnp
stos
out
sub
scas
outs
cwde
aam
inc
jno
pop
mov
fistp
xchg
fs
xor
nop
retf
dec
sbb
or
in
out
mov
lock
sub
(bad)
inc
test
ins
out
dec
stc
xchg
inc
inc
call
scas
shl
dec
in
jecxz
in
ins
popa
iret
push
mov
adc
pop
xor
pop
xor
mov
jl
push
jmp
xor
ins
lods
movs
dec
sbb
push
ret
mov
adc
or
inc
(bad)
aad
xor
xchg
adc
ret
js
rcl
stos
inc
xchg
out
es
jno
cwde
outs
outs
inc
adc
aad
cdq
mov
sub
arpl
ins
jne
rcr
xchg
outs
dec
js
jl
(bad)
jo
mov
add
repz
hlt
adc
add
aad
aas
or
cmp
loope
or
cmps
cli
cmc
sti
mov
push
call
xor
mov
fnsave
ds
push
dec
add
jle
test
pop
(bad)
jle
pusha
xor
or
mov
xchg
cmp
and
push
push
and
pop
popf
dec
cmp
cmp
fwait
jle
mov
into
jmp
jno
in
push
arpl
outs
push
xlat
out
jnp
inc
pop
sbb
push
sbb
mov
mov
sbb
or
sub
repnz
mov
lods
lock
jp
or
mov
sub
jmp
fwait
xor
mov
in
mov
sbb
pop
add
(bad)
not
push
fnsave
and
mov
popa
pop
inc
add
push
rol
inc
shl
xchg
mov
jbe
push
and
fxch
ds
adc
lods
repnz
or
ret
in
vpsubb
add
mov
xchg
jb
nop
fnsave
int
lahf
iret
push
mov
lahf
pop
mov
cmp
inc
lahf
pop
sub
sub
push
sbb
adc
sub
mov
fdiv
mov
inc
inc
lahf
arpl
lahf
sub
or
imul
lea
dec
xor
adc
xchg
pusha
stos
jnp
xchg
inc
cwde
xor
push
mov
jl
mov
aaa
mov
mov
inc
push
mov
dec
mov
or
inc
mov
jae
inc
mov
sub
jns
pop
stos
dec
fwait
xor
or
test
and
imul
push
xor
sub
pushf
mov
ins
fst
push
mov
sbb
or
sub
cmps
shl
out
inc
mov
mov
outs
xchg
dec
mov
cmps
xchg
es
call
das
or
pop
push
sbb
pop
fwait
pusha
inc
and
outs
dec
loope
pushf
stc
add
nop
out
sbb
jmp
out
mov
fdivr
sbb
sahf
sub
out
shl
fbstp
pop
push
cmc
sub
ret
jnp
das
fsubr
pop
mov
and
push
mov
mov
shr
xor
rol
inc
mov
cmp
pop
outs
inc
dec
movs
push
(bad)
sbb
jne
js
mov
dec
daa
push
pop
xor
cmp
outs
jecxz
or
jo
idiv
push
jno
adc
xor
std
and
sub
jo
xor
push
pop
xchg
(bad)
fs
test
sbb
dec
sti
and
dec
fs
push
leave
mov
push
or
imul
test
push
jnp
or
inc
jns
cmps
icebp
dec
rcr
lock
stos
out
cdq
adc
mov
sub
sbb
in
and
cmc
mov
ja
cmp
je
jne
dec
xor
jmp
lods
mov
jb
cli
sbb
js
xor
and
lods
jbe
mov
sbb
and
xchg
inc
(bad)
push
out
outs
push
add
adc
pop
pop
mov
les
xchg
mov
(bad)
aas
sub
daa
jecxz
mov
loope
in
shr
pop
std
add
addr16
popa
dec
sbb
in
pop
mov
(bad)
push
sahf
cld
or
fmul
or
sub
jecxz
clc
sub
and
pop
push
aad
add
and
or
ficomp
mov
ja
pop
in
in
fcomi
nop
lods
fdiv
or
inc
mov
(bad)
ficomp
aad
and
(bad)
push
shl
add
(bad)
mov
xor
fsubr
inc
mov
jbe
loope
aad
xor
outs
mov
dec
std
mov
mov
push
std
das
cli
sub
cmps
or
retf
jmp
pop
mov
lahf
pop
loope
cs
and
in
loope
mov
in
nop
and
or
mov
(bad)
mov
sub
fcomp
punpcklwd
dec
in
(bad)
mov
pushf
xchg
(bad)
jb
mov
cmp
lock
sbb
fiadd
je
int3
push
dec
dec
mov
sub
sti
or
pop
ja
add
mov
push
dec
pop
jmp
adc
aad
out
jo
pop
cmp
xor
sbb
adc
retf
test
mov
jle
stc
fbstp
test
scas
dec
into
(bad)
dec
(bad)
mov
xchg
xor
leave
pop
lds
in
(bad)
(bad)
or
rcl
icebp
jns
push
cmp
jo
sahf
sub
jmp
xchg
push
popf
mov
pop
mov
repnz
mov
fstp
push
jmp
fmul
(bad)
sbb
dec
and
stos
cs
xchg
dec
clc
xchg
in
nop
pop
xor
adc
push
sub
movs
pop
xchg
dec
mov
cld
or
adc
pop
hlt
jo
(bad)
inc
call
sar
jmp
xchg
pop
ret
pop
xchg
pop
in
pop
mov
shl
test
rcr
pop
mov
retf
sti
cmp
nop
xor
push
in
shr
sub
mov
or
retf
xchg
or
or
push
pop
shr
imul
mov
inc
aam
scas
mov
shl
add
jge
lea
jmp
dec
inc
push
jle
fs
adc
fisub
lods
sbb
cmp
int
iret
into
pop
in
xchg
add
mov
dec
cmp
(bad)
push
lock
cmp
call
ficom
xor
fdiv
pop
xlat
clc
mov
icebp
imul
sub
fs
jg
jo
mov
mov
push
pop
clc
add
fwait
pop
and
cdq
pop
xor
(bad)
inc
outs
scas
adc
outs
cmp
nop
clc
jmp
or
in
pop
xor
icebp
neg
stos
mov
cmp
xor
mov
js
dec
loop
clc
xchg
cli
outs
jp
jnp
cmp
push
push
(bad)
(bad)
imul
jecxz
push
xor
xchg
push
aaa
xchg
inc
mov
stc
mov
xor
and
inc
push
enter
clc
mov
ds
(bad)
in
cmp
test
xchg
jge
jae
push
dec
mov
add
xlat
pop
xchg
cmp
fcmovu
and
enter
cmp
daa
or
dec
imul
ds
dec
pop
mov
fs
cli
pop
ret
xchg
mov
ins
dec
inc
stos
mov
pop
inc
lds
repnz
mov
mov
jp
ds
pop
data16
mov
test
or
sub
rol
xchg
mov
cmc
mov
(bad)
add
jmp
jecxz
popa
retf
jge
lds
jb
ja
mov
adc
adc
retf
mov
sub
ins
mov
and
retf
or
dec
push
push
addr16
cmp
loop
xchg
adc
xchg
and
std
cmp
mov
ins
rcr
fmul
test
jno
mov
out
push
push
call
icebp
mov
cmp
fild
and
and
cmp
not
push
inc
in
or
loop
xlat
adc
lods
retf
xor
mov
icebp
popf
iret
aam
or
(bad)
scas
dec
mov
sub
mov
imul
bound
cmp
popf
(bad)
jge
dec
neg
adc
push
fsubr
mov
and
xor
jecxz
fsubr
xchg
sub
inc
xchg
push
inc
(bad)
cmp
loop
outs
xor
shl
retf
stc
aaa
mov
xchg
les
es
aas
xor
adc
or
test
in
enter
icebp
jle
xor
add
popf
pop
leave
(bad)
loope
pusha
sbb
lds
push
mov
xchg
sbb
pop
pop
push
cdq
(bad)
mov
loop
lods
les
sub
or
jmp
inc
xchg
inc
out
jo
out
pop
push
cmp
(bad)
cmp
xor
jo
mov
test
mov
add
shr
out
add
rcl
and
rol
mov
jae
test
loop
ror
lods
xchg
std
shr
xor
je
jge
ins
test
xchg
cmc
sti
xchg
dec
pop
ret
cmp
out
mov
(bad)
(bad)
icebp
and
in
clc
outs
mov
push
hlt
xchg
cmp
into
add
mov
jge
clc
mov
xlat
sub
add
lock
add
stc
cmc
dec
and
dec
mov
xchg
ins
xchg
test
es
stos
pop
xlat
mov
adc
pop
arpl
or
out
or
push
push
cmps
fdivr
movs
or
sar
dec
xchg
loope
addr16
nop
retf
jmp
scas
pop
(bad)
push
cmp
dec
push
lahf
jo
stc
inc
inc
mov
gs
cld
and
outs
jne
jb
or
icebp
in
sbb
jne
pop
or
mov
fisubr
and
mov
jo
sahf
scas
add
mov
aam
push
pop
test
lock
xor
jecxz
ins
mov
(bad)
stos
push
mov
sub
and
ret
or
jmp
adc
scas
push
or
ins
shl
add
dec
aaa
test
in
es
retf
ja
stos
lea
mov
in
ficom
test
fdiv
mov
jns
js
push
into
sbb
out
sbb
mov
daa
jmp
test
je
shl
fld
or
adc
rcr
adc
call
sbb
pop
test
aam
cld
xchg
test
sar
cmc
xchg
(bad)
fs
inc
adc
jbe
add
mov
jecxz
rcr
fbld
mov
jmp
sbb
dec
xor
aaa
mov
bound
les
xchg
xor
sti
jecxz
test
or
dec
push
les
dec
clc
sbb
dec
aad
cmp
xchg
(bad)
pop
pop
(bad)
mov
lods
sub
repz
and
pop
test
icebp
ficomp
mov
popa
retf
movs
(bad)
pop
jne
lea
jecxz
add
(bad)
imul
jmp
retf
leave
push
sbb
fwait
cmp
mov
fstp
mov
sub
ja
mov
fwait
out
mov
test
jl
xchg
or
jge
push
cwde
jge
mov
daa
mov
or
mov
into
xchg
jb
(bad)
jae
xchg
jl
lds
(bad)
fiadd
push
push
out
xchg
(bad)
pusha
lock
pusha
(bad)
cdq
push
jmp
adc
stos
cmps
jmp
jp
dec
fld
lahf
(bad)
or
ds
movs
push
dec
imul
push
call
gs
sbb
mov
jno
mov
inc
nop
pop
scas
in
fcomip
pop
in
jae
and
rol
lods
inc
lock
mov
nop
mov
jl
pop
movs
retf
push
inc
icebp
jbe
cmp
(bad)
mov
xor
mov
push
in
arpl
movs
xchg
sbb
or
sbb
or
mov
jg
loope
jge
in
mov
loopne
push
stos
add
cmp
popa
add
call
adc
test
cmp
dec
repz
in
jnp
push
mov
hlt
dec
fwait
in
jecxz
(bad)
cmps
lods
cmps
jno
xor
mov
rol
leave
ja
and
fwait
int
cdq
push
mov
mov
xchg
add
sar
clc
stos
iret
xor
push
mov
in
xor
mov
outs
dec
sbb
fwait
mov
jge
xlat
sbb
xor
mov
jo
jnp
(bad)
mov
in
add
mov
inc
enter
test
(bad)
aam
adc
aaa
add
cmps
aas
sub
mov
xor
xchg
mov
ins
push
mov
pop
inc
mov
xor
mov
movs
mov
outs
les
push
(bad)
mov
fidivr
inc
mov
nop
sub
add
ror
dec
mov
mov
inc
pop
push
ficomp
test
add
inc
(bad)
pop
loope
or
test
sub
gs
sub
ss
(bad)
mov
sbb
push
sbb
inc
adc
outs
xor
popa
add
sbb
hlt
aas
add
xchg
pop
xor
fmul
fdivr
pop
mov
js
dec
inc
ins
sub
mov
int3
cmp
and
pushf
sub
mov
dec
xchg
add
sub
push
xchg
cdq
sbb
in
das
stos
idiv
rcl
loope
inc
mov
inc
inc
adc
(bad)
cmp
mov
idiv
loope
push
ins
movs
pop
out
mov
js
pop
push
je
push
outs
ds
out
test
popf
hlt
sbb
xchg
fs
mov
inc
cdq
scas
and
add
inc
or
and
xlat
mov
arpl
inc
cwde
(bad)
dec
jae
lahf
bnd
adc
mov
movs
mov
dec
or
xchg
jg
xor
repnz
pop
adc
xchg
lods
mov
pop
sub
enter
ret
mov
jne
cld
sbb
and
push
arpl
mov
inc
xchg
inc
retf
add
jge
dec
inc
push
dec
mov
mul
jmp
in
mov
pop
ficomp
cli
(bad)
arpl
or
pop
adc
xor
lock
stos
sub
popa
mov
xchg
pop
mov
sub
push
ror
pop
aad
(bad)
xchg
int3
push
(bad)
retf
arpl
mov
sub
cmc
or
xchg
ins
shr
in
pop
gs
fsubr
(bad)
xor
stc
sahf
mov
nop
cmp
aas
mov
icebp
jne
pusha
movs
inc
inc
aam
xor
mov
pushf
inc
sub
mov
xchg
mov
mov
jo
sbb
lds
addr16
mov
dec
sbb
sub
sub
pop
mov
pusha
xor
push
int
test
mov
and
or
or
outs
push
mov
mov
push
push
stc
xor
sbb
pop
lock
mov
adc
addr16
and
aas
inc
dec
xchg
sbb
lods
and
nop
jp
jno
adc
test
lahf
pop
in
bound
xor
mov
in
dec
je
push
les
out
mov
mov
fs
ret
push
mov
aas
jmp
mov
xchg
push
mov
jns
fnstenv
popa
(bad)
adc
and
fwait
sbb
jne
por
iret
sbb
scas
push
stos
jnp
push
shl
lea
fst
jp
xor
fcmovnu
inc
mov
cmp
sbb
movs
outs
mov
pop
dec
pop
xor
push
adc
push
inc
leave
jmp
push
pop
xchg
cmp
lock
mov
cmps
push
add
dec
mov
push
push
iret
sbb
out
sbb
adc
mov
or
in
loope
dec
lea
dec
xor
test
jecxz
leave
pop
cmp
mov
and
jae
xor
retf
mov
jle
and
push
jo
dec
mov
xlat
jecxz
(bad)
fild
(bad)
lds
lds
sbb
jae
or
push
in
jnp
mov
and
sbb
xchg
fs
out
leave
movs
jl
(bad)
mov
fistp
imul
jecxz
sub
fcmovnu
or
stos
ds
shl
mov
push
cmp
adc
xchg
in
jle
pop
jae
repnz
jo
call
test
mov
inc
push
out
dec
daa
xchg
sub
add
sbb
mov
push
mov
clc
mov
lock
(bad)
imul
mov
adc
stc
fistp
sub
pushf
jle
pop
xchg
push
shl
mov
push
mov
mov
mov
ins
sbb
bound
in
pop
pop
hlt
sti
push
lods
and
and
fmul
add
xchg
inc
adc
push
pop
push
mov
dec
or
push
or
or
sub
and
push
shr
stos
and
add
mov
leave
xor
sub
out
pushf
add
adc
sar
clc
push
mov
inc
cmp
iret
xchg
jno
inc
call
mov
mov
cmp
jle
xchg
popa
xor
(bad)
xchg
inc
ins
mov
(bad)
sbb
pushf
shl
fsubr
fwait
mov
lods
jnp
or
inc
add
mov
pop
aad
push
mov
xchg
push
sbb
cmps
in
ficomp
hlt
and
fmul
and
mov
hlt
pop
iret
repnz
and
jns
mov
lea
mov
jae
mov
pop
mov
cmps
repz
in
jno
mov
sub
fsubr
xchg
loop
and
test
xlat
cmp
mov
mov
arpl
imul
pop
dec
mov
lock
mov
loopne
out
aad
ins
sub
enter
mov
retf
fcomp
pop
mov
jne
and
pop
dec
push
jecxz
cmc
mov
test
dec
fisttp
jnp
gs
jmp
out
adc
addr16
gs
jp
sbb
movs
sbb
and
repz
lds
lock
shl
dec
aaa
cmps
add
loopne
icebp
cmp
xor
push
xor
mov
inc
pop
out
test
inc
(bad)
scas
or
and
mov
int3
fidivr
jmp
std
mov
add
or
inc
(bad)
outs
repz
rol
(bad)
jno
mov
loopne
mov
jbe
dec
jnp
push
test
rol
add
mov
int
(bad)
cmp
sbb
inc
fistp
lea
movs
mov
daa
arpl
js
imul
ja
in
fdiv
and
push
lock
cmp
js
adc
or
jae
cli
stc
hlt
push
ret
cmp
out
or
dec
inc
cli
pop
fcomp
cmp
das
jns
xchg
sub
rol
ds
jge
dec
aaa
test
dec
fdiv
es
test
ror
cmp
inc
retf
clc
cmp
sbb
xchg
xlat
adc
add
jae
mov
inc
dec
cmps
scas
cmp
lods
jbe
adc
int
cli
sbb
mov
jns
movs
push
cmp
push
push
mov
push
xchg
cmp
es
pop
adc
addr16
push
xchg
aam
pop
scas
mov
dec
cmp
cs
push
jge
dec
sbb
dec
ret
add
mov
ja
inc
(bad)
lods
cmp
add
outs
jne
movs
out
repz
xchg
adc
xor
aam
dec
sbb
push
int
push
cdq
popf
rol
(bad)
adc
or
fsubr
cmc
mov
and
jecxz
cwde
pop
jmp
bound
repz
fsub
pop
lahf
mov
add
xor
fsubp
ss
adc
repz
inc
sbb
sbb
sub
jg
push
mov
inc
mov
or
and
pop
mov
je
pusha
pop
push
pop
mov
out
xchg
daa
std
nop
cld
fist
test
push
outs
push
add
jbe
mov
adc
pop
(bad)
adc
mov
mov
dec
or
fmulp
pop
cmp
lods
lds
shl
pusha
jecxz
inc
ins
dec
imul
or
jb
std
mov
add
aam
imul
and
pushw
movs
sbb
mov
in
fs
and
movs
pop
sbb
add
inc
stc
xchg
(bad)
pop
js
xor
push
sbb
xor
movs
in
jno
pop
inc
test
repnz
cmp
ins
(bad)
cmp
pusha
mov
aad
cmp
in
adc
jmp
fist
into
fdivr
aam
xchg
sub
or
jp
std
arpl
movs
push
enter
pop
pop
cs
xor
push
fucomi
call
mov
sar
hlt
mov
mov
cmps
fbstp
dec
test
dec
retfw
cs
cld
pop
imul
dec
popf
xlat
das
jmp
movs
mov
pop
rcr
in
mov
and
out
inc
adc
scas
or
inc
pop
jmp
adc
sbb
rcl
xchg
mov
int
int
sbb
call
cmps
in
mov
sub
or
adc
in
icebp
call
push
bound
jmp
stc
(bad)
push
xor
adc
gs
hlt
aas
lock
jnp
add
fdivr
and
xchg
or
daa
mov
or
cmp
fcom
mov
fstp
repz
popa
and
sbb
ret
bound
pop
sub
cld
jno
adc
mov
pop
outs
dec
in
pusha
bound
cmp
push
lahf
adc
lahf
loopne
or
sti
ret
add
mov
and
cdq
aaa
mov
cmp
pop
pop
sub
pop
das
cli
inc
lea
sbb
in
sbb
icebp
mov
sbb
pop
pop
xor
into
cmps
cmps
std
adc
mov
dec
pop
adc
ss
push
mov
inc
mov
adc
leave
mov
xchg
mov
xor
jl
daa
out
push
arpl
std
ss
xor
or
je
arpl
outs
leave
lahf
sub
and
jae
xor
mov
jmp
push
xchg
jbe
daa
sbb
push
jle
adc
repnz
nop
clc
nop
jmp
mov
outs
mov
fidivr
xchg
mov
shl
mov
push
and
xor
jmp
pop
push
addr16
out
xor
or
stos
lods
popf
inc
xchg
div
int3
pop
in
call
jmp
(bad)
jge
sbb
mov
push
cmp
call
add
into
outs
je
xor
imul
adc
sbb
push
push
xchg
arpl
sbb
cmps
pop
jecxz
jo
stc
jmp
push
mov
ret
adc
sub
mov
pop
loope
push
push
dec
push
ror
sub
in
gs
(bad)
imul
xchg
(bad)
and
sub
mov
cwde
jae
push
push
and
pop
sbb
mov
and
xor
movs
int
mov
push
and
movs
add
std
in
sub
mov
dec
sahf
out
xchg
adc
add
ss
dec
mov
sti
xchg
add
call
pop
lds
rcr
jle
psubb
iret
jno
inc
sbb
test
add
dec
jbe
sbb
clc
xor
xchg
lods
push
enter
mov
cdq
repz
js
push
add
arpl
call
movs
repz
stos
inc
push
sbb
ret
(bad)
cld
pop
(bad)
sar
movs
clc
dec
loop
adc
ja
inc
test
pop
pop
inc
jp
in
push
mov
sbb
sbb
dec
adc
mov
cli
std
lahf
jge
xchg
push
cli
cmp
fcomi
mov
imul
div
scas
or
xchg
mov
(bad)
std
xlat
adc
imul
xchg
push
in
imul
cmp
jecxz
or
cmpps
pop
das
sbb
retf
dec
mov
sti
into
jmp
(bad)
push
fidivr
imul
mov
(bad)
pop
fild
adc
jae
test
sbb
sbb
mov
aaa
int
cmps
fucomip
sbb
mov
inc
mov
outs
or
and
out
push
adc
pushf
leave
sti
inc
inc
cmp
scas
add
sbb
imul
data16
lds
scas
loopne
pop
or
jbe
outs
mov
mov
hlt
jl
add
add
dec
scas
jg
cld
and
clc
mov
dec
push
stos
ds
push
cli
iret
inc
(bad)
jg
psllw
xchg
iret
cmp
sub
inc
inc
test
and
pop
test
outs
outs
into
sub
loop
mov
retf
or
(bad)
out
popf
test
cmp
cwde
mov
sbb
adc
sti
jmp
dec
icebp
lahf
or
outs
not
cmp
inc
xor
sbb
xchg
(bad)
outs
jmp
sbb
cmps
sahf
shl
add
adc
cmps
jecxz
ficomp
movs
jge
xor
jg
(bad)
out
mov
loope
test
or
pop
call
jae
mov
push
mov
mov
out
dec
int
jle
fwait
ja
xor
xlat
mov
data16
jg
adc
cmp
pop
mov
sub
fst
pop
cdq
into
mov
xrelease
xlat
push
out
adc
pop
lock
fwait
into
jmp
std
xor
mov
lea
fstp
cdq
cmp
push
adc
cmp
aaa
mov
mov
cmp
ja
cli
hlt
xchg
cmp
or
xchg
aam
icebp
xchg
aas
rol
push
dec
adc
rcl
adc
fnstsw
xchg
dec
adc
push
pusha
(bad)
(bad)
es
xor
ss
repnz
sahf
inc
fdivr
mov
daa
call
adc
dec
imul
add
ja
gs
dec
out
das
and
sub
aaa
shl
pop
mov
js
pop
pop
adc
loope
cmp
mov
xor
xor
hlt
arpl
leave
mov
fidivr
dec
dec
neg
xchg
xor
adc
dec
xchg
jl
add
retf
and
adc
inc
cld
das
jecxz
hlt
retf
sbb
or
xor
sbb
pop
add
mov
sbb
leave
pop
or
xchg
fnstsw
es
jle
push
clc
sub
mov
es
pop
gs
mov
dec
shl
add
sub
mov
dec
cmps
hlt
sbb
mov
fiadd
jo
jle
movs
push
enter
sar
(bad)
mov
jecxz
icebp
pop
daa
push
jp
cmc
movs
mov
mov
and
sub
enter
enter
(bad)
xchg
aas
jge
neg
sub
cmc
jl
bound
lods
jle
aad
aad
bound
or
movs
or
das
(bad)
jmp
mov
ror
pop
push
mov
mov
daa
loopne
xchg
xchg
inc
pop
pop
ret
xor
xchg
enter
add
add
in
aas
outs
adc
push
(bad)
(bad)
mov
xor
inc
add
xor
sub
push
dec
retf
imul
(bad)
je
xchg
xchg
and
(bad)
jb
jno
in
inc
sbb
test
repz
inc
ins
fwait
outs
sub
push
add
pop
mov
or
cmp
ds
aam
xchg
in
mov
lods
sbb
jb
call
adc
and
push
stos
(bad)
movs
in
rcr
ins
adc
mov
jb
xchg
inc
jle
pop
xchg
pop
test
scas
xchg
arpl
std
push
and
aam
icebp
std
sahf
es
mov
add
and
(bad)
enter
jnp
jns
mov
cmc
mov
xchg
out
cmp
jbe
xchg
sbb
or
fadd
or
(bad)
mov
cmps
clc
pop
mov
pop
(bad)
mov
(bad)
repz
stos
add
inc
mov
les
rcr
adc
cwde
sub
xchg
mov
and
loop
retf
icebp
pop
push
xor
and
mov
add
sbb
sti
mov
movs
loope
cwde
das
adc
imul
or
xor
cmps
rol
popa
mov
cdq
sbb
cmp
dec
sub
stc
shr
cmp
outs
fimul
jmp
mov
jg
or
mov
cmp
jmp
jl
and
les
ds
jno
pop
cld
pop
shl
add
hlt
movs
sub
xchg
pop
cmp
inc
bnd
(bad)
push
(bad)
xlat
fnstcw
pop
ret
addr16
fiadd
sahf
fldenv
pop
adc
sbb
fstp
in
lock
imul
retf
jnp
mov
es
adc
xchg
out
xchg
lds
xchg
mov
and
xchg
mov
out
inc
pop
popa
fnstsw
imul
(bad)
dec
dec
cmp
jmp
lahf
push
pop
mov
xchg
mov
jno
or
(bad)
(bad)
pushf
sub
push
arpl
mov
xor
mov
dec
sbb
call
inc
cs
push
sub
daa
call
pop
call
in
pop
cdq
or
adc
nop
mov
xchg
dec
stos
out
dec
pusha
outs
or
je
jae
push
fidiv
fst
dec
and
push
sub
and
movs
retf
fldz
mov
das
add
mov
pop
out
xor
mov
(bad)
das
mov
neg
jbe
cmp
leave
fwait
addr16
pop
push
adc
or
stos
loopne
test
outs
and
sti
rol
xchg
bound
gs
es
push
push
xchg
mov
sub
adc
loop
xchg
out
pop
neg
pop
sub
rcl
std
jnp
shr
push
inc
mov
push
sub
stos
mov
cld
push
and
sbb
mov
stos
cmp
out
imul
xchg
push
das
pop
mov
sub
(bad)
jecxz
fld
dec
popa
pop
gs
out
xchg
dec
mov
je
xchg
test
mov
test
inc
cmps
stc
test
push
scas
pop
jno
adc
pop
sub
sbb
outs
popf
sti
cdq
sbb
sub
stc
fist
xchg
or
arpl
lock
fimul
lods
xor
and
sbb
mov
fcmovu
scas
mov
cwde
ficom
int
or
movs
mov
cs
jmp
call
xchg
mov
push
sub
add
and
sub
sbb
dec
lds
jle
into
and
sahf
xchg
pop
sbb
mov
das
je
retf
(bad)
lahf
jmp
jb
cli
jmp
push
pop
fidiv
xor
adc
adc
iret
cmp
add
ins
iret
mov
adc
or
(bad)
rcr
push
out
ret
jns
dec
sbb
sub
or
push
lahf
xchg
sbb
jmp
pop
or
paddsb
ins
div
bnd
jmp
xor
mov
inc
mov
jl
pop
sub
in
dec
int3
mov
mov
inc
cli
or
or
in
(bad)
dec
xchg
ds
dec
jl
mov
add
fsubr
adc
dec
out
out
push
sbb
xor
sbb
xchg
fs
in
push
mov
loope
int3
mov
pop
out
push
mov
adc
push
loopne
fistp
clc
enter
sbb
xor
addr16
push
ret
scas
in
xchg
push
inc
xchg
in
in
stos
(bad)
jnp
daa
hlt
cmp
fsub
xor
mov
sbb
cmc
fwait
inc
xor
adc
or
(bad)
pop
int
idiv
or
jmp
sbb
das
mov
push
enter
cmp
xchg
jle
data16
push
push
stos
pusha
dec
lock
add
jb
ja
dec
les
stos
mov
dec
sub
mov
fisubr
xchg
inc
aaa
xchg
and
dec
pop
lea
xor
cmp
xor
or
adc
xor
cwde
push
aaa
fisub
mov
push
xor
jns
scas
dec
jmp
add
ret
xchg
push
aaa
movs
ss
rcr
push
sub
or
ret
sub
xchg
mov
loope
xor
xchg
int3
sub
pop
mov
test
loop
push
das
out
mov
or
pop
out
ret
mov
or
dec
xlat
jns
sub
ins
dec
or
mov
(bad)
pop
add
or
pushf
and
test
jmp
loopne
inc
adc
in
js
test
adc
xor
cld
jns
xchg
sbb
mov
das
add
mov
in
push
xchg
or
mov
sub
sub
iret
jne
mov
outs
dec
xchg
aaa
inc
jno
imul
jns
add
jp
mov
mov
fild
imul
and
mov
lock
cwde
test
push
xor
inc
inc
sbb
xor
call
aas
cmp
cld
cli
pop
scas
inc
repnz
daa
sub
lock
bound
xor
neg
mov
call
addr16
sub
imul
xchg
loopne
mov
cmp
adc
pop
in
push
push
push
dec
cld
enter
ds
aaa
je
jns
in
inc
rol
mov
cmp
push
fisub
lods
fidiv
cmps
push
fistp
ret
add
popf
pop
sub
xchg
inc
mov
je
test
dec
pop
(bad)
xchg
and
arpl
adc
aad
and
stc
fisttp
inc
test
add
xchg
adc
mov
imul
inc
jno
mov
sub
movs
shl
sub
mov
mov
sub
fs
mov
js
xchg
mov
test
inc
enter
out
dec
xchg
rcr
imul
test
cs
ja
cmp
jge
(bad)
mov
aaa
test
ror
fstp
popa
add
ins
leave
out
inc
mov
not
dec
sti
scas
mov
add
push
mov
and
lea
and
xchg
cmp
push
sub
xor
fs
sti
icebp
fsubr
stos
mov
jnp
mov
(bad)
and
xchg
aam
stos
rcr
fwait
mov
mov
les
test
in
jle
push
jnp
sbb
aaa
jmp
fistp
pop
xchg
pop
mov
sub
jae
mov
xchg
ins
push
sbb
or
dec
and
mov
pop
push
xor
xor
pusha
adc
jp
xchg
lahf
push
cmp
stc
push
movsx
cmp
pop
sbb
jae
xchg
adc
sbb
leave
jmp
inc
push
jg
enter
inc
and
cmp
inc
ret
mov
cmps
cmp
pop
xchg
fnstcw
xchg
and
nop
out
mov
push
out
sub
cdq
and
cmp
daa
mov
inc
adc
cvttps2pi
nop
call
or
jno
call
cmp
pop
out
dec
mov
outs
xchg
dec
stc
adc
pop
add
mov
data16
mov
lods
mov
add
cmp
mov
mov
hlt
aaa
jecxz
mov
mov
stos
mov
or
stos
in
cdq
pop
dec
pushf
jl
fwait
xor
int
xchg
dec
in
sahf
sub
pop
xchg
mov
dec
mov
daa
xor
fdivr
cs
jo
ret
sub
pushf
sub
dec
scas
scas
push
ret
(bad)
xchg
sbb
fidiv
xchg
mov
xor
add
jle
xor
rol
lock
inc
xor
lds
mov
mov
lea
js
pusha
adc
dec
inc
mov
neg
cmps
int3
xor
mov
call
imul
dec
mov
int3
xor
push
aad
push
pop
loopne
cdq
sub
jne
dec
fisttp
outs
push
jnp
aam
sub
ficomp
(bad)
xchg
ror
cmc
scas
jns
or
repz
add
push
es
adc
mov
sti
mov
push
(bad)
mov
sbb
dec
fsubr
pop
xor
ror
iret
mov
mov
aam
enter
mov
daa
push
outs
fidivr
sbb
xchg
mov
xor
cdq
popa
add
imul
push
cmp
fcomp
and
or
push
pop
out
mov
test
fisub
mov
jo
jns
jo
cmc
enter
adc
mov
cli
ret
push
jg
lock
addr16
mov
int3
pop
into
div
sbb
jb
sbb
inc
jg
push
xchg
mov
stos
lods
adc
pop
xchg
push
rcr
xor
sub
mov
xchg
jle
cli
lahf
mov
lahf
pop
push
xor
test
xor
mov
aam
push
in
test
inc
movs
xchg
rol
or
in
mov
nop
(bad)
iret
xor
xor
(bad)
dec
pop
adc
cmp
inc
popf
stos
ss
ror
pushf
jne
mov
out
cmp
cli
or
and
in
dec
out
pop
aad
jo
push
sar
movs
mov
xchg
mov
test
or
inc
test
js
mov
push
fldcw
xor
or
and
into
xor
xor
arpl
retf
push
jmp
sbb
mov
mov
sbb
adc
jp
loop
sub
out
inc
add
hlt
test
arpl
fistp
xor
sbb
(bad)
in
ins
fdiv
mov
xchg
mov
push
pusha
push
mov
out
sbb
psubusb
adc
repz
ja
jae
cld
(bad)
into
ret
es
add
adc
ins
sbb
cs
int
cwde
sbb
popf
dec
sub
repnz
je
pop
dec
shl
and
adc
pop
(bad)
dec
sbb
adc
int
inc
iret
icebp
pop
and
and
fdivr
mov
imul
ret
fbld
rcr
retf
mov
push
clc
pop
add
inc
sbb
mov
sub
ins
cmp
neg
cmp
cmp
fdiv
jno
mov
in
add
adc
xor
(bad)
add
outs
shl
loop
adc
jmp
enter
sub
dec
jp
xchg
add
cdq
jle
sub
nop
popa
(bad)
pop
call
sbb
pop
mov
repz
ins
cld
out
adc
clc
sti
(bad)
cmp
xchg
test
mov
in
in
sbb
popa
sub
mov
js
data16
dec
outs
mov
rcl
inc
cmp
jb
mov
fidiv
dec
ret
jg
pop
(bad)
call
repnz
or
es
loope
lods
sub
jg
or
mov
sbb
pusha
mov
adc
adc
ret
mov
shl
add
sub
fdivr
push
sub
cmp
jg
adc
and
outs
pextrw
arpl
mov
jp
push
into
je
sub
mov
cwde
jns
sbb
or
inc
and
stc
ss
and
and
int3
mov
inc
or
scas
jno
gs
fldcw
into
jmp
mov
cmp
jge
xchg
push
call
jmp
mov
sbb
and
sub
or
push
add
push
xor
pusha
mov
clc
jae
aaa
call
outs
inc
sub
cwde
aaa
mov
addr16
jmp
inc
test
gs
cmc
jne
push
sbb
xchg
jne
pop
or
aad
fistp
test
outs
mov
addr16
aam
cmc
movs
adc
(bad)
push
out
dec
aas
dec
sub
bswap
ror
add
push
fst
xchg
mov
or
(bad)
clc
into
lock
jns
adc
cld
aam
sahf
mov
cmp
pop
add
daa
add
dec
jge
dec
dec
lds
outs
and
mov
test
xor
mov
rcl
pop
retf
mov
adc
xor
dec
loopne
mov
adc
cmc
in
icebp
push
dec
sbb
in
mov
es
fcomp
popf
adc
mov
loop
sub
xchg
xchg
mov
sti
xchg
sub
inc
add
(bad)
lods
cdq
and
cmp
int3
add
or
out
adc
adc
mov
std
fsub
xor
jnp
and
lds
jb
leave
and
(bad)
pushf
mov
push
mov
sbb
out
add
popa
push
outs
sbb
sub
inc
xchg
outs
adc
cmps
add
ret
sbb
inc
inc
push
pop
in
(bad)
ror
xor
repnz
mov
mov
ins
or
cli
pop
aaa
push
push
ss
adc
imul
xor
jge
test
std
rcr
adc
pop
jae
add
out
or
pusha
scas
inc
xchg
fcmovbe
and
fidiv
sub
xchg
lea
retf
lds
and
sbb
and
pushf
mov
fwait
arpl
adc
mov
sar
loop
ffreep
and
xchg
daa
add
aaa
cli
mov
push
pop
dec
(bad)
push
add
jge
jecxz
rcr
test
daa
pop
mov
in
mov
inc
popf
xchg
ins
cdq
jmp
clc
arpl
pop
ret
push
push
sar
stc
push
outs
aad
inc
pop
pop
push
cmp
out
ret
adc
mov
sub
ins
bound
xor
loope
popa
leave
push
mov
test
fs
jmp
mov
out
fs
mov
add
enter
aad
cmc
jns
cwde
xor
push
pop
xor
and
out
rcr
std
not
jmp
popf
xor
fld
fwait
or
jb
xchg
iret
push
sbb
fwait
(bad)
addr16
push
pop
into
leave
adc
(bad)
pop
icebp
ja
ret
cld
or
adc
jmp
into
bswap
call
push
inc
fidivr
pusha
cmp
mov
xlat
(bad)
jb
adc
fiadd
inc
popf
sysret
push
xor
fistp
dec
cwde
mov
cmps
cwde
sbb
cmp
push
or
cmps
jns
dec
cwde
stos
cwde
sub
(bad)
pushf
dec
lds
shl
mov
shl
mov
leave
stos
dec
shr
or
cmps
xlat
mov
mov
test
jnp
push
cmp
fwait
dec
movs
dec
arpl
add
inc
out
lock
sub
mov
jns
les
jmp
sub
mov
mov
mov
and
in
rcl
inc
ret
mov
push
inc
lods
in
repnz
add
xor
pop
push
cmps
loope
loopne
aam
sbb
push
hlt
scas
and
mov
aaa
mov
fdiv
mov
and
cdq
test
out
push
out
scas
aas
shr
js
adc
sbb
dec
sub
jl
and
shr
mov
rcr
hlt
rol
cmp
mov
das
retf
mov
dec
mov
add
xchg
lods
sbb
pop
dec
(bad)
fmul
fcom
add
out
clc
add
fidiv
aam
jb
fist
sahf
mov
dec
add
xchg
icebp
cld
mov
outs
jo
push
out
push
mov
cmp
std
push
imul
inc
imul
stos
fs
mov
push
dec
add
jne
sub
js
jno
(bad)
jecxz
call
fild
rcr
out
xchg
jno
pop
mov
sub
cmp
clc
retf
push
sbb
add
ss
push
aaa
sbb
adc
jle
jle
or
cld
mov
aaa
not
arpl
xchg
xchg
inc
add
push
add
and
(bad)
jbe
adc
imul
rcl
gs
jl
inc
and
outs
imul
leave
jmp
push
jne
dec
jge
mov
sbb
es
dec
push
mov
das
(bad)
popf
adc
hlt
out
les
jle
mov
and
sahf
std
add
push
push
mov
ss
push
in
int
sti
sub
arpl
setp
lods
jge
jecxz
call
cli
les
jbe
in
sbb
lock
dec
mov
push
xor
mov
mov
mov
add
add
loop
(bad)
retf
or
sub
cs
ficomp
jmp
add
clc
jge
add
into
out
jnp
sub
sar
sbb
(bad)
mov
int
leave
inc
cmp
lods
idiv
add
mov
or
dec
aam
leave
sbb
sti
dec
dec
fs
popa
xchg
dec
rcl
xor
gs
mov
pusha
stc
cmps
jbe
mov
and
jnp
or
shl
stos
xchg
cmc
das
(bad)
xlat
loop
mov
leave
xchg
in
xchg
jmp
test
push
adc
clc
jecxz
outs
push
lahf
sub
gs
push
call
xor
xor
sar
add
jmp
or
leave
rol
addr16
cmp
(bad)
scas
ins
in
xchg
mov
mov
xchg
adc
int3
push
pusha
or
jecxz
ret
pop
cmps
nop
outs
add
bound
push
xchg
xchg
add
aaa
dec
out
adc
addr16
popa
mov
cmps
std
mov
sub
in
jmp
enter
ins
test
fsub
mov
dec
push
int
jne
fisub
stc
popf
jne
out
jns
dec
mov
mov
push
nop
lods
lods
cmp
push
dec
pop
mul
jle
and
inc
mov
push
call
popa
addps
mov
test
lds
pop
or
lea
xor
aas
jbe
(bad)
mov
mov
arpl
fisttp
mov
test
mov
dec
outs
bound
stos
push
arpl
xchg
cli
jno
jmp
xor
and
lea
adc
aad
cmp
cmp
pushf
pop
fistp
cwde
aaa
rol
or
fsubr
jmp
leave
cmp
stos
jno
sbb
pop
jmp
cs
rcl
pop
dec
and
xchg
int3
jae
xchg
fisttp
iret
mov
cmps
and
loop
xor
inc
jbe
test
adc
(bad)
jp
jmp
inc
loopne
mov
add
pop
(bad)
outs
fld
sahf
ja
and
data16
cmps
pop
dec
in
mov
(bad)
push
inc
push
or
jns
mov
cld
mov
add
fwait
cs
cld
lods
inc
into
mov
mov
pop
mul
mov
(bad)
fnstsw
lahf
inc
neg
mov
pop
enter
inc
pop
sub
iret
or
dec
xor
movs
and
loopne
mov
sti
aad
dec
lods
cmp
xchg
jle
scas
pop
loopne
cld
xchg
je
xor
push
das
pop
push
mov
sbb
xchg
or
jne
mov
mov
push
sub
sub
retf
adc
(bad)
dec
dec
or
mov
ins
jmp
test
xchg
jecxz
dec
lods
xor
stos
inc
fisub
aad
or
mov
ja
dec
fdiv
mov
push
and
dec
popf
xchg
push
enter
icebp
call
(bad)
push
movs
les
dec
idiv
xor
movups
mov
jg
out
out
imul
and
or
cli
pop
dec
call
(bad)
icebp
inc
gs
dec
inc
popa
sar
and
xlat
add
push
mov
mov
shr
ja
pop
dec
push
in
push
push
cdq
(bad)
xchg
loopne
dec
sti
scas
leave
pop
mov
movs
mov
push
sub
xor
inc
dec
test
mov
hlt
or
push
repz
dec
adc
sub
add
jge
popa
jl
push
cdq
ret
pop
into
or
loope
ja
lock
fsub
ja
xchg
mov
push
xor
dec
scas
sbb
repnz
adc
jo
stos
fcom
adc
loopne
shr
jno
dec
cmp
in
jmp
push
sub
xchg
sbb
mov
xor
sbb
sub
adc
rcl
inc
rol
inc
xchg
jae
jae
enter
and
mov
shr
psadbw
outs
push
mov
(bad)
fstp
or
xchg
(bad)
nop
add
mov
jg
cmps
loop
rcl
ins
ja
outs
jo
cmp
cmps
add
push
cwde
or
cmps
(bad)
dec
inc
retf
fstp
push
out
mov
dec
jl
je
dec
and
in
jne
(bad)
mov
mov
push
mov
adc
and
pop
mov
cmp
add
sahf
jne
pop
mov
jmp
mov
jne
pop
inc
ss
mov
call
and
outs
loopne
mov
xlat
push
cmp
and
mov
or
(bad)
in
add
(bad)
jmp
dec
and
mov
dec
neg
push
push
imul
inc
int3
adc
iretw
cdq
xor
shl
mov
jl
addr16
repnz
dec
push
or
pop
mov
dec
loopne
loope
test
(bad)
add
cmp
add
inc
fiadd
inc
add
int3
mov
push
mov
cmps
jae
lods
pop
neg
or
sub
sub
cdq
fwait
retf
xor
retf
int
inc
dec
adc
clc
sbb
lds
ss
imul
mov
adc
daa
(bad)
mul
shr
(bad)
xchg
xchg
xchg
nop
push
scas
stos
in
mov
xlat
not
test
icebp
or
or
or
iret
sbb
aaa
mov
mov
mov
mov
dec
xchg
jmp
dec
sub
push
dec
push
sub
fcomip
scas
or
repnz
aam
mov
ja
sub
fnstenv
xchg
movs
cmp
cmps
in
adc
pusha
shr
shl
fs
lds
sbb
(bad)
push
lahf
rcl
fidiv
test
pop
dec
xchg
cwde
pop
inc
jmp
arpl
inc
inc
xor
icebp
or
nop
hlt
mov
push
add
mov
cmps
add
cmc
mov
enter
imul
xchg
push
aad
ret
(bad)
or
jns
(bad)
or
ja
and
xor
cmp
fs
mov
loope
and
ins
stos
mov
data16
jb
cmps
int
xchg
loop
fnstsw
mov
daa
mov
repz
inc
mov
call
pushf
test
mov
sub
jge
mov
adc
aas
mov
sub
repnz
sub
adc
cmps
(bad)
cld
mov
mov
scas
mov
out
aam
mov
jl
in
rcr
jne
pop
nop
push
mov
xor
jp
dec
movs
jnp
cmp
je
fmul
mov
sub
cmps
jmp
jbe
add
(bad)
call
movs
mov
call
push
jmp
mov
mov
and
loope
inc
movs
jle
sar
sbb
aaa
outs
sbb
enter
jns
mov
xor
dec
mov
sub
(bad)
jmp
xor
or
jp
in
outs
or
test
add
push
pop
addr16
and
mov
cmp
shl
pop
xchg
adc
ins
jno
loop
rcl
cmps
or
and
stos
inc
pop
arpl
mov
jle
hlt
hlt
or
icebp
lods
pop
sahf
cpuid
call
retf
and
inc
cwde
mov
clc
jmp
pop
xchg
jns
scas
jb
cmp
div
mov
in
imul
pop
imul
mov
fmulp
stc
out
sbb
mov
jecxz
adc
push
and
sar
fwait
sub
dec
ja
loop
cmp
iret
jp
sub
and
add
jg
lahf
xor
push
sti
test
sub
xchg
mov
loope
push
bound
gs
xor
push
retf
dec
sbb
mov
add
call
cmp
loop
sub
dec
and
xchg
push
xor
cvtdq2ps
imul
push
(bad)
outs
(bad)
test
enter
cmp
imul
movs
mov
xchg
xor
push
jge
fnstenv
fs
out
leave
sbb
cdq
pop
int3
ds
jb
leave
cdq
outs
pop
shr
data16
dec
out
add
daa
adc
inc
cmps
lahf
mov
fistp
dec
or
mov
cli
pop
stos
ret
mov
outs
cmc
cli
in
inc
jo
cwde
adc
stos
loopne
cmp
mov
adc
dec
add
icebp
mov
lock
stos
jnp
ret
retf
push
push
pop
test
mov
rol
xchg
scas
out
adc
out
or
hlt
call
push
mov
mov
xor
push
cmp
fnstenv
mov
mov
or
je
sar
mov
dec
cmp
mov
movs
sbb
mov
lds
repz
inc
and
aam
js
ins
in
das
ficomp
push
addr16
repnz
cld
inc
test
jp
loop
mov
mov
das
and
sti
aas
jmp
(bad)
loop
add
xchg
sar
fnstsw
jo
dec
dec
stos
js
shl
jae
das
push
inc
xchg
mov
pusha
ds
fild
daa
jbe
jp
push
(bad)
lock
fnstsw
cli
movs
mov
mov
jl
imul
inc
sbb
add
pop
out
mov
call
pop
dec
icebp
adc
out
pop
fbstp
xchg
fs
push
mov
adc
and
push
popf
sar
mov
cmp
ret
add
ret
test
adc
mov
and
mov
sbb
in
out
addr16
mov
mov
ror
xlat
push
rcl
xchg
popa
pop
ret
stc
inc
pushf
jno
and
in
mov
mov
push
out
ss
mov
aad
outs
(bad)
imul
xor
mov
xchg
outs
iret
nop
int
lods
adc
xor
iret
jecxz
test
and
lods
or
mov
int3
adc
mov
and
add
shl
scas
dec
cld
xchg
mov
clc
shl
jns
add
push
jbe
ror
mov
out
fild
pop
dec
enter
lea
or
mov
retf
push
lods
sbb
push
ret
cs
scas
adc
into
jle
jae
loope
pushf
iret
ins
xchg
jae
mov
inc
(bad)
jb
sbb
mov
bound
mov
jbe
mov
inc
nop
fcomp
mov
sub
ins
pop
lods
retf
mov
dec
jmp
dec
cmp
jge
push
nop
pop
mov
push
jg
icebp
das
dec
(bad)
dec
lea
xor
aas
pop
addr16
loopne
fs
xchg
hlt
add
pop
and
xor
xchg
push
lods
ror
and
sub
xchg
stos
aad
mov
cwde
loopne
jae
shl
sbb
jmp
push
xlat
jecxz
int3
xor
mov
adc
cmp
xchg
int
xor
jmp
arpl
push
sar
std
mov
cwde
fnstsw
dec
fdiv
jmp
inc
lods
mov
ss
jp
xor
(bad)
jnp
cmps
mov
xchg
push
lods
dec
mov
clc
jl
cmp
jecxz
push
sbb
cmp
shr
sti
retf
retf
jmp
mov
and
daa
mov
in
sahf
and
mov
inc
repz
inc
ins
xor
test
js
and
sbb
int3
xor
les
pop
test
sti
push
and
ins
mov
scas
mov
add
pop
sbb
mov
jle
adc
ror
or
mov
or
sbb
movs
int3
test
xchg
jae
inc
repz
xor
mov
clc
mov
or
xchg
pop
jmp
movs
xor
push
mov
push
fild
sub
imul
or
lea
jae
and
mov
xor
cmps
retf
xor
adc
cmp
pop
mov
xlat
or
pop
enter
out
add
and
cdq
sub
fdiv
pop
and
sbb
and
sbb
mov
loop
add
jle
jmp
or
loopne
ret
pop
push
outs
out
xor
xor
mov
fwait
cs
inc
sbb
jl
mov
push
or
dec
cmp
cmp
test
jge
shr
in
fcom
rcr
cdq
adc
push
mov
stc
adc
popf
stos
inc
pop
push
dec
mov
sahf
les
push
test
mov
add
pusha
je
sub
(bad)
in
jge
xor
mov
fist
xor
dec
neg
inc
pushf
popf
sar
lods
and
gs
ds
cli
or
add
enter
lods
fistp
(bad)
pop
repnz
mov
loopne
ror
xor
sub
pop
push
dec
or
and
les
mov
shl
xchg
or
sub
cmp
mov
test
pushf
neg
and
fisub
mov
mov
sbb
inc
push
sub
sub
sbb
mov
popa
scas
(bad)
fbld
add
call
jnp
adc
into
jmp
xor
sub
(bad)
fiadd
test
pushf
adc
enter
cmc
jle
or
ret
jnp
push
push
inc
lds
pushf
pusha
inc
ret
out
fiadd
(bad)
sbb
cmp
das
stc
daa
or
std
es
or
sbb
stos
jg
mov
stos
cwde
mov
mov
jnp
das
or
retf
add
cmp
arpl
shr
mov
sub
mov
ja
pop
loope
aaa
adc
std
adc
out
mov
lods
and
or
mov
inc
push
sub
call
and
pop
out
int
inc
dec
xor
jb
cmp
idiv
loopne
xchg
cmp
xchg
lahf
pmulhuw
jno
loope
rcr
or
xchg
jmp
lods
push
scas
stc
xor
out
aad
push
push
sub
xor
fsub
cdq
xor
jl
(bad)
pop
ja
add
retf
into
xchg
cs
aad
cmp
and
nop
mov
jmp
cmps
adc
movs
pop
(bad)
xor
leave
stos
out
dec
inc
js
mov
mov
test
cld
push
mov
xor
xor
dec
mov
mov
fsub
into
movs
les
push
jbe
cdq
sub
push
sub
fwait
mov
iret
test
jne
lods
cmp
mov
pusha
mov
pop
(bad)
jge
mov
ss
daa
(bad)
(bad)
jle
fdivp
xor
jnp
jae
enter
and
xchg
adc
or
lea
xor
aaa
push
adc
sub
add
mov
mov
loope
inc
jbe
xor
(bad)
(bad)
dec
ja
push
js
pop
inc
jg
jle
mov
sub
cmp
fs
or
ins
push
mov
dec
(bad)
repnz
std
xchg
pushf
ds
add
rcl
test
mov
out
pusha
jge
call
sub
jae
xchg
jns
sub
mov
adc
rcl
cmp
outs
jnp
jge
(bad)
scas
xchg
mov
xor
jmp
test
(bad)
push
and
idiv
cmp
into
mov
and
ds
sub
in
jmp
xchg
aam
xor
std
in
lock
adc
xor
test
imul
cmp
in
stc
pop
cs
cmps
push
adc
cdq
xchg
sub
sbb
or
in
pop
aad
mov
out
les
pop
sub
(bad)
and
arpl
aaa
fs
retf
rcr
inc
inc
loope
or
and
lock
(bad)
in
je
mov
push
arpl
test
ins
mov
loop
add
xchg
test
mov
sbb
outs
movs
inc
cmp
dec
pop
or
rcl
ja
loopne
mov
xchg
fwait
sbb
test
mov
dec
dec
aaa
inc
aas
push
bound
dec
icebp
call
lods
xor
mov
xor
xchg
and
cmc
push
jl
sar
imul
adc
xlat
xor
xchg
xchg
fisub
and
jle
xor
lea
push
mov
jmp
inc
bound
pop
pop
xchg
sbb
mov
adc
mov
enter
pop
push
iret
hlt
push
js
cld
or
cmp
xor
aam
jle
mov
xchg
fs
out
pushf
push
mov
sub
xor
out
mov
imul
lahf
mov
fwait
jne
lahf
out
jmp
push
jecxz
sbb
fist
rcr
es
or
add
add
jb
shr
stos
cli
call
and
push
mov
mov
or
cmp
int
jns
pop
ret
aas
enter
push
call
sbb
ja
inc
push
add
(bad)
fidivr
dec
xlat
and
dec
jnp
fwait
call
push
outs
mov
mov
jecxz
lods
cmp
inc
and
mov
xor
inc
loope
cmp
jbe
inc
mov
mov
cwde
mov
cmp
sbb
jg
push
xor
xchg
add
int3
ret
cwde
cmps
or
mov
in
xlat
sbb
repz
sub
mov
pop
into
test
cmc
js
jne
mov
loopne
mov
hlt
dec
adc
inc
push
(bad)
mov
fwait
call
xor
retf
mov
xor
fs
movs
dec
pop
stos
add
jp
lea
push
mov
loopne
(bad)
inc
xchg
into
mov
fwait
mov
or
inc
mov
sahf
outs
xor
jmp
inc
callw
popa
bound
jge
enter
adc
adc
adc
or
imul
mov
and
repz
jns
mov
stc
daa
leave
stc
ret
pop
test
neg
mov
mov
or
in
mov
aad
or
sar
lods
popf
movs
lds
sbb
inc
cmps
and
pop
(bad)
ja
inc
outs
push
repnz
dec
mov
mov
neg
jecxz
scas
sub
push
cmp
push
lea
xor
ins
(bad)
push
out
xor
xchg
lods
dec
(bad)
mov
sub
cmp
inc
enter
sub
jmp
jmp
jle
je
jb
repnz
iret
mov
jb
push
jmp
or
dec
lods
int
jae
inc
data16
(bad)
xor
push
ins
xor
sub
inc
mov
jb
jnp
cmp
loope
movlps
cmp
cdq
jmp
jae
xor
sub
arpl
enter
cmc
dec
inc
push
xor
inc
inc
lds
jbe
test
mov
or
xor
imul
fstp
test
das
popa
sbb
sbb
clc
bound
mov
or
pop
lds
push
add
out
and
cmps
inc
popw
jp
inc
or
repz
xor
add
xchg
jmp
sub
mov
lds
(bad)
stos
mov
jg
jo
or
clc
xchg
jg
and
mov
out
aas
shr
cmp
cmp
in
ins
jmp
lods
mov
out
mov
push
add
imul
add
adc
fiadd
sbb
out
adc
imul
jne
xor
imul
pop
into
sbb
mul
fsub
jg
cmps
lods
in
hlt
cmovp
jns
jp
jmp
mov
xor
jae
and
sbb
aad
lods
add
rcr
aas
sbb
imul
mov
lea
cmp
add
push
mov
mov
clc
cmp
sub
and
sbb
push
repnz
inc
jne
inc
xor
aas
lock
clc
pop
js
enter
sahf
les
jge
mov
pop
jmp
push
dec
ror
mov
cdq
retf
cli
and
mov
shl
jno
mov
inc
mov
mov
out
mov
in
repnz
outs
or
mov
sbb
pop
gs
mov
lock
pmulhw
xor
jae
call
pop
xor
mov
loopne
push
mov
loopne
pop
push
fbstp
mov
ins
add
sub
cmp
sbb
adc
sub
repnz
or
mov
inc
jnp
xchg
push
jbe
or
pushf
retf
es
ret
mov
jae
ret
or
add
mov
rcl
test
jg
adc
and
loope
mov
rcl
pop
push
imul
aaa
dec
cmp
ss
push
inc
aam
adc
ror
inc
aas
push
shr
xor
fwait
mov
push
cmp
(bad)
popa
add
dec
aad
scas
adc
fwait
mov
cmp
jb
mov
dec
xchg
outs
mov
leave
je
inc
inc
shr
aas
rcl
neg
jle
leave
bound
movs
mov
bndstx
or
add
xchg
mov
std
push
scas
scas
ret
push
xchg
out
fidivr
scas
arpl
stos
pop
cmp
jmp
push
push
push
fwait
out
push
ins
stos
jno
mov
xlat
push
loop
xor
jns
ficomp
add
out
sub
xchg
scas
ss
test
sub
inc
cmps
(bad)
add
stos
xor
push
inc
jns
mov
sub
add
mov
icebp
mov
mov
mov
pop
adc
xchg
sbb
and
repnz
xlat
outs
stos
add
fsubr
outs
fsub
xchg
push
call
cmp
xlat
(bad)
mov
leave
shl
dec
lods
ds
mov
xchg
test
ja
jmp
mov
xchg
in
pop
jmp
sub
inc
nop
mov
dec
fwait
pop
ds
ds
popa
fxch
and
sbb
pop
cmp
inc
es
addr16
ja
pop
lock
xor
or
xchg
rcl
push
push
ficomp
std
mov
add
mov
cmp
dec
ja
cmp
pop
push
loope
pusha
jecxz
xchg
sub
or
ja
or
ds
adc
jl
sbb
add
outs
ja
jnp
out
movs
stos
mov
in
out
enter
sub
rcl
bound
imul
(bad)
cwde
push
lock
and
jnp
push
ret
sub
ret
pop
(bad)
jnp
aaa
cmp
std
push
test
mov
(bad)
je
xor
mov
(bad)
div
mov
imul
call
stos
lock
icebp
lods
or
dec
(bad)
call
push
ins
mov
sub
(bad)
aaa
ret
pop
lods
lock
or
mov
dec
lds
(bad)
sbb
std
and
xlat
pop
lods
cld
(bad)
repz
out
cmp
int3
jp
xchg
dec
ret
cmp
popf
mov
dec
mov
lods
xchg
cld
aam
mov
pusha
jae
fsub
mov
jb
loope
fnsetpm(287
xor
jmp
aad
pop
lock
leave
xchg
inc
into
adc
dec
mov
cmps
inc
jmp
stos
fbld
rcr
mov
pop
(bad)
loopne
(bad)
mov
imul
test
nop
es
je
mov
jle
ss
xor
mov
mov
lds
imul
movs
loopne
and
add
scas
icebp
inc
inc
test
test
add
das
and
cmps
or
out
pusha
mov
mov
retf
pop
push
test
clc
test
jecxz
mov
call
and
or
iret
jo
xchg
cmc
in
std
lds
inc
icebp
scas
mov
mov
mov
and
add
jge
(bad)
cmp
repnz
(bad)
pushf
repnz
test
jle
retf
jns
or
jae
out
and
ror
repz
out
push
adc
sbb
xchg
mov
inc
ret
mov
push
sub
fist
(bad)
in
xlat
cli
jl
stc
rol
scas
add
and
nop
or
push
pop
scas
into
pop
mov
pop
mov
cld
ins
xchg
aad
push
adc
aam
jg
stos
cwde
mov
shr
cmp
div
mov
je
xor
and
retf
fnsave
outs
mov
mov
jl
pop
or
fcomp
ins
cli
lods
sahf
mov
mov
mov
in
das
pop
mov
aas
mov
inc
mov
jp
repnz
ss
or
cdq
push
movs
stos
fsubp
test
xchg
push
test
fcomp
add
jb
jns
jle
xchg
fiadd
mov
stos
call
mov
stos
jbe
xor
mov
fldcw
(bad)
not
pop
in
fisubr
adc
test
popa
pop
mov
jl
inc
repnz
mov
jg
jne
dec
inc
(bad)
aas
xchg
jge
data16
cmp
cmp
std
pop
les
fidivr
jmp
stos
mov
jae
test
hlt
mov
cwde
fisubr
shr
imul
addr16
sub
stos
pshufw
(bad)
dec
scas
jmp
ds
mov
aaa
cmps
sbb
leave
xor
ins
pop
xor
cmp
or
pop
jae
repz
(bad)
fcmove
jae
and
dec
xor
cwde
out
or
fs
pop
jo
sub
outs
imul
mov
test
mov
push
cmc
xor
cs
lods
xlat
adc
daa
sbb
enter
or
push
push
vmovddup
std
fsubr
sub
push
pop
rcr
cdq
cdq
cmp
mov
jmp
jge
push
pop
aas
in
and
mov
mov
out
cmp
fstp
fsqrt
js
popa
loope
js
or
jmp
(bad)
daa
pop
pop
ss
inc
jp
adc
adc
icebp
repnz
xchg
cmp
pop
mov
jp
gs
and
jae
imul
in
sub
mov
mov
jno
call
push
test
into
nop
pop
inc
and
sub
rol
cmp
sub
icebp
inc
in
je
repz
popa
jae
xor
and
mov
mov
jo
cmp
jp
into
dec
cld
cmp
out
ins
push
ffreep
cld
iret
jbe
aas
push
or
jmp
pusha
aas
daa
fld
outs
js
adc
inc
jb
mov
in
in
pushf
mov
into
jno
pop
out
sahf
mov
mov
std
out
out
in
xchg
jo
sbb
movs
mov
pop
adc
cmps
pop
push
mov
cmp
cmp
push
push
pushf
imul
inc
jb
and
mov
out
popa
xchg
shl
xchg
cmp
sub
stc
lods
xchg
jl
xchg
or
adc
sbb
xchg
or
sub
adc
and
sub
push
out
adc
ret
sbb
xchg
cmp
out
push
inc
je
in
push
loop
inc
mov
movs
pop
test
sar
mov
xchg
push
leave
imul
mov
and
pop
rcl
pop
add
jp
ds
xor
test
mov
loopne
mul
ins
pop
rcr
add
jne
mov
cmp
push
aas
mov
rol
test
sbb
loop
xchg
adc
(bad)
stos
sbb
fsubrp
inc
and
xor
loopne
mov
pop
xchg
or
imul
dec
out
cmc
mov
pop
outs
xor
lods
mov
test
shr
or
xor
pop
in
add
leave
jle
jg
xchg
or
xchg
add
fistp
sub
or
mov
repnz
xor
and
jg
fidiv
icebp
xor
adc
mov
call
mov
arpl
and
pop
je
test
imul
mov
outs
and
or
arpl
in
in
push
pop
cmp
xchg
fcom
mov
bound
loope
mov
sub
mov
xchg
lahf
and
addr16
loopne
push
rcr
stos
mov
push
les
jne
add
(bad)
les
sbb
add
rcr
sub
inc
iret
out
dec
pushf
addr16
aas
int
popa
xchg
icebp
stos
pusha
sbb
push
inc
in
shr
jmp
mov
stos
jecxz
int
gs
and
or
std
jno
clc
cmps
fcomp
sub
cdq
dec
mov
loope
shl
les
imul
out
mov
pop
shr
jns
lahf
or
data16
adc
in
jae
in
hlt
xor
sub
and
jecxz
aaa
and
mov
jmp
jae
fcomip
cmps
loop
and
and
out
jae
or
lods
xchg
jmp
push
jbe
and
inc
push
add
das
jo
sub
mov
dec
inc
sub
jae
inc
dec
cs
in
mov
mov
int3
cmps
pop
pusha
pop
dec
jle
out
out
das
xchg
fs
movs
sbb
jmp
push
push
and
mov
mov
fistp
xchg
pop
sbb
outs
add
arpl
bnd
shr
ror
mov
sbb
push
loopne
mov
imul
mov
fmul
lods
jecxz
mov
lea
cdq
inc
outs
ins
xor
mov
and
int3
lahf
leave
jge
call
call
adc
push
fidivr
mov
jg
push
jb
stos
jg
outs
sti
push
aad
xchg
lods
mov
fwait
je
aam
cwde
or
loop
push
adc
test
call
push
loopne
ja
push
fld
ret
rcr
lods
push
xor
mov
out
in
shr
jne
test
mov
and
pop
xchg
idiv
xor
rol
pop
inc
loope
push
adc
pusha
mov
push
lea
popf
lods
in
sub
out
mov
add
stos
xor
push
dec
sub
loope
adc
sub
nop
in
mov
dec
(bad)
pop
ffree
adc
adc
cld
pop
dec
pop
cmp
sub
xor
pop
push
mov
aam
js
data16
ins
leave
ss
add
jg
cmp
inc
loop
or
retf
and
out
cmp
(bad)
pop
xor
push
fcom
je
inc
mov
xchg
dec
in
xor
leave
out
stos
ins
je
imul
cs
dec
jb
mov
lds
push
xchg
jge
les
add
ja
mov
pusha
retf
lea
inc
pop
lods
fs
ss
push
jo
inc
sub
jno
in
je
bound
scas
fwait
xor
jnp
test
int3
mov
mov
jno
or
cmp
mov
test
nop
ret
fwait
or
push
stos
jl
push
inc
sbb
mov
mov
xchg
jae
sti
test
fild
mov
mov
push
in
dec
outs
pop
add
push
cmp
clc
adc
ds
jne
xor
or
js
lods
imul
call
cmp
jnp
mov
ret
or
data16
cmp
add
test
fist
push
neg
cmp
das
mov
addr16
and
jmp
neg
push
int
sbb
adc
push
sub
pop
or
pop
and
mov
stos
inc
hlt
sub
cmc
jno
and
and
sub
imul
or
test
mov
es
sbb
jg
xchg
repnz
les
adc
loop
push
test
inc
mov
or
repnz
jecxz
dec
pop
mov
test
pop
in
and
std
dec
push
inc
adc
stc
pop
scas
test
clc
ss
daa
int3
xor
lock
loope
xchg
lods
push
xor
stc
cmp
jge
or
mov
push
js
xor
sub
outs
pop
inc
xchg
sbb
jle
into
mov
xchg
str
out
adc
addr16
inc
fild
mov
ret
out
pop
iret
inc
jbe
push
fcomp
fist
mov
mov
idiv
xor
retw
outs
inc
push
push
scas
into
iret
push
mov
sar
jnp
jno
loope
pusha
jmp
pop
lods
out
cmps
push
jns
pop
sbb
stos
cwde
out
xchg
adc
sbb
inc
jo
rcr
addr16
(bad)
xchg
mov
aad
rol
and
jno
fidivr
pop
rcr
int
js
dec
mov
push
mov
js
dec
lea
std
call
rcl
mov
sub
movs
addr16
mov
or
push
xor
imul
cmps
add
rcr
cmps
adc
pop
mov
and
mov
jno
add
dec
mov
cmc
sub
mov
mov
dec
push
setbe
pop
sbb
mov
xchg
outs
sub
test
xor
mov
and
xor
loopne
mov
and
dec
movs
nop
mov
xor
push
ja
adc
push
mov
cmp
dec
(bad)
mov
mov
adc
retf
retf
(bad)
mov
loop
adc
pop
mov
add
jne
pushf
push
and
mov
idiv
sti
shr
pusha
or
adc
fild
fadd
mov
xor
dec
jns
jge
imul
retf
pop
out
daa
sahf
call
aas
mov
fadd
pop
jne
repnz
adc
and
ss
fist
test
cmp
xchg
push
test
cmp
lahf
mov
inc
mov
(bad)
xchg
cmp
stos
(bad)
cmp
mov
mov
and
and
add
test
mov
repnz
outs
dec
fmul
mov
pop
sub
mov
adc
ja
lods
(bad)
loop
jns
lods
push
lahf
aaa
xchg
fwait
outs
jg
sub
push
enter
jl
mov
jmp
mov
cmps
jle
nop
mov
das
imul
sar
push
fmul
or
cmp
mov
scas
mov
es
daa
xor
push
add
xchg
cld
pop
dec
ins
loope
int3
push
adc
outs
jge
mov
add
prefetchw
push
jns
mov
inc
add
stos
out
scas
ror
test
mov
lock
loope
and
inc
dec
sbb
jmp
lds
inc
cmp
call
add
xchg
cmp
adc
jle
or
fistp
retf
mov
and
adc
xchg
std
mov
jge
rcr
fidiv
adc
sub
scas
shr
and
and
imul
fwait
jmp
jne
inc
push
jge
or
(bad)
pop
xchg
sub
sub
ja
cmp
push
mov
js
and
sbb
into
aam
inc
mov
sub
xchg
mov
xchg
cmp
add
dec
imul
fnstsw
add
adc
int3
inc
aad
test
jp
mov
xor
or
mov
sub
stos
(bad)
xchg
loopne
(bad)
cwde
cmps
rep
retf
xchg
sahf
push
test
mov
ret
int3
je
push
inc
inc
mov
jae
fdivr
sbb
(bad)
stos
out
xlat
ins
xlat
jmp
loop
mov
dec
sti
push
or
adc
xor
and
mov
scas
add
jecxz
jno
aas
repnz
shr
mov
add
call
push
pop
mov
lahf
add
inc
cs
or
pop
pop
or
mov
add
imul
sbb
mov
pop
xor
xchg
jb
push
or
cmps
jo
jbe
cmp
stos
imul
pushf
mov
outs
xor
fistp
lea
pushf
inc
pop
adc
xor
xor
icebp
dec
add
pushf
stos
mov
in
das
mov
stos
fcmovnb
into
icebp
dec
arpl
aas
and
aam
push
inc
fmulp
add
xor
out
pop
in
fsub
fst
sahf
cmp
xchg
mov
lahf
(bad)
retf
(bad)
dec
int3
inc
gs
popf
or
and
adc
fcomip
retf
iret
xchg
inc
xor
lods
(bad)
idiv
stos
push
test
cs
repnz
adc
xor
into
in
sbb
sub
pop
mov
pop
stos
mov
aad
mov
mov
mov
mov
mov
mov
cmc
mov
mov
in
mov
call
sub
and
shl
imul
(bad)
adc
mov
push
addr16
cli
xchg
inc
sub
and
int
jb
jp
fst
xor
pop
aas
popf
push
cs
addr16
in
clc
jp
sbb
pop
retf
push
fst
mov
(bad)
jl
or
(bad)
jmp
and
test
add
cmp
jb
loop
loope
jno
repz
les
mov
pop
lods
data16
stos
and
fdiv
or
push
jp
inc
push
or
push
out
lea
fist
push
shl
mov
pop
aaa
sub
pop
add
or
mul
inc
xor
xor
ret
ins
not
(bad)
(bad)
call
sbb
pushf
inc
into
das
adc
dec
sbb
sub
and
retf
repz
outs
xor
call
aam
add
pop
pop
out
or
jmp
jo
and
cmp
test
adc
mov
jae
jns
fucomi
test
sahf
sub
push
adc
rcr
and
out
arpl
dec
fld
jge
or
cmp
fcom
and
adc
loopne
pop
dec
mov
retf
jge
or
(bad)
ins
mov
or
xor
jle
icebp
mov
out
lahf
adc
mov
pop
cmc
mov
cmp
mov
sub
inc
push
mov
jmp
popa
std
xor
stos
mov
inc
out
(bad)
pushf
out
in
mov
fisttp
das
inc
cmc
fcomp
mov
mov
je
dec
mov
movs
push
loop
dec
pop
inc
inc
aad
jnp
sub
add
in
add
adc
cli
jmp
jb
sub
adc
fild
(bad)
test
sub
fnsave
jns
or
dec
(bad)
movs
adc
loope
inc
mov
pop
cld
jmp
retf
jle
ret
and
ins
jmp
sub
inc
cmp
jbe
xor
push
jg
dec
xor
sub
adc
mov
test
call
inc
(bad)
aad
jl
add
push
mov
push
add
pop
pushf
sbb
or
mov
push
stos
in
leave
mov
xchg
mov
sahf
test
adc
sar
mov
adc
sbb
ins
xor
in
sub
push
fld
fwait
pop
cwde
pop
popf
xor
call
dec
pop
rcr
pop
ds
fld
imul
stos
jp
(bad)
mov
inc
daa
popf
fwait
jl
sahf
sbb
mov
inc
ja
add
mov
jmp
mov
pop
nop
inc
imul
inc
test
fistp
fwait
or
sbb
jnp
dec
xchg
cli
(bad)
jmp
inc
popf
loop
outs
daa
push
(bad)
fbstp
push
add
into
xchg
stc
loope
cmp
test
sbb
and
cwde
rcr
dec
pop
xchg
lock
inc
stos
jge
push
push
cs
push
lahf
inc
mov
lods
imul
out
xchg
fisttp
dec
ficomp
into
pop
xor
sbb
ins
sbb
jmp
js
xchg
in
icebp
das
daa
add
cmps
pop
or
pop
pop
push
rcr
and
nop
jle
movs
dec
jae
mov
mov
add
js
jp
pusha
fs
call
adc
ja
sahf
arpl
cli
mov
mov
pop
repz
xchg
add
iret
sub
jns
lods
ror
repz
pop
pop
xor
(bad)
fsub
call
jmp
sbb
ret
mov
cmp
push
int
(bad)
pop
sub
fisubr
stos
mov
outs
not
push
mov
bnd
sahf
fst
(bad)
shl
jmp
mov
fidiv
(bad)
dec
icebp
pusha
es
push
inc
mov
shr
or
pop
cmp
pop
jno
sahf
dec
push
icebp
inc
fwait
push
pop
scas
or
int
hlt
loopne
cmps
mov
(bad)
mov
ss
jmp
mov
pusha
fcomp
jle
push
push
jbe
out
out
je
cmps
or
mov
jno
or
cmp
mov
mov
pop
jg
or
cli
push
mov
out
(bad)
and
ja
cmp
adc
mov
or
push
xor
loop
sahf
cs
jecxz
add
out
push
sub
dec
sbb
xor
and
cmp
jns
push
push
mov
test
jns
adc
scas
sub
pop
xor
pop
or
sub
cmp
dec
xchg
jo
out
retf
add
and
xchg
xchg
outs
dec
cwde
lahf
cs
mov
push
cmp
movs
adc
sub
cli
and
mov
(bad)
mov
aaa
add
fisttp
xor
and
je
pop
sub
int3
mov
ret
mov
aad
jecxz
mov
add
pop
push
mov
pop
mov
gs
add
inc
cmp
jb
outs
sbb
jp
pop
fnstcw
adc
fsub
aaa
repz
adc
mov
mov
xchg
retf
sahf
pop
sbb
not
lock
scas
out
in
jmp
sbb
outs
mov
push
sahf
popf
dec
gs
jg
pushf
adc
xor
push
cwde
shr
test
mov
mov
loope
stc
jo
scas
ret
scas
jb
retf
add
int
inc
es
test
mul
and
movs
enter
adc
or
cld
pop
mul
pusha
push
jno
fild
add
mov
jo
push
in
nop
and
adc
dec
(bad)
cmp
add
add
xor
mov
dec
mov
xchg
(bad)
aam
fst
cmp
mov
in
inc
xor
stc
ins
cmp
popf
div
dec
cmp
xchg
mov
inc
jne
xor
sbb
outs
add
sbb
push
add
jno
cmp
adc
or
inc
xlat
std
add
in
inc
mov
int
jecxz
repnz
mov
pusha
xchg
daa
stos
push
js
add
ret
push
fimul
mov
pop
mov
shr
sub
jmp
out
cli
mov
enter
mov
mov
add
cmp
or
fsub
pop
div
aas
stc
push
pushf
pop
dec
cmp
movlps
call
cmp
mov
adc
in
in
lods
and
addr16
addr16
rol
ficomp
push
fisub
outs
movs
mov
retf
and
mov
cmp
cmp
xor
dec
xchg
fdiv
push
pop
outs
adc
cmp
or
and
rcr
sub
and
xchg
xchg
repz
rol
inc
adc
ds
and
cmp
inc
ret
clc
pop
fs
push
pop
in
sar
cmp
in
sub
push
pop
sti
sub
xchg
push
sub
shl
jmp
inc
mov
neg
ins
scas
or
jp
and
add
pop
add
inc
jbe
or
or
fist
movs
adc
xchg
rcl
repnz
jbe
fwait
add
push
or
xchg
inc
mov
push
enter
cs
mov
xchg
inc
aad
aam
mov
sbb
out
loopne
and
inc
in
adc
cs
in
rol
and
movs
pushf
and
mov
cvtpi2ps
hlt
xor
into
adc
iret
icebp
retf
daa
pop
in
aam
dec
and
add
pop
cmp
mov
mov
sub
mov
mov
in
mov
inc
or
cmc
add
lahf
inc
sbb
les
or
enter
push
mov
int3
repz
cmps
pop
scas
pop
jle
ret
pop
sub
stos
or
add
(bad)
inc
sbb
dec
ret
push
push
and
dec
inc
mov
mov
or
cli
push
jbe
mov
scas
xchg
movs
(bad)
sbb
xor
rcl
sub
mov
jno
inc
pop
mov
sub
popa
(bad)
cli
aam
call
inc
nop
mov
pop
fimul
ins
sub
mov
bound
adc
pop
ds
mov
mov
bound
mov
popa
repnz
mov
dec
movs
movs
leave
mov
mov
fsubr
sahf
cmp
add
and
pop
in
and
imul
hlt
test
jmp
push
sbb
sub
mov
inc
iret
sbb
arpl
xor
inc
aas
sub
push
out
std
pop
inc
aam
push
sahf
aam
ins
inc
inc
jo
mov
test
shl
jo
mov
hlt
xchg
or
adc
out
push
movs
push
pop
fnstcw
sub
dec
mov
out
ins
loopne
pop
mov
jmp
rcl
les
jmp
mov
iret
sbb
sub
lahf
dec
mov
xchg
gs
aaa
add
mov
int
ret
fist
lea
push
dec
mov
cmp
pop
pop
in
lods
mov
retf
xor
jb
and
mov
arpl
stos
add
(bad)
mov
mov
jge
lock
cmp
xchg
mov
idiv
popa
stc
pop
int3
sar
sbb
jg
inc
fcmove
ins
dec
mov
arpl
inc
xor
pop
jle
sub
fisubr
mov
or
aaa
(bad)
and
or
jnp
pop
inc
and
(bad)
jmp
inc
pop
push
(bad)
ficom
ss
mov
out
mov
addr16
sub
ja
out
adc
(bad)
xchg
push
pop
pop
push
lahf
shl
imul
stos
cld
fcom
or
cli
mov
add
or
dec
pop
nop
adc
jl
lea
pop
in
data16
cs
dec
(bad)
aad
cmps
pop
lods
in
push
loop
inc
xor
inc
mov
jp
jne
sub
stc
scas
ins
inc
ror
or
int3
pop
add
cmp
retf
test
(bad)
and
jecxz
mov
add
sbb
(bad)
stos
sbb
addr16
or
loopne
xchg
or
push
popf
stos
stc
mov
push
inc
clc
pop
mov
aam
movs
sbb
mov
sahf
fisubr
push
mov
fist
gs
mov
out
fild
shl
jmp
push
(bad)
xchg
cdq
(bad)
cli
xchg
hlt
push
push
sub
adc
(bad)
mov
add
and
ds
ffree
sub
xchg
std
mov
leave
inc
hlt
push
dec
xchg
shr
inc
cmp
inc
stos
cmps
fnstsw
out
jl
aaa
out
in
es
mov
repz
dec
std
lahf
mov
fidivr
rcr
push
push
or
les
dec
addr16
retf
push
push
or
in
(bad)
cli
sar
dec
mov
popa
dec
je
mov
add
movs
sbb
lahf
pusha
retf
call
push
out
jmp
les
xchg
mov
pop
xchg
rcl
mov
out
jno
jg
mov
(bad)
pop
ins
daa
daa
aad
mov
(bad)
and
sahf
rcr
push
and
lods
lea
in
xlat
xlat
pop
xchg
or
jg
loopne
lods
test
adc
sub
mov
sbb
jmp
stc
sti
push
popa
(bad)
inc
fisttp
movs
(bad)
(bad)
mov
mov
fs
inc
jnp
sub
stos
mov
je
push
push
std
sahf
cmp
retf
loopne
sti
shr
ret
out
xchg
lea
lahf
es
sbb
sbb
je
fisub
fiadd
push
inc
dec
mov
mov
fxch
add
and
sub
addr16
adc
fiadd
add
mov
jle
js
add
dec
mov
mov
mov
aaa
fisttp
fnstenv
retf
mov
bound
jge
adc
inc
je
push
jge
ins
test
pop
inc
daa
jmp
imul
xor
lahf
pop
repnz
sub
std
cmp
xor
cmps
push
ficomp
inc
les
js
jns
out
pop
(bad)
hlt
xor
dec
xchg
sahf
mov
jno
fcom
cld
lods
ja
xchg
and
jnp
into
iret
xchg
adc
pop
xchg
push
arpl
push
loope
pusha
test
ins
js
push
outs
cmp
inc
popf
or
push
rol
sbb
hlt
mov
outs
shr
es
cli
scas
in
xor
fwait
mov
and
cmp
nop
xchg
gs
and
ja
jmp
ins
dec
dec
pop
in
pusha
push
mov
adc
mov
lods
xor
add
std
cmp
pop
fs
lods
inc
jae
lahf
shr
push
adc
mov
push
jne
pop
push
dec
xchg
jbe
das
jo
xchg
in
popf
fdivr
jns
adc
mov
push
lds
xchg
cmps
push
add
push
or
fld
push
jb
xchg
dec
aaa
fild
movs
out
xor
dec
xor
jns
rcl
mov
shl
xor
ins
mov
adc
pop
mov
mov
(bad)
(bad)
arpl
retf
inc
bt
in
and
mov
xor
std
imul
cmc
je
jne
test
sub
(bad)
hlt
(bad)
pop
push
xor
scas
loopne
aad
jae
fstp
push
jo
push
movs
outs
std
inc
cwde
call
and
add
jg
push
pop
add
aas
sbb
aas
call
gs
inc
mov
push
aad
sbb
inc
in
(bad)
call
stos
sbb
push
retf
xchg
popa
cmc
sti
(bad)
nop
or
or
push
and
sub
in
push
sahf
jp
mov
push
inc
xor
cmp
push
ds
(bad)
cld
sbb
enter
sbb
cld
hlt
ret
push
cs
fsubr
sub
dec
inc
retf
jmp
and
cdq
pop
pop
jo
call
mov
mov
shl
jbe
ror
dec
sub
add
stos
or
pusha
mov
dec
sti
gs
mov
sub
movs
push
sbb
cli
div
sahf
fisttp
cmp
push
mov
fnsave
bound
or
mov
cdq
xlat
dec
cs
out
call
out
hlt
push
jl
cmp
xchg
and
and
mov
mov
enter
adc
adc
jge
jmp
(bad)
xchg
call
xor
push
fs
sub
pop
cmp
mov
adc
gs
movs
clc
push
js
cmp
cmp
mov
push
mov
pop
mov
inc
sbb
sub
adc
mov
lods
mov
add
and
adc
js
popf
jno
sbb
(bad)
xchg
enter
fiadd
mov
and
sar
push
outs
and
xor
sbb
inc
xor
inc
outs
mov
inc
adc
ds
pop
push
add
xchg
mov
jae
mov
mov
push
or
addr16
test
jg
(bad)
pop
pop
jbe
aaa
ins
dec
enter
addr16
ins
cmp
stos
rcl
test
fcom
lock
mul
popaw
call
push
jge
mov
sub
jbe
jbe
jp
dec
mov
retf
int
lods
add
mov
loope
and
mov
(bad)
ror
test
lods
mov
adc
inc
mov
ss
out
adc
xchg
inc
xchg
or
cmc
mov
fcomip
dec
xchg
inc
dec
jno
mov
call
out
xchg
out
call
ret
daa
pop
adc
lds
in
shr
fstp
retf
pushf
push
and
adc
dec
ror
add
popa
retf
(bad)
cmp
in
imul
xchg
and
mov
fild
xchg
fadd
add
mov
jmp
add
fs
loop
int3
(bad)
xor
jecxz
cs
push
sbb
imul
stc
mov
dec
fimul
xor
xor
mov
jp
and
push
in
int3
sahf
add
iret
lds
ins
dec
ins
jecxz
je
ds
test
cmp
push
cmp
aas
jns
and
push
(bad)
jmp
sbb
(bad)
in
cmc
adc
or
cmp
sbb
mov
icebp
test
or
xor
mov
mov
xor
lds
in
je
dec
ret
pop
pop
imul
std
test
push
xchg
jns
push
hlt
jnp
cwde
hlt
test
(bad)
popa
adc
adc
mov
and
in
pop
(bad)
int3
sbb
(bad)
icebp
sahf
jne
jno
sub
add
cmp
loope
push
imul
shr
sub
ins
imul
xchg
inc
(bad)
and
aaa
inc
jge
xchg
sub
sbb
xor
fcomp
mov
jge
jl
cmp
xchg
(bad)
lahf
sub
jmp
sahf
iret
stos
fisub
mov
jnp
mov
shl
pop
gs
push
mov
or
movs
movs
int
sahf
icebp
dec
or
add
dec
or
push
xchg
mov
jge
enter
sub
mov
push
loop
imul
neg
in
dec
ret
lock
and
mov
ret
iret
jb
adc
push
mov
mov
(bad)
sub
xor
adc
cdq
ja
cli
or
cmp
inc
xchg
les
jg
aam
and
(bad)
jg
mov
sub
out
jae
pop
shl
cmps
xor
ftst
add
xchg
imul
fbld
xchg
(bad)
repz
sub
ja
push
test
fwait
pop
fld
dec
xchg
pop
xchg
jbe
repz
jp
dec
icebp
jbe
out
ret
mov
iret
cdq
in
cmp
xlat
jle
bound
aaa
popa
or
jp
mov
mov
test
test
lds
push
cmp
sub
mov
scas
cdq
hlt
pop
mov
sub
xchg
loop
(bad)
xor
add
(bad)
xor
add
xlat
les
push
aad
mov
(bad)
mov
cmps
xchg
pop
cmp
pop
aas
imul
sub
inc
sub
aad
mov
jecxz
and
or
mov
pop
ror
in
movs
ffreep
cmp
xor
pop
into
or
pop
sub
add
xchg
or
or
cmp
sar
dec
outs
sbb
int3
xchg
pop
push
add
sub
dec
psubq
mov
ret
rcl
jns
pop
push
ss
mov
jnp
jl
into
scas
int3
jno
sub
clc
clc
(bad)
mov
test
cmps
xchg
test
rcr
sahf
xor
inc
iret
or
ss
repz
imul
adc
and
xchg
mov
call
out
push
jmp
add
cmps
movzx
xchg
pop
not
leave
punpckhbw
sub
or
cs
popf
cwde
int3
mov
sbb
mov
jecxz
ins
pop
xor
xchg
sbb
inc
add
xchg
xor
mov
dec
sti
popa
repnz
xchg
bound
lds
inc
lods
xor
jle
cmp
mov
mov
aas
add
cmp
jecxz
aad
pushf
int
popf
sbb
mov
xor
add
fdivr
mov
add
mov
fnsave
cmp
or
iret
and
cmp
jp
retf
imul
sub
xor
cld
enter
das
xor
and
inc
lods
out
mov
mov
ror
jbe
or
add
or
xchg
mov
add
sub
sahf
jnp
add
call
mov
aas
ret
ss
inc
lea
call
aam
out
dec
icebp
cmp
jns
push
or
popf
lea
test
in
ins
push
leavew
int3
adc
stos
or
xor
add
jmp
das
jae
and
cmp
push
mov
push
xor
stos
test
sub
arpl
jae
lahf
fnstcw
cmp
fwait
data16
fild
mov
inc
push
cmps
ror
jb
push
push
cld
ror
mul
les
leave
mov
out
and
mov
in
mov
xchg
jns
add
push
mov
inc
push
mov
test
add
ss
xchg
mov
mov
(bad)
mov
stos
cmp
ret
add
(bad)
(bad)
(bad)
fcmove
mov
fcom
loop
sub
pop
fwait
cmp
mov
xchg
loopne
mov
dec
popa
xor
(bad)
or
add
xor
jne
lds
push
push
inc
xchg
stos
pushf
out
jle
seto
dec
adc
test
push
out
cli
sbb
adc
jle
stc
push
mov
inc
sbb
mov
addr16
jmp
dec
adc
push
mov
add
stc
repz
mov
sbb
loopne
fldenv
mov
mov
int3
or
mov
fisubr
movs
mov
or
cmp
add
popa
aam
scas
les
cli
cli
and
adc
not
test
push
scas
or
and
pop
jo
ss
mov
mov
stos
mov
dec
dec
cs
call
add
clc
xchg
cmp
in
sbb
pop
sub
in
fadd
sti
scas
lahf
jno
inc
das
or
call
sbb
aam
nop
and
ror
bound
jle
les
retf
scas
or
call
mov
in
push
(bad)
dec
ins
aam
sti
sbb
(bad)
jb
imul
fldcw
cmp
inc
scas
pushf
outs
dec
sti
popf
push
cmp
or
push
std
xchg
cs
ss
sub
pop
lods
xor
pusha
mov
adc
sub
daa
fisub
jp
clc
ins
retf
ret
jecxz
clc
mov
scas
imul
add
and
pushf
pop
dec
cdq
pop
xchg
add
and
loop
(bad)
cmps
inc
sahf
pop
data16
sbb
adc
mov
push
jns
push
jo
out
jne
into
mov
scas
add
and
fld
adc
popf
ror
pop
inc
jno
dec
xchg
dec
ret
movs
imul
lock
daa
fcmovbe
push
fs
iret
pop
in
and
out
push
cmps
mov
outs
sub
push
mov
jmp
std
popf
fsubp
std
sub
ins
cmp
and
mov
idiv
inc
iret
sbb
push
sub
inc
in
adc
mov
das
xchg
xchg
or
xor
movs
mov
sahf
(bad)
in
inc
jl
jns
lea
jb
adc
cld
imul
mov
js
neg
out
repnz
popf
cmc
in
call
icebp
in
(bad)
mov
jmp
stos
jp
stos
pop
cli
xor
arpl
data16
inc
or
pop
(bad)
sub
mov
fs
xchg
add
jno
jp
add
leave
adc
jmp
mov
nop
scas
fistp
pop
fs
dec
xor
mov
pop
and
retf
mov
scas
dec
test
pop
call
inc
cld
out
mov
aas
mov
push
aaa
pop
xchg
leave
pusha
mov
push
jmp
push
cmc
ss
sub
ror
out
test
ret
and
int
jno
dec
or
in
imul
pop
cmp
in
in
dec
pop
leave
les
je
or
retf
mov
pop
mov
or
adc
pusha
int3
add
adc
repnz
lods
rcl
adc
rol
loopne
js
cmp
outs
lahf
adc
ret
inc
cs
dec
mov
outs
(bad)
test
sbb
adc
inc
mov
sar
jl
out
adc
sub
pop
test
inc
ins
cmp
call
sub
inc
rcr
icebp
add
cmp
(bad)
push
in
push
loopne
adc
add
xchg
push
mov
int
(bad)
mov
int3
retf
mov
stos
add
and
cmp
imul
pop
inc
jmp
js
xchg
aas
pop
(bad)
outs
lods
mov
mov
or
fcomp
iret
and
aad
inc
pop
setnp
cmp
pop
jne
std
xlat
loopne
aaa
loop
jbe
js
es
movs
adc
aad
jle
mov
xor
mov
es
xchg
cmps
imul
cmp
repnz
dec
lock
pop
pop
dec
mov
ins
and
adc
dec
pop
adc
out
clc
stc
paddd
addr16
push
mov
jge
add
gs
mov
fprem1
sub
jmp
and
cmp
inc
out
inc
and
mov
xor
rcr
pop
(bad)
ds
data16
adc
repnz
jg
mov
xlat
adc
(bad)
xchg
sar
scas
ss
inc
push
cwde
push
test
out
sbb
jmp
test
adc
das
fisub
inc
jp
and
ja
retf
lea
(bad)
xchg
mov
mov
add
xor
fadd
inc
and
or
jae
mov
popa
leave
dec
and
jb
aad
adc
ja
shr
cmp
das
call
jge
and
pop
dec
pop
repnz
out
mov
jp
aas
call
lahf
retf
daa
cdq
nop
xchg
fwait
gs
mov
xchg
jb
sub
movs
stos
add
dec
push
inc
xchg
sbb
jae
cld
mov
mov
pop
cmp
push
into
loope
mov
rol
jae
add
(bad)
lahf
jmp
and
(bad)
adc
dec
lock
push
dec
aaa
and
into
pop
sbb
xchg
(bad)
lahf
sub
ins
push
push
ss
add
test
fs
dec
ret
xlat
fistp
adc
mov
les
push
movs
je
sbb
movs
mov
rol
dec
aad
js
mov
mov
ins
les
adc
xchg
les
lds
and
jnp
lods
and
icebp
ins
test
mov
imul
mov
test
cmp
dec
mov
loope
sbb
or
adc
mov
ja
sbb
cmp
jnp
add
push
add
mov
(bad)
hlt
push
sahf
js
shl
ret
sbb
les
retf
(bad)
das
mov
repz
es
jb
das
push
(bad)
fild
imul
jmp
xchg
sub
movs
jge
in
aaa
mul
mov
icebp
in
ror
push
dec
pop
sbb
dec
sbb
mov
ja
xchg
rcr
pop
sub
lods
rol
mov
sub
jmp
cdq
xor
scas
jb
pop
adc
cmp
aad
sbb
sbb
adc
rdpmc
ja
mov
scas
or
xchg
mov
ins
loope
(bad)
cmp
mov
lea
and
hlt
shl
jns
xor
push
fld
xor
jge
and
mov
dec
cmp
in
mov
inc
or
add
add
push
and
jmp
call
adc
dec
stos
mov
inc
adc
mov
sbb
or
leave
pop
jno
movs
mov
push
in
cwde
jl
arpl
mov
call
cdq
inc
cmps
pmullw
into
push
stos
cmps
loop
mov
mov
neg
das
or
aad
pop
xchg
cmc
inc
lock
or
rcl
mov
les
add
int
mov
in
cmp
mov
hlt
movs
mov
jb
mov
cmp
inc
cld
outs
fdiv
loopne
int
add
sar
fimul
loopne
lods
push
dec
push
out
(bad)
out
arpl
push
adc
test
pop
pusha
or
popa
xlat
in
dec
pop
push
mov
sar
push
fwait
(bad)
icebp
cmps
add
lods
mov
dec
lods
pop
ins
cmp
mov
dec
lods
(bad)
addr16
and
jge
mov
inc
adc
scas
fldcw
sti
arpl
dec
adc
aaa
popf
and
xchg
mov
shl
cmp
clc
pop
cmp
pop
xor
paddw
sbb
mov
mov
ror
cdq
push
xchg
pop
sbb
movs
ret
cmp
pop
or
call
pop
int
in
daa
sub
cli
cdq
xchg
or
ror
ins
xor
mul
cmp
push
push
fdivr
and
mov
jbe
and
sub
lea
rol
div
adc
mov
inc
sub
push
mov
mov
jge
pop
or
add
mov
mov
icebp
sbb
add
add
fwait
ss
mov
and
xchg
inc
pop
jp
pop
or
and
and
lea
push
xor
into
xor
jg
retf
int3
jge
mov
push
cld
pop
stos
nop
stos
std
icebp
xchg
cmps
pop
xor
jo
push
pop
mov
xor
add
mov
imul
fdivr
mov
stos
in
pop
loopne
mov
loop
xchg
or
loop
cmp
cmp
icebp
cmp
loop
inc
lods
leave
fiadd
mov
cmp
nop
mov
mov
ret
xchg
add
and
bound
clc
pop
xor
iret
ins
jmp
mov
mov
push
test
ror
dec
iret
inc
sbb
xchg
push
adc
push
push
cdq
push
add
arpl
mov
mov
jecxz
pop
sbb
and
call
pushf
cli
mov
mov
mov
and
repz
adc
push
sub
test
cmp
lock
sar
mov
not
(bad)
dec
lds
leave
test
mov
xchg
and
add
stos
sbb
add
es
addr16
mov
fsub
dec
daa
mov
pop
loop
mov
sub
fdivr
and
jp
shl
dec
popa
mov
repnz
jmp
adc
mov
enter
mov
xchg
lods
mov
dec
inc
inc
clc
adc
cmps
inc
call
cmc
push
inc
js
mov
adc
push
xchg
xchg
adc
adc
xor
(bad)
mov
or
aam
or
mov
lods
outs
movs
movs
cs
in
repz
jge
jg
cmp
jb
jp
dec
push
nop
jg
pop
aam
push
jmp
(bad)
xor
pop
xor
je
sub
aam
inc
fdivr
data16
(bad)
xchg
enter
pop
sub
mov
jns
jbe
int
data16
push
inc
xlat
jae
aam
mov
inc
jb
dec
adc
mov
push
lea
dec
sub
sbb
lahf
pop
add
test
and
cmp
rcl
xor
scas
dec
jno
das
fldenv
add
jno
sbb
mov
test
int3
movs
sbb
inc
sub
dec
adc
bound
inc
xchg
push
stos
test
icebp
out
sub
fwait
repz
lock
jmp
je
dec
arpl
xchg
addr16
mov
fcomp
sbb
cmp
sahf
in
rol
add
and
or
lods
test
xor
fiadd
imul
loopne
(bad)
and
dec
mov
push
aaa
shl
pop
cmps
aaa
xchg
inc
or
pop
bound
jbe
inc
out
fs
out
bound
xor
icebp
in
xchg
xchg
jp
jo
mov
in
mov
mov
ja
mov
fdivr
fldcw
sub
fs
dec
cmp
movs
movs
xchg
fwait
fwait
movs
jle
and
dec
in
fdiv
prefetcht0
xchg
sub
adc
xrelease
in
jmp
lods
inc
dec
or
xchg
inc
xchg
mov
das
(bad)
fisub
push
mov
pop
out
ficomp
ror
mov
popa
push
and
push
stc
xor
add
out
dec
fisttp
push
test
adc
in
rcr
hlt
inc
and
in
aaa
clc
or
xor
inc
(bad)
imul
mov
dec
icebp
mov
add
mov
dec
sbb
fdivr
cs
or
dec
test
push
ficomp
xchg
xchg
call
mov
sahf
test
cmp
push
iret
sub
outs
xchg
imul
lods
rcl
sub
in
xor
adc
or
jns
and
out
inc
adc
mov
xchg
nop
out
jge
and
push
fild
lods
push
push
dec
dec
adc
inc
xor
mov
dec
retf
shr
lods
or
jo
ss
or
out
out
ds
xchg
sub
inc
loop
movs
push
cmp
fcomp
mov
sbb
stos
lock
xor
neg
mov
fdiv
mov
movs
and
mul
jg
pushf
push
or
loop
fs
adc
fild
push
mov
pushf
push
rcl
inc
xor
(bad)
jno
mov
mov
fistp
inc
(bad)
jmp
(bad)
mov
ret
mov
int3
enter
or
clc
jbe
movs
add
cmp
push
jae
int
pushf
jl
mov
test
adc
jp
std
mov
mov
jp
push
cwde
test
xchg
pop
push
jl
repz
cwde
into
jns
jbe
test
push
xchg
jno
movs
cmc
inc
std
popa
sub
inc
js
pop
add
cmp
lahf
dec
adc
jecxz
pop
sbb
int
xor
jmp
pop
fnsave
outs
repnz
ret
in
jle
scas
add
loope
ja
popa
push
loopne
scas
and
push
adc
jae
dec
enter
xor
std
add
in
pop
iret
stos
cmp
dec
jb
shl
xchg
scas
stc
stos
ins
outs
dec
adc
fucom
cmp
(bad)
je
mov
pusha
out
cmp
cmps
xchg
adc
add
dec
lea
cmc
popa
daa
in
jo
push
outs
stc
dec
xchg
mov
adc
ds
add
xchg
add
addr16
sub
les
(bad)
jge
sub
mov
aad
inc
xor
in
mov
aam
xchg
xlat
pop
icebp
pop
and
pushf
dec
xor
imul
cmp
sbb
pop
sbb
lahf
jge
popa
sub
int3
daa
cmp
jo
push
mov
push
gs
mov
rcr
mov
cmp
add
xor
adc
sti
mov
cmps
dec
sub
fsubr
add
fwait
lea
(bad)
and
clc
cmps
js
mov
mov
les
loop
aad
sbb
icebp
mov
in
test
loop
outs
mov
cwde
mov
dec
add
xor
test
xor
(bad)
jmp
mov
in
cmp
imul
repnz
aad
push
xchg
gs
jno
loope
fstp
cmps
inc
jno
fsub
inc
xchg
mov
mov
mov
dec
mov
sub
jl
rol
or
repnz
jmp
sbb
cmp
(bad)
dec
dec
mov
sbb
fdiv
in
lods
loope
pushf
sub
gs
adc
cs
lods
xchg
cvttps2pi
stos
fs
jecxz
mov
rcpps
sub
mov
xchg
or
cmps
xor
mov
hlt
mov
dec
loope
add
fisub
mov
mov
mov
shr
shr
cmps
xor
ja
icebp
cmp
test
or
fisttp
mov
(bad)
nop
in
(bad)
jo
lock
mov
dec
and
cmp
sbb
in
into
pop
mov
jns
adc
adc
add
mov
jae
scas
rcr
mov
ret
xor
scas
movs
sbb
mov
out
fst
dec
mov
cmp
xchg
or
push
sbb
lahf
cmps
mov
test
lods
leave
sahf
add
(bad)
imul
(bad)
mov
xrelease
jns
jb
and
mov
idiv
movups
scas
pop
cli
sub
pop
sbb
push
mov
dec
sub
push
aaa
xor
arpl
retf
mov
test
fucom
xchg
push
mov
dec
cmp
clc
shl
mov
popa
xor
js
js
and
(bad)
data16
xchg
jns
leave
mov
(bad)
dec
jnp
add
data16
popfw
das
pop
sub
retf
(bad)
lds
cmp
das
push
je
lods
push
daa
js
out
xor
lock
add
loopne
push
imul
mov
out
inc
cmp
dec
pop
out
xlat
pushf
mov
sbb
cmps
dec
push
sbb
mov
sbb
fwait
aad
and
mov
ret
out
fadd
jmp
xchg
inc
ret
jae
push
fwait
add
mov
jb
sub
add
ficom
xchg
dec
push
sub
enter
sub
cld
mov
mov
jge
adc
xchg
jecxz
(bad)
dec
imul
or
pop
sub
fisttp
mov
pop
popf
pop
xor
add
add
cmp
(bad)
loop
mov
inc
adc
adc
popa
stos
in
cmp
cmp
ins
adc
sub
jmp
clc
cdq
sbb
jmp
movs
loope
pop
xlat
mov
mov
xor
ja
push
shl
pop
cwde
xchg
into
adc
inc
jnp
not
mov
hlt
xlat
mov
fmul
test
stos
int3
(bad)
into
sbb
xor
loope
mov
add
jmp
retf
ss
les
cs
sahf
cmp
mov
je
sbb
add
mov
adc
or
out
or
imul
(bad)
push
int
mov
sub
std
daa
cli
ins
mov
in
ror
aaa
or
lds
or
in
xchg
clc
dec
mov
nop
pop
pop
out
inc
call
mov
enter
jne
cmc
sbb
inc
int
pop
ins
add
retf
push
pop
inc
xchg
jl
jnp
push
std
sbb
and
fisubr
test
xchg
inc
add
loop
sbb
adc
or
cmps
xchg
sti
jg
sbb
cwde
rcl
movs
xlat
retf
mov
mov
and
or
inc
sbb
lods
sbb
cmp
inc
xchg
xor
or
aas
or
out
test
or
test
fcmovne
mov
mov
push
out
stos
imul
test
mov
loopne
xor
dec
push
push
js
pop
dec
pop
add
hlt
mov
int3
stos
cld
sbb
(bad)
hlt
pop
sbb
pop
jne
xor
pop
dec
jl
sbb
xor
ror
in
test
add
rol
mov
mov
lahf
rep
ins
leave
xchg
fidivr
push
inc
sub
cmc
cmps
les
jae
sahf
sbb
xchg
mov
or
mov
mov
bound
popa
int
repnz
test
mov
mov
in
and
add
xor
in
cmc
cdq
call
ret
je
(bad)
adc
push
cmp
and
adc
sbb
call
mov
dec
js
pop
bound
ins
mov
pushf
test
ds
mov
xchg
ret
push
adc
mov
imul
sbb
scas
(bad)
mov
inc
js
out
rol
fnsave
retf
xor
xor
sti
mov
ret
mov
test
into
cs
out
mov
sti
int3
pop
mov
push
shl
sti
xchg
adc
dec
out
pusha
mov
cdq
cmp
aas
bound
cmp
push
dec
es
xor
fadd
push
adc
pop
loop
scas
mov
in
addr16
mov
mov
push
test
and
push
(bad)
fistp
in
(bad)
jmp
dec
add
nop
adc
test
cmps
push
pushf
mov
stos
hlt
mov
pop
movs
(bad)
xchg
jl
hlt
push
aaa
test
xor
aad
loopne
xor
ficomp
sbb
xlat
mov
add
xor
mov
ins
and
test
pop
(bad)
mov
not
mov
push
mov
test
call
nop
push
adc
dec
iret
mov
mov
cmps
pop
aaa
pop
ficomp
add
or
repnz
cmps
aas
jnp
jp
clc
and
icebp
dec
add
gs
aam
adc
scas
xor
lea
std
fdiv
ins
sbb
loopne
aad
dec
mov
push
jne
shl
ret
movups
and
shl
and
xchg
mov
sub
aad
test
jmp
or
mov
xor
mov
(bad)
ins
(bad)
inc
cmp
pop
daa
sub
repz
mov
pushf
pop
mov
bound
outs
ret
hlt
pop
fsubr
cld
jnp
arpl
cmovp
cmp
xchg
jnp
fbstp
xchg
sbb
das
outs
data16
shl
stc
jno
div
mov
ins
(bad)
int
push
sub
outs
inc
push
pop
(bad)
aam
xchg
and
and
rcr
xchg
les
pusha
dec
pop
push
(bad)
xor
(bad)
in
mov
enter
pop
stc
jmp
out
sti
loopne
imul
sbb
test
repz
push
push
ins
in
push
add
sbb
daa
inc
retw
push
dec
sar
je
xor
daa
sub
mov
aas
fcmovnb
cmc
dec
sbb
cwde
mov
(bad)
mov
ss
stos
xor
(bad)
lea
rol
push
and
outs
hlt
dec
mov
xor
sbb
mov
sbb
cwde
xlat
mul
sahf
rol
cmps
dec
dec
push
mul
mov
nop
inc
push
cmp
shl
add
mov
mov
test
sahf
adc
shr
inc
push
add
push
mov
popa
out
xor
test
neg
xor
imul
sbb
inc
sub
(bad)
popf
data16
shl
sbb
movs
imul
cdq
aam
jl
movs
jno
movs
cmp
cmp
mov
clc
lahf
xor
in
ja
add
inc
iret
pop
outs
lock
jo
in
cwde
add
or
xchg
jb
iret
fnsave
xor
out
in
cmp
inc
and
add
aas
xchg
scas
movs
sub
ficomp
fdiv
cmp
bnd
and
popa
cmp
stos
call
mov
jns
mov
outs
sub
or
es
inc
jnp
nop
xchg
test
mov
push
and
scas
mov
push
stc
leave
xchg
pop
cmp
sub
mov
jl
icebp
and
cmp
data16
cmps
inc
lds
popa
add
mov
and
dec
push
popa
enter
inc
push
inc
xchg
push
mov
lods
cmc
test
mov
and
mov
movs
push
xchg
xor
xor
les
stos
and
mov
mov
ret
and
push
pusha
mov
xchg
rcl
xchg
pop
fmul
push
mov
adc
and
mov
dec
in
jg
enter
jp
enter
fs
ds
imul
(bad)
jg
adc
aaa
(bad)
jnp
ds
clc
idiv
stc
stc
rcl
in
xor
cmp
in
test
ins
push
test
jmp
pop
sub
inc
repz
xchg
sbb
push
into
out
sub
push
js
push
out
jmp
ficom
data16
rcr
cwde
shl
(bad)
pop
dec
jno
outs
sub
adc
aaa
aam
jmp
push
fisubr
jmp
xchg
push
popf
sub
push
and
mov
xlat
ins
sub
jp
jnp
cmp
repz
rcl
jmp
test
fist
mul
mov
ret
adc
jae
push
mov
fstp
pop
aas
fcomp
test
push
cmp
push
dec
repnz
pop
nop
leave
fucompp
test
or
mov
jp
out
and
pop
data16
jmp
add
jae
pop
aas
mov
loope
addr16
jb
push
mov
adc
xchg
jnp
mov
xchg
xchg
adc
sub
mov
out
out
movs
ds
push
mov
dec
push
dec
mov
fsub
mov
bound
cmc
sbb
jmp
lods
dec
lock
push
ret
jmp
mov
push
mov
mov
retf
in
mov
push
mov
mov
outs
mov
ret
call
cs
push
sub
mov
and
xchg
mov
dec
dec
dec
pop
mov
scas
cdq
dec
or
mov
jle
inc
sar
outs
mov
loopne
movs
pop
xor
mov
mov
hlt
mov
ins
scas
push
sti
repz
stos
fimul
mov
mov
push
test
xchg
ds
mov
cld
push
mov
adc
pushf
sbb
gs
bound
jmp
div
cmp
inc
push
ds
imul
lock
xor
xor
pusha
add
jno
sbb
inc
dec
and
stos
jne
jmp
sbb
(bad)
popa
pop
mov
jmp
mov
push
jmp
lock
push
loopne
mov
add
add
jno
scas
dec
fld
push
jge
pop
aas
adc
xchg
int3
adc
dec
push
push
xor
fwait
mov
stc
jno
repnz
and
mov
icebp
(bad)
icebp
adc
jbe
rol
test
mov
jns
adc
fist
out
push
inc
sbb
in
js
jecxz
mov
push
xchg
loope
xchg
stc
test
test
mov
jecxz
sub
adc
loopne
jbe
jo
hlt
in
clc
js
cli
xor
jecxz
mov
dec
inc
in
pop
movs
jle
scas
and
icebp
inc
rcr
aam
xchg
and
pop
and
jp
dec
inc
dec
cmps
(bad)
mov
xchg
sub
cmps
mov
xchg
push
push
push
pushf
fs
dec
stos
lods
adc
je
inc
jo
(bad)
mov
test
mov
iret
aaa
jl
fist
xor
jnp
adc
dec
int3
(bad)
aaa
leave
add
mov
ror
and
pop
shl
jl
mov
mov
jne
into
fwait
ins
cmp
call
aam
fst
hlt
retf
cmp
loop
fmulp
pop
repz
ror
cmp
mov
(bad)
mov
stc
adc
adc
fsubr
and
(bad)
(bad)
xor
inc
adc
jnp
xchg
sbb
mov
jno
mov
ror
xor
es
mov
dec
cld
(bad)
fild
xor
sbb
mov
dec
xor
jmp
pop
mov
mov
ror
pop
retf
pop
dec
retf
sub
cli
rcr
jp
fcmovu
sbb
xchg
cmc
mov
and
rcr
inc
mov
jo
clc
lea
popa
pop
cld
adc
outs
mov
mov
je
push
cld
sub
xor
retf
loopne
mov
jg
jle
add
iret
adc
cmp
sbb
ins
or
scas
(bad)
mov
pop
and
mov
fild
xchg
sbb
shr
inc
pusha
pop
fdiv
cmp
(bad)
adc
popa
sbb
sbb
push
jns
icebp
call
in
jp
cmp
aam
ret
ss
fs
outs
mov
mov
push
xor
lock
out
jle
imul
push
sti
test
pop
jae
or
push
sub
or
dec
into
mov
imul
test
mov
jle
in
fsub
test
leave
pop
test
xchg
dec
cmp
cmps
icebp
das
cmps
add
(bad)
aad
mov
outs
clc
jbe
into
dec
fidiv
loop
dec
retf
inc
add
and
mov
stc
outs
dec
imul
mov
fstp
mov
nop
push
inc
popa
xor
inc
in
(bad)
pop
jb
fisubr
mov
jmp
ss
xchg
call
scas
scas
aam
xor
mov
push
clc
into
ds
mov
daa
jmp
repnz
xchg
dec
leave
xor
out
or
inc
sbb
adc
in
cmp
ja
retf
nop
mov
loope
jae
inc
lods
repnz
arpl
cmp
fdivr
adc
(bad)
mov
ins
xchg
js
pop
ds
and
lods
dec
shr
mov
fucom
jge
lods
aas
cmp
sub
sub
inc
mov
cmc
lods
aam
jno
enter
dec
and
xor
mov
add
cmp
stc
enter
fldcw
mul
push
mov
(bad)
mov
fcomp
mov
xor
add
icebp
adc
mov
fld
xor
jecxz
xor
push
push
inc
loop
jae
fsub
test
stos
movs
es
pop
jmp
and
xor
retf
shl
inc
or
aad
clc
int
cmp
jle
out
pop
cmc
and
mov
cmp
fucomip
scas
loope
xor
das
mov
xor
jae
xchg
fwait
sub
call
xor
dec
sub
outs
push
add
outs
arpl
or
popf
(bad)
and
sub
jb
pop
xchg
call
sub
adc
xchg
push
xchg
lea
and
lds
cdq
mov
scas
in
jb
inc
xlat
gs
inc
enter
or
cli
test
add
push
daa
jae
inc
(bad)
adc
and
xchg
ret
sbb
xchg
xchg
push
(bad)
mov
out
sub
push
xchg
pop
add
cmp
sub
sbb
pop
mov
pop
jno
lds
out
fst
das
frstor
jo
add
popf
rep
in
adc
cmp
popf
sti
push
add
pop
lahf
mov
aad
cs
jnp
test
imul
sti
nop
loop
in
pop
xchg
dec
(bad)
cmp
jnp
imul
dec
(bad)
mov
pop
stos
data16
div
xchg
sbb
pop
push
lods
or
push
ror
sub
sbb
dec
add
mov
int3
inc
jl
out
xchg
dec
adc
jns
shl
int
mov
stos
inc
aad
pop
arpl
test
(bad)
and
push
retf
es
sti
jle
xchg
pop
in
mov
adc
xor
outs
fisubr
pop
xor
inc
or
add
outs
test
adc
ja
push
xchg
and
ds
pop
inc
in
mov
ja
cli
setg
rcl
arpl
xchg
add
fbstp
cli
fsubr
aam
in
ret
(bad)
mov
setg
inc
cmc
rcr
movs
shl
sahf
jle
out
xor
push
dec
pop
fdivr
sbb
aad
pop
mov
fldl2t
mov
sub
leave
and
mov
pop
repz
inc
or
ds
fisttp
imul
(bad)
popf
xor
(bad)
xchg
xchg
lea
mov
aad
outs
and
je
movs
leave
addr16
push
mov
sub
mov
icebp
push
movs
mov
mov
sub
std
sbb
xchg
mov
jl
mov
push
add
push
inc
mov
retf
dec
lahf
in
sub
push
aaa
mov
sbb
jge
pusha
and
(bad)
jne
(bad)
mov
xor
fmul
pop
dec
aad
mov
int
aas
clc
push
add
lock
jecxz
leave
lods
mov
adc
pushf
sub
mov
xchg
pop
imul
sub
retf
inc
shl
out
fcomp
mov
popf
push
movs
cmp
and
mov
mov
xchg
mov
cmc
ins
and
add
cmp
outs
and
icebp
sbb
xor
scas
add
pusha
shr
leave
int
aaa
xchg
movs
sbb
shl
outs
sub
rcr
mov
push
dec
cmp
fs
jb
call
int
and
aad
or
js
jo
mov
fwait
and
pop
ret
in
fwait
(bad)
sar
pop
xchg
pop
fs
jmp
xor
(bad)
pop
dec
push
pusha
sub
mov
sbb
cmp
(bad)
sub
test
mov
scas
xchg
add
leave
loopne
mov
data16
dec
stos
imul
rep
mov
kxnorw
mov
xor
(bad)
rol
dec
shr
aad
mov
cmps
pop
sub
jmp
or
jae
fimul
test
cwde
leave
mov
hlt
ffree
cmp
push
jg
(bad)
jbe
or
pop
ins
(bad)
test
out
add
jmp
cld
std
pop
pop
cmpxchg
movs
adc
inc
dec
xchg
(bad)
sti
out
and
cmp
(bad)
arpl
hlt
push
dec
jnp
cmp
sar
adc
mov
mov
push
pop
mov
sbb
lds
mov
out
gs
inc
xor
jge
popa
push
inc
jbe
mov
xor
cmp
mov
or
jb
xchg
ret
sti
mov
jmp
cdq
loope
out
adc
cmp
push
sub
xchg
add
jne
mov
dec
jmp
or
int3
imul
mov
out
mov
fimul
leave
jg
repz
rcl
(bad)
and
aas
dec
and
adc
mov
dec
outs
aad
xchg
fs
sbb
push
mov
and
xlat
cmps
adc
and
out
leave
adc
xchg
adc
retf
rcl
cs
in
data16
cmps
pop
mov
popf
retf
in
in
scas
xchg
ins
mov
adc
mov
scas
test
outs
hlt
mul
push
mov
imul
pop
cmp
je
or
xchg
sbb
fsubrp
dec
mov
cmc
add
dec
es
mov
jmp
adc
(bad)
xchg
sbb
pop
or
xor
xchg
imul
adc
cmp
rcl
xchg
add
into
stc
or
push
imul
add
push
push
xchg
mov
das
adc
(bad)
push
sbb
jae
mov
outs
xchg
ds
xchg
outs
xchg
dec
movs
xchg
sbb
shl
movs
repnz
cwde
daa
mov
out
add
ins
mov
sbb
mov
lea
xor
(bad)
push
(bad)
xor
lds
mov
cwde
inc
popf
jno
ror
pop
mov
mov
out
out
or
int3
iret
test
outs
fiadd
xor
add
movs
add
and
shl
mov
add
into
mov
shl
(bad)
inc
jg
dec
ss
call
mov
int
add
inc
imul
jge
jge
push
jge
inc
sub
jp
jl
jle
add
push
add
push
pop
arpl
retf
cdq
xchg
mov
cmp
add
fwait
cmp
add
mov
jbe
jg
call
mov
movs
rcl
add
fild
adc
inc
popa
jl
iret
sahf
in
movs
sbb
mov
out
int3
xchg
pusha
fisttp
pop
jmp
inc
aas
mov
jmp
dec
mov
dec
adc
retf
fcompp
repz
test
and
xchg
pop
jns
jp
and
pop
cdq
pop
fidiv
icebp
fld
dec
adc
ins
dec
jmp
dec
addr16
retf
inc
push
mov
xchg
sbb
xor
in
jmp
je
xor
(bad)
(bad)
loop
pushf
xchg
mov
bswap
xor
sbb
cmp
iret
ret
addr16
jecxz
cmp
ja
stc
inc
loope
inc
fadd
test
adc
xchg
mov
fwait
dec
mov
sub
idiv
outs
dec
ins
fsubp
lods
mov
fiadd
pusha
add
push
xor
call
push
lods
inc
xor
sahf
scas
mov
or
out
jmp
(bad)
rcl
cmp
jbe
clc
ss
pushf
call
rol
(bad)
xchg
jg
dec
inc
cmp
in
sbb
add
jb
aaa
sbb
add
sub
scas
mov
sub
scas
bound
sbb
in
retf
(bad)
sar
jo
cmp
pop
and
fisttp
es
cld
or
pop
and
xor
jecxz
enter
push
das
cmp
(bad)
sub
rcl
inc
and
pop
(bad)
lock
repz
push
adc
add
push
movs
imul
pop
out
mov
imul
inc
test
call
leave
mov
repz
pop
div
ret
xlat
loopne
lods
mov
pop
adc
std
out
mov
js
mov
test
in
pop
and
std
xchg
pop
mov
mov
adc
pop
and
mov
jb
fld
in
es
jmp
les
and
les
mov
cmp
or
in
and
lea
cmc
adc
leave
retf
xchg
aas
ins
jmp
and
leave
lock
inc
test
sbb
jg
xor
pushf
dec
push
clc
(bad)
rol
div
pushf
or
add
loop
push
xlat
mov
xor
dec
jns
hlt
inc
lock
das
mov
dec
jo
inc
in
push
jmp
mov
add
stc
pop
outs
mov
mov
xchg
sbb
and
dec
enter
jl
inc
adc
(bad)
call
js
or
pop
sub
inc
xor
xor
xor
dec
pop
sar
popa
pop
das
push
cmp
popf
dec
jmp
add
xor
and
ds
daa
shr
pusha
inc
sar
call
sbb
mov
das
xchg
and
jge
out
dec
jmp
dec
call
pushf
dec
ss
pusha
dec
or
jle
mov
mov
or
nop
scas
fld
mov
dec
jo
xor
add
retf
mov
cdq
adc
scas
jb
(bad)
dec
jecxz
int
or
jbe
iret
aad
in
cmps
stc
xchg
cmp
in
retf
js
fs
rol
test
cmp
add
pusha
aam
mov
add
mov
adc
dec
lock
or
inc
not
outs
out
dec
ret
adc
ret
sub
mov
cli
jae
je
and
scas
pusha
jno
xchg
icebp
add
les
repz
xchg
inc
arpl
mov
rol
(bad)
ficomp
pop
iret
xchg
adc
jno
stos
jmp
cmp
test
lock
sbb
jmp
div
movs
jno
(bad)
sahf
jo
push
aad
dec
sub
addr16
mov
pop
imul
sbb
sub
clc
or
sub
or
jns
dec
cmps
jae
sbb
xor
rcr
mov
dec
sar
sbb
cmps
pushf
pop
adc
aam
jl
out
(bad)
lock
mov
(bad)
pop
push
ins
xchg
adc
cmp
push
xchg
mov
sbb
push
pop
add
test
or
movs
ins
out
daa
adc
popa
pop
mov
ror
outs
adc
retf
and
pop
imul
int3
inc
cmc
inc
repz
add
adc
imul
das
mov
clc
adc
loope
lahf
jo
neg
test
inc
hlt
out
scas
je
jmp
ficom
mov
add
rol
shl
and
(bad)
fmul
xlat
ret
pop
mul
popf
pop
ret
popa
push
mov
xchg
loopne
pop
sub
or
jo
dec
mov
outs
push
push
aam
sub
test
pop
push
pop
pusha
das
shr
aad
les
mul
hlt
rol
push
les
mov
dec
xchg
inc
popf
icebp
test
or
adc
xor
cmp
imul
push
mov
popa
fdivr
adc
sub
inc
mov
sub
nop
inc
fisub
in
out
in
pop
dec
fbstp
std
(bad)
cs
jmp
ret
inc
ins
pop
xor
or
cwde
or
aad
pop
in
fidiv
inc
in
mov
pop
cmc
mov
mov
adc
out
pop
xchg
(bad)
test
inc
lock
retf
arpl
sub
cmp
call
scas
adc
dec
sahf
sub
dec
fst
pop
xlat
call
jecxz
int3
enter
and
(bad)
pop
push
dec
loop
into
lds
jge
ret
adc
jmp
adc
inc
ret
fucomip
adc
ret
adc
mov
popa
data16
test
sti
xchg
(bad)
aam
and
xor
jnp
sti
out
add
fidiv
es
lds
inc
test
repz
push
adc
pop
clc
mov
jae
add
in
inc
xchg
push
ins
xchg
pop
push
jmp
jecxz
dec
sar
mov
out
cmps
gs
dec
les
cmp
ret
mov
xlat
and
and
or
es
or
loop
leave
inc
fisubr
inc
mov
mov
mov
mov
mov
inc
and
rol
ins
ret
xor
dec
dec
fadd
int
cmp
ins
scas
push
pop
mov
dec
adc
scas
adc
cmc
cmc
xchg
mov
mov
xchg
cmp
mov
imul
sbb
lds
or
xchg
call
inc
dec
xchg
hlt
fmul
out
test
popf
sbb
retf
sahf
mov
cmp
sbb
sbb
imul
pop
aas
sbb
xchg
mov
push
mov
js
into
loope
mov
icebp
neg
mov
xor
hlt
push
xor
ror
inc
pop
mov
cmp
iret
aad
adc
jge
idiv
add
imul
test
push
mov
mov
arpl
test
push
lea
pop
std
repnz
jp
pushf
fldcw
pusha
out
jnp
repz
jmp
(bad)
dec
jno
jmp
jmp
into
xchg
xchg
push
cmp
std
adc
or
sbb
cmp
mov
push
jbe
mov
js
test
xor
jno
adc
jo
mov
cdq
mov
cmp
cdq
dec
pop
pop
fwait
imul
in
leave
mov
xchg
xchg
cld
(bad)
fwait
inc
push
jnp
or
pop
dec
mov
xor
or
push
push
addr16
scas
adc
aam
jge
enter
adc
add
imul
jmp
jb
dec
cmp
outs
(bad)
imul
push
mov
sbb
add
mov
test
xchg
or
sbb
out
rol
jne
lds
sbb
int3
cmp
daa
push
cmp
sbb
mov
jnp
dec
in
add
mov
jmp
adc
frstor
ds
jmp
fs
test
inc
mov
xor
dec
je
push
sub
dec
ret
mov
cli
sbb
sbb
call
cmp
je
mov
or
test
cwde
iret
(bad)
out
shl
cmp
lock
sbb
inc
in
or
pusha
xor
in
jb
(bad)
fucom
lods
das
loop
sahf
add
sub
xor
sbb
test
xor
(bad)
and
cmp
or
or
and
adc
xlat
ret
lods
pusha
mov
ins
dec
adc
sbb
sub
(bad)
mov
aam
aam
loopne
maskmovq
div
movs
and
sar
xor
cmp
add
cmc
pop
scas
inc
cmps
sub
xchg
adc
aaa
sub
stos
ror
sub
sbb
clc
cmp
cli
mov
int3
cmp
dec
lahf
sbb
popf
pop
shl
imul
jge
jmp
mov
std
ins
jns
adc
add
sbb
xchg
xchg
iret
shl
aaa
in
xchg
lds
xchg
lock
loope
cdq
ss
lods
movs
and
lahf
inc
mov
cli
fmul
mov
mov
push
cmp
test
jecxz
fs
xor
jbe
mov
shl
in
sub
push
dec
xor
imul
xchg
mov
stos
inc
movs
cwde
out
movs
retf
sbb
fiadd
in
fisttp
adc
adc
call
arpl
inc
movs
scas
ror
arpl
aam
ins
cmp
pop
sub
iret
loope
scas
mov
mov
dec
aaa
jmp
or
push
jae
lahf
lds
rol
sbb
enter
adc
lock
repz
mov
inc
out
sbb
mov
pop
inc
or
inc
aad
das
xor
mov
loop
loop
sar
mul
xchg
and
lock
enter
stc
mov
retf
jo
push
jg
scas
rcr
lock
movs
xchg
xlat
sbb
pushf
inc
outs
cmp
out
retf
and
pop
mov
sub
jecxz
movs
adc
jno
(bad)
xlat
leave
pop
xor
stc
xchg
xchg
sti
repz
lock
std
int
push
sub
fsubr
(bad)
push
dec
mov
fnstcw
xor
adc
pushf
xchg
and
arpl
shl
test
lds
cmp
or
push
dec
call
adc
sbb
adc
sub
xor
push
mov
pusha
aaa
jg
cli
out
jmp
adc
into
test
aam
dec
sub
div
push
push
arpl
mov
idiv
push
imul
std
and
xchg
cmp
leave
leave
inc
mov
enter
scas
mov
inc
add
imul
cs
aaa
pop
mov
push
adc
mov
pop
mov
adc
in
cmc
inc
das
xchg
leave
inc
popf
and
inc
(bad)
lock
push
les
fwait
enter
mov
cmp
or
out
std
dec
rcr
push
outs
lods
cmp
push
jge
add
icebp
and
xchg
push
mov
es
jecxz
(bad)
(bad)
les
rcr
jno
mov
enter
stos
pop
add
mov
jg
call
jl
push
push
xor
mov
push
add
sub
test
jae
add
loop
mov
std
out
mov
repnz
and
jne
xor
or
cmp
ret
mov
push
mov
gs
or
dec
cmps
sub
imul
shl
xchg
push
jne
xchg
mov
neg
daa
adc
mov
imul
pop
cmp
xchg
ds
call
fld
fnstsw
or
or
(bad)
and
out
into
mov
xchg
std
and
ins
rdtsc
jne
mov
add
mov
inc
xor
inc
sbb
call
jge
push
inc
ss
out
ds
in
inc
call
cmp
iret
repz
mov
mov
add
fist
in
adc
cmp
repz
mov
xor
shl
outs
pop
imul
dec
stos
std
inc
ror
repz
cmp
dec
stos
and
add
xor
inc
mov
aas
fadd
mov
fidivr
retf
data16
xchg
mov
cdq
loopne
xor
stc
ret
gs
movs
dec
in
js
push
jge
icebp
cdq
mov
mov
or
push
xchg
mov
xor
ret
xor
stc
pop
stos
pop
fs
jle
loopne
dec
mov
call
cmp
mov
sbb
pop
fist
jne
cmp
rcl
adc
loope
mov
mov
je
aam
shr
ret
repz
loop
xchg
les
push
add
mov
rol
popf
imul
cmp
mov
xor
mov
pop
pop
shr
fbstp
jl
aam
leave
aas
dec
and
sub
(bad)
cmp
push
and
or
xchg
pop
pop
and
mov
push
pusha
pop
or
in
jge
sbb
sbb
jo
cdq
mov
add
push
in
sbb
(bad)
daa
jmp
fs
arpl
mov
pop
std
add
or
add
add
sahf
push
and
or
push
addr16
add
inc
sahf
pop
sub
sub
pop
adc
fisub
or
loopne
push
mov
push
outs
pop
or
int3
int3
fist
mov
fist
or
push
pop
dec
jmp
cmp
mov
sub
(bad)
push
or
cmps
imul
stc
inc
loope
ss
in
mov
clc
dec
push
mov
movs
pushf
jno
jae
fisttp
add
jbe
xlat
mov
sub
dec
or
leave
sub
in
jecxz
inc
xchg
jecxz
dec
rol
ror
adc
jmp
es
xchg
jnp
and
mov
xchg
cmp
pop
xchg
mov
or
push
ds
(bad)
popa
gs
inc
mov
fcmovb
call
inc
xor
lahf
xor
fldcw
inc
fdiv
imul
jp
out
jb
xchg
sub
inc
add
aas
pop
loope
jns
fidiv
xor
mov
ins
add
push
lods
jp
and
into
inc
fnstsw
jae
lock
push
shl
pop
lods
adc
adc
or
sub
push
push
int
inc
in
dec
stos
jl
call
adc
and
imul
push
mov
jae
call
jne
xor
adc
pop
aam
clc
leave
mov
es
mov
aaa
jge
fmul
mov
add
jmp
push
ja
js
sbb
(bad)
inc
or
dec
adc
add
cs
pop
dec
dec
mov
xchg
xor
mov
mov
call
cld
or
(bad)
jge
jg
scas
lahf
push
fcom
les
mov
dec
ret
pop
push
aam
push
add
jb
push
leave
repnz
or
nop
pop
jae
mov
shl
ja
sbb
movs
and
cmp
in
stc
xor
fldcw
inc
mov
test
fsubrp
fsubr
(bad)
(bad)
jmp
mov
cmp
xor
retf
dec
repnz
(bad)
enter
stos
stc
inc
pop
mov
in
aam
pop
jge
cdq
(bad)
icebp
ror
loope
push
cmp
retf
jle
push
adc
pop
movs
(bad)
scas
loop
gs
movs
pop
call
inc
dec
or
rol
fsubr
lds
fild
and
push
cdq
(bad)
sbb
test
push
ficom
in
outs
test
jl
out
sub
test
fstp
ret
mov
call
sub
mov
or
push
mov
mov
daa
inc
cwde
popa
arpl
mov
movs
and
lods
(bad)
mov
les
test
mov
push
or
movs
lock
retf
(bad)
sti
enter
test
push
es
push
add
outs
sbb
push
cmps
xchg
retf
xor
add
je
fs
mov
jl
retf
xchg
dec
jmp
aaa
cld
ror
mov
xchg
std
jb
(bad)
in
adc
mov
(bad)
retf
inc
cmc
adc
xor
retf
leave
imul
and
push
int3
shl
jecxz
rcl
rcl
inc
daa
add
sbb
pop
cmp
add
out
mov
jbe
inc
sbb
dec
in
das
sub
ret
or
or
(bad)
daa
mov
(bad)
(bad)
ficomp
inc
gs
add
pcmpeqw
adc
es
add
aas
ins
xor
xor
adc
jmp
cmp
push
inc
add
rcr
clc
or
popa
shl
ins
addr16
sti
cli
or
addr16
(bad)
jo
scas
or
mov
stos
pop
and
mov
adc
shr
sbb
arpl
fldcw
imul
push
loopne
dec
ins
loop
push
aam
sar
push
fsubp
push
mov
dec
xchg
lea
daa
xor
lods
mov
cmp
int
mov
stc
pop
sbb
mov
jae
jnp
mov
add
not
pop
rcl
push
retf
dec
xor
shr
ret
in
das
clc
cli
or
(bad)
mov
ds
xor
and
outs
mov
inc
dec
mov
cmps
mov
lahf
or
inc
clc
mov
mov
idiv
dec
mov
push
ds
std
mov
ror
pop
fmul
xchg
add
outs
int3
mov
add
(bad)
cmp
jmp
iret
adc
fidiv
(bad)
cli
div
fmul
xor
int3
sbb
and
push
test
dec
mov
push
sbb
cs
jp
bound
ret
pop
xchg
retf
fs
or
(bad)
jp
retf
cdq
or
shl
das
out
add
dec
add
push
mov
clc
sar
xlat
and
dec
inc
stos
add
mov
jb
imul
mov
xor
ret
or
ret
sub
inc
mov
outs
sub
inc
iret
retf
daa
retf
add
jp
push
or
cmp
jmp
out
push
sbb
vcvtps2dq
(bad)
or
call
les
mov
mov
pop
mov
fdiv
loop
out
inc
mov
pop
jae
sbb
scas
add
push
xchg
push
xor
call
pop
adc
push
bound
jge
(bad)
mov
add
dec
movs
sbb
cs
jnp
(bad)
xchg
dec
hlt
xor
cli
out
mov
and
push
adc
cwde
lods
std
(bad)
lock
lock
lock
mov
leave
fisub
fstp
sub
mov
and
push
gs
ret
outs
es
(bad)
iret
clc
sahf
icebp
cmc
xchg
fsub
aaa
cld
mov
push
sub
popa
mov
pop
ret
ins
popa
out
adc
leave
neg
mov
stc
(bad)
aam
mov
add
mov
les
add
mov
cli
aad
fisttp
adc
hlt
scas
fwait
sub
and
dec
pop
cmc
int3
push
jbe
fisub
stos
test
test
out
pop
out
cmp
int
mov
jns
dec
push
fmulp
pop
ja
and
test
(bad)
add
mov
retf
call
cmps
dec
push
test
inc
and
fist
ja
nop
sbb
add
mov
mov
test
jne
les
(bad)
int3
and
sti
lea
pusha
mov
lods
(bad)
push
xchg
test
push
cmp
add
rcr
xchg
jae
data16
pop
xchg
daa
jl
in
mov
enter
inc
ss
mov
add
test
xor
xchg
add
in
data16
ficom
xor
fwait
adc
xchg
gs
cmps
add
sbb
ja
sub
or
or
mov
jp
stos
add
jmp
or
dec
xchg
xchg
jno
fdiv
pop
xchg
mov
mov
xor
mov
add
fist
sub
arpl
mov
dec
xor
cmp
xor
fcom
les
movs
shl
mov
cli
out
iret
dec
inc
call
cmp
outs
std
dec
jl
jno
test
xchg
les
cmp
mov
call
jb
daa
rcr
dec
ds
mov
jne
sbb
dec
cli
sub
shr
cmps
test
pop
je
in
mov
retf
ja
mov
push
test
cmp
inc
aaa
mov
jl
test
jge
lea
xor
nop
jne
in
ds
xchg
mov
fidivr
cdq
jno
(bad)
in
call
jmp
and
jno
jbe
sbb
jg
jb
cwde
scas
push
mov
xchg
inc
fwait
in
mov
fwait
push
or
in
push
sahf
push
xchg
mov
div
sbb
cwde
and
jg
rcr
xlat
out
push
fimul
or
popf
adc
and
icebp
dec
adc
in
data16
mov
jb
mov
mov
add
add
mov
es
ss
(bad)
sti
sub
sub
dec
jns
fcmovne
out
pop
mov
repnz
jp
xchg
std
rol
push
ds
ret
xlat
adc
lock
imul
push
test
imul
scas
lods
sub
mov
mov
leave
out
add
shl
ret
push
stc
sbb
shl
sub
int3
xchg
sub
push
test
dec
lea
fst
sbb
xchg
pop
jne
cmc
cld
pop
mov
fs
or
push
dec
fisttp
(bad)
push
mov
into
mov
rcr
jnp
mov
cmc
sbb
dec
rol
sar
jp
add
adc
nop
lods
mov
inc
or
retf
mov
sbb
les
push
fisttp
adc
enter
repnz
and
aad
xchg
xchg
mov
and
fmul
jp
xor
add
mov
pop
push
sti
mov
jo
adc
repnz
cmp
adc
xchg
jl
mov
mov
call
adc
add
mov
ja
adc
outs
fsub
sbb
and
push
mov
imul
lods
mov
aaa
sub
(bad)
or
mov
pop
bound
stos
rcl
fidiv
into
xchg
loopne
sbb
sti
add
cmc
mov
dec
in
lahf
dec
iret
daa
add
call
lods
mov
jbe
mov
mov
mov
push
repz
mov
and
sahf
inc
mov
mov
xor
pop
fild
sbb
nop
fld
pop
cwde
jo
mov
or
data16
pop
xor
jne
cmp
inc
push
cs
add
loope
adc
idiv
dec
stos
imul
mov
adc
mov
(bad)
or
pop
sub
test
sahf
push
xor
test
shl
mov
push
fisub
ficomp
rcl
mov
rcl
xchg
fadd
xor
sub
or
fnstsw
mov
sbb
mov
ror
xchg
dec
jmp
es
pop
sub
cmc
mov
add
(bad)
jl
cdq
sar
inc
mov
jmp
push
out
(bad)
xlat
mov
outs
add
pop
mov
add
test
js
test
xchg
iret
repz
sub
lds
lea
jbe
push
adc
dec
cmp
jbe
cmp
(bad)
jg
cmp
movs
mov
jo
lods
dec
es
test
jecxz
add
popa
mov
mov
clc
mov
dec
loop
mov
mov
add
out
push
xlat
sbb
xchg
into
aaa
in
sar
mov
xor
pushf
sub
int
pop
pop
xchg
xchg
scas
cdq
outs
sti
adc
(bad)
fdivr
push
sbb
pop
popf
pop
fnstcw
(bad)
in
lahf
cmp
icebp
mov
fild
sub
pusha
iret
sbb
and
call
push
aam
stos
arpl
xchg
xor
sbb
mov
shl
sbb
rcl
or
(bad)
int
in
or
mov
xor
ds
(bad)
xor
jbe
xchg
cwde
pop
lods
push
or
pop
sti
ins
rol
icebp
xor
out
dec
add
or
inc
test
jmp
jbe
int3
mov
push
mov
cmp
mov
fnstenv
test
dec
sub
pop
mov
xchg
mov
adc
sbb
clc
cmps
clc
sub
jnp
xchg
into
(bad)
sbb
test
imul
jmp
xchg
or
aad
lahf
add
call
and
test
mov
jbe
cmc
test
test
(bad)
imul
dec
xchg
cmp
xor
mov
jo
(bad)
mov
cmp
mov
int3
push
stos
pushf
xchg
jno
mov
mov
adc
xchg
sbb
pop
and
inc
cmp
test
(bad)
xchg
xor
cmps
pop
pop
out
sbb
inc
les
test
je
shl
jno
sub
dec
cmp
cmp
(bad)
cmps
xor
fld
rcr
int
out
scas
rcl
xchg
xor
aas
xor
int3
mov
daa
retf
dec
jle
cmps
xor
and
popf
mov
pop
mov
mov
pop
leave
call
jle
mov
les
loop
aas
cmps
xchg
cwde
dec
push
push
hlt
pop
xchg
mov
imul
div
imul
xchg
xor
jns
call
dec
int
daa
xchg
inc
jns
and
mov
pop
push
fistp
xchg
cs
push
pop
(bad)
mov
call
add
cmp
ins
xlat
jb
sbb
ret
xchg
sbb
sbb
ret
shl
xchg
retf
jge
or
push
inc
pop
stos
mov
xchg
sub
cwde
mov
sub
shr
jl
shl
int3
sub
bound
mov
fcomp
xchg
jmp
sahf
ja
lock
retf
aaa
outs
test
adc
aaa
jmp
mov
sbb
or
(bad)
sub
sub
das
mov
jb
add
icebp
aam
and
jg
ja
mov
mov
pop
push
xchg
mov
or
jle
mov
cld
ja
fcom
repnz
sbb
sub
(bad)
mov
out
inc
lahf
loope
jne
loopne
call
lahf
ds
js
mov
mov
iret
sub
inc
adc
jmp
ja
push
sti
inc
add
add
adc
dec
jle
sub
mov
fdivrp
cdq
cld
push
add
add
aaa
xchg
aad
in
and
jl
fbstp
in
je
mov
in
(bad)
(bad)
xchg
cmp
test
(bad)
jle
div
sbb
mov
out
cmp
cmp
jle
add
cmp
pop
mov
dec
out
pushf
icebp
loopne
or
mov
scas
mov
or
mov
cmp
dec
or
iret
(bad)
ror
cwde
dec
xor
ss
sar
xor
pop
mov
pusha
lahf
popf
cmp
pop
sbb
adc
add
mov
cmp
fs
or
loop
es
jae
sti
(bad)
cmp
jmp
mov
jl
pop
pop
shr
cwde
xchg
pop
push
imul
imul
retf
mov
pop
out
xchg
adc
sub
mov
jecxz
cli
pusha
int
mov
sub
ss
jle
push
ins
rdpmc
jae
adc
xor
cmp
lods
sub
dec
pusha
test
bound
and
pop
imul
sbb
idiv
or
js
jns
jbe
fst
mov
loop
gs
jbe
push
in
cmps
push
std
and
push
push
test
or
cdq
pop
push
mov
inc
cli
sbb
int3
mov
adc
cdq
das
daa
lock
gs
cmp
mov
inc
outs
call
and
sub
mov
call
sahf
test
cmp
cmp
jne
out
cmp
mov
dec
and
pop
sub
add
push
and
and
hlt
cmc
fwait
out
jo
mov
adc
inc
jl
or
stos
mov
sbb
fdiv
sub
jmp
push
in
daa
inc
mov
mov
mov
mov
mov
aad
clc
sbb
std
cmps
sbb
ins
mov
xchg
ret
xlat
push
adc
mov
push
or
pusha
retf
les
dec
pcmpeqb
(bad)
xchg
aad
or
outs
mov
lea
xchg
addr16
fcom
bound
pop
retf
fld
sub
int3
jl
jecxz
and
xchg
adc
push
loopne
cld
out
sar
retf
and
ds
pop
dec
std
sub
sub
loop
sbb
ja
jl
jmp
scas
cdq
dec
mov
repnz
cmp
dec
icebp
adc
repnz
adc
or
push
xchg
sub
xor
dec
push
or
and
ret
sbb
mov
dec
dec
cmp
test
fsubr
sub
pop
bound
jl
arpl
arpl
inc
push
aaa
mov
test
dec
xchg
cmps
retf
cmps
scas
or
test
ja
lock
sub
aaa
add
jae
mov
mov
(bad)
fld
pop
idiv
cmps
lea
dec
or
cmp
nop
aad
bound
pushf
mov
out
je
cmps
scas
cmp
push
loop
sub
mov
stos
mov
pushf
fisubr
cwde
pushf
int
jmp
cmp
ret
rcl
inc
dec
pushf
jle
push
out
inc
and
sbb
cmps
mov
int3
cmovb
xchg
aaa
mov
sti
in
mov
(bad)
or
adc
or
(bad)
rcr
sub
dec
xor
loopne
pop
and
mov
pop
nop
(bad)
int3
and
jg
loop
add
jnp
xor
sahf
pop
fwait
pop
adc
jle
mov
dec
aam
in
(bad)
mov
out
jnp
sbb
stos
pop
pop
mov
dec
jmp
push
dec
dec
loop
cld
stos
cmp
shl
xchg
fs
inc
aam
sahf
inc
(bad)
int3
xchg
jne
dec
adc
inc
out
jmp
ins
(bad)
rcl
add
sub
pop
rol
mov
xchg
sbb
dec
fmul
icebp
push
(bad)
cmp
sbb
mov
sahf
push
add
mov
(bad)
sbb
out
inc
(bad)
ret
nop
jp
ins
fist
cmp
ret
ror
dec
jle
repz
jne
push
mov
cmp
movs
imul
mov
fwait
mov
xchg
fldenv
lea
pusha
test
bnd
leave
sbb
test
mov
aaa
imul
(bad)
repz
mov
adc
jmp
mov
outs
cmp
mov
sbb
or
xchg
dec
ins
cmp
pop
xor
imul
pop
dec
inc
imul
mov
out
add
or
push
in
xchg
push
lods
jecxz
inc
sbb
loopne
add
cmp
jmp
pop
sub
mov
cmps
mov
repz
dec
push
(bad)
in
aaa
xchg
mov
pop
lock
int
add
jns
or
leave
in
fwait
mov
mov
addr16
sbb
aaa
add
inc
out
out
fmul
sbb
cdq
add
js
or
and
and
mov
fldenv
in
data16
lahf
rcr
xchg
jge
sbb
shl
push
mov
adc
push
push
mov
call
lods
repz
in
into
jg
neg
mov
popa
rcr
or
mov
xchg
mov
inc
lea
dec
pop
jno
fidivr
inc
jg
not
int
lock
mov
mov
cdq
aam
sub
ds
je
inc
push
in
(bad)
ins
call
or
push
cmp
das
mov
cmp
mov
mov
jmp
daa
mov
and
shr
sub
pushf
repz
pop
sbb
enter
xlat
test
xchg
mov
mov
ret
(bad)
(bad)
(bad)
dec
(bad)
int
aad
(bad)
mov
add
sub
sbb
push
xchg
push
push
in
pop
std
(bad)
aad
std
repnz
sar
arpl
xor
rcr
out
pop
neg
dec
add
push
dec
enter
or
mov
jno
hlt
popa
mov
dec
jge
stos
pop
sti
mov
sub
loope
mov
popf
and
call
dec
(bad)
push
scas
sub
test
jge
xlat
ror
inc
push
push
aas
add
push
pop
mov
jle
nop
lea
and
cmp
inc
enter
mov
mov
and
(bad)
test
aad
out
fwait
retf
push
dec
out
test
cmps
out
cmp
jns
inc
mov
push
rol
adc
rcr
sar
shl
adc
inc
or
mov
mov
int3
fdivr
mov
xor
aad
mov
lock
pop
repz
cdq
and
retf
sub
dec
imul
les
minps
sub
popa
fldcw
ror
sbb
mov
sbb
jae
fst
xchg
sub
push
pop
sub
add
sbb
push
cli
mov
shr
pop
jb
mov
mov
mov
mov
scas
xchg
in
cmp
and
pop
and
sub
jno
pop
xchg
dec
pop
xlat
outs
push
push
pusha
pushf
cmp
or
pmuludq
and
and
add
loopne
adc
repnz
loop
ja
mov
adc
or
cmp
fimul
scas
dec
jnp
clc
mov
cmps
add
je
fist
mov
inc
add
call
push
(bad)
mov
pop
in
test
mov
mov
hlt
fstp
in
add
push
movs
cmove
ss
sahf
dec
mov
push
cmp
sub
imul
jbe
or
imul
inc
call
cmp
(bad)
sub
cmps
or
cmp
mov
lock
xor
sub
xor
cli
(bad)
or
retf
adc
push
inc
mov
imul
cmp
fcmovb
jge
xchg
cwde
fnstcw
cmp
jnp
fdivr
jne
int3
xor
push
sbb
and
mov
and
jg
scas
inc
sub
xor
int3
inc
cdq
and
mov
rcr
inc
jbe
xchg
ins
cmp
xchg
mov
sbb
div
scas
ins
test
mov
add
repnz
outs
pop
repnz
(bad)
movs
out
mov
or
jae
rcr
dec
cld
imul
loope
(bad)
mov
mov
sub
xchg
dec
clc
xchg
mov
jle
xchg
inc
xor
lea
(bad)
sti
pop
inc
cs
adc
sar
pop
and
or
ins
test
inc
add
xchg
shl
lahf
push
cwde
add
and
adc
push
sub
sub
mov
sub
cmp
jg
cdq
fdiv
pop
mov
test
es
pop
xor
sbb
test
mov
lods
mov
stos
shr
sbb
fsubr
out
aaa
inc
mov
push
pop
in
or
push
clc
and
aad
enter
imul
bound
out
sbb
int
popa
aaa
in
xchg
test
rcl
test
cmps
ret
int
outs
jns
fst
mov
mov
cmp
pusha
push
out
sub
jge
test
call
dec
call
mov
jbe
mov
ss
ja
fisttp
sbb
pop
mov
jge
add
fisubr
push
out
dec
sub
xchg
mov
pop
mov
rol
add
loope
ret
xchg
jbe
pop
mov
or
test
sub
and
das
shl
stc
sub
popf
mov
(bad)
fidiv
xor
loop
and
mov
dec
in
cdq
test
dec
push
(bad)
fstp
sub
jle
and
cmps
sub
xchg
push
mov
mov
leave
jmp
rcr
or
test
sti
add
test
arpl
sub
neg
test
and
es
test
sbb
mov
lds
sbb
xchg
jns
pop
nop
les
cmp
sbb
lods
call
mov
xchg
out
cmp
test
dec
je
dec
mov
mov
cmps
icebp
(bad)
sbb
or
mov
aad
pop
hlt
paddw
dec
push
push
cdq
sub
mov
aaa
jbe
test
or
fadd
jno
js
push
cmp
dec
mov
jge
les
push
fdivr
repnz
and
es
cwde
jmp
or
cmps
ret
cli
pop
jb
fwait
xchg
xchg
cmp
jge
or
pop
xchg
lahf
(bad)
aas
cwde
add
inc
daa
mov
fisubr
dec
jo
fstp
pop
imul
push
sub
push
push
add
or
jne
jge
hlt
test
mov
xor
out
fsub
js
mov
out
retf
(bad)
fwait
push
push
mov
fcomp
push
sbb
mov
rcr
sbb
push
mov
dec
jo
or
sub
or
je
adc
int3
sbb
loopne
add
sub
mov
ror
cmps
cmps
jle
or
mov
mov
arpl
jl
in
push
jns
loopne
loope
sbb
in
jmp
call
mov
mov
cmp
loop
and
cmp
dec
movs
dec
inc
ds
nop
retf
mov
sbb
sbb
xlat
sbb
mov
inc
xchg
jmp
jle
mov
dec
fstp
call
aaa
add
mov
fmulp
sahf
ret
dec
inc
out
test
(bad)
pusha
popf
pop
and
mov
(bad)
jl
xchg
sahf
sbb
push
bound
mov
xor
lahf
clc
(bad)
add
mov
inc
(bad)
rcl
sbb
and
sbb
int
xchg
les
sahf
loop
fisubr
mov
push
hlt
jns
adc
out
xchg
ret
pop
xchg
into
adc
(bad)
(bad)
jmp
lods
movs
cmps
popf
jl
movsx
test
inc
push
mov
mov
lds
xchg
shr
fwait
push
daa
jb
dec
loopne
(bad)
out
adc
fcmove
mov
mov
lods
rcl
push
in
sub
inc
dec
ret
ss
dec
in
sub
cli
retf
inc
in
dec
stos
push
test
sub
ds
enter
pushf
xor
and
idiv
movs
gs
and
cmp
shl
sub
gs
inc
mov
jp
mov
inc
enter
dec
scas
mov
popf
retf
push
xchg
mov
pop
pushf
jnp
stos
pop
mov
sbb
jnp
test
enter
and
pop
mov
push
(bad)
sbb
int
loop
adc
pop
mov
lods
push
(bad)
call
in
or
sbb
cmp
pop
push
gs
stos
push
cdq
ret
jmp
push
cmps
ja
jb
jmp
or
adc
pop
pop
pop
mov
ret
xchg
movs
cmp
cmp
fdiv
fld
mov
bound
rcl
xchg
icebp
cmp
mov
dec
cdq
inc
cmp
rcr
(bad)
push
inc
fwait
cwde
jecxz
jbe
hlt
in
outs
(bad)
jo
xor
or
test
and
xor
mov
fnsave
xlat
stos
inc
fst
div
adc
or
into
jg
add
inc
imul
sti
mov
ret
repnz
push
dec
cmp
mov
and
push
ja
add
adc
jmp
jne
sbb
iret
push
ror
sub
sahf
jae
sub
dec
xchg
out
mov
loope
push
cmps
jl
mov
test
std
inc
aad
jbe
dec
pusha
mov
sti
mov
dec
jmp
mov
(bad)
clc
or
stc
cld
sub
add
jle
daa
clc
jle
and
scas
cmp
xchg
popa
mov
sub
(bad)
cwde
or
or
pop
ins
jmp
xor
fwait
(bad)
mov
lea
inc
iret
aaa
pop
and
inc
mov
lods
xchg
into
mov
lea
scas
call
test
stos
push
add
loopne
sbb
dec
push
sub
sub
pushf
lahf
test
mov
xchg
jge
stc
in
add
pop
xor
or
adc
fldenv
jo
pop
bound
jmp
lods
push
popa
icebp
and
dec
loope
mov
mov
jno
mov
add
and
jg
sahf
mov
or
jl
into
mov
pop
cmp
nop
cmp
shl
test
fcomp
mov
leave
movs
stc
sub
fidiv
and
dec
movs
ret
push
jl
push
ret
pushf
xor
sbb
xor
mov
es
fcom
nop
xor
inc
out
mov
or
cdq
cmps
jne
je
jl
outs
ss
mov
test
lock
jle
data16
mov
mov
jmp
jbe
mov
jmp
add
cwde
retf
lahf
xchg
pop
je
xor
movs
dec
pushf
add
in
push
or
retf
mov
jmp
push
ret
jnp
mov
jle
movs
loopne
in
(bad)
mov
das
cmp
(bad)
js
test
dec
sbb
pop
jnp
xchg
out
(bad)
loop
mov
or
pop
or
fst
aas
mov
in
sub
inc
cwde
fnsave
movs
jmp
enter
xchg
sub
or
sti
sub
add
or
xchg
data16
div
popa
mov
adc
retf
clc
outs
sbb
xchg
and
stc
nop
in
sub
int3
ss
add
(bad)
push
pushw
pop
and
aam
sbb
jne
int3
adc
mov
mov
fdiv
xchg
addr16
loop
loopne
stos
ret
punpckhdq
and
in
pusha
sbb
addr16
jp
adc
jl
jmp
loop
(bad)
out
(bad)
jle
repnz
jne
mov
hlt
call
add
xor
cmp
ins
int3
cdq
mov
(bad)
xchg
xor
outs
mov
mov
xor
(bad)
fnstenv
loop
fld
jl
pop
jno
xchg
inc
cmp
out
inc
iret
dec
int3
xchg
adc
fisub
push
icebp
mov
cmp
stos
aad
add
push
test
in
pop
or
sbb
and
jnp
cld
outs
and
pop
mov
sub
sbb
enter
mov
aam
jno
mov
ror
or
out
or
inc
lahf
push
mov
xor
(bad)
xchg
add
xor
sahf
ror
mov
loop
pop
push
je
pop
cs
ins
mov
dec
int
in
cs
lods
pop
test
(bad)
mov
xchg
mul
mov
pop
sbb
test
out
(bad)
mov
jno
ret
bound
or
adc
and
and
call
shl
sub
dec
in
iret
iret
mov
mov
scas
xchg
retf
and
mov
out
stos
cmp
test
hlt
pop
push
movs
inc
mov
sub
rcl
shl
fxch
cmp
sbb
push
sar
dec
adc
and
std
into
sub
daa
xor
lods
add
inc
fcomp
or
pop
out
stos
push
and
dec
nop
sbb
pop
cli
xchg
sub
dec
inc
neg
inc
and
jne
stos
mov
jne
jge
in
(bad)
cmp
or
mov
scas
push
sub
xlat
adc
out
xchg
(bad)
xchg
out
xor
mov
out
loope
retf
outs
cs
movs
int
frstor
xor
inc
xor
mov
ss
inc
fdivr
push
xchg
addr16
(bad)
sbb
(bad)
cmp
push
dec
inc
out
popf
mov
(bad)
mov
loopne
daa
cs
sub
push
imul
add
aaa
hlt
fcomp
loop
sub
push
mov
mov
mov
pop
push
xor
mov
clc
ins
icebp
dec
stc
mov
test
ficomp
jns
ret
test
or
out
scas
push
inc
sbb
mov
push
cs
and
ret
sub
mov
cmc
xchg
aad
pop
scas
fs
arpl
mov
ins
mov
cwde
pop
pop
imul
lds
fisub
shr
and
loopne
movs
ja
jo
mov
add
in
in
enter
pop
xchg
xor
cmp
imul
inc
popfw
add
ss
sbb
jnp
sub
mov
xchg
pop
pop
je
aas
imul
shr
in
mov
push
jle
inc
es
subps
mov
out
test
cmp
jmp
xchg
in
icebp
(bad)
push
rol
mov
or
mov
icebp
mov
std
mov
adc
xor
es
sbb
mov
repz
cmp
mul
mov
dec
out
repz
push
outs
ja
inc
out
jnp
mov
(bad)
imul
rcl
ret
iret
mov
push
fucomip
and
scas
cmps
xchg
cmps
mul
sub
fimul
shr
pop
aas
aaa
pop
cmp
hlt
popa
adc
std
push
aas
scas
aad
inc
jmp
pusha
arpl
pop
mov
dec
jae
ss
not
aaa
xchg
sub
(bad)
pop
xor
gs
jnp
cli
push
pop
fld
popa
gs
out
and
cwde
sbb
sbb
dec
and
inc
imul
dec
ins
sar
adc
fs
cmp
xor
iret
pop
jae
in
mov
iret
xchg
call
xchg
sti
dec
sbb
dec
adc
mov
jmp
pop
repnz
call
nop
sbb
adc
lds
sti
ins
sub
push
jmp
test
adc
mov
add
aaa
add
pop
cwde
pop
stos
imul
test
mov
call
sbb
test
mov
dec
test
popf
sub
cdq
sub
cmp
pop
daa
adc
fprem
retf
push
sub
hlt
or
or
cs
js
mov
repz
xor
mov
ret
out
fisttp
cmps
mov
rcl
add
test
pop
inc
sti
lahf
mov
and
mov
jl
push
pop
aam
repnz
(bad)
mov
cmp
sbb
icebp
inc
xor
jno
cli
cmp
inc
or
rcl
mov
ins
cmp
outs
cmp
aam
ds
dec
pop
pop
pop
mov
mov
loopne
add
inc
xor
dec
into
arpl
xchg
mov
cs
xchg
loop
dec
jae
mov
imul
add
jg
test
pop
jns
hlt
push
dec
and
dec
cmovno
xchg
mov
mov
pop
js
mov
call
or
dec
fcmovb
shr
fs
aam
movs
fwait
push
cld
cdq
jle
sar
xor
adc
popf
loopne
out
dec
or
mov
add
mov
and
(bad)
pushf
sbb
jg
sub
fidiv
xchg
push
mov
(bad)
mov
adc
push
inc
out
(bad)
add
js
cwde
aam
cmps
sub
sbb
cmp
mov
adc
sti
dec
xchg
rol
sar
fistp
test
in
in
inc
outs
pop
push
and
lods
sub
push
imul
sub
sub
rcl
jmp
mov
mov
xor
add
jecxz
cmp
fsub
aad
out
sahf
push
in
repz
cwde
pusha
retf
mov
aaa
data16
mov
dec
sub
jmp
fcmovnb
ss
adc
push
jl
loop
jg
add
clc
inc
sbb
outs
push
push
neg
push
mov
add
mov
jg
pop
adc
pop
clc
xchg
shr
jae
sar
xchg
paddb
xor
sahf
dec
arpl
hlt
pop
push
scas
out
cmps
adc
add
inc
imul
fild
lds
outs
movmskps
adc
pop
ss
or
(bad)
cmps
sti
jnp
(bad)
stos
mov
sti
test
cmc
fsub
pop
adc
in
aam
mul
inc
mov
xor
or
xor
ret
jmp
imul
fisttp
mov
das
jo
and
xor
push
pop
femms
fiadd
sub
dec
cdq
mov
push
in
inc
xor
lea
fst
pop
dec
cmp
xchg
and
jns
movs
lahf
leave
call
aaa
sbb
mov
sahf
adc
imul
xchg
pop
mov
pop
scas
push
ins
outs
mov
xchg
cmp
xrelease
pop
lds
shl
aas
adc
mov
lea
lds
cmp
xchg
or
xchg
pop
jae
sub
pop
pop
push
xchg
adc
test
and
retf
inc
adc
(bad)
ins
cs
stos
xor
repnz
inc
sbb
xor
inc
or
sar
bnd
sub
sbb
cdq
dec
mov
push
xchg
dec
or
sub
in
repz
in
movs
loop
add
(bad)
lahf
cmp
lock
in
add
jbe
jb
adc
enter
sbb
ins
call
repz
mov
pop
mov
mov
and
movs
mov
xchg
inc
jle
ficom
pop
push
movs
(bad)
out
mov
xor
jle
xor
pushf
pop
imul
out
or
sbb
pop
mov
psrlq
scas
pop
push
jbe
mov
or
stos
stos
mov
ja
mov
rcl
add
loop
pop
nop
add
and
inc
xchg
dec
dec
int
(bad)
mov
int
call
sub
pop
mov
out
ins
lods
pop
fsub
or
pop
mov
cli
jg
jb
scas
sar
sbb
lods
fdivr
jae
push
add
xchg
shr
push
xor
adc
mov
mov
(bad)
loopne
in
pusha
call
fbstp
and
and
(bad)
cmp
sub
xchg
lahf
aam
loop
dec
sub
or
xor
xor
xchg
add
mov
sbb
ror
(bad)
fcmovne
mov
pushf
lock
mov
jb
arpl
sub
sub
mov
sub
outs
pusha
clc
mov
clc
aad
adc
dec
fucomi
mov
inc
out
fisub
lods
lock
inc
imul
rol
xor
neg
out
lods
rcl
pop
dec
outs
cli
outs
sub
out
jmp
loope
retf
outs
bound
jo
lods
ja
xor
xchg
int
xor
cli
pop
pop
lods
aaa
leave
shl
movs
pop
ja
mov
in
mov
dec
sti
pop
jl
out
leave
gs
sahf
jp
das
pushf
fdiv
cs
(bad)
nop
not
mov
sbb
mov
mov
mov
jge
clc
aad
adc
out
shl
gs
dec
sbb
pop
out
jnp
jmp
inc
gs
inc
jns
pop
mov
mov
and
and
add
xor
movs
mov
pop
mov
shl
push
xchg
daa
mov
mov
xchg
and
sti
and
bound
jb
and
ins
leave
mov
xchg
xchg
(bad)
and
and
loop
test
or
mov
ret
jg
fild
add
fild
cmp
sbb
(bad)
cld
jge
cmp
sub
fdiv
retf
mov
sbb
cmps
int
push
retf
dec
push
dec
or
and
push
jmp
arpl
out
cmps
pop
mov
pop
push
daa
adc
fcom
add
jns
mov
xlat
(bad)
lock
(bad)
cld
aaa
outs
or
mov
push
mov
xchg
push
mov
jb
std
or
dec
dec
pop
and
push
xor
out
lea
pop
int3
and
and
in
int
inc
mov
clc
test
cmps
shl
popf
and
gs
repz
and
mov
shl
pop
mov
clc
sub
cmp
sahf
mov
or
mov
nop
sbb
xchg
jmp
ror
jbe
loope
stos
pushf
dec
xlat
mov
mov
sub
lock
mov
push
sbb
jp
pop
xor
xchg
jle
and
lea
mov
pusha
retf
(bad)
neg
dec
mov
daa
pop
and
loop
lock
mov
fdivr
and
sar
sahf
jg
push
cmps
adc
dec
xchg
fucomi
pop
jne
clc
xor
js
inc
mov
arpl
xor
sbb
mov
cmp
fcomp
jl
call
mov
mov
scas
push
xor
jg
aaa
dec
test
or
jae
pop
sbb
jmp
cmp
pusha
push
mov
repz
stc
(bad)
retf
pop
in
push
push
fdivr
mov
scas
xor
push
sbb
mov
mov
push
pop
push
fnstcw
cdq
push
es
inc
pop
mov
lahf
and
aad
jo
in
sti
inc
push
cmp
call
in
arpl
call
fidivr
sti
mov
imul
xor
xchg
test
clc
jge
push
jo
pop
mov
sub
push
xchg
sub
dec
ret
sbb
or
dec
dec
inc
mov
not
test
xor
outs
loop
or
add
shl
xchg
xlat
pop
push
shl
and
cmp
mov
aam
enter
out
xlat
fild
popa
and
aaa
jmp
xlat
mov
jo
pushf
push
xor
jb
or
enter
or
pusha
fidiv
rol
fiadd
mov
fstp
inc
sub
xor
mov
mov
fwait
cs
sub
(bad)
sbb
xlat
cld
xchg
std
sub
sti
push
adc
mov
cmp
jae
jo
in
push
sub
jecxz
mov
repz
and
pop
ja
jge
adc
mov
idiv
pop
cmp
ficomp
iret
add
mov
xchg
sti
(bad)
scas
(bad)
and
sar
movs
dec
jp
push
nop
movs
push
loope
call
enter
ins
outs
fcom
jecxz
push
inc
stc
cmp
call
das
dec
(bad)
aad
xlat
in
fisubr
xlat
adc
sub
jge
cdq
adc
call
push
cmp
mov
sub
stc
sbb
setae
(bad)
inc
inc
xchg
add
xor
pop
int
repnz
mov
push
push
repz
retf
daa
int3
lods
mov
in
(bad)
es
and
jle
jge
cdq
mov
dec
and
enter
in
iret
les
xor
mov
sub
push
lahf
inc
rcr
adc
inc
repnz
loopne
ret
out
push
xchg
stos
inc
push
sub
cmp
mov
sub
mov
sbb
rol
and
test
out
rcl
sub
ror
shl
jb
sbb
xchg
sbb
cli
sub
inc
sub
ja
mov
pushf
lods
sbb
jae
sti
mov
and
and
and
leave
dec
and
ja
test
cdq
call
adc
in
pop
sbb
sub
ins
(bad)
dec
pop
adc
push
push
inc
int3
iret
mov
and
in
stc
shl
sahf
jg
shl
xchg
out
jae
mov
fwait
test
ret
push
das
icebp
cmp
loopne
jbe
lahf
xchg
inc
xor
in
xchg
jbe
test
push
popf
test
push
push
test
sub
xor
fcmovnbe
adc
dec
jns
sub
stos
dec
scas
in
pop
les
jo
pop
popa
pop
mov
loopne
add
sub
cmp
(bad)
rol
js
pusha
xchg
ss
xor
sub
idiv
cmps
out
lock
sub
popw
stos
sbb
sub
data16
pop
(bad)
imul
add
movs
mov
imul
xor
aas
push
in
out
mov
je
popa
(bad)
dec
dec
inc
xor
aaa
push
adc
cmp
inc
dec
cmp
out
mov
(bad)
clc
or
stc
dec
xchg
add
mov
dec
pop
enter
shl
xchg
jo
popf
jmp
ins
aaa
daa
cmps
pop
aas
scas
cld
cmc
dec
xchg
iret
jecxz
fcom
mov
sti
pop
jmp
push
xlat
mov
cmc
add
xor
imul
ins
add
sub
dec
clc
mov
inc
retf
scas
xlat
aam
das
mov
in
repnz
stos
pop
xor
out
add
or
and
inc
push
mov
leave
leave
in
ins
cmp
or
ficom
xor
jnp
mov
clc
sbb
sub
pop
hlt
jnp
test
leave
mov
sbb
dec
mov
mov
inc
outs
jmp
outs
mov
repz
lods
iret
ja
popa
arpl
xor
inc
mov
bound
dec
adc
stc
es
cmp
aam
push
dec
ins
std
xchg
mov
scas
push
aas
sub
push
push
xor
and
jne
idiv
pop
jmp
cmp
dec
jne
mov
cld
xor
stos
loopne
pop
xchg
xchg
jne
gs
out
cld
shl
jnp
repnz
ins
inc
push
mov
jno
xchg
inc
push
lods
xchg
xor
push
adc
arpl
cwde
add
movs
jge
fdiv
jmp
daa
fbstp
or
jp
or
fsubr
call
push
fistp
cmp
aas
fist
add
adc
popf
sub
stos
ds
and
lods
pop
sub
jno
pop
sar
in
pop
stos
jl
sub
xor
(bad)
mov
ror
pop
mov
sbb
das
push
mov
test
icebp
and
cmp
inc
jle
adc
test
ja
jo
push
pop
jmp
setle
xor
je
or
push
js
push
push
cmp
mov
lock
scas
xor
and
cli
loopne
mov
(bad)
scas
pop
retf
into
cs
nop
and
xor
add
push
inc
xchg
pop
leave
jp
mov
les
scas
or
or
cmc
out
push
add
test
pop
jp
mov
out
ja
in
mov
xor
bound
movs
les
ffree
mov
dec
lea
inc
cwde
inc
movs
test
cwde
aam
popf
sub
xor
xchg
(bad)
cmc
and
clc
xor
xchg
mov
sub
cli
mov
shr
xchg
mov
scas
icebp
cmp
pop
sub
add
mov
mov
xlat
movs
js
cmp
sub
cmp
shr
and
jl
mov
imul
dec
das
shr
retf
in
xor
push
inc
pop
pop
ret
mov
ror
ins
push
jmp
into
inc
movs
aam
mov
div
jno
mov
mov
cmp
adc
popa
sbb
popf
add
cmp
inc
ret
add
jno
into
mov
and
push
push
(bad)
les
cmps
in
js
xor
out
push
sbb
les
mov
out
scas
cmps
stc
loop
fsubr
adc
rol
xchg
mov
pop
call
rcr
xchg
stos
retf
adc
pop
hlt
mov
outs
mov
leave
pop
and
aaa
call
iret
push
mov
and
xchg
(bad)
loop
repz
dec
pop
mov
pop
les
jo
sub
xchg
mov
fwait
xor
dec
pop
push
movs
push
xchg
xchg
pslld
mov
and
xchg
aad
ret
lds
jp
shl
add
retf
sub
sub
loopne
ror
(bad)
pop
pushf
xor
fnsave
fdivr
lods
mov
imul
lds
mov
push
scas
mov
inc
xlat
loop
xchg
sahf
in
add
adc
mov
fwait
lock
pop
into
mov
xchg
int
sub
rcr
shl
or
xchg
inc
test
push
aam
pop
inc
mov
(bad)
into
or
add
imul
clc
mov
fxch
in
pop
and
add
dec
sub
mov
cwde
ror
or
mov
pop
pusha
or
cmc
xor
in
sbb
dec
mov
pop
(bad)
sbb
inc
shl
(bad)
adc
iret
inc
cmps
pop
mov
sub
fs
rcl
fwait
aam
loop
sub
or
inc
or
pop
and
pop
mov
out
mov
daa
imul
dec
in
ja
iret
mov
rcr
pop
and
add
pop
cdq
outs
lds
dec
cmps
int3
jg
movs
test
mov
pop
shl
mov
aas
fnstsw
pushf
cmc
mov
je
cld
sub
retf
xor
xor
fs
cmp
lahf
cmp
sbb
xor
js
push
movs
ret
(bad)
repz
push
clc
pop
push
inc
cmp
and
push
push
add
es
jno
call
mov
jmp
test
popa
push
test
and
popa
in
cmp
std
xchg
or
jecxz
cmps
(bad)
(bad)
lock
mov
xor
adc
push
and
call
(bad)
mov
pusha
jae
ja
push
mov
pop
mov
pusha
sub
fs
push
push
mov
jecxz
aaa
or
cmp
adc
xchg
jmp
inc
jecxz
sbb
xchg
jbe
maxps
xchg
and
jnp
stc
shl
(bad)
lock
xchg
mov
xchg
sbb
call
add
stc
sub
adc
retf
mov
jecxz
sbb
setns
fsubr
stos
push
adc
inc
scas
leave
and
push
pusha
mov
iret
sbb
mov
dec
dec
pop
inc
xchg
xchg
mov
sub
out
push
and
sbb
mov
ins
imul
xchg
inc
pop
(bad)
(bad)
inc
adc
aad
test
xor
jge
push
(bad)
or
xor
add
xor
nop
(bad)
mov
push
scas
retf
push
jl
fild
call
push
sbb
jae
push
inc
out
icebp
or
je
mov
sti
adc
retf
(bad)
es
test
mov
fwait
inc
jp
js
std
jg
ja
imul
clc
mov
and
(bad)
xor
sub
adc
je
fcmovb
sbb
ins
aad
cld
(bad)
int3
retf
out
clc
lahf
inc
repz
scas
pop
sub
call
rcl
dec
and
icebp
sbb
cmp
mov
fldcw
sub
mov
pop
push
xchg
sbb
das
jns
add
inc
adc
add
call
pop
lea
lods
sub
enter
arpl
popf
xor
lods
jmp
shl
jp
nop
pop
inc
push
mov
and
outs
in
popa
sbb
mov
aad
test
(bad)
pop
mov
mov
jge
push
sahf
jmp
push
cli
sbb
mov
jl
mov
add
stc
int
sbb
loopne
std
push
daa
out
test
push
push
outs
fldcw
data16
loope
sub
xor
(bad)
adc
jns
add
adc
in
sar
cmp
popa
dec
jae
push
addr16
dec
icebp
(bad)
iret
mul
nop
mov
(bad)
cmc
mov
and
push
mov
sub
mov
sub
dec
xor
ss
and
mov
xchg
mov
pop
xor
add
pusha
stc
pop
retf
dec
hlt
pop
es
inc
clc
cmps
add
lock
lods
dec
shl
(bad)
sub
and
sbb
fwait
inc
sbb
ja
sub
stc
les
ja
cmp
(bad)
nop
mov
icebp
div
or
js
test
pop
call
sar
movs
and
mov
add
cmp
ror
sub
nop
jno
mov
outs
add
inc
not
push
pusha
mov
shl
rol
add
(bad)
mov
loope
jns
mov
ds
das
mov
neg
sahf
fimul
pop
(bad)
mov
inc
add
fisub
and
(bad)
xor
test
mov
sti
or
enter
je
das
xor
cmp
mov
sbb
jne
sti
mov
jmp
jne
jb
cmp
sbb
(bad)
adc
adc
push
shl
mov
push
call
cs
jmp
popa
cmps
inc
ins
push
lds
dec
mov
or
dec
mov
push
ficom
pusha
cmp
repz
dec
sub
xor
jecxz
test
cld
jb
dec
inc
xchg
xor
(bad)
jmp
in
inc
icebp
lock
sub
das
mov
mov
xor
lods
ss
xchg
imul
fisubr
jecxz
stc
push
mov
mov
mov
cwde
fs
jecxz
ret
imul
fs
dec
xchg
jmp
push
jmp
push
mov
push
cli
add
and
xor
test
adc
and
pop
aas
mov
inc
inc
pop
cmp
push
mov
out
jno
and
mov
jnp
push
aad
or
retf
push
movs
test
adc
inc
sbb
mov
pop
bound
inc
in
call
xor
push
mov
fbld
cld
cli
outs
daa
sbb
mov
test
movs
or
retf
add
bound
(bad)
(bad)
and
idiv
fist
inc
add
inc
shl
push
pop
std
or
or
inc
mov
push
sub
jecxz
adc
jb
jo
xor
(bad)
ins
dec
jg
test
fnstcw
mov
ins
test
xchg
dec
adc
retf
jo
and
(bad)
xor
out
sub
mov
dec
sbb
call
out
hlt
xchg
iret
cmp
sub
shl
mov
ins
jg
push
jb
xor
jnp
das
mov
mov
inc
push
data16
cmps
mov
add
(bad)
(bad)
add
mov
jmp
xchg
repz
ficomp
mov
dec
fnsave
mov
loop
inc
fisub
je
pusha
sub
aas
in
scas
mov
jp
(bad)
cmps
cld
fwait
cwde
xor
sqrtps
dec
imul
out
mov
test
cmc
test
daa
mov
cwde
aas
mov
xor
push
mov
sub
int
nop
cmp
in
or
mov
mov
push
inc
cmps
xor
add
add
xchg
movs
xor
xchg
sub
mov
cmp
adc
std
sahf
xor
int3
adc
xchg
or
out
(bad)
pop
adc
aaa
dec
xor
jmp
in
jb
es
add
jmp
nop
das
imul
push
mov
neg
fnstcw
add
push
jae
mov
xchg
leave
bound
cmp
add
gs
(bad)
nop
outs
imul
or
leave
and
and
or
add
push
test
(bad)
push
dec
mov
pop
xchg
or
inc
iret
jg
sti
dec
mov
mov
ja
mov
jmp
push
fnstcw
mov
test
push
xchg
add
dec
jmp
scas
imul
clc
popa
push
push
sahf
in
mov
in
jp
and
scas
je
push
daa
test
clc
mov
xchg
fsub
loope
lods
adc
ror
ret
mov
adc
pop
stos
retf
sbb
stos
imul
mov
inc
sub
jno
imul
mov
push
jl
in
mov
adc
out
test
xor
fwait
ja
fiadd
xchg
push
mov
dec
jb
jb
shr
into
jmp
inc
pop
add
xlat
sbb
mov
lea
xchg
clc
pop
stos
dec
sub
push
mov
out
fiadd
adc
(bad)
imul
ins
cmp
test
aas
popf
push
cmp
xchg
adc
cmp
mov
lods
rcr
mov
call
mov
sub
rcr
sub
dec
mov
jge
and
pop
fs
out
push
sub
mov
cli
leave
cmp
clc
arpl
xchg
leave
bound
nop
fs
sbb
addr16
fild
es
out
jns
dec
call
outs
(bad)
shl
sub
mov
push
retf
cmps
(bad)
mov
iret
jno
sbb
(bad)
out
pop
cmps
or
cmp
sbb
sub
lock
mov
dec
lahf
das
push
xchg
add
loop
leave
or
inc
ret
int3
dec
dec
test
adc
inc
jb
cwde
int
es
push
xor
cmps
enter
sbb
ja
inc
into
dec
je
xchg
outs
(bad)
mov
(bad)
sbb
outs
ret
push
mov
add
addr16
inc
dec
sbb
sbb
xor
cmp
sbb
test
imul
cmp
stos
pop
xchg
or
xchg
jge
jae
jae
clc
jno
mov
mov
mov
jecxz
dec
push
jecxz
push
jno
sbb
call
push
test
push
enter
lahf
push
dec
jecxz
pop
mov
mov
sbb
dec
cmp
inc
sub
outs
push
test
fistp
call
add
ins
les
adc
mov
mov
jns
addr16
out
outs
cmp
add
retf
mov
movs
int3
adc
adc
repnz
lock
clc
(bad)
mov
sbb
cmp
(bad)
fdivr
or
ds
dec
pop
pop
cdq
les
push
jns
cmps
adc
lds
test
dec
test
dec
adc
dec
inc
sbb
lock
push
and
scas
loop
xor
clc
dec
test
pop
retf
and
call
inc
jmp
movs
inc
es
lea
cmp
xchg
ds
dec
mov
lahf
push
pop
sbb
jns
xchg
cs
mov
arpl
pop
pop
ja
push
sar
in
bound
and
mov
cli
fst
sti
mov
cmp
sub
inc
or
inc
xchg
int
mov
ret
push
push
js
stos
jmp
push
add
dec
add
loope
arpl
pop
pop
push
fcomp
push
loopne
add
stc
iret
or
repz
pop
in
or
pop
enter
jg
dec
dec
(bad)
xlat
in
xor
dec
nop
fwait
xor
mov
imul
shl
dec
cli
icebp
scas
repnz
retf
jmp
std
stc
jmp
jns
lods
push
js
aam
repnz
in
repz
call
(bad)
xchg
jmp
mov
adc
cld
inc
scas
or
(bad)
pop
mov
mov
call
loop
(bad)
inc
divps
xchg
cmp
movs
mov
pop
ds
scas
and
cmp
cmps
ror
add
or
leave
xor
dec
sar
arpl
lea
push
adc
movs
lds
cmp
push
lahf
(bad)
lods
mov
ror
into
fild
sub
gs
mov
ja
stos
and
jmp
mov
stos
(bad)
mov
and
stos
addr16
push
retf
and
push
push
cli
dec
outs
movs
adc
mov
neg
in
pushf
xor
sub
or
xchg
jmp
jb
test
sti
cmc
leave
xor
aaa
pop
mov
cmp
div
jp
shl
jno
out
add
ja
sti
jno
jae
push
test
xchg
(bad)
bound
test
sub
push
and
popa
jb
(bad)
shl
jecxz
xor
fnstsw
mov
pop
fcom
leave
pusha
cli
mov
or
inc
iret
cmps
js
mov
xor
add
pop
mov
movs
sub
and
std
(bad)
movs
(bad)
outs
sbb
dec
icebp
push
ss
mov
adc
xor
push
punpckldq
ret
movs
push
cld
int3
push
jge
bnd
jnp
(bad)
pusha
jle
mov
mov
jmp
push
out
xor
test
(bad)
dec
dec
xchg
mov
into
mov
mov
imul
icebp
and
pop
jmp
dec
mov
loop
xchg
test
jecxz
shl
retf
repz
daa
test
ret
cmp
rcl
pusha
les
mov
pop
popa
repz
jge
xchg
push
xchg
rcr
inc
pop
shl
pop
mov
push
fld
cmp
and
pop
xchg
xor
stos
or
movs
loopne
or
stos
lock
mov
pop
idiv
add
hlt
neg
dec
loop
je
xchg
inc
push
fs
jnp
in
es
sub
xor
and
jp
loop
jae
add
test
repz
inc
shl
popf
fisubr
fucomip
gs
xlat
jp
imul
sub
xchg
xor
dec
cmps
aam
jg
mov
fwait
inc
rcr
dec
popf
aad
add
dec
push
shr
addr16
jg
push
inc
and
(bad)
jno
(bad)
cmp
lea
inc
jbe
push
cmp
das
into
aad
jno
mov
inc
pop
inc
js
pop
sti
out
xchg
add
cmp
dec
adc
outs
pop
pushf
xchg
ret
xchg
mov
cdq
pxor
aam
daa
sub
loope
movs
xor
fs
push
or
push
or
inc
xchg
mov
or
xchg
cmp
test
pop
into
sbb
das
adc
xchg
outs
mov
aam
add
call
bound
mov
mov
(bad)
adc
outs
push
aad
rcr
retf
cld
mov
into
mov
mov
inc
jle
adc
test
jmp
mov
jne
xchg
loope
xchg
nop
sar
loop
das
retf
in
test
lods
inc
imul
xchg
jo
and
sub
sub
aad
adc
int
inc
jbe
push
cmp
movs
jp
call
mov
loop
into
xchg
pop
pop
cmp
scas
das
jmp
mov
(bad)
repz
stos
jns
xacquire
mov
popf
test
std
push
pusha
adc
mov
ror
cmc
int
xchg
sub
sub
xchg
out
das
jmp
punpcklbw
aas
in
mov
mov
xlat
dec
loopne
dec
dec
xlat
out
inc
js
xchg
rol
ret
mov
dec
(bad)
fs
lahf
push
pushf
enter
mov
int3
cmc
xchg
addr16
xchg
ficomp
or
enter
lods
push
or
mov
mov
ins
out
repnz
imul
repnz
push
dec
shl
call
and
mov
and
icebp
cmp
daa
out
inc
das
inc
fs
test
jge
sub
(bad)
inc
js
aam
and
retf
test
jecxz
and
sahf
div
fs
nop
bound
cs
popa
cwde
jecxz
loope
out
inc
dec
push
push
jp
mov
outs
mov
mov
sbb
or
push
inc
jge
ret
scas
lock
frstor
xor
sub
in
scas
stc
sub
loopne
stos
pop
xor
loopne
(bad)
xchg
arpl
pop
cld
inc
stos
neg
cmc
dec
pop
lahf
and
xchg
test
and
test
shr
ss
lods
test
imul
movs
mov
or
jle
and
test
jmp
sar
out
not
sahf
cmp
and
sahf
fs
cmps
sbb
cdq
sti
test
dec
mov
mov
scas
sub
std
push
mov
xchg
cmp
aad
rcl
push
push
lods
push
test
dec
cld
jns
add
idiv
or
xchg
mov
pop
scas
push
lods
inc
pushf
das
mov
aad
stc
cli
sub
test
xor
xchg
jmp
mov
out
ret
or
mov
cld
(bad)
xlat
idiv
stos
mov
pop
std
pop
fild
je
call
mov
mul
pop
(bad)
test
(bad)
mov
sbb
sahf
mov
pop
std
retf
adc
out
aad
and
pop
mov
enter
cmc
sbb
shl
imul
ds
mov
fidiv
inc
mov
adc
pop
into
fist
mov
ins
out
mov
or
cmp
push
mov
js
in
cmp
mov
cs
mov
jmp
xor
sub
xor
pop
dec
mov
mov
mov
sahf
pusha
leave
mov
xchg
jle
and
icebp
out
dec
jmp
hlt
(bad)
xor
dec
dec
pushf
mov
mov
mov
rol
jp
scas
push
clc
xchg
cmps
test
adc
push
inc
mov
cmp
sub
mov
jl
jp
(bad)
jnp
lods
cmp
and
inc
adc
jmp
test
std
stc
ins
adc
inc
and
mov
lods
lods
retf
sub
jge
xchg
xor
mov
mov
xchg
xor
(bad)
fsub
push
fcmovb
lods
loope
dec
pop
sti
int3
fsubr
sub
loop
ror
add
push
mov
push
out
test
mov
mov
cmp
inc
js
push
pusha
std
aad
out
and
and
sbb
push
sub
rcr
sbb
inc
ins
xor
ins
mov
pusha
cli
int
xor
fidivr
jecxz
cli
cmc
nop
int3
mov
pop
pop
pop
sub
int3
push
divps
xor
inc
pusha
cmp
cmps
retf
add
and
push
jns
inc
jp
rcl
lods
out
push
jle
bnd
push
leave
mov
or
push
int
mov
data16
sub
jae
iret
inc
fcom
(bad)
xchg
stc
ins
cmp
popa
xchg
or
or
in
aad
mov
jmp
(bad)
add
stos
adc
dec
bound
xchg
adc
scas
mov
jb
sub
push
dec
(bad)
cli
jb
mov
sub
jl
test
out
sbb
xchg
(bad)
popa
dec
jnp
ficom
jne
push
cmc
pop
dec
inc
add
mov
adc
(bad)
les
inc
daa
loope
inc
or
(bad)
cs
pop
dec
loopne
repz
shl
sbb
cmp
xor
cmp
xchg
mov
cmp
or
cmp
xchg
push
sti
cmp
arpl
and
sbb
push
sbb
cmp
mov
cld
inc
js
mov
push
sbb
outs
and
push
das
inc
dec
movs
sub
enter
pop
loopne
bound
adc
mov
push
and
cwde
leave
and
push
xchg
or
enter
stos
(bad)
sub
shl
das
dec
push
push
call
xchg
or
pop
outs
mov
jg
inc
mov
aam
ins
imul
out
retf
fwait
and
mov
pop
aad
push
mov
mov
loope
mov
prefetcht2
mov
movs
clc
jnp
mov
out
test
cmps
mov
int3
jmp
lahf
add
cmp
rcl
(bad)
pop
ins
mov
sbb
add
rol
retf
add
push
movs
xor
mov
pop
retf
fldenv
xchg
aad
cmps
hlt
and
sub
scas
ss
lea
aad
scas
test
cmp
(bad)
adc
movs
retf
xchg
jl
mov
xchg
mov
les
and
jo
icebp
jno
es
jge
push
icebp
call
mov
inc
and
jle
inc
ret
mov
xor
sub
add
popa
adc
adc
js
cmp
sbb
add
cmp
int3
sub
bound
(bad)
out
push
or
imul
add
sar
cs
stc
push
and
xor
sbb
lds
in
(bad)
push
dec
pop
mov
pop
xor
sbb
inc
jge
and
or
push
and
or
cmp
jl
rcr
mov
rcl
(bad)
leave
cdq
scas
fs
jl
out
mov
ja
loopne
mov
mov
sbb
cmc
mov
push
cmp
pop
mov
fs
cmp
jmp
jnp
mov
and
fnstcw
add
push
xor
adc
mov
repz
fist
(bad)
jg
movs
cmp
mov
xor
jle
clc
jge
enter
nop
pop
fcom
aas
dec
jno
xchg
add
jnp
cmps
mov
adc
mov
cmps
je
movs
data16
adc
add
data16
fild
or
mov
xor
sbb
mov
sbb
inc
js
push
loopne
jmp
xchg
sub
push
xchg
adc
mov
push
jo
jnp
jno
dec
sbb
(bad)
pop
popa
jge
fmul
loop
outs
imul
xor
outs
mov
fild
adc
jno
push
dec
sbb
aas
cmp
es
ret
adc
push
scas
pop
cmps
mov
dec
inc
popa
jp
in
xor
(bad)
push
scas
das
bound
xchg
lods
mov
mov
push
hlt
push
jb
stos
sub
mov
mov
out
(bad)
or
add
test
bound
cmp
adc
dec
xchg
jl
cmp
int
jmp
(bad)
shl
jb
mov
jp
dec
gs
adc
or
(bad)
jae
dec
out
aam
mov
sub
xchg
test
aas
cwde
xor
jl
aas
push
retf
das
mov
shl
cmp
(bad)
call
cs
cmp
int3
inc
ja
sbb
and
cmp
jge
adc
rcl
pop
adc
je
sub
xchg
mov
nop
jb
lods
mov
int
(bad)
xchg
in
repnz
icebp
fadd
mov
popa
lods
sub
lds
call
mov
push
imul
push
xor
in
inc
mov
push
cli
xchg
jg
cmps
dec
fs
jecxz
popf
addr16
add
cs
sar
popa
fnstsw
movs
sbb
adc
cmps
test
sub
in
lods
fs
aaa
mov
xor
inc
adc
rcr
sub
sub
sahf
or
sahf
sbb
sub
fcmovne
push
sub
mov
and
jae
lahf
out
fstp
das
fisub
das
test
call
not
push
xchg
mov
out
or
mov
mov
add
mov
jns
outs
pop
nop
test
xor
mov
je
cmps
fsub
push
dec
adc
fst
imul
push
or
movs
add
int
and
adc
imul
ror
int
ret
loop
xor
fbstp
or
xchg
jns
gs
out
jne
cmps
jbe
out
sub
test
movs
pop
xchg
inc
imul
jmp
or
or
loopne
jg
and
and
daa
pop
mov
pop
daa
cmp
loopne
dec
repnz
clc
hlt
inc
mov
adc
xchg
push
nop
mov
pop
pop
(bad)
ret
pusha
and
jnp
xchg
pop
jg
daa
jp
mov
mov
mov
xor
imul
nop
pop
test
dec
in
sub
push
(bad)
mov
(bad)
inc
lods
(bad)
retf
push
sub
aaa
cmp
repnz
data16
jns
sar
sbb
jne
add
jne
jle
inc
scas
int3
sub
repz
es
repnz
inc
push
sub
lods
adc
or
out
fidiv
xchg
or
and
es
test
std
or
pcmpgtw
sub
mov
(bad)
mov
add
test
clc
imul
imul
or
push
stc
mov
pop
imul
sub
retf
or
cwde
mov
pop
sbb
xor
jge
icebp
jmp
dec
gs
lods
ret
cmps
xchg
mov
shr
cli
sbb
mov
xchg
bound
fldenv
sti
scas
repnz
nop
jno
or
lods
mov
rol
addr16
and
dec
es
xlat
lods
add
adc
or
jnp
into
adc
cmp
push
test
not
xchg
cmp
xor
mov
xchg
adc
outs
clc
push
cs
mov
aas
loope
data16
aaa
pushf
(bad)
cmc
push
test
pop
fisub
call
jo
and
stos
mov
pop
(bad)
cmp
or
aam
adc
mov
sbb
repnz
gs
jbe
cwde
aam
mov
hlt
mov
jle
xchg
sar
sub
std
imul
sub
rol
iret
xor
out
cmps
cs
pushf
test
and
dec
add
repz
fdivr
push
stos
add
pmullw
push
das
add
fs
ror
xor
inc
jge
jnp
cmc
sub
sub
in
retf
cmp
push
sar
xchg
fyl2x
test
mov
dec
imul
pop
push
mov
jbe
fidivr
push
in
mov
out
jge
ret
hlt
sbb
push
lods
ss
shr
mov
add
mov
in
jno
cmp
add
clc
sar
test
out
inc
cli
lahf
and
xchg
fsub
inc
stos
and
adc
hlt
fld
sub
sti
jmp
cmp
xchg
jbe
push
mov
repz
jbe
fldenv
sti
(bad)
fistp
pop
lods
push
fistp
push
xor
jp
jae
add
into
shr
mov
add
rcl
cwde
sub
mov
mov
aad
or
(bad)
xor
lea
js
jge
sub
mov
push
cmps
in
or
out
xor
xor
pop
das
mov
hlt
aad
jge
mov
jns
and
lds
mov
mov
fidivr
xchg
mov
cli
imul
xchg
in
pushf
cmp
clc
retf
mov
fidiv
imul
adc
not
dec
sbb
ret
push
fisttp
and
adc
pop
ins
shl
pop
outs
inc
std
or
lock
xor
dec
stos
xchg
mov
xchg
popa
adc
rcr
or
mov
xchg
mov
pusha
or
jl
cmp
lods
xor
cld
outs
push
stos
outs
jae
(bad)
adc
pop
push
outs
in
aam
mov
scas
pop
sub
retf
xchg
fcom
xchg
ins
mov
into
lods
inc
hlt
cld
jb
hlt
or
push
pop
out
repnz
shl
push
adc
sbb
inc
mov
mov
fldcw
data16
and
repnz
xor
xchg
jno
mov
mov
test
lahf
in
jge
ds
push
or
sbb
or
shl
sub
inc
jmp
and
and
cmps
xor
or
xlat
(bad)
dec
in
jle
loop
or
imul
iret
fwait
into
cmp
pop
xor
xchg
push
(bad)
mov
out
xchg
sar
jmp
mov
pop
ficomp
adc
test
mov
jo
cli
clc
arpl
pop
jno
push
lea
sub
or
test
int
test
sbb
adc
xor
dec
shld
and
sbb
rcl
xchg
sub
or
sub
xor
cdq
inc
xor
lea
or
out
sbb
xor
dec
sbb
pop
jb
add
xchg
int3
mov
inc
cmp
ret
mov
add
dec
adc
leave
xchg
add
inc
push
jmp
iret
call
je
cli
in
pop
xor
push
add
or
pop
inc
xchg
mov
inc
jb
ret
into
mov
add
push
sbb
repnz
in
movs
shl
fistp
sub
frstor
ja
data16
sahf
xchg
in
pop
in
outs
inc
mov
aaa
inc
out
pushf
ins
mov
and
out
mov
imul
adc
outs
and
movs
outs
fcom
outs
rcr
jp
idiv
mul
xchg
nop
push
into
test
mov
data16
add
in
xchg
push
sub
clc
mov
jne
fnsetpm(287
repz
call
cmp
cmp
sub
sbb
add
adc
xor
(bad)
push
fmul
xchg
xor
out
inc
dec
add
cmp
push
pushf
jp
addr16
sub
mov
pop
inc
sbb
or
push
ins
hlt
xor
inc
or
and
cmp
mov
xor
gs
in
sub
out
dec
dec
inc
adc
add
cmp
pushf
add
mov
into
sub
es
outs
ja
push
mov
inc
fst
mov
or
dec
inc
dec
add
outs
push
xchg
pop
jno
xchg
rcl
mov
add
add
daa
icebp
movs
fucomp
retf
sbb
(bad)
xchg
push
pop
imul
shl
sti
out
pop
bound
clc
call
push
mov
retf
js
stc
adc
jmp
rcr
test
or
and
loope
cs
push
fs
enter
dec
inc
jnp
add
mov
inc
into
fisttp
or
out
dec
rol
jle
cmp
inc
and
sub
ror
repz
pop
sub
cmp
sub
jmp
sar
push
pop
sbb
add
or
mov
fsub
mov
aam
(bad)
cmp
ja
(bad)
cs
mov
push
adc
xor
retf
hlt
adc
outs
pop
cdq
out
lods
les
enter
repz
push
jmp
push
push
ret
iret
mov
(bad)
pop
lods
jae
adc
xchg
je
daa
cmp
ret
int3
inc
inc
push
jecxz
mov
lock
dec
push
popf
and
imul
lods
jne
test
push
imul
cmps
(bad)
imul
aad
scas
shl
stos
cld
and
mov
mov
jmp
add
or
push
mov
test
add
not
sbb
adc
lock
fwait
push
push
mov
shl
fld
loopne
mov
enter
(bad)
fcom
bound
pop
cli
movs
inc
cmc
ds
xor
jae
test
pop
mov
xchg
retf
pushf
or
mov
int
or
fnstcw
inc
cdq
mov
dec
lahf
mov
ds
in
pop
fisubr
jmp
cld
xchg
fmul
sbb
push
ins
pop
ss
icebp
rcr
out
(bad)
outs
push
je
cmc
ja
das
mov
adc
packuswb
and
or
bound
(bad)
lods
dec
ret
and
leave
xor
cmps
xor
mov
xor
sub
out
cwde
mov
xor
or
mov
and
sbb
sbb
or
mov
pop
or
(bad)
mov
mov
call
dec
int
lods
ds
pop
sbb
add
sbb
inc
cwde
pushw
dec
xchg
lea
mulps
in
pushf
loop
dec
and
push
mov
jge
aaa
xchg
out
mov
mov
xchg
or
jo
or
retf
add
rcl
push
cmp
bound
hlt
mov
pop
xchg
fstp
clc
jns
not
ins
xor
dec
push
pop
std
out
mov
mov
pop
aaa
rcl
sub
fimul
sub
int
cs
(bad)
loop
xor
lds
icebp
add
(bad)
xor
cli
or
scas
sbb
stos
hlt
pop
sbb
imul
lock
clc
sub
loopne
xor
inc
hlt
xchg
sar
mov
cmp
mov
xor
iret
add
mov
das
add
mov
jp
mov
leave
mov
xchg
clc
rol
sbb
jne
fwait
sub
mov
gs
outs
inc
icebp
out
leave
lods
(bad)
ds
lahf
mov
mov
daa
push
add
(bad)
fistp
push
or
jne
pop
xor
cwde
sub
pop
adc
jmp
mov
xor
xchg
ror
mov
and
js
jge
sbb
cli
(bad)
mov
jl
dec
outs
mov
nop
or
test
xchg
sbb
or
mov
sub
adc
jle
leave
mov
imul
fist
into
fmul
retf
js
cmp
retf
icebp
loop
xor
add
sub
xor
pop
jmp
sbb
xchg
mov
stos
dec
sub
adc
movs
cmp
or
int3
xor
sbb
dec
xchg
ins
jmp
push
dec
cmc
xor
mov
fcomp
dec
call
ja
adc
adc
imul
call
pop
push
sbb
sub
dec
fld
mov
xchg
ret
stc
fdiv
ss
fwait
ror
test
shl
cwde
jns
loope
cmp
mov
ror
push
ret
adc
add
xor
or
dec
mov
jg
pushf
loop
jb
addr16
jmpw
cmp
xchg
rcr
lock
pop
adc
cdq
sub
repz
loopne
and
cdq
pop
fild
xor
std
adc
xchg
mov
jmp
ret
inc
and
mov
ja
sbb
dec
jnp
sti
dec
xor
jle
and
lahf
jo
shl
cli
rcr
enter
cmps
dec
pop
inc
push
int3
in
(bad)
jnp
jo
into
xchg
push
scas
pop
pop
push
and
push
jne
jmp
in
retf
test
add
push
adc
push
add
adc
ds
jno
mov
lea
push
ins
out
mov
sahf
xor
idiv
out
cli
fisttp
(bad)
ins
stos
mov
(bad)
cwde
imul
mov
and
jmp
xor
fadd
add
imul
pushf
aas
push
call
stc
ret
jg
rcr
dec
sub
sub
push
mov
bound
fistp
fild
cmp
(bad)
jle
mov
pop
ret
or
mov
add
in
sbb
xchg
mov
leave
(bad)
shl
rcr
mov
cli
adc
fmul
fdiv
fisubr
mov
dec
jle
and
js
or
sub
in
mov
or
(bad)
jnp
jecxz
popf
scas
(bad)
std
daa
lock
out
mov
rcr
xor
pop
fwait
jmp
cmp
sahf
ja
jno
es
sti
sub
inc
cmps
mov
adc
retf
xlat
pop
dec
cli
arpl
cmp
sub
jb
push
ret
mov
xor
je
outs
mov
inc
add
pop
aam
test
lods
xchg
push
movs
out
std
pop
jp
mov
or
pop
mov
cmp
arpl
rcl
jge
pop
fwait
pop
loope
imul
jo
pop
arpl
iret
in
div
into
call
retf
retf
loopne
xchg
add
xchg
adc
cmp
idiv
pop
add
cmp
jle
cli
ss
movs
loop
outs
dec
cmps
aam
int3
aam
cmps
out
jnp
xchg
mov
jle
ret
movs
popf
push
xor
loopne
pop
ret
xchg
mov
popw
xlat
xchg
sbb
stc
imul
nop
out
ror
mov
mov
mov
retf
sub
dec
rol
cmps
test
inc
adc
ficomp
icebp
jb
imul
pop
cmp
xchg
sub
mul
ins
jl
enter
sub
cdq
ins
mov
dec
clc
(bad)
xchg
mov
cmc
sbb
stos
jg
ss
mov
std
icebp
fst
fs
and
cmp
xchg
fstp
mov
xor
test
xor
jl
sbb
mov
(bad)
idiv
enter
jne
xchg
call
(bad)
das
xchg
ins
xor
(bad)
fidiv
movs
aaa
loopne
cmp
xor
sub
lds
pop
cmp
jno
mov
(bad)
cld
scas
mov
push
loopne
rol
inc
adc
xchg
jo
and
sahf
sahf
push
push
imul
es
jns
or
or
sub
test
mov
bnd
out
xor
sti
mov
int
xor
mov
cs
imul
scas
js
scas
jecxz
cmp
add
mov
inc
or
sbb
fcmovnu
pop
jp
sbb
fstp
cmp
xor
loope
lods
mov
xchg
sub
sahf
jecxz
xchg
mov
dec
mov
dec
cli
rcr
pop
pop
mov
cmps
cmp
retf
out
stos
jno
jmp
cli
or
mov
dec
movs
fwait
aad
push
push
mov
fcmovne
ja
adc
fidivr
icebp
or
enter
cmp
push
or
xchg
inc
cmp
mov
das
dec
in
pushf
jbe
bound
jne
shl
mov
xor
cmp
adc
aad
fwait
inc
push
mov
clc
pop
mov
push
xor
push
adc
fs
scas
(bad)
mov
pusha
sbb
(bad)
repnz
fcom
mov
cmp
call
and
push
jmp
sbb
and
xchg
iret
cmc
add
pushf
mov
aam
xor
or
push
xchg
sub
xchg
fidiv
leave
add
(bad)
fistp
mov
jae
and
pop
mov
into
iret
pop
lahf
cmp
add
push
xor
jo
std
mov
cwde
xlat
mov
xchg
push
es
cmovl
cld
pop
test
xchg
dec
push
and
addr16
aas
push
cli
inc
rep
test
mov
xor
imul
xchg
sahf
fdiv
adc
retf
pushf
js
retf
push
adc
or
push
adc
dec
xchg
sub
jbe
psrad
xchg
ds
jmp
pushf
pop
or
mov
lds
cmp
loope
lock
jmp
add
jo
jmp
push
ret
loop
mov
fdiv
pusha
mov
or
cmp
(bad)
push
call
inc
aas
mov
stc
fisttp
inc
mov
sbb
es
inc
and
or
inc
mov
xchg
out
sub
mov
mov
or
sbb
imul
retf
popf
inc
leave
cmps
jecxz
push
(bad)
fst
dec
pop
push
pop
es
mov
retf
mov
(bad)
mov
out
ins
fist
jl
and
inc
fild
cmp
mov
popa
faddp
inc
push
sbb
dec
retf
push
frstor
ffreep
mov
add
outs
in
xchg
mov
cmp
shr
xor
lss
(bad)
addr16
mov
xor
sub
(bad)
mov
mov
(bad)
mov
int
pop
gs
pop
push
cmp
test
pop
je
push
push
jmp
nop
or
xchg
xor
ins
pop
push
jmp
mov
int
mov
mov
push
loop
pop
nop
scas
loop
sbb
loopne
hlt
push
fwait
shl
inc
outs
sub
shr
movs
adc
ja
aam
scas
xchg
push
es
adc
cmp
xchg
add
js
sub
ret
pop
outs
loope
mov
inc
or
rcr
sbb
sub
(bad)
add
sub
inc
out
test
or
aad
dec
shr
test
mov
xchg
nop
fadd
or
sti
xchg
mov
out
repz
jmp
aad
fwait
inc
stc
jl
imul
dec
push
dec
je
stc
add
sti
(bad)
sub
push
pop
sub
cs
retf
(bad)
shl
mov
dec
mov
repnz
in
in
int
cmp
enter
and
mov
test
xchg
sbb
cmp
push
outs
xor
sub
jmp
fstp
fisttp
mov
pop
stc
(bad)
adc
sbb
call
cmps
cmp
jne
fistp
icebp
push
mov
popa
sbb
pusha
jno
lods
adc
and
and
inc
jecxz
add
mov
cmps
aas
inc
adc
cmc
adc
ss
push
sbb
jmp
lock
nop/reserved
ins
dec
retf
ins
jbe
loope
dec
ds
xchg
and
sbb
add
test
push
push
xor
jno
push
and
or
ss
or
rol
sub
sbb
or
rcr
xchg
mov
jne
adc
neg
dec
lahf
push
add
push
xchg
(bad)
in
stos
int3
call
sbb
cmp
pop
call
scas
ss
pop
cmp
jmp
lock
popa
add
popf
cmp
(bad)
mov
fst
cwde
hlt
push
pop
jecxz
and
imul
xchg
repz
nop
mov
jg
inc
pop
in
xchg
cmp
xchg
clc
cli
in
sub
test
sub
add
jb
fwait
into
dec
pop
and
(bad)
inc
or
(bad)
mov
movs
push
dec
mov
shl
pop
(bad)
mov
xchg
cmp
sahf
mov
loop
mov
movs
add
and
aam
push
pop
mov
sbb
inc
cmp
jp
adc
sub
push
jo
dec
hlt
add
xchg
cmp
xchg
in
outs
test
sti
mov
test
and
mov
push
sbb
popf
out
and
inc
push
nop
ja
dec
mov
adc
(bad)
test
mov
jae
mov
xchg
or
xchg
mov
cmp
xor
jmp
xchg
mov
outs
and
push
enter
sbb
add
xchg
dec
fidiv
mov
jmp
dec
xor
adc
call
pop
mov
mov
cmp
aaa
mov
and
iret
cli
jecxz
test
xor
imul
scas
jbe
and
aam
dec
arpl
in
stc
sub
xchg
and
sahf
pop
inc
or
push
cmp
rol
jns
repnz
inc
into
inc
xor
pop
imul
sub
pop
jle
fbld
aaa
ins
or
mov
add
add
in
repnz
sbb
lods
aam
(bad)
test
lds
data16
call
icebp
sub
in
das
xchg
dec
inc
repnz
outs
(bad)
cmp
outs
pop
sbb
pop
not
jp
add
dec
jnp
add
in
sbb
sub
jns
imul
xchg
xchg
hlt
pop
xchg
repz
mov
pop
cmp
lahf
add
adc
lea
jne
push
mov
out
lods
mov
pop
mov
jno
push
lahf
std
mov
sbb
mov
and
sbb
cdq
test
mov
or
push
das
sbb
stos
arpl
pop
enter
sbb
lds
in
cmp
fmul
xor
xchg
shl
xor
(bad)
(bad)
fistp
add
pusha
cmp
push
sti
hlt
scas
inc
jb
in
jae
fdiv
xor
in
mov
fidiv
inc
cmp
loopne
test
movs
lods
cmc
mov
popf
iret
das
fdiv
dec
sbb
dec
sbb
sbb
call
lahf
sub
inc
scas
inc
bound
or
imul
cmp
cli
pop
call
js
or
push
mov
mov
aam
add
mov
sbb
dec
aaa
add
jae
cld
jae
cmp
push
mov
js
cld
add
ficomp
ds
xchg
mov
add
sbb
sbb
xor
cmp
(bad)
ja
repnz
popa
lods
stos
mov
jne
mov
push
mov
inc
ins
dec
fbld
jle
fcmovnu
mov
push
mov
inc
lds
jnp
and
enter
mov
dec
jge
sbb
cmp
out
or
or
shr
inc
mov
nop
and
jne
jnp
jge
jb
mov
jne
pushf
add
xor
ja
adc
lahf
imul
daa
add
mov
xchg
mov
retf
inc
push
aad
aaa
out
pop
lods
cmp
call
pop
rcl
repnz
movs
(bad)
cmps
push
push
vhaddpd
aaa
xor
mov
xlat
mov
rcl
pop
imul
jle
shl
test
test
xchg
mov
ret
mov
xchg
fild
pushf
xor
in
daa
mov
push
out
cs
cld
hlt
cmps
iret
and
clc
mov
test
push
repz
movs
iret
jl
pop
shl
loope
mov
jnp
mov
icebp
sub
adc
jns
pop
imul
push
dec
sbb
jmp
call
sbb
ds
(bad)
faddp
and
xor
or
and
loope
mov
shl
xor
pop
das
call
adc
jns
xchg
push
in
pop
mov
test
aaa
pushf
pop
xlat
xor
sub
mov
sbb
mov
and
jae
jae
das
xchg
jns
aad
scas
mov
inc
out
das
ins
fldcw
pop
aaa
cmps
inc
mov
jno
adc
shr
cs
mov
mov
outs
dec
loope
mov
xchg
inc
stos
xchg
stos
mov
pusha
popf
xchg
data16
pusha
pop
movntq
lds
mov
int3
inc
fmul
aaa
cmp
inc
repz
sbb
xchg
lods
(bad)
xor
dec
jns
retf
fist
sub
(bad)
push
mov
xadd
mov
mov
test
add
add
cmc
dec
loop
fist
dec
adc
mov
ds
loop
loope
push
or
mov
adc
cmp
mov
xchg
jnp
cmp
xchg
cmp
iret
and
push
pop
loope
sbb
adc
mov
cli
aas
jg
les
inc
mov
inc
pop
out
sahf
or
bound
pop
mov
sar
xchg
sbb
mov
sbb
in
sub
mov
aad
out
fwait
cmp
add
lods
mov
daa
mov
fsubp
add
inc
jg
pop
repnz
xchg
cli
jecxz
jp
call
fadd
shr
inc
(bad)
and
xchg
pop
and
cmp
movs
retf
adc
retf
ficom
loop
sbb
adc
and
xchg
ret
sbb
mov
rcl
pop
add
adc
gs
scas
xchg
sbb
xchg
add
movs
ss
ret
and
call
out
push
pop
sub
(bad)
adc
jg
nop
jmp
fdiv
fucomp
mov
xor
push
cmp
into
idiv
scas
xor
in
jge
push
jp
sbb
jl
sbb
xchg
mov
pop
div
mov
retf
or
and
dec
mov
out
mov
cli
rol
rcr
sub
outs
cdq
lahf
(bad)
add
push
aaa
int3
outs
sbb
cmp
adc
push
xor
mov
xchg
stc
cmp
xchg
shl
lods
pop
dec
mov
(bad)
push
pop
xchg
retf
push
popf
test
xchg
mov
repz
xor
dec
add
xor
inc
mov
mov
test
fsub
pop
lods
inc
scas
pop
add
into
in
arpl
jne
lahf
add
imul
push
ror
and
call
xchg
out
mov
mov
cmp
sahf
push
cmp
mov
call
ja
mov
mov
and
shl
rol
iret
ins
mov
lahf
sbb
mov
fistp
cmp
cmp
lock
or
ror
ins
xor
nop
jnp
mov
out
sub
mov
(bad)
out
lods
mov
lods
aaa
cmp
add
not
jecxz
cmp
loop
test
fsub
mov
mov
(bad)
repz
in
(bad)
cmp
mov
or
nop
inc
scas
cmp
int
push
stos
mov
jmp
nop
test
pop
sbb
or
enter
cmp
mov
xlat
out
(bad)
xchg
push
xlat
(bad)
pushf
cld
enter
and
push
out
ja
inc
jmp
je
sti
fs
adc
sbb
adc
pop
aam
xchg
adc
push
push
loope
sti
jmp
imul
dec
dec
inc
ficomp
inc
aaa
sub
inc
iret
jae
cs
jmp
dec
push
ret
sbb
push
push
loopne
cmp
mov
mov
and
jecxz
pop
loope
cdq
(bad)
mov
call
loope
fdiv
aad
loop
sub
(bad)
cs
(bad)
push
test
je
jg
mov
pop
retf
pop
ins
jp
lock
retf
mov
out
cwde
dec
xchg
lods
ins
rcl
dec
or
ins
call
pop
(bad)
ror
xor
cmp
sti
cmc
lods
pop
ins
jns
cmp
std
dec
push
packssdw
or
adc
sbb
or
adc
push
adc
nop
add
xchg
(bad)
in
icebp
cdq
cmp
cmc
aas
mov
mov
sbb
outs
fidiv
mov
and
imul
addr16
daa
mov
icebp
jle
call
ficomp
mov
jecxz
mov
mov
adc
xor
and
cmp
xchg
out
movs
or
sbb
retf
jno
or
in
inc
ret
pop
mov
and
jl
lea
ja
inc
sbb
pusha
rol
(bad)
xchg
push
int3
inc
sahf
push
dec
imul
test
adc
dec
ss
mov
aas
mov
adc
pop
ins
add
pop
ss
cmc
push
cmps
call
pop
nop
or
and
mov
shr
pushf
out
aam
mov
push
mov
loop
or
and
rcl
sbb
clc
sbb
pop
ror
dec
(bad)
jnp
ins
fimul
int
sbb
ret
pop
jecxz
and
adc
cmp
mov
cmp
lea
inc
sub
bound
xchg
cmp
xchg
mov
std
fsubr
ret
fsubr
cmp
xchg
sbb
jle
(bad)
fdivr
sub
push
test
add
add
rol
ds
mov
mov
ins
inc
je
mov
adc
mov
jecxz
mov
hlt
test
popa
push
inc
fld
add
aad
or
push
mov
fbstp
aad
test
pop
aad
mov
mov
(bad)
lods
cdq
fldcw
mov
popa
cmp
xchg
(bad)
movs
retf
mov
inc
add
sub
xchg
and
test
std
dec
mov
mov
rcl
cld
mov
stos
mov
ficom
adc
sub
pop
cld
jbe
fwait
pop
inc
push
fcmove
arpl
or
jle
inc
jns
scas
repnz
aad
jle
dec
addr16
ins
pop
popa
lods
xchg
jns
loop
dec
cmp
and
cmp
popf
mov
push
std
test
xchg
arpl
adc
sar
adc
and
ins
xchg
rcr
imul
mov
xor
mov
push
jp
loop
aad
push
scas
stos
adc
inc
js
and
sti
cmp
pop
xor
js
or
bound
int
pop
mov
(bad)
mov
jmp
pop
pop
test
xor
mov
pop
movs
in
mov
repz
push
retf
ja
ficom
ret
add
sbb
movs
push
cmps
lahf
ins
ret
push
shl
sahf
jno
test
stc
retf
ftst
mov
xchg
test
and
or
dec
cmps
outs
push
push
jo
xchg
mov
test
addr16
scas
add
call
xor
xchg
inc
or
mov
cmps
movs
dec
les
sub
add
stos
sub
hlt
les
dec
das
add
mov
rol
mov
xor
and
sahf
mov
mov
addr16
adc
aad
addr16
scas
es
mov
loope
xchg
push
ficomp
scas
outs
bound
jge
jae
jl
sbb
call
jmp
pop
lock
out
out
(bad)
push
stc
jmp
inc
out
mov
or
mov
mov
cs
pusha
add
stc
push
rol
movs
push
mov
xor
call
sub
pop
rol
or
je
lea
retf
inc
or
and
mov
in
mov
or
and
fwait
jmp
mov
les
and
out
cld
bound
inc
cli
stos
in
cli
cmp
fcmovnbe
dec
xor
test
cmc
add
lods
pop
fs
mov
mov
ds
jo
push
fidiv
in
int3
inc
les
mov
dec
pop
jle
cmp
xchg
test
adc
push
and
ins
repnz
sbb
jne
sbb
mov
mov
add
push
lds
retf
test
loopne
sbb
das
std
and
pop
test
cdq
jp
in
sub
dec
mov
dec
cmp
in
repz
neg
jmp
out
into
and
or
retf
dec
jne
icebp
ror
outs
ret
call
cmovbe
call
aam
fsubr
rcr
scas
push
in
mov
xchg
ror
sti
iret
call
nop
sar
jno
mov
outs
xchg
popf
or
mov
fwait
hlt
repz
out
loop
stc
imul
push
sbb
sub
int
inc
int3
les
inc
outs
push
sar
sub
dec
ins
scas
call
and
aas
repz
cmps
mov
inc
sub
mov
adc
add
xor
jmp
mov
scas
outs
sahf
mov
dec
mov
inc
xchg
loopne
ror
xchg
(bad)
jg
and
fld
es
xchg
xlat
push
add
xor
ins
(bad)
loope
jo
sub
push
sbb
inc
mov
jp
add
adc
add
imul
int
push
fs
add
daa
pop
sar
cmovno
shl
mov
xor
mov
(bad)
xchg
pop
jecxz
not
xlat
cwde
(bad)
in
cli
pushaw
xor
push
adc
pop
js
mov
popa
imul
jae
sub
daa
lds
into
into
push
ja
jp
pop
push
and
adc
xchg
fcomp
pop
daa
daa
lods
push
xchg
(bad)
lea
out
pop
pop
sub
jg
and
fcomp
mov
cmps
dec
mov
popa
mov
dec
sub
fadd
mov
int
cs
ins
daa
and
(bad)
call
jo
xchg
xor
mov
add
outs
mov
jmp
jp
jo
sti
repnz
sub
push
aas
cmp
push
mov
shr
iret
and
jnp
add
je
mov
dec
xchg
aas
pop
cli
add
adc
je
ret
rcr
pusha
arpl
das
std
imul
xchg
push
mov
aad
sub
hlt
mov
xor
jge
dec
aas
add
xor
sahf
inc
xor
dec
outs
jbe
out
and
and
jmp
loopne
(bad)
sbb
pusha
push
fsubr
xchg
scas
push
ficomp
mov
loop
jge
mov
and
jbe
(bad)
shl
in
dec
test
jb
or
pop
cdq
xor
aam
xor
fsubr
inc
ja
inc
xor
test
xor
fdiv
iret
fxch
iret
test
(bad)
jo
ins
ins
mov
pop
pop
sahf
cmp
xchg
lahf
shl
xchg
jp
xor
xor
aas
pop
or
data16
inc
gs
xlat
push
add
xchg
and
cmp
adc
in
cmp
xchg
and
xor
lahf
dec
xor
mov
cmp
push
mov
mov
and
outs
in
mov
cmp
retf
add
je
mov
mov
sub
int
xor
call
cmp
mov
push
lods
mov
and
std
and
out
test
pop
and
mov
xor
add
cmps
sub
and
fnstsw
mov
dec
pop
dec
mov
mov
fidivr
pop
xchg
xchg
add
pop
shl
mov
leave
adc
cmps
xor
movups
push
(bad)
xchg
(bad)
call
cmps
mov
xchg
int
mov
pop
mov
xlat
adc
or
test
ss
leave
mov
pop
sub
adc
mov
xchg
pop
call
cmps
and
xor
test
add
in
adc
jl
sahf
stos
rcl
mov
xlat
stos
xchg
dec
ss
pop
in
fidiv
clc
push
jle
inc
mov
add
sub
xor
cdq
mov
fdivr
dec
(bad)
pop
jae
and
cmp
pop
xchg
out
fistp
lock
xchg
scas
mov
pop
fimul
jle
cdq
mov
clc
mov
ret
je
or
jecxz
aaa
lea
cmps
sbb
jecxz
jl
sti
sbb
lea
xor
int
sub
adc
ss
mov
icebp
stos
xor
pushf
in
and
dec
push
add
cmp
dec
or
jmp
push
xchg
mov
add
ins
fdiv
push
cmc
jmp
and
lahf
dec
xchg
mov
fild
call
cmp
jo
sub
xor
int3
into
test
shl
or
cli
inc
mov
cmp
ficom
xor
mov
jecxz
outs
mov
pop
and
adc
add
jg
fld
mov
imul
sub
and
loope
(bad)
push
mov
sbb
ret
mov
(bad)
movs
pop
dec
sbb
repz
leave
movs
imul
xchg
in
retf
rcl
jmp
inc
or
aas
in
pop
xchg
loopne
shr
stos
leave
clc
std
dec
push
sbb
sub
dec
cmp
lock
cmps
in
jo
sbb
add
pusha
sub
cmps
imul
inc
xor
aam
fld
jo
stos
hlt
cmp
je
cmp
cmp
mov
sbb
retf
pop
mov
cmc
mov
cmp
cmp
stos
div
shl
cwde
mov
mov
xchg
mov
loope
mov
or
aad
mov
pop
or
call
imul
bound
mov
jae
nop
xchg
pop
repnz
aam
add
pop
adc
retf
loopne
push
call
cmp
or
mov
stos
mov
mov
xlat
inc
leave
mov
ins
jecxz
call
nop
jne
jecxz
add
pop
push
ds
sub
ins
iret
jmp
int
ins
rcl
push
and
jl
stos
push
mov
jmp
sbb
xchg
sub
jl
enter
xchg
in
cmc
and
xchg
push
mov
cli
dec
(bad)
shl
jp
cmps
clc
pop
cmp
xchg
sub
xchg
and
push
retf
jbe
out
jns
pop
mov
mov
ins
sbb
jns
ins
mov
pop
pop
lods
and
inc
push
(bad)
leave
les
xchg
add
icebp
bound
aaa
ret
movs
(bad)
xor
int3
push
inc
out
fldcw
repz
aam
jbe
ffreep
in
fcmove
ins
imul
daa
xchg
in
lods
iret
test
add
dec
into
jns
sahf
add
xor
push
mov
out
mov
inc
mov
mov
xchg
mov
inc
xor
xor
inc
add
cmovl
xchg
cmp
xor
leave
dec
sbb
out
outs
out
test
loopne
jmp
test
or
and
outs
sti
add
loop
sbb
ins
adc
movs
retf
mov
xor
push
dec
mov
cmp
xchg
adc
cmp
xor
add
lea
out
and
jb
add
test
out
out
outs
cmp
lea
cmp
shl
lahf
popf
jmp
jg
pop
clc
adc
xor
cwde
sub
dec
xor
adc
gs
push
rcr
cmps
les
sbb
xchg
movs
push
add
ds
test
sbb
popf
cmps
xor
and
stos
cmp
xor
mov
es
and
xchg
sbb
mov
imul
push
loopne
idiv
out
sub
arpl
xchg
inc
mov
mov
outs
scas
fdiv
sbb
pop
out
xor
in
adc
sub
fs
ds
out
inc
cmc
addr16
arpl
lea
cmp
test
(bad)
clc
xchg
scas
and
push
aad
mov
jg
pop
mov
cli
mov
or
inc
(bad)
sub
mov
or
out
pop
mov
fild
in
jno
dec
xchg
mov
jno
mov
dec
xor
inc
or
or
lds
aaa
fwait
aam
lds
in
xor
push
(bad)
cmp
fsub
test
stos
dec
int
call
(bad)
scas
add
mov
scas
mov
or
push
leave
dec
mov
and
retf
push
mov
dec
aaa
adc
mov
inc
and
push
adc
dec
sub
dec
xlat
stos
jle
dec
mov
test
dec
adc
jns
daa
popa
fistp
adc
loope
push
mov
call
fdivr
sub
push
sub
addr16
mov
jno
int
fcomi
ins
jmp
sub
mov
mov
into
mov
cmp
loope
inc
jo
xor
dec
shr
scas
push
ins
add
push
push
push
or
inc
add
das
xlat
jo
ficomp
cdq
int
aas
daa
and
cmp
or
(bad)
cmps
xchg
mov
dec
std
rcl
fsub
lock
dec
jbe
mov
ficom
jge
mov
nop
popa
fist
dec
fst
ror
loope
aaa
and
fisub
jb
lea
lahf
jnp
mov
xchg
leave
xor
cmp
xor
mov
pop
in
cdq
mov
test
icebp
xchg
outs
jno
xor
mulps
jmp
mov
adc
jno
jg
inc
push
jl
inc
aam
sub
push
mov
out
(bad)
pop
stos
cmp
cld
add
mov
cmp
jmp
jae
pusha
cwde
inc
dec
adc
lds
mov
xor
test
stc
or
push
lds
shl
js
(bad)
rcl
outs
mov
cmc
dec
sub
fwait
or
mov
inc
mov
push
pop
xchg
outs
push
out
fnstenv
aam
jbe
mov
shl
push
not
and
into
clc
xchg
gs
or
and
bound
jae
sub
popf
cmp
into
dec
in
lds
fld
xchg
pop
mov
xor
repnz
aad
push
cmps
loope
jne
pop
and
rcl
push
jl
add
add
hlt
jno
sbb
adc
cmp
(bad)
jecxz
push
mov
movs
shl
cmp
rcl
popf
mov
pop
fmul
xor
push
mov
dec
pop
cmp
sub
outs
aam
push
jp
ds
jmp
les
ret
jbe
push
inc
push
mov
sbb
cmp
mov
out
jno
or
inc
outs
mov
dec
sbb
(bad)
sbb
pop
std
pop
and
add
and
jge
or
test
mov
push
mov
hlt
in
and
outs
pop
mov
mov
jge
enter
xchg
mov
dec
inc
pop
cmp
mov
sbb
test
(bad)
(bad)
and
stc
and
mov
(bad)
mov
add
int3
adc
or
data16
scas
sbb
xchg
sub
push
pop
or
jae
ror
(bad)
pop
cld
ins
fmul
mov
cmp
dec
out
dec
cli
shr
pop
and
repz
je
bound
fcomp
arpl
fwait
xchg
imul
jmp
and
sbb
lods
mov
mov
mov
push
add
pusha
pop
rol
or
jmp
push
stos
xchg
xlat
(bad)
push
mov
sbb
dec
cdq
xchg
test
push
shl
dec
js
inc
ret
rcl
es
adc
pop
hlt
xor
inc
inc
data16
gs
dec
mov
(bad)
mov
sbb
enter
lea
loopne
sub
lods
int
jmp
cmp
xlat
sahf
ins
jo
mov
mov
mov
std
movs
mov
js
jp
jno
inc
mov
xor
scas
sub
add
sub
out
lahf
cmc
xchg
imul
sar
mov
lods
shl
mov
jp
clc
inc
rol
dec
jnp
jle
adc
popf
in
addr16
aad
cmp
shl
push
not
adc
push
pop
pop
stc
loopne
ins
(bad)
retf
(bad)
sub
adc
jg
stc
cld
or
jno
sbb
xor
sbb
mov
pop
shl
adc
pop
xor
stos
dec
into
mov
push
loop
jo
outs
mov
xlat
dec
inc
adc
jnp
add
xchg
xchg
ins
jle
push
out
mov
ret
inc
rcr
push
movs
xchg
scas
icebp
jb
loopne
add
ins
fsubr
stc
mov
pop
rcr
sub
push
inc
call
xlat
das
scas
loopne
test
or
push
shl
je
out
push
and
pop
xchg
cmps
cmp
push
cmps
xor
ja
jmp
rcr
jns
fistp
sti
mov
iret
gs
in
sub
jg
sub
scas
or
pop
push
js
mov
dec
stos
je
mov
jne
lods
xor
dec
das
mov
push
add
xor
aam
aas
adc
push
popf
movs
dec
adc
jmp
adc
mov
popf
test
jb
mov
xor
sbb
fisttp
inc
push
or
call
xchg
in
dec
fld
mov
mov
(bad)
inc
pop
mov
mov
out
rcr
mul
mov
pop
push
ret
and
sub
or
retf
sub
repnz
retf
push
hlt
push
outs
sub
push
dec
aad
clc
rcr
push
sbb
xchg
push
dec
jno
fild
mov
call
fwait
mov
mov
out
or
out
in
push
aam
sbb
adc
jl
sub
mov
xor
and
pusha
ins
push
sub
in
fstp
push
xlat
ret
les
pusha
xchg
loopne
mov
mov
pop
jp
ror
jecxz
loop
retf
int3
pop
rol
inc
adc
movs
into
mov
clc
mov
pop
or
xor
jns
repz
jg
dec
jo
jle
(bad)
jge
call
mov
xchg
push
ret
stc
retf
movs
(bad)
fild
xor
mov
add
pop
mov
ss
aad
add
sbb
in
leave
and
push
cwde
dec
sahf
sbb
cmc
push
lock
inc
mov
lahf
pushf
mov
xor
and
sbb
ror
pop
movs
je
cmp
jbe
lock
daa
inc
cs
sbb
xchg
ja
cld
ds
jno
mov
mov
inc
sub
or
out
mov
jmp
int3
jg
mov
mov
out
mov
sub
xor
fwait
xchg
cmp
lods
aaa
mov
cli
xor
xor
jecxz
sbb
xor
mov
and
xchg
out
inc
sbb
dec
jp
nop
les
jne
(bad)
pop
sub
push
adc
or
dec
cmps
fistp
cli
bound
mov
jae
pusha
lods
retf
pop
add
push
xor
aas
adc
cs
lock
pusha
mov
add
cmp
ret
xchg
retf
add
push
scas
fs
inc
ins
popa
xor
enter
add
add
scas
push
lock
movs
call
vsubsd
adc
push
es
fdivr
pop
cmp
mov
xchg
sbb
fwait
cld
push
fstp
pop
mov
add
dec
shl
xor
outs
or
(bad)
fdivr
bound
xor
jbe
mov
popa
scas
jne
jg
mov
aas
in
nop
adc
push
pop
xor
jmp
mov
add
sti
dec
mov
(bad)
xor
(bad)
dec
inc
ja
retf
dec
add
pop
xchg
push
in
adc
adc
mov
jo
cmp
in
mov
xor
das
fmul
pushf
mov
shr
mov
out
mov
dec
jmp
adc
(bad)
cli
jnp
or
daa
fisub
cmps
mov
jns
ins
add
lock
mov
cmp
lods
test
mov
cmc
mov
neg
ins
push
pop
xchg
mov
push
xor
xchg
mov
jnp
xchg
mov
fldenv
mov
out
and
bound
pop
gs
lods
and
dec
mov
mov
repnz
xor
fnstsw
jns
mov
pushf
aam
add
mov
add
lds
mov
fscale
fist
enter
jp
cmp
in
dec
out
pop
nop
sbb
xchg
cwde
xchg
adc
es
xchg
ins
fdivr
fld
popa
xor
loop
jmp
enter
adc
xor
jb
inc
ret
mov
xor
data16
inc
cmp
push
clc
cmp
jb
pop
jp
cs
pop
movs
out
stc
mov
pop
mov
lahf
fs
adc
out
inc
mov
scas
repnz
das
dec
xor
cmp
xor
inc
cmps
in
cmp
mov
jne
jp
xor
push
mov
push
sbb
test
mov
pop
movs
jb
and
shr
jg
jmp
adc
fs
add
call
jb
es
repnz
xlat
in
adc
outs
fst
es
sbb
mov
add
pop
add
lahf
xchg
mov
jno
push
xchg
fs
ror
(bad)
cli
mov
cmps
push
enter
mov
inc
outs
movs
cmp
sahf
adc
fwait
sub
push
ffreep
or
popa
and
jmp
inc
lods
out
add
and
out
scas
pop
xchg
mov
(bad)
mov
and
push
sysexit
lods
add
mov
push
ret
data16
outs
mov
bswap
xchg
or
(bad)
outs
mov
pop
lahf
cdq
je
jo
add
pusha
adc
sbb
push
lea
xchg
out
pop
xor
pop
nop
xchg
pop
loope
jb
jmp
int
(bad)
inc
scas
jne
pop
mov
sahf
push
(bad)
repnz
cmp
fucom
add
(bad)
imul
daa
sub
mov
adc
in
jmp
int3
mov
shr
mov
cmp
aam
inc
icebp
sub
cmp
repnz
mov
push
sbb
test
(bad)
es
xor
jmp
pop
mov
and
sub
hlt
xor
mov
cmp
(bad)
loopne
adc
dec
idiv
inc
ins
out
fild
test
cli
lock
out
xor
adc
push
pop
or
jg
lods
inc
xchg
or
iret
(bad)
push
jo
pop
jnp
pop
or
into
add
jle
xchg
dec
inc
pop
add
stos
push
(bad)
das
mov
dec
popa
or
lods
sahf
adc
inc
push
add
dec
loopne
pop
mov
loopne
ja
mov
lods
add
fnstsw
cld
rol
ficom
iret
lock
in
inc
shl
jle
adc
sub
fsubr
xchg
dec
xor
mov
mov
xor
fiadd
and
in
jge
repnz
shl
sbb
call
loop
int3
jle
scas
bound
loop
adc
pusha
movs
jo
movs
mov
or
xor
fild
xlat
fbstp
jno
mov
out
mov
xor
call
jle
imul
inc
sti
fistp
mov
sub
mov
call
adc
sbb
leave
icebp
mov
sub
sti
add
jo
add
shl
cmps
and
mov
xor
jp
imul
in
mov
(bad)
fs
adc
bound
push
popf
aaa
int
es
push
pop
sahf
arpl
add
mul
sbb
xor
xor
push
or
xor
sub
pusha
cs
mov
jns
loop
jno
push
add
inc
xchg
and
xor
outs
adc
inc
and
sub
loopne
daa
pop
sbb
sbb
adc
iret
xchg
xchg
xchg
lea
jle
cmp
push
xchg
push
and
(bad)
mov
and
cmp
mov
push
push
frstor
and
mov
mov
repnz
imul
pop
mov
dec
pop
es
repnz
outs
das
xor
and
pop
mov
mov
movs
lea
mov
loop
lods
cmp
das
loopne
adc
inc
scas
fsub
and
lahf
pop
inc
xor
lds
jecxz
bound
sbb
push
ins
aaa
rcl
xchg
mov
cmps
mov
jae
shl
xor
leave
iret
nop
or
dec
cld
adc
ss
mov
movs
dec
outs
sub
out
mov
sar
(bad)
mov
shr
imul
cmp
rcl
add
jbe
dec
mov
popf
cmp
daa
jp
imul
out
inc
jle
cmc
or
push
cmp
mov
out
aas
iret
ret
inc
xor
jle
sub
ret
aam
pop
test
inc
inc
mov
ror
add
(bad)
or
dec
pushf
shr
mov
lods
out
push
cmp
pop
mov
or
data16
movs
cmp
jl
and
out
std
cmp
or
jle
inc
or
add
mov
cmp
cs
(bad)
clc
push
mov
(bad)
rcl
icebp
gs
fsub
out
sbb
mov
test
(bad)
hlt
in
xor
movs
mov
xchg
int
loop
retf
xor
lods
sub
retf
push
cmp
mov
outs
test
out
loopne
jmp
in
cmp
xor
movs
out
not
add
(bad)
fs
mov
out
pop
sbb
ss
mov
les
cli
mov
(bad)
cmp
scas
jg
js
xor
add
outs
into
pop
(bad)
push
lahf
jb
pop
sahf
sub
je
dec
test
mov
stos
push
sub
mov
or
mov
xor
mov
loopne
dec
xor
cmp
ror
js
cld
pop
repz
pop
mul
pop
add
inc
mov
popf
arpl
pop
ds
pop
pop
aaa
xor
scas
mov
shl
sahf
fmul
push
int3
jmp
(bad)
clc
inc
ja
int3
or
pop
loope
jae
fwait
sbb
jne
sub
shr
pop
stos
inc
addr16
shr
retf
imul
lea
inc
fmulp
fs
jae
xchg
in
lods
xchg
lock
push
xchg
add
dec
inc
dec
rcl
push
scas
mov
cmp
popf
inc
nop
pop
iret
and
es
int
sub
paddsb
mov
retf
sub
push
popf
mov
inc
xor
or
pop
pop
popa
push
aad
mov
inc
stc
inc
lock
adc
pop
test
dec
stos
jno
inc
cmp
pop
scas
mov
(bad)
jb
lds
cmp
aad
sti
loop
popa
ficomp
call
arpl
mov
gs
sub
dec
retf
dec
and
mov
fstp
clc
cmp
cmp
jb
loop
cs
retf
xchg
arpl
xchg
lds
and
add
mov
mov
movs
mov
into
call
movs
pusha
sub
mov
mov
fstp
fistp
enter
(bad)
js
scas
ret
mov
and
jo
gs
aad
inc
xchg
call
repnz
neg
push
sub
ficomp
pop
inc
pusha
or
in
retf
push
dec
aaa
and
push
mov
cli
mov
ja
jl
xor
fst
aas
xchg
fiadd
cdq
sbb
cmp
mov
fiadd
mov
xlat
add
sti
push
enter
xchg
or
stc
mov
xchg
mov
clc
mov
pop
ficomp
bound
idiv
xor
rol
pop
rcl
pop
cmc
jo
in
fdivrp
(bad)
rol
(bad)
inc
inc
mov
adc
ja
pop
cmp
dec
cmps
aaa
dec
sub
movs
xchg
xor
sub
xchg
mov
lods
das
addr16
cmp
shr
xchg
push
dec
cmps
jmp
imul
dec
mov
jmp
add
pop
int
mov
add
lods
out
dec
jns
mov
xchg
add
xlat
or
test
inc
or
cs
xchg
xchg
xchg
inc
xchg
adc
inc
mul
cwde
push
cli
cmp
inc
mov
outs
rol
cld
mov
inc
mov
ins
and
loop
adc
sbb
es
or
or
lods
(bad)
cmp
jl
ret
scas
mov
adc
sbb
imul
inc
call
sbb
das
cmp
fs
mov
add
retf
neg
add
lods
inc
mov
jle
jo
mov
rcl
movs
mov
xchg
call
inc
mov
fdivr
test
test
rcl
ror
inc
movs
test
mov
pop
xor
sbb
loope
jecxz
cdq
and
lea
loopne
fs
dec
loopne
rcl
call
add
mul
push
cdq
sahf
mul
push
(bad)
std
mov
sub
jmp
push
lahf
test
rol
stc
mov
mov
xchg
pushf
imul
jnp
add
jnp
imul
sti
pop
xor
movs
aaa
mov
mov
sbb
mov
sbb
inc
leave
sar
mov
and
jmp
sub
and
scas
int3
mov
popf
jp
sub
cmp
push
xchg
mov
fnstsw
(bad)
mov
jmp
mov
push
cs
dec
jbe
cmps
rol
inc
jmp
test
scas
stos
bound
rcr
pop
inc
aad
dec
or
out
jb
pop
sub
mov
ret
(bad)
mov
ret
mov
aad
sti
in
inc
cmp
dec
test
mov
cmp
xchg
sbb
dec
jns
pop
shr
pop
cmp
xlat
mov
loope
test
and
push
fs
repz
retf
cmp
sbb
pop
jae
push
jl
lods
mov
stc
mov
sahf
jbe
mov
adc
sub
adc
xlat
push
or
ror
xor
xor
add
or
iret
mov
mov
mov
push
mov
xchg
(bad)
shl
push
mov
(bad)
out
(bad)
hlt
dec
int
ret
or
jo
int3
push
jl
add
bound
mov
cdq
scas
popf
das
enter
(bad)
add
jmp
bound
stos
std
jecxz
xchg
movs
adc
pop
jmp
test
daa
gs
outs
int3
mov
mov
out
mov
xchg
add
repz
(bad)
fisttp
test
icebp
xor
sbb
sub
das
sbb
je
mov
jnp
or
dec
add
aad
xchg
cmp
(bad)
rol
xor
cdq
js
lods
adc
mov
adc
pop
enter
sbb
loop
stc
dec
mov
pop
mov
inc
movs
call
xor
dec
stc
repz
outs
add
mov
cmps
lods
jle
cmp
test
shl
xchg
cmp
arpl
mov
xchg
stos
out
jbe
(bad)
mov
dec
adc
jmp
mov
cvtdq2ps
pop
je
imul
out
add
pop
sbb
xor
clc
(bad)
(bad)
data16
mov
fstcw
sub
pusha
jmp
cmp
or
mov
sub
mov
rcr
cdq
xchg
hlt
mov
or
aad
js
popa
inc
ins
in
pop
aas
leave
jmp
ds
hlt
or
add
pop
push
test
mov
ins
in
in
rol
ficom
ins
pop
out
adc
dec
mov
(bad)
fst
(bad)
fst
xchg
iret
pop
sahf
loopne
mov
push
push
push
das
shl
sub
pop
retf
std
dec
or
pop
dec
xor
xor
pop
cmc
mov
pop
xor
imul
repz
arpl
cmp
sub
fwait
out
dec
sub
int
retf
mov
sub
push
in
xchg
js
push
nop
or
xchg
call
xchg
in
jl
or
lods
add
jns
mov
movs
sbb
xchg
in
xchg
pop
push
jne
push
or
dec
(bad)
pushf
and
pop
adc
jecxz
jl
movs
test
xor
mov
imul
ins
(bad)
mov
std
dec
mov
arpl
add
das
iret
fcmovnu
out
(bad)
lahf
bound
sahf
sub
jmp
repz
pop
and
(bad)
jp
dec
mov
stos
in
mov
fistp
cmp
leave
fisttp
fnstsw
les
sub
mul
setl
adc
mov
push
mov
fs
ds
jp
out
and
cmp
inc
es
ins
mov
adc
int
out
stos
nop
lods
call
jb
jnp
mov
aam
es
dec
(bad)
cli
mov
or
clc
(bad)
adc
dec
pop
data16
pop
jg
sbb
movs
pushf
sbb
cwde
popf
les
dec
cwde
jl
cs
or
loope
icebp
outs
dec
pushf
rcl
aad
add
adc
nop
and
mov
mov
cmps
sub
fistp
(bad)
sub
jmp
mov
mov
test
scas
pop
dec
or
sub
mov
cmp
mov
inc
jne
fistp
add
fwait
imul
movs
imul
dec
mov
nop
xor
inc
jmp
push
dec
add
lea
aad
retf
inc
adc
and
add
inc
ret
test
xchg
int3
jb
lds
ror
fbld
push
pop
lods
jb
popf
mov
je
jns
(bad)
fisttp
sbb
cmp
jbe
or
out
test
dec
pop
popf
dec
add
add
pusha
push
push
sbb
xchg
xor
pop
xor
cmps
neg
ror
push
jmp
push
pushf
pop
lock
pushf
xchg
fbstp
call
cs
dec
out
idiv
mov
imul
cdq
add
daa
push
lds
inc
sahf
in
dec
in
fist
dec
mov
(bad)
jmp
outs
lahf
jmp
inc
imul
mov
pop
adc
sbb
inc
add
movs
inc
push
int
loop
add
scas
shr
inc
test
retf
xor
push
dec
dec
xchg
sti
sub
pop
in
mov
jl
adc
aaa
gs
sbb
ins
add
cmps
cld
(bad)
cli
test
outs
fwait
adc
or
mov
loop
add
add
in
in
push
jbe
stos
fsub
aad
dec
xor
add
inc
ret
and
fs
sub
lahf
mov
sbb
inc
std
addr16
mov
fnstcw
mov
stos
shl
fstp
adc
jns
leave
jbe
cmc
retf
mov
in
cs
(bad)
(bad)
out
in
dec
(bad)
scas
xchg
add
ins
push
push
dec
mov
adc
enter
inc
and
adc
xor
fcom
stc
and
cmp
mov
jo
pop
xor
addr16
sub
mov
out
cmps
inc
push
jae
int3
and
hlt
inc
push
icebp
out
fucomip
lods
(bad)
dec
scas
loopne
icebp
and
cmp
dec
out
adc
xchg
(bad)
scas
mov
add
xchg
in
dec
push
sti
rcl
int3
jne
out
call
je
nop
cmp
xlat
jne
js
mov
test
mov
pusha
scas
mov
add
movs
or
scas
movs
xchg
pusha
pop
pusha
retf
dec
jle
mov
movs
bound
outs
mov
shr
(bad)
xrelease
xchg
lock
xchg
mov
xlat
cmp
frstor
mov
fadd
mov
fisttp
retf
loopne
int3
and
stc
icebp
adc
fmulp
movs
adc
jb
stos
xchg
dec
nop
pusha
sub
cmp
lea
xlat
dec
inc
or
and
in
sbb
cmp
fistp
test
and
adc
outs
add
sbb
xchg
lahf
test
retf
icebp
sub
ret
imul
push
outs
imul
mov
pop
cs
push
jae
mov
retf
lahf
nop
jns
das
dec
fstp
add
bound
je
jnp
pop
pop
out
es
movs
xlat
push
mov
inc
rol
into
out
test
shl
cmp
(bad)
jge
sbb
xchg
outs
pop
in
bound
sbb
push
and
add
jno
retf
adc
(bad)
and
loope
aas
out
loopne
cwde
jg
lea
xchg
push
pop
inc
(bad)
pop
xchg
push
movs
cmp
add
sbb
mov
xchg
or
mov
stos
lahf
(bad)
inc
pop
les
push
mov
sbb
bound
loop
ds
jno
shl
adc
(bad)
(bad)
xchg
sbb
mov
inc
mov
call
mov
out
inc
ret
ins
shl
je
mov
mov
ror
je
cwde
mov
scas
push
fsubr
dec
ror
fisubr
ret
test
xchg
adc
mov
loopne
rcr
nop
cmp
push
ror
lods
mov
dec
cmp
addr16
popf
sar
nop
sbb
push
int3
ins
je
scas
rcr
jb
push
sahf
es
fcmove
es
ret
outs
je
adc
adc
push
push
sbb
and
xor
push
mov
push
xchg
jae
and
or
rol
int3
push
ret
jmp
shl
xor
pop
or
cmp
push
xchg
imul
push
repz
stos
and
push
movs
jns
xor
sub
dec
cmps
xchg
icebp
popa
push
push
inc
in
movs
sbb
pop
ja
inc
push
sbb
or
mov
xlat
fs
imul
(bad)
cld
imul
in
mov
movs
and
js
rcr
scas
lock
in
aad
sahf
fs
aam
retf
sbb
leave
aaa
mov
dec
rcr
sbb
aad
xchg
les
push
pop
(bad)
(bad)
mov
(bad)
call
and
pop
pop
(bad)
mov
sbb
adc
fimul
test
mov
push
clc
pop
dec
or
sub
mov
repnz
cmp
int
jge
test
mov
add
jmp
adc
call
xor
inc
js
mov
cmp
cmps
mov
pop
mov
and
js
pop
sub
pushf
fisttp
mov
repnz
stos
push
(bad)
fsubr
imul
leave
dec
sub
mov
mov
ds
xor
enter
xor
out
adc
fwait
adc
stos
mov
cmp
xchg
popa
xor
add
cmps
adc
push
das
rcr
inc
out
sub
fisttp
shl
push
imul
adc
jbe
push
jecxz
xchg
rol
pop
jbe
pop
sbb
pop
in
ins
fisub
cmc
loopne
stos
mov
pop
std
xchg
arpl
mov
and
test
jno
xchg
mov
xor
jae
retf
dec
fld
push
lods
aam
je
in
inc
movs
(bad)
add
xor
out
scas
loope
sti
cmp
mov
ins
mov
icebp
retf
sbb
dec
sti
sub
inc
dec
icebp
sub
sbb
out
mov
cmc
lds
xchg
or
pop
cmp
fmul
fmul
or
ss
mov
js
add
mov
xchg
scas
xchg
fcos
fild
cmps
push
push
jo
lahf
ret
ss
ss
mov
leave
daa
sbb
test
adc
mov
jbe
call
jp
sbb
mov
mov
hlt
fbld
cmp
lods
inc
push
(bad)
dec
dec
(bad)
sbb
push
cmps
(bad)
mov
call
jo
jecxz
std
pop
fiadd
jmp
pop
fnstenv
movs
adc
shr
inc
jnp
xchg
xchg
bswap
sbb
nop
std
daa
dec
(bad)
sbb
jae
mov
push
leave
mov
cmc
outs
mov
fcomi
stos
out
jp
cmps
aaa
movs
arpl
loop
cs
test
mov
or
aam
iret
(bad)
dec
xlat
add
push
mov
aas
mov
or
sub
in
add
xor
dec
or
fs
bound
mov
xor
mov
xchg
push
fild
jp
and
pop
push
push
push
cmp
push
or
cs
pop
ja
hlt
push
lea
xor
imul
cmps
test
inc
arpl
xchg
out
sbb
push
mov
jne
daa
shrd
mov
leave
lods
xor
dec
(bad)
imul
xlat
and
xchg
adc
inc
xchg
shr
xchg
movs
mov
xchg
sub
mov
loop
cmp
jne
aas
fwait
dec
sti
dec
push
sub
sub
dec
or
dec
or
pop
jne
pop
pop
cmc
lds
jge
ins
cmc
xchg
push
popa
int
or
sbb
fild
leave
call
fcom
mov
sub
pop
popa
cli
dec
mov
or
or
test
shr
mov
test
test
jmp
das
(bad)
ror
mov
cdq
pop
scas
test
and
dec
xor
jge
sub
daa
movs
stc
loop
sbb
pop
mov
daa
jecxz
cmc
int
shr
(bad)
xor
outs
stc
pop
lods
int
pop
xchg
mov
femms
jecxz
call
pop
ss
mov
stos
jae
jge
shl
mov
sbb
xor
jbe
xchg
inc
je
or
sub
pop
retf
mov
adc
jecxz
sub
push
out
mov
fisttp
add
movs
fild
fnstcw
xchg
xor
mov
xor
and
stc
outs
(bad)
pop
shl
loope
outs
push
stos
push
xor
sbb
ficom
dec
sbb
ficom
es
xchg
leave
mov
mov
pop
mov
arpl
mov
pop
mov
sub
adc
icebp
(bad)
dec
adc
fisttp
adc
dec
in
std
pop
jecxz
mov
enter
(bad)
mov
lea
inc
and
mov
test
out
push
push
mov
sub
cmp
movs
lahf
mov
popa
aam
lods
pop
mov
pop
(bad)
or
retf
lods
mov
test
inc
add
push
add
shl
sub
mov
aaa
dec
movs
pop
ins
jns
xlat
adc
cmp
sub
test
out
mov
pop
in
retf
push
inc
xchg
loop
mov
mov
shl
fs
cmc
retf
jp
xor
mov
push
push
xchg
sub
(bad)
sbb
std
fdivr
pop
mov
mov
test
mov
sbb
jecxz
jmp
ins
sar
or
dec
fucomi
and
gs
xchg
call
(bad)
and
fld
loopne
push
stos
jmp
cld
mov
pop
mov
cmp
add
fidivr
mov
dec
cdq
cwde
and
mov
inc
inc
cld
jno
dec
(bad)
fst
(bad)
mov
frstor
out
mov
pop
xor
xchg
xlat
push
ficomp
xor
adc
pop
dec
push
imul
bnd
xchg
jns
shl
ins
and
sub
mov
jnp
push
adc
jmp
mov
sub
xor
test
push
cmps
outs
in
or
sub
bound
ins
mov
jmp
pushf
or
icebp
cwde
rcl
fucomip
jg
pusha
jmp
mov
loopne
mov
inc
push
pop
push
out
and
xchg
mov
outs
enter
sbb
repnz
adc
xchg
mov
jne
push
xchg
call
push
dec
sbb
es
repz
dec
jns
lods
jecxz
mov
cs
pop
mov
lea
adc
push
mov
enter
xor
lods
les
jb
pop
loope
cmps
jb
xchg
sbb
test
push
xor
ins
xlat
(bad)
loop
out
stos
push
dec
push
js
(bad)
int
push
pop
or
sbb
jp
ins
stos
ins
mov
dec
(bad)
imul
cmp
pop
or
mov
jge
mov
aaa
mov
dec
idiv
stos
jmp
test
cli
out
push
sbb
enter
ror
rcl
cmps
pop
into
sub
and
loopne
je
cmp
jno
mov
push
and
mov
or
cmp
mov
(bad)
frstor
cs
pop
mov
fcmovnb
sahf
sahf
ret
xchg
sbb
xchg
ds
cmp
mov
add
pop
ins
les
adc
(bad)
stc
cli
fist
test
jg
and
jae
int3
jb
sbb
shl
(bad)
out
aaa
or
push
enter
add
inc
pop
std
jmp
hlt
mov
int
in
push
test
rol
dec
jnp
out
test
test
adc
movs
or
std
movs
sbb
or
and
imul
jg
or
sbb
cmp
mov
adc
es
sub
and
inc
inc
cmp
ror
cdq
dec
ins
add
adc
mul
lds
mov
pop
rcl
test
pop
or
cmp
sub
add
es
repz
out
or
jbe
jle
repz
mov
push
test
sub
pop
lock
cmp
add
mov
out
or
push
cmc
test
fcmove
jno
mov
cli
inc
jns
jno
fiadd
jecxz
dec
bound
sahf
cmc
mov
and
pushf
pop
xchg
sbb
data16
dec
cdq
push
repz
xchg
add
cmp
push
pop
in
fsubr
inc
lahf
sub
ins
mov
and
cmp
imul
in
sbb
and
clc
sahf
repz
mov
add
lahf
and
adc
fisttp
scas
inc
add
retf
adc
and
mov
xchg
imul
mov
inc
inc
in
iret
inc
fcomp
cs
(bad)
or
adc
push
scas
dec
sahf
not
call
jecxz
shr
sar
inc
jo
test
call
mov
in
in
or
fwait
pushf
cmps
mov
cmp
pop
mov
add
fidivr
lahf
sub
cwde
popf
or
pushf
add
je
repnz
les
dec
xor
mov
popf
adc
push
icebp
add
xchg
sub
gs
mov
call
ret
xor
lods
dec
and
push
fist
xchg
(bad)
push
mov
mov
scas
or
dec
shl
lahf
pushf
or
inc
pop
pop
push
fadd
pop
std
dec
mov
cs
dec
nop
mov
xchg
xchg
in
rcr
jmp
shr
sub
shl
pop
jp
add
imul
jmp
stos
mov
push
jge
jle
into
cld
ret
sbb
cs
cmps
das
adc
jae
movs
loop
inc
dec
cli
push
cmp
cmp
pop
and
sub
not
adc
lods
dec
call
and
xor
mov
fwait
sub
shl
int
mov
or
jecxz
(bad)
div
repnz
pusha
movs
or
cmp
or
cmps
push
mov
out
repz
cld
jns
push
push
inc
push
adc
shr
outs
push
(bad)
fcmovnb
mov
mov
dec
push
movs
xor
or
sbb
mov
je
or
inc
add
das
mov
jecxz
cld
xchg
push
inc
cmp
call
mov
xchg
mov
and
add
or
out
and
xor
push
aaa
in
aaa
fcomp
out
xchg
xor
mov
xor
jle
xlat
into
bound
int3
or
mov
fisttp
add
push
js
fs
in
call
mul
ins
stos
adc
dec
and
and
in
call
push
push
shr
clc
xor
out
aad
bound
fdivp
push
add
pop
push
cwde
test
mov
fcom
sahf
(bad)
xchg
js
pop
mov
scas
adc
dec
ret
scas
not
icebp
ret
mov
xchg
mov
jnp
fwait
or
push
out
sub
sbb
test
or
sub
xchg
mov
add
xchg
outs
sub
loopne
cdq
fwait
mov
xchg
shl
hlt
add
sbb
cmc
dec
cmp
xchg
pop
pop
xchg
bnd
add
(bad)
add
das
mov
xor
inc
mov
frstor
push
pop
call
ja
jmp
mov
pop
adc
or
mov
jl
lea
std
daa
sbb
hlt
xchg
inc
in
mov
dec
pop
mov
xor
and
(bad)
popa
add
js
xor
in
jmp
arpl
mov
mov
call
jne
in
push
test
cmp
aam
repnz
sbb
inc
iret
xchg
imul
add
mov
mov
call
mov
outs
or
pop
daa
data16
fidivr
lods
neg
imul
mov
iret
jle
(bad)
mov
cmp
popf
sub
mov
xor
retf
inc
pop
xchg
and
into
test
in
sbb
xchg
stos
jns
dec
add
imul
(bad)
jl
sub
or
jl
push
xor
arpl
push
imul
xchg
push
in
sbb
fisttp
bound
pop
jns
xor
push
xor
lds
cli
into
xchg
stc
push
loop
pop
jecxz
outs
push
mov
cmp
jmp
push
mov
adc
dec
cmps
push
ficom
call
neg
xor
movs
loop
xchg
fsub
inc
cmp
sbb
pop
(bad)
cmp
loope
aaa
jae
pop
sub
pop
jno
mov
cmp
xchg
xchg
imul
movs
xor
leave
jmp
nop
ins
mov
cmp
pop
out
loopne
ins
mov
mov
arpl
test
int3
outs
ret
mov
sbb
dec
sbb
or
jmp
fsub
inc
cdq
inc
mov
push
jbe
stc
cmps
inc
sar
enter
jl
adc
inc
lock
psubusw
cdq
sub
inc
pop
sub
inc
gs
stos
jmp
psrad
lea
push
pop
mov
pop
fsubr
or
jecxz
jno
inc
repz
cwde
pusha
fisub
aas
mov
icebp
jle
add
test
cld
push
pushf
add
rol
sbb
inc
ret
lock
mov
addr16
dec
and
push
dec
pop
in
and
lea
jne
mov
retf
call
fidivr
push
sub
aam
push
mov
jbe
add
test
hlt
in
add
cdq
push
jmp
adc
push
sbb
add
mov
mov
test
and
into
jl
cmp
(bad)
dec
inc
es
sti
out
inc
jo
jmp
dec
jne
dec
sub
mov
unpckhps
pop
mov
cs
mov
mov
int3
div
sbb
mov
popa
pop
sbb
add
fidiv
retf
or
in
adc
shl
cmp
sub
xchg
mov
pushf
cmp
mov
cmp
icebp
(bad)
iret
loopne
call
sbb
jl
jl
xchg
adc
push
mov
inc
lock
mov
sbb
xchg
mov
mov
push
xchg
fcomi
pop
popa
ror
pop
or
xor
fld
cmova
(bad)
cld
push
mov
in
adc
push
jmp
retf
into
jb
sub
scas
gs
jns
mov
mov
and
out
shr
push
mov
sub
jecxz
mov
mov
je
jno
push
xchg
scas
loop
int
stos
inc
stos
push
fsub
fsubr
popf
mov
ret
mov
adc
hlt
mov
jge
rol
jnp
push
aam
sbb
test
cmp
push
xlat
repnz
and
dec
or
retf
and
data16
fsub
jle
inc
imul
and
clc
icebp
add
and
cli
cmc
(bad)
rol
pop
or
out
add
xlat
pop
jns
mov
sahf
push
out
lds
clc
ds
xchg
inc
xor
mov
mov
jle
lock
sbb
cmps
daa
shl
out
ret
inc
adc
xor
push
xchg
out
push
push
add
jmp
lds
pop
sar
push
and
xchg
dec
outs
inc
inc
ret
pop
mov
int
gs
mov
jp
retf
pushf
clc
jge
inc
add
add
cld
pushf
mov
(bad)
cmps
jno
push
jo
lods
jg
mov
mov
xor
cmp
movs
push
test
add
jp
mov
xor
xlat
cmp
or
xor
ror
inc
cmp
adc
xchg
jecxz
mov
enter
stc
mov
lea
hlt
jns
xchg
mov
fwait
sub
into
enter
xlat
jns
push
xchg
mov
push
idiv
stos
gs
inc
dec
cmp
test
fs
aam
getsec
or
lea
(bad)
ins
xchg
mov
xor
inc
cmp
mov
les
(bad)
pop
retf
or
int
mov
scas
add
adc
sub
in
xor
mov
mov
popf
jns
mov
rcl
cmp
gs
test
or
mov
jnp
mov
popw
cmp
mov
jmp
repz
pop
not
enter
sbb
or
cmp
mov
xchg
cwde
and
enter
xlat
inc
ss
pusha
jl
ins
xor
sub
adc
cmc
jno
dec
adc
xor
enter
cmps
test
jnp
or
ss
ror
inc
shr
xchg
push
adc
out
aas
gs
sti
jo
and
inc
dec
jmp
sbb
dec
dec
jp
add
push
div
or
sbb
add
xor
mov
push
fsubr
jno
cmps
mov
adc
xor
push
mov
mov
mov
call
inc
sub
sbb
pop
movs
ss
add
stos
out
push
sbb
(bad)
scas
and
and
frstor
xor
adc
mov
bound
adc
call
popf
shl
dec
je
(bad)
and
jbe
jno
aad
div
push
xchg
das
fidivr
pop
hlt
xchg
jno
sti
jge
outs
fdivr
stc
xor
outs
imul
adc
jge
mov
add
add
jnp
mov
mov
sbb
mov
shl
xchg
imul
daa
and
xchg
rcl
jae
fdiv
ret
adc
push
pop
(bad)
adc
cdq
fnstcw
xchg
or
std
push
ret
sub
retf
mov
shl
cmps
add
push
std
sub
(bad)
je
mov
sub
mov
inc
xchg
lock
aad
push
(bad)
loopne
sub
aaa
test
bound
cs
mov
push
mov
pop
jecxz
mov
test
(bad)
xchg
dec
nop
and
mov
mul
dec
in
inc
rol
xchg
adc
cwde
sbb
into
repnz
jl
fsub
ror
cmp
sbb
test
call
inc
adc
push
repnz
daa
imul
add
test
pop
or
push
lock
dec
sbb
out
push
xchg
adc
sbb
inc
lods
sub
cmps
arpl
mov
sbb
retf
push
cmps
outs
fistp
xlat
jo
cmps
and
jae
in
mov
inc
sub
xchg
cld
inc
sbb
mov
and
and
jo
aad
sub
aad
xor
nop
mov
neg
cmc
inc
xchg
cmps
ins
xor
mov
stc
ror
aas
call
push
jle
repnz
cdq
fbstp
movs
adc
arpl
aad
sqrtps
into
push
mov
fcmovb
pusha
mov
xlat
add
mov
push
pop
xor
imul
fstp
sub
clc
sahf
(bad)
popa
inc
dec
call
xor
or
pop
xchg
pushf
sub
aas
mov
xchg
rcr
test
pop
xchg
(bad)
push
dec
aad
adc
(bad)
sub
mov
or
int
push
in
loop
jbe
sbb
cdq
shl
or
and
xor
ins
(bad)
mov
inc
scas
xchg
retf
int
lds
inc
fld
lahf
xor
addr16
loopne
and
test
pop
mov
jle
push
pop
mov
enter
leave
dec
xor
out
jb
les
cmp
cmp
mov
mov
mov
push
push
jne
inc
addr16
dec
dec
test
or
not
aad
xlat
mov
lahf
sbb
es
in
push
in
rcr
cmc
(bad)
nop
xchg
and
pushf
mov
push
sub
pop
cmp
pop
inc
pop
(bad)
(bad)
jne
cs
jmp
and
movs
cwde
xlat
test
dec
xor
stos
pop
mov
icebp
rcr
mov
mov
adc
(bad)
fimul
shr
adc
fld
cmp
sbb
(bad)
adc
out
lock
jno
lock
pop
repnz
push
adc
js
cdq
js
out
out
aaa
pushf
stos
das
xor
not
dec
in
jmp
cmc
jl
jmp
cdq
mov
lea
int3
fmul
pop
stos
jmp
xor
repz
jne
xchg
sar
mov
add
jmp
out
retf
lea
sbb
push
ficomp
scas
in
cmp
xchg
push
ret
cmps
stos
lea
ins
jno
push
sub
fld
mov
std
jae
push
jmp
sahf
mov
call
outs
xor
popf
lods
lods
sbb
jmp
(bad)
push
adc
jne
xchg
mov
popf
out
dec
adc
sti
mov
jae
mul
dec
pop
jg
pusha
mov
cli
shr
and
cmp
mov
jmp
push
jnp
std
mov
xor
push
inc
cld
fdivr
pusha
test
inc
sbb
mov
mov
loope
pop
enter
xchg
test
mov
jmp
scas
cmp
test
pop
xor
cli
(bad)
mov
push
inc
in
mov
lds
lds
xchg
jl
sbb
fld
sub
dec
ss
xor
xor
jp
addr16
stos
push
adc
jb
test
jg
je
pop
xchg
(bad)
xchg
xchg
mov
and
rcr
adc
std
imul
js
ss
xchg
jnp
sub
arpl
in
mov
cli
in
xor
es
outs
popf
pushf
xchg
or
pop
push
inc
loopne
lea
dec
(bad)
dec
push
rcl
jp
xor
jb
cmp
xchg
leave
mov
in
rol
dec
inc
sbb
loop
push
(bad)
movs
add
adc
adc
jl
aaa
dec
out
cmp
iret
adc
push
into
out
mov
mov
mov
lock
adc
ds
adc
inc
or
repnz
stos
lea
cmp
fimul
sub
fdiv
mov
adc
mov
jmp
call
mov
je
pop
and
xchg
mov
mov
or
cmp
mov
daa
or
fwait
sub
cmp
scas
fisttp
idiv
fimul
(bad)
xchg
rol
sub
or
push
out
ret
mov
pusha
int
pop
pop
call
call
jl
adc
mov
mov
mov
add
add
and
sahf
shr
sub
mov
pop
xchg
push
(bad)
fsub
arpl
dec
pop
or
call
je
ss
dec
jae
arpl
mov
je
fistp
pop
mov
(bad)
movs
in
cdq
icebp
mov
mov
scas
dec
aam
push
retf
cs
(bad)
dec
jne
mov
cmp
call
stc
shl
and
xchg
push
push
scas
cmp
add
dec
mov
int
mov
xchg
out
cmp
pop
cmps
mov
(bad)
mov
or
xchg
jmp
or
mov
and
cmp
add
retf
jmp
imul
cdq
(bad)
xchg
call
fwait
add
mov
sbb
and
xchg
cmps
out
push
sub
stos
dec
sub
int3
mov
mov
inc
ins
lea
sbb
ds
aaa
pop
movs
loop
and
xchg
fwait
aaa
cmp
in
fsubr
mov
pop
xor
xchg
xor
js
inc
sub
sub
in
mov
movs
arpl
and
xor
popa
sub
inc
call
out
sub
push
clc
addr16
int3
mov
add
pushf
or
push
scas
mov
test
lds
leave
pop
cmp
bnd
inc
cmpps
and
and
pop
loope
loop
mov
fs
aaa
sub
outs
pop
cmp
add
jnp
mov
pushf
adc
fimul
aaa
xor
xor
pop
dec
mov
loopne
shl
pop
and
cmp
mov
enter
fwait
fs
std
std
adc
jle
push
or
mov
(bad)
ds
mov
mov
adc
aam
ret
adc
ss
repnz
fsub
aam
ret
adc
lea
sahf
add
outs
mov
and
push
dec
pop
mov
ins
(bad)
mov
ins
test
jmp
jmp
fisttp
push
ins
dec
aad
xor
add
pop
int
mov
rol
adc
rol
dec
jmp
sub
ds
pushf
jmp
xor
cmp
pushf
cli
(bad)
scas
pop
int3
jae
neg
scas
ins
addr16
pusha
jo
sahf
ret
xchg
cmc
imul
pop
retf
cwde
in
aaa
cmovae
sbb
mov
cmps
aam
adc
jge
fstp
repnz
xor
cmp
add
mov
add
cmp
int
inc
xchg
and
adc
dec
lods
or
out
push
out
and
lods
in
cmps
sahf
jge
fs
xchg
mov
pushf
inc
popa
arpl
fldcw
scas
not
or
sub
arpl
adc
daa
fstp
ins
pop
push
mov
imul
jge
xchg
cmp
mov
fisub
mov
daa
adc
test
fmul
loop
inc
xchg
or
push
cmp
mov
cmc
sbb
push
add
sbb
mov
cmc
repnz
jo
add
mov
jle
in
jno
pusha
test
ins
jns
ror
push
add
cmps
lahf
xor
jnp
fist
cmp
mov
and
in
or
or
cmp
pop
push
lock
mov
and
and
push
mov
int
mov
pusha
push
xor
gs
dec
add
clc
and
(bad)
mov
xor
xchg
mov
adc
outs
or
pop
test
inc
popa
cmp
fstp
add
(bad)
data16
leave
cmp
mov
repnz
repz
mov
mov
iret
xor
pushf
jns
in
stos
mov
(bad)
push
mov
xchg
bound
jp
and
cdq
and
push
jl
repz
sub
mov
xor
xor
pushf
jns
fidivr
fistp
retf
sub
je
inc
mov
jns
jecxz
sti
fstp
fs
cmp
stos
mov
lahf
hlt
jl
pusha
je
mov
and
int
jno
enter
inc
and
dec
lods
stc
int
xor
bts
sbb
repz
add
ficomp
cs
mov
sub
nop
sar
or
dec
in
imul
and
in
jle
aad
int
(bad)
jmp
in
sbb
in
mov
pushf
xchg
push
loopne
or
les
sbb
xchg
dec
addr16
push
in
inc
add
ins
ja
int3
enter
cmp
cld
sar
and
sbb
fidivr
movs
mov
sub
popa
jmp
mov
movs
add
cmc
push
push
(bad)
ins
add
loopne
sbb
jle
ins
pop
retf
adc
ja
fcom
test
ins
pop
fwait
mov
inc
in
mov
int
or
add
mov
lock
pop
stos
out
and
dec
daa
cwde
mov
(bad)
fcom
jns
jle
lods
pop
jb
push
aad
cmp
aas
out
test
out
(bad)
xor
jl
xchg
pusha
shl
mov
gs
pop
cmp
xchg
and
ss
mov
rol
push
ins
enter
pusha
xlat
xchg
out
popa
sub
cmps
cdq
cld
jbe
jo
jecxz
sbb
xchg
adc
push
lods
outs
stc
ficomp
pop
enter
sbb
loope
mov
shr
lods
inc
sub
loop
xor
push
xor
mov
out
call
js
push
xchg
(bad)
rol
dec
mov
loope
mov
adc
or
push
push
mov
in
imul
aas
cmps
ins
mov
(bad)
mov
leave
sti
dec
add
in
rol
cli
mov
rcr
add
sahf
repnz
jne
cdq
data16
xchg
rcl
mov
shr
data16
popw
mov
sbb
iret
lahf
aas
ds
popa
inc
mov
das
in
sahf
inc
pop
repnz
das
std
je
jne
retf
xor
inc
(bad)
fstp
mov
loope
push
mov
jne
mov
popa
xchg
fdivr
mov
hlt
push
pop
and
(bad)
aam
sbb
push
or
jae
and
and
sub
fnsave
adc
dec
sahf
push
out
push
xor
retf
mov
test
(bad)
imul
lds
jecxz
push
mov
test
mov
rcl
or
adc
nop
sub
inc
push
jmp
add
push
in
movs
icebp
xchg
and
add
jmp
sahf
call
pop
mov
inc
into
push
push
ss
enter
bound
cmp
pop
push
popf
mov
mov
pop
or
add
cdq
xchg
mov
sbb
jmp
adc
mov
adc
inc
inc
sbb
mov
mov
repnz
mov
fimul
(bad)
mov
enter
fistp
pop
pop
nop
mov
(bad)
dec
gs
les
arpl
or
aad
lock
test
(bad)
jecxz
adc
movs
add
xchg
sub
jo
cli
(bad)
iret
dec
xchg
pop
or
sub
jae
jo
pop
lods
ins
imul
mov
add
and
jl
cmp
or
retf
jo
or
scas
(bad)
outs
fs
xchg
imul
mov
(bad)
sbb
add
pop
xchg
or
pop
or
shl
aad
iret
or
fwait
mov
lods
pusha
add
loop
sbb
inc
aas
xchg
sub
push
test
pop
sahf
push
xchg
into
fnstenv
daa
leave
popa
push
jle
add
jecxz
push
repnz
add
popf
or
not
xchg
jl
adc
repz
adc
(bad)
cmp
in
loope
fst
cwde
sbb
pop
mov
(bad)
jmp
jne
jne
(bad)
xor
scas
rol
ja
xor
sub
ss
jno
std
mov
outs
xchg
lods
mov
cs
rcl
sub
xor
out
dec
and
into
test
inc
push
std
dec
xor
dec
or
aaa
aad
dec
cmps
stc
mov
aaa
mov
or
cmp
jl
loop
xor
fcmovnb
ret
outs
dec
popf
jge
push
pop
rol
inc
jns
mov
jmp
xor
sub
lds
shl
leave
dec
mov
jp
jge
xlat
sbb
sub
lods
fs
fisttp
pop
test
popf
lods
std
out
pop
inc
ror
inc
sbb
stos
push
outs
mov
(bad)
lds
lahf
inc
addr16
retf
mov
xlat
add
xchg
jnp
clc
mov
cli
push
aaa
push
add
cmp
lds
inc
pop
aad
adc
push
int3
or
push
outs
xchg
jecxz
lahf
fiadd
fwait
xor
sbb
and
mul
or
fldenv
aaa
mov
lods
mov
das
cmp
jecxz
xor
(bad)
aaa
retf
iret
dec
xor
xlat
pop
add
push
lods
pop
mov
jno
adc
jno
mov
or
fst
mov
adc
scas
(bad)
ins
cmp
loopne
sbb
xor
sub
jge
js
inc
xchg
dec
sub
mov
adc
pop
sbb
in
pop
lock
pop
iret
push
or
(bad)
out
in
data16
add
dec
sbb
xchg
cmp
les
mov
pop
fnstenv
push
(bad)
adc
shl
add
dec
xchg
mov
lea
mov
mov
add
adc
jg
jb
cmp
scas
add
or
mov
jge
ficom
out
call
icebp
dec
rcr
cmp
mov
push
sbb
cli
ins
in
inc
push
clc
and
mov
push
imul
xor
mov
out
cmps
in
xchg
push
add
push
jp
jg
cmp
lods
cmp
push
push
sub
mov
or
es
jae
and
int3
mov
adc
pop
cmp
pop
xchg
or
daa
adc
fistp
sub
or
mov
xchg
pop
sbb
jge
mov
sar
push
ficom
aad
adc
pop
adc
lock
push
bound
in
sahf
ss
xchg
cmps
dec
test
out
cli
out
xor
pop
add
push
xor
sbb
(bad)
mov
xchg
pop
mov
mov
addr16
pop
or
(bad)
cmp
jmp
mov
arpl
loop
mov
inc
xchg
aas
popf
jae
pop
aas
pop
or
call
mov
test
sub
jns
sbb
push
out
rcl
or
add
outs
dec
push
push
std
sub
enter
mov
sbb
fcomp
sub
xchg
mov
sbb
jbe
xlat
sub
push
inc
inc
iret
inc
iret
xor
or
xor
sahf
scas
aam
add
jp
inc
inc
mov
jge
vunpckhps
ret
(bad)
ja
cs
movs
jbe
test
outs
inc
add
popf
dec
mov
rcr
adc
leave
int3
mov
mov
idiv
js
push
mov
jp
inc
fild
inc
test
retf
fcmovne
push
cdq
inc
or
push
inc
lock
repnz
cmps
cmp
ret
repnz
mov
dec
jnp
cmc
repz
or
jo
movs
pop
int
inc
fdivr
mov
(bad)
jno
jo
(bad)
std
mov
scas
and
inc
call
popf
jnp
cld
ds
jl
call
and
(bad)
or
inc
loopne
adc
stc
(bad)
setns
mov
imul
dec
(bad)
enter
ins
xor
fwait
test
mov
pushf
stc
inc
jbe
mov
add
xchg
pushf
dec
add
jl
retf
je
sub
imul
pop
into
push
push
sti
push
enter
arpl
packsswb
xor
adc
fucomi
mov
or
xlat
xor
jae
stos
daa
jle
out
pop
xchg
push
push
sub
xor
mov
push
mov
mul
cmp
sti
sub
sbb
call
iret
adc
push
sub
xchg
sahf
sub
clc
hlt
push
outs
add
pop
dec
es
sub
jge
pop
dec
(bad)
sub
and
jge
cmp
aaa
pop
sbb
jp
loope
or
je
fimul
scas
xchg
mov
into
push
jno
out
jb
adc
xlat
stos
mov
popa
push
pop
xchg
adc
and
pop
imul
gs
mov
or
(bad)
pop
js
lods
push
push
out
mov
pop
push
shl
popa
out
pop
daa
dec
stc
xchg
pushf
inc
adc
and
jo
stos
jbe
out
scas
mov
or
sub
or
(bad)
mov
or
xchg
xor
mov
fst
loopne
dec
shr
jbe
jl
bnd
pushf
sub
imul
xor
fbstp
das
jl
mov
cmps
lods
sub
and
fild
clc
pop
cmp
sbb
retf
sub
mov
xor
pusha
cmp
adc
push
adc
push
or
add
dec
loopne
mov
shl
xor
les
(bad)
test
fist
jae
xor
push
push
jo
test
fisttp
jnp
push
popf
daa
lahf
or
int
pop
ret
push
mov
add
nop
mov
test
pop
dec
xchg
add
or
aad
pop
sar
xchg
std
mov
add
ret
fwait
sbb
out
cmps
jnp
pop
fnstsw
movs
or
dec
pop
mov
mov
xchg
mov
cmp
xchg
repz
repz
stc
and
aam
add
jbe
js
lds
les
fisttp
lock
jns
stc
stos
scas
xchg
cmp
and
in
arpl
in
in
lea
lods
cs
cmp
pop
(bad)
add
mov
sbb
pop
adc
jge
nop
sbb
loope
cs
push
mov
mov
ret
int
xchg
adc
rcr
and
push
mov
push
int
loop
sub
rcl
pushf
and
popa
mov
pop
and
jp
pop
add
adc
dec
pop
ret
mov
push
stc
(bad)
mov
sbb
push
sahf
mov
nop
mov
nop
add
aaa
aad
jecxz
pop
clc
test
nop
das
cmp
and
and
into
adc
or
jp
or
mov
cdq
or
jp
mov
sub
imul
loop
and
push
or
mov
pushf
cmp
inc
jl
aas
push
inc
and
sbb
popf
xchg
sub
mov
out
pop
jo
jb
add
inc
jbe
repnz
(bad)
stos
je
cmps
add
adc
cmps
movs
fwait
jp
sahf
imul
bound
push
pushf
movs
ror
jne
lahf
ins
out
leave
push
out
data16
mov
clc
jnp
sub
mov
icebp
adc
dec
out
test
adc
jecxz
popa
jle
(bad)
call
(bad)
mov
sub
jecxz
ins
sbb
mov
enter
jbe
push
rcr
inc
mov
xchg
mov
call
cmp
xor
sbb
cmc
add
ret
mov
aad
mov
neg
xchg
jle
loopne
dec
(bad)
ror
lea
clc
call
lea
repnz
mov
xchg
inc
mov
cmp
add
dec
gs
adc
jp
repz
jb
in
jne
push
mov
leave
and
adc
pop
mov
xchg
xchg
pop
dec
push
mov
jo
ss
int3
mov
cmp
pusha
xor
fbld
push
pushf
enter
outs
xchg
ja
or
int3
mov
sahf
xchg
push
std
iret
xor
mov
mov
ffree
shr
js
ror
jns
xchg
push
mov
call
es
hlt
mov
and
xlat
sahf
pop
inc
dec
and
fimul
fild
push
jle
cs
add
int
outs
scas
imul
mov
fidiv
aas
out
ffreep
push
cs
aad
mov
movs
and
mov
dec
xchg
les
mov
mov
(bad)
call
mov
push
inc
jno
stc
aaa
test
mov
inc
movs
mov
in
retf
vandpd
xchg
lock
dec
loope
push
pop
in
out
bound
adc
scas
jbe
aam
aaa
(bad)
sub
dec
loop
addps
inc
xor
(bad)
out
lock
sub
jl
and
or
jle
pop
pusha
fimul
mov
jecxz
push
mov
add
sbb
fisubr
shl
repnz
push
pop
pop
iret
outs
loop
mov
xor
cmp
iret
aad
fisubr
movs
ins
out
mov
cmc
push
push
popa
out
bound
add
rcr
ret
ins
cmp
xor
iret
loope
loop
loop
arpl
lock
push
jb
cdq
aas
dec
mov
in
test
ins
jb
and
sbb
test
xchg
adc
out
add
aas
je
pop
adc
iret
jmp
mov
arpl
jno
inc
test
push
mov
xchg
or
out
mov
sub
lods
gs
test
push
pop
push
cmp
fmul
or
mov
imul
outs
aaa
cmps
aas
aam
loopne
(bad)
mov
jne
push
bswap
add
mov
jnp
lds
iret
mov
cld
and
mov
fisub
mov
add
xor
mov
jb
jmp
rol
push
xchg
std
mov
jb
and
xchg
xor
sbb
push
(bad)
ja
shl
ds
mov
mov
xor
stos
push
or
out
repnz
leave
inc
lds
shl
arpl
and
cmps
and
(bad)
jmp
ret
iret
loop
ins
nop
and
adc
repz
push
inc
stos
jns
sub
lock
ss
ins
(bad)
je
jle
aas
das
mov
mov
push
mov
fst
lea
or
pop
out
fisubr
out
div
stos
mov
jae
ss
jno
pop
popa
scas
das
xchg
mov
inc
sbb
sbb
in
and
inc
rcr
mov
xor
imul
sub
xor
add
test
(bad)
outs
and
syscall
cli
(bad)
bound
add
enter
leave
sub
shr
mov
or
pop
cmp
dec
jbe
or
out
mov
ss
pop
lods
jge
cmps
sub
repz
pop
or
aaa
adc
inc
mov
rol
jnp
push
outs
jecxz
mov
in
sub
add
push
or
mov
call
pop
push
js
ins
xor
fcomp
push
call
sub
(bad)
pop
aas
in
stos
mov
mov
mov
pop
repz
and
mov
jg
sti
(bad)
cmp
hlt
sub
(bad)
cmp
sbb
sbb
stc
ret
mov
sahf
cdq
jg
popf
fist
movs
bnd
(bad)
(bad)
into
sub
jae
push
add
mov
aaa
mov
cli
sub
jne
push
fcom
xor
(bad)
mov
out
jle
jg
aas
jecxz
test
loop
add
out
xchg
cmp
mov
pushf
xor
scas
out
pop
or
xchg
adc
fisub
pop
cmps
fidivr
push
addr16
cwde
test
mov
fnstenv
jmp
inc
inc
pop
outs
and
scas
pop
popa
pop
xchg
push
adc
or
adc
inc
int3
push
repnz
test
jle
iret
out
jle
mov
mov
or
xor
hlt
sbb
imul
mov
or
dec
sub
fwait
ja
cwde
and
jb
dec
xor
int3
or
jl
stc
pop
and
and
pop
leave
aad
ret
ins
xchg
cwde
(bad)
ds
sub
das
inc
jns
inc
push
xchg
mov
push
mul
mov
jmp
mov
(bad)
add
mov
dec
add
test
add
ja
adc
adc
pop
xchg
or
dec
jb
cld
out
cmp
stos
outs
sti
in
aas
bswap
lock
fistp
inc
add
lods
pop
inc
cmc
mov
pusha
add
xchg
pusha
xchg
or
test
cmp
pop
out
test
pusha
outs
xor
adc
hlt
cmps
push
dec
cmp
test
ret
mov
mov
ret
cmp
pusha
push
sbb
mov
inc
xchg
dec
sbb
pop
push
pop
ins
cmp
mov
iret
sub
sbb
xchg
adc
xlat
arpl
and
in
clc
cmp
mov
(bad)
dec
dec
cmp
js
xor
mov
stc
sar
mov
push
imul
sbb
and
mov
add
loope
test
pop
fs
cmps
je
mov
xor
sub
fmul
sbb
in
cmc
int3
(bad)
adc
push
das
cld
adc
or
pop
cli
xor
and
repnz
imul
cli
call
jg
outs
mov
(bad)
sub
push
add
mov
adc
mov
mov
mov
and
dec
add
sub
outs
call
shl
movs
nop
test
stc
rol
adc
test
mov
loope
(bad)
jae
jo
mov
xor
xchg
push
inc
out
pop
movs
fisttp
mov
aad
mov
test
push
ror
clc
stc
xor
(bad)
sbb
loope
sbb
and
xchg
cmps
and
mov
inc
and
sbb
bound
pop
(bad)
loop
push
pop
imul
push
add
dec
pushf
sub
push
sub
shl
mov
cmp
test
jne
jae
(bad)
lods
addr16
arpl
test
fs
call
or
enter
clc
(bad)
sbb
push
sti
mov
loop
pop
inc
dec
movs
xor
fwait
mov
push
out
aaa
shr
and
(bad)
or
inc
(bad)
pusha
stos
sbb
cmp
add
jle
pop
and
jecxz
es
sahf
gs
add
jae
mov
push
pushf
jmp
cmps
adc
jno
or
adc
and
int
xchg
inc
pop
ss
xchg
inc
outs
cdq
cmp
add
sbb
inc
adc
and
das
mov
cli
pop
mov
add
shr
mov
shl
mov
xchg
push
and
mov
lea
adc
aam
cmps
mov
push
sub
mov
aam
cmovge
pop
daa
and
pop
pop
imul
push
inc
pop
pushf
aad
popa
or
cmp
mov
imul
jle
push
jae
(bad)
rol
pop
push
xchg
fisubr
dec
xor
pop
popa
sub
jno
jns
xor
pop
sbb
cmps
fstp
imul
xchg
jp
into
test
test
out
les
test
scas
adc
enter
jmp
lds
dec
std
xor
(bad)
jnp
inc
mov
cmp
xchg
fist
cmp
mov
icebp
mov
sbb
stos
cs
cdq
dec
dec
sub
jnp
jecxz
push
push
out
(bad)
mov
xlat
xchg
cmps
jo
and
sbb
cmp
pop
call
fldenv
lahf
das
movs
push
or
cmp
mov
fsubr
mov
rcr
int
dec
and
dec
xchg
(bad)
dec
cmp
add
xchg
fist
pop
scas
mov
cmps
pop
xchg
xchg
(bad)
mov
pop
(bad)
(bad)
retf
mov
jnp
outs
push
jmp
loope
fwait
add
int
add
mov
mov
pop
xchg
mov
sbb
push
or
popf
sub
pop
aad
ror
add
imul
loopne
mov
push
jle
aas
push
cmp
or
mov
outs
push
enter
cmp
mov
popf
stos
in
out
aam
mov
xor
retf
in
aad
cmp
xor
sahf
shl
dec
push
xor
ret
mov
or
xlat
out
adc
and
cmp
xchg
and
push
push
lods
mov
int3
dec
in
fnstenv
add
inc
mov
jns
mov
xlat
xor
out
outs
or
jno
jle
cmps
mov
inc
(bad)
arpl
gs
int
mov
stc
jns
add
(bad)
je
add
and
and
pop
jl
push
aas
idiv
add
cdq
enter
inc
mov
inc
mov
dec
jb
pop
outs
shl
in
loope
leave
pop
jno
adc
mov
aam
or
ins
mov
xor
sar
mov
aad
push
imul
fisub
popa
xchg
mov
mov
cmp
jmp
pop
sar
dec
xor
pop
inc
xchg
(bad)
mov
fst
cmp
out
or
push
lods
cmp
hlt
std
into
call
gs
data16
inc
es
xor
dec
fsubr
push
jp
push
pop
adc
push
fadd
sbb
xlat
mov
fisttp
aam
add
push
(bad)
retf
jo
or
dec
cmp
cmp
aad
sbb
mov
fsub
push
or
adc
imul
mov
adc
jns
js
add
and
repnz
push
add
test
jne
adc
into
cmp
enter
mov
cmps
xchg
dec
dec
leave
pop
(bad)
pop
push
pushf
push
test
pop
or
and
ret
adc
sar
fdivp
mov
aam
cmp
retf
mov
les
dec
push
mov
inc
mov
inc
jb
jnp
je
push
fs
inc
jl
mov
fsub
xchg
stc
push
(bad)
sub
(bad)
jmp
mov
add
sub
inc
adc
sar
cmc
mov
ret
mov
xchg
and
test
shr
or
adc
inc
cmps
push
mov
mov
dec
and
stos
xchg
cmc
mov
jmp
imul
add
iret
call
and
call
push
ja
adc
jl
push
cmp
add
cmp
dec
adc
lahf
(bad)
sbb
data16
cdq
mov
popf
dec
dec
js
push
mov
push
inc
test
mov
loop
fsub
idiv
jae
mov
jge
cmp
popa
fs
addr16
pop
scas
dec
mov
pop
mov
enter
fs
imul
test
repz
pop
jmp
loopne
jl
es
pop
xchg
xchg
std
call
int
ficomp
cmps
sub
xchg
fs
in
test
or
dec
retf
inc
and
and
mov
leave
xchg
xor
cmps
repnz
test
or
aaa
jmp
call
and
adc
lods
dec
xor
push
mov
xchg
fmul
sub
(bad)
std
push
or
bound
les
mov
mov
leave
ret
or
mov
scas
bound
jge
mov
ins
enter
js
inc
pop
sahf
dec
xor
into
jmp
inc
mov
add
(bad)
out
xor
and
movq
sub
aas
in
cmp
(bad)
adc
sti
or
mov
pop
inc
jb
sub
outs
dec
sti
xchg
mov
mov
(bad)
aad
cwde
inc
or
int
sub
sub
arpl
pushf
mov
out
mov
xor
sub
push
cs
cli
jo
js
mov
repz
jl
mov
mov
inc
and
ins
rcr
pop
icebp
ins
sbb
adc
rcl
aaa
scas
int
sbb
jp
push
xor
xor
jne
test
ins
retf
xchg
add
sbb
mov
pop
scas
push
push
shl
out
add
lea
shl
nop
cdq
ret
lods
bound
sub
dec
hlt
in
popf
mov
data16
sahf
ds
neg
cli
sub
dec
aam
fcom
in
push
add
or
adc
lods
pop
adc
sub
xor
jle
mov
mov
xchg
call
mov
or
mov
cmp
neg
mov
jb
xchg
push
push
int
lods
pop
mov
(bad)
jo
fadd
stos
jmp
ins
outs
lock
mov
xchg
xor
or
outs
into
or
retf
sti
imul
xchg
or
mov
stc
and
add
scas
jne
jns
dec
pop
sbb
xchg
xlat
mov
mov
push
add
into
xchg
inc
cdq
ss
inc
lea
dec
and
add
pop
mov
and
sbb
dec
push
and
(bad)
in
push
or
mov
inc
shl
aam
retf
cmps
(bad)
push
sbb
push
and
fnstsw
into
retf
pop
push
and
fidiv
mov
push
xchg
xchg
sbb
sbb
add
or
mov
shr
adc
cmp
inc
adc
popf
cmp
mov
dec
xor
dec
bound
(bad)
xchg
cmp
lds
nop
jp
repnz
jmp
xor
dec
std
dec
loop
movs
loopne
fadd
addr16
inc
ja
dec
cwde
aad
mov
fwait
jo
mov
scas
add
sbb
test
add
inc
(bad)
data16
push
lock
aad
xor
test
jge
test
sar
retf
gs
test
cmc
or
fmul
push
jo
sbb
ins
lods
xchg
xor
xchg
stos
pop
mov
int3
sbb
inc
sub
add
mov
es
mov
push
icebp
daa
hlt
and
aam
and
pop
jmp
lea
jle
inc
out
push
or
fld
mov
push
sbb
in
mov
mov
mov
xchg
pushf
mov
es
clc
jbe
(bad)
(bad)
test
or
sahf
push
dec
xchg
retf
retf
cld
and
fcmovnbe
jbe
imul
rcl
pop
fs
ins
les
pop
setbe
jmp
aaa
or
inc
repnz
aam
jb
in
fmul
push
ret
sub
push
loopne
das
dec
outs
(bad)
pop
ins
mov
jbe
add
xchg
shr
push
sbb
inc
inc
dec
lock
popa
cwde
jmp
add
gs
cld
hlt
push
mov
cmp
jmp
loope
mov
or
dec
mov
arpl
and
and
fcmovne
jo
push
xchg
test
sub
inc
cs
cmc
jbe
or
ret
sahf
mov
neg
adc
pushf
cmp
mov
ja
movs
int
pop
je
das
add
add
mov
sbb
fstp
fisttp
add
scas
test
icebp
pushf
jecxz
jg
pop
jmp
lods
in
enter
(bad)
out
test
in
ror
out
jns
jno
rcr
pop
push
adc
ret
shl
mov
repnz
out
fild
sub
cmp
or
rol
adc
push
cmp
add
les
pop
sti
add
aam
stc
jp
cs
or
ins
lds
(bad)
fimul
lods
mov
push
sub
test
ror
jmp
icebp
lods
xchg
push
push
mov
cmp
sbb
shl
inc
popf
or
stc
or
js
pop
mov
sar
mov
nop
mov
in
fistp
push
enter
pop
push
loopne
imul
inc
sahf
cmps
xor
push
repnz
mov
mov
mov
into
or
in
inc
rol
jne
cs
pop
jnp
jbe
popa
mov
add
mov
mov
pop
push
mov
xchg
mov
xlat
call
test
pop
loop
push
sub
loop
mov
xor
pop
fwait
loop
arpl
(bad)
and
push
mov
cld
mov
loopne
not
push
inc
mov
daa
sub
jge
xlat
add
in
in
cmps
adc
and
sti
lods
dec
adc
push
mov
imul
inc
jle
sbb
(bad)
or
(bad)
sub
fisubr
outs
xchg
adc
cmc
rol
mov
pusha
xor
loopne
ins
sub
xchg
push
addr16
movs
jo
xor
mov
mov
ins
pop
jecxz
mov
add
sbb
pop
jl
push
jo
cmp
cmps
dec
popa
inc
dec
lock
inc
mov
dec
je
sub
dec
cmp
jo
loopne
leave
mov
cmp
xchg
mov
stc
xchg
in
adc
and
or
sbb
jae
pop
dec
imul
sti
dec
cli
xchg
pusha
ret
pop
out
dec
in
test
pop
xor
sbb
pop
out
inc
xor
loopne
mov
cmp
test
addr16
ss
pop
ficom
jno
or
jmp
push
pop
inc
xor
iret
sbb
stc
cs
(bad)
test
mov
fidiv
mov
xor
cld
cmc
and
add
or
mov
cmp
or
dec
lds
sub
gs
into
cwde
fist
loopne
aad
and
add
pop
outs
in
push
cmp
sub
out
js
(bad)
cmp
xor
mov
or
neg
popa
dec
push
mov
push
fwait
mov
cmp
fwait
push
cdq
out
sub
inc
fimul
push
pushf
in
aad
out
icebp
mov
jl
mov
icebp
fcomip
stos
ror
mul
dec
fstp
pop
pop
mov
cmp
pop
cmp
fsub
mov
push
add
mov
adc
mov
into
pop
sbb
ds
inc
or
mov
scas
sbb
mov
xchg
sbb
ret
in
pop
(bad)
pop
mov
or
loope
ins
jae
mov
sti
cmps
and
jns
in
leave
int
inc
mov
push
add
pop
cbw
mov
jmp
fisttp
xor
lods
cmps
fsubr
push
sbb
sar
repz
add
xor
jno
call
jnp
mov
and
pop
mov
(bad)
xchg
cmps
and
mov
gs
jne
or
pop
pop
dec
lods
xchg
sbb
push
add
and
mov
fiadd
(bad)
cmp
mov
lea
inc
movs
mov
sub
mov
mov
call
pop
jge
shr
cmc
mov
push
repz
or
shl
xchg
dec
mov
dec
jecxz
or
int3
cmp
dec
test
dec
mov
and
(bad)
push
loope
mov
sub
jp
and
xor
or
and
inc
jg
sbb
cwde
sbb
stos
inc
push
jge
test
addr16
push
outs
jno
call
dec
nop
mov
dec
loop
mov
or
inc
pop
sub
(bad)
js
(bad)
stos
xor
int
push
ror
cmp
jne
sbb
jnp
xchg
mov
mov
mov
fimul
in
or
mov
lods
mov
fistp
xchg
stos
cmp
xchg
mov
repnz
mov
xor
inc
pop
fimul
sbb
bound
pop
fcomp
call
sbb
aad
and
push
daa
iret
loope
push
mov
ret
sbb
popf
jle
inc
sub
(bad)
fist
adc
mov
dec
and
adc
pop
mov
and
fild
sbb
and
push
cwde
mov
pop
xor
cmp
(bad)
das
xchg
jecxz
pop
pushf
gs
add
aas
ins
fnstcw
fwait
mov
aaa
je
aaa
sbb
sar
call
add
fyl2x
dec
sbb
aas
and
shl
addr16
fistp
mov
test
ins
xor
inc
jl
xchg
mov
fdivr
or
out
ja
pop
sbb
xchg
adc
test
mov
mov
cmp
imul
out
push
call
push
fisttp
fld
mov
mov
push
push
sar
push
dec
mov
jo
and
addr16
xchg
outs
lea
inc
push
xor
add
mov
mov
(bad)
cmps
stos
push
pop
test
je
punpckhdq
dec
into
fs
fs
aad
not
or
pop
add
inc
les
shl
xchg
inc
sbb
sar
or
lods
lods
adc
mov
inc
out
dec
push
push
sbb
inc
dec
jl
push
je
out
je
inc
lea
jb
push
jle
xchg
jae
pop
inc
push
or
push
popf
stos
nop
and
mov
pop
xchg
je
jns
push
xchg
dec
mov
in
push
pop
inc
lds
pop
mov
xchg
std
push
dec
loop
pop
jp
cli
and
push
in
push
push
sbb
imul
pop
mov
fstp
loop
sahf
adc
pop
jno
adc
jo
xchg
xchg
scas
mov
repnz
fsubr
mov
xchg
sti
add
cmp
push
in
sti
cdq
jmp
aas
mov
jmp
sahf
mov
xor
movs
dec
mov
or
add
fs
or
jns
pushf
push
xor
xor
sbb
out
mov
lds
das
repnz
xor
mov
add
(bad)
adc
and
js
and
retf
add
pop
mov
mov
mul
(bad)
outs
jne
mov
(bad)
add
add
jg
xor
mov
loopne
dec
sbb
mov
leave
jo
pop
xchg
aad
xor
fst
dec
cdq
nop
add
in
icebp
and
cmc
xor
cld
fucomip
xor
sub
lahf
cmps
pop
imul
pop
dec
iret
xor
inc
push
lock
cmp
or
adc
scas
movs
xchg
ret
mov
jns
and
loop
mov
(bad)
or
or
sub
test
or
xchg
in
add
xchg
arpl
sub
pop
imul
dec
and
in
mov
xor
add
jo
in
sti
neg
gs
lds
mov
(bad)
xchg
push
cbw
or
loopne
stos
(bad)
(bad)
(bad)
and
int3
pop
sahf
fwait
sub
pop
mov
test
dec
aam
push
std
inc
lea
xor
pusha
mov
mov
lds
jb
cdq
xor
sbb
hlt
loope
sub
sti
in
xor
xor
retf
push
cs
jecxz
mov
sbb
scas
sti
push
(bad)
test
or
je
loope
xchg
sbb
stc
cdq
(bad)
popf
mov
(bad)
cmp
or
jecxz
jno
fsubr
inc
rol
(bad)
in
and
pop
sbb
cmp
jl
xor
mov
js
popa
imul
and
or
call
cmp
dec
vpcmpeqb
neg
cdq
jecxz
hlt
mov
pop
popf
data16
call
call
out
cmp
xchg
sub
sbb
push
jb
mov
mov
add
mov
xchg
popf
es
fs
ja
fdiv
jns
out
lds
mov
stos
jno
adc
xchg
test
sub
lds
je
xchg
ss
pop
lahf
pop
dec
out
pop
adc
sub
dec
mov
and
sar
add
test
adc
(bad)
fistp
mov
in
inc
jp
into
cmp
xchg
and
sbb
jle
movs
xchg
ins
rol
leave
stc
bound
mov
mov
cwde
or
fs
aas
les
shl
sbb
cs
(bad)
jae
and
add
pop
in
popa
ret
test
out
jg
add
rcr
mov
adc
mov
inc
(bad)
jge
fstp
dec
nop
popf
dec
ds
adc
outs
fs
mov
dec
scas
movs
clc
cld
add
fst
je
mov
aam
pop
shl
sti
in
mov
shl
cmc
mov
test
inc
sub
add
mov
sti
outs
popfw
and
retf
mov
and
fwait
sbb
dec
inc
enter
jg
adc
or
outs
sub
push
jp
enter
out
imul
xchg
sub
dec
imul
jmp
cs
cmc
fwait
adc
pushf
pop
jecxz
aam
call
xor
fiadd
dec
ficomp
sbb
adc
mov
xor
cdq
(bad)
(bad)
out
inc
cmps
inc
mov
dec
add
xchg
imul
inc
sub
js
xchg
push
add
add
adc
retf
mov
cmp
xchg
jg
imul
mov
popf
add
out
push
rcl
xchg
cmp
sbb
mov
add
fcomp
bound
pop
sbb
mov
mov
xchg
mov
xlat
movs
cmp
xchg
sub
mov
aad
hlt
xchg
in
in
add
xchg
sub
sbb
jl
js
xchg
aas
movs
xchg
jmp
in
inc
dec
push
push
std
in
mov
jns
xor
call
clc
add
cmps
jmp
mov
inc
dec
nop
jae
cmp
inc
in
push
neg
mov
je
psubsb
clc
test
jmp
in
push
xchg
sbb
push
inc
sbb
addr16
(bad)
(bad)
cmp
es
or
cwde
sub
dec
scas
pop
or
and
dec
mov
jecxz
push
call
mov
pop
add
cmp
xchg
push
hlt
mov
inc
sub
outs
shr
sbb
lock
repz
dec
lds
pushf
mov
add
loop
jg
test
mov
jae
stos
outs
jns
sti
dec
push
(bad)
lods
jb
inc
out
fbstp
push
imul
adc
cmp
out
enter
add
mov
mov
ret
fidiv
aaa
aas
mul
adc
cs
push
cmp
test
arpl
dec
inc
popa
jecxz
or
shl
mov
or
and
and
and
lods
push
or
je
fwait
mov
std
xor
stos
rep
es
push
pop
sbb
icebp
ss
cmp
mov
scas
pop
mov
mov
shl
xchg
mov
dec
ja
fst
ret
cmp
ret
retf
test
loope
jae
out
mov
outs
jl
sub
xor
cmps
jnp
add
push
xor
xor
and
sbb
pop
das
mov
cld
add
(bad)
ficomp
sbb
cs
js
pop
mov
ja
mov
mov
(bad)
movs
push
pop
cs
xor
fcomp
or
xchg
jge
test
not
sbb
inc
pushf
xlat
jmp
push
or
cdq
ins
rcl
pop
movs
push
mov
and
das
jo
(bad)
jl
jmp
cmp
or
sub
push
sbb
es
or
pop
dec
adc
out
xor
cmp
cmp
inc
push
cmp
cmp
stos
sub
inc
mov
jbe
push
sbb
push
dec
stos
(bad)
inc
mov
enter
xlat
adc
je
retf
xchg
xor
rcr
outs
das
xchg
in
gs
cmp
xlat
jp
clc
jnp
cmp
test
mov
mov
cwde
dec
mov
sbb
rol
xor
mov
out
push
cmps
or
sar
sbb
pushf
setae
ins
pop
leave
hlt
push
ret
adc
pop
xor
mov
dec
adc
pop
ret
mov
enter
call
out
jmp
jmp
daa
jmp
(bad)
adc
mov
popf
cmps
mov
add
push
inc
stos
(bad)
adc
cmp
and
inc
xlat
sub
or
adc
loopne
sub
adc
jo
dec
sub
pop
mov
jle
movs
cmc
sub
mov
mov
(bad)
mov
jp
cmps
mov
jae
ins
dec
fs
test
sbb
ror
pusha
mov
ja
movs
stos
adc
or
neg
sub
outs
adc
inc
or
mov
in
out
push
mov
stc
xchg
mov
mov
pop
dec
jle
or
test
es
movs
imul
xor
cli
and
mov
lock
loope
ror
cmp
shr
repnz
movs
sar
mov
jb
stc
mov
fld
lea
ffreep
fcomp
cmp
mov
dec
jbe
add
jne
lea
rcr
imul
retf
nop
lds
sbb
mov
int
daa
pop
icebp
jne
int3
es
test
push
jecxz
es
xor
pop
inc
sbb
mov
and
movs
jbe
(bad)
jge
(bad)
push
fwait
idiv
adc
push
sbb
test
jnp
repz
inc
inc
pop
fsubr
rol
cmp
(bad)
mov
shl
jo
jnp
daa
add
lea
mov
mov
paddusw
cmp
adc
lods
fwait
ret
xor
lods
shl
pop
aad
lahf
in
mov
(bad)
not
adc
or
dec
test
mov
es
idiv
add
test
cld
aaa
fwait
pmuludq
mov
rcl
jno
js
mov
sbb
xchg
add
xchg
mov
mul
hlt
aaa
inc
jno
scas
sub
jl
mov
jb
sub
cmp
cmps
cmp
xchg
dec
adc
popf
add
loop
test
mov
cmp
xchg
adc
jecxz
repz
mov
xchg
add
mov
jnp
sub
fwait
sub
xchg
inc
lds
inc
je
push
add
sti
pushf
mov
pop
pop
in
jno
(bad)
xor
adc
xchg
jg
inc
jecxz
xor
mov
sbb
dec
leave
and
xor
test
stos
sub
mov
sub
xchg
or
and
(bad)
xor
push
imul
or
jmp
rcl
movs
popf
repz
fwait
call
call
inc
out
retf
push
fbstp
ret
movs
mov
(bad)
push
jle
retf
test
or
inc
pop
mov
cmc
xor
xchg
xchg
das
cmp
int
or
add
enter
lods
push
mov
pusha
outs
dec
xchg
mov
jno
mov
sub
push
mov
lock
sbb
fisubr
pop
jg
cli
nop
push
rol
pop
sbb
add
cdq
push
jmp
out
push
cmp
(bad)
in
jecxz
xchg
mov
pop
or
adc
jo
mov
ret
(bad)
popf
aaa
stos
or
jmp
fimul
jmp
push
or
cmp
retf
aaa
pop
lods
dec
cmp
pop
fcomp
push
into
imul
pop
out
or
retf
mov
cwde
cli
inc
lahf
ret
xor
imul
add
xor
push
pop
push
push
inc
add
retf
repnz
verr
aam
mov
add
mov
jnp
sbb
dec
mov
sahf
mov
adc
popf
xchg
rcl
(bad)
nop
scas
shr
fisubr
fisub
into
out
xor
popa
add
cmp
lods
inc
add
aaa
mov
mov
movs
jle
repnz
xlat
cmc
xlat
dec
cmps
xor
cwde
mov
mov
(bad)
hlt
test
sub
fsub
mov
sub
fs
jp
pop
jno
or
jmp
add
jl
loopne
mov
lock
mov
stos
cmp
adc
dec
cmp
adc
cmps
inc
mov
or
pushf
mov
das
sub
loop
inc
xchg
mov
daa
loop
sbb
hlt
or
cli
xor
les
imul
pop
mov
xor
(bad)
scas
adc
sub
loope
mov
clc
movs
inc
pop
neg
test
cdq
mov
dec
fst
xchg
push
cld
sub
lds
inc
addr16
imul
mov
mov
sar
inc
pop
and
les
addr16
scas
mov
pop
je
pop
gs
daa
xchg
and
xchg
addr16
pop
enter
out
pop
cmp
ins
stos
mov
and
retf
out
adc
int3
cmps
dec
iret
jg
in
lea
test
adc
jmp
mov
add
xchg
mov
cmp
ja
(bad)
cli
mov
jg
xchg
or
or
jl
(bad)
jmp
sub
pop
sbb
in
xchg
mov
sbb
add
dec
or
xchg
stos
inc
cld
sub
icebp
jbe
jno
in
pop
jle
mov
(bad)
in
les
int3
ins
adc
fwait
mov
test
or
push
int3
stos
xor
dec
int
shr
adc
sub
cdq
int
(bad)
inc
in
mov
movs
cmp
adc
sub
mov
clc
add
js
aam
mov
ins
gs
inc
inc
sub
mov
aam
jmp
and
cmp
push
out
xchg
aad
sbb
sub
pushf
not
pop
xchg
inc
cmps
xor
jmp
jle
cmp
inc
sub
sub
add
lea
aas
(bad)
jmp
mov
push
cmp
aaa
pop
jl
push
(bad)
dec
fild
pop
fsub
fcomi
jmp
fnstsw
adc
ret
jbe
pop
push
jae
movs
in
lock
adc
mov
push
retf
cmp
xchg
xor
lock
enter
dec
jns
fimul
and
jno
jnp
(bad)
fs
fisttp
retf
daa
mov
popa
and
jnp
xchg
sub
and
adc
test
cli
adc
jns
mov
pop
xor
mov
add
(bad)
mov
shr
pop
in
movs
pop
repnz
ss
(bad)
call
xor
imul
sub
fimul
mov
leave
hlt
push
mov
push
mul
lea
ror
addr16
stos
or
out
jmp
(bad)
push
aas
lds
add
cs
jmp
xor
loop
cli
cld
fcom
push
loope
jno
xchg
ins
cmp
add
inc
outs
inc
push
aas
stc
mul
jmp
push
inc
xchg
or
jmp
test
sbb
mov
adc
fwait
inc
sub
rcl
and
ss
xchg
push
add
call
add
mov
std
stc
pop
push
mov
adc
sbb
cld
cdq
xchg
inc
push
out
mov
sbb
loope
int
fdiv
sbb
rcl
fmulp
outs
ret
fidiv
sub
leave
sar
mov
and
mov
fs
cdq
mov
dec
mov
and
mov
jle
mov
xor
adc
ret
pop
in
adc
mov
fsub
jmp
lahf
loope
adc
mov
sub
mov
fnstcw
push
push
mov
adc
push
imul
mov
hlt
jecxz
adc
push
adc
retf
push
retf
sub
stos
jl
inc
mov
addr16
mov
movs
ins
scas
ret
daa
add
leave
enter
popa
pop
adc
popa
jbe
mov
jns
cmp
outs
sub
jnp
dec
add
loope
push
loopne
add
mov
aaa
into
mov
pop
mov
das
sbb
sbb
sub
rcl
mov
repnz
(bad)
jne
nop
push
push
sbb
dec
movs
add
sbb
loope
cdq
cli
test
mov
ins
mov
pusha
xchg
pusha
jl
pop
mov
dec
cli
in
out
mov
popf
pushf
xchg
mov
rcl
push
ret
outs
aas
pushf
ret
jae
sbb
fnsave
test
retf
sar
and
push
mov
outs
inc
in
or
retf
arpl
mov
mov
lock
pop
xor
dec
aam
sub
fnstenv
call
das
repz
adc
addr16
add
jmp
cmp
mov
retf
cdq
pushf
out
call
add
aad
xor
retf
je
adc
call
call
or
xchg
movs
jl
les
cld
push
push
pop
imul
xor
jl
sbb
inc
bound
xor
and
cmp
and
xor
retf
repz
add
les
pop
xchg
cmp
jmp
sub
shr
inc
jno
mov
add
mov
lahf
or
cmps
mov
jecxz
das
jo
xor
mov
jno
xlat
stos
mov
add
add
test
cli
adc
in
nop
imul
stos
aam
mov
mov
mov
enter
cmps
ss
arpl
or
jb
sub
dec
push
test
jmp
aad
pop
cmp
push
mov
fist
data16
into
mov
lods
ret
iret
in
mov
mov
xchg
mov
jne
push
cmp
hlt
mov
push
ja
out
lahf
and
mov
push
rol
imul
mov
hlt
(bad)
in
sub
aad
jp
(bad)
add
or
ins
dec
daa
xor
and
sub
fisub
cmps
add
jb
retf
cmps
sub
pop
cs
movups
mov
gs
(bad)
(bad)
jae
dec
scas
cld
mov
cmp
mov
adc
mov
imul
out
cmp
aas
xor
pop
sbb
dec
gs
int3
fdivr
adc
push
inc
xchg
(bad)
mov
mov
call
test
in
xchg
xchg
push
xor
outs
mov
(bad)
jg
imul
cdq
iret
hlt
cmps
(bad)
in
gs
jecxz
and
dec
and
mov
add
test
psubsb
cli
bound
repnz
jmp
test
gs
lods
mov
dec
popf
xor
nop
sub
neg
(bad)
cli
push
das
shl
mov
icebp
jecxz
imul
push
xor
loope
cmps
push
or
xlat
pusha
in
inc
cwde
mov
add
popf
push
gs
cmp
cmps
jg
jmp
(bad)
adc
out
jl
out
arpl
pop
jne
jo
xchg
test
push
popf
fsub
inc
jnp
dec
sahf
inc
xlat
dec
xor
icebp
cmp
jmp
xchg
cwde
and
into
loope
or
push
pusha
popf
ja
outs
test
sti
inc
repz
cli
mov
mov
cmp
jmp
loope
cmp
jecxz
dec
test
sbb
test
or
shl
cwde
jecxz
cdq
xor
pop
dec
or
aas
sub
lods
dec
pop
fild
add
sar
iret
xor
in
sbb
adc
or
das
jns
cmp
pop
call
(bad)
repz
pop
fild
rcr
(bad)
mov
rcr
daa
mov
aam
mov
pop
scas
xchg
pop
push
(bad)
addr16
aas
mov
ins
call
pop
push
aam
mov
sbb
aad
mov
retf
adc
push
pop
(bad)
nop
mov
bound
mov
cmp
hlt
adc
and
jmp
mov
jb
add
inc
push
sbb
ret
arpl
sub
iret
ret
(bad)
push
mov
out
or
jb
dec
jmp
cld
hlt
and
mov
adc
jmp
std
cmp
or
test
jno
adc
scas
add
sbb
inc
adc
ja
jns
pop
ds
jno
or
jae
jle
sahf
ja
pop
jp
pop
scas
lea
dec
ins
test
sub
test
cmp
pop
cld
mov
push
iret
push
outs
sub
jg
bound
ror
retf
rcr
and
(bad)
loop
stc
mov
add
in
out
pop
mov
loopne
test
pop
adc
adc
data16
push
test
hlt
in
hlt
and
jmp
mov
ficom
jmp
loop
(bad)
call
(bad)
adc
pop
xor
mov
push
xor
les
inc
ins
xor
loopne
adc
push
sbb
jle
in
fdivr
push
dec
fcomp
movs
cmp
pop
xchg
jae
lods
aaa
mov
gs
stos
add
and
pop
enter
cdq
mov
push
cld
repz
dec
lods
or
push
loopne
jbe
add
(bad)
mov
inc
and
(bad)
mov
dec
adc
(bad)
or
ss
lahf
mov
push
mov
in
pushf
(bad)
es
mov
sahf
outs
stc
mov
(bad)
fidivr
jge
mov
(bad)
mov
xchg
add
sub
jecxz
data16
out
push
jnp
repnz
fist
xchg
pop
jb
in
gs
xor
out
push
cli
or
jge
mov
aaa
xor
shr
sbb
int
stos
or
in
daa
jbe
mov
cli
jge
(bad)
cld
xchg
mov
std
mov
pop
ret
push
fs
adc
fwait
cmp
in
dec
enter
push
fwait
icebp
test
ror
xchg
pop
and
mov
ins
jbe
mov
(bad)
cmp
int3
int
lods
add
pop
test
sub
test
sbb
mov
pop
loop
jb
and
cmp
sub
sar
popa
adc
pop
loop
adc
ret
jecxz
jo
pop
add
adc
mov
or
sahf
sbb
(bad)
jns
and
stc
add
int3
sar
addr16
lock
inc
(bad)
cmp
repnz
mov
cmp
jp
push
push
cmp
retf
sbb
inc
sub
shl
push
int3
pop
pop
dec
xor
mov
mov
inc
mov
fadd
lea
lods
xor
mov
iret
mov
dec
fs
xor
cwde
jecxz
inc
push
(bad)
inc
mov
mov
jge
jl
call
pusha
push
adc
push
call
mov
mov
mov
push
ds
jne
xor
(bad)
or
mov
pop
int3
lds
mov
lds
dec
xchg
xchg
ins
sbb
je
cli
dec
std
or
jle
or
ret
and
nop
pop
pop
pop
dec
jg
fcomp
xlat
pop
push
and
pop
and
xchg
and
(bad)
ftst
lods
lock
or
mov
loope
sub
xor
sar
js
jns
call
mov
scas
inc
xchg
movs
cmp
push
mov
adc
es
ret
dec
push
inc
dec
mov
mov
call
cdq
add
inc
sbb
ret
add
xchg
jno
cld
lds
(bad)
int3
scas
stc
loop
sub
mov
push
mov
add
loope
mov
mov
out
jns
loope
test
and
cmp
repnz
pextrw
push
retf
sbb
fdivr
ins
or
and
das
mov
fcom
dec
xor
std
nop
pshufw
int3
push
xchg
inc
bound
retf
cmc
std
push
mov
call
popa
jl
dec
dec
dec
jno
xor
retf
or
pushf
(bad)
rcr
xchg
cmp
jg
or
lahf
(bad)
(bad)
clc
add
pop
inc
push
push
and
pop
loope
hlt
and
mov
cdq
(bad)
xor
addr16
loope
push
and
mov
out
retf
xlat
fld
xchg
fs
ret
popa
pop
mov
sahf
lds
lahf
dec
inc
or
and
scas
push
add
jb
xor
pop
lods
sbb
jg
add
arpl
mov
pop
retf
stos
pop
or
daa
mov
pop
addr16
push
sub
push
push
and
cmc
sub
pop
sar
push
enter
sbb
cdq
mov
movs
sub
fs
pop
(bad)
fdiv
int
std
mov
pushf
bound
(bad)
aaa
popa
fs
gs
ins
js
rcr
fld
mov
mul
push
mov
mov
sbb
repnz
out
(bad)
sbb
cmps
pop
adc
push
pop
fbld
push
jnp
pop
push
repz
in
out
sbb
in
mov
out
mov
adc
int3
out
inc
inc
repnz
push
or
pop
fwait
int
jecxz
stos
mov
push
aad
test
sar
cmp
or
mov
cwde
dec
das
out
fdiv
imul
scas
sbb
cmps
sub
push
mov
int3
xchg
jecxz
(bad)
mov
inc
sub
outs
loop
ja
sub
mov
arpl
cmp
mov
mov
push
popf
test
mov
mov
mov
and
icebp
div
imul
shr
paddusb
add
cmp
ins
and
inc
mov
outs
mov
jmp
xchg
mov
loopne
into
icebp
cwde
push
mov
es
sbb
int
gs
dec
stos
add
shr
xor
cmp
hlt
sbb
mov
mov
jbe
js
cmc
push
shr
in
test
movs
and
clts
xor
mov
mov
cmp
sbb
dec
jb
push
add
mov
test
cmp
sub
sub
pop
push
int3
pop
push
push
loope
push
jns
mov
mov
popf
inc
bnd
sbb
sar
dec
loope
(bad)
and
cmps
pop
mov
push
lods
fwait
cmp
in
adc
into
jnp
cmp
push
mov
aam
mov
ja
ror
loope
sub
(bad)
push
sbb
inc
or
aad
adc
int3
mov
(bad)
cmps
and
dec
js
cmps
test
(bad)
ss
push
imul
shl
mov
pop
std
ret
fild
dec
inc
adc
shl
sar
cmp
or
mov
icebp
push
test
jnp
jae
jecxz
(bad)
sub
xchg
(bad)
or
adc
pop
dec
xchg
in
lahf
jne
push
std
jmp
lock
jl
add
add
imul
mov
lods
or
dec
pop
imul
or
pop
rcl
fucom
ret
rol
inc
mov
adc
mov
lock
sub
mov
loope
in
inc
add
not
pop
mov
cdq
xlat
shr
xlat
mov
cmc
popa
or
or
jb
imul
lock
xchg
push
cdq
imul
mov
and
mov
or
xor
cmc
mov
enter
jge
xor
rol
out
xchg
jecxz
es
push
(bad)
dec
(bad)
aam
mov
jle
in
jbe
xchg
loopne
mov
shl
adc
xlat
cmp
enter
mov
and
popa
das
cmp
and
xor
pushf
inc
gs
daa
dec
dec
add
xchg
push
dec
stc
cmc
sbb
icebp
pushf
aad
push
and
enter
dec
mov
xchg
sub
enter
outs
push
rcl
pop
loop
test
mov
add
fldenv
retf
dec
aas
jno
inc
xchg
adc
sub
mov
mov
jge
cmps
aam
fistp
dec
xchg
mov
jb
cmp
add
add
xchg
dec
inc
retf
(bad)
add
or
adc
mov
xor
dec
pop
pop
sbb
pop
fwait
mov
mov
div
aaa
push
jmp
xchg
mov
aas
sbb
sbb
push
lahf
pop
in
mov
in
ret
pop
sub
out
jae
mov
sbb
cmp
jg
shl
xchg
mov
ret
inc
cli
ss
ins
(bad)
jle
xor
outs
xchg
push
repnz
fcmovnbe
lods
(bad)
pop
call
cmp
sbb
xchg
les
out
push
cmps
ficom
sbb
mov
jb
rol
stc
sar
jmp
cwde
ret
inc
out
mov
fcom
jecxz
out
pushf
test
and
(bad)
aam
addr16
ins
loopne
retf
add
popa
popf
lds
fidivr
xchg
test
or
sub
je
dec
xchg
inc
ret
(bad)
movs
sti
(bad)
jno
dec
inc
jb
jle
jle
adc
in
cmp
and
mov
fdivr
shl
sbb
cdq
jp
loop
inc
int
ds
loopne
xchg
es
push
dec
cld
pop
sub
(bad)
cmp
call
dec
cmp
outs
mov
cdq
push
jle
pop
imul
pop
fistp
xor
shr
popa
call
jae
cld
inc
sub
mov
push
adc
in
pop
or
jp
cmp
sbb
pop
(bad)
adc
jo
sub
sub
mov
push
ror
dec
jne
and
mov
jb
mov
and
sbb
inc
outs
and
or
adc
je
(bad)
dec
bound
in
cmp
jge
mov
mov
cmp
fcomp
inc
rcl
push
mov
stos
test
loope
stos
int
movs
das
loope
add
adc
js
cmp
or
pcmpeqb
in
jb
(bad)
mov
dec
mov
add
les
mov
enter
movs
add
and
inc
mov
and
leave
ja
pop
lea
sub
fs
adc
loopne
mov
dec
xor
jp
jb
dec
adc
mov
cmps
and
fld
lock
add
dec
mov
loope
jbe
lea
dec
inc
pushf
sub
sbb
dec
or
pop
retf
movs
jge
inc
lds
js
(bad)
sbb
retf
xor
sub
pop
xchg
push
adc
mov
mov
adc
data16
inc
pop
cwde
mov
rcl
outs
or
mov
push
data16
fs
(bad)
aad
(bad)
fbstp
sub
jmp
jbe
les
add
pusha
je
push
mov
std
jbe
jmp
aam
mov
adc
cld
jae
xor
jle
pextrw
aas
sub
imul
xchg
popf
adc
ins
xlat
mov
pop
inc
add
lods
push
jmp
inc
mov
mov
test
sub
push
sub
dec
imul
and
add
and
jg
push
sar
stos
fcomp
and
inc
cs
into
fcomp
dec
mov
mov
daa
inc
sbb
add
int3
pop
or
stos
repz
scas
dec
pop
scas
ror
inc
xor
sti
mov
popa
dec
cs
fld
dec
xchg
call
jecxz
cdq
test
cld
xlat
jb
retf
and
jp
pop
out
and
and
cmp
leave
(bad)
jge
cs
aad
inc
aas
in
pop
or
out
hlt
in
scas
cmp
inc
(bad)
(bad)
sbb
and
jge
gs
inc
sbb
jl
sbb
pop
xor
fcom
fwait
sbb
ret
mov
leave
adc
js
jo
out
pop
push
loop
push
sub
call
cli
mov
(bad)
mov
lods
stos
sahf
shl
mov
mov
call
inc
pop
push
(bad)
mov
ror
xor
nop
out
inc
mov
or
pop
xor
dec
cs
mov
mov
adc
scas
outs
clc
cmp
sub
mov
pop
daa
inc
mov
mov
adc
push
data16
(bad)
xlat
pop
out
fdivp
fcomp
int
ret
addr16
xor
out
(bad)
push
cdq
inc
pop
into
push
les
pop
push
and
mov
(bad)
js
mov
call
push
push
aaa
adc
cld
or
or
or
fild
jp
jecxz
lea
adc
cli
mov
mov
(bad)
xlat
mov
jno
xchg
sti
aam
int3
dec
mov
daa
psllq
aam
jmp
inc
hlt
icebp
cmps
pop
jecxz
inc
sbb
and
sbb
movs
dec
(bad)
std
jecxz
int3
xor
and
test
sbb
or
push
mov
ret
div
test
cmp
xchg
mov
xchg
adc
jp
mov
mov
imul
mov
fst
lds
retf
jge
inc
test
jno
mov
out
dec
shl
dec
int
cld
cmp
iret
pop
lods
mov
lods
jl
jne
xor
rol
xor
(bad)
cdq
int3
dec
jecxz
xchg
push
pop
imul
xor
ss
retf
out
fcomp
movs
pushf
xchg
mov
inc
jg
les
mov
sbb
rcl
cld
pop
push
jl
rcl
enter
fdivr
jg
sti
out
nop
in
mov
adc
pop
bound
(bad)
imul
pop
and
xchg
inc
fild
cli
dec
sub
pop
jp
sbb
xchg
(bad)
adc
or
mov
sbb
test
adc
push
dec
jl
repz
or
mov
inc
mov
ret
xor
mov
inc
outs
add
in
push
adc
or
push
movs
ficomp
pop
mov
pop
jmp
leave
fwait
jnp
mov
dec
cmp
sub
cmp
jne
pusha
xchg
mov
aaa
dec
pop
pop
retf
std
pop
sub
ret
(bad)
out
jnp
mov
pop
stc
xor
mov
inc
adc
ins
add
xchg
jmp
xchg
mov
cmp
and
cmp
ins
add
(bad)
enter
fisttp
pop
popf
sar
pop
daa
dec
adc
daa
xor
mov
adc
push
inc
test
test
xchg
loopne
push
fcomp
and
in
jne
cld
xchg
cmc
retf
jo
ins
cli
mov
mul
arpl
push
push
jne
sbb
cs
lods
repz
dec
sti
cmp
cmp
hlt
xchg
inc
data16
cmp
addr16
push
mov
or
rcl
(bad)
(bad)
push
sysexit
pusha
cmc
push
pusha
push
push
sbb
daa
lods
call
mov
xchg
mov
(bad)
xor
cmp
test
lea
pop
ja
dec
fstp
test
arpl
fwait
cmp
js
popa
and
adc
pop
fwait
ror
fiadd
add
ret
mov
jp
and
das
jge
dec
xchg
pop
sar
mov
dec
dec
inc
lods
adc
jg
mov
sbb
inc
mov
adc
jb
xchg
push
icebp
pop
les
xor
pop
aas
push
inc
push
ret
push
js
mov
mov
sbb
std
jl
(bad)
into
bound
scas
fdiv
jo
cmps
sar
repnz
dec
out
in
xchg
add
or
or
fwait
lds
jnp
dec
into
inc
rcl
ins
xor
adc
dec
clc
fisttp
fmul
dec
stos
xor
stc
scas
push
mov
icebp
inc
jp
cmp
xchg
push
jmp
add
fcomp
cmp
jae
cmc
call
(bad)
lahf
jmp
hlt
jecxz
fwait
cmps
jns
cmp
ins
lock
sub
mov
(bad)
pop
es
mov
(bad)
rol
jmp
mov
push
(bad)
push
les
pop
call
push
mov
loop
cmc
and
lock
push
imul
jnp
sahf
ins
aaa
adc
mov
call
or
push
push
test
mov
lds
pop
push
sahf
sbb
ins
or
sub
xor
(bad)
(bad)
nop
scas
loopne
sahf
pop
repz
je
inc
dec
stos
push
jmp
cwde
fwait
pop
ficomp
lock
or
(bad)
fwait
sub
aam
das
or
test
inc
push
(bad)
jg
push
lahf
push
sbb
(bad)
(bad)
(bad)
outs
mov
sbb
outs
dec
into
lods
jle
out
pop
imul
push
jmp
inc
jp
pop
fsubr
or
test
cmps
xor
retf
aam
xor
cmp
lahf
and
mov
(bad)
mov
mov
jmp
or
adc
sub
fistp
or
cmp
adc
fistp
lods
push
outs
mov
sub
push
cmps
inc
push
xchg
data16
cli
es
lock
mov
mov
mov
loopne
and
sbb
xchg
mov
sbb
mov
push
in
push
dec
xchg
pop
ja
push
xor
or
and
xor
ja
aam
jle
ret
or
dec
jmp
pop
mov
jmp
mov
adc
xchg
sahf
push
shl
mov
imul
and
adc
adc
call
clc
test
jno
ss
or
adc
cmc
xchg
ins
mov
mov
addr16
lea
inc
jmp
leave
std
xor
nop
shl
ror
out
fsubr
das
stc
pop
inc
cli
sub
jp
xor
outs
hlt
clc
push
pushf
lds
xchg
and
mov
jle
sub
imul
out
mov
in
lods
dec
iret
adc
(bad)
xchg
and
(bad)
ret
mov
and
mov
mov
adc
iret
cmps
imul
mov
cmp
into
inc
test
jp
jae
pushf
add
and
aas
sub
push
aad
jecxz
das
es
lahf
or
add
jle
xchg
outs
pop
sahf
out
or
dec
push
add
outs
jg
and
es
xor
xchg
inc
movs
ret
retf
inc
cwde
pop
add
js
test
pop
sbb
jmp
mov
add
sbb
mov
std
mov
iret
jg
inc
pop
in
dec
jae
xlat
lds
adc
into
test
rcr
cmp
inc
and
loope
xchg
shr
cmp
bound
sbb
pop
out
sar
rol
daa
loopne
add
daa
cs
push
(bad)
dec
cmp
and
movs
push
or
push
sar
int
not
aam
test
cmp
rcl
or
and
pushf
mov
fcom
dec
imul
imul
enter
into
sub
shl
jmp
sar
cmp
repnz
and
gs
leave
aaa
add
xchg
stos
dec
or
pop
xchg
sbb
dec
add
jp
mov
outs
jl
(bad)
loope
jmp
cwde
ficomp
mov
out
mov
push
pop
cmp
ja
mov
jno
mov
(bad)
(bad)
jno
or
inc
nop
xor
inc
dec
mov
push
loop
in
pop
(bad)
inc
bound
pusha
inc
pushf
mov
mov
inc
clc
dec
test
push
js
loopne
and
xchg
int3
test
adc
mul
mov
xchg
dec
pop
mov
push
xor
daa
loope
popf
pop
sub
aaa
mov
sbb
inc
sub
add
movs
and
add
clc
iret
repz
cmp
jb
dec
in
jnp
pop
stos
push
mov
jns
sub
cmp
lods
ins
lahf
or
push
jne
fs
pushf
sub
mov
mov
push
out
xchg
xor
ins
js
jne
lahf
mov
clc
pushw
mov
mov
push
xor
mov
and
out
cld
out
fstp
and
ins
dec
xor
add
fcom
mov
sbb
lea
cmp
jge
jo
push
mov
push
mov
ffreep
movs
xor
les
ret
call
or
push
or
cli
inc
mov
inc
movs
push
adc
dec
mov
hlt
das
shl
mov
ret
mov
out
les
or
mov
or
cmps
imul
xchg
clc
push
xor
stos
mov
retf
inc
(bad)
adc
mov
ror
inc
xchg
cmps
and
(bad)
lea
add
popf
ret
and
mov
cdq
xchg
test
fsub
jo
repnz
mov
dec
jo
daa
xor
cmp
clc
xchg
cmp
clc
cwde
enter
je
push
add
cmps
gs
sub
(bad)
and
jno
pop
bound
iret
dec
retf
mov
(bad)
pop
xchg
or
int
out
cmc
sbb
pop
mov
loope
sub
test
jae
ret
int3
call
arpl
dec
cmp
cmp
ja
push
(bad)
rol
lds
jo
repnz
pusha
lods
xor
addr16
pop
cmp
mov
aas
mov
jg
jecxz
jbe
inc
sub
mov
inc
jns
aas
shl
lods
add
(bad)
mov
imul
adc
les
cwde
add
sub
mov
mov
rcr
mov
xchg
enter
sub
cmp
push
pop
fwait
mov
stc
and
mov
test
mov
pop
shl
jl
ja
xchg
stos
mov
loopne
jns
test
xlat
sbb
fsubr
dec
push
in
ret
shl
mov
sbb
mov
pop
push
test
test
mov
or
pop
(bad)
(bad)
fcom
inc
lods
or
push
push
dec
cwde
adc
xor
mov
lahf
dec
jmp
mov
scas
mov
je
jl
sar
out
jnp
(bad)
push
movs
fidivr
cmp
xchg
(bad)
mov
les
mov
(bad)
out
pop
pusha
nop
sub
je
stos
in
jle
pop
sub
add
mov
mov
sub
jle
and
xor
push
cmp
mov
test
mov
jae
cmp
test
stos
or
aad
pop
pop
(bad)
jp
jl
mov
mov
mov
jb
push
or
push
sub
cwde
dec
popf
mov
test
and
mov
lock
or
stos
jmp
adc
mov
cmc
das
jns
mov
sub
sub
leave
out
sbb
cmps
enter
loopne
add
and
(bad)
and
xor
bnd
xor
sub
xlat
ins
lods
sub
in
dec
test
stos
popa
scas
and
pop
stos
jnp
loop
jno
sahf
clc
arpl
mul
outs
push
(bad)
jae
adc
dec
adc
xchg
pop
retf
data16
pop
dec
ss
clc
push
cwde
jnp
cdq
int3
adc
shl
rcr
and
(bad)
xchg
mov
cmps
sub
rol
inc
cmc
ret
cs
dec
jp
lock
int
fiadd
mov
xor
jnp
mov
inc
call
and
push
cli
inc
iret
ror
das
shr
inc
fld
pusha
push
inc
mov
les
push
push
lock
movs
mov
push
lock
test
sub
iret
in
sub
mov
mov
jl
fwait
mov
stc
movs
xor
mov
sbb
loope
loope
(bad)
gs
xchg
xor
setb
jbe
push
aas
or
(bad)
daa
or
adc
sub
push
xor
std
inc
and
cmp
int3
and
inc
push
scas
scas
repnz
jg
lea
push
push
clc
sub
inc
lock
add
dec
inc
in
and
fucomp
jmp
rcr
cmp
mov
enter
mov
add
shl
push
inc
mov
out
mov
cmps
jecxz
(bad)
pop
imul
js
xchg
xor
stc
lahf
cmc
ins
or
sbb
mov
scas
lds
loop
jno
fldenv
nop
inc
mov
cmps
hlt
(bad)
repnz
jae
add
call
mov
icebp
jne
sub
sbb
xor
scas
call
mov
cmp
xor
cld
and
and
jle
push
jb
pop
cmp
aas
push
dec
(bad)
push
xor
inc
jns
pop
call
shr
pop
test
jmp
movs
cwde
sub
add
and
jle
ficomp
cld
mov
pop
fstp
xchg
mov
lahf
adc
imul
add
inc
adc
stos
test
inc
dec
cmp
adc
push
enter
inc
sub
cmp
sar
movs
pop
xor
cmp
aaa
adc
cmp
dec
mov
mov
shl
or
ret
sub
and
(bad)
out
popa
mov
and
test
jb
test
pop
fucomi
add
add
add
jle
xchg
repz
add
lea
jno
inc
pop
cmp
adc
mov
push
addr16
push
(bad)
je
add
mov
aaa
xchg
xchg
cmp
aaa
cli
adc
dec
pusha
push
imul
inc
xchg
lods
xlat
mov
js
iret
imul
int3
xchg
bnd
mov
inc
or
fmul
pop
mov
out
pop
xchg
sub
scas
dec
mov
inc
test
push
xchg
mov
push
and
push
jl
mov
mov
rcl
cmp
icebp
and
jp
(bad)
and
popa
rol
es
or
outs
inc
fcomp
lods
ret
out
cmp
adc
ss
setno
cmp
push
mov
sahf
jo
and
dec
and
mov
pop
aam
dec
push
aas
mov
jge
pop
push
movs
ficom
daa
in
jp
pop
mov
jae
or
push
or
jne
inc
pushf
ins
mov
jg
test
adc
sbb
cmp
loopne
repz
imul
mov
loop
shl
(bad)
xchg
enter
jmp
test
mov
stos
daa
or
and
jmp
in
je
loop
mov
stc
pop
jnp
addr16
push
xchg
das
out
mov
retf
fwait
pop
sahf
dec
mov
fcomp
fdivr
cmc
retf
and
sbb
dec
inc
cdq
test
das
stos
(bad)
xlat
xchg
xchg
aad
arpl
retf
cli
stos
mov
test
xchg
(bad)
xchg
lock
mov
into
mov
out
mov
pop
cmp
jl
call
addr16
lahf
ins
cmp
ja
pop
call
push
sub
ins
stos
xchg
bound
fist
fisttp
aaa
sbb
inc
mov
push
outs
out
movs
xchg
pop
mov
mov
test
out
cld
repz
push
outs
sub
int
push
pop
out
mov
jnp
sbb
(bad)
mov
sbb
xlat
push
test
std
outs
mov
push
adc
(bad)
mov
jno
ss
loop
and
aad
cmps
jmp
mov
xchg
stc
call
mov
and
cmp
call
vmovdqu
xor
pop
push
push
cmp
enter
std
ins
push
in
outs
fild
lock
rol
adc
out
lods
jne
inc
jecxz
inc
xchg
sub
in
mov
mov
or
nop
in
mov
jo
js
pop
cli
xor
jae
mov
dec
push
xchg
icebp
stc
xchg
xor
xor
jbe
lock
movs
and
mov
aam
xchg
aam
jp
aam
xchg
out
cld
sbb
and
jne
test
jns
dec
jmp
fild
inc
push
call
sbb
mov
and
add
and
mov
fistp
inc
inc
ins
inc
and
data16
inc
dec
outs
sar
and
inc
shr
inc
scas
jg
xchg
out
mov
sar
dec
push
(bad)
add
call
test
adc
lock
(bad)
movs
push
cmp
scas
pop
mov
pushf
inc
cmp
fs
pop
cmp
mov
setge
arpl
sub
jns
aam
pop
mov
mov
loope
sub
mov
sbb
push
js
dec
add
mov
ret
inc
ret
adc
push
sti
pop
les
retf
dec
rcl
mov
pop
pop
sub
rcr
jnp
inc
lods
lock
fucomi
xor
scas
add
ja
adc
daa
sbb
inc
mov
mov
inc
pop
xchg
mov
repz
sbb
pop
xchg
push
mov
stos
xor
push
inc
(bad)
mov
rcr
adc
pop
jb
nop
outs
sbb
and
mov
sahf
test
push
cmp
rol
and
jno
cmc
icebp
jge
retf
and
mov
adc
inc
add
cmps
arpl
inc
arpl
inc
mov
xchg
pop
cld
inc
rcl
movs
addr16
jle
adc
cs
mov
mov
stos
cmps
pushf
cld
ds
and
push
mov
popf
enter
inc
pop
sub
in
sahf
clc
adc
ss
retf
test
aad
push
ret
ret
loope
dec
sbb
jno
jno
imul
dec
ret
lds
add
test
cld
or
xchg
add
(bad)
mov
inc
pop
push
fwait
or
inc
inc
pop
stos
stos
ins
lods
rol
and
aaa
ins
mov
(bad)
lods
and
push
test
adc
mov
mov
mov
and
jp
pop
mov
sub
hlt
push
out
fstp
xor
pop
mov
sbb
sub
ret
sub
es
push
hlt
cwde
pop
into
loope
enter
adc
iret
push
cmovno
inc
push
inc
in
pop
movs
jg
fucomi
rcr
inc
mov
push
int
push
xor
loop
and
xor
in
sub
std
rcr
or
dec
push
jg
or
add
mov
xchg
(bad)
arpl
clc
jecxz
out
jmp
adc
lea
(bad)
pop
jae
and
das
(bad)
loopne
and
aad
xor
test
ds
stos
cmp
fcmovu
mov
pusha
sbb
cmps
or
imul
sar
or
mov
mov
repnz
fsubr
and
aaa
push
and
pop
hlt
xor
lds
mov
pop
inc
xor
inc
xchg
jmp
std
adc
jb
and
mov
int
add
adc
xchg
adc
mov
in
imul
pop
inc
jno
cmp
mov
fisub
push
xor
xor
cld
cmps
in
ret
retf
sub
and
inc
sbb
dec
test
pushf
push
pop
retf
sbb
mov
ror
loope
xor
pop
(bad)
or
pop
outs
rol
mov
outs
mov
adc
dec
sbb
addr16
(bad)
arpl
lock
and
xabort
in
jl
shl
sti
pop
xchg
lds
jns
(bad)
loope
sahf
arpl
jmp
or
pusha
xchg
fsubr
aam
jbe
mov
sub
xor
les
aaa
cmps
push
loopne
dec
or
or
xchg
add
adc
mov
cmps
xor
push
daa
loop
add
enter
aaa
xchg
jae
cmp
inc
shr
ficomp
in
cmp
ja
jns
xchg
sbb
dec
outs
mov
xor
xor
jl
add
jno
jno
repz
mov
sar
es
shr
xchg
and
cmps
dec
(bad)
(bad)
sysexit
cmp
jmp
fwait
cmp
add
test
push
mov
cmp
xchg
lea
scas
mov
xor
das
das
push
jp
(bad)
ret
dec
or
in
sub
mov
movs
enter
mov
push
pop
ins
std
cmp
or
hlt
(bad)
fwait
rol
pusha
push
pusha
or
adc
leave
sub
test
inc
adc
(bad)
(bad)
mov
movs
and
mov
pop
pop
jg
dec
int3
dec
mov
push
aam
mov
xor
ins
hlt
xchg
sahf
pop
test
in
xor
mov
aad
or
jns
adc
jg
mov
sub
fcomp
jecxz
pop
mov
push
xor
add
dec
stos
pop
adc
scas
or
sbb
jae
xchg
sub
sti
dec
leave
mov
call
shl
nop
idiv
lock
ret
push
jge
rol
mov
arpl
push
and
and
ins
iret
popa
xchg
inc
lock
popf
adc
xor
cmp
in
out
arpl
movs
inc
sbb
mov
mov
(bad)
mov
xchg
pop
push
ds
loope
mov
sbb
mov
js
mov
(bad)
xlat
fdivr
fst
in
bound
aad
push
jae
retf
jne
mul
pop
xor
int
or
in
fldl2e
mov
rol
outs
add
or
xchg
dec
repz
sar
cmps
loopne
lea
push
xchg
adc
xchg
jbe
in
stos
adc
fidiv
adc
push
cli
mov
push
mov
mov
in
mov
stos
fmulp
dec
out
fs
bound
xlat
xchg
mov
and
push
js
sbb
push
xchg
inc
pop
ins
pminsw
xor
push
in
and
repz
int3
xchg
fstp
jp
dec
inc
loopne
shl
fs
addr16
jo
daa
pop
(bad)
push
(bad)
push
jo
xor
enter
xchg
loop
sbb
dec
repz
jnp
mov
xchg
pop
adc
loopne
test
aam
dec
pushf
mov
inc
mov
clc
jno
sbb
pop
sub
out
xchg
xor
mov
in
sbb
lods
inc
mov
outs
aam
push
mov
stos
push
dec
aam
imul
pushf
scas
jns
or
and
ret
jae
xchg
inc
pusha
enter
mov
daa
cmp
push
je
and
xor
dec
daa
or
and
mov
inc
jmp
mov
inc
mov
out
push
lahf
fisubr
xchg
je
sbb
ror
movs
(bad)
fmul
jle
xor
jae
xchg
(bad)
leave
push
pop
dec
inc
lea
xor
bound
test
and
scas
xchg
call
mov
cwde
mov
imul
sub
aam
mov
(bad)
aad
jge
leave
div
pop
push
daa
cmp
(bad)
arpl
jecxz
repnz
dec
cmps
aad
test
(bad)
and
dec
daa
jns
push
push
aad
dec
sub
add
and
pop
int
jecxz
out
and
pop
inc
fisub
mov
sub
xchg
ret
jle
in
jns
add
add
mov
add
ret
mov
cld
push
adc
dec
pop
mov
mov
sbb
cmc
in
cmp
out
pop
adc
jmp
xor
or
std
lds
imul
jbe
cwde
enter
ja
and
add
shr
push
(bad)
test
cmp
sub
adc
dec
xchg
add
pusha
xchg
jno
test
test
adc
test
les
shr
add
mov
out
xchg
jae
and
xor
out
cmps
sub
xchg
adc
xor
mov
or
outs
xlat
push
or
jge
test
ins
dec
cli
cmp
cs
jmp
dec
mov
push
loope
test
int3
or
aad
fdivr
dec
ds
and
mov
mov
dec
dec
out
sbb
dec
mov
push
and
ins
sub
dec
aam
xor
add
pop
outs
or
mov
ins
or
call
xchg
jo
in
cmps
les
imul
sbb
add
ss
cmps
and
add
pop
nop
or
sbb
mov
imul
push
add
cmp
popf
leave
(bad)
sbb
sub
(bad)
movs
adc
ins
stos
cwde
mov
(bad)
cmp
gs
(bad)
and
ret
test
inc
pop
cwde
cmp
push
sbb
fisttp
test
lock
fmul
push
cmp
mov
adc
ds
jbe
mov
jp
mov
imul
lfs
mov
jl
dec
or
jl
cmps
clc
jb
mov
jo
pop
pop
dec
sbb
fsub
or
loopne
mov
mov
nop
mov
xlat
sahf
call
push
loop
push
rcl
out
out
mov
mov
js
int3
sub
movs
imul
mov
call
inc
(bad)
int
out
hlt
arpl
stc
pop
out
cmp
pushf
(bad)
sub
pop
jge
cmp
xchg
dec
in
adc
dec
mov
mov
mov
sub
mov
lds
out
inc
loope
fwait
inc
test
call
jmp
mov
push
mov
cmps
inc
fsubr
jae
dec
sti
scas
stc
sub
or
shl
dec
jae
movs
xchg
pushf
dec
and
xor
cdq
mov
aas
jns
hlt
mov
cli
aad
sahf
sub
mov
pop
pop
(bad)
call
(bad)
dec
inc
mov
pop
jg
int
sub
inc
push
mov
out
mov
test
into
call
int3
sub
outs
xchg
mov
arpl
imul
out
add
push
xchg
test
sub
cmp
inc
in
cld
retf
cmp
or
cmp
sahf
sub
mov
aas
ficom
dec
xchg
test
push
pop
adc
cli
stos
inc
and
mov
lods
imul
dec
or
jg
lds
sbb
stc
fcmovb
or
or
nop
jl
add
pop
fistp
fs
lods
js
ins
std
adc
call
push
retf
scas
ds
and
pop
mov
push
xor
loop
sub
cmp
sub
ins
cld
add
fcom
dec
lock
xchg
xor
sti
test
clc
xlat
cmps
sub
jo
mov
or
loope
xor
fld
fcomp
ret
jno
push
dec
lods
out
lea
movs
lds
mov
into
les
rcl
cwde
(bad)
jne
pop
div
dec
mov
sbb
out
add
hlt
jge
wrmsr
push
call
xchg
loope
hlt
mov
out
push
in
dec
lods
sbb
xchg
movs
mov
hlt
test
inc
addr16
outs
dec
iret
or
xchg
and
xchg
or
repz
push
and
cmp
aas
or
cmc
pushf
into
js
mov
(bad)
pop
jge
dec
or
in
dec
lds
addr16
sbb
cmps
pcmpgtw
out
push
repnz
xchg
adc
rol
mov
fistp
retf
dec
ins
mov
ins
je
mov
shl
push
cmp
(bad)
lea
jp
mov
cwde
push
pop
test
sub
js
lods
scas
fidiv
repz
rol
mov
push
lods
aas
cmps
call
or
or
push
clc
inc
and
push
vmread
fidiv
jmp
into
mov
gs
dec
pop
cs
je
sti
nop
cwde
jge
sbb
jp
movs
pop
aad
sar
cld
aam
xchg
dec
adc
ror
popa
jl
movs
lea
test
sub
or
inc
dec
lods
adc
pusha
in
inc
and
add
fmul
jmp
stos
mov
xchg
pmuludq
jmp
add
mov
xchg
ret
inc
nop
rcl
add
dec
push
mov
inc
cmp
es
xchg
ja
fistp
inc
inc
jbe
aas
cld
lock
xor
int3
fidiv
cmp
push
mov
imul
sub
outs
xchg
ja
adc
bound
call
xor
xor
arpl
and
fcomp
mov
jo
iret
(bad)
jb
and
retf
mov
and
into
js
out
fdivr
cwde
lock
aad
jnp
movs
add
mov
mov
mov
dec
pop
je
retf
outs
inc
arpl
fcom
push
dec
mov
xor
cmps
ds
mov
sbb
and
fs
iret
and
punpckldq
out
fwait
repz
pusha
lds
xchg
xchg
adc
mov
xchg
push
les
mov
pushf
jnp
jge
add
(bad)
push
(bad)
push
sub
mov
and
pusha
and
and
cdq
not
and
or
icebp
fucomp
fisub
addr16
rcl
fadd
pop
or
fdiv
ins
cmp
mov
sub
pop
mov
adc
push
(bad)
mov
xchg
cmp
xor
xor
dec
jp
pop
xchg
push
lods
sbb
lahf
push
push
pushf
jecxz
in
jmp
xor
pop
xor
jg
test
ficomp
or
hlt
jnp
xor
push
xor
clc
out
icebp
movs
jge
mov
dec
addr16
add
mov
mov
out
mov
movs
test
movs
shl
(bad)
and
jmp
push
lock
aaa
mov
push
cmp
imul
call
scas
out
mov
bound
in
mov
les
jns
div
push
push
jp
aam
nop
scas
jge
enter
test
adc
in
dec
or
mov
sub
not
jp
je
xor
mov
aam
xchg
dec
clc
inc
leave
das
outs
mov
cwde
aas
shr
and
inc
ins
test
inc
sbb
lahf
or
ja
sbb
pop
cmc
ror
add
pop
fmul
cmp
clc
fs
dec
es
pop
sub
dec
repnz
stc
enter
sbb
push
dec
sbb
clc
stos
leave
and
aaa
lea
or
mov
jmp
fcomp
mov
cmp
sti
popa
jl
jecxz
es
fadd
cmp
data16
test
fwait
mov
add
pop
sbb
pop
(bad)
push
imul
sub
jae
(bad)
les
push
popa
ins
aad
pop
ficomp
mov
shl
jecxz
retf
dec
xor
inc
push
or
push
sub
mov
bound
mov
mov
mov
(bad)
mov
dec
jmp
ret
(bad)
pop
sub
mov
cld
les
fidiv
and
jl
add
and
pop
std
sub
sub
popa
mov
loope
jmp
sbb
retf
sbb
outs
push
mov
ins
mov
ja
xchg
imul
cmps
cmp
pop
xchg
add
mov
cli
aam
jg
pop
test
test
mov
mov
or
lods
inc
xchg
and
jb
int3
cmc
idiv
in
mov
leave
repnz
xchg
shl
cmps
jno
ret
call
addr16
adc
jg
or
mov
fld
or
daa
sub
push
ds
pushf
shr
sub
cmps
cld
stos
push
in
sub
popa
jmp
push
push
sbb
out
repz
out
sbb
mov
jne
lea
ins
pop
jg
ins
sar
fldcw
sbb
dec
gs
movs
iret
retf
mov
pop
es
xchg
pop
mov
or
and
popa
xlat
call
dec
inc
sbb
je
inc
jmp
inc
dec
jae
push
pop
leave
cli
push
stc
ret
jecxz
ror
scas
leave
leave
mov
dec
fisttp
nop
lds
outs
cdq
ins
jae
and
popa
pop
inc
push
mov
stos
bound
call
push
xor
xchg
out
fbld
sub
test
pop
retf
mov
cmp
inc
dec
sbb
into
lds
jmp
movs
cwde
or
mov
push
lods
cld
mov
sub
sub
sbb
ds
inc
ins
jl
and
shl
xor
mov
cmp
pop
in
repz
shl
outs
sub
(bad)
ja
pop
xor
daa
dec
aas
aaa
pop
mov
mov
sti
sbb
jnp
ret
push
pop
cmp
iret
outs
neg
retf
ins
dec
pushf
imul
or
xor
enter
jnp
pusha
mov
(bad)
xlat
pushf
or
outs
pop
xor
push
jge
pop
and
sub
mov
dec
add
inc
push
in
rol
inc
cmp
or
pop
push
mov
xchg
jge
xchg
and
xor
js
and
stos
dec
sbb
fidivr
xchg
fldenv
js
push
jno
inc
mov
pushf
xor
pop
lods
xor
adc
dec
lahf
ret
sbb
jl
daa
or
jnp
rcl
loope
add
xchg
mov
xchg
mov
xor
cmc
mov
adc
addr16
sub
test
xor
push
xlat
jge
outs
fcom
or
dec
or
pop
push
sbb
jns
sbb
outs
imul
retf
fcomp
xor
jae
repz
test
inc
jmp
lods
cld
shr
mov
in
mov
fidivr
dec
aaa
jmp
add
test
sbb
out
rcr
pushf
inc
cmp
inc
mov
loop
sbb
add
test
or
(bad)
repz
pand
rcl
and
dec
jl
or
and
sbb
jns
rol
stos
inc
or
enter
shl
xor
pop
xor
out
inc
cwde
push
sahf
xlat
add
jge
mov
pop
out
push
rcl
rol
aad
push
(bad)
nop
outs
ret
xor
push
lahf
mov
icebp
xchg
or
inc
scas
in
clc
pop
aad
pop
(bad)
ret
cdq
dec
cld
xor
pop
fsubr
loop
lds
push
(bad)
cmp
sahf
pop
add
push
inc
inc
push
jmp
imul
add
xor
sub
(bad)
out
sub
scas
xor
jmp
icebp
fcmovb
jo
jae
(bad)
out
sub
push
jne
inc
inc
mov
scas
in
sbb
push
sahf
test
cmp
add
mov
sub
fisubr
popf
movs
paddq
mov
mov
and
adc
pushf
scas
mov
add
fwait
push
xor
xlat
jge
ja
inc
cmp
ret
stos
aad
cmp
adc
(bad)
pop
in
xor
arpl
pushf
jmp
or
push
dec
sub
inc
mov
cli
test
repnz
and
dec
push
sar
sbb
inc
sbb
je
pop
cmp
sub
and
adc
mov
dec
push
rcr
jl
xchg
mov
in
call
rol
add
bound
push
js
sbb
ja
push
adc
jbe
jmp
out
outs
xchg
cmp
mov
inc
dec
mov
dec
sar
js
cmp
jle
xchg
out
test
pop
jle
dec
rol
pop
mov
xchg
mov
jnp
inc
dec
inc
fisubr
sbb
pop
push
js
jns
and
mov
mov
sbb
dec
xchg
mov
test
add
call
adc
popf
mov
es
adc
push
xor
popa
popf
shl
sub
ficom
push
jp
jne
jge
out
mov
xchg
sbb
add
sbb
loopne
mov
scas
mov
cmp
daa
in
push
sub
call
scas
dec
mov
leave
fwait
mov
push
ds
or
cdq
cdq
pop
xchg
add
push
dec
xor
mov
sbb
pop
or
dec
(bad)
xor
mov
push
sub
rcr
fisub
sbb
sbb
test
lea
push
aad
dec
loopne
add
push
test
out
out
addr16
pop
addr16
inc
les
dec
ja
aam
scas
imul
cwde
lods
pop
lods
retf
test
jo
ror
in
xor
xlat
jecxz
out
daa
push
cmovg
das
jmp
mov
pop
int
neg
sub
cld
mov
shr
in
aad
jae
(bad)
mov
(bad)
ds
mov
in
in
jb
leave
mov
lods
(bad)
into
push
mov
jmp
sub
xchg
mov
into
add
mov
popf
pusha
fcmovbe
and
mov
movs
sahf
push
xor
xor
jo
inc
sti
lds
jmp
mov
retf
gs
push
out
mov
stos
dec
push
and
or
xchg
adc
push
push
shr
fwait
test
loope
push
mov
es
add
fsubr
lea
add
push
arpl
movs
shl
pop
pop
mov
or
fcmovnu
fldln2
pop
or
inc
cmc
shr
adc
scas
out
cwde
push
push
arpl
jne
sar
push
lds
adc
pop
(bad)
clc
jne
repz
jle
mov
mov
(bad)
data16
mov
loope
push
pop
jns
and
cmp
push
ret
adc
jb
jge
in
idiv
pop
push
push
push
bound
loop
sub
jo
fiadd
je
popa
xor
jne
mov
fmul
adc
daa
and
aad
adc
cmp
iret
cli
enter
or
je
arpl
ficomp
pop
push
inc
and
adc
fimul
sub
jae
mov
mov
add
mov
jne
int
(bad)
lea
mov
xchg
or
ss
mov
jg
nop
outs
and
adc
mov
fwait
push
sbb
stos
mov
mov
dec
jnp
xor
inc
adc
dec
adc
ja
inc
adc
mov
repz
xchg
inc
(bad)
xchg
xchg
mov
or
ins
xlat
cmps
mov
inc
xchg
pop
mov
in
popf
jbe
cmp
and
mov
xor
cmp
xchg
pop
push
pop
(bad)
or
jg
pop
push
jmp
cmp
xchg
inc
sub
dec
sub
adc
cmc
inc
fidivr
leave
fisttp
leave
xor
dec
bound
cs
out
push
add
icebp
mov
sbb
cmp
xchg
out
dec
mov
inc
popf
jbe
sub
xlat
cmp
sbb
data16
xor
out
and
into
xchg
add
into
data16
push
cmp
sahf
iret
or
pop
mov
sub
pushf
ins
(bad)
hlt
pusha
lea
rol
jmp
cmp
sub
mov
jnp
mov
or
(bad)
ins
xor
lea
push
out
adc
shr
out
ja
xor
dec
cli
adc
cdq
sbb
push
sahf
mov
ss
call
adc
xor
sub
mov
xchg
jbe
(bad)
imul
pop
fisttp
es
std
movs
iret
mov
inc
daa
push
pop
jbe
imul
aaa
adc
icebp
retf
fst
repz
aaa
aaa
iret
lods
arpl
jb
rcr
into
or
test
mov
jl
inc
mov
mov
test
cmp
or
mov
aam
and
(bad)
rcl
sub
dec
sahf
xor
arpl
dec
jmp
or
adc
les
js
xchg
mov
pop
sbb
fsubr
mov
pop
call
test
fisub
out
out
fild
in
movs
push
aad
mov
xchg
int3
aad
in
fidiv
int
sub
mov
scas
mov
mov
dec
inc
cmp
pop
out
ror
movs
mov
outs
pop
cmp
xchg
pop
and
dec
fs
das
retf
dec
xor
pop
outs
aas
mov
lods
stos
test
sub
mov
shr
pop
ror
xor
in
outs
pop
js
pop
call
cmp
int3
xchg
in
addr16
or
inc
lahf
push
push
ja
lods
leave
test
mov
sub
imul
jnp
cmps
loop
mov
lock
pop
mov
lahf
sar
push
cmps
lea
idiv
cld
cmp
pop
inc
inc
sub
ds
xor
test
out
push
pop
into
jl
pop
and
xchg
push
clc
outs
gs
cmp
inc
jle
mov
aam
mov
lods
push
repz
or
das
mov
xchg
inc
pop
adc
mov
jmp
ret
jge
stos
push
ror
call
out
mov
push
mov
mov
xchg
movs
ret
add
fst
shr
je
hlt
jo
aas
xor
icebp
retf
jle
xor
mov
rcr
and
add
pop
and
add
mov
sti
sbb
nop
shl
stc
adc
cs
mov
(bad)
paddsb
and
fcom
and
sbb
push
sub
adc
add
pop
rcr
mov
and
std
fldenv
sbb
fsub
mov
push
xor
xor
jbe
xchg
pop
ins
rol
aad
jecxz
retf
cwde
or
push
out
jns
mov
inc
(bad)
jl
mov
sbb
mov
xchg
cmc
mov
xor
aaa
push
sub
or
push
std
mov
ret
(bad)
mov
pop
rcl
mov
mov
icebp
dec
rcr
movs
fcomp
or
mov
retf
into
xchg
push
ss
cli
add
fisubr
popf
add
div
xor
aaa
fidivr
outs
cmps
inc
mov
sbb
out
add
scas
inc
or
mov
cmp
mov
add
inc
inc
test
add
(bad)
out
fld
or
jo
call
data16
pop
retf
cmp
mov
mov
xchg
das
ins
dec
dec
mov
in
pop
(bad)
and
shr
or
imul
out
mov
and
dec
pop
jmp
test
jnp
fild
mov
pop
popf
xor
xor
cwde
sahf
out
les
xchg
xchg
and
(bad)
arpl
jb
cmp
in
pop
xchg
mov
jp
jae
or
adc
adc
jg
aaa
add
leave
out
sti
sbb
cmc
mov
mov
and
rcl
xchg
push
xor
repz
mov
loopne
xchg
outs
(bad)
sbb
push
arpl
or
ret
scas
xchg
mov
mov
pop
jnp
repz
(bad)
outs
push
push
repz
jno
shr
push
outs
mov
push
cmp
sub
scas
int3
or
adc
mov
shr
fsub
add
pushf
rcl
cmp
push
stos
xor
daa
adc
leave
stos
add
adc
push
add
add
and
pusha
xor
dec
movs
lods
mov
into
and
movs
sub
mov
mov
cmp
mov
stos
or
test
pushf
jnp
mov
xchg
jb
cmp
popf
cmc
adc
out
mov
cmps
fwait
mov
push
xlat
rcr
xor
cli
fimul
(bad)
(bad)
push
jbe
mov
xchg
mov
push
jne
dec
clc
push
jle
add
cld
adc
and
inc
shl
int
add
and
mov
icebp
xchg
sar
pop
ror
or
stos
es
cmc
(bad)
movs
mov
dec
jecxz
add
fcomp
pop
push
dec
loope
repz
or
dec
int3
mov
adc
idiv
sti
rol
imul
sub
test
leave
push
pop
mov
sbb
inc
cmp
xor
jbe
add
je
fnstsw
cli
xchg
cmp
lods
inc
xlat
sub
sbb
out
and
cmp
adc
out
test
fcmovb
xor
inc
test
jbe
inc
aad
stos
hlt
pushf
call
add
jmp
xor
ficom
ins
cld
loop
leave
push
ror
bound
inc
or
jp
fdecstp
sbb
jns
pop
in
xchg
mov
je
shl
rol
aam
(bad)
iret
inc
dec
dec
div
xor
pop
cmp
mov
fisubr
sub
sti
push
in
aam
inc
ins
add
dec
cmc
or
push
sar
and
je
add
sti
inc
push
aaa
adc
cmp
add
into
(bad)
mul
mov
sbb
imul
cmp
xchg
(bad)
call
daa
sbb
xchg
mov
(bad)
movs
aaa
popa
cmp
push
or
sbb
lea
int
jecxz
cmp
ret
dec
push
call
xchg
jbe
cwde
jb
inc
outs
fld
cli
mov
dec
fbstp
ret
lahf
rcl
jmp
rol
mov
je
and
arpl
jmp
mov
jbe
push
test
ret
jns
call
dec
jae
and
mov
enter
scas
popa
fiadd
xchg
or
xchg
lahf
hlt
xor
not
mov
jge
sub
in
cmp
fcmovnbe
(bad)
sub
inc
test
lahf
or
xchg
les
mov
push
inc
fistp
xchg
ins
jmp
test
mov
xor
in
bound
or
and
and
cld
lahf
test
es
lahf
adc
mov
sbb
inc
mov
and
(bad)
int3
jg
cmp
fisubr
jp
aaa
xchg
repnz
pop
mov
mov
lock
add
mov
outs
or
mov
jo
enter
mov
mov
js
movs
mov
mov
mov
xor
mov
and
sub
or
jbe
pop
push
into
(bad)
gs
fild
xor
dec
mov
dec
cmc
pop
ins
jp
cwde
jns
mov
add
loop
push
test
mov
in
loopne
loope
sub
adc
leave
xchg
push
(bad)
cmps
jo
jb
push
out
cmps
push
movs
gs
out
pusha
sub
pop
mov
call
mov
lods
mov
or
clc
stc
rcr
mov
les
mov
popa
inc
cmp
call
imul
pushf
lea
mov
adc
aad
int
clc
adc
dec
sar
push
int
xchg
cdq
je
adc
adc
mov
test
cwde
icebp
xchg
fnstcw
iret
and
jg
pause
push
xchg
dec
xchg
stos
mov
inc
pop
jmp
and
outs
ss
int
mov
sub
adc
inc
movs
gs
ja
sub
and
mov
push
push
mov
dec
push
xchg
mov
xchg
mov
not
cmp
fwait
cmp
jb
jno
or
or
ins
inc
(bad)
std
cld
popf
adc
in
push
adc
gs
int3
xor
pop
test
nop
shr
cmp
test
xchg
aad
js
pop
int
test
sbb
inc
adc
sbb
sub
jo
gs
retf
jnp
dec
test
(bad)
mov
dec
(bad)
mov
iret
in
das
xchg
repnz
pop
push
adc
xor
scas
fld
sahf
add
inc
jmp
cmp
loopne
mov
pushf
(bad)
loopne
jnp
or
inc
mov
xor
outs
xchg
ins
rcr
and
mov
mov
fadd
push
iret
popa
mov
or
push
or
shl
bound
sub
adc
in
and
push
push
jmp
cwde
mov
push
pusha
jg
push
repnz
addr16
sbb
and
stos
or
pushf
mov
push
es
jg
xchg
and
mov
imul
call
ficomp
mov
jo
icebp
push
adc
test
sbb
jp
adc
cwde
xchg
shl
int
out
sar
mov
xchg
iret
dec
xchg
cmp
inc
or
adc
imul
pop
pop
sub
pop
sub
sbb
out
cmps
into
arpl
outs
mov
ret
or
out
push
hlt
or
xchg
add
lods
neg
ret
dec
test
inc
je
mov
in
mov
inc
xchg
outs
mov
out
xor
xchg
icebp
mov
ret
jmp
les
inc
push
fst
aam
sub
add
fwait
add
out
dec
in
js
fwait
loopne
jns
sti
xor
mov
stos
xor
sbb
jmp
jecxz
mov
cmps
rcr
mov
push
sbb
inc
mov
lds
inc
jnp
or
push
out
or
xchg
dec
sub
xchg
xor
aaa
xor
mov
dec
sub
sti
xchg
stos
pop
cli
xor
dec
stos
push
cdq
arpl
movs
cs
into
ret
sub
push
repnz
out
ret
fwait
add
pop
movs
in
dec
cmp
jmp
std
test
pop
or
xchg
cmc
lea
into
shl
movs
mov
loopne
ds
cmps
mov
lahf
mov
ss
xor
int3
push
xor
lahf
popa
jnp
xor
mov
test
cwde
adc
add
sahf
lods
adc
fucomip
jp
stos
cmps
xor
(bad)
pop
outs
xor
sar
mov
lock
adc
sbb
mov
mov
sbb
xchg
push
jge
movs
int
cmps
dec
mov
sub
or
imul
jmp
add
push
xchg
mov
mov
mov
mov
ins
inc
dec
daa
out
in
mov
add
lds
sub
je
jge
cmp
pop
push
cmp
inc
and
or
out
sbb
out
cmp
inc
sub
sbb
xchg
pusha
add
dec
cmps
daa
fldcw
mov
ins
les
mov
stos
jne
or
mov
ds
mov
xor
int3
loop
sti
mov
aad
leave
mov
scas
lods
push
mov
push
adc
pop
xchg
fwait
fwait
popf
cwde
xchg
clc
add
fst
cmps
retf
test
sub
pop
mov
mov
ret
cmps
leave
or
jns
mov
mov
mov
sub
outs
push
pop
lock
outs
sub
fld
cmps
mov
xchg
std
enter
aas
sbb
ins
sub
mov
imul
pop
(bad)
push
mov
cld
aam
rcr
jmp
xor
repz
push
mov
inc
(bad)
call
ret
mov
adc
aas
xchg
imul
sub
xlat
fwait
scas
xchg
push
mov
pop
clc
shl
xchg
xor
lea
cmc
rol
bound
xchg
or
popf
fdivr
pop
in
out
das
mov
out
add
add
outs
cmp
in
movs
push
jae
sar
add
xor
cmc
push
jno
mov
mov
clc
mov
adc
fwait
es
repz
pop
(bad)
or
mov
fdiv
shl
test
call
or
and
shr
cmp
test
mov
or
dec
(bad)
lahf
clc
sub
aad
movs
or
inc
or
adc
mov
add
pop
lds
xchg
sub
xor
or
mov
jno
das
clc
cmp
xchg
(bad)
adc
fistp
and
call
jmp
push
inc
and
and
xlat
mov
sahf
cmp
lahf
mov
jl
add
ret
ror
mov
cld
gs
or
sbb
push
js
jmp
xchg
xchg
in
or
stc
addr16
and
add
or
sbb
out
sbb
ret
loope
repz
and
aam
int
aaa
cmps
inc
dec
xlat
jmp
loope
xchg
imul
adc
lds
das
xchg
xchg
push
ins
enter
lods
inc
inc
xchg
pusha
adc
popa
fcmovb
loop
addr16
rol
cmp
fidivr
mov
xchg
aas
test
(bad)
(bad)
imul
sti
push
mov
push
mov
(bad)
xchg
inc
out
paddsb
dec
sub
aaa
std
mov
lods
jecxz
jmp
sbb
pushf
mov
pushf
call
mul
mov
push
loope
xchg
dec
and
hlt
fisub
inc
mov
loopne
and
movs
leave
cmp
outs
pop
jmp
icebp
sbb
add
cs
(bad)
push
or
pop
inc
pop
repz
leave
inc
sub
cmp
jl
jg
dec
jbe
(bad)
fcomp
scas
mov
mov
add
lods
into
sar
push
mov
push
xchg
and
or
ret
and
mov
or
xchg
cmps
out
pop
mov
int
sub
in
inc
pusha
push
add
xchg
leave
xchg
popa
fnstenv
jae
cmp
xchg
xor
pop
jb
in
mov
mov
mov
enter
push
jmp
and
mov
sub
jmp
ja
push
int
cmp
add
mov
xchg
shl
repnz
jbe
or
push
loopne
xchg
dec
out
xchg
inc
(bad)
popa
stos
sub
add
xchg
daa
ins
hlt
mov
xor
fadd
dec
mov
idiv
fs
sbb
sbb
inc
jmp
add
inc
(bad)
and
hlt
mov
pop
and
jns
fwait
mov
mov
pop
pop
retf
push
call
int3
pop
inc
xor
rcr
jo
test
mov
jnp
jae
dec
adc
sub
cmp
cmp
jne
pop
add
dec
(bad)
out
or
mov
leave
(bad)
(bad)
icebp
mov
lea
addr16
xchg
pop
dec
xor
dec
les
into
outs
xchg
in
cvtps2pi
mov
inc
ds
push
popf
mov
pop
test
and
inc
test
sahf
aas
repnz
sti
jecxz
push
mov
inc
push
xchg
adc
sub
mov
and
test
adc
movs
inc
lds
or
call
in
ins
lock
pop
ja
pop
and
loop
imul
jp
mov
out
cmp
sbb
outs
test
cmp
clc
push
pop
jle
aaa
push
std
jecxz
inc
es
and
outs
pop
into
cmp
xchg
and
ins
test
bound
mov
scas
inc
push
jae
ret
das
div
and
add
cmps
sub
retf
xchg
rcr
scas
cs
mov
xor
mov
mov
sub
dec
bound
loop
popf
je
ja
icebp
and
push
fild
inc
ja
push
xchg
push
out
sub
out
nop
test
mov
cli
imul
imul
jbe
arpl
int
out
or
pop
pop
mov
shl
xchg
test
addr16
out
dec
jne
jbe
and
or
adc
iret
fsubr
inc
jne
pop
adc
mov
ds
sbb
mov
cmps
sar
idiv
and
sar
adc
ret
dec
mov
sub
out
out
push
mov
jle
add
inc
xchg
mov
dec
bound
outs
mov
push
xor
in
int
mov
cli
xor
pop
add
cli
add
push
jae
and
push
sub
sub
scas
sub
in
add
ins
mov
(bad)
mov
lods
fidivr
jo
in
mov
add
jbe
fwait
cmp
lock
retf
scas
loope
fmul
mov
jb
sbb
fwait
adc
push
xlat
int
lods
js
inc
retf
pusha
cmps
(bad)
icebp
lods
in
imul
mov
sbb
add
lods
aaa
dec
ins
mov
movs
xor
daa
or
adc
adc
mov
mov
xchg
inc
shl
or
call
aad
or
std
adc
add
ja
cmp
xchg
sub
mov
unpcklps
or
imul
js
adc
in
push
push
xchg
inc
sub
bound
mov
push
cwde
dec
loop
jg
xchg
xchg
mov
mov
sub
rol
add
cmp
lea
jns
jo
push
loop
mov
jae
rcl
adc
arpl
dec
jp
fwait
or
cli
xor
mov
lods
loope
hlt
out
xchg
(bad)
xlat
ins
fxtract
and
push
out
test
cmp
inc
or
out
js
pop
inc
jo
push
dec
arpl
neg
dec
popf
add
aaa
std
mov
add
push
test
out
clc
scas
xchg
scas
xchg
inc
stos
push
xor
retf
jge
push
xor
les
stc
movs
in
sub
xchg
loope
mov
addr16
xchg
dec
ret
stos
pop
aam
aas
or
je
or
jmp
daa
mov
cmp
sub
mov
ins
adc
xchg
push
mov
mov
mov
into
lods
imul
fld
or
cld
push
scas
js
sbb
dec
dec
fs
shl
xor
xchg
add
mov
adc
(bad)
mov
test
imul
sti
jbe
ss
into
push
loope
retf
call
outs
sahf
retf
mov
jle
daa
pop
outs
pushf
sbb
std
ror
shr
push
enter
jl
pushf
xor
mov
xchg
xlat
inc
ror
sbb
push
jl
sbb
into
fmul
pusha
rol
xor
jl
inc
aam
push
adc
bound
push
call
rol
jae
pop
add
sbb
int3
or
aaa
mov
in
push
int
movs
retf
cmp
cld
popf
push
cmc
or
popa
adc
retf
pop
jnp
enter
pop
cld
arpl
or
fdivr
stc
inc
mov
fmulp
fld
or
cs
mov
pop
and
stc
pop
add
sub
repnz
pop
adc
sbb
mov
and
cld
fsubr
daa
sub
sub
scas
add
pop
inc
shl
test
inc
fimul
jge
add
mov
je
js
test
mov
push
sahf
jmp
dec
pop
inc
sbb
popa
xor
jo
ror
rol
push
repz
mov
lock
(bad)
div
jne
or
jno
cmp
mov
and
sti
add
cdq
dec
adc
aas
mov
loope
aam
gs
test
inc
inc
mov
nop
out
scas
push
mov
outs
lea
jp
cli
push
lea
dec
add
les
mov
mov
rcl
cdq
ret
sub
push
mov
test
pop
jae
and
mov
test
sti
mov
xchg
and
xor
fcomp
mov
rol
fidivr
jns
in
in
adc
mov
div
sbb
inc
das
xor
aad
jne
cld
loope
add
sahf
or
imul
(bad)
sar
out
cmp
repnz
sbb
or
mov
fistp
les
(bad)
movs
xchg
add
push
sbb
adc
call
test
sub
clc
mov
sbb
rcr
jb
ins
in
mov
sbb
jno
cs
test
(bad)
adc
mov
popa
mov
cmps
sbb
mov
repz
stos
scas
je
out
call
ror
test
cmp
and
mov
push
jmp
xchg
dec
call
enter
test
pop
test
int3
cmp
cwde
mov
mov
ret
es
sar
outs
imul
jmp
loopne
adc
mov
ins
push
test
not
push
mov
cmps
pop
push
mov
call
jp
inc
popa
sub
aaa
mov
add
out
aam
cdq
mov
jg
cmp
pop
test
add
fs
retf
aas
in
and
out
gs
cmp
arpl
sbb
dec
mov
dec
test
pop
and
xor
mov
dec
je
dec
ret
jp
(bad)
jo
lds
movs
xchg
xor
out
pop
pop
cmps
fisubr
mov
scas
mov
(bad)
xor
mov
xlat
xor
mul
retf
repz
sbb
dec
pop
stos
stc
imul
out
imul
sub
icebp
sbb
or
dec
out
outs
adc
stc
sub
pop
shr
ret
dec
dec
cmp
or
sahf
call
pop
pop
pop
mov
aam
xchg
xchg
xor
mov
inc
cmp
in
adc
cwde
inc
adc
ret
inc
adc
out
frstor
outs
mov
and
inc
adc
or
mov
std
addr16
add
adc
imul
inc
or
bound
stc
xor
adc
inc
call
xchg
std
push
mov
lods
imul
mov
aaa
inc
stos
shl
sub
xchg
adc
and
xor
in
adc
xchg
push
arpl
inc
(bad)
std
(bad)
mov
xor
xor
data16
mov
out
not
or
(bad)
out
and
out
mov
fstp
mov
xchg
and
mov
enter
les
pop
push
enter
psllq
and
or
mov
inc
mov
fcmovnb
xor
sbb
dec
push
out
(bad)
push
jae
retf
ss
(bad)
mov
adc
jo
dec
lods
mov
iret
and
mov
dec
jp
cmps
mov
in
imul
pushf
ja
mov
cmp
push
int3
xchg
and
pushf
lods
inc
xor
push
inc
repnz
and
jno
pop
ins
cs
push
xor
stc
stos
loopne
fsubr
pop
call
or
aas
fsubr
and
cdq
je
(bad)
inc
mov
sbb
adc
jo
fnstcw
inc
xchg
and
(bad)
into
jbe
dec
mov
xor
cmps
(bad)
jbe
cwde
(bad)
in
daa
out
cld
push
ins
div
push
fisttp
int
dec
movs
(bad)
daa
sbb
mov
fdiv
daa
add
adc
int3
sbb
jne
pop
rol
adc
mov
rol
loop
sub
hlt
add
mov
add
jo
cmp
jecxz
adc
fnstcw
pop
xlat
sahf
mov
push
pop
sub
jecxz
pop
sub
int
jecxz
xlat
adc
(bad)
(bad)
popf
xchg
pop
mov
lea
pop
mov
jecxz
add
jl
jb
mov
mov
sub
imul
mov
jb
dec
dec
outs
(bad)
mov
retf
out
adc
mov
inc
jo
cli
push
std
mov
hlt
test
push
mov
and
aam
cmp
xchg
pop
iret
nop
test
mov
dec
int3
pop
add
sub
add
add
sahf
mov
xor
inc
fimul
xchg
cmp
ret
retf
mov
and
ficomp
lods
and
bound
popf
adc
cmp
stos
pop
pop
popf
mov
pop
sub
es
repnz
inc
push
xor
xlat
shl
popa
mov
fcomp
fldcw
aaa
jg
test
push
mov
outs
mov
mov
push
sar
xchg
dec
pusha
movs
aas
dec
or
aas
xchg
ins
test
test
repnz
jns
push
movs
lds
pop
push
inc
jg
mov
xor
pop
cmp
gs
dec
shl
xlat
test
loope
ss
dec
(bad)
aam
adc
adc
jl
mov
into
(bad)
cli
sbb
jns
mov
inc
stos
sub
int
mov
mov
jb
mov
outs
jp
ror
mov
out
adc
(bad)
mov
inc
mov
mov
aas
and
test
dec
mov
xor
inc
movs
pop
xor
mov
push
mov
sbb
mov
ss
scas
dec
cmp
(bad)
push
sub
dec
or
mov
mov
(bad)
jno
mov
jbe
stos
js
mov
aam
data16
ficomp
sbb
stos
(bad)
mov
loop
mov
lock
cmp
sbb
sbb
sub
lahf
rcl
orps
nop
push
rcl
push
pop
mov
adc
xchg
dec
and
mov
push
loopne
out
scas
(bad)
and
xchg
in
mov
lahf
adc
mov
jge
add
cmc
mov
mov
shl
sub
sub
sub
mov
repnz
push
add
popf
clc
add
loope
jp
xchg
(bad)
cmps
push
jmp
and
pop
ds
mov
ret
popa
inc
mov
or
std
loopne
sbb
pop
mov
movs
lock
fidivr
mov
out
lods
lock
cmps
inc
mov
sub
(bad)
push
fstp
stos
push
pushf
pop
test
xchg
fadd
aas
(bad)
jmp
or
sbb
mov
ror
xchg
out
lods
sub
push
inc
jns
xchg
loopne
rol
icebp
mov
sbb
pop
xchg
and
or
imul
push
leave
cmp
mov
leave
sub
xchg
mov
jbe
mov
and
sub
sbb
sub
dec
ror
ins
outs
stos
aas
ret
jmp
inc
test
shl
pop
sbb
lods
xchg
jb
and
std
cld
scas
pop
pusha
jg
test
sbb
retf
enter
inc
cwde
outs
jne
push
push
add
mov
repnz
mov
jp
dec
not
retf
adc
adc
dec
xor
dec
test
cli
gs
add
push
pop
jb
cs
pop
inc
stos
mov
popa
mov
pop
sbb
jb
sub
jle
shr
pop
popa
push
scas
adc
cmp
mov
add
jge
xchg
jnp
sti
ins
outs
sahf
cwde
pop
stos
les
inc
mov
stos
inc
loope
mov
test
int
cmps
iret
adc
and
das
or
hlt
and
aas
arpl
or
jo
inc
xchg
mov
ror
add
mov
jae
jge
idiv
fdivr
push
xor
leave
fist
xlat
outs
fsubr
push
xchg
mov
movs
inc
scas
(bad)
push
scas
dec
lds
mov
inc
test
aaa
or
adc
xchg
es
and
cmps
lods
mov
aad
iret
xchg
push
jmp
lds
cmp
imul
ret
rcl
pop
fidivr
(bad)
sbb
fcomi
hlt
xchg
cmp
mov
pop
mov
cli
push
jmp
jmp
sbb
lock
mov
and
retf
xlat
or
xchg
xchg
cmc
enter
jmp
xchg
xchg
inc
pop
cwde
cmp
fcomp
aas
inc
pusha
rol
xor
and
shr
fisub
dec
sti
xchg
and
je
imul
mov
sub
mul
fstp
jmp
dec
xor
bound
cmps
sub
and
bound
pop
mov
das
(bad)
or
pop
xchg
daa
jb
jl
xchg
sub
xchg
pop
xor
mov
jmp
lods
mov
cmp
mov
dec
xor
pop
dec
push
int
ret
sub
xchg
out
push
(bad)
bound
xchg
adc
mov
push
(bad)
pushf
(bad)
mov
retf
dec
xchg
ret
rcr
repnz
push
mov
arpl
iret
ss
outs
cwde
adc
mov
mov
in
sbb
and
pop
das
and
sub
jmp
pop
dec
pop
or
push
into
mov
cdq
jo
loop
dec
dec
cld
nop
arpl
test
jmp
js
mov
adc
or
mov
mov
ret
ins
mov
xchg
adc
or
(bad)
es
sahf
fld
or
push
and
enter
jns
idiv
push
or
stos
inc
pop
xchg
pop
loope
(bad)
loope
repnz
fucomip
or
mov
xor
in
push
pop
or
stos
dec
jne
add
pop
enter
div
jg
(bad)
mov
jl
push
push
(bad)
out
pop
mov
jae
xor
loope
mov
sbb
sub
cmp
inc
in
imul
popf
lea
lock
sub
jle
push
mov
cld
(bad)
xlat
cli
pop
push
dec
cmps
xor
dec
mov
ins
push
mov
adc
or
or
nop
retf
loop
xchg
inc
scas
jmp
loopne
jmp
mov
jmp
jmp
enter
push
and
or
lahf
xchg
rol
push
mov
in
dec
call
mov
pop
std
push
rcr
xchg
dec
add
fistp
pop
int
xchg
fbstp
iret
push
ja
inc
leave
popa
and
xor
xchg
pop
test
pop
out
data16
mov
call
push
adc
add
or
jo
fs
pop
jb
mov
push
pop
push
ins
dec
ja
sbb
lock
dec
pop
sub
and
outs
push
cld
fidivr
mov
fisttp
ret
lea
adc
rol
(bad)
lock
adc
jecxz
mov
dec
lea
daa
jecxz
push
adc
shl
dec
mov
dec
das
fst
repz
pop
pop
sbb
lods
ss
inc
aas
mov
mov
enter
mov
jo
cmps
ins
ja
adc
mov
shr
mov
mov
add
daa
fsub
std
push
adc
jb
jg
dec
cli
mov
(bad)
out
jmp
jp
cvtdq2ps
sub
push
mov
jb
xchg
popa
xor
cdq
test
dec
jp
pop
cwde
je
xchg
fadd
mov
cmp
inc
ss
jb
clc
fdiv
jmp
cld
pusha
cmp
js
pop
push
push
jne
jno
sti
shr
out
ins
div
mov
mov
ins
mov
sbb
cld
fsubr
call
ja
mov
jmp
ja
fisubr
stc
adc
pop
jne
nop
sti
push
xchg
mov
cmps
add
sub
leave
and
sub
inc
push
popa
imul
pop
fwait
test
dec
push
sar
inc
(bad)
into
mov
pop
add
fldenv
mov
iret
push
shl
js
jmp
adc
xchg
push
aam
ret
jge
rcl
xor
or
sub
inc
and
xlat
cmps
cmp
mov
aam
fimul
icebp
or
ins
enter
push
fist
into
pop
cmp
jl
ds
add
stos
inc
lahf
pop
rcr
out
and
out
mov
arpl
mov
test
adc
movs
loopne
mov
and
mov
lds
lods
push
push
fild
rcr
mov
std
cmp
mov
push
sub
pop
lods
inc
rcl
or
(bad)
cmc
or
dec
inc
nop
or
cmp
mov
mov
cmp
mov
call
ret
retf
retf
out
test
scas
mov
or
leave
in
mov
lods
shr
xor
adc
xor
sbb
add
mov
adc
push
mov
test
xchg
jecxz
dec
or
mov
add
pop
(bad)
xor
repz
pop
lods
(bad)
fwait
int3
in
loop
cdq
jns
in
addr16
adc
xchg
jg
xchg
hlt
mov
sub
lahf
(bad)
nop
push
jmp
loopne
sbb
jae
xchg
push
mov
fld
adc
sub
pop
int
jmp
jmp
sub
cs
cmp
adc
jmp
or
lea
jno
jmp
icebp
repz
js
daa
les
inc
fldenv
dec
fist
lea
dec
outs
sahf
jecxz
adc
sbb
add
mov
ds
pusha
mov
dec
pop
and
sub
dec
and
mul
and
xchg
popa
push
dec
(bad)
sahf
xchg
in
cmc
out
mov
pop
pop
ja
sub
sbb
hlt
sub
cmps
push
dec
hlt
inc
pop
mov
iret
xchg
sub
push
lds
gs
mov
cwde
test
loop
shr
das
repz
xchg
mov
sub
icebp
inc
mov
repnz
and
ret
pop
jnp
jl
movs
ins
add
jmp
push
clc
and
adc
and
mov
in
div
jnp
rcl
daa
adc
mov
adc
ja
ja
pop
clc
sub
xchg
mov
add
push
les
arpl
jmp
sub
mov
xchg
call
mov
in
aad
les
mov
add
mov
nop
push
inc
mov
adc
mov
fidivr
iret
xchg
mov
fstp
dec
popa
cli
ret
les
lods
cmps
sbb
push
stos
push
mov
adc
and
xchg
mov
and
daa
or
dec
pop
sub
xchg
pop
ss
jg
push
inc
ss
repnz
adc
out
push
pop
cmp
jo
cmp
cmp
repz
or
mov
mov
xchg
mov
jno
std
pop
mov
push
movs
jecxz
sbb
mov
dec
stos
imul
xchg
sti
and
push
xchg
sbb
enter
stos
mov
adc
sbb
push
in
fisubr
jmp
or
jb
pop
mov
shr
cmp
cli
adc
jbe
inc
(bad)
adc
push
cmp
cmp
xor
cmp
(bad)
push
pop
xchg
mov
fucomi
iret
cmp
jmp
sub
out
loop
adc
xor
aam
ss
test
call
push
div
pop
fwait
loope
adc
jecxz
jle
xchg
mov
push
mov
out
sub
addr16
(bad)
stc
shr
loop
ds
jno
inc
xchg
shr
xlat
les
dec
inc
cdq
mov
xor
mov
pop
call
mov
pop
frstor
pop
ins
test
pop
aam
ins
jge
lahf
dec
adc
or
jmp
xor
in
pushf
sub
repz
icebp
in
aam
retf
lods
enter
inc
mov
jns
adc
pop
or
inc
xchg
lods
je
retf
jo
sbb
aad
adc
cmp
pop
push
pop
cmps
adc
add
mov
out
test
adc
outs
mov
push
call
out
and
mov
ja
mov
outs
pop
xlat
out
fidiv
outs
movs
ds
ins
adc
jmp
mov
ret
jns
jae
js
outs
lahf
jne
lahf
mov
sahf
in
in
add
(bad)
mov
lods
jle
aas
test
in
mov
cmps
cs
(bad)
je
arpl
mov
dec
push
pop
das
jmp
jp
adc
mov
mov
push
pop
jo
xlat
xchg
push
pusha
adc
jno
(bad)
test
cmp
sti
dec
das
inc
xchg
jne
(bad)
cmps
div
mov
xchg
adc
mov
jb
dec
mov
xchg
add
test
add
lods
cli
mov
pop
loopne
mov
fidivr
mov
xchg
clc
sub
call
mov
pop
je
call
data16
(bad)
shr
stc
push
je
jle
sub
in
ror
stos
mov
gs
xchg
jns
xchg
and
push
xchg
push
gs
cmp
test
rcl
cli
imul
ins
(bad)
sbb
mov
stc
mov
sbb
out
test
and
add
jns
clc
add
jle
mov
lods
and
loop
jge
out
pop
xor
fcom
jo
jecxz
mov
stc
ret
mov
cmp
shl
int3
inc
mov
inc
pushf
push
push
ror
cli
sub
fst
jae
jb
cdq
jne
pop
sbb
mov
cmp
call
outs
pop
push
fst
cmp
sbb
sub
movs
push
lock
mov
xor
pushf
pop
inc
(bad)
(bad)
mov
mov
cmp
push
jo
into
fidivr
jecxz
out
mov
inc
mov
xor
mov
adc
mov
je
and
pop
push
mov
pop
or
cmps
gs
imul
sub
leave
xor
stc
popa
cs
in
int3
ins
cmp
popf
hlt
pop
stc
pop
in
div
mov
xchg
push
add
inc
add
inc
int3
sub
iret
jns
cmp
out
fwait
retf
inc
sub
sbb
(bad)
mov
sub
push
jae
cmp
push
(bad)
jmp
or
repz
lds
push
(bad)
popf
jl
popf
dec
nop
aad
mov
and
dec
(bad)
aas
inc
shl
call
aad
retf
xchg
mov
adc
in
mov
ror
push
push
sub
lahf
fst
and
push
(bad)
aam
add
mov
push
cmp
sbb
not
add
pop
stc
xor
xlat
jb
sbb
dec
icebp
mov
stc
loopne
inc
mov
jae
cmp
mov
add
fistp
mov
xor
inc
lods
inc
dec
and
test
mov
dec
(bad)
call
out
cmps
fcomp
leave
or
sbb
jnp
push
push
lahf
ret
mov
sub
int
xchg
sar
cmp
jb
jp
sar
xchg
mov
inc
adc
inc
scas
out
into
test
jb
push
pop
rcr
push
sbb
ret
xchg
jle
je
adc
lock
cmp
xchg
xlat
jo
popa
call
cld
xchg
sbb
add
push
sbb
scas
xchg
arpl
and
push
aaa
mov
mov
lods
(bad)
fwait
jbe
aam
aaa
shr
mov
xchg
rol
push
fbstp
hlt
xor
jbe
rcl
outs
in
mov
jl
lahf
int3
pop
scas
dec
mov
(bad)
lods
cmp
and
xor
and
test
jle
popf
pop
inc
push
jle
outs
arpl
das
outs
cmp
and
sbb
xor
adc
mov
add
ins
test
mov
or
ds
hlt
sbb
or
cmp
lea
adc
push
mov
iret
ficom
daa
stc
mov
push
mov
inc
sub
ret
cmp
mov
imul
mov
cmp
pop
aad
sbb
in
fdivr
pop
jne
fsubr
mov
lock
push
lods
adc
stos
sub
enter
popf
test
mov
lds
jecxz
mov
push
inc
push
cmp
lock
imul
addps
repz
pop
xchg
call
(bad)
cld
outs
jo
je
mov
and
mov
dec
dec
sub
cld
mov
call
mov
(bad)
lahf
lock
jns
retf
aam
jb
mov
cli
mov
xchg
aad
dec
cld
mov
sub
addr16
(bad)
(bad)
xchg
test
int
sub
fist
fbld
out
cmc
xor
inc
(bad)
aaa
add
les
outs
xchg
sbb
xchg
sub
push
xchg
fdiv
fst
jo
jbe
jmp
push
ja
mov
cmp
or
jge
outs
jle
enter
add
data16
xor
shr
sub
(bad)
test
data16
or
jge
int3
aas
mov
mov
jmp
sbb
mov
or
ret
ss
mov
mov
sub
iret
mov
arpl
inc
lods
test
(bad)
xchg
push
ds
outs
imul
std
push
call
xor
mov
call
or
adc
cs
int
dec
lock
test
pop
imul
enter
cmp
je
retf
popf
xor
retf
or
adc
aad
jne
bnd
ja
call
and
movs
mov
xor
or
sub
inc
hlt
arpl
xchg
dec
xor
xor
cmp
shr
loop
and
mov
lea
test
mov
stos
and
mov
cmps
mov
xchg
push
inc
ret
cwde
push
movs
mov
fldenv
into
add
add
movs
sub
ret
inc
push
jl
add
pop
es
jnp
mov
xchg
arpl
mov
pop
and
pop
(bad)
out
mov
jo
fcmove
pusha
retf
jbe
xor
push
call
mov
out
jmp
jp
xor
mov
out
fstp
pop
ror
xchg
jne
pop
fiadd
nop
inc
xchg
pushf
dec
sbb
fs
rcr
shl
sti
push
mov
pop
sbb
sbb
xchg
loope
(bad)
in
mov
bound
aad
lahf
xchg
(bad)
dec
xchg
inc
mov
sbb
ret
es
push
cmp
rcl
fidiv
leave
or
add
xchg
scas
(bad)
fadd
pop
in
sub
int3
inc
inc
(bad)
pop
fstp
out
div
jmp
test
cmps
neg
push
repnz
fcomp
add
(bad)
nop
xchg
cmp
jno
(bad)
sub
jno
shl
aad
push
mov
cs
push
pop
lea
sbb
push
dec
push
add
leave
sbb
fs
ret
mov
mov
jecxz
movs
iret
sub
les
jmp
aam
imul
jmp
dec
jno
pop
dec
fisttp
inc
mov
inc
mov
sbb
add
mov
out
retf
cmp
mov
ins
pop
hlt
loopne
fisubr
cmp
pop
jbe
int
(bad)
sbb
push
xor
add
or
fnsave
mov
popf
retf
lds
cmp
lds
xchg
xor
aaa
adc
cmps
jp
mov
sbb
in
xchg
imul
and
cmps
jge
(bad)
ror
ret
aam
into
dec
sbb
sub
push
dec
aaa
in
fistp
or
inc
inc
retf
fnstsw
pop
test
mov
pop
sub
cmc
mov
gs
xchg
jp
cmps
fadd
add
pop
and
js
push
inc
mov
or
cmps
call
xor
cs
mov
dec
inc
fwait
mov
loopne
call
mov
or
dec
cwde
into
xchg
mov
adc
enter
jns
ins
sub
shl
aam
cmp
mov
inc
jmp
jmp
jae
ins
mov
mov
test
call
dec
aad
xchg
shl
add
shr
pop
jmp
jb
int
imul
ror
or
inc
mov
fnstsw
stos
neg
dec
imul
shr
mov
out
push
xor
xchg
movs
sbb
les
rcl
jp
dec
pop
sbb
push
rep
add
xchg
idiv
xor
cdq
mov
mov
je
jmp
retf
cwde
popa
or
jno
pop
into
outs
jge
(bad)
daa
cld
mov
ret
je
aad
movs
les
mov
mov
cmp
xor
sub
pusha
pop
push
mov
test
cmp
iret
call
out
fsubp
fisub
fcmovu
ror
enter
xlat
stos
(bad)
cmc
pop
mov
fwait
test
mov
std
cmc
sbb
xor
lock
inc
cmp
icebp
test
push
xor
ss
mov
mov
xor
in
xor
out
push
rcr
int
sub
ficomp
cmp
cli
sbb
mov
mov
std
dec
mov
je
mov
adc
pop
and
inc
fnstcw
add
outs
fdiv
sub
xchg
jmp
cmps
sbb
inc
jg
lods
paddsb
sub
mov
bound
and
icebp
fcmovnb
jl
test
dec
ret
add
int
push
dec
sbb
jp
mov
data16
xor
sub
push
cmp
clc
add
xchg
mov
cs
cdq
sub
mov
adc
movs
loope
cmp
jmp
push
pop
push
dec
sub
inc
inc
or
nop
call
test
add
sbb
xchg
aad
mov
mov
jge
mov
xchg
cmc
sahf
lods
lock
push
sbb
and
cwde
mov
ds
bound
adc
mov
adc
bound
cvtdq2ps
movs
and
(bad)
jl
sbb
jae
out
(bad)
int
call
fmulp
nop
cs
push
(bad)
sbb
ret
or
outs
fbld
mov
fwait
dec
xchg
and
mov
rcl
ds
(bad)
test
ja
jmp
mov
cmp
test
dec
cs
fisttp
mov
fsubr
xchg
fbld
cmp
test
add
dec
adc
imul
jae
popa
mov
fld
out
dec
out
scas
(bad)
push
js
mov
pop
fidivr
push
addr16
add
pop
sbb
mov
dec
mov
fsub
xchg
mov
out
pop
mov
push
icebp
xchg
das
mov
leave
mov
call
add
xor
xchg
or
jns
and
pop
aaa
mov
(bad)
int
sub
jmp
mov
cmp
jmp
inc
idiv
fist
xlat
jl
fadd
sbb
and
xor
add
push
daa
xor
pusha
(bad)
hlt
xor
cmp
jne
inc
mov
ins
pop
mov
cld
sub
dec
inc
pop
mov
mov
jecxz
jnp
mov
cs
stos
out
push
add
test
cmp
add
push
and
xchg
mov
adc
jne
push
fwait
rol
shl
imul
or
jne
add
mov
inc
mov
shl
rcl
push
push
push
jecxz
mov
in
xchg
imul
int
jnp
adc
jl
popa
jge
popf
js
jle
mov
int3
fwait
jno
ret
ret
ret
cmp
neg
ror
mov
sub
shl
cmps
adc
iret
in
loop
test
mov
xlat
and
pop
jno
call
and
clc
xchg
add
dec
jle
inc
aaa
ror
pop
mov
call
nop
xchg
cli
push
arpl
mov
gs
mov
sbb
pop
hlt
sub
push
or
jbe
xor
cmp
add
xor
jnp
enter
xlat
aad
mov
push
call
mov
test
mov
xchg
in
mov
loop
mov
adc
inc
cmp
add
inc
retf
cmp
mov
cmps
cmp
test
in
fidiv
xchg
push
and
mov
shr
dec
adc
cwde
mov
sub
inc
mov
icebp
mov
ins
pop
mov
pop
jl
mov
bound
fsubr
mov
cmps
loopne
mov
scas
and
hlt
push
(bad)
(bad)
fcomp
outs
pusha
scas
leave
in
movs
add
push
cmp
mov
jns
jno
cmp
sti
std
test
jl
pop
sub
inc
pop
sar
daa
sub
cmc
mov
nop
neg
popf
int
pop
dec
push
cs
test
ret
aam
sub
xchg
mov
sbb
pop
in
gs
(bad)
or
dec
cmps
and
repz
out
scas
std
mov
les
mov
popa
enter
dec
mov
cmp
pop
add
hlt
cmp
sbb
adc
(bad)
cld
je
cs
or
movs
push
movs
mov
xor
aaa
cmp
mov
pop
dec
pushf
xor
pusha
pop
or
mov
push
imul
mov
mov
retf
mov
enter
add
daa
add
repz
call
stc
pop
rcl
push
push
xchg
call
stos
jnp
xchg
icebp
cmp
sub
fiadd
xor
lods
sbb
jno
daa
dec
ret
(bad)
mov
loopne
movs
data16
push
gs
mov
sub
std
xor
and
mov
bound
test
and
lods
repnz
xchg
or
mov
mov
jecxz
int3
jecxz
aam
mul
leave
repnz
xor
xchg
dec
stos
jne
mov
outs
jmp
cmps
xor
sub
aam
dec
push
adc
and
fldenv
and
faddp
inc
and
and
xchg
ja
xor
push
push
pop
sti
ret
aaa
cmp
sub
mov
sub
(bad)
pop
jae
mov
xchg
cld
cmp
dec
inc
pop
int
push
outs
inc
inc
movs
js
pop
cmp
and
mov
je
push
jmp
and
das
inc
xchg
adc
test
arpl
or
frstor
or
call
add
push
fstp
or
mov
shl
ret
mov
into
imul
(bad)
xchg
dec
cwde
mov
inc
jge
mov
loopne
lock
pop
mov
sub
addr16
ret
(bad)
jp
push
(bad)
imul
push
adc
jbe
xor
(bad)
mov
rol
sub
cld
dec
adc
push
push
lods
jmp
in
add
and
(bad)
out
inc
xor
call
push
xlat
mov
aaa
repnz
fld
add
(bad)
scas
repz
mov
mov
pop
mul
lods
pop
in
pop
xor
pop
sub
test
dec
pop
les
outs
mov
int3
adc
sahf
and
ret
stos
leave
ss
push
xchg
(bad)
int
push
mov
dec
add
jmp
(bad)
call
arpl
xchg
xor
jecxz
loope
fimul
daa
aam
mov
jb
pushf
add
pop
jg
inc
ret
and
or
mov
mov
sbb
sbb
icebp
jge
push
jne
pop
stos
inc
in
sbb
test
mov
sbb
xchg
loopne
jg
xor
pop
cmps
movs
mov
dec
lods
mov
and
mov
scas
ror
cli
and
pop
aad
mov
adc
pop
(bad)
push
adc
int
mov
rcr
sbb
es
mov
pop
popa
push
xchg
leave
ins
jg
aad
cdq
mov
jb
and
test
shl
lahf
jo
dec
push
xchg
xor
sbb
and
add
and
push
pop
stc
ja
adc
add
or
outs
rol
pop
ins
bound
fcom
or
adc
stos
ds
adc
mov
xchg
push
aas
retf
(bad)
push
ret
jae
cwde
push
dec
xchg
adc
add
jnp
shr
adc
mov
ret
movs
fs
lods
mov
imul
loope
push
mov
sbb
jnp
shr
ja
sbb
inc
cwde
mov
pop
mov
mov
mov
leave
(bad)
std
out
and
aaa
add
cli
arpl
mov
out
inc
iret
cs
mov
inc
scas
push
and
repnz
push
test
in
jmp
sub
in
sub
add
xor
mov
xchg
fwait
add
loope
sbb
push
or
ja
push
sbb
pop
out
in
cmp
push
jp
dec
sub
push
mov
stc
cmp
movs
push
sti
ror
sub
dec
pop
cmp
jmp
adc
retf
aas
add
mov
lock
dec
aad
push
ins
adc
sbb
arpl
lea
pop
lahf
sbb
and
es
push
push
aas
imul
neg
jno
sbb
and
inc
xchg
ret
xchg
leave
ja
or
adc
(bad)
jbe
ins
fadd
jmp
fmul
and
ds
push
out
fdivr
jnp
(bad)
cli
je
aam
jo
mul
cli
repnz
push
(bad)
cmp
leave
adc
pop
in
push
push
mov
adc
clc
outs
jmp
pushf
push
sub
int3
icebp
cmc
xchg
pop
mul
lds
mov
jbe
aaa
shr
cmp
mov
clc
push
push
ficom
or
mov
push
imul
popa
xchg
out
mov
pop
sbb
push
fldcw
aam
jo
mov
clc
xor
add
cmp
icebp
push
arpl
xchg
and
(bad)
jb
outs
cs
push
jbe
adc
xchg
sub
test
mov
fidivr
jno
sub
jle
xchg
cmp
xor
xchg
push
shl
and
sub
cmps
ficom
lea
inc
imul
or
in
pop
loope
pop
jnp
pop
sub
mov
rol
adc
nop
or
add
mov
jns
add
jg
jae
dec
push
push
mov
cmps
fnstcw
in
fs
ret
ret
dec
vpmullw
cmps
int
fs
add
dec
imul
das
or
mov
cmp
and
xchg
aaa
call
mov
ins
xchg
push
loop
and
neg
push
inc
sahf
dec
xchg
xchg
mov
addr16
js
or
pop
in
dec
jmp
ror
(bad)
call
mov
push
and
out
retf
mov
add
iret
jne
jp
push
add
mov
mov
xchg
loopne
adc
cmc
adc
cmp
arpl
repnz
push
or
pop
push
xchg
sbb
(bad)
inc
shl
push
jae
sub
sub
sbb
js
mov
repz
popaw
lock
jle
sahf
pop
push
inc
cli
cs
fnstenv
xor
out
cmp
inc
xor
pop
mov
fld
inc
cmp
cli
stos
xchg
pop
ja
push
mov
and
xor
sbb
inc
sub
in
cli
sub
int3
jo
jae
lahf
jae
mov
loop
mov
jne
jp
mov
inc
push
mov
xchg
mov
jge
cs
dec
outs
pop
sbb
inc
fstp
mov
add
xchg
cmp
mov
cmc
xchg
xor
mov
mov
cdq
adc
mov
retf
stos
cli
cli
stc
mov
add
jns
rol
mov
mov
and
(bad)
fmul
mov
xchg
ins
inc
addr16
movs
ins
push
push
mul
ficomp
hlt
mov
adc
xor
cmp
add
popf
xor
cdq
not
jl
jns
or
push
aad
sbb
je
sub
adc
(bad)
and
cli
push
push
clc
lds
push
and
in
pop
dec
aad
das
fcmove
stc
inc
aam
adc
std
stos
sub
adc
push
sub
aaa
fild
fadd
in
and
test
and
(bad)
cwde
out
and
xor
cmp
adc
push
movs
das
ins
cmps
lahf
jbe
sahf
inc
mov
aaa
adc
ret
sub
xchg
push
pusha
ficom
pop
push
aam
out
and
ins
test
pop
addr16
lea
push
pusha
pop
cmp
cmp
pusha
jb
movs
mov
push
(bad)
jb
cmp
or
lea
ss
inc
clc
fst
int
movs
stc
ret
cmc
mov
icebp
adc
(bad)
ins
and
repnz
das
xchg
dec
hlt
mov
call
mov
sbb
pop
js
sbb
push
jo
pusha
mov
dec
stos
or
jl
mov
mov
adc
inc
xor
sub
retf
cmp
lea
cmp
inc
mov
retf
lahf
xchg
(bad)
cmp
sub
mov
(bad)
repz
pop
xor
jae
fdivr
out
popa
push
fiadd
mov
ror
push
mov
movs
mov
in
sub
pop
sbb
inc
xchg
aam
mov
mov
jno
xchg
stos
or
aad
jge
dec
cdq
imul
add
mov
pop
dec
fldenv
sar
inc
neg
lock
inc
inc
cmp
pop
xchg
mov
adc
adc
push
and
cwde
push
mov
push
push
aaa
xor
(bad)
(bad)
out
xlat
(bad)
inc
movs
jns
inc
sub
inc
and
gs
mov
or
ins
pop
scas
cmps
inc
dec
ins
addr16
add
addr16
scas
lea
cli
lock
in
push
adc
dec
cs
or
clc
or
outs
scas
les
jmp
int3
out
dec
lods
mov
push
mov
fdiv
inc
data16
mov
int3
mov
ins
mov
push
xchg
cmp
js
jae
leave
clc
pop
jecxz
inc
sti
cmp
stc
push
sahf
dec
cmp
or
aas
mov
popa
sub
adc
(bad)
out
imul
inc
imul
mov
fisub
add
outs
sub
xchg
push
std
(bad)
call
inc
or
jae
push
dec
mov
xchg
fst
fxam
mov
outs
arpl
into
xchg
xchg
stc
xor
add
pop
stc
stc
adc
mov
dec
outs
push
mov
out
dec
mov
dec
stos
je
xor
add
and
sahf
xor
jp
lahf
rcl
lahf
mov
aad
clc
pop
sub
add
lods
pop
or
sbb
aad
in
jo
fiadd
add
call
cs
aad
lods
dec
dec
movs
xchg
dec
sti
xchg
dec
and
cs
jno
test
mov
shl
xchg
push
nop
mov
push
sbb
push
pop
retf
fist
ret
sbb
movs
pop
sbb
in
scas
rcl
pop
cs
ret
mul
mov
sbb
adc
mov
aam
shr
mov
enter
dec
lar
das
jo
aad
mov
xor
xchg
in
pop
fisttp
psubd
ja
jbe
push
popa
int
or
mov
rcl
xor
lods
or
mov
fstp
xor
cli
dec
jmp
sbb
clc
mov
les
xchg
jmp
pop
fdivr
mov
dec
ror
fisub
cmp
sbb
es
add
cs
cmp
ja
test
repnz
test
push
dec
call
mov
cmp
test
lds
rcl
add
fstp
mov
std
sub
dec
mov
jbe
inc
xchg
inc
clc
loope
sbb
xchg
add
pusha
aaa
push
popf
mov
in
xor
bsr
and
arpl
sbb
fidivr
add
pusha
xlat
in
pop
add
push
sub
push
cdq
xchg
hlt
popf
retf
xchg
rcl
mov
fwait
lds
iret
call
fwait
sub
leave
inc
and
cmps
push
jnp
push
add
je
dec
and
test
xchg
pop
or
sahf
or
out
or
mov
pop
xchg
xor
es
retf
mov
or
mov
xor
loope
popf
and
(bad)
in
shl
sub
mov
mov
xor
push
or
rcl
jmp
ins
xchg
jo
stc
int
jno
cmps
fist
xchg
cwde
(bad)
adc
imul
push
or
ins
(bad)
pop
and
and
mov
push
sub
cmp
mov
fwait
retf
ret
rcl
fild
iret
push
pop
fistp
adc
xchg
pop
xchg
mov
inc
xor
adc
sbb
jae
push
scas
cmp
das
jne
and
fs
xchg
xor
jg
cmovle
iret
xchg
ror
inc
dec
pop
loope
bound
fisubr
mov
pop
retf
or
mul
repz
je
dec
outs
jbe
or
(bad)
or
and
(bad)
xchg
pop
add
jbe
sbb
xor
(bad)
rcl
out
or
and
ds
mov
icebp
movs
out
test
out
jmp
pusha
sbb
shr
aaa
pop
pop
retf
jle
cmp
fisubr
cmp
ins
outs
mov
mov
test
ja
ss
jno
dec
sub
mov
sbb
jo
and
(bad)
hlt
fld
jne
in
mov
leave
xchg
and
jp
vmovdqa
add
mov
push
mov
(bad)
pop
je
icebp
push
ins
stc
add
aam
loope
fcmove
lods
fld
movs
cmp
test
sub
leave
dec
cmp
mov
lea
and
test
(bad)
imul
dec
cmp
movs
adc
push
inc
fcom
into
xor
xchg
not
mov
mov
nop
adc
mov
dec
dec
mov
fdivp
js
cs
xor
das
xor
jg
jmp
cmp
push
inc
sub
push
stos
imul
jo
cld
test
out
and
aam
xor
bound
mov
dec
push
pop
shl
sub
xchg
lahf
xchg
xchg
mov
dec
inc
pusha
cs
dec
rol
jb
popa
cmp
out
ja
jo
int3
add
int3
inc
mov
stos
ret
xor
outs
adc
leave
test
sub
ret
sbb
mov
dec
sub
mov
ret
cmp
gs
push
jg
test
add
aas
ret
push
or
fcmovne
test
jns
aad
ss
pop
push
adc
repz
and
pop
fsubp
fadd
(bad)
xor
xor
pop
into
cld
(bad)
mov
imul
push
lods
jp
mov
inc
mov
pop
or
mov
and
(bad)
inc
jmp
push
adc
inc
inc
js
dec
pop
imul
push
jg
xchg
clc
lods
push
add
jae
das
mov
cmp
mov
dec
ds
jle
or
inc
outs
push
pop
adc
mov
clc
inc
clc
icebp
je
lds
xchg
je
lahf
pop
test
das
cmp
into
sar
out
mov
adc
out
mov
ret
push
cmps
add
pop
aad
pushf
pop
gs
cld
movs
pop
cmp
jg
lea
jae
jmp
mov
inc
jecxz
jle
outs
sbb
xor
xor
add
ds
push
mov
cmp
cmp
test
push
mov
mov
je
fdivr
call
ja
mov
fcomp
cmps
xor
ja
or
xchg
sbb
fucomi
pusha
jg
retf
inc
les
lds
pop
les
xor
adc
(bad)
adc
aam
jp
neg
push
push
and
mov
jo
sti
mov
inc
push
xor
dec
push
or
fwait
call
fwait
scas
and
aad
mov
push
cmps
dec
sahf
test
in
repz
(bad)
mov
sbb
push
(bad)
outs
ss
adc
jecxz
leave
call
jno
cmp
sub
imul
jne
stc
je
lock
adc
sub
mov
push
adc
mov
gs
and
clc
sub
nop
pop
(bad)
push
inc
mov
imul
or
sbb
rol
sub
push
or
ficom
(bad)
div
int3
push
gs
sbb
loop
mov
cmp
movs
jle
retf
movs
fiadd
sbb
lods
in
mov
xor
mov
arpl
adc
fidivr
ins
retf
inc
(bad)
mov
push
xchg
and
adc
cmp
pop
cmp
cdq
movs
xor
in
or
cmp
inc
cmps
stos
cld
(bad)
and
cmp
adc
stc
sub
movs
imul
je
and
push
inc
jb
pop
pop
adc
push
or
(bad)
mov
xchg
fs
clc
bound
loop
cmc
in
pop
outs
mov
js
add
sub
imul
add
in
or
(bad)
popf
mov
pusha
or
push
cmp
(bad)
out
sbb
and
sbb
fwait
shl
and
mov
and
(bad)
out
nop
sbb
sub
cmps
jmp
pop
arpl
lea
inc
xchg
mov
out
cli
popa
(bad)
fs
mov
stc
(bad)
fisubr
push
jg
pop
enter
pop
ins
out
push
ficom
inc
sub
ja
mov
and
jb
xchg
(bad)
pop
mov
mov
(bad)
js
jge
leave
in
in
adc
test
sti
sbb
jbe
es
repnz
push
mov
ja
add
dec
stos
jge
rcr
sar
dec
mov
add
into
and
mov
xlat
sbb
mov
cmps
dec
mov
repnz
cmps
jmp
nop
mov
dec
lock
xchg
cmp
jl
dec
mov
ja
das
xor
jp
stos
push
js
push
add
sub
test
xor
clc
add
lea
xchg
(bad)
in
xor
dec
add
add
mov
into
xor
jbe
stc
xchg
ds
enter
arpl
add
rcl
add
daa
enter
cmc
rol
dec
femms
repnz
sbb
mul
mov
jmp
cmp
add
xchg
jns
pop
in
sbb
inc
adc
shl
jae
push
cmp
jl
push
add
sub
sbb
clc
sbb
aad
add
adc
cdq
int
add
xor
int
ins
dec
jbe
repz
and
mov
xchg
dec
mov
es
fsub
test
xor
inc
mov
jae
dec
std
enter
lock
jmp
pop
ret
jg
sahf
iret
sub
cmps
fidiv
cli
fwait
cmps
mov
mov
xchg
mov
repnz
push
xchg
jmp
sub
stos
add
(bad)
popf
or
jb
in
jg
shl
outs
and
test
cmp
shl
daa
push
mov
push
fldcw
or
push
push
imul
xor
cli
nop
mov
sbb
push
cli
(bad)
pop
inc
jno
mov
sbb
daa
push
mov
scas
mov
call
(bad)
shl
or
jns
push
fisttp
push
mov
leave
retf
out
mov
adc
call
pop
fadd
and
(bad)
nop
add
and
aaa
pushw
mov
sbb
sbb
aas
ret
je
inc
call
xchg
ret
hlt
popa
xchg
mov
and
aaa
rcl
aad
call
das
ja
jns
ins
pusha
mov
(bad)
mov
mov
and
loop
outs
in
daa
xor
mov
in
cmc
mov
or
push
sub
add
add
lods
cld
or
fs
xchg
fnstsw
test
cmp
jg
cmps
rcl
cmp
scas
gs
sbb
inc
adc
dec
cld
js
fwait
ja
xchg
push
imul
lods
pop
pop
dec
repnz
enter
xlat
sub
push
xor
inc
jg
cs
loopne
jnp
int
popa
pop
cmp
xchg
test
call
and
sub
push
inc
jmp
jp
adc
fstp
dec
mov
dec
lea
sbb
jnp
int3
(bad)
push
mov
jnp
cmp
cld
xor
in
(bad)
cmp
lods
sahf
popa
push
jle
push
out
sub
jno
pop
adc
sbb
sar
jp
shl
mov
cli
loopne
movs
pushf
or
int
jmp
in
xchg
jmp
lahf
jo
mov
sub
push
mov
add
fimul
jae
xor
in
test
and
add
cmp
shr
and
xchg
ja
cmp
pop
pop
fbstp
or
push
pop
cmp
dec
bound
add
and
stos
add
push
je
xchg
test
stos
cmp
jnp
movs
(bad)
fstp
fild
mov
mov
imul
sub
cmp
push
movs
out
das
mov
ret
movs
dec
pushf
addr16
out
sti
nop
stc
xchg
cwde
jne
adc
addr16
lods
jp
jbe
push
mov
xchg
lds
mov
int3
ins
stos
in
inc
jae
jmp
scas
jno
jp
xor
adc
xchg
pop
xchg
pop
adc
sub
into
(bad)
bound
stc
cmp
xchg
clc
out
int
push
cs
call
jb
cmovo
add
mov
pop
jecxz
mov
shl
imul
fcmovbe
or
inc
dec
push
push
imul
cdq
cmp
popa
sbb
stc
loope
dec
push
mov
xlat
dec
inc
ret
mov
test
leave
fcmovb
push
aad
sub
adc
fisub
xor
dec
sbb
sbb
jmp
in
mov
mov
or
jp
pop
push
outs
ret
jno
pop
in
and
pusha
sahf
inc
mov
(bad)
fisttp
shl
lds
sub
push
mov
hlt
jnp
std
pop
or
cwde
(bad)
js
cmp
les
movs
inc
leave
dec
fsub
dec
popf
push
pop
mov
and
mov
lahf
jmp
aas
ror
es
psubq
(bad)
stc
shr
and
xor
out
mov
test
dec
add
adc
xor
xor
cs
out
xor
in
mov
dec
les
rcr
mov
out
shr
and
mov
xor
outs
sub
ins
pop
in
mov
xor
jmp
fs
push
bound
xchg
or
push
jmp
cmps
push
in
into
test
sbb
sub
push
add
test
mov
sbb
xchg
cmp
xchg
push
inc
int3
mov
jl
(bad)
icebp
daa
jno
cld
jl
fistp
(bad)
test
ficom
bound
mov
add
sti
sub
ss
and
ins
(bad)
mov
add
stc
addr16
loope
xchg
push
nop
(bad)
idiv
xlat
mov
ror
clc
xchg
test
xchg
fistp
xor
cmp
stos
xor
xchg
xor
lods
ret
sub
fiadd
xchg
dec
aam
pop
xor
add
and
push
xchg
mov
(bad)
iret
xchg
mov
test
inc
je
add
or
std
cmps
adc
(bad)
xchg
xor
idiv
bound
rcl
push
dec
sub
cdq
add
push
add
xchg
xor
aam
push
cmp
or
xor
mov
or
(bad)
jge
pop
dec
or
jno
nop
lahf
adc
mov
or
inc
push
pop
pop
sbb
test
sti
jb
mov
ret
mov
dec
das
mov
push
push
stos
xchg
xchg
xchg
pushf
ret
cdq
cmp
cs
cmc
or
fisttp
hlt
cwde
sub
jp
inc
mov
cmp
or
pop
fsub
(bad)
stc
sar
repnz
add
push
jae
and
scas
sar
xchg
ins
sti
pushf
int3
stos
cmp
pop
dec
ins
xor
mov
test
sahf
repz
inc
sub
sahf
std
test
mov
pushf
push
xchg
cdq
repz
sbb
and
xchg
xchg
shr
pop
jmp
xor
jo
mov
inc
xchg
inc
bound
leave
pop
and
clc
add
(bad)
push
leave
mov
push
mov
adc
and
push
inc
inc
jmp
xchg
or
xor
cs
adc
dec
aad
repnz
jmp
out
mov
mov
shl
adc
mov
movs
(bad)
mov
dec
lea
xchg
cmp
outs
pop
retf
out
arpl
xchg
imul
(bad)
xchg
gs
add
and
test
dec
or
xrelease
pop
pop
jb
mov
aaa
adc
push
push
rcr
(bad)
jmp
aas
xor
push
loopne
mov
sbb
pop
xor
xchg
push
jo
(bad)
inc
sbb
call
ja
dec
inc
test
mov
fld
pop
dec
or
add
ins
lods
cmp
push
mov
scas
cmc
lds
push
xor
clc
dec
mov
pushf
loope
mov
inc
adc
sbb
jno
mov
xor
inc
daa
bound
push
shl
test
push
jmp
adc
and
test
hlt
sub
inc
ins
mov
cdq
daa
xor
mov
out
out
fiadd
or
mov
call
aam
aad
xchg
cmc
aam
pop
dec
xor
adc
ret
pusha
lea
pop
xchg
mov
lods
pushf
add
pusha
jns
xchg
ror
nop
dec
mov
movs
add
shr
jp
adc
ret
pop
sbb
cmp
sub
fiadd
xor
mov
push
mov
or
cmps
cwde
add
mov
fdivr
dec
cwde
xchg
xor
mov
push
mov
adc
fwait
js
unpcklps
into
xchg
or
pop
aam
retf
test
jl
lods
in
fidivr
cmp
mov
xchg
pop
jl
movs
cmp
fcos
inc
retf
fadd
mov
stos
ds
loopne
cmp
out
lods
cmp
push
mul
das
loopne
xchg
hlt
loope
or
pop
mov
aad
cld
add
push
aas
jb
rcr
jae
dec
pop
and
sbb
xlat
outs
mov
fstp
popa
cmp
cmc
pop
movs
dec
call
not
in
jmp
scas
jo
xor
xchg
sti
movs
and
jmp
imul
add
ficom
fdivr
sub
inc
sub
movnti
call
shl
sbb
adc
add
jecxz
aaa
dec
xor
into
dec
(bad)
cdq
ss
test
test
add
adc
inc
jmp
push
mov
repnz
retf
or
jo
and
sub
add
pop
xchg
inc
rcl
mov
(bad)
xor
sbb
xchg
inc
xor
into
xor
pop
jno
pushf
xor
mov
cdq
cdq
in
xor
outs
mov
test
repnz
push
test
sub
cwde
adc
loope
test
bound
jns
in
(bad)
frstor
aam
push
leave
push
addr16
xchg
lock
xor
in
sahf
scas
mov
adc
js
cmp
push
fld
push
xchg
sbb
sbb
jmp
xor
xor
movs
ins
push
xor
ds
adc
xchg
hlt
lock
or
fnstcw
call
push
repz
enter
imul
loope
sar
jp
je
pop
sti
push
popf
pop
ins
pop
fcmove
repnz
or
arpl
ins
daa
add
lods
test
in
push
pop
xor
(bad)
in
lea
lods
test
jo
std
pop
mov
stos
pop
push
xchg
mov
add
xor
aaa
aam
fbstp
or
popf
inc
jmp
lods
data16
inc
inc
cmps
adc
dec
into
sbb
pushf
dec
fstp
jmp
xchg
lds
xchg
or
sbb
nop
mov
dec
pop
div
push
cld
loop
cmp
push
jo
fwait
and
xchg
dec
push
inc
test
push
div
fwait
mov
cmp
add
ins
and
movs
or
jl
outs
push
jae
mul
mov
inc
pushf
jne
push
mov
adc
mov
mov
out
xchg
das
inc
jmp
jno
add
adc
xchg
data16
into
enter
xchg
xor
push
in
ss
mov
xchg
and
or
dec
loope
rcr
sub
in
fbld
iret
jb
int3
dec
push
rol
mov
or
imul
in
sbb
pop
cmps
nop
pop
adc
mov
mov
or
leave
sti
cmp
jle
cmp
sub
stos
clc
ror
mov
sbb
fwait
pop
test
xchg
or
xor
add
inc
aaa
stos
add
xor
cmp
push
aam
div
fs
pop
inc
jne
addr16
fist
push
cmp
mov
push
lds
pusha
pop
mov
ins
pop
addr16
sub
in
jl
fcmove
aam
loop
pop
xor
inc
js
xor
mov
fcomip
addr16
inc
imul
and
cmp
mov
mov
cmp
sbb
xchg
in
movs
hlt
scas
mov
jecxz
mov
inc
imul
movs
jg
xchg
cli
daa
lock
sar
js
test
fdivp
and
adc
mov
lock
sub
stc
ja
pusha
xor
pop
test
scas
push
ins
pop
(bad)
fstp
jns
lods
shr
lods
pop
cmc
and
sbb
in
or
mov
xchg
scas
mov
and
cmps
sbb
mov
ret
or
(bad)
push
lds
pop
push
inc
xor
adc
(bad)
jae
icebp
add
cmp
sahf
jno
(bad)
push
jns
fimul
xchg
es
jl
fild
push
nop
dec
dec
mov
mov
ins
lock
xchg
mov
movs
adc
loope
add
push
inc
(bad)
xor
xchg
xchg
and
dec
cmp
mov
and
popf
rcl
jo
and
lods
shr
inc
outs
pop
xor
es
out
lods
rcr
stc
add
ins
rcr
add
xor
cld
mov
jle
in
cmps
sbb
iret
in
xchg
int3
pop
scas
xchg
push
or
adc
jnp
(bad)
mov
mov
int3
scas
sbb
adc
sti
xchg
xchg
hlt
(bad)
adc
fs
cli
int
add
sbb
cmp
(bad)
jb
nop
xchg
test
ins
jp
scas
test
in
sub
hlt
enter
xlat
push
cli
je
retf
push
pusha
pusha
rcr
outs
loope
and
sub
(bad)
test
sbb
cmps
repnz
enter
fwait
and
adc
push
push
xchg
sub
out
leave
inc
push
add
loopne
jmp
mov
pop
data16
arpl
div
mov
fisub
ret
jge
mov
xchg
enter
fmul
cld
daa
ja
sbb
cmp
and
shl
lahf
push
push
push
or
jp
hlt
push
adc
add
rcr
int
jnp
popa
inc
dec
jecxz
call
push
xchg
lahf
xor
sbb
(bad)
(bad)
jbe
cmp
es
arpl
shl
mov
dec
mov
mov
enter
sbb
push
repz
fs
mov
and
mov
jp
cdq
mov
mov
mov
(bad)
xchg
jle
ja
or
rcr
and
pop
je
in
lahf
or
jle
sar
fldenv
ficom
jle
out
xchg
sbb
movs
arpl
lock
or
push
mov
lahf
push
jnp
and
call
shr
xor
(bad)
add
jle
mov
lahf
sub
adc
pop
gs
(bad)
dec
sub
add
retf
mov
add
push
sbb
movs
repnz
in
push
fisttp
repz
popf
push
hlt
les
mov
xlat
pop
loope
pop
jno
aam
sub
aaa
pop
iret
je
mov
ins
or
cli
outs
ss
sbb
fisubr
sub
lds
xor
add
es
arpl
mov
mov
(bad)
lods
inc
pop
mov
jb
scas
leave
adc
xchg
mov
xor
sub
stos
xor
mov
(bad)
movs
jnp
mov
sar
dec
xor
inc
in
addr16
push
mov
in
pop
lods
dec
mov
sahf
sbb
arpl
cmc
popa
sbb
imul
adc
(bad)
add
adc
fdivr
retfw
popa
cmp
retf
xlat
sbb
setns
inc
mov
inc
imul
or
test
lods
test
es
les
je
jle
pusha
jle
jns
cmp
jnp
pop
fisub
mov
mov
scas
leave
sub
cwde
inc
dec
(bad)
jne
inc
mov
test
jb
ficomp
outs
jecxz
es
arpl
lods
jmp
rol
push
add
push
(bad)
pop
xlat
xor
mov
sti
lds
push
cbw
ins
sub
fnstenv
jecxz
add
mov
fxtract
pop
xor
mov
dec
popf
jg
xor
fistp
add
les
inc
adc
sbb
imul
cld
scas
mov
pop
hlt
stc
sub
repnz
xchg
enter
movs
ins
xor
pop
js
and
fnsave
cmc
jle
clc
cmp
sti
shl
jle
int
test
cmp
test
dec
mov
pop
mov
adc
push
dec
clc
xchg
(bad)
pop
ret
test
jnp
jbe
jno
shl
daa
test
fiadd
inc
jne
les
mov
aas
and
stos
jmp
pop
cmp
sub
or
repnz
mov
fs
not
or
pop
dec
test
out
adc
lds
sub
outs
mov
mov
xchg
daa
mov
add
cmc
push
pop
inc
mov
add
daa
adc
bound
sub
int3
js
in
fdiv
xor
stc
dec
ds
std
mov
clc
dec
mov
sub
(bad)
inc
and
push
cs
jae
jb
xchg
mov
sbb
or
pop
pop
out
sub
and
imul
pop
cmp
push
push
push
lods
in
xlat
xchg
add
stc
pop
test
xchg
dec
mov
or
push
pop
sub
sub
jb
(bad)
mov
sub
cld
in
add
jo
jnp
push
dec
aad
in
and
mov
(bad)
mov
outs
test
mov
jns
retf
ja
adc
mov
mov
adc
cmp
add
inc
lds
jne
es
loope
sub
call
lds
push
sub
retf
jb
test
pop
call
mov
mov
sub
adc
cs
xchg
fimul
lds
ds
sub
js
cmc
mov
cmp
int3
mov
cs
mov
add
sbb
xor
pop
sub
jge
sbb
mov
jmp
pop
mov
dec
cmp
ds
(bad)
fcos
xor
in
mov
cmp
xchg
pusha
fdivr
xor
jle
sub
xor
xor
cs
or
jmp
inc
test
mov
xchg
bound
fmul
scas
ss
in
jnp
xchg
dec
push
inc
mov
mov
cmp
push
sub
(bad)
jmp
pushf
mov
or
loope
lods
and
xchg
xor
xor
add
jp
xor
dec
mov
and
aad
(bad)
out
mov
jb
sahf
in
sub
sbb
scas
inc
and
aaa
jg
loope
sbb
loope
fwait
sub
xchg
stc
inc
adc
dec
out
out
mov
sub
stc
test
movs
and
aaa
das
(bad)
outs
push
in
mov
loop
shr
jge
push
hlt
scas
mov
iret
push
jbe
mov
je
rol
ins
imul
je
sub
jb
pop
enter
test
cmps
mul
dec
xchg
sbb
pusha
cs
pop
dec
ins
mov
inc
mov
aad
or
jmp
pop
scas
mov
sub
gs
jbe
pop
cmp
nop
mov
sub
hlt
jp
jecxz
mov
mov
mov
dec
int3
adc
cwde
loope
or
xchg
mov
inc
jno
lds
int
push
stos
cmp
add
stc
sub
into
sub
stc
mov
out
jnp
cmp
lds
fbld
out
add
xchg
push
cmp
or
fstp
ins
or
mov
cmps
mov
mov
retf
xor
lock
scas
sub
inc
rol
fist
sub
and
out
mov
ficom
in
leave
fild
js
or
dec
int3
in
out
push
lds
xchg
mov
pusha
sbb
cmp
xor
xchg
xchg
ins
cmp
or
pop
add
xchg
leave
cmps
xor
push
and
and
sbb
lods
sbb
addr16
inc
int
in
int3
fidivr
lods
or
mov
mov
outs
push
repz
mov
push
xchg
retf
arpl
iret
ror
call
push
out
ja
cld
(bad)
out
arpl
nop
fdiv
aad
out
pop
push
fld
cdq
leave
add
or
pop
aas
ficomp
clc
popa
jle
xchg
pop
mov
scas
sub
pop
jmp
xor
popa
lahf
loopne
cmp
xchg
sbb
add
mov
scas
dec
mov
pop
jmp
and
rcr
sbb
sub
jle
pop
shr
stos
mov
js
imul
mov
push
sbb
pop
jo
mov
(bad)
aam
idiv
inc
(bad)
xchg
pop
jle
cmps
and
mov
js
cmp
sub
outs
paddw
cmps
mov
fldenv
icebp
lahf
fsubr
retf
inc
push
adc
xchg
push
cli
test
(bad)
pushf
movs
sbb
or
nop
jns
dec
add
or
dec
mov
push
inc
cmps
cmp
pop
xlat
add
mov
outs
gs
dec
icebp
cmp
in
pop
loopne
stos
add
push
mov
scas
sub
mov
mov
and
outs
push
push
cdq
mov
cli
in
jl
inc
sub
inc
jl
mov
push
inc
xor
cmp
xchg
lea
mov
out
xchg
jp
sti
jnp
adc
push
in
push
dec
mov
popa
cdq
rcl
dec
pop
mov
jp
mov
nop
adc
xchg
xor
push
jne
add
push
push
lods
inc
jg
xchg
(bad)
xchg
ret
mov
jmp
gs
xchg
arpl
mov
push
xor
movs
xchg
arpl
leave
mov
jnp
ss
cli
repnz
test
sbb
fbstp
shr
cld
rcr
jmp
jns
ds
ins
sub
adc
(bad)
sahf
sbb
or
and
lahf
adc
and
adc
stos
cmp
jge
rcl
sbb
repnz
test
pusha
jne
sub
sub
mov
adc
cmp
dec
jle
jo
stos
jmp
shl
pop
or
mov
bswap
lahf
(bad)
inc
fbld
lahf
jno
mov
pop
sub
push
mov
fcmovu
mov
jge
(bad)
lods
out
sbb
sbb
dec
pop
inc
icebp
cld
(bad)
push
pop
lahf
mov
pop
push
or
mov
in
sub
fist
mov
or
mov
dec
jnp
imul
call
or
out
cmp
jl
push
pop
fmul
neg
xor
jmp
ins
fcmovnb
and
push
test
loope
inc
jmp
retf
into
cmps
rcr
xor
out
aas
test
adc
xlat
inc
push
inc
push
jbe
je
sub
jns
cmp
cmp
sub
es
or
es
mov
and
adc
loopne
dec
nop
icebp
jnp
mov
movs
xchg
jne
hlt
push
adc
dec
aas
adc
jno
ret
repnz
inc
mov
test
pop
es
xor
jle
push
out
add
mov
jmp
call
and
dec
push
jecxz
dec
outs
and
popf
and
dec
repnz
stos
cmp
jp
sti
aas
adc
inc
inc
das
mov
iret
or
push
sub
jb
stos
rol
jmp
mov
bound
cmp
cmp
mov
mov
movs
pop
rcl
in
test
push
pop
out
add
shl
or
dec
fwait
add
xchg
mov
(bad)
cmp
inc
sti
icebp
sbb
pop
and
mov
pop
adc
cmp
jl
gs
das
adc
leave
(bad)
push
mov
bound
or
repnz
inc
les
cmp
outs
dec
cmp
adc
xchg
inc
sahf
ret
lahf
das
neg
jge
mov
retf
icebp
push
adc
mov
push
daa
inc
(bad)
ret
cdq
add
rol
add
push
iret
subps
dec
mov
push
pop
ret
pop
pop
imul
mov
rcr
pop
in
je
push
pop
jle
dec
jg
repnz
leave
outs
jb
cdq
dec
outs
ds
mov
cmp
aaa
idiv
xchg
clc
pop
pop
or
xchg
xchg
push
pop
or
fwait
sti
jae
dec
pusha
sbb
loop
or
inc
inc
and
cmp
outs
repz
mov
imul
dec
loop
dec
loop
mov
fld
je
jmp
js
scas
test
repnz
jbe
xchg
loope
fnstenv
stos
das
sar
push
scas
test
pop
add
lahf
push
ror
adc
or
adc
pop
sub
xchg
(bad)
sbb
inc
rcr
loop
fbstp
sbb
lea
and
cmp
dec
enter
adc
jb
fcmovbe
adc
addr16
jne
mov
sbb
and
aaa
mov
ins
xor
inc
call
pop
add
dec
inc
push
jbe
and
mov
mov
cmp
ret
mov
stos
sub
and
scas
pop
fbstp
lods
jae
jae
mov
jge
outs
push
repnz
ret
pop
repz
out
fcomp
enter
rcl
push
clc
inc
mov
loopne
and
and
std
ds
(bad)
call
call
into
mov
loop
cmc
cmp
clc
lock
dec
sbb
call
mov
mov
jle
cmp
js
dec
loop
mov
adc
pushf
aas
call
adc
das
dec
jg
mov
gs
int
mov
push
fwait
inc
sub
ja
add
mov
mov
das
cli
mov
or
pop
or
test
pop
lea
adc
and
cld
mov
retf
add
push
push
int3
int3
scas
repnz
int
cmp
test
clc
sub
cmp
movs
fnstenv
sub
cmp
outs
xor
pusha
ret
cwde
add
cli
xor
cld
xchg
or
mov
shr
or
call
add
aam
adc
jle
pop
xor
push
stos
cmps
retf
fwait
rcl
(bad)
jmp
push
adc
xor
or
inc
lods
jns
es
iret
aad
cmp
aad
arpl
cmp
fcmovnu
imul
fsub
(bad)
pop
mov
cmps
and
jp
xchg
mov
jg
push
daa
or
push
lods
jp
stos
rcl
(bad)
imul
cs
data16
adc
cld
cmp
fdiv
push
sbb
addr16
mov
imul
and
xchg
in
cld
ins
jnp
inc
loope
push
jae
je
ins
addr16
sahf
dec
sti
clc
inc
xor
xchg
jmp
fmul
inc
add
out
sahf
daa
loopne
sbb
mov
aaa
jo
xor
mov
rcr
scas
xlat
mov
pop
out
out
xor
jle
mov
sahf
pop
pop
shr
xchg
fs
dec
icebp
mov
imul
dec
mov
push
mov
push
xchg
iret
je
sub
and
lock
mov
ja
sbb
jnp
and
les
jo
fcomp
(bad)
or
push
lea
rcr
cmp
cdq
sub
jge
je
mov
sub
sbb
push
dec
sub
fs
lods
vmread
arpl
fsub
add
mov
add
sub
aas
mov
fnstsw
jle
jg
xchg
sbb
sub
and
fisubr
jne
rdtsc
add
stc
inc
outs
mov
jmp
jg
xor
retf
fst
add
cmp
clc
cmove
mov
sbb
mov
push
xchg
imul
jns
and
dec
mov
imul
scas
xchg
sub
(bad)
leave
out
bound
(bad)
not
repz
es
xor
sbb
cmp
cdq
call
nop
pop
sbb
add
inc
lds
jmp
jae
cmp
sub
add
sub
ja
rcl
movaps
aad
outs
fld
js
sub
mov
data16
jne
leave
movs
mov
mov
jl
or
sub
and
pop
fwait
ret
test
cld
mov
mov
retf
adc
xchg
cmp
das
cmc
cdq
out
es
mov
pusha
inc
mov
(bad)
jne
dec
out
pushf
aas
sub
sbb
dec
and
fcomip
mov
shl
and
lods
and
and
(bad)
ret
mov
call
out
jg
mov
mov
push
pop
jb
fdiv
out
ja
sbb
push
sub
fnstsw
je
fs
cwde
out
stos
(bad)
sti
cmps
sub
and
xchg
lahf
jne
in
cs
pop
cmps
mov
std
xor
jle
scas
cwde
setnp
outs
or
cmp
jg
(bad)
inc
cmc
repz
cdq
sbb
ror
jecxz
jp
jmp
test
and
mov
adc
inc
ins
pop
pop
mov
fidivr
inc
stos
sbb
cmp
push
mov
mov
out
arpl
lods
or
mov
sbb
jnp
sbb
stos
repnz
cmps
in
fdivrp
xor
loope
mov
sbb
adc
ret
call
inc
in
rcr
sub
fcomp
hlt
leave
mov
nop
or
mov
dec
sub
ins
mov
ficomp
leave
add
bound
and
add
cld
sub
push
cmp
ss
imul
mov
push
xor
scas
ss
pop
xor
add
xchg
cmps
mov
mov
adc
mov
nop
not
jb
addr16
adc
or
js
loope
repnz
cwde
daa
sub
jecxz
shl
out
cmp
or
aaa
aas
cmc
dec
outs
mov
jge
in
loop
rol
mov
ss
mov
or
xchg
inc
sbb
sahf
sub
rcr
xchg
cdq
or
pop
jmp
pop
das
ss
cwde
xor
loop
add
pusha
out
out
xchg
aas
mov
std
imul
pop
xor
xor
mov
pop
pop
push
(bad)
enter
test
in
leave
addr16
and
es
inc
movzx
movs
dec
xlat
add
push
ins
fcomi
mov
cmp
ins
adc
adc
xor
es
push
je
jl
hlt
mov
(bad)
mov
aad
out
adc
popa
imul
mov
cli
push
in
push
rcl
repz
ja
rcl
adc
call
xchg
cmp
outs
and
xchg
adc
mov
mov
test
fidivr
mov
and
sub
dec
push
out
pushf
pop
fnsave
(bad)
stos
xlat
popa
dec
fcomp
mov
xlat
ja
sbb
fwait
push
cmp
inc
test
cmp
imul
outs
push
int
pop
jmp
xor
adc
clc
sbb
jecxz
jecxz
call
das
push
cmc
xor
leave
arpl
cmp
(bad)
(bad)
fdivr
enter
mov
pop
push
sbb
xor
push
jl
movs
popf
leave
aaa
pop
bound
mov
xchg
cld
loop
mov
cmp
dec
loope
mov
pop
and
daa
mov
lock
jmp
and
sub
ss
cmps
leave
cmp
outs
sub
pop
and
and
xor
push
mov
fimul
aaa
dec
cwde
push
and
sub
mov
and
sbb
cmp
retf
mov
ror
ror
cld
ds
xlat
xchg
and
inc
and
or
inc
inc
sbb
and
ficomp
fisttp
movs
mov
inc
pop
jmp
add
and
adc
or
ins
push
mov
add
fwait
cld
inc
(bad)
fwait
adc
inc
xchg
icebp
mov
cdq
inc
inc
sar
test
aad
cmp
ss
pop
(bad)
adc
xor
jnp
jge
repz
mov
aaa
enter
out
ret
sbb
sbb
daa
adc
pop
ja
and
fstp
rol
add
outs
stos
aaa
les
push
and
in
nop
jmp
add
fwait
outs
or
push
shl
cmps
pop
jne
mov
mov
cmp
addr16
sub
jbe
lods
data16
sti
or
mov
aad
sub
jno
or
push
pusha
inc
xchg
dec
push
inc
push
movs
push
xor
fs
loop
fs
mov
outs
loope
push
add
push
cmp
sahf
inc
and
out
aas
(bad)
or
mov
dec
aam
test
mov
icebp
out
je
and
xor
fwait
inc
mov
push
inc
dec
xor
adc
adc
cmp
jno
out
ins
not
in
add
pushf
or
xchg
ja
push
fcomp
push
and
mov
xor
and
stc
sti
or
cmp
mov
ins
nop
lea
ins
xor
xchg
pop
cli
sub
outs
adc
and
pop
cwde
pop
clc
adc
jo
jecxz
dec
sar
cwd
mov
sub
pop
jg
lea
and
xchg
inc
mov
jbe
dec
cmps
mov
js
imul
retf
push
adc
adc
fst
jl
or
xor
(bad)
in
cmp
fs
(bad)
xchg
je
sar
inc
xor
xchg
in
jg
mov
jnp
outs
and
sbb
loopne
loopne
inc
sub
je
jbe
jl
mov
ins
sbb
mov
sub
clc
imul
add
jno
or
sti
rcr
lea
xchg
jp
test
push
nop
fwait
jb
push
ret
cmp
lock
xchg
xchg
arpl
or
or
ret
pop
jl
cwde
jno
xor
sub
mov
mov
(bad)
call
hlt
mov
push
sti
sbb
or
shl
inc
add
idiv
sbb
push
clc
cmps
cdq
inc
clc
jmp
dec
mov
out
mov
jecxz
push
sub
pop
into
ficom
lods
fwait
int3
pop
fild
mul
add
or
popa
and
mov
rcl
add
mov
maxps
cli
call
and
in
jae
fcmovu
pop
xor
call
lods
sub
mov
push
mov
add
push
push
push
rcl
sub
push
mov
adc
dec
push
dec
push
stos
mov
bound
daa
ins
rcr
mov
fstp
stc
leave
out
ret
xchg
enter
js
xchg
arpl
push
mov
push
test
popa
pushf
dec
mov
sub
sti
ret
call
shufps
lahf
jle
cmp
movs
cmp
dec
jge
ror
dec
add
and
inc
pop
pop
cmps
pop
cmp
stos
pop
out
out
sahf
enter
mov
jnp
cmp
xchg
ins
mov
or
xchg
xor
xchg
mov
jp
inc
mov
or
jmp
not
lock
pop
lds
stos
div
gs
adc
push
in
pop
mov
int3
out
les
mov
nop
mov
cmps
mov
cmps
ret
sub
push
pop
sbb
pop
jmp
cli
sbb
pop
xor
stc
add
pop
add
inc
enter
mov
dec
push
or
xlat
xchg
lock
pop
stc
sbb
and
int3
data16
jbe
xor
sub
fcomp
popf
sub
add
fisttp
fwait
mov
push
xchg
sbb
add
mov
rcl
(bad)
rol
addr16
xor
mov
add
xlat
jge
nop
imul
sbb
push
and
or
cmp
(bad)
pop
adc
cld
sbb
hlt
sbb
scas
mov
push
movs
shr
jne
rcl
mov
pop
mov
sbb
cmp
out
js
sbb
mov
mov
sbb
mov
jnp
jmp
or
pushf
xchg
pop
fistp
push
call
in
jo
sti
xchg
pop
(bad)
fnstcw
jl
daa
imul
pop
jmp
jmp
aam
cmps
fdecstp
not
xchg
cdq
ja
cmps
(bad)
out
mov
mov
out
ror
aas
je
jle
retf
out
mov
loop
or
das
sar
push
daa
adc
jb
xchg
cmp
nop
dec
out
sub
or
push
sub
retf
mov
loope
pop
es
or
dec
adc
fadd
or
push
dec
out
lock
imul
fwait
retf
mov
mov
push
and
cdq
dec
ror
shr
loopne
js
into
xchg
fst
inc
test
(bad)
sahf
xlat
xchg
enter
in
and
xor
adc
in
shl
fild
jp
sahf
pop
xlat
jle
and
and
pushf
add
movs
or
pop
jo
shl
popa
addr16
jecxz
mov
(bad)
sub
sbb
cli
scas
arpl
scas
xor
in
in
mov
enter
cld
not
lods
repnz
ins
outs
loopne
(bad)
mov
scas
mov
and
pop
mov
sub
mov
test
dec
jge
out
sbb
out
fistp
cmps
inc
enter
outs
shl
inc
(bad)
xor
adc
jnp
mov
call
mov
das
push
adc
pusha
(bad)
out
push
xor
or
or
and
outs
in
cmps
mov
outs
(bad)
or
xchg
sbb
mov
pop
inc
enter
xor
adc
ret
cs
mov
dec
int3
pop
jl
fcom
inc
enter
fcomip
sar
mov
mov
xchg
adc
leave
pop
dec
ja
xchg
dec
imul
sbb
fwait
jnp
push
out
das
dec
repz
and
outs
jle
dec
icebp
aam
mov
or
ficomp
dec
cmp
std
pop
cmp
aam
in
cmp
inc
mov
inc
std
cs
add
adc
adc
cdq
cdq
xor
xor
addr16
or
cwde
jmp
jg
mov
jge
add
adc
and
mov
push
sbb
mov
adc
sbb
inc
loopne
pop
pop
mov
cmps
cld
xor
xor
stos
and
mov
rcr
fldenv
jmp
addr16
fisttp
cmp
and
push
js
outs
addr16
rcr
mov
fwait
(bad)
sbb
push
xchg
cmps
mov
fcmovnbe
jmp
stos
das
fiadd
pop
jne
ins
jecxz
aam
pusha
mov
jnp
sbb
pop
xor
jecxz
add
inc
mov
sbb
dec
loop
aam
jb
xchg
cmp
test
cmp
sub
popf
mul
(bad)
out
outs
(bad)
aas
(bad)
pop
mov
stc
dec
lods
dec
shr
push
mov
cmc
inc
pop
mov
mov
retf
cmps
shr
into
jge
sbb
retf
mov
push
pushf
icebp
fwait
xchg
mov
stos
rol
cmp
aad
or
jl
jae
mov
fucomp
out
pop
fs
sub
(bad)
(bad)
aam
jle
(bad)
addr16
neg
dec
test
jb
ficom
std
mov
fcomp
add
pop
push
xor
fld
inc
mov
push
hlt
cmp
cmp
sbb
fs
jl
xlat
add
mov
add
cmps
(bad)
icebp
test
call
ss
daa
or
push
cmp
xor
ret
pop
sub
push
cdq
inc
jl
pop
sub
or
into
dec
push
dec
sub
dec
mov
fisttp
(bad)
or
jb
cdq
jns
jmp
xor
int3
mov
lds
test
xchg
or
jmp
sbb
addr16
jno
aad
test
pop
into
xor
jl
or
jo
enter
sti
(bad)
ror
loope
stc
fstp
addr16
dec
shl
pusha
imul
jne
adc
pop
test
jns
cld
xchg
push
push
retf
mov
fldenv
jmp
sub
fnstenv
dec
std
retf
je
xlat
mov
xor
call
push
outs
push
mov
dec
cli
sbb
fldcw
push
sbb
sbb
inc
push
mov
sbb
dec
mov
outs
dec
mov
cmp
(bad)
pop
fucomp
mov
mov
mov
add
or
push
add
fs
rcr
pop
mov
and
es
into
vmread
sbb
nop
pop
test
jl
ds
jp
icebp
jge
retf
gs
mov
sub
inc
or
out
sub
gs
dec
test
or
popf
iret
pusha
jno
test
jg
push
ins
les
imul
inc
or
push
in
out
adc
mov
mov
sar
add
ins
imul
dec
mov
inc
jmp
cli
hlt
inc
shl
sub
jno
dec
bound
mov
cmp
inc
enter
ins
popf
sub
retf
push
cmp
lds
push
and
pop
sbb
and
mov
fnsave
fbld
not
sbb
or
std
push
add
out
jge
pop
cmp
sub
push
(bad)
jns
mov
push
sti
bound
hlt
(bad)
jne
inc
ror
xor
(bad)
fadd
fcom
pop
(bad)
dec
push
push
ret
jne
pushaw
ret
ret
mov
mov
bswap
mov
mov
mov
aaa
and
popa
or
pop
dec
ins
shr
xchg
loopne
es
out
adc
and
les
mov
out
mov
arpl
sbb
retf
ds
in
lea
cli
ins
mov
out
xchg
dec
jns
rcr
sbb
xchg
fsub
shl
jmp
fstp
sub
inc
pop
sbb
dec
adc
pop
mov
mov
lds
call
inc
test
mov
pop
and
jmp
adc
mov
arpl
pop
cs
jns
sbb
ins
fcomp
add
ja
outs
mov
push
mov
xchg
push
movs
add
aaa
dec
mov
call
in
das
push
add
add
mov
movs
retf
ins
xchg
xor
ret
adc
jge
or
mov
lea
rol
cmp
mov
dec
adc
push
ss
sub
ins
out
aas
outs
lea
int3
stos
add
mov
aas
outs
movs
push
fst
fcomp
je
xor
stos
iret
ss
test
mov
adc
xchg
xchg
aam
dec
das
inc
add
test
int
dec
bound
popf
xchg
imul
test
out
mov
xor
mov
(bad)
mov
mov
mov
cmps
pop
jne
and
pop
cmp
adc
std
push
(bad)
mov
leave
pop
jecxz
cli
inc
pop
cs
aaa
inc
jbe
adc
adc
lds
idiv
sub
js
xor
sbb
les
(bad)
fmul
(bad)
cld
in
add
loopne
or
mov
jo
call
(bad)
mov
cmp
dec
(bad)
mov
jns
in
xchg
mov
pop
adc
sub
jae
lods
mov
add
fsubr
popa
jnp
sub
test
mov
mov
out
inc
sbb
(bad)
loope
jmp
dec
fimul
and
sbb
icebp
push
pop
xchg
out
(bad)
jmp
mov
jb
and
(bad)
dec
idiv
mov
xchg
pop
mov
(bad)
mov
sbb
mov
shr
adc
push
sub
and
out
ret
ja
jp
xor
lods
adc
add
call
jmp
mul
mov
jne
fcomp
(bad)
out
jl
in
pop
push
mov
or
mov
fcomp
mov
loope
repnz
shr
(bad)
adc
mov
pop
int3
jb
lds
shl
adc
(bad)
out
or
jg
pop
out
out
rcr
mov
pop
and
xchg
js
hlt
not
jb
push
out
push
les
mov
sub
push
fsubr
les
sub
imul
ud1
std
les
je
mov
das
xchg
fsubr
mov
inc
iret
sub
imul
jo
out
mov
cwde
in
imul
pushf
out
fst
repnz
push
pop
pop
sbb
xchg
retf
movs
enter
dec
and
jge
sbb
lea
pop
imul
jge
ret
pop
push
ss
pushf
jb
pop
dec
jb
adc
hlt
mov
mov
push
mov
jo
add
fistp
xchg
lds
jp
xchg
bswap
enter
cmp
into
fisttp
add
mov
imul
mov
mov
push
or
adc
sar
test
sahf
push
mov
loope
out
jmp
cmps
shr
call
repz
xor
add
pop
sub
hlt
xor
sbb
cli
nop
cli
pushf
retf
fld
cwde
mov
test
sub
ficom
adc
pop
or
int3
sub
hlt
fist
lahf
add
dec
loopne
mov
lods
shr
and
mov
xor
dec
xor
mov
mov
test
mov
popa
mov
or
out
cmp
in
or
sbb
out
int
(bad)
mov
mul
aad
out
in
jns
(bad)
nop
xchg
xlat
or
inc
push
cmp
mov
pushf
pop
popf
imul
or
fbstp
xor
out
call
xlat
in
sub
mov
icebp
add
push
push
add
gs
mov
lds
add
adc
push
inc
lahf
pop
jbe
adc
cmp
push
mov
arpl
cmp
daa
icebp
mov
mov
jle
mov
add
retf
jle
jmp
inc
shl
cmps
clc
jl
leave
(bad)
push
mov
nop
add
mov
pop
jl
pop
in
add
xchg
sub
test
(bad)
sub
mov
mov
call
cmc
call
ins
and
daa
fcmovnu
shr
jno
cmp
add
dec
ss
cmp
out
jb
fisttp
jecxz
inc
(bad)
jne
jge
stos
shl
sbb
push
dec
int
fcom
and
inc
(bad)
jbe
lds
sar
push
data16
xchg
and
dec
adc
cmp
jmp
or
dec
ins
jge
stc
shr
push
fmul
adc
jb
pop
fiadd
out
je
mov
pop
dec
sbb
shr
add
mov
xor
push
mov
sbb
pop
ins
fwait
in
sahf
add
and
pop
push
loopne
enter
ja
(bad)
pop
mov
mov
pop
push
push
push
or
pop
inc
adc
cmc
push
jbe
sub
and
call
xchg
inc
fdivr
sub
into
or
xchg
scas
ss
and
adc
jbe
popf
ins
in
mov
or
sbb
pop
icebp
adc
mov
cmps
xor
mov
dec
xchg
popf
fnstcw
rol
pop
mov
fisubr
sub
leave
jbe
jb
mov
enter
fsubrp
sbb
int
jo
or
xor
popf
loopne
push
xchg
cmp
cmp
pop
adc
jo
fdivr
dec
mov
cmp
sbb
aas
int3
pop
pop
pusha
sub
cmp
sbb
and
ja
jno
imul
cdq
test
push
repnz
int3
mov
(bad)
mov
add
mov
inc
inc
arpl
or
std
xchg
mov
call
add
mov
jmp
mov
movs
push
xchg
(bad)
pop
and
xchg
loope
mov
and
pusha
sub
and
mov
arpl
std
mov
imul
ins
lock
rol
loopne
stos
out
sbb
mov
adc
enter
fnstcw
push
pop
fnstsw
mov
sti
mov
sti
outs
pop
adc
shr
inc
out
hlt
rcl
clc
pop
inc
les
xchg
loope
ss
mov
push
in
(bad)
push
hlt
xlat
adc
sub
popa
mov
inc
ja
jmp
jb
ja
jl
push
(bad)
in
add
jp
int
inc
mov
add
mov
test
cmp
stos
cmc
xor
adc
xor
and
ins
push
ins
fld
fst
loop
xor
(bad)
xor
not
sbb
mov
xchg
jge
mov
icebp
xchg
cmp
cld
adc
enter
bnd
xchg
lods
jbe
loop
xchg
mov
in
ror
dec
or
movs
mov
mov
xchg
cmp
and
jne
pop
mov
push
sub
hlt
ins
mul
xlat
and
jb
inc
call
jmp
inc
sbb
loop
mov
movs
lods
stos
sub
inc
out
sub
popf
dec
inc
scas
inc
sbb
dec
add
inc
out
(bad)
repz
ins
pushf
push
push
add
sbb
pop
imul
dec
pop
jle
adc
and
imul
enter
movs
enter
scas
pop
popa
mov
pop
lock
mov
push
(bad)
jno
repnz
and
imul
xor
push
lahf
mov
and
fldcw
into
not
add
adc
or
imul
mov
sbb
dec
xor
xor
in
repz
fidivr
data16
sub
push
sub
jnp
hlt
add
xor
cmp
aas
fwait
push
test
cmp
jbe
(bad)
adc
rcr
add
(bad)
in
in
or
out
fdiv
les
rol
pop
push
fadd
adc
xchg
mov
push
enter
xor
test
jne
(bad)
push
stos
ins
add
ins
aad
mov
(bad)
out
data16
and
jb
pop
sti
(bad)
mov
je
(bad)
stc
xor
sbb
mov
shl
jl
fldenv
je
in
out
kmovw
and
arpl
fs
and
lods
jnp
jb
ret
cld
test
shr
retf
mov
cmp
jp
mov
dec
cmp
mov
movs
dec
sbb
cmps
sbb
adc
dec
or
dec
mov
cmp
dec
pop
adc
mov
pop
jp
nop
mov
push
ds
test
pusha
sub
xor
adc
sbb
push
icebp
pop
lods
push
and
stos
adc
bound
sub
xor
or
ds
shl
test
stos
stos
mov
(bad)
and
push
lahf
not
add
mov
inc
xchg
inc
cld
jae
inc
mov
sbb
xchg
pop
faddp
adc
mov
sbb
and
push
dec
jle
outs
addr16
jo
dec
enter
pop
out
and
call
add
mov
lods
sub
sub
jmp
cmps
dec
leave
add
fsubp
fldln2
jg
sub
scas
imul
add
out
xlat
dec
xor
repnz
or
mov
mul
mov
retf
dec
jg
(bad)
sbb
cli
dec
stos
jle
pop
pop
mov
das
sbb
movs
retf
or
xchg
imul
dec
mov
sub
jge
adc
and
push
pop
in
in
jg
mov
ins
mov
mov
cmp
cwde
add
sahf
mov
cmp
cs
add
(bad)
aaa
mov
fld
or
stos
jp
ret
loop
cld
sbb
outs
fbstp
or
(bad)
mov
add
pushf
dec
xor
sub
mov
pop
ds
push
dec
retf
push
cs
xor
gs
jnp
sbb
fdivr
pop
fidivr
push
mov
adc
mov
sub
iret
mov
cmp
arpl
or
aam
ds
das
push
push
lea
popf
stos
rep
sbb
rcl
ret
jg
loopne
sbb
push
stc
xchg
dec
dec
push
out
and
jecxz
jp
push
sahf
daa
xor
hlt
lods
cs
jmp
pop
bound
adc
cs
or
add
aas
xchg
xchg
out
mov
cmp
dec
inc
dec
mul
dec
test
mov
jae
and
sbb
popa
sahf
rol
arpl
mov
jbe
sar
sbb
sar
add
mov
mov
cmps
fptan
dec
jae
movs
aaa
inc
ds
mov
push
dec
mov
fdivr
fmul
xchg
dec
addr16
push
xor
cwde
sar
in
out
sub
mov
cmp
dec
sar
add
daa
jo
push
rol
adc
(bad)
mov
mov
fwait
xchg
xchg
fmul
stc
lods
cmp
mov
add
push
in
das
scas
inc
mov
mov
mov
mov
(bad)
(bad)
cmp
mov
adc
push
inc
dec
data16
xchg
or
dec
ret
adc
push
fstp
call
(bad)
icebp
xchg
adc
int
dec
div
push
movs
jmp
test
enter
fcom
test
or
int3
adc
push
sbb
jbe
inc
xor
xchg
add
pop
int3
adc
xchg
adc
adc
scas
adc
sub
cmp
mov
idiv
jae
pop
movs
mov
movs
mov
cmp
loopne
jl
pop
mov
mov
out
pop
xchg
or
add
push
dec
out
cmp
in
mov
fldenv
xor
sar
jmp
bound
jo
inc
(bad)
test
mov
push
add
xchg
jg
xor
adc
(bad)
mov
push
rcr
and
ins
xchg
dec
pusha
enter
out
dec
and
pop
mov
pop
pop
jmp
ret
arpl
enter
jge
sbb
cmps
jge
fcmovbe
in
xor
jne
adc
in
je
jmp
lea
jmp
inc
mov
ret
sub
repz
fucomip
hlt
inc
lock
xor
push
cmps
sbb
dec
and
int3
jge
adc
dec
mov
cs
loopne
ret
add
mov
data16
or
ds
mov
xor
out
dec
sub
mov
inc
mov
out
push
ss
jb
shr
repnz
push
sbb
iret
xchg
daa
sbb
loopne
je
add
adc
cmp
iret
sub
sub
lea
cmc
inc
pop
dec
xor
pop
add
fbstp
imul
es
fist
aad
jmp
dec
push
(bad)
outs
clc
fmul
mov
cmp
rcr
inc
fucom
or
ret
sub
(bad)
cmp
loopne
loopne
sub
cdq
mov
push
cmp
leave
jae
and
push
cmp
aad
icebp
jno
cmps
add
pop
fadd
cmp
arpl
sbb
cwde
das
fdivr
popf
clc
xchg
dec
push
cwde
mov
sub
cmps
ja
mov
xchg
sbb
xchg
sub
adc
xor
sub
mov
cmp
add
(bad)
xchg
mov
push
inc
nop
mov
(bad)
jns
mov
sti
and
sahf
inc
mov
shr
mov
cmps
(bad)
leave
push
pusha
das
pop
scas
in
jmp
jbe
pop
dec
pop
inc
jae
mov
pop
and
cmp
(bad)
aam
dec
dec
pop
mov
fisub
sbb
ret
jbe
mov
mov
dec
xchg
dec
add
xlat
inc
xor
loopne
xchg
inc
xchg
mov
std
xchg
test
bound
xor
inc
adc
lds
mov
mov
push
out
mov
fiadd
fsub
mul
lahf
and
rol
pop
jbe
aad
shl
adc
jle
out
out
dec
dec
aas
cdq
shl
rol
add
out
add
dec
aam
pop
pop
xchg
pop
add
xchg
pop
cmp
loopne
cmps
sbb
mov
mov
icebp
aad
sbb
pushf
ss
inc
test
or
and
jnp
out
ja
cmp
push
aaa
jp
scas
daa
sbb
add
subps
and
add
add
add
add
add
add
pushf
lock
adc
push
iret
fisttp
leave
pop
jns
xchg
(bad)
mov
sbb
data16
icebp
mov
sub
movs
or
add
and
and
sbb
add
clc
fsub
cld
adc
push
mov
(bad)
pusha
mov
pop
sbb
or
das
pop
test
push
std
or
bnd
hlt
aad
xor
pop
xor
rol
push
xchg
rol
popa
loope
in
dec
pop
and
fiadd
push
daa
pop
in
add
xchg
jmp
arpl
jl
push
jne
dec
jp
push
cmp
outs
xor
xchg
dec
sbb
inc
cmps
inc
dec
xor
icebp
bound
inc
xlat
jp
lock
mov
push
dec
xchg
xchg
push
jecxz
pop
cli
or
push
sub
xor
add
xchg
jmp
int
fmul
sub
pop
hlt
mov
iret
cld
adc
or
add
inc
pop
adc
fsubp
fadd
add
repnz
mov
push
push
push
sti
out
sub
cmc
test
cmc
xchg
mov
push
mov
add
xchg
mov
(bad)
rol
int3
lods
mov
ss
pop
lods
rcl
inc
mov
in
bound
inc
aam
in
push
dec
add
fiadd
mov
push
addr16
std
es
movs
fstp
arpl
mov
arpl
pop
pop
(bad)
adc
ror
lods
imul
pop
(bad)
mov
dec
push
sbb
xchg
ds
fwait
jle
fild
cwde
lds
mov
and
shl
xor
sar
fmul
(bad)
cdq
xor
xchg
jmp
fmul
icebp
fwait
in
retf
push
icebp
icebp
xchg
loopne
push
adc
mov
add
add
jnp
cmp
ret
lock
pop
iret
es
sti
pop
jl
jmp
ss
add
in
bound
idiv
jbe
jge
dec
mov
inc
nop
cli
scas
bound
gs
jne
lea
push
gs
fwait
aaa
push
test
xor
sbb
aad
sub
xchg
sub
rcl
jge
add
mov
or
cdq
inc
outs
loopne
push
aad
stos
addr16
sbb
mov
sbb
mov
push
adc
sub
inc
sti
xchg
fwait
push
push
sahf
push
sar
fild
mov
(bad)
xlat
sub
sbb
pusha
jmp
jmp
pop
jp
enter
mov
mov
cmc
ror
fbld
fs
call
aad
mov
ficom
repnz
sbb
test
xor
nop
or
xor
xor
xchg
xor
xchg
arpl
fwait
inc
push
addr16
xchg
cmp
sti
rol
inc
adc
pop
mov
mov
call
cmc
call
xor
inc
test
xchg
jecxz
mov
mov
and
push
lods
mov
adc
inc
(bad)
mov
cmp
nop
jle
pop
lea
xor
(bad)
mov
xlat
(bad)
jmp
xor
sbb
mov
mov
xchg
sti
stos
ret
inc
jmp
pop
test
push
push
imul
inc
jecxz
mov
(bad)
jg
mov
and
lds
sbb
out
shr
dec
ja
(bad)
scas
in
mov
push
mov
adc
sbb
out
mov
mov
call
adc
inc
add
pop
cmp
pusha
cmc
fisttp
mov
inc
in
std
sbb
sbb
aam
fsubr
or
pop
ror
dec
popf
push
adc
xchg
push
mov
mov
imul
dec
test
mov
jmp
outs
add
sub
inc
and
ret
(bad)
inc
std
and
or
or
ds
pop
or
mov
add
sub
lea
fist
pop
cdq
xor
ficom
frstor
sti
xchg
push
repnz
(bad)
push
je
jae
dec
cli
out
jns
or
add
in
ret
add
sub
in
dec
movs
scas
imul
in
paddw
inc
mov
out
test
mov
gs
sti
and
int3
inc
push
out
lahf
mov
mov
fwait
ss
adc
jg
fld
pop
mov
jl
push
scas
ret
jae
mov
js
xchg
int3
cmp
xchg
or
inc
fimul
dec
adc
std
add
pop
dec
xor
jecxz
or
mov
inc
cmp
cmp
cmps
je
jl
pop
mov
and
enter
push
pusha
(bad)
or
push
add
call
jmp
int
(bad)
xchg
xchg
sbb
pop
xor
mov
out
sbb
nop
arpl
in
dec
push
add
retf
int
pop
aad
or
leave
xchg
aad
inc
rcr
in
mov
retf
add
push
mov
or
push
adc
out
out
scas
shl
mov
lock
je
cdq
fiadd
push
jmp
pop
in
daa
call
cmc
push
sbb
hlt
mov
popf
retf
push
(bad)
pop
(bad)
and
mov
arpl
loopne
sar
adc
inc
bound
dec
mov
mov
mov
iret
std
cld
aad
dec
adc
sub
sti
push
(bad)
es
fld
fcmovu
cmp
ss
das
ror
popa
ds
lods
inc
in
sbb
push
push
inc
jg
cwde
cmp
pop
xor
ja
dec
fisub
scas
jle
sar
mov
stc
pop
cwde
xchg
aaa
dec
mov
dec
test
in
fsubr
jb
push
out
sub
xchg
push
xchg
jbe
loope
cmp
jg
mov
or
push
adc
mov
rcl
xchg
push
arpl
mov
mov
sub
or
inc
push
mov
push
retf
cld
adc
loope
lds
push
pop
jmp
mov
das
push
imul
jnp
jmp
nop
inc
adc
push
in
adc
es
xor
adc
mov
fsubrp
dec
sbb
sbb
jns
mov
icebp
pop
or
inc
lods
repnz
sti
pop
sub
jns
repz
cmp
ds
fwait
and
out
xchg
inc
and
mov
data16
fwait
retf
push
js
or
(bad)
enter
pop
jmp
mov
cmp
iret
fidivr
xor
dec
push
add
pop
cwde
push
fstp
inc
in
jns
test
int
repnz
rcr
add
adc
cmp
call
les
inc
outs
dec
leave
and
rcr
push
ficomp
ja
rcl
js
inc
ret
jbe
test
in
jbe
add
test
mov
dec
pop
mov
das
mov
mov
stos
scas
dec
sbb
add
cmp
add
jle
(bad)
test
mov
mov
fidivr
mov
jno
pop
mov
mov
push
adc
adc
lock
push
(bad)
(bad)
sub
inc
call
ret
pop
pop
inc
rcl
outs
or
out
daa
sub
(bad)
and
loopne
xor
and
push
jae
gs
xchg
xor
and
out
(bad)
loope
aam
pusha
inc
inc
retf
mov
cwde
pop
fild
mov
gs
push
lock
mov
movs
repnz
inc
and
xchg
mov
std
jecxz
push
jmp
cmc
cs
fisubr
cmp
mov
cmp
ins
inc
push
pop
out
test
mov
ins
mov
scas
icebp
push
stos
call
mov
jns
gs
mov
add
shl
jg
push
xchg
call
dec
addr16
and
les
pop
lar
dec
lock
fst
cmp
xchg
push
mov
inc
jmp
xchg
addr16
jb
adc
(bad)
(bad)
pop
pop
iret
dec
cmps
in
pop
dec
mov
dec
xor
ins
into
inc
test
lods
jmp
push
imul
inc
pushf
mov
inc
jmp
mov
call
cwde
ds
sar
adc
jecxz
push
test
hlt
lods
cmps
ja
and
cmc
xor
out
loopne
jne
jo
mov
cdq
lea
pop
mov
mov
xor
pop
sub
cmp
sar
jg
fidiv
pop
fnstsw
ret
push
add
sub
(bad)
out
push
pop
xchg
lock
test
jmp
inc
or
pop
dec
add
xchg
xchg
xor
add
push
push
inc
call
mov
data16
adc
add
xor
push
shl
ins
xor
and
or
jnp
movs
mov
outs
mov
mov
push
push
popa
loopne
push
shl
adc
inc
int3
fdivr
adc
inc
addr16
cmp
jb
cmps
mov
je
fcmovne
pop
adc
sahf
dec
int
cmp
push
jmp
cmp
and
pop
mov
pop
xchg
int
cmps
jmp
into
into
mov
dec
mov
and
cmps
stos
and
gs
xchg
jo
ins
add
sub
cmp
sub
int
or
std
mov
mov
xor
(bad)
(bad)
scas
fistp
dec
dec
jmp
adc
xlat
or
addr16
mov
pop
daa
shl
jae
jo
enter
dec
mov
aad
xchg
jp
mov
sbb
dec
xor
mov
fcmovb
jns
lahf
test
add
fwait
mov
mov
rcl
dec
out
mov
and
fucom
mov
xchg
adc
or
cmp
jb
push
push
pop
cli
js
fnstenv
pop
out
mov
add
repnz
dec
in
sar
popa
std
int
pop
pop
cld
int
lods
and
jnp
std
fs
out
mov
sub
jge
in
outs
scas
jns
je
push
cmp
jb
mov
xchg
xchg
fistp
fisub
aad
clc
or
push
and
push
pop
jb
mov
shl
mov
cmp
mov
adc
fcomp
push
repnz
lea
out
cmps
(bad)
jle
ins
repz
lods
pop
fbld
mov
lods
mov
push
adc
pop
rol
lds
push
or
mov
div
aam
dec
outs
xchg
and
data16
adc
in
mov
push
shl
je
mov
in
fwait
or
into
icebp
fsub
fidivr
imul
add
ins
add
jbe
sub
imul
daa
in
jle
jmp
mov
push
cwde
jnp
add
jae
test
stos
(bad)
xor
pop
scas
mov
cmp
mov
jecxz
aaa
pusha
jbe
lahf
aad
pop
fcmovne
test
pop
xchg
test
fdivr
in
xchg
or
icebp
out
adc
cmp
push
imul
je
mov
push
dec
retf
rcl
ror
jl
mov
arpl
mov
mov
xchg
pusha
js
lods
or
push
sbb
cwde
rcl
or
jl
cmp
cmp
test
push
cld
sbb
add
sub
lahf
and
sbb
mov
and
sub
loope
fsubr
daa
fsub
xlat
and
cdq
dec
rcl
ins
icebp
loop
fidiv
lods
xchg
or
in
mov
pop
xor
add
pop
ret
pop
mov
cwde
mov
inc
push
ret
ss
imul
xor
jbe
in
or
jmp
sbb
cmp
aas
mov
inc
jge
inc
sbb
pop
(bad)
cmc
(bad)
jo
xchg
xchg
sub
cmp
neg
xor
rol
push
inc
pop
jo
fsubr
dec
retf
aaa
jl
pushf
add
cmp
adc
loopne
pushf
sub
arpl
mov
inc
cmp
jge
test
mov
in
arpl
jge
mov
lock
std
pushf
jae
mul
out
cs
sub
inc
push
push
cs
pop
fiadd
pop
pop
lea
mov
repnz
jnp
ss
lds
sub
pop
pop
pop
data16
fisubr
cmp
leave
and
xchg
or
dec
mov
cmp
mov
mov
shr
mov
imul
mov
bndstx
cmp
mov
mov
cwde
adc
ins
aad
xchg
mov
sbb
jns
and
addr16
inc
cmp
sbb
xor
cmp
mov
inc
cli
mov
outs
das
div
(bad)
adc
sbb
xchg
or
cli
(bad)
sti
scas
jnp
or
jg
movs
retf
push
jnp
test
jg
mov
xor
add
clc
and
adc
jnp
pop
stos
call
rcl
push
and
les
pusha
test
ss
dec
cmp
push
xor
mov
jbe
in
(bad)
xlat
xchg
scas
cs
add
in
sub
clc
add
repz
dec
mov
jmp
adc
add
pop
inc
test
fisttp
jae
mov
psrlw
jecxz
mov
mov
mov
sub
sti
das
jle
lds
jne
jg
es
call
les
xor
and
dec
lds
sub
push
test
mov
mov
xchg
push
and
or
sub
sbb
js
and
inc
test
pop
adc
movs
sub
add
push
rcl
sub
cli
pushf
mov
lods
loope
push
fsub
fstp
mov
mov
add
or
or
jbe
mov
push
sbb
pop
add
lds
fild
xchg
cmp
adc
or
pop
add
sub
loope
push
push
pop
sbb
test
pop
inc
jge
cli
int3
push
pop
add
and
aam
ror
add
imul
or
mov
mov
rcl
xor
enter
stc
sub
and
sahf
jbe
xchg
in
ins
(bad)
lock
jbe
sub
jno
es
jl
shl
mov
enter
mov
xchg
cld
sbb
push
outs
stc
sbb
jmp
push
mov
mov
cmp
rol
jmp
int3
pop
push
mov
mov
push
lea
pushf
pop
shl
mov
push
loopne
leave
sbb
sti
jo
inc
push
push
sub
call
into
test
ja
aaa
mov
adc
mov
mov
and
add
jo
jns
mov
adc
ror
push
dec
ficomp
outs
nop
cmp
int
sub
lods
(bad)
nop
adc
call
sub
setb
mov
ds
push
and
push
mov
and
aas
int3
mov
or
or
popf
mov
pop
inc
dec
cmc
(bad)
daa
sub
aas
mov
sahf
xchg
and
push
or
rcr
sbb
ror
retf
and
shl
enter
adc
sbb
imul
arpl
push
mov
jne
fisttp
daa
ins
jmp
sbb
dec
push
jmp
fcomip
scas
jnp
popa
leave
lds
mov
mov
leave
xor
push
pusha
xchg
mov
mov
addr16
sub
sti
inc
or
pop
fcom
sahf
outs
pop
add
into
add
push
jb
sub
imul
jns
lahf
loopne
es
adc
pop
dec
inc
sub
nop
stos
jo
push
and
inc
ret
ja
jmp
pop
adc
adc
xor
push
fcmove
fcmovnb
sbb
cmp
in
std
jl
jo
loop
cmp
aam
inc
outs
iret
call
push
sub
cmp
cmp
repnz
dec
and
push
and
popf
xlat
mov
int3
xchg
ins
jmp
push
in
mov
rol
and
lods
and
lods
outs
mov
dec
jp
dec
enter
mov
xchg
add
and
pop
xchg
gs
push
shl
pop
add
ds
bound
scas
lahf
xor
xchg
xchg
inc
push
xchg
les
arpl
push
loop
sub
in
in
sbb
cmp
js
dec
mov
xor
or
cdq
std
outs
out
test
cld
mov
dec
sbb
ja
repz
scas
adc
mov
repz
mov
int3
sub
ds
in
xchg
mov
jbe
imul
in
les
jge
repz
cs
mov
mov
dec
add
clc
stc
pop
cmp
add
imul
jp
or
jno
mov
in
addr16
call
xchg
mov
mov
jp
inc
pop
mov
sub
iret
pop
push
xchg
mov
repnz
adc
ins
xor
inc
adc
pop
lds
mov
(bad)
xchg
sub
jno
mov
enter
out
push
xchg
mov
inc
xor
movs
mov
lea
push
push
pop
rcr
call
loop
(bad)
call
pop
test
jae
pop
fs
js
out
adc
mov
pop
jge
mov
pop
mov
pop
in
adc
movs
mov
lea
dec
nop
ret
dec
push
or
cs
push
mov
and
fild
enter
and
cli
pop
push
mov
retf
test
or
int3
mov
jl
jae
jecxz
jno
pop
jnp
push
pop
imul
mov
xchg
jle
jp
push
jl
and
cmp
jmp
es
sub
loope
es
jno
stos
ficom
mov
test
mov
xchg
add
ja
out
scas
loopne
push
outs
sbb
push
mov
push
mov
sbb
mov
es
mov
xor
or
mov
rcl
lods
sub
es
xor
ss
cmp
mov
aas
pop
imul
push
int3
sahf
sub
mov
inc
dec
mov
retf
or
dec
scas
icebp
pop
mov
mov
cdq
out
into
xchg
cwde
cld
xor
test
mov
imul
psubusb
jge
xchg
cmc
outs
fisub
retf
adc
fsub
dec
cmp
and
fs
pop
mov
mov
sbb
and
mov
cmc
repz
fist
push
std
jp
jo
loop
add
inc
mov
inc
loopne
inc
(bad)
call
lock
in
inc
mov
fs
push
ja
jmp
push
xchg
in
dec
daa
pop
stos
push
mov
por
cmp
mov
clc
adc
sahf
sbb
mov
(bad)
jne
int3
mov
or
shl
ror
adc
push
arpl
call
shr
mov
or
sub
stos
dec
stos
pop
xchg
fld
sub
in
das
or
ret
adc
add
cmp
xchg
rcl
add
mov
mov
repz
inc
jnp
jne
(bad)
lods
mov
or
mov
sub
cmp
push
mov
push
jno
pushf
fmul
push
jg
fidiv
cdq
cmp
sub
sbb
cmp
bound
test
cmp
push
push
clc
jb
jge
or
retf
mov
jo
jge
ins
je
mov
adc
fwait
dec
adc
xchg
cs
cmc
cwde
and
mov
mov
movs
xor
nop
push
push
lock
mov
push
out
outs
imul
mov
mov
push
mov
ret
mov
loop
sbb
out
push
push
and
and
cld
jmp
cmp
jno
test
xchg
pop
addr16
mov
imul
cmp
inc
mov
bound
idiv
imul
sub
inc
or
jno
into
div
xor
mov
arpl
js
sbb
int3
popf
pop
xor
lods
push
fstp
ret
adc
or
mov
push
shl
xor
or
test
inc
js
jecxz
push
mov
push
fnsave
pop
sahf
sub
xchg
cdq
in
jb
sub
mov
aaa
test
out
dec
jg
fsubr
xchg
push
movs
xor
add
xchg
cmps
call
(bad)
cmc
xchg
jp
out
or
retf
xchg
cs
imul
mov
jae
pop
add
mov
(bad)
sbb
cmps
fsubrp
jl
(bad)
int3
ins
dec
gs
and
and
fcmovnu
xor
inc
xor
adc
or
imul
adc
ds
les
fs
mov
sub
test
xor
inc
in
sti
lahf
xchg
xlat
sbb
xor
nop
(bad)
ror
cli
xor
fmulp
fldcw
scas
mov
dec
push
xor
inc
mov
dec
add
cmps
xor
and
or
cmps
inc
push
add
out
adc
inc
or
xchg
inc
sub
push
xor
add
popf
scas
add
push
(bad)
dec
and
cli
es
into
sti
xlat
fsubr
push
pop
mov
sub
arpl
dec
xchg
xor
movs
std
arpl
sbb
in
aam
fist
dec
cmps
retf
push
mov
loop
fwait
xchg
call
out
loopne
or
jae
adc
push
mov
sbb
inc
xor
(bad)
mov
push
mov
push
mov
imul
push
fist
repnz
(bad)
push
jbe
pop
adc
adc
xor
cmp
inc
xchg
ss
add
sar
push
cmp
mov
add
shr
adc
repz
test
or
mov
daa
test
stos
xchg
outs
sub
mov
movs
adc
push
mov
mov
scas
mov
sub
das
ss
mov
int3
jnp
fcmovne
push
fcomip
out
sub
js
call
sbb
cmp
inc
pusha
outs
ins
(bad)
mov
push
cwde
xor
pop
(bad)
mov
das
retf
mov
out
mov
std
ds
cli
call
jo
ins
sub
mov
sbb
pop
push
retf
mov
int
inc
shl
push
mov
sub
or
push
sub
mov
hlt
mov
pop
aad
mov
mov
lds
push
sbb
jp
push
test
ja
cmp
test
xacquire
pop
xor
cmp
fild
pop
cmp
pop
pushf
dec
xlat
pop
frstor
fcomip
je
xchg
aaa
pop
imul
mov
out
cmp
mov
cmp
stc
addr16
sbb
xchg
test
xchg
movs
mov
movs
mov
jg
iret
imul
inc
add
cwde
or
jge
lahf
(bad)
jl
hlt
pop
shl
int3
ret
mov
leave
ins
jecxz
pop
mov
dec
pop
mov
outs
rol
adc
outs
push
outs
xlat
mov
or
sbb
popf
cli
dec
scas
cmps
in
xor
jp
data16
pop
mov
cmp
xchg
ins
es
test
mov
or
icebp
in
mov
lds
push
pop
scas
jg
mov
sqrtps
in
cwde
dec
add
dec
out
test
inc
movzx
lods
xor
enter
(bad)
retf
ror
dec
add
xor
adc
in
int
dec
inc
imul
lahf
ins
add
fs
loop
inc
jns
lahf
xchg
dec
sti
mov
sub
sbb
xlat
ins
stos
xadd
xchg
ficomp
sub
in
(bad)
sbb
lahf
xor
jmp
test
dec
out
cmp
pop
cld
bound
xlat
mov
xchg
aaa
xor
mov
(bad)
ror
jbe
sub
pushf
cmps
push
sub
push
add
mov
cmp
xchg
enter
test
xchg
lds
dec
dec
cmp
cs
test
popf
fwait
(bad)
std
aas
mov
mov
sub
or
sub
xchg
icebp
hlt
ins
pop
xchg
stos
repz
inc
mov
mov
push
dec
iret
mov
and
jl
cmps
popf
adc
push
call
mov
test
arpl
push
mov
and
(bad)
cli
test
movs
bound
dec
xchg
pop
aas
fnsave
pop
jbe
popf
dec
ss
ins
xchg
add
mov
ja
out
sub
mov
rcr
cmp
(bad)
loopne
out
sbb
push
popf
sub
jp
jnp
xor
jo
shl
icebp
test
loope
and
mov
push
adc
ret
sbb
fbstp
ret
jle
pop
mov
in
scas
in
mov
cwde
add
jge
test
loopne
mov
fild
inc
aad
sub
lea
mov
mov
dec
push
in
jmp
mov
out
repnz
bound
call
and
lods
fwait
adc
jmp
scas
mov
in
inc
pop
cwde
xchg
scas
out
or
fdivr
or
cmp
pop
pop
and
or
xchg
(bad)
pop
cdq
fbstp
inc
scas
jp
or
dec
loop
scas
adc
pop
inc
push
mov
inc
sbb
xchg
and
fmul
ret
lock
mov
int3
repz
cmp
ja
add
push
or
pop
pushf
out
push
push
sahf
repz
pop
mov
sbb
xor
and
outs
xchg
fwait
cmp
sbb
repz
cwde
je
push
and
xchg
(bad)
pushf
pop
loopne
sahf
pop
retf
cmp
jae
pop
push
out
sbb
mov
pop
xchg
int
scas
jne
repnz
inc
cmp
cmp
and
sub
or
dec
out
jbe
adc
pop
dec
es
inc
xchg
xchg
jne
jle
jmp
xor
scas
push
pop
sbb
push
cmp
xor
xor
xchg
jge
ins
movs
cmps
mul
pop
jecxz
ret
mov
test
lods
mov
gs
jbe
dec
js
add
cmps
test
push
pop
sub
adc
les
add
clc
push
mov
mov
fild
inc
ss
rcl
jmp
ss
mov
retf
bnd
dec
and
inc
fistp
xor
enter
loopne
das
int
test
pop
jmp
ins
lods
xchg
leave
dec
xchg
jne
pop
shl
add
(bad)
mov
adc
aam
das
xchg
(bad)
sti
cmp
and
pop
pop
dec
jns
shl
and
dec
xlat
xor
xchg
fdiv
inc
loopne
bound
xchg
xor
add
pop
js
xor
xor
sar
sub
aas
mov
adc
or
std
inc
xchg
pusha
call
xlat
dec
xor
ds
cmp
sbb
jecxz
xor
fnstcw
push
fwait
push
outs
push
adc
xlat
ja
mov
push
fisttp
ror
jbe
jnp
xchg
sbb
aas
ja
test
ins
and
fnsave
ins
inc
fild
outs
mov
xchg
or
xor
dec
(bad)
nop
jnp
jnp
shr
jge
movs
mov
push
cs
mov
popf
retw
test
mov
mov
add
or
div
cs
dec
aaa
jbe
lea
dec
push
cmc
xor
rol
inc
xor
(bad)
not
sub
inc
loope
outs
aaa
test
and
sbb
loope
aad
inc
push
dec
test
push
push
xor
(bad)
sub
dec
mov
push
test
inc
and
sti
inc
mov
xor
pop
or
cli
jl
movs
xor
mov
cli
mov
mov
sub
and
add
xchg
jg
adc
aas
enter
lds
dec
push
out
pop
retf
fidiv
aad
xlat
stos
push
ret
out
mov
add
or
kmovw
push
pop
pusha
push
and
sbb
fisubr
cdq
inc
iret
test
jnp
fdiv
ret
out
inc
sub
xchg
inc
lock
js
jmp
xlat
mov
jg
stos
pop
mov
push
pop
out
mov
mov
(bad)
lahf
push
mov
mov
mov
pop
stos
pop
outs
push
or
mov
call
mov
xchg
add
fwait
ror
imul
fs
xor
push
ins
or
and
imul
mov
adc
pop
adc
lahf
push
lds
das
sahf
fsub
mov
add
push
stos
dec
sub
mov
scas
in
jo
das
cmp
rcr
jb
adc
fst
mov
sub
retf
enter
pop
jge
sar
cmp
sub
jg
retf
and
rcr
mov
test
add
dec
jne
jmp
mov
cmps
aas
and
into
ds
xchg
nop
cs
mov
dec
(bad)
(bad)
fcmovb
in
icebp
cli
pop
cmp
sub
fnstcw
and
dec
mov
sub
pushf
es
das
lods
stos
push
call
mov
pop
inc
inc
and
es
jns
adc
jo
dec
ror
and
mov
lods
push
pop
fdivrp
or
pushf
loope
scas
push
push
jbe
test
pop
pop
xchg
pop
xchg
push
fsub
mov
xor
retf
jmp
cwde
push
sbb
daa
test
sbb
jecxz
ror
iret
xor
rcr
mov
xor
into
ins
inc
adc
sbb
ins
ins
in
lock
mov
add
ret
es
hlt
es
lods
fsubrp
cmc
or
cmp
mov
(bad)
jae
jne
out
fld
in
push
movs
fcomp
dec
nop
xchg
das
jb
or
jno
xchg
test
xchg
sub
arpl
mov
and
lea
xchg
ins
aam
sahf
push
sub
aad
add
mov
and
mov
mov
pop
mov
retf
ss
jmp
out
jl
mov
mov
mov
mov
push
adc
(bad)
sub
jns
push
clc
lods
sub
jmp
push
lahf
pop
push
push
ss
and
(bad)
int
xor
ret
retf
and
cmps
and
mov
rcr
push
clc
fcomp
cmc
and
mov
pop
cmps
nop
cmp
imul
sahf
in
test
int3
pop
push
xor
fadd
sahf
ds
cli
into
daa
pop
lea
push
pop
mov
(bad)
shl
(bad)
jo
inc
inc
add
or
je
rcr
imul
push
aam
pop
dec
pop
cld
repz
stos
int
std
xor
cmp
test
cmc
nop
dec
out
stos
lods
cmps
dec
sub
adc
xor
aas
std
cmp
and
in
mov
aaa
lea
into
jnp
outs
cwde
inc
imul
cli
scas
cmp
out
mov
aam
push
neg
test
push
mov
in
adc
(bad)
or
test
(bad)
aas
ds
xchg
popf
xor
dec
cli
add
(bad)
mov
add
add
or
add
add
icebp
pop
add
push
pop
and
je
add
add
add
add
add
add
add
ja
mov
mov
or
add
inc
pop
add
add
dec
add
outs
add
outs
add
add
add
add
js
add
add
add
clc
aad
lock
int3
add
add
add
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
adc
add
push
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
jg
sbb
cmp
je
cmp
jg
cmp
jp
xor
jle
aas
nop
je
push
(bad)
jo
cmp
sub
nop
je
cmp
je
mov
nop
je
or
nop
je
push
out
arpl
nop
je
push
out
arpl
nop
je
cld
xchg
jb
cmp
jo
cmp
arpl
nop
je
push
inc
add
dec
add
add
push
in
loopne
push
and
add
add
cmp
add
push
add
add
add
xchg
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
jo
or
repnz
add
add
add
or
jnp
add
add
add
jno
add
push
or
sub
add
cs
js
add
add
cmp
add
adc
add
cmp
add
add
add
add
pusha
cs
popa
je
add
bound
add
push
or
add
add
or
inc
add
inc
cs
je
add
add
mov
add
mov
add
pop
add
add
add
inc
add
shr
js
popa
je
add
add
add
add
add
add
lock
inc
add
shr
jae
arpl
add
test
add
add
add
add
or
inc
add
inc
cs
ins
outs
arpl
add
add
add
xchg
add
outs
or
add
add
add
add
add
add
jmp
push
mov
sub
cmp
mov
mov
jb
cmp
ja
push
mov
push
push
mov
xor
xor
push
push
push
push
call
cmp
jge
add
jmp
add
mov
xor
push
inc
push
push
push
call
mov
mov
or
jne
mov
mov
dec
inc
test
mov
jg
mov
pop
pop
pop
and
jmp
and
leave
ret
push
mov
sub
and
push
mov
push
push
mov
mov
lea
push
push
push
push
call
add
inc
push
mov
push
inc
push
push
inc
call
mov
mov
or
jne
mov
lea
mov
add
dec
dec
dec
test
mov
mov
jg
mov
pop
pop
pop
and
leave
ret
push
mov
push
mov
pop
mov
push
push
call
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
test
jg
jl
test
jae
mov
inc
neg
adc
neg
push
pop
push
push
call
pop
ret
push
push
push
lea
pop
mov
and
shr
cmp
jge
add
jmp
add
mov
dec
dec
jne
and
pop
pop
ret
push
mov
push
push
mov
push
push
push
or
mov
test
mov
jne
xor
jmp
push
cmp
pop
jne
mov
cmp
jne
mov
mov
mov
xor
cmp
jmp
mov
movzx
movzx
mov
sub
push
mov
call
mov
push
mov
mov
call
mov
cmp
jne
mov
dec
mov
mov
shr
and
cmp
jne
mov
mov
mov
lea
movzx
lea
sub
mov
movzx
mov
push
call
mov
push
mov
mov
call
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
pop
pop
pop
leave
ret
push
cmp
mov
jne
xor
jmp
mov
shr
mov
cmp
jne
mov
jmp
push
pop
shl
dec
and
pop
ret
push
mov
sub
mov
push
push
push
mov
mov
test
jne
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
pop
lea
jmp
push
cmp
pop
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
xor
push
test
pop
jne
dec
mov
mov
shr
test
je
push
mov
pop
sub
mov
mov
shr
mov
and
mov
mov
jmp
mov
mov
movzx
movzx
sub
push
mov
mov
call
mov
push
mov
mov
call
mov
cmp
jne
mov
dec
mov
mov
shr
and
cmp
jne
mov
mov
mov
lea
movzx
lea
sub
mov
mov
movzx
push
mov
call
mov
push
mov
mov
call
mov
jmp
mov
mov
xor
mov
movzx
dec
add
mov
mov
shr
test
jne
dec
dec
jmp
push
mov
pop
lea
rep
mov
mov
sub
mov
dec
push
mov
mov
add
mov
shr
mov
lea
and
mov
mov
sub
mov
and
pop
mov
sub
mov
sub
mov
push
mov
pop
mov
rep
mov
jmp
mov
lea
cmp
mov
jne
mov
mov
jmp
xor
lea
mov
mov
shr
test
jne
mov
dec
shr
test
je
mov
mov
mov
shr
sub
and
mov
shl
mov
mov
lea
sub
mov
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
and
mov
lea
sub
mov
dec
sub
mov
mov
push
mov
mov
lea
mov
pop
mov
rep
mov
call
xor
pop
pop
pop
leave
ret
push
push
push
mov
call
mov
mov
push
lea
lea
lea
pop
rep
mov
pop
pop
lea
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
mov
jne
xor
jmp
movzx
push
call
mov
cmp
jne
call
cmp
jne
push
push
lea
push
push
lea
push
push
push
push
call
mov
cmp
je
cmp
jg
lea
mov
push
call
lea
push
push
lea
push
push
push
push
call
mov
jmp
mov
pop
pop
leave
ret
mov
call
sub
push
push
mov
test
jne
xor
jmp
push
call
mov
test
jne
call
cmp
jne
push
lea
call
and
push
lea
lea
call
push
mov
call
pop
push
call
lea
lea
push
call
mov
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
push
call
push
call
pop
mov
pop
jmp
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
test
jne
xor
jmp
push
call
mov
test
jne
call
cmp
jne
push
lea
call
and
push
lea
lea
call
push
mov
call
pop
push
call
lea
lea
push
call
mov
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
push
call
push
call
pop
mov
pop
jmp
mov
mov
pop
pop
mov
leave
ret
push
mov
mov
mov
inc
inc
cmp
jb
ja
test
je
jmp
or
pop
ret
push
pop
pop
ret
xor
pop
ret
push
mov
mov
inc
inc
inc
inc
cmp
jb
ja
test
je
jmp
or
pop
ret
push
pop
pop
ret
xor
pop
ret
push
push
push
push
push
mov
mov
mov
mov
inc
inc
inc
inc
cmp
je
mov
call
mov
mov
call
cmp
jb
ja
test
je
jmp
or
jmp
push
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
xor
mov
mov
mov
mov
cmp
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
inc
cmp
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
mov
mov
pop
pop
leave
ret
mov
push
push
mov
lea
cmp
je
lea
push
push
call
mov
xor
cmp
pop
jle
cmp
jle
mov
mov
mov
inc
cmp
jl
push
call
pop
mov
mov
and
mov
pop
pop
pop
ret
mov
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
push
call
xor
pop
mov
mov
mov
pop
ret
push
call
ret
mov
mov
dec
push
push
call
ret
mov
mov
sub
push
push
call
ret
mov
cmp
jne
push
cmp
pop
jl
mov
shr
jmp
cmp
jl
push
pop
add
push
call
ret
push
mov
push
mov
push
mov
push
cmp
je
cmp
jb
lea
push
push
mov
call
mov
xor
mov
imul
mov
div
cmp
je
lea
push
push
mov
call
xor
test
jbe
push
call
mov
pop
test
jne
lea
push
push
mov
call
mov
cmp
jl
mov
mov
imul
push
push
push
call
add
push
call
pop
mov
mov
pop
pop
pop
pop
ret
push
call
ret
mov
mov
mov
sub
imul
push
mov
imul
imul
add
add
push
push
call
add
ret
push
mov
call
mov
mov
push
inc
push
call
inc
pop
ret
push
mov
push
mov
mov
mov
lea
cmp
jle
sub
mov
test
jle
lea
push
push
mov
call
sub
pop
pop
ret
push
push
mov
xor
cmp
jle
mov
mov
mov
mov
mov
call
test
je
inc
cmp
jl
or
pop
pop
ret
mov
jmp
push
mov
push
and
push
push
mov
call
test
jl
mov
mov
mov
add
push
call
mov
jmp
mov
push
mov
and
and
and
call
mov
pop
leave
ret
cmp
je
mov
mov
mov
call
test
jne
push
pop
jmp
xor
ret
push
push
mov
xor
cmp
jle
mov
push
mov
call
test
jne
inc
cmp
jl
or
pop
pop
ret
mov
jmp
push
mov
push
xor
cmp
mov
jne
mov
mov
cmp
jne
mov
push
call
mov
jmp
push
mov
push
mov
mov
mov
mov
call
mov
pop
leave
ret
push
mov
push
and
push
push
mov
call
test
jl
mov
push
mov
call
mov
jmp
mov
push
mov
and
and
and
call
mov
pop
leave
ret
mov
call
sub
cmp
push
push
push
je
add
mov
call
push
lea
call
and
mov
mov
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
push
lea
mov
push
push
call
mov
mov
mov
call
push
test
sete
and
call
test
pop
jne
lea
call
mov
lea
dec
mov
push
push
push
call
test
je
mov
lea
push
call
and
lea
call
jmp
push
call
pop
mov
jmp
and
lea
call
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
push
pop
ret
push
push
mov
xor
push
mov
mov
mov
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
mov
mov
add
mov
cmp
je
test
je
push
call
jmp
sub
mov
jmp
or
test
jl
cmp
je
mov
mov
and
mov
sub
push
push
lea
mov
push
call
mov
and
push
call
push
call
pop
mov
mov
jmp
mov
mov
inc
mov
mov
mov
call
test
jne
mov
cmp
jge
mov
mov
mov
mov
mov
call
test
je
push
mov
call
inc
mov
cmp
jl
cmp
je
mov
mov
cmp
je
mov
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
je
lea
call
lea
mov
push
mov
mov
call
test
je
lea
push
mov
lea
call
push
mov
or
call
push
call
pop
pop
jmp
inc
mov
mov
mov
inc
cmp
mov
jne
push
pop
jmp
xor
jmp
push
mov
inc
push
push
call
test
je
push
lea
call
mov
push
lea
mov
call
push
mov
lea
mov
call
push
mov
lea
mov
call
push
call
push
call
push
mov
call
add
lea
mov
push
push
push
call
mov
mov
mov
call
push
mov
call
test
pop
je
xor
push
call
pop
mov
jmp
mov
mov
add
jmp
push
call
push
call
pop
pop
xor
mov
pop
pop
pop
mov
leave
ret
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
xor
ret
push
pop
ret
push
mov
push
push
mov
push
push
mov
and
mov
mov
and
and
lea
mov
mov
and
mov
cmp
jge
mov
mov
mov
mov
call
test
je
push
mov
call
inc
jmp
cmp
je
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
mov
mov
mov
inc
cmp
mov
jne
mov
mov
call
test
je
inc
mov
jmp
mov
mov
mov
inc
cmp
mov
jne
cmp
jge
mov
mov
mov
inc
cmp
mov
mov
je
push
mov
call
mov
jmp
mov
jmp
xor
pop
pop
pop
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
and
push
push
push
mov
push
lea
call
and
push
lea
call
mov
lea
push
lea
push
lea
mov
mov
call
push
mov
neg
sbb
inc
call
push
or
call
pop
test
pop
jne
push
lea
call
push
lea
mov
call
lea
lea
push
lea
push
mov
mov
call
push
mov
neg
sbb
inc
call
push
or
call
pop
test
pop
jne
lea
push
push
push
mov
call
test
jne
xor
jmp
mov
mov
mov
call
test
je
inc
jmp
mov
cmp
jne
cmp
je
push
pop
jmp
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
mov
mov
mov
mov
call
test
je
inc
mov
mov
mov
jmp
mov
lea
mov
push
push
push
call
mov
mov
and
call
test
push
sete
or
call
test
pop
je
push
mov
mov
push
call
test
mov
jge
xor
jmp
mov
add
mov
mov
mov
call
test
je
inc
mov
jmp
mov
mov
pop
pop
pop
mov
leave
ret
push
push
push
mov
mov
xor
mov
mov
mov
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
mov
mov
pop
pop
pop
ret
push
push
mov
mov
and
and
and
push
call
mov
mov
mov
mov
inc
inc
test
jne
mov
pop
mov
mov
pop
ret
push
mov
push
call
mov
mov
mov
mov
inc
mov
mov
and
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
add
mov
mov
inc
inc
test
jne
mov
pop
add
mov
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
xor
mov
lea
cmp
mov
jle
mov
sub
cmp
jne
cmp
jne
mov
push
call
jmp
mov
mov
mov
push
lea
call
and
push
lea
call
xor
test
jle
mov
mov
add
mov
mov
inc
cmp
jl
mov
mov
and
lea
push
mov
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
push
push
push
mov
mov
test
jne
mov
jmp
mov
mov
cmp
jge
xor
test
jle
lea
cmp
jge
mov
mov
add
mov
mov
cmp
jne
inc
cmp
jl
cmp
je
inc
cmp
jl
or
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
add
lea
push
mov
call
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
push
mov
call
mov
and
mov
lea
push
lea
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
push
push
mov
lea
cmp
je
push
push
call
mov
xor
cmp
pop
jle
cmp
jle
mov
mov
mov
inc
cmp
jl
push
call
pop
mov
mov
and
mov
pop
pop
pop
ret
push
push
push
mov
mov
mov
sub
dec
cmp
jle
cmp
jle
mov
cdq
sub
sar
jmp
xor
cmp
setle
dec
and
add
lea
cmp
jge
sub
mov
add
push
call
pop
pop
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
mov
push
call
test
pop
jne
mov
push
mov
lea
push
call
pop
ret
push
call
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
cmp
je
cmp
jl
push
lea
call
mov
mov
inc
push
push
push
push
push
push
call
cmp
jne
lea
push
push
mov
call
mov
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
push
lea
cmp
jl
push
lea
call
lea
mov
mov
push
lea
inc
push
push
push
push
push
push
push
call
cmp
mov
pop
setne
cmp
mov
jne
lea
push
push
mov
call
mov
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
push
and
lea
push
push
push
mov
push
call
mov
pop
leave
ret
push
push
mov
mov
xor
mov
mov
mov
push
call
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
pop
mov
mov
pop
ret
push
mov
push
push
push
push
mov
push
xor
mov
xor
mov
cmp
jl
cmp
jg
movsx
sub
push
cdq
mov
push
push
mov
push
mov
call
mov
add
adc
inc
mov
jmp
mov
test
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
push
xor
mov
xor
mov
cmp
jl
cmp
jg
movsx
sub
push
cdq
mov
push
push
mov
push
mov
call
mov
add
adc
inc
mov
jmp
mov
test
je
mov
mov
pop
pop
mov
pop
leave
ret
push
push
mov
push
xor
mov
xor
mov
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jl
cmp
jg
movsx
sub
push
pop
call
xor
or
or
inc
jmp
test
je
mov
pop
pop
pop
ret
push
mov
push
push
push
push
mov
push
xor
mov
xor
mov
cmp
jb
cmp
ja
movzx
sub
push
cdq
mov
push
push
mov
push
mov
call
mov
add
adc
inc
mov
inc
jmp
mov
test
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
mov
push
xor
mov
push
call
mov
cmp
jl
push
mov
call
mov
mov
mov
push
push
lea
mov
call
mov
mov
mov
and
call
test
pop
pop
setne
pop
leave
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
mov
je
lea
mov
mov
inc
cmp
jae
cmp
je
movzx
mov
inc
inc
inc
inc
inc
jmp
cmp
jb
push
pop
cmp
jb
inc
cmp
jl
movzx
movzx
sub
cmp
je
mov
mov
inc
cmp
jb
cmp
jae
movzx
sub
shl
or
dec
jne
mov
cmp
jae
cmp
je
jmp
sub
cmp
jae
cmp
je
mov
and
shr
sub
sub
mov
mov
add
add
add
cmp
jne
push
pop
jmp
xor
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
mov
lea
mov
and
xor
and
push
and
push
call
mov
cmp
jl
push
mov
call
mov
mov
mov
push
push
lea
mov
call
mov
mov
mov
and
call
test
pop
pop
setne
pop
leave
ret
push
mov
sub
mov
push
push
push
xor
mov
cmp
mov
mov
je
mov
movzx
inc
inc
inc
cmp
mov
jae
mov
test
je
mov
inc
jmp
cmp
jb
cmp
jae
mov
cmp
jae
cmp
je
movzx
inc
inc
inc
cmp
mov
jb
cmp
jae
add
add
shl
or
add
push
pop
push
pop
push
pop
shl
cmp
jb
add
inc
cmp
jb
mov
test
je
lea
mov
shl
shr
add
mov
lea
inc
shl
dec
sub
cmp
je
mov
mov
shr
mov
and
add
mov
inc
test
jne
mov
mov
cmp
jne
push
pop
jmp
xor
mov
mov
pop
pop
pop
leave
ret
mov
xor
cmp
je
push
mov
inc
inc
inc
cmp
jne
pop
and
mov
ret
mov
xor
cmp
je
inc
cmp
jne
and
mov
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
push
call
pop
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
push
call
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
push
mov
mov
shl
mov
mov
mov
test
je
push
call
push
call
pop
pop
add
dec
jne
pop
pop
push
mov
push
call
pop
leave
ret
push
push
mov
mov
cmp
je
mov
and
and
push
call
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
mov
mov
pop
pop
ret
push
mov
push
call
mov
mov
mov
mov
inc
mov
mov
and
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
lea
mov
mov
inc
inc
inc
inc
test
jne
mov
pop
add
mov
pop
ret
push
mov
push
mov
and
sub
push
push
push
call
mov
leave
ret
push
mov
push
push
and
push
push
call
mov
leave
ret
push
push
mov
push
mov
mov
mov
lea
cmp
jle
mov
sub
test
jle
lea
mov
imul
add
lea
push
lea
lea
lea
push
push
call
add
sub
mov
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
push
mov
mov
mov
sub
dec
cmp
jle
cmp
jle
mov
cdq
sub
sar
jmp
xor
cmp
setle
dec
and
add
lea
cmp
jge
sub
mov
add
push
call
pop
pop
pop
ret
mov
call
sub
push
mov
push
mov
push
mov
lea
xor
mov
mov
cmp
jle
mov
sub
cmp
jne
cmp
jne
mov
push
call
jmp
mov
mov
mov
push
lea
call
and
push
lea
call
xor
test
jle
lea
mov
mov
mov
mov
inc
inc
inc
cmp
jl
mov
mov
and
lea
push
mov
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
mov
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
jmp
or
ret
push
push
call
test
setne
ret
push
mov
xor
call
test
jne
pop
ret
push
call
test
setne
pop
ret
push
push
mov
mov
cmp
jg
push
call
push
push
call
mov
mov
call
test
jbe
cmp
ja
push
pop
jmp
xor
pop
pop
ret
push
push
mov
mov
push
mov
cmp
mov
jg
push
mov
call
push
push
push
push
call
mov
mov
call
mov
pop
pop
pop
ret
push
push
mov
call
push
mov
mov
call
mov
test
je
push
lea
call
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
pop
ret
mov
call
neg
sbb
push
inc
mov
pop
sete
pop
ret
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
pop
ret
push
mov
call
push
call
pop
pop
ret
push
mov
xor
push
mov
mov
mov
call
mov
pop
ret
push
mov
push
and
and
and
call
mov
mov
mov
mov
and
mov
mov
pop
ret
push
mov
xor
push
mov
mov
mov
call
mov
pop
ret
push
push
mov
mov
cmp
je
mov
and
and
push
call
mov
mov
mov
mov
inc
inc
test
jne
mov
mov
mov
pop
pop
ret
push
mov
push
mov
and
sub
push
push
push
call
mov
leave
ret
push
mov
push
push
and
push
push
call
mov
leave
ret
mov
push
mov
push
mov
lea
mov
cmp
jle
mov
sub
test
jle
mov
push
lea
sub
inc
push
lea
add
push
push
call
add
sub
pop
mov
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
push
and
push
mov
push
call
mov
pop
pop
ret
push
push
mov
push
mov
xor
mov
mov
and
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
mov
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
mov
xor
mov
mov
mov
cmp
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
mov
mov
pop
leave
ret
jmp
push
mov
push
mov
call
test
je
push
push
push
push
push
push
push
call
xor
cmp
setne
mov
mov
pop
pop
ret
push
mov
mov
cmp
je
push
call
test
jne
xor
pop
ret
or
mov
pop
ret
push
push
push
push
push
call
ret
mov
push
neg
sbb
push
and
or
push
push
call
ret
push
push
call
ret
push
mov
push
lea
push
push
and
push
push
push
call
mov
mov
test
mov
setne
leave
ret
push
mov
mov
cmp
jbe
mov
push
push
push
call
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
call
ret
xor
cmp
setne
inc
push
push
call
ret
push
mov
push
mov
cmp
jbe
mov
lea
push
push
and
push
push
push
call
mov
mov
test
mov
setne
leave
ret
push
mov
push
mov
push
mov
and
lea
and
push
mov
push
push
call
mov
add
test
je
test
je
add
sub
je
jmp
xor
jmp
mov
pop
pop
pop
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
call
mov
pop
ret
push
mov
push
call
mov
pop
ret
push
mov
push
mov
call
push
and
mov
call
test
mov
jne
cmp
je
mov
push
mov
lea
push
call
mov
pop
pop
ret
push
mov
push
push
push
mov
call
mov
and
push
mov
call
mov
pop
lea
push
push
call
test
mov
jne
mov
push
mov
lea
push
call
xor
movsx
mov
mov
inc
cmp
jbe
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
call
mov
mov
neg
sbb
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
mov
mov
mov
pop
ret
jmp
movzx
cmp
jg
cmp
jge
cmp
jl
cmp
jle
cmp
jle
cmp
jle
push
call
ret
cmp
jl
cmp
jle
cmp
jne
and
and
xor
ret
push
mov
push
call
mov
movzx
cmp
jg
cmp
jge
cmp
jl
cmp
jle
cmp
jle
cmp
jle
push
push
call
pop
ret
cmp
jl
cmp
jle
cmp
jne
push
push
push
call
add
xor
jmp
push
mov
mov
call
test
jl
push
push
push
call
and
add
xor
pop
ret
push
mov
call
test
jge
mov
mov
pop
ret
push
mov
push
mov
push
call
test
jge
cmp
jne
mov
push
mov
lea
push
call
mov
mov
pop
pop
ret
mov
call
sub
push
mov
mov
push
lea
call
push
and
mov
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
call
cmp
mov
jbe
mov
cmp
jne
push
lea
call
add
dec
jne
cmp
jne
mov
lea
call
push
lea
mov
call
mov
push
call
pop
mov
lea
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
push
mov
sub
push
push
push
mov
push
xor
pop
lea
and
mov
mov
mov
rep
push
lea
pop
push
push
stos
call
lea
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
and
cmp
push
mov
jae
push
call
jmp
mov
mov
call
mov
pop
leave
ret
mov
call
sub
push
mov
mov
lea
push
call
mov
and
mov
call
push
call
pop
mov
mov
leave
ret
mov
call
sub
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
cmp
jbe
push
mov
mov
push
pop
shl
test
je
cmp
je
push
lea
call
push
lea
call
not
and
add
dec
jne
pop
cmp
je
cmp
je
push
lea
call
mov
lea
call
push
lea
mov
call
mov
push
call
pop
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
mov
lea
push
call
mov
and
mov
call
push
call
pop
mov
mov
leave
ret
push
push
mov
xor
push
mov
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
add
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
add
mov
pop
pop
pop
ret
push
mov
sub
lea
push
call
mov
leave
ret
push
push
shr
push
call
neg
sbb
neg
ret
push
mov
push
push
lea
push
push
lea
mov
push
mov
push
call
test
jne
cmp
sbb
and
add
mov
xor
jmp
movzx
movzx
shl
add
mov
mov
pop
pop
leave
ret
xor
add
push
push
adc
push
push
mov
push
call
mov
mov
pop
ret
push
push
push
mov
push
push
push
mov
call
mov
xor
add
mov
adc
mov
cmp
ja
jb
cmp
jae
and
jmp
sub
push
sbb
push
push
push
call
test
ja
cmp
jbe
or
xor
jmp
mov
mov
pop
pop
ret
push
mov
sub
push
mov
mov
mov
and
and
cmp
jb
cmp
jae
cmp
jb
cmp
ja
cmp
jb
cmp
ja
cmp
ja
cmp
ja
cmp
ja
push
lea
mov
xor
mov
push
div
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
div
sub
mov
imul
add
shr
add
test
jne
mov
xor
div
test
jne
mov
mov
div
test
jne
mov
dec
push
pop
mov
je
movzx
add
inc
cmp
jb
mov
mov
add
push
push
push
lea
lea
push
call
xor
add
push
push
adc
push
push
call
xor
add
pop
pop
adc
mov
mov
mov
jmp
xor
pop
leave
ret
push
mov
sub
lea
push
mov
push
call
lea
push
push
call
pop
leave
ret
mov
cmp
jae
mov
inc
mov
ret
mov
call
sub
push
push
mov
push
lea
mov
mov
push
push
call
xor
cmp
jne
xor
cmp
jbe
lea
call
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
jne
cmp
jne
mov
lea
mov
mov
mov
call
mov
lea
push
push
push
push
call
cmp
jne
cmp
jne
push
lea
call
jmp
cmp
jne
lea
mov
push
push
mov
call
cmp
jne
lea
mov
push
push
mov
call
cmp
jne
lea
mov
push
push
mov
call
cmp
jne
lea
mov
push
push
mov
call
cmp
jne
mov
lea
push
call
lea
mov
call
or
push
call
inc
pop
cmp
jb
xor
mov
pop
pop
pop
mov
leave
ret
mov
jmp
mov
lea
mov
call
push
call
pop
mov
jmp
jmp
mov
call
sub
push
xor
push
mov
mov
mov
lea
push
mov
push
push
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
mov
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
lea
push
mov
push
push
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
cmp
mov
setne
mov
jmp
mov
or
lea
call
mov
mov
pop
pop
mov
leave
ret
push
call
pop
ret
push
mov
push
and
cmp
push
push
push
mov
jbe
mov
mov
mov
mov
mov
call
test
je
inc
add
mov
cmp
jb
xor
cmp
je
cmp
jbe
mov
mov
mov
mov
mov
call
test
je
inc
cmp
jb
jmp
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
pop
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
mov
push
push
push
xor
test
jbe
mov
mov
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jb
test
je
mov
xor
test
jbe
mov
mov
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jb
jmp
push
mov
call
jmp
mov
push
call
mov
jmp
xor
pop
pop
pop
pop
ret
mov
call
push
push
mov
and
push
push
push
mov
test
mov
jbe
mov
mov
mov
cmp
jne
mov
cmp
jne
cmp
je
cmp
jne
jmp
cmp
jne
inc
add
cmp
jb
jmp
call
jmp
call
cmp
mov
je
mov
push
call
jmp
cmp
push
jne
mov
call
jmp
mov
call
test
setne
test
jne
mov
test
je
mov
xor
test
jbe
mov
mov
mov
cmp
jne
mov
cmp
jne
cmp
je
cmp
jne
jmp
cmp
jne
inc
add
cmp
jb
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
call
test
je
cmp
je
cmp
jne
cmp
jne
push
mov
push
jmp
push
mov
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
call
test
je
cmp
je
cmp
jne
cmp
jne
push
mov
push
jmp
push
mov
push
push
push
call
test
jne
cmp
je
mov
cmp
je
push
call
pop
mov
xor
cmp
mov
je
mov
call
mov
mov
or
push
call
mov
lea
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
push
and
push
push
lea
push
and
push
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
and
push
and
and
push
lea
mov
push
push
push
push
call
and
mov
mov
test
je
mov
push
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
mov
and
mov
mov
ret
push
mov
mov
push
and
push
mov
cmp
jne
xor
jmp
lea
mov
and
cmp
jne
xor
jmp
lea
mov
push
push
push
mov
call
mov
pop
pop
pop
ret
cmp
je
cmp
je
cmp
je
test
je
push
pop
cmp
je
mov
ret
xor
ret
push
pop
ret
push
pop
ret
push
pop
ret
mov
mov
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
mov
cmp
mov
jb
mov
mov
lea
push
push
mov
push
push
call
mov
mov
mov
mov
pop
pop
test
pop
jne
xor
jmp
push
pop
call
pop
ret
mov
mov
mov
xor
mov
mov
mov
mov
ret
push
mov
push
mov
mov
test
je
push
call
test
mov
je
xor
jmp
and
add
mov
adc
pop
pop
ret
sub
je
dec
je
dec
je
sub
je
sub
je
mov
ret
mov
ret
mov
ret
mov
ret
push
pop
ret
xor
ret
mov
mov
and
mov
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
mov
cmp
mov
jb
mov
mov
lea
push
push
mov
push
push
call
mov
mov
mov
mov
neg
sbb
pop
pop
and
pop
pop
ret
push
mov
push
push
mov
push
push
mov
xor
mov
sub
je
dec
je
dec
je
push
pop
jmp
push
jmp
push
pop
push
mov
lea
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
neg
sbb
pop
and
pop
pop
leave
ret
push
mov
mov
call
and
pop
ret
push
mov
push
mov
cmp
je
cmp
je
mov
call
mov
call
mov
mov
mov
mov
xor
pop
cmp
pop
setne
ret
push
mov
push
push
mov
cmp
jne
mov
mov
sub
push
cdq
add
mov
lea
push
push
adc
mov
push
push
call
mov
mov
mov
mov
test
lea
pop
mov
je
mov
inc
mov
jmp
mov
xor
pop
leave
ret
mov
and
mov
ret
mov
cmp
je
mov
inc
mov
ret
jmp
push
mov
push
mov
cmp
je
cmp
je
mov
call
mov
call
mov
mov
xor
pop
cmp
pop
setne
ret
push
mov
cmp
jne
mov
mov
push
mov
sub
push
call
test
mov
jne
add
adc
mov
pop
mov
mov
pop
ret
mov
and
mov
ret
mov
mov
inc
cmp
mov
jne
jmp
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
mov
push
pop
mov
cmp
jae
mov
cmp
je
cmp
je
mov
call
mov
mov
call
xor
mov
test
setne
mov
pop
pop
ret
push
mov
mov
call
and
pop
ret
push
add
call
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
mov
cmp
je
xor
jmp
mov
mov
sub
push
cdq
add
mov
lea
push
push
adc
mov
push
push
call
test
pop
je
mov
lea
push
push
call
mov
mov
mov
add
test
mov
sete
xor
mov
test
sete
mov
pop
leave
ret
push
mov
call
test
jne
add
adc
or
pop
ret
mov
mov
inc
mov
pop
ret
mov
call
push
push
mov
mov
call
or
xor
mov
lea
mov
push
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
jmp
push
mov
cmp
jne
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
push
and
call
push
call
pop
pop
lea
call
mov
mov
call
push
call
pop
pop
mov
mov
leave
ret
or
xor
mov
mov
mov
mov
ret
mov
call
sub
push
xor
cmp
push
push
mov
jne
mov
jmp
cmp
jne
push
lea
mov
mov
mov
call
lea
mov
call
test
jne
push
call
pop
jmp
lea
mov
push
push
push
call
test
je
mov
push
push
lea
call
test
je
push
or
mov
call
pop
lea
lea
push
push
push
call
test
jne
xor
jmp
push
mov
mov
call
mov
mov
add
adc
xor
cmp
sete
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
cmp
jae
sub
cmp
jb
mov
mov
push
push
add
push
call
mov
mov
add
push
call
add
sub
add
add
mov
adc
push
mov
push
call
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
lea
call
test
je
mov
or
xor
xor
test
jbe
mov
mov
push
call
test
jne
push
mov
or
call
mov
mov
cmp
je
or
push
and
lea
call
test
jne
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
cmp
ja
jb
cmp
jae
lea
lea
push
push
push
call
test
je
cmp
je
push
mov
mov
call
test
jne
push
mov
mov
call
add
mov
adc
cmp
jb
ja
jmp
mov
jmp
mov
or
lea
call
mov
jmp
or
lea
call
mov
cmp
jne
cmp
lea
jne
cmp
jne
xor
jmp
push
mov
mov
push
mov
mov
push
push
call
test
mov
jne
test
je
and
mov
jmp
test
je
mov
xor
pop
pop
ret
mov
call
push
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
mov
jne
lea
push
push
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
push
pop
push
push
push
call
add
test
jne
mov
mov
mov
mov
push
call
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
pop
pop
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
push
cmp
je
mov
mov
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
push
call
test
jne
add
adc
pop
pop
ret
push
mov
push
push
mov
push
mov
call
test
jne
mov
xor
test
setne
test
mov
je
mov
mov
mov
mov
cmp
je
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
sub
mov
add
mov
lea
push
call
test
jne
mov
add
mov
push
push
mov
push
call
mov
cmp
jae
mov
and
inc
cmp
jb
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
test
jne
mov
test
je
mov
lea
push
push
push
call
test
jne
xor
cmp
jae
mov
mov
mov
inc
inc
jmp
mov
jmp
xor
jmp
test
je
push
mov
push
call
pop
pop
pop
pop
ret
xor
mov
mov
mov
mov
push
mov
call
ret
push
mov
push
and
lea
call
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
push
mov
push
push
push
mov
test
je
and
cmp
jbe
mov
jmp
mov
mov
mov
sub
cmp
jae
mov
add
push
push
push
call
sub
add
test
je
add
mov
mov
add
add
mov
push
push
push
call
test
mov
je
cmp
ja
mov
push
push
lea
call
test
jne
xor
cmp
jae
mov
mov
mov
mov
inc
inc
jmp
cmp
mov
ja
xor
pop
pop
pop
pop
ret
mov
jmp
cmp
je
mov
jmp
mov
call
push
mov
push
mov
test
je
mov
push
push
mov
push
call
mov
mov
cmp
jae
mov
mov
and
inc
cmp
jb
mov
push
push
mov
push
call
cmp
je
mov
jmp
push
mov
lea
push
call
test
jne
and
and
mov
and
lea
mov
push
push
push
call
mov
test
je
mov
push
call
or
mov
mov
test
je
mov
push
call
mov
jmp
xor
mov
pop
pop
mov
leave
ret
push
mov
push
xor
mov
mov
lea
mov
call
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
push
mov
mov
test
je
and
push
push
mov
test
jbe
mov
mov
cmp
jne
xor
cmp
jae
mov
add
mov
mov
mov
inc
lea
cmp
jb
mov
and
and
mov
add
mov
sub
mov
mov
lea
push
call
test
jne
mov
add
mov
mov
push
push
mov
push
call
test
mov
jne
mov
test
je
mov
jmp
mov
cmp
jae
mov
mov
and
inc
mov
cmp
jb
push
mov
push
mov
push
call
jmp
mov
mov
sub
cmp
jb
mov
mov
push
add
push
push
call
mov
add
add
test
je
add
xor
pop
pop
pop
ret
push
mov
push
mov
push
mov
push
call
ret
mov
push
mov
push
mov
call
ret
mov
mov
push
mov
call
ret
mov
push
mov
push
mov
push
call
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
push
mov
xor
xor
push
mov
mov
sub
mov
mov
sbb
cmp
ja
jb
cmp
jb
mov
xor
test
jbe
mov
lea
push
push
push
mov
push
call
mov
add
adc
test
jne
mov
mov
pop
pop
pop
test
je
mov
leave
ret
push
mov
mov
test
je
and
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
sub
push
sbb
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
mov
add
pop
adc
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
mov
lea
push
push
mov
push
push
call
mov
mov
test
je
mov
xor
add
adc
add
adc
pop
pop
pop
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
mov
test
je
and
push
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
cmp
jne
mov
push
pop
shl
call
mov
lea
and
mov
xor
mov
mov
mov
mov
call
add
adc
xor
add
adc
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
sub
mov
lea
mov
mov
lea
sub
lea
cmp
jae
mov
cmp
jne
mov
push
pop
add
shl
add
inc
inc
cmp
jl
mov
mov
sub
mov
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
cmp
jbe
mov
mov
lea
push
push
mov
push
push
call
mov
mov
test
je
mov
xor
add
adc
add
adc
sub
pop
pop
pop
leave
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
mov
mov
mov
push
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
add
jmp
mov
mov
add
adc
mov
cmp
jne
mov
cmp
je
and
mov
mov
mov
test
je
mov
mov
xor
pop
pop
ret
mov
call
push
push
push
push
push
mov
xor
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
mov
je
or
cmp
je
mov
push
call
mov
jmp
mov
push
push
push
push
push
call
mov
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
push
and
push
mov
push
test
push
je
and
mov
mov
xor
mov
mov
cmp
jb
ja
cmp
jbe
or
jne
cmp
mov
jne
mov
jmp
test
je
mov
xor
jmp
mov
mov
mov
test
je
mov
lea
push
push
push
push
call
mov
mov
sub
sbb
test
je
mov
mov
pop
pop
pop
leave
ret
mov
call
push
push
mov
push
lea
push
mov
call
mov
push
push
and
push
mov
push
push
call
test
jne
push
mov
push
mov
push
push
call
push
mov
call
mov
mov
pop
pop
mov
leave
ret
push
call
ret
push
mov
push
lea
push
mov
push
push
and
mov
push
push
push
call
mov
mov
add
adc
pop
test
je
mov
leave
ret
push
push
push
mov
call
mov
cmp
jb
mov
cmp
jb
mov
xor
imul
mov
div
cmp
jne
call
test
mov
je
push
mov
pop
cmp
jbe
mov
add
inc
mov
mov
add
cmp
jb
and
mov
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
mov
call
and
and
pop
ret
mov
test
jne
ret
mov
mov
ret
mov
test
je
mov
mov
mov
ret
push
mov
cmp
push
mov
jbe
mov
jmp
push
mov
call
test
jne
mov
jmp
sub
add
mov
call
push
mov
mov
call
pop
pop
ret
push
push
mov
push
mov
mov
cmp
jbe
mov
jmp
push
push
mov
call
test
je
cmp
je
sub
shr
add
jmp
xor
jmp
mov
pop
pop
pop
ret
push
mov
lea
call
mov
call
pop
ret
push
mov
push
lea
push
call
mov
call
push
mov
call
mov
pop
pop
ret
cmp
push
mov
je
push
lea
push
call
push
mov
call
push
call
cmp
pop
je
lea
call
pop
ret
push
mov
mov
test
jle
mov
push
push
mov
call
mov
call
jmp
and
and
pop
ret
push
mov
push
call
mov
call
pop
ret
push
mov
sub
push
push
mov
push
xor
mov
mov
test
mov
ja
test
jbe
jmp
mov
mov
xor
cmp
mov
ja
jb
cmp
jae
mov
cmp
jge
mov
push
mov
mov
call
test
jne
mov
sub
sbb
inc
test
ja
jb
cmp
ja
xor
pop
pop
pop
leave
ret
mov
jmp
mov
push
mov
push
mov
mov
mov
push
mov
shl
push
call
mov
and
pop
pop
ret
push
mov
mov
test
jle
push
dec
mov
push
call
mov
call
jmp
and
and
pop
ret
push
mov
push
push
push
mov
push
push
mov
mov
push
mov
call
mov
mov
mov
xor
xor
cmp
mov
mov
mov
jle
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
push
call
jmp
push
mov
push
call
mov
push
and
mov
add
pop
adc
inc
cmp
jl
mov
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
sub
and
and
mov
push
push
push
push
mov
pop
lea
mov
and
cmp
movzx
jae
add
jmp
add
mov
dec
dec
push
dec
mov
pop
call
mov
and
cmp
movzx
jae
add
jmp
add
dec
dec
dec
push
mov
pop
call
mov
mov
or
jne
lea
mov
push
call
mov
pop
pop
pop
leave
ret
mov
call
sub
and
push
push
mov
push
mov
test
mov
mov
mov
je
mov
mov
cmp
jne
test
je
cmp
jne
test
jne
mov
mov
test
mov
jb
ja
cmp
jbe
xor
add
cmp
mov
ja
jb
cmp
jae
cmp
jae
add
xor
mov
mov
shr
cmp
jb
ja
cmp
jb
mov
mov
and
mov
and
lea
mov
push
push
push
call
xor
cmp
jne
cmp
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
pop
mov
mov
mov
mov
shl
add
push
call
pop
mov
test
mov
je
push
push
lea
push
push
push
mov
call
mov
mov
jmp
xor
and
mov
mov
mov
cmp
jge
mov
mov
lea
push
call
mov
lea
shl
add
push
mov
call
cmp
je
cmp
jne
cmp
jne
mov
cmp
jae
mov
inc
mov
mov
jmp
and
mov
lea
push
push
push
mov
call
mov
push
push
mov
push
push
call
mov
mov
test
mov
je
mov
push
call
cmp
mov
je
mov
push
call
test
je
and
lea
call
mov
or
test
je
mov
push
call
mov
jmp
and
lea
call
mov
or
test
je
mov
push
call
xor
jmp
mov
test
je
push
call
push
push
call
mov
and
and
ret
push
mov
push
mov
test
je
push
lea
push
push
push
push
call
test
je
push
call
pop
mov
pop
jmp
mov
call
test
je
push
call
pop
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
lea
mov
mov
call
mov
push
push
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
cmp
push
mov
jne
mov
mov
add
adc
lea
mov
push
push
mov
push
push
push
call
mov
test
je
mov
push
sub
mov
sbb
mov
mov
pop
pop
pop
ret
mov
push
mov
mov
add
mov
mov
adc
push
push
push
call
pop
ret
push
push
mov
push
pop
mov
cmp
jae
mov
cmp
je
cmp
je
mov
call
mov
mov
call
xor
mov
test
setne
mov
pop
pop
ret
push
mov
mov
call
and
pop
ret
push
add
call
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
mov
mov
push
push
mov
xor
push
mov
sub
sbb
add
adc
cmp
pop
pop
pop
jbe
mov
add
adc
ret
push
mov
push
push
push
push
mov
push
mov
mov
cmp
jb
mov
sub
mov
xor
cmp
mov
je
mov
push
add
push
push
call
add
add
mov
cmp
je
lea
mov
mov
push
mov
push
add
push
push
call
mov
mov
add
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jbe
mov
add
mov
mov
pop
adc
pop
pop
leave
ret
push
mov
mov
cmp
je
mov
call
test
je
pop
ret
xor
pop
ret
push
mov
push
call
test
je
mov
lea
push
push
call
leave
ret
push
mov
push
lea
call
mov
pop
ret
push
mov
lea
call
and
and
mov
call
and
and
pop
ret
push
mov
push
lea
push
call
mov
call
pop
ret
push
mov
push
mov
mov
lea
push
mov
push
mov
call
test
jne
push
mov
call
xor
pop
pop
ret
push
mov
sub
push
push
mov
push
cmp
je
push
mov
push
mov
push
push
call
jmp
mov
test
je
and
cmp
je
mov
cmp
jge
mov
mov
mov
mov
add
mov
sub
cmp
jae
mov
push
push
push
call
add
test
je
add
add
sub
add
mov
call
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
cmp
jne
inc
and
jmp
mov
push
mov
mov
mov
mov
push
mov
mov
lea
push
xor
cmp
setne
inc
inc
push
call
sub
je
dec
je
dec
jne
mov
lea
call
push
mov
call
mov
mov
cmp
jne
mov
jmp
mov
mov
call
test
jne
mov
lea
push
push
mov
push
push
call
test
je
mov
add
jmp
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
mov
mul
mov
add
adc
pop
ret
push
mov
mov
xor
cmp
je
mov
cmp
jne
mov
jmp
push
mov
push
push
push
push
call
jmp
cmp
jne
mov
or
je
mov
pop
ret
cmp
jne
mov
or
jne
mov
mov
push
mov
cmp
je
call
mov
mov
xor
pop
jmp
push
mov
mov
cmp
je
mov
test
jne
mov
jmp
push
mov
push
push
call
jmp
mov
mov
mov
mov
xor
pop
ret
mov
call
push
push
push
mov
push
lea
push
mov
call
lea
xor
mov
mov
call
lea
call
mov
cmp
jle
mov
push
push
mov
call
push
push
lea
call
dec
jne
push
mov
mov
mov
mov
mov
call
push
call
mov
pop
pop
pop
mov
leave
ret
push
mov
push
lea
push
call
mov
mov
shl
xor
push
mov
mov
mov
mov
mov
call
pop
pop
ret
mov
call
push
push
push
mov
push
lea
push
mov
call
mov
and
test
je
mov
mov
mov
mov
lea
mov
mov
sub
sbb
mov
mov
add
adc
mov
test
je
mov
mov
mov
mov
lea
mov
mov
sub
sbb
mov
mov
add
adc
mov
test
je
mov
lea
add
push
push
push
call
mov
jmp
xor
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
call
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
push
mov
push
mov
lea
test
je
mov
push
call
and
push
lea
mov
call
mov
push
push
push
mov
call
mov
pop
mov
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
add
adc
mov
test
je
mov
mov
add
adc
cmp
je
mov
test
je
mov
lea
push
lea
push
push
call
test
jne
mov
mov
add
adc
add
adc
cmp
je
cmp
lea
jne
lea
mov
push
push
mov
call
jmp
xor
pop
leave
ret
mov
push
push
push
call
ret
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
call
ret
push
push
mov
pop
call
test
jne
xor
lea
call
test
jne
xor
lea
call
pop
ret
push
mov
lea
call
lea
call
and
and
pop
ret
mov
call
push
push
push
push
mov
push
call
xor
pop
cmp
je
mov
mov
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
mov
call
push
call
pop
xor
pop
ret
push
mov
dec
mov
jne
test
je
mov
mov
call
push
call
pop
xor
pop
ret
push
push
push
mov
test
mov
jbe
mov
lea
call
test
jne
mov
cmp
jae
mov
cmp
jbe
push
push
push
call
add
add
sub
jne
mov
call
mov
call
mov
test
je
mov
add
adc
xor
pop
pop
pop
ret
add
jmp
push
mov
push
push
push
push
mov
mov
test
jbe
mov
mov
mov
call
lea
call
mov
push
mov
mov
mov
lea
push
push
push
call
test
je
push
pop
jmp
mov
test
je
mov
xor
pop
pop
leave
ret
add
jmp
push
mov
push
mov
xor
push
cmp
je
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
jb
ja
mov
cmp
jbe
mov
jmp
mov
push
sub
mov
cmp
jbe
mov
mov
push
add
push
push
call
add
add
adc
test
je
mov
xor
pop
pop
pop
pop
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
xor
lea
mov
add
adc
mov
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
call
and
and
pop
pop
ret
push
mov
push
mov
mov
cmp
jbe
cmp
jbe
mov
shr
jmp
push
pop
cmp
sbb
and
add
add
cmp
jbe
mov
push
push
call
pop
test
pop
jne
xor
jmp
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
add
cmp
jb
push
lea
call
test
jne
xor
jmp
mov
add
pop
ret
push
mov
push
mov
push
mov
call
push
push
push
call
add
pop
pop
ret
push
mov
push
push
test
je
and
mov
test
je
mov
push
mov
call
test
jne
mov
jmp
push
push
push
call
add
add
test
je
mov
xor
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
sub
cmp
jbe
mov
mov
push
push
add
push
call
mov
add
add
test
je
mov
pop
test
pop
jne
cmp
je
mov
jmp
xor
pop
ret
push
mov
lea
push
mov
push
push
mov
push
mov
push
call
mov
mov
add
adc
pop
test
je
mov
pop
ret
push
mov
mov
call
mov
and
call
and
pop
ret
mov
push
mov
push
mov
push
lea
cmp
jae
push
pop
shl
mov
test
je
cmp
je
call
mov
call
test
mov
je
mov
mov
test
je
cmp
je
call
push
mov
pop
shl
mov
call
test
mov
jne
xor
jmp
mov
mov
mov
mov
pop
pop
pop
ret
mov
push
mov
pop
mov
mov
and
and
mov
mov
shl
xor
test
jbe
push
mov
or
or
inc
cmp
jb
pop
ret
push
mov
push
push
mov
test
je
and
cmp
push
push
push
je
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jbe
mov
jmp
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
cmp
je
mov
mov
mov
mov
call
mov
push
mov
pop
shl
mov
mov
dec
and
mov
shl
mov
mov
shl
add
mov
add
mov
cmp
jne
mov
cmp
je
mov
mov
mov
call
mov
mov
sub
mov
push
sbb
pop
shl
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
push
push
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
push
pop
mov
shl
lea
and
sub
cmp
jae
mov
add
push
push
push
call
mov
add
test
je
add
add
add
adc
sub
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
push
mov
mov
cmp
je
test
push
jbe
push
call
mov
mov
test
pop
jbe
cmp
jb
mov
push
push
push
call
add
jmp
xor
push
call
pop
mov
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
mov
mov
and
test
je
mov
cmp
jae
mov
mov
lea
push
push
push
push
call
mov
add
add
sub
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
push
mov
lea
mov
push
call
test
jne
cmp
setne
pop
pop
ret
push
mov
push
mov
lea
mov
push
call
test
jne
mov
sub
neg
sbb
and
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
test
je
mov
cmp
jae
mov
mov
lea
push
push
push
push
call
add
sub
test
jne
cmp
jne
mov
jmp
xor
pop
pop
pop
pop
ret
push
push
mov
push
cmp
lea
jne
mov
call
test
jne
cmp
lea
jne
mov
call
test
jne
mov
call
mov
call
and
cmp
lea
je
xor
jmp
push
mov
call
pop
pop
pop
ret
push
mov
mov
call
cmp
jne
mov
mov
call
lea
call
jmp
xor
pop
ret
and
add
jmp
push
push
mov
push
cmp
lea
mov
mov
je
mov
call
mov
lea
test
je
call
mov
call
lea
call
pop
mov
pop
pop
jmp
mov
cmp
jae
mov
cmp
jne
cmp
jne
cmp
jne
mov
mov
inc
mov
ret
push
mov
sub
push
push
mov
push
mov
lea
movs
movs
movs
push
lea
push
push
movs
and
call
add
test
jne
mov
mov
test
jbe
mov
mov
cmp
je
inc
add
cmp
jb
or
pop
pop
pop
leave
ret
mov
call
push
push
push
push
and
mov
push
push
push
call
mov
push
neg
push
push
sbb
inc
call
add
neg
sbb
inc
test
jne
test
jne
mov
jmp
mov
call
test
jl
mov
test
je
call
jmp
mov
test
jne
mov
jmp
call
mov
push
mov
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
push
xor
cmp
mov
mov
jb
mov
jmp
mov
mov
mov
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
add
push
call
mov
cmp
mov
je
mov
jmp
mov
push
lea
call
jmp
cmp
setne
jmp
mov
jmp
mov
cmp
je
push
jmp
mov
lea
movs
movs
mov
push
movs
movs
mov
lea
jmp
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
push
push
call
ret
mov
mov
mov
xor
ret
cmp
jne
mov
mov
call
mov
push
pop
ret
push
mov
sub
lea
mov
push
call
test
je
cmp
jne
push
pop
leave
ret
xor
leave
ret
push
mov
push
mov
push
push
and
push
call
add
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
je
push
push
push
call
jmp
push
push
push
call
pop
pop
ret
call
xor
ret
push
mov
sub
push
push
mov
mov
mov
push
push
lea
mov
call
test
jne
cmp
jne
cmp
jne
movzx
movzx
shl
xor
or
push
pop
mov
shl
cmp
je
inc
cmp
jl
or
cmp
mov
jl
cmp
jg
movzx
movzx
shl
or
push
movzx
shl
or
movzx
shl
or
mov
pop
cmp
jne
inc
cmp
jl
jmp
mov
jmp
mov
jmp
lea
mov
shl
cmp
mov
jbe
mov
push
lea
call
test
jne
inc
cmp
jb
and
and
mov
push
lea
call
test
jne
lea
lea
push
lea
push
call
test
je
cmp
jne
mov
cmp
mov
ja
jmp
mov
cmp
jne
mov
mov
add
cmp
jb
mov
mov
cmp
jbe
mov
sub
mov
mov
lea
push
pop
mov
rep
lea
call
push
pop
cmp
jbe
mov
push
lea
call
test
jne
inc
cmp
jb
inc
mov
cmp
jne
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
push
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
movzx
xor
push
mov
mov
shl
or
movzx
shl
or
mov
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
lea
push
lea
push
call
add
push
add
push
push
call
add
mov
jmp
xor
pop
pop
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
call
mov
test
je
mov
push
call
and
xor
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
dec
je
sub
je
sub
jne
mov
push
pop
mov
shl
push
jmp
mov
xor
mov
mov
call
push
push
lea
call
jmp
mov
or
cmp
jge
mov
lea
lea
lea
call
mov
mov
mov
call
test
je
mov
mov
call
test
je
test
jl
push
mov
call
pop
jmp
mov
push
mov
call
pop
inc
jmp
test
jl
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
xor
mov
cmp
je
push
lea
call
inc
cmp
jl
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
jne
mov
mov
xor
call
push
push
lea
call
jmp
mov
mov
jmp
lea
lea
call
cmp
mov
jne
lea
mov
call
lea
lea
push
call
lea
lea
call
mov
mov
mov
call
cmp
jne
push
lea
call
cmp
je
push
lea
call
lea
lea
push
call
push
lea
call
push
call
push
mov
call
pop
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
mov
xor
call
add
adc
inc
jmp
mov
push
push
push
mov
call
xor
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
and
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
and
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
lea
mov
lea
mov
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
mov
xor
call
add
mov
mov
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
push
mov
mov
mov
mov
mov
xor
call
push
push
mov
push
call
mov
test
je
mov
mov
jmp
push
mov
mov
mov
xor
mov
and
push
push
mov
push
mov
mov
mov
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
test
je
mov
push
call
and
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
mov
mov
jmp
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
mov
and
push
push
lea
mov
push
mov
mov
mov
mov
lea
mov
xor
mov
call
push
push
mov
mov
xor
call
push
mov
push
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
jmp
mov
jmp
push
push
push
mov
call
mov
mov
push
lea
lea
lea
pop
rep
mov
pop
pop
lea
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
push
mov
cmp
push
push
push
mov
jae
push
pop
jmp
mov
movzx
cmp
ja
mov
mov
cmp
jne
mov
lea
mov
mov
mov
mov
mov
mov
sub
lea
mov
lea
push
call
test
jne
add
mov
add
lea
sub
push
lea
mov
call
pop
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
call
xor
cmp
mov
jbe
mov
mov
inc
cmp
mov
je
push
lea
call
cmp
jb
push
pop
push
call
pop
pop
mov
mov
pop
pop
mov
leave
ret
mov
lea
push
mov
call
jmp
push
mov
cmp
push
push
push
mov
jae
push
pop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
test
je
cmp
jb
mov
mov
movzx
mov
push
sub
lea
lea
mov
call
test
jne
add
mov
add
lea
sub
push
lea
mov
call
pop
pop
pop
pop
ret
push
mov
mov
mov
push
mov
lea
mov
push
call
test
jne
cmp
je
and
lea
push
push
call
xor
pop
pop
ret
push
mov
push
push
mov
push
push
and
push
pop
lea
push
mov
push
call
test
jne
movzx
test
mov
je
cmp
jbe
lea
push
push
mov
call
add
lea
push
push
mov
call
test
jne
mov
lea
lea
add
mov
adc
call
mov
cmp
je
lea
push
push
mov
call
mov
xor
pop
pop
pop
leave
ret
push
mov
push
push
lea
push
mov
push
call
test
jne
cmp
jne
cmp
jne
push
mov
call
pop
leave
ret
lea
push
push
mov
call
push
mov
push
push
push
mov
xor
lea
mov
push
call
test
jne
cmp
je
mov
test
je
test
jne
mov
lea
push
lea
push
push
call
test
jne
inc
jmp
xor
pop
pop
leave
ret
push
mov
push
push
mov
push
push
mov
lea
xor
mov
push
mov
mov
call
cmp
jne
mov
push
push
push
mov
push
push
call
cmp
jne
lea
mov
push
call
cmp
jne
cmp
jne
push
pop
jmp
push
lea
lea
push
call
cmp
jne
mov
call
pop
pop
leave
ret
mov
call
sub
mov
push
push
xor
mov
push
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
lea
mov
push
mov
call
cmp
jne
mov
cmp
jb
mov
call
test
jne
mov
lea
lea
push
push
push
call
add
mov
mov
mov
cmp
je
mov
cmp
ja
jb
mov
cmp
ja
mov
mov
sub
lea
mov
lea
push
call
cmp
jne
mov
add
cmp
jb
lea
test
mov
jbe
cmp
je
cmp
jae
inc
jmp
cmp
je
mov
lea
sub
call
test
jne
mov
inc
cmp
jb
add
adc
sub
add
push
push
push
call
add
xor
jmp
mov
jmp
push
pop
jmp
mov
xor
add
adc
mov
xor
mov
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
cmp
push
jne
cmp
jne
movzx
add
cmp
jne
movzx
cmp
ja
lea
cmp
jb
cmp
jb
cmp
ja
cmp
ja
mov
pop
ret
xor
pop
ret
push
push
mov
mov
push
call
test
jne
cmp
je
and
push
mov
lea
push
call
test
jne
mov
call
test
jne
mov
xor
pop
pop
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
jne
mov
lea
lea
jmp
mov
lea
mov
call
jmp
mov
lea
mov
call
jmp
mov
lea
mov
jmp
mov
lea
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
mov
test
je
lea
call
test
je
lea
push
lea
push
call
test
jne
and
and
lea
mov
push
call
pop
leave
ret
cmp
jae
movzx
mov
jmp
mov
push
mov
call
ret
mov
call
sub
cmp
push
mov
je
mov
push
lea
call
push
and
mov
call
push
call
pop
mov
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
push
pop
sub
je
sub
je
dec
je
dec
je
dec
je
sub
jne
mov
lea
call
jmp
call
push
jmp
push
jmp
push
jmp
cmp
sete
jmp
mov
push
lea
call
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
jmp
mov
and
push
lea
call
jmp
sub
je
sub
je
dec
je
sub
je
dec
jne
test
je
push
push
lea
call
jmp
lea
add
call
jmp
mov
lea
call
jmp
mov
lea
push
call
jmp
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
test
je
cmp
je
xor
jmp
movzx
cmp
jne
or
ret
mov
call
sub
push
push
mov
push
push
mov
call
mov
xor
cmp
mov
mov
je
mov
lea
push
push
push
push
push
call
cmp
jne
mov
push
push
push
push
push
call
cmp
jne
mov
mov
push
lea
and
and
mov
mov
lea
lea
mov
call
test
jne
mov
test
je
mov
lea
push
push
push
call
test
jne
lea
call
and
lea
push
lea
push
lea
call
test
jne
mov
lea
push
push
mov
push
push
push
call
test
jne
cmp
je
lea
lea
push
call
mov
push
push
push
push
mov
push
call
test
jne
mov
cmp
cdq
mov
mov
mov
mov
mov
mov
je
mov
push
cdq
pop
idiv
test
jne
mov
push
push
push
mov
call
test
mov
jne
push
or
call
push
call
pop
pop
lea
call
jmp
mov
jmp
xor
push
call
push
call
pop
mov
pop
jmp
and
lea
push
push
call
push
call
push
call
mov
pop
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
call
push
call
pop
pop
pop
ret
mov
call
push
push
push
push
mov
mov
push
and
mov
push
mov
push
call
test
mov
jne
push
lea
call
xor
jmp
mov
mov
ret
mov
mov
and
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
call
mov
add
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
push
xor
xor
xor
cmp
mov
mov
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
inc
jmp
mov
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
and
and
mov
mov
jmp
xor
test
mov
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
mov
lea
mov
push
push
push
mov
mov
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
jne
push
mov
push
call
mov
test
jne
mov
push
push
call
mov
mov
test
mov
je
jmp
cmp
jne
cmp
jne
mov
jmp
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
and
mov
mov
push
mov
call
test
pop
je
and
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
push
lea
mov
call
mov
test
je
mov
push
call
and
or
xor
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
jne
mov
test
je
jbe
cmp
jbe
cmp
jne
cmp
jne
push
call
pop
mov
mov
test
mov
je
call
jmp
xor
push
lea
mov
call
mov
push
mov
lea
push
push
push
push
push
call
mov
jmp
cmp
jne
push
call
pop
mov
mov
test
mov
je
call
jmp
xor
push
lea
mov
call
mov
jmp
push
pop
jmp
push
mov
mov
push
push
push
push
push
call
mov
test
mov
jne
mov
mov
add
xor
mov
cmp
jne
mov
cmp
je
push
pop
jmp
mov
cmp
jne
push
jmp
test
je
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
jmp
mov
not
sub
neg
sbb
and
test
je
mov
push
call
xor
mov
jmp
mov
mov
push
push
mov
call
mov
mov
test
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
inc
add
mov
mov
mov
mov
push
adc
add
pop
adc
mov
jmp
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
lea
mov
call
lea
mov
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
lea
call
and
lea
call
mov
mov
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
and
call
mov
or
test
pop
je
mov
push
call
mov
mov
leave
ret
mov
call
push
push
mov
mov
and
call
mov
or
test
pop
je
mov
push
call
mov
mov
leave
ret
jmp
mov
call
push
push
mov
mov
mov
and
lea
call
and
lea
call
mov
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
push
xor
mov
lea
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
mov
mov
test
je
mov
push
call
lea
mov
mov
mov
mov
call
and
mov
call
or
lea
call
mov
pop
pop
mov
leave
ret
add
jmp
push
mov
push
call
push
call
pop
pop
pop
ret
mov
call
push
push
mov
push
xor
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
call
test
pop
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
lea
push
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
and
push
push
mov
push
mov
mov
mov
push
call
mov
lea
push
push
mov
push
push
push
call
test
jne
push
lea
mov
call
test
jne
cmp
jne
cmp
jne
cmp
jne
mov
lea
push
push
push
push
push
call
test
jne
mov
mov
sub
push
mov
sbb
mov
mov
lea
call
push
lea
call
xor
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
pop
mov
mov
cmp
mov
je
call
mov
xor
mov
cmp
mov
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
push
push
call
push
mov
lea
push
call
mov
cmp
je
cmp
mov
je
mov
push
call
mov
and
cmp
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
xor
mov
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
push
mov
lea
mov
push
push
call
test
mov
jne
cmp
jne
cmp
je
mov
mov
push
call
test
je
mov
push
call
xor
mov
cmp
jne
xor
jmp
cmp
jne
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
lea
and
push
sub
pop
sub
xor
cdq
shr
sub
mov
sbb
add
mov
mov
adc
mov
mov
mov
mov
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
push
pop
cmp
jne
mov
xor
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
je
mov
or
lea
jmp
cmp
je
or
lea
call
jmp
or
lea
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
or
lea
call
mov
jmp
mov
mov
or
lea
call
mov
mov
cmp
jne
mov
cmp
jb
mov
jmp
cmp
sbb
and
add
mov
cmp
jne
mov
cmp
jb
push
pop
jmp
cmp
sbb
inc
inc
push
push
mov
push
push
push
xor
push
call
jmp
cmp
je
mov
jmp
mov
mov
cmp
je
mov
push
push
push
push
push
call
cmp
jne
mov
mov
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
mov
mov
mov
push
push
call
xor
cmp
jne
mov
lea
push
push
mov
mov
call
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
mov
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
mov
mov
call
cmp
mov
mov
lea
je
call
lea
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
call
lea
mov
call
lea
mov
call
mov
push
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
push
call
cmp
mov
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
lea
call
call
xor
mov
cmp
mov
mov
jle
mov
mov
mov
mov
lea
push
call
mov
mov
call
cmp
je
mov
mov
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
call
lea
mov
push
mov
push
mov
call
push
mov
mov
call
cmp
pop
jne
mov
push
or
call
inc
add
mov
add
cmp
pop
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
mov
pop
jmp
push
call
mov
pop
jmp
push
call
mov
pop
jmp
mov
push
call
pop
mov
jmp
push
mov
or
or
mov
call
mov
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
mov
mov
push
mov
mov
lea
mov
push
call
test
jne
mov
mov
mov
add
adc
xor
pop
pop
ret
push
mov
push
movzx
mov
cmp
jb
lea
push
push
mov
call
mov
inc
mov
leave
ret
push
push
push
xor
mov
xor
mov
call
movzx
mov
add
shl
or
cmp
jl
mov
pop
pop
pop
ret
push
mov
push
mov
lea
mov
push
push
push
push
push
call
test
jne
push
mov
call
xor
pop
pop
ret
push
push
mov
push
xor
mov
mov
mov
call
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jl
cmp
jg
movsx
sub
mov
shl
add
inc
cmp
mov
jl
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
mov
jle
cmp
jge
mov
call
mov
inc
cmp
jl
mov
and
lea
call
pop
pop
leave
ret
push
mov
push
push
push
mov
lea
call
test
je
mov
cmp
mov
ja
jb
cmp
ja
push
pop
jmp
xor
pop
leave
ret
push
mov
push
push
mov
lea
call
mov
mov
mov
pop
mov
cmp
je
test
je
xor
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
push
push
mov
and
push
mov
mov
lea
mov
mov
mov
lea
push
push
push
mov
call
test
jne
cmp
jne
and
mov
mov
cmp
jne
cmp
jne
mov
jmp
xor
cmp
jne
cmp
je
test
je
lea
mov
push
lea
push
push
call
test
jne
cmp
jne
push
mov
pop
mov
mov
and
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
and
mov
movzx
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
movzx
movzx
shl
add
mov
mov
call
mov
mov
call
movzx
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
movzx
movzx
shl
mov
and
add
mov
mov
lea
call
mov
add
jmp
lea
mov
push
lea
push
push
call
test
jne
cmp
jne
push
lea
pop
push
push
push
call
add
test
je
push
lea
push
push
call
add
test
je
xor
jmp
mov
test
mov
je
lea
mov
push
lea
push
push
call
test
jne
cmp
jne
lea
mov
push
mov
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
mov
mov
mov
lea
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
lea
mov
push
call
test
je
mov
mov
lea
call
mov
add
jmp
push
lea
push
push
call
add
test
jne
lea
mov
push
lea
push
push
call
test
jne
cmp
jne
and
lea
push
push
mov
mov
call
test
je
lea
mov
push
push
call
test
je
lea
mov
push
push
call
test
je
lea
mov
push
push
call
test
je
lea
mov
push
push
call
test
je
lea
mov
push
push
call
test
je
and
lea
push
push
mov
call
test
je
lea
mov
push
push
call
test
je
mov
mov
mov
lea
push
push
call
test
je
lea
mov
push
push
call
test
jne
push
pop
jmp
mov
mov
lea
call
mov
add
test
mov
je
cmp
jae
cmp
jl
push
mov
call
mov
mov
lea
push
push
push
mov
call
test
jne
mov
cmp
jne
mov
call
push
mov
push
call
pop
test
pop
je
mov
mov
xor
jmp
mov
pop
pop
pop
leave
ret
test
mov
je
movzx
xor
mov
shr
or
mov
ret
mov
lea
test
je
inc
jmp
ret
push
mov
push
mov
push
mov
push
mov
lea
push
mov
xor
mov
and
mov
and
or
je
add
mov
adc
and
mov
jmp
mov
push
push
call
pop
pop
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
cmp
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
push
push
call
mov
cmp
jne
mov
push
push
push
push
push
call
mov
cmp
jne
push
lea
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
lea
call
lea
call
lea
lea
push
lea
push
mov
call
push
pop
cmp
jne
push
call
pop
jmp
cmp
jne
cmp
jne
push
mov
call
cmp
pop
jne
mov
mov
cmp
je
mov
push
call
mov
jmp
push
lea
call
mov
mov
cmp
je
mov
push
call
xor
jmp
lea
lea
push
call
push
lea
push
push
call
mov
cmp
je
cmp
je
mov
lea
push
push
push
call
mov
cmp
jne
mov
mov
push
mov
pop
cdq
idiv
test
jne
mov
cdq
mov
mov
mov
mov
mov
lea
mov
mov
push
lea
mov
push
push
call
mov
cmp
jne
push
mov
call
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
call
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
jbe
cmp
jbe
cmp
je
cmp
jne
push
lea
call
jmp
mov
cmp
je
lea
call
lea
lea
push
call
jmp
push
lea
push
call
jmp
mov
lea
and
cmp
sete
push
call
jmp
push
lea
call
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
lea
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
push
push
mov
mov
push
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
add
mov
adc
and
cmp
jne
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
push
push
call
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
push
mov
call
jmp
mov
mov
push
push
mov
xor
add
mov
adc
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
xor
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
mov
mov
lea
xor
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
inc
mov
jmp
lea
mov
call
lea
mov
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
mov
and
push
mov
push
push
mov
mov
mov
xor
mov
mov
push
add
push
adc
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
push
mov
push
push
push
push
mov
mov
add
mov
mov
mov
mov
call
test
je
mov
mov
call
mov
mov
mov
call
test
mov
jne
test
je
cmp
lea
jb
cmp
ja
cmp
ja
cmp
jbe
mov
mov
test
mov
je
cmp
jb
cmp
jae
push
lea
push
call
mov
mov
add
call
add
cmp
jb
add
sub
jne
mov
mov
cmp
jge
mov
inc
mov
push
mov
mov
push
push
call
test
jne
inc
cmp
jl
xor
jmp
push
pop
pop
pop
pop
leave
ret
call
and
sub
neg
sbb
inc
ret
test
je
xor
mov
mov
ret
movzx
ret
test
je
movzx
xor
and
mov
or
movzx
movzx
shl
and
or
shr
or
ret
mov
and
ret
mov
test
je
and
ret
and
shl
ret
test
je
mov
movzx
and
and
shl
or
movzx
movzx
shl
and
and
or
shl
or
shl
ret
mov
shr
and
ret
push
mov
sub
push
push
push
mov
mov
push
lea
mov
call
xor
cmp
jne
lea
lea
push
call
test
je
test
je
mov
cmp
jb
cmp
ja
cmp
jbe
jmp
mov
lea
push
push
push
push
push
call
cmp
jne
cmp
ja
mov
cmp
ja
push
push
mov
mov
push
push
push
call
cmp
jne
mov
call
cmp
mov
jne
mov
jmp
lea
push
push
push
call
mov
mov
sub
add
mov
lea
push
add
mov
call
cmp
jne
mov
cmp
jae
push
pop
jmp
add
cmp
mov
je
push
jmp
mov
mov
test
je
mov
mov
call
cmp
je
push
lea
call
test
je
mov
lea
dec
push
call
push
push
push
mov
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
push
mov
push
call
add
test
jne
mov
cmp
je
cmp
je
xor
jmp
mov
jmp
and
mov
test
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
test
mov
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
test
mov
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
test
mov
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
test
mov
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
mov
add
push
add
push
push
call
add
mov
pop
pop
ret
mov
call
sub
and
and
push
mov
push
push
mov
mov
mov
mov
mov
lea
add
mov
mov
call
add
xor
test
jbe
cmp
je
inc
cmp
jb
mov
test
lea
mov
jge
mov
xor
dec
push
lea
mov
mov
mov
mov
call
cmp
mov
jl
push
lea
call
mov
mov
add
mov
mov
mov
mov
lea
add
mov
mov
call
add
xor
test
jbe
cmp
je
inc
cmp
jb
sub
push
push
push
call
add
test
jl
dec
mov
mov
jmp
mov
mov
and
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
mov
mov
add
mov
call
mov
cmp
jb
mov
mov
call
add
shr
lea
cmp
ja
cmp
mov
je
movzx
add
xor
mov
mov
movzx
shl
or
shl
or
jmp
mov
cmp
jae
xor
jmp
sub
mov
mov
mov
pop
pop
pop
pop
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
call
and
pop
ret
push
mov
and
lea
call
mov
test
je
mov
push
call
and
mov
and
mov
and
call
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
ja
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
lea
mov
push
call
jmp
mov
test
je
push
jmp
mov
test
je
push
jmp
mov
push
add
push
lea
push
call
add
lea
mov
push
jmp
mov
test
je
push
jmp
sub
je
dec
dec
je
sub
jne
mov
cmp
je
push
lea
call
jmp
lea
mov
push
mov
push
push
pop
call
jmp
mov
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
mov
mov
call
mov
mov
sub
je
sub
je
dec
je
dec
je
sub
jne
mov
mov
call
push
lea
call
jmp
cmp
jne
lea
mov
push
push
call
test
je
push
jmp
cmp
jne
mov
mov
call
jmp
push
lea
call
jmp
push
lea
mov
push
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
ret
push
mov
push
push
mov
push
xor
cmp
lea
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
mov
mov
call
cmp
lea
jne
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
cmp
lea
jne
push
call
cmp
pop
je
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
mov
mov
lea
add
or
jne
mov
lea
jmp
cmp
je
movzx
xor
mov
mov
shl
or
movzx
shl
or
jmp
mov
cmp
je
movzx
xor
mov
mov
movzx
shl
or
shl
or
jmp
mov
cmp
jb
cmp
ja
mov
sub
mov
mov
add
push
mov
mov
lea
mov
mov
mov
call
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
cmp
jne
mov
mov
call
add
adc
xor
cmp
jne
cmp
jne
mov
mov
cmp
jne
xor
jmp
push
pop
pop
pop
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
test
je
mov
push
call
ret
add
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
mov
je
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
cmp
jae
cmp
jne
mov
mov
mov
mov
mov
add
mov
call
test
jne
mov
mov
call
add
adc
inc
xor
jmp
push
mov
push
mov
push
call
push
mov
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
xor
mov
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
test
mov
je
mov
push
call
jmp
and
xor
mov
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
lea
mov
push
push
lea
mov
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
mov
mov
mov
add
mov
call
test
je
mov
push
mov
push
call
mov
test
jne
mov
push
push
call
mov
mov
test
mov
je
jmp
mov
mov
call
add
mov
mov
lea
push
push
adc
mov
call
test
je
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
call
cmp
jae
and
and
mov
and
mov
lea
lea
mov
push
push
push
call
mov
mov
test
je
mov
lea
push
push
push
call
mov
cmp
jne
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
push
pop
cmp
je
mov
test
je
test
je
mov
push
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
push
push
mov
push
push
push
push
call
mov
test
je
cmp
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
and
test
je
mov
push
call
mov
jmp
mov
mov
lea
xor
cmp
jne
mov
cmp
jne
test
jne
and
jmp
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
push
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
mov
mov
mov
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
mov
and
push
mov
mov
mov
mov
mov
lea
add
mov
mov
call
test
je
mov
jmp
mov
mov
call
mov
lea
shr
mov
mov
mov
call
mov
cmp
jae
xor
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
push
lea
mov
mov
mov
mov
call
mov
mov
jmp
mov
lea
cmp
ja
and
mov
cmp
jae
mov
mov
cmp
lea
je
movzx
add
xor
mov
mov
movzx
shl
or
shl
or
jmp
mov
cmp
jb
cmp
ja
inc
mov
jmp
push
pop
jmp
push
call
xor
pop
cmp
je
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
push
mov
mov
add
push
mov
mov
mov
call
test
jne
and
test
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
call
mov
mov
xor
jmp
mov
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
mov
mov
call
xor
jmp
mov
pop
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
mov
jmp
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
mov
call
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
call
mov
and
test
pop
je
mov
push
call
or
lea
call
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
push
sub
push
push
xor
pop
sub
cdq
shr
sub
mov
sbb
add
adc
add
pop
pop
adc
ret
sub
jmp
push
mov
push
push
push
mov
push
push
mov
lea
push
push
mov
push
push
push
call
test
jne
push
lea
mov
call
test
jne
add
push
adc
push
lea
push
call
add
test
je
push
pop
jmp
push
mov
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
push
and
mov
mov
lea
mov
mov
mov
mov
lea
mov
push
call
test
jne
cmp
jne
add
push
lea
lea
adc
call
and
lea
push
mov
call
mov
call
mov
call
mov
xor
test
jle
mov
cmp
jb
inc
cmp
jl
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
add
lea
push
push
pop
call
test
jne
push
pop
jmp
mov
mov
xor
pop
pop
leave
ret
push
xor
cmp
mov
jle
sub
mov
test
mov
je
inc
inc
cmp
jl
pop
ret
push
mov
push
push
lea
push
call
test
je
mov
mov
cmp
mov
ja
jb
cmp
ja
push
pop
jmp
xor
leave
ret
push
mov
sub
push
mov
mov
push
lea
call
and
xor
cmp
pop
jne
inc
cmp
je
lea
lea
call
mov
mov
mov
mov
mov
cmp
je
test
je
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
push
lea
call
and
xor
cmp
pop
jne
inc
cmp
je
lea
lea
call
mov
mov
mov
mov
mov
cmp
je
test
je
xor
jmp
push
pop
leave
ret
push
mov
push
push
lea
push
call
test
je
mov
mov
cmp
mov
ja
jb
cmp
ja
push
pop
jmp
xor
leave
ret
push
mov
push
mov
push
mov
push
push
mov
call
test
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
cmp
jne
push
push
mov
call
push
jmp
xor
pop
pop
pop
ret
mov
add
push
mov
mov
push
mov
push
add
adc
and
push
push
push
call
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
mov
push
xor
mov
or
mov
mov
push
lea
mov
call
cmp
jne
lea
call
mov
cmp
je
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
lea
cdq
mov
mov
push
push
push
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
lea
call
lea
lea
push
lea
push
mov
call
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
mov
push
call
push
pop
jmp
cmp
jne
push
mov
call
pop
push
lea
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
xor
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
mov
mov
lea
lea
push
call
push
lea
push
call
cmp
je
mov
lea
cdq
mov
mov
push
push
push
mov
call
cmp
mov
je
push
call
mov
pop
cmp
mov
je
mov
push
call
mov
jmp
push
mov
call
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
xor
pop
ret
mov
call
sub
xor
mov
mov
mov
mov
dec
je
sub
jne
mov
lea
push
push
call
jmp
mov
mov
cmp
jl
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
jne
mov
cmp
je
lea
call
lea
lea
push
call
jmp
push
lea
push
call
jmp
push
lea
call
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
push
push
mov
mov
push
mov
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
cmp
je
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
jmp
test
je
mov
push
call
jmp
mov
mov
mov
add
mov
push
adc
push
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
push
mov
mov
and
push
push
push
mov
mov
mov
push
mov
mov
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
mov
inc
mov
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
mov
push
and
mov
push
push
mov
mov
mov
mov
push
mov
add
push
mov
adc
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
lea
push
mov
push
call
and
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
sub
lea
push
mov
push
call
and
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
push
push
mov
mov
mov
mov
push
call
test
jl
cmp
je
push
call
mov
jmp
sub
mov
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
test
je
mov
push
call
test
jl
test
jne
mov
jmp
xor
push
call
mov
mov
test
jne
test
je
sub
mov
mov
sub
push
push
call
pop
pop
pop
ret
mov
call
sub
push
xor
push
lea
mov
mov
mov
mov
call
push
lea
mov
call
push
lea
call
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
push
mov
mov
mov
cmp
je
test
je
push
call
jmp
sub
jmp
or
pop
ret
sub
jmp
mov
cmp
jne
push
pop
cmp
jne
cmp
sbb
inc
mov
cmp
jne
cmp
jb
push
pop
jmp
cmp
sbb
and
add
mov
cmp
jne
cmp
jb
mov
jmp
cmp
sbb
and
add
mov
ret
mov
call
sub
push
push
mov
call
mov
push
pop
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
push
mov
mov
mov
mov
mov
pop
jne
push
pop
mov
push
lea
mov
push
lea
push
push
call
lea
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
xor
or
cmp
push
mov
mov
mov
mov
mov
mov
mov
jle
mov
mov
mov
mov
mov
lea
push
call
mov
mov
call
cmp
je
mov
cmp
jne
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
push
lea
pop
lea
push
push
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
push
lea
pop
lea
push
push
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
or
lea
push
push
lea
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
mov
push
or
call
inc
add
mov
add
cmp
pop
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
pop
mov
jmp
push
call
pop
mov
jmp
push
mov
sub
push
push
mov
xor
mov
mov
cmp
mov
jle
push
mov
mov
lea
add
push
call
test
jge
push
lea
call
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
lea
lea
mov
pop
rep
mov
mov
mov
mov
lea
lea
mov
add
adc
mov
mov
add
adc
inc
inc
add
mov
cmp
jl
pop
pop
pop
leave
ret
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
cmp
mov
mov
jle
push
mov
jmp
xor
cmp
je
push
lea
call
mov
mov
mov
mov
mov
add
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
lea
push
call
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
jne
mov
cmp
jmp
mov
mov
or
je
mov
jmp
xor
push
lea
call
cmp
je
push
lea
call
push
lea
push
call
lea
lea
push
call
push
lea
call
push
lea
call
push
lea
push
call
push
lea
mov
call
push
and
call
test
pop
je
push
lea
call
push
lea
push
call
push
lea
mov
call
push
and
call
pop
inc
add
mov
cmp
jl
pop
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
sub
mov
and
mov
push
test
push
mov
ja
jb
cmp
jae
xor
jmp
test
ja
jb
cmp
jae
push
pop
call
push
jmp
cmp
ja
jb
cmp
jae
push
pop
call
push
jmp
push
pop
call
push
pop
push
lea
push
call
xor
cmp
je
lea
inc
inc
inc
cmp
jne
add
mov
mov
and
lea
push
call
mov
pop
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
cmp
mov
je
cmp
jne
mov
xor
xor
cmp
jge
mov
mov
mov
cdq
add
adc
inc
jmp
push
push
lea
call
jmp
push
lea
call
mov
lea
mov
call
mov
mov
cmp
jge
mov
lea
push
call
inc
jmp
lea
lea
push
call
push
lea
mov
call
push
call
pop
lea
mov
call
lea
mov
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
mov
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
mov
push
push
mov
lea
push
mov
push
push
push
push
push
call
test
jne
push
lea
mov
call
test
jne
movzx
mov
xor
or
movzx
shl
or
movzx
shl
or
movzx
mov
movzx
shl
or
movzx
shl
or
movzx
movzx
shl
movzx
or
xor
or
or
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
or
or
mov
mov
movzx
movzx
shl
or
movzx
shl
or
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
movzx
shl
or
xor
or
or
cmp
jne
cmp
jne
test
ja
jb
cmp
jae
mov
or
je
cmp
ja
jb
cmp
jae
mov
add
adc
cmp
ja
jb
cmp
ja
mov
push
push
push
mov
push
push
call
test
jne
mov
lea
cmp
lea
jl
push
mov
call
mov
mov
push
mov
call
test
jne
and
mov
xor
cmp
je
inc
cmp
jne
and
mov
lea
call
and
push
lea
call
test
jne
push
pop
jmp
mov
mov
call
test
jne
mov
lea
push
call
lea
lea
push
mov
call
push
and
mov
call
test
pop
jl
mov
push
lea
mov
call
push
lea
mov
call
lea
lea
push
mov
mov
call
push
mov
call
push
and
call
pop
test
pop
jl
mov
push
lea
mov
call
push
lea
mov
call
lea
lea
push
mov
mov
call
push
mov
call
push
and
call
pop
test
pop
jl
mov
and
mov
mov
cmp
jle
mov
mov
push
mov
lea
call
lea
mov
push
mov
call
push
mov
neg
sbb
and
inc
call
test
pop
jne
lea
call
xor
push
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
push
mov
call
push
lea
mov
call
lea
mov
push
lea
push
lea
mov
call
push
call
push
mov
call
cmp
pop
pop
jne
push
lea
call
push
lea
mov
call
lea
mov
push
lea
push
lea
mov
call
push
lea
mov
call
push
call
push
call
push
mov
call
add
lea
lea
push
call
push
lea
call
push
lea
mov
call
lea
mov
push
lea
push
lea
mov
call
push
lea
mov
call
push
call
push
call
push
mov
call
mov
add
xor
push
call
mov
lea
push
mov
call
push
mov
mov
call
push
call
push
mov
call
mov
pop
cmp
pop
jle
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
cmp
jne
cmp
mov
jl
movzx
lea
xor
mov
mov
shl
or
movzx
shl
or
cmp
mov
je
cmp
je
movzx
movzx
xor
xor
mov
mov
mov
mov
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
push
or
or
pop
call
movzx
mov
xor
mov
xor
mov
mov
mov
mov
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
push
or
or
pop
call
movzx
movzx
mov
mov
xor
xor
mov
mov
mov
mov
shl
shl
or
or
movzx
movzx
shl
shl
or
or
xor
xor
or
or
mov
xor
mov
mov
mov
movzx
movzx
xor
sub
mov
mov
push
shl
or
movzx
movzx
shl
or
shl
shl
or
xor
or
xor
or
or
mov
pop
lea
mov
mov
rep
lea
call
mov
mov
add
lea
cmp
jle
mov
lea
push
lea
call
cmp
jle
push
lea
call
and
lea
call
inc
mov
cmp
jl
mov
xor
mov
mov
test
jle
mov
mov
cmp
je
mov
add
mov
or
je
and
inc
add
cmp
jl
xor
xor
cmp
mov
je
cmp
jle
mov
mov
mov
mov
mov
cmp
je
mov
mov
lea
mov
lea
mov
add
adc
add
adc
inc
cmp
jl
xor
or
lea
call
mov
jmp
push
pop
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
mov
jle
mov
xor
cmp
jge
mov
mov
inc
mov
call
test
jl
mov
inc
cmp
je
mov
cmp
jl
cmp
jl
test
je
mov
mov
shr
shl
or
mov
inc
cmp
jl
test
je
mov
mov
shr
shl
or
mov
inc
cmp
jl
test
je
mov
shl
or
mov
inc
mov
cmp
jl
mov
pop
pop
pop
leave
ret
cmp
jl
cmp
jg
movsx
sub
ret
cmp
jl
cmp
jg
movsx
sub
ret
cmp
jl
cmp
jg
movsx
add
ret
cmp
jne
push
pop
ret
cmp
jne
push
pop
ret
xor
cmp
sete
dec
ret
mov
call
sub
and
push
push
push
mov
push
pop
mov
mov
cmp
jle
mov
mov
mov
push
mov
lea
call
and
lea
push
mov
call
test
je
lea
mov
push
call
mov
mov
mov
mov
call
test
push
sete
and
call
test
pop
je
mov
mov
push
mov
call
test
je
mov
jmp
xor
push
or
call
test
pop
jne
inc
inc
mov
cmp
jl
or
mov
pop
pop
pop
mov
leave
ret
mov
inc
jmp
push
mov
push
and
push
push
mov
push
mov
mov
mov
call
test
jl
mov
push
mov
call
jmp
and
and
and
push
mov
call
mov
pop
pop
leave
ret
jmp
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
push
and
call
pop
lea
call
push
mov
call
pop
pop
mov
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
je
push
pop
jmp
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
lea
call
mov
and
pop
and
xor
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
sub
je
sub
jne
mov
mov
mov
push
lea
call
lea
lea
mov
call
push
lea
call
push
mov
call
jmp
lea
call
lea
mov
call
push
lea
mov
call
lea
lea
push
call
cmp
mov
je
push
lea
call
push
call
pop
lea
mov
call
lea
mov
call
jmp
mov
xor
cmp
jge
mov
lea
mov
add
mov
adc
inc
jmp
push
push
lea
call
jmp
mov
xor
cmp
jge
mov
lea
mov
add
mov
adc
inc
jmp
push
jmp
mov
mov
mov
push
lea
call
push
lea
push
mov
call
lea
lea
push
call
push
pop
push
pop
cmp
jge
lea
shl
inc
jmp
cmp
jge
lea
mov
push
lea
call
push
lea
mov
call
push
mov
call
pop
jmp
xor
push
lea
mov
mov
mov
call
lea
push
push
mov
mov
call
mov
test
jl
mov
inc
add
mov
cmp
jne
sub
jmp
test
jne
or
test
jl
sub
lea
push
lea
push
push
call
push
lea
mov
call
push
mov
call
pop
push
push
lea
call
test
jl
push
lea
push
lea
call
push
lea
mov
call
push
mov
call
pop
lea
call
lea
call
xor
cmp
je
mov
mov
call
cmp
jne
push
jmp
push
call
jmp
mov
mov
call
cmp
jne
push
jmp
mov
mov
call
cmp
jne
push
jmp
mov
mov
call
cmp
jne
push
lea
call
push
lea
mov
mov
mov
call
lea
lea
mov
call
push
lea
call
lea
lea
push
call
push
mov
jmp
push
lea
mov
mov
mov
call
lea
lea
mov
call
cmp
je
push
lea
call
lea
lea
push
call
push
mov
call
pop
push
lea
call
push
call
push
mov
call
pop
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
mov
push
push
lea
push
mov
mov
call
test
je
lea
push
mov
call
test
jne
mov
jmp
push
mov
call
push
mov
call
push
mov
call
mov
call
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
jb
ja
cmp
jbe
mov
cmp
jb
ja
mov
cmp
jbe
mov
test
je
mov
sub
cdq
add
adc
mov
mov
mov
lea
push
lea
push
push
call
mov
test
jne
add
adc
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
sub
mov
sbb
mov
test
je
and
xor
inc
cmp
ja
jb
cmp
ja
xor
test
jbe
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
push
mov
call
inc
cmp
jb
jmp
mov
cmp
jb
mov
call
test
je
mov
mov
mov
inc
test
mov
mov
je
and
add
cmp
jb
mov
call
test
je
mov
mov
mov
inc
mov
movzx
jmp
and
movzx
mov
shr
add
and
movzx
shl
add
xor
cmp
ja
jb
cmp
jae
xor
cmp
ja
jb
cmp
ja
mov
push
push
call
add
push
pop
adc
mov
mov
cmp
ja
jb
mov
cmp
jae
mov
jmp
or
lea
call
mov
jmp
push
pop
jmp
mov
mov
sub
cdq
add
adc
mov
cmp
jne
mov
cmp
jne
mov
and
call
mov
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
mov
sub
dec
cmp
jb
cmp
je
mov
cmp
jae
add
mov
push
mov
sub
cmp
jbe
mov
sub
cmp
jbe
mov
lea
add
add
mov
mov
mov
inc
inc
dec
jne
jmp
xor
jmp
cmp
jne
xor
mov
mov
mov
mov
inc
mov
inc
cmp
jne
mov
call
dec
jne
mov
pop
pop
pop
ret
mov
mov
push
mov
mov
inc
mov
pop
cmp
jne
call
ret
push
mov
cmp
je
mov
add
call
mov
lea
call
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
mov
call
sub
push
push
push
mov
mov
push
mov
and
push
push
push
push
push
call
jmp
mov
mov
mov
mov
ret
mov
jmp
mov
mov
mov
mov
ret
mov
jmp
mov
ret
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
cmp
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
mov
mov
xor
cmp
mov
jae
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
cmp
jge
mov
lea
mov
add
mov
adc
inc
xor
jmp
add
mov
adc
mov
inc
jmp
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
push
push
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
mov
lea
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
mov
push
call
mov
test
jne
push
call
test
pop
je
and
and
mov
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
lea
mov
call
mov
xor
cmp
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
lea
mov
add
mov
adc
inc
xor
jmp
mov
mov
mov
mov
mov
mov
xor
cmp
jge
mov
lea
mov
add
mov
adc
inc
jmp
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
add
adc
mov
mov
add
mov
mov
adc
mov
mov
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
lea
mov
lea
mov
add
mov
lea
mov
adc
cmp
jne
mov
cmp
je
mov
mov
test
je
mov
push
call
and
mov
push
mov
push
call
mov
mov
test
je
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
push
mov
call
pop
mov
jmp
mov
mov
mov
push
mov
push
mov
mov
add
adc
mov
push
push
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
mov
mov
and
and
and
and
mov
mov
mov
mov
lea
mov
mov
push
mov
and
and
mov
mov
mov
mov
test
mov
pop
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
mov
push
push
push
push
push
call
test
mov
jne
mov
mov
cmp
jne
cmp
je
mov
jmp
mov
push
mov
push
push
push
push
push
call
mov
jmp
push
mov
push
mov
push
jmp
mov
cmp
jne
mov
cmp
je
mov
jmp
mov
jmp
mov
and
or
je
mov
cmp
je
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
add
adc
mov
mov
or
jne
cmp
je
cmp
je
cmp
jne
mov
mov
mov
mov
mov
mov
or
je
test
ja
jb
cmp
jb
mov
mov
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
jmp
mov
mov
mov
inc
mov
jmp
lea
call
lea
mov
call
mov
inc
add
mov
adc
mov
add
mov
adc
xor
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
mov
call
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
lea
call
and
lea
call
mov
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
push
xor
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
push
call
mov
or
test
pop
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
mov
add
mov
cmp
je
test
je
push
call
jmp
sub
jmp
or
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
push
mov
push
xor
test
je
mov
mov
mov
lea
cdq
sub
sar
mov
cmp
je
jae
mov
jmp
lea
cmp
jne
or
pop
pop
pop
pop
ret
push
push
push
push
mov
xor
mov
test
je
mov
lea
cdq
sub
mov
sar
mov
mov
cmp
je
jae
mov
jmp
lea
cmp
jne
mov
push
mov
mov
call
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
add
mov
pop
leave
ret
push
push
push
mov
call
mov
mov
push
lea
lea
lea
pop
rep
mov
pop
pop
lea
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
and
and
mov
call
mov
and
mov
mov
mov
lea
push
lea
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
push
mov
mov
push
push
mov
mov
add
push
call
test
jle
and
mov
mov
sub
add
push
pop
mov
rep
mov
call
add
dec
jne
pop
pop
mov
pop
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
push
push
push
mov
push
mov
pop
movzx
dec
je
dec
jne
mov
jmp
mov
movzx
dec
je
dec
jne
mov
jmp
xor
mov
cmp
jne
mov
push
mov
mov
mov
pop
cmp
jne
inc
cmp
jl
movzx
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
cmp
je
xor
jmp
cmp
mov
je
lea
call
mov
mov
mov
lea
call
mov
mov
add
jmp
lea
call
mov
mov
lea
mov
call
mov
mov
add
mov
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
pop
pop
pop
pop
ret
test
je
xor
mov
mov
ret
mov
ret
test
je
movzx
xor
mov
mov
movzx
shl
or
shl
or
ret
mov
ret
push
mov
test
je
movzx
xor
xor
mov
mov
mov
mov
push
movzx
shl
or
movzx
movzx
shl
or
pop
shl
shl
or
xor
or
xor
or
or
pop
ret
mov
mov
pop
ret
mov
test
je
cmp
je
test
jne
cmp
jne
push
pop
ret
xor
ret
push
push
movzx
push
mov
mov
mov
mov
call
cmp
mov
mov
lea
je
call
mov
lea
mov
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
jmp
call
mov
and
mov
lea
call
mov
and
mov
lea
call
mov
and
mov
lea
call
mov
and
mov
lea
call
mov
pop
pop
pop
ret
push
mov
sub
cmp
push
push
push
mov
jb
push
lea
call
test
je
mov
mov
xor
cmp
ja
jb
cmp
ja
movzx
movzx
cdq
mov
mov
mov
mov
cdq
push
push
mov
push
push
mov
call
mov
add
adc
xor
cmp
ja
jb
cmp
ja
cmp
ja
mov
and
add
cmp
mov
mov
mov
jle
mov
lea
push
mov
push
push
call
mov
mov
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
cmp
je
push
call
test
pop
je
push
lea
pop
mov
rep
mov
jmp
xor
push
lea
call
movzx
inc
add
movzx
cmp
mov
jl
movzx
cdq
mov
mov
movzx
cdq
push
push
push
push
call
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
dec
jne
lea
mov
push
mov
movzx
push
push
pop
call
jmp
mov
lea
call
push
push
lea
call
jmp
mov
push
push
jmp
lea
mov
push
mov
movzx
push
push
pop
jmp
mov
mov
cmp
je
push
lea
call
jmp
mov
mov
jmp
lea
mov
push
mov
movzx
push
push
pop
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
push
push
mov
push
movzx
cdq
mov
mov
movzx
cdq
push
push
push
push
call
mov
mov
movzx
cdq
mov
mov
movzx
cdq
push
push
push
push
call
add
movzx
adc
cdq
add
mov
pop
adc
pop
mov
pop
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
je
sub
je
dec
je
sub
je
sub
je
sub
je
dec
jne
push
push
lea
call
jmp
lea
push
mov
push
push
pop
call
jmp
push
push
jmp
lea
push
mov
push
push
pop
call
jmp
push
push
jmp
push
push
jmp
push
lea
push
call
lea
lea
push
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
mov
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
lea
push
lea
mov
call
cmp
jne
add
push
push
mov
mov
call
test
je
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
lea
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
push
mov
call
pop
mov
mov
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
xor
pop
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
push
mov
lea
mov
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
push
push
push
mov
push
mov
push
call
mov
test
je
mov
mov
jmp
push
mov
mov
xor
and
push
push
mov
push
mov
mov
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
test
je
mov
push
call
and
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
add
mov
mov
mov
adc
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
push
mov
mov
cmp
jne
cmp
jne
movzx
sub
je
dec
dec
jne
cmp
jne
movsx
inc
inc
jmp
movsx
add
movzx
call
cmp
jl
cmp
jg
mov
movzx
call
test
mov
jl
mov
mov
mov
add
mov
mov
test
mov
je
mov
cmp
mov
jb
cmp
ja
mov
test
jne
cmp
jl
and
mov
jmp
cmp
jl
movzx
and
push
lea
pop
shl
movzx
dec
test
jne
lea
lea
shr
mov
movzx
test
mov
jne
mov
mov
jmp
cmp
je
mov
add
mov
cmp
movzx
mov
mov
mov
mov
mov
mov
mov
jne
cmp
jne
mov
cmp
mov
jae
mov
mov
cmp
jne
mov
push
mov
mov
mov
pop
cmp
jne
inc
cmp
jl
add
cmp
sete
mov
mov
mov
mov
test
je
movzx
imul
movzx
mov
add
mov
mov
add
cmp
mov
jb
sub
mov
shr
mov
mov
cmp
jae
cmp
je
cmp
push
sbb
pop
and
add
shl
mov
dec
and
mov
jmp
cmp
jne
lea
cmp
mov
ja
mov
call
cmp
ja
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
movzx
movzx
shr
imul
pop
inc
shl
shr
lea
shr
ret
push
mov
sub
push
mov
and
push
mov
lea
shr
and
lea
push
push
call
mov
mov
shr
mov
inc
and
lea
push
push
lea
call
test
jne
or
mov
add
lea
and
call
mov
pop
pop
leave
ret
push
push
mov
mov
push
push
push
call
add
cmp
je
xor
test
jle
mov
cmp
jl
cmp
jg
add
mov
inc
cmp
jl
lea
test
jl
cmp
jne
dec
jns
pop
inc
pop
ret
mov
call
sub
and
push
mov
push
lea
call
and
push
lea
mov
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
mov
push
and
cmp
je
push
mov
call
jmp
push
call
mov
leave
ret
push
mov
sub
and
cmp
je
push
mov
call
jmp
push
lea
push
lea
call
mov
and
lea
call
mov
leave
ret
mov
push
mov
push
movzx
mov
push
push
xor
call
push
push
push
call
pop
pop
ret
push
push
mov
xor
mov
lea
mov
mov
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
call
mov
test
je
mov
push
call
and
pop
ret
push
mov
push
push
push
mov
cmp
jne
xor
jmp
cmp
je
push
push
mov
call
mov
xor
shl
movzx
mov
mov
sub
xor
call
add
mov
adc
lea
mov
mov
mov
push
push
push
call
pop
pop
test
jne
mov
add
push
push
mov
push
call
pop
leave
ret
push
mov
push
push
push
mov
test
jne
xor
jmp
mov
add
cdq
push
lea
mov
mov
mov
push
push
call
pop
leave
ret
mov
call
sub
push
push
mov
and
mov
mov
mov
lea
push
mov
call
and
mov
test
jl
mov
mov
lea
push
mov
call
push
mov
lea
mov
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
call
push
and
call
add
jmp
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
cmp
mov
jge
cmp
jg
mov
push
pop
xor
mov
mov
shl
cmp
mov
je
cmp
jge
mov
push
shl
mov
mov
mov
call
cmp
jne
mov
lea
push
call
push
lea
mov
mov
mov
call
or
or
mov
mov
mov
cmp
jne
cmp
mov
jne
mov
call
cmp
jne
cmp
je
mov
cmp
ja
cmp
jb
cmp
jae
mov
lea
shl
mov
add
push
call
cmp
jne
mov
mov
mov
lea
test
jne
mov
push
or
mov
mov
mov
inc
pop
shl
lea
add
adc
jmp
mov
jmp
mov
inc
cmp
jae
push
mov
mov
call
cmp
jne
mov
mov
lea
mov
cmp
je
cmp
jne
cmp
jg
jmp
mov
mov
and
cmp
jne
cmp
ja
cmp
jne
mov
and
je
shr
and
cmp
mov
jge
cmp
je
mov
jmp
cmp
jne
cmp
jne
dec
cmp
jne
push
lea
lea
call
push
lea
mov
call
push
lea
mov
call
lea
lea
push
lea
call
push
lea
mov
call
push
mov
call
cmp
pop
je
movzx
mov
movzx
cmp
jne
jmp
cmp
jg
push
lea
mov
mov
mov
call
push
lea
push
push
mov
call
add
cmp
jl
xor
xor
mov
mov
and
shl
add
shr
add
inc
cmp
jl
movzx
cmp
jne
lea
lea
push
call
xor
cmp
jne
mov
mov
mov
cmp
mov
mov
mov
mov
movzx
mov
jbe
movzx
shl
or
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
lea
lea
push
call
mov
jmp
push
lea
push
push
call
add
test
je
push
lea
push
push
call
add
test
je
test
jne
mov
push
mov
pop
shl
xor
xor
dec
add
adc
not
not
and
and
add
adc
lea
lea
push
call
mov
or
or
mov
mov
push
mov
call
pop
add
jmp
mov
jmp
mov
mov
cmp
mov
jge
mov
mov
test
je
mov
inc
push
mov
push
push
call
cmp
jne
mov
inc
cmp
jl
xor
push
call
pop
mov
jmp
push
pop
jmp
push
call
pop
push
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
test
mov
jle
mov
mov
test
je
cmp
je
mov
inc
inc
inc
inc
dec
jne
and
pop
ret
push
push
push
mov
mov
push
call
push
mov
pop
sub
lea
sub
mov
mov
inc
lea
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
mov
call
sub
push
push
push
mov
call
mov
and
mov
lea
push
call
xor
cmp
jne
lea
mov
push
call
test
je
mov
lea
push
push
mov
push
push
push
call
cmp
jne
cmp
jne
movzx
push
mov
call
mov
push
lea
call
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
cmp
mov
sbb
inc
test
mov
jne
mov
mov
mov
mov
mov
mov
shl
push
call
pop
mov
push
mov
call
cmp
jne
mov
call
push
mov
call
cmp
jne
mov
cmp
jne
push
lea
call
mov
mov
cmp
jbe
sub
mov
mov
cmp
mov
jbe
mov
mov
movzx
push
mov
pop
shl
lea
shr
shl
mov
push
call
test
jne
add
lea
mov
adc
mov
cmp
lea
je
test
jbe
mov
mov
mov
add
and
mov
add
dec
jne
jmp
push
pop
jmp
xor
test
jbe
mov
mov
mov
add
and
mov
add
lea
shr
add
dec
jne
mov
add
add
test
jne
cmp
mov
sete
push
call
test
jne
mov
cmp
jb
jmp
movzx
movzx
shr
imul
push
inc
pop
shl
shr
lea
lea
shr
shl
lea
add
push
adc
call
mov
mov
push
mov
call
test
jne
mov
cmp
mov
mov
jne
test
jbe
mov
mov
mov
movzx
inc
mov
inc
add
dec
jne
jmp
and
test
jbe
and
mov
add
shr
movzx
mov
and
shl
shr
and
inc
mov
add
cmp
jb
cmp
jne
xor
test
jbe
mov
mov
add
dec
shr
add
dec
jne
mov
xor
push
mov
call
cmp
jne
mov
mov
cmp
je
push
pop
jmp
push
mov
push
push
call
mov
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
cmp
jne
mov
test
je
and
mov
jmp
xor
movzx
cmp
jbe
xor
mov
movzx
imul
add
ret
mov
call
push
push
mov
mov
push
push
push
mov
xor
mov
mov
mov
push
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
mov
and
mov
test
je
mov
push
call
push
lea
mov
call
mov
mov
shl
push
xor
mov
and
movzx
mov
mov
mov
and
movzx
pop
shl
mov
xor
add
movzx
adc
sub
sbb
call
lea
push
call
mov
mov
mov
test
mov
jne
test
je
and
test
je
mov
push
call
jmp
mov
push
pop
shl
mov
cmp
jb
cmp
jae
lea
lea
push
call
mov
mov
mov
cmp
ja
cmp
jbe
test
je
mov
and
test
je
mov
push
call
push
pop
jmp
mov
call
mov
test
je
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
mov
xor
jmp
sub
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jle
mov
push
mov
mov
shl
xor
add
adc
mov
mov
mov
call
pop
pop
ret
xor
pop
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
push
mov
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
test
jne
mov
and
jmp
push
call
mov
mov
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
cmp
je
push
lea
call
jmp
mov
mov
mov
shl
movzx
add
jmp
mov
movzx
mov
jmp
push
xor
pop
lea
mov
mov
mov
lea
rep
stos
mov
movzx
call
lea
lea
push
call
jmp
mov
cmp
je
lea
xor
push
mov
call
jmp
mov
push
pop
mov
jmp
sub
je
dec
je
dec
je
sub
jne
mov
mov
cmp
je
push
lea
call
jmp
mov
cmp
je
lea
push
lea
call
push
lea
mov
call
push
mov
call
pop
jmp
mov
push
pop
mov
shl
push
jmp
mov
movzx
mov
xor
call
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
mov
lea
call
test
je
lea
push
lea
push
call
test
je
push
xor
push
push
push
imul
push
call
add
mov
adc
xor
add
lea
adc
mov
push
mov
mov
call
pop
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
jne
test
jne
mov
push
mov
pop
shl
xor
xor
dec
add
adc
not
not
and
and
push
push
lea
call
jmp
test
jne
push
lea
call
jmp
mov
lea
shr
and
push
call
jmp
push
lea
push
add
call
push
lea
mov
call
push
mov
jmp
movzx
push
jmp
sub
je
dec
je
dec
je
sub
jne
lea
mov
push
call
push
lea
mov
call
push
mov
call
pop
jmp
mov
lea
push
xor
jmp
movzx
lea
xor
push
shl
jmp
movzx
mov
lea
push
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
and
push
push
mov
push
mov
push
lea
mov
call
lea
mov
call
mov
test
je
mov
and
push
call
mov
jmp
mov
push
mov
call
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
lea
call
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
test
jne
mov
add
adc
inc
jmp
mov
push
push
push
mov
call
cmp
jne
push
mov
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
mov
mov
test
mov
je
mov
push
call
and
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
mov
push
call
jmp
and
xor
mov
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
mov
push
push
mov
mov
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
jmp
test
je
mov
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
jmp
test
je
mov
push
call
jmp
mov
mov
push
mov
mov
pop
shl
xor
xor
push
dec
add
adc
not
not
and
and
add
pop
adc
add
adc
xor
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
mov
cmp
jne
mov
push
lea
mov
call
mov
cmp
je
mov
push
call
mov
mov
mov
mov
mov
mov
lea
push
add
push
mov
mov
push
call
mov
cmp
je
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
je
push
mov
mov
push
push
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
call
mov
jmp
mov
mov
add
xor
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
call
mov
push
mov
push
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
and
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
inc
mov
jmp
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
mov
mov
and
lea
call
mov
mov
mov
pop
ret
mov
call
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
lea
neg
sbb
and
jmp
mov
call
push
push
mov
mov
mov
call
push
lea
mov
call
push
call
mov
and
pop
test
pop
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
jmp
mov
jmp
push
mov
call
mov
mov
mov
mov
mov
lea
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
push
push
mov
push
call
lea
lea
movs
movs
movs
movs
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
je
cmp
jne
push
lea
call
jmp
cmp
movzx
jne
mov
jmp
mov
mov
lea
mov
inc
cmp
je
mov
mov
inc
jmp
cmp
jne
mov
lea
call
mov
lea
shr
and
mov
call
test
mov
jne
mov
lea
call
test
mov
jne
mov
lea
call
lea
jmp
push
lea
push
call
jmp
cmp
je
cmp
movzx
jne
mov
jmp
mov
jmp
cmp
mov
je
mov
push
lea
call
push
lea
call
or
lea
call
mov
pop
xor
pop
mov
leave
ret
mov
call
sub
push
push
xor
push
mov
mov
mov
mov
mov
mov
mov
push
pop
lea
push
mov
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
jne
cmp
jne
cmp
jne
test
jne
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
cmp
jne
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
jne
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
mov
call
cmp
jne
cmp
ja
cmp
jbe
push
pop
jmp
mov
cmp
je
mov
lea
push
push
push
call
cmp
jne
mov
push
push
push
push
push
call
cmp
jne
mov
lea
push
mov
call
xor
cmp
jbe
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
cmp
jne
mov
mov
sub
cmp
mov
jb
mov
mov
push
mov
lea
call
cmp
jne
add
cmp
jb
push
or
cmp
pop
lea
rep
jbe
mov
mov
mov
lea
add
cmp
ja
mov
movzx
mov
xor
mov
mov
shl
or
cmp
jb
movzx
xor
mov
mov
shl
or
jne
lea
mov
mov
lea
cmp
mov
ja
movzx
lea
xor
add
mov
mov
shl
or
movzx
shl
or
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jge
mov
cmp
mov
jne
shr
and
jmp
mov
push
mov
call
pop
jmp
and
shr
mov
xor
movzx
lea
mov
cmp
jge
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
lea
call
mov
mov
cmp
mov
je
mov
push
call
jmp
mov
mov
mov
cmp
je
and
mov
add
inc
sub
lea
mov
lea
movs
movs
movs
call
mov
mov
cmp
jb
xor
mov
xor
mov
mov
cmp
sete
mov
cmp
jle
jmp
mov
push
call
pop
push
pop
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
mov
mov
mov
mov
add
cmp
je
cmp
je
mov
mov
shl
sub
push
mov
call
and
jmp
mov
mov
add
push
call
mov
lea
push
push
push
call
add
cmp
mov
setne
dec
and
inc
mov
mov
inc
mov
mov
cmp
jl
xor
mov
cmp
mov
jle
mov
jmp
push
mov
jmp
mov
mov
mov
add
mov
movzx
mov
mov
mov
mov
add
mov
cmp
je
add
sub
mov
push
push
mov
add
push
call
add
add
add
inc
mov
cmp
jl
xor
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
jmp
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
mov
push
call
test
mov
jne
push
lea
call
jmp
mov
mov
ret
mov
and
cmp
je
mov
push
call
push
pop
jmp
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
xor
pop
ret
mov
call
sub
push
push
push
xor
cmp
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
adc
inc
jmp
mov
push
push
push
mov
call
xor
xor
push
mov
mov
call
pop
mov
mov
cmp
mov
je
call
mov
and
mov
test
je
mov
push
call
push
mov
push
mov
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
call
mov
test
jne
and
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
push
push
mov
mov
push
mov
call
mov
xor
cmp
je
mov
mov
cmp
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
mov
mov
mov
push
mov
mov
call
mov
test
je
mov
mov
jmp
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
mov
mov
jmp
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
push
mov
xor
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
push
push
add
mov
mov
and
and
mov
mov
call
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
pop
ret
sub
jmp
push
mov
sub
push
push
mov
call
mov
push
lea
mov
call
test
jne
cmp
jne
mov
cmp
mov
je
push
pop
jmp
mov
mov
mov
mov
mov
mov
test
mov
mov
je
lea
mov
call
test
jne
movzx
mov
call
test
jne
test
je
push
lea
mov
call
test
jne
test
je
push
lea
mov
call
test
jne
test
je
lea
mov
call
test
jne
mov
call
neg
sbb
neg
pop
pop
leave
ret
mov
test
jne
xor
ret
push
pop
sub
shl
cmp
setb
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
xor
push
cmp
mov
mov
jbe
push
lea
push
mov
call
mov
inc
cmp
jb
pop
mov
call
neg
sbb
pop
pop
pop
neg
ret
push
mov
test
jbe
push
push
lea
mov
push
mov
call
dec
jne
pop
pop
mov
call
neg
sbb
pop
neg
ret
push
push
push
push
push
mov
mov
xor
mov
lea
push
mov
call
mov
mov
call
test
jne
movzx
mov
add
shl
or
cmp
jl
xor
pop
pop
pop
pop
pop
ret
push
pop
jmp
push
mov
push
push
push
mov
xor
push
mov
mov
mov
and
cmp
jbe
push
lea
call
mov
mov
call
test
jne
cmp
je
push
mov
call
inc
cmp
jb
push
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
push
lea
call
test
jne
mov
mov
mov
mov
mov
call
neg
sbb
neg
pop
leave
ret
push
mov
push
push
push
mov
mov
push
lea
call
test
jne
mov
mov
mov
mov
xor
pop
leave
ret
push
mov
sub
push
mov
mov
push
mov
lea
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
call
test
jne
test
je
mov
mov
mov
inc
push
call
test
jne
xor
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
lea
mov
call
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
mov
mov
cmp
jae
movzx
mov
jmp
mov
push
lea
call
jmp
mov
cmp
je
push
lea
call
jmp
mov
mov
cmp
je
lea
call
lea
lea
push
call
jmp
mov
cmp
je
push
push
lea
call
jmp
mov
cmp
je
push
push
jmp
mov
test
je
push
lea
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
mov
push
mov
mov
push
lea
mov
xor
push
push
push
push
mov
push
mov
call
test
jne
mov
lea
push
push
call
test
mov
jne
mov
lea
push
push
push
push
push
call
mov
mov
sub
mov
mov
sbb
add
mov
adc
test
mov
jne
push
lea
call
push
lea
mov
call
jmp
mov
mov
ret
mov
and
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
mov
and
push
mov
mov
lea
mov
push
call
mov
push
add
push
mov
call
mov
push
call
push
lea
call
mov
mov
call
mov
mov
jmp
mov
mov
ret
mov
and
cmp
je
mov
lea
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
lea
call
test
jne
mov
jmp
cmp
je
lea
call
and
xor
pop
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
mov
lea
push
call
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
or
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
test
je
mov
push
push
push
push
push
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
lea
call
lea
mov
call
cmp
mov
je
cmp
je
push
lea
call
test
mov
je
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
neg
sbb
and
mov
jmp
mov
push
or
mov
mov
and
mov
mov
push
push
mov
push
call
test
mov
je
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
mov
neg
and
shr
add
lea
mov
push
call
test
je
push
jmp
mov
not
cmp
jne
mov
mov
sub
mov
cmp
jne
lea
mov
call
jmp
push
pop
lea
mov
call
mov
test
je
mov
push
call
xor
mov
mov
push
push
mov
call
mov
mov
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
cmp
push
push
push
jne
mov
xor
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
mov
lea
lea
push
call
cmp
mov
mov
mov
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
jmp
mov
lea
mov
mov
lea
mov
call
test
mov
lea
je
call
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
jne
push
lea
call
mov
mov
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
cmp
jl
inc
lea
push
lea
push
call
push
lea
mov
call
push
mov
call
pop
push
lea
lea
call
push
lea
mov
call
push
call
cmp
pop
je
or
push
call
pop
lea
mov
call
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
jmp
cmp
jne
cmp
je
mov
mov
lea
jmp
cmp
je
mov
lea
call
lea
call
mov
jmp
lea
mov
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
call
jmp
mov
lea
mov
mov
mov
mov
call
add
mov
push
push
push
lea
push
call
jmp
cmp
je
mov
jmp
cmp
jne
mov
jmp
mov
cmp
mov
mov
je
push
lea
call
mov
mov
add
adc
mov
push
push
push
mov
push
push
call
cmp
jne
mov
mov
push
call
mov
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
xor
mov
mov
push
mov
mov
mov
push
call
cmp
jne
mov
lea
push
push
call
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
or
cmp
je
mov
push
call
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
or
mov
push
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
mov
push
push
mov
mov
call
lea
push
call
mov
xor
push
mov
cmp
lea
mov
mov
sbb
and
add
mov
call
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
neg
sbb
mov
and
mov
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
not
mov
mov
mov
mov
lea
mov
call
mov
cmp
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
jmp
mov
push
push
mov
call
cmp
mov
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
mov
and
lea
call
mov
mov
mov
pop
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
lea
neg
sbb
and
jmp
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
and
add
push
lea
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
lea
push
call
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
or
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
pop
ret
mov
inc
mov
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
jmp
mov
call
push
push
mov
mov
mov
mov
mov
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
push
xor
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
push
mov
lea
call
xor
mov
mov
mov
mov
pop
ret
push
mov
call
mov
push
mov
pop
shl
add
dec
and
shr
mov
pop
ret
push
mov
cmp
jb
push
push
lea
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
jmp
or
inc
mov
push
movzx
pop
mov
sub
add
shl
or
movzx
mov
mov
shl
or
cmp
mov
jae
pop
pop
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
mov
mov
push
mov
mov
lea
mov
push
call
test
jne
mov
mov
mov
add
adc
xor
pop
pop
ret
push
mov
push
mov
lea
push
push
push
call
test
jne
cmp
setne
pop
pop
ret
mov
call
sub
mov
push
push
push
and
lea
push
lea
mov
push
push
mov
call
test
jne
cmp
je
cmp
je
cmp
jne
cmp
je
lea
mov
push
lea
push
push
call
test
jne
cmp
je
xor
cmp
setne
jmp
mov
lea
push
push
lea
push
call
add
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
lea
ja
jae
movzx
cmp
jb
lea
mov
push
lea
push
call
test
jne
mov
lea
call
cmp
jne
movzx
lea
cmp
ja
push
lea
call
jmp
movzx
movzx
shl
or
lea
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
push
call
test
jne
mov
lea
sub
add
cmp
ja
mov
inc
lea
mov
mov
call
xor
cmp
je
mov
cmp
jb
cmp
jne
movzx
mov
cmp
jb
sub
mov
mov
mov
mov
mov
lea
push
push
mov
call
cmp
jne
add
lea
movzx
push
call
movzx
mov
push
push
call
cmp
jne
lea
lea
push
call
mov
lea
push
push
call
cmp
jne
lea
lea
call
push
or
mov
call
cmp
pop
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
pop
mov
leave
ret
push
pop
jmp
push
mov
mov
call
pop
mov
jmp
mov
mov
lea
ret
push
mov
push
push
push
mov
push
xor
mov
mov
mov
mov
and
cmp
jbe
mov
test
mov
je
push
mov
call
inc
cmp
jb
mov
pop
add
pop
pop
leave
ret
push
xor
xor
test
jbe
add
inc
cmp
jb
pop
ret
push
mov
push
mov
push
mov
lea
push
mov
mov
push
push
mov
push
push
push
call
test
jne
add
adc
mov
cmp
jne
mov
cmp
je
mov
jmp
xor
pop
pop
pop
pop
ret
push
xor
mov
push
mov
pop
test
je
xor
shr
dec
jne
mov
inc
inc
inc
cmp
jb
pop
ret
jmp
jmp
mov
push
push
mov
mov
test
mov
jbe
push
movzx
movzx
xor
xor
mov
mov
xor
inc
dec
jne
pop
mov
pop
pop
ret
push
mov
push
mov
push
mov
test
jne
mov
xor
mov
jmp
lea
mov
push
push
push
push
call
mov
push
lea
push
call
mov
test
je
mov
mov
mov
pop
pop
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
jne
push
jmp
push
jmp
mov
call
push
lea
call
jmp
lea
mov
push
call
push
mov
lea
mov
call
mov
lea
mov
call
push
call
push
mov
call
mov
pop
cmp
pop
je
mov
cmp
jne
dec
push
push
lea
call
push
lea
call
push
mov
call
pop
jmp
lea
mov
push
call
cmp
je
mov
lea
call
jmp
mov
lea
call
cmp
je
lea
push
lea
push
call
test
jne
mov
mov
lea
lea
push
call
jmp
sub
je
sub
je
dec
jne
mov
call
jmp
add
push
lea
push
push
mov
call
add
lea
push
lea
call
jmp
movzx
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
and
push
mov
push
call
mov
pop
pop
ret
push
mov
call
test
je
cmp
jne
push
pop
pop
ret
xor
pop
ret
push
mov
call
test
je
cmp
jne
push
pop
pop
ret
xor
pop
ret
cmp
jne
cmp
jne
cmp
jne
push
pop
ret
xor
ret
push
mov
push
call
test
jge
cmp
jne
mov
jmp
xor
jmp
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
xor
test
jle
mov
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
mov
jmp
mov
call
sub
and
lea
push
mov
push
call
and
push
push
lea
call
mov
test
je
mov
cmp
je
push
lea
call
lea
mov
push
call
mov
push
lea
mov
call
push
call
push
call
mov
pop
pop
pop
mov
mov
leave
ret
push
mov
push
mov
and
push
push
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
or
test
jge
mov
push
mov
and
and
and
call
mov
jmp
mov
jmp
mov
push
mov
call
mov
pop
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
call
xor
cmp
mov
jbe
mov
mov
cmp
mov
je
push
lea
call
inc
cmp
jb
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
and
push
xor
test
push
jle
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
pop
test
jge
push
mov
call
jmp
mov
jmp
mov
push
mov
call
mov
leave
ret
xor
mov
cmp
je
add
inc
cmp
jb
mov
ret
mov
ret
mov
call
sub
mov
push
push
xor
push
mov
lea
mov
mov
call
mov
cmp
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
push
push
call
mov
cmp
jne
mov
push
push
push
push
push
call
mov
cmp
jne
push
lea
call
mov
cmp
jne
lea
call
lea
lea
push
lea
push
mov
call
push
pop
cmp
jne
mov
lea
call
push
call
pop
jmp
cmp
je
mov
jmp
cmp
jne
lea
mov
call
push
mov
call
mov
pop
cmp
jne
mov
mov
cmp
je
mov
push
call
mov
jmp
push
lea
call
mov
mov
cmp
je
mov
push
call
xor
jmp
lea
push
mov
lea
call
push
lea
push
call
mov
cmp
je
cmp
je
mov
lea
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
push
pop
mov
mov
cdq
idiv
test
jne
mov
cdq
mov
mov
mov
mov
mov
lea
mov
mov
push
lea
mov
push
push
call
mov
cmp
je
mov
jmp
lea
mov
call
push
mov
call
pop
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
jmp
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
push
mov
lea
call
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
xor
cmp
push
push
mov
setne
xor
xor
cmp
mov
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
inc
jmp
mov
push
push
push
mov
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
mov
push
call
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
lea
push
push
mov
push
push
mov
mov
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
call
cmp
je
mov
push
push
mov
call
mov
cmp
jne
mov
push
push
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
jmp
cmp
je
mov
push
call
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
lea
push
push
push
mov
push
mov
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
xor
lea
mov
mov
mov
cmp
jne
mov
mov
cmp
je
jmp
mov
call
cmp
je
cmp
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
lea
mov
mov
call
mov
call
cmp
je
movzx
sub
je
dec
je
dec
je
dec
je
dec
je
dec
je
dec
je
xor
jmp
push
jmp
push
jmp
push
jmp
push
pop
mov
lea
mov
push
mov
push
push
push
mov
push
push
call
mov
cmp
jne
mov
jmp
mov
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
push
mov
push
call
mov
mov
cmp
lea
je
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
jmp
call
lea
mov
call
mov
inc
add
mov
mov
mov
mov
push
adc
add
pop
adc
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
lea
call
and
lea
call
mov
and
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
push
mov
call
test
je
cmp
je
mov
call
test
je
cmp
jne
cmp
jne
push
pop
pop
ret
xor
pop
ret
push
mov
call
test
je
mov
cmp
jb
cmp
ja
mov
pop
ret
xor
pop
ret
push
call
test
pop
je
mov
call
ret
xor
ret
jmp
mov
jmp
push
mov
cmp
push
mov
jne
xor
jmp
push
xor
xor
cmp
jle
mov
add
mov
cmp
je
test
je
push
call
jmp
sub
mov
jmp
or
test
jl
mov
mov
inc
inc
cmp
jl
mov
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
mov
mov
mov
mov
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
push
mov
mov
add
mov
and
and
lea
push
mov
call
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
push
mov
push
mov
call
mov
add
lea
and
movs
movs
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
and
cmp
push
mov
je
mov
mov
xor
cmp
setne
add
xor
mov
mov
inc
cmp
jl
mov
cmp
mov
mov
mov
jae
cmp
jae
mov
mov
mov
and
cmp
je
cmp
ja
jb
test
jae
add
call
test
je
push
pop
jmp
xor
pop
ret
mov
push
pop
push
pop
shl
cmp
je
push
pop
shl
cmp
je
inc
cmp
jle
xor
cmp
sete
mov
ret
mov
ret
mov
call
push
push
push
mov
push
xor
cmp
lea
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
or
push
mov
mov
call
cmp
je
cmp
lea
jne
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
mov
cmp
je
mov
push
push
push
call
cmp
jne
mov
or
cmp
je
mov
push
call
mov
jmp
mov
or
cmp
je
mov
push
call
mov
push
mov
lea
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
add
push
mov
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
push
push
mov
mov
cmp
ja
and
mov
and
lea
mov
push
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
je
or
mov
jmp
mov
or
test
je
mov
push
call
and
cmp
mov
sete
cmp
je
mov
lea
push
push
mov
push
call
mov
test
jne
mov
jmp
push
mov
push
call
mov
test
je
or
mov
test
je
mov
push
call
mov
jmp
mov
jmp
mov
mov
and
cmp
je
push
pop
jmp
xor
push
neg
sbb
and
push
push
mov
call
cmp
mov
je
and
mov
lea
push
push
mov
push
mov
call
mov
test
je
mov
push
call
test
jne
mov
mov
push
mov
call
test
jne
mov
mov
mov
test
je
mov
push
call
test
je
mov
or
test
je
mov
push
call
mov
jmp
mov
or
test
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
sub
je
dec
je
sub
jne
mov
cmp
je
cmp
mov
je
mov
lea
call
mov
lea
call
xor
cmp
je
inc
cmp
jne
mov
lea
call
lea
lea
push
call
jmp
mov
cmp
je
push
push
jmp
mov
cmp
je
mov
mov
mov
and
cmp
je
push
push
lea
call
push
lea
call
or
lea
call
mov
pop
xor
pop
mov
leave
ret
mov
push
mov
xor
push
pop
shl
cmp
je
inc
cmp
jle
push
mov
test
jne
shr
add
jmp
mov
pop
jmp
test
jne
shr
mov
mov
mov
call
xor
cmp
je
inc
cmp
jne
add
mov
and
pop
pop
ret
xor
cmp
je
inc
cmp
jne
add
mov
mov
inc
inc
test
jne
ret
push
mov
sub
push
push
mov
push
mov
lea
mov
push
push
push
push
push
call
test
jne
push
lea
mov
call
test
jne
mov
lea
push
lea
push
call
test
je
xor
cmp
setne
cmp
je
push
pop
jmp
mov
lea
push
push
push
push
push
call
test
jne
mov
mov
sub
push
mov
sbb
mov
mov
lea
call
push
lea
call
xor
pop
pop
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
push
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
test
je
mov
push
push
push
push
push
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
and
mov
mov
push
mov
push
lea
push
push
lea
mov
call
test
mov
je
lea
mov
call
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
mov
cmp
setne
add
mov
lea
push
lea
push
push
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
cmp
jne
mov
lea
push
lea
push
call
test
je
push
and
lea
lea
push
push
call
cmp
mov
jne
mov
mov
test
je
mov
push
call
xor
mov
mov
push
mov
push
call
lea
mov
mov
call
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
jne
mov
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
and
push
mov
mov
push
lea
mov
call
mov
lea
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
push
call
test
pop
je
push
mov
call
ret
xor
ret
jmp
mov
jmp
jmp
mov
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
sub
push
mov
and
cmp
push
mov
push
mov
mov
mov
mov
mov
jb
movzx
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
cmp
ja
cmp
ja
cmp
ja
push
pop
cmp
jbe
mov
mov
and
sub
add
cmp
je
add
sub
mov
sub
mov
xor
cmp
mov
jae
mov
cmp
mov
jbe
cmp
jb
mov
mov
call
mov
lea
mov
call
mov
cmp
mov
jb
mov
cmp
je
cmp
jne
xor
cmp
setne
dec
and
add
cmp
mov
jb
cmp
mov
lea
jne
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
jmp
call
and
mov
lea
mov
call
and
mov
lea
mov
call
and
mov
lea
mov
call
and
mov
mov
mov
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
lea
push
push
lea
push
call
push
call
add
test
je
lea
mov
movs
movs
movs
movs
mov
mov
jmp
xor
push
lea
call
mov
mov
lea
call
cmp
mov
ja
test
jne
mov
and
dec
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
pop
je
push
lea
pop
mov
rep
mov
mov
jmp
xor
push
lea
call
jmp
xor
cmp
setne
dec
and
add
mov
mov
and
lea
mov
sub
cmp
jb
cmp
mov
lea
jne
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
and
mov
mov
lea
jmp
call
mov
and
lea
mov
call
mov
and
lea
mov
call
and
mov
mov
lea
call
cmp
mov
jne
and
and
jmp
mov
mov
mov
mov
push
lea
push
push
call
add
push
lea
push
push
call
mov
push
dec
mov
call
add
test
je
push
lea
pop
mov
rep
mov
jmp
xor
push
lea
call
mov
add
dec
jne
mov
mov
cmp
jne
mov
sub
add
inc
mov
cmp
jb
sub
cmp
mov
jne
xor
cmp
jne
push
pop
jmp
xor
pop
pop
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
dec
dec
jne
lea
mov
push
mov
push
push
pop
call
jmp
mov
lea
push
call
jmp
mov
lea
push
push
call
jmp
lea
mov
push
mov
push
push
pop
call
jmp
mov
mov
jmp
mov
mov
cmp
je
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
je
cmp
je
cmp
jne
push
push
lea
call
jmp
cmp
jne
mov
lea
call
lea
mov
mov
call
push
mov
jmp
push
push
jmp
push
mov
push
jmp
mov
mov
mov
lea
call
cmp
mov
jne
mov
lea
call
push
lea
mov
call
push
mov
call
pop
lea
lea
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
and
push
push
lea
push
mov
push
call
and
add
lea
mov
push
call
mov
pop
leave
ret
mov
call
sub
push
push
mov
and
mov
mov
and
mov
push
push
lea
call
and
and
push
push
mov
lea
call
cmp
mov
je
push
lea
call
lea
lea
push
call
lea
mov
push
call
push
call
push
call
pop
mov
pop
pop
mov
pop
mov
leave
ret
mov
call
sub
push
xor
push
push
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
mov
pop
push
mov
call
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
push
pop
jmp
xor
mov
jmp
xor
jmp
mov
jmp
mov
and
mov
lea
push
lea
mov
call
test
jne
mov
mov
mov
mov
add
mov
push
push
call
neg
sbb
inc
mov
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
lea
call
xor
pop
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
push
mov
lea
mov
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
push
push
push
mov
push
mov
push
call
mov
test
je
mov
mov
jmp
push
mov
mov
xor
and
push
push
mov
push
mov
mov
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
test
je
mov
push
call
and
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
add
mov
mov
mov
adc
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
sub
and
and
and
push
mov
push
lea
call
movzx
movzx
and
and
shl
lea
or
call
push
lea
call
movzx
lea
call
push
lea
call
mov
lea
and
call
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
push
mov
sub
push
mov
lea
call
lea
mov
push
call
pop
leave
ret
jmp
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
mov
push
cmp
push
push
mov
jge
cmp
jge
push
lea
pop
push
push
push
call
add
add
dec
jne
mov
lea
push
call
mov
mov
push
xor
pop
call
mov
add
mov
adc
cmp
jb
ja
cmp
ja
mov
push
push
push
push
mov
push
call
test
jne
mov
push
mov
call
test
jne
cmp
jne
cmp
jne
and
lea
add
push
mov
call
test
je
inc
add
add
cmp
jl
mov
inc
test
mov
je
and
lea
mov
mov
test
je
mov
mov
mov
mov
cmp
lea
je
cmp
jne
mov
lea
cmp
jb
mov
cmp
jge
mov
inc
push
push
push
mov
push
call
cmp
je
test
jne
cmp
jb
or
mov
sub
cmp
jb
push
lea
push
push
call
lea
lea
movs
mov
add
movs
cmp
movs
movs
jne
cmp
mov
sete
mov
jmp
mov
mov
mov
mov
mov
add
add
mov
add
cmp
jae
and
sub
mov
mov
mov
mov
add
cmp
jb
push
push
push
push
mov
call
push
mov
mov
call
test
pop
je
push
lea
pop
mov
rep
jmp
xor
push
lea
call
mov
inc
add
cmp
mov
jl
xor
jmp
push
pop
pop
pop
pop
leave
ret
mov
push
mov
push
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
jne
mov
jmp
mov
test
je
cmp
je
xor
jmp
test
jbe
test
jbe
mov
call
test
jg
mov
test
jbe
or
sub
cmp
jb
push
pop
jmp
xor
pop
pop
ret
push
push
movzx
push
push
mov
mov
movzx
and
shl
movzx
or
movzx
mov
and
shl
or
cmp
jb
xor
cmp
setne
mov
test
jne
mov
mov
cmp
jb
cmp
setne
mov
test
jne
and
and
cmp
jae
or
jmp
xor
cmp
setne
pop
pop
pop
pop
ret
mov
call
sub
push
mov
push
push
mov
mov
xor
push
mov
call
mov
lea
push
push
mov
push
push
push
call
cmp
jne
push
push
push
mov
push
call
cmp
jne
cmp
jne
push
pop
jmp
mov
mov
add
push
mov
pop
xor
mov
add
mov
call
cmp
mov
mov
ja
jb
cmp
jae
push
lea
push
push
call
mov
mov
sub
push
mov
sbb
and
mov
mov
call
add
test
je
push
lea
pop
mov
rep
jmp
xor
push
mov
call
mov
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
test
jne
mov
and
jmp
push
call
mov
mov
xor
pop
ret
mov
call
sub
and
and
push
push
mov
and
dec
jne
mov
or
xor
mov
test
jle
mov
mov
cmp
je
test
jge
mov
inc
add
cmp
jl
jmp
or
test
jl
push
lea
call
push
lea
call
or
lea
call
mov
pop
xor
pop
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
sub
jne
cmp
je
movzx
lea
call
movzx
lea
call
cmp
jl
lea
mov
cmp
je
mov
push
lea
call
jmp
push
push
jmp
push
lea
mov
mov
mov
call
lea
mov
mov
call
cmp
je
movzx
call
push
lea
mov
call
cmp
mov
jl
lea
mov
cmp
je
mov
push
lea
call
push
lea
call
push
mov
call
pop
jmp
push
push
push
push
call
push
push
lea
call
jmp
sub
je
dec
je
dec
jne
cmp
je
lea
lea
push
call
jmp
cmp
je
lea
lea
push
jmp
cmp
je
mov
lea
push
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
xor
mov
cmp
je
add
inc
cmp
jb
or
ret
mov
call
sub
push
push
xor
cmp
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
mov
test
mov
je
mov
push
call
mov
lea
mov
push
call
and
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
push
lea
mov
push
push
mov
mov
push
mov
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
push
push
push
mov
push
push
mov
push
mov
call
push
push
mov
push
mov
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
push
mov
mov
and
push
push
push
mov
mov
mov
push
mov
mov
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
mov
inc
mov
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
mov
mov
push
mov
xor
mov
mov
mov
push
push
push
push
push
push
call
push
mov
push
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
push
and
mov
call
lea
pop
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
lea
cmp
jle
sub
mov
test
jle
push
mov
shl
mov
mov
mov
push
call
add
dec
pop
jne
pop
mov
push
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
jne
mov
lea
push
push
call
jmp
mov
lea
push
call
jmp
mov
cmp
je
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
mov
xor
mov
push
mov
call
mov
push
lea
mov
call
cmp
jne
push
lea
push
push
call
add
test
jne
mov
cmp
mov
jbe
push
pop
jmp
mov
lea
push
push
push
push
push
call
cmp
jne
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
mov
mov
lea
push
push
push
mov
call
cmp
jne
cmp
jne
push
lea
call
mov
mov
cmp
je
mov
cmp
jne
dec
push
push
lea
call
mov
test
mov
jne
mov
mov
cmp
jae
push
lea
call
mov
mov
push
mov
mov
lea
push
lea
mov
call
mov
cmp
jl
mov
sub
cmp
jne
lea
push
push
lea
call
mov
mov
mov
call
push
test
sete
call
cmp
pop
je
push
mov
mov
call
mov
pop
xor
cmp
jb
cmp
jae
movzx
push
lea
lea
call
push
lea
mov
call
push
call
pop
push
call
pop
lea
mov
call
mov
and
cmp
je
mov
push
call
push
lea
call
xor
jmp
push
mov
call
inc
mov
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
mov
and
pop
and
xor
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
push
mov
push
call
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
mov
push
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
push
push
push
mov
push
push
mov
call
cmp
mov
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
lea
call
push
lea
mov
call
cmp
jne
lea
mov
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
lea
push
call
lea
call
lea
push
push
lea
mov
call
cmp
jne
mov
push
mov
lea
push
call
cmp
mov
jne
mov
cmp
je
mov
push
call
mov
mov
push
mov
push
call
lea
mov
mov
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
lea
mov
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
push
mov
push
mov
push
mov
sub
cmp
jb
xor
test
jbe
mov
mov
mov
mov
inc
cmp
jb
add
mov
pop
pop
pop
ret
xor
test
jbe
mov
cmp
jb
mov
call
test
je
mov
mov
mov
mov
inc
inc
cmp
jb
jmp
mov
jmp
push
mov
mov
call
lea
mov
push
push
push
push
xor
push
mov
push
mov
call
add
cmp
mov
jbe
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
movzx
or
cmp
mov
jbe
cmp
jae
mov
cmp
jb
mov
call
test
je
mov
mov
inc
test
mov
mov
je
mov
and
inc
test
mov
mov
jne
mov
push
lea
call
test
jne
test
jne
mov
mov
sub
cdq
add
adc
and
mov
mov
mov
lea
mov
push
lea
push
push
call
test
jne
jmp
cmp
jb
mov
call
test
je
mov
mov
mov
inc
mov
movzx
mov
and
and
add
movzx
shl
or
mov
add
and
cmp
ja
mov
add
cmp
ja
mov
and
jmp
mov
mov
and
inc
inc
mov
mov
mov
and
mov
jne
mov
push
lea
call
test
jne
test
jne
mov
sub
cdq
add
adc
mov
mov
and
mov
lea
mov
mov
push
lea
mov
push
push
call
test
jne
dec
jne
mov
shr
cmp
ja
cmp
jae
jmp
push
pop
jmp
mov
and
push
lea
call
pop
pop
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
push
call
mov
pop
test
je
mov
push
call
pop
ret
jmp
mov
jmp
push
mov
push
mov
mov
and
cmp
jle
mov
sub
push
push
push
call
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
and
xor
ret
mov
call
sub
xor
mov
mov
mov
mov
inc
shl
add
cmp
je
cmp
jbe
cmp
ja
push
lea
push
call
jmp
cmp
je
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
sub
je
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
push
mov
sub
push
push
mov
push
mov
xor
lea
mov
mov
push
push
push
push
push
call
cmp
jne
lea
lea
push
mov
mov
call
cmp
jne
push
pop
cmp
jb
movzx
movzx
shl
or
movzx
shl
movzx
or
movzx
shl
or
xor
mov
mov
or
movzx
shl
or
movzx
shl
or
cmp
jne
cmp
ja
lea
lea
cmp
jb
cmp
mov
mov
mov
jbe
lea
lea
jmp
xor
movzx
xor
mov
mov
mov
movzx
shl
or
shl
mov
xor
mov
or
mov
mov
movzx
movzx
shl
or
and
shl
mov
xor
mov
or
mov
mov
movzx
shl
or
movzx
shl
or
movzx
mov
xor
mov
and
mov
shl
or
movzx
shl
or
xor
mov
mov
mov
and
movzx
shl
or
movzx
shl
or
mov
cmp
mov
jae
and
cmp
jae
cmp
ja
mov
mov
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
inc
mov
add
add
cmp
jb
mov
xor
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
mov
sub
mov
mov
sbb
cmp
jb
ja
mov
cmp
jbe
lea
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
sub
mov
sbb
mov
mov
mov
xor
jmp
push
pop
pop
pop
pop
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
mov
call
test
jne
push
lea
call
xor
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
and
xor
pop
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
xor
cmp
push
mov
push
sete
cmp
mov
mov
je
mov
mov
cmp
je
xor
mov
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
shl
mov
mov
add
adc
inc
jmp
mov
push
mov
push
push
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
lea
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
mov
lea
lea
mov
push
push
push
shl
add
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
cmp
je
mov
push
push
mov
call
jmp
mov
mov
push
push
add
mov
mov
adc
mov
push
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
push
mov
mov
mov
mov
push
push
mov
push
mov
mov
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
add
mov
cmp
jne
mov
cmp
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
inc
mov
jmp
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
mov
and
push
shl
mov
mov
push
mov
add
lea
mov
push
mov
adc
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
call
test
pop
je
mov
and
and
mov
mov
ret
xor
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
test
je
mov
push
call
ret
jmp
mov
jmp
sub
jmp
push
push
mov
push
mov
cmp
jne
cmp
jne
movzx
sub
je
dec
dec
jne
cmp
jne
push
lea
push
push
call
add
test
jne
movzx
call
cmp
jl
cmp
jg
mov
movzx
call
xor
cmp
jl
mov
push
add
mov
pop
cmp
jne
inc
cmp
jl
cmp
jne
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
cmp
jne
mov
movzx
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
cmp
jae
push
pop
jmp
xor
jmp
xor
pop
pop
pop
ret
push
mov
xor
push
mov
pop
shl
cmp
je
inc
cmp
jl
or
pop
ret
cmp
jb
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
movzx
lea
cmp
pop
jbe
xor
jmp
add
push
lea
call
mov
ret
push
mov
push
push
push
mov
mov
mov
cmp
jl
push
mov
call
mov
test
jbe
mov
mov
sub
mov
mov
mov
inc
inc
dec
jne
and
mov
call
pop
pop
pop
pop
ret
cmp
jae
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
cmp
jae
xor
jmp
mov
mov
mov
mov
mov
mov
ret
push
mov
cmp
push
push
push
mov
jb
mov
mov
cmp
mov
jne
push
pop
jmp
cmp
jb
mov
cmp
mov
ja
mov
mov
movzx
movzx
test
je
lea
cmp
ja
lea
push
lea
call
cmp
je
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
cmp
mov
mov
mov
mov
je
cmp
jb
mov
mov
mov
mov
sub
jmp
cmp
jb
movzx
mov
mov
cmp
ja
cmp
ja
mov
sub
cmp
jb
push
lea
call
mov
push
add
push
push
call
mov
add
jmp
xor
pop
pop
pop
pop
ret
push
mov
sub
mov
mov
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
adc
mov
mov
mov
shl
cmp
mov
lea
jne
mov
cmp
jne
cmp
ja
jb
test
ja
mov
call
cmp
jbe
jmp
mov
mov
mov
inc
dec
test
je
movzx
mov
and
mov
je
cmp
ja
cmp
ja
lea
mov
movzx
cdq
mov
lea
test
mov
mov
jl
mov
push
pop
movzx
cdq
mov
mov
mov
mov
call
or
or
dec
mov
mov
jns
mov
mov
mov
mov
or
je
mov
sub
mov
mov
sub
sbb
cmp
jb
ja
cmp
jb
mov
shr
cmp
mov
ja
cmp
ja
test
mov
mov
jne
cmp
je
or
or
jmp
movsx
lea
cdq
mov
lea
test
mov
mov
mov
jl
mov
push
pop
movzx
cdq
mov
mov
mov
mov
mov
call
mov
or
or
dec
mov
mov
jns
mov
mov
sub
mov
mov
add
adc
mov
mov
cmp
mov
ja
jb
cmp
ja
mov
mov
sub
lea
mov
mov
movs
movs
movs
movs
call
mov
add
mov
adc
cmp
ja
mov
or
or
mov
mov
sub
lea
mov
mov
mov
movs
movs
movs
movs
call
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
xor
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
test
je
and
push
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
cmp
je
sub
sbb
mov
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
cmp
jb
ja
cmp
jb
push
push
push
call
mov
mov
add
add
adc
mov
jmp
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
or
jne
mov
mov
mov
call
mov
mov
and
mov
mov
mov
lea
cmp
mov
jne
mov
cmp
je
mov
push
mov
mov
pop
shl
mov
mov
call
mov
mov
xor
sub
mov
mov
not
sbb
and
and
mov
mov
mov
not
and
mov
cdq
sub
mov
sar
je
mov
shl
add
cmp
ja
jb
mov
cmp
jae
mov
jmp
mov
mov
mov
add
cdq
sub
sar
cmp
jne
mov
mov
and
add
mov
adc
mov
test
mov
je
mov
cmp
mov
jge
shl
add
mov
cmp
ja
jb
mov
cmp
jae
mov
and
cmp
je
inc
add
mov
cmp
jge
mov
jmp
mov
mov
mov
mov
inc
shl
add
mov
cmp
ja
jb
mov
cmp
ja
mov
inc
add
cmp
jb
jbe
and
cmp
je
mov
cmp
mov
jge
shl
mov
add
mov
cmp
ja
jb
mov
cmp
jae
mov
and
cmp
jne
inc
add
mov
cmp
jge
jmp
mov
and
mov
mov
cmp
mov
mov
jge
mov
mov
mov
add
mov
mov
mov
and
cmp
je
mov
mov
cmp
ja
jb
cmp
jae
mov
sub
sbb
add
mov
adc
call
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
mov
mov
mov
sub
mov
sbb
mov
add
mov
adc
cmp
jb
ja
cmp
jbe
mov
mov
sub
sbb
mov
mov
mov
shl
mov
mov
push
mov
add
call
test
jne
add
mov
mov
adc
add
mov
adc
add
inc
add
mov
cmp
jl
mov
mov
push
add
pop
shl
mov
mov
mov
mov
mov
call
mov
sub
mov
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
push
mov
mov
shl
push
push
add
mov
call
mov
mov
cmp
mov
mov
mov
jae
push
push
push
call
add
cmp
jne
jmp
mov
push
pop
mov
shl
lea
and
sub
cmp
jae
mov
shl
push
add
add
push
push
call
mov
add
mov
add
adc
jmp
mov
mov
shl
add
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
sbb
add
adc
cmp
mov
jne
cmp
je
mov
mov
mov
mov
call
test
jne
mov
lea
shl
add
mov
mov
cmp
jb
ja
cmp
jbe
mov
xor
sub
sbb
not
not
and
and
mov
call
mov
mov
cmp
jb
ja
cmp
jbe
mov
mov
sub
sbb
mov
mov
xor
cmp
jb
ja
mov
cmp
jbe
mov
mov
xor
cmp
je
push
push
push
call
mov
add
jmp
mov
mov
lea
shl
add
mov
mov
call
sub
mov
sbb
mov
mov
jmp
push
pop
jmp
mov
lea
push
push
mov
push
push
call
mov
mov
add
adc
mov
test
je
mov
xor
add
adc
sub
mov
sbb
pop
pop
pop
leave
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
mov
jbe
cmp
jb
mov
test
jne
mov
movzx
test
je
sub
mov
inc
and
inc
inc
cmp
mov
ja
sub
test
jne
mov
cmp
jne
mov
push
add
push
push
call
add
add
add
mov
jmp
add
cmp
ja
test
jne
xor
mov
xor
mov
dec
movzx
or
inc
cmp
mov
jbe
jmp
mov
test
jbe
test
jne
cmp
jae
mov
mov
mov
inc
mov
inc
inc
mov
dec
jmp
cmp
jb
mov
movzx
inc
inc
dec
dec
mov
lea
shr
test
je
inc
jmp
mov
mov
sar
and
add
lea
cmp
mov
ja
push
pop
sub
shr
cmp
jae
mov
or
sub
mov
add
test
jbe
mov
mov
mov
inc
dec
jne
add
mov
shr
cmp
ja
test
ja
add
mov
cmp
jb
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
mov
mov
mov
push
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
add
jmp
mov
mov
add
adc
mov
cmp
jne
mov
cmp
je
and
and
mov
mov
mov
test
je
mov
mov
xor
pop
pop
ret
push
mov
xor
push
cmp
push
je
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
je
mov
jmp
sub
sbb
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
push
add
push
push
call
add
test
je
mov
add
adc
xor
pop
pop
pop
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
xor
lea
mov
add
adc
mov
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
lea
call
xor
lea
push
push
call
mov
cmp
jle
push
mov
inc
cmp
jge
mov
mov
mov
mov
mov
call
test
jne
inc
cmp
jl
mov
lea
sub
push
push
call
mov
cmp
jl
pop
pop
pop
ret
mov
call
push
push
push
mov
push
mov
mov
mov
cmp
jb
xor
cmp
setne
mov
test
jne
sub
lea
mov
mov
push
call
and
sub
lea
mov
mov
push
call
or
call
test
jne
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
or
jmp
cmp
jne
cmp
jne
xor
jmp
push
pop
mov
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
push
mov
xor
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
mov
cmp
jge
or
cmp
je
mov
push
call
mov
jmp
cmp
jge
mov
and
mov
lea
mov
lea
cmp
jge
mov
sub
mov
lea
mov
cmp
je
inc
add
dec
jne
mov
mov
cmp
mov
jne
cmp
jne
add
lea
push
call
xor
mov
mov
mov
mov
xor
mov
pop
pop
pop
mov
leave
ret
cmp
jne
mov
test
je
cmp
jne
push
call
pop
mov
test
mov
je
mov
call
mov
jmp
xor
and
mov
test
je
mov
push
call
mov
lea
push
mov
push
mov
add
mov
push
lea
push
mov
push
call
test
mov
je
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
push
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
and
mov
movzx
push
call
mov
test
je
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
or
mov
mov
test
je
mov
push
call
jmp
or
test
je
mov
push
call
push
pop
jmp
push
push
mov
xor
mov
push
cmp
push
mov
je
add
push
pop
shl
lea
push
call
mov
mov
push
add
pop
mov
shl
lea
push
call
or
or
lea
lea
movs
movs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
je
mov
call
mov
mov
mov
call
pop
pop
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
call
pop
ret
push
mov
sub
and
and
or
or
push
push
push
lea
sub
mov
mov
mov
movs
movs
movs
mov
mov
movs
call
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
add
mov
mov
adc
call
cmp
jne
cmp
jne
mov
push
pop
shl
dec
cdq
and
and
or
jne
mov
cmp
jge
mov
mov
mov
mov
movzx
push
push
push
push
call
test
je
inc
cmp
jl
jmp
mov
mov
xor
xor
mov
test
mov
jle
mov
mov
lea
mov
and
cmp
je
mov
mov
sub
mov
sbb
call
add
mov
adc
mov
add
add
dec
jne
cmp
je
add
cmp
jne
cmp
je
push
pop
pop
pop
pop
leave
ret
cmp
jne
cmp
jne
xor
jmp
mov
xor
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
push
mov
lea
mov
call
mov
mov
test
je
mov
push
call
push
mov
mov
call
push
mov
call
pop
pop
pop
mov
pop
mov
leave
ret
mov
call
sub
mov
push
xor
push
cmp
jl
mov
mov
lea
mov
mov
lea
cmp
mov
jge
push
mov
sub
lea
mov
cmp
je
inc
add
dec
jne
xor
pop
mov
cmp
mov
jne
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
mov
mov
mov
mov
mov
lea
mov
push
lea
push
mov
push
push
push
call
test
je
xor
jmp
mov
lea
or
lea
call
mov
jmp
xor
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
cmp
mov
je
cmp
jbe
cmp
je
xor
jmp
push
pop
jmp
movzx
movzx
test
jne
mov
push
pop
lea
shl
dec
dec
cmp
ja
test
je
mov
lea
cmp
jne
mov
cmp
mov
jbe
lea
mov
mov
mov
shl
cmp
lea
jne
mov
inc
add
cmp
mov
mov
jb
mov
mov
mov
cmp
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
jb
mov
cmp
jne
mov
shl
cmp
mov
jae
test
jne
cmp
ja
cmp
jne
mov
lea
call
mov
mov
and
sub
add
push
push
lea
call
test
je
cmp
jb
add
mov
or
cmp
je
sub
je
sub
je
sub
je
mov
test
je
lea
push
call
jmp
lea
lea
push
jmp
lea
call
push
lea
mov
push
call
test
je
lea
lea
push
call
push
call
pop
jmp
push
lea
push
call
test
je
lea
mov
call
mov
cmp
jb
mov
jmp
lea
mov
call
jmp
push
call
pop
mov
jmp
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
push
xor
lea
push
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
call
push
call
pop
pop
pop
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
mov
mov
push
mov
movzx
push
mov
push
push
call
push
push
push
call
pop
pop
ret
push
mov
lea
call
lea
call
pop
ret
push
mov
call
mov
test
je
mov
push
call
and
pop
ret
mov
call
sub
push
push
mov
and
mov
mov
mov
lea
lea
push
call
and
and
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
and
cmp
jne
test
je
test
jl
mov
shr
mov
mov
mov
mov
cmp
jne
push
lea
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
and
call
inc
pop
cmp
pop
jl
lea
mov
push
mov
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
lea
push
call
jmp
lea
mov
push
jmp
mov
push
push
push
mov
mov
push
mov
and
xor
test
je
mov
mov
lea
cdq
sub
mov
mov
sar
mov
mov
cdq
cmp
jne
cmp
je
cmp
ja
jb
cmp
jae
mov
jmp
lea
cmp
jne
or
pop
pop
pop
pop
ret
mov
jmp
mov
call
sub
push
push
push
mov
call
mov
push
lea
call
xor
cmp
jne
lea
mov
push
call
test
je
mov
lea
push
push
mov
push
push
push
call
cmp
jne
movzx
mov
mov
call
mov
cmp
ja
jb
mov
cmp
jb
push
mov
push
call
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
push
call
mov
cmp
je
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
call
movzx
mov
cmp
mov
jge
mov
and
cmp
jmp
push
sub
pop
mov
push
shl
mov
push
push
push
push
lea
mov
call
test
je
cmp
jne
lea
call
cmp
je
lea
mov
push
push
movzx
push
push
push
push
lea
call
mov
cmp
jne
cmp
jne
push
pop
jmp
mov
mov
movzx
mov
mov
mov
mov
mov
mov
call
push
mov
mov
pop
mov
mov
call
cmp
jb
ja
cmp
ja
mov
mov
mov
call
test
mov
mov
ja
cmp
jbe
and
mov
jmp
mov
test
je
mov
lea
push
lea
push
push
call
mov
test
je
mov
and
test
jmp
mov
push
pop
mov
mov
shl
cmp
jbe
mov
and
test
je
mov
push
call
mov
jmp
push
lea
call
push
lea
call
and
and
mov
test
je
mov
cdq
mov
mov
and
xor
or
jne
mov
lea
push
lea
push
push
call
mov
test
jne
mov
mov
sub
mov
sbb
mov
jne
cmp
jae
mov
mov
cmp
jb
mov
mov
push
call
mov
test
jne
mov
add
adc
cmp
ja
mov
mov
mov
shl
lea
add
call
mov
lea
mov
mov
sub
neg
sbb
not
and
lea
push
push
movzx
push
push
push
call
test
je
lea
lea
push
call
lea
mov
call
mov
inc
lea
shl
cmp
jbe
mov
jmp
mov
and
test
je
mov
push
call
or
lea
call
mov
jmp
and
cmp
jle
mov
mov
mov
mov
mov
mov
or
je
mov
mov
and
xor
cmp
ja
jb
mov
cmp
ja
mov
shr
mov
cmp
jne
mov
or
jne
mov
jmp
xor
mov
and
je
test
je
test
je
jmp
test
jne
test
je
xor
test
je
push
mov
call
inc
mov
cmp
jl
xor
xor
cmp
jle
mov
mov
call
inc
cmp
jl
cmp
mov
jle
mov
mov
mov
cmp
jne
mov
or
jne
xor
cmp
mov
mov
jle
mov
mov
mov
cmp
je
mov
push
pop
mov
cmp
jle
cmp
jle
mov
mov
inc
shr
test
je
lea
call
lea
lea
push
mov
call
mov
or
mov
mov
mov
mov
mov
mov
or
lea
mov
lea
push
call
push
mov
call
pop
and
cmp
jle
lea
call
lea
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
je
cmp
jne
mov
mov
call
test
je
push
lea
call
push
lea
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
inc
push
mov
call
inc
pop
mov
cmp
jl
inc
mov
cmp
jl
lea
call
inc
mov
cmp
jl
mov
and
test
je
mov
push
call
xor
or
lea
call
mov
jmp
mov
and
test
je
mov
push
call
jmp
lea
mov
call
mov
and
test
je
mov
push
call
or
lea
call
push
pop
mov
pop
pop
pop
mov
leave
ret
push
push
push
mov
mov
lea
push
lea
call
add
lea
push
call
mov
call
mov
call
pop
pop
pop
ret
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
push
call
pop
ret
mov
call
push
mov
mov
push
push
mov
mov
push
lea
mov
mov
push
and
mov
push
mov
mov
push
movzx
push
push
push
call
mov
mov
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
jmp
xor
mov
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
dec
jne
xor
cmp
jge
mov
mov
cmp
jne
push
lea
mov
mov
mov
call
mov
lea
mov
push
cdq
sub
mov
mov
sar
call
push
lea
call
push
mov
call
pop
jmp
inc
jmp
mov
push
pop
jmp
mov
push
pop
shl
lea
push
call
jmp
push
push
lea
call
jmp
movzx
mov
mov
call
push
push
jmp
push
lea
call
mov
xor
cmp
jge
mov
mov
cmp
jne
mov
mov
push
push
lea
call
test
je
push
lea
call
movzx
lea
call
lea
lea
push
call
push
lea
call
movzx
lea
call
lea
lea
push
call
push
lea
call
push
mov
jmp
inc
jmp
cmp
je
push
lea
push
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
lea
push
call
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
je
dec
jne
push
jmp
test
je
cmp
jne
mov
xor
jmp
cmp
je
mov
mov
jmp
mov
mov
push
push
lea
call
jmp
test
je
cmp
je
mov
mov
jmp
test
setl
push
lea
call
jmp
push
lea
add
push
call
test
mov
jne
mov
jmp
cmp
jae
mov
test
je
lea
lea
push
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
push
mov
call
pop
jmp
push
lea
push
jmp
mov
sub
je
dec
je
sub
je
dec
jne
test
je
push
movzx
push
mov
push
push
call
push
lea
call
jmp
push
jmp
push
lea
push
jmp
push
lea
push
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
and
push
push
mov
push
mov
push
lea
mov
call
lea
mov
call
mov
test
je
mov
and
push
call
mov
jmp
mov
push
mov
call
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
lea
call
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
mov
je
mov
mov
cmp
je
mov
mov
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
shr
test
jne
mov
mov
mov
mov
mov
call
add
adc
inc
jmp
push
mov
push
mov
push
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
mov
shl
lea
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
xor
mov
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
mov
mov
test
mov
je
mov
push
call
and
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
mov
lea
mov
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
mov
xor
cmp
jge
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
push
push
call
mov
mov
test
mov
jne
test
je
mov
push
call
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
push
lea
call
mov
test
je
mov
push
call
and
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
push
movzx
push
push
push
push
call
push
mov
pop
cmp
jne
mov
jmp
test
je
mov
mov
test
je
mov
push
call
jmp
cmp
je
push
mov
mov
push
push
push
push
push
call
test
mov
je
cmp
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
test
mov
je
mov
push
call
mov
jmp
and
mov
mov
test
je
mov
push
call
mov
test
jne
mov
xor
jmp
cmp
je
mov
mov
jmp
mov
mov
add
adc
test
je
mov
mov
jmp
mov
xor
add
mov
adc
call
mov
push
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
mov
call
pop
mov
jmp
test
je
mov
push
call
mov
inc
mov
jmp
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
push
mov
call
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
cmp
je
mov
mov
jmp
mov
xor
mov
ret
mov
mov
mov
mov
xor
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
mov
mov
and
lea
call
mov
mov
mov
pop
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
neg
lea
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
lea
neg
sbb
and
jmp
mov
call
push
push
push
mov
push
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
push
mov
call
mov
pop
test
mov
je
mov
push
call
lea
mov
mov
mov
mov
call
and
mov
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
jmp
mov
jmp
push
push
push
mov
call
mov
mov
shl
add
lea
movs
movs
movs
movs
mov
pop
pop
lea
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
lea
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
lea
push
call
lea
xor
mov
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
pop
mov
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
and
lea
push
lea
call
lea
lea
push
mov
call
push
add
lea
pop
rep
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
cmp
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
push
mov
mov
dec
push
mov
mov
sub
push
push
pop
mov
call
cmp
jg
pop
pop
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
push
push
push
push
mov
mov
lea
mov
mov
cmp
jg
jge
push
lea
lea
mov
lea
call
test
jle
mov
push
lea
lea
call
test
jge
mov
mov
mov
shl
jmp
mov
mov
pop
pop
pop
leave
ret
mov
call
push
mov
mov
mov
call
test
jge
or
jmp
mov
mov
call
mov
neg
sbb
neg
push
call
push
call
pop
mov
pop
pop
mov
mov
leave
ret
sub
jmp
mov
mov
mov
mov
mov
ret
mov
cmp
je
xor
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
mov
mov
mov
lea
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
mov
movzx
cmp
je
cmp
jne
mov
cmp
mov
mov
mov
mov
mov
mov
sete
mov
mov
test
mov
je
mov
mov
jmp
mov
xor
mov
mov
mov
lea
mov
mov
mov
lea
push
call
lea
lea
push
call
lea
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
neg
sbb
and
add
mov
mov
add
mov
lea
cmp
je
xor
jmp
cmp
mov
jbe
lea
add
cmp
jae
push
mov
call
inc
add
mov
add
cmp
jb
mov
pop
pop
pop
pop
ret
mov
call
sub
push
push
mov
mov
mov
lea
call
and
push
mov
call
push
call
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
cmp
mov
jg
push
lea
call
push
mov
push
push
push
call
mov
mov
add
xor
cmp
pop
je
inc
cmp
jne
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
mov
mov
lea
inc
inc
cmp
jae
sub
push
call
mov
mov
mov
mov
inc
mov
mov
and
inc
pop
ret
push
push
mov
mov
cmp
jne
push
call
push
pop
mov
mov
lea
inc
inc
cmp
jae
sub
push
call
mov
mov
mov
add
pop
pop
ret
mov
call
sub
cmp
push
push
push
mov
jb
mov
mov
cmp
mov
jae
lea
cmp
ja
test
jne
mov
lea
lea
push
call
test
je
mov
cmp
ja
cmp
ja
movzx
add
push
lea
lea
push
call
test
je
movzx
and
add
cmp
mov
jbe
mov
add
sub
lea
call
mov
and
add
cmp
ja
push
lea
call
mov
mov
add
mov
cmp
jbe
mov
lea
lea
push
call
push
or
call
movzx
inc
add
cmp
pop
jb
mov
jmp
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
push
mov
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
test
jne
mov
and
jmp
push
call
mov
mov
xor
pop
ret
push
mov
push
push
push
mov
test
je
lea
call
lea
mov
push
call
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
mov
ja
je
cmp
ja
je
dec
je
sub
je
dec
dec
je
sub
je
dec
dec
je
dec
jne
mov
push
jmp
lea
mov
push
mov
movzx
push
push
pop
jmp
mov
cmp
jne
push
lea
call
jmp
mov
lea
mov
call
jmp
mov
mov
cmp
jl
push
lea
call
jmp
mov
push
jmp
sub
je
dec
je
sub
je
dec
je
dec
je
dec
jne
mov
lea
lea
jmp
mov
lea
movzx
movzx
mov
mov
lea
jmp
mov
push
jmp
mov
push
jmp
lea
mov
push
mov
movzx
push
push
pop
jmp
mov
push
jmp
mov
lea
lea
jmp
lea
cmp
ja
jmp
mov
lea
lea
call
jmp
mov
push
jmp
mov
push
jmp
mov
push
jmp
mov
push
jmp
lea
mov
push
mov
movzx
push
push
pop
call
jmp
lea
mov
push
mov
movzx
push
push
pop
call
jmp
mov
push
push
jmp
mov
push
push
jmp
mov
push
push
jmp
mov
push
push
jmp
mov
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
ret
adc
repnz
div
add
loopne
add
jmp
add
mov
add
add
add
sbb
add
aaa
repz
dec
repz
pop
repz
push
add
jnp
add
mov
call
sub
lea
push
mov
push
call
and
mov
mov
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
movzx
call
mov
movzx
and
lea
call
push
mov
lea
mov
call
mov
push
mov
mov
call
push
call
push
call
push
call
mov
mov
add
mov
pop
pop
leave
ret
push
mov
sub
and
push
mov
push
pop
mov
push
lea
push
call
lea
mov
push
call
mov
pop
leave
ret
mov
call
sub
test
push
push
mov
je
xor
push
lea
mov
mov
mov
call
lea
mov
push
mov
and
mov
push
call
test
jne
mov
cmp
jne
mov
push
call
jmp
cmp
jle
mov
cmp
jne
cmp
jne
add
lea
push
lea
push
push
call
push
lea
mov
call
push
mov
call
pop
mov
lea
push
call
push
call
pop
jmp
push
or
call
pop
mov
lea
call
mov
lea
push
call
mov
pop
pop
mov
leave
ret
mov
call
sub
and
push
mov
lea
lea
push
call
and
push
lea
call
cmp
jne
push
lea
mov
push
call
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
cmp
jl
mov
cmp
mov
je
cmp
jbe
cmp
ja
push
push
jmp
push
lea
mov
push
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
jmp
mov
cmp
jge
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
dec
je
jmp
push
push
jmp
push
push
lea
call
jmp
lea
call
jmp
cmp
je
mov
jmp
mov
lea
call
jmp
sub
je
sub
je
dec
jne
cmp
je
push
lea
call
jmp
cmp
je
lea
push
push
mov
push
pop
call
jmp
push
jmp
mov
lea
shl
add
sub
je
sub
je
dec
jne
push
push
jmp
mov
push
add
push
jmp
push
lea
mov
push
call
mov
mov
cmp
jae
mov
cmp
je
push
lea
call
jmp
push
lea
push
mov
call
push
lea
call
push
lea
mov
push
call
cmp
je
mov
cmp
jne
push
jmp
cmp
jne
push
lea
call
push
lea
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
push
and
mov
xor
mov
cmp
je
push
mov
xor
pop
div
mov
mov
imul
cmp
jne
cmp
ja
cmp
mov
jle
mov
mov
mov
mov
mov
mov
cmp
jae
mov
add
mov
add
cmp
jbe
inc
add
mov
cmp
jl
jmp
mov
sub
add
mov
cmp
jne
xor
jmp
xor
mov
mov
mov
push
lea
mov
call
mov
mov
mov
push
mov
xor
push
push
push
push
call
test
je
mov
jmp
push
mov
mov
call
test
jne
xor
cmp
jle
push
lea
call
cmp
je
lea
call
mov
lea
mov
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
mov
pop
mov
mov
pop
mov
mov
mov
mov
mov
mov
add
cmp
lea
mov
jbe
mov
lea
push
lea
call
mov
mov
push
add
and
call
pop
inc
cmp
jl
xor
push
mov
call
pop
mov
jmp
push
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
push
pop
mov
test
mov
jne
mov
cmp
jae
sub
mov
cmp
jb
mov
add
shr
movzx
cmp
mov
jb
mov
push
xor
inc
mov
inc
mov
cmp
mov
jbe
jmp
mov
mov
lea
mov
mov
push
call
inc
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
push
test
mov
jne
mov
cmp
jae
sub
cmp
mov
jb
mov
call
mov
add
movzx
movzx
mov
add
add
mov
shr
cmp
jb
lea
lea
push
push
call
test
je
and
add
test
mov
jbe
mov
add
add
mov
mov
mov
cmp
mov
sbb
neg
shr
cmp
jne
push
mov
mov
push
call
inc
cmp
jb
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
xor
cmp
push
push
mov
jle
mov
mov
mov
and
mov
shl
mov
shr
add
mov
test
jne
or
inc
inc
cmp
mov
jl
mov
pop
pop
pop
ret
xor
jmp
cmp
jb
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
ret
mov
call
sub
test
push
push
push
mov
jne
mov
mov
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
cmp
jne
cmp
jge
xor
mov
mov
mov
mov
mov
lea
lea
push
mov
call
push
or
mov
mov
call
pop
mov
mov
mov
mov
lea
shl
xor
mov
mov
sub
cmp
jb
mov
movzx
inc
inc
test
je
mov
lea
sub
cmp
jb
mov
lea
lea
call
lea
push
call
and
pop
test
mov
jbe
mov
mov
mov
push
call
inc
mov
cmp
jb
mov
push
call
test
jbe
mov
mov
mov
push
call
inc
inc
dec
jne
mov
push
call
mov
push
call
inc
cmp
jl
xor
cmp
sete
mov
pop
pop
pop
mov
leave
ret
xor
jmp
mov
call
sub
push
mov
mov
push
mov
push
mov
mov
mov
cmp
mov
ja
mov
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
cmp
jne
mov
push
push
push
push
mov
push
call
cmp
jne
push
lea
call
xor
cmp
jbe
cmp
mov
mov
je
mov
lea
push
push
mov
push
call
cmp
jne
mov
mov
sub
cmp
mov
jb
mov
mov
push
mov
lea
call
cmp
jne
add
cmp
jb
push
lea
call
push
lea
call
mov
lea
mov
push
push
mov
call
cmp
je
mov
jmp
cmp
mov
mov
mov
mov
jle
mov
mov
test
lea
mov
je
mov
mov
mov
mov
mov
mov
lea
and
push
push
mov
mov
call
mov
cmp
jne
cmp
mov
jle
mov
mov
test
lea
je
mov
mov
mov
mov
mov
lea
mov
push
mov
and
mov
push
call
cmp
jne
mov
cmp
mov
mov
mov
mov
mov
jle
mov
cmp
jge
mov
mov
lea
mov
test
jne
mov
cmp
jae
sub
cmp
jb
mov
add
mov
mov
mov
mov
mov
mov
cmp
jne
test
je
cmp
je
mov
mov
lea
shl
cmp
je
and
mov
and
mov
mov
sub
cmp
jbe
mov
lea
cmp
jbe
mov
cmp
jb
mov
cmp
ja
sub
cmp
jb
mov
add
cmp
jne
push
mov
lea
call
mov
jmp
cmp
jne
push
mov
lea
call
jmp
cmp
jne
cmp
je
push
push
push
mov
push
call
mov
sub
lea
mov
push
pop
mov
rep
lea
call
inc
mov
cmp
jl
xor
lea
mov
call
inc
mov
cmp
jl
and
lea
call
inc
mov
cmp
jl
cmp
je
cmp
je
xor
cmp
jle
xor
mov
add
cmp
jne
and
inc
add
cmp
jl
cmp
mov
jle
mov
mov
mov
cmp
je
or
mov
mov
mov
sub
lea
mov
mov
movs
movs
lea
movs
call
xor
inc
mov
cmp
jl
push
lea
call
mov
push
pop
push
pop
shl
cmp
je
inc
cmp
jle
or
cmp
jl
push
pop
shl
mov
dec
lea
not
and
mov
cmp
jae
cmp
ja
lea
call
mov
mov
cmp
mov
jae
mov
cmp
jne
inc
cmp
jb
cmp
jne
mov
mov
push
mov
add
mov
mov
add
mov
sub
mov
lea
mov
mov
call
lea
lea
push
mov
mov
call
push
call
pop
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
push
pop
jmp
push
pop
jmp
mov
jmp
push
pop
lea
mov
call
and
lea
call
or
lea
call
mov
jmp
lea
mov
call
and
lea
call
or
lea
call
push
pop
jmp
mov
push
push
mov
lea
shr
push
call
push
push
push
call
add
pop
pop
ret
push
mov
sub
push
push
mov
mov
push
push
lea
call
test
je
mov
test
jge
neg
mov
mov
mov
cmp
ja
cmp
jg
cmp
jne
cmp
ja
cmp
jne
cmp
jne
movzx
push
call
mov
and
lea
mov
sub
push
mov
mov
pop
jmp
xor
pop
pop
leave
ret
mov
imul
add
shr
add
shr
imul
shl
ret
push
mov
sub
push
push
push
mov
push
lea
push
call
test
je
mov
test
jge
neg
mov
cmp
ja
cmp
jg
push
pop
cmp
jne
cmp
jne
movzx
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
test
jne
cdq
sub
mov
sar
cmp
mov
ja
cmp
jg
mov
push
mov
call
mov
mov
push
mov
call
add
xor
cmp
jae
mov
mov
shl
mov
and
and
and
lea
push
mov
mov
mov
pop
mov
mov
mov
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
xor
mov
or
mov
mov
push
lea
mov
call
mov
mov
push
mov
pop
push
mov
call
cmp
jne
cmp
jne
cmp
jne
mov
lea
push
lea
mov
call
cmp
jne
add
push
mov
push
call
test
je
lea
mov
push
push
call
cmp
jne
cmp
je
lea
call
push
lea
mov
call
mov
mov
mov
mov
lea
add
mov
mov
cmp
jbe
mov
lea
lea
push
call
push
and
call
pop
cmp
je
mov
mov
and
je
mov
push
sub
mov
push
push
mov
push
push
call
cmp
jne
push
call
lea
mov
mov
mov
call
mov
mov
lea
mov
push
mov
call
cmp
jne
mov
xor
cmp
jbe
mov
cmp
jne
inc
cmp
jb
cmp
jae
cmp
jae
add
jmp
mov
add
test
je
cmp
jae
mov
mov
cmp
jbe
cmp
jb
cmp
jae
lea
call
push
lea
mov
call
mov
mov
mov
push
lea
push
shl
mov
mov
xor
xor
add
adc
push
push
push
call
cmp
je
mov
jmp
push
lea
mov
call
cmp
jne
cmp
jb
push
pop
push
call
pop
jmp
mov
mov
add
lea
mov
mov
mov
mov
add
cmp
jbe
mov
lea
lea
push
call
push
and
call
pop
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
xor
cmp
jb
ja
cmp
ja
cmp
ja
jb
cmp
jb
mov
mov
lea
push
lea
call
push
push
lea
mov
call
mov
mov
cmp
mov
mov
mov
jle
mov
mov
mov
cmp
jbe
lea
call
mov
push
sub
lea
mov
mov
mov
mov
mov
mov
call
mov
inc
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
lea
lea
push
call
push
mov
mov
call
pop
mov
mov
add
cmp
jb
cmp
jb
mov
inc
mov
cmp
jl
mov
lea
mov
call
and
lea
call
xor
mov
cmp
mov
mov
mov
mov
mov
jle
mov
mov
cmp
mov
mov
mov
je
mov
mov
call
test
jne
cmp
jne
push
mov
push
push
call
xor
cmp
jne
mov
lea
call
push
lea
mov
call
push
and
call
cmp
pop
mov
jle
mov
mov
add
cmp
je
mov
or
mov
mov
cmp
je
cmp
jbe
mov
mov
xor
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jb
ja
cmp
jb
mov
mov
sub
lea
mov
lea
movs
movs
movs
call
mov
inc
add
mov
cmp
jl
mov
mov
cmp
jbe
mov
mov
mov
push
pop
shl
cmp
je
inc
cmp
jle
or
test
jl
push
pop
shl
dec
add
not
and
cmp
jbe
lea
call
mov
and
add
push
mov
mov
mov
add
sub
lea
mov
mov
mov
mov
call
and
lea
push
lea
mov
call
push
and
call
pop
jmp
mov
jmp
cmp
jne
mov
call
or
or
cmp
je
mov
mov
xor
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
lea
mov
lea
movs
movs
movs
call
inc
mov
cmp
jl
cmp
ja
cmp
jb
push
push
push
push
call
cmp
ja
jb
cmp
jae
or
xor
xor
cmp
jle
mov
add
cmp
jge
cmp
jge
mov
mov
mov
mov
mov
call
test
je
inc
add
cmp
jl
jmp
mov
jmp
mov
xor
jmp
push
pop
push
mov
call
pop
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
mov
mov
sub
cmp
jbe
mov
test
je
mov
lea
push
mov
mov
call
test
mov
jne
mov
test
je
and
mov
mov
mov
mov
cmp
ja
add
cmp
jae
mov
sub
and
mov
inc
dec
jne
xor
test
jbe
movzx
add
mov
shr
add
and
inc
inc
mov
cmp
jb
add
cmp
jne
jmp
push
mov
call
mov
pop
jmp
mov
mov
push
add
mov
mov
mov
call
pop
xor
mov
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
push
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
lea
call
lea
call
lea
call
push
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
lea
call
mov
call
xor
pop
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
mov
je
mov
mov
cmp
je
xor
xor
mov
mov
cmp
jae
cmp
jne
mov
mov
mov
lea
lea
mov
cmp
jl
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
add
jmp
lea
shl
add
mov
add
add
adc
inc
jmp
mov
push
push
push
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
cmp
mov
je
mov
cmp
jne
mov
push
push
mov
mov
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
mov
lea
push
mov
add
push
call
mov
cmp
sete
push
call
cmp
pop
je
and
and
mov
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
lea
mov
call
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
and
push
mov
lea
mov
mov
push
push
push
call
mov
test
jne
mov
mov
lea
mov
lea
mov
mov
mov
mov
test
jl
mov
cmp
mov
mov
mov
jne
cmp
je
mov
push
mov
push
call
mov
test
jne
mov
test
je
mov
push
jmp
mov
test
jge
mov
xor
cmp
mov
mov
jne
cmp
je
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
push
push
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
push
mov
xor
and
push
push
mov
push
mov
mov
mov
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
add
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
test
je
mov
push
call
and
cmp
je
mov
neg
sbb
and
add
jmp
and
jmp
lea
shl
add
mov
add
cmp
mov
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
mov
mov
sub
cmp
jb
mov
cmp
ja
sub
cmp
jb
mov
test
je
mov
test
je
push
lea
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
push
mov
lea
call
mov
test
je
mov
mov
jmp
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
mov
inc
add
mov
mov
push
pop
adc
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
mov
push
mov
xor
push
mov
mov
lea
push
mov
mov
cmp
lea
mov
mov
mov
jge
cmp
jge
mov
push
push
push
mov
push
call
jmp
push
call
pop
xor
cmp
je
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
xor
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
mov
mov
test
jl
mov
mov
lea
push
call
mov
push
mov
mov
push
push
call
add
jmp
mov
mov
lea
lea
mov
shl
add
mov
mov
sub
cmp
mov
jb
mov
cmp
ja
mov
sub
cmp
jae
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
push
pop
jmp
mov
test
jne
push
call
xor
pop
cmp
je
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
push
and
and
add
lea
mov
mov
mov
call
mov
mov
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
add
push
mov
lea
call
mov
push
lea
mov
push
push
call
mov
mov
push
mov
mov
add
add
push
push
call
mov
add
mov
push
mov
call
mov
and
test
mov
mov
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
push
mov
push
xor
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
push
lea
mov
mov
call
push
call
push
lea
mov
call
lea
add
mov
mov
mov
mov
call
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
push
mov
and
and
call
mov
mov
mov
mov
and
mov
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
push
push
mov
call
mov
push
pop
lea
lea
shl
add
rep
mov
pop
pop
lea
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
push
push
mov
mov
add
mov
mov
lea
mov
push
mov
and
and
mov
call
mov
mov
pop
pop
ret
mov
cmp
jbe
mov
shr
jmp
push
pop
cmp
sbb
and
add
push
push
mov
cmp
ja
mov
lea
cmp
jae
lea
push
call
pop
pop
ret
mov
call
push
push
push
mov
sub
mov
mov
push
call
and
sub
mov
mov
push
call
or
call
mov
mov
pop
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
push
lea
lea
mov
call
test
je
or
jmp
lea
lea
call
neg
sbb
inc
mov
push
call
push
call
pop
mov
pop
pop
mov
mov
leave
ret
mov
push
mov
cmp
jb
jne
mov
cmp
jb
xor
pop
ret
push
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
push
pop
ret
xor
ret
sub
jmp
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
lea
call
test
jne
cmp
jne
mov
mov
mov
mov
movzx
mov
and
inc
movzx
mov
mov
shr
and
inc
mov
mov
shr
shr
cmp
mov
mov
ja
cmp
jb
and
cmp
jbe
push
pop
jmp
add
lea
cmp
jl
push
mov
call
mov
push
mov
push
mov
call
and
mov
mov
add
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
sub
je
sub
jne
push
lea
call
mov
lea
mov
mov
add
push
call
push
mov
lea
call
push
mov
lea
call
push
lea
call
cmp
jb
mov
cmp
je
push
mov
lea
call
push
lea
call
push
mov
jmp
mov
lea
mov
call
cmp
je
lea
lea
push
call
jmp
mov
lea
push
call
jmp
mov
cmp
je
push
lea
push
call
jmp
mov
push
lea
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
mov
push
call
mov
lea
call
lea
mov
push
call
pop
leave
ret
mov
push
add
push
mov
call
ret
mov
call
push
push
push
push
mov
and
push
mov
mov
lea
mov
push
call
lea
lea
push
push
call
mov
jmp
mov
mov
ret
mov
and
cmp
jne
push
lea
call
jmp
mov
lea
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
xor
div
xor
mov
mov
mov
div
pop
ret
mov
push
mov
imul
imul
add
sub
mov
call
pop
ret
push
mov
mov
mov
lea
xor
cmp
jb
cmp
jae
neg
and
mov
mov
call
mov
shl
movzx
shl
or
shl
mov
jmp
pop
ret
mov
cmp
je
mov
inc
mov
ret
jmp
shr
mov
push
mov
push
mov
xor
div
cmp
jae
push
xor
call
xor
jmp
mov
mov
sub
push
call
push
pop
pop
pop
ret
mov
call
mov
call
push
push
xor
push
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
lea
push
push
mov
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
mov
push
push
call
lea
call
mov
lea
push
mov
call
test
jne
and
lea
call
mov
or
cmp
jmp
mov
mov
mov
mov
mov
call
mov
test
mov
je
push
call
pop
mov
test
mov
je
mov
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
lea
call
push
lea
mov
call
test
jne
lea
mov
call
test
mov
je
mov
push
call
mov
call
and
lea
call
mov
or
test
je
mov
push
call
mov
jmp
mov
push
pop
cmp
mov
je
cmp
jne
cmp
ja
cmp
mov
mov
mov
jne
lea
call
jmp
push
lea
call
mov
lea
mov
mov
xor
and
mov
mov
mov
mov
mov
lea
push
call
test
je
cmp
jne
xor
cmp
jne
mov
sub
cdq
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
cmp
jne
mov
lea
lea
call
cmp
mov
jne
test
jl
mov
mov
inc
cmp
mov
jb
jmp
xor
mov
lea
call
cmp
mov
jne
test
jl
mov
mov
inc
cmp
mov
jb
add
mov
mov
mov
adc
sub
xor
cdq
add
mov
adc
add
adc
mov
test
mov
je
push
mov
call
mov
test
jne
xor
cmp
jl
mov
sub
cdq
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
mov
call
test
mov
je
mov
push
call
mov
call
and
lea
call
mov
or
test
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
cmp
jmp
cmp
sete
test
je
mov
mov
cmp
je
mov
jmp
mov
test
je
mov
push
call
and
push
mov
push
call
mov
lea
mov
call
test
mov
je
mov
push
call
mov
call
and
lea
call
mov
or
test
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
jmp
mov
jmp
push
mov
lea
call
mov
lea
mov
call
lea
call
mov
pop
ret
push
push
mov
mov
mov
lea
call
mov
lea
pop
pop
jmp
mov
push
shl
cmp
jne
add
call
jmp
add
call
neg
sbb
neg
ret
cmp
mov
jne
mov
add
call
jmp
mov
add
call
neg
sbb
neg
ret
push
mov
push
push
and
and
or
pop
mov
call
mov
movzx
shl
or
dec
mov
jne
cmp
pop
sbb
pop
neg
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
mov
mov
and
lea
call
and
mov
mov
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
push
call
pop
pop
mov
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
jmp
mov
jmp
sub
jmp
push
mov
sub
push
push
mov
push
lea
call
test
jne
lea
push
push
lea
push
call
mov
push
movzx
mov
mov
mov
xor
mov
or
movzx
mov
xor
mov
or
mov
lea
push
lea
push
call
movzx
xor
add
mov
or
movzx
mov
xor
mov
or
lea
mov
call
test
je
cmp
jb
cmp
push
pop
je
cmp
jne
mov
lea
push
push
push
push
push
call
jmp
cmp
jne
lea
mov
call
test
jne
lea
call
test
je
mov
mov
shl
add
lea
push
push
push
push
push
call
test
jne
mov
xor
and
or
je
mov
lea
push
mov
push
mov
push
push
pop
call
add
adc
push
push
push
push
call
sub
sbb
push
push
push
call
pop
test
jne
lea
mov
call
test
jne
lea
call
test
je
mov
shl
add
cmp
jne
mov
jmp
mov
lea
push
push
cdq
push
push
push
call
jmp
push
pop
pop
pop
leave
ret
cmp
jne
cmp
jne
cmp
jne
cmp
jne
push
pop
ret
xor
ret
cmp
jne
cmp
jne
cmp
jne
push
pop
cmp
je
xor
ret
push
mov
sub
push
mov
push
lea
call
test
jne
lea
push
push
push
call
movzx
movzx
shl
or
add
movzx
shl
or
movzx
shl
or
movzx
mov
movzx
shl
or
movzx
shl
or
movzx
shl
or
mov
xor
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
mov
mov
dec
jne
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
and
push
push
mov
push
mov
mov
mov
push
call
mov
mov
call
test
jne
mov
lea
push
push
push
push
push
call
test
jne
push
lea
mov
call
test
jne
mov
lea
push
push
push
push
push
call
test
jne
mov
mov
sub
push
sbb
mov
mov
lea
call
xor
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
xor
mov
mov
cmp
mov
je
cmp
jbe
cmp
ja
mov
lea
push
push
call
jmp
mov
cmp
mov
je
xor
mov
mov
inc
cmp
jne
mov
mov
cmp
jne
cmp
jne
mov
jmp
cmp
jne
cmp
jne
cmp
mov
je
mov
xor
cmp
je
inc
cmp
jne
lea
mov
mov
inc
inc
cmp
jne
lea
lea
push
call
push
lea
call
or
lea
call
mov
xor
pop
mov
leave
ret
mov
call
push
push
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
push
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
push
push
push
mov
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
push
push
mov
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
cmp
je
mov
push
call
mov
mov
push
push
mov
call
cmp
mov
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
push
mov
push
mov
mov
push
and
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
call
test
pop
je
mov
and
and
mov
mov
ret
xor
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
test
je
mov
push
call
ret
jmp
mov
jmp
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
mov
mov
dec
je
sub
jne
mov
push
jmp
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
xor
mov
push
mov
call
mov
cmp
je
mov
mov
push
mov
mov
call
mov
lea
push
push
mov
push
mov
call
cmp
je
mov
mov
cmp
je
mov
push
call
mov
and
cmp
jmp
push
lea
mov
mov
mov
call
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
push
call
pop
jmp
cmp
je
lea
mov
call
push
call
pop
jmp
push
lea
call
lea
mov
call
mov
cmp
je
mov
lea
cmp
jne
sub
sar
mov
jmp
cmp
jne
or
push
lea
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
cmp
mov
jl
inc
lea
push
push
lea
call
push
lea
mov
call
push
mov
call
pop
lea
push
push
lea
call
push
lea
mov
call
push
mov
call
pop
jmp
lea
lea
push
call
lea
lea
push
call
mov
mov
call
lea
call
lea
mov
call
and
push
pop
lea
push
push
lea
mov
call
mov
mov
mov
call
push
cmp
sete
mov
call
test
pop
je
mov
cmp
jge
mov
mov
sub
cmp
jne
inc
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
mov
test
sete
call
test
pop
je
cmp
jge
mov
mov
sub
cmp
jne
inc
jmp
cmp
jne
mov
xor
cmp
mov
je
mov
push
call
lea
lea
push
mov
call
mov
mov
cmp
je
mov
push
call
mov
lea
sub
push
lea
push
call
push
lea
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
lea
pop
push
push
lea
call
push
lea
mov
call
push
mov
call
mov
pop
mov
mov
cmp
jge
push
lea
call
jmp
dec
lea
push
lea
push
call
push
lea
mov
call
push
call
pop
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
cmp
je
lea
mov
call
push
call
push
call
push
call
push
call
push
call
push
call
mov
add
cmp
mov
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
mov
mov
lea
mov
call
add
push
lea
push
adc
call
mov
xor
cmp
je
mov
push
cdq
mov
lea
mov
mov
push
push
call
mov
cmp
je
push
call
push
call
push
call
push
call
push
call
push
call
add
jmp
lea
lea
push
call
mov
mov
lea
push
mov
push
mov
push
call
mov
cmp
je
cmp
je
mov
mov
cmp
je
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
cmp
jne
mov
mov
cmp
je
mov
push
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
xor
jmp
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
cmp
je
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
mov
mov
lea
mov
call
add
push
push
lea
adc
call
lea
lea
push
call
mov
test
je
mov
push
cdq
mov
lea
mov
mov
push
push
call
mov
test
je
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
lea
mov
call
push
mov
call
pop
xor
jmp
push
call
push
call
push
call
push
call
push
call
push
call
mov
add
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
push
pop
jmp
dec
dec
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
call
cmp
mov
mov
je
mov
dec
cmp
jl
mov
mov
cmp
jne
lea
mov
push
lea
call
push
lea
mov
call
and
push
jmp
cmp
jne
lea
mov
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
jns
lea
lea
push
mov
call
mov
push
mov
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
inc
cmp
je
cmp
jne
test
jne
push
mov
call
xor
cmp
setne
dec
and
mov
and
add
mov
mov
and
inc
test
jle
push
lea
call
dec
jne
jmp
lea
mov
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
js
mov
lea
push
lea
mov
call
push
lea
mov
call
and
push
jmp
dec
cmp
jl
mov
mov
cmp
jne
lea
add
push
lea
call
push
lea
mov
call
push
and
call
cmp
pop
jne
push
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
and
call
pop
pop
dec
jns
jmp
lea
inc
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
js
mov
lea
push
lea
mov
call
push
lea
mov
call
and
push
jmp
push
mov
lea
call
lea
call
xor
pop
ret
mov
xor
cmp
mov
setne
mov
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
je
cmp
jbe
cmp
ja
mov
lea
push
push
call
jmp
mov
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
mov
mov
push
mov
push
push
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
mov
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
mov
push
push
mov
push
push
mov
mov
push
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
push
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
add
adc
inc
jmp
mov
cmp
je
mov
push
call
mov
mov
push
push
call
mov
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
mov
jmp
mov
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
and
cmp
mov
je
mov
push
call
mov
mov
cmp
jge
and
mov
lea
mov
mov
push
call
mov
mov
mov
lea
mov
mov
lea
push
call
mov
mov
test
je
mov
push
call
inc
jmp
mov
call
mov
mov
mov
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
xor
xor
xor
cmp
mov
jle
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
add
mov
push
push
push
push
push
call
test
jne
inc
mov
cmp
jl
xor
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
push
xor
mov
lea
mov
mov
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
push
mov
mov
shl
mov
mov
mov
test
je
mov
test
je
mov
push
call
push
call
pop
add
dec
jne
pop
pop
push
mov
push
call
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
xor
mov
mov
mov
mov
sub
je
dec
jne
mov
cmp
je
push
push
jmp
mov
push
mov
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
push
mov
push
mov
lea
push
call
test
jne
push
lea
call
xor
pop
ret
push
push
mov
push
mov
lea
push
call
lea
push
mov
mov
call
mov
test
jne
push
mov
call
test
je
push
lea
call
jmp
push
pop
pop
mov
pop
pop
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jae
push
pop
jmp
xor
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
mov
push
push
call
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
and
mov
mov
mov
mov
mov
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
mov
mov
lea
mov
mov
mov
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
and
test
je
mov
push
call
mov
jmp
mov
test
je
mov
xor
push
push
push
push
push
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
push
push
mov
push
push
push
push
call
test
mov
mov
jne
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
mov
call
push
mov
add
pop
adc
add
adc
mov
mov
mov
test
je
mov
push
call
and
mov
push
mov
push
call
test
mov
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
and
test
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
push
pop
cmp
jne
mov
xor
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
je
mov
or
lea
jmp
cmp
je
or
lea
call
jmp
or
lea
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
or
lea
call
mov
jmp
mov
mov
or
lea
call
mov
mov
push
push
lea
push
call
jmp
cmp
je
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
mov
push
push
push
push
push
call
cmp
je
jmp
mov
push
lea
call
mov
mov
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
xor
mov
mov
push
mov
mov
mov
push
call
cmp
jne
mov
lea
push
push
call
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
jne
mov
push
lea
call
mov
cmp
je
cmp
je
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
test
je
mov
cmp
jne
cmp
jne
cmp
mov
jae
mov
mov
push
lea
call
push
call
pop
mov
cmp
mov
je
mov
call
mov
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
call
mov
cmp
je
add
jmp
xor
mov
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
add
mov
adc
cmp
jne
cmp
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
push
push
call
cmp
mov
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
push
lea
push
call
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
call
test
pop
je
mov
call
jmp
xor
lea
neg
sbb
and
ret
jmp
mov
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
lea
push
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
jne
mov
cmp
jae
mov
cmp
je
push
jmp
mov
push
push
lea
call
jmp
lea
call
lea
push
call
pop
lea
mov
mov
call
lea
push
lea
call
push
lea
call
or
lea
call
mov
xor
pop
mov
leave
ret
push
mov
push
call
ret
push
mov
push
push
mov
push
push
xor
mov
cmp
mov
jbe
cmp
jne
mov
mov
cmp
jb
call
jmp
mov
inc
mov
mov
mov
mov
cmp
jbe
mov
mov
movzx
shl
or
sub
mov
jne
jmp
mov
sub
mov
mov
movzx
shr
mov
mov
mov
shl
mov
or
mov
mov
mov
shl
dec
and
mov
mov
pop
pop
pop
leave
ret
mov
call
sub
push
mov
mov
push
lea
push
push
mov
call
test
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jae
lea
call
and
push
lea
call
test
jne
mov
jmp
push
lea
call
lea
call
and
and
lea
push
lea
mov
call
mov
lea
push
call
push
lea
call
push
lea
call
push
lea
call
lea
call
lea
call
lea
mov
call
and
and
lea
call
movzx
mov
and
shr
cmp
mov
mov
jne
lea
call
mov
mov
test
je
sub
xor
cdq
add
adc
add
adc
add
mov
adc
mov
jne
cmp
ja
cmp
jge
mov
mov
mov
mov
lea
mov
push
mov
call
push
and
mov
call
mov
pop
mov
push
mov
mov
lea
mov
call
push
mov
lea
push
call
cmp
jne
cmp
je
mov
mov
mov
add
adc
cmp
jb
ja
mov
cmp
jb
mov
cdq
mov
lea
mov
mov
push
lea
mov
push
push
call
mov
test
jne
mov
mov
mov
mov
jmp
sub
cdq
add
adc
add
mov
adc
xor
mov
or
lea
call
mov
jmp
or
lea
call
push
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
push
push
xor
mov
xor
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
movzx
mov
add
shl
or
cmp
jge
jmp
lea
push
push
mov
call
pop
mov
pop
pop
leave
ret
push
mov
push
push
push
push
xor
mov
xor
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
movzx
mov
add
shl
or
cmp
jge
jmp
lea
push
push
mov
call
pop
mov
pop
pop
leave
ret
push
mov
call
pop
ret
mov
call
push
push
push
push
and
mov
push
push
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
ret
mov
push
push
lea
call
ret
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
sete
cmp
mov
je
mov
mov
mov
cmp
je
xor
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
add
adc
inc
jmp
mov
push
push
push
mov
call
push
call
pop
mov
mov
cmp
mov
je
call
mov
and
mov
test
je
mov
push
call
push
push
mov
mov
call
xor
xor
and
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
call
mov
test
jne
cmp
setne
cmp
mov
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
adc
and
push
mov
lea
mov
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
jmp
mov
test
je
mov
push
call
and
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
inc
mov
mov
jmp
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
neg
lea
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
push
mov
mov
add
mov
and
and
lea
push
mov
call
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
test
je
xor
mov
mov
ret
movzx
ret
test
je
movzx
xor
mov
mov
movzx
shl
or
shl
or
ret
mov
ret
test
push
je
movzx
xor
push
mov
mov
shl
or
movzx
shl
movzx
or
xor
mov
xor
mov
mov
movzx
shl
or
pop
shl
or
xor
or
or
jmp
mov
mov
mov
pop
ret
push
mov
cmp
push
mov
push
push
mov
mov
mov
jb
mov
mov
call
cmp
je
mov
and
shr
mov
mov
mov
shr
movzx
mov
mov
and
jmp
mov
and
shr
mov
mov
mov
and
movzx
mov
mov
shr
or
xor
movzx
mov
mov
mov
mov
cmp
mov
mov
jne
mov
cmp
mov
je
shr
movzx
mov
and
jmp
and
movzx
movzx
mov
shr
mov
mov
cmp
je
cmp
je
xor
jmp
push
jmp
dec
push
movzx
mov
pop
cdq
idiv
shl
add
mov
cdq
idiv
lea
cmp
mov
jne
cmp
jb
mov
lea
call
mov
mov
and
lea
call
mov
and
mov
mov
shr
mov
dec
test
je
inc
lea
jmp
cmp
jne
cmp
jb
mov
lea
mov
call
test
mov
je
shr
mov
and
and
jmp
and
mov
and
shr
mov
lea
mov
call
mov
and
test
je
and
and
jmp
mov
mov
push
pop
call
mov
mov
push
jmp
cmp
jb
cmp
jne
mov
lea
call
movzx
mov
and
add
cmp
sbb
not
and
jmp
push
pop
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
push
push
mov
push
mov
mov
jb
mov
mov
mov
call
test
je
mov
shr
mov
and
jmp
mov
and
mov
shr
mov
movzx
mov
movzx
mov
mov
cmp
jne
cmp
jb
mov
lea
call
mov
and
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
mov
mov
and
mov
mov
shr
cmp
jne
mov
dec
test
je
inc
lea
jmp
or
xor
mov
mov
cmp
mov
mov
jne
cmp
jb
mov
lea
call
test
mov
je
shr
mov
and
and
jmp
and
mov
and
shr
mov
lea
mov
call
mov
and
test
je
and
and
jmp
mov
mov
push
pop
call
mov
mov
push
jmp
cmp
jne
cmp
jb
mov
lea
call
mov
lea
mov
mov
call
mov
test
movzx
je
shr
mov
and
and
jmp
and
mov
and
shr
lea
mov
call
mov
and
cmp
je
and
and
jmp
mov
mov
push
pop
call
mov
mov
mov
lea
call
movzx
push
xor
test
pop
jbe
lea
cmp
ja
mov
movzx
lea
cmp
ja
inc
cmp
jb
jmp
cmp
je
cmp
je
cmp
jb
cmp
jne
mov
lea
call
movzx
mov
and
add
cmp
sbb
not
and
jmp
cmp
je
cmp
je
xor
jmp
push
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
push
mov
cmp
push
push
mov
push
mov
mov
jb
mov
mov
mov
call
test
je
mov
shr
mov
and
jmp
mov
and
mov
shr
mov
movzx
mov
movzx
mov
xor
mov
mov
mov
mov
mov
cmp
je
cmp
je
mov
cmp
jb
cmp
jne
cmp
jb
mov
lea
call
test
mov
je
shr
mov
and
and
jmp
and
mov
and
shr
mov
lea
mov
call
mov
and
push
jmp
cmp
jne
cmp
jb
mov
lea
call
mov
lea
mov
call
mov
test
movzx
je
shr
mov
and
and
jmp
and
mov
and
shr
lea
mov
call
mov
mov
and
lea
call
movzx
push
xor
test
pop
jbe
lea
cmp
ja
movzx
lea
cmp
ja
inc
cmp
jb
jmp
cmp
je
cmp
je
cmp
jb
cmp
jne
mov
lea
call
movzx
mov
and
add
cmp
sbb
not
and
jmp
cmp
je
cmp
jne
push
pop
jmp
push
jmp
cmp
jne
cmp
jb
mov
lea
call
mov
mov
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
mov
and
push
jmp
cmp
jb
mov
lea
call
mov
mov
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
mov
mov
push
pop
mov
push
call
push
push
push
push
call
xor
add
adc
cmp
ja
jb
cmp
jbe
xor
pop
pop
pop
leave
ret
mov
push
mov
push
cmp
jne
mov
xor
and
dec
and
or
je
push
pop
jmp
xor
movzx
mov
mov
call
mov
mov
mov
pop
cdq
add
adc
mov
mov
pop
ret
push
mov
mov
push
push
push
push
pop
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
mov
mov
je
cmp
je
cmp
jne
cmp
jb
mov
push
mov
mov
movzx
cdq
mov
mov
movzx
mov
pop
jmp
cmp
jne
push
pop
cmp
jb
mov
mov
mov
mov
mov
mov
movzx
movzx
cmp
mov
jbe
lea
cmp
ja
mov
lea
cmp
ja
cmp
ja
inc
cmp
jb
jmp
movzx
add
cmp
ja
movzx
jmp
cmp
jb
mov
mov
mov
lea
cmp
jb
cmp
jbe
jmp
push
pop
cmp
jb
cmp
jb
add
cmp
jb
jmp
cmp
jne
cmp
jb
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jb
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
push
call
push
push
push
push
call
xor
add
adc
cmp
ja
jb
cmp
jbe
xor
pop
pop
pop
pop
ret
repz
pop
add
sub
adc
add
add
add
add
add
add
call
push
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
mov
call
mov
lea
push
mov
mov
call
mov
lea
push
mov
call
mov
mov
lea
push
mov
call
mov
lea
mov
call
lea
mov
call
lea
push
mov
mov
call
mov
mov
lea
push
mov
mov
call
mov
lea
push
mov
mov
call
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
jmp
xor
push
lea
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
add
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
lea
push
mov
push
mov
call
mov
pop
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
lea
mov
call
pop
mov
lea
call
lea
mov
call
mov
mov
test
pop
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
and
lea
call
push
mov
call
pop
pop
mov
mov
leave
ret
push
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
xor
cmp
push
push
mov
je
mov
mov
mov
mov
cmp
movzx
je
mov
push
lea
call
cmp
jne
xor
cmp
push
push
sete
inc
push
mov
mov
push
push
mov
call
cmp
jne
cmp
jne
mov
cmp
jae
push
lea
call
pop
mov
push
mov
mov
call
mov
mov
mov
push
call
cmp
jne
mov
cmp
jne
push
mov
call
cmp
jne
mov
jmp
mov
mov
mov
lea
push
push
lea
mov
mov
call
cmp
jne
cmp
jne
cmp
je
mov
mov
mov
mov
mov
xor
mov
pop
pop
pop
mov
leave
ret
mov
mov
add
jmp
cmp
jne
cmp
lea
jne
push
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
or
lea
mov
mov
push
mov
call
mov
push
lea
call
mov
lea
add
push
push
push
mov
call
cmp
jne
mov
mov
cmp
mov
mov
jb
ja
cmp
ja
mov
mov
lea
push
mov
push
push
push
push
push
call
cmp
jne
mov
mov
mov
add
mov
adc
cmp
jne
cmp
jmp
cmp
lea
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
push
push
mov
push
push
push
push
call
cmp
jne
mov
mov
call
mov
add
adc
cmp
jne
cmp
je
push
pop
jmp
push
mov
sub
mov
push
mov
push
mov
mov
mov
push
push
mov
mov
and
and
mov
test
mov
mov
pop
je
movzx
cmp
jbe
inc
sub
dec
cmp
sbb
inc
cmp
ja
cmp
ja
sub
sub
mov
mov
inc
inc
dec
jne
mov
cmp
jb
movzx
inc
dec
cmp
mov
jb
movzx
mov
dec
shr
and
mov
inc
lea
mov
shr
inc
jmp
cmp
jae
cmp
jne
test
jne
push
pop
test
je
movzx
inc
dec
test
jne
add
jmp
add
add
cmp
ja
cmp
ja
push
sub
sub
pop
mov
mov
inc
inc
dec
jne
jmp
movzx
dec
push
mov
mov
shr
inc
cmp
lea
pop
jne
push
add
pop
jmp
cmp
mov
sbb
mov
and
add
and
jne
mov
test
je
movzx
inc
dec
test
mov
jne
add
jmp
add
inc
inc
cmp
jb
movzx
movzx
sub
mov
shl
shr
add
mov
inc
inc
cmp
jae
test
je
and
shl
lea
inc
cmp
ja
sub
cmp
jb
mov
sub
sub
add
mov
mov
inc
dec
jne
and
jne
mov
mov
push
pop
jmp
mov
cmp
ja
cmp
ja
mov
mov
sub
sub
xor
mov
inc
inc
cmp
mov
jbe
mov
mov
inc
inc
cmp
mov
jbe
mov
mov
inc
mov
inc
jmp
sub
mov
sub
mov
mov
mov
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
mov
shr
and
or
cmp
mov
ja
mov
push
lea
call
xor
cmp
jne
mov
lea
call
movzx
mov
shr
not
and
cmp
je
and
cmp
ja
mov
mov
add
cmp
ja
cmp
mov
je
mov
push
push
push
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
cmp
je
jmp
mov
push
call
cmp
jne
mov
jmp
mov
push
mov
call
cmp
jne
mov
add
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
push
cmp
mov
jb
ja
cmp
jb
mov
sub
sbb
cmp
ja
jb
test
jae
sub
push
push
mov
mov
push
mov
push
push
call
xor
cmp
jne
mov
cmp
mov
je
mov
push
lea
call
mov
push
mov
lea
call
cmp
ja
mov
mov
sub
mov
lea
push
call
test
jne
mov
xor
cmp
mov
ja
jb
test
jae
add
cmp
jne
mov
mov
push
lea
call
mov
push
call
xor
jmp
push
pop
pop
pop
pop
pop
ret
mov
call
sub
cmp
push
push
push
mov
ja
mov
xor
test
je
mov
lea
cdq
sub
sar
mov
cmp
je
jae
mov
jmp
lea
cmp
jne
or
test
jl
mov
mov
shl
mov
add
cmp
jb
mov
mov
mov
cmp
je
lea
cdq
sub
mov
sar
lea
mov
cmp
je
jae
mov
jmp
lea
jmp
or
mov
test
mov
jl
shl
add
mov
mov
cmp
je
cmp
je
xor
jmp
mov
and
mov
test
je
mov
add
cdq
sub
mov
sar
lea
mov
cmp
je
jae
mov
jmp
inc
mov
cmp
jne
or
test
jl
mov
mov
mov
add
cmp
jb
mov
cmp
ja
mov
mov
sub
cmp
lea
ja
cmp
mov
jb
cmp
jb
add
mov
xor
mov
mov
mov
mov
mov
cmp
mov
je
mov
mov
cmp
mov
ja
cmp
jb
movzx
mov
call
cmp
mov
je
and
jmp
shr
add
sub
jmp
cmp
jne
cmp
jb
movzx
inc
dec
jmp
cmp
jb
mov
add
sub
mov
call
add
sub
mov
inc
mov
mov
je
mov
test
je
mov
cmp
ja
mov
jmp
xor
cmp
setne
dec
and
add
mov
cmp
jb
mov
cmp
jae
mov
test
je
cdq
mov
mov
and
xor
or
jne
mov
push
lea
push
push
call
mov
test
jne
mov
mov
mov
sub
cmp
mov
mov
jae
call
cmp
movzx
mov
je
shr
mov
and
jmp
and
mov
shr
mov
movzx
jmp
call
mov
lea
movzx
mov
call
mov
lea
mov
call
movzx
mov
sub
add
inc
mov
cmp
jb
add
sub
mov
sub
lea
mov
mov
lea
movs
movs
movs
call
sub
lea
mov
lea
movs
movs
movs
call
inc
mov
mov
cmp
jb
cmp
jne
xor
mov
mov
sub
cmp
jle
mov
lea
inc
mov
mov
shl
mov
mov
add
mov
add
push
mov
push
push
push
mov
add
push
call
test
jne
inc
add
mov
add
cmp
jl
xor
jmp
push
pop
jmp
or
lea
call
mov
jmp
mov
jmp
xor
or
lea
call
mov
jmp
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
call
push
push
mov
push
mov
push
lea
call
xor
cmp
jne
lea
lea
push
mov
call
test
je
mov
cmp
jbe
cmp
ja
cmp
ja
movzx
cmp
jle
cmp
jg
push
lea
call
mov
cmp
je
cmp
ja
lea
push
call
mov
mov
mov
mov
push
cmp
pop
mov
push
sbb
pop
neg
sub
mov
shl
mov
lea
shr
lea
mov
shl
lea
push
call
mov
push
push
push
mov
push
push
call
test
jne
mov
mov
push
call
xor
cmp
je
mov
jmp
mov
cmp
mov
mov
jbe
jmp
mov
mov
mov
test
je
lea
call
mov
jmp
lea
call
mov
xor
mov
push
push
push
push
mov
push
call
test
jne
mov
mov
and
lea
push
mov
call
test
jne
mov
mov
cmp
mov
je
mov
dec
cmp
jne
mov
lea
shl
and
cmp
jne
mov
and
mov
mov
jmp
mov
mov
cmp
jae
mov
mov
test
je
call
mov
mov
mov
mov
lea
call
add
add
mov
jmp
call
mov
and
mov
mov
lea
call
add
add
mov
sub
lea
mov
lea
movs
movs
movs
movs
call
cmp
mov
jb
inc
mov
cmp
jb
mov
cmp
je
push
mov
call
pop
jmp
push
pop
push
mov
call
pop
mov
jmp
push
or
mov
call
pop
xor
push
lea
mov
push
push
push
push
call
cmp
jne
push
lea
mov
push
push
push
push
call
cmp
jne
mov
mov
push
pop
call
cmp
mov
jb
ja
cmp
jae
mov
push
xor
lea
mov
mov
call
push
lea
call
mov
lea
inc
push
call
cmp
mov
mov
jbe
jmp
xor
movzx
mov
mov
add
sub
dec
je
dec
je
dec
lea
push
push
push
lea
je
call
jmp
call
jmp
lea
push
push
push
lea
call
jmp
lea
push
push
push
lea
call
cmp
mov
je
mov
mov
cmp
jb
push
lea
call
mov
inc
cmp
jae
mov
push
lea
call
sub
lea
push
pop
mov
rep
lea
call
mov
add
inc
mov
mov
cmp
jb
xor
push
lea
call
cmp
je
push
pop
jmp
lea
mov
push
mov
and
push
push
push
push
call
cmp
jne
mov
push
push
push
mov
push
push
call
cmp
jne
mov
mov
neg
mov
mov
and
mov
je
mov
push
lea
call
test
jne
cmp
jbe
cmp
jne
inc
cmp
jb
cmp
jne
xor
add
adc
mov
mov
xor
jmp
mov
mov
pop
pop
mov
pop
leave
ret
push
push
mov
mov
and
and
mov
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
cmp
mov
ja
push
mov
call
jmp
cmp
je
xor
jmp
push
mov
call
mov
mov
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
cmp
ja
jb
cmp
ja
mov
mov
cmp
ja
jb
cmp
ja
mov
cmp
ja
jb
mov
cmp
ja
mov
cmp
jb
cmp
jae
push
pop
mov
shl
cmp
je
xor
pop
pop
ret
push
push
push
mov
mov
lea
mov
mov
call
mov
xor
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
lea
mov
call
mov
lea
movzx
mov
call
mov
mov
movzx
mov
mov
mov
mov
lea
mov
call
mov
lea
mov
call
cmp
mov
mov
mov
mov
mov
mov
mov
jb
mov
lea
call
mov
lea
mov
call
mov
lea
mov
call
cmp
mov
mov
jne
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
mov
lea
call
mov
mov
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
ret
mov
call
sub
and
and
push
mov
push
mov
push
mov
mov
mov
mov
lea
mov
mov
lea
mov
add
cmp
jae
movzx
jmp
mov
lea
call
movzx
lea
mov
cmp
ja
push
pop
jmp
xor
cmp
setne
dec
and
add
mov
add
xor
xor
cmp
jbe
cmp
je
inc
cmp
jb
mov
cmp
lea
mov
jge
mov
push
dec
lea
mov
mov
mov
mov
call
and
cmp
jl
push
lea
call
mov
mov
add
mov
mov
lea
mov
mov
add
cmp
lea
jae
movzx
jmp
mov
lea
call
movzx
lea
mov
cmp
ja
push
pop
jmp
xor
cmp
setne
dec
and
add
mov
add
xor
test
jbe
cmp
je
inc
cmp
jb
sub
push
push
push
call
add
test
jl
dec
mov
mov
jmp
mov
mov
and
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
xor
mov
push
mov
call
mov
mov
push
lea
call
mov
push
push
push
push
push
mov
call
cmp
jne
mov
push
mov
mov
call
cmp
mov
mov
je
mov
push
call
mov
jmp
push
lea
call
xor
jmp
mov
push
mov
call
xor
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
push
mov
push
mov
call
mov
lea
xor
cmp
je
mov
push
call
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
push
lea
call
mov
mov
pop
mov
mov
mov
mov
pop
pop
xor
pop
ret
push
mov
push
call
and
and
pop
lea
call
lea
call
pop
ret
push
mov
sub
mov
push
push
push
mov
mov
lea
and
and
mov
lea
mov
mov
mov
mov
mov
add
mov
shl
add
mov
lea
mov
movzx
cmp
mov
je
cmp
je
mov
or
je
push
mov
call
cmp
mov
je
lea
call
lea
call
push
lea
push
call
mov
cmp
ja
mov
mov
add
test
jbe
mov
mov
mov
mov
call
cmp
movzx
je
mov
lea
shr
not
and
push
call
cmp
je
and
add
adc
cmp
je
push
lea
push
call
add
dec
jne
jmp
cmp
ja
push
pop
jmp
cmp
jne
push
jmp
cmp
jne
mov
cmp
sbb
and
add
add
xor
xor
mov
cmp
mov
jb
ja
cmp
jbe
mov
mov
mov
lea
call
cmp
mov
je
shr
not
and
lea
push
call
mov
and
cmp
ja
add
adc
cmp
je
push
lea
push
call
add
adc
xor
cmp
jb
ja
mov
cmp
jb
xor
mov
cmp
je
cmp
jae
cmp
jne
mov
shl
mov
and
cmp
jbe
xor
jmp
add
adc
jmp
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
dec
je
sub
jne
mov
lea
push
call
jmp
push
lea
call
mov
mov
cmp
je
push
lea
call
push
lea
call
movzx
lea
call
lea
lea
push
call
push
lea
call
movzx
lea
call
lea
lea
push
call
push
lea
call
push
mov
call
pop
jmp
mov
cmp
je
mov
jmp
mov
mov
cmp
jae
movzx
mov
push
lea
call
jmp
mov
mov
cmp
je
lea
call
lea
lea
push
call
jmp
mov
lea
mov
push
call
jmp
sub
je
dec
je
dec
dec
jne
lea
mov
push
mov
movzx
push
push
pop
call
jmp
mov
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
sub
sbb
push
push
jmp
mov
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
shl
add
mov
cmp
je
cmp
je
and
jmp
mov
mov
mov
mov
sub
je
sub
je
dec
je
dec
je
sub
je
sub
jne
test
je
cmp
jae
mov
movzx
and
mov
or
push
lea
call
jmp
movzx
dec
je
dec
je
dec
je
dec
jne
jmp
cmp
jne
push
jmp
cmp
jne
push
jmp
cmp
jne
push
jmp
cmp
jne
push
jmp
cmp
jne
push
mov
mov
pop
lea
mov
add
add
mov
call
mov
mov
call
lea
lea
push
call
jmp
cmp
jne
lea
push
push
push
call
test
je
push
push
lea
call
jmp
cmp
jne
cmp
je
cmp
jne
xor
xor
jmp
mov
mov
push
push
jmp
push
lea
call
jmp
lea
push
push
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
ret
push
mov
sub
push
push
and
mov
push
mov
mov
mov
shl
add
cdq
cmp
mov
ja
jb
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
adc
jmp
mov
cmp
je
mov
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
and
xor
cmp
jne
push
push
push
call
jmp
mov
cmp
jne
mov
cmp
jne
cmp
je
mov
push
push
mov
push
mov
mov
mov
push
mov
push
call
xor
cmp
jne
mov
and
mov
mov
mov
test
mov
je
mov
mov
mov
lea
and
mov
mov
push
mov
mov
lea
push
push
lea
push
push
push
mov
call
cmp
je
mov
jmp
mov
mov
test
mov
je
jmp
mov
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
lea
cmp
jbe
push
pop
jmp
push
mov
add
push
push
call
add
xor
pop
pop
pop
leave
ret
mov
call
sub
push
xor
cmp
push
mov
push
sete
cmp
mov
mov
je
mov
mov
cmp
je
xor
mov
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
lea
mov
shl
add
mov
cmp
je
cmp
jne
xor
xor
jmp
mov
mov
add
adc
inc
jmp
mov
push
mov
push
push
call
xor
push
mov
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
push
mov
mov
call
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
jmp
mov
xor
cmp
mov
setne
cmp
mov
jne
mov
mov
mov
lea
push
mov
mov
lea
mov
shl
add
lea
push
push
push
call
test
mov
je
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
mov
jmp
mov
cmp
je
cmp
jne
push
mov
push
call
mov
test
jne
mov
push
push
call
jmp
mov
mov
add
mov
lea
push
push
push
adc
call
test
je
mov
mov
add
adc
cmp
jne
cmp
jne
mov
jmp
mov
push
mov
push
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
mov
and
mov
lea
add
push
push
push
mov
mov
call
mov
mov
test
je
mov
lea
push
push
push
call
mov
push
pop
cmp
je
test
je
test
je
mov
push
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
jmp
push
mov
mov
push
push
push
push
push
call
mov
test
je
cmp
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
mov
push
call
mov
jmp
mov
add
mov
cmp
jne
mov
cmp
jne
test
jne
and
mov
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
push
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
cmp
jne
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
jmp
mov
jmp
test
je
mov
push
call
mov
mov
mov
inc
mov
jmp
cmp
mov
je
mov
push
mov
call
and
cmp
je
mov
push
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
mov
lea
and
mov
push
mov
lea
mov
mov
mov
shl
add
mov
cmp
je
cmp
jne
mov
jmp
mov
mov
add
mov
mov
or
je
cmp
je
cmp
je
lea
push
lea
push
push
mov
call
test
jne
push
pop
jmp
mov
mov
mov
mov
cmp
je
xor
push
mov
mov
mov
mov
lea
call
push
call
pop
xor
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
mov
push
movzx
pop
mov
cmp
jb
lea
sub
mov
push
push
call
test
jne
and
mov
test
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
push
call
mov
mov
xor
jmp
push
call
xor
pop
cmp
je
mov
mov
mov
mov
xor
mov
cmp
je
mov
push
call
xor
mov
mov
cmp
je
cmp
jne
mov
cmp
ja
push
pop
jmp
cmp
ja
push
jmp
xor
cmp
setne
dec
and
add
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
push
lea
call
mov
mov
jmp
mov
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
jmp
mov
jmp
push
push
push
mov
call
mov
push
shl
add
pop
lea
rep
mov
pop
pop
lea
mov
pop
ret
sub
jmp
push
mov
sub
mov
and
cmp
jae
push
jmp
lea
call
lea
push
mov
call
mov
leave
ret
push
mov
push
push
push
mov
push
call
add
test
je
xor
jmp
movzx
xor
xor
mov
mov
mov
mov
push
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
or
or
mov
mov
movzx
xor
xor
mov
mov
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
xor
mov
mov
mov
mov
movzx
movzx
shl
or
movzx
shl
or
xor
shl
or
movzx
shl
or
xor
or
or
mov
mov
movzx
xor
push
mov
mov
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
mov
lea
push
lea
push
call
mov
add
mov
mov
push
push
mov
call
pop
pop
pop
ret
push
push
push
mov
xor
xor
test
jbe
movzx
add
inc
cmp
jb
lea
cmp
jae
movzx
add
inc
jmp
lea
xor
not
mov
mov
movzx
movzx
shl
or
pop
shl
or
cmp
pop
pop
jne
mov
cmp
jae
cmp
jne
inc
jmp
xor
jmp
mov
ret
push
mov
push
push
mov
push
push
push
mov
push
call
add
test
jne
mov
xor
mov
mov
movzx
mov
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
or
or
mov
mov
movzx
xor
mov
mov
shl
or
movzx
shl
or
xor
mov
mov
mov
movzx
shl
or
movzx
shl
or
call
cmp
mov
jl
cmp
jg
movzx
xor
mov
mov
shl
or
movzx
shl
or
mov
xor
mov
mov
movzx
shl
or
movzx
shl
or
jne
lea
push
push
lea
push
call
add
mov
add
cmp
jg
push
mov
call
mov
lea
mov
mov
xor
mov
mov
inc
mov
inc
inc
inc
dec
jne
and
mov
call
push
push
mov
mov
call
jmp
xor
pop
pop
pop
pop
ret
mov
push
push
push
mov
push
push
call
ret
push
push
mov
xor
cmp
je
mov
call
cmp
jne
or
mov
mov
mov
mov
mov
push
sub
pop
shl
lea
add
shr
and
push
call
push
push
mov
call
pop
pop
ret
push
mov
mov
push
push
mov
mov
xor
push
mov
add
mov
adc
cmp
jb
ja
cmp
jbe
push
pop
jmp
cmp
jne
cmp
je
push
mov
push
mov
mov
call
test
jne
mov
mov
mov
push
call
add
adc
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
mov
ja
jb
cmp
jb
mov
mov
mov
lea
push
push
mov
sub
sbb
push
push
mov
call
cmp
jne
lea
lea
push
mov
call
test
je
add
adc
mov
cmp
je
cmp
jne
lea
push
push
push
push
mov
call
test
jne
lea
push
push
lea
push
call
add
test
jne
lea
push
push
mov
push
push
call
test
jne
lea
lea
push
call
test
je
mov
cmp
jae
mov
mov
mov
or
jne
test
jmp
mov
sub
sbb
call
add
adc
xor
cmp
jne
cmp
je
push
pop
jmp
lea
push
call
mov
cmp
jae
lea
push
xor
push
cdq
push
push
push
push
call
add
mov
adc
push
push
call
cmp
jne
movzx
lea
xor
mov
mov
movzx
shl
or
shl
or
cmp
je
inc
push
lea
call
mov
cmp
jae
add
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
test
je
and
push
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
cmp
je
mov
mov
mov
call
push
mov
pop
mov
shl
mov
mov
lea
and
sub
cmp
jae
mov
xor
cmp
mov
jne
mov
cmp
je
mov
push
push
push
push
push
call
test
jne
mov
lea
push
push
mov
push
push
call
mov
mov
test
je
mov
mov
mov
add
mov
adc
pop
pop
pop
leave
ret
push
push
push
call
add
jmp
push
xor
pop
call
cmp
mov
mov
je
mov
mov
push
push
push
mov
push
call
test
jne
mov
mov
push
xor
xor
push
add
adc
add
adc
push
push
mov
call
xor
cmp
jne
cmp
jbe
mov
mov
and
mov
sub
sub
cmp
mov
jb
mov
mov
mov
shr
mov
and
sub
mov
shr
mov
shr
test
jne
mov
xor
cmp
je
push
push
mov
xor
add
mov
adc
push
push
push
call
test
jne
mov
push
mov
lea
call
test
jne
jmp
mov
add
cmp
jbe
cmp
jne
inc
cmp
jb
add
add
cmp
jb
jmp
push
pop
jmp
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
push
mov
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
test
jne
mov
and
jmp
push
call
mov
mov
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
ja
je
dec
je
sub
je
sub
je
dec
jne
mov
mov
cmp
jne
push
lea
call
jmp
lea
call
lea
push
jmp
mov
lea
push
lea
call
cmp
mov
jne
push
lea
call
lea
cmp
je
cmp
jne
mov
jmp
cmp
jne
push
lea
call
jmp
lea
push
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
push
mov
jmp
mov
lea
mov
call
jmp
push
jmp
xor
cmp
jge
mov
lea
movzx
call
inc
jmp
mov
lea
jmp
sub
je
sub
je
sub
je
dec
jne
mov
lea
cmp
setne
push
call
jmp
mov
cmp
jne
lea
push
lea
call
push
lea
mov
call
push
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
push
pop
shl
push
lea
call
jmp
mov
lea
mov
call
lea
lea
push
call
lea
mov
call
lea
call
mov
lea
shr
call
push
lea
call
lea
lea
push
call
push
lea
call
mov
lea
and
call
lea
lea
push
call
push
lea
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
cmp
je
cmp
jne
cmp
je
push
lea
call
lea
lea
push
call
mov
jmp
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
sub
xor
add
push
push
adc
push
push
mov
push
call
mov
lea
push
lea
push
mov
call
lea
mov
push
call
pop
leave
ret
push
mov
push
pop
mov
shr
cmp
jb
cmp
ja
mov
inc
sub
jns
and
pop
ret
push
push
inc
pop
mov
and
shr
cmp
jae
add
jmp
add
mov
dec
dec
jne
pop
ret
mov
call
push
push
push
push
mov
push
mov
lea
push
call
push
lea
call
cmp
jg
mov
call
xor
cmp
jne
mov
cmp
je
lea
push
add
push
push
call
add
test
jne
cmp
jne
mov
mov
lea
push
push
mov
push
mov
call
test
je
mov
or
cmp
je
mov
push
call
push
pop
jmp
mov
mov
mov
lea
mov
mov
push
push
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
lea
mov
mov
call
mov
mov
inc
push
push
push
push
call
mov
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
xor
mov
mov
mov
lea
mov
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
lea
mov
call
and
pop
lea
call
push
call
pop
pop
mov
mov
leave
ret
push
call
pop
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
mov
call
push
push
push
push
mov
xor
mov
push
mov
push
lea
mov
push
push
call
mov
cmp
jne
xor
jmp
mov
push
mov
call
mov
jmp
mov
push
mov
call
xor
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
lea
call
and
and
mov
lea
test
je
mov
push
call
and
mov
add
test
je
mov
push
call
and
pop
xor
pop
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
dec
je
dec
dec
jne
mov
lea
mov
call
jmp
mov
lea
call
push
push
jmp
mov
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
cmp
je
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
push
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
mov
cmp
jne
cmp
jne
cmp
jne
xor
jmp
mov
push
push
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
mov
mov
mov
lea
push
push
mov
lea
push
mov
call
push
mov
pop
cmp
jne
mov
mov
cmp
je
mov
push
call
mov
mov
push
mov
push
call
mov
mov
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
push
push
push
push
mov
push
push
call
cmp
mov
jne
mov
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
push
mov
xor
mov
mov
cmp
mov
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
push
push
push
push
call
mov
cmp
je
cmp
mov
je
mov
push
call
mov
jmp
mov
mov
jmp
mov
cmp
je
cmp
jne
lea
cmp
jne
mov
cmp
je
jmp
add
cmp
mov
je
mov
push
call
mov
mov
call
mov
cmp
je
cmp
mov
je
mov
push
call
mov
jmp
mov
mov
xor
jmp
mov
ret
mov
jmp
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
mov
push
mov
xor
mov
lea
push
push
push
push
push
mov
call
cmp
jne
push
lea
mov
call
cmp
jne
movzx
movzx
movzx
shl
or
xor
mov
or
movzx
shl
or
movzx
shl
or
cmp
jne
cmp
jne
movzx
movzx
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
or
xor
xor
or
or
movzx
movzx
mov
mov
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
or
movzx
movzx
shl
shl
or
xor
or
xor
or
or
mov
mov
ja
cmp
jae
mov
mov
mov
add
adc
add
mov
adc
inc
mov
add
cmp
jl
push
mov
call
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
push
mov
mov
mov
mov
push
push
mov
mov
push
push
push
mov
call
cmp
mov
je
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
cmp
jne
mov
mov
mov
add
xor
mov
cmp
je
inc
cmp
jne
mov
mov
add
mov
lea
call
mov
lea
add
mov
push
call
test
je
push
lea
call
lea
lea
push
mov
call
test
je
cmp
mov
setne
cmp
je
mov
push
mov
call
cmp
pop
jne
mov
push
lea
mov
mov
call
mov
lea
push
mov
call
push
mov
neg
sbb
inc
mov
call
cmp
pop
je
mov
lea
jmp
mov
mov
push
lea
call
test
mov
lea
jne
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
push
pop
mov
pop
pop
pop
mov
leave
ret
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
jmp
mov
call
sub
push
push
mov
push
mov
cmp
je
mov
mov
mov
call
test
jne
lea
call
mov
and
mov
mov
push
lea
mov
mov
call
lea
mov
push
lea
push
mov
call
push
lea
mov
call
push
call
push
and
call
pop
pop
push
lea
call
lea
mov
push
lea
push
mov
call
push
mov
call
pop
mov
mov
call
test
jne
mov
jmp
mov
mov
call
test
jne
and
push
lea
call
lea
mov
push
mov
call
mov
mov
push
call
test
pop
jl
cmp
jne
mov
mov
mov
mov
lea
push
mov
call
test
je
lea
mov
push
mov
call
test
je
lea
mov
push
mov
call
test
je
lea
mov
push
mov
call
lea
mov
push
call
lea
mov
push
mov
call
mov
mov
push
call
test
pop
jl
mov
mov
cmp
je
push
lea
call
lea
mov
push
lea
push
mov
call
push
mov
call
cmp
pop
jl
push
lea
call
push
lea
lea
mov
push
call
mov
mov
mov
call
test
push
mov
sete
call
test
pop
je
push
lea
lea
push
call
push
lea
mov
call
mov
push
call
lea
mov
call
push
lea
lea
mov
push
call
mov
mov
mov
call
test
push
mov
sete
call
test
pop
je
push
lea
lea
push
call
push
lea
mov
call
mov
push
call
pop
mov
mov
call
test
jne
push
lea
call
push
mov
call
pop
lea
lea
push
call
push
call
pop
push
mov
call
pop
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
lea
mov
push
call
push
call
push
or
call
push
call
add
xor
cmp
jle
mov
push
mov
mov
call
test
je
inc
cmp
jl
jmp
push
call
push
call
push
call
add
xor
jmp
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
lea
call
and
lea
push
lea
push
mov
call
push
mov
call
pop
lea
mov
call
mov
push
mov
mov
sub
mov
cmp
sete
call
pop
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
push
lea
call
lea
xor
push
lea
push
mov
mov
call
push
mov
call
cmp
pop
jl
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
lea
push
push
pop
call
test
je
lea
mov
push
mov
push
push
push
push
call
test
je
push
push
push
push
call
mov
mov
jmp
xor
push
call
pop
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
push
push
push
mov
mov
lea
call
mov
mov
mov
sub
sub
pop
neg
sbb
pop
inc
leave
ret
mov
call
sub
push
push
mov
push
push
lea
call
lea
xor
push
mov
mov
call
or
mov
push
call
cmp
pop
jl
mov
push
lea
mov
call
lea
mov
push
lea
push
mov
call
push
mov
call
pop
mov
mov
call
cmp
jne
lea
mov
push
call
cmp
mov
jne
xor
mov
lea
mov
call
test
je
mov
lea
mov
call
test
je
mov
mov
cdq
shl
or
sub
mov
sar
inc
inc
mov
cmp
jl
mov
push
call
push
call
pop
mov
pop
jmp
push
call
push
call
pop
jmp
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
cmp
jl
cmp
jg
sub
jmp
cmp
jl
cmp
jg
sub
jmp
cmp
jl
cmp
jg
sub
mov
mov
ret
xor
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
call
test
je
push
pop
jmp
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
lea
call
mov
and
pop
and
xor
ret
mov
mov
mov
inc
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
cmp
jbe
cmp
ja
mov
cdq
push
push
lea
call
jmp
push
lea
call
jmp
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
jne
cmp
jne
push
push
jmp
cmp
jne
push
push
jmp
mov
lea
push
call
jmp
mov
mov
mov
push
lea
call
mov
mov
mov
lea
mov
push
call
cmp
mov
jne
push
lea
call
cmp
jne
lea
lea
push
call
jmp
push
lea
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
call
pop
pop
push
mov
mov
call
test
pop
jge
xor
push
lea
mov
mov
mov
call
lea
lea
mov
call
test
je
push
lea
call
push
call
push
mov
call
pop
pop
jmp
push
lea
push
jmp
sub
je
dec
je
sub
jne
mov
mov
mov
push
lea
call
cmp
mov
je
lea
lea
call
test
je
push
lea
call
push
mov
call
jmp
push
lea
push
jmp
push
lea
push
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
mov
or
pop
je
mov
lea
push
mov
call
pop
ret
mov
call
sub
xor
cmp
push
mov
push
push
sete
cmp
mov
mov
je
mov
mov
cmp
je
xor
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
cmp
jne
mov
cdq
add
adc
jmp
mov
mov
mov
add
mov
adc
inc
jmp
mov
push
push
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
push
push
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
xor
mov
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
mov
push
call
push
call
cmp
pop
je
xor
mov
mov
mov
mov
mov
jmp
xor
xor
mov
cmp
mov
je
mov
push
call
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
push
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
and
xor
mov
cmp
setne
cmp
je
mov
jmp
mov
mov
mov
mov
lea
push
push
mov
push
push
call
xor
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
cmp
jge
mov
mov
cmp
je
mov
push
push
mov
call
mov
test
jne
mov
push
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
jmp
test
je
mov
push
call
jmp
cmp
jne
cmp
jne
mov
jmp
mov
push
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
jmp
mov
push
lea
call
mov
test
je
mov
push
call
and
mov
and
cmp
jne
mov
and
and
and
add
mov
call
and
mov
and
and
cdq
mov
mov
mov
mov
mov
push
call
mov
test
je
mov
mov
jmp
mov
cdq
mov
mov
mov
mov
jmp
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
push
adc
mov
mov
push
mov
mov
mov
mov
push
push
mov
push
call
mov
xor
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
jmp
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
xor
mov
mov
mov
and
and
mov
mov
cmp
je
mov
mov
call
test
je
mov
mov
call
test
jne
mov
jmp
mov
mov
call
test
jne
mov
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
test
je
push
mov
push
push
push
push
push
call
mov
test
je
mov
mov
or
jne
cmp
jne
cmp
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
cmp
jne
mov
cmp
jne
mov
mov
or
jne
cmp
jne
mov
mov
mov
cmp
jne
cmp
jne
cmp
je
lea
mov
push
call
add
push
lea
push
push
call
add
test
je
mov
jmp
mov
mov
lea
call
mov
push
mov
push
call
mov
mov
test
je
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
mov
call
pop
mov
jmp
lea
call
mov
mov
inc
add
mov
mov
adc
mov
add
mov
adc
xor
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
mov
call
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
push
xor
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
push
call
mov
or
test
pop
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
push
mov
call
and
lea
push
lea
call
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
pop
rep
mov
mov
mov
pop
mov
pop
pop
mov
leave
ret
mov
jmp
mov
jmp
jmp
jmp
mov
call
push
push
push
mov
push
mov
mov
lea
mov
mov
mov
mov
call
xor
lea
mov
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
call
mov
add
neg
sbb
pop
and
lea
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
.byte
dec
.byte
