adc
add
mov
fs
sbb
cmp
and
test
sub
jns
mov
aad
cmp
add
ins
shr
pop
in
aam
dec
push
cmp
mov
mov
fld
mov
xor
inc
push
sahf
in
jne
shl
and
add
loop
loop
mov
loop
mov
cs
sbb
arpl
repnz
mov
popa
pop
retf
xchg
sub
mov
leave
dec
fs
push
sub
fild
xor
cmp
and
dec
stos
in
mov
adc
sbb
add
ds
iret
jle
push
add
bnd
aaa
sbb
repnz
cmovs
sub
test
dec
pop
jno
jmp
push
cli
rcl
inc
fdivrp
adc
loopne
sbb
xchg
sbb
mov
and
xor
xor
call
mov
mov
xchg
cli
or
daa
xor
retf
fidivr
in
cmp
cmp
icebp
je
out
out
xor
ss
and
pop
add
stos
int3
jg
sbb
or
fisub
mov
xor
cmp
loope
inc
sbb
sbb
test
pop
sbb
int3
aam
dec
xlat
sbb
data16
cmp
aam
push
hlt
cmp
push
mov
jmp
mov
retf
sub
test
in
js
je
pushf
inc
cmp
popf
xchg
push
and
pop
cmp
repz
xor
sub
scas
adc
sbb
enter
imul
popf
push
xchg
pop
mov
fldcw
imul
cmc
jbe
out
inc
pop
mov
mov
mov
xor
adc
scas
test
cmps
(bad)
arpl
add
loope
mov
jecxz
jbe
call
mov
adc
test
loop
test
rcl
xor
leave
sbb
cmp
loope
inc
pushf
inc
mov
push
hlt
add
dec
daa
sub
lods
jecxz
lods
xor
or
xor
icebp
mov
xor
popf
(bad)
add
mov
jmp
in
mov
cwde
test
dec
jle
scas
adc
inc
(bad)
cmp
xchg
(bad)
iret
fild
push
xchg
sbb
sbb
inc
out
pop
stc
je
mov
(bad)
hlt
adc
or
je
pop
dec
xchg
into
xor
popf
not
jnp
scas
sbb
adc
bound
mov
leave
pop
aam
sbb
dec
jo
aas
mov
add
xchg
test
and
sbb
mov
mov
popa
sub
mov
mov
and
or
movs
mov
inc
cdq
xchg
jns
push
mov
or
sub
stc
inc
mov
and
sbb
shr
(bad)
push
loopne
bound
cld
sbb
pop
pop
imul
ds
in
ror
retf
mov
push
cdq
dec
mov
arpl
cmps
jg
neg
(bad)
xchg
into
out
not
imul
les
pop
repz
xor
and
cmp
shl
xchg
fs
mov
test
inc
push
sbb
mov
fwait
stos
jbe
sbb
inc
inc
jb
dec
mov
jp
loope
xchg
cdq
cwde
dec
push
pop
or
and
ret
addr16
sub
loopne
pop
clc
mov
scas
call
push
sbb
cmp
cmp
cmps
cmp
xchg
arpl
es
ret
push
mov
add
mov
movs
ficom
mov
int3
lahf
rcr
jg
xchg
enter
xlat
ja
ds
clc
scas
jno
std
pop
pop
mov
mov
pop
dec
dec
push
stos
pop
inc
pop
std
fs
idiv
cs
dec
shr
out
neg
dec
jbe
imul
xor
arpl
mov
in
sub
or
inc
pop
sbb
push
test
jnp
xchg
mov
dec
add
lea
pusha
jmp
cdq
mov
adc
push
mov
rcl
mov
dec
xchg
add
mov
scas
xchg
enter
push
shl
and
pop
xchg
add
sub
cmps
cmp
loop
mov
push
fimul
nop
mov
ror
push
outs
push
push
out
mov
popa
adc
cmp
xchg
mov
shr
xor
inc
test
(bad)
(bad)
in
adc
adc
std
sub
ins
nop
js
dec
mov
aad
stos
xchg
push
cmps
add
sbb
or
mov
cli
out
dec
fstp
in
pusha
inc
and
mov
cmp
xor
jmp
fst
std
jecxz
call
ret
test
xor
cmp
(bad)
push
mov
fiadd
add
pop
sub
popf
jg
int3
sub
aam
jmp
int
les
retf
mov
jmp
adc
push
rcl
imul
out
adc
pop
iret
push
mov
jecxz
mov
fwait
inc
das
cmps
sbb
outs
sub
inc
jb
nop
outs
inc
add
and
jne
dec
stc
pop
nop
xchg
ja
lods
sub
cwde
push
(bad)
leave
stos
xor
dec
sbb
xor
inc
mov
add
jmp
sbb
cmp
repz
fxch
cmp
add
pop
add
or
and
loopne
lods
jnp
xor
inc
sbb
jmp
jmp
out
dec
inc
sbb
neg
bound
test
sar
sub
mov
jno
fdivr
adc
in
xchg
pop
bnd
xchg
xchg
jne
imul
repz
jae
cmp
lea
ins
mov
test
xchg
out
mov
sub
stos
push
dec
inc
inc
stos
mov
imul
fdivrp
sub
mov
(bad)
mov
ss
shl
pop
fcmovne
rcr
cdq
in
add
test
aad
out
std
into
call
fdiv
pop
sbb
mov
fstp
xor
fs
test
jl
mov
or
sub
xor
adc
adc
pop
xchg
fwait
test
xchg
test
sar
(bad)
movs
sahf
add
lds
xor
jno
xchg
push
sub
sub
aam
inc
xchg
jne
dec
pop
je
mov
iret
or
inc
xchg
push
nop
dec
add
mov
imul
out
push
push
xchg
pop
sub
pop
lods
fwait
es
idiv
jle
xor
or
jb
popa
and
or
ins
test
movs
pop
loope
xor
ret
lahf
mov
pop
pop
in
jne
push
icebp
push
repnz
jl
xlat
adc
and
ins
std
pop
sbb
inc
cmp
cmp
jmp
test
sbb
loopne
jo
loopne
fs
out
repz
cmp
mov
xlat
mov
rcl
aaa
mov
lock
icebp
add
in
out
or
inc
ds
or
jmp
adc
scas
pop
pop
hlt
jecxz
inc
loope
mov
sbb
repz
sbb
call
xor
mov
xor
push
cmps
stos
xchg
and
cmp
dec
test
pop
sub
hlt
jg
sbb
icebp
test
mov
gs
sub
sub
mov
ins
test
in
xor
pop
jmp
push
cli
pop
hlt
jmp
mov
sbb
xchg
inc
or
bound
imul
dec
xchg
xchg
xchg
push
mov
inc
jns
sbb
mov
push
mov
faddp
pop
xchg
or
in
cli
pop
mov
jecxz
lods
jnp
fmul
int3
push
call
in
pop
sub
mov
or
ror
std
sbb
mov
ror
out
int3
dec
jge
clc
and
dec
pop
jne
les
cmp
or
cmp
dec
cdq
loopne
ror
add
pop
push
movs
clc
clc
bound
mov
js
mov
pop
add
push
sub
dec
movs
scas
push
sub
xchg
jbe
call
cli
pop
nop
pop
(bad)
adc
mul
out
das
(bad)
jmp
ins
mov
push
stos
enter
retf
repz
lods
rol
jmp
mov
in
aam
push
cmp
jp
push
and
cwde
mov
cmp
aam
cmp
push
push
jmp
sbb
std
mov
xchg
aas
jge
icebp
jo
outs
jge
cwde
repnz
sbb
push
adc
adc
sub
dec
mov
ficom
add
cmp
adc
(bad)
dec
xor
out
sub
jnp
sub
push
cld
sub
xor
xlat
mov
add
mov
push
movs
lds
and
sub
out
popf
std
fisttp
push
sub
mov
mov
cmp
ins
inc
sub
les
push
ins
sar
int
cmp
inc
pop
loopne
adc
arpl
shl
icebp
sbb
aaa
aam
pop
pop
sar
xchg
add
sub
lea
mov
(bad)
sub
or
mov
push
fbld
xor
mov
gs
push
xchg
cmp
dec
xor
adc
ins
mov
pushf
ds
pop
inc
adc
iret
cld
or
inc
mov
leave
xchg
dec
cmp
and
cdq
hlt
mov
jg
adc
je
or
or
outs
xlat
or
sbb
xchg
dec
jbe
pop
jle
push
mov
cmc
mov
jo
push
outs
or
xor
and
(bad)
sbb
mov
cmc
inc
out
out
adc
adc
rcl
imul
xchg
fstp
and
sahf
lods
push
sub
icebp
mov
fmul
sub
rol
jns
mov
push
loopne
les
cli
sub
sub
add
pusha
shl
loop
ficomp
push
pusha
dec
xchg
lahf
xchg
retf
pusha
jecxz
push
sbb
pusha
sub
in
jnp
dec
inc
cli
inc
scas
sahf
mov
sbb
mov
fwait
test
sbb
(bad)
fpatan
cmp
sbb
mov
mov
shr
xor
pushf
jo
inc
popf
push
pusha
call
push
sbb
repz
jp
leave
sahf
pop
xor
repz
mov
mov
xor
fs
inc
aad
fcomi
lds
clc
adc
jo
es
fucomp
push
clc
jmp
jge
ins
out
lds
aad
xlat
xchg
jl
push
pop
lahf
jge
jmp
in
add
fdivr
pop
jmp
rcl
out
push
or
or
jae
xchg
data16
sar
mov
inc
test
sub
retf
dec
or
pusha
push
and
aaa
mov
into
imul
sbb
push
out
sbb
sbb
fist
mov
daa
mov
xchg
xchg
jne
out
or
dec
shl
call
out
xchg
mov
pop
adc
or
or
bound
sbb
cmp
inc
dec
bound
aas
mov
ja
inc
pop
add
push
pop
imul
cmc
adc
and
inc
(bad)
mov
pushf
pop
rcl
jecxz
sub
ss
fwait
or
sub
loop
cmps
cmp
test
sbb
push
loopne
je
push
test
push
mov
test
or
mov
lock
mov
xchg
imul
ja
inc
(bad)
sahf
add
std
cmp
sub
out
mov
stos
jb
inc
or
adc
(bad)
jb
or
adc
sub
into
push
sti
cmc
loopne
mov
ja
cmp
dec
(bad)
jne
scas
bound
or
add
push
into
jle
ss
cwde
xchg
push
pop
test
jmp
or
adc
push
cmp
cs
sub
imul
scas
into
and
xor
and
mov
mov
call
and
push
pop
movs
xchg
loop
pop
ret
dec
in
jmp
add
fnstcw
test
inc
fwait
cmp
shr
mov
xchg
shl
cmp
adc
stc
mov
into
es
rcr
pop
aad
bnd
shr
jg
xor
push
push
push
xchg
sub
push
je
mov
std
jns
sbb
jg
fwait
xlat
mov
js
mov
daa
pop
imul
add
push
(bad)
es
xchg
in
test
fidiv
mov
shl
adc
add
inc
cmps
adc
ret
lds
add
fadd
xchg
call
test
lahf
cmovno
add
mov
aad
sbb
dec
(bad)
pop
and
sub
popa
xor
inc
mov
and
cdq
sub
icebp
jmp
or
fmul
arpl
sbb
inc
arpl
call
fstp
cmps
shl
xchg
fcmovnb
push
push
rol
(bad)
stos
mov
push
int3
inc
or
fstp
add
repz
inc
adc
mov
inc
loopne
cli
mov
call
add
jmp
and
popf
test
ds
into
std
jbe
rcr
mov
jp
xchg
mov
imul
push
adc
xchg
(bad)
jmp
dec
out
popa
mov
arpl
mov
fadd
mov
call
adc
in
out
in
push
push
pop
mov
(bad)
xor
add
and
mov
out
and
mov
push
mov
xlat
ds
mov
lock
cmp
arpl
jp
shr
jns
fiadd
clc
and
xor
cmp
sub
fadd
mov
loop
fist
scas
out
cmp
dec
mov
lock
or
cmp
mov
(bad)
int
fwait
ins
outs
cld
out
push
pop
xor
inc
pop
in
mov
cmp
push
mov
lods
test
and
xor
or
cdq
add
jae
sahf
dec
outs
and
imul
movs
pop
out
or
add
lds
scas
int3
or
mov
shl
int3
xor
scas
inc
sub
mov
xchg
rcl
jne
jge
cwde
mov
mov
xor
dec
mov
mov
mov
lods
loope
stc
pop
sub
lea
ss
xchg
and
xchg
mov
arpl
inc
ja
pusha
pop
mov
bound
mov
loop
cmps
addr16
mov
jecxz
sub
dec
pop
imul
add
test
or
and
in
movs
js
push
inc
ss
cld
xchg
push
nop
and
int
push
clc
dec
lahf
mov
push
pop
sbb
mov
dec
cmp
and
jno
jnp
and
cld
pop
cmp
mov
fprem
out
cmc
xor
push
leave
jp
dec
xchg
aam
mov
push
xor
lds
mov
adc
test
mov
popf
jns
jno
jge
dec
shl
xlat
and
lods
jmp
adc
int3
mov
pop
(bad)
data16
(bad)
jbe
adc
mov
(bad)
cmc
cmp
sbb
sub
call
jl
adc
sub
pop
aas
mov
pop
das
mov
sbb
test
push
jl
sub
fdivr
mov
sbb
push
pop
mov
ror
xor
clc
enter
loopne
jge
xor
cmp
mov
xchg
or
imul
adc
mov
mov
pop
push
add
je
(bad)
push
inc
pop
std
stos
dec
repnz
ret
xor
jge
enter
sbb
sub
inc
stos
fadd
icebp
xor
and
xlat
cmp
cmp
stos
aas
sub
xor
adc
xor
stc
inc
add
adc
fsubr
test
jbe
mul
push
loope
adc
cwde
adc
sub
xchg
stos
cwde
jmp
mov
pop
pop
add
shl
mov
jecxz
push
jns
movs
test
jle
dec
sbb
pop
call
cmp
pushf
pop
dec
sbb
scas
mov
xchg
bswap
jp
fisub
adc
popf
repz
xchg
mov
mov
fdivr
inc
enter
xchg
arpl
cmp
mov
retf
add
outs
push
sbb
frstor
dec
in
addr16
retf
ins
push
outs
out
not
pop
pop
sub
popf
les
pop
fs
leave
xor
(bad)
pop
bound
sub
or
fidiv
add
xchg
mul
dec
and
fadd
push
in
xchg
mov
iret
ins
loopne
pop
cmp
xor
pop
icebp
and
call
loope
jecxz
xor
xchg
or
sub
(bad)
popa
jmp
(bad)
xor
mov
push
or
cld
mov
cs
out
or
call
(bad)
retf
push
dec
adc
pop
push
push
mov
jo
popa
xor
inc
mov
dec
js
aas
lods
lea
mov
xor
mov
xor
lahf
jg
mov
out
push
leave
dec
mov
test
fsubr
and
(bad)
mov
icebp
add
not
sub
mov
icebp
xor
inc
cli
enter
call
lock
rol
or
inc
rcr
jp
movs
mov
add
mov
sar
mov
xchg
lahf
inc
xor
idiv
inc
jmp
aam
nop
pop
stos
fistp
inc
mov
sbb
xor
call
and
inc
or
mov
mov
sub
adc
mov
push
popf
add
fsubr
popf
fdiv
(bad)
repz
mov
ficom
adc
ret
xchg
sar
shl
in
pop
sub
enter
mov
push
enter
cmp
jnp
(bad)
cld
fs
sbb
mov
and
movs
in
cmc
mov
adc
test
cmp
movs
push
adc
(bad)
data16
xchg
sti
cmp
dec
mov
and
sbb
pop
movs
test
xchg
mov
push
and
inc
inc
rcr
xchg
push
push
(bad)
fnsave
push
or
leave
ror
movhps
lods
jg
fs
sbb
mov
imul
xchg
fsubr
lods
shl
jns
repz
push
mov
sub
in
mov
stos
test
cmps
imul
test
cmc
retf
cmp
(bad)
nop
sbb
add
xchg
sbb
pop
stos
sbb
xor
in
adc
mov
and
popf
jo
sbb
movs
push
sahf
iret
scas
lods
mov
mov
xchg
jl
repnz
lock
loopne
add
pop
jecxz
jmp
hlt
ds
loop
into
loopne
imul
jbe
dec
popf
cmp
movs
or
dec
or
and
push
push
shl
(bad)
into
pop
iret
jnp
sub
jo
push
scas
jg
or
(bad)
imul
sbb
dec
pop
lds
mov
int3
mov
jl
add
sbb
jns
(bad)
test
xchg
pop
inc
mov
inc
xor
xor
shl
mov
cmp
or
dec
leave
sbb
cmove
mov
jb
fsqrt
or
das
jmp
jle
gs
repz
and
in
or
and
mov
das
add
stos
pop
inc
adc
cdq
fisubr
and
dec
(bad)
outs
ror
xchg
jle
(bad)
sbb
add
ficomp
(bad)
lahf
mov
mov
fstp
pop
adc
pop
aaa
xlat
je
xor
jnp
sub
pop
stc
inc
pop
retf
mov
data16
jle
mov
mov
inc
das
xchg
dec
add
lods
dec
mov
hlt
mov
mov
inc
jne
adc
xor
inc
and
repz
mov
pushf
rcr
inc
ss
xlat
test
mov
jmp
out
nop
(bad)
mov
or
or
(bad)
icebp
in
aas
push
sti
je
sub
cmp
adc
(bad)
dec
test
push
daa
add
outs
pop
mov
frstor
push
xor
mov
daa
mov
jae
cmp
lock
adc
call
cmps
out
mov
js
repnz
push
iret
or
push
sahf
mov
stos
not
ins
int
inc
repnz
sub
out
push
cs
or
mov
or
add
xor
and
push
mov
call
or
push
push
inc
add
shl
add
add
mov
and
xchg
out
jmp
push
pop
lods
mov
rcl
stos
mov
(bad)
scas
aas
movs
pusha
popa
sbb
outs
aas
jae
daa
cwde
outs
test
add
pop
xor
pop
(bad)
out
aam
push
push
scas
push
adc
ficomp
in
mov
test
outs
add
mov
addr16
jle
xchg
mov
lahf
in
fstp
sahf
repnz
or
(bad)
lods
sbb
pop
adc
(bad)
cli
adc
mov
push
jmp
pop
xchg
and
jge
aas
retf
aaa
ret
inc
ss
inc
dec
pop
ror
lods
std
pop
xchg
adc
cmp
mov
or
mov
fwait
jbe
mov
mov
jl
dec
pop
into
bound
pop
movs
push
les
lds
mov
dec
call
loope
pop
into
and
jg
push
lea
imul
add
xlat
cli
test
xchg
movs
xlat
out
in
jg
sub
adc
clc
mov
pop
push
add
popf
add
adc
jmp
in
mov
imul
in
mov
lds
and
jle
(bad)
push
jecxz
les
sbb
and
js
mov
(bad)
mov
lahf
enter
cli
ret
into
sub
nop
(bad)
xchg
ret
jl
and
cmp
cmp
mov
pop
outs
dec
sbb
mov
ficom
sub
test
cmp
int3
add
inc
lods
add
ds
dec
or
pop
jno
xor
shl
aas
repz
loopne
xchg
inc
repnz
push
jb
mov
ds
mov
outs
mov
es
js
pop
pop
ret
addr16
or
cld
add
sbb
fdiv
inc
arpl
stos
add
or
mov
or
cmp
push
sbb
lea
popf
cmp
jecxz
(bad)
bound
dec
ins
push
push
sahf
jmp
iret
stos
push
xchg
je
fiadd
ins
mov
inc
xchg
je
jle
jp
outs
popf
pop
andnps
ss
mov
cmp
pusha
add
imul
int
js
pusha
pop
push
dec
mov
mov
in
scas
cli
xor
ds
fwait
imul
test
aaa
inc
mov
mov
add
aam
jo
sub
mov
pop
in
jecxz
and
sub
int
js
daa
lods
mov
inc
dec
push
cmp
rol
mov
xchg
sub
xchg
loopne
adc
jbe
push
cli
or
mov
pop
imul
mov
shr
stos
mov
(bad)
inc
(bad)
aad
fsub
adc
cdq
and
out
or
and
mov
fld
jl
je
scas
mov
mov
xor
inc
js
popa
and
popf
push
push
sbb
cmp
mul
in
test
mov
push
outs
mov
jno
sub
ins
retf
inc
jmp
lea
daa
in
pop
sbb
iret
sbb
cmps
ret
xchg
int3
ins
inc
out
hlt
mov
jbe
sub
xchg
jmp
in
mov
out
and
mov
jle
sbb
mov
pushf
push
jge
push
mov
xchg
sub
mov
xor
dec
rcr
mov
push
adc
add
pop
xchg
scas
or
out
push
sbb
inc
dec
daa
fstp
push
push
call
movs
aam
ds
adc
xor
int3
js
jo
xchg
push
repnz
xchg
mov
or
arpl
adc
(bad)
or
stos
arpl
loope
jmp
add
sbb
test
and
(bad)
push
pop
bound
inc
imul
lock
cmp
popf
xor
add
pop
cmp
call
lahf
ja
fimul
les
jge
(bad)
cwde
xchg
sti
pop
pop
or
in
clc
ret
jl
mov
outs
sub
sti
mov
sti
iret
pop
rol
fidivr
jns
mov
pop
mov
inc
push
bound
add
jp
in
(bad)
retf
repz
aas
bound
pushf
jmp
dec
dec
push
rcl
mov
adc
pop
mov
and
comiss
das
mov
(bad)
and
jbe
mov
xor
icebp
mov
pop
and
pop
dec
pop
inc
pop
jne
inc
xchg
out
mov
and
repnz
add
inc
adc
cwde
lahf
sbb
push
sbb
mov
pushf
in
sub
mov
dec
xor
dec
outs
xchg
and
push
add
imul
daa
call
es
mov
es
les
retf
test
lea
jp
rol
xchg
xchg
xor
push
push
stos
cmp
inc
cmps
dec
dec
xchg
cli
movs
sbb
pop
or
fwait
daa
xchg
adc
dec
bnd
in
sbb
mov
sub
xchg
push
mov
stc
test
popf
jle
cvtps2pi
pop
fcom
push
push
aam
repnz
les
fiadd
or
(bad)
cmp
or
shr
inc
xchg
fadd
push
aam
inc
mov
adc
cwde
sbb
xlat
add
(bad)
inc
or
jmp
lahf
xlat
add
mov
pop
xchg
ret
jmp
sbb
sbb
xchg
push
mov
inc
int3
loopne
jns
fwait
shr
fst
and
in
dec
fincstp
cmp
leave
adc
arpl
cs
or
cmp
arpl
pop
push
pop
sbb
aaa
pop
push
jns
arpl
add
mov
mov
xchg
pop
adc
lods
adc
add
push
or
pop
int3
or
xchg
fist
mov
clc
out
in
dec
adc
pop
and
fdiv
in
pushf
and
mov
ds
adc
mov
cdq
inc
and
ins
ja
cmp
cwde
inc
xor
loop
push
sbb
mov
adc
xor
xchg
lods
loopne
fsubr
or
sbb
les
ds
ins
jb
aam
push
mov
bound
movs
icebp
adc
fnstenv
inc
call
or
push
(bad)
xor
dec
dec
in
imul
or
test
jle
std
and
in
mov
pop
inc
sub
push
fidiv
push
pop
popf
cmp
xchg
loope
cwde
lea
mov
sub
imul
(bad)
vmread
(bad)
xlat
out
rol
ins
inc
popf
pop
pop
mov
ror
xchg
popfw
pop
cmp
mov
pushf
xchg
cmc
int3
pop
add
xor
push
mov
test
dec
sub
mov
xor
ror
mov
adc
inc
sbb
popf
enter
in
dec
imul
xchg
fwait
dec
mov
push
add
add
jmp
test
xchg
lahf
add
popf
xchg
dec
and
inc
es
fdiv
cmp
(bad)
out
mov
pop
pop
and
aad
pop
mov
int3
dec
mov
jg
movs
pop
mov
xchg
addr16
outs
ss
push
push
call
pop
sbb
xchg
cs
add
inc
sbb
mov
xchg
xchg
inc
test
inc
push
mov
xlat
pop
sbb
arpl
ror
fadd
and
inc
xor
popf
ret
jmp
pop
outs
add
adc
rep
(bad)
pop
sub
push
icebp
dec
inc
fimul
sar
movs
std
jl
mov
xchg
sbb
scas
lock
or
aam
imul
xchg
js
xor
push
mov
call
test
push
cmp
aaa
push
add
sub
es
je
popa
fwait
mov
pop
in
xchg
retf
fdivrp
adc
int3
(bad)
dec
loop
neg
mov
cmp
xor
(bad)
cmp
sbb
or
inc
xor
jl
clc
cmps
ins
lods
in
retf
xor
pop
sbb
ins
mov
xor
shl
outs
sub
fdiv
mov
jbe
sub
imul
shr
sbb
mov
or
or
popf
in
xchg
in
(bad)
test
pop
mov
xor
stos
pushf
and
fimul
les
jmp
aas
fadd
lock
outs
pop
mov
xor
nop
sahf
xchg
enter
mov
mov
cmp
popf
mov
jb
ror
shr
scas
ss
fbstp
jb
lods
test
xor
fisttp
mov
push
push
pop
das
mov
cli
pop
add
push
inc
retf
dec
loopne
(bad)
arpl
out
loop
jo
mov
adc
lods
or
fsubp
out
or
std
inc
push
xchg
(bad)
xchg
stc
pop
aad
push
xor
push
ror
xchg
sbb
add
sbb
cmp
mov
lahf
ficomp
test
xor
cwde
addr16
in
or
add
lods
fwait
xor
mul
call
pop
push
push
daa
mov
loope
cmp
clc
(bad)
ins
pushf
sbb
loope
es
neg
mov
stc
addr16
sti
pop
lock
adc
push
jge
mov
movs
cmp
stc
movs
jle
cld
movs
jbe
cmps
xchg
jne
xor
jo
xchg
adc
adc
sar
or
mov
pop
ret
sbb
mov
sar
scas
sti
cwde
push
les
mov
push
sub
mov
mov
cmps
mov
pop
push
mov
daa
jmp
ss
dec
call
in
sbb
xchg
jns
push
ret
ja
xor
or
push
sbb
and
jle
pop
cmc
adc
hlt
xor
mov
fistp
aam
(bad)
retf
loopne
nop
(bad)
leave
pop
mov
and
dec
add
mov
gs
and
jl
add
sub
inc
push
lods
and
(bad)
push
sbb
loope
pop
dec
in
movs
xor
mov
fidiv
xor
push
xor
ins
call
sbb
out
jnp
out
test
and
mov
jmp
das
and
in
lahf
ins
push
xchg
pop
mov
stc
ins
pop
cmp
jge
pop
pop
sar
idiv
sahf
push
cwde
clc
movs
jns
adc
jns
cmp
push
ds
xor
pop
and
in
(bad)
in
pop
and
cdq
enter
and
xor
sub
add
add
cmps
dec
jle
push
dec
or
mov
pop
xchg
ds
mov
(bad)
cmp
adc
fisubr
xchg
out
repnz
int
lods
adc
fidiv
and
(bad)
xor
jmp
sbb
rcl
xchg
inc
dec
retf
inc
fucomp
cwde
pop
lahf
enter
mov
pop
and
fisubr
mov
call
fst
(bad)
xor
mov
daa
push
adc
int3
scas
xchg
or
ret
leave
lods
jns
mov
ss
aas
cmps
outs
ins
cmc
push
sub
out
shl
sub
jae
fs
and
or
xor
iret
icebp
in
push
pusha
loopne
jo
cmp
jb
dec
loop
cld
loopne
add
adc
sbb
jecxz
fs
shl
jae
or
lods
(bad)
retf
clc
imul
into
in
or
pop
dec
mov
movs
sub
jnp
pop
test
mov
push
mov
icebp
ror
mov
cmc
rcl
jbe
(bad)
aas
daa
cmp
adc
add
(bad)
test
(bad)
and
stos
and
sub
sbb
addr16
and
lea
push
cli
or
add
aaa
outs
dec
mov
enter
push
mov
mov
data16
or
inc
inc
out
jae
xor
dec
arpl
in
dec
mov
sub
mov
pop
iret
mov
cmp
xor
cdq
and
ins
push
add
and
adc
and
hlt
cmp
icebp
in
pop
cld
jmp
dec
xchg
xor
cmp
cmps
cdq
lods
xchg
setno
add
dec
or
jo
iret
mov
add
fucom
cld
aam
xor
push
and
xchg
xchg
inc
cmp
cmps
cmp
inc
xchg
fnsave
mov
xor
aaa
popa
xchg
aad
loopne
add
jl
popa
je
std
jge
scas
imul
outs
lahf
(bad)
push
dec
and
enter
xchg
sub
or
test
add
out
sbb
ret
fs
mov
cmp
popf
leave
fcmovu
jmp
call
inc
movs
xor
push
imul
pushf
lods
xchg
and
jl
outs
pop
jb
iret
repnz
das
out
(bad)
cdq
sub
pusha
jmp
xchg
sub
sub
cli
add
xchg
xchg
gs
(bad)
cmps
xchg
dec
and
or
loopne
hlt
rcl
sbb
add
cmovns
adc
clc
mov
xor
call
ror
pop
in
mov
test
jl
jp
bswap
mov
push
xchg
xchg
pusha
push
ja
in
stos
push
mov
push
xchg
push
rcr
jge
(bad)
in
test
mov
jmp
jge
rcl
(bad)
pusha
mov
dec
xchg
(bad)
clc
bound
ins
and
jmp
adc
sbb
push
mov
xchg
fild
mov
fst
xchg
dec
pop
or
inc
stos
mov
shl
add
mov
lea
mov
aas
int3
ins
scas
or
adc
and
bound
jle
cmp
cmp
jl
cmp
and
iret
ds
cwde
add
push
ret
jbe
and
pop
jmp
and
ds
mov
add
in
ror
enter
ja
pop
cmp
jae
cdq
jno
push
push
icebp
ss
ror
ror
push
xchg
shl
scas
dec
jnp
ds
pop
(bad)
adc
fistp
lahf
mov
mov
jmp
xchg
xchg
mov
jecxz
jbe
cmp
movs
outs
mov
push
sub
in
outs
movs
xor
lods
mov
mov
mov
ja
jp
retf
push
xchg
imul
adc
mov
mov
push
pop
mov
push
xor
jnp
xchg
xchg
test
sub
dec
xchg
pop
xor
jmp
not
mov
and
retw
lahf
cwde
add
aas
test
ds
cmp
sub
test
xchg
sti
push
and
dec
mov
cld
or
jae
ins
fmulp
jmp
sub
inc
add
pop
loope
mov
in
ficom
and
adc
inc
fild
jns
mov
ss
je
fwait
mov
std
js
mov
adc
popa
into
outs
dec
dec
ret
dec
add
int
mov
stos
fwait
xchg
push
out
enter
xchg
dec
into
pop
(bad)
lods
xchg
cli
(bad)
aaa
sar
repz
xchg
sub
mov
jnp
out
das
inc
jecxz
test
mov
inc
xchg
cld
mov
lds
mov
ins
shl
cmp
jmp
cmp
mov
xor
jle
(bad)
and
add
push
sbb
fs
mov
aam
aad
sub
fst
sahf
pop
xor
pop
mov
mov
jle
sbb
jo
aaa
iret
and
dec
dec
cmps
or
sub
xchg
(bad)
mov
cmp
ja
pop
loope
(bad)
lods
in
sti
sub
add
loop
jl
out
loopne
push
(bad)
xchg
addr16
popf
xchg
and
mov
dec
stos
or
test
ds
adc
in
neg
xor
daa
sbb
ds
lods
adc
pop
aam
push
cmp
jns
or
add
ret
or
add
fst
out
sbb
lods
cs
mov
out
push
cmc
mov
into
arpl
jp
mov
js
mov
cwde
xchg
fwait
sbb
aaa
adc
dec
sub
in
fs
push
fwait
jecxz
adc
iret
xchg
mov
les
fist
add
inc
xor
cmc
test
dec
hlt
xchg
adc
in
push
add
inc
ret
adc
and
daa
xor
call
loopne
xor
rol
cmps
leave
mov
fwait
xor
sub
jl
xor
jnp
call
fcom
int
cmps
movs
ret
(bad)
or
mov
dec
mov
(bad)
ret
ins
sbb
mov
fmul
cli
mov
sbb
cwde
scas
into
inc
inc
scas
push
ficom
js
jns
pop
outs
pop
je
test
fimul
sbb
out
fld
jmp
call
call
jne
movs
mov
push
sbb
pop
push
inc
cmc
daa
push
test
shr
sbb
cmp
hlt
inc
pop
mov
dec
cli
dec
jl
adc
hlt
sub
rcl
(bad)
adc
xor
add
mov
dec
mov
add
inc
mov
in
mov
repnz
xor
std
sub
mov
nop
movs
popa
cmp
cmp
ds
mov
fs
lahf
adc
test
push
xchg
popa
lock
sar
rcr
sbb
dec
jg
int3
xchg
dec
or
mov
test
gs
inc
sti
jl
rol
cld
ins
push
mov
push
mov
push
inc
test
(bad)
cmp
cmps
add
div
cmp
repnz
adc
xchg
mov
add
lock
mov
(bad)
in
xchg
mov
and
xchg
sbb
pushf
and
(bad)
stos
ret
mov
xchg
mov
mov
in
out
inc
ss
cli
push
sub
ret
xor
into
sahf
mov
ficom
call
jae
inc
push
bswap
mov
push
sub
xlat
or
jl
jle
jge
mov
adc
pop
xlat
ja
add
js
dec
not
leave
stos
xchg
mov
repz
jnp
dec
mov
into
pop
add
xchg
push
das
imul
lds
shl
cmp
pop
bound
test
dec
pop
xchg
jmp
pop
xchg
stc
cs
add
jae
sub
loop
dec
lods
jle
ror
faddp
fmul
push
fiadd
mov
cdq
popa
mov
xor
pop
mov
icebp
ja
xchg
(bad)
xchg
clc
out
sub
xchg
mov
(bad)
rcl
popf
es
cmp
loop
das
adc
imul
leave
in
clc
pop
mov
cmp
sub
xlat
movs
stos
pop
adc
xchg
mov
pop
das
add
int3
mov
(bad)
cmp
shl
leave
pop
and
or
and
data16
shr
(bad)
fwait
xchg
movs
sub
data16
dec
dec
cmp
std
and
lea
fnstsw
xor
jecxz
test
shl
dec
sub
push
pop
lods
xor
inc
fdivr
das
add
hlt
scas
daa
outs
in
retf
add
or
lods
test
(bad)
push
into
fs
mov
test
ins
call
mov
popf
fdivrp
push
(bad)
inc
movs
jg
or
aad
or
div
xor
mov
shr
sbb
out
pop
into
pop
sbb
and
cmp
inc
lea
sub
pop
xor
adc
loope
nop
call
(bad)
push
in
ds
sbb
sub
xor
push
into
jg
jmp
and
mul
inc
mov
jp
rcr
sbb
stos
sbb
dec
cmp
push
pop
jmp
aaa
lds
(bad)
les
sbb
jae
stc
leave
push
add
push
ret
xchg
sbb
add
dec
repnz
xchg
scas
mov
dec
push
and
mov
movs
iret
es
xor
mov
jne
fstp
ds
sbb
nop
xor
push
push
out
pushf
mov
mov
inc
movs
ret
mov
sahf
ret
shl
jl
mov
fiadd
leave
sbb
mov
and
loopne
mov
mov
fst
inc
and
cmp
div
fild
lahf
sbb
imul
inc
mov
xor
fld
push
adc
cmp
or
xor
mov
(bad)
cmp
cmp
lahf
mov
mov
in
push
xchg
sbb
mov
cmc
in
sub
jp
mov
adc
int3
loope
into
or
outs
dec
inc
xlat
movs
sar
mov
arpl
cmp
mov
fst
popf
dec
jbe
and
pop
ror
repz
cs
sub
shl
popa
ins
fist
mov
or
in
ja
xor
cwde
rcl
lahf
imul
arpl
adc
fs
call
xchg
jge
ds
leave
sbb
popf
or
scas
xor
push
add
fwait
sbb
mov
adc
test
and
(bad)
push
push
dec
sbb
sbb
mov
or
imul
add
(bad)
shr
jnp
je
cli
es
push
mov
pop
cmc
mov
and
retf
mov
cmp
sti
jbe
push
div
lods
mov
add
inc
mov
push
scas
jle
(bad)
in
into
jp
jae
add
cli
dec
dec
xchg
adc
jns
(bad)
hlt
jb
push
push
mov
push
out
popf
jg
push
dec
or
pop
cmp
jnp
rcr
popf
leave
jnp
mov
or
cmp
imul
mov
xchg
sub
pop
out
clc
test
lods
retf
jne
repz
out
sti
loope
dec
scas
ins
or
or
and
lock
sti
push
lods
push
cs
call
ds
into
daa
scas
jmp
add
pop
lods
add
xchg
mov
add
push
retf
jno
movs
test
inc
int3
movs
push
mov
inc
mov
jmp
cmp
adc
cmp
jmp
movs
lock
les
adc
xchg
xchg
movs
call
push
dec
cld
inc
popa
lods
push
repz
clc
cmps
das
inc
pop
retf
stc
gs
jg
xchg
pop
pop
lods
(bad)
cdq
call
and
jns
sbb
sbb
push
inc
push
clc
mov
xor
inc
pop
rcr
lea
pushf
mov
fisubr
sbb
cli
dec
or
push
inc
jo
and
cmp
jg
leave
aam
(bad)
fiadd
push
cmp
cmp
mov
gs
cs
ds
stc
std
jbe
jae
mov
mov
push
rcl
pop
mov
inc
stc
mov
mov
mov
jo
cld
pop
jb
les
scas
outs
(bad)
lock
mov
ds
leave
sahf
sbb
es
xchg
mov
cmp
scas
pop
and
int3
les
(bad)
cmp
mov
adc
push
lods
iret
pop
loopne
into
fdivr
xor
rcl
add
push
xor
pop
sbb
ror
xor
aas
jno
addr16
fld
out
jl
mov
out
jge
(bad)
push
xlat
addr16
pusha
ins
xchg
retf
fwait
dec
or
and
mov
sub
fs
mov
push
sbb
adc
test
nop
daa
sbb
sbb
mov
sub
je
(bad)
mov
and
imul
ret
jmp
call
inc
cwde
lods
push
sbb
jo
add
pop
mov
ja
cdq
repz
daa
jp
mov
mov
test
out
aaa
and
arpl
push
and
(bad)
inc
mov
mov
loopne
xchg
push
popa
jne
loopne
mov
into
mul
adc
adc
add
push
shr
mov
jp
mov
imul
stos
(bad)
lods
imul
pop
mov
test
push
jmp
jl
lods
cmps
push
pop
cmc
in
push
clc
xchg
pop
xor
into
pop
icebp
mul
and
imul
loopne
inc
retf
push
pushfw
loopne
lahf
(bad)
seto
test
(bad)
dec
mov
mov
inc
ins
das
mov
dec
adc
pop
jne
loope
push
cli
sbb
and
xchg
mov
repz
mov
fs
mov
dec
and
adc
cs
mov
mov
imul
dec
movs
cld
push
lock
int3
cmp
movs
mov
mov
cmp
cdq
out
popa
test
mov
daa
xchg
xchg
mov
and
mov
pop
adc
mov
cmp
sbb
leave
mov
sbb
sysexit
mov
je
loope
push
rcr
clc
inc
dec
dec
(bad)
xor
mov
mov
fwait
sbb
lods
sub
(bad)
mov
pop
cwde
daa
sub
sub
adc
adc
outs
fmulp
(bad)
shl
out
push
es
jmp
movs
cmp
mov
dec
jo
mov
call
call
(bad)
fwait
repz
adc
jae
jmp
imul
adc
addr16
cmp
pushf
pop
scas
(bad)
and
xchg
jle
call
ins
shr
adc
jg
fcomi
and
pop
jno
imul
js
jle
aam
outs
xchg
push
xchg
xor
arpl
mov
cmc
(bad)
lea
dec
retf
pop
mov
push
and
and
mov
call
shr
sub
sbb
scas
(bad)
stos
(bad)
mov
mov
or
in
add
adc
test
in
push
mov
arpl
test
test
push
enter
cmp
lock
mov
pusha
ror
in
fidivr
mul
outs
dec
pop
movs
(bad)
fnstenv
sub
inc
out
in
pop
aad
not
ins
xor
sub
(bad)
in
pop
out
mov
pop
das
jo
jae
imul
adc
jns
mov
mov
sub
lods
test
mov
cmp
cs
mov
int
mov
cmp
iret
int
adc
sbb
sbb
inc
mov
add
shl
adc
lods
stos
int
les
loopne
fs
and
mov
mov
iret
ret
fisttp
jl
pop
(bad)
xor
aam
mov
xchg
inc
in
(bad)
push
jne
push
push
les
cwde
js
cwde
hlt
xor
cmc
fdiv
sub
movs
jnp
repnz
push
dec
jl
fimul
xor
imul
test
sub
sub
push
lahf
cmps
rol
shr
mov
cmps
pop
icebp
rcr
push
push
sti
xlat
or
sub
mov
jp
xchg
adc
(bad)
push
int3
mov
push
push
mov
lahf
xchg
cmp
bound
stos
into
repnz
cmps
ja
ss
inc
pop
inc
jp
ins
jns
push
pop
aam
(bad)
cmp
jb
jne
cmc
add
and
cmc
mov
mov
test
dec
pop
stc
xchg
pop
push
movs
addr16
fnstcw
add
pop
ret
test
and
fwait
mov
inc
sbb
lock
push
nop
loop
dec
cmps
aas
push
or
or
into
mov
lock
mov
ins
cmp
pop
mov
and
clc
inc
jmp
cmps
mov
jmp
mov
xchg
dec
jg
stos
add
add
inc
mov
(bad)
xor
jg
enter
mov
jmp
clc
jnp
sbb
pusha
dec
test
lea
into
gs
(bad)
mov
sbb
hlt
daa
into
popf
arpl
int
or
add
xor
jle
popf
add
gs
pop
or
cmp
int3
inc
mov
jge
and
out
inc
test
add
add
retf
daa
das
inc
hlt
fs
jg
add
and
pop
repz
mov
out
cmps
aaa
sbb
div
ja
sub
sub
sbb
imul
cs
lock
data16
out
repz
inc
in
xchg
push
xor
dec
mov
(bad)
jp
dec
xor
ss
xor
mov
jo
lods
cmp
cld
mov
jns
push
push
pop
cmp
inc
iret
pop
sub
and
test
std
sbb
ret
pop
stos
mov
outs
inc
(bad)
pop
mov
fldln2
loope
xor
inc
inc
loop
mov
sub
lock
cs
enter
cmp
dec
mov
arpl
into
dec
push
xlat
mov
add
mov
adc
mov
iret
mov
pusha
dec
out
aam
into
sub
mov
out
cmp
push
sub
pop
cmp
add
enter
mov
loope
adc
iret
jl
pop
(bad)
lea
pusha
fistp
test
out
loop
push
jae
jmp
and
(bad)
call
iret
inc
daa
mov
cmp
xor
dec
push
cmp
call
jle
mov
stos
out
dec
inc
mov
jb
jmp
mov
inc
fistp
xchg
clc
mov
into
pusha
dec
or
fldln2
aam
stos
popf
popa
cmps
sub
popf
fisub
lods
mov
inc
mov
add
push
mov
pop
(bad)
int
test
push
push
out
cmc
jno
mov
sbb
fisub
sub
adc
mov
sub
push
mov
nop
inc
mov
movs
dec
cld
out
mov
push
push
loopne
pop
repz
sbb
or
push
add
mov
clc
mov
push
shl
sub
mov
int3
mov
(bad)
repz
push
(bad)
sbb
pop
inc
push
dec
mov
aaa
cmp
enter
push
and
test
rol
xor
mov
ds
and
xchg
jmp
mov
and
aam
repnz
aam
xchg
mov
dec
mov
stc
add
retf
out
sahf
ins
repz
cmp
mov
cmp
ret
clc
jb
adc
push
(bad)
cli
imul
rcr
(bad)
scas
test
test
mov
cmp
xor
clc
leave
out
mov
sub
adc
pusha
add
push
loopne
retf
nop
sub
xor
push
sbb
stos
std
frndint
popf
mov
gs
mov
and
scas
jp
mov
sub
test
daa
out
pop
fidiv
jle
mov
cs
inc
(bad)
pop
mov
cmp
adc
sbb
(bad)
xchg
jecxz
into
sbb
mov
mov
jle
in
jmp
imul
inc
ror
xchg
and
fstp
push
cmp
inc
or
int
out
pop
mov
push
mov
aam
retf
or
cmp
sahf
xor
je
lods
dec
lahf
adc
xchg
in
adc
inc
test
jno
aas
xor
imul
push
inc
aaa
jnp
movs
sti
mov
sub
call
mov
loope
cmp
lea
out
sbb
add
xor
and
inc
aad
pop
pushf
xor
mov
and
pop
(bad)
nop
xor
dec
inc
pop
cli
sar
call
adc
sub
push
xchg
sub
xchg
sbb
bnd
(bad)
xchg
neg
and
repz
mov
xchg
lahf
xchg
sbb
add
dec
add
mov
data16
push
retf
or
nop
jge
fwait
sahf
sub
mov
sbb
rcr
mov
je
xor
retf
sahf
test
mov
jne
not
dec
adc
push
shr
dec
or
xchg
pop
cli
(bad)
lock
mov
(bad)
das
push
and
xchg
mov
cld
out
jg
add
(bad)
adc
das
inc
pop
in
sti
xchg
je
sub
inc
int3
sbb
aad
fisubr
lods
xchg
in
jmp
std
rol
sub
mov
ret
rol
push
in
mov
ins
xor
jo
xchg
xchg
(bad)
sub
push
stos
jo
ficom
adc
adc
shl
aaa
inc
pop
js
adc
movs
mov
sar
retf
or
add
cmp
and
add
inc
cli
and
lea
out
(bad)
enter
arpl
out
push
movs
sub
ins
xlat
outs
in
scas
out
sysenter
pop
fild
adc
pop
(bad)
cdq
aad
xchg
loop
fistp
arpl
xchg
push
cmc
cmp
sub
mov
sar
push
repnz
scas
or
mov
call
test
popf
dec
adc
leave
fucomip
outs
aaa
cwde
push
xlat
fs
(bad)
jmp
retf
sub
into
add
cwde
pop
jns
movs
cmps
adc
adc
push
nop
jbe
mov
xchg
or
rcr
aam
xlat
mov
addr16
xor
aam
mov
jecxz
xchg
repz
stos
ins
mov
jl
cld
mov
push
in
imul
sbb
or
retf
xchg
jmp
jl
int3
or
retf
mov
test
or
add
sub
dec
fst
ins
mov
inc
ins
mov
aas
xchg
pop
fcmovu
push
dec
sub
mov
pop
xchg
cmp
sti
jge
mov
push
ret
hlt
xor
syscall
(bad)
sbb
and
repnz
retf
repnz
(bad)
gs
out
test
(bad)
mov
aaa
rcr
xor
mov
ror
ss
adc
in
int
inc
shl
dec
mov
dec
es
pop
xor
cwde
add
or
aad
jbe
xchg
loopne
mov
jne
jge
push
data16
push
mov
xchg
es
scas
scas
(bad)
fidiv
xlat
mov
jns
loopne
xchg
add
outs
pusha
push
data16
int
dec
push
pop
nop
jle
jge
movs
mov
out
mov
lods
test
mov
add
dec
iret
mov
sub
pop
(bad)
loop
mov
inc
add
clc
pop
arpl
push
ds
sahf
mov
push
xchg
ss
jmp
leave
sub
mov
ror
mul
xor
mov
and
xchg
or
xor
add
inc
out
inc
rol
gs
push
outs
test
xor
dec
pop
cmc
cs
sahf
cmp
dec
(bad)
and
dec
sub
inc
mov
in
cmps
in
lahf
push
xor
mov
pop
sub
cmp
ret
retf
jnp
and
jmp
mov
and
cdq
xchg
sub
ds
lock
je
cmp
leave
dec
repnz
jmp
ins
sub
xchg
jecxz
fwait
mov
in
icebp
push
aam
xor
pop
jne
adc
loop
aaa
ja
jmp
mov
sbb
jp
jmp
clc
jge
fwait
mov
pop
jmp
rol
inc
inc
jp
scas
fisub
out
fstp
stos
cmps
mov
jmp
jmp
fstp
sub
pop
or
adc
sbb
loopne
pop
push
cmp
push
ja
mov
scas
loopne
fs
or
cmp
bnd
cdq
das
outs
push
add
mov
add
or
cs
mov
jg
adc
cmps
nop
(bad)
into
add
pop
xor
imul
call
pop
ror
lods
mov
retf
cmp
xchg
lds
sub
sub
lods
xor
into
inc
paddusw
fiadd
(bad)
xchg
push
retf
inc
iret
pop
adc
mov
mov
cdq
lahf
test
cdq
call
jg
out
mov
mov
sbb
xlat
adc
(bad)
mov
inc
add
mov
xchg
in
mov
push
data16
ror
pop
jg
sub
bound
in
jecxz
loopne
popf
mov
outs
xor
push
daa
je
jnp
add
mov
dec
mov
mov
in
ja
fild
jne
ret
rcr
in
jg
addr16
jmp
xor
xchg
jmp
out
inc
push
pushf
rcl
pop
mov
mov
pop
push
inc
xchg
push
sbb
xchg
pop
mov
xchg
(bad)
cs
movs
ret
or
jbe
or
call
and
sbb
sub
and
enter
cmp
mov
dec
xchg
cwde
dec
cli
test
pop
arpl
xor
jb
in
ins
and
fsubr
cmp
loop
dec
fistp
xlat
div
xchg
mov
xchg
loopne
ret
outs
xlat
xchg
push
pop
in
pop
pop
sbb
mov
imul
and
cdq
movs
enter
(bad)
addr16
pushf
neg
out
and
or
adc
mov
sbb
enter
push
add
xchg
inc
pop
sbb
inc
cmp
imul
mov
lods
lahf
(bad)
(bad)
outs
sbb
or
popf
inc
mov
cmps
add
rcl
jle
sbb
lods
dec
or
cmp
push
push
xchg
push
mov
int3
rcl
loope
loopne
lahf
sti
btr
dec
sbb
clc
xor
retf
bound
mov
loopne
icebp
cmp
fild
push
in
push
aad
xchg
mov
int
(bad)
ja
mov
inc
enter
inc
call
pop
test
push
and
inc
fldcw
pusha
jne
add
and
push
or
out
int3
fisttp
jle
repz
adc
in
sub
hlt
in
cmp
cdq
aam
out
push
or
fst
sub
inc
sub
cmp
mov
ds
nop
add
call
data16
mov
cmp
xchg
inc
xchg
adc
xlat
xchg
enter
out
mov
or
or
jbe
jb
ja
push
shl
and
pop
jmp
push
fidivr
lods
stos
mov
call
and
jecxz
jbe
inc
(bad)
sbb
cs
outs
fbld
jbe
xchg
enter
mov
mov
or
setg
ja
fisub
mov
xlat
repnz
pop
(bad)
pusha
shl
shr
or
jmp
xor
aad
push
daa
or
out
mov
es
out
xchg
push
ficomp
mov
popf
and
mov
mov
jbe
pop
mov
cmps
fbld
ficomp
cmc
jl
je
xchg
jmp
add
jp
adc
popa
ret
repnz
(bad)
lahf
in
mov
inc
jg
mov
push
dec
repnz
retf
cmp
pop
in
and
leave
push
cld
xchg
mov
push
add
imul
movs
mov
xchg
push
cmp
das
dec
dec
shr
cmovle
lahf
and
pop
sbb
call
jno
push
out
in
push
xor
mov
xchg
cmc
mov
cli
mov
fsubr
fld
cwde
push
or
je
or
fldpi
jbe
push
cmp
(bad)
rol
sbb
(bad)
mov
mov
mov
or
ror
int
retf
push
mov
aad
push
(bad)
or
gs
push
call
fwait
xchg
and
imul
fcmove
in
and
add
dec
push
xchg
mov
and
mov
sysret
sbb
out
dec
sub
inc
add
xchg
pop
movs
mov
or
dec
mov
movs
sti
push
pop
mov
xchg
inc
push
dec
pop
inc
add
cs
xor
xchg
pop
xchg
mov
out
cmp
hlt
jae
mov
out
fsub
(bad)
fs
mov
cmp
push
retf
xlat
pop
sub
arpl
sub
fs
push
inc
popa
xchg
mov
xor
inc
pushf
push
push
stc
aas
popf
jmp
adc
iret
xor
and
lods
lahf
shl
cdq
fstp
cld
fistp
arpl
test
rol
ret
(bad)
push
adc
mov
sub
das
addr16
push
inc
and
and
dec
popf
push
lock
int3
rol
or
mov
xchg
ja
out
xchg
arpl
out
add
sbb
mov
repnz
cmps
add
test
add
mov
lahf
sub
mov
mov
dec
shr
pusha
or
imul
jno
mov
dec
(bad)
gs
mov
fiadd
add
pop
pop
inc
fdivr
mov
fbstp
or
cmp
mov
cmp
jne
mov
mov
ins
mov
es
pop
sub
sti
fidiv
rcl
into
mov
ss
and
out
lock
add
rcl
push
jg
ror
loop
pop
imul
lea
not
out
push
dec
inc
pop
push
push
sub
push
sub
dec
dec
ins
mov
std
or
xchg
aam
or
dec
rol
int
cmp
pop
push
movs
mov
fisub
and
fldenv
sti
nop
mov
dec
push
nop
int3
cmp
hlt
pop
stos
shr
test
rcl
test
xchg
mov
mov
add
inc
mov
les
nop
lods
in
push
mov
cmc
cwde
mov
repnz
mov
mov
ret
out
push
fs
dec
cmp
cmps
arpl
jecxz
das
mov
pop
or
ret
sti
imul
fnstenv
xchg
test
stos
adc
push
loopne
mov
clc
jbe
add
pop
inc
jle
push
js
adc
jne
cmp
(bad)
or
mov
pop
dec
pop
jmp
jge
xchg
(bad)
xor
lods
lods
cmp
cmp
xor
push
retf
inc
fdivr
in
mov
cmps
sub
or
or
loopne
xchg
hlt
cmp
mov
push
clc
mov
jl
lock
sbb
stos
iret
sbb
xor
mov
adc
add
xor
enter
inc
xor
sub
mov
xor
jp
mov
jno
and
or
inc
sahf
xchg
cmp
(bad)
movs
in
je
cmp
add
xor
fisub
ins
dec
into
sbb
jo
pop
xchg
imul
shl
test
pusha
mov
sub
inc
push
aad
gs
xor
(bad)
arpl
pop
inc
mov
test
xor
xchg
loop
and
xchg
inc
lea
inc
xchg
data16
and
stc
movs
loop
(bad)
ficomp
cwde
bound
push
mov
out
push
mov
stc
dec
and
in
(bad)
out
mov
push
and
cs
dec
xchg
dec
xchg
mov
xchg
shl
mov
pusha
and
pop
push
mov
and
xor
call
sbb
out
push
sti
cs
xor
sbb
xor
sub
arpl
(bad)
cs
mov
aas
mov
push
xor
fild
and
mov
pop
js
fcmovnb
test
out
js
dec
ss
std
inc
xchg
sahf
mov
pushf
test
pop
xor
setnp
adc
pop
xchg
(bad)
adc
(bad)
out
(bad)
dec
lock
push
fdivr
mov
rcr
mov
sbb
cs
scas
jl
cmp
dec
mov
add
pop
out
adc
or
lods
pop
ror
std
and
shl
jns
mov
add
es
or
jecxz
test
mov
add
ss
push
jno
retf
loopne
shr
cdq
xlat
repnz
cmp
or
not
xchg
ins
ret
push
stos
in
mov
out
push
aad
mov
aam
mov
out
cld
pop
retf
loop
loope
dec
call
cdq
push
sbb
in
adc
sbb
jo
fidivr
(bad)
(bad)
jp
push
mov
ret
or
into
inc
cli
mov
dec
rcpps
mov
js
outs
push
mov
(bad)
mov
cmps
retf
cmp
cmp
mov
fcom
adc
dec
daa
sbb
ds
(bad)
out
mov
dec
ins
idiv
imul
jo
adc
leave
mov
nop
and
retf
aam
loope
aad
mov
iret
cld
inc
push
jb
repnz
je
push
lods
fstp
loopne
mov
popa
dec
cdq
adc
mov
retf
fdivr
test
pop
and
inc
xor
out
fisttp
or
dec
xor
retf
mov
imul
nop
out
xor
sub
daa
lahf
lods
std
push
sub
push
sbb
test
sahf
mov
fnstcw
cmp
xor
neg
pop
popa
xor
or
and
test
movs
jo
hlt
jmp
push
cmp
xor
xchg
fist
nop
xor
sar
add
mov
jne
push
ja
mov
dec
aad
retf
mov
jp
adc
add
sti
popf
xor
scas
mov
movs
or
icebp
sbb
pop
xor
jns
bound
xchg
test
ror
bound
pop
sti
ja
mov
push
xor
fcom
fwait
out
mov
cwde
jmp
movs
xchg
ins
dec
adc
div
lds
dec
sti
out
xchg
xchg
pop
cmp
mov
sbb
sar
push
daa
pop
mov
daa
xchg
lahf
mov
jge
hlt
jb
mov
fimul
dec
jge
add
or
mov
lahf
push
jbe
shl
sub
jle
push
lds
addr16
or
jg
xlat
sub
inc
push
dec
(bad)
movs
cmp
xor
dec
cmc
xchg
lea
sbb
jne
gs
dec
sar
xchg
fdivrp
idiv
repnz
add
(bad)
mov
lock
or
mov
dec
add
les
hlt
jmp
pop
rcr
repnz
xchg
mov
xchg
jmp
mov
fld
sbb
(bad)
loopne
xchg
aas
je
(bad)
or
loope
lods
mov
sar
pop
and
push
je
js
cmp
xchg
jmp
loope
jno
cmp
dec
or
adc
jl
mov
cs
push
add
and
xchg
xor
scas
pushf
dec
out
xor
cli
(bad)
scas
jne
cmp
push
repnz
int
dec
jge
pop
cmp
test
xor
mov
push
and
push
jp
adc
add
or
jne
mov
sbb
and
(bad)
sbb
frstor
push
push
lahf
and
mov
call
jl
popf
loopne
lock
jge
cld
fwait
push
call
shl
xchg
and
in
xor
inc
call
inc
cmp
into
dec
xchg
(bad)
test
cmp
sub
imul
push
ins
retf
mov
jge
(bad)
leave
outs
aas
mov
sub
test
and
cdq
adc
stos
push
in
jb
sbb
mov
push
retf
call
clc
rcr
inc
or
out
push
mov
mov
call
xchg
dec
aad
pop
push
adc
or
sbb
int
int3
mov
xchg
dec
fs
adc
sahf
sbb
shl
pop
ret
cmc
dec
out
push
stc
mov
cs
rep
(bad)
cld
jbe
sar
push
arpl
push
or
cmps
je
inc
sub
(bad)
push
pop
and
aaa
inc
ins
xchg
jge
pop
mul
(bad)
(bad)
cmps
ror
ja
cmps
xchg
pushf
loop
xchg
mov
mov
hlt
push
shr
cs
dec
jmp
imul
sub
cmp
imul
adc
stos
in
mov
jge
scas
and
dec
add
sbb
sub
inc
repz
aam
inc
cmc
jle
jbe
mov
jp
(bad)
pop
cmp
mov
pop
mov
movs
ret
nop
mov
mov
dec
bound
scas
jo
dec
mov
push
sbb
push
or
inc
(bad)
div
dec
rcr
lea
inc
mov
or
leave
pop
jno
out
nop
or
ret
dec
cmps
mov
push
cli
inc
out
cmp
fwait
sbb
or
jecxz
dec
xor
adc
add
jle
sub
inc
dec
std
bound
mov
or
jg
fsub
lahf
add
lods
jl
scas
inc
sar
fsubr
aas
lock
mov
mov
mov
xor
(bad)
mov
daa
js
sbb
call
mov
sbb
jno
mov
ss
mov
pop
add
add
cs
aad
cmp
xor
add
movs
int3
std
push
jmp
sahf
adc
jmp
xor
outs
sub
dec
jbe
xchg
add
ss
jbe
cmps
scas
out
push
add
test
inc
lods
ret
cmp
pop
add
cs
cmp
mov
jg
fwait
aad
and
xchg
mov
dec
mov
xchg
jle
push
xchg
es
out
sbb
mov
(bad)
lods
or
lds
not
xchg
in
(bad)
xor
mov
cmps
sbb
repz
loopne
mov
push
in
stos
cmps
out
in
lds
pop
jno
cmp
leave
imul
push
mov
mov
add
sub
jb
cmps
sub
add
push
sbb
or
jo
and
lock
mov
stos
push
enter
xchg
lea
sbb
dec
out
push
mov
inc
lahf
stos
fwait
and
mov
adc
dec
fiadd
jbe
(bad)
sub
mov
mov
pop
std
xchg
lahf
cmp
mov
in
ret
push
inc
dec
push
and
movs
xlat
inc
add
rol
jp
les
mov
pop
scas
jle
movs
test
test
jmp
dec
sub
pop
sbb
dec
cmp
cmp
ret
mov
aas
sub
mov
mov
cmps
add
ror
mov
add
fadd
ror
in
ret
outs
rol
xchg
test
cmp
dec
sub
inc
xchg
adc
(bad)
imul
ins
xchg
ficomp
test
icebp
cmps
push
stos
test
xor
popf
or
sbb
adc
js
inc
jg
fwait
das
outs
pop
inc
sbb
push
inc
loop
jg
repz
(bad)
call
test
push
fst
into
cmps
mov
test
mov
jp
pop
push
push
ja
xor
cmp
sahf
add
jmp
mov
pop
nop
and
shl
pop
fcmovne
out
retf
xchg
jmp
repz
push
mov
mov
inc
enter
add
mov
pushf
cdq
or
(bad)
loop
inc
dec
cld
mov
mov
or
fwait
pop
xchg
(bad)
call
jbe
lods
aas
mov
cmp
leave
jp
cmps
sar
shr
mov
mov
daa
cmp
cs
push
(bad)
mov
push
and
inc
call
push
je
nop
mov
sub
(bad)
cli
mov
inc
push
shr
jnp
sbb
inc
arpl
ins
popa
scas
xchg
xchg
ds
jmp
push
out
add
xor
daa
cmps
mov
lods
cmp
sbb
inc
mov
adc
and
xchg
cmc
add
pop
out
mov
in
jmp
push
fdiv
push
add
adc
push
dec
mov
cmc
das
mov
dec
mov
xchg
pop
scas
daa
jo
cmp
jl
cmps
scas
fwait
mov
mov
cld
push
lods
xchg
pop
jno
adc
dec
mov
or
xchg
push
pop
aaa
add
mov
rol
xchg
addr16
cli
call
test
adc
int
add
test
jmp
call
xor
cmp
jns
shl
scas
test
jge
push
jb
adc
sub
leave
leave
jecxz
idiv
(bad)
popf
ret
and
movs
mov
pop
pop
out
xchg
or
cmps
mov
movs
add
push
ret
sub
sbb
iret
ins
and
data16
scas
lahf
jecxz
loope
fidiv
rol
out
inc
retf
cld
add
repnz
cmps
wrmsr
jge
cmps
stc
cmp
dec
popf
ins
add
std
inc
and
inc
pop
sbb
xor
dec
mov
nop
aam
pop
(bad)
fst
inc
xor
in
in
jle
lds
cwde
mov
mov
sub
mov
push
lea
cwde
test
rol
fnstcw
inc
pop
les
xchg
cld
adc
dec
ins
cwde
push
add
not
pop
rol
push
mov
xor
test
fwait
ins
mov
idiv
sub
in
fsub
jmp
mov
add
stc
mov
movs
jae
pop
pop
and
popf
lahf
cdq
das
xchg
sub
ins
inc
adc
les
push
shl
ins
sbb
or
push
dec
mov
add
xchg
dec
mov
inc
xchg
jne
cmps
(bad)
inc
sub
jecxz
mov
in
or
adc
sub
dec
mov
movs
adc
bound
ja
sbb
std
inc
sahf
retf
mov
retf
mov
jnp
sahf
add
rcl
unpckhps
pop
sahf
and
cwde
pop
faddp
sahf
lds
inc
adc
and
mov
rol
xchg
add
sbb
push
dec
jl
cwde
aam
push
ins
(bad)
mov
and
sub
or
es
mov
test
inc
mov
aam
sub
inc
mov
ret
inc
push
add
icebp
jge
push
ss
pusha
inc
add
push
dec
mov
jb
or
je
retf
leave
cdq
or
imul
stos
ds
call
scas
movs
int
lahf
imul
jmp
sar
or
mov
bound
test
xchg
iret
test
inc
ja
and
mov
clc
and
dec
(bad)
imul
jl
xchg
hlt
dec
(bad)
or
push
jo
das
fs
imul
in
gs
jle
sti
dec
jl
stos
xor
add
ja
shl
mov
jbe
test
aad
xchg
mov
dec
(bad)
lahf
jp
and
ret
or
sub
inc
(bad)
shr
xor
pop
and
dec
movs
cmp
push
div
sti
cli
mov
cmp
je
loop
ds
inc
mov
push
mov
xchg
fcomp
inc
inc
xor
jp
fwait
and
mov
dec
or
inc
push
pop
fisttp
aaa
gs
fld
out
pop
hlt
popa
push
addr16
bound
sbb
repz
mov
dec
mov
add
out
mov
jmp
dec
out
sbb
inc
fild
retf
pop
(bad)
out
int
dec
push
movs
cli
retf
addr16
imul
dec
mov
fwait
jmp
stos
nop
ss
pop
js
push
aaa
jno
mov
js
lods
mov
pop
mov
scas
repnz
or
hlt
sti
pop
aam
inc
imul
xchg
push
jae
test
adc
mov
add
mov
pop
add
sub
ja
sub
call
(bad)
add
push
cmp
imul
push
ret
ss
scas
scas
dec
aam
aad
(bad)
cmp
es
xchg
stos
add
pop
sbb
movs
jno
mov
pop
arpl
cmc
xor
cwde
arpl
sub
ja
dec
xor
cmc
adc
lods
dec
xor
cmps
and
movs
cs
ins
adc
jns
xor
mov
lahf
fstp
fbld
push
inc
ins
mov
xor
jnp
stc
push
mov
pop
(bad)
mov
call
shl
test
mov
or
mov
jmp
pop
shl
test
xchg
sub
dec
sbb
nop
mov
and
pop
int
je
xchg
stos
(bad)
push
fnstcw
mov
and
or
cwde
fld
(bad)
clc
les
ret
and
or
xor
xor
ret
jl
in
jge
out
je
sahf
aas
(bad)
adc
sub
arpl
in
sar
jmp
leave
xor
push
call
ret
mov
pusha
repnz
fiadd
cmp
retf
mov
adc
fwait
xchg
mov
mov
ins
xchg
cmp
mov
push
mov
lds
cmps
or
loop
jge
or
(bad)
lahf
pushf
(bad)
adc
mov
add
xchg
sub
cmps
leave
popf
xor
in
rcr
xchg
jmp
jnp
mov
mov
div
mov
jno
mov
loope
repnz
jne
lods
xor
cmps
jge
xor
fs
fcom
adc
add
in
cld
inc
inc
sub
xor
(bad)
adc
jo
push
mov
jmp
pop
jecxz
stos
mov
popf
ret
push
fnstsw
lahf
mov
dec
sbb
mov
dec
rcl
adc
lods
jns
or
xor
xor
or
call
hlt
ret
test
icebp
cmc
mov
loop
sbb
jge
rcr
xor
icebp
xchg
mov
aam
in
mov
xchg
jbe
dec
test
mov
js
test
pop
repnz
outs
mov
mov
add
imul
hlt
(bad)
mov
push
push
fwait
aaa
(bad)
cmp
call
es
pop
jl
popf
add
mov
cmp
(bad)
fstp
loop
ss
jne
fs
sub
gs
stos
lock
adc
jmp
xor
rcr
aas
stos
push
xor
aas
push
pop
jne
test
jno
rcl
(bad)
loopne
xlat
out
stc
dec
(bad)
rcr
xchg
inc
xchg
mov
inc
in
sti
xor
push
jle
outs
and
mov
add
add
xor
movs
aaa
pushf
test
sbb
popa
mov
popf
pushf
shr
jae
jmp
mov
mov
xchg
fcmovnb
mov
lahf
pusha
xchg
cmp
aam
adc
mov
js
jecxz
loop
sbb
call
mov
popf
dec
aad
lods
jb
push
or
or
repnz
pop
and
push
push
popa
test
nop
adc
xchg
xlat
push
inc
push
push
in
aaa
pusha
pop
mov
retf
and
xchg
aad
dec
jb
enter
sub
jne
fsub
sub
popf
mov
movs
mov
rcl
mov
mov
sub
mov
(bad)
aad
pop
xor
jno
dec
loop
push
xchg
mov
push
jae
mov
mov
ins
dec
aas
gs
dec
xchg
mov
pop
add
pop
scas
push
push
cli
repnz
(bad)
call
fucomp
imul
mov
add
ret
mov
mov
dec
jnp
and
push
loopne
shr
and
jb
ror
pushf
mov
or
push
pop
xchg
mov
jnp
jmp
fs
out
jge
mov
fprem
enter
push
dec
and
mov
test
jecxz
mov
push
aam
mov
add
push
inc
mul
inc
aad
scas
es
pusha
mov
icebp
mov
jae
adc
retf
test
mov
sub
or
mov
sbb
daa
repz
scas
ror
cmp
jg
retf
xchg
sub
call
lods
push
call
ins
aas
sar
jo
loopne
icebp
mov
jl
cmc
dec
xor
mov
and
test
clc
xchg
mov
call
jnp
add
xchg
ret
jnp
add
sub
xor
dec
mov
es
int3
inc
ss
movs
sahf
sbb
setb
test
ret
adc
inc
inc
div
dec
mov
jl
inc
xchg
or
not
sbb
or
push
pop
rcr
cmps
jmp
or
mov
fidivr
clc
mov
pop
adc
push
bound
addr16
fwait
scas
jp
add
add
inc
push
sbb
aaa
xchg
cwde
outs
pop
and
push
aad
jb
sub
inc
cs
loope
into
outs
in
push
stos
icebp
js
jno
enter
(bad)
cmp
inc
cmp
cwde
and
repnz
cmp
mov
mov
lahf
inc
rcl
ins
or
lea
ror
aad
push
ja
mov
inc
shl
out
mov
pop
imul
(bad)
in
or
add
add
sbb
xor
and
fidivr
push
inc
call
outs
pushf
or
cmps
test
pop
fcmovb
mov
call
mov
cli
movs
pop
sbb
xor
sbb
into
out
loopne
fcomp
ficomp
jmp
mov
ret
aaa
xchg
rol
js
sbb
pop
xchg
mov
(bad)
gs
sub
or
mov
je
sbb
pop
and
pushf
(bad)
retf
(bad)
shl
or
and
push
cmp
jae
rol
out
adc
xchg
ja
fimul
or
retf
fisub
jmp
push
jno
mov
push
fcmovbe
pop
cmps
mov
int3
aaa
pop
push
int3
mov
pop
out
mov
xchg
shl
mov
pop
loope
sbb
aam
cli
jg
movs
sar
push
push
and
ffreep
push
(bad)
lahf
in
inc
push
imul
or
xchg
int3
stc
ror
fcmovu
inc
cld
arpl
faddp
xlat
xchg
mov
pushf
mov
or
ds
jns
adc
out
pop
lds
int3
addr16
test
js
mov
(bad)
mov
imul
loope
push
mov
pop
jmp
mov
or
fisttp
ror
lock
not
cli
xchg
dec
xor
mov
adc
jno
cmp
mov
pop
inc
mov
aad
retf
pop
and
mov
mov
call
call
lock
xor
push
xchg
and
test
(bad)
mov
pop
pushf
sub
push
fcom
test
bnd
ins
jg
int
pop
aad
sbb
mov
in
xor
scas
sbb
test
mov
(bad)
stos
loopne
aas
ins
fmul
adc
mov
fwait
pop
es
jo
out
pop
(bad)
adc
(bad)
lods
je
mov
scas
inc
out
jno
mov
sub
pop
inc
push
or
hlt
and
data16
mov
pop
dec
cmps
xchg
fdiv
cs
and
into
call
out
pop
sbb
pop
enter
imul
clc
rol
sub
aas
imul
dec
cmp
mov
mov
scas
push
dec
add
mov
scas
mov
fmul
lock
push
mov
shl
pop
cmp
fwait
or
cmps
mov
mov
aas
in
mov
fdiv
sub
adc
adc
(bad)
push
fwait
pop
pop
xor
rcr
stos
add
push
aad
loop
jmp
push
ss
mov
sub
outs
adc
outs
cmp
jno
dec
jmp
pushf
pop
cmp
xor
jecxz
cli
movs
(bad)
fld
add
popf
jp
addr16
dec
dec
or
add
xor
dec
jbe
sub
and
and
mov
repz
pop
(bad)
rol
mov
or
retf
daa
fld
es
jge
xor
pushf
jnp
jl
stc
jmp
lds
dec
sub
push
rcr
nop
bswap
inc
aas
fiadd
jmp
test
rcr
in
clc
inc
cmps
jb
loop
shl
sbb
sub
sub
ins
(bad)
inc
jmp
in
dec
lock
mov
test
js
retf
sbb
mov
sbb
sti
xchg
pushf
imul
enter
xchg
int
and
arpl
leave
push
mov
xlat
std
add
add
sbb
jecxz
inc
movs
stos
xchg
test
mov
sbb
outs
sets
add
pop
add
jge
clc
sahf
fcmovne
hlt
xor
les
mov
sbb
mov
outs
jns
push
xlat
or
ret
rol
arpl
or
test
mov
jo
xchg
nop
sbb
sub
lahf
xor
pop
jecxz
shr
in
adc
add
test
in
ret
lahf
out
mov
adc
pop
and
outs
xlat
js
mov
push
mov
cwde
int3
out
push
lock
pop
inc
movs
int3
imul
lock
test
pop
sub
add
movs
adc
push
(bad)
test
in
ss
fild
std
xor
mov
leave
lea
xchg
push
ins
pop
or
lea
push
aad
int
mov
adc
jns
outs
lahf
sub
loope
cmp
enter
mov
and
jg
(bad)
push
lock
enter
inc
arpl
xchg
sbb
mov
pushf
iret
inc
adc
sbb
push
loope
leave
push
shl
fcomp
and
mov
ins
lea
sti
dec
stos
mov
sbb
add
mov
sbb
stos
(bad)
mov
mov
sti
jb
ins
push
xor
outs
add
out
push
retf
fimul
pop
sbb
mov
xchg
out
add
pusha
ins
in
imul
xchg
cmp
nop
jecxz
ret
int3
fnstsw
movs
jb
icebp
sbb
sub
xchg
sub
bound
outs
imul
pop
scas
stos
(bad)
push
xchg
or
ret
in
call
and
ja
je
cdq
and
in
out
xchg
movd
arpl
mov
push
shr
push
xchg
xchg
add
push
mov
repz
sbb
mov
imul
inc
inc
pop
jl
ins
lds
(bad)
dec
dec
neg
jae
jae
mov
sbb
mov
nop
cli
inc
jns
push
mov
adc
xchg
xor
outs
jmp
aad
ret
jns
pusha
aaa
cmp
std
sub
es
dec
jb
xchg
xor
mov
popa
popf
test
and
mov
pop
inc
xor
fcom
(bad)
cmps
mov
fstp
xor
sbb
out
pop
dec
sbb
jmp
jecxz
xchg
out
sbb
es
retf
fnstsw
add
loopne
dec
lea
ror
xchg
push
leave
jecxz
pop
dec
mov
retf
mov
popf
xchg
adc
add
fisub
outs
cmp
pop
fcmovnu
std
jmp
mov
mov
mov
inc
xor
inc
jbe
push
xor
adc
sbb
adc
int
lds
mov
les
push
cmps
(bad)
js
addr16
sub
mov
cmp
or
addr16
and
jae
xchg
loope
paddusw
aas
cmps
adc
pusha
inc
pop
lock
test
fcmovnu
leave
add
shl
cmp
out
aam
add
adc
int3
sbb
icebp
pop
push
mov
rcl
or
ffreep
mov
sbb
mov
pop
push
int3
aam
btr
or
fwait
pushf
mov
mov
mov
push
sar
mov
add
cwde
mov
push
shr
adc
ret
adc
out
xor
adc
add
mov
ud2
xor
sub
iret
ret
xor
jle
push
movs
push
mov
xor
ffreep
xchg
fisub
xchg
adc
addr16
pop
fbstp
call
fcmovnb
sub
mov
(bad)
std
mov
je
movs
clc
ret
mov
sbb
xchg
cs
mov
jecxz
and
(bad)
repnz
das
test
dec
cmp
push
and
sbb
sbb
mov
dec
sbb
(bad)
xor
mov
(bad)
fnstenv
in
cmps
xlat
scas
in
fidivr
shl
sbb
push
ss
push
rol
and
hlt
inc
leave
jbe
arpl
jno
(bad)
nop
adc
popf
pop
shr
pop
xor
inc
hlt
sti
add
mov
loop
pop
nop
and
adc
mov
pusha
xchg
xchg
mov
mov
addr16
jge
(bad)
xchg
mov
add
std
loop
sti
dec
call
pop
(bad)
adc
jmp
sub
pop
jo
push
test
xor
push
mov
jnp
popf
xor
int3
mov
pushf
add
shr
pushf
or
dec
xor
das
nop
xchg
jp
adc
(bad)
std
pop
stos
shl
scas
mov
mov
addr16
pop
or
shl
enter
call
add
enter
push
add
xchg
inc
cmp
ds
jmp
mov
or
and
pop
rol
inc
xor
leave
lock
sub
bound
sbb
movs
es
retf
addr16
std
mov
sub
out
pop
leave
add
(bad)
daa
(bad)
sub
jo
xlat
jle
sahf
cmps
pushf
out
in
xor
mov
inc
jae
push
pop
repnz
xchg
and
sbb
stc
ds
or
xor
out
in
es
pop
mov
out
adc
test
jmp
cmc
dec
jl
jmp
pop
out
xor
add
stos
cmp
pop
(bad)
shr
push
je
add
mov
inc
mov
and
push
pop
mov
in
ret
retf
ins
stc
leave
shr
pop
adc
sbb
outs
add
pop
dec
inc
push
jp
adc
rol
call
je
popa
mov
leave
mov
les
out
jne
loop
fpatan
add
lahf
jbe
int
and
mov
int
cmp
sbb
add
cmp
hlt
vdivsd
(bad)
jp
gs
pop
inc
xchg
loopne
fldenv
mov
mov
loopne
or
fwait
scas
jle
dec
mov
xchg
retf
xchg
in
sti
pop
adc
cmps
ret
inc
lods
add
mov
dec
xor
addr16
xchg
push
in
mov
or
add
dec
inc
inc
fwait
add
jno
add
sbb
dec
fwait
and
scas
jae
iret
rol
adc
lods
mov
(bad)
hlt
movs
addr16
inc
(bad)
mov
mov
hlt
imul
dec
hlt
test
jno
fstp
movs
jbe
inc
ret
retf
pusha
test
sahf
cwde
mov
movs
(bad)
aam
xor
daa
pmaxsw
jle
rcr
aaa
mov
sahf
repz
in
cmp
bound
les
adc
test
xchg
leave
outs
pop
ss
clc
fisttp
movs
jne
jno
pop
imul
add
loopne
inc
xor
pop
out
std
or
arpl
adc
dec
repnz
sbb
mov
sbb
mov
mov
xchg
jle
aaa
cmp
inc
fiadd
add
or
cmp
test
lods
mov
adc
stos
std
iret
mov
pop
or
push
stos
add
add
mov
inc
sbb
int
push
add
(bad)
mov
mov
and
mov
pop
pop
retf
in
enter
add
mov
fdiv
inc
stos
icebp
pop
mov
fisubr
arpl
ss
leave
mov
sub
not
xlat
sbb
inc
fisttp
adc
push
jbe
and
pop
dec
sub
into
mov
xchg
pop
jae
jl
gs
mov
jmp
test
stos
pop
and
nop
and
adc
xor
sub
sbb
sahf
push
adc
repz
sbb
and
or
fcomi
push
loope
lahf
or
loop
xor
jl
cmp
mov
mov
pop
stc
cmp
lock
dec
in
aam
std
loop
aad
iret
loope
(bad)
cld
add
cmp
jl
add
out
retf
(bad)
(bad)
adc
pop
test
jg
cmp
push
mov
adc
mov
or
pop
mov
pusha
or
adc
pushf
in
hlt
push
inc
cmp
nop
div
ja
add
(bad)
jecxz
push
adc
cwde
ret
mov
bound
div
inc
jg
dec
jbe
dec
frstor
push
jns
cmp
ins
out
adc
mov
js
sub
scas
lahf
add
sbb
sub
sar
enter
outs
sahf
movs
aad
fidivr
imul
shl
mov
pop
(bad)
not
mov
enter
mov
mov
out
mul
in
lahf
js
arpl
fcom
ja
ins
movd
test
shr
jecxz
or
xchg
mov
or
cwde
mov
nop
in
mov
in
pop
pop
fucomip
pop
int3
xor
mov
jbe
and
leave
cmp
sub
and
push
call
leave
sub
mov
xor
push
loop
cwde
adc
stos
mov
les
repz
sub
div
push
aad
in
dec
jnp
loopne
add
adc
sar
(bad)
xor
ret
cmp
ins
adc
sub
and
addr16
int
in
inc
shr
cmp
dec
inc
call
aad
cmp
test
in
ins
sti
lods
imul
out
xor
fnsave
inc
int
dec
cvtps2pi
rol
mov
mov
pushf
popa
jg
mov
in
xchg
out
lds
sbb
iret
add
add
inc
test
lock
mov
out
jns
jle
push
xchg
jge
inc
inc
sbb
xor
out
jle
jbe
push
jmp
sbb
shr
push
dec
push
cmp
and
inc
sub
sbb
call
adc
xchg
fs
shl
add
dec
dec
call
out
xlat
dec
jp
or
jne
jne
push
clc
jno
jnp
dec
or
pop
ret
dec
mov
mov
icebp
call
mov
jg
ins
sub
adc
aas
jne
adc
mov
rcl
and
bound
ficomp
add
sub
icebp
into
out
fistp
inc
test
mov
mov
jnp
add
or
add
rol
ins
mov
(bad)
icebp
adc
sahf
daa
jmp
push
adc
scas
adc
jnp
test
pop
sbb
in
jnp
imul
lea
mov
pop
cmp
ret
movs
mov
push
jge
or
lock
(bad)
addr16
inc
int3
(bad)
lock
cmp
in
aam
push
(bad)
das
jmp
popf
and
scas
mov
mov
je
jae
in
loop
leave
out
xchg
inc
add
sti
in
mov
xchg
xor
and
fsubr
repnz
retf
dec
data16
and
xchg
(bad)
dec
das
mov
jbe
dec
movs
lahf
sti
mov
pop
mov
rcr
cmp
repz
xchg
stos
ror
cmps
push
adc
mov
ret
push
add
pop
je
bound
pusha
mov
scas
jnp
ss
int3
push
sbb
mov
fcom
push
sbb
inc
arpl
jno
loope
lods
lds
push
push
add
xlat
mov
sub
adc
sub
fstp
inc
jns
jnp
ss
dec
sub
cmp
sbb
xor
push
push
iret
aad
popf
push
shl
outs
push
ds
dec
sub
(bad)
rcr
xor
mov
sahf
cmps
into
fwait
xlat
mov
(bad)
jb
fs
sub
push
sub
and
sub
aaa
jmp
mov
pop
mov
sbb
test
inc
sub
into
aas
adc
xchg
fstp
(bad)
mov
push
sbb
imul
mov
sti
ds
push
sbb
je
fist
pop
push
scas
pop
test
retf
xchg
lods
xor
ret
or
in
jmp
rol
setg
ja
jnp
ja
movntq
sub
jp
xchg
adc
sbb
pop
dec
cmp
jb
mov
or
(bad)
outs
shr
xor
mov
aam
addr16
mov
fs
out
xor
out
add
sub
scas
mov
adc
pusha
(bad)
and
retf
dec
pop
inc
sbb
js
add
stc
fisttp
cli
and
aad
mov
repnz
jb
ds
xchg
pop
push
(bad)
stos
dec
lahf
cmc
inc
adc
retf
pop
fistp
cmp
or
cmp
movs
jmp
mov
dec
mov
sub
jno
into
daa
jbe
nop
inc
cmps
and
ins
loopne
mov
repz
sbb
xor
mov
fmul
call
adc
(bad)
inc
jecxz
test
daa
and
lds
out
je
dec
je
mov
mov
cmp
sub
aam
dec
mov
xor
mov
pop
mov
leave
es
outs
enter
pop
es
or
mov
in
mov
(bad)
jb
or
cmp
jns
jge
das
nop
in
xchg
test
cld
out
stc
mov
shl
mov
fwait
cmp
add
add
daa
retf
inc
mov
fsubr
sbb
ja
dec
mov
data16
push
adc
jl
loope
(bad)
mov
nop
js
ins
pop
pop
cwde
mov
aad
push
loop
mov
fxtract
and
fst
stc
scas
xor
movs
mov
repz
add
push
mov
fild
cmp
shr
adc
mov
imul
addr16
jns
ja
mov
sbb
and
jo
jno
scas
stos
int
ror
mov
rol
ficomp
or
mov
sub
out
jne
cwde
lea
pop
cmps
scas
hlt
add
mov
movs
jecxz
jb
nop
jl
js
xor
pusha
shl
add
dec
inc
std
sti
punpcklbw
addr16
sahf
push
dec
test
sbb
and
xchg
dec
and
pop
inc
or
pushf
std
mov
push
out
or
enter
xor
mov
retf
cmp
sub
(bad)
test
out
imul
aaa
sub
pop
ret
retf
pop
pop
xchg
stos
lds
push
stos
aaa
cmp
aad
cmp
mov
test
inc
mov
iret
jnp
shl
int3
shl
ret
loop
neg
mov
mov
pop
mov
sub
cwde
fcom
xchg
xchg
repz
out
mov
sbb
add
jge
cmp
(bad)
mov
sbb
jo
iret
inc
inc
out
fild
fadd
mov
and
imul
xlat
retf
add
sar
cmp
sub
jno
cmp
xchg
stc
not
imul
mov
jmp
jbe
dec
push
(bad)
adc
(bad)
(bad)
mov
mov
aam
icebp
out
mov
inc
arpl
pop
repz
push
sbb
mov
pusha
mov
icebp
mov
inc
xor
mov
daa
sub
pop
push
ds
jp
not
mov
sub
push
adc
shr
and
ficom
fsub
mov
mov
mov
lods
fld
fdiv
fidivr
enter
jae
cmp
retf
mov
int3
gs
test
sub
xor
push
jg
xchg
sbb
sub
dec
xchg
iret
fidiv
xor
sub
or
or
lahf
ret
fiadd
xor
push
cmp
and
and
inc
sbb
lahf
pop
inc
pop
ss
cmp
cmp
mov
scas
sahf
in
mov
dec
pusha
movs
add
iret
in
mov
div
sahf
add
test
cmps
(bad)
fcomp
cmp
xchg
jno
movs
jecxz
mov
popf
dec
les
shl
jmp
repnz
xlat
out
mov
push
aad
mov
mov
dec
cmp
(bad)
pop
lods
mov
cld
push
xchg
pop
sub
ins
dec
aad
add
push
jl
push
pop
xor
sar
clc
dec
ret
sti
repz
out
das
scas
jns
shl
jmp
pop
scas
adc
dec
retf
ret
jle
ins
aas
xchg
or
fdiv
xchg
pushf
push
xor
mov
setb
cmp
mov
pusha
xchg
or
repz
fdivr
dec
(bad)
xor
sbb
cmp
pop
xor
jbe
sub
in
sbb
test
adc
jns
fisubr
mov
aas
not
xor
sub
mov
mov
ins
loopne
in
fidiv
sbb
in
popa
cli
repz
repz
jne
adc
mov
sahf
inc
push
add
inc
adc
inc
das
call
cmp
mov
add
out
adc
sbb
push
pop
imul
mov
or
int3
inc
cmp
pop
clc
sub
loopne
cmp
pusha
lea
jb
out
test
cmp
pop
mov
arpl
nop
daa
test
jne
or
adc
xchg
lods
dec
out
dec
sbb
into
scas
pop
into
vmwrite
jne
cli
jae
or
push
(bad)
in
dec
cmp
and
add
das
sub
pop
ds
imul
nop
retf
(bad)
stc
lds
outs
bound
(bad)
shr
sbb
mov
stos
iret
loope
in
or
test
stc
ds
push
in
imul
iret
(bad)
xor
mov
(bad)
xor
sbb
adc
mov
xchg
cmp
int3
and
imul
stc
rol
fwait
in
inc
dec
mov
xchg
jg
cmps
xchg
adc
test
and
lds
adc
mov
fbstp
push
jge
jmp
push
hlt
and
mov
enter
and
hlt
daa
pop
mov
cmps
pop
in
xlat
test
pop
retf
clc
push
xor
mov
(bad)
mov
cwde
mov
and
repz
out
out
jne
(bad)
aam
mov
jmp
and
add
out
push
cmp
retf
lea
pop
jp
dec
dec
rcl
cmp
xchg
dec
cmp
popa
daa
xor
icebp
mov
inc
jp
das
loope
add
inc
scas
mov
daa
cmp
enter
xchg
xchg
mov
and
das
adc
shl
fwait
sub
out
loopne
popa
test
int3
cmp
mov
nop
mov
mov
ins
clc
pop
daa
dec
add
and
add
lahf
jae
lods
enter
data16
dec
cmp
push
cmc
push
dec
dec
mov
push
dec
jp
(bad)
into
imul
inc
push
rep
jg
push
push
and
and
mov
dec
retf
add
pop
outs
push
les
(bad)
and
push
(bad)
jl
sahf
jp
repnz
stc
cld
out
cdq
dec
jae
dec
and
and
push
pusha
into
inc
pop
push
mov
dec
and
cmps
sbb
or
mov
jmp
call
daa
dec
inc
cdq
adc
pop
cmp
push
dec
jns
xchg
add
inc
fiadd
adc
xor
popf
xor
in
imul
cmp
out
inc
stos
cdq
add
daa
dec
fisub
xor
ja
mov
call
push
push
pop
lods
cmps
mov
pop
and
sub
mov
sar
mov
jmp
jmp
call
mov
pop
loope
mov
sbb
jp
jb
popa
stc
jnp
pop
scas
jo
fwait
fwait
inc
push
jo
add
xchg
adc
(bad)
mov
or
adc
clc
ret
cmp
adc
movs
xor
(bad)
out
sub
mov
sbb
xchg
mov
in
mov
jb
jge
xor
outs
pop
or
sbb
pop
push
aas
push
in
(bad)
jl
repnz
lds
jge
cmp
in
in
call
xor
cdq
adc
les
pop
addr16
sub
inc
jmp
dec
sub
cwde
in
xchg
rol
dec
mov
jg
out
jg
adc
inc
xchg
cmps
lods
imul
ret
mov
call
aam
xor
cmps
pop
add
sbb
sub
xor
fiadd
imul
mov
(bad)
cmp
sbb
xor
inc
jl
sbb
test
stos
mov
jg
xchg
arpl
aas
jp
inc
sbb
or
pop
pushf
mov
dec
push
mov
xlat
rcpps
popf
repnz
jbe
in
cmp
lahf
inc
push
mov
aas
push
enter
std
sbb
pop
and
(bad)
push
sbb
clc
fxam
inc
xor
popf
mov
call
and
adc
in
pop
imul
push
sub
sub
mov
dec
sub
cmp
inc
imul
mov
and
add
jo
pop
cwde
adc
inc
add
cs
inc
cmp
sbb
cli
fnsave
je
xor
pop
outs
out
cmp
push
inc
pop
sub
test
scas
jae
jns
add
cmp
or
jp
test
sub
push
es
hlt
xor
mov
daa
cdq
je
dec
repz
adc
xor
aam
inc
jl
add
imul
pop
fisttp
movs
inc
jns
cmps
adc
dec
pop
dec
xor
or
push
jl
mov
mov
pop
(bad)
cmp
into
icebp
(bad)
cmp
xor
jmp
outs
add
sbb
xor
jecxz
mov
sahf
sahf
xchg
cmp
cmp
adc
loopne
adc
cmp
jno
das
sbb
bound
in
(bad)
aam
popa
sbb
xchg
das
lods
scas
mov
and
sub
outs
hlt
sahf
inc
add
das
cmp
scas
mov
bound
inc
sti
sbb
scas
jge
aad
ins
pop
mov
and
test
rcl
(bad)
rol
xchg
movs
sbb
sbb
dec
outs
int3
and
mov
and
mov
into
pop
push
mov
sbb
int3
ds
iret
sbb
pop
jmp
or
sbb
in
(bad)
gs
(bad)
icebp
jmp
pop
neg
popf
push
ja
into
jmp
inc
pop
inc
sar
pop
dec
ins
movs
(bad)
mov
jbe
add
push
aad
(bad)
in
into
xor
fwait
inc
repnz
jb
scas
inc
inc
mov
sbb
adc
outs
fwait
pop
mov
aas
or
pop
and
xchg
int3
mov
cmc
push
inc
jmp
movs
popf
sub
loop
mov
xchg
mov
test
adc
sahf
or
aam
sbb
push
mov
dec
xchg
out
dec
or
test
test
pop
mov
repnz
in
sti
push
pop
pop
add
jecxz
adc
cld
push
jb
xchg
push
mov
inc
(bad)
rcl
ficomp
xor
cmps
retf
or
and
push
xor
pop
fsubr
and
scas
sahf
cmc
inc
jb
gs
mov
dec
push
icebp
jae
icebp
xlat
xor
mov
xor
cmc
out
into
mov
xor
and
dec
inc
jo
cmp
fcomi
jbe
out
cmp
mov
call
pop
and
adc
mov
add
icebp
pop
and
inc
add
jge
fistp
pusha
jmp
sar
scas
dec
pusha
push
call
dec
fidiv
and
data16
leave
test
inc
xor
push
dec
addr16
popf
xchg
jmp
imul
xor
(bad)
(bad)
movs
es
gs
and
sbb
das
inc
imul
rol
(bad)
xchg
inc
dec
ret
fisttp
add
mov
cmp
cmps
scas
sub
rcl
lods
les
arpl
imul
dec
int
jmp
pusha
mov
adc
addr16
loop
fs
int3
(bad)
jmp
cwde
popa
in
push
or
push
cs
iret
arpl
pmullw
xchg
sub
jg
mov
xchg
in
mov
and
icebp
cli
mov
jg
jp
or
push
mov
addr16
mov
sbb
mov
sub
out
xchg
jle
cmp
sbb
push
lahf
movntq
ins
iret
mov
jp
pop
xchg
aad
cmps
xchg
int3
inc
mov
scas
outs
mov
pushf
jnp
popf
push
test
outs
pop
pop
fbstp
les
retf
dec
add
mov
mov
push
sbb
mov
(bad)
stos
jl
jne
inc
mov
xor
into
movs
inc
enter
clc
dec
inc
or
ins
mov
movs
mov
mov
push
xor
jge
stos
xor
jg
rcr
pop
dec
dec
jle
jg
cs
clc
mov
int
loop
and
ja
jge
leave
pushf
pusha
shl
mov
dec
retf
add
scas
int3
pop
xchg
ret
imul
cmp
jmp
imul
push
xchg
mov
lock
gs
mov
mov
scas
mov
gs
and
or
and
(bad)
in
in
lods
mov
mov
cmp
sub
repz
dec
je
pop
scas
xchg
jb
into
sti
adc
cdq
mov
inc
cmp
jle
jg
xor
inc
mov
jne
jle
cs
sub
lods
gs
(bad)
cmp
xchg
lds
gs
sub
mov
xor
(bad)
ins
cli
jg
and
call
sub
or
lock
dec
fnstenv
inc
or
and
test
shl
data16
ror
sbb
icebp
test
xchg
mov
push
dec
push
enter
inc
scas
stos
and
sub
jge
jp
and
sbb
dec
in
jmp
movs
push
data16
int3
outs
jl
les
je
pop
lods
jecxz
jno
loopne
lahf
pop
bnd
scas
inc
std
ret
mov
jo
sbb
push
cli
in
(bad)
pop
inc
xchg
stc
nop
movs
imul
aaa
imul
das
sar
aad
inc
add
xor
(bad)
sti
fwait
sar
rol
sbb
push
inc
xor
loope
icebp
rol
sti
cmps
mov
mov
out
frstor
mov
push
daa
ret
rcl
mov
xlat
lahf
or
or
sub
dec
aam
jl
jle
dec
call
clc
and
xlat
frstor
in
mul
movs
sti
clc
iret
lods
out
jb
mov
ins
and
and
enter
dec
imul
or
(bad)
movs
lods
xchg
in
inc
bound
sbb
dec
push
rcl
aaa
jl
pop
or
clc
push
add
dec
mov
clc
push
retf
stc
push
jle
adc
ret
sbb
fxch
popa
lds
hlt
loopne
fstp
sbb
xchg
pop
repnz
adc
fs
shl
fmul
xchg
mov
or
lea
into
pop
pop
repnz
adc
sub
adc
adc
neg
aam
(bad)
dec
pushf
rcr
dec
push
cmp
sbb
push
ret
jp
(bad)
xchg
frstor
cmc
jb
repnz
loope
pop
jge
cwde
je
sti
sub
pop
loop
inc
pop
xor
xchg
xchg
retf
maxps
inc
mov
jns
imul
into
xor
dec
xchg
les
cdq
fild
ror
xor
(bad)
popf
mov
(bad)
retf
inc
sub
mov
jg
jle
mov
dec
rol
cmp
sub
repnz
int
and
jnp
inc
pop
nop
test
jbe
setl
xchg
jmp
mov
push
rol
mov
arpl
add
or
dec
mov
xchg
jp
mov
ficomp
lock
push
stos
test
mov
xor
dec
ret
push
fsubrp
(bad)
jne
ja
pop
pop
mov
stos
mov
mov
xchg
cwde
ret
pop
not
popa
(bad)
inc
mov
fild
imul
dec
pause
push
xor
popa
loop
fdiv
arpl
xor
xchg
sub
movs
loopne
jbe
mov
stos
pushf
inc
jno
jg
cmp
inc
das
mov
mov
fdivr
pop
sub
icebp
mov
adc
inc
imul
mov
fwait
in
jno
rol
adc
mov
mov
mov
xchg
sub
mov
retfw
call
sub
retf
lea
push
lea
imul
(bad)
icebp
jnp
sbb
pusha
fadd
jae
mov
popa
mov
rol
dec
les
ret
sub
inc
pushf
mov
cmps
xor
inc
pushf
gs
jae
dec
cmp
or
dec
call
ret
ins
js
cmp
pop
(bad)
mov
or
xchg
mov
and
xor
dec
push
lea
xchg
push
sbb
jge
cdq
adc
add
mov
fwait
(bad)
aaa
sbb
mov
scas
xchg
inc
push
or
(bad)
retf
(bad)
scas
mov
test
xchg
push
jle
out
adc
xor
dec
call
push
xor
and
push
inc
mov
or
sar
sub
jmp
call
push
mov
jmp
ss
dec
cld
(bad)
fcom
icebp
sub
xor
(bad)
ret
cmp
sub
jg
iret
(bad)
jmp
addr16
je
cs
jl
push
shr
std
pop
popa
jnp
cld
mov
out
inc
es
out
jl
or
mov
push
pop
iret
mov
loop
jae
dec
pop
pop
mov
sub
mov
or
movs
cs
jg
cmp
mov
fwait
and
fs
lock
aaa
and
mov
dec
dec
sub
jle
je
rol
jl
imul
push
jbe
pop
adc
je
nop
aaa
lods
cmp
dec
sub
imul
enter
jns
pop
neg
out
push
bound
cdq
or
lock
cmp
xchg
sub
call
mov
in
(bad)
shl
jmp
icebp
sbb
and
pop
mov
dec
cmps
sub
mov
and
push
div
ret
jg
out
mov
out
add
pushf
xchg
test
iret
mov
push
aaa
sub
or
or
es
jp
fisttp
cmp
(bad)
push
fisttp
pop
fisubr
test
fmulp
cwde
movs
retf
aad
jmp
imul
dec
sbb
xchg
sbb
push
ss
fnstenv
xchg
cmps
dec
sar
push
icebp
and
aas
mov
pop
sbb
cmc
pop
or
dec
sbb
or
movs
test
daa
pop
(bad)
jg
mov
pop
mov
mov
jmp
dec
mov
mov
mov
cwde
(bad)
mov
add
sbb
or
popa
repz
push
inc
mov
sbb
jecxz
jbe
mov
jb
and
jbe
and
loop
mov
add
mov
sbb
test
ret
mov
xchg
rol
call
nop
pop
cmc
aam
jae
mov
scas
sahf
stos
xor
cmp
mov
fld
sbb
out
pop
jne
ds
test
and
enter
mov
and
inc
addr16
xor
inc
or
xchg
ficomp
movs
or
dec
cdq
inc
mov
stos
add
pop
push
or
(bad)
pop
cld
movs
mov
add
pop
pop
(bad)
stc
bound
cli
mov
pop
cdq
cmp
icebp
jle
ror
dec
adc
add
(bad)
jnp
dec
jmp
repz
add
xor
xchg
mov
lahf
pop
mov
mov
jmp
or
cmp
je
dec
push
icebp
and
xchg
cli
adc
mov
jo
sub
(bad)
fwait
sub
aam
lea
mov
dec
iret
dec
jne
dec
loop
(bad)
mov
cli
xchg
ins
ds
mov
popa
mov
xlat
fmul
mov
test
xor
test
fwait
arpl
bound
inc
pop
xor
pop
xor
fiadd
les
sti
outs
daa
aas
cmps
sub
push
retf
mov
popf
out
fiadd
and
out
sub
sbb
loopne
rcr
xchg
sbb
mov
mov
outs
mov
mov
mov
pop
mov
dec
icebp
mov
pop
xchg
jno
mov
cmp
movs
mov
fistp
ds
push
in
popa
xchg
pop
jb
and
dec
xor
dec
xor
pop
mov
ds
pop
cmc
arpl
or
xchg
push
pop
popa
push
push
xchg
pop
pop
out
dec
out
js
fisttp
call
fldenv
int
mov
aaa
(bad)
iret
cdq
fcom
je
shl
jl
sbb
imul
pop
adc
sbb
rdtsc
mov
add
leave
lods
mov
test
cmp
outs
fwait
je
stos
jb
pusha
ret
popa
inc
xchg
ss
(bad)
jne
cmp
fsubr
fldcw
mov
jbe
aam
loope
sahf
pop
nop
icebp
les
into
jmp
shl
test
movs
cwde
jbe
test
push
mov
xor
lahf
loop
mov
rol
sbb
adc
cld
jle
adc
(bad)
stos
(bad)
pop
sahf
mov
fisub
mul
sbb
aam
mov
mov
push
pop
adc
dec
repnz
jg
xlat
push
adc
das
stc
aam
(bad)
mov
scas
dec
ss
repnz
mov
adc
movs
ret
(bad)
es
arpl
xor
call
pop
loope
in
not
jle
iret
mov
jg
int3
rcl
adc
or
pop
ret
call
jnp
pushf
daa
mov
loope
ins
ss
xchg
inc
xchg
mov
pop
repnz
jns
add
add
rcr
shrd
int
stos
call
jmp
(bad)
fwait
dec
add
ror
cdq
ss
loope
xchg
mov
mov
(bad)
xor
cmp
ja
das
fwait
popf
cli
test
pop
dec
xchg
xchg
or
or
aam
push
and
sbb
ret
(bad)
dec
mov
mov
sub
paddsw
jne
mov
fwait
sub
test
enter
aaa
mov
icebp
popf
clc
fwait
inc
jmp
ds
fdiv
out
add
cwde
pop
lds
cmc
cdq
stos
mov
inc
or
sub
fstp
cld
push
push
(bad)
jne
push
cdq
test
mov
push
outs
popf
movs
sti
sub
and
cwde
mov
in
or
push
xchg
cmp
mov
scas
cmp
xchg
aaa
addr16
mov
in
retf
(bad)
retf
mov
adc
xor
fcom
shr
or
mov
scas
add
mov
mov
clc
push
(bad)
pusha
imul
aaa
jp
mov
rcr
push
(bad)
jmp
sbb
jg
inc
int
jle
jge
mov
inc
addr16
aam
clc
mov
into
add
call
jne
test
retf
adc
or
call
out
js
dec
addr16
shr
jl
xchg
jecxz
pop
inc
xchg
sbb
cmp
sbb
xchg
rcr
stc
stos
adc
and
cwde
fdiv
push
(bad)
es
lods
mov
lea
lea
test
cld
test
sbb
mov
cld
div
lods
test
scas
sbb
icebp
dec
xchg
mov
in
sbb
jb
pop
sub
dec
push
xlat
sbb
test
movs
xor
cmps
xchg
mov
and
out
pop
or
jb
fisttp
mov
in
pop
jp
ffreep
or
sub
aad
jg
pop
rcr
push
jmp
imul
loope
sub
xor
jnp
mov
or
cli
rcl
dec
mov
sahf
pop
cmp
xchg
and
pop
call
cmp
test
fiadd
outs
push
and
inc
pop
adc
test
(bad)
mov
sbb
ficom
(bad)
jmp
mov
leave
fdiv
push
sbb
lea
enter
lods
mov
sbb
mov
icebp
pop
scas
lea
push
xor
int
movs
in
(bad)
push
enter
pop
movs
dec
push
shl
cmps
outs
stc
nop
mov
inc
mov
call
int3
loope
loopne
adc
mov
pop
sbb
loope
ins
mov
jne
ret
add
push
sbb
ins
popf
hlt
mov
lea
pop
jp
sub
add
ins
and
out
xor
adc
or
adc
jns
xchg
aam
dec
rol
outs
pop
pop
in
fsubp
jae
sub
test
es
cmc
test
push
cmp
mov
mov
test
and
mov
xor
mov
xchg
dec
mov
jg
jl
dec
add
push
std
lock
push
mov
loope
scas
xor
aad
movs
xchg
pushf
sti
div
adc
sbb
cld
enter
jb
repz
lock
inc
pop
in
test
xchg
sbb
mov
dec
pop
test
cdq
xchg
repnz
popf
jns
test
ss
cmp
mov
push
rol
div
and
push
in
xor
jp
sub
inc
movs
mov
cld
or
ds
stos
(bad)
and
push
sbb
mov
xchg
rcpps
jbe
fsub
outs
nop
fimul
mov
mov
loop
shl
push
pop
out
mov
retf
in
fstp
or
dec
int3
pusha
xor
outs
cmp
test
out
xchg
dec
gs
or
mov
xchg
ins
sbb
stos
arpl
jmp
add
js
jno
mov
dec
add
cmp
(bad)
popf
sbb
sbb
arpl
lods
mov
push
push
lods
dec
sbb
outs
fnsave
stos
adc
and
pop
jns
lock
jmp
mov
push
scas
mov
sub
retf
xor
ss
dec
int3
aad
jmp
xor
jmp
in
call
jns
fiadd
mov
and
push
stc
sbb
int
sub
dec
movs
jne
xor
stc
pop
adc
ficomp
mov
stc
fsub
sti
dec
add
fimul
es
xchg
cmp
or
outs
and
or
xor
cbw
adc
sbb
sub
imul
movs
ss
and
lea
call
sub
push
rcl
sahf
lods
push
mov
div
cdq
jp
xor
ret
movs
mov
nop
(bad)
inc
push
push
mov
(bad)
cmps
in
out
test
int3
repz
jne
std
in
jb
push
adc
mov
inc
jno
loopne
pop
xchg
dec
fiadd
int
mov
fist
cdq
mov
fisub
mov
popf
dec
pop
ins
jno
or
ret
aad
mov
push
mov
jp
add
pop
add
arpl
aam
les
imul
mov
adc
pusha
xchg
outs
out
jne
repnz
imul
cmp
stos
lods
cdq
out
add
cmp
dec
inc
inc
out
mov
mov
add
inc
ret
pusha
sbb
cmp
add
sbb
stos
dec
xor
sub
sub
cmp
cmp
pop
sbb
jbe
mov
jecxz
std
aas
xor
push
xchg
xor
mov
lahf
mov
dec
cmp
test
lock
adc
mov
mov
in
out
cmp
mov
inc
or
xor
sub
adc
bound
push
xchg
add
ja
dec
push
fs
xchg
jmp
cmp
adc
mov
fs
sbb
xchg
push
jmp
xlat
popf
pop
sti
xor
test
aaa
dec
inc
lock
mov
pop
jge
movnti
mov
jbe
mov
rcpps
(bad)
xchg
inc
hlt
cmc
mov
add
outs
cmp
push
xchg
(bad)
cmp
(bad)
std
or
xchg
pop
mov
scas
aas
xchg
adc
xchg
cmp
adc
retf
imul
es
or
push
sahf
sub
and
xor
sti
pop
das
ficom
mov
cmp
(bad)
jl
popf
imul
mov
xchg
(bad)
popa
pop
retf
or
add
int3
cs
mov
jb
daa
pop
and
push
ja
sbb
adc
enter
xchg
adc
or
cmp
shr
xor
mov
pop
outs
loopne
shr
sub
and
mov
repz
pop
sub
dec
jmp
pusha
inc
sbb
repnz
xchg
sub
fcomp
xchg
pop
out
jb
out
add
or
test
leave
xchg
ins
inc
dec
jl
ins
dec
frstor
add
add
shl
sbb
cli
mov
xor
and
xchg
fldpi
xchg
cmp
mov
je
aas
fnsave
stc
mov
jl
cwde
fsubr
stc
ror
aas
jne
jns
bound
mov
fwait
loope
inc
dec
and
(bad)
mov
(bad)
fs
pop
add
hlt
xor
cwde
fbld
xor
sub
xchg
inc
push
sbb
adc
mov
push
xchg
add
inc
repz
inc
mov
sti
bound
inc
cmps
adc
sub
(bad)
scas
push
loopne
xchg
scas
(bad)
jmp
sbb
jl
bound
pop
scas
xlat
mov
in
fnstcw
cdq
xchg
aas
dec
pop
fwait
jg
inc
xor
and
adc
in
cmps
push
pop
inc
retf
and
mov
jo
ja
and
dec
(bad)
mov
mov
xchg
scas
adc
loope
push
xchg
inc
stc
xor
out
nop
retf
lahf
mov
inc
pop
aam
inc
test
movs
or
xchg
push
scas
(bad)
cmp
push
push
sub
shr
enter
arpl
mul
xchg
loopne
sti
inc
aad
add
xor
push
mov
jmp
cmp
enter
xchg
in
es
adc
fdivrp
add
cmc
push
mov
repz
bound
shr
xor
inc
xchg
frstor
imul
mov
ins
mov
push
and
pusha
and
xchg
ret
jne
and
mov
les
ja
fistp
dec
aam
(bad)
lods
inc
icebp
mov
in
pop
xchg
push
xor
push
cmp
jle
xchg
add
cmc
cmp
cld
jb
cmps
pop
mov
mov
sbb
movs
push
mov
dec
dec
in
sbb
xchg
jle
pop
popa
cld
ficom
lea
out
dec
sub
ja
xchg
push
fs
pop
mov
mov
(bad)
pop
sub
inc
pop
xor
push
inc
and
mov
ja
adc
xchg
gs
mov
ret
js
mov
cmps
xchg
js
jle
loopne
hlt
jno
xchg
ror
mov
(bad)
les
out
mov
int3
in
ret
imul
mov
pop
jbe
pop
inc
retf
add
mov
test
mov
lods
mov
dec
xchg
jb
mov
mov
movs
scas
loope
cmp
(bad)
xor
mov
cwde
mov
xchg
loope
jle
stos
test
repnz
xchg
(bad)
cmpps
rol
dec
daa
daa
add
or
fisub
mov
sbb
fidivr
pop
push
pop
pop
int
xchg
mov
mov
iret
cli
push
and
rol
or
lahf
lea
push
cs
out
clc
xchg
and
daa
pop
push
ret
jp
and
pop
xchg
mov
sub
lahf
push
cmp
or
jns
sub
mov
adc
cmp
stc
ror
aas
inc
mov
and
add
inc
xchg
or
sub
jne
ror
dec
out
mov
shl
shl
xchg
sub
out
mov
shl
out
jbe
and
push
clc
test
mov
xchg
mov
sbb
adc
xchg
mov
adc
pop
mov
sahf
jge
in
push
xor
fild
scas
mov
popa
adc
xor
pop
mov
ret
in
(bad)
mov
cmp
pop
mov
cli
or
mov
xor
adc
xchg
int3
retf
cmp
push
jg
adc
inc
outs
sub
ror
cli
dec
mov
dec
aaa
sbb
out
jmp
and
fcmovnb
jne
(bad)
push
xor
cmps
add
int
pop
pop
fadd
jg
test
not
outs
pop
cmp
dec
adc
jae
push
dec
sbb
add
or
dec
mov
jnp
movs
pop
add
sbb
aas
repz
push
ins
sbb
bound
loope
into
ins
bound
jmp
cdq
or
les
fsubr
cmp
jo
call
ins
xor
push
and
pusha
out
sub
sub
lds
or
mov
mov
dec
sbb
mov
in
sahf
mov
lods
pop
dec
stc
scas
inc
in
or
mov
cmps
pop
mov
push
(bad)
fnstcw
sbb
out
in
fistp
dec
les
sahf
mov
rcr
clc
push
(bad)
pop
add
fmul
xor
sbb
or
fs
xchg
call
mov
jns
test
push
hlt
test
das
test
and
jmp
sub
and
aam
retf
jb
pushf
mov
movs
mov
mov
mov
fs
bound
cmps
add
push
adc
dec
add
adc
and
cmp
lea
popa
inc
xchg
or
pop
into
xchg
clc
xchg
shl
int
add
mov
aam
xchg
sub
or
stc
out
push
gs
call
mov
ficom
add
mov
movs
add
adc
mov
mov
sub
rep
bound
cmps
pop
sti
out
lds
mov
lods
dec
pop
adc
in
push
and
test
sti
inc
data16
jp
jmp
xor
sbb
dec
mov
shl
mov
xchg
push
test
into
or
inc
ror
leave
jle
das
sub
cwde
pusha
mov
xchg
aam
(bad)
imul
sbb
gs
and
in
fcmovbe
jp
xor
push
test
fxam
mov
fnstsw
pop
test
mov
pop
rcr
cld
call
outs
stos
adc
cli
icebp
shr
inc
daa
inc
clc
pop
add
push
push
movd
jns
sub
and
add
mov
shl
cmps
sub
sub
jmp
stos
in
mov
push
pop
mov
cmp
sub
ror
mov
pop
imul
cmp
lock
pushf
lock
in
stc
nop
leave
bound
mov
fs
jecxz
cdq
std
ret
outs
outs
dec
std
mov
jbe
jno
push
mov
out
xchg
sbb
jnp
mov
lods
or
xchg
and
mov
sbb
jle
(bad)
xor
adc
retf
jb
repz
jecxz
sub
jge
stc
xchg
mov
lods
pop
sub
repz
lahf
and
ret
lds
aas
inc
inc
mov
fs
push
cmp
sub
push
shl
mov
jmp
or
pop
call
rcl
rol
mov
push
data16
sbb
frstor
cld
scas
xor
cmp
push
jne
cmp
gs
fisttp
outs
cld
xor
mov
ds
iret
xchg
mov
into
fadd
fwait
dec
or
or
movs
(bad)
stos
mov
inc
rol
push
cld
movs
xor
and
(bad)
xchg
lock
cmps
cmc
pop
sbb
in
mov
ror
ss
loope
into
pop
mov
retf
call
dec
sbb
and
js
add
adc
inc
mov
or
push
pop
test
rcl
adc
fdiv
push
lock
pusha
dec
push
pop
cwde
sub
retf
xchg
fistp
scas
in
(bad)
pop
repnz
imul
mov
jp
in
cmps
adc
into
cmp
jmp
pop
into
sbb
push
mov
mov
in
(bad)
cmp
mov
mov
push
das
ds
adc
push
test
call
ror
inc
push
push
sub
pop
rcr
or
cdq
mov
cwde
mul
pop
pop
xchg
outs
jge
clc
adc
xchg
jmp
test
int
or
add
mov
and
test
cmc
fld
rol
or
rol
fcmove
sahf
mov
pop
das
cwde
jle
push
mov
add
mov
pop
push
mov
inc
lods
pop
adc
sbb
or
jns
xor
push
dec
push
sub
lods
xlat
sar
stos
clc
das
xchg
(bad)
adc
and
sbb
bound
ins
in
fnstcw
test
jg
bound
inc
inc
(bad)
push
inc
push
cmps
ret
dec
mov
bound
(bad)
xor
movs
les
fsubr
sbb
xchg
add
es
scas
mov
lea
push
sbb
mov
xchg
push
out
rol
je
or
xchg
movs
in
mov
pop
icebp
jo
add
pop
dec
repnz
inc
push
add
nop
mov
lahf
int3
mov
inc
pop
cli
jmp
sub
pop
inc
ffreep
cmp
and
call
idiv
out
adc
les
xor
in
nop
ret
adc
sbb
push
xor
retf
add
pop
mov
mov
push
shl
mov
outs
ss
fstp
int3
adc
jl
push
aad
aaa
push
inc
aam
xchg
ds
push
lds
outs
jge
jge
(bad)
scas
add
lods
shr
je
pop
sti
dec
rol
sbb
lea
cmp
cmp
xor
dec
out
imul
(bad)
loop
push
retf
dec
pop
(bad)
(bad)
lods
fild
cld
or
jl
cld
in
mov
xchg
lock
mov
shr
ins
icebp
cdq
push
jg
out
sbb
ja
cld
pop
lock
daa
(bad)
popf
mov
jmp
paddsw
mov
test
cmp
push
cmp
ja
sahf
or
lea
data16
jo
sbb
mov
movs
addr16
aas
sub
mov
outs
stc
outs
stos
xor
sub
pop
add
in
sub
lahf
xor
jns
test
add
retf
fimul
ret
dec
mov
int3
stos
outs
pushf
mov
fwait
(bad)
fldenv
xchg
sbb
out
mov
cmp
popf
inc
data16
jb
mov
sub
paddw
pop
fwait
mov
rol
mov
nop
cmp
clc
(bad)
inc
fcom
jle
and
cmp
pushf
pop
xor
fld
je
pushf
mov
mov
std
inc
popf
sar
in
pop
stos
xchg
test
adc
cmp
lahf
and
jle
add
inc
retf
xchg
jp
fcomp
jns
cld
and
fisub
jb
push
jbe
push
sbb
xchg
xchg
fcom
scas
and
(bad)
xchg
dec
sub
iret
sub
xchg
cmp
and
push
mov
adc
sbb
leave
out
das
xchg
cmp
push
iret
stc
mov
push
jl
mov
inc
pop
enter
nop
aad
stos
pusha
nop
scas
(bad)
inc
mov
mov
push
hlt
sub
pop
inc
std
sbb
sub
mov
mov
out
aas
neg
pop
das
mov
lock
add
mov
lods
shr
push
(bad)
jp
mov
jmp
jne
shl
xor
mov
inc
into
int3
dec
pop
pop
fcom
ror
mov
(bad)
xor
fxch
outs
sub
jmp
push
or
arpl
aas
sub
rcl
fistp
jnp
retf
outs
add
and
xchg
and
arpl
cs
repz
in
test
hlt
cmp
test
xor
mov
pop
dec
adc
and
mov
das
xor
jmp
(bad)
scas
outs
push
shr
adc
dec
outs
icebp
scas
lock
jo
dec
or
mov
std
fadd
imul
ror
xchg
xor
jbe
pop
ror
fcomp
adc
jmp
xchg
xchg
and
cmp
sbb
push
outs
(bad)
sub
ins
sub
push
fwait
rcr
and
adc
jl
inc
mov
aad
mov
pop
xor
xor
jecxz
xchg
imul
push
dec
imul
into
fcom
(bad)
or
mov
add
rcl
or
adc
dec
xchg
fwait
inc
mov
jmp
inc
sahf
ret
xor
test
pop
stos
add
aaa
fcomp
test
and
jecxz
push
ins
push
fdivr
repnz
ja
icebp
push
fidivr
(bad)
pop
add
movs
data16
dec
hlt
pop
inc
lods
add
xchg
out
and
mov
mov
xchg
pop
sub
cld
nop
push
mov
iret
ss
and
xchg
nop
pushf
xchg
data16
sbb
sahf
pusha
mov
rdtsc
xor
inc
aas
jno
push
and
dec
call
sub
inc
imul
shl
arpl
cmps
mov
outs
fcomp
dec
mov
pop
(bad)
mov
mov
(bad)
ins
pop
mov
(bad)
outs
cwde
mov
push
(bad)
jmp
xchg
stos
test
popf
xchg
arpl
push
jl
push
fs
into
jb
test
pop
data16
xchg
imul
or
jecxz
adc
cmc
sbb
sub
retf
loope
jg
xor
fidivr
mov
mov
cmc
push
je
cmps
repnz
dec
xchg
xchg
jp
inc
mov
shr
mov
jo
cmp
jmp
sbb
adc
test
inc
fwait
scas
cmps
movs
out
xchg
es
jmp
add
dec
test
inc
cwde
cmp
add
clc
ss
inc
daa
retf
(bad)
xor
ret
or
add
jmp
(bad)
fmul
into
pusha
cmp
scas
pop
popa
cmp
loope
test
retf
pop
es
das
cmp
jecxz
jb
inc
sti
fs
test
sbb
pop
xchg
cmp
xchg
add
mov
jge
in
pushf
sub
int3
mov
inc
nop
or
adc
leave
fsubr
sbb
gs
stos
mov
mov
outs
mov
inc
mov
adc
push
cli
sti
inc
ds
inc
rcr
sbb
mov
and
mov
jle
stos
jbe
fwait
outs
leave
(bad)
test
hlt
push
jb
iret
rdpmc
dec
xchg
pop
out
mov
std
jge
cs
sub
stc
movs
fucomp
cld
repz
mov
jecxz
retf
pop
mov
jmp
push
(bad)
outs
inc
loopne
sbb
clc
ins
into
lods
xchg
out
sub
pop
add
mov
mov
dec
sub
leave
inc
aaa
rcr
xor
int3
and
ror
and
or
or
cmp
out
add
cs
jle
sub
jg
dec
test
inc
push
cmp
or
mov
sti
mov
sbb
movs
inc
outs
mov
icebp
inc
js
push
or
movs
in
out
mov
ffreep
je
pop
add
mov
sbb
(bad)
mov
xchg
pop
xor
sub
mov
aas
pushf
mov
(bad)
jle
cdq
jge
jmp
pop
adc
sahf
test
cmp
push
or
pop
cmp
sti
push
add
iret
xchg
pusha
ss
or
sbb
cmp
xchg
test
mov
movs
add
push
ficom
push
inc
call
push
mov
(bad)
arpl
xor
mov
jg
and
jp
inc
jbe
push
(bad)
dec
sbb
and
mov
adc
arpl
mov
inc
gs
out
dec
pop
retf
lea
push
or
jle
mov
ror
sbb
sub
jo
int
mov
scas
xchg
call
xor
or
mov
retf
int3
not
lds
inc
fs
adc
stos
sub
cmc
mov
leave
mov
pop
cwde
mov
push
retf
jmp
mov
push
dec
shr
inc
adc
jmp
jno
mov
xor
(bad)
mov
addr16
or
push
or
mov
and
loopne
les
rcl
push
adc
inc
add
aas
jge
mov
add
in
pop
cmp
sbb
call
mov
(bad)
cld
push
(bad)
cmp
push
hlt
test
cmp
adc
or
stc
jno
js
add
sahf
fadd
jge
jmp
cld
fisubr
cs
xchg
pop
js
mov
repnz
and
xchg
pop
inc
(bad)
push
retf
mov
enter
movs
cmp
fdiv
(bad)
popf
pop
es
movs
sub
test
add
mov
cmc
xchg
out
xchg
xchg
push
mov
mov
add
es
mov
mov
mov
ret
outs
mov
clc
movs
xor
das
adc
mov
xor
loop
adc
fldcw
jmp
push
mov
adc
xchg
out
(bad)
aas
inc
mov
hlt
push
adc
std
les
push
sti
push
sbb
into
mov
ins
cmp
push
inc
cmps
jl
mov
xor
fild
mov
inc
shr
mov
xor
adc
push
or
call
aas
xchg
sbb
in
inc
and
and
pop
out
out
jo
or
(bad)
mov
(bad)
and
hlt
aaa
jns
jne
push
xchg
add
pop
xchg
stos
test
out
fisttp
dec
pop
jp
pop
std
out
out
sti
pop
iret
jbe
xchg
imul
xchg
(bad)
rcr
das
lea
mov
push
push
push
pusha
xor
outs
mov
sbb
shr
pop
sbb
or
add
mov
fistp
adc
push
es
mov
jl
pusha
in
push
test
jb
dec
xor
test
jns
(bad)
push
fdiv
movs
sbb
(bad)
lahf
xor
out
(bad)
xor
aas
ins
and
div
pushf
or
or
sub
scas
outs
sahf
in
xor
push
repnz
dec
retf
xchg
std
lahf
or
adc
int3
dec
inc
xlat
add
ins
mov
push
and
pop
pop
xor
test
mov
out
int
push
out
fmul
pop
loop
add
shl
(bad)
add
hlt
popf
mov
sbb
xchg
or
or
mov
out
push
jg
lahf
and
pushf
iret
sar
(bad)
mov
pop
mov
and
sbb
sbb
mov
(bad)
int3
sub
xor
ins
stos
test
cmps
jo
mov
out
ins
cmps
call
call
add
sub
(bad)
and
movs
inc
cmp
pusha
pop
cmps
mov
xchg
arpl
push
cmp
test
dec
xchg
dec
ret
jo
mov
sub
xchg
sub
cmp
xor
sbb
aas
push
pushf
xor
and
retf
mov
dec
mov
(bad)
jns
(bad)
jmp
inc
jle
mov
add
nop
sub
mov
cld
sbb
jns
pop
jo
inc
inc
jg
jnp
push
pop
cmp
(bad)
jl
xchg
jno
fldenv
fidiv
into
mov
add
sbb
sti
mov
push
mov
fbld
and
fldcw
jl
scas
cmp
fadd
jae
iret
jno
inc
xchg
sub
or
dec
into
add
jp
and
push
test
das
mov
ret
push
push
sbb
jmp
popf
mov
jbe
cmp
pop
loope
js
or
pop
mov
adc
sahf
mov
scas
add
test
rcr
jmp
jb
push
fdivr
dec
jge
nop
sub
push
push
inc
in
cmp
dec
aaa
jns
ss
or
xor
cmp
idiv
jne
sub
hlt
push
shl
jle
call
mov
adc
(bad)
sbb
inc
push
outs
fcmovb
pop
outs
pop
mov
repnz
pop
out
add
push
mov
cmps
sbb
adc
push
mov
cmp
dec
lods
mov
and
and
scas
retf
mov
ret
mov
loopne
add
scas
add
sbb
mov
in
shl
jle
cs
xlat
pop
pop
out
cmc
inc
mov
and
stos
cwde
add
mov
mov
stos
adc
or
sub
mov
sti
call
mov
sbb
cwde
mov
jmp
pop
in
add
imul
cmc
mov
adc
cmp
sub
inc
stc
ins
mov
hlt
xchg
mov
lods
clc
div
pop
jmp
mov
les
mov
(bad)
and
jne
pop
xor
push
inc
sar
push
sub
and
jg
adc
test
(bad)
inc
jae
push
iret
lods
and
neg
lock
(bad)
mov
adc
cdq
add
jno
inc
add
jne
retf
sbb
xchg
push
lahf
stos
jmp
aad
aas
in
ret
jmp
jmp
push
ins
gs
(bad)
and
stc
daa
sub
out
js
xor
push
add
pop
ret
loop
inc
pop
push
mov
dec
je
jne
fs
(bad)
mov
add
pushf
movs
aaa
jg
test
std
pop
out
inc
adc
push
inc
and
xlat
and
aaa
push
test
jge
cmps
mov
and
lahf
addr16
loop
jo
mov
or
dec
dec
or
pop
repz
fsub
lods
rcl
xchg
xchg
pop
ret
mov
or
pop
test
xlat
jecxz
cmp
mov
cdq
jmp
movs
rcr
shl
push
add
xor
out
and
cs
inc
dec
rcl
jbe
lahf
sbb
mov
daa
and
out
fwait
sar
ins
mov
(bad)
outs
add
cmps
and
mov
in
cmp
pop
arpl
iret
pop
inc
xchg
or
sbb
adc
ror
(bad)
add
mov
sti
je
(bad)
loope
pop
daa
dec
push
stos
ret
lods
sbb
popa
jno
and
js
das
xchg
pushf
lods
push
adc
pop
mov
(bad)
iret
xor
jecxz
(bad)
cmc
adc
or
sahf
in
pop
enter
popf
mov
loopne
and
fiadd
dec
sti
imul
je
xor
mov
ror
popf
test
shl
daa
pop
inc
popf
lea
and
sub
hlt
sub
cmc
outs
jnp
popa
fcmovnu
popa
fwait
(bad)
xor
sub
jne
xchg
adc
or
adc
xchg
(bad)
or
pushf
and
mov
dec
inc
iret
aas
push
aam
pop
sub
popf
push
sbb
xchg
or
int3
jb
push
sbb
out
imul
jae
mov
mov
loope
cmp
dec
(bad)
mov
(bad)
push
or
fnsave
or
dec
mov
push
mov
or
dec
(bad)
lock
mov
inc
push
xchg
std
jmp
inc
jbe
sub
push
jp
jno
icebp
mov
mov
out
ds
push
in
(bad)
inc
mov
adc
and
mov
jno
lods
(bad)
sbb
cmc
call
mov
push
add
pop
xor
test
leave
out
inc
sbb
xchg
not
dec
mov
add
lods
cmps
gs
ds
dec
dec
xor
not
les
iret
ss
mov
sub
mov
fdivr
or
pop
mov
cli
or
inc
icebp
aas
add
push
inc
sub
retf
or
push
outs
xchg
shr
mov
jbe
jp
frstor
gs
push
push
pop
shl
jb
neg
and
test
add
out
test
push
lock
loope
inc
int
(bad)
(bad)
mov
test
out
or
cmp
in
retf
fs
and
cs
out
clc
in
sub
pop
fld
sub
in
fs
aas
ds
popa
dec
mov
gs
cmp
mov
arpl
cmc
cmc
mov
add
mov
inc
pop
shr
adc
push
nop
sar
sbb
imul
jb
or
stc
sub
jns
mov
rcr
(bad)
sbb
lods
jmp
scas
pusha
sub
inc
xchg
cmp
mov
sbb
xor
add
fcmovbe
fsub
enter
cmp
xor
push
ins
mov
cmp
in
daa
in
(bad)
cs
sbb
je
cdq
clc
xor
mov
jle
add
clc
pop
imul
jmp
test
aaa
add
clc
ret
fist
push
repz
push
and
mov
and
push
out
js
repz
mov
cmp
mov
cmp
aaa
pop
xchg
in
xchg
mov
adc
dec
add
mov
js
sbb
fisub
cdq
xor
or
std
mov
mov
push
xor
sbb
push
lock
sub
push
push
pusha
sbb
ror
popf
iret
je
add
xlat
leave
shr
fisttp
jae
je
fild
int
cld
cmc
shr
arpl
adc
div
inc
add
xor
popa
in
in
xor
mov
into
lea
in
icebp
mov
xchg
xchg
mov
pusha
mov
or
pop
dec
add
in
jbe
bound
add
mov
pop
loopne
test
nop
pop
out
loope
leave
pop
push
mov
(bad)
dec
(bad)
sbb
jno
sbb
mov
push
mul
call
add
fld
stos
cs
shl
mov
je
jbe
lahf
popf
stc
jp
pusha
test
movs
adc
shl
into
jmp
int
or
and
in
inc
hlt
push
addr16
cld
icebp
jnp
popf
rcl
push
pop
xor
mov
cmc
shufps
xor
and
sub
loope
dec
js
add
adc
dec
ret
pop
xchg
push
mov
pop
or
bound
lea
sbb
sub
mov
test
and
push
pop
cmc
inc
aas
or
cli
xchg
arpl
call
call
inc
mov
ja
inc
je
inc
lea
or
inc
xchg
pop
add
mov
mov
inc
fistp
aaa
mov
dec
nop
loope
xor
inc
mov
(bad)
in
iret
pop
jle
fcom
aad
mov
pop
xor
mov
sub
xchg
mov
jg
jmp
mov
aam
mov
iret
outs
pushf
sahf
(bad)
aas
outs
jecxz
mov
adc
push
lahf
xchg
add
inc
and
pushf
sub
mov
les
test
je
push
xchg
push
push
sub
les
ins
push
sahf
shr
loop
push
hlt
loop
sub
movs
out
cmp
cmp
xchg
cmp
and
pusha
lea
mov
jp
in
ret
leave
jle
mov
sbb
sub
inc
mov
and
jge
push
into
daa
mov
stos
mov
sti
xchg
int3
cwde
mov
push
sbb
clc
pusha
or
cmp
mov
sub
fwait
xor
mov
shl
dec
adc
push
out
(bad)
lods
ins
mul
(bad)
xchg
adc
and
rol
aas
cwde
test
jmp
(bad)
out
xchg
sti
adc
popf
jl
dec
fld
pop
icebp
cmps
dec
outs
cdq
loop
fst
jne
sub
sub
push
sahf
adc
inc
clc
popa
das
inc
xchg
sbb
xchg
ins
int3
mov
push
test
mov
mov
int
sahf
shl
retf
popf
mov
push
clc
mov
inc
(bad)
sub
imul
dec
daa
mov
sub
jmp
ret
and
sbb
leave
pop
cmp
int3
(bad)
push
retw
adc
pop
fisttp
cmp
repz
push
inc
mov
xchg
repnz
popa
dec
jno
int
dec
or
outs
mov
cmps
inc
adc
cmps
adc
addr16
(bad)
jb
xchg
cmp
aam
xor
cmp
xor
push
movs
xchg
jmp
mov
dec
clc
dec
add
imul
pop
shr
outs
mov
xor
arpl
fmulp
add
xor
bswap
cmc
dec
inc
mov
mov
cmp
dec
iret
daa
lahf
in
fmul
gs
mov
arpl
xchg
push
mov
pop
add
lea
jecxz
or
push
repnz
lods
jb
(bad)
aam
sub
mov
jge
add
cmp
add
sub
push
imul
stc
mov
mov
(bad)
dec
adc
pop
nop
jns
jg
or
mov
pop
(bad)
cmp
mov
cdq
out
iret
inc
xchg
loopne
sub
pop
push
cmc
out
sysexit
jecxz
jne
xchg
popf
sbb
je
jmp
and
pop
mov
jecxz
and
sbb
xchg
and
pop
inc
fcom
stos
pop
jns
xchg
or
add
out
ins
ds
es
mov
mov
sbb
xchg
ja
pop
sub
inc
lds
in
in
mov
loop
pop
xchg
sbb
sbb
retf
push
xor
sbb
dec
jle
stc
jmp
cs
cmc
retf
pop
and
cmp
add
pop
test
pop
sub
je
out
adc
push
rcl
mov
inc
pop
add
and
daa
mov
(bad)
sub
cmc
sti
inc
pop
push
fmulp
or
retf
inc
mov
pop
gs
ja
test
jbe
icebp
push
mov
jl
adc
and
pop
cmp
(bad)
push
lahf
cdq
cmp
add
inc
adc
and
nop
xor
or
popf
mov
fisttp
aas
sar
xor
fsubr
sbb
aas
inc
in
push
xor
add
int3
sti
pushf
fsub
ret
hlt
xchg
cmp
push
and
outs
xor
push
xor
aam
call
cmp
ret
mov
pop
jle
repz
inc
ficomp
ins
pop
in
inc
hlt
mov
cmc
mov
lods
xor
(bad)
fmul
sub
jae
hlt
dec
mov
pop
dec
inc
jae
in
in
scas
pop
jmp
fwait
sbb
and
pop
aas
stc
mov
jle
push
mov
pop
fwait
or
jp
lds
push
lock
outs
mov
or
or
mov
scas
xchg
mov
movs
call
sub
adc
mov
jg
arpl
xchg
fsub
mov
cmp
pop
xor
sti
jbe
out
sti
(bad)
clc
push
inc
xor
jmp
push
fisttp
int
adc
dec
je
ror
push
cmps
lock
inc
icebp
out
daa
mov
mov
sub
inc
lods
and
mov
dec
xor
call
fisttp
mov
hlt
mov
mov
ins
iret
stos
add
std
scas
add
jecxz
(bad)
(bad)
aad
add
and
inc
sub
dec
add
mov
xchg
clc
scas
pop
cmp
(bad)
repnz
and
movs
dec
inc
dec
xchg
cmp
dec
xchg
or
out
cmp
stc
lock
loope
shl
inc
out
adc
fdiv
jmp
loop
mov
jno
jne
sbb
pop
pop
sub
arpl
jmp
je
aas
arpl
pop
dec
cmp
xchg
stc
and
pop
int3
xlat
sti
fwait
jp
retf
pop
jnp
stc
in
sar
popa
xor
xchg
shl
jb
out
sar
or
ja
movs
cmps
je
cld
ds
jmp
and
mov
hlt
popf
ja
sub
scas
cmp
aam
out
test
inc
or
cmc
cmps
xchg
dec
cmps
sub
or
lahf
xchg
push
and
jae
cwde
sar
jl
mov
ror
(bad)
fstp
(bad)
ficom
in
cli
inc
test
xor
into
int
jmp
arpl
outs
leave
(bad)
mov
pop
xchg
cmp
mov
ja
mov
mov
loopne
fnstenv
div
and
xor
daa
dec
pop
out
inc
xchg
inc
sub
dec
mov
sbb
(bad)
xor
xor
inc
idiv
or
loope
ss
movs
div
hlt
or
or
loope
aas
pop
xor
jnp
jp
pop
push
jb
adc
mov
inc
and
cmp
jmp
pop
std
aas
aad
push
adc
ret
push
and
sbb
aad
mov
movs
outs
mov
ret
xor
pop
jnp
outs
call
mov
int3
mov
adc
div
push
jno
je
in
enter
sub
pop
push
jb
adc
fistp
bnd
push
fwait
shl
adc
cmp
inc
ret
dec
adc
(bad)
lea
in
inc
scas
(bad)
stc
mov
push
ss
inc
(bad)
adc
cli
sahf
jae
pop
std
adc
daa
stos
xor
arpl
adc
push
xor
xor
ss
stos
mov
iret
pop
out
push
js
add
sar
addr16
imul
movs
clc
rcl
outs
push
mov
mov
sbb
and
test
push
pop
cmp
xchg
scas
jp
addr16
cmp
(bad)
mov
jmp
push
pop
shr
mov
and
sbb
cmp
sbb
fist
or
xor
ja
add
sti
and
mov
sbb
retf
push
hlt
jo
in
push
jecxz
jmp
loop
ret
sbb
inc
clc
xchg
push
mov
xchg
mov
sti
sbb
xor
iret
fisubr
push
mov
(bad)
xor
fmul
cmp
dec
push
or
jb
sahf
xchg
aas
cmps
xor
bound
idiv
out
ins
jne
sub
dec
sahf
mov
jp
(bad)
jle
xor
out
cmp
mov
sub
jns
add
gs
jo
xchg
pushf
push
mov
(bad)
dec
push
arpl
add
shr
std
fidiv
mov
sbb
xor
inc
outs
xchg
(bad)
dec
int3
call
outs
sub
xchg
or
mov
cmp
mov
jp
rcl
scas
or
sbb
sub
mov
sbb
dec
lods
leave
hlt
xlat
mov
mov
lea
xor
inc
fwait
rcl
ror
pop
add
pop
xor
ss
in
out
push
adc
fsub
adc
mov
ss
sti
dec
bound
inc
mov
xor
mov
and
push
ins
push
or
leave
and
mov
xchg
loope
push
es
push
inc
cmp
adc
imul
mov
push
loopne
pushf
sti
xor
dec
sbb
xchg
xchg
sbb
cwde
cdq
mov
ins
repz
sbb
cmp
and
mov
add
pop
fs
push
dec
adc
ja
fld1
mov
cmp
hlt
popf
fidivr
jnp
imul
in
mov
ficomp
aaa
outs
icebp
xor
cmp
hlt
add
addr16
or
and
mov
outs
cwde
out
call
push
cmp
ret
in
adc
xchg
cwde
retf
jge
xchg
out
test
adc
sbb
dec
cmp
sti
ffreep
(bad)
mov
shr
cwde
shr
(bad)
cmps
xor
sub
push
das
push
test
inc
jmp
loopne
jmp
push
xor
fdiv
div
iret
jl
mov
cmps
xor
inc
cld
mov
aas
add
or
sbb
adc
dec
inc
or
loope
movs
mov
loope
and
mov
push
lea
mov
imul
clc
inc
ficom
rcl
xor
retf
fisub
outs
mov
pusha
bound
ret
jle
icebp
fld
ins
inc
inc
add
mov
xchg
mov
repnz
or
mov
shl
ror
xchg
fldenv
mov
adc
push
mov
in
xchg
xchg
sub
ins
ins
mov
repz
pop
sub
jbe
sbb
test
(bad)
adc
adc
hlt
dec
lahf
cli
scas
bswap
mov
enter
scas
cmc
pop
repnz
and
xchg
and
aam
push
out
daa
loopne
add
(bad)
sbb
imul
xchg
mov
daa
mov
ficomp
test
(bad)
aaa
xor
xchg
mov
xor
jae
addr16
loop
rcl
add
fcomp
sub
scas
inc
cmp
cmps
mov
pusha
iret
mov
jno
jecxz
sbb
mov
sub
push
es
aad
push
push
cmp
es
and
movs
loope
retf
or
idiv
imul
cmp
les
xor
mov
sbb
add
(bad)
xchg
add
sbb
bnd
rcr
movs
pop
shl
(bad)
push
dec
or
lea
or
adc
(bad)
adc
xchg
sub
(bad)
int
out
adc
cmc
jge
xchg
movs
retf
sub
sbb
outs
pop
stos
sub
push
aam
xchg
inc
jmp
movs
dec
fidivr
inc
call
jae
mov
ja
xchg
inc
xor
push
aaa
and
frstor
mov
dec
or
xor
jo
les
sbb
or
out
inc
(bad)
imul
lock
mov
or
shl
xor
mov
lds
call
out
adc
imul
ret
sub
fstp
pop
pop
xor
mov
or
stos
pop
movs
popf
daa
push
jbe
loope
adc
in
fstp
sar
xchg
xchg
addr16
inc
fcomp
push
lea
call
dec
(bad)
xchg
repnz
cdq
les
neg
mov
ins
loop
push
jb
jp
or
fist
repz
outs
movs
push
cmp
push
inc
ret
mov
aam
adc
enter
pop
push
xchg
enter
mov
mov
mov
in
cmp
fcomip
call
retf
mov
sbb
not
cmp
jmp
xchg
test
lahf
es
mov
mov
sbb
das
retf
imul
fadd
mov
sbb
hlt
sbb
call
xor
push
lods
mov
call
mov
sub
pop
enter
or
rcr
cmp
and
inc
jne
enter
loope
clc
into
lods
mov
and
inc
or
pusha
jns
push
in
inc
or
pusha
mov
mov
pop
jp
cmps
pop
mov
stos
add
outs
lods
sbb
xchg
push
stos
js
mov
dec
jecxz
push
dec
loope
stos
cwde
das
mov
mov
out
xor
(bad)
stc
js
pop
test
add
xor
push
imul
in
and
pop
xchg
out
adc
mov
ret
or
lods
jle
ds
repz
pop
mov
dec
dec
iret
call
dec
jns
cld
sahf
add
imul
cmps
xchg
sub
aas
iret
or
imul
mov
(bad)
pop
or
xor
xor
mov
pop
xor
add
cmp
popf
bound
movs
inc
movs
cmp
enter
or
dec
pop
scas
ret
inc
addr16
xor
jb
outs
inc
xchg
out
push
leave
add
lds
enter
ror
dec
sbb
mov
enter
sub
pop
ret
xchg
popa
mov
pusha
add
ins
fdiv
xor
adc
mov
xchg
clc
fidiv
mov
push
or
mov
lock
retf
jmp
dec
loop
jb
inc
or
and
xor
sbb
mov
pop
in
jo
inc
mov
ror
repnz
cmp
loopne
fiadd
fist
imul
dec
cwde
arpl
sbb
loopne
inc
(bad)
adc
icebp
gs
add
test
mov
ss
std
call
jecxz
mov
outs
inc
xchg
popf
xlat
cs
rcr
push
outs
inc
(bad)
lods
mov
inc
sub
frstor
(bad)
adc
pop
addr16
jns
imul
and
push
stos
pop
call
mov
inc
or
push
or
pop
sub
gs
add
mov
jge
xchg
popa
and
add
jl
ins
loopne
or
in
xor
outs
mov
rol
nop
lods
std
dec
jo
cmps
jle
repnz
and
scas
xchg
mov
pushf
or
sar
mov
loopne
mov
mov
stos
repz
ja
pop
sbb
pusha
cmp
xchg
mov
sbb
out
sbb
mov
fdivr
ror
sub
fst
movs
push
fadd
cmp
(bad)
mov
pusha
dec
jmp
rcr
mov
mov
sbb
pushf
pop
mov
(bad)
int
adc
fdiv
ja
mov
mov
inc
sub
nop
inc
(bad)
ror
fwait
mov
and
fistp
mov
xchg
js
sub
mov
out
movs
sub
out
pop
dec
mov
rcl
xor
inc
mov
daa
xor
popa
imul
aas
es
mov
and
(bad)
push
mov
push
shl
dec
into
js
fadd
sub
mov
mov
pop
mov
ja
add
xor
outs
cmp
imul
mov
imul
inc
dec
and
aas
adc
sbb
sub
jbe
icebp
in
in
sub
test
loopne
sub
retf
loope
dec
push
cdq
in
ficom
sbb
cmp
xlat
add
into
jmp
cmc
movs
xor
inc
cld
cmovns
stos
imul
cmps
mov
fs
fwait
stos
(bad)
mov
(bad)
cs
or
adc
(bad)
fdiv
ror
xchg
mov
dec
xchg
fisttp
or
cmp
cld
movs
aam
call
cwde
push
dec
ins
mov
push
in
sbb
sbb
cwde
jecxz
pop
mov
jp
ficom
data16
sbb
pop
mov
jb
ror
and
mov
shl
mov
sub
xor
or
pop
xor
cmp
test
xchg
ins
xor
adc
push
in
sub
add
loope
fst
pop
idiv
outs
mov
jnp
ins
xchg
frstor
dec
mov
icebp
pop
rcr
test
loop
xor
push
xchg
jb
xor
mov
popf
cmp
cmc
sub
push
cmp
xchg
test
and
or
fadd
inc
mov
loope
movs
es
popf
scas
dec
pop
in
mov
bound
repnz
cmc
sti
xlat
mov
push
leave
bound
movntq
jo
push
cmp
scas
(bad)
ja
mov
xchg
or
les
jge
std
or
and
pop
std
push
idiv
fisub
out
push
sbb
gs
pop
adc
movs
jnp
loopne
ds
das
test
xor
xlat
inc
ret
mov
mov
call
aas
int
cmp
jl
sub
jae
outs
clc
inc
jb
popf
outs
and
xchg
push
sub
movs
mov
sub
inc
jge
rcl
lods
loope
inc
jb
ret
inc
ds
lock
(bad)
js
jne
ja
movs
push
push
fwait
icebp
mov
mov
or
cmps
ins
push
mov
mov
xor
lahf
(bad)
inc
jmp
fadd
mov
pop
ins
mov
mov
popf
adc
mov
cmp
mov
lods
xor
rcl
aam
ret
mov
neg
mul
add
push
add
fwait
lods
mov
movs
jne
loop
inc
hlt
leave
vpavgw
not
aas
ret
pop
cmp
push
jmp
sti
retf
add
jmp
lods
mov
adc
lods
rcl
jae
shr
mov
xchg
adc
int
imul
mov
in
mov
sbb
jecxz
aam
push
pusha
push
mov
movs
call
ja
inc
lock
sub
or
stc
mov
shr
pop
mov
push
cld
cmc
data16
push
lea
test
imul
jl
repnz
call
add
arpl
cmp
inc
mov
jb
push
movs
call
jge
jmp
nop
adc
inc
sub
stc
mov
data16
loope
das
xchg
and
test
imul
jno
or
aas
pop
repnz
jb
call
fs
mov
ins
pusha
clc
cmp
jns
mov
dec
movs
and
aam
pop
shl
ror
(bad)
cmp
push
loopne
dec
jne
out
mov
ret
or
aam
(bad)
jne
fst
xor
inc
dec
adc
mov
mov
mov
sbb
inc
xor
cmc
out
xor
hlt
outs
or
ins
mov
xchg
sbb
adc
aad
pop
stc
js
jb
xchg
sti
ficomp
pop
sub
inc
lods
js
add
sti
xlat
or
xor
xor
je
jnp
enter
shl
mov
dec
sbb
inc
clc
dec
xor
cmps
test
or
push
dec
mov
dec
adc
pop
pop
bound
icebp
nop
lds
add
call
mov
sbb
push
inc
cmp
out
push
lea
mov
(bad)
sub
in
mov
jmp
sub
(bad)
aad
es
pop
sub
add
jmp
es
pop
pushf
not
je
fwait
not
sbb
mov
jns
sbb
stc
cmp
gs
lahf
lock
and
or
adc
jbe
cmp
sbb
out
pop
cmp
mov
pop
icebp
mov
xchg
mov
(bad)
cmp
or
xor
ins
pop
mov
iret
dec
pop
mov
outs
mov
call
cmp
mov
inc
jg
fmul
jmp
repnz
(bad)
ja
push
dec
stos
rol
push
mov
and
stc
mov
jne
dec
icebp
ins
cmp
xchg
xchg
cmps
retf
xor
push
iret
loopne
aaa
cmp
ss
mov
pop
pop
lds
es
pop
adc
out
aam
push
inc
pop
xchg
push
in
mov
sub
fucom
push
sbb
test
inc
test
mov
sbb
add
sub
sbb
test
dec
xor
in
sub
dec
bound
sub
xor
xchg
cmp
in
xor
sub
cs
adc
add
jno
push
shl
daa
nop
push
pop
ins
and
imul
std
adc
clc
sbb
mov
mov
dec
push
xchg
pop
mov
fs
and
sub
jl
and
pop
inc
xor
jno
xchg
das
data16
aad
sub
lock
mov
jp
into
repnz
ins
call
push
lds
xchg
pop
in
cmp
inc
scas
std
in
pop
repnz
add
test
jmp
mov
cmp
loopne
cli
sti
inc
clc
imul
(bad)
inc
jns
enter
inc
mov
push
jbe
adc
jmp
and
xchg
ss
adc
pop
ins
inc
fistp
jne
movs
sbb
pusha
loope
fnstenv
js
xchg
fimul
hlt
aaa
adc
xor
or
sub
inc
retf
mov
mov
inc
ds
mov
or
lods
cld
push
call
(bad)
jecxz
repnz
xchg
in
mov
scas
lods
repnz
imul
push
fs
stos
push
je
in
retf
outs
sbb
outs
mov
sbb
dec
add
mov
pushf
xchg
push
aad
jne
and
(bad)
pop
mov
repz
jmp
mov
dec
div
stos
pop
std
les
inc
jecxz
das
mov
mov
mov
scas
pop
mov
loope
cli
imul
adc
nop
enter
mov
mov
movs
daa
add
mov
and
cld
cmp
jge
mov
mov
popa
outs
dec
arpl
mov
bound
adc
imul
adc
push
sub
pusha
aas
(bad)
imul
fcmovb
jg
pop
retf
or
dec
fst
mov
dec
rcl
cmc
and
repz
and
inc
mov
xchg
pop
add
cmp
xor
repz
inc
mov
sahf
mov
(bad)
std
test
add
xchg
pop
mov
push
and
xchg
lods
pop
xor
cdq
in
xchg
loopne
out
dec
dec
mov
ins
sub
mov
sub
mov
ss
(bad)
(bad)
(bad)
clc
vmovmskps
push
fsubp
lea
enter
imul
sbb
pusha
retf
test
outs
sub
pop
lock
hlt
xchg
and
jl
pop
int3
fsub
dec
loop
push
or
jmp
bound
push
and
fwait
int
cmp
jno
jmp
jns
arpl
ja
cmps
push
nop
popf
ret
mov
and
or
sbb
add
jg
xlat
cmps
cmp
push
and
cmp
fisttp
test
sub
ror
sbb
dec
add
cmp
xchg
repnz
dec
popa
in
in
cmps
sbb
mov
pop
mov
adc
out
xchg
push
jbe
push
popf
fld
(bad)
adc
bound
shr
into
ds
jge
sub
and
je
sub
push
and
into
aam
sar
(bad)
test
pop
add
jb
imul
fcom
scas
dec
lea
iret
dec
or
movs
xor
inc
fs
sbb
inc
out
jl
gs
imul
sbb
or
mov
push
mov
and
scas
inc
icebp
jbe
ins
call
(bad)
les
in
int3
stc
ja
shl
sub
movs
fist
ja
xor
lods
jne
add
push
(bad)
and
or
inc
inc
pop
icebp
cmp
fwait
(bad)
icebp
arpl
lea
pop
and
pusha
sbb
mov
xor
pushf
mov
xor
out
jecxz
movs
sbb
scas
sub
pop
cld
jns
inc
xor
and
test
aaa
out
push
xor
mov
test
ds
sbb
pop
jae
sub
retf
fidivr
xchg
(bad)
fmul
or
cdq
repnz
add
jno
xlat
cmp
mov
popa
call
mov
cmp
call
stos
add
fmul
mov
mov
test
jl
xlat
or
aad
jo
add
lea
imul
jae
mov
out
int3
gs
mov
out
and
or
xchg
mov
jns
cmp
xor
movs
movs
addr16
cdq
aad
lods
ret
retf
das
xor
(bad)
cmp
test
in
in
pusha
fisub
and
mov
xor
dec
xor
jb
inc
sti
mov
loopne
(bad)
loopne
dec
mov
jo
or
frstor
ficom
out
lds
bound
mov
lods
enter
sahf
loop
inc
add
mov
hlt
fst
xchg
fwait
xor
or
call
mov
jbe
push
in
sbb
pop
add
mov
mov
test
sub
jb
sub
test
mov
adc
cmp
(bad)
bound
mov
ss
xchg
pop
jp
sub
sbb
mov
pushf
into
mov
push
loop
jns
pop
(bad)
ins
adc
inc
(bad)
std
push
ror
mov
(bad)
and
mov
sub
xor
jmp
jo
cs
or
mov
int
mov
and
jne
adc
es
hlt
fdiv
fmul
das
ficomp
adc
into
add
js
mov
fwait
cmovns
rol
es
aaa
dec
mov
out
inc
cmp
rol
out
mov
fdiv
mov
dec
fwait
ret
jmp
cmp
cmp
into
inc
mov
jmp
jbe
dec
cmp
loop
repz
es
or
mov
push
rol
or
sbb
pop
mov
lods
jmp
inc
push
or
(bad)
mov
push
cdq
fcomp
adc
data16
(bad)
xor
push
fnstenv
retf
movs
outs
imul
jp
pop
(bad)
xchg
sbb
inc
imul
jne
adc
xor
es
add
enter
dec
jg
xchg
inc
adc
jne
fimul
cmps
mov
adc
sub
xor
cmps
add
fidivr
ins
out
stos
adc
add
mov
xchg
pop
cmp
inc
iret
lods
and
ret
sbb
pop
div
sbb
shl
mov
mov
je
dec
fwait
push
retf
xor
jecxz
jecxz
(bad)
xor
aaa
and
ds
jbe
imul
ins
mov
pop
or
push
and
pop
ret
jge
mov
gs
push
fld
jbe
gs
inc
xor
push
cmp
sub
mov
mov
pop
and
xchg
jl
push
push
mov
popf
xchg
movs
inc
(bad)
pop
shl
imul
imul
cmp
rsqrtps
aad
mov
mov
mov
lods
std
imul
fbld
adc
mov
xchg
pop
push
lock
retf
jle
fs
cmp
push
mov
(bad)
iret
jb
push
adc
ficom
jecxz
push
outs
sub
sbb
icebp
leave
fsub
jns
mov
and
lods
repnz
add
mov
adc
mov
pop
inc
jp
add
inc
mov
mov
push
movs
cmp
mov
lahf
dec
aas
jne
(bad)
push
imul
ja
jp
cli
xchg
dec
fwait
cmps
js
fwait
or
dec
dec
hlt
fisub
icebp
(bad)
jecxz
and
cmps
in
inc
scas
sahf
sbb
pop
jb
push
cmc
inc
dec
pop
jns
in
or
pop
call
daa
mov
mov
int
xchg
scas
push
jmp
xchg
mov
or
add
xchg
or
inc
mov
xor
test
gs
jae
xor
loop
shr
jl
mov
rcl
adc
mov
xlat
sbb
adc
mov
push
mov
dec
jge
in
xor
sbb
xchg
xor
cwde
test
pop
push
mov
out
cmp
jg
int3
mov
retf
scas
xor
aam
call
mov
ds
ds
jge
shl
sub
cmp
sar
sahf
push
adc
mov
sub
rcr
(bad)
ficomp
cmp
sub
dec
jg
adc
stos
dec
pop
xor
cmps
cmp
sti
push
repnz
push
sbb
mov
push
lods
test
mov
fldcw
inc
or
out
or
test
push
(bad)
xchg
int
dec
(bad)
in
bound
in
mov
shl
pop
sbb
(bad)
mov
push
ret
(bad)
pop
outs
jne
add
push
inc
data16
xchg
push
adc
test
pushf
push
push
sub
dec
out
push
jbe
push
mov
cli
add
sub
mov
inc
or
pop
out
push
stos
es
xchg
or
xchg
repz
or
dec
push
sbb
arpl
dec
lahf
cdq
inc
jle
xor
(bad)
fnsave
(bad)
retf
lds
add
into
fist
ret
dec
or
adc
sbb
lea
jl
stos
push
or
or
jl
adc
mov
inc
mov
pop
xchg
cmp
pushf
in
push
aaa
cdq
fwait
push
(bad)
loopne
and
mov
sahf
push
scas
sub
cmp
xchg
or
ret
fidivr
add
mov
mov
mov
(bad)
and
jl
les
mov
call
add
cmp
inc
sub
xchg
adc
jno
stos
push
ja
rcl
ja
fmul
out
popf
and
hlt
stc
cmp
outs
leave
shr
jmp
and
pusha
jecxz
cmp
test
mov
mov
rol
fimul
sbb
pop
sti
les
fsubr
jmp
mov
out
xor
ret
jb
arpl
pop
mov
mov
sub
dec
fidivr
adc
ds
cwde
xor
jnp
and
jmp
ds
stos
repz
sbb
xor
loop
pushf
(bad)
icebp
pop
inc
(bad)
movs
scas
cli
pop
fwait
sub
retf
outs
jmp
sbb
jns
out
arpl
jo
mov
daa
adc
test
test
rcr
les
int3
xchg
scas
mov
pop
pop
mov
aam
and
mov
dec
sub
icebp
cld
mov
sbb
mov
repz
bound
outs
push
xchg
mov
dec
lea
repz
loope
xchg
mov
sbb
mov
bound
sbb
push
jge
dec
add
rcr
sahf
cmp
xchg
repnz
imul
jl
call
jae
xchg
cmps
pop
shl
sti
lods
bound
gs
add
xchg
fs
cmp
or
test
lea
in
xchg
or
loop
push
mov
adc
(bad)
stos
dec
jae
cmp
adc
sbb
(bad)
inc
dec
lods
leave
cmps
adc
xchg
rol
sbb
xor
cmp
leave
jo
imul
bound
(bad)
push
mov
pop
inc
mov
cmp
cmp
repnz
rcl
mov
daa
into
pop
mov
popa
push
hlt
mov
cmps
fnsave
ja
sub
ror
push
add
xor
cmc
arpl
das
add
lods
pusha
cmps
jp
sbb
adc
shl
push
sbb
pop
dec
retf
sbb
fcom
sbb
fldcw
std
scas
mov
push
push
dec
in
mov
jg
or
mov
nop
push
sbb
mov
ror
int3
pop
movs
xor
gs
pop
inc
outs
adc
cmp
xchg
in
push
or
icebp
xor
push
repz
cmp
(bad)
enter
push
jge
imul
je
ret
jmp
jne
rcl
lahf
inc
and
pop
push
jle
les
push
adc
ret
jl
mov
adc
hlt
jnp
ins
pop
add
das
stos
push
xlat
fwait
cmps
arpl
inc
ror
scas
rcr
sub
push
fsubr
inc
cmp
fcom
sub
pop
sbb
mov
jns
and
sbb
jns
sub
inc
or
call
push
jge
outs
fmul
jmp
inc
in
aad
(bad)
sahf
fisttp
jbe
ror
sub
lods
inc
adc
out
jne
fadd
fadd
inc
push
pop
xchg
dec
fcmovnb
retf
or
add
push
mov
int
mov
aaa
or
xchg
stc
test
jbe
or
jecxz
or
jl
or
jns
aaa
cwde
outs
ret
pop
mov
mov
dec
retf
xchg
leave
jl
shl
pop
aaa
add
aaa
test
xchg
fld1
xor
popa
leave
mov
cmp
pop
xor
inc
pop
and
xor
cmps
shl
(bad)
call
jecxz
mov
rol
shl
bnd
lahf
mov
jle
push
sbb
jp
call
sub
jno
jns
sti
xchg
ror
pop
push
imul
pop
xchg
jmp
sti
hlt
lods
test
enter
lds
and
out
data16
sub
jg
into
fiadd
mov
mov
push
repnz
mov
jl
xor
cmps
pushf
hlt
inc
ins
or
bound
lock
xchg
in
out
jg
dec
mov
dec
and
fist
mov
sub
mov
loope
int3
xor
repnz
std
movs
add
inc
test
movs
int3
dec
aas
push
call
lods
push
ffreep
cwde
out
add
or
ret
dec
cmps
sbb
int
and
clc
in
(bad)
sub
or
fld
test
repnz
int3
xchg
dec
test
mov
mov
test
repz
std
shl
in
jno
fs
cmp
icebp
inc
retf
(bad)
test
rol
(bad)
jbe
pop
jb
int
in
push
inc
enter
cmp
adc
mov
pop
neg
js
mov
jge
mov
not
mov
mov
idiv
pop
ja
cld
sub
jnp
push
pop
pop
mov
into
scas
bnd
hlt
js
pop
cs
push
(bad)
mov
sti
xchg
xchg
sub
sbb
ds
jbe
sbb
lods
rol
xor
push
mov
(bad)
mov
fidiv
ja
jg
stos
call
(bad)
xchg
cmp
jmp
out
push
scas
sub
jo
retf
ss
mov
test
sub
pop
push
icebp
nop
xor
pop
mov
repz
stos
test
push
xor
int3
das
xchg
ret
mov
cmp
ret
mov
int
xor
ret
inc
jl
js
dec
ds
jle
ins
ins
xchg
inc
dec
mov
cmc
inc
(bad)
mov
push
scas
into
mov
out
loop
shl
xor
push
dec
rcl
mov
push
dec
jge
jnp
and
lahf
gs
or
push
dec
dec
in
xchg
jge
inc
call
aaa
dec
mov
ret
sub
(bad)
xlat
xlat
or
fild
(bad)
jg
pop
dec
mov
sbb
aam
movs
(bad)
jle
mov
(bad)
push
imul
repz
xchg
test
adc
fucom
stc
xchg
test
pop
pop
cmps
sbb
cmc
and
enter
clc
test
push
in
ss
cmp
mov
daa
and
xchg
ret
outs
mov
xchg
fisttp
in
xor
sub
and
xor
inc
leave
in
nop
or
and
pushf
or
je
ret
cs
gs
xor
mov
mov
adc
jmp
pusha
aaa
mov
pop
in
dec
std
int3
jp
(bad)
loop
ins
test
jnp
retf
sub
(bad)
cmp
out
int3
xor
inc
dec
das
fcomi
inc
pop
lods
mov
dec
fstp
(bad)
add
popa
iret
pop
pop
cmps
mov
fdiv
mov
arpl
mov
inc
aad
pushf
or
(bad)
and
(bad)
faddp
push
add
cld
mov
jae
xchg
pop
sbb
repnz
add
jb
dec
rcr
test
fdivrp
fs
test
(bad)
repnz
(bad)
cmc
loopne
cli
xchg
(bad)
xchg
jl
mov
adc
inc
sbb
cmp
xor
les
or
movs
adc
test
outs
(bad)
test
out
idiv
or
adc
push
xor
cmp
dec
cmp
outs
sub
and
stos
push
mov
mov
inc
sub
and
popf
xchg
retf
ja
cmp
stc
repnz
push
jbe
fidivr
and
ficomp
jb
arpl
retf
loop
sbb
pop
mov
push
clc
xchg
repz
idiv
push
adc
repnz
jge
inc
fsub
test
push
pop
lea
jmp
retf
dec
cmc
retf
cmp
test
mov
std
cmp
ss
pop
cmp
jmp
stc
push
repnz
sub
icebp
jp
push
sahf
xchg
cmps
mov
fdivp
je
sar
mov
sti
es
sahf
in
ret
std
push
xchg
addr16
mov
jge
xlat
les
sub
sub
fs
cmps
scas
imul
outs
pop
into
push
imul
jno
fisub
repz
cdq
mov
push
sahf
popf
sbb
rol
mov
adc
popf
adc
fld
call
repnz
xchg
pop
sub
or
pop
into
inc
mov
adc
shl
inc
cmps
(bad)
adc
xor
rcl
fsubr
jle
call
dec
mov
pop
pop
ret
scas
mov
lahf
push
xor
ror
adc
ins
ins
xor
imul
push
sbb
xor
and
mov
test
(bad)
fcom
jle
repnz
xor
mov
mov
repnz
retf
ja
sbb
inc
es
sub
mov
cs
dec
mov
pop
xor
std
dec
xchg
rcr
jl
xchg
popa
lods
rcl
push
aam
adc
sub
bound
repz
cmp
sub
scas
push
cmp
pushf
jle
add
sti
cmp
test
pop
and
fcomip
outs
leave
arpl
test
xchg
or
lea
adc
cmp
ss
pop
loopne
push
adc
or
aaa
(bad)
push
or
mov
mov
xor
lods
stos
arpl
push
pushf
outs
or
add
mov
xchg
dec
(bad)
sar
shl
loop
or
fs
inc
jp
aad
je
mov
add
xor
ins
mov
mov
lahf
or
fbld
iret
sub
dec
cld
in
enter
(bad)
push
(bad)
adc
jns
(bad)
mov
out
mov
js
sub
(bad)
int
pop
test
mov
iret
out
sub
cdq
call
iret
fs
add
push
icebp
mov
adc
dec
retf
in
shl
add
(bad)
push
inc
adc
lds
lods
cld
loopne
sar
and
inc
or
sbb
imul
push
mov
mov
es
dec
enter
pop
jmp
sbb
pusha
add
mov
outs
cmp
inc
add
mov
(bad)
dec
cmp
or
es
loopne
pop
or
push
call
movs
xchg
inc
pusha
jae
xlat
pop
mov
ficom
jb
rcl
stos
int3
adc
dec
test
hlt
loope
adc
mov
int
dec
or
or
inc
add
ins
push
jle
mov
xchg
stc
add
(bad)
js
xor
xchg
enter
in
sbb
jo
out
stos
mov
dec
jle
adc
aam
std
mov
leave
xor
jne
push
push
mov
mov
movs
enter
lock
mov
int
xor
lods
ss
loope
pop
daa
add
imul
rcl
mov
push
retf
dec
push
outs
icebp
inc
mov
or
jae
sbb
mov
xor
pop
jle
push
jl
scas
clc
sub
pop
push
xchg
out
cmp
xchg
dec
push
mov
leave
sbb
je
retf
jae
or
iret
push
mov
sbb
movs
mov
(bad)
popa
in
leave
xor
adc
leave
push
xchg
xchg
bound
xchg
inc
stos
adc
adc
addr16
out
xor
push
jae
lahf
aaa
ret
jg
(bad)
pop
in
dec
rcr
mov
xchg
ss
mov
int
aam
fcomp
rcl
scas
bound
(bad)
adc
call
xlat
dec
les
inc
mov
cmps
xor
(bad)
clc
sbb
(bad)
or
fs
idiv
sbb
or
mov
into
repnz
sahf
cmp
scas
mov
xor
fbld
adc
in
push
mov
out
imul
dec
push
pop
rcr
rcr
rcr
retf
test
arpl
sbb
pop
or
pusha
xchg
cmp
lock
mov
push
and
call
pop
into
push
dec
mov
inc
pop
fld
(bad)
jo
jmp
lea
sbb
and
mov
jecxz
xchg
cli
pop
inc
mov
mov
nop
jno
push
xor
retf
or
lahf
lds
loope
cmp
test
jle
aam
retf
into
sbb
lds
sub
sti
mov
movs
ins
pop
sub
cmp
jp
cmp
push
mov
xchg
aaa
cmp
aam
cld
adc
lahf
cmp
mov
lea
out
sub
cmp
jb
leave
(bad)
lock
movs
call
add
es
enter
mov
lahf
mov
pusha
add
sbb
fdivr
and
jmp
mov
sbb
push
daa
iret
push
clc
or
dec
add
sub
pop
adc
mov
int
cli
sub
les
sbb
adc
mov
retf
into
sbb
pop
movs
push
shr
fsub
int3
shr
out
imul
into
sub
int3
retf
clc
cmp
and
and
sub
data16
adc
pop
(bad)
adc
aam
sub
ins
in
(bad)
es
into
sub
pop
int
mov
xor
cmp
adc
cmp
fwait
stc
jl
fcom
mov
or
ds
push
inc
sub
push
sti
inc
xchg
sbb
push
or
add
out
inc
jbe
xor
mov
cs
(bad)
jle
xchg
jmp
xor
mov
xchg
sub
test
(bad)
xchg
js
dec
mov
cmp
ja
in
jmp
cmp
xor
pop
sub
addr16
adc
or
repz
dec
pusha
pusha
dec
mov
push
ret
call
loopne
cwde
or
(bad)
xlat
popa
les
xor
cmc
jb
pop
repnz
cmps
mov
mov
daa
xor
and
loopne
fdivr
adc
ret
xchg
cdq
das
sub
push
push
loopne
and
fidiv
outs
push
les
or
std
or
adc
mov
popf
add
and
in
dec
mov
add
xor
pop
xchg
ds
(bad)
jmp
ja
pop
push
inc
lock
jle
pushf
jo
shl
iret
mov
mov
mov
add
adc
fwait
push
addps
das
push
ins
ret
ror
sub
dec
inc
xor
sbb
pop
mov
jb
mov
(bad)
fdiv
movs
jae
div
mov
(bad)
fsubr
adc
cmp
in
das
push
lock
and
ret
(bad)
push
outs
ins
popa
dec
aaa
mov
and
push
int3
fadd
inc
iret
scas
aad
cwde
les
dec
sar
das
fs
mov
sbb
sub
mov
push
scas
cmps
sti
in
push
stc
mov
lods
inc
arpl
mov
dec
pop
dec
xchg
bound
push
sbb
jb
push
cmp
sub
scas
hlt
sti
pushf
sub
xchg
jns
scas
adc
(bad)
sub
push
mov
and
push
call
mov
adc
dec
mov
mov
or
data16
jmp
jmp
lock
sub
mov
popf
popf
push
int3
das
inc
cli
push
jne
or
les
test
mov
adc
push
jmp
repz
imul
fwait
xor
test
add
xchg
mov
xor
test
push
jmp
lea
push
jae
repz
jbe
lods
sub
(bad)
fdivr
loopne
jmp
je
mov
xchg
push
(bad)
pop
mov
cmp
pushf
je
jno
out
push
test
cwde
sbb
mov
or
mov
jl
pop
ret
shl
cmp
gs
fisubr
cmp
and
arpl
sbb
mov
mov
outs
and
jle
cmp
inc
mov
adc
rol
or
jnp
(bad)
mov
daa
push
dec
(bad)
ret
push
sahf
xchg
dec
bound
lods
mov
mov
(bad)
mov
ror
stos
dec
mov
shr
(bad)
retf
push
jae
mov
mov
in
and
pop
pop
sbb
inc
mov
aam
jmp
out
pop
ins
(bad)
push
movs
hlt
mov
push
(bad)
jmp
and
loope
loopne
imul
std
enter
pop
jne
mov
sbb
nop
dec
leave
mov
pop
inc
lds
in
stos
xor
add
jae
push
sub
aaa
sbb
inc
movs
adc
maskmovq
test
sbb
mov
inc
(bad)
cmp
adc
rcl
repz
test
and
mov
aam
sub
dec
into
call
aas
cmc
ficom
add
fwait
xlat
loop
pop
mov
pop
out
loopne
inc
(bad)
(bad)
and
push
cmp
test
sbb
add
push
jb
jno
dec
mov
cmp
or
out
mov
dec
push
pusha
mov
jbe
pop
adc
out
das
daa
sar
(bad)
out
fucomp
neg
inc
ret
rol
jmp
idiv
stos
inc
test
or
or
dec
mov
jecxz
enter
(bad)
push
jg
mov
inc
in
aam
jp
repnz
jp
stc
xor
mov
movs
inc
fisubr
(bad)
in
dec
test
cmps
loop
(bad)
and
jp
mov
mov
pusha
out
mov
cmps
xchg
jmp
sbb
push
push
retf
mov
(bad)
aad
mov
fucom
lock
adc
frstor
int
out
xor
pop
sub
and
cdq
icebp
ror
into
dec
sub
xor
cmp
jmp
mov
arpl
cmp
and
add
xchg
fnstsw
in
xchg
or
lock
ja
push
test
cwde
lods
in
loopne
loop
xchg
cmp
add
(bad)
jge
sbb
scas
int3
bound
(bad)
dec
inc
inc
in
push
lods
dec
push
jb
gs
addr16
dec
ficom
outs
push
gs
jmp
push
dec
inc
adc
dec
rol
mov
mov
(bad)
cmp
stos
lods
cmc
mov
jp
mov
push
push
add
stc
or
or
and
pop
dec
je
or
lea
shr
bound
xchg
jge
jmp
(bad)
fnstenv
es
xchg
(bad)
nop
movs
(bad)
cmp
bound
dec
mov
mov
cmps
fsubr
ss
xor
jmp
adc
adc
push
mov
shr
movs
out
xchg
loope
stos
mov
ret
fbld
stos
shr
add
xchg
jne
loope
pop
data16
into
data16
in
jae
pop
test
pop
scas
sbb
or
icebp
dec
das
ret
cmp
idiv
es
out
add
loope
in
mov
xchg
scas
scas
out
pop
jecxz
dec
das
rcr
pop
xchg
stos
(bad)
add
xchg
mov
xchg
bound
sbb
sbb
ins
frstor
shl
test
inc
add
adc
outs
enter
out
jno
pop
cli
sub
in
inc
call
push
ror
iret
mov
mov
push
ret
ret
stos
test
adc
or
or
pop
lods
loopne
or
and
mov
stos
push
pop
cmps
push
loope
jg
jmp
jns
loopne
lods
add
inc
add
popf
popa
scas
add
add
push
sub
xor
sti
sti
ret
cmp
fsub
xchg
shr
daa
xchg
sti
push
cmp
add
imul
into
fstp
popf
mov
ss
or
lds
inc
pop
lock
aas
mov
sti
lods
js
pop
push
sub
sbb
or
rcr
ins
es
push
je
aas
not
jnp
loop
inc
sti
add
xor
int
sub
mov
mov
push
dec
mov
fs
xlat
fcom
sub
cdq
les
movs
in
push
jns
addr16
push
push
and
dec
add
int3
or
inc
inc
pop
inc
aaa
and
test
xchg
sub
or
rcl
mov
cld
cld
test
sub
int
push
mov
(bad)
pop
test
push
popa
push
outs
jg
cmp
cmp
aas
pop
mov
out
pop
cwde
add
(bad)
aaa
cmp
sti
dec
fidivr
push
icebp
mov
xchg
ret
sbb
leave
jecxz
popa
cmc
pop
test
sbb
pushf
pop
sub
xchg
jnp
sub
(bad)
clc
out
fadd
stos
xchg
mov
ja
hlt
pop
fisubr
(bad)
and
and
mov
mov
sub
adc
xor
mov
push
jmp
jmp
jge
mov
repnz
int
xor
paddb
push
mov
(bad)
ins
fidivr
ds
nop
loope
mov
push
xchg
inc
aam
push
popf
push
jae
cmp
lods
fscale
loope
gs
xor
aad
mov
pop
nop
xchg
sbb
arpl
cmps
mov
pop
or
test
test
xchg
cld
xchg
dec
repnz
sbb
shl
repnz
jmp
dec
movs
mov
mov
sbb
mov
call
add
fimul
pop
xor
in
pop
addr16
call
inc
jae
in
mov
test
daa
or
cmps
retf
inc
pop
bound
scas
aad
inc
nop
lods
pop
fcmovnb
push
ins
xchg
aas
sbb
pop
fsub
mov
movs
stc
jle
jno
sub
daa
icebp
adc
std
cmp
jae
mov
adc
retf
in
dec
and
dec
inc
movs
inc
lea
(bad)
fild
mov
outs
out
retf
xor
mov
xchg
jmp
nop
(bad)
sub
scas
fst
xchg
ds
lea
adc
dec
aad
sbb
scas
aaa
scas
push
sar
imul
cmp
mov
outs
inc
sbb
xchg
lahf
jp
and
sbb
jns
les
mov
xor
push
fistp
mov
outs
aad
xchg
js
bnd
xlat
stc
call
xchg
jbe
pop
adc
popf
dec
(bad)
xor
lahf
add
lods
adc
fbld
mov
div
xor
pop
add
fist
call
int3
mov
cmp
mov
dec
mov
rdpmc
mov
rol
cmp
ja
scas
or
out
mov
gs
pop
sub
inc
(bad)
call
movs
cmc
dec
(bad)
lahf
enter
xchg
dec
adc
sub
or
ins
inc
(bad)
out
popf
lods
mov
jge
les
dec
mov
mov
pop
add
nop
inc
loope
sub
lea
push
xchg
sub
pop
bound
push
(bad)
sub
dec
in
push
dec
ins
ret
ret
test
ror
outs
lea
and
push
add
pop
retw
add
mov
ss
ficom
pushf
jp
nop
popa
std
(bad)
sbb
inc
push
mov
sub
inc
inc
adc
or
(bad)
xor
sub
jnp
mov
jae
shl
sub
icebp
js
and
mov
cmp
add
push
fsubr
jp
lahf
adc
pop
inc
ins
or
test
lea
push
dec
ror
or
mov
in
mov
sbb
inc
mov
push
pop
js
xchg
or
mul
cwde
sub
stc
mov
daa
test
(bad)
push
sub
cmp
or
and
cmp
loopne
adc
jbe
(bad)
sbb
and
adc
repz
cli
pop
inc
les
dec
lea
sbb
mov
dec
jns
(bad)
repnz
dec
dec
push
shl
retf
fbstp
dec
gs
lahf
push
cmp
in
das
or
mov
popf
test
or
loope
dec
sbb
aas
sbb
cmps
les
mov
mov
fbld
push
xchg
adc
sti
mov
xchg
pop
pop
int3
push
jmp
stc
rcl
inc
mov
cmp
adc
test
in
jle
jg
jl
xor
call
push
cmp
sub
retf
jp
push
mov
adc
push
ret
cmp
rol
and
test
add
pop
imul
shl
shl
in
cmp
xor
cs
stos
dec
lods
jl
ds
test
cli
rcl
stos
mov
or
clc
jbe
(bad)
shl
cmp
lea
cs
push
dec
add
inc
outs
cwde
mov
sbb
add
rcl
sub
adc
mov
push
mov
pop
mov
cmp
ins
inc
sahf
mov
outs
mov
adc
cmps
inc
dec
fidivr
arpl
in
shr
sbb
mov
lods
inc
inc
push
sub
aad
std
xchg
f2xm1
lods
cmp
je
popa
mov
add
out
mov
pusha
ins
mov
jg
hlt
test
fs
sub
pop
scas
leave
jo
addr16
sub
mov
nop
pop
dec
mov
sub
pop
jno
jnp
fsub
mov
fs
mov
and
mov
pop
(bad)
xor
in
(bad)
test
mov
bound
das
(bad)
mov
popf
sub
dec
ins
xchg
test
ins
xchg
mov
sahf
sti
mov
(bad)
daa
stos
pop
pop
retf
fisttp
loop
adc
jg
cmp
ins
lahf
loopne
lods
and
cwde
movs
fnstsw
out
js
adc
aas
add
mov
div
pop
cmp
dec
gs
sbb
lock
popf
inc
and
lods
lahf
cmps
xchg
jns
lahf
pop
push
fcmovbe
fild
add
aam
sub
xor
pusha
ret
cmp
out
rcr
dec
popa
xor
jns
ja
jns
mov
aas
test
xor
jmp
xlat
push
mov
rcl
sar
push
xor
ror
xchg
test
and
sub
push
daa
cmp
sbb
mov
iret
mov
mov
pop
sub
dec
push
sub
jecxz
cdq
mov
push
(bad)
loop
(bad)
int
dec
repz
das
stos
lds
xchg
int
cmp
fisttp
shl
xlat
scas
jp
mov
add
dec
(bad)
jle
push
mov
add
mov
jnp
cmp
push
retf
sbb
xor
push
add
mov
mul
pop
xor
mov
cld
xor
push
push
aas
xor
xchg
ficomp
cmp
mov
jnp
adc
movs
fistp
jp
lods
jo
shr
mov
push
int3
mov
pop
dec
out
cmp
push
dec
xchg
xchg
push
adc
es
cmp
pop
mov
cmc
cli
pop
jp
sar
lods
lods
das
mov
ror
mov
adc
sub
js
stos
xchg
outs
cmp
cmp
mov
push
ins
push
scas
lods
push
adc
sbb
shr
jmp
push
cli
cmp
sysexit
sbb
sbb
push
push
cmp
jo
or
inc
ret
retf
mov
movs
dec
test
es
(bad)
xlat
icebp
stos
xor
out
cmp
and
jae
add
dec
inc
inc
stos
push
ins
dec
test
mov
sbb
pop
fisub
dec
div
sub
sbb
xor
push
cmps
push
xor
jp
cmp
xchg
cli
sti
mov
out
in
outs
xlat
nop
dec
fcomp
sub
(bad)
dec
jge
inc
test
mov
xor
cmp
mov
dec
mov
inc
or
imul
aad
add
adc
and
hlt
bnd
lock
movs
sub
out
loopne
in
push
dec
(bad)
scas
add
add
mov
xchg
(bad)
fld
dec
fs
adc
inc
adc
dec
int
clc
outs
ds
jg
rol
add
jmp
xor
rol
fsub
sub
mov
xchg
push
dec
add
les
(bad)
or
mov
lods
xchg
fstp
js
adc
mov
mov
nop
leave
ja
add
movs
sub
pusha
xchg
cwde
mov
retf
and
jne
mov
jns
ror
ja
cmp
dec
xchg
pushfw
add
cld
rol
stc
mov
jp
mov
mov
sbb
jnp
ret
push
inc
or
out
enter
inc
rol
sbb
(bad)
pop
push
aas
push
xchg
test
std
je
adc
ins
mov
icebp
pop
jae
nop
xchg
sub
mov
popa
lods
mov
jecxz
nop
push
add
add
sbb
pop
js
mov
sub
pushw
std
add
mov
outs
stos
sbb
push
sub
push
in
ficom
mov
cmp
mov
mov
mov
es
inc
mov
lar
xor
ss
and
cmps
(bad)
xchg
push
fidiv
retf
pop
stc
jbe
mov
jno
ins
es
fs
adc
mov
jnp
mov
into
sub
cs
out
cmps
jne
mov
push
dec
fimul
in
dec
mov
movs
imul
mov
scas
retf
cli
pop
pop
icebp
mov
dec
aam
cmp
sub
push
xchg
sub
jne
icebp
sub
inc
fisttp
push
inc
rcl
out
stos
sub
jnp
xchg
cld
loop
pop
jmp
shl
cmp
or
out
nop
jg
inc
cs
rol
popa
jbe
cld
sbb
push
sbb
xchg
inc
test
sar
sar
sbb
and
cmp
lds
pop
and
fsubrp
push
out
mov
mov
inc
pop
mov
jo
outs
es
cmps
imul
xor
stc
cmp
xor
sub
aas
dec
or
jnp
xchg
adc
lea
mov
bound
shl
out
outs
in
lods
adc
outs
sbb
or
add
call
push
push
out
lods
aad
out
lods
cmp
mov
mov
and
push
arpl
inc
(bad)
or
cmp
and
ret
adc
test
out
fisubr
or
sar
fucomip
cdq
push
sbb
inc
data16
push
xchg
xor
cmp
sbb
inc
jbe
out
or
mov
ins
dec
or
xchg
data16
call
mov
ficomp
mov
cmps
pop
test
jg
and
cwde
adc
(bad)
adc
push
repz
or
and
pop
int3
mov
mov
sar
jl
inc
mov
inc
mov
xchg
test
inc
or
xadd
imul
test
jle
dec
adc
xor
test
xor
pop
or
test
dec
sbb
cli
sbb
cmc
retf
mov
add
daa
mov
fild
push
ds
cwde
add
adc
ret
pop
sbb
iret
push
mov
in
mov
popa
dec
repz
xor
fwait
call
and
cmp
sbb
arpl
mov
nop
dec
jp
fistp
add
retf
pop
mov
xor
outs
xor
shl
bnd
(bad)
in
push
xchg
ja
out
xchg
lods
mov
sub
or
ret
or
js
popf
add
outs
lock
xor
adc
xchg
cli
lods
gs
and
mov
test
cmp
retf
jmp
add
or
sbb
and
fmul
add
xor
lock
lds
aaa
addr16
cmp
sbb
(bad)
fsub
mov
pop
jecxz
int3
xor
or
(bad)
or
lods
daa
mov
dec
cmp
loop
call
arpl
test
push
sub
addr16
aad
pop
nop
mov
int3
loope
std
mov
push
rcr
add
cmp
movs
test
push
sbb
retf
ins
lds
cs
mov
out
repz
daa
retf
out
cs
aam
inc
push
arpl
popf
xor
mov
clc
push
shr
outs
push
mov
repz
jmp
dec
pop
sub
(bad)
out
mov
loope
push
outs
ja
add
scas
jno
push
adc
and
xor
pop
ins
mov
outs
(bad)
or
xchg
out
mov
call
cld
outs
sbb
pop
aas
(bad)
in
push
imul
sub
mov
push
dec
sti
popa
jae
lods
or
ins
xlat
outs
push
test
mov
out
mov
ins
outs
mov
mov
xor
mov
inc
fidiv
cmp
xchg
(bad)
out
jg
ror
scas
adc
es
and
stc
mov
adc
sbb
mov
xor
mov
cmc
adc
push
data16
mul
mov
ret
mov
xor
(bad)
pop
jle
es
lock
cs
orps
mov
sbb
mov
or
int3
or
pop
fs
cmp
leave
inc
jle
test
mov
jbe
adc
mov
retf
jle
add
adc
xor
into
(bad)
arpl
pop
out
inc
xor
jecxz
mov
aas
rcl
cmps
xchg
test
inc
sub
or
arpl
dec
sub
or
jno
(bad)
sub
out
(bad)
sbb
test
jae
or
(bad)
jecxz
es
repz
sbb
ins
mov
stos
aas
addr16
inc
push
jno
push
enter
retf
sbb
mov
cmp
mov
mov
gs
std
inc
sbb
add
xchg
mov
pop
jle
dec
mov
mov
dec
imul
repz
in
pop
or
jmp
shr
movs
push
jnp
pop
adc
fstp
sbb
xor
mov
cs
out
sbb
ins
sbb
sub
mov
popf
jb
push
push
test
movs
lods
stc
movzx
loopne
push
or
ins
loope
push
push
repz
mov
add
cmp
adc
cmp
mov
aaa
pop
(bad)
retf
outs
test
xchg
push
or
sbb
ret
mov
dec
or
movs
movs
xchg
pushf
adc
pushf
sub
fldcw
retf
ins
movs
dec
leave
jmp
lahf
fidivr
mov
fdiv
add
shl
sbb
daa
pminsw
sub
hlt
loopne
xor
scas
jge
fisubr
shr
and
mov
scas
loop
cmc
leave
fidivr
fild
cmps
mov
gs
sub
add
popf
push
(bad)
retf
loope
inc
push
out
jp
sbb
out
inc
cwde
test
cmp
test
inc
or
fiadd
lock
cs
fld
test
pop
lar
xchg
xchg
sbb
cwde
imul
call
add
(bad)
frstpm(287
out
frstor
inc
dec
jns
in
loope
outs
pop
add
bound
xor
mov
push
test
adc
xlat
pushf
mov
outs
adc
sub
xchg
pop
inc
xor
rcl
pop
or
inc
cmp
sub
cli
push
adc
fbld
(bad)
call
mov
mov
jbe
or
mov
dec
retf
mov
cld
jl
jmp
xchg
sbb
xor
(bad)
push
pop
in
xchg
mov
push
add
loopne
add
out
ret
js
or
fwait
jne
inc
xor
sub
into
sbb
scas
mov
jbe
xchg
push
in
cdq
add
push
push
jl
or
pop
xchg
sub
imul
lea
push
test
sbb
aam
mov
je
mov
addr16
sub
into
lods
sub
outs
jbe
mov
jmp
and
dec
pop
push
inc
jnp
jmp
and
scas
cmps
(bad)
clc
cld
ja
cmps
popf
xlat
mov
in
inc
popa
dec
pop
add
int
mov
or
inc
mov
lods
pop
jge
mov
xor
cs
(bad)
mov
cmps
and
mov
mov
xor
push
stos
sahf
mov
hlt
xor
pop
mov
pushf
in
pop
mov
and
aad
mov
movs
cld
adc
push
inc
jnp
jecxz
mov
cmp
mov
xchg
mov
push
cmp
mov
pop
ror
(bad)
shr
ins
outs
dec
cs
cwde
mov
fdiv
inc
xchg
sar
push
es
ins
cmp
mov
icebp
mov
sbb
xor
adc
dec
jp
adc
add
stos
inc
pop
aad
or
inc
lock
rcr
mov
cmp
inc
sub
cmp
and
inc
cdq
mov
lods
mov
iret
xor
repz
jnp
popf
dec
rol
mov
add
icebp
daa
in
call
jns
sbb
sub
jae
push
jno
or
shl
fdiv
and
xchg
inc
inc
mov
(bad)
fstp
fstp
fld
mov
aad
mov
movs
mov
scas
pop
fistp
jne
retf
xchg
std
or
aas
jle
xchg
add
call
bswap
pusha
imul
pop
xchg
pop
lea
outs
inc
repnz
enter
ret
adc
cmps
xor
je
cmp
inc
mov
xchg
mov
in
xchg
je
mov
adc
mov
jmp
movd
jne
adc
mov
adc
iret
in
push
dec
and
mov
imul
loop
dec
mov
jecxz
mov
lahf
stc
rcr
mov
std
xchg
cmp
mov
mov
pop
pop
xor
mov
or
ja
or
scas
shr
mov
ins
mov
cdq
or
daa
cmp
xchg
in
shr
scas
pop
fwait
sub
fidivr
scas
inc
adc
inc
data16
dec
xchg
sbb
movs
mov
mov
std
inc
(bad)
hlt
push
je
adc
mov
les
dec
or
fs
mov
rcl
stc
aaa
and
jp
push
lods
out
sub
inc
imul
push
mov
retf
pusha
mov
inc
mov
add
(bad)
fdivr
lods
in
and
push
clc
int3
xor
and
mov
push
lock
sub
dec
jg
add
and
fcomi
sub
adc
mov
push
cmp
fs
into
(bad)
cdq
in
inc
shr
push
iret
movs
jo
dec
push
add
jns
push
jnp
idiv
cmp
mul
(bad)
rcr
fcom
push
xor
sti
retf
mov
push
pop
gs
mov
ins
or
sbb
das
xor
dec
mov
pop
add
jae
(bad)
sahf
cmp
sub
outs
add
js
sub
aas
mov
test
or
dec
dec
dec
push
std
mov
enter
repz
std
ss
scas
das
les
cmp
fdivr
pop
sar
(bad)
std
xchg
iret
mul
dec
icebp
sub
pop
test
or
push
ja
pop
sahf
add
out
add
fist
int
pop
pop
push
jmp
and
div
or
xchg
xchg
mov
out
mov
pop
call
mov
enter
out
sbb
les
or
adc
jp
sahf
movs
mov
mov
call
pusha
int
xor
push
into
pop
sub
int3
sbb
imul
cld
imul
iret
pop
push
adc
(bad)
adc
sbb
pop
out
jne
dec
ret
cmp
or
sub
xchg
les
cs
int3
les
in
sub
jmp
mov
xchg
arpl
dec
adc
icebp
pusha
jg
xchg
jg
mov
mov
mov
xor
lods
mov
mov
dec
daa
jecxz
push
call
outs
cmc
mov
loop
out
inc
sbb
ins
pop
test
stos
fwait
or
lods
das
cmp
and
add
lea
scas
shr
test
adc
add
pop
arpl
out
nop
push
dec
adc
test
jge
(bad)
mov
lds
push
clc
ds
pusha
pop
jmp
retf
jnp
arpl
loopne
(bad)
adc
js
scas
dec
dec
cmps
call
retf
ror
pop
(bad)
sub
jmp
lea
je
add
add
movs
push
mov
xlat
mov
and
outs
mov
mov
nop
xchg
push
pop
cwde
cwde
addr16
cli
and
push
jmp
add
stos
ds
pusha
hlt
mov
movs
int3
mov
test
jno
mov
repnz
xchg
add
lods
call
lds
fdiv
jbe
dec
sub
mov
sbb
or
mov
pop
mov
test
dec
ss
sahf
in
rcl
mov
add
dec
and
sar
imul
js
cmps
or
mov
fldenv
xor
cmp
xor
mov
inc
test
jmp
cmp
icebp
(bad)
fnstsw
jecxz
ss
jg
rcr
cmps
adc
leave
add
cmps
loope
xchg
ss
or
dec
ins
and
or
sbb
imul
fwait
dec
or
retf
int3
push
out
js
mov
xchg
repz
cmp
call
out
std
adc
pushf
aas
or
jno
aam
mov
arpl
sub
and
stos
(bad)
cmps
lahf
cmps
mov
jl
imul
(bad)
repnz
cdq
icebp
(bad)
into
adc
inc
sbb
ss
and
jno
not
and
cmp
push
xchg
jp
sub
pop
call
push
mov
pop
rcl
fs
(bad)
mov
cmp
push
loop
mov
or
loope
xchg
pop
les
or
add
aad
pop
push
lods
out
test
xchg
imul
loope
xor
in
cmp
jo
dec
sub
pop
jl
neg
add
mov
and
cmps
mov
in
(bad)
imul
daa
hlt
sbb
adc
outs
cdq
lds
(bad)
out
mov
lods
retf
arpl
lds
test
pusha
jmp
fs
mov
pop
movs
xchg
in
enter
js
loop
adc
xchg
push
jb
aad
fimul
xlat
out
mov
add
sar
ss
dec
lds
jbe
daa
mov
mov
mov
add
mov
sub
mov
lahf
cli
and
xchg
and
ins
adc
dec
dec
popa
std
ror
std
push
sub
scas
ror
ds
jg
push
jp
loop
push
jno
add
xchg
outs
scas
add
push
xor
fidivr
mov
jmp
(bad)
(bad)
push
sar
aas
test
cmp
cmps
fiadd
mov
mov
lahf
jg
out
or
inc
aad
popa
bound
clc
or
cld
ins
add
fwait
or
jle
icebp
cmp
mov
test
dec
cmp
popa
cwde
xlat
add
sbb
(bad)
pop
xor
and
ins
xchg
mov
adc
and
or
aad
aad
jno
add
sti
push
(bad)
mov
enter
aas
popf
rcl
jb
sbb
int3
movs
pushf
dec
pop
imul
ror
inc
jne
(bad)
in
mov
ficom
pusha
mov
jbe
cmp
aad
pop
pusha
lods
cs
push
retf
rcl
jmp
add
(bad)
mov
mov
out
ror
fnstenv
cmc
pusha
cdq
arpl
loope
aaa
hlt
mov
xchg
cmp
(bad)
test
into
mov
loopne
cmc
inc
jg
jbe
adc
mov
into
and
out
jmp
lods
lods
(bad)
(bad)
retf
popa
dec
mov
call
jno
scas
not
daa
or
cmps
jo
pop
test
adc
inc
push
mov
daa
sbb
cmps
or
call
in
mov
push
add
or
jne
fsubp
dec
rcr
out
adc
stos
jl
or
inc
mov
pop
push
or
int3
sbb
icebp
bound
inc
push
cmp
idiv
repz
out
pop
adc
push
pop
repz
xchg
ror
add
enter
mov
sub
fidivr
pop
dec
jp
xchg
jo
add
add
or
cmp
push
mov
icebp
call
aas
(bad)
call
cwde
aas
retf
(bad)
inc
adc
mov
jno
lods
clc
ret
clc
xor
fwait
imul
int3
test
and
icebp
and
fstp
sub
inc
test
mov
imul
push
in
(bad)
sti
dec
cwde
cmp
lods
cs
fnstenv
popa
pop
ins
or
xor
xchg
jle
dec
mov
push
mov
sub
mov
or
ins
cwde
xchg
(bad)
push
out
imul
pop
(bad)
and
push
cld
fldenv
icebp
pop
xor
cmp
(bad)
lds
repz
push
cdq
(bad)
mov
dec
shl
out
mov
mov
sbb
test
inc
imul
and
hlt
(bad)
rol
jmp
or
and
out
test
ror
(bad)
es
push
cmps
push
add
xor
mov
popa
retf
clc
push
shl
cmps
ret
or
ficomp
dec
cmp
dec
cmc
add
stc
pushf
pop
enter
mov
jecxz
sub
and
stos
push
pop
adc
mov
ds
iret
jp
ja
or
sbb
jle
div
pushf
call
fidiv
mov
add
cwde
push
fiadd
mov
and
dec
push
xchg
shr
mov
push
jl
mov
js
out
sbb
fwait
xchg
stos
xor
sbb
ja
inc
mov
jbe
das
xchg
mov
pop
out
push
or
(bad)
icebp
cmps
mov
jmp
int3
fwait
sbb
cmp
add
mov
in
fistp
jb
mov
dec
(bad)
loopne
test
sbb
pop
xchg
inc
jmp
sub
retf
and
jle
sti
sub
test
push
push
call
or
xchg
mov
shr
aas
call
rcl
aam
pushf
adc
mov
inc
add
stos
test
popa
loope
pop
push
jae
popa
push
dec
push
push
pop
or
lea
(bad)
int
jmp
mov
jae
add
pop
jae
mov
jge
movs
ins
mov
inc
mov
cmp
aad
mov
icebp
adc
mov
retf
sub
mov
in
mov
and
pusha
(bad)
mov
jne
and
aaa
dec
std
retf
popf
movs
pop
aas
cmp
xchg
add
popa
push
add
xchg
or
push
fadd
push
cwde
pushf
xchg
adc
push
pusha
repz
add
or
mov
sub
out
inc
shl
jnp
test
test
jae
aas
movs
mov
shr
adc
push
push
bound
and
jl
sbb
jmp
pop
das
fs
ins
push
(bad)
mov
cmps
repnz
call
add
addr16
(bad)
int
mov
cs
ins
aam
cdq
repz
mov
jp
pushf
sahf
fwait
test
dec
pop
and
jne
jo
test
dec
ds
arpl
clc
cmps
mov
cwde
inc
sbb
jmp
das
push
aas
ret
shl
mov
aad
(bad)
dec
call
ret
or
ficomp
jns
cmp
in
push
xchg
and
lods
or
push
call
(bad)
jmp
cdq
pop
mov
js
sbb
fs
xor
push
push
adc
cdq
popf
cdq
mov
add
cmp
cmp
xor
(bad)
imul
fxch
pop
xor
pop
push
add
stc
xlat
fld
rcr
sub
and
loopne
addr16
add
push
mov
adc
mov
inc
inc
sub
sub
sahf
xchg
or
jmp
jg
mov
pop
jp
push
xor
icebp
ins
inc
pop
js
cmp
jle
mov
pop
mov
sub
out
shr
pusha
in
mov
stos
xor
jne
test
je
xor
fisubr
imul
stos
pop
xchg
fwait
stos
in
jnp
jbe
(bad)
popf
xor
sub
mov
jmp
pusha
out
rol
mov
les
sub
shr
cmp
fmul
retf
fs
cmc
rcr
fidivr
xchg
jo
fld
inc
(bad)
adc
das
mov
add
mov
push
jmp
mov
or
aam
stos
mov
mov
dec
and
push
push
data16
mov
in
sub
jmp
mov
adc
and
out
cld
push
pop
mov
xchg
call
ja
xor
push
mov
cmp
mov
int3
cmps
add
call
mov
cmp
mov
mov
mov
xor
dec
int
dec
mov
iret
mov
int3
push
adc
(bad)
cli
ja
das
inc
xor
jge
mov
xor
sbb
iret
jle
int3
mov
and
mov
jp
ja
push
mov
int
mov
jae
shl
in
test
mov
cs
cli
sar
mov
xchg
das
pop
movs
sub
stos
(bad)
in
call
push
push
xchg
jo
push
sbb
adc
test
mov
jo
out
mov
xchg
jnp
imul
outs
push
cmc
ret
jno
shr
fisubr
leave
(bad)
mov
dec
lock
and
js
pop
xor
cmp
dec
mov
mov
xlat
xchg
(bad)
dec
stos
cmc
sub
pop
jbe
jmp
cs
lock
(bad)
and
(bad)
jb
sub
fidivr
pop
mov
inc
push
repz
es
fidivr
cli
jmp
push
daa
mov
sbb
jae
repnz
jmp
cmc
add
call
fcom
and
inc
cmp
push
aad
mov
arpl
mov
add
mov
inc
shl
addr16
mov
das
(bad)
pop
adc
test
sbb
pop
fcomp
mov
repnz
out
test
cmp
fdiv
xchg
es
or
pushf
lds
and
mov
push
push
xchg
jne
sar
clc
bound
xchg
idiv
adc
test
pop
popf
out
fs
sub
mov
fnclex
sub
mov
mov
ds
cmp
js
movs
mov
xor
lea
in
add
mov
cwde
mov
mov
mov
out
js
dec
pop
mov
sbb
and
shl
ins
xchg
sub
sbb
add
pop
adc
push
ret
xlat
mov
mov
push
lock
in
in
xor
nop
(bad)
ds
mov
data16
fbstp
inc
or
arpl
add
and
in
repnz
mov
lds
and
sub
xchg
push
mov
test
jae
push
xchg
sub
call
shl
cmp
lock
pop
ror
add
fwait
ds
adc
sbb
ficom
push
cmp
sub
mov
imul
js
add
fst
lock
arpl
adc
sub
out
neg
or
sbb
push
cmp
push
fwait
adc
mov
sar
mov
inc
rcl
(bad)
rcr
cmp
(bad)
scas
xor
int3
jecxz
jnp
bound
das
mov
sahf
inc
inc
push
xor
push
js
inc
cdq
stc
es
jl
inc
xchg
in
mov
icebp
sbb
mov
dec
mov
popf
sbb
lods
in
push
das
hlt
sahf
stos
sti
rcr
pop
push
jno
arpl
sbb
nop
gs
scas
and
mov
test
mov
mov
lods
push
mov
dec
dec
lods
push
mov
bound
movs
push
sub
mov
fisubr
call
dec
cmp
nop
lock
cmps
xor
(bad)
(bad)
mov
bound
mov
push
inc
(bad)
pop
mov
les
test
in
icebp
clc
in
ds
fwait
xchg
call
out
jo
loope
xor
js
push
jns
add
js
fadd
dec
outs
out
pop
daa
mov
lock
inc
(bad)
out
jmp
mov
add
xor
pop
test
clc
fwait
out
mov
cmp
stos
push
mov
mov
inc
add
jns
push
inc
and
aad
aam
dec
fwait
aas
mov
add
retf
and
mov
xlat
dec
cmp
rcr
pop
push
ins
(bad)
jmp
mov
or
mov
inc
fcom
or
cmp
and
daa
sbb
jb
dec
pop
or
(bad)
jecxz
pop
dec
xchg
jle
fsubr
sbb
fimul
sub
mov
push
or
sbb
rcl
iret
rol
popf
sub
adc
test
(bad)
jo
ds
pop
popw
sbb
ret
add
xchg
xor
scas
pop
sbb
inc
sbb
lods
push
cmp
push
adc
movs
aam
shl
jp
in
and
dec
xlat
adc
inc
popf
adc
jmp
pop
jns
dec
cmp
addr16
addr16
mov
pop
pop
or
ins
dec
pop
sub
sbb
cmps
mov
aad
push
push
xor
mov
loop
ds
cmp
fs
and
jmp
rol
mov
test
test
popf
cmps
iret
imul
jecxz
mov
fcmovb
sbb
out
push
mov
inc
xchg
int
movs
jg
mov
push
sbb
popf
rol
pusha
movs
or
aad
cmp
cmp
jb
jecxz
xchg
daa
pop
xlat
dec
out
ret
inc
imul
int3
and
retf
sbb
add
fcom
xchg
pop
push
or
cdq
adc
jb
jb
ret
mov
and
xor
repnz
aas
sar
pop
rcr
jnp
xor
add
fs
jl
rol
dec
lock
jne
xlat
icebp
lock
mov
jo
retf
addr16
rcr
xchg
ins
mov
shl
je
test
adc
rcl
pop
movs
aaa
imul
test
mov
clc
in
push
add
sbb
adc
inc
nop
or
add
stos
int3
sbb
and
rol
rol
inc
out
or
mov
loop
mov
scas
xor
ror
ret
pop
daa
xchg
or
cmp
inc
and
pop
shr
popa
adc
retf
push
sub
loopne
sbb
and
pop
dec
test
aaa
(bad)
sti
pop
jne
shl
out
shl
sbb
call
lock
xchg
cmp
movs
jne
fwait
inc
pop
adc
xor
repz
outs
jno
fild
push
fs
pop
int3
jmp
adc
cmp
inc
jne
mov
mov
inc
pop
xchg
mov
cmp
clc
fmul
ret
inc
ja
jnp
jecxz
jnp
inc
jl
inc
jmp
push
or
pushf
int3
fmul
mov
or
outs
dec
add
in
push
jno
lahf
repnz
dec
test
test
xor
adc
mov
jo
sahf
out
add
xchg
or
mov
and
dec
gs
jae
mov
adc
mov
loop
fmul
repnz
mov
test
leave
(bad)
js
push
jno
sbb
int3
dec
mov
aam
sub
imul
pop
sub
test
inc
loope
test
pop
cmp
inc
fsubr
push
push
dec
les
mov
mov
jns
mov
(bad)
push
test
std
xor
xchg
in
bound
popa
add
and
(bad)
loopne
adc
mov
add
nop
push
mov
pushf
shl
cli
cmp
push
and
scas
jmp
jge
mov
loopne
push
dec
jge
ja
dec
dec
mov
mov
pop
xor
jne
push
add
adc
xchg
xchg
(bad)
pusha
push
jo
int3
aaa
inc
cmp
pop
dec
push
push
out
jns
xchg
push
xor
cdq
std
mov
adc
int
arpl
rol
cmps
mov
call
cmp
fild
std
ret
dec
aad
mov
xor
rcr
std
rcr
jle
shl
enter
movs
(bad)
jmp
jge
test
rol
das
icebp
out
outs
imul
jae
and
std
cli
out
mov
mov
mov
rcl
adc
mov
mov
lock
std
xchg
jg
jo
fldenv
call
jmp
inc
fistp
mov
mov
mov
(bad)
repnz
stc
push
mov
dec
ins
dec
ret
in
aad
cmp
sbb
push
pop
lock
ins
push
dec
or
jl
aam
add
mov
dec
push
push
mov
std
test
std
pop
fcmovu
div
stos
daa
jmp
pop
into
mov
inc
es
and
rcr
iret
fld
sub
addr16
loopne
aas
mov
sar
jb
or
das
cmps
sbb
in
call
cmp
inc
int3
ins
ss
xchg
push
ds
sub
shl
nop
outs
pop
jecxz
xor
aaa
cmp
ja
lods
iret
jne
add
sbb
lea
cmp
fisttp
scas
inc
das
cdq
xchg
pushf
xchg
push
data16
add
xlat
or
pop
shr
sub
loop
movs
retf
pop
or
ficom
(bad)
ins
sub
adc
out
lahf
xchg
xlat
pop
test
or
leave
sbb
jb
mov
push
stc
mov
push
cmps
div
jmp
push
imul
(bad)
std
and
push
push
and
arpl
sbb
lods
lock
add
inc
inc
adc
push
cmp
mov
sar
test
mov
ins
ficom
les
or
pop
(bad)
jns
jno
cmps
lds
mov
push
jno
dec
xor
push
cmp
sahf
fistp
popf
dec
loopne
mov
hlt
rol
jle
ins
cmp
call
sbb
adc
test
or
shl
jbe
cs
pop
push
popa
clc
add
cmp
add
nop
js
xor
stc
jmp
ret
mov
or
mov
sar
sbb
sbb
sub
in
shl
xchg
pop
dec
xor
mov
dec
cmps
push
jno
and
imul
add
enter
pop
cli
xor
xchg
or
pop
sbb
outs
sub
cmps
jo
push
push
ins
lock
mov
pushf
aad
jbe
rol
push
mov
fldcw
mov
outs
aas
stc
ins
sub
ins
adc
mov
pop
cdq
or
xor
movs
into
xchg
stos
clc
lods
xor
pop
push
adc
stos
adc
xor
out
mov
in
les
out
add
jge
nop
ds
add
or
sbb
cwde
lock
mov
xor
xchg
push
and
gs
jbe
xchg
jne
mov
push
sub
inc
fisub
mov
mov
cmp
aaa
xchg
push
sub
stos
pop
mov
out
sub
fld
pop
mov
cmc
add
fidivr
or
ins
loop
into
push
pop
jne
push
sti
push
xlat
mov
adc
addr16
ret
xor
std
mov
loope
sti
stc
sti
ss
add
push
mov
adc
inc
pop
cmp
jecxz
js
pop
daa
ja
xchg
cmp
ins
lods
movs
jl
pop
cdq
cmp
push
stc
test
out
mov
mov
(bad)
aas
sbb
push
and
mov
pop
sub
cmc
or
push
xchg
in
cs
loope
stos
mov
add
clc
cmp
enter
clc
sbb
stc
loopne
sub
std
sti
shr
cmp
mov
in
pop
je
sbb
or
movs
out
xchg
outs
push
leave
les
jno
mov
xchg
xchg
sub
in
and
int
pushf
sbb
lods
sbb
jmp
jp
scas
pop
sbb
addr16
ja
jnp
bound
psllq
pop
call
push
(bad)
hlt
and
sub
adc
(bad)
aas
sub
mov
retf
test
cmp
jno
ins
test
inc
popf
xchg
xchg
outs
jecxz
mov
fistp
in
mul
jmp
or
jne
dec
movs
add
inc
test
pop
pushf
add
fdivr
sbb
jne
sbb
std
dec
mov
pop
sbb
gs
pop
add
jo
dec
xor
addr16
bswap
cmp
mov
xchg
jecxz
cli
jmp
fwait
adc
aas
adc
sbb
xchg
movs
outs
mov
inc
jae
or
mov
shld
cmp
and
mov
out
call
ss
and
push
or
push
shr
and
out
or
in
inc
sub
aam
aas
xchg
repz
or
pop
enter
pop
pop
(bad)
sub
xchg
add
pop
push
icebp
hlt
gs
ja
imul
push
dec
sub
int3
mov
cld
push
imul
rcl
movs
je
gs
test
icebp
push
cmp
pop
das
jnp
ror
shl
xor
cmp
adc
inc
jmp
addr16
ror
rcr
xor
ins
call
push
push
adc
sub
mov
push
add
mov
sub
jmp
xor
inc
and
bound
pop
mov
fucomp
push
repz
jle
into
(bad)
sub
push
push
jecxz
sub
sub
test
xor
sbb
in
inc
cmps
div
cmp
xchg
out
pop
dec
je
add
lea
inc
adc
and
scas
dec
ja
cmp
and
cmp
jle
add
mov
test
jno
and
add
mov
lock
mov
or
test
mov
or
test
jmp
hlt
lahf
clc
pop
mov
lods
cmc
hlt
imul
jecxz
scas
outs
inc
addr16
jg
in
cmp
int3
mov
xor
int
and
loop
ret
push
sti
lods
dec
jnp
fucomp
repnz
push
retf
pop
cmp
xchg
sbb
sub
dec
xchg
cmp
lods
das
push
cmc
leave
(bad)
cmp
mov
dec
or
jg
adc
xchg
and
and
jge
icebp
cmc
mov
in
mov
fwait
mov
gs
stc
sbb
cdq
push
scas
in
inc
dec
cwde
mov
pop
sahf
adc
and
jns
(bad)
add
jae
cmps
push
imul
sub
mov
pop
add
shl
and
test
jae
jecxz
jns
or
add
loopne
hlt
fwait
mov
inc
popa
pusha
sub
fdivr
or
in
push
mov
js
ret
mov
sub
push
adc
(bad)
jo
icebp
stos
int
sbb
and
call
inc
or
bound
mov
rcl
inc
jecxz
retf
js
push
out
inc
and
mov
push
daa
dec
(bad)
sbb
into
rcl
xlat
imul
xchg
and
aam
dec
adc
enter
inc
mov
add
sbb
mov
xchg
or
daa
mov
and
jg
pop
sbb
add
ret
xor
mov
push
neg
or
push
push
or
sti
jno
push
in
cwde
xchg
cmps
sub
cmp
ja
les
ja
cwde
or
and
rep
fcomp
fs
and
mov
enter
jmp
push
inc
dec
mov
sub
stc
imul
dec
and
outs
pop
rol
arpl
retf
test
xor
cmp
stos
inc
aas
jl
ins
jb
dec
cmps
xchg
stos
rol
mov
jnp
mov
mov
pop
leave
sub
ds
and
daa
add
push
ds
xor
rol
fwait
test
adc
xchg
jge
jb
fistp
xchg
imul
inc
mov
mov
xchg
adc
daa
fisttp
lods
pop
jno
(bad)
(bad)
mov
push
iret
xchg
icebp
xor
cmp
leave
xchg
pop
(bad)
addr16
ret
(bad)
xchg
adc
sub
movs
xor
and
fld
or
sbb
popa
clc
jns
retf
aas
aam
and
clc
push
adc
push
dec
sub
add
add
dec
cld
test
mov
push
fnstenv
imul
mov
xor
mov
test
xchg
and
bound
sub
fld
cli
cmp
jp
loop
ret
and
push
sbb
adc
das
int
imul
fnstenv
xchg
icebp
push
add
dec
mov
scas
pop
scas
xor
outs
mov
pushf
sub
jg
maskmovq
test
xor
fadd
das
(bad)
or
or
loop
imul
clc
lahf
inc
inc
(bad)
(bad)
retf
cmp
daa
xchg
repnz
xchg
jo
add
mov
aaa
mov
pop
dec
add
jmp
cli
fbstp
sbb
lahf
lods
ja
push
scas
push
add
dec
xor
inc
je
xchg
or
(bad)
repz
repnz
cmp
mov
cmp
jl
xor
sub
(bad)
pop
cmc
div
mov
xor
push
fcmove
pop
mov
div
mov
sbb
jge
jbe
inc
outs
(bad)
and
lods
inc
out
fs
pop
push
test
fcom
mov
push
cs
mov
mov
cwde
xor
fwait
push
fcomp
in
jbe
and
pushf
rcl
xchg
pop
sub
inc
jg
mov
dec
retf
sti
jns
fsub
or
mov
cmps
in
pop
dec
iret
ficom
aam
pop
inc
add
rol
movzx
sbb
add
sbb
sbb
les
sbb
aaa
sbb
add
in
not
lds
dec
nop
xor
sbb
arpl
fucomp
gs
push
jns
pause
mov
pop
repz
mov
ror
outs
fbstp
aad
pop
aam
std
nop
inc
retf
sbb
push
test
sbb
adc
mov
popa
daa
shr
pop
xchg
cdq
es
bound
sbb
imul
leave
mov
in
enter
push
mov
cmc
jl
test
mov
sahf
mov
xor
ins
movs
or
mov
fwait
xchg
in
xchg
out
inc
pop
dec
push
loope
dec
cli
add
imul
add
repz
out
ficomp
int3
dec
inc
jae
xchg
(bad)
fisubr
test
dec
lods
inc
movs
add
test
int
mov
mov
outs
ins
test
(bad)
test
mov
dec
jmp
pop
cmps
std
aaa
cs
or
imul
cs
cmc
jp
test
outs
or
jmp
test
pop
loop
das
in
stos
out
loopne
dec
std
cmp
les
popa
adc
in
pusha
mov
and
dec
push
push
(bad)
jbe
lods
aam
aad
mov
dec
xchg
ret
int3
ficom
cld
mov
inc
sub
mov
pop
rol
cmp
aas
jp
dec
add
sbb
cmps
jne
add
sbb
mov
mov
fild
mov
xor
cdq
mov
dec
in
cld
ret
pop
pop
in
push
fisub
inc
fisubr
imul
push
(bad)
int
fistp
lods
sub
pop
jne
mov
cmps
push
fdivr
pop
dec
addr16
jmp
ja
mov
jmp
outs
push
fild
pop
mov
out
nop
call
push
dec
cmp
fsubp
jecxz
bound
mov
add
ss
xor
fcom
add
test
xor
bound
dec
clc
ror
mov
push
mov
or
mov
pop
pushf
and
mov
into
add
mov
inc
out
out
adc
or
fadd
stc
xchg
jg
xchg
add
or
inc
add
or
jne
(bad)
rcr
std
or
das
push
pop
mov
fmul
scas
sbb
mov
pop
lods
sub
add
push
arpl
not
and
lods
mov
cmp
stos
(bad)
int
idiv
dec
sub
popf
jg
in
lds
dec
push
push
adc
fcomp
enter
cmp
popa
jg
shl
cmps
add
or
sbb
inc
rcl
pop
lods
push
out
or
mov
arpl
mov
pop
sub
adc
fs
cmp
or
pop
mov
add
(bad)
cli
in
popa
jnp
mov
sti
and
xchg
xor
inc
repnz
pop
xor
mov
cmc
or
mov
shl
pop
or
data16
int
adc
pop
cwde
push
popa
aad
jae
or
dec
test
inc
in
icebp
xor
les
sub
inc
jno
pop
pop
xor
and
loope
adc
ret
enter
movs
iret
das
ja
and
cmp
mov
cs
jnp
push
inc
inc
test
(bad)
push
adc
(bad)
xor
push
bound
cmp
inc
dec
lock
ins
nop
jbe
xchg
call
ds
pop
popa
sar
adc
jle
jmp
push
push
xchg
xchg
xchg
ret
mov
sbb
mov
mov
sub
ins
or
xchg
aam
std
sub
xchg
push
sub
add
cmps
sub
xchg
mov
xchg
(bad)
pop
aad
data16
cs
xchg
xlat
(bad)
fdivr
fs
hlt
fild
push
lahf
retf
iret
ret
mov
or
pop
cli
mov
sti
stos
(bad)
movs
xchg
xor
inc
stos
fdivr
mov
repnz
sbb
push
aas
mov
mov
or
scas
adc
cmps
add
jge
inc
push
mov
sahf
stos
mov
jns
cmc
mov
or
mov
cdq
popa
push
jl
push
jge
aam
jge
das
inc
fstp
xor
lgs
or
call
in
sti
lods
sbb
cmp
pop
jle
fadd
mov
xchg
push
(bad)
xor
mov
cld
mov
daa
jge
in
inc
cmp
mov
xchg
pop
push
fcmovnb
cld
retf
and
inc
add
add
cmps
inc
sbb
popa
sar
cmp
mov
ficom
mov
stos
mov
ret
ror
mov
xor
inc
jle
xchg
mov
lahf
push
xor
mov
xor
dec
enter
mov
add
sub
jp
repz
mov
pop
les
or
or
inc
xchg
jmp
in
pop
(bad)
ror
sub
sbb
jge
adc
pop
loop
cmc
mov
pop
or
jmp
lahf
jmp
push
mov
imul
jg
not
and
movs
dec
cdq
test
jno
call
(bad)
daa
sbb
int3
sbb
jmp
or
out
lea
aad
sub
sbb
es
fwait
into
in
les
lds
hlt
mov
stos
xcrypt-ctr
cmps
push
push
push
push
mov
sar
sbb
dec
(bad)
pop
out
jne
add
sbb
fisttp
xchg
fdivr
sbb
cmp
mov
(bad)
jmp
outs
jns
jl
ret
pop
xor
enter
and
les
cmps
cli
mov
cs
pushf
add
push
sbb
shl
icebp
fdivrp
cmp
ret
stos
mov
inc
xchg
jle
pushf
out
popf
cld
mov
inc
pop
xchg
dec
ja
jmp
and
cld
test
jb
enter
jno
and
test
xor
sbb
call
mov
in
mov
imul
cmp
mov
mov
cli
and
adc
cmc
test
aaa
aad
pusha
iret
in
clc
xor
xchg
pop
jae
and
int3
outs
aas
sub
adc
bound
add
adc
jae
inc
jecxz
arpl
mov
fist
std
fsub
jl
ins
sahf
cmp
hlt
adc
sbb
mov
ss
push
aas
jmp
adc
in
shl
adc
mov
leave
or
ja
xor
adc
adc
mov
xchg
add
mov
mov
pop
jb
test
cwde
mov
mov
inc
jmp
cmp
clc
dec
or
adc
pushf
and
sub
pop
pop
pop
cmp
xchg
mov
rol
jne
mov
lods
mov
mov
mov
add
push
mov
push
xor
int
cld
ret
mov
(bad)
(bad)
mov
es
mov
jl
lock
xchg
clc
fcmovnbe
sub
pop
adc
pop
xchg
add
cmp
popf
jg
je
pop
jmp
out
dec
mov
jle
mov
enter
daa
inc
enter
pop
ins
mov
lods
and
pop
pop
aad
ret
dec
fcmovnbe
sbb
(bad)
mov
sub
shr
cs
pop
xchg
xor
pop
xchg
popa
inc
sub
add
shl
out
and
into
push
lock
adc
iret
mov
adc
enter
xchg
pop
add
push
push
pop
mov
add
sub
sbb
in
cmp
outs
(bad)
jmp
and
int
adc
das
gs
push
cmp
call
lods
ds
xchg
scas
sti
sbb
dec
rcl
cmc
mov
jns
lods
sbb
sbb
sahf
(bad)
sub
push
dec
push
sti
or
mov
xor
retf
jmp
iret
ret
(bad)
sub
pushf
cmp
nop
add
mov
inc
xchg
push
sbb
xlat
fsub
jnp
(bad)
xchg
arpl
mov
xor
int
add
mov
loope
rcr
jmp
push
lods
pop
rcl
cmc
add
inc
aad
mov
adc
ror
jp
mov
call
cmps
inc
mov
jmp
add
inc
dec
cdq
test
adc
jl
xchg
lds
movs
out
nop
push
cwde
or
xchg
std
cmp
imul
test
and
jge
cmp
sbb
mov
mov
adc
inc
or
dec
ror
and
xchg
jmp
stc
(bad)
mov
bound
cmps
mov
push
je
ret
dec
and
push
rol
cld
imul
sbb
or
test
xchg
sub
dec
add
jne
mov
mov
cs
mov
repnz
pop
push
mov
shr
cmps
dec
pop
inc
push
rol
sbb
and
mov
fs
call
xchg
stos
push
mov
or
and
or
fucom
pop
iret
outs
retf
neg
fmul
loop
and
sub
addr16
imul
test
xor
cmp
call
shl
xchg
push
xor
add
int
mov
aas
mov
mov
sti
push
call
dec
and
mov
jg
sub
jns
leave
movs
xor
push
xor
sub
(bad)
fnstenv
shr
dec
cmps
inc
jo
dec
or
les
sbb
cdq
popa
je
aam
dec
cmp
xchg
lds
imul
sub
stos
test
leave
inc
cli
cmps
adc
add
push
cdq
jne
xchg
mov
pop
xchg
fsubr
sbb
pop
ds
icebp
in
dec
out
jbe
add
push
les
xchg
jecxz
out
inc
pop
mov
inc
and
jnp
pop
cmp
mov
shl
mov
jbe
or
in
in
jb
rcr
sub
sub
stos
cld
mov
es
addr16
ins
nop
jne
xchg
xchg
mov
call
in
test
mov
lods
sub
add
mov
and
nop
sbb
xlat
(bad)
lea
cmp
icebp
dec
mov
int
push
mov
pop
adc
enter
scas
shr
(bad)
ficom
and
mov
cmp
mov
xor
inc
fld
cmps
cmc
mov
mov
xchg
cmps
adc
shl
cmps
push
stos
repnz
in
cmp
cdq
cli
pushf
or
sbb
dec
xlat
adc
cli
pop
or
out
ja
jnp
push
sub
(bad)
movs
sub
lods
stc
test
dec
test
add
adc
sbb
cmp
or
adc
in
dec
add
push
cld
dec
gs
mov
push
cmp
push
outs
out
push
inc
je
or
ret
pop
sbb
sbb
sbb
lods
or
cli
add
loop
mov
sbb
stc
ja
leave
ror
ret
shr
jp
and
push
sahf
(bad)
jp
inc
jae
fidivr
pop
rcr
mov
cdq
aaa
pop
(bad)
stos
inc
mov
icebp
out
jge
inc
fld
ins
nop
or
mov
retf
sbb
xor
dec
fisubr
sub
cs
repz
mov
push
mov
dec
xlat
push
xchg
hlt
mov
cs
jno
and
add
xchg
scas
add
mov
inc
popf
xor
mov
cdq
imul
je
inc
inc
jmp
mov
mov
scas
push
or
xor
daa
fst
mov
push
gs
pop
push
cmp
imul
mov
into
push
fwait
aad
push
cmp
cmp
nop
popa
mov
test
and
ja
mov
xor
outs
sbb
jp
add
(bad)
sub
out
idiv
mov
(bad)
stc
cmp
dec
pushf
not
(bad)
mov
sbb
xor
dec
pop
in
fadd
sbb
xchg
cmp
shl
xor
pop
xchg
mov
and
and
xor
pushf
mov
sbb
into
mov
outs
lea
mov
or
std
jno
jae
cmp
lahf
jb
and
sti
dec
dec
sbb
outs
jp
neg
dec
pop
xchg
inc
adc
inc
into
ja
mov
popf
inc
int
mov
enter
stos
mov
sub
adc
fisttp
call
mov
push
leave
(bad)
ds
pop
pop
xchg
popa
jge
mov
add
add
enter
repnz
xchg
cmp
(bad)
xchg
imul
xor
dec
mov
push
rol
sub
sbb
fisttp
sbb
clc
out
push
xor
loop
sti
popf
xchg
xchg
mov
sub
jo
inc
or
mov
jge
sub
into
test
adc
pop
ins
fmul
cs
mov
ret
popa
call
sahf
aad
mov
ds
mov
jnp
pop
add
mov
aaa
popa
nop
mov
fsub
xor
jno
adc
retf
das
ss
cmps
js
adc
sbb
aas
imul
dec
cwde
cmp
mov
inc
sub
les
push
dec
test
sub
and
loope
repz
mov
test
sti
and
aas
dec
xor
dec
and
sbb
pop
aad
outs
or
pusha
not
add
cli
mov
push
imul
sbb
mov
mov
cld
lea
xlat
jmp
pop
lea
dec
pushf
mov
lds
call
dec
movs
jl
or
jge
jp
sub
outs
sub
adc
je
ins
jae
dec
stos
stos
inc
cmps
jmp
and
daa
repnz
inc
cmp
mov
call
daa
jae
mov
mov
movs
push
aas
jl
sahf
jp
mov
jecxz
lock
ret
in
lea
jmp
lods
and
ins
cmp
xor
inc
add
icebp
fistp
(bad)
mov
xor
das
je
inc
mov
mov
ds
mov
and
sbb
sbb
into
aam
dec
stc
test
test
jle
psubw
loope
ret
mov
jmp
sti
in
sti
inc
jge
push
push
div
and
ret
inc
shl
ret
xor
xorps
test
dec
jecxz
out
mov
aam
mov
je
shl
and
ror
test
(bad)
pop
push
loopne
das
mov
popf
fdiv
push
test
loop
cs
retf
mov
scas
fs
dec
or
and
pushf
or
and
ror
hlt
add
lock
mov
movs
enter
jp
push
add
push
das
push
mov
aad
(bad)
iret
out
mov
addr16
dec
dec
stc
or
jmp
jae
xor
fwait
pop
jnp
jg
adc
loop
sub
scas
fcomp
nop
ret
mov
in
imul
dec
xchg
pop
call
stc
jne
ins
xchg
and
add
fist
lahf
repz
daa
inc
mov
and
mov
popa
lahf
adc
cmc
sub
or
sar
dec
call
dec
(bad)
out
mov
aas
xor
xor
jne
popf
in
xor
outs
inc
repz
lahf
cmp
xchg
sbb
lock
addr16
fdiv
cmc
sahf
cmp
mov
and
test
inc
aam
mov
add
jle
mov
xlat
cmp
fist
mov
mov
jae
clc
loope
add
pop
call
sbb
cs
shr
jl
iret
pop
fild
or
or
inc
sbb
sbb
data16
adc
call
in
push
mov
sbb
mov
and
lds
fnstenv
loop
or
mov
mov
outs
jmp
sbb
popf
sbb
push
xchg
ror
(bad)
std
or
fs
nop
movs
mov
pushf
mov
leave
je
xlat
xchg
pop
push
or
ror
loop
pop
jne
clc
(bad)
fcom
fldcw
fiadd
ret
inc
test
cmp
rol
pop
pusha
mov
in
cmps
or
mov
pop
pop
in
push
scas
mov
in
aaa
popf
sahf
js
and
cdq
add
adc
inc
(bad)
push
in
mov
js
inc
rcr
(bad)
jmp
mov
push
sbb
mov
and
loop
outs
jle
or
je
lds
sbb
sub
push
push
dec
psllq
outs
adc
add
sbb
pushf
aad
pop
arpl
xchg
outs
in
daa
stos
rcl
or
cmp
je
mov
or
cmp
scas
mov
mov
add
lods
fdivr
or
dec
jmp
fisubr
mov
mov
and
push
xor
stc
mov
mov
into
push
adc
ds
call
pusha
movs
gs
cli
jmp
inc
idiv
xor
in
data16
dec
lods
fimul
pop
dec
mov
int
scas
mov
fmul
adc
stc
(bad)
jbe
test
xchg
scas
lea
cli
sub
or
mov
sbb
push
in
or
mov
jle
outs
or
push
imul
data16
mov
inc
rcr
scas
fistp
aaa
call
sbb
push
out
stos
sub
jl
test
ror
sahf
ins
xor
popf
dec
sar
popf
int
cwde
lahf
sub
(bad)
ss
jecxz
data16
or
xlat
call
fucomp
pop
and
ins
inc
jecxz
call
(bad)
scas
test
daa
movs
data16
cmp
cli
leave
or
jge
je
adc
fnstcw
mov
adc
dec
and
pop
xor
mov
pop
por
ins
add
sbb
mov
mov
js
adc
jl
lea
push
dec
push
push
cs
or
arpl
jl
dec
movs
push
adc
fistp
call
enter
stos
sahf
dec
xor
inc
sub
js
dec
sbb
lods
cmp
ficom
lahf
pop
ss
xchg
and
fnstenv
adc
inc
cmp
inc
ret
push
mov
sbb
mov
cmp
(bad)
pop
push
inc
cs
fcomp
icebp
loope
push
cmps
xlat
mov
sub
in
mov
iret
mov
jnp
pop
cmps
jmp
enter
scas
mov
lahf
xchg
cli
retf
or
inc
xor
int3
or
sar
rol
lahf
add
aas
lahf
push
or
(bad)
stos
gs
jge
xchg
retf
clc
mov
lock
test
xor
out
enter
pop
stc
fdiv
xor
outs
jbe
jnp
or
or
call
stos
cmp
push
xchg
sar
loope
and
out
sbb
push
sub
mov
out
mov
pop
and
shl
sar
test
icebp
cmp
cs
pop
cmp
xchg
rcr
mov
sub
je
lahf
loop
mov
pop
cdq
inc
fld
or
repz
sub
out
aad
xor
inc
adc
xor
push
rol
push
add
aas
xchg
sub
fisttp
push
in
icebp
(bad)
inc
in
push
outs
push
pop
es
mov
movs
arpl
add
movs
fyl2x
add
push
aam
test
inc
or
push
pop
push
pop
or
into
fldenv
enter
sub
xchg
retf
test
sbb
mov
push
scas
sti
jmp
bound
or
leave
inc
(bad)
mov
bswap
loop
ret
sbb
out
push
fisubr
(bad)
lock
jae
stc
jecxz
cdq
imul
aam
mov
push
int
or
lods
push
(bad)
call
test
cmp
jge
sub
jb
mov
jl
popf
pop
push
out
push
sbb
sbb
test
out
xor
push
mov
mov
ds
shr
jno
loop
cmp
pushf
fst
dec
or
into
jmp
loopne
mov
outs
or
mov
or
push
out
inc
sub
xchg
mov
dec
and
cs
in
rol
test
or
jne
rol
aas
lea
cmp
aad
pop
cmp
jl
push
jl
cld
or
xchg
inc
xor
cmp
std
jmp
xchg
sub
cmp
mov
mov
inc
out
inc
mov
pop
jo
cmp
scas
std
mov
xchg
inc
sub
scas
gs
sbb
aas
dec
mov
jp
add
fnstcw
int3
fstp
and
jns
cmps
fldcw
mov
outs
dec
mov
push
xor
or
push
xor
jecxz
mov
es
xor
ret
rol
jecxz
aad
aam
js
movs
movs
(bad)
jo
sub
nop
fmul
mov
pop
add
inc
mov
jp
mov
jle
scas
cwde
pushaw
sti
movs
jp
mov
adc
mov
jmp
dec
sbb
push
retf
mov
repz
mov
xchg
xchg
xor
mov
cmps
push
repz
std
cmp
cmp
fwait
lahf
push
cmp
cdq
pop
cs
fistp
out
das
lock
cmp
std
pop
pop
sahf
add
scas
outs
jne
inc
xor
ja
loope
mov
or
cdq
cli
shl
nop
mov
pop
popf
sub
inc
add
mov
pop
shl
sbb
jb
fistp
(bad)
mov
test
inc
shl
mov
mov
mov
xchg
mov
cmp
jae
cmps
shr
adc
ja
xor
cmp
fnsetpm(287
add
sbb
push
cmp
(bad)
pushf
sub
int3
and
ins
mov
popf
(bad)
in
dec
dec
fst
sbb
xor
jns
ret
xor
(bad)
push
ds
lods
xor
mov
mov
mov
out
cdq
std
cmp
xchg
pop
(bad)
fwait
and
xchg
popa
(bad)
gs
mov
xor
dec
loopne
mov
out
lock
aam
call
stos
xor
add
dec
loopne
add
ds
dec
shl
jbe
push
aas
mov
pop
les
neg
jno
mov
stos
pusha
adc
or
fisttp
cwde
arpl
sub
sub
mov
inc
je
ror
rcl
or
(bad)
mov
add
jbe
xor
mov
fnstcw
add
js
xchg
jecxz
(bad)
loope
mov
jo
pusha
jnp
(bad)
mov
repz
push
adc
jmp
mov
add
mov
pusha
sbb
leave
cmp
xor
jns
imul
in
add
sub
movs
mov
or
cld
pop
mov
pop
cmp
inc
push
fmul
cmp
or
adc
outs
popa
mov
(bad)
arpl
mov
cmp
pop
pop
test
pop
imul
cmp
mov
push
jae
cmp
push
push
inc
fld
sub
cmp
push
call
ja
sbb
sbb
mov
mov
jns
test
popa
push
ins
sub
and
adc
sub
cmp
inc
add
ins
movs
pusha
repnz
jo
xchg
xchg
mov
retf
push
cwde
loope
push
stc
jp
xchg
js
jg
inc
daa
retf
imul
push
inc
xchg
lea
add
test
mov
repnz
inc
loop
jo
loopne
sub
scas
sub
and
jae
cmp
outs
mov
jecxz
push
xchg
add
cmp
ds
loope
mov
ret
xchg
fs
mov
imul
rcl
cmp
enter
pusha
sbb
stos
call
arpl
aam
je
inc
push
jb
or
fist
ret
xor
das
cmp
jle
add
sbb
sub
dec
(bad)
jmp
test
imul
outs
(bad)
jo
mov
or
xor
rcr
in
shl
fdivr
or
dec
jno
mov
push
ret
mov
rcl
nop
mov
(bad)
push
and
fnstenv
das
xchg
and
and
xchg
add
test
inc
mov
dec
xchg
push
and
bound
cmp
sbb
sub
mov
mov
adc
ds
or
ret
shr
fwait
jecxz
inc
aad
inc
jb
add
je
arpl
pop
gs
rcr
out
push
push
push
jle
jb
sbb
pop
mov
lock
movs
mov
or
mov
into
icebp
mov
stos
popa
mov
jae
cli
pop
pop
daa
rol
sar
pop
gs
or
int
sahf
imul
push
inc
inc
arpl
fchs
jecxz
add
adc
mov
jge
sbb
dec
and
lods
cdq
lahf
or
mov
data16
push
and
pushf
aas
ror
inc
jl
ror
jecxz
push
mov
movs
jb
rcr
cld
test
push
das
pusha
rcl
pop
mov
jmp
xchg
inc
fsubr
push
add
pop
cld
adc
mov
movlps
pop
rol
dec
mov
sub
stos
pop
stos
cmps
jns
sti
mov
dec
pop
call
add
loopne
sbb
cmp
pop
and
dec
in
(bad)
mov
push
scas
sub
in
cmp
fild
cs
add
mov
jno
js
test
ret
adc
shl
lods
push
shl
jne
xchg
(bad)
jle
lods
jb
into
pop
mov
in
lods
inc
int
imul
inc
cld
add
cs
cmc
dec
cmps
clc
dec
dec
cmp
cmps
cmps
jp
pop
jnp
push
data16
lahf
mov
add
push
icebp
not
xchg
dec
cmc
scas
dec
std
add
sub
xchg
sub
xchg
jne
jl
xor
pop
push
jmp
jp
jae
sbb
push
mov
cmps
mov
(bad)
sub
xlat
shl
inc
mov
or
fst
inc
mov
jbe
pop
arpl
cmp
sqrtps
add
fiadd
mov
adc
jmp
push
in
add
sub
addr16
pop
fcom
pop
sub
jne
retf
dec
pop
sub
cmp
cmps
scas
ret
das
jg
in
inc
xor
enter
sub
adc
jl
neg
mov
adc
retf
inc
dec
xchg
push
mov
mov
or
add
dec
cmp
mov
push
enter
stos
add
or
enter
inc
xor
or
shl
adc
mov
xchg
ins
mov
pop
jnp
push
sub
iret
inc
add
cwde
jle
cs
or
out
jno
jg
test
popa
das
retf
inc
mov
and
push
push
xchg
out
bound
inc
out
cmps
push
mov
inc
fnstsw
push
sbb
and
and
push
test
push
cs
repnz
out
or
inc
or
fild
jo
jl
inc
jmp
and
lods
xor
pop
jo
and
test
cmp
mov
sahf
adc
inc
data16
sbb
sahf
shr
mov
inc
xlat
das
push
lock
push
(bad)
pop
mov
in
sub
jno
aas
int3
mov
aad
sbb
jnp
std
jb
xchg
sbb
or
je
pop
adc
jecxz
mov
imul
icebp
pop
mov
and
and
pop
iret
sub
fild
mov
addr16
cmps
std
push
test
cld
inc
adc
and
or
jns
daa
cmp
xchg
hlt
cmp
inc
push
mov
hlt
push
sbb
clc
cld
popa
movs
popa
and
jl
xchg
sbb
push
aam
cli
gs
jo
and
lds
sahf
adc
out
xchg
dec
fistp
ret
in
cdq
fcmovnb
scas
sbb
inc
jp
test
int
pop
mov
mov
mov
shr
adc
mov
enter
fisubr
lahf
sub
test
nop
les
push
jbe
xlat
aad
sub
jge
outs
imul
test
sbb
aad
iret
xor
mov
aad
popw
leave
sub
ficomp
repz
stos
int3
cmps
ja
cmp
sub
mov
stos
cmp
mov
fcmove
lods
imul
std
xlat
std
pushf
pop
mov
imul
ret
(bad)
rol
pop
fucomp
xchg
lock
lods
push
js
dec
sbb
mov
mov
push
push
pop
(bad)
dec
mov
jmp
leave
mov
mov
cmps
xchg
adc
sbb
jae
retf
ret
mov
lea
adc
in
push
mov
inc
neg
fsubr
pop
leave
std
lods
retf
and
aad
out
inc
mov
addr16
das
pop
mov
imul
jmp
xchg
xchg
jecxz
inc
pop
adc
jp
add
addr16
lods
jns
push
inc
stos
xchg
xchg
rcr
xor
fisubr
jl
cmp
mov
movs
dec
jo
adc
mov
xor
ins
cmp
mov
repz
cmps
jno
fs
popa
daa
in
mov
test
mov
xchg
lods
jecxz
add
loopne
pop
mov
push
cmp
mov
jb
shl
add
out
mov
cmp
cmps
jns
sbb
sub
pop
repnz
call
jg
jo
rcr
scas
call
push
pop
lods
inc
mov
jnp
sbb
(bad)
cmp
clc
adc
pop
jmp
dec
push
push
cld
in
rcr
clc
xchg
cmp
jno
(bad)
and
movs
sar
je
cmps
ds
retf
adc
fadd
ja
mov
sbb
jbe
dec
mov
stc
cmp
add
das
jmp
jnp
or
xlat
pop
xchg
clc
aaa
shr
mov
dec
sub
jmp
adc
shl
enter
icebp
or
arpl
jae
(bad)
sahf
dec
adc
jb
push
fwait
repz
xchg
ds
or
cmc
repz
inc
xor
mov
inc
inc
scas
or
pushf
or
pop
mul
jno
inc
out
sbb
cli
jp
bound
xchg
retf
xchg
dec
js
int
js
ret
lods
pop
xchg
adc
or
sbb
xor
movs
mov
mov
cld
in
popf
stos
je
popf
mov
mov
mov
leave
ss
stos
xor
ja
mov
dec
sbb
jmp
mov
add
cmp
dec
test
sub
mov
jno
pop
fist
pop
push
ins
(bad)
and
mov
loope
mov
sub
or
sbb
adc
inc
or
xchg
(bad)
push
jmp
ret
shr
mov
push
rol
sti
sbb
cwde
scas
push
jmp
(bad)
jae
dec
leave
lods
sar
ror
and
int
popf
fadd
dec
xor
sbb
imul
add
cmp
sbb
sbb
push
adc
push
mov
adc
jo
adc
cmps
nop
es
push
adc
outs
push
movs
dec
lock
cmp
mov
sub
or
(bad)
pop
mov
sub
arpl
cs
ja
sbb
pop
push
or
ins
and
mov
in
test
pushf
dec
inc
cmps
push
cmps
mov
dec
cwde
lahf
clc
cmp
rol
out
and
mov
sub
ret
ins
adc
dec
jbe
div
add
movs
stos
jns
mov
cmp
add
test
xor
bound
cmp
push
mov
call
push
xchg
fsubp
sar
test
stos
xor
xor
inc
and
ss
scas
mov
pop
test
aas
or
cli
outs
dec
dec
jnp
mov
mov
cs
add
jnp
ins
rcl
adc
mov
sti
lahf
and
rcr
(bad)
jp
push
inc
sbb
arpl
or
xchg
add
mov
jno
ror
sbb
scas
push
loope
jns
adc
nop
sub
gs
push
add
mov
mov
out
jno
and
addr16
or
mov
dec
and
xchg
and
retf
push
or
imul
fwait
fwait
sub
adc
imul
test
jno
cmc
fcmovnb
sub
setge
icebp
push
ins
pop
and
repnz
fst
mov
cmp
pop
(bad)
fmulp
std
sub
leave
pop
mov
aam
mov
std
xchg
mov
push
or
sbb
out
push
stos
or
adc
pop
(bad)
pop
das
in
gs
pop
xor
pop
and
cmp
pop
push
cdq
mov
and
fldpi
push
popf
loopne
cwde
and
(bad)
fidivr
adc
icebp
sub
cmp
pop
cmp
cmp
inc
ins
sub
aas
push
inc
loop
leave
sar
push
movs
pop
sub
mov
sbb
loope
mov
push
(bad)
aaa
add
cmp
repnz
mov
sahf
aas
cmps
ins
sub
pop
lahf
loopne
test
dec
add
jl
sahf
mov
int3
or
fucom
ror
retf
arpl
cmps
inc
movs
xchg
loopne
mov
shr
retf
jge
push
(bad)
inc
xchg
inc
ror
adc
ret
mov
pop
lods
push
xchg
cmc
retf
dec
cmc
inc
dec
xchg
(bad)
xchg
mov
fcmovbe
add
gs
ins
and
stc
jge
loope
or
test
and
mov
jmp
mov
(bad)
jmp
and
sub
xor
js
test
ja
mov
push
out
push
xor
cmp
pop
xor
pop
pushf
cmc
and
stc
dec
shl
mov
loopne
sub
mov
fisubr
push
cmp
adc
pop
movs
and
sbb
pop
and
push
adc
sar
neg
shl
ins
pop
inc
jnp
neg
cdq
cmp
outs
mov
dec
pop
mov
fist
mov
xchg
and
shl
imul
int
mov
and
out
push
push
xchg
sbb
cmp
or
inc
jb
jge
(bad)
jnp
into
fstp
sbb
push
xchg
or
jp
mov
push
addr16
xlat
outs
es
scas
dec
push
aaa
fs
mov
call
push
xor
rcl
inc
ja
fs
pop
out
cs
cld
xchg
(bad)
shl
dec
je
pop
cld
movs
sub
sar
data16
adc
xchg
call
xchg
jg
xchg
mov
mov
enter
or
push
inc
adc
mov
xchg
nop
pop
(bad)
in
adc
xor
pop
xor
adc
mov
xchg
and
add
leave
leave
cmp
jl
adc
xor
ds
aad
jo
jo
popa
mov
aam
xchg
cs
xor
imul
mov
mov
cmp
(bad)
sub
retf
lods
rcr
cmp
or
scas
sub
sub
jnp
xchg
ret
rcl
mov
xchg
dec
mov
sbb
lock
xor
push
pusha
dec
imul
cmp
call
cmp
sub
inc
mov
out
out
inc
inc
(bad)
ret
jae
inc
lods
dec
cmp
xchg
cmp
xchg
cs
aam
ds
add
mov
jle
xor
cmp
outs
ins
mov
(bad)
mov
add
aad
(bad)
pop
pop
clc
pop
xor
mov
scas
arpl
mov
mov
mov
inc
mov
hlt
iret
and
jbe
sar
xlat
sahf
or
in
pop
dec
jl
inc
rcl
nop
cmps
push
aas
fidiv
out
(bad)
sti
ins
xlat
int
aam
retf
add
pop
fadd
xchg
call
nop
push
mov
aam
enter
in
fcmovnb
ret
popf
addr16
mov
std
xor
popa
mov
enter
lods
push
and
fcomi
push
cmp
cld
sub
jbe
(bad)
push
cdq
or
repnz
shr
in
lahf
and
out
js
imul
cmp
xchg
mov
mov
xlat
arpl
push
js
out
vmread
and
and
add
sbb
dec
psubusb
jnp
lahf
and
cmps
push
aaa
xor
and
inc
push
dec
sub
shl
loop
push
stc
sbb
jne
push
xchg
scas
push
jl
data16
bound
mov
pop
pop
repnz
sbb
jnp
loope
lahf
daa
leave
mov
in
jb
xlat
lods
movs
mov
ins
jbe
sub
pop
popf
aaa
ins
and
cmp
cmp
or
popf
inc
movs
out
or
mov
pop
stos
out
pop
aaa
adc
retf
jmp
push
xchg
add
push
mov
push
push
xor
mov
aam
rcl
pop
jb
sahf
fwait
dec
or
stos
pop
sbb
xor
fdiv
inc
cmc
sub
sub
fcom
ret
pop
stos
jge
sub
cmps
xchg
mov
pop
(bad)
into
ss
push
mov
xchg
pop
adc
cmps
jae
cmp
std
outs
daa
int
call
xchg
add
cli
push
or
sub
xchg
(bad)
mov
sar
adc
imul
into
pop
icebp
xchg
lods
rcr
leave
call
int
ror
add
and
test
push
(bad)
int3
dec
inc
dec
sub
jnp
add
bound
pop
adc
mov
repz
test
imul
ret
int3
mov
std
xchg
pop
cmp
jns
int
xchg
dec
and
sub
in
mov
ror
sub
jg
mov
pop
imul
fst
in
and
xor
hlt
dec
fsubr
imul
fwait
dec
imul
mov
pop
dec
lea
jo
xor
mov
cwde
rcl
or
sbb
push
jl
lds
or
cwde
fucom
dec
add
inc
pop
mov
push
or
(bad)
ja
xchg
test
dec
jo
xor
cmc
(bad)
cdq
inc
or
sub
cli
js
cmp
push
jmp
add
adc
retf
shr
add
xchg
cdq
xchg
test
not
ds
sar
nop
cmp
inc
fwait
add
cmp
std
test
push
cmp
mov
std
cmp
clc
mov
dec
cli
adc
ss
mov
mov
and
and
icebp
retf
loop
adc
push
adc
cs
or
push
loopne
sbb
lahf
test
lods
jbe
push
lea
pushf
mov
int3
(bad)
in
add
or
bound
push
cmp
cs
inc
fisttp
dec
mov
fbld
stc
mov
icebp
(bad)
pushf
and
xchg
aas
mov
and
(bad)
popf
out
xchg
iret
cli
mov
xor
jno
ds
jo
rol
outs
call
loopne
scas
data16
call
mov
(bad)
sub
pop
cli
neg
or
push
fsubrp
pop
mov
mov
add
mov
daa
mov
retf
push
data16
jg
push
sbb
rcl
jno
icebp
sub
xor
pop
jno
dec
retf
idiv
not
hlt
ins
or
aam
push
sahf
push
stc
jmp
(bad)
loop
jnp
nop
adc
push
mov
jge
add
cwde
and
loope
(bad)
cdq
stos
add
jecxz
mov
imul
mov
cmp
push
inc
add
mov
push
pop
je
dec
lods
cwde
mov
mov
mov
cdq
sub
mov
dec
or
mov
xchg
mov
mov
pop
out
loope
jecxz
inc
in
add
ins
sahf
pusha
and
fmul
add
test
sbb
stos
cmp
lods
and
fbstp
add
jmp
jb
push
adc
aam
pusha
popa
sbb
popf
add
jecxz
sbb
jmp
fs
push
add
or
push
stos
sahf
inc
in
mov
jmp
pop
adc
lea
mov
jmp
stos
add
dec
mov
out
cmp
cmp
test
jge
pop
xor
in
pop
mov
jbe
or
pop
mov
jmp
ret
add
mov
and
clc
xchg
les
xchg
or
sub
sub
sbb
or
enter
sbb
xchg
ror
fbstp
xchg
lods
sub
repz
jp
aaa
into
xor
sbb
and
cmp
mul
jne
jne
inc
into
cmp
fdivr
add
xchg
stos
inc
xchg
jo
daa
aas
jecxz
(bad)
mov
push
mov
stc
cmp
cdq
mov
in
out
push
xor
arpl
mov
xor
xchg
mov
es
stos
dec
cld
cmps
cwde
xchg
ja
imul
test
pusha
int3
ja
(bad)
add
adc
aad
add
adc
sar
stos
mov
xor
test
ret
push
stos
fild
dec
sub
call
ror
cmp
in
sbb
push
aam
sbb
inc
test
fsubp
mov
pop
mov
les
xlat
push
push
xor
sbb
sub
(bad)
hlt
lock
es
mul
pop
outs
jge
xchg
sbb
imul
fs
adc
mov
sbb
(bad)
sbb
ss
rcr
std
sahf
xchg
je
push
out
or
xchg
inc
dec
sbb
lods
adc
jmp
cmp
cmps
stc
push
pop
or
inc
sbb
shl
pushf
outs
aaa
in
pop
and
cmp
dec
dec
fld
scas
imul
loop
push
inc
stos
movs
ja
pop
xor
shl
xor
(bad)
sub
lock
push
cs
retf
jl
outs
out
or
in
dec
aaa
loope
popa
push
mov
(bad)
xchg
rcr
fisub
pop
and
dec
mov
dec
(bad)
adc
jmp
test
popa
enter
or
retf
pop
inc
ds
or
sub
push
jp
mov
imul
fdivr
mov
data16
aas
ror
addr16
aam
ror
dec
xor
cmp
ja
es
sbb
or
mov
xchg
out
jo
loopne
sbb
bnd
jecxz
out
(bad)
ret
retf
(bad)
lods
cmp
imul
sub
call
adc
add
dec
xchg
loopne
repnz
test
jp
stos
or
mov
or
xchg
and
into
ss
mov
ret
test
push
xor
mov
mov
xor
ret
(bad)
jno
jbe
sub
das
cs
lea
jnp
icebp
je
xor
add
icebp
mov
sub
inc
jl
(bad)
repnz
push
mov
rcl
ins
pop
dec
dec
xchg
add
push
add
dec
pop
cdq
inc
lods
mov
mov
lods
repnz
mov
fcomp
push
push
stos
adc
test
scas
xchg
push
jmp
sti
jbe
jecxz
aam
in
and
sbb
lahf
sub
jbe
inc
lahf
mov
addr16
mov
xchg
or
jno
sub
jae
or
cld
add
add
adc
(bad)
inc
cs
sub
jnp
push
imul
loopne
add
daa
test
fdivr
out
call
out
pop
jae
dec
push
loopne
hlt
pushf
inc
jnp
shl
jle
jle
push
stc
sbb
mov
pop
outs
xchg
into
add
ret
nop
jbe
data16
mov
not
shl
add
cs
xor
or
fwait
sub
test
push
cmp
sub
push
fwait
mov
imul
stos
push
ss
scas
imul
scas
jmp
pop
std
push
sbb
hlt
stos
dec
pop
pop
mov
jle
push
mov
mov
and
fldcw
popa
and
pop
mov
and
add
adc
cmp
ror
inc
sbb
lds
xor
pusha
bound
sbb
fadd
call
push
pop
add
push
cmp
adc
sbb
and
out
sahf
mov
mov
mov
into
mov
repnz
ss
pop
push
mov
(bad)
mov
mov
inc
xor
mov
xchg
mov
mov
pop
adc
arpl
add
mov
(bad)
mov
add
retf
mov
ss
aaa
loop
jns
repz
fild
sub
call
call
push
pop
outs
lahf
retf
jmp
mov
dec
or
sbb
add
neg
mov
or
mov
test
cdq
enter
loop
ja
xor
arpl
loopne
pop
mov
sahf
fbstp
push
dec
xor
inc
lahf
idiv
(bad)
es
ja
mov
fist
rol
xchg
test
jno
push
add
pop
ret
mov
push
fsubr
adc
mov
shr
and
pop
and
outs
dec
sub
or
sub
adc
mov
into
add
adc
je
jecxz
mov
ss
popa
cmps
loopne
mov
ins
jnp
sub
mov
add
cmps
pop
jne
gs
ror
mov
shr
and
dec
jge
(bad)
sbb
and
movs
and
jno
pop
sbb
std
mov
ja
mov
test
adc
cmp
js
sub
aaa
mov
xor
and
dec
imul
ret
push
jmp
push
test
and
sbb
add
xlat
sub
(bad)
sub
cwde
jmp
shl
scas
(bad)
ficomp
(bad)
daa
dec
jmp
jb
inc
push
(bad)
fcomi
xchg
mov
sub
mov
jp
mov
ror
loopne
sbb
ins
pop
call
dec
pop
push
add
pop
aaa
out
popf
(bad)
movs
adc
and
push
dec
dec
mov
lods
hlt
sbb
fadd
scas
sahf
data16
or
dec
test
vxorps
sub
in
adc
pop
push
pop
pop
in
cmp
jecxz
aam
fwait
mov
popf
ret
in
pop
jp
dec
fsubrp
sbb
aad
xor
repnz
mov
scas
shl
xchg
fbld
cmp
leave
cli
xor
mov
mov
fwait
test
push
pop
inc
or
cmp
add
jl
cmp
and
fcmovne
cmp
xchg
ds
add
add
add
dec
mov
jmp
pop
xchg
cmp
inc
ins
aam
cmp
mov
adc
int
push
ret
fild
dec
xchg
ds
inc
xor
xor
jb
xchg
call
push
push
int3
inc
dec
jl
inc
in
adc
push
add
jecxz
dec
push
cmps
push
loop
fsub
add
adc
cmp
aas
adc
pop
mov
or
push
lods
xlat
adc
retf
inc
sub
inc
pop
and
aas
lea
adc
pop
pop
pop
jo
adc
mov
cld
stos
jne
shr
cmp
mov
inc
adc
(bad)
or
les
loop
jmp
mov
push
fld
cmp
cmps
ja
jl
ds
push
jno
repnz
jbe
mov
test
inc
adc
scas
xchg
jae
pop
dec
pop
nop
fstp
cmc
push
sub
cld
and
test
enter
xchg
fadd
lahf
sub
mov
jne
(bad)
bound
bound
sub
push
fdiv
into
mov
xchg
mov
sbb
lahf
xchg
imul
fdiv
mov
icebp
xchg
xchg
stos
mov
push
int3
in
retf
cmps
mov
dec
stos
mov
pop
sub
cmp
xchg
pop
push
scas
or
test
into
into
mov
xor
iret
stos
aam
pop
popa
mov
xor
fstp
pop
pushf
test
cmp
ins
jbe
sbb
nop
pop
xchg
cmps
and
shr
iret
call
stos
movs
into
mov
(bad)
imul
push
or
test
pop
out
jno
sub
sub
jl
clc
test
jnp
dec
js
ins
jae
fdivr
mov
add
loope
hlt
outs
xor
pop
pop
cs
stc
push
push
or
push
jno
adc
adc
fwait
retf
(bad)
test
mov
xchg
fs
inc
jmp
xchg
loope
or
jo
pop
push
bound
and
lahf
lahf
xchg
push
jecxz
sub
scas
mov
sub
aad
out
pop
scas
pusha
pop
jnp
or
and
leave
sub
xchg
cmp
int3
or
jb
mov
sbb
cmp
adc
or
fdivr
push
pop
ror
pop
test
inc
ret
sbb
cli
shl
xor
sbb
ror
adc
pop
xor
mov
or
push
mov
jmp
cmp
and
leave
add
push
aaa
(bad)
fisubr
jl
das
push
ret
fiadd
pop
adc
retf
lock
mov
rol
push
mov
jmp
test
mov
ins
cmp
xchg
lods
push
xor
clc
adc
add
sbb
cmp
les
inc
mov
in
pop
in
xchg
lds
xchg
das
mov
pop
add
inc
jno
pop
mov
jo
jp
sub
sahf
sub
dec
or
mov
sub
or
jg
pop
fldcw
adc
sub
outs
idiv
dec
enter
mov
mov
fnstcw
sbb
stos
inc
add
leave
or
jecxz
fstp
xchg
sub
mov
(bad)
pusha
mov
stos
jne
in
hlt
int
push
inc
push
cmp
push
sub
(bad)
jp
in
xchg
retf
ss
cmp
mov
xchg
or
pushf
jnp
mov
push
cmp
repz
aaa
push
(bad)
dec
or
(bad)
int
push
cmp
adc
scas
(bad)
mov
dec
fs
hlt
js
and
push
mov
push
cdq
mov
(bad)
ds
add
jle
je
cli
sbb
sbb
int3
ins
movs
lock
(bad)
rcr
retf
lea
cmps
push
adc
adc
fsub
and
pop
rcl
inc
lea
js
sub
xchg
jp
pop
es
adc
xor
jns
es
xchg
sbb
stc
jge
mov
mov
jge
arpl
and
ret
test
pop
dec
jae
xchg
ficom
nop
in
mov
mov
pushf
xor
sbb
or
push
movs
xor
push
sbb
and
daa
inc
add
jle
(bad)
lahf
std
retf
lds
push
mov
mov
lahf
icebp
movs
into
cmps
xchg
inc
bound
aam
mov
out
push
das
in
fidivr
and
jno
dec
hlt
bound
mov
xor
inc
mov
pop
adc
clc
xor
sbb
cmp
aad
pop
push
in
or
and
out
sub
popa
mov
cmp
or
or
xchg
xchg
les
cmc
push
test
lods
fucomi
loopne
fdiv
dec
and
sahf
push
pop
cli
xor
jmp
nop
adc
mov
stc
pop
xchg
push
(bad)
push
sbb
std
js
es
cmp
xchg
imul
mov
xchg
sub
add
xor
sub
mov
inc
dec
es
dec
push
cli
dec
xor
pop
rcr
jmp
(bad)
js
or
mov
popa
iret
aad
call
and
loope
cmp
fimul
in
das
fisubr
mov
pop
add
push
xchg
push
jno
les
jmp
mov
lahf
jb
cmp
ss
out
icebp
mov
pop
in
pushf
and
aam
retf
fidivr
xor
xor
rcl
out
fwait
stos
add
test
into
sbb
cwde
push
xor
aas
jb
fbld
repnz
and
imul
in
sub
sub
scas
adc
nop
ins
dec
fdiv
inc
sbb
jge
jp
jo
gs
mov
pusha
push
jge
in
ror
inc
push
sub
imul
jae
adc
push
add
and
pop
enter
in
dec
aad
lods
jbe
jno
ret
mov
rcr
jmp
xor
das
es
int3
inc
push
sti
rcr
mov
push
pushf
cli
mov
cld
cmp
sub
push
cld
sti
cmp
dec
movs
mov
lods
mov
js
mov
mov
jecxz
sub
jno
in
cwde
jge
sub
lahf
push
add
es
mov
(bad)
outs
retf
and
std
mov
das
test
add
pop
sar
jmp
popa
aad
arpl
lahf
lahf
add
call
shl
jbe
push
ret
stos
out
or
and
cmp
clc
mov
(bad)
sbb
pop
inc
data16
push
aam
or
jns
dec
mov
xor
shl
out
mov
rol
(bad)
add
push
inc
nop
pop
lock
dec
add
outs
pusha
and
cmp
xchg
cli
add
jmp
in
jmp
mov
jno
enter
into
mov
mov
jl
test
je
inc
popf
popf
mov
ucomiss
scas
or
cmps
push
pusha
imul
pop
mov
rcl
iret
and
inc
shl
dec
fstp
xchg
lods
push
or
das
lea
pop
int3
jno
retf
xchg
sar
sub
pop
jno
bound
xor
data16
ror
fbld
shr
mov
jno
cwde
mov
jns
adc
stos
cmc
inc
xlat
cmp
jmp
das
sub
sub
xchg
mov
inc
popa
stos
mov
std
ret
pop
and
pop
in
repnz
push
push
jnp
gs
jge
mov
jecxz
xor
cmc
sbb
and
cmc
push
inc
out
xchg
imul
pop
cmp
xchg
pop
retf
into
push
lock
std
jmp
rcr
push
mov
clc
cwde
cld
add
pop
or
int
mov
pop
mov
push
ret
xchg
pusha
and
push
ins
fbld
inc
in
and
sub
pop
jb
mov
jb
inc
jmp
aas
mov
ret
fisub
adc
arpl
mov
cmp
mov
cwde
mov
das
push
jp
mov
cdq
movs
fcmovb
stos
lock
xchg
pop
push
adc
mov
ja
and
mov
sbb
clc
ret
xchg
enter
not
jge
mov
ins
mov
(bad)
in
int3
xchg
xlat
sub
mov
mov
bound
nop
sub
mov
ds
outs
dec
popf
mov
and
jbe
in
stc
lods
sbb
movs
retf
scas
cdq
mov
ins
fistp
pop
adc
das
rcr
sbb
pop
pop
sbb
(bad)
test
mov
push
popa
fdivr
test
xchg
xor
enter
jecxz
jbe
pushf
add
stos
inc
(bad)
out
aam
dec
pop
dec
adc
or
mov
inc
pop
loopne
inc
push
iret
aaa
add
lods
outs
mov
(bad)
jmp
mov
call
add
popf
xor
pop
dec
icebp
add
mov
push
sbb
iret
xchg
pop
mov
mov
pop
out
sbb
ret
or
pop
js
xchg
cmp
xchg
ins
adc
lock
mov
add
inc
in
(bad)
mov
and
sbb
fistp
ror
fs
xor
repz
jge
lods
xor
mov
ss
mov
rol
xchg
mul
push
movs
cmp
mov
in
cli
arpl
inc
mov
movs
enter
int
sub
adc
mov
int
stos
loop
pop
dec
inc
hlt
outs
lds
mov
shl
ficomp
pop
dec
pop
cmp
popf
sahf
jg
mov
xor
pusha
sar
test
aaa
or
iret
retf
cmp
pop
ret
xchg
arpl
aam
movs
and
mov
add
mov
mov
push
repz
js
jne
inc
or
pop
xchg
jnp
xchg
pop
add
adc
test
jmp
inc
push
ss
je
sti
out
test
mov
dec
pop
outs
cmp
stos
jbe
repz
pop
sbb
dec
enter
and
xchg
xor
adc
repz
inc
int3
dec
dec
repnz
push
(bad)
out
mov
call
xor
cs
into
pop
cmp
call
mov
ror
mov
dec
sub
test
mov
inc
dec
jmp
jo
jmp
adc
lods
jcxz
es
cmp
test
(bad)
cld
cmp
in
and
sbb
xchg
gs
icebp
mov
scas
cld
out
and
test
out
imul
shl
mov
jne
push
in
xor
push
xchg
sub
push
sub
xchg
cmp
push
mov
cwde
leave
fcom
dec
mov
repnz
(bad)
jns
mov
xor
sub
retf
out
adc
ins
pop
jl
cmp
mov
pop
mov
sbb
pop
(bad)
movs
xchg
inc
mov
rol
mov
jg
cmp
in
retf
add
jg
shl
ficomp
and
js
ror
mov
push
pop
lods
out
retf
sub
adc
sbb
loope
mov
jmp
adc
lds
push
adc
icebp
mov
iret
aam
or
xchg
int
cmp
imul
mov
inc
sbb
push
mov
or
push
add
jl
xchg
dec
sub
test
(bad)
jno
dec
scas
test
xchg
imul
mov
ins
lahf
popa
mov
mov
in
or
xor
mul
pop
je
in
sbb
mov
imul
jbe
aaa
clc
dec
adc
pop
pop
stos
sbb
fwait
and
int
pop
pop
lahf
mov
dec
pop
jae
jo
int3
add
push
je
je
mov
xchg
push
dec
or
or
and
dec
call
push
lods
xchg
stc
add
out
fnstenv
mov
in
mov
sub
jae
or
mov
fimul
fucomi
mov
xchg
xor
dec
push
sub
test
xchg
pop
pop
sbb
pop
pop
pop
inc
test
std
push
mov
mov
lods
jb
jg
add
pop
jo
sub
aam
and
addr16
cld
movs
pop
hlt
in
loopne
std
fldcw
add
inc
inc
and
fimul
out
pop
inc
inc
mov
jnp
pop
or
dec
push
loop
aaa
adc
mov
push
mov
shr
fild
adc
ja
test
ror
xor
push
out
adc
loop
pop
push
or
aaa
jns
push
cmp
add
shl
push
inc
xchg
fs
inc
ins
movs
mov
xor
loopne
ins
xor
push
call
xor
jl
ret
push
jno
das
stos
rcl
popf
or
jne
jmp
aam
add
sbb
test
xor
pop
jae
inc
popf
out
fs
sbb
pop
cmp
jno
jp
mov
inc
fcmove
stos
adc
or
dec
sub
mov
pushf
mov
mov
scas
xchg
ja
mov
sub
mov
cmp
pop
mov
mov
ror
iret
mov
scas
jp
and
inc
inc
xchg
xchg
jno
pop
ins
add
ror
sbb
mov
lods
mov
or
mov
xchg
loope
lods
adc
fnsave
retf
or
fild
sbb
js
test
xchg
mov
sti
xor
out
fsub
mov
(bad)
mov
ins
dec
lock
inc
cmps
jns
stos
mov
shr
add
or
movs
aaa
jne
lods
ins
mov
out
xchg
mov
sub
fimul
or
(bad)
mov
outs
int3
pop
sub
cmp
popa
pop
iret
xor
lds
ds
fistp
pop
adc
xor
out
xchg
adc
add
cli
sub
scas
call
pop
(bad)
dec
cli
enter
jecxz
and
ins
ja
out
fcompp
fidiv
(bad)
std
inc
ret
pop
je
js
and
pushf
lock
or
mov
aad
fmul
pusha
jle
in
push
sbb
and
cmp
stos
xor
jae
push
es
adc
sub
xchg
in
fdivr
sbb
repnz
cmp
daa
pop
xchg
jecxz
sti
inc
aas
add
jl
fistp
and
push
mov
cli
(bad)
xchg
dec
ror
push
stc
shr
push
out
cld
dec
ror
push
push
jmp
cmp
out
inc
call
shl
fadd
jge
dec
pop
fisubr
scas
xchg
into
sbb
fadd
sbb
aaa
fistp
loope
fst
or
iret
jmp
and
or
stos
adc
lea
leave
inc
into
dec
sti
inc
mov
inc
leave
push
adc
dec
ret
push
cmc
ret
and
add
jno
in
or
mov
imul
test
cmp
mov
lock
ror
leave
or
hlt
or
inc
xchg
adc
cmp
push
ret
mov
jb
push
push
in
fidiv
inc
out
inc
sti
mov
push
xor
inc
xchg
xor
icebp
cli
mov
mov
or
aaa
mov
loope
mov
pop
sub
xchg
pop
xchg
jmp
inc
cmc
adc
mov
adc
mov
mov
jne
mov
movs
das
pop
test
ins
lock
mov
cmp
movs
push
scas
add
lds
mov
inc
xchg
cmp
fmul
pop
je
nop
aad
push
cld
ja
test
and
push
iret
mov
hlt
(bad)
sub
pop
sub
inc
cwde
push
push
imul
test
jmp
movs
aam
ds
inc
sub
adc
aad
ins
push
mov
push
cmp
mov
sbb
inc
and
push
mov
add
sar
loop
popa
adc
aas
mov
mov
rcl
and
fld
aam
mov
ror
adc
cmp
loopne
neg
sbb
sbb
pop
xchg
out
stc
adc
in
jp
loop
leave
adc
test
icebp
mov
ss
dec
rcl
mov
push
xlat
loopne
fnsave
ja
int
int3
call
rol
push
lock
dec
jno
sbb
lahf
lahf
out
cmp
je
mov
mov
dec
and
xchg
ja
inc
sbb
mov
pop
out
std
push
and
retf
mov
les
test
mov
add
jae
jnp
test
pop
xor
sub
inc
mov
push
dec
leave
les
pop
dec
data16
pop
dec
sbb
retf
xchg
xchg
movs
push
jmp
in
into
btc
lods
fs
mov
aaa
xchg
pushf
mov
jno
push
iret
shr
dec
(bad)
das
movs
mov
pop
out
push
mov
arpl
out
mov
pop
mov
inc
out
adc
jl
jge
pushf
mov
test
shl
jns
or
bnd
cmp
outs
out
in
push
pop
icebp
fild
xor
repnz
add
xlat
movs
test
es
pop
aas
jg
sbb
mov
movs
int
(bad)
xchg
fwait
xlat
int
inc
fs
xchg
mov
mov
jg
in
mov
aas
leave
push
push
and
cmc
jmp
adc
(bad)
rcr
or
sbb
xor
loop
fst
aas
inc
cmp
mov
leave
sahf
xor
lea
fdiv
cmp
mov
repz
dec
call
clc
sbb
xchg
adc
(bad)
aaa
cld
rcl
add
mov
les
push
add
aad
mov
idiv
dec
xchg
inc
in
add
pusha
add
stos
mov
lods
fld
xor
xchg
fmul
jo
retf
lea
mov
dec
data16
cmp
sbb
add
jns
nop
and
enter
cmps
add
inc
cdq
cdq
shr
mov
pop
mov
xor
test
jmp
jmp
leave
jns
sti
adc
mov
and
jo
xchg
enter
sbb
fidivr
jns
(bad)
xlat
mov
test
mov
mov
mov
(bad)
in
ja
mov
inc
push
ret
mov
shl
ss
cmp
ret
cld
rcr
(bad)
sbb
and
test
xor
into
lods
xchg
adc
cli
test
cmp
and
adc
mov
repz
mov
enter
xchg
fdivr
jo
adc
int3
aad
sub
sub
cmp
fcomp
aad
retf
ins
and
adc
push
adc
inc
dec
mov
mov
(bad)
out
add
out
cmp
xor
movs
int
add
jmp
pusha
jp
test
mov
cmp
not
jecxz
mov
out
nop
dec
xor
mov
ins
aad
addr16
xor
xor
bound
sub
cmps
sbb
mov
cmp
ret
(bad)
scas
inc
mov
push
sbb
inc
inc
aad
cld
inc
pop
xor
ds
je
stc
imul
fsub
push
xchg
scas
in
outs
leave
mov
mov
jnp
out
push
test
(bad)
retf
aaa
fld
xchg
pop
pop
jne
aaa
call
adc
jnp
sbb
popf
inc
cmp
jne
sub
into
add
jle
std
mov
xor
aas
fdiv
xchg
jno
sub
scas
test
mov
inc
mov
lods
xor
mov
and
sub
add
rcr
xchg
retf
sti
adc
pop
sti
pop
mov
sub
aaa
jecxz
push
outs
nop
aas
test
nop
rcl
loopne
fmul
shl
aas
cs
stos
ins
mov
ret
lahf
or
adc
fiadd
icebp
loope
mov
int
loop
pop
or
adc
cdq
dec
ja
pushf
stc
in
inc
jp
loopne
pop
push
jmp
push
popf
(bad)
mov
ret
fcom
jmp
out
jno
jle
jge
data16
push
clc
outs
sbb
lahf
xor
xor
ffree
mov
aam
add
mov
inc
rep
loop
xchg
in
push
jns
mov
adc
push
je
push
hlt
ss
call
in
and
add
icebp
sbb
adc
jmp
mov
daa
jne
sub
popf
lahf
lods
jbe
pop
xchg
nop
data16
xor
cmp
call
loop
aad
xchg
adc
push
pop
mov
push
test
cmp
mov
push
inc
nop
mov
mov
pop
aas
xor
ffree
mov
jmp
and
test
pushf
call
inc
cdq
jbe
fild
ja
jp
ins
in
and
jo
mov
test
xchg
inc
xchg
mov
stos
xchg
and
pusha
(bad)
mov
aad
shl
addr16
add
cmp
add
fdiv
mov
rcl
fcomp
cmp
loop
pop
sbb
(bad)
dec
rol
(bad)
jnp
out
or
cmp
sar
repz
sub
(bad)
retf
mov
mov
stos
aad
lods
ins
and
jg
mov
xor
lahf
in
(bad)
jg
pop
jge
in
test
dec
(bad)
xlat
mov
rcl
and
xor
in
adc
mov
nop
dec
ror
fs
lods
fsubr
leave
(bad)
sbb
cmp
mov
loopne
ss
cmp
pop
mov
cdq
pop
(bad)
aam
cld
or
pop
call
jne
sbb
iret
add
mov
push
xchg
(bad)
and
loop
push
mov
popf
vpxor
inc
out
sbb
jl
loop
dec
and
xor
stos
out
cs
and
jno
fbld
mov
retf
lea
(bad)
add
push
scas
out
in
aad
sbb
repnz
add
(bad)
xor
sbb
movs
push
test
rep
sub
pop
loope
retf
sbb
push
add
cld
pop
sti
jbe
add
aad
jle
mov
int
loopne
dec
ins
test
xor
dec
shl
ss
mov
ss
mov
iret
pushf
outs
dec
or
inc
pop
inc
push
mov
push
ds
loop
fs
pop
ins
daa
fst
stos
loope
and
and
pop
fdiv
ret
pop
popf
push
inc
popf
out
sub
push
aas
lea
pop
retf
mov
push
jl
pop
pushf
cld
add
stos
inc
pop
ins
dec
out
call
nop
rcr
lods
popf
imul
test
pop
push
ret
mov
inc
push
ret
nop
pop
push
out
adc
cmps
and
or
repz
jecxz
repz
dec
in
pop
push
out
add
fcmove
popf
cmps
sbb
cmp
icebp
(bad)
std
jge
mov
pop
push
xor
xor
mov
cs
mov
sub
jne
mov
sbb
imul
lds
dec
xchg
inc
xor
adc
aas
adc
and
jle
sub
call
fisubr
or
or
das
adc
push
dec
mov
popf
jno
test
ror
jo
inc
outs
add
in
and
pop
in
outs
sahf
xor
push
icebp
dec
clc
jle
mov
mov
addr16
fisub
sbb
mov
shl
sub
pushf
cdq
jg
(bad)
fadd
sub
scas
adc
jnp
dec
or
sbb
sub
and
dec
or
ror
mov
dec
rcr
test
fiadd
(bad)
rcr
lock
loopne
fdiv
fucom
add
cmp
cmp
sub
outs
push
dec
or
push
and
jo
out
lds
inc
add
retf
into
mov
ins
sar
fs
loopne
ror
jnp
add
inc
test
pop
xchg
cli
dec
stos
ins
sub
fnstsw
mov
push
adc
je
mov
fadd
dec
jmp
repnz
jecxz
(bad)
loopne
std
call
mov
cli
inc
popf
mov
add
test
push
pop
cwde
pop
push
std
fs
out
add
add
(bad)
shl
mov
jno
div
and
push
fcomp
inc
jnp
inc
lods
mov
and
int
mov
pop
ja
cmp
jae
xor
aas
sub
scas
sub
out
mov
sbb
mov
xor
mov
and
pop
cmp
or
fisttp
cmp
mov
fcom
mov
mov
pop
inc
es
test
and
mov
jbe
daa
jmp
jae
js
sbb
dec
jp
jbe
leave
xchg
mov
js
xchg
stos
xor
pop
stos
sbb
xchg
push
aad
mov
xchg
jb
jae
loope
jecxz
iret
call
xor
mov
mov
sub
pushf
mov
jl
mul
lahf
add
push
cdq
jg
je
aam
std
dec
out
dec
mov
mov
std
sti
xor
cmp
retf
lock
pusha
cmp
test
js
dec
shr
cmp
hlt
iret
aaa
mov
jle
adc
rcr
and
push
mov
jg
pop
cmp
xchg
and
cmps
mov
mov
fld
cmp
add
mov
shl
psubq
dec
inc
cmps
ret
retf
cmp
mov
js
mov
inc
shr
add
pop
mov
push
sub
jns
jp
sbb
cs
outs
cs
jle
sub
mov
mov
push
(bad)
int
sub
sbb
(bad)
leave
lahf
xchg
mov
jmp
mov
mov
cdq
sahf
dec
cmp
xor
inc
loope
adc
and
imul
push
jge
jno
xor
mov
(bad)
imul
mov
adc
mov
mov
ins
rol
jp
dec
mov
mov
aaa
shl
mov
sub
pop
or
cmps
or
das
ss
dec
cmp
cmp
xor
adc
jle
lock
dec
xor
sbb
iret
jecxz
mov
hlt
(bad)
(bad)
or
mov
push
mov
jmp
sbb
add
push
cmp
hlt
dec
adc
js
jbe
push
and
neg
mov
clc
test
jnp
cmp
xchg
outs
in
pop
xchg
movs
mov
xchg
mov
mov
daa
scas
(bad)
cmps
mov
in
inc
scas
sub
ins
fnstenv
ds
jae
pop
pop
mov
data16
xor
into
movs
ds
or
or
popa
repz
loop
jns
jae
dec
mov
push
push
or
fbstp
mov
inc
add
fsub
das
or
js
lods
inc
jo
mov
jl
(bad)
mov
mov
mov
or
(bad)
push
inc
cld
and
add
or
and
push
pop
mov
xchg
pushf
mov
cmc
xor
out
out
pop
das
pop
or
dec
ror
int3
loopne
add
popf
mov
mov
sub
pop
aaa
outs
aaa
sub
xchg
or
fs
adc
mov
jb
aam
sbb
outs
inc
arpl
(bad)
stc
test
out
xor
(bad)
jbe
in
and
jmp
or
scas
ret
ss
jg
icebp
mov
ins
cli
dec
inc
retf
dec
ins
sti
mov
push
popa
popf
sub
and
dec
call
cmp
sbb
adc
movs
stos
adc
jg
cmp
inc
mov
xchg
mov
pop
repz
mov
or
adc
call
add
not
stos
fdiv
jp
cmp
mov
push
jb
cwde
xchg
out
sub
ins
shl
adc
pop
fidiv
cmc
das
ret
aad
push
rcr
cmp
dec
call
imul
xchg
imul
mov
xchg
out
ins
fnstcw
ret
(bad)
or
jecxz
xlat
xchg
retf
fisttp
lahf
sbb
gs
add
or
mov
mov
inc
adc
shl
dec
jp
loopne
pop
sub
(bad)
stos
push
stc
sub
sub
call
dec
iret
mov
or
mov
cli
or
cmp
sbb
sub
pushf
pop
inc
je
rcr
add
aaa
shl
and
xor
jp
stos
add
daa
data16
or
push
dec
jne
or
adc
pop
xchg
lea
jmp
adc
(bad)
addr16
xor
push
call
mov
aad
and
cs
dec
mov
and
sub
lods
inc
outs
sbb
sub
(bad)
mov
(bad)
stos
lods
data16
lea
sti
(bad)
dec
mov
push
lods
jle
aas
lods
fbstp
arpl
lock
sahf
dec
ja
mul
(bad)
jmp
shr
shl
loop
repz
pop
push
jecxz
mov
scas
sub
or
addr16
lock
cmps
fsubp
dec
cmp
mov
in
xchg
lods
cmp
pusha
cmp
cmp
movs
sub
(bad)
not
dec
arpl
push
cli
xor
(bad)
xlat
inc
pop
push
push
ins
add
call
xor
fnstsw
dec
xchg
add
mov
add
mov
movs
xor
pop
or
mov
xchg
xchg
xor
mov
inc
jle
jns
ret
test
(bad)
pop
bound
push
xor
or
or
out
lods
outs
mov
push
loop
dec
pop
inc
push
leave
(bad)
inc
mov
iret
dec
and
pushf
mov
inc
adc
mov
enter
paddq
in
popf
cmp
jnp
add
mov
div
cdq
sbb
dec
jg
pop
mov
neg
shl
pop
mov
mov
call
test
repz
stos
pop
mov
iret
inc
ss
out
mov
int
cmp
(bad)
aad
imul
jge
rol
dec
xor
push
mov
jbe
(bad)
ror
mov
cwde
mov
not
(bad)
jno
loopne
cdq
popa
aas
test
jae
sbb
jb
ja
ins
xchg
(bad)
loope
test
inc
arpl
jae
adc
and
xchg
rcr
push
lods
sti
dec
and
fs
add
xchg
loop
inc
fcom
jg
retf
add
enter
inc
pop
aaa
lahf
sub
mov
mov
fmulp
popf
aas
popf
movs
mov
mov
aad
mov
int3
jmp
and
fisttp
xchg
pop
add
inc
(bad)
jmp
mov
fdiv
inc
out
iret
push
aaa
lock
shl
pop
mov
mov
lods
jecxz
cmp
out
ret
ss
xchg
je
or
lods
inc
rcr
dec
pop
popa
pop
dec
adc
in
shl
add
aas
xor
xor
mov
(bad)
sub
mov
mov
jl
(bad)
pop
lock
cdq
in
dec
retf
lods
push
cmps
sub
not
aam
retf
hlt
sub
mov
int3
mov
mov
loop
mov
in
neg
jmp
pop
cmp
sbb
or
and
cmps
pop
in
adc
fistp
mov
mov
jns
cli
rcl
mov
out
(bad)
pop
mov
nop
inc
dec
mov
add
aam
enter
loop
fsubr
sub
ret
dec
dec
xor
mov
out
fldenv
mov
xchg
pusha
call
dec
aaa
xchg
cli
mov
cdq
repz
retf
xor
sbb
ret
(bad)
jmp
gs
pop
pop
or
inc
add
(bad)
xor
pop
sub
and
icebp
lahf
jo
xor
mov
add
mov
sub
jb
pop
fs
clc
out
rcr
jnp
inc
adc
enter
sti
sub
mov
in
mov
ins
ret
dec
add
js
icebp
inc
fnclex
mov
aas
sub
cmps
mov
es
call
mov
cs
mov
or
sahf
cmp
xor
xchg
pop
sub
scas
or
sar
xchg
adc
js
sbb
adc
mov
jl
push
fwait
aas
enter
fcmovnb
ja
adc
jg
sub
fs
test
adc
lock
xchg
repz
cmps
(bad)
push
cmps
dec
jb
sub
cmp
inc
call
movs
xor
gs
in
fnstsw
mov
nop
sbb
(bad)
mov
fnstcw
clc
dec
and
sbb
fst
retf
fbld
mov
cmp
aaa
scas
inc
js
mov
das
int
in
dec
imul
gs
cmp
jb
mov
cld
ja
or
(bad)
adc
mov
add
or
mov
dec
cmp
(bad)
std
bound
in
add
cmc
jmp
mov
dec
jp
shl
mov
inc
lock
mov
bound
sub
popa
inc
popa
dec
dec
cmp
retf
stc
add
int
push
fidivr
daa
stos
fmul
(bad)
stc
(bad)
push
inc
aaa
mov
mov
into
jmp
fsubr
inc
popa
sub
inc
fild
or
pusha
inc
mov
mov
mov
outs
mov
jne
sub
cmp
xchg
das
icebp
sbb
mov
pop
fisub
mov
push
sahf
pop
pop
int3
push
outs
jb
mov
mov
fs
fcom
inc
push
mov
fs
lods
jae
movs
retf
dec
or
dec
(bad)
popf
cmc
xor
cmp
adc
or
jbe
add
mov
ja
aad
pop
or
mov
repz
jmp
push
shl
jp
fld
shr
pop
adc
push
outs
xchg
jg
inc
jp
int
dec
and
std
popa
mov
ror
mov
(bad)
xor
jge
jmp
dec
fisttp
mov
ins
xchg
xor
loopne
out
cld
sub
inc
gs
mov
call
popa
add
xchg
stos
aam
ja
pusha
or
in
push
cs
cmp
test
test
add
sub
or
push
mov
popf
je
popa
stos
movs
dec
push
call
xchg
mov
push
jge
xor
sub
push
cli
jge
push
shl
push
push
push
dec
cmp
test
enter
test
and
push
outs
push
mov
fild
pop
ret
and
xor
jne
test
in
int
mov
mov
aaa
std
outs
jns
(bad)
test
dec
xor
and
cmp
mov
arpl
xor
outs
cld
inc
pop
pop
add
push
mov
mov
ror
mov
je
call
pop
push
ja
fwait
inc
jae
jl
jmp
fild
mov
push
pop
dec
inc
xchg
xchg
in
in
xchg
xor
bound
push
dec
mov
int
loopne
cmp
mov
pushf
mov
les
pop
adc
mov
lea
or
inc
outs
push
pop
cmps
jmp
xchg
fmulp
sub
or
stos
pop
popf
int3
sub
mov
std
and
(bad)
pop
dec
aas
imul
fiadd
outs
mov
jle
jnp
in
or
xor
sbb
cmp
lods
xor
inc
movs
lods
xchg
lods
inc
outs
adc
das
ficomp
popa
push
pushf
idiv
sbb
or
add
mov
dec
and
push
ret
fcomp
and
scas
das
xor
jge
int3
(bad)
icebp
and
(bad)
aam
push
pop
mov
(bad)
stos
cmp
inc
push
aam
outs
les
nop
fld
adc
icebp
popf
int3
(bad)
je
jl
mov
maxps
fadd
jo
xchg
movs
or
sbb
stc
adc
rcl
aaa
xchg
jmp
pop
cs
int
xor
out
iret
nop
(bad)
sbb
loope
xchg
stos
call
mov
jns
std
mov
clc
jae
push
cmp
mov
stc
mov
push
inc
dec
test
xchg
test
mov
imul
inc
adc
xchg
push
push
jmp
or
xchg
adc
push
test
xchg
dec
in
fsubp
cmp
cmp
gs
add
aad
push
test
loopne
cli
ror
sbb
mov
jg
pop
leave
jb
add
and
nop
daa
sub
mov
std
mov
add
rol
add
test
test
push
pushf
or
or
(bad)
pop
shr
dec
mov
out
adc
cmp
or
dec
xor
clc
iret
mov
inc
pop
push
aas
sti
data16
lahf
cld
test
push
repnz
rcl
jae
xor
inc
pusha
pop
mov
not
ror
push
pop
inc
pop
inc
xor
scas
push
imul
add
sti
hlt
gs
cmp
mov
jmp
(bad)
imul
movs
jmp
mov
dec
mov
mov
cmp
clc
movs
lods
sti
xchg
dec
push
jae
les
mov
fst
jl
mov
(bad)
in
stos
cmp
pop
mov
inc
mov
xchg
mov
push
in
ja
add
pop
cmc
daa
dec
call
xchg
cmc
(bad)
(bad)
mov
mov
shr
inc
push
jmp
int
push
retf
clc
rcr
xchg
sub
mov
ins
sub
xor
stos
push
jb
xor
out
mov
in
jbe
xchg
push
jnp
mov
jae
dec
loopne
and
xchg
and
add
pop
aad
mov
jo
mov
fild
add
inc
pop
sbb
test
imul
sub
xrelease
fs
sar
mov
jecxz
outs
ds
cwde
dec
movs
jnp
addr16
vpcomb
add
jle
pop
dec
mov
and
jp
in
inc
jp
push
imul
in
jp
pop
inc
adc
cmp
adc
outs
push
jne
aam
loopne
popf
mov
nop
add
loop
out
jno
pusha
int3
pop
fidiv
call
xor
mov
mov
movs
mov
out
repz
sub
fistp
rol
(bad)
iret
and
lds
fchs
int3
gs
sti
dec
cmps
mov
std
movs
cmp
dec
cmp
dec
hlt
mov
and
scas
test
jnp
call
sbb
push
in
jmp
jmp
push
ror
(bad)
out
pmulhw
pop
mov
jecxz
test
push
icebp
push
rcr
adc
fistp
outs
enter
scas
loop
pop
in
mov
and
fsubr
inc
fld
ds
sbb
repz
cwde
and
retf
popw
in
ja
ja
inc
pushf
pop
out
mov
movs
sahf
int3
add
mov
cmp
call
mov
popa
pop
push
aas
push
push
xor
ror
mov
sti
cld
mov
mov
xor
push
sbb
inc
push
loope
jae
push
xchg
dec
popa
sbb
sahf
jbe
ja
out
pop
mov
dec
adc
jne
pop
cld
clc
xchg
loopne
into
mov
in
xor
sub
mov
or
cmp
or
imul
jno
inc
dec
sbb
ret
aam
neg
sub
or
adc
pop
xchg
mov
jae
mov
sysenter
pop
iret
in
popa
xchg
fld
arpl
fidiv
test
dec
mov
cmp
mov
xor
lds
xor
mov
daa
mov
or
jae
icebp
lea
fwait
dec
push
cmp
aad
fmul
cmp
loope
stos
mov
inc
add
les
je
xchg
not
push
push
in
or
mov
sbb
jo
sub
add
jecxz
movs
adc
mov
push
xchg
cmp
loop
sti
pusha
mov
out
out
enter
ins
add
shl
adc
fild
mov
or
jb
retf
xor
pop
xchg
jge
test
push
jle
sub
mov
xchg
into
aam
add
adc
cli
data16
aaa
xor
and
jmp
in
mov
scas
fdivr
dec
mov
lahf
cmp
std
cdq
out
sub
or
out
das
and
adc
pop
mov
out
jmp
inc
push
inc
xor
fsub
(bad)
dec
aaa
fistp
retf
and
retf
rol
repz
mov
jns
or
rcl
(bad)
test
fcom
adc
popa
pop
adc
scas
inc
cmp
cmp
pusha
das
xchg
and
sbb
pop
arpl
out
xor
imul
xor
adc
imul
aam
in
push
sbb
movs
lahf
out
rcl
jne
in
in
out
jp
jbe
mov
shr
loop
push
push
or
jae
inc
inc
adc
push
retf
test
ss
push
popf
jno
(bad)
fdiv
adc
ja
fstp
and
push
test
cli
lds
cwde
inc
mov
lds
ds
lods
dec
retf
mov
lea
out
dec
sbb
bound
int
cmp
ss
mov
mov
cmp
mov
je
and
aam
xchg
in
bound
cld
imul
adc
int
les
shl
(bad)
pop
xor
movs
inc
pop
xor
cmp
jne
call
fist
lock
and
cwde
cmp
iret
jb
mov
ins
sub
ins
cld
popa
retf
xchg
jg
jne
adc
(bad)
lods
int
aas
push
jecxz
into
fidiv
inc
mov
movs
add
pop
pop
call
jmp
push
vpmacsdqh
jmp
popf
mov
and
dec
dec
and
jnp
scas
cmp
adc
dec
aam
clc
or
jo
and
xchg
scas
test
jo
dec
add
push
(bad)
pop
adc
sahf
data16
cmps
push
cmp
jecxz
push
sub
popa
into
jb
stos
(bad)
loop
sti
in
mov
pop
adc
(bad)
retf
pop
ror
sub
pop
xor
int
aas
sbb
cli
inc
movs
repz
sahf
loope
jno
vcvtss2si
icebp
mov
(bad)
int
repnz
jecxz
retf
ret
dec
add
xchg
xchg
mov
ins
push
push
in
or
jge
and
pusha
pop
xor
xchg
out
movs
std
repz
add
push
lods
jbe
sbb
or
inc
jle
dec
xchg
cdq
les
jb
push
ds
shr
jecxz
push
mov
outs
repnz
adc
loop
sbb
jl
push
inc
clc
bound
retf
daa
mov
std
pop
enter
loope
pop
call
pop
inc
inc
xchg
mov
xchg
repnz
sahf
add
aad
rol
call
pop
aam
dec
cmc
jge
test
repnz
cmps
and
hlt
or
fmul
inc
cmc
cmp
in
add
fisub
lahf
or
arpl
ret
(bad)
outs
shl
aas
pop
fdivr
jno
fcom
and
pop
inc
mov
mov
fadd
ror
scas
inc
fadd
jge
jl
xchg
lds
shl
inc
pop
dec
aam
mov
adc
ror
add
push
fistp
push
scas
imul
mov
ins
dec
clc
sbb
mov
xchg
daa
shl
jb
adc
aas
loop
in
pop
xchg
rcl
ret
push
data16
lea
push
jmp
xchg
fld
fbld
aaa
mov
push
stos
and
fdivr
mov
inc
stc
into
std
jmp
popf
sbb
rol
test
fcomp
xchg
mul
shl
scas
push
pop
(bad)
push
dec
retf
mov
loop
and
sub
jp
(bad)
loopne
add
dec
inc
shr
fild
mov
mov
sub
jmp
int3
inc
ror
jge
add
or
sub
or
adc
es
dec
mov
mov
aaa
sbb
clc
loopne
jno
sbb
rol
imul
add
int3
xchg
adc
push
cmp
aad
add
adc
loop
loop
ss
push
xchg
arpl
xor
adc
push
ins
shr
jns
rcl
inc
mov
sub
ins
cwde
cmp
jns
lahf
xor
push
mov
pop
cdq
mul
jnp
neg
fistp
sbb
sub
mov
retf
pop
in
adc
idiv
push
punpckhdq
cmp
(bad)
adc
sub
lock
mov
loop
mov
mov
add
out
push
mov
jmp
push
lea
loopne
popf
popa
int3
push
imul
inc
adc
pop
and
xor
push
push
mov
or
rcl
and
cmp
sub
pop
dec
ret
dec
ja
push
pusha
mov
xor
jmp
sbb
aam
mov
ds
xchg
sub
xor
ret
popa
or
aaa
fistp
adc
or
movs
int
jb
jg
mov
add
inc
shl
mov
scas
(bad)
push
xchg
mov
xchg
inc
inc
iret
dec
inc
pop
repnz
mov
hlt
sbb
cmp
cli
jge
div
repz
mov
lods
fmul
jae
cli
jbe
xor
jne
jmp
sti
or
stos
mov
inc
cwde
pop
and
stos
dec
mov
in
aam
je
push
retf
sub
js
loope
push
jbe
push
mov
jmp
aad
adc
enter
cmp
push
nop
outs
data16
in
sbb
xchg
popa
pushf
retf
xchg
cmp
sub
adc
inc
inc
mov
mov
adc
sbb
mov
adc
xor
movs
leave
scas
test
mov
fimul
in
repz
into
rcl
aas
pop
gs
leave
das
movs
movs
pop
dec
mov
(bad)
push
int
inc
lods
push
sar
ja
test
fmul
cs
fbstp
mov
(bad)
call
loop
mov
cmps
sub
loop
mov
fwait
(bad)
cli
add
push
adc
(bad)
imul
movs
ret
ja
(bad)
out
leave
out
mov
xchg
jmp
jne
add
es
sub
xlat
in
test
adc
out
test
inc
cmp
xor
sbb
loop
mov
neg
shl
mov
mov
add
loopne
inc
push
clc
xchg
push
cli
or
je
iret
lods
xchg
xchg
jo
mov
into
sbb
iret
dec
scas
test
call
jmp
pop
cmps
jmp
pop
fldenv
mov
push
add
add
and
(bad)
jmp
cwde
sti
push
mov
movs
xor
push
inc
dec
fst
sar
mov
jae
scas
ja
add
add
sti
and
mov
jle
je
imul
rcr
mov
jns
fiadd
pop
dec
xlat
jge
xchg
mov
push
aaa
lds
inc
xor
jno
xor
adc
or
xor
fidiv
lea
sub
test
xor
mov
mov
das
lock
inc
dec
fstp
add
icebp
je
sbb
(bad)
sahf
push
lods
xchg
pop
mov
dec
cmp
mov
adc
jb
pop
mov
fidiv
bound
mov
inc
jmp
or
les
ss
xchg
daa
popa
dec
jnp
pop
mov
cmp
movs
add
sub
test
int
imul
sbb
xchg
call
clc
xor
push
inc
push
mov
sub
cs
cmc
mov
shl
into
mov
call
push
jne
call
dec
int
adc
add
in
push
mov
mov
sub
jb
data16
imul
sbb
int
mov
xor
out
das
enter
fs
mov
mov
iret
xor
mov
lods
ds
test
(bad)
je
xor
mov
push
jecxz
dec
jne
std
rcl
jge
daa
icebp
cmps
sbb
mov
and
dec
shl
call
inc
out
adc
gs
push
mov
js
adc
mov
popa
mov
test
push
stos
inc
sbb
inc
jb
sahf
and
add
push
mov
jae
nop
mov
xor
test
mov
jns
scas
loopne
out
push
aad
pop
mov
dec
mov
or
mov
retf
mov
pop
cmp
add
mov
arpl
inc
js
cwde
or
push
push
jp
inc
jns
cli
je
xchg
jno
(bad)
jmp
push
sub
or
dec
outs
mov
ror
dec
mov
sub
dec
ds
or
das
push
dec
lea
jecxz
pop
cmps
sti
pop
movs
jl
shl
pop
adc
inc
sub
fcomip
add
cmp
pop
sub
sbb
sub
sub
jo
cmp
fisttp
repz
xchg
out
(bad)
in
mov
push
dec
int
inc
ss
maxps
and
rcl
scas
rcr
xor
test
push
fwait
(bad)
sbb
stos
or
fld
pop
out
sub
mov
test
cmp
pop
jns
icebp
(bad)
jnp
mov
or
adc
mov
push
jbe
lods
test
jp
aad
inc
imul
in
addr16
or
das
jmp
stos
lahf
sub
call
add
ins
std
ins
test
rcl
jmp
fs
fld
cmp
icebp
fldenv
sbb
jp
jmp
(bad)
out
jo
or
jmp
xlat
fnsave
fidiv
in
pusha
adc
cwde
fcmovnb
cmc
mov
push
sbb
inc
sbb
cmps
sbb
push
stos
retf
(bad)
(bad)
add
adc
xchg
vphsubdq
hlt
inc
in
mov
pop
dec
movs
mov
dec
inc
test
or
cwde
ret
mov
adc
lds
sub
push
jo
je
aam
int3
add
cld
dec
mov
in
sub
and
dec
adc
in
pop
inc
mov
fmul
add
es
inc
mov
popa
add
xor
sbb
(bad)
pop
fist
fst
sub
or
mov
dec
out
(bad)
mov
add
inc
jnp
cmp
ins
mov
jl
aam
cld
fistp
adc
lahf
sub
pop
cmps
sbb
popf
sub
adc
mov
shl
inc
jne
test
movs
and
dec
pop
mov
out
xor
jle
jae
sbb
inc
xor
or
and
sub
loopne
sbb
cmp
xor
inc
iret
loope
ret
pop
fnstsw
je
xchg
ret
push
imul
or
and
daa
aaa
fimul
rol
jnp
aam
mov
rcl
rcl
xchg
mov
xchg
sahf
pusha
neg
jbe
hlt
stos
cmps
mov
ins
cmp
aaa
mov
rcr
sub
rcl
inc
(bad)
int
out
inc
leave
gs
xchg
xchg
out
je
fld
sub
xor
pop
jp
mov
jns
inc
popa
fcomp
enter
jb
or
mov
xchg
sub
mov
mov
lea
mov
and
fadd
and
inc
mov
int
push
dec
popf
cld
inc
pop
sbb
mov
(bad)
mov
out
mov
sub
dec
mov
movs
cmp
inc
iret
mov
fimul
adc
mov
call
leave
sti
fldcw
sbb
pop
push
shl
aad
or
cmp
and
push
jp
mov
add
mov
and
daa
in
and
imul
loope
(bad)
cld
lock
cmps
mov
call
das
dec
adc
pop
es
and
(bad)
xchg
and
mov
sbb
xor
cmp
adc
jecxz
fwait
adc
ss
push
push
mov
mov
dec
sbb
xchg
jge
inc
sub
push
enter
inc
scas
mov
test
and
scas
vmovsldup
int3
lock
push
sub
in
mov
(bad)
mov
mov
mov
test
or
sub
ins
in
xchg
lock
pop
jb
imul
push
or
or
int
in
cmp
push
inc
xor
aam
xchg
push
fwait
loop
call
js
sub
(bad)
mov
out
mov
mov
dec
mov
mov
mov
cmc
lea
shl
adc
add
xor
dec
and
gs
ret
xor
aad
stos
sbb
lock
scas
adc
sbb
inc
xor
fnstenv
lea
mov
enter
idiv
das
jbe
add
mov
sti
sbb
dec
mov
les
xor
imul
jge
jp
sub
imul
push
ins
and
and
mov
leave
lahf
sbb
lea
loop
sub
aas
sub
ret
jnp
pop
mov
fcomp
mov
dec
les
dec
lods
dec
movs
in
mov
je
inc
fisub
mov
xchg
cmp
in
or
push
into
push
icebp
pop
push
jnp
xor
push
cli
cmps
pop
shr
out
mov
fadd
rol
add
inc
mov
outs
mov
add
add
call
adc
cs
test
sub
mov
and
adc
xchg
mov
data16
or
mov
add
sbb
xor
in
daa
enter
mov
call
jl
cmps
js
daa
and
std
iret
je
dec
clc
adc
sub
jnp
movs
out
inc
neg
mov
xchg
popa
rcr
and
add
and
sbb
lock
xchg
ret
xor
das
jge
cmp
sahf
arpl
cmp
cli
push
aaa
push
adc
xor
adc
test
push
add
push
adc
cmp
les
test
fsubr
sbb
and
adc
dec
sub
jmp
fldenv
xor
ja
add
into
es
mov
fstp
inc
je
sbb
je
pop
and
pusha
lahf
in
loop
and
or
pop
test
sti
mov
call
dec
movs
sbb
mov
into
mov
pause
and
adc
dec
pop
inc
xchg
add
jne
inc
mov
ret
loop
ja
mov
mov
outs
ror
popf
mov
gs
jnp
icebp
or
dec
push
or
fisub
sbb
mov
(bad)
push
cwde
pop
sub
or
(bad)
add
fnstenv
cmp
pushf
adc
lds
pop
data16
jb
add
xchg
cli
aaa
push
jno
call
xchg
jp
pop
xor
pop
movs
pop
xchg
aaa
mov
in
cmps
mov
loop
sbb
iret
imul
loopne
mov
stos
loopne
push
sub
clc
add
dec
cmp
les
xchg
(bad)
sbb
fsub
mov
jle
pop
je
jge
popa
rol
icebp
aad
add
xlat
push
(bad)
dec
adc
rol
call
mov
pushf
pop
in
mov
dec
loopne
push
mov
jo
vpacksswb
dec
lds
sbb
lds
ds
sub
cmp
(bad)
fidivr
ficomp
xchg
pusha
mov
xlat
or
xor
sbb
and
outs
pop
adc
inc
mov
cmps
mov
mov
popa
(bad)
das
mov
inc
xor
cdq
jmp
fstp
stc
sbb
gs
hlt
shr
pop
push
stc
inc
leave
sub
push
(bad)
pop
(bad)
gs
or
pop
icebp
into
test
lods
(bad)
in
xor
dec
xor
sbb
mov
sub
movs
jge
ret
arpl
or
pop
scas
inc
adc
mov
aad
loop
in
in
dec
ret
push
jno
inc
pushf
loop
jg
aam
mov
sub
jb
ins
pop
jmp
int3
(bad)
and
jb
lods
xchg
ret
add
pushf
cmp
loopne
jns
popa
add
popf
enter
mov
pop
iret
xchg
mov
sti
mov
fidivr
dec
in
xor
add
retf
stc
into
scas
push
lods
pop
retf
xor
mov
mov
stos
mov
mov
(bad)
int
dec
pop
sbb
cmp
xor
sti
ins
shl
in
test
jl
mov
adc
pop
or
and
scas
jb
rcr
fldenv
pop
add
scas
cmc
jnp
cmp
dec
pushf
in
(bad)
or
mov
cli
adc
ror
loopne
push
xor
and
fcomp
cmp
loop
xor
daa
sub
xor
jl
push
ds
retf
push
pop
popa
pusha
mov
inc
dec
fidiv
lods
inc
jb
gs
cli
jle
movs
inc
sbb
aam
rcl
(bad)
pop
push
pop
sub
jmp
pop
sub
cmp
mov
ss
sti
mov
cmp
cmp
jl
rol
sbb
pop
mov
ret
loopne
les
inc
ins
or
sbb
and
rcl
inc
jmp
fst
in
inc
mov
test
mov
in
push
in
popa
daa
in
inc
mov
push
cmp
fs
fistp
jmp
xor
popa
xchg
in
out
fwait
leave
push
mov
jno
sar
gs
xchg
aaa
push
xchg
inc
leave
xchg
mov
mov
sbb
mov
hlt
dec
lods
adc
jge
pop
out
pop
adc
fucom
push
shl
xor
cld
lea
and
lock
xlat
cmp
clc
inc
jns
leave
xor
mov
mov
fadd
and
cmp
sub
cmps
inc
mov
fs
sbb
mov
fst
test
pop
mov
cmp
lods
out
(bad)
pop
sbb
stos
inc
popa
jecxz
cmc
xchg
ds
xchg
clc
iret
jae
inc
mov
sbb
mov
or
imul
test
jne
add
ror
or
test
dec
xor
push
jbe
xchg
mov
mov
inc
scas
inc
icebp
iret
push
mov
imul
mov
fmul
in
and
and
mov
jbe
inc
lods
sbb
push
sbb
popf
and
or
inc
mov
cmp
or
icebp
fisubr
xchg
mov
in
shl
push
lods
xchg
repnz
sub
xor
jmp
cmp
and
mov
sub
pop
fsubr
push
arpl
into
(bad)
lods
fisubr
sub
jecxz
jo
cmps
or
outs
test
(bad)
iret
fisubr
sbb
jmp
out
pop
stos
or
cs
hlt
pop
adc
pop
pop
sub
mov
stos
cmps
arpl
push
loope
movs
sub
mov
jnp
sbb
jbe
sub
dec
aam
add
lock
adc
jecxz
mov
fs
jbe
iret
psrlq
popa
test
pop
in
fisttp
xor
movs
pop
sub
xchg
mov
fdivr
mov
or
mov
shr
or
fild
arpl
lahf
cmp
add
arpl
in
imul
pushf
mov
fs
call
iret
fs
sub
jae
call
pslld
clc
dec
lea
xchg
add
arpl
imul
mov
fsubr
mov
dec
fild
add
xor
clc
pop
repnz
jl
loop
pop
call
repz
push
ret
std
outs
daa
sbb
mov
and
dec
das
push
dec
ins
shl
inc
cmc
pop
repnz
stos
adc
xchg
inc
in
jno
in
cdq
out
push
fldln2
add
pop
test
and
jo
into
outs
pop
nop
cmp
loop
or
fnstcw
cmps
sub
in
mov
inc
xchg
icebp
iret
scas
mov
or
test
xchg
ja
rol
aad
or
inc
adc
and
imul
mov
add
push
adc
test
and
or
clc
outs
fstp
and
sbb
fcomp
loop
inc
popa
frstor
int
and
(bad)
xchg
fwait
sub
pop
jge
nop
test
jo
shl
int
jae
sahf
dec
and
cmp
jo
pop
or
fcomp
int
jne
jns
test
test
adc
jmp
push
into
addr16
aad
mov
movs
cmp
mov
xchg
and
pop
(bad)
pop
jp
cmp
jo
stos
daa
lds
shl
pop
fsub
ins
pop
fisttp
ja
mov
sub
lods
add
enter
call
in
stos
jl
call
cmp
sub
or
push
fisubr
sub
lahf
int
and
test
inc
sub
repz
push
push
test
fst
fistp
pop
adc
out
push
stos
inc
jle
clc
mov
mov
(bad)
(bad)
aad
enter
push
mov
mov
repnz
mov
mov
cld
mov
pop
ja
loope
add
popf
leave
or
mov
xchg
dec
repnz
xchg
daa
lahf
adc
fld
adc
mov
sahf
push
cld
jnp
popf
xchg
shl
mov
das
les
fcos
scas
push
and
sub
sahf
(bad)
repz
out
xchg
aam
mov
iret
idiv
adc
inc
jecxz
rcl
imul
mov
std
daa
jle
in
add
xor
push
sbb
dec
out
fadd
bound
sbb
or
fisttp
(bad)
jl
adc
dec
fwait
or
das
fdiv
inc
psubd
std
pop
xchg
imul
inc
or
xchg
pop
cmp
add
in
mov
and
and
cmp
movs
add
out
dec
sub
(bad)
into
fisttp
mov
jp
movs
outs
mov
in
dec
jmp
fs
not
sub
xor
jbe
out
mov
pop
or
mov
mov
stos
dec
fs
and
sbb
fadd
test
int3
push
mov
jno
inc
sbb
inc
in
pop
pop
cs
or
es
fistp
jno
stos
js
push
movs
ins
out
jle
or
cwde
ror
inc
sbb
pop
inc
add
aaa
scas
dec
push
xlat
inc
jg
jg
sub
and
sub
pop
jp
sbb
into
sub
call
div
xchg
icebp
xor
xlat
(bad)
xchg
push
dec
ror
data16
rol
dec
and
sbb
mov
push
mov
lods
fcomp
mov
pushf
mov
mov
cmp
inc
setp
mov
cmc
xchg
dec
pusha
mov
mov
adc
(bad)
pop
stos
gs
out
push
fld
(bad)
adc
jle
add
push
cs
pop
sub
dec
js
fs
movs
add
cs
jp
push
(bad)
xchg
push
shl
sub
fcomp
cmp
inc
fcomip
lahf
add
xchg
xchg
stos
xor
rol
repnz
and
test
push
add
fimul
pop
mov
push
cld
popf
or
and
out
fist
adc
and
inc
or
scas
int3
(bad)
(bad)
xchg
dec
xor
fnstsw
into
cmp
jmp
inc
mov
mov
mov
dec
test
fimul
movs
sbb
cmp
pop
inc
call
neg
mov
add
xor
test
cmp
adc
push
and
dec
loopne
jne
pusha
int3
not
inc
js
push
ss
pop
out
push
in
cmc
add
dec
je
add
cbw
aam
inc
sub
and
mov
stos
arpl
mov
shl
test
jnp
dec
xchg
loope
cmps
test
icebp
std
pop
fistp
cmps
cvtdq2ps
repz
dec
xchg
les
les
pop
cmp
test
jo
sbb
dec
xchg
imul
pop
mov
push
sbb
pop
int3
mov
xchg
xor
or
pusha
jge
outs
cmp
mov
or
adc
push
mov
pushf
retf
or
mov
stos
or
cmp
lock
ret
push
scas
(bad)
jb
cmp
outs
loopne
sub
fmul
jne
popf
cmp
xchg
adc
xor
pushf
data16
fs
dec
mov
into
enter
mov
or
jmp
fisub
(bad)
mov
jge
in
jno
inc
mov
or
jnp
pop
call
and
xchg
aam
jns
fbld
add
sbb
ss
hlt
clc
(bad)
out
push
cdq
sbb
out
je
push
sbb
pop
ss
mov
les
sti
aas
test
sti
sub
test
jp
add
nop
pop
sbb
mov
push
jg
xor
sbb
jnp
inc
jge
and
ins
fcmovbe
dec
retf
mov
fnstenv
add
enter
ds
jns
pop
jbe
mov
jp
pop
out
mov
pmullw
fldcw
jnp
lds
inc
pop
std
mov
xor
xchg
cmp
jnp
out
inc
mov
aad
push
sub
mov
dec
int
call
cmc
adc
xor
in
add
mov
pushf
sbb
sbb
stos
pushf
push
mov
mov
mov
les
out
movs
push
dec
daa
or
lds
icebp
cmp
outs
dec
cmc
or
cmp
sub
inc
mov
hlt
xor
cwde
mov
and
sub
(bad)
fs
mov
add
mov
aas
push
pop
call
call
mov
cmps
es
int3
fild
xor
je
jae
pusha
fstp
adc
addr16
loopne
ret
add
xor
mov
push
out
push
mov
and
lea
jle
cmp
push
enter
pusha
es
sub
lods
shr
jo
fbld
adc
ror
into
or
jae
xchg
hlt
out
cdq
inc
mov
stc
fxch
arpl
pusha
pusha
dec
mov
xchg
loop
es
mov
pop
popf
aas
push
lods
lods
lock
dec
out
xor
fmul
repnz
fistp
jecxz
aad
add
xor
(bad)
enter
push
leave
loopne
push
sar
(bad)
std
pop
fstp
sub
ja
jmp
jg
cmps
iret
cmps
or
pop
dec
and
sar
jl
sub
(bad)
movs
xor
inc
fld
fldenv
jle
shr
cwde
cmp
out
out
mov
sbb
bound
sub
sub
cmps
pop
out
xchg
adc
js
push
cmp
nop
adc
out
clc
xor
aaa
lds
shl
mov
add
xchg
mov
jmp
dec
or
jne
push
js
gs
(bad)
adc
adc
sbb
mov
inc
dec
mov
pop
xor
pushf
pop
lahf
into
repnz
sbb
or
scas
sbb
jle
shr
inc
mov
or
in
bnd
shr
imul
inc
sub
std
mov
inc
xor
out
mov
add
and
push
in
xor
clc
mov
rol
xor
pop
cmp
(bad)
out
xor
mov
aad
popa
imul
pop
mov
aaa
adc
loopne
std
mov
mov
pop
stos
pop
jmp
fadd
(bad)
adc
fcom
clc
mov
ja
mov
adc
pushf
push
pop
not
and
fmul
scas
ja
push
sbb
sbb
mov
jle
push
mov
xor
or
jmp
push
(bad)
rol
pusha
jg
stos
cmp
stos
xor
into
sbb
xchg
test
jle
ja
mov
mov
ins
cmps
nop
adc
jo
retf
mov
out
repz
xchg
push
push
sbb
es
jae
(bad)
jno
pop
jne
mov
xor
mov
mov
idiv
mov
stc
lea
lea
inc
xchg
xchg
dec
ds
shr
shl
jbe
js
lods
in
(bad)
cmp
dec
retf
mov
fst
xor
outs
mov
inc
and
fild
xchg
repz
xor
retf
(bad)
in
mov
pop
daa
adc
icebp
(bad)
repz
in
xor
jmp
clc
aas
dec
jecxz
retf
dec
xchg
cs
imul
mov
and
jo
ins
xor
mov
or
fwait
adc
(bad)
mov
enter
xor
clc
arpl
(bad)
pop
sbb
sbb
sbb
cs
fld
inc
mov
paddsb
pop
and
ss
xor
ja
mov
inc
pusha
xchg
nop
mov
pop
ss
push
sar
mov
mov
mov
outs
stos
adc
fstp
xchg
adc
jl
and
clc
pop
xchg
cmps
test
fdiv
and
fcomp
xchg
or
arpl
dec
iret
int
jns
xchg
std
sbb
mov
xor
cmp
xchg
mov
push
cmp
sti
and
inc
pop
dec
jle
test
sbb
mov
aaa
add
fmul
xor
mov
xlat
mov
adc
jae
push
call
mov
inc
cmp
push
in
mov
xlat
arpl
jg
sbb
xchg
movs
sub
push
xchg
fst
add
outs
ins
in
sub
nop
aad
leave
sbb
imul
je
rol
jl
ds
pop
(bad)
stos
or
bound
mov
pop
fs
sbb
push
push
mov
cdq
jge
rcl
popf
xlat
xchg
jne
mov
and
xlat
mov
sbb
push
cli
pushf
clc
pushf
js
inc
lods
mov
test
lds
daa
mov
mov
mov
push
mov
mov
sar
popf
test
js
(bad)
and
push
cmp
jmp
mov
daa
(bad)
cs
add
js
clc
or
test
jecxz
clc
xor
or
in
mov
jae
xchg
fxam
pop
imul
dec
es
push
outs
adc
aad
add
outs
pusha
out
mov
arpl
jne
mov
pushf
and
pop
xchg
lock
xchg
push
pop
dec
js
test
fwait
cmp
mov
icebp
mov
add
inc
xor
scas
and
mov
scas
mov
fmul
mov
inc
push
ret
xor
pushf
push
xchg
inc
mov
addr16
rol
mov
mov
pop
nop
test
imul
inc
mov
movs
mov
sub
cli
add
adc
xchg
retf
xor
and
sbb
add
stc
ror
mov
arpl
iret
cmc
mov
xchg
movs
cmp
cmp
push
lods
std
gs
aas
or
push
aas
mov
inc
mov
adc
les
int3
pop
and
mov
ins
or
mov
cmp
shl
cmp
jge
ror
retf
ret
aam
fisubr
sar
mul
dec
jnp
lea
xchg
out
mov
cmps
mov
and
out
sub
outs
sub
ss
imul
shr
fist
popa
stc
sub
jge
sub
inc
mov
add
mov
and
pop
les
sub
popf
popf
out
or
dec
in
int
mov
test
inc
mov
hlt
jg
das
adc
and
sub
or
push
daa
outs
fadd
iret
cmp
sub
sub
clc
ins
in
xchg
or
mov
(bad)
lods
ins
icebp
push
dec
xchg
and
mov
ins
dec
add
mov
mov
shl
mov
out
icebp
nop
adc
out
je
mov
popa
stos
loop
mov
inc
or
lods
jmp
sbb
pop
iret
xchg
pop
dec
ins
shl
xlat
or
xchg
or
arpl
cmps
pop
fidiv
and
pop
imul
rcl
retf
(bad)
sub
cmp
xchg
stos
in
fs
mov
and
(bad)
into
jae
sbb
repz
jecxz
jp
test
inc
mov
loop
jae
sbb
loopne
adc
sub
stos
gs
push
and
cli
mov
les
push
mov
mov
stos
push
mov
xchg
mov
pop
retf
in
pushf
and
sub
xor
(bad)
sbb
mov
dec
pushf
movs
test
stos
fistp
xchg
push
in
mov
adc
mov
loope
stos
pop
dec
popf
imul
push
inc
(bad)
jle
sub
mov
(bad)
cmp
test
int
pop
cmp
pop
shl
(bad)
jo
xchg
xchg
into
sar
sbb
pop
scas
cmp
push
outs
adc
pop
mov
ss
test
push
adc
stos
ret
retf
adc
mov
in
xchg
jb
jmp
add
push
rol
retf
fnsave
jg
test
mov
inc
xchg
add
xchg
mov
push
inc
mov
sar
xrelease
xchg
fistp
mov
sub
movs
or
ds
arpl
scas
push
inc
rcl
mov
fist
xor
stos
outs
outs
jle
and
enter
mov
cmp
push
add
nop
and
int3
pop
xchg
adc
xchg
sub
call
mov
xchg
je
stos
sbb
dec
test
int
adc
mov
scas
jno
mov
fsubr
push
cdq
mov
cmp
push
jecxz
add
cli
rcl
mov
loopne
add
retf
int3
leave
dec
out
pop
jge
aad
adc
dec
adc
or
icebp
ret
pop
mov
jbe
stc
sub
iret
cmp
loop
add
clc
pop
frstor
imul
leave
mov
dec
and
sbb
jmp
pop
je
mov
dec
dec
aam
sub
cli
jbe
inc
sahf
inc
bound
dec
fldenv
ins
(bad)
hlt
push
lock
mov
lea
xchg
movs
(bad)
mov
adc
test
int3
sbb
lods
ins
inc
or
mov
ins
mov
cli
int
pop
mov
push
loop
mov
test
imul
mov
cmp
pop
cmp
inc
xor
push
loopne
xchg
test
(bad)
cmc
jne
ja
pop
stos
fst
mov
push
fsub
and
aam
mov
(bad)
pop
lods
mov
dec
push
dec
mov
test
jmp
mov
mov
sti
sbb
cmps
pop
xor
arpl
sbb
shr
inc
movd
xor
lods
stos
aaa
push
jle
in
rcl
push
dec
jge
rcl
addr16
cld
add
jae
repnz
pushf
fisub
test
out
mov
add
sahf
outs
lahf
aas
jno
(bad)
call
repnz
mov
mov
xchg
stos
mov
outs
mov
xor
cdq
iret
dec
scas
add
or
mov
push
adc
(bad)
popf
jge
inc
mov
or
mov
mov
(bad)
xchg
mov
ficomp
(bad)
shl
cmp
fadd
mov
jne
test
outs
aam
inc
or
hlt
dec
shl
xlat
dec
gs
mov
mov
fidivr
mov
dec
lock
pop
sbb
jle
mov
add
xchg
jno
sti
lods
adc
add
es
xor
and
lea
test
out
(bad)
cmps
(bad)
push
mov
ret
push
ins
mov
adc
mov
xchg
sub
ins
mov
inc
push
jp
mov
mov
movs
fisubr
jmp
in
inc
xor
add
push
lahf
and
lds
jmp
and
mov
and
add
or
addr16
ret
daa
and
test
ret
and
(bad)
repz
imul
xchg
hlt
mov
out
cmp
neg
inc
xchg
xlat
or
cmps
mov
jl
or
aam
arpl
jo
addr16
add
pop
jecxz
mov
rcl
or
mov
mov
sbb
inc
out
add
out
jnp
dec
inc
ffree
into
sahf
pop
fistp
push
cmp
(bad)
xchg
pop
pop
idiv
mov
stc
push
cmps
pop
call
xchg
icebp
ror
arpl
mov
jae
cld
and
adc
fwait
and
dec
outs
cwde
or
xor
cmp
pushf
popf
cld
fistp
xor
(bad)
sub
aam
in
jmp
mov
inc
mov
dec
nop
fcomp
xchg
push
sbb
not
and
sbb
add
mov
shl
je
lds
mov
jecxz
inc
cld
leave
and
dec
mov
mov
out
jmp
push
(bad)
dec
add
(bad)
pop
shr
jmp
arpl
mov
pusha
xor
and
stos
pop
sub
mov
fisttp
sbb
in
loopne
inc
jl
push
xor
mov
sbb
sbb
lahf
es
pop
call
scas
stos
xchg
aaa
mov
cmp
dec
cmp
rol
jmp
icebp
add
rcl
xchg
xor
or
adc
(bad)
out
ds
out
sub
movs
mov
cmp
jb
sub
mov
imul
dec
add
jge
test
(bad)
int
test
add
fxch
sub
sub
push
cmp
mov
push
add
mov
(bad)
sbb
or
inc
sub
repz
jb
ja
movs
bnd
idiv
popa
mov
pop
lea
movs
movs
add
shl
inc
dec
mov
repz
fcomp
jmp
mov
shr
inc
sub
push
sbb
aad
jnp
aam
lods
jns
lock
cmp
(bad)
pop
xchg
adc
jecxz
pop
xchg
popa
mov
ret
repnz
jmp
xchg
inc
je
push
pop
xchg
scas
jae
cli
xchg
outs
adc
aad
ds
and
cmp
scas
icebp
push
mov
int3
jl
mov
cli
jl
jns
mov
nop
call
mov
push
add
(bad)
das
mov
pop
out
aaa
arpl
mov
jno
lods
and
loop
ficomp
push
iret
push
mov
repz
outs
xchg
inc
dec
xchg
sar
fimul
and
es
or
pop
push
idiv
icebp
mov
fwait
loopne
(bad)
bound
pusha
sub
xchg
push
mov
jb
jns
jecxz
enter
in
(bad)
sub
push
mov
add
es
jmp
aas
adc
jle
mov
xor
mov
or
popa
inc
inc
popa
sahf
stos
psrlq
ja
loop
je
add
adc
and
cli
sbb
pop
mov
imul
outs
sti
push
xor
jmp
rcl
lods
jnp
fs
test
inc
pop
lahf
push
pop
das
fld
and
cld
or
dec
mov
retf
xor
pop
jge
loopne
push
aaa
pushf
call
dec
sub
mov
adc
call
add
in
mov
jb
aam
cdq
or
into
dec
mov
dec
mov
pop
or
xor
fwait
cld
xchg
jbe
or
outs
jbe
stc
mov
add
into
shl
jb
(bad)
icebp
adc
sbb
loope
jg
pop
mov
jge
jo
jle
pop
mov
outs
sbb
ror
lahf
mov
fbstp
fbstp
into
leave
sub
xchg
cs
(bad)
iret
add
fadd
rol
retf
imul
stos
or
mov
leave
nop
cmps
mov
fwait
not
test
call
mov
fimul
daa
jnp
or
push
adc
(bad)
jne
or
sti
fnstenv
cmp
in
mul
les
inc
enter
fsubr
xlat
mov
jp
mov
pop
jmp
imul
rcl
pop
pushf
mov
stos
(bad)
pop
mov
rol
cmp
pop
rcl
std
mov
jbe
xchg
mov
add
add
jo
xchg
js
add
jecxz
push
xor
loopne
pop
mov
test
sub
out
jne
sub
or
jecxz
cmp
retf
and
adc
adc
lock
mov
arpl
fadd
cmps
imul
inc
push
mov
and
retf
test
(bad)
cmp
sbb
stos
movs
test
sub
lahf
lds
retf
pop
or
retf
jb
pop
jo
enter
retf
xor
ret
daa
jmp
fdivp
gs
dec
lods
stos
push
sbb
sbb
movs
cmc
data16
or
and
out
leave
jne
push
in
jno
add
int3
sti
push
or
xchg
jge
nop
ret
retf
mov
xor
sub
adc
dec
psubsw
lods
push
popa
stos
(bad)
(bad)
xchg
nop
pop
popf
aad
jmp
enter
mov
adc
sar
xchg
push
jo
dec
mov
(bad)
mov
push
icebp
fsubr
dec
jne
int
xor
cdq
xor
les
add
fdivr
retf
xchg
mov
push
mov
xchg
sub
pop
imul
ds
pop
arpl
adc
popf
std
dec
adc
mov
adc
jns
shl
push
push
add
(bad)
or
test
xor
push
pushf
fcmovnb
push
push
popa
sbb
std
vmovapd
inc
std
cmp
cmp
ficom
sub
push
dec
arpl
inc
cs
or
sub
sbb
add
popa
ret
and
in
cmp
aaa
or
xchg
jo
mov
mov
adc
jp
push
mov
xchg
icebp
loope
sub
aad
shr
mov
fnstenv
pusha
push
(bad)
cmp
add
je
cmp
dec
mov
sub
adc
hlt
and
push
aaa
sub
and
ins
push
add
retf
cmps
mov
outs
jne
fistp
xlat
not
lea
stos
cmc
jbe
mov
test
push
les
dec
jns
sub
shr
push
sbb
nop
push
dec
(bad)
cdq
mov
mov
mov
mov
cmp
push
je
(bad)
frstor
cdq
sub
mov
mov
mov
cmps
sar
or
gs
in
and
lods
movs
mov
or
lods
not
loope
dec
fcomp
xchg
cmc
repz
int3
xchg
add
shr
jecxz
pop
dec
mov
shl
loop
push
jo
cld
test
rol
mov
(bad)
cmp
ja
les
push
iret
sub
cwde
push
out
jne
mov
scas
aaa
sbb
lods
push
sahf
jae
push
mov
(bad)
jmp
xchg
addr16
dec
test
pop
push
or
lods
imul
pop
adc
test
push
mov
in
leave
pop
fild
rcl
mov
jne
(bad)
push
lea
jns
cmc
in
adc
and
(bad)
adc
ins
lea
lds
xor
jo
ss
mov
push
js
mov
xchg
scas
test
add
ficom
bound
xor
inc
int3
pop
and
dec
mov
xor
push
lods
adc
pop
call
cwde
mov
test
lods
or
lock
add
mov
inc
adc
inc
mov
clc
repnz
call
xchg
push
frstor
imul
shl
das
jo
pushf
cmps
pushf
mov
adc
aaa
out
push
adc
aad
jp
stc
xchg
shl
or
aaa
adc
fstp
sbb
je
mov
mov
xor
sub
xor
or
pusha
dec
jo
sub
ret
push
add
test
shl
outs
pop
and
xchg
jmp
inc
ret
out
mov
mov
enter
push
ds
jl
xchg
std
inc
(bad)
sti
lock
xor
add
test
push
(bad)
cmp
adc
ins
shl
test
pusha
pop
xchg
jae
push
nop
int
jnp
pushf
in
jb
in
cs
dec
outs
pop
in
mov
and
cmps
mov
shr
shr
loopne
(bad)
mov
dec
sbb
(bad)
in
shl
push
lods
aad
mov
mov
mov
and
sahf
add
dec
(bad)
xor
rol
dec
call
daa
jne
scas
int
in
fs
lock
jmp
jp
out
mov
stc
jne
or
dec
and
retf
push
xor
and
sbb
cwde
or
mov
add
and
or
outs
ins
xor
outs
out
stos
sub
std
das
outs
aas
imul
xchg
dec
jae
pop
jg
out
and
push
test
cmc
into
div
inc
ret
mov
dec
(bad)
sbb
retf
and
(bad)
xchg
dec
js
jb
ss
repnz
fs
mov
push
mov
cmp
sbb
dec
inc
rol
stos
cmp
mov
push
cli
jg
xchg
call
push
adc
outs
jl
(bad)
pop
retf
fwait
xor
mov
and
jp
inc
adc
mov
ds
or
das
imul
lods
adc
test
push
mov
xchg
cmp
mov
ret
lock
push
mov
daa
cmp
cmp
jecxz
mov
push
adc
push
dec
popa
add
arpl
and
dec
test
rol
adc
std
aad
fld
aam
stos
in
ds
or
push
add
jne
(bad)
repnz
jo
push
or
pop
js
push
loope
inc
mov
into
mov
sbb
fisttp
push
mov
jmp
(bad)
int3
jb
mov
xor
adc
mov
dec
mov
and
cmps
mov
fild
dec
adc
inc
data16
pop
fmulp
loopne
sub
daa
scas
push
cwde
lea
pusha
sti
jmp
dec
cmp
jp
mov
int3
sub
jge
pop
mov
mov
jl
in
sahf
add
fcomp
push
lods
mov
pop
and
sub
mov
stc
push
push
lds
retf
lds
pop
jnp
push
xor
scas
sahf
loope
out
sbb
add
out
movs
mov
mov
stc
mov
add
mov
cmc
out
mov
adc
mov
and
add
adc
out
test
test
xlat
into
xor
mov
add
outs
ins
xchg
in
push
cmp
pop
jno
cli
mov
rcr
in
cmp
aad
mov
fimul
jns
inc
scas
popa
fdivr
jns
sbb
ds
mov
pop
stc
shl
test
lods
je
mov
(bad)
sub
leave
cmp
js
sbb
push
mov
(bad)
ins
xchg
lods
mov
into
int
imul
dec
pop
(bad)
cmps
loop
sbb
daa
in
and
rcr
ss
retf
outs
retf
mov
lods
stos
int3
fdivr
neg
xor
or
mov
not
xchg
pop
fldz
jno
int
or
pop
cdq
dec
mul
sti
shl
push
mov
or
hlt
test
out
aam
jns
loop
into
cmp
xchg
cli
or
gs
sbb
enter
mov
test
mov
sub
shl
cmp
add
outs
mov
mov
inc
jmp
push
lods
push
jge
loope
cmps
pop
or
cdq
add
pop
pop
xchg
adc
sub
jmp
rcr
cmp
in
scas
(bad)
cmp
in
mov
jno
sbb
mov
popa
push
call
add
xchg
das
cmp
push
dec
ds
sub
adc
xchg
cmp
jle
inc
shr
cld
scas
out
add
cmp
fisubr
sbb
(bad)
std
mul
sbb
rcr
jp
test
call
lea
pop
repz
add
cmp
out
jmp
pop
cs
jl
push
and
pop
rcr
popf
mov
not
xchg
mov
sti
nop
mov
cdq
or
pop
ss
pop
sub
mov
scas
jo
sub
jmp
in
push
ficomp
(bad)
arpl
mov
dec
jmp
pop
in
(bad)
test
arpl
xlat
(bad)
(bad)
and
cmp
shl
pop
inc
scas
call
movs
call
scas
sub
mov
shl
cmps
sub
cmp
loope
mov
mov
frstor
addr16
fsubp
movs
loope
stc
enter
(bad)
cli
lods
outs
(bad)
sbb
xchg
fwait
ins
movs
mov
mov
ins
ins
aad
jae
ins
test
gs
push
ror
jo
pop
push
(bad)
cmp
xchg
js
xchg
push
lahf
loope
repnz
bound
loope
and
call
xchg
add
retf
in
loop
and
mov
and
retf
cwde
push
stos
xchg
and
cmp
addr16
out
sar
scas
mov
mov
jp
push
xor
push
test
sar
adc
aaa
pushf
add
mov
dec
pushf
mov
sbb
arpl
out
pop
stos
adc
je
stc
mov
cmp
mov
jmp
in
push
popa
mov
dec
jne
sub
cmp
lds
fstp
test
jge
or
mov
cli
pop
xor
out
lahf
imul
int
leave
mov
iret
movs
cmp
(bad)
out
inc
mov
xor
sub
pop
mov
push
mov
push
sbb
xor
sub
cwde
inc
imul
pusha
and
mov
mov
mov
or
js
std
stos
jle
xor
rcr
lock
inc
mov
fadd
dec
sbb
(bad)
sbb
mov
jecxz
clc
xchg
cmps
retf
les
mov
cmp
ins
xor
xchg
jne
fwait
or
fs
(bad)
pop
stos
or
jp
pop
jecxz
push
loope
sub
inc
push
mov
inc
and
ss
pop
push
fidivr
mov
xor
jmp
in
jmp
sti
jp
out
lods
fsub
inc
jo
push
sub
mov
jmp
xchg
popa
lds
cmp
ret
mov
jbe
push
ficomp
test
inc
sbb
jge
mov
pushf
xor
sbb
test
mov
xor
dec
mov
pop
pop
int
fistp
es
push
push
mov
div
imul
ficom
and
pushf
inc
movs
retf
scas
imul
xchg
je
cmps
fnstcw
jbe
repz
jmp
jmp
add
loop
inc
inc
loope
shr
mov
scas
enter
xchg
dec
push
into
cwde
dec
loop
pusha
int
cmp
rol
mov
and
or
jb
fisubr
dec
jp
and
cmp
or
loope
jmp
mov
and
mov
cmps
or
ret
(bad)
repz
(bad)
std
pop
dec
dec
loop
push
dec
call
sbb
scas
jecxz
pop
xor
jo
jns
retf
int
push
lods
pop
adc
js
mov
in
jbe
mov
not
adc
ror
sbb
xor
movs
pop
in
xchg
push
xor
xchg
loop
(bad)
loopne
sbb
lea
push
retf
and
(bad)
movs
into
(bad)
(bad)
ja
xchg
cwde
pop
add
xor
cmps
mov
push
inc
fidivr
inc
daa
sub
ja
xor
out
ss
mov
(bad)
fisubr
mov
imul
int
stos
shl
jle
clc
mov
mov
mov
inc
movs
jb
aam
aam
dec
in
xor
stos
aas
mov
adc
mov
and
or
std
add
call
div
jle
or
push
inc
mov
mov
fidivr
pop
ret
in
mov
scas
pop
sbb
jns
loope
enter
mov
ds
dec
inc
or
scas
jmp
push
movs
inc
jle
jb
cmp
loope
outs
xlat
dec
mov
addr16
xchg
ins
imul
and
mov
cs
stc
jl
xchg
out
push
int3
push
and
xor
fild
shl
xchg
jmp
test
(bad)
leave
(bad)
adc
in
sub
xchg
inc
aaa
mov
sbb
inc
and
jns
mov
mov
test
push
test
(bad)
data16
(bad)
pop
adc
jg
mov
xchg
sub
test
sub
xor
pop
xchg
imul
sbb
and
fs
inc
add
popf
xor
cmp
push
xchg
jae
mov
cmp
(bad)
sbb
pop
dec
mov
adc
pusha
inc
pusha
dec
in
movs
inc
call
and
mov
aam
test
in
test
pop
inc
bound
dec
xor
sub
sti
xor
mov
pop
ficomp
mov
mov
movs
mov
loop
shl
jmp
xchg
test
sub
std
dec
pushf
repz
inc
shr
mov
xor
call
ret
retf
ret
lds
loop
mov
add
fst
in
ins
or
bound
mov
inc
mov
xchg
aam
out
jb
neg
fucom
jns
mov
mov
jo
inc
lock
js
add
or
loopne
add
dec
sbb
jbe
mov
shr
add
push
inc
dec
sbb
push
push
popf
fidiv
std
xor
ret
inc
and
lahf
in
jbe
pop
jmp
mov
stc
mov
sub
pop
rol
mov
lods
push
or
(bad)
adc
arpl
sti
push
pop
sbb
jmp
je
adc
push
jno
pop
pop
mov
dec
call
pop
hlt
not
arpl
(bad)
call
shl
mov
xor
sbb
push
xchg
inc
mov
aaa
xor
xchg
je
adc
inc
push
push
xchg
inc
ja
cmp
je
sbb
fsubr
mov
cmc
xor
add
xchg
pop
iret
xchg
jl
test
mov
or
or
cmps
addr16
xor
fwait
sti
dec
dec
mov
mov
xchg
rol
cmp
fldenv
imul
fisttp
sbb
rcr
mov
in
inc
stos
scas
cs
(bad)
movs
fisttp
xor
dec
lea
xchg
gs
jge
xchg
loopne
(bad)
call
mov
popa
outs
push
lock
sahf
jnp
shr
xchg
imul
cdq
ins
xor
pusha
aad
jecxz
(bad)
jg
sbb
push
jb
mov
mov
sub
jmp
jecxz
int3
xor
inc
sbb
mov
call
ss
adc
jle
push
stos
inc
movs
and
mov
push
sbb
and
mov
es
loopne
mov
mov
retf
jmp
add
mov
rep
daa
dec
inc
lods
xchg
and
xchg
imul
jbe
adc
iret
test
mov
mov
lock
out
aam
pop
bt
cmps
fimul
icebp
call
retf
pop
data16
dec
lock
jmp
jecxz
stos
cdq
jmp
dec
pushf
cdq
les
cld
or
jmp
xchg
push
fsubr
cmp
fisttp
cmp
cdq
cmp
popf
adc
in
inc
mov
push
dec
add
xor
sub
inc
xor
outs
stos
fistp
jno
ds
aad
(bad)
jno
jle
pop
scas
xchg
push
pop
(bad)
lods
lods
sti
push
cmp
pop
pop
jge
call
and
push
mov
push
mov
outs
cmp
rcl
cmp
fisubr
out
and
cmp
pusha
(bad)
sub
clc
xchg
and
mov
test
pop
int3
leave
cwde
sbb
push
ds
xlat
mov
pop
jg
movs
xlat
scas
gs
shl
pop
cmp
xchg
xchg
movs
mov
jne
and
in
push
into
ficomp
mov
sbb
push
and
cmp
xchg
call
shr
aas
push
fmul
adc
jns
sbb
sbb
xchg
xchg
mov
mov
test
dec
imul
sub
jne
sti
outs
movs
pop
(bad)
hlt
sti
sbb
stc
mov
xor
xor
sti
enter
cmp
pop
hlt
nop
imul
pop
jp
jo
jge
push
sbb
fild
shl
fmulp
out
push
popf
(bad)
cmps
jecxz
nop
iret
jle
nop
mov
push
jecxz
sbb
pop
mov
loope
retf
pop
dec
sub
mov
jecxz
mov
inc
in
cmp
aad
shr
add
push
xor
pop
mov
and
std
dec
(bad)
mov
cli
mov
and
sbb
xor
scas
xlat
mov
and
ss
or
inc
call
sbb
adc
sbb
ss
outs
fstp
adc
addr16
les
mov
and
jmp
mov
arpl
je
ret
pop
add
out
or
ja
ja
ja
(bad)
xchg
cdq
call
outs
xchg
gs
mov
push
sbb
(bad)
adc
rcr
dec
sbb
outs
dec
cmps
dec
(bad)
sbb
add
mov
fdivr
test
ins
mov
std
test
xchg
mov
fcom
fucomi
mov
xor
mov
sbb
iret
std
pop
xchg
add
ret
sub
test
mov
sbb
xchg
popa
int
mov
or
mov
loop
mov
push
sub
sub
cld
inc
and
mov
shl
shl
dec
fwait
add
test
jns
out
mov
dec
lds
and
mov
fild
es
rcl
(bad)
xor
fild
cmp
ins
push
enter
pop
cmps
xchg
(bad)
std
in
in
ins
jmp
out
mov
lea
jae
std
stos
les
addr16
pop
pushf
pop
push
xor
aaa
xchg
loope
jg
imul
pop
xchg
lods
sar
or
into
addr16
or
iret
or
jae
mov
popf
mov
sbb
jp
les
mov
pushf
pop
ret
pop
jnp
xor
rcr
ins
iret
shr
and
mov
out
dec
popa
test
dec
lea
sbb
dec
out
sbb
xchg
push
cwd
add
cdq
bound
push
and
mov
add
das
sub
mov
or
dec
and
sub
sbb
int3
(bad)
push
jp
push
mov
dec
pop
dec
stos
push
in
mov
ret
nop
mov
inc
mov
sbb
scas
ret
xchg
test
push
lods
push
mov
call
test
daa
pop
or
(bad)
mov
add
rcl
or
in
outs
int
adc
mov
dec
scas
inc
jo
out
sbb
ss
xor
data16
push
ins
(bad)
repz
pop
push
fwait
lods
popa
and
mul
xchg
jmp
mov
jns
or
jge
int3
cmp
or
imul
std
repz
and
mov
jge
iret
or
stc
aad
shr
inc
push
and
in
jg
jo
adc
mov
adc
fwait
and
lock
pop
movs
adc
(bad)
push
mov
leave
aad
adc
aam
dec
mov
imul
pushf
mov
add
mov
int
icebp
cwde
mov
adc
pop
pop
ret
aad
psraw
enter
cli
push
hlt
jnp
movs
mov
push
cmc
cwde
lahf
mov
test
jmp
sbb
cmps
jae
ins
jecxz
int3
cli
ins
dec
jno
imul
xchg
scas
push
xor
(bad)
retf
addr16
aas
xchg
mov
cli
fisubr
push
mov
jecxz
add
std
inc
sbb
mov
cmp
imul
xchg
fild
imul
pop
icebp
and
push
and
shl
push
call
pushf
out
lahf
push
adc
cmp
sbb
push
ss
ror
sbb
lods
xor
xchg
aas
retf
fcom
fisub
push
dec
mov
loop
pop
sbb
push
mov
xor
movs
imul
shl
dec
sbb
out
xor
cmp
jp
loopne
push
jmp
mov
pop
or
dec
jl
jne
icebp
out
pop
mov
fs
loop
sbb
push
xor
xchg
scas
mov
xchg
adc
jle
clc
pop
mov
inc
push
jmp
push
jo
jle
les
xchg
cli
cli
xchg
imul
or
aad
ror
pop
(bad)
or
sub
mov
pop
or
loop
leave
outs
cdq
and
lock
pop
clc
sbb
dec
std
sub
push
shl
mov
lods
xchg
jmp
fadd
outs
repz
(bad)
dec
xor
inc
dec
outs
out
xor
mov
loop
call
pop
fiadd
gs
xchg
movs
mov
ret
in
adc
xor
dec
fs
std
jmp
adc
movs
add
or
and
pop
pop
xchg
sub
imul
pop
dec
pop
sti
add
les
xchg
das
ficomp
cmova
stos
mov
inc
bound
ja
push
xor
lea
inc
cmps
fstp
fisub
or
jle
bound
pusha
jg
cmp
sub
fwait
push
icebp
test
or
mov
pushf
dec
clc
jg
(bad)
cld
pop
lock
mov
and
pop
ret
and
cmps
shl
cmp
mov
pop
sub
push
lds
bound
out
fcom
pusha
push
mov
dec
xchg
loop
daa
fdivp
adc
lea
test
(bad)
mov
clc
int3
mov
xlat
iret
mov
pop
push
inc
int3
je
jg
inc
dec
add
mov
or
sbb
add
int3
jmp
jmp
sar
cwde
sub
jp
retf
int3
fnstcw
inc
mov
cmps
sub
pop
pop
out
pushf
push
xchg
sub
mov
dec
test
fist
cmp
mov
adc
dec
inc
div
movs
push
shl
loopne
push
jg
vrcpss
fwait
pop
ja
outs
movs
in
movs
cmp
xlat
cmc
sub
jecxz
(bad)
mov
fsub
jmp
xchg
xchg
mov
cmps
xor
jle
sbb
sahf
fcomp
(bad)
mov
mov
retf
mov
push
and
ror
pop
add
push
pushf
mov
dec
jge
out
dec
mov
mov
pushf
outs
dec
sub
inc
pop
push
xor
imul
sti
sbb
das
shr
std
xchg
cmp
ins
mov
ins
push
mov
lods
inc
(bad)
iret
mov
fcom
push
fadd
pop
mov
pop
jbe
test
daa
and
xor
xchg
stos
rcl
and
movs
mul
pop
inc
loope
ja
je
xchg
push
ret
sbb
cdq
and
into
stos
pop
nop
cmp
inc
int
cld
nop
mov
dec
repnz
ret
add
mov
jle
outs
fdivr
sahf
es
(bad)
cld
movs
dec
xchg
in
(bad)
and
fcomp
popf
push
leave
mov
loopne
in
lods
jb
out
pop
dec
mov
pop
and
inc
es
stos
inc
inc
mov
or
sub
fnstsw
pop
mov
int
int
rol
(bad)
fcmovnb
jmp
add
loopne
add
add
mov
je
rol
dec
sbb
cdq
dec
inc
push
pop
push
xchg
imul
or
fs
repnz
sub
ror
jge
cmp
loope
mov
jp
fwait
mov
cmp
pop
jne
add
xor
lea
fwait
int
into
sbb
cmp
xor
sbb
mov
rol
mov
adc
sti
push
ja
xor
or
xor
ins
sub
inc
push
push
or
out
mov
out
jmp
fisttp
stc
inc
mov
cmps
jno
inc
or
repnz
xlat
and
xor
pop
mov
rcl
outs
jmp
pop
push
push
bound
(bad)
push
inc
mov
imul
xor
jbe
sub
jae
sbb
adc
mov
call
or
and
stos
or
or
pop
inc
dec
rcr
pop
inc
aam
cld
ret
fcomp
lock
ds
adc
cdq
pop
dec
cmp
shl
inc
xchg
sub
jae
sub
mov
and
jbe
push
jmp
dec
in
int
inc
(bad)
sub
inc
jno
rcl
arpl
gs
jmp
jo
repz
mov
dec
cmp
sbb
push
ja
xchg
aaa
xchg
mov
into
in
adc
les
inc
xchg
adc
jg
cmc
rol
test
sti
jns
das
lods
pop
cwde
hlt
mov
mov
nop
pushf
jns
lds
sub
hlt
mov
or
scas
imul
(bad)
sbb
in
xchg
sbb
inc
ret
fdivp
mov
lock
xchg
cmp
test
outs
leave
mov
in
xchg
mov
push
cmc
das
mov
mov
adc
jg
sub
lods
std
jb
ss
adc
sbb
fnsave
mov
fwait
ror
mov
cmp
dec
lods
xchg
or
pop
push
shr
fild
sti
dec
fisttp
inc
enter
inc
repnz
xlat
cli
std
mov
cld
cmp
inc
scas
int
sub
leave
movs
lea
into
repz
adc
in
xchg
dec
jmp
lea
repz
sbb
ss
mov
hlt
pop
mov
pusha
cli
sub
pop
test
call
dec
pop
inc
pop
push
pushf
or
ja
in
pop
iret
dec
test
pop
(bad)
xchg
add
or
mov
add
movs
dec
dec
jne
jns
mov
jae
sbb
imul
pop
test
inc
adc
shl
xor
xor
or
cmps
xchg
pushf
loopne
inc
(bad)
fldcw
or
call
xor
pop
fs
add
mov
shl
add
scas
push
cld
int3
mov
movs
scas
imul
(bad)
sbb
jge
pop
scas
dec
pop
iret
push
ficom
add
retf
xchg
mov
sahf
test
push
adc
add
js
and
ins
ret
mov
xchg
dec
cmps
aam
mov
sub
sub
and
sub
dec
shr
push
sub
loopne
xchg
data16
out
jp
(bad)
ins
iret
xor
in
mov
mov
lods
fld
shl
or
in
clc
mov
je
mov
cmp
lea
in
pusha
push
add
fsub
jae
xchg
push
sub
mov
ds
mov
test
sbb
cmps
retf
fsub
ins
sub
mov
xchg
das
ja
fsub
jns
xchg
sti
mov
inc
push
outs
es
cld
and
or
cli
test
jb
sbb
xor
or
out
out
arpl
aaa
inc
movs
es
xor
lock
xor
add
cwde
dec
adc
jecxz
fcom
test
and
xchg
adc
aas
(bad)
int3
inc
mov
orps
sbb
mov
adc
cld
loope
jg
cmp
and
dec
shl
rol
sub
sbb
shr
sbb
pop
add
imul
retw
in
and
pop
push
cmps
xlat
jp
dec
mov
fstp
pop
sub
rol
push
out
and
clc
pop
jae
sbb
addr16
pop
and
cli
outs
adc
dec
pop
retf
pop
iret
pop
movs
dec
enter
sbb
adc
ds
and
jno
mov
movs
mov
adc
sbb
js
aas
pop
add
jns
sbb
lock
ss
leave
dec
jg
scas
sbb
mov
ds
or
sub
leave
cmp
es
lahf
pop
pop
dec
xor
xlat
inc
lods
ins
pop
sub
icebp
test
mov
repnz
inc
fs
cmps
int
sub
pop
xor
xchg
jo
add
and
out
pusha
inc
add
dec
inc
jmp
inc
cmps
leave
les
sbb
enter
mov
cs
mov
and
sbb
or
ja
leave
push
xchg
pop
push
sub
mov
cdq
or
cmp
fdivr
pusha
movs
add
popf
ret
std
repz
dec
mov
pop
inc
pop
xchg
clc
xor
and
ja
clc
pop
add
hlt
or
push
xlat
mov
adc
(bad)
fist
xchg
jge
cmps
mov
jns
fsubr
mov
add
or
mov
or
dec
lea
sti
imul
out
mov
add
es
lahf
movs
pop
cmc
push
cmp
cmp
jb
push
ja
xchg
out
outs
push
cmp
in
nop
dec
xchg
dec
fcmovnu
(bad)
aam
cmps
aaa
std
nop
adc
jne
mov
mov
push
xchg
add
mov
and
push
mov
or
add
mov
in
aad
inc
adc
scas
pop
and
icebp
pop
xchg
adc
fcmovnu
in
adc
sub
lock
iret
ins
ja
mov
scas
scas
jne
inc
jle
movs
dec
(bad)
dec
gs
inc
daa
mov
fisub
mov
data16
std
xchg
adc
mov
add
fstp
imul
movs
dec
mov
cld
xor
lock
(bad)
xchg
adc
mov
gs
xchg
lds
retf
jno
repnz
or
aad
popa
dec
fs
(bad)
addr16
xchg
and
out
(bad)
in
call
dec
add
push
push
add
push
mov
out
in
(bad)
and
sub
cmp
inc
pop
push
mov
outs
nop
jbe
stos
arpl
lods
pusha
ins
(bad)
add
rol
leave
fsub
mov
xor
sbb
jmp
add
fisubr
sub
push
lods
pushf
outs
pop
ret
mov
mov
scas
js
push
imul
sub
push
mov
inc
mov
ficom
push
dec
push
loop
movs
mov
push
add
sbb
ss
clc
mov
adc
pop
lods
pop
out
jbe
fucomip
xchg
and
mov
pop
cs
in
and
lea
or
pop
(bad)
sti
add
arpl
push
cmps
outs
ficom
push
adc
icebp
or
aas
xchg
xlat
sbb
loopne
call
add
inc
int
call
retf
loop
es
pop
xor
hlt
sub
sbb
lock
loope
inc
add
jnp
sub
ss
pusha
dec
push
movs
pop
add
sub
gs
std
or
add
or
pop
enter
(bad)
and
les
sbb
push
outs
imul
ins
(bad)
fs
dec
test
pushf
push
xchg
mov
jl
mov
shr
ins
ja
sub
lds
xor
jp
push
inc
xchg
pop
(bad)
xchg
js
jmp
sub
cdq
mov
fcmove
lock
in
and
in
push
daa
nop
(bad)
push
mov
sbb
xor
pop
fs
fld
(bad)
xor
fwait
out
mov
jle
pop
jmp
and
arpl
rcl
shl
ret
sub
mov
cmp
dec
xor
and
nop
and
adc
push
xor
xor
stc
bound
sahf
jo
into
mov
mov
add
popf
xchg
fld
dec
ret
jp
je
aas
cld
lods
jae
push
push
inc
aad
mov
rol
dec
(bad)
dec
sbb
icebp
aas
dec
bound
sub
jg
jnp
cwde
or
and
cmp
xor
je
mov
ss
(bad)
retf
push
xchg
jge
mov
sub
pushf
lock
in
lods
jne
inc
and
mov
xchg
retw
mov
xchg
(bad)
aas
add
mov
clc
std
aam
int
ret
(bad)
xchg
pusha
fidiv
mov
pusha
test
ret
mov
pop
and
mov
add
xchg
rcr
pop
lods
cli
pop
daa
push
clc
sbb
cmp
and
test
ins
xor
xchg
gs
mov
cwde
jle
push
sbb
sbb
mov
mov
into
mov
rcl
adc
mov
ins
or
aad
(bad)
push
adc
adc
bound
sbb
imul
out
and
or
js
xchg
aaa
mov
mov
das
daa
out
pop
daa
ficom
mov
or
sbb
adc
std
iret
dec
popa
push
mov
icebp
jge
out
sbb
push
and
jnp
adc
add
in
std
xor
nop
(bad)
sub
adc
push
adc
dec
and
and
repz
icebp
mov
add
aas
jbe
arpl
xchg
fnsave
test
ds
das
adc
and
sbb
mov
imul
bound
dec
sbb
or
addr16
aad
pop
sbb
adc
push
shl
and
lods
dec
pop
das
jno
in
fwait
ja
jnp
inc
addr16
jge
mov
dec
sub
push
xchg
xchg
fwait
in
pop
mov
lods
fiadd
dec
nop
fwait
jmp
xchg
xchg
dec
add
inc
loopne
xor
(bad)
clc
xchg
xor
jle
cmp
xchg
push
mov
inc
aas
jb
xchg
cs
mov
loope
ret
mov
imul
xchg
aas
dec
call
and
mov
popf
fisttp
jl
adc
lods
add
cmp
gs
fmul
fld
and
xor
adc
(bad)
lods
cmp
add
xchg
mov
loop
cmp
mov
push
cmp
xor
pop
sub
inc
bound
jmp
pop
pop
mov
movs
rcr
inc
xlat
out
test
push
push
inc
pop
int3
inc
popf
adc
jno
jecxz
mov
sbb
push
inc
push
jns
adc
jp
dec
add
mov
push
mov
jns
ins
test
out
ret
and
dec
lock
sbb
inc
cld
call
and
outs
push
cmps
fisubr
movs
jmp
xchg
lods
ret
adc
and
bound
outs
rcr
cmp
test
mov
cmp
push
outs
mov
repnz
adc
mov
sbb
pop
pop
sub
stc
inc
and
retf
aad
xor
pop
dec
add
xor
test
movs
rol
sub
nop
xchg
imul
cdq
adc
mov
fs
or
popa
adc
inc
cs
scas
mov
add
mov
sti
retf
add
das
test
into
cmp
sub
xchg
adc
int3
gs
nop
test
pop
adc
ja
xor
aad
imul
inc
pop
lahf
sbb
std
push
cmps
pop
aaa
xchg
inc
push
sub
fsub
ja
sub
push
shr
movs
je
inc
stos
iret
xchg
cmps
jp
addr16
mov
inc
xchg
clc
cmp
add
push
loope
jecxz
fisttp
xor
sbb
sub
xchg
pop
icebp
push
xor
lock
jmp
add
enter
shl
push
movs
sbb
pop
mov
aas
test
cs
sub
sub
cmp
mov
lods
cdq
push
daa
aas
into
lds
jae
jo
retf
pusha
movs
call
int3
out
pop
dec
and
loope
dec
loope
(bad)
fucomip
shl
add
push
cmp
push
xor
mov
lea
(bad)
mov
jbe
nop
icebp
mov
dec
xlat
push
push
leave
pop
dec
je
mov
pop
and
iret
repz
jne
sub
cmps
imul
scas
es
cli
movs
std
(bad)
aaa
nop
inc
inc
mov
jae
enter
mov
(bad)
cli
inc
ins
nop
jp
mov
jbe
lock
ror
hlt
xchg
cmc
mov
or
jmp
(bad)
mov
dec
pop
inc
mov
mov
out
fimul
lock
stos
mov
mov
retf
out
cdq
popf
xor
add
clc
(bad)
mov
inc
fidiv
or
je
retf
into
sar
inc
hlt
fidiv
nop
sbb
out
fs
retf
loop
stos
sahf
ret
into
inc
or
mov
hlt
movs
fist
jmp
mov
das
rcl
pop
(bad)
jle
push
xchg
in
add
stos
jmp
xchg
or
cmp
inc
test
or
xor
push
cmps
jmp
inc
sahf
and
pop
jo
adc
pop
mov
lods
adc
and
adc
add
adc
(bad)
or
add
pop
rcr
scas
fcomi
nop
in
push
lds
loop
xchg
std
sbb
sub
leave
icebp
cmp
iret
test
lods
jecxz
fidivr
dec
fld
dec
(bad)
adc
out
jae
inc
xchg
sub
push
xor
and
xchg
push
imul
mov
in
cmp
into
mov
sub
cwde
xor
ja
inc
test
push
xor
nop
(bad)
in
out
mov
inc
rcl
and
sbb
int
cmps
sub
(bad)
fcomp
into
dec
rcl
pop
push
adc
mov
mov
mov
or
sub
(bad)
mov
or
adc
jecxz
imul
(bad)
jb
pop
xor
cdq
adc
mov
lods
push
sahf
sti
fist
add
dec
inc
pop
outs
mov
mov
mov
xor
inc
sahf
lahf
add
rol
jecxz
dec
lods
cmp
loop
les
imul
popa
mov
into
mov
sub
shr
jle
outs
mov
and
xor
les
xor
pusha
ror
push
jge
inc
pushf
mov
mov
(bad)
in
inc
es
cld
(bad)
pusha
pop
push
ret
int
adc
call
add
in
inc
jb
mov
ins
pop
into
neg
jmp
mov
std
jae
mov
jp
mov
cmps
mov
push
add
or
jnp
and
push
dec
sbb
(bad)
fbld
leave
lahf
imul
dec
add
cmps
and
adc
mov
gs
test
add
mov
jl
jmp
(bad)
repnz
mov
repnz
into
scas
mov
cdq
shl
cmps
mov
sub
pop
rcr
add
pop
push
pop
pushf
mov
fiadd
mov
rcr
fcomp
push
lods
jle
cmp
mov
iret
(bad)
outs
cli
mov
push
jns
push
pushf
repnz
push
cld
and
jg
adc
mov
jo
fadd
or
pusha
mov
mov
mov
(bad)
pusha
lahf
clc
ret
dec
ds
std
sub
fsubr
das
sub
push
adc
shl
push
mov
cmps
push
stc
loope
jb
cmp
rcr
add
sbb
je
fdivr
mov
and
out
mov
retf
mov
es
std
jo
mov
inc
retf
sub
fwait
inc
out
pop
enter
jno
mov
mov
call
pusha
cli
adc
lea
iret
das
fbstp
mov
mov
into
dec
sahf
test
cdq
fs
push
(bad)
pop
repz
int
stos
call
inc
and
cmps
outs
pop
in
loop
loope
or
cmp
xchg
mov
call
jmp
inc
xor
ja
test
adc
sub
fcom
mov
pop
push
cli
sub
repnz
mov
push
bound
cld
mov
mov
mov
adc
popa
std
pushf
jnp
pop
adc
jno
icebp
into
inc
jb
pop
pop
clc
mov
and
fstp
mov
fcom
push
xor
test
aad
fcomp
fstp
out
cs
aam
dec
adc
adc
js
cmp
jg
jnp
cdq
adc
fist
pop
mov
hlt
add
xor
pop
adc
cli
mov
lds
call
push
jmp
cmp
shr
push
pushf
sahf
push
inc
ret
push
push
dec
mov
sub
xchg
loopne
inc
inc
push
sbb
and
pusha
push
aas
or
aas
dec
pusha
rcr
retf
add
mov
push
xchg
std
fst
push
jae
movs
jnp
test
xor
(bad)
mov
cld
add
add
mov
pushf
pop
inc
test
jmp
pusha
arpl
sbb
aaa
xchg
sbb
std
fnstcw
iret
sbb
int3
xchg
lea
test
scas
jns
and
xchg
pop
ficom
mov
push
pop
ret
sub
add
mov
je
(bad)
shl
sub
adc
jge
fidiv
(bad)
or
cs
cmps
mov
mul
inc
push
xchg
(bad)
dec
push
not
adc
mov
cdq
retf
pop
std
pop
xor
xor
xor
out
adc
push
or
jl
jp
outs
dec
dec
sbb
lds
iret
xor
jae
cmc
outs
adc
rol
sub
mov
loopne
cmp
or
repnz
popa
test
or
ja
in
dec
nop
mov
addr16
xchg
dec
sub
in
fsubr
test
(bad)
adc
inc
or
icebp
push
or
push
add
sbb
scas
mov
stc
push
into
jg
xor
rcl
inc
mov
mov
jmp
inc
data16
sub
pushf
imul
lods
add
mov
pop
push
xlat
ret
and
pop
pusha
push
cdq
push
es
push
dec
jne
daa
jle
pop
into
and
add
adc
dec
jbe
(bad)
in
fs
out
lahf
shl
cdq
pop
add
jae
es
adc
iret
call
inc
addr16
mov
or
dec
cmp
(bad)
sub
shl
jmp
mov
mov
movs
rcl
mov
push
inc
jae
sbb
fnstsw
add
enter
shl
hlt
test
push
fwait
dec
call
fidivr
outs
sub
mov
(bad)
mov
jl
mov
inc
dec
sub
sub
mov
stos
add
jnp
cs
scas
dec
div
push
or
jp
aam
mov
clts
jnp
xchg
or
xor
inc
dec
xchg
jle
jecxz
adc
and
sub
ins
add
jecxz
push
mov
push
jmp
mov
push
sub
adc
jb
sbb
cs
(bad)
cmps
lods
ret
rol
je
outs
in
out
shr
jbe
dec
xchg
mov
imul
pop
mov
stc
dec
push
in
dec
jp
and
fcos
retf
xchg
fcom
sub
icebp
mov
xchg
jmp
mov
lock
push
out
xor
inc
mov
leave
aam
cmps
pusha
icebp
in
and
add
inc
scas
cmp
add
rol
adc
sbb
lds
pop
gs
nop
fwait
imul
push
in
retf
test
aaa
into
sbb
dec
jo
cmps
xor
pushf
cmp
movs
pop
sbb
int3
sub
mul
pop
cmc
mov
in
sub
ret
and
add
aaa
and
aas
nop
adc
(bad)
(bad)
das
je
dec
hlt
pop
and
mov
(bad)
stc
pop
jg
(bad)
sbb
and
and
call
jl
lods
fstp
xor
jo
add
xor
sti
cmps
fs
xchg
jmp
or
fisubr
adc
xchg
daa
mov
popf
imul
sbb
fld
cli
jge
lods
mov
ja
div
imul
dec
cwde
push
enter
jge
inc
mov
jp
dec
xor
les
gs
mov
in
xchg
dec
jo
mov
mov
cdq
push
(bad)
and
cld
in
mov
pushf
shl
dec
cld
push
aam
cmp
sub
in
test
fmul
outs
or
pop
(bad)
push
mov
xchg
ja
cmps
leave
mov
cmp
lahf
dec
hlt
nop
cs
push
lods
mov
bound
mov
call
fld
not
ret
les
sbb
inc
dec
push
mov
inc
bound
jecxz
pop
mov
outs
(bad)
(bad)
jb
sub
lods
or
enter
int3
add
adc
aaa
aad
in
sbb
jle
jg
rcl
es
lea
mov
jg
ss
fimul
retf
fwait
push
adc
mov
sbb
or
cmp
inc
jb
push
cmc
das
jecxz
mov
fsub
test
push
mov
(bad)
in
xor
ficomp
add
rol
es
and
cmc
add
jg
pushf
les
inc
xor
cwde
and
pop
or
push
cmc
mov
div
jmp
pop
sbb
test
pop
sbb
int
cmp
adc
inc
fiadd
jmp
enter
lea
sub
stc
jg
add
sub
cli
ss
fdiv
les
xor
dec
inc
rcr
sub
xlat
mov
scas
mul
adc
or
pushf
mov
add
adc
retf
mov
fwait
call
movs
sbb
fdivr
add
jmp
jl
mov
pop
lods
xchg
clc
retf
(bad)
mov
ins
cmp
sub
int3
push
cmc
sub
and
adc
push
retf
pop
out
not
popf
inc
ds
(bad)
sar
es
add
into
lods
out
jb
retf
clc
cmps
hlt
rcl
dec
outs
scas
(bad)
ins
test
pusha
jb
mov
cmc
psllq
mov
mov
jge
xchg
rol
mov
cwde
(bad)
mov
scas
loope
cmp
ss
aam
cs
cmps
and
(bad)
mov
or
mov
mov
sbb
inc
jmp
fs
shl
outs
fcomip
in
mov
sti
rol
int
push
icebp
jno
aas
jmp
mov
outs
and
push
test
add
call
lock
mov
cmc
add
fimul
dec
loope
sub
push
jb
add
shl
call
xor
mov
push
fdivr
test
ja
out
pop
fldenv
push
or
jle
sbb
pop
and
js
repnz
ds
or
daa
adc
push
movs
arpl
push
xchg
cwde
xchg
mov
xor
jns
je
iret
push
lahf
pop
add
mov
add
fimul
xchg
cld
pop
push
fcom
pop
(bad)
sbb
lahf
jg
callw
dec
aaa
add
int
repz
dec
fist
icebp
(bad)
pushf
cmc
cs
adc
adc
mov
sub
stos
xor
aad
leave
pop
adc
mov
jbe
ja
ja
cmc
(bad)
imul
daa
jmp
or
sub
test
cli
mov
jne
and
push
mov
sub
xchg
bound
cmp
pushf
lods
jo
lahf
inc
jmp
mov
adc
jg
test
imul
mov
mov
jnp
jp
or
test
jbe
xchg
dec
ins
je
sar
ficomp
mov
les
xchg
(bad)
jmp
scas
inc
push
movs
in
dec
jns
cmp
jne
adc
inc
rol
jmp
mov
jmp
push
xor
mov
mov
mov
push
aad
imul
dec
mov
mov
in
pop
pop
cmp
stc
fnstsw
cmp
add
mov
retf
cmps
xor
pop
movs
loopne
or
mov
lock
ins
shr
nop
cli
mov
fbstp
adc
retf
add
cmp
or
sar
mov
mov
hlt
popa
fild
xchg
nop
xor
jp
ror
jg
xchg
xchg
add
(bad)
push
dec
jnp
cmp
loop
aas
xor
push
test
mov
loopne
push
lea
js
sbb
jo
sbb
mov
movs
pop
xchg
imul
and
gs
mov
jno
inc
mov
repz
jno
mov
mov
xor
inc
cmp
(bad)
aad
mov
push
repnz
sbb
cmc
push
xchg
loope
lahf
shl
adc
mov
cld
mov
xor
cdq
retf
(bad)
mov
enter
sti
ins
xchg
mov
fsubr
lods
push
pop
xchg
adc
into
jl
mov
mov
xor
ss
and
jecxz
cli
rol
loope
stos
pusha
fist
dec
cdq
add
dec
xor
aad
xor
ins
ror
imul
xor
adc
xchg
fld
push
jbe
jb
xchg
imul
push
das
inc
mov
sbb
dec
xor
dec
pop
jnp
fisub
aad
or
xlat
or
pop
(bad)
sbb
aaa
jmp
push
xor
jg
adc
adc
loop
xor
cmp
out
push
mov
(bad)
in
pop
xchg
xor
(bad)
in
ds
jecxz
fdivr
sub
fsubr
addr16
mov
or
pop
imul
in
mov
pushf
push
xlat
push
and
ds
xor
cdq
out
xor
push
cmp
cld
js
ror
jns
sbb
lea
add
dec
jg
stos
repnz
ret
loope
inc
outs
or
inc
sbb
push
cmp
dec
outs
imul
mov
cmps
fnstenv
pop
cmp
mov
add
cs
js
xor
mov
cdq
out
and
rcr
jmp
ss
test
call
or
jmp
inc
sub
fidivr
xchg
xor
aam
xchg
inc
inc
dec
pop
mov
stos
cmc
cmp
sub
movs
in
and
or
ja
sbb
adc
(bad)
(bad)
mov
mov
sub
or
clc
xchg
fwait
popa
in
jge
cli
mov
rol
jmp
pop
neg
and
push
pop
lock
inc
jmp
xlat
mov
xor
mov
cli
mov
jbe
fwait
jo
mov
xchg
cmp
retf
outs
fdivr
adc
arpl
xchg
test
lahf
or
pop
adc
fcom
lds
push
fnstenv
xor
push
pop
mov
es
data16
bound
mov
dec
mov
xchg
cmc
cmc
lock
sub
cs
jge
pop
in
in
push
and
ret
aam
arpl
daa
js
and
mul
sbb
jno
xchg
adc
dec
cmp
pop
mov
lods
dec
push
out
scas
jmp
inc
imul
lods
aam
xchg
mov
pop
adc
mov
dec
pop
dec
adc
pop
hlt
jb
sub
mov
mov
push
lods
(bad)
ins
dec
cli
cs
cmp
data16
xlat
lods
fbstp
mov
push
daa
push
pusha
adc
or
call
add
adc
call
xchg
mov
jo
aaa
popf
push
mov
fisttp
in
in
xchg
fucom
aad
inc
mov
and
(bad)
or
ret
mov
pop
jno
scas
lods
mov
adc
jae
repnz
pushf
out
hlt
xchg
jns
xchg
mov
pop
cmp
daa
xor
mov
sbb
fs
inc
add
and
jl
push
xchg
sub
jmp
mov
mov
addr16
dec
sbb
and
dec
xchg
xchg
sar
jp
adc
outs
and
pop
mov
idiv
inc
jae
push
(bad)
pop
sub
pop
imul
xor
gs
fcmovnu
or
mov
sbb
in
movs
ss
xor
mov
pusha
outs
lds
add
sub
daa
adc
inc
mov
data16
sti
dec
out
outs
mov
pop
and
sbb
add
push
cmp
test
(bad)
sub
in
retf
mov
mov
lock
cmp
inc
jmp
test
xchg
movs
aas
dec
adc
xchg
outs
xor
cmc
push
lea
outs
dec
outs
leave
jge
jns
push
cmp
or
movs
xchg
pusha
(bad)
cmps
idiv
lea
shl
mov
(bad)
arpl
enter
push
aas
call
(bad)
mov
mov
xor
jg
repnz
daa
stos
pop
adc
add
into
clc
lahf
inc
test
inc
gs
add
or
adc
into
inc
cmp
pop
jo
dec
(bad)
cdq
mov
ins
jnp
mov
ret
loopne
rcr
sbb
outs
aad
lock
movs
and
call
clts
or
stc
fwait
jns
pop
pusha
rol
push
or
arpl
sub
cmp
mov
xchg
retf
mov
(bad)
movs
bound
repz
iret
sub
shl
loope
fistp
out
leave
sbb
(bad)
ret
push
sahf
stos
dec
or
inc
arpl
push
imul
dec
adc
loope
mov
mov
je
sub
jae
pusha
cli
test
ss
shl
jg
sbb
sub
mov
(bad)
ins
xchg
and
dec
dec
adc
ins
inc
aad
ins
inc
or
pop
push
push
xabort
xor
mov
aas
imul
loopne
cmp
popf
cld
or
addr16
test
or
daa
(bad)
push
mov
push
pop
push
xchg
addr16
and
push
call
rcl
fst
scas
loope
inc
xlat
mov
pop
cmp
adc
ret
mov
and
retf
cmp
addr16
mov
sub
add
imul
dec
sar
fs
stos
jge
out
cli
imul
cs
mov
inc
sub
addr16
scas
sub
cmp
mov
loope
and
fs
push
adc
add
mov
movs
retf
mov
or
xor
push
mov
je
ret
addr16
or
call
fst
xor
std
xor
cmove
mov
push
mov
into
jae
imul
repnz
int3
mov
mov
mov
daa
out
add
sub
in
cmps
repz
sub
or
and
cmp
or
in
dec
and
push
jne
sbb
jbe
loopne
hlt
je
out
movs
test
cmp
bsr
xchg
test
nop
retf
lock
cmps
icebp
mov
out
push
imul
(bad)
jbe
mov
dec
mov
pop
ret
cwde
scas
iret
mov
pushf
cld
pop
push
into
xor
fld
jae
push
or
mov
mov
das
jb
cmp
fwait
mov
cwde
xchg
imul
adc
cmp
neg
push
popf
daa
push
xchg
int3
xor
push
out
dec
sbb
les
icebp
mov
jl
or
sar
rcl
sub
mov
mov
fwait
jl
xor
mov
sti
popf
mov
dec
data16
dec
addr16
popa
push
cmp
lods
mov
xchg
mov
repnz
xchg
dec
out
movs
in
mov
push
xlat
arpl
push
retf
js
xchg
jno
into
mov
pop
sub
sub
add
fdivr
(bad)
fadd
xor
push
lock
(bad)
scas
popa
sub
and
pop
jl
push
sub
outs
js
cmp
or
cmps
sbb
inc
inc
inc
aas
cmp
jb
call
clc
daa
sbb
ss
mov
mov
sub
jb
mov
out
mov
adc
iret
clc
sbb
dec
ins
and
ins
mov
out
dec
loop
loope
daa
lock
js
jle
mov
rcr
sub
inc
stos
je
xchg
arpl
xchg
(bad)
ror
inc
ret
mov
mov
ins
div
in
fnstsw
sar
dec
call
call
outs
imul
lock
fs
adc
ins
jo
call
sub
shl
rcl
add
(bad)
jo
jnp
mov
es
push
add
sbb
stc
iret
and
or
mov
add
and
cmp
retf
dec
cwde
sub
mov
imul
jmp
sbb
xor
mov
mov
cmp
std
es
and
push
arpl
fist
dec
ror
xlat
popf
lods
xchg
je
dec
or
pop
loope
add
aad
inc
(bad)
shr
jne
rol
adc
mov
push
dec
sbb
push
(bad)
cmp
popa
call
ficomp
mov
test
mov
fstp
call
paddq
adc
movs
inc
xchg
push
in
cmp
jne
sub
mov
fld
sub
loopne
dec
and
call
repnz
cdq
dec
repz
int3
fsubr
test
cmp
nop
rcl
dec
ss
movs
sahf
test
pop
xlat
cmp
sub
jae
or
pop
std
jcxz
dec
enter
clc
fild
dec
in
mov
test
loope
pop
sets
mov
mov
sub
sub
mov
inc
jns
and
jle
xchg
test
xor
xor
ret
ins
xor
imul
pushf
popf
mul
test
mov
jnp
mov
pusha
and
fild
scas
ins
retf
jmp
idiv
xor
ja
and
and
xchg
(bad)
icebp
mov
iret
enter
xor
stos
inc
ss
fld
(bad)
cli
mov
mov
cmp
stc
sbb
pop
(bad)
mov
outs
dec
das
inc
jge
test
jne
popa
push
sub
or
mov
and
nop
test
push
inc
shl
or
mov
fldenv
pop
fs
mov
or
cmc
jo
sub
pop
pop
aam
mov
mov
ss
cmc
cmp
ja
xchg
pushf
lds
xchg
pop
shl
mov
xchg
pop
xor
lock
pop
pop
pop
das
rol
ret
imul
push
outs
dec
inc
mov
add
push
xchg
mov
mov
mov
pop
aam
xchg
push
pop
bound
scas
jg
xchg
(bad)
xchg
sub
call
push
pop
icebp
cmp
jle
out
loope
push
fild
or
dec
es
lods
inc
sub
pusha
test
shl
jnp
mov
add
cwde
add
scas
cwde
out
dec
mov
rol
test
pop
je
out
(bad)
rol
inc
dec
sti
lock
aaa
xor
adc
movs
mov
or
lods
js
pop
jle
mov
add
ret
mov
fcom
jge
movs
call
test
data16
out
fwait
push
psrlq
inc
mov
mov
data16
fmul
(bad)
jb
push
out
jl
push
in
sbb
ss
xchg
test
mov
dec
xchg
add
jbe
lahf
cmp
jno
push
or
dec
and
inc
mov
rol
push
mov
retf
cdq
mov
dec
pop
or
shr
pop
int
xchg
loopne
test
mov
dec
sub
jmp
gs
push
(bad)
aas
xchg
jno
mov
mov
jae
jl
pop
jae
and
xlat
mov
fdiv
(bad)
into
xor
adc
add
inc
and
jg
xor
es
popa
jb
fimul
pop
dec
in
out
pushf
jmp
aaa
call
sbb
jge
fs
popa
(bad)
aam
dec
neg
jo
add
ds
jmp
inc
cs
dec
sub
loopne
(bad)
mov
cmps
jns
mov
mov
lahf
sub
adc
loopne
jne
inc
mul
(bad)
fadd
loopne
cmp
fild
idiv
rol
lea
ja
call
sbb
retf
pop
dec
push
jnp
std
lea
in
loope
fwait
mov
test
pop
push
push
and
xchg
inc
stc
lods
fsubrp
dec
add
mov
fadd
dec
mov
mov
cmp
sbb
mov
mov
movs
push
mov
out
mov
or
inc
push
push
add
mov
or
sub
loope
ss
cmc
daa
push
out
or
push
js
push
and
popf
xor
pop
sub
arpl
sub
test
cli
sbb
call
mov
int
mov
pusha
jb
dec
fcomp
or
dec
shl
cwde
xchg
iret
mov
xchg
mov
jbe
mov
cwde
mov
pop
xchg
sbb
scas
mov
pop
push
out
add
jnp
pop
adc
and
cmc
push
sahf
mov
jae
into
mov
fs
and
xchg
push
pop
icebp
sub
cmp
sbb
cld
sub
(bad)
add
jo
frstor
in
xor
mov
push
adc
fdivr
ficomp
cmp
sub
out
sub
mov
fisubr
outs
enter
dec
lds
mov
ins
mov
out
sbb
pop
(bad)
sbb
fisub
lock
mov
mov
add
clc
cwde
repz
fisttp
ins
or
jecxz
mov
sar
pop
arpl
loope
dec
or
jmp
jle
adc
cmc
inc
jb
out
rcl
popf
mov
add
setne
loopne
dec
mul
pop
fsubr
scas
ja
lds
sar
and
out
(bad)
lea
movs
scas
in
mov
leave
inc
test
xchg
call
(bad)
add
pop
pusha
and
xor
lahf
ja
dec
adc
lea
addr16
jno
mov
xchg
leave
pop
js
lea
inc
cmp
push
in
rcr
inc
repz
sub
dec
jne
fbld
pop
pop
(bad)
icebp
in
rol
scas
push
in
pop
xchg
lock
mov
imul
push
(bad)
loop
and
xchg
mov
in
push
jns
cmc
mov
sbb
dec
add
in
cmc
cmps
outs
lock
movs
jecxz
jle
cmp
adc
add
jne
adc
repnz
sbb
adc
dec
neg
enter
imul
push
sbb
mov
ret
xchg
pop
jbe
pop
and
or
sub
pop
cmps
xchg
stos
add
ins
stos
pop
pop
mov
mov
fstp
ret
jmp
pop
mov
mov
xchg
mov
inc
rol
xor
pop
je
mov
scas
mov
addr16
pop
in
js
shr
leave
(bad)
and
mov
sbb
jbe
fucompp
cli
pop
or
pop
pop
pop
adc
add
and
sbb
push
cmc
repz
adc
add
test
jmp
pop
sar
iret
mov
cmps
aad
mov
xor
adc
ret
dec
shl
dec
push
retf
dec
xlat
jmp
(bad)
mov
out
xor
leave
in
out
and
out
jge
test
rcr
jle
rcl
clc
push
leave
dec
xlat
dec
shl
sbb
inc
push
xor
sahf
call
mov
stos
jne
ret
ds
cs
push
sti
test
adc
xlat
pushf
sub
loope
in
shl
fdivr
test
lods
cmp
aad
(bad)
sbb
(bad)
sbb
rol
and
inc
adc
push
retf
cmp
mov
sbb
push
cmp
or
fmul
lea
xor
jg
test
cmp
ret
xchg
and
pop
mov
lods
sbb
mov
scas
push
push
cmp
push
jae
adc
out
int3
dec
sbb
mov
(bad)
imul
lock
fs
or
(bad)
mov
jecxz
cmps
mov
push
sbb
xchg
push
retf
push
inc
in
jnp
xchg
inc
neg
jns
daa
xor
sbb
mov
in
push
(bad)
cwde
xchg
sub
mov
mov
push
xor
mov
out
daa
arpl
push
ss
stos
ds
pop
adc
cld
add
mov
jno
sbb
gs
and
std
je
cld
or
and
and
ins
mov
sub
rcr
sbb
xchg
(bad)
cmp
in
push
pop
lahf
fcmove
fstp
jle
add
mov
stc
outs
push
push
mov
pushf
js
add
or
fs
inc
adc
aad
pop
shl
out
or
jp
test
aaa
push
(bad)
jge
ins
cmp
aaa
fnsave
jecxz
xchg
fs
aaa
sbb
adc
icebp
mov
dec
test
jmp
repz
sti
jnp
in
fwait
jecxz
(bad)
sub
js
pusha
dec
mov
push
gs
jno
loopne
addr16
push
add
and
lea
call
xchg
add
ss
dec
sar
lahf
mov
in
sub
or
test
cmp
imul
adc
mov
ret
mov
jno
stos
jle
imul
pop
xchg
mov
or
or
adc
sar
aam
sbb
ja
xchg
loopne
fwait
sbb
addr16
push
fcom
push
out
sub
adc
call
xchg
jge
push
cdq
mov
sbb
jb
bound
fild
xor
ret
push
leave
cmp
push
hlt
pop
mov
xor
jbe
cmps
mov
iret
movs
nop
xchg
mov
jne
rcl
cmp
add
inc
adc
dec
or
lods
gs
call
sbb
push
dec
inc
scas
mov
shl
add
or
ins
add
jne
ret
into
mov
sahf
sbb
sbb
jne
mov
fistp
test
sub
inc
jp
mov
add
lds
mov
pop
fmul
inc
lods
xchg
lods
sbb
(bad)
jmp
(bad)
stc
inc
(bad)
mov
xor
and
add
cld
rcl
lahf
jp
push
js
or
and
add
or
sti
cmc
fiadd
jl
pop
sub
adc
in
cmp
das
or
mov
pop
ficomp
push
pop
mov
mov
fisub
jmp
ins
cld
jecxz
pop
es
adc
jae
stc
adc
pop
imul
out
in
jle
cwde
pop
inc
and
inc
dec
sbb
aam
cmp
retf
aam
lods
mov
aaa
jp
add
jbe
and
sti
or
push
sub
mov
(bad)
inc
inc
cmc
push
inc
jbe
movs
jb
sub
movs
mov
popf
jl
jmp
(bad)
mov
fimul
add
ja
pop
mov
jmp
jg
lds
dec
xchg
mov
aad
in
out
lods
lock
or
add
mov
retf
pop
jnp
call
sar
add
imul
mov
fcomp
or
aas
stc
lock
adc
jo
retf
icebp
adc
cmp
xor
mov
push
sub
hlt
add
hlt
add
and
xchg
mov
add
mov
ins
lahf
in
xor
push
or
mul
xor
mov
repz
push
es
fsubr
and
sbb
retf
mov
enter
test
hlt
mov
jno
stc
pop
jbe
push
pop
aad
dec
dec
sbb
movs
lds
es
call
adc
cmc
jbe
mov
fs
jnp
xchg
fstp
cmp
ins
push
addr16
jbe
ins
test
aas
or
mov
sbb
out
sub
add
fs
cmp
test
dec
push
ss
dec
retf
rcl
cmp
dec
bound
aam
dec
xor
xor
retf
inc
ficom
stos
clc
popa
(bad)
fst
sub
push
shr
xlat
inc
inc
pop
cmp
out
sbb
shr
and
cmp
dec
push
xchg
push
pop
mov
sahf
sbb
xchg
addr16
(bad)
jmp
retf
daa
or
xchg
mov
arpl
hlt
repnz
hlt
repz
in
mov
loopne
jns
ror
test
ds
lock
mov
xchg
sbb
and
and
inc
xor
sti
retf
mov
repnz
into
mov
repz
mov
jne
add
inc
adc
sbb
loope
cmp
mov
xchg
adc
idiv
lods
xchg
xchg
test
nop
fiadd
and
mov
jne
or
(bad)
jge
mov
or
sahf
cmp
add
mov
sti
dec
pop
pushf
sub
xchg
div
test
out
sbb
mov
stos
ret
inc
lds
mov
int3
adc
out
jno
dec
mov
aas
fwait
popa
(bad)
sub
cdq
or
(bad)
stos
xor
sahf
push
ret
or
mov
pop
stos
in
out
loopne
xchg
aaa
push
das
mov
xchg
fwait
add
mov
mov
push
add
repz
and
mov
in
jbe
movs
lods
mov
inc
sub
cmp
nop
push
scas
cli
or
pop
fldenv
cmp
xor
stos
shl
or
aam
sbb
mov
les
cmp
lea
mov
ins
mov
lea
imul
cld
cmp
xor
outs
push
xchg
lods
rcr
(bad)
cwde
mov
or
jl
and
sub
adc
in
mov
sbb
xlat
sub
js
mov
inc
xchg
cmp
mov
sub
jmp
repz
add
(bad)
mov
cmps
mov
ins
push
xchg
and
adc
or
dec
fs
and
lds
(bad)
shr
retf
and
(bad)
in
pop
xchg
sbb
and
xor
mov
jle
pop
aam
jo
lods
inc
fst
xchg
lods
hlt
jp
movs
dec
stos
mov
adc
jp
(bad)
les
xchg
das
mov
icebp
fs
xor
cmp
sbb
jp
lds
jecxz
jmp
dec
adc
sahf
jne
sbb
lahf
xor
sahf
data16
fs
lods
test
pop
popa
stos
or
lock
jle
test
fstp
or
or
and
push
sbb
bound
shr
xor
(bad)
jle
mov
add
in
movs
mov
in
add
and
cmp
push
jle
test
add
jmp
mov
and
or
xor
movs
jb
ret
sbb
and
or
or
or
adc
icebp
dec
fs
loop
or
movs
pop
xor
pop
cwde
je
or
dec
dec
fwait
dec
into
pop
dec
call
mov
pop
mov
xor
lock
out
sbb
dec
scas
out
imul
pusha
jmp
dec
lods
fst
inc
iret
push
mov
(bad)
pop
inc
lea
adc
pusha
mov
fwait
arpl
fidiv
jle
mov
aad
popa
sub
std
ins
or
mov
mov
fwait
add
xor
cmp
mov
sbb
sub
sahf
cmp
(bad)
cmp
xchg
xor
in
sahf
push
inc
retf
mov
imul
sbb
sahf
fucomi
jge
(bad)
cmp
dec
push
dec
adc
les
and
enter
mov
adc
cmp
repz
inc
mov
dec
cmp
ss
(bad)
int
shl
loopne
cs
or
lea
rcl
cli
(bad)
sub
lea
add
mov
call
pusha
lahf
aaa
mov
xlat
sbb
popa
dec
ins
lods
dec
imul
pop
push
mov
pushf
adc
inc
test
in
xchg
shl
xchg
test
pop
jp
movs
aas
cdq
pop
xchg
xor
push
cmp
push
mov
ja
inc
xchg
sub
sbb
push
push
xlat
das
popa
imul
jne
jg
loopne
outs
cmps
push
ret
fimul
leave
and
retf
xor
movs
(bad)
leave
mov
pop
xor
adc
pop
jmp
dec
inc
stc
ja
push
aaa
enter
ficomp
out
sub
xor
or
ret
fdiv
dec
(bad)
mov
or
xchg
(bad)
iret
jg
mov
adc
inc
outs
adc
push
jnp
cmp
out
sub
(bad)
inc
int3
mov
call
jns
(bad)
sbb
icebp
ja
xchg
hlt
dec
mov
jns
fiadd
call
mov
dec
(bad)
pop
xor
test
loopne
push
pop
sub
adc
ss
inc
inc
call
adc
stc
or
jmp
sbb
mov
je
cmp
and
and
mov
shl
arpl
rcl
jne
inc
push
or
loopne
call
jo
aas
add
aam
mov
and
ret
inc
dec
scas
xor
mov
les
test
xor
leave
push
addr16
(bad)
in
push
sbb
dec
movs
in
in
xor
lods
sub
mov
jg
push
int3
das
push
enter
(bad)
fdivp
mov
arpl
dec
xchg
push
out
call
hlt
std
loop
xor
or
addr16
mov
cs
jbe
lahf
hlt
pop
ja
pop
test
loope
(bad)
fst
jne
mov
cmps
xor
popa
out
fist
out
pop
xchg
sti
pop
lds
xor
cmp
cwde
pushf
cmp
enter
xchg
mov
fisubr
cmps
inc
stos
jg
sbb
aad
call
clc
push
fimul
mov
push
cmps
or
movs
inc
or
mov
rol
ror
cwde
lahf
ret
xor
xor
(bad)
adc
arpl
pop
jae
sub
aam
inc
and
in
mov
retf
sar
add
push
daa
mov
pusha
push
dec
mov
cmp
fucomp
aad
dec
repnz
gs
fcomp
pop
sbb
inc
xor
inc
xor
mov
movs
movs
or
xor
shr
call
or
cdq
cs
dec
adc
add
jl
emms
sbb
push
fmul
out
inc
nop
js
mov
xchg
in
shr
pop
dec
and
sbb
addr16
jle
fadd
sub
adc
movs
pop
out
sub
ja
shr
pop
cmp
jae
nop
test
mov
movs
adc
pop
pop
xchg
pusha
push
lods
cmp
cmp
jmp
cmp
xchg
in
push
dec
pusha
xchg
add
and
inc
cmc
sub
xchg
retf
sub
dec
test
jmp
and
adc
fiadd
xchg
and
mov
cmp
sbb
lods
les
je
sbb
imul
pop
or
jecxz
and
call
push
push
loop
jnp
loopne
out
cmp
les
(bad)
mov
jle
call
xchg
fsub
cdq
jns
or
mov
and
cmps
scas
lods
jle
inc
aam
sbb
push
ins
jge
add
pop
mov
add
imul
mov
in
jo
cli
and
mov
cdq
into
xchg
dec
sub
xchg
inc
pop
test
daa
(bad)
xor
push
imul
rcr
mov
or
movs
shl
and
bound
or
add
(bad)
xchg
fidivr
mov
in
xor
adc
shr
push
add
hlt
add
dec
nop
or
mov
jb
movs
test
and
mov
xlat
stos
pop
dec
mov
mov
xlat
jge
pop
imul
sub
ins
les
push
test
inc
mov
gs
(bad)
movs
pop
adc
sti
xchg
mov
jbe
lock
xor
mov
mov
sbb
pop
cmc
fimul
inc
push
out
xor
hlt
sub
movs
enter
aas
stos
(bad)
inc
sbb
mov
inc
call
enter
sbb
ror
int
ret
pop
(bad)
arpl
cmp
into
push
sub
into
jecxz
iret
sub
push
xchg
pop
mov
std
jle
mov
cld
das
mov
or
les
pop
sub
int
pop
xchg
sbb
mov
xchg
gs
sbb
sbb
xor
inc
mov
fidivr
dec
push
rcr
les
sub
adc
add
pop
mov
mov
xor
retf
ds
push
rcr
clc
movs
add
idiv
cmps
sub
mov
test
cmp
add
adc
push
mov
loopne
dec
jb
aad
fild
push
push
push
cmps
lock
stos
sbb
movs
sbb
test
dec
data16
mov
jl
not
into
push
out
inc
mov
xchg
adc
stos
pushf
gs
xor
cs
icebp
push
mov
jns
(bad)
fld
in
stos
cmp
mov
movs
stos
fistp
sahf
dec
mov
adc
xchg
jbe
movs
je
nop
or
stos
in
loopne
sub
pop
mov
jbe
push
or
cmp
and
addr16
fld
stos
dec
sti
sar
sbb
(bad)
std
sbb
(bad)
lods
sahf
and
jecxz
cmps
xor
fstp
retf
mov
into
and
or
jmp
mov
dec
in
jmp
xchg
push
ficomp
fild
retf
pop
dec
add
in
jb
mov
mov
dec
jmp
push
xchg
les
pop
dec
scas
lods
push
and
inc
xchg
aad
ficomp
std
mov
lds
icebp
and
(bad)
je
sbb
cmp
aas
add
mov
and
leave
scas
push
pusha
imul
js
loopne
js
popf
xchg
xchg
(bad)
test
jp
xor
xchg
mov
(bad)
push
push
outs
mov
sar
movs
inc
cmp
arpl
icebp
push
mov
(bad)
inc
inc
jns
sub
inc
adc
aaa
in
add
xchg
movs
ja
mov
fistp
mov
push
out
addr16
sbb
dec
xchg
shl
hlt
data16
ret
mov
mov
pop
loope
dec
pop
test
adc
jg
popf
fidivr
sub
xchg
cmps
clc
and
push
add
test
xlat
dec
dec
ror
repnz
pop
movs
cmp
cmp
loop
adc
scas
jo
mov
(bad)
jno
inc
add
push
mov
sahf
stc
aaa
adc
inc
test
imul
push
stc
neg
cmp
cdq
and
sub
add
imul
arpl
xor
sbb
mov
cdq
fwait
sub
mov
out
mov
sub
repnz
fisubr
shr
loopne
pop
ins
xchg
data16
or
jg
inc
(bad)
inc
mov
out
ds
xor
addr16
fadd
(bad)
mov
fsubr
outs
test
xlat
jne
loope
(bad)
jmp
repnz
fist
stc
repnz
retf
les
inc
js
mov
mov
xor
pop
cli
inc
mov
out
jnp
dec
ret
nop
sbb
mov
inc
mov
dec
stos
mov
jmp
inc
into
scas
loop
add
xor
mov
int
fs
pop
fucomi
mov
inc
sub
inc
sub
jecxz
mov
mov
inc
mov
dec
cdq
mov
cld
outs
mov
pop
adc
push
inc
lods
and
pushf
ja
mov
nop
mov
mov
and
sub
shl
outs
xchg
and
stos
mov
cmc
clc
jbe
cmps
mov
and
xchg
cmc
sbb
fwait
movs
sti
int3
rcr
jmp
cli
xchg
fucomip
xor
call
push
ins
cmp
mov
sub
in
(bad)
xor
outs
push
xor
add
cwde
mov
sub
push
jecxz
push
out
adc
sar
retf
add
test
pop
mov
mov
xor
dec
add
(bad)
push
jl
in
dec
sbb
sub
jge
pushf
movs
ror
add
dec
xor
sar
cmp
inc
jmp
out
or
leave
push
jmp
jge
test
stos
mov
jnp
(bad)
mov
jmp
in
jl
push
xchg
mov
loop
jmp
cmp
add
jae
sbb
cmp
mov
test
and
test
xchg
std
pop
jb
call
lods
pop
add
sub
inc
int3
ret
xchg
bnd
sar
enter
adc
int
movs
ror
movs
es
cmp
popf
(bad)
dec
pop
int3
je
ret
retf
int3
push
cmp
mov
test
out
jg
dec
and
mov
imul
iret
and
lea
xor
mov
arpl
mov
addr16
or
stos
fcomp
out
je
(bad)
fsub
mov
mov
out
mov
and
outs
movs
fist
mov
ret
or
add
fdiv
jne
or
xor
jbe
lods
jl
out
ret
push
pusha
sar
xchg
add
push
xor
nop
ror
and
jbe
add
ss
mov
mov
jl
outs
(bad)
mov
pop
pop
jecxz
je
cmp
push
shl
jmp
sbb
inc
xor
or
les
xor
and
in
pop
xor
pushf
or
xchg
sub
sbb
loopne
imul
jbe
test
fldcw
retf
dec
pop
sahf
or
les
fistp
inc
out
push
daa
or
arpl
push
sahf
xor
fistp
loop
push
inc
mov
(bad)
in
test
cs
aad
nop
sub
push
in
adc
push
aam
xchg
push
inc
jecxz
sbb
dec
(bad)
cmp
or
cmp
inc
hlt
dec
stos
adc
pop
sbb
xchg
imul
inc
pop
cmp
cmc
cwde
push
scas
cmp
adc
movs
add
push
test
and
pop
les
cli
int3
out
xor
fs
inc
jmp
push
jbe
xor
ficom
dec
mov
lea
xor
add
fldcw
in
stc
xor
(bad)
inc
retf
inc
retf
cwde
fwait
push
pop
icebp
test
sbb
xlat
and
adc
mov
pushf
retf
popa
push
out
cs
sub
das
jo
cmps
aad
sar
repz
adc
ins
test
pop
popf
jbe
retf
push
lahf
sub
aaa
clc
lock
dec
imul
out
pusha
sub
(bad)
les
(bad)
aam
cmp
sti
call
push
ja
test
movs
mov
das
pop
lahf
shr
add
jp
loope
stos
add
sbb
and
xchg
pop
aaa
jno
cmc
push
mov
lds
les
int
adc
or
adc
mov
mov
rol
pushf
mov
sbb
jle
arpl
inc
lahf
jo
test
jbe
mov
(bad)
and
adc
add
test
fst
in
std
enter
and
(bad)
icebp
cmp
stos
stos
lods
es
retf
mov
retf
fisubr
mov
out
jae
cwde
and
cmps
not
jae
adc
or
mov
scas
sahf
mov
pop
add
xchg
xor
outs
adc
or
stos
retf
daa
push
cmps
ds
inc
(bad)
out
shl
rcr
mov
add
xor
fadd
shl
and
sbb
sbb
jle
inc
imul
push
pop
jnp
ficom
and
mov
pop
enter
add
(bad)
jae
daa
loope
out
dec
sar
call
iret
mov
adc
imul
push
inc
ror
xchg
inc
or
pop
push
pop
repz
fdiv
inc
adc
and
cmps
cmp
rol
dec
stc
mov
(bad)
cmp
mov
ret
add
pop
push
loopne
jmp
out
loopne
jg
fstp
lods
test
stos
addr16
jo
jne
jo
addr16
cmp
mov
ja
xor
dec
mov
call
dec
inc
jg
cwde
lock
dec
cmc
retf
push
xchg
stos
inc
pusha
mov
cdq
mov
cmp
fchs
xchg
sar
hlt
imul
sbb
fistp
mov
push
sti
cmp
adc
cmps
(bad)
cmp
jb
sbb
push
imul
les
sbb
lds
fimul
push
(bad)
mov
cmp
lods
mov
pop
mov
or
mov
push
sbb
(bad)
jmp
jle
es
mov
fs
clc
xchg
mov
dec
mov
inc
stc
push
sbb
hlt
fsubp
pop
imul
std
sub
and
pop
push
das
jne
jmp
mov
xor
mov
sahf
sbb
xchg
or
or
outs
bound
(bad)
mov
test
sti
fcomip
pop
aam
imul
stos
jp
fsub
pop
sbb
ret
xchg
ins
jecxz
push
scas
iret
dec
pop
xchg
push
sbb
lahf
sbb
int
and
push
push
push
and
push
or
vpaddusw
pop
ins
adc
jbe
and
jmp
data16
test
mov
jge
bound
push
cwde
and
mov
xchg
sbb
xchg
jp
xchg
aaa
shl
and
add
xlat
add
push
push
jnp
push
jl
cmps
cs
mov
mov
push
or
adc
cdq
frstor
mov
repnz
mov
loop
cmp
or
cmp
xor
stos
in
mov
fistp
fnstsw
out
mov
popa
out
xchg
jae
push
mov
add
nop
sub
jno
or
xor
or
inc
cmp
dec
cs
or
pop
mov
test
test
jge
jno
jno
inc
sti
int3
imul
mov
fwait
jg
cmp
jno
cdq
test
fisub
retf
adc
out
outs
sub
mov
ja
adc
cmp
es
jp
fsub
and
outs
fsubr
add
fldenv
ss
sub
sbb
mov
or
cdq
cli
cdq
mov
jmp
mov
cs
or
outs
push
jle
mov
push
rcr
mov
iret
data16
mov
(bad)
jmp
adc
push
mov
leave
(bad)
cli
xor
mov
imul
(bad)
jle
cmp
fwait
and
sub
hlt
push
jp
and
xchg
shl
cmp
pop
or
aad
cmp
scas
xchg
cmp
repnz
push
xchg
xchg
rcl
add
sar
lahf
cmp
mov
cs
fst
and
in
fs
sub
mov
adc
inc
ss
ret
jmp
xor
and
nop
ss
movs
jmp
jmp
jge
loope
stos
push
or
pop
cwde
lahf
daa
jno
or
lods
jmp
pop
pop
mov
ret
nop
shl
jge
(bad)
dec
repz
test
adc
shr
movs
stos
jo
ror
inc
retf
sar
push
push
int3
mov
in
sbb
scas
sub
js
movs
fs
in
mov
cmps
mov
push
(bad)
add
enter
out
scas
mov
jmp
loope
xor
fmul
(bad)
repnz
ds
movs
int
sub
(bad)
retf
and
into
mov
mov
mov
jmp
popa
les
call
and
add
inc
adc
mov
jmp
add
cmps
ret
(bad)
jns
popa
push
dec
ret
and
pop
jge
xchg
mov
hlt
retf
push
outs
xor
cmps
shr
mov
loop
cmc
gs
mov
addr16
repnz
jg
mov
push
adc
add
out
int
adc
movs
fbld
pop
sbb
lods
xor
mov
retf
sub
xor
cmc
scas
test
or
and
xchg
cmps
rcl
xchg
pop
ja
clc
fstp
arpl
imul
or
leave
loop
icebp
push
mov
ja
ja
cmp
pop
stos
std
sbb
sub
ins
movs
mov
inc
sbb
push
sub
mov
mov
cwde
pop
push
popa
jb
cmp
or
es
push
jle
adc
iret
in
arpl
cwde
or
lds
neg
loopne
dec
pushf
(bad)
test
dec
push
xor
jnp
dec
stos
push
std
inc
adc
nop
stos
sub
adc
pop
mov
stos
das
mov
mov
push
xchg
dec
mov
pop
sbb
pop
fadd
jmp
xchg
inc
sbb
and
adc
and
rol
out
jecxz
mov
(bad)
sti
in
mov
or
cwde
xchg
iret
ja
inc
stc
inc
cs
std
cmp
add
in
xchg
mov
inc
imul
rcl
adc
xor
bound
mov
inc
scas
xor
inc
jl
and
push
stos
cmp
inc
or
cmps
lds
xchg
loopne
lahf
jmp
dec
fcmovnbe
jg
outs
mov
xor
add
mov
stc
iret
imul
mov
lss
pop
adc
call
shl
out
add
cmps
fsubr
dec
push
repz
cdq
rcr
cdq
cli
stc
bound
mov
movs
cs
inc
int
jne
cdq
ins
fcmovbe
imul
dec
outs
xchg
mov
xchg
dec
inc
bound
adc
retf
fisub
das
and
or
or
fldcw
mov
popa
inc
xchg
scas
loop
cmc
sub
jno
mov
movs
mov
jb
mov
clc
cmp
sub
fwait
jge
push
imul
loop
(bad)
out
sbb
jns
jecxz
pop
inc
leave
gs
jecxz
xchg
mov
jg
ss
(bad)
call
sbb
repnz
(bad)
cmp
mov
fsubr
stos
add
fisubr
and
mov
xchg
movs
sahf
pop
adc
adc
addr16
ds
xchg
(bad)
xchg
mov
jae
xor
loopne
in
jmp
es
arpl
cdq
jb
shl
ss
ret
sbb
(bad)
xor
pop
fs
(bad)
sbb
xchg
sti
fist
pop
clc
sbb
(bad)
cld
and
sbb
sub
call
mov
leave
fisubr
aaa
rcr
into
imul
repnz
xchg
push
jnp
pop
movs
jp
cmp
dec
cmp
cmp
js
cdq
push
sahf
ret
inc
loop
adc
pop
adc
or
cli
mov
add
mov
sar
mov
push
sbb
and
mov
pop
and
adc
pop
cwde
sbb
pop
out
(bad)
pop
or
adc
xchg
call
out
rcr
sub
push
or
push
and
xchg
push
push
ret
clc
mov
fcom
movs
mov
lahf
fisttp
mov
cmp
dec
or
mov
cmp
sbb
and
rcr
not
adc
add
ret
xchg
and
push
add
mov
mov
add
movs
jo
or
add
adc
jecxz
sar
in
inc
leave
mov
loope
jl
mul
(bad)
jns
sbb
enter
pop
push
mov
pop
mov
(bad)
movs
xor
jno
jp
pushf
repz
add
ret
rep
outs
push
lahf
pushfw
inc
xor
pop
jnp
inc
push
cs
cwde
inc
cli
xchg
pop
dec
adc
pusha
fs
sbb
push
sub
call
push
aad
ret
sahf
jbe
out
stos
mov
sbb
fwait
push
pop
sahf
fucomip
cmp
push
jae
mov
cmp
push
xchg
neg
cmp
jl
call
push
inc
lods
in
ins
icebp
or
test
call
add
xlat
push
fwait
(bad)
mov
sbb
sub
push
and
mov
xlat
gs
mov
push
aam
or
adc
pusha
push
std
movs
stos
or
push
icebp
test
hlt
xor
dec
lods
adc
pop
lahf
push
sbb
mov
jp
ror
paddusw
push
jle
push
mov
adc
aas
adc
cmp
jbe
dec
mov
shl
sub
push
jne
rcl
iret
ret
cli
ja
pop
or
mov
out
push
das
pop
cmp
sub
es
arpl
clc
addr16
jne
inc
xor
(bad)
ficomp
inc
dec
into
(bad)
loope
jle
loopne
cmp
adc
les
(bad)
int
rcr
loop
movs
sbb
mov
les
je
ret
or
jp
add
je
(bad)
mov
stc
cli
push
adc
loope
cmc
jo
mov
ins
adc
push
mov
push
fs
xchg
sub
push
loopne
retf
sub
daa
lds
psubsw
int
dec
shr
nop
jge
test
dec
push
test
mov
pop
into
cmp
(bad)
fbstp
cs
mov
push
test
or
sbb
jns
shl
fiadd
mov
shl
jne
in
inc
cmp
bound
test
call
add
test
fmul
push
ret
xchg
shr
cmps
loop
push
jl
(bad)
sub
inc
lock
and
ins
fadd
test
jge
leave
push
(bad)
lea
pusha
mov
pop
out
pop
add
dec
fist
rol
xchg
mov
in
mov
jle
mov
test
shl
dec
mov
call
cmps
mov
fisttp
pop
sub
inc
dec
push
fild
mov
jp
lods
pop
xor
adc
xchg
xchg
fwait
pop
xchg
ret
add
sar
in
cmp
fcomp
pop
mov
add
dec
and
repz
or
call
out
inc
cmp
add
add
mov
aas
(bad)
gs
not
dec
in
cwde
ret
and
leave
pop
mov
loop
jne
outs
dec
mov
xor
cmps
cmp
jo
je
or
xor
scas
mov
(bad)
nop
into
bound
mov
jp
add
xchg
pop
dec
repnz
mov
(bad)
jo
push
jecxz
inc
xlat
lods
mov
cmp
shl
dec
cmp
push
cmc
mov
sbb
and
cmp
adc
jo
ins
xchg
lahf
sbb
movs
call
or
cli
and
add
fnstsw
in
bound
cwde
retf
mov
sub
and
mov
sbb
in
fst
lods
scas
mov
lds
aas
push
ret
xchg
push
aaa
pop
ins
pushf
mov
xchg
out
add
add
mov
mov
push
adc
or
xchg
repnz
cmp
sub
dec
addr16
je
test
sub
leave
mov
cmp
jge
or
xchg
jmp
imul
xor
test
scas
out
push
out
in
sub
outs
add
cmp
push
sbb
adc
xor
xor
outs
(bad)
mov
mov
aam
scas
popa
imul
mov
call
dec
mov
sub
mov
inc
int
pop
aaa
(bad)
push
jg
dec
cmc
cmp
iret
xchg
jp
sub
add
shl
iret
outs
jns
(bad)
in
in
mov
mov
shl
or
test
xor
aaa
adc
(bad)
ja
mov
pop
jo
arpl
pop
push
push
xchg
test
pop
outs
cmp
sbb
jmp
mov
push
repnz
cmc
push
(bad)
xchg
popa
iret
sub
aam
test
pop
push
jl
cld
mov
idiv
imul
push
scas
or
test
and
or
sti
xchg
add
adc
mul
mov
xchg
mov
add
mov
add
jo
fcom
popa
push
rcr
out
shl
cdq
jne
jmp
ret
and
retf
scas
jp
mov
push
bound
pop
jge
jo
clc
sbb
repnz
or
fs
or
loop
pop
sahf
popa
and
ins
jmp
sahf
sub
xlat
into
add
mov
push
inc
movs
sub
repz
movs
mov
fdivr
sbb
imul
jne
daa
cmp
ud0
out
add
inc
daa
jb
xlat
push
add
add
push
mov
arpl
xchg
jnp
arpl
inc
in
fadd
out
jmp
fcos
scas
aad
movs
out
iret
pop
push
sbb
pop
cdq
xlat
fistp
shr
js
jne
jns
pop
into
and
test
xchg
xchg
outs
out
scas
jae
ins
cmp
pop
jl
sbb
inc
(bad)
sub
rcr
scas
cmp
retf
dec
cmp
test
jns
in
pop
mov
push
push
(bad)
fdiv
mov
inc
shl
iret
fmul
les
add
mov
inc
pop
mov
aas
repnz
ret
jmp
repnz
push
mov
mov
and
das
xor
arpl
sub
xlat
pop
test
cwde
push
arpl
out
pushf
retf
adc
sub
cmc
jge
mov
inc
mov
(bad)
sbb
and
mov
push
fist
iret
pushf
push
in
push
fist
jne
pop
jae
int3
jmp
loopne
mov
hlt
add
icebp
dec
ds
push
sbb
clc
fwait
jb
cdq
ss
inc
push
fistp
add
clc
ret
stos
push
sub
or
iret
xchg
xchg
scas
test
lods
bound
jmp
cmp
sub
cmps
rcl
pop
xor
add
inc
ja
sbb
sar
rep
hlt
hlt
sbb
sub
fsub
xchg
nop
lds
pop
sub
pop
add
ret
call
ins
mov
int3
push
xlat
jbe
shl
inc
mov
xor
pop
pop
jae
push
mov
aad
or
ja
or
jnp
sahf
(bad)
jmp
data16
mov
mov
add
mov
fnsave
sub
lea
xchg
jge
jmp
sbb
out
test
jl
xor
pop
xchg
enter
fist
scas
jl
fiadd
hlt
lock
pop
mov
cmp
push
hlt
loope
cmps
cmp
loope
dec
(bad)
pop
push
das
je
retf
ret
in
and
jg
mov
pop
sbb
xchg
jnp
repnz
leave
push
imul
(bad)
cmp
repnz
ja
fnop
dec
gs
pop
ins
add
inc
mov
cld
dec
fisttp
xor
rcl
je
push
int
mov
mov
push
repnz
imul
outs
cwde
loopne
jb
clc
push
stos
dec
add
sub
inc
push
xchg
pop
jne
pop
scas
xor
pop
js
std
ins
(bad)
jmp
xchg
xor
xor
pushf
inc
pop
mov
and
sub
push
cmp
or
mov
pop
call
das
jno
sti
cli
sti
xor
dec
mov
xchg
jmp
(bad)
add
xchg
(bad)
sub
inc
cmp
nop
daa
ins
or
pop
xor
mov
mov
scas
jg
or
scas
ret
adc
dec
mov
into
adc
sub
cli
pop
and
jne
daa
ins
add
sub
push
mov
cmps
call
(bad)
mov
pushf
sbb
pushf
dec
mov
sti
xchg
loopne
or
jg
aad
push
sar
aaa
icebp
jmp
mov
dec
mov
push
mov
inc
inc
add
stos
jmp
out
ja
jp
mov
jmp
push
sub
push
cmps
in
repnz
jg
sbb
call
lods
shl
pop
xchg
mov
push
xchg
out
(bad)
mov
push
xchg
xchg
retf
imul
pop
mov
out
out
mov
add
sbb
jle
jg
(bad)
jge
and
mov
jp
cmp
test
or
test
lods
daa
outs
sbb
xor
fidiv
pusha
push
mov
pop
(bad)
xor
sub
xchg
pusha
rcr
cld
dec
mov
addr16
jns
mov
dec
mov
das
xchg
cmp
mov
fs
jno
push
and
pop
dec
in
mov
mov
mov
add
data16
nop
(bad)
fst
mov
cmp
fwait
inc
imul
sar
outs
or
stc
adc
xchg
aam
(bad)
push
fwait
icebp
dec
sub
xor
pop
int
js
inc
rcr
sbb
jl
xor
nop
dec
sbb
repnz
fucomp
xor
icebp
fst
clc
or
cmp
fcompp
and
inc
shr
adc
jg
mov
inc
ss
cmp
xchg
adc
and
jbe
sub
sbb
cmps
jno
dec
push
iret
cmps
adc
xor
xlat
xor
in
test
mov
jg
std
push
popf
movs
sahf
inc
ins
xor
lods
mov
jbe
and
mov
inc
lods
cwde
inc
dec
sar
movs
sbb
call
repnz
clc
and
popa
adc
mov
pop
push
dec
cmp
adc
xor
lahf
loop
mov
xor
dec
jbe
or
mov
nop
xor
cmp
cwde
in
add
and
jmp
call
out
mov
or
or
out
test
jb
mov
jle
call
adc
adc
lods
pop
pop
mov
inc
dec
xor
push
into
stos
cmps
sub
ds
and
loop
add
rol
jmp
dec
cmps
movs
or
xchg
pop
int3
mov
out
sbb
push
sub
sbb
jl
jmp
(bad)
push
pusha
cmp
addr16
shl
add
in
jl
fwait
test
loope
(bad)
pminsw
cmp
jle
inc
xor
lds
add
or
xchg
gs
stc
ins
cwde
std
xchg
dec
cmp
pop
(bad)
clc
inc
ins
iret
data16
shl
mov
sbb
mov
out
sbb
sub
adc
fidivr
stos
lds
mov
xchg
aam
cmp
and
mov
mov
in
jbe
out
test
push
mov
lds
pop
push
push
adc
imul
stos
test
rcl
iret
pop
mov
in
mov
sub
xchg
retf
in
outs
ficom
pop
stos
dec
mov
dec
popa
movs
inc
adc
bound
test
adc
pop
stos
nop
popa
shl
scas
lods
(bad)
cmp
mov
nop
nop
push
mov
mov
xor
cmp
loopne
mov
mov
inc
retf
jno
and
icebp
int
or
mov
cdq
enter
jmp
push
and
sbb
cmc
dec
jg
add
pause
pop
aas
imul
push
push
ins
icebp
jge
test
sbb
jmp
push
imul
cmp
mov
shr
xlat
aaa
call
std
in
dec
sbb
dec
in
mov
or
xchg
inc
(bad)
jmp
pop
outs
cmp
mov
add
das
adc
das
inc
mov
pop
jg
cmp
dec
das
xchg
(bad)
stos
mov
(bad)
push
out
mov
push
pop
fwait
or
push
stos
mov
fnstenv
hlt
test
add
push
push
cmc
shl
jecxz
js
xchg
sar
sub
imul
in
out
(bad)
movs
retf
adc
pushf
(bad)
push
mov
stc
popf
inc
lods
out
xchg
retf
fwait
(bad)
xchg
xchg
or
test
loopne
jg
dec
xchg
sbb
rcr
dec
(bad)
cmps
scas
dec
add
cmp
cdq
xchg
inc
out
nop
or
fsetpm(287
xor
add
imul
inc
out
(bad)
in
icebp
in
push
popf
jnp
jno
movs
sbb
mov
and
sbb
inc
int
cwde
adc
(bad)
ror
mov
sbb
shl
in
ds
jnp
mov
cmp
push
(bad)
cmp
(bad)
das
mov
pusha
or
mov
jp
or
ds
xlat
in
pop
gs
push
and
sbb
fld
jge
adc
xchg
ror
xor
jne
xor
jp
sbb
sub
fstp
popf
scas
pop
je
cmp
sub
mov
xor
cmps
clc
sbb
xchg
push
inc
sbb
push
test
cmp
jo
mov
adc
scas
cmp
cmc
nop
mov
pop
ins
and
retf
ret
mov
mov
enter
aas
test
inc
xchg
xchg
movs
out
cmp
inc
add
test
cmps
inc
mov
setns
int3
inc
inc
shl
(bad)
outs
(bad)
mov
bound
in
push
sub
pop
retf
in
or
push
scas
js
add
xchg
nop
or
or
cmc
retf
popf
out
clc
inc
cmp
loope
in
mov
stos
sbb
cmp
(bad)
mov
daa
movs
dec
mov
fnsave
es
arpl
xlat
out
mov
or
push
es
xor
xchg
ret
push
les
ret
into
xlat
pushf
inc
ds
adc
adc
xchg
call
xchg
stos
xor
or
push
and
icebp
or
mov
popa
sbb
dec
pop
pop
inc
div
or
push
lock
adc
test
(bad)
int3
cmp
jno
adc
sbb
aas
stc
push
mov
and
(bad)
cmps
cmps
bound
das
and
dec
fmul
lock
mov
push
push
or
sub
imul
(bad)
lahf
into
or
push
mov
pushf
pop
pusha
mov
mov
sbb
mov
out
mov
mov
test
sub
mov
sub
daa
stos
xchg
scas
or
imul
ror
shl
jg
mov
shr
daa
adc
push
hlt
pop
aad
popa
and
daa
cmp
data16
mov
lods
in
xchg
xchg
popf
dec
int3
mov
mov
lds
mov
ror
aaa
xchg
cld
popa
stc
jnp
and
les
push
or
movs
adc
xchg
dec
fimul
sbb
xchg
sbb
mov
mov
cld
cwde
pop
shl
fsubp
dec
jmp
mov
mov
ja
adc
leave
cmp
dec
cwde
test
aad
dec
mov
mov
stc
fcomp
mov
sbb
cmp
adc
inc
aam
popf
add
shl
push
cdq
sub
mov
cmp
int
sub
test
ror
scas
push
dec
jae
out
ffree
mov
loopne
jge
adc
cmp
loope
cmp
popf
and
retf
jmp
cdq
xchg
sbb
sahf
push
test
retf
inc
stc
outs
loop
adc
into
xor
ret
loopne
mov
jno
add
loope
scas
push
(bad)
bt
imul
sbb
cmp
inc
ret
push
mov
(bad)
push
es
retf
push
mov
or
and
mov
and
jmp
scas
outs
aad
jne
xor
int
jmp
jbe
cmp
mov
popf
test
lods
sti
and
lods
add
ret
retf
lods
idiv
dec
dec
lahf
xchg
sahf
arpl
sbb
imul
ds
test
sub
sbb
xor
aaa
cli
add
inc
bound
sbb
inc
rol
pop
ret
fcomp
mov
adc
push
fbstp
dec
adc
(bad)
rcpps
add
(bad)
xchg
jno
jmp
aad
out
xor
push
jp
std
jbe
mov
dec
cmp
fs
fisub
rcl
mov
enter
fistp
int
(bad)
push
mov
cmp
pop
leave
lods
pushf
outs
xchg
rol
mov
and
or
mov
or
pushf
mov
push
aad
sub
adc
mov
mov
icebp
push
add
sar
inc
scas
movs
sub
push
rcr
jns
cmp
mov
add
xchg
xor
ds
and
out
xor
call
cli
jge
sub
pop
xor
cmp
inc
stc
xor
pop
idiv
fistp
inc
cmp
stos
jb
jmp
ss
xchg
fnstcw
jne
adc
outs
add
dec
jns
pop
pop
add
inc
and
arpl
push
ja
jb
das
out
add
retf
fsub
stos
sub
popa
in
or
push
aaa
mov
les
int
out
xchg
xchg
fst
dec
leave
and
mov
add
sti
pop
push
out
aas
rcr
dec
setnp
repnz
inc
and
mov
xor
imul
mov
sub
mov
ins
shl
aad
lea
(bad)
scas
aam
or
sbb
sbb
(bad)
mov
sub
dec
sbb
movs
lods
ret
int
in
ds
loope
push
fisttp
mov
push
sub
push
lods
pop
scas
mov
push
and
and
pop
ffreep
jp
cmp
mov
xchg
gs
mov
inc
retf
adc
push
add
pushf
loopne
fistp
lods
ins
popf
mov
lods
push
sub
xor
out
pushf
sub
mov
pop
je
push
xlat
and
scas
in
stos
mov
fcmovb
sub
movs
or
hlt
inc
dec
jle
aaa
adc
push
or
push
mov
test
addr16
push
aaa
xchg
icebp
pop
jne
push
dec
push
add
arpl
adc
mov
xlat
adc
push
lea
xchg
cdq
sti
js
popf
jmp
dec
xor
(bad)
shr
pop
pushf
in
and
mov
lock
xchg
xor
test
scas
loopne
push
arpl
ret
not
call
mov
jnp
lds
js
out
inc
into
push
pop
shl
pop
push
push
inc
xchg
cld
enter
test
sbb
jne
aaa
imul
or
xchg
xchg
pop
xchg
imul
push
or
cmps
add
xchg
xchg
popf
ja
adc
mov
inc
or
pop
jmp
repnz
sub
push
adc
inc
jmp
pop
inc
add
popa
(bad)
in
jmp
pop
and
xor
adc
into
sar
sar
dec
das
jmp
loop
xor
stos
retf
xor
pop
out
sbb
fisttp
jb
mov
aad
mov
and
in
sub
xor
and
and
xor
inc
js
out
aam
loope
jnp
call
jp
xor
sub
push
ins
sbb
pusha
test
mov
sub
jo
xlat
push
or
sbb
mov
(bad)
xor
lds
inc
cdq
out
mov
call
inc
mov
adc
into
sub
das
ret
je
fadd
xchg
pop
pop
pop
das
sub
cdq
pop
movs
lahf
add
push
xor
push
stos
cld
and
sbb
(bad)
adc
lea
retf
leave
adc
ins
xchg
fnstsw
lods
outs
(bad)
xchg
lods
jmp
fld
push
push
movs
icebp
test
sbb
dec
cmp
cmp
pushf
es
scas
xchg
lds
pushf
pop
in
test
sbb
adc
cmp
cmps
inc
mov
jmp
sub
scas
(bad)
pushf
pop
shl
xor
cmps
mov
xor
adc
push
aas
push
mov
push
fwait
not
jecxz
push
idiv
shl
mov
adc
ds
adc
inc
jns
(bad)
mov
adc
hlt
dec
stc
icebp
push
add
or
sub
into
push
ins
stos
(bad)
outs
pop
xchg
enter
or
mov
mov
adc
push
cli
fwait
cmp
call
push
sbb
push
xor
and
aas
add
test
paddsb
pop
sub
repz
mov
push
and
inc
fld
rol
rcl
sub
jle
push
call
pop
and
fisttp
xor
arpl
enter
ins
and
rol
push
and
cs
out
mov
jb
and
sbb
dec
push
ds
cld
(bad)
jmp
mov
into
ror
jbe
sub
xchg
outs
sti
ret
add
inc
std
or
(bad)
pusha
add
mov
adc
cmp
xor
inc
lds
mov
mov
xor
outs
add
xchg
jg
push
retf
or
fwait
stos
sub
xchg
pop
add
pop
push
cmps
mov
pop
ins
(bad)
sbb
cmps
test
sub
fcom
mov
mov
cmp
and
retf
xchg
les
test
repz
inc
cmp
mov
mov
(bad)
test
fiadd
xchg
inc
mov
sahf
or
add
cdq
(bad)
adc
mov
pop
jp
mov
jo
in
add
retf
pop
stos
ins
push
outs
inc
ds
jns
mov
mov
lds
jge
rcl
jmp
out
jo
mov
sub
fiadd
pop
mov
cli
push
out
xchg
mov
in
fdivr
lock
jmp
push
push
mov
js
and
pop
cmps
int
mov
mov
add
(bad)
iret
lds
nop
jne
imul
xor
dec
mov
mov
mov
mov
jg
add
movs
outs
popf
gs
(bad)
sub
out
mov
jecxz
hlt
mov
out
cld
dec
mov
std
pop
fisttp
lock
xor
dec
sbb
sub
test
aaa
fcomp
int3
and
jp
push
aaa
jmp
(bad)
lahf
jg
pop
test
imul
jno
push
stc
xor
push
mov
push
hlt
or
aas
adc
jl
mov
or
stos
push
mov
pop
jmp
and
add
cmp
and
jg
dec
mov
inc
test
aaa
test
xor
adc
push
les
jb
or
movs
les
cmps
or
ins
xchg
adc
dec
and
pop
sar
jae
stos
shl
push
stc
adc
push
rcr
push
lock
lahf
outs
pop
push
xor
mov
add
xchg
sbb
retf
in
inc
push
or
cmp
popa
js
xor
(bad)
rcl
inc
jb
jno
stc
sub
mov
in
cmc
paddusw
adc
pusha
pop
lods
cmp
mov
mov
jno
jmp
add
scas
(bad)
out
xchg
cmp
mov
xchg
ss
pop
jbe
lds
fist
sti
push
int3
cs
sbb
jg
cmp
adc
fdiv
mov
jae
xor
or
frstor
push
enter
out
jne
std
out
mov
push
int3
pop
hlt
dec
push
pop
in
adc
es
push
inc
test
push
lock
ret
inc
cmp
mov
xchg
xchg
fld
mov
mov
aas
ficom
imul
pop
leave
out
fs
(bad)
js
add
gs
sti
pop
ds
shl
mov
(bad)
scas
add
sbb
ret
pusha
adc
inc
rcl
xor
fbld
das
call
mov
mov
push
pop
inc
jg
jg
mov
push
cmp
pop
jns
push
dec
(bad)
adc
jb
daa
pop
ss
out
in
adc
ins
mov
dec
into
pusha
cmp
mov
sahf
xlat
mov
push
jmp
gs
out
xchg
xor
pop
bound
(bad)
pop
xor
outs
shr
sub
not
mov
inc
repnz
mov
nop
loope
mov
push
call
in
in
cmp
adc
mov
(bad)
lock
leave
adc
shr
retf
shr
test
mov
push
fldenv
mov
loop
and
push
xor
inc
cld
jb
cmp
aam
add
fdivp
sub
fmul
pop
ds
mov
mov
das
and
xor
pusha
xchg
push
shl
aaa
in
and
add
icebp
jae
mov
mov
imul
in
cwde
add
jge
adc
imul
jmp
std
aas
sbb
jp
jle
retf
test
dec
rcl
add
push
xchg
clc
push
and
xor
mov
cmp
xchg
jmp
(bad)
loope
mov
cmp
adc
or
sti
adc
out
jmp
push
mov
fmul
ret
outs
or
sub
rcl
cmp
mov
aas
xor
push
sub
mov
hlt
cmp
js
sub
push
mov
rcl
pop
pop
fld
popa
mov
and
fcom
(bad)
sub
add
pop
lods
ss
add
adc
adc
jnp
bound
adc
inc
sbb
in
out
mov
mov
mov
scas
mov
cmps
fst
shr
jns
jp
stos
repz
movs
repz
shr
and
mov
jecxz
fbstp
add
cs
outs
arpl
inc
out
jge
out
mov
sub
lahf
jmp
push
jle
ds
jno
pop
mov
test
xor
lds
xor
call
adc
mov
adc
xor
mov
pop
stc
loope
loope
push
nop
fcmovu
jmp
or
add
ret
pop
fidivr
mov
lahf
(bad)
(bad)
gs
arpl
stos
sub
pop
ins
sbb
call
daa
mov
cli
pop
fldcw
fisub
les
dec
movs
and
shl
int
scas
inc
aas
mov
loope
adc
movs
jmp
cli
in
cmp
ffreep
sub
xchg
cmps
loop
mov
dec
mov
cmc
jnp
pop
cmp
icebp
in
jb
sub
xchg
cmp
loope
pushf
fadd
sbb
cmp
leave
in
dec
xchg
mov
mov
mov
xor
das
inc
int
shl
jecxz
clc
sub
sahf
mov
test
repnz
lods
or
push
xchg
adc
hlt
mov
jno
imul
mov
rol
mov
sub
pop
outs
test
fiadd
xor
dec
shl
xor
outs
and
and
ror
jecxz
fs
mov
jle
icebp
fidiv
or
cmc
ja
in
mov
test
mov
imul
jmp
call
jnp
call
adc
inc
or
test
out
cmc
add
xor
and
mov
fsubr
xchg
sub
repnz
outs
(bad)
lods
loop
sub
fnstsw
aam
mov
ins
in
jecxz
std
fld
clc
sbb
fucomp
pop
or
xchg
push
inc
nop
dec
lahf
add
jmp
clc
hlt
sbb
sub
es
xchg
mov
adc
jb
cmp
jmp
in
pushf
pop
mov
mov
fst
fist
adc
leave
stc
mov
lea
pop
fadd
push
jno
cwde
pop
jg
xor
and
cmps
xchg
out
clc
jl
cld
pop
sbb
lahf
daa
or
jne
mov
cmp
in
dec
data16
sbb
mov
inc
inc
not
js
in
imul
test
lahf
fld
pop
sahf
call
mov
pop
pop
imul
fistp
in
mov
add
jmp
scas
pop
and
push
daa
push
xchg
aad
fistp
fucom
and
das
inc
call
pop
popa
dec
mov
jp
push
mov
aam
test
call
int
aas
pop
add
add
sbb
adc
inc
sbb
stos
xchg
es
xor
push
lods
jae
and
call
(bad)
adc
mov
jmp
cli
sub
mov
cmps
cwde
sbb
out
jae
sar
or
cmc
daa
aas
jno
push
(bad)
fsub
cmps
pop
mov
es
enter
mov
jmp
aad
mov
aas
add
aas
inc
xchg
cmp
or
mov
push
mov
cmps
dec
inc
mov
fwait
mov
mov
test
stos
mov
xor
or
xchg
jb
std
call
xor
xor
ins
jecxz
mov
push
in
push
adc
jae
sbb
inc
iret
xchg
mov
pop
ret
pop
and
adc
jns
cli
emms
adc
pop
dec
mov
std
mov
lahf
out
loopne
out
cmp
jns
mov
or
das
fmul
pop
in
cmp
repnz
cld
call
mov
frstor
icebp
mov
sbb
rol
add
sub
mov
inc
gs
add
lock
mov
adc
jo
mov
sub
mov
dec
and
in
fsubr
jns
fs
scas
xor
cmc
ja
call
add
xor
sub
and
lods
mov
jecxz
ret
push
arpl
pop
loope
jbe
push
stc
jns
(bad)
imul
aas
dec
adc
ror
jge
(bad)
(bad)
clc
in
xor
xor
dec
out
sub
into
mov
inc
das
out
add
or
cli
in
sub
cwde
pop
xchg
aas
outs
ret
mov
inc
inc
arpl
in
test
jne
jne
cmp
pop
mov
push
mov
dec
rcl
mov
mov
jns
pusha
xchg
adc
(bad)
leave
imul
mov
ror
rcr
clc
movs
jo
pop
or
cmps
add
sahf
aam
dec
xchg
dec
test
leave
in
mov
test
aad
out
(bad)
xor
mov
mov
scas
xchg
(bad)
ins
dec
mov
push
sbb
in
test
call
sahf
sbb
addr16
xchg
in
int3
call
mov
frstor
mov
xchg
push
cli
mov
push
(bad)
sbb
cmps
mov
add
mov
and
xchg
adc
xor
repnz
push
rcl
jne
int3
xchg
and
push
sbb
mov
into
lock
or
or
ds
jmp
mov
stos
(bad)
jl
repnz
mov
push
mov
xor
(bad)
xchg
mov
pop
and
lds
int3
xchg
loop
scas
test
and
or
cli
mov
stc
lock
repz
sbb
ficom
xor
std
lock
scas
in
fdivr
cmp
xchg
icebp
sub
dec
ret
cmp
nop
test
pop
clc
dec
mov
sub
pop
mov
int3
adc
scas
mov
ret
pop
pop
inc
push
or
rcr
push
and
mov
push
sbb
inc
sbb
cld
mov
pushf
xchg
jno
xor
ror
enter
jmp
or
lea
test
dec
inc
xchg
cmp
rcr
push
mov
xchg
jl
push
repnz
sbb
sbb
inc
scas
test
lock
movs
mov
mov
xchg
test
pop
xchg
in
dec
stos
cld
pop
inc
jmp
repnz
sbb
pop
mov
xchg
test
(bad)
adc
popa
mul
pop
inc
ins
mov
sti
push
les
fcomip
xchg
scas
cmp
movs
cmp
movs
inc
popf
adc
mov
jp
out
ror
or
sub
and
aas
cli
mov
pop
jnp
fdivr
ins
sub
xchg
nop
icebp
(bad)
xor
popf
xor
add
cmp
inc
pop
dec
sub
or
retf
cmps
aas
in
fs
add
imul
xor
push
mov
sbb
(bad)
pop
adc
sti
inc
mov
sbb
test
push
adc
mov
int3
rcl
push
jns
push
(bad)
aaa
iret
mov
xchg
shl
adc
xlat
sub
add
fst
in
xchg
dec
ja
in
add
movs
mov
cmp
xchg
ins
test
adc
xor
mov
lea
leave
popf
jne
mov
(bad)
mov
and
inc
popf
(bad)
jnp
cs
mov
gs
in
and
sbb
(bad)
(bad)
hlt
lds
and
cmp
pop
inc
dec
(bad)
jae
pmulhuw
nop
push
and
sar
sub
retf
mov
out
sub
lds
cld
aas
ret
push
sbb
push
ja
inc
cmp
xor
cmps
xchg
aaa
loopne
jnp
int
fisub
push
inc
push
sub
call
shr
into
js
push
sbb
cmps
js
jb
inc
cmp
inc
test
sar
inc
mov
imul
pop
outs
push
sar
push
rol
sar
ins
adc
(bad)
daa
add
stos
ins
shl
test
sti
xlat
adc
cdq
jle
fstp
mov
btc
call
ja
aam
inc
fldcw
xchg
sbb
popf
jmp
call
pop
mov
or
jg
dec
cld
inc
aad
lea
mov
stc
(bad)
mov
mov
in
out
inc
mov
jbe
loope
(bad)
call
cmp
stos
add
adc
add
jmp
sbb
aaa
and
leave
jb
and
icebp
mov
cld
int
mov
adc
inc
in
(bad)
and
in
mov
out
and
shl
lahf
pop
push
xchg
(bad)
mov
pop
mov
nop
call
and
cmps
xchg
xor
jne
mov
push
mov
dec
adc
mov
nop
and
add
lock
mul
and
mov
add
leave
(bad)
jmp
call
int3
push
xchg
dec
(bad)
cli
lods
push
mov
dec
test
outs
shl
mov
cs
mov
lahf
sub
jmp
leave
push
jns
retf
jbe
aas
mov
add
ja
dec
jmp
fbld
dec
jecxz
bound
xor
es
mov
dec
stos
lock
lahf
add
(bad)
jnp
jmp
xor
clc
pop
cli
mov
xchg
cmps
pop
ficomp
or
push
push
cmp
or
je
push
mov
jns
sbb
lahf
loop
popf
push
(bad)
cld
mov
clc
addr16
sub
and
adc
inc
cmc
cdq
xor
sahf
fst
mov
cmp
sbb
in
mov
add
out
ret
mov
or
xchg
pop
call
sti
aad
inc
cwde
aaa
adc
xchg
adc
fbld
sub
cld
push
pop
daa
xchg
aas
pop
pop
cmp
or
xor
loop
retf
xor
cmps
fist
jns
loope
sbb
push
xchg
sub
arpl
(bad)
push
cmp
popf
or
add
add
sub
in
push
out
shr
jp
mov
ror
sbb
in
es
cli
sub
fsubr
mov
adc
arpl
sti
pop
sti
cld
(bad)
not
mov
fimul
mov
xchg
ret
push
xor
(bad)
js
push
xor
xchg
and
test
and
shl
repnz
pop
jle
pop
mov
je
(bad)
sbb
and
movs
cli
and
inc
dec
scas
xor
stos
mov
stc
mov
ss
add
ins
cs
scas
xchg
shr
std
fild
retf
sbb
movs
sub
push
test
and
lds
std
cmp
test
icebp
push
push
lods
and
clc
mov
out
jl
xor
adc
ret
mov
repnz
ret
(bad)
call
cmps
inc
loope
adc
loopne
outs
jmp
push
inc
jp
sub
js
and
fisubr
xor
add
pop
inc
cmc
dec
lds
js
aas
(bad)
jbe
cmp
pop
dec
or
je
pop
cmps
inc
xor
aaa
inc
jmp
fst
jmp
mov
push
jg
ds
aad
fild
gs
ins
xchg
cmps
outs
push
cmp
clc
inc
clc
pop
mov
inc
or
push
in
push
push
stos
out
jp
jmp
not
adc
jg
and
adc
adc
aad
xor
push
jns
mov
and
add
push
int3
xor
and
int3
xlat
lock
jmp
pop
or
stos
sbb
sbb
fisttp
dec
fs
ret
movs
push
jno
dec
retf
into
inc
mov
sbb
je
jge
inc
aaa
(bad)
fbld
jns
sbb
in
push
stos
shl
cld
jae
or
mov
pop
jae
outs
addr16
imul
add
pop
jmp
mov
(bad)
mov
mov
mov
bound
inc
stos
mov
call
lea
pop
shr
icebp
jmp
mov
pop
jo
pop
mov
test
inc
xor
nop
xchg
cmps
test
mov
push
aaa
pop
dec
jecxz
xchg
xor
(bad)
and
movs
jo
mov
push
aad
adc
dec
fistp
call
xchg
xor
push
ja
into
sti
cmps
or
in
aad
push
hlt
xchg
call
xor
(bad)
movs
mov
dec
xchg
inc
sub
(bad)
or
or
dec
ds
mov
push
jb
cs
out
(bad)
shl
popf
sub
imul
retf
xor
xor
add
push
xchg
sub
mov
lds
dec
add
scas
in
in
dec
sar
mov
jb
mov
push
cmpxchg
in
cmp
dec
jb
jge
push
inc
sbb
(bad)
dec
mov
call
add
shr
inc
push
fdivr
or
shl
add
cmp
mov
adc
hlt
iret
cmp
call
xchg
mov
xor
mov
adc
popf
push
mov
fld
mov
pop
mov
mov
inc
call
shl
sub
or
arpl
das
cdq
mov
ror
mov
neg
iret
adc
sbb
repnz
sbb
push
sar
push
dec
call
(bad)
mov
xchg
pop
adc
test
inc
push
jmp
jecxz
add
ret
jge
pusha
cmp
pslld
ficom
loop
cmps
push
mov
jno
cmp
xor
pop
pop
in
push
pop
dec
fbstp
inc
mov
shl
int3
rcl
push
add
retf
call
lods
scas
mov
dec
data16
inc
(bad)
mov
jne
in
inc
out
scas
and
xchg
sub
push
push
jl
test
mov
mov
fst
cmp
mov
stc
lock
inc
dec
js
sbb
rdpmc
and
arpl
cmps
dec
fbld
hlt
loopne
push
dec
mov
shl
pop
or
pop
jmp
mov
enter
and
les
ins
gs
sar
or
js
xchg
jmp
add
cmp
retf
cs
dec
sbb
adc
sbb
(bad)
ins
push
jmp
dec
dec
(bad)
jmp
iret
xor
pop
sbb
mov
call
push
pop
fwait
ins
loop
aas
mov
lahf
sbb
sub
aam
mov
in
inc
data16
push
leave
mov
pop
and
(bad)
jmp
out
add
mov
not
out
js
xchg
mov
add
loop
repz
cmp
loope
or
pop
movs
sbb
outs
sbb
scas
div
pop
xor
stc
neg
outs
aad
add
xor
mov
movs
mov
cmp
mov
sub
xor
out
test
jp
push
inc
das
outs
sbb
push
sti
test
push
sub
lock
mov
retf
push
jnp
pop
pop
jl
imul
out
add
and
mov
adc
inc
sahf
into
adc
loopne
jo
(bad)
fdivr
stos
dec
mul
in
in
jmp
stos
mov
mov
(bad)
leave
mov
inc
es
lock
aam
xor
mov
mov
inc
or
movs
mov
xchg
retf
ins
mov
jbe
jmp
mov
mov
out
sub
push
out
fisttp
adc
iret
xchg
lea
das
cli
pop
adc
mov
xchg
inc
(bad)
sti
(bad)
loop
(bad)
sub
ins
or
(bad)
stos
int
pop
mov
lds
push
and
loope
scas
xor
push
sub
sbb
leave
int3
scas
cmc
dec
imul
pop
(bad)
dec
jmp
jo
movs
adc
inc
xchg
mov
aas
(bad)
cmc
xor
cwde
shl
adc
movs
lods
or
arpl
pop
cdq
add
lds
jo
pusha
daa
adc
jg
aam
push
(bad)
mov
in
mov
mov
das
(bad)
(bad)
sbb
mov
mov
mov
fsubr
out
lods
add
push
into
jns
cmp
push
imul
mov
push
stos
cmc
fs
stos
ret
jmp
sbb
popf
mov
jge
je
sub
(bad)
fstp
lahf
jp
mov
cmps
mov
xchg
leave
pop
mov
xor
sbb
ins
adc
dec
mov
push
pushf
retf
into
lds
push
mov
jmp
adc
mov
(bad)
les
inc
cmc
popf
mov
and
bound
and
sbb
pop
adc
and
inc
pop
fiadd
aaa
pop
out
in
test
movs
adc
cld
mov
std
xor
ficomp
mov
jmp
mov
and
mov
inc
jmp
fldcw
add
inc
push
and
out
xchg
out
repnz
and
(bad)
jg
add
fwait
mov
adc
sub
xchg
les
pop
pop
sahf
xor
leave
jne
(bad)
daa
stc
mov
stos
out
(bad)
mov
lahf
pop
dec
(bad)
jb
add
jle
lods
jmp
cmp
aad
cmp
sbb
xor
out
dec
pusha
xor
jb
mov
push
sbb
and
int3
lods
aad
cmp
cmc
add
icebp
or
mov
xchg
shr
push
retf
sbb
xchg
pop
test
xchg
ins
sbb
inc
sbb
ret
rol
mov
pop
and
and
sbb
pop
sbb
in
pusha
pop
mov
sbb
repnz
xor
xchg
in
jae
std
jb
pop
scas
out
push
ja
xchg
ficom
cld
and
mov
jmp
mov
test
inc
icebp
pushf
pop
pop
cmps
sahf
out
retf
fs
jecxz
or
mov
out
imul
push
(bad)
adc
mov
xor
jge
inc
mov
and
pop
das
ss
test
jno
mov
push
es
bnd
(bad)
imul
xor
cmp
test
xor
push
int3
xchg
out
rol
test
sub
imul
or
sahf
push
shl
adc
push
rcr
inc
pop
xchg
dec
pop
pop
jb
(bad)
aam
jl
and
sbb
stos
dec
xchg
cmp
sbb
pop
mov
cs
and
mov
nop
iret
test
movs
fisttp
out
mov
lods
imul
nop
pop
pop
(bad)
jmp
mov
out
imul
dec
enter
lds
out
sub
aad
mov
sbb
sahf
xchg
pusha
jge
inc
jmp
fidiv
cmp
jns
inc
sub
fadd
and
cmps
adc
sub
(bad)
mov
inc
mov
xor
xchg
cmps
cmp
repnz
add
sub
xchg
mov
dec
ficom
mov
xchg
jo
and
mov
int3
cld
outs
cli
ret
sub
sbb
cmps
les
fwait
gs
mov
inc
push
jle
das
mov
inc
push
ret
shl
push
cld
sub
or
xchg
adc
in
and
popa
sbb
mov
lock
imul
add
jle
rol
cli
ss
in
sbb
jle
mov
push
pop
cmp
jmp
enter
test
sar
xor
dec
sahf
ss
cmc
iret
dec
fst
outs
sbb
imul
fisub
jge
nop
sbb
dec
push
mov
dec
ficomp
adc
leave
xor
jnp
out
das
mov
cwde
dec
pop
data16
xchg
scas
push
mov
cmp
test
dec
jp
push
fwait
inc
mov
mov
sub
and
lock
jmp
movs
add
mov
js
vpminsb
clc
sub
pusha
pop
mov
loop
stos
dec
outs
es
mov
jecxz
fdivp
cli
(bad)
cmp
std
jle
shr
retf
xchg
mov
xor
push
cdq
add
cmp
mov
aam
ins
dec
jno
ror
dec
add
xchg
jle
out
sbb
aad
shl
cmp
pop
push
in
pop
into
xor
out
jg
push
int3
test
lods
jnp
loopne
mov
imul
outs
and
adc
jge
mov
jno
arpl
and
add
mov
cmp
test
adc
shr
jge
push
and
jp
jmp
xchg
push
or
mul
pushf
cmps
or
and
mov
and
cmp
sbb
mov
cmp
mov
bound
inc
addr16
nop
scas
push
pop
inc
test
add
repnz
inc
and
mov
inc
pop
out
mov
pusha
test
xor
pop
cmp
hlt
mov
in
repz
inc
bound
rcr
int3
test
push
loope
inc
sbb
rol
pushf
add
js
push
clc
dec
pushf
ret
pushf
leave
push
cwde
bswap
and
jecxz
scas
dec
inc
add
jnp
dec
imul
jp
popf
mov
cmp
xchg
or
mov
mov
lahf
ficomp
add
retf
in
and
retf
fidivr
fist
jb
push
pop
inc
xchg
repz
in
(bad)
dec
aad
ds
xor
push
sbb
xor
lock
out
xchg
(bad)
lods
pop
or
outs
repnz
ds
mov
jmp
test
imul
mov
push
mul
ins
scas
sbb
jge
adc
cmp
movs
lods
xchg
shl
sbb
dec
mov
sbb
dec
ja
inc
dec
sub
sbb
add
jmp
or
add
fs
mov
mov
cmp
fstp
sbb
inc
out
stos
push
xchg
lea
out
and
imul
xor
(bad)
daa
fs
push
adc
mov
imul
mov
mov
mov
cmc
or
push
(bad)
push
mov
push
out
pusha
mov
mov
cmp
xchg
mov
xchg
and
int3
inc
mov
outs
sub
pop
add
repnz
mov
aaa
dec
mov
mov
inc
push
fwait
push
jmp
pushf
addr16
sahf
push
stos
mov
(bad)
fnstcw
push
add
aad
dec
int3
imul
mov
lahf
lods
jecxz
cmp
sbb
pop
jo
ret
or
dec
je
jg
pop
clc
call
sar
or
ins
retf
fst
cmp
out
ds
mov
mov
sar
outs
mov
(bad)
(bad)
mov
popw
push
add
jl
sub
xor
pop
test
hlt
jge
mov
xchg
xchg
pop
rcl
cdq
addr16
mov
inc
out
retf
shr
sbb
jecxz
cmps
pop
xchg
push
add
xor
add
sub
imul
fimul
clc
push
lahf
int3
xor
mov
push
out
jle
aad
je
dec
pop
push
and
repz
xor
cld
pop
pop
popa
xor
das
push
push
jmp
mov
inc
sahf
mov
enter
dec
jecxz
fcom
lds
mov
(bad)
mov
test
fisttp
sbb
jo
gs
jnp
sbb
push
stc
pusha
and
shr
sbb
mov
ins
sahf
lock
aas
pusha
or
or
popf
mov
pop
adc
pop
jmp
xor
dec
sub
out
pop
loop
sub
scas
push
xor
push
inc
ret
mov
shl
sahf
ror
pop
test
fsubr
(bad)
push
cwde
push
jge
xor
jo
mov
into
mov
jp
ins
dec
mov
cmp
outs
jecxz
xor
inc
xchg
mov
dec
pop
lock
nop
sub
test
fxam
sbb
into
jmp
jnp
xor
test
(bad)
pop
mov
pop
jo
cdq
into
ins
movs
xor
call
xchg
adc
and
stos
mov
js
cld
ss
xchg
cmp
cmp
mov
popa
sub
and
fnsave
jno
jmp
mov
adc
call
in
cmp
data16
inc
push
stc
mov
sbb
jns
jb
mov
xor
mov
inc
xchg
push
out
and
(bad)
jmp
aam
fstp
mov
cmc
add
std
aaa
and
cmp
loope
aam
mov
push
out
sbb
fld
add
addr16
in
mov
cmp
leave
jmp
add
test
sub
xchg
fdiv
outs
outs
pop
test
sub
hlt
xchg
enter
jmp
imul
jmp
test
sub
push
pop
movs
js
xor
fld
test
add
mov
inc
js
mov
xchg
sub
and
push
push
and
pushf
mov
aaa
and
dec
imul
inc
inc
(bad)
cwde
stos
mov
pop
sbb
jle
lods
and
in
js
gs
pushf
das
in
dec
pop
mov
repnz
push
test
mov
mov
out
and
ins
cmp
and
or
dec
mov
test
in
jo
rcl
sbb
popa
mov
cs
lea
lock
aas
jge
xchg
stos
pop
xor
stc
mov
sub
and
jo
leave
mov
mov
fisub
mov
mov
aam
xor
call
xchg
push
std
not
cmp
inc
out
(bad)
jmp
test
and
mov
inc
lock
aaa
sahf
inc
xchg
add
jo
mov
sub
push
int
mov
enter
cmp
test
stos
fisttp
retf
outs
test
add
cmc
xor
stc
xor
sbb
fs
jne
call
int3
ja
sub
mov
std
sub
loope
and
in
mov
pop
(bad)
rcl
push
adc
sub
pop
aaa
popf
pushf
adc
jp
call
inc
mov
cmps
jmp
pushf
mov
and
fadd
mov
mov
pop
ins
push
mov
push
call
retf
jg
push
lods
fcmovb
mov
idiv
push
mov
hlt
jns
cmp
movs
push
test
pushf
fcom
fcom
jge
stos
add
fdivr
loop
call
and
sbb
fmulp
push
(bad)
xchg
fisttp
fwait
mov
or
test
outs
cwde
push
xchg
shl
mul
dec
scas
xor
and
dec
sar
cdq
or
inc
jmp
arpl
cmc
xor
jno
pop
and
dec
out
(bad)
mov
xchg
ins
cmp
into
inc
adc
and
cmp
dec
out
dec
cdq
pushf
pusha
test
or
gs
push
dec
push
pop
xchg
and
push
rcr
pop
inc
pop
sysenter
nop
cdq
mov
or
repz
cmp
movs
std
cdq
or
sti
fidiv
inc
pop
dec
inc
int
rcr
jne
add
cmps
outs
cdq
xchg
seta
or
(bad)
xor
test
jns
ins
cmps
mov
fdiv
stos
movs
shl
lods
cmp
(bad)
mov
cmp
adc
mov
adc
imul
xor
mov
fwait
xor
dec
stc
pop
sahf
pop
sar
out
icebp
xchg
add
scas
xlat
std
mov
shl
pop
push
cmp
jno
add
jbe
mov
mov
test
ret
in
in
dec
pop
pop
mov
ja
xor
scas
shr
cmps
sub
jmp
and
fist
jle
fcom
addr16
sbb
jge
ds
cs
sar
retf
push
bnd
cmp
outs
sar
repz
sbb
data16
xchg
cmp
xor
mov
pop
cmp
cmps
lahf
pop
xchg
xchg
push
out
xor
sub
inc
out
mov
loop
clc
pushf
or
jns
scas
add
xchg
xor
dec
mov
and
(bad)
(bad)
jp
or
pusha
xchg
in
test
sbb
adc
lea
dec
arpl
xchg
and
cwde
xlat
mov
outs
lods
jno
addr16
dec
das
aad
mov
inc
cmps
aaa
clc
aaa
xchg
adc
outs
cld
js
lea
push
repz
arpl
dec
pop
(bad)
out
int3
hlt
pop
add
pop
popa
mov
cmp
jno
stos
mov
je
dec
jno
add
jle
push
mov
cmc
inc
mov
mov
sub
inc
and
or
test
sar
jmp
xor
outs
rol
mov
ret
das
jecxz
dec
loop
mov
shl
mov
jbe
dec
repz
fwait
sbb
mov
arpl
lods
shl
and
jl
cmp
jp
fstp
out
in
out
or
sahf
jg
xor
or
imul
mov
fadd
jle
push
push
push
mov
cmovno
in
mov
test
mov
dec
xchg
mov
xor
pop
fmul
or
jb
xchg
pop
mov
mov
and
sar
xchg
inc
test
adc
push
fadd
dec
inc
inc
cmps
into
loope
push
jae
sub
fs
stc
mov
push
lea
cmp
cmc
xchg
sub
lea
fdivrp
lock
mov
fwait
xor
pusha
(bad)
jmp
pop
outs
dec
jb
mov
cs
add
sbb
mov
fst
rcr
cwde
push
aas
jecxz
div
pop
mov
std
retf
rol
cmp
or
test
retf
fsub
add
int
repnz
xchg
cmp
aam
data16
push
inc
mov
add
xor
mov
(bad)
mov
std
pop
cmp
push
push
xor
sar
mov
mov
mov
mov
or
ret
jg
int3
cmp
leave
call
cmp
daa
je
not
cwde
cmp
and
out
cmp
retf
mov
test
cmp
push
inc
iret
call
adc
fs
sub
(bad)
adc
repnz
adc
or
add
(bad)
fcomp
outs
push
js
cmp
popa
inc
dec
(bad)
inc
inc
prefetch
xor
lea
or
and
dec
jle
dec
or
call
push
pop
out
or
test
(bad)
add
mov
lods
repz
mov
imul
repz
cmps
je
or
push
popf
loope
or
mov
pop
in
scas
inc
cli
in
shl
fdivr
xchg
mov
pop
ret
out
pop
jle
pop
test
and
mov
or
xchg
xlat
dec
iret
das
(bad)
xor
jle
pop
pop
stos
pop
sub
dec
nop
mov
xor
mov
push
out
mov
enter
rcl
jecxz
gs
je
add
arpl
dec
mov
add
cmp
cmp
jmp
jg
sub
(bad)
mov
jle
sub
nop
les
mov
add
add
mov
nop
test
(bad)
arpl
sub
dec
mov
inc
dec
or
mov
sti
movs
push
sbb
bound
mov
call
mov
cwde
inc
add
xchg
mov
inc
xor
xor
shr
push
call
xor
(bad)
xchg
inc
lods
sub
pusha
sbb
xchg
cli
gs
or
xchg
sbb
xchg
pushf
mov
inc
pop
mov
hlt
inc
jmp
and
iret
scas
scas
and
cmps
push
xor
mov
dec
sbb
jl
mov
dec
mov
xchg
pop
lds
pop
jp
outs
and
dec
jns
daa
arpl
xchg
dec
dec
fdiv
push
cmp
mov
sub
iret
mov
ins
ret
cmps
mov
sti
dec
xchg
jbe
retf
rcr
jmp
adc
daa
in
sbb
mov
dec
mov
inc
xor
xchg
xor
popf
int3
mov
sub
add
enter
push
movs
jge
loop
fst
mov
les
fiadd
iret
sbb
pop
sbb
inc
addr16
into
ins
out
shrd
fwait
rol
(bad)
or
sub
inc
cmps
std
enter
dec
xor
xchg
xlat
mov
iret
adc
int
stos
cld
jle
xor
pop
pop
gs
test
xor
pop
(bad)
adc
out
scas
dec
lds
jl
and
neg
std
jmp
dec
push
(bad)
cmp
imul
mov
xor
xchg
mov
adc
mov
icebp
je
pushf
mov
in
stos
xor
js
push
imul
push
bound
mov
dec
mov
xor
cs
cmp
adc
imul
xchg
lods
jge
push
hlt
dec
js
inc
mov
lods
mov
out
pop
movs
clc
jge
or
das
xor
scas
sub
out
push
fdiv
or
dec
rcr
jmp
jecxz
into
(bad)
ficom
aad
inc
clc
jae
lock
jle
inc
pop
or
sti
mov
aam
xor
jno
fucomi
mov
mov
hlt
pop
int
ins
add
mov
dec
xchg
lds
les
xor
adc
shr
shl
std
mov
sub
ins
cmp
pop
mov
jo
adc
add
ror
or
aas
popa
mov
push
pushw
scas
push
loope
movs
adc
into
push
inc
dec
push
rcl
je
push
shr
sub
int3
xchg
push
xor
jge
inc
test
sbb
inc
or
in
dec
icebp
mov
push
xchg
fsub
sub
or
out
repnz
inc
(bad)
nop
adc
jae
and
mov
mov
test
mov
push
hlt
stos
ins
inc
or
mov
dec
std
or
(bad)
out
adc
ror
inc
jae
(bad)
clc
dec
add
call
je
push
mov
adc
or
movd
dec
aaa
mov
inc
dec
int3
shl
sti
loop
test
test
jp
push
sub
mov
mov
(bad)
cmc
scas
mov
jbe
push
mov
inc
adc
daa
ds
fstp
or
dec
ins
sbb
xor
mov
cmp
shl
push
inc
mov
add
mov
repz
out
fnstsw
xor
inc
addr16
pop
int
dec
ins
int3
push
inc
data16
xchg
and
fimul
pop
xchg
inc
adc
jle
jns
jno
push
jns
pop
mov
ja
inc
jo
pushf
shl
and
cmps
repnz
inc
lods
pushf
xor
cmp
aas
inc
movs
lds
mov
push
dec
mov
cdq
xchg
pushf
dec
xchg
test
adc
xchg
xchg
add
mov
hlt
add
mov
shl
sub
add
push
jmp
fisub
pop
ins
ins
mov
gs
adc
aam
aam
les
loope
pop
mov
outs
add
test
(bad)
iret
dec
adc
call
mov
xor
das
test
xor
lea
cs
outs
xchg
jb
loope
mov
mov
or
and
mov
mov
clc
dec
sbb
cs
jb
mov
push
jecxz
jae
inc
pop
std
mov
stc
or
mov
dec
pusha
cmc
stos
jne
pushf
imul
es
cs
or
mov
push
xchg
aam
adc
addr16
lds
sbb
inc
retf
mov
(bad)
jle
movs
retf
cmp
xor
sub
ja
repnz
int
movs
ds
push
int
push
into
in
ret
retf
and
sbb
pop
cli
mov
dec
mov
cld
mov
jns
mov
mov
pop
mov
xor
inc
std
adc
jle
call
repnz
test
mov
mov
pushf
sub
cmp
aaa
sub
cmps
xor
cmps
adc
push
jae
sbb
dec
icebp
cdq
push
nop
test
pop
sbb
mov
outs
cmps
adc
mov
cmp
mov
fadd
or
xor
cwde
xchg
mov
addps
lds
fisubr
mov
pop
and
dec
adc
xor
adc
sar
cli
cmp
call
push
cmc
sub
mov
push
pop
repz
sub
cmp
lock
lods
fsubr
ins
fadd
imul
xchg
push
cmc
sar
and
je
xchg
pop
push
push
test
mov
inc
scas
leave
mov
(bad)
push
mov
sub
test
dec
lods
clc
mov
lods
sahf
(bad)
call
adc
imul
mov
inc
out
xchg
sbb
rcr
pop
inc
push
add
int3
cld
dec
cmp
cmc
cmps
or
jmp
fst
(bad)
xchg
push
shl
and
mov
stos
pusha
inc
in
fisttp
sub
stos
push
cmps
mov
mov
in
test
push
fadd
push
jnp
xlat
out
aad
ss
imul
cwde
mov
lea
push
into
dec
pop
rcr
aaa
mov
push
inc
clc
jmp
repz
mov
fild
fst
inc
dec
sahf
cmp
out
push
mov
jmp
and
stos
or
pop
lahf
jmp
loop
mov
movs
and
adc
jge
les
push
out
(bad)
in
outs
add
adc
and
xchg
push
ins
jno
pop
pop
sub
push
sub
dec
fstp
fisttp
(bad)
test
fstp
cs
imul
sub
movs
call
jbe
jnp
call
push
xchg
or
fwait
dec
dec
push
addr16
cwde
or
ret
adc
ins
sahf
lods
fidiv
sub
push
outs
outs
out
frstor
imul
pop
dec
cmps
xchg
pop
int3
cmp
pop
dec
mov
or
pop
mov
das
daa
xchg
jo
movs
cli
stos
push
dec
adc
xlat
mov
inc
push
lods
fdivr
push
cmc
imul
and
dec
pusha
icebp
or
lods
add
popa
hlt
push
cmp
fdiv
shl
jne
adc
add
pop
fst
mov
popaw
push
xchg
jl
dec
xor
in
jns
leave
out
idiv
or
shl
push
mov
out
mov
mov
stos
mov
adc
jecxz
and
or
sub
test
mov
les
jno
std
and
mov
jle
arpl
test
fbld
enter
in
sbb
push
dec
sbb
mov
dec
xchg
movs
fld
(bad)
in
popf
std
shr
hlt
js
add
test
inc
pop
sti
test
mul
cli
jb
pop
imul
test
cdq
jno
pop
pop
mov
lock
out
mov
int3
aas
and
mov
ret
mov
loopne
lods
pop
ror
repnz
or
xchg
outs
mov
jo
pushf
xchg
mov
(bad)
cdq
(bad)
loope
cmp
daa
inc
in
push
pop
mov
inc
enter
arpl
cdq
es
jb
setbe
xor
push
push
or
test
hlt
retf
sub
dec
in
cmp
fwait
pop
pop
pop
stc
and
pop
(bad)
mov
push
retf
loope
xor
loope
mov
jge
cli
pusha
jne
add
sub
sub
mov
mov
push
dec
pop
push
rcl
mov
inc
or
loopne
pop
jle
and
jge
push
test
xor
mov
mov
in
push
imul
(bad)
retf
sbb
ffreep
stos
loope
imul
popf
inc
xor
fwait
push
inc
imul
xlat
mov
xchg
xchg
xlat
pop
cdq
adc
fwait
mov
movs
mov
loopne
pop
or
(bad)
cmp
sbb
xor
icebp
inc
ins
xor
movs
push
pop
xor
pop
fldcw
lods
adc
rol
stos
pop
ret
cmc
ret
retf
jb
jnp
xor
ret
xor
in
nop
add
cmc
and
or
jno
sub
out
mov
nop
mov
sub
sbb
mov
repnz
in
add
iret
mov
int
adc
ja
int3
add
fistp
jne
aaa
push
shl
test
movs
xchg
dec
cmc
inc
in
sub
aam
into
adc
ins
xchg
call
push
sub
or
pop
cmp
cli
popa
in
push
dec
pushf
ins
and
and
icebp
or
shr
sub
addr16
jne
add
in
mov
movs
push
es
pop
dec
outs
push
jbe
and
mov
ret
mov
in
arpl
mov
outs
and
and
mov
sub
jp
mov
popf
jge
and
lea
int
jne
cwde
xlat
mov
push
cmp
jno
clc
mov
test
test
inc
push
push
cmp
and
daa
imul
mov
cmp
movs
in
cs
out
cs
into
into
shl
retf
nop
xchg
xchg
or
stos
ins
repz
xor
sbb
and
jl
cdq
xchg
push
sub
fbld
iret
test
sbb
int
(bad)
lods
outs
or
cmp
xchg
add
js
in
test
inc
call
jae
(bad)
nop
outs
mov
add
popf
push
sar
test
lock
call
mov
in
dec
popa
leave
sbb
out
push
bound
std
sub
iret
pushf
in
scas
mov
cmp
mov
add
ins
sub
mov
adc
xchg
jg
cdq
or
cld
std
enter
ins
outs
scas
pop
ds
jb
(bad)
mov
(bad)
sahf
jns
je
adc
scas
daa
cmps
cmp
fisub
push
push
cmp
lahf
iret
or
push
into
dec
lods
cmps
push
(bad)
and
pop
in
movs
sub
les
xor
cmps
nop
xchg
and
gs
mov
(bad)
in
mov
ss
push
retf
icebp
add
cmp
mov
sbb
js
outs
js
sub
lods
cs
mov
mov
pop
jne
push
inc
pop
mov
inc
es
inc
cmp
or
(bad)
mov
push
xor
int3
scas
in
cmp
popa
retf
xchg
add
js
inc
push
mov
mov
add
rol
imul
shr
jo
(bad)
(bad)
cmp
scas
idiv
imul
dec
retf
inc
xor
and
cmp
inc
stc
sub
and
out
stos
jmp
sub
mov
jne
pop
jge
push
xchg
pop
cwde
sbb
data16
out
jb
(bad)
jb
gs
and
mov
pop
push
mov
arpl
lods
lods
retf
in
adc
xor
ret
xor
inc
xchg
jnp
jb
stc
and
xchg
add
mov
jmp
lods
pop
inc
push
inc
fsubr
push
xor
cmp
cmc
shl
dec
hlt
scas
mov
mov
in
fist
dec
imul
(bad)
lock
jno
mov
iret
stos
lods
push
or
cli
mov
mov
jl
add
cmp
int3
lods
in
mov
(bad)
iret
leave
mov
cli
push
jl
and
add
cld
cmps
xchg
xor
jbe
pushf
mov
(bad)
rcr
or
jmp
pushf
scas
or
inc
test
sub
push
popf
les
rcl
sub
daa
mov
jns
in
jo
mov
hlt
jb
mov
call
fwait
adc
popa
sbb
add
cs
cs
sahf
xor
adc
ins
push
ret
pushf
jl
outs
jle
arpl
push
pop
(bad)
(bad)
pop
stc
neg
stos
retf
jns
cs
fsubr
xor
push
mov
loopne
fisubr
outs
fiadd
stc
jmp
jge
ror
pop
test
adc
jmp
push
rcl
inc
out
mov
sbb
(bad)
xchg
clc
outs
dec
jmp
fimul
add
pop
xchg
adc
or
leave
cmps
xchg
popa
es
xor
aam
pop
xchg
stos
in
mov
shl
fcmovnbe
push
lods
dec
mov
xor
fsubr
push
jmp
push
fdivr
push
and
mov
jae
aam
aad
rcr
sbb
xchg
jo
loope
aam
sbb
adc
cmp
dec
jno
int
mov
cld
inc
jo
cmp
(bad)
cmc
outs
push
xchg
push
arpl
mov
mov
shr
xchg
push
add
inc
pushf
and
retf
out
cmp
inc
dec
xor
cld
popf
popf
add
pushf
out
add
pop
mov
icebp
push
cs
cmps
lahf
int
arpl
sti
aad
adc
test
leave
ds
outs
call
jl
cmp
jmp
repz
data16
lea
cs
movs
pop
add
dec
push
js
lods
sahf
mov
mov
fistp
mov
mov
(bad)
pop
jae
or
jo
jl
xchg
mov
pop
test
shl
add
mov
sub
or
icebp
inc
(bad)
xchg
mov
mov
fisttp
mov
inc
pop
cmp
ret
xchg
mov
bound
shr
aad
sbb
pushf
jmp
push
stos
add
fdiv
test
adc
fadd
or
push
sbb
pop
ja
out
mov
cmp
mov
in
mov
lods
cmp
stos
jne
mov
jmp
and
cmp
add
push
and
aad
int
shl
test
jae
ss
jecxz
test
addr16
loop
jg
jne
sbb
or
push
outs
stos
xchg
repnz
fisttp
shl
jno
cmp
sub
test
sub
push
xor
jl
sbb
lods
mov
(bad)
scas
xchg
inc
aas
sbb
xchg
rol
sub
imul
call
mov
adc
mov
shl
sub
lock
bound
jl
ins
pop
inc
imul
or
pop
inc
push
ret
dec
cmp
stc
jl
not
lock
aad
mov
inc
ror
test
push
mov
es
ret
fidivr
cmps
mov
lds
add
mov
sub
ds
or
inc
das
std
sbb
xor
sbb
movs
push
push
jecxz
xor
mov
in
addr16
push
sar
icebp
and
cmp
or
ror
sub
xchg
jno
adc
lahf
or
mov
dec
push
and
cld
mov
or
dec
xchg
push
icebp
push
pushf
sbb
aas
mov
inc
rol
push
sbb
xor
out
out
xor
nop
sti
test
jle
inc
push
mov
jecxz
cmps
sti
(bad)
je
in
(bad)
dec
out
aam
or
sub
test
adc
xchg
neg
push
push
cmp
pop
sub
scas
stos
in
jbe
xor
pop
jo
int
adc
mov
push
xor
aaa
xor
and
or
jbe
fbstp
push
div
jle
enter
leave
inc
out
cmps
lock
mov
jl
inc
out
mov
sbb
cmp
mul
cmps
fldenv
push
loope
ret
icebp
cdq
mov
jle
and
imul
test
repnz
gs
aaa
pop
adc
out
mov
ins
mov
or
pop
fcomp
inc
dec
aam
sub
xchg
mov
sti
cdq
sbb
xchg
cmp
jo
(bad)
leave
lahf
sbb
dec
scas
and
loopne
xchg
sub
xchg
fild
test
xor
add
sahf
rcr
(bad)
xchg
add
xchg
pusha
jo
je
(bad)
fsubr
inc
add
fcomp
inc
shl
clc
in
xchg
outs
dec
push
sbb
adc
ret
xchg
xor
fisub
push
cmp
inc
repnz
inc
sub
cmp
sar
pop
cdq
jp
div
(bad)
std
mov
sbb
inc
ins
faddp
xchg
mul
pop
out
inc
mov
fnstsw
cmps
jne
fstp
push
fisttp
std
push
iret
rcr
xchg
pop
in
ins
or
movs
lea
jecxz
pop
test
inc
test
or
jae
xchg
lock
sub
test
scas
pusha
mov
aad
jle
and
daa
inc
lock
repnz
fs
sub
aaa
add
sbb
repz
inc
fcomp
mov
arpl
int
mov
lods
ins
and
call
out
dec
mov
push
mov
mov
mov
pop
lods
mov
(bad)
push
sub
es
push
fxtract
fdivr
fld
and
scas
fs
scas
mov
loope
leave
xor
inc
mov
jg
mov
mov
fmul
xchg
std
mov
and
cmp
xchg
or
adc
mov
jb
(bad)
sbb
lahf
shr
call
loope
and
gs
psubq
jns
jmp
outs
or
mov
sbb
sar
fisub
lea
mov
xor
pop
rol
cmps
lds
mov
pop
(bad)
or
mov
out
cmp
inc
(bad)
mov
(bad)
push
jmp
mov
mov
xlat
(bad)
pop
loop
xchg
icebp
retf
cmp
mov
jne
retf
stos
mov
xchg
cmc
cli
mov
mov
js
std
sub
and
pusha
in
xor
cdq
sar
push
mov
call
das
movs
adc
xor
mov
lahf
(bad)
out
pop
add
push
xor
daa
xor
sub
bound
lahf
ret
add
mov
xor
xchg
adc
pop
dec
daa
dec
aad
test
mov
retf
xor
mov
icebp
sahf
pop
neg
in
pushf
xchg
mov
push
jmp
jl
mov
outs
push
mov
loop
push
push
(bad)
cmp
call
(bad)
jae
cli
mov
gs
sbb
sub
cmp
mov
xchg
push
cmps
sbb
and
mov
add
and
xchg
inc
mov
sub
aad
cdq
inc
lea
cmp
jmp
mov
cmp
push
xchg
mov
or
adc
pushf
mov
fidiv
sti
sar
rep
and
nop
xchg
mov
dec
(bad)
call
rcr
mov
add
fsubrp
imul
jnp
imul
cmc
xor
cmps
sub
adc
and
xor
inc
mov
adc
sub
mov
add
jp
cli
cmps
addr16
nop
jecxz
enter
inc
fild
stos
test
xchg
call
pusha
leave
push
ret
push
pop
add
hlt
lahf
bound
out
sub
jecxz
movs
sbb
repnz
mov
aaa
ret
int3
mov
cmp
pop
push
test
es
fs
and
mov
add
jmp
test
push
mov
jge
nop
imul
cmp
jo
jmp
std
ja
sub
adc
call
adc
(bad)
jmp
xchg
jg
or
daa
add
pop
ret
movs
rol
fadd
outs
sbb
jmp
dec
jge
cdq
or
sbb
mov
fwait
xor
loop
stc
loopne
sbb
pop
into
push
mov
sbb
call
push
sub
mov
adc
(bad)
jmp
mov
jge
aaa
enter
push
jne
loop
sbb
mov
xor
lahf
push
xor
and
rcr
mov
data16
cmp
pop
push
pop
ja
(bad)
mov
mov
ret
pop
int3
stos
jbe
or
jl
inc
stc
adc
mov
or
xchg
inc
sbb
arpl
push
mov
adc
jp
inc
js
add
repz
sahf
cmc
inc
mov
sbb
add
xchg
mov
and
cmp
rcr
pop
adc
inc
mov
push
xor
xor
or
mul
iret
sub
clc
test
mov
jp
sbb
dec
std
rcl
push
push
pop
xchg
std
xor
xchg
cmp
std
mov
test
adc
loopne
push
sbb
ret
mov
and
(bad)
div
ins
sti
pop
mov
inc
stos
mov
jp
xchg
fwait
jmp
xor
pop
sbb
push
pop
mov
cld
les
xor
clc
sbb
ret
aam
cmp
(bad)
dec
push
sbb
push
jns
test
(bad)
int3
cs
mov
sub
mov
inc
cmps
lock
in
out
shl
call
pusha
pop
std
or
scas
aad
lock
mov
dec
je
in
icebp
mov
jbe
xor
push
outs
stos
xor
iret
cmp
mov
xor
movs
in
xchg
cmp
clc
dec
push
rcl
arpl
mov
and
add
pop
fisttp
mov
stos
ds
inc
repz
jmp
stos
scas
or
mov
push
repnz
mov
dec
inc
xchg
or
loop
push
add
(bad)
pop
mov
mov
popf
push
or
sar
jp
iret
stos
in
pop
sbb
outs
sar
lods
add
loop
mov
test
loope
mov
or
push
dec
mov
fwait
cmps
cld
jns
cmp
fcomp
mov
mov
int3
mul
jo
ins
je
scas
pop
test
cmc
add
sbb
ins
cmp
js
test
ror
pop
ins
ja
sbb
sub
mov
push
sub
fnstsw
bnd
in
and
add
mov
fdiv
out
and
daa
xor
pop
mov
leave
xchg
ret
fwait
xchg
xor
jo
mov
mov
stc
xor
call
stos
xor
fld
cmp
mov
jbe
movs
push
mov
arpl
cli
scas
xor
cmp
mov
lds
cld
sahf
das
dec
and
sub
and
scas
pop
pop
clc
addr16
mov
sub
out
cli
scas
aam
lds
mov
fist
dec
fcom
int
or
mov
(bad)
rol
sbb
addr16
dec
stos
adc
jp
in
scas
or
fcomp
sti
xchg
xchg
cld
movs
repnz
sar
retf
mov
ins
repnz
dec
xchg
ficomp
dec
adc
mov
lods
mov
pop
mov
sbb
sbb
inc
or
das
lods
iret
cmp
loope
push
dec
lods
xchg
pop
inc
jg
outs
adc
or
scas
scas
enter
mov
fsub
fdivr
fstp
inc
mov
icebp
push
cmp
sar
cld
out
lock
stos
sar
push
mov
xor
mov
cmp
cdq
mov
xchg
add
or
mov
push
add
or
or
mov
and
bsf
cmp
lahf
and
call
inc
icebp
jne
mov
(bad)
mov
enter
inc
sbb
jmp
push
push
inc
mov
jno
outs
push
inc
pop
sbb
xchg
inc
or
and
test
icebp
stos
ret
shl
pop
mov
sub
es
cmp
xor
scas
rcr
add
push
test
mov
xor
mov
fimul
dec
pop
rol
imul
and
mov
in
je
call
out
loop
std
pop
or
mov
retf
cdq
push
lods
mov
or
in
loopne
rcr
fnclex
dec
add
scas
cmp
push
mov
push
loope
test
bound
sbb
popf
cld
cmp
jecxz
lock
out
cmps
jmp
jecxz
repnz
not
std
or
or
loope
fcom
ja
sbb
retf
sub
pop
add
and
jg
add
or
add
inc
pushf
add
or
inc
mov
pop
arpl
xor
dec
inc
fwait
push
and
fwait
mov
js
das
fild
inc
jp
mov
sub
mov
jp
in
loope
in
frstor
cmp
test
xor
out
inc
ss
jns
sub
jo
jbe
add
imul
or
cli
(bad)
scas
movs
gs
repz
xor
jg
adc
(bad)
xchg
pushf
fisttp
ret
lods
outs
les
adc
sbb
sbb
and
cmp
mov
ss
or
mov
push
adc
imul
(bad)
(bad)
aad
outs
shl
jno
(bad)
js
lods
(bad)
das
jnp
outs
push
aas
cmp
and
outs
lods
pop
mov
dec
(bad)
adc
out
neg
cli
call
jmp
es
out
shr
dec
inc
fstp
in
ss
sbb
in
mov
cwde
in
push
shl
inc
cmp
(bad)
mov
pop
lahf
(bad)
popf
or
in
mov
addr16
xor
mov
pop
push
jbe
cld
in
cdq
ins
cwde
or
sub
mov
hlt
test
pop
pop
fimul
mov
mov
(bad)
and
pushf
je
xlat
ins
sub
and
stc
test
mov
push
inc
and
add
arpl
xor
add
fwait
stc
dec
xor
ins
mov
out
dec
nop
rcr
ins
nop
repnz
iret
xchg
lods
nop
shr
push
div
pop
add
dec
inc
mov
aas
ins
pop
sub
or
jecxz
imul
sub
xlat
fcom
ja
add
jecxz
or
mov
push
inc
movs
dec
xor
clc
movs
lahf
or
push
xlat
adc
int3
sbb
mov
mov
and
pop
push
jp
lea
push
dec
dec
mov
cmp
sbb
outs
sub
or
mov
(bad)
shl
jo
push
stos
repnz
in
sub
jb
xlat
cwde
add
sub
gs
add
lds
arpl
test
out
aam
rol
stos
inc
sub
rol
sub
mov
xchg
leave
sbb
cmp
out
das
fst
cmp
lea
pop
fs
aam
arpl
js
lods
arpl
sbb
sti
je
inc
aas
mov
js
fsubr
dec
pop
outs
or
push
jl
dec
movd
rcl
in
sbb
mov
imul
loopne
jl
add
cmp
sbb
add
lods
mov
inc
xchg
int3
fdiv
and
bound
stc
stos
jle
clc
jmp
mov
xchg
aas
pusha
imul
pop
adc
test
movs
(bad)
jmp
iret
jp
out
xchg
dec
mov
sbb
sub
rcr
out
mov
and
mov
push
scas
push
gs
fdiv
jns
and
mov
xchg
mov
popa
dec
or
dec
out
retf
jno
rol
xchg
outs
sub
aaa
mov
inc
fisttp
inc
sub
sbb
leave
xor
pop
adc
scas
dec
and
or
cli
int3
(bad)
stc
cs
je
hlt
and
lods
fs
xchg
arpl
popf
and
in
pusha
push
out
rcr
sub
mov
mov
lds
jg
push
sub
ja
and
popf
jnp
xor
repz
mov
jno
push
dec
add
sahf
loopne
push
stos
(bad)
xor
mov
sbb
inc
repz
and
xor
adc
cmps
jbe
jnp
popf
jo
int3
out
bound
sub
cmp
and
push
dec
push
sub
pop
push
pushf
jno
movs
sub
dec
cmp
mov
fmul
cmp
das
mov
stc
cmp
ret
ret
jae
add
call
mov
imul
push
jmp
(bad)
lea
in
mov
pop
xchg
fdivr
cmps
lods
ins
movs
mov
xor
test
into
sar
mov
sahf
fistp
movups
sbb
mov
mov
cmp
cdq
add
mov
push
xor
mov
cdq
les
ret
adc
test
cmp
mov
push
xor
inc
sbb
inc
daa
cmc
mov
or
jmp
out
mov
adc
rcl
sahf
lahf
cmps
sbb
(bad)
in
aad
gs
inc
gs
mov
cli
ret
shl
imul
retf
js
push
jmp
sub
(bad)
fcomp
dec
sbb
jle
icebp
dec
fld
jae
pop
pop
push
repnz
pop
lds
mov
enter
lods
mov
ret
into
ret
pop
lods
mov
icebp
mov
in
retf
test
loopne
xchg
jb
jne
cmp
les
add
ret
ret
mov
jae
push
mov
cld
xchg
out
pop
xchg
in
cmp
xor
jmp
mov
stos
sub
outs
xchg
pop
xchg
int3
pop
mov
mov
mov
xchg
fcmovne
sub
int
pop
ins
sub
mov
sar
pop
int3
cmps
dec
in
mov
stc
nop
mov
std
fabs
pop
hlt
sub
cli
cwde
in
loop
in
pushf
test
pop
jns
push
inc
shr
in
fucomip
jbe
cmp
std
js
push
adc
in
adc
mov
and
and
call
add
mov
int
or
ds
minps
mov
call
das
xor
or
lods
mov
jmp
and
pop
pop
push
inc
smsw
or
outs
jg
int3
or
cmc
push
mov
cli
mov
mov
popf
sub
mov
and
xchg
pop
adc
add
sti
and
pop
jnp
push
adc
or
xchg
push
sub
out
adc
pop
enter
pop
inc
adc
movs
pop
mov
cmp
loop
pop
mov
aas
sahf
ret
pop
dec
pop
scas
inc
mov
cmp
xor
test
lds
cmp
adc
ja
loop
cmp
sub
jmp
addr16
fsubr
js
pusha
and
lock
imul
jmp
mov
lea
and
cdq
outs
xor
addr16
inc
add
push
pop
xor
jge
rcl
sub
daa
fcom
adc
push
dec
and
test
(bad)
(bad)
ds
(bad)
jg
push
enter
pop
adc
mov
sub
(bad)
repz
mov
in
mov
jno
mov
jmp
loop
push
aam
das
add
xor
sub
loopne
sub
int3
or
cmp
lds
dec
in
in
mov
pop
movs
jns
iret
popa
jbe
pusha
lods
sbb
mov
or
(bad)
call
pop
mov
or
push
jecxz
stc
adc
pop
add
popw
sub
loope
add
sub
jno
call
mov
adc
imul
je
fwait
and
mov
loopne
sbb
dec
pop
dec
and
lods
int3
out
xor
dec
push
adc
cmps
and
mov
sub
stos
nop
sub
adc
dec
loop
pop
xchg
push
push
test
cmp
inc
sbb
(bad)
or
xlat
loope
lahf
add
sub
pop
add
sub
xor
arpl
mov
aas
push
and
lds
pop
stos
push
add
mov
cld
retf
(bad)
sbb
rol
popa
xchg
jae
mov
and
scas
mov
std
mov
fcomp
cdq
or
sahf
jecxz
sbb
mov
adc
iret
xchg
and
out
jnp
int
pop
xchg
jge
push
cmp
cmp
xor
rcl
add
test
xor
das
jmp
or
(bad)
xor
xchg
stc
rcr
sbb
inc
inc
pop
mov
(bad)
repz
imul
lods
mov
push
add
mov
jno
cmp
push
lock
fstp
fcom
adc
xor
xchg
rcr
in
mov
push
shl
sti
rol
xor
sbb
hlt
or
mov
ror
xchg
cdq
daa
cdq
cwde
sbb
or
sbb
stos
sbb
sbb
and
les
(bad)
fcomp
mov
push
jle
scas
popa
(bad)
movs
or
(bad)
xchg
mov
inc
popa
call
push
add
inc
test
shl
scas
cmc
stos
jl
dec
jb
out
cmps
pop
das
jge
ins
xchg
test
scas
adc
and
rcl
add
push
repz
sbb
adc
sub
jbe
jp
jne
jl
mov
sub
or
adc
xchg
xchg
sub
cmp
xor
pushf
int3
loope
cmc
call
stc
lods
(bad)
sar
stos
jge
pop
loop
push
repnz
adc
in
jp
pop
lock
dec
sub
out
scas
mov
jb
xchg
stos
hlt
test
outs
cmp
sub
inc
cmc
out
loopne
or
mov
fadd
addr16
fisubr
inc
sbb
xor
pop
movs
fsubp
jecxz
sbb
jl
xchg
push
je
jecxz
jnp
sub
sub
js
shr
jg
pop
push
xchg
sub
pop
xchg
xchg
or
push
arpl
xchg
jge
sbb
scas
pop
lods
fdivr
jb
pusha
and
or
pop
mov
ins
pop
nop
mov
jge
retf
sub
repz
mov
lods
icebp
pop
jp
sub
jbe
ja
push
stos
push
popa
dec
pushf
outs
pusha
int
(bad)
mov
shr
or
clc
imul
mov
ret
dec
pop
test
sbb
or
ret
and
lock
sub
aaa
mov
jbe
ror
jmp
(bad)
cmps
mov
pop
or
push
sub
imul
cmp
lea
or
sahf
mov
sar
add
push
mov
in
test
loop
push
cmp
mov
mov
repnz
mov
xchg
xor
fisttp
aam
scas
dec
sub
stos
std
push
sbb
lods
xchg
xchg
mov
lock
scas
das
jmp
push
cmc
ss
or
ins
retf
mov
mov
dec
sbb
push
xchg
add
push
(bad)
dec
nop
dec
stos
cs
mov
push
mov
or
sbb
outs
js
sbb
xchg
xchg
push
pop
cmp
(bad)
push
out
mov
mov
inc
adc
ficomp
sub
xchg
mov
mov
jmp
mov
mov
xchg
(bad)
jb
sub
out
leave
neg
ss
lods
dec
aad
and
call
shl
adc
std
lock
xor
(bad)
(bad)
repnz
out
fs
cmp
jno
or
pop
dec
es
(bad)
push
mov
jecxz
xor
jne
jnp
pop
jae
xchg
not
cmp
test
out
fstp
push
or
test
cmp
add
jno
jnp
aas
sub
sbb
js
jns
dec
dec
and
pop
push
mov
mov
movs
jbe
xor
ja
and
add
cmp
jl
xchg
mov
cmp
bound
(bad)
movs
push
jl
(bad)
sbb
adc
repz
(bad)
(bad)
mov
push
cmp
push
jge
stos
adc
xchg
inc
sbb
in
test
test
xor
sbb
jl
call
shr
jle
sbb
sbb
cwde
sbb
(bad)
sbb
mov
shl
dec
add
arpl
addr16
xlat
fucomip
dec
loope
jb
aaa
hlt
into
sbb
mov
jle
in
fdivr
lds
fld
jnp
out
mov
sbb
pop
jno
mov
leave
xlat
xor
xor
cli
sub
jbe
mov
add
int
pop
scas
or
(bad)
pop
cmp
mov
loopne
leave
dec
scas
xlat
jl
mov
es
push
iret
inc
jne
int
mov
inc
dec
cdq
dec
inc
sbb
xor
adc
out
mov
lea
and
test
sbb
pop
adc
add
mov
inc
adc
jne
sub
(bad)
mov
adc
push
sub
imul
sub
mov
lds
mov
mov
jb
outs
stos
adc
lods
stc
push
push
jl
repnz
scas
cs
jo
xchg
loope
mov
nop
ret
adc
inc
lahf
ins
jp
in
ret
movs
icebp
mov
and
cs
inc
int3
iret
jmp
movs
inc
xor
mov
nop
pop
loop
jg
pushf
stos
cwde
int
into
jge
pop
call
int3
push
sbb
jne
mov
pop
ret
les
in
pop
mov
hlt
repnz
xchg
jmp
not
outs
and
push
out
mov
in
jl
pop
(bad)
aaa
repz
mov
push
push
sbb
in
out
gs
fdivr
lods
ret
sbb
push
adc
mov
cld
ud0
imul
sub
out
pop
mov
push
xor
pusha
mov
push
and
cli
or
out
inc
and
mov
mov
ficomp
sub
push
add
outs
jmp
mov
jmp
scas
xor
aad
mov
retf
push
mov
mov
ins
in
push
sbb
jge
outs
stos
sti
cmp
jecxz
out
jae
jmp
call
push
int3
add
aaa
aad
mov
pop
jae
repnz
xchg
adc
mov
shl
int3
call
or
ja
xor
lods
and
jge
outs
pop
adc
pop
cli
mov
ret
lods
inc
cmp
push
mov
aaa
(bad)
call
dec
push
call
jp
xlat
jmp
gs
or
cmp
dec
and
outs
mov
sub
jo
or
mov
cmp
dec
test
and
adc
inc
dec
and
nop
xor
pop
daa
loopne
xor
in
or
daa
jb
or
cwde
int3
lahf
mov
loop
sbb
cmp
jl
or
cli
js
cmps
dec
out
dec
aaa
adc
mov
fmulp
arpl
(bad)
sub
or
scas
inc
xor
stos
(bad)
jmp
js
jecxz
arpl
push
cmp
rcr
cmp
aas
mov
sbb
add
push
in
adc
cld
jo
push
add
fild
inc
movs
pop
mov
jbe
sbb
pxor
cmp
out
lods
lock
cdq
xchg
mov
test
pop
test
leave
sub
inc
and
xchg
jle
ret
rcl
out
test
and
xor
jo
scas
sub
xor
inc
mov
xchg
jnp
mov
sub
mov
jnp
cmp
repz
cs
sar
pop
and
add
loopne
pusha
mov
add
icebp
pop
pop
movs
es
sub
push
push
outs
pop
or
cli
retf
jne
and
or
icebp
test
(bad)
(bad)
sahf
pop
mov
mov
fiadd
nop
into
or
jno
sub
cmp
sub
cmp
jg
jb
jae
jno
add
test
stos
ins
xor
adc
sar
mov
pop
and
iret
nop
fcom
stos
mov
arpl
inc
inc
(bad)
fisttp
push
inc
sub
rcr
xchg
jmp
jmp
lods
cmp
jge
jbe
addr16
test
or
inc
dec
and
xor
fwait
enter
orps
inc
adc
pcmpeqw
jmp
loope
jb
jo
outs
test
xchg
and
lods
sbb
pop
pop
ins
imul
ds
mov
xchg
adc
xor
cmps
mov
inc
mov
pop
cmp
sub
mov
jne
int
ror
mov
mov
cmp
test
in
inc
iret
mov
mov
fwait
adc
cmp
sub
cmp
mov
js
pop
sahf
dec
or
clc
ja
sbb
push
icebp
xchg
(bad)
mov
sub
nop
shl
stos
loop
das
cwd
ins
dec
loop
(bad)
jmp
es
fcomip
imul
out
jae
mov
push
add
cwde
scas
push
jg
jl
ins
pop
js
repnz
(bad)
leave
jmp
mov
es
add
test
fdiv
adc
jne
cld
enter
pushf
adc
mov
cmp
push
mov
mov
shl
xor
sub
into
push
jne
sub
mov
push
jae
sbb
sub
call
ja
imul
gs
sbb
mov
into
push
inc
push
sub
pop
in
adc
inc
sub
inc
mov
mov
jb
ss
ins
ja
je
add
fwait
scas
popa
stos
sbb
push
pop
loopne
les
cmc
imul
jmp
xchg
cmp
xchg
and
rol
and
out
gs
mov
into
call
push
leave
lds
push
rcl
fbstp
(bad)
mov
jg
dec
pop
mov
ins
je
xor
dec
js
mov
xchg
(bad)
jle
xchg
sar
iret
cmp
push
jo
in
enter
in
les
and
xchg
push
or
and
xchg
mov
mov
add
idiv
scas
cmp
pushf
xchg
dec
loope
hlt
and
mov
jg
push
push
fimul
cmp
cli
push
in
popa
mov
push
inc
pop
scas
xchg
xor
pop
cmp
inc
les
mov
setge
ds
ror
and
mov
sbb
pop
loop
cmp
push
fmul
and
xchg
xor
cmc
dec
fsubr
xor
jmp
mov
arpl
add
adc
xchg
retf
jnp
ins
push
(bad)
pop
loopne
and
pop
cmp
xchg
icebp
xor
pushf
movs
push
rol
mov
imul
push
push
or
sub
push
mov
inc
fbstp
stos
shl
mov
jbe
cmp
pop
xchg
pop
daa
je
add
push
sub
xor
pop
gs
js
jne
cmc
cmps
inc
xrelease
sbb
or
inc
es
pop
std
out
cld
xchg
cmc
out
mov
pop
in
das
in
sub
cmp
imul
jg
popf
dec
mov
pop
pop
mov
or
lahf
fisub
jl
aaa
test
xor
pop
push
xor
ret
addr16
les
add
popa
pop
inc
lock
ficomp
jo
std
int
and
repz
rsm
aaa
lods
push
pop
cmp
cdq
adc
jae
pushf
inc
arpl
clc
in
fnstcw
sbb
push
mov
rcl
mov
cmp
fcom
loop
xchg
sub
sub
mov
popf
mov
add
loope
jae
push
add
cmc
xchg
xchg
movs
push
cmps
aam
fidiv
add
outs
(bad)
inc
add
fs
dec
stc
jno
fld
push
push
cmc
mov
sub
push
cmp
(bad)
jmp
rcl
jl
jmp
cwde
push
test
aam
sub
rcr
hlt
xor
push
or
xlat
aas
pop
mov
sub
add
pop
jb
test
repz
(bad)
retf
and
ret
mov
aam
arpl
and
xchg
sub
pop
mov
push
push
pop
shl
and
mov
jl
ret
push
or
mov
and
scas
adc
sahf
sub
shr
adc
sbb
xchg
inc
mov
in
cmps
ja
bound
mov
sbb
push
add
cli
xor
pop
jb
sub
fcmovu
test
jns
or
ror
hlt
(bad)
popa
inc
dec
lods
pop
stos
push
push
and
add
push
into
xor
jns
push
(bad)
mov
fcomp
xchg
not
rcr
cmovne
loope
repnz
xchg
mov
mov
popf
fld
stos
cmp
push
rcr
hlt
sar
mov
ins
xchg
inc
add
push
dec
lahf
addr16
mov
sbb
dec
dec
dec
test
pushf
push
sbb
dec
cmc
cmp
ins
pop
or
sbb
nop
les
sub
mov
add
stos
scas
imul
(bad)
retf
shr
mov
shr
inc
outs
test
ins
or
gs
xchg
adc
(bad)
(bad)
jno
mov
ins
shr
gs
sbb
inc
mov
push
in
(bad)
xchg
and
mov
cmp
xchg
xchg
cmp
adc
adc
and
or
test
pop
push
(bad)
cld
call
(bad)
in
jp
mov
xchg
sbb
mov
jmp
into
cli
inc
lods
adc
inc
sub
rol
mov
mov
add
ret
mov
std
fistp
mov
jmp
sub
mov
xor
xchg
test
add
cmp
ret
ins
js
outs
inc
sbb
imul
loop
retf
movs
sub
pandn
mov
std
xchg
cmp
lods
xor
sbb
mov
bound
inc
fisttp
jg
rcr
and
out
ins
shl
stos
adc
mov
cld
sbb
sub
dec
outs
inc
adc
xlat
and
jmp
(bad)
jp
mov
mov
ins
mov
ja
mov
cmp
fnstsw
push
sub
add
mov
out
cdq
push
cmps
or
das
add
pop
cmp
dec
cmc
mov
cmps
outs
push
jae
add
stc
ja
jp
push
icebp
mov
(bad)
pop
cwde
mov
sbb
scas
pop
inc
shl
stos
sub
daa
sbb
ror
arpl
out
es
lods
outs
fwait
loope
test
mov
das
(bad)
idiv
xchg
call
jmp
rcr
dec
enter
shl
bound
jmp
jbe
jne
sub
mov
mov
and
pop
mov
fadd
icebp
jge
inc
bound
fldcw
mov
dec
adc
test
movs
cmp
stos
rcl
push
mov
sub
scas
or
and
stos
test
retf
pop
cwde
(bad)
retf
adc
hlt
dec
mov
mov
(bad)
arpl
cmp
cmps
cld
lock
clc
push
(bad)
mov
(bad)
mov
push
lock
ret
dec
ins
jmp
sub
jne
and
cmp
imul
(bad)
sub
cmps
pushf
push
fwait
inc
xchg
sub
mov
and
xor
cdq
in
in
stc
cmp
lea
leave
sti
pop
out
and
loopne
sbb
ins
push
cmp
cs
xchg
jl
push
mov
jnp
fmul
(bad)
mov
mov
mov
jmp
adc
pushf
cmp
inc
call
dec
ds
mov
cmc
inc
int3
ss
mov
iret
add
jae
jge
adc
fld
iret
inc
shr
or
(bad)
cld
lods
or
adc
cmps
push
inc
sub
pop
mov
add
xchg
pop
dec
test
(bad)
pop
dec
icebp
sar
cld
mov
pusha
add
rcl
popa
mov
dec
int3
xchg
loopne
mov
add
test
xor
push
les
mov
shr
sbb
xchg
jns
pushf
std
mov
retf
in
aad
aaa
popa
mov
and
sub
imul
das
adc
ret
aaa
in
mov
pop
add
hlt
jp
fiadd
imul
fisub
test
dec
sub
sti
fndisi(8087
mov
dec
or
pop
push
lds
xchg
sbb
in
das
inc
fs
xchg
mov
lahf
dec
jae
push
(bad)
mov
loop
mov
mov
lea
std
jecxz
ins
and
dec
and
jmp
int
dec
(bad)
cs
jno
jmp
outs
les
rol
pop
stos
pop
(bad)
and
pop
and
ins
jecxz
xor
xchg
cmp
retf
outs
xor
lods
jmp
and
cmp
imul
cmps
fdiv
adc
push
outs
jg
test
sar
into
int
retf
shl
ss
mov
push
test
cmp
xchg
call
cmps
cmps
xor
in
fwait
cmp
out
ror
iret
cwde
addr16
mov
int
nop
daa
fmul
aad
pop
stos
out
sbb
aas
adc
test
(bad)
inc
cwde
loop
push
push
stos
sbb
jle
rcl
(bad)
aas
mov
lods
sub
and
lahf
out
ds
jne
mov
das
cld
imul
inc
push
loopne
inc
ins
xchg
xor
out
or
mov
xor
sar
cmp
repz
dec
(bad)
sub
ins
adc
push
mov
fist
mov
call
cmp
pop
mov
aas
in
pop
int
adc
ret
lea
retf
in
clc
hlt
fisub
addr16
call
mov
scas
pop
cmp
sbb
in
out
cmp
cli
mov
cdq
repnz
or
ret
cmps
push
cmp
int
sahf
jmp
sub
inc
int3
and
mov
mov
(bad)
fwait
inc
sub
movs
jg
clc
add
adc
xor
xor
and
mov
ret
lods
loop
or
pop
(bad)
bound
jmp
lahf
call
dec
imul
loope
cmps
sub
xor
cdq
adc
outs
push
mov
jnp
pop
inc
pusha
add
xor
push
mov
sar
daa
dec
fdivr
mov
frstor
aas
mov
jae
loop
test
mov
xor
(bad)
dec
es
js
fmul
or
mov
push
stos
sub
mov
push
sbb
jg
mov
pop
sbb
sbb
lock
call
in
sti
xchg
daa
repnz
or
int3
neg
fs
mov
push
sub
stos
xor
pop
lock
xor
xor
push
mov
cmp
mov
adc
lods
sub
jmp
jmp
sbb
inc
jle
retf
test
ss
repnz
push
mov
lods
std
adc
mov
ins
xor
(bad)
(bad)
or
xchg
fs
call
in
or
test
inc
mov
out
push
pop
in
xchg
xor
lahf
sti
mov
dec
shl
scas
test
sahf
pop
jmp
ud0
(bad)
iret
inc
push
xlat
cs
xchg
in
fadd
add
shr
out
adc
sar
mov
cmp
jl
xchg
xchg
outs
mov
repz
movs
jp
pop
ret
dec
sub
or
or
push
mov
add
cmp
mov
cld
scas
adc
lds
xor
test
and
mov
and
dec
loop
scas
mov
out
mov
dec
sbb
dec
aam
daa
xlat
add
popa
xchg
sub
jae
iret
dec
mov
pusha
dec
aas
stos
fcmovbe
mov
inc
jecxz
and
fbld
add
sar
mov
jecxz
pop
pop
stos
push
je
mov
int3
sub
les
or
jb
sbb
mov
xchg
test
jge
add
ret
pop
leave
stc
fs
cvtps2pi
mov
jnp
outs
ficomp
and
ds
(bad)
addr16
jecxz
fdivr
inc
retf
add
cwde
int
jecxz
inc
pop
mov
mov
mov
iret
icebp
(bad)
sbb
rcl
dec
or
das
(bad)
ds
pop
mov
push
fs
jl
(bad)
lds
sti
inc
sahf
mov
in
int3
xchg
cmp
mov
outs
ins
jo
pop
cld
or
pop
add
sysenter
addr16
lock
mov
popf
ins
cmp
add
or
jno
bound
adc
mov
fist
jns
iret
mov
icebp
dec
out
sahf
in
mov
xor
mov
xor
cmc
popa
dec
xor
mov
adc
je
(bad)
cli
les
mov
cmp
xchg
(bad)
pop
rcr
adc
or
add
inc
jns
push
fistp
daa
cmc
nop
sub
add
dec
xchg
sub
cmp
dec
sub
movs
movs
jnp
fadd
jmp
ja
push
mov
sti
and
shl
inc
(bad)
sub
pop
pop
imul
rol
out
in
adc
out
movs
fwait
cs
mov
xchg
movs
fsubr
pop
pushf
jmp
das
push
(bad)
in
push
loop
outs
sbb
stos
retf
adc
sti
fbld
inc
pop
jl
mov
enter
mov
push
pop
stos
xor
mov
sub
sbb
pop
fcom
in
xor
mov
(bad)
fwait
aam
fsubr
jno
or
xchg
mov
jp
arpl
push
jns
jg
dec
pop
inc
jns
and
pop
int3
imul
push
dec
lods
add
lods
out
cmp
sub
adc
(bad)
and
test
dec
sub
inc
mov
push
cdq
sub
retf
cmps
pop
stos
cmp
adc
mov
mov
sbb
dec
sub
inc
lahf
cmps
xchg
pop
dec
jle
cli
(bad)
(bad)
out
addr16
clc
mov
out
push
out
pusha
pushw
mov
lods
jmp
scas
cwde
int3
shr
pop
frndint
lahf
jb
(bad)
adc
push
js
(bad)
dec
int
ret
jae
dec
dec
adc
ret
fwait
add
dec
sbb
aad
movs
pop
or
pop
mov
call
out
frstor
adc
cmp
mov
or
or
pushf
xor
js
bound
sahf
fcomp
in
pop
inc
call
xchg
inc
into
loope
loopne
push
and
xor
jns
push
mov
dec
jle
mov
jg
xor
imul
jge
or
shr
adc
inc
jmp
(bad)
(bad)
fistp
nop
sbb
repnz
je
lds
cmps
jp
fsub
pushf
xor
(bad)
call
jmp
push
sub
jge
or
jmp
fdiv
fcomip
fdivr
call
cmp
addr16
fidiv
and
mov
and
shl
repz
shr
inc
aam
xchg
sub
mov
mov
pop
(bad)
rcr
adc
dec
adc
lock
xchg
and
or
mov
push
inc
sbb
adc
jbe
aam
pop
(bad)
jno
lds
js
sbb
pushf
xchg
fwait
jmp
or
sahf
(bad)
icebp
ficomp
fisttp
jae
dec
pop
mov
mov
jge
popa
inc
in
(bad)
retf
and
div
ja
and
mov
cwde
push
stos
ja
add
dec
cmp
push
sub
ret
scas
adc
mov
lods
sbb
adc
and
fcomp
sub
bound
(bad)
in
stos
sub
inc
call
das
or
pop
fcos
mov
mov
adc
mov
and
push
scas
mov
movs
or
paddw
mul
xor
push
(bad)
and
pusha
dec
mov
hlt
push
in
ficomp
aaa
popf
mov
int3
adc
jmp
sbb
lods
movs
or
jnp
(bad)
fsubp
ret
mov
mov
push
cmovge
add
mov
mov
jne
jae
adc
div
push
mov
out
cdq
add
mov
ja
push
scas
inc
push
xchg
inc
cld
jmp
fwait
dec
mov
inc
jbe
sbb
mov
into
sbb
add
and
and
inc
scas
cmps
aad
push
and
not
xchg
adc
pop
pop
ins
xchg
jae
adc
ja
jmp
je
mov
pop
pop
mov
std
or
mov
mov
pop
mov
mov
adc
bound
iret
stos
xchg
call
test
test
inc
pushf
(bad)
push
int3
loop
cli
adc
rol
add
pop
fs
mov
add
retf
mov
shl
xor
stos
sbb
mov
or
xchg
(bad)
dec
lods
dec
or
iret
stos
mov
sub
push
daa
js
je
cmp
cmps
xchg
stos
stos
repz
js
mov
jmp
into
inc
(bad)
out
dec
jmp
mov
inc
fsub
mov
xchg
pop
mov
lods
cmp
xchg
push
jmp
data16
and
cmp
sub
in
fcomp
ja
in
cmp
sub
stos
fdiv
xchg
and
out
pop
(bad)
bound
and
cs
jp
mov
push
add
dec
call
ins
adc
aad
jbe
pop
jbe
and
mov
jnp
pop
fldenv
loope
sub
ins
aam
(bad)
imul
xlat
ss
popa
xor
mov
jmp
gs
in
iret
ins
test
mov
div
mov
cmc
push
hlt
sar
rol
inc
xchg
cmc
call
mov
arpl
fwait
ret
and
sub
les
shl
push
(bad)
pop
cmc
cdq
xor
cs
aas
jge
add
push
xchg
jnp
add
es
jno
add
fs
inc
mov
nop
scas
pop
add
jle
(bad)
push
out
xor
or
inc
sub
add
rcl
add
test
jne
sbb
mov
mov
add
push
jae
pmaddwd
(bad)
in
jl
fwait
in
sti
int
test
xchg
xchg
movs
pop
xor
adc
lock
dec
xchg
js
addr16
add
stc
inc
add
scas
cmc
mov
sub
test
cmp
or
lock
jge
lds
inc
into
in
cs
in
push
(bad)
mov
daa
inc
pop
(bad)
mov
fld
dec
enter
call
mov
add
jb
scas
mov
dec
ret
mov
cmp
push
dec
pop
jmp
int3
out
sbb
adc
sbb
or
sub
xor
jnp
push
push
into
push
int3
iret
enter
sub
daa
stos
push
mov
(bad)
push
xchg
call
mov
fwait
sub
push
test
sub
mov
out
mov
push
enter
add
(bad)
xchg
out
and
xchg
lock
sub
ret
aam
push
mov
aas
mov
icebp
retf
cmp
jge
shl
cmp
daa
in
dec
cmc
jmp
mul
mov
shl
xchg
loopne
nop
fidiv
inc
retf
jl
jo
lea
jg
pop
xor
jecxz
sub
dec
imul
iret
(bad)
data16
(bad)
test
lds
and
loop
inc
add
fwait
push
add
dec
and
mov
shl
test
mov
inc
sbb
pop
loop
aam
pop
std
sub
sbb
push
inc
pop
in
xor
mov
leave
xchg
xchg
jnp
jns
sahf
jp
mov
jbe
bts
icebp
push
mov
in
aaa
or
push
pop
xchg
sbb
push
retf
push
fisub
call
pop
leave
in
aad
inc
cdq
push
pop
sbb
cld
leave
xor
mov
retf
rcl
div
sbb
cdq
enter
push
dec
loop
ja
pop
int
dec
call
fidivr
repz
push
js
(bad)
js
inc
test
in
sbb
(bad)
cs
fidiv
icebp
in
xor
mov
inc
inc
in
(bad)
aad
add
mov
popf
int3
adc
or
xchg
pop
sbb
mov
outs
out
adc
or
imul
scas
mov
into
adc
test
popf
popf
xchg
outs
ins
repnz
imul
int
pop
or
lahf
pop
and
fimul
mov
fnsave
xchg
cli
cmps
es
dec
push
push
cmp
arpl
cli
xchg
sub
rcl
cwde
mov
adc
and
sbb
loope
xchg
inc
add
jmp
out
xor
sbb
and
xchg
out
comiss
sbb
out
std
(bad)
adc
mov
cmp
dec
xor
(bad)
call
fs
xchg
icebp
mov
sub
daa
add
cs
pop
jecxz
and
aaa
pop
xor
rcl
lock
fadd
sub
pop
xor
in
sbb
adc
cs
ins
cmp
xchg
jl
pop
jl
gs
cwde
push
lds
test
add
push
add
inc
cmp
les
leave
arpl
fwait
and
and
xchg
(bad)
or
lahf
in
ficomp
shr
mov
push
sub
add
push
(bad)
cld
sub
jo
adc
hlt
dec
popa
xchg
xchg
sub
(bad)
lock
mov
push
and
mov
out
push
outs
jmp
or
sti
mov
neg
dec
mov
push
retf
call
int
rcl
loope
pushf
mov
jnp
aas
push
jle
cmp
pop
jmp
and
xchg
push
or
es
xchg
cmps
mov
or
pop
jbe
out
es
out
repz
ds
loopne
leave
fs
movs
pop
push
int3
and
jbe
xor
fdiv
jg
inc
aas
mov
ret
push
adc
scas
push
and
ss
cmps
sahf
xor
sub
fld
sbb
popf
test
in
aam
mov
hlt
dec
in
mov
stc
jg
pop
out
adc
pop
push
adc
aam
xor
stos
pop
loope
movs
sbb
sbb
push
pop
add
js
push
xor
ror
sub
push
enter
jno
not
je
ror
sbb
jae
imul
mov
push
out
outs
sbb
dec
stos
int
xor
sub
stos
mov
or
or
pop
jno
push
inc
out
scas
iret
mov
adc
and
xchg
cmp
cwde
imul
sub
pop
in
dec
jo
or
rol
in
xchg
adc
mov
sub
imul
pop
call
lds
bound
cmp
mul
in
xor
and
mov
mov
add
into
adc
sbb
lods
cmp
sub
ins
xchg
sbb
adc
shl
loope
cld
xor
mov
sub
ret
jecxz
arpl
mov
in
push
rol
push
mov
xor
dec
repnz
inc
(bad)
retf
leave
xor
out
mov
push
in
std
push
mov
xchg
pushf
pop
adc
shr
loopne
retf
sbb
sar
jns
xor
jo
push
int
shr
cmc
cmps
clc
add
mov
mov
js
xchg
es
retf
rol
(bad)
sar
cmp
push
pop
jnp
add
push
xlat
mov
bound
call
add
and
call
cmp
lahf
sar
sbb
stos
cmps
and
pop
in
in
cwde
popa
in
lock
sahf
imul
call
jnp
or
sbb
cmp
jno
push
int
das
sub
jmp
les
stos
sub
add
test
pushf
cli
addr16
cmp
jle
inc
adc
lahf
fdivr
fistp
xchg
add
das
jmp
gs
sbb
sub
inc
jecxz
inc
rcr
sub
outs
mov
test
out
add
xor
bound
pop
mov
dec
int3
pop
sbb
adc
xchg
lea
dec
push
in
out
pop
or
sbb
cs
cmps
call
pushf
pop
popf
gs
and
fisttp
cs
shl
stos
call
pop
mov
scas
cmp
rol
aad
add
push
lods
push
imul
inc
cld
in
mov
jmp
gs
scas
sahf
repnz
jne
fmul
es
push
in
or
(bad)
hlt
mov
(bad)
and
jmp
pop
lahf
adc
mov
or
(bad)
ins
sahf
dec
movs
bound
mov
cmovge
fcom
mov
mov
adc
push
inc
ja
xlat
retf
ficomp
das
xor
and
outs
sub
and
mov
jne
or
mov
icebp
mov
pop
ret
fmul
cmc
dec
and
push
cwde
bound
stos
jne
cmc
mov
mov
int
jnp
je
mov
cmp
neg
fild
mov
cmps
stos
lds
movs
test
cmp
mov
shl
inc
fisub
(bad)
mov
xchg
icebp
shl
test
out
adc
cmp
call
retf
adc
(bad)
dec
in
call
aad
sbb
loope
stos
sub
sub
cmp
shr
or
call
jae
cmp
xor
sbb
sti
or
inc
cs
and
or
retf
push
adc
dec
daa
fwait
jle
mov
xor
(bad)
cmp
cmc
stos
pusha
jecxz
cwde
out
push
fwait
fs
bound
dec
sbb
cdq
or
dec
fucomi
pop
je
test
jl
mov
xchg
add
(bad)
lock
adc
clc
pop
pop
inc
fistp
rcr
icebp
(bad)
sbb
call
dec
xchg
test
call
mov
pop
jbe
inc
das
pusha
leave
push
sar
mov
mov
(bad)
(bad)
ds
sahf
jnp
mov
and
cld
outs
and
test
push
or
fld
cld
cwde
xor
fnstcw
pop
pusha
lods
outs
adc
pop
ss
push
xlat
prefetch
or
js
lods
gs
add
pushf
sbb
mov
rol
ins
adc
in
push
push
cmp
or
xor
nop
jecxz
sbb
aam
cmp
cmps
sar
push
push
sahf
sbb
xchg
fst
sbb
lods
fsincos
sbb
jo
jmp
xor
outs
inc
jl
adc
and
hlt
daa
jecxz
adc
call
push
mov
(bad)
jb
push
sbb
sar
ret
jl
mov
arpl
adc
inc
xor
outs
pushw
push
sub
add
xchg
or
hlt
cdq
fldcw
shl
sub
sub
mov
aam
mov
mov
iret
xchg
icebp
(bad)
lock
pop
inc
cmps
mov
pop
aam
or
scas
inc
test
fscale
mov
(bad)
cmp
xlat
repnz
push
pop
or
jae
inc
shl
mov
adc
push
mov
mov
mov
cmp
push
out
out
lds
sub
adc
jle
mov
mov
xchg
imul
add
test
adc
adc
jno
lods
cld
cdq
aas
dec
dec
jge
mov
xchg
iret
adc
jecxz
popa
xor
out
ds
neg
jnp
outs
retf
mov
clc
test
and
jne
(bad)
es
jmp
arpl
xor
jno
sbb
xor
ja
push
mov
mov
push
lahf
lea
and
and
stc
mov
rcr
pop
icebp
bound
out
stc
adc
mov
pmaddwd
pop
inc
mov
pop
test
ret
fs
icebp
pushf
and
xor
or
stos
mov
repz
inc
cmp
push
jb
add
mov
inc
and
popf
mov
xor
mov
adc
and
mov
xlat
mov
jg
mov
(bad)
es
sbb
outs
xor
call
rol
jle
sbb
push
fidiv
cmc
imul
ss
mov
(bad)
dec
ja
xchg
cs
xchg
and
lods
mov
inc
xor
test
adc
dec
in
and
adc
jp
mov
ret
in
les
call
jbe
lods
es
out
inc
xor
xchg
lds
popf
jle
mov
ds
iret
aas
sub
jb
lods
push
dec
mov
push
fistp
clc
adc
lahf
shr
and
mov
ret
mov
loope
not
push
popf
jno
push
into
ss
call
cli
pop
test
fucomp
and
xor
fnstcw
rcl
pop
shr
outs
fisttp
mov
cmc
mov
js
and
cld
ds
sbb
push
sub
div
retf
dec
leave
dec
call
sahf
mov
mov
push
inc
scas
imul
inc
fcomp
sbb
pop
dec
cld
mov
int3
dec
popf
stos
in
add
dec
sti
or
fist
retf
add
inc
(bad)
pop
dec
out
popf
scas
sub
jns
mov
xor
cmp
xchg
sub
out
mov
rol
out
dec
les
out
movs
(bad)
xchg
pop
sti
add
es
mov
and
in
mul
fs
ret
push
mov
adc
mov
sub
mov
ss
inc
jbe
mov
and
dec
test
call
or
jb
mov
pop
push
and
jbe
shr
ror
in
inc
mov
or
dec
and
scas
rol
int
(bad)
dec
loope
and
cmps
out
das
ret
das
inc
cmp
ret
jl
xor
add
xor
sub
mov
cdq
adc
cmp
pop
add
popf
mov
mov
(bad)
xor
and
fmul
jecxz
push
jmp
out
push
stos
lds
fstp
or
xor
outs
inc
test
sbb
push
xlat
push
ror
jmp
push
dec
mov
cli
push
fst
pop
test
and
lock
pop
mov
mov
dec
aas
les
ja
adc
rol
mov
push
ins
and
inc
(bad)
jns
pop
sub
jo
pop
push
lahf
xchg
jge
dec
mov
jecxz
into
sub
sti
push
push
or
mov
and
test
cwde
push
fldenv
add
mov
mov
pop
popf
sub
sbb
iret
xchg
mov
in
inc
sbb
cmp
adc
cwde
push
ja
ret
shl
push
daa
sbb
or
inc
mov
mov
addr16
ficomp
dec
xor
shr
dec
out
mov
mov
inc
fimul
add
jnp
push
iret
add
scas
iret
cmp
loope
cld
in
cwde
fadd
xchg
and
popa
push
xor
add
leave
add
xchg
iret
inc
stos
add
cwde
sbb
fcomi
push
imul
jge
fbld
fwait
xchg
call
div
jne
xchg
mov
jmp
std
cwde
scas
dec
xchg
lahf
push
pop
inc
xchg
mov
pop
sub
(bad)
out
push
inc
mov
or
jl
dec
pop
sub
pop
add
rcl
(bad)
jmp
mov
mov
xlat
add
jb
idiv
dec
(bad)
out
and
(bad)
(bad)
cmp
cld
pop
adc
jg
mov
leave
mov
push
push
movs
loope
ja
push
jle
(bad)
popf
ja
fnstenv
sub
inc
outs
loopne
xor
mov
jg
inc
int
add
out
pop
loope
dec
cmp
pop
outs
xchg
cmp
or
pop
int
je
jecxz
push
mov
mov
repz
inc
mov
mov
push
jb
icebp
lods
addr16
loop
jb
add
push
inc
pushf
cld
addr16
jmp
ja
add
add
inc
ja
retf
out
inc
cmp
call
ss
pusha
pop
scas
lea
push
loope
pushf
jecxz
les
and
or
in
les
xor
push
push
aas
mov
nop
push
sub
fldcw
repnz
add
cmp
int
jns
xchg
xor
and
push
sti
mov
shl
or
or
fst
rcr
inc
add
or
stos
mov
mov
mov
jge
(bad)
push
mov
addr16
je
cmps
xlat
test
neg
pop
adc
xchg
inc
push
loope
sbb
pop
push
adc
mul
int3
xor
jp
btc
mov
pop
mov
inc
add
aas
push
dec
xchg
imul
jb
sub
xchg
xchg
sbb
outs
pushf
outs
and
push
adc
push
test
mov
call
into
clc
leave
fiadd
sub
test
mov
hlt
jge
nop
cmp
jp
jae
xchg
out
add
xchg
sbb
fwait
dec
test
repz
ss
push
gs
sti
ins
dec
stos
into
and
inc
sbb
adc
fnstenv
call
or
bound
cmps
jae
sbb
xchg
js
repz
in
pop
inc
je
jp
movs
cmps
jbe
stos
(bad)
add
stc
mov
mov
add
push
ja
add
cmp
dec
cdq
(bad)
push
adc
les
push
push
sbb
sbb
push
mov
jmp
jg
sub
fidivr
inc
xor
int
xchg
push
dec
lods
xor
xlat
int
fst
cld
in
push
sbb
js
leave
pop
lods
mov
and
adc
lods
jno
shl
xchg
jecxz
inc
pop
call
ret
xchg
rcr
sbb
pop
fwait
gs
rol
(bad)
push
and
cmps
mov
mov
or
and
dec
cmp
push
shr
add
cmps
enter
and
ret
mov
and
push
mov
push
minps
xlat
xchg
adc
dec
push
push
cmps
ret
xchg
pop
mov
outs
rcl
lahf
xchg
dec
inc
push
pop
pop
xor
ds
shl
xchg
pop
dec
xchg
call
aad
mov
add
cli
mov
xchg
or
xchg
and
scas
xor
pop
mov
test
sbb
jg
push
pop
jmp
not
mov
popf
outs
sti
xlat
cld
sbb
rcr
mov
dec
outs
adc
add
js
cdq
mov
inc
enter
dec
jle
sti
sar
call
loope
cmps
xchg
nop
pop
test
add
pop
sub
cmp
ror
mov
or
sub
add
addr16
pop
push
dec
sub
sahf
cmp
and
mov
mov
pop
out
retf
in
(bad)
ja
mov
stc
mov
or
fs
inc
cmc
jnp
mov
popa
in
xor
test
xchg
pop
pop
and
push
cmps
repz
inc
std
sar
mov
jmp
jle
mov
sub
push
mov
and
mov
add
les
inc
iret
stos
addr16
mov
addr16
fisttp
pop
fst
mov
dec
les
sahf
lods
jge
push
and
outs
jo
fwait
(bad)
sub
fldl2e
arpl
repnz
gs
adc
or
movs
ror
enter
shl
fistp
mov
dec
clc
add
push
lock
xchg
ror
mov
(bad)
in
repnz
pop
xchg
sbb
push
cmp
jp
rcr
push
sub
jno
or
clc
mov
mov
xlat
xor
jo
dec
stos
push
int3
clc
fdivr
aad
sub
or
ficom
fbld
in
sbb
pop
movs
xchg
(bad)
loope
or
inc
jbe
sub
repnz
mov
cmp
inc
sbb
adc
xor
jmp
add
jmp
sub
pushf
dec
pop
cs
mov
xor
popf
outs
loopne
sub
xchg
js
fsub
jno
call
inc
ss
pop
fsub
add
add
imul
mov
les
jo
jnp
jp
std
mov
dec
push
and
mov
push
dec
mov
or
push
movs
enter
sbb
jmp
mov
jo
xor
add
xor
mov
popa
xchg
(bad)
sub
arpl
inc
loope
sar
(bad)
rcr
(bad)
xchg
pushf
les
add
test
adc
clc
dec
les
scas
and
outs
cmps
loopne
mov
out
push
cmps
imul
cs
push
data16
je
add
push
mov
push
pop
aaa
dec
add
loop
scas
stos
movs
mov
mov
pop
mov
pop
js
mov
push
xchg
add
aad
inc
aas
mov
scas
imul
shl
sbb
jne
cmp
test
dec
fld
jne
cdq
jmp
(bad)
(bad)
inc
data16
sbb
or
mov
xchg
jge
sub
mov
cmps
mov
int
xchg
xor
pusha
lahf
inc
je
pop
mov
out
sub
jg
addr16
dec
mov
push
xor
stc
test
lods
mov
mov
adc
(bad)
pop
push
lahf
std
mov
xor
or
int
icebp
arpl
mov
add
push
sbb
jp
les
mov
lods
mov
inc
retf
(bad)
sahf
and
daa
aam
xor
push
(bad)
fild
xchg
lock
dec
bound
inc
mov
push
mov
popa
dec
sbb
push
push
stos
arpl
rcr
fcomp
mov
(bad)
xchg
sbb
(bad)
cli
rol
jno
inc
loop
cld
test
push
dec
xchg
mov
ins
jne
pop
movs
repnz
jo
pop
movs
push
xor
cdq
cmp
push
add
mov
call
data16
rcr
xchg
cmps
out
inc
(bad)
jnp
imul
js
sub
leave
mov
cwde
fmul
leave
xchg
sub
pusha
inc
jg
mov
jp
inc
in
icebp
hlt
xchg
cmp
pop
and
ins
sahf
(bad)
ins
lods
cwde
jne
sar
inc
aas
dec
imul
adc
mov
(bad)
fiadd
add
retf
push
jg
sub
dec
movs
sub
add
int
jnp
mov
out
retf
pop
mov
popa
pop
je
cmp
hlt
cmc
push
mov
retf
aas
add
xor
jmp
pop
xchg
cwde
mov
cmp
mov
(bad)
(bad)
retf
inc
ss
jg
and
inc
sbb
pop
rcr
jmp
fwait
mov
xor
aaa
inc
arpl
or
cmp
cld
in
sub
push
cld
jnp
mov
sub
pop
pop
fcomip
sbb
jl
mov
inc
stc
shl
dec
sub
out
or
sbb
add
pop
adc
and
mov
push
sar
nop
hlt
imul
pop
push
jmp
enter
sub
add
dec
outs
sbb
mov
cmc
xchg
push
gs
inc
lods
cmc
retf
mov
sbb
pop
ins
ja
dec
mov
stos
sbb
dec
mov
test
nop
push
cmp
mov
xor
mov
or
in
loopne
shl
aam
dec
fistp
in
loop
dec
fldenv
xchg
mov
xchg
loopne
mov
pop
jp
pop
sbb
xor
in
dec
scas
loop
mov
jmp
pop
cmp
lods
sbb
push
fcomp
push
pop
iret
jp
adc
add
bound
sub
add
cmp
jne
mov
out
call
rcl
loope
mov
jge
mov
cmp
inc
call
or
pop
cmp
lods
pop
inc
sbb
bound
push
push
dec
push
retf
dec
mov
cmp
out
dec
xchg
repnz
push
scas
repnz
fmul
pop
fwait
mov
nop
stos
enter
sub
inc
retf
pop
adc
mov
add
cwde
sbb
xchg
push
fsubr
stos
mov
push
add
pop
clc
sbb
sub
icebp
adc
cmps
ret
push
and
mov
add
dec
cmp
(bad)
movs
out
xchg
pop
nop
mov
mov
(bad)
pop
adc
mov
xlat
clc
mov
pop
test
jbe
popf
imul
vpunpckhdq
es
cmp
mov
ror
jns
aas
in
xchg
cld
es
dec
add
inc
retf
push
aad
and
stc
mov
in
jnp
cmp
cmps
imul
pop
or
mov
push
arpl
gs
jmp
xor
adc
icebp
or
push
nop
cmc
ins
fiadd
outs
mov
call
jl
sub
pop
sbb
call
pop
mov
retf
sbb
imul
dec
jl
sbb
movs
jns
mov
mov
xchg
adc
bound
cmp
xchg
shl
add
and
adc
in
or
mov
mov
in
mov
mov
push
retf
(bad)
(bad)
mov
iret
fimul
inc
cwde
inc
out
inc
icebp
push
(bad)
pcmpeqw
mul
lahf
mov
aaa
sti
mov
sub
push
lahf
cmps
sbb
sub
scas
int3
pop
out
mov
inc
mov
mov
xor
and
ds
dec
cmp
xchg
popf
cmps
jne
sar
je
loop
cmp
or
mov
lahf
cdq
adc
push
xor
or
test
shl
xor
iret
pop
repz
push
sub
outs
dec
xchg
pusha
fwait
add
iret
xor
inc
jg
and
cld
jle
jge
mov
mov
mov
es
pusha
dec
test
mov
mov
popf
(bad)
jmp
ja
retf
fild
out
sub
pop
ret
adc
adc
inc
cmp
rdpmc
gs
jg
icebp
fadd
call
dec
inc
xchg
sub
ret
and
ss
in
xchg
and
push
jns
js
mov
mov
dec
xchg
mov
jmp
js
aaa
sub
jmp
jmp
fadd
inc
add
movs
popf
pop
dec
std
ret
repnz
imul
in
sub
lea
(bad)
add
push
in
iret
jns
jnp
neg
mov
or
inc
gs
adc
adc
xchg
mov
test
scas
cmp
pop
jmp
sti
js
adc
lods
retf
or
mov
fdivr
add
jecxz
movs
cmp
xchg
shr
enter
pop
fdivr
mov
and
adc
aam
out
mov
jmp
repnz
in
xchg
push
hlt
sub
pop
movs
xor
sub
aad
xor
jp
(bad)
std
rcl
shr
movs
fs
jnp
sub
out
inc
mov
int3
add
cli
mov
xor
push
pop
mov
push
sub
pop
aas
push
inc
dec
jg
ins
sub
mov
jo
cld
push
pop
mov
inc
mov
in
sbb
imul
sub
outs
jbe
pushf
push
mov
inc
dec
xor
ss
fwait
pop
jns
lea
sub
enter
dec
sub
adc
pop
icebp
popf
sbb
repz
ret
sub
sbb
push
mov
mov
vpaddsw
pop
mov
fsub
mov
cmp
cmps
loope
mov
lods
std
cmps
add
es
dec
inc
push
sbb
in
outs
sbb
push
leave
in
jne
jl
or
js
jl
fst
cmp
in
sbb
pop
das
cmp
sub
int
add
jnp
clc
(bad)
hlt
and
(bad)
in
jg
div
popa
push
mov
jl
pinsrw
arpl
push
jns
pop
and
inc
pop
jo
pop
fadd
popf
sar
lods
or
int3
fidivr
xchg
xor
inc
pop
rcr
or
(bad)
dec
sbb
xchg
das
xor
adc
fmul
int3
movs
xchg
pop
pop
int3
jg
test
mov
test
aam
mov
or
push
mov
pop
sub
cmp
mov
or
sbb
mov
mov
pushf
fisttp
sbb
cmps
dec
jmp
fld
(bad)
repz
and
mov
or
jno
inc
pop
or
ja
jg
sbb
test
xor
jae
stos
push
sbb
pop
enter
adc
inc
jle
adc
fidivr
scas
sbb
jne
cld
mov
inc
pop
mov
cmps
mov
dec
push
dec
push
enter
dec
in
dec
ja
mov
pushf
lahf
push
loope
jbe
xor
pop
cs
xor
sub
loope
int3
arpl
stc
pop
sub
test
mov
dec
outs
aam
int3
mov
daa
call
mov
fs
std
xchg
test
scas
add
mov
pop
xchg
jle
push
add
jle
mov
sar
dec
xchg
dec
pop
add
rcl
lods
mov
and
mov
add
les
fdivr
or
clc
xchg
repz
fwait
jp
lods
xchg
xchg
pushf
pop
ror
push
repnz
push
ficom
jnp
bound
js
dec
push
sbb
xchg
adc
adc
sbb
mov
fs
mov
cmps
sbb
push
and
out
daa
stos
repnz
mov
mov
cld
nop
out
mov
outs
cmps
aam
mov
aas
add
pop
inc
movs
ret
inc
aaa
dec
or
fadd
jl
rcr
cmp
inc
dec
fwait
shr
into
pop
cmp
ins
cdq
cmps
adc
and
lahf
mov
cmp
xchg
or
cmp
xchg
push
jo
stos
dec
add
cmp
adc
ja
imul
jmp
mov
mov
imul
xor
ficom
ret
xor
enter
repz
jae
(bad)
ja
cmp
fs
das
js
sub
cmp
mov
xchg
rcl
cmp
ins
xchg
aam
inc
adc
call
add
mov
pop
aaa
in
in
adc
scas
mov
stos
cli
adc
sar
jg
out
mov
mov
mov
pop
push
repz
mov
dec
add
push
sub
out
imul
push
inc
xor
mov
push
rcr
adc
fwait
pop
sub
repz
rcl
dec
mov
loope
cwde
xchg
cmp
fstp
adc
pop
push
sbb
lods
scas
sbb
sub
sbb
push
ins
xor
cmp
or
fcom
lock
and
mov
test
gs
pushf
mov
cmp
xor
clc
or
pop
rcl
shl
cmp
jne
cmp
cwde
mov
mov
js
xor
fs
aas
cmp
(bad)
mov
test
adc
test
jno
clc
setg
icebp
mov
popf
iret
jne
inc
jge
data16
pushf
adc
sub
jo
add
mov
pop
xchg
jbe
cmp
(bad)
std
mov
outs
push
retf
es
fild
adc
lods
enter
mov
jg
rcr
xor
fldcw
pop
xchg
stos
cwde
and
mov
mov
and
jo
outs
in
test
hlt
(bad)
dec
and
mov
js
pop
and
cmp
mov
js
push
pop
pushf
pop
mov
xchg
push
ss
cmc
or
mov
push
dec
cmp
jecxz
fcomp
cmp
jae
gs
push
cmp
fmulp
adc
fwait
lods
inc
xor
adc
jecxz
outs
fsubp
dec
sbb
test
and
mov
(bad)
xor
jno
xchg
stos
bound
push
cwde
and
jmp
add
mov
sub
imul
mov
cmp
in
add
sti
xchg
aas
jno
jmp
pop
jo
xor
adc
rol
mov
(bad)
out
jge
fiadd
outs
aad
jmp
test
sub
ror
(bad)
mov
aaa
inc
cld
std
arpl
push
adc
es
push
pop
push
cs
sub
fsubr
mov
sbb
sub
or
nop
scas
mov
pop
shl
cmps
daa
mov
pop
hlt
jns
push
fisub
mov
outs
aas
inc
movs
int
movs
fistp
arpl
push
movs
dec
xchg
cmp
fucomi
pop
add
out
push
xor
pop
sub
addr16
or
lahf
push
out
scas
mov
nop
pop
test
add
mov
xlat
mov
lds
and
clc
pop
out
repz
daa
cld
push
push
pop
int3
cmps
dec
sbb
mov
movs
add
int3
jmp
shr
popa
jnp
inc
daa
rcr
int
dec
outs
(bad)
cmp
mov
sti
pusha
lods
mov
mov
loope
xor
hlt
bound
inc
fcmove
jecxz
jg
sub
dec
mov
sub
dec
pop
inc
out
pop
push
xor
mov
enter
lahf
neg
je
hlt
pop
fwait
imul
ror
(bad)
fst
addr16
scas
jge
xchg
ss
lds
pop
inc
jmp
inc
in
mov
movs
in
xchg
cmp
movs
inc
sbb
aaa
fwait
ins
imul
lods
ret
jb
pop
test
mov
ins
lea
mov
aaa
inc
js
sub
ins
push
xchg
aad
mov
in
test
xor
pop
pop
mov
mov
inc
pushf
pushf
push
pop
jne
movs
and
aam
jbe
call
and
xchg
punpcklbw
mov
push
imul
addr16
stos
aaa
mov
lods
xor
ds
xor
enter
and
outs
push
retf
cmp
test
cmp
mov
and
fwait
mov
fdivr
fild
mov
sub
in
scas
ret
pop
push
jno
cli
adc
cmp
push
je
mov
adc
mov
repnz
mov
cmps
fistp
push
ficom
popf
xlat
jns
push
loop
pop
test
daa
mov
mov
cmp
clc
dec
sbb
mov
xor
pop
into
test
dec
stos
xor
jg
jnp
pop
ja
or
sahf
pop
arpl
mov
icebp
mov
or
out
lahf
pop
les
mov
mov
repz
fstp
jb
inc
hlt
inc
jmp
cmp
dec
add
dec
add
pop
mov
pop
imul
mov
pop
inc
dec
pop
xchg
adc
xchg
mov
xor
sbb
jns
fmul
sbb
sbb
pushf
inc
sbb
adc
sahf
ret
pop
or
fbld
xchg
retf
imul
mov
push
pop
xor
inc
fidivr
dec
lock
scas
and
inc
mov
xchg
xor
loope
inc
ins
repnz
xchg
xchg
je
retf
or
loop
pop
adc
jnp
dec
in
call
movs
dec
push
mov
adc
daa
add
out
sbb
fadd
push
sbb
dec
mov
cdq
sti
jg
ss
cmc
dec
jb
lods
or
enter
add
sbb
and
pusha
pushf
imul
pop
push
mov
cs
jne
cld
call
sar
out
mov
mov
sub
jns
dec
mov
mov
cdq
inc
cmp
xchg
(bad)
int
aad
addr16
and
jp
mov
pop
movs
mov
push
inc
div
emms
(bad)
aad
mov
lahf
call
call
push
mov
jne
push
inc
pop
(bad)
stos
cli
rol
adc
push
dec
adc
fmul
pop
fcomp
sub
call
jns
mov
es
sub
hlt
adc
xchg
imul
into
adc
int
popa
gs
mov
adc
push
pop
mov
in
push
sbb
call
leave
xchg
out
pop
add
jmp
push
or
mov
sbb
jp
or
outs
icebp
dec
arpl
sub
mov
mov
xor
cs
mov
(bad)
sub
(bad)
sbb
call
and
xor
xor
cwde
or
pop
inc
xchg
mov
push
mov
mov
inc
loopne
xchg
jge
fadd
jge
xadd
mov
dec
pop
fisttp
push
adc
call
pop
in
and
jmp
sub
dec
xchg
mov
add
in
es
jmp
dec
(bad)
pusha
in
mov
sub
xchg
mov
out
sub
lods
or
nop
call
xor
push
xlat
push
dec
xchg
inc
dec
aam
frndint
loop
mov
movs
xlat
or
cmp
repnz
repz
cmps
jl
fucomi
out
cld
repnz
shl
dec
push
mov
ret
pop
(bad)
jge
xchg
es
push
sub
push
jb
adc
test
and
cmps
bound
cmp
fnsave
test
retf
jne
cdq
dec
dec
adc
xchg
xchg
aaa
xchg
in
add
sub
(bad)
idiv
clc
mov
and
daa
outs
stos
inc
stos
loop
out
xor
add
jne
stos
sub
mov
cmps
test
int
(bad)
pop
(bad)
push
pop
xchg
push
xor
cld
ja
jnp
mov
ss
cdq
mov
xor
pop
add
loopne
fucomi
arpl
in
xchg
out
and
mov
push
xchg
into
cmp
cmp
fild
fiadd
adc
rcl
pop
test
(bad)
pop
shl
adc
cwde
adc
and
lahf
sbb
pop
test
popa
mov
idiv
sbb
pop
mov
enter
sbb
nop
mov
int
adc
cld
or
cmp
xor
and
fnstcw
xor
xchg
sub
int3
jo
scas
pop
pop
push
sahf
lahf
pusha
sub
add
enter
cmp
aas
push
adc
xchg
test
jecxz
std
and
call
cmp
mov
stos
shr
call
sbb
jnp
mov
xchg
push
rol
inc
outs
mov
inc
mov
rol
mov
push
scas
sub
movs
mov
mov
jnp
addr16
(bad)
imul
(bad)
adc
int
rcl
(bad)
out
adc
dec
xchg
outs
sub
ins
stc
rcl
mov
cmc
cmc
bound
dec
push
jo
into
inc
xchg
div
rol
xchg
xor
push
jmp
in
dec
test
(bad)
pop
outs
enter
mov
ret
jg
dec
(bad)
leave
jo
lods
stc
mov
jnp
mov
dec
fld
fst
push
pop
scas
and
jbe
mov
cmp
lods
retf
mov
jb
sbb
std
or
(bad)
movs
pop
sub
xchg
scas
loope
sub
shr
popf
add
test
xchg
lods
aad
jbe
and
cwde
mov
cmp
add
xlat
loop
rcr
or
cwde
xchg
(bad)
hlt
sbb
xor
cmc
mov
sti
push
adc
adc
xchg
les
test
addr16
mov
arpl
sbb
ja
(bad)
pop
jns
pop
call
aaa
loopne
mov
add
jne
jb
sbb
pop
sub
push
rcr
rol
or
cmc
dec
repnz
pop
js
popa
(bad)
and
iret
ss
mov
daa
pop
test
stc
loope
mov
stos
cmps
fistp
xor
xor
test
(bad)
and
aaa
sbb
fistp
aaa
mov
pusha
div
pop
and
xor
push
iret
lea
mov
ja
iret
cwde
push
push
rcr
inc
sbb
repz
mov
adc
add
pop
repnz
add
idiv
out
lods
mov
jl
stos
not
test
mov
shl
dec
mov
cmp
icebp
mov
not
outs
rcl
xchg
fs
cmp
repnz
dec
cmp
div
or
adc
xor
inc
dec
shl
mov
inc
and
ror
arpl
inc
lods
fild
xor
and
sbb
xchg
cmp
stos
(bad)
cmp
stc
inc
sub
jne
mov
inc
add
adc
cld
ror
adc
(bad)
ss
in
xchg
dec
sahf
je
lods
sub
fimul
scas
cmp
push
adc
and
xor
add
loop
xlat
lea
adc
sbb
ja
call
div
adc
into
cmp
sar
das
loopne
push
or
cmc
sub
add
sar
pop
out
ja
pop
movs
cld
fstp
stc
loopne
fwait
retf
shr
inc
cmp
lods
xor
aam
arpl
pop
icebp
pop
stos
daa
out
addr16
bound
push
in
sar
or
mov
(bad)
xor
cdq
lods
movs
sar
jecxz
push
fmul
push
pushf
xchg
in
jg
ja
jmp
dec
arpl
arpl
sub
icebp
add
jp
fnsave
and
or
adc
mov
push
dec
sbb
neg
or
xchg
mov
dec
cmp
pop
mov
movs
pop
movs
inc
xchg
jmp
inc
push
aam
mov
inc
and
das
jne
sub
hlt
and
inc
out
inc
xchg
add
loopne
ret
or
aam
ret
int3
shl
sub
or
xor
fadd
call
aaa
adc
mov
ins
sbb
sbb
cmp
lahf
jle
pop
add
mov
lock
test
ja
xchg
outs
test
ret
lods
adc
adc
and
pop
not
das
jne
pop
adc
mov
mov
jo
jecxz
lahf
sbb
cmps
ret
cmp
dec
mov
mov
xchg
imul
jbe
dec
inc
sbb
jo
test
mov
mov
inc
push
cwde
sub
pusha
(bad)
fbld
shl
lods
fdiv
lock
and
call
scas
pushf
pusha
sbb
pop
and
das
mov
add
sbb
sbb
inc
sbb
add
stc
lds
push
xor
out
repz
lds
push
hlt
add
ss
dec
adc
jmp
scas
loope
retf
sbb
aas
dec
loopne
aas
push
sub
out
jle
imul
and
loop
(bad)
xchg
sub
and
stos
xor
or
bnd
cs
ds
xchg
xor
(bad)
les
inc
icebp
push
pop
or
xchg
ret
das
cld
adc
fdivr
ret
adc
sub
pop
sbb
lods
mov
cmp
cmp
sbb
xor
mov
mov
(bad)
pop
or
xor
cmp
adc
rcl
xchg
(bad)
nop
sbb
aad
fiadd
and
shl
(bad)
icebp
imul
sub
dec
lahf
jbe
loope
inc
popf
iret
mov
frstor
cmc
mov
pop
mov
lahf
sub
(bad)
stc
mov
iret
sbb
fistp
scas
cmps
mov
mov
mov
fild
test
jns
in
xlat
fldenv
or
cmp
fwait
sbb
loope
iret
dec
jno
dec
jnp
dec
adc
cld
cmp
dec
mov
out
add
rol
mov
(bad)
(bad)
xchg
leave
inc
jno
pop
mov
mov
xor
pop
shr
dec
popa
xchg
out
ins
ret
xor
lock
inc
scas
stos
pop
pop
dec
or
sub
xor
mov
clc
dec
(bad)
into
xlat
popf
scas
popa
add
add
ja
int3
pusha
mov
int3
pusha
(bad)
pushf
popa
imul
inc
shr
adc
(bad)
out
mov
sti
retf
loope
push
xchg
push
push
jb
add
xlat
dec
push
and
outs
inc
cmp
aas
inc
pusha
cmps
cmc
test
or
fisubr
and
and
mov
jle
or
call
push
jg
push
jb
add
mov
ja
aam
iret
data16
loopne
sub
dec
or
int3
dec
ins
rcr
(bad)
ds
test
enter
push
inc
out
(bad)
bound
aad
or
xchg
xor
loopne
xchg
mov
aaa
leave
pushf
mov
sub
jl
cwde
jne
(bad)
mov
icebp
push
stc
inc
mov
in
call
add
jg
cmp
push
sbb
dec
inc
inc
dec
addr16
(bad)
or
iret
rcr
sub
(bad)
sbb
dec
adc
push
mov
push
add
xchg
add
aas
xor
xlat
cmps
jecxz
dec
sub
or
ins
xor
pop
call
jmp
or
call
test
sbb
mov
xlat
jmp
and
adc
or
dec
std
(bad)
xor
ret
adc
es
popa
dec
add
lods
movs
lods
les
dec
aam
pushf
ror
push
xor
(bad)
push
mov
pusha
repnz
xchg
loopne
iret
ds
push
call
and
jle
dec
xchg
xlat
(bad)
jb
add
mov
(bad)
cmc
retf
mov
data16
dec
cmp
pop
mov
sub
dec
pop
lea
push
xchg
sub
enter
cmp
scas
cmp
arpl
(bad)
mov
and
inc
cmc
(bad)
loopne
movs
cli
inc
fs
rol
pusha
or
outs
arpl
xchg
sub
pusha
bound
add
or
and
inc
push
outs
cmc
mov
sub
mov
or
dec
out
ins
dec
mov
inc
test
stos
clc
int
sub
(bad)
in
lea
jb
sbb
cmp
mov
(bad)
sbb
daa
xchg
adc
dec
jns
bnd
mov
cwde
test
lods
mov
push
imul
jae
lods
mov
(bad)
repz
into
lahf
cmc
sar
mov
popf
push
fsubr
jmp
mov
mov
out
in
psrlq
jecxz
cmps
test
retf
movs
(bad)
bound
popf
and
jle
add
xor
es
sbb
push
or
cmc
xchg
push
xchg
pusha
fistp
rep
sub
jl
les
sub
inc
pop
push
mov
popf
cmp
stos
pop
loopne
inc
mov
xor
inc
pop
push
mov
sub
mov
pop
cmc
mov
and
cmp
das
in
inc
nop
cmp
cmp
or
push
sub
pop
shr
div
cmps
jmp
gs
cs
stc
icebp
cli
jne
jge
sbb
sbb
gs
sub
mov
outs
pop
add
push
nop
mov
push
dec
sub
push
jno
push
dec
aam
mov
mov
outs
cmp
inc
inc
add
mov
das
into
or
pop
add
jl
mov
mov
adc
xor
jbe
ret
push
rcr
outs
in
cmps
test
mov
clc
push
ret
adc
mov
mov
push
lods
jnp
jns
ins
into
leave
add
shl
xor
fisubr
xchg
shl
daa
repnz
pusha
dec
xor
mov
sbb
cmp
dec
mov
ja
adc
add
jne
jbe
mov
mov
shl
jp
mov
or
cmp
repz
pop
popa
adc
cmps
retf
cwde
adc
mov
mov
aam
sub
dec
mov
pop
jno
xor
dec
mov
mov
mov
lods
jmp
mov
retf
pop
inc
into
sub
ret
dec
mov
movs
push
sub
out
retf
ss
xchg
retf
hlt
in
cmps
mov
sar
cli
pusha
sti
enter
cmp
mov
cld
cld
jecxz
dec
mov
and
jle
and
inc
mov
sti
out
ret
jno
add
lea
test
sbb
cmp
(bad)
clc
or
repz
(bad)
pop
lock
mov
adc
fadd
popa
or
popf
xchg
and
or
or
or
cmp
mov
dec
xor
lds
push
fcmovnu
pop
push
retf
add
cs
rcl
cmp
inc
(bad)
vpmullw
ins
mov
jns
(bad)
in
in
and
std
sahf
mov
int
mov
aam
mov
outs
cmp
dec
or
jne
push
jmp
dec
shl
sub
clc
push
frstor
jge
test
pushf
adc
jno
mov
and
sub
mov
mov
call
clc
lock
jmp
mov
rcr
sub
push
aaa
stos
ret
sbb
movs
push
mov
inc
int3
cmps
in
aad
mov
ret
(bad)
out
ss
lahf
fldenv
shl
and
movs
popf
loopne
inc
out
cmp
mov
and
xchg
aad
int
add
add
(bad)
push
jns
hlt
in
jecxz
mov
icebp
push
imul
pusha
std
dec
sbb
jo
pop
clc
jle
mov
ret
arpl
dec
imul
add
aad
les
stos
mov
and
xor
push
push
push
adc
or
pop
cmp
cmovbe
nop
out
fldenv
dec
scas
call
fld
repz
inc
adc
or
(bad)
lods
push
jl
ins
je
jl
add
or
jns
dec
(bad)
jge
test
arpl
mov
add
jnp
call
inc
movs
arpl
xchg
jb
arpl
in
jecxz
pop
sub
cmp
dec
xchg
mov
out
jns
fs
fstp
jnp
ds
adc
stc
inc
or
out
xor
popf
inc
and
repz
stos
jmp
sbb
adc
push
aad
fisub
test
call
and
xchg
daa
nop
cmp
xchg
xchg
stos
push
ficomp
sbb
fld1
hlt
stc
rcr
gs
(bad)
das
sub
sbb
mov
sub
leave
mov
rcr
shl
xchg
adc
push
(bad)
fcom
xor
or
mov
jae
sub
xchg
jl
pop
pushf
push
cmp
push
adc
iret
sub
arpl
cli
inc
adc
sti
xchg
fs
jb
rol
fidiv
shr
mov
in
push
pop
dec
popa
std
fild
call
in
push
jg
jg
in
cmp
mov
push
xchg
(bad)
dec
into
mov
nop
in
dec
mov
add
xchg
xor
rcr
inc
push
jle
sti
or
sub
add
cdq
lock
xor
mov
neg
lock
ror
aad
mov
jmp
pop
inc
mov
cmp
daa
shr
retf
push
xchg
jl
int
push
mov
mov
scas
fwait
pop
lea
push
sbb
clc
jnp
push
jnp
and
cmp
xchg
pop
loopne
jmp
fimul
enter
sbb
arpl
inc
das
test
scas
mov
int
pop
or
jle
out
movs
xor
or
jp
(bad)
shl
mov
xchg
pop
jae
mov
fisubr
xchg
fbstp
jecxz
mov
and
ret
mov
xor
jmp
and
into
leave
das
and
mov
jl
ret
(bad)
fdivrp
ret
jbe
push
nop
jb
jne
rcl
pop
jo
sub
jb
sub
pop
mov
enter
or
pop
and
mov
ins
and
ja
xor
sub
inc
add
cmp
sub
mov
xchg
cli
leave
(bad)
mov
das
sub
mov
rcr
sbb
cmc
vpunpckhwd
in
hlt
mov
pop
cld
outs
push
neg
test
fs
ins
pop
adc
scas
jb
jne
push
(bad)
in
popa
mov
jmp
push
out
sbb
aaa
lea
mov
and
leave
jno
mov
imul
fnstcw
je
sbb
sahf
pop
shl
sub
in
mov
xor
and
fstp
hlt
ror
and
imul
js
(bad)
push
mov
arpl
and
je
ror
pop
cdq
fmul
sub
enter
sub
add
inc
movs
pop
xor
stc
neg
xchg
mov
sahf
mov
(bad)
and
ret
adc
mov
cli
das
imul
ss
stc
pop
retf
in
cmp
ins
movs
inc
dec
adc
xor
sub
mov
jl
enter
outs
pop
in
and
sbb
pushf
mov
jp
inc
and
xor
fsubr
and
shl
les
bnd
xor
inc
dec
sbb
inc
(bad)
jbe
scas
rol
sub
mov
inc
mov
mov
ficomp
jno
xchg
and
xor
test
adc
js
or
fbstp
into
iret
call
iret
jno
add
mov
xor
fcomip
sbb
mov
cmp
or
out
inc
mov
std
mov
shl
movs
xchg
adc
mov
fs
out
or
adc
lods
sbb
cmp
dec
xor
lods
dec
(bad)
cdq
sbb
push
xlat
in
jl
jmp
sub
mov
mov
xchg
adc
mov
mov
das
test
loopne
iret
dec
jmp
mov
jne
lods
dec
das
push
cmp
lahf
cli
mov
sbb
jns
lods
mov
xlat
(bad)
fdiv
push
daa
xor
pop
jl
jge
mov
daa
dec
ins
inc
fiadd
cmp
popf
mov
popa
push
(bad)
aad
jmp
into
(bad)
cld
dec
or
xchg
mov
sub
leave
outs
sub
adc
das
sub
test
mov
add
pop
je
jae
in
les
nop
pop
test
out
test
sub
shl
mov
sbb
inc
jns
sub
ins
in
dec
pop
lock
pop
aas
mov
jecxz
inc
popa
int3
adc
std
inc
sub
and
arpl
imul
fsub
inc
jbe
icebp
jb
adc
jg
aaa
ret
push
movs
out
repz
mov
sbb
aam
stos
or
lsl
push
je
ret
lds
adc
or
cs
xchg
shl
push
jnp
xchg
xchg
fcomi
aad
pop
cmp
(bad)
int3
or
cs
in
icebp
and
cmp
test
adc
add
fiadd
shl
ins
mov
mov
test
cmp
mov
fnstcw
repnz
in
into
push
add
je
leave
adc
push
cmp
in
fnsave
leave
repz
ja
dec
(bad)
out
jno
adc
(bad)
sub
xor
int3
jns
xchg
dec
test
loopne
iret
mov
sbb
cmp
repnz
cwde
shl
sbb
cmp
test
ja
jbe
out
jns
enter
adc
rol
push
mov
in
in
xchg
outs
pop
inc
call
mov
add
jmp
nop
cmp
cmp
mov
imul
sub
cmp
test
leave
dec
add
sbb
stc
mov
imul
sbb
test
add
stos
not
nop
loop
test
xchg
xlat
dec
mov
into
int
ror
jg
test
cmps
rol
fs
outs
add
mov
sub
sbb
push
les
je
pop
iret
pop
jae
cmp
aam
or
cmc
push
pusha
sub
push
(bad)
ret
adc
or
pop
out
into
ret
inc
jge
add
in
pusha
add
push
xor
stc
inc
shr
dec
enter
test
or
stos
test
xchg
mov
inc
add
jns
loop
retf
sbb
mov
mov
jns
das
adc
mov
pushf
and
outs
mov
jmp
push
mov
(bad)
daa
ret
in
retf
fwait
ret
stos
pushf
(bad)
dec
les
sub
push
xchg
lea
add
xor
lock
ficom
lods
pop
in
aam
(bad)
test
lock
stos
mov
and
(bad)
jle
clc
fisttp
pop
clc
adc
or
sub
push
popa
in
jns
mul
dec
loopne
retf
jl
mov
jno
cs
adc
aaa
outs
mov
jecxz
or
das
and
pop
cdq
jl
pop
add
bound
movs
pusha
push
pop
pop
add
cld
and
adc
aad
data16
repz
mov
inc
adc
les
push
(bad)
fwait
mov
cdq
rcl
sbb
es
daa
dec
movs
cli
mov
ja
inc
loope
stos
fbld
lock
pop
xor
shl
push
fadd
arpl
frstor
cmps
outs
adc
pop
(bad)
imul
in
imul
jle
jge
retf
dec
arpl
mov
jmp
jg
jne
icebp
shr
test
jp
cdq
sub
jne
fcomp
sbb
bound
add
sti
dec
es
push
cmp
adc
mov
std
aaa
cmp
inc
lods
adc
and
jb
sahf
sbb
int3
jge
mov
dec
lds
std
add
dec
push
enter
jp
pop
adc
leave
test
jl
shl
loopne
out
cdq
cmp
jno
cmp
adc
int3
fld
adc
pop
cdq
jge
mov
test
push
ror
sbb
aas
push
xchg
mov
or
dec
mov
retf
or
mov
cdq
scas
push
popa
lea
adc
fisubr
jbe
fcom
dec
cmps
stos
fild
out
or
inc
add
mov
xor
inc
mov
fbld
and
mov
in
or
call
into
sub
xor
test
ret
pop
fidivr
push
mov
xor
test
cmp
jge
cmps
dec
pop
je
call
mov
push
ret
add
(bad)
cmps
(bad)
lds
out
inc
add
stc
jecxz
ins
mov
jo
inc
test
inc
aas
mov
inc
out
fild
inc
mov
inc
(bad)
fmul
fidivr
xlat
hlt
dec
fs
pop
pop
adc
pop
inc
xor
mov
jae
mov
gs
dec
js
pusha
retf
jnp
stos
dec
jnp
push
add
sbb
cmp
out
lahf
and
push
jle
inc
dec
cmc
iret
sbb
or
dec
cwde
xor
adc
nop
cdq
mov
not
push
cwde
popf
xchg
sub
sub
imul
push
ret
and
jl
repnz
sub
test
pop
sub
mov
inc
fsub
aam
adc
cmp
fadd
and
arpl
dec
push
cld
or
cmp
(bad)
cmp
pop
int
ja
in
mov
outs
and
stos
push
mov
fild
in
inc
dec
sbb
mov
push
nop
jns
jge
mov
fmul
and
pop
loope
sub
xchg
mov
xor
mov
add
loope
xchg
cmp
or
mov
ja
stos
retf
fnstenv
jge
movs
mov
fwait
(bad)
mov
dec
pop
je
outs
rcr
fwait
pusha
das
mov
inc
push
mov
stc
test
lock
jmp
cmps
into
je
mov
jle
adc
ror
cmp
cmp
shl
rcr
in
jne
mov
dec
les
pop
out
ret
cmp
daa
cli
xchg
enter
xchg
mov
mov
xchg
inc
adc
aad
out
jno
rol
or
fcomp
mov
or
jle
in
repz
movs
xlat
push
sahf
retf
(bad)
iret
add
push
dec
imul
psllq
fs
ficomp
jg
xchg
call
dec
xor
and
arpl
cmp
jbe
sub
aas
push
retf
or
xchg
adc
jo
mov
(bad)
and
push
xchg
adc
sub
jle
and
cli
mov
test
jmp
xlat
mov
mov
test
jp
cli
xor
fidiv
jb
xchg
ds
stc
scas
xlat
xchg
in
push
or
scas
pushf
add
inc
inc
lods
pop
sbb
fbstp
cld
lea
shl
dec
sub
icebp
and
pop
js
mov
mov
int3
cmp
repz
ja
cli
cdq
adc
xchg
sar
xchg
push
inc
sar
sbb
mov
pop
in
movs
int3
push
scas
sub
jecxz
xor
test
pop
cmp
pop
scas
xor
cmp
pop
pop
cmps
(bad)
(bad)
jbe
(bad)
mov
adc
aam
sub
mov
data16
xchg
iret
cmp
addr16
sbb
movs
mov
jge
addr16
mov
loope
popf
jge
add
cwde
xchg
xchg
jne
ss
test
mov
dec
pop
xchg
shl
aam
push
adc
or
xchg
or
mov
push
dec
inc
mov
mov
lock
mov
xor
or
push
pop
imul
mov
push
xchg
ins
jle
fmul
pop
scas
adc
pop
jns
add
pop
iret
dec
mov
int3
inc
sbb
xor
add
stc
mov
mov
jno
ins
push
nop
or
add
bound
mov
fldcw
xor
in
xchg
push
rol
inc
js
sub
lock
adc
pop
jecxz
loop
js
xor
ror
add
cdq
js
push
leave
cmps
cmps
push
sbb
inc
and
lods
into
imul
sbb
rcl
push
test
push
daa
inc
mov
mov
repnz
push
jo
mov
ss
in
or
mov
mov
and
shl
pop
aad
mov
shr
mov
mov
aaa
pop
out
ficom
add
mov
dec
xchg
mov
pop
push
test
loopne
xor
and
out
jns
mov
mov
aaa
dec
inc
add
cmps
sub
jae
fidivr
sti
jle
popa
mov
cdq
fld
sub
jns
pop
push
repnz
sub
les
fcom
dec
lea
pop
imul
mov
push
push
fwait
sbb
test
into
adc
aam
cli
(bad)
xor
jp
wrmsr
xor
pop
sub
pop
aaa
ja
rcl
das
dec
sti
cmp
popa
loopne
dec
shr
int
mov
fmul
push
ret
rcl
push
adc
and
hlt
pop
test
mov
aas
cmp
pop
xchg
std
jmp
enter
je
out
xor
push
out
je
aam
test
lds
mov
cmp
mov
shl
rol
test
pop
test
xchg
(bad)
cmps
les
icebp
xlat
pop
outs
popf
dec
and
pop
out
stos
int
iret
xlat
int
push
(bad)
cmp
and
pushf
inc
jnp
in
jb
jo
fmul
cli
movs
ror
iret
pushf
mov
jns
cld
fsqrt
xor
dec
push
push
in
adc
(bad)
int
add
pop
pop
jle
imul
or
jmp
xchg
faddp
mov
inc
cmp
adc
lods
pop
sbb
sbb
dec
push
dec
mov
cmc
lock
int3
inc
jg
and
adc
add
out
les
mov
xchg
xor
vmwrite
fwait
sub
push
ins
pop
test
jnp
loopne
xchg
add
rcl
jne
sbb
or
es
or
xchg
aam
mov
xchg
int
outs
lods
pop
stos
mov
cli
sub
lods
cmp
or
pop
in
mov
data16
sub
sbb
(bad)
outs
mov
mov
aas
jmp
dec
gs
(bad)
into
in
dec
out
sub
push
cwde
jmp
ret
pop
lock
push
in
xor
cs
dec
ret
call
pop
sbb
and
inc
push
pop
cmp
adc
arpl
int
or
sar
cld
xor
cmp
out
(bad)
pusha
xchg
jl
or
stc
in
out
cmp
imul
pop
cs
xor
lea
loop
(bad)
and
hlt
rcr
fcomp
in
outs
sbb
push
mov
sbb
mov
ins
fst
push
into
and
je
aam
aad
dec
adc
cmp
clc
sub
cmp
dec
or
call
js
stos
lods
cdq
sar
xchg
mov
xchg
mov
pop
push
push
mov
iret
hlt
pop
daa
test
pop
cmps
cmp
ss
pusha
mov
das
jo
stos
repnz
or
in
jns
clc
and
(bad)
lods
mov
jmp
inc
sar
or
movs
hlt
mov
jbe
fs
repz
hlt
pusha
lods
je
mov
sbb
sub
mov
aas
mov
popa
mov
jne
scas
pushf
and
int3
and
call
mov
popf
hlt
mov
inc
jo
inc
sbb
inc
sbb
fwait
or
addr16
inc
adc
popa
and
ficomp
fisub
out
js
push
cwde
xor
xor
in
(bad)
(bad)
jns
pop
or
ror
bswap
sub
test
inc
loope
and
and
aas
fldcw
inc
dec
mov
xchg
ret
mov
inc
cmps
test
sar
aaa
out
push
or
xchg
mov
sub
mov
icebp
xchg
xchg
jmp
mov
outs
bound
push
cmp
fnstsw
add
dec
rcl
in
mov
rcl
push
adc
loope
mov
xor
and
pop
push
inc
adc
out
sahf
test
ret
lods
jp
push
inc
push
sub
ins
xor
out
stc
push
daa
das
aad
xor
xchg
push
push
jg
cmp
dec
loop
add
sti
sbb
or
add
aas
fiadd
add
in
pop
adc
xchg
js
jmp
pop
xor
and
je
pop
jbe
cmp
adc
addr16
cdq
dec
arpl
in
gs
shr
retf
out
cld
scas
cmc
pop
loope
push
dec
dec
bound
ss
add
cmp
adc
xor
(bad)
mov
retf
(bad)
out
mov
mov
push
mov
out
jne
mov
and
jno
push
aas
mov
jmp
xchg
and
int3
call
sti
dec
sub
push
scas
lock
xchg
sub
mov
add
ins
dec
movs
push
paddsb
fiadd
mov
addr16
pop
inc
xlat
and
dec
jno
pop
cli
mov
dec
dec
xor
and
push
mov
sar
loop
pushf
push
bound
cmp
push
mov
or
adc
mov
sti
sahf
jnp
lds
push
jae
xor
mov
xor
popf
hlt
inc
mov
(bad)
pop
pop
mov
cmc
pop
outs
add
cmp
scas
mov
xor
test
ins
(bad)
adc
mov
outs
movs
xor
sbb
(bad)
call
shr
push
addr16
mov
inc
aaa
std
jae
xchg
repz
popa
pop
jne
aaa
mov
ret
xchg
test
clc
mov
pusha
add
shl
mov
call
loopne
outs
sahf
loopne
mov
nop
xchg
inc
cmp
jecxz
cld
or
popf
mov
aad
imul
xor
push
mov
loopne
cmp
sbb
(bad)
dec
inc
inc
xor
das
idiv
std
sub
add
pop
aad
mov
pop
cli
cmp
pop
xchg
stos
jmp
imul
sbb
or
ja
xor
cmp
sti
sub
push
mov
push
mov
in
inc
retf
adc
push
cmps
mov
test
push
jo
dec
cmp
scas
shl
cmps
adc
cld
dec
mov
pop
jmp
and
(bad)
fdiv
jnp
clc
ins
xor
cs
inc
ret
je
sahf
push
popa
cwde
jnp
cmc
pop
out
mov
cmp
inc
sub
cmp
mov
pop
int
(bad)
rcl
lods
fcomp
rol
lods
pop
imul
inc
cmps
in
sbb
adc
mov
and
popa
daa
jo
aaa
jle
jns
ins
call
rol
lds
in
sti
push
add
arpl
xchg
mov
mov
int
sbb
scas
icebp
gs
ja
(bad)
neg
(bad)
fdiv
dec
sub
cmps
test
pop
cwde
xor
lea
inc
jae
sub
pop
and
inc
(bad)
adc
mov
mov
mov
sub
(bad)
retf
in
or
sbb
daa
xchg
scas
xchg
ja
push
push
push
ret
xor
lock
or
cmp
rol
mov
icebp
fucom
mov
and
movs
lea
clc
ret
aad
adc
std
mov
jg
cmp
loope
and
(bad)
cmps
xchg
cmp
rol
aam
fcmovu
sti
das
test
push
loopne
rcr
cmps
fst
pop
dec
test
xchg
test
mov
sahf
inc
data16
xchg
fimul
cmp
pop
and
dec
adc
test
add
call
mov
sub
mov
jbe
sar
data16
test
cdq
sar
sti
jb
pop
xchg
or
sbb
stos
loopne
inc
test
add
movs
xor
mov
jge
stc
in
iret
mov
jno
mov
push
adc
xor
or
fdiv
push
lea
fwait
xchg
xchg
mov
add
rcr
jb
pop
mov
and
movs
dec
mov
add
inc
add
cdq
das
lods
test
dec
ss
jg
inc
icebp
cmp
sbb
aam
adc
sub
push
xchg
rcr
addr16
lahf
push
cli
push
adc
dec
cmp
cmp
out
int
mov
sbb
add
movs
xchg
mov
lods
jl
inc
retf
cmp
inc
jmp
fcmovnu
sbb
sbb
cld
outs
and
push
mov
add
shr
pop
or
rol
jp
xor
or
jmp
mov
cmp
push
xchg
and
adc
xchg
cli
dec
retf
sbb
mov
or
mov
adc
sar
jl
jp
ds
jae
inc
xor
popa
mov
(bad)
jb
stos
cmc
js
and
mov
in
mov
add
xlat
leave
js
mov
adc
push
int3
fwait
dec
add
sbb
loop
movs
xchg
jae
mov
jge
arpl
dec
(bad)
jecxz
cmp
inc
ss
cmp
inc
rol
pop
outs
cdq
push
fwait
sub
inc
jge
or
dec
add
mov
push
jp
mov
iret
sub
adc
(bad)
in
add
lock
(bad)
not
dec
jns
je
mov
imul
mov
scas
xor
scas
push
imul
lahf
(bad)
pop
xchg
jo
or
mov
daa
pop
xchg
adc
pop
bound
repnz
mov
push
mov
add
int
adc
(bad)
outs
aam
cmps
in
jmp
xor
inc
push
mov
mov
retf
jns
int3
icebp
push
fild
mov
add
sub
(bad)
cmps
rcl
inc
push
(bad)
out
cmp
sbb
gs
lods
inc
inc
and
sbb
push
(bad)
repz
out
lods
(bad)
pop
rol
(bad)
(bad)
pop
inc
in
xchg
sbb
jnp
rcr
dec
loope
daa
mov
mov
arpl
inc
push
xchg
cmp
cmps
(bad)
jmp
inc
mov
xor
add
pop
or
mov
pop
mul
popf
add
inc
jp
lahf
push
iret
sub
retf
inc
arpl
mov
stos
movs
sub
test
hlt
xchg
jae
push
jp
push
sub
dec
adc
pop
inc
aam
cs
repz
inc
mov
push
push
jmp
push
jmp
into
jbe
or
in
pushf
out
mov
mov
sbb
push
cmp
fiadd
ds
sbb
push
or
add
scas
inc
cmps
les
add
sar
(bad)
fist
mov
fwait
xor
cdq
shl
ja
mov
gs
sbb
ror
mov
xor
call
xchg
retf
andnps
lods
test
or
outs
sbb
inc
jmp
mov
pop
sti
and
out
and
sub
jno
js
jmp
es
sub
sbb
repz
fcom
xchg
inc
idiv
inc
xchg
(bad)
and
cmc
aad
mov
(bad)
shl
or
push
inc
cmp
mov
scas
pusha
mov
fadd
xchg
mov
sbb
xchg
in
ss
adc
mov
addr16
cdq
rcl
xchg
cmp
(bad)
jno
movs
shr
add
imul
sbb
add
loopne
mov
mov
in
mov
or
call
call
das
pop
dec
(bad)
cli
stos
add
dec
push
rcl
xchg
mov
(bad)
push
nop
pop
push
add
or
in
mov
or
fdivr
inc
mov
int3
in
stc
ss
cmp
(bad)
or
pop
xchg
sub
ret
sub
fcom
(bad)
std
cmp
icebp
fbld
sahf
mov
es
mov
jg
retf
call
icebp
inc
bound
xor
adc
(bad)
stos
jb
cmc
dec
hlt
dec
xchg
sbb
popf
sub
(bad)
or
sub
cmp
inc
fimul
pop
sub
shl
inc
(bad)
fnsave
jns
scas
pop
push
xor
dec
js
sub
pusha
nop
pop
adc
test
push
pop
push
fst
(bad)
jns
jl
and
aas
cwde
inc
mov
fisttp
mov
mov
pop
jl
lds
(bad)
cmc
out
jae
pop
pop
lea
xchg
inc
mov
retf
push
adc
movs
ja
(bad)
sar
jl
mov
es
dec
mov
dec
jmp
cwde
cmp
(bad)
inc
cmp
dec
loopne
push
dec
jge
push
sbb
popf
mov
iret
ja
lock
aam
mov
arpl
lock
call
pop
shl
jne
mov
cmp
inc
and
or
jle
jb
sbb
pop
inc
push
mov
jb
retf
push
add
in
fs
add
and
and
call
das
test
pop
mov
adc
cmp
pop
mov
ins
fild
mov
mov
mov
ins
cmps
mov
div
movs
mov
(bad)
pop
daa
mov
mov
sbb
lds
aad
cmp
pop
fmul
mov
sti
std
stos
push
pop
push
mov
push
retf
(bad)
inc
repnz
inc
or
push
leave
loope
dec
mov
mov
call
js
sbb
sub
(bad)
cld
sub
xor
sahf
enter
mov
sti
mov
mov
pop
push
pushf
xchg
jnp
mov
ds
xor
xor
adc
sbb
lods
lea
cmps
and
xor
mov
sub
cld
(bad)
pop
inc
push
and
jae
xchg
into
shl
retf
cmp
cld
push
xor
(bad)
dec
inc
or
dec
push
(bad)
fistp
sub
xchg
sahf
cmp
sar
arpl
pop
lods
adc
movups
and
(bad)
push
push
les
cmp
xor
or
ds
xor
je
pop
nop
les
clc
jb
push
lock
jb
data16
or
inc
aaa
loop
rcl
push
iret
ins
xchg
xchg
push
fwait
xor
mov
jg
in
or
jne
test
aas
cdq
push
pushf
adc
mov
aas
movs
mov
in
test
adc
jmp
ja
push
jmp
cwde
cdq
jg
fimul
aam
push
mov
aad
and
std
xchg
adc
enter
sub
(bad)
imul
cli
xchg
sbb
sub
cmp
and
xor
mov
and
aaa
cdq
dec
hlt
outs
xchg
pop
div
nop
jle
(bad)
xlat
aaa
mov
cmp
pop
xor
test
inc
jns
xchg
out
mov
mov
add
imul
xchg
int3
xchg
adc
cmps
shl
sar
sbb
xchg
xchg
cmp
enter
mov
adc
repnz
mov
dec
inc
movs
sub
je
jns
push
jns
xor
sbb
int
retf
dec
enter
lods
mov
pop
sbb
stos
adc
loopne
cmp
jle
pop
ret
pop
push
movsx
pop
adc
dec
mov
rcr
pushf
out
or
imul
dec
mov
mov
inc
fcomp
imul
fs
in
call
adc
push
sbb
adc
and
jne
mov
fistp
jecxz
cli
pop
movs
sbb
dec
jg
outs
sti
sahf
or
and
call
lahf
sbb
stc
(bad)
inc
mov
cmp
or
shl
fist
cmp
cmc
iret
aas
mov
aaa
and
(bad)
add
cmps
and
xor
out
pop
retf
push
(bad)
call
mov
cmc
data16
jne
imul
lds
stos
arpl
xor
addr16
fs
dec
pop
jbe
(bad)
xchg
inc
std
(bad)
(bad)
sub
addr16
pop
xchg
cmp
hlt
sti
sbb
ss
mov
dec
aas
xchg
add
cmps
lods
inc
cmps
xchg
push
cmp
stos
cmp
jmp
rol
(bad)
mov
adc
sbb
mov
xchg
inc
out
add
hlt
inc
or
inc
dec
adc
sbb
cwde
loopne
pop
mov
sti
jmp
aad
in
aaa
packssdw
test
cmp
and
scas
and
fcomp
jno
aad
jb
ja
sub
cmps
dec
loope
(bad)
mov
and
(bad)
xchg
inc
dec
leave
ss
lahf
leave
jno
cmp
std
adc
out
mov
mov
loop
pop
dec
hlt
lahf
and
xor
xchg
sbb
mov
icebp
inc
fsub
jne
lahf
jl
fsubr
cmp
bound
xor
pop
cdq
sub
pop
add
jne
(bad)
test
inc
sar
mov
enter
sbb
cmps
nop
stc
dec
mov
xor
mov
push
lahf
js
jp
hlt
cwde
pop
or
loopne
cmp
mov
xor
cdq
test
jge
or
leave
and
xchg
jbe
inc
ja
mov
repnz
loopne
sahf
into
adc
sub
sbb
sub
sub
fwait
jecxz
jbe
jl
pop
cmp
sbb
push
ret
cmp
and
out
jge
sbb
shr
leave
sbb
mov
lods
xchg
clc
jg
inc
nop
fcmovnbe
sub
inc
pop
movs
shr
fneni(8087
and
fidivr
cmp
adc
pop
sbb
inc
ds
cmp
push
mov
mov
clc
sub
inc
dec
stc
xchg
shl
sbb
add
xchg
imul
sbb
je
repnz
xor
sub
cmp
adc
pop
jg
fs
xchg
iret
mov
repnz
dec
(bad)
imul
hlt
jno
push
sbb
xchg
int
xor
mov
sbb
mov
hlt
ror
daa
lahf
pop
les
inc
and
popa
pop
ret
stos
or
dec
inc
cld
rcl
fiadd
and
and
adc
mov
cmp
mov
test
sub
jb
fcom
fcom
daa
mov
leave
ret
mov
xor
pop
int3
pop
cld
cmp
push
out
scas
pop
in
fstp
mov
ins
iret
das
int3
outs
hlt
pop
mov
test
sti
test
jo
jae
sti
xchg
fnstsw
cmp
mov
mov
aad
sar
pop
jb
push
mov
or
add
sub
and
sbb
icebp
(bad)
push
push
xchg
mov
sar
aad
adc
stos
loopne
cmp
test
call
inc
and
repnz
adc
cmp
push
test
fild
add
mov
lods
adc
ins
jl
pop
repnz
stos
add
xor
xlat
cmp
jbe
ror
jecxz
shl
aas
je
sbb
push
push
pusha
add
imul
call
sbb
sub
out
and
movs
push
xchg
or
add
call
jge
pusha
xchg
mov
cli
xchg
rol
loope
pop
push
xchg
mov
xor
lock
fcompp
xchg
pop
adc
inc
xchg
inc
mov
dec
push
inc
sub
or
test
and
ds
xor
call
mov
repnz
call
and
adc
mov
icebp
and
icebp
hlt
daa
jmp
cmp
jmp
mov
dec
pop
sub
cmp
dec
cmp
dec
ret
or
int
mov
cmp
scas
out
cmp
es
dec
aam
and
push
(bad)
push
adc
and
ds
je
stos
mov
sti
stos
add
or
(bad)
pop
jmp
gs
nop
out
clc
push
dec
data16
out
enter
fadd
movs
inc
test
cs
dec
rcl
xchg
push
sbb
dec
push
outs
push
jne
test
pushf
mov
(bad)
jmp
jg
leave
ret
es
cwde
add
or
mov
mov
movs
mov
push
rcr
shl
push
add
iret
loopne
mov
jg
in
dec
ret
in
out
inc
es
and
xchg
int
and
and
(bad)
jbe
dec
imul
mov
sub
mov
leave
mov
and
mov
adc
adc
or
dec
mov
in
mov
fs
add
loope
mov
jbe
sbb
cmp
push
test
icebp
dec
mov
dec
jno
push
pusha
movs
mov
mov
enter
enter
mov
(bad)
std
pushf
jbe
fbstp
repz
cmp
cmp
call
cld
pop
(bad)
movs
lods
mov
(bad)
mov
shl
or
inc
imul
sbb
inc
pop
add
pop
scas
fbld
js
push
dec
cmp
and
jge
fadd
clc
mov
fmulp
fstp
cmp
xchg
or
mov
pop
fs
or
pop
xor
out
ins
and
push
push
sbb
imul
jb
je
fdivr
push
repnz
mov
push
jae
cmc
mov
sbb
outs
push
ja
dec
dec
shl
dec
stos
xchg
and
mov
xor
ret
test
xchg
cs
test
dec
xchg
je
pop
xchg
stos
test
dec
add
push
or
outs
sub
mov
jl
cmps
push
mov
mov
xchg
push
or
test
adc
rcr
xchg
jne
jae
mov
jp
inc
outs
sbb
dec
stc
cwde
mov
test
sub
imul
into
leave
bnd
mov
rol
xor
repnz
push
cs
xchg
pop
mov
mov
jle
(bad)
fadd
cli
push
cs
ins
scas
cmp
pusha
cmps
mov
cmc
cmp
daa
and
add
test
fstp
jns
sbb
clc
fadd
fisttp
lods
jmp
imul
pop
push
sar
fsub
push
push
int
fldcw
js
in
push
ds
into
fnstsw
pusha
dec
cmc
xor
inc
xor
and
stos
inc
outs
and
in
mov
test
test
loop
push
push
out
cmp
imul
out
xor
and
stos
push
das
lock
dec
aam
arpl
shr
or
push
lock
in
mov
xchg
cmp
xchg
adc
call
dec
not
mov
js
mov
sbb
outs
mov
jg
clc
sub
cld
add
inc
aaa
sbb
cmc
xor
shr
or
cs
iret
mov
sbb
fisttp
pushf
mov
mov
(bad)
push
fdivr
movs
ins
adc
enter
sub
aam
or
movs
scas
pop
and
fld
jno
xchg
mov
ins
shl
das
mov
aaa
adc
fldcw
outs
pop
pop
mov
add
pop
dec
nop
jne
cmp
ja
cld
pop
inc
and
jnp
test
sub
scas
fild
jmp
mov
dec
mov
jno
in
shl
jl
leave
sar
xor
enter
jle
xchg
sbb
popf
ins
mov
das
push
js
mov
scas
sub
mov
out
retf
clc
add
pop
shl
push
scas
jge
mov
loopne
dec
out
dec
adc
cmp
inc
in
xchg
jmp
mov
cmp
mov
fsubrp
dec
shr
pop
retf
cmps
adc
movs
mov
push
aam
adc
cmp
loope
xlat
es
cs
or
hlt
lods
ret
ins
mov
pop
into
pop
icebp
cli
mov
movs
cdq
sub
test
dec
inc
movs
mov
call
cld
ror
cmp
cmp
jmp
xchg
add
imul
out
lea
aaa
mov
cmp
iret
(bad)
push
loop
push
jns
adc
and
push
cwde
dec
and
call
adc
adc
movs
cmps
mov
mov
dec
mov
out
not
dec
scas
(bad)
outs
jns
or
xchg
dec
stc
(bad)
xlat
mov
ds
pusha
mov
and
ins
and
jmp
pusha
dec
cmp
fiadd
pushf
test
pusha
hlt
enter
data16
sub
jo
in
call
enter
and
push
adc
mov
enter
xchg
xor
jae
cmp
sbb
inc
inc
hlt
callw
popa
sbb
xor
out
inc
cmp
ror
jle
fsub
cmp
mov
xor
stos
cdq
jnp
xchg
sbb
aam
rcl
hlt
or
or
jmp
test
rol
push
mov
or
inc
jg
pop
clc
adc
cmps
sub
lea
outs
jmp
mov
inc
dec
inc
pusha
jo
arpl
rcr
popa
xchg
jecxz
xor
mov
dec
dec
outs
cmp
jns
int3
xchg
int3
xchg
xchg
adc
repnz
xor
sti
(bad)
sub
and
adc
shl
jnp
sbb
mov
ret
jmp
mov
ja
xchg
adc
arpl
push
lahf
xchg
fcom
cs
rcr
repz
ins
stos
mov
retf
xor
ret
jge
cmovl
lods
aaa
jge
test
xchg
out
pop
fs
ss
movs
cmp
ret
jge
mov
leave
sub
stos
add
cmp
pop
or
stos
(bad)
jae
xor
pop
fxsave
test
mov
repnz
cmps
call
js
repz
mov
das
icebp
call
mov
loop
add
sbb
jne
xchg
and
or
test
push
cdq
or
dec
push
retf
cs
addr16
xchg
push
lods
leave
xlat
mov
lods
lods
les
call
inc
jnp
jg
add
aaa
cmc
xor
pop
mov
ret
and
adc
es
ficom
xlat
cs
jmp
ror
fucomip
(bad)
data16
not
ins
ss
cdq
xlat
rcl
jnp
je
pop
and
sub
movs
add
sar
inc
cmps
dec
mov
repnz
xchg
ins
inc
sbb
out
cmps
ror
pop
pop
retf
test
movs
sub
movs
repnz
jnp
jno
xor
inc
adc
lahf
clc
out
stc
mov
int3
or
cli
aad
fcom
dec
jae
inc
daa
loopne
sub
stc
xchg
mov
inc
loop
inc
lds
std
scas
ins
leave
daa
aaa
xchg
mov
jmp
cmp
push
inc
pop
cmp
jl
inc
pop
ss
mov
and
hlt
call
stos
sbb
imul
push
xor
pop
sub
dec
pop
test
jecxz
repnz
(bad)
jmp
je
dec
xor
idiv
lods
xor
sbb
rol
xor
std
cmp
lock
loopne
bound
and
(bad)
mov
sahf
pushf
out
jns
neg
cwde
aam
inc
jno
ret
sar
(bad)
setge
xchg
in
js
mov
cmp
dec
fwait
fwait
jp
cli
cmp
popf
fst
xor
jl
sbb
push
and
xor
mov
rcr
jp
pushf
and
inc
push
call
dec
mov
js
mov
jg
xchg
(bad)
jmp
inc
sub
call
mov
xor
adc
inc
mov
cmp
pop
push
cli
pusha
movs
mov
scas
pop
jne
stc
mov
jmp
sahf
sbb
xor
in
test
jge
loopne
stos
cs
rcr
push
neg
es
addr16
and
test
jle
daa
loop
retf
ja
lahf
push
das
test
aaa
js
ins
mov
adc
leave
inc
inc
(bad)
aad
and
cmp
bound
ficom
fs
inc
sbb
icebp
sbb
mov
les
xor
lods
mov
pop
sbb
and
sub
out
nop
ret
lahf
jns
dec
aad
add
test
add
add
pop
mov
ror
fdivr
jl
push
repz
mov
lods
sbb
jmp
push
loope
adc
scas
jne
xor
push
and
fld
xor
adc
sub
lock
imul
jno
dec
std
and
loopne
sbb
and
loope
js
addr16
(bad)
jae
xchg
pop
push
pop
jae
pop
mov
push
adc
xor
in
dec
jb
stos
(bad)
call
enter
inc
das
push
or
xchg
dec
repz
mov
loope
nop
jmp
and
stos
lods
aam
leave
leave
pop
lea
call
pop
cmp
sbb
test
mov
ror
ins
jns
in
into
outs
add
outs
cwde
rol
lds
jae
dec
dec
adc
mov
aam
adc
test
jne
pop
mov
push
cmp
push
push
scas
ret
cld
popa
xor
xchg
les
stc
mov
jl
cmp
lods
mov
mov
inc
pusha
bound
adc
inc
adc
dec
jns
in
or
and
test
or
ret
inc
cli
retf
pop
(bad)
push
data16
in
xchg
push
or
into
jecxz
js
addr16
int
daa
mov
sub
in
clc
push
mov
into
sub
xor
dec
(bad)
ret
xchg
or
loopne
shr
cmp
leave
js
shl
dec
movs
ins
fsub
pop
out
jmp
or
je
add
(bad)
retf
xchg
mov
retf
cli
jb
sub
dec
or
inc
dec
(bad)
cmc
cmp
ror
sbb
stos
addr16
mov
test
loop
adc
dec
test
add
stos
ss
adc
or
in
inc
mov
repnz
lds
fwait
pushw
and
xor
jg
jne
xor
cmp
mov
jmp
jo
and
or
push
and
fwait
popf
retf
js
push
xor
or
xchg
pushf
lea
or
arpl
and
stos
lods
jmp
in
(bad)
retf
int
mov
enter
mov
mov
mov
test
cmp
sbb
sbb
lods
cmp
sbb
xchg
dec
mov
sub
hlt
data16
daa
dec
clc
cmc
push
jnp
ror
(bad)
xor
or
sbb
ja
cmp
push
movs
test
cmp
or
les
rcl
int
pusha
mov
je
inc
int3
mov
ds
jg
ss
aaa
ss
in
xor
and
push
jb
mov
pop
neg
outs
int
xchg
push
adc
popa
fst
call
adc
cmc
add
and
lods
sub
cmps
mov
mov
shl
dec
adc
mov
mov
test
arpl
jno
div
or
dec
sbb
jge
cmp
daa
dec
data16
jmp
ja
xor
dec
js
mov
jae
rcl
sub
test
push
mov
div
pop
clc
jge
out
popf
gs
add
aad
cmp
inc
fsub
xchg
in
data16
mov
int
dec
test
jae
inc
aaa
xor
xchg
pop
fiadd
jmp
dec
jmp
jg
jno
push
and
daa
xchg
jb
fstp
lahf
push
push
pop
sbb
cmp
pop
stos
js
lods
mul
leave
mov
loop
das
fs
outs
test
idiv
xor
adc
(bad)
jl
daa
mov
mov
xchg
pushf
sub
cmc
shr
mov
movs
movs
push
dec
jnp
pop
mov
popa
sahf
ins
shl
js
push
sbb
push
xchg
dec
hlt
push
in
pop
xchg
enter
arpl
fisubr
push
mov
cmp
cmps
psubw
xchg
and
test
into
cmps
sbb
fscale
ins
mov
ficomp
mov
repnz
dec
(bad)
rol
jge
shl
inc
cmp
push
jae
sbb
ins
out
(bad)
and
pusha
mov
lds
mov
cmc
and
sbb
cmc
cmp
push
iret
je
ins
movs
pusha
aaa
cmc
cmp
push
stos
cli
stc
pushf
jg
shl
adc
push
sub
inc
xchg
dec
jo
repz
(bad)
jmp
or
mov
add
dec
jecxz
xor
xor
add
mov
push
adc
jb
jle
fst
das
call
xchg
mov
sbb
pop
in
movs
xchg
and
ins
pop
pop
dec
dec
mov
dec
popf
dec
jo
mov
mov
mov
push
movs
sbb
jle
sti
nop
lock
mov
push
mov
sar
jae
cdq
cmc
pop
pop
sar
in
sub
jne
inc
xor
or
jo
dec
cdq
mov
test
loop
or
test
push
fnsave
fisttp
mov
popf
xlat
jno
sub
jmp
jbe
in
sub
ss
mov
(bad)
sar
and
into
movs
jbe
inc
or
dec
cmps
mov
push
repz
adc
mov
sar
add
into
clc
fsubr
gs
adc
cmp
in
int3
fdivrp
push
pop
inc
sub
cmp
imul
arpl
pop
dec
xchg
add
mov
movs
leave
dec
xor
mov
ss
mov
jg
push
jp
mov
aaa
aas
pushf
mov
or
adc
pushf
xor
retf
stos
je
not
lea
aam
mov
sub
fidivr
inc
je
sub
sahf
xchg
add
push
arpl
aaa
fisubr
jg
xor
int3
(bad)
cmps
mov
loop
adc
data16
pop
iret
retf
inc
cmp
xchg
mov
push
jmp
dec
dec
add
test
xor
jp
cmp
push
push
out
inc
pop
inc
xchg
and
movs
xchg
in
mov
imul
lock
mov
fdivr
jb
scas
and
mov
mov
sbb
mov
popa
pop
and
jne
inc
jg
loop
mov
stos
loopne
rol
ss
cmps
pop
xor
(bad)
jp
cmp
outs
outs
jnp
mov
fisttp
test
mov
mov
and
dec
aas
and
sahf
jmp
sbb
or
(bad)
mov
je
add
xor
imul
sub
sbb
loop
enter
or
fimul
loope
cmc
call
jg
aam
and
jbe
(bad)
stos
es
lea
repz
pushf
push
test
sub
push
lds
std
sub
loopne
cdq
fadd
aaa
mov
scas
jns
or
cmp
cdq
push
dec
ret
cmp
test
retf
adc
xchg
scas
bound
jmp
aas
inc
leave
push
scas
pop
pusha
push
add
out
inc
(bad)
and
pop
adc
ret
add
dec
iret
mov
dec
cmc
push
jmp
call
test
or
add
mov
les
sub
mov
dec
ror
jge
leave
inc
imul
and
fist
js
fimul
mov
leave
lods
cdq
rcr
iret
xlat
outs
and
(bad)
jecxz
ret
loope
(bad)
mov
packssdw
xchg
mov
outs
xchg
mov
fwait
mov
imul
jmp
pop
mov
xlat
jmp
aas
mov
add
xlat
clc
(bad)
js
daa
mov
stos
jmp
in
mov
cmp
adc
jo
pushf
outs
call
jmp
inc
push
add
fbld
mov
sahf
sbb
ret
sbb
xchg
sbb
xchg
bound
sub
ja
psubusw
add
lock
cmp
fdiv
icebp
in
mov
retf
sub
ret
ret
xchg
sub
sbb
mov
push
mov
sub
mov
add
mov
mov
add
jmp
push
dec
push
lock
aam
adc
gs
loopne
xchg
loop
(bad)
stos
add
inc
mov
fild
lahf
int3
sbb
(bad)
rol
jecxz
sub
or
sar
sbb
jo
jno
mov
adc
iret
les
pop
movs
mov
bound
addr16
lahf
jl
mov
inc
stos
ds
fistp
aad
or
xor
cld
cwde
jbe
in
test
not
xchg
cwde
test
shl
test
sbb
es
and
test
pop
mov
dec
mov
or
add
cli
jo
mov
in
js
fnstsw
mov
(bad)
fnstsw
mov
push
mov
cmp
icebp
mov
test
(bad)
(bad)
inc
mov
int
inc
inc
and
sbb
adc
out
mov
shl
jne
out
pop
sbb
das
es
cmp
cld
clc
int3
fadd
push
test
or
sbb
pop
or
js
inc
fdiv
mov
mov
loopne
jl
loopne
or
fild
mov
loopne
scas
dec
bnd
pop
pop
jle
ja
and
rcl
pop
pop
sub
hlt
mov
(bad)
loopne
mov
nop
xchg
inc
or
xchg
inc
cmp
or
push
gs
stc
cmp
sbb
into
mov
dec
outs
pop
or
or
loop
fadd
mov
add
stos
(bad)
mov
sbb
add
xchg
and
aas
cmp
push
std
(bad)
ss
mov
dec
push
xor
call
mov
aaa
push
adc
js
(bad)
out
pop
push
sub
and
sub
outs
mov
aam
sub
xchg
icebp
mov
cmp
add
scas
cmc
cmp
arpl
out
clc
cs
inc
test
das
pop
cmp
lea
sbb
int3
daa
adc
cmp
mov
or
sbb
jmp
xchg
mov
aaa
aas
enter
push
lds
push
out
setge
jl
push
push
jge
leave
dec
push
cld
fwait
jecxz
retf
int
imul
nop
frstor
jl
sbb
das
mov
popa
inc
retf
jo
fcmovu
out
mov
jle
fs
out
sub
retf
retf
imul
out
lea
fs
popf
(bad)
inc
test
xchg
jl
stos
jle
and
mov
pop
adc
push
lahf
pop
repnz
mov
add
push
and
cmp
sbb
mov
inc
outs
dec
pop
pop
add
dec
sahf
mov
dec
sbb
cmps
cld
jne
clc
les
pop
dec
adc
jp
sbb
cdq
mov
mov
fsubrp
xchg
sub
popf
dec
pop
int3
xor
retf
jo
push
sbb
dec
jle
fiadd
push
(bad)
popf
mov
adc
mov
int
xchg
mov
fs
dec
imul
push
sar
jmp
cmc
mov
sahf
shl
mov
mov
dec
mov
clc
or
push
int3
test
xchg
loope
mov
sahf
mov
push
jg
xchg
jmp
xchg
add
sahf
out
add
mov
mov
rcr
leave
dec
add
enter
dec
push
hlt
adc
fs
xlat
fild
jo
lods
mov
int3
jge
and
push
mov
mov
rcr
sbb
sub
aam
ss
xchg
mov
pop
repnz
ins
ds
dec
cmp
cs
push
push
das
add
rcl
popf
pusha
xchg
aad
push
in
out
push
jmp
push
(bad)
sbb
out
out
pop
(bad)
fwait
jge
jno
call
inc
sbb
test
pushf
push
iret
call
dec
out
inc
out
or
call
in
dec
add
ds
push
push
ins
ja
cmp
pusha
fld
aam
xchg
and
aam
lahf
lea
outs
not
cmp
cmc
jnp
test
cwde
ror
fldenv
outs
popf
and
pop
ret
cmp
cmps
outs
add
adc
adc
pop
sbb
cdq
sti
jecxz
and
enter
stos
mov
mov
aaa
fwait
das
or
xchg
cdq
lods
sbb
repz
cmc
ds
sub
jle
daa
pop
ret
mov
test
and
fstp
(bad)
ffreep
jmp
(bad)
shl
pusha
lods
mov
sahf
xor
sub
lea
cmp
inc
aam
adc
fdivr
xchg
(bad)
mov
pop
lods
mov
push
dec
sahf
pop
pusha
or
sbb
int
jg
pop
jp
(bad)
loop
mulps
add
mov
hlt
fucom
pop
fcom
adc
or
xchg
cmp
xlat
xor
in
sub
arpl
push
jle
aam
in
cmp
in
adc
in
pop
hlt
repz
lods
inc
jl
sbb
outs
or
packuswb
xchg
dec
adc
and
retf
sbb
mov
and
imul
add
push
xor
add
mov
and
xor
arpl
xchg
sti
sar
(bad)
fist
repz
loop
pushf
je
dec
mov
lea
pop
fcomi
hlt
dec
ja
loope
mov
arpl
xchg
rol
lods
stos
xchg
(bad)
sbb
push
pop
aam
test
daa
(bad)
mov
pop
adc
or
popf
mov
imul
inc
xchg
adc
test
cmp
pushf
add
movs
mov
dec
jecxz
stos
jmp
icebp
bound
cmp
adc
sub
push
and
xchg
outs
test
cmp
lds
jecxz
std
cmp
mov
jmp
daa
pop
xlat
dec
adc
sbb
add
mov
push
mov
repnz
adc
mov
loopne
mov
int
cs
add
mov
jle
ds
ss
push
xchg
xchg
sbb
or
and
pop
add
pop
popa
cmps
cmps
int3
jmp
shl
pop
jne
push
mov
dec
mov
cwde
in
push
push
mov
xchg
repz
adc
bound
xchg
ins
sar
popf
out
cmp
mov
adc
sbb
movs
cmc
es
push
mov
adc
pusha
or
dec
scas
jbe
dec
mov
push
mov
xor
hlt
mov
ret
push
pop
xlat
aaa
aaa
mov
and
dec
rcr
xchg
gs
hlt
cmp
stos
mov
inc
adc
jae
adc
out
sub
fcom
jge
mov
fnsave
xor
jmp
mov
and
(bad)
fisttp
jle
call
sbb
jmp
dec
or
push
add
call
sbb
mov
imul
(bad)
dec
into
fscale
adc
das
in
call
dec
xor
and
xchg
inc
retf
adc
outs
out
pop
mov
push
ror
sub
mov
ud1
xor
ins
imul
cli
daa
jmp
imul
cli
dec
and
les
pop
shl
jmp
cmp
int
shl
mov
mov
and
sbb
bswap
add
jo
cmp
add
ins
sbb
inc
push
sbb
jnp
fwait
inc
aad
pop
push
sbb
cdq
dec
mov
sub
pop
ins
jp
in
repz
jnp
ss
repz
loopne
push
push
das
mov
jge
mov
and
nop
ret
ret
xlat
jne
rcl
pop
rcr
fidivr
sbb
ss
adc
ss
push
scas
sub
jno
in
xchg
or
mov
xor
out
hlt
jle
js
cmp
jp
mov
xchg
mov
call
lea
mov
outs
mov
int
dec
adc
jnp
call
xchg
dec
jo
xor
sahf
jg
push
push
loop
call
icebp
fst
int
and
mov
lods
xchg
dec
lea
mov
mov
inc
std
out
mov
push
jmp
add
jmp
ss
and
push
and
sbb
add
lods
inc
in
pop
add
movs
sbb
or
lea
call
cmp
scas
sub
jns
popa
mov
jnp
jae
add
mov
adc
out
or
enter
fild
xor
sub
mov
mov
push
jmp
lea
add
fwait
sti
bound
xor
out
rcl
pop
jge
pop
mov
add
xchg
mov
xor
lock
dec
ss
jmp
icebp
push
pop
xchg
pop
sbb
les
hlt
dec
xchg
pop
sub
mov
jecxz
out
iret
ficom
lds
xor
xchg
xchg
add
out
(bad)
ins
push
sbb
dec
rcl
inc
call
sbb
fwait
dec
push
pushf
mov
sub
lahf
aad
mov
ja
fidivr
xor
xchg
cmp
mov
hlt
and
jmp
xchg
and
add
bound
add
arpl
test
(bad)
xor
mov
out
scas
pop
popa
jg
inc
mov
add
pop
push
dec
jo
scas
cmp
adc
das
and
dec
jp
mov
pop
mov
(bad)
and
pop
mov
sbb
fcomp
mov
cs
pushw
or
jne
jge
mov
test
bound
dec
jns
mov
test
mov
xchg
push
je
mov
sub
jnp
leave
mov
push
xor
data16
ja
enter
mov
mov
shr
call
xlat
jae
ss
addr16
test
test
xchg
(bad)
mov
xchg
(bad)
mov
and
mov
fwait
mov
fistp
adc
mov
cmp
retf
into
leave
and
(bad)
retf
icebp
cwde
or
push
shr
shl
loope
fisubr
js
pop
movs
cmp
clc
inc
sti
pop
imul
int3
scas
mov
jge
aaa
mov
ret
loopne
(bad)
and
mov
aam
mul
retf
outs
fisttp
jl
add
ds
cld
jo
ret
jg
push
xor
and
test
aad
dec
sahf
shl
jae
jmp
cmp
call
mov
cmp
lea
lods
cmc
xor
pop
sbb
inc
fisub
push
xchg
enter
into
jl
jae
dec
iret
mul
mov
jle
int
test
mov
cmp
mov
adc
adc
cmps
ret
call
fmul
mov
clc
or
(bad)
fdiv
jno
test
js
shl
and
cli
out
stos
mov
cmp
sar
jmp
(bad)
push
cmp
dec
cs
iret
mov
(bad)
jle
jecxz
sub
movs
repz
xchg
pop
test
jge
dec
sub
iret
sbb
inc
xor
jno
dec
add
or
cmp
loopne
push
mov
cmp
cmp
loopne
movs
das
shl
int
pop
sub
shr
and
leave
cmp
cld
add
(bad)
int3
jae
popf
dec
push
inc
scas
sbb
ins
and
sub
mov
xor
popa
sahf
movlhps
xchg
inc
dec
cmc
popa
mov
mov
test
mov
mov
cld
mov
fisubr
add
pop
ds
std
xor
loop
mov
or
ja
out
mov
push
xchg
sbb
push
es
push
mov
movs
and
push
aam
or
nop
cmp
mov
(bad)
mov
and
addps
aad
dec
daa
or
bound
aad
cmp
cmp
dec
or
xchg
jno
push
cdq
fild
jecxz
dec
das
and
mov
ja
je
pop
add
mov
pop
and
clc
cs
jns
xchg
leave
imul
sub
inc
(bad)
adc
cdq
sub
mov
sub
sti
dec
mov
rol
mov
inc
xor
(bad)
test
movs
retf
jb
bound
adc
mov
ja
pop
nop
adc
mov
mov
das
ja
lods
and
pusha
xor
mov
imul
shr
mov
lahf
pop
cmp
push
sahf
mov
sahf
test
sub
jmp
and
mov
xchg
movs
mov
dec
push
test
fstp
add
xor
inc
fild
stc
jl
xor
xor
jge
sbb
lock
push
cmp
jmp
push
leave
aam
arpl
retf
repz
sub
nop
aad
pop
add
ds
pop
sbb
cmc
push
xor
(bad)
mov
mov
mov
adc
loope
(bad)
cmps
pop
aam
pop
jecxz
fs
cwde
aaa
adc
pop
loope
data16
mov
lock
or
jge
jnp
aas
mov
dec
mov
jg
popa
ins
or
jecxz
bnd
in
cld
push
xchg
daa
pop
mov
xor
inc
mov
or
movs
and
dec
sub
punpckhdq
sbb
shl
imul
mov
je
aas
push
xchg
cli
mov
sahf
pop
or
int3
jecxz
js
cli
add
addr16
pop
xor
loope
or
jns
sub
(bad)
and
js
inc
int
mul
mov
inc
rcr
inc
pop
pushf
and
shl
shl
mov
hlt
jns
mov
push
push
xor
pop
sub
test
pop
cmc
jmp
fwait
or
movs
mov
xchg
sub
jmp
mov
xor
push
and
(bad)
jns
popf
push
mov
out
ins
jb
mov
fbstp
(bad)
dec
jp
and
mov
imul
test
pop
enter
xor
scas
stos
data16
test
dec
cld
xchg
(bad)
fisubr
dec
and
mov
cs
call
div
pop
dec
or
outs
xchg
xor
(bad)
icebp
pop
add
(bad)
(bad)
or
lea
mov
repz
push
in
lds
and
out
out
shl
or
mov
ret
pop
fist
sar
jne
inc
mov
repz
lds
imul
mov
fdivr
fisubr
dec
imul
dec
push
jns
xor
push
sbb
int3
cdq
mov
mov
cli
adc
mov
cld
(bad)
cli
sbb
or
test
push
mov
mov
add
and
out
inc
inc
je
call
sbb
mul
jo
or
cmc
cmp
cmps
pop
xchg
sbb
adc
xchg
sub
retf
imul
or
fimul
sbb
xor
jb
mov
pushf
mov
mov
mov
cwde
lods
inc
iret
add
and
sub
fst
pop
dec
pop
push
cmp
cmp
pop
dec
fsubp
call
or
(bad)
stc
sub
call
iret
fistp
xchg
jmp
ret
push
mov
or
pop
outs
retf
sub
lds
sbb
adc
enter
out
xchg
jmp
push
repnz
sbb
sbb
mov
add
xchg
jmp
mov
jnp
mov
pop
daa
add
nop
pop
cld
outs
(bad)
les
mov
or
js
mov
ret
pop
adc
inc
(bad)
adc
iret
das
stos
pop
jo
push
mov
in
add
ins
test
mov
loope
jle
dec
xchg
adc
jg
or
and
adc
add
adc
sub
(bad)
pop
push
cmp
ins
ror
das
out
push
jns
mov
jl
push
push
mov
sar
in
sti
mov
jecxz
pushf
jl
sbb
lds
mov
int
das
and
loope
pop
in
aas
in
cmp
inc
mov
xor
pop
mov
out
aaa
jmp
out
push
jp
jnp
push
retf
and
and
add
lods
inc
mov
mov
cmp
and
cmps
ins
dec
add
mov
fdivr
(bad)
jp
out
add
pop
and
jecxz
(bad)
dec
jmp
aam
jmp
popa
or
stos
(bad)
aam
je
sbb
mov
pop
jmp
pop
and
and
mov
fyl2xp1
fidivr
imul
(bad)
sti
mov
cli
pop
jmp
sub
push
test
push
mov
loopne
and
sbb
sbb
fsubp
add
push
std
xlat
call
dec
(bad)
push
add
and
push
pop
out
shl
lds
ss
mov
pop
jb
cld
icebp
mov
adc
push
dec
sub
mov
xchg
repnz
jbe
and
adc
sub
push
shr
arpl
jo
jne
mov
imul
mov
shl
jo
add
das
int
shl
mov
push
push
aad
and
or
and
add
xor
loop
adc
cmp
call
xchg
dec
pop
sbb
pop
mov
out
repnz
adc
jp
imul
les
xor
sub
mov
fisubr
lock
and
sub
add
repnz
xchg
dec
xchg
xor
pop
sub
mov
fld
movs
push
lds
cmp
cmp
es
push
data16
cld
push
adc
push
sub
popf
dec
mov
push
ret
sbb
es
mov
call
mov
in
sbb
popf
mov
add
jle
aaa
fstp
stc
cmp
sub
jbe
aad
leave
fisubr
pusha
hlt
imul
mov
addr16
hlt
pcmpgtw
pop
leave
scas
mov
retf
cmp
js
sbb
test
mov
jbe
std
mov
in
xchg
xor
jne
mov
mov
mov
imul
dec
jbe
je
jecxz
pop
jne
nop
fwait
ins
jmp
xrelease
call
test
stos
aam
pop
cmp
in
push
lock
je
popf
mov
mul
(bad)
pushf
adc
jnp
xchg
loop
bound
mov
jnp
fs
stos
cs
lea
xchg
ror
sub
sbb
mov
lds
lods
mov
jge
jle
stos
xlat
pushf
mov
sub
movs
leave
xchg
outs
adc
aam
call
lods
mov
ror
(bad)
inc
mov
retf
inc
dec
jno
xchg
push
adc
fs
or
cmp
nop
mov
adc
outs
leave
xchg
pop
mov
out
add
inc
and
loopne
push
das
repz
lock
shl
xchg
adc
ds
ret
mov
cmp
or
jg
sub
movs
inc
test
push
scas
cli
fld
sbb
add
lods
inc
fcomp
mov
xchg
mov
nop
or
je
inc
jae
push
call
sub
imul
outs
ror
cmp
adc
sbb
cli
add
sub
mov
push
jle
xor
push
pop
cwde
push
rcr
mov
push
jns
push
iret
cli
out
jge
ja
and
cld
add
inc
nop
cmp
cmp
aaa
ja
movs
push
popa
mov
add
pop
cmp
cmp
popf
inc
js
sti
pmulhuw
sub
and
mov
or
sub
ds
jle
lea
imul
hlt
xor
xor
xor
jle
in
push
jge
retf
sbb
outs
pop
push
sbb
dec
mul
call
in
(bad)
jle
in
add
jecxz
jl
cmps
mov
mov
addr16
jo
mov
loopne
jl
jle
retf
scas
dec
lods
test
adc
xor
dec
push
out
xor
sub
jns
outs
or
or
adc
ret
(bad)
out
sub
pop
ja
sbb
fstp
lods
stc
lock
or
shl
push
stos
shr
bound
ret
add
xchg
outs
mov
xchg
(bad)
mov
dec
cmp
mov
push
jp
mov
cmp
lock
fdivr
mov
(bad)
pop
adc
dec
inc
(bad)
es
lods
adc
in
mov
repnz
ds
cmp
bound
or
mov
rcr
and
sub
pop
fldenv
stos
fs
xor
jno
jg
xor
pushf
test
leave
movs
data16
mov
in
pop
push
cmp
lahf
aaa
cmp
or
add
dec
mov
cmp
mov
push
sub
fcom
ins
or
jecxz
ins
pop
mov
sub
fld
adc
mov
cs
bnd
mov
adc
pop
scas
cmp
xlat
gs
pop
jecxz
(bad)
movs
cmps
add
or
add
stos
inc
xor
and
adc
test
inc
fdiv
dec
sbb
sar
pop
xchg
pop
inc
jmp
jae
pusha
mov
pop
repnz
xchg
push
daa
enter
dec
(bad)
jmp
mov
xchg
pop
outs
shl
jecxz
neg
or
or
bnd
mov
out
sar
sub
dec
mov
dec
add
dec
inc
dec
lock
cmp
ss
aad
cmp
sbb
jbe
movs
mov
or
les
test
pop
or
jg
fsubr
lahf
jns
adc
ret
nop
repnz
les
inc
lea
cmp
sub
push
cdq
fsub
(bad)
and
pop
mov
cmp
push
(bad)
and
jg
cmp
mov
mov
sub
push
and
movs
pop
stos
sbb
pushf
fistp
dec
es
inc
icebp
imul
inc
jmpw
mov
mov
sub
push
sar
enter
enter
cmp
cdq
les
(bad)
ror
and
mov
and
jp
cmp
mov
and
dec
test
dec
push
jp
jae
dec
lods
sub
loopne
mov
pop
push
xchg
cdq
std
into
pop
jno
add
test
xor
les
mov
cmp
rcl
repz
repz
loop
repz
in
fnstcw
in
pushf
ins
xchg
jle
hlt
mov
push
sbb
inc
lahf
mov
mov
sar
cmp
retf
test
enter
ror
mov
mov
jo
cld
mov
mov
pop
sbb
mov
xchg
xor
rcl
mov
rol
scas
mov
repnz
and
mov
xchg
mov
pop
into
inc
movs
mov
or
pusha
fisttp
mov
sbb
push
cmps
ror
in
cld
js
mov
push
pop
loopne
scas
std
mov
sbb
sub
pop
dec
ficomp
push
(bad)
in
jmp
mov
fstp
sbb
(bad)
push
rcr
in
sub
std
ins
adc
adc
add
and
inc
sti
mov
cmp
inc
mov
in
jnp
dec
daa
sbb
retf
inc
cld
cmp
lock
fist
pop
mov
fld
and
push
pop
neg
out
mov
test
test
aad
adc
fidivr
pop
std
call
paddsb
leave
jecxz
pop
and
outs
pop
jge
ins
jo
mul
nop
mov
bnd
cwde
mov
call
mov
call
mov
sete
sahf
ds
inc
mov
jo
jne
push
pop
fcom
xor
xor
xchg
add
or
cld
ror
mov
sub
jb
inc
dec
cdq
mov
inc
pop
stos
jmp
sbb
jg
ss
pop
mov
imul
mov
or
loop
inc
inc
or
sub
rcr
pop
adc
push
not
mov
gs
fcomip
(bad)
xor
cli
mov
mov
cmps
pop
adc
and
mov
jo
ja
sbb
nop
and
xchg
pop
cld
mov
pop
outs
push
push
dec
jne
pop
stc
ins
pop
mov
pop
shr
jnp
mov
adc
mov
add
ins
test
shl
and
daa
in
adc
fcom
fwait
call
add
pop
imul
sub
sub
sbb
push
sub
jb
sub
add
xor
outs
xlat
push
leave
popf
ret
sbb
enter
inc
es
mov
out
lods
gs
test
jle
pusha
jmp
(bad)
fnstcw
pop
inc
cmps
es
xchg
fs
push
mov
adc
mov
sbb
iret
out
faddp
cmps
mov
outs
loope
mov
neg
fild
adc
mov
or
fld
or
xchg
pusha
jecxz
dec
(bad)
loop
mov
stos
and
adc
inc
(bad)
movs
ds
call
pushf
aaa
mov
push
pop
pop
push
jp
sbb
and
pop
pop
mov
cs
adc
pusha
es
cmp
mov
sub
cmc
daa
rcl
out
pusha
jl
adc
aas
clc
(bad)
lahf
neg
call
cmp
dec
cmps
popa
call
stos
push
shl
push
bnd
pop
imul
fucom
push
push
mov
xor
movs
jmp
(bad)
div
fisub
rcl
jnp
mov
out
es
adc
nop
jbe
mov
rcl
test
hlt
pushf
and
js
ror
popa
and
add
ins
xchg
and
xchg
sbb
add
mov
pushf
cmps
push
aaa
out
iret
push
xor
jl
popf
mov
repnz
push
test
add
adc
add
stos
dec
ret
xor
sbb
outs
loopne
xor
cmp
(bad)
push
call
repz
hlt
bound
push
pop
xchg
or
cmp
or
push
and
inc
adc
je
jmp
movs
jb
(bad)
out
fst
in
push
mul
repz
sub
shl
cwde
pop
xor
out
hlt
aaa
jle
and
inc
fldenv
ins
into
enter
mov
cwde
xchg
daa
mov
pop
aas
mov
mov
adc
int3
jge
cli
in
jp
push
cmp
sbb
and
fwait
dec
scas
shr
pop
cmps
mov
ds
hlt
popf
jge
lahf
loop
lock
mov
mov
jmp
lea
les
sbb
clc
data16
jmp
repz
mov
stc
data16
jo
into
imul
mov
pop
and
sbb
mov
out
mov
mov
xor
in
idiv
xor
fild
add
inc
inc
xor
(bad)
cmc
pop
push
ins
adc
sbb
inc
ret
icebp
aam
adc
or
dec
fisttp
loop
into
arpl
dec
pop
mov
leave
mov
ins
add
push
int3
add
nop
xchg
or
mov
cmp
mov
push
(bad)
out
dec
iret
add
xor
sbb
pop
or
sbb
iret
cmps
xor
pop
lods
pop
fdiv
mov
adc
hlt
les
scas
jno
int
xor
mov
into
sbb
retf
xchg
int3
sbb
inc
inc
pop
(bad)
pop
mov
xor
cli
xchg
outs
mov
ins
call
hlt
fcmovnb
lods
and
aad
mov
aaa
stos
pop
aam
mov
(bad)
pop
mov
out
dec
jne
in
dec
add
daa
pop
dec
jle
add
mov
fwait
lods
xchg
dec
es
bnd
or
sti
cmp
ret
rcl
fistp
xchg
pop
mov
jo
int3
mov
sbb
jmp
push
jae
test
test
mov
clc
leave
sbb
movs
and
lods
sbb
shl
aaa
cmp
jle
out
jl
sar
aaa
fst
adc
xchg
fld
sub
mov
mov
nop
shl
adc
xlat
inc
mov
loopne
(bad)
(bad)
jb
(bad)
in
cdq
(bad)
cmp
outs
ins
inc
cli
or
not
jge
jecxz
pop
add
mov
js
xor
sbb
dec
push
loop
enter
ja
nop
sbb
lahf
mov
out
call
push
js
movs
(bad)
xchg
stc
xor
fwait
jmp
jge
jp
mov
shr
or
and
cmp
popf
loopne
lds
xchg
lock
sbb
(bad)
stc
push
add
aas
pop
bound
mov
cmp
lahf
or
fistp
out
xchg
xor
or
rcl
and
dec
mov
push
add
pop
les
dec
imul
fbstp
pushf
jp
sti
push
rcr
dec
fmul
ss
bound
imul
pop
sub
cli
mov
mov
inc
jo
mov
rcl
enter
and
or
pop
test
int
pusha
mov
xchg
repz
out
mov
adc
mov
(bad)
dec
pop
es
xor
hlt
in
xchg
hlt
movs
loopne
mov
and
(bad)
sti
jo
dec
push
pop
das
sbb
fmul
stos
pop
lods
and
fild
xchg
jecxz
or
inc
xchg
push
adc
sub
jo
sbb
ins
mov
jae
les
test
out
int3
(bad)
mov
push
pop
je
xchg
cli
pusha
sbb
or
add
mov
neg
sti
fs
push
xchg
enter
arpl
(bad)
jo
lea
(bad)
pusha
std
cmp
cld
ror
inc
push
mov
scas
and
shl
pop
pop
push
add
fcmovnb
jbe
xchg
cmp
xchg
pusha
jbe
sub
pop
sbb
(bad)
repnz
jge
jg
xor
popa
add
mov
jge
test
push
fincstp
push
push
adc
or
icebp
inc
fistp
dec
sahf
(bad)
xchg
adc
and
sbb
or
out
xchg
lea
inc
nop
or
cmp
ret
iret
test
lods
xchg
push
adc
add
inc
xor
fimul
pop
push
pop
xor
fdivr
fst
sbb
and
fsubr
or
fs
je
push
fdivp
push
inc
mov
dec
pop
xchg
enter
pop
mov
gs
movs
xchg
xor
pop
pop
jo
sbb
mov
movs
push
add
repz
dec
retf
jmp
mov
mov
out
xchg
neg
lock
rol
mov
inc
or
cmp
call
or
hlt
fild
outs
push
mov
and
cmp
pop
ins
in
(bad)
xchg
in
jno
jns
sti
jl
jge
(bad)
arpl
stos
push
lods
fdiv
xchg
cmp
mov
dec
test
or
add
cmp
pop
push
mov
mov
stos
dec
inc
xor
pushf
and
arpl
xchg
xchg
std
mov
mov
outs
cwde
(bad)
(bad)
jp
push
add
sub
adc
mov
das
ds
neg
adc
es
dec
sbb
add
rcr
xor
push
mov
xchg
mov
add
mov
mov
mov
pop
in
fimul
mov
mov
pushf
push
in
dec
add
pop
pop
adc
dec
ins
test
sub
xchg
fs
jmp
fisttp
push
mov
aam
js
dec
mov
ds
mov
mov
cmps
cdq
xlat
jbe
mov
mov
inc
mov
push
int
pop
adc
aam
xchg
pusha
push
jg
adc
sbb
jl
mov
cmp
das
pop
es
gs
ror
outs
push
jmp
push
ins
cli
outs
out
mov
rol
dec
mov
outs
bound
mov
sub
cmp
and
xchg
adc
ss
lods
inc
adc
xchg
xchg
adc
sub
movs
in
fsubr
sub
or
aaa
pop
imul
pusha
inc
ja
mov
aas
int
scas
pop
cmp
sbb
mov
int3
mov
out
das
mov
outs
(bad)
mov
sub
jmp
jmp
mov
js
cmp
cmp
mov
js
jg
pop
cmp
fcmovb
cmp
lods
out
cmp
call
adc
ret
and
adc
mov
xchg
stos
les
sub
ret
scas
sub
adc
cmp
fisub
int3
push
xchg
ins
sub
dec
mov
pop
popf
dec
dec
rol
fadd
repz
push
cli
stos
xchg
xchg
jo
add
bound
xor
out
shr
inc
repz
mov
daa
push
jbe
dec
inc
pop
push
cdq
mov
and
or
shl
mov
sahf
adc
aas
lods
lods
cwde
nop
adc
adc
cmps
lahf
mov
fcom
arpl
je
or
inc
pop
stos
mov
and
mov
popf
fs
pop
or
fsubr
dec
dec
jp
and
adc
sub
shr
aad
dec
push
stc
cmp
in
mov
ins
repz
arpl
pushf
adc
xchg
daa
cs
and
mov
in
sbb
cmp
loopne
jp
je
cmp
xchg
adc
and
nop
sbb
and
(bad)
mov
pop
(bad)
hlt
(bad)
loope
ins
test
js
shr
dec
adc
les
or
push
pushf
shr
lea
js
adc
int
lea
hlt
daa
dec
aaa
popf
and
xchg
add
rcr
gs
pop
dec
(bad)
sbb
jbe
lods
add
xor
out
mov
(bad)
retf
jp
pusha
mov
test
dec
mov
imul
neg
mov
loopne
mul
mov
adc
in
adc
fidivr
scas
into
sbb
je
enter
and
lods
stc
pop
or
out
or
mov
pop
sti
sbb
(bad)
sbb
push
clc
shl
sub
push
xor
xchg
pop
jbe
outs
leave
xchg
dec
jo
clc
mov
fiadd
inc
cmp
(bad)
enter
mov
nop
jns
aas
jb
idiv
sbb
sar
ret
lea
repz
popa
scas
mov
mov
jl
pusha
cmps
outs
push
inc
in
inc
jae
sub
mov
sub
retf
sbb
jnp
ja
test
cmc
mov
je
mov
sbb
jg
cmp
pop
jmp
out
(bad)
mov
movs
cmp
adc
mov
push
lock
idiv
(bad)
in
push
mov
cmp
ss
inc
nop
add
push
cmp
shr
sbb
adc
dec
retf
int3
div
(bad)
into
fsubr
gs
les
bnd
movs
sbb
cwde
ss
sub
ins
dec
jb
adc
add
fild
rcl
dec
ds
shr
add
push
int3
dec
outs
mov
or
push
iret
jo
dec
dec
hlt
mov
fisttp
push
sbb
push
je
hlt
cmp
jp
cmp
adc
fidivr
mov
push
ds
and
shr
lods
stos
in
xor
cwde
inc
fwait
fs
adc
test
sub
push
sub
mov
mov
push
mov
sahf
rcl
mul
fldcw
dec
mov
jns
aad
sub
jmp
dec
pop
in
add
loope
add
sar
jecxz
fisttp
in
jb
mov
ror
(bad)
sbb
nop
mov
or
das
mov
hlt
push
mov
mov
xor
lahf
or
cdq
aas
adc
or
mov
data16
movs
call
retf
xor
xchg
into
and
sbb
retf
(bad)
call
push
fimul
sub
scas
daa
xchg
sar
mov
dec
inc
sti
mov
dec
mov
mov
shl
repz
jno
int
sbb
popa
repnz
mul
shl
repnz
mov
scas
add
fucom
shl
mov
int
mov
aam
or
mov
xchg
adc
scas
jbe
call
jno
enter
and
xchg
mov
int
cmps
int3
sbb
xlat
out
sub
mov
out
sub
(bad)
scas
xor
jmp
dec
(bad)
mov
in
xor
in
xchg
mov
pop
xchg
inc
shl
into
popa
or
adc
hlt
int3
push
test
fwait
aam
bound
cwde
sbb
add
pop
in
mov
sahf
shl
sub
mov
push
icebp
and
cs
dec
cmp
pop
and
cmp
int3
mov
pop
clc
jmp
push
fcmovbe
mov
fdiv
clc
jno
mov
mov
loope
mov
cmp
jmp
xchg
gs
mov
adc
pop
fiadd
push
mov
sub
cmp
xlat
lods
movs
loopne
jp
sub
rcr
and
mov
bound
std
cld
int
ins
push
and
add
cwde
inc
fsub
mov
sbb
sub
cld
js
iret
ins
loop
div
inc
push
ret
stc
mov
push
cmp
test
dec
mov
mov
pop
mov
and
add
dec
jb
aam
inc
jg
mov
idiv
fcomip
loopne
push
pop
bound
xor
xor
cmps
(bad)
fld
sbb
xor
in
push
movs
and
add
adc
inc
add
enter
test
cmps
cmp
mov
sbb
bound
or
mov
fwait
(bad)
push
and
or
dec
popa
sub
fild
sbb
push
ficom
dec
inc
fld
cmp
and
push
call
cld
jmp
retf
fs
mov
lea
dec
fisttp
(bad)
jp
pop
loop
pop
es
jge
cdq
push
gs
push
or
mov
mov
test
or
add
push
jo
or
or
cmp
fsubr
push
div
out
dec
fstp
add
push
cmp
sahf
adc
push
sti
add
lahf
mov
cmps
mov
push
mov
or
sbb
addr16
mov
add
and
sbb
leave
jb
xchg
pop
sub
and
out
mov
test
and
fiadd
jp
js
scas
test
in
sbb
xor
dec
mov
mov
retf
cmc
pop
pop
mov
xor
repz
in
jge
xchg
repnz
jnp
lea
xor
adc
test
cmp
sbb
dec
loopne
mov
lds
dec
rol
imul
hlt
and
pop
mov
sub
xor
xor
repnz
pusha
in
cmp
icebp
into
mov
repz
maskmovq
neg
imul
push
jnp
call
push
jnp
aad
scas
jo
and
dec
mov
pop
out
ins
(bad)
in
jnp
dec
mov
mov
out
jo
mov
mov
adc
mov
ds
jp
js
mov
clc
adc
mov
adc
xchg
add
inc
mov
xor
adc
call
mov
ins
adc
das
les
outs
outs
sub
(bad)
push
mov
jbe
add
mov
int
cmps
icebp
inc
or
sar
aad
pop
lea
scas
jmp
cmc
aas
pop
jg
mov
stos
daa
sbb
mov
xchg
in
add
sbb
mov
push
jo
mov
into
lods
outs
and
and
xor
adc
enter
sbb
pop
or
adc
call
xlat
cs
or
stc
jge
jno
std
repnz
loopne
inc
shl
push
jb
(bad)
xor
push
pusha
and
pop
jmp
lods
dec
mov
adc
push
sbb
mov
inc
daa
pop
inc
scas
push
and
mov
cmp
not
out
sbb
jns
movs
jne
mov
ss
hlt
pop
jne
push
add
bound
dec
add
pop
cmp
mov
push
inc
jg
mov
xchg
bound
xor
retf
loopne
jl
ficomp
dec
mov
and
movs
inc
mov
xor
inc
mov
retf
fs
in
pop
pop
mov
xchg
clc
scas
inc
(bad)
mov
jp
dec
bound
cmp
sub
add
aaa
mov
add
stc
xchg
xchg
sbb
pop
mov
push
lods
leave
mov
test
mov
aaa
retf
(bad)
xchg
(bad)
pop
mov
sbb
and
push
sbb
pop
mov
dec
aam
lock
jmp
sub
push
xchg
jmp
add
or
lahf
leave
sbb
mov
sub
jbe
cwde
sub
mov
lock
retf
dec
test
inc
inc
mov
in
xchg
sbb
sub
pop
mov
aad
in
push
mov
pop
mov
imul
nop
inc
adc
test
fsub
jns
sub
gs
out
out
shr
pop
or
push
out
imul
cli
cmovns
mov
je
gs
outs
cmp
cmc
lahf
pop
xor
pop
xor
out
popa
sbb
sub
aas
test
pop
lahf
pop
mov
dec
test
inc
pop
or
xor
call
cs
mov
jmp
es
ret
movs
mov
cmp
mov
jmp
adc
push
xor
cdq
stos
dec
push
(bad)
cli
jne
push
jns
xchg
jae
add
aas
push
jmp
lds
sbb
retf
scas
jbe
add
(bad)
cmp
addr16
xlat
xor
sub
les
adc
popa
ror
aad
push
jl
loope
add
or
out
push
fbstp
rcl
leave
das
pop
sub
add
cmps
xor
xchg
ja
test
push
sbb
rol
cwde
lahf
sti
cmp
sbb
cli
xchg
xor
xor
pushw
adc
dec
stc
(bad)
pop
dec
cmp
push
mov
lods
dec
push
adc
add
data16
cdq
loopne
fwait
cmp
sub
mov
ins
add
sbb
inc
jae
jns
arpl
imul
pop
pushf
int
adc
cmps
enter
stos
arpl
dec
inc
dec
cli
call
dec
test
in
jb
lahf
(bad)
leave
call
stos
mov
jns
add
mov
xor
push
ins
push
ins
xor
xchg
or
adc
adc
(bad)
(bad)
xor
pop
stos
mov
out
les
repz
push
mov
mov
fadd
loope
mov
pusha
dec
div
sbb
test
call
sub
inc
adc
icebp
fsubr
cli
xchg
imul
mov
retf
push
mov
pop
jle
adc
mov
xor
cmp
mov
pop
xchg
mov
mov
xchg
cmc
push
arpl
and
mov
enter
mov
cmp
dec
sbb
les
das
jecxz
dec
out
xchg
dec
movs
fadd
movs
cmp
push
not
lea
ss
iret
es
xchg
or
adc
test
stc
jg
xor
adc
pop
or
movs
clc
outs
cld
mov
and
std
lods
mov
(bad)
dec
pusha
data16
jo
imul
std
add
add
daa
jl
add
imul
shr
xchg
jns
jo
mov
push
shr
bound
(bad)
imul
pxor
xchg
mov
cs
cs
and
mov
hlt
inc
movs
cld
imul
pop
cs
mov
(bad)
cmp
les
pop
clc
movs
mov
xor
pop
stos
add
scas
into
mov
mov
imul
sbb
aad
fwait
outs
repz
dec
cld
mov
mov
std
mov
ja
mov
or
cwde
mov
fimul
and
fstp
(bad)
dec
and
or
mov
jg
add
stos
pop
mov
sub
jo
and
out
icebp
mov
lds
out
sbb
jp
retf
in
push
dec
dec
data16
mul
sti
and
loope
xor
jns
lea
push
and
mov
dec
sub
out
ja
add
adc
lds
in
test
arpl
retf
aas
jae
mov
icebp
clc
loope
pushf
mov
mov
mov
mov
push
out
jnp
pop
sub
or
cmp
xor
dec
pop
je
adc
push
mov
or
sub
aas
loopne
ss
call
jp
adc
lds
jle
mov
sub
sar
rcr
popa
lods
call
push
mov
int3
dec
push
fstp
(bad)
jo
popa
inc
mov
inc
je
dec
rdtsc
sbb
mov
mov
dec
and
cmps
out
xor
sahf
mov
push
cld
icebp
inc
ss
rcl
add
adc
clc
(bad)
pop
arpl
mov
jo
jg
inc
mov
sub
jmp
xor
outs
pop
adc
sbb
fsubrp
or
sbb
daa
mov
lock
mov
sub
mov
imul
mov
inc
push
imul
stos
out
push
bound
in
jmp
ja
sub
and
dec
cmp
adc
add
xchg
jl
je
in
push
sbb
or
xchg
retf
ja
push
(bad)
cdq
cmp
mov
repz
pop
mov
sbb
cli
dec
jge
push
scas
push
scas
js
das
ds
mov
jbe
mov
jg
jae
leave
scas
repz
js
push
mov
pop
cld
pop
push
cdq
or
xor
or
loop
xchg
fsubr
pop
repnz
pop
jmp
mov
mov
dec
movs
ror
mov
pop
(bad)
xor
xchg
xor
std
test
jo
cmp
push
mov
xchg
jb
pop
cdq
sbb
add
pop
or
pushf
repz
(bad)
xor
mov
mov
mov
xchg
pop
mov
inc
repz
retf
cmp
sbb
push
dec
test
call
int3
pop
mov
mov
or
inc
ins
test
add
rol
scas
rcr
mov
add
xchg
shr
aam
scas
adc
rcr
cwde
pop
push
xchg
pop
out
push
mov
daa
ret
pop
push
and
push
daa
jg
sub
out
test
and
lods
cmp
mul
aam
stos
or
push
fmul
adc
jo
sbb
repz
mov
inc
jge
fisubr
sar
dec
xlat
imul
cmc
std
xor
ficomp
mov
lds
mov
retf
or
push
and
jbe
sub
aad
ins
add
inc
cmp
fistp
adc
jmp
movs
test
sub
sahf
(bad)
cld
call
std
or
push
cmp
xchg
mov
push
dec
fimul
popa
out
out
jmp
clc
in
jmp
xchg
mov
loop
or
nop
pop
cmp
sub
xor
test
ja
mov
push
dec
and
movs
push
and
mov
or
mov
or
mov
xor
mov
or
fscale
dec
repz
mov
mov
add
xchg
cmp
push
loopne
lods
jbe
sub
fwait
test
cs
push
rol
(bad)
in
jnp
jbe
push
pop
test
pusha
js
adc
and
cs
lods
(bad)
jnp
nop
xor
shl
inc
xchg
into
fistp
stos
jno
or
je
sub
pop
push
push
stos
popa
mov
inc
mov
or
mov
pop
mov
pop
adc
adc
or
cwde
ss
out
out
cli
dec
fbstp
lods
sub
ret
int3
mov
test
call
cli
js
mov
xor
iret
jno
adc
xor
pusha
pop
ja
sub
sbb
pop
mov
stc
pop
push
mov
xchg
into
repnz
sub
mov
sahf
mov
ins
ins
lods
jne
mov
jbe
popf
pusha
cmp
lock
ret
mov
arpl
aas
jno
adc
xor
mov
imul
pusha
test
and
push
sbb
adc
xchg
daa
jmp
aaa
sub
or
and
sbb
sub
jmp
dec
neg
push
imul
arpl
adc
adc
sub
inc
test
sub
push
test
sbb
mov
shl
rol
imul
jno
jae
cdq
rol
in
dec
push
cmp
jl
popf
jl
ins
adc
popf
je
push
aaa
jbe
adc
sbb
cmp
fldenv
dec
mov
je
mov
jo
xchg
add
jmp
jp
scas
popa
fdivr
clc
xchg
push
ds
mov
js
mov
cmp
out
stos
xchg
push
xchg
or
xchg
popa
xor
cmp
fnsave
cwde
pushf
bound
add
and
or
cwde
test
add
or
jns
push
lock
sbb
test
xchg
lods
xor
jns
jns
dec
movs
add
pusha
out
push
in
or
push
es
push
div
and
push
xchg
mov
dec
add
dec
call
ds
(bad)
stos
push
and
adc
(bad)
push
dec
mov
mov
hlt
sbb
jmp
sub
sub
ds
in
xor
xchg
sbb
sub
je
add
cmps
mov
fld
aaa
mov
mov
call
(bad)
jle
movs
sbb
cmc
push
fs
jl
into
push
movntq
movs
inc
nop
pusha
sbb
or
fst
enter
icebp
or
push
cmps
adc
dec
stc
cmp
lea
sbb
repz
cmc
cmp
cmp
or
aaa
mov
lods
mov
stos
push
mov
and
push
sub
retf
sbb
mov
adc
aaa
push
or
mov
shl
xchg
and
clc
dec
fist
fist
sbb
std
daa
(bad)
jmp
and
cmps
pop
mov
dec
int
dec
sbb
inc
in
lock
inc
std
cs
int
push
and
pushf
aad
push
scas
cmove
sbb
jb
(bad)
push
push
dec
sub
mov
mov
lds
mov
movs
in
xchg
push
mov
js
aad
dec
adc
sbb
add
adc
pop
sbb
push
or
fcom
ss
ja
pushf
mov
and
test
jnp
inc
aam
imul
mov
sbb
test
cmp
mov
push
inc
jae
in
fs
pushf
mov
sub
xchg
inc
dec
mov
inc
test
(bad)
out
inc
inc
xchg
xchg
add
xchg
call
mov
daa
je
ret
dec
into
jle
sbb
test
imul
sar
push
stc
jle
icebp
push
inc
nop
push
jge
iret
push
out
fadd
out
movs
in
and
push
cld
outs
lods
mov
outs
daa
std
push
dec
dec
pushf
loop
lods
adc
sbb
mov
stos
mov
sete
adc
xchg
test
jg
and
and
int
(bad)
(bad)
out
mov
add
les
dec
shl
mov
shr
push
mov
pop
es
and
dec
lods
adc
lods
scas
sbb
je
jecxz
mov
loop
ins
pop
and
sbb
xchg
cli
int
in
mov
retf
mov
jge
pop
push
arpl
stos
call
mov
adc
fwait
mov
pop
sahf
and
mov
in
arpl
hlt
inc
nop
add
gs
retf
jb
xchg
cmp
stos
sti
sbb
push
ficom
fidivr
loopne
xor
(bad)
(bad)
pop
mov
push
pop
lds
ficomp
mov
loop
or
je
mov
inc
sbb
ss
dec
mov
outs
cli
cdq
cwde
popf
pop
dec
adc
mov
add
loope
pop
cmps
fwait
(bad)
cdq
loop
pop
cld
jmp
cmps
and
mov
mov
aam
aad
pop
fist
adc
push
(bad)
je
jmp
shl
jne
add
loop
retf
and
shl
cmp
cmps
and
nop
in
mov
js
push
push
ins
adc
stos
pop
jmp
cmc
add
dec
sub
clc
mov
inc
xor
out
ret
push
cs
addr16
push
in
call
adc
sbb
xor
sbb
fimul
pushf
test
loopne
inc
div
sbb
dec
xchg
xchg
shl
mov
cwde
jge
inc
or
xchg
mov
sub
xchg
out
es
jmp
dec
jecxz
loope
je
mov
inc
push
cwde
sbb
inc
popf
mov
(bad)
pop
xchg
jnp
pop
adc
or
xor
repnz
leave
mov
jo
jecxz
mov
mov
push
inc
lock
mov
or
mov
outs
ss
shl
pop
(bad)
and
dec
pop
in
cs
(bad)
xor
sbb
jmp
loope
enter
call
lock
movs
pusha
pop
bound
retf
fisubr
jbe
add
cmc
(bad)
icebp
js
xchg
out
lods
fisubr
jmp
lea
repz
adc
imul
adc
pop
pop
cs
inc
sti
xor
mov
xor
sahf
xchg
cmp
jns
and
jmp
mov
inc
mov
pop
push
movs
pop
outs
(bad)
jmp
stos
or
out
xchg
jp
(bad)
clc
les
mov
fwait
sub
cmp
inc
out
sub
mov
ins
loope
or
call
mov
data16
push
scas
mov
retf
or
(bad)
mov
mov
xchg
lahf
mov
sub
fisubr
mov
into
rcr
xchg
dec
sub
test
cld
pop
rol
mov
rcr
or
ret
in
xor
stos
out
jbe
fxch
pminsw
xor
int3
pop
cmp
hlt
leave
pop
ror
jb
dec
shl
aad
xor
dec
mov
es
pop
gs
sub
push
test
aas
adc
pop
sbb
repnz
mov
xlat
sub
inc
jne
cmps
dec
jp
and
add
push
push
xchg
xor
sar
lds
and
cmp
rcr
ja
mov
xchg
fisub
rcr
aam
shl
sub
test
adc
fst
cmp
or
out
mov
xchg
fidivr
fcmovb
out
and
jne
inc
xchg
fst
stc
in
lea
mov
inc
add
iret
mov
frstor
or
xchg
xchg
shl
arpl
dec
pop
int3
mov
data16
inc
sub
push
xchg
add
jmp
inc
mov
les
sub
ss
xchg
dec
xchg
add
inc
arpl
outs
or
cdq
mov
enter
inc
jp
iret
fisttp
jle
out
add
imul
adc
popa
pop
mov
stos
je
xchg
push
ror
mov
mov
shl
adc
mov
or
dec
xchg
push
or
xchg
pusha
cmp
add
mov
cmc
xchg
or
cmp
jg
inc
mov
xor
mov
xchg
jmp
xor
mov
sub
int3
mov
cdq
and
leave
jo
int
sbb
mov
loop
xor
or
and
sbb
arpl
(bad)
xchg
adc
and
jp
mov
cli
mov
adc
retf
dec
lods
pop
xor
rcl
cs
shr
xor
xor
enter
sbb
idiv
dec
inc
(bad)
sub
(bad)
shl
sbb
push
pop
push
jbe
inc
fiadd
push
push
imul
push
mov
stos
xor
fidiv
imul
xor
imul
fdivr
retf
hlt
enter
daa
pusha
pop
push
inc
fwait
ss
and
push
aaa
pusha
xchg
data16
jmp
inc
ss
out
lock
mov
jge
cmp
add
and
add
scas
mov
xchg
loope
je
std
fmul
fstp
int
push
outs
and
es
in
mov
sbb
out
ins
xchg
clc
les
clc
neg
push
js
sbb
push
mov
push
data16
cwde
or
call
push
cwde
sub
pop
jp
aad
daa
inc
cmp
sbb
imul
(bad)
in
mov
scas
jb
daa
or
sub
mov
sbb
adc
mov
out
cmp
cdq
dec
mov
gs
push
xchg
or
inc
xor
add
and
loopne
outs
bound
xlat
sub
jnp
mov
add
test
ja
mov
sti
sub
mov
dec
inc
add
dec
mov
retf
jmp
xor
add
rcr
or
mov
xchg
xor
xor
dec
jl
jmp
mov
sbb
hlt
or
pusha
iret
jl
mov
fwait
or
sbb
fstp
aad
jo
sub
test
adc
pop
push
das
push
mov
pop
push
aam
mov
add
sub
ret
das
mov
shl
inc
sub
sbb
int
lods
xor
pop
pop
lea
push
(bad)
xor
stos
mov
ins
imul
fsub
sbb
jne
repz
xchg
leave
add
add
mov
mov
call
pop
ds
add
mov
dec
js
mov
leave
lea
push
jmp
repnz
cmp
rcr
in
fs
jl
das
in
loope
lods
inc
arpl
mov
jmp
sbb
mov
daa
popa
loope
xchg
push
jnp
xchg
in
mov
pushf
popa
pop
dec
push
(bad)
dec
cmc
pop
pop
mov
es
aam
call
stos
adc
cwde
dec
(bad)
pop
sbb
daa
jp
mov
xor
inc
jne
iret
dec
rol
out
xacquire
ins
mov
cmp
mov
mov
jns
inc
adc
jl
pop
cmp
mov
mov
les
cld
mov
rol
gs
shr
dec
dec
imul
or
std
inc
xchg
sbb
iret
mov
fild
add
movs
dec
mov
cmp
aam
add
cmp
aaa
retf
adc
xchg
(bad)
pop
sub
bound
jno
out
mov
out
pop
sbb
mov
add
push
push
sti
in
mov
scas
mov
mov
retf
fst
push
mov
or
add
jno
(bad)
mov
xchg
test
test
dec
aas
test
sar
dec
and
sbb
pop
pop
mov
cmp
xchg
test
add
xchg
sahf
xchg
xchg
adc
jbe
ja
scas
push
inc
push
inc
push
leave
jecxz
clc
mov
gs
pop
lods
lock
(bad)
je
jle
je
cmp
sbb
inc
push
(bad)
rcr
not
cs
xor
push
imul
cmp
cmps
icebp
lea
idiv
adc
or
rep
ret
pushf
xchg
jp
data16
push
ja
lds
jnp
movs
fs
popf
rcr
or
xchg
test
imul
scas
loopne
jb
fs
je
and
cmc
or
out
sahf
enter
aad
stc
pushf
les
inc
(bad)
jle
and
sbb
scas
mov
enter
cmps
ret
ret
push
push
mov
shr
out
dec
mov
and
pop
bnd
cmps
xchg
cmp
mov
or
ss
push
pushf
lods
shl
add
sbb
jl
adc
pusha
mov
sub
or
arpl
icebp
das
lahf
mov
mov
inc
and
mov
jbe
xor
jg
aad
hlt
jmp
in
outs
fmul
xchg
fmul
and
or
fild
ins
and
(bad)
mov
adc
pop
ss
mov
pushf
aam
fwait
push
pop
loopne
retf
and
ss
xlat
cmp
cmp
sub
mov
dec
and
and
push
jnp
add
stos
sub
enter
stos
(bad)
fcom
cmp
jb
mov
fbstp
sbb
sbb
adc
or
jns
push
push
sbb
jno
pop
repnz
inc
xchg
dec
push
jno
and
mov
pusha
cmp
cwde
mov
xor
jl
sbb
and
push
sub
xchg
push
and
test
push
xor
popa
adc
jg
int3
sar
pop
push
cli
mov
inc
mov
jnp
adc
jb
mov
and
(bad)
into
push
sbb
jns
xor
(bad)
div
test
and
jns
mov
xlat
xchg
out
push
nop
imul
leave
fist
sbb
cmp
scas
dec
leave
or
add
lea
daa
out
add
xor
and
sar
ss
jne
pushf
inc
adc
xchg
cmovae
aad
dec
xlat
lds
mov
cmp
pop
arpl
movs
push
mov
mov
popa
sbb
push
mov
inc
push
mov
scas
lock
cli
mov
add
sar
jmp
inc
push
ficomp
mov
mov
retf
cmps
aaa
jp
inc
in
jnp
cmp
cld
fimul
rcr
stos
mov
out
pop
dec
and
jno
dec
das
mov
call
adc
sub
fldenv
cmp
pop
and
outs
ss
adc
fst
(bad)
sub
or
call
movs
pcmpgtb
dec
dec
mov
add
cs
inc
lahf
pop
cli
lods
inc
push
into
out
sbb
inc
aaa
xlat
pusha
in
icebp
lods
jae
repnz
cmp
xor
sahf
mov
fnstsw
add
add
sbb
sub
xchg
mov
jge
push
shl
pop
pop
xchg
sahf
cld
mov
icebp
dec
test
popf
jp
push
dec
mov
(bad)
ror
xor
test
stos
and
rcl
push
dec
dec
rcr
dec
int
jmp
movs
inc
test
(bad)
leave
pop
mov
fld
cld
mov
lock
and
loope
in
sub
and
jne
mov
sub
jmp
or
pop
cld
mov
scas
icebp
push
mul
outs
fcomi
sub
mov
sbb
and
cdq
add
xchg
rcl
loop
dec
cmp
pop
loop
mov
jnp
push
leave
and
in
(bad)
sub
cmp
lods
(bad)
adc
btr
pop
shl
paddb
sbb
pop
sub
test
xchg
xlat
mov
sbb
rol
mov
icebp
fstp
lods
or
hlt
mov
dec
inc
mov
xchg
outs
test
fisttp
sub
push
sub
cmps
mov
in
mov
jae
out
das
enter
icebp
je
or
iret
ins
movs
push
xchg
dec
pop
mov
mov
ret
cwde
into
cmps
dec
fdivr
jl
shl
add
(bad)
xchg
loop
(bad)
jmp
invd
xchg
std
adc
repz
imul
sbb
cmp
cmps
push
mov
mov
xor
cmp
addr16
imul
jge
fnstenv
jb
(bad)
shl
mov
je
ds
fst
pop
cmp
pop
mov
bound
jecxz
(bad)
jbe
dec
dec
xchg
mov
cmp
jo
movs
nop
pop
xor
sub
sub
jg
mov
adc
dec
xchg
(bad)
jp
repnz
adc
loop
in
xchg
out
aaa
lock
inc
mov
sub
xchg
mov
push
lock
sti
jmp
call
loop
shl
inc
pop
ficomp
(bad)
pop
mov
lea
stc
retf
rcr
adc
sub
stos
mov
push
jnp
inc
cmp
loop
cld
and
cli
push
cs
inc
xor
movs
jno
cld
mov
leave
lods
in
add
retf
pop
jg
shl
cmp
or
add
push
push
pop
mov
xchg
or
imul
(bad)
lock
daa
mov
inc
pusha
sar
ins
add
or
mov
sub
imul
ss
mov
cmp
xor
cmc
inc
lea
nop
push
and
test
sub
retf
mov
ins
xchg
dec
and
add
pop
jmp
cli
mov
lods
add
stos
add
cmp
cmps
out
pusha
add
dec
cmps
jge
pop
mov
scas
lds
out
jl
out
out
imul
mov
xchg
jecxz
rcl
fisub
ja
cmp
movs
pop
addr16
ret
or
(bad)
fucom
push
mov
jne
sti
jmp
stos
mov
test
nop
mov
add
(bad)
ins
xchg
jecxz
push
in
xchg
inc
lahf
gs
jmp
mov
fst
std
mov
fidivr
sbb
sub
ror
pop
int3
mov
push
xchg
push
xor
or
push
or
out
xchg
push
xor
nop
test
mov
imul
or
lods
pop
jno
rol
adc
mov
pusha
ins
cli
std
add
jns
inc
rcl
inc
cmp
jo
xor
test
add
mov
adc
pop
sub
jl
inc
(bad)
adc
adc
dec
aas
jle
leave
fdiv
ss
mov
push
adc
sub
push
jmp
mov
loope
ja
inc
enter
add
sbb
ds
popf
push
and
dec
xchg
fdiv
cmc
cmp
add
pop
push
xchg
xchg
xchg
sahf
sbb
lods
mov
fstp
jb
iretw
and
fsubr
ds
aaa
in
(bad)
mov
pminsw
push
push
daa
mov
mov
test
rcr
retf
and
sub
ja
pop
pop
repz
repnz
fistp
(bad)
call
nop
sub
js
sbb
arpl
xchg
inc
mov
lds
xor
imul
push
push
inc
icebp
and
fisub
jge
retf
cmp
(bad)
std
sub
dec
je
out
jo
inc
xor
xor
lds
cmc
int
or
popf
(bad)
lods
jno
int3
mov
ins
outs
test
mov
push
fnstsw
push
sar
loopne
xchg
cmp
add
jns
out
xor
xchg
in
push
sbb
hlt
mov
stos
into
lds
not
ret
jmp
mov
cwde
clc
push
sub
out
push
retf
ins
pop
xlat
in
xchg
xor
and
adc
dec
jl
push
mov
ret
hlt
fnsave
cmps
mov
fst
push
out
push
fs
ss
call
lock
test
xchg
add
iret
push
adc
inc
mov
pop
xor
cmp
add
loope
pusha
or
call
sub
daa
xchg
jp
adc
push
jnp
xor
dec
sub
sbb
lea
ficom
and
mov
ins
pop
call
push
adc
out
mov
and
mov
bound
jmp
xchg
outs
mov
xchg
inc
push
mov
dec
mov
adc
xchg
movs
rcr
fbld
fwait
or
sbb
aam
or
test
int
and
shl
and
scas
retf
pop
jnp
cmps
mov
fld
mov
jmp
call
loope
arpl
adc
fwait
xor
fs
jno
gs
dec
jmp
faddp
mov
dec
mov
(bad)
push
jbe
lahf
pusha
js
(bad)
retf
outs
inc
dec
add
pop
xor
mov
mov
mov
aas
clc
jb
xor
and
mov
fstp
or
sahf
pop
cmps
sub
mov
and
mov
and
sahf
pop
dec
mov
arpl
(bad)
int3
test
and
mov
popf
cmp
ds
outs
test
sub
mov
ss
push
or
gs
lods
pop
icebp
jnp
(bad)
retf
stos
arpl
pusha
enter
sbb
sbb
mov
adc
fdivrp
aam
rcl
imul
lods
hlt
or
mov
out
icebp
cmp
pop
leave
jge
inc
push
cmc
mov
(bad)
(bad)
mov
push
(bad)
or
mov
and
xlat
adc
add
mov
fld
int
or
inc
cld
pop
add
cmps
pop
in
mov
sbb
call
shl
xchg
inc
dec
mov
dec
adc
repz
xchg
test
(bad)
push
pop
and
retf
cwde
fcom
xchg
les
cmp
sbb
or
mov
test
jg
sti
push
cmp
push
or
pop
mov
mov
pop
add
dec
inc
mov
inc
scas
retf
dec
jae
iret
pop
push
sub
cmp
test
loopne
call
jns
jbe
xor
enter
and
das
test
mov
dec
jmp
push
push
mov
les
ins
lds
ret
nop
fist
(bad)
or
pop
pop
cld
data16
inc
push
xor
stos
adc
push
out
sub
jae
ja
mov
mov
clc
xor
pop
sbb
je
in
gs
add
push
pop
shl
adc
out
dec
cmp
out
js
data16
xchg
xor
mov
aaa
fld
mov
sub
(bad)
mov
outs
push
push
push
push
pop
or
xor
sbb
leave
mov
std
or
push
and
push
jp
cmp
cmp
cs
or
(bad)
push
pop
jae
adc
or
mov
add
cmps
fwait
sub
or
cmp
push
shl
mov
push
push
retf
pop
dec
pushf
jmp
inc
dec
loopne
and
fwait
mov
loopne
xlat
sbb
dec
mov
pop
(bad)
repnz
push
dec
mov
out
or
mov
icebp
loope
bound
cmps
xor
stc
dec
loopne
push
shr
movs
movs
(bad)
mov
mov
adc
pop
in
and
cmps
aad
xchg
ret
pushf
outs
mov
inc
jbe
xchg
lahf
adc
int3
fadd
sbb
pop
xchg
mov
ja
test
mov
arpl
pop
mov
push
ds
and
sub
retf
adc
mov
jg
(bad)
push
xchg
xor
fsubr
pop
xchg
fiadd
scas
leave
mov
mov
adc
mov
(bad)
xor
inc
std
jmp
inc
dec
xchg
mul
je
inc
xor
cmp
jne
hlt
dec
lods
out
sbb
inc
inc
cmc
outs
pop
inc
icebp
jo
cld
int
imul
xchg
push
into
lahf
xor
xor
(bad)
xchg
pop
pop
mov
test
stc
lahf
stos
or
aas
xlat
add
add
movq
ror
cmp
sbb
xchg
mov
mov
je
aad
xchg
xor
out
popa
adc
dec
dec
jo
(bad)
adc
dec
mov
mov
xor
push
inc
xchg
xor
in
jp
push
jecxz
aaa
push
adc
hlt
pop
out
mov
xor
mov
icebp
scas
dec
mov
sub
mov
mov
ins
mov
pop
cmp
inc
sbb
mov
push
inc
lods
fidivr
mov
pusha
ds
out
push
adc
test
sbb
loop
pop
in
(bad)
les
lahf
push
rcl
mov
jae
mov
jp
cmp
adc
and
sbb
mov
add
pop
arpl
iret
add
jne
(bad)
popf
xor
adc
inc
dec
mov
inc
stos
mov
jp
bound
add
sub
cmp
js
cmp
mov
(bad)
cmp
xchg
lods
mov
in
pop
outs
lea
inc
aam
jbe
jns
fisttp
xchg
inc
add
loop
sub
sub
mov
shl
sar
shr
addr16
push
jecxz
idiv
aad
inc
cld
jg
mov
dec
inc
xor
mov
test
cli
mov
fsubr
pop
outs
cmps
scas
adc
mov
fsubrp
jmp
ss
mov
xchg
out
(bad)
mov
mov
es
test
jmp
ja
repz
push
outs
enter
imul
adc
xor
imul
das
pop
fiadd
cmc
arpl
loopne
pxor
into
and
dec
sub
mov
sub
cmp
mov
jp
pop
sub
and
dec
test
jmp
pop
repnz
and
mov
mov
imul
loopne
dec
ror
outs
test
data16
retf
push
adc
mul
in
jmp
jno
mov
push
or
fscale
pop
bound
ins
or
adc
pop
inc
pop
shr
mov
outs
sti
into
inc
dec
sbb
mov
shl
adc
call
data16
(bad)
pusha
scas
pop
mov
nop
and
xchg
cmp
int
loop
jb
fwait
pop
cmp
push
test
jg
and
push
int3
std
push
jae
dec
(bad)
cld
div
jmp
fidivr
in
jo
jle
cmp
dec
pop
and
xchg
in
cmps
pop
inc
sub
ror
and
aad
loop
mov
sub
or
sahf
inc
sbb
dec
dec
push
adc
ins
lds
sbb
pushf
cs
jne
and
mov
sub
int3
leave
paddw
cld
and
xchg
cmps
adc
aaa
adc
pop
add
(bad)
xchg
cmp
or
cmp
xchg
rcl
jle
loope
jge
sahf
in
gs
push
mov
add
and
xchg
add
out
jae
retf
and
call
fbld
dec
rcl
adc
mov
test
(bad)
lahf
ss
adc
dec
pop
inc
outs
sbb
cwde
pop
js
neg
lods
sub
xor
loopne
or
loopne
es
in
mov
call
loop
test
popa
mov
out
out
pop
gs
stos
and
rcr
outs
pop
sbb
or
sbb
iret
test
add
push
xor
fisttp
imul
lods
add
inc
xchg
jmp
and
aam
test
ret
fisubr
fidivr
mov
cmc
mov
dec
push
hlt
sub
dec
cmp
in
dec
mov
addr16
fs
retf
and
or
(bad)
mov
daa
push
gs
push
cmp
in
movs
popf
fs
sub
lods
xchg
imul
sub
repnz
cld
in
leave
and
in
cmp
xor
add
or
test
adc
arpl
hlt
or
rcr
mov
xor
addr16
push
test
or
retf
dec
sti
add
popf
outs
outs
push
mov
xlat
lock
mov
aaa
mov
sbb
inc
xchg
jg
or
xor
mov
mov
scas
jno
cmp
mov
dec
cmp
dec
and
(bad)
in
clc
sbb
cmp
pop
je
lock
jne
push
or
jns
push
loope
mov
pop
mov
in
and
out
jbe
jbe
in
pop
nop
hlt
pop
push
or
repnz
push
imul
fisubr
pushf
das
add
and
adc
mov
and
inc
je
call
ja
mov
test
xor
push
sub
aad
jae
fwait
and
ja
push
xor
jmp
jmp
dec
shr
in
mov
jbe
lds
ret
(bad)
sub
test
jp
dec
add
popa
adc
movs
popa
ins
mov
mov
mov
sbb
(bad)
out
dec
push
paddusw
jecxz
mov
fcom
pop
fisttp
fwait
addr16
jg
and
imul
xor
outs
sub
add
mov
or
rcr
sub
int3
movs
xor
dec
stc
dec
pop
jle
das
xor
movs
daa
add
push
xchg
in
xchg
jbe
or
fnstsw
test
xchg
push
mov
repz
sti
push
cmp
add
loope
cmp
pmullw
loope
sub
mov
adc
sbb
(bad)
mov
test
popf
jp
pop
mov
sub
cli
adc
int3
enter
pusha
mov
xor
push
pop
push
cld
es
sub
pop
push
mov
cs
repz
push
retf
cli
xor
mov
xchg
xchg
ret
out
push
lods
cmp
movs
int3
inc
movs
jns
pop
xchg
sbb
pop
test
mov
xchg
mov
scas
dec
jno
pop
ins
mov
out
imul
(bad)
leave
inc
pop
lock
jno
fdivr
dec
aam
push
mov
jnp
addr16
sub
test
inc
xchg
call
loop
pop
xchg
cdq
xchg
pop
stos
cmps
dec
stos
test
loopne
xchg
jl
sbb
out
inc
sub
std
or
hlt
jp
jae
mov
push
mov
sar
leave
mov
repz
pusha
sahf
sub
mov
jbe
test
push
nop
dec
je
and
pop
dec
(bad)
pop
psubusb
mov
int
mov
dec
paddb
es
loope
add
rcl
ins
jp
(bad)
out
shl
lea
aad
push
pushf
xchg
fcmovne
add
into
ins
pushf
and
test
je
inc
sub
sahf
fidivr
(bad)
jp
retf
adc
das
repz
inc
in
mov
popa
pop
add
mov
xchg
in
or
xchg
or
jg
or
(bad)
mov
adc
mov
popfw
cmp
mov
fwait
xchg
push
adc
mov
xchg
sbb
ins
mov
rcl
mov
inc
cmps
mov
out
out
mov
ja
ja
pop
mov
jns
pop
popa
test
data16
cmp
dec
xchg
es
nop
xchg
cmp
xlat
ret
loopne
lds
adc
cs
rcr
or
adc
adc
push
addr16
loop
iret
fdivr
add
rcl
add
mov
int
sub
sub
hlt
or
pop
mov
stc
iret
or
dec
repnz
sbb
shr
and
shr
scas
sub
or
adc
imul
in
inc
mov
push
ins
das
daa
popa
pop
push
push
adc
jecxz
clc
out
call
fs
and
push
mov
test
mul
mov
retf
cmps
aam
mov
in
test
cli
xor
xlat
mov
mov
movs
xor
pop
ss
aam
mov
jl
je
cwde
pop
xchg
retf
xor
and
mov
sub
out
or
out
pop
out
cdq
in
pop
mov
shr
in
ds
scas
in
pop
push
jle
(bad)
jg
mov
lods
scas
mov
xor
jb
inc
add
stos
mov
imul
mov
and
in
adc
(bad)
jmp
cmp
mov
mov
mov
aad
jmp
fs
nop
and
ret
stc
movs
neg
cmps
inc
ror
sbb
sub
repz
(bad)
pop
test
cmp
ins
(bad)
jge
cmp
jne
push
add
movs
and
pop
pop
inc
inc
enter
into
adc
push
dec
mov
push
test
test
and
push
test
in
cmp
retf
mov
sub
data16
outs
sti
das
outs
jmp
jnp
fcmovb
push
sti
clc
adc
fsubr
add
dec
jo
fs
cmp
pop
icebp
pop
lods
jne
and
fidivr
(bad)
mov
lahf
cmps
mov
adc
ss
in
int
cmp
imul
gs
pop
scas
repnz
adc
add
or
mov
mov
and
fmul
icebp
or
ror
stos
jmp
xchg
cmp
xchg
icebp
pop
or
ins
xor
addr16
inc
js
ret
mov
inc
pop
ret
mov
xlat
lds
fistp
add
ds
jo
ja
push
push
out
daa
and
lds
lods
inc
and
inc
in
xor
test
movs
jge
and
outs
cmp
pop
adc
jmp
dec
shr
xchg
or
das
add
add
jmp
fsub
cmp
or
jb
ret
mov
int
cmp
and
pop
ror
test
push
aad
push
cli
mov
mov
mov
sbb
jno
xor
mov
dec
aam
out
into
dec
ins
rol
push
in
lds
shl
xor
lods
mov
inc
jmp
mov
(bad)
xchg
add
pop
cmps
ds
push
cwde
mov
add
dec
lock
jne
lds
mov
xor
xor
aas
rcl
push
movs
and
sub
or
push
call
in
cmp
popa
loopne
in
xchg
ins
cmp
(bad)
and
into
retf
xor
int
dec
pop
test
jge
int
dec
es
pop
cli
adc
jns
mov
or
xchg
push
daa
fisttp
mov
and
push
and
repz
mov
mov
cmp
sbb
inc
fistp
add
cmp
into
(bad)
cmps
div
fcom
(bad)
and
imul
jae
sahf
push
nop
mov
rcl
mov
jmp
cdq
aas
aas
mov
mov
call
aaa
into
and
inc
or
inc
movs
test
push
adc
ror
dec
xchg
repz
aam
pusha
inc
adc
jmp
les
repnz
add
mov
inc
xchg
jl
fnstsw
or
push
(bad)
mov
add
ins
jecxz
adc
xchg
movs
shl
fwait
add
cmp
cmp
cmc
add
stc
cmp
jae
pop
mov
rcr
inc
pop
and
outs
arpl
outs
push
ror
adc
push
punpckhdq
jg
sbb
ds
and
xor
mov
jge
pusha
jns
add
in
jge
cs
inc
jmp
je
add
xchg
push
mov
cwde
mov
jb
xchg
stc
mov
pop
lea
clc
ror
out
jp
mov
sahf
cmp
lahf
pushf
xchg
cmp
xchg
ror
jp
push
mov
fild
(bad)
pop
add
ret
mov
cld
push
xchg
cli
xor
and
jbe
mov
xor
pop
mov
or
pop
push
and
mov
dec
mov
mov
cmp
js
cmps
shr
loope
push
and
dec
out
call
movs
push
mov
stos
inc
sub
lea
loope
push
inc
mov
xchg
or
mov
dec
ins
cli
push
(bad)
fdivr
pop
and
xchg
adc
jp
adc
inc
dec
or
cmp
ja
ss
fst
pop
xchg
and
out
arpl
retf
lods
jbe
rcl
clc
shr
jp
scas
popf
cmp
jle
data16
out
mov
dec
and
mov
push
mov
mov
int3
xor
dec
jl
push
outs
mov
sar
cmp
int3
(bad)
sahf
fucomp
jecxz
mov
loopne
in
push
push
and
sub
hlt
and
test
arpl
jle
mov
adc
int
cmc
in
cli
xor
lods
je
fiadd
repnz
sub
(bad)
xchg
add
mov
mov
inc
mov
xlat
jl
(bad)
test
ret
fs
inc
push
xchg
jmp
cmp
push
xchg
xlat
(bad)
mov
data16
call
sar
inc
popa
or
scas
jb
xlat
dec
inc
mov
jbe
seta
mov
mov
fiadd
in
jecxz
cmp
add
add
jp
outs
mov
fisub
into
movs
inc
push
inc
pop
fist
cmp
out
fdivr
add
sub
in
push
into
fwait
call
pop
in
pop
or
push
push
sub
pop
xchg
add
pushf
adc
sbb
or
loopne
shl
mov
fmul
dec
int3
repnz
shl
or
add
push
loop
cmp
jne
add
xchg
adc
call
push
and
or
into
das
outs
ror
pop
arpl
ror
test
adc
cmc
inc
add
fbstp
inc
lahf
xchg
mov
cmp
les
jg
pop
sub
push
jmp
movs
xchg
sbb
mov
jle
sbb
(bad)
fisttp
stos
xor
mov
hlt
jns
in
enter
or
out
jb
rol
nop
inc
stos
lahf
clc
movs
(bad)
pop
scas
repz
inc
and
fdivp
jae
mov
inc
mov
cmc
add
sbb
outs
mov
loope
jo
ss
mov
adc
paddd
leave
sti
mov
cdq
mov
arpl
pusha
int
xlat
scas
pop
xor
adc
sbb
inc
cli
sub
mov
jns
and
or
lods
sbb
cmc
jo
aas
dec
mov
test
mov
mov
or
dec
dec
outs
sar
or
imul
jmp
xchg
sub
test
jmp
cmp
xchg
fwait
mov
cmp
aam
outs
mov
(bad)
clc
jae
addr16
pop
push
ror
movs
cmps
jno
ins
mov
pop
mov
call
daa
stos
and
sub
loopne
mov
(bad)
fnsave
add
leave
aad
das
mov
out
xchg
or
out
xchg
xor
xchg
scas
jmp
out
shr
mov
push
adc
nop
cwde
mov
jmp
sub
xchg
add
dec
loop
mov
cmp
mov
inc
and
mov
pop
dec
mov
xor
or
retf
and
push
pop
movs
pop
jae
xchg
push
(bad)
mov
jno
movs
aad
inc
test
enter
adc
in
imul
sub
or
pop
fadd
sbb
div
call
in
push
outs
gs
ret
sti
ins
fidiv
add
clc
dec
fstp
add
and
cmp
push
fwait
inc
loopne
ficomp
dec
sbb
test
or
sbb
or
jb
sub
fild
imul
sbb
cmp
data16
das
lds
jl
cmp
xchg
jl
push
icebp
call
shr
aas
mov
and
mov
fwait
mov
add
popa
test
cmp
scas
into
ja
jns
inc
cmp
add
push
xor
push
mov
std
std
stc
push
xchg
daa
cmp
stc
inc
rcr
pop
(bad)
mov
sbb
loope
cli
and
les
mov
add
jge
mov
bound
xchg
dec
sbb
sub
pop
and
(bad)
cmp
lahf
add
jb
xor
mov
(bad)
je
xor
inc
mov
aaa
xor
call
daa
loop
add
mov
inc
mov
xchg
xor
in
jnp
loop
rcr
jne
and
add
aad
add
push
or
stc
test
in
push
pop
(bad)
xlat
xor
xchg
xor
jg
hlt
xchg
and
sub
push
mov
mov
retf
jbe
dec
push
stos
cmps
fs
out
add
jnp
dec
inc
adc
cmp
xchg
adc
mov
mov
or
inc
mov
(bad)
mov
mov
or
mov
push
jb
sbb
dec
lods
call
mov
pop
fdiv
pop
cmp
pop
dec
shrd
mov
mov
adc
call
cmp
fisttp
in
jne
jnp
jb
fisttp
jmp
xor
xchg
xor
xchg
mov
lods
mov
mov
or
mov
push
fcom
fdivp
test
fnstenv
(bad)
xor
xchg
jle
sar
mov
fisub
push
loop
adc
mov
imul
ror
dec
sar
sbb
xchg
xor
cmps
fadd
mov
jmp
cmc
push
in
pop
mov
scas
jle
cs
cmc
mov
fld
cmp
xor
sub
sbb
mov
xchg
outs
ins
ret
push
mov
out
ret
ror
dec
push
sbb
jb
add
mov
repnz
(bad)
(bad)
cmp
fwait
test
push
leave
push
nop
jmp
in
xor
cli
pop
and
jg
mov
dec
or
or
xchg
sbb
ja
sub
aam
pop
rol
imul
imul
mov
js
cmp
cmp
scas
and
in
dec
call
jge
shl
jnp
add
stc
call
cmp
inc
inc
mov
sahf
stos
xchg
jmp
stos
inc
xchg
rcr
xor
ins
retf
test
jo
lods
in
ds
cmps
and
jge
aam
shl
add
(bad)
xchg
push
pusha
cmp
and
push
jp
pop
clc
not
mov
mov
push
ss
aas
out
pop
mov
je
push
pop
arpl
ja
call
push
ror
sbb
fiadd
inc
cmps
sbb
arpl
xchg
pop
shr
push
push
clc
(bad)
fwait
cs
cmp
xchg
fild
lea
adc
ins
mov
jne
mov
fcom
jo
je
cld
cdq
mov
popf
outs
jno
pop
rcl
xor
out
adc
mov
inc
xchg
push
mov
rol
xchg
out
cmps
inc
mov
imul
mov
(bad)
addr16
das
sub
ror
push
pop
lods
mov
cmp
sti
ror
xor
mov
out
(bad)
ins
jnp
push
out
mov
rcl
adc
sahf
aad
std
into
or
ins
xchg
xor
aaa
arpl
jg
sbb
cmps
pop
mov
outs
cmp
xor
adc
sar
sub
fidiv
sub
out
enter
cmp
int3
mov
cmp
mov
cld
cmp
jmp
mov
stos
ror
icebp
ret
mov
xor
xchg
adc
adc
aad
push
add
jmp
lds
push
bound
adc
cmps
mov
fdiv
jb
movs
das
cmp
pop
xor
js
sahf
jbe
test
push
and
xchg
shl
mov
jns
std
fs
outs
addr16
mov
mov
mov
mov
cmps
adc
jnp
mov
nop
ins
loop
push
xor
dec
jbe
xchg
mov
jnp
dec
lock
push
pop
arpl
xor
mov
movs
in
jb
ja
iret
stc
adc
(bad)
xchg
ror
cmp
xor
mov
jmp
push
in
pop
fidivr
int3
xchg
mov
push
jl
bound
shl
aaa
ss
in
icebp
imul
cdq
pushf
daa
xor
jg
call
xor
rcr
mov
mov
xor
jge
xchg
daa
dec
push
push
xchg
lahf
lods
cmps
shl
clc
les
mov
iret
mov
inc
push
pop
das
enter
xchg
xchg
xor
mov
add
out
imul
sbb
mov
mov
stc
jmp
std
fs
xchg
push
xchg
leave
mov
and
push
ins
loope
js
lahf
push
inc
aad
adc
dec
adc
(bad)
and
mov
pop
cmp
add
shr
cmp
inc
mov
xor
enter
push
in
shl
call
push
(bad)
sub
cmp
into
mov
sub
data16
rcl
mov
adc
or
out
sub
int
repz
push
lock
ins
movs
aad
xor
arpl
mov
lock
out
mov
lods
call
adc
popa
xor
adc
(bad)
jmp
add
je
out
(bad)
sub
in
mov
out
shr
jno
and
jo
test
je
xor
mov
mov
xor
fsub
sbb
inc
inc
repz
sahf
sub
pop
int
shl
fidiv
add
cdq
sub
pop
pushf
adc
pop
(bad)
pop
push
stc
mov
out
les
movs
out
xchg
jne
lods
mov
cmc
ret
(bad)
pop
mov
or
pop
cmp
pop
push
loop
fs
in
loope
jle
in
pop
mov
fs
cmp
popa
pop
scas
sub
jge
dec
mov
push
dec
shl
jnp
dec
lahf
sbb
mov
(bad)
adc
sbb
dec
cwde
inc
adc
mov
pushf
push
jmp
mov
ins
loopne
in
xchg
jo
ins
inc
jo
xchg
add
pop
mov
and
push
enter
ficomp
lea
cdq
mov
clc
sbb
xchg
fdivr
cmps
adc
sahf
cmp
add
lea
out
and
test
pop
push
jl
in
popa
imul
popa
sbb
rcl
shr
sub
jmp
bnd
and
(bad)
shl
dec
ror
ins
dec
popf
xor
cmps
out
jecxz
cmp
add
inc
jo
pop
or
scas
or
xor
mov
or
pop
mov
fild
stos
mov
dec
mov
push
xlat
add
ins
test
push
sub
mov
fs
xor
add
mov
add
jl
and
add
dec
bound
jo
xor
jae
dec
cli
sub
sub
addr16
mov
or
inc
xchg
aad
pusha
dec
sub
loope
shl
push
pop
mov
aaa
rol
jne
data16
ss
mov
cdq
push
jo
(bad)
sahf
dec
xchg
push
xor
dec
inc
push
lods
(bad)
imul
push
imul
push
pop
lods
xlat
das
push
xchg
adc
sbb
adc
adc
outs
shl
jp
jbe
push
icebp
dec
xor
jae
lahf
push
cmp
leave
jns
adc
and
nop
outs
pop
jmp
push
push
lds
cmps
test
rol
xchg
(bad)
ror
cld
aaa
mov
mov
dec
mov
pop
arpl
lods
xlat
sbb
je
clc
imul
pusha
fld
lock
cmp
pusha
ret
pop
out
or
pop
es
adc
fcom
cmps
(bad)
test
push
std
shl
jno
mov
jle
inc
ret
fild
xor
aaa
adc
js
mov
dec
fwait
outs
pop
dec
fwait
aas
xchg
push
pop
sub
pushf
aas
jmp
pop
outs
in
sti
push
mov
jmp
xchg
xor
pusha
add
push
gs
stc
sub
pop
retf
dec
jo
mov
pop
pop
inc
sub
sub
test
mov
or
jge
mov
mov
push
mov
sti
fmul
mov
and
and
ss
add
mov
or
cmps
out
cdq
or
or
dec
inc
cmp
xchg
pusha
mov
xchg
xchg
push
int
and
test
adc
cmp
outs
inc
movs
cmps
loope
pop
inc
call
pop
mov
sub
pop
leave
cmp
int3
shl
add
test
add
push
arpl
hlt
jns
xchg
ds
jmp
sbb
jp
call
cld
(bad)
mov
sbb
pop
and
js
xchg
xor
mov
mov
cmc
adc
clc
xchg
or
push
shr
sbb
jbe
(bad)
sti
inc
cmps
inc
call
sub
ins
jne
or
lahf
mov
clc
scas
jns
pop
imul
mov
icebp
iret
mov
rcl
shl
(bad)
clc
pop
push
movs
outs
sti
and
lahf
retf
out
jo
sub
fst
dec
mov
out
jne
scas
out
repz
sub
aam
inc
add
shl
pop
(bad)
jmp
or
or
jo
fidivr
mov
push
or
in
repnz
cmp
shr
cli
dec
addr16
mov
prefetchw
or
xchg
or
shl
ss
mov
push
fsub
cmp
mov
(bad)
sbb
and
cmp
out
pop
cmp
out
mov
aaa
xor
dec
inc
hlt
add
mov
dec
lahf
mov
sbb
mov
inc
ins
add
cmps
and
dec
xlat
icebp
or
mov
mov
out
sub
(bad)
call
jnp
cwde
not
sub
jmp
shl
dec
or
nop
cld
push
stos
imul
add
pmulhuw
xor
sub
(bad)
adc
sub
cmp
nop
lds
popf
mov
xor
dec
cmp
pop
and
repz
cmp
pop
xchg
sub
ds
push
retf
or
stos
cmp
int3
pop
es
or
mov
add
(bad)
icebp
add
xor
jl
push
ja
or
mov
iret
enter
mov
jge
xor
rcr
mov
cld
and
int
cmc
mov
inc
inc
mov
inc
sbb
out
sub
push
fisubr
sbb
ret
add
mov
push
sahf
repz
jl
loope
xchg
sbb
pop
pushf
pop
out
push
inc
pop
sbb
lahf
loope
push
and
ret
xchg
jb
loope
mov
xor
jle
dec
scas
xor
les
es
mov
pop
lds
outs
pop
jge
xchg
add
loop
mov
jnp
(bad)
pop
lock
(bad)
sub
out
in
jmp
mov
or
clc
xor
or
inc
jno
jne
xor
pmaddwd
lods
mov
adc
retf
add
sbb
cwde
add
mov
xor
fstp
iret
pop
adc
and
sub
dec
and
or
loop
mov
adc
mov
sub
jge
ror
jbe
aad
push
sbb
mov
mov
(bad)
pop
or
cmp
es
aam
(bad)
xor
mov
mov
jmp
sar
sbb
pop
scas
cmps
(bad)
int
arpl
fwait
jecxz
pop
jbe
xchg
pop
retf
push
in
or
out
arpl
xchg
xchg
add
ror
dec
add
sub
test
mov
cmps
idiv
hlt
popa
je
mov
cld
mov
sub
mov
rcr
push
cs
dec
pop
xor
add
test
sti
cwde
push
inc
mov
and
or
popf
sbb
out
(bad)
cmp
test
dec
leave
jne
nop
pushf
int3
jl
ss
mul
ins
aas
in
nop
fbld
add
jmp
stos
loopne
sbb
mov
pop
jb
outs
xor
inc
jl
and
(bad)
xlat
pop
(bad)
jmp
adc
add
das
mov
dec
icebp
jecxz
mov
test
int
dec
xchg
lock
mov
stc
movs
std
pop
jmp
cmps
int
xor
in
xor
popf
mov
lds
(bad)
out
mov
shl
push
scas
jno
sbb
or
cmp
or
mov
int
inc
or
popf
push
adc
cmps
loop
add
(bad)
movs
or
and
add
cmp
dec
iret
fstp
sub
fdivr
xchg
inc
jecxz
pushf
test
loopne
cmc
ins
scas
xor
adc
xchg
push
arpl
fcom
cs
pop
mov
int
cmp
cwde
dec
inc
mov
not
inc
adc
mov
or
jg
aaa
xchg
push
pop
int3
xchg
das
sub
push
add
push
mov
stos
cs
dec
mov
aad
mov
fdivr
imul
sbb
imul
xor
dec
push
popa
fwait
cmc
leave
(bad)
hlt
test
rcl
aaa
push
xlat
test
sbb
jne
and
test
add
mov
arpl
stc
iret
and
xor
loope
test
sub
cmp
mov
call
xchg
add
xor
inc
enter
cmp
push
aaa
xor
(bad)
cdq
and
sbb
dec
sbb
jp
inc
aaa
jp
imul
out
ss
or
push
xchg
mov
adc
pop
push
movs
push
push
loop
nop
hlt
mov
xor
mov
sub
shr
cmp
xchg
sbb
mov
xchg
sub
pop
into
add
pop
clc
enter
and
popf
cmps
lods
xchg
sub
fwait
xchg
lods
scas
ins
xchg
mov
add
out
push
inc
gs
ffreep
(bad)
jnp
push
mov
lock
push
pop
scas
inc
pop
sbb
icebp
inc
ss
shr
xor
jmp
or
and
imul
ss
dec
daa
and
and
add
ja
inc
pop
stc
sbb
enter
jmp
(bad)
sahf
xchg
xor
xchg
scas
mov
cmp
js
and
sbb
(bad)
or
out
pop
dec
mov
xchg
in
inc
mov
jno
mov
shl
push
sbb
xor
mov
push
jne
xor
adc
test
and
ret
test
inc
movs
xchg
sub
xchg
std
add
test
clc
jb
fdiv
inc
jle
mov
lock
push
jnp
cld
jae
inc
jge
(bad)
ficomp
push
imul
arpl
arpl
xor
push
inc
cmp
loope
sub
mov
cmp
and
cmc
sbb
test
mov
fidivr
sbb
xor
jge
and
add
cmp
add
push
jae
pusha
inc
and
and
sub
dec
push
mov
iret
js
gs
jmp
loop
into
leave
ins
cwde
add
mov
jecxz
or
stos
cmp
jae
cmp
xchg
addr16
js
ja
pop
fisubr
sbb
popa
aad
mov
mov
bound
retf
es
out
pop
repnz
mov
jmp
fisttp
mov
in
ret
lahf
xchg
sub
shl
cs
xchg
mov
xor
add
xor
xlat
stos
jbe
jne
cs
mov
pushf
and
pop
inc
cdq
in
add
dec
es
pop
repnz
outs
(bad)
nop
xchg
jno
aaa
aad
mov
xchg
es
mov
out
pop
dec
test
out
pushf
daa
and
push
imul
cmp
push
cli
pop
minps
iret
aam
or
cmp
test
(bad)
je
pusha
fnstcw
mov
inc
xlat
outs
xor
adc
(bad)
jmp
mov
fistp
js
and
mov
adc
icebp
adc
fwait
in
pusha
popf
mov
ret
sbb
add
call
mov
xchg
xchg
fild
push
pop
mov
xchg
push
push
jbe
push
loope
fidivr
inc
mov
sub
movs
dec
pushf
leave
mov
sub
imul
fst
cmp
pop
sti
ret
repnz
test
stc
mov
sub
jmp
mov
pop
mov
bound
cmp
jmp
jb
dec
xchg
pop
cmp
add
pop
pop
push
sahf
(bad)
sbb
push
xchg
add
test
or
inc
or
(bad)
sub
or
jmp
xchg
fnsave
pop
repnz
cwde
rcl
mov
pop
repz
fcmove
loope
scas
jb
and
xchg
pop
aaa
adc
(bad)
push
mov
dec
fsubp
ins
mov
cmp
das
jnp
push
xor
push
shr
dec
movs
dec
cld
push
pavgb
aam
adc
movs
(bad)
daa
ins
das
jne
lock
(bad)
push
push
out
cmp
add
shl
xor
mov
lods
fistp
mov
xchg
push
popa
mov
movs
fisubr
int3
test
cmp
sbb
(bad)
loop
push
arpl
int3
or
add
(bad)
push
pop
lea
or
pop
mov
sub
ret
fdivr
loope
fs
fnstcw
inc
outs
inc
pop
retf
add
mov
jbe
or
rcl
push
leave
pop
pop
push
mov
push
mov
pop
popf
pop
daa
mov
rol
repnz
add
mov
xor
pop
jb
cli
jge
outs
push
sbb
test
pushf
mov
iret
(bad)
mov
jl
cdq
dec
push
fisttp
jmp
cmps
int3
addr16
mov
mov
icebp
mov
(bad)
add
mov
popa
rcl
push
dec
sar
(bad)
inc
add
cmps
std
mov
inc
mov
sahf
cmps
sbb
mov
push
lds
sub
push
retf
jns
push
cli
dec
sbb
daa
jo
jb
aaa
imul
xchg
xchg
clc
mov
add
loopne
fwait
xchg
xchg
pop
in
xchg
call
(bad)
mov
sahf
ins
lds
loop
lods
and
mov
cmp
cmp
mov
dec
mov
cmp
jle
xor
push
sar
fist
mov
pushf
push
daa
mov
mov
push
inc
sub
mov
cmp
or
pop
dec
cmp
push
addr16
jecxz
and
adc
push
add
jecxz
fidiv
dec
adc
ret
xor
idiv
cmp
call
(bad)
sbb
popa
push
sub
sbb
cmps
pop
sahf
scas
mov
pushf
and
cli
int3
ds
sbb
mov
in
add
out
out
(bad)
jg
and
add
rcl
leave
mov
adc
jne
push
adc
leave
dec
fimul
in
leave
icebp
sbb
sub
and
xchg
out
lock
adc
(bad)
xor
and
bound
mov
and
fiadd
sti
popf
dec
pop
sub
add
cli
sub
cs
sub
mov
xchg
add
clc
pmaddwd
jo
scas
leave
dec
aas
ret
iret
push
shl
rcl
lods
cs
push
mov
fwait
inc
call
adc
push
inc
push
rol
mov
test
cmps
mov
push
imul
mov
(bad)
xchg
(bad)
sti
pop
loop
aad
les
dec
sub
out
loope
dec
enter
call
mov
fcom
mov
sbb
mov
stos
mov
inc
push
jb
push
cmc
xor
jno
nop
or
pop
add
jnp
jno
bound
sbb
inc
mov
adc
sub
loope
les
xchg
movs
dec
adc
inc
jne
dec
push
sbb
or
pop
popa
cdq
lahf
pop
dec
jns
pop
jbe
push
clc
das
loopne
ja
inc
adc
int3
aam
cmp
repnz
mov
outs
test
aad
aas
je
test
in
mov
sbb
mov
dec
cmp
std
mov
mov
sub
popa
and
sbb
sbb
icebp
int3
and
(bad)
test
xchg
fistp
sub
add
lods
lods
add
adc
jns
xor
cs
push
mov
mov
test
jbe
jae
cmps
icebp
int3
repnz
out
push
push
xchg
adc
push
or
je
jp
sub
icebp
add
in
sti
cmp
call
sbb
dec
and
(bad)
dec
rcr
out
jb
pop
leave
mov
mov
or
nop
dec
sub
jnp
add
mov
cmp
and
inc
xor
cmp
dec
push
push
jne
mov
or
mov
push
inc
clc
mov
call
inc
mov
std
jg
jne
push
ret
rcr
pop
popa
cdq
jo
daa
dec
int3
ja
enter
xchg
pushf
pusha
mov
xor
scas
iret
(bad)
aas
mov
and
outs
call
pop
mov
or
push
test
dec
and
push
rcl
fldl2t
cdq
pop
lahf
popa
dec
sar
jp
pop
loope
hlt
shr
in
retf
xchg
xlat
sub
cmp
jp
popf
into
popf
mov
lods
mov
mov
inc
jnp
add
push
hlt
outs
clc
add
cmp
push
xchg
test
jo
rcl
jae
adc
pop
pop
mov
cmps
xor
test
jmp
retf
lods
sub
pop
outs
push
je
test
js
into
movs
and
sbb
les
and
mov
mov
aaa
(bad)
cmp
push
rcr
xchg
or
cmp
or
and
imul
adc
mov
shl
sar
test
xchg
sub
lock
into
xchg
jg
lods
cwde
inc
cdq
rcl
mov
cmp
and
in
test
inc
loope
enter
sbb
cwde
fsubp
icebp
(bad)
movs
and
mov
test
fidivr
inc
xor
pop
jne
or
ret
xor
call
and
call
pop
xor
mov
test
or
cmp
test
add
jmp
(bad)
mov
jmp
enter
mov
jno
pop
xchg
push
cmovb
retf
add
outs
and
nop
icebp
inc
sub
jb
icebp
in
sbb
test
loope
sub
cmp
xchg
scas
mul
leave
(bad)
imul
or
mov
repnz
push
(bad)
cmp
push
sahf
je
fld
out
aas
add
inc
jns
push
jb
add
add
loopne
pop
rol
jne
xchg
loope
jg
or
stos
mov
or
jmp
cmp
mov
dec
mov
mov
or
outs
push
stos
fdiv
inc
push
pop
scas
or
sbb
add
or
adc
push
ds
scas
aam
push
sub
xor
imul
xor
sbb
or
jg
xor
dec
adc
loopne
jecxz
pop
(bad)
fwait
sub
dec
mov
les
xor
adc
popf
cmp
xlat
pop
fbld
aad
inc
in
lods
push
movs
xlat
xchg
into
call
mov
xor
imul
and
imul
cli
dec
push
scas
out
out
imul
sub
fmulp
lock
cmps
stos
jmp
pushf
cmp
fndisi(8087
mov
sub
xor
xchg
data16
loopne
inc
rcl
cli
push
jnp
fs
xor
repnz
test
pop
jbe
addr16
add
sub
mov
sbb
cs
fs
outs
(bad)
aad
cmp
rcl
mov
mov
inc
retf
pop
cmp
inc
xchg
xor
mov
fwait
int
je
lods
sbb
dec
inc
int3
pop
xor
pop
and
shl
sbb
dec
jae
xor
int
std
dec
call
pop
add
push
ror
gs
loop
or
and
dec
lock
cmp
mov
jle
jno
test
pop
mov
pop
cmp
or
mov
mov
stc
cld
xchg
test
call
and
xchg
pop
mov
movs
aad
mov
es
inc
std
addr16
mov
jb
adc
bound
fisttp
fsub
fwait
xchg
das
sub
sbb
mov
mov
mov
jecxz
(bad)
daa
ja
aaa
add
jno
sar
sahf
or
jmp
fwait
xor
push
in
mov
pop
lock
and
inc
cmp
ror
cwde
adc
inc
pop
mov
ret
dec
inc
inc
jecxz
ins
xchg
lahf
nop
xchg
sbb
sti
cld
popf
mov
repnz
add
xchg
mov
cmc
mov
push
sub
mov
je
out
sbb
and
popa
pop
outs
push
inc
fsubr
jne
mov
stos
fstp
cmc
popa
push
mov
mov
inc
in
shr
hlt
jg
sbb
adc
push
enter
mov
jecxz
data16
cs
jmp
test
add
jmp
cli
cmp
out
stos
ss
test
or
pop
cmp
pushf
or
test
mov
(bad)
jmp
lds
(bad)
jnp
inc
or
int3
inc
inc
xchg
cmps
xchg
icebp
ds
mov
ror
mov
and
dec
leave
mov
dec
inc
mov
into
sahf
add
adc
int3
out
hlt
mov
cmp
push
sub
push
retf
jo
sahf
xchg
call
les
icebp
pop
push
sbb
(bad)
xor
imul
lds
mov
mov
mov
sub
jecxz
dec
retf
popa
(bad)
or
jmp
inc
and
daa
adc
(bad)
(bad)
int
xchg
mov
iret
int
inc
adc
lods
pop
jmp
retf
(bad)
sub
dec
cmp
pop
pop
repz
xchg
imul
xor
or
dec
inc
cmp
inc
push
loop
sti
ficom
popa
inc
stos
jg
inc
mov
ja
aaa
pop
dec
add
les
cld
add
mov
rcr
cdq
cmc
(bad)
loope
push
mov
xchg
xor
jg
xor
xchg
call
cwde
mov
cs
cmp
ins
cld
add
cmps
inc
pop
or
push
pop
lods
adc
push
cld
sar
add
(bad)
stos
dec
test
out
or
ds
pop
lahf
jle
das
adc
das
ja
push
push
pop
call
lea
pop
scas
cdq
je
fcompp
movlps
push
mov
sub
xor
out
(bad)
retf
jns
jne
in
mov
fsubr
or
outs
xchg
add
ss
and
imul
pop
cmp
repz
and
mov
cwde
xchg
mov
stos
test
cdq
(bad)
cmp
cmp
in
cmps
sub
arpl
rcl
inc
or
mov
(bad)
or
pop
push
xor
movs
jl
inc
pushw
rcr
outs
lock
jecxz
xlat
pushf
dec
lods
aam
pop
xlat
fisub
pop
sbb
mov
jb
cmp
cmp
dec
aad
dec
sahf
ins
push
imul
ins
and
sub
aaa
imul
sbb
lock
out
adc
pop
sahf
mov
inc
fdiv
arpl
popa
dec
das
sbb
fwait
popf
jmp
movs
shr
cmp
aas
xchg
fidiv
js
or
mov
or
or
int3
stos
adc
pop
loopne
(bad)
ja
xchg
push
mov
add
sbb
icebp
mov
cld
add
fnstsw
test
mov
sub
cmp
cwde
out
xor
and
cmp
mov
aas
ins
sbb
cmp
lods
cmp
push
pushf
int3
daa
sahf
int3
jae
addr16
test
imul
and
pop
in
mov
mul
cmp
ss
xchg
js
xor
jns
jmp
xchg
test
xchg
mov
movs
les
mov
lds
sub
es
pop
loop
pop
fst
pop
les
cdq
pop
mov
mov
es
mov
retf
jnp
mov
xor
mov
pop
addr16
test
dec
cmps
mov
push
int
in
cld
jle
pop
loop
jg
leave
pushf
outs
xor
push
pop
push
jno
sbb
jl
push
or
in
sub
scas
pop
mov
in
cmp
fcmovnbe
js
lock
cmp
stos
sub
cmc
dec
std
mov
addr16
fadd
outs
cmpxchg
lahf
add
outs
pop
jno
gs
push
sub
cmp
jne
js
mov
in
jnp
(bad)
jge
scas
addr16
or
fistp
jle
pushf
dec
out
push
out
(bad)
ds
cmps
xchg
push
iret
test
mov
int3
jp
icebp
popa
push
icebp
imul
iret
daa
test
mov
adc
rol
addr16
push
loop
sub
mov
pushw
or
ins
mov
mov
jbe
cdq
sbb
mov
push
sub
mov
add
mov
cmp
push
and
jae
int3
mov
in
loopne
ret
pop
int
mov
sub
inc
(bad)
outs
sub
imul
shl
mov
inc
inc
or
stos
cs
xor
ror
pop
or
shl
sbb
jmp
sbb
mov
ret
sub
es
jmp
fist
pop
or
xor
loopne
pop
sbb
cwde
jb
cmp
mov
in
stc
dec
and
aam
xchg
xchg
fwait
sbb
repz
inc
popf
data16
daa
nop
and
hlt
mov
rol
jp
sahf
fild
ss
cmp
mov
cmp
mov
push
out
scas
mov
xor
sbb
scas
mov
xchg
repz
popf
clc
aaa
ins
dec
sub
int
aam
xchg
mov
dec
ins
nop
jg
mov
lods
add
retf
dec
push
sahf
js
sbb
and
out
mov
aaa
xchg
aam
inc
mov
or
xchg
pushf
hlt
imul
loopne
lahf
fimul
call
xor
mov
not
xchg
inc
sar
shl
(bad)
cld
stos
xchg
jecxz
scas
rcr
sahf
pushf
mov
or
ret
cmc
arpl
add
adc
(bad)
in
or
or
jns
retf
cs
in
lods
cmp
repnz
(bad)
xor
inc
pop
outs
add
xchg
push
sbb
sub
mov
(bad)
in
mov
(bad)
sbb
test
and
call
xor
mov
(bad)
xchg
inc
bnd
imul
lods
adc
mov
cmp
cmps
popa
push
mov
fld
mov
je
sbb
sub
xchg
mov
pusha
inc
sub
dec
dec
mov
inc
adc
jmp
push
inc
lods
dec
call
inc
(bad)
jmp
dec
and
push
ins
int3
fs
test
aaa
sub
loopne
xor
xor
cwde
dec
lods
jle
xchg
loope
dec
enter
sub
mov
or
sbb
sub
inc
prefetchw
sub
pop
neg
push
xor
stc
std
in
cmp
imul
push
jno
std
das
(bad)
cmp
dec
or
mov
or
push
stc
push
enter
and
call
cs
jg
daa
aad
outs
push
cdq
mov
and
daa
or
lahf
mov
dec
into
shl
add
inc
sti
cmp
and
push
push
in
bound
sahf
test
iret
test
inc
aad
cmps
das
(bad)
push
cmp
in
dec
cmp
dec
mov
pop
cli
cli
mov
mov
pop
dec
pop
cmp
dec
lea
and
pop
jmp
repnz
retf
jmp
not
jp
popa
das
in
(bad)
je
imul
(bad)
jo
icebp
cld
xchg
xor
cli
fcomi
arpl
dec
jmp
jae
cmp
ins
jno
call
push
icebp
dec
in
sub
in
movs
retf
push
es
ds
mov
add
lock
or
push
imul
icebp
lahf
lahf
xchg
sbb
mov
nop
(bad)
inc
dec
ins
push
aas
dec
inc
cmp
hlt
ins
cmc
jo
xor
sbb
outs
mov
in
and
imul
mov
enter
adc
add
fwait
loopne
stos
test
gs
jae
dec
das
out
sti
jns
loope
inc
pusha
sub
xor
in
cmovne
inc
cmp
stc
nop
sub
mov
mov
push
jne
in
js
cli
jle
outs
inc
lods
leave
hlt
mov
rcr
bound
mov
ja
mov
jnp
adc
stos
repnz
adc
(bad)
pop
push
mov
inc
pop
sahf
fimul
cmps
iret
inc
xor
add
int3
and
pop
cmp
scas
(bad)
cs
push
(bad)
js
push
push
lea
je
ret
leave
sahf
dec
in
(bad)
stos
fcomp
xor
push
sbb
pop
dec
ss
fs
mov
mov
addr16
add
popa
add
inc
cdq
stc
push
std
cmps
arpl
into
fisttp
or
cli
sti
pusha
or
pop
sub
popf
mov
aas
push
jne
and
mov
je
xchg
(bad)
mov
xchg
popf
repnz
scas
mov
cmp
push
frstor
(bad)
cmp
in
psadbw
dec
ret
scas
scas
data16
dec
leave
and
inc
loope
xor
mov
ins
mov
mov
push
fcmovbe
mov
pop
adc
inc
mov
(bad)
pop
adc
(bad)
dec
xchg
js
or
pop
or
bound
inc
dec
shr
jne
ret
mov
mov
pop
cdq
and
fnstcw
inc
inc
mov
inc
fcmovbe
out
or
cli
sbb
call
dec
sahf
xor
gs
dec
lock
repz
xchg
test
je
(bad)
ins
cli
pop
in
scas
test
std
jecxz
js
cmps
dec
ret
or
fwait
aad
lods
cmp
lahf
femms
sbb
cmp
xchg
add
mov
fidiv
inc
inc
out
xchg
popa
imul
push
daa
and
xor
rcl
(bad)
mov
xchg
pusha
or
daa
jb
enter
cmp
jp
mov
pop
dec
inc
mov
mov
mov
les
cwde
sub
sub
ficom
mov
pop
(bad)
iret
xchg
ss
mov
outs
loop
xchg
lock
test
adc
dec
mov
push
test
nop
mov
in
jns
xchg
shl
jecxz
popf
sahf
jbe
cdq
aam
sub
fstp
xlat
cmps
inc
xchg
popf
jmp
shr
retf
sahf
xchg
fnstenv
aas
mov
in
shr
mov
test
(bad)
into
outs
int
out
mov
xchg
sub
mov
dec
popa
mov
test
aad
mov
mov
mov
call
test
dec
scas
test
in
sbb
sub
cmps
inc
and
add
push
in
das
cdq
in
add
cmp
cli
mov
inc
pop
retf
addr16
xor
cli
adc
pop
loope
mov
push
loopne
scas
xchg
imul
jle
repnz
dec
mov
or
jne
mov
out
dec
jg
jmp
or
out
ror
mov
(bad)
jns
fisttp
call
aaa
pop
and
stc
cs
mov
shl
mov
rcr
or
cmp
nop
lods
cli
xor
xchg
or
fnsave
(bad)
lock
mov
jg
push
xor
dec
sbb
xor
sti
enter
cli
mov
mov
dec
test
or
inc
cmp
mov
mov
adc
ja
aaa
shl
adc
cmc
imul
dec
mov
das
inc
arpl
out
mov
out
xchg
mov
push
cmps
adc
xchg
data16
xor
cmps
add
repz
push
push
lds
cld
arpl
mov
aam
shl
pop
or
inc
call
and
in
adc
cmc
mov
and
(bad)
shl
push
ret
test
cld
or
mov
jg
mov
icebp
xchg
sbb
mov
cld
jecxz
jmp
nop
push
out
or
jmp
out
sbb
jno
cmp
mov
out
stos
test
les
pusha
mov
popf
(bad)
ins
bound
dec
stos
cmc
or
mov
fisubr
test
mul
repz
mov
cmps
sbb
fs
inc
jb
sar
fwait
cld
mov
add
pop
pop
xchg
mov
xchg
jmp
test
popa
lods
jbe
outs
or
xor
test
aad
pop
mov
inc
inc
pop
in
outs
(bad)
stos
jge
ds
or
cmp
cmp
test
pop
je
push
cs
lahf
scas
mov
inc
ins
mov
mov
loopne
pop
push
ficomp
dec
and
ins
inc
call
pusha
jmp
sbb
aad
div
jns
cmps
jmp
ret
aad
call
and
test
int3
retf
rol
adc
add
xor
mov
xchg
shl
xchg
add
and
or
(bad)
jb
cmp
mov
xchg
sbb
pop
shl
sub
jp
mov
call
pop
add
fisttp
pop
push
imul
inc
test
lods
sub
mov
imul
jbe
jge
lods
pusha
mov
jnp
fnstenv
xchg
mul
stc
arpl
mov
ret
push
push
cdq
daa
push
sbb
out
in
test
pushf
je
or
in
in
test
mov
test
mov
stos
out
les
imul
sbb
popa
sahf
inc
sub
push
(bad)
mov
mul
loope
daa
xchg
imul
jle
cmps
dec
sar
test
fcom
cmp
fadd
outs
jge
pop
sbb
cld
sub
dec
cmp
cdq
les
in
mov
inc
mov
mov
cs
shr
xor
jo
jnp
xor
adc
popf
xchg
cmp
repz
test
inc
neg
pop
arpl
dec
fnstcw
push
arpl
pop
leave
mov
mov
cwde
add
cmps
test
shl
cmc
mov
jg
inc
and
push
or
cmc
push
movs
inc
add
mov
push
jnp
hlt
fstp
sbb
jne
or
mov
jmp
or
(bad)
or
mov
lea
mov
mov
and
mov
ds
es
dec
mov
xchg
cmp
repnz
sbb
int3
popf
ss
dec
jbe
fnstsw
mov
push
loope
adc
das
imul
shr
mov
int
add
adc
test
adc
push
xor
aaa
(bad)
sbb
xor
mul
in
lahf
ins
das
and
fwait
pop
in
cmps
cmc
pop
mov
adc
das
movs
xor
movs
mov
jmp
jb
call
lea
adc
push
out
push
bndldx
adc
mov
sbb
data16
stos
dec
shr
(bad)
mov
cwde
inc
add
xchg
add
mov
dec
fild
jo
xchg
div
jg
mov
pop
fdiv
cmp
mov
ds
cmps
test
mov
and
loopne
loope
(bad)
cmp
push
cld
mov
iret
and
sub
mov
sbb
pop
xor
pop
cwde
test
cs
adc
into
mov
(bad)
jl
add
stc
or
jmp
lahf
jbe
mov
push
ins
loope
imul
push
aaa
repz
adc
fs
xchg
arpl
or
int3
adc
adc
lahf
xchg
in
mov
dec
add
sbb
jecxz
mov
and
sahf
xchg
(bad)
push
sahf
repz
pop
and
and
stc
mov
ret
popf
or
cs
bound
shl
xor
scas
push
push
outs
or
repz
clc
push
pop
loope
and
push
out
inc
sti
sti
cmp
outs
(bad)
mov
leave
sbb
inc
cmp
or
adc
cmp
xchg
sub
out
push
out
nop
lahf
sti
cmc
cdq
mov
sub
or
sar
jmp
adc
(bad)
mov
test
int3
mov
dec
iret
push
in
sbb
push
pop
cwde
pusha
sahf
mov
mov
adc
push
ret
stos
clc
adc
push
adc
ins
nop
mov
mov
mov
mov
hlt
dec
popf
adc
cmp
fadd
push
rcr
jo
fiadd
into
add
sahf
mov
xchg
in
mov
lock
add
popa
jbe
add
rcl
jns
iret
out
inc
pop
dec
mov
lods
dec
aam
pf2iw
push
les
mov
dec
es
lds
or
push
xor
sbb
mov
dec
or
pusha
fwait
or
sbb
pusha
dec
icebp
sbb
out
int3
ins
enter
pusha
out
push
sbb
sub
or
out
arpl
test
cmp
pop
fstp
xor
mov
sar
fst
mov
jge
xchg
push
jns
mov
rol
xor
and
push
imul
les
and
stos
and
rcl
or
cwde
cmps
scas
stos
sub
cmp
pusha
enter
arpl
mov
jo
xor
push
xchg
sub
jg
inc
nop
loope
out
jle
cwde
js
ins
cwde
push
push
sahf
pop
mov
jne
adc
leave
out
jecxz
jbe
in
jb
dec
jp
sbb
add
add
cmp
xchg
aam
retf
ins
mov
or
mov
dec
xchg
movs
jbe
mov
cmps
fbld
cld
mov
sbb
fwait
test
scas
popa
mov
sahf
add
adc
add
in
pop
daa
out
and
(bad)
fcomp
adc
pop
cmp
mov
adc
xchg
(bad)
arpl
mov
(bad)
aad
fdiv
fild
sbb
jae
cmps
sbb
ds
inc
xor
fsub
sub
dec
inc
inc
repz
sub
rcr
xor
xor
in
dec
cmp
pop
and
jmp
push
leave
in
sub
pop
daa
ds
cs
inc
test
(bad)
or
popa
call
test
push
or
add
les
call
sbb
xlat
and
mov
sbb
es
pop
out
loope
lods
out
loopne
popa
arpl
or
pop
aas
(bad)
xchg
arpl
lock
pop
pop
push
jae
(bad)
icebp
mov
js
and
js
sti
xor
xchg
fisttp
pop
jbe
enter
stos
bound
(bad)
std
mov
js
add
int3
xchg
in
mov
or
ss
cdq
call
sbb
loope
mov
xor
xor
inc
mov
adc
push
aas
sbb
fdivr
or
mov
and
call
retf
jnp
sar
mov
scas
pop
out
sahf
and
int
xor
mov
jbe
(bad)
mov
fsub
dec
test
call
mov
push
cmps
cwde
call
mov
inc
add
(bad)
dec
mov
je
xchg
xlat
mov
push
(bad)
ds
cmp
daa
loopne
xchg
es
push
gs
pop
mov
test
sbb
cli
fist
mov
push
adc
test
ins
movs
adc
and
pusha
pop
lods
in
lods
or
sub
push
pop
mov
dec
inc
loop
bound
fidivr
inc
pop
stos
sub
sub
dec
movs
ss
xchg
aam
dec
xchg
in
and
lods
sbb
fwait
out
fsub
adc
jmp
xchg
pop
cs
ror
jbe
lahf
shl
pop
xor
pop
in
sbb
idiv
enter
adc
pop
or
jo
addr16
in
sbb
std
ins
mov
int3
stos
xchg
stos
mov
mov
add
inc
inc
and
and
jbe
lods
cmps
push
(bad)
enter
aaa
imul
xchg
sbb
jg
add
xor
rcr
cmp
push
loope
out
aam
(bad)
dec
jnp
xchg
fstp
das
ja
sub
daa
inc
lea
jl
stos
rol
sbb
std
sbb
inc
xchg
inc
pop
mov
xlat
adc
jmp
int
lahf
mov
xor
test
ja
mov
mov
pop
jo
loopne
xor
cmp
imul
(bad)
(bad)
mov
jle
fisttp
adc
add
fmul
dec
int
imul
test
repz
(bad)
out
stos
adc
or
outs
or
shl
lahf
or
sub
pop
test
mov
push
cmp
std
cmp
cmps
cmc
mov
pop
cmp
pop
and
jns
mov
clc
push
sbb
mov
adc
repz
jno
jne
int
cmp
mov
lds
dec
shr
in
jb
vcmpps
into
push
sti
rol
jmp
and
sahf
or
mov
clc
inc
inc
rcl
push
sbb
fisubr
or
test
imul
ds
add
cmps
adc
in
mov
dec
and
add
inc
je
jp
push
push
mov
push
mov
test
push
frstor
or
pop
cwde
ret
push
neg
popa
inc
and
fsub
jnp
and
retf
nop
nop
loop
and
dec
sbb
dec
das
fmul
or
or
pop
dec
jne
fsubr
in
sbb
xchg
adc
pop
ret
sub
cmps
cmp
pop
pop
adc
or
jnp
or
sub
clc
aam
ja
and
(bad)
jp
sbb
(bad)
mov
daa
jge
inc
sub
adc
fcom
leave
push
pop
lds
shr
call
ja
xchg
and
mov
jp
fisubr
and
pop
xchg
in
fmul
push
add
jl
fistp
dec
daa
(bad)
inc
iret
pushf
hlt
push
add
ret
mov
nop
inc
fs
push
nop
jno
cmps
fst
mov
push
xor
xchg
cli
xchg
mov
jmp
pop
adc
xor
pop
inc
lods
js
mov
mov
aam
dec
repz
in
mov
and
pop
repnz
mov
inc
ins
add
push
rcr
xchg
add
push
aas
fstp
cmp
jbe
xchg
fldcw
push
hlt
or
add
out
mov
sti
popf
fnstenv
test
mov
fcmovb
and
xchg
mov
dec
xor
gs
in
lock
sbb
jnp
ret
out
fnstsw
push
dec
cmp
mov
mov
cmps
ds
test
sbb
mov
(bad)
std
mov
lds
loopne
fistp
mov
jmp
sub
dec
add
push
js
jns
jmp
cmove
fs
jl
ins
inc
xchg
mov
sub
(bad)
ja
mov
add
xchg
add
push
test
gs
push
ret
adc
mov
aaa
call
mov
push
pop
call
pusha
ds
jmp
mov
cwde
or
push
cli
movs
or
lds
pushf
jmp
addr16
xor
pop
and
jg
retf
pop
test
idiv
int
add
xchg
xor
pop
mov
xchg
push
or
push
ret
shl
cmp
mov
cdq
mov
sub
test
aam
call
loopne
fs
das
pop
dec
retf
jae
push
mov
arpl
not
xchg
xchg
fild
sbb
jns
enter
(bad)
xchg
repnz
fs
mov
(bad)
mov
inc
daa
xor
pop
inc
cmc
or
mov
pop
xor
dec
shl
out
lods
sub
cmp
jb
sub
sub
dec
ins
xor
cmc
mov
pop
mov
or
js
popa
imul
ret
movs
jno
nop
leave
push
jmp
pop
jne
xor
jns
call
xchg
lds
fwait
std
pop
call
jae
pusha
scas
jns
int3
and
adc
and
ror
outs
or
popa
movs
or
pop
pop
js
jb
pop
shl
inc
pushf
add
inc
cs
cmp
test
or
jbe
(bad)
popf
sbb
out
mov
int
cmp
popa
sub
dec
adc
dec
fcomp
loop
mov
out
pop
mov
cmc
ins
jmp
in
mov
mov
jns
jmp
xor
cmp
(bad)
sub
call
mov
test
sbb
mov
bound
cmp
test
loope
cs
mov
jmp
xchg
adc
push
pop
leave
jae
fadd
leave
mov
adc
inc
dec
sbb
outs
cwde
or
test
push
or
cs
mov
clc
(bad)
ffree
(bad)
stos
xchg
pop
cli
jne
push
cmp
inc
aam
push
cmc
cs
jecxz
xchg
adc
cli
call
cmp
ins
xor
push
sub
test
pushf
ficom
sbb
std
pop
and
dec
sbb
jne
mov
dec
je
or
jmp
add
mov
popa
retf
out
movs
into
xchg
js
inc
push
push
sahf
mov
call
popa
push
(bad)
shr
mov
xor
aaa
adc
mov
jnp
stc
fidiv
adc
fsubrp
and
ja
jns
mov
call
aad
movs
cmp
jmp
pop
dec
and
push
aas
(bad)
dec
jns
iret
pop
dec
inc
dec
cmp
sar
adc
cmc
dec
sub
outs
add
adc
dec
sbb
rep
and
popa
aaa
leave
jl
test
or
cmp
int3
jmp
ins
mov
leave
mov
mov
dec
loop
dec
pusha
cmps
mov
dec
sub
pop
inc
imul
sub
push
jp
cmp
neg
mov
ss
and
aas
cmp
cli
loop
lods
jg
rcr
shl
cdq
iret
scas
inc
cmps
ins
(bad)
lock
and
ret
sahf
pop
xchg
(bad)
enter
sub
inc
leave
mov
and
mov
jp
(bad)
outs
pop
arpl
xchg
out
leave
add
leave
cli
outs
xlat
fs
shr
rol
je
in
add
out
lods
pop
mov
jns
sbb
cmc
sbb
cli
popf
sbb
push
pop
xchg
loope
push
shl
push
fimul
je
sub
scas
sub
lods
push
and
push
out
repnz
cmp
jno
das
sbb
(bad)
jbe
lea
retf
mov
pop
and
add
nop
nop
inc
cmp
shl
loopne
gs
xchg
ins
cmp
bound
sbb
fild
(bad)
into
jl
and
ret
in
(bad)
fild
dec
add
and
(bad)
mov
ins
cmc
ret
jb
aaa
pop
mov
out
ficomp
and
push
scas
aaa
icebp
(bad)
mov
cmp
push
dec
mov
popa
iret
sub
iret
fnstsw
push
outs
outs
(bad)
mov
cmp
in
mov
mov
sub
push
fs
xchg
int
movs
in
inc
inc
pop
or
dec
sub
aad
push
dec
add
sbb
call
addr16
int3
or
iret
xchg
lods
dec
or
cmp
fadd
out
pop
test
mov
jne
cmp
out
dec
push
enter
cdq
xlat
push
dec
mov
or
(bad)
ss
sbb
or
push
xor
std
push
jmp
hlt
sbb
nop
pop
sti
scas
pop
loopne
(bad)
adc
mov
push
add
xor
sbb
sbb
pop
adc
inc
fisubr
adc
sub
test
sub
data16
jp
(bad)
sbb
xchg
xor
cmp
(bad)
mov
and
sub
mov
jae
mov
sub
iret
mov
sub
enter
retfw
mov
lods
int
inc
sar
sbb
ins
xchg
iret
push
daa
aas
lahf
adc
cmp
xchg
mov
xor
lods
cmp
push
not
inc
and
lock
imul
xor
je
mov
adc
(bad)
int
push
aam
retf
stos
adc
iret
sbb
ss
nop
inc
aam
mul
int3
dec
sbb
pop
dec
or
or
push
shl
repz
cmc
mov
add
mov
fdivr
std
pop
enter
test
sub
popa
pop
lods
out
jb
scas
mov
jl
sub
ret
push
fidiv
(bad)
fmulp
(bad)
ds
jp
add
scas
pop
popa
xchg
mov
jbe
rcl
xchg
fwait
and
add
int3
push
add
fdiv
dec
and
push
pop
aas
jns
enter
sbb
xor
ins
(bad)
and
imul
jo
mov
fdiv
sbb
sub
imul
dec
cmc
xchg
(bad)
repz
mov
xchg
(bad)
or
test
ret
and
and
mov
nop
int3
sub
mov
add
scas
sbb
jle
ds
outs
mov
cmp
fmul
gs
inc
outs
repz
popa
iret
or
fistp
or
cmp
ins
test
xor
sbb
jmp
ja
mov
add
dec
xor
(bad)
and
sub
loope
into
mov
sbb
dec
call
dec
arpl
pushf
mov
xlat
mov
ja
imul
push
or
xor
sub
jg
xor
int3
(bad)
mov
add
adc
xor
adc
ds
int
pop
mov
les
jecxz
inc
nop
lods
popa
pop
mov
xchg
sub
cmp
dec
mov
in
daa
in
jnp
jl
mov
pop
stos
movs
cmps
push
adc
imul
dec
iret
fidivr
or
sub
cld
scas
sub
cmp
repz
jnp
push
fisub
movd
mov
js
jl
test
xchg
cmp
mov
fsubr
hlt
push
jg
mov
enter
cmp
das
push
xchg
loope
enter
mov
pop
movs
mov
repz
movs
mov
push
mov
ret
inc
mov
mov
je
mov
jecxz
retf
xchg
push
sbb
mov
mov
cmps
jns
pushw
dec
dec
jns
xor
and
pop
repz
mov
sahf
sub
cld
stc
and
sub
pop
xor
(bad)
cwde
and
scas
gs
loop
mov
xchg
mov
arpl
nop
cwde
sub
mov
push
ja
and
mov
cmp
jecxz
retf
aad
xchg
mov
or
add
ror
mov
pushf
adc
cmps
or
xor
sbb
mov
pop
adc
xor
inc
jb
dec
pop
push
and
or
push
sbb
addr16
cmps
aaa
dec
aam
add
(bad)
xlat
pop
repnz
mov
movs
les
cmp
inc
jae
aam
dec
int
mov
xor
xchg
outs
xor
or
mov
jl
push
cmp
dec
jmp
retf
sar
pop
cdq
jmp
fmul
sub
mov
movs
shr
fidiv
pop
mov
rcl
fwait
sub
xlat
ss
inc
mov
mov
js
mov
or
add
sahf
leave
push
imul
sbb
nop
xchg
mov
sub
int3
hlt
fcomp
adc
cmps
out
or
loopne
in
movs
rol
jbe
fstp
cmps
pop
das
mov
jmp
call
xlat
je
jnp
jmp
fistp
lods
or
out
push
aam
jmp
sub
lods
sbb
test
mov
add
xor
mov
mov
mov
inc
sub
scas
or
leave
scas
ss
or
cmps
mov
and
adc
out
dec
popf
sbb
aaa
and
or
rcl
mov
int3
xor
sbb
int
adc
dec
mov
loope
push
and
inc
ss
(bad)
xor
dec
cs
cmps
es
push
popa
jb
sub
and
iret
ja
fimul
inc
adc
cwde
sub
stc
imul
pop
jbe
in
or
cmp
fistp
loopne
dec
inc
stc
xor
inc
mov
rcr
inc
fs
sub
push
not
test
aaa
push
push
and
rcr
sub
dec
jbe
xlat
or
ret
pop
jp
xchg
fldcw
aaa
jg
xor
sub
jno
pop
adc
push
into
ds
add
bound
adc
sub
rol
pop
jne
mov
scas
js
mov
lock
adc
adc
dec
out
cmp
sbb
jns
cmp
ja
or
inc
into
and
int
sar
loop
mov
xchg
push
shl
(bad)
iret
adc
rcr
mov
out
cli
push
xor
and
mov
add
imul
and
iret
add
mov
aad
call
sti
xchg
and
xchg
mov
movs
fisttp
inc
stos
ins
xchg
pop
arpl
mov
pop
mov
mov
shr
fcmovnb
xor
mov
sbb
js
add
cmp
push
popf
mov
into
mov
mov
push
shr
inc
cli
cmp
jp
repnz
mov
fstp
dec
in
je
mov
outs
mov
jecxz
test
add
out
push
and
xchg
js
pop
es
dec
mov
lds
fsub
mov
scas
xchg
fiadd
inc
mov
jbe
or
mov
(bad)
pop
mov
sub
push
sbb
out
sub
mov
pop
sub
mov
or
mov
test
mov
cmc
(bad)
fwait
xor
gs
dec
mov
mov
int3
push
xor
inc
(bad)
hlt
xchg
push
into
jmp
punpckhdq
enter
(bad)
je
test
stc
mov
cmp
call
lock
stos
or
retf
nop
sub
lock
jns
sbb
pop
retf
xor
out
test
sub
scas
mov
loop
mov
aad
es
pusha
nop
cwde
jg
aad
add
ins
fldcw
and
sbb
sahf
inc
les
dec
repz
jp
add
xchg
jl
cvtpi2ps
inc
fwait
mov
gs
dec
dec
adc
dec
and
dec
sti
fild
(bad)
(bad)
loope
adc
add
popa
cdq
mov
sbb
mov
xchg
movs
or
jne
add
mov
je
cs
(bad)
scas
mov
xchg
xchg
dec
(bad)
scas
adc
ds
test
js
pop
shl
dec
jnp
test
push
mov
cmp
fidivr
leave
mov
push
ficom
jecxz
call
sbb
loope
ss
fldcw
js
mov
dec
cmps
cmps
dec
(bad)
repz
push
repnz
pop
push
repz
mov
or
add
shl
xor
and
adc
sbb
push
sbb
mov
xor
sbb
int
in
(bad)
cdq
neg
jnp
scas
shr
mov
lds
(bad)
or
or
mov
shr
inc
test
mov
test
sar
mov
enter
xchg
hlt
mov
out
pop
cmp
xor
ins
mov
inc
or
inc
js
xchg
pop
cwde
je
test
mov
enter
in
jl
loope
test
pop
add
faddp
ss
push
cmc
aaa
pusha
rcr
cs
or
shl
stos
ja
mov
xor
jns
shl
jno
fwait
cld
xor
clc
pushf
jmp
or
sti
cdq
add
arpl
mov
inc
test
loopne
in
mov
movs
mov
pop
rol
test
mov
jg
sub
mov
fsubp
adc
cmc
mov
inc
fbld
push
push
push
jno
les
mov
icebp
mov
rcr
cld
mov
push
int
sub
jle
jl
ror
pop
call
or
sbb
cwde
xchg
cli
dec
jg
xchg
sahf
push
(bad)
or
ficomp
push
scas
fild
jmp
cmc
xor
jb
scas
les
fistp
outs
xchg
imul
push
shr
push
fs
adc
stc
mov
loop
loopne
pop
xchg
loope
push
call
cmp
mov
mov
(bad)
jg
lods
cmp
fild
or
add
push
ins
jne
adc
xchg
iret
les
sahf
xchg
clc
cld
adc
clc
pop
dec
jo
fcom
fst
pop
and
sbb
(bad)
push
cmp
sub
ret
rol
and
push
pop
mov
pop
ficom
push
out
pop
adc
push
dec
xor
sbb
fisubr
cmp
jmp
int3
mov
ds
push
mov
push
cdq
jmp
inc
retf
xchg
retf
push
adc
or
lock
mov
lods
inc
push
dec
adc
std
sbb
inc
enter
cs
mov
jle
popf
add
repz
das
adc
fist
mov
dec
lock
rol
jmp
data16
(bad)
int3
mov
jmp
sti
mov
push
jle
clc
int
xor
mov
loope
movs
or
or
shl
std
xor
loopne
pop
or
sbb
push
pop
lock
pop
add
scas
or
ss
jae
outs
add
adc
loopne
sbb
jnp
mov
cli
addr16
bnd
mov
jae
je
sbb
xchg
(bad)
fst
movs
adc
retf
jmp
ret
adc
in
in
mov
mov
cli
and
or
ins
adc
in
xchg
cmp
in
sti
dec
lods
stos
das
jmp
mov
mov
inc
div
sub
aas
sbb
inc
daa
add
ja
pop
pop
out
jmp
scas
and
sub
jne
in
outs
jmp
lahf
push
sbb
je
clc
(bad)
hlt
xor
iret
in
cs
mov
mov
cwde
mov
or
cld
fs
xor
xor
mov
sub
ss
loop
cmps
inc
mov
mov
jo
or
aaa
add
xchg
pop
shl
sbb
jp
gs
aad
out
ss
idiv
add
cmp
or
scas
arpl
and
lea
mov
mov
xor
(bad)
fs
xchg
pop
jle
sbb
dec
sar
ja
push
rcl
push
sub
push
sub
outs
mov
jo
sub
add
push
mov
clc
je
int3
pop
dec
push
sahf
adc
and
test
mov
mov
dec
(bad)
out
push
fcmove
lods
loop
push
jmp
mov
movs
cmp
push
popa
sub
mov
ret
add
adc
push
(bad)
paddusb
cmp
cmp
mov
xchg
mov
mov
adc
xchg
icebp
hlt
(bad)
and
pushf
movs
cli
dec
fwait
ins
stc
xor
xchg
loop
jp
mov
inc
loop
add
test
mov
cs
jno
sbb
(bad)
sbb
retf
add
xchg
cwde
inc
cmp
pop
adc
pusha
cmp
xlat
enter
push
mov
icebp
icebp
aas
push
xlat
cwde
cwde
test
inc
jg
jb
imul
cmp
mov
add
pop
pop
into
jg
push
jno
jmp
cmp
jo
scas
jb
add
ret
repnz
sbb
aam
lods
push
fstp
sti
rcl
stos
vpaddq
xchg
push
jl
outs
jge
frstor
daa
pop
cmp
scas
xchg
push
ss
inc
dec
repz
sub
cdq
and
inc
or
cld
pop
adc
cmp
out
imul
push
mov
xor
int
pop
jmp
mov
in
scas
pop
icebp
int
or
and
aaa
cmc
lock
or
dec
inc
and
inc
out
add
sbb
dec
mov
cdq
pushf
std
mov
xchg
loopne
mov
dec
(bad)
lock
and
sub
paddsb
fidiv
mov
out
pop
mov
fisubr
mov
pop
mov
xor
mov
mov
adc
(bad)
sbb
mov
pop
test
mov
dec
xor
or
frndint
frstor
mov
push
stos
mov
aad
stos
sub
loop
call
mov
pushf
sbb
out
inc
gs
(bad)
cmc
or
hlt
pop
std
mov
or
std
or
push
jne
stc
popf
in
pop
dec
sbb
jg
daa
movs
gs
aaa
xchg
repz
sub
enter
pop
(bad)
sbb
add
jbe
adc
sub
pop
leave
adc
cmps
push
fwait
pop
sub
add
mov
jo
inc
iret
imul
cmp
cwde
dec
push
gs
int3
add
pop
mov
cmp
inc
aad
inc
icebp
push
cmp
(bad)
js
iret
cli
dec
push
adc
outs
fwait
cmc
inc
xor
ss
add
ret
ror
or
jbe
xor
repz
inc
scas
das
outs
repnz
and
adc
push
sbb
inc
test
mov
inc
fisubr
call
in
cmc
pop
mov
xchg
push
mov
pop
outs
int
xor
push
sub
jge
mov
in
sub
jo
push
xor
mov
fsubrp
imul
push
in
das
cmp
sbb
inc
mov
jmp
sub
add
dec
loope
sahf
mov
popa
xor
push
(bad)
js
bound
sbb
xchg
not
daa
out
jle
aas
mov
call
rsqrtps
push
aam
pop
out
and
sbb
dec
dec
dec
popa
leave
inc
or
stos
mov
xor
inc
mov
push
je
mov
mov
inc
cmc
jnp
add
sub
and
push
daa
retf
pop
(bad)
push
jno
push
data16
or
and
jmp
pop
fstp
xchg
popa
hlt
inc
rcr
xor
adc
bound
js
ret
ins
dec
xchg
pop
cmps
dec
or
pop
mov
lds
enter
sbb
add
adc
nop
mov
xor
cli
push
rcr
in
popa
lods
pop
movs
or
dec
ja
or
cmp
push
dec
adc
mov
mov
push
sub
aad
push
fsubr
push
mov
leave
sbb
js
jns
mov
dec
inc
inc
outs
stos
bound
ja
mov
hlt
stos
and
loope
xor
aaa
pop
jo
and
ins
add
pop
ins
mov
out
pop
xlat
dec
mov
pop
jecxz
jecxz
je
lods
pop
xchg
adc
lahf
in
test
scas
std
cmp
(bad)
sti
pop
loope
ror
xchg
and
pop
cdq
adc
push
ds
sar
and
fst
sub
pandn
xchg
add
or
out
push
mov
xor
sbb
imul
or
stos
sar
in
data16
test
popa
enter
or
and
enter
push
cdq
or
je
jl
sbb
dec
mov
rcr
cmp
and
(bad)
sub
ja
(bad)
fs
fidivr
jl
push
iret
rol
setge
(bad)
push
inc
adc
out
sub
idiv
inc
cmp
shl
mov
dec
outs
xor
inc
push
jbe
xor
lods
stos
sub
fst
aaa
or
cmp
in
mov
(bad)
xchg
ss
dec
gs
mov
xlat
and
iret
mov
icebp
cmp
aas
jb
push
shl
ret
popa
mov
dec
jbe
sub
sub
sbb
push
adc
lods
fwait
or
pop
pop
in
in
mov
test
retf
or
push
mov
arpl
jecxz
into
sbb
ds
dec
adc
(bad)
in
jae
adc
movs
iret
ss
out
hlt
or
jmp
adc
rol
icebp
xor
in
or
iret
(bad)
xlat
mov
sub
dec
sub
std
(bad)
je
out
adc
(bad)
ror
fist
or
pop
(bad)
mov
and
clc
fnstenv
inc
mov
pop
ss
adc
pushf
into
ins
repz
cdq
rcl
cdq
imul
mov
push
stos
enter
fwait
dec
or
or
iret
mov
xchg
scas
fbld
jmp
dec
mov
dec
push
int
mov
sar
sub
dec
mov
mov
push
shl
sub
sbb
mov
mov
pop
sub
mov
out
clc
mov
dec
xchg
jo
xchg
cmp
pop
jmp
mov
xchg
ins
jp
pop
jecxz
addr16
pop
mov
xlat
jge
jecxz
cmp
mov
cmp
add
inc
cmp
push
mov
pop
sbb
ja
jecxz
sub
jl
or
mov
movs
retf
scas
jge
jg
imul
inc
popa
mov
scas
pop
inc
cmp
inc
add
add
iret
add
std
mov
int3
out
push
xchg
jmp
sahf
sub
outs
sbb
(bad)
(bad)
xlat
leave
mov
in
ror
push
(bad)
cmp
aam
pop
(bad)
je
repz
jbe
mov
lds
es
jg
stos
xchg
mov
adc
push
mov
movs
sbb
mov
jg
xchg
cbw
iret
jl
(bad)
mov
xor
add
and
pop
in
or
mov
loopne
cmp
ja
push
scas
cmp
leavew
mov
jo
fdivr
pushf
movs
jnp
icebp
xor
lock
cwde
fiadd
mov
jmp
dec
jbe
mov
mov
stos
adc
aas
push
arpl
mov
nop
mov
dec
pop
inc
or
add
ds
lea
and
dec
(bad)
int3
jo
popf
cmp
jne
cmp
(bad)
cmp
in
inc
jb
rcl
mov
pop
mov
enter
call
push
pop
mov
arpl
push
jl
adc
das
mov
mov
lahf
adc
scas
dec
add
or
not
and
jb
cmp
ficom
lock
adc
ret
push
iret
dec
jmp
xchg
sub
rol
jns
push
inc
mov
jne
in
push
mov
inc
repz
add
mov
and
ins
inc
xchg
sub
shr
adc
jle
push
xchg
aad
jnp
mov
icebp
movs
ror
mov
inc
and
push
pusha
push
jmp
mov
xchg
outs
les
cmp
mov
aam
inc
adc
ja
bound
and
mov
stos
sbb
into
mov
fstp
in
inc
mov
sub
mov
dec
fidiv
std
xchg
jmp
or
jae
or
cmp
(bad)
lods
push
pop
ja
adc
cmc
repz
mov
mov
fcom
arpl
mov
and
xor
xchg
push
repz
dec
pop
les
daa
aam
jb
out
cwde
pop
fild
adc
jne
mov
sbb
ret
jbe
push
mov
mov
or
cdq
jg
inc
lock
mov
mov
loope
jg
inc
fcomp
mov
adc
fwait
jp
pop
rol
push
mov
sub
mov
sbb
xor
xchg
mov
pop
mov
and
or
pop
pop
mov
jmp
cld
and
ret
xor
dec
pop
pop
in
add
xchg
cli
cdq
loopne
(bad)
pop
jo
inc
clc
pop
mov
js
out
push
mov
and
iret
mov
icebp
and
enter
sbb
mul
cmp
push
lods
and
leave
mov
add
fsub
mov
cmp
std
xor
mov
shr
cmc
sbb
jmp
add
sbb
cdq
push
mov
movs
pop
arpl
cmps
pop
mov
mov
arpl
pop
add
retf
inc
jno
rol
in
cmps
cmps
jno
aad
xchg
xor
ins
fdiv
xor
mov
xchg
push
push
sbb
jae
jecxz
popf
jl
bound
mov
aad
jae
cmp
shl
ror
cmp
ja
xor
xchg
xchg
movs
push
aam
adc
add
imul
xor
cmp
test
and
xor
mov
std
pushf
mov
lods
ja
repz
mov
nop
repz
ins
daa
xchg
(bad)
push
(bad)
cdq
pop
jl
xchg
outs
(bad)
pop
push
dec
lods
cmp
push
mov
sub
into
dec
repnz
adc
movs
test
in
jbe
inc
shl
push
out
cmp
dec
sub
push
adc
sbb
stos
push
mov
inc
mov
ins
repz
lahf
mov
jae
add
aad
iret
xchg
cwde
ds
pop
fild
ficomp
jle
int
dec
inc
aam
sub
inc
pusha
mov
jmp
imul
or
adc
xor
not
push
or
mov
or
test
mov
lds
(bad)
mov
repz
inc
lds
lahf
sar
ins
mov
repz
sbb
xlat
mov
sbb
jle
or
sbb
inc
mov
cmp
rol
test
cmp
sbb
bound
sbb
jne
xchg
dec
je
out
jecxz
xor
inc
repnz
mov
or
and
mov
rcl
addr16
or
xchg
les
das
xor
loope
test
out
je
pop
sub
cmp
mov
sub
inc
xor
pop
push
add
cld
(bad)
imul
push
add
xor
mov
jp
out
jmp
(bad)
aad
mov
adc
loop
mov
sub
mov
pop
pop
mov
das
sub
test
xchg
das
(bad)
fisub
xor
retf
push
adc
enter
sbb
cdq
popf
mov
push
push
loop
adc
cmc
retf
popa
xchg
jge
inc
push
or
mov
lds
inc
test
mov
jg
dec
das
pop
cld
iret
add
in
ret
mov
je
adc
int
sbb
mov
lds
dec
and
cmp
mov
dec
push
dec
mov
clc
jmp
mov
jl
mov
jne
repz
mov
jge
test
retf
cmp
in
repz
push
mov
fptan
xor
push
or
inc
push
mov
mov
mov
les
xor
in
pop
xchg
cmp
cmps
call
sar
cmp
ja
dec
adc
cmps
ins
loopne
ja
cdq
lahf
cmp
imul
call
xchg
je
mov
fidiv
jne
push
and
add
add
jae
popf
sub
cmp
push
(bad)
pop
pop
xor
inc
scas
lods
sbb
sub
mov
cmp
push
(bad)
sbb
aaa
jb
jp
push
adc
in
ins
(bad)
jg
test
aas
adc
sbb
dec
lds
sub
pusha
int3
sub
jno
cs
mov
sub
push
and
in
sub
sbb
xchg
cmc
push
in
das
push
mov
mov
js
or
xor
add
jmp
jg
cwde
out
or
jmp
jns
add
xor
ja
mov
push
fist
or
int3
pop
mov
push
es
inc
les
ret
mov
out
and
xchg
pop
fwait
xchg
mov
or
sbb
or
push
pop
mov
pop
cmps
call
pop
or
fild
jnp
dec
sbb
mov
jecxz
push
sub
aas
rol
adc
adc
xor
es
dec
(bad)
jno
enter
xor
pop
aas
jl
stos
xor
mov
mov
stc
cmp
xchg
or
popf
cwde
retf
pop
ds
shr
addr16
retf
sbb
push
xchg
cmp
pop
sub
repnz
shr
lds
dec
fstp
jae
cmc
ds
lock
and
pop
(bad)
mov
jp
sbb
xchg
xlat
movs
mov
xchg
pop
gs
jl
jp
xchg
scas
sub
dec
test
ficomp
es
sbb
cmp
outs
nop
pop
dec
mov
add
std
(bad)
sbb
stc
imul
xchg
cmp
xchg
add
mov
xchg
mov
mov
mov
adc
fbld
fs
daa
aam
pusha
jbe
or
jae
test
xchg
sti
mov
mov
aam
lea
inc
sar
jmp
rcl
mov
shr
jmp
sub
mov
cmps
fnstenv
mov
mov
std
iret
and
stc
sbb
stos
push
or
or
jle
sti
xor
data16
xchg
or
xorpd
and
rcr
sar
div
xchg
jns
or
mov
addr16
imul
push
mov
push
inc
inc
dec
jecxz
movs
addr16
adc
adc
push
sar
je
out
cmp
push
aad
sub
and
cli
(bad)
push
sub
pop
lahf
aas
sub
bound
dec
rol
add
call
mov
stc
push
ss
stos
arpl
pop
inc
xchg
add
dec
fmul
lods
call
xchg
mov
mov
arpl
ja
xchg
xchg
mov
ss
jle
sbb
(bad)
iret
fsub
les
pop
push
cmp
add
or
jo
les
cli
popf
and
ss
sar
xor
lahf
pop
xlat
sti
shl
push
inc
neg
mov
cli
pop
or
and
adc
mov
(bad)
(bad)
out
jmp
sub
inc
fst
out
loop
cmp
fcomp
ja
fst
rol
mov
cld
js
xor
xchg
mov
pop
xor
pop
sbb
ja
push
pop
ja
xchg
arpl
or
mov
push
pop
add
movs
mov
dec
mov
push
pop
or
ss
xchg
in
inc
aam
sub
adc
cdq
xchg
enter
sahf
mov
pushf
mov
mov
xlat
jno
seto
mov
(bad)
imul
jmp
cmp
hlt
mov
dec
jecxz
jmp
aam
pushf
mov
mov
outs
pusha
shr
cmp
dec
mov
pop
iret
ret
inc
(bad)
sahf
(bad)
dec
hlt
and
mov
(bad)
retf
pop
rol
dec
rcl
in
mov
clc
add
push
or
rol
test
jecxz
out
sar
mov
das
je
test
in
xchg
jne
into
test
fbstp
scas
retf
out
pop
mov
mov
mov
out
sub
inc
push
test
ret
ret
loop
or
inc
xlat
(bad)
and
jnp
addr16
shl
pop
out
dec
jae
xchg
cdq
pushf
out
jb
retf
shr
add
push
jecxz
outs
cmp
gs
or
dec
or
sbb
lods
imul
into
bound
into
(bad)
adc
or
cmps
xchg
fisubr
push
mov
out
mov
dec
and
popf
repnz
loopne
scas
pop
lods
push
aaa
push
inc
lods
mov
fbstp
push
push
int
ja
xor
mov
lahf
or
hlt
push
push
mov
mov
cmp
pop
popf
mov
fsubr
shr
push
stc
cld
dec
xchg
mov
mov
or
xchg
imul
pushf
ins
mov
xchg
sbb
xlat
mov
call
stc
mov
ds
out
add
mov
(bad)
xor
popf
cmp
fmul
sub
mov
stos
fldcw
mov
call
test
ja
(bad)
movs
stos
mov
mov
jmp
aaa
mov
and
in
in
enter
cmc
cmps
xor
lahf
ins
sub
stc
adc
repnz
xor
xchg
mov
pop
jne
add
ret
mov
sub
sahf
xchg
sbb
leave
jbe
jne
fsin
xchg
add
lods
push
add
daa
sbb
outs
cmp
gs
or
and
dec
retw
mov
retf
dec
xor
mov
movs
pusha
fs
std
push
jg
nop
inc
dec
mov
hlt
out
mov
push
lahf
ja
jno
in
clc
mov
or
xor
inc
sub
xchg
add
mov
mov
test
add
inc
pushf
pop
jbe
jns
jne
test
lock
or
fsubr
iret
call
cmp
and
xlat
aas
jp
repnz
mov
lods
lods
dec
ficom
cmps
pop
call
inc
jns
inc
enter
fbstp
sahf
jle
sbb
xor
fwait
mov
jb
inc
and
and
add
mov
and
scas
dec
mov
sbb
cmp
int
xchg
idiv
pop
aas
cdq
xchg
arpl
mov
gs
mov
jae
gs
mov
ret
mov
cmp
mov
mov
adc
iret
cmp
fisubr
retf
jo
lods
cmp
cmp
push
mov
pop
ret
dec
mov
mov
push
and
fcmovnu
and
jmp
pop
add
cmp
pushf
addr16
sub
mov
scas
push
add
aad
mov
mov
in
call
fst
mov
cmp
mov
pop
inc
shl
dec
(bad)
aad
js
bound
shl
shl
int
push
push
stos
cmp
mov
pop
lds
and
sub
jae
mov
mov
adc
sbb
ror
pop
xor
mov
dec
cmp
cli
ret
int
and
(bad)
clc
sub
daa
mov
dec
adc
cmps
je
out
add
jnp
and
push
inc
dec
push
stos
xchg
outs
sti
or
in
push
adc
lock
xchg
cld
(bad)
addr16
mov
push
jmp
pop
(bad)
mov
dec
xchg
and
cs
sbb
es
xchg
cs
ret
sub
push
xlat
mov
js
fdivr
jns
(bad)
adc
jl
mov
ss
lock
js
push
pop
lea
ins
and
popa
adc
and
pop
sub
jp
inc
inc
out
inc
rcr
xchg
aam
div
inc
out
cmp
mov
outs
js
addr16
xor
jle
jmp
and
mov
js
mov
bound
lea
mov
imul
cmp
and
loope
dec
jmp
(bad)
add
fwait
inc
jmp
inc
stos
jno
push
add
stos
inc
add
sbb
fs
lods
lds
movs
xchg
adc
pop
add
aam
adc
mov
shl
ja
push
pop
push
loopne
dec
scas
mov
repz
jmp
aam
(bad)
xchg
dec
mov
xor
in
in
sbb
(bad)
jp
pusha
cli
add
je
test
fadd
sbb
rcr
jmp
dec
inc
(bad)
push
(bad)
call
pop
jmp
dec
shl
push
ror
xchg
jne
iret
xchg
pop
dec
es
fwait
xor
sbb
in
or
imul
aad
adc
gs
dec
mov
pop
dec
nop
adc
dec
adc
push
cmp
sbb
out
cmp
dec
es
daa
pusha
movs
popf
and
jne
shl
hlt
dec
mov
jne
push
out
adc
pop
pop
sbb
ja
ror
xor
pushf
mov
into
cmp
push
xchg
add
cmp
fisttp
outs
jne
sub
loope
mov
test
int3
daa
or
lods
test
add
jl
and
pop
inc
bound
sbb
and
stos
push
rol
or
push
fisub
and
out
mov
mov
scas
xchg
movs
sub
mov
pusha
aaa
fwait
sub
pop
popf
mov
sbb
lahf
out
mov
ror
std
hlt
pop
jle
movs
mov
les
xchg
loope
cmp
retf
dec
leave
and
in
in
arpl
inc
retf
loopne
push
(bad)
inc
mov
aam
paddq
xchg
repnz
loop
retf
push
dec
xchg
xchg
fstp
cmp
dec
dec
aas
jp
mul
mov
ret
dec
fisttp
mov
pop
push
mov
int3
enter
stc
retf
adc
movs
mov
add
adc
mov
dec
dec
jecxz
jae
dec
pusha
xor
stc
inc
sbb
fild
ja
mov
jmp
jecxz
mov
clc
and
dec
pop
int
loope
ret
pop
ja
ins
jbe
cli
jb
lea
sub
inc
loop
mov
dec
sti
leave
scas
retf
xchg
mov
adc
stc
retf
ret
xor
inc
dec
push
jp
and
pop
ins
lea
xchg
push
test
xchg
jb
stos
(bad)
mov
mov
mov
push
mov
push
enter
sub
cdq
into
mov
fisubr
jae
add
loop
mov
clc
imul
int3
lea
imul
cwde
inc
cmc
ss
test
xor
outs
std
push
add
add
cld
sbb
jmp
or
jmp
enter
xchg
push
leave
inc
(bad)
retf
inc
xchg
push
push
(bad)
cld
pop
jmp
inc
arpl
cmp
cmp
(bad)
inc
dec
push
mov
in
ss
repnz
pop
inc
mov
ins
test
xor
pop
or
fisubr
das
in
mov
sub
mov
add
jns
mov
adc
fisub
pop
mov
or
cmp
pusha
ss
dec
stos
sbb
cwde
jp
int
dec
cld
scas
ret
or
inc
adc
lfs
lea
xbegin
popa
lods
fsubr
loope
pop
jl
imul
sar
popa
mov
into
ss
and
mov
call
jge
inc
out
mov
jg
ret
cmovae
bnd
(bad)
test
xlat
cli
inc
cmp
pushf
mov
cmp
adc
xchg
retf
xchg
mov
cmp
loop
in
icebp
scas
mov
ficomp
push
pushf
lds
add
adc
(bad)
mov
int3
xchg
pop
jl
mov
hlt
dec
add
adc
push
add
jl
cdq
xor
mov
cs
and
xchg
js
push
scas
jno
jo
les
inc
xchg
sub
(bad)
mov
xchg
stc
mov
aam
or
test
aaa
out
mov
jl
inc
sub
cmp
lea
jnp
int3
(bad)
mov
dec
test
call
dec
aaa
mov
mov
xor
pop
hlt
sbb
leave
rcr
sbb
retf
push
(bad)
mov
adc
in
jge
sbb
out
jle
fadd
mov
push
xchg
loope
loop
sbb
out
stos
or
push
push
sbb
mov
fsub
adc
stc
call
mov
ret
push
mov
sahf
mov
repz
xchg
dec
xchg
xor
gs
mov
push
rcr
ret
loop
cmp
jle
das
jne
cli
ror
push
lods
adc
pop
adc
aad
(bad)
shr
add
stos
inc
sti
add
(bad)
cmps
imul
inc
push
push
jae
lahf
test
repz
cmps
call
mov
inc
push
stos
pop
into
in
rcl
stos
sar
cmp
shr
lock
mov
adc
outs
scas
into
dec
inc
pushf
mov
int3
je
mov
jmp
and
pushf
je
pop
or
push
in
cmp
xchg
clc
jns
mov
push
jmp
add
xor
and
pop
outs
cmp
cdq
push
jo
and
imul
dec
add
push
mov
lahf
jge
fdivr
js
push
mov
(bad)
mov
dec
sbb
jmp
dec
and
(bad)
test
sub
stc
jmp
arpl
es
enter
pop
jmp
push
jae
and
cmps
(bad)
push
or
sbb
mov
lea
jns
ficomp
add
cli
push
imul
add
movs
jl
loop
daa
cmpxchg
and
xchg
in
in
push
cmps
add
pop
popa
xor
call
nop
movs
test
shl
adc
rol
repnz
sahf
imul
shrd
mov
fidiv
sub
imul
ret
scas
xor
mov
mov
fcom
shl
jle
movs
dec
lahf
call
inc
and
inc
mov
out
ds
les
jb
in
push
daa
jg
test
inc
xchg
xlat
in
xor
mov
jae
mov
push
sub
xchg
xchg
xchg
stos
xchg
push
mov
or
jecxz
cmc
ins
shl
pushf
es
std
es
add
mov
sbb
fdivr
ffreep
xor
push
sub
sub
sbb
mov
repnz
sahf
popf
push
and
aam
hlt
lds
in
pop
loop
pop
push
scas
pop
or
cs
adc
xchg
jns
add
xor
stc
imul
jg
inc
ins
adc
outs
inc
cli
leave
(bad)
(bad)
out
push
sub
mov
xor
fnstcw
mov
push
addr16
xor
and
ret
sbb
xchg
dec
sub
(bad)
push
push
pop
mov
push
ja
push
(bad)
bound
push
(bad)
inc
xor
sub
xlat
popf
or
jmp
mov
pop
pop
xchg
xchg
lds
mov
dec
stos
ret
mov
stc
ja
rol
adc
test
nop
mov
xchg
jo
std
inc
jae
xchg
stos
inc
jl
xchg
fild
daa
cmps
mov
pop
sbb
or
lea
ins
mov
or
jmp
ret
outs
sbb
add
mov
sub
pop
in
popa
adc
jae
dec
ficom
lea
aas
vmulps
shl
aas
and
mov
dec
hlt
(bad)
xor
mov
repz
dec
cmp
mov
ror
shr
das
imul
mov
in
arpl
icebp
adc
mov
rcr
addr16
adc
repnz
pushf
jp
sub
std
jl
test
push
in
lock
add
sub
mov
and
(bad)
call
cmp
stos
rcl
and
xchg
call
mov
cmovle
inc
mov
(bad)
xchg
std
lds
jbe
or
lods
xor
shl
iret
sub
call
ins
ds
pop
stc
pushf
out
imul
dec
push
das
mov
adc
sub
and
adc
xor
pop
pop
(bad)
cmp
ins
push
mov
stc
dec
cmp
mov
int
popf
push
in
mov
xchg
jb
xchg
sbb
int3
push
stos
std
in
test
pop
aas
or
outs
or
xor
aad
mov
aaa
in
or
mov
jge
and
mov
push
(bad)
fnstcw
push
cmp
or
sbb
inc
ret
out
imul
sbb
iret
ds
jg
push
sbb
xor
outs
cli
inc
(bad)
xor
test
xor
mov
jno
lock
jl
(bad)
lods
ss
clc
mov
cmp
and
popa
mov
adc
add
shl
bnd
xchg
inc
and
add
or
sbb
cmps
test
jne
js
fist
ins
or
or
inc
adc
pusha
test
ins
inc
fist
mov
pop
xor
mov
rcr
dec
pop
stos
mov
retf
cmp
mov
inc
ja
mov
xchg
sbb
xlat
cmp
ss
lea
push
pop
inc
es
jns
shl
repz
xor
inc
push
adc
xor
jmp
push
mov
stc
fadd
cmc
cmps
idiv
pushf
and
jp
push
cs
arpl
xchg
rol
cmp
jmp
test
push
lock
out
cmp
inc
and
mov
bound
lods
and
jge
jge
jl
leave
ins
ret
xor
test
or
sbb
jmp
mov
pop
(bad)
and
fnstsw
add
fistp
jge
jnp
inc
jnp
out
(bad)
dec
aas
(bad)
xchg
push
bound
fld
sbb
sbb
mov
adc
(bad)
repnz
sub
shl
aad
xchg
jo
pop
das
jge
sub
mov
scas
pushf
out
and
pushf
fist
test
outs
dec
into
in
add
leave
mov
inc
jl
sub
aam
sbb
test
cli
push
jno
arpl
std
mov
xchg
and
fdiv
movs
mov
loop
mov
or
ins
setne
pop
into
sbb
mov
xchg
xchg
in
mov
out
mov
cs
mov
fxch
push
inc
and
repnz
jmp
push
push
cld
imul
jg
imul
in
mov
fisub
sbb
mov
dec
js
pop
sub
adc
push
aaa
aaa
movntq
out
cmc
retf
in
or
(bad)
add
xor
fmul
cli
(bad)
mov
jne
add
das
add
cld
sbb
cmp
ins
out
xor
inc
xor
cmp
mov
jae
adc
icebp
out
cmovns
or
push
shl
iret
in
add
fcom
and
test
ss
jmp
push
mov
es
xor
mov
push
xchg
repz
ins
cvtdq2ps
jne
pop
sub
jmp
cmps
in
push
or
sub
cmp
adc
pop
mov
mov
add
inc
leave
(bad)
jmp
bound
stos
fmul
popf
jmp
mov
xchg
adc
test
and
repnz
xchg
mov
(bad)
inc
cmp
aam
lea
jmp
xchg
xchg
mov
xchg
(bad)
and
into
push
call
add
dec
jecxz
push
(bad)
shr
lahf
push
xor
pop
sub
or
xor
adc
push
loop
inc
jbe
std
pop
retf
add
movs
jge
dec
push
rol
retf
stos
pop
push
add
test
adc
pop
jns
adc
adc
stos
out
and
xchg
adc
xchg
leave
adc
in
jnp
or
rcl
push
jecxz
xor
pop
es
adc
aaa
sbb
mov
sti
test
inc
scas
add
jle
mov
out
adc
mov
or
dec
data16
xchg
cmps
mov
rcl
aad
ficomp
ret
cmp
xor
xor
test
inc
push
jne
sub
jno
daa
test
fstp
and
and
mov
sub
jle
iret
cli
aam
xor
jbe
adc
xchg
mov
dec
jbe
test
daa
dec
sub
test
adc
retf
repnz
and
pop
in
xor
or
push
dec
repz
int3
sbb
lock
add
sub
popf
sbb
pop
ret
add
inc
and
mov
adc
jnp
push
sub
test
push
ret
pop
sub
mov
jmp
test
test
inc
xor
js
add
repnz
in
sub
hlt
mov
sahf
sub
loope
cld
arpl
out
scas
xor
jb
push
xchg
shl
add
xor
loope
xor
call
ficomp
in
lods
or
pusha
cmp
mov
pop
daa
int3
inc
retf
sbb
adc
push
ret
stc
inc
shr
jg
retf
dec
xchg
(bad)
xor
out
jmp
push
ins
cli
push
xchg
adc
inc
xor
xor
dec
in
repnz
mov
fwait
adc
inc
and
(bad)
inc
mov
jnp
das
scas
scas
add
xor
jmp
inc
dec
add
dec
stos
sub
cmp
push
loope
mov
pop
ins
add
pushf
sbb
jbe
push
inc
stos
in
popa
ins
rcl
dec
(bad)
push
push
mov
leave
mov
and
repz
pop
inc
push
jo
addr16
dec
call
gs
mov
pop
pop
inc
and
lea
je
or
cwde
xchg
fidivr
jno
xchg
mov
cmp
shr
dec
es
or
ret
cwde
and
sbb
nop
shl
stos
add
fdivr
popa
scas
(bad)
pop
mov
lods
mov
and
cmp
cdq
add
xchg
mov
mov
shl
std
jbe
xlat
lods
jnp
mov
ins
cmp
mov
cmp
add
push
pop
icebp
push
mov
rol
xchg
wbinvd
aad
push
push
cwde
sub
sbb
jmp
shl
pop
xchg
xor
test
in
mov
xrelease
sti
lock
xor
ins
xchg
loope
mov
jno
ss
push
mov
sar
out
sub
pop
mov
mov
pop
icebp
icebp
xor
and
xor
push
xchg
and
ss
pop
ror
imul
or
xor
fld
push
mov
inc
mov
cmps
es
mov
inc
sub
(bad)
loopne
cmp
pop
cmp
inc
mov
fs
leave
pop
mov
mov
dec
cld
out
mov
stos
add
adc
popa
jmp
pop
adc
inc
push
jmp
mov
pop
adc
stos
xchg
sbb
push
icebp
adc
cwde
faddp
outs
cmp
xor
dec
test
pop
lods
data16
sti
cmp
outs
cmp
xor
lods
inc
test
hlt
or
test
cmp
add
in
imul
cmp
loope
jl
jae
scas
popa
mov
jno
aam
jge
stos
xor
dec
bound
stos
test
rcr
adc
xchg
cmp
int
loope
pusha
inc
lock
out
push
scas
in
xchg
jge
jp
shl
(bad)
(bad)
pop
scas
mov
fdivr
or
mov
push
imul
das
push
sub
jbe
test
pop
jmp
adc
adc
mov
mov
adc
mov
add
in
movs
ins
xchg
and
pop
(bad)
outs
or
and
mov
add
dec
into
sub
push
dec
lods
dec
or
retf
leave
nop
add
std
and
out
out
xlat
call
dec
and
pop
mov
mov
call
aas
test
aaa
dec
sti
(bad)
pop
xchg
int
cld
(bad)
les
out
fsub
cmp
or
iret
sub
js
dec
imul
mov
rcr
retf
jo
xor
std
xor
(bad)
data16
retf
dec
xor
arpl
xlat
xor
and
add
jbe
test
mov
adc
cmps
inc
in
ror
int3
and
rcr
push
es
sub
fld
outs
xor
jge
mov
call
imul
add
cld
push
out
mov
cmp
push
sbb
mov
popa
popa
repz
fcomp
js
push
cmp
sub
outs
sub
das
inc
lods
mov
push
jne
(bad)
call
mov
push
xchg
repnz
add
jb
push
out
or
push
(bad)
out
jp
sub
outs
xor
mov
push
sti
hlt
rcr
hlt
mov
xor
or
sahf
sar
mov
cs
outs
hlt
loope
jmp
mov
(bad)
iret
pop
xor
xor
jmp
sahf
icebp
movs
aam
outs
mov
popa
mov
jmp
scas
leave
jnp
jmp
fdiv
or
inc
fistp
icebp
into
dec
das
or
push
mov
sub
dec
mov
outs
mov
and
pusha
dec
test
add
scas
xor
out
out
jg
mov
cs
push
sar
cmp
push
movhps
xor
or
aad
test
fs
mov
mov
mov
jge
pusha
dec
mov
les
sub
dec
mov
jmp
std
hlt
mov
retf
mov
ret
mov
in
arpl
outs
aaa
xchg
cmc
inc
jb
int3
pop
imul
imul
mov
iret
xchg
mov
ja
pop
frstor
jecxz
and
dec
and
mov
mov
cmps
push
outs
out
adc
cs
pop
inc
ss
imul
jmp
and
cdq
pop
test
jae
fdiv
aad
sbb
imul
inc
sub
or
fs
fs
xchg
mov
or
sar
mov
and
xchg
jg
mov
ins
outs
ficom
push
inc
fimul
int3
dec
pop
pushf
cmps
test
sbb
lea
adc
inc
push
loopne
fsubr
into
sahf
sub
stc
add
xchg
inc
jge
fmul
lds
ja
adc
addr16
dec
jecxz
add
loopne
pop
gs
mov
dec
xor
mov
pop
and
retf
cwde
sbb
push
dec
cwde
mov
xor
mov
inc
sbb
in
push
xchg
xchg
sub
mov
clc
movs
mov
loop
aam
call
or
mov
dec
fwait
push
repz
mov
push
jne
sbb
mov
scas
ret
push
add
dec
out
out
push
xchg
mov
retf
push
xchg
mov
xor
loopne
icebp
add
iret
lahf
test
scas
fcomp
lahf
mov
or
sub
sti
push
call
jl
mov
in
xchg
ja
test
jno
mov
and
leave
ins
dec
dec
push
ret
adc
(bad)
arpl
rol
std
sbb
ror
sbb
mov
arpl
fistp
pop
ficomp
push
pop
ret
push
sub
add
mov
add
inc
push
pop
(bad)
movs
add
add
pop
push
arpl
add
clc
outs
and
aas
inc
and
imul
ja
cmp
pop
pop
mov
js
ret
fist
pop
call
pusha
xchg
aad
lock
mov
mov
rcl
and
inc
retf
xchg
ss
dec
and
sbb
clc
push
shl
or
shr
inc
ja
and
jne
xchg
test
inc
mov
fwait
mov
add
sub
inc
mov
mov
mov
iret
mov
adc
xchg
mov
pop
sahf
mov
adc
not
scas
and
cmp
and
add
movnti
(bad)
mov
pop
ret
movs
enter
popf
jp
clc
daa
adc
jns
fstp
add
out
inc
fs
adc
fimul
rol
adc
and
push
mov
enter
(bad)
or
pop
cli
jns
inc
fwait
and
in
cmp
cwde
mov
test
jl
or
cmp
fisttp
mov
fisubr
or
add
push
xchg
cmp
xchg
cmp
xor
cmp
push
scas
add
pop
inc
aam
dec
mov
pop
cmc
inc
mov
imul
cli
add
cmp
in
push
sub
inc
pop
sbb
ret
inc
arpl
bound
(bad)
dec
mov
adc
jg
sub
hlt
clc
sbb
rcl
cmp
into
cdq
xchg
pop
in
je
push
dec
mov
in
js
xor
test
push
cmp
push
jne
jne
fimul
pop
pop
data16
aad
rcl
jo
(bad)
faddp
inc
mov
inc
mov
inc
cld
dec
xchg
jno
ret
outs
jb
cmps
push
mov
stc
mov
push
ds
xchg
pop
mov
adc
pop
je
shl
(bad)
repnz
xchg
in
ins
cmp
jg
push
clc
jmp
and
xlat
jp
inc
(bad)
aam
mov
mov
movs
or
xchg
pop
dec
fstp
mov
pushf
shl
les
(bad)
repz
mov
es
push
scas
fist
push
test
dec
add
in
push
jns
pop
dec
inc
pop
movs
in
xor
cmp
pop
aas
loope
push
popa
add
jecxz
cdq
out
ficom
ins
xor
imul
mov
ss
add
add
ret
aad
jge
outs
mov
arpl
add
pop
or
int
xchg
sub
dec
sub
xchg
add
add
or
adc
pop
xchg
cmps
lods
and
out
dec
ds
aaa
je
daa
jecxz
(bad)
out
lods
push
mov
fdivr
sub
inc
mov
push
xor
and
fwait
loopne
jns
lods
(bad)
(bad)
popa
inc
cs
cdq
or
dec
test
push
sahf
aaa
loopne
mov
ror
rcl
jmp
xchg
and
icebp
push
std
mov
pop
cdq
mov
aad
les
es
mov
lea
ds
inc
addr16
dec
adc
hlt
ja
jp
sub
dec
inc
ins
and
pop
in
fsub
loope
mov
out
ss
sbb
cmp
cmp
out
arpl
cs
dec
aaa
mov
and
add
(bad)
xor
xchg
imul
sbb
icebp
mov
aaa
inc
fisttp
fwait
je
sbb
cmp
pop
jp
mov
inc
mov
mov
cs
xchg
sub
(bad)
mov
call
call
mov
xor
mov
jne
fidiv
(bad)
cmc
push
jle
xor
jmp
mov
push
sub
fdivr
leave
and
xchg
sbb
std
adc
je
ret
jp
addr16
gs
xchg
sbb
push
jb
lock
mov
dec
xchg
scas
lock
mov
out
adc
adc
std
jecxz
fbstp
jmp
adc
mov
mov
data16
and
lods
cmp
mov
in
inc
jnp
sub
adc
mov
pop
sub
push
cld
rcr
push
(bad)
jbe
movs
push
leave
xchg
dec
dec
adc
xchg
fst
ss
dec
rcr
or
shl
sub
dec
dec
push
(bad)
repnz
pusha
mov
and
mov
xor
and
pop
stc
outs
jne
cli
push
stc
mov
mov
mov
movd
les
jo
movs
dec
int
xchg
mov
fcom
loope
mov
ret
push
cmps
lods
loop
daa
ins
mov
inc
retf
jae
sub
sub
sbb
push
and
mov
in
(bad)
and
adc
xchg
(bad)
iret
xchg
dec
repz
push
jge
jae
es
cdq
jmp
sti
shld
inc
dec
mov
xchg
mov
lods
inc
es
(bad)
xchg
in
daa
lock
test
and
jmp
(bad)
retf
ja
call
dec
mov
jne
xchg
xor
xchg
or
cmp
(bad)
shl
mov
out
jecxz
dec
jle
scas
ins
sub
sbb
pusha
mov
add
cs
pop
(bad)
cli
fstp
sub
xor
scas
inc
adc
daa
push
dec
call
sub
dec
dec
sub
mov
mov
mov
fisttp
cld
mov
pop
cmps
push
shl
sbb
jno
xchg
adc
fwait
jbe
enter
outs
iret
imul
xor
cvtps2pd
pop
jbe
mov
cmps
jg
popa
push
dec
adc
jns
rcl
mov
scas
aaa
in
dec
mov
inc
jmp
sub
push
mov
lock
mov
xchg
add
dec
pushf
inc
push
jge
fucomp
and
cmp
xchg
ja
repz
cld
add
cmp
push
lods
push
jo
push
sbb
test
mov
dec
mov
mov
jp
in
xchg
adc
ss
add
or
test
sub
call
in
inc
jecxz
(bad)
lahf
mov
rcl
stc
retf
cmp
bound
push
push
clc
pop
sub
jbe
cmp
test
mov
nop
and
dec
xchg
push
imul
fidivr
push
aaa
in
xor
mov
mov
mov
mov
add
mov
pusha
lahf
pop
jno
idiv
repz
fcmovb
ins
dec
into
cmp
push
pop
test
stos
ins
retf
sahf
cmp
cmp
loop
pushf
mov
out
sbb
and
mov
push
pop
cwde
cwde
xchg
jo
mov
imul
sub
push
out
and
push
mov
sti
test
cmp
popf
fldenv
inc
push
hlt
imul
push
sub
dec
inc
aam
ret
sbb
xchg
xor
imul
call
push
push
xchg
adc
dec
inc
popa
and
int
pop
add
push
or
xchg
xor
xlat
cmps
(bad)
cli
mov
inc
sbb
outs
push
addr16
jno
xor
fidivr
jmp
int3
rcl
pop
jl
sbb
push
movs
int
pop
xchg
add
sbb
dec
push
jmp
lahf
xchg
jns
clc
and
xchg
push
sbb
mov
std
mov
mov
pop
xchg
sbb
fsubr
mov
mov
pop
in
xchg
mov
das
inc
pop
pop
cmp
cvtdq2ps
scas
pushf
push
out
test
sub
dec
lahf
in
js
fwait
mov
mov
stos
dec
call
xor
inc
inc
dec
loop
push
out
and
loope
stos
push
(bad)
push
cmps
or
mul
xchg
mov
push
fidivr
aad
clc
and
lods
xor
shl
mov
es
repnz
adc
and
cdq
add
pop
shl
and
lods
dec
bound
jno
jnp
mov
adc
(bad)
xchg
rol
das
ins
test
jle
arpl
ficomp
aam
popa
das
jl
arpl
imul
mov
sub
xor
or
add
(bad)
mov
nop
ret
mov
fmul
stos
popf
cs
or
xchg
sub
cmp
push
loope
mov
idiv
and
sbb
sub
or
mov
stc
test
sub
xor
and
push
adc
inc
rol
jmp
pop
pop
jmp
add
mov
sbb
cmc
push
ret
add
(bad)
jle
in
into
mov
push
cli
or
mov
imul
mov
and
cmc
jnp
fucomip
test
popf
movs
sbb
ds
stos
adc
push
and
cmp
rep
mov
mov
add
pop
imul
sub
mov
(bad)
mov
outs
es
aas
dec
ins
pop
loopne
pop
ss
sub
lds
aaa
inc
ror
inc
pop
mov
(bad)
sub
xor
movs
or
(bad)
cmp
sahf
arpl
fld
aaa
pop
xchg
addr16
fadd
jecxz
jne
xor
clc
mov
leave
js
mov
test
adc
leave
xlat
dec
in
jle
sti
call
sbb
jle
sub
mov
sub
xor
mov
ficomp
pop
jge
movs
cmps
jg
mov
call
mov
pop
iret
push
mov
xchg
addr16
(bad)
shr
(bad)
out
cmp
out
lahf
xchg
leave
cli
mov
xchg
push
and
jecxz
enter
adc
stc
(bad)
retf
push
jmp
cmc
nop
mov
add
fcomip
mov
adc
xor
and
clc
inc
in
mov
xchg
jecxz
inc
rcl
fs
jmp
mov
dec
sbb
mov
loope
push
or
test
ds
sub
inc
loope
mov
jne
(bad)
sbb
fneni(8087
popa
ds
and
cmp
cmc
dec
add
call
jp
hlt
xchg
dec
loopne
sahf
mov
shr
scas
or
xor
mov
cli
mov
cmp
add
mov
(bad)
(bad)
xchg
inc
add
pop
pop
fcom
adc
mov
lahf
and
(bad)
pop
loope
in
and
test
xor
retf
cld
pop
test
retf
repnz
cmp
in
fsubr
pop
sub
outs
inc
or
je
xchg
push
imul
lock
dec
ror
imul
jmp
rcl
xor
dec
out
pop
scas
or
xor
inc
inc
sbb
dec
xchg
jg
leave
mov
add
fdiv
pop
adc
nop
mov
retf
enter
jnp
enter
icebp
stc
scas
push
xchg
cmp
mov
movs
xor
ds
outs
sbb
clc
shl
mov
dec
icebp
pop
or
xchg
and
mov
and
fstp
ss
loope
stc
pusha
sbb
outs
xchg
xchg
ins
retf
loop
add
jge
and
or
push
cwde
fldcw
xchg
xor
dec
cmp
pop
lods
jne
jl
lahf
cdq
pop
mov
int3
dec
gs
bound
add
xchg
scas
test
sub
xor
movs
mov
mov
mov
inc
dec
ds
out
sub
xor
cld
mov
inc
adc
mov
aam
mov
jg
cmp
loope
jecxz
mov
inc
iret
push
mov
test
adc
mov
inc
sub
dec
rcl
cmc
scas
sbb
push
jmp
in
ds
mov
repz
xor
mov
push
sbb
jns
div
push
call
mul
retf
xlat
add
out
ins
adc
jb
sti
(bad)
adc
add
add
mov
or
pop
inc
retf
xchg
mov
aam
loopne
dec
dec
loope
adc
popf
xchg
sub
call
movs
sahf
das
inc
add
mov
add
mov
scas
(bad)
or
mov
test
in
dec
xor
pop
sbb
pop
es
ins
mov
jae
adc
xor
repz
sbb
out
jb
mov
dec
shl
ins
mov
lock
loope
stos
jnp
add
or
cli
sbb
fidiv
out
dec
and
call
and
(bad)
jl
cmps
shl
imul
adc
mov
out
pop
adc
ds
mov
sub
cmp
xchg
mov
and
sub
adc
jne
mov
cmp
xchg
repz
ror
push
iret
out
js
icebp
jne
outs
pusha
pushf
sti
out
jnp
jmp
xor
dec
inc
inc
imul
dec
fmul
push
fdivr
push
outs
pop
cmp
shr
cwde
mov
inc
xlat
in
inc
push
or
sar
xchg
pop
aam
jecxz
mov
nop
mov
cmp
sahf
mov
stos
test
push
lods
sub
xchg
rep
std
mov
test
sub
mov
dec
or
movs
fwait
xchg
ret
stos
jno
retf
fldcw
inc
ins
pushf
jg
fcmovne
jle
out
dec
mov
mov
mov
loop
inc
rcl
and
out
faddp
sbb
mov
inc
push
imul
out
fsubr
mov
sub
(bad)
stos
cmp
jnp
dec
inc
mov
sbb
or
jnp
fs
mov
xor
push
sub
hlt
xor
fnstenv
add
adc
push
mov
mov
sahf
out
mov
fstp
xor
xchg
cwde
sahf
sbb
jp
pop
or
push
ret
fdiv
xchg
mov
xchg
mov
xchg
arpl
and
inc
mov
mov
jns
lods
pop
fwait
cli
sub
cmp
pushf
hlt
jmp
push
in
adc
hlt
jmp
mov
jno
add
cs
mov
sar
fcmovnb
adc
je
test
xor
fnsave
cmp
(bad)
fldlg2
stc
and
icebp
dec
mov
sbb
pop
mov
sbb
mov
std
imul
add
xchg
ins
xchg
add
inc
adc
shl
or
jge
mov
jb
mul
(bad)
repnz
jb
js
and
cld
clc
(bad)
out
js
scas
in
dec
icebp
shl
movs
call
pop
sbb
fisttp
pop
inc
popf
xchg
cld
push
lods
cmp
mov
add
adc
mov
and
shl
xchg
retf
outs
or
lods
clc
sahf
cmp
les
or
cmp
mov
in
push
loop
pop
adc
retf
clc
jns
mov
pop
inc
xor
sahf
stc
ins
into
pop
outs
cmp
stos
or
or
jge
sub
mov
cwde
mov
test
fild
int3
push
jne
pushf
and
sub
loopne
cmp
test
push
and
push
(bad)
aaa
pop
cmp
inc
shl
retf
(bad)
and
add
xchg
fs
int3
xchg
jmp
xor
gs
movs
fidivr
sub
fnclex
ins
cmovo
dec
fstcw
ins
push
hlt
inc
inc
ss
lock
jmp
ja
sbb
sub
and
dec
fcmovnu
outs
mov
mov
iret
scas
add
pop
stc
call
sbb
imul
mov
(bad)
mov
ret
scas
push
das
out
jle
mov
in
add
inc
cmp
mov
add
in
adc
out
adc
movs
test
(bad)
xor
addr16
push
adc
bound
mov
and
hlt
push
adc
lods
mov
test
xchg
fdivr
push
ror
add
rcr
cmp
std
loopne
adc
push
and
into
pop
lds
stos
mov
lock
xor
add
dec
stos
xchg
inc
punpckhwd
xor
sub
loope
xchg
aaa
mov
pop
movs
in
jbe
aaa
scas
mov
stc
data16
and
(bad)
jge
jne
lods
lahf
scas
arpl
call
bound
(bad)
mov
addr16
jne
out
pusha
movs
xchg
popa
sub
and
sub
out
lds
and
mov
movs
std
test
jl
mov
pop
int3
fs
mov
xlat
and
and
outs
imul
sbb
vmread
xor
jecxz
ror
add
cdq
and
mov
repz
xchg
mov
sbb
jp
add
mov
xlat
jle
cmp
add
and
fsubr
cmc
std
pop
sahf
jg
fs
jb
jmp
fdivr
mov
mov
cld
in
mov
inc
mov
push
ficom
test
shr
sbb
mov
fidiv
gs
test
mov
dec
mov
jae
call
jne
hlt
cmps
xchg
test
push
jnp
icebp
push
call
and
and
mov
fwait
mov
pop
(bad)
sti
add
push
leave
out
fiadd
pop
cwde
ds
cmp
jb
and
pop
in
cmps
pop
adc
(bad)
jnp
or
and
out
add
je
mov
cmp
xor
dec
loop
mov
inc
outs
fdiv
outs
adc
movs
push
push
fidiv
jno
adc
jns
dec
add
(bad)
cmp
(bad)
and
add
jo
xchg
rol
nop
rol
cmp
rcl
mov
das
mov
out
jo
lods
nop
ins
push
push
idiv
ins
lods
mul
xlat
and
fsub
ins
and
jecxz
mov
aam
retf
imul
stc
cmp
mov
clc
shl
cli
ss
fidivr
sub
sub
mov
mov
mov
mov
cli
imul
mov
and
fnstcw
fisubr
dec
lds
xchg
fwait
std
inc
outs
inc
iret
adc
push
ins
inc
js
cmp
cld
jl
in
aam
lds
loop
sbb
cwde
pushf
lahf
fidiv
xchg
in
cmp
mov
cmps
(bad)
dec
cdq
sub
ficom
inc
clc
mov
xor
pop
sbb
jne
arpl
call
fbld
enter
ja
aad
test
mov
and
cmp
sbb
mov
sbb
loopne
sub
jb
stos
sbb
sbb
add
gs
scas
sub
cmps
ret
jmp
dec
jb
dec
xor
and
or
enter
push
mov
fwait
push
inc
sbb
out
ret
addr16
lock
int3
and
neg
cmps
mov
adc
dec
xchg
adc
outs
mov
push
jne
cmc
adc
lods
xor
in
pop
stos
std
xchg
and
push
fsub
jmp
ins
test
imul
push
push
pusha
dec
sub
lahf
add
xchg
mov
shl
cmp
aas
lods
dec
dec
in
pop
pusha
outs
out
mov
mov
out
jae
and
xchg
imul
out
mov
out
mov
adc
lea
mov
jno
and
xor
(bad)
cmps
test
and
lds
ficom
shl
loopne
push
mov
iret
mov
sbb
test
cmp
std
or
mov
push
out
dec
das
movs
dec
push
xchg
into
scas
les
es
out
dec
add
mov
neg
cmp
imul
call
loope
data16
push
fist
xor
bswap
out
jg
bound
mov
(bad)
xlat
fist
dec
das
pop
push
arpl
jns
sahf
xor
inc
fs
sub
adc
sbb
jbe
push
in
pusha
push
sub
mov
add
mul
test
dec
add
js
cmp
jns
popa
mov
dec
mov
fidiv
(bad)
cmp
inc
mov
cwde
jb
mov
out
and
pop
mov
adc
les
sbb
aam
xchg
xchg
add
sub
pop
mov
(bad)
push
hlt
pop
shr
push
cmc
dec
je
adc
mov
clc
cli
lods
shr
sti
cmp
shl
xchg
mov
movs
scas
xlat
sbb
shl
dec
mov
dec
hlt
ret
adc
xchg
call
imul
mov
xchg
mov
cmp
rol
push
xchg
jp
loope
cmc
mov
inc
dec
mov
mov
js
pop
mov
scas
add
pop
into
jle
popf
clc
mov
cs
in
and
cwde
cmps
pusha
test
sahf
cmp
(bad)
out
mov
mov
bound
std
xchg
loop
xor
shr
inc
mov
inc
into
jnp
jnp
dec
xchg
fmulp
pop
mov
inc
call
leave
in
mov
ins
xlat
jmp
mov
and
and
(bad)
out
adc
out
lods
pushf
jg
fbld
xchg
push
pop
sbb
jl
mov
mov
jnp
mov
sbb
mov
dec
retf
or
xchg
repnz
pop
sahf
or
sbb
inc
js
out
es
xchg
xchg
jge
aad
jae
cmps
scas
jo
dec
xchg
sub
sub
faddp
fmul
xor
pop
clc
ins
push
pop
dec
inc
mov
test
ss
xor
jne
xor
push
pop
mov
jle
mov
movs
jle
popa
stos
loope
rcr
movs
inc
shl
cmc
std
(bad)
lahf
icebp
pop
mov
push
add
add
loop
test
pop
movs
xor
aam
pop
dec
jne
mov
mov
sbb
xchg
jl
jp
pushf
ret
push
retf
in
stc
pop
jmp
mov
retf
in
jbe
in
jb
or
push
ins
test
ins
xchg
pop
jno
push
repnz
inc
imul
push
aaa
jp
adc
pop
sbb
and
frstor
xchg
push
xor
fwait
jecxz
or
(bad)
mov
dec
xchg
or
hlt
or
xor
add
into
push
stc
xchg
lea
pop
movs
add
jecxz
cmp
jp
in
jmp
mov
sub
test
(bad)
fnstsw
cmp
xchg
dec
mov
mov
mov
mov
les
dec
stos
aad
pop
push
out
xor
xchg
add
cld
loopne
cmps
jecxz
(bad)
push
jnp
jmp
loop
js
xor
mov
pusha
jecxz
push
jl
shr
mov
and
jb
push
add
in
mov
mov
sar
mov
call
pop
loope
and
mov
xchg
mov
jmp
xor
sub
and
stos
loope
test
(bad)
fcom
or
sar
pop
sub
xor
cli
div
into
cmps
test
dec
xchg
fwait
jmp
imul
fdivrp
(bad)
retf
cli
data16
jmp
inc
dec
mov
add
push
add
mov
mov
push
scas
clc
scas
fadd
cmp
add
push
movs
push
sub
movs
into
jnp
or
mov
push
shl
scas
xchg
push
rol
mov
out
cwde
ds
popf
les
add
jns
add
stc
mov
retf
xchg
jg
adc
test
gs
lea
sbb
xlat
xchg
test
mov
jmp
mov
inc
test
and
pop
arpl
pusha
lods
sar
mov
leave
add
scas
in
adc
cmp
ror
lods
inc
lods
mov
sub
movs
dec
add
stos
pusha
adc
mov
(bad)
loop
push
adc
sahf
add
jp
xchg
jae
fcomp
cmps
jg
adc
sub
fild
shl
aas
ror
das
sub
(bad)
cmp
in
enter
fs
sub
jp
out
sub
dec
jmp
mov
adc
adc
cmps
mov
pusha
icebp
(bad)
jno
inc
jmp
push
dec
add
xchg
or
sbb
fdivrp
mov
and
push
dec
out
xlat
jmp
pushf
cwde
mov
mov
addr16
aas
sbb
pop
call
cmp
pop
lahf
pop
ficomp
sbb
int
xor
rcl
adc
xor
jge
and
(bad)
movs
fsub
call
inc
and
ins
mul
sar
std
or
jle
pop
sbb
mov
outs
pop
push
mov
fnstsw
shr
pusha
clc
pop
call
adc
(bad)
into
ret
push
call
cmps
cmps
pop
xchg
mov
fdivr
push
movs
adc
(bad)
jg
add
jmp
sub
push
pop
sbb
test
jecxz
xchg
loop
or
nop
jmp
ret
pop
sbb
sbb
xchg
lods
add
mov
arpl
loop
imul
(bad)
test
call
aam
pop
outs
mov
sbb
das
aad
in
push
daa
call
popa
mov
iret
sub
push
xchg
pop
mov
add
jno
sub
ins
add
adc
popa
into
inc
dec
adc
imul
or
cmps
push
push
fdivr
sar
retf
or
mov
jmp
xchg
bound
js
xor
cwde
push
dec
xchg
mov
cmp
or
and
push
adc
lahf
mov
adc
call
xor
sbb
aas
mov
push
imul
mov
imul
jnp
sub
mov
push
dec
mov
or
ror
clc
fistp
sbb
mov
dec
xor
pop
mov
dec
mov
push
inc
xchg
pop
cmp
jp
les
std
(bad)
cmp
inc
loop
fs
(bad)
mov
mov
mov
xor
add
ins
add
test
or
into
mov
loopne
out
cmp
xchg
sar
daa
test
fcomi
pushf
jmp
sbb
sahf
or
dec
add
call
inc
sub
rol
push
sub
shl
mov
adc
push
data16
push
and
dec
mov
xchg
push
pop
sbb
pop
gs
mov
xchg
nop
jb
pop
ja
dec
push
into
pop
pop
addr16
inc
inc
mov
push
push
add
sbb
ins
pop
jmp
andps
adc
movs
dec
or
pop
arpl
or
sbb
pop
sar
(bad)
stc
xchg
or
mov
mov
or
cmc
nop
pop
int3
or
mov
mov
jle
(bad)
jo
mov
cli
retf
mov
outs
or
les
mov
arpl
add
xchg
mov
and
lea
ss
xor
ror
shl
xor
pop
xor
cmp
(bad)
mov
push
dec
adc
cmp
shr
sub
call
sub
retf
xchg
jmp
or
ss
ret
inc
dec
jne
ss
out
jnp
inc
jp
mov
in
cmc
xchg
movs
push
push
lea
nop
xor
xor
in
mov
jmp
in
hlt
jns
sub
pop
(bad)
sahf
test
fistp
xor
clc
iret
pop
push
xor
sub
mov
in
(bad)
icebp
pop
xchg
jmp
inc
dec
aam
fisttp
pushf
adc
xor
int3
or
jmp
fisub
mov
jne
outs
and
not
pop
jg
sbb
sahf
out
test
and
mov
sbb
nop
rcl
stos
pop
jae
adc
clc
push
pusha
pop
in
mov
repnz
xor
mov
push
mov
dec
xlat
retf
ror
mov
stc
cmp
jl
xchg
dec
ds
jmp
adc
mov
ror
jp
(bad)
icebp
push
fst
mov
jg
xor
out
adc
push
adc
outs
nop
movs
ror
ja
outs
jnp
push
dec
mov
lea
adc
loope
or
lock
in
and
xchg
mov
xchg
xchg
inc
jmp
mov
lods
gs
imul
and
add
push
pop
les
stos
rol
cmps
nop
loope
out
mov
cmps
out
je
dec
inc
xor
cmp
outs
lea
pop
lods
shl
lods
loop
mov
dec
addr16
push
adc
test
je
dec
in
jno
adc
ins
or
jg
xor
call
(bad)
in
add
add
popa
sub
add
xlat
mov
cmps
jle
sbb
jmp
test
loop
loopne
adc
add
mov
sub
neg
push
and
ror
dec
push
jge
pop
(bad)
das
sbb
popa
mov
xor
popf
dec
shl
add
inc
aas
ds
(bad)
es
daa
call
movs
imul
jo
push
adc
aas
or
mov
inc
cmp
inc
mov
repz
aam
hlt
and
(bad)
ins
mov
mov
cld
sahf
bound
mov
ins
dec
mov
xor
mov
cmp
call
test
add
or
add
lods
aaa
cmc
jb
das
imul
test
inc
mov
jo
enter
mov
inc
jne
fsubr
lods
sar
sbb
cmps
(bad)
test
into
pop
mov
ins
push
aaa
in
(bad)
mov
adc
xor
sub
(bad)
movs
jns
xor
ret
add
ins
push
xchg
cmp
mov
pop
mov
aas
bound
sar
popa
sub
imul
jnp
sub
and
lahf
sub
push
push
push
(bad)
sbb
pop
inc
pop
pop
shl
pop
sbb
pop
and
sar
pop
test
leave
stos
inc
jnp
cmc
mov
imul
pusha
pop
jg
lock
sar
shr
or
fdiv
call
test
jno
cmp
icebp
movs
pop
mov
repz
jle
inc
cmp
jl
push
cmp
mov
inc
cmp
ss
jmp
daa
or
jns
jne
cmp
sub
pop
pop
xchg
sbb
ja
jnp
add
scas
fldcw
mov
repz
es
and
jmp
movs
test
call
sub
test
inc
popf
test
retf
mov
sbb
xchg
loop
test
sbb
ror
aad
shl
push
pop
(bad)
enter
outs
mov
fidiv
loopne
or
shl
and
add
loop
aad
les
push
cmc
mov
or
out
mov
mov
pushf
jns
aam
xor
and
or
lds
call
aam
outs
hlt
bound
adc
push
retf
out
pop
outs
rcr
inc
jg
jmp
loop
mov
hlt
add
pop
loopne
push
inc
cli
loope
je
mov
jnp
mov
jns
test
into
sbb
sub
out
imul
sub
pushw
imul
das
mov
jmp
or
push
lds
sub
cli
mov
jne
(bad)
mov
inc
ret
pusha
push
xor
loop
sahf
ins
push
fs
das
stos
aaa
inc
and
icebp
popf
cmps
cmps
(bad)
neg
jecxz
mov
loope
jbe
or
js
call
xor
test
push
push
sub
movs
sti
or
pop
fwait
dec
and
in
and
pop
cld
scas
cmp
sbb
lods
pop
mov
inc
cmp
xlat
mov
jnp
sahf
push
aad
mov
fsubr
in
repz
sub
jp
or
stos
fidiv
(bad)
aad
in
lds
mov
and
sbb
xor
(bad)
sti
adc
in
xchg
inc
jmp
bnd
dec
ret
push
sti
pop
nop
stc
aas
lea
js
sbb
xor
push
mov
es
(bad)
fdiv
(bad)
sub
pop
adc
adc
xchg
(bad)
fldenv
cmp
pop
push
imul
stos
cs
dec
jo
dec
es
ss
xor
dec
gs
dec
cmp
fisub
push
inc
cmp
cld
or
aad
fninit
pop
jb
add
shr
arpl
arpl
push
dec
clc
shl
cwde
and
jg
pop
idiv
repnz
jae
or
add
jbe
xchg
out
add
js
add
push
mov
(bad)
and
push
icebp
(bad)
jb
sbb
aad
mov
and
aas
push
mov
cmp
mul
retf
out
shl
test
adc
(bad)
(bad)
push
cmp
xlat
pop
rcl
push
int3
add
(bad)
retf
aam
mov
xchg
(bad)
pop
xor
(bad)
cmp
xchg
sub
dec
idiv
int3
rol
movs
out
lds
inc
pop
push
adc
in
dec
pop
in
rol
xor
add
jb
in
push
and
adc
and
jno
inc
lods
jbe
inc
addr16
gs
fwait
rcr
adc
jle
mov
mov
lods
pmuludq
(bad)
mov
call
adc
dec
and
(bad)
addr16
(bad)
loope
pop
dec
dec
test
mov
add
mov
cwde
stos
aaa
test
mov
cmp
jge
pop
clc
sbb
imul
fst
mov
icebp
ss
hlt
pop
mov
inc
in
inc
push
mov
movs
loopne
push
test
mov
add
rcl
shr
or
neg
stc
ret
and
jmp
add
shl
add
(bad)
fsubr
or
stos
sbb
push
aas
imul
pop
dec
push
stos
adc
into
push
jo
xor
sub
xchg
inc
and
pop
xchg
popa
test
sub
test
pop
mov
ss
pop
mov
mov
outs
idiv
add
shl
stos
(bad)
jmp
popf
jg
stos
ja
sbb
or
addr16
xor
aaa
daa
pop
call
mov
nop
sbb
jl
and
das
psubsw
inc
int
dec
jo
mov
and
loope
mov
pop
push
mov
retf
fwait
aaa
mov
out
inc
loopne
mov
dec
test
push
mov
idiv
test
movs
enter
mov
sub
test
sub
je
inc
jmp
loopne
cmp
out
shl
aad
mov
mov
and
inc
call
aas
sbb
jo
xor
mov
pop
gs
mov
rcl
adc
mov
in
cmc
mov
daa
mov
cld
push
jmp
imul
rcr
cdq
aad
xor
sub
xchg
mov
pop
push
aas
repz
and
shr
ds
pop
mov
adc
outs
popa
pusha
add
cs
arpl
fwait
cmp
fimul
jne
sbb
fucom
sbb
jle
add
pop
sahf
ds
cwde
imul
pop
addr16
sbb
lahf
sub
and
test
call
jl
mov
pusha
les
mov
cmp
sub
push
scas
add
push
mul
das
add
mov
jmp
add
(bad)
push
aad
cli
dec
xchg
ret
out
xchg
int
loopne
pop
scas
xor
test
outs
pop
pop
push
pop
pop
js
aaa
mov
popa
xlat
mov
sbb
pop
cmp
add
dec
or
shr
ja
pushf
fs
fdiv
pusha
push
pusha
or
jmp
imul
pop
popf
push
mov
ret
push
sbb
in
mov
add
xchg
cmps
pop
adc
out
push
ja
movs
aam
cmp
cmp
cwde
adc
retf
pop
hlt
adc
inc
das
pop
cdq
sub
leave
mov
(bad)
and
and
inc
loopne
cmp
adc
icebp
cdq
out
rcl
pop
sub
push
(bad)
lods
and
or
test
jbe
push
sbb
loop
xor
je
mov
fidiv
inc
push
popa
and
jmp
aad
and
in
mov
sbb
aad
test
xchg
bswap
rep
fsubr
xor
jo
sbb
addr16
ins
adc
pop
lods
xor
mov
popf
jmp
mov
test
add
in
mov
(bad)
jg
nop
test
push
out
or
rcl
dec
movs
push
sub
test
pusha
mov
or
fs
sub
jo
push
sub
fisttp
out
mov
jno
push
and
retf
lock
jge
mov
test
ds
dec
fcom
mov
mov
xchg
mov
mov
(bad)
pop
int
adc
sub
adc
ret
xchg
sbb
push
ja
push
je
and
(bad)
out
js
div
dec
cmp
icebp
or
iret
test
sbb
cdq
inc
jecxz
push
xchg
in
dec
int3
mov
fild
popf
mov
add
cmp
inc
das
int
(bad)
xor
adc
pop
push
mov
loopne
pop
xor
push
cmp
retf
bound
(bad)
in
lods
inc
dec
xchg
sahf
mov
mov
test
scas
inc
out
loopne
scas
(bad)
jo
jle
jmp
inc
(bad)
mov
fcomp
pop
pop
cmp
rcl
test
or
add
(bad)
sbb
jno
pop
std
out
aas
hlt
nop
ror
mov
sub
rol
fcmovnu
sub
xchg
movs
dec
ss
stos
inc
inc
push
cmp
aam
or
out
xor
sub
aam
xchg
out
xor
cld
and
das
add
std
ror
scas
fucomip
pop
rcl
add
into
repz
in
test
pusha
xchg
dec
sbb
jnp
and
pop
dec
(bad)
sbb
fucomi
fadd
xor
jg
jmp
add
ins
sbb
shr
jmp
nop
dec
sbb
aam
or
xor
mov
pop
dec
call
add
push
pop
mov
push
call
push
push
sbb
stos
xor
jae
rol
mov
dec
movs
push
sbb
sbb
inc
cld
in
daa
pop
pop
xor
popa
pop
repz
imul
out
cmp
xor
inc
jae
scas
loopne
retf
stos
lock
(bad)
jp
(bad)
call
fld
inc
in
or
or
stos
sar
and
xchg
adc
clc
fisttp
or
sub
clc
aad
push
and
(bad)
div
push
xlat
sub
bound
jmp
xor
pop
cmp
dec
mov
mov
rcr
cdq
push
mov
ss
jmp
push
inc
ds
data16
add
mov
push
out
mov
je
jns
jnp
pshufw
and
xchg
fisubr
xor
jno
xor
je
scas
cmps
adc
push
push
pop
gs
cdq
jae
pop
inc
mov
push
je
cli
(bad)
test
sbb
call
xor
ret
and
imul
lock
xlat
mov
out
(bad)
adc
xchg
iret
adc
jmp
outs
sub
aaa
adc
mov
mov
add
fist
xchg
mov
(bad)
out
dec
lods
movs
or
iret
adc
cld
pop
sub
xor
adc
xor
shr
ins
xor
mov
jnp
push
mov
outs
bndstx
jmp
or
inc
add
je
in
test
push
push
popa
cdq
sbb
popf
test
mov
xor
outs
add
cmps
mov
out
test
mov
sub
imul
(bad)
push
call
loopne
sbb
push
push
sbb
arpl
ror
inc
or
mov
bound
mov
mov
call
adc
inc
push
inc
fnstenv
adc
pop
jo
dec
scas
je
aaa
in
xor
in
test
lea
les
ret
pop
xor
push
imul
dec
push
push
or
jnp
in
push
cmp
inc
dec
test
hlt
add
jg
cwde
(bad)
test
add
mov
push
sub
pop
lods
mov
mov
aad
rcl
lods
pop
mov
lds
test
push
leave
inc
sub
mov
mov
test
in
loope
sub
loop
inc
nop
pop
(bad)
pop
fwait
scas
out
ror
cmc
sahf
mov
jbe
retf
mov
stos
stc
lods
shl
in
(bad)
jns
xor
mov
loopne
push
je
fst
sar
iret
in
stc
shl
int
sete
call
mov
aas
inc
sbb
or
push
les
imul
or
adc
retf
adc
xor
push
sbb
inc
(bad)
aam
and
adc
jo
cmp
dec
scas
cmp
test
scas
xor
cs
or
gs
cmp
std
mov
mov
cdq
push
xchg
(bad)
jmp
jo
adc
push
sub
xchg
dec
xor
jo
pop
mov
sbb
add
sbb
pop
jo
fst
mov
inc
jge
xor
clc
bound
into
out
and
sub
shr
inc
jmp
mov
pop
nop
dec
fwait
xor
sbb
ret
pop
pop
pop
or
jno
cld
in
push
xor
cdq
nop
pop
pop
imul
adc
mov
adc
pop
outs
pop
xor
mov
imul
or
fstp
add
or
pop
imul
movs
mov
inc
int
repnz
adc
psrld
cmps
jecxz
jge
xchg
push
cmp
in
stc
out
movs
out
push
dec
fldenv
dec
add
clc
cwde
jge
imul
shl
sbb
dec
lds
mov
std
(bad)
leave
jnp
stos
bound
nop
test
add
stos
xchg
sbb
inc
and
jbe
and
xchg
mov
int3
movs
pop
mov
jno
jae
addr16
jo
scas
xchg
dec
jbe
js
push
in
test
test
pop
sub
push
inc
mov
push
cwde
test
(bad)
jbe
lfs
outs
push
and
cmp
inc
out
into
sub
scas
sub
pusha
out
dec
jnp
stos
jmp
test
arpl
das
hlt
mov
loop
inc
and
adc
jecxz
fmul
adc
jmp
clc
out
and
bound
jmp
cmps
mov
shl
in
add
mov
test
pop
(bad)
cmp
movs
mov
cmc
xor
mov
sub
jo
iret
div
sub
sbb
rcl
mov
push
sub
dec
pop
pop
(bad)
add
(bad)
pop
cmp
sub
inc
and
call
(bad)
and
fabs
and
push
xlat
push
call
jmp
jne
adc
lock
mov
std
sbb
out
xchg
push
mov
add
(bad)
sub
sbb
pushf
enter
push
pop
sbb
jne
cmp
arpl
push
jp
mov
not
add
ds
or
push
mov
mov
in
mov
inc
imul
inc
adc
or
jns
outs
push
sbb
and
pop
xchg
fnstcw
rol
inc
push
call
rcl
or
cmp
or
sub
lods
pop
xchg
pop
into
jmp
icebp
jl
xor
daa
pop
(bad)
repnz
stos
pop
ret
cmps
mov
add
dec
sar
jle
sbb
les
(bad)
pextrw
push
sub
jmp
adc
movs
call
test
pop
sub
call
mov
aaa
inc
dec
pusha
ret
pusha
cmp
jle
aam
fisttp
xchg
fist
push
jne
cmp
pop
iret
dec
pusha
xor
sub
mov
jo
pop
stos
daa
arpl
rcl
sub
mov
jp
hlt
int3
in
mov
push
and
push
xor
jecxz
jae
dec
jbe
xchg
cmp
mov
pop
jmp
pop
ss
and
push
jle
js
push
cli
stos
fs
ds
fnstcw
iret
and
sub
mov
fstp
inc
mov
dec
stos
test
stc
mov
push
icebp
xor
ror
je
xor
enter
jmp
push
call
in
jb
xor
fdivr
xlat
mov
pop
fwait
cmp
ret
(bad)
fdiv
mov
push
lods
cmps
mov
ror
call
in
cmp
add
adc
mov
jbe
cmps
cdq
mov
or
jb
into
mov
aaa
inc
xlat
je
jmp
sub
xor
or
mov
retf
xchg
xor
fidiv
pop
les
cmps
cmp
rol
jmp
mov
dec
xlat
jecxz
nop
into
pop
dec
lds
popf
pop
inc
sub
enter
stc
sbb
mov
fcom
arpl
test
addr16
outs
dec
jne
cwde
(bad)
push
stc
or
dec
mov
mov
or
pop
aam
xor
mov
les
push
imul
int3
(bad)
jl
mov
(bad)
shl
(bad)
dec
jmp
not
stos
sub
mov
push
xor
out
add
out
aad
pop
stos
pop
xchg
cwde
sbb
(bad)
enter
add
in
jno
jae
or
add
add
mov
mov
pusha
push
push
pop
out
push
daa
popf
in
ja
fldenv
clc
ror
ss
xchg
inc
scas
retf
test
pushf
or
or
jnp
sahf
call
sub
dec
jle
xor
and
sbb
icebp
jo
in
popf
outs
jg
xor
push
stos
adc
and
aad
and
jg
repnz
dec
pop
cmp
mov
jae
sbb
bound
push
dec
pop
xchg
pop
mov
cmps
fistp
pusha
int
out
(bad)
int
jns
push
sub
cli
jbe
test
pop
arpl
add
ficom
xlat
loopne
movs
adc
adc
into
(bad)
add
sbb
sti
fs
or
or
xor
popa
jbe
ja
mov
les
int3
mov
xchg
xchg
setno
retf
rcl
push
sub
push
retf
iret
dec
dec
(bad)
and
je
mov
ret
cmps
ss
in
stos
mov
xor
push
not
lds
test
mov
test
dec
xchg
ret
push
xchg
loop
mov
ret
sub
mov
jge
dec
pop
(bad)
in
or
test
ror
sub
adc
inc
add
test
shl
or
pushf
mov
add
lods
jmp
enter
ret
stc
cmp
pop
jl
mov
inc
push
loop
ret
and
sbb
in
out
icebp
loopne
vfrczpd
idiv
fsubr
daa
sti
jp
icebp
ror
mov
sti
push
cmp
mov
add
push
push
dec
ds
dec
cdq
mov
ja
fsubr
in
xchg
inc
or
or
aam
jle
push
dec
push
mov
retf
idiv
inc
iret
inc
mov
push
lods
xchg
stc
leave
lea
add
(bad)
jae
jl
sbb
cmp
cmps
pop
or
pusha
xchg
push
aas
mov
movs
xchg
inc
arpl
and
xchg
mov
sbb
inc
mov
jae
adc
(bad)
jmp
mov
call
mov
cmp
push
pushf
adc
inc
rcr
hlt
jno
out
pop
pushf
dec
inc
jo
fninit
cmc
es
sbb
imul
sub
push
xor
out
jmp
or
add
test
pop
inc
dec
fsubr
(bad)
jbe
mov
(bad)
jns
mov
shl
push
jl
repz
lock
cmp
inc
dec
mov
pop
jp
cmp
xor
cmp
jmp
lds
dec
push
mov
in
push
xor
imul
dec
push
mov
popa
mov
mov
push
rcl
xchg
xchg
xchg
xchg
sahf
dec
mov
mov
pushf
cmps
mov
mov
inc
dec
ins
dec
daa
outs
(bad)
jns
or
bound
jo
xor
test
daa
clc
mov
push
sub
rcl
(bad)
(bad)
je
xchg
test
pop
mov
icebp
mov
jnp
popa
adc
aam
inc
popf
sbb
mov
test
xchg
sbb
sbb
xor
sub
push
enter
cmc
adc
mov
jl
sbb
push
inc
push
jb
loopne
pop
lds
imul
push
sar
mov
mul
fcomp
jecxz
or
mov
sub
adc
push
int3
mov
icebp
das
inc
ja
cmp
add
pop
retf
test
cmp
jo
in
(bad)
cwde
pushf
lahf
dec
jle
in
xor
jge
lods
mov
pop
sbb
scas
pop
push
cs
pop
hlt
or
ds
pop
js
lds
push
clc
(bad)
fucomip
xor
std
pushf
xchg
into
fld
test
or
pop
mov
movs
aaa
cli
int3
int3
sbb
xlat
ds
dec
andnps
push
xchg
movs
stc
stc
out
pop
xchg
test
sbb
dec
mov
hlt
adc
imul
push
sbb
(bad)
xor
sbb
cmps
or
repnz
in
rol
aaa
cmp
adc
mov
mov
iret
inc
mov
jne
adc
cmp
or
fbld
and
pop
inc
pop
int
push
sbb
pop
cmc
stos
pop
out
sub
ret
mov
jnp
repz
dec
inc
lock
mov
add
and
pop
sbb
fidiv
add
fisub
test
pushf
out
adc
jge
mov
sbb
inc
sub
add
xchg
cmp
dec
pop
cdq
dec
aad
cmp
dec
shl
fisub
xor
push
mov
lahf
sbb
mov
xchg
movs
and
ds
and
addr16
sbb
mov
imul
or
shl
jbe
mov
cdq
fild
out
mov
dec
mov
inc
popa
jp
ins
inc
jge
mul
div
or
mov
bswap
cmp
scas
dec
push
(bad)
cmp
mov
into
aad
rol
jae
xor
sar
arpl
push
jmp
popa
fsub
push
imul
xor
mov
sub
fidiv
or
inc
jecxz
in
ret
sahf
mov
pop
xchg
fucomi
fwait
pop
pand
cmp
jg
or
sub
cmc
add
sub
push
mov
adc
or
add
imul
sahf
lds
hlt
stc
fisttp
pop
idiv
and
xchg
sub
ins
jne
pop
dec
dec
push
outs
cwde
cmp
pushf
arpl
les
pop
dec
mov
(bad)
adc
or
aaa
ret
push
add
pop
pop
test
and
xor
jge
cwde
xor
int
int3
retf
push
mov
sub
jg
cmp
dec
xchg
dec
sbb
test
add
xor
leave
and
sbb
not
les
xor
mov
aad
mov
call
std
jbe
rcl
test
mov
inc
cwde
sbb
fwait
bound
sub
lock
inc
clc
inc
jo
inc
int3
inc
mov
mov
jnp
ins
dec
aad
ret
sahf
sbb
xor
jbe
dec
movs
xchg
mov
dec
dec
mov
mov
lea
mov
inc
test
mov
adc
sbb
int3
not
inc
out
dec
pushf
mov
gs
inc
cmc
push
mov
mov
mov
inc
mov
inc
cmp
inc
push
pop
fisubr
loopne
je
jge
in
fnsave
cdq
outs
mov
inc
or
aad
and
push
jae
shl
sahf
out
or
mov
sbb
rcl
les
mov
dec
cdq
pushf
cdq
stc
pop
push
shr
out
xchg
test
pop
addr16
pusha
lahf
in
mov
lock
sbb
mov
and
mov
xor
xchg
mov
pop
ds
xchg
maskmovq
mul
ds
inc
pop
iret
cmp
xchg
enter
and
pushf
or
jae
add
retf
xlat
cmps
aam
gs
in
xor
pop
into
push
fsub
mov
leave
mov
int
bound
mov
cmp
jle
rcr
ds
fidiv
inc
push
push
or
xchg
in
adc
enter
inc
out
mov
sub
cmp
add
js
out
imul
sahf
jno
fiadd
in
movs
test
(bad)
fucom
in
cmovb
cmps
dec
stc
sbb
sbb
push
push
enter
add
fsubr
cdq
xor
jg
mov
scas
nop
ret
pop
sub
sub
test
xchg
call
sub
int
js
fstp
movs
mov
adc
in
bound
shr
cmc
pop
pop
mov
add
mov
and
or
pop
icebp
nop
mov
repz
inc
mov
fnsetpm(287
jmp
push
int3
fsubp
fisttp
cs
(bad)
jle
nop
cmp
ror
loope
mov
test
ds
and
rol
je
and
dec
xor
repnz
mov
int
and
pop
fsubr
outs
or
mov
lods
mov
jo
scas
test
shr
cs
xchg
cmc
or
sub
pop
popf
or
cdq
int
or
ja
shl
cdq
(bad)
jb
mov
test
cwde
and
adc
shl
imul
fsubr
dec
fwait
and
out
imul
lds
jle
sbb
push
mov
cli
push
sub
mov
dec
jbe
jp
pop
fstp
aaa
adc
or
mov
dec
imul
and
mov
lods
shl
inc
inc
push
mov
jae
pusha
cmps
inc
adc
jecxz
mov
push
push
(bad)
sub
std
test
push
jecxz
fmul
sub
xchg
jbe
mov
pop
imul
aas
adc
jge
shr
les
add
rol
and
or
nop
xchg
stc
inc
xchg
enter
and
in
dec
mov
mov
inc
pop
outs
scas
(bad)
jae
xchg
ror
je
xchg
lock
pop
mov
test
and
lods
cdq
mov
jmp
outs
std
outs
xchg
ds
das
sub
jne
ins
sbb
and
add
cmp
cmps
lods
cmc
rcr
stos
sbb
push
cmps
mov
pop
sbb
cmp
jp
xchg
aam
cmps
pushf
xchg
and
jmp
jb
cmps
mov
and
jge
and
adc
xor
add
jmp
sbb
xchg
in
ja
add
ror
into
jle
pop
es
sbb
push
cmp
xchg
int
fisubr
adc
test
cmp
stos
xchg
in
fcomp
dec
xchg
int
adc
cmp
test
test
or
jmp
(bad)
sbb
fcom
add
inc
jecxz
rcr
inc
bound
push
scas
push
mov
add
pop
popf
mov
cli
int3
sub
sub
shr
push
inc
cwde
jne
imul
xchg
or
sbb
call
icebp
fucomi
stos
dec
int3
cmps
jecxz
(bad)
xchg
inc
dec
mov
and
inc
push
cmp
in
stos
or
in
ins
add
mov
mov
pop
push
pop
jg
fild
add
enter
adc
xchg
xchg
addr16
inc
loope
xchg
loop
(bad)
xchg
stos
and
addr16
mov
push
xor
add
cs
test
pop
cmp
mov
dec
inc
ret
out
pop
mov
cmc
inc
or
popf
pop
sub
fs
(bad)
imul
xchg
les
ficomp
xchg
dec
jp
das
int
add
pop
jecxz
xor
sub
fst
(bad)
jne
aad
jecxz
fwait
cmps
jb
xor
jl
and
adc
xchg
cmp
mov
adc
repnz
fidivr
sahf
jb
dec
mov
xchg
xchg
ret
adc
sbb
imul
imul
hlt
jns
jno
mov
iret
je
stos
jbe
jl
arpl
or
pushf
aam
push
cmps
lods
jno
jb
mov
push
dec
sub
repnz
adc
xor
out
xor
mov
xor
ret
xchg
test
mov
sbb
daa
les
mov
adc
sub
mov
and
fiadd
push
mov
(bad)
(bad)
loopne
ss
bnd
call
call
pop
loope
lahf
mov
sub
movs
loope
xchg
icebp
push
push
jb
in
in
mov
add
dec
sub
(bad)
or
out
les
ficomp
push
inc
pop
fs
(bad)
std
adc
xchg
sub
imul
jg
rcl
pop
in
jp
iret
adc
(bad)
mov
mov
gs
dec
leave
aam
adc
cmp
int
add
ficomp
xchg
mov
mov
cmp
(bad)
push
arpl
leave
js
mov
cld
out
xor
sub
call
(bad)
mov
(bad)
sahf
cmp
inc
ja
jmp
sub
cwde
cdq
jno
fdivr
cdq
xchg
test
sbb
lea
cmp
adc
cs
rol
or
es
or
dec
fcom
or
push
and
mov
mov
mov
pusha
shl
cmp
test
fsubr
inc
jb
jp
mov
shr
cmps
and
jl
sbb
jl
push
ror
xchg
mov
dec
dec
pop
fwait
jmp
mov
(bad)
push
pop
inc
pushf
lods
sbb
rcr
mov
(bad)
mov
lods
mov
sti
mov
sub
data16
or
mov
mov
mov
add
push
pop
les
test
push
call
push
popa
repnz
hlt
sbb
inc
jmp
(bad)
out
adc
dec
outs
inc
(bad)
icebp
jmp
push
ja
mov
fisub
outs
push
pop
call
(bad)
gs
jb
mov
adc
push
into
xchg
add
cli
sub
inc
or
and
fisttp
mov
xchg
and
jge
jg
fwait
je
cli
xchg
in
jg
dec
ret
and
je
pop
in
xchg
and
shl
(bad)
(bad)
sbb
add
sbb
pushf
cmp
cmc
push
(bad)
cmp
sbb
jle
jmp
mov
popa
ss
cmp
dec
pop
adc
push
dec
pop
ror
mov
je
sbb
lea
test
or
test
popf
push
rcr
and
mov
push
test
and
lods
enter
popa
push
repz
mov
dec
ret
sti
dec
mov
mov
cmp
jmp
repnz
push
std
pushf
ins
push
jns
sbb
out
mov
popa
sub
cmps
and
shr
ja
pop
imul
popf
xchg
inc
ds
and
mov
gs
dec
sar
dec
cmps
mov
ins
jns
add
mov
sub
int3
call
arpl
jecxz
dec
int
xchg
out
and
or
lock
rol
jns
out
enter
and
movs
imul
xchg
mov
jo
sbb
jmp
cmps
pop
inc
enter
mov
or
std
mov
mov
jmp
adc
sbb
jo
arpl
(bad)
sub
ret
mov
jecxz
or
sub
(bad)
call
sbb
sub
pusha
ds
cmc
add
fcmovu
xor
int
xor
inc
test
cs
xor
in
jb
fbld
cli
dec
mov
jmp
push
push
js
sahf
mov
jo
loopne
xchg
sbb
sub
pop
mov
or
es
imul
cmps
ins
fldcw
in
(bad)
jmp
sub
mov
jmp
mov
dec
push
xor
jbe
imul
sbb
mov
ss
push
pop
inc
outs
jmp
and
movs
inc
call
jne
mov
lods
cmp
push
pop
retf
sbb
inc
arpl
ds
dec
mov
jns
movs
(bad)
fs
push
(bad)
leave
push
dec
dec
jecxz
xlat
js
daa
xchg
into
imul
jecxz
adc
push
dec
xor
mov
inc
inc
or
inc
lock
pop
ret
sbb
cmps
push
loop
xlat
outs
jp
xrelease
inc
adc
mov
mov
xor
jb
add
dec
jp
cmps
stos
and
jno
cli
mov
cmp
xchg
or
and
or
adc
xchg
adc
xor
sub
ins
sub
repz
lods
or
jmp
cmp
in
sub
movs
and
and
loop
pop
int3
cmps
dec
add
pop
scas
push
mov
in
pusha
js
pop
or
(bad)
xor
push
imul
movs
lock
add
pop
jb
jmp
fcmovnu
arpl
push
pop
sahf
div
ror
and
cmp
or
push
jge
aaa
loop
(bad)
pop
jl
in
jno
push
and
int3
stos
or
jnp
push
loop
inc
sbb
in
in
sbb
mov
(bad)
mov
jns
(bad)
jo
es
shufps
cmp
sbb
adc
gs
shl
sti
xor
and
outs
sbb
imul
fiadd
in
inc
adc
cmp
in
sahf
pushf
jmp
icebp
mov
popa
cld
cmp
pop
sbb
outs
mov
push
cdq
cdq
xchg
push
adc
rcr
(bad)
aad
jg
aam
aam
stos
outs
inc
pop
fild
xchg
jmp
mov
imul
pop
mov
movs
mov
es
das
into
xchg
jecxz
lods
jno
sub
fld
mov
and
cdq
inc
mov
jg
adc
aas
test
mov
fild
sbb
int
ficomp
cmp
dec
dec
leave
in
sbb
jmp
sub
mov
push
jae
xchg
inc
inc
fwait
or
rol
and
push
inc
movs
xchg
leave
hlt
xchg
add
bnd
mov
jge
es
ror
mov
cmc
enter
loopne
sub
int
lds
scas
jl
push
addr16
mov
hlt
out
jp
cdq
xchg
cli
test
data16
xor
cmp
pop
or
push
mov
add
ds
sbb
jae
cmps
inc
test
lea
fisub
bswap
in
iret
push
push
and
shr
and
dec
stc
push
scas
test
ins
fsub
sub
not
pushf
xor
ins
ins
cwde
inc
in
(bad)
xchg
and
or
mov
sahf
test
std
or
test
movs
leave
sub
mov
test
ss
xchg
in
inc
mov
bound
dec
das
arpl
mov
aad
test
pop
dec
push
mov
test
xchg
cwde
sub
push
or
add
test
jo
mov
ret
fidivr
mov
outs
mov
jge
dec
ins
mov
sti
adc
xchg
adc
outs
inc
sub
xor
mov
sbb
iret
fisubr
mov
pop
mov
or
push
dec
sti
cmp
fwait
out
xchg
movs
or
int
sar
clc
dec
into
(bad)
stos
fidivr
mov
xor
imul
inc
loop
cmc
scas
movs
ins
add
bound
arpl
ret
xchg
loope
mov
or
gs
movs
ret
xchg
or
(bad)
sbb
in
add
cmp
or
mov
stos
aaa
imul
stos
je
and
mov
test
jle
inc
push
jmp
add
not
cmp
pushf
adc
adc
fild
cmps
std
cmps
(bad)
call
int
aaa
inc
aad
out
xor
inc
call
outs
adc
test
sub
mov
mov
jns
in
das
sbb
(bad)
sub
imul
jle
repnz
mov
dec
or
mov
cmp
push
xchg
mov
mov
pop
hlt
ret
xor
fisttp
aad
jb
movs
adc
jno
in
jbe
clc
mov
mov
repz
stos
jge
pop
xchg
(bad)
mov
cmp
out
rcl
pop
pop
shl
or
and
(bad)
pop
mov
daa
sub
imul
ret
inc
jecxz
(bad)
jp
int3
and
(bad)
scas
dec
pop
mov
push
mov
sub
js
jmp
xchg
inc
movs
shl
mov
jmp
and
adc
std
les
iret
inc
jbe
add
idiv
lahf
xchg
fwait
jg
or
jle
xchg
push
enter
fs
ds
mov
call
xchg
mov
ss
pop
jae
aas
dec
sbb
sub
jne
sbb
cli
fisubr
aaa
repz
push
mov
dec
syscall
push
and
addr16
sbb
mov
aaa
or
arpl
(bad)
push
out
bound
das
and
in
into
ror
pop
mov
enter
xchg
je
jp
dec
jmp
xchg
inc
jb
jns
add
pushf
test
(bad)
mov
push
mov
js
daa
mov
push
imul
pop
popa
in
jecxz
jp
sti
shr
(bad)
sub
push
push
and
pop
rol
xchg
adc
fs
cmc
push
mov
xchg
mov
aam
outs
inc
mov
adc
inc
mov
mov
fisubr
xlat
lahf
leave
js
mov
cmp
xor
lods
movs
push
sbb
sub
or
and
push
add
loopne
xchg
xlat
mov
jns
push
mov
push
pop
ds
sub
popa
rol
adc
dec
dec
adc
or
push
cmc
jno
xchg
sub
pop
aad
call
pop
add
lahf
cmps
out
or
ss
iret
and
xor
mov
stc
xchg
in
inc
cmp
sub
and
data16
add
sahf
shl
mov
imul
shl
or
and
dec
out
test
add
je
daa
cld
in
data16
mov
cs
adc
push
sbb
shr
jl
jmp
dec
pop
in
retf
push
pop
jnp
(bad)
xchg
outs
shl
aam
push
push
jae
pop
pop
inc
and
arpl
jecxz
in
mov
nop
leave
and
nop
test
mov
out
mov
mov
repz
adc
mov
js
into
dec
sbb
push
xchg
aas
adc
jno
jmp
inc
es
jmp
push
nop
sub
sub
aas
fistp
ret
ins
ret
div
adc
jb
bound
ins
rcr
mov
push
pushf
call
mov
push
or
idiv
add
ret
(bad)
sbb
sub
mov
lods
sbb
daa
imul
dec
sub
mov
jne
push
mov
xor
push
push
and
in
add
or
aam
jg
outs
inc
push
ret
out
fucom
inc
ds
jge
sahf
in
sbb
push
gs
mov
imul
out
xchg
jb
enter
xchg
xor
(bad)
cmp
jge
shl
pop
scas
lods
pushf
sti
adc
leave
adc
scas
popa
icebp
dec
sbb
push
add
ror
push
sbb
push
mov
repnz
jno
mov
addr16
mov
iret
aad
cmp
cmp
mov
xchg
lods
adc
sbb
lods
sbb
mov
push
mov
jno
add
sbb
and
sahf
mov
mov
lea
leave
jle
inc
jecxz
shr
fst
ja
(bad)
(bad)
mov
sbb
ins
in
ins
stos
and
cmp
sub
leave
adc
sub
add
push
cmp
cmp
fs
out
jno
dec
xchg
addr16
sbb
sub
xor
add
cmp
js
aam
inc
dec
fs
inc
xor
mov
lds
aas
xchg
addr16
loope
push
or
mov
push
xchg
mov
adc
sub
pop
into
mov
(bad)
pop
pop
sub
sub
adc
dec
add
dec
xchg
mov
or
(bad)
mov
nop
lock
fistp
es
cli
iret
fwait
cmp
and
out
jns
xor
pop
cmps
lahf
adc
test
inc
ficomp
test
pop
cli
jmp
mov
cli
movs
dec
sbb
rcr
sub
xor
cmp
rcl
retf
sbb
stos
mov
pop
movs
mov
lods
vfrczps
fwait
dec
popa
pop
cmp
pop
stos
pusha
mov
jae
cmc
cwde
lods
lods
jmp
sub
adc
jo
addr16
jle
out
xor
loop
pop
leave
xlat
in
pop
es
dec
enter
xor
add
fdiv
xlat
jne
das
data16
rol
(bad)
into
cwde
(bad)
sbb
popf
mov
mov
fisub
outs
jmp
lods
sbb
jecxz
sbb
stos
dec
push
aas
aad
pusha
dec
sub
sbb
loope
cdq
cmp
sub
dec
rcl
pop
out
stos
(bad)
retf
xchg
loop
dec
cmc
sbb
nop
test
pop
stc
in
inc
hlt
dec
xlat
mov
pop
dec
xchg
arpl
jo
cmp
imul
fild
jb
fiadd
pop
xor
(bad)
int
cmp
xor
pop
sub
push
xchg
call
mov
and
rcl
jne
cmp
push
dec
popf
ss
cmp
movs
fidivr
xchg
xchg
push
fimul
out
mov
pop
push
jecxz
cmp
daa
shr
xor
push
fsubr
xor
popa
pop
bnd
popa
(bad)
dec
xor
pushf
xchg
mov
jle
dec
(bad)
mov
mov
inc
or
test
(bad)
xchg
(bad)
adc
bound
xchg
sub
cmp
push
cmp
xor
push
sahf
mov
mov
xchg
in
ds
sbb
dec
xchg
popf
ror
and
fwait
cmps
lds
sub
sub
inc
push
mov
inc
enter
pop
mov
fiadd
pop
daa
test
lds
ret
addr16
mov
movsx
cdq
call
out
sbb
push
clflush
std
movs
test
in
(bad)
mov
add
imul
jae
stc
mov
js
lods
fisub
jg
push
xchg
btc
adc
add
sub
xcrypt-ecb
cmps
dec
mov
jo
dec
mov
dec
std
and
push
mov
outs
mov
aas
hlt
mov
paddw
(bad)
mov
and
or
jl
shl
ja
mov
push
add
pop
or
fwait
sbb
inc
cmp
enter
stos
pop
push
outs
(bad)
fwait
and
das
pop
repnz
dec
push
fcomi
dec
cmp
adc
fistp
xor
sbb
pop
in
xchg
cli
cmp
fisttp
cmp
xchg
mov
jb
push
loopne
(bad)
sbb
push
jmp
xchg
clc
loop
push
loop
adc
mov
push
int3
repz
inc
dec
mov
mov
cmp
sub
popf
sub
or
jmp
shr
repz
or
pop
leave
bound
fiadd
inc
add
jnp
mov
rcl
dec
pop
ror
push
or
fs
aas
push
aam
ja
xchg
jno
or
xlat
cmp
jne
adc
rcr
test
movs
cmp
aam
in
imul
cmps
jmp
aaa
fs
add
pushf
add
mov
mov
xchg
xchg
cld
popa
and
jne
sbb
xor
das
leave
scas
pop
mov
in
ror
bswap
mov
xchg
bound
pop
leave
(bad)
xchg
sbb
repz
lock
lods
adc
out
cmc
aad
stos
mov
scas
dec
iret
adc
pop
aam
mov
sub
mov
jmp
ins
mov
mov
mov
rcl
fldenv
in
and
or
push
inc
shr
retf
push
ins
add
lea
not
pop
fist
inc
dec
cmp
sub
aad
int
mov
cmps
daa
out
out
outs
stos
pushf
sub
fstp
and
dec
(bad)
xor
jns
sbb
in
out
push
sahf
std
mov
(bad)
sahf
shl
jle
retf
and
jne
adc
sbb
scas
mov
cmp
pop
imul
add
dec
inc
rdtsc
jb
repnz
or
in
das
adc
jmp
ss
or
mov
push
fild
mov
jo
mov
cmc
add
in
or
push
shl
mov
push
mov
ins
pop
retf
pop
inc
sbb
repz
jae
shr
dec
out
or
mov
jge
cmp
repz
nop
cs
sbb
std
jle
js
cmp
mov
outs
nop
dec
adc
mov
cmc
push
sub
push
mov
jl
inc
mov
xor
add
adc
push
mov
mov
jnp
ret
and
lock
pop
xchg
xchg
clc
mov
int3
or
pop
push
lds
dec
aaa
in
dec
out
mov
fidiv
inc
and
push
lock
xchg
cli
mov
and
push
pop
out
movs
or
movs
ds
dec
bound
xchg
and
or
fld
xor
fist
(bad)
pushf
mov
ficom
out
mov
sub
xor
call
imul
cmp
xor
or
lds
push
movs
xchg
shr
fcmovbe
ret
out
add
fmul
out
rol
xchg
push
pop
dec
xor
dec
rcl
add
test
hlt
repz
and
pop
std
imul
add
inc
call
adc
xor
xor
jmp
lahf
cmc
test
xor
mov
pop
test
sub
in
sbb
sbb
push
and
rcr
mov
fiadd
and
jns
xchg
fldlg2
arpl
mov
pop
mov
adc
mov
xor
mov
mov
loop
inc
xor
movs
ins
jo
xchg
mov
mov
dec
push
cmp
lahf
lods
loopne
mov
or
lock
out
ss
mov
test
mov
push
cmp
cli
out
pop
scas
mov
sub
(bad)
loope
cmp
imul
dec
jmp
xchg
xor
clc
cwde
aam
or
and
push
jno
in
jmp
pop
std
pusha
aad
inc
outs
popa
sub
mov
pop
mov
stos
repz
rcl
imul
pop
mov
mov
adc
cmp
retf
adc
dec
lds
mov
sahf
shl
stos
jnp
fs
dec
cmp
inc
or
cmps
pop
leave
arpl
jmp
vsubps
xchg
jp
je
hlt
test
jo
dec
and
(bad)
int
ins
sub
test
out
inc
test
clc
inc
cmp
xchg
or
push
push
jle
stos
call
cdq
xor
ret
adc
retf
push
in
sub
enter
movs
xchg
xchg
cmp
lods
adc
(bad)
jge
xchg
or
not
push
mov
nop
push
or
dec
ror
mov
inc
out
ret
ds
sbb
stc
pop
cld
or
lahf
pop
or
fadd
xlat
add
mov
mov
stos
jno
pushf
aam
pop
scas
aam
daa
jns
jns
jmp
clc
scas
cmps
sar
retf
clc
and
test
lahf
xor
(bad)
out
out
sub
test
jns
cdq
add
mov
mov
xchg
mov
sbb
dec
push
adc
aad
hlt
pop
inc
mul
test
fild
es
jbe
inc
and
test
outs
movs
xchg
mov
popf
lahf
mov
xchg
inc
ds
pop
sub
jmp
or
jmp
add
and
test
stos
fs
mov
out
out
jno
pop
pop
frstor
push
xchg
jg
adc
dec
imul
dec
adc
inc
push
mov
push
sub
add
add
pusha
mov
gs
dec
xor
add
leave
cmp
jo
(bad)
xchg
xchg
jecxz
xchg
cmp
mov
lods
cmp
retf
push
xchg
leave
mov
lds
fadd
adc
loopne
and
int3
dec
jno
jb
sub
test
adc
mov
dec
and
mov
push
adc
(bad)
(bad)
(bad)
mov
stos
mov
retf
xor
bound
cld
sbb
dec
add
in
mov
cmps
outs
xchg
dec
(bad)
or
cmc
stos
out
imul
mov
and
js
mov
ins
repnz
mov
pushf
js
int
mov
sahf
cmp
mov
int3
sbb
cmps
mov
rcr
jnp
mov
fsubrp
jo
or
xchg
ds
and
mov
or
lock
aad
xchg
cmps
and
xchg
stos
test
sbb
cmc
and
cmp
repz
ret
cmp
in
call
inc
or
inc
jp
scas
sub
cs
mov
dec
mov
xor
jmp
dec
mov
ss
push
adc
jo
pop
push
stos
in
xchg
in
push
mov
test
es
test
add
sub
jp
dec
inc
mov
sub
push
pop
cmp
dec
bound
xchg
xchg
push
or
movs
(bad)
push
fs
or
out
das
minps
dec
add
xlat
or
dec
dec
mov
dec
(bad)
(bad)
xchg
xor
jge
pop
adc
or
repz
aad
sbb
or
jmp
(bad)
(bad)
mov
sub
(bad)
lods
imul
jmp
outs
pop
in
xor
div
int
push
sahf
sar
and
mov
retf
retf
jae
sub
jmp
cmp
sti
pop
adc
xchg
xchg
inc
dec
push
xchg
sbb
iret
(bad)
mov
cmc
mov
jbe
mov
sub
jmp
pop
call
adc
cmc
xchg
and
adc
jl
pop
pusha
or
sar
dec
mov
push
aad
lods
out
sahf
in
xchg
fmulp
sbb
lahf
je
jb
mov
movs
or
int3
adc
cmp
sub
adc
sbb
pop
and
imul
in
xor
mov
mov
mov
cmp
(bad)
mov
add
dec
push
xchg
xlat
fnstsw
lock
mul
and
adc
ret
fisub
mov
jo
rcr
cmp
xchg
pop
lds
(bad)
int3
mov
lds
mov
inc
xchg
sbb
arpl
pop
ja
xchg
mov
sysexit
fwait
mov
add
push
jae
fwait
dec
data16
repnz
clc
add
cmc
sub
mov
fucomp
xlat
lds
sti
dec
pop
mov
imul
adc
loope
adc
out
mov
repz
pusha
and
adc
mov
and
or
dec
mov
add
xlat
jp
and
xor
dec
clc
test
xor
loop
xor
xor
and
cmp
cmp
arpl
pop
xor
cdq
ficomp
fldenv
mov
sub
pop
div
enter
sub
loopne
mov
jo
cmp
push
iret
cmps
or
imul
inc
add
mov
stos
fisubr
sbb
xchg
add
int
jb
sbb
cli
bextr
mov
aam
pop
mov
inc
fldcw
mov
in
push
mov
out
in
push
ror
adc
ficom
xor
nop
sub
je
lea
sub
sbb
mov
inc
xor
push
test
sti
js
out
js
fsub
(bad)
cld
jns
push
pushf
loop
mov
stc
dec
div
aaa
inc
sbb
movs
add
inc
je
hlt
in
fild
sbb
push
lea
nop
jne
(bad)
push
mov
hlt
or
in
jmp
sbb
neg
popf
je
inc
push
mov
push
loop
outs
xlat
or
add
loope
add
adc
bnd
lods
lods
(bad)
shl
mov
add
sbb
jl
jmp
js
jbe
and
shr
jae
mov
ins
mov
call
movs
lds
cmp
push
outs
cmp
sbb
dec
mov
js
xlat
cdq
push
mov
cmp
into
stc
sub
mov
sbb
dec
pop
mov
aam
movs
mov
jae
xchg
ficom
test
or
add
xor
dec
sar
into
push
stc
mov
lock
fsubp
cwde
adc
or
aad
sti
mov
jae
mov
test
int
adc
xchg
lods
xchg
push
add
jne
jo
dec
sahf
pop
mov
repz
lahf
movs
push
or
adc
cmps
test
cld
dec
mov
sahf
xchg
xchg
push
fistp
data16
je
or
mov
ror
cdq
mov
mov
mov
push
loope
push
std
aaa
in
repz
adc
and
mov
mov
or
ret
sub
push
jne
xor
out
iret
stos
push
jo
popa
mov
jo
inc
mov
fwait
push
jbe
xor
mov
mov
dec
fiadd
outs
push
sub
add
ret
add
pop
int3
mov
popa
test
sbb
xchg
lahf
mov
mov
cli
xor
test
out
mov
jecxz
and
jle
and
imul
cmp
mov
lock
mov
ss
or
into
js
add
xor
xor
cmp
rcl
mov
and
(bad)
cmp
ss
sub
stc
sahf
hlt
imul
jns
xor
and
js
mov
dec
jge
jnp
movs
adc
nop
retf
lods
or
lods
jle
stos
adc
ret
icebp
ds
loop
xor
test
(bad)
adc
mov
out
xor
push
or
test
xchg
dec
push
dec
bound
xor
hlt
xchg
xchg
call
mov
add
cld
and
sub
jp
sub
xchg
add
out
ror
movs
loope
test
into
pushf
mov
sub
pop
fimul
mov
rol
out
cmp
mov
inc
gs
pop
inc
ss
inc
xor
pop
hlt
or
mov
daa
xchg
and
test
fwait
adc
jl
das
pop
jbe
fs
movs
mov
ins
or
add
or
out
clc
out
pop
or
jnp
sub
mov
iret
stos
push
int
cmp
lods
xor
in
test
test
mov
into
(bad)
bound
push
mov
(bad)
aad
lea
mov
inc
jle
pop
cdq
out
stc
push
push
cmps
push
mov
mov
inc
add
retf
mov
shl
sub
mov
mov
jmp
sub
mov
test
xadd
fidiv
inc
repnz
mov
(bad)
and
mov
(bad)
leave
and
mov
cs
dec
adc
mov
push
and
out
test
adc
aam
cmp
out
dec
adc
imul
xor
push
mov
add
pop
sbb
lock
scas
push
arpl
je
fiadd
rol
and
rcr
cld
call
daa
lods
xchg
mov
addr16
in
lahf
popf
push
push
xlat
xchg
loopne
or
jmp
adc
sub
cmp
sbb
data16
and
dec
arpl
stc
push
cs
or
xchg
rcr
mov
mov
shl
dec
lods
push
mov
mov
outs
and
jne
leave
mov
cld
retf
pushf
sbb
div
pop
mov
or
add
xor
mov
arpl
mov
shl
xlat
rcl
loop
aam
sub
cld
mov
jmp
repnz
mov
xor
dec
cmp
adc
and
lods
jno
ror
sbb
mov
push
mov
ret
lea
clc
int3
jbe
cld
lods
sub
and
outs
lahf
je
lock
fimul
scas
jl
push
pop
sub
(bad)
mov
(bad)
enter
mov
inc
daa
retf
xchg
stos
(bad)
jnp
aas
test
jne
add
outs
ins
cmp
push
or
retf
inc
xchg
inc
inc
nop
mov
iret
je
mov
xchg
or
adc
neg
push
pop
loope
dec
shl
inc
mov
jnp
(bad)
(bad)
outs
lock
inc
ins
inc
sbb
ret
xor
lahf
das
repnz
test
pop
mov
dec
and
mov
add
int
push
dec
movs
add
mov
(bad)
in
stos
das
pop
jb
ins
dec
xchg
push
mov
xchg
pop
imul
inc
scas
(bad)
leave
pop
pushf
call
cli
adc
sbb
jmp
dec
jno
xchg
fisttp
test
stos
stos
bnd
loope
fdivr
retf
xchg
mov
jmp
je
loope
inc
cmp
xor
imul
pop
pop
fmul
and
fild
xchg
sbb
(bad)
mov
cmc
popa
test
jae
mov
mov
pop
loope
xchg
rep
arpl
or
dec
and
pop
xor
adc
and
sub
add
mov
sbb
shr
push
jmp
mov
std
iret
enter
mov
sbb
xor
adc
inc
icebp
mov
mov
mov
jbe
loop
out
mov
retf
aaa
pop
fiadd
in
idiv
inc
mov
sbb
jecxz
mov
pop
mov
inc
rcl
mov
mov
loop
int3
mov
sbb
push
das
xlat
lahf
in
sti
repnz
mov
push
pop
mov
into
pop
cmp
hlt
and
sub
pushf
push
aaa
loopne
iret
jecxz
pop
stc
push
stc
bound
ret
mov
data16
cmps
scas
inc
sbb
jbe
pusha
imul
sbb
jp
inc
fwait
ret
mov
jecxz
fs
js
sbb
jb
xchg
aaa
jnp
cmp
push
jnp
je
imul
inc
jmp
mov
xchg
add
das
push
fcmovnb
inc
aaa
out
or
in
es
lea
popf
jp
pop
cli
les
lods
xor
jb
lea
imul
cmc
bound
jbe
out
xor
push
lods
mov
repnz
std
ss
cdq
inc
out
xlat
stos
nop
out
mov
xchg
jnp
cli
shl
adc
inc
cmps
xchg
movs
mov
mov
rcl
icebp
inc
xchg
sbb
and
cmp
inc
push
adc
and
push
popa
in
xor
jge
in
fist
fwait
mov
mov
ror
clc
push
jne
pop
inc
xchg
mov
and
jp
fsubr
mov
xor
cli
push
push
inc
cmp
xor
mov
pop
adc
mov
and
push
push
add
cdq
sbb
sbb
adc
(bad)
call
dec
les
jno
scas
push
lods
xchg
sub
pop
les
gs
fcmovnbe
mov
adc
loopne
xchg
retf
inc
xchg
sbb
ins
jb
bound
loope
fidivr
das
cld
loope
hlt
and
aaa
data16
push
ret
mov
push
add
movs
push
rcl
aam
mov
sbb
call
jae
jle
ja
icebp
inc
jb
aam
mov
xchg
xchg
scas
ret
dec
pop
dec
xor
or
pop
push
or
fcomip
jg
out
sub
retf
cs
add
inc
sub
add
fisub
rcl
dec
call
fbstp
frstor
je
lea
leave
dec
shr
cmps
mov
or
(bad)
push
jb
cmps
and
test
hlt
dec
loope
mov
bnd
add
jno
pop
jmp
or
call
cmp
fild
outs
jne
push
xor
(bad)
in
mov
lds
xchg
cld
cdq
cmp
pop
and
mov
test
arpl
(bad)
and
cmps
lahf
popa
inc
and
push
or
sub
outs
loop
ja
cli
or
or
pop
cmp
imul
jmp
lds
sub
in
nop
push
sub
xchg
retf
popf
cmp
push
es
jg
lahf
mov
ja
sub
cwde
ffree
add
push
mov
cmps
mov
cmp
fldcw
mov
inc
inc
add
fbld
mov
arpl
sbb
mov
cmp
push
cdq
jne
cmc
add
shl
aam
jmp
(bad)
jns
mov
add
jmp
stc
push
pop
pop
repnz
in
fdivr
add
sar
fcomp
jg
xor
call
lds
stos
adc
pop
in
imul
push
pusha
dec
inc
jo
in
inc
dec
stos
mov
fbld
(bad)
ds
test
out
xchg
loopne
jno
fst
jo
out
xchg
add
sub
adc
and
mov
jo
repnz
movs
inc
cmp
lahf
pop
pushf
push
sub
ins
add
aam
mov
mov
mov
jmp
and
jp
xchg
or
lods
in
adc
jg
jecxz
fld
xchg
retf
or
std
pop
cmp
popa
dec
test
std
mov
adc
ds
dec
out
fcom
nop
or
das
(bad)
adc
jae
jg
das
cmp
cmp
ss
mov
adc
add
mov
and
sbb
ja
(bad)
dec
test
stc
sub
mov
xor
xlat
jle
add
or
mov
call
(bad)
cmp
pop
into
mov
pop
mov
ret
(bad)
or
popf
in
imul
sbb
push
cmp
daa
retf
je
movs
inc
xor
jbe
aaa
mov
hlt
loope
mov
test
pop
mov
sub
cli
repz
adc
and
inc
(bad)
fmulp
arpl
xchg
xchg
cmps
aad
js
dec
mov
jbe
nop
bound
in
call
add
dec
sbb
add
jne
xor
push
ja
cmp
dec
(bad)
adc
sbb
cmp
cmp
add
fisub
pop
popa
cwde
xchg
mov
xor
test
cmc
out
pop
adc
jns
xor
dec
mov
sub
xor
pop
add
lds
push
imul
xchg
movs
mov
repz
sub
push
loope
sub
pop
mov
adc
mov
cmp
test
push
and
add
mov
pop
lods
or
loop
into
es
int3
fs
push
ss
jmp
rcl
xchg
(bad)
jl
push
sbb
pop
sti
mov
loope
jl
stc
fisub
in
mov
mov
pop
in
rcr
ins
(bad)
stos
nop
shr
clc
rol
dec
and
mov
fimul
pop
pop
gs
rol
pop
bound
and
push
inc
xchg
cwde
das
jmp
dec
in
out
into
cmp
out
xchg
scas
cmp
inc
xchg
mov
mov
inc
addr16
dec
out
mov
xchg
(bad)
jmp
pop
mov
pop
cmp
pop
xor
mov
cmp
loope
loopne
mov
xor
xchg
ins
inc
fmul
push
add
das
daa
cmp
inc
dec
pop
pop
outs
fldcw
xor
outs
jl
adc
inc
push
call
dec
out
adc
jmp
or
aaa
test
lods
inc
call
push
in
sub
shl
push
add
stos
inc
push
push
in
mov
mov
pop
pop
test
mov
call
mov
add
fiadd
cs
xor
mov
loop
bound
(bad)
ss
or
cli
cs
pop
in
mov
pop
bound
mov
mov
in
test
cmp
shl
outs
mov
mov
call
ret
jnp
je
rol
cmps
mov
fdivr
js
out
sbb
xor
xchg
imul
stos
adc
sysenter
adc
lea
jmp
sbb
das
sti
and
pop
or
dec
add
(bad)
retf
xchg
xor
sbb
test
adc
xchg
imul
fstp
pop
inc
sub
std
sbb
jbe
xor
stos
or
scas
sbb
pop
mov
dec
xchg
lds
and
fwait
mov
push
test
push
inc
push
das
push
mov
imul
ins
in
add
pop
inc
repnz
clc
and
repnz
es
imul
pusha
pop
gs
mov
cmp
pushf
sub
and
es
popf
sahf
scas
mov
(bad)
cmp
adc
out
mov
xchg
mov
ror
cmp
dec
push
stos
cmp
adc
fisub
not
mov
push
pop
mov
jmp
mov
cmps
sbb
sbb
or
sar
out
imul
outs
outs
leave
ss
in
sub
mov
inc
fnsave
cld
push
pop
aaa
movs
push
mov
adc
out
and
add
sub
stc
mov
push
add
hlt
lahf
adc
pop
push
mov
sbb
xor
fld
fdiv
call
xchg
jmp
xor
call
aas
out
bound
mov
jne
jae
loopne
jmp
cmp
sbb
pop
push
and
out
das
mov
and
enter
cli
fist
lods
adc
imul
jb
cmp
jns
sub
in
gs
jp
ret
pop
jo
pushf
push
xor
sub
aaa
out
dec
out
retf
lea
and
push
(bad)
cmp
stos
sbb
aam
out
sub
add
out
jle
xlat
pop
fstp
hlt
xchg
mov
push
xchg
dec
popa
adc
push
push
add
iret
mov
sub
xchg
or
loope
repz
retf
dec
(bad)
fsub
aad
call
inc
mov
pop
test
(bad)
mov
in
test
shr
es
sbb
jecxz
test
call
shl
push
sub
jmp
imul
mov
cmp
iret
fcomp
stc
xor
mov
mov
fwait
mov
or
retf
sbb
cs
jecxz
dec
push
test
int
pop
adc
imul
pusha
push
inc
xlat
pusha
mov
sbb
mov
xor
xor
shl
popa
shr
in
(bad)
fistp
lock
stc
mov
test
push
push
pop
and
xor
ror
jecxz
in
and
mov
jo
sti
mov
loop
pop
cwde
jmp
out
sbb
push
inc
je
cmp
(bad)
jo
push
pop
jp
popf
sbb
fcomip
idiv
adc
push
leave
jg
cs
xchg
(bad)
cmp
mov
xor
cli
outs
cwde
adc
out
outs
call
fist
mov
popf
sti
jecxz
sbb
les
ror
jp
or
outs
scas
call
sub
popf
xchg
ins
jmp
out
push
repz
pop
jbe
mov
test
je
mov
test
and
into
into
push
(bad)
shr
ins
pop
sub
adc
in
popf
pop
mov
packuswb
xchg
adc
xchg
lock
jmp
sub
mov
mov
shl
and
jne
jmp
sbb
mov
jle
dec
(bad)
push
mov
loope
leave
push
leave
push
test
ret
lods
sub
pop
mov
mov
xchg
test
mov
aad
cmp
ja
rol
cld
iret
stos
dec
ret
sub
inc
xchg
push
es
popf
dec
dec
dec
clc
clc
xchg
out
loope
adc
addr16
stos
jmp
loop
xchg
mov
pop
jae
adc
mov
loope
js
sub
add
outs
pop
clc
scas
pop
xchg
pop
lea
push
push
add
sbb
adc
jbe
add
es
icebp
jg
out
push
push
lods
cmc
add
imul
scas
shl
out
inc
movq
push
pop
mov
and
pop
xor
adc
mov
mov
iret
(bad)
add
(bad)
mov
imul
or
and
xchg
inc
cmp
sbb
add
aam
iret
pushf
imul
mov
nop
outs
xor
aad
mov
shl
aaa
sub
add
mov
test
or
(bad)
scas
mov
cwde
test
xor
movs
jb
push
sbb
xchg
fiadd
lods
jbe
xchg
mov
nop
int3
sti
or
repz
cs
aas
cmp
fisubr
into
dec
inc
mov
(bad)
fist
add
inc
ds
in
or
nop
push
xor
retf
test
je
stos
ficom
hlt
sbb
xchg
or
jmp
jg
push
ret
push
jne
dec
inc
test
int
jg
mov
call
shl
add
pop
sbb
sti
jns
jb
popa
mov
add
pop
pop
inc
xor
jne
add
nop
cmp
dec
xchg
jno
stos
cmp
ss
push
mov
adc
or
mov
ds
mov
lock
dec
cmp
sar
push
dec
jecxz
or
inc
(bad)
inc
test
repz
sahf
pop
je
adc
xor
mov
not
mov
inc
sbb
sbb
or
sbb
push
mov
test
inc
mov
xchg
add
out
cmp
or
das
mov
jnp
push
cmp
les
inc
fmul
dec
mov
jl
pop
push
test
push
(bad)
fld
movs
jmp
int3
fistp
call
adc
add
fcomp
pop
movs
add
ficomp
xor
rol
aaa
and
jbe
cmps
mov
fwait
dec
jecxz
sub
iret
outs
stos
ja
lods
outs
adc
cmp
dec
out
out
cmc
scas
jge
adc
les
mov
sub
pop
call
out
gs
in
xchg
xchg
cmc
sar
add
push
add
scas
sub
xlat
and
mov
sub
xor
mov
cmc
push
mov
pushf
fistp
ret
repnz
jmp
outs
call
cs
cmps
sub
and
fidivr
ficom
inc
or
out
repnz
lock
arpl
pop
cmps
test
add
mov
sbb
mov
es
mov
jge
push
jle
push
xlat
jmp
ror
lods
hlt
stos
sbb
xchg
inc
out
mov
sub
mov
and
retf
ret
ror
mov
and
or
in
scas
in
inc
fwait
out
pop
fs
aam
ins
jecxz
jns
cwde
iret
and
bound
xor
inc
fdiv
cld
dec
test
call
dec
add
sub
out
(bad)
call
test
in
push
pop
stos
xchg
jg
fdivr
inc
mov
ins
lock
rcl
mov
fdivr
dec
popa
test
mov
das
inc
popa
dec
out
lahf
push
xchg
mov
mov
pop
jge
out
shl
stc
jns
call
fcom
std
jnp
inc
jge
push
outs
cmps
jecxz
xchg
popa
pushf
push
std
in
js
int
mul
add
cmp
sub
push
imul
and
xor
jae
fstp
mov
shl
popa
and
mov
shl
cmc
sub
out
xor
aam
sub
stos
imul
pop
sahf
sub
pop
or
and
lods
jecxz
mov
arpl
test
sub
popa
jae
ins
test
sbb
rol
call
mov
or
jle
xor
into
mov
into
dec
(bad)
out
(bad)
das
les
cmp
or
jge
popa
aad
leave
sub
sti
retf
sbb
jge
in
mov
pop
jg
out
(bad)
adc
push
adc
(bad)
repnz
jle
jge
rol
es
into
fisubr
(bad)
cmp
idiv
add
ja
jmp
mov
aam
clc
enter
stc
adc
xchg
mov
fsub
ds
arpl
or
or
sub
sbb
call
jns
jg
jl
outs
ret
cmps
imul
fcomp
cld
fdiv
sbb
data16
test
jo
dec
sbb
push
out
xchg
arpl
inc
xor
inc
scas
retf
xor
sahf
ret
es
mov
dec
mov
rcr
movs
cmp
pop
fcmovb
pop
jl
xor
mov
mov
lahf
call
push
or
xor
dec
and
popf
gs
adc
cmp
mov
xchg
test
hlt
mov
push
push
mov
mov
lahf
add
outs
jmp
test
mov
fnstenv
pop
or
pusha
inc
push
jl
inc
fld
xchg
xor
fcomp
inc
sbb
sbb
push
cdq
repnz
and
pop
push
out
and
sbb
xchg
cli
jnp
fldenv
push
push
fs
pop
pop
pusha
ins
sbb
shl
mov
jl
into
fistp
jge
js
repnz
jns
adc
ins
movs
xor
ja
inc
repz
rol
xor
imul
mov
and
push
scas
cs
sub
(bad)
push
pusha
push
jbe
jnp
fidiv
inc
cmp
cld
xchg
dec
int
loopne
rol
xchg
retf
jp
inc
fdivr
es
cmps
aas
sub
mov
bound
mov
loopne
enter
rcr
mov
jae
shl
push
xchg
sbb
dec
xchg
out
and
xchg
cmp
mov
mov
dec
test
std
inc
aam
inc
mov
test
xchg
xor
sbb
mov
je
add
and
mov
in
inc
adc
shl
add
outs
cmp
scas
jmp
popf
or
dec
cmp
push
popf
aaa
dec
enter
mov
fiadd
popa
leave
xor
push
paddusb
cmps
mov
push
cdq
cli
inc
jle
mov
push
lds
sbb
test
mov
imul
mov
mov
pop
or
and
push
add
(bad)
push
out
mov
rcr
icebp
movs
bound
cmp
iret
out
test
cmp
fs
pop
jmp
mov
ret
gs
imul
cs
sbb
mov
cs
mov
push
in
out
add
or
mov
mov
mov
loopne
pop
xchg
mov
or
xchg
mov
aam
ret
repnz
xor
outs
mov
add
jb
push
imul
imul
sub
nop
(bad)
dec
sub
gs
mov
out
lds
not
ret
cld
sub
(bad)
fwait
movs
fild
(bad)
and
push
mov
dec
fiadd
cmp
mov
or
outs
and
dec
sbb
and
mov
pop
sbb
jecxz
xor
lea
adc
dec
push
cmp
cmp
repnz
icebp
xor
xchg
test
pop
and
push
push
sub
aaa
and
out
dec
test
and
jo
pop
std
int3
repnz
arpl
enter
inc
or
push
pop
enter
ja
movs
cli
int3
mov
call
xchg
sbb
cmp
adc
loop
dec
pop
mov
movs
lock
add
jge
adc
loope
popf
iret
cmps
jl
test
(bad)
std
pop
daa
jle
jge
xor
into
mov
retf
imul
mov
push
dec
cmp
daa
imul
ss
adc
pusha
xor
cmp
cmp
aas
sub
pop
shl
mov
mov
mov
call
push
pop
cmps
daa
retf
enter
cwde
in
(bad)
loop
xchg
out
inc
mov
add
ja
dec
js
jecxz
push
and
neg
pop
mov
jnp
in
push
es
dec
xchg
lock
fstp
leave
pop
push
xchg
out
mov
dec
and
leave
and
aas
jmp
nop
xlat
inc
mov
add
push
outs
loopne
imul
jmp
dec
into
dec
mov
and
rcr
and
imul
add
test
(bad)
xchg
iret
clc
or
dec
jo
jmp
mov
mov
mov
mov
mov
xor
(bad)
and
xchg
and
js
(bad)
cli
jb
popa
repz
cmp
and
cmp
add
cwde
in
mov
dec
or
mov
into
mov
cmp
mov
out
jno
fild
mov
mov
jge
out
mov
mov
loop
mov
(bad)
rcl
inc
push
rcr
xlat
hlt
sbb
das
imul
inc
imul
and
jl
push
rcr
or
les
mov
(bad)
outs
dec
into
in
and
mov
dec
mov
or
and
test
imul
hlt
fcom
mov
(bad)
(bad)
push
enter
rcr
test
in
repz
sbb
sub
mov
jbe
mov
out
pop
pop
cli
dec
push
ret
and
or
dec
scas
pop
sub
push
enter
mov
lock
mov
sub
lahf
or
in
clc
xchg
sbb
aad
fs
xchg
jg
rcr
ss
movs
adc
pop
jae
inc
das
or
bnd
hlt
rol
and
xchg
push
shl
or
mov
scas
in
adc
cmp
mov
or
cmp
inc
int3
cmp
push
inc
push
(bad)
xchg
and
lock
out
mov
popf
inc
imul
mov
xor
or
and
xchg
in
add
fbld
sar
cmp
push
sbb
pop
hlt
clc
dec
push
loope
inc
jg
fist
cmp
dec
mov
jo
add
jp
inc
inc
(bad)
(bad)
outs
sbb
sbb
mov
in
loop
dec
(bad)
jl
or
jl
mov
adc
call
daa
bound
push
xchg
and
out
sbb
mov
and
xchg
aad
push
push
or
loope
and
jecxz
(bad)
cdq
call
les
xchg
xchg
stc
push
es
shr
mov
xor
fmulp
out
nop
mov
add
stc
lea
xchg
jmp
nop
sbb
(bad)
mov
hlt
mov
mov
mov
mov
pop
cs
and
ret
fs
mov
outs
inc
out
or
ins
add
adc
sti
and
ret
mov
sbb
into
mov
xor
cmps
ret
cmps
popa
mov
test
inc
ret
sti
addr16
cdq
mov
jb
push
pop
dec
jmp
xchg
push
aas
dec
sub
inc
pop
cmp
xor
cmp
iret
fidiv
and
sahf
dec
sahf
mov
out
leave
sbb
inc
inc
popf
ss
inc
es
sbb
push
push
je
repz
movs
(bad)
jae
enter
mov
push
inc
shl
inc
imul
xor
adc
mov
ss
jmp
sub
xor
and
gs
outs
shr
dec
cmc
mov
push
add
pop
lods
push
mov
movs
arpl
mov
ins
inc
test
data16
and
mov
sbb
aam
sahf
icebp
mov
outs
dec
pop
stos
dec
inc
sbb
pop
push
nop
pop
pop
and
push
dec
sbb
jecxz
cdq
sub
and
iret
sbb
(bad)
jmp
add
jns
jno
pushf
inc
inc
jmp
jmp
dec
out
sahf
or
and
inc
or
jle
js
fnstcw
loop
das
push
pop
int
sbb
inc
jo
pusha
pop
or
pushf
hlt
add
out
enter
int
jbe
jl
loop
fsubr
movs
arpl
xor
loopne
stos
ret
push
test
(bad)
in
mov
mov
xor
pop
push
push
rcl
jecxz
fwait
cmp
int3
pushf
sbb
pop
(bad)
jg
sub
scas
mov
mov
sti
cmp
and
ficom
jg
jle
out
mov
adc
imul
ficom
sub
in
xchg
mov
dec
ja
mov
mov
leave
sub
loop
mov
mov
cdq
sti
cmp
add
pop
add
jmp
mov
mov
fwait
xchg
jns
jbe
outs
cmp
scas
int
je
push
sti
add
stos
js
mov
mov
sub
movs
mov
rcr
xchg
mov
std
adc
mov
or
dec
scas
leave
retf
jp
push
push
les
mov
cmp
dec
stos
pop
xor
cmps
pusha
pushf
(bad)
jmp
adc
mov
pop
jmp
cmp
les
arpl
and
je
fmul
(bad)
(bad)
cmc
test
mov
push
or
repnz
imul
jecxz
outs
mov
into
sbb
sbb
(bad)
push
fnstenv
mov
js
add
fdivr
mov
scas
das
adc
dec
add
out
inc
add
push
and
cmp
gs
mov
and
call
and
jo
push
pop
(bad)
int3
mov
fsub
push
jnp
cmc
arpl
jmp
or
pop
sti
das
enter
inc
dec
cmc
xor
imul
mov
scas
es
shl
cmp
icebp
pop
jnp
or
sti
fnstsw
outs
bound
test
adc
jl
cmps
mov
mov
popf
jnp
call
mov
push
mov
push
rol
jb
push
scas
inc
cmp
pop
adc
icebp
scas
fisubr
cmpps
(bad)
in
shl
(bad)
fnsave
mov
repz
aaa
adc
mov
retf
fabs
cmc
(bad)
jge
hlt
or
into
or
cmps
cmps
data16
sub
out
out
jno
call
in
aad
pop
sbb
enter
jnp
cmp
sbb
or
xchg
fwait
adc
or
mov
mov
xchg
push
push
xor
loop
cmp
or
fcomp
add
call
sbb
push
retf
or
push
std
movs
cmp
mov
push
jg
(bad)
push
jl
jle
xor
or
adc
dec
cmp
fwait
xor
cwde
ins
or
jne
dec
push
outs
bound
mov
icebp
mul
mov
adc
mov
pop
retf
mov
inc
cmp
es
inc
arpl
xor
push
clc
js
inc
push
repz
xor
inc
aaa
into
loope
jno
imul
fs
push
data16
ja
push
jl
inc
cmps
shl
test
jno
xor
in
addr16
cwde
(bad)
imul
and
call
loope
clc
xlat
shr
push
aas
push
js
mov
push
mov
rol
mov
jns
daa
add
mov
mov
stc
outs
mov
mov
seta
sub
and
cmc
in
pusha
hlt
mov
jp
arpl
outs
leave
pop
dec
arpl
loop
aas
xor
leave
inc
mov
nop
xlat
dec
pop
retf
aad
arpl
pop
test
popa
fcomp
xchg
and
sbb
mov
adc
or
jno
pop
inc
fucomi
pop
pop
(bad)
ficomp
int3
pop
cmp
xchg
cmps
mov
inc
adc
(bad)
dec
xchg
xchg
cmp
add
push
out
test
(bad)
lods
movs
les
jmp
and
jnp
sub
mov
mov
sbb
mov
dec
in
push
es
pop
adc
push
inc
je
sbb
adc
fcom
ds
and
ror
or
bound
inc
test
shl
push
push
int
fdiv
loop
aam
rol
or
jg
add
or
xchg
push
rol
ret
icebp
in
adc
(bad)
push
fs
mov
fwait
sbb
out
sahf
sub
sti
sbb
shl
pushf
ds
xor
jb
dec
fcomp
add
nop
ret
adc
adc
out
scas
mov
out
out
data16
adc
jne
add
mov
cmc
mov
and
dec
mov
sub
inc
xchg
(bad)
int3
fucomip
(bad)
push
shl
fsub
fisttp
pop
and
mov
popf
push
outs
xor
outs
aaa
int3
mov
inc
mov
push
sar
retf
(bad)
hlt
xchg
dec
mov
pop
sbb
cmp
loope
lds
jbe
imul
push
inc
test
fs
fsubrp
dec
ds
retf
mov
test
gs
(bad)
pop
mov
xchg
push
sub
in
jp
retf
ret
movs
retf
out
nop
push
jmp
jmp
in
movs
aaa
int
jae
sbb
jle
out
stc
icebp
xchg
jne
cmps
sbb
or
fdivr
mov
shl
mov
sbb
dec
cmp
retf
fistp
jg
or
add
cmc
jmp
mov
pushf
jmp
mov
int3
jnp
mov
mov
mov
rcr
and
mov
cmps
adc
js
mov
cmp
pop
sbb
sbb
xabort
sbb
cs
int
sub
rol
in
adc
cmp
outs
pop
sub
jl
and
mov
shl
out
gs
add
push
retf
inc
push
jno
in
daa
imul
int
test
out
mov
data16
mov
lahf
out
ret
sbb
xchg
test
jecxz
sbb
cmp
jge
fistp
popf
cli
loopne
das
and
scas
movs
jae
retf
xchg
lds
gs
es
mov
arpl
jg
push
cmp
xor
sbb
ror
int3
mov
and
and
dec
ins
mov
sub
ret
mov
jmp
jmp
(bad)
xchg
loope
jne
push
xor
lods
outs
mov
in
mov
leave
mov
neg
lds
cmp
sbb
ins
push
repz
cmps
aad
add
daa
cmps
fsub
pop
sub
stos
lods
div
aad
xchg
mov
test
dec
fcmove
lahf
xor
ror
retf
xor
sub
or
int3
or
call
imul
call
repnz
lock
popf
aas
(bad)
shl
and
mov
out
(bad)
in
adc
fs
(bad)
in
mov
mov
loop
sbb
or
xor
or
xor
sub
push
rcr
pop
xor
stos
sbb
cli
and
add
push
in
cmp
xor
ins
out
ja
jne
sahf
fldcw
xchg
retf
push
xchg
icebp
test
out
je
push
xchg
and
movs
mov
retf
mov
inc
push
pop
or
mov
sbb
arpl
adc
icebp
jle
mov
xor
ret
cmps
call
mov
popa
fimul
dec
ret
leave
aad
(bad)
(bad)
cli
pop
jns
ds
push
xchg
in
(bad)
outs
lea
push
pop
(bad)
ficomp
(bad)
das
test
sbb
dec
out
test
inc
mov
mul
inc
cmp
jo
pop
lahf
in
add
adc
cdq
xor
cmp
lea
std
das
fdivp
out
lock
adc
mov
adc
sbb
sar
(bad)
js
outs
call
std
fisub
pop
retf
add
shl
pushf
nop
push
call
stos
sub
mov
mov
bound
cld
fldenv
adc
pop
cmp
xchg
push
adc
inc
mov
jmp
adc
sbb
push
(bad)
stos
add
arpl
ins
sbb
push
int
xchg
jle
push
out
ror
mov
mov
mov
lods
cmp
jns
mov
push
int3
dec
mov
les
xor
out
cmp
in
jno
jno
out
pop
mov
inc
out
idiv
xor
xor
mov
and
std
cmps
je
pop
ins
imul
pop
jne
xlat
pop
enter
mov
mov
cmp
ss
dec
mov
jmp
test
mov
jbe
jns
ins
cld
and
sub
test
dec
sub
arpl
jno
mov
arpl
lds
in
shl
mov
inc
scas
rcr
fild
mov
mov
pusha
scas
imul
push
sub
push
jo
or
test
ins
sbb
je
(bad)
les
push
dec
pop
sbb
bound
ins
xchg
enter
or
mov
ins
(bad)
sti
sub
cwde
outs
shl
xchg
add
mov
loope
mov
stos
xchg
or
mov
jno
lods
cmp
mov
ss
adc
(bad)
sti
or
aad
xor
mov
adc
push
fimul
xchg
cs
sbb
cmc
inc
sub
cli
and
leave
mov
xchg
scas
shr
les
cwde
inc
mov
xchg
fimul
pop
sub
je
mov
add
jae
xchg
pop
dec
sub
push
push
and
popf
sub
mov
dec
push
jg
cli
push
or
add
call
inc
sbb
inc
shl
pop
sub
shl
pop
pop
icebp
cld
aad
mov
sub
adc
out
xchg
mov
call
adc
xor
xor
jmp
jb
test
and
outs
gs
ds
retf
inc
sti
jae
jmp
jb
jb
dec
mov
out
and
pop
stc
and
aad
rcr
sub
add
xchg
mov
push
call
add
int3
vprotq
mov
xchg
sub
call
jecxz
or
mov
dec
mov
mov
or
out
inc
rol
pop
imul
loopne
dec
or
push
mov
dec
inc
fcom
fcmovnu
cmps
mov
xor
aas
in
or
sbb
outs
loopne
imul
push
pop
cli
jbe
xchg
(bad)
sbb
push
nop
mov
cmc
push
xor
dec
push
mov
shl
lock
push
pop
fs
xor
test
sbb
cmp
jg
jecxz
push
pop
es
jle
ins
out
fisub
pop
clc
in
xor
loope
jl
and
shr
mov
pop
mov
add
mov
in
popa
mov
sar
cli
push
test
sbb
es
xchg
push
stos
mov
dec
xchg
adc
mov
xchg
inc
gs
mov
sbb
cmp
pop
sbb
pop
or
xchg
mov
mov
cli
outs
ror
add
mov
ret
(bad)
hlt
out
ror
je
inc
test
and
out
jmp
mov
cs
aad
test
not
test
or
dec
jne
add
loop
loope
cmps
shl
(bad)
mov
jns
adc
enter
mov
and
push
(bad)
and
mov
test
retf
jno
into
repnz
fdiv
in
push
addr16
xor
cdq
ficomp
inc
es
fisub
dec
call
inc
scas
xchg
ja
aaa
jl
arpl
enter
xor
push
out
in
scas
push
adc
int
jnp
adc
outs
or
fcmovne
inc
adc
xchg
popf
mov
ds
sub
or
mov
push
(bad)
shr
dec
in
lahf
xor
pop
cmp
loopne
and
fwait
xchg
push
into
sub
dec
mov
push
movs
add
and
pop
jl
loope
movs
adc
cmps
ret
push
xchg
retf
jecxz
retf
push
xchg
add
js
xor
ficom
lds
stos
mov
lds
sub
mov
inc
mov
out
aad
cdq
fiadd
add
xor
xchg
mov
jns
mov
sub
mov
loope
lods
fld
or
ja
xor
sbb
fcom
xor
xor
push
std
cld
stc
std
and
xlat
jg
fdiv
stc
xor
xchg
sub
loop
pop
nop
daa
xor
je
xchg
inc
enter
adc
ret
lds
nop
xor
adc
mov
sub
ins
pop
push
(bad)
repnz
push
push
jne
imul
lea
cmp
xor
dec
fadd
jno
loope
push
jecxz
test
cmps
pop
cmps
cmp
ja
dec
sbb
xchg
xchg
mov
xchg
idiv
call
sti
or
stos
dec
out
inc
xchg
sub
cmp
xchg
fsub
add
dec
(bad)
sbb
mov
fcom
jmp
lods
and
sbb
adc
pop
mov
scas
mov
mov
dec
retf
jno
push
dec
(bad)
icebp
in
add
cli
ss
sbb
xlat
xor
fld
add
and
fimul
outs
in
clc
hlt
lods
push
pop
adc
inc
rcr
out
inc
xchg
sub
cmps
pop
add
(bad)
jg
sbb
push
retf
mov
jl
jmp
push
pop
test
inc
pop
lods
add
push
loopne
mov
in
cmp
push
pop
rcr
fisttp
arpl
gs
rol
shl
(bad)
sub
push
jno
add
sub
pop
scas
sbb
imul
dec
and
xor
xchg
xchg
xchg
loope
adc
ficomp
add
in
fisubr
fild
icebp
push
xchg
nop
inc
popf
outs
rol
sub
xchg
inc
inc
lods
out
into
je
outs
mov
or
xchg
in
xor
cmp
aas
or
adc
retf
div
stos
pop
(bad)
call
lods
sub
mov
fidiv
dec
iret
mov
xchg
inc
push
aam
imul
mov
cmp
inc
add
test
or
gs
sbb
adc
mov
in
jb
je
push
iret
sbb
shl
jmp
mov
adc
xor
fdiv
add
inc
stos
es
out
push
or
mov
ja
mov
bound
ror
clc
sti
pop
icebp
ficomp
sub
out
loope
pop
cmp
and
adc
sub
add
aas
fucomi
and
loop
es
cmp
int3
sbb
push
sahf
mov
sbb
and
and
add
imul
fs
rol
mov
mov
adc
ja
cmp
jmp
popa
rol
ret
mov
push
adc
cdq
int
cmps
rol
data16
xor
fadd
das
push
xor
cmc
icebp
pop
add
or
pop
inc
inc
xor
cmps
pop
in
addr16
popf
out
pop
lock
jmp
sub
jg
in
dec
sbb
pushf
adc
add
dec
arpl
sub
outs
mov
ins
inc
fst
push
add
or
pop
enter
push
(bad)
jecxz
inc
inc
push
imul
pusha
cmp
jmp
scas
mov
aam
and
mov
xchg
pop
mov
scas
rcr
add
inc
sbb
shl
pop
div
mov
jge
fcmovu
or
jmp
cdq
push
mov
aas
scas
cmp
jae
sbb
dec
sbb
mov
add
(bad)
leave
sbb
sub
mov
stos
jns
fdivr
scas
inc
add
or
cmps
sar
cmp
retf
shl
jmp
push
mov
jge
test
pusha
mov
jb
into
xor
add
ret
adc
scas
ja
cmp
jp
rcr
lahf
fild
xor
pop
inc
mov
fisttp
jo
lahf
sbb
sbb
sub
or
imul
xchg
int
(bad)
pop
fdiv
mov
cmc
mov
mov
push
lahf
jmp
and
jg
adc
add
xor
xor
lock
mov
(bad)
scas
add
ficomp
push
scas
pop
lock
push
xor
lea
(bad)
iret
sub
push
pop
jmp
das
inc
push
mov
add
mov
fistp
xlat
inc
jmp
int
cmp
dec
sar
popf
xlat
pop
inc
push
sub
movs
adc
mov
xchg
inc
add
gs
and
adc
pop
ficomp
mov
or
bound
add
nop
xchg
jnp
or
fucom
test
pop
jecxz
ss
or
pop
mov
or
lods
imul
mov
mov
sub
pop
movs
stc
loop
out
jnp
mov
xchg
shl
mov
mov
cmp
xchg
adc
imul
dec
mov
xor
sub
xchg
mov
push
fldenv
repnz
aaa
popf
push
stos
mov
mov
ds
std
out
aam
sub
xor
ffree
mov
cmps
mov
test
ja
jnp
ss
fcmovne
pop
out
fs
out
cmps
outs
add
mov
or
imul
icebp
clc
retf
mov
add
push
push
mov
jg
rcl
jmp
scas
out
out
inc
cmps
cmps
in
jge
sbb
xchg
lods
out
xchg
and
pushw
int
add
daa
xchg
mov
or
imul
jg
pop
add
mov
rcr
jmp
lods
clc
jbe
fwait
dec
sub
leave
pop
inc
loope
push
and
js
mov
dec
dec
sbb
loope
pushw
in
adc
js
and
outs
sahf
aam
test
icebp
dec
les
rcl
dec
test
hlt
jg
(bad)
cmp
lds
outs
push
into
mov
sub
dec
push
retf
ins
call
sub
dec
cmp
outs
cli
(bad)
xchg
adc
or
jmp
std
shl
rol
stos
jge
add
cld
not
js
push
push
push
jns
xor
cmp
call
arpl
mov
cmps
sti
or
ss
and
mov
inc
mov
rol
imul
mov
es
mov
mov
rol
ds
ret
test
or
(bad)
stc
outs
loope
mov
ins
gs
pop
sar
xor
pop
mov
(bad)
mov
stos
cmp
mov
jg
fadd
mov
pop
call
mov
cmp
sub
movs
mov
and
push
pop
imul
pop
mov
cld
xor
mov
out
pop
not
jle
push
iret
ins
and
add
xchg
dec
ret
stos
sub
inc
add
jo
dec
cmc
push
lahf
sub
jp
mov
and
mov
mov
cmps
popf
or
and
fnsave
shl
push
js
cmp
mov
jns
ja
jecxz
pop
sub
mov
lods
ds
mov
pusha
clc
push
rol
and
enter
sub
and
ins
jecxz
ror
sahf
jmp
pop
loopne
dec
icebp
out
mov
imul
pop
rsqrtps
loope
push
or
fimul
dec
jle
mov
movs
jecxz
pop
inc
mov
jb
or
mov
xlat
and
push
mov
jno
sub
out
push
add
jg
pop
sbb
popf
or
leave
repnz
sbb
mov
inc
les
jns
outs
adc
push
lahf
pop
and
mov
sahf
jl
jnp
pop
push
cmp
retf
stos
rcl
fwait
lods
inc
push
arpl
pop
cli
ret
in
push
lods
sub
cmp
inc
pop
xor
cmps
call
jle
aaa
xchg
mov
mov
jnp
push
push
(bad)
xlat
or
cmp
dec
jb
push
pop
jl
loopne
sahf
pusha
js
not
fcom
gs
into
mov
out
lds
sbb
cli
sbb
xchg
push
fstp
push
dec
adc
ins
pop
loope
add
cmp
mov
or
xor
clc
pop
pop
or
push
cmp
or
pop
test
xor
mov
(bad)
in
or
lock
popf
xor
and
xchg
test
clc
iret
mov
xor
mov
dec
ret
lods
jbe
(bad)
fwait
mov
imul
sti
adc
sahf
xchg
add
pop
mov
inc
inc
in
cmp
xchg
mov
mov
or
jno
and
mov
out
pop
adc
inc
pop
jecxz
add
pop
or
ja
aas
jmp
pop
cmps
or
or
popa
bound
jae
dec
int3
fisubr
xor
aam
mov
and
adc
xchg
adc
lock
jns
int3
call
xor
repz
or
xchg
lds
xchg
xchg
enter
aad
es
pop
jg
ss
sahf
aas
inc
xchg
pop
test
and
mov
cmp
in
bound
mov
ja
mov
inc
jecxz
xor
add
out
push
retf
mov
push
xor
inc
fsubr
cmp
fdecstp
adc
sub
add
sbb
outs
gs
cmc
or
mov
(bad)
cmp
retf
mov
addr16
scas
(bad)
pop
xchg
inc
dec
or
movs
push
mov
inc
repnz
addr16
stc
xchg
xor
cmps
gs
das
aad
std
or
xor
popa
jb
jmp
imul
jmp
xchg
dec
jbe
pusha
xchg
xlat
aaa
cld
ds
adc
dec
ret
add
mov
cs
nop
push
jbe
pushf
jae
pop
jb
push
retf
or
sbb
jp
sub
stos
or
shr
sbb
data16
fld
loopne
or
sahf
pop
or
adc
cmps
into
cmp
jmp
mov
lds
js
fwait
pop
pop
mov
fdiv
adc
dec
or
mov
push
jg
add
xchg
fwait
int3
cdq
xor
jo
call
test
test
adc
dec
inc
rcl
pop
aaa
jmp
stc
rol
jl
cmp
inc
lahf
clc
pop
mov
or
pop
sub
fst
jmp
dec
xchg
ds
sahf
les
xlat
mov
addr16
and
dec
jl
pop
dec
push
jae
mov
add
pop
xor
adc
enter
xchg
push
dec
and
and
lods
retf
iret
push
sbb
jmp
lahf
inc
xchg
stos
ror
sub
nop
sub
xchg
fidivr
xchg
fdiv
icebp
cmp
or
movs
imul
or
add
lahf
ret
test
jl
sub
push
and
cmp
mov
pop
ret
xchg
mov
mov
and
xchg
fstp
fadd
push
dec
push
sub
push
mov
pop
jne
gs
inc
retf
(bad)
pop
sbb
ret
dec
pop
(bad)
lahf
retf
call
in
push
popf
inc
cmc
inc
mov
ins
inc
shl
adc
push
pop
or
jmp
rcr
popa
fbstp
xchg
aad
fadd
xlat
jecxz
or
nop
ret
mov
pop
shl
mov
sub
pop
cmp
mov
adc
ins
sbb
ficom
jl
jl
icebp
mov
bndstx
cmp
(bad)
jmp
cmps
adc
fmul
cmps
sub
push
das
popf
adc
jmp
jne
xchg
mov
sub
call
icebp
cli
das
mov
dec
test
neg
adc
lods
mul
bnd
sbb
icebp
bound
hlt
stc
xor
xchg
fidivr
mov
es
and
jnp
push
push
in
cmp
mov
pop
lahf
and
sub
push
sub
fld
imul
inc
dec
push
push
xchg
xor
push
jle
push
mov
sbb
outs
ins
scas
jnp
nop
and
repz
jb
clc
jnp
(bad)
ins
cmp
push
push
outs
addr16
fistp
stos
jnp
mov
push
leave
(bad)
mov
fbld
xchg
and
jnp
movs
shl
mov
cmp
hlt
xchg
daa
ror
jg
fst
pop
or
add
stos
mov
pop
(bad)
mov
int3
push
pop
jnp
inc
xchg
mov
loope
dec
mov
outs
sub
and
cwde
xchg
scas
sahf
(bad)
and
cli
dec
fdecstp
mov
dec
and
push
xchg
out
sub
mov
cmp
push
cmp
pop
mov
call
stc
sub
hlt
push
push
(bad)
cld
pop
sub
push
and
jb
add
out
cmps
and
push
out
xchg
ja
push
test
aaa
repz
jbe
mov
push
jne
cmp
loopne
fs
aad
cmp
jnp
mov
mov
fcom
movs
hlt
xchg
jb
cmp
int
inc
test
pop
scas
ins
mov
inc
xchg
sub
fwait
add
nop
rol
loopne
lods
cdq
xchg
mov
dec
xchg
movs
ss
and
sbb
sbb
fbstp
ret
hlt
scas
(bad)
(bad)
mov
(bad)
ror
outs
sub
stos
xchg
clc
or
sbb
pushf
ror
inc
push
fldenv
arpl
lock
mov
mov
leave
movs
ror
clc
cwde
hlt
imul
out
pop
(bad)
std
mov
imul
call
add
test
rcl
(bad)
push
add
push
shl
cdq
push
ret
scas
lods
and
enter
jle
push
fidiv
imul
arpl
sar
adc
fild
data16
mov
mov
hlt
(bad)
xlat
icebp
sbb
or
pusha
and
ins
xchg
dec
stos
mov
shr
stc
jnp
hlt
inc
pop
leave
arpl
jae
scas
cmp
xchg
xlat
int3
leave
loope
scas
mov
fist
mov
data16
inc
dec
shl
stc
mov
push
clc
jecxz
sub
push
sbb
shl
mov
adc
lods
imul
and
dec
out
pop
cmps
mov
ja
imul
adc
in
mov
pop
pop
jno
jmp
arpl
push
push
ret
mov
push
(bad)
sti
xchg
cmc
ins
and
rol
lea
in
mov
mov
std
inc
popf
pop
mov
cwde
dec
lahf
fild
(bad)
xchg
pop
jnp
pop
inc
neg
in
fcomp
xchg
cmp
clc
int
aam
mov
fldenv
fist
xor
nop
or
shl
mov
mov
xchg
and
pop
mov
test
ss
stc
jg
shl
loopne
mov
and
add
test
push
mov
dec
or
mov
add
loope
retf
inc
adc
mov
mov
out
(bad)
mov
inc
call
mov
rol
and
mov
and
pop
dec
inc
and
and
jl
cdq
mov
ret
sub
push
push
xor
cwde
sub
dec
or
cmc
mov
stos
or
and
jmp
(bad)
jg
imul
xor
mov
(bad)
punpckhdq
cs
sub
adc
loopne
stos
in
xor
xor
rol
outs
fnsave
es
int
cmp
popf
retf
sub
cmp
js
fs
dec
cld
sbb
jge
dec
sti
jecxz
in
ror
ins
xchg
or
mov
mov
jmp
cmp
sti
adc
xchg
or
or
or
repz
adc
mov
bound
ret
ds
mov
xchg
ins
pop
repz
cdq
pop
adc
push
cmp
pop
mov
sbb
(bad)
push
call
xor
frstor
mov
es
stos
jp
jne
mov
dec
mov
add
cld
xor
adc
mov
sbb
add
mov
mov
mov
jb
out
or
xor
pop
popf
(bad)
outs
int3
pop
fsub
pop
sub
(bad)
ficomp
push
dec
pop
ja
mov
pop
mov
fistp
shr
nop
push
mov
ds
jmp
addr16
cmp
loop
lock
pop
test
(bad)
mov
and
mov
sti
ins
xchg
(bad)
push
stc
and
add
fild
adc
mov
daa
mov
daa
push
je
icebp
(bad)
xor
inc
and
sub
aam
repz
jl
inc
pusha
or
imul
loopne
retf
adc
stos
stos
out
xor
mov
lods
push
xchg
xchg
dec
movs
push
jnp
sbb
std
loop
(bad)
xlat
lods
pop
cwde
pop
stc
hlt
cmp
sbb
adc
sbb
add
and
daa
bound
cmp
stos
ret
mov
popa
xor
fcmovbe
adc
(bad)
jae
mov
mov
mov
jge
inc
mov
mov
pop
push
cmp
add
xor
push
sbb
in
das
pusha
dec
pop
fadd
leave
mov
call
xor
adc
int3
retf
mov
and
jae
adc
cmc
xchg
dec
cmp
imul
cwde
lahf
js
dec
mov
cmc
and
xor
mov
adc
outs
loopne
stos
add
retf
gs
test
jg
nop
icebp
loopne
ja
or
int
xchg
and
mov
sbb
int
sub
lods
fadd
in
inc
stos
dec
repnz
pop
cmp
lea
push
xor
ret
icebp
pop
or
cwde
in
lds
sub
mov
jo
xchg
xchg
pusha
lea
mov
stos
fcomp
push
dec
arpl
xchg
bound
shl
xchg
aad
dec
in
push
cmp
or
ss
mov
cmp
xchg
mov
stos
mul
xor
lea
jbe
lods
dec
add
pop
cmp
jge
mov
add
xchg
push
loopne
add
inc
cmp
out
xor
or
and
in
cdq
lods
jo
lahf
jb
xlat
test
call
and
ftst
pop
fldenv
cmc
dec
dec
jb
cwde
mov
jmp
out
mov
addr16
jmp
xchg
xchg
sub
jge
xchg
mov
xor
mov
and
or
stos
xchg
in
rol
shr
inc
sbb
push
xlat
mov
sbb
aad
fwait
je
and
test
ss
mov
icebp
lea
xchg
and
repz
daa
outs
mul
dec
jbe
cdq
mov
cmc
push
in
je
jle
test
push
pop
call
and
adc
imul
xchg
ins
adc
inc
mov
cmp
sbb
and
les
mov
or
sar
inc
cmp
mov
fdiv
ja
out
sub
dec
aaa
push
and
test
xchg
and
popa
mov
sub
mov
outs
or
pop
mov
popa
arpl
xchg
mov
mov
xchg
jmp
test
sub
into
ret
push
ins
out
fbstp
in
popf
ds
test
xor
inc
sub
aaa
jle
fbld
pop
cwde
mov
int3
mov
dec
mov
and
popf
sbb
stos
daa
jnp
pop
dec
call
or
add
push
leave
in
inc
cmps
sar
sbb
jmp
in
clc
ds
fcmovnbe
mov
xchg
lock
mov
(bad)
fsubr
icebp
div
fld
cmp
push
lods
push
xor
cli
nop
jbe
(bad)
pop
dec
jecxz
mov
cli
add
push
mov
not
dec
nop
mov
adc
sub
lods
push
xor
inc
popf
cmps
(bad)
(bad)
out
add
mov
add
add
or
mov
adc
push
inc
pop
stos
xor
icebp
popa
mov
repz
enter
fwait
sbb
imul
pop
mov
add
daa
idiv
movs
imul
dec
and
xor
inc
jl
dec
adc
push
test
ret
(bad)
(bad)
pusha
lds
loope
nop
xor
inc
xor
outs
mov
jbe
mov
call
and
sahf
popa
stc
je
pop
add
lea
movs
mov
out
jae
iret
imul
jg
add
adc
and
jle
add
sbb
pop
sbb
fs
in
sti
fstp
daa
int
adc
test
mov
add
jecxz
je
dec
jp
jle
xchg
cmp
or
cmp
mov
pop
jl
out
outs
repz
stos
or
pop
ror
or
pusha
in
shr
mov
(bad)
aam
mov
arpl
frstor
or
mov
jno
fwait
stc
mov
aaa
jge
test
push
fidiv
rcl
cmp
fcmovnb
lea
add
mov
iret
jo
enter
jmp
stc
push
outs
call
xor
fst
int3
cli
mov
ror
dec
dec
(bad)
shr
fs
pop
push
(bad)
cmp
sub
add
mov
scas
pusha
and
sub
inc
pushf
dec
mov
or
movs
jg
pop
push
xchg
sbb
push
and
test
inc
cmovb
vcvtps2dq
mov
popf
dec
and
mov
fisubr
imul
jmp
sahf
sub
cmp
mov
push
dec
arpl
pop
movs
push
xor
retf
and
dec
dec
in
jg
(bad)
cwde
add
test
movs
xchg
(bad)
mov
dec
in
imul
mov
sub
mov
xchg
mov
movs
popa
ss
pop
jno
jno
push
push
push
pop
add
jb
mov
add
cli
out
push
inc
add
jae
jo
scas
test
inc
xchg
ins
push
mov
clc
add
mov
popa
fist
xlat
xchg
outs
test
bound
jnp
mov
sbb
addr16
push
inc
mov
cdq
xlat
aas
sub
dec
jle
(bad)
sub
cwde
xlat
mov
mov
sub
add
mov
popa
ss
stos
loopne
add
mov
fbstp
sahf
sar
std
(bad)
fdiv
jmp
mov
rcr
shr
adc
je
aam
fsub
int3
repz
inc
lds
push
sub
mov
fsubr
lahf
leave
inc
shr
pop
stc
inc
popf
leave
(bad)
cmc
xlat
jl
xchg
or
add
mov
mov
icebp
push
int3
int3
or
movs
sti
or
sbb
push
mov
hlt
leave
ins
cmc
or
jle
gs
cmps
(bad)
sbb
pop
lds
stos
adc
and
pop
dec
je
das
push
push
or
cmp
mov
div
or
xor
lock
mov
mov
jo
push
xor
cmp
cmp
das
add
ja
add
dec
and
(bad)
mov
loop
clc
jmp
dec
cdq
inc
call
mov
mov
iret
aaa
sbb
mov
test
xor
loop
dec
shr
(bad)
shl
mov
mov
xor
popf
into
cmp
cwde
cmp
sub
dec
xor
add
cmp
push
sbb
mov
jns
xor
mov
pop
cdq
xor
out
sub
into
xor
mov
cdq
fidivr
inc
push
gs
or
xchg
dec
and
(bad)
dec
pop
in
gs
std
repz
xchg
jnp
scas
jnp
aas
mov
std
enter
jmp
xor
(bad)
cmc
and
pop
or
or
js
pop
ja
inc
xor
ins
fst
mov
dec
loope
mov
inc
jecxz
gs
mov
sub
adc
out
fwait
sbb
pop
mov
add
xor
mov
imul
jg
cwde
mov
imul
lock
pinsrw
mov
into
xchg
jp
ja
ja
cs
cmp
pop
push
dec
into
adc
test
mov
(bad)
fwait
mov
mov
sub
icebp
jge
adc
pop
push
aas
ret
mov
aad
in
popf
xchg
mov
inc
test
scas
add
cmp
jae
sbb
loope
int
test
add
mov
fist
xor
push
stos
or
loope
cdq
outs
cli
out
in
xlat
sbb
jmp
(bad)
aad
popa
lods
call
stos
xlat
iret
sar
mov
mov
inc
iret
fcomp
push
popf
test
add
jle
leave
or
jae
lock
xor
pusha
push
push
add
add
nop
or
out
xor
ins
test
rcr
cmp
das
(bad)
add
cld
inc
inc
pop
int
mov
outs
push
xor
call
jmp
xchg
cwde
or
and
stos
jb
xchg
inc
call
sti
jl
aam
pop
pop
mov
jmp
pop
outs
sbb
add
or
xchg
adc
pop
inc
sahf
mov
mov
mov
jg
or
outs
jp
and
scas
jae
data16
mov
add
push
sahf
mov
(bad)
dec
dec
jbe
cmp
mov
xchg
rcr
xchg
hlt
pop
out
outs
xchg
mov
sub
jmp
jg
cmps
or
inc
xchg
xor
scas
lea
loopne
in
dec
aaa
push
mov
loope
and
pop
out
jg
jmp
mov
scas
and
mov
neg
fadd
cmp
iret
(bad)
in
mov
jbe
cmps
xchg
fsubr
jp
jb
push
js
mov
pop
dec
les
xor
imul
dec
sahf
dec
loope
test
mov
mov
movs
sbb
test
in
mov
sub
cli
jo
out
ss
cmp
pop
add
ss
and
test
ret
call
xchg
sub
xchg
sub
ss
lea
mov
loop
xlat
fiadd
mov
mov
(bad)
pop
ins
out
test
cmp
bound
(bad)
ds
addr16
hlt
inc
bnd
gs
fdiv
jne
pop
or
popf
sbb
xor
xor
int3
test
mov
cmp
inc
test
xchg
test
cmps
mov
call
add
(bad)
ja
jne
mov
jle
gs
arpl
mov
and
xor
movs
dec
sbb
and
or
out
ins
fs
adc
sbb
inc
retf
mov
jge
out
test
or
mov
jp
jns
push
xor
inc
cmp
cwde
nop
ds
arpl
aad
inc
out
js
adc
inc
xor
loope
call
dec
add
les
xor
mov
jl
mov
xor
arpl
mov
fadd
dec
mov
xor
xchg
mov
inc
adc
ret
call
sub
jg
nop
push
sbb
test
shl
push
xchg
pop
dec
das
mov
cmp
dec
cmc
inc
(bad)
xor
mov
inc
jge
mov
and
gs
and
xor
fstp
jl
test
dec
pcmpeqb
pop
mov
push
mov
call
retf
outs
dec
das
xchg
pushf
add
jmp
jle
cmp
sbb
push
call
mov
sbb
(bad)
enter
dec
jne
xchg
xlat
and
mov
into
cmc
cwde
ss
lea
push
div
das
cmp
repz
mov
(bad)
add
cmps
jle
(bad)
ins
fiadd
inc
push
or
cmp
jnp
(bad)
ror
aam
jnp
pop
inc
inc
gs
push
fcomip
dec
xchg
fcom
xor
sub
mov
push
repz
push
lahf
inc
push
out
pop
pop
nop
mov
fsubr
inc
or
cmp
xchg
stos
mov
test
add
pop
and
push
imul
cld
mov
or
aas
add
adc
push
shl
or
cli
cmc
cmps
inc
lods
jbe
scas
and
inc
(bad)
or
dec
int
into
jbe
in
mov
xlat
rdtsc
in
mov
and
aaa
call
xor
aas
clc
pusha
mov
xchg
les
push
dec
jo
ret
mov
add
clc
enter
aaa
or
fwait
repz
loop
imul
daa
push
test
sub
or
xchg
adc
in
push
ror
xchg
out
stc
out
xor
outs
mov
(bad)
push
mov
jnp
sub
repnz
sbb
sbb
sbb
mov
stos
add
mov
mov
ja
dec
push
add
mov
jg
mov
xchg
aaa
mov
jge
push
jne
cmp
sub
ret
mov
popf
cmp
jbe
out
fucomp
movs
scas
test
cmp
mov
mov
or
pushf
dec
or
out
jp
push
neg
add
mov
jmp
or
jns
sub
retf
cmp
(bad)
lock
retf
cmp
jno
pop
sahf
in
sub
jno
or
clc
inc
ss
gs
cmc
cmc
inc
test
repz
jae
and
mov
inc
push
nop
mov
mov
stos
adc
push
or
jl
scas
adc
mov
sbb
jbe
mov
cmp
xor
imul
shr
jecxz
adc
call
inc
cmc
nop
scas
fimul
fnstenv
mov
mov
les
aam
scas
leave
call
sub
push
aaa
mov
loop
jbe
(bad)
fs
sahf
or
xchg
repz
add
push
shl
adc
pop
sbb
pop
aam
cmps
sub
icebp
push
cmp
push
xor
data16
xchg
inc
sbb
and
call
sar
(bad)
mov
and
and
out
cmps
call
call
xchg
jno
sbb
sbb
jge
sub
pop
inc
cli
jno
lds
(bad)
dec
loop
repnz
sub
dec
fld
inc
or
dec
mov
jae
push
jo
(bad)
mov
and
retf
call
xchg
iret
cmc
sbb
imul
call
int3
jo
xchg
xchg
or
add
inc
std
jp
inc
(bad)
js
mov
xchg
pop
scas
shl
lods
stos
and
(bad)
ror
repnz
sbb
mov
mov
push
rcl
fldenv
bound
pop
push
sub
call
mov
or
xchg
sbb
push
lock
call
fucom
lods
adc
dec
mov
inc
and
mov
mov
les
ds
imul
ins
in
sahf
cdq
in
mov
or
jb
mov
out
(bad)
push
stos
jae
jnp
cmps
xchg
cmps
aam
xchg
sbb
mov
aas
push
test
scas
push
loopne
(bad)
cmps
scas
mov
xor
xchg
add
jmp
pop
fstp
push
ins
push
cmp
pop
push
mov
and
lods
int3
in
into
jae
mov
adc
xlat
sbb
sti
sbb
cld
aam
jge
xchg
add
fcom
sbb
sbb
xor
push
sbb
loope
mov
psraw
outs
mov
test
das
jnp
sub
loope
daa
cmp
sub
fbld
fiadd
int3
push
bnd
data16
jnp
sahf
sbb
out
or
loope
getsec
sahf
ret
mov
lods
into
inc
icebp
ins
shl
loopne
add
out
add
mov
push
fldcw
popf
ror
aad
xor
lock
pop
xchg
dec
in
xlat
retf
push
and
push
clc
aaa
neg
enter
rcl
mov
repnz
fwait
cmp
call
sbb
jnp
inc
jp
xchg
stos
jge
wrmsr
int
jb
sbb
cmp
popf
or
bound
data16
es
or
xlat
fs
fs
shl
jecxz
xor
mov
lea
xchg
add
les
nop
scas
jl
das
mov
addr16
push
inc
xor
inc
lea
xchg
mov
loopne
retf
in
jmp
je
jmp
in
pop
outs
push
mov
sbb
int3
mov
jg
mov
pop
in
pop
sub
xchg
popf
mov
into
out
inc
sub
pop
push
jl
mov
mov
adc
jl
mov
or
mov
fiadd
stos
jmp
or
fst
sbb
xchg
mov
in
idiv
inc
out
int3
sbb
repz
xor
std
and
loope
pusha
lea
into
sbb
shr
sbb
stos
cmp
test
loope
xor
xor
icebp
adc
pusha
sbb
ret
dec
or
sub
pop
pop
aam
cmp
xchg
jmp
mov
das
push
test
xor
ds
pop
and
ror
xchg
ss
push
das
push
xor
lods
sbb
mov
out
shr
outs
jmp
pop
jmp
cmps
int
inc
add
jae
std
push
jmp
sub
in
ror
push
jle
sub
xchg
push
push
(bad)
ret
add
sbb
cmp
xchg
(bad)
test
fbld
xchg
xchg
sbb
add
push
sub
mov
or
dec
mov
xchg
stc
dec
icebp
sbb
mov
xchg
popa
(bad)
scas
dec
test
cmp
test
rcr
mov
mov
ret
leave
les
lods
sbb
in
sub
cmp
test
add
dec
sbb
outs
add
and
cmp
(bad)
sbb
mov
addr16
outs
in
jne
lods
out
sub
xor
cmc
xchg
dec
jge
push
and
adc
in
push
dec
xchg
mov
mov
pop
(bad)
push
mov
outs
imul
(bad)
movs
sahf
ror
xchg
mov
lods
std
in
retf
cmp
js
pop
out
dec
fmulp
je
xchg
cwde
xchg
inc
jmp
pop
or
sub
jbe
test
sti
call
sbb
repz
(bad)
fnsave
call
aas
mov
cwde
stos
mov
jno
cmps
fwait
test
outs
imul
mov
mov
sahf
and
jmp
lods
sub
sub
(bad)
jg
pusha
mov
inc
push
mov
ret
mov
cmp
mov
rol
fwait
dec
jecxz
mov
(bad)
dec
xchg
pop
mov
ins
into
aad
push
cld
pop
lds
push
ins
sub
clc
jmp
loope
not
fstp
fld
mov
adc
add
push
mov
loopne
sub
cmp
cdq
in
fistp
xchg
mov
and
sar
sti
mov
inc
cmc
mov
push
or
mov
shr
leave
dec
sar
jo
inc
dec
sub
nop
inc
in
sbb
cdq
add
in
je
jo
call
sbb
frstor
cdq
xchg
jb
rol
sbb
in
fld
mov
push
push
fcmovu
push
adc
into
out
dec
in
leave
inc
jne
mov
xor
add
mov
push
sbb
inc
test
mov
das
sub
clc
add
push
or
xchg
dec
mov
test
xchg
dec
push
movhps
or
fld
mov
mov
push
retf
aas
sbb
out
mov
and
shr
ret
add
xor
pop
lods
ja
inc
lahf
leave
cli
imul
iret
push
pop
xor
jno
mov
adc
push
adc
js
retf
xor
pop
jmp
jle
pop
pop
int
in
mov
add
sbb
mov
push
xchg
cld
add
mov
mov
daa
pop
mov
jne
dec
fucomi
sbb
mov
pop
inc
xor
inc
adc
xchg
jle
cmp
stos
jbe
push
mov
sbb
jnp
lods
arpl
cmc
dec
or
add
sbb
or
or
mov
aaa
mov
test
add
pushf
jno
sub
nop
mov
lods
mov
xor
adc
sbb
adc
push
dec
cmp
je
(bad)
addr16
and
inc
pop
jne
add
leave
jnp
retf
jno
not
ficomp
xor
mov
(bad)
sar
add
mov
mov
rcl
in
jns
and
in
cmp
in
inc
and
jmp
add
jp
rcr
or
mov
xchg
gs
outs
cmp
test
mov
dec
int
mov
je
dec
data16
xchg
dec
push
jnp
std
(bad)
in
sbb
adc
add
and
cmp
or
sub
in
popa
push
jp
ffree
jb
bound
ja
jle
inc
div
mov
shl
ss
add
fcom
cmp
jl
retf
daa
arpl
hlt
sub
cmc
or
or
mov
loope
pop
add
call
dec
lods
mov
scas
sub
outs
imul
(bad)
mov
(bad)
je
dec
cmp
mov
scas
add
jns
mov
(bad)
adc
test
adc
inc
aam
push
xchg
(bad)
in
adc
ins
or
mov
fwait
das
loopne
push
inc
mov
(bad)
std
mov
ret
mov
jecxz
xsha256
cmps
pop
sub
sub
push
cld
lock
cmc
mov
sub
repnz
dec
pop
loopne
push
scas
imul
mov
pusha
jecxz
jmp
movs
adc
frstor
aas
inc
pop
das
sar
jmp
pusha
sahf
cdq
and
add
aaa
sbb
arpl
loop
cmp
jl
xchg
data16
xor
push
mov
pop
add
test
stc
jo
or
mov
jno
(bad)
jmp
dec
inc
mov
push
xor
imul
inc
add
push
ror
pop
lahf
sbb
inc
adc
sti
xchg
sub
fwait
out
xchg
xchg
fs
sub
adc
or
addr16
stc
cmps
arpl
or
je
icebp
xchg
mov
test
sub
or
xlat
cmps
aas
sahf
lds
dec
mov
adc
cwde
ret
cmp
xor
out
jae
test
jl
icebp
loopne
pop
ds
mov
cmp
cwde
scas
inc
scas
lds
mov
out
or
mov
add
or
adc
pop
neg
push
pop
add
out
mov
frstor
fwait
stc
mov
xor
rol
adc
movs
pop
in
push
(bad)
sbb
pop
jb
andnps
inc
test
leave
or
adc
sti
jge
aas
popa
jne
loopne
xor
mov
pop
pop
sahf
test
inc
mov
sti
int3
adc
fxch
inc
test
lods
cs
sub
or
or
arpl
movs
retf
jns
cdq
push
sbb
lods
pop
test
neg
pop
push
popf
mov
arpl
(bad)
or
mov
call
out
push
in
(bad)
inc
movs
cmp
cmp
mov
add
jno
ficom
xor
push
mov
adc
pop
jmp
jmp
sub
xor
stos
cdq
dec
nop
push
sbb
test
pop
int
in
iret
mov
push
dec
jnp
dec
out
inc
fdivr
scas
mov
iret
outs
in
ins
retf
xor
fiadd
jmp
adc
pop
jge
mov
mov
loope
fs
dec
movs
inc
jns
xor
imul
call
jno
mov
stc
sub
out
test
and
cmp
or
cmps
adc
aad
imul
xchg
mov
icebp
xchg
pop
leave
popa
and
js
jp
out
push
xor
or
mov
mov
ss
out
add
adc
sub
stc
lea
js
inc
popa
and
add
mov
mov
cs
push
cmp
lahf
sub
xor
xchg
jmp
or
ja
jnp
sar
sbb
ss
mov
inc
mov
and
mov
or
es
xchg
(bad)
and
je
inc
mov
enter
sub
dec
cmp
xchg
jp
xor
lock
sbb
hlt
adc
push
xor
loope
push
mov
icebp
btr
es
lock
pushf
add
add
in
icebp
mov
sub
cmps
and
inc
cmp
xchg
dec
xchg
pop
xchg
adc
leave
adc
push
adc
scas
fidivr
fwait
leave
lea
data16
in
jge
dec
cmc
hlt
test
sahf
add
pop
lods
cmp
or
mov
enter
dec
push
lds
mov
ins
inc
adc
pop
dec
icebp
loopne
ret
push
jne
jns
cli
pop
popa
stos
add
xchg
adc
fdiv
jl
cdq
(bad)
addr16
xchg
push
mov
mov
leave
xchg
sbb
cli
ins
imul
dec
jge
stos
pop
sbb
out
(bad)
repz
dec
(bad)
jmp
jo
inc
daa
fwait
push
stos
sbb
cdq
add
push
ins
stos
std
shl
inc
xchg
mov
sti
fsubr
sahf
in
push
leave
repnz
mov
cmps
cmp
pop
ins
and
lock
adc
clc
and
jno
rcl
pop
push
fwait
sar
cwde
idiv
sub
fs
aam
or
pop
push
sbb
popf
xor
xor
sbb
fdivr
pop
jge
mov
push
xchg
cmp
stc
repnz
jl
loopne
jle
adc
lahf
in
shr
and
dec
ss
in
cs
mov
jmp
dec
mov
shl
ret
sti
daa
aad
lea
xchg
pop
cdq
xchg
shr
sti
imul
cmp
jo
jmp
mov
pop
pop
and
dec
call
push
sar
daa
data16
pop
ror
jecxz
xadd
mov
cli
lock
out
sub
fimul
jae
adc
addr16
xor
xchg
cvtpi2ps
popf
inc
sti
pop
data16
leave
std
(bad)
push
imul
les
ret
add
dec
shr
in
cmp
add
adc
and
pop
daa
mov
sub
movs
add
outs
shr
xor
pop
movs
sbb
loop
cld
sti
aam
retf
adc
(bad)
fild
test
aam
sbb
mov
inc
push
inc
jmp
push
mov
test
outs
dec
test
pop
and
nop
ja
sbb
cmp
mov
adc
cmp
mov
cli
add
xor
loop
js
cld
mov
ins
shl
inc
jge
rol
inc
adc
sbb
cmp
pusha
cmp
push
ss
addr16
jne
dec
xchg
sub
and
mov
push
out
clc
push
or
mov
dec
dec
sub
add
mov
dec
jle
or
push
or
mov
movs
cmps
mov
jno
pushf
push
push
inc
rcr
and
push
sti
fidiv
mov
and
jns
imul
add
loop
fxtract
mov
test
outs
push
leave
or
inc
mov
add
push
clc
dec
mov
cmc
fst
xor
jl
cmp
out
ror
shr
nop
cmp
xor
or
push
sbb
(bad)
daa
push
inc
xor
xchg
jne
mov
jbe
rol
leave
loopne
push
or
dec
arpl
adc
(bad)
es
ucomiss
cmps
jl
jle
imul
push
dec
and
push
cmp
sti
inc
lahf
cmp
test
data16
jne
in
aas
and
lods
xchg
or
mov
mov
inc
cmp
retf
sub
or
inc
outs
mov
cdq
push
or
and
call
adc
mov
fs
pop
xchg
pop
xchg
jle
mov
loope
ret
fs
dec
lods
pop
jae
ins
mov
mov
dec
xchg
repz
arpl
dec
or
adc
mov
mov
mov
xchg
std
test
mov
std
or
lods
mov
lods
sbb
adc
push
aaa
inc
or
and
jmp
and
fwait
mov
(bad)
cmp
xor
sub
jb
bound
stos
pop
bswap
push
xchg
push
mov
clc
mov
inc
dec
in
lds
pop
out
xchg
pop
inc
(bad)
ja
sbb
mov
icebp
pop
xor
xchg
arpl
les
loope
add
or
mov
ficom
cmp
ja
jle
movs
sti
(bad)
jns
inc
pop
jne
aaa
div
or
inc
cmp
pop
and
popa
mov
jmp
out
or
jno
int3
or
sub
frstor
sbb
repnz
or
call
or
or
fs
cmp
pop
jnp
push
fmul
scas
xchg
hlt
call
outs
out
cdq
addr16
stos
inc
push
shr
lods
lods
inc
jmp
add
js
test
pop
mov
mov
ins
mov
jmp
cmc
mov
sub
and
lods
int3
pop
mov
pop
mov
pop
sbb
xchg
jecxz
ins
cmp
and
aaa
mov
cli
imul
mov
and
jecxz
or
cmps
jecxz
add
fadd
out
ficomp
cld
add
leave
cmp
jl
sahf
mov
aas
stos
push
jnp
or
cmp
mov
in
fcmove
clc
pop
xor
movs
and
pop
leave
popf
cld
pushf
sub
push
xor
cdq
dec
das
(bad)
mov
cmp
mov
inc
and
xlat
pop
add
mov
pop
push
(bad)
fucomi
cmp
pop
bound
xchg
outs
inc
jns
xchg
dec
adc
push
mov
push
push
ret
and
lds
ins
(bad)
loopne
retf
(bad)
sub
retf
fsubr
mov
or
cmp
jne
ins
inc
mov
adc
cmp
sbb
xchg
shr
popa
ret
in
shr
clc
mov
lock
clc
sahf
ins
pop
ror
add
mov
lock
adc
lods
mov
ss
push
mov
cmps
test
sbb
hlt
adc
xchg
cli
fcom
mov
push
out
jg
(bad)
sub
leave
dec
sub
test
ss
xor
dec
inc
or
into
fdiv
shl
xor
imul
loope
inc
xor
cmp
test
pop
jg
sbb
mov
mov
fwait
jbe
sbb
mov
lea
inc
outs
in
ficomp
popf
or
push
(bad)
ja
xchg
jnp
xor
push
cld
mov
(bad)
std
fs
dec
mov
popf
(bad)
jmp
push
and
enter
mov
cmp
adc
shr
test
pop
pop
xor
mov
xchg
ficom
push
popa
retf
mov
pop
sbb
aad
ins
jmp
and
popa
clc
push
cmp
ins
push
pop
shr
jmp
push
pusha
jbe
cmp
add
mov
mov
pop
sub
xor
(bad)
jne
dec
cmc
retf
and
out
out
scas
add
push
sub
test
enter
mov
cld
mov
out
imul
loop
(bad)
into
loopne
add
(bad)
cmovns
nop
mov
jecxz
xchg
pop
mov
sbb
mov
aam
iret
movs
out
dec
add
sbb
out
outs
mov
inc
sub
les
pop
sbb
jecxz
push
xchg
lods
aas
data16
jb
push
mov
mov
jno
sbb
test
sub
cmp
test
mov
mov
push
in
int
push
and
xchg
(bad)
into
xchg
xchg
push
data16
inc
jle
(bad)
das
xchg
inc
push
in
jecxz
gs
cmc
add
jno
or
dec
(bad)
xchg
dec
mov
push
neg
leave
lea
add
pop
aaa
cmp
fs
or
add
movs
test
jnp
push
pushf
adc
dec
sbb
xchg
popf
mov
cmc
mov
(bad)
fdivr
loop
mov
add
in
enter
scas
fsubr
(bad)
int3
fdiv
mov
jae
xchg
arpl
mov
fldcw
out
mov
fcom
and
mov
dec
and
xor
and
mov
ss
and
scas
jl
xchg
or
aam
dec
adc
mov
cwde
fiadd
outs
(bad)
dec
xchg
scas
mov
and
mov
dec
dec
ds
xchg
xchg
adc
scas
aam
sbb
pop
push
enter
pop
xchg
pop
push
addr16
(bad)
dec
jmp
jle
scas
lds
sub
aas
push
jmp
mov
lds
mov
dec
nop
retf
cld
jmp
xchg
ds
cmps
jge
add
out
fisub
in
mov
neg
mov
jl
pop
js
pop
mov
or
clc
or
xor
add
mov
movs
xchg
and
rol
jne
xor
mov
pop
data16
pop
mov
pop
pop
lahf
ret
popf
ins
test
leave
push
mov
fs
jmp
pop
push
or
xlat
loopne
xchg
adc
pusha
shr
push
xor
or
sub
xor
fxch
or
fcmovnu
lds
into
jp
fsin
adc
mov
mov
or
imul
cmp
sub
pushf
push
dec
jb
outs
mov
rcr
loop
jnp
imul
cmp
push
into
xor
stc
(bad)
fwait
and
push
pop
(bad)
out
sahf
aaa
mov
mov
push
inc
lahf
aad
clc
adc
pop
ss
dec
push
sbb
ret
dec
or
inc
mov
pop
lods
pusha
mov
js
push
jne
test
cmp
add
adc
mov
xchg
adc
icebp
mov
inc
clc
lods
push
jl
pop
mov
pop
mov
shl
mov
shr
mov
inc
xor
lahf
mov
fnstsw
jg
sar
xchg
mov
sub
retf
xchg
sub
mov
xor
cli
jmp
sbb
push
jmp
pop
mov
or
pop
sbb
mov
sub
pop
mov
inc
mov
aaa
int3
ror
mov
test
setb
push
adc
sbb
aad
and
and
inc
cs
repz
stos
xor
(bad)
mov
rol
inc
inc
push
ret
and
into
neg
pop
pop
out
cld
fistp
jne
sub
xchg
xchg
xchg
pop
sbb
int
cmc
and
pop
repz
xor
repnz
dec
(bad)
daa
into
fbld
icebp
adc
(bad)
xchg
dec
inc
in
adc
add
bound
popa
imul
shr
push
icebp
mov
dec
adc
add
pop
in
(bad)
cmp
aam
fs
cmp
and
stos
jno
xchg
mov
stos
inc
jne
mov
out
std
dec
jg
cmp
mul
or
cpuid
std
jo
cmps
and
das
aam
jle
(bad)
stos
mov
mov
dec
cmp
scas
lds
xor
mov
adc
js
cmp
xor
jne
test
test
test
mov
icebp
xchg
inc
addr16
xchg
add
cmp
sbb
dec
inc
or
pop
in
(bad)
jecxz
jmp
retf
cmp
fcomp
mov
arpl
jno
popf
test
ja
(bad)
fsubr
push
stos
sub
rol
(bad)
mov
arpl
fisubr
out
or
ss
mov
(bad)
int
push
cmp
hlt
and
jg
clc
(bad)
or
out
sub
aaa
daa
aad
imul
mov
dec
(bad)
push
sbb
jmp
fs
test
xchg
jns
pop
jmp
adc
arpl
mov
clc
movlps
cmp
out
ret
popf
inc
add
fs
sbb
dec
sbb
mov
data16
cmp
xor
cdq
push
jbe
and
mov
sub
dec
push
shr
int
and
pop
pop
jg
pop
sub
mov
pop
fisttp
or
xor
push
mov
xor
retf
sti
dec
in
mov
lea
push
or
jmp
jb
shl
sub
cwde
int3
xor
adc
dec
push
xchg
adc
cmps
lods
stos
sbb
dec
inc
int
std
fsubr
inc
adc
cmc
push
and
popf
push
inc
jns
dec
daa
and
fmul
lock
mov
or
xlat
sar
jle
dec
dec
leave
lds
out
inc
es
gs
xchg
add
gs
pop
mov
cmp
dec
(bad)
leave
and
retf
data16
add
mov
shl
xchg
icebp
sbb
mov
mov
icebp
mov
out
jnp
cmp
pusha
xchg
pop
adc
pop
ins
jmp
or
ja
int
or
ret
xor
add
push
leave
inc
dec
sbb
pop
repz
adc
dec
jne
es
repz
push
cmps
inc
lods
pushf
imul
out
mov
es
rol
lods
int
aad
and
xchg
sub
cwde
inc
xor
push
inc
mov
mov
dec
push
lahf
aaa
bound
loope
test
push
cld
xor
lahf
out
jge
jmp
fldenv
mov
cwde
repz
mov
cmp
xchg
aas
shl
sub
jo
rep
jae
mov
jns
imul
sub
mov
jo
add
and
mov
mov
push
mov
jne
jbe
sub
sbb
jp
je
loopne
mov
sub
inc
loop
adc
push
adc
mov
mov
iret
gs
stos
call
cmp
scas
cld
cmp
xchg
imul
aas
jp
mov
(bad)
loope
push
call
shl
daa
or
cmp
es
and
in
fsubr
aad
mov
movs
xlat
mov
pop
stos
and
mov
movs
adc
adc
ret
adc
rcl
es
inc
daa
push
fucom
mov
mov
imul
push
dec
aad
mov
pop
idiv
rcr
retf
mov
(bad)
fsubr
jl
dec
push
mov
sub
push
aam
pop
test
inc
pop
mov
rol
sub
push
mov
ret
aam
adc
pop
dec
retf
das
in
sub
sbb
jae
mov
push
sbb
adc
inc
in
call
retf
mov
enter
cld
mov
pop
push
gs
loop
int3
pop
add
movs
cmp
pop
jns
dec
inc
mov
imul
pusha
pop
ds
sti
fs
or
cmp
dec
imul
xchg
push
les
sbb
cdq
mov
xchg
adc
aas
lahf
inc
mov
call
out
xchg
dec
pop
inc
stc
sub
bound
mov
ror
xchg
mov
push
into
inc
ja
das
pop
es
adc
pusha
inc
sbb
add
add
vshufps
into
data16
mov
mov
enter
push
stos
pop
test
pop
cld
pusha
fcom
shl
mov
addr16
outs
xor
pop
push
sbb
inc
mov
stc
hlt
dec
mov
sbb
xor
ja
mov
mov
mov
ins
retf
xor
das
pushf
mov
jae
ret
mov
and
ret
fistp
sbb
sbb
dec
hlt
iret
dec
xchg
xchg
xchg
lahf
cmp
cmp
jns
and
icebp
mov
mov
jmp
and
xchg
sti
mov
dec
mov
dec
or
je
out
and
(bad)
sbb
aad
cli
dec
xchg
addr16
xchg
inc
inc
jmp
and
nop
test
mov
or
imul
dec
cld
(bad)
and
movs
out
(bad)
sub
mov
nop
adc
test
mov
and
xlat
or
(bad)
pop
cmp
adc
mov
rol
int
ret
lock
je
xor
sub
push
jbe
jmp
in
in
mov
push
test
cwde
sbb
xchg
cdq
or
shl
mov
adc
mov
retf
mov
mov
dec
pop
cmp
jns
mov
push
or
mov
imul
aas
jecxz
ins
je
rcr
stos
or
inc
add
jb
dec
pop
cmp
push
imul
push
jnp
adc
call
xor
mov
nop
pop
add
xor
inc
pusha
xor
(bad)
(bad)
cmp
and
jo
adc
mov
ins
(bad)
sub
ja
int
lods
sbb
inc
or
movs
pop
add
test
test
mov
pop
inc
dec
add
stc
xchg
push
lods
pop
hlt
outs
adc
sbb
add
sbb
xchg
scas
and
ins
jmp
mov
popa
ss
inc
icebp
cmps
or
cld
mov
cmp
push
xor
ja
fstp
jb
mov
jl
pop
xchg
dec
outs
xchg
lods
add
mov
xlat
cmp
xchg
or
test
repnz
pop
cdq
les
push
lods
imul
inc
loope
mov
add
mov
sahf
pop
sar
pop
mov
(bad)
inc
jb
aam
pop
stc
or
jmp
jle
jno
stos
in
out
test
push
mov
xchg
xchg
pop
pop
or
jecxz
cs
push
sub
xchg
retfw
cli
xchg
jne
mov
mov
sbb
test
sar
lahf
or
mov
sbb
inc
and
xor
adc
inc
cmp
cld
xor
mov
mov
(bad)
push
jge
ss
addr16
jnp
in
push
call
adc
mov
dec
(bad)
jl
dec
ret
add
cli
sbb
cmp
sbb
cmp
mov
mov
ret
pushf
mov
sbb
imul
jb
push
les
arpl
cdq
les
dec
call
cwde
cmp
sar
scas
xchg
jb
icebp
jne
xor
push
adc
shl
imul
cmp
xchg
sub
test
add
adc
jp
popf
xor
cmp
leave
dec
ins
in
iret
xor
push
mov
pop
pop
add
dec
in
cwde
shl
jle
pop
ins
jmp
or
xchg
stos
sbb
mov
and
xchg
and
outs
sub
jae
sub
icebp
cwde
ins
leave
inc
mov
js
sbb
(bad)
cmp
push
pop
jmp
push
push
cmp
sub
lds
cli
adc
mov
repz
ret
xchg
stc
xchg
mov
inc
daa
cdq
je
retf
outs
xor
push
xchg
sub
sbb
sub
mov
ror
and
xchg
ins
inc
movs
stos
pushf
add
enter
test
dec
in
lods
pop
fisttp
cmp
sub
mov
mov
les
jbe
jl
adc
out
sbb
push
stos
test
data16
test
ret
popf
in
adc
out
push
pop
loope
xor
in
lds
loopne
sbb
and
stc
adc
fwait
sahf
aad
sub
lods
out
xor
add
icebp
pop
add
add
fstp
and
es
xor
or
test
inc
rcr
stos
push
jle
sbb
mov
in
pop
in
fcomp
dec
inc
cdq
imul
jg
mov
popa
sub
pop
mov
and
in
cwde
inc
cmp
jmp
sti
test
cli
mov
call
pushf
test
cli
iret
(bad)
xor
adc
retf
push
cmps
jmp
sub
cmps
sub
mov
sbb
into
jns
and
pop
test
movs
mov
cmp
sub
jge
pop
fstp
jbe
lods
cdq
mov
ret
out
and
mov
outs
inc
cs
cmps
dec
add
push
movs
sbb
sub
out
adc
adc
mov
cmp
sbb
mov
imul
out
movlps
popf
and
push
retf
dec
leave
(bad)
dec
ror
inc
mov
xchg
int3
xlat
movs
jo
stos
inc
mov
xor
es
adc
pop
aam
je
ficom
or
dec
aaa
into
loope
(bad)
and
inc
xchg
cmp
adc
mov
inc
adc
call
lahf
mov
stos
pop
int
cmp
rol
xchg
inc
fisub
ficom
ret
mov
pop
shl
sub
aam
cmp
std
xchg
add
cli
test
mov
xchg
neg
pop
fcmovbe
jno
mov
jecxz
retf
pushf
cwde
add
add
es
jbe
mov
inc
hlt
out
aam
cmp
shl
rcl
push
stos
test
loopne
adc
pop
rcl
sbb
cld
retf
ret
push
test
jecxz
xor
sub
imul
cmc
push
icebp
movs
out
xchg
adc
bound
push
bound
sbb
or
push
out
jmp
call
pop
cmp
inc
inc
pop
or
fistp
inc
je
mov
or
xlat
adc
lods
adc
jg
pop
or
pop
cmc
sub
imul
adc
mov
aad
inc
cmc
cmp
imul
lods
daa
daa
lods
inc
repz
and
enter
xchg
xchg
add
scas
ret
out
adc
je
cmc
loopne
dec
jp
jmp
xchg
aad
mov
xchg
push
jb
push
jb
fsub
in
aad
sti
xor
inc
aas
mov
mov
lock
sub
jmp
leave
push
add
lods
jb
dec
add
ins
jp
mov
jp
jmp
fsubr
push
pop
add
mov
movs
mov
lock
ins
sub
mov
imul
adc
pushf
fiadd
fcomp
adc
jne
xor
lods
and
mov
dec
sti
into
add
cld
outs
sbb
sub
ds
xor
adc
test
retf
mov
pop
movs
leave
sub
adc
sar
xchg
les
dec
xor
les
and
cmp
mov
les
push
mov
push
or
das
adc
in
xchg
xchg
add
push
adc
mov
(bad)
mov
inc
fistp
fldcw
jae
xor
pop
sub
dec
shr
adc
pop
jmp
sub
lds
adc
ret
in
xlat
or
push
xchg
mov
unpcklps
in
ret
sti
scas
jge
pop
or
div
lahf
imul
push
push
call
loopne
xchg
outs
movs
mov
xchg
(bad)
test
sbb
fiadd
jle
lock
mov
inc
push
cld
sub
jl
pop
fisubr
retf
repz
hlt
add
pop
repz
or
cmp
in
int3
mov
mov
xchg
inc
mov
xchg
jns
gs
bound
push
inc
out
mov
imul
jmp
mov
mov
outs
lea
outs
bound
mov
adc
inc
ins
mov
packuswb
test
add
loope
adc
mov
mov
xchg
dec
cmps
(bad)
stc
pop
test
imul
pop
jp
stos
mov
push
not
cmp
adc
pop
rcl
rep
out
sbb
aad
mov
dec
add
cld
in
in
mov
ret
div
add
test
pop
ret
mov
add
mov
xchg
sub
test
call
and
xchg
jo
pusha
push
rcr
nop
js
loop
or
jnp
cmp
dec
pushf
mov
adc
sub
movs
movs
sti
ds
and
push
pop
ret
xlat
stc
push
(bad)
enter
movs
pop
xor
sar
shr
xor
and
ss
push
adc
add
mov
cmp
adc
int3
pop
cmp
ds
jl
xor
and
fld
stc
sub
mov
out
jmp
outs
lea
lods
arpl
stc
inc
mov
getsec
mov
jns
xor
mov
add
aad
sbb
rcr
clc
(bad)
sti
ins
cwde
bound
lods
psrld
mov
nop
out
movs
imul
pusha
outs
fcmovne
inc
xlat
mov
loope
dec
jae
add
das
aas
adc
movs
push
xor
xor
and
cmp
out
cli
dec
push
iret
sbb
stos
test
fisubr
test
and
fidiv
mov
call
ins
sbb
push
xchg
jb
push
sbb
jmp
out
int3
cmp
pop
pop
into
(bad)
or
inc
and
mov
dec
stos
movs
enter
or
fiadd
in
inc
push
jne
sbb
test
jmp
cmp
cmp
aaa
test
call
mov
dec
push
jecxz
dec
in
popf
pop
jb
leave
rcr
and
jge
jge
in
outs
sbb
mov
lods
sahf
fs
movs
rol
push
fs
bound
xchg
or
inc
or
jno
ds
and
xchg
pop
je
popf
popf
adc
pop
inc
adc
mov
and
sbb
push
jge
cmps
nop
enter
bound
mov
repnz
daa
rcl
lods
mov
jl
repz
dec
jmp
das
xchg
sub
popf
cmp
or
mov
leave
stos
sub
scas
addr16
test
ror
pusha
or
retf
aam
retf
pop
pop
iret
or
leave
out
push
sub
and
out
retf
int
inc
mov
out
or
add
pop
jle
cwde
in
jmp
aaa
int
sub
out
xchg
sbb
test
fiadd
push
sub
or
cmp
cmp
test
shl
ins
adc
hlt
dec
sbb
mov
push
addr16
loope
icebp
inc
and
ds
sbb
xor
mov
je
xchg
sahf
sbb
sub
mov
or
inc
jge
cmps
adc
pop
or
retf
lock
adc
inc
inc
gs
ins
cs
and
mov
ret
inc
jbe
bnd
mov
aam
hlt
and
cli
out
aad
and
xor
mov
jmp
neg
cmps
push
(bad)
jbe
mov
(bad)
aam
mov
sbb
inc
stc
or
retf
test
ret
pusha
mov
test
fwait
inc
and
dec
pop
aaa
sub
adc
mov
lahf
mov
sbb
test
push
aam
pop
or
je
pop
pop
(bad)
mov
jge
pushf
fisubr
mov
lea
pop
fstp
cwde
call
sbb
or
cwde
loope
ds
cmp
cmp
int3
rcr
sbb
iret
and
mov
shr
nop
add
ror
sbb
ds
inc
test
cmps
mov
lods
fstp
and
jle
sbb
(bad)
cmps
xor
les
(bad)
xlat
ss
test
cmps
inc
sbb
mov
(bad)
cmps
or
fisttp
jbe
retf
mov
pop
fbld
mov
hlt
cmps
sbb
jle
enter
mov
fdivr
jo
pop
jmp
out
movs
cs
fmul
mov
js
dec
nop
or
push
ret
repnz
mov
mov
jbe
lahf
mov
addr16
test
(bad)
mov
lidtd
mov
xchg
clc
xchg
ret
jnp
sbb
jmp
outs
ret
xor
test
outs
retf
inc
mov
inc
repz
cmps
es
lods
dec
fistp
cdq
out
push
dec
das
rol
push
ja
sub
lods
add
bound
dec
xor
(bad)
fwait
dec
or
sub
dec
or
cs
ret
adc
xor
dec
iret
clc
int
mov
int3
stos
push
or
dec
call
xor
pusha
aad
or
lock
mov
mov
out
fs
js
stos
lea
pop
jne
mov
(bad)
push
aaa
jns
popf
cdq
int3
jle
enter
jecxz
push
(bad)
fisttp
mov
xchg
lea
mov
jns
in
sbb
out
inc
mov
cmp
aas
jnp
jns
arpl
retf
retf
pop
push
inc
jbe
sub
nop
lahf
dec
shl
adc
int3
daa
mov
(bad)
mov
and
pop
or
jne
ins
jle
lea
idiv
sti
aam
mov
jmp
test
jne
das
(bad)
cmp
and
fisub
and
pop
push
outs
sbb
jb
jae
lea
xchg
xor
fidiv
xor
test
and
aaa
push
dec
(bad)
movsx
inc
enter
mov
ficomp
jbe
jne
cdq
sahf
pushf
inc
xchg
aam
int3
call
mov
shl
sahf
mov
in
pop
dec
pop
ror
hlt
std
ss
jo
xchg
mov
sub
mov
add
es
mov
rol
js
(bad)
and
cli
jl
push
cmp
mov
adc
xor
push
outs
aaa
push
pop
push
and
mov
add
mov
fidivr
std
or
dec
jmp
sub
(bad)
cli
and
lea
clc
lock
retf
pop
je
inc
dec
pop
mov
inc
xor
std
enter
gs
sub
out
cmp
adc
mov
add
(bad)
fmul
ins
xchg
push
cmp
out
out
out
push
stos
push
sbb
push
add
and
ficom
cmp
fld
adc
cwde
retf
mov
dec
shl
in
mov
add
mov
in
lods
mov
sbb
sub
add
mov
inc
jle
or
sub
add
and
loopne
mov
mov
mov
and
xchg
cmps
cmp
jmp
shr
addr16
mov
cwde
push
pop
mov
lods
adc
pop
and
jne
loope
mov
leave
dec
and
inc
mov
leave
xor
and
cmp
xchg
push
aas
fwait
cmp
cmp
data16
mov
cdq
mov
iret
or
imul
in
push
repnz
mov
adc
in
mov
or
emms
scas
test
adc
sbb
mov
test
push
mov
enter
jae
imul
pop
(bad)
jl
cmps
pop
dec
jmp
cmp
cmps
int3
xor
fsub
(bad)
mov
cld
ja
mov
mov
or
and
int3
mov
fcom
fs
pop
cmp
pop
adc
cmp
or
inc
fsubr
rcl
(bad)
dec
add
mov
cmp
sahf
mov
xchg
sahf
int
fstp
sub
repnz
mov
add
cld
nop
and
pop
mov
out
into
test
fnstsw
add
cmp
sub
mov
jnp
fimul
(bad)
adc
jmp
mov
push
out
ret
imul
iret
mov
adc
call
sahf
push
lahf
pop
dec
loope
sbb
add
mov
arpl
cmps
sub
out
fidiv
mov
paddw
and
mov
addr16
mov
rcl
call
dec
jecxz
imul
(bad)
icebp
dec
xor
add
cli
lds
jl
arpl
cmovg
stc
lock
mov
(bad)
fldenv
fistp
fiadd
ja
push
arpl
in
loopne
rol
nop
sbb
iret
and
xor
fdivr
pop
mov
imul
or
and
repnz
call
push
xor
sub
xchg
imul
bound
je
lahf
fwait
pop
sbb
neg
je
pop
cwde
not
clc
pshufw
or
cli
add
arpl
aam
cmp
je
cmps
mov
jp
xor
jmp
adc
mov
mov
mov
jb
jbe
test
xchg
popf
xor
out
mov
dec
loopne
leave
mov
ja
inc
push
jl
ss
stos
dec
inc
jle
xchg
ds
in
push
or
jnp
mov
repnz
inc
(bad)
mov
fucomi
pusha
shr
mov
add
mov
mov
xchg
mov
lahf
pushf
fdiv
movs
imul
and
push
sahf
test
jl
repnz
nop
adc
dec
call
out
nop
addr16
jbe
sbb
cmp
mov
sbb
add
lea
xchg
out
jmp
sub
cmp
cmps
rcr
cmp
inc
push
jb
arpl
fld
icebp
mov
push
stos
loop
add
es
sub
xchg
pop
pop
mov
or
pop
jmp
in
neg
mov
and
pop
xchg
jns
pushf
pop
loope
xor
dec
mov
push
fs
mov
test
sti
sar
stos
adc
daa
jae
test
shl
xchg
movs
mov
mov
mov
dec
aad
xor
inc
shr
leave
mov
shl
push
retf
test
outs
cmps
ret
lea
sub
addr16
dec
ss
lahf
neg
ins
and
cld
aad
loope
push
addr16
xchg
push
pop
inc
shl
sti
arpl
imul
mov
out
pop
gs
imul
(bad)
movs
push
popa
inc
aam
stc
xchg
repnz
fsubrp
div
push
int
mov
pushf
and
or
inc
mov
inc
xor
mov
aaa
mov
xchg
sbb
es
stc
mov
mov
cld
imul
mov
cmps
jg
cmp
jns
cmp
xchg
mov
push
ficom
add
xor
sub
repnz
mov
inc
ins
inc
lds
les
ins
jno
repz
ror
repnz
jae
sbb
fs
in
lahf
pusha
call
je
pop
fwait
sub
cmp
mov
dec
stc
loopne
ret
les
loop
fwait
lods
mov
sahf
mov
xor
xor
fwait
push
pop
dec
mov
shr
and
push
push
jne
xor
mov
add
pop
mov
adc
(bad)
lds
bswap
jno
fisub
sbb
bound
jnp
js
jl
fneni(8087
popf
lahf
sub
mov
lds
repnz
mov
push
inc
in
sub
iret
sub
pop
jne
add
and
and
int3
add
mov
sbb
inc
scas
sti
and
inc
mov
sbb
sbb
and
in
loopne
mov
js
or
jge
stos
mov
add
adc
xor
or
mov
fiadd
rcr
aam
mov
pop
loopne
pop
fcomp
and
arpl
mov
jb
fisttp
ss
push
jmp
js
add
jae
mov
cmp
mov
cmp
mov
cli
push
xchg
add
jecxz
xor
cli
push
add
sbb
push
aas
pop
loop
cs
add
cmps
add
sahf
es
cmp
loop
add
ins
sbb
call
or
xchg
sub
cld
or
sub
sbb
in
inc
xchg
jae
popa
jecxz
and
enter
add
in
pop
mov
loope
mov
bound
outs
mov
xlat
ins
inc
adc
push
mov
push
pushf
inc
add
daa
ret
inc
mov
ins
jnp
rcl
adc
or
push
shl
hlt
es
xchg
fwait
shr
stos
pop
cmp
mov
xor
dec
or
dec
jle
iret
test
cwde
xchg
ss
jmp
sbb
enter
call
push
jb
lock
push
cld
fcom
rcr
lods
dec
ret
imul
leave
sbb
movs
loop
mov
or
adc
fdivr
ret
in
push
hlt
cli
iret
ja
sub
movs
xor
nop
shld
bswap
and
mov
xor
js
push
cmp
loopne
fs
mov
jecxz
mov
jae
stos
loope
xchg
idiv
dec
and
stos
mov
fbstp
mov
gs
xlat
dec
lahf
dec
shl
(bad)
add
add
lods
into
dec
fidiv
or
hlt
(bad)
sbb
lds
sub
mov
sub
xchg
inc
xchg
and
jno
ret
jg
(bad)
fcmovnu
jl
popa
retf
sub
push
add
jbe
mov
push
sub
mov
cld
test
dec
mov
ret
pandn
pop
mov
adc
sub
xchg
and
pop
stos
sahf
aaa
out
sti
dec
sub
jmp
leave
mov
inc
jo
fsubr
add
pop
aaa
add
jge
leave
xchg
xchg
hlt
xchg
xchg
or
sbb
test
(bad)
mov
xchg
mov
pop
in
sub
js
fmul
mul
xor
mov
mov
rcr
arpl
cmp
out
popaw
dec
in
fs
cmp
mov
mov
fadd
ror
mov
jl
mov
mov
sar
sub
aaa
mov
xchg
xor
inc
adc
inc
push
adc
loop
dec
push
js
jb
test
test
movs
out
out
dec
or
jmp
mov
pop
jmp
mov
add
push
mov
mov
inc
mov
jbe
cmps
call
xor
sbb
ja
shl
movs
add
add
adc
outs
jns
adc
cs
jge
sbb
sbb
add
pop
outs
jp
mov
sti
les
jle
pushf
out
sbb
sahf
inc
cwde
gs
(bad)
aam
out
pop
mov
(bad)
xchg
pusha
or
shl
pop
lods
xchg
cmp
sub
addr16
cmc
mov
shl
data16
jno
ret
cmp
push
pop
mov
daa
movs
in
mov
add
jg
add
xlat
fstp
loop
jb
cli
and
aam
stos
dec
fsub
mov
and
jo
cmp
fimul
mov
push
push
sti
jns
cdq
cmp
cmp
cmp
call
adc
jecxz
push
fld
pop
push
and
pushf
sub
adc
into
mov
ss
push
fld
inc
daa
mov
mov
pop
xchg
jnp
dec
push
idiv
push
(bad)
push
or
in
jmp
ficomp
ins
cmp
cmp
jnp
ja
jg
push
cmp
imul
movs
sbb
jmp
loop
fld
mov
ins
push
or
clc
cmp
cld
adc
sbb
sub
gs
inc
aas
cmp
icebp
lahf
in
cmp
mov
mov
dec
out
sub
or
xor
mov
out
inc
xchg
aad
and
cmp
cs
mov
sahf
pop
mov
pop
rol
and
cmp
fwait
out
sub
sub
ror
xchg
or
daa
pop
mov
cs
popa
pop
xchg
pop
adc
push
and
or
add
retf
xor
push
mov
dec
mov
mov
gs
cmp
out
sub
(bad)
je
adc
jno
and
adc
test
ins
(bad)
cs
cmp
fisttp
xor
fcmovnbe
pop
retf
sar
sub
push
mov
inc
push
xor
add
cmps
dec
and
faddp
push
fwait
mov
add
cmps
outs
fmul
fwait
adc
adc
xor
retf
fmulp
cwde
scas
jl
pop
retf
dec
sbb
hlt
lahf
gs
pop
movs
pop
ja
lods
mov
mov
mov
ror
mov
nop
jmp
ret
cmp
rol
nop
jo
xor
pop
lea
icebp
inc
mov
jns
xor
pop
xchg
or
mov
mov
sbb
(bad)
mov
sub
jo
cld
shl
out
xchg
leave
mov
sbb
mov
(bad)
cmc
xchg
add
int3
xlat
xchg
and
out
push
or
jne
inc
xor
mov
(bad)
jb
cmp
rcl
aad
sbb
mov
mov
out
jb
xchg
and
in
push
popa
pushf
outs
jb
push
fistp
and
scas
fsub
adc
adc
fistp
jne
lahf
adc
idiv
iret
rcl
push
jb
or
and
popa
jnp
std
repz
inc
jge
jl
or
mov
adc
imul
xchg
jnp
sbb
xor
xor
out
or
fld
adc
int
test
cmp
in
sub
jmp
mov
cld
fwait
daa
imul
mov
or
pop
movs
push
fidiv
xor
into
int
pop
mov
jg
or
mov
outs
rol
xor
int3
adc
sbb
xchg
adc
retf
inc
lea
ficomp
cmp
stos
imul
enter
out
push
imul
or
repz
mov
iret
xchg
ret
dec
mov
mov
mov
and
and
imul
mov
pop
test
pop
xor
push
movs
ins
scas
(bad)
xor
inc
and
dec
in
sub
cmp
ret
add
(bad)
and
add
jge
imul
aam
xchg
mov
push
pop
add
xor
ds
fild
shl
inc
adc
dec
ret
xor
aaa
mov
push
xor
mov
test
lds
mov
fcmove
adc
dec
jb
sbb
add
enter
ror
inc
sbb
cmps
inc
loopne
lods
dec
out
push
mov
sub
sub
push
and
stos
rol
xchg
test
fdivr
es
fsubr
mov
shr
mov
pop
and
mov
sub
pop
shl
inc
stos
aas
jge
cs
sahf
rcl
mov
les
jp
push
stc
out
dec
popf
pop
icebp
scas
jmp
in
sbb
mov
cmp
inc
mov
push
xor
pop
xchg
pusha
mov
pop
std
add
bound
sub
(bad)
(bad)
cmp
loope
pop
mov
pop
and
inc
inc
out
std
push
ss
bound
add
and
cmp
sub
and
inc
or
cmp
cmp
hlt
jmp
leave
adc
sahf
sbb
loop
cmps
jg
and
push
or
cmp
loopne
dec
and
sub
shl
outs
(bad)
(bad)
retf
ficom
sub
lods
sub
loopne
data16
lea
into
cmc
pop
dec
mov
(bad)
push
clc
cmps
jne
dec
xchg
fiadd
jo
sub
dec
dec
lea
stos
cmp
iret
mov
nop
outs
sub
ror
push
mov
dec
dec
inc
loop
mov
jno
in
ret
aaa
mov
xchg
jnp
xchg
lds
out
jae
push
push
enter
jmp
test
xchg
push
and
xor
loope
jbe
add
mov
jmp
call
jns
retf
mov
cli
mov
xchg
dec
cli
and
lods
out
popf
jp
loope
pop
aas
int3
lahf
pop
mov
aad
mov
das
into
sar
mov
das
cmps
or
call
jl
and
inc
repz
int3
xlat
icebp
cmp
sub
sub
mov
out
mov
ror
pop
lahf
mov
enter
dec
fcmove
cmp
sub
clc
(bad)
stos
movs
pop
stc
cs
cmp
iret
dec
push
add
sbb
in
sbb
gs
xor
frstor
(bad)
js
scas
clc
and
std
push
mov
lea
repnz
aam
lahf
inc
inc
push
add
enter
push
jns
rcl
ins
cld
mov
cli
dec
js
jp
sub
ror
dec
fbld
jg
cdq
add
dec
xor
adc
jno
cmps
ret
inc
out
cli
mov
mov
movs
(bad)
and
push
adc
dec
adc
pop
xchg
add
adc
or
mov
call
or
ficom
inc
adc
(bad)
ror
adc
sahf
(bad)
dec
out
mov
neg
mov
mov
xor
dec
adc
js
sub
or
adc
inc
cmps
pop
pushf
cdq
pop
jb
outs
popf
cli
cmp
or
das
pop
inc
iret
pop
in
jae
pop
sbb
fmul
sbb
and
fadd
movs
jecxz
mov
dec
mov
stc
fdiv
ds
jno
push
rcl
loopne
mov
stos
mov
inc
mov
jp
mov
push
pop
lds
retf
cld
pushf
test
and
mov
inc
movs
sub
adc
stos
leave
imul
lahf
(bad)
lods
jae
add
(bad)
fist
adc
ins
mov
inc
and
add
sub
and
aam
pop
leave
movs
fstp
std
in
jbe
shr
jmp
pop
call
cs
mov
jae
jbe
or
mov
and
push
dec
xchg
inc
into
push
pop
add
fld
(bad)
imul
and
adc
mov
and
in
sub
loopne
(bad)
in
lahf
daa
cmp
add
cs
mov
ins
jno
xchg
iret
scas
pop
inc
dec
lods
(bad)
in
mov
mov
movs
pop
outs
lods
jp
pop
inc
add
int3
sbb
cmp
mov
dec
rep
fdivr
xchg
fdivp
inc
fmul
les
out
not
xchg
pop
add
jmp
pushf
scas
scas
pop
pop
xchg
aas
sub
mov
lea
data16
or
jbe
jl
jae
push
inc
add
outs
pop
mov
(bad)
fstp
pop
inc
fucomp
cmp
push
adc
mov
pop
stos
icebp
sbb
sahf
movs
inc
loopne
scas
push
icebp
cdq
test
stos
imul
in
(bad)
jge
inc
int
setns
pop
adc
mov
push
es
cld
xchg
pop
sub
(bad)
repnz
retf
rcl
mov
push
(bad)
mov
ror
shl
aas
mov
add
inc
xor
mov
xchg
repz
cmps
popf
jne
or
popf
aam
popa
bound
cmp
test
cmp
xchg
loopne
dec
pop
adc
arpl
push
lods
mov
sbb
sbb
arpl
lea
xor
pop
xor
push
inc
adc
retf
jle
arpl
aas
mov
repz
mov
mov
out
lds
jno
cmp
push
jmp
or
cmps
jmp
jno
pop
jo
out
not
and
mov
in
add
adc
hlt
pop
mov
and
mov
push
add
shr
and
cmp
in
out
adc
scas
mov
aad
or
call
adc
and
sub
jge
sub
test
fcmove
xor
jmp
aaa
jb
ror
jl
scas
xor
inc
into
mov
out
movs
sub
mov
ret
mov
int
adc
xchg
cmc
xor
xchg
out
cmp
adc
icebp
call
mov
cwde
in
test
loop
scas
loope
hlt
push
sbb
or
arpl
inc
xchg
and
daa
sub
jno
retf
stc
movnti
pop
inc
ds
cmp
fdiv
in
scas
daa
lea
and
mov
adc
mov
xchg
push
test
jnp
int
(bad)
jmp
movq
and
sub
and
jp
rcl
xor
and
mov
sbb
sbb
(bad)
retf
mov
les
shl
enter
stos
cmc
xchg
dec
mov
add
pop
les
xchg
data16
test
push
pushf
loope
leave
std
ins
and
xchg
fstp
ss
xor
fstp
xchg
jae
imul
das
sub
in
jb
jmp
pushf
jo
jno
out
stos
adc
pop
add
sbb
adc
xchg
mov
sub
push
pop
pop
cmp
les
sub
xor
sbb
cmp
shrd
fmul
mov
stos
stos
xor
adc
jns
and
xchg
nop
sbb
sub
stos
sub
enter
cwde
push
adc
int
clc
rcr
adc
mov
cmp
inc
mov
or
fwait
int
xchg
add
rol
imul
add
push
rcr
push
movs
in
and
into
pop
or
lods
dec
pop
cld
pop
js
test
mov
dec
fadd
(bad)
sbb
xchg
inc
fnstsw
test
sahf
inc
ins
xor
jnp
popa
sti
cmps
fcom
add
bound
ror
aaa
and
popf
sbb
stc
repz
xchg
test
add
inc
sub
sub
(bad)
(bad)
icebp
sbb
pop
das
outs
mov
aaa
fstp
bound
stos
push
push
jo
add
fnstcw
mov
sbb
push
mov
mov
jecxz
ror
aad
dec
sub
out
repnz
shl
pop
fnsave
test
aas
hlt
fs
sbb
lods
jb
rcl
push
or
mov
mov
or
(bad)
jp
nop
or
and
sub
pushf
retf
(bad)
lods
shl
mov
jne
mov
sahf
xor
mov
pushf
mov
jl
push
aas
cs
mov
(bad)
xchg
xor
mov
movs
lods
pop
retf
pop
xor
(bad)
pop
xor
jmp
jno
inc
loopne
movs
repnz
loopne
jmp
xchg
pop
xor
repz
or
(bad)
fiadd
lea
and
ficomp
mov
rcl
fcomp
test
pop
rcl
sub
and
out
lods
sbb
cmp
push
sbb
stc
mov
push
mov
xchg
ficom
push
mov
mov
scas
into
mov
mov
adc
sbb
ins
mov
cdq
or
push
or
je
cld
popf
xchg
add
dec
jl
inc
cld
imul
(bad)
imul
mov
fstp
sar
outs
sub
sbb
and
add
movs
retf
xor
(bad)
mov
rol
push
cmp
dec
aam
in
adc
cmps
fcmovu
push
mov
mov
es
hlt
sbb
idiv
and
cwde
dec
xchg
adc
push
mov
pop
loopne
adc
mov
(bad)
or
xor
adc
cmp
(bad)
ja
push
addr16
mov
sahf
inc
(bad)
sub
ret
mov
rcl
adc
les
and
adc
test
adc
inc
lds
sahf
in
or
fidivr
mov
pop
dec
inc
loop
in
(bad)
das
(bad)
std
adc
xchg
aam
add
jge
leave
(bad)
fsubr
push
push
cmp
in
jo
ds
icebp
rcl
mov
call
ss
or
rcl
ja
and
dec
out
mov
mov
xchg
adc
(bad)
push
adc
mov
dec
mov
test
aas
(bad)
push
enter
js
cmp
iret
mov
inc
xor
push
(bad)
push
int
pop
imul
sub
or
cmps
add
and
mov
cmp
push
jae
sub
xchg
sbb
mov
jmp
cmc
cdq
adc
shr
jle
fisttp
mov
cmp
and
sti
(bad)
dec
or
sub
xchg
xchg
sub
mov
and
les
(bad)
and
loope
test
jecxz
rcr
inc
cmp
or
or
test
gs
xchg
(bad)
push
adc
cmc
mov
adc
iret
stos
inc
fldcw
aad
add
and
(bad)
lock
push
dec
rol
add
mov
sbb
test
pop
xchg
and
in
jbe
dec
(bad)
fadd
loopne
xor
dec
in
iret
add
mov
cdq
nop
cs
bound
xor
fld
pop
cmps
je
ret
aad
dec
call
les
stc
cwde
std
loop
(bad)
mov
in
sbb
cdq
inc
loop
xchg
sub
fwait
out
fdiv
push
aaa
in
push
aam
sub
xchg
jae
jnp
mov
jmp
push
pop
mov
ret
adc
loope
fstp
(bad)
xor
jmp
add
push
and
hlt
push
cmp
adc
hlt
std
and
pop
dec
push
mov
movs
pop
out
les
dec
cmps
jno
clc
jmp
mov
xchg
cmp
jmp
mov
cdq
jnp
adc
add
push
arpl
daa
sub
outs
fdivp
pop
xor
out
mov
add
repnz
imul
mov
ror
push
test
fwait
ins
aaa
mov
push
sub
mov
dec
shl
mov
push
repz
je
pop
sub
and
stc
(bad)
sub
inc
dec
movs
outs
sahf
adc
rcl
out
cmps
(bad)
idiv
retf
rcl
cli
loopne
adc
fidivr
in
fbld
inc
dec
sub
ss
jb
sbb
scas
jo
push
ror
ins
cmc
stc
sub
fwait
jmp
sub
adc
sbb
mov
fnsave
bound
push
push
jo
xchg
sub
mov
pop
mov
into
aad
sbb
int3
movs
push
int
ds
inc
int
cwde
sbb
lea
enter
cmp
fcomp
push
add
ins
ins
sub
mov
test
test
cmp
jno
bnd
jmp
inc
cmp
mov
cmp
mov
inc
fidiv
aas
push
(bad)
pop
pop
mov
fwait
mov
call
repz
ret
or
push
and
es
mov
add
and
nop
dec
cmp
or
and
push
sbb
xchg
jns
push
sti
movs
(bad)
ret
in
xchg
pop
(bad)
call
xchg
(bad)
test
leave
ins
dec
push
jbe
add
mov
jmp
dec
imul
jmp
or
das
cmc
in
sub
xchg
jle
movs
cwde
and
mov
sti
push
xchg
or
mov
lds
mov
mov
or
out
stos
mov
mov
add
movs
mov
call
cmp
aas
call
and
outs
sbb
adc
sar
mov
cli
inc
ffreep
sbb
sub
cld
sbb
mov
pop
pop
mov
and
mov
lods
or
dec
lds
cs
arpl
test
sbb
add
mov
jb
int
in
inc
ficomp
cmp
in
ja
sbb
retf
arpl
dec
push
je
das
inc
stos
mov
lods
adc
mov
dec
loopne
pop
ds
sbb
mov
and
mov
cmp
or
popa
push
jp
loope
or
sub
daa
pushf
cmp
shr
(bad)
cmp
push
inc
add
stos
cwde
jg
cmps
jecxz
in
mov
inc
dec
mov
lds
js
inc
sub
jb
adc
xlat
loopne
in
(bad)
mov
or
mul
popa
pop
push
(bad)
out
std
pop
je
and
xchg
das
mov
sub
pop
inc
cmp
pop
cli
test
cs
xor
xchg
mov
push
pop
(bad)
cwde
pop
jbe
out
sbb
dec
(bad)
fwait
inc
cmp
dec
fnstsw
inc
jno
div
jae
clc
clc
mov
pmulhuw
pop
dec
leave
pop
or
inc
mov
xchg
dec
bound
jno
mov
cmp
xchg
or
push
sbb
add
mov
das
xor
mov
lds
cmp
test
pushf
and
sti
mov
in
lods
cmp
inc
and
mov
mov
imul
mov
cmps
stc
sub
cs
inc
pop
sbb
jnp
imul
cmp
(bad)
xlat
jl
or
and
cdq
mov
jo
xor
addr16
cmp
sbb
mov
xchg
aad
arpl
imul
mov
icebp
call
in
fwait
ror
(bad)
movs
jle
(bad)
pushf
pop
cmp
or
add
mov
outs
mov
dec
repnz
pop
addr16
mov
pop
ret
sbb
pop
sahf
push
dec
jne
xchg
inc
sti
mov
rol
mov
ret
fiadd
xchg
xor
jp
sbb
int3
mov
push
lock
jbe
retf
fadd
and
sti
in
cmc
xchg
(bad)
push
mov
mov
sbb
aam
xor
push
icebp
popf
rcl
ins
jbe
dec
ins
aas
std
mov
lock
rol
push
xor
out
cmp
push
arpl
sbb
jbe
add
pop
push
dec
xor
out
mov
les
push
fisub
mov
mov
cwde
xlat
out
pop
pop
(bad)
and
push
fwait
jmp
ins
add
dec
enter
push
adc
mov
pusha
iret
pop
outs
push
retf
push
aas
or
ds
jns
aam
sub
lock
out
mov
cmp
cmp
lods
and
repnz
in
cmp
hlt
dec
jae
les
add
sbb
(bad)
fbstp
sub
into
xchg
(bad)
push
add
mov
cmp
js
adc
mov
aam
mov
cmp
test
jb
add
xor
pop
(bad)
jmp
push
mov
mov
stc
movs
jle
mov
out
ds
mov
mov
sbb
and
outs
pop
and
sahf
push
shr
adc
sub
or
mov
stos
xor
cmp
push
dec
data16
sub
sub
mov
ror
cmp
add
push
sub
adc
stos
mov
mov
xor
mov
jp
addr16
cmp
aad
(bad)
cmp
jb
(bad)
cmp
jns
mov
sbb
jmp
arpl
and
inc
push
dec
cmps
aaa
fwait
out
mov
xor
pop
and
cmps
mov
repz
mov
mov
std
fucomi
mov
cmp
pop
xchg
into
(bad)
and
mov
mov
pop
push
sub
scas
test
loopne
fidiv
movs
int
repnz
mov
mov
cmp
xchg
or
add
loop
in
and
fldenv
xchg
mov
(bad)
mov
ss
lea
xchg
aaa
jmp
adc
shr
mov
mov
add
std
(bad)
jbe
jle
push
inc
aas
sbb
and
fcomp
repz
mov
mov
fistp
sbb
pop
push
(bad)
jae
in
(bad)
aam
aad
mov
push
shl
pop
xchg
inc
clc
xchg
sbb
dec
or
xor
jne
mov
or
aam
xor
sbb
ret
(bad)
test
xor
sub
push
aad
cli
mov
sbb
dec
pop
jmp
repnz
(bad)
pop
test
ror
cmp
mov
mov
ss
loopne
cmp
mov
fsub
fadd
cmp
xlat
addr16
adc
gs
out
pop
aas
(bad)
or
jb
iret
add
rcr
push
cli
mov
shr
and
dec
cld
test
mov
and
or
xchg
(bad)
jl
jbe
cld
loop
xchg
mov
pop
xchg
dec
or
ficomp
mov
pusha
jge
retf
jle
movs
outs
inc
jnp
(bad)
xchg
jg
imul
add
rol
pushw
dec
mov
sbb
dec
sahf
mov
sbb
sub
les
and
rcr
sahf
aas
or
mov
retf
cld
add
mov
pop
jns
push
dec
fsubp
mov
dec
xchg
pop
stc
test
dec
enter
test
cmp
lods
add
stc
sar
xchg
clc
cli
adc
pusha
push
into
mov
lds
jnp
stc
push
dec
push
les
nop
mov
xchg
cmp
and
icebp
mov
push
out
aas
fadd
jmp
and
cmc
std
dec
fsubr
sahf
mov
nop
out
jl
cmp
push
mov
pop
mov
in
jge
add
push
in
gs
call
loope
imul
mov
(bad)
adc
loopne
sub
imul
add
pop
push
retf
inc
jae
ret
int3
dec
shl
lock
and
dec
or
push
or
cmc
lea
mov
and
mul
scas
pop
sbb
cli
nop
push
clc
add
outs
nop
aad
sbb
and
xchg
jmp
mov
call
fwait
test
test
repnz
pop
js
mov
mov
adc
or
push
mov
xchg
mov
outs
and
dec
xor
loopne
scas
adc
sbb
inc
mov
rcr
dec
inc
xchg
jp
retf
test
push
or
dec
mov
inc
pop
sub
outs
push
lds
dec
jp
mov
inc
fwait
in
cmp
test
popf
push
and
pop
push
jecxz
jmp
pop
add
xor
pusha
pop
mov
push
aaa
dec
retf
sar
mov
sbb
push
and
popa
mov
pusha
sti
push
mov
js
into
lds
sar
lods
aas
xchg
sbb
les
aad
cmc
mov
clc
cmc
cmc
xchg
dec
ret
sbb
mov
sti
cmps
pushf
xchg
jle
push
(bad)
retf
fwait
adc
sbb
adc
sahf
in
jge
lods
sub
dec
rcl
mov
daa
or
cs
sbb
push
lahf
in
xchg
mov
xor
or
mov
xor
adc
inc
test
xor
mov
sub
out
or
sub
jno
inc
stos
call
adc
iret
add
dec
push
aas
pop
inc
ja
xchg
push
into
outs
test
movs
mov
cmp
inc
loope
mov
dec
pop
push
inc
jns
mov
fst
pushf
xchg
cmp
les
aam
inc
push
sub
pop
sub
(bad)
jne
cmp
pop
sbb
daa
or
(bad)
or
cmp
(bad)
imul
outs
cmp
sub
xor
js
lea
mov
jae
hlt
mov
push
adc
cwde
xor
mov
dec
mov
(bad)
and
push
mul
nop
pop
xor
in
(bad)
adc
or
ds
les
dec
iret
pop
es
xchg
jmp
fucomp
pop
push
cmp
add
shl
outs
fwait
push
xchg
int3
sar
or
(bad)
cmp
mov
jo
test
fst
mov
outs
outs
sbb
cmp
xor
adc
jge
push
pusha
ret
or
out
push
js
stc
faddp
pop
sbb
mov
ret
js
adc
xchg
in
cli
dec
fcmove
jge
push
push
int
add
vpmaxsw
push
jl
jecxz
xchg
int
(bad)
mov
jl
shl
mov
das
stc
enter
shl
mov
mov
and
add
mov
lock
jge
mov
push
es
mov
mov
stos
cli
and
aad
cli
mov
cmps
cld
ja
sbb
lods
jbe
je
mov
fldenv
fimul
dec
scas
cmps
sbb
hlt
cmp
adc
loope
pop
mov
jge
push
xchg
dec
cld
cmp
mov
loopne
imul
fcom
or
in
dec
icebp
call
(bad)
rcl
xchg
aas
scas
lock
jmp
or
ror
aad
popf
daa
cmp
pop
inc
inc
out
sti
adc
sbb
or
or
test
xor
cmp
in
js
aam
out
and
adc
dec
daa
xchg
loope
aad
xchg
mov
pop
idiv
icebp
cmp
sti
and
shr
xor
dec
addr16
sahf
loop
cvtps2pi
mov
jl
jnp
rol
mov
xchg
mov
bound
jecxz
sbb
mov
retf
(bad)
adc
mov
cli
cmps
mov
add
add
stos
pop
lods
(bad)
push
sbb
call
ret
mov
ret
mov
movs
inc
out
mov
mov
in
iret
cmp
cmps
and
mov
sub
fdiv
sub
les
popa
jg
or
inc
cwde
shr
in
mov
imul
push
sbb
or
mov
xchg
jecxz
in
xor
out
push
rcl
push
jecxz
add
sub
cmps
shl
or
retf
loopne
adc
out
xchg
sub
jb
ss
mov
xor
add
pop
lea
pop
cmc
xor
push
jge
dec
loop
std
nop
push
outs
pop
pushf
cwde
fwait
and
mov
sub
mov
mov
aad
lds
inc
or
frndint
or
inc
jge
adc
sbb
jne
iret
push
addr16
adc
mov
sbb
xor
jge
cwde
hlt
cmp
and
inc
in
dec
pusha
ins
cwde
jmp
push
push
stos
add
pop
movs
repz
mov
or
pop
mov
lea
ds
jmp
imul
cmp
mov
xchg
or
cdq
pusha
stos
xchg
lods
mov
repz
das
aam
(bad)
cmps
les
inc
clc
push
ja
cdq
in
imul
lods
int3
mov
data16
sbb
sub
cs
jl
pushf
xor
scas
shl
retf
mov
rcr
inc
or
in
leave
inc
cwde
xor
movs
div
push
retf
mov
add
sbb
pop
outs
scas
mov
jmp
(bad)
shl
inc
xchg
push
mov
xchg
xchg
mov
dec
sbb
repz
rol
jl
jle
xchg
f2xm1
jp
or
mov
push
and
xchg
dec
pop
xchg
sbb
mov
outs
dec
xchg
push
jbe
scas
mov
pushf
outs
mov
inc
jge
movs
jp
inc
fdivr
test
pop
rcl
jle
repnz
mov
icebp
dec
cmp
cmp
inc
adc
mov
xchg
outs
cli
inc
lahf
pop
pop
stos
in
std
mov
or
mov
xor
dec
xor
jae
mov
aaa
retf
mov
sbb
jno
add
mov
pushf
bound
inc
adc
push
enter
and
sub
sub
lahf
cld
push
pop
dec
add
je
mov
lock
dec
(bad)
(bad)
sar
inc
(bad)
loop
sub
lods
xchg
push
(bad)
cdq
push
mov
xchg
and
push
dec
scas
inc
cli
pop
xor
xchg
fst
test
test
adc
(bad)
jg
rcl
push
daa
cmovb
das
out
outs
pushf
arpl
addr16
popa
and
pop
int3
adc
sbb
mov
dec
and
loope
xor
in
mov
jp
popf
stc
fs
mov
or
cmp
(bad)
(bad)
fs
fwait
sub
or
sbb
fsubr
daa
sub
fmulp
adc
(bad)
dec
mov
dec
cmp
popa
xor
sub
fistp
mov
jmp
mov
cmp
mov
add
pop
(bad)
ss
add
mov
xor
(bad)
test
repz
js
(bad)
(bad)
test
dec
xor
in
mov
ins
jbe
pop
mov
and
psubusb
jb
fs
je
out
aaa
pop
loop
and
push
mov
xor
mov
mov
push
dec
push
push
cld
int
imul
jl
popf
mov
(bad)
(bad)
aas
out
mov
loopne
pop
mov
sub
mov
push
ss
pop
xchg
pop
jns
movs
dec
cli
pop
scas
mul
dec
sbb
mov
lea
out
jmp
call
js
sbb
cli
pop
int3
dec
fwait
jbe
fidivr
mov
lock
pop
jmp
lods
jne
lods
cmp
shl
sbb
loope
std
push
jnp
arpl
loop
icebp
mov
mov
or
jno
lahf
in
xor
imul
or
xchg
jg
xchg
mov
sar
jmp
outs
bnd
mov
xor
jnp
(bad)
inc
shl
cmp
mov
mov
inc
sub
mov
hlt
inc
and
shr
stos
or
adc
hlt
fistp
int
lods
sub
je
lock
adc
add
xor
mov
sbb
test
scas
xchg
cmp
int
mov
sbb
in
mov
(bad)
push
or
push
addr16
inc
mov
dec
mov
sbb
les
(bad)
pushf
inc
pop
mov
sub
xor
pushf
xor
add
mov
call
inc
fwait
sbb
xchg
jb
mov
es
jge
pop
push
mov
mov
jnp
je
cmc
jne
movs
push
sti
inc
sbb
in
enter
leave
cld
sar
adc
leave
loopne
fwait
imul
popf
dec
jbe
push
mov
cmps
mov
fcmovu
mov
bound
(bad)
cmp
mov
jne
test
pop
mov
jmp
rcr
and
jl
mov
or
jmp
push
sbb
mov
dec
push
xor
jne
ret
lods
sbb
in
mov
mov
movs
test
fild
cmp
test
fcom
xchg
jb
dec
xchg
mov
ins
and
arpl
arpl
push
in
out
add
std
fidivr
mov
in
out
idiv
shl
pop
jmp
cmps
or
add
xchg
in
addr16
fs
mov
or
sbb
call
adc
xchg
push
cmp
xor
jbe
mov
out
inc
jmp
sbb
mov
pop
jo
pop
pop
sar
sti
adc
push
pusha
ins
inc
cmps
sbb
dec
cmps
xchg
mov
adc
in
cmc
inc
xchg
in
arpl
jno
je
mov
(bad)
cmp
add
jae
cmp
call
daa
mov
adc
(bad)
sbb
aam
fiadd
pop
dec
outs
adc
push
call
push
mov
or
and
jge
mov
and
mov
ret
jo
jmp
push
lahf
ror
sub
call
push
(bad)
pop
je
push
sahf
movs
push
(bad)
std
aas
movs
rcr
inc
mov
mov
mov
add
rcr
nop
mov
pop
inc
push
adc
adc
add
mov
xchg
cmps
pop
pop
mov
inc
xlat
cmp
retf
js
in
ins
cmp
outs
xchg
leave
mov
or
mov
mov
push
sbb
cmp
add
pop
pop
rcr
ror
je
ja
hlt
mov
sub
xchg
rol
xor
inc
enter
and
sub
movs
fdiv
sar
push
xor
jg
dec
mov
and
jg
cmp
(bad)
sbb
rcr
test
xchg
dec
cld
into
in
mov
retf
xchg
adc
inc
scas
and
call
cmp
jg
mov
push
sti
mov
xchg
jp
cmp
repz
icebp
dec
loope
out
inc
sbb
(bad)
ds
daa
sti
jge
daa
mov
sbb
mov
cwde
(bad)
mov
jnp
sub
les
xchg
in
(bad)
push
mov
xchg
ror
adc
ja
in
cmp
inc
retf
gs
dec
xchg
scas
shl
stos
inc
and
dec
ror
and
pop
(bad)
fadd
mov
shrd
fnsave
imul
into
cmp
cmp
fisttp
and
movs
xchg
mov
push
jb
fisubr
enter
add
xor
mov
dec
sbb
stos
mov
les
adc
or
aad
inc
int3
repnz
cli
fcom
ins
inc
mov
xor
sbb
xchg
idiv
hlt
inc
mov
pop
pop
iret
aad
pop
mov
pop
fwait
dec
call
fiadd
and
jnp
scas
jle
pop
cli
movs
cmps
test
xchg
out
dec
dec
cmp
inc
js
xlat
outs
xor
ja
adc
xchg
push
std
mov
out
add
and
add
(bad)
sub
mov
sub
(bad)
xchg
pop
das
jmp
dec
ins
ja
call
outs
clc
cld
mov
xor
arpl
sar
retf
xchg
pop
dec
fstp
adc
xchg
ja
(bad)
or
movs
into
dec
call
(bad)
xor
dec
push
jmp
and
leave
xchg
sbb
add
mov
mov
adc
xchg
std
dec
cmp
(bad)
lock
movs
sbb
dec
iret
mov
add
push
cmp
pushf
(bad)
xchg
arpl
dec
xor
pop
cmps
inc
test
push
aaa
jecxz
cmp
push
cmp
gs
inc
add
push
or
jnp
ss
pushf
cmps
sti
rcl
rol
mov
sbb
xchg
xor
movs
inc
es
sbb
inc
mov
or
or
push
frstor
fcom
jns
mov
sbb
and
enter
test
push
and
pop
shr
in
cmps
push
sahf
xchg
aad
aad
mov
push
mov
jmp
mov
fdivr
xchg
sub
lock
sub
pop
xchg
jl
sbb
mov
cmc
mov
mov
or
mov
fbld
pop
icebp
adc
jbe
mov
mov
jmp
shl
sub
or
outs
dec
psubsb
(bad)
cdq
cmp
sub
pop
add
push
ret
sbb
xchg
sub
add
adc
sub
push
jecxz
movs
xlat
mov
pop
mov
imul
inc
(bad)
mov
sbb
mov
adc
xchg
pop
sbb
mov
sti
sub
dec
push
sub
dec
inc
das
lahf
fsub
or
fiadd
aad
iret
push
dec
inc
in
retf
push
fstp
dec
sub
int3
pop
cmp
in
pop
push
add
mov
inc
xchg
repz
ret
movs
mov
fisubr
sbb
rol
dec
pop
nop
pop
jl
xor
dec
aad
lods
je
mov
sub
adc
pop
into
sbb
mov
das
in
test
and
mov
ficomp
repz
push
cmp
sub
lods
mov
xchg
scas
movs
call
cdq
cmps
retf
cmps
movs
int3
adc
stos
push
cmc
inc
jns
fimul
not
mov
cmc
xchg
bound
hlt
(bad)
fist
dec
push
pop
xor
xor
mov
gs
mov
fiadd
test
xchg
repz
pop
rol
(bad)
push
outs
cmp
ret
push
and
mov
hlt
push
fstp
retf
mov
jmp
dec
dec
add
popa
push
ins
fadd
xchg
sahf
xor
xor
lods
cmp
and
push
test
sub
xchg
or
aaa
or
retf
lahf
cmps
push
out
sbb
test
cmp
hlt
arpl
add
imul
retf
test
mov
std
retf
dec
scas
mov
xchg
aam
loope
ror
or
jg
mov
xchg
jge
hlt
pop
pop
push
call
aaa
fstp
adc
push
xlat
jle
mov
cmps
cmp
pop
pusha
dec
xlat
out
(bad)
dec
(bad)
jae
(bad)
sti
repnz
xchg
stos
mov
dec
in
pop
aaa
(bad)
mov
sahf
sub
leave
and
ins
call
sbb
xor
cli
adc
into
lds
push
daa
push
mov
jmp
cvtps2pi
cld
fwait
pop
(bad)
sbb
neg
mov
pop
cdq
imul
rcl
out
arpl
shl
into
fstp
adc
jecxz
into
cmp
mov
and
adc
mov
bound
sar
pop
sub
inc
lods
dec
inc
loope
xor
ror
stos
out
imul
or
out
mov
mov
jbe
inc
adc
jno
fnstsw
xor
cdq
imul
mov
jo
pop
(bad)
out
push
pop
or
aaa
xchg
sub
arpl
sub
inc
push
sti
jbe
retf
aam
pusha
jmp
push
jge
cmp
std
imul
mov
pop
ret
stc
out
lahf
add
lea
test
jl
pop
inc
add
push
aam
push
cdq
dec
inc
add
mov
inc
or
in
jno
inc
mov
out
sti
dec
jp
loope
or
fiadd
das
or
push
mov
or
adc
popa
push
inc
mov
sti
xchg
cs
and
stos
mov
pop
dec
test
mov
push
mov
jge
adc
ds
or
push
add
out
mov
jo
std
js
add
aad
sub
stos
cmp
outs
(bad)
sti
sar
sahf
push
and
bound
mov
imul
mov
pop
push
cwde
mov
sub
cmp
mov
fnstsw
std
adc
out
push
cmp
call
mov
scas
cmp
dec
rep
je
sbb
iret
cdq
movs
inc
sahf
jmp
jne
push
sti
mov
push
add
test
xchg
add
cli
or
cmp
out
xlat
mov
loopne
adc
jg
sbb
sahf
or
ds
adc
retf
mov
inc
aas
dec
fbld
fadd
or
pop
shl
inc
loope
lds
cmp
mov
cmps
lock
jbe
rcr
shr
and
std
loopne
stc
lea
sbb
xchg
dec
(bad)
test
mov
dec
push
pop
ja
imul
xor
dec
inc
inc
call
sti
or
fild
cwde
add
dec
dec
rol
cld
test
sub
mov
repnz
into
bound
std
sar
cmp
sub
(bad)
fild
or
leave
hlt
sub
jae
fcom
fcomi
in
pop
call
leave
cdq
std
std
cwde
or
add
out
cmp
push
mov
dec
mov
out
loope
and
repnz
adc
jecxz
shr
cs
sbb
xor
pop
add
pop
inc
add
adc
shr
mov
pop
adc
scas
cmps
call
jl
fimul
cmps
fld
xchg
push
mov
mov
inc
pop
adc
repnz
sti
(bad)
mov
cmp
fucom
(bad)
call
cmps
(bad)
dec
jle
xchg
sub
cwde
or
repnz
cld
jmp
in
das
lea
ret
stc
out
sar
cmps
(bad)
mov
mov
out
add
sahf
and
outs
adc
adc
aad
and
in
add
sub
cdq
je
and
and
xchg
stos
xchg
and
je
stos
mov
inc
rol
cmps
pop
pop
je
les
rol
enter
inc
loopne
out
or
and
cmps
scas
fldcw
xor
rcr
stos
and
and
test
dec
mov
clc
dec
pusha
movs
cmp
lods
push
add
adc
pop
sub
nop
mov
pop
cwde
test
cwde
into
imul
jmp
in
lea
shl
mov
and
sahf
mov
popf
retf
xchg
dec
aas
(bad)
stos
sar
sti
push
add
xchg
dec
out
inc
or
inc
adc
mov
and
popf
in
in
fsubr
add
int
shr
(bad)
ror
pop
jo
dec
retf
in
bound
mov
or
mov
push
mov
and
sbb
xchg
and
dec
add
repz
push
or
mov
lods
(bad)
jb
or
sbb
scas
inc
bound
ins
inc
fidiv
mov
mov
arpl
repz
fiadd
retf
data16
call
gs
pop
test
fnstcw
je
dec
ss
scas
into
push
dec
xor
ret
rol
dec
lods
(bad)
cmp
sbb
sub
mov
dec
fcom
and
push
sub
out
sub
cld
daa
jle
test
mul
jno
push
pop
mov
xchg
dec
pop
mov
push
test
mov
test
aas
inc
xchg
pop
mov
jp
mov
stos
js
pop
mov
enter
mov
sub
ins
out
fcomp
and
pop
dec
ret
xchg
cmp
jmp
aam
adc
cmps
out
fwait
sbb
cli
rol
movs
ret
mov
test
imul
imul
mov
loopne
mov
inc
iret
push
repz
cld
mov
inc
les
jno
aas
mov
call
ret
loop
fsubr
jecxz
test
pop
int3
or
dec
lea
outs
sub
neg
nop
in
retf
or
gs
shl
jmp
jecxz
adc
enter
mov
adc
adc
sbb
push
daa
push
sub
repz
and
mov
xor
test
or
cmp
sti
mov
inc
fcmove
fwait
and
sub
daa
out
add
sub
jge
mov
jae
inc
and
popf
pop
xchg
inc
aad
popf
mov
dec
lahf
inc
daa
out
add
add
mov
mov
mov
int
jae
mov
add
jbe
(bad)
xchg
inc
xor
jne
push
jge
inc
or
mov
dec
and
mov
ror
iret
(bad)
cmps
fs
jo
retf
mov
aaa
imul
pop
cmc
xchg
mov
out
or
or
mov
dec
fwait
and
mov
pop
daa
mov
cmc
jbe
cwde
adc
fisttp
add
iret
push
stc
std
cmp
mov
jp
ja
push
out
cwde
cmp
fdivp
xor
add
cmp
pop
jge
adc
fsub
dec
mov
adc
inc
mov
or
push
sub
xchg
and
cld
(bad)
cmp
mov
popf
cdq
xor
add
cmp
mov
and
mov
add
inc
add
sub
cli
movs
push
xor
jne
xchg
xchg
inc
push
cmp
dec
pusha
jno
xor
sub
add
mov
ds
lods
sbb
cmps
jmp
pop
sub
out
fwait
inc
mov
xchg
jb
add
pop
push
(bad)
movs
add
daa
(bad)
in
add
mov
pop
adc
push
inc
add
lock
xchg
movs
imul
xchg
jno
mov
fneni(8087
retf
add
dec
ins
adc
xchg
inc
pop
test
xor
pop
push
aaa
test
sub
and
or
pop
ret
jns
sbb
adc
xchg
and
and
sub
cmp
inc
jae
rcr
movs
aaa
inc
std
push
sar
inc
mov
adc
sub
mov
sub
sahf
lahf
gs
push
clc
jl
frstor
arpl
imul
stos
aad
in
stc
xor
mov
push
sub
ss
repz
add
sub
sbb
xor
mov
cwde
ficom
sub
(bad)
rol
stos
sub
rcl
push
push
push
xor
ss
je
adc
cmps
sbb
xchg
loopne
mov
inc
jle
enter
xor
pop
int3
inc
or
push
sub
push
addr16
jecxz
ret
repnz
lock
movs
push
into
jle
imul
(bad)
popa
movs
xor
sbb
imul
push
(bad)
call
sbb
pop
ds
cli
mov
sbb
inc
outs
mov
fld
push
or
sbb
dec
in
dec
call
ss
iret
xlat
scas
pop
push
mov
inc
jb
fild
dec
push
cs
int3
ss
(bad)
xor
aaa
jno
inc
(bad)
and
cdq
in
add
pop
mov
ds
mov
aad
mov
jb
scas
stos
faddp
mov
dec
lea
dec
xor
cdq
xchg
sbb
mov
(bad)
hlt
xor
or
retf
jecxz
cmp
repnz
dec
xor
jno
outs
call
ror
clc
cld
arpl
jmp
pop
lea
push
jmp
sub
jmp
dec
xor
int
pusha
xchg
or
iret
clc
push
fdiv
jge
lods
das
aas
fwait
je
add
sti
adc
movs
adc
jecxz
frstor
call
cwde
pop
mov
jo
inc
test
ficom
dec
mov
das
fdiv
inc
ins
pop
ret
ins
jmp
sbb
retf
mov
jp
in
test
jmp
mov
push
push
jns
sar
aam
int3
retf
cmps
or
adc
frstor
outs
xchg
push
out
mov
aam
lds
ret
dec
mov
je
jg
movs
clc
out
pop
pop
mov
movs
push
xchg
ins
push
mov
retf
aas
retf
xchg
js
jecxz
loopne
dec
sub
or
adc
xlat
clc
pop
mov
retf
push
jge
jg
mov
inc
lods
das
fistp
loop
mov
xor
xchg
scas
mov
inc
out
pusha
icebp
push
inc
pop
repz
cmps
jl
mov
sub
push
dec
cdq
in
arpl
clc
add
fsubr
cmp
xlat
cmps
je
xor
mov
das
rol
fmul
jns
adc
xchg
test
mov
or
(bad)
cmc
push
ret
ins
(bad)
mov
and
push
loop
sti
mov
and
dec
jbe
mov
jp
and
std
xchg
stos
push
push
ror
fcmovu
mov
enter
stos
(bad)
adc
sahf
cmp
adc
pop
loope
leave
sbb
xchg
jl
or
popf
push
fimul
aaa
inc
push
pop
cwde
add
cmp
lds
adc
cdq
push
lea
or
scas
sub
dec
or
rcl
loope
lds
or
movs
lahf
mov
cld
pop
xchg
icebp
adc
test
push
outs
pop
push
dec
xchg
adc
sub
into
aas
fisub
mov
(bad)
sbb
rol
push
arpl
adc
add
cli
or
and
test
push
cmc
popf
fs
push
mov
test
stos
push
cdq
push
scas
pop
fdivr
test
je
in
ins
cmps
push
lahf
mov
cwde
sar
dec
sahf
inc
mov
repnz
mov
lods
cmp
and
jns
test
adc
fldln2
les
sti
pop
(bad)
ror
mov
or
jb
mov
dec
push
cs
je
add
retf
mov
retf
inc
mov
bound
ret
mov
sub
xchg
lds
add
(bad)
mov
sub
movs
add
dec
dec
ret
xor
jbe
fmul
stos
inc
xchg
repnz
inc
or
imul
(bad)
out
fsub
jle
add
adc
mov
jmp
add
adc
lods
aaa
ins
xchg
lea
and
(bad)
int
adc
ja
jb
jne
cmp
(bad)
cmp
cmp
sub
aas
fbstp
mov
rol
lock
ds
sub
out
jg
xchg
popf
movs
xor
gs
mov
xchg
xor
mov
push
test
add
retf
dec
dec
pop
fwait
and
adc
inc
or
ja
dec
mov
or
mov
push
gs
div
jo
ds
div
shl
push
leave
inc
fidivr
addr16
jle
inc
and
arpl
in
es
sahf
aad
pop
aas
and
mov
cmps
jb
adc
mov
repnz
int3
retf
pop
xchg
inc
fld
pop
sub
(bad)
and
mov
jp
add
hlt
lods
test
push
scas
jp
out
xchg
rcr
mov
jns
movs
clc
inc
clc
mov
jecxz
xchg
mov
or
fsub
test
pop
stos
inc
jmp
addr16
inc
cmp
cmp
data16
dec
je
fiadd
xor
xchg
movs
mov
stc
cmp
pop
adc
inc
cmp
xchg
(bad)
add
and
mov
xor
std
xlat
call
ficomp
retf
dec
jb
imul
lods
icebp
into
pop
ret
pushf
mov
add
movs
test
add
clc
add
arpl
stc
mov
stc
pmaxsw
mov
lds
in
sub
or
hlt
fist
add
push
retf
sub
push
cmp
data16
jle
adc
ss
pop
push
xchg
and
daa
xor
call
mov
cmps
bound
(bad)
call
xor
pop
call
rol
sti
xlat
sub
push
pop
mov
mov
hlt
xchg
popf
imul
(bad)
cmc
stos
stc
cmps
dec
loop
push
cdq
cdq
pusha
push
es
adc
popa
ja
push
jne
rcl
(bad)
(bad)
adc
std
into
in
fs
push
dec
sub
mov
push
dec
cmp
mov
ret
fist
aam
adc
lods
sub
movs
xchg
pop
loop
push
sbb
pop
arpl
cs
mov
outs
inc
dec
scas
aaa
adc
neg
xchg
dec
cmp
shr
push
inc
jl
xchg
push
add
cdq
ficom
jl
stos
in
aaa
into
adc
js
rcr
and
pop
inc
mov
fnstcw
jo
jl
(bad)
bnd
pop
pop
sbb
stos
mov
push
imul
aaa
imul
xor
aam
or
dec
inc
push
push
shl
adc
cmp
add
les
sti
mov
adc
xchg
push
cmps
mov
ror
and
out
push
jecxz
pop
or
mov
aas
xor
movs
cmp
leave
ror
cli
aad
and
jecxz
sbb
retf
adc
fisttp
ror
mov
cs
stos
xchg
mov
adc
push
pop
pop
push
fidiv
aaa
mov
xchg
ins
sbb
ficom
in
cmp
cmp
cmp
imul
sub
inc
nop
arpl
popf
mov
jge
push
retf
(bad)
mov
jmp
cmp
pop
cmp
push
and
sti
push
ds
mov
inc
sub
dec
push
push
mov
add
test
jge
movs
sbb
xor
or
xor
outs
ja
in
mov
dec
in
mov
cld
sub
int3
mov
dec
sbb
jl
int
pop
or
out
(bad)
aaa
loopne
xlat
lods
sbb
push
dec
inc
out
pushf
std
aas
(bad)
mov
rol
popa
dec
xor
or
sub
add
retf
out
pop
or
aaa
push
cld
cld
test
push
addr16
sbb
fild
jae
and
aam
jge
ficom
adc
push
xchg
(bad)
enter
punpcklwd
inc
inc
mov
cs
mov
enter
cmp
shl
inc
popa
xor
lods
leave
loopne
gs
add
or
push
mov
sbb
loopne
jp
sub
je
pop
mov
inc
or
xchg
or
outs
add
cld
stc
lock
ins
arpl
and
dec
sti
loopne
daa
cmps
jecxz
adc
inc
aas
shl
int3
sub
xor
mov
cs
adc
ins
push
push
xchg
mov
inc
jmp
adc
sub
push
dec
or
sti
loopne
out
dec
out
outs
addr16
scas
je
fucompp
push
(bad)
or
cmp
icebp
jg
jp
dec
icebp
int
jns
push
xchg
mov
cmp
mov
xor
movs
xchg
(bad)
sbb
shl
jno
ror
cwde
movs
inc
or
(bad)
scas
outs
xchg
popa
fsubr
cdq
ds
lods
xchg
enter
or
xor
pop
imul
sahf
rcr
cmps
xor
pop
pop
mov
inc
out
leave
mov
daa
adc
or
jl
cmp
stos
repnz
std
shl
cld
mov
sub
xor
add
int
dec
jmp
xchg
and
mov
pop
jg
or
pop
sub
and
mov
sub
jne
sti
lods
cmp
iret
cmp
or
pop
jmp
mov
aas
push
push
mov
loopne
ret
rcl
and
mov
xchg
out
cwde
inc
xchg
mov
xchg
nop
cdq
gs
mov
icebp
push
jmp
call
ret
fidiv
add
lahf
ins
iret
pusha
sbb
out
cmps
push
in
xchg
shr
jb
mov
mov
adc
test
or
sbb
loope
sbb
sbb
popa
(bad)
mov
in
jb
mov
mov
pop
sti
pop
bound
outs
mov
loope
mov
call
add
int3
cmp
test
jmp
ficom
jo
mov
xchg
scas
pop
xlat
xchg
adc
movs
push
cmp
retf
jbe
pop
or
fist
xchg
adc
shl
inc
stos
aaa
pop
jle
iret
es
adc
out
popa
sub
stc
inc
adc
sahf
sub
shr
push
adc
and
jle
into
sahf
hlt
xchg
mov
lea
sbb
push
mov
neg
pop
mov
int3
cmp
adc
xchg
xor
call
adc
xchg
aas
push
test
pop
call
sub
adc
das
cmp
and
dec
sar
mov
out
inc
shl
and
adc
lock
ficomp
cmps
inc
adc
sub
inc
pushf
mov
(bad)
pop
pop
mov
pop
xchg
add
mov
pop
inc
jbe
cmp
packuswb
pop
test
add
mov
into
add
ret
rcl
push
leave
pop
test
mov
inc
(bad)
mov
pop
mov
fisttp
pusha
mov
and
hlt
push
out
pushf
imul
repnz
add
sbb
dec
pop
cmps
popf
fs
mov
pop
icebp
cli
ins
arpl
out
sahf
and
push
and
sbb
movs
jg
mov
std
int
int3
mov
pushf
adc
pop
icebp
mov
call
mov
movs
sub
das
adc
pop
jg
mov
cmp
fild
ror
scas
inc
and
stos
imul
sbb
pop
or
sbb
cld
pop
loope
mov
inc
adc
jnp
mov
dec
add
mov
xchg
test
fist
(bad)
or
fdiv
loop
cmc
mov
mov
sub
pop
adc
add
sub
stos
icebp
lea
add
jno
pushf
mov
pushf
mov
jmp
push
mov
sub
retf
and
into
cdq
(bad)
in
push
and
gs
jns
fbld
and
fwait
outs
das
nop
pop
stc
bound
xchg
movs
xchg
add
aad
mov
xchg
fcmovb
lock
mov
loopne
push
inc
mov
sbb
mov
mov
lds
test
aaa
jge
push
adc
in
sbb
aam
or
fidivr
es
or
out
add
push
jbe
call
adc
int
jne
inc
std
iret
je
shl
mov
sbb
mov
xchg
mov
scas
lods
repz
call
loopne
sub
and
les
adc
sub
xor
scas
call
mov
pop
pop
push
dec
cmps
shr
push
or
mov
fist
aaa
cmp
ja
cmps
push
enter
retf
jb
ja
and
mov
push
or
add
call
dec
mov
dec
mov
add
fdiv
out
enter
es
(bad)
sub
jp
pop
inc
jb
mov
sti
cmps
add
stos
sbb
cmp
out
mov
jns
sbb
xor
push
idiv
stos
jecxz
push
sbb
mov
sbb
pop
adc
shr
inc
or
fsubr
shl
jl
iret
cmp
jnp
xlat
dec
add
ret
mov
sar
jmp
in
cmp
repnz
adc
aaa
ret
pop
mov
or
das
dec
or
(bad)
in
in
adc
and
jb
sbb
jns
mov
ins
imul
pop
rcr
mov
mov
add
push
icebp
rcr
xchg
mov
sar
fwait
lods
adc
jl
ret
arpl
mov
nop
add
pop
stos
mov
inc
fdivr
movs
dec
push
inc
push
call
jle
xlat
cmp
jb
leave
fcomp
mov
pop
xchg
jne
leave
test
and
mov
mov
stos
mov
sti
popf
test
mov
cmp
or
push
mov
fcom
inc
push
pop
mov
mov
in
pushw
add
cld
mov
jl
and
and
add
xor
lahf
test
inc
mov
mov
cmp
(bad)
(bad)
addr16
mov
int
cmp
mov
adc
call
shr
(bad)
dec
xor
hlt
dec
xor
adc
es
sti
ins
push
xor
out
sahf
out
mov
loope
or
jnp
div
nop
ja
mov
daa
js
es
mov
shl
cs
xor
sub
xchg
out
shr
cmps
pop
inc
add
add
out
xor
shl
inc
fcom
ds
xor
dec
mov
mov
gs
xor
xchg
sahf
sbb
dec
cli
sub
(bad)
jae
test
aad
ds
inc
jns
mov
push
add
cli
lods
jle
mov
stc
jge
rol
sti
fimul
push
pop
scas
lds
ret
fdivr
imul
xor
out
mov
ds
cmp
stos
jno
dec
pop
mov
cs
in
pop
inc
dec
mov
mov
mov
popf
pop
ror
push
ret
pop
pop
cld
ins
sub
jmp
dec
cmp
ret
lock
add
adc
jmp
xlat
outs
out
adc
in
jb
and
mov
mov
xchg
jecxz
out
pop
push
in
mov
and
push
hlt
(bad)
cmp
shl
(bad)
xchg
adc
test
inc
mov
and
adc
cwde
iret
pop
xchg
cmps
jae
pop
pop
or
sub
add
mov
add
rol
mov
xchg
push
mov
sbb
xor
arpl
scas
(bad)
mov
scas
mov
pop
mov
mov
cmp
xchg
jnp
xor
mov
(bad)
sti
sbb
fsubr
inc
and
mov
icebp
dec
inc
loope
cli
mov
adc
in
jb
test
sbb
add
add
(bad)
jmp
in
outs
enter
inc
lds
addr16
push
xchg
push
add
(bad)
dec
or
or
cwde
sbb
mov
sub
xchg
xor
daa
int3
sbb
push
lds
retf
call
add
dec
jl
fadd
test
and
out
add
and
mov
pop
mov
inc
clc
pop
iret
mov
test
xor
jl
cs
imul
jecxz
push
or
mov
test
call
scas
cmp
xchg
jle
dec
or
sar
scas
pop
pop
mov
scas
mov
out
pop
mov
xchg
loop
cmp
add
dec
aaa
mov
data16
je
pop
adc
retf
fldcw
fs
dec
loopne
imul
scas
int3
and
out
es
adc
sub
rcl
or
jb
(bad)
push
pop
and
sub
and
imul
dec
and
daa
push
mov
cmp
jle
inc
imul
cmc
sbb
repz
mov
sbb
or
test
ret
mov
xchg
mov
cmp
sbb
push
jge
cmps
and
pop
inc
arpl
aam
sahf
push
outs
add
pushf
pop
mov
sub
mov
call
mov
js
pop
ins
adc
test
fimul
imul
adc
and
cmc
cdq
popw
mov
jbe
loop
test
stos
fdivr
mov
mov
xchg
jnp
aad
mov
and
inc
cmps
pop
push
stos
cmp
push
movs
mov
es
es
inc
lea
xchg
in
cmp
std
in
out
sar
mov
cli
div
mov
mov
test
mov
pop
xor
cli
xchg
sbb
daa
sar
adc
enter
xor
cmp
bound
addr16
in
sbb
ins
mov
mov
inc
ins
sub
jb
jp
out
sub
push
fcomp
or
jecxz
jbe
out
enter
outs
xchg
mov
pop
mov
jl
jae
ficom
jb
call
outs
xchg
enter
ds
retf
pop
mov
int3
stc
pop
cmp
or
clc
pop
iret
inc
cmp
(bad)
mov
xchg
rcl
sbb
push
jb
mov
mov
mov
jmp
mov
aam
ret
sbb
xchg
jbe
ds
jnp
and
imul
add
xchg
cli
inc
jmp
into
shr
test
ret
sar
lock
clc
std
push
(bad)
cmc
leave
pxor
fmulp
mov
push
outs
mov
fiadd
hlt
mov
sbb
push
aam
jb
fcmovb
out
push
add
int3
retf
jbe
sub
ficom
leave
inc
(bad)
neg
das
push
adc
repnz
out
dec
pop
xchg
jle
add
lods
(bad)
cdq
call
add
xor
xor
xor
(bad)
retf
out
arpl
cld
jge
cmp
in
outs
and
or
test
(bad)
or
fwait
mov
lahf
pop
imul
daa
enter
pop
xor
push
inc
adc
pop
rcr
sbb
jns
es
pop
pop
fs
test
xchg
test
mov
xor
out
loop
outs
sub
add
pop
mov
mov
sar
cmp
movs
inc
or
mov
frstpm(287
sub
(bad)
stos
cs
sub
loop
add
movs
inc
adc
pop
into
popf
(bad)
lea
jp
outs
lods
inc
loop
pop
aad
ficom
(bad)
mov
pop
xchg
pop
test
into
or
imul
sub
data16
mov
jmp
sbb
addr16
xchg
(bad)
int3
pop
pop
test
mov
sar
xor
xor
xchg
xchg
loopne
aas
add
sbb
pop
sub
xchg
clc
jns
shl
push
xlat
in
mov
mov
cld
pop
(bad)
cli
movs
retf
jnp
jge
mov
ins
adc
mov
xchg
pushf
clc
int3
mov
loop
mov
repnz
ror
and
mov
lods
das
or
int
inc
(bad)
mov
pop
test
add
add
test
lock
and
nop
push
ss
imul
cmps
ins
push
je
cmps
cmp
cs
sbb
ins
scas
addr16
dec
out
inc
push
jno
cmp
fcmovnb
jle
cmp
fstp
fs
ins
xchg
test
or
lea
idiv
and
cmp
iret
hlt
pusha
adc
and
lods
xor
mov
stos
neg
push
sbb
pushf
jp
inc
pop
scas
or
dec
iret
pop
xchg
pop
mov
out
cmp
out
stos
sti
xor
and
into
mov
leave
aam
adc
ds
ret
test
pushf
faddp
test
mov
add
add
jo
adc
mov
mov
in
ficomp
cmp
xchg
sub
cli
bound
les
and
sbb
hlt
mov
xchg
loop
mov
push
mov
retf
pop
(bad)
cli
or
push
pusha
inc
xor
cmp
inc
mov
mov
mov
out
and
jbe
inc
and
test
fcmove
and
dec
loop
mov
retf
rcl
retf
add
xor
pop
inc
adc
cmp
mov
outs
add
cmc
add
in
outs
call
and
jmp
sub
aad
xchg
dec
jp
repz
fld
mov
rcr
pop
jp
mov
mov
ds
loop
hlt
(bad)
stos
lods
sbb
xor
push
aam
jecxz
xor
jg
sub
(bad)
mov
(bad)
ins
mov
sbb
mov
cmp
clc
dec
push
movs
ss
inc
add
(bad)
xor
pop
pop
mov
jmp
(bad)
cld
imul
jo
fs
push
jne
cmc
inc
shr
lds
jmp
test
mov
mov
mov
lods
(bad)
or
pop
add
into
xchg
rol
add
push
inc
or
dec
sbb
cld
repnz
add
out
xchg
mov
outs
call
xor
js
and
jns
push
sbb
add
lea
jecxz
stc
push
imul
push
jg
out
loope
into
cmp
jnp
mov
scas
shr
push
fcom
and
xor
sub
sbb
or
pop
addr16
addr16
mov
sub
lods
push
fwait
out
mov
cld
push
jbe
shl
sub
sbb
ficomp
push
arpl
xchg
jmp
mov
(bad)
sub
cld
inc
and
outs
cmps
jmp
mov
cmps
retf
or
mov
mov
push
fidiv
jne
add
pop
push
mov
leave
ins
push
xchg
cmps
cwde
jmp
mov
int3
js
sub
pop
mov
pop
add
add
ret
jg
retf
or
lds
iret
push
ds
mov
lods
inc
inc
or
xor
cmp
loopne
push
and
pop
mov
xchg
push
int3
pop
push
into
popa
rol
add
cmp
retf
repnz
inc
pusha
cmc
xchg
mov
mov
pop
std
repz
lock
jp
daa
adc
retf
shl
adc
jg
jno
jle
rcr
jp
mov
pop
sub
std
adc
dec
mov
or
sahf
xchg
lods
in
push
test
out
es
aaa
in
mov
ret
push
jno
loopne
into
leave
or
sbb
mov
xchg
fwait
in
or
das
sub
sar
imul
sbb
sbb
lods
cli
xor
jge
jp
sub
stc
mov
out
xchg
test
retf
ret
cmp
les
push
jmp
cld
call
sbb
push
(bad)
out
ja
and
push
std
cmp
and
movs
mov
ins
sub
cmp
loope
xor
push
movs
gs
not
push
movs
cli
jge
pop
cmp
push
mov
xor
and
adc
push
mov
neg
xchg
shl
fdivr
mov
stos
sub
imul
jge
pop
cmp
mov
mov
test
jge
out
xor
ds
mov
aaa
aas
xor
test
mov
fsubr
push
jno
fdivr
cmps
idiv
mov
jnp
pop
aam
push
xchg
pop
test
cmp
sub
not
mov
mov
int3
into
add
mov
jnp
adc
cdq
xchg
hlt
mov
in
sbb
jg
xor
cmp
dec
test
cmps
mov
add
stos
fsub
imul
addr16
xchg
pop
and
or
adc
mov
add
pop
inc
outs
jbe
sti
stos
shl
pusha
xlat
mov
test
pop
cmp
or
inc
push
lds
add
push
iret
xor
inc
sub
xchg
stos
inc
adc
shr
and
rcr
lds
je
jmp
mov
sub
push
aad
(bad)
push
lock
jo
dec
lds
push
mov
push
push
out
push
sub
push
mov
dec
push
aad
mov
leave
mov
adc
push
mov
add
mov
push
(bad)
xchg
mov
sar
enter
xchg
or
stos
pushf
jmp
out
xchg
mov
bound
jns
push
inc
jb
daa
sbb
bound
cmc
xor
xor
popf
or
inc
mov
jl
sub
sub
nop
aad
ins
test
add
mov
mov
xchg
add
std
cmps
cli
sub
mov
pusha
rol
mov
pop
jmp
cmps
pop
(bad)
(bad)
jo
sbb
ins
in
adc
add
std
add
mov
lahf
hlt
popa
sbb
adc
je
inc
xchg
mov
in
push
call
jnp
jo
sub
test
xchg
and
fbstp
dec
lods
add
xchg
sub
aas
jp
xor
xor
jb
or
xchg
push
and
arpl
sub
or
xor
or
hlt
add
push
xor
mov
ja
imul
or
mov
mov
cld
cmc
sbb
xchg
mov
in
dec
inc
cmp
cmp
ror
out
shl
mov
sbb
test
cmps
(bad)
and
xchg
dec
adc
inc
mov
outs
adc
inc
pushf
sti
pusha
and
mov
jecxz
icebp
sbb
pop
push
xchg
adc
jg
rep
adc
aad
sub
test
jb
cdq
sub
jmp
(bad)
js
push
xor
dec
test
cld
call
aad
movs
jge
loope
in
sub
xchg
or
sub
lea
mov
popf
push
push
loop
dec
shl
and
mov
je
xchg
push
pop
popf
mov
xor
sbb
push
mov
mov
push
pop
js
scas
jecxz
or
sbb
or
repz
xor
and
jg
sbb
lds
mov
les
ja
dec
inc
push
ja
popa
cdq
ja
out
and
push
pusha
mov
cmps
(bad)
inc
or
xchg
adc
ins
pop
mov
dec
cmp
sbb
fsub
add
xor
shl
push
dec
xlat
mov
mov
mov
cld
sti
aas
stos
inc
shl
popa
clc
or
jb
push
sub
or
movs
xor
dec
adc
enter
in
es
pop
push
loope
mov
push
mov
add
xchg
dec
lahf
adc
daa
xor
inc
mov
mov
mov
in
mov
ja
je
outs
mov
or
fisttp
push
imul
ds
not
jno
pop
rcr
cmp
popf
bound
push
or
daa
mov
or
(bad)
and
fnstenv
pop
jnp
and
adc
retf
pop
ins
call
mov
out
test
mov
mov
loope
mov
sbb
and
rcl
neg
in
shr
sbb
repz
repnz
pop
mov
aad
ja
out
add
mov
aam
lea
outs
cld
cld
pop
cdq
pop
fbld
outs
push
jg
cmp
inc
ds
ss
jbe
mov
and
call
cli
clc
jns
mov
leave
(bad)
or
loope
dec
cmps
xchg
mov
fldcw
push
pop
rcr
nop
push
jl
cwde
add
sub
lock
call
je
jg
fcom
scas
ret
or
and
icebp
into
int3
jecxz
fxch
push
adc
(bad)
int
jmp
cmps
jl
js
jns
sar
cmp
popf
mov
push
inc
cs
mul
mov
cmps
sbb
hlt
retf
dec
mov
test
adc
mov
in
fnsave
push
xchg
loopne
out
jmp
addr16
jb
loop
dec
jmp
push
arpl
jg
ins
mov
push
add
xchg
xor
push
xchg
add
xchg
daa
pop
inc
dec
sub
gs
or
leave
(bad)
and
jae
aaa
mov
in
movs
dec
stos
adc
pop
jno
test
or
fsubr
push
adc
push
xchg
sti
(bad)
repz
ret
inc
cmp
cwde
jge
rcr
jns
jmp
or
icebp
xor
ficomp
shld
ror
pop
je
jne
mov
mov
mov
and
das
cmp
lods
es
sub
dec
cld
test
pop
xchg
sub
xchg
scas
bound
jmp
mov
pushf
stc
aaa
pop
and
mov
fnstcw
loopne
rcr
dec
(bad)
(bad)
sti
cmp
jp
test
xchg
jbe
call
push
mov
pop
dec
jo
adc
dec
xchg
pop
xor
cwde
loope
and
and
pusha
mov
dec
inc
rcr
push
xchg
test
mov
mov
leave
retf
pop
pop
and
cld
inc
sub
mov
xor
es
std
jge
xchg
addr16
push
pop
push
(bad)
and
fcomp
movs
or
movs
vcmppd
mov
jnp
cmp
stos
jl
push
fwait
out
inc
outs
(bad)
xor
clc
test
pushf
adc
cwde
aam
jb
mov
xlat
jb
mov
mov
sti
sub
repz
jbe
cmp
xor
sub
fcom
shr
ins
aam
push
jne
cmc
add
mov
out
icebp
fistp
sahf
xchg
mov
pop
out
idiv
nop
sar
lock
and
jmp
mov
fs
jno
xlat
out
mov
sub
and
test
cld
mov
out
xchg
mov
mov
out
pop
push
sbb
sub
xchg
ret
push
(bad)
outs
aad
retf
push
dec
lock
mov
push
jnp
xchg
fidiv
mov
inc
and
cmp
mov
mov
pop
inc
jns
xor
xchg
xor
sub
jo
mov
xchg
stos
xchg
cmp
sahf
cmps
mov
xchg
dec
rol
mov
mov
mov
push
enter
mov
das
sub
sti
mov
sbb
push
scas
pop
enter
fwait
popa
loopne
dec
xchg
ja
add
loopne
dec
cmp
mov
sbb
adc
retf
fucomi
movs
ins
into
shl
mov
(bad)
(bad)
push
pop
add
xlat
outs
or
cmp
ds
ror
sub
push
cmp
xchg
jae
popf
pop
cmp
stos
xchg
addr16
dec
scas
add
push
movs
mov
cmp
into
and
mov
retf
test
aas
add
repnz
push
push
or
xchg
jne
mov
shr
jmp
(bad)
cs
and
xlat
sbb
adc
jo
xor
(bad)
test
test
jp
add
adc
movs
push
in
retf
ins
xchg
mov
cs
(bad)
call
jmp
sar
xor
sar
imul
push
xor
adc
xchg
inc
mov
ss
pop
xchg
pop
pusha
adc
std
in
jae
(bad)
mov
iret
test
jle
mov
and
xchg
sbb
into
inc
pop
xchg
pop
mov
cmps
adc
std
out
xchg
pop
icebp
cmp
sub
sub
repz
mov
mov
in
cli
xchg
xchg
cmps
cmc
fcmovbe
sbb
enter
aas
sbb
jae
sar
pop
mov
jl
mov
jnp
cs
xor
pushf
cmp
dec
xor
push
mov
iret
sti
inc
outs
xchg
shl
out
inc
lods
mov
rcl
sbb
cli
retf
out
fs
and
aad
mov
sbb
mov
and
shl
sti
aam
int
ss
daa
movs
mov
mov
lods
xor
retf
jno
ins
jno
clc
pushf
sub
fadd
cmp
dec
clc
inc
and
and
pop
or
sub
mov
movs
and
ds
(bad)
fs
or
jmp
mov
rcl
mov
out
xor
repz
sbb
xor
xor
not
xor
jl
ficom
in
or
hlt
nop
in
jl
inc
mov
(bad)
leave
and
je
cmp
jo
xor
push
out
jae
mov
jae
inc
out
or
in
add
inc
pop
cld
xor
fwait
xor
das
sbb
aad
jbe
cli
jle
test
ins
inc
jmp
fist
mov
xchg
data16
push
jbe
mov
out
popa
mov
ins
mov
or
pop
test
jo
add
pushf
jle
and
xor
test
push
and
add
fwait
fs
enter
mov
cmp
cmps
pusha
test
(bad)
xchg
dec
mov
jae
add
test
std
bound
cmp
aas
movs
cmp
adc
and
stc
sbb
(bad)
lock
jmp
in
cmp
sub
add
mov
xor
data16
xchg
fcomp
ret
inc
pop
xchg
in
hlt
cmp
enter
fmul
mov
enter
aaa
loopne
sbb
das
or
jnp
xchg
dec
and
jb
outs
vmovntps
lods
popf
or
fsubr
popa
and
fs
pop
repnz
or
inc
inc
int
loopne
pop
mov
fst
add
adc
stos
ins
adc
pop
test
out
mov
ficom
lods
retf
sub
dec
cld
sbb
or
in
and
adc
xor
xlat
repnz
push
push
mov
movs
xchg
sbb
mov
pop
add
(bad)
add
xor
(bad)
repnz
pop
gs
std
cmc
shr
(bad)
jmp
mov
bound
push
fdivr
test
fs
inc
data16
shl
loop
adc
xchg
sbb
(bad)
and
or
pop
rcl
mov
repnz
or
movs
std
push
cmps
int
daa
pop
imul
stos
test
adc
jg
push
(bad)
aam
push
push
mov
mov
adc
clc
rol
or
jns
mov
and
popa
mov
inc
imul
jl
push
push
fcmovnb
fld
pop
jecxz
stos
jl
call
in
out
(bad)
pop
ins
pop
ss
ss
push
fadd
dec
sub
dec
push
push
lods
das
bound
dec
mov
mov
fimul
push
dec
mov
add
or
and
pop
into
jbe
and
push
sti
push
xchg
ret
pop
xor
imul
xchg
pop
push
jae
or
hlt
shr
cmc
mov
cmps
popa
fild
fisub
add
aaa
stc
adc
adc
jge
jns
add
cmp
lea
xchg
mov
scas
mov
and
dec
ins
stos
in
inc
nop
ret
add
jo
inc
icebp
jl
test
int3
ja
jno
out
sbb
test
gs
in
push
pop
mov
jmp
aas
and
test
fwait
add
xor
cmp
cmp
popf
pop
dec
retf
mov
sub
cld
add
pop
mov
loop
cmps
bound
dec
xchg
pop
test
(bad)
jb
mov
inc
push
in
imul
aas
mov
xchg
addr16
arpl
sbb
adc
addr16
ds
mov
cmp
aam
enter
aam
mov
sbb
gs
cwde
inc
pop
and
sbb
jge
or
ret
ins
pop
fstp
inc
les
inc
mov
pop
push
sub
mov
xchg
dec
adc
ret
rol
or
inc
mov
xor
jns
cmps
add
iret
repz
jp
and
mov
ja
or
fdivr
stos
popf
call
xchg
idiv
adc
ret
ins
mov
fild
mov
push
aaa
cmp
out
in
inc
inc
xor
retf
jno
imul
mov
test
mov
sbb
outs
popa
cdq
inc
sti
call
ret
mov
and
pop
fbld
dec
sub
pop
and
imul
std
mov
pop
mov
sti
repz
aam
fs
cmp
dec
movs
xchg
enter
adc
xor
cmp
and
inc
jl
call
fidiv
jmp
cmps
push
sbb
test
aad
pop
xchg
mov
or
pusha
push
enter
pop
call
cs
dec
sub
dec
cmps
mov
fmul
outs
xchg
scas
aas
adc
sbb
mov
mov
jne
out
dec
fcmovb
add
ror
mov
add
mov
push
mov
shl
jecxz
shl
dec
cmps
xor
jecxz
bound
(bad)
add
into
dec
adc
scas
sbb
pop
xor
pop
push
(bad)
nop
movs
mov
inc
mov
sbb
or
or
jae
outs
inc
add
cmp
jmp
sbb
xchg
mov
mov
fdivr
pop
test
cs
fistp
sbb
push
or
jmp
shl
int3
dec
lds
pop
add
jne
adc
test
jg
xchg
daa
mov
stos
adc
stos
pop
push
stos
xchg
mov
push
dec
xor
push
int
call
jg
stos
ret
xlat
cli
jp
dec
add
sbb
pop
lods
cmp
lea
push
inc
push
daa
ret
leave
imul
and
pop
mov
adc
cmps
adc
hlt
or
jmp
cmp
sbb
or
push
pop
xor
pop
dec
mov
push
loope
nop
adc
call
xchg
sub
inc
fnstsw
enter
jns
jg
or
xor
test
dec
addr16
inc
add
xor
jge
outs
push
dec
add
rcr
sub
test
fstp
add
lods
cli
inc
dec
or
aam
nop
mov
cmp
movs
ret
sub
ins
popf
pop
adc
shr
loopne
js
adc
xchg
sbb
mov
inc
dec
repz
leave
mov
and
jbe
(bad)
in
movs
fs
ror
bound
stc
xchg
adc
and
mov
cmp
cmp
cwde
rol
lods
inc
movs
pop
mov
and
xchg
sti
mov
inc
dec
sbb
aaa
(bad)
out
jle
mov
es
cs
jmp
cmc
adc
popf
test
in
xor
fistp
lods
cwde
add
sti
aad
(bad)
dec
fs
xor
push
jge
fcomip
and
push
dec
jns
jb
pop
sar
add
cs
add
push
and
out
mov
push
out
dec
out
cmc
mov
pop
sbb
shl
(bad)
popf
pop
mov
das
daa
mov
jmp
mov
jns
stc
adc
xlat
fdiv
dec
xor
sbb
cmps
pop
popf
push
(bad)
cld
inc
scas
mov
pop
cmp
xchg
cs
fwait
cdq
hlt
dec
jp
std
dec
dec
jne
dec
add
or
and
sub
cmp
adc
inc
jmp
or
mov
xchg
sub
jae
pop
ss
inc
push
jl
jg
sar
xchg
dec
cmp
xor
sub
pop
nop
test
test
shl
lock
xchg
loop
sti
push
fisttp
xor
scas
imul
shl
and
mov
cmc
out
jae
cdq
adc
addr16
mov
push
ret
sar
ret
cdq
cli
jg
popf
push
aad
popf
retf
cmp
mov
lahf
mov
lock
pop
daa
and
dec
sti
sti
enter
pushf
push
std
bound
hlt
xor
cwde
in
or
jns
stos
cmps
clc
mov
xchg
push
cmp
rcr
push
xchg
cmps
fcmovnu
cdq
fstp
stos
in
jp
lods
and
jg
je
adc
arpl
and
in
mov
loopne
sbb
adc
xchg
or
rcl
or
dec
push
jo
addr16
rol
les
ins
lds
hlt
push
int
inc
outs
cmp
sub
in
mov
out
ror
jmp
dec
mov
inc
cmp
stos
sub
rol
mov
mov
mov
or
jmp
(bad)
mov
mov
scas
stos
cmp
adc
cmp
sbb
repz
or
pop
fmul
inc
rol
aas
mov
test
push
fstp
jnp
dec
ss
ins
rcl
xchg
repz
cmc
inc
mov
dec
sub
mov
add
or
dec
mov
xchg
pop
loopne
jae
in
jnp
add
sub
int3
pop
mov
iret
sub
dec
or
into
xchg
outs
int3
mov
mov
(bad)
mov
daa
cmps
(bad)
scas
test
push
mov
sub
rcl
or
jg
mov
gs
dec
mov
popf
lods
sbb
jp
fdiv
lods
aam
mov
pop
rcl
imul
dec
mov
loopne
mov
inc
mov
push
outs
sahf
(bad)
aad
push
mov
loop
pop
xlat
adc
nop
cld
cmp
lods
add
test
jbe
pop
dec
sub
jmp
jne
and
pop
(bad)
xor
mov
mov
jge
fxch
xchg
pop
xbegin
or
pop
mov
int3
sub
sub
xchg
cmp
(bad)
add
lods
cmp
mov
js
cs
call
and
fwait
sbb
adc
push
xor
jle
inc
div
std
int3
inc
imul
test
das
push
in
pop
lock
sub
jmp
(bad)
loope
icebp
cmp
jmp
ss
and
outs
mov
adc
cdq
inc
adc
or
hlt
mov
mov
xchg
push
es
jne
rcr
or
pop
repz
cmp
jl
lahf
jecxz
mov
sbb
push
jne
dec
ret
xor
stos
rcl
je
push
in
sub
push
test
fnstcw
test
cmc
sahf
daa
pop
cmp
and
ins
mov
jp
add
movs
leave
mov
sub
shl
stos
int3
bnd
cmp
imul
mov
jae
ror
or
int
clc
mov
cmp
leave
push
movs
cwde
adc
ins
stc
pusha
pop
mov
bound
loopne
dec
cmc
inc
adc
xor
ins
sbb
in
cs
push
clc
jmp
dec
test
add
stos
xchg
cmps
int3
and
add
shl
cmps
pushf
out
repz
out
or
inc
fstp
popa
dec
iret
sbb
stos
cwde
sub
sahf
pushw
or
pop
adc
fwait
and
fld
outs
clc
leave
repz
dec
loope
(bad)
fisub
stos
mov
cld
xchg
dec
sbb
xchg
jl
jno
pop
xchg
inc
mov
push
cmp
mov
test
pop
sbb
and
cmp
popa
lds
adc
cld
int
and
sbb
cmp
(bad)
xor
inc
popf
cmps
jmp
pop
fst
adc
or
ror
je
pop
pop
test
jne
add
xor
adc
and
add
clc
or
jmp
mov
add
mov
fwait
add
inc
or
push
cmp
(bad)
rol
inc
ror
sbb
aad
cmp
fiadd
inc
mov
out
add
adc
jecxz
retf
fdivr
inc
or
mov
dec
lods
inc
jae
loopne
xchg
jb
adc
mov
(bad)
div
xor
push
stos
imul
or
in
bnd
call
imul
bound
push
jbe
bound
repz
push
mov
cwde
xchg
push
mov
repnz
test
dec
lea
out
test
test
mov
cmp
inc
or
das
nop
mov
(bad)
std
cmp
pop
mov
xchg
out
push
mov
push
xchg
jecxz
and
(bad)
in
push
xor
mov
cmp
int
xlat
jno
adc
and
xchg
nop
call
aam
jmp
iret
lahf
test
adc
push
jno
fcomp
mov
aam
(bad)
out
sbb
prefetch
dec
jmp
out
push
test
loop
stos
mov
out
push
fild
mov
das
rcr
imul
jnp
xchg
(bad)
xchg
lods
push
cld
xor
xlat
dec
jle
mov
les
fdivr
mov
dec
jecxz
sbb
nop
sbb
add
adc
pop
call
xchg
pop
pop
rol
mov
mov
add
mov
fcom
pop
and
mov
and
inc
enter
aam
ss
mov
sub
jb
in
jmp
push
cli
adc
cmp
dec
in
ins
jmp
and
push
mov
cmps
adc
popf
popf
(bad)
xchg
lods
movs
fadd
ror
jl
adc
pop
dec
cdq
adc
pop
or
jp
ins
and
fwait
mov
xchg
movs
or
lock
xchg
mov
jno
stos
cmp
clc
stos
call
xchg
dec
shl
cmc
pop
pop
add
add
dec
fwait
dec
xchg
fidiv
jg
out
xor
sbb
repz
add
ror
cwde
sub
jae
ss
aas
fcomp
push
and
out
push
xor
lea
jmp
loope
mov
aad
stos
js
adc
xor
pop
dec
jne
lea
jne
test
icebp
xchg
dec
ret
loop
rol
jo
pop
push
rcl
lods
aaa
xchg
adc
nop
test
sbb
lahf
sar
sub
dec
fidiv
mov
stos
ss
(bad)
clc
add
int
lods
add
sub
sub
jmp
aaa
pushf
adc
xchg
jmp
dec
adc
ret
push
mov
jp
dec
xor
sti
sub
ficom
mov
aam
cmp
sbb
adc
mov
int
jp
mov
push
jae
imul
dec
in
xchg
mov
arpl
xor
call
stos
inc
rcr
ret
xchg
sti
or
push
cmp
ja
fcmovb
xchg
xchg
pop
out
sbb
xor
dec
popf
nop
jae
pop
add
iret
xor
ins
mov
and
ss
cmp
retf
xor
add
cmps
ins
push
mov
pop
inc
or
add
cmp
cwde
jbe
add
sub
popa
dec
call
repz
push
dec
or
sub
into
repz
mov
inc
bound
push
cmc
mov
cmp
imul
outs
pop
sar
xor
pop
aad
and
repnz
cdq
shr
inc
xchg
int
xor
inc
ror
and
fmul
imul
xor
xchg
lods
dec
inc
gs
mov
pop
jae
inc
daa
and
pop
sbb
scas
cdq
mov
sbb
inc
xor
adc
ins
ins
add
dec
cwde
dec
and
inc
call
jo
mov
mov
(bad)
loop
push
test
ja
cdq
sub
dec
jb
frstor
test
xlat
pop
jmp
jae
int
ret
xchg
daa
inc
cld
jne
xchg
cdq
mov
pop
sub
scas
jmp
push
or
and
shl
loopne
fwait
shl
aam
sub
fld
add
(bad)
adc
bound
cmp
lds
fwait
repnz
jmp
inc
and
fnstcw
mov
shl
add
mov
inc
loope
mov
pusha
nop
or
fs
scas
mov
pop
sbb
(bad)
ror
cmc
test
add
aaa
inc
daa
jmp
ins
shr
jmp
push
movs
inc
add
mov
syscall
dec
rcl
cmp
(bad)
cmp
xchg
jecxz
jmp
loope
stc
and
add
pop
outs
jo
cmp
or
sahf
ins
cs
mov
push
repnz
sbb
sub
rcr
push
bound
mov
add
xor
or
aad
mov
cmp
packsswb
mov
mov
gs
mov
shr
fsub
lea
push
retf
movs
sbb
push
cmp
mov
jge
gs
push
xchg
inc
dec
in
nop
shl
sbb
(bad)
(bad)
aaa
call
sub
int
xchg
pop
sub
les
jle
ds
(bad)
jnp
dec
add
and
adc
mov
aaa
xor
imul
(bad)
mov
retf
mov
push
dec
rep
sub
inc
dec
jo
mov
xor
dec
mov
jmp
ret
cmc
jb
mov
xchg
nop
jl
stc
imul
leave
xchg
sub
sub
xor
in
push
and
fcomp
cmc
sbb
arpl
aaa
jb
mov
pop
repz
push
ins
inc
xor
inc
sbb
push
retf
cmp
mov
(bad)
int3
loop
mov
push
dec
loopne
dec
lods
rcr
push
aad
push
cmp
stos
ins
hlt
loop
fs
ss
jnp
cmp
sar
not
or
mov
fstp
jmp
dec
dec
out
cwde
sub
fbstp
inc
das
fstp
xor
into
pushf
aam
fs
mov
daa
addr16
inc
add
sub
out
cmp
push
data16
ins
and
mov
inc
stos
sub
pop
ret
ret
mov
ds
mov
dec
bound
bound
pushf
xor
fdivr
ds
inc
ret
lods
stos
jg
nop
sbb
sub
dec
push
dec
fsubr
jmp
mov
mov
mov
cli
and
mov
add
enter
test
push
inc
pop
sub
mov
cmp
lods
fild
in
dec
xchg
mov
out
les
jle
lea
mov
mov
addr16
add
mov
xchg
dec
and
imul
test
out
and
pushf
mov
imul
iret
jg
icebp
jmp
jl
xor
pushf
gs
mov
add
and
stos
pop
fsubp
(bad)
pop
cmp
retf
xchg
cmp
sti
mov
jbe
retf
add
retf
std
pop
fdiv
popa
ds
sub
inc
jmp
jl
push
retf
or
in
mov
inc
dec
ins
lea
xchg
rcr
out
cmp
xchg
jbe
stos
pusha
lahf
mov
jne
adc
dec
call
cli
rol
and
pop
and
mov
sub
xacquire
or
mov
fwait
sbb
(bad)
mov
jg
scas
sahf
fdivp
call
cmp
push
dec
(bad)
fdiv
mov
dec
pop
movs
jg
cmp
inc
mov
dec
xchg
mul
ss
cmp
lds
push
inc
jne
jno
mov
cmp
inc
or
std
inc
cmp
enter
enter
arpl
sbb
inc
jnp
call
fsubr
cmp
or
xor
in
std
mov
mov
out
ja
fild
outs
xor
inc
js
sub
rcr
pop
stos
mov
push
outs
ss
mov
jg
add
div
push
mov
mov
mov
setbe
fisub
push
pop
(bad)
mov
mov
mov
rol
sbb
scas
cwde
cmc
and
call
cmc
jo
mov
ja
and
mov
sbb
(bad)
dec
test
(bad)
cdq
pop
mov
lahf
(bad)
sbb
iret
xor
mov
xchg
xchg
pop
or
stc
cs
imul
inc
xchg
jbe
xor
repz
pop
jo
add
out
mov
xchg
ja
or
mov
shl
xchg
adc
out
pop
cld
mov
push
dec
aaa
retf
lods
mov
dec
jnp
xor
or
outs
dec
lahf
pusha
pop
and
jae
movs
and
push
sbb
in
adc
or
(bad)
and
out
cli
cwde
stc
sub
xor
cdq
fdivp
dec
sub
imul
aad
aam
inc
sti
push
mov
push
lods
mov
mov
ret
push
pop
jecxz
mov
xor
and
dec
pop
and
and
aaa
inc
std
scas
or
push
sti
mov
out
push
cmc
xor
xor
lahf
lods
mov
sub
fdiv
or
dec
xchg
sbb
dec
add
jecxz
ja
in
dec
int
push
daa
je
test
call
popf
mov
ds
ret
mov
and
test
pop
lea
or
ds
pop
xchg
adc
jmp
xchg
sub
inc
mul
mov
nop
and
cmps
or
mov
sub
retf
sub
pushf
lahf
dec
stc
imul
inc
xchg
std
stos
lea
sbb
sar
push
ret
scas
cmp
xchg
pop
fcmovne
scas
push
push
jnp
and
sbb
jecxz
inc
inc
clc
and
jne
mov
mov
lea
pop
loop
xchg
gs
dec
aas
inc
sub
in
push
add
and
xchg
cmp
ss
and
inc
dec
test
(bad)
lods
rcr
pop
rcr
xchg
xor
(bad)
shl
popa
sub
stc
jg
movs
out
aad
aam
adc
into
outs
dec
outs
imul
cmp
ins
or
mov
test
movs
arpl
push
cmp
lods
and
push
or
dec
xlat
popf
dec
shl
jle
mov
push
int
adc
xchg
jl
les
das
mov
jl
ja
lea
pop
jecxz
fimul
adc
clc
mov
mov
xchg
fild
mov
sti
mov
call
(bad)
bound
(bad)
sub
nop
mov
cld
stos
inc
(bad)
inc
mov
xchg
lods
xor
out
and
clc
pop
sub
pop
push
test
stos
sahf
rcr
add
loope
ins
das
daa
(bad)
mov
cld
or
pusha
push
arpl
add
xchg
cwde
into
sbb
add
ret
xchg
in
lds
bound
imul
js
lahf
push
fcmovnb
adc
pop
mov
shr
dec
dec
xchg
std
push
(bad)
fwait
adc
ds
jge
jno
ficom
or
mov
clc
das
xchg
mov
out
mov
dec
shl
enter
fisub
jmp
push
pop
jns
fldcw
mov
jecxz
out
xchg
cs
stc
dec
adc
dec
push
push
jne
xor
xchg
in
push
lds
(bad)
ficom
movs
adc
shr
adc
push
or
push
sub
jmp
mov
enter
into
inc
jp
out
xor
mov
cmps
clc
scas
push
push
mov
or
sbb
push
idiv
adc
inc
push
es
sub
sbb
xor
inc
mov
mov
enter
or
jmp
retf
mov
mov
jnp
or
outs
cmp
scas
loope
imul
push
jl
nop
xchg
or
fbld
mov
gs
stos
inc
sar
mov
inc
pop
cmovle
sahf
mov
cmovae
jbe
cmp
das
aaa
pop
mov
std
inc
std
adc
gs
dec
sbb
gs
mov
sub
push
out
hlt
scas
mov
jmp
mov
fdiv
dec
xlat
dec
inc
xchg
jp
inc
icebp
mov
mov
imul
hlt
(bad)
lock
xlat
xlat
pop
loop
xor
push
mov
add
sub
pop
mov
(bad)
xchg
shl
loop
popa
add
pushf
nop
inc
mov
xor
leave
jae
and
jne
ret
not
inc
aam
stc
or
push
call
sbb
xor
int
ror
pop
es
cwde
dec
cwde
aaa
imul
push
adc
sahf
cli
sar
and
stos
sar
inc
loope
test
dec
mov
mov
outs
cmp
leave
adc
pop
or
pop
jno
fcmovb
and
or
mov
jb
push
icebp
or
rol
out
pop
movs
push
popf
loopne
ror
push
sub
ret
xchg
in
iret
fdiv
lods
push
sbb
ficomp
outs
dec
mov
inc
pop
popa
dec
outs
in
pop
test
sub
popa
jmp
push
pop
push
add
dec
neg
xchg
push
add
retf
dec
dec
out
xchg
or
push
inc
popf
and
ficomp
and
mov
enter
pop
je
adc
fcmovb
cs
pop
sbb
add
xor
sti
pop
stos
js
mov
gs
dec
or
cdq
cmp
retf
mov
inc
mov
sbb
dec
inc
mov
xlat
aam
ss
test
lock
and
fist
mov
dec
xchg
cmovne
mov
int3
mov
or
xchg
xchg
mov
mov
mov
pop
dec
jb
fimul
pop
add
jmp
repz
out
cmp
idiv
mov
jo
addr16
shr
arpl
and
jge
add
aad
cmp
cmp
mov
mov
fldenv
mov
or
xchg
inc
sahf
sbb
lods
inc
stos
sbb
mov
std
sub
lods
in
xchg
adc
fcom
aam
mov
ins
fisub
jne
push
je
es
sub
pop
fist
mov
popf
sub
test
pop
xchg
jmp
dec
dec
push
jge
xchg
iret
lods
push
into
xchg
fisub
repnz
cdq
rol
sbb
jnp
ret
sbb
jbe
jo
or
repnz
mov
fcmovne
inc
aam
jp
(bad)
inc
fisttp
dec
pop
adc
pop
rcl
cs
repz
test
ret
sahf
sub
lock
icebp
icebp
jmp
mov
push
mov
iret
or
jmp
xchg
mov
cmp
mov
and
repnz
fwait
outs
add
pop
dec
sub
inc
popa
adc
out
xlat
add
jns
not
dec
mov
repnz
add
bound
test
jg
in
pop
sub
outs
in
pop
cmp
lods
cdq
cmp
cdq
dec
xchg
cmps
shl
xchg
mov
cmp
in
sbb
out
ins
xor
adc
and
mov
retf
cmp
inc
je
int
ins
out
jne
lods
mov
das
aaa
test
retf
cmc
mov
jns
nop
lock
push
lock
lds
mov
std
cli
aad
sbb
pop
dec
hlt
call
inc
cmc
imul
mov
gs
push
jecxz
inc
aad
push
in
jno
pop
or
in
adc
cmp
mov
push
outs
scas
and
data16
gs
jp
in
cmp
std
inc
mov
sbb
sti
test
mov
cmp
mov
cdq
adc
mov
rol
fisttp
fimul
jg
xor
ret
jmp
push
into
lahf
xor
mov
cli
push
das
pop
sub
inc
sbb
dec
pusha
loopne
aaa
cmp
sub
push
or
sub
or
es
mov
push
cmp
pop
pop
jnp
in
mov
dec
jecxz
inc
inc
inc
aam
movs
add
inc
cmp
jae
hlt
or
dec
mov
mov
mov
xchg
inc
bound
inc
nop
inc
jmp
retf
mul
aas
ss
movs
inc
pop
dec
sub
(bad)
ins
lods
fwait
js
dec
arpl
mov
sbb
imul
or
jecxz
shr
cld
js
gs
(bad)
lahf
sub
dec
jg
loopne
gs
or
mov
add
gs
aas
imul
push
loopne
stc
mov
test
jae
pop
adc
sbb
adc
imul
inc
cld
inc
test
mov
sbb
xor
pop
mov
mov
sbb
lods
mov
xchg
mov
add
mov
adc
aas
mov
adc
test
shr
sub
mov
xor
popa
mov
imul
dec
jns
add
shr
imul
and
mov
lock
out
icebp
sbb
jae
imul
pop
ja
fs
mov
outs
or
rcr
rcr
iret
mov
loopne
mov
and
sbb
movs
daa
std
xchg
add
int
add
mov
fidiv
dec
mov
add
popf
scas
mov
sub
pop
push
fnstenv
cmp
add
xor
mov
adc
xor
mov
ret
(bad)
rcl
push
ds
cmp
aam
adc
jle
retf
aam
mov
lahf
sbb
pop
lahf
(bad)
push
aas
cmp
sar
mov
xchg
hlt
push
aam
and
loop
jb
cmp
xchg
add
xchg
(bad)
xchg
jmp
test
jp
dec
enter
add
inc
imul
in
pop
mov
inc
sub
fucomip
out
ins
(bad)
int3
adc
cmps
cmp
cmp
scas
sub
(bad)
add
test
mov
dec
into
mov
lods
(bad)
outs
stos
sahf
cli
cmp
gs
cmp
cmps
ds
movs
and
sub
inc
in
mov
out
pop
cdq
mov
push
xchg
push
lahf
sbb
push
pop
in
cmc
push
cmc
jb
pop
cmp
jmp
add
mov
mov
hlt
push
add
inc
mov
pop
lea
aad
out
xchg
stos
xchg
sub
shl
std
jo
cmps
sbb
push
push
aam
bound
sbb
jge
fist
ret
jnp
test
jp
sub
jmp
cli
lock
scas
push
(bad)
aad
aad
pop
fwait
inc
dec
or
fstp
scas
sub
sub
mov
or
cmps
jmp
push
pop
dec
push
push
cli
mov
das
cmp
leavew
cmc
and
int
and
and
xchg
mov
mov
mov
fadd
loope
adc
dec
mov
nop
aam
pusha
adc
aam
and
imul
ror
mov
fnstcw
xchg
jmp
cmp
in
fcomp
aaa
shl
mov
mov
inc
cs
loop
dec
ja
cwde
mov
enter
mov
xchg
dec
int3
cmp
scas
mov
push
pop
adc
cmp
push
mov
es
dec
pop
cmp
repnz
imul
cmp
or
out
out
pop
fidiv
loopne
push
jl
inc
repnz
push
dec
mov
scas
xchg
jl
mov
rcl
ins
fnstsw
or
add
sub
mov
push
xor
push
jns
pop
xor
and
dec
sub
mov
and
into
cwde
jae
loop
pop
jb
xchg
mov
mov
test
jl
sbb
lea
cmp
test
pop
(bad)
fmul
js
pop
add
or
inc
popa
jp
(bad)
scas
push
mov
mov
cs
aam
mov
movs
mov
int
xchg
and
add
adc
test
pop
push
ds
dec
lods
mov
mov
js
mov
test
test
push
in
outs
xor
dec
pushf
adc
or
out
or
mov
sub
lods
neg
jge
cmp
jmp
mov
fcmovnu
lds
push
sub
clc
sbb
ja
lods
mov
push
arpl
fisubr
(bad)
les
(bad)
cwde
mov
cli
in
(bad)
rol
mov
icebp
and
repz
sbb
xor
addr16
sti
in
push
iret
fisubr
adc
cmp
clc
les
(bad)
pop
xchg
add
test
push
push
repnz
and
fwait
stos
into
jns
mov
or
pop
mov
sub
pusha
into
cli
popf
out
test
cmps
cmp
scas
dec
mov
or
lods
es
or
push
lods
test
das
mov
fadd
call
sar
test
or
arpl
rcr
out
jb
call
push
repz
in
or
cmp
aad
or
jmp
inc
jo
jecxz
hlt
(bad)
push
pop
mov
ins
in
push
sub
fsubr
jnp
retf
mov
xchg
jne
or
daa
xor
jnp
adc
push
das
push
mov
and
mov
(bad)
out
test
(bad)
dec
xchg
mov
add
popf
das
or
inc
ja
and
stc
push
(bad)
div
push
jle
and
imul
ja
dec
xchg
out
or
test
mov
out
jmp
imul
es
add
mov
test
punpcklwd
mov
jne
es
jnp
fbstp
pushf
frstor
rcl
xchg
dec
imul
push
fs
cmp
mov
mov
dec
je
sbb
je
loope
jecxz
or
jecxz
push
sub
cmp
mov
fstp
jne
nop
ret
div
and
xchg
out
or
icebp
dec
mov
aas
add
sub
(bad)
xchg
movs
pop
les
test
sbb
or
sbb
add
(bad)
loopne
mov
xor
ins
jmp
maxps
jge
mov
pop
dec
es
fs
jp
push
lods
(bad)
call
(bad)
mov
xchg
loopne
inc
push
mov
inc
aam
int3
sbb
out
xchg
fimul
jmp
test
fndisi(8087
cmp
adc
pop
es
nop
sar
(bad)
clc
fcom
cmp
sbb
popf
enter
add
pushf
mov
mov
cmp
iret
icebp
push
inc
and
mov
scas
dec
cli
icebp
xor
repnz
out
mov
fisubr
dec
call
pop
jecxz
in
lods
out
pushf
scas
adc
stc
fsub
call
das
mov
sbb
aam
xchg
iret
push
cmp
jne
jl
loopne
or
cmp
cmp
cmc
pushf
test
fsub
mov
adc
cli
or
jmp
movs
push
cmp
xor
dec
sub
xor
(bad)
pushf
xchg
popf
dec
in
add
pop
out
bound
mov
inc
jg
sbb
xchg
jge
sub
mov
in
int
adc
adc
je
sbb
cli
arpl
or
jg
(bad)
sar
xchg
imul
sbb
sahf
and
pushf
mov
xchg
shr
(bad)
das
cmc
fs
div
pop
stc
ins
retf
data16
xchg
fisubr
sbb
cmp
jmp
(bad)
dec
movs
not
sub
ins
aas
dec
ret
sbb
mov
push
add
ds
int
inc
jb
dec
outs
xor
aas
or
mov
adc
in
push
out
in
xchg
(bad)
add
dec
push
in
adc
mov
imul
mov
lods
cs
mov
sbb
ja
bound
push
pop
add
push
pop
jne
mov
stc
jmp
shl
(bad)
shl
mov
adc
fwait
jmp
cli
stos
ror
js
sub
lods
js
push
jne
dec
push
or
sub
inc
adc
retf
aaa
add
(bad)
loope
add
mov
ss
lock
imul
in
in
out
scas
push
imul
stos
sbb
or
and
pop
cld
lock
jae
cmp
mov
stc
rol
cmps
(bad)
shl
adc
xlat
adc
sbb
cmp
push
mov
cmp
ret
inc
and
loopne
fisub
jae
mov
shr
jecxz
or
pop
mov
and
or
mov
fadd
dec
fild
dec
adc
mov
shl
cmp
pop
or
jmp
(bad)
imul
cwde
es
out
cmp
das
cmp
jo
cdq
ret
stc
adc
adc
add
mov
outs
xor
pop
or
add
addr16
cmp
les
orps
call
or
and
inc
cmps
xor
push
dec
lods
cdq
in
sub
ins
out
mov
xchg
iret
mov
sbb
jb
test
push
daa
add
je
cmps
and
push
pop
es
test
or
mov
inc
dec
ror
scas
pushf
cli
xor
adc
mov
mov
jle
xlat
lods
push
mov
push
cmp
outs
call
cs
jnp
sahf
(bad)
ror
pop
push
inc
inc
dec
mov
stc
lock
xor
inc
les
movs
outs
frstor
inc
in
jb
in
sub
ret
int3
loopne
push
jbe
push
or
push
or
ss
lds
and
icebp
inc
sub
mov
dec
or
repz
das
mov
mov
les
ret
inc
and
retf
iret
stos
sti
ins
out
pop
in
fsub
mov
cmp
shl
outs
jmp
jo
xor
lds
inc
push
aas
loop
xchg
test
sar
stos
push
retf
pop
inc
shl
fimul
cmp
ss
inc
sub
pop
xchg
xchg
sub
fsub
dec
lods
jmp
mov
test
jbe
outs
nop
jo
mov
or
aam
fcomp
in
test
adc
icebp
xor
jecxz
popa
js
call
xchg
mov
mov
dec
(bad)
add
call
pop
mov
mov
idiv
enter
mov
add
test
mov
call
jns
inc
(bad)
sub
les
mov
pop
(bad)
call
or
out
cmps
(bad)
stos
(bad)
cmp
clc
mov
push
fdiv
xchg
sbb
stos
xchg
sub
mov
gs
add
ficom
test
lock
repnz
fwait
fwait
add
push
pop
ret
jl
fld
adc
pop
add
ret
dec
xchg
mov
js
lods
(bad)
dec
cmp
inc
pushf
call
pop
or
dec
in
xor
shl
pop
xor
je
rcl
fistp
add
les
xchg
dec
add
stos
add
(bad)
retf
ss
in
call
xchg
cmp
(bad)
shr
iret
push
push
popf
push
add
mov
je
jae
xor
mov
push
add
jmp
mov
inc
mov
test
sub
aas
ficomp
or
mov
sbb
inc
and
mov
push
mov
shl
sub
icebp
pushf
fs
ja
xlat
inc
ror
repnz
mov
adc
js
clc
add
sbb
das
or
inc
jp
jge
stos
sub
pop
mov
xor
clc
inc
pop
popf
pop
inc
add
mov
outs
icebp
sbb
jns
out
cmc
sbb
shl
lods
daa
mov
cmp
aaa
fsub
leave
pop
sbb
ret
shl
and
jle
fstp
test
add
test
push
jg
cmps
ret
push
or
jmp
sbb
add
(bad)
movs
data16
jae
dec
test
xchg
jnp
jno
movs
shl
lods
lea
iret
jmp
mov
sar
jge
lahf
xchg
adc
std
and
mov
call
or
mov
sti
cdq
adc
scas
sbb
int
or
pop
data16
jmp
nop
(bad)
push
int
mov
cwde
and
std
cmp
jle
lods
sbb
sbb
xor
fwait
or
fadd
loop
sar
fucomip
dec
and
inc
inc
cmc
mov
mov
fadd
inc
pop
leave
lea
daa
dec
in
pop
inc
cmp
sub
fdiv
sbb
jmp
or
or
sbb
sbb
daa
(bad)
push
ins
xor
addr16
ror
out
(bad)
mov
sti
jmp
lds
add
add
dec
dec
ror
jo
call
pop
test
aad
mov
sbb
fiadd
popa
sub
ins
xchg
scas
fiadd
pusha
test
adc
or
stos
std
das
mov
adc
mov
out
(bad)
pop
je
retf
adc
fsubr
test
dec
or
jno
sahf
dec
loopne
push
icebp
sub
mov
xlat
cdq
xchg
mul
out
sbb
adc
push
idiv
ret
leave
push
aam
fisttp
dec
and
outs
cli
sbb
shl
fdiv
test
sbb
add
outs
and
adc
clc
ds
mov
push
out
cmp
or
test
adc
add
sbb
add
xchg
mov
fwait
lahf
ss
sub
jp
pop
mov
sbb
inc
mov
imul
cli
mov
inc
fisub
adc
pop
inc
inc
cld
(bad)
popa
sub
sub
stos
jne
and
sahf
stos
mov
icebp
mov
into
jne
cmps
inc
cdq
mov
pop
out
pop
mov
lahf
fmul
ror
mov
popa
(bad)
lahf
inc
aam
mov
sbb
imul
push
out
js
test
or
mov
pushf
jmp
scas
sbb
inc
cmp
popf
vcvtsi2sd
jp
or
cmova
push
mov
push
repz
add
add
cmps
adc
mov
loope
add
jmp
mul
test
mov
idiv
mov
pop
addr16
xchg
push
hlt
in
xchg
xchg
mov
or
inc
call
xchg
lds
sbb
xor
mov
jnp
push
enter
sbb
jg
(bad)
inc
ret
pop
cdq
adc
(bad)
mov
and
inc
xchg
loope
popa
pop
shl
jle
mov
push
in
xor
fistp
sub
sbb
pop
xor
ror
xor
inc
or
cli
inc
mov
inc
add
inc
out
jb
push
jmp
mov
mov
test
mov
push
push
adc
sub
(bad)
mov
lods
imul
daa
pop
push
push
dec
cmp
dec
cs
or
xor
repz
cmp
in
mov
hlt
inc
sbb
retf
aas
inc
adc
dec
pushf
lds
jns
dec
jns
or
pop
cwde
push
sbb
cwde
ins
push
pop
push
mov
(bad)
fisub
fnstsw
in
fld
add
not
loopne
sub
push
or
fidivr
xor
inc
jae
fcmovnbe
push
(bad)
aad
sbb
test
js
jmp
mov
push
mul
lahf
adc
aaa
sbb
jmp
xor
xor
jno
or
pop
bound
call
cdq
or
sub
imul
fldenv
sar
dec
dec
or
mov
ret
dec
push
jne
push
call
sbb
jns
jmp
and
mov
and
cwde
add
ret
imul
adc
ss
cld
jae
xchg
adc
cmp
jb
adc
jmp
sub
push
inc
popf
dec
cli
hlt
and
loop
jg
jnp
dec
aas
or
data16
jmp
xor
pop
outs
mov
jnp
jg
pop
mov
mov
lds
adc
mov
push
scas
retf
and
mov
pop
sbb
(bad)
imul
mov
retf
fisttp
into
add
xchg
imul
xchg
pop
mov
ja
aam
jge
retf
mov
pop
retf
outs
sahf
and
sti
push
sub
inc
in
js
cs
xchg
push
and
jmp
cmp
fdiv
shl
mov
xor
nop
imul
into
imul
push
(bad)
jne
add
fs
jb
inc
and
pop
xor
inc
aaa
and
mov
imul
jae
xchg
mov
pop
sub
stos
mov
clc
loop
mov
dec
or
dec
das
dec
xchg
sbb
shl
outs
cmp
fild
scas
sub
pop
daa
sar
cmp
aaa
inc
fs
es
sub
add
push
nop
jle
push
mov
cmp
loope
jns
popf
(bad)
adc
push
ds
mov
cmp
mov
jne
stc
out
mov
xor
mov
inc
mov
xchg
and
in
xchg
xlat
in
jns
add
bts
xchg
movs
aad
scas
pop
je
push
mov
imul
scas
jno
push
mov
stc
in
icebp
xor
dec
imul
lds
xchg
(bad)
mov
clc
mov
push
or
ss
lea
mov
push
ficom
sub
in
adc
lods
outs
cs
pop
mov
cmp
arpl
pop
inc
add
repnz
mov
push
inc
je
push
movs
jp
lea
add
dec
rol
adc
and
loope
xor
xchg
repz
add
push
push
imul
adc
mov
inc
aas
pop
aas
fwait
into
je
push
pop
fmul
push
out
pop
add
sbb
cmp
ins
mov
shr
mov
push
inc
or
push
pop
fs
xchg
xchg
pop
add
push
rcl
or
mov
ds
pop
not
lock
ins
xchg
les
test
mov
xchg
repz
aad
aas
mov
push
out
pushf
push
icebp
gs
and
push
arpl
lods
mov
fmul
sbb
cmp
cmc
fild
fistp
xor
jnp
and
xchg
inc
inc
into
ret
ja
jmp
iret
cmc
mov
add
ret
inc
dec
imul
sbb
dec
in
scas
or
adc
or
mov
jecxz
mov
mov
sbb
xchg
pop
movs
mov
add
pop
loop
push
xchg
mov
sub
jg
adc
jmp
rcr
inc
and
push
sbb
repnz
test
sub
mov
mov
shl
cmp
in
imul
add
pop
or
bound
movs
mov
movs
idiv
aad
or
add
call
rol
data16
cld
cmps
call
rcr
out
stc
sar
sub
cmp
jp
test
add
je
mov
out
ja
ret
and
lea
lea
sahf
or
outs
add
sbb
jmp
inc
hlt
adc
push
loopne
icebp
push
test
in
es
stos
pop
lods
jg
cwde
int
movs
daa
jmp
xor
out
push
sar
cli
mov
mov
lss
clc
mov
xchg
xor
scas
cmp
pop
mov
das
(bad)
gs
aad
mov
push
mov
sub
inc
pop
xor
sbb
mov
fs
jns
imul
jecxz
(bad)
push
pop
add
scas
mov
add
out
fisubr
push
dec
mov
mov
cmp
int3
xor
rol
cmp
mov
repz
dec
in
out
push
cmc
retf
add
inc
inc
mov
fwait
dec
mov
jl
pushf
jmp
dec
ins
movs
jp
fcomp
fimul
(bad)
pop
jge
mov
jg
mov
adc
lods
jmp
xchg
fsubr
cmp
xchg
dec
sub
fisttp
cmp
mov
cwde
sbb
add
das
fcmovnu
xchg
dec
adc
in
push
mov
(bad)
scas
add
dec
jl
sub
jbe
cmp
retf
push
(bad)
test
dec
(bad)
mov
movs
jne
add
shr
shl
xchg
push
or
idiv
dec
mov
fcomp
movs
loop
movs
jl
aaa
cmp
mov
dec
add
not
out
push
in
dec
pop
mov
dec
call
sbb
test
pop
mov
sub
and
jle
lahf
mov
loopne
sbb
fild
pusha
and
aaa
add
sub
loope
inc
mov
popf
xor
mov
jns
push
sbb
into
push
pop
sub
lods
push
bound
pushf
mov
leave
rcr
push
mov
cmp
lods
cs
ja
and
add
lods
fimul
xor
les
cmps
fmul
(bad)
cs
push
push
aam
mov
xlat
les
jb
jg
add
or
jp
call
dec
popa
inc
pop
sar
pop
xchg
or
add
mov
xor
outs
sub
icebp
mov
out
xchg
ins
call
loop
fld
sti
jecxz
add
stos
xchg
stos
cmps
mov
jo
mov
xlat
push
add
jne
popf
mov
and
fisubr
mov
xor
mov
xchg
sub
sub
add
xchg
mov
sbb
pushf
push
into
fld
shr
push
pop
and
dec
nop
cmp
int3
jmp
cmp
(bad)
clc
inc
dec
ds
jbe
les
dec
adc
jge
push
mov
enter
jecxz
lds
shl
push
out
push
adc
adc
mov
jmp
fdiv
pop
mov
dec
inc
cli
sub
inc
mov
mov
push
out
push
adc
inc
out
jno
mov
dec
out
dec
pusha
imul
jge
stc
test
pop
and
mov
(bad)
mov
or
cmp
loope
in
mov
clc
pop
push
pop
jle
jne
add
aad
sti
test
mov
push
std
xlat
xlat
push
loopne
ja
sbb
stc
mov
test
loope
hlt
adc
xchg
mov
dec
in
rol
call
push
pushf
xchg
jo
or
and
cmp
cli
sar
call
pop
test
pop
pushf
jnp
xchg
and
cmc
icebp
dec
sub
xchg
test
push
pusha
add
scas
sti
inc
mov
xchg
and
rcl
push
stos
jp
adc
pop
adc
fcomp
sub
sbb
retf
xchg
aad
jg
mov
ins
adc
imul
inc
int
adc
shl
mov
(bad)
pop
in
fild
push
xchg
movs
jno
imul
mov
pop
cs
xchg
xchg
outs
fisub
fst
stos
inc
sbb
cmp
ds
(bad)
cmp
push
inc
int
lock
imul
or
pop
cdq
sbb
call
lahf
push
cmps
mov
lock
arpl
cmps
sti
nop
inc
in
sub
and
ja
jo
idiv
call
sub
out
aad
push
call
aad
stc
sub
cld
xchg
lods
push
mov
dec
sbb
mov
inc
pop
push
(bad)
push
cld
imul
(bad)
and
(bad)
in
sub
cld
mov
cdq
call
pop
and
loop
popf
loop
lea
les
mov
test
lock
fldlg2
push
pop
and
xor
sub
mov
adc
push
sub
(bad)
outs
loop
lock
add
xchg
mov
jno
and
addr16
dec
cmp
into
rol
cmps
lock
pushf
sub
ss
xor
dec
xchg
adc
inc
test
jae
pop
xchg
adc
das
dec
mov
(bad)
out
xlat
jnp
mov
loop
inc
and
adc
bound
fmul
sub
jbe
retf
jb
test
mov
inc
adc
pushf
jnp
fwait
mov
jg
movs
add
test
mov
gs
push
fsubp
ins
adc
repnz
mov
rcr
sub
(bad)
hlt
inc
adc
sahf
aad
mov
mov
mov
data16
movs
push
mov
addr16
or
loope
ret
test
dec
in
cmp
out
jmp
cwde
pop
push
and
popa
outs
arpl
movs
repnz
sub
xchg
mov
ror
mov
sub
retf
add
xchg
fcomip
jbe
test
ins
xor
or
pop
rcr
mov
jl
aas
adc
lods
xchg
sbb
(bad)
ja
into
dec
js
daa
cld
daa
mov
iret
aam
mov
(bad)
(bad)
pushf
dec
or
test
and
jns
aad
(bad)
jmp
(bad)
je
and
nop
push
(bad)
(bad)
mov
sbb
(bad)
dec
pushf
clc
mov
lds
shl
outs
adc
retf
add
sbb
inc
fcmovnbe
push
xor
lahf
nop
dec
movhps
pop
lods
push
cmp
push
mov
daa
pop
(bad)
mov
push
daa
iret
push
cmp
call
daa
xchg
or
inc
icebp
pop
mov
loop
pop
push
nop
jecxz
pop
(bad)
ds
sub
adc
xchg
cwde
outs
mov
cld
or
mov
jge
jb
stos
popf
jecxz
push
callw
inc
ret
fsubr
lods
xor
or
jb
fadd
in
or
xchg
pop
ja
mov
sbb
push
les
cmp
xchg
jmp
or
icebp
inc
pop
cwde
stos
popa
rcr
inc
shr
mov
lahf
sbb
fiadd
cmps
and
cli
shr
pop
xor
aam
pusha
icebp
add
jnp
add
mov
rcr
nop
jge
mov
cmp
and
leave
test
inc
sbb
xchg
call
push
and
adc
mov
inc
and
jnp
movs
mov
stos
push
xor
mov
cmps
popa
inc
push
sub
cmp
inc
pushf
xor
fisttp
jne
ja
or
pushf
test
(bad)
cmp
scas
sti
dec
hlt
jle
(bad)
sbb
mov
imul
push
push
jl
xor
scas
mov
sub
outs
pop
icebp
xchg
jl
je
jns
call
repnz
or
pusha
mov
retf
clc
int3
push
xchg
jbe
push
(bad)
shr
shl
test
jnp
dec
sar
aad
lods
sub
into
pop
in
scas
in
mov
jmp
dec
rcl
ss
fiadd
loop
or
popf
inc
and
push
xor
xchg
int3
stc
js
ret
repnz
ret
sbb
dec
push
mov
mov
stos
imul
(bad)
jecxz
arpl
xchg
inc
dec
inc
rcl
jns
(bad)
jl
icebp
xchg
mov
jl
or
xchg
retf
cmc
inc
mov
sar
ja
adc
ins
gs
cs
jmp
xlat
enter
pop
ins
mov
stos
add
adc
add
(bad)
xor
outs
test
sbb
out
sbb
int
bound
sub
in
push
or
imul
mov
aaa
out
xchg
mov
cs
cwde
sub
call
inc
add
ror
aas
(bad)
pop
or
loope
lods
das
xchg
pop
mov
in
and
and
pop
and
xchg
cdq
sub
fprem1
sbb
imul
add
sbb
sub
and
imul
add
mov
pop
push
pop
pop
ficomp
pop
and
imul
les
xchg
aad
loope
out
push
xor
outs
lods
jne
sar
sti
cdq
xchg
pop
and
cli
mov
jp
shl
mov
js
cmps
test
and
sbb
ja
pop
aaa
hlt
xchg
adc
aam
jns
je
test
sbb
ret
mov
inc
pop
mov
lods
aas
fdiv
adc
mov
loope
jnp
xor
cmp
pop
mov
ficom
xor
cmp
in
int3
ret
aaa
push
mov
push
mov
adc
xchg
mov
xchg
push
xchg
jne
or
mov
fistp
test
add
leave
scas
and
fwait
mov
jp
pusha
and
hlt
jle
adc
jmp
cld
leave
jmp
xchg
iret
adc
aam
mov
mov
and
(bad)
int3
and
call
sub
outs
fild
in
aam
sahf
xor
(bad)
xor
jo
jp
repnz
lahf
xor
xor
(bad)
sbb
mov
dec
xchg
xchg
mov
xchg
cmp
inc
clc
sub
mov
mov
test
cmp
(bad)
std
mov
dec
in
push
xor
jbe
mov
xchg
add
retf
(bad)
mov
xchg
add
in
ins
call
(bad)
dec
test
in
(bad)
dec
mov
push
ret
in
das
adc
popa
sub
adc
int3
adc
or
retf
fcom
push
mov
inc
icebp
shr
mov
add
aas
pop
jg
xchg
jo
xchg
jecxz
test
mov
fwait
aaa
fcom
fisttp
(bad)
sub
pop
jl
inc
fs
inc
fwait
mov
leave
push
mov
cmps
push
scas
push
push
sar
jae
mov
fadd
sub
dec
mov
add
and
jnp
inc
imul
mov
pop
repz
mov
mov
fisub
xlat
inc
mov
(bad)
loopne
pop
add
push
psubq
sub
lods
test
mov
adc
inc
test
mov
outs
and
(bad)
inc
out
test
add
rcl
mov
jbe
pop
movs
adc
fcmovb
lahf
(bad)
pop
sar
(bad)
pop
icebp
out
jbe
cmp
dec
add
push
icebp
clc
or
cmp
jg
cmps
(bad)
out
jle
fild
add
xor
inc
stos
mov
and
sub
jecxz
stos
int
sar
pop
inc
test
fsubr
daa
pop
sahf
test
jne
jo
jl
aaa
es
cmp
pop
nop
scas
cmps
retf
je
pop
nop
pop
cmc
das
cmc
aam
mov
push
mov
or
and
jae
mov
das
imul
movs
add
mov
mov
or
jae
sub
test
add
sbb
pop
fisub
mov
sbb
pop
fsub
and
out
(bad)
out
shl
push
gs
sti
loop
mov
jmp
repnz
xor
es
outs
out
stos
mov
rol
mov
ss
pop
jb
push
rcl
repz
ds
movs
ficomp
xchg
jbe
in
mov
dec
adc
loope
daa
mov
out
sub
mov
test
aad
fcmovnu
rcr
je
push
js
scas
pop
mov
nop
add
cld
mov
mov
adc
movs
hlt
icebp
cmps
pop
cmp
mov
call
sbb
movs
push
or
scas
jle
in
imul
ror
cli
sbb
pushf
cdq
adc
enter
lock
test
push
call
push
sub
mov
or
pop
xchg
xchg
mov
push
shl
aam
test
aad
sub
shl
jmp
retf
icebp
mov
xchg
mul
sbb
lock
or
push
bound
in
icebp
xor
xor
mov
std
mov
pop
shl
and
adc
sahf
dec
ja
(bad)
into
cwde
cmps
ret
das
outs
xchg
aam
sub
movs
ja
xchg
or
test
or
mov
or
mov
(bad)
cmc
loope
inc
test
mov
cmp
sub
jg
mov
stos
loop
fsub
(bad)
repnz
push
mov
sbb
mov
test
in
cmp
sar
mov
fnstsw
(bad)
jp
push
dec
pop
stos
jp
cli
xor
rol
and
and
pop
sub
mov
add
jmp
(bad)
test
lock
in
data16
scas
pop
pop
lods
push
pop
mov
stos
(bad)
or
mov
out
jmp
sub
dec
dec
and
into
pop
push
inc
(bad)
call
sbb
daa
cmp
fist
mov
lods
or
movs
pushf
pop
and
ja
push
call
les
xlat
hlt
das
xchg
ins
add
mov
mov
xchg
pop
dec
pop
xor
popa
jbe
rol
es
pop
mov
fistp
xor
mov
sbb
nop
adc
es
pushf
jnp
fstp
and
shl
lock
jb
inc
push
dec
add
dec
jmp
aam
xor
and
jno
lahf
mov
into
lods
(bad)
addr16
aaa
mov
inc
lea
xor
shr
shl
add
outs
or
mov
js
inc
(bad)
push
lds
and
aaa
(bad)
dec
mov
(bad)
addr16
or
adc
mov
popa
out
clts
pop
in
retf
push
jmp
(bad)
and
addr16
mov
sbb
in
hlt
push
jns
xor
test
add
out
adc
lods
not
push
sub
addr16
pop
mov
sub
lds
js
lock
das
clc
es
(bad)
aam
aad
stos
xchg
cwde
lea
ror
mov
in
cmp
push
add
int
stc
sti
jp
shr
jle
fisubr
mov
(bad)
jmp
dec
add
ds
icebp
mov
mov
std
and
ds
jbe
push
adc
jecxz
add
jmp
popa
in
aam
mov
retf
mov
cmp
jmp
mov
cdq
push
sub
fs
dec
lock
cli
cmp
dec
xchg
sahf
cmp
pop
cmovs
mov
aaa
jg
jl
test
neg
lods
cmp
add
js
das
(bad)
lds
add
rcl
pushf
xchg
out
in
jns
retf
sub
xor
mov
mov
ja
jb
popa
jl
ss
and
sbb
adc
or
push
inc
add
xchg
mov
cwde
data16
or
or
shl
pop
imul
movs
sbb
and
dec
pop
int
cs
movs
xor
cmp
sbb
inc
mov
ret
ret
popf
dec
(bad)
ins
mov
lahf
push
and
aam
inc
mov
xchg
iret
es
les
rcl
scas
jg
jno
imul
or
pop
sub
pusha
cmc
mov
add
xchg
stos
sub
mov
jp
out
pop
adc
out
lahf
jnp
mov
frstor
xchg
ja
mov
xchg
cdq
in
add
jmp
cmp
jg
fst
test
push
and
adc
xchg
push
popf
(bad)
fld
mov
cmp
clc
shl
push
pusha
inc
hlt
inc
sub
cld
add
and
cli
xor
stc
adc
mov
xor
arpl
aam
sbb
lods
fimul
setg
cdq
cli
clc
add
and
ins
movs
adc
frstor
or
(bad)
and
out
outs
jmp
xor
sbb
pop
es
(bad)
aaa
test
(bad)
sbb
(bad)
in
out
stos
(bad)
iret
sub
das
outs
(bad)
stc
xchg
dec
dec
cmp
cwde
jecxz
and
and
cdq
ss
dec
test
cdq
xchg
ins
lock
stc
dec
ins
xchg
daa
dec
push
add
push
call
lock
gs
mov
xchg
lock
adc
push
outs
push
and
sub
jae
mov
lods
xchg
mov
cwde
xor
mov
pop
aaa
dec
jae
hlt
js
ret
out
shl
inc
pop
jp
cmp
xchg
pop
les
das
xchg
lds
mov
and
ja
push
cmps
out
arpl
sub
jecxz
test
jmp
and
jle
xchg
dec
mov
cs
sbb
xchg
adc
lods
stc
rcr
cmps
hlt
outs
pop
adc
shr
push
mov
js
ds
cmp
hlt
pop
adc
sbb
data16
xchg
and
(bad)
push
cmc
sti
pusha
pop
xchg
mov
idiv
push
mov
sub
repz
scas
scas
jae
cmp
adc
push
xchg
inc
cmp
movs
mov
and
out
sbb
or
mov
mov
jmp
aaa
sbb
mov
(bad)
inc
mov
sub
ds
add
test
(bad)
hlt
push
mov
les
fucomi
mov
inc
lds
aam
in
mov
popa
addr16
mov
inc
jl
in
adc
push
and
inc
repz
jne
cdq
push
test
shr
xchg
lahf
or
inc
jae
mov
push
enter
cmps
jnp
xchg
ins
addr16
fnstenv
lods
jnp
adc
loop
xlat
fist
scas
push
xlat
lock
jae
inc
jg
push
add
and
mov
jge
jb
ja
mov
scas
stos
mov
or
repnz
push
loope
adc
(bad)
leave
enter
mov
cmps
dec
jg
loope
lods
sbb
or
movs
mov
out
or
(bad)
jg
dec
or
inc
mov
stos
jg
cmps
cmc
or
jecxz
pop
popf
(bad)
movs
movs
mov
pop
gs
jmp
(bad)
push
inc
(bad)
jl
jl
xchg
pop
xchg
sbb
mov
xchg
pop
add
pop
in
cdq
jle
pop
jecxz
xor
(bad)
xor
repz
pop
fsubr
or
jl
loop
lods
(bad)
xor
enter
mov
jb
xchg
sqrtps
push
mov
(bad)
mov
(bad)
arpl
lods
cmp
xchg
fist
lahf
aaa
pop
or
jmp
pusha
sub
or
fistp
adc
pusha
fldcw
lods
push
aad
mov
(bad)
push
dec
mov
jbe
pop
pop
bound
pop
fst
inc
ins
or
pop
jae
jns
sti
out
mov
and
rcl
scas
sub
jl
jecxz
ror
bound
and
sbb
ucomiss
daa
fsubp
pop
shl
leave
pop
pop
sbb
stos
pop
xchg
test
mov
hlt
lods
mov
sub
sbb
dec
loop
mov
(bad)
test
xchg
retf
pop
daa
or
push
xor
rcr
les
mov
and
jmp
inc
xchg
sbb
fnstsw
xchg
push
aaa
mov
rcr
fild
push
and
inc
sbb
add
add
pop
mov
popf
cs
popf
or
test
aas
xor
fst
sbb
mov
scas
mov
mov
inc
push
(bad)
clc
add
xlat
or
jo
icebp
outs
pusha
clc
call
(bad)
mov
pop
push
dec
cmp
push
inc
sbb
inc
xchg
adc
shr
outs
fild
rol
leave
xchg
push
int3
xchg
sub
(bad)
(bad)
pusha
mov
xchg
mov
mov
jbe
cmp
iret
cmp
sti
jbe
ins
out
or
pop
out
shl
inc
out
inc
out
pop
jg
jge
push
dec
sbb
clc
adc
sub
iret
fisttp
enter
shl
enter
cmp
xor
pushf
inc
adc
adc
jb
aad
push
or
pop
gs
jge
dec
adc
adc
sbb
int3
inc
stos
or
or
adc
in
icebp
popa
or
shr
iret
add
sar
or
sbb
fwait
mov
xor
out
xor
inc
iret
xchg
inc
pop
xchg
jg
cmp
adc
pop
scas
sbb
or
ret
loop
mov
mov
imul
fmul
imul
psrld
movs
mov
repnz
jbe
ud1
jp
stos
(bad)
mov
mov
adc
push
push
cwde
ror
mov
push
jl
jns
xchg
or
dec
cmp
pop
test
(bad)
cld
fdivr
xchg
inc
test
std
popa
scas
pop
mov
mov
and
mov
stc
dec
pop
stos
(bad)
out
jmp
xchg
dec
loope
mov
es
jmp
das
pop
sbb
arpl
shl
nop
shr
bound
mov
sbb
add
mov
loop
leave
gs
gs
es
jl
push
into
daa
call
fwait
and
push
cli
and
dec
clc
inc
aaa
int3
sub
sbb
jmp
pop
or
jp
inc
popf
and
outs
clc
sub
in
push
dec
stos
mov
repz
add
(bad)
loope
test
icebp
dec
popf
loope
dec
not
jns
ficom
push
push
pop
pusha
cmps
mov
dec
(bad)
(bad)
xor
call
pop
cmps
repz
fstp
xor
jo
jo
sbb
or
inc
add
cmc
mov
or
daa
or
jmp
movs
pop
ror
cmp
xor
pop
fnstcw
push
nop
pop
retf
lods
in
gs
aaa
and
dec
enter
mov
and
add
cmp
pusha
js
or
adc
movs
jg
ret
repz
mov
push
pop
call
adc
cmps
mov
shl
pop
dec
jmp
jb
popf
fcmovne
xchg
into
fimul
cmp
pop
pop
loopne
popf
ss
lods
mov
sbb
jns
lods
and
out
adc
not
mov
jl
nop
jecxz
fcom
inc
pop
call
scas
fsub
fs
fmulp
into
js
repz
inc
jl
outs
pop
js
xor
or
test
mov
dec
es
dec
mov
loope
nop
jo
mov
xor
adc
xor
in
std
xor
in
mov
mov
xor
mov
stos
jmp
scas
jo
xchg
add
mov
out
mov
test
add
sub
inc
and
mov
pop
mov
(bad)
and
jns
(bad)
jo
movs
jle
in
imul
mov
mov
shl
rcr
xor
jne
pop
int3
and
sub
add
in
es
fstp
dec
cmc
pop
js
imul
stos
cmps
aam
cs
mov
jp
push
nop
(bad)
sub
shr
xor
rcl
mov
xor
sub
iret
pop
outs
cmp
fsubr
jbe
sbb
mov
dec
test
xchg
cld
pusha
in
mov
pop
ret
(bad)
xor
xor
out
std
lock
cwde
jo
inc
dec
xchg
cmps
icebp
cli
(bad)
push
add
ins
loopne
adc
bound
cmp
sbb
pop
and
fmul
fsubr
les
neg
stos
jno
cmp
sub
ja
inc
test
add
jae
jg
dec
je
retf
push
add
jle
test
imul
xor
stc
inc
adc
mov
sbb
cmp
pop
xor
fsubr
ret
or
sub
js
loop
jp
lods
mov
aas
mov
inc
cwde
sbb
cmps
cmp
lea
dec
or
and
inc
repz
sahf
push
lahf
frstor
jbe
and
daa
fsub
cmp
push
cs
mov
retf
inc
retf
inc
mov
jp
mov
and
inc
scas
dec
enter
jne
xor
xchg
cmp
add
adc
enter
fs
loopne
sub
pop
push
gs
or
xchg
dec
js
loopne
mov
add
mov
xor
ror
arpl
push
das
fild
fwait
iret
dec
in
aad
dec
(bad)
mov
cmp
das
nop
fld
xor
adc
push
sbb
arpl
pop
lods
gs
retf
mov
aaa
mov
mov
(bad)
je
js
mov
mov
adc
ja
repz
sub
dec
test
mov
mov
inc
outs
or
add
test
sub
hlt
popa
jg
cli
jmp
jns
xor
mov
mov
and
xchg
fwait
push
ins
and
scas
into
imul
mov
ins
dec
cmps
ret
dec
enter
ret
js
xor
lods
outs
and
pop
inc
jp
mov
push
fistp
ins
mov
mov
push
xor
(bad)
jmp
xchg
imul
pop
mov
stos
out
iret
jge
adc
add
jle
xchg
mov
pop
cwde
aaa
mov
(bad)
mov
and
stos
out
(bad)
pop
and
shl
adc
sub
aad
pop
std
mov
or
and
out
aam
cdq
mov
xlat
aas
aam
lds
pop
push
xor
loopne
sbb
in
mov
std
int
das
aas
sar
sub
jnp
je
and
push
aam
cmp
add
pop
sub
cld
jmp
neg
jb
jbe
scas
sbb
adc
fild
adc
cmp
push
lahf
mov
dec
pop
or
sbb
pop
neg
mov
dec
cmp
push
adc
push
mov
ret
mov
inc
mov
pop
push
jno
sub
shl
cvtps2pi
shl
sub
xor
xchg
(bad)
out
cdq
das
mov
push
je
xchg
sbb
stos
sbb
add
jl
lea
dec
loopne
mov
(bad)
mov
sar
dec
mov
ds
out
push
sbb
and
push
inc
in
jb
xchg
scas
xchg
xchg
jo
out
mov
pop
mov
push
push
cmp
inc
nop
dec
out
push
pop
int
pushf
pop
jle
movs
push
inc
(bad)
push
adc
sti
test
das
add
and
dec
cld
hlt
retf
pop
int
dec
lods
cld
movs
(bad)
mov
lea
adc
mov
cli
and
add
and
icebp
jo
out
cmp
add
in
mov
retf
cmp
adc
dec
cdq
(bad)
movq
das
cmc
cmp
(bad)
sub
add
aas
xchg
or
sub
xchg
int3
cmc
and
xchg
jecxz
pop
push
cmps
(bad)
std
ret
je
jp
jmp
ror
jo
pusha
scas
mov
xor
jmp
loopne
adc
test
pop
jp
loop
lds
arpl
or
mov
lods
pop
das
jg
movs
inc
jge
hlt
(bad)
or
push
and
ins
ret
(bad)
jecxz
stc
jns
(bad)
xor
rol
jbe
xchg
retf
bound
out
jg
call
dec
addr16
jnp
mov
fiadd
data16
cmps
mov
stc
pop
aas
int3
xor
push
lods
mov
fistp
add
xchg
inc
pusha
push
rol
movs
test
jmp
mov
push
xor
loopne
es
inc
jo
inc
cli
sbb
cwde
mov
cs
mov
inc
out
push
push
pop
cmps
pop
(bad)
and
rcl
fadd
or
test
popa
sub
in
out
shr
mov
pop
jmp
cmc
add
cmp
shl
fild
or
iret
pop
sbb
cmp
ds
lea
bound
mov
pop
cmp
pop
push
stos
adc
arpl
xchg
xchg
jo
outs
stos
pop
xchg
scas
loope
sub
test
loopne
sahf
mov
sbb
gs
xchg
data16
mov
push
or
mov
dec
adc
(bad)
fstp
jg
(bad)
push
inc
sti
add
sbb
ins
int
xor
(bad)
pop
sahf
mov
push
add
jbe
jle
cmp
jno
dec
jmp
jl
adc
inc
fs
out
sbb
aam
leave
dec
ret
outs
jnp
das
call
mov
pop
adc
push
or
adc
sbb
fs
aam
or
outs
mov
mov
push
jae
jg
sub
pop
addr16
and
mov
movs
mov
adc
push
enter
xor
or
inc
jne
ret
mov
lods
ins
cmp
mov
pop
dec
clc
(bad)
sbb
outs
fdiv
inc
pop
dec
cdq
jg
aas
mov
dec
jp
cwde
retf
pop
mov
std
test
cld
and
pop
sbb
mov
scas
mov
int
jp
add
gs
lock
out
or
call
xchg
ja
push
nop
sbb
jae
mov
retf
sar
arpl
adc
bound
pop
pop
cmp
jne
add
lods
mov
adc
clc
pop
int3
mov
push
test
mov
ins
cwde
scas
jmp
in
dec
imul
mov
mov
xchg
pop
pop
xchg
(bad)
xchg
imul
mov
add
mov
lea
sbb
movs
repnz
out
inc
test
xchg
imul
add
xor
enter
mov
ror
push
stc
adc
pop
call
mov
fdivr
sub
jae
adc
fs
dec
mov
sbb
ret
inc
pop
cmp
and
sbb
sbb
mov
loope
jmp
mov
sbb
shr
mov
xor
add
out
xor
pop
call
adc
inc
movs
outs
or
mov
inc
jo
js
xchg
and
jmp
shl
cmp
std
add
jnp
call
inc
adc
pop
call
movs
xchg
ffreep
rcr
call
cmp
add
dec
outs
push
outs
push
in
mov
test
inc
shl
sub
cmp
hlt
es
cmp
or
xor
shl
xor
ret
adc
cmp
dec
adc
and
pop
push
adc
dec
movs
in
mov
xor
sbb
or
loope
inc
pop
rcl
(bad)
cmp
sbb
rcl
inc
rol
pop
cmp
jne
(bad)
ret
add
cs
popa
ins
es
repnz
xor
sbb
or
pop
(bad)
rcr
(bad)
sahf
cmps
push
mov
cmps
fcomi
cmp
cld
xchg
ret
adc
add
dec
jmp
cwde
add
inc
and
aaa
rcr
cld
push
in
mov
ffree
mov
in
xor
adc
add
mov
mov
xchg
inc
gs
cmp
xor
mov
add
inc
(bad)
push
sbb
adc
(bad)
loope
push
int3
mov
aam
mov
add
push
jb
cmp
adc
cld
jae
mov
xchg
xchg
cmps
push
loopne
jl
sahf
pop
arpl
add
pop
add
retf
(bad)
test
adc
adc
xor
cdq
pusha
adc
fwait
leave
movs
out
fidiv
jb
mov
inc
cmp
mov
or
jle
push
add
add
push
(bad)
out
pop
iret
dec
fs
lock
mov
aad
mov
sbb
lds
(bad)
pop
jl
push
call
js
leave
imul
mov
leave
sbb
out
ret
outs
mov
or
icebp
or
out
pop
shr
nop
rcr
xor
scas
data16
fst
cld
adc
cmp
icebp
fsub
shr
fdivp
xchg
xchg
popa
test
adc
pop
cmp
mov
scas
mov
loope
xchg
push
ret
sbb
jecxz
int3
scas
push
test
push
jb
sub
cmps
cmps
push
call
mov
mov
sub
bswap
mov
dec
jno
(bad)
jecxz
xchg
daa
cdq
div
mov
sub
mov
jns
in
mov
rcr
lea
mov
or
cdq
inc
frstor
add
call
outs
mov
int
ds
fistp
mov
cmp
rcr
shl
adc
mov
xchg
pop
sub
ret
mov
imul
lds
pop
aam
outs
add
daa
xchg
pop
cmp
dec
hlt
jmp
xchg
out
out
js
xor
outs
repnz
adc
shl
scas
or
push
and
(bad)
fcom
pop
dec
hlt
xchg
or
sub
mov
pop
inc
stos
jge
movs
xor
fcom
sbb
aas
sub
ret
repnz
cmp
jb
pop
adc
inc
sahf
cmp
mov
stos
popf
dec
xchg
jbe
daa
dec
push
cdq
push
sar
test
leave
adc
sub
cmp
iret
dec
cmp
in
ins
cmp
arpl
inc
fstp
mov
outs
or
cmps
arpl
mov
cmp
jbe
jnp
cmps
xchg
xor
pop
iret
pop
jnp
repz
js
cmps
gs
inc
and
mov
test
mov
sbb
outs
into
lahf
jg
mov
push
fild
sub
retf
iret
sbb
push
push
cdq
mov
mov
test
ins
cmc
fist
xchg
xlat
and
mov
lock
sbb
mov
pop
jle
pop
dec
neg
stos
fstp
jg
or
and
xlat
(bad)
(bad)
jbe
jb
mov
repz
enterw
clc
push
adc
jle
loop
cwde
cmp
out
in
rcl
push
inc
pop
xchg
loop
shr
std
(bad)
imul
(bad)
xor
xor
or
aaa
mov
inc
call
aas
sar
add
loopne
mov
xchg
mov
or
push
add
mov
fldcw
dec
outs
cmps
ret
dec
push
and
in
push
and
dec
mov
pop
pop
pop
jl
pop
ret
push
adc
xchg
addr16
push
in
cld
out
pop
out
push
addr16
rcl
inc
mov
out
mov
or
fild
inc
scas
jmp
mov
(bad)
loope
nop
cmp
test
adc
fwait
adc
push
adc
dec
js
and
or
les
aas
mov
sub
or
inc
push
and
xor
xor
pop
inc
jbe
repnz
shl
inc
mov
adc
sbb
adc
imul
cmp
(bad)
fnstenv
jecxz
stc
pop
mov
repnz
mov
sahf
cld
jo
lods
mov
mov
mov
dec
and
ret
sahf
mov
lods
and
or
popf
aaa
sbb
jmp
sbb
retf
or
mov
fstp
in
adc
dec
push
xor
dec
ja
fcom
ret
dec
lock
sub
(bad)
dec
pop
gs
push
scas
call
movs
pop
xchg
loop
mov
mov
retfw
mov
out
jo
ret
popf
lea
push
cmc
cmp
outs
fisttp
retf
jecxz
repnz
pop
jp
inc
jp
or
push
sbb
inc
inc
inc
call
shl
aaa
mov
dec
jae
fwait
mov
sbb
imul
jno
test
pop
xor
jns
int3
and
outs
inc
jmp
push
inc
cmp
xchg
jmp
ins
jl
xor
outs
vpor
push
call
push
fimul
rcl
and
addr16
adc
fcom
mov
pop
cmps
imul
cmc
fdivr
in
ins
mov
or
push
xchg
pusha
outs
and
dec
mov
and
pop
mov
test
cmp
jno
cdq
or
adc
push
test
sub
ret
lock
push
repz
dec
ss
aad
cmps
(bad)
jle
jmp
data16
sbb
inc
cmps
lock
mov
retf
sbb
adc
pop
sub
shl
and
jne
test
jne
mov
lds
or
ret
sbb
push
mov
out
out
or
(bad)
(bad)
sbb
dec
dec
mov
push
sub
add
stos
gs
ret
or
sub
add
xchg
sahf
fisttp
js
jnp
sbb
push
sbb
xchg
xlat
jmp
pushf
rol
lahf
sub
sub
jo
(bad)
loopne
jnp
(bad)
lock
std
(bad)
jmp
and
pop
inc
dec
cwde
dec
mov
mov
xor
xchg
fistp
jne
lahf
repnz
jmp
leave
mov
lods
jecxz
mov
cmp
sub
imul
add
mov
out
leave
jo
adc
loop
push
out
sbb
xlat
inc
mov
dec
xor
push
cmp
sti
shr
(bad)
inc
andnps
ret
mov
mov
jne
pop
xchg
es
jl
hlt
or
movs
fdiv
out
ret
cdq
cmp
mov
std
pop
jecxz
jbe
ss
xchg
adc
jmp
dec
jg
sub
mov
jle
jno
test
ins
dec
inc
jmp
mov
push
and
xor
mov
ja
pop
jle
sub
popa
fst
dec
dec
pop
adc
adc
pusha
movsx
stos
das
cmp
nop
idiv
pop
movs
jbe
sub
push
es
mov
jae
in
outs
fmul
push
cmps
imul
cmc
jp
mov
das
add
aaa
jns
mov
mov
fs
sahf
mov
shr
fist
add
and
je
sub
outs
pop
rol
and
neg
retf
and
push
xor
outs
(bad)
js
and
jnp
neg
loope
inc
jnp
xchg
mov
sub
pop
sbb
mov
setge
mov
(bad)
xorps
xchg
inc
(bad)
jg
or
scas
xor
out
or
kmovb
(bad)
(bad)
mov
or
hlt
in
dec
push
mov
pop
jmp
xlat
cmp
fsqrt
das
jmp
dec
mov
mov
in
popa
outs
push
add
add
dec
xor
movs
jnp
in
inc
add
jle
xchg
inc
push
dec
sub
pop
and
lds
scas
inc
pop
or
jo
pusha
cmps
sbb
sub
push
sbb
cmp
sbb
pop
mov
xchg
out
je
lea
imul
clc
cmp
add
jle
inc
inc
fcom
ja
xchg
xchg
add
add
aas
inc
pop
add
dec
mov
leave
jp
mov
and
scas
xchg
mov
bnd
inc
in
xor
retf
adc
aaa
adc
mov
mov
sub
cmp
shl
xchg
jmp
mov
mov
mov
sbb
jge
cmc
(bad)
sub
(bad)
dec
clc
xchg
stos
shl
test
mov
aam
repnz
xchg
mov
mov
xor
cld
fnstcw
push
push
push
aas
test
jmp
xor
pop
pushw
dec
les
dec
cmp
sub
call
rcl
lods
es
jbe
and
mov
(bad)
dec
ds
hlt
lods
jmp
or
fidiv
cs
xor
in
mov
and
cmp
movs
enter
push
mov
jnp
call
fld
cmp
xlat
xchg
outs
je
sub
inc
pop
sub
xor
out
ins
div
aam
fwait
nop
xor
repz
cmp
xlat
les
mov
imul
and
loopne
aas
or
xlat
(bad)
ror
xor
les
adc
mov
mov
jge
ret
or
lahf
repz
add
add
repz
cmc
push
lds
cmp
mov
xor
xchg
adc
rol
mov
jno
adc
mov
mov
into
sub
arpl
xor
test
add
adc
jnp
div
rcr
pop
cmps
fs
inc
push
mov
dec
push
int3
(bad)
lods
dec
and
std
lock
std
sub
sub
pop
sbb
push
(bad)
dec
adc
retf
dec
loopne
dec
push
mov
scas
sbb
ss
xchg
loop
mov
shr
(bad)
mov
adc
cs
jo
mov
(bad)
cmp
shr
cmc
popa
int
cmp
or
test
or
sub
nop
mov
add
dec
aad
mul
sub
adc
ins
imul
mov
mov
sbb
mov
pop
out
arpl
dec
inc
and
xchg
inc
cmp
clc
push
cmps
dec
mov
ret
cmp
test
push
and
loopne
dec
aam
add
aaa
xor
imul
mov
mov
mov
add
mul
adc
popf
enter
ds
mov
outs
and
test
dec
or
mov
ja
nop
lods
outs
jmp
leave
test
pop
xlat
ja
hlt
fbstp
push
cmp
popa
(bad)
call
adc
fndisi(8087
call
cmps
(bad)
mov
push
xchg
lock
lods
xchg
add
data16
add
mov
mov
push
sar
mov
daa
jg
mov
lods
imul
nop
shr
rol
loope
outs
pop
pop
mov
imul
enter
adc
lds
and
mov
mov
fistp
mov
fcmovne
in
add
inc
sbb
popw
pop
mul
inc
xchg
scas
sqrtps
jecxz
xor
adc
jecxz
pop
dec
daa
cmp
jecxz
inc
fistp
fs
(bad)
aam
out
in
mov
inc
jmp
mov
push
sub
stos
(bad)
pushf
inc
adc
je
movs
sub
add
push
imul
les
idiv
or
jp
call
(bad)
jae
or
fist
ret
and
outs
mov
iret
jle
pop
sub
pop
and
in
loopne
push
cmp
jb
mov
imul
outs
mov
add
push
lods
ja
ja
rcl
jne
adc
push
and
call
jecxz
jae
cmc
xor
lea
xchg
fs
jne
sub
pop
sar
and
lds
and
cld
pop
lahf
mov
push
add
dec
mov
(bad)
mov
out
xlat
or
lock
mov
ret
pop
std
add
ja
mov
lock
fcmovnu
mov
ret
cmp
cmp
mov
jns
aam
fst
mov
adc
mov
xchg
retf
outs
stos
pop
fcmovnbe
jo
add
sbb
mov
jb
or
fldenv
ds
pop
js
lahf
add
iret
mov
movs
ficomp
call
ja
inc
mov
imul
cmc
inc
shl
add
pcmpgtd
push
fisub
xchg
cmp
fsubp
imul
pop
pop
adc
dec
inc
mov
sbb
cmp
nop
retf
or
inc
gs
std
or
sub
stos
stos
sahf
icebp
test
adc
xor
jmp
adc
sub
call
sbb
dec
mov
pop
rcl
out
sub
ins
out
inc
inc
test
movs
sub
ja
or
jae
and
pop
fimul
push
mov
lea
jl
cmp
mov
call
jge
sbb
pop
outs
mov
jle
or
pop
dec
pusha
popf
xchg
movs
arpl
mov
ins
test
or
jnp
inc
cmps
adc
dec
enter
into
loope
ja
sbb
add
pop
test
push
push
inc
push
mov
lods
dec
inc
or
iret
shr
movs
and
aaa
fisubr
cdq
ins
rcr
xchg
mov
cdq
jb
fidivr
leave
inc
jp
dec
push
and
loope
test
xlat
lods
retf
sub
dec
mov
push
fdiv
int3
push
iret
(bad)
call
idiv
js
mov
push
ret
and
mov
ror
mov
in
test
out
dec
adc
cmp
inc
out
pop
adc
jp
ficom
test
int3
jmp
or
int
pop
dec
lock
lods
lahf
cmps
aam
mov
mov
inc
xchg
jge
sbb
jp
mov
mov
xchg
or
enter
dec
push
add
and
das
rcr
lahf
jbe
sub
and
adc
(bad)
shl
out
aaa
mov
cmp
mov
(bad)
aas
jecxz
mov
sub
inc
or
mov
sub
arpl
jmp
inc
stos
sahf
sub
hlt
out
sbb
ss
aaa
scas
sbb
jae
loope
sub
(bad)
pop
shl
sar
inc
sbb
int3
mov
imul
xor
leave
fld
out
push
jle
ja
call
xchg
pop
sti
and
push
cld
adc
sub
jns
jl
dec
and
push
test
leave
mov
or
and
jb
cdq
shl
sar
push
mov
jb
lds
jge
mov
jge
xor
retf
inc
nop
adc
dec
push
mov
inc
lds
dec
sub
mov
push
or
mov
loop
pop
cs
hlt
mov
xor
movs
sbb
fchs
jl
outs
jne
out
mov
jnp
es
push
retf
lea
(bad)
lock
in
(bad)
out
or
cmp
repz
cmp
(bad)
cmp
adc
push
adc
sbb
popf
sub
loop
mov
jmp
sbb
dec
sar
or
call
push
mov
inc
adc
xlat
push
or
imul
test
mov
push
cmp
jmp
push
mov
add
imul
pop
mov
sub
add
movs
outs
adc
test
test
adc
stos
out
lahf
pop
in
lock
icebp
sub
pop
jne
div
add
adc
cli
repz
shr
fwait
cdq
idiv
rol
sub
arpl
cwde
pop
shr
test
fisubr
xchg
sbb
repnz
adc
or
cli
xor
pop
(bad)
loope
jo
mov
ret
xor
pop
xchg
scas
add
fcom
pop
mov
mov
jno
push
sbb
retf
sub
pop
int
outs
inc
and
add
mov
mov
outs
fcomp
cwde
mov
ror
frstor
pop
scas
loope
pop
and
xchg
(bad)
cmc
scas
sbb
test
and
aas
lods
mov
mov
inc
and
push
loop
jmp
in
lahf
ror
cld
mov
cs
and
pop
dec
(bad)
(bad)
mov
bound
cmp
shl
xchg
add
jle
aas
xchg
cld
sbb
fs
pop
cdq
les
add
lahf
inc
mov
mov
jle
jmp
imul
add
call
mov
stc
test
xchg
icebp
mov
xor
add
rcr
mov
inc
mov
sub
fsub
lods
xor
mov
nop
ins
gs
mov
fist
call
push
mov
add
xchg
jo
enter
dec
stos
sub
push
(bad)
mov
xlat
push
std
loop
push
sahf
sub
cmp
outs
sub
(bad)
mov
push
mov
inc
dec
icebp
out
push
lds
sub
loope
gs
shr
ja
jl
ins
mov
push
and
rcr
bound
add
xlat
xlat
mov
jne
mov
cmp
cmp
loope
mov
iret
nop
mov
dec
inc
xor
mov
mov
mov
sub
dec
mov
mov
mov
xor
enter
push
inc
ins
scas
fistp
mov
jnp
push
xchg
inc
push
pop
(bad)
xchg
push
pop
lds
ss
xchg
cli
test
popf
ja
xchg
mov
add
adc
or
out
int
mov
fsubr
sbb
imul
mov
dec
cmp
cs
ret
int
aam
dec
in
loopne
movs
sahf
push
xchg
inc
sub
jmp
jp
into
mov
jnp
cmp
cmp
loopne
retf
mov
and
shl
repz
mov
adc
cmp
jnp
lock
mov
imul
rol
mov
pop
add
push
stos
les
cmp
test
push
mov
out
jecxz
lock
pop
sbb
jle
pop
rcl
mov
or
ret
dec
push
adc
rcl
lods
jae
repnz
adc
add
mov
xor
xor
outs
inc
enter
(bad)
out
loopne
rol
jae
mov
cmp
mov
mov
xor
inc
in
add
iret
sub
retf
fs
sbb
xchg
mov
jno
sbb
jae
push
sub
sub
jp
stc
adc
xchg
pop
dec
inc
mov
dec
dec
rcr
sub
pop
or
cwde
cwde
xor
dec
mov
addr16
xchg
(bad)
ins
jp
in
leave
xchg
scas
rol
nop
add
add
push
inc
pop
je
push
and
push
mov
into
inc
pop
ja
adc
out
jno
mov
aas
mov
push
mov
shl
push
(bad)
rol
adc
hlt
dec
out
movs
imul
xchg
mov
xchg
jmp
das
in
dec
hlt
cmp
sub
mov
dec
cs
pop
mov
xchg
and
pop
(bad)
push
mov
call
lea
or
cmc
sahf
(bad)
jecxz
rol
fistp
and
inc
aad
call
jne
shr
xlat
mov
iret
adc
pop
test
sbb
mov
mov
add
cdq
mov
shr
and
movs
je
in
xor
inc
inc
jbe
int
popa
jns
bound
add
cs
dec
scas
push
retf
out
movs
sbb
push
in
loop
mov
sub
ins
js
cmp
cmp
inc
sti
push
push
sub
imul
(bad)
mov
cmc
jp
dec
xchg
daa
add
inc
test
out
scas
cmps
inc
lock
dec
and
arpl
out
jmp
pop
mov
data16
xchg
mov
enter
enter
pushf
out
or
push
test
rol
push
call
cli
pusha
fnstcw
inc
mov
js
cli
cmp
xchg
sub
jnp
adc
jns
sub
stc
sub
dec
(bad)
fcmovu
cmps
mov
push
scas
sbb
cmp
nop
mov
and
pop
lahf
fsubr
ins
mov
cmp
paddb
pop
xchg
inc
arpl
xor
sbb
js
cmp
xchg
adc
aam
shl
jp
cmp
shl
scas
(bad)
xlat
clc
add
jl
pop
popa
int3
lods
or
push
pop
jmp
test
push
movs
nop
fadd
and
hlt
out
adc
je
iret
outs
sub
dec
inc
jns
mov
movs
mov
iret
cmp
mov
xchg
add
into
and
loopne
cmps
(bad)
clc
xor
push
or
xchg
daa
(bad)
into
lock
xchg
sahf
arpl
jbe
mov
aad
pop
aaa
mov
inc
cmp
xchg
fcmovnbe
loope
out
jmp
repnz
std
movs
mov
shr
mov
mov
lds
xchg
ja
mov
push
ret
int3
inc
cli
es
xchg
aam
mov
addr16
aam
xor
jne
mov
fstp
retf
fs
call
pushf
mov
cdq
fidiv
icebp
and
sbb
shr
lock
add
leave
mov
jae
jno
mov
std
pop
cmps
and
adc
or
iret
xchg
dec
mov
mov
mov
clc
imul
out
shr
arpl
push
adc
push
rcr
inc
cmp
mov
int3
jne
jle
sahf
dec
sub
jge
inc
mov
cmp
pop
enter
fld
and
xor
mov
jmp
pop
fwait
addr16
inc
inc
or
adc
add
push
xchg
cli
mov
shl
jmp
out
lds
loope
mov
dec
mov
icebp
mov
mov
or
rcr
mov
jnp
outs
pop
xor
or
or
mov
lock
rol
cmp
mov
sub
jge
xchg
jge
out
dec
cmc
ss
call
loope
push
xor
push
and
and
(bad)
(bad)
dec
mov
dec
popf
outs
movs
jmp
(bad)
xchg
jns
int3
mov
xor
nop
jbe
mov
inc
in
push
cmc
movs
outs
xchg
or
dec
cdq
xor
rcl
arpl
scas
call
jge
and
sbb
inc
xor
sbb
push
mov
hlt
push
jge
sahf
inc
cld
cmc
dec
ret
repnz
cmps
je
pop
or
xor
int
leave
cli
mov
cmps
jl
arpl
cmp
retf
cmp
inc
jbe
(bad)
(bad)
sbb
lods
es
(bad)
(bad)
gs
cmp
mov
jmp
dec
leave
jge
sub
cwde
ret
iret
shl
pop
jecxz
loop
jmp
inc
mov
daa
stc
push
xchg
sbb
test
adc
fcmove
out
and
mov
jns
aaa
sub
dec
add
(bad)
les
jnp
or
cmp
add
mov
sbb
(bad)
push
cld
pop
stos
imul
dec
add
mov
inc
sbb
cmp
fs
dec
or
cmp
addr16
pop
ror
into
pop
and
and
dec
ins
mov
sbb
ret
jns
mov
jmp
cmp
mov
int3
mov
xor
jne
mov
nop
push
jae
(bad)
lock
mov
xor
adc
dec
jecxz
fdivr
ja
xor
adc
in
jb
pop
push
xchg
mov
pop
loopne
adc
popa
cmp
imul
mov
inc
aam
cmp
jne
out
loop
inc
call
outs
out
pop
mov
add
mov
pop
adc
gs
dec
test
ret
dec
xor
test
push
jb
imul
and
and
cmp
fs
rcl
mov
or
adc
out
mov
jno
scas
or
inc
hlt
dec
dec
stos
int3
imul
mov
jg
dec
push
imul
push
push
leave
pop
pop
adc
gs
ret
jp
es
arpl
sub
test
mov
and
test
std
adc
jns
bound
lea
or
push
movhps
ins
icebp
fdiv
xor
and
sub
adc
test
xchg
test
mul
aaa
push
sub
not
test
ror
pop
in
adc
adc
jge
idiv
(bad)
push
cmc
dec
sbb
and
inc
imul
je
test
or
sbb
repnz
ss
mov
pop
repnz
jg
stos
and
sub
xlat
pop
hlt
sub
push
fdiv
mov
in
sub
sbb
push
not
mov
xor
fbstp
dec
mov
mov
and
in
pop
pop
inc
xor
les
stos
test
ret
fucomip
popa
or
adc
jmp
xchg
rol
adc
ins
adc
gs
push
or
push
fcmovnu
aas
leave
scas
mov
test
xchg
or
xchg
lods
adc
xor
arpl
int3
dec
ret
mov
mov
ins
sub
mov
or
jnp
mov
out
or
push
xchg
jg
xor
adc
retf
xchg
ds
ror
retf
inc
sbb
retf
addr16
push
mov
cwd
in
jne
jmp
mov
inc
repz
data16
stc
pop
cld
sub
aad
mov
addr16
shr
mov
mov
push
jl
ror
inc
aam
mov
jnp
fcom
sti
ret
(bad)
in
ret
mov
pop
lahf
and
jmp
mov
mov
fisttp
dec
cli
mov
pusha
call
pop
dec
leave
or
ret
mov
add
cmp
retf
mov
mov
in
inc
test
test
mov
adc
pop
icebp
(bad)
dec
mov
imul
iret
mov
xor
jo
add
stos
push
add
push
aaa
retf
xchg
imul
retf
ret
push
test
sbb
push
inc
in
jnp
dec
fcmovnu
popf
sub
mov
fisttp
imul
xchg
retf
mov
xor
or
jge
les
mov
cli
mov
xchg
sahf
imul
or
mov
inc
cmp
lods
adc
out
mov
retf
jno
xor
push
xchg
addr16
sub
mov
mov
xor
int
add
cmp
(bad)
dec
pop
jmp
push
test
mov
mov
into
inc
mov
fadd
xchg
mov
cmp
inc
je
jmp
shl
into
dec
rol
dec
jg
cmps
fst
je
pop
xchg
out
sbb
inc
or
jbe
test
cmp
add
mov
jns
pop
pop
mov
cmps
ins
xchg
cwde
stc
xor
lea
popf
lahf
push
mov
fmulp
pushf
xchg
cmps
xor
sbb
fiadd
pop
lds
sub
ja
int3
fist
cli
cmp
push
lods
mov
mov
fdivr
ja
cmp
mov
jno
push
adc
in
cmp
ja
les
inc
and
in
aaa
mov
fbld
adc
push
ret
inc
(bad)
stc
sbb
lds
xchg
(bad)
xchg
mov
fistp
stc
pop
iret
test
cmp
and
sub
sub
jg
mov
mov
pop
dec
rcl
jno
add
shr
call
inc
hlt
inc
sbb
hlt
loope
pop
pop
push
xchg
frstorw
js
sar
mov
xchg
mov
push
cmovne
clc
popa
inc
pop
pop
push
xchg
adc
mov
(bad)
xor
inc
vpmacsww
fdivr
fstp
lods
imul
mov
mov
push
leave
add
push
jmp
jmp
sbb
add
gs
dec
aam
xchg
jmp
pop
inc
sbb
imul
retf
xor
pop
jecxz
push
cmps
(bad)
das
jbe
inc
btc
inc
xor
mov
retf
dec
nop
sbb
fadd
push
push
movs
or
pop
jbe
jns
jp
inc
outs
mov
loope
and
nop/reserved
lock
das
idiv
and
mov
jg
(bad)
pop
sub
out
mov
scas
mov
jmp
and
mov
retf
sbb
jle
mov
mov
inc
pop
mov
sub
sub
(bad)
jmp
push
jae
mov
xor
(bad)
mov
in
fsub
stos
xchg
sti
ins
xchg
scas
push
pop
neg
mov
dec
mov
mov
mov
or
push
aaa
das
repz
mov
std
sbb
(bad)
repz
mov
ds
aad
mov
clc
mov
ss
sbb
ds
push
add
neg
stos
dec
dec
xor
jbe
mov
into
jae
fsubr
loope
and
pop
push
xchg
rcr
stos
or
scas
mov
mov
mov
xor
aad
jge
add
lods
push
std
addr16
pop
fsubr
cmps
aas
stos
jecxz
lock
pop
pushf
das
mov
retf
inc
dec
jmp
imul
fbstp
mov
imul
loopne
cdq
test
pop
push
push
sbb
in
rcr
dec
sahf
push
sbb
dec
in
shl
test
pop
add
sbb
dec
and
push
inc
pushf
pop
outs
(bad)
jne
sub
ret
cmp
xlat
(bad)
xchg
sbb
loope
(bad)
rcl
and
icebp
retf
xor
mov
out
jo
xor
enter
push
fucomp
in
mov
pushf
pop
pop
les
mov
mov
cmp
sahf
mov
leave
jns
lods
movs
mov
mov
xor
or
adc
imul
xchg
std
jmp
(bad)
jbe
fdivr
or
bound
add
shl
push
add
jae
popa
inc
je
and
add
es
xchg
mov
fstp
icebp
xchg
sahf
and
push
pop
xor
inc
retf
or
arpl
stos
or
out
xchg
loopne
cmp
mov
cmp
mov
loop
xor
dec
(bad)
xlat
popf
inc
(bad)
movs
cmp
xchg
lock
loope
pop
push
add
adc
adc
or
jb
jg
sub
jbe
xchg
or
xor
fild
sahf
rol
out
imul
sub
call
das
aaa
scas
jo
jae
stos
int3
pop
stos
ins
jne
mov
pop
sbb
test
adc
sbb
mov
and
cmp
test
ror
push
jae
xor
jg
(bad)
int3
push
mov
out
pushf
cmp
mov
retf
push
ja
jno
sbb
lods
xchg
pop
fisubr
ss
cmp
dec
ret
xlat
sbb
fwait
jbe
or
outs
pop
loop
iret
fstp
int
(bad)
test
sub
in
repnz
xor
les
add
jp
sar
add
fnstsw
or
add
(bad)
mov
lds
test
call
cmp
sub
pop
stos
outs
sbb
jb
mov
mov
adc
push
inc
push
mov
jecxz
imul
in
sbb
mov
ss
push
movs
push
je
sahf
and
jecxz
data16
pop
add
xor
dec
and
hlt
fs
push
mov
jge
jne
mov
add
fisttp
imul
pop
outs
pusha
and
ins
out
lods
mov
jle
test
jns
sub
jne
sub
mov
pop
lahf
outs
lods
in
mov
scas
out
pop
call
icebp
sub
or
xor
push
adc
xor
int3
jnp
cmp
(bad)
ret
cld
in
push
or
shl
or
add
pop
xor
and
test
ins
outs
test
dec
sar
scas
loop
push
out
popa
mov
repz
outs
xor
mov
call
xchg
in
mov
inc
inc
jnp
sub
test
push
cmp
mov
inc
test
pop
jnp
push
jg
add
and
fwait
adc
pop
lods
adc
ins
fsubr
inc
jmp
mov
inc
jo
xor
inc
inc
pop
gs
stos
xchg
push
lahf
test
add
mov
cmp
mov
jnp
xor
fdiv
xchg
fldenv
xor
jmp
sub
or
sub
test
lea
imul
iret
xchg
aas
test
div
jbe
mov
and
dec
sub
add
pop
xchg
(bad)
lods
add
shr
jle
xor
add
fwait
stc
mov
cmp
(bad)
out
mov
jmp
div
and
aas
add
adc
add
adc
push
cmc
ds
(bad)
or
imul
inc
mov
push
xchg
jp
cmps
push
and
dec
mov
popa
dec
mov
or
das
in
or
mov
inc
pop
pop
jp
ficomp
or
jns
(bad)
ins
sub
sub
inc
jb
jno
sahf
xchg
push
dec
push
push
data16
fst
mov
shl
iret
and
and
push
mov
js
fidiv
stos
dec
call
and
fsubr
lahf
inc
fimul
xchg
sub
es
adc
add
(bad)
push
div
jecxz
push
xchg
lods
lahf
fsubr
jmp
xchg
mov
mov
pop
cmp
push
ret
push
ds
sub
pop
mov
loope
or
jle
add
xchg
push
mov
in
je
je
sti
xchg
inc
in
xchg
lds
and
sbb
and
rcl
ror
adc
in
aad
jmp
sbb
inc
cmp
pop
dec
xchg
mov
das
cmps
cmp
or
icebp
iret
jmp
call
rcl
cli
(bad)
pop
call
cmps
xlat
sbb
push
adc
js
fimul
ret
dec
push
sbb
jmp
(bad)
(bad)
dec
adc
std
mov
xchg
stc
mov
jg
inc
dec
pop
adc
mov
ins
in
inc
sub
into
jecxz
fiadd
xchg
mov
pop
inc
fdiv
fdiv
lahf
pop
mov
inc
push
movs
jne
push
fs
rcl
fisttp
mov
stos
cmps
jl
out
vcvtsd2si
out
pop
loop
inc
xlat
inc
in
mov
pop
lods
cmc
icebp
xor
add
jbe
dec
jg
add
jle
mov
sub
adc
and
and
(bad)
fdiv
sub
test
mov
lock
jno
push
hlt
mov
sbb
mov
jle
xlat
jne
inc
loope
push
push
or
packsswb
cdq
out
inc
ins
add
sar
sub
mov
mov
cmp
push
dec
jl
stc
aad
test
mov
xchg
sub
sbb
test
retf
pop
call
in
jo
in
inc
(bad)
cmp
adc
sbb
dec
jp
xor
jno
test
dec
push
fs
clc
dec
out
or
stos
push
inc
fidivr
call
xor
jnp
push
cmps
pusha
or
lods
retf
les
shl
fisub
mov
mov
test
jno
and
push
loope
cmc
cmp
ss
js
inc
pop
rcr
movs
shl
fwait
out
lock
(bad)
ins
fisttp
mov
stc
cwde
add
jmp
pmullw
movs
add
xchg
mov
pop
in
pop
loop
adc
mov
jno
je
mov
retf
add
xchg
nop
call
(bad)
mov
or
adc
sub
sahf
aaa
mov
jmp
cdq
mov
or
out
mov
repz
cmp
mov
retf
int3
mov
add
push
pushf
mov
add
xor
movs
scas
jp
lods
cdq
xor
cld
out
fs
dec
jecxz
jge
push
xchg
call
xchg
inc
inc
scas
xor
movs
rep
cdq
in
dec
inc
nop
xor
cmps
aaa
cmp
dec
xor
or
jo
int
mov
dec
mov
xchg
jle
push
in
es
ins
les
xor
sub
mov
out
mov
inc
cli
sbb
or
mov
scas
daa
not
int
mov
iret
sbb
jle
es
arpl
sti
push
inc
loop
and
loop
aad
ja
mov
dec
push
inc
arpl
lock
mov
jle
xchg
test
dec
push
clc
push
aam
aam
repz
popa
movs
sub
ins
into
outs
sar
inc
mov
sar
mov
dec
dec
xor
mov
mov
gs
pop
push
not
and
inc
cld
push
ins
pop
fcomp
and
cmp
cmp
mov
lea
fisttp
rcl
and
mov
rol
jge
pop
aas
cld
pushf
movs
cmp
call
dec
xor
jnp
add
push
mov
iret
jg
add
js
mov
lea
dec
add
ins
dec
ret
inc
dec
cmp
rol
xchg
ret
jge
imul
mov
push
ror
xchg
pop
call
es
test
xchg
xchg
mov
std
out
mov
add
jb
scas
fs
jmp
push
fcom
in
(bad)
out
inc
mov
pop
sbb
jns
cmp
mov
repnz
mov
jg
repnz
popa
in
(bad)
stc
mov
mov
jns
jne
jb
shr
or
pop
and
addr16
fnstenv
test
mov
mov
jae
(bad)
push
cmps
dec
ds
daa
adc
cli
cmp
pop
dec
or
adc
mov
jnp
aaa
cmp
cmp
mov
scas
cmp
stos
mov
and
leave
out
lds
jnp
inc
inc
cmp
shl
dec
dec
and
mov
test
sbb
pushf
(bad)
imul
push
jae
rcl
mov
mov
outs
and
outs
or
les
mov
xor
js
mov
shl
add
stos
mov
dec
jmp
and
out
push
aam
mov
push
shr
fwait
test
bound
jg
daa
or
or
cmps
nop
in
jnp
dec
xchg
mov
ret
sahf
sbb
sub
xor
pop
stc
int3
outs
add
sub
sub
rcr
outs
sbb
push
(bad)
cmp
ss
cmp
inc
xor
adc
pop
pop
outs
aad
xor
xchg
xor
imul
and
jnp
xlat
dec
rcl
pop
rcl
pop
push
mov
out
push
inc
outs
popa
repz
sub
adc
scas
xchg
cmp
ret
iret
xchg
or
inc
xchg
sub
aas
or
pop
pop
xchg
into
adc
clc
rcl
leave
ret
pushf
addr16
push
(bad)
xchg
jmp
call
shr
dec
sbb
iret
or
mov
mov
in
jg
or
inc
jae
mov
push
scas
jp
shl
mov
in
in
jge
mov
push
js
jge
xor
add
and
push
dec
push
and
mov
mov
push
sub
not
cmp
jecxz
push
cmp
xchg
mov
arpl
ja
cmp
mov
ins
cmp
dec
ins
jp
push
cmp
ja
sbb
das
add
mov
mov
adc
adc
add
icebp
mov
imul
lods
mov
mov
aad
mov
cmp
jmp
aas
push
lea
add
scas
mov
cmp
fs
les
cdq
or
mov
push
dec
jmp
jmp
mov
aad
icebp
dec
dec
rol
or
std
and
fs
pop
cmc
jmp
xor
mov
mov
adc
lock
adc
imul
pop
cmp
outs
add
push
cmp
pop
mov
cmp
sbb
xchg
cmp
pop
movs
mov
push
sub
ds
cmp
cs
jns
lods
fcom
shr
por
mov
dec
rcl
cdq
pop
loope
iret
in
sahf
push
outs
fmul
xchg
imul
push
mov
mov
xor
and
sub
sbb
sub
inc
pop
pop
sahf
xchg
pusha
adc
cmp
mov
jbe
xchg
leave
rol
xchg
imul
cmps
push
jns
cmp
jle
dec
cmp
pop
in
sub
cmps
jecxz
inc
test
movs
mov
push
mov
jb
push
mov
cwde
inc
mov
lods
rol
cmc
cmps
out
jmp
xchg
push
mov
pop
pushf
inc
hlt
aas
xor
push
adc
int3
test
sub
mov
dec
imul
call
cwde
int3
cli
or
cwde
das
popf
mov
in
sbb
ss
cmp
inc
in
push
jmp
stos
icebp
xor
fstp
sbb
add
jg
push
xor
loopne
jecxz
mov
cmp
leave
inc
call
cmp
movs
mov
add
repnz
push
aaa
and
push
cmp
push
pop
xor
jae
or
pop
outs
bound
jle
inc
movs
cmc
xchg
push
pop
popf
dec
and
jb
jno
aad
xchg
push
ja
outs
mov
cld
les
and
cmp
div
push
push
ss
inc
retf
(bad)
pushw
ja
int
xlat
add
dec
mov
shl
sar
mov
daa
dec
dec
in
mov
mov
rcl
gs
mov
or
dec
dec
test
pushf
test
(bad)
cdq
mov
stc
(bad)
out
mov
mov
test
pusha
adc
shl
cmps
xor
push
xor
or
dec
push
ja
int3
retf
hlt
mov
xchg
daa
mov
data16
jae
push
sub
lock
data16
in
or
xor
inc
cmp
ficom
ds
(bad)
scas
inc
adc
xchg
mov
sbb
xchg
sbb
add
gs
into
cdq
fstp
out
or
xchg
das
xor
mov
sahf
pop
dec
mov
daa
js
jmp
cwde
stos
rcl
(bad)
jne
rol
dec
inc
retf
pop
cli
hlt
mov
data16
push
pop
movs
(bad)
shl
mov
mov
sar
in
cld
cmp
loopne
aad
mov
xchg
adc
stos
fnstenv
or
add
pop
push
shl
or
mov
or
arpl
icebp
je
cmps
das
pop
xchg
xor
stc
cmp
shl
icebp
adc
imul
sub
ins
std
and
fucomp
popf
adc
into
dec
inc
xchg
adc
out
cs
cmp
and
jmp
or
in
fisub
test
int3
std
pop
xor
test
psubq
cmp
mov
xor
std
sahf
rcl
ins
push
outs
xor
outs
int3
and
pop
cmps
and
and
(bad)
fistp
addr16
push
inc
adc
sbb
jp
fstp
mov
adc
cmp
fnsave
js
(bad)
stos
cmps
icebp
cmp
cs
add
cld
jmp
push
dec
xor
jno
std
jno
cmp
dec
leave
pop
clc
and
xchg
inc
mov
adc
in
in
inc
cwde
push
loopne
lock
int3
das
xchg
adc
cmp
mov
pusha
sub
xor
xchg
pusha
loop
mov
gs
lahf
sub
xor
dec
xor
das
repz
pop
sub
sbb
or
clc
dec
or
outs
push
dec
mov
adc
mov
cs
(bad)
int
cmp
test
loop
gs
pop
jmp
sbb
mov
inc
adc
pop
sub
mov
mov
mov
push
push
mov
xor
adc
out
bound
call
push
shl
xchg
add
dec
aam
inc
add
scas
mov
sub
push
jge
arpl
aaa
sub
sbb
mov
pop
icebp
mov
jmp
nop
adc
inc
lods
in
or
sahf
push
xor
outs
push
popf
nop
pop
pop
mov
fbstp
push
push
stos
call
mov
push
mov
pop
mov
sbb
mov
jmp
(bad)
lahf
inc
push
sub
inc
pop
adc
pushf
inc
pop
out
das
js
xchg
sbb
push
dec
iret
out
les
pop
pop
pop
adc
pop
and
scas
push
xor
pop
sbb
inc
call
and
pop
push
xchg
and
mov
dec
loop
je
arpl
and
add
mov
jg
mov
sbb
push
add
mov
mov
test
sbb
js
imul
push
call
cmp
aad
outs
xchg
dec
xchg
or
stos
enter
out
mov
arpl
pushf
cmp
out
fistp
sbb
inc
xchg
out
int
adc
shl
inc
mov
xchg
inc
dec
xchg
adc
ret
loopne
cld
mov
ins
dec
jmp
addr16
dec
push
adc
ds
add
inc
shl
ins
lds
jae
imul
dec
inc
das
mov
ret
jns
cmc
pop
pushf
cmps
(bad)
fsubr
stc
(bad)
(bad)
mov
dec
lock
xchg
push
and
cmp
setp
mov
or
xchg
dec
mov
mov
pop
(bad)
or
(bad)
pop
ins
jo
and
jmp
out
push
in
call
jo
out
pushf
arpl
pusha
sbb
push
das
xchg
sbb
and
lods
inc
jne
add
sub
push
add
inc
xor
cvtps2pi
mov
sbb
cmps
fcom
ins
jne
fstp
mov
pusha
mov
jb
dec
add
out
sbb
rcr
mov
loop
neg
add
cmp
rol
loop
mov
leave
rcr
(bad)
ror
xor
dec
jg
pop
mov
pop
inc
not
push
shl
xor
sbb
xlat
lahf
mov
mov
inc
cdq
and
not
inc
shl
mov
pop
jge
mov
int3
xor
and
inc
xchg
es
rol
sub
pop
cli
stos
jnp
popa
aaa
adc
xchg
je
adc
or
daa
xchg
inc
dec
pop
das
push
fdivr
push
sub
out
out
div
cmps
sbb
and
in
xor
fwait
push
xor
xor
xor
mov
mov
cmp
daa
mov
jns
fimul
pop
repz
add
jno
cmpps
xor
popa
pop
in
in
add
xor
jns
loope
sahf
es
push
xchg
cmps
push
in
mov
fwait
out
loop
outs
xor
dec
nop
inc
sti
jo
cmp
dec
fstp
push
pusha
mov
or
pop
adc
ret
out
mov
or
pop
pop
mov
inc
cld
jg
arpl
mov
sahf
or
and
mov
bound
and
fstp
iret
mov
aaa
and
jle
fnstcw
or
sar
fcom
push
into
mov
aas
mov
push
pop
dec
mov
dec
cmp
shl
mov
jg
test
cmp
pop
es
adc
loopne
ret
cmp
ins
gs
xchg
(bad)
cmc
fstp
cmps
lock
loope
push
pop
xchg
jno
cmp
fdiv
dec
push
xchg
or
fs
clc
iret
in
cld
(bad)
je
or
xor
cmps
sbb
ja
jmp
ret
into
add
add
inc
imul
scas
add
jmp
xchg
push
push
mov
and
push
call
sbb
sbb
adc
pop
jns
xchg
add
sub
iret
sbb
imul
fwait
cld
dec
mov
xlat
rcr
fidiv
xor
loope
cmp
movs
sar
ret
pop
cmps
shl
xor
(bad)
imul
call
adc
jmp
mov
rcr
push
imul
or
mov
fs
add
ss
and
pushf
pop
ins
in
or
sub
xchg
jns
mov
mov
ss
fs
jmp
jo
add
idiv
cwde
pop
pop
xchg
out
jle
test
shl
or
daa
cmp
mov
xchg
sbb
mov
pop
outs
(bad)
js
mov
dec
mov
cwde
jmp
nop
mov
xor
xchg
aad
aas
jmp
lock
mov
mov
pop
inc
arpl
push
inc
add
aaa
add
and
adc
cmp
xchg
lea
mov
mov
into
ds
mov
mov
sub
pop
mov
inc
jle
bound
sbb
arpl
outs
retf
test
daa
cmc
lock
leave
sbb
std
mov
pushf
push
lahf
gs
repnz
jo
rol
cld
loop
push
in
dec
xchg
xchg
aas
popa
jb
mov
mov
rcr
pop
(bad)
repnz
mov
in
test
push
push
mov
mov
cwde
stc
cs
cmp
aam
mov
inc
or
ins
loopne
fcmovnb
xor
mov
or
aad
add
adc
add
in
aas
sahf
loope
xor
xchg
loopne
dec
mov
test
jmp
mov
pop
idiv
in
lods
pop
dec
xchg
push
dec
add
jle
addr16
jb
stc
pop
into
icebp
sbb
fdivr
mov
sbb
xchg
or
loopne
popa
push
add
mov
pop
(bad)
(bad)
repz
push
rcr
sub
and
mov
aam
cmp
mov
rcl
outs
adc
mov
(bad)
fucomp
sar
aaa
sub
push
dec
leave
fstp
adc
cwde
add
pop
adc
cmp
jp
jmp
push
int
movs
enter
mov
aad
fistp
js
inc
mov
stos
call
in
bnd
and
aaa
dec
jg
dec
aam
pop
rol
jmp
xor
cmp
mov
retf
mov
daa
mov
in
cld
push
xor
add
lods
fadd
dec
mov
cmp
mov
mov
mov
sub
ja
test
cmc
(bad)
jle
cmp
out
sub
fisttp
push
dec
jmp
sub
jmp
xchg
jmp
inc
ret
popa
push
cs
in
pop
repnz
push
add
mov
ja
mov
pop
stos
cmc
sub
cs
mov
add
cmp
sahf
adc
jns
cmp
outs
in
aam
mov
jb
adc
(bad)
daa
cs
mov
aam
jns
push
push
mov
stos
mov
imul
(bad)
jecxz
pushf
xchg
(bad)
int
mov
fisttp
aam
std
aad
xor
or
lea
loop
ret
inc
mov
mov
repz
xchg
sbb
dec
daa
cli
dec
out
mov
mov
shr
or
adc
add
ror
xchg
jb
mov
add
dec
es
mov
aad
cmps
xlat
aad
fs
or
sub
adc
push
iret
dec
lods
fbstp
xlat
enter
sbb
inc
pop
es
mov
rcr
jns
and
or
out
ja
or
int3
and
sahf
mov
call
popf
xchg
jp
and
ss
loopne
sbb
into
test
loop
out
retf
fldcw
clc
int3
mov
nop
and
int3
dec
bound
mov
out
scas
push
mov
out
out
pop
xlat
cdq
iret
cmc
jbe
mov
mov
push
ins
jmp
rcl
push
mov
xchg
inc
retf
jae
(bad)
fcmovbe
mov
mov
inc
stc
inc
dec
pop
inc
mov
sbb
jmp
movs
pusha
add
cmp
mov
icebp
pop
ror
dec
int
push
test
lahf
sbb
cmp
jnp
add
sub
mov
in
test
adc
add
adc
pop
jmp
xor
in
mov
sbb
xor
cmp
ds
je
ja
movs
sub
push
push
(bad)
adc
cld
pop
or
cmp
or
iret
iret
push
jo
data16
rcr
dec
fsub
add
fldenv
cmp
dec
cmp
xchg
fadd
leave
add
mov
mov
jnp
std
imul
retf
pop
add
lock
sbb
loope
gs
dec
in
jns
and
(bad)
xchg
test
test
sbb
xchg
ds
mov
loop
pushf
pop
adc
add
retf
cmp
rcr
mov
jns
mov
pop
mov
aaa
ja
movs
jle
or
rcl
sar
movs
ss
and
push
inc
call
lea
dec
cmps
push
dec
nop
mov
adc
mov
rcr
sbb
lods
fst
in
add
in
push
pusha
pop
into
mov
cld
dec
pop
jne
pop
int3
add
bound
pop
mov
mov
retf
push
(bad)
out
or
clc
call
aam
leave
jecxz
(bad)
(bad)
aam
push
add
mov
call
jmp
bound
daa
jns
and
scas
adc
std
mov
ret
sub
push
fwait
add
push
adc
imul
fcom
pusha
mov
fisub
cwde
mov
lods
xlat
aam
inc
int
and
xchg
fbstp
sbb
iret
aaa
ss
xchg
rcl
jbe
retf
jbe
xchg
cmps
sbb
push
jns
mov
mov
mov
outs
ins
pop
es
or
arpl
fwait
je
repnz
pop
dec
test
call
or
(bad)
outs
dec
mov
cmc
repz
mov
(bad)
loopne
test
sbb
push
pushf
pushf
mov
dec
or
mov
mov
push
mov
jge
sub
mov
popf
(bad)
aad
pop
icebp
test
ret
cld
add
xchg
and
or
out
dec
jmp
jmp
push
in
neg
pop
and
xor
adc
daa
(bad)
test
xlat
sbb
das
test
pushf
icebp
pop
(bad)
dec
pusha
adc
mov
jbe
and
dec
loope
mov
pushf
jbe
dec
pop
dec
ins
xor
pop
test
cmp
sub
imul
sbb
ins
pop
push
fst
push
xor
and
ja
pop
sahf
sub
and
int
pusha
bound
repz
jbe
or
ins
out
push
mov
ds
cmp
imul
cmps
(bad)
cld
push
adc
ins
jae
mov
ss
sub
lahf
out
add
and
shl
adc
push
inc
test
scas
push
out
cli
sbb
mov
or
aad
bound
jne
xor
loopne
dec
pop
rol
mov
out
mov
out
add
jecxz
ins
imul
push
sub
imul
inc
arpl
outs
jns
push
jp
dec
pop
es
shl
cwde
push
jae
in
sbb
mov
add
pop
dec
mov
in
in
xor
dec
jg
daa
jae
sub
outs
xchg
mov
cwde
cmp
mov
stc
inc
aad
stos
xchg
ins
adc
ja
mov
xchg
xor
rol
addr16
jg
or
cmp
push
lahf
sahf
mov
push
sub
test
jle
stc
or
into
sbb
dec
(bad)
add
test
call
mov
xchg
enter
inc
or
fcmovnu
sbb
test
mov
pushf
cmp
mov
inc
repnz
les
sub
fidiv
call
jle
sbb
loope
push
push
lods
pusha
ror
jmp
shl
(bad)
push
rcl
inc
cld
push
nop
pushf
push
dec
out
jmp
fmul
les
mov
jmp
sbb
sti
sub
cld
cmps
xor
cld
push
sbb
jle
paddd
push
int3
das
dec
adc
outs
outs
mov
sar
lock
push
out
push
popa
lods
jb
std
ss
in
inc
xchg
out
xchg
jmp
dec
xchg
mov
cmp
mov
jle
xchg
adc
mov
stc
xor
gs
cmp
stc
enter
ins
cmp
pop
in
lds
xchg
mov
scas
test
pop
fwait
ins
aaa
stc
outs
mov
mov
pop
xchg
(bad)
jns
mov
nop
loopne
inc
inc
jbe
ror
cdq
jp
or
cmp
scas
in
dec
and
pop
cmps
xchg
(bad)
adc
push
das
pop
xchg
lock
fld
xchg
inc
retf
sub
push
cwde
cmp
push
mov
xor
loopne
cwde
mov
mov
adc
mov
div
or
call
aad
jp
scas
sar
pop
adc
adc
(bad)
lahf
push
in
clc
xor
jae
pop
mov
cmps
rol
sub
mov
loopne
mov
mov
adc
adc
add
daa
retf
push
cmps
pop
sub
dec
loope
fstp
cmp
sub
bound
lock
ins
and
stos
cmc
in
or
mov
pop
(bad)
sbb
mov
jp
mov
push
inc
movs
pop
or
je
bound
mov
mov
es
movs
dec
or
js
pop
jb
inc
sbb
mov
call
imul
push
mov
mov
add
in
inc
add
jno
pop
outs
pop
push
dec
mov
push
pop
mov
lea
sbb
sub
pusha
cmp
pop
adc
call
stos
pop
scas
jmp
aam
xor
fisub
cli
sub
mov
dec
outs
pop
ss
ficomp
sbb
pop
ins
sbb
mov
nop
(bad)
sbb
out
mov
nop
push
imul
cwde
or
jb
mov
aam
test
not
inc
sbb
in
cld
xchg
push
cld
clc
imul
pop
pop
mov
sti
or
or
push
jbe
popf
dec
xchg
mov
test
jne
push
gs
nop
adc
repnz
iret
cmp
xchg
ss
inc
daa
adc
pusha
int
xor
jge
ret
cmps
enter
push
add
fwait
push
(bad)
add
or
shufps
and
cmc
xchg
scas
sub
outs
inc
rcr
pusha
adc
or
fs
dec
xchg
cmp
popf
out
in
or
sti
inc
bound
rcl
and
aas
cmp
icebp
jnp
int3
shr
xchg
mov
mov
test
jns
int3
inc
inc
xchg
sbb
jnp
mov
mov
dec
mov
lods
add
mov
fidiv
aaa
and
mov
mov
push
jbe
lods
cmp
inc
push
fmul
xchg
pushf
pop
ins
or
retf
add
sub
adc
mov
push
sbb
or
jge
in
cmps
arpl
or
mov
add
test
add
pop
xchg
push
inc
mov
fsubr
jns
ret
iret
adc
cdq
or
icebp
mov
outs
aas
or
dec
(bad)
loopne
stc
inc
inc
fwait
sub
clc
aam
lods
xor
jecxz
out
lea
repz
pop
addr16
into
cs
popa
xchg
jne
push
sbb
mov
stos
xor
(bad)
jg
mov
scas
fist
xor
stc
sti
in
sbb
loopne
adc
repz
cmp
dec
or
popf
je
movs
cmp
bound
ja
dec
retf
push
or
push
pop
bound
lds
mov
mov
aaa
jne
sbb
fsubr
cwde
adc
lods
sub
pop
lods
add
jge
adc
mov
mov
sahf
popf
inc
push
idiv
nop
inc
or
push
movs
(bad)
into
mov
adc
test
std
and
xchg
sbb
mov
pop
cli
inc
ret
test
fcom
jne
ja
xchg
jmp
test
psubsw
jns
pop
xor
(bad)
fcomip
mov
push
mov
jno
out
mov
in
pusha
jmp
int
mov
aas
imul
les
mov
repnz
aam
ret
lods
dec
jns
mov
sub
mov
cmp
pushf
aas
ret
gs
and
mov
jno
out
cmp
sub
inc
dec
imul
cs
hlt
xchg
jge
adc
cmps
xor
sub
and
and
sub
or
retf
test
xor
xor
es
cli
pop
mov
jo
jmp
das
add
mov
scas
sub
dec
test
call
nop
js
test
call
arpl
(bad)
retf
jns
mov
adc
dec
fwait
movs
and
mov
pop
cmps
push
outs
sub
or
adc
pusha
cmp
leave
retf
lea
fs
cmp
ins
in
and
ins
fs
xchg
sub
das
pop
xchg
retf
mov
inc
ret
pushf
inc
sbb
mov
inc
dec
inc
cmp
jns
mov
loope
xchg
loop
dec
mov
in
push
or
inc
test
arpl
jge
clc
idiv
cmps
fld
lahf
push
stos
push
ins
arpl
jge
repnz
push
pop
sub
fmul
gs
rcr
div
dec
push
fxch
sub
xchg
adc
jmp
push
gs
sahf
outs
stos
dec
pusha
xchg
inc
mov
test
jmp
dec
aas
mov
dec
or
lock
add
mov
popf
xchg
jge
or
sub
cdq
std
popf
push
push
lahf
adc
pop
pop
lods
les
fimul
sbb
mov
inc
outs
gs
jno
ret
(bad)
xchg
sub
xchg
les
sbb
stc
mov
inc
stos
add
mov
test
shl
cwde
push
mov
loop
mov
jge
dec
xlat
xchg
outs
xor
scas
sub
mov
jl
sub
inc
inc
jb
xor
fisub
int3
push
lock
sub
mov
sub
dec
div
call
mov
xchg
mov
inc
xchg
(bad)
mov
(bad)
jbe
cmp
out
aad
sbb
add
les
dec
cld
fdivr
mov
dec
dec
pop
out
pushf
mov
jb
inc
iret
or
jmp
ins
dec
jge
pushf
dec
mov
cmps
loopne
sub
std
repz
xchg
mov
mov
pop
pop
or
mov
mov
mov
imul
movs
lds
(bad)
jno
fimul
and
inc
sub
aam
imul
jmp
push
lock
(bad)
popf
and
and
jnp
sti
sub
shr
outs
sub
call
pop
test
push
or
fwait
ins
mov
dec
pop
popa
xchg
into
sub
jecxz
push
popf
bound
hlt
ror
mov
mov
in
or
cwde
loop
inc
pop
mov
stc
push
sub
out
aas
pop
jns
popf
outs
cmp
imul
xchg
jecxz
imul
data16
lahf
mov
fstp
ds
out
retf
movs
test
lods
cmp
ins
and
push
sbb
xchg
call
cmc
sub
xchg
fmul
js
jne
popf
mov
mov
movs
ret
fild
in
xor
jbe
int
sub
sub
sub
add
retf
rcl
fcmovne
jno
or
mov
or
sub
int3
hlt
inc
jecxz
ss
mov
xchg
push
cmp
jno
lds
mov
push
loop
xor
into
lods
inc
mov
pusha
rcr
and
test
es
gs
mov
cmps
xchg
mov
out
fbld
pop
sub
pop
in
jg
xchg
push
in
jg
jmp
ins
xor
mov
push
sbb
dec
push
xor
repz
mov
lahf
mov
push
(bad)
out
mov
sub
push
mov
sti
push
pop
jns
mov
shr
stos
pop
and
push
aaa
xor
xor
adc
jb
xor
pop
arpl
jb
es
mov
sub
adc
(bad)
push
and
xor
jnp
mov
je
popa
adc
cmp
jne
pop
mov
jo
call
sbb
pushw
fwait
jae
cdq
sub
mov
call
and
lds
and
fst
jecxz
std
bound
mov
mov
fwait
out
cmp
and
fild
jno
mov
fwait
inc
xlat
test
xchg
inc
(bad)
call
fwait
inc
sbb
cmp
jbe
int
push
dec
test
(bad)
cmp
or
push
div
mov
test
lahf
mov
adc
stc
push
test
(bad)
pop
mov
add
xor
js
shl
mov
push
lock
fnstenv
cmp
cmp
(bad)
push
mov
mov
push
cmp
cmp
stc
mov
dec
movs
sar
cmp
pop
in
mov
sti
loopne
xchg
(bad)
shl
out
aam
or
sbb
ja
gs
lock
add
push
out
xor
dec
lods
mov
xchg
sub
sar
sub
stc
jmp
mov
ins
adc
mov
pushf
mov
lods
popa
push
adc
(bad)
retf
and
inc
lock
inc
(bad)
movs
or
mov
test
fst
jns
jne
sahf
pop
imul
test
push
xlat
mov
pusha
mov
sbb
jmp
popf
ret
repz
mov
in
fst
hlt
scas
xchg
add
es
loopne
add
push
mov
jp
les
cmp
test
sub
test
les
and
fbstp
mov
mov
mov
fwait
bound
leave
rcr
(bad)
mov
cmc
dec
retf
xchg
push
or
push
cmp
mov
jmp
int
in
ja
rol
ja
fbstp
push
loope
add
xchg
mov
inc
je
(bad)
and
mov
inc
stc
push
int3
pusha
and
ja
sbb
mov
(bad)
adc
aas
xor
and
loope
xchg
mov
imul
sub
lahf
in
jne
dec
je
addr16
or
xchg
pop
and
or
retf
movs
aad
lahf
jno
adc
fimul
inc
mov
push
call
jmp
movs
cdq
inc
cmps
mov
cmps
jmp
mov
fwait
fwait
lea
inc
cli
into
jne
int
nop
jo
repnz
push
call
xor
fild
adc
jl
fidiv
add
or
nop
cmc
ror
jl
rcr
fimul
(bad)
jno
xchg
stos
test
pop
test
sbb
xor
mov
mov
scas
daa
adc
hlt
adc
xor
dec
xor
add
pop
mov
sar
adc
cdq
fimul
jns
cmp
out
or
push
fs
sub
gs
dec
jbe
adc
lock
cmps
mov
sub
cs
fld
test
sub
daa
add
hlt
cmps
jb
cmc
neg
fst
loop
lahf
int
mov
mov
push
adc
inc
fsubr
jecxz
inc
outs
adc
jne
cmp
mov
icebp
sti
call
dec
aaa
adc
ret
cmp
xchg
xchg
hlt
cmc
test
mov
ins
pop
and
ror
cmc
adc
and
cmp
repz
cmps
inc
rcr
pop
dec
cmc
mov
pop
sti
mov
call
mov
push
leave
(bad)
ds
cmp
lea
cmp
dec
aam
cmp
stos
ret
shl
test
mov
and
shl
jb
aam
jmp
push
add
out
fiadd
loop
(bad)
out
and
fcom
cmp
call
jmp
pop
xchg
mov
jne
xor
push
out
lahf
dec
xor
out
aas
mov
xor
stos
or
inc
enter
fldlg2
call
or
icebp
or
jno
or
adc
pop
faddp
or
in
or
cmp
or
pop
fistp
jo
je
repz
rol
sahf
daa
outs
sbb
jl
cmp
lea
enter
xchg
pop
outs
lods
xchg
and
sbb
into
xchg
out
pop
enter
cld
and
xor
sti
jle
pop
xchg
ds
xchg
xchg
loope
fiadd
sbb
dec
das
dec
or
in
dec
add
adc
jp
aad
sub
push
test
shr
cmp
outs
fbld
cmp
gs
std
push
out
pushf
dec
repnz
rcl
nop
outs
test
retf
lock
lods
ret
sub
nop
or
ds
jae
mov
sub
cli
xchg
jecxz
shr
js
cwde
push
and
jns
sbb
(bad)
sbb
mov
sbb
add
adc
jb
pop
dec
inc
mov
cmp
test
and
inc
shl
inc
dec
(bad)
adc
cmps
mov
out
dec
(bad)
and
cmovle
pop
test
xchg
sub
sti
mov
cmp
inc
mov
ret
add
(bad)
mov
ror
call
cmp
push
int3
dec
aas
push
add
adc
xchg
dec
ja
imul
mov
jle
sub
lock
ins
outs
(bad)
fldenv
pusha
imul
mov
pop
lods
add
scas
xor
jg
loop
push
dec
or
add
xor
mov
ficomp
mov
(bad)
and
test
xchg
and
loope
(bad)
cmc
call
sbb
out
mov
and
jp
pop
mov
mov
push
and
jl
xchg
test
fs
sub
test
push
cmp
aas
dec
mov
and
xor
add
pop
cmp
rsm
and
pop
xor
push
sbb
xor
pop
js
sbb
shl
sbb
push
xchg
lods
les
inc
rol
(bad)
xchg
jae
mov
test
push
out
in
and
out
dec
aad
scas
jae
out
pop
cmp
aaa
jb
lods
jb
sbb
mov
clc
cmp
dec
inc
cmps
sub
jno
lods
push
cmps
es
enter
out
js
sub
dec
mov
in
mov
dec
test
int
cwde
clc
imul
jge
xor
hlt
mov
rcl
ret
adc
cmps
mov
sbb
push
inc
jmp
inc
pop
or
inc
sub
pop
or
push
in
out
sub
popa
(bad)
xchg
xor
jmp
fild
jg
scas
retf
jmp
(bad)
cmp
leave
lahf
pop
sub
(bad)
push
imul
iret
add
shr
push
adc
cld
fild
hlt
and
loopne
les
shl
cmc
cmps
pop
std
out
mov
or
pop
pop
dec
cli
xchg
nop
test
push
fs
movs
fild
jmp
cli
sub
loope
sar
mov
call
cli
cmp
jg
mov
fwait
arpl
dec
fistp
inc
outs
outs
cdq
pushf
jmp
cmp
xchg
mov
push
dec
(bad)
bound
push
or
ss
jae
mov
shl
and
cld
sbb
push
sub
pop
pop
xchg
and
mov
in
or
add
pop
push
sub
clc
push
jp
dec
inc
fidivr
pop
add
sub
cli
xchg
sbb
lock
pop
out
mov
mov
jno
inc
leave
push
jg
pushf
mov
push
dec
and
pop
mov
(bad)
push
jno
aas
cwde
test
lahf
jbe
lods
mov
bsr
leave
test
mov
mov
xchg
mov
div
mov
cmp
pop
popa
jl
mov
mov
test
dec
(bad)
cld
fwait
and
add
out
in
in
pop
ins
pusha
stc
jp
call
inc
adc
fs
fstp
mov
dec
xor
retf
push
scas
ucomiss
jnp
sub
mov
scas
dec
mov
mov
or
mov
out
jg
std
inc
ret
adc
cmp
jae
adc
cs
out
push
push
xlat
in
jp
rcl
sub
mov
pop
clc
cs
jmp
push
ins
push
push
je
int
add
sar
pop
ins
jle
in
jecxz
mov
xchg
and
sbb
fwait
mov
mov
retf
shl
mov
retf
lahf
and
jbe
jmp
xchg
ret
cmc
es
jmp
cmp
lds
aas
pop
jb
(bad)
das
cwde
mov
mov
push
jnp
mov
aaa
or
dec
sar
and
mov
ss
jge
mov
add
sbb
xor
test
xchg
ss
repz
push
and
and
test
dec
xor
comiss
cmp
fadd
mov
lods
adc
ja
add
push
sbb
int3
ror
sub
jecxz
mov
mov
push
mov
xchg
out
jl
ins
repnz
sub
push
stc
mov
sbb
adc
and
cld
jb
cmp
adc
retf
push
sub
js
jae
stos
cld
fild
cmp
call
add
call
adc
cmps
repz
jmp
adc
ficomp
scas
fsubr
(bad)
mov
pop
inc
sub
xchg
mov
fldenv
or
dec
jmp
mov
shl
cmps
rcr
bnd
jp
push
call
lods
xchg
or
mov
sbb
cmp
jne
pop
push
lahf
and
adc
ret
aad
rcl
lds
shl
mov
sbb
xor
xchg
adc
imul
push
out
cmc
addps
jl
shl
inc
dec
add
retf
pop
hlt
add
mov
or
push
jae
mov
add
int
mov
fisttp
xchg
test
cwde
lock
test
retf
xchg
cli
push
mov
jg
mov
push
outs
push
pop
fucomi
out
mov
mov
cld
xor
rcl
lods
cmp
sub
rol
movs
repnz
mov
imul
mul
rcr
mov
pop
in
jno
inc
jle
stos
cmp
xchg
hlt
adc
mov
and
sub
fld
and
dec
dec
inc
dec
push
stos
or
pop
pop
add
sbb
out
ins
mov
dec
cmp
cmps
dec
mul
mov
aam
xchg
xor
mov
(bad)
loopne
dec
fcom
xor
lahf
cmp
pop
push
xor
adc
enter
adc
cwde
mov
xor
ja
mov
(bad)
mov
or
jecxz
sbb
call
in
aad
call
ins
addr16
enter
aad
scas
sub
lods
ret
out
in
jmp
jle
push
pop
mov
movs
dec
pause
enter
or
mov
mov
stc
enter
and
mov
push
ds
std
sub
cld
bound
pop
jo
je
aam
cli
outs
retf
adc
mov
mov
xor
mov
push
addr16
or
and
fcmove
dec
out
and
fist
ins
das
das
out
inc
leave
mov
sbb
lds
xor
sbb
sti
sti
jl
inc
leave
or
(bad)
aas
in
movs
xchg
out
inc
into
arpl
inc
cmp
xchg
pop
jae
jl
push
ins
shl
cmp
adc
xchg
std
dec
push
mov
jns
fsubp
push
hlt
jno
pop
js
fstp
xchg
daa
sbb
inc
inc
mov
out
retf
call
push
ins
outs
jne
cmps
bound
(bad)
hlt
fwait
ret
iret
jae
dec
jnp
or
push
pop
cld
xchg
inc
leave
rcl
xor
xchg
sub
dec
push
rol
test
xor
adc
inc
test
aaa
cwde
rcl
out
mov
lahf
imul
shr
sbb
cmp
and
mov
push
mov
fsub
cmp
push
and
fmul
pop
sbb
retf
jmp
sub
shl
daa
imul
pop
jmp
rcl
sbb
ret
fs
scas
dec
push
aam
add
dec
xor
dec
arpl
clts
push
fs
loop
inc
clc
and
gs
fnsave
dec
fld
xchg
aam
clc
dec
mov
pop
pop
push
cmps
(bad)
pop
sub
pop
aam
data16
outs
sub
cdq
leave
jl
dec
push
mov
mov
sub
cdq
mul
and
(bad)
pop
add
xchg
ror
push
adc
adc
push
sbb
mov
xlat
shl
jle
fnsave
jns
and
xchg
(bad)
pop
push
xor
pop
jmp
xor
or
aas
enter
push
mov
jns
xchg
(bad)
mov
js
pop
jl
std
push
mov
jmp
daa
add
cmp
and
or
cdq
fcomp
add
pop
les
pop
mov
jae
mov
cmp
xor
ds
push
lahf
call
pop
or
push
dec
cmp
jo
add
outs
mov
ds
cwde
sahf
ret
stos
sar
mov
shl
cmc
movs
sub
jge
mov
das
aam
add
call
lahf
ror
stos
pop
and
fs
(bad)
pushf
cmp
or
add
in
mov
cmp
scas
mov
inc
mov
ds
ins
ror
xor
adc
cwde
xchg
shr
jbe
in
cmps
ffree
mov
sub
imul
pop
sbb
stc
mov
push
shl
sub
push
add
std
iret
loopne
int
cmp
aaa
cmp
adc
pusha
repnz
sub
sub
mov
movs
mov
pop
adc
ret
xchg
bound
(bad)
and
xchg
jl
jns
and
sbb
xchg
mov
push
sub
(bad)
in
mov
jmp
js
je
mov
pop
xchg
jnp
and
mov
inc
pop
push
mov
ins
test
dec
push
pushf
mov
lods
ss
mov
pusha
jno
std
arpl
repz
sub
fidiv
cmp
ficomp
push
icebp
out
add
clc
pop
je
sbb
pop
add
out
jb
mov
mov
xor
enter
sbb
nop
sub
push
(bad)
xor
dec
or
mov
enter
outs
daa
mov
push
pop
sub
in
mov
jl
int3
aaa
cmp
lods
add
stc
shl
sbb
mov
inc
in
ins
dec
xchg
imul
lods
aaa
(bad)
shl
sbb
push
push
push
add
test
mov
lahf
rol
lods
mov
outs
jg
enter
loop
sti
pop
mov
push
out
push
pop
test
push
les
mov
mov
cmc
not
add
and
out
arpl
aas
pop
jae
pop
jmp
fwait
out
ficomp
mov
sahf
cmp
add
hlt
sbb
lods
ror
push
jge
ret
jo
ins
xchg
lds
leave
data16
xchg
enter
and
dec
and
mov
push
(bad)
jbe
imul
and
mov
out
sub
xchg
movs
test
stc
rcl
lea
or
adc
mov
cmp
addr16
mov
mov
jg
dec
and
mov
jb
ss
xchg
gs
lahf
xchg
rcr
sbb
push
jno
mov
in
nop
pop
mov
inc
nop
retf
inc
pop
inc
jbe
retf
shl
loop
mov
cmc
popf
outs
pop
fcmove
pushf
pop
sbb
mov
push
mov
jmp
shr
retf
sub
mov
jle
aaa
push
push
mov
sbb
sahf
inc
jnp
cmp
test
fwait
xor
sbb
cmp
dec
int3
xchg
or
pop
call
jecxz
mov
and
dec
repnz
xor
dec
shr
dec
inc
push
cs
fadd
mov
inc
inc
lock
push
jne
lahf
push
ins
lock
jmp
arpl
xor
imul
fadd
dec
or
push
sbb
fs
push
pop
sub
cmp
shr
fwait
dec
xchg
int
js
push
out
sub
mov
push
imul
out
xor
(bad)
or
and
adc
aas
lods
mov
xchg
push
ins
cs
out
cmp
xchg
adc
or
cmc
dec
xor
stos
ss
call
mov
xchg
int
jae
popa
jecxz
fist
sub
dec
in
fwait
jp
test
jno
jmp
and
cmp
xlat
cs
call
jmp
out
lods
dec
mov
or
mov
ret
cmps
cmp
jecxz
mov
pop
repnz
adc
dec
fwait
(bad)
(bad)
push
jmp
cmps
add
push
adc
sub
fs
ins
mov
iret
jb
imul
(bad)
adc
ja
cld
cmps
mov
out
xchg
dec
fwait
or
jge
or
or
mov
sbb
dec
xor
mov
pop
pushf
outs
int3
sahf
and
and
mov
cmp
rcl
popa
adc
shl
movnti
mov
ret
mov
in
sub
movs
retf
inc
ins
push
and
dec
mov
aam
data16
sbb
xchg
mov
cmp
mov
or
mul
data16
aam
or
cmp
xor
xor
gs
mov
fnstcw
cmp
xchg
adc
cwde
jb
cmp
(bad)
cli
xor
or
aas
fld
inc
or
fiadd
jmp
or
bound
inc
hlt
shr
mov
cmp
jae
push
in
xchg
into
inc
(bad)
retf
adc
dec
jae
pop
sub
pop
adc
or
test
inc
iret
pop
and
stos
loop
rcl
or
xor
shr
xor
inc
push
out
inc
int3
mov
out
sysexit
or
xor
sbb
mov
cmp
push
fmul
sbb
not
inc
adc
popf
fsubr
std
enter
mov
xlat
stc
test
movs
sbb
add
data16
mov
dec
lahf
loope
xchg
and
xlat
test
mov
stos
push
sbb
movs
mov
cmc
shl
sub
pop
ss
push
sbb
cwde
pushf
inc
adc
xchg
bound
loop
xchg
out
sbb
cld
add
mov
sti
mov
sti
dec
les
in
in
pop
and
test
das
xlat
and
adc
cli
ret
sbb
mov
or
test
push
das
je
std
sbb
(bad)
pop
jl
push
cmp
xchg
icebp
(bad)
loope
mov
into
lods
movs
mov
push
push
pusha
pop
adc
stc
jg
dec
(bad)
popa
out
sub
retf
xor
dec
shl
sub
leave
mov
call
cmps
bswap
mov
out
out
fadd
adc
xor
mov
inc
xchg
lahf
dec
aaa
out
and
in
repnz
(bad)
dec
sbb
ret
jmp
hlt
leave
aam
test
ins
dec
fcom
cmp
dec
jecxz
in
aaa
push
loopne
in
xchg
fsub
xor
xor
into
gs
fist
sbb
push
push
sub
cld
ja
(bad)
fwait
sub
out
into
out
xchg
daa
stc
loope
mov
mov
mov
mov
fdivr
dec
sbb
push
ja
test
or
mov
rcl
clc
cdq
push
adc
ficom
(bad)
int
mov
mov
mov
mov
mov
movs
das
stos
pushf
dec
xchg
dec
push
dec
aad
and
inc
imul
xchg
mov
push
repnz
mov
cmp
les
out
sub
inc
jo
icebp
mov
push
jns
push
mov
jb
mov
push
mov
fistp
jnp
inc
popa
or
in
movs
mov
inc
sub
mov
mov
out
pusha
das
cmps
repz
add
pop
mov
xchg
mov
js
jnp
or
jnp
add
daa
adc
jbe
dec
sbb
pushf
mov
test
sbb
ins
sti
outs
adc
lds
add
cli
test
jmp
push
enter
daa
mov
lods
js
or
adc
mov
cmps
sbb
int3
out
xchg
ficom
fwait
idiv
mov
scas
xor
stos
and
mov
cmp
xchg
stos
cs
xchg
add
mov
jns
ror
pop
pop
ds
mov
sbb
cmp
sbb
(bad)
fld
call
mov
ins
push
and
data16
sub
pop
inc
fcmovne
dec
sbb
push
dec
movs
fisub
and
mul
cmp
sub
jns
sti
scas
cmp
loopne
mov
mov
adc
stos
dec
aam
test
mov
aaa
and
fisubr
daa
enter
jno
pop
dec
push
arpl
xchg
(bad)
and
mov
(bad)
push
aaa
popa
in
pushf
fist
push
loop
mul
(bad)
jae
les
in
pop
aad
cmp
shl
popa
sbb
mov
jmp
cmps
(bad)
enter
xchg
xchg
js
mov
jbe
pop
es
aaa
xor
pop
add
inc
mov
cmp
sahf
or
ins
jp
mov
dec
(bad)
xchg
fcom
xchg
cwde
das
les
jne
jecxz
mov
add
sbb
mov
sar
mov
imul
mov
gs
hlt
pop
popa
adc
fdivr
jo
add
jno
popf
imul
scas
sbb
adc
xchg
js
push
add
out
jne
pop
push
mov
addr16
dec
xchg
stc
add
rcl
push
mov
mov
sub
xlat
inc
nop
sbb
lods
cld
call
xor
mov
clc
cmps
xchg
sti
xlat
jecxz
cmp
movs
lea
dec
push
ins
(bad)
cli
dec
mov
jns
mov
sub
pop
dec
inc
push
jge
sbb
inc
shl
dec
cmp
dec
stos
int
xchg
jae
cmp
mov
test
in
jmp
and
arpl
call
mov
xchg
inc
scas
out
sbb
and
xchg
jnp
push
dec
mov
and
cmp
test
popf
rol
jl
in
scas
lahf
ret
fisttp
or
shr
push
loopne
mov
xchg
mov
outs
imul
jmp
push
inc
jno
adc
jl
(bad)
stos
lods
sub
mov
mov
out
xlat
not
inc
cmp
je
cmps
ins
cmp
fsubrp
clc
mov
and
inc
stc
cmps
sub
jae
(bad)
js
or
xchg
das
aaa
jg
test
jo
enter
nop
daa
fs
push
adc
aam
popa
stos
push
pusha
cdq
cmp
pushf
cs
fnstcw
inc
adc
ins
mov
pushf
cmp
cmp
mov
push
repnz
mov
aam
retf
dec
cdq
pop
pop
outs
fld
pop
and
out
xchg
int
jbe
jmp
sub
jecxz
(bad)
mov
sub
scas
stos
aas
and
je
shl
dec
test
sbb
mov
cmc
test
xor
pop
shl
add
cmp
out
dec
push
dec
gs
push
cmps
cs
stos
in
enter
sahf
pushf
push
or
pushf
fs
jns
std
pop
dec
xor
mov
sbb
inc
and
aas
mov
add
cdq
jge
inc
cdq
sbb
sbb
dec
(bad)
cs
cmp
retf
and
adc
xor
inc
mov
icebp
in
add
push
repz
sbb
shl
shl
lds
(bad)
aad
jbe
dec
and
sbb
sbb
sar
or
pop
pop
pop
ja
ret
cs
push
sub
or
shr
push
sahf
cmp
es
push
int3
aam
and
ss
adc
mov
mov
inc
(bad)
sahf
sub
xor
mov
shr
in
ror
fbstp
loope
sub
(bad)
aaa
fsubr
mov
xchg
jle
mov
scas
push
jns
jg
push
stc
inc
mov
(bad)
cmp
sar
(bad)
in
mov
and
mov
call
nop
dec
(bad)
mov
pop
or
inc
fdiv
sbb
or
jbe
mov
xchg
call
mov
push
lods
in
mov
xchg
pop
xor
iret
inc
sar
add
lods
cmp
cmp
pop
xchg
retf
xchg
inc
cmp
push
dec
mov
and
xor
pop
arpl
es
xchg
sub
in
mov
dec
jno
mov
dec
mov
pop
clc
xchg
pop
push
jo
push
pop
adc
and
js
push
mov
inc
cmp
outs
mov
movs
scas
sub
cdq
push
and
call
add
push
pop
and
je
das
and
dec
nop
mov
mov
stc
sahf
xchg
lea
pop
div
xor
adc
mov
iret
push
sbb
fsubr
add
mov
sahf
sbb
enter
adc
inc
pushf
lds
rcr
div
mov
jb
cmp
dec
iret
imul
nop
push
not
cmp
push
jmp
jne
push
pop
mov
sub
xor
shl
(bad)
lock
mov
into
rcl
xor
or
jnp
push
push
sub
mov
push
sbb
mov
mov
cdq
push
push
dec
imul
push
add
jge
icebp
pop
les
mov
push
dec
push
adc
jb
test
inc
sbb
scas
or
xchg
xchg
push
mov
add
xchg
add
out
cmp
pop
call
fstp
scas
dec
loop
xchg
(bad)
aas
sbb
or
push
div
sub
(bad)
xor
hlt
(bad)
mov
in
pop
and
sub
or
cmp
sar
daa
push
ficom
adc
adc
loopne
(bad)
ja
call
add
push
adc
loopne
pop
add
shr
mov
jl
push
(bad)
shl
fdivr
scas
addr16
or
dec
les
xor
out
mov
icebp
pop
inc
aas
inc
mov
jo
bound
dec
out
arpl
fcomp
scas
nop
mov
int
mov
scas
(bad)
mov
pop
gs
test
ja
cmp
fwait
jmp
sbb
ins
dec
ret
pusha
shr
bound
dec
(bad)
push
out
mov
out
xlat
dec
clc
(bad)
into
cmp
and
mov
sub
mov
inc
aas
(bad)
jmp
pushf
add
aaa
mov
xor
mov
inc
add
cli
sbb
cmp
stos
(bad)
aad
push
mov
fmul
mov
cdq
loop
call
arpl
sahf
jecxz
mov
shr
jmp
jg
sbb
inc
outs
cmp
(bad)
call
xor
cmp
nop
bound
cmc
cmp
fdiv
xchg
mov
xchg
stos
sub
adc
jl
cmps
in
add
aaa
push
fstp
mov
inc
lea
imul
xchg
mov
arpl
adc
mov
xchg
push
or
arpl
sub
scas
das
loope
clc
push
inc
rcl
push
ss
out
daa
test
sub
jg
and
int3
mov
mov
cwde
inc
ret
pop
mov
and
or
sub
aam
xor
daa
push
inc
imul
lds
pop
sbb
fnstcw
js
pop
sub
push
shl
mov
shl
fcom
cmp
fimul
pop
jmp
fisttp
cld
fmul
sahf
push
jne
cmp
push
std
shr
pop
pop
lods
add
dec
mov
mov
xchg
sub
pushf
test
inc
inc
push
jmp
xchg
push
fnstsw
pop
jae
mov
mov
add
outs
xor
push
push
mov
into
jp
dec
sub
test
ret
mov
cdq
aad
jle
shr
das
push
mov
fyl2xp1
pop
dec
lock
repnz
mov
push
sti
out
adc
mov
push
sar
jmp
test
hlt
int3
arpl
xor
call
xchg
mov
inc
scas
icebp
(bad)
popf
sbb
and
in
scas
adc
fdiv
or
cmp
push
inc
sub
lahf
int3
std
push
aad
nop
sub
dec
mov
dec
jmp
in
cmp
sub
sbb
out
(bad)
cdq
or
clc
or
push
cmps
cmp
adc
and
in
shl
mov
cmps
pop
(bad)
fdivr
stc
inc
mov
mov
mov
cmp
adc
pop
test
and
ja
sbb
or
pop
pusha
aam
iret
in
mov
cmp
aad
xchg
add
mov
cs
and
pop
pop
cli
sub
xchg
xor
lahf
lock
sub
scas
stos
and
push
jg
xor
pop
(bad)
stc
dec
pop
jmp
xor
in
lock
or
sbb
dec
dec
and
lods
push
pop
sbb
movs
pop
pop
add
(bad)
iret
dec
stos
imul
jle
xchg
sahf
ja
xor
mov
mov
add
jae
xor
call
mov
retf
je
into
inc
std
xor
pop
rcr
adc
test
fisttp
loope
cmp
int
ss
(bad)
rcl
ret
loop
or
cld
sub
and
or
mov
jbe
xchg
je
arpl
(bad)
sti
out
fdiv
iret
or
shl
mov
adc
xor
adc
pop
and
pop
mov
inc
mov
outs
or
mov
xchg
pop
push
aam
add
jo
mov
sub
mov
fsub
jecxz
dec
mov
shl
stos
into
cmp
push
js
jg
std
retf
cmp
cmps
addr16
and
xchg
retf
mov
push
push
sbb
pop
xor
fisttp
inc
repnz
mov
outs
pop
jae
out
xor
push
push
cmp
lahf
inc
movs
add
add
sahf
cwde
or
jo
fwait
sub
sub
leave
xchg
movs
into
push
(bad)
sti
pop
add
in
mov
push
es
mov
shl
popa
push
mov
cmp
mov
jbe
mov
pop
lods
popa
je
mov
pop
movs
xor
jae
mov
in
fwait
or
mov
ss
jmp
jb
dec
loope
sbb
cli
sbb
sbb
mov
add
call
push
mov
scas
adc
mov
mov
repnz
(bad)
xchg
cli
test
mov
pop
inc
(bad)
sub
and
cmps
or
cld
pop
jg
dec
fcmovnb
in
into
(bad)
and
and
not
scas
outs
fs
scas
les
adc
pop
imul
and
pop
(bad)
mov
std
pop
dec
mov
mov
dec
in
or
push
mov
mov
pusha
fcom
call
arpl
push
xchg
jp
cmp
inc
xchg
icebp
inc
dec
and
gs
rcl
pop
inc
and
fistp
movs
stos
sbb
sbb
xchg
in
jge
popa
mov
mov
ret
pop
push
inc
cmps
add
in
xor
xchg
std
cmp
pop
adc
jns
inc
xchg
adc
mov
imul
pop
dec
cwde
dec
inc
add
hlt
mov
imul
push
jmp
inc
mov
ds
xor
les
mov
xor
inc
xor
test
mov
sar
push
cdq
nop
xchg
in
(bad)
aad
add
std
test
bound
cmp
loopne
leave
pop
cmc
call
dec
push
cli
sbb
scas
xchg
add
xor
or
sub
sub
pop
push
cs
add
jns
xchg
and
sbb
mov
pusha
sbb
push
and
sbb
repnz
jo
xlat
dec
inc
sub
xchg
and
out
jp
loop
adc
mov
xlat
cmp
push
in
ins
jmp
shl
add
push
dec
repz
arpl
(bad)
icebp
add
icebp
repnz
in
inc
inc
call
cmp
mov
dec
and
pop
pop
push
into
imul
mov
fnsave
inc
mov
iret
sbb
fisttp
add
cmp
loope
jle
addr16
xlat
rsm
and
jl
mov
lgs
sbb
shr
inc
push
jno
dec
(bad)
ja
push
je
adc
dec
push
scas
mov
hlt
pop
pop
pop
push
das
pop
cmp
mov
ins
test
add
test
xchg
push
or
out
shr
xchg
movs
push
sub
cmps
fsubr
cs
test
push
rcr
jb
xchg
pop
push
fxrstor
cmp
mov
xor
fisub
mov
call
xchg
jg
nop
or
mov
in
aad
fwait
bound
lock
scas
and
(bad)
fimul
test
xchg
aas
das
call
pop
adc
or
cmc
jnp
(bad)
jo
mov
enter
punpckhbw
jge
test
sbb
cmp
cmps
push
xrelease
daa
mov
jmp
outs
add
(bad)
xlat
cmp
shl
jle
dec
les
pop
shl
test
out
gs
push
jbe
rcl
dec
cmp
shr
mov
in
std
pop
adc
(bad)
aaa
dec
rol
movs
in
fadd
pop
out
jb
imul
gs
mov
mov
add
push
movs
cmp
and
test
lahf
mov
out
outs
jmp
dec
push
jmp
test
and
pushf
outs
in
int
jg
into
add
rcr
pavgw
fbld
push
test
mov
scas
sub
cmp
cmp
sub
or
pop
nop
jmp
dec
sub
sub
gs
mov
pop
popa
es
jns
sub
pop
inc
cmp
lods
jns
int
mov
dec
lock
retf
je
enter
out
(bad)
pusha
inc
inc
cdq
pop
pop
jg
ret
add
mov
out
inc
push
mov
lahf
mov
cmp
dec
sbb
xchg
pushf
xor
pop
push
out
cmp
(bad)
and
fst
push
lods
pushf
or
pop
call
scas
jmp
icebp
lds
shr
mov
xchg
lods
sti
nop
retf
or
push
inc
jnp
sar
loop
and
nop
icebp
mov
movs
stos
popa
je
mov
adc
enter
push
(bad)
jl
sub
jmp
sub
pushf
cs
push
pop
popf
je
dec
xchg
fdivp
jno
out
lods
sbb
stos
xor
sbb
push
inc
ins
lock
or
cmp
jne
comiss
cmps
fcmovu
push
jo
aam
push
(bad)
mov
mov
jnp
and
stos
in
repnz
or
cmp
ret
xchg
dec
cmp
jo
push
sbb
fisub
out
cmp
push
or
jns
mov
movs
push
mov
jno
lock
and
mov
dec
mov
jns
jge
inc
mov
rcr
in
ins
inc
fmul
add
inc
add
stos
xchg
dec
loope
cmps
push
ss
and
push
and
mov
fdiv
xchg
out
ja
call
dec
test
(bad)
jne
loopne
mov
aas
push
call
pushf
fild
jecxz
jg
js
mov
xchg
in
aas
fldenv
cwde
cmp
div
mov
pop
xor
pushf
ret
aam
hlt
pop
sub
fwait
inc
xchg
mov
daa
mov
pop
pop
add
ins
or
mov
addr16
nop
outs
repnz
xor
dec
(bad)
mov
jae
popf
fisttp
mov
pop
pop
(bad)
jl
mov
ret
push
mov
je
mov
clc
shl
(bad)
scas
cmp
pop
in
ins
xor
xchg
jmp
mov
je
repnz
and
jbe
cmp
adc
shr
adc
pusha
ins
inc
movs
sub
xor
dec
test
fs
std
add
das
dec
sbb
cmp
test
or
test
and
cld
(bad)
mov
sbb
mov
pusha
xchg
adc
mov
cmp
clc
jmp
sub
mov
movs
icebp
pop
ret
out
push
lea
(bad)
lds
sbb
cwde
or
std
add
jae
xchg
or
cmp
push
imul
mov
in
js
mov
adc
add
jmp
pop
mov
pop
add
jmp
xchg
jg
out
shl
mov
and
fisubr
sahf
mov
fldcw
daa
inc
add
dec
dec
jne
ss
enter
fdivr
or
cdq
retf
in
push
hlt
adc
cmp
mov
or
push
ds
test
ret
jb
fcom
inc
dec
out
xchg
push
xor
cmps
pop
xlat
cmps
enter
add
mov
and
pushf
movups
mov
dec
ret
jmp
jne
push
js
sub
cmp
mov
xor
arpl
enter
outs
jp
sub
mov
(bad)
les
mov
imul
or
or
push
mov
inc
sbb
sub
test
les
jnp
jbe
cmp
mov
mov
pop
inc
sbb
adc
in
out
into
cmp
sub
mov
rol
xchg
gs
mov
lahf
lods
sbb
fnstenv
pusha
mov
pushf
add
mov
and
fisub
dec
in
(bad)
sub
sub
rcr
xchg
mov
push
xchg
lods
rcr
and
lock
pop
enter
add
js
sub
pop
sbb
add
dec
sub
push
cmp
sub
xor
or
push
hlt
outs
mov
in
sbb
popa
adc
fnsave
jo
mov
mov
loopne
(bad)
add
ffreep
cwde
ret
enter
mov
xchg
push
enter
int3
int3
nop
xchg
imul
and
out
pop
outs
adc
jno
ss
inc
xor
call
aas
jae
in
ret
pop
into
(bad)
mov
(bad)
fcomi
xchg
loopne
mov
ret
xor
mov
lods
into
mov
inc
(bad)
outs
sahf
pandn
mov
ja
jno
fist
mov
or
push
mov
dec
in
xchg
dec
lock
cld
pushf
sbb
out
in
dec
mov
xor
xchg
dec
outs
sub
arpl
int3
dec
loope
or
sub
mov
inc
jmp
arpl
dec
xchg
add
pop
cwde
std
cdq
cmp
shl
(bad)
adc
push
rcl
test
and
(bad)
pushf
sbb
cmp
sub
jno
outs
js
ss
mov
mov
movs
xor
(bad)
pop
popa
cmps
jmp
cmp
test
aaa
cld
adc
xchg
lods
or
or
sahf
mov
pop
je
scas
pusha
popf
lds
mov
xchg
pop
popa
xchg
jno
inc
sub
mov
push
ror
cmc
adc
call
aam
ins
cmps
in
xchg
push
arpl
pop
stc
fidivr
add
movs
scas
emms
push
push
and
lahf
mov
pop
test
pop
jge
js
(bad)
test
push
leave
xor
sub
mov
mov
push
loope
aaa
cmc
xchg
(bad)
clc
(bad)
faddp
push
mov
sbb
(bad)
fadd
adc
xlat
push
xchg
xchg
or
pop
aad
loop
mov
fnsave
add
scas
cld
jb
fnstcw
fst
stos
or
sbb
xchg
test
inc
in
iret
xchg
mov
out
jmp
pop
nop
loopne
lods
(bad)
call
das
in
gs
cwde
scas
jno
sub
and
data16
cmps
mov
jmp
retf
fsubr
cs
ret
cmp
sbb
jge
das
movs
das
dec
push
or
xchg
ds
jmp
push
hlt
cwde
test
in
pop
xchg
jg
pop
aaa
xor
xchg
mov
fsub
cmps
je
inc
push
ret
js
adc
mov
sub
or
xlat
fwait
jecxz
inc
xchg
and
(bad)
popf
mov
inc
aaa
in
and
imul
clc
rcl
sub
stos
mov
cmps
inc
xchg
jne
adc
mov
dec
mov
dec
and
xchg
enter
rol
cld
pop
adc
into
addr16
inc
les
jne
test
stos
adc
aas
and
jle
test
mov
das
cmp
fst
adc
mov
outs
push
pop
pop
sti
or
pop
fstp
iret
lea
pop
call
cwde
add
jno
nop
mov
popf
mov
jo
or
sar
sub
adc
push
gs
push
sti
adc
cmp
cs
sbb
clc
scas
sti
test
fs
loope
push
cs
in
iret
mov
pop
dec
sub
ss
xchg
outs
pop
repnz
nop
or
push
ja
dec
pop
xor
push
xor
push
scas
gs
push
ret
push
repz
adc
fild
mov
mov
dec
cmp
add
pop
das
out
xchg
adc
mov
jns
lock
jmp
mov
in
push
mov
rep
shl
retf
aam
jge
fs
aaa
ds
mov
mov
loopne
es
jne
(bad)
jmp
xchg
pop
mov
inc
fwait
add
stos
cmps
bswap
fild
and
std
cmps
dec
stc
dec
cmp
dec
movs
imul
lods
(bad)
ret
xor
or
fs
inc
(bad)
mov
jmp
(bad)
in
cs
cld
ficomp
aam
movs
adc
pop
dec
bound
jae
mov
and
outs
mov
fs
lea
enter
fs
mov
mov
rcl
movs
addr16
jmp
cmps
mov
pop
not
cli
mov
xor
mul
retf
mov
cdq
push
jb
cmps
enter
cs
ins
adc
dec
jle
addr16
and
jno
nop
ss
adc
push
inc
push
lahf
loopne
push
fisubr
sub
ins
sub
pop
mov
mov
pop
pop
test
jle
stos
stos
fld
inc
ret
addr16
dec
ins
push
jg
or
int
cdq
retf
lods
pop
or
and
mov
dec
jns
and
sbb
jmp
sbb
add
cmc
mov
popf
mov
sti
xor
(bad)
xchg
test
pop
jno
cwde
mov
ret
inc
xor
or
cmc
rol
xchg
ja
je
cmp
dec
adc
xchg
loop
std
fsubr
(bad)
movs
push
js
ins
jl
outs
jge
xchg
lahf
out
push
pop
fst
out
stc
and
popa
repnz
call
leave
pop
(bad)
xor
aas
or
jmp
nop
cmp
and
mov
xor
les
xchg
pop
or
aaa
ja
test
xor
xor
arpl
xchg
out
and
xchg
xor
loop
xor
cli
dec
cs
and
call
in
add
popf
daa
arpl
jae
pop
dec
cdq
jae
sub
std
fs
popa
retf
push
dec
or
and
mov
jo
or
adc
add
mov
fwait
cs
shr
fwait
scas
inc
jmp
out
mov
adc
jmp
outs
or
jp
and
fwait
mov
ret
jns
popf
sub
ficomp
ret
jl
stos
and
xor
mov
stos
push
mov
movs
mov
das
(bad)
cmps
and
dec
mov
or
jp
ds
int
in
cmp
cmp
mov
ins
cmp
ret
xchg
mov
imul
mov
rcr
or
xchg
pop
mov
(bad)
ret
add
retf
cwde
jns
sahf
mov
jns
xchg
fild
test
mov
mov
jmp
push
leave
das
(bad)
push
lds
mov
xor
add
(bad)
repnz
outs
mov
sub
mul
mov
mov
mov
mov
adc
retf
jecxz
test
lods
mov
add
fsubr
jno
pushf
mov
sbb
fcomp
hlt
enter
mov
jmp
jmp
xchg
cmp
into
loop
mov
sbb
add
sub
mov
test
xchg
inc
mov
xor
scas
xchg
les
stc
mov
inc
add
dec
test
and
mov
xor
push
call
outs
xor
lds
dec
jmp
mov
and
mov
mov
cmps
clc
mov
pop
mov
jae
ficom
in
mov
js
out
retf
icebp
retf
inc
pop
cmps
inc
mov
test
add
add
mov
mov
loope
(bad)
mov
jo
mov
and
(bad)
cmp
loop
sbb
and
enter
inc
push
nop
push
test
iret
push
jecxz
aam
jns
nop
add
jmp
clc
jo
mov
cmp
push
pop
repz
(bad)
pop
or
scas
sub
inc
jle
lahf
imul
test
jmp
shl
inc
stos
mov
cmp
xor
adc
movs
mov
clc
pavgb
jmp
mov
add
cmp
loop
mov
movs
popa
test
cmp
add
xchg
(bad)
out
test
cmps
pop
inc
pop
push
leave
paddsw
das
jae
inc
push
sub
push
jnp
mov
mov
clc
push
xchg
and
loop
in
and
ret
sbb
out
push
loope
fdivp
aas
xchg
xlat
scas
arpl
push
jmp
xchg
mov
iret
adc
std
aaa
test
cwde
ins
mov
jnp
cmp
icebp
pushf
push
(bad)
jge
jbe
sbb
and
fidivr
cmp
shl
cmp
sbb
fs
movs
dec
cmc
add
mov
call
mov
inc
gs
in
sti
sar
push
movs
push
pushf
jmp
psubusw
cmc
iretw
xor
add
mov
dec
int3
or
sbb
ja
sub
sbb
jmp
push
lea
cmp
cmp
push
int
repz
mov
jg
push
and
pop
fstp
pop
out
ret
popa
xor
dec
es
bswap
jbe
inc
repnz
mov
cmp
mov
fadd
shl
daa
sub
dec
daa
sub
adc
jg
test
add
dec
mov
jg
dec
xor
and
mov
ins
imul
test
fcmove
sbb
mov
pusha
ror
gs
hlt
add
mov
xlat
pop
(bad)
mov
mov
sbb
aam
inc
or
inc
inc
scas
test
loope
inc
nop
mov
imul
loope
shr
jmp
loope
outs
in
movs
pop
sbb
mov
shl
imul
mov
sub
adc
pop
sub
sti
stos
shl
aad
(bad)
test
lock
cmp
pop
mov
adc
add
pop
inc
push
jmp
int3
adc
retf
xchg
(bad)
mov
mov
dec
mov
jmp
jmp
jne
inc
push
pop
popf
dec
arpl
stc
neg
mov
fidivr
mov
repnz
hlt
test
sbb
test
ds
pop
or
repz
mov
xor
mov
enter
dec
ins
fisttp
cmp
adc
fimul
cdq
xor
jnp
sub
add
lea
dec
dec
rcr
mov
aaa
and
inc
jns
xor
pmulhuw
push
and
cmc
fbld
jnp
rcl
mov
jns
xor
or
xchg
cli
inc
push
push
arpl
std
mov
sub
bound
aad
scas
pop
cmp
(bad)
jbe
inc
ja
les
xchg
mov
movs
aad
sbb
lods
lahf
add
aaa
fwait
fs
data16
mov
inc
jbe
add
pop
test
dec
cmp
mov
inc
xor
loop
icebp
test
pop
xchg
xor
cmps
dec
push
fcomp
adc
int
push
add
pop
movs
mov
cli
stc
mov
jmp
and
sar
pop
pop
sbb
imul
jnp
mov
jmp
sar
push
clc
ficom
ins
(bad)
ss
xchg
sbb
jmp
or
aas
mov
cmp
fisub
pushf
inc
ja
test
sbb
fmul
and
mov
inc
and
xchg
adc
xor
lea
scas
mov
xor
push
mov
int3
stos
fld
mov
pop
cmp
ret
lods
out
dec
aaa
repnz
inc
sub
dec
stos
xlat
add
bound
jmp
inc
mov
mov
or
in
test
shl
add
retf
mov
lock
inc
dec
cmp
fdiv
stc
add
lea
leave
mov
dec
xchg
cmps
in
psrlw
mov
jle
xor
test
mov
xchg
(bad)
sub
clc
or
cld
ja
ds
mov
sub
call
daa
inc
test
mov
mov
push
clc
mov
dec
sti
dec
sub
push
mov
ret
xor
inc
jecxz
or
jne
dec
dec
pusha
cwde
scas
ret
call
push
cmp
aaa
mov
mov
and
loopne
and
cmp
dec
jbe
cmps
pop
sub
movs
ret
jmp
(bad)
pop
loope
xor
push
sbb
lds
(bad)
push
sti
mov
and
mov
sbb
inc
loopne
and
or
xor
enter
add
(bad)
aad
(bad)
cli
dec
test
(bad)
in
in
xchg
shl
(bad)
hlt
(bad)
pop
sub
mov
mov
scas
mov
mov
pop
cmp
inc
jbe
xchg
mov
jb
inc
movs
inc
mov
inc
shl
(bad)
push
pop
test
retf
add
and
or
dec
mov
bound
aaa
cmp
dec
sub
pop
stos
scas
xchg
sbb
pop
loop
scas
mov
mov
dec
mov
add
mov
mov
xchg
sbb
mov
jmp
(bad)
push
stc
mov
mov
(bad)
mov
test
lods
test
imul
inc
mov
jae
xchg
dec
fimul
xchg
je
pop
ins
jmp
adc
jge
add
or
mov
ins
lahf
pop
clc
fist
cmc
aam
sub
inc
adc
and
loope
mov
dec
push
test
pop
(bad)
fiadd
lods
pop
push
mov
push
xchg
out
sub
popf
mov
stc
dec
push
aam
cs
loop
mov
xor
ins
jecxz
mov
leave
mov
je
push
dec
loopne
jge
ror
bound
jg
mov
jnp
ds
adc
fild
mov
dec
popf
xchg
and
mov
jl
mov
fidiv
xchg
push
mov
icebp
stos
adc
leave
test
lea
js
mov
arpl
(bad)
and
jmp
or
jmp
dec
dec
in
mov
mov
(bad)
mov
mov
mov
jmp
and
pop
xor
aad
sub
(bad)
in
or
leave
mov
fwait
add
(bad)
push
aad
stc
lock
inc
test
rcr
mov
in
pop
sbb
mov
imul
pop
rol
jmp
mov
div
ss
mov
xchg
rcr
pop
stc
(bad)
sub
and
jae
inc
sbb
cmp
inc
mov
test
sbb
out
stc
movs
lahf
pop
sahf
rcl
add
inc
mov
add
jg
in
ss
push
push
fsub
cli
xlat
jge
or
shl
mov
mov
mov
jl
mov
sbb
or
aad
fidiv
inc
or
adc
std
inc
jge
inc
mov
mov
dec
inc
cmp
js
cmp
mov
mov
std
(bad)
arpl
xor
mov
test
adc
mov
pushf
xchg
scas
leave
pop
inc
movs
imul
adc
push
mov
cmp
fwait
rcr
popa
sbb
movzx
cmps
cmps
outs
daa
ss
loop
shr
sub
pop
and
inc
xor
repz
cmp
loop
xchg
jg
pop
data16
mov
pushf
jle
shl
inc
inc
and
mov
aas
adc
fs
sub
int
sub
cli
jecxz
(bad)
fwait
gs
jb
fcomip
pop
and
add
out
sub
xor
test
push
stc
and
sbb
data16
fbld
and
int
sti
mov
dec
or
xchg
pop
cmps
push
cmp
push
add
mov
push
jne
fisubr
js
sub
jnp
push
lods
stc
mov
sub
cmp
sahf
inc
jg
cdq
or
imul
xor
shl
into
adc
ins
rcl
mov
retf
xor
movs
rcl
mov
mov
jne
mov
mov
movs
shr
push
dec
loop
push
ds
lods
sub
(bad)
jb
sub
(bad)
test
call
xchg
fistp
xchg
xchg
fdivr
fsub
mov
xchg
ficom
rol
mov
mov
les
dec
inc
push
iret
sub
scas
jp
hlt
mov
loope
out
lock
mov
test
in
and
and
mov
jmp
push
pushf
adc
jecxz
xor
mov
pop
icebp
in
and
xor
pop
enter
jg
cli
rcr
and
icebp
sub
sub
dec
dec
(bad)
adc
mov
es
xchg
idiv
mov
mov
cli
xorps
gs
loopne
call
or
gs
jmp
add
xchg
mov
add
neg
sub
loopne
dec
dec
scas
or
push
and
cmp
pop
scas
aad
jae
fstp
aas
daa
in
loop
je
ins
push
cmps
mov
ret
sbb
push
push
test
fs
pop
iret
dec
inc
ja
pop
call
inc
pop
mov
sbb
in
cs
lods
repnz
fdivr
jmp
add
in
and
xor
jnp
push
cld
fst
push
xor
sub
push
mov
ss
cmp
adc
dec
adc
out
repz
xchg
icebp
(bad)
call
nop
fucomi
mov
jns
dec
mov
bswap
sbb
mov
ds
out
lea
repnz
packsswb
add
or
aaa
or
xchg
imul
out
xor
dec
pusha
dec
ss
aam
sub
inc
xor
movs
mov
call
and
pop
sbb
jecxz
lods
nop
sub
ret
push
push
out
and
jnp
and
xor
je
mov
add
in
jmp
outs
jmp
adc
adc
test
adc
sbb
inc
fmulp
popa
(bad)
push
outs
into
dec
out
loop
add
cmp
dec
cmp
lds
push
push
pop
arpl
sbb
test
inc
push
ret
jmp
(bad)
ror
stos
or
and
in
ret
cmp
xor
xlat
mov
gs
lods
dec
push
mov
mov
iret
enter
sub
iret
out
sbb
mov
shl
dec
cwde
ret
stos
xchg
add
cmps
in
adc
cmp
xor
inc
push
jg
(bad)
push
xchg
or
je
xchg
es
pop
pop
movs
mov
or
and
iret
cmp
popa
es
xchg
test
mov
jo
push
xchg
mov
ds
cdq
mov
fsub
nop
xor
xchg
les
jnp
or
mov
dec
pop
bound
cwde
push
cmp
aam
rol
test
push
(bad)
int3
pusha
es
push
push
adc
or
fistp
push
xor
xchg
pushf
mov
mov
mov
sub
je
lock
mov
fsub
test
sbb
in
fs
das
and
xlat
push
xor
sbb
push
call
les
fsub
add
and
ret
ins
dec
or
call
xchg
push
jecxz
cdq
pop
bound
cmps
adc
inc
in
out
cmp
push
mov
xchg
fimul
add
pop
dec
adc
fs
mov
mov
xchg
or
call
std
xor
push
push
mov
cmps
and
mov
pxor
jp
cld
ja
add
in
retf
pop
clc
jmp
inc
call
scas
jae
int
outs
jno
pushf
add
fsubp
mov
sub
stos
cmp
daa
pop
fild
imul
cld
cmps
sbb
cmp
cmp
cs
sbb
ret
or
fistp
imul
xor
ret
jno
xchg
mov
mov
sar
sub
bound
in
(bad)
adc
pop
add
jbe
fldl2t
mov
jno
pop
and
jmp
and
inc
jmp
jns
add
pop
jae
adc
adc
lds
aaa
dec
cli
loopne
adc
frstor
ins
jle
cdq
ds
add
push
jecxz
sar
ret
jbe
lock
daa
pop
mov
xor
sbb
add
cs
lea
adc
pop
push
pop
push
fcomp
or
xchg
push
lds
sar
mov
push
mov
add
stos
pushf
fwait
ss
xor
mov
inc
mov
xchg
xor
mov
and
push
int3
dec
je
push
stos
adc
push
sub
das
lods
and
dec
mov
add
data16
(bad)
int
stos
imul
push
pop
adc
mov
sti
nop
inc
in
inc
scas
sub
psllq
mov
(bad)
mov
xor
push
nop
cs
pop
sbb
jp
mov
jp
(bad)
xlat
pusha
mov
jnp
mov
hlt
loope
xchg
mov
cmp
imul
jae
xor
push
sub
cli
pop
pusha
jmp
inc
mov
sbb
mov
and
sbb
pop
fstp
xchg
push
sahf
mov
int
ja
popa
mov
and
cmps
jge
movs
test
pop
inc
inc
sbb
mov
imul
mov
out
jmp
(bad)
loope
dec
outs
jmp
(bad)
mov
std
pop
push
or
test
mov
jmp
push
cmc
push
pop
inc
jb
dec
clc
arpl
mov
icebp
cmc
xor
clc
xor
sbb
jle
test
prefetch
or
fbld
enter
ret
dec
(bad)
lock
in
sbb
bound
fucomi
out
aad
(bad)
xchg
jne
sub
or
jbe
pop
dec
jne
lods
sub
inc
push
out
imul
cmc
jmp
add
or
xor
sti
repnz
inc
movs
mov
mov
pop
mov
imul
adc
fld
sub
push
mov
dec
or
hlt
sbb
inc
mov
lods
ss
and
std
js
and
adc
sbb
cmc
scas
push
ds
idiv
ret
in
push
and
fabs
scas
sub
sub
outs
jp
or
(bad)
icebp
scas
xchg
addr16
push
or
dec
(bad)
xor
ret
dec
retf
aad
inc
jne
scas
inc
and
jb
mov
mov
dec
mov
dec
ret
inc
cli
enter
xor
add
push
adc
ins
ret
xchg
test
outs
les
jb
xchg
pop
dec
xchg
jmp
lds
pop
ja
mov
repnz
and
retf
mov
test
push
or
push
jns
mov
mov
outs
imul
dec
mov
test
jns
jnp
(bad)
xchg
cmc
mov
in
or
je
dec
sahf
jecxz
inc
xchg
push
aaa
jmp
jmp
xchg
test
shr
add
pushf
cmps
cmp
dec
cld
int
mov
cmp
cmps
cmp
repnz
jno
and
push
test
pop
cmc
loopne
int3
sub
cmp
pop
lds
lods
mov
mov
mov
jg
xchg
adc
and
sbb
mov
jle
and
movs
sbb
push
push
sub
jmp
cdq
mov
int
(bad)
fisttp
fcomip
in
enter
jb
mov
ret
scas
pushf
outs
inc
mov
mov
mov
repnz
(bad)
not
mov
jg
aad
sar
ins
(bad)
in
out
adc
fwait
(bad)
out
lods
cmps
stos
xor
bound
aad
lahf
test
cmp
pop
mov
xor
out
mov
outs
cdq
movs
fyl2xp1
and
aaa
mov
xor
inc
mov
mov
mov
or
int
jl
mov
ficom
pop
clc
out
fcomp
ins
or
jb
jae
jecxz
outs
ja
or
and
lods
jb
xchg
mov
mov
cmps
mov
push
out
inc
pop
rcl
stos
mov
scas
ss
push
fsubr
call
lods
jbe
mov
xchg
cmp
pop
call
dec
mov
and
lock
mov
call
cmp
outs
add
dec
jecxz
out
test
repnz
movs
or
mov
cmp
mov
mov
mov
inc
lds
dec
addr16
xchg
rol
arpl
mov
add
popa
out
and
jmp
(bad)
xchg
or
sub
jae
xor
xchg
fist
(bad)
test
mov
cmp
xchg
les
je
jp
adc
push
dec
movs
aad
retf
leave
out
push
adc
mov
int
xor
aas
adc
out
pop
jne
or
xchg
aas
in
mov
push
repz
sub
jle
cs
mov
add
movs
arpl
in
fld
xor
jge
mov
iret
mov
inc
or
icebp
cmp
lea
fldl2t
daa
test
(bad)
dec
and
in
sbb
push
inc
les
movs
movs
jg
add
xchg
pop
push
(bad)
jns
clc
movs
push
xchg
(bad)
pop
fstp
or
ds
in
(bad)
call
movs
cmps
push
aam
xchg
adc
and
cmp
nop
mov
movzx
ret
pop
jge
and
in
and
xor
adc
cmps
dec
sub
pop
mov
inc
sahf
xchg
add
jb
xchg
pusha
sub
sub
jle
mov
dec
pop
movs
cmc
int
mov
jae
inc
pop
push
mov
lock
sub
mov
lea
xchg
lahf
pop
mov
inc
ins
idiv
jge
ja
aas
(bad)
jo
int
sub
sbb
adc
mul
xchg
fst
je
stos
adc
pop
test
inc
arpl
jnp
mov
xlat
sub
stos
push
and
call
aaa
movs
enter
cld
in
xlat
out
mov
adc
mov
mov
scas
or
push
add
or
adc
ss
ss
mov
jae
cmp
xchg
out
pop
or
shl
mov
aad
push
pop
ret
push
xchg
and
ins
jnp
int3
in
add
pop
ss
imul
inc
cdq
(bad)
and
in
push
mov
sub
cmp
pop
sbb
add
and
jne
stos
jl
inc
cmp
jnp
add
(bad)
in
push
mov
jb
sub
leave
daa
inc
int
inc
iret
fs
dec
pop
pusha
xchg
push
push
(bad)
xchg
scas
stos
retf
jae
dec
popa
js
ret
mov
shr
fmul
das
sbb
sbb
out
aam
xchg
aaa
cmps
loop
lahf
jnp
loop
sti
or
mov
test
jbe
xor
(bad)
call
mov
push
sub
scas
retf
outs
stos
mov
pop
loop
pop
lahf
push
add
pop
je
inc
sub
lds
mov
and
mov
jp
gs
retf
imul
mov
into
mov
bound
xlat
daa
(bad)
div
mov
imul
push
add
and
jb
xor
sahf
imul
mov
scas
mov
mov
sub
xchg
mov
fistp
ja
dec
jmp
push
rcr
add
push
cmp
lods
ins
xchg
mov
in
sub
arpl
in
jno
popa
ins
sbb
sbb
sbb
iret
fild
movs
xor
(bad)
retf
int
push
ss
cwde
movs
call
out
xor
adc
sahf
xchg
aad
sub
push
sti
mov
cmp
je
fdivr
fmul
sub
pop
ret
arpl
xrelease
xchg
push
js
pusha
es
loopne
and
dec
pop
rcr
outs
jecxz
nop
fadd
popf
cmp
cmps
push
sar
and
push
ins
fs
cmp
cmps
enter
in
daa
and
mov
les
in
int
pop
dec
cs
add
enter
adc
loop
retf
jge
and
and
pop
pminub
ss
ja
test
pop
fdivr
jmp
loope
pop
dec
push
ret
mov
test
shl
icebp
mov
cmp
leave
add
xor
mov
shl
jge
sbb
iret
push
jnp
and
fnstcw
into
or
sub
les
or
adc
pop
cmp
(bad)
adc
sub
pop
lds
pop
in
inc
sets
inc
push
out
jnp
adc
in
mov
cmp
xchg
bound
sub
xor
imul
cmp
xchg
retf
sbb
pushf
or
in
mov
shl
sub
cmp
retf
fistp
xchg
jbe
ja
iret
or
mov
sub
jmp
xlat
js
or
in
clc
nop
daa
pushf
inc
(bad)
les
(bad)
int3
(bad)
sbb
mov
jmp
in
push
sahf
pop
or
sahf
push
mov
test
sub
push
cmp
scas
pop
into
mov
icebp
inc
mov
adc
add
pop
jae
shl
out
out
sub
retf
pop
les
pop
xchg
inc
push
icebp
mov
xchg
call
or
data16
cmp
mov
add
cmp
(bad)
cmp
cwde
or
mov
gs
mov
mov
mov
js
xchg
mov
in
aam
mov
iret
cld
jne
mov
hlt
dec
aam
adc
icebp
jns
popf
fisub
inc
adc
sbb
rcr
jb
fstp
int3
fcmovnb
xchg
sub
jb
xlat
dec
mov
das
ss
adc
aam
cmp
psrlw
ds
scas
mov
lds
pop
pop
aam
pusha
jmp
xor
and
mov
cmc
call
adc
push
xor
xchg
sahf
(bad)
test
cmp
pusha
(bad)
not
ja
fucomp
jg
in
aam
and
push
jecxz
fs
jnp
push
das
aad
push
pop
icebp
repz
leave
xor
jp
lods
xor
fbstp
test
jmp
pop
and
mov
xor
aas
cmp
out
cmc
mov
xor
and
jge
xchg
jmp
stc
js
icebp
jbe
scas
mov
icebp
out
stos
lock
clc
dec
mov
leave
and
dec
sub
mov
pop
fwait
leave
xchg
addr16
hlt
enter
pop
adc
inc
or
xor
jne
(bad)
je
mov
outs
cmc
mov
stos
call
data16
dec
idiv
arpl
or
xchg
mov
push
movs
es
lods
push
aas
nop
stos
call
push
cdq
pushf
(bad)
fistp
movs
int3
in
push
xchg
jns
mov
leave
push
inc
and
mov
dec
mov
lods
and
jle
inc
pop
(bad)
cmps
or
adc
xchg
stos
data16
sub
or
dec
mov
cmps
rcr
cmp
neg
mov
cmp
fstp
mov
pop
sub
inc
dec
sub
es
xchg
push
outs
or
es
lahf
xlat
add
sbb
or
xchg
std
loope
mov
pop
cmc
sbb
cli
push
and
sub
jae
je
mov
add
std
inc
mov
movs
sub
je
mov
mov
and
sub
ret
pop
dec
pop
dec
add
xor
movs
pop
icebp
aaa
imul
xchg
sub
lds
rcr
dec
pusha
dec
pop
pusha
mov
imul
js
add
push
push
dec
add
xchg
xor
jecxz
xor
dec
mov
sub
std
push
aam
and
scas
push
inc
and
inc
rol
lea
stos
and
cmp
lods
into
mov
or
fs
push
je
mov
xchg
ss
mul
inc
ins
call
clc
jge
das
retf
loopne
enter
das
and
addr16
aam
sbb
leave
push
mov
mov
sbb
pop
shl
xchg
dec
ret
lock
xchg
jg
jecxz
gs
cmps
add
adc
push
outs
(bad)
or
or
jle
mov
mov
rol
push
pop
mov
and
gs
jp
sub
aaa
fstp
test
mov
aam
inc
scas
cmp
pop
fcmovbe
cmps
stc
lahf
pop
pop
test
mov
int
dec
lahf
xor
retf
lds
mov
jo
into
pop
xchg
ss
add
push
lock
mov
imul
in
clc
sbb
out
or
dec
cs
add
xor
mov
push
sahf
enter
std
out
dec
int3
xchg
jo
sbb
je
push
stos
push
lods
mov
xchg
out
push
mov
cdq
add
sbb
push
sub
add
fmul
push
xchg
loope
dec
sub
cmps
adc
mov
push
or
sub
mov
repnz
(bad)
mov
jle
test
mov
aad
(bad)
daa
fistp
sub
add
push
movlps
div
mov
pop
ja
lods
loope
push
ror
loopne
sub
(bad)
in
or
or
lock
daa
dec
adc
(bad)
ficomp
and
jne
cdq
hlt
jp
inc
cmp
enter
adc
out
sar
std
loope
xchg
movs
dec
dec
add
cld
xor
fist
fiadd
sbb
test
out
add
add
aas
in
push
out
and
pop
jae
repz
in
xor
in
inc
pop
hlt
fnstcw
jmp
test
and
sbb
adc
call
xchg
or
sub
jne
std
lea
lods
lods
push
fcmovnu
cdq
cmp
scas
xor
arpl
xor
push
push
cmp
pop
cs
sbb
add
push
cmp
pop
ja
or
shl
int
xchg
dec
movs
mov
mov
jmp
add
inc
pop
out
jnp
inc
dec
mov
mov
push
mov
and
fwait
dec
push
xlat
iret
push
fwait
or
aas
adc
ds
shl
cmps
mov
dec
or
sub
ins
test
js
add
pop
fisttp
or
test
fnstsw
xchg
mov
or
cwde
addr16
jecxz
inc
mov
cmp
sbb
les
inc
stos
mov
ja
push
adc
push
mov
mov
ins
mov
sbb
int3
repnz
inc
mov
jmp
dec
pop
fild
and
ins
js
pop
push
jne
xchg
in
ror
into
add
test
fist
mov
in
(bad)
outs
inc
dec
xor
scas
js
mov
ja
imul
not
stos
std
scas
xor
xor
xchg
jmp
xor
jns
xor
scas
push
cmps
nop
hlt
sub
call
cli
mov
or
cmps
pop
setno
sub
cwde
jmp
retf
add
mov
jmp
and
mov
push
jb
scas
shl
mov
out
cmp
push
cmp
ja
sbb
pop
(bad)
mov
jle
addr16
jmp
add
in
loopne
pop
icebp
pop
fcom
mov
jns
lahf
add
xor
mov
std
mov
jmp
xchg
mov
or
test
inc
add
sub
mov
mov
xchg
jg
sub
and
(bad)
into
sub
ret
adc
ret
push
lds
xchg
pop
retf
in
pop
push
jne
jle
lahf
daa
retf
cmps
aam
(bad)
dec
xchg
lea
test
cmp
jne
xchg
and
shr
imul
mov
adc
adc
out
test
int
inc
rcl
sub
sbb
lock
popa
retf
cmp
in
fwait
dec
mov
fiadd
xor
mov
fbstp
std
(bad)
scas
nop
stos
jb
pop
sub
dec
je
scas
dec
sbb
(bad)
sar
push
data16
mov
loop
ret
pop
sub
jg
adc
sti
arpl
mov
lods
dec
cmp
xchg
out
jmp
shr
mov
dec
retf
and
out
scas
lds
mov
rcr
pop
js
sbb
lods
mov
test
mov
add
and
push
scas
stos
sub
aaa
int
leave
mov
inc
rol
jbe
pop
sbb
push
(bad)
mov
fstp
mov
add
mov
jmp
shl
fist
dec
daa
in
(bad)
fcom
cmp
lods
push
mov
pop
sub
mov
sbb
xor
cmc
scas
sbb
xlat
fbld
mov
rcr
or
cmp
mov
lahf
pop
aaa
mov
pop
and
es
dec
xor
cmps
loopne
inc
call
pop
out
(bad)
xor
and
pop
jg
mov
xchg
sbb
call
enter
test
hlt
mov
loopne
inc
mov
lods
popf
jno
(bad)
ss
sbb
test
inc
mov
pusha
stos
stos
adc
or
mov
clc
std
fwait
cdq
sub
lods
not
mov
pop
lock
in
(bad)
int3
pop
loop
mov
nop
pop
jg
inc
sbb
push
(bad)
sub
dec
push
ja
mov
data16
ret
xor
sahf
clc
pop
scas
cmps
aaa
jns
mov
je
test
sub
addr16
xchg
cmp
jae
cmp
cld
and
dec
inc
dec
add
xchg
pop
inc
fist
scas
xchg
or
jecxz
dec
js
jb
and
popa
jno
jbe
or
pop
loop
loope
inc
call
mov
push
out
lea
idiv
outs
and
xor
pop
fucom
dec
inc
dec
loopne
nop
mov
xchg
adc
imul
mov
fld1
and
fwait
popa
mov
fidivr
aad
rol
ja
xchg
fisubr
popa
ins
or
jp
xchg
test
cli
dec
and
aam
add
in
std
(bad)
jmp
cmp
push
mov
dec
dec
cwde
mov
or
adc
sti
jmp
inc
pop
outs
mov
mov
inc
movs
push
shl
push
aaa
out
inc
mov
mov
cs
dec
pusha
jns
add
(bad)
test
xor
dec
out
cmps
jge
aam
out
int
mov
cmp
ins
adc
imul
clc
loopne
push
mov
xchg
mov
xor
shr
ret
jp
dec
jmp
(bad)
cmc
sub
mov
repz
popa
fisub
in
cmp
mov
jne
sbb
xor
mov
adc
mov
in
sbb
(bad)
jmp
imul
test
jg
xchg
cwde
imul
add
or
test
fnstcw
int
mov
cmps
push
xlat
adc
ror
shl
adc
sahf
mov
inc
mov
ret
(bad)
out
aaa
out
mov
iret
ins
adc
mov
jns
cli
fcmovbe
mov
sub
bound
scas
pop
mov
push
(bad)
repnz
add
or
push
loope
aaa
push
jae
test
add
or
adc
aaa
cmc
(bad)
out
daa
imul
push
test
mov
jge
mov
sar
dec
out
sti
ror
jg
pop
mov
add
inc
sub
jg
sub
xchg
jne
xor
and
es
out
or
hlt
push
retf
fstp
retf
xor
push
add
inc
and
pop
pop
xchg
sti
dec
mov
sub
outs
imul
mov
inc
fs
pop
mov
cmp
fild
and
xor
sbb
test
fwait
repnz
or
add
sbb
js
jne
popf
hlt
out
int
sub
addr16
sbb
retf
(bad)
outs
pop
out
dec
test
pusha
(bad)
sbb
adc
push
pop
fist
jecxz
and
dec
paddusb
imul
(bad)
(bad)
out
and
sbb
pop
add
fild
das
dec
call
jae
nop
push
movs
and
jbe
ror
(bad)
add
inc
(bad)
and
mov
push
and
pop
cmp
popa
dec
outs
sub
rcr
and
or
mov
loop
aaa
jb
sub
inc
sbb
sbb
mov
psubd
and
outs
xchg
mov
fs
pop
push
int3
out
psllq
mov
push
ss
mov
cmp
cmp
aad
hlt
sbb
(bad)
gs
xchg
aaa
sahf
aas
ins
ret
sub
loopne
xchg
stos
pop
sbb
mov
scas
das
std
ror
and
lods
bound
xchg
sub
int
cmp
mov
daa
mov
scas
add
inc
mov
dec
pop
mov
(bad)
les
inc
lea
ins
adc
inc
(bad)
jb
push
arpl
and
sbb
jbe
push
test
or
mov
in
jl
dec
loop
xchg
mov
stos
rol
jg
scas
add
fsubr
out
movs
mov
sbb
aas
mov
cmp
pusha
pop
dec
(bad)
enter
push
mov
xchg
shr
xchg
retf
add
lods
stc
iret
inc
jno
inc
mov
xchg
mov
out
mov
stos
jmp
in
movs
push
cmc
or
out
frstor
out
jmp
jmp
mov
or
add
js
adc
std
or
jmp
jno
push
arpl
adc
mov
ins
mov
popf
mov
add
and
dec
dec
or
out
cmp
(bad)
pop
mov
xor
cmp
xor
pop
pop
fnstsw
dec
add
dec
dec
cld
test
sbb
lahf
pushf
sub
ss
(bad)
xchg
ficom
js
out
or
jmp
fiadd
and
or
(bad)
adc
pop
add
ror
lods
cmovno
inc
aad
int3
popf
mov
aam
inc
cmp
sub
mov
pop
mov
(bad)
dec
mov
dec
mov
outs
(bad)
icebp
pop
loope
(bad)
push
xchg
je
jo
xchg
jg
sbb
mov
leave
lds
mov
lods
push
jns
sub
dec
addr16
sub
repz
cdq
jl
mov
outs
lea
push
jle
sub
mov
push
mov
cdq
in
ret
mov
(bad)
into
mov
mov
retf
sub
add
lds
cmp
dec
and
je
movs
sub
push
lods
xor
aaa
in
clc
fs
popa
fisubr
mov
jg
pushf
mov
hlt
xor
mov
or
retf
imul
mov
push
stc
jbe
push
sub
dec
jmp
inc
add
fisub
(bad)
sub
cmps
cmc
or
jecxz
test
cmp
dec
aas
jle
sub
bndstx
and
fcomi
push
or
loopne
or
and
arpl
xchg
jge
test
jmp
pop
mov
leave
movs
inc
retf
dec
push
loop
mov
xchg
outs
jo
cmp
pop
xor
retf
dec
jno
into
mov
and
out
jne
repz
test
gs
bound
inc
stos
(bad)
jmp
cwde
jg
sbb
jle
sbb
out
or
call
jg
xor
dec
mov
(bad)
jne
xchg
mov
jg
add
cmp
aaa
bt
test
cmp
daa
data16
lds
gs
cmp
cmps
xchg
pusha
adc
add
xor
mov
mov
adc
loop
aas
stos
popa
dec
popa
retf
iret
jl
push
xor
add
adc
and
repz
sub
sub
adc
(bad)
lds
int3
add
adc
xchg
cmp
pop
retf
popf
or
xchg
popf
add
int3
shl
jbe
xchg
inc
fdivr
xchg
push
stos
cmp
ret
fwait
push
fist
scas
mov
in
push
stos
xchg
pop
push
jecxz
xor
test
out
push
fcmovb
outs
repnz
push
test
lods
fsub
leave
jnp
and
js
icebp
pusha
gs
adc
sbb
and
nop
lahf
lds
addr16
pop
xchg
(bad)
jmp
lods
or
daa
sar
adc
ins
lds
out
shl
daa
adc
or
outs
inc
mov
movs
xchg
xchg
sbb
out
inc
mov
sbb
add
dec
daa
ja
jne
fbstp
gs
fcom
mov
test
push
or
lds
pop
sub
iret
jbe
mov
sbb
pop
aad
inc
ret
push
dec
sbb
push
inc
mov
sub
jmp
sub
and
fsubr
mov
and
adc
adc
das
and
int3
mov
cdq
jg
or
xor
out
test
xlat
jb
pop
and
inc
cs
cld
jge
mov
pop
nop
into
mov
addr16
mov
out
xchg
ret
dec
xchg
mov
sar
int3
cld
into
ins
adc
sub
mov
and
mov
xchg
inc
jae
xor
popf
test
push
out
icebp
dec
and
ror
inc
inc
sub
(bad)
jmp
mov
pop
dec
lock
dec
cmps
fst
nop
(bad)
scas
in
cmp
stos
or
or
(bad)
and
push
cmp
pop
or
xchg
rol
ins
int3
out
bound
les
jo
jae
ja
scas
ins
push
scas
shl
imul
dec
jl
popf
iret
mov
mov
dec
mov
inc
add
out
mov
(bad)
out
pop
xor
xor
std
aas
ja
pusha
dec
adc
xor
into
out
mov
cmp
and
daa
movs
add
rcr
ror
stc
shr
shr
stos
add
clc
cmp
inc
xor
xor
push
jp
dec
test
arpl
push
xchg
add
inc
mov
pop
cmp
pusha
movs
nop
js
stc
add
pop
push
cmp
jg
adc
test
ss
movs
stos
xchg
stos
dec
addr16
mov
dec
mov
inc
movs
into
or
in
mov
cmps
clc
scas
das
and
sahf
dec
xchg
mov
jl
test
rol
or
push
ins
cdq
jge
and
inc
push
inc
retf
inc
js
(bad)
xlat
loope
jmp
popa
in
in
mov
or
int
inc
add
pop
mov
aaa
sar
outs
pop
stos
pop
nop
jbe
adc
cwde
(bad)
stos
cmp
mov
dec
ret
add
add
movs
inc
(bad)
iret
test
test
cmp
adc
rcl
ja
and
je
pop
adc
call
push
push
fstp
std
pop
inc
mov
rcr
push
sbb
(bad)
call
sbb
loope
mov
popf
push
mov
les
sar
and
lahf
and
ss
push
nop
repz
inc
loope
das
js
mov
xchg
ret
sbb
inc
cmp
(bad)
xchg
int3
xor
pushf
in
dec
pop
or
and
jns
sahf
das
pop
stos
ror
sbb
or
xor
repnz
xchg
mov
jb
mov
ror
loop
enter
lock
mov
shl
jecxz
xchg
ret
sbb
test
inc
loopne
xchg
ja
ss
sub
push
jbe
ins
test
push
lods
and
pop
mov
mov
test
aam
push
xor
push
stc
ret
pop
ret
mov
outs
sub
mov
xchg
xchg
dec
rcl
xchg
data16
xchg
in
adc
push
out
ss
lock
(bad)
dec
rcl
adc
sti
outs
mov
jne
ds
ss
or
mov
shl
outs
pop
adc
scas
pop
sti
scas
loope
mov
and
addr16
test
adc
test
repnz
cmc
push
or
mov
jb
mov
lea
les
(bad)
jge
bswap
test
or
lods
jo
imul
fsubrp
dec
inc
in
xchg
sub
lods
ins
and
int
icebp
jno
xor
lods
neg
iret
jmp
mov
mov
fs
sub
push
test
(bad)
cs
jmp
pop
push
cld
push
push
sbb
jae
sub
push
mov
or
sbb
xor
pusha
jle
mov
cmps
or
aam
(bad)
sub
test
sub
daa
loopne
sub
push
aad
jmp
nop
(bad)
(bad)
(bad)
mov
ja
js
(bad)
cld
inc
out
loopne
adc
xchg
test
sbb
mov
rol
push
int
jecxz
fwait
out
out
les
cmp
aam
es
push
add
mov
data16
out
ins
inc
and
mov
hlt
xor
lods
sub
jbe
mov
in
push
movs
jle
aam
(bad)
lods
loopne
aam
sbb
xchg
ja
jns
adc
push
mov
mov
cmp
movs
stos
or
xchg
xor
rol
xor
(bad)
sub
sti
sub
das
aas
pop
mov
je
jbe
sub
rcl
mul
sti
xchg
or
or
mov
js
dec
add
retf
sub
leave
jmp
fs
inc
dec
addr16
fadd
test
jle
xor
inc
add
sbb
arpl
dec
fistp
sub
lock
test
push
jbe
mov
call
sti
lahf
daa
sbb
retf
or
scas
fldlg2
xchg
in
mov
push
rcr
ins
jns
mov
xor
sar
jecxz
push
mov
push
or
pop
sub
cmp
jae
mov
aaa
into
loop
daa
mov
jb
adc
jp
add
lea
dec
lods
mov
dec
bnd
ror
test
add
dec
jno
idiv
ffree
into
gs
in
int
shr
(bad)
data16
in
add
loop
adc
sti
in
mov
jo
in
scas
pop
in
cmp
xchg
retf
and
fldcw
iret
sahf
leave
mov
icebp
leave
sbb
xor
fs
cmp
(bad)
in
cmp
enter
pop
out
das
adc
and
cmp
jno
jecxz
mov
sub
cmp
xor
or
or
fdivr
inc
nop
push
lods
sbb
cs
inc
adc
(bad)
push
dec
ins
jle
aas
arpl
sub
sahf
mov
cwde
pusha
adc
xchg
gs
stos
and
mov
dec
inc
cmc
sbb
xchg
in
inc
mov
icebp
sar
fs
cmp
shl
and
in
pop
test
mov
out
das
call
push
pop
push
and
imul
fild
push
clc
adc
imul
mov
mov
mov
je
xchg
mov
sub
or
aaa
inc
dec
inc
outs
dec
ins
push
inc
pop
and
jnp
jp
add
add
or
daa
sub
cmp
fcom
push
mov
or
pop
sub
imul
push
jg
jae
ret
cmps
dec
jns
dec
add
retf
bnd
mov
fsub
add
mov
(bad)
jmp
cdq
out
shl
inc
out
stos
or
ins
jmp
mov
lods
gs
mov
jne
daa
test
sub
add
(bad)
test
push
xchg
xchg
aaa
jne
xor
add
lds
jl
pop
cli
and
(bad)
adc
pop
xchg
test
sub
pop
cmp
int
fnsave
mov
icebp
adc
xor
les
add
ds
mov
sbb
dec
push
mov
or
into
lahf
dec
out
jno
(bad)
mov
add
in
in
xor
xor
dec
dec
cmp
adc
or
sub
or
xchg
jns
sbb
cmp
cs
out
leave
test
fild
mov
ja
dec
xor
fidiv
sub
arpl
gs
clc
shl
inc
pop
mov
push
jp
pop
mov
int3
add
jle
out
addr16
out
aas
loop
fidivr
mov
fs
inc
sbb
repz
xchg
jnp
push
ins
loop
mov
sbb
xchg
push
jnp
in
jmp
mov
jns
hlt
mov
or
(bad)
loope
(bad)
dec
adc
push
jg
adc
lea
adc
pop
adc
dec
sar
loopne
jmp
cdq
mov
and
xchg
cli
shr
addr16
sub
push
test
mov
lds
push
into
mov
adc
dec
mov
add
jae
(bad)
pop
mov
fbld
mov
dec
(bad)
sub
loop
fisub
sub
bound
cdq
push
ins
xchg
sbb
leave
hlt
xor
retf
(bad)
inc
push
sbb
cmp
rcr
mov
mov
lock
(bad)
mov
inc
pop
aam
enter
inc
push
daa
movntq
scas
inc
sti
mov
sbb
and
or
aam
cmps
es
xor
call
(bad)
shl
adc
(bad)
xor
or
xchg
jo
mov
ja
inc
mov
loope
and
js
mov
jl
mov
dec
mul
xor
outs
xor
nop
push
imul
xor
lock
lahf
sub
push
cwde
fs
dec
popa
mov
fldcw
adc
fcom
int3
gs
cmp
repz
pop
adc
mov
ret
mov
lahf
xchg
sar
sti
mov
lods
mov
xchg
stos
push
sub
mov
out
retf
out
arpl
sar
mov
xor
jecxz
xor
adc
dec
out
push
shr
sbb
out
fcmovnu
loopne
jmp
mov
mov
push
jae
rcl
and
ins
dec
popa
shl
push
mul
(bad)
ss
or
mov
pop
sub
mov
mov
in
jecxz
mov
stos
ror
dec
push
and
cli
xchg
mov
or
add
xor
ja
add
ret
and
out
call
popf
xchg
adc
mov
das
out
addr16
sahf
cwde
mov
sar
scas
jno
(bad)
out
push
hlt
popf
ss
out
sbb
pop
mov
push
lahf
adc
push
icebp
jle
adc
cmc
xchg
inc
cmp
adc
test
mov
sbb
stos
mov
loop
loopne
adc
out
or
jle
and
test
dec
ja
jb
inc
cmps
nop
fstp
pop
sbb
dec
scas
xor
std
call
cs
mov
out
in
push
retf
mov
inc
imul
sar
fst
shl
push
sahf
xor
inc
mov
jnp
push
outs
cmp
or
sub
ja
adc
lods
add
imul
or
cld
test
enter
inc
dec
mov
in
dec
jg
xor
push
add
cmps
sahf
xor
xor
push
les
shl
mov
jmp
mov
jecxz
xor
movs
and
arpl
xlat
push
aaa
mov
and
repz
in
pop
imul
xor
mov
sahf
and
test
xor
add
mov
add
xchg
loope
fstp
lock
xor
out
mov
pop
scas
(bad)
bound
and
lds
add
movs
xor
stos
pusha
lock
nop
std
xchg
xlat
pop
(bad)
sbb
xchg
sub
neg
leave
jb
xor
add
jbe
fdivr
lds
call
or
ja
pop
mov
js
pop
pop
add
call
adc
sbb
inc
mov
leave
pushf
loop
push
js
jb
das
imul
inc
das
les
imul
adc
mov
jmp
lock
cmp
sub
push
scas
adc
or
sbb
inc
lahf
enter
mov
sar
dec
jnp
jne
mov
or
jmp
pop
fwait
cld
test
lods
and
adc
int
sbb
mov
push
jne
push
stos
sub
icebp
pop
pop
push
pusha
fdiv
cmc
clc
stc
fwait
add
adc
mov
or
lea
mov
mov
mov
dec
cli
fucomi
test
popf
bnd
push
dec
add
cmps
sar
or
mov
xor
pop
mov
xor
ret
lods
or
mov
das
std
aaa
jo
ret
xor
add
icebp
iret
xchg
mov
xor
mov
inc
sub
icebp
loopne
mov
mov
push
outs
ror
dec
pop
test
mov
out
and
mov
pop
aam
push
xor
sbb
xchg
lea
push
mov
dec
sbb
das
retf
dec
ja
adc
mov
sbb
mov
popa
sti
sbb
push
fstp
test
hlt
or
sti
xchg
into
dec
call
inc
push
mov
mov
div
dec
icebp
test
cmp
pop
mov
iret
dec
loopne
add
hlt
std
dec
ss
mov
inc
mov
dec
adc
xchg
outs
cmps
das
or
ins
shl
iret
jg
not
push
push
adc
cmp
mov
push
out
pop
pop
test
jnp
and
ins
je
jmp
jb
jle
punpckldq
add
ja
cmp
mov
int
xor
mov
outs
ds
mov
in
retf
sbb
inc
jge
stc
mov
mov
or
pop
bound
mov
retf
cmp
xchg
call
lea
mov
push
pop
sahf
and
dec
fwait
push
test
repz
pop
jmp
test
ds
fidivr
(bad)
or
(bad)
popa
pop
ret
adc
add
xchg
push
mov
in
cmp
dec
and
inc
adc
mov
cmp
mov
rol
inc
sbb
(bad)
sbb
leave
xchg
lds
out
sbb
(bad)
pop
inc
xchg
shl
lds
mov
mov
mov
data16
cmp
mov
mov
xor
movs
mov
cmps
int3
sar
icebp
dec
sub
and
mov
add
xchg
daa
rol
movs
push
sbb
cwde
popa
popf
stos
int
test
iret
(bad)
es
add
push
icebp
jmp
or
xor
mov
inc
ss
imul
in
pop
movs
dec
and
mov
inc
enter
dec
sub
(bad)
jo
enter
mov
mov
repz
or
aam
adc
cmps
mov
jnp
mov
push
inc
ins
mov
jge
jae
jl
xor
dec
and
and
xor
sub
cwde
or
pusha
clc
mov
inc
das
xor
add
cmp
out
cmps
mov
addr16
mov
(bad)
dec
mov
cmps
xor
loope
mul
sub
and
push
inc
mov
sbb
mov
jo
jg
mov
es
fs
sti
popf
mov
fsubrp
fadd
shl
cmps
test
cmc
inc
jl
mov
ja
jmp
add
lea
adc
sub
cmp
fstp
inc
popa
shr
or
adc
sahf
fs
xor
(bad)
mov
mov
repnz
sub
movs
mov
and
popa
fdivr
out
push
jl
dec
jno
jbe
loope
movs
out
lahf
std
pop
hlt
rcr
pushf
aaa
push
sub
(bad)
push
rcl
cmp
sub
pop
loop
test
mov
dec
lods
scas
sahf
inc
fisttp
jo
test
cwde
mov
dec
test
aas
int3
stos
out
push
dec
scas
sub
js
push
pop
cmp
sti
cmp
mov
adc
mov
les
mov
mov
jmp
sbb
jmp
aam
jne
xchg
inc
pop
push
into
dec
shl
fwait
push
mov
ror
imul
stos
pop
add
mov
push
retf
in
iret
push
sub
mov
push
push
cmps
call
cld
adc
repnz
das
sub
inc
dec
movs
out
pop
push
and
mov
jns
stc
jl
and
mov
sub
ds
sub
cs
mov
or
push
dec
(bad)
jno
bndstx
ins
pop
mov
std
repz
addr16
icebp
(bad)
jno
loopne
neg
test
je
and
sub
jle
jmp
or
daa
ret
fbstp
jb
sub
inc
shr
aad
add
push
sbb
xchg
cdq
adc
int3
mov
lods
inc
cmp
std
jg
stos
sbb
add
icebp
pop
dec
mov
pop
cs
scas
in
xchg
xchg
jno
xor
jb
jmp
mov
js
cmp
jnp
adc
ror
sahf
adc
fisubr
(bad)
fcom
adc
dec
repz
pop
pop
fdivr
jmp
or
dec
sti
mov
pop
xchg
sbb
xor
xchg
cmc
inc
dec
xchg
scas
push
xchg
hlt
mov
mov
(bad)
bound
mov
sti
jne
or
rep
dec
mov
cmp
loope
cld
adc
mov
dec
cs
mov
or
sar
mov
mov
test
push
mov
jae
cli
pop
add
jnp
imul
mov
repnz
pop
stc
sbb
and
inc
adc
inc
imul
mov
or
(bad)
dec
pop
rol
ja
jle
lahf
sub
or
scas
xchg
jmp
dec
jnp
mov
jno
(bad)
cmp
mov
ret
test
push
enter
daa
mov
int3
sub
hlt
mov
jns
dec
xchg
cmps
jo
fiadd
sbb
inc
inc
adc
jle
add
mov
jns
inc
call
test
mov
fdivr
pop
idiv
xchg
imul
xchg
xor
and
mov
xor
or
push
ret
sti
sti
fidiv
sbb
scas
cmovp
in
cwde
ds
jg
mov
xor
cwde
add
mov
jge
sbb
call
fwait
out
popf
(bad)
aam
add
xor
outs
iret
adc
sbb
dec
aam
sbb
add
add
cld
leave
pop
aad
mov
sbb
push
add
xchg
inc
sbb
pop
pop
xchg
loope
mov
mov
or
mov
xchg
xor
mov
js
retf
sbb
ja
xchg
scas
push
mov
addr16
in
mov
in
and
push
lods
outs
mov
and
mov
inc
dec
adc
movs
pop
xchg
sti
inc
push
ror
jl
xchg
jg
nop
inc
clc
adc
xor
loop
and
out
or
or
add
xchg
mov
adc
loopne
mov
rcl
out
cmp
sbb
and
aam
in
int
sub
ret
sbb
imul
xor
push
sbb
push
(bad)
cld
mov
mov
mov
mov
rcl
mov
ret
inc
fwait
cmp
sar
test
scas
jmp
in
lahf
sub
fcomp
icebp
and
or
and
sub
or
fstp
sub
loop
into
mov
add
retf
retf
and
or
test
add
inc
in
fst
mov
pop
jl
retf
call
ret
outs
mov
and
in
mov
xchg
mov
or
fimul
scas
push
or
std
dec
cld
push
add
cld
fadd
pop
mul
mov
or
add
cwde
sub
pop
mov
mov
jge
or
sub
adc
cmc
inc
mov
push
lock
or
mov
sbb
ror
pop
cli
sbb
pop
add
lock
pop
mov
push
pusha
in
dec
and
inc
xchg
pop
xor
push
test
lahf
imul
imul
xchg
je
mov
inc
(bad)
mov
push
adc
xor
xchg
sbb
mov
mov
stos
cmps
dec
mov
push
ret
inc
add
mov
inc
mov
pop
xor
xchg
pusha
xchg
popf
sub
ins
xchg
cmp
jmp
adc
jne
nop
adc
stos
pusha
jne
repz
fstp
mov
adc
jbe
mov
aad
aas
pop
ret
push
add
push
ja
mov
arpl
push
xchg
push
push
lahf
daa
es
movs
mov
les
ins
repz
cmps
xchg
xor
pop
or
jae
fldcw
sbb
jl
mov
pop
js
mov
xor
cld
ins
push
pop
pop
nop
mov
(bad)
push
or
call
push
stc
xor
ficomp
sbb
pop
xchg
jnp
xor
pusha
lods
jge
add
sbb
das
fcmovu
xlat
hlt
cmp
pop
jmp
and
pop
jne
test
stos
add
and
jb
js
sub
std
jmp
in
jmp
adc
mov
cli
sbb
push
inc
and
popf
inc
add
jecxz
mov
das
jg
jne
adc
rol
cmp
test
imul
xchg
mov
sub
test
mov
xlat
mov
pusha
xor
dec
cmps
push
mov
cmp
jae
in
imul
and
sti
loope
(bad)
sti
into
int
sbb
inc
mov
mov
rol
aas
xor
jp
ins
je
mov
adc
jns
or
jecxz
popf
jbe
fst
nop
fs
test
pop
dec
ret
jle
and
fcomp
xchg
sub
out
fbstp
xor
mov
out
pop
jns
daa
mov
fist
inc
sub
jne
mov
jge
test
mov
loopne
enter
(bad)
pop
cli
push
rcr
fcomp
xor
lock
call
lahf
test
loope
adc
mov
jno
outs
lds
inc
imul
movs
cmp
mov
sub
xchg
arpl
sub
test
or
xchg
out
and
dec
fisttp
ret
iret
xchg
das
add
xor
lods
xchg
push
pop
sbb
mov
sti
aad
mov
daa
mov
and
repz
lahf
test
sub
je
fcmovbe
inc
popa
repz
fidivr
add
shr
push
cmp
loop
pop
mov
xchg
pop
add
xor
inc
push
scas
scas
retf
mov
or
ins
imul
jb
xchg
imul
scas
outs
sub
jge
add
dec
retf
pop
push
test
pusha
and
fcmovnb
int3
push
pop
outs
jmp
jmp
cli
cld
mov
jbe
shl
inc
mov
xor
stc
fwait
xchg
lods
jns
cmp
ror
adc
je
inc
mov
jp
lea
cmp
dec
add
lods
mov
xlat
dec
pop
iret
xor
sub
pop
and
and
or
mov
sub
fisubr
lods
int
nop
js
out
pop
mov
or
cmp
das
mov
mov
jbe
aad
jge
sbb
jmp
sbb
lods
mov
fmul
in
push
pop
xor
cmp
mov
mov
rcl
mov
mov
sbb
fucomip
test
push
lds
and
or
out
mov
addr16
mov
popa
jo
jmp
cmp
jo
or
lock
mov
inc
ret
ja
dec
fdivr
int3
retf
stos
retf
enter
retf
jb
lea
inc
in
mov
fild
int
ret
cwde
punpckhwd
lods
out
push
ret
push
ret
xchg
inc
loopne
xor
pop
sub
or
mov
mov
cwde
mul
cmp
add
rol
movs
adc
jle
cmps
sbb
xor
adc
or
sub
cmps
sub
shl
inc
lods
cmp
push
pop
or
sbb
dec
jb
pop
add
cmps
test
mov
add
adc
rol
cdq
inc
cwde
xor
(bad)
mov
sbb
push
hlt
inc
adc
or
in
inc
add
(bad)
push
aas
mov
leave
push
ins
push
lahf
and
xchg
stc
add
mov
inc
mov
inc
into
sbb
jp
mov
cmps
mov
js
jp
sbb
jge
pop
and
nop
adc
bswap
repz
pop
or
ror
ficomp
lods
jnp
arpl
and
xor
repnz
call
pop
(bad)
aam
aaa
cmps
sub
jnp
sub
mov
scas
mov
jmp
dec
xchg
cmp
sbb
inc
pop
sub
inc
daa
xlat
mov
pop
add
stc
(bad)
and
pop
das
cli
inc
pop
imul
cdq
(bad)
mov
aas
adc
fsub
pop
retf
inc
call
dec
push
aam
out
adc
data16
lods
or
idiv
sbb
add
mov
test
push
lahf
js
pusha
rol
call
adc
and
fisubr
icebp
xlat
push
fisub
scas
pushf
cld
(bad)
push
loop
mov
sbb
push
retf
call
fistp
cmps
push
ret
test
fnstcw
xor
in
xor
loop
cli
xor
les
fild
pop
das
not
push
into
les
in
pop
cwde
or
sti
sbb
dec
inc
inc
cwde
add
popa
das
jmp
call
in
ja
pop
hlt
or
not
jns
cmp
sbb
push
int3
popa
adc
lahf
or
test
mov
mov
lods
mov
push
xchg
std
xor
ret
xor
dec
sub
pop
xchg
jge
jo
inc
popa
pop
add
pop
jae
push
enter
movs
pop
sbb
jecxz
dec
inc
push
dec
xlat
or
xor
jnp
dec
cmp
push
cmp
sbb
aas
or
mov
xchg
pop
pop
ret
add
xchg
cmps
mov
pop
mov
loope
sbb
daa
mul
or
jle
and
and
ja
cmps
mov
dec
push
cmps
loop
jg
add
push
inc
pop
cli
dec
in
mov
inc
dec
jmp
xor
mov
mov
sbb
daa
pop
sbb
mov
pop
inc
shl
enter
cdq
stos
loopne
not
add
cdq
leave
cmps
stos
das
mov
sub
ja
dec
(bad)
rol
mul
push
push
(bad)
loope
int3
adc
mov
mov
lahf
fdiv
sub
arpl
adc
shl
loopne
inc
fistp
in
inc
pop
shl
lods
inc
add
mov
ja
cmp
loope
imul
xchg
push
dec
out
lea
in
(bad)
mov
pop
shr
fdivp
fisttp
pop
fwait
push
pop
not
in
jbe
pop
fidivr
adc
sub
lahf
aad
test
icebp
pop
in
mov
and
(bad)
pop
add
lods
gs
push
out
into
and
xor
pop
dec
adc
ror
jmp
stc
movs
mov
stos
cmp
jb
out
mov
jl
lods
adc
add
in
outs
scas
cmp
cmp
mov
outs
es
in
or
adc
mov
jle
cld
pop
xchg
xor
ret
jmp
cli
sub
movs
pushf
jmp
and
bnd
inc
jbe
pop
jbe
cs
adc
ret
jnp
pushf
pop
inc
fstp
xor
imul
cmp
inc
lea
out
and
push
sub
test
ret
push
and
cld
jge
(bad)
movs
(bad)
(bad)
push
jae
lods
(bad)
and
cwde
mov
push
pushf
xchg
call
push
push
enter
mov
mov
stc
in
pusha
and
dec
movs
xchg
pop
rdmsr
imul
lea
or
dec
ja
mov
test
adc
and
movs
mov
out
dec
lods
movs
out
mov
and
mov
loopne
mov
sbb
out
mov
repnz
dec
and
fwait
sub
mov
aas
push
add
dec
sub
sub
addr16
mov
je
sbb
(bad)
jbe
and
sahf
in
mov
pop
movs
sub
jge
jno
dec
ja
push
jle
in
movs
push
(bad)
push
adc
mov
stos
popf
mov
pop
inc
rol
mov
das
pusha
jp
jg
pop
mov
jbe
dec
mov
jne
pop
fisubr
arpl
lock
sub
xchg
mov
test
aad
add
or
in
repz
xchg
in
iret
dec
pusha
outs
ret
cdq
xchg
push
adc
xor
pop
mov
loopne
(bad)
dec
adc
loopne
in
jae
sbb
lods
mov
cmp
dec
mov
pop
sub
ins
push
xor
imul
fcmovnu
jge
push
shl
icebp
(bad)
dec
jl
fstp
jecxz
js
and
sbb
jno
jne
xchg
mov
xor
cdq
cmps
retf
cmc
cmps
adc
sahf
jge
xchg
push
inc
pop
enter
jns
std
hlt
push
cmp
xlat
std
out
fcom
(bad)
lock
mov
cmps
mov
mov
push
adc
cmp
dec
or
adc
gs
mov
xor
mov
or
(bad)
and
xlat
in
push
adc
sbb
(bad)
add
sbb
dec
cmp
jmp
dec
ds
in
sbb
cdq
rol
aaa
cmp
(bad)
fdiv
lods
in
mov
aas
xlat
push
push
push
or
jmp
add
dec
mov
jp
adc
and
sub
xor
add
add
lahf
push
pop
test
jmp
aaa
cmp
inc
outs
int
cli
adc
mov
scas
mov
in
xor
sub
cmp
lea
lahf
ret
inc
out
inc
dec
mov
les
xor
adc
jb
movs
out
mov
dec
aam
and
inc
repnz
cwde
inc
or
mov
pop
leave
imul
mov
sub
pop
xor
push
dec
inc
jb
push
and
add
inc
dec
add
leave
imul
add
fidivr
add
xchg
pop
xor
xchg
or
mov
ret
push
jnp
push
imul
xor
daa
dec
mov
xor
push
and
or
mov
aas
fwait
cmp
jo
jns
mov
int
mov
mov
jle
aad
lahf
jo
jge
cmps
push
push
js
pusha
sbb
dec
and
sar
adc
jae
dec
sti
in
push
mov
and
add
and
jns
xchg
loop
pushf
mov
iret
xchg
ficom
push
add
jb
dec
ror
inc
(bad)
call
cmps
pop
popa
and
inc
pop
je
fs
jecxz
xor
cdq
pop
test
lea
mov
mov
gs
mov
jge
dec
mov
dec
pop
push
js
xor
jbe
mov
and
push
scas
mov
aad
imul
or
rol
dec
imul
fidivr
xchg
mov
sti
or
or
(bad)
dec
cmp
push
lahf
sbb
out
(bad)
pushf
arpl
push
adc
or
pop
adc
cmp
std
or
xor
add
rcr
sti
ret
fprem
pop
loop
rcr
stos
push
xchg
add
adc
fld
pop
popf
(bad)
out
add
inc
int
clc
add
aas
dec
sub
mov
mov
int
xor
ins
xor
mov
dec
aad
mov
xchg
imul
lahf
outs
imul
add
scas
mov
or
int
cmp
ja
adc
sbb
mov
lock
movs
or
push
push
popf
dec
or
adc
popf
mov
push
mov
dec
cmp
dec
test
loopne
repnz
sbb
ins
mov
stos
xchg
jo
scas
aad
shl
in
sar
outs
push
cmp
rcl
dec
leave
in
iret
push
cld
xor
and
fimul
cs
popf
leave
lods
mov
dec
sub
xor
sar
imul
pop
xor
shl
rcl
inc
ja
adc
jb
sbb
xor
(bad)
icebp
repz
daa
mov
jb
sbb
call
sti
in
in
(bad)
scas
adc
jnp
mov
and
call
cli
cmp
sub
mov
lock
iret
(bad)
adc
sbb
xor
ret
mov
ret
ror
xchg
cmps
int
ret
(bad)
scas
ss
sti
mov
pushf
dec
xchg
es
dec
cmc
test
sti
test
push
rcl
(bad)
fisttp
xlat
xor
or
pop
retf
add
fild
cmp
and
cmps
mov
pop
test
iret
icebp
push
ds
sub
mov
mov
popa
icebp
push
fild
cmp
call
xor
repz
add
jne
repz
in
adc
jmp
imul
inc
sbb
mov
cwde
mov
dec
push
pushf
ss
stos
pushf
scas
push
xchg
daa
test
mov
out
in
xchg
call
jbe
or
das
mov
stos
sub
pop
je
or
imul
das
arpl
cdq
pop
lock
dec
cmp
pop
jbe
cs
fist
sub
pop
add
test
shl
push
xor
ins
adc
sub
jne
cs
inc
push
int3
and
jge
lds
or
cwde
ficomp
leave
sti
test
ja
js
daa
scas
push
ret
movs
sbb
sub
stc
push
mov
stos
sbb
add
and
movs
pop
adc
dec
aam
sbb
shl
and
fnstenv
movs
jb
dec
ffree
or
xor
shl
mov
sub
fisubr
or
pop
inc
jmp
les
cmp
shr
push
xchg
push
aas
ja
and
in
xchg
repz
adc
mov
xor
or
mov
movs
jge
mov
or
dec
and
or
pop
cmps
pop
jge
jp
int
loopne
pop
stos
scas
xor
sahf
fbld
test
mov
mov
std
jnp
out
das
jmp
dec
inc
(bad)
icebp
push
lods
or
mov
dec
mov
mov
loope
pop
mov
mov
add
xchg
sar
stos
sbb
bt
mov
test
dec
xrelease
add
stc
cmp
xor
cmp
add
mov
test
pop
addr16
ins
fmul
(bad)
aas
mov
mov
cmp
call
icebp
cmp
sbb
int3
xchg
int3
js
xchg
xor
call
pushf
dec
sub
adc
adc
and
add
xor
push
jge
repz
push
scas
arpl
inc
mov
repnz
sub
scas
fsub
out
test
movs
pop
fisub
pop
sub
fcomp
shl
add
(bad)
pop
mov
sub
test
push
pop
inc
pop
cmp
inc
pop
(bad)
test
fwait
push
jns
clc
loope
jecxz
imul
arpl
jge
push
sbb
sbb
ficomp
mov
mov
bound
cmc
mov
loopne
(bad)
xchg
xchg
xchg
mov
mov
mov
jg
push
popf
sbb
push
xchg
dec
rcl
pop
pop
dec
xchg
repz
jg
ret
icebp
int
neg
and
(bad)
jnp
retf
xchg
sub
cmp
add
lea
shl
cwde
inc
pand
in
ins
scas
hlt
add
mov
lahf
idiv
loop
xor
(bad)
add
mov
pop
fiadd
jb
sbb
sahf
aam
xchg
arpl
cmp
inc
xor
xchg
cmp
jmp
cvtps2pi
out
jl
popa
retf
or
mov
mov
pop
mov
fs
lahf
mov
imul
jae
mov
jns
out
inc
stos
inc
lds
mov
push
xor
jbe
xlat
fs
imul
int3
(bad)
mov
pop
inc
push
shl
cmp
pop
jmp
jg
loopne
inc
add
mov
out
sub
xchg
and
(bad)
inc
and
in
nop
cld
loop
ja
sub
jb
mov
retf
sbb
pop
jae
adc
xchg
fst
add
adc
shr
add
dec
mov
movs
pop
sbb
lea
out
jl
nop
xchg
mov
sbb
cmp
mov
add
mov
jl
mov
pushf
cmps
cmp
xchg
mov
or
jmp
and
jp
shr
mov
mov
dec
sub
mov
jecxz
push
mov
fs
into
add
mov
inc
mov
into
shl
repnz
in
adc
cs
inc
retf
pop
jns
lds
aam
das
jns
xchg
add
retf
(bad)
call
xchg
pop
lahf
pop
enter
sbb
sbb
mov
adc
mov
mov
dec
jmp
test
mov
test
sbb
mov
mov
pop
ret
inc
sbb
add
push
rol
outs
sub
add
push
inc
movs
and
xchg
fild
lahf
pop
jbe
mov
adc
push
scas
(bad)
int3
add
jle
pusha
int
mov
(bad)
rcl
icebp
mov
xor
inc
mov
inc
pop
xlat
imul
sbb
dec
inc
scas
mov
sub
aad
mov
dec
mov
adc
xchg
mov
addr16
mov
fisubr
sub
test
loope
xchg
cmps
cmps
mov
in
jl
and
adc
jecxz
aas
stos
out
push
pop
ror
cmp
or
jno
mov
push
xchg
scas
xchg
call
pop
jecxz
ins
jae
xchg
pop
pop
out
ins
divps
cmp
mov
mov
jmp
add
push
jmp
fs
rcl
sbb
push
fidivr
sahf
(bad)
and
mov
fld
pop
icebp
xchg
repnz
xor
std
mov
add
bound
lahf
sbb
test
out
movs
jp
(bad)
sub
sti
in
aas
jge
mov
or
adc
mov
and
bound
inc
fisttp
push
mov
jp
clc
lock
in
dec
aad
cs
pop
adc
adc
cs
shl
cs
jb
call
adc
jmp
loopne
jmp
jb
pop
repz
mov
sbb
mov
mov
inc
jecxz
js
jle
out
cdq
inc
test
ret
mov
mov
repz
shl
lods
sbb
add
movs
fild
mov
fwait
or
pop
sub
add
xor
cmc
fs
or
jge
or
fldl2t
ret
fisubr
ficomp
pushf
mov
and
pop
out
mov
sub
lds
xchg
xor
nop
push
sti
sbb
jb
ret
movs
mov
call
test
pop
sahf
sar
lods
popf
fdivr
jmp
xchg
ror
xlat
inc
dec
test
lahf
loope
add
pop
push
xchg
dec
rcr
or
cld
ret
cmp
mov
fsub
sub
in
sub
sbb
(bad)
adc
jb
(bad)
and
lods
dec
jnp
jecxz
cmps
jp
mov
and
push
fs
or
js
xlat
in
out
xchg
xor
inc
or
(bad)
mov
mov
xchg
inc
repnz
inc
mul
pop
out
dec
sar
add
mov
imul
and
daa
xor
jmp
(bad)
imul
jecxz
push
xchg
clc
mov
xor
or
clc
dec
jo
aas
pop
pop
dec
jmp
neg
mov
in
add
in
mov
and
mov
mov
sahf
sub
adc
add
sbb
stc
xor
lods
mov
inc
sbb
ficomp
cli
sub
fcom
xchg
xchg
sbb
stos
pop
loop
push
repnz
inc
dec
gs
ret
pop
add
imul
dec
sahf
jns
pop
push
popa
jae
sbb
adc
rcl
fwait
mov
fdivr
mov
pop
dec
dec
fcmovne
jbe
shl
repz
fwait
pop
mov
out
test
lds
sbb
addr16
mov
xchg
inc
cmp
ss
sbb
mov
(bad)
xchg
in
jmp
das
leave
mov
inc
movs
inc
add
xchg
(bad)
(bad)
pop
dec
(bad)
scas
jecxz
popa
rcl
or
lods
ins
cmc
lahf
dec
xor
aad
shl
sub
retf
test
cmp
aaa
mov
jno
dec
xor
test
xchg
mov
xlat
sahf
mov
jmp
test
mov
mov
pop
aad
pop
jno
mul
inc
xor
push
test
popa
dec
pop
adc
mov
pop
jo
mov
ja
add
dec
lods
and
cli
xor
pop
test
lods
and
(bad)
test
stc
and
ret
mov
sbb
bound
ja
fsubrp
xor
sar
int
popf
ficom
dec
and
push
jecxz
mov
or
arpl
mov
or
pop
mov
jle
popf
stos
push
push
pop
jle
enter
sbb
and
clc
ret
in
stc
(bad)
pop
loop
inc
mov
out
xchg
call
pop
rol
add
sub
leave
sbb
pusha
inc
jle
hlt
add
and
cdq
pop
mov
jno
stos
and
jnp
or
shr
xchg
fidivr
xchg
mov
popa
push
clc
mov
test
call
(bad)
mov
mov
fst
or
repz
sub
jecxz
jle
pop
shl
retf
outs
mov
mov
stos
mov
xor
int
sbb
(bad)
sahf
lock
aas
jns
lods
xor
pop
add
add
sahf
push
jg
xchg
jmp
push
jle
mov
pop
repz
lods
jl
jmp
cs
cmc
add
sub
mov
adc
pop
push
fs
inc
mov
imul
jge
xchg
mov
aad
aam
int3
int3
sbb
scas
cwde
idiv
mov
or
xchg
fincstp
adc
push
sub
xchg
pop
xchg
jg
mov
enter
pushf
inc
pop
and
push
adc
loopne
sub
cmp
lock
and
mov
xchg
cmp
xlat
sbb
mov
iret
push
push
sar
mov
sti
or
adc
mov
imul
adc
fwait
out
push
div
or
outs
int
inc
dec
push
fisub
adc
or
mov
mov
mov
popa
imul
pushf
xor
dec
cmp
(bad)
test
push
and
addr16
and
mov
lods
out
cld
test
loop
dec
mov
push
dec
mov
xor
jno
pop
out
jo
jp
mov
mov
dec
fimul
jns
push
inc
mov
call
mov
and
sti
add
mov
scas
adc
test
fiadd
clc
push
pop
stc
add
scas
dec
aam
cmp
ins
mov
call
outs
dec
loope
std
dec
jmp
pop
push
(bad)
lock
aaa
cmp
adc
cmp
out
pop
jle
pop
aaa
sbb
adc
ja
xor
mov
jne
test
jp
jg
inc
sub
mov
mov
bound
dec
sub
fcmovnb
mov
add
movs
cld
sahf
rcl
js
push
mov
rol
xor
(bad)
sti
push
out
ficomp
and
call
xor
jmp
add
mov
add
pop
cmc
sub
push
jne
int
jle
push
sbb
cli
cmp
mov
outs
pop
xchg
push
sub
retf
out
mov
xor
imul
sub
cmp
add
sub
and
dec
movs
repz
movs
(bad)
and
mov
cmp
inc
pop
mov
jae
les
add
inc
and
test
xor
aam
xor
sbb
pop
dec
push
push
push
mov
addr16
sbb
push
hlt
dec
xchg
icebp
push
scas
jae
add
dec
mov
mov
xchg
pusha
mov
dec
xor
jnp
popa
xor
xor
mov
xchg
dec
fwait
xchg
inc
out
pop
in
pop
push
ds
xchg
jmp
fistp
(bad)
xchg
adc
mov
stos
mov
xchg
adc
and
and
xor
aaa
dec
mov
mov
cmp
cli
iret
pop
dec
int
inc
enter
stc
stc
xchg
jns
int
adc
and
jmp
pop
mov
sbb
(bad)
test
sub
bound
mov
fs
scas
mov
in
(bad)
cmp
(bad)
les
sbb
or
and
jmp
enter
and
push
mov
and
addr16
and
test
cdq
js
jae
sbb
scas
xchg
addr16
adc
xor
(bad)
pop
xchg
aam
js
jo
sahf
adc
mov
ins
sub
cmp
sub
pop
xor
(bad)
or
sub
jp
or
stos
aaa
mov
jg
je
mov
sub
aaa
mov
inc
addr16
xchg
push
in
cmp
rol
je
scas
mov
xchg
retf
jg
shl
jmp
push
fcomp
loopne
fimul
hlt
fscale
mov
aaa
jmp
scas
mov
lods
inc
xchg
fld
icebp
jnp
cdq
adc
add
iret
pop
xchg
push
xchg
pop
mov
jp
and
addr16
rol
xrelease
es
jb
cmp
fcomp
sbb
ins
dec
push
inc
adc
push
mov
mov
ss
jb
bound
outs
aam
fs
mov
popa
rcr
cs
(bad)
pushf
pushf
adc
arpl
xchg
mov
push
(bad)
ds
mov
adc
out
or
pushf
dec
mov
adc
mov
call
push
cmovg
scas
mov
add
mov
es
cmp
inc
loope
stc
mov
xor
test
add
cdq
stos
dec
and
gs
aam
lahf
dec
clc
repz
mov
xor
xchg
dec
push
add
fstp
daa
(bad)
out
adc
ret
int3
dec
cmps
popa
sbb
jg
inc
mov
cs
mov
dec
sub
ja
jge
loopne
fwait
add
adc
(bad)
sub
pop
jle
pusha
mov
mov
jns
dec
stos
cmp
jb
mov
jp
pop
push
mov
jb
inc
cmps
aaa
nop
leave
shl
mov
daa
test
fs
(bad)
fldenv
movs
push
mov
mov
sahf
iret
out
jb
mov
or
stos
push
ficom
mov
fild
pop
(bad)
in
sub
add
mov
les
adc
pop
nop
mov
faddp
fndisi(8087
add
adc
cwde
(bad)
lock
nop
out
xchg
mov
push
retf
outs
ins
sahf
mov
push
fist
sbb
mov
jns
sbb
(bad)
and
jmp
clc
pop
les
retf
or
in
jecxz
retf
push
rol
dec
and
pop
jns
xchg
push
and
sahf
adc
das
retf
push
add
in
into
mov
dec
adc
outs
cmp
repnz
mov
xchg
gs
out
add
push
stos
ins
les
jp
ror
pop
ret
test
xor
mov
jne
(bad)
xlat
push
icebp
scas
cmp
int3
test
sbb
inc
aad
pop
aaa
inc
or
sbb
dec
mov
sbb
int3
cmp
leave
cwde
push
jns
(bad)
les
dec
xchg
popf
mov
push
call
lods
out
dec
adc
cdq
xchg
outs
and
out
pop
sti
xlat
dec
int
stos
and
push
dec
inc
mov
pop
out
sub
loop
es
xor
lds
lds
or
push
aas
add
and
push
fwait
mov
mov
xchg
stos
cmp
sub
clc
out
pusha
js
push
popf
pop
not
add
repnz
aam
test
push
jnp
push
and
cdq
xchg
(bad)
ret
retf
aad
std
push
fwait
call
lods
jb
adc
and
jno
mov
fsubr
js
sbb
push
xchg
sti
jo
js
and
add
jp
or
in
(bad)
out
sub
das
ins
(bad)
pusha
aam
and
daa
fdiv
rcl
cdq
sbb
cmp
adc
dec
sub
dec
sub
push
mov
(bad)
fsub
out
sub
ds
std
call
mov
repz
call
xor
dec
test
pop
jp
loop
sub
outs
add
movs
inc
inc
(bad)
push
add
outs
cwde
inc
iret
mov
jnp
scas
add
cmp
cmps
fsub
cmp
xor
jmp
(bad)
lock
pop
retw
pop
mul
scas
pusha
fadd
adc
or
xor
sbb
popf
add
xchg
or
xor
movs
and
mov
mov
xor
mov
cmp
mov
(bad)
jnp
fmulp
xchg
inc
fnop
pmaxsw
cmp
js
xchg
pop
repnz
loopne
cmp
mov
and
je
pop
adc
movs
xor
ins
sub
mov
mov
aas
stc
in
add
and
inc
add
out
pop
imul
sbb
test
stos
addr16
addr16
mov
int3
in
xchg
mov
inc
add
pop
dec
dec
xchg
in
mov
pop
jecxz
inc
fcom
aam
mov
shl
mov
sub
pop
mov
jmp
aad
push
and
jnp
cmp
add
mov
(bad)
xchg
jp
iret
btr
inc
sub
cmp
fist
gs
ret
sbb
out
test
es
xchg
lock
jecxz
es
sahf
mov
fcom
jnp
adc
aas
retw
imul
sahf
inc
dec
js
loope
pop
and
rcl
pop
jns
int
or
mov
xchg
push
es
dec
fsubr
jb
lods
cld
cli
pop
jns
outs
scas
dec
in
add
and
xor
lds
mov
outs
dec
cdq
dec
xor
leave
xchg
scas
sub
pop
cld
ins
jmp
icebp
jo
ja
cmc
(bad)
jmp
add
adc
mov
pop
mov
pop
jns
mul
xchg
mov
bound
mov
shl
mov
adc
(bad)
jbe
mov
adc
sub
add
mov
push
rcr
sub
loop
adc
jno
push
xor
mov
std
cdq
aaa
mov
sbb
fwait
cmp
mov
cmp
dec
sub
retf
inc
in
push
cmp
call
mov
adc
mov
sbb
inc
dec
paddw
mov
mov
fldcw
mov
push
jbe
sbb
add
add
pop
push
popa
mov
mov
push
adc
mov
imul
add
movs
mov
in
sbb
xchg
(bad)
imul
lock
inc
push
or
pop
dec
pusha
push
sbb
push
mov
jge
das
fisubr
mov
jmp
or
and
cmp
aad
and
mov
lock
mov
mov
lods
mov
fnstsw
cmp
or
push
jg
cmp
fimul
sub
rol
addr16
fld
daa
retf
outs
js
or
sbb
pop
add
int
pop
push
mov
cs
(bad)
out
cmps
sbb
gs
das
loopne
mov
xchg
lods
xchg
sbb
pcmpgtd
xchg
jmp
add
push
sub
scas
test
popf
and
stc
jge
jmp
(bad)
loope
inc
imul
mov
xor
and
adc
aaa
adc
test
int
shl
imul
xor
ss
jp
pushf
jp
scas
sbb
hlt
mov
add
icebp
bound
dec
inc
(bad)
or
sbb
cmp
inc
movs
shl
lods
adc
ins
stc
jns
(bad)
rcl
xchg
sbb
pop
gs
xor
or
out
adc
rcl
mov
or
pop
movs
inc
inc
inc
pop
enter
test
push
das
cmps
push
cmp
mov
xchg
sbb
lods
adc
shl
in
adc
cmp
and
mov
cmc
test
sub
pusha
mov
(bad)
pop
sbb
(bad)
call
int
ficomp
mov
mov
mov
jmp
clc
lea
daa
push
xchg
push
fxch
jns
pop
xchg
add
sbb
add
jno
test
cwde
sub
xchg
or
int
ds
xchg
dec
and
mov
in
imul
mov
or
push
lods
sub
repnz
(bad)
aam
jae
test
sub
ja
pop
jo
dec
cmc
div
mov
adc
and
aad
imul
mov
ss
sub
xor
scas
push
lahf
adc
lods
(bad)
pop
fucomip
(bad)
inc
std
loop
mov
cdq
ss
sub
push
dec
int3
push
push
popf
je
pop
lock
mov
xchg
add
sub
xor
(bad)
xchg
pop
out
cmps
xor
std
movs
rep
sbb
pop
mov
mov
retf
or
and
leave
push
shr
mov
mov
stos
gs
and
xor
ret
mov
gs
push
sbb
pop
int
repz
adc
(bad)
cs
inc
adc
sub
jecxz
xchg
jg
repz
fs
loop
ins
fsubr
mov
xchg
(bad)
hlt
cmps
pop
push
js
push
retf
(bad)
push
in
ret
shl
dec
(bad)
aas
out
mov
ins
test
pop
fnstcw
dec
ror
mov
pop
inc
not
cmp
push
or
cmc
out
scas
in
inc
xor
lock
addr16
neg
fucomi
mov
dec
sbb
mov
jmp
lods
add
not
mov
rcl
sahf
xchg
stos
clc
add
icebp
inc
mov
mov
and
mov
cmp
jo
push
(bad)
lahf
mov
movs
and
push
mov
sub
and
mov
and
cdq
inc
pop
jmp
cmc
iret
mov
ins
cmp
pop
and
jp
imul
sbb
shr
lea
xlat
push
fcomp
fistp
imul
(bad)
sub
sbb
cmp
add
gs
test
hlt
es
fs
push
jbe
xor
adc
mov
cmc
int3
push
ret
jb
int3
pop
mov
jmp
pop
clc
in
or
jecxz
cli
mov
cmp
ror
lods
push
push
add
mov
and
aaa
addr16
mov
outs
add
ret
jmp
sub
fnstenv
xor
fnsave
jmp
fiadd
add
jecxz
lds
js
data16
fsub
jno
enter
call
hlt
les
adc
jge
dec
inc
xchg
push
sub
mov
adc
push
pop
mov
leave
cli
shr
pop
mov
std
sub
jo
cmps
mov
adc
stos
lods
add
into
call
fst
add
jp
xchg
mov
(bad)
data16
iret
adc
cwde
(bad)
push
test
push
sti
and
mov
sti
fsub
jge
or
cmp
mov
cmc
lea
mov
xor
sub
dec
movs
ds
mov
mov
adc
ins
xchg
mov
adc
call
lods
inc
xor
dec
imul
fbstp
test
test
sbb
rcl
enter
fbstp
xchg
cmp
cs
mov
repnz
out
sub
mov
gs
inc
scas
jecxz
call
inc
add
cs
mov
inc
or
cmp
test
lds
sub
jg
pusha
ins
gs
dec
push
stos
sbb
loop
cli
mov
std
push
sub
retf
outs
xor
inc
xchg
outs
nop
pop
jl
xchg
jne
jnp
fcom
sub
sbb
cmovg
int3
jo
fwait
sar
inc
xchg
aad
fwait
or
pushf
mov
pop
jbe
push
fst
mov
mov
push
rcr
lods
mov
popf
test
cwde
lock
inc
jle
clc
sbb
or
loope
jns
lds
(bad)
repnz
pop
iret
gs
xor
add
(bad)
xor
fldcw
mov
out
mov
push
sub
mov
pop
in
aaa
inc
les
push
push
mov
inc
adc
arpl
mov
mov
out
pop
or
sub
rol
pop
repz
das
sbb
xchg
(bad)
mov
je
push
mov
(bad)
pusha
mov
std
sub
jg
(bad)
xchg
fldenv
repnz
cmp
icebp
pop
(bad)
dec
and
leave
mov
inc
iret
sub
push
xchg
hlt
sub
shl
fidivr
(bad)
test
mov
jle
xor
xrelease
push
push
pusha
or
mov
hlt
jae
mov
add
ret
sub
xchg
mov
mov
xchg
adc
mov
fcmovu
inc
loopne
mov
push
cmp
ror
jbe
xchg
push
ins
sub
push
bound
loope
mov
adc
scas
jmp
jnp
mov
retf
mov
inc
cmp
push
cmc
sbb
jne
out
sub
lea
mov
(bad)
sbb
or
les
mov
pop
fnstenv
mov
mov
cdq
nop
xchg
lea
repz
cmp
cmc
fiadd
test
sbb
in
jnp
lods
retf
and
icebp
pop
adc
cmp
push
stos
mov
cmp
pop
std
mov
push
rcl
add
lods
bound
std
push
add
leave
xchg
inc
repz
and
(bad)
jbe
adc
push
shl
dec
pop
and
aad
inc
adc
ret
sti
cmp
add
std
sub
rol
push
pushf
in
pop
es
adc
loope
xor
jecxz
in
dec
dec
addr16
pop
out
mov
jo
pop
mov
xchg
ja
sbb
sbb
pop
outs
and
push
jbe
imul
icebp
xchg
mov
cmps
or
ja
jno
sub
dec
cli
pop
mov
cmp
pop
dec
mov
push
pop
inc
cmps
fsub
mov
and
and
fld
push
mov
mov
fs
jp
mov
lahf
out
nop
leave
adc
cdq
sbb
or
mov
sbb
lds
rcr
retf
loopne
cmc
pop
lea
out
mov
outs
add
push
in
mov
xlat
loop
jbe
adc
push
xlat
xchg
retf
adc
(bad)
aaa
pop
cdq
dec
pop
sub
fs
dec
fdivr
pop
adc
xchg
sub
adc
sub
movs
mov
sub
jle
in
adc
bound
mov
not
xor
add
fdiv
xchg
xchg
jae
push
jmp
push
mov
ror
add
cs
cmp
sbb
mov
cmp
xor
jne
push
(bad)
daa
ja
push
inc
push
mov
or
inc
or
sahf
iret
movs
mov
xor
xor
(bad)
shl
ret
fistp
ins
or
rol
ja
jl
dec
sahf
popf
arpl
cdq
cwde
xchg
in
stc
jle
and
push
(bad)
mov
stos
fucomp
(bad)
mov
dec
push
mov
jnp
addr16
rcl
cmps
cmps
xchg
loopne
inc
(bad)
rol
bound
jmp
pop
mov
ss
and
xor
inc
and
jnp
inc
pop
sbb
push
push
add
div
jl
pop
add
repz
popa
lds
push
adc
std
pop
out
pop
sbb
ret
sbb
jmp
push
mov
inc
pop
mov
mul
psraw
push
xchg
or
xor
mov
pop
xor
xor
loope
pusha
lock
popf
cmps
lods
mov
out
mov
mov
repz
push
jns
add
xor
xchg
jmp
bnd
mov
ja
mov
sub
mov
jge
inc
adc
xor
in
push
push
in
iret
test
sar
das
dec
outs
(bad)
iret
pop
cmps
aam
inc
adc
xor
or
cmp
jb
dec
push
loop
push
cmps
int
fld
mov
jl
nop
inc
jae
or
loopne
jns
fidivr
adc
fistp
mov
rcr
div
dec
popa
jns
or
push
ror
sahf
xor
lock
mov
pop
lods
retf
or
les
mov
pmaxsw
xchg
in
mov
xchg
in
mov
or
movs
add
sub
sbb
cmps
pop
add
call
out
mov
xor
inc
out
xlat
adc
sbb
sbb
rcl
pop
sbb
(bad)
xchg
mov
dec
and
sub
xchg
cmp
int3
mov
jmp
jecxz
jne
cmp
fstp
push
jge
inc
stos
push
push
rcr
push
mov
das
push
adc
jne
inc
inc
dec
mov
cmps
outs
(bad)
cmp
mov
js
mov
dec
sbb
xor
loopne
mov
dec
mov
mov
or
enter
ds
out
int
adc
mov
ds
dec
mov
mov
xor
jmp
or
iret
mov
(bad)
js
mov
shl
dec
nop
neg
mov
test
(bad)
imul
std
pusha
sbb
imul
inc
(bad)
xchg
movs
dec
jns
mov
icebp
pop
cmp
loope
hlt
cmp
and
and
sub
enter
leave
out
mov
adc
jp
leave
mov
outs
or
inc
nop
fnstenv
add
lea
sub
add
inc
fs
push
mov
add
gs
add
push
pop
popa
in
lods
pushf
test
mov
rol
aaa
pop
(bad)
lods
fmul
mov
dec
jp
mov
jp
jle
xchg
jg
scas
lods
aam
cmp
inc
and
repnz
cld
into
iret
mov
mov
sbb
push
push
lods
pop
dec
aas
in
push
push
test
fnop
add
mov
xchg
stos
js
ja
mov
pop
aam
(bad)
push
fld
jmp
das
add
jmp
dec
xlat
ds
imul
daa
xor
adc
retf
sbb
ins
inc
or
aam
retf
in
daa
sbb
add
aaa
sub
fisub
push
xchg
popf
(bad)
mov
dec
sub
jge
push
mov
mov
retf
sub
mov
ins
mov
icebp
or
(bad)
pop
or
jge
js
imul
jne
loopne
lods
fist
shr
dec
adc
sbb
inc
mov
in
add
xor
test
sub
or
pop
fdiv
lods
aaa
cmps
std
in
xor
push
xlat
add
jmp
sbb
pop
add
pop
sbb
jns
js
jnp
and
sbb
repz
repnz
ss
lahf
xor
xchg
mov
jl
scas
xor
xor
mov
or
xchg
jbe
mov
pop
out
dec
xor
sub
sti
fsubr
mov
arpl
pop
mov
in
add
cmp
and
jo
cmp
retf
aad
repnz
in
fadd
inc
inc
xchg
call
stos
popa
cmps
lea
enter
(bad)
dec
pop
fistp
jge
(bad)
pop
sub
xor
adc
(bad)
xchg
fs
and
call
add
cmp
push
mov
mov
adc
jbe
mov
test
add
adc
xchg
out
cli
push
fwait
imul
pop
jl
aaa
mov
push
es
dec
adc
dec
or
cmc
or
mov
(bad)
in
ss
fiadd
dec
push
ficomp
mov
stc
jo
out
sub
cmps
cdq
jp
dec
ins
lea
inc
add
push
cdq
ins
pop
sub
movs
cmp
jnp
rol
out
inc
(bad)
loopne
adc
mov
pop
aaa
push
fwait
icebp
jecxz
push
xchg
jb
call
loopne
(bad)
cmp
popa
xor
and
cmp
push
sub
stc
test
adc
shr
sub
jecxz
dec
rcr
sbb
jo
push
in
(bad)
xchg
push
movs
popf
out
add
lea
push
cmp
sar
(bad)
std
ds
jns
mov
mov
sub
pop
sbb
lock
dec
mov
mov
lods
mov
mov
mov
mov
mov
mov
cmp
dec
xor
in
adc
aaa
inc
retf
sbb
adc
xor
mov
push
dec
loope
stos
out
(bad)
and
out
pushf
cli
shl
fbld
xor
pop
sbb
lods
cmp
stc
fcomi
jp
pop
push
outs
jmp
data16
jno
inc
stos
xchg
es
shl
add
adc
jmp
into
mov
call
xor
pop
retw
inc
rcl
(bad)
sbb
mov
mov
aam
sub
cwde
movs
jmp
or
ret
jmp
mov
cmp
xor
lahf
pop
pushf
sub
aad
popa
or
mov
nop
cwde
test
mov
repnz
jnp
es
adc
mov
scas
jb
(bad)
adc
test
test
sbb
fbld
test
lods
mov
cmp
movs
lods
cmp
ds
sbb
jp
xor
pushf
push
into
or
inc
enter
movs
daa
or
in
outs
cmps
cmps
cld
push
inc
mov
mov
pop
mov
in
xlat
push
loopne
xor
sti
icebp
fmul
jg
hlt
(bad)
repnz
or
pop
jns
fimul
mov
inc
xor
lods
mov
sub
imul
inc
cmp
retf
stc
stc
xor
fldcw
test
jge
stos
xchg
mov
sahf
loop
int3
pop
xchg
adc
not
fnstsw
popa
and
cmp
imul
cmps
sub
cli
or
arpl
and
sub
pop
loop
iret
dec
pop
adc
cwde
cmp
sti
xor
out
icebp
mov
pop
das
mov
sbb
jle
fwait
scas
shl
pop
loopne
dec
sub
dec
add
fist
scas
mov
fimul
popa
adc
xlat
call
stc
cmc
pop
fs
dec
fidivr
pushf
cs
cdq
mov
out
inc
popf
adc
outs
push
jp
aad
stos
sub
xlat
cmp
sub
push
sti
push
jb
das
test
mov
sub
xor
cmc
xchg
adc
pop
sbb
mov
pop
(bad)
push
jb
adc
fs
pop
test
loope
(bad)
daa
xchg
mov
ror
ds
leave
psubq
jmp
add
(bad)
fld
sti
aaa
outs
shl
aad
shl
call
jge
adc
int
sub
fs
dec
enter
pusha
jbe
xchg
mov
sub
pop
movs
(bad)
fidivr
(bad)
mov
or
xchg
in
xchg
daa
push
push
pop
cmp
(bad)
leave
in
(bad)
icebp
push
jmp
pop
cmps
scas
inc
and
jnp
mov
inc
jbe
pop
retf
cmps
(bad)
xchg
(bad)
fidivr
pop
adc
cmp
mov
fadd
data16
jmp
xor
mov
aaa
movs
fcomip
fs
imul
in
hlt
xor
hlt
pop
or
push
stos
pop
sti
xchg
cli
lods
add
out
test
push
add
and
cmps
xchg
cmp
enter
ins
jecxz
scas
mov
jnp
xor
loopne
mul
and
mov
int
pop
rol
xor
fadd
dec
lods
js
sbb
pop
sbb
xchg
repz
sti
inc
push
rcl
sub
imul
inc
push
cli
cmp
sub
jl
nop
shr
je
adc
scas
mov
inc
out
cdq
fiadd
mov
aad
loop
jbe
add
xor
ds
cmp
pop
xchg
ss
cld
aas
cwde
mov
inc
cmc
mov
das
push
cmp
into
fcmove
push
in
ror
add
int
(bad)
into
mov
nop
xor
xor
push
sti
mov
cmps
test
jge
mov
or
aaa
push
cmp
(bad)
cmps
pop
inc
aaa
ss
push
and
sahf
pop
sbb
xchg
push
cmp
stos
cli
and
imul
add
in
jle
imul
xor
mov
mov
mov
mov
daa
or
pop
push
pop
outs
sbb
push
retf
cmp
je
sar
lods
sub
into
sub
es
out
adc
nop
jg
jae
jo
cmc
icebp
loop
push
xchg
push
stc
jecxz
mov
inc
sbb
lahf
push
pop
movs
mov
test
aam
call
mov
ins
pop
jae
dec
aaa
repz
xor
mov
sub
lahf
sub
sahf
xor
pop
aad
cli
cmp
cmps
(bad)
xchg
mov
shl
aas
mov
inc
dec
cld
lahf
adc
and
or
gs
rcl
pop
inc
lock
jo
arpl
retf
adc
pushf
outs
dec
and
aas
push
sub
or
lds
imul
mov
ins
dec
push
call
test
mov
xor
sub
lds
xchg
xor
lods
pop
mov
(bad)
ss
stos
in
pop
add
fistp
adc
xchg
and
outs
fwait
retf
push
jecxz
retf
test
dec
enter
enter
cmp
(bad)
jnp
mov
add
push
jg
retf
mov
adc
mov
hlt
cwde
fild
mov
push
and
or
or
stos
adc
test
mov
movs
sbb
sbb
add
cwde
(bad)
mov
cmps
cli
push
pusha
aad
jo
push
pop
rcr
shr
mov
xor
das
sbb
jge
fsubrp
repnz
mov
cmp
cli
cld
dec
faddp
retf
add
push
push
ss
aam
sbb
xor
adc
icebp
adc
je
scas
cwde
clc
bound
stc
pop
sub
inc
out
shr
pop
xor
xlat
aaa
mov
in
dec
mov
aas
out
icebp
call
fist
mov
jb
cmp
das
call
mov
adc
inc
inc
pop
movlps
mov
jne
test
rol
cmc
cmc
out
and
aam
or
aas
cld
cli
push
nop
stc
inc
cmp
gs
lds
popf
dec
xor
stos
cmp
sti
or
ret
mov
push
and
push
out
pop
mov
cmp
xchg
xor
loopne
aad
hlt
cmp
pop
and
inc
sbb
std
in
add
sahf
sbb
test
jae
fcmove
adc
les
movs
(bad)
jmp
fidivr
mov
leave
xor
inc
jp
shl
cmp
add
fisubr
psraw
push
and
mov
sbb
cs
pop
mov
hlt
and
lock
mov
mov
xor
inc
jo
mov
out
call
aaa
pop
shl
iret
xchg
sub
push
xchg
outs
ror
inc
iret
jae
push
sbb
mov
push
jnp
dec
lods
pop
test
adc
inc
jbe
mov
or
(bad)
aad
pop
push
es
fdivr
dec
push
push
push
sbb
dec
cmp
inc
shl
jl
xchg
or
xchg
xlat
imul
jno
ins
in
cmp
arpl
sbb
test
(bad)
leave
push
xor
dec
(bad)
mov
cmp
inc
jge
mov
sub
add
shl
add
mov
add
jb
ror
xor
xor
cwde
ret
pop
xchg
xor
mov
jp
adc
xor
mov
push
mov
hlt
scas
inc
scas
inc
mov
sahf
push
add
mul
loop
cwde
sub
ret
lods
xchg
ja
lods
dec
sub
cmp
test
sub
das
test
outs
mov
push
lock
mov
in
ds
mov
fidiv
and
jl
cld
or
inc
adc
push
jo
jmp
sbb
jge
rcl
sar
or
mov
(bad)
call
enter
imul
pop
out
mov
aad
jne
xor
or
add
leave
fimul
inc
rcl
and
enter
adc
dec
gs
outs
sahf
scas
mov
int
loop
data16
scas
frstor
fstp
cmp
mov
popa
shr
call
mul
mov
mov
ins
mov
pop
mov
daa
cmp
or
enter
pop
or
mov
mov
add
xchg
lahf
xchg
push
push
test
dec
dec
mov
push
push
stos
ds
cmp
dec
sbb
cwde
inc
gs
mov
(bad)
loopne
ins
in
clc
push
jmp
loop
loope
pop
iret
mov
push
mov
fimul
retf
jge
out
jae
out
mov
(bad)
inc
xlat
cmc
pusha
pop
add
out
cdq
lea
arpl
sub
aas
or
push
(bad)
lds
xchg
mov
out
push
fild
or
xchg
call
push
push
repnz
sbb
mov
and
cwde
call
and
sahf
inc
push
jbe
fcomp
in
push
push
cmps
je
jae
dec
cs
xchg
mov
dec
xor
scas
in
xor
xor
and
push
out
rcr
shl
xchg
ret
ins
sahf
dec
pop
xor
pushf
(bad)
xor
mov
scas
xchg
xchg
push
cmp
clc
out
adc
xor
mov
adc
gs
adc
dec
lahf
cdq
div
jecxz
repnz
add
int
jne
into
sar
dec
pop
sbb
test
sub
or
xor
mov
test
mov
stc
loop
bound
movs
inc
(bad)
loopne
clc
jb
ret
add
pusha
cdq
sbb
iret
in
ins
adc
inc
call
jbe
rcr
in
sbb
xchg
lods
out
add
stos
arpl
sbb
fbld
aas
push
jecxz
mov
xchg
or
push
push
push
mov
dec
fimul
test
sub
xlat
mov
push
std
rcr
scas
xchg
in
adc
bound
dec
scas
mov
sbb
jo
jge
loopne
inc
dec
rcl
xchg
(bad)
shl
xor
int3
pop
iret
add
out
lock
jmp
mov
mov
das
sbb
xchg
push
pop
jmp
jne
adc
sbb
out
cwde
xor
adc
dec
or
adc
lahf
jecxz
sbb
imul
shl
push
mov
sbb
cmps
sahf
retf
mov
mov
sub
into
jbe
mov
cmp
push
and
sbb
arpl
scas
and
dec
adc
movs
cmp
lock
ja
dec
mov
jbe
lods
adc
or
inc
das
into
mov
dec
push
jbe
pop
xchg
xchg
inc
jge
push
out
in
jb
xor
inc
cld
arpl
imul
mov
cmc
xchg
push
call
mov
push
inc
shr
aas
das
pop
(bad)
in
sbb
int3
push
in
xchg
adc
lock
loop
cld
shr
inc
push
and
stos
pushf
mov
pop
int3
lock
ret
(bad)
leave
pop
dec
in
test
and
jae
rol
pop
ret
pop
aam
fst
pop
aam
mov
sub
stos
cwde
jb
ret
jge
fisttp
ret
fwait
rep
sbb
jne
push
jbe
sbb
xor
mov
movq
ret
lahf
js
cmp
or
xchg
pusha
pop
adc
mov
mov
mov
sbb
jnp
add
addr16
out
popf
es
sbb
fld
arpl
inc
xchg
dec
cwde
arpl
cmp
cmp
mov
movs
lods
mov
cmp
adc
mov
cli
in
jp
in
fcmovnbe
into
aaa
and
(bad)
push
inc
scas
fdivr
push
jbe
pop
mov
xor
cwde
imul
mov
mov
(bad)
movs
push
or
outs
mov
aam
xchg
jg
jmp
push
inc
nop
adc
mov
retf
jmp
add
popa
imul
retf
inc
(bad)
enter
xchg
xchg
imul
in
inc
out
call
inc
dec
dec
int
add
lahf
stos
jno
in
xchg
or
inc
mov
push
jp
mov
sbb
adc
idiv
push
or
outs
jno
push
fbstp
cmp
data16
lea
test
jnp
outs
cld
imul
sub
mov
sub
test
mov
cld
call
out
and
int
xchg
mov
sub
dec
xor
sbb
cmps
sbb
dec
push
sbb
leave
test
shr
je
pop
cwde
(bad)
stc
push
fldcw
loope
push
push
fisubr
nop
lahf
shl
add
loop
sub
ror
add
mov
or
pop
hlt
(bad)
test
inc
jae
in
mov
adc
xchg
or
ja
push
std
call
cli
pop
sub
scas
arpl
mov
cmp
xor
cmovs
mov
mov
jge
(bad)
adc
scas
push
test
loop
shl
and
cmp
fcom
(bad)
adc
sbb
adc
jl
je
mov
pop
arpl
bound
outs
das
add
and
cmp
ror
jno
shl
push
inc
or
js
push
nop
(bad)
cmp
(bad)
jb
jmp
add
jno
mov
fsub
outs
aad
(bad)
dec
je
fidiv
push
ret
or
stc
jns
xchg
dec
add
pop
inc
cmp
test
sub
repnz
mov
and
mov
push
mov
mov
push
xchg
or
jp
lds
in
movs
mov
pusha
lahf
call
xchg
jle
data16
mov
movs
call
mov
and
daa
cld
popf
dec
adc
adc
stc
cmp
mov
aad
mov
mov
sti
sub
sbb
add
stos
mov
js
fucomi
jle
jno
jl
mov
cs
test
ret
mov
or
or
mov
inc
int3
retf
(bad)
sbb
arpl
fldcw
push
imul
in
lock
ss
sbb
loopne
cmp
fwait
and
retf
mov
jecxz
xor
cmp
cli
into
popf
push
in
dec
mov
retf
(bad)
mov
cmp
push
icebp
(bad)
xchg
xor
push
bound
mov
lahf
dec
sar
sar
jmp
pop
sub
or
ja
aaa
das
stc
dec
rcl
js
jg
and
arpl
stos
pop
push
ins
mov
fild
jbe
les
jno
mov
sbb
clc
cmp
jae
out
cs
arpl
aaa
dec
xlat
inc
inc
or
adc
adc
js
das
cld
les
push
xor
mov
jne
arpl
add
cdq
dec
xchg
inc
push
imul
xchg
ret
sub
adc
pop
in
or
mov
adc
jae
mov
scas
pop
xchg
(bad)
jo
jmp
adc
jl
scas
call
sbb
mov
in
mov
enter
es
aam
xchg
not
std
nop
sub
fistp
cmp
ret
xor
hlt
into
jmp
push
mov
cmps
xchg
cmc
add
and
aam
ins
jb
neg
aad
aad
adc
ret
adc
cmpps
in
int
test
fdivr
es
aaa
cli
jnp
jne
xchg
xchg
mov
jecxz
cmp
xchg
adc
lds
retf
jg
sbb
movs
ficomp
cli
inc
xchg
std
out
pop
xor
and
inc
push
ret
ds
rcr
pop
fs
ror
in
cs
aaa
xchg
and
mov
xchg
xchg
(bad)
aas
hlt
cs
and
fsubr
jmp
cwde
jns
jns
sbb
xchg
(bad)
enter
jb
xor
sub
shr
(bad)
sti
bound
push
pusha
push
sub
push
push
xchg
bound
cld
mov
sbb
call
fidiv
xlat
xor
push
adc
jno
add
inc
and
mov
ins
(bad)
call
cld
(bad)
cmp
mov
jb
(bad)
sti
pop
mov
cmp
ret
inc
mov
in
call
and
(bad)
mov
inc
mov
push
icebp
push
cli
js
cmp
push
out
jmp
pop
mov
add
or
imul
pop
js
push
arpl
dec
adc
aad
mov
sti
mov
iret
xor
test
pushf
in
push
ret
mov
xchg
call
mov
(bad)
mov
(bad)
repnz
pop
out
adc
cmps
movs
div
rcl
jno
mov
movs
ss
dec
aam
dec
or
xchg
mov
or
and
(bad)
adc
xchg
mov
jl
adc
fmul
add
mov
retf
pop
xor
(bad)
setnp
retf
inc
ss
adc
inc
sub
fs
jns
pop
cli
push
push
jge
mov
ds
rol
stos
call
pop
movs
and
add
(bad)
push
mov
fnstcw
cmp
in
pop
sub
push
cmp
mov
js
in
into
or
push
cmp
lahf
mov
(bad)
les
jl
pop
pop
imul
hlt
popa
cmp
push
mov
inc
mov
shl
int
cli
cmp
xor
in
mov
sub
push
xchg
push
sar
cmps
pop
sti
(bad)
aas
jmp
fldcw
mov
jl
scas
(bad)
les
in
xchg
fcom
dec
leave
mov
push
data16
push
ret
sbb
mov
mov
fs
call
mov
call
adc
neg
retf
cmp
and
inc
add
add
sbb
and
push
push
xchg
sbb
cmps
popf
jbe
jg
inc
jle
lods
mov
retf
mov
sbb
(bad)
cmps
cmp
jge
pop
mov
cmp
sbb
jecxz
adc
iret
stos
jbe
push
dec
sbb
add
into
repnz
push
out
call
arpl
mov
cld
sbb
jne
ds
cmp
and
mov
addr16
adc
xchg
pop
mov
xabort
aas
mov
es
mov
sbb
pusha
xor
je
je
mov
push
imul
cs
inc
push
push
mov
or
out
jp
loopne
xor
repz
jbe
nop
nop
arpl
xchg
jns
jp
dec
push
dec
mov
sub
xchg
or
into
dec
pop
push
fild
xchg
and
ficomp
xlat
fmul
jmp
jb
lods
cmc
in
xchg
cmps
jno
test
outs
jb
mov
sub
fsubr
inc
mov
dec
lods
pop
(bad)
push
jns
add
inc
sub
sahf
cmc
mov
xchg
in
in
mov
fwait
pusha
or
call
sub
add
sub
repnz
xor
int3
adc
rcl
js
mov
push
shr
xor
lea
icebp
jp
daa
fidivr
inc
sub
sbb
(bad)
push
mov
out
add
loope
mov
std
inc
test
ror
mov
hlt
lods
or
(bad)
in
jb
or
into
push
imul
in
xchg
mov
and
dec
imul
adc
rcr
jle
test
movs
sar
inc
jge
cs
cwde
xchg
call
jmp
pop
ins
sub
jae
(bad)
xor
in
in
mov
mov
and
loopne
pop
xchg
push
outs
outs
mov
pop
fwait
xor
mov
xor
cs
add
pop
mov
nop
enter
sub
mov
repz
scas
push
push
mov
mov
fistp
inc
fistp
or
jno
in
lea
stos
pop
aas
movs
dec
sbb
and
out
and
out
das
ins
adc
stos
jnp
mov
mov
adc
shl
pop
pop
push
int
pop
test
inc
js
cdq
dec
movs
enter
call
lahf
addr16
sub
mov
fstp
lods
aas
push
cmc
inc
mov
aaa
jb
aad
in
jae
das
enter
lods
sub
outs
cs
push
(bad)
je
es
(bad)
sbb
mov
ret
imul
dec
sub
push
imul
shr
xchg
cmp
push
pushf
aad
adc
js
std
lods
loope
cwde
lea
aam
hlt
xchg
dec
mov
ds
nop
or
push
jno
ja
xchg
sub
push
cmp
xchg
or
repnz
fstp
adc
fwait
jae
ror
sub
xchg
or
stos
mov
(bad)
cmp
inc
(bad)
in
inc
mov
mov
and
adc
sub
push
bound
dec
and
push
mov
cli
pop
adc
mov
cld
jmp
sbb
(bad)
std
ret
es
cmps
jmp
loope
repnz
mov
scas
ins
dec
popa
sbb
mov
int3
xchg
adc
mov
xchg
push
push
ret
(bad)
dec
push
mov
call
(bad)
jg
fldenv
mov
lds
or
or
cmp
pop
repz
jb
jl
xor
pop
inc
loop
outs
sbb
mov
mov
ins
outs
add
rol
dec
and
xor
dec
dec
mov
fisttp
mov
inc
inc
sub
jo
xchg
pop
inc
jl
and
aad
ret
pop
addr16
pop
or
mov
jbe
push
mov
xchg
add
scas
shl
mov
push
repnz
sub
inc
or
cmp
popa
call
stos
xchg
xchg
cld
jge
xor
test
(bad)
jp
cdq
xchg
xor
call
repz
lock
jle
(bad)
ss
das
and
movs
sbb
push
les
mov
in
shr
inc
test
lods
fld
xchg
pop
push
les
ret
mov
sub
lods
mov
dec
mov
loope
pop
xchg
inc
sbb
enter
add
test
fsubr
fs
lds
add
jle
(bad)
mov
mov
dec
addr16
aad
pop
jp
pushf
stos
stos
push
enter
out
mov
sub
push
inc
mov
push
mov
push
mov
imul
mov
inc
mov
cwde
(bad)
(bad)
pop
lds
cmp
outs
hlt
gs
cmp
xchg
call
mov
icebp
dec
test
fldenv
fstp
sub
ret
das
lahf
out
jno
mov
cmp
fstp
cdq
jecxz
xchg
mov
out
cmc
xor
ins
pusha
or
mov
jge
sub
out
add
adc
pop
push
aaa
imul
ficom
ret
(bad)
sbb
sub
iret
fist
sbb
mov
dec
rcl
inc
test
inc
lods
and
popa
or
je
inc
movs
das
mov
call
hlt
pushf
sbb
jecxz
in
jbe
cmps
or
sbb
data16
stos
test
inc
and
enter
in
ins
dec
dec
xchg
dec
cwde
or
push
push
dec
sahf
dec
cld
push
aam
mov
scas
jg
arpl
jns
push
mov
xor
mov
jmp
pop
leave
or
jb
dec
aaa
or
je
jae
sub
mov
xchg
pop
mov
or
outs
xchg
es
cmps
push
xor
cmps
in
cli
pop
retf
pop
shl
(bad)
cld
add
adc
jg
scas
out
jb
sub
test
ins
adc
ins
out
ret
(bad)
test
inc
sub
out
gs
cmp
ret
dec
adc
and
dec
sub
mov
cwde
pop
imul
lods
cmps
pop
stos
es
pop
shl
pop
jecxz
call
(bad)
ss
xchg
pop
cwde
pop
add
dec
add
ins
xchg
sahf
rol
jno
push
ins
sbb
mov
xchg
cmp
loope
dec
mov
rcr
mov
pop
dec
mov
arpl
add
call
cmp
mov
mov
aam
ret
test
add
jmp
clc
jge
in
jo
pop
xor
ret
fwait
xchg
push
movs
cmp
sahf
not
les
imul
mov
in
add
mov
pop
or
jmp
push
and
cmps
fist
xor
pop
ins
in
repz
push
shl
mov
adc
push
cmps
sub
(bad)
test
push
hlt
imul
mov
jge
cld
shl
dec
aam
cmp
std
jno
push
push
stc
pop
push
(bad)
mov
(bad)
adc
xchg
mov
fsubr
pop
pop
int
sbb
xchg
lahf
movs
iret
adc
adc
mov
push
cmp
dec
mov
inc
and
jle
(bad)
jns
test
inc
fisttp
mov
push
inc
in
xchg
adc
inc
std
les
pop
mov
xor
adc
lods
sub
out
push
adc
push
inc
aas
lds
js
cmp
pusha
cmp
dec
sbb
pop
cmp
cwde
or
lods
shl
shr
pop
gs
inc
sar
repnz
cmp
and
out
pop
ins
jmp
jne
or
(bad)
mov
and
mov
cmc
pop
or
xor
adc
in
jl
pop
xchg
fldenv
mov
stc
fst
aad
mov
add
fild
mov
mov
mov
xchg
add
scas
dec
sbb
xchg
(bad)
lds
xor
and
and
aad
enter
inc
ins
xchg
mov
shl
jno
mov
in
add
sbb
inc
pop
icebp
das
pop
xor
add
iret
repz
lods
mov
cmps
and
xchg
adc
test
xchg
adc
mov
inc
clc
sub
pop
add
cdq
cmp
dec
sub
adc
sub
je
jb
movs
call
fnsave
jmp
adc
adc
ret
pop
les
inc
leave
shr
lds
push
pop
sub
mov
int
inc
cmps
dec
in
mov
pop
adc
je
pop
pop
cs
or
xchg
push
push
push
push
push
cmps
sbb
adc
fcmove
xor
out
push
repnz
xor
jle
pop
shl
aaa
test
push
xchg
jg
dec
mov
ss
(bad)
mov
jmp
jecxz
xchg
xor
push
xchg
dec
push
retf
dec
adc
adc
jmp
shr
push
xchg
jne
in
data16
lahf
mov
arpl
jp
mov
mov
mov
je
cmps
push
jo
add
out
into
(bad)
loopne
rol
popa
mov
xchg
mov
fld
imul
xor
mov
jl
dec
stc
xor
outs
push
cmp
loopne
push
lock
in
ror
test
mov
jmp
aad
inc
or
jmp
sub
mov
cmp
cli
aaa
shl
xchg
rcl
pushf
xor
or
imul
or
add
jmp
in
in
ss
mov
push
dec
popa
stos
pop
mov
shr
cld
ss
cwde
movs
arpl
icebp
gs
imul
mov
aas
mov
push
and
fmul
mov
mov
mov
hlt
test
pop
sar
retf
movs
out
icebp
xchg
ins
sub
pop
lds
add
push
pop
loop
dec
scas
add
aas
inc
cmps
inc
jmp
sub
mov
aas
std
in
retf
aas
sub
dec
in
pop
jecxz
add
call
mov
cmp
cmp
sbb
inc
mov
mov
aam
push
push
push
dec
out
jl
iret
add
int
out
enter
inc
es
mov
call
outs
(bad)
xor
lods
add
adc
and
out
repnz
xchg
mov
sub
xor
push
ror
sub
lods
call
mov
test
test
push
jne
pushf
test
imul
or
xor
sti
push
loopne
call
dec
test
add
sahf
or
jecxz
jecxz
cmc
(bad)
jbe
adc
sbb
mov
fistp
das
xchg
into
cmp
push
(bad)
push
out
sub
mov
rcl
adc
push
jle
sbb
(bad)
loope
mov
test
jno
or
inc
call
xchg
shl
push
xchg
sbb
ds
dec
scas
xchg
pop
mov
fs
adc
ins
es
xor
jnp
push
(bad)
push
cdq
or
ret
inc
dec
mov
cwde
mov
adc
std
xor
push
shl
aam
xchg
stos
aas
lods
inc
jo
pop
ss
sub
nop
mov
mov
es
cmps
add
mov
xchg
inc
adc
pop
out
cmp
fimul
sahf
mov
repz
(bad)
fidiv
add
push
shl
adc
or
xchg
ja
sti
mov
cmp
mov
imul
or
mov
frstor
pop
inc
call
imul
jmp
aad
and
and
mov
pop
ficomp
int
out
xor
hlt
hlt
add
adc
sbb
(bad)
pop
mov
ds
jge
xor
pop
scas
sbb
rcr
or
xor
rcl
sbb
fiadd
ja
or
cmp
lahf
mov
ss
dec
dec
lods
push
jl
mov
push
es
dec
mov
xor
cmp
rcr
dec
shl
sbb
out
and
add
sbb
xor
fwait
dec
add
or
cmp
cli
sbb
mov
popa
imul
push
xchg
js
or
clc
xchg
mov
mov
mov
pop
sbb
in
out
push
inc
and
mov
stos
lds
mov
shl
adc
mov
imul
xchg
pop
es
out
jmp
imul
imul
sbb
lahf
add
dec
push
jle
fdivrp
int3
cmp
loopne
xor
clc
ss
xlat
enter
out
ins
dec
add
call
arpl
push
das
arpl
sub
ret
ret
aaa
dec
push
or
cmp
in
xchg
jno
mov
mov
or
outs
scas
sub
and
jmp
dec
pop
out
addr16
mov
add
or
mov
push
jmp
pop
cmp
sbb
(bad)
in
pop
cmp
mov
ret
sub
push
movntps
test
xchg
sub
repnz
jo
pop
push
add
adc
call
inc
js
mov
jne
out
inc
lods
xchg
mov
clc
mov
loopne
fidivr
into
xor
fcmove
and
pop
jg
ror
stc
jb
sub
jmp
push
je
add
inc
jmp
(bad)
in
adc
inc
imul
rcl
pop
mov
aam
xchg
je
pop
pop
xchg
ins
dec
and
lock
scas
adc
sub
or
cmps
(bad)
lahf
cmc
and
xor
aas
sbb
clc
neg
xchg
dec
add
push
or
imul
mov
sar
inc
mov
popf
xor
test
sbb
mov
jp
push
cld
fcomp
xchg
(bad)
pop
xor
es
inc
fnsave
xor
jmp
xchg
sub
jecxz
popf
not
mov
imul
std
push
sbb
lds
cmps
jp
fmul
enter
adc
fist
and
push
dec
xchg
ins
xor
dec
cdq
mov
stos
(bad)
mov
push
les
sub
(bad)
pop
int
inc
push
add
cmp
xor
retf
mov
push
aaa
and
mov
aas
fstp
pop
bound
inc
pop
rol
rol
mov
(bad)
cwde
or
das
or
fisttp
sbb
ins
or
stc
in
(bad)
push
sbb
outs
xor
adc
es
lea
test
enter
jge
stc
dec
cmp
xchg
dec
pop
hlt
loopne
cmps
jmp
cmps
xor
push
inc
dec
test
jge
mov
push
lds
in
pop
popf
pop
in
jl
sub
addr16
je
mov
leave
jle
shl
inc
neg
add
mov
rol
inc
jl
sar
(bad)
stos
add
mov
imul
cmp
jns
mov
dec
ret
push
add
jmp
mov
mov
out
cmp
call
mov
test
mov
mov
inc
sti
sbb
(bad)
and
daa
iret
enter
sub
into
sub
fwait
jns
xlat
movs
adc
ds
cmp
xchg
js
(bad)
pop
jnp
(bad)
mov
jp
xor
addr16
mov
jns
push
mov
push
pop
imul
jmp
add
mov
je
loopne
inc
adc
imul
and
cli
(bad)
jmp
and
mov
push
jmp
xor
cmps
(bad)
pop
mov
push
jmp
sub
ins
scas
popf
jmp
mov
add
xchg
and
movs
(bad)
jne
int
cmp
cmp
and
pusha
and
mov
jle
add
inc
test
pop
mov
nop
jmp
nop
rsm
iret
lds
dec
mov
fdivr
loopne
loope
call
dec
test
jmp
ret
fild
jg
add
jmp
dec
(bad)
movs
add
mov
push
aad
adc
nop
xchg
sbb
lds
inc
mov
adc
mov
inc
mov
push
dec
xchg
in
cmp
rcr
jno
fisub
pop
inc
jg
add
pop
setb
clc
cmp
out
push
xchg
pop
mov
xor
sahf
pop
mov
and
and
inc
and
cmp
and
mov
dec
std
or
inc
imul
jo
jbe
(bad)
scas
cmp
jno
cmp
or
ins
loopne
dec
ret
pop
in
retf
and
xor
inc
dec
xchg
cmps
mov
loope
fwait
gs
popf
xor
add
mov
add
sub
test
je
adc
xor
and
mov
arpl
test
sub
je
push
mov
(bad)
(bad)
int3
or
loop
sbb
pop
jae
mov
pop
(bad)
push
inc
pop
daa
jmp
je
mov
xor
inc
jbe
pop
pop
mov
pop
xchg
adc
sbb
pop
(bad)
pop
or
or
sbb
xor
movs
int
aaa
jmp
add
adc
pusha
call
ins
or
loopne
inc
(bad)
push
(bad)
mov
fdivr
push
fdivp
push
test
pop
or
inc
and
xchg
pop
in
jne
sti
je
mov
sbb
cmp
mov
test
cli
sbb
fsubr
push
jge
xor
xlat
lods
test
push
dec
in
cli
jge
mov
pop
push
nop
sbb
jmp
sbb
sar
std
push
push
popa
rcl
jmp
add
dec
mov
in
iret
popf
rol
and
bound
aam
jle
rcl
test
dec
sub
jl
pop
and
movs
pop
iret
xchg
mov
cmc
jae
pop
dec
cmp
jns
add
sub
mov
jmp
int
movs
mov
cld
add
xchg
cmps
lock
stc
scas
mov
mov
inc
xchg
imul
leave
pop
popa
je
or
xchg
add
cmp
pop
hlt
and
push
xor
jg
stos
sbb
ret
mov
fisub
mov
outs
loopne
in
dec
and
jmp
fst
scas
mov
aam
dec
adc
ss
push
mov
fisttp
int3
add
mov
sar
jne
sub
mov
call
es
mov
adc
or
mov
mov
and
test
push
push
das
cmp
mov
test
dec
jno
repnz
scas
mov
addr16
std
pop
repnz
xor
adc
mov
and
gs
inc
sub
cmp
daa
mov
xor
stc
inc
adc
mov
inc
push
ret
jp
je
jmp
scas
mov
jnp
fidiv
leave
dec
popa
in
repz
or
pop
jmp
mov
dec
data16
cmp
outs
int
ins
retf
clc
pop
add
shl
loope
and
(bad)
test
cmp
add
pop
mov
or
mov
pop
xchg
mov
inc
pop
ds
dec
jo
and
call
sbb
pop
jae
or
shl
inc
ins
jp
add
movs
mov
inc
xor
ror
mov
dec
dec
xor
fbld
icebp
mov
mov
scas
jmp
add
test
and
daa
stc
imul
pop
push
mov
jg
jge
into
cmp
and
xor
test
xor
sbb
pop
pop
rcr
adc
or
push
ins
das
pop
cmc
cmp
dec
adc
push
or
fld
loop
leave
sar
jmp
shl
test
mov
dec
push
mov
das
pop
sub
ins
stos
mov
pusha
mov
lahf
xchg
(bad)
dec
jl
(bad)
jb
(bad)
jge
xchg
mov
or
mov
xchg
iret
scas
xor
pcmpgtw
loopne
mov
or
ins
inc
dec
xchg
fwait
or
sub
inc
pop
pop
jmp
into
ins
je
mov
fld
js
mov
and
sbb
stos
fnsave
sub
sbb
js
mov
stos
jo
push
inc
hlt
imul
fist
jo
jp
jmp
out
dec
inc
lods
xchg
and
scas
call
mov
add
push
cwde
xor
dec
xchg
push
aam
mov
retf
mov
sbb
clc
shl
xor
cld
(bad)
pop
and
scas
inc
arpl
pop
pop
nop
inc
mov
push
rcl
dec
call
(bad)
int3
pop
cld
add
or
cmps
and
adc
int3
mov
int3
mov
jne
jo
mov
es
outs
push
fimul
stc
xchg
xchg
(bad)
xor
push
addr16
adc
add
jl
jb
loopne
es
dec
(bad)
sbb
mov
add
mov
sbb
cmp
xchg
inc
push
ret
mov
pop
repz
xchg
test
cmps
cmp
cmp
fwait
dec
sub
sbb
xor
imul
mov
mov
icebp
inc
movs
push
sub
xor
adc
cs
les
scas
test
push
call
add
ret
ret
jno
repz
outs
inc
icebp
rol
inc
xlat
mov
cmc
nop
or
aaa
(bad)
(bad)
stc
aad
test
xor
add
sub
into
dec
jnp
xor
or
adc
pop
pop
jmp
in
add
imul
pusha
xor
inc
mov
hlt
aaa
inc
jg
adc
out
ret
nop
inc
add
push
popa
xchg
jne
repnz
or
and
outs
movs
push
mov
in
cdq
call
fst
fsub
xchg
xchg
sbb
push
mov
jmp
movs
outs
push
sbb
pop
in
movs
mov
inc
jmp
pop
xchg
mov
sbb
ins
scas
mov
sbb
jbe
test
mov
push
dec
std
cs
add
add
sub
ror
arpl
mov
(bad)
mov
inc
sub
gs
pushf
mov
(bad)
mov
jo
add
adc
icebp
fistp
pop
sti
ficomp
xchg
dec
scas
loop
movs
jg
sbb
add
daa
in
dec
retf
les
cmps
xchg
std
push
nop
push
sti
pop
xor
fidiv
push
out
and
aad
push
fidivr
daa
sub
imul
and
sub
out
fnstenv
or
lahf
call
leave
sahf
xchg
mov
not
and
xchg
inc
jp
pusha
push
mov
arpl
dec
mov
cwde
and
repz
cmc
add
out
adc
mov
xor
lods
adc
fisub
hlt
jno
movs
mov
mov
add
xchg
pop
(bad)
xchg
mov
ins
mov
pop
or
sub
fnstsw
int3
and
add
pop
and
xchg
dec
fs
or
sahf
test
jmp
inc
mov
jmp
push
test
mov
loop
inc
int3
add
cmp
pop
in
add
push
or
(bad)
shl
or
cmp
fcom
mov
pop
xchg
jp
stc
xchg
jp
pop
mov
mov
call
fisub
ror
jno
lahf
test
jecxz
test
cmps
sahf
xor
shld
mov
add
jb
pop
jae
popf
push
cmp
nop
push
ret
hlt
xor
fmul
(bad)
fcom
cld
lods
(bad)
out
fdiv
push
bound
in
cli
stos
lds
xor
xchg
mov
pop
ins
pop
cdq
out
sub
fisubr
push
sbb
cld
fcom
or
add
shr
addr16
add
xor
es
je
bound
jmp
das
stos
outs
push
scas
mov
pop
add
or
and
or
jbe
and
jbe
jecxz
push
and
std
sub
loopne
daa
clc
pop
call
cmps
sub
shr
push
lds
iret
jmp
lock
ds
imul
test
jecxz
jo
mov
mov
out
dec
sbb
popa
jle
mov
les
fcmovnbe
mov
daa
xchg
out
aam
(bad)
mov
imul
pop
stc
pop
aas
xor
loope
sub
sbb
icebp
mov
ja
cmc
in
rol
test
push
stc
jbe
push
cdq
(bad)
daa
mov
add
pop
std
lods
cmp
nop
pop
addr16
sub
cmp
dec
outs
add
cmp
cmp
and
mov
mov
imul
xchg
lods
iret
jns
inc
xor
and
ja
in
or
int3
vmread
mov
scas
jne
lods
push
xchg
bnd
test
sbb
into
and
fild
cmps
sti
ja
mov
push
shl
xchg
jle
pop
add
mov
loopne
(bad)
sub
xchg
mov
mov
stos
mov
and
sub
aaa
mov
rol
mov
nop
movs
shr
mov
and
stos
movs
fist
into
cdq
sbb
ror
shr
push
in
call
into
dec
into
mov
neg
dec
and
cli
push
push
sub
int
ret
mov
cld
cmp
xor
mov
ss
mov
mov
ins
(bad)
jl
cs
push
mov
xchg
cmp
mov
(bad)
enter
mov
jb
sbb
idiv
add
sbb
je
mov
mov
push
mov
cmp
xchg
or
cmp
xor
push
cmp
enter
mov
push
mov
push
clc
imul
dec
push
cmp
bound
call
fild
popf
xchg
inc
ins
pop
fstp
add
inc
mov
cmc
adc
movs
mul
stos
jno
mov
sbb
mov
xchg
push
outs
int
jns
jmp
stc
sti
add
cmp
movs
iret
mov
xchg
shr
rcl
xor
mov
imul
repnz
fld
cmc
pop
test
retf
(bad)
cdq
jb
cs
mov
leave
loopne
fstp
adc
pusha
or
hlt
adc
inc
jbe
xchg
mov
das
into
fst
xchg
mov
xchg
cmc
pop
jl
ror
mov
inc
fs
mov
cmp
out
or
mov
cmc
sub
mov
push
sbb
xchg
dec
dec
cdq
dec
xchg
xchg
mov
xchg
fwait
loopne
out
fsubr
add
xor
jecxz
sub
(bad)
and
push
in
mov
inc
adc
ins
ret
pop
cmps
fxch
cmc
sub
popa
xor
push
and
mov
sub
lds
and
sbb
add
fwait
punpcklwd
sbb
das
stc
and
std
gs
sbb
into
mov
inc
stos
fsubr
retf
push
call
cmp
mov
in
test
add
(bad)
jns
mov
popf
stos
aas
cmp
ret
into
inc
cmc
out
test
mov
dec
pop
inc
cmps
fimul
arpl
mov
scas
aas
cld
fnstsw
call
inc
mov
mov
test
inc
jns
add
dec
mov
and
call
call
lock
(bad)
adc
xor
cmps
stc
ss
jp
jecxz
dec
sub
adc
ja
ja
and
aas
xchg
aas
or
(bad)
inc
push
fistp
or
sub
and
push
aam
addr16
ins
outs
pop
dec
shl
mov
and
shl
dec
ret
and
outs
scas
sub
sub
retf
pop
adc
lods
les
mov
pop
hlt
add
or
add
sub
shl
(bad)
sbb
(bad)
and
outs
lods
jl
pop
pusha
pop
rcr
aaa
or
(bad)
(bad)
pop
pop
(bad)
scas
mov
test
pop
(bad)
(bad)
pop
inc
arpl
sub
jecxz
xor
mov
sti
adc
sbb
sub
cmp
sub
cmp
test
inc
adc
je
pop
jecxz
retf
xor
cld
mov
mov
rcl
and
jo
cmp
test
in
scas
call
push
test
push
pop
push
repz
xchg
cmps
xor
pop
js
in
(bad)
sbb
es
movs
shl
daa
add
or
push
dec
cli
sub
loopne
(bad)
in
mov
je
nop
lahf
mov
shr
lods
sub
xchg
dec
ja
cmp
aam
mov
sbb
dec
call
xchg
enter
mov
xchg
bound
in
mov
or
rep
jae
std
test
inc
addr16
scas
jb
mov
cmp
pushf
lods
cmc
mov
jge
dec
inc
(bad)
mov
lea
hlt
ds
sbb
inc
in
repz
push
xor
or
mov
ret
cmp
dec
ret
cmc
push
test
fidivr
add
addr16
std
cld
sbb
xor
xor
jno
xor
imul
scas
jo
jbe
fisttp
dec
mov
ja
dec
mov
and
add
mov
xor
fucomi
and
dec
pop
shl
dec
(bad)
dec
mov
jmp
jecxz
mov
jne
push
loope
jne
popa
inc
add
jp
xchg
jne
adc
in
fld
icebp
lds
pop
mov
mov
stc
arpl
pop
(bad)
cmp
mov
jecxz
stos
adc
(bad)
and
imul
push
sub
adc
pusha
push
pop
cli
cmp
adc
out
fsub
lods
xor
adc
test
adc
inc
je
push
sbb
add
test
push
test
lea
or
push
cmps
loope
sbb
mov
inc
in
sahf
lods
popf
enter
and
xchg
push
test
(bad)
pushf
xchg
call
adc
je
and
cli
push
out
sbb
push
jo
test
add
popf
mov
fidivr
retf
push
sub
jae
pop
aas
imul
pop
mov
and
add
dec
repz
fisubr
jge
aam
imul
jno
fisubr
jmp
out
cmovne
pop
enter
rol
jle
nop
xchg
cmp
cmp
arpl
mov
out
scas
jne
xor
dec
(bad)
push
add
jae
add
rol
not
sbb
add
adc
cmc
sar
ficom
and
sar
mov
inc
sub
adc
push
dec
mov
aaa
sbb
test
dec
xchg
pop
mov
xor
fdiv
jmp
add
(bad)
sbb
fistp
shl
in
fs
popa
sahf
lea
mov
mov
scas
push
data16
xor
aam
call
jmp
dec
push
clc
jmp
adc
rol
dec
xchg
inc
and
cld
popa
inc
adc
aam
loop
pop
retf
(bad)
std
je
mov
mov
jecxz
(bad)
fisttp
mov
leave
adc
ss
push
mov
daa
outs
mov
pcmpgtb
jmp
loopne
jecxz
pop
cli
mov
sbb
cmp
(bad)
mov
fdivp
mov
cmp
xchg
clc
fiadd
or
aaa
sub
daa
push
pop
jp
sbb
(bad)
sar
push
dec
cmp
into
iret
push
mov
in
lock
repz
iret
pop
in
es
cdq
ss
jmp
fsubr
js
push
inc
sar
cmps
jb
xchg
(bad)
sbb
xchg
jne
test
cli
rcr
mov
jg
xor
push
adc
jns
ror
out
jne
icebp
aaa
clc
push
sub
(bad)
push
gs
sar
adc
into
push
and
or
ins
add
mov
shl
mov
lods
les
imul
inc
int3
aam
test
xor
inc
imul
xor
adc
mov
addr16
add
movs
cs
(bad)
in
dec
lds
in
call
push
cs
or
call
out
in
cli
jle
loopne
fincstp
jb
sub
imul
lods
data16
rol
ret
pop
add
rcr
mov
sbb
fidivr
add
mov
loope
add
mov
sar
gs
(bad)
adc
cs
push
(bad)
jae
mov
pop
ja
cmp
jmp
movs
inc
xchg
mov
js
mov
mov
bound
pop
ins
sbb
je
(bad)
leave
iret
mov
or
jmp
push
(bad)
test
mov
and
rcr
fdiv
cmp
movs
xlat
mov
scas
mov
addr16
js
outs
sahf
and
imul
mov
xchg
adc
pop
lods
cmps
cli
pop
add
sub
or
ins
or
xchg
mov
inc
mov
mov
mov
(bad)
inc
into
sub
add
sub
sahf
xchg
jmp
xchg
loopne
shl
lds
ret
cmps
fnstcw
ins
xlat
xlat
iret
in
rol
ja
jno
sbb
rol
(bad)
icebp
ret
in
ja
movs
and
lds
jmp
sbb
xchg
inc
in
in
shr
retf
inc
rcl
sbb
repnz
sub
test
xor
pusha
sub
dec
add
mov
mov
add
cld
mov
(bad)
sbb
cmc
rol
iret
pop
jmp
or
cmc
rol
mov
push
sub
jb
jle
sahf
push
data16
cmps
cmp
aaa
imul
iret
xchg
dec
mov
dec
cmp
outs
xor
lods
sbb
enter
pop
(bad)
adc
mov
data16
pop
sub
fbld
mov
jecxz
cld
or
push
jo
sbb
jp
mov
leave
movs
sbb
dec
mov
repz
mov
jge
mov
dec
loope
lds
clc
jl
sub
mov
sbb
pop
mov
xchg
and
test
mov
xlat
out
neg
xadd
push
mov
mov
lods
dec
jl
int3
pop
xchg
mov
mov
daa
cmps
adc
jo
adc
in
scas
cmp
shl
fiadd
add
jno
rcr
xor
aam
xor
push
gs
and
add
push
xchg
mov
mov
lods
xchg
(bad)
in
inc
adc
inc
sub
pop
sbb
pop
ins
pop
(bad)
xlat
movs
neg
or
cmp
rcr
fwait
jp
pop
mov
popf
and
mov
pushf
mov
mov
inc
pop
fsubr
cmp
mov
popa
test
out
xor
add
xlat
into
ds
jnp
ror
adc
es
xchg
jo
pop
push
jl
sub
in
xchg
and
mov
mov
call
repz
or
scas
mov
xchg
es
mov
outs
jae
jmp
inc
pop
xor
ds
mov
inc
aaa
cmp
btr
or
or
mov
and
fidiv
push
aaa
mov
mov
mov
sub
retf
xchg
ja
dec
inc
add
cli
xlat
mov
int3
sbb
stos
cmp
mov
xor
(bad)
int
aad
fsub
(bad)
popf
mov
loope
adc
pop
adc
push
or
cwde
pop
lds
pop
mov
pop
xchg
pop
dec
ins
hlt
fdivr
or
out
mov
pop
adc
in
shr
mov
inc
pop
cmp
xor
stos
fcom
sbb
(bad)
xchg
cmp
adc
push
movs
mov
xchg
stos
pushf
dec
dec
xor
loopne
outs
fs
aam
fisubr
shr
or
xor
pop
fist
sub
dec
mov
push
rcr
push
or
rcr
fnstenv
out
loope
lock
dec
call
stos
repz
stos
push
adc
cld
leave
mov
jne
fadd
sbb
test
fs
pusha
inc
add
not
dec
fstp
jae
pusha
(bad)
mov
retf
cmp
xchg
stc
or
cmp
ret
repz
pushf
mov
jge
jns
pop
xor
nop
push
jns
mov
pop
repnz
pop
pop
movs
push
dec
and
or
mov
cmps
dec
in
xchg
push
mov
outs
cmps
push
inc
pop
add
mov
ds
adc
adc
mov
adc
sti
dec
pop
inc
pop
cmp
push
pusha
outs
(bad)
stc
and
enter
std
out
and
or
jmp
outs
out
sti
cmp
sub
retf
inc
adc
scas
movs
inc
add
(bad)
xor
fcom
data16
push
lods
jnp
call
xor
sub
push
mov
xchg
cmp
out
adc
call
xor
push
lods
push
int3
mov
int3
sub
les
fidiv
std
mov
ss
add
add
cmps
(bad)
lds
and
sub
cld
fisttp
pop
cmp
(bad)
shr
sbb
push
pop
xor
mov
xchg
jae
jne
push
cmp
call
inc
push
jno
mov
jbe
cmp
dec
loope
jae
out
push
dec
mov
pusha
ficom
adc
adc
cmp
leave
inc
stos
inc
jbe
push
mov
repnz
jb
fnsave
out
fdivr
sbb
mov
mov
mov
xchg
arpl
pop
push
loope
sub
test
mov
lock
dec
cmps
scas
nop
dec
dec
out
fwait
lea
sahf
out
inc
pop
scas
sbb
push
ja
xor
or
ss
mov
push
push
addr16
pop
jns
push
call
mov
mov
add
jl
ins
mov
mov
fsub
in
and
jl
jne
push
ret
push
pop
and
cmc
fld
pop
xchg
sub
mov
dec
push
ins
mov
imul
(bad)
push
imul
mov
mov
in
mov
adc
mov
add
push
cdq
mov
adc
jns
jnp
or
movs
sbb
cmp
sar
iret
push
ror
jg
dec
xchg
mov
adc
in
stc
pushf
mov
arpl
js
stos
cs
cmc
dec
or
jg
(bad)
and
inc
mov
mov
mov
mov
mov
out
dec
std
repz
loop
push
push
ret
or
fldenv
jo
pop
int3
clc
mov
push
cdq
ret
jmp
xor
sub
push
(bad)
div
jno
shr
sbb
fadd
jmp
fldenv
and
shr
or
mov
test
sar
cmp
cli
pop
inc
in
push
fidivr
hlt
out
lods
mov
js
mov
movs
xchg
cs
ficom
push
or
aam
and
gs
push
jge
add
push
leave
pushf
das
add
pop
enter
out
lahf
(bad)
out
fsub
lods
push
sbb
jo
jno
xor
adc
int3
stos
je
cs
and
mov
daa
mov
adc
outs
leave
sbb
and
out
in
nop
mov
stos
outs
test
xor
repnz
cmp
rcl
inc
mov
test
rcr
sub
leave
dec
scas
ror
sub
xor
scas
cmc
dec
mov
fadd
and
neg
mov
ins
ss
cmps
in
adc
xchg
ss
jmp
mov
mov
xchg
inc
push
in
ss
in
xchg
das
jae
add
or
sahf
pop
sub
and
jae
fstp
push
xchg
pop
je
cmp
push
ins
push
xchg
cdq
jle
jle
mov
popf
mov
adc
aaa
mov
adc
push
push
scas
or
(bad)
lods
jae
or
xchg
movs
mov
lea
xchg
mov
inc
pop
js
pop
lahf
lods
sub
ss
test
xchg
je
loopne
pushf
push
cmp
fsubr
pop
jo
call
inc
mov
mov
mov
inc
dec
clc
jecxz
sti
jmp
dec
xchg
xchg
into
jmp
lods
pop
bound
adc
xor
outs
test
clc
fadd
in
movs
adc
and
add
(bad)
mov
jmp
sub
ss
mov
mul
mov
movs
lods
push
lock
imul
push
lock
sar
inc
pop
or
add
sbb
imul
lahf
jno
fcomp
fld
shr
pop
popa
push
ret
sub
loop
std
in
stc
into
movaps
aaa
add
rol
cld
dec
and
ret
(bad)
pop
pop
je
cdq
leave
mov
lds
mov
cmp
out
inc
imul
mov
lock
(bad)
in
(bad)
cmc
js
icebp
jmp
jmp
or
push
jns
xlat
adc
rol
loope
mov
lea
int
mov
inc
sbb
jmp
movs
xchg
dec
iret
imul
xchg
or
pop
cmp
int
outs
xor
push
stc
pop
aas
pop
ja
xor
cmps
ins
and
in
sbb
sbb
mov
leave
push
fbld
pop
sahf
xchg
push
mov
push
ins
pushf
xchg
inc
inc
mov
and
push
xchg
and
xor
adc
xchg
ja
fmulp
(bad)
mov
je
imul
dec
inc
jae
mov
push
not
xor
inc
mov
sbb
aaa
inc
and
loope
sub
mov
out
mov
retf
cmps
pop
xchg
mov
or
fadd
repz
xor
jb
sub
fisubr
push
test
sti
arpl
mov
adc
cmp
dec
shr
lods
mov
and
in
cmp
and
repz
shl
dec
outs
jae
dec
fs
mov
dec
outs
popa
inc
or
mov
push
test
jl
adc
sub
imul
push
ins
loop
inc
stc
sub
fisubr
stc
cmc
xor
fdiv
sbb
dec
cmp
enter
out
or
fs
mov
inc
and
inc
(bad)
icebp
ins
mov
je
std
xlat
fsubr
and
push
fcmovb
fisubr
loop
int
call
(bad)
xchg
xor
pop
dec
mov
cmp
xchg
dec
fwait
gs
push
imul
pop
xor
add
shl
clc
or
stc
lock
in
mov
ret
imul
ret
and
iret
xchg
mov
jge
dec
jne
aam
lods
or
and
jbe
inc
(bad)
repz
or
mov
add
sbb
xchg
loopne
sbb
cmp
sub
out
addr16
scas
pop
or
ins
add
dec
jmp
mov
popa
cdq
dec
pop
pop
(bad)
in
or
push
adc
inc
fwait
xor
pop
push
push
cmp
mov
les
xchg
mov
cwde
and
cmp
xchg
call
(bad)
jno
loop
(bad)
jnp
bound
push
dec
cmp
sub
push
jne
cmp
test
mov
pop
add
in
(bad)
jae
outs
adc
adc
push
and
std
add
retf
stos
jmp
pop
pop
in
cdq
mov
jae
leave
ja
fbld
sub
xchg
push
jge
mov
or
cmp
xchg
jp
mov
ss
add
mov
int3
pushf
lea
or
std
mov
cmp
addr16
icebp
add
cmp
push
repnz
pop
cmp
cwde
ins
dec
rcl
out
or
sub
pop
mov
icebp
(bad)
scas
fidiv
sbb
mov
addr16
fldcw
mov
not
sbb
sub
mov
mov
dec
aaa
add
out
cmp
xor
mov
(bad)
jno
lock
rdmsr
xchg
add
mov
aaa
xchg
movs
push
mov
adc
inc
fst
(bad)
jle
out
imul
addr16
adc
push
in
ret
add
dec
sub
cdq
or
dec
imul
repz
jmp
or
sub
adc
push
dec
loop
jns
or
outs
clc
fisttp
xlat
xor
xchg
ds
sub
pop
inc
mov
cmp
pop
and
fwait
scas
jnp
in
sbb
outs
dec
sub
test
call
inc
pushf
std
or
and
sub
cs
dec
inc
push
mov
imul
lock
sbb
jnp
test
jns
movs
xchg
aas
test
jecxz
or
sar
sbb
jns
mov
stc
mov
ret
lods
fsub
or
jp
dec
mov
loope
adc
dec
sub
or
xchg
mov
jl
pop
mov
jecxz
pop
sti
lahf
mov
jnp
jne
push
repz
test
add
fcmovnu
out
inc
adc
xchg
add
into
mov
(bad)
iret
(bad)
loope
int3
push
adc
sub
sub
push
adc
pop
xchg
retf
mov
test
adc
push
adc
and
lock
ss
ror
mov
jmp
add
mov
cmp
pop
mov
and
push
fwait
push
out
and
lods
pop
ret
cmp
inc
cmp
inc
mov
loop
sbb
outs
mov
fld
dec
cmp
fild
add
cmp
aas
fs
sbb
outs
dec
call
les
dec
pop
sbb
push
call
inc
out
nop
les
mov
xor
fwait
jne
push
addr16
mov
imul
pop
dec
mov
loopne
mul
jg
jae
xor
call
xchg
sub
fucomi
(bad)
rol
and
cmp
ret
jle
test
xchg
xchg
mov
push
loop
int
xor
int3
inc
stos
gs
daa
xor
sub
fadd
das
sbb
gs
mov
adc
call
add
jns
(bad)
cli
xchg
sub
mov
cld
ins
sub
or
pop
scas
add
movs
inc
addr16
call
lea
retf
pop
bound
pop
or
xor
mov
add
push
call
call
mov
jns
xchg
imul
inc
cmp
cmps
out
add
pop
call
out
mov
retf
mov
mov
arpl
lahf
mov
jmp
outs
mov
(bad)
sbb
sbb
gs
xchg
pop
mov
pop
dec
jge
sbb
inc
dec
add
xor
sti
sbb
jne
mov
call
pop
(bad)
cli
or
xchg
sbb
xchg
mov
cmps
jnp
rcr
pop
inc
test
sub
mov
jp
loop
enter
mov
adc
shl
sar
adc
out
push
retf
cli
into
cmps
rol
inc
xchg
in
jp
test
hlt
idiv
test
gs
pop
mov
xchg
mov
std
mov
cmp
cmp
test
into
test
in
fldenv
fsub
adc
sbb
pop
movs
or
push
shr
test
and
(bad)
fcomp
adc
mov
xlat
mov
dec
add
leave
cmp
pop
jne
cmps
add
mov
call
and
out
mov
dec
fld
(bad)
sbb
mov
mov
xchg
adc
iret
jo
mov
mov
fld
lods
mov
sbb
(bad)
dec
pop
cld
and
adc
(bad)
mov
int3
add
shr
test
add
(bad)
xchg
inc
jne
jo
enter
pop
stos
mov
fs
test
pop
xor
add
fwait
mov
mov
mov
xchg
addr16
lock
push
icebp
popf
ds
shl
out
cmp
enter
xchg
outs
frstor
cld
jp
jo
jae
(bad)
scas
mov
mov
xchg
(bad)
push
mov
fcomip
mov
cmp
cli
push
cmp
(bad)
pop
cmp
sub
pop
icebp
cli
add
jmp
cmps
pop
cmp
shl
enter
jmp
mov
in
jae
mov
jecxz
xchg
sub
dec
xchg
(bad)
jbe
and
(bad)
jg
dec
xor
push
in
mov
pop
sub
or
repnz
inc
loop
cmp
scas
jle
sbb
clc
pop
pop
adc
pop
sbb
push
xlat
stos
(bad)
xacquire
mov
sub
hlt
retf
dec
aam
cmps
inc
sbb
mov
jnp
in
add
pushf
(bad)
cmp
stos
and
out
push
retf
sbb
inc
mov
and
jns
mov
lods
or
mov
je
mul
or
js
repz
lea
lock
adc
or
jge
xchg
lods
push
fcom
pop
popf
mov
clc
xor
xchg
fst
and
es
sub
sbb
jmp
xchg
movs
dec
inc
adc
ss
jmp
xor
add
add
rcr
inc
std
or
pusha
hlt
mov
jge
repz
sub
mov
mov
dec
pop
sbb
or
pop
xor
mov
jmp
(bad)
mov
mov
pop
jp
adc
jp
call
fidivr
lods
dec
mov
imul
jae
dec
aam
clc
mov
retf
dec
jnp
adc
movs
jle
int3
mov
xor
or
and
xor
and
push
jnp
inc
dec
popf
jmp
neg
or
ret
jo
cld
and
cmps
outs
hlt
dec
mov
nop
sub
hlt
pop
ins
push
inc
(bad)
gs
and
xchg
cld
push
jmp
pop
jbe
push
inc
cdq
or
inc
sub
js
jl
cmp
cld
inc
je
les
sbb
or
and
inc
ins
and
arpl
(bad)
retf
push
jmp
in
mov
cld
retf
inc
retf
jmp
sub
xchg
cmc
aaa
(bad)
popa
fld
setbe
push
test
mov
cmc
mul
fild
jl
retf
clc
pop
xchg
movs
add
repnz
shl
sbb
idiv
fcom
mov
ret
nop
mov
gs
cmp
js
pop
in
push
xchg
push
loop
mov
dec
daa
push
xor
add
mov
or
stos
sbb
or
retf
push
loope
mov
sub
push
jbe
stc
dec
std
imul
add
pop
mov
rep
mov
lea
pop
mov
sbb
cli
cmps
scas
mov
and
dec
ror
fwait
xor
ins
pop
aaa
xchg
sub
jp
mov
jp
add
mov
fdivp
les
inc
ja
xchg
mov
dec
push
int3
lods
iret
pcmpgtb
add
imul
mov
(bad)
cmps
fist
scas
scas
xchg
(bad)
sbb
in
xchg
adc
or
sub
add
outs
xor
(bad)
mov
sub
push
jbe
movs
xor
xor
gs
lods
in
mov
cmp
xchg
or
das
xchg
jl
sti
push
push
imul
xor
movs
xchg
in
jmp
sub
addr16
aaa
mov
in
in
mov
dec
jg
fwait
mov
hlt
or
movs
push
jmp
sub
clc
sahf
cmp
(bad)
sub
scas
arpl
iret
xchg
inc
inc
push
js
setae
jl
xor
fs
ror
and
sbb
fisttp
pop
adc
sar
fadd
jmp
push
js
iret
int
js
mov
mov
dec
leave
jb
es
lfs
in
imul
div
std
movs
pusha
loope
sub
push
jp
retf
or
gs
jae
dec
dec
mov
mov
sbb
lock
add
mov
inc
push
xor
fimul
xchg
or
rcr
jg
mov
pop
repnz
and
and
je
hlt
outs
push
mov
pop
addr16
push
push
xor
mov
add
scas
mov
xor
add
dec
dec
push
stc
push
rol
jnp
call
inc
fsub
icebp
call
nop
pop
sbb
sbb
sub
scas
push
xchg
punpcklwd
xchg
sbb
push
test
sub
(bad)
jne
push
xchg
ja
ret
jns
xlat
stos
jmp
int
cmp
cwde
in
test
mov
les
cmc
ja
lods
rol
sub
pop
shl
aas
dec
aad
xor
jns
fs
jo
or
(bad)
adc
jae
mov
mov
jae
icebp
cwde
xor
int
mov
in
aad
mov
mov
jne
add
std
out
cmps
sub
cmps
mov
repnz
cmp
push
sub
mov
sar
test
lock
jmp
mov
ror
pop
or
fidiv
shl
inc
mov
lods
pop
xor
shl
das
retf
add
fdivr
ficom
outs
lea
out
cmp
inc
inc
sti
mov
push
add
sub
(bad)
enter
pop
inc
cli
add
aam
mov
pop
jp
dec
(bad)
iret
fisttp
mov
movs
cmc
inc
repz
mov
mov
dec
ror
mov
pop
cmc
mov
imul
stos
mov
in
aaa
and
sbb
mov
and
shr
mov
xchg
out
in
mov
mov
adc
cmp
jne
cli
adc
imul
inc
sbb
out
cmc
out
sti
push
(bad)
cli
adc
repnz
sahf
loopne
scas
in
or
out
sub
iret
push
cmps
adc
adc
cs
fisttp
pop
fst
push
lods
and
pop
shl
(bad)
mov
cmp
add
inc
bound
test
lock
lods
add
sbb
push
jae
repnz
jno
mov
out
sub
mov
mov
adc
adc
out
mov
jne
add
leave
adc
dec
call
pop
push
xor
(bad)
into
dec
mov
fcomp
mov
cdq
jb
cld
push
cmp
and
push
and
arpl
or
icebp
push
sub
in
xchg
push
outs
ret
fisubr
add
xor
aaa
(bad)
add
pop
add
inc
leave
mov
jl
inc
jne
stc
xor
jbe
gs
adc
xor
pop
ins
sub
push
xchg
in
aad
aad
ins
or
push
mov
stos
pop
mov
and
(bad)
in
adc
test
push
or
das
mov
jbe
mov
sub
pop
das
mov
mov
das
in
sbb
loope
pop
pusha
or
test
pop
jecxz
jmp
pop
xchg
add
xchg
add
push
dec
lock
cld
ror
push
inc
call
bound
popa
fmul
ja
push
mov
imul
enter
std
mov
push
cmc
les
inc
rcl
lds
cmp
sti
and
jp
dec
rcr
push
movs
loopne
enter
call
ds
es
push
pop
rcr
sub
out
in
repz
jl
jns
inc
movs
sahf
mov
adc
jns
dec
sbb
sub
iret
repnz
push
sub
shl
nop
aad
push
je
call
inc
fstp
mov
in
xchg
and
(bad)
enter
in
mov
jl
push
pop
adc
addr16
or
and
fmul
into
push
enter
or
sbb
sti
mov
push
pop
adc
or
(bad)
jmp
(bad)
(bad)
or
mov
rcl
push
or
fidiv
inc
and
lock
mov
xor
sbb
arpl
inc
and
adc
pop
pop
fisubr
out
lods
mov
mul
push
cmp
shl
and
or
dec
dec
aad
inc
fcom
data16
sti
outs
frstor
sbb
push
imul
sub
sub
in
ficom
imul
mov
add
cmp
shl
cmp
xor
les
inc
mov
xor
(bad)
scas
shl
(bad)
push
call
nop
add
sub
movs
and
pushf
adc
or
lahf
test
adc
shl
pop
xchg
and
mov
fild
lds
das
pop
movs
(bad)
addr16
movs
inc
mov
pop
jecxz
pop
inc
fnstsw
scas
jle
nop
xor
not
sbb
outs
daa
cmp
jno
xchg
and
or
pusha
mov
jae
call
pop
sub
add
xchg
nop
sub
xchg
pop
add
cmp
ja
dec
jmp
xchg
mov
xchg
adc
rcl
inc
imul
ficom
inc
mov
stc
cs
dec
mov
sbb
outs
aas
(bad)
es
je
xchg
stos
xor
xchg
push
or
sub
aaa
(bad)
outs
mov
aaa
add
int
(bad)
and
pop
cwde
xchg
inc
pop
add
or
call
cmps
aaa
mov
xchg
outs
call
fdiv
jmp
push
push
add
xor
xchg
or
pop
lea
loopne
jo
inc
xor
cmp
and
xchg
inc
add
lock
cwde
mov
loop
sti
imul
sub
test
rol
xor
retf
in
inc
pushf
mov
cli
push
jecxz
sbb
jle
shl
inc
or
mov
add
push
int
push
out
pop
xor
retf
add
gs
add
add
lea
mov
cwde
inc
aam
jl
mov
cdq
loop
(bad)
stc
dec
into
push
loop
in
mov
xchg
sub
sub
jle
push
loope
mov
sbb
xor
jnp
add
stc
out
jle
retf
xchg
mov
and
repnz
cmps
sbb
rol
es
stc
mov
shr
sub
pop
cmp
movs
jecxz
out
dec
jae
imul
mov
mov
ins
ret
inc
add
adc
push
dec
aam
cmc
mov
icebp
xor
dec
test
in
loop
pop
cmp
out
mov
xchg
fisttp
sub
out
js
pop
aad
gs
popf
enter
sub
test
(bad)
mov
jo
cmp
sar
hlt
inc
pop
mov
das
cmp
shl
add
push
fsub
cdq
out
adc
mov
add
dec
aas
mov
jae
loope
call
out
mov
push
es
mov
mov
popa
cs
(bad)
adc
fsqrt
jg
push
jmp
mov
lods
fs
mov
inc
lock
jmp
test
mov
dec
stos
inc
xlat
or
mov
xchg
(bad)
loop
jmp
inc
pop
sub
sub
mov
(bad)
loop
pusha
and
dec
push
fstp
test
or
xor
lock
dec
mov
fild
scas
mov
mov
out
push
ds
repz
test
ror
addr16
lea
test
or
stos
xchg
cmp
test
or
sbb
lahf
popf
das
out
mov
outs
ss
icebp
sub
sbb
addr16
loopne
call
sub
jnp
cs
jmp
js
out
out
(bad)
fldenv
or
and
push
dec
add
scas
or
int
enter
fneni(8087
cwde
aas
je
xchg
nop
jmp
xchg
fnsave
rcl
mov
push
ret
ins
lods
adc
dec
imul
jg
jp
outs
scas
loop
mov
cmp
jb
test
inc
sbb
adc
(bad)
stc
lock
fiadd
sub
mov
(bad)
pop
(bad)
and
mov
test
out
popf
xchg
cdq
dec
enter
xor
xor
aam
mov
fiadd
push
int3
rcr
popa
xor
dec
and
pop
xchg
jmp
popa
or
repnz
call
and
ret
mov
jno
inc
aad
add
in
xlat
popf
popa
sbb
jl
leave
add
inc
jmp
add
ss
fcomp
xor
mov
add
sub
pop
adc
inc
gs
jecxz
cmp
(bad)
adc
sub
(bad)
icebp
mov
mov
jae
arpl
or
dec
xchg
fnstsw
ins
adc
push
jne
sbb
ins
stc
adc
cmp
or
and
pop
mov
mov
or
inc
dec
or
sbb
xor
jmp
nop
mov
add
loop
mov
pushf
mov
dec
lods
push
js
cmp
imul
mov
ja
dec
mov
jl
mov
add
dec
pop
mov
sub
not
jg
movs
jp
mov
dec
and
mov
cs
jno
mov
stc
scas
cmp
cmp
clc
jnp
stos
push
or
xchg
jmp
js
xchg
or
adc
jp
xor
mov
ja
test
xor
fld
cmp
cmp
scas
sub
xor
icebp
imul
mov
rcr
jecxz
dec
mov
cli
fwait
adc
scas
pop
lock
or
or
pop
xchg
lsl
xchg
fisttp
lahf
sub
and
aas
cmp
cmps
mov
cmc
sahf
sub
enter
daa
cdq
or
cmovns
xchg
add
jp
xchg
or
and
adc
xor
sbb
dec
xchg
sbb
jae
jle
xchg
pop
in
push
jnp
xor
outs
ds
xor
and
xor
(bad)
lods
sub
popf
pop
mov
lock
retf
push
imul
sub
inc
xchg
push
mov
xor
fcom
cdq
das
mov
pop
mov
xor
inc
andnps
dec
ret
sub
ja
add
pop
and
lahf
aas
arpl
aas
or
cmp
pop
cld
push
shr
pop
out
jae
les
jb
pop
mov
imul
xor
cli
shl
jb
inc
mov
push
aam
or
mov
(bad)
not
push
pop
jnp
mov
lahf
jp
xchg
mov
out
push
popa
repnz
jmp
inc
xorps
sbb
mov
xchg
int3
outs
leave
jns
dec
test
stc
stos
in
xchg
ss
aam
mov
push
ins
pop
retf
aas
mov
jbe
aas
in
push
pop
test
cs
pop
dec
jbe
or
fwait
jp
fst
xchg
aam
mov
in
jae
je
cld
mov
ins
imul
sbb
push
shl
dec
jb
or
fwait
pop
ret
cwde
adc
xor
ja
loopne
xlat
repz
mov
or
cwde
push
call
or
lock
cmp
in
ror
sub
aad
in
lock
iret
or
cmc
repz
(bad)
iret
retf
int3
fsubr
sbb
mov
lea
je
aam
call
jg
jl
mov
mov
loope
and
mov
popf
jp
adc
lods
out
jb
loope
xor
js
sbb
aaa
(bad)
jnp
js
sbb
inc
mov
xor
mov
and
retf
pop
xor
inc
mov
stos
rcl
mov
fstp
push
dec
stos
xor
sbb
retf
cmp
sti
out
xchg
movs
mov
inc
hlt
out
dec
iret
add
push
mov
jns
adc
xor
mov
dec
(bad)
xchg
hlt
pop
cmp
sbb
mov
into
xchg
mov
pop
pop
call
test
neg
hlt
pop
sbb
(bad)
imul
bound
pop
stos
js
cmp
dec
fs
xor
pop
push
jmp
mov
outs
xchg
in
adc
sub
aad
sub
gs
push
sbb
gs
sqrtps
loopne
fs
popa
std
and
xlat
adc
push
inc
(bad)
dec
test
dec
or
dec
jae
jmp
xchg
jbe
and
push
sbb
jns
rcl
(bad)
fisttp
fistp
jne
loope
aad
sub
out
push
jb
jnp
sub
cmp
jbe
lea
movs
cwde
pop
loope
sub
sbb
and
mov
not
sbb
mov
sbb
dec
stos
cmp
mov
cs
repz
mov
in
and
rcr
rcr
nop
sti
out
cmp
cmps
xchg
mov
dec
jnp
ins
les
stos
mov
pop
icebp
jmp
mov
(bad)
xor
sti
and
adc
call
fidivr
inc
pop
dec
mov
retf
push
test
gs
out
fimul
imul
into
bnd
ficomp
jle
imul
and
dec
test
rcr
dec
into
out
jnp
les
push
jb
xchg
ret
dec
frstor
xchg
pop
or
pop
add
scas
fist
or
mov
cmp
jg
sbb
jmp
mov
retf
jmp
enter
js
inc
pop
or
pushf
mov
xor
mov
mov
mov
ja
(bad)
push
mov
mov
or
int3
pop
push
retf
jns
xchg
adc
frndint
cmp
(bad)
retf
xor
sahf
and
jge
mov
jns
mov
sbb
pop
jbe
push
inc
mov
leave
rcl
and
pusha
outs
push
and
xor
xlat
or
mov
mov
arpl
push
jae
push
in
xor
cdq
cmp
mov
push
iret
mov
jmp
jl
xchg
pop
retf
sar
pop
jns
cmp
cmp
cmp
push
push
mov
mov
and
pop
mov
push
and
cs
push
sti
enter
ret
mov
mov
(bad)
push
push
xor
dec
cwde
sub
jno
mov
outs
aad
pop
mov
add
pop
xor
inc
mov
lahf
adc
scas
xor
addr16
test
addr16
icebp
pop
pop
or
sti
int3
lods
mov
sbb
jmp
int3
stos
jmp
jecxz
mov
push
fcmove
addr16
pushf
push
lods
sub
pop
fisubr
fcom
(bad)
adc
movs
adc
add
std
(bad)
imul
nop
js
mov
push
int
xchg
sub
cwde
retf
or
pop
pause
stos
test
push
xor
sahf
cs
cmc
and
xor
retf
out
cmp
aas
iret
push
(bad)
loope
xor
xor
dec
out
addr16
sub
mov
adc
mov
lds
xchg
dec
push
xlat
enter
jbe
pop
mov
iret
pop
scas
pop
js
and
cs
(bad)
scas
and
imul
xor
mov
inc
aaa
mov
in
imul
pop
add
jge
push
shl
movs
pop
clc
mov
push
push
xchg
dec
fsubr
jno
out
cmp
or
ret
cmps
inc
jnp
pop
xchg
icebp
fist
inc
mov
jge
adc
add
fild
loopne
or
in
imul
push
inc
add
or
jl
das
pop
add
dec
and
ret
lods
sbb
jb
add
dec
adc
cwde
xchg
mov
xchg
jle
repnz
stos
push
add
add
sbb
rcl
and
xchg
push
jmp
mov
mov
cmp
xor
int3
shr
dec
add
mov
lea
push
jno
mov
hlt
aad
mov
in
sar
scas
cli
cmps
xchg
test
sub
dec
test
push
xchg
sub
sub
push
mov
add
in
aas
dec
stos
mul
mov
out
mov
pop
adc
push
out
pop
push
mov
xchg
loope
ret
dec
mov
leave
sbb
push
cld
sti
fidivr
jae
jl
and
lds
shl
cmps
outs
xchg
pushf
cdq
sub
mov
sub
das
je
test
sub
sub
(bad)
inc
dec
and
pop
lea
mov
sbb
adc
cmc
or
mov
inc
or
into
not
or
cmp
cmps
addr16
push
das
es
pop
call
scas
cdq
(bad)
or
inc
out
fidivr
mov
push
neg
aam
pop
call
mov
ja
push
xchg
cmp
(bad)
push
movs
ret
dec
aaa
hlt
std
mov
stc
mov
(bad)
das
mov
(bad)
mov
ret
inc
arpl
fimul
je
test
in
pushf
lods
mov
dec
inc
in
add
out
adc
out
ror
retf
inc
jg
cmp
fnstsw
les
jg
push
test
dec
cmp
les
xor
js
arpl
and
(bad)
dec
shl
lods
xor
cmp
ficomp
xchg
xor
push
dec
xchg
cwde
add
xchg
ins
mov
sbb
loop
or
int
sub
sti
sub
inc
fldcw
scas
scas
mov
int3
std
push
jle
arpl
jae
push
es
adc
dec
je
pop
cs
lds
(bad)
cmps
retf
test
imul
xor
or
jnp
push
xchg
in
sbb
mov
push
dec
xor
mov
enter
sub
daa
xor
test
dec
xor
imul
xchg
rcr
jb
or
mov
inc
aam
push
in
sub
sbb
add
mov
cmp
leave
fucomip
push
test
sub
retf
add
xchg
fld
retf
adc
dec
icebp
cmp
sti
or
ss
fld
sti
pop
fxch
mov
inc
lock
retf
fcomp
sahf
xor
mov
and
call
mov
pop
inc
fld
mov
sub
movs
out
dec
inc
mov
mov
rcr
and
movs
mov
int
in
push
daa
mov
rcr
pushf
sar
pop
adc
div
push
cmovo
in
pop
xor
jmp
lds
jmp
mov
std
ins
mov
not
add
in
and
pop
bound
xchg
xor
iret
fbstp
jmp
sbb
mov
fbld
cmp
push
lods
xchg
sub
xor
xchg
std
fwait
repnz
out
cmps
loop
aaa
outs
cmp
mov
cmp
or
pusha
push
mov
adc
jl
call
outs
imul
dec
jnp
mov
inc
inc
fnsave
std
shl
in
fcmovnb
or
jp
jge
dec
rcr
xor
sub
pop
xchg
lods
sub
jge
mov
and
inc
dec
or
xchg
sub
jb
adc
ins
adc
mov
bound
fnstenv
mov
cwde
out
outs
rol
and
das
repnz
mov
sbb
push
test
je
div
sub
xor
retf
jl
aad
and
stos
ins
mov
sbb
dec
or
(bad)
je
xchg
xor
jmp
pop
sar
scas
xor
stc
out
js
(bad)
jecxz
mov
cmp
xchg
nop
mov
mov
cli
popa
push
shl
out
jecxz
cmc
test
dec
icebp
jb
fs
or
cmp
inc
aam
stc
mov
push
popf
test
outs
pop
daa
inc
add
adc
or
push
pop
ror
aam
jge
repz
popa
cmp
mov
push
out
stos
ins
and
outs
mov
add
fidivr
scas
mov
dec
push
inc
inc
test
jb
fst
jns
jmp
and
retf
mov
imul
push
sahf
pusha
adc
jae
mov
mov
mov
fwait
or
cli
icebp
and
scas
jmp
int3
mov
push
jmp
enter
ja
into
inc
retf
sub
fs
push
pop
push
loop
aad
cmp
mov
mov
aad
ins
adc
cld
add
rol
out
cmp
aas
mov
sbb
mov
pop
mov
lea
stc
sti
jbe
cmp
loope
fsubp
clc
int3
mov
pop
mov
jbe
jnp
and
inc
cmps
xor
leave
call
aad
popa
stos
add
idiv
std
sub
pop
cmps
enter
xor
mov
mov
neg
push
or
mov
jo
push
mov
and
cmp
add
cmp
mov
and
rol
(bad)
ds
ficomp
gs
mov
pop
retf
xchg
push
push
inc
adc
jmp
mov
imul
ja
pop
call
add
fld
retf
scas
inc
pop
ds
xchg
test
mov
mov
int3
jne
mov
push
mov
je
inc
pop
shl
nop
pop
sbb
adc
mov
jnp
scas
inc
enter
rcl
loopne
jmp
inc
or
xchg
js
cmp
in
mov
imul
test
test
leavew
jbe
or
push
idiv
js
jo
sar
cmp
movs
pushf
inc
push
xor
test
push
addr16
jle
mov
dec
push
mov
out
mov
shl
and
fsubr
shr
into
jb
mov
pop
mov
or
push
and
cmps
pop
and
sar
mov
mov
pop
xchg
rcl
shl
pop
outs
adc
cmp
out
call
add
ins
xchg
int3
jmp
mov
dec
fsub
mov
fst
arpl
sbb
sti
pop
cmc
popf
div
(bad)
xchg
sahf
out
cmps
ret
cld
jnp
call
sub
xor
ffreep
add
jmp
and
push
cmps
or
sub
add
mov
out
jo
pop
ret
fwait
pushf
andps
aam
add
and
xchg
push
pop
shl
inc
mov
repz
pop
ror
adc
add
sub
or
xor
out
das
inc
xor
cdq
dec
(bad)
(bad)
sub
loop
adc
xlat
scas
addr16
fwait
push
dec
push
or
or
ficom
data16
test
or
cld
ret
or
pop
sbb
cmp
push
inc
xchg
test
ret
and
dec
aaa
xchg
mov
pop
test
in
jg
adc
int3
and
cmps
xor
and
pop
pop
test
pop
xor
adc
divps
mov
(bad)
xor
dec
or
fisttp
imul
rol
cmp
sub
dec
cmps
cs
dec
aas
mov
icebp
inc
cmp
shr
xor
lahf
push
pusha
mov
cli
in
xchg
int3
jno
in
xor
(bad)
int3
push
out
outs
sbb
add
mov
pusha
pop
push
es
addr16
ret
repz
inc
push
jno
push
adc
repz
add
xor
add
adc
dec
test
out
test
xchg
sbb
in
aam
enter
dec
fwait
jo
icebp
jle
js
mov
mov
or
mov
mov
std
or
mov
out
stos
jbe
add
mov
cmps
adc
push
xchg
hlt
cli
push
test
repz
bound
je
xor
(bad)
adc
push
ret
xor
fst
adc
ret
ins
mov
nop
mov
ror
cmp
stos
fidivr
inc
sbb
xchg
inc
pop
mov
sbb
mov
or
jmp
iret
int
pusha
mov
nop
popf
cmp
or
or
mov
inc
mov
sbb
jne
pop
stc
mov
imul
jl
adc
cmps
or
xlat
adc
mov
mov
arpl
das
xor
mov
es
mov
jmp
pop
xchg
xor
jmp
cs
ja
ficom
int3
fst
and
(bad)
pushf
inc
dec
ret
test
push
adc
daa
popa
xchg
in
popa
push
jbe
pushf
daa
mov
pushf
mov
adc
push
stos
pop
jne
adc
mov
nop
xchg
inc
jp
sbb
ret
pop
cwde
push
leave
into
ror
fistp
sub
mov
lods
inc
test
cld
sbb
cmp
dec
in
or
loopne
jle
pop
cmp
pop
loopne
jp
adc
in
cmp
test
mov
daa
int3
mov
(bad)
jg
push
mul
cmps
bound
sahf
(bad)
mov
adc
sub
jbe
add
nop
ficomp
jne
dec
rol
add
jae
lea
jg
add
add
mov
data16
ret
aas
mov
dec
rcl
(bad)
adc
cmp
sub
dec
loop
(bad)
mov
lahf
jne
stos
mov
jb
call
rcl
mov
test
mov
movs
pop
aam
jbe
mov
jno
dec
call
shl
and
mov
fmul
dec
jae
mov
adc
mov
jmp
or
or
push
dec
not
pop
cwde
in
push
sbb
fcom
add
cmp
push
aas
mov
das
sbb
shr
inc
mov
inc
test
adc
out
inc
(bad)
fbstp
call
movs
add
xlat
imul
push
jmp
jl
mov
dec
call
xchg
imul
xor
fnsave
repnz
mov
leave
sbb
mov
stos
stc
out
xchg
jno
push
enter
lds
test
test
pop
adc
mov
jns
(bad)
aad
dec
mov
jns
ror
adc
adc
fmul
mov
cmp
mov
mov
ficom
mov
fsubr
push
fisub
ins
xor
mov
sub
sub
inc
ret
loop
add
retf
mov
sbb
cmp
cmp
xor
int3
inc
or
sbb
shl
outs
cdq
fdiv
xchg
not
sahf
add
in
inc
mov
mov
mov
lahf
xchg
pop
mov
fs
popa
dec
movs
sti
cmp
inc
les
push
(bad)
push
and
std
xor
out
enter
leave
xor
add
xchg
shl
ins
xor
imul
inc
dec
mov
sbb
mov
push
add
ins
neg
rcr
xchg
jmp
mov
jns
bound
or
add
mov
outs
xchg
push
push
ins
xor
xchg
fwait
sub
adc
mov
mov
loopne
xchg
or
fdiv
dec
xchg
ror
and
mov
fmul
out
sbb
inc
popa
mov
xor
jmp
dec
xor
add
retf
dec
xor
(bad)
cmp
cwde
out
push
stos
out
out
lea
push
retf
loope
imul
sbb
cmc
test
adc
sub
mov
in
imul
mov
pop
dec
push
mov
or
push
xor
(bad)
xor
dec
sub
inc
daa
popf
cli
iret
repz
ss
pop
inc
cmp
pushf
inc
and
cwde
sub
jnp
or
pusha
mov
imul
addr16
mov
sbb
cs
xchg
add
iret
ins
or
sbb
jo
mov
pusha
dec
or
inc
loopne
cmp
push
xchg
jge
inc
ss
test
sbb
or
mov
mov
lds
daa
inc
lock
int
int
scas
inc
jns
call
or
xlat
out
jecxz
mov
xchg
popa
adc
pop
outs
icebp
pop
in
and
sub
fdiv
push
mov
je
xchg
rcr
push
cld
push
add
cmp
mov
mov
sbb
std
mov
addr16
sub
sahf
sub
or
scas
cwde
stc
inc
fsubr
jp
and
lds
ss
sti
push
gs
and
mov
xchg
shl
jns
retf
jp
(bad)
push
data16
xor
sbb
out
xor
call
mov
mov
jae
and
lea
xchg
inc
xor
fwait
cs
imul
das
es
loope
sub
cmp
neg
mov
push
cmp
pop
enter
xor
mov
pop
shr
sti
jno
stc
push
jp
or
ret
ins
das
cmps
adc
dec
dec
mov
out
inc
cmp
dec
and
mov
test
sbb
push
dec
push
scas
loopne
movs
sbb
add
inc
dec
jno
or
pushf
mov
aam
loopne
out
loope
adc
or
inc
sub
push
leave
(bad)
adc
add
xchg
fadd
sub
mov
stc
lods
xchg
sub
bound
ds
lods
test
aas
lods
popf
into
movs
pop
lea
adc
stos
sbb
sbb
jae
inc
push
stos
jae
(bad)
and
xor
dec
mov
call
sbb
push
scas
or
(bad)
mov
jnp
cmp
push
sbb
inc
xchg
in
loope
repz
mov
mov
ins
mov
imul
inc
rcr
lock
jo
in
xor
jg
push
and
push
cwde
sub
adc
mov
mov
mov
sti
ds
cwde
xor
mov
enter
jne
mov
jne
or
lahf
cwde
jbe
in
test
push
mov
adc
sti
imul
mov
xor
(bad)
js
push
and
mov
fbld
fisub
fld
ret
lods
pop
(bad)
lods
popf
pop
dec
out
(bad)
push
movs
repnz
popa
xor
ins
test
xor
int3
xchg
aas
cmp
sbb
sbb
jae
retf
xchg
cmp
sub
(bad)
dec
jge
jmp
sub
std
(bad)
aad
xlat
and
mov
sar
pop
rcl
mov
sub
push
(bad)
rcr
or
push
inc
sub
xchg
or
lds
jg
dec
cdq
es
pushf
mov
mov
imul
jmp
sbb
dec
inc
mov
outs
pop
dec
xchg
push
push
mov
push
mov
pop
mov
sbb
pop
arpl
stc
fsub
or
jg
sbb
pop
mov
lea
aad
aam
sub
shl
pop
cmps
iret
mov
jp
xchg
cmp
(bad)
leave
mov
(bad)
(bad)
jno
inc
adc
popf
mov
cmp
mov
cli
mov
iret
cld
adc
loope
arpl
jb
fnstenv
mov
mov
push
mov
pop
xor
(bad)
cmp
test
adc
pop
mul
in
fldcw
daa
lods
push
mov
inc
mov
rcl
neg
mov
pop
imul
lods
xchg
ja
adc
out
(bad)
mov
xchg
ja
sbb
xchg
dec
aad
pop
cmp
js
cmp
or
stos
mov
pop
mov
cmp
les
sub
lods
push
pop
rcr
mov
leave
fcom
arpl
xchg
dec
es
fs
pop
and
push
repnz
inc
xor
mov
add
inc
mov
mov
jae
pop
mov
in
es
fcomp
test
daa
fs
mov
mov
movs
adc
mov
gs
ds
call
mov
push
shl
icebp
xchg
push
lahf
stos
xchg
push
repnz
adc
inc
cmps
out
addr16
pop
cdq
lock
mov
loop
mov
(bad)
stc
fsubr
pop
arpl
(bad)
lea
xchg
inc
jl
cwde
aad
sbb
shl
ret
scas
and
dec
pop
pushf
cmp
and
int
push
retf
adc
(bad)
or
jbe
outs
leave
mov
fcom
adc
add
and
or
and
ins
xor
stc
in
lahf
mov
push
push
push
into
into
int
jno
stc
test
(bad)
or
xchg
test
sub
(bad)
xchg
inc
mov
fmul
jecxz
xor
je
cmp
sub
loope
xchg
movlps
or
xchg
or
ins
cdq
jno
int3
stos
and
pop
xchg
fwait
mov
cmps
cmps
mov
mov
push
pop
cld
aaa
mov
add
mov
ins
out
inc
push
fimul
pop
adc
int3
add
imul
ret
cmp
adc
fdivr
icebp
mov
mov
mov
jae
icebp
shl
cmp
xchg
push
js
cwde
jle
adc
in
sub
into
cwde
adc
pop
(bad)
sbb
inc
aam
fld
lea
or
or
xchg
test
pop
push
and
out
xor
addr16
xchg
adc
pop
aad
ins
and
pushf
lahf
and
popa
jle
or
into
and
in
stos
mov
out
cmp
fsub
pop
push
and
cmp
scas
jae
sahf
or
cmp
dec
pop
jmp
adc
jg
pop
push
mov
arpl
jmp
popf
sub
cmps
add
jns
push
adc
aas
push
arpl
loopne
and
in
mov
mov
arpl
pop
push
sbb
sbb
inc
call
or
aaa
sti
repnz
push
ss
xor
inc
(bad)
sbb
in
movs
jg
gs
push
mov
adc
add
sub
cdq
cmp
xlat
xchg
sahf
mov
lahf
ror
xor
(bad)
pop
call
daa
repz
lods
jp
lds
and
pushf
mov
mov
shl
jg
and
stc
cmps
jecxz
cmc
sub
scas
adc
repnz
cld
push
push
lds
adc
arpl
mov
test
fisub
loopne
push
mov
shl
fld
cdq
push
rol
fist
sub
fld
(bad)
jmp
stos
mov
push
add
adc
mov
dec
mov
jns
mov
jl
in
jns
push
mov
cmp
sub
aaa
and
addr16
dec
jmp
dec
dec
sbb
lods
nop
std
fstp
cmp
xchg
cmps
sub
(bad)
(bad)
in
lods
push
pop
mov
fneni(8087
mov
pop
call
xor
xchg
add
add
add
mov
adc
lods
arpl
mov
xlat
int3
pop
add
js
jo
std
sti
mov
or
xchg
jb
pop
xor
pop
or
mov
int3
sbb
xor
push
adc
mov
test
test
jnp
sbb
lahf
cmp
dec
daa
mov
iret
inc
fistp
movs
test
mov
stos
jne
outs
ss
or
ja
loope
sahf
fild
add
js
call
in
dec
push
and
pop
jge
pop
xor
hlt
adc
ficomp
jle
xchg
inc
pop
(bad)
call
clc
adc
js
icebp
(bad)
pushf
call
xor
adc
sbb
cmp
mov
or
dec
xchg
pop
scas
icebp
int
ins
lea
es
lods
call
js
xor
test
gs
push
ins
fs
aas
xchg
cld
aam
clc
xchg
xor
mov
and
int3
lds
mov
popf
cmp
dec
ja
pop
aas
cmps
mov
in
xchg
in
cmp
adc
xchg
lock
sub
pop
aam
cs
jmp
pop
mov
aas
aas
test
je
push
cmc
mov
xor
aaa
mov
mov
sbb
sub
add
fsub
cli
sub
outs
repnz
lock
mov
cmps
pop
sbb
dec
idiv
test
mov
cmps
lock
mov
adc
jbe
into
cmps
stos
mov
ins
adc
shr
inc
dec
std
pmaxub
in
xchg
mov
cmp
shl
mov
fsubrp
jecxz
inc
jge
adc
or
stos
sbb
pop
(bad)
pusha
adc
in
xor
jno
sub
adc
lahf
pusha
imul
adc
push
dec
xor
inc
cdq
call
sub
sub
std
jge
in
inc
mov
fisubr
sbb
es
in
imul
cmc
sub
fist
xchg
or
rcl
mov
dec
loopne
mov
clc
cmp
stc
and
adc
push
fcomp
in
inc
cmp
(bad)
mov
sub
jns
xchg
aam
ja
and
push
jg
dec
or
mov
jae
ficomp
icebp
out
dec
das
mov
cmc
cmps
inc
bound
in
je
or
cmp
ret
call
cmps
cmps
scas
bnd
rcr
je
iret
push
stc
data16
xor
test
ds
outs
sbb
ret
add
xor
call
pop
enter
mov
out
es
inc
rcl
pop
movs
(bad)
cmp
ins
fld
or
into
scas
jge
xchg
lock
jg
cmps
sub
jbe
push
mov
xchg
jecxz
jecxz
pop
das
fsub
mov
push
ins
dec
mov
in
or
hlt
xor
je
nop
inc
out
or
arpl
cwde
fstp
sahf
mov
mov
inc
mov
(bad)
stos
sahf
jp
dec
inc
hlt
adc
daa
mov
and
xchg
ss
jno
fwait
lea
(bad)
cmp
cmps
loop
pop
push
push
rol
loopne
sub
in
loopne
xchg
xor
adc
jae
pop
rol
or
add
sub
cmp
mov
fdivr
jae
ds
lods
and
push
sar
pop
cmp
jns
jecxz
stc
xor
lods
adc
xor
rcl
mov
retf
clc
cmc
jl
mov
inc
(bad)
ficom
int3
adc
xchg
pop
xor
jle
jp
cmc
ret
cmovo
jmp
popa
aam
add
and
lods
jnp
sahf
sbb
dec
xor
mov
fwait
aam
pop
scas
mov
cmp
ins
dec
mov
push
aaa
or
push
(bad)
fwait
mov
dec
retf
and
cdq
into
scas
push
mov
cld
mov
shl
and
call
jl
ss
add
push
adc
sub
bound
cmp
(bad)
ror
jb
push
icebp
jecxz
test
fisttp
out
xchg
es
ins
xchg
sti
pop
push
mov
aas
mov
jnp
pop
inc
in
cmp
push
pop
scas
adc
jmp
fdiv
fld
fnstenv
mov
pop
gs
jo
xlat
mov
add
fs
popf
dec
lock
xor
jl
popa
adc
pushf
and
dec
(bad)
fisttp
ret
mov
fnstsw
jb
sub
ins
xchg
adc
sub
push
add
loop
cdq
rcl
test
fidivr
or
sbb
hlt
das
cs
cmp
add
nop
xchg
jmp
add
mov
dec
mov
jns
jmp
pop
iret
inc
jbe
add
gs
mov
jge
in
clc
mov
mul
repz
jb
dec
jmp
ds
add
sub
xchg
stos
in
(bad)
fdiv
ret
(bad)
jb
mov
mov
mov
sub
retf
cmps
icebp
and
movs
inc
outs
add
sbb
fimul
in
and
in
pop
jl
sub
jbe
cmp
outs
and
call
das
pop
jb
push
jmp
dec
sub
mov
lods
or
fdivr
imul
inc
mov
xor
sbb
(bad)
lahf
jmp
popf
pop
data16
mov
sbb
cs
sub
stc
ret
mov
inc
pop
mov
xchg
jnp
outs
out
mov
imul
mov
fnstsw
in
and
jb
push
mov
sbb
stos
sbb
dec
adc
(bad)
dec
jge
sar
mov
arpl
and
pop
(bad)
cmp
movs
mov
mov
mov
popa
mov
adc
adc
(bad)
adc
push
stos
or
leave
ror
fbld
add
mov
jle
push
cmp
das
cmp
popf
mov
jle
xlat
jecxz
cmp
out
sub
stos
mov
push
and
sub
jnp
push
addr16
jp
sbb
mov
test
add
sbb
fisttp
mov
rol
ret
fmul
pop
ja
aas
mov
dec
aam
sbb
fs
push
mov
jne
test
aad
add
in
inc
add
fsub
mov
sbb
cmc
mov
in
sub
xor
xor
cmp
and
neg
repnz
ror
xchg
lahf
cmps
pop
or
mov
enter
in
push
sub
add
dec
cmc
inc
ja
adc
icebp
seto
sbb
das
and
pushf
cmp
stos
sbb
inc
inc
xchg
add
rol
pop
cli
fstp
cmc
jg
pop
pop
ins
retf
cmp
cmp
cmps
aam
rol
mov
fs
aad
cmc
ins
call
jno
jl
xor
aaa
xchg
ins
mov
dec
sbb
mov
or
jge
pop
xchg
fs
outs
sbb
and
ds
jle
sub
out
inc
(bad)
lahf
bound
enter
enter
jp
stos
scas
jge
sbb
pop
xchg
shl
outs
retf
inc
addr16
xor
pop
hlt
xor
jecxz
push
and
aam
test
xchg
cmps
out
shr
jg
test
xchg
pop
sbb
sti
xchg
retf
test
call
scas
pop
in
aas
dec
ds
jbe
into
pop
lahf
push
jge
(bad)
out
fwait
jecxz
mov
xchg
add
push
retf
scas
(bad)
cmps
pop
sbb
loop
jnp
repnz
push
push
sub
outs
imul
add
mov
add
push
xor
pop
hlt
and
scas
fdivr
fsubrp
jns
or
sbb
pop
imul
call
wrmsr
adc
adc
popf
mov
mov
mov
lods
inc
aaa
sub
adc
in
std
xchg
mov
adc
cli
pop
dec
ds
repnz
in
add
loop
pop
add
push
xchg
jg
add
mov
shr
leave
mov
in
ins
rcl
pop
or
cmps
add
popf
add
add
fwait
repz
stc
push
iret
test
xor
lock
mov
push
mov
inc
int3
fnstcw
sbb
xor
and
je
aam
hlt
mov
sub
mov
inc
push
xchg
scas
(bad)
adc
out
pop
sbb
xchg
aas
test
lods
movq
or
bound
or
xor
aas
push
add
pop
sub
mov
or
pop
xor
cmc
aaa
(bad)
fstp
mov
mov
aam
loope
aas
jb
aam
lods
ins
fdivr
sub
in
jl
sbb
div
aam
pop
pushf
mov
cmp
loopne
pop
dec
mov
xor
pop
xlat
mov
mov
sub
aaa
fadd
jg
mov
sub
retf
mov
bound
mov
les
pop
xchg
push
popa
int
addr16
sub
cdq
hlt
add
mov
fcomp
or
cmps
and
(bad)
div
jmp
(bad)
lahf
jbe
inc
xchg
mov
cs
jne
in
mov
(bad)
push
cmc
fisub
stos
aas
add
sbb
cmc
xchg
mov
push
pop
or
out
int
sub
loope
stc
daa
mov
pop
mov
and
aam
adc
outs
mov
inc
popa
jg
pushf
xchg
xchg
mov
sbb
cli
inc
aad
push
pop
adc
push
xor
ss
lock
int
jg
gs
call
xor
je
cmp
xchg
call
lods
retf
xor
popf
sbb
fwait
pop
mov
loop
or
xor
gs
mov
test
mov
jo
mov
iret
imul
lds
aad
xlat
sar
mov
xchg
jg
es
push
in
sar
adc
mov
push
sub
ror
outs
ret
inc
pushf
push
clc
ins
scas
cmp
xor
nop
aad
call
int
sub
push
mov
pop
in
lea
dec
jle
in
pop
pop
jle
inc
xchg
nop
loopne
pop
out
dec
jb
inc
pop
call
or
test
repz
mov
aam
stc
pop
dec
adc
adc
mov
inc
or
rol
adc
lahf
movs
push
sub
xchg
jp
mov
mov
sub
in
cmp
or
mov
out
inc
mov
fisttp
push
icebp
cmp
xchg
fcmovnu
inc
mov
pop
lahf
mov
sar
push
push
aaa
call
pop
mov
xor
cmps
jp
xor
leave
aaa
and
inc
adc
in
jle
dec
mov
adc
rol
mov
dec
add
icebp
call
fldcw
cdq
cmc
jl
fisubr
in
cmps
sti
cmp
icebp
mov
loopne
sub
add
jbe
jp
cwde
sahf
pusha
pop
xchg
cmp
push
cmp
test
scas
iret
stc
inc
pop
jecxz
pop
xchg
loopne
sbb
or
jno
jg
add
ficomp
push
test
push
gs
cmps
mov
ret
dec
sbb
xchg
cmps
and
mov
or
pusha
jle
inc
xor
popa
add
ins
push
and
je
or
cmps
pushf
adc
push
sbb
add
ror
nop
retf
hlt
xchg
add
outs
imul
mov
(bad)
lds
mov
push
sbb
fs
std
lahf
test
shl
ret
fxch
jo
fdiv
pop
dec
pop
aad
daa
push
adc
(bad)
pusha
test
dec
xchg
ret
or
out
or
jmp
int3
enter
movs
push
and
dec
cli
dec
leave
push
cmp
(bad)
xchg
xlat
sub
mov
outs
or
cmc
jbe
xchg
lahf
sub
hlt
stos
mov
call
push
inc
pop
add
mov
jmp
inc
mov
sub
stos
mov
ja
test
fisubr
dec
leave
pop
dec
xchg
scas
or
sub
in
push
ins
scas
(bad)
dec
loope
dec
sub
inc
jae
fisubr
data16
sbb
adc
scas
leave
xchg
or
in
push
adc
lods
loope
dec
mov
aad
xchg
cmps
mov
pop
pusha
sahf
mov
adc
push
dec
das
int
mov
loopne
mov
fbld
fsub
imul
mov
not
xchg
fsub
pop
sub
outs
push
ins
aad
jge
jecxz
pop
cli
in
dec
mov
sub
pushf
jl
dec
mov
mov
in
add
jae
or
adc
push
lods
push
mov
fs
hlt
cmp
cmp
iret
rcl
nop
imul
cmps
mov
aad
je
pop
jnp
sub
fdiv
jb
pop
outs
push
bound
sub
cmp
arpl
pop
xchg
add
out
jno
or
jae
xor
call
aam
repz
pushf
pop
scas
add
fnstenv
das
hlt
xlat
dec
cmp
and
cmps
je
sbb
sub
sar
sub
lea
mov
sbb
shr
mov
outs
and
aam
sub
out
nop
or
es
sti
rol
(bad)
popf
jo
lods
test
push
in
push
inc
mov
lods
or
inc
dec
xchg
fucomi
mov
call
mov
dec
mov
cmp
(bad)
int3
and
mov
shr
add
jp
jl
cmp
and
sbb
inc
push
adc
ja
mov
neg
jmp
das
xor
dec
shr
dec
movs
cmps
jne
lds
or
push
sbb
stos
add
dec
jne
jmp
push
xchg
aas
retf
adc
xchg
sub
ret
xor
jmp
mov
neg
stos
(bad)
mov
xchg
ins
sar
jge
(bad)
mov
and
rcl
outs
lods
outs
cmp
jge
xor
ins
fcomp
mov
arpl
add
test
ins
hlt
mov
iret
mov
or
inc
mov
fld
mov
mov
jge
sub
mov
sub
retf
xchg
sbb
pop
or
imul
fs
imul
les
jb
push
cmp
mov
and
sbb
popf
push
loopne
push
add
add
nop
mov
enter
mov
adc
ss
mov
push
cmp
test
pop
lea
push
adc
out
push
std
mov
sub
dec
jmp
add
cmp
arpl
push
std
out
mov
mov
jne
cmp
mov
pop
rol
out
adc
ror
stc
out
push
lahf
push
scas
int3
pop
fbstp
sar
mov
or
pushf
mov
clc
push
xor
mov
into
ins
and
clc
pop
fsubr
dec
xchg
add
enter
into
imul
inc
pop
adc
ficomp
loope
dec
jmp
xor
mov
xlat
ins
ins
addr16
push
ret
xor
cmc
jne
movs
fnstenv
test
cmp
fmul
test
cmps
test
mov
mov
movsx
jmp
xor
repnz
dec
xchg
les
cdq
and
add
mov
popa
xchg
mov
pop
xchg
xchg
pop
stos
mov
cmps
enter
push
push
cmp
arpl
cmp
inc
push
fwait
lock
cs
dec
mov
and
and
mov
ins
or
jle
mov
pop
cdq
aad
shl
dec
cmc
lahf
fnstsw
(bad)
fld
sbb
das
mov
mov
xchg
mov
add
pop
clc
inc
fnsave
mov
cwde
jecxz
push
lds
ins
in
and
xchg
mov
add
test
cmc
lods
int3
dec
mov
aam
mov
jl
fsub
cdq
retf
push
stos
mov
jl
xchg
out
ins
jne
rcr
cld
lods
mov
in
push
mov
inc
imul
jg
inc
jnp
retf
cs
mov
cmp
push
add
stos
cld
fist
stos
and
adc
mov
mov
push
enter
movs
(bad)
rol
adc
les
mov
jl
inc
hlt
ja
jae
nop
pop
dec
cmp
or
(bad)
mov
ins
out
mov
dec
ins
inc
(bad)
aam
je
jg
shr
fwait
push
jo
imul
cmps
outs
rcr
xor
mov
ret
cmc
jmp
stos
dec
xor
cmp
sub
jle
mov
dec
(bad)
jne
or
dec
fstp
sub
inc
movs
mov
cmc
cmp
add
xchg
sbb
and
pop
in
repz
fwait
loopne
mov
add
dec
push
xor
into
rcr
addr16
shl
xchg
dec
inc
push
sbb
fsub
add
push
push
mov
pop
mov
jmp
cmp
xchg
pushf
jge
sbb
pop
idiv
pop
(bad)
push
jmp
fdiv
push
test
call
xor
xchg
mov
dec
ret
cwde
inc
mov
mov
ins
imul
push
push
mov
push
loop
sbb
outs
cld
fwait
aas
inc
shr
(bad)
loope
pop
add
js
lods
push
mov
leave
shl
or
push
leave
stos
daa
sbb
mov
jbe
mov
cmp
adc
outs
stos
jp
in
add
ins
adc
push
pop
xchg
add
sub
pop
xchg
retf
mov
aad
xor
ror
sahf
out
mov
cs
(bad)
gs
push
sbb
mov
stos
cld
shl
add
sbb
in
pushf
cmp
mov
movs
inc
mov
(bad)
jns
mov
cmp
shl
xchg
jmp
jge
add
jecxz
mov
(bad)
ficomp
adc
or
jmp
xlat
xor
mov
jp
jge
das
add
xor
adc
sub
sar
push
jp
xchg
cmc
cmps
mov
imul
test
mov
out
cmp
push
adc
hlt
push
inc
inc
pop
pop
test
repz
dec
seta
sti
lock
loope
dec
xchg
inc
fs
push
loop
repnz
fisttp
or
arpl
imul
dec
out
cwde
mov
lahf
pop
cmc
fisttp
je
dec
xchg
pop
fcomi
mov
jae
(bad)
dec
pop
mov
sub
pop
sub
fisub
rol
sub
push
(bad)
fs
loope
inc
add
outs
pop
jle
xor
stos
dec
or
mov
add
adc
leave
aad
mov
loope
inc
popf
dec
clc
out
inc
xor
push
jp
ja
add
xchg
test
(bad)
adc
push
mov
clc
popa
pop
in
ror
adc
push
fist
mov
gs
mov
xchg
das
loope
push
shl
sar
(bad)
mov
jg
mov
dec
push
scas
das
mov
or
adc
or
je
sbb
mov
or
mov
lods
fidivr
ror
and
in
ret
sahf
adc
mov
aam
out
jmp
enter
sub
ret
mov
mov
cmps
sbb
sbb
sub
rol
sub
cdq
ret
add
inc
pusha
xor
mov
xchg
adc
je
ins
iret
stos
push
retf
btr
jl
and
loop
and
scas
and
xchg
in
pop
cmp
scas
in
mov
mov
rcr
and
movs
ret
add
loope
push
aas
push
sqrtps
inc
repnz
xlat
popf
cmc
add
mov
lods
sar
loop
cmps
mov
jp
cmp
xchg
(bad)
push
and
int
jns
and
push
ss
mov
and
or
jbe
or
push
add
jge
add
lock
cmp
xlat
not
inc
mov
pushf
rcr
or
adc
fild
sbb
stc
popa
movs
cmp
arpl
ins
scas
arpl
mov
aaa
(bad)
aam
mov
push
and
xchg
fsub
cdq
loope
xchg
xor
mov
pusha
adc
xor
or
mov
adc
cmp
fcomp
or
inc
or
cmp
sbb
rol
loopne
mov
repz
cs
pop
gs
xchg
jmp
aaa
or
je
in
call
push
shl
pop
addr16
repnz
dec
daa
push
js
push
fcomp
popf
cs
stc
and
jg
mov
sub
push
aas
out
fbstp
int3
dec
jmp
movs
lods
pop
in
adc
aas
daa
es
xchg
loop
jmp
or
leave
pop
xor
fidiv
inc
and
inc
clc
aad
sub
dec
lds
or
add
in
mov
out
pop
lahf
or
pop
jg
jecxz
pop
sar
add
ins
dec
in
sahf
push
mov
icebp
jle
or
and
jge
fcmovb
sbb
rcr
jnp
add
sub
jne
inc
dec
or
xchg
inc
pop
inc
mov
jb
and
popf
inc
mov
and
push
arpl
clc
adc
(bad)
mov
hlt
xlat
cdq
outs
loope
jne
popa
fwait
sti
inc
fcmove
push
enter
fcomi
mov
into
mov
xor
int
ret
js
mov
adc
jnp
pop
inc
inc
sbb
rol
push
enter
lds
mov
out
mov
loope
mov
mov
lock
dec
dec
push
bound
jno
stc
pop
stos
test
adc
cmps
xchg
sub
cdq
in
movs
jnp
fnsave
(bad)
push
jmp
cmc
aad
fst
push
sub
sbb
sub
pop
or
mov
jae
cwde
mov
sbb
bound
jae
in
fisttp
lahf
sar
pop
cmp
imul
pop
xchg
cli
adc
jmp
in
and
cmp
int
adc
int
pop
add
xchg
mov
sub
pusha
jmp
dec
out
cmps
mov
jno
inc
ins
fnsave
push
lods
mov
mov
outs
jno
lahf
jmp
bound
div
xchg
enter
adc
xor
or
stos
xchg
dec
(bad)
add
aaa
xchg
retf
pop
sbb
aam
mov
xor
dec
lea
sub
adc
mov
jns
inc
bound
je
and
aaa
into
pcmpeqw
xchg
clc
cdq
pop
or
shr
pop
pop
mov
into
mov
(bad)
and
jb
mov
or
sub
fadd
icebp
lock
jae
xchg
xchg
dec
jb
leave
push
push
push
out
repz
dec
jle
sub
sub
mov
mov
jp
add
mov
sbb
mov
push
xchg
pop
push
push
pusha
push
inc
sti
cmps
outs
loopne
mov
push
push
outs
inc
inc
xchg
xchg
xchg
pop
xchg
sub
xor
dec
fwait
lock
ror
add
cld
mov
and
pop
mov
push
cwde
dec
sbb
mov
test
jp
xchg
lods
call
int
jae
jp
ja
iret
(bad)
pop
fwait
push
cmp
dec
rcr
clc
mov
fisubr
inc
jmp
outs
daa
dec
dec
mov
movs
push
rcr
lods
sbb
sub
cs
sub
xchg
cwde
mov
nop
fst
in
mov
rcl
sbb
rol
pop
retf
pop
xor
test
(bad)
je
dec
mov
fcmovnbe
push
mov
shr
adc
(bad)
push
pop
adc
xor
pusha
frstor
cli
xchg
icebp
rcl
gs
and
inc
pop
add
bound
mov
aad
push
push
inc
sti
arpl
inc
clc
fnstenv
scas
xchg
mov
test
std
pusha
or
je
cmc
and
out
sub
dec
jl
pop
xor
or
daa
aas
out
fld
jmp
sub
xor
and
rol
aad
push
sbb
push
xor
xlat
mov
and
pusha
push
rcl
cmp
jmp
popf
sub
add
ins
xlat
xchg
pop
scas
in
loope
mov
test
in
mov
rcr
popf
(bad)
cmps
or
retf
in
fidiv
xchg
cmps
sbb
mov
in
movs
out
xchg
imul
mov
and
lods
fwait
enter
pop
loopne
mov
movs
xlat
mov
pop
jae
test
stc
into
ret
inc
out
and
mov
jo
cdq
dec
push
pop
(bad)
push
dec
movs
jg
sub
pandn
popf
cmp
imul
mov
and
or
xor
push
das
cli
outs
lods
scas
cmp
adc
jle
add
int3
dec
jmp
iret
xlat
out
pop
or
(bad)
cmps
loop
sub
cdq
fist
mov
or
sbb
out
sub
inc
dec
aas
mov
lods
in
jns
mov
in
xor
pop
popa
sub
nop
xor
pop
cmp
or
in
or
xchg
das
mov
sbb
scas
cmp
adc
and
sbb
pop
addr16
push
sub
icebp
jmp
sti
lds
imul
and
cmp
cmp
fwait
inc
outs
(bad)
scas
jge
stos
push
imul
pop
mov
add
sub
arpl
daa
adc
sbb
jecxz
pop
mov
xchg
or
stc
je
ficom
jmp
lods
test
cmp
dec
inc
jno
movs
ror
mov
pop
dec
aam
mov
pushf
pop
sub
or
mov
cmp
sub
mov
mov
push
xchg
popf
jmp
out
inc
inc
repnz
jns
test
mov
int3
adc
inc
mov
xor
cld
adc
sti
mul
or
and
mov
add
mov
(bad)
mov
dec
sub
retf
stc
jnp
push
stos
mov
mov
psubq
(bad)
adc
adc
and
mov
and
call
xor
stos
and
or
push
test
mov
adc
jmp
dec
ss
fisub
sbb
xchg
push
push
dec
test
sbb
push
cmps
add
pop
ja
stos
je
inc
iret
cmp
mov
pop
mov
inc
jp
sbb
retf
jmp
mov
jmp
call
popa
push
push
ins
push
push
mov
dec
mov
dec
sub
test
fwait
ret
pop
cli
lods
sub
mov
inc
scas
pop
sbb
mov
pop
lods
adc
xchg
cmp
rcl
cli
pop
xchg
hlt
pop
out
pop
jne
imul
sub
mov
inc
jmp
aam
sub
out
push
sub
or
clc
jns
and
int
or
add
fimul
aam
dec
je
inc
call
into
jns
(bad)
add
add
ins
mov
sub
push
mov
arpl
das
stos
shl
cwde
pop
fadd
adc
mov
inc
nop
popa
clc
jg
repnz
cmps
in
mov
push
arpl
xchg
jb
dec
cs
repz
das
out
and
repz
lods
imul
and
push
xchg
int
add
das
imul
loope
clc
lods
pushf
mov
mul
sahf
cmp
jnp
fisub
jno
or
or
rcl
rol
cdq
and
outs
mov
xchg
mov
(bad)
fcomp
push
mov
test
int3
dec
je
sbb
dec
xchg
jo
sti
movs
sbb
icebp
fld
jmp
jb
int
lds
push
ins
repz
sub
cmp
(bad)
movs
cmp
xchg
add
dec
pop
jo
fdivr
xor
daa
dec
and
movs
daa
mov
xchg
jl
inc
cmps
das
mov
ins
sub
call
into
cld
bound
adc
mov
clc
mov
jecxz
pop
inc
out
xor
jmp
iret
call
fsub
iret
test
arpl
cmc
dec
shr
test
and
mov
sub
into
stos
(bad)
adc
xor
or
inc
(bad)
std
dec
sbb
mov
dec
jo
inc
les
jecxz
repnz
xchg
mov
(bad)
shl
jno
stos
ret
ins
jo
lock
inc
pop
push
mov
mov
sub
push
push
sub
xor
or
aam
and
add
add
fist
push
mov
hlt
call
add
imul
jo
adc
mov
lea
ds
in
ret
pop
fidiv
pop
in
or
jecxz
inc
pop
cmp
add
lock
mov
jge
xor
movs
outs
xchg
adc
nop
cmp
xor
cmp
jle
mov
fisubr
cld
sbb
fs
fadd
in
and
sbb
cmp
adc
and
sub
or
sar
cmp
pushf
and
sbb
mov
push
pusha
daa
(bad)
cmp
cmps
dec
outs
cmc
push
pop
inc
xchg
inc
loop
bound
icebp
rcr
aad
loopne
cmp
push
out
int
pop
xor
ja
and
pop
mov
(bad)
sahf
lds
das
mov
lock
jge
and
lea
or
mov
xchg
sub
(bad)
pop
jae
inc
shr
std
mov
sysret
int3
push
xchg
and
sbb
(bad)
jle
(bad)
sbb
fs
dec
ss
cmps
mov
mov
jns
call
add
push
sti
test
not
jns
pop
cld
das
imul
(bad)
xchg
inc
pop
sub
stc
push
ds
cmp
stos
aas
mov
lahf
inc
jbe
mov
test
push
fidiv
pop
and
fstp
push
xchg
hlt
pop
leave
arpl
pop
and
xchg
ds
ss
inc
mov
mov
mov
outs
scas
cmc
pop
ret
gs
cwde
lahf
pushf
xor
dec
xchg
jecxz
sbb
pop
cmp
dec
dec
xor
ss
jecxz
mov
mov
xchg
test
adc
adc
movs
xchg
loop
repz
mov
jo
dec
fiadd
sub
fild
mov
lods
out
sahf
je
daa
pop
mov
sbb
mov
cdq
cmps
inc
inc
mov
mov
das
xlat
mov
and
enter
mov
sbb
adc
jns
xchg
mov
or
into
adc
sbb
jns
adc
mov
(bad)
mov
xchg
repz
mov
adc
fwait
rcl
push
test
pop
mov
add
int
std
jo
(bad)
push
pusha
xor
cs
ja
stos
mov
mov
cs
xchg
into
test
scas
inc
inc
add
(bad)
rol
push
cld
call
add
xchg
shr
sub
daa
dec
add
ds
dec
jb
popa
test
pop
inc
call
cmp
addr16
dec
dec
pop
sbb
ror
or
xchg
test
mov
cmp
and
ins
lods
sahf
dec
fs
jecxz
pop
cmpps
outs
sti
push
(bad)
mov
je
test
out
sbb
xor
push
adc
cmp
and
xchg
sbb
xor
ret
xchg
jp
sbb
out
and
inc
fs
add
and
imul
jmp
retf
cmc
sbb
jmp
sbb
cli
ds
jmp
ret
add
adc
lock
push
std
cmp
inc
mov
inc
jl
push
xor
test
inc
cmp
icebp
mov
jbe
fcmovnbe
sub
adc
(bad)
mov
push
xor
jns
push
and
lea
sti
fld
pop
fadd
mov
xchg
and
xor
mov
push
xor
ret
xchg
pop
mov
mov
hlt
cwde
mov
sahf
into
dec
jae
outs
rcl
icebp
add
sbb
loop
inc
pop
fisub
jbe
mov
(bad)
mov
mov
sub
pop
nop
sbb
imul
mov
dec
test
sbb
(bad)
fldenv
mov
push
es
aad
mov
cmps
lds
mov
iret
call
inc
hlt
inc
push
jg
test
xchg
xor
mov
and
xchg
or
ret
push
sti
aas
inc
cmp
sub
or
cwde
mov
retf
stos
and
in
ret
dec
cli
push
scas
retf
push
test
cld
fs
pop
mov
lahf
les
call
and
mov
fwait
mov
inc
leave
popf
adc
sub
ror
fild
jnp
movs
cmps
pop
or
push
sbb
aas
aas
(bad)
pop
mov
icebp
xchg
cli
and
in
jl
sub
mov
shl
test
push
fidiv
scas
mov
cmp
mov
ret
cli
in
cmp
sub
adc
add
mov
leave
inc
movs
das
mov
fsub
fwait
and
inc
xchg
xor
jecxz
test
inc
mov
popf
jp
ins
into
jnp
sub
and
(bad)
(bad)
fld
mov
sbb
jle
jecxz
pusha
dec
ror
pop
jmp
jb
loopne
stc
and
movs
mov
or
stos
js
fisttp
push
lock
mov
mov
imul
imul
adc
pop
in
aam
icebp
xchg
add
push
ss
int
inc
sub
fild
std
xor
add
iret
fstp
call
aam
mov
das
mov
xlat
into
push
dec
icebp
adc
mov
xchg
retf
xchg
fld
push
aaa
(bad)
jl
in
jecxz
mov
dec
xor
adc
mov
pop
ret
push
retf
pop
inc
ret
cwde
arpl
dec
push
sbb
mov
bound
sub
xchg
xor
sub
stos
xchg
inc
sub
lds
arpl
daa
dec
jnp
ja
sub
arpl
out
xchg
sbb
std
pop
inc
imul
dec
jnp
jge
in
pusha
ss
and
dec
out
out
pushf
arpl
pop
ficom
es
sahf
xor
mov
sahf
or
test
and
add
dec
push
pop
loopne
adc
jbe
dec
xchg
loopne
xchg
popa
push
xchg
xor
stos
wrmsr
adc
loope
sub
les
pushf
xchg
mov
and
pop
pop
mov
mov
push
jne
out
repz
sub
and
jmp
add
dec
jmp
pop
ficom
and
cmps
popf
div
inc
add
test
lods
je
jp
jmp
or
out
add
jo
aaa
xchg
mov
fsubr
in
mov
sub
sub
jb
rcr
loope
ficomp
mov
lods
mov
aas
loop
aam
adc
ficom
stos
jmp
sub
lods
sbb
ficomp
mov
in
jge
int
call
mov
inc
jb
iret
aad
into
jmp
push
cld
jmp
add
and
cmp
pop
ror
sbb
cs
sbb
add
jns
cmp
out
dec
cmp
dec
mov
or
pop
xchg
mov
jge
dec
push
xor
cdq
mov
(bad)
ins
pop
inc
pop
ss
js
sbb
ret
nop
mov
stc
jae
aas
or
cs
retf
stos
aad
mov
push
iret
pop
push
sub
jae
inc
xor
inc
jo
ror
pop
cwde
cdq
and
or
ss
xchg
es
mov
lds
and
mov
fisubr
push
mov
movs
xchg
xchg
mov
int3
dec
lods
loopne
arpl
mov
mov
cmp
lock
cmp
jo
jg
and
movs
pop
inc
call
xlat
movs
xor
nop
daa
xchg
int
sub
push
mov
add
retf
adc
ins
xor
xor
ja
sub
jb
xor
ret
mov
mov
dec
loope
add
mov
pop
shl
call
or
ss
xchg
ret
or
xor
loope
ret
mov
cdq
add
xlat
and
repz
mov
ja
lock
in
sbb
bound
mov
mov
add
pop
out
mov
(bad)
fcomip
out
mov
out
lahf
stc
push
lock
push
or
dec
(bad)
mov
add
cmp
push
cld
adc
mov
adc
pop
mov
xchg
es
test
xchg
mov
or
mov
data16
add
imul
push
test
jb
and
pop
push
sbb
nop
cmps
xor
pop
xchg
jmp
jnp
jae
push
es
test
data16
push
dec
lea
(bad)
outs
stos
jo
adc
out
leave
pop
push
dec
fdivr
in
inc
sbb
(bad)
in
mov
cmovs
mov
inc
test
mov
popa
xchg
lods
fcomp
call
mov
push
mov
popf
stos
jecxz
lods
sar
lahf
ss
daa
mov
mov
rcl
mov
inc
xlat
sub
repnz
mov
fwait
retf
cmps
add
retf
es
cli
test
test
jnp
fcmovu
ret
or
jmp
inc
pop
ja
sbb
(bad)
sbb
xchg
mov
adc
inc
pop
add
push
jne
add
jge
dec
cvtps2pd
sub
push
mov
aam
dec
cmp
ins
arpl
lds
xchg
sbb
cmp
adc
mov
or
xchg
(bad)
(bad)
adc
push
and
jb
dec
add
test
xchg
mov
lock
push
popf
inc
divps
push
int3
xchg
sub
ret
lds
popa
cmc
mov
push
loope
adc
or
repnz
adc
leave
sub
mov
sub
mov
mov
cmp
jge
inc
iret
retf
popf
jge
pop
xchg
sub
call
imul
test
das
xor
mov
cmp
xor
cmp
add
mov
inc
sar
retf
(bad)
and
jno
or
and
mov
icebp
lahf
je
fsub
mov
sbb
xor
dec
push
outs
ds
pop
jbe
in
push
scas
add
retf
cmp
add
jns
mov
jns
sub
js
mov
scas
lods
cmps
ds
cmp
je
es
jbe
shl
inc
mov
cld
mov
jb
lods
inc
inc
jnp
data16
ret
int
cmps
nop
shl
icebp
mov
mov
out
clc
aam
jl
lods
cmp
dec
xor
jle
popf
sar
scas
retf
push
into
inc
xchg
(bad)
jno
scas
push
xchg
push
lods
or
stos
cmp
scas
or
add
or
sbb
sub
cmp
mov
loope
jmp
xchg
(bad)
frstor
jl
mov
repz
sbb
out
or
in
jecxz
fcomip
mov
scas
cdq
jo
sbb
push
or
fisttp
out
xchg
in
clc
sti
cwde
loope
xchg
xor
xchg
in
inc
lea
retf
rol
and
(bad)
cmp
fsub
jl
sar
call
test
sahf
sbb
adc
aas
imul
xchg
repnz
push
je
imul
pop
jmp
int
sbb
sar
int3
xor
int
enter
cmp
in
jge
jmp
dec
push
push
and
inc
push
add
cmp
arpl
cld
xor
les
sets
sub
(bad)
out
xor
adc
ret
repnz
nop
aad
imul
xor
cmps
fs
bound
mov
dec
les
into
cmps
sub
xlat
xor
ret
adc
jns
and
mov
adc
add
add
mul
jge
xchg
mov
sbb
jb
xor
cmp
in
sub
in
jae
add
pop
pop
sar
xor
(bad)
fndisi(8087
dec
and
loope
jno
mov
xchg
lods
push
enter
sbb
dec
mov
fimul
push
or
push
push
sbb
xor
jecxz
sub
inc
stc
mov
cdq
repz
add
repz
xchg
pop
adc
push
cmc
cmc
adc
mov
fcmovu
xor
ins
arpl
into
inc
outs
xchg
push
ret
mov
mov
stc
inc
and
pop
rcr
and
mov
popf
add
sub
cmp
int3
cmp
dec
mov
nop
sub
sub
test
xor
cmp
push
fldcw
ror
push
out
jbe
xchg
gs
loopne
dec
mov
inc
mov
add
xchg
dec
jae
call
mov
push
in
mov
(bad)
or
xchg
hlt
add
sub
jno
mov
mov
shl
push
clc
pop
fwait
fs
aad
adc
std
cmps
mov
ret
pushf
dec
(bad)
out
out
out
and
jne
ret
push
std
adc
add
push
enter
aas
xor
xor
sub
push
jl
fst
pop
mov
rcr
das
adc
sub
push
add
stos
pop
imul
les
adc
xchg
ins
pusha
scas
adc
fld
jno
rcr
cmps
inc
in
sti
push
push
je
dec
adc
adc
leave
xor
mov
cmp
(bad)
sbb
xor
popf
mov
mov
ds
(bad)
int3
nop
enter
xchg
cdq
out
imul
cs
call
test
cwde
sbb
sub
inc
test
dec
imul
loopne
mov
popa
inc
js
xchg
jae
dec
push
and
das
inc
mov
adc
mov
jmp
inc
xchg
les
inc
(bad)
lahf
sbb
jge
fst
dec
outs
xor
cli
ds
call
stos
ins
js
push
ins
add
add
pop
adc
sbb
jecxz
lea
ins
mov
mov
inc
adc
jle
mov
inc
mov
cwde
fistp
xchg
mov
inc
dec
push
aad
cmp
and
dec
mov
sub
dec
push
fiadd
mov
jns
inc
repnz
pushf
and
xchg
push
arpl
rep
adc
cmps
jno
adc
push
repnz
mov
jmp
cmp
icebp
stos
clc
xchg
mov
leave
push
sub
add
(bad)
loope
push
push
dec
dec
xchg
stos
push
mov
ins
dec
or
xor
int
data16
sahf
and
dec
test
adc
pop
adc
mov
jmp
push
push
repz
sbb
xor
xchg
dec
push
pop
and
retf
ins
je
daa
in
dec
jae
div
cli
scas
rcl
fcomp
rcl
lock
div
inc
inc
or
cmp
inc
bound
jle
fsub
mov
out
cmc
or
jl
das
push
rcl
jl
adc
int3
push
adc
xor
inc
clc
adc
test
pop
xor
dec
lods
lods
inc
jbe
mov
pop
jns
and
repz
mov
push
pop
push
enter
jmp
iret
mov
cdq
mov
(bad)
lock
outs
mov
mov
gs
push
sub
jo
lea
mov
imul
sbb
sub
add
jno
adc
inc
(bad)
pop
inc
mov
loope
pop
iret
sub
dec
shr
mov
cmp
xor
pop
inc
(bad)
jecxz
movs
test
test
mov
lds
push
jae
dec
adc
mov
or
rcl
cmc
mov
pop
pop
je
clc
jecxz
sahf
in
xchg
or
pop
out
add
lea
push
ret
fstp
sub
mov
inc
scas
icebp
cmp
scas
pusha
push
mov
sbb
push
push
ins
mul
xor
xchg
and
jl
sub
iret
in
cmp
repz
xor
pop
sbb
pop
test
cmp
xchg
cmp
xchg
psubd
jno
xchg
xchg
push
mov
popa
popf
sub
and
push
sbb
jnp
in
jmp
sub
call
dec
ss
pop
mov
adc
fisubr
sar
(bad)
shl
or
adc
jnp
sbb
dec
inc
sub
jnp
push
xor
sbb
addr16
add
xor
jae
mov
ins
hlt
test
and
popa
hlt
inc
adc
mov
pop
jp
adc
fwait
sti
in
push
cmp
lods
(bad)
or
jecxz
cmovle
stc
and
add
iret
ins
sub
repnz
movs
arpl
jno
lds
mov
and
jp
rcr
xchg
sahf
(bad)
xchg
ret
mov
and
out
jl
(bad)
out
xor
xor
(bad)
push
jnp
xchg
push
or
push
mov
mov
es
adc
int3
fcomp
mov
add
xchg
(bad)
mov
outs
popf
push
ds
and
test
std
dec
stc
sti
cmp
xchg
ja
int3
outs
mov
popf
jnp
xchg
in
(bad)
xchg
mov
add
push
mov
rep
lds
mov
cwde
mov
inc
scas
sbb
rol
jb
into
scas
lea
push
jnp
cmp
leave
adc
dec
xchg
lods
sub
cmp
sub
inc
daa
popa
mov
call
repz
mov
aam
ret
sar
jo
push
rcl
push
dec
test
push
daa
scas
dec
bound
int3
mov
push
popa
or
push
js
out
fld
xchg
cs
xlat
cmc
nop
sub
jg
sbb
and
je
sub
push
in
cwde
mov
ret
add
xchg
loop
(bad)
mov
pop
es
adc
xor
fcom
(bad)
loopne
mov
push
sti
cmp
inc
(bad)
mov
and
sub
or
inc
rcl
rol
enter
jns
push
or
cmp
scas
sbb
xor
mov
dec
lea
add
or
outs
es
jmp
in
outs
pushf
cmp
cld
cmpxchg
and
aas
lock
inc
jae
call
push
div
das
retf
mov
outs
and
in
inc
cmp
cmps
jecxz
in
test
popa
adc
xchg
(bad)
enter
mov
xor
mov
mov
jge
push
mov
sbb
push
cmps
pop
imul
or
ins
mov
mov
xlat
jg
add
(bad)
scas
mov
mov
jne
aaa
scas
into
pop
push
jmp
and
lahf
sbb
pop
addr16
jecxz
and
and
jge
pop
mov
mov
inc
push
inc
fbstp
sbb
icebp
or
out
or
ret
jecxz
and
mov
cmp
adc
shr
mov
push
cdq
gs
xor
mov
push
jo
daa
jne
ins
popa
sar
movs
add
cmp
nop
sub
mov
jnp
and
xchg
dec
lock
inc
scas
xchg
and
push
and
out
xchg
movs
retf
push
repnz
pop
(bad)
sbb
jle
jne
jno
add
rcr
test
jecxz
dec
(bad)
ja
xchg
add
inc
scas
and
jns
sti
add
sub
je
dec
mov
add
cmp
xchg
sbb
daa
jne
mov
and
mov
pushf
pop
popa
adc
adc
(bad)
mov
pusha
pushf
mov
add
xchg
in
clc
js
jns
mov
movs
jnp
sbb
and
lea
mov
dec
ret
push
cdq
xchg
outs
fild
push
cmp
(bad)
ret
jg
cs
loop
mov
out
cwde
mov
inc
mov
push
je
rcl
add
rol
icebp
mov
fwait
pop
mov
sti
mov
aad
lahf
cli
pcmpeqd
(bad)
jge
nop
cmps
(bad)
jge
outs
lahf
or
sbb
iret
jmp
loope
cmp
fld
and
adc
ror
pop
pop
pop
outs
pop
cli
xor
std
fs
and
and
dec
daa
lahf
add
pushf
cmp
popa
stos
jle
pop
imul
and
fild
mov
repz
fsubr
loopne
int
push
push
fadd
mov
sar
adc
dec
test
aam
cli
sahf
leave
test
pop
adc
movs
fstp
test
mov
je
cwde
out
int
pop
pushf
cmp
adc
mov
int3
lods
lea
test
mov
scas
sub
std
pop
add
shl
hlt
xchg
(bad)
adc
cwde
popf
lds
cmp
mov
inc
fs
jl
sub
sub
stc
in
push
adc
cli
adc
popf
mov
jecxz
adc
rcl
mov
dec
out
std
in
outs
ds
xchg
mov
push
pop
mov
cmps
test
push
ficomp
jb
cmp
pop
into
and
sar
push
cmp
sub
jns
scas
add
call
in
mov
inc
dec
cmp
sbb
fcos
adc
mov
cmp
(bad)
nop
and
push
add
mov
in
jbe
mov
add
mov
fadd
stos
aaa
ja
imul
mov
sub
lds
mov
jmp
mul
and
nop
push
adc
les
mov
mov
mov
and
pop
arpl
cs
fucom
inc
das
xchg
arpl
xchg
push
push
dec
fs
xor
pop
lds
scas
scas
test
mov
fdivr
scas
adc
fcomp
push
ins
sub
outs
iret
in
or
lea
pop
xlat
scas
and
cmps
stos
mov
dec
push
daa
jne
or
xchg
sbb
fs
inc
mov
adc
div
cmc
mov
data16
bswap
int3
bound
dec
push
mov
lods
sub
in
loope
and
sub
ins
inc
jle
fistp
pushf
push
test
cmp
setns
int
ins
fisubr
xlat
sar
jg
dec
jne
enter
cmp
push
jb
mov
repnz
les
setge
mov
out
ss
lods
mov
jb
xchg
lods
push
out
out
jno
pop
pop
push
(bad)
jg
in
int3
push
mov
js
fsub
mov
mov
mov
fldenv
dec
sahf
push
pop
jg
inc
pop
xor
mov
sbb
push
fisubr
push
sbb
in
cmc
adc
push
ss
push
pusha
dec
stc
scas
inc
push
mov
mov
cwde
mov
into
das
mov
push
xchg
pop
js
xorps
mov
pop
test
es
or
dec
mov
mov
(bad)
jns
lahf
imul
imul
cld
mov
scas
xchg
dec
and
loop
cmps
mov
(bad)
imul
inc
leave
push
pop
pop
cmp
mov
out
(bad)
mov
je
call
pop
cmps
sub
cdq
cmp
stc
sbb
lods
outs
lods
das
xchg
daa
lods
les
adc
mov
xchg
mov
cmp
clc
push
sub
cld
arpl
cmc
pop
or
retf
cmp
jns
xor
dec
jle
(bad)
repz
sti
xor
fcom
xchg
inc
cmp
add
pop
into
jo
mov
imul
mov
vmovaps
in
ret
adc
in
rcr
das
lds
mov
cmp
cmp
std
adc
xchg
movs
add
sbb
mov
cli
sbb
in
fld
fdivr
or
scas
jl
dec
sub
sbb
push
xor
fisub
push
cmp
daa
xchg
or
adc
test
ret
mov
ret
jmp
leave
xlat
enter
and
in
sahf
mov
dec
mov
jbe
adc
outs
popa
mov
mov
or
test
repz
adc
add
or
stos
push
sub
push
sar
and
(bad)
das
adc
mov
jecxz
movs
cli
sbb
in
rol
lods
sar
push
mov
xor
jae
fstp
ja
aaa
rcl
cld
ror
arpl
fs
inc
adc
movs
daa
(bad)
arpl
xor
cmp
adc
jmp
sub
dec
call
stos
xor
ror
popf
push
int3
and
cmp
lock
add
test
pop
in
mov
bound
fdivr
push
sbb
mov
jecxz
nop
int3
cwde
retf
mov
repnz
shl
jno
mov
pop
jo
dec
js
mov
ret
cmps
out
(bad)
mov
cmp
cwde
pop
xchg
xor
push
mov
mov
add
out
(bad)
or
lods
and
dec
jmp
std
mov
inc
push
cs
or
mov
imul
bound
xadd
jo
popf
out
enter
ds
mov
adc
mov
mov
cmp
dec
jle
inc
xor
push
and
sbb
les
lods
cmp
push
and
add
mov
cs
pushf
add
cmp
cli
mov
leave
test
ror
lods
cmp
ins
xchg
int
cmc
pop
and
das
inc
sahf
xlat
shr
push
cmp
std
call
and
mov
(bad)
adc
lods
jnp
push
mov
adc
ds
inc
cmp
push
or
adc
mov
dec
xor
test
dec
(bad)
jp
mov
nop
push
xor
mov
jg
xor
push
jmp
mov
sbb
xchg
pop
mov
fisub
and
pop
shl
jmp
or
and
outs
xchg
fsubr
ins
cmp
mov
stos
push
imul
sub
xchg
ret
repz
ret
out
xchg
sub
mov
arpl
mov
popa
cli
pop
inc
xchg
ss
dec
nop
mov
inc
and
les
je
or
inc
dec
add
pop
movs
ss
jno
dec
push
outs
iret
je
push
jne
gs
mov
inc
sahf
out
push
push
fmul
mov
lock
mov
ja
sub
cmc
inc
inc
sti
pop
adc
jnp
mov
cmps
pmaxsw
ficomp
dec
aam
mov
iret
jl
push
dec
dec
lock
or
xchg
or
jne
push
sub
punpcklbw
jmp
repz
push
sub
test
xchg
rol
loop
pop
repnz
cmps
add
lds
outs
ja
sub
std
sub
in
popf
les
jns
cmp
mov
inc
xchg
add
push
pop
in
mov
sbb
fwait
or
cmp
in
xor
lahf
pop
push
jmp
(bad)
sub
mov
out
dec
clc
xchg
inc
jbe
pop
mov
cmp
mov
dec
dec
mov
xor
ja
push
cmps
ins
mov
(bad)
xlat
cmps
fld
outs
rcr
ret
mov
mov
fbstp
inc
pop
xor
stos
imul
jnp
leave
dec
jno
lods
jg
sub
imul
or
into
(bad)
dec
inc
fs
data16
inc
adc
retf
ins
sbb
scas
out
or
add
in
mov
xchg
pusha
push
sub
push
pop
and
xchg
test
inc
or
movs
rol
cmps
xchg
cmc
loope
leave
or
sbb
pop
test
sbb
pop
loope
fucom
add
sub
sub
jmp
and
push
mul
pusha
mov
push
(bad)
xchg
add
pop
xor
ret
out
xchg
test
sub
push
mov
sub
and
sti
iret
mov
dec
mov
jne
lock
test
rcr
cmp
dec
jl
inc
add
and
test
loope
xor
mov
mov
push
xchg
int
push
hlt
sbb
push
adc
inc
sbb
push
mov
dec
mov
xor
lea
and
mov
jp
std
jne
mov
dec
jl
and
es
inc
aaa
icebp
dec
push
jp
cmp
sub
xor
cs
cmps
aaa
(bad)
pop
fimul
loopne
das
aam
lea
inc
inc
inc
inc
sub
jnp
sub
and
xchg
call
ret
stos
test
mov
data16
xchg
rcr
pop
mov
outs
xchg
iret
jnp
movs
test
xor
sub
imul
pusha
push
add
push
popf
movs
div
sub
adc
pop
lods
in
add
pop
jmp
add
mov
jl
clc
dec
inc
pushf
push
pop
xchg
pop
mov
pop
outs
inc
inc
(bad)
mov
ds
cmp
in
dec
jg
adc
xlat
jbe
mov
call
xor
adc
retf
jmp
je
loop
xchg
sub
aad
cmp
movs
sbb
mov
mov
retf
xor
cmps
mul
(bad)
xchg
mov
mov
rol
ret
pushf
and
jecxz
xchg
(bad)
repnz
sub
jmp
and
mov
stos
or
push
xchg
sbb
inc
data16
push
ret
mov
cmp
loopne
mov
jge
inc
jecxz
pop
pop
push
int3
js
div
stos
les
push
je
gs
sbb
mov
lds
(bad)
lods
sbb
jne
pushf
pushf
or
inc
cmps
mov
mov
or
cmps
sub
cmp
shl
and
(bad)
pop
mov
sub
test
push
fdiv
ss
(bad)
dec
adc
inc
jl
push
push
xchg
into
outs
and
movs
cmp
mov
add
or
mov
mov
retf
fcomip
push
sahf
mov
dec
lds
or
out
push
lods
iret
and
dec
push
add
xor
fld
adc
jp
out
xchg
in
add
push
test
jg
mov
pusha
jge
stos
sbb
sti
and
shr
cli
push
test
mov
mov
jge
retf
mov
mov
lods
jge
push
cmc
sub
std
(bad)
sub
push
dec
cwde
cmp
jae
xor
mov
cwde
inc
stos
adc
jno
pop
adc
mov
ja
mov
jge
jmp
jmp
ja
popa
out
call
lea
cmp
ja
adc
or
push
in
sub
xchg
not
mov
mov
dec
sub
inc
push
xchg
adc
(bad)
mov
(bad)
pop
int3
or
add
add
repz
jb
adc
inc
(bad)
jp
outs
test
daa
jg
sti
push
jecxz
mul
jae
and
test
fstp
pop
cs
popw
int3
das
into
arpl
cdq
ds
or
fadd
cmp
cld
xor
jmp
lock
in
adc
(bad)
cmp
sbb
retf
mov
sbb
fnstsw
nop
(bad)
mov
cmps
aam
adc
mov
lock
or
xchg
push
xor
mov
sar
je
mov
(bad)
sti
xor
pop
fidiv
sbb
push
mov
pop
mov
call
icebp
in
pop
shl
xchg
dec
and
or
lea
stc
sub
push
in
iret
repz
cmp
adc
mov
inc
dec
sub
and
aad
ret
fldcw
scas
or
pop
cmp
dec
(bad)
jmp
pop
es
leave
les
jbe
adc
lahf
inc
add
inc
pusha
in
int
fadd
mov
cmc
repz
loope
and
jge
jmp
outs
and
bound
inc
into
ret
ins
and
adc
mov
loopne
gs
test
in
jo
or
ins
sbb
sub
xchg
out
enter
inc
adc
mov
jecxz
sbb
stos
jno
fdiv
pop
sbb
pop
push
cli
test
push
mov
push
or
sti
cmp
push
dec
xchg
(bad)
push
cmc
xlat
jno
push
cmp
xchg
pop
arpl
pop
cmp
jmp
in
sbb
rcr
hlt
adc
retf
mov
into
jp
cmps
xlat
mov
cmps
shl
jge
not
sbb
fidiv
push
adc
xchg
cmps
push
ret
adc
add
jmp
push
outs
sbb
cwde
cli
fdivr
xor
test
cmp
sbb
adc
xchg
adc
scas
lods
das
loop
movs
mov
inc
retf
repz
cmp
jb
jne
out
mov
int3
stos
aaa
adc
ret
adc
test
fild
int
push
add
in
mov
or
stc
cmp
push
mov
pcmpeqd
scas
sub
and
fnstenv
dec
call
sub
cmp
push
or
jmp
test
in
jmp
ja
mov
mov
add
mov
dec
pusha
leave
jl
inc
fcom
jmp
shl
pop
or
inc
jle
out
imul
jge
(bad)
arpl
pop
imul
out
and
clc
scas
mov
outs
lock
xchg
mov
movs
std
out
in
jmp
xchg
ins
or
out
sahf
xchg
iret
xor
push
xchg
ret
mov
ss
adc
cmp
mov
pop
inc
loop
jge
cdq
cli
daa
(bad)
loop
aas
add
std
dec
cli
fisttp
shl
mov
add
test
pop
mov
xlat
fist
add
lods
sahf
bound
das
ss
in
loop
adc
in
sar
dec
and
int3
fistp
and
push
inc
ffreep
es
loopne
sub
test
adc
in
sbb
aaa
jecxz
out
lahf
enter
lahf
movs
sub
sub
scas
iret
fild
jmp
(bad)
inc
and
xor
call
push
mov
jg
cwde
cli
jmp
or
sub
or
cmp
cs
rol
jmp
sub
out
sbb
(bad)
pushf
jns
popf
adc
jnp
out
dec
mov
cmp
(bad)
(bad)
lock
clc
mov
sar
dec
cld
push
cmp
popf
or
arpl
dec
dec
(bad)
std
(bad)
cwde
mov
push
fs
adc
sbb
loopne
mov
inc
push
pop
lahf
push
xchg
sbb
dec
push
xchg
hlt
lea
or
xchg
popa
jp
sub
adc
dec
xor
cwde
stos
cmp
jns
dec
into
inc
test
out
int3
(bad)
in
imul
pushf
sbb
push
dec
movs
sbb
imul
jns
test
loope
ds
add
xor
rcr
cwde
rol
xchg
pop
rol
stos
dec
mov
pop
pop
loope
out
mov
mov
xchg
cs
mov
setge
push
jbe
(bad)
lea
add
xlat
pushf
jns
fdivr
aas
ret
fldcw
add
sahf
inc
repnz
cwde
nop
mov
das
xchg
ret
mov
xchg
inc
cmc
sub
or
loope
adc
push
clc
mov
js
aaa
dec
pop
jne
cmps
iret
(bad)
xor
test
xchg
ja
int3
mov
call
fbld
sub
inc
push
shl
xor
outs
and
jmp
aaa
jbe
repnz
sbb
mov
xchg
scas
aaa
push
retf
mov
sahf
sub
call
jns
xchg
mov
dec
pop
push
repnz
xor
sub
repz
and
(bad)
xor
test
xor
lods
or
and
xchg
movs
int3
pop
(bad)
mov
imul
pop
sahf
leave
inc
mov
sbb
dec
loope
lods
fstp
repz
mov
push
(bad)
je
xchg
push
jne
stc
outs
lea
xor
test
(bad)
inc
push
(bad)
shr
mov
sub
out
mov
sbb
je
mov
stc
or
rol
cmp
cli
xor
pushf
sti
repnz
inc
sbb
push
xor
cld
mov
lock
xchg
pop
(bad)
push
jne
out
inc
sti
inc
ror
je
sbb
sahf
aad
(bad)
jb
xor
xchg
xchg
xchg
mov
pop
cmp
pop
leave
xor
lds
frstpm(287
sub
cmp
(bad)
jmp
popa
xor
inc
mov
stc
(bad)
sub
xor
or
jl
cmp
aaa
test
push
(bad)
jmp
icebp
in
movs
push
in
outs
pusha
repnz
sahf
hlt
pop
xchg
leave
xchg
test
jl
mov
or
arpl
out
icebp
and
in
cmp
enter
push
mov
(bad)
mov
stos
dec
inc
sbb
loop
aas
sub
add
pop
popa
lods
cmps
xchg
or
and
outs
mov
xlat
cmp
outs
pop
adc
cld
and
push
cmp
and
out
es
sbb
addr16
pop
inc
js
dec
addr16
(bad)
ror
sbb
aad
add
rcr
mov
mov
mov
sbb
popa
mov
das
movs
inc
jae
movd
(bad)
fld
or
push
stos
xchg
ficom
pop
neg
sub
mov
or
cmp
ret
jmp
cmp
call
(bad)
adc
out
in
cmp
mov
rcr
les
lea
clc
int3
sub
imul
xchg
call
pop
hlt
pusha
repz
sub
xchg
lahf
retf
inc
xchg
pop
mov
pop
push
rcl
xchg
add
sub
stc
xchg
mov
mov
pop
inc
scas
aaa
in
xor
pop
fmul
in
push
cwde
sub
mov
sbb
out
push
and
inc
pop
jno
xor
inc
cmc
into
push
dec
nop
pop
xor
enter
popa
imul
inc
call
dec
add
aaa
xchg
shl
push
imul
inc
inc
sbb
call
mov
or
add
fidiv
shl
adc
mov
aaa
jns
movs
dec
or
(bad)
es
in
in
out
and
add
xor
push
jmp
mov
stos
repz
js
test
push
and
jnp
mov
xchg
fcmovnb
adc
out
pusha
xor
xchg
jnp
outs
lahf
das
pop
bswap
inc
cmp
mov
mov
inc
inc
or
jge
rol
sbb
lods
and
inc
xor
sub
add
aad
call
out
mov
cdq
sbb
add
mov
jbe
test
loope
in
test
rcl
in
mov
add
dec
(bad)
call
sub
movs
rol
sbb
imul
xor
dec
mov
lods
rcr
les
jno
cmp
xor
pop
sub
call
dec
sti
jne
fisttp
call
or
sbb
pop
jecxz
jl
mov
out
mov
rcr
pushf
or
pop
xor
xchg
mov
fisub
push
cs
xor
sbb
cmp
fild
sub
repz
pop
fucomip
stc
xor
imul
jbe
repnz
add
jno
sub
xchg
popa
mov
scas
out
sub
sub
adc
ins
or
dec
and
pop
jo
cmp
int3
repz
xlat
pop
mov
cmps
cmp
sub
and
jnp
inc
in
adc
add
outs
in
(bad)
mov
cmp
test
icebp
loope
sub
xor
and
mov
xchg
jo
sub
call
fsub
dec
enter
fidiv
scas
std
cmp
pop
or
enter
enter
fwait
out
or
test
sub
or
dec
fnsave
cmp
or
push
int
mov
outs
pop
mov
xor
inc
adc
mov
ret
jecxz
je
xchg
pop
les
mov
fwait
cdq
inc
adc
mov
mov
popa
xor
sti
test
je
sub
in
inc
dec
movs
adc
pop
outs
scas
mov
outs
mov
push
shr
push
jmp
fcmovnbe
fsubr
imul
clc
sbb
adc
jp
mov
sub
pushf
loopne
ja
xchg
and
imul
sub
pop
lods
ret
fdiv
sbb
ror
dec
cmc
pop
cmp
pop
mov
sub
das
shl
add
ja
xchg
sbb
les
jno
call
clc
jmp
call
xchg
jecxz
addr16
pop
pop
jo
jns
inc
data16
bound
xchg
scas
in
mov
idiv
push
cmp
or
inc
bound
and
call
add
push
inc
cwde
loopne
sahf
popf
cmp
mov
dec
add
dec
jg
mov
lds
add
push
lods
aam
cmp
mov
xor
leave
in
das
cmp
mov
dec
ins
add
add
adc
mov
pop
retf
sbb
lds
xchg
add
call
cld
ins
mov
pusha
pop
inc
ins
into
mov
pop
test
dec
popa
mov
mov
sbb
int3
adc
adc
mov
shl
jle
jno
mov
push
in
push
pop
and
cmp
sub
mov
ins
cmp
popa
sub
movs
test
and
xchg
or
sub
rcl
dec
sti
clc
cli
mov
cmp
in
pop
lea
adc
imul
daa
stos
into
push
rcr
mov
pop
cli
lods
or
mov
xor
pop
and
scas
cwde
push
scas
(bad)
sbb
jmp
push
cmps
jbe
mov
retf
movs
leave
sbb
inc
push
(bad)
popf
xchg
test
out
xor
clc
ror
dec
not
xchg
and
fbld
movs
add
push
mov
loope
adc
push
ret
inc
popa
jo
cmp
xchg
or
pop
push
test
loopne
sbb
aam
pop
popa
add
xchg
cmc
fwait
push
jae
mov
xchg
xchg
stc
in
cmc
popf
(bad)
lds
jmp
ret
sub
outs
out
sbb
xchg
push
pushf
dec
aad
sbb
es
retf
push
and
xchg
mov
cmp
ret
out
cmp
jae
pop
ss
jge
pop
inc
push
std
cmps
sub
cmp
jmp
mov
(bad)
mov
mov
jp
cmp
pop
(bad)
std
push
in
cmps
enter
nop
sub
std
add
xchg
dec
xor
stos
mov
xchg
loope
neg
xor
add
xlat
cdq
jecxz
or
leave
shl
mov
fisub
jnp
mov
jg
movs
fwait
stos
mov
sbb
fsubr
lea
inc
xchg
mov
pop
xor
mov
aaa
stc
xor
cli
aas
vmread
pusha
inc
adc
test
or
in
inc
add
xor
rcl
pop
mov
sub
mov
lods
pop
push
jns
dec
lods
loop
cld
pop
scas
inc
jae
dec
adc
dec
mov
test
(bad)
dec
ins
sub
ss
loopne
imul
adc
push
fs
xor
mov
ds
repz
xchg
fldpi
adc
int
xor
fwait
(bad)
repnz
cmps
jmp
and
mov
sbb
arpl
mov
mov
sub
or
(bad)
fidiv
div
movs
add
int
enter
cmps
xchg
pushf
ds
sahf
add
enter
retf
inc
jo
or
cld
jle
movs
repnz
jl
inc
add
fwait
pop
sti
pusha
or
jmp
jne
fdiv
imul
inc
daa
or
jg
cmps
or
pop
inc
dec
lock
test
imul
cwde
iret
adc
or
jg
mov
and
or
push
test
lea
das
pop
xchg
jl
test
sbb
adc
not
adc
sbb
jp
or
mov
mov
fisttp
hlt
xchg
inc
sbb
add
repnz
add
jge
(bad)
fidiv
jbe
call
sbb
cmp
call
mov
push
xor
xor
sbb
iret
mov
int3
mov
mov
sbb
sub
mov
inc
mov
outs
in
mov
pop
mov
cmp
daa
mov
mov
push
jb
inc
sub
jl
push
or
out
jb
in
xchg
cmp
ds
jmp
xor
jb
xchg
pop
popa
fldenv
cmp
sub
test
jecxz
shl
jp
push
retf
mov
out
outs
xchg
test
adc
xchg
or
lock
arpl
pop
adc
inc
jns
inc
lock
adc
out
inc
mov
retf
fs
imul
fsubr
lahf
addr16
push
or
jne
fidivr
jmp
sbb
fs
dec
movs
mov
add
out
push
push
in
outs
icebp
inc
lds
jnp
test
fdivr
push
sbb
mov
stc
mov
inc
ror
cmp
add
loope
push
jp
and
mov
call
add
aad
cs
or
xchg
cs
inc
xchg
lods
lahf
pusha
pop
loope
mov
pop
mov
xchg
jno
push
xor
dec
enter
mov
je
cwde
(bad)
mov
ret
bound
jp
mov
inc
into
outs
sbb
movs
and
lods
cmps
xor
jmp
inc
cmp
push
into
mov
mov
and
sti
movs
aas
jle
add
jb
jo
std
jo
jp
in
mov
adc
fild
sub
call
sti
xchg
add
xchg
xlat
mov
lock
(bad)
lahf
loope
imul
add
scas
cmp
adc
sub
mov
rcl
es
mov
sub
dec
sbb
jo
pop
inc
inc
xchg
sub
inc
inc
xor
stc
loop
ss
out
aaa
add
sub
jg
pop
movs
sub
adc
dec
stc
cmp
into
jle
lods
or
jmp
add
pop
mov
ins
and
push
pop
mov
cwde
cmp
sbb
stos
(bad)
mov
and
pop
jl
sub
out
std
xchg
mov
daa
lea
cmp
sub
push
add
xchg
daa
lods
imul
jmp
add
cdq
inc
outs
and
jns
mov
imul
repz
lea
xor
mov
(bad)
bound
jb
and
mov
fidiv
mov
fisttp
ds
push
mov
cmp
or
scas
mov
jle
ins
in
popa
add
add
dec
dec
mov
lahf
rcr
repnz
mov
mov
out
out
add
jae
pop
dec
sbb
fs
mov
mov
pop
and
and
cmp
imul
sub
sub
movs
or
shl
(bad)
ds
shl
popa
fdiv
ins
dec
retf
mov
bound
popa
out
das
test
push
pop
js
outs
es
outs
ja
jg
push
xchg
loop
jecxz
bound
cld
div
dec
mov
jmp
sub
(bad)
dec
xchg
cmp
outs
push
sti
clc
sub
add
mov
mov
inc
mov
lds
test
dec
loope
mov
add
mov
(bad)
lock
or
jle
xor
loopne
outs
imul
push
scas
sti
sub
mov
or
adc
out
std
mov
arpl
mov
jae
push
(bad)
rcl
mov
add
add
mov
out
fsincos
retf
mov
mov
aad
sbb
shr
pop
xor
jb
and
fld1
sbb
(bad)
pop
fisubr
sbb
popf
pop
mov
sbb
loope
test
add
lods
and
inc
fbstp
inc
nop
sub
mov
out
call
cmc
adc
dec
mov
imul
iret
cdq
jge
inc
aad
add
rcl
sti
pop
and
mov
ds
add
enter
dec
retf
jmp
adc
xchg
push
adc
(bad)
xchg
popf
rol
pop
push
dec
fwait
add
add
not
push
dec
sbb
mov
sbb
mov
pop
jmp
xchg
push
movs
push
mov
scas
mov
jmp
iret
retf
dec
retf
aas
out
ret
(bad)
cli
test
loopne
ja
popw
rep
sub
test
scas
enter
add
mov
retf
dec
push
into
clc
aas
daa
xchg
in
and
ret
and
jmp
jmp
cmp
push
mov
sub
mov
fild
xor
outs
sti
pop
jbe
mov
out
or
and
fs
sub
push
pop
mov
cmp
and
bound
movs
arpl
retf
or
pusha
adc
xor
jno
loope
xchg
dec
dec
mov
or
push
mov
mov
mov
outs
xchg
rcl
cmps
ins
inc
sti
xor
cmp
xor
fmul
push
mov
cs
in
ret
stos
inc
mov
mov
or
aad
call
sbb
xchg
adc
movs
cmps
(bad)
sub
push
cmp
jecxz
push
test
cmp
dec
sbb
push
not
(bad)
(bad)
sahf
je
sbb
mov
mul
outs
fld
shl
and
shl
push
(bad)
and
mov
mov
imul
(bad)
pushf
call
xchg
rcr
(bad)
fiadd
or
clc
pop
sahf
lods
shr
jl
mov
fistp
shl
nop
mov
movs
sub
out
push
call
push
pop
jmp
dec
adc
dec
dec
jmp
dec
jns
xchg
sahf
jno
jle
pop
in
int
jge
add
shr
sbb
add
retf
sub
cmps
mov
ins
repz
nop
cmp
xlat
cs
ja
jns
das
cmps
adc
loopne
cmp
adc
blsfill
fs
enter
js
xchg
adc
in
add
jecxz
int
in
jnp
xchg
jmp
inc
lds
cmp
add
mov
pop
xchg
or
and
popa
jge
stos
movs
loop
gs
ret
mov
or
mov
retf
cmc
mov
xchg
and
test
fwait
pop
push
or
in
push
stos
mov
in
ja
mov
and
outs
dec
jmp
mov
inc
adc
lahf
sahf
jge
sub
or
inc
ror
mov
adc
in
adc
scas
inc
and
fisubr
push
pop
or
or
cwde
pop
les
push
jmp
xor
je
iret
aaa
fiadd
stc
jne
mul
outs
pusha
ror
mov
pop
mov
into
dec
mov
cmp
mov
ins
fmulp
jle
xchg
mov
push
jne
outs
sub
std
(bad)
in
movs
mov
(bad)
mov
cmp
pushf
div
and
js
icebp
inc
push
pop
jae
call
es
pop
mov
div
cmp
mov
adc
scas
test
jp
aad
add
sub
das
inc
push
xor
std
(bad)
les
mov
ja
mov
sbb
lea
dec
(bad)
shl
hlt
nop
inc
or
in
mov
sahf
mov
in
addr16
adc
jmp
mov
inc
scas
retf
mov
push
mov
aaa
addr16
xor
sub
add
les
mov
lock
sbb
mov
scas
call
or
ja
push
mov
push
maskmovq
imul
pop
ret
ds
aaa
adc
or
mov
mov
call
add
cwde
xchg
outs
ror
adc
mov
mov
jg
xchg
mov
and
movs
dec
adc
push
sbb
out
sbb
jo
inc
cmp
(bad)
adc
mov
cmp
inc
arpl
mov
add
mov
rcl
dec
mov
dec
adc
pop
call
fmul
push
mov
out
iret
xchg
jo
xchg
bound
adc
or
mov
dec
shl
mov
imul
sbb
jge
inc
mov
xor
mov
stc
popa
iret
jp
pop
sbb
mov
mov
popf
(bad)
repnz
retf
movs
and
or
pop
data16
pop
pop
adc
fsub
and
or
dec
(bad)
mov
fsincos
pop
pop
sti
inc
cmp
ins
dec
fucom
int3
add
add
es
loop
retf
shr
rol
arpl
adc
xor
pusha
xchg
retf
mov
movs
imul
pop
pop
adc
sbb
jae
or
ins
xchg
add
and
scas
addr16
in
arpl
push
rep
add
jp
jne
jmp
fstp
popa
push
into
push
xchg
das
mov
aam
aad
mov
les
mov
pop
sbb
pusha
jmp
test
popa
push
fst
cwde
adc
cmp
sub
das
stc
pop
test
ffreep
cmp
xchg
mov
pusha
cmp
cwde
nop
js
add
sub
pushf
xor
frstor
fld
lahf
jbe
pusha
push
sbb
je
and
imul
cmp
popf
loope
or
and
mov
scas
repnz
psubsw
lahf
sti
repz
in
sub
addr16
inc
stos
scas
jns
jo
xchg
sti
popa
mov
test
push
mov
repnz
ss
push
dec
sahf
mov
lods
adc
pop
cmp
nop
(bad)
popa
mov
cmps
dec
clc
ret
and
mov
in
sahf
push
add
mov
xor
mov
and
sbb
mov
xor
retf
popa
mov
xchg
adc
cmp
pop
sub
jo
leave
and
jmp
out
mov
stos
mov
sti
out
fdiv
in
xor
pop
jns
mov
mov
ret
arpl
inc
(bad)
mov
or
int3
sbb
retf
es
jae
dec
inc
inc
das
nop
inc
dec
xchg
(bad)
in
mov
movs
movs
adc
cmp
dec
pop
push
neg
out
and
sbb
movs
dec
jle
cwde
fs
pop
(bad)
outs
xor
ss
xor
in
dec
js
(bad)
mov
imul
mov
fwait
jo
add
push
retf
sub
stos
add
mov
sub
mov
mov
fwait
add
dec
jb
imul
add
push
iret
inc
stc
mov
jg
or
int3
jnp
ds
jno
sub
pop
pop
jmp
sar
(bad)
pop
inc
mov
xchg
into
std
adc
xchg
mov
xchg
call
and
fsub
and
mov
in
int3
sub
es
sub
push
enter
outs
or
or
rcr
dec
movs
fidivr
mov
mov
lock
mov
pusha
mov
popf
ret
jae
es
xchg
retf
inc
mov
lds
or
and
aam
jmp
rol
xor
adc
ss
aad
mov
arpl
lds
shr
mov
sbb
mov
dec
in
mov
fdivr
cwde
lods
lds
in
gs
jnp
pop
mov
stos
daa
ins
or
push
(bad)
lea
or
mov
cmovb
call
xor
xlat
or
xor
(bad)
and
jb
int
lahf
add
jmp
test
dec
dec
pop
cmps
adc
scas
add
and
or
jmp
cld
hlt
inc
in
pop
dec
xchg
dec
shr
inc
xchg
sub
fld
sbb
or
std
adc
call
(bad)
adc
fiadd
sbb
icebp
mov
or
push
push
jbe
sbb
pop
out
(bad)
ds
in
mov
shl
adc
out
xchg
stc
xor
mov
outs
(bad)
mov
add
jle
push
sar
push
stc
mov
je
imul
lock
pop
adc
ds
adc
cdq
ds
enter
and
lahf
push
or
leave
enter
mov
cmp
pop
les
mov
or
jae
int
and
cmp
sbb
scas
ficom
cmp
xchg
jl
lock
mov
js
shl
addr16
pop
hlt
js
add
repnz
xchg
fs
pushf
dec
std
lods
lods
add
dec
ins
sub
aam
fsin
pusha
sbb
mov
xchg
std
gs
(bad)
imul
stos
or
sar
push
jmp
xchg
fwait
push
pop
adc
shl
loop
mov
(bad)
pop
arpl
leave
add
inc
mov
das
or
push
leave
lock
psubsw
in
or
(bad)
int
(bad)
test
push
sbb
xchg
dec
push
cmp
add
dec
fdivrp
jl
pop
sbb
xor
lods
pusha
cmc
aam
bound
and
into
mov
int3
out
or
and
iret
mov
out
or
mov
loopne
add
lahf
rol
dec
mov
stc
jns
cmp
pop
stc
push
out
and
sbb
cmc
jo
loope
sub
mov
jbe
das
ds
jae
lds
ins
or
and
mov
lea
pop
push
bound
push
sub
fiadd
dec
lds
cmps
in
or
and
push
mov
push
cmps
jb
test
add
adc
ret
inc
add
imul
sbb
jmp
pop
shl
push
cmp
dec
sbb
push
adc
or
xor
lahf
mov
mov
pop
cmp
mov
imul
xchg
push
push
loopne
ficomp
gs
mov
cmp
sahf
cmp
call
adc
imul
mov
mul
popf
push
fs
hlt
stos
xchg
mov
and
dec
jle
jp
pop
fiadd
pop
inc
jle
daa
xchg
int3
ins
icebp
jmp
sbb
shl
int3
mov
and
faddp
push
mov
aam
dec
pop
mov
mov
sub
inc
test
stc
dec
pop
sbb
push
test
aam
jge
jns
and
jno
in
xchg
test
fidivr
fcomi
inc
sbb
jno
adc
int3
pop
jecxz
pop
mov
cli
mov
daa
pop
lods
jmp
outs
xchg
mov
in
xchg
retf
and
(bad)
in
cld
jmp
jg
add
sbb
add
ret
mov
ins
mov
mov
inc
sub
xchg
dec
cld
arpl
cmc
inc
dec
gs
and
psubsb
fdivr
ffreep
out
jbe
cdq
dec
lock
pop
adc
xchg
cmps
mov
push
lock
les
dec
cmp
dec
mov
mov
adc
mov
mov
bndstx
stc
add
adc
mov
mov
(bad)
sub
in
push
or
xor
in
adc
mov
icebp
mov
(bad)
jne
lock
je
fnstenv
mov
push
(bad)
out
fidivr
or
add
dec
jno
mov
or
xchg
lahf
mov
mov
xchg
imul
push
jb
mov
xchg
adc
mov
push
adc
mov
sub
lods
mov
dec
(bad)
or
aad
mov
pusha
sub
shl
pop
stos
mov
jge
dec
mov
jge
cwde
cmps
loopne
inc
mov
adc
fucomip
mov
push
fs
pop
dec
test
ror
sbb
mov
sar
xchg
jp
jae
repz
(bad)
push
daa
(bad)
js
push
xchg
aad
ficomp
fdiv
sbb
cld
push
jg
mov
add
adc
inc
ss
pop
push
sti
leave
jns
repz
cmp
icebp
fadd
mov
out
jg
cmp
cmps
out
bound
jmp
mov
mov
dec
pop
(bad)
cs
iret
sub
pop
xchg
cmp
adc
shr
add
out
jo
xor
mov
mov
rcr
scas
mov
aaa
sbb
bound
fmulp
ficomp
outs
cmp
jmp
push
or
das
sbb
stc
sub
mov
repnz
sar
cmp
cwde
imul
xor
cld
retf
push
outs
stc
jmp
nop
push
stos
adc
mov
push
aad
push
dec
movs
mov
or
test
pop
inc
(bad)
mov
outs
mov
test
cmp
cwde
pop
cmp
push
cmp
(bad)
xchg
inc
ja
mov
push
push
and
dec
addr16
dec
js
jne
ins
loope
fistp
pop
icebp
or
xlat
mov
cmp
mov
mov
add
rcl
inc
cmp
sub
scas
cdq
jo
or
inc
xchg
xchg
inc
adc
ja
sbb
test
or
cmps
aas
mov
mov
cmp
pop
push
pusha
std
test
dec
xor
xchg
xchg
in
cld
(bad)
cwde
inc
dec
nop
fsubr
popa
adc
xor
push
aas
dec
xor
fild
je
loop
pop
pop
aaa
cmps
cmps
pop
neg
retf
movs
hlt
cmps
fs
(bad)
lea
jo
push
sub
add
scas
xchg
in
out
dec
shr
adc
jns
cmp
gs
jnp
or
xchg
lahf
xchg
fwait
jecxz
mov
jecxz
or
xchg
addr16
ds
popf
and
add
dec
inc
push
test
inc
pusha
and
(bad)
je
inc
sub
push
(bad)
movs
stos
popa
pop
(bad)
xchg
popf
outs
pop
add
inc
jns
scas
ret
mov
out
daa
shr
and
cmps
jl
cmp
sbb
cmp
push
inc
retf
and
mov
sahf
pop
fist
mov
ja
xor
cmp
cmp
rcr
pop
push
jge
stos
cmp
dec
xchg
sub
sbb
in
cmps
xchg
pushf
ja
mov
repnz
repz
(bad)
rcl
sbb
push
rcl
out
mov
lds
jae
xchg
pop
les
jp
pop
js
push
ret
ud0
mov
mov
mov
jle
xchg
sti
adc
cmp
jmp
pop
adc
popa
scas
cmp
cmp
xchg
mov
push
jbe
sti
cmp
pop
in
push
jmp
mov
mov
out
push
jns
iret
or
sti
sub
fwait
popf
lock
jb
jb
pop
in
nop
xchg
(bad)
test
nop
movs
mov
icebp
pop
xor
imul
scas
xchg
sub
das
mov
imul
je
ret
or
in
je
cwde
out
out
inc
jle
xchg
ss
cwde
scas
sbb
cs
(bad)
into
in
jmp
pop
fmul
cmp
sbb
lahf
push
cmp
xor
push
inc
pushf
push
sbb
les
(bad)
pop
pusha
and
loopne
pop
mov
fmul
jecxz
cmp
imul
xor
mov
sti
mov
ret
div
pop
les
mov
rcr
dec
pop
(bad)
pop
inc
dec
cdq
adc
mov
adc
add
jns
sti
das
je
jl
and
mov
xor
scas
into
jbe
iret
xchg
mov
pop
cdq
iret
sub
xchg
mov
jb
pusha
lock
ins
jmp
aaa
stos
lock
inc
mov
stos
in
push
cmp
mov
sub
stos
push
mov
ret
loop
femms
(bad)
cmp
mov
sbb
jbe
lods
les
cmp
jns
js
in
in
mov
fwait
repnz
push
or
fldcw
in
add
cmps
fisttp
dec
xchg
or
int
sub
mov
xlat
and
jae
add
pusha
or
fadd
test
sbb
scas
sub
aas
cld
lea
in
push
xor
cmps
arpl
add
adc
lds
in
mov
imul
sbb
jmp
mov
jge
push
mov
push
sahf
(bad)
mov
lock
fdivr
call
inc
inc
jl
stos
popf
jnp
push
mov
mov
mov
test
xor
push
enter
fs
in
retf
outs
repz
call
loop
outs
pop
pop
stc
shr
mov
lods
jl
mov
retf
int3
cmp
hlt
mov
push
adc
fst
adc
mov
jge
mov
or
daa
mul
mov
aad
xlat
icebp
sub
jg
add
add
(bad)
js
jae
shr
push
adc
(bad)
outs
xchg
or
cmp
pop
push
pop
cld
outs
iret
imul
and
xchg
mov
fistp
rol
add
cdq
call
pop
ficom
lods
add
in
dec
jmp
fadd
pop
or
pusha
loop
ins
repnz
dec
jmp
push
xor
ror
and
sub
dec
ds
or
fcomp
hlt
cs
xor
cdq
xchg
test
aaa
dec
nop
xchg
dec
shl
inc
cmp
fwait
lahf
xchg
sub
mov
(bad)
adc
call
mov
retf
cld
mov
movs
and
xchg
adc
xlat
clc
jl
cli
stos
add
test
rol
pop
repnz
fmul
cmps
push
jecxz
sbb
adc
call
jo
or
mov
add
mov
lock
loope
shl
cdq
mov
xor
cld
dec
fucomi
add
(bad)
repz
push
or
sbb
adc
dec
sbb
sub
adc
sub
push
cwde
aas
inc
sub
clc
push
popf
mov
lahf
push
les
clc
fdivr
pop
jle
mov
sti
ja
or
into
sub
xchg
sub
dec
add
aad
pop
js
cmp
(bad)
cmp
out
ins
sar
inc
add
push
jnp
or
ss
(bad)
fidivr
xchg
mov
dec
jae
arpl
iret
dec
or
inc
xchg
stc
adc
jne
int3
sbb
mov
ret
outs
int3
in
icebp
sbb
mov
xchg
stc
js
jno
test
jnp
mov
mov
and
mov
and
pop
inc
jno
pop
xchg
mov
jne
test
or
cmp
push
loop
out
adc
lahf
jo
(bad)
xor
push
mov
inc
dec
xchg
sub
mov
xor
jp
jl
inc
mov
sub
xor
cmps
in
inc
sbb
cwde
movs
dec
in
stos
in
mov
xlat
adc
out
xchg
data16
cmp
cmp
test
xchg
inc
out
(bad)
out
fstp
loopne
sub
ror
in
pop
outs
mov
xor
int3
push
push
mul
test
push
into
xchg
push
add
aad
and
repz
mov
and
outs
sbb
add
add
jns
out
test
out
aad
daa
cmps
in
test
pop
sbb
(bad)
mov
int
or
dec
mov
xor
clc
repz
lock
ins
mov
pop
cmps
inc
mov
sub
jb
inc
pop
xor
inc
xchg
mov
iret
test
retf
jno
jecxz
cmp
push
mov
retf
mov
sbb
push
dec
in
xchg
inc
jae
loopne
adc
out
add
inc
push
sub
push
jl
push
cs
push
out
xchg
arpl
mov
inc
pushf
mov
arpl
pop
push
rcr
pushf
dec
fdivr
fbstp
pop
jbe
icebp
call
push
dec
cmp
mov
dec
mov
jae
retf
popa
xchg
mov
xor
push
popa
sbb
and
xlat
jl
fsub
xor
or
ficom
cwde
fidiv
nop
pop
jp
mov
xor
leave
loop
bound
jne
cmp
mov
cmps
pop
jmp
add
cmps
mov
jne
mov
les
fcom
mov
loop
loopne
inc
cld
enter
pop
cmp
lahf
sahf
mov
loope
push
in
cmp
fwait
adc
and
test
dec
out
adc
fadd
stos
aad
inc
in
arpl
add
aam
pop
xor
jne
nop
out
push
sbb
xchg
cmp
adc
push
push
jp
jle
lahf
in
xchg
xchg
adc
push
xchg
scas
cmp
sub
xchg
retf
xchg
jge
xor
cmp
xchg
and
mov
push
jp
ss
dec
push
dec
jo
mov
jmp
retf
enter
or
adc
cmps
addr16
sub
mov
scas
pop
in
mov
add
aad
nop
add
mov
int3
push
inc
mov
add
sub
movs
push
stc
mov
mov
mov
sbb
(bad)
push
int3
mov
cmc
and
mov
push
(bad)
inc
xlat
adc
mov
repz
pop
push
jb
xchg
stos
cmps
rol
popf
lods
sbb
aas
mov
sub
shl
or
int3
rcl
inc
nop
sahf
or
or
pusha
adc
cmp
sub
fisub
imul
lahf
mov
outs
fstp
jno
inc
scas
(bad)
mov
mov
push
fdivp
add
nop
hlt
push
cmp
pop
pusha
lahf
adc
sub
inc
inc
and
(bad)
call
out
movs
lahf
out
mov
enter
and
pop
rcl
imul
jle
add
outs
addr16
je
rcl
xor
jl
outs
repz
dec
pop
fdiv
jmp
xchg
scas
push
(bad)
out
fcom
pop
mov
sub
sbb
cmp
mov
mov
cmp
ror
ret
sub
cwde
ss
imul
or
shl
or
jne
mov
mov
sbb
(bad)
int3
jo
push
add
mov
hlt
mov
inc
jae
push
retf
movs
xor
int3
in
mov
xchg
and
push
aam
dec
dec
push
test
sub
int
fcmovnbe
sub
xchg
or
out
xchg
nop
loopne
sub
mov
add
pop
adc
dec
jmp
xchg
jae
lahf
jbe
sub
mov
xchg
jo
push
ja
popa
leave
adc
pop
dec
outs
call
dec
sbb
das
(bad)
fs
xor
pop
loop
call
xor
cmps
lea
mov
movs
mov
(bad)
(bad)
stc
cmp
dec
(bad)
mov
mov
adc
cmps
inc
push
and
jno
xor
es
outs
lahf
pop
popa
movs
out
movs
dec
adc
(bad)
sub
js
dec
ret
jbe
and
sbb
cmps
addr16
jge
fidivr
add
cld
pop
jns
out
and
mov
pop
jl
mov
popa
adc
imul
movs
call
jp
pop
cmp
inc
sbb
and
fcom
or
cmp
in
movs
sbb
and
sbb
aaa
out
cmps
fdiv
sub
int
push
sub
jno
adc
inc
(bad)
lods
mov
mov
mov
fidiv
aas
and
stos
inc
sub
(bad)
cmp
je
pushf
jnp
and
icebp
dec
popf
arpl
add
jae
into
das
test
add
push
stos
mov
test
div
call
fadd
dec
pop
mov
mov
imul
aam
ja
mov
pop
aam
ficom
shl
xor
fistp
lds
arpl
movs
xor
popf
fsub
bound
sahf
test
dec
stc
test
xor
or
les
cdq
and
and
rcr
push
enter
repz
or
dec
fbstp
(bad)
or
out
pusha
cmps
dec
scas
jb
aaa
mov
stos
enter
push
div
sbb
add
fdiv
ins
adc
add
repz
fbstp
cwde
lea
push
add
mov
hlt
stc
pushf
(bad)
sahf
(bad)
push
xchg
les
dec
jmp
aad
cmp
mov
sub
cdq
pop
lds
fdivr
fcom
push
inc
mov
bound
(bad)
jg
jecxz
adc
dec
inc
ins
xor
pop
add
jle
xchg
jb
pusha
jecxz
mov
or
push
mov
test
outs
and
repz
mov
xchg
sub
mov
add
(bad)
out
fidivr
inc
cmp
fistp
out
sub
add
cwde
cli
pop
js
mov
xor
and
mov
adc
dec
xchg
shl
cmps
lods
mov
jns
inc
inc
xchg
in
mov
add
mov
pop
outs
dec
and
sub
fwait
aas
sbb
adc
add
push
int
jg
cwde
xor
jbe
retf
fwait
inc
jno
pop
retf
cmp
mov
stos
cmp
fwait
xchg
je
inc
in
xchg
xchg
cmps
add
push
(bad)
pop
pop
aam
mov
sub
sbb
fdivr
ret
sub
jmp
imul
cmc
imul
pop
mov
cmc
ins
or
fdivr
(bad)
dec
in
iret
mov
rol
movs
jae
scas
cmc
sub
xchg
jp
repz
mov
xchg
dec
jmp
mov
mov
ret
cmp
mov
mov
mov
ror
popf
fnstsw
dec
arpl
stos
mov
push
cmp
add
mov
cmp
cwde
mov
xchg
sub
frstor
mov
and
bound
out
(bad)
mov
data16
mov
push
mov
inc
sub
(bad)
std
scas
ret
loop
push
inc
js
ins
xor
or
lods
inc
sbb
and
xchg
mov
mov
fist
cmp
pop
(bad)
push
sbb
(bad)
gs
mov
mov
test
retf
out
xchg
cld
shr
mov
sub
adc
dec
and
stc
mov
jmp
jo
aad
push
xchg
sbb
sbb
xchg
fwait
ins
dec
je
test
sti
mov
sub
xor
cld
lds
dec
ret
ja
jno
push
cmp
pusha
xchg
loop
push
jl
jp
pop
imul
jmp
in
mov
cmp
arpl
sbb
adc
mov
or
jmp
test
adc
clc
scas
xor
add
mov
mov
adc
or
xchg
fsub
and
xchg
jle
xchg
dec
(bad)
in
jne
or
shr
push
sub
pushf
cmp
out
lea
and
les
cdq
out
in
push
mov
fdiv
push
and
movs
push
xchg
fsubr
xchg
mov
int3
add
test
xchg
sbb
jnp
fcomp
fdiv
xor
in
pop
adc
add
dec
mov
dec
and
push
mov
fmul
or
js
adc
std
shl
or
pop
adc
mov
sbb
sub
test
sub
push
enter
int
fwait
hlt
xlat
mov
enter
out
sbb
(bad)
jae
fisttp
mov
test
mov
cmp
xchg
mov
sbb
jle
addr16
xchg
or
push
mov
mov
cmps
xchg
lods
adc
ins
dec
inc
dec
out
not
fadd
cld
dec
je
jbe
ja
sbb
mov
nop
push
shl
call
mov
movs
movs
sub
push
mov
mov
ror
inc
push
les
or
nop
sub
inc
pop
mov
mul
test
mov
jb
xchg
jg
and
in
xchg
repnz
pop
xor
repz
addr16
fstp
hlt
xchg
rol
push
dec
in
popf
sbb
inc
(bad)
xor
loop
in
shl
dec
add
push
(bad)
push
mov
xlat
dec
mov
sub
xor
pop
fs
aaa
shr
stos
cli
push
jbe
and
pop
cmp
push
xchg
frstor
jp
fnstsw
(bad)
out
cmp
not
ja
sbb
jmp
or
inc
xchg
mov
push
aam
dec
cld
sbb
in
ficomp
shl
in
sub
sbb
out
jnp
loopne
cdq
xlat
cwde
mov
in
push
iret
mov
inc
out
es
mov
push
or
sub
push
leave
ss
popa
sub
mov
(bad)
jge
adc
jo
in
stos
daa
or
pop
ins
sti
add
sti
pop
test
cmc
push
fnstcw
hlt
sbb
cmp
enter
sbb
dec
fnsave
jle
push
cmp
imul
xchg
mov
cmp
push
or
and
test
cmps
mov
loopne
stos
retf
cmp
repz
jg
jmp
lock
in
sbb
add
cmps
push
rol
sub
les
jg
hlt
or
sub
xchg
adc
movs
mov
pop
in
push
add
stc
sti
xor
and
push
aam
sar
sub
(bad)
jno
daa
sbb
jns
and
xchg
sbb
addr16
imul
pop
sub
pop
jns
push
fist
cmp
and
dec
pop
sub
out
mov
push
dec
xchg
jno
loope
mov
inc
lock
sbb
sbb
jle
imul
(bad)
xor
xchg
inc
cmps
in
fsubr
sbb
das
pop
jp
mov
cmp
cmps
lea
(bad)
dec
adc
sub
mov
mov
repz
cmp
loopne
loope
sti
pop
aam
sti
sti
(bad)
pop
sbb
aam
into
test
xchg
mov
in
aas
rcr
or
outs
rol
jno
test
sub
push
pop
push
int
pop
test
and
or
mov
repnz
mov
adc
into
xchg
jns
(bad)
out
retf
jecxz
cmp
and
cld
cdq
in
cli
mov
rcl
bound
add
jecxz
in
int3
addr16
mov
adc
leave
stos
inc
dec
sub
sub
in
mov
xor
fimul
pusha
and
ins
out
and
pusha
mov
cwde
mov
mov
and
sub
push
push
inc
adc
sub
fadd
and
push
int
cdq
pop
or
pop
push
shl
add
jmp
pop
stc
xor
push
(bad)
bound
inc
push
dec
addr16
rol
push
loope
jmp
test
add
xor
adc
(bad)
push
mov
add
xlat
cmc
ins
rcr
xor
pushf
sbb
out
push
or
js
mov
je
sub
mov
add
add
gs
inc
aaa
dec
push
jecxz
inc
push
push
xchg
ret
cmp
xor
cmp
or
xchg
sbb
out
fidiv
(bad)
cmc
sahf
pop
cmp
in
das
in
mov
add
fimul
(bad)
scas
es
adc
je
dec
cwde
clc
lods
jg
ret
xor
loopne
iret
aad
addr16
or
mov
fiadd
push
rol
cli
add
and
sub
push
fcomp
mov
pop
sub
shl
sar
mov
mov
addr16
stos
or
and
jns
push
and
sbb
fisttp
call
test
jl
jg
nop
add
mov
mov
loope
xchg
push
inc
dec
jnp
mov
or
(bad)
xor
retf
test
pop
or
sar
fisubr
push
xor
and
cmp
ret
mov
inc
mov
call
rcr
and
mov
rol
fistp
xchg
xor
push
cmps
dec
out
or
ret
nop
pop
gs
les
in
pop
call
fcmove
adc
jecxz
fcomp
ss
(bad)
hlt
mov
jne
or
fsub
cmp
(bad)
xchg
mov
pop
push
or
push
in
mov
mov
test
push
aad
shl
sub
cmp
clc
sar
jbe
test
scas
in
pop
test
or
xor
and
pop
in
outs
or
cmp
sbb
fisub
cmp
or
pop
jg
fcmovbe
inc
mov
test
popf
xchg
mov
out
pop
(bad)
mov
mov
cmp
sbb
jae
and
inc
div
push
push
test
jno
test
jae
scas
es
jbe
fdiv
in
push
rcl
pusha
mov
js
inc
aam
and
out
fwait
xchg
xchg
enter
int3
lock
(bad)
cmc
cli
sbb
stc
mov
sbb
iret
es
cmp
and
jl
ins
ffreep
mov
retf
lods
cs
int3
mov
lahf
out
aas
dec
xchg
cmp
push
push
adc
mov
pop
jl
mov
mov
adc
ror
or
clc
les
clc
jg
leave
mov
jle
jbe
dec
stos
in
jmp
js
retf
into
dec
mov
cli
adc
push
jle
lock
mov
scas
inc
fld
ins
add
cmp
inc
or
outs
ins
inc
cmp
mov
mov
mov
mov
pop
(bad)
inc
mov
outs
fwait
test
sbb
ss
dec
mov
mov
test
mov
popf
popf
sub
fiadd
into
out
jmp
pop
push
(bad)
push
and
mov
and
mov
cmp
push
add
jnp
test
cmp
or
mov
aam
or
pop
sub
add
sub
aad
mov
dec
sbb
cdq
inc
jl
mov
and
sti
mov
and
in
std
mov
adc
inc
call
xchg
xor
(bad)
sbb
retf
dec
or
(bad)
movs
sbb
inc
gs
sub
xor
xor
pushf
and
mov
loopne
add
adc
mov
fnstenv
jge
fild
ins
icebp
or
xor
lea
enter
ret
je
pop
adc
adc
ror
push
les
add
add
inc
inc
add
jecxz
test
mov
xchg
cli
int3
push
mov
xchg
pushf
xchg
gs
rol
sub
(bad)
movs
xchg
outs
das
popa
sub
fidivr
push
xchg
in
sbb
imul
and
jmp
and
pop
mov
jle
outs
sub
mov
mov
sub
inc
cld
lock
mov
sahf
data16
lahf
mov
xor
dec
or
push
gs
clc
xchg
movs
outs
outs
cmp
loopne
aas
inc
fmulp
stos
in
xchg
xchg
stc
dec
xchg
and
inc
or
sub
push
fsubr
ret
in
fcmovb
and
shr
mov
and
and
pusha
xchg
push
and
shl
sbb
xchg
lahf
xchg
cld
inc
stc
or
inc
cmp
xor
aaa
es
lods
pop
sub
enter
fwait
or
out
mov
adc
pop
pop
fild
iret
jnp
loopne
adc
push
fld
cli
(bad)
jecxz
sahf
cmps
test
dec
and
pop
rol
scas
pop
mov
jecxz
pop
jg
xor
or
imul
cmps
mov
xor
sub
outs
(bad)
mov
jns
mov
lock
imul
sub
mov
cwde
test
cld
std
xchg
sub
xchg
xchg
xchg
sti
push
xchg
xchg
jnp
ret
adc
xchg
(bad)
or
pmulhw
and
ret
sbb
pop
lods
ds
fld
movs
arpl
xor
in
inc
xor
xor
sub
inc
jmp
xor
shl
mov
or
xchg
retf
pop
mov
sub
pusha
dec
stos
dec
sub
rcr
pop
test
ja
jb
lahf
out
out
imul
mov
call
outs
fld
mov
loope
push
rol
push
out
fs
imul
dec
or
adc
aad
(bad)
js
inc
popf
xor
dec
scas
pop
lods
sbb
jg
jne
enter
int
mov
jp
xchg
jns
scas
out
adc
pop
fisttp
sbb
jns
mov
add
nop
pop
xchg
ret
sbb
xchg
mov
aas
ret
shl
(bad)
mov
pushf
adc
rol
stos
mov
dec
jmp
pop
push
mov
mov
and
outs
int
ret
mov
neg
out
jae
ret
and
dec
pusha
xchg
jae
(bad)
out
jmp
and
adc
mov
or
jg
loope
pop
pop
shl
jle
gs
jmp
xor
adc
gs
xchg
push
mov
dec
adc
pusha
pop
xchg
cmp
add
fisttp
xor
dec
pop
dec
xchg
dec
mov
jne
push
inc
fsubr
mov
lahf
outs
int3
mov
popa
cmp
add
cmp
and
mov
loopne
add
push
adc
inc
lock
adc
out
pop
js
xchg
movs
(bad)
xlat
inc
xchg
mov
pop
cmp
sbb
mov
in
addr16
xchg
add
and
cmp
push
mov
and
and
out
dec
dec
nop
vprotq
test
in
test
jmp
mov
jns
xor
mov
lods
mov
sub
bound
jmp
add
in
(bad)
sti
and
mov
stc
idiv
mov
mov
(bad)
push
push
push
push
lds
pop
inc
jmp
(bad)
jl
out
jnp
adc
fidiv
push
lods
sbb
cmc
pop
dec
xor
jns
add
shr
mov
retf
mul
inc
mov
sbb
jbe
push
lods
pop
inc
out
xor
dec
xor
pcmpeqb
ins
outs
mov
pop
aas
push
rol
push
sub
les
popf
add
inc
into
outs
xchg
jmp
fld
pusha
adc
adc
xchg
jl
dec
cmp
rep
sub
stos
(bad)
cmp
test
lahf
mov
data16
sahf
jno
dec
aad
(bad)
cmps
fidivr
inc
dec
push
retf
add
push
push
adc
jb
pop
jae
dec
jge
ins
out
jmp
into
push
add
and
scas
scas
jmp
nop
cmps
sbb
xor
cmc
mov
push
pop
pop
cwde
pop
fisubr
cmp
in
pop
dec
scas
mov
jecxz
sbb
sbb
jbe
dec
shr
adc
rol
sbb
inc
mov
jecxz
push
retf
movs
add
pushf
mov
out
popf
cmp
mov
dec
push
cmp
inc
loopne
sbb
in
jno
xchg
pushf
push
cwde
rol
out
dec
sub
push
test
push
add
jecxz
ret
rcr
dec
lds
pop
or
pop
ret
daa
jecxz
cmp
mov
js
mov
mov
jg
mov
xor
into
cdq
xor
iret
ret
xchg
(bad)
pop
inc
cmp
dec
push
push
outs
popf
popa
in
pop
cdq
fld
mov
jmp
mov
push
sub
test
push
sbb
ret
sbb
loope
push
jmp
mov
mov
and
xchg
aaa
fisttp
sub
sahf
or
inc
in
jge
movs
adc
setae
mov
add
in
push
add
test
das
shr
jge
lods
fnstsw
xchg
mov
sbb
(bad)
adc
xor
(bad)
into
pop
xchg
pusha
lahf
ins
cli
stc
xor
leave
outs
xchg
inc
cmp
and
push
test
xor
stos
jae
fisub
je
xor
(bad)
lahf
(bad)
popa
dec
std
or
cld
and
pusha
test
mov
inc
mov
pop
jno
fst
push
loop
push
mov
pop
loope
mov
enter
out
jmp
xchg
xchg
pop
aaa
jge
adc
jge
cmps
sti
into
(bad)
daa
xchg
ds
rcl
js
cmp
pop
fwait
rcr
xor
xor
pop
xlat
repz
lods
mov
movs
fnstcw
aaa
clc
jae
xchg
and
scas
adc
int
xchg
sbb
push
push
je
jo
sbb
fistp
(bad)
xchg
push
dec
rcl
ret
xor
inc
jl
add
jbe
fs
xchg
ds
pop
sbb
mov
scas
inc
ja
and
or
ss
dec
mov
loop
repnz
mov
cmp
pop
jae
pop
fcomp
jbe
jle
push
mov
loope
sub
inc
jae
jb
into
(bad)
call
leave
push
push
mov
and
mov
stos
mov
sbb
clc
leave
jp
cwde
inc
push
cmps
call
xor
xchg
imul
add
outs
adc
mov
push
dec
stc
push
shl
cmp
sub
lods
lods
daa
retf
rol
jmp
clc
iret
in
int3
push
sahf
jge
xor
out
or
mov
mov
out
mov
jae
and
adc
(bad)
xchg
stos
xchg
iret
push
ss
call
jae
inc
stos
mov
movs
clc
test
mov
cdq
fisub
xor
or
dec
add
pop
sub
cdq
inc
xchg
adc
pop
call
fcomip
es
ficomp
rol
jge
loop
jecxz
add
(bad)
dec
sbb
push
cwde
fsubp
push
aas
and
cmp
push
sbb
or
xor
adc
rol
test
popf
loope
cmp
pop
ret
lahf
jmp
xor
cmp
jns
cmc
sbb
pop
cmp
or
or
sbb
mov
inc
sar
stc
xor
push
outs
xor
or
push
xor
xchg
mov
sbb
push
mov
adc
(bad)
xor
mov
popf
scas
mov
rcl
outs
jb
mov
repnz
jl
test
out
sub
leave
adc
pop
inc
enter
lea
xchg
ds
icebp
int
jb
stos
popf
or
ds
mov
lock
xchg
mov
cmp
push
pop
(bad)
sbb
iret
xor
imul
es
clc
add
int3
aas
pop
outs
sub
cmps
sub
rol
pop
pop
int
add
mul
push
cmp
jns
push
inc
push
mov
mov
mov
mov
test
push
sbb
adc
shl
and
sbb
lds
inc
cmc
cmp
movs
fs
xchg
and
iret
adc
dec
xor
and
push
dec
(bad)
or
(bad)
mov
test
in
mov
add
mov
lea
std
stos
and
sbb
jmp
(bad)
pop
aad
jmp
inc
pop
cs
fs
xchg
jb
adc
or
or
gs
(bad)
cld
ins
adc
adc
fmul
mov
mov
gs
sbb
ret
adc
pop
push
push
retf
das
sub
xor
js
inc
sub
sbb
lea
dec
div
mov
or
mov
into
shr
adc
or
mov
(bad)
in
mov
and
and
jmp
data16
dec
clc
retf
push
movs
sub
jno
loop
push
cli
adc
push
retf
imul
dec
ret
(bad)
cld
jmp
idiv
jge
push
cld
mov
and
jb
and
jge
loope
fmulp
shr
sub
stc
ins
and
adc
jge
ret
xor
int3
cld
imul
daa
in
int
pcmpgtb
fcomp
mov
das
cmp
pusha
call
push
mov
jp
out
adc
adc
in
leave
test
mov
pushf
mov
mov
cmp
jb
add
push
or
in
ror
push
in
pushf
popf
mov
ds
ja
inc
ds
int
mov
inc
mov
pusha
push
jbe
xor
push
xchg
mov
test
push
jecxz
adc
adc
rol
shr
hlt
xchg
test
pushf
loope
jmp
cmp
pop
mov
xchg
adc
xchg
dec
mov
sbb
jnp
aas
mov
repz
xlat
aad
in
aas
xchg
push
repz
outs
jns
jb
xchg
fisub
pop
(bad)
ins
test
mov
pop
xchg
(bad)
ret
test
pop
mov
inc
das
cmc
ret
jno
mov
test
jp
fild
adc
iret
movs
iret
cmp
and
out
sbb
mov
inc
lds
int3
addr16
xchg
daa
xchg
adc
repz
and
call
push
aam
nop
adc
inc
or
imul
add
arpl
loope
repnz
jns
jg
test
mov
iret
adc
jge
jmp
adc
lock
xor
cmp
adc
sbb
pusha
and
in
push
sbb
jae
jo
cli
jge
jno
xor
data16
or
jmp
cmp
mov
(bad)
xchg
cdq
sbb
ror
jo
leave
mov
cmp
sub
enter
jno
sbb
scas
stos
leave
and
xor
pop
xchg
(bad)
push
ret
js
inc
inc
int3
mov
mov
or
repz
sub
jbe
pop
cmp
je
fmulp
xchg
mov
shr
dec
clc
movs
hlt
fist
jae
sbb
test
mov
or
sbb
test
mov
xchg
out
dec
inc
add
inc
data16
sbb
lods
xchg
cmp
arpl
fist
add
retf
cmps
cmp
es
out
fwait
(bad)
std
and
inc
cld
aam
aad
les
call
(bad)
xchg
push
nop
inc
movd
mov
push
aam
dec
test
jle
out
das
arpl
mov
or
scas
int
ror
fistp
add
jmp
inc
push
mov
adc
sar
outs
jge
pushf
jmp
bound
xor
push
into
out
ffreep
push
sub
clc
jo
aam
or
mov
add
push
out
xor
test
pop
test
sub
pop
lock
js
and
pop
add
rol
call
cmp
loope
aam
mov
js
data16
jmp
mov
pop
push
in
inc
iret
(bad)
aad
add
in
mov
and
sbb
sbb
dec
push
scas
stos
adc
addr16
rol
push
in
adc
(bad)
jae
inc
sub
xor
mov
inc
dec
das
or
rcr
xchg
jb
dec
in
hlt
inc
icebp
lahf
outs
ror
mov
sub
xchg
xor
sub
fnstenv
loope
and
cmp
movs
and
retf
adc
imul
push
dec
das
stc
mov
jne
ret
sub
mov
cmp
pop
test
push
mov
xchg
jle
lds
adc
or
out
sahf
add
pop
jo
hlt
xchg
out
xchg
mov
fwait
pushf
test
mov
mov
jge
ds
mov
js
inc
bound
mov
loop
mov
inc
popa
sahf
or
mov
dec
sbb
bound
add
mov
xchg
in
pop
mov
mov
jl
sub
int3
inc
dec
dec
out
hlt
not
add
mov
int3
and
jge
imul
out
dec
div
dec
test
cli
sub
mov
arpl
fs
xor
mov
or
das
jne
es
push
jne
(bad)
fistp
mov
mov
sub
jno
xor
dec
adc
jmp
inc
aaa
push
sbb
mov
jmp
jmp
jnp
hlt
adc
inc
scas
xchg
jbe
adc
out
aad
hlt
daa
in
daa
mov
scas
add
and
xor
imul
stos
sbb
sub
mov
or
scas
push
pop
stc
add
out
cwde
or
call
cwde
addr16
push
sbb
dec
fwait
ja
neg
iret
xchg
xchg
scas
imul
sahf
aam
push
push
or
pop
call
fnstcw
cli
add
add
ret
ror
mov
in
xor
pop
push
mov
jo
sbb
leave
mov
push
pop
mov
(bad)
(bad)
pop
jecxz
(bad)
mov
dec
adc
icebp
(bad)
xchg
mov
sub
jle
push
fidivr
das
or
outs
cwde
mov
sub
cmovne
(bad)
scas
and
popa
jne
mov
and
xor
ror
inc
loopne
sbb
xor
retf
int3
xor
or
and
lea
sub
push
push
sbb
mov
xor
xor
cld
add
ins
xchg
cmc
jmp
push
arpl
(bad)
or
mov
mov
jmp
or
jae
(bad)
(bad)
pop
iret
xchg
in
stc
mov
call
clc
mov
fnsave
add
test
cmp
mov
rcr
inc
ds
push
jge
sbb
jno
ins
fwait
mov
push
and
arpl
lods
enter
cmp
ror
(bad)
jle
repz
aam
cmc
and
inc
ret
enter
mov
sub
scas
push
xchg
add
test
inc
cli
into
movs
mov
mov
hlt
in
mov
pop
stc
inc
repz
in
int
jle
jl
mov
add
popf
clc
adc
mov
jno
push
js
lahf
mov
mov
aaa
aaa
int3
pop
dec
xlat
mov
enter
push
pop
push
mov
jno
add
mov
cmps
pop
mov
xor
and
adc
fadd
jo
fistp
imul
call
push
popf
test
inc
xor
inc
pop
cmp
mov
mov
dec
mov
xor
or
pushf
xchg
sbb
cmp
sbb
mov
stos
sahf
int3
mov
sub
out
test
dec
stos
mov
call
jmp
mov
hlt
mov
push
ja
ins
pop
in
movs
arpl
fwait
cmp
clc
mov
retf
push
mov
aaa
sub
ins
cdq
add
sub
lods
push
cmovnp
data16
mov
or
loop
dec
ror
movs
jmp
dec
xchg
test
mov
lods
enter
cmp
jmp
aas
hlt
sar
inc
cs
adc
lods
cmp
mov
push
daa
ds
outs
enter
sbb
stos
inc
loope
add
push
ss
movs
leave
cmp
stos
stos
dec
movs
(bad)
imul
outs
mov
jbe
aam
push
fwait
fwait
cmp
jns
pop
sub
sub
pop
aad
stc
lds
cmp
jb
dec
xor
pusha
loope
imul
rol
mov
xchg
aaa
inc
push
mov
inc
sub
aad
vprotq
mov
in
pop
sbb
add
mov
(bad)
mov
mov
lock
outs
jge
sbb
or
fdivr
retf
(bad)
and
jp
sub
mov
popf
hlt
and
push
adc
adc
mov
push
inc
jmp
loop
cwde
xor
pop
mov
ret
push
daa
cmps
mov
fdivr
jnp
xor
fisttp
cmps
sbb
leave
push
cmp
cmp
cmc
jp
pop
push
dec
pop
shr
and
push
ds
fdivr
dec
push
push
jmp
push
les
test
dec
dec
pop
fild
fs
xchg
push
stc
ret
xor
xchg
jae
jl
cmp
sbb
popf
(bad)
lea
or
rol
lods
leave
inc
dec
dec
mov
push
push
cld
aad
int3
sar
mov
sbb
mov
or
jns
pop
(bad)
lahf
loop
cmp
adc
ss
movs
es
rcl
sub
cwde
mov
js
push
and
aad
jg
xchg
outs
sub
xor
mov
fxch
in
aam
push
inc
lods
mov
cdq
jb
(bad)
pop
and
dec
pop
lock
outs
icebp
jne
jns
xchg
mov
inc
test
sbb
jmp
jne
mov
setle
xor
pop
lods
movs
imul
popf
adc
shr
in
jne
and
(bad)
or
ss
cmovle
mov
iret
test
fistp
mov
in
add
cmp
mov
mov
fld
sbb
fsubrp
sbb
call
(bad)
mov
pop
sub
mov
in
fidivr
dec
cmp
xchg
mov
mov
aam
cmc
mov
int3
mov
push
lds
inc
in
push
shl
data16
loope
test
out
call
out
lahf
es
adc
inc
inc
mov
push
popa
pushf
push
push
imul
push
lds
enter
xchg
in
push
jo
jge
test
pop
dec
imul
dec
jecxz
je
cdq
sub
cmp
cmp
dec
jl
sub
pusha
into
nop
inc
fstp
add
retf
sbb
jg
and
cmps
adc
aaa
jmp
jmp
out
add
lahf
call
xchg
sahf
scas
jno
fld
push
cmp
pusha
not
and
clc
or
sub
test
dec
movs
ficom
push
sbb
fiadd
stos
loope
push
fimul
out
out
sub
xchg
or
(bad)
pop
xchg
jg
mov
add
dec
inc
iret
jmp
inc
xchg
aam
mov
inc
inc
fsubr
push
lds
sub
loop
mov
call
fsubr
les
mov
push
xchg
push
mov
out
add
mov
dec
push
das
jmp
dec
jbe
iret
ins
test
out
xchg
push
jg
xchg
push
call
and
enter
dec
test
sbb
sub
mov
(bad)
and
adc
inc
lods
sub
push
shr
aas
pop
mov
icebp
and
mov
and
cmp
mov
cmps
adc
jmp
pop
sub
push
push
ds
pop
loope
or
iret
lock
out
sub
and
stos
add
movs
adc
outs
arpl
mov
rcr
inc
adc
xchg
push
jle
pop
pop
test
repz
push
clc
mov
jecxz
push
and
(bad)
clc
test
call
pop
or
pop
ret
sub
popa
inc
das
jbe
sbb
loope
add
imul
dec
mov
mov
sub
in
pop
and
sbb
dec
mov
lods
stc
lock
outs
or
dec
dec
in
mov
xchg
jo
sar
push
aas
lahf
lahf
fidiv
push
pand
lods
mov
or
mov
fdiv
jne
frstor
inc
mov
cs
sub
xchg
lds
cmps
mov
xor
jl
gs
out
jmp
mov
fs
mov
xchg
std
(bad)
es
cli
pop
shl
sbb
icebp
(bad)
pop
lods
sbb
pop
mov
xor
fidiv
icebp
pop
pop
in
push
mov
ror
push
leave
outs
outs
cmp
not
je
jb
(bad)
icebp
mov
and
jle
inc
sub
push
sub
mov
mov
or
fmul
mov
and
es
pop
lods
jb
loop
retf
xchg
inc
sub
je
sub
mov
(bad)
push
sahf
or
push
lods
pop
test
scas
movs
push
or
pop
sbb
fst
pop
add
test
rdtsc
adc
fdiv
inc
fwait
mov
push
add
or
in
pushf
ret
and
imul
ds
out
xchg
shr
in
adc
xor
or
mov
stc
sbb
fld
loop
pop
mov
fist
xor
imul
lods
xchg
rol
loopne
add
mov
stc
in
xchg
xor
xlat
add
loop
pushf
mov
xchg
add
or
lahf
(bad)
jnp
(bad)
jb
lea
cmp
xor
lds
aam
loop
xchg
leave
sub
lds
stos
mov
sbb
les
(bad)
sbb
je
jno
mov
movs
pop
pushf
inc
dec
jo
fmul
and
gs
cmp
cmp
cld
pop
in
scas
outs
jns
out
pop
in
cdq
add
outs
arpl
push
pop
dec
jae
xor
jge
jmp
add
fs
dec
inc
sub
popa
bound
scas
mov
add
add
push
push
imul
arpl
add
xor
inc
add
mov
mov
fbstp
ret
pop
pop
sti
cmc
int
arpl
test
popf
stos
mov
test
xchg
scas
push
ins
mov
mov
test
enter
lock
(bad)
push
loope
repz
mov
push
mov
inc
call
loope
test
jnp
pop
(bad)
repz
mov
xchg
pop
int
shr
sub
(bad)
shr
or
ja
movs
movs
and
ja
cmps
add
push
mov
xchg
shl
add
push
mov
call
rcl
mov
or
dec
enter
dec
and
cmps
ficom
enter
fsubr
dec
inc
xchg
clc
mov
sub
sbb
in
pop
add
pop
inc
pop
push
popf
cmp
popa
mov
sub
push
inc
jmp
cmp
(bad)
ja
(bad)
retf
(bad)
icebp
and
push
lods
ins
int3
aaa
mov
fwait
xchg
dec
dec
mov
lods
sbb
or
sub
jb
push
fsub
leave
imul
cld
sub
bound
sbb
push
out
jl
push
call
repnz
sub
jne
mov
ss
xor
cdq
repnz
mov
mov
sub
icebp
clc
mov
dec
mov
mov
pop
pop
mov
daa
pop
lods
aas
xor
repz
test
dec
cld
push
aaa
es
sbb
mov
pop
leave
(bad)
loopne
rcl
enter
jg
xchg
xchg
cmp
loope
mov
mov
fwait
lock
sub
or
mov
gs
movs
stos
adc
or
cmps
fdiv
ins
sbb
daa
mov
mov
pushf
xchg
sub
std
sub
in
or
stos
or
aas
add
shl
xchg
and
loop
cmp
adc
test
jns
xor
sub
xor
fcmovu
loopne
in
mov
mov
test
test
jo
sub
(bad)
mov
stos
and
popa
dec
dec
sub
push
dec
mov
popa
pop
lods
push
in
call
xchg
mov
mov
mov
lahf
fild
daa
mov
push
fwait
pop
cmp
pop
cwde
aaa
sbb
inc
es
mov
into
pushf
dec
les
hlt
stc
push
ss
mov
jb
mov
xchg
pop
retf
pop
mov
imul
jle
jl
cmps
cs
out
mov
addr16
mov
daa
add
cmc
mov
sbb
fnstsw
arpl
imul
cli
stos
xor
mov
or
dec
pop
jmp
mov
mov
and
pop
dec
stos
mov
inc
dec
sbb
mov
sbb
fiadd
push
push
mov
bound
sbb
rol
jbe
repnz
hlt
rcr
imul
ja
or
popf
xchg
add
inc
push
jb
(bad)
in
adc
sub
cmp
push
inc
ror
adc
sbb
(bad)
mov
sbb
mov
cmp
xor
xor
mov
jae
mov
jp
cmc
cli
out
test
je
out
cli
pusha
stc
cmps
hlt
jp
std
cmc
div
aad
jo
mov
mov
inc
inc
popa
jmp
nop
mov
scas
call
push
pop
adc
stos
sub
cmps
or
sbb
sub
fwait
dec
inc
mov
clc
mov
mov
fistp
adc
xchg
loop
lods
leave
inc
jmp
push
cld
ins
xor
repnz
lods
or
jbe
pop
shl
retf
sub
dec
dec
mov
add
mov
loop
push
out
dec
add
and
mov
or
ret
je
imul
and
mov
popa
sub
and
add
pop
or
movs
pushf
out
loope
mul
nop
lods
xlat
and
xchg
and
dec
lea
pop
and
rol
mov
lds
ror
test
je
jl
stc
out
aam
les
in
inc
cmp
sub
dec
fld
xor
fwait
mov
loopne
lods
or
adc
mov
inc
mov
test
xlat
xchg
ret
sbb
out
outs
lahf
inc
sbb
ret
or
pop
in
xchg
jmp
jp
jne
push
frstor
sbb
dec
cmp
in
push
xlat
shr
mov
dec
inc
fild
cdq
and
mov
add
hlt
adc
or
inc
pop
movs
cmp
inc
add
inc
test
xor
or
jle
sbb
fcmove
sub
outs
fwait
pop
jne
fdiv
mov
stos
fidivr
retf
shld
call
xchg
push
jmp
inc
loop
not
scas
push
adc
fld
jge
lods
dec
das
xor
add
inc
pop
push
add
cmp
or
sbb
retf
test
cmp
jl
ins
or
ss
adc
gs
enter
jne
xchg
fbld
dec
mov
sub
xor
daa
add
adc
(bad)
cld
jns
jmp
push
sbb
ins
xchg
sbb
push
xchg
jne
push
sub
jmp
dec
shr
push
idiv
mov
popa
lods
div
ror
popa
xor
sahf
and
daa
inc
loopne
xchg
mov
and
lahf
adc
test
mov
aad
pop
push
hlt
cmp
sub
or
int3
imul
xchg
and
dec
mov
fidiv
(bad)
data16
test
xor
stc
ja
mov
fucom
adc
std
mov
mov
xor
sbb
mov
add
or
test
pop
adc
jae
dec
mov
ins
repnz
dec
adc
pop
pushf
or
(bad)
or
cwde
sub
lds
jo
fsub
fcomp
inc
add
pusha
push
sbb
sar
hlt
xchg
push
pop
in
loop
and
fisub
push
sbb
dec
xor
sub
xor
mov
cmp
adc
fisttp
into
rcl
rol
cmp
push
loop
sub
addr16
pop
ja
ins
jb
cmps
inc
in
inc
sub
movs
pop
outs
push
lock
ror
test
dec
jns
push
ins
mov
fsub
iret
push
pop
clc
mov
mov
imul
jmp
sbb
dec
ret
adc
xchg
xchg
jbe
cmp
mov
cmp
cmp
inc
test
(bad)
cli
xchg
test
(bad)
push
mov
(bad)
(bad)
xlat
(bad)
push
lds
xor
cmp
pop
aad
sub
les
jno
mov
inc
outs
(bad)
mov
loop
jno
jp
mov
xchg
cmp
(bad)
mov
cld
xor
popa
push
jb
les
mov
inc
mov
in
js
(bad)
push
rol
pusha
xchg
xchg
stc
push
fist
ins
das
mov
sbb
bound
ja
or
and
adc
cmp
int3
call
xchg
push
das
push
daa
ffreep
sub
and
mov
push
pop
movs
or
inc
out
int3
cmp
mov
in
cmp
cmp
sbb
ja
xchg
mov
ficom
ret
into
push
jmp
push
dec
jno
xchg
dec
jecxz
frstor
out
dec
sar
inc
pusha
xor
lahf
push
out
js
cmp
or
push
push
xlat
test
in
adc
pop
dec
push
test
movs
add
or
pop
xor
dec
or
das
(bad)
retf
cmp
mov
in
pop
or
cld
aam
cwde
inc
mov
dec
inc
xor
or
aad
cmp
cwde
xor
and
pop
dec
jmp
clc
ret
div
out
or
mov
(bad)
and
or
add
(bad)
mov
mov
adc
jbe
jns
out
outs
pushf
cmp
and
push
(bad)
cmp
xor
cmp
sbb
sub
idiv
mov
xchg
jae
mov
movsx
jle
outs
cli
sub
xchg
pop
pop
mov
shl
inc
xor
and
mov
sub
mov
jae
or
dec
pop
js
mov
sar
mov
test
xchg
push
(bad)
fld
mov
mov
lock
push
pop
push
pop
push
shl
out
mov
(bad)
outs
fsub
dec
add
dec
test
pop
dec
mov
loop
test
shr
fisubr
or
sbb
pop
call
xor
sub
nop
scas
cmps
dec
mov
or
push
iret
mov
cld
add
mov
(bad)
in
or
fist
jnp
inc
xor
fs
and
(bad)
shl
leave
enter
cmp
dec
mov
pop
dec
mov
mov
fmul
pop
mov
adc
push
ins
or
ret
fdivr
jmp
imul
sub
pushf
sub
test
scas
xchg
mov
push
push
ja
and
push
repnz
dec
or
icebp
icebp
sbb
cmp
pop
test
push
pop
push
xchg
clc
lods
dec
inc
scas
add
es
pushf
ins
(bad)
cmp
mov
mov
adc
xchg
jle
retf
iret
sub
outs
aam
xor
gs
or
pop
jbe
xchg
cmp
mov
jle
jb
in
fidiv
stc
hlt
test
inc
leave
in
pop
shr
aam
add
sbb
push
add
and
mov
cmps
sbb
into
jg
ins
cmp
push
jmp
and
(bad)
cmp
ret
jmp
icebp
jp
out
and
sbb
mov
push
fsubr
or
add
push
cmps
ror
dec
pop
xor
xchg
js
or
mov
cwde
das
xchg
shl
sar
mov
clc
(bad)
mov
xor
xchg
pushf
xchg
inc
int
mov
mov
xor
je
test
jae
lea
push
sub
fsubr
scas
pop
xor
dec
(bad)
adc
mov
in
dec
dec
pop
stc
sti
mov
mov
sub
jl
mov
pop
cmp
dec
inc
mov
neg
jae
adc
ror
retf
inc
pop
pop
cwd
cli
xor
fdiv
cld
pop
cmp
pop
pop
xchg
jno
ret
xchg
sub
fstp
aad
movs
pop
nop
mov
mov
sbb
jno
repz
push
lahf
movs
stos
ftst
jo
clc
pop
stc
mov
movs
shl
adc
pop
push
jmp
xor
jp
mov
dec
in
push
xchg
mov
xlat
fdivr
adc
mov
push
iret
mov
mov
mov
mov
mov
jns
div
xor
mov
pop
mov
sub
or
cmp
fdiv
cmp
inc
add
cld
ret
scas
xlat
adc
aad
js
out
fisubr
jecxz
mov
sub
loope
or
sbb
add
ror
xor
iret
pop
jbe
into
fstp
adc
add
retf
movs
mov
jae
add
ret
xor
mov
sub
aam
outs
dec
mov
imul
loopne
je
xchg
xor
dec
xchg
dec
leave
pushf
pop
mov
jno
div
popa
cmp
mov
xor
js
rol
aam
ds
jne
dec
aaa
ss
mov
add
dec
inc
das
mov
popa
movs
ds
inc
mov
xchg
jns
jo
or
add
movs
and
mov
push
pop
in
shr
sub
test
fiadd
not
pop
mov
imul
push
xchg
xor
pop
mov
fmul
outs
add
into
push
aad
cmp
sti
popa
jg
xor
push
adc
or
inc
pusha
push
fwait
in
adc
je
(bad)
(bad)
xor
fwait
adc
xchg
jg
in
xor
cmp
fmul
sub
fwait
aaa
adc
jb
enter
test
arpl
imul
mov
jp
sub
cmp
test
push
mov
push
iret
retf
push
jo
push
pop
cli
shl
sbb
sbb
scas
cld
ds
push
leave
scas
xchg
xor
test
xchg
jno
popa
aas
xchg
xor
cmp
inc
cmp
sbb
retf
sbb
fmul
data16
cmps
cdq
inc
scas
fs
sahf
or
retf
loope
loopne
mov
fld
mov
mov
jmp
lahf
add
pop
bound
push
push
jae
jl
rcr
mov
mov
inc
mov
imul
ret
sub
out
push
mov
adc
push
dec
leave
add
jae
inc
pushf
sbb
dec
lock
nop
imul
stc
cs
call
(bad)
lock
outs
dec
pop
popf
push
cmp
mov
call
mov
adc
mov
push
pushf
out
(bad)
faddp
push
or
xchg
daa
mov
add
mov
xor
in
bound
mov
xchg
adc
cdq
mov
or
sub
adc
ja
or
inc
mov
dec
sbb
nop
adc
shr
or
and
sbb
es
cmp
jg
fwait
jmp
fsub
loope
pop
cmps
rol
jne
push
dec
cmp
cmp
pop
pop
cdq
xor
mov
fsub
inc
jnp
cs
sbb
jbe
mov
les
and
(bad)
pop
and
push
aam
stos
lea
test
popa
int3
xchg
call
pcmpgtw
or
sbb
scas
dec
inc
icebp
movs
mov
pop
repnz
mov
pop
mov
(bad)
ficomp
adc
inc
push
lds
pop
call
xchg
outs
(bad)
cli
jno
push
call
fldenv
sub
in
(bad)
pusha
in
add
mov
rcl
shl
cld
cmp
les
pop
rcr
daa
mov
idiv
add
daa
add
adc
test
outs
inc
or
ds
sub
mov
inc
pop
jmp
dec
adc
ficom
imul
sbb
out
popf
cmc
out
mov
in
aad
aas
mov
dec
inc
push
call
jl
adc
or
pusha
imul
add
daa
daa
cld
jle
pop
lea
js
sbb
pop
in
movs
loop
loop
inc
inc
mov
stos
hlt
fnstsw
inc
dec
pop
push
je
xchg
xchg
js
out
outs
arpl
out
or
cmp
das
push
mov
cmp
mov
test
neg
mov
loop
jae
ret
pop
daa
std
test
dec
arpl
mul
cld
lea
jno
mov
mov
jmp
jns
in
addr16
sahf
pop
jmp
inc
idiv
push
jno
push
xor
lods
mov
mov
loop
pop
and
neg
jae
addr16
jne
arpl
sub
mov
aaa
stos
jmp
pop
(bad)
cli
adc
(bad)
repnz
sbb
repnz
sbb
cmp
mov
mov
push
lock
pop
ss
enter
(bad)
fwait
iret
mov
call
sub
sub
dec
sahf
pop
popf
jecxz
xchg
aaa
shl
xchg
nop
jl
lahf
imul
ds
nop
imul
jbe
xchg
in
mov
pop
das
sbb
mov
mov
sub
into
out
arpl
ret
pop
inc
jmp
mov
aam
(bad)
mov
or
mov
mov
xchg
into
xor
sub
and
dec
(bad)
cmp
aas
mov
movs
xchg
test
fistp
push
dec
cmps
lock
out
dec
rcl
outs
or
mov
inc
mov
jnp
push
loope
lds
add
idiv
pop
xor
dec
fucomip
cmc
or
cmp
fwait
out
jbe
in
stos
xchg
push
sub
paddsw
ret
push
out
inc
js
test
mov
and
test
test
jge
in
cmp
cli
cmps
cmp
ins
push
cmc
xchg
cmp
inc
fcom
stos
cmp
sbb
ss
jg
scas
mov
adc
in
push
call
fstp
inc
ins
adc
and
cmp
xchg
cmp
xor
fiadd
sbb
xor
fs
xchg
imul
mov
sbb
cmp
or
and
xor
fsub
or
push
pop
rcl
xchg
jmp
pop
push
mov
xor
pop
ins
mov
stos
xchg
repnz
push
rcl
mov
in
mov
sahf
and
out
sub
pop
push
lds
push
pushf
loopne
ins
push
popf
cld
lods
call
imul
lahf
fld
sbb
adc
inc
mov
fcmovnbe
jle
cli
xchg
(bad)
aas
int3
sar
retf
fwait
pop
leave
fldl2e
push
mov
mov
pop
jmp
mov
push
ds
dec
out
cmp
loop
sub
idiv
cmp
repz
sbb
(bad)
xchg
clc
mov
inc
xchg
fsub
or
sbb
or
(bad)
ja
mov
xlat
mov
ins
stos
cld
movs
mov
scas
jecxz
sbb
jnp
test
bound
ror
lods
cmps
cmp
mov
mov
mov
push
scas
div
cli
(bad)
js
sbb
shl
fsubr
sahf
add
dec
mov
xor
lods
mov
(bad)
mov
mov
add
(bad)
cmp
in
cmps
jo
loop
ror
nop
pushf
int
fcom
xlat
retf
dec
xor
fimul
je
neg
xor
imul
mov
ins
out
fistp
pop
and
out
rcr
rcr
cld
icebp
popa
icebp
je
mov
imul
popa
repz
xor
jge
mov
mov
or
mov
inc
stos
push
popa
hlt
sub
mov
fcmove
cli
dec
ins
mov
inc
sbb
pop
adc
sub
out
push
das
inc
in
cmp
fcomp
cmc
in
dec
pop
test
mov
jne
or
jbe
cmp
(bad)
mov
fstp
xchg
test
ret
adc
(bad)
mov
inc
cmps
fist
jp
sahf
arpl
push
xlat
std
stos
nop
sbb
in
jb
xor
cld
push
sub
popf
retf
pop
jns
ss
out
inc
mov
sahf
(bad)
add
jmp
sar
sahf
push
stos
jge
arpl
cmc
or
(bad)
mov
add
cli
add
cmp
sub
ds
dec
aaa
stc
jae
adc
mov
add
ss
int3
in
cmp
cmp
pop
jmp
mov
add
cli
inc
shr
ret
test
jl
lahf
ja
jl
outs
js
jmp
pop
adc
dec
mov
fmul
cmp
xchg
inc
or
push
outs
andnps
test
jecxz
jno
outs
mov
jbe
test
xchg
dec
pop
xchg
pop
aam
sbb
shr
jae
stos
stos
fnsave
xor
dec
ficom
std
jmp
mov
inc
(bad)
jge
rcl
jge
enter
arpl
std
mov
test
add
jnp
jae
shl
cld
sbb
clc
int3
dec
rcl
arpl
popf
xchg
out
inc
jl
sar
add
dec
test
add
xchg
lea
xor
pop
leave
sbb
lds
adc
sub
mov
dec
cmp
mov
mov
test
mov
shl
(bad)
mov
adc
sbb
fldenv
(bad)
xlat
mov
sar
cs
inc
xor
push
cwde
aas
gs
scas
cmp
pop
leave
or
jg
iret
loope
daa
ret
dec
push
mov
sbb
mov
ds
sub
sbb
sbb
daa
mov
mov
jmp
ins
loop
fisub
cmp
(bad)
dec
pop
ins
push
jns
or
cmp
fisttp
jb
into
addr16
div
inc
xchg
dec
jne
and
rol
push
lahf
and
sub
push
int3
icebp
dec
test
xchg
cli
mov
int3
xchg
mov
(bad)
in
inc
dec
test
push
mov
fadd
ds
fdivr
jecxz
test
mov
jle
push
ret
aad
add
sbb
sbb
inc
adc
mov
je
(bad)
sbb
or
popa
mov
xor
and
outs
pop
(bad)
pop
inc
xchg
push
dec
or
cdq
gs
push
mov
fisubr
sub
sub
jo
mov
adc
pop
mov
jg
pop
in
std
out
push
jmp
jle
xchg
and
adc
xor
imul
jo
xchg
mov
mov
cmp
call
jo
adc
xor
inc
out
jl
mov
dec
test
and
cmp
dec
fnstcw
movs
xchg
shl
push
sar
js
dec
adc
dec
(bad)
iret
(bad)
pusha
repnz
push
retf
(bad)
add
nop
out
rcr
or
add
mov
jb
stos
popf
inc
imul
std
aad
(bad)
and
pop
xchg
sub
push
sbb
inc
push
add
push
push
mov
and
xor
aaa
dec
fdivr
out
cmp
loop
add
adc
outs
sahf
push
dec
jbe
test
ret
push
addr16
cmp
add
pop
add
jmp
or
sbb
mov
(bad)
sbb
add
pop
mov
(bad)
mov
pop
ss
je
or
adc
and
xchg
push
xor
(bad)
(bad)
ds
or
into
inc
inc
cmp
adc
ror
inc
(bad)
sub
fst
rcl
cmp
jne
mov
pop
(bad)
ss
retf
cmps
cmc
and
push
add
dec
xchg
call
xlat
fidivr
daa
into
lea
xchg
jns
pop
push
ja
retf
push
mov
sbb
stos
or
adc
adc
xor
mov
sbb
push
push
cdq
or
jge
mov
xchg
sbb
mov
nop
mov
xor
add
ret
or
out
mov
dec
or
jle
mov
mov
xchg
(bad)
leave
mov
psubsb
fwait
add
mov
sbb
xchg
in
push
add
aas
mov
aaa
sti
and
push
jae
and
mov
ds
sub
sti
shr
repnz
lock
push
aad
ss
mov
inc
sub
adc
aas
sub
call
fs
mov
cmp
int
or
add
mov
xchg
push
xor
mov
xor
(bad)
jns
hlt
jl
xchg
mov
fcom
jno
add
aam
mov
xchg
mul
into
xor
jno
gs
dec
mov
aaa
retf
push
inc
sub
push
bnd
leave
jg
mov
scas
cmc
es
fistp
das
sbb
jo
xor
adc
adc
inc
mov
iret
mov
mov
cmps
sub
dec
addr16
xchg
lea
stos
test
test
adc
xchg
movs
retf
inc
xor
movs
scas
popf
and
xor
mov
cmp
xor
lods
test
ficom
retf
inc
sub
ror
frstor
lea
ret
xchg
dec
jecxz
and
push
pusha
in
fimul
out
xchg
sbb
jbe
dec
nop
popa
sub
test
cmp
xchg
sbb
cmp
jmp
add
mov
mov
lds
repz
dec
imul
pusha
sbb
mov
ret
imul
jb
jno
pushf
cmp
push
lds
adc
inc
adc
psubw
xchg
lea
cmp
xor
xor
imul
rol
imul
inc
int3
inc
(bad)
mov
xor
out
pop
mov
ins
aad
ja
fmul
scas
into
fldcw
jns
adc
jl
imul
sub
xchg
pop
inc
mov
pop
xor
pop
hlt
call
adc
scas
sbb
imul
retf
in
nop
ss
nop
mov
xchg
movs
push
cmps
jl
imul
dec
mov
jmp
cmc
mov
cmp
and
mov
fcmovu
cmp
jmp
push
mov
and
mov
ds
sub
push
mov
std
out
stos
dec
add
inc
iret
add
xchg
mov
cld
ins
sbb
dec
adc
popa
add
xor
mov
inc
sub
cmp
shl
jl
push
or
out
push
fist
cs
cmp
push
outs
cmp
adc
mov
pop
pop
dec
xchg
xor
daa
ins
jge
repnz
mov
jne
pop
push
pop
xor
xor
(bad)
cli
push
mov
jmp
mov
xchg
iret
push
arpl
mov
in
mov
push
(bad)
ja
and
mov
cmp
add
push
inc
in
adc
and
push
adc
std
(bad)
push
mov
adc
inc
test
pop
cli
cmp
retf
sub
cdq
imul
inc
ins
push
jne
push
adc
mov
fldenv
xor
out
and
lock
jnp
mov
dec
leave
cmp
aas
icebp
inc
es
push
push
mov
icebp
idiv
jecxz
test
aas
cwde
fimul
enter
pusha
jg
daa
dec
das
mov
dec
stos
mov
mov
pop
inc
inc
cli
pop
retf
push
xchg
sar
daa
loop
fcomp
sbb
xchg
fsub
daa
and
mov
mov
cmp
fld
push
inc
mov
jle
pop
inc
jge
rcr
outs
cmp
xchg
sahf
xchg
test
or
xor
rcr
scas
add
loopne
xor
pop
xor
jnp
mov
in
sbb
cmps
call
(bad)
(bad)
mov
mov
sbb
dec
add
add
bound
or
ins
test
mov
pop
jae
hlt
(bad)
icebp
push
push
jecxz
out
xchg
inc
lods
mov
sub
mov
enter
aas
add
int
mov
push
int
cdq
mov
cmps
adc
xchg
jmp
stc
sbb
(bad)
jle
inc
or
fidiv
(bad)
fcomp
fisttp
or
adc
adc
pop
loop
seto
sbb
mov
div
cmp
addr16
ins
(bad)
dec
ret
pop
sbb
mov
sub
aaa
(bad)
and
int3
clc
mov
fs
and
jmp
popf
inc
mov
sbb
repz
xor
call
and
sbb
ret
test
movs
nop
test
push
mov
aas
cmp
sar
stc
dec
push
(bad)
in
pop
js
int3
movs
inc
fisubr
in
rcr
mov
inc
data16
pop
cmp
cli
mov
es
ret
mov
mov
repz
idiv
aam
xchg
and
push
add
cmp
mov
hlt
dec
push
xlat
mov
shl
add
cmp
inc
jnp
or
movs
ss
fdivr
(bad)
lods
lea
fwait
iret
xor
lea
cmp
stc
jmp
cmp
shl
mov
dec
push
jge
cmc
and
retf
inc
sub
pop
cmp
out
call
add
or
into
mov
push
inc
dec
shr
jecxz
cmp
dec
inc
leave
jmp
movs
pop
cwde
je
sbb
xchg
add
daa
cmp
je
mov
jb
neg
xchg
xchg
dec
call
std
ret
adc
cmp
sbb
popa
cli
sbb
movs
dec
int3
push
(bad)
lea
and
in
bound
pop
push
out
sbb
dec
mov
jg
and
jmp
add
and
mov
dec
inc
loope
stos
jmp
xchg
stc
jmp
test
es
mov
enter
sbb
lea
mov
xlat
pop
jne
mov
scas
aaa
cmps
(bad)
adc
call
push
fucomip
pusha
or
div
inc
std
and
cmps
aad
div
or
cmc
xchg
lods
sub
pusha
pop
cdq
xchg
jmp
xchg
jb
js
or
sbb
mov
and
pop
add
mov
cmc
xor
rol
xor
pop
add
adc
loop
fs
push
scas
sahf
jbe
addr16
mov
int
ror
sub
push
add
xor
pop
in
das
add
(bad)
cdq
jmp
dec
xor
adc
inc
pusha
jnp
(bad)
lock
pop
out
and
fimul
in
xor
movs
sub
rcl
push
dec
movs
or
inc
mov
repz
sub
add
adc
outs
addr16
cs
mov
pop
pop
push
dec
pop
lods
idiv
retf
pop
lds
jg
addr16
imul
into
jecxz
cmp
or
data16
or
pop
iret
popa
pop
push
inc
retf
inc
lds
pop
shr
in
rol
fwait
push
jb
cli
or
and
sub
sub
sahf
adc
pop
sbb
mov
stos
add
push
fcomp
mov
mov
dec
test
in
xor
xor
pop
rcl
(bad)
stc
xchg
js
push
jo
arpl
pop
dec
rcl
adc
xor
loope
mov
mov
xchg
test
gs
adc
shl
pop
mov
pop
xor
mov
das
xchg
pop
adc
jmp
jno
scas
xchg
mov
push
fwait
mov
mov
leave
fild
xlat
xor
adc
add
mov
in
xchg
dec
sub
loope
add
sbb
jo
loope
stos
lods
pop
movs
(bad)
jne
(bad)
addr16
mov
and
adc
inc
mov
clc
fldenv
fistp
push
pop
iret
cmp
inc
push
inc
movs
scas
sub
ror
movs
sub
(bad)
out
lods
mov
lock
fsubr
not
arpl
push
and
gs
inc
(bad)
es
ds
jmp
push
and
ins
or
mov
jmp
push
out
add
mov
sbb
xchg
adc
add
bound
pop
bnd
into
adc
mov
icebp
lahf
(bad)
icebp
call
fdivr
xor
or
xor
and
sub
push
and
fidivr
or
aam
xor
cmp
popa
jg
out
in
inc
dec
dec
gs
call
add
inc
pop
push
cmovp
fmul
sbb
dec
pop
dec
loop
mov
dec
or
pusha
pop
movs
sbb
lods
mov
ficomp
mov
push
cmp
imul
fmul
jo
and
cdq
(bad)
dec
cmp
mov
or
push
xchg
xchg
aaa
add
dec
rcr
je
jmp
xor
inc
pop
dec
mov
jp
inc
inc
or
xchg
push
push
loope
xchg
push
mov
xchg
push
jmp
xchg
pop
pop
loope
cmps
shl
fs
cwde
mov
in
daa
xchg
out
xor
les
neg
push
xchg
fnstenv
mov
mov
pop
xor
xchg
xchg
cmp
dec
movs
ret
clc
and
dec
mov
jmp
mov
ret
clc
dec
xchg
push
sbb
arpl
lods
daa
std
jl
xchg
movs
mov
jg
cld
loope
dec
dec
mov
imul
cmp
cmp
in
xor
mov
add
out
adc
stc
cmp
add
pusha
sub
mov
add
hlt
aam
and
or
or
or
and
daa
ins
(bad)
test
das
enter
rcl
cli
into
xlat
adc
inc
adc
addr16
hlt
popf
dec
dec
jo
rol
pusha
pop
test
es
pop
and
add
dec
sub
int3
fistp
pusha
fistp
xchg
and
mov
dec
test
arpl
inc
mov
cmp
mov
cmp
scas
cs
lods
pop
cli
jle
xor
sbb
and
pop
movs
je
cmp
xchg
mov
cmp
cmp
add
push
xchg
pop
stos
inc
sbb
mov
neg
popf
daa
sbb
in
cwde
pushf
ins
fdiv
neg
and
and
inc
out
test
std
int
xlat
xchg
fsub
fsub
leave
out
inc
imul
aad
(bad)
fcom
dec
fld
or
pop
and
push
out
add
jno
and
mov
jp
add
hlt
add
add
cmc
inc
outs
mov
mov
movs
mov
dec
test
mov
sbb
add
mov
jo
xchg
aaa
pop
dec
jnp
fsub
sbb
xchg
xor
mov
inc
or
out
dec
pop
xor
jb
xchg
(bad)
jbe
sbb
inc
pop
imul
xchg
adc
jle
mov
aam
and
jno
add
and
xor
sub
movs
cmp
repz
jl
loopne
test
push
mov
call
mov
scas
xchg
or
test
xor
push
xor
fs
inc
mov
pop
push
retf
jno
sti
adc
or
lahf
aas
adc
mov
idiv
mov
(bad)
sti
cmc
dec
mov
in
xchg
mov
(bad)
je
push
dec
inc
cmp
inc
jae
cmc
cmps
rol
lock
test
sbb
sbb
fisttp
mov
imul
stc
data16
into
add
pusha
pop
popa
pop
les
inc
cs
mov
inc
call
or
repnz
dec
xor
and
inc
aaa
sti
cmp
pusha
adc
inc
mov
stos
das
ins
mov
inc
(bad)
dec
call
dec
lods
pop
movs
cwde
ss
inc
popa
mov
outs
xlat
cdq
push
xchg
lds
push
cli
js
push
xchg
js
loope
aas
sbb
xchg
or
dec
xlat
or
loope
mov
cmp
adc
imul
xchg
jecxz
pop
mov
add
daa
ror
jo
inc
jae
jp
rol
aad
inc
in
and
and
dec
sub
lods
scas
inc
ret
adc
movaps
popa
std
(bad)
pop
or
lds
xchg
mov
ja
dec
adc
xchg
scas
scas
sbb
push
fistp
lea
in
dec
push
push
xor
(bad)
pushf
clc
mov
cmp
cmc
jbe
mov
jb
frndint
fidivr
pop
mov
stos
ret
mov
sbb
mov
jb
cmc
ja
loop
mov
cmp
dec
rcl
dec
sub
fild
fs
dec
fild
pop
neg
data16
je
push
jb
jle
cmp
mov
cmp
loop
scas
fmul
cmc
sbb
inc
jecxz
je
jae
sahf
ret
in
adc
dec
pop
jl
inc
out
dec
cmovg
or
and
pushf
(bad)
movs
pop
xchg
mov
push
cmp
pop
push
sbb
cdq
enter
cs
sub
test
or
je
mov
pusha
aaa
or
inc
test
out
dec
inc
pop
fsubr
rcr
(bad)
and
repz
inc
in
pop
pop
jbe
mov
lock
popa
pop
sbb
test
and
mov
sub
stos
out
cmp
cmp
scas
imul
mov
cmp
out
jb
ins
mov
cmps
jne
push
sub
pop
enter
jg
je
ret
(bad)
ins
popa
div
inc
sbb
call
data16
mov
pop
test
outs
jp
ja
cmp
push
xchg
xor
gs
mov
pusha
cmc
mov
xor
pop
popa
mov
adc
pop
mov
jg
out
(bad)
stc
lock
call
xchg
mov
push
scas
mov
push
jae
ret
jl
lods
in
movs
xchg
jo
push
enter
(bad)
mov
add
test
jbe
or
add
sub
icebp
and
or
lods
scas
fsubr
jns
enter
push
or
jmp
mov
lock
out
jbe
ins
imul
rcr
cmp
fsubrp
fnstsw
push
stos
adc
pushf
ins
sbb
outs
cs
cwde
retf
mov
jb
mov
dec
inc
add
adc
dec
pop
scas
mov
sbb
movs
je
loope
mov
int
int
ret
add
mov
rcl
cwde
mov
cmc
daa
push
out
inc
(bad)
sbb
xchg
sar
outs
mov
push
sub
mov
inc
or
xor
setno
stc
fpatan
mov
outs
jnp
aas
repz
and
pushf
test
sbb
cmps
adc
aas
ds
jae
data16
mov
ins
xchg
mov
addr16
jne
mov
xchg
inc
hlt
inc
cmp
js
xor
pop
cmp
mov
adc
adc
xor
push
pop
fisub
fwait
adc
push
mov
pop
arpl
xchg
sub
jns
push
ins
ret
sub
repz
or
hlt
(bad)
fs
adc
xor
test
dec
xor
push
push
ja
es
cmps
int3
(bad)
mov
leave
cmp
mov
add
repz
out
xor
hlt
xchg
jge
fcmovu
icebp
cdq
rcr
xchg
stos
xor
lods
sub
in
pop
(bad)
stc
add
fistp
xchg
bound
jmp
js
xchg
mov
xor
xor
lds
int3
cmp
repnz
in
dec
pop
jecxz
mov
movs
mov
int
imul
loopne
dec
retf
repz
pop
mov
sbb
add
ficomp
dec
sub
mov
aam
adc
jge
sar
or
mov
jmp
jmp
mov
shl
dec
loopne
xor
ret
push
push
mov
pop
or
retf
cmp
push
sub
cwde
mov
mov
push
(bad)
xor
test
ret
mov
add
push
push
or
(bad)
ret
inc
loop
cmp
xchg
inc
jno
js
data16
jmp
pop
iret
call
mov
mov
loopne
mov
clc
add
(bad)
(bad)
xchg
es
add
jne
mov
jo
dec
xor
push
xor
ss
cmp
mov
mov
daa
lods
loopne
mov
mov
inc
lock
xor
cld
imul
fs
retf
sti
gs
xor
(bad)
dec
test
in
xchg
mov
mov
adc
retf
das
jne
aam
fcmovu
xchg
lea
push
dec
sbb
dec
jle
ins
jg
sbb
jl
jg
sbb
int
test
enter
aas
lahf
scas
cmps
lods
jmp
mov
leave
adc
sub
pop
xor
lods
mov
jle
pop
(bad)
jb
inc
push
sub
fdivr
in
nop
sbb
cmps
fwait
mov
xchg
cmc
test
enter
in
into
sub
popf
mov
mov
outs
pop
imul
imul
adc
mov
gs
cdq
std
xchg
(bad)
(bad)
scas
push
pop
out
(bad)
xchg
std
jle
or
pop
mov
in
mov
xor
or
xor
inc
loop
adc
push
outs
ja
xor
and
dec
popf
call
iret
push
jae
and
into
stc
enter
adc
(bad)
xor
xchg
cmc
test
popa
inc
cmp
out
and
in
cmp
add
sti
fs
enter
aam
scas
scas
into
cmp
pop
es
cdq
dec
add
jmp
and
lahf
jmp
(bad)
shr
inc
pop
jp
test
rcl
add
rcr
out
leave
sbb
inc
cmp
xchg
mov
lea
mov
sbb
push
push
jg
dec
cs
mov
inc
mov
cmp
dec
and
pusha
jecxz
iret
rol
cdq
adc
add
jge
xlat
clc
out
bound
mov
push
inc
jmp
retf
adc
jns
test
ja
pop
jecxz
mov
pop
repz
add
xor
sti
pop
outs
xchg
mov
mov
sar
sbb
loop
mov
(bad)
cmp
hlt
mov
(bad)
xchg
das
jb
inc
adc
repz
add
data16
mov
inc
jne
fld
sbb
sbb
std
add
loope
adc
aam
movs
rcl
stos
push
add
inc
int3
cs
and
mov
cld
adc
pop
lahf
pop
pop
mov
les
mul
mov
push
call
pop
pop
cmp
ds
push
push
sub
xor
(bad)
aas
add
sti
popa
sbb
mov
cwde
fstp
and
jmp
mov
jno
addr16
mov
test
mov
mov
inc
aad
shr
add
mov
mov
mov
jmp
ss
fidiv
in
push
mov
sahf
hlt
cmp
pop
add
mov
aam
sub
pop
hlt
adc
gs
enterw
and
mul
and
xchg
jb
inc
cmp
cmp
push
sub
jmp
cld
cmc
cmp
aaa
jnp
push
mov
enter
(bad)
pop
repz
pushf
push
daa
pop
cli
inc
in
jecxz
es
(bad)
ficomp
jge
and
xchg
inc
sbb
push
imul
xchg
jno
mov
sub
push
stos
mov
mov
ins
jno
cs
inc
inc
sub
aam
retf
call
ret
mov
mov
dec
dec
mov
jecxz
repz
outs
push
(bad)
js
mov
idiv
in
enter
fstp
out
js
xor
and
dec
dec
add
ja
mov
loope
adc
mov
jbe
adc
xchg
push
or
out
movs
mov
les
add
hlt
in
call
xchg
mov
std
rcl
lahf
sbb
popw
cld
push
dec
or
fild
fnstenv
das
xor
or
and
test
retf
and
mov
out
inc
or
mov
lods
retf
out
cdq
adc
sahf
mov
inc
lds
mov
bnd
shr
movs
les
xchg
jne
add
jle
dec
xor
mov
cmps
inc
fcmovne
faddp
mov
cmp
outs
sub
jle
fcmovbe
(bad)
cmp
sub
shr
jge
xchg
jg
cmp
shl
out
ss
jle
mov
(bad)
int3
dec
les
ss
(bad)
jp
pop
sub
xchg
lods
cli
sub
or
aaa
int3
adc
gs
popf
scas
test
pushf
sahf
idiv
or
mov
push
hlt
xchg
xor
push
loope
jo
sbb
or
arpl
pusha
es
adc
(bad)
jns
jmp
push
xchg
pop
jns
cld
fimul
cmc
in
(bad)
call
arpl
clc
in
les
scas
rcl
cmp
mov
pop
push
jmp
xor
fiadd
cmps
add
add
mov
and
push
sti
push
cmps
pop
sahf
fst
xchg
dec
and
inc
les
fmul
aad
out
mov
les
aad
push
gs
cdq
sub
and
sbb
(bad)
lods
pop
and
or
popa
dec
inc
pop
aad
sub
mov
gs
js
pop
jbe
frstor
cmp
cld
lods
mov
mov
sub
sbb
shl
jns
add
dec
movs
adc
dec
out
jl
fisttp
ret
in
idiv
sar
and
mov
idiv
sub
mov
aad
clc
jns
test
inc
dec
ins
xchg
inc
imul
(bad)
mov
and
mov
xor
xchg
aaa
adc
lock
xchg
push
pop
(bad)
sub
out
or
fldcw
adc
and
push
push
stos
stos
imul
(bad)
arpl
dec
pop
out
int
pop
retf
xchg
sbb
fwait
mov
stc
jno
xor
sbb
stos
push
in
ss
and
les
invlpg
sar
lea
mov
add
scas
jbe
inc
push
jle
or
std
std
and
sbb
test
fcom
and
dec
das
mov
into
gs
mov
test
ja
xchg
push
and
fmulp
push
gs
mov
imul
loopne
les
push
ret
shl
xor
cmp
sti
hlt
add
test
mov
jbe
mov
bound
scas
(bad)
xchg
je
int3
inc
lds
fdiv
sbb
add
loop
mov
popa
xchg
add
mov
loop
pop
sbb
mov
mov
lock
xlat
jae
popf
jl
out
sbb
loope
jmp
cwde
mov
mov
jmp
sbb
lods
mov
outs
mov
jecxz
sbb
shl
jge
push
mov
out
add
fcomip
fwait
mov
mov
sbb
and
fnstenv
jo
sub
mov
xor
ja
and
shr
xor
jp
jmp
(bad)
idiv
or
inc
repnz
jmp
sub
stos
inc
cmps
dec
(bad)
mov
inc
pop
sub
add
or
imul
push
bound
aas
scas
jmp
out
adc
jp
inc
es
int3
fstp
jae
and
hlt
rcl
adc
mov
fs
pop
sbb
fwait
jnp
push
pop
repz
inc
mov
inc
out
je
mov
and
push
dec
nop
stos
cmp
xchg
or
mov
mov
cmc
xchg
push
mov
jg
jle
repz
dec
dec
jle
add
es
pushf
and
or
mov
hlt
mov
mov
inc
xchg
mov
(bad)
jnp
iret
in
rcl
cmps
loopne
imul
imul
std
loopne
or
xor
dec
(bad)
(bad)
lds
fs
daa
(bad)
stos
jge
jns
retf
hlt
xor
push
sbb
icebp
movd
jo
xchg
adc
retf
test
test
push
jmp
inc
test
iret
sub
xchg
outs
in
adc
lods
xchg
jecxz
movs
dec
out
ficomp
sbb
mov
repz
lds
into
sbb
or
mov
popf
mov
push
icebp
jge
out
push
and
into
pop
mov
das
bound
arpl
cmp
in
or
mov
or
mov
pop
or
loope
(bad)
fisttp
cli
pop
(bad)
jg
stos
mov
cmp
mov
mov
imul
sbb
popa
mov
loopne
pushf
sub
stc
pop
call
pop
lea
test
cdq
push
sbb
popf
and
test
xchg
jg
hlt
sbb
jg
test
inc
ror
sar
jo
xor
and
mov
xor
xchg
xor
sub
fstp
fcmovnb
add
pop
ins
ss
mov
cwde
pop
xchg
jmp
push
std
or
lds
add
dec
push
out
pop
cld
or
outs
jno
mov
dec
arpl
push
mov
add
call
xor
dec
and
cmp
test
cld
lods
gs
cmp
jecxz
aad
in
push
outs
push
int3
mov
ret
xchg
sub
sbb
jns
pusha
pop
dec
inc
xor
inc
mov
pop
mov
pop
pop
mov
je
(bad)
(bad)
or
cli
inc
nop
xchg
hlt
jp
fs
rol
fldcw
(bad)
fsubp
mov
int3
push
hlt
or
cld
(bad)
(bad)
icebp
push
fild
hlt
inc
sub
cmp
add
jecxz
mov
fwait
dec
or
jge
dec
sbb
js
dec
rol
movs
aaa
std
xchg
out
mov
adc
js
cmp
in
addr16
cmp
mov
jbe
cmp
retf
retf
pop
xor
inc
lahf
dec
repnz
sub
and
jne
mov
call
dec
sbb
daa
out
mov
pop
sbb
(bad)
sub
in
mov
or
shl
inc
jmp
push
push
xor
jbe
in
add
add
rcr
pop
push
daa
cld
loop
rol
lods
adc
(bad)
mov
adc
lfs
adc
sub
loope
in
sbb
sar
hlt
xor
aam
dec
nop
ret
and
daa
jmp
movs
jge
outs
push
sub
retf
loop
loope
mov
loopne
xchg
arpl
cmps
push
inc
test
call
adc
add
push
clc
aam
jb
mov
ret
int
pop
dec
ja
and
fst
sbb
or
dec
rol
mov
xchg
rol
(bad)
jo
test
mov
inc
xchg
cmp
in
and
sub
imul
mov
bound
sub
fsubr
retf
in
mov
(bad)
or
out
inc
and
(bad)
rcl
outs
inc
xlat
and
push
int3
push
popf
adc
sbb
xchg
push
jnp
mov
xchg
xacquire
and
or
and
lods
stc
scas
sbb
fstp
not
rcl
jmp
mov
add
pop
(bad)
into
fistp
jo
shr
scas
sbb
pop
jae
int3
push
jp
repnz
fs
sub
xlat
fmul
jo
or
push
mov
adc
mov
outs
sub
shl
fldenv
push
add
ret
dec
lea
frstor
loop
dec
outs
enter
mov
sub
jg
dec
rcl
stos
rol
cmp
fwait
gs
dec
jnp
mov
inc
pop
mov
sbb
push
iret
pop
ret
jae
mov
int
mov
mov
sbb
test
sti
fwait
cmps
arpl
shr
sbb
adc
mov
add
xor
movs
daa
mov
cmps
jb
fcmovnu
pop
shl
pop
pop
lar
or
and
sub
and
cmp
add
jecxz
jecxz
pop
ins
cmp
test
mov
pop
test
xchg
outs
xchg
sbb
jmp
pop
dec
sbb
push
es
inc
jo
imul
outs
mov
add
sbb
and
or
xchg
test
sub
fbld
loopne
stos
mov
mov
inc
add
sub
adc
lea
cli
pop
push
lods
add
or
mov
and
xchg
dec
sub
xor
mov
jg
retf
icebp
xlat
imul
pusha
into
xchg
or
rsqrtps
scas
add
test
add
mov
sbb
ins
inc
push
pop
xchg
pop
sub
dec
sub
adc
mov
addr16
xor
xchg
mov
mov
mov
jecxz
mov
pop
xchg
push
add
fcom
add
mov
fidiv
je
fstp
popf
cmp
movs
imul
jge
hlt
jecxz
repz
sahf
daa
or
mov
mov
jmp
xchg
sbb
adc
jg
fstp
movs
dec
push
outs
inc
jg
jnp
fst
call
ja
jge
retf
and
loopne
or
sbb
mul
dec
addr16
sub
in
bound
icebp
pop
addr16
dec
jne
lea
int
xor
add
test
inc
xchg
lods
mov
mov
sub
mov
es
icebp
loope
cmp
push
popf
xchg
push
ss
mov
shl
bound
lea
hlt
mov
xchg
lea
rcl
fwait
or
xlat
mov
cdq
pop
xor
and
inc
pop
into
mov
push
or
mov
repz
scas
daa
dec
xchg
mov
xchg
xchg
jp
inc
dec
(bad)
mov
cmp
std
pop
nop
sub
and
mov
das
mov
or
(bad)
adc
sub
test
push
sahf
daa
adc
dec
imul
jmp
xchg
std
mov
sahf
mov
outs
mov
adc
fsubr
or
std
pushf
mov
aam
ficomp
mov
pop
cmp
jnp
mov
aas
enter
outs
sbb
call
dec
outs
aam
xchg
jmp
inc
shl
loope
jns
icebp
xchg
cdq
inc
cmc
push
gs
std
sub
fcmove
out
scas
mov
fld
xchg
xor
shr
xchg
shr
add
fdivr
and
test
out
sub
jae
daa
jmp
inc
xor
jmp
push
outs
or
mov
fdivrp
push
ins
out
enter
hlt
mov
retf
stos
rcr
inc
add
sti
mov
popf
ss
inc
punpckldq
jb
or
dec
ins
movs
mov
aaa
sub
adc
mov
jle
jmp
xchg
movs
push
mov
cmp
test
xchg
inc
mov
fcomip
push
inc
mov
adc
mov
sbb
jl
cmp
sti
inc
add
les
loopne
loope
cmp
test
mov
ja
adc
vzeroall
xchg
pop
push
dec
xchg
jmp
stos
test
xchg
pop
cmp
inc
fcmovnb
fisubr
push
icebp
les
movs
sub
js
movs
sbb
mov
arpl
inc
mov
mov
aaa
sub
mov
mov
not
inc
adc
call
in
jle
imul
fst
jmp
stos
icebp
push
aad
sbb
dec
sub
and
mov
xchg
(bad)
sti
or
sbb
addr16
mov
jns
push
jp
cmp
xchg
(bad)
pop
imul
mov
into
ins
mov
(bad)
push
jb
jmp
inc
leave
xor
clc
inc
pop
nop
sar
vdivsd
jl
addr16
addr16
inc
cs
std
sub
cld
js
cli
mov
repnz
add
mov
jmp
pop
dec
xchg
frstor
rcr
jge
leave
mov
and
fist
(bad)
in
adc
movs
test
nop
fdivr
cmp
or
stc
sbb
mov
scas
pop
cmc
add
mov
dec
inc
jmp
add
ret
rcl
xlat
sub
gs
pop
mov
mov
stc
add
inc
mov
popf
and
inc
adc
xor
cmp
leave
jno
add
cld
fisubr
fmul
popa
adc
push
pop
sti
inc
arpl
jmp
xchg
sti
add
je
pop
inc
ror
cwde
xchg
sub
xchg
dec
scas
out
adc
mov
dec
fist
add
mov
cmp
and
ror
push
(bad)
sbb
pop
jno
mov
push
in
xchg
mov
ins
xor
stc
mov
sti
xor
pushf
repnz
and
or
xchg
cwde
xchg
fmul
push
sar
ret
cs
pop
pop
or
cld
cmps
mov
pop
xchg
jbe
es
dec
(bad)
or
xchg
xor
mov
aam
xor
xor
jmp
xchg
fs
dec
sbb
in
test
fld
jo
xor
jae
aaa
pop
out
call
xchg
cmp
cld
stos
push
or
mov
movs
xchg
cs
pop
jle
out
lahf
cmp
mov
enter
add
ret
ror
arpl
mov
test
jp
sbb
into
cmp
push
(bad)
inc
in
inc
add
rcr
dec
jno
fcomi
movs
mov
sbb
and
movs
add
sub
mov
cwde
ds
rcr
and
mov
ins
fisubr
gs
movs
popa
adc
jg
or
pop
add
lds
movs
inc
sbb
push
add
xchg
test
and
enter
cmps
pushf
sub
push
adc
mov
cwde
sub
retf
push
sub
(bad)
imul
push
fwait
push
rcl
scas
jle
dec
jae
sub
data16
and
sub
hlt
sbb
mov
pop
idiv
jno
(bad)
sbb
add
loop
dec
cmps
push
lods
adc
cmp
shl
sub
pusha
scas
add
cwde
rcr
ins
jecxz
lods
mov
leave
cmps
mov
jecxz
cdq
inc
adc
popf
ins
jle
cmp
sbb
popf
jno
iret
and
pop
out
cs
jecxz
pusha
add
fimul
sbb
sbb
lods
jmp
test
jp
arpl
mov
push
jle
int3
int3
and
adc
xchg
sar
xchg
int3
mov
mov
mov
into
std
inc
and
aaa
push
outs
xor
mov
adc
jnp
xchg
arpl
enter
mov
inc
xor
js
inc
dec
lahf
(bad)
test
mov
retf
cmp
add
rcr
icebp
in
mov
mov
imul
dec
mov
push
or
call
xor
out
nop
shufps
sahf
(bad)
jbe
fcmovnu
stos
test
xchg
add
and
shl
repnz
push
jle
adc
sub
inc
inc
hlt
add
jmp
loop
or
inc
aas
into
mov
dec
or
into
sbb
and
xchg
bound
loope
jmp
push
mov
push
cmp
(bad)
arpl
inc
in
dec
cmc
in
ss
cmps
mov
jno
fimul
iret
out
mov
dec
ret
mov
ds
pusha
xlat
inc
jae
(bad)
sbb
ins
outs
scas
pusha
push
imul
test
data16
cmp
test
retf
xchg
scas
cwde
imul
mov
(bad)
fnsetpm(287
mov
push
dec
jg
add
jecxz
ja
sub
push
jne
stos
scas
gs
in
xchg
inc
daa
sti
dec
jp
std
xchg
push
xor
(bad)
adc
js
fmul
sbb
and
leave
or
fcomp
xchg
jbe
jle
aaa
mov
mul
loope
push
fild
xor
fldenv
or
xchg
and
xor
mov
fcom
retf
sbb
aaa
pop
rol
push
pushf
xor
imul
xchg
inc
sbb
ja
dec
lock
repnz
adc
ja
sbb
and
movs
xchg
(bad)
and
or
ror
call
in
call
push
test
mov
mov
dec
push
retf
popa
mov
cmp
dec
lods
mov
test
push
pop
pop
or
in
lds
mov
popf
(bad)
xor
pop
sbb
dec
fs
call
mov
stos
clc
add
fbstp
mov
sub
out
adc
pop
loop
jle
fadd
in
jg
out
adc
jbe
xor
inc
cmp
test
adc
sub
repnz
fidivr
pop
adc
out
in
js
popf
cld
jge
xor
ss
adc
xchg
cli
adc
lea
rcr
test
out
push
inc
outs
or
adc
and
adc
sbb
and
cmp
movs
cmp
cmp
and
dec
sti
mov
ret
fst
out
out
(bad)
lods
(bad)
sti
jge
stos
xchg
fild
mov
xor
cmp
pop
mov
jp
outs
lods
outs
aam
push
dec
cs
adc
arpl
mov
add
int
jmp
sar
stos
and
out
push
jmp
and
jbe
in
lahf
and
call
imul
dec
pop
mov
sti
std
test
or
adc
(bad)
ss
iret
jne
icebp
cs
sbb
cmps
fst
cdq
push
and
jl
lods
pop
lea
adc
js
adc
sub
inc
cwde
inc
cwde
mov
pop
mov
add
icebp
push
je
ja
lods
cmps
xchg
push
mov
nop
add
popf
in
sub
mov
sub
jmp
adc
fucomp
test
push
adc
jae
js
xchg
adc
inc
sbb
mov
daa
stc
mov
sub
pop
add
dec
push
pop
add
in
and
inc
neg
mov
push
in
call
cmc
pop
data16
push
or
jbe
inc
fdiv
jno
shl
aas
adc
sub
(bad)
push
mov
mov
ficom
ins
int3
test
cmp
retf
ret
scas
push
mov
dec
fistp
outs
push
dec
icebp
icebp
jp
arpl
jne
test
mov
js
xchg
push
icebp
add
ds
sbb
dec
jle
xchg
push
push
pop
test
test
(bad)
mov
jge
cdq
es
push
loopne
jne
cld
sub
stos
retf
ret
(bad)
jg
dec
stos
scas
xchg
xchg
stos
scas
add
mov
cmp
dec
scas
dec
mov
loopne
out
jns
aam
dec
and
inc
repz
fwait
outs
cmps
sbb
and
cmps
cmp
pusha
jno
aad
shr
mov
pusha
push
out
or
jns
inc
adc
(bad)
mov
pop
stc
mov
jb
movs
jmp
jg
or
rol
sbb
xchg
xchg
pop
lods
out
sahf
in
cld
iret
neg
mov
lahf
xchg
cmp
mov
into
sbb
mov
pop
xchg
ins
cmp
sbb
mov
pop
ins
aaa
rol
scas
pusha
mov
cmp
cmova
xor
dec
inc
lahf
out
push
addr16
or
ins
sti
fimul
or
sbb
in
add
repz
mov
nop
cs
pushf
lock
xor
cmp
mov
and
pop
cdq
or
push
mov
cmps
clc
mov
mov
ficomp
mov
ins
mov
push
mov
cmp
pop
mov
fist
cmp
out
ins
mov
daa
or
mov
push
aam
cmc
add
test
cdq
inc
stc
mov
jge
xchg
test
cld
mov
mov
xchg
push
cs
push
mov
add
cmp
inc
fwait
pop
cmc
adc
pop
mov
cmp
and
xor
dec
jge
ficomp
(bad)
jecxz
jne
mov
imul
cmp
pop
xor
fidivr
aas
out
and
xchg
fist
sbb
lods
mov
add
mov
arpl
popf
pop
sbb
retf
sub
int
sub
ss
inc
ins
mov
adc
loop
pop
js
xor
add
fisubr
lahf
shl
das
cld
jmp
fist
mov
fwait
sub
mov
sub
(bad)
sahf
adc
imul
les
mov
adc
pusha
add
mov
retf
pop
(bad)
jmp
les
loop
xabort
repz
xchg
mov
add
push
pop
ins
jmp
jno
push
jmp
sub
mov
test
xor
or
shr
mov
outs
mov
jge
icebp
jp
push
adc
jbe
mov
bound
sub
and
not
xchg
in
not
fild
mov
shl
mov
pusha
lahf
rcr
or
jae
or
fst
mov
into
xchg
adc
repz
pusha
test
sub
out
out
cmps
movs
sbb
stos
jae
(bad)
test
fbstp
add
ins
and
push
movs
or
test
repnz
ret
mov
fsub
sub
repz
push
push
(bad)
(bad)
mov
dec
mov
push
or
dec
test
cmps
pop
xlat
sub
inc
sub
mov
inc
(bad)
sbb
and
fs
add
sub
push
cmps
inc
mov
js
jl
xor
(bad)
mov
and
add
rcl
add
popf
cmps
mov
push
cmp
loope
retf
pop
and
stc
or
dec
xchg
lods
cmp
rcr
push
nop
xchg
mov
lea
fistp
push
push
stc
test
push
test
icebp
ins
outs
xlat
iret
mov
inc
push
jno
test
ffree
in
in
es
sub
mov
fcom
(bad)
call
cs
stos
pop
in
jno
daa
mov
fstp
mov
xor
nop
or
mov
and
loope
jbe
lods
jg
daa
pop
aaa
mov
in
push
je
pop
mov
jno
iret
repnz
and
dec
cmp
lods
push
push
mov
add
cmp
pop
cmps
gs
in
fdivr
cli
pushf
jl
lds
enter
sub
pop
rcl
imul
inc
enter
and
outs
sbb
dec
hlt
xor
iret
pop
mov
mov
mov
imul
in
ror
jl
and
mov
push
ins
cli
arpl
lods
sbb
iret
stos
xor
lods
scas
jno
sahf
jp
mov
jo
out
push
push
stos
jmp
xor
mov
mov
retf
loop
into
mov
mov
jmp
int3
imul
ret
dec
(bad)
aas
push
repz
ins
cli
mov
and
push
fxch
cmc
shr
jge
push
out
jmp
in
js
pop
and
cmc
and
fiadd
ret
in
cmps
scas
jne
xlat
stos
sbb
cmc
sar
(bad)
(bad)
xor
nop
or
data16
cmp
outs
stos
sub
int3
gs
(bad)
xor
outs
add
sub
not
leave
sub
mov
or
fadd
add
pop
mov
bound
(bad)
and
xor
mov
inc
dec
daa
pop
fcomp
mul
add
int3
mov
fs
lods
mov
addr16
cmps
adc
dec
scas
push
cli
dec
ins
(bad)
sub
ret
call
mov
test
call
stc
sbb
push
mov
jmp
ins
in
pusha
adc
idiv
xor
or
push
xchg
(bad)
adc
add
jb
lea
sub
gs
jae
dec
movs
jmp
xor
push
cmps
mov
(bad)
xor
(bad)
mov
push
lods
adc
sti
or
mov
mov
xor
stc
mov
es
cmp
dec
(bad)
pop
push
stos
mov
lahf
in
(bad)
je
jmp
jo
imul
fwait
jo
lds
xchg
cmp
jo
or
adc
ficom
push
adc
mov
xchg
pusha
repz
mov
rcl
and
inc
add
mov
cli
push
sub
xor
inc
sahf
retf
mov
outs
jo
jo
pusha
jp
add
cs
lock
pop
les
mov
cld
mov
(bad)
data16
sub
in
shr
adc
xor
sar
ja
sti
push
iret
test
nop
gs
(bad)
outs
jb
mov
(bad)
cmps
xchg
xchg
lea
mov
xchg
cmps
sub
stos
hlt
pop
and
inc
push
(bad)
jp
push
pop
add
cmc
icebp
lahf
rcr
arpl
test
call
xchg
xchg
repnz
push
inc
sbb
adc
ret
and
cmp
fcomp
lock
test
mov
xor
add
call
inc
dec
cmps
jmp
dec
pop
retf
repnz
or
hlt
xor
test
fist
ins
fmul
pop
cmc
sar
leave
nop
push
(bad)
cli
push
xor
dec
pop
cmps
fiadd
mov
inc
push
and
add
jae
in
outs
sub
xchg
shr
add
stos
cwde
es
scas
or
xchg
xchg
icebp
mov
retf
gs
jb
jge
xor
scas
fsub
inc
add
(bad)
cwde
sar
mov
push
fwait
mov
sub
call
xor
pextrw
xor
out
jbe
pop
mov
into
clc
pop
jae
enter
mov
cmps
xor
in
adc
dec
add
ret
cs
mov
jb
jge
add
inc
out
sub
sbb
dec
stc
and
pop
pop
lock
push
shr
arpl
in
xchg
or
sbb
mov
jmp
imul
shl
ss
fwait
int3
push
aaa
sub
(bad)
dec
jl
sbb
sbb
or
clc
inc
cs
fs
je
push
sbb
fcomi
cmp
add
(bad)
adc
ror
pop
mov
in
daa
add
aad
stc
or
ins
cdq
pop
cwde
xchg
pop
mov
dec
inc
xchg
cwde
mov
push
enter
clc
outs
inc
cmp
or
fcomp
fisttp
fucompp
inc
clc
dec
clc
push
push
xor
sbb
dec
cmp
push
adc
push
jmp
dec
mov
push
pop
sub
aam
push
or
gs
cdq
scas
ds
xchg
jb
sbb
daa
fistp
and
and
ja
dec
test
movs
movlps
xor
(bad)
fidiv
fimul
xor
icebp
xor
loopne
mov
add
out
imul
push
les
ins
cmp
inc
int
sbb
out
xlat
vaddpd
loope
jmp
mov
sbb
test
imul
cmp
(bad)
xor
mov
lods
push
inc
out
(bad)
cdq
dec
sbb
and
push
adc
mov
ror
dec
sub
cmc
lahf
in
dec
pop
ss
inc
mov
inc
jge
jnp
inc
jbe
jmp
aam
jmp
mov
call
cmps
push
(bad)
sub
pushw
lods
movs
jae
int
cmps
xchg
mov
jo
fist
pop
ficom
fimul
rol
push
inc
xor
mov
loop
push
cld
jg
inc
stc
xchg
xchg
repz
(bad)
push
lds
mov
and
cmps
hlt
dec
or
enter
stos
sbb
jbe
adc
les
and
mov
pop
imul
push
fwait
stc
sbb
and
jg
xchg
fst
jb
xchg
sar
sbb
addr16
out
sub
das
leave
cmps
jns
cs
sbb
movhps
xchg
(bad)
cmp
test
(bad)
enter
sbb
popf
jmp
xchg
jno
fs
or
mov
inc
push
repz
jge
aad
pop
das
jge
in
call
jecxz
xchg
pop
push
test
adc
outs
push
retf
lea
sti
fwait
sbb
sub
sub
in
mov
dec
test
mov
push
out
and
mov
lea
ror
in
cli
cmp
sub
inc
lock
js
mov
inc
mov
fcom
cmp
cmc
jecxz
and
push
jb
inc
addr16
xchg
sahf
xor
clc
int3
loopne
cmc
xor
dec
jo
hlt
test
fsub
pushf
cmp
test
sar
xor
push
mov
jbe
push
lahf
(bad)
mov
and
sbb
inc
test
pop
sahf
and
ss
or
push
(bad)
gs
push
and
jmp
setno
adc
or
push
and
clc
mov
ror
retfw
pop
popa
jge
out
repz
push
jne
cmp
push
sub
in
or
dec
aas
or
mov
jno
sub
addr16
sub
stos
push
imul
std
sahf
xor
fwait
sub
dec
dec
sahf
and
cmps
mov
or
ja
outs
(bad)
ins
(bad)
in
mov
ins
inc
bound
adc
call
and
test
test
mov
cmp
mov
jb
dec
jle
ficom
lahf
aaa
inc
(bad)
lahf
push
pop
inc
sub
dec
add
jg
loop
in
imul
mov
add
xchg
rol
clc
aas
xchg
lds
jp
shl
shr
in
popa
out
inc
imul
cwde
mov
sub
mov
lea
xlat
push
movs
(bad)
in
cmp
sahf
enter
mov
aaa
retf
out
in
shl
in
into
scas
retf
mov
pusha
sbb
mov
inc
or
inc
(bad)
gs
jmp
inc
jns
cmp
inc
ss
popf
hlt
loop
sub
mov
jmp
add
(bad)
cmp
test
push
sub
pop
mov
out
sbb
dec
add
(bad)
mov
mov
pop
mov
pop
adc
aas
je
shl
lods
cmps
pop
mov
cdq
rcr
pop
or
dec
inc
(bad)
xchg
jmp
scas
jo
mov
addr16
imul
sub
into
test
mov
cmps
mov
loop
sti
mov
jmp
xchg
mov
leave
sbb
adc
and
mov
nop
dec
mov
push
cmp
xchg
and
popa
xchg
lds
cmps
fldenv
sub
push
retf
or
in
test
cmp
and
cmc
cmps
push
in
stos
test
mov
aam
sub
cli
cmps
pop
sub
pop
xlat
fidivr
add
mov
mov
mov
xor
sbb
pop
(bad)
fist
lock
xchg
sub
or
outs
jne
jmp
push
lock
fcom
xor
pusha
dec
inc
pop
pop
jbe
and
xlat
imul
stos
div
sub
push
sub
pop
inc
mov
jne
or
push
inc
into
std
cmp
sub
mov
add
test
sub
popf
fs
inc
xchg
or
xor
xor
(bad)
call
mov
loop
mov
shr
dec
sub
imul
jno
adc
jmp
xor
inc
int
xchg
stos
test
js
push
in
pop
je
out
or
add
iret
lea
retf
div
std
stc
jg
int
sti
addr16
inc
jecxz
fwait
mov
push
mov
xchg
mov
xor
mov
xchg
mov
sub
dec
sub
jmp
push
jbe
and
sub
adc
daa
cmp
push
out
loopne
in
xchg
ins
fcmovb
sar
inc
jle
jbe
mov
mov
jecxz
xchg
mov
imul
sti
add
mov
xor
jecxz
sub
daa
sub
ficomp
imul
stos
xchg
xchg
add
xchg
iret
(bad)
xchg
mov
(bad)
lock
fist
lahf
movs
mov
mov
adc
mov
push
movsx
mov
inc
clc
jp
or
ss
repz
scas
push
mov
ret
mov
and
lods
cwde
imul
jno
lock
scas
jmp
jp
jae
test
xor
and
and
test
in
and
and
ret
mov
cmps
fucom
or
(bad)
adc
test
push
adc
adc
icebp
mov
movd
(bad)
pcmpgtw
xchg
adc
lods
dec
adc
adc
je
fisub
(bad)
fdivr
lods
adc
fdivrp
in
dec
add
xchg
imul
es
sar
int
mov
push
leave
stos
mov
cwde
test
popf
rcl
(bad)
jg
dec
cmp
xor
enter
xor
lds
sbb
dec
test
inc
xlat
push
mov
scas
and
mov
ja
mov
loop
mov
xchg
mov
jl
sub
dec
or
push
dec
(bad)
jle
and
cmp
xor
or
ds
inc
mul
and
cmp
pop
movs
iret
dec
ja
inc
mov
shl
test
mov
enter
test
jnp
and
(bad)
movs
push
dec
or
hlt
ds
popa
and
dec
jb
xor
push
fidiv
push
retf
sbb
jmp
jecxz
jne
jo
jo
lea
pop
cli
out
pop
mov
inc
loopne
test
xchg
jecxz
ja
jns
sbb
jo
mov
cmc
jb
mov
cdq
jne
repz
add
mov
test
scas
mov
mov
push
adc
xor
cmc
sub
mov
sub
xchg
lahf
jg
ret
ins
push
test
ret
rcl
jnp
dec
scas
pushf
jge
mov
sbb
jmp
lock
rcr
mov
sub
(bad)
scas
sub
mov
dec
test
mov
xchg
or
rcl
or
psllw
adc
jne
pop
leave
fld
(bad)
add
repz
xchg
retf
enter
fadd
pop
ja
jnp
mov
in
stc
fnstcw
into
sub
cwde
daa
sub
xor
retf
sbb
(bad)
mov
xchg
addr16
sub
xchg
pop
and
imul
sub
mov
mov
imul
jne
xor
mov
je
mov
jge
stos
mov
loopne
in
test
pop
push
pushaw
outs
adc
sub
sub
xchg
hlt
mov
pop
xor
push
mov
xor
psubd
pop
scas
loopne
jl
fsub
dec
loope
xchg
cld
lea
not
adc
add
xchg
fldcw
(bad)
mov
or
imul
sbb
ins
pop
retf
mov
cmps
stos
scas
push
outs
mul
hlt
mov
stos
rcl
pop
xchg
push
je
mov
adc
mov
popf
popf
outs
popa
and
sub
arpl
dec
fidiv
es
jl
daa
repnz
scas
mov
mov
jmp
pushf
cwde
push
push
xlat
jno
push
and
sub
jmp
dec
cwde
jb
mov
sub
xlat
das
sub
push
jno
call
(bad)
push
lods
pushf
(bad)
dec
or
cld
sub
inc
arpl
dec
inc
and
ins
mov
(bad)
mov
out
cdq
push
push
inc
not
push
out
pop
es
imul
mov
lods
jmp
dec
jne
and
test
mov
fist
movs
sbb
push
pop
out
and
daa
adc
retf
ss
ror
or
cmps
inc
aam
cmp
fwait
mov
rcr
push
loop
adc
(bad)
in
dec
push
add
outs
icebp
(bad)
xor
repz
test
adc
mov
add
das
xor
cld
outs
shl
xlat
in
sub
arpl
inc
or
lods
shl
aad
mov
mov
add
inc
lahf
call
cs
ror
nop
leave
aaa
cmp
iret
stc
test
inc
pop
pushf
cdq
in
xor
or
adc
sub
mov
repnz
dec
adc
jb
mov
div
fstp
hlt
xor
cmp
jle
jl
packsswb
bound
push
sbb
stos
das
sbb
mov
mov
push
xchg
or
rcl
or
jae
inc
pop
cmps
pop
test
pop
sahf
pop
adc
adc
lea
adc
inc
sub
mov
jg
sbb
sub
arpl
dec
sbb
mov
mov
std
pusha
and
mov
loope
sub
and
push
mov
(bad)
mov
add
cmc
mov
test
pop
arpl
addr16
test
lods
mov
mov
enter
int
or
cmp
sbb
inc
push
repz
int
mov
inc
push
idiv
adc
or
out
mov
sbb
fdivr
push
fcomp
cli
movs
mov
int3
pushf
fdiv
pop
lock
and
mov
adc
adc
xor
pop
inc
or
mov
xor
mov
cmp
aam
mov
loopne
dec
add
(bad)
pushf
or
sbb
sbb
push
jb
imul
xor
ins
push
imul
or
pop
inc
xchg
iret
and
pop
push
mov
test
xchg
xchg
sub
inc
mov
mov
sub
addr16
icebp
cmp
jg
stos
stos
and
in
ret
pop
int
mov
push
sar
call
jo
cmp
movs
cmp
jno
test
hlt
aas
cmc
or
push
mov
pop
cmps
push
iret
cmp
and
jmp
test
dec
mov
ja
mov
enter
xchg
jno
push
ret
(bad)
xor
mov
enter
inc
push
cli
xchg
inc
inc
movs
or
sahf
dec
pop
dec
hlt
aad
aas
sbb
jne
daa
push
test
repz
cmp
jp
push
std
sbb
jb
sub
icebp
jns
xor
adc
pop
sub
ret
and
mov
dec
mov
js
or
mov
mov
ds
fdivrp
dec
mov
into
(bad)
leave
fmul
xor
push
add
push
adc
dec
sub
shr
iret
mov
fptan
mov
fld
retf
and
fs
gs
add
rcr
fsubr
cmp
popf
mov
nop
(bad)
mov
dec
mov
mov
jne
fwait
inc
stos
cwde
mov
retf
inc
nop
add
ins
jle
clc
pop
xlat
stc
in
test
bound
and
imul
xchg
out
ret
mov
add
push
pop
les
inc
adc
dec
jg
test
enter
and
inc
mov
fimul
dec
mov
dec
and
jmp
imul
push
out
mov
std
push
sbb
cdq
addr16
rep
hlt
sbb
fs
push
rcr
cdq
popa
retf
and
xlat
xchg
cld
hlt
popf
ret
sub
ds
jecxz
sub
loopne
xor
daa
call
lea
out
ds
xchg
sub
iret
jae
pop
es
or
cdq
scas
sbb
test
pop
loop
aad
sbb
adc
mov
sbb
jecxz
repz
(bad)
ret
push
fstp
push
sar
jo
addr16
inc
cwde
cli
mov
imul
fwait
out
cmps
mov
ret
push
xchg
cmp
imul
sbb
adc
adc
xor
div
mov
push
out
rcr
jne
xlat
(bad)
fisubr
icebp
lods
cmps
cmp
pop
jmp
add
and
push
xor
and
jne
push
sub
mov
pop
movs
xor
ror
cdq
or
mov
cli
cmps
ins
xor
daa
and
mov
fldcw
xor
and
icebp
mov
and
mov
sahf
push
(bad)
mov
add
mov
inc
(bad)
mov
icebp
fcmovbe
sub
out
push
mov
inc
outs
pop
scas
inc
call
add
sbb
xor
lods
out
pop
test
xchg
xchg
dec
rcr
imul
nop
pop
mov
xor
sti
fadd
imul
daa
push
mov
frstor
je
es
and
out
and
add
jne
jl
jne
sub
pop
pop
retf
pushf
cld
mov
retf
or
push
lock
and
jnp
mov
cmp
shl
popa
dec
fbstp
ins
loope
clc
mov
test
adc
out
je
mov
cmp
ret
and
xchg
pop
mov
pop
push
jp
ret
mov
inc
xchg
adc
lea
pop
test
xlat
mov
xor
icebp
dec
(bad)
dec
es
outs
and
jnp
add
aad
adc
cmp
(bad)
in
fnstenv
les
loopne
jmp
push
push
jo
cmp
mov
xchg
cli
jg
ins
jmp
xchg
mov
in
in
aaa
lock
xchg
jge
movs
push
mov
out
xchg
int3
dec
arpl
and
cmps
sbb
into
jbe
sub
mov
sbb
jmp
xor
fbstp
pushf
in
popa
dec
mov
shl
mov
add
loope
retf
sbb
adc
rcl
xlat
mov
inc
push
xchg
sti
inc
movs
inc
jmp
push
js
call
cmc
cdq
xchg
cmp
retf
pop
loope
or
inc
iret
sub
inc
das
sbb
jg
adc
lahf
(bad)
sbb
fnsave
js
int3
push
nop
pop
add
jecxz
das
movs
or
adc
fistp
dec
pop
bound
dec
inc
cli
arpl
jo
push
sub
mov
fsubr
mov
xor
mov
xchg
push
mov
(bad)
and
and
jg
cdq
ficomp
add
jbe
jnp
nop
jne
cmp
jns
fs
mov
nop
xchg
fimul
inc
imul
xor
adc
pop
fbstp
sbb
pop
cmps
inc
pop
pop
and
fiadd
push
add
jo
jl
dec
jp
jp
inc
push
(bad)
push
and
inc
pop
adc
jmp
sti
rcr
inc
fsub
out
int
pop
jg
sar
add
and
mov
sub
repnz
sti
xor
sbb
xor
stc
push
jae
repnz
pop
pop
inc
(bad)
xchg
arpl
push
mov
jns
out
cmp
push
jl
ret
jle
jno
lock
gs
pop
cs
mov
or
mov
iret
movs
xor
xor
daa
rcl
mov
xor
mov
mov
retf
jnp
dec
pop
div
push
lods
add
cmp
test
mov
and
fcomip
push
jecxz
jb
mov
jno
and
aam
stc
or
mov
pop
xor
mov
repnz
test
xor
push
push
ficom
cmp
push
sbb
in
and
xlat
dec
cmp
or
dec
add
nop
mov
inc
cld
xor
daa
or
stos
sbb
or
mov
push
mov
cmps
dec
mov
xor
dec
outs
dec
mov
push
cwde
fwait
dec
in
popa
and
add
movs
jecxz
xlat
jge
cld
xor
cmp
es
ja
jp
pop
pop
xor
xchg
iret
fdiv
cwde
jne
js
shr
push
call
and
movs
dec
fwait
xchg
pop
ret
jbe
enter
xchg
inc
mov
ins
sahf
imul
jg
xchg
cs
in
push
dec
xchg
bound
mov
xor
add
dec
pop
add
movs
ins
xchg
rcl
sbb
or
jl
cmp
sub
mov
loope
push
mov
ins
daa
xchg
aad
cmps
dec
push
and
imul
dec
stos
add
push
sahf
loopne
js
fnstsw
mov
mov
sar
cmp
cmp
es
push
fs
push
inc
icebp
or
cmps
jbe
jns
scas
cmp
out
test
fwait
jle
mov
cli
or
sahf
out
inc
sahf
mov
dec
pop
ss
mov
add
or
lods
and
add
push
fisub
sti
cli
push
mov
dec
shl
out
mov
test
movs
(bad)
inc
dec
aad
aas
mov
out
mov
ret
xchg
and
dec
cdq
stos
mov
push
and
pop
push
mov
inc
loopne
outs
cmps
lods
add
cmps
mov
out
mov
sub
dec
ins
or
lods
pop
sbb
das
cmp
jbe
ds
arpl
in
inc
sti
(bad)
jmp
push
imul
inc
sub
mov
xchg
xchg
out
aas
aas
add
jno
dec
fbstp
lahf
imul
mov
inc
hlt
adc
jle
mov
xor
ins
sub
daa
scas
inc
mov
gs
jecxz
inc
and
push
loope
and
cmps
aas
or
sar
xchg
cdq
xor
ins
scas
push
(bad)
imul
adc
pop
inc
pop
push
fnstcw
push
(bad)
or
(bad)
aas
in
pop
dec
xchg
mov
jecxz
push
push
mov
imul
test
imul
aad
jmp
les
jbe
pop
gs
mov
dec
mov
popa
mov
(bad)
js
push
fisubr
cdq
aam
adc
push
daa
mov
push
loope
loop
cld
icebp
mov
daa
xor
push
cmp
and
or
popf
ja
mov
sub
cmp
adc
jmp
sbb
mov
ins
mov
push
ds
mov
dec
call
stos
into
enter
int
dec
mov
xchg
retf
inc
int3
pop
xlat
cmp
sbb
or
mov
inc
inc
pop
mov
js
sbb
jl
pop
lea
stos
lock
mov
sub
mov
pop
mov
stos
lds
jbe
lds
cmps
adc
or
(bad)
nop
test
xchg
push
inc
test
push
xchg
in
push
cld
out
iret
je
add
movs
cs
mov
pop
lock
mov
mov
mov
inc
push
pop
(bad)
lock
jo
mov
pop
sbb
inc
and
pop
sar
mov
inc
ror
inc
cli
inc
mov
mov
cmp
jne
push
ds
lds
sti
jg
sbb
and
xor
cmp
dec
cmp
fisub
push
(bad)
jno
cmps
push
mov
mov
les
ret
add
jp
jns
push
iret
pop
add
or
mov
fwait
push
xchg
scas
mov
mov
pop
je
loop
sahf
pop
bound
pop
dec
in
nop
xor
and
adc
in
daa
xor
and
nop
bound
pmaxub
bound
rcl
lods
(bad)
inc
cmp
adc
adc
xor
jno
test
clc
push
out
(bad)
ds
push
push
xchg
inc
je
test
jecxz
and
inc
(bad)
xchg
lock
push
out
xlat
sub
bound
pop
call
fsubr
aad
jp
cmp
test
jo
stc
popf
cmp
xchg
adc
stos
xor
lods
add
movs
inc
jecxz
or
fidivr
mov
outs
xor
fcom
(bad)
cmc
(bad)
test
adc
out
imul
call
cmp
mov
test
inc
sub
lea
pop
loope
mov
repnz
xchg
jg
jb
mov
mov
ret
push
mov
test
inc
xchg
push
and
mov
arpl
xor
jle
outs
push
mov
scas
xchg
in
bound
fisubr
fnstenv
jae
ins
shr
out
(bad)
or
adc
jp
shl
repnz
in
mov
jl
mov
imul
fdivr
aam
cwde
dec
enter
push
or
cmp
je
and
daa
xor
ins
add
mov
bound
add
mov
mov
or
das
mov
ficomp
or
les
pop
and
mov
(bad)
mov
js
inc
xor
int3
imul
int
inc
push
sub
lds
mov
int3
inc
push
hlt
push
shl
or
fadd
dec
fldenv
lea
cmc
xchg
or
pop
popf
stos
std
pusha
call
mov
and
aas
sbb
push
xchg
jecxz
icebp
sbb
leave
and
pop
jb
push
mov
shr
xor
sti
in
inc
push
push
(bad)
fwait
jl
mov
scas
test
sub
dec
repnz
(bad)
mov
std
cmp
cs
or
sbb
mov
andnps
jmp
mov
add
sbb
lahf
xchg
push
jae
jp
les
lods
call
push
push
mov
gs
out
(bad)
call
aaa
push
out
or
adc
add
push
cmp
(bad)
cmps
jae
(bad)
fsubr
jno
fwait
ins
hlt
stc
dec
inc
sub
loop
add
and
lock
inc
jmp
cmps
mov
cmps
movs
call
ficom
movs
and
add
xchg
not
jecxz
fs
push
jno
imul
inc
cli
cmp
repz
popa
mul
xchg
les
rol
and
mov
loop
ins
cmp
jmp
ins
dec
loopne
in
out
jle
mov
mov
pop
xchg
and
inc
sub
ficomp
cs
jnp
or
shl
cmp
(bad)
std
xor
nop
shr
pop
ja
retf
es
or
ffree
scas
sbb
iret
aam
fstp
sbb
push
in
in
bound
mov
xchg
mov
retf
jl
mov
test
fstp
stos
push
out
and
popa
cmc
jmp
nop
test
mov
dec
fwait
pushf
push
sub
and
xor
cdq
clc
sti
and
mov
adc
pop
dec
inc
mov
fist
out
dec
leave
fst
sbb
les
sbb
xchg
std
in
mov
call
and
(bad)
shr
push
inc
mov
test
stc
fild
inc
ror
in
imul
je
scas
fadd
xor
sub
mov
push
cs
push
sub
jle
sub
lods
pop
movs
mov
cmp
sti
mov
and
cdq
shl
sbb
sti
mov
mov
cmps
or
in
daa
add
inc
mov
mov
or
aas
xchg
pusha
(bad)
in
adc
ret
inc
loop
cmp
fsub
retf
and
enter
xchg
(bad)
addr16
pushf
into
cdq
adc
cmc
and
jmp
psraw
fmulp
cld
daa
jmp
repz
push
mov
push
xor
xor
dec
mov
les
(bad)
cmps
push
mov
xor
add
neg
(bad)
fisubr
mov
leave
inc
mov
(bad)
int3
(bad)
ret
push
sub
pop
data16
jp
push
push
sub
and
adc
mov
sahf
ss
jae
repz
add
imul
sbb
repz
xor
xchg
std
pop
movs
repz
(bad)
sub
mov
mov
scas
les
loope
scas
add
imul
mov
or
imul
sti
xchg
jle
push
pop
stos
inc
int
mov
push
lock
jmp
out
test
adc
and
sbb
ds
lods
sbb
mov
add
jmp
retf
fcom
ror
mov
add
add
and
push
inc
daa
hlt
jmp
mov
and
clc
int3
loop
std
arpl
cmp
fs
push
push
loop
mov
ins
mov
mov
or
sbb
xor
pushw
sbb
jp
add
push
leave
sub
arpl
xchg
iret
adc
pushf
call
movs
lods
mov
repz
cmc
(bad)
push
stos
fadd
or
adc
aam
outs
popf
jmp
and
test
cmc
iret
pop
dec
push
enter
mov
xor
push
sub
lock
mov
loopne
stos
adc
sub
dec
push
inc
cli
shl
adc
push
pop
das
pop
idiv
jp
xor
jl
add
iret
fdivr
mov
or
dec
pop
test
push
call
daa
mov
xchg
add
ins
fnstsw
sub
push
ds
cs
pop
ins
pop
ret
mov
int
repnz
inc
xlat
mov
dec
int
adc
cmp
icebp
xchg
dec
xchg
pop
(bad)
movs
push
jae
push
jb
icebp
(bad)
shr
inc
std
adc
stos
stos
test
mov
mov
ret
lea
cmp
mov
pop
inc
lahf
call
les
or
mov
(bad)
retf
fisttp
jno
or
adc
pop
out
mov
aad
dec
dec
jo
(bad)
adc
out
rcl
cmp
pop
fsubrp
jne
popf
push
int
mov
stc
outs
retf
sub
adc
inc
mov
add
adc
retf
or
outs
call
xchg
adc
imul
mov
mov
call
ret
xor
sub
xor
dec
adc
mov
ins
fstp
xor
and
xor
push
cmps
loop
loope
push
push
xor
cs
div
mov
in
les
mov
les
adc
and
hlt
push
jmp
mov
fs
retf
popa
ins
sbb
and
sub
in
adc
clc
adc
xchg
dec
loop
and
fst
pop
jg
inc
sub
push
xor
sub
inc
mov
dec
std
inc
add
jmp
out
mov
mov
dec
call
cmc
aaa
cs
cmp
jnp
test
sbb
das
cmp
sbb
push
mov
ins
imul
sbb
push
pusha
es
aas
dec
movs
fidivr
ja
movs
lea
dec
arpl
sub
jp
popf
xchg
push
arpl
push
pmaxub
inc
out
xchg
or
dec
rol
into
cli
loope
dec
pop
add
and
push
mov
inc
std
push
ja
test
fidivr
nop
lods
push
or
adc
ins
push
mov
xchg
aas
(bad)
dec
iret
mov
mov
rol
cmp
xchg
div
inc
mov
lahf
fldl2e
cwde
inc
mov
pop
das
setne
fcom
addr16
and
inc
and
mov
dec
push
rol
popa
neg
not
aaa
mov
popa
sbb
cmc
push
jge
pop
jecxz
push
sar
jno
retf
dec
das
fstp
fild
cmp
pop
dec
out
mov
add
cmp
add
div
pop
mov
fistp
nop
push
data16
call
test
mov
add
or
xor
xlat
inc
mov
stos
add
or
mov
lods
ins
sub
hlt
push
xor
or
std
push
loope
mov
push
out
popf
add
movs
aam
out
cmps
movs
cmp
pop
pop
xchg
and
outs
mov
mov
cmp
jmp
scas
test
pop
ins
popa
cmp
ss
(bad)
and
lods
loope
(bad)
or
mov
icebp
lock
scas
jnp
mov
ins
mov
sar
jne
or
adc
lea
test
fxch
jge
jb
cld
push
jnp
push
shl
sbb
ror
mov
out
xlat
aaa
push
fcomi
sub
fiadd
stc
repz
shl
out
jo
mov
pop
loop
push
mov
and
dec
ds
push
lods
jmp
cmps
xor
call
sbb
mov
inc
mov
data16
repnz
push
mov
mov
and
inc
sub
dec
jp
xchg
inc
gs
sti
int
out
jg
hlt
fadd
daa
icebp
add
mov
scas
pushf
lds
adc
cld
or
js
pop
fcomp
ins
inc
dec
das
inc
and
enter
outs
stos
ret
pop
ss
stos
inc
add
je
xor
stc
sbb
cmp
inc
inc
imul
jnp
xor
sub
mov
and
pop
sub
cld
fadd
shl
push
lea
test
mov
(bad)
mov
out
es
out
(bad)
xlat
dec
hlt
mov
outs
(bad)
push
fidivr
dec
popf
mov
xacquire
(bad)
pop
jg
aad
xchg
mov
enter
inc
mov
in
sbb
add
mov
(bad)
mov
movs
lods
movs
jns
out
or
sbb
xor
sub
outs
sub
mov
daa
cdq
adc
mov
mov
xchg
sbb
and
vpcomd
bound
push
test
xchg
ror
mov
mov
inc
xchg
addr16
mov
xchg
sub
stos
inc
js
xchg
stos
sbb
hlt
xor
leave
pop
sbb
cdq
add
sbb
mov
add
stc
arpl
ret
cmp
iret
adc
imul
pop
loope
sub
cmp
pop
imul
pop
rcl
js
daa
out
lahf
loop
lods
inc
movs
sub
lea
loopne
fstp
xchg
fmul
(bad)
or
sub
ins
call
jae
test
cli
mov
scas
pop
int3
(bad)
jmp
add
stc
test
mov
test
outs
repnz
inc
sub
fbstp
mov
in
lods
mov
mov
mov
(bad)
push
jge
lods
mov
stos
stc
inc
pop
rcr
out
inc
es
cdq
addr16
xor
inc
das
cs
jl
mov
ss
inc
cli
and
mov
gs
dec
xor
gs
es
or
sbb
fldenv
inc
aaa
pusha
test
shr
sbb
inc
push
fimul
jl
pop
inc
imul
pop
add
cmp
lods
fbld
mov
loopne
jmp
les
stc
loope
lods
sub
shl
inc
inc
sbb
cmp
dec
or
mov
mov
mov
inc
jg
sub
frstor
(bad)
loop
and
ss
daa
mov
xchg
clc
add
shl
or
adc
call
mov
push
jp
das
adc
rcl
ss
and
push
xchg
js
(bad)
dec
xchg
pop
jmp
sbb
dec
cmps
jns
pop
cmp
xor
ret
fnstsw
jo
icebp
xor
jb
add
mov
mov
fnstcw
pushf
mov
and
mov
movs
pop
xor
std
cdq
pusha
jnp
pusha
test
sbb
sub
lahf
(bad)
jge
inc
adc
out
sub
scas
inc
sub
push
pushf
cli
pop
xchg
sti
xchg
jmp
fwait
mov
mov
or
xor
mov
cdq
call
loope
sub
pop
loopne
push
gs
rol
push
iret
outs
mov
and
and
xchg
fldcw
je
mov
xchg
inc
imul
rcl
stos
mov
lea
pushf
aam
xor
pop
jecxz
cwde
fwait
mov
test
fsubr
ins
mov
or
inc
adc
call
mov
(bad)
in
retf
test
pop
xor
(bad)
mov
add
and
ret
jno
popf
mov
sub
popa
xor
sub
imul
pop
repnz
add
sub
fwait
(bad)
imul
cmp
mov
xor
xchg
clc
xlat
adc
mov
mov
mov
popf
int3
push
lods
pop
popa
and
pop
push
and
addr16
jecxz
daa
pop
loop
leave
sbb
and
mov
mov
mov
adc
add
inc
push
scas
(bad)
outs
in
xor
cli
push
jno
xchg
sub
bound
add
ror
shl
hlt
mov
cld
sbb
jmp
push
mov
jmp
dec
jg
jmp
pop
mov
jb
repz
push
icebp
push
ja
test
pop
pop
popa
fpatan
sub
pop
inc
int3
in
xor
pop
push
cdq
jns
pushf
push
(bad)
(bad)
push
adc
cmp
push
(bad)
js
cmp
bnd
or
pop
stos
data16
cmps
xor
cdq
fisub
or
adc
out
dec
xor
inc
rcr
out
push
je
or
xlat
ret
out
mov
ds
into
inc
or
dec
mov
mov
mov
pop
hlt
or
jb
(bad)
test
cmp
cmp
push
(bad)
jmp
mov
fs
sub
test
jmp
pop
in
mov
cmp
xchg
adc
or
shl
sub
scas
pop
mov
je
dec
xchg
mov
cmp
mov
leave
or
mov
xchg
aad
fst
(bad)
xor
sub
and
stc
cmp
retf
shr
xchg
cdq
adc
xor
jns
lock
xlat
movs
in
push
popf
daa
mov
ror
cmp
ja
stos
pop
mov
cs
or
sub
(bad)
jne
clc
dec
rep
pop
pushf
xchg
push
(bad)
aaa
pop
and
mov
add
push
cmp
jae
sub
(bad)
in
into
and
popf
mov
cmps
hlt
mov
pop
es
xor
dec
jne
mov
dec
(bad)
sbb
sub
iret
mul
mov
lea
cmc
shr
fisttp
(bad)
fisttp
sbb
sub
iret
stos
loopne
pusha
sbb
push
jne
sar
dec
ror
push
imul
mov
out
stos
add
add
inc
sar
xchg
aaa
aad
jne
mov
inc
call
xchg
test
pop
adc
mov
clc
push
bound
dec
add
cwde
(bad)
inc
aad
imul
scas
out
and
cmp
stos
dec
fwait
lds
and
jne
and
jo
jmp
inc
dec
cmp
add
enter
cwde
aaa
in
or
sub
test
retf
stos
mov
fs
xchg
push
or
in
clc
int3
mov
cmp
imul
in
movs
xor
mov
scas
sbb
fmul
hlt
jmp
push
fs
and
lock
or
push
outs
mov
movs
jo
pop
adc
sub
test
jo
sahf
test
repnz
aad
mov
or
sbb
scas
sub
lods
or
inc
das
fdivr
pop
test
aas
jecxz
cli
sbb
out
sub
jno
sub
je
outs
push
mov
ss
xor
bound
sbb
cld
test
or
sti
(bad)
mov
retf
je
std
scas
and
clc
and
shl
cs
in
lea
cmps
push
sub
lods
and
jp
ins
out
dec
daa
jmp
xchg
call
cmp
jns
dec
je
or
in
cmp
xchg
ret
cmp
movs
push
cmps
pop
in
outs
xchg
(bad)
aad
in
bound
nop
sub
mov
mov
and
jg
ins
jo
fcomp
icebp
pop
dec
dec
xchg
lea
push
lds
stc
pop
and
add
out
pop
xchg
inc
jle
and
test
outs
retf
ins
loop
sub
mov
pop
mov
fstp
jb
inc
clc
lds
xor
ins
add
jo
dec
pop
sub
mov
inc
jae
mov
in
sbb
ss
mov
and
inc
jno
pop
pushf
sub
aad
sub
mov
sub
xchg
in
adc
in
and
aad
xchg
xchg
scas
test
repz
ret
(bad)
sub
std
test
add
jg
sti
add
and
out
outs
adc
jnp
push
and
push
pop
ffreep
cmp
push
outs
repz
pushf
repz
pop
lds
xlat
and
jae
cmp
cmp
lods
xchg
mov
(bad)
push
cdq
aad
sahf
cmc
out
icebp
scas
inc
cmp
mov
push
mov
push
add
stos
sbb
mov
xchg
sub
mov
xor
out
ss
stos
push
xchg
add
in
dec
mov
stos
test
sub
and
or
cmp
sbb
add
cmp
mov
js
sbb
sub
das
pop
push
ret
or
mov
shl
fcomp
das
mov
cmps
hlt
out
ja
jo
outs
push
mov
mov
and
ss
test
pushf
xchg
sahf
addr16
fsubr
loope
add
push
pop
jo
jb
scas
out
mov
adc
sahf
sti
ret
pop
xchg
mov
add
push
adc
les
imul
sbb
add
or
pushf
out
cmc
lea
adc
and
dec
pop
stos
jecxz
dec
dec
jno
jne
out
mov
lahf
mov
jb
sti
sbb
retf
nop
adc
dec
loopne
int3
mov
data16
mov
sti
loope
ins
add
in
cwde
cmp
xchg
sub
int3
sub
sti
fadd
dec
xchg
ja
mov
sbb
xor
mov
enter
icebp
mov
(bad)
push
inc
dec
popf
cwde
push
push
scas
(bad)
into
icebp
xchg
jmp
pop
sbb
mov
fcom
int3
inc
xchg
movs
inc
mov
dec
outs
pop
in
jge
add
jge
sahf
sti
repz
push
es
repz
int3
mov
es
icebp
scas
mov
sbb
pop
sbb
xchg
cmc
mov
in
jae
mov
enter
or
pop
fstp
push
pop
std
lods
mov
inc
add
outs
scas
dec
test
jnp
xchg
xlat
lods
sbb
js
dec
jp
cmc
aas
lods
add
and
popa
test
ins
shr
dec
cmp
fld
pop
out
adc
pop
add
push
adc
movs
cmc
in
mov
xchg
fsub
push
sub
daa
cdq
(bad)
shl
mov
mov
out
inc
push
ja
push
adc
cmp
pop
push
call
pop
xchg
pop
fmul
sbb
mov
cs
add
mov
rcl
jmp
test
movs
dec
sbb
fidivr
cld
sub
xor
xchg
ins
enter
outs
enter
loop
and
test
push
hlt
sbb
pop
dec
(bad)
call
outs
hlt
or
inc
daa
movs
jmp
xor
test
int
pop
add
push
push
aad
pop
xchg
pop
cmp
jge
hlt
mov
sub
and
dec
inc
sbb
push
jnp
mov
loopne
mov
xor
push
mov
hlt
cmps
and
mov
sbb
loop
mov
adc
xchg
inc
mov
push
(bad)
fistp
push
sbb
cdq
xchg
fild
cwde
movs
cdq
(bad)
scas
sub
fistp
push
jbe
and
mov
int3
push
clc
push
xchg
mov
or
frstor
jbe
pop
(bad)
fmul
cmp
dec
and
scas
scas
bound
sub
data16
imul
xchg
adc
mov
je
jae
inc
and
mov
sbb
data16
retf
or
pop
mov
add
sti
fisubr
fdivr
fadd
xlat
sbb
jmp
ror
mov
mov
into
sub
xchg
sub
loop
push
sbb
inc
outs
pop
xlat
aad
fild
add
test
xchg
cmovae
lods
dec
pushf
in
(bad)
add
mov
dec
jmp
mov
mov
mov
push
push
repnz
sub
mov
mov
xor
mov
dec
pop
pusha
push
adc
mov
das
mov
push
sub
add
mov
jne
pop
cmp
movs
adc
retf
xchg
or
loope
push
fst
stos
mov
sbb
lods
push
mov
retf
mov
push
inc
xor
mov
mov
and
lahf
leave
jns
push
cmp
arpl
jle
sub
(bad)
neg
stc
inc
bound
jb
out
int3
aas
xchg
sub
push
cs
xlat
adc
repz
jle
cmp
xor
mov
mov
sub
mov
push
inc
mov
sbb
inc
sbb
push
fwait
dec
jecxz
repnz
pop
mov
mov
cmp
jp
stos
jo
jg
std
outs
arpl
rcr
rcl
in
in
push
add
or
pop
inc
mov
fwait
cmc
loope
cmp
push
retf
mov
sbb
xor
in
jmp
pop
ins
push
push
or
add
cmps
pop
(bad)
arpl
mov
cmps
push
push
in
mov
js
jns
mov
xchg
movs
or
xchg
jae
and
mov
xor
inc
neg
icebp
cmps
fld
movs
sbb
xchg
pop
inc
cld
scas
fucomip
xchg
xchg
fwait
test
jb
lds
dec
inc
mov
lods
pop
adc
jg
jb
inc
fsubr
sub
push
ins
sar
mov
loope
and
fisttp
(bad)
cmp
mov
mov
bound
push
in
and
cmps
xchg
fisubr
je
xchg
pop
pop
push
cld
xor
mov
int
xor
cmps
(bad)
cmp
call
pusha
loope
mov
shr
sbb
fwait
mov
lock
xor
xchg
xchg
adc
ret
dec
dec
sahf
jp
lods
pop
adc
setg
xchg
std
aad
jl
iret
movs
push
lea
cmc
loopne
add
push
jmp
mov
rcr
add
cmc
fimul
pop
int3
hlt
sub
mov
cmps
scas
mov
sbb
(bad)
jmp
add
or
mov
rcr
and
(bad)
fmul
xor
jnp
cld
cs
rcr
mov
nop
div
cmps
in
or
sub
or
mov
xchg
jbe
pusha
inc
dec
leave
dec
sub
sbb
xchg
hlt
pop
nop
mov
sbb
mov
pop
push
push
pop
push
jmp
mov
xchg
jp
sti
push
pop
loop
mov
in
inc
repz
scas
mov
add
xchg
ror
fcom
adc
cld
xchg
push
dec
test
push
push
nop
stos
shl
bsr
pop
sub
sahf
mov
loop
out
pop
push
sbb
pop
cwde
jg
bound
adc
sahf
test
fcmovne
gs
inc
fst
cmp
jp
out
xchg
xor
shr
sbb
leave
cmp
sub
cld
stos
je
cld
addr16
aaa
push
pop
js
cmp
jnp
pop
dec
mov
ret
arpl
hlt
mov
stos
pop
out
xor
ja
push
ret
and
and
pop
out
ins
loope
loop
(bad)
sbb
sbb
adc
int
mov
xchg
popa
hlt
inc
xchg
jp
mov
push
imul
test
mov
inc
lods
arpl
push
in
sahf
and
shl
mov
mov
xor
int
add
bound
test
call
jg
push
mov
and
mov
pop
aas
xchg
push
inc
std
cld
or
rol
and
imul
push
inc
pop
add
rol
mov
pop
mov
das
add
lea
xchg
ror
call
fmul
jb
pusha
inc
call
mov
cdq
loopne
sbb
xor
movs
xchg
and
nop
pop
fisubr
or
ja
jp
jmp
lea
scas
cmp
adc
sub
sbb
call
or
inc
stc
jne
jge
call
add
ficomp
add
pop
dec
fwait
jmp
mov
inc
into
xchg
dec
clc
inc
inc
mov
add
jmp
mov
mov
aam
xor
pop
dec
aam
call
sub
push
push
out
fidiv
xor
or
cmp
(bad)
ins
aaa
add
lods
xchg
push
loope
xor
loope
aas
and
out
cmp
mov
cmp
adc
jge
stos
and
imul
sti
enter
clc
dec
mov
jne
xor
cmp
push
hlt
and
mov
mov
inc
mov
sbb
je
mov
fnsave
dec
cli
rcr
(bad)
cmc
pusha
sar
popa
(bad)
ins
cmc
in
es
jmp
popf
add
sbb
mov
(bad)
fwait
cmp
cmps
pop
sub
test
or
dec
xor
xchg
mov
push
cmp
mov
sub
mov
sti
es
(bad)
jecxz
sar
stc
add
(bad)
mov
and
cmp
xor
mov
adc
lods
mov
xchg
push
mov
fmul
jbe
push
dec
mov
cmp
call
enter
retf
cmp
das
and
cmp
adc
jnp
or
bnd
adc
and
in
dec
push
fsub
ror
icebp
movs
pusha
movs
push
nop
data16
sub
jge
mov
dec
pop
jp
lahf
(bad)
rol
test
xor
sbb
mul
out
call
loope
retf
sbb
mov
rcr
inc
xor
xchg
inc
jmp
sar
scas
and
ins
push
lea
(bad)
inc
dec
dec
mov
retf
loop
adc
mov
das
xor
fst
in
std
push
pusha
jle
inc
(bad)
(bad)
out
inc
call
xchg
lea
lock
mov
xchg
mov
jg
mov
xchg
and
cmp
or
dec
xchg
jmp
jg
or
mov
(bad)
(bad)
push
arpl
rcr
mov
test
out
daa
adc
scas
outs
push
punpckhdq
jmp
cmp
arpl
dec
pop
add
dec
sub
push
cs
or
push
int3
mov
ja
aas
adc
jae
dec
test
or
xor
xchg
sub
gs
sbb
lods
ss
and
out
pop
xchg
ins
ss
mov
pop
js
adc
lahf
push
xchg
bound
xor
cld
dec
pushf
dec
scas
xor
mov
xchg
push
ja
add
jbe
push
jecxz
jne
dec
jecxz
adc
dec
and
xchg
sub
jbe
fs
(bad)
ds
pop
sahf
inc
dec
mov
mov
mov
add
in
xchg
sub
sar
int3
mov
or
add
shr
jmp
les
mov
jnp
outs
in
scas
pop
mov
sub
inc
aad
dec
cmp
inc
pop
push
mov
sbb
ds
jp
out
pusha
aaa
inc
pop
fcomp
xchg
cld
xor
popa
sbb
push
aad
dec
cwde
add
mov
jbe
adc
push
mov
sbb
and
test
shl
jmp
rcl
jge
sub
pop
loope
les
pushf
ja
stos
or
push
sub
jnp
dec
ror
cmps
adc
jmp
cmp
dec
retf
jbe
and
hlt
repz
fld
arpl
mov
or
rol
inc
jge
aam
in
and
ins
jne
inc
pop
lock
mov
ins
xchg
lods
jno
cmc
xchg
xchg
repz
jmp
inc
and
or
(bad)
call
mov
push
nop
jge
stos
pop
movs
cdq
push
out
cmps
inc
cmp
sbb
jnp
lods
imul
jbe
pop
retf
mov
repz
out
adc
fcom
add
clc
jnp
or
pop
xchg
in
mov
adc
das
pop
xor
aad
add
mov
repz
xchg
mov
rcr
iret
sub
cs
cmc
xor
rcr
adc
gs
fld
stos
imul
push
sub
mov
or
xchg
sbb
mov
push
std
ret
adc
out
jecxz
adc
(bad)
mov
js
call
lea
(bad)
into
adc
call
ja
out
fdivr
cdq
jecxz
push
pop
push
pusha
add
rol
mov
and
jnp
adc
in
out
push
test
shl
mov
cmp
dec
xchg
xchg
loop
mov
dec
retf
sbb
sub
or
(bad)
mov
xchg
dec
retf
or
inc
into
out
(bad)
cdq
cmps
pop
xor
push
paddusb
ins
movs
sti
mov
mov
ds
add
add
mov
mov
fs
out
imul
loop
ds
shl
adc
cmps
mov
dec
xor
jae
xor
sbb
mov
jmp
inc
pop
ja
cwde
scas
jb
ret
in
jecxz
cmp
sahf
pop
ror
and
jnp
ror
mov
stc
pop
in
sub
sbb
mov
dec
xor
dec
test
lea
mov
and
cmp
xchg
mov
gs
and
call
loopne
dec
mov
adc
scas
mov
jg
clc
call
mov
pop
ds
push
clc
xchg
fcomp
and
sub
jnp
adc
push
(bad)
mov
call
and
cmp
push
aad
dec
xchg
rep
inc
jp
(bad)
aad
jbe
xor
inc
or
pop
fsub
shl
add
and
stos
mov
pop
arpl
and
(bad)
cmp
mov
or
xor
and
mov
imul
jecxz
fldcw
movs
jbe
pop
mov
daa
dec
test
fidivr
push
cmp
or
xor
xlat
cmp
pop
mov
mov
pusha
push
ins
pop
or
jbe
push
add
pop
pushf
outs
inc
ins
jmp
sbb
push
pusha
(bad)
xor
(bad)
das
cmp
sbb
mov
iret
scas
repnz
popa
loopne
js
aas
cmp
cmp
push
sub
sub
fisub
xchg
dec
test
loop
or
mov
nop
pmaxub
mov
pop
push
inc
cmps
sub
shl
shl
mov
in
xor
fdiv
push
mov
aas
js
jns
mov
loope
and
cmp
dec
pop
rcr
call
pop
fcomi
pushf
hlt
jno
sbb
loop
ja
aas
lea
jg
frstor
jmp
push
in
xor
clc
pop
(bad)
mov
mov
das
add
shl
cmp
cwde
lea
sub
xchg
and
inc
jnp
cwde
cmp
popf
cmp
jecxz
sub
fldcw
inc
iret
lock
mov
imul
call
ret
stos
(bad)
ror
les
and
dec
mov
ret
cwde
mov
push
or
xchg
dec
mov
push
imul
ins
mov
lea
ret
in
cmp
fs
or
xchg
ss
cmps
add
hlt
xlat
mov
(bad)
ror
sbb
inc
pop
xchg
pop
inc
push
mov
dec
scas
aad
add
es
add
push
mov
dec
push
jae
jp
or
lds
push
(bad)
lahf
xchg
mov
mov
cmps
shl
ret
pop
and
add
jb
mov
lock
adc
cs
ficom
jae
xor
jge
cmc
xchg
inc
jle
icebp
cmps
sbb
mov
out
inc
xchg
mov
pop
mov
sbb
mov
or
fwait
std
dec
iret
push
xchg
xlat
jge
jmp
pop
adc
adc
in
mov
sti
stos
push
jp
call
stc
dec
(bad)
(bad)
rcl
pushf
xchg
mov
icebp
pushf
xor
sub
mov
add
into
jmp
and
jmp
test
dec
pop
mov
test
inc
sub
dec
arpl
jmp
add
sbb
add
stc
ret
iret
inc
pop
and
adc
pop
inc
fs
add
mov
xor
adc
cs
and
sbb
xchg
mov
jnp
xchg
sub
shl
inc
inc
sub
fistp
call
sub
add
dec
aam
scas
jne
jle
sbb
call
jno
retf
in
pop
jbe
sar
(bad)
icebp
add
sub
cmp
shr
adc
xlat
jecxz
mov
or
aas
add
scas
mov
jge
popf
and
lods
pmaxub
retf
jmp
push
xchg
mov
jno
mov
push
mov
adc
cdq
je
adc
mov
mov
sbb
shl
adc
cld
addr16
loopne
outs
or
daa
(bad)
cli
sub
aam
nop
(bad)
in
mov
cmc
(bad)
sub
push
xchg
popa
sti
mov
rcr
push
or
dec
or
push
cmc
(bad)
enter
pop
xchg
xchg
inc
push
pop
das
ret
fcmovu
jbe
adc
add
push
call
and
inc
pop
push
dec
arpl
pushf
jl
inc
and
cmp
sub
add
loop
dec
push
pop
cmc
les
jae
addr16
jo
fadd
(bad)
push
cmp
stos
outs
pop
or
sub
ret
fsub
fild
mov
mov
dec
jno
mov
mov
idiv
sti
jge
inc
jae
xchg
stos
scas
jo
mov
sbb
cwde
push
adc
pop
push
xor
mov
adc
xor
jmp
xchg
jl
(bad)
fdivr
leave
test
popa
push
mov
inc
test
and
mov
xchg
mov
jecxz
push
dec
imul
xchg
xlat
or
add
or
test
out
pop
adc
dec
out
sbb
rol
push
mov
ds
(bad)
xor
push
and
imul
leave
repnz
xchg
jecxz
sbb
inc
add
popa
shr
xchg
xchg
(bad)
cmp
jge
ss
push
cmp
sti
push
mov
mov
stc
add
(bad)
mov
(bad)
icebp
push
movs
or
les
xor
call
ss
std
leave
push
pusha
adc
arpl
mov
dec
and
enter
leave
cmp
xchg
adc
push
popa
loope
xor
jmp
cmps
test
add
inc
ds
ret
or
pop
retf
sar
inc
mov
test
mov
addr16
bound
daa
or
push
fdiv
dec
cmps
iret
or
pop
nop
pinsrw
fbstp
inc
aad
pop
sbb
mov
aaa
fld
xor
push
push
dec
mov
fadd
jmp
bound
inc
jge
mov
mov
mov
pop
add
ins
add
icebp
adc
aaa
mov
push
sar
mov
adc
mov
sub
pop
push
and
xchg
mov
fs
dec
loop
cmp
sahf
aam
dec
jmp
jno
sub
icebp
cmp
aaa
cmc
mov
or
enter
add
js
jo
adc
bsr
xlat
fwait
rol
sbb
fs
jb
adc
(bad)
(bad)
leave
ja
ins
js
imul
jmp
jo
dec
movs
pop
or
out
mov
adc
adc
xchg
xor
pop
mov
test
retf
fwait
xchg
jmp
xor
push
adc
popa
aam
fwait
mov
mov
adc
sub
inc
mov
adc
test
loop
inc
out
or
fadd
icebp
xchg
nop
pop
sbb
fs
lods
adc
out
mov
inc
xlat
cwde
test
arpl
jne
pusha
dec
and
lds
(bad)
mov
sub
sbb
jae
loope
dec
add
fidiv
ins
ret
push
jo
inc
xor
imul
movs
imul
cmp
fstp
jg
add
push
pop
sbb
lods
dec
iret
jecxz
repnz
push
mov
jo
add
jo
pop
cld
pop
daa
add
cwde
inc
sbb
pusha
jbe
bound
push
(bad)
mov
push
cmp
je
out
pop
int
xor
add
stos
lods
xchg
ins
(bad)
mov
aam
iret
pop
mov
mov
cwde
or
xor
daa
les
add
pop
stos
push
jp
fisttp
jbe
mov
pop
sub
repnz
adc
lods
push
push
mov
or
(bad)
aaa
adc
push
sbb
adc
jp
movs
loop
xchg
and
sub
cmps
in
fadd
adc
cmps
adc
push
inc
out
push
rcr
es
popa
xlat
push
adc
sbb
sar
sbb
mov
(bad)
mov
pop
mov
add
adc
cmp
jmp
jne
push
pusha
or
loop
sbb
pop
jo
fisttp
push
cmp
rol
aam
sbb
push
mov
test
arpl
cmp
xchg
push
(bad)
jle
scas
add
retf
mov
inc
mov
push
inc
jnp
xor
jno
(bad)
dec
xchg
mov
mov
lods
fucomi
loop
and
mov
xchg
xchg
or
loope
(bad)
enter
std
or
imul
cmp
jle
mov
div
sbb
cmp
pop
mov
call
movs
add
gs
xchg
push
lods
(bad)
cli
xor
and
(bad)
(bad)
fwait
jnp
sub
cs
mov
rcr
push
adc
push
loope
jne
inc
push
sbb
icebp
out
pop
or
loopne
ins
pop
cs
push
push
xchg
(bad)
dec
pop
mov
test
outs
es
imul
jo
gs
ja
ins
mov
dec
lahf
mov
shr
mov
inc
or
in
arpl
cwde
stc
mov
jmp
loopne
cmp
or
sbb
bound
mul
jle
sub
lahf
xchg
rcl
dec
scas
call
je
sub
into
lods
ss
push
mov
add
pop
sbb
hlt
hlt
mov
pop
adc
add
in
test
and
loop
or
add
daa
retf
sbb
jbe
jo
adc
push
cli
jp
leave
addr16
pop
outs
bound
inc
shl
jge
ret
imul
mov
mov
or
nop
lods
mov
ret
xchg
adc
imul
retf
cmp
xchg
lds
jns
cld
push
pop
lods
das
imul
jnp
cli
lock
std
ins
in
cmp
loop
push
pop
mov
cmp
add
xor
and
movs
dec
mov
fnstsw
jecxz
cs
jmp
in
mov
sub
push
cmp
pushf
and
cdq
ror
xor
and
and
out
mov
fbstp
or
cmp
div
jnp
retf
imul
sar
xor
mov
jmp
leave
into
jmp
xchg
xchg
stos
pop
mov
ins
stc
aas
repnz
lds
dec
jge
xor
shr
pop
xchg
adc
jmp
cld
mov
adc
scas
add
mov
idiv
ret
(bad)
movs
inc
mov
aaa
icebp
ds
(bad)
out
lock
xchg
nop
xor
idiv
fsubr
pop
dec
mov
and
movaps
push
enter
test
int3
aaa
inc
push
out
or
pop
test
pop
hlt
cs
mov
lahf
clc
sub
bound
add
add
fcom
jle
ds
fstp
jnp
gs
nop
(bad)
or
test
adc
in
cmc
scas
xchg
adc
out
test
sbb
fist
mov
mov
adc
mov
imul
adc
aam
push
nop
pop
loope
mov
and
cmps
mov
ror
mov
shl
test
inc
cld
adc
push
cmp
xchg
(bad)
lock
jnp
sahf
inc
xchg
inc
int3
pop
or
test
xor
sti
mov
xor
paddq
out
or
test
mov
mov
xchg
jp
pusha
aam
cmp
cwde
xor
mov
xchg
push
fcomi
lock
sub
inc
cmps
xchg
(bad)
jecxz
fwait
pop
sbb
mov
mov
stos
xchg
pop
or
push
mov
push
push
hlt
adc
jo
mov
outs
inc
fcom
and
adc
mov
into
inc
pop
add
es
imul
test
or
add
adc
scas
inc
das
scas
jp
mov
xchg
repz
dec
jmp
call
pop
test
mov
test
dec
repnz
cli
(bad)
ror
daa
xlat
and
cli
(bad)
mov
ret
cmp
cmps
fistp
jmp
push
pop
ret
in
push
ficom
add
sub
int
es
lods
dec
dec
mov
or
rcl
sbb
jge
mov
dec
sub
sahf
jp
dec
inc
push
add
push
mov
sub
loop
xor
or
bsr
rol
add
std
xchg
mov
leave
or
cmp
cmp
and
or
pushf
out
(bad)
xor
ja
adc
inc
jns
and
pop
jbe
pop
les
inc
xchg
dec
add
cs
pop
test
push
les
imul
leave
xchg
dec
mov
push
dec
(bad)
out
and
mov
adc
call
and
sub
push
out
inc
scas
and
push
pop
pop
lods
jno
shl
mov
pop
dec
xchg
ja
jno
das
cmp
dec
adc
jmp
jne
sbb
ins
push
into
push
and
xor
or
mov
cmps
repz
iret
cmps
add
mov
cdq
inc
call
xor
jbe
popf
or
je
push
lds
xchg
push
sub
xor
imul
or
xchg
sub
leave
mov
enter
mov
mov
fsubrp
retf
imul
repz
les
mov
push
cmps
daa
shr
xor
arpl
mov
dec
pop
outs
call
push
and
mov
lahf
ds
jge
loope
pop
clc
in
mov
test
fucomi
and
dec
outs
out
mov
push
fwait
ret
or
lds
push
stos
mov
fwait
xor
mov
ins
(bad)
out
sub
sbb
js
mov
cdq
inc
jns
clc
xor
fcomp
mov
fwait
mov
or
mov
out
bound
dec
push
outs
add
cmp
out
pop
or
pop
es
in
lods
xchg
xor
mov
mov
loop
jbe
or
sbb
retf
lods
ret
xchg
(bad)
xor
mov
jae
mov
cmp
retf
cdq
and
jns
cli
scas
or
retf
xchg
rcr
inc
mov
adc
and
pop
loope
sbb
fild
and
(bad)
fucomip
(bad)
push
iret
fst
gs
push
mov
loop
test
pop
inc
shr
mov
data16
aas
imul
jmp
stos
mov
mov
xchg
sbb
push
icebp
jmp
pop
(bad)
aas
not
pop
pop
or
and
fdivr
add
movs
pusha
dec
jbe
dec
sub
push
sti
test
adc
jp
fldcw
sub
inc
sbb
cli
scas
movs
sbb
pop
xchg
push
sbb
sbb
xchg
jge
jns
push
mov
add
cmp
mov
or
add
adc
gs
mov
jno
mov
xchg
inc
inc
sti
add
push
xor
inc
popa
cdq
dec
fild
mov
aaa
dec
push
les
cmp
js
fistp
or
in
aas
pop
sub
pop
test
out
push
ficomp
push
test
call
xchg
sub
lods
cld
pop
xlat
bound
loope
clc
sbb
push
mov
fsubr
mov
and
aas
sbb
clc
cli
mov
xchg
scas
cmc
inc
adc
xchg
and
(bad)
aas
(bad)
shr
jbe
inc
dec
inc
sti
add
cmp
lods
mov
shl
gs
stos
cmp
and
cmps
mov
sub
cmp
sub
test
mov
jle
shl
loop
mov
stc
inc
ins
mov
mov
dec
aas
xor
mov
or
xchg
push
lods
int
push
pop
sub
adc
pop
in
adc
in
jecxz
inc
ret
pop
xor
fst
jl
fadd
push
repz
outs
scas
dec
xor
mov
cmp
mov
outs
xchg
dec
(bad)
repz
mov
mov
and
fild
repnz
retf
sbb
or
add
pop
sub
jp
jmp
mov
cli
jb
gs
pop
push
xor
je
xchg
xchg
xchg
fnsave
ret
jmp
mov
push
pop
outs
test
xchg
mov
cdq
inc
mov
push
mov
adc
movs
(bad)
fcom
jb
pop
stos
pushf
addr16
push
mov
inc
and
add
and
and
jg
rol
scas
inc
test
xor
jne
jnp
out
jns
inc
pop
jb
jl
scas
sub
sub
xchg
add
int3
jne
sub
mov
retf
fmulp
push
dec
sbb
test
jne
push
mov
inc
out
lods
adc
int3
inc
push
push
push
jno
jecxz
test
popf
inc
les
clc
retf
xchg
out
xchg
out
ret
stos
loop
lds
push
fxch
xlat
imul
cmps
sub
stc
outs
sahf
iret
pcmpeqb
sub
mov
adc
push
in
push
int
js
std
add
add
xor
test
rcr
xchg
cmps
icebp
xchg
cmps
mov
inc
popf
cwde
aas
and
fsubr
ins
mov
(bad)
outs
fiadd
add
ins
mov
jno
jae
fldenv
fcom
jmp
or
cmc
in
sbb
xchg
push
or
mov
loop
retf
mov
(bad)
outs
mov
pop
loope
in
fdivr
ss
mov
nop
loopne
or
push
mov
push
sub
push
mov
fcomp
mov
repz
adc
jo
test
mov
cmps
mov
pop
push
scas
sub
je
dec
and
cld
repnz
xchg
dec
jl
test
loopne
call
stos
jp
pop
aaa
dec
or
push
dec
dec
or
dec
in
(bad)
out
leave
inc
mov
hlt
daa
xchg
jne
fwait
std
test
xchg
or
jmp
in
enter
sub
bound
dec
mov
xor
pop
in
push
fxch
sbb
add
add
cld
ss
outs
pop
in
into
pop
cmp
es
jg
aas
adc
sub
dec
movs
dec
mov
je
inc
sbb
xor
mov
pop
adc
xor
sub
popa
pop
jg
pushf
fcomp
imul
and
xor
dec
xor
inc
xor
jp
pop
popa
fcomp
inc
mov
call
scas
jne
loop
in
mov
push
xor
call
inc
mov
mov
call
ins
or
ins
xor
ins
pop
call
jp
xor
mov
out
dec
inc
add
push
adc
inc
in
adc
jo
jnp
(bad)
push
push
or
out
jmp
jae
push
dec
out
xchg
aaa
ret
jnp
jns
lods
push
gs
or
ficomp
pop
int3
retf
add
nop
inc
mov
pop
mov
icebp
lods
sbb
mov
mov
pop
cmp
mov
mov
mov
fldcw
jo
or
adc
and
add
inc
movs
ds
into
loope
ds
inc
loope
dec
sub
adc
sbb
mov
loop
add
mov
repnz
cbw
sub
(bad)
out
adc
ss
push
in
cmp
mov
or
pop
stc
jno
ins
pushf
sbb
push
adc
inc
pop
pop
pop
or
rcl
push
or
dec
lods
dec
xor
out
ret
push
clc
push
add
js
jl
mov
add
outs
aaa
fdivr
retf
pusha
xor
jp
cld
and
pop
xor
dec
rcr
and
adc
dec
or
pop
mov
(bad)
pop
and
jno
gs
iret
pop
fmul
scas
xchg
sbb
aas
jne
ds
in
scas
inc
jne
in
pop
mov
imul
mov
pop
scas
cmp
mov
not
ins
add
and
in
mov
cmp
adc
shl
dec
dec
jo
xor
dec
in
daa
add
mov
out
lods
push
and
jb
ret
dec
inc
push
dec
inc
int
jl
fadd
mov
xor
inc
push
dec
jbe
dec
add
dec
and
jbe
stos
dec
inc
outs
das
sbb
outs
fidiv
pop
mov
ret
bts
fdivr
add
mov
in
(bad)
hlt
and
xor
dec
leave
into
fadd
pop
cdq
repz
sbb
jbe
popa
in
(bad)
xchg
or
cmp
nop
das
push
adc
int3
mov
xor
fnstcw
loopne
inc
inc
xchg
mov
push
ds
cmp
imul
cmps
jmp
into
mov
push
adc
loop
or
dec
imul
retf
popf
pop
jmp
js
outs
mov
pop
add
inc
cs
enter
imul
ror
std
repz
mov
fdivr
inc
ins
xchg
mov
or
int3
mov
cmc
test
lock
cmp
jl
sbb
sahf
cld
sbb
out
jb
in
cmp
ret
shl
aam
out
mov
mov
jno
(bad)
sbb
in
inc
in
call
mov
rcr
in
add
mov
mov
and
xchg
daa
pushf
dec
xlat
or
scas
xor
sti
in
jbe
adc
fidiv
(bad)
call
(bad)
sti
pop
add
test
inc
dec
sbb
push
jb
mov
out
mov
iret
mov
into
sbb
dec
mov
hlt
jp
sbb
pop
sbb
sub
das
scas
push
cmps
xor
and
sub
repz
mov
mul
push
(bad)
mov
or
cmc
imul
imul
cmps
into
push
xchg
mov
dec
or
retf
fstp
inc
clc
cli
int3
mov
dec
(bad)
outs
call
aad
cmps
push
jecxz
fucomp
icebp
mov
xchg
push
or
(bad)
jl
mov
push
cmps
test
jmp
out
dec
loope
scas
adc
div
jle
push
ja
ret
ds
stos
hlt
hlt
pop
lods
add
pusha
movs
mov
js
sbb
cwde
jbe
inc
je
rcr
xchg
push
push
pop
sub
shl
xchg
pop
setno
xlat
jnp
jmp
pop
xor
xor
fsubr
sbb
push
jecxz
retf
and
xor
pop
adc
adc
dec
ror
je
or
mov
(bad)
lock
stos
sbb
inc
jmp
mov
adc
std
push
add
adc
and
fld
arpl
or
inc
hlt
mov
adc
mov
pop
mov
inc
cmp
daa
cmc
js
ds
cmc
push
push
lea
repz
push
(bad)
xchg
(bad)
inc
xacquire
sub
mov
leave
dec
push
sar
sbb
ror
cmps
jmp
sbb
nop
or
or
pop
aas
clc
or
xlat
mov
jae
lods
(bad)
pusha
pop
loope
xchg
int
xor
es
jmp
dec
shl
sbb
push
push
(bad)
int
ss
rcr
add
sub
jns
fcmovbe
cmp
jns
mov
lods
cmc
inc
mov
adc
xchg
popa
mov
or
push
repnz
jle
popa
pop
js
cmc
dec
xchg
mov
and
or
in
jmp
or
retf
rcr
mov
ss
xchg
fisubr
sub
sbb
pop
loop
and
push
cmp
sub
jle
sbb
jmp
ja
iret
jmp
jns
pushf
icebp
out
push
pop
std
fidiv
mov
stos
cld
(bad)
mov
pop
inc
mov
sub
daa
popa
test
js
lea
jg
adc
sbb
mov
and
daa
icebp
xor
out
pop
sahf
inc
mov
imul
pop
sbb
cmp
lock
xor
xor
pop
xchg
ds
push
cmp
push
outs
fisub
inc
cmp
xchg
fsubr
inc
push
shld
or
add
rol
sub
lock
cmps
sub
mov
aas
cld
jmp
dec
mov
jl
and
lahf
mov
repz
fisub
add
retf
jno
mov
mov
(bad)
sub
in
test
into
cs
js
add
add
cld
jl
add
xchg
cmp
retf
les
fiadd
ret
cmp
stos
iret
(bad)
jb
jnp
dec
cld
sub
mov
retf
fbld
push
xchg
fst
sbb
test
mov
sahf
mov
aam
rcl
pop
xchg
push
stc
aas
or
mov
fbstp
in
push
shl
js
xchg
popa
inc
outs
outs
aas
mov
(bad)
outs
dec
sub
and
les
dec
push
scas
fcom
push
fld
pop
xor
mov
add
and
push
icebp
pop
sti
push
pop
arpl
xlat
and
jl
xor
pop
mov
jp
jmp
and
mov
rol
in
jbe
mov
inc
retf
cld
jmp
in
push
mov
int
push
jno
div
push
(bad)
js
xor
dec
xor
aad
cmp
jne
(bad)
or
fisttp
in
inc
lock
xor
inc
into
jae
cmp
ins
mov
(bad)
cmp
adc
scas
aaa
mov
mul
inc
lds
imul
loopne
push
pop
clc
in
pusha
stc
lahf
xor
int3
test
dec
push
mov
repnz
(bad)
aam
push
fcom
and
out
outs
loopne
test
push
movs
jns
inc
popa
and
mov
(bad)
les
outs
push
sub
inc
rol
mov
xor
movs
shl
mov
ins
adc
(bad)
mov
xor
sbb
xchg
clc
mov
mov
jg
cwde
daa
je
test
push
or
ret
repnz
aad
shl
pop
xchg
loope
in
or
rol
(bad)
leave
pop
xchg
loope
inc
mov
ret
inc
rcl
repz
leave
jecxz
cmps
mov
sub
popa
add
jnp
stos
out
jns
jo
test
fisubr
adc
das
xchg
lahf
pop
test
pop
retf
cmp
pop
daa
mov
xchg
mov
push
or
loop
push
or
test
loop
or
xchg
call
push
scas
(bad)
pop
and
je
fcom
jmp
scas
jle
rcr
mov
xchg
jp
xor
mov
adc
loopne
(bad)
jno
in
cli
xor
int3
dec
es
rol
xlat
fs
cmps
btr
mov
push
out
xchg
mov
sub
mov
rcr
movs
sub
or
pop
test
push
lock
adc
cmp
adc
loop
aam
imul
add
sub
lock
push
add
ret
ds
out
int3
cmp
jbe
xor
neg
sbb
mov
in
daa
stc
adc
push
ret
imul
push
xchg
xor
push
popf
mov
pop
sub
pop
mov
pop
fld
out
or
inc
pop
(bad)
mov
retf
imul
or
outs
or
jg
(bad)
xchg
sti
push
mov
fwait
cmp
mov
xlat
iret
lods
or
xchg
dec
cmp
xor
aaa
add
fild
xchg
cmp
sbb
sub
pop
ja
xor
xchg
mov
lods
sahf
cld
mov
fmul
cmp
jmp
and
hlt
or
pop
jne
fidiv
popf
push
stc
sbb
jnp
bnd
dec
(bad)
out
pop
inc
dec
test
xchg
clc
jmp
sub
push
sbb
shl
mov
or
dec
mov
sub
cmp
mov
repz
jbe
test
cmp
mov
(bad)
jmp
(bad)
sti
retf
div
stc
loop
pmuludq
xor
ds
push
ret
push
cmp
test
cwde
and
mov
xchg
jno
dec
dec
pop
imul
out
dec
pop
ins
test
ins
test
adc
cmp
mov
pusha
inc
enter
cdq
sub
jl
nop
add
jle
jae
push
mov
add
test
js
inc
cld
jns
mov
sbb
shr
push
aam
adc
sub
cmp
push
out
or
call
inc
ficom
jb
adc
lods
jae
idiv
lahf
fimul
ds
xchg
xor
fst
popf
mov
rcr
xchg
cs
mov
arpl
xchg
pushf
jp
rcr
(bad)
mov
nop
in
push
(bad)
fisttp
jp
pop
iret
pop
adc
test
por
mov
push
test
clc
bound
dec
lods
out
lea
adc
inc
mov
xchg
fcmovb
ret
pop
push
push
cmp
push
inc
stos
sub
adc
nop
jmp
sub
in
inc
pop
jb
iret
mov
lds
mov
shl
fs
cld
cmp
cmps
pop
fnstenv
loope
test
xchg
into
aad
pop
push
adc
pop
push
ret
pusha
pop
jb
in
push
test
addr16
fsub
pop
mov
ds
hlt
and
mov
lahf
cmp
push
sti
push
adc
sbb
inc
repz
xchg
sbb
imul
sub
jmp
popf
cmp
in
xor
xchg
adc
repnz
mov
stos
push
cmp
jo
jnp
jns
mov
pop
dec
js
movs
(bad)
call
and
in
jmp
sub
ds
jne
shl
test
push
test
fwait
push
jno
enter
in
inc
fnsave
jns
jecxz
sbb
mov
mov
loop
sahf
mov
scas
sub
inc
fsub
stc
push
popf
(bad)
ins
xor
imul
neg
(bad)
leave
cli
and
es
imul
jnp
cmp
dec
je
xchg
mov
pop
ja
inc
push
jg
cmp
fwait
icebp
(bad)
push
xor
hlt
lfs
inc
or
mov
das
sub
hlt
enter
xor
jmp
xchg
lahf
aaa
imul
inc
jmp
cwde
das
imul
(bad)
pop
inc
rep
rcr
push
cld
sub
inc
les
and
loopne
mov
out
xor
lock
stos
(bad)
fcmove
dec
pop
mov
mov
out
push
and
fst
push
sbb
push
(bad)
nop
add
pop
loope
cmp
ja
or
out
mov
mov
in
loopne
aas
pop
cdq
mov
add
ret
or
jl
lock
jbe
adc
pushf
jae
push
popa
xor
lock
les
mov
cwde
pop
inc
fs
repz
xchg
loope
int3
test
hlt
int3
movs
sbb
icebp
or
(bad)
mov
mov
pop
aam
xchg
mov
lea
sub
push
ds
and
movs
mov
aam
adc
loop
mov
jecxz
cdq
repz
cmp
loopne
xchg
pop
pop
rol
inc
out
sub
(bad)
ror
inc
cs
jo
mov
nop
(bad)
fisubr
cli
popf
jp
or
(bad)
mov
or
cmp
or
bound
sub
jo
ror
xor
adc
cdq
xchg
(bad)
sti
xchg
ss
ins
add
pop
mov
ja
mov
push
add
ret
popa
ins
jmp
push
retf
xor
or
inc
loopne
adc
inc
fdiv
sar
int
mov
hlt
jmp
push
add
ins
int
pop
add
imul
add
inc
or
rcl
jecxz
xchg
fcmovne
in
in
mov
repz
xor
repnz
xor
sbb
mov
movs
lock
sub
les
pop
data16
push
sub
popa
scas
sub
mov
jl
dec
std
and
hlt
scas
pop
arpl
xchg
inc
cmp
mov
int
ins
call
(bad)
shl
jbe
mov
(bad)
pop
sbb
ss
inc
push
loop
ja
push
inc
xor
out
mov
xchg
xor
sbb
pop
lock
movs
int3
and
loop
push
(bad)
loop
mov
push
pop
popf
sbb
(bad)
dec
jnp
mov
mov
test
out
add
push
jo
test
xor
mov
sbb
mov
mov
jmp
push
and
pop
stos
out
mov
and
xchg
mov
neg
shl
les
arpl
nop
push
mov
scas
(bad)
mov
out
sbb
fwait
stos
bound
add
outs
out
cmps
cwde
mov
pop
adc
mov
test
addr16
push
and
or
or
(bad)
outs
mov
mov
or
mov
mov
xor
mov
inc
in
enter
sbb
jo
xor
push
jne
jmp
pop
addr16
adc
fstp
cmp
lods
dec
inc
lods
dec
repz
test
jo
dec
mov
push
stc
pop
xchg
jb
and
dec
scas
mov
clc
pop
data16
(bad)
dec
or
hlt
cld
aad
pop
jge
xlat
(bad)
out
(bad)
or
xchg
or
adc
xchg
xchg
adc
sub
jnp
aaa
add
fimul
and
out
retf
das
cmp
cmps
cmp
adc
pop
pop
pushf
fild
std
mov
lods
dec
sbb
mov
ret
sbb
xchg
mov
mov
addr16
sub
fist
bound
and
xchg
leave
adc
ins
xchg
lods
(bad)
loope
test
cmps
cmp
dec
retf
mov
shl
retf
gs
mov
mov
pop
add
je
mov
iret
loopne
mov
xchg
repnz
frstor
mov
cvtps2pd
ret
pop
js
xchg
add
lock
inc
stos
gs
or
mov
jno
je
std
or
and
fs
stos
push
mov
mov
fbld
cmc
jle
mov
dec
xor
nop
adc
push
fst
imul
loop
jmp
mov
jmp
in
pop
jbe
mov
test
lods
sub
div
ret
pop
imul
mov
fimul
sub
jb
movs
xchg
adc
mov
sbb
fnsave
rcl
or
vpackuswb
pop
fmul
mov
inc
dec
cmps
cmp
mov
sub
fisttp
adc
loopne
pop
push
dec
das
lods
inc
xor
fld
mov
in
enter
cmp
sub
fdivr
into
imul
mov
xor
mov
pusha
jo
jle
xlat
mov
retf
jp
or
cmp
repnz
or
mov
(bad)
cmps
into
fbld
mov
cli
sub
test
pop
push
add
pop
out
jns
call
out
jecxz
dec
dec
dec
dec
dec
pop
hlt
jmp
jb
dec
sbb
mov
pop
nop
push
mov
in
push
or
(bad)
push
adc
int3
and
pop
(bad)
pop
xchg
pop
push
rol
jg
enter
mov
cmps
jb
jno
add
movs
or
shl
xlat
fisttp
sbb
cli
pop
adc
mov
(bad)
fadd
sar
stos
out
cwde
dec
mov
mov
pop
mov
mov
mov
std
popf
cdq
mov
xchg
mov
xchg
sbb
push
mov
jmp
test
xchg
ror
je
or
sub
mov
(bad)
cli
xchg
dec
mov
das
cmp
sbb
dec
pop
pop
dec
pop
jae
outs
xchg
imul
cwde
lods
mov
jp
jnp
cwde
fdivr
(bad)
aaa
lods
stc
je
inc
sbb
add
mov
call
outs
mov
test
cmp
or
test
je
scas
mov
test
mov
les
mov
adc
aaa
mov
mov
adc
iret
push
hlt
lock
hlt
and
scas
pop
push
lods
leave
(bad)
shl
hlt
fsubr
fmul
cmp
cli
pop
in
mov
jmp
mov
xor
mov
jecxz
pop
popf
movs
push
inc
ins
jmp
sub
or
xchg
sbb
mov
sbb
sbb
cmps
leave
les
jae
sbb
aaa
add
sbb
xor
dec
or
push
inc
mov
inc
sub
xchg
mov
lds
into
push
sbb
adc
pushf
sub
int3
mov
add
dec
xor
xor
push
push
iret
mov
nop
cmp
push
mov
mov
arpl
cmc
das
outs
out
jl
fistp
popa
or
enter
out
js
sub
adc
adc
push
and
(bad)
into
or
pop
pop
jo
es
ins
jae
repnz
push
sub
xchg
add
inc
loopne
cmps
mov
shl
jle
and
lods
mov
pop
inc
and
ficomp
mov
shr
jg
xchg
daa
mov
sbb
xchg
repz
add
sbb
ds
cmps
mov
add
sti
loope
add
lods
push
push
stc
mov
scas
and
pop
mov
sub
cwde
mov
mov
inc
and
inc
in
int3
xchg
dec
xor
mov
mov
stos
test
dec
push
xchg
cmp
sar
mov
ja
push
and
int3
mov
mov
push
xchg
test
mov
push
pop
imul
mov
dec
jmp
aaa
test
(bad)
jle
add
pusha
add
lahf
ins
dec
adc
sbb
fisubr
sbb
imul
jae
stos
dec
mov
mov
repz
xor
inc
jb
ret
push
rcr
mov
pop
jp
aas
cmp
ja
pusha
bound
cmp
sti
ror
jno
js
cmc
into
mov
stos
rcr
test
inc
pop
sub
outs
sub
or
popf
xor
mov
sbb
lods
dec
popf
mov
inc
mov
das
cmp
call
inc
jbe
dec
add
push
je
and
jle
xchg
in
jo
cdq
push
aam
or
jecxz
popf
jb
std
and
lock
adc
pop
push
pminsw
dec
fst
movs
hlt
mov
push
dec
or
adc
sbb
sbb
or
iret
icebp
popf
fsubr
outs
add
and
or
ffreep
dec
outs
hlt
rol
adc
mov
jmp
js
int
mov
outs
scas
push
sub
xchg
fwait
push
adc
push
add
xchg
cmp
adc
jb
clc
add
or
js
loop
push
mov
xchg
sub
sbb
outs
xchg
cmps
dec
int
sub
imul
and
jle
ja
ds
mov
and
mov
xor
xor
sti
cmp
je
and
fsubr
cmps
inc
imul
sub
mov
xchg
xlat
or
in
rol
inc
dec
dec
cs
out
pusha
add
xor
xchg
les
fs
inc
jnp
cmp
cli
mov
cmps
push
outs
xor
jns
popa
mov
dec
(bad)
mov
push
daa
sub
or
sub
mov
mov
test
dec
ret
std
in
mov
jle
mov
cmp
ds
outs
ja
into
pop
push
mov
or
sbb
(bad)
jne
jg
push
pop
pop
inc
xor
loopne
movs
sub
movs
scas
js
cli
stos
std
adc
mov
mov
mov
mov
(bad)
mov
repnz
push
setne
outs
adc
idiv
dec
(bad)
loop
ss
adc
ins
cmp
push
mov
(bad)
loopne
push
xchg
js
mov
xor
rcr
cmc
cli
pop
(bad)
xchg
sub
jmp
popa
lods
jno
or
ins
jbe
mov
push
push
push
xchg
aad
push
outs
(bad)
jae
sbb
in
pop
fimul
dec
mov
addr16
sbb
std
dec
movs
jmp
scas
mov
and
jle
xchg
pushf
cmp
mov
in
ja
ins
jecxz
fldenv
jle
imul
outs
pop
ins
jmp
adc
mul
push
cwde
jg
or
out
cmp
adc
into
cli
inc
cld
add
test
enter
mov
push
movs
in
daa
(bad)
or
fmul
cmp
xchg
xor
mov
sub
push
jle
call
or
inc
and
popf
xchg
jb
stos
sbb
or
int3
mov
push
push
pop
out
rol
dec
in
out
push
call
nop
mov
pop
das
jno
stos
aaa
ficom
cmp
dec
ror
scas
enter
iret
adc
pop
sub
sub
add
and
mov
outs
sbb
into
data16
pop
lods
sahf
push
les
rcl
or
xlat
xchg
jno
push
mov
pop
popa
jne
sub
inc
iret
lods
test
loopne
ret
jne
fstp
into
hlt
push
gs
shr
push
mov
mov
cs
mov
fist
addr16
inc
iret
mov
sahf
mov
iret
jle
outs
aas
jb
int3
and
xor
add
add
call
das
arpl
sbb
aas
je
adc
repz
push
sbb
fs
shl
fistp
inc
xchg
xchg
gs
push
imul
jge
dec
int
es
jecxz
push
(bad)
xor
les
pop
int
dec
jl
inc
jae
xchg
std
mov
mov
jge
or
nop
sbb
jle
bound
pop
mov
sub
mov
icebp
and
and
mov
sbb
sub
stos
sub
cwde
jne
(bad)
jp
mov
cmp
sbb
loop
push
std
or
cmc
clc
(bad)
pusha
pop
add
pop
mov
shl
xor
adc
test
(bad)
and
xchg
mov
cld
dec
in
fmul
js
pop
or
adc
ror
jl
enter
inc
jmp
ret
es
jge
shl
jge
add
fwait
mov
mov
and
shr
lock
sahf
mov
(bad)
sti
mov
xor
(bad)
xchg
dec
dec
and
outs
cmp
jle
cld
push
cmp
inc
clc
sbb
pop
or
inc
cmps
shl
out
hlt
add
push
out
add
movs
rol
jge
cmp
push
cld
push
lea
mov
mov
pop
and
rcl
xchg
jne
cli
xchg
icebp
(bad)
and
sub
shr
scas
les
push
cmp
ror
scas
leave
add
xchg
sar
mov
dec
sub
and
gs
sbb
mov
dec
xchg
add
(bad)
enter
vmovaps
std
and
iret
dec
aaa
daa
jbe
retf
pop
pop
shl
sub
aas
pop
aas
ss
or
lea
dec
mov
dec
add
jnp
mov
pushf
into
sbb
stc
in
call
inc
imul
fwait
retf
addr16
and
ins
dec
mov
fmul
test
dec
(bad)
and
or
popf
rcl
sub
fld
shl
push
(bad)
push
push
das
mov
movs
out
outs
xor
jmp
mov
jb
xchg
xchg
cmc
fdivr
dec
adc
jmp
rcl
mov
fst
xchg
inc
pop
pop
push
pop
pop
out
repnz
sub
and
test
add
enter
fcomp
idiv
out
jae
imul
mov
pop
mov
loope
mov
adc
(bad)
stos
push
inc
nop
dec
sbb
adc
in
dec
cmp
cmp
adc
in
mov
or
leave
adc
adc
xchg
inc
sbb
imul
pop
xchg
sub
cmp
push
jmp
mov
and
sub
lahf
clc
sbb
(bad)
dec
leave
sub
jbe
sub
popa
mov
jns
mov
push
leave
or
mov
mov
sub
fcmovu
enter
cmc
sub
repnz
pop
ss
(bad)
out
rcl
pop
mov
in
in
enter
popa
fstp
lods
outs
cli
sbb
push
cdq
push
call
stc
cmps
push
loopne
fadd
ror
gs
add
and
jmp
js
out
scas
adc
sub
in
dec
aam
loope
in
jmp
imul
sbb
mov
inc
xchg
and
gs
pop
test
cmc
popf
out
pop
test
icebp
ins
pusha
sub
into
cdq
daa
cli
push
mov
inc
pop
jbe
int
mov
xor
and
cmp
adc
dec
or
arpl
inc
loope
inc
or
shufps
xchg
mov
test
shl
ficomp
xchg
and
pop
sbb
stos
inc
jo
mov
loope
addr16
xchg
in
cmp
sbb
add
shr
call
pop
imul
sub
inc
loop
loopne
pop
mov
adc
adc
push
dec
pop
test
xor
or
pop
mov
ficomp
dec
mov
push
mul
jbe
mov
and
add
cmp
in
cmp
leave
inc
cmps
cwde
inc
adc
cwde
inc
sub
jmp
ret
inc
push
cmc
int
add
mov
and
add
cmp
xchg
push
std
test
dec
and
outs
popa
(bad)
jge
ret
sub
sub
mov
jge
cld
ins
mov
lock
push
pop
int
pop
cmps
cmp
xor
ins
mov
push
popa
mov
out
icebp
(bad)
xchg
popa
push
cmp
outs
addr16
jo
cmp
pop
popf
movs
sub
dec
(bad)
ss
jno
mov
pop
test
jns
inc
dec
jb
add
cld
jmp
cmps
sbb
mov
das
lods
xchg
loope
xor
mov
xchg
sahf
and
adc
add
mov
pop
ret
mov
jle
call
call
fdiv
jmp
sahf
(bad)
call
mov
cmp
jnp
dec
mov
cmps
js
les
lea
or
cmps
cli
sar
mov
mov
stos
add
(bad)
hlt
or
xor
add
out
leave
test
jg
popf
retf
push
pop
pop
jne
sub
iret
lds
push
(bad)
or
or
dec
cmc
lahf
mov
xor
imul
ins
int
mov
sbb
sub
push
xor
aad
push
out
jl
pop
push
cmp
lods
clc
pop
pop
push
call
jmp
pop
adc
xor
or
mov
sub
sub
push
loop
test
mov
cs
sahf
xchg
pop
imul
adc
lahf
and
(bad)
pop
push
dec
dec
daa
stos
imul
push
mov
push
fstp
xor
dec
(bad)
adc
dec
ins
or
push
or
pop
push
add
jne
or
data16
adc
push
sub
aas
outs
push
dec
xchg
xchg
push
aam
cmp
daa
mov
dec
lods
adc
stos
dec
pop
ins
jnp
and
js
adc
cmps
aaa
and
in
ss
mov
or
nop
jp
sub
jbe
push
call
les
clc
rcr
mov
dec
pop
ins
cmp
fwait
test
dec
fs
sub
inc
xor
xchg
repnz
repz
inc
mov
cwde
sub
nop
mov
mov
arpl
xchg
or
call
lods
mov
xchg
add
or
js
jne
add
aad
call
push
inc
jmp
jp
or
push
jg
cmp
jnp
push
les
xchg
addr16
cmp
and
cmps
call
lock
gs
add
bound
ja
mov
and
xchg
movs
jne
fdiv
xchg
jp
push
aam
cli
fcom
int3
push
movs
fimul
clc
fnstcw
and
leave
bound
cli
inc
pop
pop
sbb
nop
test
mov
loop
aad
bound
repnz
lods
mov
xchg
nop
pop
pop
sbb
cli
sub
sbb
push
xchg
(bad)
fnstsw
int3
dec
mov
mov
mov
mov
adc
js
fcmovu
jecxz
movs
sti
pop
mov
(bad)
mov
bound
scas
xchg
or
mov
scas
mov
xchg
test
test
jnp
ins
mov
out
shr
lock
in
sub
sar
pop
cli
cdq
cwde
jmp
push
cwde
(bad)
clc
sbb
inc
jmp
mov
mov
cmps
jo
jecxz
(bad)
enter
movs
rcl
enter
mov
mov
mov
jge
pop
out
add
int3
int3
inc
jl
ror
and
add
(bad)
clc
test
lea
dec
adc
ins
rcl
mov
mov
ins
ss
mov
bound
mov
cmps
mov
or
push
jge
in
sbb
push
mov
jl
lods
cmp
jecxz
sbb
xor
mov
mov
mov
arpl
jnp
lock
sub
cmps
push
ins
popf
inc
in
scas
out
push
xchg
(bad)
adc
pop
aas
sbb
jae
add
sar
inc
add
push
sub
popa
aas
sbb
mov
jns
pop
out
movs
leave
imul
jb
loopne
es
bound
test
js
mov
push
ja
gs
mov
loope
mov
out
pop
cli
das
int
push
lock
sub
jbe
dec
xor
repnz
icebp
sbb
inc
mov
dec
jae
adc
inc
stos
push
fcmovnbe
fadd
fisttp
xor
push
nop
out
dec
dec
inc
(bad)
loopne
push
sbb
(bad)
scas
pop
adc
push
xchg
and
iret
iret
xchg
inc
imul
adc
cdq
iret
dec
xchg
sti
jmp
fisttp
shl
test
in
sbb
ss
cmp
xor
rcl
enter
inc
test
jae
loope
pop
and
jle
xchg
xchg
mov
mov
pop
shl
push
adc
or
call
pushf
inc
dec
and
inc
dec
nop
jle
cdq
xchg
adc
imul
shl
shl
int
fldenv
xchg
aad
mov
popf
ins
call
dec
xor
sbb
adc
in
mov
(bad)
movs
std
(bad)
pop
retf
scas
popf
inc
out
aad
fcmovbe
in
div
loop
mov
sqrtps
fild
mov
mov
pop
stos
or
mov
cmps
ja
mov
(bad)
jns
or
(bad)
inc
or
hlt
add
mov
(bad)
ds
pop
jnp
ret
cmc
paddw
icebp
jae
cli
pusha
fcmovbe
xchg
jecxz
loopne
push
(bad)
adc
jmp
mov
mov
or
jae
repz
push
rol
ds
sbb
pop
pop
dec
inc
push
in
popf
int3
imul
mov
xor
add
ds
or
sub
pusha
xor
scas
daa
movs
and
pop
inc
ficom
ficom
xchg
gs
and
mov
data16
jp
in
dec
ins
jo
xor
popf
xlat
inc
jo
sub
jnp
aas
ja
cmps
push
or
outs
add
loopne
retf
push
mov
aam
cmp
in
fidiv
cli
mov
aaa
pop
movs
fcomi
imul
mov
clc
dec
adc
call
push
pop
pop
rol
sbb
push
in
cmp
jg
mov
mov
shr
in
cdq
movs
cli
jp
int
pop
push
or
inc
jmp
cmp
cmp
mov
out
adc
sbb
icebp
xchg
xchg
mov
(bad)
cmc
(bad)
fisub
add
ror
push
or
sbb
cmp
mov
(bad)
enter
outs
clc
sub
mov
pop
in
(bad)
push
clc
mov
clc
push
cmp
dec
test
mov
lahf
sub
test
fidivr
sub
jg
and
jl
shl
movs
push
xor
out
adc
xchg
push
retf
mov
mov
outs
hlt
pop
cmps
fldcw
ror
jge
and
inc
adc
pop
mov
sahf
icebp
push
test
call
aas
in
jmp
jno
sti
sbb
inc
inc
jbe
push
and
inc
and
xchg
jno
movs
push
je
xchg
in
push
mov
imul
nop
test
push
xchg
and
fistp
sar
pop
add
sbb
nop
xchg
sar
push
out
mov
loop
jg
xor
mov
or
push
mov
and
out
sahf
vminsd
and
pop
jge
cmps
out
inc
lock
adc
fnstcw
and
jle
jecxz
push
push
ret
fdivr
xor
ins
add
xchg
dec
js
bound
add
shr
mov
sub
jl
test
sub
daa
ret
jno
fcomp
cmp
das
iret
xor
cmc
pop
adc
mov
adc
mov
mov
inc
mov
dec
(bad)
cmps
push
das
ins
push
into
fidivr
xchg
inc
xchg
je
sub
sahf
or
sbb
lds
ins
out
pop
sub
mov
push
mov
div
mov
cwde
jl
sbb
mov
inc
xchg
dec
mov
aam
aad
mov
push
leave
pop
aam
cmps
repnz
lods
fdiv
sbb
pushf
sar
stos
or
hlt
into
enter
add
mov
cli
mov
mov
push
mov
jne
jp
adc
outs
push
(bad)
jnp
fstp
(bad)
fld
jbe
movs
hlt
or
pop
inc
mov
cli
xchg
cmp
and
lods
scas
sbb
sbb
in
loop
imul
mov
dec
adc
stos
mov
fld
dec
sbb
(bad)
xchg
push
lea
and
mov
ins
jbe
mov
pop
(bad)
aad
pop
std
mov
aas
in
cmp
ror
ret
xor
movs
push
add
sti
scas
cmp
fsubr
retf
push
ror
test
out
test
cmc
lods
dec
inc
adc
sub
std
and
dec
lea
(bad)
mov
jle
fnstsw
nop
xchg
jae
adc
sbb
or
je
sbb
xchg
sar
pusha
pushf
out
stc
push
xor
xchg
js
sbb
addr16
jmp
sub
dec
fidiv
cmps
scas
cwde
xchg
sub
push
ds
js
or
test
test
iret
sub
mov
dec
pop
jge
mov
dec
pushf
cmp
xchg
jmp
ins
push
popf
and
inc
mov
xchg
xchg
test
ret
push
jge
(bad)
push
sar
jmp
cdq
addr16
xchg
ror
sub
sub
into
push
or
mov
cli
stc
loopne
mov
stos
mov
mov
ret
mov
ja
call
outs
rol
pop
xor
mov
call
mov
or
adc
push
and
add
ror
xor
push
mov
imul
inc
and
xor
sub
int3
jecxz
rcl
fucompp
cmp
ins
xor
loope
xchg
or
dec
jl
push
stos
int3
cmc
mov
loop
sbb
inc
aam
xchg
gs
dec
data16
retf
jmp
push
js
mov
cmp
pop
je
int3
xor
mov
fnsave
and
in
inc
and
test
shl
jnp
jle
mov
(bad)
fsub
push
add
fmulp
test
rol
jmp
push
mov
hlt
out
aad
stc
cwde
mov
inc
sub
shl
aam
cmps
lea
lods
loop
movs
and
push
sti
cmp
add
hlt
inc
xchg
in
cli
sti
mov
mov
push
cld
sub
out
test
adc
push
mov
adc
cli
fstp
(bad)
dec
inc
retf
and
(bad)
or
ins
inc
jge
daa
lods
jl
aam
and
mov
or
pop
mov
(bad)
pop
loop
imul
ds
jg
daa
or
dec
ret
fdiv
call
mov
sub
aaa
inc
push
push
gs
das
dec
jb
xor
in
cmp
ds
outs
mov
cs
cli
jno
pop
cli
movs
test
jne
push
xchg
add
push
gs
jne
pop
or
cli
fs
dec
out
cld
xchg
or
inc
sub
test
out
mov
adc
std
out
jp
iret
mov
mov
les
test
nop
out
addr16
and
ret
cmc
jnp
jg
xchg
pushf
xlat
jnp
shl
lahf
sub
mov
xchg
cmp
in
(bad)
sbb
ret
ret
add
xchg
inc
aas
rcr
int
fs
xor
enter
dec
fcmovbe
mov
call
cld
cmp
outs
or
jl
and
add
xchg
dec
add
xchg
or
sar
and
mov
ja
shl
dec
fwait
mov
push
jmp
add
iret
popf
pop
lea
pushf
mov
scas
push
movs
mov
icebp
add
jp
in
ror
(bad)
call
fild
add
jecxz
fisub
and
mov
cli
fcom
sbb
pop
stos
add
cmps
lock
and
inc
aaa
pop
sub
lods
call
xor
sbb
mov
cmps
js
cmp
dec
jnp
call
fsub
xchg
stos
inc
test
jl
push
mov
cmp
push
je
push
ins
imul
xor
cmp
dec
test
add
sub
cld
inc
popf
inc
in
xor
pop
cmc
jno
xor
dec
push
adc
push
mov
aam
push
jne
jle
push
stc
cmp
sar
xchg
inc
and
pop
jle
xor
pop
and
jl
and
cli
inc
fst
cmp
pop
mov
dec
fwait
icebp
ins
push
ja
dec
or
add
popf
jg
pusha
mov
leave
rcr
cmp
inc
jbe
jg
loop
aaa
ffreep
mov
cmp
xchg
fiadd
adc
add
stos
xchg
loop
and
pop
push
enter
stos
cmps
in
repnz
cmp
sub
xchg
xor
mov
xor
jb
retf
jmp
adc
push
pop
(bad)
cld
fcomp
(bad)
icebp
int3
xchg
in
dec
popf
xchg
mov
shl
jle
xchg
rcl
into
push
popf
inc
fisttp
mov
test
arpl
mov
adc
call
pop
jne
js
dec
xchg
loop
dec
mov
push
lods
das
aaa
imul
cmp
push
cmps
enter
in
rcl
ficomp
mov
(bad)
mov
xchg
test
sub
mov
xor
mov
dec
pop
shl
outs
in
das
xchg
dec
dec
jae
int3
sub
rol
scas
mov
pop
in
call
mov
fnstsw
or
sbb
scas
pop
and
or
sub
sub
add
sbb
es
outs
test
push
pop
repz
push
stos
imul
out
xchg
mov
(bad)
add
and
pop
int3
mov
pop
xchg
pusha
(bad)
cmp
xlat
dec
mov
sub
inc
mov
xchg
add
sbb
jno
test
and
dec
push
jbe
inc
hlt
rcr
mov
fdivr
push
lahf
loopne
mov
xchg
add
(bad)
sbb
pushf
lods
push
cs
cmp
cmp
bound
out
mov
push
cmp
data16
data16
mov
inc
add
js
jnp
mov
fyl2xp1
mov
scas
into
push
rcr
mov
dec
mov
and
inc
cmp
cdq
mov
sbb
push
aaa
daa
rep
mov
push
fstp
inc
sub
mov
mov
xchg
and
into
xor
jns
ret
lea
dec
sahf
jp
inc
inc
mov
mov
cmp
lods
loopne
push
je
mov
cmp
inc
rol
pushf
adc
cmp
bound
or
test
jg
mov
cwde
into
not
lods
in
(bad)
jne
int3
rol
test
test
mov
xor
mov
mov
retf
or
mov
ss
(bad)
rep
test
adc
fld
push
mov
push
imul
push
push
xchg
ins
cmp
mov
arpl
mov
sub
xor
rcl
sbb
or
or
cmp
jb
jg
inc
jl
hlt
outs
(bad)
cmc
test
adc
pop
repnz
inc
daa
push
stos
push
out
mov
jmp
imul
sar
es
cmp
sbb
ss
pop
(bad)
lea
sar
bswap
cmp
xchg
adc
xor
sbb
cmc
push
xchg
pop
std
ror
mov
xor
push
ror
addr16
push
ja
mov
xchg
xlat
aaa
adc
jns
stos
repnz
loopne
fwait
enter
pop
notrack
in
sbb
popa
mov
popf
adc
dec
push
mov
lods
inc
js
pop
dec
mov
xchg
ds
arpl
mov
scas
dec
(bad)
xchg
aam
loop
jp
stc
sub
mov
add
jge
outs
call
fidiv
retf
sbb
cmp
mov
stc
xor
ins
xchg
addr16
neg
or
push
push
out
arpl
jb
jns
xlat
inc
cmp
push
dec
aad
std
adc
xchg
mov
ror
lods
sbb
mov
cbw
retf
imul
mov
cmps
xchg
xor
mov
mov
fcomp
ja
inc
clc
dec
fcmovnb
dec
movs
inc
inc
push
lods
test
mov
je
stos
dec
jle
pop
cmp
fdivr
ins
xchg
sub
push
call
icebp
dec
ja
outs
push
out
shl
xchg
enter
stos
(bad)
fstp
int
inc
mov
shl
(bad)
popa
in
fisttp
sti
xor
sbb
push
dec
sub
mov
scas
mov
add
and
sub
mov
push
jg
pop
lock
rol
inc
leave
cmc
pop
and
sbb
mov
cmp
jge
push
out
mov
xor
pop
out
ret
and
cmp
ret
(bad)
cmp
les
leave
mov
stos
jmp
jb
fstp
or
imul
fild
mov
pop
xlat
jae
cwde
test
shr
mov
popa
push
sar
jge
push
loope
or
imul
aam
jmp
popa
pop
out
jmp
pushf
pop
ds
ret
add
ret
hlt
inc
sti
out
imul
arpl
mov
mov
jl
add
in
popa
jmp
cmp
cmp
and
mov
add
inc
outs
or
sub
imul
push
std
loopne
jp
pop
sbb
int3
xor
sub
jle
and
pop
das
push
out
pop
(bad)
jo
mov
mov
jo
ret
js
movs
cmc
and
lea
add
or
outs
xor
inc
dec
int3
pop
mov
sar
mov
test
ret
sub
mov
dec
inc
xchg
out
cmps
push
(bad)
out
clc
cmp
cmp
inc
sub
inc
sub
mov
mov
sbb
out
mov
in
fisub
std
sub
popa
jle
nop
in
nop
xchg
dec
push
pop
xchg
das
jg
mov
shr
or
add
movs
lahf
pop
stc
ss
jmp
xor
sbb
push
jle
or
jae
ror
mov
fs
enter
jmp
mov
out
cdq
mov
lods
test
push
(bad)
or
cmps
mov
std
aaa
movs
ret
push
xor
xor
dec
(bad)
js
jl
dec
clc
mov
data16
mov
sbb
(bad)
xlat
fisubr
hlt
out
nop
and
je
xchg
xchg
in
mov
ror
dec
aas
out
dec
jae
lods
retf
mov
clc
cmps
and
repz
movs
dec
mov
sbb
mov
dec
add
repnz
mov
mov
shl
ret
lods
or
xlat
test
jge
stos
call
lock
or
jecxz
or
ficomp
stos
fisubr
aaa
pop
lea
lea
dec
jo
mov
or
xor
mov
cwde
movs
mov
xor
sbb
pop
sub
mov
add
lock
mov
jmp
jmp
fnsave
jns
mov
and
inc
jp
test
nop
(bad)
(bad)
dec
mov
dec
pop
sbb
jmp
push
popa
cmp
ss
inc
jbe
inc
fdiv
mov
mov
mov
mov
loopne
xor
(bad)
cmp
mov
mov
add
jae
sbb
sub
push
sub
push
lods
pop
cmovne
lahf
mov
pop
and
jae
fistp
pop
push
arpl
xchg
hlt
mov
add
ret
aas
imul
scas
add
xrelease
mov
dec
stos
xchg
loopne
es
iret
lods
inc
jb
add
loopne
sar
inc
xor
mov
daa
or
ror
inc
sub
daa
int3
push
mul
enter
mov
adc
in
imul
fwait
sub
neg
dec
loope
test
fcomp
aam
cdq
stos
retf
ficom
cmp
xor
cmps
sub
mov
imul
add
shl
loope
ja
mov
outs
or
out
lods
test
rcl
je
mov
xchg
cs
mov
int3
mov
pop
lods
jne
xchg
cmps
sti
push
stos
dec
jmp
and
sbb
add
pusha
mov
repnz
(bad)
lods
push
fiadd
jge
fst
das
push
or
inc
jne
call
jno
and
call
data16
fisttp
dec
icebp
cmp
sub
sbb
cmp
mov
fs
outs
xlat
(bad)
sbb
jo
cmp
scas
clc
jmp
ror
das
lods
inc
pop
push
or
out
cmp
ins
pop
rcr
fstp
enter
jle
sbb
jnp
pop
xlat
pop
loope
dec
push
movs
xor
adc
lods
push
repz
and
lock
icebp
pop
pop
aad
lahf
inc
sub
sub
sbb
jo
inc
and
shl
je
push
mov
adc
and
jns
mov
shr
in
jp
dec
push
bound
xor
or
je
adc
adc
mov
(bad)
sbb
(bad)
xchg
fld
dec
dec
push
lds
push
pushf
jns
mov
and
scas
push
adc
sbb
in
jne
pop
or
cmp
jl
ja
pop
pop
mov
or
repz
jnp
or
xor
dec
or
sub
jae
cli
mov
not
sar
sub
adc
adc
xchg
mov
out
push
adc
sub
and
or
sub
mov
cwde
push
clc
repnz
dec
push
or
and
and
and
xchg
push
pop
inc
add
adc
(bad)
shl
pop
(bad)
push
xabort
pushf
jne
(bad)
xchg
aam
mov
cmc
and
es
(bad)
sub
or
or
lahf
mov
mov
mov
push
scas
jecxz
(bad)
fdiv
sub
dec
sub
pop
jecxz
inc
lea
xchg
movs
aaa
sub
jmp
retf
leave
sbb
(bad)
push
or
or
mov
mov
mov
lods
out
aad
add
rcl
mov
nop
or
xchg
in
fnstcw
test
pop
mov
jecxz
sbb
xor
adc
ins
pop
add
popa
test
fistp
xchg
mov
dec
push
in
mov
ds
stos
cwde
sbb
and
shr
call
sbb
or
xchg
pop
mov
pop
adc
mov
cmp
and
aam
in
aad
pop
sbb
push
inc
mov
sub
mov
cdq
bound
mul
and
pop
mov
pop
xchg
xor
mov
(bad)
out
xchg
mov
stos
scas
fadd
hlt
or
hlt
xchg
(bad)
xor
jp
shl
xchg
mov
cdq
dec
repnz
and
outs
jnp
daa
retf
fimul
push
xacquire
cmc
inc
popa
fnstsw
scas
add
cmp
lahf
pop
xchg
mov
or
rol
jo
sub
ror
rol
stos
mov
stc
imul
sbb
adc
icebp
cs
arpl
cdq
js
in
push
(bad)
je
push
repz
cld
lea
or
jl
inc
sub
in
jmp
jmp
sbb
cmp
icebp
pop
jle
xchg
sbb
mov
test
cli
scas
jmp
xor
jae
mov
in
and
outs
popf
jne
mov
in
nop
mov
stos
arpl
cwde
pop
dec
out
iret
js
adc
lods
cdq
xchg
and
and
popa
xor
sbb
cdq
hlt
push
rcl
mov
jb
add
push
xchg
mov
dec
shr
std
dec
lods
outs
repnz
pop
jmp
mov
xor
push
test
jbe
lahf
bound
push
xor
pop
outs
xchg
push
dec
call
sub
sub
(bad)
sbb
xchg
js
popf
and
jmp
inc
hlt
mov
inc
shl
adc
push
mov
add
inc
pop
dec
jmp
mov
jle
sbb
sub
call
xchg
push
push
ret
mov
int
and
cmps
adc
out
aas
cmps
xchg
addr16
sbb
sbb
xor
cs
ss
cli
and
popa
adc
js
into
jmp
ins
dec
imul
adc
and
fisttp
xor
mov
cdq
cmc
test
push
jae
xor
jmp
jne
test
scas
and
(bad)
jmp
cmp
out
xchg
jge
in
retf
int
in
ret
sub
adc
stc
cmp
xchg
jg
int3
push
mov
mov
pop
xchg
jbe
cmps
mov
lahf
cwde
jg
stos
mov
pop
ror
dec
mov
mov
sub
mov
xor
mov
iret
or
bound
jno
mov
dec
add
xlat
pop
fnsave
mov
(bad)
fdivr
inc
stos
inc
bound
or
inc
cmp
(bad)
adc
leave
retf
xchg
data16
add
fisubr
into
js
jge
xlat
ficom
cmp
outs
bound
outs
out
ins
jmp
push
inc
call
sbb
or
pop
lock
ins
and
mov
enter
jo
add
hlt
or
pop
mov
add
push
sub
scas
jmp
xchg
add
cmp
push
imul
out
test
ret
mov
adc
enter
imul
cmp
jbe
pop
xor
(bad)
bnd
sbb
ds
repnz
cmp
pop
adc
ins
inc
push
cmp
add
mov
retf
jne
pop
iret
mov
jmp
pushf
cld
pop
(bad)
clc
outs
inc
popa
lahf
jnp
pop
ins
sar
test
sbb
mov
pop
in
adc
loope
mov
jne
fwait
mov
das
sahf
loope
aam
div
sar
pushf
sub
sub
out
jns
xor
inc
inc
push
inc
add
mov
stos
pusha
dec
pushf
mov
out
xlat
in
movzx
loop
ror
sub
or
xor
jmp
(bad)
ror
xchg
pop
push
xchg
dec
mov
stc
jns
test
xlat
mov
cs
les
cmps
inc
stc
or
dec
into
xchg
(bad)
xor
dec
mov
outs
adc
(bad)
dec
cmp
clc
test
icebp
cmp
cmp
push
rcr
fnstcw
or
stos
push
sbb
cdq
inc
gs
xor
dec
jle
adc
jle
ins
pop
js
stos
test
cmp
loopne
lock
pop
daa
ret
push
mov
jge
ins
cmc
nop
in
pop
test
call
jg
ret
sub
mov
lahf
ins
fnstsw
xlat
arpl
push
mov
fwait
(bad)
call
outs
mov
scas
es
mov
pop
inc
test
xchg
jmp
fld
sbb
jl
test
sub
test
std
mov
int
inc
mov
pop
cmc
aas
and
mov
imul
pop
pop
movs
fwait
(bad)
xchg
imul
es
mov
cmp
dec
and
data16
and
jle
dec
xchg
clc
movs
pop
sahf
sar
and
sti
cmp
or
loop
std
inc
std
je
adc
(bad)
stc
push
lods
pop
lock
cmp
jg
cdq
nop
pop
clc
pop
xor
or
xchg
inc
push
dec
pop
mov
inc
retf
sahf
outs
or
imul
jo
push
fild
(bad)
cmp
and
mov
and
xor
sbb
sar
add
aad
sbb
inc
scas
ja
adc
xchg
call
dec
movs
mov
adc
enter
cmps
lods
mov
loopne
mov
in
mov
stos
jno
cmp
out
xor
inc
jle
adc
xchg
lea
add
ins
lods
das
xchg
mov
jns
pop
lea
adc
jnp
lods
stos
movs
cmp
and
xchg
jae
mov
mov
sub
les
sub
pop
cmps
jnp
cmp
jbe
stos
xchg
aas
(bad)
cmp
movs
stos
hlt
inc
cld
push
cmp
mov
stos
clc
fcomip
scas
mov
cmps
cmc
inc
popa
mov
fldenv
mov
retf
adc
jg
push
and
sub
adc
out
xchg
(bad)
out
dec
push
(bad)
ret
addr16
adc
pop
lds
fwait
xor
test
sbb
sbb
mov
les
retf
repnz
fistp
hlt
js
push
aaa
enter
xlat
mov
mov
add
nop
sub
dec
push
mov
cmp
sbb
xor
pop
out
jle
std
out
in
inc
jnp
push
push
add
leave
in
dec
adc
int3
fnstsw
data16
repz
push
aas
add
inc
push
jmp
aad
push
mov
scas
neg
nop
xchg
pop
ins
push
push
pcmpeqw
out
sbb
dec
adc
fcomp
paddsw
scas
loopne
mov
enter
xchg
cli
inc
jmp
push
movs
sti
mov
mov
mov
dec
loope
xchg
jmp
add
popa
enter
add
and
jp
enter
lea
sub
cdq
fist
dec
sar
adc
jne
imul
mov
daa
xor
and
je
out
inc
push
ret
jne
pop
cmc
scas
mov
sub
daa
dec
test
push
push
or
mov
xchg
sbb
cdq
sbb
adc
jle
mov
pop
dec
xor
pop
cmp
xchg
stc
mov
fcos
jo
(bad)
fcomp
inc
push
push
push
sbb
mov
retf
out
loop
fidivr
jle
arpl
sub
inc
mov
jmp
fimul
bound
pop
sbb
sbb
mov
ds
ret
outs
out
(bad)
sub
popa
pusha
pop
adc
lods
and
cli
xchg
(bad)
push
mov
gs
int
dec
repnz
es
jp
movs
fadd
jl
adc
mov
jp
jecxz
sbb
fist
dec
in
add
fucomip
rcr
retf
jmp
in
pop
cmp
aad
out
fsub
bound
xchg
lock
test
xor
sub
add
xlat
ss
scas
xchg
pop
pop
or
mov
stos
push
lods
lods
pop
ins
pop
mov
ins
mov
(bad)
jbe
clc
cld
mov
xor
into
icebp
mov
cmp
fmulp
iret
movs
mov
movs
mov
inc
jbe
sub
fwait
mov
mov
mov
cmp
mov
push
pop
inc
dec
push
sub
popf
pusha
nop
adc
sbb
mov
jae
jns
or
call
frstor
or
loope
adc
pop
das
fadd
outs
mov
jae
cmp
out
inc
gs
pushf
mov
scas
iret
imul
shr
xchg
xchg
xchg
xchg
es
push
int3
adc
cdq
lahf
mov
xor
add
sub
pop
dec
add
lods
into
inc
dec
mov
mov
loop
mov
ds
mul
(bad)
pop
mov
or
xchg
jns
mov
in
xchg
popf
(bad)
jmp
dec
sbb
dec
arpl
mov
(bad)
sub
sub
out
cs
push
stos
adc
jl
or
pusha
xor
shr
xor
cmps
push
ds
neg
push
dec
test
inc
arpl
cmp
call
mov
je
or
pminsw
xchg
sub
sbb
add
xchg
push
sbb
enter
into
cmps
ins
dec
lods
lods
dec
jg
mov
jg
cwde
scas
pop
dec
out
push
push
fwait
shl
in
mov
push
shl
fdivr
outs
outs
inc
lods
stc
jl
pop
mov
xchg
and
push
sahf
adc
adc
iret
(bad)
repnz
call
je
dec
inc
mov
jle
ins
xor
sub
and
in
jg
push
(bad)
in
xchg
mov
or
retf
inc
push
mov
out
(bad)
data16
das
int3
(bad)
or
and
(bad)
xchg
ror
pop
ret
and
fdivr
and
push
cdq
jo
adc
test
xor
movs
mov
inc
scas
shr
outs
scas
dec
push
push
fidivr
inc
cmc
stos
push
outs
mov
arpl
cmpxchg
dec
mov
mov
cs
scas
sbb
jle
std
fsub
mov
cmp
jg
xor
or
xchg
push
enter
pusha
sbb
mov
sub
(bad)
ds
iret
xlat
adc
mov
fsubrp
or
arpl
mov
bound
inc
ror
sbb
popf
jbe
xchg
jns
jmp
movs
add
iret
cmps
mov
push
jecxz
xchg
(bad)
or
ins
ds
push
rol
add
popaw
add
mov
add
aaa
fxtract
fwait
mov
test
pop
in
stos
mov
fsub
ss
stc
inc
rcl
xchg
mulps
ins
jmp
jmp
add
sub
js
(bad)
sub
xor
gs
call
loope
inc
inc
repnz
pop
mov
mov
(bad)
cmp
test
loop
(bad)
lea
imul
fild
pusha
jge
aad
push
or
jmp
(bad)
xchg
adc
push
xor
xor
mov
or
xor
xchg
mov
std
or
sbb
adc
jae
sub
lock
mov
xor
jecxz
sbb
dec
out
lods
shl
push
(bad)
mov
shr
jno
mov
scas
jae
sahf
cmp
jmp
push
dec
push
mov
cmp
push
jnp
push
push
fild
push
inc
aam
dec
adc
mov
pop
fnsave
stos
mov
sub
lods
pop
imul
pop
(bad)
pop
mov
sub
int
add
fmul
ss
pop
add
cmp
fmul
rcr
out
inc
jge
cs
sbb
enter
retf
mov
in
pop
mov
mov
call
clc
imul
scas
cmps
xchg
into
lods
xchg
xchg
icebp
in
mov
dec
push
mov
push
jne
jg
fcom
add
test
(bad)
mov
pop
hlt
or
push
shl
mov
lock
outs
imul
lods
xchg
mov
lea
inc
je
sub
push
mov
xchg
imul
(bad)
fnstcw
pop
jns
int
sub
xor
mov
jle
lods
out
mov
mov
mov
(bad)
mov
push
push
loop
mov
ins
xor
jns
(bad)
jecxz
call
aad
popf
jbe
add
sub
daa
push
mov
outs
or
add
mov
push
xchg
or
call
inc
mov
dec
(bad)
loop
loop
sbb
cld
or
or
adc
movs
xor
js
retf
dec
sbb
loop
rcr
dec
(bad)
imul
fistp
dec
nop
sti
std
rol
adc
stos
mov
sub
and
xor
jae
xor
mov
dec
imul
movs
dec
fcomp
test
add
mov
inc
add
add
or
inc
adc
sti
inc
or
mov
cmps
movs
pop
cmps
out
stos
rol
mov
(bad)
sub
or
ret
mov
outs
std
ja
cmp
mov
aaa
ficom
mov
sahf
data16
cld
cmp
pop
sub
ror
int3
mov
or
mov
(bad)
es
pop
pop
jp
test
cwde
popf
hlt
add
not
daa
mov
sub
mov
shr
mov
imul
add
rol
es
ret
adc
test
sub
xor
loopne
jns
xlat
leave
sub
dec
mov
into
inc
jne
add
sbb
mov
outs
mov
inc
sub
inc
fwait
or
xor
ret
dec
pop
je
loope
mov
pop
(bad)
aam
sti
add
jnp
jg
sub
scas
mov
or
in
and
fwait
ins
neg
xor
push
adc
jno
mov
outs
fisttp
xlat
mov
cli
jnp
cli
jae
pop
inc
adc
xor
ins
and
shr
pop
xor
push
rcr
test
call
xchg
ja
stos
lock
int
ja
pop
cmp
scas
hlt
xor
out
addr16
fist
movs
cmp
mov
jp
push
fwait
sub
dec
in
cld
(bad)
iret
ss
js
inc
dec
(bad)
cmp
xor
cmp
ret
adc
sbb
mov
aas
adc
lods
push
(bad)
hlt
and
popa
aam
rcr
loop
or
jns
push
jo
cmp
icebp
in
mov
clc
dec
pop
popa
dec
retf
das
data16
mov
inc
(bad)
cmp
push
cli
dec
ins
rcl
add
dec
jno
inc
inc
dec
lahf
xor
pop
ret
rcl
idiv
adc
sbb
mov
test
push
or
mov
mov
cmp
inc
jge
mov
dec
inc
mov
outs
add
xchg
fadd
mov
(bad)
xor
push
mov
inc
push
cli
arpl
retf
rol
sub
int
nop
cmp
retf
mov
popf
out
mov
add
shl
test
cmp
cmp
jmp
repz
push
lea
call
jl
mov
call
or
clc
icebp
out
sub
aam
inc
mov
mov
sub
nop
hlt
jp
adc
pop
push
inc
popa
mov
xchg
(bad)
in
dec
jbe
ret
xor
add
imul
scas
das
stc
rcl
adc
mov
mov
xchg
adc
mov
mov
dec
add
outs
mov
pop
loop
add
stc
jbe
add
sbb
dec
add
pop
xchg
dec
shr
aam
mov
adc
mov
push
jle
sub
xor
mul
mov
imul
addr16
pop
and
and
jo
fidivr
dec
mov
push
inc
mov
or
inc
ja
mov
test
or
push
mov
test
inc
push
pop
jne
jmp
fs
xchg
ror
fisubr
or
jg
out
pusha
outs
pop
sub
pop
ja
pusha
out
pop
js
mov
cmp
jmp
sub
dec
pop
xor
shr
(bad)
loopne
mov
aad
cmp
lds
jno
shl
mov
je
or
call
cld
dec
mov
sbb
push
push
xor
cli
lea
add
out
pop
sub
je
sbb
mov
adc
retf
adc
mov
mov
sbb
(bad)
ficomp
xor
adc
jl
ret
sbb
jne
retf
pop
stc
jo
inc
adc
add
out
cmp
mov
xchg
xchg
fs
xchg
in
push
inc
and
adc
pop
xchg
call
jmp
mov
aam
mov
call
xor
call
enter
loope
and
push
jb
add
out
or
add
pop
mov
pushf
in
dec
retf
and
jg
out
dec
push
mov
xchg
pop
pop
mov
mov
stos
sbb
sbb
in
pushf
xchg
dec
xor
mov
sar
push
pop
mov
adc
cmp
or
jmp
js
push
inc
jo
add
(bad)
xor
mov
jae
ror
mov
mov
pop
es
lds
mov
pop
jnp
jp
lahf
(bad)
clc
jecxz
xchg
mov
test
mov
aas
test
or
push
dec
shr
(bad)
loopne
cmp
js
rcr
stos
sti
push
or
xchg
ss
pop
int
add
dec
retf
dec
adc
sti
in
sub
mov
xor
pushf
push
sar
mov
jg
cmp
(bad)
nop
jle
cli
and
cmc
dec
xchg
cli
aaa
jae
lods
push
xchg
clc
push
fisttp
stos
out
ins
(bad)
aam
jo
mov
out
fucomi
sbb
retf
sbb
std
jp
hlt
cmp
popa
mov
bound
and
inc
and
fcomp
dec
pop
mov
in
mov
test
sbb
cmp
pop
call
sub
mov
mov
lds
jp
pop
movs
(bad)
ret
xchg
dec
push
aad
xchg
lea
push
addr16
aas
mov
mov
adc
sbb
bound
dec
ja
loopne
stos
xchg
mov
cdq
rcl
xchg
cdq
jnp
add
retf
scas
jle
scas
ret
loope
sti
mov
jmp
mov
mov
cmps
dec
mov
pop
scas
popf
push
xchg
add
outs
cmp
mov
sub
retf
inc
xor
xor
fwait
fwait
outs
js
inc
pop
add
outs
or
les
xor
pop
test
icebp
(bad)
jbe
xchg
dec
(bad)
rcl
sbb
jbe
ret
adc
mov
sti
inc
jns
js
mov
fwait
(bad)
data16
pop
push
loopne
xor
hlt
scas
cmps
inc
stos
ss
(bad)
push
mov
pushf
cmp
outs
mov
popa
ret
arpl
mov
neg
cmps
call
xchg
mov
arpl
sbb
or
mov
add
aaa
out
rcr
dec
sub
pop
jecxz
in
idiv
xchg
rol
and
ja
dec
repz
ror
cdq
cmp
loop
jecxz
fadd
loope
inc
retf
neg
adc
pop
popa
fcom
cmps
mov
(bad)
(bad)
xor
or
test
push
and
or
xchg
xor
cmp
jo
mov
jp
pop
adc
add
sbb
clc
adc
sub
or
leave
push
ds
inc
out
into
aaa
out
push
vaesimc
es
imul
xchg
jecxz
push
pop
test
ret
or
cmp
push
fmul
pop
fisttp
cmps
mov
push
std
cmps
push
out
dec
sub
sbb
and
jecxz
retf
dec
arpl
je
inc
mov
mov
adc
jg
mov
out
int
ret
shr
mov
fmul
int3
gs
data16
(bad)
mov
pop
in
push
jle
rdmsr
(bad)
(bad)
mov
xchg
xor
(bad)
adc
mov
dec
dec
stc
xlat
sub
sbb
pop
ja
xchg
clc
and
es
and
je
add
sub
test
clc
add
pop
sbb
xchg
sar
dec
ds
jmp
enter
fild
cmc
sbb
ffreep
scas
push
retf
and
or
push
sub
pop
int3
in
retf
add
rol
pushf
sbb
mov
pop
pop
jp
xchg
xor
cmps
addr16
cmc
(bad)
pop
inc
loopne
adc
xor
in
cmps
xchg
mov
test
xchg
sub
cs
sahf
repz
fdiv
fwait
mov
stos
xor
(bad)
jecxz
xor
xor
sbb
stos
or
inc
sub
sbb
fidiv
inc
or
and
div
mov
or
fisubr
int3
cmp
add
sub
add
jp
aam
bound
jecxz
adc
inc
rcl
jge
mov
neg
in
movs
xchg
shl
push
and
scas
fcmovu
add
je
adc
dec
xchg
mov
push
inc
xchg
push
fisttp
int
jge
xor
cmp
fmul
add
mov
fsub
xchg
mov
cmps
mov
pop
mov
xor
jb
in
xchg
mov
repnz
jns
retf
mov
ins
aad
jnp
mov
and
pop
call
hlt
push
popa
pop
popf
or
push
(bad)
cdq
sahf
mov
fdivr
xchg
test
or
pushf
(bad)
mov
scas
mov
xchg
push
cmps
mov
mov
or
and
dec
mov
(bad)
jbe
mov
dec
jne
(bad)
(bad)
fld
xor
mov
cmp
test
mov
in
sub
mov
pop
mov
xchg
not
cli
ret
lock
outs
addr16
sbb
sahf
loop
mov
xchg
jp
popf
pushf
adc
and
clc
cdq
xor
xor
mov
fwait
pop
std
loopne
ffree
lods
loopne
loop
mov
xor
call
sbb
sbb
push
push
(bad)
mov
cwde
sub
push
repnz
scas
pop
sbb
and
out
or
push
pop
or
mov
add
dec
push
(bad)
neg
add
inc
mov
add
imul
sahf
pop
jmp
mov
lods
mov
ins
test
add
jecxz
adc
xor
pop
jge
cld
push
hlt
adc
xor
cmc
or
adc
xchg
test
xor
xchg
sbb
push
jnp
pop
dec
mov
pop
sub
adc
retf
inc
cmp
jb
lahf
test
fwait
pop
test
ja
jbe
rcl
call
pop
cmp
es
lods
punpckldq
jl
leave
(bad)
push
ins
add
retf
or
stos
jge
(bad)
cs
sbb
and
out
test
sub
into
faddp
adc
and
adc
ja
jae
cld
(bad)
xor
(bad)
pop
jle
in
pop
sub
push
mov
ret
cld
hlt
jnp
push
dec
mov
jl
fbld
mov
call
push
add
dec
bound
sub
sbb
sub
cwde
add
hlt
adc
nop
retf
ffreep
pop
add
add
loop
pop
sbb
inc
sub
xor
sbb
pop
outs
cmps
add
ja
dec
(bad)
fcom
push
push
shl
cdq
xchg
imul
in
sbb
fmul
es
es
mov
mov
test
iret
lahf
adc
xor
cdq
dec
lea
xor
dec
ins
mov
cmps
jmp
push
fbld
push
mov
adc
add
fmul
add
pop
cmp
lea
inc
mov
mov
dec
cmp
xchg
(bad)
ds
inc
in
(bad)
in
mov
int
shl
jle
ja
mov
in
pop
in
push
mov
sbb
retf
outs
pop
sti
in
adc
or
div
dec
push
fwait
dec
xchg
cld
push
rcr
mov
or
in
ja
fisttp
xchg
adc
push
addr16
sbb
xor
jmp
adc
jnp
pusha
mov
push
lods
jmp
pop
repnz
mov
ins
aaa
xchg
cmp
scas
push
xchg
xchg
int
inc
push
fucomp
xor
dec
jge
out
bound
push
outs
or
jg
inc
sub
adc
cmps
inc
push
add
inc
pop
inc
jb
xchg
lods
nop
jecxz
fwait
sub
sub
push
popf
sub
sbb
xchg
xchg
jg
(bad)
in
push
(bad)
jnp
mov
mov
rcr
cmps
mov
das
add
sbb
sub
shr
mov
int3
jnp
call
add
jge
cmp
jg
(bad)
mov
repz
lock
inc
enter
xrelease
adc
dec
mov
xor
ds
sahf
mov
enter
gs
ss
inc
call
movs
cmp
pop
adc
fadd
rcr
pminsw
test
adc
ret
movs
mov
add
dec
xor
stc
jo
lds
out
push
inc
ins
jb
je
outs
push
dec
mov
jne
aaa
iret
fcmovnu
outs
inc
les
jecxz
push
stos
popa
retf
rcr
push
lods
stc
mov
push
pusha
test
sti
addr16
fdivr
int3
test
xchg
adc
not
(bad)
sti
ins
mov
lock
and
or
lea
lahf
les
je
jmp
outs
test
add
fst
div
mov
hlt
icebp
adc
push
pop
(bad)
xchg
cmp
mov
ror
shl
(bad)
and
aad
or
pop
mov
pop
test
ss
inc
lock
inc
imul
and
lods
jbe
scas
push
adc
test
push
lahf
popa
xor
ja
sub
rcr
ret
in
arpl
pop
mov
mov
xor
cmp
andps
clc
cld
push
mov
push
daa
jo
cmc
jns
jmp
aas
push
cmp
dec
push
lods
arpl
fwait
popf
push
rcr
sub
mov
dec
cmc
and
popa
stos
cs
in
pop
or
sbb
outs
adc
ins
xor
outs
push
cmps
or
fidivr
mov
adc
icebp
std
sbb
ficomp
ffreep
pop
mov
sub
ds
aad
call
adc
call
cmp
ss
into
sbb
xchg
iret
push
xchg
daa
into
les
cmps
cmps
mov
(bad)
mov
cmp
jge
ret
mov
test
sbb
sar
cmp
hlt
aad
xchg
out
adc
dec
push
or
jp
movs
mov
push
lea
fsub
loop
or
mov
fsub
adc
rcr
stos
retf
jmp
xchg
(bad)
sbb
mov
(bad)
pop
mov
mov
jg
loopne
stos
jge
or
sub
mov
mov
(bad)
lahf
enter
cmp
fdiv
sub
push
inc
shl
pop
mov
pushf
rcr
dec
push
add
adc
adc
movs
fstp
jae
loop
ret
inc
mov
(bad)
test
(bad)
cld
xlat
push
inc
jle
dec
in
cmp
mov
mov
call
xor
out
jmp
xchg
imul
jmp
add
xchg
xchg
sub
fstp
test
sub
or
mov
mov
inc
pop
mov
nop
fdivr
mov
lock
sbb
jae
repnz
or
cmps
fwait
push
push
cmc
fild
cwde
sbb
arpl
jbe
pop
int
int3
and
test
test
cmps
loop
adc
push
sub
sqrtps
fs
stos
into
iret
push
push
xchg
mov
xor
mov
cmps
mov
pop
cld
inc
lds
dec
aas
mov
rcl
ins
out
data16
cmp
xchg
pop
loopne
outs
ja
xor
out
sbb
dec
lahf
mov
sar
loope
stos
mov
inc
mov
mov
pop
inc
sbb
jae
clc
bound
or
popa
fmulp
mov
in
das
push
pop
jno
je
mov
repnz
imul
pop
dec
adc
ds
mov
cwde
push
stc
xchg
mov
xchg
daa
jns
xchg
or
mov
call
pop
movs
scas
pop
jl
scas
inc
pushf
(bad)
mov
sbb
gs
adc
push
imul
add
ror
lods
out
enter
push
inc
xchg
dec
mov
jne
adc
adc
or
push
pop
in
jb
jge
pop
mov
mov
sbb
push
ss
retf
mov
mov
pop
scas
outs
mov
leave
je
icebp
test
push
ds
sbb
test
out
(bad)
cmp
int3
cmp
push
out
inc
push
je
out
jmp
push
or
je
icebp
jne
iret
add
add
mov
and
mov
outs
or
jo
retf
pop
imul
inc
daa
jns
ds
repz
inc
adc
lahf
nop
in
pop
xchg
and
movs
(bad)
mov
sbb
out
cmp
pop
xor
rcr
ins
add
xchg
clc
sbb
jbe
test
inc
outs
movs
and
(bad)
mov
add
mov
or
mov
int3
(bad)
mov
test
je
ds
inc
mov
fadd
mov
push
leave
adc
xor
mov
out
sbb
frstor
fbld
nop
fild
and
(bad)
xor
jo
jae
push
add
xor
mov
jbe
mov
mov
ret
mov
cmp
test
inc
pop
mov
mov
inc
gs
scas
mov
aas
data16
push
sub
add
popf
icebp
gs
ds
div
mov
sub
fsub
push
add
es
fild
mov
cmp
add
fidivr
xor
aam
bound
xor
mov
test
js
sbb
jge
scas
xor
cmps
adc
sahf
and
jnp
add
inc
pop
pop
icebp
mov
repz
pop
pop
add
and
mov
pop
int3
or
mov
push
out
inc
and
jno
xlat
jmp
(bad)
mov
dec
xchg
icebp
retf
mov
jns
pop
movs
lahf
lods
in
lods
sahf
jno
xchg
mov
sbb
cmp
jmp
push
adc
fisub
sub
add
loopne
out
rol
ror
repz
lods
into
mov
jbe
pop
xor
aam
test
sar
clc
or
xor
jb
add
mov
fs
adc
add
std
jecxz
ja
fdivr
cmps
pop
rol
dec
pusha
mov
pop
inc
fcom
or
mul
push
loopne
sbb
(bad)
and
jns
lock
sub
cmp
dec
mov
push
jl
xlat
lar
adc
aam
inc
popf
loope
jns
pop
movs
movs
sti
scas
jb
mov
and
or
add
ficomp
and
inc
xor
dec
fcom
inc
push
and
adc
dec
ja
nop
and
arpl
ins
jl
movs
sahf
inc
mov
ja
mov
lods
test
xor
fnstsw
inc
aas
jle
(bad)
mov
imul
mov
xchg
rcr
jb
hlt
js
mov
mov
addr16
mov
call
jmp
push
ins
mov
call
jecxz
cmp
call
add
out
xchg
cmps
xchg
fbstp
mov
adc
dec
and
popf
outs
inc
movs
sbb
cmp
xor
scas
xor
call
(bad)
pop
push
enter
fs
fcmovnu
push
(bad)
icebp
jge
ror
cmp
jmp
iret
xchg
push
int3
lods
pop
inc
psllq
sbb
shr
push
pop
adc
mov
cmp
mov
mov
popf
pop
mov
ret
inc
fstp
push
jns
inc
push
repz
je
mov
xor
push
jno
popa
outs
sbb
push
enter
in
and
pop
jbe
call
dec
lock
(bad)
ja
aas
ins
daa
sbb
shl
out
cmps
lahf
adc
mov
push
aam
inc
jns
mov
push
cs
dec
or
push
inc
ins
aaa
cmp
adc
aaa
cmp
add
sub
fwait
mov
clc
outs
mov
outs
(bad)
int3
sub
or
in
mov
pop
ins
and
xlat
scas
xlat
ret
or
rol
inc
sub
sub
dec
int3
rcr
ret
cmp
int
idiv
mov
add
mov
or
adc
xchg
(bad)
aam
add
mov
mov
aaa
push
(bad)
repnz
lods
cmc
xchg
sbb
sbb
mov
retf
and
xchg
imul
fisub
fnstenv
imul
xchg
cwde
shr
dec
aas
push
xchg
xor
jmp
jge
xor
mul
adc
call
pop
ret
push
sbb
push
call
(bad)
inc
out
pop
call
jmp
es
aad
xor
add
or
movs
inc
lods
adc
pop
jb
cld
push
or
ins
fiadd
mov
mov
jae
inc
ficomp
sub
lea
jae
jne
push
aas
ret
out
shl
jne
(bad)
cli
js
ja
sub
mov
adc
add
jo
cdq
xchg
xchg
fstp
jmp
add
gs
in
lods
aad
clc
cmc
fadd
mov
loopne
in
fcmovnu
or
push
mov
dec
popf
int
push
in
lods
test
hlt
cmp
dec
pop
popa
pop
es
add
lods
xor
scas
std
loope
xchg
push
fdiv
rol
mov
mov
mov
in
sbb
loopne
mov
in
rcl
or
xchg
jno
cmp
xor
fstp
push
test
js
in
imul
cmp
sub
add
icebp
loope
jle
pop
mov
pop
jb
js
aam
out
aas
mov
faddp
pop
push
jg
in
jle
xchg
mov
inc
jbe
add
xchg
push
adc
sub
pop
add
mov
mov
xchg
jmp
idiv
mov
cwde
and
push
pop
lods
push
pop
mov
inc
mov
in
cdq
xchg
push
push
(bad)
in
or
sbb
sbb
neg
addr16
add
xchg
mov
enter
sbb
adc
les
shr
mov
es
aam
jnp
xor
cld
fs
inc
sub
jno
cmp
or
xor
pop
daa
mov
das
xor
jl
mov
sub
out
ret
jmp
cli
dec
jmp
out
icebp
rcr
and
popa
cmp
scas
xchg
ret
ret
(bad)
xchg
call
pop
push
push
xor
push
cmp
adc
jmp
push
lods
out
add
mov
movs
inc
(bad)
sub
jp
jnp
stos
test
rol
cmps
jnp
sbb
stc
lds
cdq
shl
fadd
aaa
fnstenv
mul
repnz
jo
in
inc
add
out
loop
add
scas
std
movs
shl
or
jecxz
xor
xchg
xor
xchg
xor
loope
push
frstor
cmp
inc
int
fs
cli
adc
push
inc
call
and
cmp
xlat
std
or
or
mov
inc
cmp
lods
and
or
mov
adc
mov
jb
fidivr
push
push
fcom
push
fsubr
dec
and
dec
push
pusha
mov
or
mov
mov
test
jno
rcl
ret
mov
data16
mov
sub
(bad)
rcl
nop
push
add
lea
sub
neg
or
fmul
mov
fistp
mov
and
or
ins
xor
push
adc
push
inc
iret
popf
clc
loope
aam
add
out
loope
push
leave
xchg
and
repz
mov
sar
icebp
xor
sar
mov
xor
scas
fsub
adc
and
jmp
arpl
inc
(bad)
push
xchg
aas
in
jecxz
cmp
loopne
(bad)
dec
or
lods
icebp
pop
and
call
or
in
xchg
enter
mov
les
gs
call
pop
inc
shl
sub
cmp
ja
or
or
movs
and
shl
retf
inc
(bad)
cdq
enter
sbb
sub
mov
jmp
and
sub
or
push
adc
jnp
jge
mov
xchg
inc
mov
dec
loopne
cdq
push
scas
test
or
mov
ds
or
test
sbb
stc
out
call
inc
xchg
and
int3
lods
push
not
cmp
fadd
cmps
fild
push
leave
push
cli
mov
loop
leave
jnp
or
ins
and
adc
pop
hlt
and
cmc
xchg
popa
rcl
push
pop
adc
das
jae
scas
mov
mov
rcr
xchg
loop
mov
sub
mov
mov
adc
loope
int3
mov
xlat
fdivp
movs
sti
sbb
fimul
fiadd
adc
jecxz
jmp
sbb
in
dec
mov
movs
aas
outs
test
fistp
pop
fxtract
inc
(bad)
out
stos
push
arpl
mov
adc
adc
xchg
ds
pusha
sahf
retf
inc
loope
add
nop
ret
adc
arpl
clc
in
sahf
aas
int3
aam
ror
popa
sar
aam
push
das
pop
or
jp
arpl
sub
mov
into
inc
call
cs
inc
(bad)
out
(bad)
shl
adc
mov
or
pop
scas
out
or
cmp
scas
sbb
aad
fidivr
ss
cmp
push
les
mov
add
mov
xor
sbb
int
repnz
popf
das
cmp
inc
push
popa
cmps
cs
adc
add
adc
mov
lea
test
js
fistp
dec
movaps
sub
fucomip
mov
data16
xor
into
ret
mov
mov
inc
test
daa
mov
lahf
xchg
sbb
cs
mov
and
pushf
jae
jb
ss
les
pop
test
adc
dec
pop
sbb
sbb
or
cmp
retf
ret
and
ret
sbb
inc
inc
or
xchg
scas
outs
rcl
mov
repnz
addr16
hlt
add
cmp
shl
xchg
test
pushf
xor
aad
inc
lods
mov
jae
(bad)
or
mov
das
repz
mov
mov
jecxz
ret
sub
mov
aas
cmp
cmps
dec
sub
gs
test
mul
xchg
jmp
aaa
je
cmp
and
inc
nop
pop
mov
sub
leave
and
or
ja
add
ja
sar
iret
mov
or
aad
test
and
or
mov
retf
and
pop
or
test
fmul
cld
dec
test
xor
icebp
adc
sub
xor
jne
cdq
push
test
sbb
mov
hlt
ret
mov
inc
sbb
fistp
xlat
sub
jbe
pop
jnp
test
jmp
sub
ja
mov
fwait
arpl
js
and
inc
std
bound
mov
pop
fchs
and
stos
and
and
cmps
jp
fimul
ins
xchg
mov
inc
stos
cmps
rcr
cs
in
arpl
cmp
push
cmps
loop
push
aad
xchg
mov
in
dec
nop
pop
add
mov
data16
dec
mov
add
(bad)
pushf
ds
test
mov
jae
xchg
sub
sbb
addr16
adc
and
aas
shl
mov
dec
pop
mov
icebp
ins
mov
test
jl
inc
idiv
stos
dec
add
dec
dec
mov
sbb
loopne
cmps
push
push
lods
xchg
pop
in
mov
cmc
jbe
jp
pop
shr
inc
inc
jg
in
fimul
inc
mov
cdq
test
jmp
dec
mov
cld
fstp
mov
jb
(bad)
icebp
push
inc
lods
push
std
iret
leave
sahf
lds
and
sbb
dec
mov
inc
pop
bound
or
sbb
mov
xlat
sahf
sbb
(bad)
adc
stos
or
pop
movs
sbb
les
pop
pop
das
ja
retf
(bad)
mov
(bad)
aaa
shl
std
inc
leave
mov
pop
pop
adc
aad
mov
daa
adc
fsubr
and
in
call
xor
xchg
xor
pop
xchg
es
push
pusha
mov
movs
push
ds
mov
in
xor
repz
fs
in
mov
mov
cmps
scas
inc
mov
sbb
sub
jp
sbb
mov
adc
or
or
cmp
inc
daa
mov
cmc
test
scas
icebp
dec
push
rcr
and
je
sbb
mov
je
outs
pop
dec
es
adc
int
scas
mov
push
pop
test
inc
pcmpeqw
test
pop
loope
mov
push
and
fistp
xchg
mov
test
pop
cs
retf
int3
fs
xlat
clc
mov
retf
imul
jo
pop
aaa
mov
shr
sti
or
mov
mov
test
dec
push
xor
scas
gs
je
movs
cmps
pop
cmps
leave
and
in
imul
mov
cli
das
sbb
cwde
out
xor
jp
fmulp
fimul
dec
mov
scas
push
in
lock
(bad)
mov
out
jbe
mov
call
jno
test
cmps
push
std
addr16
xchg
mov
daa
dec
lods
scas
jnp
jno
sti
mov
jge
scas
sbb
rol
xlat
shl
stos
enter
out
sbb
lods
dec
(bad)
js
inc
add
fs
pop
ss
lods
fcomp
iret
mov
push
pop
sbb
aad
jl
or
xchg
idiv
scas
ja
mov
aas
js
outs
nop
mov
xchg
fwait
dec
sub
jl
add
aam
retf
and
lea
push
mov
xor
in
jecxz
movs
xor
mov
xlat
pop
pop
push
cmp
(bad)
mov
je
stos
adc
neg
add
mov
aam
xor
les
xchg
in
pop
xor
and
xor
cmps
stos
dec
addr16
test
cmp
cmc
ret
into
xor
cmp
push
pop
loop
ss
inc
aad
lds
loope
imul
mov
mov
lahf
dec
xor
push
into
sbb
(bad)
call
das
sub
out
push
adc
pop
mov
outs
sub
in
(bad)
cwde
repz
icebp
xchg
dec
call
test
adc
pop
push
retf
sub
gs
scas
scas
inc
call
rcr
and
jnp
aas
ins
xchg
data16
rol
ret
les
ins
stos
aam
bound
popf
test
adc
xchg
xchg
adc
xor
(bad)
imul
inc
(bad)
sti
push
icebp
stos
jno
and
pop
iret
mov
out
js
add
js
stc
mov
jge
enter
jo
jnp
cs
jmp
enter
mov
lahf
xor
sub
imul
mov
dec
daa
scas
call
or
iret
in
push
add
int3
cmc
sub
cmps
scas
sbb
and
leave
ins
cmp
stc
dec
aam
inc
vhsubpd
ja
push
cmp
ins
xchg
mov
rcl
fwait
mov
and
repz
adc
in
jb
cmps
js
sti
cld
repnz
adc
aam
xchg
add
mov
add
gs
add
hlt
mov
fld
jnp
pop
cs
pop
push
imul
dec
stos
or
cmp
sub
add
mov
push
jb
sbb
and
or
sahf
aad
ss
repnz
mov
or
jbe
addr16
sub
pop
popf
jb
dec
and
push
and
mov
xchg
out
push
ja
shl
add
div
bound
jnp
fmul
ret
(bad)
or
pushf
int3
es
lds
cmps
enter
xor
lods
je
push
push
cmp
dec
lock
jno
xchg
xor
push
inc
sbb
push
sub
add
mov
xor
ja
ror
sub
enter
movs
rol
dec
add
mov
iret
ss
mov
ret
arpl
mov
fldcw
mov
add
sub
ret
sub
and
inc
add
jno
ins
in
fcomp
mov
cmp
xchg
pop
and
(bad)
orps
cmp
js
test
mov
push
mov
cmp
jmp
inc
xchg
push
jns
test
retf
sub
mov
mov
in
xchg
jp
push
es
dec
jge
add
stc
in
mov
je
call
pop
push
bound
sub
mov
and
sub
out
(bad)
mov
mov
lds
inc
adc
mov
adc
cmp
cmps
test
or
mov
xor
xchg
das
rcr
or
mov
ins
mov
mov
(bad)
or
mov
mov
cmp
dec
repnz
or
xor
rcr
nop
dec
(bad)
sub
sbb
daa
stos
pop
push
fst
xor
mov
mov
femms
int
js
xchg
in
imul
in
call
jmp
call
sub
mov
sbb
pop
push
push
and
jno
pop
aad
cmp
inc
retf
dec
xor
or
cmp
pop
out
sub
xor
add
xchg
fldenv
shl
jecxz
nop
retf
push
cmp
mov
pop
jno
push
jnp
add
xor
mov
imul
sub
jmp
dec
push
cmp
fldenv
leave
or
mov
pop
sub
inc
fsubr
into
adc
popw
mov
jge
out
xlat
or
shr
xor
movs
jmp
addr16
adc
outs
ds
xor
push
push
loop
cdq
int
aam
cdq
je
mov
push
jmp
add
cli
cs
inc
int
jae
ror
test
mov
push
xor
jno
inc
jb
xchg
mov
or
mov
out
push
push
stos
cmc
shl
jge
sbb
mov
into
inc
lahf
(bad)
dec
xchg
or
xchg
xlat
jmp
gs
pop
adc
pop
lods
arpl
and
mov
in
lahf
sbb
int3
and
mov
sahf
dec
cmp
dec
adc
mov
in
mov
adc
push
retf
push
inc
fadd
adc
xchg
or
pop
daa
lods
xlat
mov
arpl
popf
fisttp
jp
cmp
mov
(bad)
pop
mov
push
sahf
jge
add
pop
add
mov
xor
aad
(bad)
jl
mov
sti
imul
imul
es
push
in
xor
ins
xchg
shr
fwait
mov
korb
popa
fnstcw
mov
cmps
test
xor
int
(bad)
pop
cmps
out
adc
inc
into
jecxz
xchg
cmp
ins
aam
sbb
ins
test
sbb
mov
or
lods
mov
mov
repz
inc
in
popa
ins
inc
cmps
out
loop
mov
cmp
inc
xchg
mov
pop
lds
test
fidivr
inc
adc
call
pop
cs
pop
je
fcmovnu
or
push
ret
mov
xor
jmp
iret
inc
in
mov
jmp
add
cmp
ss
daa
pop
ins
push
xchg
movs
test
sbb
mov
aam
pop
cdq
fadd
stos
jge
repz
dec
adc
adc
adc
and
add
mov
cmp
mov
pushf
mov
cs
pop
inc
mov
cmc
adc
jg
ret
cdq
xchg
sar
jge
jo
cmp
xchg
int
push
adc
or
movs
(bad)
jbe
int3
jbe
test
sbb
leave
clc
ror
(bad)
je
jno
mov
(bad)
jmp
ds
xor
cmp
icebp
push
icebp
xchg
mov
stc
stos
arpl
leave
jnp
mov
or
add
mov
cmp
test
xor
int
dec
sub
mov
out
movs
mov
pop
mov
jo
fs
mov
and
mov
inc
ins
(bad)
push
test
lock
std
mov
push
pusha
inc
data16
and
je
sbb
out
mov
adc
mov
mov
pop
lods
popf
mov
jbe
dec
or
dec
hlt
adc
jmp
push
out
cli
sbb
ja
sbb
out
retf
(bad)
(bad)
aas
sbb
add
movs
push
cmp
mov
or
cld
sbb
in
test
pushf
ds
pop
push
out
pop
dec
fsubr
adc
ins
dec
rcl
cs
mov
hlt
sbb
xor
pop
mov
xchg
imul
mov
cmp
imul
cmp
xor
mov
dec
dec
add
data16
pop
ins
or
cwde
ins
dec
push
mov
xchg
(bad)
dec
outs
lock
adc
jb
enterw
out
pop
push
sbb
ficomp
stc
add
jmp
dec
sub
push
(bad)
jo
test
xchg
or
push
test
xor
cs
push
loope
stos
inc
repz
sbb
jg
lock
leave
sbb
add
jp
ss
mov
sbb
jle
cmps
lock
in
scas
jg
xchg
cmp
in
mov
mov
fisub
dec
cmp
dec
mov
addr16
mov
cmp
test
in
cli
and
jecxz
add
jbe
xchg
and
pusha
dec
adc
(bad)
scas
ds
loopne
test
push
shl
fs
movs
arpl
cmc
mov
test
and
push
pusha
xlat
jmp
out
(bad)
imul
jp
movs
xor
loopne
popa
aam
lea
jge
push
jecxz
call
mov
mov
push
clc
pop
push
(bad)
mov
sahf
lock
mov
out
mov
and
and
mov
jge
adc
imul
mov
fist
cmp
mov
pop
cmp
mov
mov
loop
mov
dec
in
pop
add
cmp
inc
dec
inc
into
push
out
std
cwde
movs
aam
jbe
dec
xor
xor
adc
cmova
lods
das
lahf
cmps
js
push
popa
ss
sub
(bad)
imul
and
fucompp
jb
aas
add
push
or
sub
push
push
pop
or
leave
ja
xor
in
adc
sbb
push
xchg
mov
push
or
xor
xchg
out
sub
shr
retf
mov
push
lods
out
repz
mov
leave
jl
jbe
add
fcmovb
out
leave
mov
jmp
cmp
push
and
or
shr
and
(bad)
mov
cli
scas
adc
nop
mov
loopne
int
aaa
loop
js
xor
adc
adc
jp
leave
shl
loopne
pop
rol
(bad)
repz
mov
ret
stos
popf
ss
sbb
push
mov
pop
mov
mov
mov
(bad)
xor
and
inc
pop
sub
jp
add
mov
lock
xchg
sub
mov
pop
sbb
(bad)
adc
lds
mov
movs
test
in
or
cmp
fsub
cld
aam
xchg
cmp
jecxz
scas
cmp
test
ja
enter
imul
shl
dec
and
retf
or
and
inc
les
fwait
dec
stos
mov
add
pushw
push
mov
add
ja
(bad)
sub
inc
aam
imul
ror
clc
fs
pop
xor
dec
fsubr
sub
push
rcr
pop
stc
add
ficomp
pop
cmp
mov
fnstcw
lods
and
xchg
(bad)
jo
pusha
adc
and
mov
dec
les
stc
imul
sub
loope
mov
cmc
mov
lea
mov
jge
daa
arpl
rcl
fsubr
aaa
mov
mov
push
pushf
cs
out
ss
addr16
jmp
and
and
dec
cwde
dec
out
mov
fs
jno
in
xor
or
cwde
dec
mov
shl
dec
bnd
repnz
ja
mov
push
xor
xchg
mov
and
std
fs
sub
nop
iret
dec
jecxz
mov
add
jnp
daa
or
mov
and
pop
les
sbb
scas
dec
jmp
xor
mov
addr16
jae
fiadd
pop
bound
xor
movaps
in
mov
inc
cld
xchg
gs
mov
jb
add
fsubrp
pop
lods
xchg
mov
(bad)
sub
stc
and
dec
or
call
mov
fist
dec
push
retf
add
cdq
shl
dec
neg
retf
(bad)
scas
mov
lods
mov
sbb
pop
fstp
or
dec
pushf
mov
push
xchg
(bad)
mov
idiv
xor
ret
nop
pop
arpl
fs
ret
jb
mov
or
bound
stos
push
stos
arpl
aam
ins
je
jne
jg
adc
mov
jb
jo
fcom
adc
lods
push
loope
imul
enter
pushf
(bad)
loopne
xor
inc
xor
pop
jbe
ins
push
mov
mov
(bad)
cmp
cwde
fwait
(bad)
cmp
add
scas
xchg
dec
repnz
xchg
popa
jmp
fldcw
pushf
pop
pop
imul
in
jmp
dec
push
mov
mov
sahf
lea
(bad)
movs
and
pop
es
neg
ret
cmp
jmp
mov
stos
push
(bad)
mov
mov
push
nop
int
dec
push
jne
mov
sbb
aas
sti
div
jmp
arpl
cdq
and
in
add
dec
addr16
push
mov
stc
xor
arpl
push
mov
out
cmps
iret
in
jp
bound
into
pop
jno
popa
pop
sar
xchg
xbegin
jmp
outs
sub
and
test
mov
dec
cmp
push
stos
icebp
es
ror
mov
stos
mov
retf
not
ja
fiadd
dec
xchg
inc
shl
push
adc
mov
and
ds
cmps
out
mov
ror
loope
dec
call
leave
out
pop
add
sub
pop
pushf
xor
fsubr
mov
hlt
sub
loope
mov
jb
mov
jb
cmps
xor
popf
sub
stos
inc
mov
cdq
ficomp
xchg
hlt
inc
clc
and
xchg
fcmovne
test
xchg
into
and
fst
callw
mov
into
add
mov
pandn
mov
je
movs
cdq
bound
pop
jne
std
sub
cmp
aaa
mov
jle
lods
stos
xchg
pop
lahf
adc
leave
cmp
pop
fsubr
lea
sub
xor
inc
dec
aas
mov
mov
mov
mov
adc
lock
pop
mov
xor
or
in
gs
aam
ins
pop
and
dec
sbb
sbb
push
mov
cmp
lahf
ja
test
push
outs
xor
add
push
push
and
mov
sahf
popf
es
and
xchg
sub
cmp
push
ficomp
imul
sbb
jo
mov
retf
test
sbb
lahf
mov
fldcw
test
dec
shl
cld
xchg
ds
imul
ins
push
pop
jo
cli
pop
jo
fild
xchg
jns
nop
inc
neg
rcr
fnsave
add
test
cli
adc
push
mov
daa
xchg
sbb
in
mov
test
sub
jg
call
lds
mov
shr
push
xchg
test
cmp
retf
pusha
dec
inc
ss
sbb
cmp
aad
push
mov
lods
stos
push
push
pushw
imul
mov
xor
add
pop
sub
popf
pop
sti
lods
rcl
xabort
pop
loop
jno
add
outs
dec
jns
or
(bad)
rcl
sahf
jge
or
push
retf
jb
not
mov
pop
or
pusha
shl
repz
adc
int
into
pmaxub
mov
stc
inc
inc
push
jp
jmp
or
mov
xor
inc
add
lock
enter
enter
adc
dec
out
rcl
test
mov
pop
inc
ds
sbb
fwait
mov
in
(bad)
push
cmps
les
loope
(bad)
pop
or
pop
add
sub
push
mov
push
push
adc
(bad)
mov
push
add
pushf
inc
sub
mov
leave
jmp
aas
or
push
mov
int3
mov
cmp
sub
xor
push
sti
rol
mov
xchg
or
(bad)
fstp
stos
imul
shl
clc
sbb
jo
ins
mov
jp
or
jno
packuswb
std
loop
adc
es
adc
and
sbb
mov
repnz
test
mov
ss
cmc
cmps
cli
xchg
cli
push
pop
scas
sub
adc
aam
fs
xchg
cmp
aas
xor
gs
mov
out
fimul
dec
pop
bound
fdivrp
sub
mov
es
jmp
movs
std
mov
pop
lods
mov
and
outs
lea
ins
mov
dec
shl
je
clc
push
xchg
cli
mov
xchg
xlat
clc
dec
call
dec
dec
xlat
pop
xchg
xchg
stc
pop
cmp
aaa
stc
dec
xchg
sub
stos
out
add
call
push
ins
aad
mov
and
ror
cli
pop
fisubr
out
dec
dec
xchg
mov
dec
cmps
test
aaa
cli
sub
mov
xchg
sbb
je
cmp
push
das
ret
push
or
(bad)
test
cmp
test
addr16
retf
dec
retf
fdivr
sub
sar
push
xchg
mov
cmp
and
lods
popa
adc
pop
shl
push
sahf
add
sbb
div
mov
mov
pop
pop
dec
sub
push
sbb
ins
xchg
jns
sbb
fdivr
jge
out
fnstenv
clc
out
shr
movs
adc
pop
xor
lods
push
ss
fiadd
imul
inc
(bad)
je
ins
rcl
or
into
mov
xor
les
call
and
xchg
mov
in
and
pop
stos
int3
iret
cs
mov
jnp
sbb
inc
jl
xor
xchg
stos
dec
inc
mov
fdivp
in
in
add
sbb
pop
addr16
mov
mov
and
lods
mov
xor
enter
rcr
arpl
jg
cmp
push
jmp
add
push
mov
lock
call
add
xor
aas
bound
cmps
mov
mov
test
in
mov
dec
retf
push
mov
or
cwde
lahf
mov
scas
test
xchg
xor
xchg
rcl
test
sbb
lahf
xchg
test
mov
test
lea
xor
cli
in
add
inc
das
push
(bad)
push
fild
ror
sbb
mul
push
sbb
inc
fisub
gs
pop
addr16
jo
cmp
cmc
mov
aas
bound
sbb
(bad)
mov
cdq
leave
(bad)
pop
add
int
mov
dec
adc
fucomip
jmp
adc
outs
mov
out
sub
(bad)
repz
push
sub
jge
leave
add
xor
pop
lods
mov
addr16
adc
sar
pop
xchg
cmps
pop
cmp
outs
scas
adc
add
push
aaa
jb
fidiv
cmp
mov
sahf
pop
xlat
and
xor
xchg
lock
push
jecxz
xchg
jl
inc
adc
jns
jecxz
test
sub
fwait
xlat
int
loopne
and
jb
and
mov
dec
or
sbb
repnz
mov
(bad)
shr
ret
je
pop
lock
pop
fbstp
mov
push
mov
fisttp
sbb
lods
fidivr
mov
or
pop
ror
mov
push
add
and
out
stc
mov
and
dec
call
retf
mov
push
stos
test
fdivr
push
xchg
aam
jbe
mov
mov
mov
lods
push
popf
dec
sbb
fmulp
bound
pop
dec
inc
xchg
sub
xchg
inc
sub
aad
jl
ins
sbb
mov
xlat
(bad)
clc
popf
push
jmp
push
sbb
retf
(bad)
jmp
je
jmp
push
mov
cmp
mov
add
not
sbb
sbb
iret
fistp
cmp
stos
jb
and
xchg
jo
iret
mov
adc
ja
xor
push
cs
lods
ss
bound
mov
in
push
xor
xlat
not
add
sub
and
mov
mov
int
mov
fmul
cmp
xchg
mov
stos
les
nop
push
cli
inc
je
or
scas
xchg
loopne
js
sti
mov
mov
add
aas
aad
jno
adc
push
ret
mov
test
adc
inc
cdq
xlat
jmp
mov
sub
xor
cmp
fild
and
retf
cmp
add
sub
sti
movs
push
pushf
jne
dec
push
(bad)
dec
mov
add
dec
mov
and
pop
xor
stos
mov
add
sub
in
retf
adc
dec
sub
pop
rol
iret
push
cmp
popa
test
in
loope
push
xchg
xchg
dec
jp
jmp
fwait
(bad)
jmp
mov
movs
das
or
scas
call
mov
jnp
(bad)
int3
xor
add
xchg
sbb
repz
jg
out
adc
add
mov
repnz
daa
ins
fldenv
int3
jmp
js
push
pop
into
jp
add
out
mov
sub
push
shl
adc
mov
cmps
fisub
or
pop
push
popf
in
sbb
clc
cmps
jmp
aad
mov
stos
loopne
xchg
scas
shl
sbb
div
ror
inc
mov
and
test
cdq
cmp
stc
inc
jecxz
inc
popf
push
push
adc
adc
xchg
das
cli
push
inc
xchg
aaa
icebp
rol
mov
les
(bad)
pop
jg
sub
and
push
in
pop
push
aad
imul
jl
nop
cmp
jge
push
push
pop
mov
cmp
rcr
push
test
or
mov
mov
add
xchg
inc
std
cmps
xchg
push
cmps
dec
cdq
or
fs
and
(bad)
mov
movs
les
gs
nop
scas
mov
cs
xchg
mov
clc
stos
jmp
jecxz
cmpxchg
adc
push
jbe
rcr
mov
jno
jno
mov
mov
and
popf
out
loope
ja
retf
xor
pop
mov
adc
and
jp
ss
sub
js
xchg
xchg
add
xchg
aad
jmp
mov
push
adc
inc
call
and
addr16
js
add
inc
jg
adc
sahf
jl
fistp
and
mov
push
xchg
push
daa
ret
mov
repz
xchg
ss
inc
out
fisub
into
or
mov
mov
inc
pop
enter
mov
adc
daa
lods
xacquire
ins
pop
add
lock
aas
adc
add
enter
xor
jle
jbe
loopne
sbb
xchg
ins
adc
fadd
cmp
and
mov
jg
and
jae
dec
jmp
imul
mov
dec
int3
mov
stc
arpl
paddusw
jo
xor
sub
gs
into
hlt
xchg
xchg
inc
pushf
cdq
std
hlt
xchg
cld
push
inc
aas
cld
jp
mov
pop
or
fnstsw
sub
inc
jbe
dec
cmc
cmp
push
enter
retf
call
push
hlt
scas
ficomp
and
mov
xchg
arpl
xchg
add
inc
std
sti
sbb
idiv
fstp
adc
(bad)
sahf
pop
out
imul
fcom
(bad)
loop
cmp
jae
ins
sbb
adc
test
sub
ret
inc
popf
push
and
mov
jne
pop
xor
iret
jecxz
(bad)
aam
psubsw
cmc
ficom
rcr
sti
fwait
call
and
popf
sub
xlat
lahf
out
xchg
nop
call
lods
shl
and
xchg
into
aaa
mov
xor
xchg
rcr
in
and
inc
(bad)
fmulp
cdq
into
and
cmp
inc
xor
inc
xor
cmp
sub
jge
fcmovnbe
mov
lock
es
ror
rol
inc
jecxz
imul
mov
out
dec
add
pop
inc
sbb
mov
mov
xor
add
jae
popa
out
rol
pusha
icebp
dec
mov
lahf
adc
jle
sub
enter
daa
jbe
data16
xor
(bad)
fdiv
rol
shl
sub
(bad)
into
xchg
enter
cmp
in
(bad)
shl
sbb
xchg
dec
(bad)
push
cmps
call
inc
mov
in
lea
mov
mov
(bad)
test
imul
push
pop
xor
fs
sbb
fldcw
sub
pop
into
mov
cmp
mov
pusha
das
jns
pop
or
inc
or
or
sbb
adc
mov
xchg
je
jmp
sbb
lock
shr
sub
pop
xor
jo
mov
fnstsw
push
and
or
cmp
nop
cmc
xchg
pop
add
dec
inc
mov
mov
cli
and
stc
test
or
gs
pop
add
add
cwde
inc
cmp
jecxz
and
cmp
and
adc
inc
pop
aaa
xor
aas
or
sbb
push
outs
ret
sbb
dec
mov
and
ss
call
int
dec
js
jmp
or
mov
cli
scas
test
xor
loope
push
sahf
mov
dec
and
loopne
repnz
lock
loope
int
cld
into
div
xor
lea
cmp
mov
addr16
xor
adc
fcom
inc
sahf
pop
add
jb
fs
popa
imul
test
sar
ds
xchg
movs
jae
lea
sbb
int
test
cmp
dec
cmc
loopne
jecxz
sub
retf
dec
repz
sbb
lock
sahf
pop
mov
popa
pop
enter
dec
into
movs
or
in
pop
xor
push
ds
inc
cmp
fnstcw
outs
cmp
mov
leave
fmul
mov
adc
mov
xor
imul
sbb
cmps
popf
adc
ret
test
(bad)
stos
sbb
mov
cmc
ret
nop
fimul
int
add
iret
or
push
aaa
addr16
and
xchg
xchg
shl
pushf
loope
jl
movs
dec
xor
xor
xlat
sbb
pusha
pop
pop
int3
inc
icebp
(bad)
fild
repnz
and
scas
and
dec
out
inc
pop
aaa
pop
and
lods
icebp
clc
push
test
daa
loopne
inc
or
retf
ucomiss
gs
pop
adc
mov
fwait
neg
add
cmp
ret
add
stos
push
push
jp
pop
das
(bad)
bnd
lods
in
aad
dec
mov
pop
data16
dec
xor
pop
mov
repz
fldenv
shl
popf
push
jmp
dec
inc
das
xchg
retf
pop
mov
mov
lahf
(bad)
mov
xchg
fiadd
jb
sub
and
mov
cmp
test
data16
pushf
ror
fild
mov
repz
jl
retf
push
or
mov
int3
aaa
cmp
pop
sub
std
add
mov
test
mov
xchg
sub
adc
shl
sbb
mov
mov
out
adc
stc
pop
push
cmp
cs
sub
pop
fimul
cmp
adc
inc
xchg
ret
mov
mov
test
(bad)
outs
mov
push
jge
aam
fistp
cmp
retf
aad
xchg
mov
leave
in
jnp
ja
push
outs
dec
pop
retf
(bad)
movs
outs
jo
scas
call
rol
inc
push
fbstp
push
cmp
inc
pop
sub
push
ja
sbb
test
ss
ins
pop
adc
push
push
xchg
mov
mov
adc
test
aad
fsubrp
xor
sbb
pop
mov
xor
movs
mov
in
jmp
fmul
fmul
call
les
or
add
dec
adc
add
jg
(bad)
mov
dec
mul
adc
in
loopne
jle
pop
repz
mov
(bad)
jno
add
(bad)
cwde
jns
movs
retf
cmp
adc
xor
pop
aam
jbe
ja
shr
inc
mov
adc
dec
jl
fisttp
push
out
and
add
fs
mov
adc
fstp
je
les
pop
adc
sahf
xor
sbb
es
pop
inc
stos
mov
cs
cdq
pop
adc
imul
xor
jp
or
push
sub
shl
jae
push
fld
test
xor
or
aad
pop
lea
data16
(bad)
push
loopne
dec
iret
mov
push
sbb
arpl
inc
bound
bound
sub
or
add
sub
fdiv
into
mov
xor
mov
mov
mov
rcl
bound
sbb
lods
fdiv
mov
mov
sbb
sub
gs
inc
sub
and
xor
mov
xchg
dec
daa
adc
mov
fistp
xchg
fcom
or
mov
sbb
out
cmp
int3
jne
movs
mov
std
inc
pop
mov
loopne
gs
popa
std
hlt
sub
fs
iret
aad
pop
rol
rcr
xchg
loopne
arpl
getsec
dec
pushf
pop
shl
rol
stos
mov
adc
fbstp
xchg
push
ds
add
or
std
jno
adc
xor
mov
pop
pop
pop
(bad)
pop
or
sub
xor
stc
jmp
adc
out
push
mov
das
add
xchg
mov
add
(bad)
(bad)
or
aaa
cs
inc
push
push
pop
inc
lods
adc
xor
iret
push
aas
pop
add
sbb
adc
int
ret
adc
mov
stos
adc
mov
push
cmp
xchg
cmp
dec
sbb
std
jo
int
jmp
or
iret
adc
sub
cwde
fmul
xor
inc
fwait
rcl
out
or
and
cmp
(bad)
pusha
inc
sti
or
jle
push
inc
cdq
adc
je
fs
daa
inc
mov
cwde
push
aam
call
cmp
jo
lods
sti
data16
js
ret
xchg
dec
jae
aas
xlat
cdq
repnz
xor
xchg
jns
mov
xchg
js
in
push
inc
or
pop
lds
into
out
addr16
mov
jmp
sub
gs
movs
adc
pop
sub
psraw
add
(bad)
out
dec
aaa
or
test
mov
xor
mov
out
xlat
cmps
xor
pop
sbb
ins
xchg
lahf
mov
popa
cmp
into
aad
pusha
cmp
push
push
ja
in
sbb
push
sub
jne
notrack
mov
fmul
das
stos
loop
xchg
stc
test
retf
jge
pusha
pop
xor
in
repz
mov
inc
movs
xor
xchg
xor
retf
xor
outs
or
jno
inc
pop
pop
addr16
dec
mov
dec
int3
stc
cld
in
adc
dec
sub
shl
push
hlt
and
jp
icebp
fst
sar
ds
pop
jne
shl
add
mov
push
inc
adc
(bad)
(bad)
sub
push
mov
sahf
jnp
pop
(bad)
and
cmp
movs
call
out
dec
retf
out
mov
push
shr
(bad)
in
mov
inc
cmp
adc
jp
shl
sti
or
fadd
call
inc
add
or
pop
xchg
daa
xor
fs
or
scas
shr
(bad)
lock
or
ret
mov
mov
pop
xchg
mov
mov
xor
cmp
imul
xchg
sub
cmovbe
ret
cmc
push
dec
sub
sub
outs
add
cmovbe
std
sar
in
push
mov
push
jno
sub
add
sub
scas
inc
scas
les
icebp
inc
and
sti
cdq
inc
adc
mov
hlt
rol
cmp
mov
or
mul
stc
jmp
js
push
dec
jle
mov
mov
dec
and
in
outs
aas
push
call
inc
frstor
jge
outs
or
push
xor
pop
jne
jge
xor
xor
and
fwait
and
cmps
test
pop
jp
sbb
fsubr
jb
out
ds
das
add
sti
adc
cld
xchg
xor
xchg
xchg
jp
inc
pop
(bad)
jb
dec
popa
fadd
mov
xor
movs
mov
pushf
sub
dec
in
pop
repz
mov
push
test
nop
dec
ficomp
jns
or
push
dec
aam
xchg
xchg
adc
xor
inc
pop
dec
dec
jmp
xchg
jmp
(bad)
shl
imul
inc
and
cdq
movs
pop
adc
or
pop
inc
mov
int
inc
das
scas
dec
(bad)
loope
scas
xchg
mov
call
or
daa
jge
daa
xchg
loopne
pushf
cdq
mov
sbb
sbb
and
jl
mov
or
gs
cwde
mov
cmp
js
idiv
sti
es
and
dec
or
push
shl
sti
push
add
lods
std
or
retf
sub
fld
pushaw
xlat
and
fld
sbb
jmp
xchg
stos
jns
loop
shl
sbb
pop
mov
push
xlat
pop
xchg
shr
pop
adc
shr
pop
mov
sub
addr16
mov
loop
adc
bound
mov
repz
repnz
xchg
leave
jnp
sbb
mov
rcl
pop
mov
jge
rcl
gs
xchg
sub
sub
dec
cmp
adc
out
mov
mov
inc
xor
mov
cld
ret
jb
adc
mov
out
sbb
fisub
sub
adc
repnz
loop
sub
xchg
dec
inc
mov
movs
pop
add
mov
push
mov
lods
sbb
mov
sub
xchg
test
mov
loopne
push
jle
adc
jae
jmp
std
pop
jnp
inc
out
mov
inc
pop
mov
lock
loop
hlt
(bad)
loop
pop
mov
out
data16
cli
jno
clc
int3
jne
std
in
loop
cwde
addr16
and
in
rcr
cmp
cmp
mov
retf
inc
sbb
in
inc
adc
inc
retf
iret
lods
jg
pusha
mov
out
stc
add
push
push
es
xchg
shl
add
idiv
clc
lds
nop
pusha
js
sub
in
fs
adc
mov
and
sub
inc
or
enter
adc
fld
cmp
(bad)
jnp
mov
icebp
jmp
aas
mov
xor
outs
or
adc
jo
hlt
push
or
push
or
pop
pusha
cld
jle
and
mov
push
xlat
call
mov
sar
rcl
push
sbb
ds
in
cdq
dec
push
add
or
push
aam
xor
outs
aaa
add
daa
mov
or
jbe
arpl
xor
adc
push
retf
movs
(bad)
out
jl
adc
dec
test
push
xchg
retf
cmp
mov
test
sbb
out
mov
rcr
cmp
int3
mov
jno
jp
sti
retfw
arpl
daa
repz
retf
call
push
out
sub
int
call
add
out
xchg
rep
inc
test
push
push
imul
xor
aaa
ja
inc
pop
xchg
mov
test
inc
sbb
mov
and
pop
mov
adc
arpl
mov
add
sub
xor
(bad)
cli
push
mov
fst
mov
jo
shr
xor
repnz
pop
add
mov
xchg
rol
sub
pop
dec
scas
rol
lods
add
xchg
ret
add
adc
dec
jp
in
jp
movs
imul
dec
jecxz
rcr
sub
sub
movs
hlt
je
pop
inc
hlt
mov
clc
lea
bnd
(bad)
mov
shl
inc
and
les
outs
cmp
and
dec
xor
das
pop
pop
push
lods
popa
xchg
ja
dec
into
mov
repz
push
cld
mov
jo
aad
sbb
xor
sub
test
lock
out
mov
(bad)
sub
es
pop
gs
stos
aas
imul
enter
adc
or
xor
mov
jo
or
mov
sahf
or
and
dec
data16
push
add
js
iret
imul
mov
fwait
test
mov
outs
push
xchg
call
push
mov
jae
les
pop
add
imul
dec
fdiv
movs
sub
dec
(bad)
cmc
fistp
shl
xchg
mov
jl
pop
lock
ins
mov
sbb
pushf
cs
mov
scas
rcl
jge
add
aaa
xchg
and
test
jecxz
adc
add
retf
add
clc
xor
mov
lock
dec
fisttp
test
or
test
cmps
or
imul
and
sbb
sub
dec
fdiv
out
cmp
sbb
in
cs
or
call
jae
sbb
fiadd
and
dec
push
add
enter
cli
pop
cmps
imul
cwde
fcomp
jl
and
mov
push
pop
pusha
mov
imul
jecxz
jns
and
cld
dec
or
dec
add
push
jmp
iret
mov
jmp
outs
fisub
test
jmp
adc
lds
jns
lea
mov
in
xchg
test
xchg
or
sub
shr
addr16
rcr
sar
cmp
pusha
jp
push
add
out
mov
mov
(bad)
cli
xchg
cmps
dec
and
lea
data16
push
sar
lods
stos
aad
mul
push
sub
test
shl
xor
popf
xor
pop
sbb
fdivr
test
repz
call
ja
movs
or
push
ja
fmul
push
mov
pop
cmps
push
adc
(bad)
push
pop
xlat
adc
and
add
mov
mov
inc
fcomp
jne
or
jecxz
lods
ins
dec
or
dec
mov
mov
fdivr
mov
popa
cs
ror
out
adc
xchg
pop
adc
rol
cld
lds
ins
xchg
pop
adc
inc
mov
and
in
mov
mov
or
ins
loope
jno
shl
into
lds
jmp
fidiv
mov
mov
sub
mov
imul
xor
pop
inc
or
shl
mov
mov
cdq
xor
dec
leave
and
cmp
shl
pop
mov
mov
inc
inc
inc
mov
rol
outs
mov
mov
mov
pop
bound
add
in
leave
cmps
adc
xor
pop
adc
and
gs
pusha
mov
mov
les
sub
sbb
je
aaa
xor
(bad)
out
push
shl
retf
int3
mov
pop
push
jle
pop
mov
out
pop
mov
popa
dec
pop
cmp
retf
or
dec
xchg
cmc
xchg
dec
(bad)
js
sub
inc
add
sub
mov
hlt
scas
inc
fisubr
adc
ins
xor
and
mov
sti
adc
push
(bad)
jecxz
sbb
mov
xor
pusha
sub
push
fsub
mov
mov
(bad)
mov
mov
iret
and
test
or
lock
adc
jns
sub
or
iret
pop
sub
(bad)
or
unpckhps
bound
pop
loope
mov
inc
inc
pop
mov
add
cmp
sbb
adc
mov
xor
mov
imul
inc
cmp
out
pop
xchg
mov
repnz
leave
ss
and
stc
leave
div
mov
mov
push
inc
xlat
test
push
xor
shl
fcompp
repz
adc
xor
pop
movs
aaa
movs
mov
scas
push
jg
inc
stos
jnp
mov
data16
fbstp
add
sahf
add
xchg
xor
adc
jnp
repz
daa
push
mov
xor
jp
jno
push
add
xchg
or
xor
(bad)
std
popf
mov
in
jb
imul
mov
clc
mov
test
push
dec
retf
jecxz
xchg
je
loope
sub
(bad)
repz
mov
mov
jae
ja
sub
push
mov
ret
mov
mov
dec
dec
mov
mov
sbb
mov
in
cmp
push
dec
adc
outs
jnp
cwde
cmp
data16
scas
dec
xlat
str
int
jl
test
lahf
xchg
push
ss
fldcw
shl
ret
ret
cmp
test
xor
jp
nop
ss
fwait
popa
mov
inc
outs
mov
aaa
mov
std
in
xor
lds
or
push
sbb
hlt
les
ret
fucomp
sub
mov
adc
dec
movs
pop
xchg
(bad)
mov
mov
imul
dec
push
movs
in
pop
jb
xchg
cwde
cmp
test
loope
mov
aaa
int3
xchg
popa
(bad)
outs
int
loop
rcl
inc
sub
jge
adc
adc
mov
xor
int3
cdq
leave
xor
xor
int
dec
jmp
mov
jne
mov
xchg
loop
jne
xchg
push
adc
adc
sub
mov
cmp
sub
out
jmp
inc
dec
(bad)
in
nop
sub
pop
mov
emms
in
mov
push
mov
mov
call
mov
cmp
fwait
cmps
mov
imul
sar
sahf
push
and
mov
fadd
sbb
out
push
pop
mov
push
add
mov
out
gs
out
(bad)
iret
jne
xor
push
pop
cmp
(bad)
and
cwde
jns
bound
pop
sar
rcr
imul
jmp
pop
cld
jge
sbb
or
xchg
fidiv
lock
test
hlt
das
(bad)
data16
in
pop
aad
mov
int3
movs
into
sub
std
xor
lock
adc
and
rcr
leave
leave
ja
pop
and
push
mov
jl
test
pop
mov
mov
addr16
sub
test
jo
cmps
xor
jge
movs
(bad)
retf
jecxz
and
jge
cmp
pusha
dec
imul
push
jmp
jg
(bad)
test
pop
out
xchg
rol
call
xchg
jno
pop
enter
xor
ja
adc
outs
imul
retf
popa
cmp
pop
pop
fld
mov
outs
xor
jne
and
mov
out
push
lahf
shr
mov
stc
stos
retf
and
in
inc
ja
inc
push
xchg
jo
jge
lods
test
adc
iret
lock
das
cmps
out
adc
lahf
mov
mov
in
pop
add
adc
lock
adc
loope
mov
xchg
dec
xchg
push
push
jge
ins
sub
add
dec
int
inc
cmps
sub
gs
push
bound
test
fidivr
xor
pop
jns
dec
cmp
lods
jp
popf
mov
and
inc
and
arpl
mov
sbb
mov
mov
adc
iret
fst
push
enter
sub
mov
mov
pop
int3
popf
xor
retf
adc
js
test
div
push
push
jb
jge
icebp
sub
das
mov
jecxz
lods
(bad)
int3
mov
neg
ja
jb
push
sub
ret
push
test
sbb
repnz
dec
shl
fsubr
sbb
pause
iret
inc
cmps
mov
call
scas
sti
add
(bad)
out
sub
push
and
mov
add
bnd
popf
or
retf
popf
fcmovne
dec
sbb
adc
mov
pushf
ficom
(bad)
dec
(bad)
dec
idiv
adc
aas
or
cli
adc
mov
ficomp
mov
cli
push
sahf
retf
xchg
int3
loop
mov
mov
movs
add
push
jmp
cmp
adc
retf
push
adc
pop
dec
cmp
pop
add
imul
call
and
ror
or
mov
or
lds
inc
push
fsub
dec
sbb
mov
adc
es
in
push
call
xchg
idiv
xor
dec
ins
mov
xchg
pop
push
cmp
into
jo
sub
cmp
or
mov
dec
popa
add
cmps
xlat
in
and
cmp
outs
add
mov
sbb
mov
pop
loopne
(bad)
loope
sbb
popf
sbb
mov
test
ins
icebp
lods
shl
stos
hlt
repnz
nop
cli
mov
push
cmp
xchg
movs
xchg
push
hlt
pop
test
outs
loope
inc
xor
(bad)
sti
xchg
call
and
mov
ret
xchg
cmp
fwait
dec
jnp
xchg
inc
dec
popf
push
pusha
and
pop
into
int
test
mov
scas
mov
pop
mov
loopne
fwait
add
cmp
imul
push
ins
xor
push
aad
cmp
rcr
mov
jle
or
lods
pop
mov
or
sahf
mov
push
jns
test
lods
inc
mov
sub
mov
jae
cmps
mov
xchg
fiadd
jnp
inc
fadd
shl
or
jb
add
int
mov
xchg
xlat
ds
push
inc
imul
add
das
jb
sbb
test
rcl
movs
xchg
test
ins
outs
push
jmp
imul
cmps
call
push
xchg
call
xor
in
pinsrw
jnp
dec
cwde
mov
dec
mov
jo
pop
dec
je
mov
shl
jecxz
or
das
jge
outs
sub
cmp
movs
fs
in
fcomp
imul
mov
in
push
push
push
sbb
cdq
pop
ret
aad
stos
inc
inc
xor
leave
push
fistp
push
mov
in
sar
retf
loope
jmp
xlat
ret
movs
or
lods
fist
sub
(bad)
sahf
or
stos
stos
(bad)
aam
inc
fwait
rcr
enter
inc
pop
sub
jae
push
or
xchg
mov
fisttp
(bad)
mov
repnz
mov
lock
stc
adc
jge
or
cmp
rcr
(bad)
sbb
aas
fwait
inc
adc
outs
dec
sbb
dec
mov
xor
sbb
call
jl
into
sub
pop
xchg
and
ss
sbb
lods
jle
fcmovu
cmp
adc
retf
mov
dec
or
mov
jbe
adc
xchg
push
adc
pop
and
in
pop
or
ret
jbe
xchg
and
cmp
add
cs
adc
sahf
pushf
xor
xor
push
cwde
adc
inc
stc
and
or
xchg
or
scas
addr16
shr
nop
push
cs
xchg
iret
mov
mov
adc
imul
retf
add
add
pop
xor
push
dec
mov
lahf
jbe
lods
pop
in
jno
ds
popa
movs
lock
sub
repz
xlat
les
push
and
aam
cmps
(bad)
stc
ret
mov
mov
inc
mov
jg
push
jmp
dec
clc
xchg
cld
jae
mov
repz
in
fisttp
mov
adc
xchg
and
xor
test
gs
in
inc
xchg
add
inc
xchg
ror
fist
xchg
shl
ds
dec
les
dec
xor
shl
and
adc
adc
call
sbb
push
cmp
adc
repnz
or
dec
into
dec
xor
enter
mov
xor
test
push
out
out
mov
mov
push
push
outs
push
pop
mov
mov
cmp
push
add
pop
mov
aam
xor
cmps
movs
pop
loop
mov
js
es
and
dec
or
mov
ins
ja
push
gs
xchg
rcl
cmps
cmp
mov
test
jb
jge
mov
mov
es
out
lock
aad
popf
push
dec
mov
jb
or
jle
xchg
cmps
adc
mov
sub
add
out
push
dec
(bad)
push
jne
in
aas
je
cmp
cld
xchg
dec
push
int3
std
add
add
or
dec
mov
mov
out
shl
imul
pushf
mov
pop
jo
ficomp
cmp
xchg
bswap
xchg
jp
mov
nop
fwait
pop
jl
in
push
xchg
mov
rol
mov
ins
dec
ret
out
pop
mov
push
imul
shr
int3
(bad)
xor
ds
push
jg
(bad)
inc
retf
inc
mov
loope
(bad)
mov
pop
movs
inc
mov
and
outs
ja
cld
pop
cs
adc
or
inc
cdq
cmps
mov
lds
jge
stos
aas
dec
mov
fs
xor
call
jge
test
outs
ins
and
in
das
jae
das
ins
add
(bad)
jle
mov
rol
xor
jmp
jno
xchg
(bad)
mov
out
ror
xor
(bad)
sbb
adc
cmc
inc
dec
cmc
push
or
mov
stos
add
mov
sbb
int3
jmp
add
adc
ja
jne
inc
ins
into
loop
cli
in
jno
jle
test
mov
rep
adc
fcomp
emms
add
sar
sub
mov
xor
sbb
into
adc
xor
pop
xchg
mov
sbb
mov
lahf
stc
inc
jbe
gs
test
push
sahf
xchg
inc
inc
or
fisub
adc
inc
aaa
inc
ds
adc
pusha
xor
test
add
sbb
imul
ja
sub
cld
cld
gs
outs
dec
pop
fdiv
sub
xchg
cld
xlat
or
fstp
int
sbb
cmp
pop
add
pop
mov
pop
loope
mov
push
daa
imul
push
jb
pop
cmp
mov
sub
and
xlat
hlt
pop
push
adc
aas
mov
xchg
ins
sub
xor
add
int
cmps
lods
fwait
inc
fwait
or
jmp
mov
push
lahf
inc
std
call
jns
pop
out
pop
(bad)
test
xchg
cmp
ss
pop
(bad)
or
scas
lock
push
pop
cmp
in
outs
div
fisttp
jo
pop
xchg
mov
xchg
mov
mov
mov
sahf
jnp
scas
dec
je
js
pop
dec
cmp
mov
inc
iret
and
cmp
push
mov
fucomp
xchg
mov
jp
pushf
aaa
xchg
repz
mov
movntq
mov
aaa
inc
stc
add
mov
sbb
mov
mov
je
mov
mov
int3
xchg
sub
pop
mov
shl
push
sub
dec
in
fmul
mov
(bad)
push
inc
out
aaa
mov
imul
push
sub
cdq
mov
pusha
push
inc
adc
mov
loope
and
call
mov
adc
es
xor
(bad)
sbb
jnp
cmc
and
repz
imul
xchg
mov
lods
xlat
aad
dec
adc
sti
movs
retf
mov
fstp
ror
pop
mov
data16
ja
mov
adc
jmp
xchg
mov
jbe
adc
sub
(bad)
cdq
jns
mov
in
cmp
scas
rcl
dec
clc
mov
dec
ds
xchg
imul
ds
leave
ins
xor
mov
mov
mov
out
inc
cld
sbb
(bad)
push
loop
(bad)
loopne
dec
loop
sub
leave
stos
into
xor
shl
mov
out
xchg
(bad)
pop
mov
pop
jae
sbb
cmc
mov
aaa
ret
cmp
les
int3
jbe
jecxz
fbld
sti
xlat
push
aam
add
mov
mov
cmps
loop
loope
enter
out
lods
adc
test
pop
sub
xlat
pop
sbb
rcl
dec
xchg
lods
repnz
cmps
sbb
fnsave
xor
jp
cli
inc
pop
or
sti
cmp
add
shl
cmovae
sbb
cs
lods
imul
or
sub
and
(bad)
int3
mov
xor
jmp
jle
movs
(bad)
cmps
mov
inc
inc
jns
and
std
fistp
adc
inc
imul
cmps
add
les
dec
cmp
stos
push
or
cdq
(bad)
and
iret
pop
xchg
iret
xchg
and
sub
aad
test
or
push
pop
test
push
jge
xchg
call
jb
push
outs
push
fwait
jo
cmp
inc
pusha
add
inc
inc
push
mov
sub
fcom
or
xor
add
mov
div
adc
and
dec
or
jecxz
hlt
leave
addr16
mov
adc
sar
enter
inc
into
ja
push
into
jge
push
or
(bad)
xlat
cmc
add
push
ja
clc
jb
push
sbb
sub
(bad)
jmp
add
cmp
pop
mov
cli
add
ds
(bad)
cmps
test
daa
sbb
psrad
(bad)
cli
mov
out
popf
into
adc
cmp
adc
xor
sbb
data16
addr16
and
lods
call
in
arpl
icebp
and
and
neg
xor
das
mov
push
mov
inc
fistp
jae
sub
xor
aad
inc
pop
test
cmp
fisubr
jo
jno
push
(bad)
into
(bad)
sbb
dec
xor
jae
and
xor
push
add
aad
sbb
inc
sub
cmp
pop
pushf
(bad)
mov
rol
les
aaa
aam
scas
into
push
retf
inc
addr16
addr16
popf
imul
in
dec
fsubr
ja
xor
push
xor
out
rcl
sbb
mov
inc
lds
xchg
jg
push
cld
jno
ins
xchg
inc
pop
sahf
push
xchg
scas
arpl
mov
fwait
and
add
push
cwde
pusha
movs
div
scas
adc
adc
sbb
int3
out
repnz
pop
add
ds
cdq
imul
sub
jl
ror
xlat
faddp
xchg
addr16
push
push
inc
ds
xchg
push
out
xor
xchg
dec
or
rcl
push
push
ins
or
rcl
xchg
js
push
retf
movs
cld
in
movs
shr
loope
ret
outs
stc
sbb
(bad)
xor
jns
jo
scas
jmp
and
mov
or
lods
retf
test
fisttp
xor
int
fwait
out
inc
clc
aaa
jo
nop
fwait
call
inc
push
lahf
jo
popf
mov
jmp
dec
cmp
iret
lods
jo
retf
inc
pop
pop
iret
cmp
mov
movs
fild
mov
jbe
push
fiadd
or
retf
mov
adc
ss
or
mov
outs
xor
sti
fcmove
imul
jb
inc
jbe
mov
jbe
pop
add
test
leave
inc
cli
ror
jb
dec
mov
ins
cmp
xor
lods
dec
mov
aam
xor
aaa
lods
inc
les
div
aad
xor
ds
or
aam
sub
call
push
lahf
sub
popf
aam
scas
daa
cld
iret
dec
fisttp
ja
or
xchg
cmp
lds
cmp
pop
pop
mov
mov
sub
mov
push
jbe
inc
shl
push
sub
outs
sahf
dec
aad
cmp
pop
ins
pop
push
clc
outs
fwait
test
loop
xlat
push
sub
jge
sti
lods
(bad)
cmc
jle
(bad)
jecxz
xchg
pop
cli
push
into
pop
movs
scas
rcr
xor
inc
daa
sub
pop
jg
add
mov
fwait
mov
cmp
and
in
bound
xor
stos
retf
fld
sub
lahf
aas
dec
test
stc
push
push
out
fistp
xor
xor
lahf
mov
inc
test
arpl
push
pop
cmc
push
fisubr
fisub
pop
push
and
inc
aad
retf
arpl
mov
ret
fs
bound
aas
enter
movs
out
pop
sti
in
and
cmp
or
into
stc
add
ins
pop
mov
not
shl
mov
es
in
mov
shr
sub
lock
jne
pop
xchg
jecxz
jbe
dec
jmp
xor
cmc
xlat
jl
(bad)
mov
mov
int
js
std
inc
inc
out
xchg
and
das
imul
loopne
sub
aad
ins
fidivr
shr
test
xor
push
add
mov
mov
aad
sbb
jo
out
aad
jg
mov
aad
cs
dec
ins
inc
mov
xchg
add
push
add
xchg
sub
jle
aaa
mov
bound
jge
adc
inc
mov
jle
outs
add
movs
data16
outs
icebp
std
xchg
in
ja
jno
jle
mov
pop
pop
push
inc
int3
scas
or
(bad)
test
(bad)
cdq
and
dec
jbe
(bad)
lahf
addr16
(bad)
ins
movs
fs
repz
in
xchg
aaa
sub
loopne
shl
aas
das
adc
and
lds
outs
cli
outs
aaa
push
sbb
fwait
push
outs
and
lea
out
mov
mov
or
(bad)
pop
mov
in
jge
jecxz
dec
pop
fmul
push
jno
cmp
call
pop
test
push
push
inc
push
mov
sub
adc
and
mov
dec
or
xchg
sbb
xchg
popa
aad
into
aas
scas
inc
test
pop
mov
test
pusha
mov
outs
sub
xchg
int
jge
or
cmp
xor
js
es
scas
xchg
outs
in
xor
std
popa
mov
and
adc
int3
cmp
test
sti
mov
sbb
push
dec
xor
test
(bad)
ror
jge
pop
and
rol
push
sti
inc
rol
cmp
inc
aad
dec
mov
in
push
pop
aam
stos
test
pop
js
jae
scas
cmp
loop
mov
xchg
(bad)
std
cs
jmp
test
ffree
in
inc
xchg
ss
xchg
jmp
mov
ds
pop
jb
ds
jge
ins
ret
cmp
ja
push
mov
jnp
jmp
(bad)
stc
in
adc
jle
cmp
push
jle
mov
and
fidiv
xchg
scas
pop
mov
mov
mov
fimul
popa
and
es
fidivr
mov
adc
mov
pop
mov
push
and
xchg
mov
push
aam
movs
dec
xor
test
out
test
pusha
ds
out
hlt
out
jo
repz
cmps
retf
mov
sub
mov
outs
xchg
sub
bnd
in
xchg
test
jns
adc
cmc
daa
jae
fcmovbe
aam
pop
cmp
adc
sbb
sbb
movs
daa
jbe
cmp
or
adc
lds
add
xor
leave
sub
call
push
or
jb
or
rcr
sub
mov
enter
ja
pop
sbb
add
in
call
jmp
jle
lahf
sub
daa
shl
repnz
adc
lods
(bad)
out
mov
int3
ins
xchg
and
inc
push
jo
push
out
daa
push
cli
lods
movs
dec
inc
mov
mov
cs
or
ret
xchg
popa
inc
add
add
and
add
popa
mov
ins
in
icebp
ins
fs
pop
or
rol
push
test
arpl
(bad)
sti
xchg
or
(bad)
jo
jb
sub
fld
pusha
(bad)
test
jnp
dec
stc
ja
ds
lahf
jmp
lea
cld
(bad)
call
fild
cmps
jne
sub
dec
mov
mov
js
mov
add
dec
push
xchg
and
fwait
test
push
xchg
sub
mov
pop
jg
xor
xchg
mov
jecxz
jmp
mov
fst
xor
fdiv
jle
scas
ins
push
mov
mov
ss
pop
cli
fcom
or
dec
movs
inc
mov
pop
sbb
dec
cmps
pop
cld
cmps
add
xor
stos
adc
in
cmps
mov
xchg
cmc
in
mov
enter
jp
outs
inc
fdiv
cmp
jae
ja
adc
mov
call
xchg
test
add
in
inc
scas
push
out
sbb
or
pop
clc
fs
lahf
dec
mov
pop
dec
and
sahf
not
or
sbb
push
ret
aas
pop
push
push
mov
ret
lea
jb
push
and
mov
push
ror
adc
ins
and
dec
inc
xchg
fs
dec
adc
pop
cmc
neg
mov
retf
imul
xchg
dec
push
or
or
dec
and
call
xchg
pop
ins
jae
stos
sub
mov
aaa
or
inc
pop
push
bound
rol
xor
into
lods
aas
xchg
fisttp
sub
adc
mov
or
out
add
push
mov
pop
gs
xchg
adc
les
dec
retf
fcmove
mov
lods
pop
jnp
test
jmp
mov
(bad)
mov
xchg
out
xchg
adc
xchg
cmp
pushf
inc
jo
imul
cli
sub
fimul
jmp
add
cmp
or
mov
fs
dec
ss
jno
stc
mov
xchg
and
mov
pop
inc
adc
xlat
mov
push
enter
inc
div
sti
(bad)
pop
in
xchg
cs
jne
test
or
(bad)
xor
and
inc
std
sub
cmp
mov
pop
cmp
inc
nop
jbe
lods
adc
sub
sub
xor
cmp
cmc
aam
ja
call
in
popa
and
sub
jbe
aas
dec
movs
rol
add
cmps
idiv
mov
int3
sub
cmp
push
mov
push
stos
push
add
mov
mov
jb
dec
fcom
daa
das
int
sub
mov
call
not
adc
stos
inc
test
ss
int
mov
lods
cmc
cmps
sub
mov
dec
sahf
fsubr
aas
ret
mov
scas
push
push
mov
and
sti
sbb
mov
iret
out
push
sub
cmp
xor
inc
inc
movs
scas
aam
in
lea
hlt
(bad)
retf
fnsave
fs
shl
cmp
int3
sbb
mov
jb
adc
movs
lahf
movs
div
test
iret
addr16
dec
into
leave
outs
cld
jne
loop
cld
lock
sub
cmps
repnz
hlt
sahf
push
mov
push
xchg
mov
or
push
ds
mov
mov
call
or
scas
mov
sub
mov
in
test
add
jbe
push
mov
jns
stos
mov
ins
shl
popf
les
pop
pop
jbe
gs
rol
dec
int
mov
pop
stc
test
out
ds
adc
retf
jb
inc
push
loope
mov
pop
in
add
jbe
or
adc
pop
and
xchg
xor
das
int
mov
inc
mov
lea
push
pushf
xlat
pop
xor
push
fs
call
mov
push
dec
add
fs
ins
or
lahf
cmp
sbb
bound
mov
mov
mov
lods
pop
in
inc
push
add
adc
mov
sub
loopne
add
jge
pop
jne
ror
mov
pop
pop
cmps
pop
jle
test
xchg
clc
test
fsubp
sub
or
pop
or
int3
call
xchg
jle
sub
into
and
pop
mov
or
(bad)
movs
lds
and
pushf
mov
cmp
scas
adc
jmp
mov
movs
clc
cld
loop
inc
das
or
add
cmp
pushf
push
jbe
inc
xchg
shr
ja
(bad)
jl
into
add
outs
mov
adc
iret
fxch
stos
aam
int3
jle
pop
pop
(bad)
retf
arpl
loopne
popa
int3
int3
mov
fist
xor
jecxz
and
sahf
xchg
aaa
fbld
mov
pop
fisub
jne
scas
shl
lds
into
cmp
cld
xchg
adc
dec
and
jo
jp
mov
push
scas
lock
cld
call
shl
mov
fwait
repz
cli
dec
scas
ror
push
adc
in
sub
out
adc
xchg
sub
sar
sub
pop
js
imul
test
dec
xor
lea
lock
push
inc
and
sar
inc
xchg
mov
out
sub
test
or
out
push
or
sbb
and
loop
mov
stos
mov
mov
pushf
mov
ja
ret
hlt
add
mov
or
inc
loopne
xchg
loop
icebp
leave
imul
inc
push
push
pop
and
(bad)
xor
xchg
popf
cmp
jmp
mov
and
xchg
adc
pop
and
dec
push
mov
mov
or
sub
cld
bound
adc
in
and
into
add
mov
lahf
mov
mov
sub
mov
mov
std
gs
cmp
in
fdivr
scas
cmp
sub
in
outs
inc
pop
mov
aas
in
xchg
mov
cmp
jp
lock
(bad)
dec
retf
push
add
or
inc
sub
push
pop
rcr
inc
out
cmp
pop
cmp
aaa
loope
jbe
push
loop
mov
icebp
cmc
pop
cmps
cmp
mov
sub
or
cdq
sbb
les
in
(bad)
dec
outs
dec
or
push
call
ficomp
mov
into
cs
nop
data16
mov
mov
jnp
sbb
mov
dec
dec
push
xor
or
sub
ja
fnstsw
jmp
inc
fs
mov
mov
jb
lahf
dec
(bad)
call
xor
push
xor
cmp
inc
add
jle
test
sar
pop
sbb
and
fistp
call
jno
pop
repz
hlt
dec
cdq
push
push
or
test
aas
xchg
mov
retf
ret
mov
das
or
add
pop
pusha
std
sub
addps
dec
xlat
adc
and
pusha
inc
push
push
scas
jo
mov
mov
sub
out
jb
sbb
daa
pop
mov
cmp
punpckhdq
fisttp
imul
xor
mov
mov
mov
mov
stc
(bad)
inc
call
or
gs
pusha
aam
xlat
icebp
mov
mov
dec
mov
outs
mov
jecxz
fdiv
cdq
pop
out
ret
cmp
inc
pusha
mov
ror
repnz
sub
xchg
jo
xor
(bad)
or
ja
retf
neg
pop
add
loop
cmp
jne
sbb
pop
lods
mov
or
push
repnz
inc
shl
movs
jmp
sbb
inc
outs
retf
das
sbb
cmp
cwde
ins
pusha
(bad)
mov
stc
popf
push
scas
sub
push
inc
adc
addr16
sub
jmp
cmc
push
jg
xchg
dec
adc
pop
mov
popa
ret
jl
push
(bad)
sbb
jne
sahf
ins
popf
test
sbb
ins
xlat
jecxz
das
ins
rcl
xor
cld
sub
stos
aam
fcom
mov
cwde
in
jmp
repnz
neg
rcr
cmps
pushf
sbb
retf
mov
and
xor
in
xchg
mov
inc
jp
jae
sub
call
imul
loopne
(bad)
cmpxchg8b
mov
out
add
xor
ins
push
push
cmp
or
shl
ja
mov
mov
and
enter
lods
loopne
outs
sub
or
stos
in
push
pop
ds
inc
cmps
xor
jbe
fisttp
mov
leave
mov
in
or
sbb
lds
dec
sub
cmp
dec
loope
pop
xchg
(bad)
or
and
ror
sub
fst
adc
jo
in
cmps
cmp
or
mov
adc
ins
adc
cli
and
or
dec
mov
mov
adc
loope
in
jb
push
shr
lahf
enter
push
or
call
ffree
loope
iret
sbb
in
push
ds
pop
push
xchg
mov
(bad)
data16
gs
or
jnp
stos
xchg
(bad)
imul
cmp
add
loope
(bad)
test
push
(bad)
xlat
push
fcomp
ja
test
aad
pop
movs
sub
mov
mov
out
sbb
and
scas
clc
push
pop
cmps
mov
dec
pop
jmp
push
push
dec
mov
ins
pop
and
and
add
xchg
add
in
mov
imul
xor
or
shr
stos
mov
sbb
sbb
mov
std
imul
sub
jb
xchg
jmp
push
add
pop
dec
jae
adc
xchg
jecxz
push
mov
pop
std
and
mov
sbb
sub
cmp
lods
sbb
popf
jge
add
push
mov
rcl
ja
nop
xor
push
inc
push
sub
retf
ret
scas
xor
mov
jecxz
daa
cmc
mov
inc
xor
call
addr16
pop
cli
mov
aam
ja
mov
jae
adc
sub
cmp
in
retf
ins
(bad)
cmp
and
sbb
and
out
or
jmp
movntq
dec
mov
adc
mov
mov
ret
jns
dec
sub
out
stos
cmp
xchg
sbb
mov
cmps
in
retf
cmc
mov
mov
enter
mov
ror
imul
lods
push
jmp
jl
jmp
dec
ret
inc
xchg
data16
enter
add
cli
add
or
dec
mov
stc
pop
call
ret
sbb
pop
test
jmp
call
adc
fbld
sar
push
test
add
enter
repz
xor
xor
mov
ja
ret
fnstcw
mov
imul
stc
in
mov
popa
mov
sahf
imul
out
int
pop
add
jp
in
mov
xchg
sbb
pop
mov
inc
in
and
repnz
lods
jg
pop
pushf
das
scas
int
add
add
push
xchg
loope
call
(bad)
xchg
movs
je
sbb
and
pop
mov
mov
push
pop
mov
pop
pop
mov
mov
aam
sahf
cmp
jmp
out
mov
pop
lahf
pop
cmp
add
out
dec
cld
stos
jb
mov
mov
xchg
add
test
popa
call
fist
sar
adc
les
push
aaa
mov
adc
jne
mov
push
ds
xchg
adc
inc
jmp
(bad)
hlt
in
cmc
mov
sbb
jns
inc
aam
clc
dec
shl
sbb
pop
jbe
push
in
nop
push
sbb
popf
loopne
retf
call
std
cmp
cs
out
icebp
mov
cmp
xor
pop
adc
ja
cmp
mov
mov
add
test
adc
into
imul
fsubr
jb
sub
pop
sbb
cmc
jmp
repz
addr16
stos
loopne
push
push
mov
cmp
call
jo
in
mov
lahf
push
test
pop
adc
push
sub
cdq
sub
push
pop
imul
mov
inc
xor
inc
push
push
test
xchg
push
sar
int
inc
mov
aad
mov
bnd
in
jg
or
movs
mov
sub
ins
in
out
test
fimul
pop
js
jnp
sub
repnz
mov
pop
mov
mov
bound
out
les
scas
addr16
out
xchg
cmp
ja
iret
pop
mov
mov
xchg
pop
push
jg
add
mov
sbb
and
and
mov
xchg
movs
dec
pop
cmps
pop
or
out
xchg
mov
call
cld
dec
sub
sbb
or
and
sbb
sbb
(bad)
outs
push
mov
and
fmul
div
iret
jae
aas
call
xchg
fldcw
dec
ja
adc
push
push
les
mov
xor
ret
jb
push
xor
xor
aad
bound
add
cmp
mov
jmp
add
lods
mov
cmp
fs
push
xlat
dec
in
or
fcmove
cmp
dec
dec
add
dec
stc
or
or
sbb
push
xchg
shr
out
sub
retf
push
mov
mov
(bad)
out
inc
shr
and
pop
sbb
push
repz
rol
dec
iret
xchg
mov
imul
or
xor
cdq
popa
mov
in
loop
mov
or
or
mov
aam
mov
dec
(bad)
push
push
pop
cmps
aas
jp
push
in
js
stc
xor
aaa
out
sub
cli
dec
jmp
(bad)
sbb
fld
mov
(bad)
push
(bad)
dec
call
inc
pop
fstp
aas
xor
adc
inc
xchg
aaa
xor
cmp
mov
pop
push
jg
pop
leave
dec
adc
push
cmp
mov
enter
or
jl
cld
adc
and
sbb
add
jmp
cmp
movs
popf
(bad)
inc
add
movs
cwde
inc
push
popa
aad
leave
bnd
or
(bad)
push
lea
add
sbb
mov
ins
cmps
dec
cmp
fcom
aad
push
cmp
cmp
xchg
aaa
test
pusha
stc
out
in
and
enter
pop
adc
int3
inc
add
or
test
xlat
xchg
mov
mov
(bad)
fild
fldcw
ins
test
mov
jmp
mov
arpl
inc
mov
xor
pop
gs
fnstenv
or
mov
icebp
rol
sbb
in
jmp
dec
fimul
ins
cmp
aam
push
loopne
int3
xchg
imul
icebp
sub
cmps
jae
(bad)
and
xor
cdq
or
sahf
mov
and
sbb
pop
test
add
icebp
inc
cmp
add
push
fbstp
push
loope
cmc
arpl
xchg
pop
xor
cmp
sbb
inc
xchg
shl
push
daa
inc
inc
adc
xor
repz
sahf
hlt
movs
fsub
mov
and
jmp
push
and
mov
xor
push
lods
addr16
jno
ja
shr
and
adc
sbb
mov
xchg
add
sub
xchg
lock
pop
pop
adc
daa
aas
cmp
aad
movs
mov
dec
push
shl
call
lods
pop
loop
sbb
int3
sbb
mov
push
or
xchg
jne
not
or
lods
rol
into
adc
or
xlat
sbb
push
(bad)
adc
add
(bad)
in
bound
pop
dec
loope
stos
sahf
lods
lds
arpl
mov
in
in
dec
xchg
outs
pop
aas
and
or
(bad)
jmp
retf
jae
sbb
add
test
nop
jp
cmp
sbb
out
out
repnz
scas
push
movs
fdiv
lock
js
rcr
jmp
dec
xor
mov
jg
push
push
and
cmp
loopne
cmp
pop
(bad)
scas
int
jne
stos
xor
sbb
adc
push
scas
xchg
jle
or
call
outs
mov
je
jae
inc
cmp
clc
jg
adc
mov
ja
popf
inc
or
rcl
lahf
enter
test
fwait
in
adc
arpl
imul
cwde
xor
loopne
pop
or
sbb
ds
mov
fidiv
stos
and
xchg
mov
pop
jns
xor
out
mov
or
push
test
pop
scas
jo
(bad)
out
mov
shl
fsub
mov
dec
sub
das
js
xchg
mov
sub
sub
adc
int3
lea
xchg
sub
pop
in
xlat
sbb
or
adc
mov
and
xlat
rcr
push
out
outs
cmc
mov
les
pop
mov
test
add
push
and
xlat
and
push
mov
inc
loopne
add
cli
pop
imul
xor
jb
xchg
ret
add
rcl
and
add
fs
inc
out
mov
fnstcw
(bad)
mul
pop
push
test
pop
cdq
(bad)
xor
lea
and
mov
ret
mov
loope
ins
scas
push
and
cmp
into
movs
pop
shl
ins
add
(bad)
mov
or
cmp
das
loope
daa
(bad)
pop
sub
mov
add
or
fcmove
fcom
dec
out
fnstsw
cli
jg
pop
das
add
mov
add
cmc
mov
mov
ret
sti
sahf
(bad)
mov
repz
gs
and
rcr
outs
inc
retf
sbb
add
test
mov
fwait
jge
test
xchg
dec
sub
(bad)
das
push
fdivr
fninit
mov
dec
add
int
and
ja
add
mov
out
sub
and
inc
std
sub
(bad)
xor
push
xor
mov
fistp
push
aas
dec
jp
(bad)
hlt
xchg
sbb
sbb
call
fwait
push
xchg
push
xchg
cmp
mov
cmp
ficom
iret
call
jmp
add
(bad)
arpl
inc
mov
inc
jmp
ins
sbb
push
lods
ja
nop
aaa
jno
enter
repz
outs
sbb
push
fisttp
and
movs
add
sub
retf
sbb
retf
retf
cmp
ins
mov
lahf
out
and
pop
clc
out
xchg
jecxz
xor
(bad)
jbe
add
pop
bound
cmp
push
adc
sar
stos
mov
nop
rol
fs
push
mov
mov
jp
jl
mov
fbstp
mov
jae
mov
jnp
mov
jmp
cmc
jl
sbb
dec
mov
call
mov
cli
adc
cli
or
outs
mov
mov
jo
out
cs
call
lods
pop
outs
mov
in
call
in
mov
xchg
(bad)
aaa
data16
sub
add
adc
pop
in
cwde
add
push
xor
adc
adc
mov
pop
pop
std
lods
dec
scas
shl
test
leave
mov
mov
arpl
mov
imul
lock
jmp
adc
push
push
add
xor
mul
fmul
pop
sbb
into
or
push
ds
pushf
inc
push
out
fld
outs
test
test
push
sub
jnp
cmp
(bad)
xor
and
mov
and
cmp
push
imul
cdq
out
jmp
(bad)
cdq
aas
inc
mov
lods
and
add
lock
push
imul
ins
push
je
sbb
fs
enter
push
and
imul
stos
cwde
lock
stos
mov
ds
ins
ret
in
gs
test
movs
inc
pop
sub
mov
nop
imul
aas
jbe
or
adc
xor
test
(bad)
fptan
jecxz
mov
cmp
jne
stos
push
xlat
pop
sbb
pop
sbb
jp
pop
sbb
icebp
rcr
inc
add
aas
leave
fadd
lock
scas
push
push
and
scas
and
push
das
lods
mov
in
cmp
cmps
out
js
mov
or
icebp
out
or
push
pop
aad
add
push
jmp
leave
cmps
icebp
mov
sbb
inc
pop
xchg
imul
push
ss
cld
xor
out
scas
in
mov
(bad)
cwde
in
fist
(bad)
and
cwde
xor
rcl
dec
mov
std
imul
adc
nop
sbb
shr
mov
and
aaa
stos
push
ror
or
mov
pop
push
adc
pop
xchg
(bad)
add
adc
aad
or
jno
sbb
int3
inc
pop
jns
jmp
je
fistp
test
ja
test
popa
sahf
repnz
dec
adc
das
leave
dec
mov
xchg
int3
xor
les
mov
push
addr16
mov
arpl
xor
mov
xchg
mov
fdiv
(bad)
out
daa
xlat
cs
(bad)
pop
adc
(bad)
aad
call
sti
mov
inc
mov
pop
inc
mov
std
and
mov
jbe
in
pusha
lea
inc
dec
jmp
mov
xchg
xor
pop
mov
and
fs
sbb
aad
pushf
xchg
arpl
mov
sub
cdq
add
repz
mov
mov
fs
jmp
jmp
cmps
pop
aaa
shl
ins
or
inc
mov
fisub
aas
int
lock
adc
push
push
les
sub
shr
repnz
mov
sub
jle
push
shl
dec
ds
or
out
jge
pop
fcom
push
and
ja
push
push
movs
ror
inc
cmp
add
jecxz
or
fwait
sub
push
push
iret
push
cmc
pop
in
mov
cmp
xchg
les
mov
jg
call
mov
push
out
(bad)
or
popf
xchg
sar
ds
sbb
and
mov
or
lods
mov
in
(bad)
lods
push
add
pop
popf
scas
mov
ret
cli
jle
retf
bound
and
inc
shl
aam
mov
inc
in
mov
jg
ds
out
and
mov
sub
mov
popa
ja
in
mov
out
cmp
repz
inc
mov
in
mov
jg
cmp
mov
cmp
loopne
jle
aaa
fsub
dec
mov
xlat
xor
pusha
adc
bound
xlat
push
aam
aas
mov
dec
daa
test
aaa
hlt
add
jp
in
dec
jecxz
loopne
mov
sbb
adc
and
jnp
mov
ins
mov
mov
pop
xchg
jmp
clc
data16
ja
outs
mov
mov
test
cs
lahf
add
fwait
stos
mov
cmp
jns
psubsb
rcl
ret
mov
or
(bad)
xchg
mov
adc
loope
repnz
push
in
out
xor
mov
mov
pop
dec
mov
ficomp
adc
jle
jns
sub
and
test
pop
mov
inc
push
push
push
mov
rcl
sub
and
dec
shr
(bad)
lods
imul
mov
dec
inc
repnz
pop
lea
pop
jb
xor
cmp
mov
pop
shrd
mov
rcl
sbb
cs
ins
lahf
imul
xchg
xor
push
jo
jp
push
adc
shr
nop
mov
inc
sub
xchg
rcl
das
dec
jg
in
cmp
not
inc
(bad)
call
xor
and
js
mov
push
mov
jmp
sbb
div
repz
add
cmp
adc
adc
add
sar
jb
lods
ss
ins
xchg
int
loopne
adc
ror
jns
shl
or
push
sbb
cmc
push
adc
out
cmps
pop
inc
in
movs
sbb
cmp
cmc
ss
popf
dec
push
cmp
into
mov
das
jl
repz
xchg
mov
inc
jae
ror
mov
out
mov
clc
scas
inc
xor
fcom
mov
into
sbb
inc
pop
mov
daa
lds
push
push
stos
int
lock
out
push
sbb
leave
jmp
stos
call
out
pop
nop
mov
aad
outs
test
cmps
xchg
iret
inc
adc
xchg
jne
repnz
inc
popf
pop
add
mov
pushf
loop
jge
daa
in
cmp
jmp
into
in
push
into
mov
sub
ret
dec
or
jmp
sbb
dec
and
movs
jmp
jne
mov
inc
cmp
sbb
mov
xchg
cmps
dec
cmp
add
or
les
hlt
call
(bad)
ds
or
fild
jbe
aad
inc
mov
aad
or
mov
and
inc
test
push
fisttp
mov
adc
iret
mov
test
dec
dec
jmp
jmp
scas
sbb
add
push
mov
xor
adc
retf
jno
out
inc
mov
aaa
fst
cli
pop
pop
(bad)
push
aad
jmp
movs
cmc
pop
cmp
repnz
imul
cli
xchg
cmp
push
xor
pop
inc
dec
out
xchg
adc
xchg
sbb
cs
xchg
xor
std
inc
sbb
mov
push
jp
cmp
nop
pop
mov
xchg
sahf
add
and
mov
xchg
sub
sub
pop
inc
out
and
les
je
or
adc
push
and
push
mov
xor
push
rol
push
in
or
cmp
sbb
cmp
mov
and
aas
inc
xor
jne
push
stos
pushf
xchg
js
mov
lds
inc
dec
push
xor
(bad)
fdivr
xor
dec
fisubr
adc
or
sbb
jne
or
out
bnd
leave
jb
ins
adc
mov
add
xlat
push
pop
in
or
push
cmp
pop
inc
popf
sbb
cmp
test
(bad)
mov
add
xor
and
popa
pop
push
scas
ss
retf
loop
mov
test
sub
std
add
jmp
xchg
loop
sbb
mov
ja
jo
jb
xor
jns
aaa
xor
bnd
sbb
mov
xor
mov
loope
dec
push
clc
imul
mov
jbe
jmp
sbb
xor
dec
mov
or
clc
mov
outs
add
pop
adc
neg
mov
jns
(bad)
imul
sub
add
mov
mov
in
in
add
xor
(bad)
in
sahf
push
pop
xor
xchg
repz
push
mov
push
xor
ss
or
(bad)
mov
adc
inc
push
dec
aaa
sbb
add
inc
mul
bound
cmc
cmp
xor
aas
dec
in
mov
test
and
out
mov
inc
loop
nop
loope
jne
inc
dec
popf
cmc
jmp
xchg
adc
aaa
mov
xor
mov
js
cdq
(bad)
jl
xor
fnstcw
cmp
dec
mov
dec
inc
int3
cmp
pop
xchg
dec
iret
cld
adc
cs
imul
sub
push
jae
sbb
je
aas
enter
into
xor
cmp
jns
js
lea
fistp
inc
addr16
xchg
repz
sub
or
imul
push
mov
mov
or
add
retf
lods
(bad)
test
repnz
adc
cmp
pusha
mov
sbb
shl
and
push
scas
xor
pop
jnp
lds
sbb
adc
arpl
cwde
cmps
movs
xor
and
xchg
mov
and
ret
js
cmovne
pop
jg
out
fxch
dec
ins
and
lock
es
jo
mov
fidiv
mov
int3
jo
rcr
mov
in
clc
jb
dec
int3
test
dec
mov
jmp
ins
pop
add
dec
imul
sub
or
jno
test
cdq
retf
sahf
shr
in
push
js
push
and
int
add
jmp
int
neg
push
retf
adc
ror
mov
dec
sub
adc
call
pop
adc
push
scas
in
adc
lea
es
pop
push
inc
sbb
retf
aam
inc
adc
pop
pop
adc
mov
and
jmp
mov
out
xchg
jmp
sti
loope
mov
cs
adc
dec
arpl
mov
int3
cmps
jae
push
ja
out
xor
test
call
inc
outs
sbb
inc
pop
adc
sbb
adc
stc
inc
je
sub
push
test
das
pop
jl
dec
int
call
and
inc
cld
mov
push
cmp
add
mov
outs
retf
inc
imul
dec
inc
ins
jnp
fcmovnb
push
shl
sar
mov
call
inc
add
dec
pushf
iret
stos
pop
jmp
adc
iret
test
call
xchg
or
stos
xchg
push
daa
adc
and
xor
inc
fsubr
push
add
daa
jae
aas
sub
dec
inc
test
and
retf
pmulhw
push
jle
jns
(bad)
shl
mov
les
clc
mov
lea
dec
or
inc
sub
scas
(bad)
xor
scas
neg
mov
sub
jae
jp
mov
cmps
mov
add
push
or
mov
fist
fst
sbb
in
push
sub
mov
retf
sub
mov
xchg
(bad)
dec
jb
mov
inc
addr16
das
dec
in
xor
stos
pop
mov
sbb
dec
cld
imul
dec
dec
or
lods
pop
or
xchg
xlat
xchg
stos
jmp
sbb
or
mov
push
pop
add
xchg
dec
imul
clc
push
mov
in
hlt
das
dec
inc
add
pop
pop
mov
pop
cmp
js
adc
rcl
pop
pusha
retf
push
add
mov
mov
imul
xbegin
leave
jle
dec
in
jecxz
sbb
les
pop
cs
popf
outs
into
aaa
jecxz
pop
pop
hlt
mov
cli
jecxz
sub
retf
bnd
adc
xor
or
sar
mov
cwde
loopne
and
mov
fdivr
xchg
xor
fst
(bad)
movs
push
sbb
add
xchg
scas
jmp
out
int
in
inc
in
add
mov
fdiv
sub
loop
repz
push
popa
scas
test
mov
(bad)
push
cmps
cmps
cmp
shr
ret
into
xor
js
inc
xchg
xlat
enter
mov
stos
or
inc
aaa
clc
ins
add
mov
xor
loop
in
jmp
imul
add
into
popa
jns
test
jl
lea
mov
pop
push
adc
int
gs
jb
test
push
and
sub
sub
movs
cmp
dec
push
js
xchg
jle
push
mov
sbb
jge
cmp
repnz
mov
push
xchg
push
add
aaa
ror
aas
stc
jg
outs
jmp
push
inc
gs
add
out
adc
jno
ret
and
fld
scas
xchg
mov
fisub
div
scas
leave
mov
and
aas
fdivr
sbb
out
daa
call
and
ins
and
outs
xor
xor
mov
dec
and
ss
dec
icebp
xor
fdiv
aam
leave
push
inc
xlat
test
dec
xor
aad
jge
hlt
and
and
pop
cli
loop
sub
out
push
cmp
sahf
xlat
out
div
aam
sbb
(bad)
add
jmp
mov
retf
jge
(bad)
xor
pusha
aad
dec
(bad)
shl
repnz
adc
fsub
test
pushf
inc
loop
retf
or
mov
outs
cdq
pop
xchg
sub
in
jae
(bad)
pop
pop
sar
xchg
dec
or
mov
cld
add
je
xor
cmp
clc
pop
or
and
sbb
scas
sahf
rcl
push
and
sub
mov
xchg
gs
pop
cmp
sub
cmp
call
sub
push
pop
stos
(bad)
loopne
push
dec
xchg
mov
stos
adc
add
xchg
add
idiv
mov
mov
jge
sti
sub
loopne
(bad)
xor
xlat
rol
lods
ja
sub
pop
les
inc
fwait
pop
lds
ss
pop
push
pop
inc
sbb
fwait
jnp
je
sub
xchg
xor
loopne
jnp
xor
in
hlt
aam
push
jge
mov
fsub
lock
arpl
lods
mov
dec
xor
hlt
scas
daa
push
inc
pop
popf
into
es
sahf
ds
push
sahf
inc
dec
loop
shr
es
sbb
test
xchg
ins
int3
pushf
lahf
lds
add
dec
(bad)
sbb
inc
mov
jns
arpl
sbb
pop
pop
arpl
mov
pop
jl
mov
fcom
jbe
and
xchg
cmp
fdiv
and
out
mov
and
movs
add
mov
in
cld
out
inc
mov
aaa
jge
xchg
lahf
in
inc
mov
add
loopne
aaa
sahf
pop
push
pop
addr16
retf
cdq
mov
xchg
adc
inc
fs
outs
xchg
repnz
push
inc
sbb
aad
test
call
test
bound
or
movs
fimul
cmps
and
fbstp
sahf
and
mov
adc
mov
jmp
test
adc
loope
in
shl
arpl
xor
ins
mov
cmp
call
lods
cmp
xchg
mov
xor
mov
ret
jp
push
jae
mov
mov
adc
bound
push
int
lahf
mov
loope
or
add
jge
sbb
pop
sahf
imul
or
mov
lea
adc
pand
jae
add
mov
xor
push
sti
loope
imul
stos
mov
dec
mov
mov
xchg
int
sbb
mov
add
and
dec
jo
dec
(bad)
jge
not
fsub
shl
aad
(bad)
je
xor
das
lods
xor
nop
test
hlt
xor
arpl
sbb
popa
pop
cmp
cmps
(bad)
jg
pop
ja
add
sub
push
xchg
push
(bad)
out
sbb
(bad)
push
mov
imul
lock
jo
out
movs
pop
jecxz
aaa
add
mov
(bad)
in
jae
int3
fsub
dec
add
xor
dec
shl
dec
movs
sahf
push
pop
or
fidivr
inc
xchg
xchg
(bad)
or
outs
aad
inc
and
inc
sub
mov
push
imul
icebp
pop
xor
mov
inc
sbb
dec
inc
cmp
loopne
sub
mov
fwait
hlt
dec
in
push
iret
scas
ficomp
movs
cmps
push
pop
jmp
scas
fstp
xlat
bound
inc
mov
clc
std
pop
mov
xchg
push
xchg
mov
mov
push
or
lds
or
add
pop
and
jl
daa
sub
pop
dec
mov
fist
aaa
cld
cli
adc
jp
es
add
test
out
add
pop
mov
pop
jnp
pop
loop
push
mov
mov
das
adc
inc
mov
jp
inc
sub
mov
retf
call
cmp
inc
mov
inc
enter
test
or
inc
(bad)
pop
or
add
dec
jae
pop
popa
retf
aas
fdiv
lds
push
nop
sub
jae
xor
and
mov
loopne
(bad)
ja
outs
fcmovne
xlat
test
mov
dec
cmp
inc
shr
cli
call
loope
icebp
xor
jl
add
sbb
sub
xor
cdq
jl
out
gs
pop
int
push
push
mov
sub
ins
rcl
add
mov
push
fldenv
pavgb
in
sbb
dec
clc
jbe
(bad)
pop
cmp
mov
cs
cmps
ds
rol
push
sbb
add
inc
into
popa
repz
adc
lea
add
int
fadd
xchg
sub
xchg
push
ds
cmps
push
nop
cmc
js
aaa
(bad)
addr16
adc
mov
movs
push
jle
pop
sub
jmp
xlat
dec
xor
shl
(bad)
mov
in
push
test
xchg
not
inc
fsub
sub
jecxz
xor
sub
mov
js
push
(bad)
out
mov
in
sbb
mov
cs
scas
dec
clc
loopne
and
icebp
mov
mov
enter
inc
enter
mov
js
xchg
push
popa
xchg
mov
arpl
dec
test
or
pop
sub
pop
int
test
xor
add
hlt
push
lods
cmp
adc
xchg
mov
xchg
les
xchg
add
(bad)
mov
jle
push
stos
add
frstor
jmp
repz
cli
sbb
push
scas
xlat
sub
fs
adc
mov
test
lds
jp
aam
mov
sub
inc
aad
mov
(bad)
xchg
cmp
jl
lods
ja
mov
js
mov
sub
jle
jge
mov
sub
pop
mov
loopne
sti
mov
test
dec
jmp
iret
sub
bound
imul
cmc
arpl
mov
mov
mov
sbb
and
mov
int
jmp
popf
dec
dec
mov
mov
or
sbb
lahf
or
(bad)
sbb
and
pop
dec
pop
push
popa
loope
or
movs
(bad)
arpl
nop
dec
cmp
sub
push
sub
sbb
sbb
cmp
and
sub
(bad)
sub
cmp
popa
sbb
sbb
icebp
ror
mov
jnp
pop
pushf
sbb
sbb
jmp
sar
in
std
and
(bad)
mov
inc
and
add
mov
fild
jmp
out
sub
cmp
ret
mov
adc
and
gs
inc
imul
in
add
dec
ja
adc
imul
add
das
mov
in
pop
add
inc
jnp
jb
jb
iret
test
call
and
idiv
mov
cmps
js
fadd
xchg
mov
das
push
sbb
xchg
mov
in
jo
mov
ret
adc
pop
sub
mov
inc
adc
inc
test
shr
aas
nop
push
pop
mov
or
dec
push
outs
jg
jmp
shr
(bad)
cli
jns
ror
sbb
push
in
sub
fidiv
jecxz
ds
test
add
fwait
(bad)
in
dec
cmc
jnp
ret
mov
sub
jb
push
mov
xchg
aaa
sti
shl
cmp
sti
stc
mov
cmp
pop
mov
lock
clc
add
bound
inc
jl
adc
jle
pop
xor
mov
mov
adc
push
cmp
pop
inc
jecxz
retf
test
or
int
movs
jne
retf
xlat
or
movs
xchg
mov
mov
xor
cmp
aad
imul
push
arpl
pop
sub
jno
dec
adc
shr
out
mov
lock
lahf
ins
mov
ins
pop
inc
psubusb
mov
and
mov
and
loopne
lea
pop
repnz
sbb
aas
pop
outs
sub
jns
mov
hlt
and
es
rol
fisttp
ror
(bad)
mov
leave
loope
cli
cld
push
stos
enter
jecxz
jp
ins
movs
in
xchg
mov
xchg
int
test
mov
cli
pop
dec
ret
lods
inc
repnz
pop
mov
fistp
cwde
fsub
and
mov
repz
mov
sub
mov
sbb
push
stc
sub
ja
shl
xchg
ds
addr16
clc
sub
mov
adc
rcl
sub
repnz
add
jnp
add
repz
sahf
xchg
jae
cmovnp
xor
out
push
aaa
adc
ss
or
test
inc
push
popf
jbe
jmp
and
aas
xor
gs
push
jbe
push
test
pusha
and
stos
inc
retf
mov
cld
cmps
enter
test
or
xchg
sbb
push
cmp
add
mov
aam
adc
cvtdq2ps
sub
cdq
enter
imul
adc
out
(bad)
cmp
lods
lods
sbb
xor
pushf
mov
sbb
shl
sub
sub
sbb
push
fdiv
test
jl
unpcklps
inc
sub
es
mov
xchg
pop
lds
dec
xlat
(bad)
push
add
aam
sbb
xlat
imul
jecxz
push
call
cmp
ja
push
pop
mov
push
push
aas
mov
into
cdq
fisub
jmp
push
cdq
clc
(bad)
fist
inc
push
pop
add
sbb
inc
dec
and
pushf
js
jno
add
mov
dec
ja
into
or
mov
in
push
leave
and
popa
cmp
test
pop
pop
nop
test
es
add
push
ss
shl
mov
push
aaa
clc
mov
adc
dec
(bad)
pop
mov
mov
mov
dec
sub
loop
xchg
cmp
cmp
sbb
pusha
push
pop
ds
fdivr
loopne
and
mov
test
mov
int3
dec
mov
or
mov
inc
pop
mov
adc
fadd
or
out
jecxz
lods
pop
data16
xlat
iret
in
mov
movs
push
fisttp
cmp
cmps
fcmovnbe
lods
ret
xor
push
xchg
push
cli
mov
mov
pop
mov
call
scas
inc
(bad)
repz
dec
adc
aam
and
push
daa
cmps
sar
or
push
cmp
push
sti
inc
adc
cdq
cmp
and
mov
inc
add
lock
ret
stc
xchg
add
xchg
scas
out
xor
xor
(bad)
dec
adc
mov
jo
jg
push
dec
popf
(bad)
repnz
jno
outs
inc
fwait
ss
(bad)
jne
mov
sub
imul
int
lea
xchg
mov
mov
and
jne
ret
mov
cs
jno
js
push
gs
dec
iret
sbb
xchg
cmps
cmps
add
pushf
jo
sbb
jle
inc
mov
test
jg
adc
inc
xchg
adc
sahf
lods
jb
outs
je
stc
dec
cmps
fdivr
sub
mov
jae
jg
popa
inc
iret
sbb
xor
hlt
sub
sahf
and
cmps
out
das
jb
push
cmp
cmp
jg
or
adc
pop
xchg
das
mov
or
addr16
push
retf
xor
add
out
push
adc
fstp
or
and
inc
xchg
push
das
pop
icebp
xchg
bound
mov
sub
repnz
test
adc
stos
daa
sub
pop
idiv
pop
inc
xchg
mov
inc
pop
in
out
outs
out
inc
gs
inc
push
or
test
fld
neg
xchg
fdivr
dec
push
lods
xchg
jnp
cwde
pop
ja
push
cmc
push
inc
cmp
inc
aad
test
pop
ins
adc
push
sti
mov
mov
ins
(bad)
scas
stos
or
xchg
cmps
mov
movs
push
retf
loopne
and
js
je
mov
adc
jne
loope
adc
test
push
(bad)
leave
and
jl
nop
and
inc
icebp
mov
push
mov
loop
cmc
xor
fcmovne
icebp
out
mov
xchg
mov
clc
rsm
sbb
into
stos
mov
or
test
repz
inc
call
and
sbb
mov
mov
cmp
jmp
rcr
push
xor
mov
lock
pop
leave
out
jge
jmp
cmp
mov
test
fdiv
mov
stos
mov
xchg
shl
into
test
call
aas
xor
add
jmp
or
or
fucom
dec
or
adc
test
out
dec
shl
outs
into
hlt
gs
aam
js
(bad)
popa
out
aas
or
mov
popf
js
dec
inc
mov
scas
into
and
pop
sti
adc
cld
in
imul
mul
mov
mov
rcl
ins
and
fimul
lahf
add
(bad)
cmc
pop
cmc
xor
data16
cmp
out
sbb
xor
sub
(bad)
mov
sbb
jge
adc
icebp
repz
jmp
jmp
test
mov
jbe
sbb
xor
repnz
jg
cs
push
cmp
cmovns
jmp
out
jecxz
ficomp
and
inc
pushf
xor
das
or
ret
pop
xchg
sbb
mov
sbb
pop
arpl
(bad)
xchg
loopne
dec
sbb
pop
fdivr
lahf
pop
pop
inc
jmp
leave
mov
movs
jnp
ds
push
add
(bad)
shr
scas
and
dec
mov
aaa
int
dec
pop
push
add
dec
sbb
cmp
xchg
sbb
sbb
inc
ins
mov
mov
jmp
scas
mov
pushf
push
xchg
stc
mov
cmp
fcom
mov
pop
cmp
jno
pop
movs
push
(bad)
pop
mov
xchg
add
mov
aas
push
sbb
div
ud1
mov
jecxz
test
inc
mov
(bad)
jmp
or
push
out
xor
bound
test
xor
add
in
enter
pop
cwde
lock
sub
cmps
push
shr
out
sbb
arpl
stc
and
test
jo
and
fsubr
dec
test
pop
xchg
and
jno
hlt
sbb
push
mov
stos
sub
pop
xor
adc
test
stc
clc
sub
adc
cmp
shld
or
cmc
retf
inc
mov
mov
inc
lahf
ins
jp
pop
enter
call
in
nop
pop
jb
outs
inc
in
cmp
dec
dec
jecxz
std
(bad)
push
xlat
(bad)
pushf
cs
mov
push
iret
and
fsub
cs
fst
xchg
jle
cmps
dec
mov
sahf
jecxz
sbb
xchg
xor
out
mov
or
inc
(bad)
sub
pop
jl
cmp
repnz
and
jmp
cwde
dec
add
test
add
pop
daa
add
xchg
add
iret
and
std
pusha
or
dec
jp
test
lds
mov
in
test
retf
fst
les
pop
mov
cmps
pop
std
add
sub
sub
adc
repz
mov
pop
xor
jno
mov
xor
imul
repnz
cmc
jae
ja
mov
lods
das
inc
mov
js
xor
cs
fnsave
push
and
sub
xor
add
enter
call
fisttp
or
pop
mov
pop
xor
daa
sbb
xor
out
out
pop
sahf
fwait
arpl
xchg
sub
or
sub
(bad)
add
mov
(bad)
repz
pop
out
or
cmps
loop
cmps
rcl
fwait
inc
mov
cmp
popa
push
inc
cmp
in
inc
mov
imul
fild
push
fmul
ror
adc
lods
push
push
out
(bad)
sbb
adc
stos
arpl
cld
xchg
pop
in
push
jmp
cmc
sbb
xchg
mov
sbb
mov
lahf
aad
arpl
dec
sti
push
sti
sbb
cmps
dec
fisubr
call
mov
sti
sbb
mov
lods
imul
aam
xchg
sbb
mov
bound
in
dec
cmp
es
loope
pusha
push
mov
daa
movs
pop
repnz
mov
aas
pop
sar
pop
xchg
rcr
mov
loopne
and
or
clc
lods
jno
and
jmp
iret
or
jns
xchg
je
in
push
sbb
pop
mov
loopne
or
fucomp
mov
in
sub
pop
(bad)
(bad)
fnstcw
push
icebp
sti
pop
clc
or
mov
aaa
dec
dec
inc
ds
cmp
add
cmp
pop
fld
dec
inc
jg
push
add
inc
jmp
popf
mov
ret
std
or
nop
movs
sub
aam
gs
dec
add
mov
xchg
xchg
mov
xor
or
ret
pop
xor
mov
movs
popf
dec
lea
push
ins
add
jns
or
dec
repz
xor
out
and
out
dec
sub
lahf
shl
jnp
out
lock
jge
push
xchg
push
movs
popf
inc
adc
push
xchg
jecxz
sub
adc
clc
lahf
sbb
and
fs
lahf
sub
sub
mov
dec
ins
cs
popf
imul
in
mov
xchg
test
push
jb
bound
cmp
push
loope
jp
cmp
xor
dec
ins
jle
and
sub
xor
mov
pop
xchg
mov
popf
and
int
(bad)
js
adc
shl
sub
inc
(bad)
in
inc
mov
or
cli
ins
and
leave
jle
inc
(bad)
in
sub
mov
and
aad
xchg
jmp
cmp
jl
cmp
shl
stos
pop
fsubr
aaa
loopne
mov
test
lods
mov
dec
xor
fnclex
cwde
and
jg
pop
lock
xor
mov
push
push
inc
je
jb
daa
add
cmc
or
sub
cmc
(bad)
sbb
dec
add
jno
sbb
xor
pop
xchg
and
add
sub
sub
into
inc
pushf
add
dec
push
xchg
inc
clc
sti
cld
ins
out
jp
int
in
sub
ds
(bad)
jbe
dec
vshufps
push
repnz
fisttp
mov
out
jo
ror
adc
scas
fwait
inc
xchg
dec
sub
xchg
inc
aam
repz
xchg
mov
js
jl
int
push
add
aad
dec
aaa
jmp
adc
jno
rcl
repz
xlat
stos
push
jne
dec
je
mov
clc
mov
mov
bnd
pushf
sbb
pop
ins
dec
dec
aaa
or
adc
das
add
mov
test
rcl
out
dec
xchg
imul
push
mov
in
jnp
mov
loopne
sti
xlat
sub
fadd
and
enter
and
xor
inc
pop
ftst
jnp
xchg
cld
add
scas
or
ficomp
and
xchg
mov
pushf
stos
sar
or
repz
mov
aaa
and
inc
lock
jg
rcl
sbb
adc
scas
aas
scas
jmp
rdmsr
or
ret
cmps
shl
mov
push
jg
pop
call
push
movs
aaa
pusha
adc
mov
pop
retf
mov
mov
jmp
fmul
jge
lock
loop
cmp
jge
cli
js
fld
xchg
mov
mul
adc
jle
in
sub
mov
rcl
and
loop
add
inc
mov
push
dec
sub
fwait
test
and
aam
imul
sub
add
inc
iret
shl
inc
aam
cmp
sbb
and
pop
jb
fistp
sbb
cmp
popf
ins
retf
outs
int
cdq
adc
icebp
pop
int
das
jo
lock
dec
jle
repz
and
jo
xchg
adc
fs
push
lock
arpl
pop
push
mov
or
push
call
(bad)
ret
cwde
ret
and
(bad)
adc
sub
pop
loope
sub
jmp
test
mov
into
in
mov
xchg
push
mov
lds
pop
test
out
xor
or
sub
int
jmp
popf
xor
inc
cs
imul
sub
(bad)
adc
jne
iret
dec
cdq
retf
ds
sbb
(bad)
and
hlt
dec
aaa
add
pop
test
into
sub
xlat
mov
sbb
or
add
jno
jbe
lea
enter
push
iret
shr
cmp
jo
or
cmp
mov
mov
xchg
push
outs
push
aaa
xchg
add
loop
pop
je
or
inc
sahf
jle
iret
lds
clc
push
test
imul
jmp
cmp
xor
std
jp
fild
data16
mov
maxps
inc
xchg
xchg
outs
pusha
mov
push
jmp
iret
and
pop
cwde
addr16
jmp
and
test
test
push
stos
or
cmp
mov
xor
ror
xchg
cmp
pop
es
or
pop
dec
mov
and
call
mov
test
les
pushf
sbb
dec
mov
or
ret
dec
inc
jecxz
xchg
in
mov
add
mov
in
sti
mov
sbb
faddp
fnstenv
(bad)
scas
pop
out
aad
jae
cmp
popf
inc
in
fs
fadd
lods
adc
push
cmp
or
ja
mov
cmp
out
shl
mov
xchg
add
push
push
cli
les
in
adc
add
into
add
cmps
cld
push
sbb
jge
jecxz
mov
cmp
dec
nop
test
loop
mov
nop
aad
movntps
movs
push
das
push
(bad)
out
das
aad
pop
int3
lods
lods
inc
pushf
push
or
sbb
scas
sub
inc
clc
(bad)
pop
call
fist
xchg
stos
add
test
in
push
mov
jl
jo
shr
adc
js
(bad)
push
xor
pop
mov
mov
mov
out
in
sub
pop
ss
or
fild
test
or
mov
jge
imul
fwait
jne
fist
mov
retf
cmp
jg
adc
into
inc
dec
ret
je
daa
or
out
frstor
jl
retf
fcmove
lahf
xchg
(bad)
stos
pushf
pop
ss
fisub
fdivr
loop
xor
popa
inc
pop
inc
and
retf
mov
daa
mov
mov
(bad)
mov
adc
mov
shl
jle
mov
outs
cli
sbb
jle
ins
cdq
xlat
pop
data16
xchg
inc
cmp
and
fnsetpm(287
fbstp
pop
fs
mov
sahf
ret
test
mov
(bad)
(bad)
xchg
push
neg
clc
xor
push
cmp
sub
loop
cmp
push
stos
inc
ins
mov
or
inc
jmp
out
call
xor
jmp
daa
cmp
xlat
daa
daa
pop
mov
sub
or
add
shl
pop
push
popa
xchg
dec
push
sub
cs
xchg
pop
aam
outs
push
adc
loopne
les
mov
std
pop
xchg
rep
js
sub
bound
add
add
mov
pop
lea
xor
push
cmp
je
aaa
mov
ja
mov
rcl
loope
jne
jge
mov
mov
push
(bad)
mov
sub
push
jno
pusha
adc
call
js
int3
in
dec
push
xor
xchg
jmp
dec
mov
push
and
aas
cmp
inc
ds
std
ja
push
daa
rcl
in
add
or
cdq
inc
cdq
sub
sbb
and
jno
jae
loope
rol
test
cmp
(bad)
pop
jge
push
leave
addr16
sub
jnp
outs
hlt
mov
jns
push
stos
(bad)
cdq
adc
dec
add
aam
adc
pushf
stos
ror
adc
mov
and
(bad)
popf
jae
mov
and
movs
int
loop
and
xchg
out
jo
leave
repnz
mov
fst
fwait
cmp
fild
pop
cmp
fadd
sti
mov
jmp
xor
sub
pusha
adc
and
mov
int
retf
sti
mov
cmps
pop
mov
outs
xor
leave
dec
icebp
push
and
ficom
mov
rcl
nop
fxch
and
inc
hlt
icebp
xlat
and
mov
hlt
call
sbb
rcl
call
ds
pop
imul
aad
cmp
cmp
imul
and
ret
pop
retf
cmps
add
or
shl
xlat
and
mov
push
ret
pop
fild
sbb
ss
pop
mov
sbb
retf
mov
xor
fisttp
sahf
add
mov
ins
rcr
pop
pop
jae
adc
push
int3
mov
pop
jle
mov
imul
mov
inc
enter
ret
cmp
ret
sub
jecxz
pop
call
cld
dec
aam
lea
mov
pop
shl
aad
mov
pop
repz
das
frstor
dec
test
rcr
sbb
and
arpl
(bad)
clc
mov
dec
fstp
sahf
jge
jne
ins
nop
or
pop
aad
jae
outs
adc
stos
outs
daa
jle
and
jo
inc
out
or
dec
xor
or
jge
pop
sbb
(bad)
clc
push
push
fbstp
sbb
xchg
adc
dec
sub
pop
movs
inc
fld
sar
mov
cdq
call
xor
push
cmp
sbb
inc
cmp
div
mov
or
aad
jae
xchg
(bad)
jmp
leave
idiv
arpl
dec
sar
mov
ins
out
pop
mov
out
js
dec
jae
xchg
cmc
push
push
not
cmps
ins
adc
loope
ds
ror
cld
cmp
xchg
cmps
jo
mov
jns
cmps
fs
cmp
idiv
or
mov
lds
mov
lods
int3
sar
pop
xchg
and
mov
push
jge
lods
xor
xchg
retf
test
aad
enter
mov
bound
call
enter
mov
addr16
adc
dec
mov
xchg
aad
fidiv
mov
cmp
mov
mov
in
pop
mov
adc
and
add
inc
pop
fild
mov
jle
xchg
neg
and
fidiv
or
or
nop
mov
inc
in
arpl
lds
stos
mov
push
sub
sub
inc
mov
sbb
mov
push
add
inc
jns
imul
or
int
mov
push
dec
fcom
mov
xor
sti
cwde
lock
or
addr16
ins
xchg
out
or
daa
shl
mov
retf
imul
jmp
inc
scas
mov
repnz
lea
cmp
jge
in
mov
xor
mov
xchg
stos
add
rol
xchg
cmp
mov
cld
dec
imul
adc
movs
out
gs
retf
and
push
mov
pop
test
nop
popf
(bad)
addr16
leave
mov
jnp
jne
pop
aam
daa
and
xchg
sub
dec
pop
jmp
fs
pop
lea
test
loope
shl
pusha
cld
sbb
frstor
jne
dec
jne
fnstsw
(bad)
pop
push
in
push
leave
dec
int3
jnp
jns
mov
sbb
ja
out
pop
sub
xchg
std
pop
mov
cdq
cs
xor
jge
imul
sti
pop
shl
jg
fsub
std
mov
cmps
and
test
call
mov
xchg
pushf
loopne
push
cwde
stc
stos
pop
inc
dec
jo
clts
adc
pop
fwait
or
imul
adc
rol
jmp
pushf
xchg
jp
retf
ss
xchg
jo
or
lods
sub
xor
dec
int3
mov
sub
push
push
in
pop
fistp
sub
push
add
adc
les
sub
pop
mov
push
loop
inc
push
xor
faddp
jbe
(bad)
repz
in
add
lahf
in
jae
movs
popa
(bad)
cmps
(bad)
jge
adc
rol
neg
dec
cld
loope
inc
push
movs
dec
inc
sbb
mov
mov
sbb
es
mov
jmp
outs
push
out
jp
into
les
adc
shl
outs
jl
fwait
(bad)
js
or
(bad)
call
ficom
pop
mov
(bad)
std
ins
fistp
sbb
mov
inc
outs
jge
mul
std
jp
mov
(bad)
push
jb
xchg
xor
fcmovu
mov
pop
loop
inc
xchg
add
imul
retf
mov
movs
loopne
jne
adc
jns
xchg
in
shl
aas
sub
les
imul
sbb
hlt
sub
sub
dec
loopne
dec
xor
(bad)
movs
push
cmovno
add
mov
mov
mov
push
retf
jno
fstp
inc
data16
jecxz
js
outs
dec
cmp
add
sti
pop
fild
jae
out
xchg
jo
icebp
adc
stos
call
jl
adc
jb
xchg
sub
mov
fstp
lods
sti
repz
add
daa
push
push
(bad)
mov
aam
div
xor
jnp
sahf
adc
pushf
daa
add
sti
call
adc
adc
neg
scas
stos
dec
and
pop
xor
sbb
mov
and
ja
ins
movs
pop
adc
and
jl
push
data16
cmps
(bad)
adc
push
je
call
jno
rcl
jmp
not
push
sub
(bad)
stc
retf
fcmovnbe
dec
stos
out
in
or
mov
int3
adc
mov
and
xchg
sbb
mov
sar
sbb
jl
cmp
dec
sbb
push
shr
push
sbb
sbb
gs
xor
out
cmp
ror
iret
ins
fsubr
sbb
dec
push
sbb
jmp
add
shl
movs
mul
int3
je
rol
inc
cmp
pop
jo
(bad)
lahf
and
mov
test
xchg
pop
sub
cmps
or
shr
mov
cmp
sbb
repz
xor
jnp
or
xchg
aam
mov
push
(bad)
dec
out
push
xor
fwait
pusha
test
cli
xchg
call
add
shl
or
sbb
outs
xor
aaa
nop
mov
inc
and
pushf
xchg
mov
ret
mov
lds
xchg
arpl
xchg
jae
adc
pop
js
fs
ss
aam
add
xor
sbb
ja
(bad)
xlat
(bad)
jo
lds
adc
test
mov
sub
outs
shl
jp
sbb
sbb
std
test
mov
std
pushf
and
lock
push
sbb
stos
ins
and
jns
mov
push
in
adc
adc
mov
or
sti
out
fbstp
jnp
mov
and
add
pop
fisttp
sbb
push
sbb
out
and
and
pop
dec
cs
mov
clc
inc
fs
push
pop
sbb
add
cmc
pop
mov
mov
jmp
int
icebp
jae
push
mov
je
fwait
mov
(bad)
fs
jg
jbe
movs
add
(bad)
test
jno
jecxz
inc
shr
jle
push
sbb
movs
popa
mov
pop
in
mov
stos
in
mov
(bad)
push
cmp
xchg
adc
jne
(bad)
or
pop
sub
popa
mov
lahf
cmp
dec
push
add
pop
daa
or
pop
pop
dec
mov
pushf
push
daa
test
jl
xchg
std
arpl
ficomp
mov
pop
stos
leave
ins
pop
dec
add
jmp
iret
ins
lds
mov
(bad)
fs
xchg
(bad)
dec
ret
sub
mov
add
cwde
sbb
cmc
pop
mov
enter
jnp
les
pop
dec
mov
adc
call
sub
call
adc
cwde
or
cmp
dec
ja
inc
test
push
addr16
loope
test
loop
mov
fisttp
add
sar
or
push
leave
mov
xor
sbb
fst
into
cmps
enter
scas
outs
int
(bad)
popf
mov
sbb
test
sub
shl
pop
or
test
mov
out
and
cmova
daa
test
push
imul
ds
sbb
leave
mov
call
bound
ins
cld
push
into
rol
push
aas
pop
(bad)
frstor
pusha
jecxz
mov
adc
movs
ret
das
or
imul
sar
mov
imul
cmps
bound
test
push
inc
add
hlt
sbb
add
sbb
dec
adc
and
pop
mov
sbb
fcomp
je
xor
and
dec
and
sub
inc
xlat
or
arpl
jnp
dec
test
and
dec
xchg
cs
in
or
lods
mov
xor
push
inc
loop
push
out
ins
pop
pop
repz
cmp
js
aam
(bad)
stc
jb
inc
jl
push
fs
jmp
out
mov
pop
jne
xor
imul
push
xchg
jb
jge
iret
shr
xchg
xor
fidiv
pop
leave
test
mov
inc
fwait
js
xor
pop
xchg
jae
fadd
or
(bad)
mov
xchg
xchg
jl
mov
(bad)
repnz
aad
ror
iret
cli
add
jb
xchg
pop
leave
xor
sti
aam
mov
retf
mov
dec
mov
fwait
jo
mov
popf
cli
je
push
ins
outs
or
lds
lods
dec
repnz
pop
adc
inc
or
sbb
shr
jl
outs
jno
in
mov
mov
(bad)
dec
add
jb
sub
pop
retf
cmc
les
adc
sub
push
push
dec
jle
ror
inc
or
adc
xor
(bad)
clc
and
pop
stos
imul
push
sbb
adc
nop
lods
cmps
mov
pop
push
xor
fwait
iret
sub
dec
push
outs
mov
jecxz
xchg
cwde
out
adc
rol
sub
stc
jne
in
jmp
(bad)
cmp
jg
jmp
leave
rcl
out
sar
pop
adc
call
mov
aas
bound
into
xchg
(bad)
(bad)
mov
jbe
repnz
aam
mov
mov
jo
sahf
pop
sbb
test
fs
adc
ror
js
(bad)
sbb
inc
inc
(bad)
fsubr
xor
xor
push
adc
dec
repz
out
lods
out
int3
mov
lahf
xchg
cli
mov
sub
and
sub
cmps
xchg
pop
leave
or
gs
and
pop
jno
xor
adc
call
mov
push
lahf
(bad)
cmp
dec
outs
je
sub
push
in
dec
cmc
jnp
call
sbb
mov
and
cmp
dec
sub
xchg
push
fdivr
jp
int3
aaa
bound
dec
jg
fwait
(bad)
mov
dec
imul
sbb
inc
out
dec
push
push
mov
inc
enter
test
sbb
ins
das
or
add
jge
adc
(bad)
movs
ins
mov
push
arpl
ret
gs
aad
adc
test
mov
xchg
pop
cmp
js
sbb
inc
int
add
movs
sbb
fisttp
pop
imul
loop
mov
inc
pshufw
and
inc
xchg
inc
sbb
jbe
xchg
push
(bad)
test
popa
pushf
dec
lock
xor
addr16
lahf
xchg
xchg
test
lock
movzx
fld
jbe
sbb
or
push
and
jp
lock
retf
jg
sbb
and
out
cmps
mov
lods
and
cs
xlat
push
test
pop
rcr
mov
jge
mov
ficomp
add
jo
push
gs
in
arpl
scas
sub
adc
sub
jg
cdq
js
push
xor
cli
jmp
push
pop
out
out
jmp
std
xchg
mov
add
push
sbb
lahf
xchg
jl
dec
aam
aas
xchg
push
daa
stos
(bad)
lock
data16
outs
jae
xlat
test
xor
xor
mov
xor
pop
push
jnp
cmc
dec
mov
cwde
adc
jp
lock
sti
in
mov
pop
mov
push
scas
scas
xchg
mov
stos
movs
mov
rcr
push
nop
pusha
and
scas
dec
cmps
and
clc
sbb
push
shl
mov
ret
sub
xor
add
stos
in
rcl
and
mov
dec
xchg
outs
(bad)
(bad)
mov
fadd
dec
(bad)
sub
mov
out
add
dec
mov
push
inc
aad
xor
sub
inc
mov
pop
sbb
and
xor
xchg
fstp
mov
adc
xchg
xchg
and
cld
int3
hlt
jp
call
jbe
gs
add
push
or
cmp
mov
call
add
dec
jmp
mov
pop
xor
add
push
mov
test
sbb
push
imul
dec
cmp
inc
mov
add
add
xor
pop
sti
outs
mov
mov
call
cmc
call
fidivr
ret
das
repnz
ds
outs
cmp
repz
sbb
xchg
mov
xor
sub
sbb
xchg
jne
adc
push
fsubr
sbb
fpatan
cmps
popf
sub
pop
push
pop
jb
inc
push
ja
fs
(bad)
hlt
sub
dec
int
ja
mov
ret
gs
pusha
inc
aam
movs
adc
and
xchg
je
or
das
inc
dec
pop
mov
call
mov
repz
xlat
lahf
ins
inc
lock
cdq
pusha
xor
sub
mov
gs
pop
inc
xchg
mov
out
cs
sbb
mov
clc
dec
in
jne
gs
fistp
and
aam
dec
fcmovb
pop
and
stc
lea
cdq
imul
jae
lods
dec
mov
mov
lods
stc
ret
jmp
pop
dec
pop
inc
fsubr
push
daa
mov
je
loopne
add
or
jmp
mov
dec
jecxz
jb
or
xor
pop
dec
sbb
sub
cmp
or
mov
sbb
out
sbb
into
sbb
dec
sbb
dec
sub
mov
retf
mov
pop
push
shr
adc
and
mov
sbb
sbb
sbb
je
inc
push
sub
mov
xchg
movs
mov
movs
jbe
call
adc
pop
sub
push
mov
dec
push
test
cmc
shl
inc
enter
adc
and
or
(bad)
pop
mov
inc
and
fstp
xor
icebp
ret
dec
inc
mov
mov
popa
push
pop
push
pop
adc
mov
ja
test
pushf
and
add
pop
dec
je
sub
bound
mov
xor
je
aas
and
add
cli
xchg
shl
loopne
push
push
mov
fidivr
cmps
xor
sbb
out
sti
adc
or
outs
rcl
and
aaa
mov
inc
xchg
pushf
jno
push
adc
mov
mov
loope
mov
push
sub
inc
pop
push
pop
or
push
xchg
push
inc
mov
aam
mov
jmp
jl
cmp
lods
cli
jne
add
mov
push
loop
mov
clc
sub
shl
and
xor
mov
adc
jg
pop
xor
jnp
add
push
cmps
imul
sub
dec
call
mov
sbb
stos
loop
scas
jg
ss
add
dec
retf
cwde
dec
cmps
pop
and
pop
push
dec
rcl
dec
push
mov
push
scas
jne
ss
in
jge
sbb
mov
mov
lods
ss
dec
dec
push
loope
xlat
fwait
imul
xor
xor
jmp
cmps
push
and
loop
std
mov
adc
mov
movs
enter
gs
cmp
pop
sub
ss
mov
add
or
xchg
xor
cmps
je
ret
mov
out
ins
(bad)
in
lods
lds
mov
xchg
jle
aaa
and
idiv
dec
mov
lds
pop
sbb
pcmpeqw
mov
test
jbe
pop
repnz
fwait
gs
mov
mov
sub
adc
lds
push
sbb
mov
(bad)
sti
push
fild
shr
nop
push
or
scas
shl
jp
mov
or
pop
loopne
inc
pop
jnp
dec
lea
popf
imul
mov
push
mov
imul
inc
mov
push
fisttp
xchg
iret
cli
pmovmskb
(bad)
aad
popf
popa
mov
xchg
jne
xchg
mov
ret
jb
mov
lahf
ror
daa
test
xor
xchg
add
jg
rcl
out
stos
jbe
mov
mov
mov
and
test
dec
mov
dec
xchg
inc
lods
clc
imul
and
add
scas
xchg
xor
sub
push
cmp
lods
ss
lods
mov
(bad)
or
xchg
bound
daa
arpl
cmps
adc
bnd
jo
cmp
inc
sbb
jnp
pushf
jmp
xchg
xchg
jae
in
dec
dec
call
inc
mov
ins
jnp
adc
std
xchg
lds
xor
mov
addr16
repz
int
or
or
pop
jno
mov
loopne
cmc
movs
mov
push
inc
push
ja
dec
fdivr
ror
jae
sub
mov
inc
movs
push
xor
jb
cmps
rcl
mov
fsubr
out
lods
mov
arpl
cmp
movs
or
test
mov
push
rcl
cmc
nop
cmp
div
out
pop
je
and
retf
cs
(bad)
xchg
fstp
pushf
inc
jno
sub
in
not
mov
ins
(bad)
adc
add
push
jne
sub
pop
sbb
sub
jle
push
in
jmp
and
sbb
mov
adc
cmps
adc
or
loopne
push
jge
out
jnp
and
dec
cs
sub
outs
ins
in
out
xchg
jge
call
xor
push
push
xchg
mov
push
mul
push
jnp
fbld
mov
adc
xchg
jns
stc
ins
push
ja
mov
cwde
xchg
xchg
xchg
icebp
sbb
loop
ja
(bad)
popa
xchg
inc
mov
mov
lahf
sbb
cmp
fld
int3
imul
xor
ror
out
rol
push
das
cmp
not
xchg
test
xchg
pop
jecxz
das
ror
mov
sar
int
scas
mov
sbb
cmp
je
xchg
jmp
in
shr
and
(bad)
popf
sbb
icebp
ror
packsswb
cmc
cmp
jmp
out
xor
retf
loop
mov
jmp
inc
pushf
inc
movs
fcom
ins
test
mov
mov
sahf
sub
push
into
or
movs
cmp
pop
push
mov
rol
dec
(bad)
xor
and
sbb
mov
jl
call
adc
cmp
cdq
pop
test
ja
cmp
enter
and
and
pop
mov
idiv
xchg
repnz
sub
inc
or
pop
mov
sbb
adc
pop
les
jbe
ret
shl
clts
sbb
add
jle
jbe
stc
pusha
adc
pop
xchg
adc
movzx
fwait
xchg
fwait
movs
retf
mov
cld
cmps
mov
or
fcomp
xor
dec
jmp
cmp
sti
mov
xchg
lea
ret
inc
in
lods
out
and
push
fsub
ins
(bad)
(bad)
(bad)
repz
or
cs
mov
xchg
cmps
push
out
add
jbe
loopne
push
jno
inc
ins
pop
adc
(bad)
adc
sbb
fisubr
enter
add
xchg
jl
out
rol
mov
scas
popa
hlt
neg
imul
dec
add
in
movs
dec
and
hlt
pop
xor
test
add
movs
ret
sbb
out
ins
and
pop
retf
and
xor
call
lds
xchg
inc
add
push
xchg
lods
ss
rcl
jnp
dec
ins
pop
mov
cmp
inc
add
out
sbb
sub
dec
push
neg
test
jecxz
dec
ret
inc
into
add
jmp
xor
add
cli
cmp
jnp
aaa
das
movs
xor
clc
mov
gs
jp
fld
dec
bound
add
push
sub
sbb
out
popa
ds
cmps
xchg
pop
mov
fs
sbb
lds
inc
arpl
std
xor
xchg
test
repz
inc
into
and
lea
ss
add
outs
jno
cmp
imul
(bad)
scas
pop
out
jg
ret
xchg
pop
push
lds
mov
out
scas
mov
ja
xor
sbb
jl
xlat
lea
(bad)
xor
xchg
push
pop
jns
push
sub
call
cmp
sahf
pop
adc
mov
imul
jns
xchg
xchg
inc
mov
pop
push
test
movs
jnp
std
fistp
mov
or
icebp
xor
jle
out
add
add
adc
leave
add
cs
(bad)
xor
sti
mov
and
cwde
pop
int
push
cmp
ja
stc
mov
int3
ds
call
cmp
xor
adc
sbb
jae
retf
cmp
mov
pop
inc
daa
adc
push
pushf
lods
scas
rcr
sub
sbb
test
test
jg
pop
xor
jp
sbb
enter
into
stos
xor
push
inc
xchg
loopne
sbb
dec
mov
ins
pop
ret
scas
js
arpl
repnz
mov
fisub
xchg
xor
inc
inc
mov
dec
inc
dec
mov
mov
or
adc
cdq
das
sub
(bad)
fidivr
out
add
xor
add
adc
mov
cmp
sub
pop
test
xor
xor
outs
movs
and
push
fdecstp
cmp
push
sub
lds
pusha
mov
je
lods
fdivr
retf
and
pop
push
movs
or
ficomp
mov
mov
xchg
or
cmp
les
test
ss
jg
mov
fidiv
ins
cmp
daa
mov
ja
mov
push
das
pop
pop
sahf
ins
cmp
fcmovu
mov
ins
inc
retf
lock
cmps
and
xchg
test
fisub
inc
mov
pop
out
mov
jg
dec
jmp
or
mov
mov
xor
sbb
cmp
mov
pop
xchg
mov
sub
paddusb
fsubr
xor
call
add
nop
xchg
std
bound
dec
test
sub
jp
(bad)
or
(bad)
call
stos
ja
and
adc
outs
cmp
aam
add
sub
and
cs
test
mov
mov
and
leave
mov
(bad)
scas
clc
push
mov
fimul
mov
cmc
jbe
out
sub
not
lods
inc
push
ins
adc
push
push
pusha
test
into
stos
fmulp
cmp
icebp
pop
inc
xor
add
cli
push
aad
mov
gs
movs
push
imul
mov
adc
dec
or
outs
sub
adc
xchg
add
stc
jns
(bad)
add
test
add
int
adc
scas
mov
cs
add
xchg
jmp
adc
and
idiv
test
xor
mov
rcr
stos
fmulp
loope
add
imul
(bad)
ret
mov
movs
and
mov
(bad)
sub
fcom
adc
mov
jg
dec
mov
iret
sub
test
jp
loop
or
stc
(bad)
dec
xor
pop
outs
test
test
stos
and
xor
fbstp
mov
mov
push
lock
int
jecxz
mov
xchg
push
in
pop
and
in
stc
cmc
inc
fimul
add
mov
sub
ds
xchg
and
pop
add
test
imul
sbb
cwde
mov
je
clc
jae
scas
and
ds
loope
dec
inc
ret
push
sti
jp
mov
rcl
mov
inc
mov
lods
std
enter
jp
mov
fwait
mov
and
sbb
dec
ins
rol
xor
xchg
mov
push
jmp
sbb
jmp
iret
pop
or
push
lods
or
sbb
sub
xlat
(bad)
xor
and
xor
sub
repz
and
add
lock
push
xor
aaa
call
and
jnp
push
xor
xor
cmp
jg
ror
cmp
xchg
vmovups
test
mov
dec
popa
xlat
cmp
in
loopne
mov
mov
(bad)
jl
cmp
std
idiv
sti
outs
xchg
jo
inc
mov
fcomp
mov
retf
push
cmps
fmul
fcomp
ja
mov
adc
leave
in
call
jg
cwde
jb
add
push
jb
xor
fstp
fs
xchg
ror
ss
push
lds
icebp
repnz
in
and
dec
adc
shl
xor
jnp
cmps
sub
push
cmp
mov
je
mov
test
adc
dec
ins
jnp
scas
test
add
pop
or
and
fs
adc
jb
add
dec
sub
mov
jecxz
jg
scas
mov
in
cli
into
(bad)
adc
aad
test
int3
pop
jp
mov
ret
je
add
push
xchg
test
pusha
sub
sbb
ins
cmp
scas
dec
sub
lock
out
popa
jb
mov
loop
add
mov
push
mov
lods
xor
repnz
sub
push
(bad)
(bad)
sbb
sbb
mov
jmp
not
iret
movs
pop
cs
ret
pusha
pop
ret
push
push
sar
paddw
pop
or
push
ret
in
sbb
lds
fs
and
aad
fcomp
mov
sub
or
inc
push
xor
fistp
pushf
jecxz
cld
sub
mov
add
jmp
sub
pop
jno
fistp
rcr
rcl
test
das
dec
push
dec
in
xchg
inc
mov
inc
cmp
mov
jo
jnp
jg
add
rcl
push
jge
mov
aas
loop
scas
or
pop
adc
pop
leave
sbb
out
dec
lods
retf
xor
mov
adc
in
jns
push
stos
adc
shl
call
lds
movs
mov
ror
and
jno
and
(bad)
(bad)
jle
ret
cwde
test
mov
ucomiss
(bad)
addr16
cmp
rcr
adc
mov
test
add
sub
inc
jae
adc
ja
sbb
mov
add
cs
inc
xchg
mov
adc
sub
xchg
cmc
popf
out
ror
sub
in
imul
or
add
int3
add
les
inc
jns
jl
sar
push
and
xor
push
ss
xchg
pop
cmp
retf
lods
push
xchg
call
adc
sahf
test
test
or
pop
sub
add
pop
das
push
mov
sahf
jns
(bad)
xacquire
stc
inc
cmp
jmp
dec
mov
imul
adc
jl
push
sub
call
cmp
mov
pop
(bad)
mov
push
cld
or
mov
cmp
cmps
dec
pop
nop
fidiv
push
ja
mov
or
out
rol
dec
(bad)
xchg
sti
pusha
jmp
ins
mov
inc
bound
dec
add
sub
jno
pop
mov
xchg
es
es
outs
cmp
xchg
sbb
push
add
push
add
xchg
sbb
xchg
xor
ds
in
add
scas
cmp
ror
inc
lds
xchg
add
jle
std
mov
xchg
rcl
cs
pusha
outs
mov
push
add
hlt
out
sahf
push
and
in
push
rcr
test
loopne
mov
and
push
mov
xor
add
inc
jmp
shl
push
jge
xchg
xchg
mov
mov
fist
es
shl
mov
cmp
mov
jecxz
movs
ins
cld
aaa
loopne
daa
sbb
mul
fcmovnu
std
sub
sub
cdq
hlt
add
sbb
mov
jl
adc
into
movs
adc
xor
mov
fst
sub
push
or
movs
mov
js
push
movs
test
retfw
push
push
mov
fs
jae
xlat
inc
sub
ret
mov
pop
pop
mov
sub
fsub
jge
loope
in
call
iret
xor
and
xor
iret
mov
rcl
cdq
add
div
loop
out
sbb
cdq
jp
mov
lock
pop
mov
push
pushf
push
and
aas
jg
sub
scas
test
pop
ret
mov
adc
mov
fs
or
jno
xor
and
mov
fadd
push
(bad)
jno
popf
xchg
jns
mov
and
movs
and
retf
retf
xor
in
out
sahf
std
js
int3
retf
mov
dec
pop
test
pop
mov
lar
or
sub
and
popa
dec
xor
dec
xor
xchg
jle
scas
mov
xchg
icebp
sub
and
cdq
mov
mov
mov
and
jne
lods
xor
scas
fbld
test
sbb
add
fild
jae
fnsave
jnp
mov
mov
bswap
popa
push
rol
and
xor
xchg
loopne
inc
pop
and
adc
push
sbb
lock
inc
(bad)
xor
push
out
outs
fwait
push
(bad)
in
mov
sub
jg
push
std
mov
hlt
sbb
popf
aad
imul
adc
pand
fdivrp
xchg
or
and
jnp
jno
mov
leave
int
jnp
jmp
ret
push
push
pop
in
xchg
cmp
xchg
icebp
mov
inc
(bad)
mov
aaa
xchg
inc
mul
push
mov
pop
outs
push
cmp
punpcklwd
mov
std
retf
les
int3
mov
into
aaa
and
jae
mov
jae
ds
jne
add
sbb
or
outs
ins
pop
push
add
pop
or
sbb
pop
or
out
(bad)
movs
shl
test
out
cli
je
mov
mov
xchg
je
addr16
pop
mov
in
dec
into
and
int
lods
movs
mov
test
mov
pushf
mov
rep
sahf
add
cmp
test
push
xchg
adc
pop
pop
mov
adc
sub
pushf
adc
daa
jo
jge
es
loope
xor
jae
mov
or
mov
retf
cmps
pop
cs
ins
aam
sbb
mov
int3
fimul
mov
inc
bound
sub
shl
lods
int3
pusha
inc
ja
mov
mov
jno
xor
pop
xchg
movs
fmul
pop
push
mov
xor
add
sbb
(bad)
add
mov
outs
push
enter
sti
inc
cmp
ss
pop
lahf
inc
clc
je
cmp
fucomp
dec
int
mov
fcmovbe
mov
jns
aaa
jnp
ds
sub
cmc
(bad)
cs
stc
fist
or
pop
gs
jb
fbstp
lea
cmp
cs
sbb
arpl
xchg
adc
sub
cmp
pop
mov
scas
fist
xchg
dec
es
xor
push
mov
aaa
hlt
mov
mov
ja
inc
and
mov
(bad)
out
call
push
inc
jb
sbb
push
pop
int
mov
jno
jl
sub
aad
xchg
lahf
es
(bad)
sub
aad
fidiv
fisttp
outs
mov
fisub
outs
mov
fs
scas
xchg
outs
mov
ja
mov
cdq
xchg
repz
ja
mov
loopne
push
mov
pop
sub
or
mov
outs
inc
or
jno
xor
adc
push
xchg
or
push
mov
sub
xchg
retf
(bad)
jl
cmp
and
adc
xchg
fdiv
cmp
jbe
push
cmp
mov
stos
and
shr
jecxz
pop
rcr
mov
cmp
cmps
or
pop
imul
ins
sub
xchg
loopne
cli
or
pop
int
pop
aaa
jle
pop
xchg
repz
ins
xchg
push
rcl
xor
in
aam
sahf
stos
and
jecxz
sub
cmc
repnz
test
stos
or
retf
and
mov
shr
add
jns
add
fidivr
adc
push
mov
mov
(bad)
and
outs
mov
in
leave
sbb
fisub
jp
cli
inc
cmp
shr
push
retf
jns
add
mov
dec
adc
push
adc
pop
mov
out
test
outs
ret
mov
test
inc
inc
(bad)
pop
add
jmp
call
fist
push
pop
sub
mov
xor
repz
inc
sub
rcr
in
in
or
lock
adc
dec
cmp
xor
leave
mov
sbb
rcl
std
jl
dec
ret
jg
retf
push
and
mov
cmp
ins
retf
test
(bad)
push
into
mov
scas
movs
idiv
in
xor
mov
mov
add
inc
push
jmp
xchg
mov
ret
mov
test
jno
jae
scas
(bad)
test
push
fwait
repz
cmp
inc
add
dec
neg
pop
xchg
or
scas
push
mov
xor
std
or
jecxz
loop
mov
push
adc
xor
fwait
fwait
in
push
sub
inc
and
push
push
inc
fisub
cmps
popa
js
inc
es
pop
adc
cld
adc
test
jns
cdq
in
mov
(bad)
fcmovu
call
xlat
inc
(bad)
mov
bound
pop
jecxz
jno
imul
int
sti
adc
lds
sar
inc
mov
inc
lods
adc
loop
arpl
fsub
shr
outs
shl
jb
jmp
adc
loop
test
mov
popf
popf
jge
push
inc
cmp
aas
cld
push
pop
jle
ins
mov
cld
adc
mov
test
arpl
jecxz
and
cmp
dec
(bad)
sub
imul
popf
not
push
ficom
cmps
push
mov
test
ficom
mov
fidivr
fmul
jae
xchg
scas
imul
sub
inc
ret
jl
ret
add
lds
outs
push
rcl
lods
outs
iret
sub
jb
outs
in
sbb
(bad)
into
hlt
mov
outs
mov
mov
mov
inc
jecxz
add
xchg
or
aaa
lods
add
in
fwait
in
imul
leave
in
inc
es
xchg
ins
xlat
sbb
mov
lods
cmp
or
hlt
cmp
je
adc
xchg
popa
in
adc
xor
cmp
pop
and
mov
sti
ror
mov
movs
jecxz
stos
mov
sar
clc
ins
xchg
mov
mov
dec
gs
(bad)
cmp
sbb
sub
inc
mov
lahf
xchg
dec
(bad)
sbb
inc
and
sbb
and
push
call
pop
inc
add
pop
int
cli
push
iret
xchg
and
fidiv
movs
add
das
mov
inc
outs
xor
dec
dec
inc
stos
fmulp
adc
push
rcl
and
pop
pop
loopne
push
pop
cld
xchg
sbb
popa
jle
lds
jbe
dec
sar
cdq
loopne
fcomi
cmp
out
les
sbb
xor
or
fidiv
leave
xchg
iret
leave
pushf
gs
sbb
outs
aas
mov
int3
mov
xchg
scas
in
and
or
xor
scas
ja
push
stos
out
and
mov
push
xchg
jb
xor
xchg
sub
aas
dec
sbb
mov
pop
lods
inc
test
mov
sahf
rol
adc
lds
inc
pop
ins
mov
xchg
cld
call
(bad)
cmp
jbe
mov
mov
vxorps
sar
cld
lods
je
pop
inc
nop
xchg
xchg
rol
mov
pop
lods
xchg
hlt
pop
adc
cmp
std
mov
fist
pop
sub
mov
cmc
cmc
jl
lods
sahf
or
jo
mov
lea
push
in
sub
int3
push
in
fld
sbb
inc
ins
fbld
mov
jp
mov
popa
cmp
scas
dec
stos
inc
and
es
es
gs
cmps
pop
add
jnp
mov
mov
push
in
shl
fs
mov
dec
pop
cs
mov
push
stos
jmp
pop
pop
arpl
imul
sub
sub
in
dec
call
pop
push
and
adc
movs
xchg
ficom
sti
mov
aad
jne
icebp
push
and
popa
enter
imul
cld
sub
jo
xor
mov
push
lods
or
nop
cmp
(bad)
sub
mov
mov
test
mov
mov
sbb
add
dec
xchg
sbb
fldz
jns
pushf
xchg
cld
mov
add
lods
nop
dec
xchg
push
je
dec
daa
fisttp
push
push
xchg
pop
bound
xlat
sub
pusha
cmps
jo
pop
pushf
mov
jl
ja
xor
into
or
paddusb
jmp
cmps
sahf
sub
(bad)
nop
cmps
in
inc
push
xchg
push
cli
mov
cmp
cmps
outs
cmps
fnstsw
mov
pop
mov
or
sbb
sti
rcl
and
pop
and
es
movs
push
mov
mov
adc
sub
push
call
push
xchg
mov
in
(bad)
mov
fucomi
lock
add
sub
fistp
shl
pop
sub
(bad)
stos
lahf
les
idiv
dec
xor
xor
sub
push
xchg
sbb
dec
cmp
clc
icebp
mov
aad
add
or
call
sub
sub
pop
stc
cdq
icebp
inc
push
arpl
push
int3
in
sub
stos
dec
mov
inc
mov
out
mov
pop
gs
xchg
and
adc
loop
loopne
ret
(bad)
sbb
retf
push
jmp
push
mov
push
outs
push
mov
loope
out
xchg
push
idiv
sbb
cmps
adc
test
(bad)
call
adc
ins
aad
sbb
mov
sahf
(bad)
lea
jnp
fwait
pop
lahf
push
inc
nop
int3
ret
shl
inc
pushf
enter
dec
jg
(bad)
push
sub
mov
adc
dec
inc
lea
mov
stc
shl
ror
icebp
(bad)
mov
pop
cmp
(bad)
jp
push
xchg
jb
cmc
sub
push
mov
dec
call
(bad)
sbb
sub
dec
fsub
dec
xor
retf
inc
outs
adc
in
adc
sub
test
mov
sub
add
ficomp
div
ss
ja
ins
push
mov
aam
(bad)
ds
jg
icebp
clc
stos
imul
pop
sub
cmp
dec
push
push
dec
xor
test
div
movs
xor
jbe
dec
push
xchg
xchg
cdq
rcr
mov
pop
lahf
pop
mov
xor
cmp
xlat
stc
sbb
jmp
pusha
pop
push
pop
xchg
pop
in
pop
push
data16
add
or
ins
xor
aad
jle
daa
mov
xlat
cli
ja
mov
(bad)
sbb
test
pop
fwait
dec
xchg
sub
adc
cli
pop
push
jb
pushf
push
adc
jnp
jb
mov
push
and
jnp
mov
bound
hlt
imul
adc
push
sub
(bad)
out
aam
lahf
xor
jg
call
stc
fdivr
fisttp
sbb
outs
scas
and
cwde
aad
push
inc
xor
fld
test
cmp
mov
ror
push
retf
clc
inc
aas
int
test
xchg
inc
fstp
in
ret
repnz
scas
ficomp
das
push
ret
test
imul
xchg
fld
sbb
push
stc
push
bound
adc
pop
xchg
retf
mov
js
or
icebp
xchg
and
into
test
icebp
xchg
and
lods
push
mov
pop
mov
pop
and
cmp
cli
pop
pop
mov
xor
or
jns
inc
xchg
push
rcl
push
mov
jae
xor
jmp
push
icebp
test
test
je
mov
jno
sub
ja
pop
sub
out
enter
mov
retf
dec
lock
rcr
cs
(bad)
ins
neg
hlt
rcr
push
fst
retf
mov
ror
mov
shl
iret
mov
test
mov
mov
and
test
and
xor
jecxz
pop
mov
(bad)
mov
adc
dec
add
mov
push
rol
test
fmul
lods
pop
mov
jmp
sub
fst
rcl
(bad)
and
sub
jmp
cmp
movs
pop
adc
ret
dec
fimul
movs
jl
mov
call
add
adc
int
retf
jo
push
rcr
push
cmp
stc
and
adc
pop
ret
mov
xlat
js
jge
pop
mov
jns
lods
lock
je
mov
push
pop
sub
dec
push
push
push
sti
outs
and
mov
scas
imul
and
dec
mov
mov
mov
cmp
fistp
pop
cmp
shl
xchg
popf
int3
cmc
test
(bad)
js
fisubr
add
lds
fcomp
adc
in
sbb
fwait
xor
loopne
pop
mov
mov
jl
push
out
mov
hlt
mov
movs
sub
imul
clc
daa
mov
rcl
ss
std
in
int3
gs
cwde
std
sub
jns
loopne
lds
cdq
pop
shr
call
push
mov
add
aam
retf
mov
jb
add
xchg
pop
fmul
cmp
(bad)
jns
popa
hlt
add
pop
dec
jbe
dec
mov
cmp
or
loope
ret
mov
mov
lahf
dec
ficomp
rol
repz
pop
inc
pop
enter
aaa
(bad)
fbstp
and
ds
adc
data16
inc
fs
popa
push
or
adc
mov
bound
rol
sbb
cli
and
jno
mov
jecxz
mov
ja
js
aaa
pop
sbb
jae
mov
push
mov
in
popa
or
adc
lahf
xchg
pop
cld
cmp
ret
mov
adc
adc
add
scas
and
sahf
and
xor
push
xor
sub
dec
jno
add
adc
(bad)
outs
(bad)
(bad)
in
cdq
adc
sahf
dec
add
cld
sbb
adc
mov
fimul
outs
in
sar
mov
je
xchg
stc
(bad)
in
cmp
inc
sub
push
cmc
or
iret
jno
out
sub
push
or
das
mov
gs
mov
dec
retf
pushf
dec
cmp
hlt
rcl
jo
mov
mov
mov
and
pushf
inc
sahf
scas
lds
and
call
adc
sub
addr16
and
in
mov
add
pop
sbb
out
mov
scas
sub
inc
jb
mov
(bad)
outs
adc
popf
mov
arpl
and
xor
in
cli
(bad)
mov
jge
ret
add
sbb
lahf
hlt
movs
mov
inc
sti
fdiv
movntps
stos
(bad)
out
dec
stos
clc
in
or
sub
mov
xor
js
push
xchg
mov
or
iret
int3
fild
(bad)
arpl
ins
mov
or
push
sub
aam
cmc
or
cmp
jns
jmp
iret
ret
out
mov
xchg
es
jle
addr16
dec
pop
popf
cmps
mov
sbb
shr
add
retf
inc
mov
and
fst
inc
ror
add
(bad)
dec
jecxz
movs
cmp
jle
or
and
cmps
scas
dec
xchg
movs
dec
dec
repz
jo
pop
js
dec
into
mov
xchg
jo
fwait
rcr
std
out
out
jns
mov
sbb
mov
and
cld
push
sbb
pushf
lock
ja
std
dec
mov
loop
sub
(bad)
push
adc
call
pop
scas
pop
ret
mov
sbb
pop
stos
pop
cs
mov
out
cmp
dec
leave
push
je
push
retf
(bad)
pop
mov
or
and
iret
imul
adc
test
int3
das
dec
data16
jb
inc
xchg
pop
sub
cmp
sub
pop
fiadd
movs
fild
xchg
mov
or
or
jecxz
dec
lock
imul
test
outs
xchg
mov
out
pop
ret
idiv
jl
mov
gs
and
aam
push
sbb
xlat
int
icebp
sar
fs
test
shl
ss
dec
jbe
jg
push
sub
sbb
jle
push
fcom
pop
adc
dec
mov
imul
stc
mov
push
sub
mov
les
ins
jmp
mov
dec
cmps
jne
xchg
imul
xor
sub
hlt
sub
test
mov
js
bound
out
cmp
xor
push
adc
test
add
fstp
mov
ret
and
push
loopne
sbb
mov
ins
cdq
and
jp
out
xor
lahf
inc
and
icebp
or
add
jae
cmc
out
leave
mov
(bad)
mov
mov
mov
cmc
stos
ins
fiadd
jno
pusha
inc
xor
outs
mov
xchg
push
and
push
rcr
outs
or
rol
icebp
xchg
add
push
sub
test
out
add
xor
push
ja
inc
adc
icebp
cmp
mov
cmp
dec
adc
fidivr
shl
lea
fist
mov
in
dec
addr16
sti
cwde
inc
mov
cmp
repz
call
repz
jmp
loop
fisttp
loopne
adc
sub
aam
jno
aam
lods
cmp
nop
pop
jo
push
jge
push
ret
ja
push
scas
aam
fld
cld
iret
leave
out
pop
and
popa
in
sub
add
adc
or
xchg
jp
jp
xchg
mov
pop
nop
and
sbb
in
push
pushf
push
ror
xchg
retf
mov
cdq
ds
outs
ret
mov
jecxz
push
in
and
xor
gs
inc
and
and
std
push
test
fsub
add
adc
push
scas
fidiv
xor
jae
xlat
adc
push
mov
sti
jge
inc
inc
pop
push
test
xor
or
rol
dec
and
mov
retf
lea
movs
jg
cmp
adc
jno
shl
cs
xchg
stos
or
sub
retf
repz
idiv
mov
pop
cmp
cmps
adc
mov
pop
cwde
jmp
jmp
mov
or
sti
rcl
pop
neg
test
and
dec
mov
xchg
mov
aaa
xchg
repz
sbb
push
sub
ja
mov
sub
inc
ss
(bad)
mov
movs
xchg
dec
jmp
and
enter
ds
retf
add
movs
mov
pop
enter
jne
sbb
in
dec
in
xor
cmp
jbe
out
div
push
jmp
mov
mov
std
jp
add
(bad)
fdecstp
mov
push
push
mov
out
lods
sbb
es
add
imul
int
or
cmp
push
(bad)
lds
mov
push
xchg
in
lds
push
shl
add
leave
jmp
jo
repz
mov
retf
xor
cmc
fadd
add
mov
mul
xor
and
xor
pop
xchg
jmp
push
repnz
mov
out
and
fldl2e
xchg
or
cmp
pop
mov
inc
sub
mov
cld
cmp
cmp
cmp
jg
(bad)
sbb
xchg
push
jo
or
pop
xor
jbe
repz
rol
push
xchg
sub
sbb
inc
aam
dec
mov
jns
push
and
mov
and
pop
xchg
mov
(bad)
rol
xor
out
push
push
out
and
sbb
push
adc
jp
ins
in
sbb
mov
mov
in
pop
add
push
mov
or
test
imul
jbe
dec
adc
pop
xchg
and
stos
xor
stos
aaa
fdiv
in
mov
ret
and
mov
mov
and
push
sti
call
mov
xor
mov
aas
add
aam
or
push
rcl
test
mov
cmps
out
aas
add
lock
test
adc
mov
xor
mov
sbb
adc
sbb
cmp
icebp
xchg
call
inc
push
push
ins
leave
add
sub
retf
in
jle
mov
inc
or
call
out
or
pop
int3
and
jg
into
jmp
test
scas
ins
adc
(bad)
stc
mov
and
test
add
sub
jle
push
mov
add
loopne
dec
repnz
outs
in
add
sahf
cmps
test
hlt
push
fld
dec
in
and
test
bound
xchg
cmc
rcl
test
inc
jno
mov
push
dec
jecxz
xchg
imul
inc
dec
out
not
mov
pop
mov
jle
cmp
push
dec
or
mov
add
aam
mov
ins
(bad)
daa
les
gs
loopne
sub
xor
add
jg
adc
adc
outs
xchg
push
repnz
iret
mov
dec
jecxz
mov
frstpm(287
and
cmp
out
loop
jns
adc
sbb
out
mov
jns
pop
cdq
jmp
cwde
fstp
aas
inc
or
das
retf
test
lods
test
(bad)
jo
jns
pop
xchg
mov
push
jp
push
dec
jp
es
push
data16
push
xor
jge
test
mov
js
lahf
(bad)
push
imul
lods
(bad)
cmp
out
sub
rcr
push
mov
neg
mov
mov
sub
stc
sub
mov
loop
cmp
sbb
cmp
pop
fst
xor
xchg
mov
inc
lahf
pop
add
mov
es
retf
rol
and
stc
in
ss
mov
mov
pop
iret
sbb
sahf
jecxz
stos
inc
in
call
add
jb
lods
mov
test
retf
outs
out
inc
add
jb
jmp
add
test
fisub
stos
adc
push
je
jmp
iret
aad
push
mov
jecxz
shr
or
in
and
fisub
clc
jge
add
jl
sub
jo
scas
jmp
add
push
arpl
cdq
movs
jmp
pop
dec
push
pusha
pop
aaa
sbb
addr16
sbb
(bad)
cli
cs
das
mov
fist
ins
mov
xchg
stos
in
pop
sub
out
test
rcl
xlat
jge
adc
mov
imul
aaa
sbb
sub
gs
cmp
cmp
pop
push
mov
cli
mov
pop
add
jl
rcr
ror
mov
xlat
pop
cmp
dec
das
cmps
push
cmc
rol
push
pop
(bad)
leave
push
movs
inc
sbb
push
movs
test
gs
inc
sar
pop
push
cwde
dec
je
and
(bad)
xor
push
xor
sbb
mov
aaa
shr
out
jbe
xor
hlt
dec
ins
jl
xchg
imul
jb
push
pop
(bad)
or
mul
call
xor
mov
mov
dec
enter
sub
pop
in
sbb
adc
movs
mov
stos
mov
stos
mov
add
in
fs
mov
mov
and
scas
xchg
loop
aad
outs
add
dec
and
test
bound
test
jl
pop
lock
(bad)
cmp
jb
aad
jae
xchg
sbb
xchg
xor
and
or
lds
fld
scas
inc
pop
jae
inc
mov
imul
iret
shl
add
cld
pusha
mov
mov
jp
cmp
arpl
mov
mov
cmp
popa
dec
ds
loopne
imul
(bad)
loopne
ja
inc
adc
xor
lods
jecxz
sar
xor
stc
es
dec
fdivp
mov
xchg
sahf
mov
lahf
inc
add
std
pop
or
push
inc
pushf
imul
mov
inc
cmp
ror
fcomp
daa
and
push
sbb
mov
sbb
enter
out
pusha
(bad)
push
gs
cmp
mov
sub
lods
mov
ret
pop
xchg
xchg
sbb
xchg
scas
mov
daa
dec
arpl
or
xchg
jle
ror
mov
mov
hlt
push
and
adc
ins
(bad)
shl
fmul
mov
mov
jbe
inc
pop
inc
int3
repz
pusha
(bad)
jbe
loopne
or
sub
mov
mov
jp
repnz
or
adc
jmp
or
fcom
loopne
cmp
dec
fbld
cli
sti
mul
imul
or
lahf
sbb
mov
and
mov
data16
push
sbb
sub
gs
sub
call
sub
shl
mov
jne
ror
std
jne
sti
mov
jle
pop
sar
sub
add
inc
lods
neg
or
mov
pop
dec
les
dec
jecxz
rcl
mov
out
icebp
repz
mov
nop
int3
inc
in
cmc
xlat
xchg
dec
dec
inc
mov
sub
mov
fldenv
daa
in
xor
rcr
sbb
add
imul
mov
and
stc
mov
push
jo
mov
out
mov
rcl
mov
mov
xchg
pop
mov
test
push
(bad)
push
push
dec
lahf
inc
push
xor
dec
imul
push
cmps
sbb
adc
add
adc
addr16
jnp
add
ds
or
shl
je
enter
out
push
jae
jmp
pop
xchg
dec
enter
call
mov
pop
jmp
jnp
popf
mov
ja
xor
(bad)
push
mov
jmp
add
repz
add
fs
pop
xor
push
in
stos
es
mov
sahf
clc
mov
pop
imul
mov
nop
repz
hlt
mov
dec
aam
jne
mov
out
(bad)
mov
loopne
add
pop
pop
add
mov
jne
lock
rcl
fsub
dec
adc
pop
inc
fs
jle
xlat
movs
aas
jle
or
ror
das
jno
ficom
bound
xchg
adc
sbb
sub
cmp
xor
in
xor
adc
dec
mov
cdq
cdq
xchg
fisttp
pop
xor
sub
push
pushf
imul
dec
xchg
cli
cmp
jo
cmp
inc
lock
ss
or
jge
xor
pop
mov
mov
push
shl
je
out
je
movs
mov
adc
mov
inc
cld
add
cmc
or
retf
fild
outs
inc
test
dec
xor
cmp
dec
mov
enter
ds
out
cmp
das
inc
das
xor
loope
jbe
sar
outs
mov
add
cmp
mov
mov
out
jns
sub
sti
hlt
in
jb
mov
jle
and
or
sar
jb
(bad)
xchg
addr16
ins
ins
fstp
das
and
pushf
ror
push
sub
icebp
(bad)
mov
and
das
test
scas
mov
fadd
mov
das
gs
ins
cmp
adc
add
data16
dec
call
das
lods
fldcw
pmullw
je
pop
das
mov
pop
inc
cdq
test
mov
push
imul
sub
dec
stos
push
pop
mov
movs
xchg
mov
dec
add
xchg
sbb
pop
in
stos
sub
nop
and
loop
jge
mov
sub
lds
into
jecxz
lea
mov
or
and
inc
jge
ret
inc
(bad)
cld
push
je
addr16
addr16
dec
lods
ror
stos
pop
pop
dec
dec
mov
xchg
mov
stc
in
or
in
test
mov
loop
loop
aad
jbe
les
mov
cmp
adc
mov
jle
cdq
jle
(bad)
enter
xor
call
int
push
out
add
sub
or
ror
sbb
stos
popf
dec
cli
clc
nop
mov
inc
aas
sbb
aad
cmc
leave
loopne
mov
loop
mov
stos
mov
and
out
hlt
ins
je
pop
mov
call
sub
add
xor
inc
popa
popf
push
aad
mov
rcr
adc
inc
mov
mov
loopne
ss
scas
xchg
add
jmp
sub
lods
(bad)
jge
iret
dec
mov
push
test
in
(bad)
adc
sbb
sbb
pop
stc
scas
test
popa
jo
add
(bad)
imul
jge
call
or
sahf
pop
jmp
and
jbe
ins
cmp
pop
sbb
mov
aas
fadd
(bad)
xor
mov
int3
push
push
gs
push
or
arpl
call
arpl
cmp
inc
call
jnp
or
push
or
shr
cli
sbb
mov
rcr
mov
adc
fimul
stos
ret
mov
xor
mov
and
mov
lds
(bad)
mov
cli
adc
jbe
je
jmp
mov
(bad)
xor
addr16
xchg
in
dec
or
xchg
(bad)
cs
sar
rol
pop
dec
mov
cmp
cmps
mov
jge
push
jg
xchg
dec
mov
int
(bad)
sbb
push
ror
add
enter
cmps
stos
or
push
add
lea
jmp
out
div
ss
in
stc
dec
pop
mov
adc
mov
dec
cmc
sub
leave
and
push
(bad)
push
fdiv
jecxz
xor
sbb
(bad)
in
jae
pop
jnp
mov
mov
sub
or
inc
add
leave
inc
std
sbb
add
pop
rol
(bad)
mov
sbb
lds
dec
das
inc
bound
das
push
fild
push
test
jb
fbstp
pop
lods
cs
mov
das
xor
fcmovnbe
dec
addr16
inc
in
xor
stos
add
mov
inc
je
leave
sub
mov
cmps
call
movs
and
pop
dec
icebp
or
(bad)
pushf
mov
mov
dec
lahf
frstor
and
add
cld
aad
test
(bad)
test
inc
call
repnz
sbb
inc
ds
cmp
jb
sbb
arpl
mov
inc
out
into
cmp
jecxz
cmc
jl
sub
push
into
jge
inc
sar
sub
popa
scas
shr
fcmovb
adc
fs
mov
leave
jp
add
pop
jl
mov
sub
xor
add
out
stos
mov
sbb
dec
inc
arpl
rcr
mov
in
in
pop
mov
xor
cmp
push
lock
mov
xchg
pop
hlt
push
push
jae
les
icebp
push
mov
cmp
mov
or
mov
scas
xchg
ficomp
ffree
mov
inc
adc
movs
pmaddwd
shr
mov
imul
adc
pop
nop
adc
mov
call
inc
iret
sub
stos
mov
pop
add
jmp
sub
push
jmp
ja
or
sbb
lock
nop
repnz
and
psubusw
xlat
rol
or
inc
data16
repz
ficomp
daa
push
cmp
movs
mov
sub
jns
loopne
scas
dec
jbe
mov
xor
aad
ret
mov
mov
sbb
adc
repz
sbb
sub
jno
push
inc
mov
stos
pop
jecxz
mov
les
xchg
retf
and
dec
outs
gs
test
xor
jnp
enter
sbb
arpl
fadd
shl
pushf
shl
inc
in
test
ss
push
jg
pop
into
dec
in
mov
(bad)
mov
or
mov
repnz
cmp
or
xor
sub
sti
mov
jns
sbb
cmp
or
xlat
(bad)
add
test
loopne
xchg
pop
out
pop
leave
pop
sbb
jmp
inc
inc
mov
(bad)
ds
pusha
cld
push
pop
mov
adc
retf
pop
jecxz
dec
sahf
fcom
jge
jecxz
pop
cmp
clc
mov
mov
mov
inc
xchg
sbb
cmps
das
jp
xchg
pusha
jg
sbb
mov
inc
(bad)
shl
jo
test
inc
clc
scas
xchg
adc
retf
ja
push
test
and
inc
popa
adc
mov
aad
and
dec
jb
ins
std
jno
push
sti
push
popa
inc
mov
sahf
(bad)
jg
cli
mov
int
or
enter
clc
lahf
adc
or
sar
mov
retf
leave
jnp
mov
fstp
aaa
or
retf
(bad)
jno
nop
fnsave
lea
loope
sti
leave
mov
nop
cmps
mov
sub
stos
in
js
push
xchg
jne
cmp
mov
stos
daa
movs
scas
pop
jecxz
out
jge
lahf
mov
int
push
leave
pop
(bad)
pop
ja
cmps
(bad)
pop
mov
mov
jbe
aam
add
shl
frstor
popf
daa
aam
xor
push
jns
call
scas
sub
test
mov
jnp
mov
in
jle
jb
mov
jbe
retf
push
(bad)
sub
mov
fmul
or
jns
in
cmp
mov
ins
(bad)
xor
dec
or
stos
inc
pop
hlt
jmp
fild
push
mov
in
neg
push
dec
icebp
lock
push
push
icebp
xor
sub
popa
mov
int3
jmp
jo
pop
mov
or
int
sub
adc
dec
mov
jmp
jmp
or
enter
lods
cs
outs
adc
fisttp
repz
into
push
pop
cs
dec
jp
hlt
out
dec
(bad)
and
sahf
xchg
xchg
aas
cli
ret
mov
jbe
mov
adc
das
(bad)
xor
jmp
push
xchg
push
movs
xchg
jb
xor
sahf
je
in
cmp
jno
xchg
or
cmp
ins
xor
(bad)
xchg
and
fistp
sbb
push
add
mov
aam
fs
out
cmc
inc
jae
shr
dec
xor
psraw
pop
lock
call
gs
sub
inc
lea
daa
inc
jg
jo
call
jmp
nop
loopne
xchg
mov
repnz
dec
test
cld
mov
xchg
les
lods
repnz
std
mov
clc
mov
mov
lea
xchg
xchg
mov
int
sbb
or
dec
xor
push
push
out
test
add
mov
fist
aad
xor
mov
(bad)
outs
movs
xor
lahf
dec
jne
push
sar
mov
cmp
xor
call
sub
mov
(bad)
adc
dec
jmp
mov
mov
inc
mov
push
mov
scas
jne
leave
pop
fs
ins
sbb
into
sahf
push
cmps
pop
leave
int
add
je
(bad)
mov
add
push
rcl
hlt
dec
repz
or
das
mov
mov
(bad)
xor
aas
pop
mov
int3
rcl
out
fist
stos
or
shl
inc
test
ds
push
mov
ja
push
daa
mov
push
jo
daa
lods
fdiv
mov
ret
mov
loope
data16
push
add
jnp
das
(bad)
xor
jbe
out
jl
(bad)
mov
or
xchg
push
push
add
xor
pop
jb
outs
mov
ror
pop
or
xchg
sub
push
sub
cmp
adc
mov
push
mov
inc
jmp
sub
test
push
cmp
xor
pop
xchg
sbb
mov
jno
fstp
xor
xor
loope
popa
ficom
dec
pop
stos
inc
pop
pop
xchg
xchg
sbb
int
inc
loope
div
jmp
stc
add
call
pop
daa
pusha
pop
sbb
sbb
inc
mov
div
inc
popf
pop
fwait
mov
pop
pop
xchg
jo
dec
shr
dec
mov
jb
(bad)
cmp
clc
inc
mov
sub
scas
xor
xor
dec
inc
add
sti
ror
lahf
and
fsubr
inc
sbb
lods
jbe
or
xchg
mov
sub
adc
xchg
pop
dec
mov
data16
jb
loopne
sbb
movs
imul
jmp
ror
loop
movs
inc
push
inc
jg
push
je
scas
icebp
and
adc
or
ret
inc
add
jbe
fcomp
add
(bad)
js
cmp
mov
sahf
es
mov
lahf
sbb
push
add
and
addr16
xchg
popa
xchg
hlt
jnp
push
mov
(bad)
lods
pop
and
out
or
cmp
icebp
jno
cmc
scas
(bad)
sar
loope
adc
jae
test
call
bound
push
cwde
and
sbb
into
out
fs
addr16
popf
or
dec
inc
ins
xchg
and
dec
cs
lock
sbb
ins
sar
push
fmul
xchg
pop
std
aad
fstp
dec
aas
pop
pusha
adc
adc
mov
xor
and
jbe
push
lods
adc
jle
jle
das
jmp
ins
outs
stos
push
push
mov
xchg
pushf
push
sbb
vcvtsd2si
mov
test
xchg
cmp
std
cmp
(bad)
cmp
pushf
push
mov
mov
jp
push
push
cmps
sar
cwde
xchg
xchg
sbb
cmps
mov
or
ret
retf
push
pop
(bad)
cmp
lea
push
pop
fild
mov
jne
jo
fwait
(bad)
popf
stos
pop
loope
mov
rcl
mov
and
aaa
ins
inc
jmp
dec
(bad)
fst
mov
xor
clc
mov
adc
not
cdq
(bad)
mov
inc
loop
fnstcw
call
fnstsw
dec
je
pop
arpl
add
pop
push
mov
sar
bound
inc
icebp
shl
rcr
xor
js
pusha
push
or
dec
int3
(bad)
leave
jnp
outs
mov
das
pop
lea
jg
movs
(bad)
clc
jbe
lock
imul
and
inc
test
das
push
div
out
inc
je
cmp
std
mov
dec
(bad)
or
mov
xchg
mov
cmp
dec
pushf
in
xchg
fnstsw
mov
imul
outs
mov
or
repnz
out
dec
dec
inc
push
push
test
add
jb
xor
adc
into
fwait
hlt
sahf
inc
data16
mov
sti
cs
ds
(bad)
cmp
sbb
pop
daa
cli
or
cmp
les
mov
add
sub
sahf
adc
sub
repz
xor
(bad)
repz
idiv
mov
adc
fldenv
mov
jge
retf
sar
jmp
ds
sbb
fs
mov
jp
ror
mov
sbb
jne
jmp
mov
xor
jns
or
or
mov
cmp
jle
jnp
call
mov
or
fbstp
mov
xor
jns
call
mov
jge
or
mov
ficomp
xchg
adc
xor
out
dec
bound
in
cwde
stos
outs
cmps
inc
and
fistp
push
dec
fprem1
jb
(bad)
jl
push
push
add
mov
aam
aad
jp
enter
ins
push
not
ins
mov
lods
cmp
sub
outs
push
out
fisubr
in
pop
shl
adc
xor
outs
push
jmp
std
cwde
xchg
ins
rol
and
jl
in
add
out
xadd
xchg
fistp
add
call
and
mov
pop
stos
fistp
inc
jo
pop
or
xchg
mov
lds
mov
jmp
jae
xchg
cmp
pop
mov
call
inc
mov
mov
cmc
xor
mov
add
test
clc
push
push
mov
inc
push
pop
ins
std
cmp
and
scas
mov
jb
cmp
sbb
call
push
push
pop
arpl
inc
and
inc
add
and
jbe
fiadd
ja
and
pop
addr16
xchg
pop
out
xchg
pop
mov
mov
sub
test
in
xchg
ss
pop
sub
or
sbb
adc
imul
pop
sub
(bad)
(bad)
call
stos
in
dec
mov
sbb
xor
cmp
(bad)
retf
mov
add
fsub
push
inc
push
out
lods
mov
adc
xchg
mov
push
xchg
dec
in
mov
push
pushf
(bad)
mov
jns
mov
push
fwait
movs
cld
aam
dec
retf
lods
adc
push
jmp
sub
mov
push
pop
(bad)
mov
scas
(bad)
adc
je
ins
shr
loopne
fimul
pop
arpl
mov
rcr
jae
sbb
adc
pop
push
or
jae
ja
push
inc
xor
adc
(bad)
pop
adc
nop
repnz
or
sbb
or
or
inc
mov
sbb
(bad)
jne
arpl
dec
nop
adc
sbb
fbld
das
das
sti
fnsetpm(287
ror
nop
dec
or
dec
pop
shl
loopne
int
test
pusha
ret
dec
retf
inc
ficom
sub
or
xor
adc
add
add
fnstsw
xor
inc
adc
into
ja
sbb
not
retw
mov
push
add
das
jle
imul
jmp
mov
sub
imul
cmp
jecxz
mov
or
sub
mov
aam
or
xor
in
xchg
cli
cmp
jne
pop
and
jno
call
xchg
adc
icebp
jb
pop
test
push
aam
mov
jg
adc
shr
pop
popf
daa
cmp
out
dec
ss
fmul
mov
cld
cmp
pop
ja
sbb
and
jecxz
mov
mov
mov
inc
dec
cmp
jne
xchg
adc
push
jmp
je
jmp
out
xchg
stos
lahf
adc
inc
cmp
(bad)
cmp
mov
push
call
and
jecxz
add
or
mov
and
sub
adc
add
pop
mov
jo
out
mov
push
gs
mov
lds
xlat
ror
pop
lods
xchg
mov
pop
pop
sbb
iret
xor
or
pop
jmp
mov
test
xor
stos
adc
out
mov
aas
pop
sbb
jmp
aad
ds
jle
rcr
dec
mov
inc
or
sbb
pop
je
(bad)
cli
jl
xchg
shr
hlt
lds
xlat
rol
cmp
xchg
mov
xchg
lahf
xchg
scas
adc
data16
call
call
pop
aad
inc
pop
mov
inc
xor
clc
add
gs
or
or
cmc
or
pop
pop
sti
mov
pusha
add
mov
ror
adc
dec
(bad)
cmp
ret
and
or
fidivr
push
jecxz
add
adc
mov
xchg
push
int
add
repnz
rol
cmp
inc
dec
icebp
dec
repnz
cmps
pop
aad
mov
mov
fcmovnbe
xor
int3
js
and
sub
test
int
pushf
lea
sbb
lods
ds
mov
inc
dec
push
retf
sbb
stos
sbb
xchg
out
and
lea
je
inc
int
push
dec
dec
aad
out
push
sti
inc
dec
call
cmc
ds
push
dec
addr16
pop
cmp
call
sar
and
dec
hlt
push
and
mov
cmp
mov
das
cmp
xor
dec
mov
sub
jmp
add
inc
sub
retf
mov
xchg
cs
ds
and
fldcw
jg
ja
xor
or
xlat
xchg
mov
fnstsw
jbe
scas
das
int3
sub
fcomip
rcl
lods
add
ins
jbe
(bad)
dec
ret
ins
les
push
rcl
and
aam
mov
jnp
das
xor
dec
and
call
clc
mov
popa
mov
ror
dec
mov
jmp
adc
popa
clc
sbb
or
mov
lods
sbb
loope
mov
xchg
cdq
xchg
and
mov
xor
and
test
pusha
sub
je
test
call
(bad)
xchg
imul
jge
ror
mov
mov
jge
and
push
aad
arpl
add
jmp
into
leave
xor
lea
mov
and
outs
cwde
push
or
cmp
nop
pop
addr16
shl
jb
shl
leave
add
xor
or
and
pop
adc
sbb
scas
add
jecxz
in
inc
xor
mov
out
in
push
lock
cmps
outs
cli
mov
jge
adc
xchg
test
mov
dec
sahf
adc
shl
adc
clc
lods
and
adc
jb
retf
pop
push
mov
sub
dec
inc
cmp
arpl
dec
fild
clc
or
data16
aam
push
pop
fsubr
push
pusha
and
cli
sbb
xor
mov
cmc
xor
xchg
adc
int
sub
js
add
jmp
push
or
add
ins
add
jbe
mov
jg
push
cmp
sbb
and
jmp
inc
inc
xor
inc
dec
sbb
xrelease
sbb
sub
sub
stc
pop
je
sub
ins
push
neg
xchg
ja
inc
call
loop
cdq
xor
mov
out
or
push
outs
fisubr
pop
or
inc
loope
xchg
jno
xor
pusha
daa
rcl
ficom
iret
fcomp
fidiv
dec
rcl
outs
xchg
and
sbb
clc
out
adc
outs
jp
xchg
mov
xlat
rcl
mov
push
or
mov
cmp
retf
ss
repnz
(bad)
mov
jno
mov
leave
test
test
mov
ror
daa
leave
ret
push
ins
mov
fisttp
mov
xchg
lock
lahf
fmul
cmp
inc
xor
sbb
iret
sub
mov
pop
pop
pop
adc
mov
imul
movs
out
hlt
fnsetpm(287
mov
iret
sahf
push
in
mov
js
and
aaa
jecxz
add
pusha
leave
add
or
pusha
jno
adc
jb
in
push
jo
fwait
les
pop
adc
je
push
mov
sub
mov
mov
or
inc
or
sub
jl
cs
add
cmc
cdq
movs
retf
cmp
pusha
or
mov
js
cli
push
not
enter
movs
jmp
arpl
shl
das
ret
pop
jl
hlt
sbb
mov
aas
cmp
dec
mov
mov
mov
sbb
call
push
pop
push
das
int3
sbb
les
repz
cs
cmp
(bad)
pusha
xchg
and
dec
test
dec
xor
pop
fadd
dec
in
(bad)
push
je
xchg
xor
mov
adc
mov
jge
sub
inc
ror
push
rol
bound
daa
inc
push
adc
in
add
cmp
or
mov
imul
xor
scas
sub
sbb
xor
fist
test
pusha
imul
or
mov
gs
cli
rcl
pop
sbb
dec
mov
push
bound
cmp
mov
mov
add
data16
mov
push
hlt
lahf
popa
shl
aaa
in
xchg
adc
sub
lods
movs
pop
imul
int3
out
and
fs
pop
or
add
cmp
stos
xchg
jne
inc
mov
xor
push
cs
mov
(bad)
lods
mov
jmp
sbb
cmp
sbb
test
pop
movs
and
popa
mov
sar
movs
lods
and
mov
push
das
(bad)
dec
aaa
ss
test
sub
out
pop
and
jecxz
dec
adc
push
addr16
jmp
(bad)
shl
fist
pop
xor
sbb
rol
sti
inc
mov
pop
mov
mov
push
sub
int
repz
js
pop
pop
add
sub
xchg
mov
pop
js
push
add
add
int
sbb
mov
out
imul
out
push
bound
aam
lock
scas
(bad)
xor
ss
jmp
mov
lods
and
push
jns
mov
inc
sbb
pushf
retf
shl
retf
add
mov
mov
dec
jno
lock
adc
in
aaa
stos
fmul
cmps
imul
repnz
jnp
das
pop
cwde
jmp
adc
xor
jmp
addr16
in
jle
cmps
outs
dec
add
push
arpl
sub
push
pop
cdq
jmp
(bad)
mov
lods
push
dec
(bad)
push
sub
cmps
das
xchg
into
hlt
push
out
mov
add
and
std
lea
add
xchg
add
call
fwait
dec
ds
sbb
cmp
xor
push
xchg
es
or
jno
sbb
and
or
lock
sbb
sti
mov
stc
pop
xor
cmp
jg
mov
cmp
jge
xchg
push
lods
aad
rcr
and
and
inc
sub
adc
inc
inc
xor
mov
xlat
cmps
xchg
cmps
aaa
push
in
cmp
or
pop
add
shr
inc
adc
mov
lahf
mov
cmp
mov
sar
push
aas
mov
call
mov
div
out
add
and
lods
(bad)
pop
iret
les
xor
repnz
jnp
inc
gs
js
xchg
dec
sahf
mov
and
mov
pop
xor
cmp
jnp
popa
fidivr
dec
loopne
add
daa
jbe
cmps
ss
push
xchg
out
mov
jne
arpl
xor
out
add
cmps
retf
and
(bad)
dec
xor
fisttp
call
mov
xor
sbb
mov
xlat
xchg
xchg
inc
xor
sbb
fisttp
in
jnp
scas
xor
outs
mov
jb
push
shl
xor
dec
les
movs
xor
(bad)
fsubr
inc
pop
lock
pop
iret
call
cmps
push
adc
xor
mov
lock
mov
loopne
and
ror
je
mov
dec
in
data16
test
retf
imul
clc
int
mov
in
dec
icebp
in
ret
inc
push
sub
push
sti
fldenv
shl
mov
pop
sti
test
fs
jmp
mov
sbb
pop
or
cmp
sti
mov
mov
sub
sub
lods
or
(bad)
das
je
(bad)
push
jmp
sub
repz
jns
sub
xchg
cdq
test
out
pop
mov
lods
jmp
and
test
xchg
push
jle
push
fcomp
sbb
aaa
lods
pop
push
jo
xchg
cmp
and
je
je
(bad)
cmp
mov
hlt
sbb
mov
lea
mov
retf
mov
xchg
popa
movs
add
(bad)
xchg
dec
sbb
cmp
stos
nop
in
xor
shr
or
fcomp
mov
in
add
mov
sbb
das
dec
xchg
and
push
pop
jne
jne
mov
popa
jbe
js
cmp
jne
adc
mov
mov
xchg
test
imul
and
in
inc
or
jmp
sub
xor
retf
arpl
add
cmps
add
inc
mov
mov
gs
mov
cwde
xchg
xchg
xor
pop
pop
cmc
je
sar
pop
push
es
call
dec
xchg
pop
sbb
jb
je
je
inc
adc
bound
and
mov
out
mov
rcl
jmp
mov
pop
pop
xchg
mov
pop
adc
inc
repz
xchg
or
scas
add
xchg
mov
xor
loopne
fisubr
js
jge
stos
mov
stos
or
mov
add
dec
jp
xlat
cmp
repnz
cmp
push
or
pushf
sub
sbb
repnz
push
push
add
dec
out
add
and
movs
xor
(bad)
jnp
mov
mov
es
pop
les
cmps
fs
imul
dec
je
fisub
mov
ficomp
test
out
sub
push
cmp
or
dec
call
pop
inc
adc
(bad)
scas
addr16
cwde
xchg
add
and
aam
push
shld
fs
mov
xlat
or
jb
jp
and
mov
jae
xlat
mov
fbstp
push
add
push
jle
scas
scas
test
xchg
icebp
out
inc
mov
cmp
out
out
(bad)
cdq
sub
clc
mov
pop
mov
jp
xchg
sbb
adc
adc
data16
rcr
dec
mov
(bad)
outs
cs
push
push
pop
std
fxch
sbb
pop
xchg
or
add
push
jp
xchg
sti
stc
cdq
inc
test
outs
pusha
rcr
xor
stos
out
aaa
stc
xchg
ins
fsub
ss
arpl
mov
cmp
ret
sbb
sub
adc
fldcw
pusha
sbb
clc
(bad)
out
or
rol
lea
movs
pop
push
push
imul
pop
jmp
aaa
cs
lods
loope
shl
dec
push
addr16
mov
cli
mov
mov
enter
scas
jmp
push
je
jp
sub
inc
xchg
cmp
xor
lahf
movs
fimul
cwde
loopne
jmp
jmp
adc
mov
fisttp
pop
xor
aaa
sbb
jmp
ds
aas
(bad)
add
hlt
outs
test
out
mov
sub
push
sbb
add
test
popf
xchg
cmps
jae
or
inc
sti
ret
inc
inc
push
ja
retf
add
mov
sub
pop
xlat
(bad)
fimul
in
mov
pop
xchg
int
xchg
cmp
mov
data16
mov
and
iret
push
sahf
mov
xor
out
je
mov
or
es
push
ret
mov
and
cmp
pop
jns
inc
mov
inc
jb
mov
cld
mov
adc
das
bound
cli
in
sub
sbb
sub
loopne
outs
jmp
inc
(bad)
repz
mov
push
jbe
sub
push
and
retf
rcr
imul
xor
mov
xor
cmp
cmp
mov
dec
cmp
fcom
and
movs
sbb
(bad)
sbb
add
shl
jl
push
mov
fld
and
movs
push
outs
mov
scas
jmp
mov
adc
adc
or
pop
movsx
inc
xchg
sbb
cmps
push
jecxz
pop
dec
stos
pop
jmp
jo
cmc
rcr
sub
call
lods
fld
outs
daa
rcr
dec
lods
mov
pop
mov
inc
and
xchg
xor
pop
xchg
sti
jp
push
call
shr
or
cld
pop
rol
fiadd
fsubr
sub
xor
jmp
ins
push
loopne
adc
sub
mov
mov
jg
push
and
and
retf
adc
fisubr
mov
or
cmp
adc
movs
cmp
daa
aam
push
out
scas
daa
cmps
push
nop
ret
out
loope
popa
add
pop
sbb
inc
bound
xchg
loopne
lds
and
pop
repz
cwde
sar
mov
test
hlt
jbe
dec
mov
push
sbb
dec
jmp
pop
nop
loope
mov
popf
xchg
add
mov
cld
jmp
add
rcl
mov
pusha
fcomp
test
push
loope
xchg
int
sahf
pop
aad
jb
xchg
add
movs
shl
icebp
jg
or
jne
mov
daa
xor
push
popf
ss
in
mov
push
mov
mov
out
mov
in
mov
xchg
icebp
xchg
ins
inc
or
adc
dec
xchg
cmp
mov
repz
aad
test
mov
popa
and
and
ret
pop
imul
test
data16
mov
scas
xchg
std
dec
adc
mov
test
imul
rcr
dec
cs
push
js
dec
or
in
sbb
retf
not
in
out
fisttp
lahf
(bad)
adc
mov
and
jmp
call
fsubr
stc
cwde
outs
mov
sahf
dec
neg
mov
cld
jb
mov
test
mov
pop
push
mov
add
sbb
out
or
in
xchg
ins
dec
fstp
or
imul
and
call
ja
mov
mov
loope
outs
scas
push
out
mov
cmc
cmp
or
cmp
push
jmp
mov
scas
pop
nop
aas
lods
inc
xchg
out
jmp
sahf
(bad)
ins
out
imul
push
sub
idiv
add
add
pop
jmp
(bad)
xor
xor
test
mov
xchg
inc
cmc
scas
adc
mov
cs
sbb
or
push
xor
lahf
mov
mov
mov
adc
ja
or
mov
addr16
jb
aad
pop
mov
in
loopne
sub
es
adc
jnp
xchg
dec
in
xor
sub
cmp
xor
xor
lock
sub
pop
mov
gs
sub
or
shl
mov
mov
mov
in
xor
shl
shl
leave
push
push
xchg
or
fstp
and
call
mov
jmp
or
adc
mov
xchg
cli
adc
idiv
data16
test
in
jnp
fmul
adc
ja
gs
mov
clc
test
inc
lds
test
mov
rcl
cmp
and
movs
cmps
cdq
xchg
movs
(bad)
sar
inc
retf
cmps
xchg
dec
pmuludq
mov
mov
push
shl
gs
dec
aaa
test
and
push
fnstcw
pusha
ins
sahf
into
ret
jp
dec
fimul
sbb
xor
mov
shl
into
mov
jle
cmp
jbe
outs
repz
pop
pop
jb
enter
inc
push
aam
dec
enter
adc
fild
nop
retf
add
imul
mov
lds
dec
mov
les
into
and
aas
js
xor
or
(bad)
mov
inc
adc
mov
add
movs
mov
cs
jb
dec
aam
scas
sub
sub
loope
pushf
mov
mov
mov
pop
xchg
mov
aam
loopne
lahf
cld
test
jp
mov
mov
adc
in
sahf
ins
popf
mov
fiadd
sub
inc
xchg
jo
enter
sub
or
push
xchg
adc
imul
dec
lods
mov
neg
enter
neg
sti
mov
inc
test
scas
mov
sbb
in
fbld
adc
call
xchg
and
dec
adc
add
out
sbb
retf
shl
and
push
mov
cmp
jb
jge
adc
aas
push
rol
mov
dec
loop
xor
test
inc
and
inc
mov
scas
imul
add
clc
cs
int
dec
sub
mov
scas
dec
addr16
adc
inc
out
iret
jb
pop
test
lock
jl
aas
mov
(bad)
shr
out
ja
sar
pop
fist
aas
(bad)
jmp
xchg
loop
cmp
cdq
dec
inc
xchg
hlt
xchg
loopne
js
out
jno
lahf
in
adc
dec
adc
into
jne
sbb
ror
jl
fisubr
imul
xchg
and
in
call
xchg
cwde
ret
sti
js
add
mov
xchg
rcl
rcl
and
cmp
outs
ds
idiv
pop
ds
stos
and
and
je
cmp
inc
aaa
inc
inc
jns
and
lock
add
shl
pop
fiadd
shr
fsin
bound
sub
inc
pop
and
cmp
push
mov
pop
xchg
push
sbb
imul
xchg
sub
repnz
cli
mov
arpl
mov
nop
or
add
sbb
fnsave
mov
and
lahf
jnp
rcl
push
pushf
mov
shl
inc
xchg
cmps
sub
jmp
jns
cmc
add
and
ins
and
iret
arpl
dec
in
sub
js
es
call
and
lea
mov
xlat
retf
outs
dec
in
cmp
call
sub
xchg
mov
mov
pushf
pop
and
or
push
into
aaa
dec
daa
jo
fisttp
pusha
xor
jnp
pop
add
dec
(bad)
fdivr
(bad)
xlat
xchg
jmp
sub
and
cmps
xchg
aas
mov
cmp
push
shl
bound
add
dec
fsub
jae
test
mov
xchg
mov
xchg
fst
ds
sub
add
daa
dec
adc
not
(bad)
retf
popa
shl
sub
shl
push
sub
xchg
pop
cdq
ins
xchg
dec
fwait
(bad)
and
es
mov
(bad)
(bad)
and
adc
and
pop
movs
xor
pop
and
push
cdq
in
rol
rol
sbb
push
sub
dec
lea
sub
icebp
out
aaa
mov
sbb
push
addr16
pop
js
push
lea
lahf
pop
sbb
mov
jns
mov
sbb
xor
cmp
data16
and
aaa
retf
sub
pop
test
jle
aas
in
mov
xor
bndldx
xchg
xor
out
inc
push
dec
das
jo
jmp
icebp
cdq
lods
jae
aas
cli
mov
and
aas
in
scas
out
add
and
nop
cli
mov
aad
or
psrad
adc
pop
or
dec
fldenv
std
push
sbb
jns
fwait
out
dec
pusha
(bad)
mov
addr16
addr16
and
das
lods
loopne
push
cld
inc
in
adc
xchg
pusha
xchg
mov
scas
arpl
test
jl
push
movs
mov
fmul
pop
ins
fcmove
mov
fwait
mov
or
popa
test
inc
(bad)
cmp
sbb
sub
mov
inc
push
scas
jne
mov
jmp
popa
aaa
sbb
inc
lock
sbb
cwde
mov
fcmovne
ds
in
retf
mov
popf
scas
cmp
adc
cld
shl
mov
jge
jno
outs
pushf
adc
ins
test
idiv
pop
inc
and
sub
stos
sbb
or
add
inc
loope
sahf
sub
stc
dec
iret
cdq
and
pop
cdq
jmp
sub
das
or
mov
sti
stc
mov
jg
jecxz
adc
push
pushf
dec
push
add
and
mov
movs
out
ins
jle
add
xor
pop
and
pop
jne
or
lods
les
jo
aas
test
adc
dec
pop
loope
frstor
shrd
lods
jge
xchg
mov
sub
push
mov
out
gs
cmp
or
(bad)
fmul
inc
enter
jl
aas
stos
jns
mov
into
(bad)
sti
out
add
xchg
leave
pop
add
xchg
stos
adc
jp
into
out
mov
arpl
pop
cmc
dec
test
push
push
(bad)
scas
stc
adc
add
pop
aas
fwait
or
inc
mov
fsubr
fdivr
sub
mov
inc
mov
push
adc
sub
hlt
sub
sbb
sbb
xor
add
sub
mov
retf
in
fcmovnb
mov
(bad)
mov
dec
outs
div
mov
jo
iret
ror
cmps
aam
or
jb
(bad)
call
mov
sub
dec
cmp
push
into
pop
and
xchg
repz
push
jecxz
ds
pop
(bad)
or
or
out
jbe
push
in
shl
xchg
inc
iret
(bad)
sub
and
aas
out
pop
cli
or
push
push
bound
adc
sbb
jg
call
call
jno
outs
sub
pop
pop
lock
mul
jg
jmp
and
xchg
lods
xor
push
inc
mov
loopne
xlat
repnz
mov
mov
inc
cmp
cmps
aad
pop
inc
mov
xchg
sub
or
retf
scas
inc
mov
pop
add
inc
lds
test
loope
inc
jne
inc
or
xor
rcr
sbb
push
or
xchg
lahf
(bad)
push
dec
iret
nop
adc
sbb
dec
pop
jmp
add
jg
push
or
mov
test
sbb
jle
rcl
cmp
loopne
dec
pop
inc
ja
cmc
push
add
mov
inc
add
jmp
add
mov
mov
adc
jle
scas
mov
mov
adc
mov
jg
(bad)
mov
mov
movs
jbe
push
xor
cmp
repnz
jb
xor
jecxz
inc
xor
push
or
test
xor
mov
xchg
stos
mov
pop
dec
mov
ins
out
sbb
ret
bound
scas
sub
fs
in
jmp
xor
aas
dec
cmp
aad
lods
push
dec
pop
int3
ins
fistp
push
movs
in
mov
imul
enter
jp
jns
mov
loop
cld
inc
out
and
add
sbb
xchg
lea
push
adc
popa
cmp
xchg
hlt
inc
push
or
imul
ss
sbb
jge
rcl
mov
adc
stc
xchg
ins
jmp
add
int
call
je
test
jo
mov
in
or
and
jp
push
or
ss
sub
fild
push
mov
popf
push
int
stc
fstp
popf
bound
les
mov
test
loope
hlt
xchg
or
hlt
sti
cwde
push
and
enter
popf
and
jno
(bad)
mov
cli
cmp
pop
pop
pop
xchg
mov
repnz
cmp
inc
(bad)
clc
loope
mov
mov
mov
adc
shl
pop
push
pcmpgtw
(bad)
aam
cli
xchg
es
neg
mov
add
xor
daa
jmp
cmps
and
imul
mov
sbb
or
add
popa
mov
gs
and
and
cmp
jmp
push
xchg
in
xor
neg
pop
ja
dec
call
pop
leave
pusha
sub
sub
rcr
lahf
and
or
pop
push
aaa
cdq
jge
repnz
arpl
jbe
xchg
mov
dec
push
dec
aad
mov
lea
adc
inc
pop
mov
pop
jg
daa
mov
xor
xchg
fsub
aas
(bad)
ins
aad
or
mov
in
(bad)
sahf
mov
std
dec
out
push
arpl
jp
adc
fnstenv
cmp
jg
mov
inc
les
fnsave
and
mov
stos
icebp
lods
(bad)
mov
inc
jo
and
fsubr
mov
loopne
and
push
int3
leave
dec
loop
xchg
or
xchg
xor
jns
cmps
mov
inc
pop
dec
and
or
xor
test
add
mov
or
or
std
sbb
adc
mov
sub
dec
or
sbb
mov
xchg
fild
fwait
mov
mov
push
push
pop
or
hlt
mov
sbb
fnsave
xchg
ja
xchg
add
div
pop
stos
cs
mov
popa
cmp
les
movs
or
je
aam
sbb
jecxz
sub
xchg
push
out
fmul
cmp
add
ret
mov
ins
mov
and
sub
dec
test
rcr
repnz
psrlw
movs
icebp
fdiv
cmc
dec
push
add
(bad)
jl
shl
mov
sub
in
pop
fwait
aad
pop
inc
xor
je
fsubrp
mov
in
lock
dec
into
popf
clc
lods
adc
push
sbb
inc
cli
xor
push
inc
stos
jle
sbb
call
aas
jmp
pop
(bad)
xor
xchg
dec
shr
aaa
push
pop
xor
inc
pop
and
loop
in
cli
jmp
test
inc
and
outs
mov
out
and
mov
xor
xchg
ins
and
icebp
and
inc
fwait
bound
sahf
xlat
push
sub
into
or
add
outs
xor
inc
inc
jb
fcomip
pop
mov
inc
cwde
pop
xor
xchg
dec
pushf
pop
cmp
retf
xor
fs
push
sti
add
sub
push
mov
out
data16
jl
ins
je
pusha
xor
bound
lods
dec
mov
jle
gs
sbb
pop
sar
dec
pop
mov
xchg
rcl
fwait
inc
loop
sub
lods
paddd
test
popf
and
std
mov
iret
dec
movs
cmp
push
mov
mov
push
and
push
jl
mov
sbb
dec
ret
scas
dec
pop
scas
daa
push
pop
in
and
sbb
jno
std
loope
mov
int
fisubr
scas
int
mov
and
stos
int
sub
cli
fnstenv
out
xchg
sub
add
(bad)
loop
and
scas
mov
or
inc
sbb
retf
and
arpl
jle
mov
data16
fbstp
test
mov
lahf
jb
test
xor
movs
test
fsubr
inc
in
xlat
dec
jno
shl
inc
jne
test
fstp
repz
push
out
test
or
push
stos
ret
pop
inc
pop
movs
dec
pusha
not
fstp
add
jne
out
mov
div
sub
push
clc
mov
sbb
loop
inc
pop
mov
mov
xor
dec
push
imul
test
sar
dec
rol
jecxz
jo
xor
mov
xchg
sahf
mov
es
jg
int3
out
cmps
cmp
or
xchg
psraw
hlt
and
xor
mov
pop
mov
(bad)
jg
in
adc
repnz
cmp
mov
mov
ins
outs
pusha
int3
mov
stc
femms
and
pop
call
lds
pop
cwde
cmp
dec
push
xor
pop
jno
jae
fisub
jb
popa
xchg
dec
push
ret
pop
add
loop
rcr
mov
(bad)
retf
test
hlt
pop
sub
cmp
je
pop
cdq
fnstcw
dec
cmc
xchg
cmp
sbb
icebp
out
into
xchg
lods
fcomp
stos
sbb
pushf
leave
and
test
(bad)
mov
jmp
shl
mov
(bad)
shr
clc
inc
jge
push
sbb
mov
or
out
js
fcom
dec
sahf
fstp
aas
mov
pop
xor
add
ret
aam
pop
out
inc
outs
clc
lods
dec
sub
fidivr
inc
ins
pop
loop
dec
fwait
inc
xchg
and
shl
mov
cmp
lds
shl
test
addr16
pop
sub
sub
sahf
pop
mov
aad
inc
repnz
fs
xchg
xor
jae
push
mov
(bad)
sbb
in
dec
lds
sbb
popf
sbb
jmp
mov
push
imul
jmp
lock
popa
pushf
sbb
ins
es
pop
pop
cs
imul
mov
pushf
inc
pop
jmp
adc
sub
dec
pop
cmp
loopne
dec
cmps
jmp
xchg
cmp
cld
jmp
imul
ds
dec
and
lods
mov
xchg
nop
jge
scas
cmps
pop
push
daa
fxch
stos
and
out
mov
test
sbb
sub
in
inc
inc
ds
push
les
retf
push
pop
sbb
mov
jne
add
mov
(bad)
into
loopne
xor
jne
or
test
cmc
scas
aad
loope
call
fld
jno
ds
jne
add
jnp
ins
cdq
inc
bound
cmp
inc
test
and
jns
ror
dec
pushf
loop
pop
pop
movs
push
and
nop
dec
jmp
mov
ins
scas
sahf
ffree
scas
mov
lods
in
rcl
mov
outs
ds
out
bound
push
dec
cmp
cmps
int3
jmp
das
pusha
xchg
popf
ror
cmp
cmp
lods
ja
pop
mov
and
stos
ret
inc
fdiv
clc
add
dec
retf
jecxz
(bad)
(bad)
dec
cmps
sub
sbb
jb
clc
nop
sub
dec
jno
jns
jae
or
jbe
lods
add
loopne
sbb
sbb
mov
in
push
cmp
sbb
and
mov
and
inc
xchg
mov
jge
jbe
xchg
pop
xchg
retf
sub
jg
in
ret
inc
xchg
outs
cmp
cmp
mov
dec
das
lods
cmp
lods
adc
das
inc
cmp
mov
fmul
jae
add
imul
dec
sub
push
adc
cmps
repz
mov
cdq
push
neg
std
push
js
dec
ja
jmp
jle
mov
jo
loop
xor
les
cmp
jae
mov
xchg
stos
mov
sti
call
mov
out
add
sahf
pop
ss
mov
mov
mov
sub
aas
rcl
jb
jge
mov
pop
jbe
add
pop
add
sbb
mov
in
(bad)
(bad)
jne
ins
aam
rol
adc
retf
es
jecxz
dec
shl
and
push
xor
pop
stos
bound
mov
inc
aad
(bad)
adc
sbb
call
test
cmp
aad
jb
shl
push
ds
cmps
dec
xor
ds
jp
mov
in
dec
jo
sbb
mov
pushf
mov
(bad)
xor
mov
sub
(bad)
mov
or
sbb
out
and
pop
adc
xchg
cmps
xchg
dec
and
jle
ret
mov
adc
fild
mov
pop
add
pop
je
sub
outs
pop
sbb
aad
adc
test
ret
push
dec
cwde
dec
cmp
cmp
jae
shl
pusha
jecxz
pop
push
dec
(bad)
pop
sbb
xor
fiadd
dec
(bad)
aad
sub
push
adc
inc
mov
adc
sub
jle
hlt
icebp
sbb
jbe
inc
fwait
xchg
mov
xlat
pop
ins
(bad)
mov
test
push
mov
mov
jbe
ret
pop
fs
test
pop
sar
aad
dec
push
push
retf
lods
cvtps2pd
inc
dec
mov
out
addr16
xor
adc
jnp
outs
jnp
pop
push
int3
lods
ret
(bad)
adc
push
or
ja
fsqrt
(bad)
popa
dec
out
mov
mov
pop
fist
push
sub
push
mov
jb
or
ss
out
inc
mov
nop
outs
add
sbb
inc
movs
and
aad
jo
pop
icebp
cmp
or
inc
xchg
xor
xchg
inc
clc
cmp
mov
pop
leave
mov
in
cmps
outs
(bad)
pop
xor
not
pop
das
jmp
pusha
mov
mov
loop
les
inc
pusha
jo
lahf
dec
clc
je
fadd
test
xchg
lds
dec
scas
cmc
xchg
cmps
xor
adc
shr
jno
(bad)
or
outs
dec
jmp
jae
test
rol
int
lock
mov
cdq
mov
mov
xor
jns
add
jae
aaa
jae
imul
dec
mov
xchg
retf
mov
adc
jmp
mov
or
repz
or
inc
adc
push
mov
mov
nop
je
mov
es
je
mov
mov
pop
jl
cmps
icebp
mov
adc
or
(bad)
lods
daa
mov
(bad)
stos
xchg
test
cmp
or
stos
dec
cdq
rcl
call
dec
rol
push
cwde
sti
inc
or
cmp
popa
xchg
loop
cmps
imul
in
(bad)
add
aad
and
rol
xlat
pushf
mov
adc
or
shl
pop
(bad)
stos
repnz
pop
jp
pop
cld
mov
lea
std
popf
in
ret
movs
in
adc
jmp
or
fs
and
sbb
int3
mov
fimul
jns
sub
and
inc
jne
cld
jg
push
cmps
adc
adc
leave
jp
jle
dec
adc
pop
icebp
into
or
dec
std
jmp
int
lahf
jge
stos
shl
shl
ss
and
add
xor
test
xchg
pop
ret
cmps
inc
(bad)
out
nop
lods
mov
adc
fcomp
sub
jmp
(bad)
arpl
xchg
or
retf
jl
ins
ja
lea
or
pop
dec
jecxz
ret
dec
aas
test
jmp
xor
jmp
xchg
or
and
mov
push
xor
pop
fild
ret
popa
cmp
mov
xor
scas
nop
daa
bound
inc
(bad)
stos
cmp
jo
ins
xchg
(bad)
in
inc
loopne
pop
call
loopne
or
call
or
(bad)
mul
repz
jnp
bswap
in
test
sub
dec
aas
nop
and
pop
mov
jl
das
retf
jl
call
cmp
daa
out
cmc
push
inc
xchg
lds
dec
cmps
inc
lods
push
lahf
dec
in
dec
mov
sub
jle
int
inc
mov
sar
jp
xor
pop
mov
and
shr
std
loopne
xor
pop
add
jg
mov
out
cli
or
mov
lods
aaa
add
rol
movs
pop
mov
pusha
inc
fstp
lds
in
stos
add
mov
mov
out
ds
push
xchg
idiv
(bad)
mov
shl
add
fsub
in
aam
aas
mov
pop
jle
test
push
jp
xor
es
jne
xchg
jb
mov
stc
or
scas
fistp
adc
jne
mov
scas
orps
ss
xchg
int3
test
stos
mov
push
lods
xlat
scas
cmp
add
mov
scas
sub
mov
add
or
mov
test
add
outs
dec
jg
icebp
and
scas
out
inc
shl
mov
lock
fcomip
or
adc
inc
adc
cli
xor
sbb
mov
sub
shl
out
sub
arpl
popf
cmps
mov
loop
scas
repnz
and
movs
out
jecxz
lods
test
cmp
aas
pop
mov
mov
push
add
iret
xor
loope
cmp
mov
xchg
retf
sbb
sbb
repz
pusha
ss
and
movs
sar
sub
adc
push
inc
sbb
in
scas
(bad)
repz
xlat
or
fbld
mov
dec
pop
push
mov
loope
je
test
push
inc
cmp
test
or
or
add
jae
and
cdq
into
movs
mov
(bad)
icebp
pop
xchg
xor
mov
and
int3
cmps
xor
ins
inc
dec
adc
lods
adc
sub
jbe
cdq
outs
aam
sub
mov
repnz
not
push
jmp
es
jno
das
jg
int3
sub
mov
xor
int3
popa
inc
adc
cmc
popa
rcl
or
pop
cmp
shl
or
popf
js
je
pop
mov
push
imul
sbb
ret
loop
loope
xor
out
popa
pop
jo
(bad)
cmps
daa
gs
rol
stc
clc
cmp
adc
cwde
cmp
xchg
in
clc
or
nop
adc
cmps
shl
jne
test
scas
das
popf
jno
jecxz
clc
icebp
sbb
xor
and
or
(bad)
jle
adc
xchg
cmp
arpl
xchg
fmul
fcmovnb
xor
and
cdq
adc
jno
pushf
sub
push
pop
lods
adc
sbb
push
sar
push
cmps
cmps
pop
add
inc
xor
cmp
push
loope
inc
je
mov
lods
mov
add
pop
xor
and
mov
aam
xor
jae
ins
les
ja
jae
adc
pop
pop
mov
push
jp
sub
in
outs
lds
pop
lds
push
sub
das
std
bound
nop
sbb
aas
(bad)
jnp
cs
leave
and
fdiv
fld
jb
outs
(bad)
imul
sbb
rcl
xchg
fisubr
cmps
push
push
mov
mov
test
aam
cli
loopne
inc
out
popa
clc
mov
loop
repz
mov
mov
pop
(bad)
add
xor
xchg
repnz
jo
push
jle
fs
repnz
fwait
es
xchg
les
mov
push
das
xchg
mov
adc
(bad)
enter
call
mov
and
mov
mov
fimul
adc
dec
cmp
scas
ret
pusha
test
dec
movs
mov
xchg
sub
push
loop
or
inc
inc
out
inc
sub
pop
mov
jecxz
sbb
into
leave
sbb
jmp
push
pusha
xor
jmp
repz
(bad)
sar
retf
sub
aaa
or
outs
jecxz
mov
shr
sbb
xchg
dec
push
push
inc
cld
movs
mov
adc
push
mov
jmp
jno
adc
and
and
and
adc
or
loopne
jge
pop
movs
fdivr
jnp
and
jnp
es
jbe
dec
mov
bound
cs
push
ret
fwait
dec
dec
pop
dec
xor
mov
(bad)
les
dec
jp
sbb
adc
popf
lods
in
mov
in
imul
(bad)
stos
and
mov
jb
mov
pop
dec
retf
adc
fld
je
sbb
push
mov
mov
xchg
ins
cmp
retf
add
dec
jmp
sbb
retf
fucomip
ror
sbb
aam
pop
pop
dec
push
sub
pop
add
rcl
ret
or
loopne
pop
ret
pushf
arpl
or
sub
mov
call
in
leave
pushf
jae
pop
pop
neg
movs
mov
out
loope
jecxz
cld
inc
dec
addr16
fwait
stos
repz
repz
mov
inc
add
test
stos
fisttp
and
mov
dec
push
pinsrw
xchg
lods
dec
pcmpgtw
gs
movs
addr16
std
push
push
add
pop
or
push
push
push
ror
ret
(bad)
aaa
(bad)
arpl
cli
repnz
adc
inc
lock
rcr
in
xchg
clc
stos
adc
in
fwait
xor
mov
cwde
push
jp
(bad)
sar
jl
sub
mov
pop
jle
not
jp
fimul
mov
cs
mov
xchg
int3
push
xlat
or
and
mov
ret
mov
jnp
mov
(bad)
fadd
jle
dec
retf
mov
test
cmp
div
nop
xchg
mov
xchg
sbb
aaa
mov
loop
dec
popa
xchg
rcr
ret
sub
fisubr
ret
lahf
dec
dec
dec
jnp
call
out
mov
sub
mov
outs
cdq
dec
iret
ret
sub
mov
rcl
cmp
icebp
dec
add
shl
xor
call
inc
fsub
sti
test
cs
(bad)
cmp
idiv
cmp
pushf
sbb
adc
int
push
mov
push
mov
stc
dec
sbb
fstp
sahf
test
xchg
in
call
repnz
add
clc
add
jp
xor
xlat
clc
cmp
xor
pop
scas
sbb
aas
outs
mov
xor
dec
adc
and
shr
mov
adc
js
(bad)
cwde
push
mov
mov
fdiv
pop
sbb
int
and
rol
pushf
imul
inc
sar
test
nop
mov
outs
xlat
xchg
pop
jecxz
cmp
jb
adc
bswap
mov
int3
icebp
pop
cmp
test
xlat
dec
jmp
mov
fstp
fyl2x
fwait
sbb
dec
mov
sbb
adc
mov
repz
icebp
sbb
repz
bound
or
xchg
cmc
mov
cli
jae
out
jmp
fisub
cmps
stc
inc
and
fldenv
ja
neg
and
es
mov
xchg
fidivr
push
arpl
add
mov
hlt
dec
adc
add
cwde
imul
or
dec
fisubr
push
inc
aas
or
mov
rcr
loope
or
adc
inc
outs
mul
in
out
mov
bound
ja
inc
fiadd
les
pusha
xchg
mov
das
sbb
aad
vmptrst
into
or
and
and
int
and
mov
and
mov
popf
inc
mov
std
popf
in
sbb
or
call
cmc
jle
cld
in
pop
inc
mov
xor
pop
pop
push
ss
pop
and
mov
fisttp
out
cli
in
jecxz
popf
inc
pop
in
adc
cmp
pop
mov
mov
mov
mov
adc
enter
pop
out
idiv
sbb
jno
das
cmp
je
xor
je
cmp
cmp
dec
or
js
ds
jmp
cmp
mov
sti
int
push
cmp
push
aas
imul
pop
adc
inc
push
push
adc
in
sbb
aam
jb
cmp
inc
je
popf
sub
mov
shl
xor
xchg
stc
dec
add
stos
adc
cmp
nop
adc
pop
(bad)
mov
add
xor
xchg
test
mov
icebp
lods
or
nop
nop
scas
push
retf
or
mov
cmp
jp
mov
shl
rol
inc
push
or
repz
fld
out
mov
pop
cmp
data16
cmp
out
movs
dec
lea
stos
xor
jae
inc
add
xchg
push
sbb
lods
sub
push
cld
cmp
push
add
mov
and
daa
lods
ret
xor
rol
push
jg
xor
xor
pop
push
mov
rdmsr
cmp
push
mov
les
adc
jns
cli
add
pop
pop
or
jo
cmp
or
mov
inc
xor
mov
nop
push
(bad)
js
sub
lea
in
sbb
push
cmp
jns
adc
aam
jl
aaa
sub
adc
xchg
xor
mov
push
arpl
xor
mov
mov
jle
movs
xchg
loopne
pop
mov
jns
mov
pop
pusha
es
xor
fiadd
jne
dec
jge
pop
cmp
loopne
xor
jmp
adc
ret
or
dec
fmul
sti
jecxz
pop
push
jmp
adc
jo
into
in
jb
out
xchg
dec
retf
dec
inc
int
fild
imul
pop
push
add
add
data16
inc
pop
xchg
add
les
add
or
lock
ror
jg
cmp
jns
jne
adc
pop
mov
jnp
pop
mov
cs
jo
outs
cmp
ins
inc
addr16
(bad)
cli
push
nop
hlt
mov
neg
into
cmp
xor
ret
cwde
movs
sar
mov
popf
cs
mov
mov
cmps
xchg
aad
icebp
fidiv
fsubr
mov
imul
out
(bad)
pop
pop
mov
add
and
addr16
inc
jmp
imul
std
aaa
das
repnz
or
ret
in
lods
cmp
mov
fstp
dec
mov
dec
cmp
outs
inc
push
shl
ds
dec
movs
fistp
movs
(bad)
jb
(bad)
mov
and
call
add
mul
sbb
loop
retf
mov
add
imul
fcmovnbe
ror
sub
adc
in
pop
repnz
dec
outs
push
pop
sbb
ficomp
stos
dec
pop
mov
cmp
xor
mov
into
ja
fistp
or
movs
mov
cmps
xlat
adc
sti
mov
jmp
pop
inc
sbb
fld
test
je
call
dec
xor
in
cmp
int3
mov
sbb
and
enter
inc
icebp
push
mov
es
xor
xlat
sahf
(bad)
hlt
jb
and
sbb
cld
inc
test
imul
in
out
movs
xchg
jg
mov
jno
cs
mov
imul
ja
pop
mov
mov
xchg
jle
movs
lahf
inc
adc
mov
lahf
pop
retf
stos
push
jns
int
les
dec
dec
and
sahf
ror
push
cmp
movs
jle
aaa
mov
das
jns
(bad)
add
neg
ss
pusha
test
nop
iret
retf
test
(bad)
jmp
cmps
fsub
xlat
inc
cmp
xor
or
(bad)
jecxz
push
mov
adc
ret
cli
rep
push
xor
out
sub
ja
jmp
popa
repnz
daa
dec
inc
jecxz
xchg
add
fild
test
addr16
mov
or
cmc
dec
xchg
dec
xchg
pop
popf
jmp
xor
push
retf
mov
push
test
outs
sbb
dec
js
bound
scas
sub
push
dec
inc
sub
mov
cld
iret
mov
test
fld
fcom
mov
cmp
jae
jl
mov
test
mov
mov
je
bound
add
pop
push
imul
pop
push
into
loopne
dec
mov
aad
mov
movs
pop
push
enter
loop
out
jmp
lahf
mov
mov
adc
or
inc
fimul
ficom
idiv
bound
test
dec
adc
mov
xchg
mov
out
out
rol
xchg
(bad)
add
sti
das
pop
jb
and
div
pop
neg
(bad)
out
lock
add
sti
outs
sahf
mov
popf
rcl
fwait
jne
cs
mov
sbb
test
dec
dec
(bad)
sahf
sbb
adc
dec
and
mov
jp
test
sbb
test
loope
test
push
in
mov
fadd
fsubr
jo
dec
pop
fld
sbb
aad
call
and
repz
js
jle
jmp
aas
ja
retf
adc
fist
inc
fwait
xlat
sar
sbb
sbb
mov
sbb
sbb
mov
jns
mov
dec
add
mov
mov
iret
push
add
mov
fcmovbe
repnz
cmps
push
(bad)
jle
push
pushf
sti
(bad)
stc
ret
pop
fwait
sub
sub
(bad)
xor
sub
cmp
pop
xor
xchg
retf
bound
sub
retf
or
mov
hlt
add
xchg
sbb
jmp
sti
jp
out
rcl
shl
dec
jecxz
pusha
xor
sti
sar
xchg
add
call
adc
inc
repnz
push
sbb
cwde
in
xchg
push
mov
call
jmp
cmps
jns
cmps
push
imul
lods
out
call
data16
adc
or
repz
or
jno
popf
sub
adc
jl
adc
jno
cmp
pop
inc
ret
mov
mov
sbb
sub
mov
cld
jmp
and
nop
sbb
ins
sbb
cmp
cmp
bound
push
rcl
jae
inc
lods
push
cmp
ss
ins
adc
repnz
mov
retf
arpl
and
pop
and
xchg
fscale
ror
rcr
mov
ja
mov
pushf
cdq
lahf
lds
cld
into
repz
test
outs
imul
pusha
outs
fist
cdq
xchg
mov
popa
and
mov
in
mov
mov
(bad)
mov
pushf
test
sahf
(bad)
push
fstp
mov
repz
xchg
test
sar
aaa
sahf
or
fidiv
mov
adc
lods
les
clc
adc
dec
jmp
mov
out
nop
fiadd
and
dec
aaa
pop
mov
test
clc
jb
repnz
inc
cdq
hlt
loopne
mov
mov
cld
and
sbb
jnp
pop
mov
iret
adc
pop
inc
and
push
dec
add
addr16
aam
(bad)
adc
lods
sbb
gs
fldenv
and
cmc
fild
xchg
xor
fcom
push
xor
arpl
jo
imul
or
sub
push
lds
mov
daa
repnz
cmp
mov
add
popa
ss
push
or
dec
mov
ds
das
fs
jl
and
jb
cmp
(bad)
fld
sbb
(bad)
sti
int
mov
je
mov
xchg
nop
retf
or
das
mov
je
adc
mov
xchg
add
mov
push
dec
adc
movs
jle
in
bound
pop
lahf
into
les
jl
mov
mov
xchg
xor
push
jge
std
inc
fcomi
mov
pop
and
fst
mov
mov
pop
xlat
lds
jbe
xchg
cmp
xor
cli
jge
xchg
(bad)
jl
sbb
loop
call
xchg
mov
enter
rol
bnd
das
pop
lahf
mov
lock
or
dec
pop
jo
xchg
ret
mov
int
lea
outs
aaa
in
push
xor
cdq
xlat
scas
ror
sub
retf
clc
sti
loope
movs
bnd
les
icebp
dec
mov
mov
xlat
mov
fwait
push
dec
jno
lods
sar
push
ror
fisubr
adc
push
ds
test
in
in
or
ret
fst
jmp
imul
push
add
jl
cmc
imul
nop
push
xchg
mov
adc
cmp
jecxz
and
add
test
jne
les
push
retf
ret
aas
adc
fdiv
or
cmps
pop
das
and
shl
xchg
mov
push
ror
mov
mov
sbb
call
mov
movs
cmp
ds
clc
jge
add
mov
adc
popf
movups
bound
int
stos
jl
jle
int3
ins
xor
ret
xchg
cmp
nop
jae
cli
mov
int3
gs
lahf
lea
push
stos
push
or
fidivr
fstp
push
dec
out
retf
loope
push
(bad)
icebp
loope
xchg
jmp
(bad)
movs
cmp
(bad)
xchg
inc
fisttp
out
in
mov
shl
sbb
xlat
(bad)
fistp
cli
in
or
mov
sbb
xchg
pop
xor
shl
(bad)
outs
pop
out
cli
pop
imul
in
mov
dec
cli
push
std
movs
imul
(bad)
sahf
aad
mov
add
sbb
mov
cmc
mov
inc
pop
out
pop
push
dec
test
mov
aaa
xchg
out
jge
loope
push
sbb
cmp
lods
xor
sub
or
mov
xlat
stos
xorps
sahf
inc
sub
push
or
xor
xor
and
arpl
mov
push
xchg
stos
pushf
mov
mov
imul
icebp
imul
aaa
test
push
shl
mov
aam
in
ret
mov
dec
dec
scas
loopne
push
js
push
and
pop
movs
inc
das
mov
xchg
and
enter
loope
ins
lods
mov
clc
pop
(bad)
fadd
movs
leave
push
push
loope
fwait
ja
xor
sahf
jge
cmc
mov
jmp
les
pop
ds
xor
and
pushf
(bad)
or
xchg
or
and
pop
shr
out
iret
mov
sbb
jge
xlat
mov
inc
imul
push
in
neg
movs
sbb
jmp
ins
mov
int3
out
mov
pop
mov
pop
inc
ds
xor
or
les
add
add
das
(bad)
stc
and
jp
aad
cmp
xor
mov
sbb
dec
push
aas
(bad)
sbb
mov
in
lds
xchg
dec
cmps
mov
fcmovnb
(bad)
jmp
push
cmp
pusha
pop
mov
mov
mov
int
jnp
les
sbb
jl
fstp
(bad)
lods
rcl
pop
add
call
fsub
push
mov
mov
inc
repz
test
mov
movs
or
adc
sbb
fisub
dec
add
sbb
adc
xor
xchg
mov
add
pop
adc
xlat
mov
adc
call
jg
and
ja
push
push
xchg
lds
retf
lea
adc
push
jp
sub
mov
dec
inc
stos
nop
cmp
aam
mov
and
dec
add
jae
or
and
jl
test
hlt
imul
mov
cmps
ss
iret
xchg
ins
dec
xor
mov
icebp
push
sub
and
add
mov
cs
es
(bad)
mov
das
loopne
cmp
mov
out
cmp
xchg
or
aas
je
xchg
icebp
xchg
leave
sti
ds
pop
cmc
ja
ins
dec
dec
cmp
jns
dec
js
movs
test
test
fcom
xlat
sub
ja
cmp
pmaxsw
jno
inc
or
inc
es
das
fwait
xchg
dec
pop
xorps
or
jb
and
rcr
dec
out
ror
xor
xchg
xchg
dec
lods
cli
xor
aaa
xor
jns
cmp
arpl
or
cmp
cmps
xor
pop
mov
mov
inc
sub
add
inc
out
inc
lds
pop
adc
add
scas
dec
inc
imul
test
bound
test
jbe
sar
scas
add
shl
sahf
adc
pop
(bad)
pusha
into
push
push
mov
out
(bad)
mov
ja
xchg
aaa
fstp
ret
sar
stos
test
stc
or
mov
dec
xor
mov
or
jmp
xchg
out
test
mov
adc
bnd
sbb
push
add
lods
cmp
cmps
xchg
out
int3
fs
mov
test
or
inc
(bad)
cdq
dec
sbb
add
aas
movs
sub
or
popa
ret
sbb
(bad)
lock
jecxz
sbb
mov
mov
inc
adc
add
(bad)
cmps
mov
and
sub
arpl
mov
pusha
test
movs
sub
(bad)
lock
pop
test
daa
popf
mov
add
adc
adc
sbb
bound
outs
sbb
dec
jbe
mov
stc
push
adc
jmp
mov
addr16
js
outs
inc
push
xor
xchg
out
push
movs
not
inc
inc
fdivr
mov
mov
ss
out
mov
or
test
mov
xor
sbb
dec
mov
sub
xor
xor
push
ret
out
mov
repnz
mov
test
sbb
and
add
and
pop
push
in
push
sti
jno
rcl
call
xchg
inc
cmc
fcomp
retf
mov
in
popw
clc
les
mov
and
lock
jmp
dec
mov
neg
mov
stc
iret
mov
push
push
pop
sbb
xchg
rcl
es
vpaddsb
and
retf
push
mov
inc
in
push
jno
stc
jp
cmp
int3
and
inc
mov
ins
push
xchg
mov
jne
mov
inc
jne
jmp
inc
mov
loope
fiadd
cld
pop
call
xchg
cvtps2pd
mov
and
je
int3
add
mov
push
clc
fsubr
mov
popa
xor
aad
sub
jl
mov
call
mov
aam
sbb
test
sub
mov
ret
inc
push
fucom
es
mov
add
in
xor
iret
ret
jmp
fsubr
(bad)
dec
and
in
dec
push
bound
icebp
adc
shr
lock
xor
fidivr
add
mov
ror
add
sahf
iret
aad
pop
mov
mov
add
adc
mov
es
jmp
(bad)
cs
or
repz
sub
aam
cmc
cmc
xchg
sti
xchg
mov
imul
dec
pop
sbb
cs
dec
imul
(bad)
leave
xchg
jp
lods
lock
mov
push
sti
dec
daa
add
mov
ja
mov
cld
scas
test
hlt
xor
mov
std
into
sub
(bad)
sub
movs
enter
cmc
sub
inc
aad
enter
adc
fst
sub
into
pusha
push
xor
sbb
sbb
mov
fdiv
add
into
into
repnz
mov
stos
mov
adc
adc
and
or
rcr
jmp
push
test
and
(bad)
ja
inc
mov
ss
sahf
and
dec
mov
in
shr
lods
(bad)
jmp
imul
pop
scas
sbb
add
leave
sub
or
bound
ss
xchg
mov
outs
(bad)
dec
and
dec
pop
cmp
push
call
pop
stos
and
push
sub
ja
(bad)
xchg
adc
xchg
ret
and
mov
test
sub
or
cmp
jae
fs
(bad)
push
aad
and
dec
mov
jle
and
xor
fcomp
clc
ret
adc
push
in
(bad)
das
fwait
addr16
or
test
out
cmps
xchg
(bad)
sbb
jl
mov
sahf
dec
mov
cs
outs
loopne
cmp
cmps
jae
scas
fisttp
jmp
add
adc
adc
or
lds
gs
sar
mov
test
cmps
stc
jns
cmp
es
xchg
aam
cmp
and
mov
sbb
xor
xchg
sbb
pop
cmp
jae
in
adc
xor
push
lea
or
mov
jae
(bad)
fcmovne
push
scas
xchg
lock
dec
in
adc
jno
jmp
and
shr
scas
inc
(bad)
push
addr16
add
scas
sub
in
mov
jg
jg
adc
cmp
lock
outs
rcl
push
sub
sbb
pushf
mov
pop
ss
mov
(bad)
outs
scas
dec
xchg
xchg
inc
test
test
mov
or
aam
(bad)
in
jne
sub
mov
lea
add
fisub
mov
repnz
in
(bad)
jnp
test
call
test
retf
sbb
add
cli
in
outs
dec
cmp
ret
stos
cli
cmp
in
pop
xor
nop
mov
xor
mov
mov
add
loop
rcl
or
xor
test
lahf
add
mov
xor
jb
popf
in
(bad)
xor
out
add
mov
dec
jno
neg
xchg
mov
out
(bad)
jne
dec
sub
lahf
mov
push
adc
jne
leave
cmc
jbe
mov
idiv
add
xchg
sub
fistp
and
cmp
add
int
add
and
mov
fdivrp
xchg
xchg
fbld
jbe
lods
jne
inc
push
xchg
daa
test
pop
jbe
inc
and
ins
xchg
loop
outs
sub
pop
out
mov
xchg
cmp
lods
rol
stos
mov
jmp
in
mov
pop
pop
hlt
cmp
rcl
jbe
ret
jge
xchg
fucomip
inc
inc
shr
pop
fadd
in
pop
push
pop
fdiv
ins
or
inc
stc
addr16
mov
loope
inc
scas
jb
pop
imul
ret
retf
add
and
scas
add
jg
push
or
mul
xchg
jbe
sbb
rcr
and
xor
push
mov
lods
sub
jo
es
push
add
mov
call
xrstors
or
pop
ret
dec
mov
push
jmp
je
pushf
and
shl
mov
(bad)
mov
mov
sbb
mov
dec
ret
fs
add
inc
pop
in
add
jb
jmp
mov
(bad)
fbstp
aad
xchg
(bad)
mov
sub
push
mov
sbb
jae
js
mov
movs
cmp
cmp
addr16
(bad)
(bad)
vmread
mov
push
bound
push
nop
jae
sub
in
data16
or
add
sub
sbb
daa
mov
sub
add
popf
cmps
out
ds
sub
push
int3
jns
pop
mov
add
inc
pop
cmc
or
cmps
lock
xor
push
and
xchg
xor
jle
pop
or
cmp
dec
(bad)
mov
repnz
jmp
sbb
or
sar
and
or
mov
xor
mov
jge
pop
push
test
ins
outs
push
jg
and
pop
dec
imul
pusha
fiadd
shr
icebp
push
adc
clc
movs
pop
adc
jbe
fstp
cmp
repz
adc
xchg
movs
mov
shr
add
out
mov
or
mov
lock
leave
test
jge
popa
mov
jmp
cmp
(bad)
jno
into
jae
ds
mov
movs
pop
loop
pusha
cmp
(bad)
out
ss
xlat
sub
sbb
aam
cmps
mov
cmps
int
sahf
dec
push
dec
inc
xchg
ins
popf
sbb
outs
and
sub
dec
call
add
and
movs
and
popa
inc
stos
mov
xchg
xchg
inc
in
sbb
mov
or
movs
lahf
xchg
jo
cmp
inc
inc
mov
fsub
xor
push
fwait
in
ret
mov
aam
ins
aas
imul
aas
jmp
addr16
popf
aaa
iret
push
and
push
add
test
mov
xchg
cmp
out
mov
cmp
popa
lock
mov
in
scas
dec
xchg
arpl
pcmpgtw
(bad)
sbb
fstp
cmp
pop
push
stc
fnstenv
push
sahf
scas
or
or
gs
icebp
leave
or
xchg
call
data16
or
test
jo
mov
jmp
inc
and
ins
mov
loopne
nop
add
and
jno
hlt
call
sbb
mov
adc
shr
lods
(bad)
sub
fnstcw
pop
jns
pop
out
pop
xor
sti
sbb
fnstenv
mov
aas
lds
fstp
xor
test
push
mov
add
xchg
stos
cmp
dec
fsubrp
jge
int
xchg
cld
imul
int3
mov
iret
ret
dec
sub
retf
cmc
rcr
jl
popa
cmp
xor
inc
lods
aaa
rol
or
out
xlat
in
in
aad
cwde
cmps
mov
loope
and
xor
push
popa
int
jo
ss
mov
dec
inc
std
out
aam
mov
jnp
mov
jle
les
jmp
dec
cmp
fild
add
mov
xchg
xor
xchg
cmp
lods
inc
mov
lock
mov
mov
fbld
adc
cwde
jecxz
sbb
push
imul
jbe
lods
push
push
loopne
sub
dec
ins
add
inc
icebp
mov
and
call
iret
out
out
push
je
inc
outs
add
movs
xchg
sub
dec
pop
or
stc
xchg
cmp
popf
rcl
ret
adc
push
mov
sub
mov
sbb
inc
xchg
das
cmp
pop
ret
inc
std
mov
and
mov
hlt
out
jle
and
fsub
and
push
(bad)
cmc
cmp
out
pushf
call
test
ins
clc
xchg
ds
es
cs
pop
retf
daa
sub
cdq
dec
xor
fwait
xor
pop
scas
dec
mov
daa
jmp
sub
add
xchg
loopne
iret
sahf
sbb
jmp
mov
xchg
push
addr16
sbb
iret
xchg
iret
inc
push
mov
idiv
pushf
out
pop
xchg
pop
xor
in
and
out
out
ja
inc
iret
in
jno
mov
inc
out
jg
jne
nop
iret
and
fwait
dec
pop
sbb
xor
je
mov
in
xor
jnp
add
mov
inc
test
(bad)
push
pop
mov
jae
repnz
nop
dec
int
dec
sub
add
or
ja
add
mov
scas
(bad)
icebp
mov
pop
cmc
mov
cmp
push
jbe
dec
loope
jnp
sub
out
cmp
sbb
mov
add
mov
jne
mov
fldcw
add
out
outs
sub
fld
mov
imul
(bad)
and
add
jno
or
mov
outs
inc
sbb
lods
lods
cmp
data16
sbb
jle
push
call
jae
and
inc
repnz
lock
loopne
aas
movs
adc
mov
call
pop
cmp
mov
inc
shl
push
ret
(bad)
lods
mov
push
xchg
xchg
inc
data16
outs
jmp
lahf
cdq
fild
les
inc
mov
or
cmps
fimul
das
shl
xchg
int3
popf
imul
xchg
into
je
jp
out
mov
sbb
fnstcw
data16
mul
jge
int3
lods
fiadd
out
push
xor
aad
movs
adc
stc
mov
ins
jmp
add
pop
ja
sub
jmp
jle
lods
pop
retf
or
scas
test
js
mul
adc
out
cli
jb
outs
imul
dec
cmp
je
push
rcl
cmp
imul
shl
pop
mov
sbb
cmps
stos
pop
mov
dec
pop
sti
xor
xchg
lock
adc
cmp
xor
leave
iret
sar
adc
or
int3
adc
dec
or
retf
jle
and
jae
out
(bad)
xor
popa
or
aaa
dec
cmps
popa
pop
and
pop
ror
sti
xchg
sub
aas
frstor
es
into
call
(bad)
out
xor
xchg
jae
mov
ret
call
add
clc
pop
sub
icebp
pushf
fstp
adc
cli
inc
pop
fisubr
psubusw
cdq
das
inc
dec
out
imul
scas
mov
mov
add
push
xchg
out
or
cwde
fisub
sub
adc
movs
adc
ret
sbb
cmp
out
sbb
(bad)
aaa
jg
push
mov
or
push
sahf
dec
xor
sbb
mov
pop
loopne
pop
iret
add
movs
dec
and
and
push
frstor
sub
pop
add
mov
es
lahf
xchg
fs
in
xchg
jae
xor
add
lea
xchg
jp
sbb
idiv
xchg
or
(bad)
clc
test
mov
movs
retf
pop
test
push
adc
out
mov
push
xor
pop
pop
ret
cmp
inc
scas
cld
mov
gs
mov
daa
je
push
pop
test
das
(bad)
paddb
into
push
pushf
xchg
inc
cmc
popf
out
cwde
int
popf
mov
cs
fadd
jmp
les
xor
adc
mov
mov
pop
mov
in
dec
retf
or
pop
aam
test
xor
fadd
and
cmc
leave
mov
repnz
test
xor
outs
jecxz
fistp
test
push
push
jl
adc
adc
enter
icebp
sub
fucomip
and
ins
outs
adc
lods
pusha
xor
mov
or
test
add
adc
movs
mov
fnstcw
in
and
push
rol
or
loope
nop
(bad)
or
stos
pop
xlat
ret
(bad)
sahf
fwait
sbb
mov
or
add
fstp
in
cmovae
xchg
fldpi
fld
pop
push
fcomp
mov
lahf
retf
int3
xor
add
jl
mov
fistp
sahf
inc
jae
or
call
xchg
inc
push
aam
and
cmp
rcl
ds
xchg
mov
sub
mov
pop
in
mov
ds
sti
cli
xlat
les
dec
cmp
jmp
int3
nop
imul
xchg
jns
jmp
xchg
inc
in
sahf
add
repnz
in
jmp
mov
aam
add
imul
sub
in
jb
pop
retf
fs
dec
add
arpl
mov
sbb
mov
enter
inc
push
cli
mov
pop
stos
clc
adc
aas
test
mov
mov
add
cs
xor
push
out
sbb
push
std
fnsave
leave
pop
mov
jo
xor
push
sub
mov
adc
push
push
cmp
adc
add
mov
ja
mov
nop
cwde
(bad)
pushf
inc
out
hlt
imul
adc
cld
xchg
pop
loop
pop
mov
mov
sub
mov
ror
mov
scas
mov
lods
out
int3
push
and
cmps
inc
lods
pop
add
hlt
dec
mov
into
jbe
ins
xchg
nop
fsub
lds
ss
sbb
and
lods
mov
add
nop
movs
cmp
cmps
ss
lea
das
shr
movs
stos
in
lahf
mov
scas
fdivr
sub
push
mov
dec
scas
mov
inc
jbe
out
xchg
inc
popa
stos
add
xor
dec
add
fdivr
xor
loopne
jmp
mov
loope
dec
jns
pop
jmp
xchg
aam
enter
add
jmp
sar
add
push
inc
int3
adc
(bad)
sub
sahf
retf
movs
xor
xchg
stc
stos
aaa
dec
cmp
jae
int
pushf
repz
pop
and
iret
lock
dec
sbb
jl
jb
add
shl
push
enter
jnp
or
ss
retf
sub
or
arpl
dec
out
int
mov
sbb
das
dec
dec
call
dec
add
stos
mov
movs
outs
out
addr16
sahf
(bad)
leave
loope
push
push
and
ret
jp
mov
push
shl
fwait
pop
jno
xor
in
cmc
xchg
lea
in
mov
call
dec
outs
shl
int
xor
call
mov
pop
add
xchg
add
xchg
cmp
(bad)
repnz
fnstcw
neg
sbb
pusha
ret
mov
ds
inc
cld
loope
xchg
gs
(bad)
push
fwait
xchg
dec
jecxz
in
mov
es
pop
mov
add
(bad)
(bad)
mov
jp
lahf
cmp
imul
dec
sbb
fnstcw
xor
pop
cmp
sti
xor
gs
ins
jg
mov
xchg
cmps
in
sub
adc
not
add
sbb
inc
xlat
push
mov
mov
es
jmp
or
int
dec
pop
in
push
jo
add
cwde
div
fwait
jmp
out
mov
xor
(bad)
push
jns
adc
mov
(bad)
scas
cmps
jmp
outs
mov
dec
inc
cmps
pop
imul
jbe
fs
and
xchg
loope
fmul
push
sahf
shr
sbb
mov
shl
dec
cld
stos
pop
add
sub
pop
imul
jno
retf
push
mov
dec
popf
pop
int
jnp
xchg
outs
pop
push
pop
dec
pop
cmp
inc
pop
rcr
push
xchg
and
out
enter
or
stc
and
iret
sub
xor
mov
cld
mul
bound
dec
mov
mov
and
cmps
call
aad
dec
mov
in
mov
fmul
dec
and
cld
fbld
and
cmp
adc
add
push
push
aad
mov
in
fimul
mul
rcl
inc
inc
imul
mov
gs
dec
leave
sbb
mov
fisttp
rol
mov
jb
cmp
pop
out
out
ja
adc
test
ret
leave
or
rol
sbb
add
inc
push
mov
imul
test
mov
clc
sbb
icebp
xor
lea
push
push
jle
xor
add
xchg
inc
sub
xor
fmul
jb
inc
fdiv
fbstp
add
jmp
fimul
pop
push
sub
cmp
mov
fcmove
push
sub
adc
js
inc
dec
movs
cmp
imul
clc
xchg
inc
test
and
adc
mov
add
repnz
pop
ins
push
call
imul
icebp
out
mov
fistp
lahf
(bad)
mov
je
mov
jmp
leave
or
loope
int3
(bad)
mov
lock
nop
jnp
das
jp
lahf
push
cmp
(bad)
push
mov
cli
xchg
das
jno
jo
int
into
jl
call
imul
lea
fistp
dec
add
push
iret
xchg
sti
sub
pop
mov
xchg
cmp
sub
out
or
mov
div
shl
dec
iret
popf
add
int3
mov
push
aad
sub
or
pop
mov
and
dec
call
xchg
dec
popf
mov
mov
and
stos
cmp
out
jmp
stc
mov
sti
mov
xor
aam
test
(bad)
or
jge
loop
mov
sbb
or
xchg
test
xor
mov
jge
push
push
cmp
lods
or
and
mov
int
and
sub
mov
movs
into
sqrtps
push
pop
ins
pop
jmp
mov
ins
scas
lods
gs
test
lea
out
sub
js
xchg
xchg
xor
shl
mov
push
xchg
rcr
sub
retf
dec
xor
cmp
aaa
xchg
fwait
pop
push
push
push
cmp
sahf
adc
(bad)
rdmsr
xchg
jae
fbstp
xor
ins
movs
sti
pop
mov
xor
repnz
pop
mov
xor
mov
jl
test
fadd
push
xlat
enter
jge
jmp
std
repz
in
aaa
in
ror
pop
cmp
lea
sub
adc
test
outs
jae
mov
cmp
and
add
test
mov
cmp
ins
add
fadd
adc
sbb
adc
sbb
das
rcl
and
call
mov
dec
test
xchg
mov
sub
mov
sbb
in
xor
jg
push
push
xchg
dec
lahf
clc
pop
dec
jle
add
hlt
mov
jmp
sti
mov
fldenv
daa
sub
test
jl
mov
sbb
mov
sub
mov
mov
or
or
scas
mov
shr
lods
arpl
jg
mov
call
or
pop
add
sub
loopne
nop
imul
retf
lea
dec
sbb
(bad)
mov
xchg
mov
push
(bad)
or
sbb
xor
daa
retf
mov
pop
mov
pop
clc
mov
jp
mov
and
(bad)
xor
scas
fs
mov
push
iret
adc
push
mov
adc
in
xor
pop
add
out
sbb
fnop
dec
lods
out
dec
sahf
xor
imul
ins
mov
stc
into
jmp
in
jge
pop
mov
in
adc
(bad)
into
inc
in
sahf
aam
adc
mov
cdq
pop
jmp
sbb
xor
cli
sbb
jae
ss
pop
adc
push
fidivr
jns
mov
sbb
retf
sti
ja
mov
mov
add
dec
ret
jbe
xchg
push
adc
inc
int
inc
movs
(bad)
iret
add
rep
lods
dec
mov
sbb
adc
pop
ret
sub
xchg
mov
enter
and
nop
test
rcl
mov
mov
add
mov
test
and
test
pushf
sbb
rcl
call
push
imul
sub
mov
xchg
mov
pop
jbe
xchg
jmp
(bad)
addr16
mov
or
(bad)
sbb
jg
mov
stc
fwait
or
mov
mov
and
add
jmp
cmp
call
bound
dec
mov
jns
ffreep
mov
arpl
bswap
dec
xor
stos
(bad)
sbb
ja
mov
sub
sbb
jmp
xor
sti
fs
mov
das
mov
popf
inc
mov
adc
mov
xor
pop
jle
jo
mov
push
sahf
loop
jae
sbb
fsubp
mov
mov
lods
pop
mov
in
es
push
icebp
dec
aam
out
mov
stos
inc
cmc
ret
hlt
cmp
outs
sub
sbb
mov
pop
test
push
adc
dec
or
jmp
xor
xchg
cmp
or
adc
pop
jle
lock
or
sub
dec
cmp
jo
ret
mov
aas
aaa
fsubr
test
cs
jle
adc
mov
aam
sar
mov
or
cmp
add
scas
inc
push
push
in
hlt
stos
ins
inc
movs
aad
inc
cdq
push
pop
popf
sbb
retf
mov
push
xchg
dec
ds
cmp
dec
dec
jmp
mov
bswap
jl
std
addr16
xor
fsub
push
jo
scas
fimul
xor
movs
sti
loope
adc
pop
dec
call
test
ss
sar
and
outs
push
mov
fs
cmp
xor
cmp
jbe
cmp
arpl
pushf
loop
div
(bad)
lock
adc
add
sbb
cs
out
into
enter
xor
fstp
push
aaa
jg
sbb
in
xchg
xor
les
mov
(bad)
mov
adc
mov
gs
push
dec
sub
ret
push
jmp
sbb
xchg
out
leave
pushf
imul
repnz
push
mov
inc
xor
mov
lods
jno
sbb
mov
sub
shr
lea
pushf
push
and
pop
clc
es
push
adc
pmovmskb
mov
fidiv
jo
mov
scas
outs
fistp
cmp
cmp
and
xchg
(bad)
jmp
dec
jl
dec
jns
in
mov
jns
cmp
adc
call
xchg
repnz
sbb
mov
(bad)
cmp
mov
add
loope
dec
push
cs
mov
sahf
add
mov
enter
jge
mov
test
sahf
mov
mov
mov
add
out
mul
fwait
mov
sub
imul
pop
imul
std
clc
xchg
iret
rcl
dec
and
(bad)
les
push
jnp
mov
pop
dec
imul
(bad)
js
cmp
jle
in
or
mov
inc
fdiv
cmp
jp
pop
push
xchg
or
and
cmp
fadd
dec
mov
pusha
movs
aaa
jg
shr
and
stc
cmp
pop
ror
aas
ret
jo
mov
mov
sbb
xchg
call
jg
call
retf
xchg
stos
jmp
movs
pop
or
js
mov
sbb
mov
aas
pop
fbstp
or
test
ror
leave
push
inc
mov
push
jl
jmp
cmps
cs
cmps
test
or
mov
std
adc
arpl
mov
adc
mov
pop
lock
fidiv
xchg
lahf
push
scas
pop
pop
jb
fidivr
xchg
cmp
pop
popf
ins
jg
mov
cmp
lock
enter
mov
nop
dec
enter
sbb
sti
mov
xor
mov
scas
leave
sti
xchg
inc
pop
jae
xor
cmps
enter
push
xchg
pushf
xlat
lods
in
add
jl
(bad)
call
ret
inc
cdq
test
repz
fcom
mov
in
(bad)
cmp
pop
pushf
sar
(bad)
imul
stc
mov
lock
ret
sbb
cld
xlat
test
lods
hlt
mov
add
arpl
or
cdq
sbb
icebp
lds
pop
out
jg
sbb
dec
add
cmps
xor
fs
inc
leave
icebp
rcr
sbb
dec
test
gs
or
xchg
fs
gs
or
pop
imul
sbb
push
xchg
push
lock
repz
int3
(bad)
push
es
and
mov
mov
scas
xchg
and
xor
or
popf
jp
ror
sar
xor
mov
hlt
add
cmps
fisttp
ins
dec
mov
xor
or
or
xor
mov
loope
lds
cmp
dec
pop
pop
shl
pusha
jmp
or
lds
inc
cwde
idiv
fimul
scas
xor
mov
jge
add
sbb
pop
sbb
xor
(bad)
scas
sub
or
repnz
mov
pop
out
dec
imul
popf
in
cmp
cs
mov
xor
adc
sub
aad
ja
jmp
jl
fs
and
aas
cli
jb
jno
fiadd
pop
cmps
out
mov
cwde
(bad)
(bad)
cmps
jbe
sub
mov
arpl
arpl
lods
test
aas
pop
mov
aas
push
popf
mov
xchg
loop
rcr
or
(bad)
cmp
jnp
jae
fwait
sbb
hlt
push
jb
and
ins
sub
clc
adc
mov
inc
ins
mov
push
mov
sahf
repz
jp
mov
mov
(bad)
imul
std
popa
add
cmp
ss
cwde
push
dec
inc
sbb
loopne
test
jecxz
bound
repnz
jb
loop
dec
pop
sbb
mov
jns
or
(bad)
(bad)
iret
mul
or
jnp
mov
cmp
out
jns
pop
repz
inc
lea
rol
scas
mov
lods
add
jl
dec
ja
mov
cld
repz
jp
int3
sub
dec
cmp
pop
or
push
int
call
mov
cmp
sub
retf
cld
pop
adc
pop
aad
fsubr
movs
xchg
mov
ret
movs
in
push
jo
xor
cmp
lds
mov
bound
ds
push
pop
jle
pop
dec
and
dec
add
adc
mov
xor
push
mov
mov
cmps
hlt
adc
jbe
aad
fcomp
jmp
dec
adc
(bad)
outs
int3
test
rol
or
push
in
sar
addr16
mov
lock
aas
aas
les
mov
mov
rcl
cmp
push
lock
ret
daa
cmp
xchg
pop
(bad)
sub
and
ror
xchg
stos
jecxz
jnp
and
out
retf
out
test
push
push
repnz
xor
gs
movs
pop
inc
das
cli
sub
(bad)
fldcw
sti
cwde
xor
call
and
push
mov
rep
(bad)
pusha
ja
imul
jno
mov
sub
cmps
call
dec
leave
jge
dec
push
(bad)
mov
jb
xor
aas
movs
mov
fdiv
sbb
int3
out
xor
std
xchg
mov
or
gs
lods
hlt
cs
ss
bound
or
dec
mov
pop
push
push
sahf
jne
xchg
fmul
jmp
mov
loop
mov
out
mov
fnstsw
mov
push
dec
jbe
test
mov
scas
aas
xchg
xor
(bad)
into
dec
addr16
rcl
ret
and
jecxz
dec
mov
popw
(bad)
int3
(bad)
and
mov
push
ins
popf
dec
mov
jmp
push
cwde
pop
popf
jns
push
ror
pop
scas
das
mov
sbb
neg
push
or
les
mov
sti
or
lock
or
ror
cmp
cmc
mov
mov
pop
push
scas
xlat
jmp
xor
or
data16
test
stos
repnz
xor
int3
stos
inc
fld
imul
inc
and
adc
in
out
sbb
loop
movs
mov
or
clc
mov
inc
cmp
mov
dec
or
pop
mov
mov
pop
mov
(bad)
popa
add
leave
inc
jno
mov
repnz
sahf
dec
cmp
fisttp
sub
gs
das
push
xchg
xchg
sub
mov
and
fisub
pop
xchg
mov
loop
cmc
es
test
sbb
xchg
mov
and
jbe
ror
lods
stc
stos
(bad)
(bad)
sahf
sub
inc
mov
call
mul
aam
sbb
popf
test
and
(bad)
in
jmp
sbb
rol
repnz
mov
mov
addr16
xchg
fmul
scas
jle
out
gs
shr
(bad)
mov
push
xchg
or
mov
push
test
or
icebp
mov
pop
jmp
or
nop
jle
arpl
lods
fsin
out
cwde
inc
loope
imul
mov
sbb
mov
jbe
and
out
dec
enter
outs
push
iret
jne
shl
mov
pop
scas
retf
test
test
jp
sbb
mov
xor
adc
mov
movs
pop
jg
aad
pop
xor
add
add
(bad)
push
xor
fisub
adc
retf
imul
jmp
push
jmp
mov
arpl
adc
cmp
sbb
mov
xchg
xor
pop
cmps
aas
mov
sbb
sbb
and
jecxz
dec
push
xor
sbb
xor
out
popf
sbb
arpl
push
jp
inc
sbb
inc
addr16
outs
fld
dec
xor
sbb
mov
dec
fsub
div
jno
inc
ror
js
jle
mov
xchg
movaps
ss
(bad)
retf
xlat
sbb
dec
cmp
adc
dec
mov
mov
clc
push
push
inc
in
ret
ret
test
test
gs
mov
adc
and
pop
dec
cs
lods
push
or
mov
pop
movs
push
pop
nop
lock
mov
adc
std
cdq
push
in
icebp
outs
jle
leave
push
das
rol
mov
sar
jl
jnp
xchg
add
movs
sahf
addr16
clc
adc
es
cmps
test
push
loope
xor
adc
popf
lahf
scas
push
lods
shl
movs
xchg
ss
pop
and
adc
mov
push
rcl
sub
or
and
pop
inc
retf
inc
mov
inc
mov
mov
pop
add
adc
(bad)
cwde
popa
or
pop
mov
mov
xor
call
ror
dec
out
stos
push
adc
add
cmc
sub
and
in
lds
dec
addr16
jecxz
dec
inc
jge
rol
or
out
(bad)
and
pushf
mov
int
and
push
addr16
fsub
clc
pop
test
and
mov
pop
movs
call
ins
cmp
das
mov
jmp
sub
push
enter
hlt
sbb
retf
jno
cmps
xor
fnstsw
xchg
pop
xor
pop
cwde
js
cmp
inc
(bad)
cwde
add
fist
imul
pop
push
push
mov
pop
mov
icebp
or
push
in
in
xor
lahf
scas
pop
retf
mul
pushw
cmp
xor
(bad)
adc
ins
cmps
test
iret
retf
or
scas
aad
adc
in
sub
pop
(bad)
inc
test
push
(bad)
stos
pop
jb
nop
or
inc
fsubr
mov
and
inc
xchg
push
mov
repnz
jo
mov
sbb
and
rcl
mov
add
sahf
call
syscall
adc
push
je
inc
add
data16
mov
dec
dec
mov
lea
call
adc
xchg
int
into
sti
dec
or
int
adc
mov
aad
ficom
clc
arpl
xchg
mov
mov
dec
fs
rol
arpl
stc
add
out
jne
sub
mov
iret
cmc
icebp
mov
bound
xchg
or
cmp
fpatan
xor
hlt
mov
aas
push
cmp
retf
test
arpl
mov
jl
mov
cmp
fwait
mov
data16
jno
shl
ja
pop
ins
dec
or
cmp
mov
push
fild
das
mov
push
in
lods
mov
jg
ss
sub
jae
pop
push
ret
push
int
pop
hlt
jmp
adc
lods
dec
mov
(bad)
(bad)
(bad)
cmps
dec
cmp
fistp
sbb
popa
sti
mov
dec
fisttp
hlt
xchg
ffree
mov
mov
rcpps
pop
and
ja
xchg
es
retf
adc
mov
jnp
adc
cli
mov
xor
mov
dec
inc
in
add
lds
mov
iret
dec
or
sbb
call
pop
or
add
add
sar
dec
out
push
sub
inc
dec
rcr
cmps
aas
test
and
out
pop
cli
je
or
mov
mov
cmp
sub
fwait
mov
sub
adc
ja
call
jp
and
jle
and
jp
inc
imul
pushf
cmp
mov
jns
and
or
bound
sbb
xchg
pop
add
sub
ja
mov
mov
cld
cli
mov
and
into
mov
in
adc
jmp
aaa
pop
rcr
outs
ja
stos
mov
push
inc
aaa
cld
int3
fsubrp
push
cmps
gs
or
adc
dec
sub
xchg
fstp
jle
(bad)
(bad)
mov
mov
les
sub
gs
sahf
and
xchg
add
jnp
aam
or
pop
ins
inc
(bad)
pop
mov
add
int3
push
jmp
cmp
push
cmp
or
sub
jle
push
jg
in
adc
lahf
mov
mov
xchg
and
jo
and
adc
xchg
jnp
jge
mov
mov
ror
(bad)
shl
shr
mov
mov
hlt
push
lahf
mov
fmul
mov
pop
lds
sub
inc
or
dec
and
xor
rcl
jae
out
sbb
push
push
jbe
jmp
dec
ja
ins
ds
jp
mov
aam
stc
ret
bound
cmp
popa
jg
inc
aad
dec
mov
je
adc
push
sub
add
aaa
fistp
mov
xchg
stc
pop
xchg
mov
dec
aaa
fisttp
add
add
(bad)
out
movs
or
xchg
push
retf
push
ss
in
sub
inc
call
pop
loop
xor
cli
out
mov
xor
mov
pop
(bad)
ins
ror
mov
mov
out
sbb
mov
sub
mov
out
enter
adc
jecxz
or
call
cmc
pop
aad
das
pop
stos
sub
mov
(bad)
fucomi
ins
out
test
pop
packuswb
and
cmps
call
ja
xor
loope
push
iret
outs
std
dec
ret
ins
sbb
int
out
loopne
(bad)
call
shr
adc
sbb
out
rcr
jg
xor
popa
daa
loope
adc
xchg
mov
jl
mov
sub
cmp
pop
or
mov
test
xor
sub
test
fimul
or
sbb
adc
and
cmps
scas
cmp
xchg
imul
sahf
in
imul
les
jae
sbb
imul
sbb
mov
pop
lahf
mov
dec
ret
out
inc
loopne
mov
jae
hlt
out
push
mov
fsub
xchg
or
mov
mov
xor
mov
sub
ficom
inc
mov
stos
add
movs
mov
push
dec
xchg
mov
and
dec
retf
outs
rcr
inc
mov
shr
dec
fcom
dec
push
inc
sub
cmp
mov
cmps
into
pop
mov
sub
out
stos
mov
dec
cdq
cld
mov
push
fisubr
test
out
mov
test
mov
iret
jmp
je
in
(bad)
fwait
sbb
(bad)
(bad)
cmp
fbstp
leave
xor
jge
add
ds
shl
dec
je
cs
pusha
iret
lds
and
adc
sub
and
das
ret
mov
aaa
mov
adc
mov
mov
mov
ror
nop
repnz
fadd
ins
fst
sbb
ffreep
mov
xor
arpl
clc
fadd
(bad)
push
push
(bad)
mov
xchg
fwait
enter
adc
dec
cmps
jl
shl
pusha
cmp
pop
pop
jbe
sbb
sti
fadd
retf
mov
out
pop
aad
sbb
sub
push
xor
pushf
xor
push
repz
enter
dec
jle
stc
add
jns
pop
mov
mov
outs
shr
add
mov
push
or
dec
in
sbb
xchg
ins
inc
pop
pop
jg
sti
mov
stos
push
sub
cvtps2pd
pop
sub
xchg
fsub
popf
clc
and
jg
les
jle
test
aad
ret
enter
inc
push
sub
repz
cwde
pop
jne
push
fs
test
leave
jmp
arpl
cmc
add
test
fwait
retf
shr
sub
dec
jmp
pop
add
bound
rcl
stc
shl
mov
sub
sbb
fild
aaa
add
sbb
shl
sbb
jbe
call
addr16
mov
(bad)
cdq
adc
mov
sub
dec
ins
xor
test
cmps
enter
movs
mov
loope
mov
push
and
scas
daa
into
dec
push
push
addr16
int
sbb
ret
jb
fcomp
mov
sbb
cld
lea
xor
sbb
inc
arpl
pusha
xor
(bad)
int3
pushf
cdq
mov
lods
jmp
add
jnp
rol
dec
enter
jg
add
lahf
cmp
xor
aas
mov
(bad)
mov
arpl
lock
pop
sbb
imul
sub
fistp
icebp
pop
mov
sub
adc
pop
push
mov
jmp
xadd
les
and
or
pop
xchg
jp
shr
arpl
xlat
mul
stos
push
push
inc
cmp
cli
and
jge
nop
xchg
int3
in
cmps
pop
dec
sbb
cmp
aas
xor
pop
retf
mov
pop
out
fidiv
aad
dec
icebp
cmp
xchg
(bad)
fldpi
cmp
pop
push
ins
add
test
clc
mov
mov
or
pushf
aam
inc
popa
jmp
mov
imul
pop
xchg
push
pop
and
jo
sbb
mov
mov
das
test
mov
lods
jbe
mov
adc
xor
or
enter
lods
mov
ds
fisub
cmps
inc
xchg
not
imul
cmp
out
sub
push
out
movs
arpl
popf
mov
out
adc
mov
sar
inc
and
ficomp
jb
cmc
mov
loopne
daa
fwait
sub
ins
ror
and
sbb
sub
sub
leave
or
gs
jmp
jbe
xchg
push
pop
push
scas
mov
inc
stos
mov
push
ror
sub
dec
out
scas
adc
jne
int
(bad)
mov
xlat
pop
call
xchg
and
jnp
mov
fistp
dec
movs
fidivr
rol
mov
or
push
repnz
out
test
push
outs
call
fwait
retf
popa
sbb
sahf
ficom
and
out
sahf
shl
pop
aad
jmp
popf
dec
scas
add
adc
and
cs
fimul
repnz
jnp
xor
outs
xchg
push
inc
test
add
test
rol
sbb
in
xor
jmp
jg
out
in
cmc
dec
sbb
ds
inc
sub
mov
jecxz
ins
shl
add
pop
xchg
jp
xor
xor
jl
add
call
cmc
xor
jne
mov
popa
push
ror
jno
int3
jmp
cs
sub
mov
cmps
push
and
jae
mov
push
jb
lods
jo
in
cmp
(bad)
data16
gs
xor
mov
ss
bound
ror
jbe
add
mov
xchg
mov
data16
jmp
push
mov
(bad)
jno
cwde
popa
fs
call
out
pop
mov
xlat
pushf
int3
inc
cmp
icebp
jmp
sar
pop
(bad)
loopne
(bad)
cli
mov
fidivr
add
lods
pop
push
stc
dec
xchg
dec
clc
test
mov
mov
mov
sub
mov
fcom
push
test
sti
xor
dec
aas
mov
mov
mov
(bad)
imul
clc
popf
shr
stc
push
jbe
inc
cmps
icebp
loopne
arpl
inc
mov
(bad)
xor
or
add
cwde
(bad)
lahf
lods
push
ficom
sub
add
imul
pop
and
mov
(bad)
jo
sti
sub
jge
js
into
lods
push
sub
in
dec
or
sahf
mov
or
aam
sbb
pop
loopne
pop
ret
xchg
mov
ret
jl
jecxz
and
scas
xor
and
mov
lock
mov
sbb
je
jb
xor
shl
shl
sub
or
inc
(bad)
(bad)
(bad)
or
lahf
pop
leave
mov
je
jp
in
inc
inc
mov
test
icebp
mov
movs
mov
and
mov
shl
fiadd
(bad)
(bad)
mul
xor
hlt
or
sub
push
mov
retf
gs
loop
pop
add
mov
jno
out
in
mov
jb
ss
mov
retf
mov
std
and
clc
les
xor
out
sub
in
push
lahf
mov
add
cmc
sbb
shr
test
adc
(bad)
jbe
stos
and
dec
shl
imul
shl
adc
xor
jns
in
(bad)
jmp
sahf
mov
ror
shr
into
inc
lahf
fwait
je
(bad)
sub
ins
mov
inc
ins
mov
mov
int3
lods
pop
cs
sar
add
daa
mov
pushf
xor
add
jmp
sub
ror
lds
jns
mov
or
dec
xchg
aas
cld
jbe
and
into
aaa
fcmovbe
aas
cmp
cmp
and
(bad)
pop
mov
sbb
lds
shl
aam
ror
bnd
(bad)
retf
dec
push
(bad)
loopne
aam
add
add
pop
and
pop
xlat
jo
cmp
sbb
push
pop
add
fwait
dec
pop
add
mov
and
and
loopne
lahf
clc
fiadd
mov
fwait
mov
jo
inc
fwait
pop
int3
inc
dec
sbb
xchg
stc
mov
and
dec
lea
xor
inc
pop
inc
jnp
dec
fstp
sbb
retf
jmp
push
mov
sbb
mov
dec
sub
sbb
sub
mov
outs
imul
std
push
mov
mov
call
outs
and
imul
xchg
das
add
adc
xor
add
pop
fidiv
jo
stc
pop
ret
popa
ret
arpl
dec
and
(bad)
xor
and
ret
ss
mov
shl
push
jno
cmp
mov
rol
add
dec
dec
retf
fcomp
sub
and
cmp
fbstp
sbb
ret
cld
movs
cli
jb
add
repnz
stc
pushf
movs
xchg
sti
jne
or
push
mov
pushf
ins
retf
cwde
rcr
jbe
(bad)
bound
push
sub
mov
and
(bad)
pop
pop
push
fwait
jno
xchg
leave
adc
mov
mov
fisubr
pop
loop
dec
push
cmp
(bad)
call
fsub
adc
mov
les
retf
jno
fwait
or
push
add
jl
fcom
pop
mov
dec
or
adc
dec
xchg
int3
ja
jbe
push
out
jmp
dec
adc
hlt
mov
iret
test
mov
dec
dec
test
mov
sub
ins
stos
dec
and
in
mul
push
iret
mov
out
popf
pusha
mov
cmp
movs
and
push
xchg
cmps
mov
ret
and
ins
jl
enter
push
call
call
adc
sub
jp
out
pop
xchg
xchg
mul
mov
sub
jp
xor
or
movs
jl
popf
mov
pop
cmp
lock
sti
loopne
loope
xor
aam
mov
repnz
paddusb
lock
pop
mov
pushf
cmc
xor
jmp
xor
mov
adc
js
lods
push
movs
lahf
cli
push
rol
adc
loop
shl
jae
stc
adc
or
stc
mov
or
fs
sbb
repnz
inc
push
stos
pop
test
inc
shr
cdq
lods
movs
sbb
loop
xor
outs
jbe
lods
dec
outs
cmp
or
cmp
inc
int3
pop
shr
jge
pop
xor
dec
idiv
mov
jne
ins
push
sub
mov
push
aas
mov
(bad)
nop
jecxz
jecxz
pushf
cli
pop
call
int3
inc
push
push
mov
fstp
lea
lea
cmps
pop
pop
movs
xchg
or
mov
fmul
jecxz
push
jge
sti
xor
int3
dec
test
dec
sahf
mov
les
dec
jmp
push
mov
sub
ret
iret
pop
add
xor
cdq
sbb
loop
mov
outs
scas
mov
mov
mov
ficomp
fisttp
adc
cld
sbb
mov
jp
xlat
mov
add
cli
shr
shr
mov
js
iret
popa
push
mov
push
test
test
mov
repnz
pop
add
nop
pop
gs
loop
cmp
adc
stos
mov
mov
addr16
cmp
adc
or
xor
mov
push
nop
rol
vaddsubps
repnz
sbb
mov
mov
add
or
sbb
jns
call
dec
dec
sub
fs
mov
xor
ret
fs
cmp
ds
mov
cwde
mov
(bad)
mov
lock
mov
dec
cmps
sub
and
inc
add
cli
popa
or
pushf
mov
cwde
loope
daa
(bad)
mov
mov
add
push
jmp
loope
pop
jns
push
pop
add
out
leave
retf
pop
sahf
xor
sub
or
dec
adc
icebp
scas
int
iret
rcl
mov
fs
jbe
cli
call
mov
xchg
mov
jg
fs
ss
jns
and
les
jb
sahf
inc
cmp
xchg
sbb
xlat
in
jle
rcl
btr
mov
iret
clts
dec
cld
jp
mov
cmps
cli
inc
inc
mov
fcomp
mov
dec
div
jle
add
and
inc
popa
mov
xor
mov
jmp
push
xchg
mov
retf
pop
or
sar
dec
pop
arpl
mov
cmp
mov
repnz
jne
jno
aam
mov
test
jp
sub
jae
mov
sub
js
or
adc
test
mov
scas
aam
push
xchg
cmp
jo
push
cmp
and
cmps
add
into
mov
cmps
not
in
pop
popf
retf
in
lahf
jns
xor
mov
std
jns
push
movs
jno
psadbw
cmp
or
jae
cdq
lea
in
in
push
(bad)
int
adc
inc
stc
cmp
mov
test
or
idiv
xor
jecxz
pop
sbb
pop
das
xor
ds
into
pusha
jl
push
mov
push
aam
movs
sub
(bad)
icebp
mov
jl
mov
add
out
fisubr
into
into
lar
mov
jle
sbb
outs
lea
or
and
lock
or
fnstenv
fwait
shl
xor
addr16
push
gs
fisttp
xlat
cdq
mov
xchg
out
and
or
mov
xchg
pop
sbb
mov
xchg
dec
ins
and
or
dec
xchg
xor
fsub
mov
lea
iret
test
cmp
sub
and
(bad)
mov
xchg
fwait
inc
mov
fdivr
aam
inc
jmp
nop
push
jl
outs
dec
xchg
les
mov
ret
xchg
or
scas
mov
rcr
loop
sub
jb
mov
mov
adc
out
call
adc
pop
jb
(bad)
jmp
jb
inc
aas
pushf
dec
out
movs
sub
mov
xor
fdivr
sbb
fcmovbe
lea
aad
ret
xchg
inc
jbe
pushf
cmps
add
xchg
mov
je
mov
dec
adc
cli
mov
fwait
and
jge
or
mov
call
fwait
into
(bad)
or
fcmovnb
xchg
and
sahf
inc
mov
push
pop
(bad)
fdivr
in
pop
xlat
adc
stos
fld
ret
ds
mov
jns
xchg
adc
inc
lea
cmp
pop
popf
out
out
iret
mov
jle
fnstcw
imul
movs
sub
push
stc
cmp
mov
and
xchg
cmp
jno
idiv
outs
push
adc
clc
in
mov
or
fisttp
retf
bound
jmp
add
adc
push
pop
push
add
je
movs
test
and
cdq
into
fcomp
xor
lods
xchg
into
sub
mov
daa
adc
dec
push
aas
fld
jmp
lods
mov
xchg
leave
cdq
jge
mov
adc
inc
popa
cdq
lock
add
out
les
cmp
dec
pop
pop
inc
in
call
neg
push
mov
outs
repz
pop
mov
jns
loop
scas
inc
inc
sub
ins
shr
add
jecxz
icebp
xchg
xchg
xchg
push
popa
lods
fsub
and
adc
imul
push
pop
pop
cmp
daa
mov
dec
pop
retf
dec
sub
fmul
movs
push
adc
mov
sti
mov
sub
add
pop
adc
scas
mov
ja
les
mov
or
data16
jl
test
sub
in
in
mov
xchg
dec
jno
fistp
mov
inc
xchg
out
xor
xor
jnp
xchg
mov
sub
fcom
faddp
cwde
test
mov
xchg
(bad)
outs
inc
dec
cmps
xor
xchg
frstor
push
sbb
stos
xchg
jge
push
in
push
gs
jae
pop
hlt
xor
cwde
add
repz
mov
loop
and
cmp
js
fs
mov
sub
ror
sahf
jne
ds
sub
and
les
sbb
inc
mov
or
and
ins
stos
add
and
dec
mov
jge
mov
daa
enter
jmp
push
xor
xchg
sbb
cmp
inc
inc
(bad)
stc
push
adc
push
les
jp
jmp
pusha
mov
mov
rcr
inc
nop
mov
fidiv
pop
sbb
(bad)
outs
mov
push
jmp
adc
push
std
ins
pop
loope
jl
mov
cmp
push
loop
imul
sahf
call
pop
mov
loope
ins
mov
xchg
mov
or
ins
xchg
adc
(bad)
jle
xor
imul
and
iret
cmp
mov
pushf
inc
jnp
dec
ins
xchg
cwde
sar
das
pop
into
mov
ins
mov
cmp
cwde
sub
dec
pop
ret
mov
movs
inc
lods
and
mov
mov
stos
out
cld
jb
mov
mov
repz
ret
lahf
icebp
(bad)
shr
and
mov
sbb
add
arpl
scas
inc
call
mov
out
arpl
jmp
jge
out
popa
adc
push
xchg
and
lods
push
nop
dec
inc
(bad)
cmovnp
fs
std
rcl
sti
mov
jns
in
dec
and
test
inc
mov
push
pop
pop
or
push
pop
dec
test
dec
dec
es
inc
hlt
sahf
movs
and
fild
mov
push
add
jae
hlt
and
int3
mov
imul
daa
arpl
sbb
enter
xor
mov
(bad)
je
fmul
iret
mov
mov
outs
mov
dec
leave
pop
jo
dec
xchg
cld
cmp
addr16
cmp
push
inc
cmp
pop
leave
loop
push
sub
and
xor
ds
dec
outs
retf
xor
pop
or
inc
je
fidiv
rcr
js
es
sub
addr16
xor
push
cmps
mov
popf
push
pop
js
shr
push
mov
jne
jle
div
ds
inc
int
es
sbb
ds
in
(bad)
js
imul
(bad)
in
(bad)
mov
xchg
aaa
les
push
aam
mov
or
(bad)
lea
pop
aas
jae
xchg
loopne
jge
add
cmps
adc
jnp
ins
adc
fdivr
(bad)
ss
retf
jp
in
test
pop
ud0
adc
mov
mov
pop
fwait
mov
imul
push
ret
scas
lods
cmps
adc
(bad)
mov
outs
sbb
popa
inc
push
mov
sub
jne
or
test
mov
and
ja
sub
aad
mov
pop
xor
aam
js
pusha
jg
in
mov
int
adc
out
adc
fdivp
lods
jo
sbb
lods
mov
loope
pop
xor
mov
mov
rcr
cmp
xor
dec
push
loope
sbb
nop
add
(bad)
ss
out
adc
test
mov
mov
sti
test
jmp
cmc
adc
fwait
jmp
push
movs
xadd
pop
ffree
arpl
jns
scas
jge
bound
mov
aad
aam
ror
ja
adc
sbb
fmul
jb
or
cmp
xchg
xlat
pop
add
pop
fsub
jmp
movs
or
imul
mov
test
mov
test
lahf
dec
or
ss
push
or
and
imul
in
inc
cmps
call
iret
lods
jge
lods
inc
xchg
mov
xor
xchg
or
in
ins
int3
call
inc
ins
ja
imul
cmp
lea
fisubr
fdivr
mov
inc
out
push
sbb
inc
and
xchg
not
mov
xchg
mov
call
or
mov
repnz
or
pop
fwait
cld
and
jne
outs
mov
jne
pop
mov
cmp
cmp
adc
aas
jmp
fnsave
dec
je
cmps
cdq
out
push
pop
cdq
imul
pop
jno
retf
cmc
and
jle
call
jecxz
adc
xlat
ins
arpl
push
hlt
mov
or
add
xchg
mov
scas
cmp
popa
ja
fxch
mov
das
sbb
mov
cs
jg
fiadd
imul
sbb
or
(bad)
movs
imul
lods
fmul
cmp
jne
cmp
clc
sub
(bad)
ficomp
sub
mov
(bad)
in
pop
sub
or
mov
push
fsubr
test
(bad)
xchg
or
les
jl
cmp
sub
fs
xor
mov
cmp
int
cmp
stos
push
in
jmp
mov
and
and
jmp
or
clc
hlt
mov
sbb
inc
xchg
call
loop
inc
sbb
push
out
movs
dec
shl
data16
push
je
call
mov
fdivr
pop
cmp
ret
sub
js
push
cmp
inc
push
push
cmp
sub
fisttp
fcomp
sbb
mov
das
test
out
or
pop
xchg
call
jne
ficom
jbe
cmp
das
arpl
push
jp
cwde
out
cmp
push
ss
int
or
dec
out
pop
push
and
sti
jge
pop
aam
in
inc
clc
cmp
or
movs
ins
push
and
xchg
cmp
or
mov
in
ja
retf
push
adc
sbb
and
xor
cmps
idiv
lea
mov
(bad)
popw
dec
lds
mov
xadd
sbb
or
mov
xchg
mov
ret
jmp
iret
loopne
mov
cmps
jge
inc
in
sub
jbe
mov
std
retf
mov
test
scas
push
retf
inc
into
jbe
stos
xchg
xor
xchg
mov
jmp
js
aad
iret
or
in
xchg
mov
pop
inc
pop
add
mov
fsub
lods
and
adc
ret
iret
gs
push
movs
(bad)
jnp
and
cwde
call
mov
adc
push
outs
les
pop
dec
sbb
stos
scas
mov
mov
add
or
imul
jnp
xchg
dec
mov
inc
xchg
push
daa
stc
pop
sti
mov
mov
mov
sub
fistp
pop
aas
in
ss
lea
pop
pop
push
call
mov
add
retf
push
dec
das
add
clc
dec
sub
sub
mov
jmp
cdq
scas
dec
xchg
push
jno
sub
ins
je
mov
push
cli
test
fisttp
rol
push
sub
or
adc
push
sub
clc
popa
outs
sub
pop
xor
or
push
cmps
mov
xchg
inc
leave
mov
cwde
dec
sbb
data16
jno
ja
repnz
sahf
inc
sub
mov
inc
push
bound
call
xor
adc
or
call
sub
sbb
rol
jns
nop
int
ror
or
lods
push
push
inc
pop
test
ret
fs
sbb
jb
cmps
mov
outs
mov
xchg
dec
adc
add
mov
jg
arpl
jecxz
push
ret
ja
push
ja
(bad)
sub
xchg
sbb
imul
in
mov
ja
iret
imul
xor
pop
dec
mov
push
test
in
mov
push
sbb
push
xor
das
lahf
bound
pop
nop
or
ss
mov
stc
mov
cs
outs
nop
and
and
jecxz
iret
lock
jmp
push
(bad)
sbb
imul
out
loop
jmp
call
retf
in
xchg
xchg
cld
push
sub
mov
xor
leave
popa
inc
jb
add
test
hlt
mov
and
sbb
daa
mov
dec
clc
sbb
ins
add
pop
dec
cmp
imul
loopne
add
mov
and
js
or
lock
pushf
xchg
mov
bound
outs
mov
push
or
movs
outs
or
dec
hlt
shl
ds
or
pop
daa
dec
and
jmp
cmp
fs
int
shr
sbb
fucom
push
dec
ror
adc
pushf
add
(bad)
idiv
call
ins
sbb
or
call
pop
adc
std
inc
cld
ins
mov
lods
adc
mov
jne
and
fistp
leave
push
sbb
ret
stos
in
lea
fadd
popa
jmp
mov
sbb
xlat
cdq
icebp
js
test
add
sub
sub
(bad)
(bad)
adc
push
xchg
mov
ficom
adc
mov
adc
cmp
inc
cld
pop
mov
mov
jmp
pushf
mulps
in
ins
outs
jg
test
popa
in
cmp
jg
mov
jle
lock
icebp
push
inc
out
aas
mov
cmp
jns
jne
mov
push
pop
test
js
add
push
fisub
dec
test
xchg
loope
push
scas
adc
push
cmp
pmulhw
sbb
mov
into
jl
pop
stos
out
stos
push
or
mov
jb
ret
out
cmp
outs
fsub
aas
int3
jp
lahf
iret
adc
out
sbb
retf
cwde
or
cmc
and
sbb
jg
(bad)
scas
mov
ror
add
and
int3
mov
xor
pop
push
adc
(bad)
mov
test
xlat
sub
popa
dec
inc
mov
xor
xor
(bad)
fiadd
shr
jecxz
xor
fcompp
jo
loop
push
neg
cmp
sub
(bad)
cld
jle
lods
cmp
jp
inc
xor
xor
je
popa
outs
inc
(bad)
mov
adc
inc
push
xchg
jmp
jo
imul
bound
popa
push
mov
sbb
ins
inc
adc
cmps
addr16
lock
in
sbb
jle
add
cmp
aaa
xchg
sahf
adc
sub
pop
adc
mov
lahf
pop
mov
and
jns
aad
xor
js
cmp
and
adc
mov
cmp
(bad)
mov
bound
push
push
xchg
sti
iret
mov
retf
(bad)
mov
pop
int
jle
mov
mov
popa
loope
les
mov
imul
scas
les
(bad)
mov
push
ds
sti
popf
jo
xor
fs
mov
jecxz
imul
bound
pop
out
ss
lods
mov
inc
retf
add
xlat
jb
xlat
xchg
(bad)
in
loopne
push
push
adc
pusha
arpl
cmp
jne
sahf
cmp
or
in
inc
std
mov
push
push
enter
imul
jl
imul
lock
fdivr
outs
dec
sbb
push
movs
mov
and
xor
add
sub
cmc
scas
mov
out
pop
jmp
or
mov
int3
retf
scas
rol
clc
push
jmp
rcr
dec
(bad)
repnz
into
push
cmp
or
mov
cld
aam
xor
fmul
lea
fldcw
and
xor
out
addr16
shl
fwait
popa
out
out
imul
adc
jle
outs
lsl
clc
push
ds
mov
jg
push
div
xchg
xor
out
xchg
pop
es
retf
gs
out
iret
(bad)
imul
lock
pop
das
mov
shr
or
test
and
pop
inc
push
les
dec
hlt
ds
aaa
out
lock
test
loop
cdq
sbb
enter
les
pop
rcl
xchg
lahf
dec
aad
adc
xchg
retf
dec
adc
mov
sbb
add
add
or
enter
cmp
jo
shr
retf
shr
clc
inc
lds
jnp
mov
jecxz
aas
add
inc
les
ins
sar
mov
mov
popf
jb
xchg
mov
(bad)
mov
sbb
idiv
or
jecxz
repnz
out
mov
sbb
lock
or
ds
and
fst
jbe
sti
ret
test
shl
cld
into
les
push
test
pop
mov
xchg
shr
mov
add
mov
das
or
fcom
aas
in
bound
push
adc
and
dec
add
mov
dec
cmp
in
dec
push
fist
pop
jmp
push
test
out
sub
rcl
nop
inc
call
test
lds
into
lds
es
(bad)
mov
leave
cmp
push
call
push
push
inc
cmp
push
test
inc
stos
dec
mov
jge
fldenv
lds
mov
ja
loope
out
jg
aam
jmp
pop
outs
sbb
push
xchg
sahf
jne
nop
pop
imul
push
movd
fcomi
scas
(bad)
inc
leave
scas
pop
mov
fidivr
fs
xlat
mov
loopne
(bad)
jb
pop
stos
dec
out
push
mov
sbb
and
into
cmp
dec
xchg
sub
lods
in
clc
lahf
sub
add
push
imul
sbb
adc
ror
mov
jle
out
call
int3
xchg
aam
out
das
cmp
pop
mov
or
cmp
rol
aas
jbe
sub
clc
loope
xchg
call
and
adc
mov
xchg
sub
mov
ja
in
(bad)
push
add
sub
jae
sub
test
aaa
outs
ins
cmc
outs
push
sahf
sub
mov
fbld
scas
call
es
and
pop
dec
bound
ret
scas
add
nop
cmp
hlt
in
mov
adc
int3
xlat
cli
xchg
push
jg
xchg
movs
mov
mov
jecxz
mov
dec
inc
rcr
xchg
das
xchg
sub
cmps
or
push
jae
inc
mov
scas
dec
mov
sub
cmp
lock
mov
and
lods
pop
outs
jmp
add
jmp
push
scas
ins
stos
push
movs
mov
aad
xchg
pusha
out
fadd
fidiv
in
sbb
inc
mov
cmps
pop
arpl
mov
imul
xor
or
mov
jbe
adc
retf
retf
mov
loop
loope
xchg
mov
cli
in
add
cmp
push
push
mov
jns
sbb
dec
xor
das
or
shr
push
pop
inc
test
mov
or
stc
lock
rcr
scas
dec
lods
inc
xor
fnsave
inc
jmp
xchg
pop
pop
mov
sbb
add
inc
dec
xchg
pop
(bad)
pop
addr16
in
and
in
fisubr
out
xchg
out
and
aas
push
out
pop
div
loop
mov
call
jns
jnp
lods
sbb
enter
inc
xchg
push
xlat
and
std
mov
shl
rcr
xchg
aaa
pop
inc
icebp
and
scas
lock
ss
test
fidiv
or
mov
(bad)
lock
jae
pop
cmps
fs
nop
sbb
add
scas
ss
pusha
cmc
and
or
je
outs
push
bound
xlat
retf
aas
fisub
je
mov
and
ror
mov
sar
adc
stos
mov
stos
jmp
aad
dec
popa
mov
pop
cmp
and
lea
pusha
mov
jp
mov
popf
cmp
inc
adc
imul
mov
jns
inc
sub
mov
retf
dec
test
loopne
or
mov
sub
jae
xchg
test
mov
or
test
mov
pushf
lods
fmul
dec
mov
xor
mov
mov
shr
sub
sub
mov
sub
std
xor
sbb
imul
inc
in
cmps
cmp
jmp
sar
pop
pop
call
popf
loopne
or
sahf
mov
sub
daa
sbb
sbb
push
xor
jmp
push
or
add
cmp
cmp
clc
cmps
mov
cld
test
cmp
out
les
xchg
mov
adc
call
aas
cmc
cwde
jae
dec
fisubr
sahf
sbb
call
mov
popa
test
jg
cmp
mov
test
icebp
fmul
pop
stos
loopne
clc
adc
std
loope
daa
xchg
cmp
sbb
mul
ja
loopne
fiadd
shl
mov
popa
cwde
or
fsub
sahf
leave
jg
xchg
sbb
or
loopne
(bad)
adc
jle
movs
sbb
pop
push
sub
xchg
jp
jle
sbb
inc
jno
xor
mov
es
pop
nop
cli
fstp
sub
pushf
retf
or
jmp
jb
mov
xchg
in
arpl
push
mov
int3
inc
aas
mov
jno
pop
mov
test
or
cmc
test
iret
in
arpl
add
out
fwait
int3
out
in
mov
add
adc
mov
popf
hlt
(bad)
jl
imul
mov
ds
aad
sub
ins
xor
mov
dec
jge
xor
sub
or
push
or
push
ja
inc
pop
call
inc
popf
ficomp
sti
aad
sbb
mov
mov
lods
call
jg
adc
cmp
rcl
out
fst
mov
daa
xor
mov
jmp
sbb
xchg
add
test
jle
xchg
fild
pop
out
mov
enterw
cmp
fistp
data16
enter
int
sub
mov
push
fbld
sbb
icebp
imul
popf
test
in
jae
pusha
sbb
cmp
in
int3
pop
test
xchg
jb
mov
stos
bound
jg
aam
rcl
sub
ud1
sbb
loop
jle
std
nop
pop
fst
sub
or
icebp
scas
push
xor
mov
sbb
mov
dec
into
or
fwait
dec
xor
mov
int
or
xchg
mov
jbe
sar
test
jle
mov
or
or
jmp
mov
loope
jmp
and
lods
test
mov
mov
test
inc
iret
outs
jno
hlt
xchg
test
or
pusha
xor
scas
das
cmp
cmp
xchg
add
fmul
test
imul
cmp
cmp
cmps
test
cmp
jecxz
(bad)
ret
push
(bad)
outs
and
push
inc
not
ret
nop
jmp
rcl
xor
ins
mov
pop
dec
pop
imul
push
sbb
idiv
cmps
into
adc
ret
mov
sub
xchg
xor
loopne
mov
cmps
xchg
xor
bnd
adc
jne
popa
iret
jmp
jne
das
aad
lock
inc
mov
jae
cdq
mov
jge
xlat
push
pop
iret
nop
dec
cmc
push
jae
bound
js
retf
xchg
sub
adc
fucomi
fmul
aaa
pop
nop
test
test
jae
imul
lods
or
ds
pop
fidiv
lods
sub
retf
xchg
loopne
cmp
mov
js
mov
sub
aam
xchg
mov
dec
call
outs
adc
test
sub
(bad)
cwde
xchg
test
in
pushf
imul
(bad)
out
cmps
sbb
mov
mov
loopne
adc
push
fsub
jl
sub
int
retf
outs
out
fadd
cmp
xchg
and
lods
lods
imul
mov
iret
paddb
(bad)
movs
popa
fwait
sbb
adc
and
or
and
or
push
jmp
and
test
and
xchg
stos
dec
(bad)
clc
aam
test
dec
daa
prefetch
xchg
sbb
adc
sub
xchg
lea
inc
lods
sbb
mov
aas
push
and
popf
push
shl
xchg
out
inc
aaa
add
cmp
ret
push
jnp
cmpxchg
js
mov
fst
mov
add
shl
xchg
sub
mov
(bad)
mov
mov
adc
fld
clc
nop
lock
fmul
mov
sub
lahf
dec
xlat
outs
(bad)
fwait
movs
mov
js
inc
xchg
mov
test
(bad)
cmp
mov
test
push
fsubr
mov
(bad)
pop
retf
dec
shl
out
inc
test
stc
std
pop
imul
lock
ds
xchg
inc
fld
sub
xor
loope
push
repnz
adc
loopne
sbb
push
cs
scas
sub
lahf
xchg
fsubr
mov
in
mov
fwait
cmp
bnd
sbb
std
jae
pop
out
inc
mul
inc
adc
or
pop
add
movs
sub
jle
xor
mov
out
and
dec
push
xor
push
mov
add
stc
mov
fucomip
es
mov
test
cmp
ss
pusha
xchg
push
pop
test
cmp
add
dec
lahf
jne
fnstcw
out
push
push
cmps
ins
adc
les
mov
mov
aaa
ins
pop
jo
outs
inc
inc
cmc
(bad)
pop
mov
pop
push
lods
and
jns
and
push
push
jb
mov
and
lahf
inc
gs
cmp
inc
add
lods
das
jb
add
stos
dec
mov
push
mov
push
sbb
or
push
sbb
jmp
imul
test
jmp
inc
dec
out
mov
jbe
test
pop
push
sbb
cmp
outs
xchg
cli
cmp
pop
jecxz
mov
mov
push
xor
data16
xchg
imul
xor
cdq
(bad)
cmps
jmp
sub
out
jo
(bad)
add
shr
and
(bad)
repnz
js
rcl
dec
jmp
retfw
push
fucomi
xchg
xchg
dec
arpl
adc
repz
mov
in
pop
test
fwait
fs
sub
and
scas
fwait
inc
jl
loopne
test
in
or
mov
call
fisttp
sub
dec
iret
bound
mov
int3
je
test
ror
and
ret
pop
pop
test
loop
inc
loope
imul
or
jae
cmc
fist
inc
cs
inc
leave
ja
rol
cmp
add
sti
inc
jb
addr16
push
loopne
frstor
test
sahf
adc
or
jmp
out
push
das
jae
(bad)
dec
mov
(bad)
mov
ret
mov
inc
adc
sub
adc
lock
xchg
int
and
cvtpi2ps
jl
jb
(bad)
xor
sbb
cmp
or
rol
cmp
push
addr16
push
xchg
add
or
mov
ret
imul
ins
dec
or
sbb
mov
aas
push
ds
fmul
and
dec
rcr
cmp
xor
aaa
outs
mov
mov
jbe
jnp
dec
shl
scas
retf
xor
xchg
(bad)
in
repnz
xchg
or
jno
mov
cmps
cld
scas
jae
push
pop
ja
jmp
aas
loopne
icebp
mov
xchg
and
bound
outs
jl
jp
repnz
add
in
in
jb
in
add
xor
(bad)
cld
enter
cmp
andnps
push
addr16
dec
(bad)
shl
sbb
push
or
test
adc
outs
cmp
add
imul
mov
push
outs
popf
sti
sbb
or
mov
and
das
not
retf
mov
shr
and
out
stc
jb
int
arpl
call
cmps
fdiv
aad
sbb
mov
mov
test
nop
lock
scas
div
push
lea
inc
ficomp
add
movs
test
jl
sub
fwait
jmp
add
mov
jnp
pop
ins
in
in
jne
les
mov
(bad)
iret
pop
imul
out
sar
test
movs
movs
pop
sbb
push
adc
out
movs
out
imul
mov
mov
fcom
cwde
push
mov
outs
ret
adc
jbe
dec
repz
cmp
jl
(bad)
rcr
cmp
adc
sbb
inc
test
es
sbb
jno
(bad)
(bad)
loope
jecxz
icebp
cmp
push
xchg
int
sbb
ins
shr
ds
pop
gs
dec
cmps
outs
mov
xlat
pop
add
sub
popf
mov
and
mov
ins
or
cmp
inc
cmp
mov
in
adc
pop
cli
sbb
pop
push
cmp
lock
in
rol
mov
pop
inc
jbe
mov
mov
cmp
out
and
shl
adc
cmp
sti
js
jo
sti
std
inc
jmp
or
popa
outs
faddp
fisub
dec
ret
and
lods
mov
dec
jp
cmc
icebp
xchg
jno
rcr
mov
xchg
push
xor
inc
(bad)
jae
(bad)
jnp
mov
ins
mov
retf
loop
xchg
push
sbb
in
stc
repnz
imul
or
clc
adc
scas
inc
rol
adc
movs
jbe
in
repnz
dec
lods
ret
or
jg
js
xchg
movs
pop
movs
dec
jmp
add
inc
leave
mov
test
pmullw
test
add
mov
rcr
push
xchg
test
jbe
in
test
ds
daa
xchg
dec
jl
pop
jmp
adc
ret
retf
inc
fild
out
jno
push
push
adc
shr
sbb
xor
sbb
add
data16
jmp
aaa
sub
cdq
retf
jae
into
jb
or
es
rcr
or
scas
dec
jge
lock
nop
mov
call
mov
jae
les
dec
daa
or
xchg
mov
mov
xchg
or
fistp
jo
scas
jne
adc
fmul
fwait
into
jp
pop
and
fldenv
sub
int3
mov
adc
adc
imul
pop
or
loop
sub
and
mov
hlt
xchg
inc
out
mov
or
(bad)
mov
pop
adc
add
sbb
mov
push
mov
out
adc
inc
fs
popf
lods
push
rcr
fisubr
imul
or
sbb
jns
cmps
adc
and
std
test
mov
and
not
pop
sbb
push
xor
push
push
pop
lods
jno
add
add
push
jmp
lahf
pop
xor
fistp
(bad)
push
cmp
jae
rcr
dec
(bad)
jb
enter
gs
mov
mov
push
push
js
xchg
(bad)
cdq
bnd
mov
cdq
and
cld
jo
test
add
cli
inc
(bad)
mov
sub
repz
lahf
pop
int
lock
xchg
push
or
jbe
mov
jns
repz
push
fwait
mov
sbb
fadd
sub
call
fbstp
shr
dec
xchg
out
fwait
in
je
pop
mov
vcvtss2si
sahf
sbb
add
stc
movs
xchg
or
or
lods
in
ja
clc
dec
xlat
popa
inc
inc
shr
fdivrp
add
or
iret
int3
sub
push
push
lds
stos
retf
shl
fisub
repnz
dec
dec
xor
mov
mov
inc
aaa
add
or
fcomp
arpl
adc
mov
aaa
push
sbb
sub
inc
scas
xchg
pop
repnz
mov
or
test
push
sub
pop
adc
add
loopne
sub
aaa
shl
xchg
push
nop
jo
mov
dec
jne
inc
mov
fbld
in
loope
les
dec
repnz
sub
pop
sub
jnp
clc
mov
call
push
mov
aaa
or
pushf
outs
in
test
frstor
mov
mov
jl
inc
pop
mov
outs
imul
push
sub
and
mov
jle
push
movs
hlt
ret
jmp
hlt
popf
push
cwde
push
push
loop
jno
shr
mov
lods
std
in
mov
add
and
mov
sub
jmp
dec
sbb
push
mov
pop
jae
shl
ds
or
test
mov
retf
pop
jmp
jg
xchg
call
sti
daa
jmp
not
ja
sub
fs
xor
inc
xchg
inc
scas
inc
inc
bswap
and
popf
jbe
adc
out
push
jns
mov
cs
cmp
stos
rcr
sub
mov
je
mov
xor
lods
mov
dec
jne
mov
test
and
sub
sub
stos
adc
sub
jle
(bad)
in
pushf
dec
adc
push
or
lea
repnz
mov
pop
popa
ss
call
iret
sbb
push
inc
push
adc
and
and
adc
mov
jb
ja
jge
jmp
xchg
pop
cmps
cmps
ja
xor
dec
dec
jno
div
sub
retf
pop
(bad)
sub
in
repnz
shl
fidivr
jae
and
xor
aam
movs
or
and
std
rol
adc
xchg
mov
das
or
cwde
or
inc
adc
dec
daa
mov
pushw
and
pop
daa
fisttp
es
mov
mov
ret
in
inc
cmp
mov
mov
(bad)
(bad)
push
int3
inc
xchg
imul
lds
js
mul
movs
xchg
sub
(bad)
enter
and
fchs
in
xor
clc
adc
fsubr
dec
push
fimul
jne
adc
js
nop
mov
add
sahf
sbb
clc
mov
mov
out
outs
pop
(bad)
retf
mov
ret
clc
sub
ja
push
sti
and
outs
pop
sub
hlt
push
(bad)
sbb
(bad)
cmp
fsubr
mov
mov
sbb
mov
mov
bound
add
daa
and
xchg
repz
mov
ret
fsubrp
or
inc
lock
adc
dec
shr
jb
mov
mov
jl
pop
xor
jae
or
xlat
mov
pop
fistp
loope
or
ror
push
inc
sub
pushf
dec
ret
fs
jmp
cmp
stos
pop
inc
fs
fist
add
mov
(bad)
int3
adc
mov
ins
mov
iret
push
fsub
xor
inc
repnz
out
lods
ja
or
mov
adc
aas
ins
nop
xchg
pop
xchg
fwait
int
inc
into
cmp
fstp
xor
daa
xor
sti
mov
or
push
call
movs
push
(bad)
xor
leave
std
mov
xor
fnstenv
(bad)
dec
movs
dec
shl
sbb
mov
test
repz
lock
xor
add
adc
rol
dec
mov
ror
xchg
dec
xchg
idiv
outs
mov
imul
adc
(bad)
outs
gs
inc
fdivrp
or
push
or
test
add
jge
push
hlt
jno
xor
dec
sub
fs
lds
and
scas
adc
loopne
mov
out
scas
and
ror
fistp
xchg
setns
or
scas
scas
xchg
pop
bound
inc
gs
mov
sub
xlat
into
ret
ins
out
jmp
mov
mov
js
sbb
stos
std
fmul
jnp
sbb
sub
jmp
or
sbb
leave
mov
add
pop
inc
loopne
loop
fistp
add
cmc
sar
jmp
jecxz
xor
cmp
cld
mov
mov
mov
pop
inc
sub
and
sbb
xchg
pop
or
mov
inc
pop
jle
rcr
fnsave
cmp
(bad)
out
test
sub
out
bound
rol
jmp
xor
pop
cwde
lds
push
outs
or
jno
push
das
xor
mov
lods
popf
mov
imul
and
push
inc
xchg
fyl2x
dec
rol
push
push
inc
cmp
ins
test
mov
cmp
js
push
mov
add
in
or
clc
sahf
jmp
jo
loop
sub
inc
xchg
outs
lea
je
xchg
pushf
cmp
les
and
add
xor
fist
xchg
sub
cmps
jp
dec
in
ja
cmp
rol
cmp
les
mov
fisub
dec
out
mov
fwait
mov
mov
ins
add
rcl
xor
rol
sub
add
pop
inc
or
or
jno
jmp
mov
test
mov
mov
enter
push
mov
fild
inc
or
pop
xchg
test
mov
movs
jnp
add
inc
jbe
push
push
xchg
xchg
icebp
in
or
mov
mov
sub
out
push
mov
sub
imul
rcr
jp
jl
leave
cmp
aam
inc
add
sbb
xor
jae
dec
ss
popf
jb
push
mov
or
aam
bound
adc
push
sbb
mov
xchg
mov
cmp
pop
sbb
rcl
dec
jbe
mov
push
pop
jo
mov
or
int3
push
mov
sbb
shl
in
mov
sbb
jmp
mov
lahf
inc
bound
cmc
sbb
xchg
mov
jle
cmc
shl
push
or
add
sbb
or
lock
retf
leave
in
dec
adc
and
int3
call
mov
repnz
sub
sub
and
(bad)
fld
stos
pop
xlat
(bad)
and
xchg
lds
sbb
or
ret
sbb
fmul
cld
popw
sti
inc
xchg
and
ror
jge
(bad)
sbb
xchg
sbb
enter
in
sub
addr16
jmp
pop
mov
jle
ins
(bad)
push
je
push
dec
pop
into
xchg
div
(bad)
mov
dec
push
aas
push
les
es
xchg
shl
or
mov
sbb
icebp
inc
sub
(bad)
(bad)
rcr
push
pushf
pusha
push
call
mov
push
push
mov
jmp
aam
in
aam
jl
push
dec
or
inc
bswap
adc
je
xor
pop
fisubr
jno
jne
push
fnstenv
mov
jmp
jg
fndisi(8087
int
pop
int
xor
ins
popf
inc
push
xchg
(bad)
jae
push
leave
test
jno
add
inc
push
mov
in
mov
aam
xchg
sub
(bad)
movs
retf
cmp
out
mov
addr16
js
aaa
(bad)
rcl
sub
push
fisubr
xor
ret
mov
(bad)
cmc
outs
and
xor
adc
jl
xor
or
mov
cli
pop
cmps
cmp
or
movs
lahf
cmc
xor
push
mov
push
nop
mov
cmp
mov
in
(bad)
scas
mov
imul
mov
lock
push
cmps
scas
cmp
repz
fmul
gs
data16
jo
inc
ins
loopne
dec
mov
and
xor
and
jp
lods
cmp
jno
sbb
mov
mov
xor
imul
add
push
into
lea
jge
adc
stc
mov
cmps
jae
in
jg
cmp
or
jmp
sub
(bad)
scas
ja
bound
rcl
cmp
movs
sub
mov
mov
xchg
mov
mov
cmc
push
mov
cmp
sbb
in
movs
mov
(bad)
and
inc
push
push
hlt
jmp
jb
jno
cmp
and
push
xchg
add
adc
out
push
mov
jns
repz
cmova
xor
rcl
pop
push
int3
scas
sub
xchg
inc
fnstenv
adc
pop
add
adc
popa
sub
push
call
push
int
dec
(bad)
ss
inc
popf
arpl
sbb
xchg
fild
sub
mov
out
push
cdq
or
xchg
and
movaps
mov
mov
js
jo
xchg
push
stc
cmp
cmp
push
sbb
pop
dec
add
leave
add
or
jbe
push
push
mov
adc
test
(bad)
fcomp
mov
mov
push
add
adc
mov
daa
mov
in
pop
jae
jne
repz
jns
add
push
neg
inc
add
adc
loope
add
push
mov
xlat
jp
out
or
pusha
adc
xor
adc
xchg
jns
cmps
sbb
pop
lahf
push
pop
outs
xchg
div
mov
repnz
mov
jo
dec
adc
mov
cmp
mov
out
div
mov
pushf
int3
xchg
xchg
add
cmp
clc
mov
test
das
or
rol
dec
lods
ror
push
or
shl
data16
icebp
(bad)
std
sahf
mov
in
ret
jns
xchg
dec
fld
cli
jmp
ins
test
test
jno
mov
pusha
dec
int3
or
sahf
xor
ret
adc
and
adc
popf
(bad)
out
mov
mov
or
push
sti
cmp
movs
or
xchg
test
arpl
je
arpl
add
cmp
sub
nop
out
sahf
test
pop
scas
(bad)
idiv
cmp
outs
mov
push
dec
add
lea
xor
jle
push
push
ss
bound
pushf
(bad)
mov
scas
pop
mov
arpl
les
push
call
inc
data16
mov
dec
jae
iret
gs
cmp
mov
ins
inc
fistp
sub
lds
retf
ins
leave
aas
ins
sub
pop
aaa
gs
jae
fwait
hlt
sti
mov
jne
sbb
call
pop
in
xor
stos
out
add
or
repnz
xchg
pop
fsub
pop
cmp
xchg
mov
mov
(bad)
das
xchg
movs
cs
cmp
loope
xor
mov
xor
adc
cs
out
sub
aaa
pop
int3
int3
sub
push
dec
pop
xor
mov
cwde
enter
mov
icebp
fcomp
stos
cmp
retf
fsub
sbb
pop
enter
shr
dec
idiv
adc
int
xor
mov
aaa
mov
stc
outs
sbb
mov
clc
xchg
call
pop
cmp
shr
pop
stos
aad
iret
adc
shl
adc
neg
push
aaa
push
out
cmp
mov
mov
push
popf
test
popf
xchg
out
(bad)
mov
mov
add
cmp
mov
mov
pop
mov
sbb
in
pop
test
mov
int
aam
je
ret
cmovs
push
retf
daa
iret
push
cmp
outs
adc
sub
outs
(bad)
cmps
imul
adc
inc
call
cmp
or
outs
in
or
dec
inc
scas
ins
out
prefetchnta
xor
jl
sub
dec
retf
jmp
mov
sbb
push
pop
cmps
pop
jle
mov
scas
pop
rcr
jne
inc
add
push
mov
cmp
cmc
xor
push
dec
test
mov
inc
push
jmp
in
xor
inc
add
xlat
jns
mov
fsub
inc
xchg
fs
push
sub
dec
pop
sub
and
loope
push
add
push
jge
cmp
paddsw
inc
inc
inc
fwait
inc
imul
mov
lods
jge
mov
loope
stos
(bad)
mov
or
pop
in
pushf
pop
adc
or
inc
out
jnp
retf
or
pop
in
mov
and
fiadd
sub
fdivr
push
outs
dec
je
ins
and
icebp
imul
les
mov
jns
add
cli
dec
push
mov
pop
scas
xchg
adc
pop
imul
mov
das
fist
xchg
mov
and
sbb
shl
stos
loope
fcmovne
addr16
les
lods
(bad)
imul
inc
cmp
pop
dec
xchg
bound
pop
pop
push
mov
dec
mov
push
gs
inc
sbb
sar
cmp
inc
dec
pop
jmp
popf
hlt
repnz
not
pusha
push
mov
aam
shl
sahf
movs
mov
lock
pop
cdq
mov
jae
test
out
iret
shr
xor
in
pop
push
stos
xor
rol
sub
jmp
xor
mov
push
jae
xchg
cld
aam
sbb
addr16
and
push
(bad)
sti
inc
aas
mov
add
ins
inc
or
cmps
mov
push
lahf
and
dec
or
dec
pop
stos
add
pop
xor
lods
cs
pop
lea
das
ret
arpl
dec
stos
xchg
xor
pop
aam
sbb
in
pusha
push
(bad)
cmp
sub
fistp
popa
cmp
cmp
inc
repz
push
cmp
retf
xchg
nop
out
add
jmp
adc
dec
adc
pop
mov
cmp
retf
mov
pop
std
in
push
sbb
mov
nop
jp
test
scas
sub
add
(bad)
xchg
sub
test
or
mov
movs
imul
pop
jmp
push
cmp
imul
pusha
jno
clc
ror
inc
arpl
push
dec
xchg
adc
aam
mov
clc
jo
call
pop
jecxz
out
in
nop
rol
jns
push
inc
mov
inc
and
es
or
xor
mov
mov
mov
js
push
and
adc
add
lods
mov
sbb
sbb
sub
test
cmp
sbb
call
dec
das
shl
mov
ret
movs
inc
inc
out
stc
in
test
mov
hlt
loop
or
add
sub
popa
loopne
rol
stc
aaa
icebp
sub
ret
movs
cs
cmp
jmp
jle
outs
inc
push
mov
loop
mov
jne
dec
mov
jmp
out
xor
pop
in
pop
jmp
sub
mov
sbb
push
cli
add
jne
push
lahf
movs
push
shl
outs
push
fild
cmp
cmp
push
dec
jno
and
ins
shr
lea
ins
xor
pop
inc
or
bound
not
call
pusha
mov
in
into
pop
out
cmp
pop
and
repz
scas
dec
cmps
dec
cmp
inc
adc
mov
mov
push
xchg
jne
dec
mov
jmp
sbb
sub
xor
sbb
rcr
loopne
jp
xchg
ds
xchg
mov
push
add
inc
popa
sub
push
or
jmp
cdq
pop
test
mul
add
popf
loop
push
cdq
mov
adc
or
pop
jae
scas
out
push
lods
mov
sub
and
jecxz
ins
xor
nop
and
xchg
or
jns
cmps
in
ret
out
cmp
test
pop
inc
inc
jge
xor
cmp
inc
mov
jge
xlat
mov
mov
sub
inc
mov
dec
cli
inc
shl
inc
add
mov
ret
mov
out
aad
mov
push
inc
mov
(bad)
mov
sub
adc
gs
jmp
gs
aam
iret
pop
and
pop
jo
stos
jb
push
jb
stos
pop
retf
cmp
mov
sub
cli
xchg
fxch
jbe
adc
xchg
inc
jmp
jge
inc
cwde
int3
mov
hlt
and
imul
sbb
gs
scas
(bad)
rcr
cs
push
xchg
adc
shr
nop
or
and
sbb
xchg
std
inc
mov
or
push
mov
pop
mov
pop
into
jmp
pop
jmp
aaa
nop
mov
ds
jmp
xor
pop
sbb
clc
pop
jmp
xor
and
imul
ja
push
imul
out
fdivr
mov
jle
sub
and
push
mov
stc
adc
sub
rcl
retf
pop
and
daa
sub
ror
sbb
adc
cdq
out
mov
cmc
into
movs
mov
jbe
mov
mov
imul
or
push
out
sbb
and
mov
mov
stc
jmp
jae
addr16
ins
jno
pop
repnz
addr16
adc
xchg
call
xchg
in
sub
cmp
push
xlat
fstp
ret
(bad)
mov
ror
ja
push
lods
pop
cdq
arpl
loop
and
mov
xchg
jl
jno
mov
mov
push
clc
mov
dec
int
mov
push
jmp
call
xor
je
mov
add
test
imul
sbb
aad
test
mov
ror
push
or
mov
aad
pushf
ins
jmp
mov
xor
pop
and
pushf
dec
idiv
scas
pop
xchg
jge
nop
inc
mov
pop
repz
fs
nop
je
jnp
outs
push
push
sub
add
iret
bound
add
std
mov
cli
xchg
cmps
mov
xchg
or
mov
mov
iret
rcl
stc
sub
in
adc
gs
or
neg
idiv
mov
pop
icebp
rcr
ret
into
mov
push
out
and
push
aad
cmp
mul
cmp
mov
aas
xor
xor
or
(bad)
xor
sbb
call
mov
out
jns
and
daa
xor
push
mov
sbb
mov
push
or
sub
sub
jnp
aaa
cmps
inc
cmps
dec
into
(bad)
and
nop
sbb
or
adc
xor
sub
or
add
popaw
pop
int
dec
call
sub
cld
add
cdq
idiv
cdq
clc
cmp
dec
call
xor
shl
mov
out
push
xchg
pop
ss
xor
and
(bad)
jg
or
std
sbb
sub
jmp
(bad)
jle
cli
sbb
pop
or
ins
enter
not
fs
leave
push
movs
sbb
mov
stos
and
add
mov
jns
add
mov
push
sbb
std
arpl
(bad)
imul
inc
xor
fbld
fldcw
adc
xchg
call
std
mov
int
dec
push
pop
imul
fisubr
sbb
mov
call
xchg
cdq
leave
mov
mov
push
adc
mov
loop
mov
sub
jo
mov
sbb
(bad)
lahf
xchg
mov
call
arpl
or
aaa
int3
ins
mov
invd
mov
sbb
push
lds
not
push
xchg
push
mov
and
sbb
enter
ins
jecxz
jge
adc
mov
aaa
idiv
(bad)
(bad)
push
mov
pop
dec
fcmovnu
xor
out
pop
sub
xlat
sbb
int3
mov
and
pop
sub
in
fistp
stos
mov
mov
jg
push
call
mov
cli
inc
sub
stos
xchg
push
push
rcr
sahf
cmp
(bad)
in
add
outs
imul
int3
mov
mov
jns
inc
or
rcr
mov
rol
push
movs
xor
or
call
xchg
sbb
(bad)
fstp
xlat
pop
xchg
jp
add
mov
jl
xchg
arpl
iret
mov
sbb
out
jecxz
movs
lods
shl
push
mov
imul
inc
mov
pop
jbe
mov
xor
dec
je
dec
mov
in
test
sbb
hlt
dec
sub
in
ror
das
out
push
shr
pushf
jg
mov
jmp
call
add
cmp
xchg
out
clc
pop
cmp
mov
sbb
and
push
sub
es
push
lds
xlat
(bad)
cmp
dec
test
sbb
psrld
fsub
dec
xor
aaa
dec
jae
sub
add
mov
pop
sub
mov
rol
sbb
pop
mov
gs
mov
push
out
jmp
clc
loopne
adc
bound
adc
jbe
push
xchg
fwait
or
call
jno
sbb
je
push
fst
pop
mov
sub
scas
pop
mov
add
cmp
mov
mov
cmp
in
mov
xchg
mov
jle
(bad)
cs
lods
arpl
jmp
stos
fcmovbe
xor
shr
sbb
test
pop
cmp
pop
mov
ror
pop
and
pop
icebp
mov
xchg
ret
shl
in
cmps
pusha
push
repnz
push
xor
test
stc
jb
xchg
pop
int
loopne
push
clc
sub
ja
(bad)
(bad)
(bad)
out
or
int
sbb
adc
sub
push
shr
(bad)
mov
nop
mov
fwait
or
pop
or
xor
xchg
mov
les
dec
push
add
xor
call
mov
fwait
mov
cli
mov
in
jg
cwde
hlt
xlat
jmp
fcomp
cwde
cmp
mov
push
addr16
dec
and
push
jecxz
xor
or
mov
lods
pop
pushf
adc
in
jmp
mov
sbb
mov
into
or
loope
add
retf
jg
jnp
xchg
xchg
aas
ret
test
add
and
inc
mov
pop
and
or
add
adc
loopne
push
cmp
xchg
jae
push
fcom
jl
pop
lea
xchg
mov
fwait
mov
sub
popf
inc
in
bound
pop
fwait
(bad)
stc
cmc
sar
xor
jmp
add
or
imul
sbb
mov
mov
fsub
stos
in
imul
mov
repnz
dec
pushf
mov
lahf
inc
arpl
shl
bnd
pop
ror
mov
arpl
dec
pushf
mov
(bad)
pop
es
or
fcom
mov
mov
call
push
fadd
lock
jns
jno
out
cmc
mov
pop
shr
rol
push
xchg
sbb
or
jmp
cs
call
pop
stos
(bad)
outs
jl
leave
xor
or
and
pop
mov
xchg
stc
out
sub
out
lds
inc
jb
add
(bad)
not
(bad)
rol
adc
ret
inc
cmps
cmp
cmp
shr
add
or
adc
in
outs
daa
pushf
lahf
pop
imul
(bad)
repz
inc
jnp
mov
iret
fucomip
in
xchg
in
int3
out
pop
sub
jne
clc
push
xor
pop
mov
or
push
cmp
out
imul
in
pop
popf
test
or
mov
dec
das
(bad)
sti
mov
cdq
sub
xor
or
mov
and
outs
mov
cmps
add
fmul
jnp
iret
stos
mov
sahf
xor
mov
or
mov
jmp
lods
push
xor
bound
jne
retf
mov
mov
stos
adc
out
jmp
pushf
sbb
inc
sub
jbe
fwait
and
pop
lods
pop
jmp
xchg
(bad)
xor
mov
jo
mov
mov
retf
fbld
jbe
retf
jge
push
mov
fidiv
sbb
ja
imul
into
sahf
xor
mov
sbb
pusha
push
sbb
bound
xlat
inc
cld
pop
jne
arpl
ja
pop
fnstsw
pop
sbb
mov
sahf
(bad)
sti
cmp
out
pop
dec
inc
cmp
(bad)
out
cmp
jne
mov
inc
inc
mov
ret
sub
jge
cwde
push
sbb
stos
jmp
(bad)
mov
adc
and
aam
fsub
push
and
mov
xor
nop
cli
test
mov
es
and
xor
push
sbb
fldcw
xchg
push
(bad)
and
adc
jp
aad
addr16
cmp
lods
sub
mov
stos
dec
fidiv
inc
(bad)
push
xchg
out
pop
fsubp
pushf
or
test
fistp
in
or
add
mov
js
inc
ror
lea
dec
clc
aaa
ja
out
call
in
add
(bad)
fs
test
fild
in
movs
jbe
sub
cmp
rol
adc
lods
pop
(bad)
in
scas
pusha
push
and
arpl
ja
sub
cmp
cmp
push
idiv
push
mov
sbb
aad
xchg
jle
dec
jmp
cmc
dec
retf
or
cmp
jle
xchg
jle
cmp
inc
cmc
xlat
push
movs
addr16
mov
ds
xor
adc
xchg
loop
ins
mov
xchg
pusha
cmps
mov
cmp
mov
jecxz
or
lahf
test
push
adc
mov
add
inc
mov
adc
push
mov
mov
test
rcr
adc
mov
jns
pusha
in
repnz
mov
dec
or
jo
jae
pushf
pop
shl
pop
mov
je
ja
in
xchg
ins
or
fwait
adc
loopne
dec
xor
into
sbb
xor
jp
mov
add
psrad
or
mov
xchg
pop
mov
stc
sbb
xchg
jne
push
bound
adc
call
or
loope
jae
loope
inc
pop
mov
loope
push
shl
and
adc
mov
mov
(bad)
enter
xchg
jne
lock
push
lods
adc
repnz
sub
push
dec
rol
dec
cs
sar
and
and
popf
out
push
pop
cmp
out
xor
ret
mov
jmp
ins
pop
mov
jle
(bad)
es
push
cmps
push
sbb
add
daa
jo
add
mov
test
in
out
mov
imul
(bad)
outs
shl
pop
in
cmp
inc
push
rcl
cmps
push
mov
or
mov
push
sar
sub
mov
daa
push
popf
push
call
mov
dec
add
ficomp
gs
mov
test
fbld
sti
bound
jnp
mov
jb
jp
outs
or
(bad)
dec
mov
xchg
out
pusha
dec
adc
cmp
jl
ret
dec
inc
arpl
mov
push
mov
repz
rcl
and
jl
push
dec
test
ins
push
mov
xchg
(bad)
mov
jne
and
int3
les
add
push
pop
jmp
pop
xchg
ret
aas
fisubr
hlt
ja
sub
(bad)
(bad)
(bad)
out
leave
test
or
cmp
mov
and
xchg
and
fwait
mov
(bad)
pop
xchg
push
dec
out
fidivr
shl
push
cmps
push
rcr
or
out
stos
mov
(bad)
jmp
jo
jae
mov
imul
pop
in
push
cmp
imul
mov
fdivr
(bad)
inc
xor
and
popa
mov
ins
xor
cmp
fadd
int3
jmp
jge
in
setbe
dec
cs
leave
cld
das
cwde
mov
inc
ja
cmp
push
stc
pop
pop
mov
push
movs
pop
mov
inc
imul
add
xor
mov
jb
cwde
ret
and
std
addr16
in
xor
lea
(bad)
adc
jp
leave
xchg
pop
or
jl
xchg
loopne
mov
add
adc
loopne
lock
pop
sub
jmp
dec
test
or
mov
push
pop
jno
fisttp
das
shl
fidiv
jp
mov
mov
shr
pop
lea
pop
push
sub
mov
mov
mov
add
pop
xchg
test
rcr
pop
dec
rol
ss
cmp
or
(bad)
rep
add
sbb
cmp
adc
(bad)
and
into
jb
xor
hlt
(bad)
call
xor
inc
fwait
inc
jecxz
pop
fistp
push
adc
push
rol
int
jmp
cld
clc
loop
and
les
and
lss
xchg
mov
cmp
pop
out
loope
and
rol
imul
call
cs
jmp
and
add
and
iret
repz
stos
ins
inc
icebp
and
or
fcomp
aas
mov
push
lods
pusha
or
ss
mov
and
add
popa
ja
loopne
jg
inc
cmp
ds
daa
in
in
ret
(bad)
cmp
in
inc
sbb
pop
pushf
sti
scas
popf
mov
jnp
mov
push
(bad)
sub
in
pusha
psrad
cmps
pop
cmp
pusha
jl
cmp
mov
lahf
add
mov
and
(bad)
inc
jae
fxam
xchg
mov
outs
cmp
jno
loop
lea
sub
fild
sbb
cs
ja
pop
xor
mov
fndisi(8087
(bad)
xor
loop
das
mov
(bad)
retf
cmps
and
in
rol
cld
mov
out
inc
mov
pop
inc
aad
das
outs
out
mov
inc
addr16
int
aam
mov
loopne
movs
push
xor
dec
(bad)
sub
and
ja
leave
pop
in
jno
mov
xor
stos
sbb
push
mov
mov
arpl
jmp
cdq
inc
es
adc
fisttp
retf
add
and
dec
jmp
dec
pop
xor
push
mov
or
push
jmp
test
dec
xchg
mov
mov
js
sub
mov
dec
int
fiadd
ror
scas
repz
pop
or
enter
cwde
add
out
and
add
rcr
fidiv
mov
pop
pusha
mov
ja
jge
sar
xor
jnp
add
push
pop
push
outs
leave
int
out
test
mov
fwait
icebp
sbb
mov
and
jecxz
sbb
call
xchg
pop
xchg
js
pop
pop
call
(bad)
nop
xor
clc
in
mov
xchg
mov
movs
in
push
sbb
test
test
or
pop
out
xchg
ds
xchg
(bad)
aaa
shr
out
icebp
dec
cdq
mov
bound
push
stos
ja
mov
jmp
mov
push
iret
ror
movs
jle
(bad)
push
popa
loop
xchg
mov
push
aad
addr16
fstp
stos
pop
imul
sbb
cs
js
pop
iret
xor
xor
mov
test
scas
(bad)
mov
sbb
outs
jne
xchg
and
pop
mov
sbb
daa
int
pop
dec
xor
scas
inc
pop
stos
adc
mov
sbb
adc
stos
inc
ret
add
jne
inc
pop
test
dec
and
mov
lock
into
dec
inc
or
and
cli
not
movs
sbb
out
mov
sub
and
movs
push
or
popa
sahf
out
cmps
dec
jne
pop
jne
mov
lods
loope
in
data16
jmp
jmp
jp
push
retf
enter
fs
out
push
mov
out
jge
or
mov
jns
ror
pop
xor
clc
inc
xchg
xchg
xchg
mov
dec
out
fidivr
addr16
fisubr
lods
cmps
sub
adc
loope
outs
xchg
xchg
std
retf
inc
or
popf
pop
test
lea
pop
mov
enter
aad
sub
pop
dec
in
mov
inc
(bad)
jmp
cmp
fist
in
mov
xchg
jg
cmp
fidiv
mov
rcl
mov
or
xchg
add
cmp
gs
mov
mov
push
fidivr
xor
cmp
pop
jmp
fwait
xchg
jmp
sub
js
clc
push
cs
retf
jmp
inc
(bad)
push
mov
les
mov
or
mov
jp
rol
cmc
jl
dec
dec
inc
cmp
bnd
push
push
stos
jmp
int
xchg
mov
cs
dec
mov
jge
popf
(bad)
mov
pop
fdivr
ds
pop
sti
and
retf
scas
(bad)
in
(bad)
lods
sub
xor
fsub
jmp
fwait
xchg
test
cmp
push
cmp
in
push
fcmovbe
mov
test
imul
adc
xchg
test
and
adc
ror
jle
aas
aaa
cmp
xchg
cmp
(bad)
cmp
pop
iret
mov
(bad)
aad
lods
push
fsub
cmp
adc
mov
push
sbb
test
jo
push
ret
(bad)
pop
sub
sar
push
inc
xchg
ins
push
fcom
out
(bad)
push
jmp
setnp
and
push
inc
jne
frstor
inc
outs
or
lods
sub
mov
inc
(bad)
sbb
mov
cmp
mov
jmp
imul
jo
mov
outs
or
(bad)
outs
cmps
push
mov
or
dec
je
mov
mov
das
inc
mov
push
xchg
stos
push
in
mov
jb
das
cmp
jnp
gs
cld
int
outs
pop
xchg
xchg
push
mov
or
sbb
cli
loop
adc
inc
test
inc
adc
test
dec
cmps
fs
fldcw
mov
aaa
dec
aam
cmp
xchg
or
and
add
jg
into
ret
push
add
mov
ffreep
jmp
pop
dec
or
fist
in
faddp
adc
mov
mov
mov
pop
push
rcr
adc
xor
sbb
imul
mov
icebp
add
inc
imul
inc
xchg
add
out
ret
aad
shr
mov
ret
outs
hlt
outs
sti
cwde
add
sub
cli
jmp
repz
xchg
test
cmp
stc
mov
(bad)
mov
pop
inc
mov
and
mov
out
aas
sbb
add
jg
push
(bad)
mov
addr16
aas
aas
ins
sub
add
xor
jns
inc
sub
inc
pop
inc
and
iret
scas
int
addr16
mov
sbb
cmp
or
sub
lods
mov
loop
jmp
jmp
jbe
test
idiv
jmp
jmp
inc
ret
adc
sar
sbb
test
mov
and
cs
or
dec
or
js
pop
mov
jae
ss
mov
(bad)
shl
push
pop
rcl
sahf
cmp
mov
jbe
adc
sar
ret
pop
push
xor
out
and
sub
xchg
mov
inc
movs
xchg
cmps
sar
or
xor
rcr
in
mov
sbb
pop
mov
mov
lahf
xchg
cli
push
jne
sbb
pop
sub
adc
inc
ins
int3
into
fadd
cwde
sbb
adc
and
sub
mov
and
mov
loopne
mov
(bad)
dec
push
call
jo
xor
cmp
dec
(bad)
jecxz
cli
jbe
adc
push
xor
fist
jg
push
jae
test
and
iret
mov
sti
jo
mov
jno
sbb
out
inc
movs
inc
sub
ja
cld
imul
inc
gs
or
pop
adc
adc
xchg
mov
xor
dec
or
js
icebp
add
adc
fwait
inc
push
or
(bad)
pop
js
mul
inc
test
dec
outs
push
mov
or
das
and
cmp
(bad)
hlt
xor
mov
sbb
xchg
fs
(bad)
jg
ret
add
xchg
(bad)
(bad)
mov
sar
inc
dec
push
lods
sbb
ins
mov
daa
rcr
movs
jge
sbb
in
sbb
aas
push
push
dec
outs
pop
mov
cmps
movs
shl
lock
mov
add
cwde
jb
pop
or
repnz
lods
xchg
and
or
xchg
inc
jae
mov
push
cmps
lods
xchg
sub
cdq
dec
fucomp
mov
push
mov
push
cmp
and
cmp
or
sub
jne
fldcw
fwait
pop
mov
xor
jle
inc
add
leave
sub
inc
and
dec
test
iret
xchg
mov
retf
or
jbe
jl
dec
push
xchg
mov
bound
jmp
xchg
mov
rcr
dec
mov
icebp
daa
adc
hlt
pop
mov
pop
out
ja
imul
xor
push
cmp
sub
adc
(bad)
shl
xor
mov
pop
push
scas
pop
(bad)
push
iret
in
add
ss
xchg
and
inc
inc
sahf
je
xor
cmp
add
jno
je
push
xor
jp
sub
cmp
mov
fsubr
outs
fsubrp
lds
sbb
add
xor
aad
fucomi
push
inc
scas
std
lea
in
sub
push
mov
gs
pushf
dec
push
xor
cld
popf
in
je
jg
aas
hlt
xchg
cld
lea
mov
cmc
leave
mov
daa
xchg
xor
sbb
cmp
jne
push
cmp
pop
or
enter
aad
imul
iret
(bad)
in
stos
dec
adc
cmp
loop
jns
adc
out
push
jp
mov
pop
clc
mov
je
dec
cmp
cmp
test
sbb
mov
mov
loopne
add
mov
aas
add
stc
rcr
sbb
repz
sbb
iretw
gs
mov
mov
retf
cwde
ds
lds
js
pop
pop
dec
popf
mov
jno
push
data16
shl
popa
int3
enter
add
mov
movs
push
mov
mov
retf
loopne
xlat
cs
jl
in
rcl
out
cmp
jno
or
xchg
xor
sub
pop
push
mov
repnz
xchg
mov
mov
dec
loopne
adc
xor
mov
push
sbb
test
in
add
scas
mov
pop
imul
or
out
adc
jns
dec
fbstp
inc
push
mov
xchg
inc
dec
push
xor
push
inc
into
push
popfw
xlat
jno
dec
pop
iret
aam
rcl
dec
int3
pop
pop
ret
mov
cmp
pop
test
or
pop
add
jae
sar
retf
dec
inc
pop
or
in
repnz
ins
inc
cmp
int
sbb
in
loop
nop
adc
(bad)
std
addr16
add
lods
push
pop
retf
dec
test
mov
loopne
shl
inc
pop
gs
stos
dec
adc
cmp
xchg
cmc
bound
out
add
sbb
les
and
sahf
repz
js
add
retf
ss
add
repz
xor
cmps
shr
xor
scas
push
inc
inc
test
gs
hlt
and
je
out
out
in
rol
push
inc
popa
add
les
iret
xchg
add
sbb
test
into
outs
xor
pop
pop
repz
push
cmps
jno
jg
adc
je
out
adc
outs
push
or
lahf
and
out
pop
or
dec
cmp
jae
dec
sbb
jns
mov
or
push
sbb
mov
js
ins
jb
mov
shl
mov
(bad)
call
(bad)
pop
in
or
add
xor
lods
jno
xchg
sub
and
and
mov
cmp
lods
cmc
push
mov
sub
xor
stc
sub
shr
out
cmp
push
adc
in
outs
cmp
xchg
or
clc
test
cmp
cmp
addr16
gs
call
cmp
xor
and
push
or
jmp
ins
data16
cmp
cmp
aas
mov
dec
dec
stos
adc
jns
and
test
mov
jle
mov
xchg
retf
sub
outs
pop
mov
xor
sbb
inc
lock
(bad)
dec
test
or
mov
and
in
movs
ret
cmc
mov
ins
fadd
dec
jmp
iret
lea
and
clc
jg
push
xor
pop
fiadd
pop
and
sub
dec
test
loope
ret
outs
stos
ja
(bad)
hlt
and
out
mov
push
mov
sbb
out
popf
rcl
js
jecxz
mov
loop
jmp
loope
adc
cld
ror
add
stos
inc
enter
cmp
pusha
cmp
lods
cmp
dec
pop
mov
add
pop
(bad)
in
sub
jae
mov
mov
ret
(bad)
cld
push
adc
mov
gs
aad
add
push
shl
int
pop
daa
xor
inc
call
mov
mov
pop
in
xchg
cs
cmp
ficom
imul
sbb
xchg
imul
(bad)
xchg
add
jmp
mov
cmp
add
push
test
ss
xchg
(bad)
loop
and
loopne
pop
ret
xor
inc
out
aaa
or
lahf
lock
movs
cli
and
test
ffreep
cld
or
cs
lea
dec
xchg
jle
sbb
bound
lds
jnp
repz
mov
fcomi
mov
mov
sbb
outs
xor
int3
ins
adc
gs
scas
call
loop
and
lods
add
loope
lock
out
das
push
scas
(bad)
sbb
cli
sbb
pop
sbb
je
push
cmc
sub
pop
mov
aaa
and
xchg
or
or
lahf
mov
out
aad
or
mov
jmp
lds
push
jns
clc
mov
inc
cmp
aam
hlt
punpcklwd
stc
hlt
test
pusha
(bad)
jmp
mov
les
inc
mov
cmp
xchg
(bad)
sub
xchg
lods
or
xchg
mov
add
pushf
adc
sbb
lea
inc
sbb
sbb
movs
popa
xchg
in
hlt
lock
jmp
cmovs
or
inc
ja
sub
fcom
xchg
mov
mov
inc
psubd
mov
adc
mov
inc
lahf
lods
cmp
loopne
cmp
mov
sahf
xlat
or
mov
mov
(bad)
bound
xchg
push
mov
mov
dec
sti
mov
xchg
mov
jo
sub
leave
(bad)
and
ins
mov
jp
cmp
pusha
sub
mov
(bad)
cmp
cmp
loopne
or
push
push
mov
ficomp
xlat
jle
and
les
push
sbb
mov
jl
or
jbe
mov
or
loopne
fidiv
and
sub
(bad)
cmps
jo
push
shl
shr
sti
jmp
jle
fst
push
add
add
fdiv
mov
mov
pop
pushf
leave
lea
js
mov
push
jp
call
in
cwde
test
mov
xchg
adc
sub
(bad)
jb
dec
dec
sbb
daa
daa
mov
icebp
jae
sar
mov
mov
push
pop
xchg
ss
(bad)
cwde
mov
lock
jecxz
add
mov
mov
int
fnstenv
xlat
inc
cmp
dec
ins
jns
fst
shr
mov
cmp
int
je
fidiv
inc
adc
icebp
add
dec
cmp
sbb
test
inc
cmp
std
mov
jmp
jae
retf
iret
jle
add
bound
lea
out
xor
popf
jb
sub
jmp
xor
aas
(bad)
dec
or
or
retf
pop
iret
rcr
test
loope
adc
int
push
cmovno
not
in
mov
mov
popa
call
or
dec
pop
out
and
arpl
in
inc
push
dec
mov
hlt
rcl
out
mov
push
dec
pop
repnz
aas
inc
mov
sti
(bad)
retf
aas
xchg
push
sti
cmp
and
cmp
cmp
mov
mov
iret
xor
inc
and
ins
sbb
xchg
inc
mov
fsubr
in
push
pop
mov
mov
push
fmul
jecxz
inc
xchg
cwde
lods
sbb
ins
aad
cmp
push
fcom
popa
sub
push
faddp
cmps
fs
push
fidivr
mov
sbb
out
xor
ds
pop
adc
fist
into
in
xor
rcr
fistp
jge
cmp
pushf
sbb
outs
add
sub
ja
ss
dec
(bad)
rcr
pop
outs
dec
add
cs
mov
cmps
xor
and
push
jo
adc
ret
scas
mov
ins
lods
push
lea
aaa
rep
test
stos
aad
xchg
push
retf
mov
pop
inc
and
mov
dec
add
dec
inc
mov
lock
retf
jne
stos
pop
add
mov
stc
aad
dec
mov
into
add
ror
dec
scas
pop
mov
icebp
sar
jp
mov
xchg
push
outs
cmp
xchg
push
inc
les
scas
or
sub
mov
cmp
lahf
mov
scas
(bad)
add
mov
jmp
push
push
xchg
(bad)
xchg
pop
stos
pop
xchg
repnz
ja
mov
nop
test
inc
mov
loop
inc
fisubr
adc
cmp
xor
aad
shl
sbb
adc
ret
add
les
outs
clc
das
mov
jb
test
popa
xor
adc
jb
(bad)
aam
fs
add
mov
cmp
or
imul
das
ss
dec
xor
ret
stc
pop
loope
push
pop
jae
and
stos
(bad)
dec
pop
dec
in
jo
dec
mov
ds
shl
mov
xlat
cmc
lahf
clc
push
aaa
mov
adc
jg
jge
ret
clc
std
inc
lods
sub
jne
and
pop
sub
xor
inc
shr
adc
jnp
jbe
jns
sub
dec
mov
gs
pop
push
mov
adc
retf
enter
jnp
push
dec
mov
jp
mov
bound
push
ja
push
cmp
push
sbb
in
inc
pop
in
xchg
mov
sbb
xchg
in
shl
stc
out
jecxz
or
div
adc
push
jnp
retf
cmps
loope
mov
test
jae
jae
xor
in
pusha
test
in
call
retf
test
ret
pop
xchg
xchg
dec
das
dec
jo
xchg
lods
out
clc
xchg
mov
lahf
pop
out
out
aaa
call
cmp
arpl
out
repz
jle
mov
cmp
arpl
mov
fisttp
pop
jle
pop
pop
inc
and
mov
pop
xchg
out
es
mov
adc
pop
inc
mov
pop
pop
dec
mov
jo
repz
daa
lds
and
pop
bound
les
js
xor
stc
fwait
sub
jno
repnz
xchg
mov
jae
push
cmp
dec
cmp
sbb
push
or
cli
popa
fisub
cmps
jg
sbb
(bad)
cmp
cld
dec
sub
inc
clc
iret
enter
rcr
jo
jmp
push
hlt
(bad)
fisttp
fsubr
sbb
mov
fcomp
outs
out
mov
adc
gs
hlt
test
mov
or
outs
mov
stos
jb
jecxz
push
dec
jmp
shl
pop
fnstsw
jge
jae
es
ins
xchg
sub
imul
cmp
cmp
(bad)
sub
sub
or
aaa
adc
dec
in
xchg
dec
emms
bound
cdq
mov
sbb
out
push
outs
test
out
clc
cld
sub
imul
fadd
sbb
test
push
lods
sub
and
jmp
int
xchg
daa
js
push
cmp
dec
mov
adc
xor
scas
ins
outs
rcr
test
sub
jmp
jge
outs
inc
jnp
icebp
mov
mov
in
inc
test
outs
aad
jge
mov
jmp
pop
push
fisubr
loopne
das
push
cmp
jno
cld
inc
cmp
mov
jg
outs
jne
out
mov
fwait
sar
jno
fadd
call
rol
cmp
sub
mov
das
lahf
inc
dec
dec
pop
lds
xor
xor
mov
sub
or
jbe
repz
loopne
mov
out
cli
ret
cmps
add
push
and
inc
adc
jg
(bad)
scas
popa
cmc
or
retf
jl
mov
mov
xor
pop
ror
sbb
out
retf
cmps
jno
add
int
inc
imul
inc
add
cmp
rol
dec
add
movs
add
mov
pop
mov
call
push
shr
sub
or
sub
rcl
mov
fidivr
call
mov
dec
out
clc
int3
clc
inc
nop
mov
in
cmc
pop
call
mov
out
add
in
inc
hlt
stc
or
xor
fs
call
mov
repnz
out
imul
mov
retf
mov
mov
sbb
test
arpl
in
movs
sti
aas
aaa
cmp
jle
push
pop
dec
xchg
sub
jmp
push
lock
mov
retf
jl
mov
mov
or
push
mov
pop
cmp
lods
pop
push
pusha
sub
call
dec
int
mov
cmp
push
dec
fldcw
dec
or
mov
jno
xor
sub
cmps
repnz
pinsrw
mov
jmp
push
out
(bad)
sahf
jo
mov
das
dec
or
cs
xchg
es
xlat
sub
pop
xchg
cmc
mov
es
sbb
add
rol
sub
lds
jle
test
add
sub
mov
push
sar
dec
add
(bad)
cmp
mov
inc
dec
push
dec
pop
xchg
cmps
in
retf
mov
out
inc
sub
rcr
mov
cmc
pop
rcl
test
push
dec
sar
and
mov
nop
cs
mov
add
sbb
mov
cmp
test
aad
mov
dec
aas
xor
jo
pop
fistp
xchg
jle
dec
jecxz
jge
clc
xor
and
mov
stc
call
mov
aad
cli
pop
mov
xlat
out
fsub
stos
stc
mov
fsub
repnz
shl
or
fld
pop
inc
icebp
mov
mov
sub
jb
push
dec
rep
cmp
pusha
jge
cwde
push
mov
cwde
iret
dec
push
out
adc
cmp
sbb
push
std
inc
dec
std
test
cli
pop
ds
xchg
pop
js
shl
add
xor
jne
jno
mov
imul
loope
sbb
and
sub
cli
jne
sub
mov
jbe
inc
inc
or
shl
in
sbb
mov
xchg
mov
aaa
retf
dec
push
mov
(bad)
xor
and
fst
push
xchg
adc
sahf
rol
mov
fnstsw
sahf
mov
in
fcomp
loope
cmp
dec
rcl
in
imul
dec
jp
pop
out
mov
xor
sbb
dec
retf
pusha
loop
and
push
or
into
or
xchg
pop
stos
add
fisubr
jno
xor
and
mov
ins
(bad)
stos
xor
stos
add
ja
pusha
xor
test
mov
adc
xchg
in
inc
lds
bound
dec
push
and
mov
cmp
ror
test
mov
call
(bad)
pop
mov
jnp
loop
cld
ret
outs
in
mov
mov
ret
cwde
rcr
adc
jbe
loop
or
inc
pop
int
sti
ss
(bad)
sbb
inc
inc
icebp
sbb
retf
mov
scas
add
cmp
mov
(bad)
pop
fsub
xor
jmp
mov
mov
cmp
enter
adc
gs
sahf
out
test
or
aad
jecxz
enter
xchg
pushf
enter
mul
arpl
mov
mov
fnstsw
dec
adc
cmp
sub
shr
test
add
iret
imul
mov
or
adc
dec
test
mov
je
or
sbb
loope
and
sar
or
and
xor
inc
push
ss
lds
rcl
call
cs
jmp
inc
into
movs
outs
(bad)
or
inc
jmp
push
pop
mov
inc
push
dec
jp
sbb
mov
add
jle
sub
retf
gs
sub
or
pop
xchg
mov
push
(bad)
cld
daa
enter
cmp
push
(bad)
aas
in
or
test
mov
pop
jo
(bad)
scas
xchg
push
xchg
mov
sbb
adc
mov
mov
dec
loope
loop
inc
(bad)
mov
cwde
pop
cmp
out
ret
movs
mov
mov
ins
mov
pop
test
push
add
rcr
test
fiadd
dec
mov
add
cli
loopne
or
mov
or
(bad)
lock
loope
aam
inc
add
fnstcw
je
pop
dec
lods
mov
mov
cmp
sbb
ret
scas
mov
nop
push
inc
outs
mov
iret
jmp
cmps
add
addr16
scas
pop
or
les
cs
pushf
sbb
dec
adc
mov
dec
ret
pcmpgtw
jnp
rol
pop
bound
lods
int
inc
hlt
pop
(bad)
and
js
dec
sbb
int3
inc
mov
in
popa
add
shl
add
mov
cmp
pusha
in
jb
outs
mov
ret
push
call
clc
xchg
jnp
stos
cmp
push
add
out
fild
xchg
mov
bound
push
(bad)
jmp
push
popf
sti
aas
push
fld
sar
enter
mov
dec
(bad)
xor
mov
fst
pushf
cdq
stos
in
cmps
mov
inc
outs
jne
sbb
push
jecxz
test
mov
mov
ins
call
dec
xchg
out
sar
(bad)
mov
jmp
hlt
es
sbb
sub
lea
pop
gs
clc
cdq
outs
mov
fs
sti
mov
pop
int3
sbb
retf
out
dec
lock
pop
pushf
ja
and
jb
cmps
repz
fnsave
int
or
or
call
jae
inc
mov
xchg
lea
and
cmp
push
fnstsw
add
shr
cdq
adc
cs
out
or
ret
dec
jae
push
fxch
out
lods
(bad)
mov
mov
out
cmp
mov
inc
fs
cs
mov
sub
imul
int3
repnz
dec
call
push
test
mov
cmp
call
add
push
ficom
sbb
jp
jge
out
cmps
push
test
movs
loope
out
test
stos
pop
aaa
mov
call
adc
outs
push
dec
jge
popa
scas
sbb
ss
sub
push
std
sub
imul
aad
dec
and
pop
outs
cmp
sbb
jne
in
mov
sbb
cwde
ins
mov
jmp
push
or
int3
pop
cmp
sahf
sub
in
jle
inc
fincstp
add
das
push
or
mov
scas
or
test
nop
outs
dec
loopne
or
cli
jp
add
loopne
bound
int
jae
mov
lock
push
mov
fstp
jl
sbb
jnp
pop
xor
rol
dec
mov
mov
movs
add
imul
call
pushf
pop
retf
add
int
sub
nop
mov
xchg
(bad)
imul
jno
cmp
cmp
(bad)
mov
outs
hlt
or
inc
(bad)
(bad)
(bad)
lahf
sub
lahf
inc
loope
stos
lods
or
pop
jecxz
adc
test
out
into
fwait
ja
inc
and
out
and
popf
add
adc
mov
mov
xchg
mov
out
into
and
pop
push
mov
ins
pushf
ds
aam
jp
sbb
fiadd
mov
nop
mov
arpl
push
loopne
mov
cmps
xchg
sbb
es
je
or
mov
adc
jmp
dec
sub
adc
jae
dec
dec
and
pop
idiv
mov
cmc
fs
inc
aad
ja
jns
fmul
sbb
pop
adc
xlat
cdq
mov
bnd
aam
pop
std
or
pop
sub
jns
or
(bad)
jg
add
mov
dec
imul
(bad)
daa
inc
and
inc
jmp
and
sbb
in
push
adc
loope
popf
xor
in
ret
sahf
jmp
sbb
xchg
mov
jno
mov
xchg
jno
mov
xchg
retf
jnp
(bad)
movs
es
daa
mov
xchg
jne
out
xchg
aas
add
sbb
movs
idiv
adc
mov
inc
dec
repz
adc
inc
and
xchg
rcl
out
arpl
xchg
das
in
xchg
push
sbb
pop
xchg
mov
(bad)
aas
jns
push
or
shl
sahf
loop
loope
inc
test
xchg
cmc
aaa
xchg
rcr
adc
nop
pop
pop
dec
movs
(bad)
xlat
mov
stos
jmp
xor
adc
sbb
shr
mov
imul
neg
in
mov
xchg
dec
jl
cmp
jecxz
xchg
call
jnp
cs
lods
cmp
test
jb
push
retf
jns
leave
dec
xchg
cmp
fnstenv
ret
mov
je
imul
jae
fild
call
add
xchg
fucomi
sahf
(bad)
bound
pop
adc
ins
pushf
test
mov
icebp
add
push
pop
daa
(bad)
iret
pusha
sub
adc
jbe
sahf
cmp
out
les
fnstenv
and
fdecstp
enter
mov
cmps
fsubr
mov
dec
jne
fist
xchg
mov
icebp
and
mov
psraw
push
test
sub
xor
mov
in
ret
cmp
repz
dec
cmps
dec
ficom
push
icebp
xor
mov
dec
sbb
or
and
mov
xchg
lock
rcr
cdq
pop
aaa
call
lods
fisubr
pop
aad
shr
push
inc
push
or
rcr
or
and
in
and
div
jns
lods
test
mov
mov
mov
jbe
es
mov
xchg
cmps
outs
adc
ret
mov
int
push
mov
mov
stc
or
and
out
rcr
aad
ror
ins
loope
mov
pop
and
cmps
test
cmps
mov
inc
add
imul
out
inc
lahf
jne
fld
mov
and
in
sbb
push
pop
out
ds
and
push
cmps
xchg
pushf
mov
lods
cmp
push
lods
loope
mov
(bad)
pop
fcmovbe
(bad)
std
js
fdiv
sub
cmp
xor
gs
jg
xchg
xor
stc
cli
data16
fimul
xchg
fcom
aam
leave
(bad)
push
mov
ret
cmc
inc
popf
sbb
dec
cmp
int
or
fs
out
sbb
push
sub
jno
sbb
retf
cmps
inc
sti
pop
jg
cmp
call
test
push
cld
dec
outs
rcl
xor
inc
shl
mov
add
mov
and
push
test
(bad)
imul
leave
movs
aad
std
out
ret
jno
add
fs
fst
enter
and
cmps
lahf
bound
mov
cld
ret
push
rcr
mov
adc
xchg
std
jmp
adc
sub
loop
pop
push
or
add
jnp
jmp
jecxz
shr
mov
xor
int3
out
out
scas
fisubr
cmp
push
lsl
leave
lods
inc
int3
xor
call
cmp
pop
sbb
mov
ja
adc
sahf
push
das
pop
push
iret
adc
outs
cmp
dec
loope
(bad)
nop
rol
mov
out
gs
inc
adc
outs
leave
retf
inc
(bad)
adc
int3
sbb
jge
and
pop
test
mov
sbb
xchg
xchg
inc
in
jbe
(bad)
iret
cdq
jmp
jbe
or
test
aam
cmp
fcom
xchg
adc
and
dec
or
mov
das
mov
jb
sar
imul
sub
shl
jecxz
aam
fnsave
xchg
int3
jle
add
add
stc
dec
dec
cmp
jb
push
ret
or
call
sub
inc
imul
sub
cli
add
sbb
pop
hlt
add
xchg
outs
mov
adc
ins
jmp
test
sub
or
mov
mov
lds
push
hlt
inc
aam
lods
fidiv
adc
add
push
outs
push
(bad)
push
es
retf
cmp
push
mov
mov
scas
mov
int
jge
jge
repnz
jmp
sar
mov
adc
call
pop
fwait
mov
imul
mov
call
jne
jbe
hlt
xlat
cld
cld
int
popa
sub
ror
ins
pusha
sbb
lock
sbb
test
lock
cmp
and
xchg
ret
jns
(bad)
mov
test
inc
pop
out
sar
cld
add
cmp
jg
(bad)
and
fs
mov
push
pop
sbb
ud0
xlat
add
sub
sub
pop
pop
pop
sbb
jmp
ds
in
xor
mov
cmp
(bad)
jno
test
adc
cmps
xchg
das
pop
cs
(bad)
(bad)
pop
inc
movs
dec
dec
dec
xchg
inc
adc
imul
pop
mov
cmps
adc
or
and
or
mov
js
out
sub
aaa
fisttp
mov
inc
or
ss
inc
neg
sti
test
push
gs
mov
mov
test
repz
sar
push
adc
popf
in
jnp
mov
adc
fistp
(bad)
retf
dec
xchg
cmp
fistp
mov
sbb
out
and
dec
int
aaa
mov
cwde
ds
and
pop
es
mov
in
adc
pop
jecxz
or
cmp
lods
dec
adc
lods
pop
fwait
cli
sbb
jmp
cdq
clc
adc
add
jae
fbstp
jb
inc
dec
sbb
repz
inc
call
mov
or
cdq
and
xchg
sub
call
pop
jge
sbb
xor
adc
ss
pop
xor
fs
into
adc
into
jae
std
or
pop
lods
push
push
arpl
cld
cld
jae
inc
dec
mov
mov
sub
or
scas
jp
push
(bad)
sahf
(bad)
jb
and
mov
aad
das
xor
addr16
mov
mov
je
dec
jnp
inc
ins
xchg
push
addr16
dec
icebp
ret
popf
xor
mov
jle
imul
xchg
arpl
mov
mov
or
rol
sti
outs
jl
push
call
(bad)
and
movs
mov
aaa
iret
outs
mov
(bad)
sub
lahf
jne
mov
std
jecxz
xchg
sti
adc
dec
mov
popa
mov
mov
cmp
sub
and
push
loopne
lods
inc
sahf
dec
enter
aaa
int3
lock
xchg
cmp
in
xor
cmp
test
int3
pushf
pop
fst
jno
or
ret
in
sub
pushf
cld
addr16
add
shr
push
fwait
loope
pop
call
mov
dec
mul
out
cmp
aas
jae
mov
jecxz
or
repz
xor
jmp
test
leave
int3
adc
dec
pop
push
xchg
cmc
jns
outs
and
inc
jecxz
imul
jp
mov
jg
les
rcl
xor
sahf
sub
test
cmp
mov
or
xor
sub
xchg
les
fs
lods
pop
add
enter
jns
jecxz
mov
rcl
stos
xor
fisttp
aad
xlat
mov
pop
mov
dec
sbb
mov
push
jmp
push
xor
xchg
push
pop
stc
loope
jl
cli
push
adc
cli
fwait
sbb
fnstcw
mov
into
cmp
sbb
test
fstp
push
jp
aaa
push
mov
mov
mov
ret
std
pop
xchg
enter
xchg
jge
cdq
xchg
inc
dec
inc
retf
add
mov
lods
xchg
xchg
adc
cld
es
sbb
neg
add
jp
sub
mov
adc
out
std
mov
sub
es
out
mov
sub
int
rcr
sbb
in
cld
push
loop
lock
pop
mov
daa
mov
mov
cmp
xchg
retf
clc
fld
adc
xchg
xchg
inc
popa
inc
retf
add
sbb
lods
(bad)
xchg
adc
cld
arpl
cmp
jne
repz
add
sbb
jp
(bad)
jmp
push
push
mov
scas
not
cmp
xor
cdq
loope
dec
push
xchg
jecxz
leave
sbb
xlat
dec
mov
jo
xchg
clc
adc
push
sub
sbb
pop
not
hlt
retf
dec
aas
xchg
mov
xor
das
out
push
jae
push
push
push
mov
cmp
test
mov
push
ins
xchg
ds
push
sar
addr16
imul
jb
mov
stc
sub
add
mov
cli
cld
mov
xchg
out
dec
jne
pop
xchg
ret
dec
icebp
pop
or
adc
push
int3
adc
pop
test
in
int3
xor
clc
rcl
popf
sbb
sub
hlt
fidiv
push
les
sub
pop
mov
lods
sbb
out
dec
popf
scas
das
hlt
sti
jl
sbb
xor
mov
sbb
push
imul
pop
xor
jne
test
sub
and
fwait
and
aas
(bad)
hlt
rcl
ss
in
dec
xchg
mov
add
fst
sbb
mov
pop
xor
jp
das
mov
outs
push
mov
leave
sti
gs
fbstp
(bad)
lods
loop
fistp
ins
inc
cmps
jp
inc
mov
cwde
cmc
(bad)
(bad)
fwait
scas
out
jne
retf
out
outs
or
sahf
jecxz
mov
popf
sahf
cmp
dec
xchg
fs
pop
jecxz
mov
bound
inc
dec
adc
(bad)
jno
inc
leave
and
xchg
xchg
push
adc
rol
and
jne
ds
outs
mov
inc
or
inc
das
ins
dec
in
sbb
pop
mov
(bad)
sub
fsubp
shr
pushf
dec
adc
add
das
xchg
xchg
fucomp
hlt
and
xor
xchg
mov
inc
int3
jmp
xor
mov
stos
add
lock
mov
and
(bad)
aas
cmp
cmp
loopne
jmp
lods
neg
and
fwait
ret
int3
inc
inc
xchg
cmp
test
push
aaa
nop
sub
push
push
loope
loop
ret
mov
or
cwde
out
jae
lahf
lods
jne
call
cwde
xchg
add
mov
out
cmp
ins
sub
add
mov
inc
aas
gs
push
lods
adc
neg
outs
leave
mov
in
pop
call
pop
(bad)
fidivr
pusha
fbld
jb
push
sbb
clc
add
sub
loopne
popf
test
into
dec
into
or
loopne
jno
out
adc
test
pop
(bad)
inc
xchg
add
adc
test
push
jmp
movs
add
es
stc
std
xchg
or
rcl
or
repz
mov
in
pop
call
fidiv
sub
std
pop
repz
loope
pop
rcl
pop
test
outs
adc
inc
fistp
hlt
mov
mov
imul
in
push
and
stc
dec
mov
daa
test
int3
call
pop
or
scas
sub
cmp
fild
sar
stc
xchg
mov
outs
jb
jmp
fdivr
add
loop
cmps
lahf
std
jno
jno
scas
jmp
repz
xor
adc
inc
repz
or
ficom
sub
xchg
popf
pop
xor
icebp
aam
inc
sub
test
(bad)
(bad)
mov
push
bound
jmp
(bad)
movs
jge
inc
xchg
push
stos
hlt
mov
xchg
dec
sti
(bad)
loop
inc
or
add
push
push
je
clc
ficom
mov
mov
test
or
ret
fwait
int3
in
fs
fimul
xchg
and
addr16
push
xlat
adc
or
ss
mov
cmp
ins
call
ret
fidiv
rcr
std
mov
jmp
inc
inc
(bad)
imul
push
and
add
inc
aam
dec
and
clc
sbb
orps
cld
jb
mov
neg
push
jmp
push
sbb
adc
daa
mov
or
pop
ins
dec
test
sbb
js
add
inc
(bad)
das
les
out
add
rcl
add
adc
adc
push
(bad)
je
sub
push
sub
subpd
push
les
add
shl
push
rol
mov
outs
cdq
push
in
mov
aad
jo
les
jecxz
je
call
xchg
and
iret
lods
rol
ins
popf
pop
pop
mov
cmp
rcr
pop
call
jo
sbb
fnstsw
sub
or
mov
ret
add
xchg
lods
dec
jb
dec
sbb
out
fsubr
dec
add
mov
adc
sbb
in
jbe
test
inc
je
pop
dec
sub
cmp
pusha
repnz
pop
jnp
sbb
mov
push
xchg
cmp
sub
sub
cdq
or
ret
or
sbb
push
sub
push
mov
cmps
fadd
pop
stos
aam
fld
push
rcr
xchg
(bad)
clc
jnp
aas
std
dec
inc
(bad)
push
aam
(bad)
cdq
call
sub
jns
jle
adc
cmp
inc
stc
dec
mov
into
xchg
loopne
pop
jo
jb
(bad)
mov
jle
or
cld
adc
mov
jne
push
(bad)
pop
dec
imul
mov
mov
jnp
mov
and
mov
mov
add
and
cwde
retf
mov
fisttp
and
jg
aad
inc
jge
ror
mov
daa
mov
jmp
inc
sub
pusha
scas
lahf
or
js
xlat
jb
jge
and
fadd
popf
cli
and
test
mul
stos
cmp
enter
into
mov
push
xor
icebp
xchg
je
sub
in
lods
imul
push
push
mov
cmp
xor
xchg
push
mov
div
retf
or
dec
fcom
or
retf
ss
int
mov
mov
stc
or
and
jmp
adc
fs
xchg
outs
xlat
add
cwde
in
xchg
or
mov
repnz
fwait
pop
mov
jnp
mov
dec
(bad)
or
fmul
mov
fneni(8087
xlat
and
scas
cmps
xor
es
xchg
mov
lock
pushf
lahf
fwait
cmp
pop
pop
xchg
aaa
mov
(bad)
rcl
sbb
jecxz
je
test
sub
call
das
retf
je
in
(bad)
hlt
shl
xchg
gs
xchg
dec
and
mov
aaa
xchg
mov
adc
mov
xor
ins
enter
and
push
popa
dec
jmp
cmp
adc
pop
push
dec
pop
fisttp
vmread
mov
and
dec
mov
push
int
jmp
(bad)
or
jne
sbb
mov
jnp
inc
aad
pushf
add
add
pop
das
gs
xlat
dec
cwde
mov
aaa
xor
adc
cwde
lds
sbb
xchg
and
mov
push
call
enter
adc
test
pop
sub
imul
jnp
mov
pop
mov
push
repz
pop
out
mov
adc
neg
lahf
xor
jmp
outs
js
adc
shr
js
mov
ret
call
mov
jp
sbb
xchg
nop
int
push
xor
hlt
push
cwde
test
neg
or
adc
mov
dec
xchg
push
inc
adc
cwde
or
fdivr
pop
(bad)
movs
out
ins
xor
call
mov
ins
outs
push
int
pushf
in
mov
frstor
ror
call
push
fsub
cmp
dec
xor
pop
xchg
outs
lods
in
xchg
and
leave
jb
push
xchg
or
xchg
fwait
movs
popf
aad
clc
sub
mov
sub
bound
out
cmp
lahf
xor
ja
jne
inc
adc
xor
dec
and
leave
jecxz
(bad)
arpl
push
mov
loop
add
les
sti
(bad)
fucomip
xor
mov
dec
inc
sbb
jns
loop
jns
cmp
popf
xor
jb
jecxz
jg
iret
lahf
retf
adc
adc
retf
adc
mov
xchg
rol
cmp
call
popf
inc
fmul
fcomip
fld
push
aas
clc
mov
dec
inc
daa
adc
mov
mov
es
(bad)
mov
jns
imul
cmc
jbe
mov
fs
in
loop
xchg
pop
xor
cmps
mov
mov
jbe
outs
repnz
outs
xor
cmp
jle
sbb
iret
jnp
test
inc
xchg
sub
movs
stos
scas
add
mov
push
je
xchg
push
jnp
jg
mov
shl
jmp
ins
jnp
fstp
loope
(bad)
inc
fdiv
add
add
movs
fdiv
out
jmp
jl
outs
dec
jp
jmp
push
sahf
push
(bad)
scas
push
jae
fadd
and
cmp
fist
mov
sbb
mov
or
jge
stos
add
popa
jbe
out
mov
mov
das
pop
mov
cmps
loope
in
sbb
leave
and
inc
div
sbb
xchg
jne
fld
xor
xchg
ds
fstp
gs
ret
cmp
pop
sub
shl
jmp
(bad)
icebp
test
jecxz
jb
cli
push
push
movs
scas
pop
std
not
(bad)
int
pushf
pop
sub
jno
jno
pop
jne
ja
outs
add
fcomp
pop
xlat
and
repnz
stos
add
dec
sub
retf
add
and
stos
dec
fwait
jge
ja
dec
jp
int
gs
lea
daa
push
or
add
js
mov
dec
out
and
sub
int3
cmp
adc
(bad)
push
scas
xchg
fstp
cdq
ficom
(bad)
cwde
cmp
rol
lock
gs
rcr
ins
dec
(bad)
leave
add
xor
pop
xchg
cmps
adc
jle
dec
pusha
inc
jg
ins
sbb
adc
xchg
into
out
test
xchg
shl
inc
repz
jmp
cmp
popa
xor
mov
out
in
dec
push
add
sbb
ins
mov
test
mov
push
aas
(bad)
sbb
aam
adc
adc
or
inc
dec
les
fisubr
loopne
adc
xchg
out
popf
and
js
jns
cmp
stos
adc
jecxz
mov
fs
movs
jns
push
adc
sti
mov
mov
sbb
dec
enter
(bad)
inc
mov
outs
sub
ffree
inc
mov
push
pusha
sub
cmp
hlt
adc
repz
cli
xchg
sub
sbb
xchg
mov
xor
retf
pusha
pushf
test
cmc
pusha
cmp
push
into
inc
and
aam
xor
push
add
ficomp
push
sub
sbb
cmp
mov
iret
jb
jbe
test
movs
pop
mov
push
inc
sub
mov
push
add
inc
mov
int
(bad)
add
jg
std
cmp
js
mov
dec
js
movs
cmps
mov
out
jp
jae
pusha
ftst
inc
jp
aad
mov
dec
jp
(bad)
jmp
and
mov
jae
mov
cmps
idiv
stos
mov
scas
repz
and
dec
xor
jae
test
jp
cmp
test
add
xor
inc
cmp
adc
cdq
mov
pop
mov
jge
ins
mov
xor
xchg
leave
lds
jae
mov
shl
fwait
mov
sub
xlat
push
(bad)
pop
xor
test
lods
xor
jbe
ss
mov
xchg
push
mov
leave
rol
dec
retf
push
iret
pushf
mov
in
dec
xor
pop
add
shl
lea
fsub
sbb
loop
xlat
lea
lods
stos
xchg
pusha
loope
jo
out
lahf
(bad)
mov
push
pop
es
in
aas
sti
loopne
inc
js
fst
retf
int
or
pop
enter
test
adc
mov
mov
shr
test
es
int
aam
jo
jo
and
popf
lock
xchg
cli
mov
add
sti
lds
sbb
stos
jmp
sbb
leave
pusha
xor
fisub
iret
or
imul
test
lahf
add
or
cld
jle
into
fwait
stos
in
xor
lea
imul
xrelease
or
push
in
repz
shr
push
icebp
sbb
sub
popf
sub
cmc
cmp
inc
sub
ja
pop
loop
dec
test
ret
outs
add
(bad)
mov
imul
test
std
sub
gs
and
mul
aad
cli
cmps
xor
fisttp
clc
gs
push
lods
cmp
sti
dec
push
out
in
cli
ror
pop
int3
stos
adc
dec
inc
inc
in
cdq
sar
dec
sub
sbb
pushf
loope
xor
mov
sub
nop
inc
fsubr
sbb
cwde
push
in
rol
lods
loopne
sbb
xchg
aad
jns
ins
and
jno
and
lahf
(bad)
hlt
pop
mov
sbb
sbb
leave
or
sub
or
pop
clc
shl
inc
fadd
adc
jecxz
gs
jns
js
xchg
add
sar
dec
push
cdq
call
rol
sbb
leave
jb
cmp
ins
xor
and
rcl
std
stos
jmp
xchg
call
xor
arpl
and
mov
mov
fisttp
mov
mov
adc
pop
add
push
mov
jmp
sub
pop
and
mov
outs
adc
retf
mov
ins
data16
leave
or
jmp
retf
or
fs
mov
jae
(bad)
push
sub
push
push
inc
fisttp
and
push
push
sbb
and
les
xor
jle
push
xchg
out
cmc
shl
xor
mov
and
js
sub
addr16
test
add
mov
mov
test
mov
dec
xor
sbb
cmps
and
(bad)
out
mov
push
jmp
leave
outs
pop
loope
xor
mov
pop
mov
mov
jae
mov
mov
pop
pop
ret
cmps
arpl
daa
sub
daa
or
add
pop
and
ins
push
pop
cmp
jae
call
(bad)
imul
test
xchg
sbb
mov
xor
jae
popf
adc
dec
sub
mov
addr16
push
aam
ins
xor
xchg
sbb
push
pop
jne
lock
or
sub
jmp
daa
pop
retf
retf
or
cwde
mov
(bad)
test
leave
sbb
xchg
cmp
push
movs
cmp
push
idiv
jl
add
loop
jns
sbb
dec
pushf
adc
fs
push
add
and
cld
in
test
sahf
fisub
test
pop
jbe
mov
sub
xchg
lods
enter
xchg
pushf
pop
lea
or
mov
(bad)
jmp
push
and
repnz
jb
sub
shl
jle
or
ins
xchg
adc
test
mov
mov
rol
mov
xor
retf
std
xor
cmp
jne
loopne
mov
outs
jb
xchg
in
push
push
xchg
push
mov
add
sub
test
imul
push
ficom
inc
scas
aaa
scas
inc
test
dec
sbb
push
out
aam
inc
sub
pop
sahf
push
rcl
into
cmp
sbb
cmp
sbb
call
pop
int
lock
imul
xor
add
or
dec
movs
jmp
or
push
pop
imul
xchg
jnp
jge
mov
in
sbb
xchg
jle
test
cmp
movs
enter
(bad)
push
clc
rol
aad
movs
jmp
or
sbb
jno
inc
push
movs
add
mov
dec
push
mov
das
mov
nop
cmp
fwait
call
adc
ins
data16
in
cdq
outs
inc
sub
mov
cld
and
shr
js
scas
xor
xor
push
jns
ins
push
sar
cmp
mov
pushf
mov
xchg
sbb
add
push
and
and
mov
movs
xchg
inc
sahf
sbb
out
push
repnz
cmps
xchg
(bad)
and
retf
movs
xchg
sbb
fxch
or
outs
xchg
ds
cmp
mov
push
mov
int3
dec
and
mov
add
dec
scas
xchg
test
cmps
mov
xchg
leave
ficom
in
out
stc
sbb
push
ror
test
dec
mov
inc
(bad)
mov
imul
ss
or
push
popa
enter
retf
push
mov
push
fcmovnbe
adc
fdivr
je
repz
lods
lods
jno
data16
scas
(bad)
fcom
rcl
int
loope
leave
sub
cli
and
jge
popf
and
pop
xchg
lahf
cmp
outs
jmp
push
hlt
cmps
cmp
pop
xchg
outs
mov
fisttp
fst
sub
mov
mov
or
dec
iret
or
or
shl
lahf
shl
icebp
push
adc
fstp
ret
and
pop
das
or
fadd
mov
adc
pop
mov
or
adc
pop
xlat
sub
out
push
ins
xchg
mov
aad
stos
scas
fcmovu
rol
mov
ficomp
in
loop
jns
sub
push
les
pop
fbstp
stos
in
in
out
inc
pusha
jg
shl
popf
pop
xor
or
fld
daa
movzx
xchg
shl
sbb
or
and
mov
jg
jmp
cmp
dec
js
lea
rcr
cmp
mov
and
loopne
into
or
add
inc
add
repnz
sub
imul
add
mov
push
cmp
pusha
xchg
mov
(bad)
and
add
js
arpl
push
push
fisttp
push
sbb
loope
shl
sti
mov
push
push
js
mov
inc
add
pop
pop
mov
xchg
in
icebp
test
mov
pop
bound
into
mov
cmp
cmp
imul
sub
cdq
xor
popa
pop
dec
jmp
inc
xchg
popa
test
call
adc
enter
leave
pop
xchg
cdq
repnz
lods
mov
ds
jmp
mov
push
loop
iret
dec
adc
mov
jmp
data16
test
sti
(bad)
jge
shl
sar
js
mov
pusha
and
addr16
pushf
dec
xchg
stos
repnz
fwait
mov
sub
bound
vminps
inc
pop
and
add
mov
cmps
xor
idiv
gs
test
xor
movs
popf
cmp
and
mov
push
call
fild
(bad)
sti
ins
lods
lods
pop
pop
test
mov
fidivr
test
mov
push
mov
loopne
popa
fild
fdiv
pushf
and
popf
imul
cmp
bound
ret
rcr
xor
or
mov
jnp
or
push
jne
and
jo
leave
in
aam
mov
retf
(bad)
aam
jmp
sub
pushf
xchg
loopne
ret
mov
int
and
and
(bad)
sbb
pop
fild
dec
push
mov
sbb
xor
adc
fsubrp
repz
iret
icebp
lahf
loop
mov
sbb
shl
sbb
int
mov
clc
lea
jb
jg
dec
inc
cmps
repz
cdq
lock
push
movs
(bad)
jmp
xor
jno
fsub
sub
adc
adc
es
das
stc
mov
inc
cmc
lock
dec
or
dec
add
xchg
sar
arpl
xchg
sub
ret
pop
in
adc
pop
or
mov
and
pop
push
sub
icebp
loope
xchg
ins
adc
int
ret
push
jno
or
mov
inc
imul
adc
push
jle
shl
jl
leave
pop
dec
jo
sub
xchg
test
pop
sub
cmp
or
fcmovnbe
outs
ret
ja
bnd
and
mov
mov
mov
mov
xchg
bound
mov
pop
jl
mov
add
add
call
rcl
push
pop
adc
ja
add
sbb
xchg
jge
cmp
movs
and
daa
dec
adc
daa
push
shr
push
int3
(bad)
inc
sbb
pop
or
jmp
shl
(bad)
aam
(bad)
push
jle
sub
sub
push
push
add
lds
movs
lods
mov
pop
cmp
imul
or
out
outs
repnz
sub
sub
dec
cmp
mov
mov
les
jp
sbb
jmp
bound
dec
fwait
or
call
pop
stc
cdq
jmp
push
(bad)
sbb
fsub
push
repnz
jl
jl
lea
jns
mov
mov
out
fdivr
call
lods
mov
test
mov
xchg
imul
push
dec
clc
int
adc
sub
cld
push
mov
loopne
(bad)
or
enter
mov
pop
jb
sub
lods
mov
xchg
leave
test
mov
jns
es
mov
add
push
xor
mov
lds
iret
cmps
pop
sbb
loop
gs
mul
sub
adc
mov
add
movs
add
sbb
loopne
adc
jecxz
mov
pusha
shl
mov
out
jb
sbb
mov
aad
push
cmp
inc
sbb
scas
aam
mov
fiadd
repnz
sub
inc
and
popf
push
add
inc
lock
cmps
inc
int
movs
rcr
xor
inc
and
adc
pop
xor
(bad)
xor
imul
mov
push
leave
add
loope
mov
ss
fst
(bad)
xchg
mov
popa
adc
xchg
mov
xchg
cwde
iret
jae
icebp
imul
adc
shr
loopne
jno
div
call
cli
mul
mov
mov
dec
mov
fcmovu
std
adc
pusha
adc
fmul
iret
mov
es
sub
cmovnp
xchg
fcomp
dec
out
pusha
ret
fstp
out
push
ds
xchg
imul
jne
stc
sub
and
repz
loope
dec
push
sub
pop
je
neg
sub
cmc
pop
movs
cmp
dec
iret
outs
icebp
mov
xlat
or
int
mov
cdq
dec
lods
mov
dec
sub
sub
sbb
(bad)
loop
cmps
pop
bound
inc
enter
and
xor
mov
inc
pop
and
add
xor
clc
cld
icebp
or
xchg
dec
les
inc
ins
fst
xchg
jbe
call
push
mul
out
scas
cmps
push
les
imul
call
scas
sub
fwait
dec
inc
lea
sub
jp
(bad)
jnp
dec
repz
scas
idiv
xlat
(bad)
and
js
adc
(bad)
cld
adc
cmps
cmp
inc
fistp
inc
fiadd
push
call
push
sahf
jne
push
int
or
sub
loope
div
push
outs
or
test
or
movs
push
cmc
push
neg
sbb
sub
cmp
in
push
(bad)
push
push
ds
push
push
push
bound
xchg
ins
jae
repnz
cmp
inc
nop
and
fiadd
rcl
iret
mov
enter
stos
loope
jmp
jne
popf
sbb
dec
or
jmp
xchg
(bad)
ror
inc
ficomp
outs
and
ds
mov
es
cmps
pop
loop
lock
aas
push
xor
js
push
push
inc
cmp
xchg
sti
cmp
mov
stos
mov
mov
push
lock
(bad)
cmp
shr
xchg
lock
dec
fs
loopne
lahf
mov
cmp
repz
push
push
dec
fnstenv
je
jbe
ret
dec
mov
dec
xchg
test
rcl
pop
sub
mov
loope
jg
test
jbe
and
pop
fsubr
mov
xor
adc
mov
repz
movs
scas
sbb
lea
shl
mov
push
or
or
mov
pop
bound
pop
adc
jno
jmp
and
xchg
pop
ror
cmp
xor
scas
lea
fimul
test
and
je
outs
popf
pop
mov
ins
inc
hlt
out
push
mov
mov
retf
sti
cmps
cdq
call
cmp
ss
movs
adc
(bad)
mov
loopne
sub
scas
sub
rol
cwde
inc
dec
in
fwait
jno
or
inc
ds
ds
pop
mov
neg
sub
lds
sbb
xor
sbb
inc
push
rol
fild
sub
pop
jns
enter
sar
mov
adc
xor
adc
push
movs
ja
xchg
inc
sahf
in
dec
pusha
add
add
ins
ret
cmps
lock
loopne
test
cmp
xchg
xchg
inc
jl
enter
sub
adc
add
ja
mov
js
(bad)
nop
(bad)
xchg
jp
pop
fst
pop
pushf
fdivr
ret
xor
stc
cli
call
dec
xlat
add
mov
push
and
xchg
ins
xchg
out
inc
inc
icebp
add
mov
fucomp
jecxz
mov
inc
stos
sbb
leave
dec
cdq
push
fnstenv
fwait
sbb
ja
mov
or
push
outs
cmp
push
adc
aam
sub
(bad)
mov
je
test
and
aam
mov
pop
icebp
adc
jg
sti
repz
in
dec
pop
push
sub
loope
bound
jb
sbb
fwait
dec
loop
mov
rol
(bad)
ss
arpl
out
dec
fld
mov
or
mov
add
retf
aam
jne
jge
ins
inc
jnp
into
ins
inc
test
scas
sbb
jae
or
jmp
sar
and
nop
jnp
mov
dec
pop
mov
xor
mov
or
ins
sub
xor
dec
mov
les
lods
pop
adc
(bad)
dec
sbb
pop
pop
push
fs
cmps
adc
jo
push
stc
repz
cld
adc
pusha
fistp
push
xchg
popa
cdq
sbb
xchg
xchg
or
cmps
mov
cli
into
cs
mov
jg
mov
push
pop
dec
arpl
xchg
inc
push
mov
add
test
mov
mov
sub
rcr
aam
pop
imul
aaa
and
pusha
adc
pop
fcomip
mov
mov
cwde
mov
sbb
xchg
mov
cmp
retf
mov
aas
xlat
add
loope
dec
retf
mov
cmc
inc
cmps
add
jbe
aaa
adc
pushw
and
sub
out
add
jecxz
inc
adc
sbb
push
and
fs
dec
shr
in
fs
fimul
xchg
inc
aad
fsub
jno
popf
inc
ret
ror
xor
loope
inc
jecxz
mov
add
call
adc
movs
push
sbb
mov
add
lods
pop
jl
test
in
clc
out
mov
sub
mov
push
test
xor
push
cmp
ja
xor
(bad)
jmp
xor
mov
jg
lahf
retf
fcompp
push
js
or
(bad)
jl
clc
add
addr16
and
xlat
inc
jmp
bound
icebp
mov
pop
aam
mov
mov
fidivr
jo
sbb
mov
loope
dec
stos
sbb
cmc
xchg
and
sti
jnp
lock
loop
mov
sub
mov
and
jmp
cdq
jmp
xchg
hlt
jno
and
lea
fstp
pop
mov
or
xchg
rcr
cs
rcr
jnp
retf
sahf
cmp
mov
shr
xchg
cdq
dec
pop
or
cmp
adc
add
sub
std
adc
push
cld
dec
in
jmp
(bad)
sub
pushf
(bad)
iret
mov
mov
pop
ja
mov
adc
mov
stos
ror
aaa
ja
(bad)
fidivr
add
sbb
fs
adc
xchg
dec
inc
pop
push
sub
shr
mov
int3
int3
ds
jecxz
mov
sub
movs
daa
fs
xchg
pop
mov
gs
jge
inc
or
(bad)
cmc
in
cmps
jnp
inc
int3
aaa
cli
pop
outs
cs
push
scas
pop
adc
(bad)
out
inc
push
and
xchg
push
fcmovnu
je
add
sti
jge
dec
lods
movs
cli
and
and
mov
mov
rol
(bad)
jnp
and
inc
inc
mov
int
add
xor
jno
jecxz
pushf
pushf
inc
sbb
pop
add
sbb
in
popf
xlat
sahf
xor
sbb
dec
and
into
push
push
leave
test
ins
dec
mov
cmp
hlt
mov
add
xor
repnz
xor
repnz
aad
pop
mov
out
jo
jns
popf
rcl
adc
nop
jo
push
jp
add
mov
pop
in
dec
xchg
push
mov
sbb
or
push
cld
push
adc
jg
pop
sub
aam
mov
xor
mov
jmp
jge
into
clc
adc
loope
xchg
jle
data16
lea
push
jle
mov
repz
ffreep
dec
jmp
mov
dec
retf
ja
and
repnz
inc
sbb
jo
scas
sbb
inc
xchg
mov
pop
in
pop
xchg
test
rcl
lods
push
adc
pop
add
(bad)
(bad)
fnsave
sahf
mov
sbb
jle
add
into
or
mov
movs
inc
ja
ss
cmp
mov
mov
fistp
mov
(bad)
or
loop
test
mov
ror
add
aad
add
and
(bad)
fnstenv
dec
cli
shld
(bad)
in
hlt
(bad)
int3
iret
repnz
jl
ins
sub
imul
push
imul
inc
mov
xchg
popf
shl
mov
xchg
jmp
icebp
repnz
jge
cmp
jp
adc
mov
push
in
xchg
add
jmp
hlt
fcomp
xor
(bad)
or
mov
(bad)
in
add
jmp
(bad)
fisubr
jmp
(bad)
mov
xor
sti
stc
enter
in
fldcw
xor
aaa
jbe
cmp
push
mov
int3
sub
xchg
lds
lahf
xchg
(bad)
iret
add
(bad)
sbb
sub
into
test
(bad)
imul
imul
mov
push
cmp
ja
and
cld
les
add
push
add
xchg
inc
mov
addr16
in
lods
inc
xchg
mov
and
int3
add
fstp
push
cmp
enter
imul
cdq
call
pop
xchg
mov
nop
xor
add
sub
in
jp
ja
mov
lea
mov
and
add
mov
pop
add
mov
xor
push
dec
push
mov
push
inc
scas
sbb
mov
xchg
pop
fcom
inc
sbb
into
xchg
pop
pushf
push
loopne
movs
ret
fwait
pusha
test
les
mov
jle
call
and
repz
sbb
stos
xchg
pop
xlat
clc
jp
(bad)
sbb
sar
xor
(bad)
imul
mov
sbb
push
gs
std
hlt
sbb
dec
pop
xor
and
hlt
jle
frstor
add
sub
fnsave
js
dec
inc
xlat
lahf
ror
retf
and
mov
gs
inc
dec
movs
pop
cmp
mov
xor
xor
je
cmp
jmp
out
jl
ret
test
sub
repnz
mov
pop
aaa
(bad)
fidiv
xlat
dec
hlt
jmp
add
mov
shl
xchg
inc
mov
out
or
(bad)
ss
fs
add
rcl
xchg
addr16
int3
aad
stc
aas
stos
jb
pop
jno
inc
and
outs
dec
sbb
dec
xchg
mov
adc
jae
call
int
or
cmps
mov
push
sub
in
scas
dec
mov
ds
push
add
or
add
cmp
call
popa
dec
xchg
pop
pop
inc
pop
xor
in
or
data16
mov
div
cmp
sub
push
jmp
ja
test
inc
inc
push
jae
lea
ins
pop
sub
call
int
(bad)
jmp
pushf
or
cld
test
xor
jo
pop
pushf
fisttp
leave
ss
dec
push
mov
jbe
pop
fucomi
cwde
inc
adc
call
xor
fcmovne
rcl
xchg
mov
fidiv
ins
mov
cmps
jnp
fisttp
sub
jae
mov
test
jae
mov
push
mov
sbb
or
pop
push
scas
test
(bad)
lea
popf
(bad)
sahf
imul
adc
cmps
push
adc
rcr
adc
jbe
dec
xchg
mov
ret
jp
mov
loop
or
mov
jne
and
jne
or
pop
and
outs
xchg
mov
pop
loopne
in
cmps
sbb
not
bound
and
jno
loope
gs
cmp
jnp
shl
int3
int3
cmp
mov
dec
jnp
int
fwait
jmp
ret
adc
adc
fistp
ss
cmp
dec
scas
ror
mov
into
in
lock
jmp
sub
outs
cdq
ret
(bad)
clc
test
xchg
push
cmc
cld
xchg
cld
inc
mov
or
cs
xchg
cmp
retf
arpl
loop
or
xor
sub
daa
jecxz
in
lods
adc
push
in
cmp
inc
(bad)
fld
jmp
inc
adc
or
ss
inc
outs
xchg
lahf
(bad)
jg
xor
push
dec
mov
lods
mov
sti
int3
les
inc
or
push
std
xor
push
(bad)
cmp
ins
adc
sbb
mov
je
adc
mov
dec
inc
jae
xor
jmp
scas
mov
inc
les
fidiv
cmc
jg
sbb
and
jno
(bad)
(bad)
add
dec
mov
xor
inc
inc
adc
mov
ret
call
sar
adc
(bad)
and
mov
cmp
loop
dec
ins
xor
pop
jne
cmp
jbe
xor
ins
jb
push
adc
mov
push
ds
shr
mov
icebp
movs
xor
xchg
inc
add
mov
fstp
pop
pop
outs
push
sbb
mov
pop
mov
lds
rcl
mov
aam
or
(bad)
int
push
inc
leave
jb
jmp
dec
addr16
pop
xor
ret
jbe
push
sub
jle
add
ins
inc
or
addr16
push
mov
push
mov
popa
inc
retf
adc
dec
lods
mov
push
sub
and
movs
in
stos
push
jb
jo
call
xor
push
out
nop
jo
inc
cmp
pop
add
or
inc
ret
inc
ds
cmps
iret
cmp
into
icebp
std
imul
stc
jae
sbb
xchg
fs
cmps
fwait
sub
lahf
rcl
das
push
dec
mov
inc
push
xor
mov
ja
mov
pop
mov
jbe
mov
cmp
xadd
sbb
mov
xor
pop
sbb
sbb
dec
mov
shl
sub
fimul
out
or
mov
add
fidivr
or
jno
push
dec
in
shl
loopne
and
inc
(bad)
enter
xor
sbb
scas
nop
mov
sbb
pusha
or
and
and
rol
icebp
nop
mov
mov
jno
fwait
(bad)
jg
cmp
sub
add
in
pop
mov
aaa
mov
fst
jp
mov
cmp
test
(bad)
or
xchg
xchg
imul
xor
mov
out
add
cwde
dec
arpl
xor
inc
adc
mov
push
add
fldenv
fcom
idiv
repnz
test
jg
(bad)
pop
xchg
add
fidivr
add
fdivrp
mov
mov
jnp
pop
adc
sbb
adc
xchg
int
cmp
jp
add
mov
mov
dec
sbb
cvtdq2ps
jae
sub
gs
dec
movs
into
dec
pop
je
inc
mov
xor
xor
sub
gs
inc
sbb
mov
dec
pop
push
sbb
and
jae
pushf
sub
pop
xchg
inc
mov
adc
jne
imul
or
fdivr
mov
mov
loope
cmps
or
inc
cmp
pop
pop
xor
loope
dec
js
fldenv
mov
or
pop
jge
(bad)
mov
adc
jnp
sbb
lds
jnp
and
xchg
pop
cmp
out
into
sbb
xor
pusha
in
jne
call
loope
push
popa
mov
cmp
pop
mov
or
js
xchg
adc
cmps
bswap
pop
cmps
sub
jl
dec
scas
sahf
scas
call
bound
mov
repz
add
cmp
retf
(bad)
scas
mov
mov
lds
call
test
leave
push
(bad)
sbb
pop
xchg
sub
cmc
mov
and
cmps
stos
sahf
dec
adc
xchg
sbb
mov
jne
pop
sbb
inc
mov
mov
clc
cmc
aad
daa
mov
push
outs
das
mov
hlt
xchg
popf
fisubr
jnp
call
pop
mov
sbb
iret
mov
or
jle
ins
or
inc
inc
sbb
movs
sub
call
dec
dec
adc
retf
mov
and
sub
gs
push
pop
mov
sub
and
sub
lahf
shl
(bad)
test
retf
(bad)
and
inc
jge
pop
or
sbb
cld
stos
dec
xor
push
adc
in
and
adc
mov
pop
inc
fidiv
push
fstp
repz
xchg
mov
lods
out
dec
mov
movs
dec
lahf
adc
cmp
cmc
push
out
std
mov
lea
cmp
sti
mov
cmc
jae
inc
add
imul
cwde
sbb
xlat
call
cmps
cmp
ja
in
test
adc
test
(bad)
mov
lds
sbb
jl
mov
(bad)
movs
leave
dec
minps
sbb
add
mov
pop
nop
test
xchg
push
mov
jl
or
dec
jb
push
dec
inc
mov
add
sbb
inc
sbb
scas
sub
cmp
pop
xor
xchg
mov
mov
jge
cmps
add
cs
push
nop
lds
mov
mov
adc
mov
mov
jle
faddp
dec
ds
mov
out
push
retf
pop
pop
call
test
int
sbb
cld
adc
or
iret
xchg
sub
cli
outs
enter
retf
push
(bad)
dec
daa
xchg
hlt
mov
push
pop
sub
or
xchg
pushf
pop
loopne
ss
in
or
adc
loopne
rcl
test
push
and
rol
mov
es
or
and
jno
retf
xor
cwde
call
sub
or
lock
dec
pop
adc
jl
sub
mov
fdiv
jg
xlat
adc
jne
inc
jmp
dec
stos
cld
cmp
test
push
xor
fild
in
call
or
call
stos
fwait
jb
pop
fbstp
je
add
lods
leave
xchg
sub
or
test
sub
mov
add
push
jg
or
push
mov
sub
out
adc
iret
mov
pushf
dec
das
pop
sahf
cmc
lock
mov
sbb
jmp
or
ins
dec
push
sbb
fcmovbe
mov
cmc
(bad)
fcmovnb
sbb
repnz
adc
or
stos
push
add
jl
push
sbb
jp
and
or
or
xchg
and
or
pop
mov
push
fwait
sub
(bad)
sub
out
push
xchg
and
add
addr16
retf
xchg
xor
mov
and
test
cmp
dec
shl
rcl
mov
push
mov
push
dec
jmp
jg
sbb
mov
and
call
in
movs
xor
xchg
jno
mov
out
xor
retf
ds
add
sbb
jno
inc
inc
aad
add
mov
mov
pop
repnz
dec
arpl
cmc
aas
sub
sbb
bound
imul
popa
call
adc
push
retf
lods
lock
xchg
scas
push
(bad)
xor
js
push
icebp
xor
loop
mov
pop
in
aam
xchg
dec
hlt
shl
push
fwait
mov
mov
push
xor
push
test
pop
cmps
mov
sub
pop
jmp
ficomp
xchg
push
mov
cmp
enter
cdq
lods
iret
mov
mov
push
pop
inc
mov
cli
ficom
loopne
mov
std
out
jo
popa
arpl
fsub
arpl
mov
and
movs
psubusw
stc
pop
cmp
dec
xchg
movs
add
in
and
in
pop
les
(bad)
xor
inc
test
cmp
mov
arpl
aad
(bad)
mov
stos
test
sahf
xor
ror
mov
test
xlat
push
mov
mov
jle
or
mov
jge
sbb
movs
cld
cmps
(bad)
xchg
sub
iret
js
loope
ja
sub
adc
mov
rol
jecxz
out
push
adc
stc
dec
das
icebp
push
jae
ja
cmp
(bad)
jle
adc
frstor
and
lock
iret
push
adc
and
add
dec
sub
ins
or
bt
pop
outs
and
mov
xchg
or
enter
lock
xchg
xor
dec
fdivp
jnp
jge
sbb
pop
dec
mov
add
dec
mov
adc
xchg
cwde
and
or
mov
mov
fadd
or
dec
jnp
shr
mov
inc
int3
inc
jb
and
pop
cmp
xchg
test
call
mov
fs
sub
push
aam
push
cmps
cli
out
(bad)
xor
sub
and
jmp
ltr
pop
mov
jg
or
cmp
sti
(bad)
cmp
ret
push
cmp
in
jmp
fld
add
hlt
adc
pop
cmp
fnsave
cs
out
xor
loope
popf
or
fstp
fdiv
js
fbstp
add
push
stos
aaa
add
push
sbb
cmc
scas
xlat
push
bound
xchg
adc
dec
xor
mov
jne
mov
sub
nop
popf
cwde
xor
aam
sub
punpckhwd
pop
or
jnp
xchg
psubusb
fisub
xor
out
mov
fcom
imul
adc
leave
pop
dec
fstp
push
aas
in
sub
add
arpl
cmp
mov
dec
int
and
jne
scas
imul
icebp
test
pop
mov
add
sub
jno
jl
push
in
rcr
loope
(bad)
stos
loop
push
das
xor
loopne
or
sub
aad
adc
(bad)
mov
psrld
xchg
jb
add
nop
mov
inc
sbb
test
mov
std
xor
test
sub
sbb
jmp
or
bound
cmp
jne
pusha
int
push
or
xchg
push
ja
je
dec
ins
outs
fwait
push
repz
push
loope
mov
cmp
gs
lahf
dec
mov
ret
std
cmps
ja
(bad)
in
jnp
lock
gs
cli
xor
jecxz
xor
call
scas
test
jnp
pop
dec
addr16
lea
or
(bad)
adc
inc
jl
in
test
cmp
mov
shr
mov
repz
leave
push
movs
outs
(bad)
into
mov
bound
sti
inc
push
jl
adc
dec
pop
adc
scas
inc
rcr
xor
pop
movs
jae
stos
rol
cmp
mov
or
jecxz
sub
pop
fcmovu
xchg
push
sub
pavgb
cmps
retf
jp
in
jmp
(bad)
adc
ja
call
cli
mov
adc
sbb
and
lds
es
mov
jne
bound
retf
dec
stc
mov
arpl
jmp
leave
div
loopne
cmp
out
fnstsw
xor
adc
idiv
xor
fsub
idiv
ficomp
jecxz
dec
repz
xchg
mov
repz
aaa
dec
das
test
or
arpl
mov
clc
sbb
xchg
mov
adc
out
lahf
mov
mov
or
ret
xchg
mov
into
mov
cmp
call
push
arpl
scas
es
adc
inc
(bad)
jle
gs
mov
mov
int3
popf
fs
push
scas
lods
cmps
add
push
mov
mov
sub
mov
push
fadd
cld
int3
inc
cmp
mov
mov
jb
mov
and
out
aaa
imul
jge
out
lds
lods
fwait
adc
mov
push
push
outs
mov
out
(bad)
gs
mov
les
add
(bad)
cmp
fcomip
xor
cmps
sub
mov
mov
imul
ja
add
xchg
or
outs
(bad)
cmp
mov
out
sub
push
xchg
idiv
add
push
xchg
pusha
cmp
arpl
fild
jmp
jnp
xor
sub
(bad)
cmp
sbb
cmps
jnp
das
inc
gs
and
mov
mov
inc
push
ins
test
and
ja
mov
dec
stc
rol
cmc
test
fsubr
cwde
or
in
xor
sahf
ds
rcl
jmp
cmps
cld
dec
mov
mov
pop
inc
sub
lahf
mov
daa
shl
jb
cli
mov
mov
mov
push
in
add
sbb
lea
in
shl
ss
jl
add
enter
and
pop
push
movs
imul
push
int3
inc
pop
xor
out
adc
lods
add
mov
movs
adc
mov
mov
call
stos
sti
inc
aad
cmp
inc
sub
dec
or
push
pop
xchg
dec
test
int
xchg
mov
lds
jle
test
in
cmc
outs
in
push
and
sbb
loop
inc
sbb
or
pop
sbb
jns
add
(bad)
int3
shl
mov
movs
mov
mov
lods
cmp
into
mov
xor
(bad)
out
paddusb
test
jp
dec
and
xor
ss
addr16
push
sub
xor
sbb
pop
addr16
clc
lods
rcl
and
cmc
xchg
sbb
jo
mov
jecxz
sbb
add
(bad)
(bad)
popf
mov
(bad)
jb
not
gs
xor
rcr
adc
xchg
movs
stos
inc
ds
in
and
test
jl
xor
(bad)
imul
stos
add
sbb
jb
sub
mov
adc
inc
mov
and
add
cli
ins
(bad)
ffree
pop
mov
xchg
jecxz
cmp
and
fsubrp
fadd
xchg
call
push
mov
mov
dec
call
inc
inc
stos
out
sub
adc
ficom
fs
not
lea
mov
ins
push
mov
push
mov
sbb
gs
and
(bad)
loopne
mov
add
repnz
xor
add
dec
mov
pop
inc
mov
push
stos
js
jmp
add
dec
ja
adc
push
ins
lahf
cmp
cmp
xchg
pop
in
inc
test
mov
sub
dec
lahf
lods
push
sti
lds
int3
xchg
test
sahf
sbb
xchg
loopne
out
and
aaa
push
inc
movs
jl
jnp
int3
xor
cmp
xchg
mov
dec
push
ror
popa
and
aam
sar
sbb
hlt
cmp
fcomp
test
dec
retf
mov
sti
repz
retf
in
dec
mov
aas
mov
adc
ins
sub
es
int
imul
test
adc
cli
jns
push
xchg
sbb
push
dec
lahf
push
clc
adc
dec
inc
mov
scas
mov
adc
dec
retf
and
pop
movs
mov
push
mov
add
and
lds
push
clc
cmps
popf
popf
inc
mov
(bad)
aas
and
xor
xlat
mov
mov
jne
jo
call
pop
dec
add
loop
fnsave
das
pop
(bad)
ds
jecxz
sbb
inc
adc
movs
add
push
mov
push
adc
imul
data16
test
out
ret
test
or
push
jge
dec
(bad)
enter
cs
jl
mov
mov
dec
mov
stc
rcr
jo
dec
imul
call
sub
or
adc
shl
xchg
adc
add
in
repz
push
push
and
lock
jns
jle
sub
xor
add
cld
sbb
mov
gs
mov
ret
adc
mov
je
or
(bad)
push
mov
js
and
seta
push
dec
aas
ds
fiadd
cld
mov
inc
fcomp
(bad)
cmp
cmp
ja
pop
adc
push
cwde
fist
cli
mov
fstp
push
and
push
cmps
movs
and
inc
mov
push
ja
std
inc
js
lahf
(bad)
sub
sub
add
adc
jle
dec
aaa
xor
cmp
push
(bad)
cli
inc
fdivr
stc
sar
hlt
addr16
and
sbb
nop
jg
movs
xchg
sbb
or
mov
retf
sbb
dec
outs
pushf
pop
int3
xchg
sub
cmp
push
retf
cmp
pop
mov
imul
xor
xor
adc
cs
loope
add
hlt
xor
and
add
cmp
dec
pop
bnd
and
lods
mov
mov
cmps
arpl
out
fcmovbe
sbb
out
push
pop
adc
out
outs
ins
xchg
or
jge
rcr
or
jmp
mov
xchg
std
das
les
sub
cmp
mov
sar
jmp
xchg
aas
add
pop
ret
cmp
test
lods
mov
iret
dec
sbb
retf
retf
xor
repnz
xor
aas
mov
push
loope
fiadd
lahf
int3
popa
and
addr16
jge
in
sbb
push
popf
shl
sbb
test
jo
ins
outs
push
test
mov
scas
sub
mov
lea
pusha
xchg
pop
dec
and
aam
mov
cmp
and
cdq
xchg
repz
ins
out
lock
call
mov
mov
cmp
adc
repz
mov
inc
fisubr
aad
mov
cld
and
fwait
pop
pop
mov
in
fisttp
scas
xchg
xor
js
sub
mov
rcl
mov
(bad)
test
mov
jmp
movs
jp
shl
xchg
adc
adc
sti
sub
seta
outs
test
outs
jg
les
pop
dec
scas
pop
push
outs
dec
adc
add
mov
xchg
movs
mov
ds
and
inc
jmp
test
push
mov
mov
jmp
push
fimul
or
xchg
(bad)
jne
push
imul
jmp
ds
cld
cmovbe
cmp
(bad)
dec
mov
sbb
popa
fsubr
mov
mov
je
push
loop
call
(bad)
pop
push
push
sbb
sub
test
inc
imul
lds
adc
add
rcr
fcomp
repnz
inc
popa
rcl
inc
sti
dec
int
js
pop
jge
jle
mov
lods
clc
mov
mov
int3
and
mov
das
sbb
push
jo
lea
push
pushf
fdiv
fmul
inc
add
(bad)
adc
pop
sbb
pop
mov
test
ror
loopne
mov
cmps
mov
push
jl
cmp
aas
xchg
adc
push
inc
mov
push
pop
push
push
push
mov
rol
in
sub
pop
dec
out
and
(bad)
sbb
adc
out
rol
cli
or
mov
pop
dec
mov
aaa
lods
stos
cmp
lahf
ja
and
imul
pusha
and
js
int3
and
cmp
fwait
adc
icebp
jo
rol
xchg
std
rcr
and
adc
scas
call
ds
cmps
repnz
sbb
int3
mov
out
add
dec
js
mov
sub
not
hlt
cmp
push
sbb
fistp
rol
xchg
les
jbe
nop
call
jmp
and
lahf
dec
pushf
xchg
mov
adc
pop
pop
test
(bad)
xchg
call
jmp
out
inc
jmp
inc
xchg
lea
shl
test
xor
or
(bad)
into
push
paddb
mov
xor
xor
dec
sbb
mov
cmc
xchg
adc
mov
add
out
scas
push
aam
adc
retf
lds
repnz
mov
pusha
movs
std
mov
das
ja
out
or
xchg
xchg
cs
dec
jp
mov
test
mov
sbb
pop
sbb
jge
jae
and
daa
cmp
sbb
push
movs
loopne
push
inc
(bad)
cmps
jne
add
fwait
xor
push
int
sub
or
inc
stos
adc
dec
rol
cmc
jp
ret
mov
jmp
mov
inc
jmp
xlat
mov
jge
dec
ds
inc
aad
sub
enter
jb
repz
mov
jnp
cwde
sbb
jl
les
sti
retf
(bad)
sbb
sub
add
hlt
xor
sbb
adc
ins
dec
daa
dec
int
push
add
fst
and
sbb
lea
outs
movs
xor
mov
and
cmp
adc
retf
fld
sub
add
jmp
popa
push
call
call
mov
out
cmps
push
mov
(bad)
out
xor
(bad)
out
or
popa
mov
aad
pop
dec
push
bound
xor
add
sahf
test
mov
jno
lods
add
popf
inc
sbb
add
out
test
js
pop
iret
fldcw
lods
or
push
sbb
lods
test
enterw
adc
xchg
aas
fcomp
rcl
jp
pop
cmp
test
mov
adc
push
mov
in
aas
mov
and
lock
fst
pop
xor
or
(bad)
ret
mov
repz
cmp
shr
test
xor
xchg
ss
xor
sahf
and
pushf
fisttp
and
jge
shl
push
pop
inc
push
push
outs
mov
sub
mov
and
jmp
int3
cld
mov
test
test
jecxz
mov
(bad)
mov
mov
inc
scas
mov
fcomp
out
cmp
pop
fstp
sbb
and
mov
dec
dec
dec
adc
ds
sbb
cli
pushf
add
std
fisubr
pop
sub
jge
xchg
fdivr
xlat
inc
and
xor
and
push
fcmovu
or
xor
das
ss
sub
mov
push
mov
(bad)
xor
jbe
sub
fwait
repnz
repz
sahf
fisubr
hlt
push
jno
push
scas
mov
xor
push
repz
sbb
pop
jmp
mov
hlt
cmp
inc
bound
xchg
in
scas
mov
cmp
aad
push
push
es
shl
push
inc
ja
push
sbb
ja
xchg
sub
add
pop
sbb
inc
lods
mov
push
dec
and
push
pushfw
push
js
mov
into
adc
(bad)
nop
shr
jb
xchg
sub
xchg
mov
add
mov
pop
jge
ja
inc
jne
je
inc
aas
inc
dec
push
lahf
repz
aam
icebp
inc
or
outs
dec
(bad)
leave
popf
sbb
fsub
pop
outs
fld
rcr
mov
mov
lea
scas
cmp
(bad)
mov
data16
xor
xchg
inc
xor
push
loopne
push
push
sub
mov
and
sbb
cmps
mov
into
test
push
xlat
or
jne
ficom
gs
enter
mov
fild
or
xchg
aaa
push
lahf
sbb
and
enter
loop
and
lock
add
(bad)
dec
adc
in
pushf
push
jmp
mov
daa
in
sbb
jecxz
rcl
jo
sti
push
pop
jl
jae
test
mov
stc
xchg
test
in
cld
int3
mov
pop
sbb
add
iret
aad
xor
push
dec
push
dec
push
call
xchg
dec
sti
push
stos
cmp
push
(bad)
ds
mov
rcl
mov
adc
icebp
add
or
mov
imul
cmp
enter
cdq
xor
mov
adc
dec
std
jg
pop
mov
ins
rcl
mov
clc
mov
loopne
cmp
aaa
mov
push
ins
sahf
(bad)
push
stc
rcl
outs
pop
adc
fnsave
jnp
pop
out
je
mov
mov
leave
cs
mov
mov
push
push
push
xchg
bound
jb
out
clc
xor
not
xor
cmp
cdq
cmp
sbb
stc
test
aaa
dec
mov
inc
outs
aad
dec
dec
adc
sar
inc
sbb
xor
jne
mov
cmovno
push
sar
aaa
push
push
fldenv
dec
mov
icebp
jns
cmp
cmps
xchg
xchg
(bad)
ror
ds
pop
sub
push
icebp
jae
fmul
and
or
lock
(bad)
in
icebp
sbb
jbe
pop
(bad)
cmps
xor
mov
stc
mov
ins
mov
lods
push
and
outs
mov
mov
fdivr
es
(bad)
fdiv
jb
push
xchg
into
push
jg
in
jns
lods
ja
jnp
fst
ins
scas
push
mov
pop
test
bound
movs
loope
adc
dec
fbld
out
mov
mov
fistp
std
rol
sbb
push
sbb
retf
shl
outs
push
jb
fidiv
mov
sti
mov
fld
add
ins
cmc
mov
push
inc
mov
in
fisttp
les
sbb
repz
cwde
xor
or
and
or
ins
ds
das
fcomp
or
push
inc
inc
jg
in
and
out
bound
lds
xor
(bad)
pop
aam
xchg
imul
clc
pop
xor
pop
nop
call
call
or
jmp
jmp
addr16
dec
xor
dec
inc
imul
lahf
fimul
xchg
push
xor
sbb
lahf
mov
jmp
push
mov
out
push
lock
pop
sub
movs
push
mov
adc
scas
sar
cmps
sbb
mov
ret
xor
es
fcom
adc
mov
stc
fimul
pop
push
ss
xchg
cwde
push
push
bound
gs
or
mov
mov
retf
movs
imul
retf
dec
repz
cmp
mov
and
outs
ds
cmps
dec
jbe
or
mov
xchg
cmps
inc
aam
push
je
sar
jge
mov
and
lock
jp
int3
out
fcom
(bad)
fidivr
ss
movs
sub
mov
mov
xor
dec
adc
xchg
aas
adc
addps
mov
sub
add
loopne
mov
push
mov
inc
bound
xchg
cmp
cwde
test
jb
sar
sbb
lea
stos
dec
jno
mov
pop
sbb
push
cs
int3
sti
gs
stos
stos
inc
jae
or
xor
jb
jae
sub
push
ins
adc
dec
push
mov
cmps
stos
test
pop
test
arpl
sub
inc
add
push
das
pop
push
aad
out
mov
mov
mov
ins
xchg
aad
test
test
hlt
adc
mov
mov
test
out
adc
add
(bad)
push
mov
jno
lock
or
loop
hlt
std
sbb
mov
inc
rcr
cmps
cmc
ins
mov
test
ret
iret
je
xchg
add
or
mov
lods
dec
in
lea
mov
enter
js
or
mov
adc
pop
mov
mov
int3
jns
loop
stos
dec
fnstenv
and
push
nop
les
bound
pop
jl
int3
lock
inc
xor
push
mov
in
xor
pushf
(bad)
mov
inc
push
jne
mov
iret
jmp
ins
std
popa
mov
xchg
jp
repnz
mov
dec
stos
imul
mov
lds
mov
enter
cmp
out
cmps
and
dec
rcr
call
and
dec
repnz
sbb
mov
in
lock
mov
icebp
pop
mov
xor
sbb
push
(bad)
loopne
inc
aaa
dec
pop
ror
push
mov
test
xor
mov
cmp
mov
pmaddwd
aas
or
daa
xchg
xchg
sbb
fnstsw
repz
sar
sbb
gs
mov
sbb
pop
add
fild
and
sub
div
dec
and
pop
mov
adc
out
addr16
cmp
pop
movs
movs
add
jp
pop
jne
out
in
fdivr
pop
mov
cmc
nop
push
dec
xchg
mov
add
inc
jg
test
lods
xchg
mov
pushf
into
xor
test
mov
enter
shl
ins
xor
add
inc
hlt
push
aad
pop
xor
addr16
jnp
mov
lods
cdq
xor
adc
mov
jl
retf
loopne
inc
inc
ret
xor
jecxz
mov
mov
mov
adc
sbb
or
pop
jecxz
pop
(bad)
ficomp
out
or
icebp
pop
jnp
bound
push
push
xchg
sub
mov
mov
and
add
int
jbe
xor
and
pop
or
xor
fbstp
xor
icebp
dec
loopne
popf
sbb
pop
pop
(bad)
(bad)
push
dec
inc
inc
mov
xchg
stos
pop
jns
out
in
cmp
int3
retf
mov
fcomp
push
lea
cmp
inc
or
pop
push
jg
cmp
dec
add
jl
and
and
lods
add
out
lock
imul
(bad)
cmc
push
xchg
cli
out
jmp
in
add
mov
xchg
mov
mov
lea
mov
(bad)
retf
cmp
cmps
push
mov
mov
data16
(bad)
sbb
es
sub
add
mov
es
push
jo
(bad)
pop
push
push
or
icebp
mov
les
imul
je
push
std
xor
mov
and
or
xor
dec
mov
std
pop
mov
shl
or
mov
inc
sub
mov
ror
mov
test
dec
retf
into
clc
pushf
cmp
cdq
enter
or
pop
aas
cli
(bad)
cmp
idiv
cmp
xor
mov
push
pop
inc
cli
jg
aaa
retf
jmp
retf
inc
hlt
js
jp
dec
fist
jae
push
mov
xor
scas
pop
and
xchg
cmp
out
outs
(bad)
out
mov
and
(bad)
xor
imul
xchg
adc
fstp
mov
mov
pop
jae
xchg
test
fld
(bad)
(bad)
std
popf
sub
in
pusha
inc
imul
adc
cmp
jp
jo
push
adc
(bad)
inc
jno
push
mov
scas
mov
scas
call
loope
mov
nop
push
sub
or
or
iret
and
fistp
jmp
dec
fild
pop
addr16
outs
cmp
and
in
sub
(bad)
shl
xor
jg
add
pop
xchg
pop
aam
cmp
xchg
lds
fild
cli
lahf
lahf
fild
add
push
mov
jo
cmp
in
mov
test
call
jmp
call
mov
sti
cs
pop
dec
(bad)
sbb
int
in
xchg
push
(bad)
clc
push
xchg
push
dec
xchg
cmp
mov
fdivp
dec
pop
cs
add
dec
ror
stc
jl
out
inc
loope
data16
loop
fwait
ins
mov
ficomp
push
dec
aaa
add
aaa
mov
add
inc
aaa
jle
jbe
pusha
aam
pop
int
pop
cmp
and
dec
pop
mov
(bad)
add
push
clc
adc
inc
sub
xchg
loope
sbb
mov
mov
std
adc
fistp
mov
sub
ja
or
inc
mov
xor
mov
shl
stc
in
pop
pop
push
sbb
hlt
mov
stc
int3
mov
sar
repnz
fstp
icebp
in
(bad)
mov
(bad)
pop
stos
mov
dec
mov
sbb
or
aam
push
addr16
test
cmps
push
dec
sub
add
xor
leave
xchg
mov
add
sbb
fstp
xor
or
lods
stos
clc
xor
sbb
push
in
jo
ja
shl
mov
push
jl
ins
cmp
cmp
push
es
test
push
add
and
mov
mov
loop
loope
clc
(bad)
and
dec
inc
clc
int
outs
addr16
jmp
out
pushf
mov
call
pop
retf
pop
scas
repz
xchg
pop
ret
push
push
imul
in
sar
push
adc
enter
lahf
mov
pop
xchg
sbb
dec
(bad)
xchg
or
icebp
add
cmp
sbb
ret
(bad)
sub
lods
mov
repnz
sub
in
mov
cld
adc
inc
pop
int3
push
or
jno
pop
aas
or
shl
mov
mov
mov
gs
jge
out
push
cmp
fisttp
push
imul
xor
or
and
push
mov
lea
addr16
inc
(bad)
pop
adc
aam
das
enter
adc
sbb
imul
addr16
adc
pushf
push
push
xlat
test
mov
jbe
push
mov
sahf
inc
call
cmp
ror
aas
cli
mov
or
or
lods
lds
enter
mov
and
pop
bound
je
stc
test
mul
loope
test
push
push
or
or
cmps
or
test
and
stos
xchg
test
setns
xor
aam
jne
sbb
es
jnp
inc
ret
jmp
dec
sbb
out
mov
bswap
test
gs
das
lds
aad
jmp
add
popf
sahf
int3
mov
mov
mov
pop
cmp
test
xchg
arpl
fistp
bound
sub
jmp
mov
pop
sbb
jl
neg
arpl
mov
mov
push
pop
adc
add
(bad)
js
imul
or
lock
pop
jno
data16
pop
addr16
mov
jl
mov
or
mul
xor
lahf
push
out
stos
pop
stos
fwait
mov
fistp
imul
dec
add
inc
test
or
add
and
aad
mov
xchg
jns
xor
cmc
out
adc
push
dec
je
mov
frstor
popf
sar
movs
mov
loope
ds
loopne
sub
pop
mov
sbb
sbb
jae
cmp
push
cmp
xor
pop
pop
dec
xor
aas
shl
popa
out
idiv
add
leave
movs
leave
jne
push
push
sub
ds
dec
push
imul
ds
jmp
dec
or
and
into
and
cmp
cmp
and
or
and
cmc
stc
and
stos
jp
ret
sub
push
xchg
not
shl
dec
mov
ja
push
aam
jg
mov
mov
or
dec
cld
idiv
add
rcl
sahf
mov
pop
call
xchg
cmp
push
test
cmp
jb
mov
add
rol
dec
jge
sbb
pusha
js
mov
cmc
bound
sahf
inc
cwde
pushf
sub
mov
sbb
gs
js
sub
inc
test
(bad)
test
jmp
jle
cdq
push
dec
(bad)
retf
(bad)
out
repnz
popf
mov
pop
push
aaa
add
leave
daa
xchg
mov
(bad)
pop
xchg
fld
gs
shl
dec
sub
xchg
loope
inc
sub
test
or
jns
fcmovnbe
push
mov
int3
jbe
(bad)
push
cwde
add
hlt
loop
shl
or
daa
sahf
jmp
hlt
xlat
add
sub
pop
mov
adc
xchg
lock
add
xchg
sbb
pop
loop
mov
ss
xor
lods
jbe
jmp
test
mov
adc
mov
loop
std
and
xor
push
sub
and
and
movs
sbb
inc
cmps
or
into
jae
and
push
inc
(bad)
(bad)
pop
sbb
and
jmp
icebp
fimul
stc
retf
jl
sahf
jg
dec
pop
gs
pcmpeqb
mov
jb
pop
mov
rol
xor
cmps
sbb
pop
sub
imul
(bad)
call
rcl
xchg
sbb
mov
xor
out
push
mov
xor
xor
rcl
cmp
out
out
loop
es
rcl
mov
enter
fnstsw
mov
xchg
or
lods
loop
jbe
and
adc
mov
pop
loopne
(bad)
ss
and
xchg
mov
daa
cmp
in
ret
scas
xchg
mov
lds
dec
push
xor
cwde
jnp
adc
arpl
dec
push
dec
stos
push
push
inc
or
lods
pop
repnz
mov
sub
mov
dec
or
jecxz
gs
ins
imul
dec
dec
stc
test
dec
pop
cmps
out
push
mov
cmp
add
loop
outs
or
fbstp
sbb
jg
in
push
iret
jge
enter
mov
scas
dec
dec
adc
repnz
jne
mov
sbb
in
pop
paddsb
aas
pop
jnp
and
mov
stc
data16
and
cmp
ins
fstp
cmps
test
cmc
cmp
jecxz
inc
xchg
retf
jno
fadd
xor
in
push
xor
fwait
dec
stos
push
add
sbb
and
add
jmp
ins
dec
aaa
mul
push
out
stos
cmp
call
adc
(bad)
in
cmps
mov
ror
cdq
rcl
pop
xor
push
in
cmp
inc
mov
dec
in
gs
imul
jbe
mov
out
mov
bound
or
add
xchg
ja
mov
jmp
out
jnp
sub
xchg
jmp
aad
cmps
ins
loop
xor
repnz
icebp
test
aas
xchg
xlat
dec
fsub
in
xor
enter
aad
lahf
cmp
xchg
popa
mov
adc
mov
test
or
and
stos
test
into
in
add
test
sbb
sub
js
out
sbb
stc
add
push
jb
call
xor
fistp
adc
into
and
outs
stos
pop
fdivr
pushf
lea
or
push
sub
in
mov
es
push
xchg
add
ret
sbb
ins
call
mov
in
outs
clc
ret
sbb
sub
mov
dec
mov
les
and
fucomi
jg
hlt
sub
aas
mov
xor
or
xor
lods
jne
in
test
mov
mov
ret
jae
xor
test
shl
xor
lds
dec
cmps
mov
add
mov
xor
push
adc
sub
out
cmp
inc
cmp
and
ss
out
out
jb
cdq
daa
jecxz
adc
ss
inc
shr
pop
fbld
jns
or
jnp
out
sar
bound
xchg
fdiv
call
in
add
or
cmc
fxch
fcomp
inc
push
fisttp
add
jl
retf
mov
daa
enter
dec
or
mov
ins
mov
jge
sbb
add
jp
sahf
cs
cmp
push
das
into
cmp
cli
(bad)
xchg
hlt
out
int3
rcr
xor
in
les
jnp
add
and
lods
imul
and
ins
or
cdq
sbb
cmp
in
imul
bnd
dec
or
outs
das
sahf
pop
test
dec
test
js
jae
lds
and
or
xchg
push
push
int
mov
xchg
jbe
push
jnp
sub
rcl
retf
jno
lock
out
jnp
aad
jle
ror
fild
lock
ja
jae
sub
inc
cmp
aaa
mov
outs
fld
inc
mov
pop
lock
cmp
xlat
(bad)
inc
add
mov
adc
mov
mov
retf
shr
shl
or
fdiv
mov
daa
or
inc
call
fsub
pop
pushf
sbb
sbb
mov
push
out
push
mov
int
hlt
std
fcom
xchg
rcr
data16
add
nop
or
pop
ror
cmp
jle
cmp
das
rol
mov
mov
jp
xor
or
sbb
pop
xchg
pushf
popf
cdq
std
jb
dec
in
mov
xor
arpl
clc
iret
and
xor
cmp
or
sbb
in
lods
es
adc
lods
scas
(bad)
xor
xchg
imul
inc
cmps
imul
es
jmp
retf
adc
test
outs
fld
dec
pushf
mov
std
push
test
jl
mov
xchg
pop
es
out
scas
push
into
push
jmp
mov
or
(bad)
popf
add
and
pushf
inc
sub
das
nop
push
lock
test
loope
push
rcr
push
or
pop
jnp
movs
leave
pop
pop
stc
push
(bad)
std
push
iret
pop
push
xchg
pushf
jns
stc
nop
push
jp
add
inc
gs
imul
inc
jns
jecxz
fsub
push
aas
(bad)
push
xchg
js
cmp
ja
mov
ret
sbb
cdq
xchg
mul
xacquire
push
mov
movsx
or
or
aad
jb
pop
cmp
xlat
adc
add
outs
sbb
retf
rcl
int
xor
in
pop
test
jg
push
(bad)
out
stos
sub
or
inc
out
ds
inc
movs
leave
xchg
(bad)
lods
push
stos
ss
outs
aad
pshufw
xor
stos
push
jl
mov
adc
dec
sub
out
sbb
jg
lds
jecxz
mov
jp
jle
add
cli
into
outs
xor
(bad)
shl
jnp
ja
push
mul
cmps
push
jmp
adc
jo
movs
(bad)
xor
dec
lods
(bad)
xor
adc
ins
add
mov
jne
xchg
push
or
cld
ret
sbb
loop
retf
sub
xor
xchg
shr
inc
int
jo
lea
xor
xchg
cmp
cmp
mov
in
mov
mov
(bad)
aam
jns
inc
fild
sbb
add
pushf
ins
sbb
out
pop
jb
mov
xchg
mov
(bad)
clc
call
paddq
loope
ins
inc
popf
dec
mov
aas
ficom
idiv
loope
in
dec
sub
xchg
xor
std
sar
mov
push
call
jmp
adc
sbb
ins
and
mov
sub
repz
inc
pop
xchg
bound
and
jne
in
ja
(bad)
dec
sbb
and
enter
inc
add
loopne
pop
add
mov
jb
arpl
cs
test
mov
int
cs
adc
movs
xor
push
call
test
sti
sub
outs
add
push
or
test
add
cdq
sbb
sbb
ins
pop
cmp
(bad)
sti
inc
(bad)
enter
repnz
or
inc
pop
dec
sub
jecxz
in
push
lea
dec
pop
add
cli
and
aam
out
sahf
aaa
rol
sbb
imul
mov
sti
jo
jbe
aaa
or
pushf
jmp
jb
push
dec
in
and
aaa
fs
jo
xchg
popf
iret
aad
nop
push
sub
les
outs
not
mov
test
ins
ins
mov
stos
loop
sub
xor
outs
jle
sbb
mov
push
mov
and
cmp
sub
scas
(bad)
xchg
call
xchg
add
adc
xchg
xchg
rol
fadd
icebp
jle
and
inc
inc
shl
mov
sbb
ror
mov
push
push
xchg
jmp
mov
into
cmp
clc
and
and
xchg
pop
pop
jb
or
ret
movs
(bad)
retf
sub
shl
xor
dec
sub
mov
pop
jbe
adc
je
sub
mov
push
jg
lods
jbe
pop
cmps
das
sub
cmp
sbb
xor
and
int
or
and
addr16
mov
xchg
or
cmps
pop
jecxz
pop
sahf
jmp
repnz
outs
nop
ins
movs
adc
dec
adc
clc
jbe
jle
dec
ja
dec
lods
xchg
sbb
dec
in
pop
addr16
xchg
jno
xchg
rol
scas
xchg
fwait
pop
pop
fcom
das
pop
daa
ins
std
in
or
xchg
int3
mov
xor
pop
jle
ss
adc
sbb
sbb
cwde
icebp
cs
mov
push
cmc
inc
dec
fsub
repz
xchg
sbb
es
pop
cmp
sub
mov
mov
stc
imul
mov
jnp
aad
outs
xchg
push
shl
push
icebp
mov
mov
mov
dec
dec
call
xor
xor
retf
xchg
cdq
stc
or
loopne
xchg
stos
mov
cmps
mov
sub
xchg
test
and
inc
int
adc
enter
in
jns
and
mov
adc
mov
push
aaa
or
push
push
mov
hlt
mov
sbb
mov
into
repz
xchg
iret
not
addr16
sub
cmp
lods
sub
push
push
pushf
xor
imul
inc
and
or
fs
mov
dec
(bad)
std
or
call
sahf
iret
retf
call
aad
jp
stos
inc
push
les
out
nop
lds
dec
adc
inc
pmuludq
push
mov
retf
call
mov
iret
add
ret
add
push
or
outs
and
mov
stc
out
gs
sbb
in
add
aad
bound
cld
jbe
and
jnp
in
and
pop
cmp
enter
movs
mov
sbb
cmp
mov
sub
dec
mov
fmul
fwait
and
push
aaa
(bad)
movs
sbb
adc
mov
call
lahf
lea
mov
fdivr
jg
jmp
rcl
and
outs
add
sbb
xchg
jae
push
fdivr
mov
xchg
jo
in
mov
sbb
jmp
sbb
cmp
jmp
mov
xchg
xchg
xchg
and
rol
retf
adc
xor
iret
arpl
loopne
loopne
shl
ds
(bad)
or
push
leave
inc
mov
mov
int3
jo
ret
cmps
stos
and
mov
(bad)
(bad)
ror
mov
in
xchg
sub
jnp
add
lea
call
adc
retf
sbb
inc
push
in
cmp
dec
popaw
jmp
fwait
xchg
dec
ret
adc
and
test
leave
xchg
fdivr
or
jge
fisttp
rcr
lods
(bad)
loop
inc
les
xor
(bad)
ret
pop
ins
repz
pop
add
aas
xor
cld
xchg
dec
in
cmp
gs
push
fwait
xchg
xor
leave
outs
jmp
pop
outs
sub
outs
inc
(bad)
aas
xchg
and
jbe
pop
repz
sti
loope
mov
jae
shl
pop
jg
mov
mov
push
push
outs
enter
test
jmp
test
jp
addr16
pop
jmp
repnz
dec
rol
cmp
int
icebp
popf
movs
imul
retf
(bad)
bound
inc
or
xor
sbb
fst
sub
jns
ret
(bad)
sbb
sbb
ja
xchg
(bad)
outs
dec
jle
(bad)
fcmovb
mov
mov
inc
clc
push
sbb
mov
xchg
rol
mov
lds
xor
aam
ins
xlat
sbb
or
int
mov
mov
inc
xchg
add
std
mov
js
mov
inc
in
and
inc
(bad)
hlt
xlat
in
jecxz
push
xor
nop
out
inc
pop
xor
shl
nop
mov
push
dec
mov
mov
ror
loopne
mov
in
push
out
mov
das
loope
dec
dec
jmp
dec
test
hlt
test
movups
sti
and
sbb
mov
into
or
mov
push
rcr
cmp
dec
jmp
pop
mov
push
gs
and
mov
mov
inc
sti
scas
adc
mov
mov
mov
and
xchg
sub
and
sbb
fdivr
arpl
fsub
mov
or
rcr
ins
ins
or
adc
daa
and
aam
mov
shr
rcr
mov
mov
loop
inc
cmp
aaa
(bad)
clc
xchg
pushf
lods
aam
push
pop
jl
inc
ds
dec
clc
pop
adc
stos
pushf
test
or
dec
das
mov
inc
outs
call
lock
fadd
sbb
xor
aam
push
(bad)
movs
movs
out
movs
cmp
jo
and
mov
cld
retf
push
cmp
emms
inc
mov
cmps
and
ins
(bad)
iret
jae
or
sub
or
pusha
cmps
aam
jae
(bad)
jnp
xor
adc
lahf
and
sub
in
sub
mov
out
in
sub
fidivr
icebp
push
jns
aas
mov
shl
xchg
mov
iret
xchg
popf
mov
mov
mov
cmp
mov
mov
jbe
inc
idiv
add
jns
call
mov
shl
push
out
mov
add
mov
push
int
xchg
dec
pushf
or
mov
and
ja
sub
mov
pop
adc
int3
aaa
mov
pop
pop
popa
inc
dec
sbb
and
sahf
hlt
lock
stc
sub
mov
stc
leave
cld
sub
cld
mov
stc
ja
(bad)
mov
inc
push
adc
mov
sbb
fcom
(bad)
hlt
inc
out
cmps
iret
dec
dec
cmp
sbb
cmp
cld
jbe
popa
mov
sbb
adc
rcr
dec
into
inc
and
mov
mov
movs
nop
shl
pop
sub
xchg
pushf
aad
cmp
adc
sbb
out
mov
shr
add
and
(bad)
adc
call
push
xor
xchg
xchg
mov
imul
mov
je
sbb
jge
pop
adc
jno
test
in
aam
fisttp
push
icebp
(bad)
xor
fwait
inc
dec
popa
and
fdiv
shl
not
ds
lock
sub
repz
test
xor
xlat
fcom
cdq
cmps
or
sub
push
mov
addr16
neg
mov
mov
aam
fld
xchg
cmp
jae
xor
nop
enter
jns
xor
fld
sbb
inc
arpl
gs
bound
inc
stos
lds
push
push
or
cdq
pop
pusha
jmp
or
push
push
pop
sub
lock
(bad)
inc
mov
lods
jl
dec
or
fdivr
movs
inc
jge
adc
jnp
cld
(bad)
(bad)
daa
sbb
sub
lahf
outs
int
pop
xor
out
stc
mov
push
sub
fwait
cmp
popa
cmps
popf
fisubr
and
les
xchg
mov
pop
cmp
and
adc
and
xor
sar
out
jae
mov
pop
sub
cmp
ds
sbb
movs
loopne
push
dec
test
xchg
cs
daa
and
xlat
jne
inc
fs
popa
push
and
ins
aas
loop
rcr
jle
popa
mov
fild
rcr
mov
call
repnz
dec
inc
sbb
pop
sahf
adc
mov
js
(bad)
enter
stos
popfw
int3
fadd
xor
or
cmp
jp
mov
pop
jge
cmp
cmps
enter
xchg
icebp
adc
xor
fnstenv
sbb
fcom
enter
mov
or
retf
jecxz
jnp
cld
adc
je
xchg
xchg
fnstcw
outs
inc
cmovs
mov
push
mov
push
push
into
pushf
cmps
pop
mov
sti
fdiv
call
les
call
into
mov
inc
mov
jnp
add
mov
mov
dec
sub
xchg
fwait
cmp
popf
aam
int3
retf
pushf
jno
adc
add
push
movs
dec
loope
(bad)
pop
pop
push
cmps
mov
test
cmps
ss
push
push
loope
ins
inc
cmp
outs
sbb
pop
fst
jb
sbb
jg
cdq
(bad)
xlat
and
push
ja
push
push
sub
xor
cmp
sbb
mov
(bad)
xchg
leave
xchg
rol
test
test
or
fs
sub
or
inc
ins
push
aas
nop
xchg
mulps
(bad)
pop
mov
fwait
out
aad
cmp
push
add
fs
jp
or
push
loop
stc
xchg
test
cmp
retf
sub
and
mov
idiv
sub
adc
popf
xchg
adc
fldcw
mov
sbb
pop
enter
call
push
hlt
push
mov
fistp
pop
popa
ja
popf
pop
jp
imul
push
cmp
mov
and
add
mov
mov
leave
pop
(bad)
fadd
in
cmp
mov
push
adc
fnstenv
dec
stos
inc
jnp
xor
mov
and
pop
inc
dec
xor
and
adc
pop
push
mov
call
push
sub
mov
aaa
arpl
arpl
dec
das
xchg
mov
sbb
inc
(bad)
imul
xchg
loope
rol
dec
out
out
iret
xchg
sti
ja
sahf
fcomi
push
and
adc
mov
aad
fsubr
ins
inc
adc
cmps
mov
inc
mov
jno
pop
jns
and
sbb
adc
bound
jne
pop
jae
and
adc
and
mov
pop
(bad)
fistp
push
cmp
mov
dec
inc
lods
inc
dec
add
adc
shl
mov
dec
dec
pop
push
movs
aad
das
retf
mov
sbb
mov
push
ins
ins
mov
dec
stos
fstp
mov
je
(bad)
outs
(bad)
repz
icebp
outs
into
sahf
test
(bad)
adc
push
mov
aad
les
(bad)
repnz
add
enter
adc
sbb
hlt
mov
enter
ret
mov
mov
pop
daa
sbb
movs
push
scas
mov
sbb
or
lds
and
dec
xchg
dec
pop
push
ret
push
aas
cli
add
push
pop
xchg
jl
int
aaa
je
add
outs
popf
jl
cs
(bad)
mov
sbb
retf
mov
call
ja
push
int
dec
xlat
popf
imul
dec
pushf
movs
(bad)
dec
aaa
sub
scas
in
xchg
add
test
loope
sbb
sub
ja
dec
push
lea
fadd
int
imul
imul
adc
je
and
sbb
(bad)
cli
shr
into
lea
dec
xchg
lahf
pushf
ins
xor
dec
nop
add
cmp
xor
loope
push
pop
test
out
and
xchg
and
test
sub
dec
pushf
jge
jns
cli
imul
xor
inc
dec
mov
cmps
fs
xor
mov
shl
xor
inc
dec
dec
(bad)
stc
cmp
add
sbb
dec
daa
or
cmp
inc
jle
lds
imul
js
jmp
cmp
(bad)
adc
cmp
jo
mov
call
pop
jmp
cli
push
cld
push
ds
xor
push
mov
xchg
scas
call
sub
or
jne
push
fs
pop
or
cmps
mov
adc
je
push
stc
pop
in
inc
nop
add
push
cmp
sbb
and
adc
dec
add
repz
cmc
and
std
cmp
xchg
fwait
mov
rep
cmp
call
push
cmp
ins
and
or
(bad)
lds
dec
add
dec
sub
fsubrp
pusha
and
outs
mov
mov
sbb
inc
fcomp
inc
sub
call
cmps
test
jnp
mov
loop
cmp
sahf
or
cmps
sahf
(bad)
adc
aas
std
adc
cmc
dec
jmp
inc
mov
retf
cwde
dec
xchg
pusha
xor
sti
sub
dec
in
int3
dec
dec
push
ret
jmp
repnz
mov
inc
jl
add
xchg
adc
mov
and
xor
cmp
(bad)
cmp
push
inc
stos
aam
imul
add
ret
mov
dec
icebp
loopne
ret
sub
cmp
leave
mov
fidiv
push
into
imul
dec
pushf
lods
das
(bad)
sub
ins
call
add
shl
shl
mov
leave
add
pop
das
xor
call
inc
cmps
mov
xchg
or
cmp
push
fwait
sti
xor
push
das
add
mov
dec
xlat
inc
stos
movs
fsub
daa
mov
jne
test
xor
xchg
jae
ss
push
sar
push
fnsave
mov
cmp
sbb
cmps
mov
push
stos
push
cs
call
jbe
aam
mov
push
jl
stc
aad
jmp
rcl
fs
imul
in
or
jp
push
imul
test
fldl2e
jecxz
std
mov
call
or
int3
sbb
mov
repz
jns
push
iret
ins
sbb
adc
fdiv
mov
sub
(bad)
cmps
pop
(bad)
into
mov
in
cmc
call
and
pop
je
ret
loope
sbb
(bad)
js
dec
outs
push
into
jne
sbb
ret
inc
stos
jns
or
shl
sub
pop
mov
fwait
cmps
inc
pop
sub
out
jno
mov
pop
test
hlt
adc
mov
mov
push
pushf
dec
(bad)
jge
loop
jle
inc
in
mov
jne
(bad)
fisttp
aas
dec
fcmove
jmp
mov
cdq
cwde
lods
sbb
cmp
sbb
shl
push
and
mov
push
push
sti
imul
sbb
ret
call
dec
repz
fs
shr
dec
outs
cmp
xchg
int3
adc
fs
retf
cs
mov
mov
ins
lock
or
ins
pusha
inc
ret
pop
pop
mov
add
mov
inc
ja
pop
jns
push
les
daa
cmp
mov
jno
xchg
bound
pop
adc
addr16
and
lock
push
add
in
sub
retf
ds
adc
inc
xor
cmovbe
jnp
int
inc
mov
pusha
stos
mov
lea
std
aam
cli
add
fdivr
add
lods
les
ds
fcomp
push
(bad)
inc
fst
ins
and
retf
adc
adc
retf
popf
sahf
xor
ins
pop
dec
mov
retf
popa
inc
js
mov
inc
stc
adc
(bad)
jmp
cmps
in
jns
and
pop
aad
mov
test
jle
xchg
pop
pop
int3
adc
lds
add
fstp
movs
fstp
mov
inc
add
xor
je
and
jbe
(bad)
iret
cmps
mov
dec
add
push
dec
sbb
xchg
mov
ret
mov
shr
add
inc
call
test
dec
repz
cwde
sbb
push
in
inc
nop
ins
aam
push
sub
xor
lahf
mov
adc
add
jbe
mov
(bad)
jg
dec
es
(bad)
xor
mov
lock
outs
arpl
mov
imul
jbe
popf
or
retf
test
xchg
scas
mov
inc
xchg
push
(bad)
and
jae
pop
shl
mov
inc
mov
mov
sub
push
push
test
pop
bsf
xor
mov
or
idiv
mov
dec
test
in
pop
mov
ficomp
dec
add
bound
int3
cmp
sub
icebp
cdq
fdivr
dec
fwait
jecxz
(bad)
pop
dec
lods
sbb
or
cmp
add
mov
push
push
and
test
lock
jnp
jmp
push
nop
pusha
ffree
sti
inc
mov
pop
inc
sbb
cmp
jbe
and
fstp
(bad)
xchg
dec
jnp
xchg
dec
pusha
fisttp
(bad)
xor
iret
je
aam
dec
hlt
pop
adc
dec
sti
les
arpl
sbb
xlat
push
or
mov
dec
in
fsub
xchg
jbe
pop
imul
sbb
test
clc
dec
push
or
(bad)
jae
inc
push
push
mov
sti
and
div
lds
ret
les
cmps
push
cmps
fidivr
adc
cmp
and
sbb
(bad)
mov
in
xlat
outs
xchg
xor
dec
lods
adc
sub
xchg
xor
or
push
dec
xchg
das
sub
repz
ret
fisttp
popf
add
dec
arpl
sub
loope
pop
dec
inc
aas
jecxz
cmp
pop
ror
xchg
sub
cmp
add
xchg
add
jo
sbb
dec
ds
pop
in
fwait
outs
div
dec
or
aaa
repnz
xchg
mov
cmp
rcl
inc
lock
in
cwde
cmp
add
xchg
cmp
jp
mov
fs
lea
adc
pop
popf
shl
mov
sub
pop
dec
fstp
mov
retf
fdiv
pop
mov
mov
sar
mov
stc
mov
jnp
jne
cmp
adc
in
mov
aam
sub
inc
loopne
into
mov
outs
loopne
pop
jne
cli
call
jmp
adc
inc
lock
push
cdq
push
cwde
mov
push
addr16
fwait
inc
xchg
and
ins
and
mov
loopne
popf
ror
add
adc
jge
repz
int
xchg
jle
popa
push
dec
mul
fistp
hlt
sub
adc
(bad)
push
add
xchg
rcl
clc
jns
mov
imul
popf
in
or
add
push
imul
push
push
dec
push
cdq
sbb
adc
sbb
outs
mov
and
cmp
loopne
add
lods
dec
dec
lods
mov
xor
sbb
cmc
(bad)
adc
out
lods
sbb
dec
mov
pop
push
sbb
es
loope
or
lds
dec
inc
(bad)
clc
xor
jg
push
icebp
sub
shr
int
add
icebp
(bad)
pusha
pop
lods
sub
mov
hlt
xchg
push
out
fimul
jne
inc
in
jle
cmp
add
jmp
mov
pop
repz
mov
sbb
stc
es
les
sub
ds
dec
or
cli
fnsave
lea
mov
imul
cmps
inc
and
cmc
mov
xchg
mov
sbb
sub
outs
inc
outs
adc
add
stc
in
jno
nop
lock
call
push
mov
sbb
pop
adc
retf
daa
add
fild
fisttp
leave
mov
cmp
push
cmp
sub
jmp
mov
ret
pushf
and
cmp
or
cmp
sub
xor
ret
or
and
sbb
push
pusha
xchg
add
adc
repz
ficomp
xchg
in
push
dec
xor
test
jae
cmp
outs
call
adc
int
sbb
push
push
push
jl
mov
fcomp
cmp
es
bound
lds
jb
push
arpl
clc
or
(bad)
int3
mov
jo
mov
test
jnp
not
jmp
mov
xor
mov
ins
mov
inc
ss
push
aaa
test
mov
xchg
arpl
dec
or
fcom
mov
cmps
outs
mov
stos
inc
or
imul
inc
cmps
pop
lods
(bad)
fnstenv
sbb
add
loop
cmp
mov
bound
lods
jo
int3
and
or
shl
ss
ret
(bad)
jle
jns
(bad)
mov
test
xor
clc
sub
push
or
sub
xchg
mov
push
pop
inc
xor
xchg
pop
clc
mov
outs
adc
and
add
test
(bad)
loopne
mov
push
jmp
pop
shr
xor
jnp
and
test
cwde
mov
aaa
loop
pop
jne
retf
pop
xor
(bad)
or
dec
arpl
sbb
mov
cmp
or
mov
cmp
in
pushf
cmps
jg
lock
std
fiadd
sub
lock
call
fs
(bad)
ret
in
cmp
pusha
sti
pop
fstp
inc
jo
in
loop
adc
scas
mov
cmp
rcr
call
pop
retf
cmp
(bad)
gs
popa
mov
or
push
lahf
fcomi
pop
fs
pop
mov
repz
jecxz
jbe
into
add
cli
dec
xor
pop
sub
mov
ds
out
xchg
mov
or
cwde
fnstenv
arpl
mov
test
into
or
pop
fdivr
jne
out
(bad)
cmps
shl
stos
retf
or
fld
xchg
out
test
or
push
sti
mov
lock
mov
int3
adc
out
fimul
call
out
mov
inc
add
mov
neg
mov
adc
mov
jmp
adc
jp
mov
(bad)
lea
ret
mov
push
mov
ret
cmc
pop
xor
jns
add
sar
mov
call
and
sbb
adc
daa
fistp
adc
in
add
popf
inc
xor
and
jl
fiadd
mov
xor
iret
mov
xor
in
push
xor
sub
fiadd
pusha
outs
mov
repz
cdq
inc
loop
mov
test
xor
aas
pop
fwait
clc
add
dec
jmp
cdq
jb
inc
sbb
rcl
mov
call
jp
jp
stc
mov
xchg
dec
sub
hlt
push
aaa
push
out
gs
call
adc
and
ror
call
(bad)
pop
push
loopne
jg
mov
mov
call
outs
lea
sub
mov
ja
or
cmp
icebp
out
or
aas
les
daa
pop
jo
mov
sub
pop
rcl
adc
jae
scas
mov
in
cmp
jg
(bad)
jecxz
xor
pop
fs
inc
pop
or
and
cmp
out
outs
pop
cmp
sbb
daa
or
int3
fisttp
push
or
inc
retf
mul
inc
or
push
int3
pop
out
cmp
out
(bad)
pop
icebp
jns
mov
(bad)
jmp
xchg
push
enter
inc
addr16
fcmovnu
call
mov
xchg
dec
pop
fwait
xor
lods
ins
scas
xchg
pop
mov
pop
ret
pop
inc
out
mov
xchg
sub
inc
pop
pop
and
mov
std
lahf
retf
or
out
push
jp
sub
pop
sbb
sti
pop
inc
cmc
inc
xlat
icebp
fwait
mov
xchg
xchg
push
in
mov
dec
das
sub
(bad)
shl
outs
fild
push
pop
lock
jae
push
sbb
push
dec
call
es
mov
mov
fdiv
std
jle
cmp
test
out
dec
mov
cmps
push
rcr
sub
addr16
jne
sbb
pop
rcl
in
and
loopne
pop
jecxz
mov
jmp
pop
add
mov
btr
cmp
(bad)
iret
fstp
std
nop
xchg
std
in
xchg
(bad)
(bad)
mov
xchg
or
jg
outs
inc
daa
mov
(bad)
clc
mov
xchg
aas
mov
add
leave
jbe
dec
mov
lahf
mov
dec
(bad)
cdq
jecxz
and
push
sub
(bad)
xchg
push
shl
out
mov
js
lods
sbb
popa
xor
ret
test
ret
nop
retf
daa
aam
bound
call
cld
sub
dec
xor
push
adc
dec
shl
ins
(bad)
ficom
lea
mov
stos
mov
leave
aas
out
test
(bad)
add
in
jge
mov
pop
adc
pop
jmp
cmp
or
push
jle
ror
clc
mov
dec
mov
stos
sub
jp
retf
(bad)
enter
and
lods
sbb
(bad)
or
mov
pop
stos
mov
xlat
xchg
add
out
and
adc
fstp
in
xchg
xchg
clc
retf
test
lods
pop
invd
sbb
ret
or
xor
popa
mov
das
cmovbe
inc
ins
inc
inc
test
inc
adc
mov
cld
fwait
cdq
pusha
mov
mov
add
push
sub
addr16
mov
mov
mov
mov
or
in
ins
push
or
xchg
pop
sub
sti
cld
or
mov
pop
mov
add
lods
and
test
sbb
sub
int3
pusha
sub
xchg
iret
inc
jl
or
jne
mov
jge
imul
nop
es
rol
or
js
(bad)
popf
dec
test
in
cmp
jmp
cwde
xor
inc
mov
dec
push
add
loopne
push
mov
aas
pushf
sub
sahf
(bad)
fisttp
out
dec
imul
inc
and
xor
mov
jo
mov
push
dec
nop
or
popf
pop
ror
fld
push
std
repz
loop
retf
jl
jno
cmp
sbb
pop
push
adc
xor
shl
mov
daa
xor
fst
xlat
inc
sub
jo
dec
cli
les
pop
movs
mov
pop
and
xor
push
dec
sbb
push
jge
jns
out
(bad)
jb
rcr
enter
push
aas
mov
push
or
sbb
outs
idiv
push
pop
loop
xor
outs
adc
add
mov
mov
inc
xor
out
and
and
sub
shl
jae
dec
(bad)
ret
test
aam
pop
hlt
aad
jle
pop
das
pusha
lahf
mov
or
enter
xchg
pop
dec
cmp
fst
dec
inc
sub
mov
and
lods
mov
xor
dec
fwait
sub
fld
cmp
cmps
or
sub
inc
sub
jecxz
(bad)
push
rcr
loop
mov
push
ins
jp
test
das
push
test
ret
rol
mov
pop
push
dec
push
cmp
xchg
jb
inc
leave
movs
in
imul
sub
outs
ins
or
call
push
sub
xchg
cmp
fcmovb
jge
sub
cmps
not
aaa
jns
push
ss
aaa
shl
out
jb
push
cdq
pop
cmp
std
push
pop
repnz
inc
out
mov
lods
and
iret
pop
ds
sbb
jno
and
popa
adc
push
pop
xchg
enter
pusha
div
dec
ds
xchg
inc
sbb
mov
sbb
xchg
fsub
inc
es
xchg
loopne
cmp
sub
cdq
mov
mov
jp
mov
out
mov
dec
fisub
cmc
inc
dec
or
xchg
and
in
pop
cmp
outs
jp
push
cmp
inc
mov
and
loope
sub
out
test
sbb
mov
push
and
inc
add
std
lods
aaa
shl
stos
inc
pop
mov
mov
jo
push
dec
and
cli
lds
xchg
lods
lock
inc
inc
ja
xor
jmp
add
popf
sbb
gs
cmp
dec
inc
jo
in
je
xor
movs
xor
aaa
lds
xor
gs
pop
adc
mov
xchg
movs
sbb
mov
js
retf
pop
mov
and
aam
in
addr16
aaa
dec
(bad)
(bad)
sar
fabs
fadd
or
mov
cld
push
and
mov
pusha
pop
pop
mov
pop
xor
pop
add
mov
scas
enter
fnstcw
mov
jb
sub
test
add
mov
mov
jg
imul
inc
pushf
fcomp
lock
aam
add
sbb
mov
jbe
popf
movs
jno
inc
jae
adc
or
out
mov
pop
cmp
aas
lds
(bad)
jnp
ds
iret
(bad)
rol
out
mov
jns
dec
sti
aad
inc
cli
jb
clc
cmp
xor
call
addr16
mov
sub
add
jbe
dec
loope
mov
xchg
(bad)
mov
pop
add
out
mov
sar
lds
add
mov
push
add
je
ret
pop
movs
addr16
je
outs
sub
shr
push
lods
mov
arpl
ss
call
pushf
(bad)
popf
jno
mov
mov
inc
mov
mov
mov
movs
or
mov
repz
jne
lock
aam
outs
fdiv
mov
std
popa
sti
mov
loope
push
add
xlat
ret
push
pop
out
inc
pop
push
adc
neg
outs
fstp
retf
mov
push
loop
sbb
sti
(bad)
mov
out
xor
or
xor
cwde
cmp
shr
jnp
outs
(bad)
cmc
fdivp
test
je
and
sub
lds
sbb
add
pop
jne
add
or
arpl
lock
outs
add
jmp
push
(bad)
shl
ffree
dec
mov
push
mov
movs
pop
jns
dec
sub
sysret
lods
rcr
stos
les
call
aam
sahf
sub
movs
mov
test
aas
sbb
lods
sbb
cmps
ins
jb
or
fnstcw
fidiv
sub
mov
mov
mov
rep
(bad)
sahf
mov
or
pop
pop
dec
test
inc
mov
das
xchg
test
iret
sub
out
or
loopne
inc
inc
push
cli
rcl
movs
add
push
cmp
push
xchg
aaa
pop
(bad)
push
mov
mov
addr16
dec
pop
lock
mov
inc
int
(bad)
(bad)
push
dec
push
sub
lds
rcl
mov
test
repz
mov
xchg
inc
shl
xor
test
pop
ret
xchg
cmp
stos
ffreep
xor
imul
inc
int
int
(bad)
xchg
outs
jo
dec
adc
ja
fwait
and
jle
rcl
mov
(bad)
mov
ror
mov
fsub
stc
in
out
cdq
jge
popf
xchg
inc
jle
lods
or
in
mov
mov
cmp
adc
iret
adc
lahf
xchg
cli
jge
xor
out
mov
xchg
fidiv
aas
sar
icebp
fiadd
daa
xor
push
stos
aad
jecxz
leave
mov
retf
out
push
outs
mov
leave
add
leave
adc
push
scas
add
retf
test
aas
xchg
mov
xchg
adc
mov
xchg
sub
test
adc
jecxz
pop
mov
pop
fld
cmps
and
inc
nop
sahf
icebp
out
fisttp
sbb
dec
add
and
inc
and
xchg
push
add
div
jecxz
adc
inc
ins
mov
shl
inc
fs
cmps
clc
mov
xchg
outs
les
and
inc
das
or
(bad)
inc
inc
mov
jnp
dec
in
out
xchg
ret
push
adc
shl
xor
xor
adc
ret
cli
(bad)
stc
movs
xor
sub
and
das
mov
sbb
dec
fwait
imul
jb
pop
in
jmp
jmp
gs
lods
mov
pop
push
in
dec
xor
jp
fdivrp
les
mov
arpl
and
mov
ficom
in
stos
mov
repz
jmp
cmp
cmp
pop
sbb
mov
add
xor
retf
add
out
mov
nop
in
cli
mov
fucomip
mov
add
hlt
ret
and
test
pop
rol
int3
and
in
mov
mov
and
mov
xchg
js
pop
into
pause
pushf
sbb
adc
sbb
lock
(bad)
jo
jae
cmc
inc
jmp
xor
int3
test
or
rcl
jp
pop
clc
mov
cli
scas
and
sahf
sar
push
mov
(bad)
inc
adc
imul
mov
or
sub
xlat
sbb
pop
lods
gs
or
and
inc
sub
es
test
pop
cs
xchg
mov
cli
repnz
sub
fs
mov
dec
pop
addr16
mov
xor
rcr
(bad)
lock
test
dec
or
outs
nop
and
cwde
les
sub
and
xor
(bad)
in
sahf
mov
cld
inc
mov
cmps
cmp
aaa
lods
jae
outs
sti
stc
ror
or
fdiv
hlt
xchg
and
test
mov
in
pop
ror
jno
dec
jae
clc
push
bswap
cmp
test
pop
repz
cmp
jo
ret
jge
fcom
mov
(bad)
push
or
dec
cdq
pop
scas
aam
push
arpl
sar
bsr
adc
shl
fst
jne
pop
add
add
mov
sbb
out
(bad)
xchg
das
dec
enter
inc
lds
pop
and
movs
inc
call
js
mov
push
fsub
leave
retf
sbb
add
aad
popf
jecxz
pop
lahf
mov
cmp
ja
aam
mov
inc
test
mov
in
dec
dec
jge
cli
fs
icebp
pusha
sbb
and
(bad)
loop
ds
cmp
add
mov
gs
jmp
sub
cld
ins
in
adc
dec
add
aad
or
ss
pop
and
mov
scas
pop
sbb
cmp
ror
cs
cmc
sbb
(bad)
xchg
push
loop
hlt
cs
pushf
jne
lock
xor
cmps
cld
adc
das
push
or
xor
lock
add
and
fnstsw
xchg
daa
mov
stos
rcr
add
mov
repz
or
add
das
lahf
xor
in
mov
sbb
setl
loop
push
jne
mov
movs
mov
outs
gs
idiv
xor
sub
fist
push
or
jg
push
cmps
xchg
movs
test
aad
cmps
sub
aad
dec
movs
sti
inc
or
scas
jmp
xchg
inc
pop
ficomp
xor
loope
jo
sub
add
fdiv
(bad)
mov
mov
or
call
push
xor
mov
cmc
inc
jnp
pop
in
mov
cdq
cwde
int
hlt
jns
stos
arpl
mov
iret
inc
arpl
jp
icebp
add
(bad)
out
mov
mov
pop
dec
ffree
sti
xchg
inc
lahf
sbb
pop
mov
pop
adc
xchg
div
mov
push
cmc
xchg
mov
cwde
push
data16
ret
mov
stos
fadd
push
xchg
jmp
jb
enter
cmp
test
std
mov
inc
add
test
stc
mov
loope
dec
out
xchg
dec
test
sbb
xor
xchg
mov
add
fcomp
scas
cmc
mov
loop
mov
mov
cmp
mul
add
xchg
push
jle
push
scas
iret
daa
xchg
cmp
mov
mov
add
int
icebp
mov
push
mov
mov
lock
das
stos
xor
pop
test
jo
sbb
xchg
scas
inc
test
retf
(bad)
fwait
sbb
add
bound
(bad)
xor
or
sbb
shl
mov
outs
inc
jge
cmp
push
aas
(bad)
mov
jne
mov
mov
test
loope
es
xchg
jle
pop
lea
fadd
xchg
sub
fnstenv
jecxz
mov
arpl
je
into
stos
pop
ficom
mov
cmp
mov
mov
stc
out
enter
inc
or
gs
add
sahf
mov
dec
je
jge
cdq
adc
dec
sub
(bad)
mov
stc
fs
lods
ret
shl
test
or
cmp
mov
mov
and
shl
xor
jle
psubsb
jle
aas
push
test
sbb
ss
lods
int
js
(bad)
xchg
dec
out
repz
add
pop
inc
sti
hlt
pop
push
not
inc
pop
pop
mov
mov
xchg
and
pop
ret
jg
xor
inc
xor
and
stos
loopne
fisttp
xlat
mov
ror
sub
adc
xor
pop
push
add
lea
lods
rcl
ds
mov
je
adc
jo
jle
sub
dec
cdq
inc
cmp
inc
mov
rcr
in
popa
xchg
out
xchg
fmul
mov
mov
add
mov
fstp
xor
fild
push
outs
xchg
jecxz
sbb
mov
mov
bound
sti
hlt
loopne
pop
sub
mov
and
dec
sub
std
adc
retf
retf
leave
mov
sbb
shl
jo
lods
xor
xor
jecxz
aam
mov
mov
mov
repnz
xor
cmp
ret
scas
rcl
xchg
ins
sub
dec
(bad)
xchg
das
sub
jle
shr
dec
or
in
mov
push
dec
jae
jp
xchg
repz
pop
mov
push
outs
xor
mov
loopne
mov
test
inc
xlat
fs
cmps
int
push
sub
mov
adc
rcl
clc
lods
div
sbb
or
mov
mov
dec
add
adc
xor
data16
out
test
into
je
adc
mov
dec
je
jp
xor
jmp
push
mov
inc
mov
into
in
imul
icebp
sahf
add
sub
mov
push
mov
pop
loop
jo
xlat
mov
xchg
mov
pop
(bad)
popf
mov
ficom
sar
outs
sub
js
out
arpl
jge
cmps
xor
mov
jmp
out
mov
or
push
rol
scas
mov
and
sbb
jmp
inc
mov
sti
test
adc
xor
fs
dec
jmp
into
inc
jmp
das
movs
push
cwde
outs
das
fwait
fwait
sub
xlat
inc
clc
add
lods
inc
es
or
es
shl
fldcw
iret
lods
je
add
(bad)
std
gs
adc
adc
pop
imul
call
into
outs
stos
xchg
mov
aam
jns
mov
ja
call
cli
fimul
push
xor
dec
jmp
aaa
adc
xlat
xlat
adc
dec
fstp
dec
mov
xchg
add
outs
inc
nop
loop
sub
scas
mov
sub
xchg
cs
xchg
adc
or
dec
rcl
push
and
sbb
out
ins
lds
sub
ret
pop
ret
imul
pop
lock
push
sbb
mov
or
xchg
call
repnz
std
sar
or
or
jg
cli
cmp
icebp
inc
aas
int3
jb
push
cwde
mov
xor
jmp
cdq
mul
adc
push
retf
movs
movs
xor
pusha
out
mov
mov
mov
addr16
inc
push
rcr
push
pop
out
(bad)
ss
scas
or
add
repnz
loopne
adc
xchg
pop
and
sbb
jg
sahf
lock
jmp
imul
pop
mov
leave
hlt
jb
aaa
pushf
sar
push
inc
mov
icebp
dec
mov
sub
sti
pop
mov
inc
jns
outs
aad
or
and
cmp
mov
xchg
in
cdq
loope
leave
enter
popf
popf
jns
je
popf
xchg
repnz
cdq
xor
xchg
dec
popf
xchg
call
cmp
imul
push
dec
cmc
dec
pavgb
push
xor
mov
add
or
jo
cmps
shl
lock
in
sub
mov
cmp
pop
cmp
sub
xor
pop
lahf
sub
mov
or
or
scas
sbb
into
repz
(bad)
cmp
mov
outs
mov
cs
std
cli
cs
pushf
repz
sub
add
inc
sahf
inc
rol
pop
cwde
cmp
pop
pop
scas
aad
sub
fdiv
enter
add
popf
je
push
mov
aad
js
shl
cmp
retf
cmp
xor
or
rol
add
add
rcl
jp
adc
inc
in
rcl
pop
(bad)
std
retf
jns
jnp
push
dec
fs
pop
repz
push
jle
pop
das
cmp
mov
ins
jbe
xor
pop
mov
dec
mov
sbb
ror
nop
or
xor
add
call
lock
adc
push
fwait
or
les
fwait
out
mov
cli
xor
imul
jae
push
push
inc
xchg
pop
mov
int3
adc
ret
cmp
repz
dec
cmp
shr
sub
aam
repz
lahf
std
adc
sbb
add
sahf
cmp
out
jo
cs
popf
jle
inc
inc
cmps
inc
hlt
into
or
bound
retf
mov
or
push
leave
ss
push
jmp
cld
pusha
xor
(bad)
pop
cmp
lahf
cmovs
pop
or
ret
mov
lods
movs
cld
adc
js
or
mov
shl
sub
mov
xchg
lock
div
add
sub
xchg
ins
pop
and
cdq
in
out
rcr
pop
(bad)
jns
test
cld
imul
sahf
rcr
add
jge
cmps
jp
or
popa
push
popa
repz
sub
mov
mov
cmp
outs
stc
dec
inc
jo
xor
xlat
dec
pop
stos
ret
dec
(bad)
push
es
(bad)
jmp
dec
call
push
sbb
ret
rcr
and
data16
jb
lock
and
fwait
sbb
pop
outs
aam
mov
mov
and
cmpxchg
fisttp
or
cmp
add
cld
pushf
mov
fdiv
and
repnz
inc
dec
jae
adc
cmp
retf
or
cs
fbstp
ffree
push
push
int3
push
jmp
das
sbb
add
add
push
lock
cwde
push
out
mov
rcr
jle
dec
cs
movs
int
mov
inc
mov
add
ror
mov
sar
and
or
jne
cdq
jecxz
mov
cmp
leave
cmps
lods
jno
dec
pop
mov
rcl
idiv
xchg
inc
sub
jge
xor
not
sub
sbb
mov
push
imul
call
mov
pop
(bad)
jmp
adc
rol
mov
cmp
add
mov
pop
and
and
gs
sub
adc
leave
or
repnz
popa
pop
gs
push
movs
inc
sub
movs
imul
cmp
or
stos
mov
jge
jae
or
cld
pushf
adc
fsubp
and
jg
pop
cs
or
es
xchg
sub
dec
retf
out
ds
sbb
jne
clc
(bad)
jmp
mov
in
sub
xchg
fidiv
cmp
test
push
cmp
xchg
ins
in
outs
adc
fs
xor
push
adc
stos
xchg
enter
sub
xchg
cmc
jecxz
loope
pop
ret
aam
mov
jae
inc
xchg
mov
jl
pop
cli
push
adc
cli
push
mov
ds
adc
mov
ror
stos
add
push
in
push
pop
fcmovnu
lock
dec
imul
(bad)
sbb
mov
sbb
adc
xor
es
cmps
jnp
push
or
je
loope
les
sbb
adc
idiv
or
arpl
das
scas
mov
imul
jg
ja
mov
jae
jne
jge
shl
cmp
sar
cli
jne
repz
dec
pusha
adc
icebp
sahf
xor
and
shl
ins
inc
cwde
mov
xchg
xchg
mov
out
pop
mov
das
mov
lds
(bad)
in
adc
cmp
add
xchg
sub
dec
pop
(bad)
div
aad
sub
iret
int
push
repz
outs
popf
int
jmp
test
jle
stc
repz
out
outs
call
rol
jo
arpl
fwait
in
jmp
jg
sub
popf
pusha
test
or
mov
xor
pop
das
fcomi
push
movs
sbb
inc
jle
or
or
and
mov
and
fisubr
sbb
inc
jle
retf
adc
jno
cmps
pop
cwde
in
retf
jecxz
int
jmp
push
fld
call
ficom
adc
gs
inc
or
xchg
cmp
mov
stos
pop
mov
sub
dec
je
out
xchg
sub
push
push
adc
jne
imul
mov
xchg
mov
into
addr16
pop
out
scas
sar
cmp
pop
xor
iret
push
pop
inc
lds
xor
or
jns
cli
dec
movs
test
leave
daa
popf
cmp
les
inc
fs
test
xchg
scas
fdivr
iret
jae
and
jmp
push
test
outs
add
int
mov
leave
(bad)
out
pusha
stos
es
xor
loop
or
daa
push
push
lods
aas
xchg
cmp
lea
clc
(bad)
or
cmps
fimul
add
inc
dec
jo
cs
scas
loope
aas
and
hlt
sub
or
iret
dec
ret
sub
cmc
int
loop
inc
aam
ror
and
xor
scas
iret
xchg
arpl
in
mov
(bad)
pushf
cvtps2pd
pop
ja
movs
inc
stos
scas
idiv
xor
cmc
repz
pushf
(bad)
in
jb
mov
int3
mov
stos
cmp
test
mov
test
dec
mov
fcmovnb
dec
mov
fwait
lds
jns
jle
sub
or
mov
jbe
call
arpl
out
lahf
les
iret
popa
cmp
jbe
inc
enter
sbb
add
out
pmaddwd
jle
mov
and
cmp
mov
jmp
mov
mov
jge
sbb
fisub
mov
sub
sti
mov
adc
fwait
mov
cmp
cmp
and
scas
in
test
clc
scas
gs
mov
in
daa
and
cmps
jmp
mov
xchg
cld
shl
sbb
loop
mov
test
test
retf
dec
ret
je
fidivr
scas
fs
push
repnz
inc
xor
sub
fnsave
bound
push
fld
add
cmp
fs
retf
mov
mov
pop
or
inc
dec
movs
dec
rol
ja
sub
cli
popa
imul
dec
sahf
clc
dec
mov
jae
push
xchg
sub
(bad)
pop
cmp
call
or
add
xor
pusha
cmp
xchg
add
retf
ins
in
add
(bad)
mov
into
dec
inc
mov
mov
push
shl
jp
ins
(bad)
fisub
lods
push
bound
cmps
and
jo
cdq
sbb
and
or
iret
ja
scas
mov
push
push
mov
outs
(bad)
jne
loope
popf
cmp
sub
mov
push
mov
dec
mov
das
imul
movs
rcl
inc
jns
mov
dec
div
dec
retf
jo
push
sub
aad
mov
test
imul
xchg
repz
out
or
cli
loope
loop
scas
push
in
cmp
push
mov
ficom
lods
or
ret
sub
mov
fcomp
pop
out
lds
lahf
jb
mov
jae
test
cmp
popf
loop
xchg
stos
mov
adc
inc
sbb
dec
xor
cmps
sbb
sub
mov
jmp
enter
test
cmp
cmp
fs
jmp
aaa
(bad)
sbb
mov
mov
add
sub
(bad)
(bad)
iret
rcl
std
(bad)
repz
stc
fidivr
push
lds
test
cmp
int3
adc
pop
out
loop
add
loop
repnz
aaa
mul
(bad)
pop
push
xor
(bad)
sub
jo
mov
test
aad
hlt
iret
push
sbb
sub
loope
pushf
dec
outs
neg
mov
mov
inc
xor
aas
xchg
pusha
fcom
jecxz
cli
sbb
inc
dec
cmc
mov
hlt
ror
dec
in
jge
pop
push
mov
scas
sbb
cmp
jle
or
mov
out
push
outs
adc
adc
push
(bad)
shl
fwait
sar
adc
xor
outs
xor
mov
clc
cli
sub
sub
sti
mov
pop
aas
arpl
stos
arpl
loopne
mov
out
adc
sub
cmp
or
call
lods
jo
aas
mov
xor
mov
mov
cmp
pop
mov
fst
ss
f2xm1
jl
cmc
sbb
and
gs
dec
mov
mov
loope
sub
mov
in
and
stc
dec
xchg
mov
movs
aam
push
pop
stos
dec
sbb
inc
pop
pushf
outs
imul
add
sahf
mov
test
mov
and
pop
cld
and
jns
or
jmp
and
mov
jmp
push
inc
shl
jp
push
cmps
movs
xchg
fwait
int3
loop
push
dec
cmp
adc
and
sbb
inc
cdq
and
xchg
sbb
stc
lods
dec
enter
and
movs
popf
jmp
xchg
lahf
mov
test
jbe
pop
outs
(bad)
out
ret
adc
rcr
ror
add
xchg
dec
inc
mov
movs
pop
sbb
add
mov
and
lahf
jmp
push
repnz
ds
pop
or
ss
cwde
in
jne
sub
sti
sub
push
mov
inc
xchg
mov
outs
icebp
adc
stos
xchg
ror
push
push
out
cmc
cmp
(bad)
aaa
aam
fiadd
je
sbb
jmp
push
movs
mov
add
jecxz
push
call
jmp
xchg
out
pop
repz
test
mov
mov
pop
das
aaa
lds
push
xchg
mov
fisttp
push
std
fwait
xor
int
mov
lods
repz
leave
jmp
movs
cmps
ficom
xor
in
es
fwait
arpl
xchg
es
pop
jnp
mov
bound
add
add
loope
test
pop
into
fwait
and
sub
jge
jo
scas
xchg
test
retf
call
adc
sar
mov
xchg
daa
shl
pop
mov
and
lds
pop
add
add
mov
test
hlt
push
lds
mov
retf
dec
jno
jne
(bad)
sub
xor
test
sub
gs
xor
pop
sbb
loop
sbb
dec
mov
mov
cmp
dec
xor
push
mov
lock
add
loop
shl
test
pushf
pop
xchg
(bad)
xor
inc
into
jle
jg
repnz
mov
div
adc
xor
gs
xchg
jg
je
pop
ret
and
jecxz
fwait
cmp
mov
mov
push
push
or
sbb
fs
aad
push
enter
(bad)
enter
int3
add
fnstenv
out
aam
xor
ret
cmp
cld
(bad)
in
mov
(bad)
pop
pop
enter
mov
into
mov
ins
jae
stos
fld
cwde
aas
adc
ja
xchg
shl
pop
add
mov
jno
cmps
pop
cli
in
rcr
xor
pusha
pop
mov
in
or
cmp
xlat
cld
mov
hlt
xchg
ror
retf
fild
pop
shl
mov
jo
xor
mov
shl
popa
and
in
aad
fild
sbb
in
or
or
and
mov
add
push
cmc
scas
mov
in
aas
out
or
and
xchg
add
cli
enter
add
add
pop
dec
fdivrp
ss
add
cdq
add
and
jnp
ficomp
jl
mov
jmp
jno
pop
je
cld
fwait
lods
xchg
pop
xchg
ret
xchg
adc
pop
cwde
sub
aas
adc
and
scas
dec
mov
icebp
push
adc
inc
cmps
(bad)
xchg
ret
adc
jae
outs
shr
lea
test
mov
inc
inc
cmp
pop
sahf
add
add
test
icebp
stc
dec
retf
cmp
nop
ja
ins
mov
retf
(bad)
test
sub
std
mov
and
xchg
fwait
cmc
mov
inc
pop
jbe
dec
mov
(bad)
out
mov
fimul
mov
(bad)
cs
retf
inc
lds
js
mov
(bad)
leave
icebp
shl
je
push
cld
gs
mov
imul
jp
lods
adc
nop
(bad)
cld
lea
les
in
jecxz
stc
and
shr
shl
call
fist
push
push
and
lods
ins
mov
cmp
and
inc
shl
pusha
mov
(bad)
(bad)
pushf
pop
in
mov
dec
xor
add
add
fdiv
clc
sbb
jge
out
and
data16
fidivr
repnz
aas
adc
cli
fisub
ins
mov
lds
mov
xchg
jnp
ins
imul
add
(bad)
jbe
xor
popa
push
cmp
stos
jb
and
int3
test
pushf
and
add
sbb
add
mov
out
mov
mov
fdivr
mov
xlat
stos
xor
pop
push
fcomp
xor
iret
adc
ins
lds
pop
add
adc
loopne
add
mov
ja
aad
scas
(bad)
jns
inc
jmp
xchg
mov
xchg
dec
xchg
call
sub
pop
jno
clc
imul
xchg
sub
daa
xchg
enter
sahf
aaa
xor
(bad)
idiv
sbb
pop
mov
cld
push
xor
adc
sbb
movs
push
mov
cmps
jne
es
mov
jl
retf
div
imul
jae
mov
sbb
or
and
loope
xor
add
stc
cwde
repnz
cmp
cmps
aaa
loope
mov
ss
arpl
push
inc
mov
fcomp
fwait
enter
es
dec
sar
jp
les
pop
idiv
xor
xchg
and
in
mov
jge
push
or
sbb
out
cmps
sub
or
movs
mov
aaa
ret
sbb
add
xor
stc
je
cmp
mov
lahf
dec
pop
push
mov
or
fwait
dec
mov
retf
scas
sbb
sbb
clc
(bad)
sub
push
jmp
(bad)
enter
add
dec
jns
lahf
mov
arpl
push
(bad)
and
inc
jg
pop
mov
rcr
xchg
xchg
jae
out
ins
xlat
mov
cwde
sbb
iret
aaa
dec
dec
int3
cmps
pop
aad
pusha
lods
aam
jne
pop
or
jne
xor
jb
(bad)
jne
mov
lea
pop
aas
mov
cmp
leave
daa
aaa
int3
push
aam
std
xlat
xor
and
xlat
stos
sbb
add
popa
out
jns
sub
mov
inc
iret
cmp
pop
sbb
(bad)
fadd
lods
in
hlt
xlat
cmp
(bad)
pop
in
xor
pop
iret
add
mul
das
mov
cmp
pop
cs
push
push
inc
mov
mov
jne
pop
push
iret
cmps
ret
gs
mov
aas
(bad)
ds
xchg
push
mov
mov
cli
aas
mov
dec
or
in
jmp
in
and
xor
clc
pushf
mov
jb
dec
(bad)
cmps
data16
bound
ins
enter
popa
sahf
mov
dec
enter
jbe
addr16
and
mov
pop
ret
pop
xchg
cmp
xor
xchg
out
scas
mov
sbb
push
cld
test
pop
in
icebp
leave
scas
ret
jne
loop
(bad)
mov
mov
mov
test
repz
sub
xor
add
fcom
pop
mov
xchg
or
xchg
mov
mov
sub
add
cli
(bad)
jp
(bad)
adc
loopne
repnz
xchg
and
lock
or
das
push
lock
inc
pop
xor
and
stos
(bad)
sub
leave
scas
dec
jle
pop
mov
xor
scas
cmp
pop
dec
or
and
mov
iret
popf
and
adc
int
adc
pop
ss
sub
(bad)
sbb
pop
push
lahf
push
(bad)
je
into
jb
test
enter
sti
xor
pop
mov
fmul
cli
push
repz
inc
rol
push
push
mov
pop
popa
aad
mov
xlat
inc
inc
mov
data16
ss
xchg
(bad)
jb
or
aas
xchg
out
mov
dec
leave
hlt
adc
pop
cwde
xor
scas
mov
fsubp
shl
es
and
cmp
xchg
std
int
test
cmp
jno
and
pop
sbb
and
add
cmp
xchg
pop
mov
and
and
jmp
cld
sbb
sahf
mov
fistp
and
mov
js
repnz
mov
pusha
lods
(bad)
adc
mov
gs
jp
push
popf
dec
jg
xchg
ds
and
out
inc
rcr
pop
pop
xchg
(bad)
ja
(bad)
sbb
ins
push
test
ret
sbb
packssdw
adc
dec
jp
icebp
jbe
cmp
les
(bad)
cmps
call
cmp
aaa
mov
adc
inc
and
mov
adc
add
jle
out
dec
push
bnd
(bad)
push
movs
dec
and
pop
sti
cmp
cmp
int
push
mov
and
mov
addr16
in
xor
ret
(bad)
aad
or
jo
cwde
and
cwde
jne
aaa
std
pushf
inc
fimul
gs
inc
cmps
loop
xor
inc
mov
sub
ss
cs
add
sub
push
pop
jg
ror
push
push
mov
pop
add
bound
test
jmp
mov
push
in
add
stos
jle
push
fldcw
sar
mov
inc
inc
jae
mov
mov
sub
(bad)
cmp
stc
lock
sub
dec
imul
sti
push
mov
push
pushf
or
push
cmp
test
je
xchg
cmps
or
jg
mov
or
xor
mov
pusha
mov
mov
ret
fwait
mov
imul
adc
or
adc
stos
cmp
nop
dec
out
and
(bad)
das
cwde
lods
js
xchg
sbb
retf
test
lods
sub
mov
movs
leave
mov
repz
inc
test
(bad)
xor
jmp
jmp
mov
xchg
hlt
rol
les
xor
adc
pop
jae
neg
retf
jb
cmc
inc
dec
bound
iret
arpl
push
dec
xor
xchg
imul
lea
or
test
add
cmps
out
scas
cmps
cmp
int3
xchg
jg
gs
jp
cmps
ins
movs
inc
mul
jns
call
pop
push
jo
sbb
fmul
popa
mov
and
inc
orps
cli
adc
sub
mov
daa
jecxz
ret
mov
mov
bound
retf
js
les
cmp
push
sbb
je
inc
fldcw
cmp
clc
je
jmp
xchg
xchg
movs
cli
mov
adc
cmc
out
jmp
mov
pop
mov
div
fimul
sbb
xchg
sti
push
dec
outs
mov
jle
ficom
shl
ja
push
mov
js
inc
shr
dec
jge
nop
adc
adc
iret
xor
pop
repnz
push
inc
sub
shl
mov
pop
add
mov
and
sbb
jno
lds
dec
mov
pop
cmp
and
es
or
fst
push
jp
stos
aaa
icebp
mov
mov
(bad)
fst
les
xor
sub
(bad)
fsub
retf
push
sub
stos
mov
je
cwde
int3
ss
cld
int
fs
push
and
int3
push
jl
add
mov
xchg
and
ss
adc
outs
std
popa
dec
rol
fist
pushf
neg
es
sbb
jbe
mov
and
and
jbe
dec
mov
add
pop
arpl
icebp
aad
and
cmp
add
pop
int3
gs
dec
inc
ror
xor
fcom
dec
inc
int
mov
imul
repz
xchg
out
in
out
rcl
jmp
loopne
test
sysret
inc
xchg
data16
nop
jge
mov
clc
adc
movs
in
cmp
fcomip
mov
push
jns
mov
and
add
repnz
(bad)
pop
dec
jge
imul
in
scas
(bad)
cli
or
int
stos
mov
mov
dec
push
mov
pop
lds
or
dec
movs
js
push
aad
repnz
sub
add
sbb
cmp
inc
lods
push
inc
lahf
inc
scas
dec
addr16
dec
jmp
pop
adc
repnz
lods
pushf
(bad)
out
loop
mov
push
inc
mov
adc
push
jo
mov
jecxz
jmp
inc
sub
scas
sahf
pusha
retf
mov
push
xor
sub
cmp
or
or
test
add
xor
das
cwde
retf
mov
movs
les
popa
sub
mov
jne
dec
mov
mov
mov
push
push
gs
call
pop
xor
and
enter
inc
adc
cmp
test
ins
jecxz
xor
enter
sub
mov
mov
into
xchg
fmul
push
mov
cwde
dec
out
fdivr
add
jmp
mov
xchg
push
popa
outs
pusha
dec
add
mov
xchg
inc
mov
cli
std
cs
and
xchg
push
push
(bad)
in
and
adc
jnp
push
jno
jmp
pop
pop
xor
mov
push
push
loop
xchg
shl
xor
pop
dec
popa
(bad)
enter
mov
aam
dec
push
fst
or
adc
scas
sbb
cli
ror
jle
icebp
xor
(bad)
(bad)
xchg
jecxz
push
in
pop
xchg
lods
ss
mov
iret
test
test
adc
ror
stos
arpl
aad
or
ja
ds
mov
test
and
movs
(bad)
les
mov
dec
jmp
ret
xlat
ror
dec
fsub
jnp
cdq
rcr
mov
inc
sbb
push
std
out
pop
jg
cs
out
jg
dec
xchg
retf
sbb
jp
xor
inc
inc
aad
loope
icebp
mov
lods
les
inc
add
clc
leave
mov
or
xchg
daa
rol
or
cmp
mov
sbb
es
push
call
cld
imul
add
repnz
sbb
test
and
and
jnp
jmp
xor
sar
nop
jnp
arpl
int
retf
loop
sbb
mov
sbb
sbb
push
inc
mov
dec
inc
pop
sbb
dec
push
push
je
add
xor
pop
mov
xchg
movs
iret
mov
rcl
aas
int3
nop
stos
retf
fdivr
or
mov
fisub
(bad)
jmp
popa
in
or
fisub
cs
jns
fistp
aam
cdq
fdivr
retf
hlt
cmp
iret
lock
jo
fsubr
or
add
push
mov
add
lock
cmp
repz
xchg
cmc
call
das
mov
cdq
rcr
out
arpl
test
adc
sub
pop
pop
add
inc
std
jl
leave
ja
out
sub
cmp
sbb
jbe
add
mov
cmps
sub
ret
retf
or
mov
scas
inc
retf
fisttp
jmp
les
dec
mov
(bad)
loop
hlt
and
pop
jge
xor
mov
and
xor
sbb
cmp
inc
adc
pop
enter
loope
je
ret
or
sbb
pop
jno
mov
cmps
adc
mov
inc
aad
loope
pop
mov
loopne
in
arpl
bound
or
mov
scas
jmp
inc
mov
cmp
cdq
aaa
fild
mov
into
mov
sub
xchg
scas
out
xor
out
into
jmp
mov
aaa
jmp
cmp
mov
sub
ins
jnp
push
dec
xlat
sbb
sahf
les
retf
mov
(bad)
in
idiv
sahf
pop
inc
ja
ret
enter
push
xchg
pop
stc
mov
out
dec
cmp
aad
int
test
dec
sbb
cld
cld
ss
es
push
psubd
jmp
mov
popf
hlt
lahf
adc
fstp
fisub
mov
rcl
dec
mov
push
cs
push
add
and
retf
dec
aas
mov
xchg
inc
aas
retf
call
ins
jmp
adc
or
ror
push
push
inc
cmps
jmp
and
jge
rcl
daa
mov
dec
cmps
sbb
cmp
cmp
outs
in
mov
adc
les
jns
mov
dec
into
push
repnz
cmp
xchg
dec
mov
mov
and
pop
stos
adc
fs
add
stos
jge
cmc
push
mov
and
loopne
std
pushf
ja
call
fs
cmps
data16
push
sar
jmp
and
adc
in
dec
clc
bound
sub
xchg
inc
popa
nop
enter
mov
cld
add
fwait
add
add
push
stos
fnstsw
cli
cmps
fwait
das
jle
out
jmp
mov
adc
cmp
fsub
sbb
aam
push
xor
push
push
sub
and
xor
push
out
or
mov
inc
sahf
call
push
cmp
ins
into
shl
icebp
sbb
sti
bound
stc
cld
fistp
sar
push
mov
mov
add
rcr
(bad)
js
xchg
inc
(bad)
push
and
jg
movs
cmp
jnp
mul
jge
xchg
cmps
dec
mov
sbb
and
(bad)
xchg
cmp
mov
inc
dec
or
sub
ret
fbld
jmp
and
dec
pushf
call
or
cmp
mov
daa
loopne
jae
cld
push
xchg
imul
push
into
shl
in
add
push
outs
mov
js
test
jnp
mov
int3
cmp
push
lahf
jae
stc
cmp
in
call
and
xchg
in
jbe
jmp
shr
adc
xchg
dec
pop
or
popf
mov
jmp
lds
aad
xchg
xchg
es
fwait
enter
out
mov
mov
mov
push
sub
pusha
xor
mov
in
aam
iret
outs
xchg
adc
(bad)
add
mov
call
cmps
jb
inc
clc
or
jno
fwait
mov
shl
mov
mov
fwait
repnz
mov
jae
fwait
pusha
or
mov
stos
nop
jns
sbb
cmp
imul
pushf
aas
mov
xor
in
fidivr
inc
cmp
mov
dec
push
loope
in
jbe
movs
dec
sti
pop
dec
xchg
sbb
outs
dec
add
mov
out
cld
(bad)
aaa
inc
test
(bad)
loope
daa
scas
ds
out
test
jo
arpl
xchg
push
or
or
xchg
add
mov
mov
jmp
xchg
inc
fadd
jmp
fs
fistp
xchg
mov
sbb
icebp
mov
dec
rol
repz
cmp
inc
jg
mov
and
ror
aaa
cs
mov
sub
std
cwde
mov
shr
sub
cmps
and
(bad)
cmp
or
mov
mov
xchg
pop
fistp
popf
or
push
push
push
push
psubd
xor
xchg
stc
popa
xchg
jp
sahf
movs
cmc
rol
mov
push
repnz
cmp
(bad)
xchg
fidivr
sub
cmp
cwde
xchg
sahf
dec
into
in
xchg
imul
dec
rcr
mov
popf
sbb
sub
adc
outs
cwde
imul
or
add
enter
or
int
(bad)
or
xchg
loope
jle
inc
mov
pop
mov
cli
vandnps
mov
inc
push
xchg
xor
retf
mov
mov
jno
xchg
sbb
out
int3
rcl
adc
call
mov
and
jae
fimul
add
out
frstor
sbb
nop
fld
retf
pop
xor
repnz
xchg
and
(bad)
mov
call
xor
movs
xor
sub
jno
mov
sti
cs
fidivr
fwait
call
pop
jno
pop
outs
jo
sub
xor
cmp
jmp
into
push
(bad)
mov
jle
test
inc
pop
sub
in
mov
(bad)
fs
xor
jmp
loope
jl
lods
out
mov
cld
int3
lods
lea
cmp
js
sub
inc
push
xor
fs
aas
cmp
jmp
out
lock
stc
arpl
mov
or
int
lahf
stos
in
pop
(bad)
jne
fdivr
popf
imul
dec
movs
mov
aaa
and
push
xchg
(bad)
pop
rcl
mov
shl
outs
dec
out
lahf
cmps
fisub
add
in
jle
neg
dec
lods
stc
pop
lea
mov
cdq
pop
push
popf
fsub
sbb
adc
enter
adc
pop
inc
and
inc
outs
into
out
data16
iret
aam
mov
push
cmps
ss
push
and
mov
repnz
lahf
push
pop
cdq
addr16
lock
lock
add
inc
xchg
lea
lea
add
neg
jbe
xchg
shl
jl
pop
dec
jae
test
jo
(bad)
push
ja
ds
sub
mov
lds
test
push
(bad)
jecxz
mov
ds
(bad)
rcl
mov
(bad)
sub
push
das
mov
shl
addr16
ins
arpl
push
cdq
sbb
cli
jnp
push
sbb
fcomi
or
mov
aas
mov
stc
shl
daa
mov
inc
dec
xchg
cmps
scas
lods
popa
ret
cmp
push
jns
or
jne
in
int3
mov
xchg
push
or
stos
int
xlat
mov
xchg
(bad)
hlt
pop
cmp
out
call
adc
push
outs
sbb
int
imul
inc
adc
or
cmp
ja
xor
mov
test
dec
icebp
add
jp
shl
mov
cmps
dec
push
stos
jae
mov
pop
test
gs
and
cmp
jmp
mov
aas
mov
daa
push
adc
dec
mov
(bad)
push
push
aaa
adc
jmp
ret
loop
retf
cmc
mov
add
sbb
(bad)
or
push
aad
sbb
fmul
mov
rol
inc
fist
int3
jp
repz
xchg
cs
jb
cmp
add
bound
mov
jno
les
and
xchg
xchg
adc
sbb
adc
pusha
ret
cmp
cmp
xchg
repz
cwde
mov
mov
out
mov
inc
lds
int
sbb
frstor
jb
shl
lock
push
inc
adc
push
mov
mov
adc
or
pop
mov
jp
jp
lock
pushf
fcom
ins
out
in
sar
movs
ins
mov
enter
mov
test
scas
and
imul
sub
in
in
stos
std
ins
cmp
adc
jne
movs
lock
(bad)
fcomp
sahf
cmp
scas
aam
(bad)
adc
mov
(bad)
sub
inc
adc
and
or
push
iret
xchg
lahf
cmp
stos
jmp
push
lods
push
ror
dec
xor
jnp
retf
leave
inc
aaa
addr16
pop
test
retf
dec
retf
add
pop
jno
push
lods
sub
add
mov
into
out
shrd
cmp
xor
xchg
pop
xor
cld
inc
pop
ss
mov
or
mov
mov
sbb
test
inc
adc
out
lods
psraw
test
imul
xor
rcl
mov
mov
push
or
jecxz
pop
sub
movs
int3
fnstenv
rol
push
mov
cmps
bnd
dec
or
xor
(bad)
fist
sahf
cmp
and
jo
movs
mov
fs
mov
push
ja
cmps
mov
push
or
push
pop
test
mov
es
sti
xchg
dec
jns
rcr
mov
outs
push
das
jmp
push
jp
test
pusha
lods
imul
and
cld
repnz
aaa
lahf
repnz
jmp
sbb
jo
or
aam
sbb
cmp
inc
imul
jns
pop
dec
adc
adc
mov
stos
add
js
sar
or
jo
pop
ret
test
fild
icebp
lods
rcr
in
dec
or
cmp
dec
shl
cs
mov
adc
outs
xchg
dec
shl
mov
or
and
pop
pop
sub
mov
int3
jecxz
dec
sub
imul
aaa
jae
mov
les
mov
push
mov
cmps
xchg
sub
cld
lds
clc
add
xor
sub
mov
mov
sbb
pop
daa
mov
inc
repnz
or
(bad)
daa
xchg
push
(bad)
jae
arpl
movs
outs
aaa
mov
lods
fisubr
(bad)
shl
scas
aas
xchg
(bad)
pop
mov
and
retf
shr
outs
(bad)
je
push
retf
mov
imul
sub
mov
into
js
and
xchg
sbb
inc
jmp
jmp
dec
mov
aad
fsub
xchg
xchg
nop
(bad)
js
xchg
call
imul
and
je
and
or
ss
cmp
test
cmp
movs
stc
int3
das
adc
stos
ret
push
push
shl
xchg
lods
sbb
in
inc
or
xchg
lock
ss
pop
push
mov
sar
fsub
sub
repnz
ja
xchg
push
rcl
xor
push
outs
and
repz
xchg
pop
inc
push
(bad)
cmp
test
jmp
mov
test
or
jle
sbb
jle
aam
jmp
retf
neg
cmp
fcomp
stc
dec
add
pop
imul
outs
mov
jns
push
mov
add
inc
rcr
mov
sbb
imul
repnz
repz
cs
mov
cvtps2pd
mov
jo
sub
sbb
ror
adc
out
je
xchg
push
pushf
ficomp
retf
sbb
sub
adc
sbb
fldz
sub
movs
fstp
or
pop
or
lods
xchg
loope
inc
popf
mov
jmp
cwde
push
fwait
int
sub
jl
add
mov
xchg
inc
dec
pop
pop
xor
xchg
mov
xlat
mov
lods
cmp
pop
(bad)
adc
in
cmp
xlat
push
call
div
add
icebp
push
mov
jns
mov
sub
int
es
pusha
mov
jns
push
adc
xchg
in
nop
xchg
data16
lea
mov
push
xlat
add
xor
fdivr
ret
pop
add
aas
cmc
sub
push
sahf
cmps
movs
mov
xchg
xchg
mov
data16
sub
and
xor
xchg
and
xchg
or
jecxz
lods
jg
mov
adc
aas
je
pop
xor
xor
ja
ffree
int
clc
repz
shl
cmp
mov
push
or
push
xchg
xor
ds
dec
arpl
sub
stc
pop
movs
sub
xchg
and
inc
in
push
lods
aad
pop
lock
es
sbb
sub
scas
xchg
inc
add
mov
pop
inc
std
test
add
push
sahf
or
xchg
jle
xchg
mov
mov
and
push
pop
repz
mov
imul
pop
push
pusha
fst
outs
or
cmp
jecxz
add
shl
xchg
xchg
cdq
jp
sub
inc
leave
mov
ins
mov
outs
add
adc
ja
mov
push
push
leave
in
inc
dec
inc
loop
leave
sbb
xor
shl
adc
or
je
adc
imul
or
xchg
imul
mov
pop
test
adc
pop
jae
or
or
fs
pop
fsubr
ins
popf
jecxz
xor
push
shr
and
stos
ja
aas
xchg
pop
inc
mov
rcr
fcomp
(bad)
(bad)
or
mov
jbe
outs
adc
and
dec
xchg
jb
lods
cmps
dec
scas
xchg
lods
test
mov
sbb
mov
mov
(bad)
fidiv
pop
push
mov
jmp
lods
std
rcr
popa
or
std
xor
cmps
aam
dec
ins
in
(bad)
adc
jle
mov
iret
mov
sbb
push
mov
or
mov
mov
xchg
jg
in
ins
enter
cs
add
es
pop
sbb
scas
popa
and
idiv
int3
sub
loop
sahf
or
cmp
fiadd
movs
stos
xor
(bad)
je
sbb
push
or
hlt
int
sub
lds
mov
pop
mov
lds
fwait
shl
daa
mov
jge
or
sbb
jmp
push
ins
popf
mov
shl
jl
test
or
sub
dec
int
call
adc
cld
ds
mov
les
dec
dec
inc
test
cwde
or
xchg
call
jno
mov
push
jb
sahf
xor
aad
nop
xor
jle
xlat
add
or
inc
stc
gs
nop
cmp
retf
adc
sub
bound
rcl
xor
(bad)
lds
sub
not
or
(bad)
ss
popa
fcomp
push
inc
ja
cmp
adc
in
adc
push
sahf
cwde
mov
and
adc
sub
dec
imul
dec
ins
cmovns
push
sub
mov
pop
adc
xor
lds
outs
mov
cmp
imul
xchg
lahf
mov
test
jp
dec
inc
or
ds
and
jge
idiv
push
pop
sbb
lock
(bad)
jno
mov
imul
clc
mov
push
and
jne
test
retf
inc
or
xchg
push
pop
jp
cmps
out
fcmovu
addr16
out
add
cs
sub
push
clc
or
int3
stos
jge
sbb
add
xchg
and
or
jnp
(bad)
dec
jne
lds
inc
add
fist
fisub
pusha
inc
mov
scas
lods
inc
xor
cdq
mov
xchg
aam
fisttp
xchg
loop
pusha
pop
add
dec
dec
popa
shr
aas
xor
add
lahf
into
push
leave
pop
arpl
push
sbb
loopne
mov
dec
fcom
mov
mov
dec
sub
push
dec
jne
cwde
mov
movs
mov
push
fs
les
or
sbb
mov
push
sbb
(bad)
mov
stos
pop
rcr
xor
popa
and
popa
mov
xchg
stos
inc
mov
mov
int3
fidivr
jge
jg
and
js
mov
outs
hlt
test
push
aad
pop
cmp
aas
jae
into
mov
iret
enter
scas
jecxz
arpl
xchg
lahf
(bad)
test
push
xor
hlt
sbb
mov
retf
push
pop
out
sub
int
test
adc
lods
adc
movs
push
movs
inc
push
push
push
mov
not
das
(bad)
jg
or
retf
push
pop
enter
mov
xor
add
sbb
jno
sbb
test
test
cmps
mov
lock
hlt
pop
jns
out
jmp
ss
dec
and
mov
xor
call
(bad)
(bad)
and
pop
fwait
dec
retf
or
adc
cld
sbb
dec
xchg
cmp
int
push
cld
push
sub
data16
ds
cmp
add
jg
lock
inc
push
mov
jl
inc
es
dec
(bad)
cmc
(bad)
pop
jns
ja
pop
push
push
mov
pushf
mov
cmp
call
and
xchg
jb
ret
dec
sub
mov
mov
in
pop
xor
aaa
mov
(bad)
jno
and
inc
imul
lods
push
mov
fnstenv
adc
push
call
rcl
xor
push
int3
pop
pop
mov
adc
push
pop
add
cmp
fist
mov
ficomp
inc
cmc
cdq
fidivr
cld
packssdw
xor
cld
shl
mov
aaa
sti
repz
mov
mov
add
mov
dec
cmc
clc
add
push
mov
mov
mov
stc
retf
int
push
pop
addr16
inc
inc
in
and
adc
lods
out
(bad)
repz
pushf
jmp
xor
ja
mov
repz
mov
fistp
jno
sbb
scas
or
cmp
push
or
xchg
ins
cli
and
aad
rcl
sub
out
xchg
arpl
dec
mov
push
ja
xor
pop
test
adc
mov
imul
jae
and
loopne
pop
stos
mov
mov
dec
mov
inc
and
(bad)
pop
push
pop
push
jl
sub
das
push
outs
sbb
cmp
lock
(bad)
fs
cdq
fwait
lahf
inc
jmp
cmp
fcom
(bad)
fdivr
scas
in
pushf
xor
inc
addr16
xchg
and
aaa
aad
inc
in
mov
sub
sahf
cmp
mov
(bad)
and
pop
sub
inc
neg
lock
push
and
xchg
or
hlt
cmps
ins
and
sbb
in
cmps
mov
push
pop
xor
push
pop
jbe
cmc
lea
xor
loopne
or
pop
or
sar
cmps
shl
pop
inc
xor
cmp
in
test
arpl
pop
outs
push
jle
mov
sbb
or
sbb
xchg
outs
dec
nop
pushf
inc
es
in
push
sbb
sbb
dec
aad
bound
fstp
into
and
mov
mov
aaa
xchg
push
push
adc
jmp
sbb
xchg
mov
popa
inc
cmp
mov
or
jp
add
mov
add
push
jb
iret
xlat
fsubr
scas
retf
fs
retf
out
add
adc
jp
push
stc
sub
popf
bound
xchg
std
out
xchg
test
and
push
cmps
adc
mov
mov
push
shl
fild
fmul
sub
jle
js
or
fwait
test
adc
push
fiadd
repnz
fld
clc
push
test
push
jl
cmps
movs
int
int3
dec
cli
ins
mov
sbb
cs
jo
shl
pop
push
mov
cdq
adc
inc
sahf
sub
xchg
fsub
dec
push
sub
add
sahf
fild
push
leave
rcl
fs
in
xor
jge
nop
mov
scas
mov
or
aam
pop
stos
push
shl
loope
push
les
jle
xchg
mov
cwde
test
adc
pop
push
retf
fisub
add
test
adc
div
xchg
add
call
sub
cmps
push
pop
data16
sub
repnz
imul
cs
adc
adc
push
rol
fisubr
cmps
psraw
sub
and
mov
pop
push
add
in
fisttp
xor
mov
inc
popa
push
sub
add
fmul
enter
add
cmp
inc
bound
js
adc
mov
add
xchg
shl
shl
mov
jecxz
xchg
cmp
call
int3
push
add
cwde
retf
or
movntps
and
pop
pushf
and
mov
ror
sahf
jmp
mov
(bad)
xchg
popa
cmc
fimul
les
les
xchg
call
mov
push
call
ret
fld
test
in
mov
xor
inc
push
dec
fldcw
sbb
ss
add
(bad)
leave
(bad)
popf
in
jno
xor
inc
and
inc
inc
inc
adc
sar
xor
pop
retf
sbb
lea
jo
jnp
data16
outs
leave
mov
(bad)
add
cmp
aas
jl
cmp
pop
cs
pop
jmp
xchg
xor
sti
scas
sbb
sub
cmps
cli
fisubr
jp
add
push
pop
sbb
mov
cmp
sbb
mov
scas
adc
jmp
bound
pop
loope
repnz
cmc
fist
xor
scas
lds
cmp
aas
dec
imul
cmp
dec
ret
sub
add
mov
pusha
gs
fild
movs
ins
dec
fucomip
stos
push
add
sti
xor
cmp
aaa
adc
jmp
je
shl
sti
inc
sub
pop
(bad)
xor
adc
lahf
dec
jmp
nop
jg
int3
cmp
pop
xor
mov
loop
cmp
jo
push
dec
mov
cli
rol
mov
outs
or
dec
test
xchg
fistp
fwait
fwait
inc
xchg
push
push
jno
lahf
fs
loop
adc
cmp
dec
adc
mov
push
cmp
lods
dec
cmp
adc
jle
outs
lahf
add
fcmovnbe
mov
inc
sbb
jno
jp
out
cmps
pop
arpl
xor
pop
repnz
out
inc
addr16
push
push
cmp
lods
jl
dec
sbb
inc
arpl
mov
pop
jmp
mov
fild
repnz
lahf
lods
push
dec
mov
mov
push
loop
and
imul
cmc
sub
bsf
data16
jbe
mov
xchg
sbb
mov
nop
and
mov
aad
cmp
rcr
ror
xchg
jbe
mov
enter
mov
test
dec
out
rcr
scas
dec
adc
fs
loope
sub
repz
mov
test
jno
adc
jecxz
lock
dec
jp
test
leave
js
test
xchg
mov
mov
fidivr
jo
ds
mul
loopne
push
out
int
pop
jmp
shr
xchg
fcomp
xor
fs
addr16
mov
mov
sbb
mov
and
xor
xor
loopne
shl
cmp
loope
jecxz
hlt
xchg
sbb
cmp
xchg
not
push
shl
or
pop
rcl
jne
aas
sar
jb
push
mov
imul
lods
or
mov
sahf
xlat
push
push
xchg
cmc
cmps
fisub
push
rcr
fdiv
sub
and
in
enter
sub
mov
inc
and
jnp
into
mov
fs
xor
not
fcom
xchg
mov
aas
adc
popa
stc
addr16
push
and
push
cld
pop
stos
dec
cmps
sub
je
into
bound
aad
push
into
scas
xor
das
xor
push
enter
mov
sub
inc
xlat
sub
outs
out
repz
adc
push
daa
add
mov
test
hlt
mov
adc
add
unpcklps
call
ror
call
dec
push
xor
adc
cmp
fmul
fisttp
inc
sahf
pop
loopne
xchg
mov
iret
mov
push
out
mov
sub
cmp
stos
xchg
retf
int
cmp
ds
and
aad
addr16
mov
adc
cwde
mov
mov
mov
(bad)
mov
dec
outs
call
retf
add
call
icebp
dec
loop
outs
jb
stos
inc
retf
sti
jns
dec
cmc
cmp
mov
dec
jo
sub
and
xor
adc
mov
popa
jb
xchg
xchg
and
ror
lods
xor
sbb
jbe
cmp
out
push
jb
mov
mov
sbb
push
cmp
xchg
and
xchg
xor
sbb
mov
sti
imul
and
jp
adc
adc
dec
int
jbe
mov
inc
sar
mov
(bad)
ins
push
mov
sbb
(bad)
(bad)
lods
push
pusha
pusha
cmc
sti
jnp
outs
aam
sub
mov
xlat
mov
ins
(bad)
fisttp
xchg
pop
jge
loopne
xor
mov
retf
fsub
xchg
js
fcomip
in
pop
sbb
push
jmp
cmp
std
sub
lock
aad
ins
sbb
xlat
test
data16
loopne
data16
mov
leave
rcr
mov
or
mov
lea
adc
sub
mov
mov
test
cld
cli
lods
inc
loopne
daa
cld
stos
dec
push
and
jmp
and
mov
sub
sahf
push
sub
cs
int3
or
cmc
mov
jno
sbb
nop
sub
sbb
pop
scas
push
pushf
xchg
ret
gs
cwde
pop
call
sbb
add
cmps
and
out
inc
sub
mov
dec
jb
jle
pop
or
and
sbb
sub
add
mov
mov
push
std
jle
ins
call
add
dec
fiadd
(bad)
sbb
and
push
or
mul
mov
mov
sub
or
sub
xchg
enter
and
push
jmp
pushf
lock
int3
sbb
inc
popf
push
sbb
(bad)
jno
inc
(bad)
leave
xchg
push
adc
ins
pop
jmp
xchg
mov
jp
sbb
adc
arpl
in
cs
jmp
call
aam
mov
cdq
sbb
aam
imul
sbb
pushf
jle
frstor
push
dec
dec
xchg
inc
(bad)
lahf
cmps
xor
xchg
nop
inc
popf
dec
ss
xor
popf
jb
(bad)
xlat
push
imul
xchg
xor
push
pop
stc
cmp
jle
push
test
addr16
inc
jbe
push
sbb
outs
call
mov
xor
sahf
sub
jns
or
test
jmp
and
jmp
and
mov
popf
inc
es
hlt
pusha
pop
push
mov
jae
int
int
sub
in
dec
stos
stos
adc
cmp
and
cmp
pop
mov
mov
in
ja
jge
or
xor
gs
mov
ins
and
ficom
cs
jl
sub
pop
xchg
retf
rcl
pop
fsubr
icebp
in
outs
mov
dec
sub
in
aam
jbe
shl
addr16
mov
loopne
mov
je
test
or
rol
mov
pop
test
mov
sbb
call
jbe
jbe
add
push
aam
mov
cwde
cmc
jb
cmp
daa
mul
and
push
inc
out
(bad)
int3
sub
or
push
es
outs
mov
mov
sahf
xchg
fisubr
add
fsub
out
mov
push
sbb
add
in
loope
mov
push
mov
xchg
jb
movs
push
daa
xchg
sbb
xchg
pop
xor
hlt
stos
ror
mov
adc
fimul
cmc
jae
cmp
ds
jl
cmp
clc
jg
jne
fstp
mov
fcom
popf
xchg
jle
mov
je
pushf
xor
sub
xchg
into
mov
out
lea
sub
xor
cmp
gs
repnz
dec
jbe
aas
cld
out
imul
sub
fcom
sbb
outs
cmps
push
jmp
ins
add
dec
dec
cmc
sbb
adc
push
add
xchg
dec
loope
pop
call
ja
shl
inc
mov
sbb
test
enter
fs
jecxz
cmps
jg
dec
cwde
sub
mov
sbb
adc
ja
out
lds
mov
mov
call
loop
pop
mov
mov
movs
mov
popf
add
pop
sbb
and
enter
sahf
mov
sahf
iret
sub
loop
pop
push
lods
pop
mov
dec
adc
push
adc
pushf
jb
repnz
je
and
test
out
sub
jge
push
xchg
ror
rol
mov
or
sbb
inc
lds
pop
jmp
(bad)
test
repnz
mov
mov
mov
mov
xchg
addr16
pop
mov
(bad)
shr
xor
or
out
sub
retf
ins
cdq
cmp
sbb
adc
(bad)
rcr
jnp
test
aas
cld
xor
jl
jns
jmp
push
inc
push
stc
cmp
out
jle
or
push
das
jb
icebp
jp
jae
shl
pusha
dec
mov
fild
add
punpckldq
fwait
pop
xchg
mov
loopne
pushf
fist
mov
daa
lock
mov
mov
test
cmp
retf
cdq
in
aad
mov
ss
fbld
sbb
in
sub
add
pop
cmps
pop
call
mov
test
ds
es
mov
stc
xchg
pop
aaa
bound
jp
jmp
std
dec
add
aaa
je
push
popa
fwait
cs
sbb
jecxz
mov
push
lock
jb
inc
lock
pop
out
inc
push
jo
push
out
nop
push
inc
scas
out
jb
inc
out
mov
jecxz
or
fst
sbb
addr16
xchg
xor
cmp
test
repnz
lock
and
pop
test
mov
loope
(bad)
mov
fdivr
jmp
cld
mov
xchg
mov
mov
rcr
xor
sub
out
les
push
fsubp
and
jbe
js
jae
popf
jmp
mov
push
pop
xor
dec
jmp
loope
retf
mov
adc
scas
jno
mov
ins
test
dec
jp
and
adc
dec
and
lods
sahf
xorps
loopne
inc
(bad)
les
vpunpckhbw
(bad)
daa
pushf
lods
cmp
(bad)
aas
push
xor
mov
rcl
ins
(bad)
pop
or
(bad)
pusha
sbb
or
scas
jo
jae
jb
pop
int
mov
loope
adc
mov
scas
add
mov
jne
xor
cmp
in
xchg
cmp
xchg
iret
lods
dec
int
sti
xchg
dec
mov
cwde
or
jecxz
into
mov
shl
cdq
jbe
sbb
not
mov
push
ret
scas
loop
stos
dec
mov
mov
mov
bnd
dec
xchg
loope
out
ins
(bad)
xchg
inc
mov
ret
in
jmp
movs
loopne
int3
loopne
jmp
jmp
int3
or
push
nop
or
(bad)
fstp
push
out
xor
mov
inc
cmp
cmp
dec
(bad)
cdq
int
ins
and
xor
addr16
push
loop
fwait
push
jb
add
daa
cdq
fcomp
ret
sar
pop
or
jecxz
add
sti
jp
aaa
ret
les
aaa
sub
adc
xor
call
retf
pop
ror
ret
mov
pop
test
mov
jne
sub
xchg
out
mov
out
pop
jle
rcr
repnz
jmp
push
cdq
popa
inc
adc
sub
out
mov
outs
xchg
or
or
call
push
(bad)
gs
rcr
sbb
add
inc
xlat
aaa
mov
and
xor
mov
test
inc
jb
in
push
pop
mov
pushf
in
test
fcom
add
mov
into
add
sti
and
shl
or
into
mov
jo
lock
mov
lea
div
mov
jmp
dec
push
sbb
cmp
(bad)
ins
(bad)
gs
pop
push
xor
mov
shl
ror
pop
sbb
cld
test
test
dec
(bad)
xchg
pop
imul
sbb
cs
shl
ret
ret
sahf
ret
test
or
call
jle
mov
mov
jecxz
pop
retf
sub
mov
cs
sbb
(bad)
xor
jnp
sbb
jns
das
movs
pop
in
imul
pop
xchg
fidivr
xchg
(bad)
(bad)
mov
pop
jnp
leave
arpl
cld
iret
(bad)
add
push
test
test
imul
mov
sub
fisub
rcr
or
xchg
jb
add
inc
mov
mov
arpl
jmp
adc
inc
mov
cli
push
push
add
fs
or
and
pusha
adc
xlat
fwait
mov
inc
push
mov
pop
test
int
int
loope
and
push
inc
mov
test
xchg
mov
cmp
sbb
popf
ja
pop
aaa
mov
(bad)
pop
fcom
inc
push
dec
jg
into
int
push
mov
add
ss
call
repz
stc
shl
jecxz
adc
bound
sti
xchg
int
jmp
jge
retf
mov
mov
pop
clc
stos
into
je
neg
pop
mov
mov
fisttp
fstp
cmps
(bad)
dec
mov
push
das
add
in
sbb
xchg
jmp
sahf
and
xor
mov
push
pushf
ja
imul
sub
adc
xchg
inc
out
fistp
lea
les
clc
mov
pop
mov
out
jmp
jl
imul
pop
fwait
add
sub
loop
cmps
push
ss
xchg
out
pushf
or
stc
xchg
mov
mov
add
test
cmps
sub
idiv
je
enter
push
pop
jp
mov
mov
mov
or
lahf
dec
popf
out
(bad)
(bad)
mov
or
rol
int3
sub
push
add
call
dec
call
pushf
cwde
inc
inc
cmp
sbb
adc
pop
mov
out
in
sub
mov
ret
push
adc
imul
or
and
retf
loopne
jecxz
mov
dec
not
sub
jp
cmp
push
jle
dec
sub
xchg
and
sbb
es
xor
and
icebp
ins
clc
adc
in
ja
xor
scas
icebp
and
add
test
fmul
jne
xchg
sbb
lods
sub
mov
xor
add
fnstenv
mov
and
push
mov
push
pusha
pop
mov
lods
sub
dec
and
sub
je
rcl
or
push
mov
or
repnz
mov
les
pusha
inc
sub
push
dec
mov
in
or
and
mov
in
add
xchg
cmp
iret
push
jl
clc
stos
dec
addr16
and
xor
or
xchg
mov
add
leave
repnz
addr16
adc
stos
ret
dec
dec
cld
mov
dec
cmp
lahf
fisttp
(bad)
aad
pop
movs
pop
xchg
lods
fwait
cmps
mov
ins
cli
mov
push
loopne
nop
inc
cmp
push
xchg
sar
inc
and
call
mov
push
xchg
mov
xor
push
mov
adc
push
mov
push
push
repnz
xor
dec
sbb
mov
ss
cdq
clc
dec
jmp
sbb
fmul
pop
mov
into
pop
xor
adc
add
aaa
xchg
jmp
pushf
imul
(bad)
xchg
jo
jnp
mov
cli
aaa
cmp
retf
fcomp
mov
mov
or
or
mov
ds
cli
fwait
in
ret
jo
daa
mov
lds
dec
fs
pop
mov
aaa
xor
retf
popf
or
cmp
ds
es
mov
pushf
xor
and
mov
or
add
in
jp
and
jecxz
inc
fsubrp
jmp
in
mov
mov
icebp
outs
jmp
fwait
inc
sbb
or
clc
inc
shr
jp
(bad)
(bad)
mov
(bad)
cmp
pop
cs
xor
cmp
scas
lds
xchg
stos
loope
retfw
xchg
xchg
or
mov
out
mov
or
inc
push
and
fstp
push
or
ins
add
dec
cmp
inc
dec
in
xchg
push
push
arpl
pop
push
neg
dec
add
and
xchg
or
arpl
or
sub
out
fidivr
adc
xchg
pop
dec
dec
fldcw
cmps
jne
and
(bad)
jns
sbb
sbb
jo
test
repnz
ins
jl
mov
aaa
xchg
push
and
lods
xchg
js
dec
mov
out
femms
into
cmp
adc
scas
scas
mov
stc
mov
xchg
mov
jo
pop
and
lods
xchg
clc
clc
cmp
sar
mov
adc
inc
sub
js
mov
push
jg
vmovq
xor
cld
adc
lods
mov
push
ror
mov
fwait
stos
iret
je
jl
mov
pop
mov
je
cmp
call
mov
mov
loopne
add
cdq
adc
cmp
fsub
push
cmp
xor
jmp
and
mov
das
xchg
xchg
je
retf
repnz
xor
adc
fs
int3
or
sub
shl
xchg
inc
mov
add
cmp
shl
and
outs
adc
jge
sub
enter
sub
sbb
jmp
outs
(bad)
retf
clc
pop
or
dec
sub
and
pop
mov
ret
test
sub
ja
mov
xchg
popa
and
or
psrlq
out
repz
popf
lods
mov
stc
ss
pop
dec
stc
mov
xchg
fs
or
sub
add
xchg
test
sbb
test
mov
mov
and
out
push
(bad)
mov
xlat
jne
pop
add
mov
xor
add
inc
pushf
movs
hlt
or
pop
mov
fisubr
push
(bad)
in
int3
mov
or
in
add
xor
ds
mov
sub
mov
shr
test
push
sbb
call
aaa
loopne
daa
ja
add
adc
in
xchg
ror
(bad)
and
ins
mov
push
mov
or
adc
push
cwde
(bad)
addr16
fisubr
shl
lea
sbb
into
mov
push
sub
add
ret
imul
lods
xor
inc
in
mov
pop
add
mov
mov
(bad)
jmp
in
iret
das
js
mov
mov
jge
xchg
jbe
mov
mov
add
push
mov
push
lock
in
mov
mov
adc
repnz
(bad)
fidivr
sbb
fisub
movs
cmps
iret
mov
adc
cmp
(bad)
lock
aad
adc
fnstsw
sub
mov
int3
jmp
push
test
daa
sbb
imul
mov
out
daa
scas
push
sub
bound
cmp
div
sbb
cs
data16
sbb
aas
repnz
or
fsub
(bad)
ds
js
not
sub
pop
imul
or
and
imul
add
push
ja
inc
xor
ficomp
ins
adc
(bad)
std
sbb
inc
dec
gs
and
ins
and
icebp
sbb
pop
push
cmps
cmp
test
rcr
xor
fidiv
js
mov
cmp
test
mov
xchg
lods
cli
mov
bound
inc
inc
aam
ins
push
inc
out
arpl
scas
mov
dec
movs
lods
loop
mov
leave
xchg
jl
mov
add
mov
(bad)
sub
sbb
(bad)
fs
je
aam
xlat
push
in
push
retf
sub
mov
imul
loopne
lahf
sub
mov
push
sub
sub
cmp
pop
scas
mov
pop
xchg
mov
xchg
shl
dec
sub
(bad)
je
pop
repnz
lds
(bad)
aas
shl
cmp
(bad)
lahf
ficom
(bad)
jb
pop
dec
xchg
imul
mov
pop
dec
es
adc
ins
movs
jne
adc
sti
ret
popf
jae
adc
outs
outs
xor
jb
jg
in
(bad)
push
hlt
xchg
int3
repnz
(bad)
popf
xchg
sbb
cdq
jno
add
call
inc
into
(bad)
imul
push
push
or
jne
jmp
dec
dec
mov
pop
lock
(bad)
mov
push
pop
scas
or
mov
inc
or
(bad)
in
xchg
inc
loopne
add
jmp
imul
xor
lds
or
mov
sbb
jo
(bad)
add
sub
fcom
fnstsw
ds
bnd
imul
ss
mov
cmp
jg
push
bound
xor
in
xor
and
pushf
das
test
xchg
not
call
push
sbb
jmp
push
dec
push
push
and
rcl
or
dec
cmp
lock
jmp
ret
xchg
and
cdq
rcr
fnstsw
sahf
add
xor
ins
xor
sbb
(bad)
cs
fdivr
or
test
and
jmp
and
pushf
fiadd
push
hlt
jle
stc
mov
mov
retf
xor
jns
sbb
(bad)
sbb
shl
hlt
push
or
imul
data16
jmp
cmps
cmp
cmps
jge
rcl
mov
out
cmovns
adc
aaa
loop
lahf
stos
inc
int
mov
loop
push
aaa
or
mov
in
sbb
arpl
ja
fimul
test
inc
and
pop
cmp
jle
int3
push
daa
iret
cld
push
div
mov
adc
mov
push
int
dec
nop
repz
repnz
fistp
in
add
cmp
sahf
inc
add
mov
dec
mov
out
xchg
ror
and
movs
scas
mov
cmc
jns
aaa
rol
repz
cmp
loope
jno
push
inc
cli
mov
lock
sub
jecxz
pusha
sbb
mov
arpl
pop
call
push
sbb
xor
inc
mov
mov
imul
add
repnz
rcr
adc
cmps
sub
pop
xor
mov
mov
iret
jmp
shr
dec
ins
pop
jmp
imul
fstp
fs
push
jns
mov
pop
in
jge
ret
jno
adc
pushf
pushf
pop
sbb
cmp
stc
mov
out
(bad)
push
sbb
xor
fwait
xlat
sti
xor
test
xor
enter
popf
call
and
int3
sub
mov
push
mov
xchg
inc
(bad)
sbb
dec
and
jl
xlat
gs
cmp
adc
jg
cdq
mov
add
xchg
rcr
jns
leave
xchg
dec
mov
aad
cmp
sub
add
pop
out
lock
add
adc
cmp
mov
mov
shl
sub
push
ficom
xor
push
dec
sbb
test
fimul
(bad)
jo
jg
in
jns
imul
or
nop
sbb
fs
pop
add
xor
in
rcr
dec
and
leave
iret
adc
cmp
ins
fist
fild
xchg
daa
loop
add
rol
test
add
loop
call
ficomp
add
test
and
(bad)
dec
mov
or
sti
icebp
aam
ja
test
sbb
lods
dec
cmps
mov
push
adc
pop
js
call
fdiv
pop
dec
xchg
popf
and
cs
loope
data16
ds
adc
daa
sbb
test
and
mov
push
gs
add
ret
xor
mov
stos
mov
sbb
adc
fild
mov
movaps
into
mov
fiadd
sbb
pushf
mov
jp
dec
jp
sub
loope
out
aam
cli
(bad)
int
addr16
in
aam
cmp
xchg
ins
adc
inc
xchg
jae
or
and
sbb
xor
pop
mov
pop
dec
loopne
xor
jb
pop
mov
das
clc
sub
sub
inc
in
or
jp
mov
sbb
mov
push
lds
inc
int3
push
out
je
shl
outs
xchg
sub
mov
aas
adc
or
sbb
(bad)
in
outs
jne
je
sahf
pusha
(bad)
mov
aad
push
loop
into
xchg
cmp
xchg
retf
jp
jmp
push
sbb
sub
addr16
imul
jbe
adc
and
jecxz
pop
cli
push
pop
call
nop
outs
xchg
arpl
push
push
aam
push
and
mov
mov
dec
mov
xor
cmc
int3
jmp
cmp
and
std
sahf
or
sbb
jmp
adc
push
imul
cmps
pop
mov
test
lock
or
test
mov
jp
ds
(bad)
test
test
arpl
pop
or
sbb
mov
int3
ficomp
in
dec
loop
loop
ret
ror
rol
pushf
jmp
xor
bound
retf
and
nop
pusha
popa
sub
xor
fwait
mov
pop
fcom
pop
mov
adc
jmp
pop
repz
fiadd
dec
push
mov
out
cmp
inc
in
out
ins
or
mov
add
cmp
mov
pop
call
cld
sbb
cdq
ss
dec
inc
aas
cmp
arpl
sub
mov
pop
dec
xchg
dec
push
push
push
arpl
(bad)
std
fsubr
inc
fstp
adc
fisttp
and
jecxz
inc
push
jl
mov
rol
aam
mov
push
lea
xor
jl
loop
jbe
xchg
sbb
mov
mov
sbb
cmp
push
pop
adc
movs
je
push
in
in
add
dec
jb
xor
jg
push
or
das
test
(bad)
sub
mov
jae
test
pop
cdq
out
in
push
add
jecxz
push
mov
push
or
push
jmp
in
or
arpl
in
out
sub
adc
nop
outs
out
pop
imul
cmp
mov
add
(bad)
and
mov
dec
loopne
cmp
aad
in
jmp
ja
pop
sub
pop
jo
lahf
cmp
mov
and
mov
out
xor
xor
dec
add
adc
xchg
std
cmps
mov
sbb
mov
xor
pop
xor
sub
retf
pusha
or
inc
jne
sbb
(bad)
jne
lds
rcl
sbb
push
loope
dec
out
xchg
(bad)
ret
sbb
sub
fwait
adc
outs
and
or
(bad)
in
retf
xchg
imul
sahf
mov
ds
addr16
dec
add
adc
xor
aam
and
mov
sbb
push
call
sbb
js
or
or
nop
dec
jno
adc
inc
fsubr
fcomp
mov
push
and
xor
inc
outs
in
jb
fisub
pusha
retf
inc
push
dec
getsec
lods
test
add
jns
dec
cld
retf
sbb
scas
loope
xchg
in
rcr
sub
jmp
rcr
in
jo
ja
jno
xchg
push
mov
(bad)
(bad)
and
dec
out
push
mov
pop
aas
jns
(bad)
lods
xor
mov
xchg
mov
dec
and
dec
add
mov
retf
in
je
(bad)
loope
cld
sub
cmp
mov
or
or
(bad)
jl
cmp
dec
sar
cmps
sub
and
push
inc
dec
pusha
lods
or
test
imul
ds
sbb
and
call
dec
push
pop
fld
iret
ret
jmp
xor
int3
mov
push
inc
jb
push
shr
js
in
jmp
push
jnp
adc
hlt
stos
test
test
ds
or
mov
fisttp
sbb
add
sbb
and
mov
xor
add
jl
inc
jo
imul
in
shl
pop
jne
push
pop
addr16
pop
mov
pushf
cmp
shl
inc
mov
popa
mov
pop
(bad)
sub
push
and
pop
xor
ja
test
jl
push
cli
add
sti
outs
mov
mov
jmp
xchg
out
jle
dec
mov
add
mov
lods
mov
std
das
bound
and
mov
jmp
pop
adc
repz
cld
mov
fdiv
rol
leave
inc
ss
lods
lahf
(bad)
int
add
push
inc
addr16
rol
mov
out
push
adc
jmp
push
xor
out
test
add
jae
xchg
sub
pop
xor
mov
cmp
sbb
je
int
retf
out
mov
mov
jmp
push
fmul
lods
in
push
push
in
xchg
pop
xchg
dec
es
xor
ja
nop
daa
pop
loopne
inc
neg
outs
shr
or
ja
inc
dec
ret
(bad)
mov
mov
or
or
leave
shl
lock
inc
mov
lea
and
jb
push
mov
jb
jbe
into
inc
es
adc
fsubr
fs
aam
verr
mov
cmp
xor
test
and
pop
test
in
retf
pop
cmc
fisttp
jge
daa
pop
jo
and
or
lea
ja
fwait
jmp
(bad)
repnz
in
cmp
push
out
test
adc
es
cmp
into
mov
clc
test
cmp
loop
mov
in
movs
in
dec
jb
adc
or
push
mov
push
inc
cmp
sti
inc
ret
lods
scas
adc
pop
fs
loopne
cli
cmp
int
adc
or
mov
in
test
xor
mov
int3
retf
test
retf
outs
dec
push
mov
test
cmc
jmp
gs
sub
adc
cmp
cmp
push
sbb
enter
mov
fs
movs
and
sbb
repnz
adc
pop
mov
or
xchg
cmp
adc
sbb
xchg
inc
mov
dec
adc
jo
xchg
pop
mov
aad
out
lods
ror
js
mov
cmps
mov
dec
inc
ins
push
loope
loope
add
push
dec
stos
sub
cmp
sbb
adc
test
push
xchg
and
test
sahf
push
and
pop
dec
mov
inc
or
or
in
mov
das
ja
xchg
js
(bad)
call
(bad)
in
and
lock
xchg
mov
(bad)
fsubr
dec
loope
shl
adc
lea
addr16
dec
fiadd
pushf
stos
repnz
int3
ins
lahf
aam
xor
push
xchg
in
jmp
test
fld
push
jge
xchg
pusha
adc
jmp
cmc
loopne
outs
push
and
loopne
sub
les
mov
inc
and
pusha
xchg
adc
push
pop
mov
jmp
mov
lahf
jl
das
fwait
push
xchg
or
inc
mov
adc
push
(bad)
mov
adc
inc
int3
mul
hlt
out
(bad)
idiv
dec
lahf
sub
push
jnp
(bad)
popf
stos
ret
add
mov
test
clc
push
daa
stos
int3
fld
test
jmp
fwait
or
push
sbb
shrd
cdq
test
sbb
mov
sub
xlat
fcom
add
xor
loop
adc
ret
push
dec
fld
inc
sub
adc
movs
or
pop
(bad)
or
jecxz
imul
mov
push
or
jmp
or
jmp
sbb
push
ror
sar
xor
inc
add
out
mov
jbe
xchg
xor
movs
push
xor
inc
lea
cmp
sub
in
mov
push
ret
aaa
je
cmovs
je
inc
(bad)
xchg
mov
cld
fisub
dec
xchg
shl
in
jno
arpl
mov
mov
pop
inc
fisub
sti
(bad)
jo
mov
daa
jle
mov
out
and
fs
daa
pop
jl
dec
pop
cmp
nop
mov
retf
sar
out
icebp
sahf
xlat
icebp
out
cmps
push
mov
sbb
repz
inc
popa
mov
hlt
cmps
sbb
push
ins
(bad)
mov
xchg
cmc
lahf
sub
cmps
jae
xchg
inc
mov
cmp
idiv
xchg
das
adc
sbb
stc
fnstsw
nop
loope
test
das
mov
pop
pop
aam
push
outs
(bad)
push
xchg
sti
push
mov
adc
cmp
pop
pushf
push
jg
out
ja
fstp
lods
inc
dec
xlat
or
fild
mov
push
push
das
sub
hlt
dec
inc
add
xchg
mov
loop
test
test
cmp
aaa
pop
mov
pop
jno
hlt
lock
pop
push
cld
cmp
mov
cld
jecxz
pop
call
and
retf
scas
aas
dec
mov
jg
(bad)
call
mov
xchg
or
push
jmp
or
and
xlat
jge
sbb
imul
aas
adc
push
sbb
xor
outs
(bad)
adc
cmps
mov
and
out
test
jg
mov
mov
xor
cli
bound
jmp
(bad)
fcmove
imul
or
push
add
pop
inc
aad
rol
cmp
bound
and
repz
lods
nop
mov
sub
dec
call
xchg
gs
or
aam
lock
sub
mov
vmulsd
cld
xchg
fwait
(bad)
cmc
push
pop
sahf
sbb
mov
mov
stc
mov
add
fsubr
fsub
jmp
into
push
gs
(bad)
sub
xor
sbb
div
hlt
or
and
xchg
outs
mov
loop
aad
xor
cdq
push
popa
mov
scas
hlt
retf
(bad)
hlt
sbb
or
gs
pop
aam
xlat
jmp
dec
mov
rcr
jnp
xchg
xchg
aad
and
lahf
and
fcomp
dec
xchg
cmp
int
call
retf
jmp
jmp
retf
sbb
cld
xor
adc
sahf
mov
xor
mov
in
jp
(bad)
loop
ficom
push
or
cdq
loop
mov
dec
lods
push
pop
or
jb
scas
adc
pop
shr
push
push
dec
mov
jo
ins
fiadd
movs
aas
fwait
pop
jecxz
xor
cs
xchg
adc
adc
sti
aas
cdq
mov
add
inc
xor
popf
sub
(bad)
mov
int3
push
adc
aas
push
(bad)
mov
mov
fbstp
ret
mov
adc
ficom
pop
cmps
leave
inc
or
call
or
int3
mov
imul
fmul
cmp
sbb
jp
jmp
mov
sub
xchg
shr
cmp
jno
aam
xchg
retf
scas
mov
mov
movs
adc
or
cmps
mov
sbb
fwait
mov
jge
dec
fwait
gs
je
hlt
dec
test
ss
test
not
jge
and
in
inc
sub
pop
mov
iret
and
add
pop
cmps
out
jmp
cmp
cmp
pop
inc
mov
sbb
xor
or
cmp
popf
vmovntps
fst
xchg
jle
inc
test
pop
pop
add
push
or
push
fs
aas
inc
adc
test
mov
inc
jns
sbb
scas
movs
mov
dec
loope
fs
push
jmp
xchg
add
ret
xchg
mov
cs
inc
imul
(bad)
fiadd
sub
imul
lods
jg
popf
adc
popa
xchg
mov
jae
mov
and
mov
scas
add
outs
aam
lahf
sub
cmp
mov
lock
cmp
add
mov
repnz
inc
scas
mov
(bad)
mov
mov
fisubr
pop
mov
ficom
outs
xor
aaa
inc
jne
and
inc
out
jne
popa
and
fwait
jmp
ror
and
dec
imul
and
lods
out
sub
xchg
push
xchg
mov
dec
xchg
aam
sahf
mov
cmp
enter
mov
inc
sub
cdq
lds
pusha
rcr
jae
sub
out
and
scas
inc
mov
ins
fst
fwait
xor
dec
push
mov
add
aad
jl
mov
xchg
rcl
add
pop
repz
scas
dec
or
push
push
xor
retf
mov
xor
jecxz
mov
dec
sub
push
bound
push
push
jge
xchg
int
out
mov
cmp
mov
cld
and
jg
jl
jecxz
aam
loope
lahf
sbb
xchg
scas
enter
fwait
out
jns
pmullw
mov
mov
mov
fmul
xor
mov
sub
mov
xchg
imul
fisub
xchg
push
enter
add
ja
pcmpgtd
mov
cwde
hlt
mov
jg
rcr
sub
mov
mov
mov
test
pop
mov
jg
lahf
out
mov
push
inc
adc
fistp
jg
jb
or
cmp
mov
rcr
repnz
fcomip
je
push
mov
dec
mov
iret
xchg
sbb
test
fcmovnbe
int3
jle
push
int
inc
mov
les
mov
sub
(bad)
aas
push
or
sbb
pop
adc
popa
inc
(bad)
sar
hlt
add
lods
daa
inc
add
xchg
add
or
std
shl
xchg
loope
addr16
les
mov
sbb
pop
or
dec
repz
jge
inc
mov
jnp
push
dec
test
xchg
sub
stc
ds
pop
outs
mov
and
rcr
(bad)
jb
loop
adc
sbb
push
stos
sbb
jb
dec
mov
sti
mov
inc
jg
fnstenv
mov
aam
sar
push
lods
jl
sub
cmps
out
cs
and
fwait
aaa
sub
mov
push
add
xchg
mov
mov
mov
popf
dec
xor
sub
stos
or
leave
rcl
loope
ret
rol
and
pop
adc
pop
xor
cmp
cli
pop
mov
jge
add
push
jne
(bad)
mov
popf
cmp
add
ficomp
push
hlt
mov
icebp
dec
in
sbb
add
fld
add
stc
push
ret
push
jmp
or
mov
push
sub
out
mov
jb
cmc
(bad)
fnstsw
loopne
stos
dec
iret
adc
mov
fstp
mov
pop
outs
sahf
call
aam
inc
jg
cmc
and
bound
add
xchg
xlat
or
ffree
xor
sbb
in
push
ret
xchg
aad
stos
jp
ins
nop
fstp
cli
xlat
into
jae
stos
js
jmp
in
jno
loopne
xor
push
xor
call
cmp
push
in
cld
cld
mov
cwde
jb
inc
retf
jp
test
push
(bad)
xchg
sbb
and
cmps
pop
pop
daa
sbb
push
aad
add
dec
lods
pop
or
and
adc
fldcw
adc
(bad)
ds
mov
pop
rol
adc
pop
out
stos
dec
mov
loopne
ss
sub
fld
xchg
adc
jp
into
and
jmp
sub
adc
out
cmp
inc
rcr
sbb
jmp
push
pusha
in
jecxz
xchg
mov
add
dec
daa
iret
cdq
sub
das
cld
outs
movs
iret
retf
sub
call
adc
push
pop
(bad)
xlat
jns
stc
sub
inc
adc
pushf
push
fild
mov
dec
pop
add
push
iret
out
sub
push
in
push
jno
mov
sbb
add
mov
pop
xchg
cmp
or
fwait
cmps
call
in
outs
lea
pusha
(bad)
loope
test
mov
mov
shl
and
dec
ins
pop
push
ret
cmp
ja
inc
jg
dec
xor
cmp
xchg
aaa
lahf
mul
xchg
push
lahf
push
pop
xchg
pop
add
pop
test
or
push
dec
jg
out
sbb
and
stos
or
loope
gs
and
cmps
out
lahf
jnp
sbb
scas
mov
pop
push
pop
lods
(bad)
cmc
into
mov
rcl
leave
rcr
inc
bound
mov
pop
bound
sbb
cmp
scas
outs
cmp
inc
(bad)
test
or
or
enter
out
pop
dec
mov
mov
inc
sub
movs
out
(bad)
les
pop
loop
test
clc
jae
jb
jbe
xor
(bad)
xchg
rcr
or
cdq
dec
add
dec
das
cli
push
fist
aaa
(bad)
stos
lock
jecxz
dec
outs
dec
mov
xchg
push
xchg
sti
and
xchg
leave
xor
push
aas
(bad)
mov
repnz
push
mov
loopne
dec
sahf
jae
xor
mov
nop
dec
inc
cmp
in
std
imul
test
dec
es
je
push
push
add
call
je
pop
dec
inc
jnp
sub
aaa
add
push
inc
js
outs
stos
push
inc
inc
push
pop
sbb
dec
movs
mov
adc
and
fimul
in
xlat
retf
retf
pop
xor
ins
xor
in
sti
in
mov
mov
ror
gs
mov
cmps
pop
xchg
xchg
or
jb
test
lea
cwde
clc
add
push
add
mov
dec
mov
xchg
leave
xchg
and
loope
push
std
jmp
xor
lea
stos
sbb
test
enter
ins
out
jge
mov
or
cmp
push
push
imul
mov
ss
and
mov
inc
dec
adc
stos
icebp
sub
int
mov
sub
in
aam
test
loop
outs
cmp
fidiv
mov
xor
push
adc
inc
inc
push
sub
rcr
or
cmp
push
mov
add
test
inc
inc
imul
push
aas
(bad)
jg
sub
or
retf
aad
push
xor
pop
sbb
popa
xchg
repz
(bad)
ins
cwde
adc
add
mov
stc
dec
cmp
pop
(bad)
push
ins
push
pusha
ss
mov
scas
mov
shr
fist
xor
sbb
leave
jmp
push
cmp
pusha
mov
push
jge
or
fld
xlat
ins
jno
rcl
pop
loopne
adc
cmp
mov
inc
mov
jo
clc
cld
mov
inc
cs
rep
jge
in
pop
pop
ins
in
pop
sub
add
jl
mov
inc
xchg
mov
cmps
aaa
int
mov
push
mov
cmp
retf
or
imul
pop
imul
retf
inc
(bad)
aam
xchg
xor
mov
ret
inc
jge
fstp
sub
xor
sub
out
test
push
jb
test
cmps
xor
hlt
jge
dec
mov
scas
xor
ss
xchg
add
pop
mov
mov
mov
mov
sbb
cmps
pop
mov
or
push
xchg
rol
arpl
mov
mov
gs
arpl
lea
paddq
jle
mov
cdq
jne
call
ror
adc
push
push
mov
xor
push
and
aam
pop
out
mov
sub
xor
mov
xor
mul
and
loope
push
daa
ja
fmul
dec
leave
dec
xlat
mov
or
ins
cmp
daa
int3
xchg
adc
test
xchg
xor
jno
inc
shl
in
dec
mov
dec
loopne
hlt
aam
fidivr
repz
mov
mov
adc
test
xchg
and
and
push
sub
sbb
sub
pop
sub
scas
scas
pop
lea
mov
stos
xor
push
fwait
cld
pop
push
cmp
or
dec
test
scas
mov
shl
(bad)
or
mov
mov
pop
mov
lea
sbb
(bad)
retf
jbe
nop
in
(bad)
mov
pop
vfrczps
jo
inc
data16
sti
add
stos
aad
stos
div
xchg
dec
jne
xchg
add
sbb
mov
add
push
lods
cld
rcr
or
pop
in
jmp
xchg
out
mov
ins
add
xor
in
xchg
fcomp
sub
aam
sbb
mov
jl
stc
ror
inc
fcom
out
adc
hlt
fst
pop
xchg
sub
cmp
pop
dec
or
and
(bad)
std
and
repnz
and
mov
xor
cmp
neg
imul
xor
sbb
mov
mov
clc
dec
arpl
in
retf
and
lahf
retf
mov
xor
jge
or
cmp
in
push
xchg
jb
dec
and
adc
jbe
sbb
cld
pop
add
xor
stos
fcmovu
das
aas
test
(bad)
fidivr
and
xor
in
xchg
jno
mov
sub
sbb
daa
jae
shl
cmp
xchg
ins
cmpxchg
imul
pusha
and
aaa
addr16
icebp
adc
(bad)
dec
xchg
xor
jp
cld
fdiv
(bad)
int
mov
sbb
clc
mov
jne
(bad)
sub
(bad)
inc
cmp
sbb
inc
stc
pop
fstp
inc
push
leave
cmc
cs
or
neg
adc
in
mov
jl
add
cmp
push
movs
xor
jb
sub
cmps
mov
cdq
jnp
cmp
das
outs
fisttp
pop
mov
inc
mov
ss
pushf
fbstp
ins
pop
cwde
in
pop
push
mov
inc
cmps
xlat
in
and
dec
popf
ret
pop
adc
push
repnz
test
popa
adc
scas
xchg
sub
push
bound
out
je
cld
pop
sahf
inc
in
(bad)
(bad)
sub
bound
pushf
mov
add
aas
xchg
mov
adc
lea
xchg
shr
and
xchg
push
test
mov
rdtsc
sbb
mov
out
jle
jp
std
push
sub
lds
jb
adc
das
inc
xchg
arpl
in
or
cmp
imul
icebp
or
pop
lods
stos
(bad)
loopne
fiadd
jbe
shl
ret
cwde
repnz
into
xchg
scas
inc
inc
or
xchg
mov
xor
repz
jl
je
mov
push
imul
mov
xchg
test
movs
aam
pop
cli
jb
adc
dec
fcom
pop
popa
js
xchg
sub
int
and
pusha
arpl
stos
add
cmp
and
pop
sbb
outs
xchg
call
adc
es
mov
inc
sbb
cmc
retf
inc
repnz
(bad)
pushf
imul
mov
ds
jns
sbb
sub
jo
fidivr
pop
mov
lahf
aad
and
mov
loopne
pop
push
jmp
sub
ja
and
loopne
clc
pop
push
mov
sub
pop
test
(bad)
cmp
pop
outs
add
repnz
inc
jno
mov
test
outs
and
aas
jg
call
and
or
jg
clc
loop
sub
push
(bad)
xchg
sahf
imul
mov
pop
dec
push
(bad)
icebp
daa
stos
icebp
sub
lea
(bad)
sbb
ror
pushf
(bad)
pop
js
test
std
and
mov
mov
push
xadd
xchg
jbe
sbb
nop
ss
mov
out
ins
push
call
ret
enter
jno
call
int
mov
cmps
jg
mov
cmp
rol
add
or
ja
jg
xor
xchg
pop
retf
cmp
xchg
cmp
ror
ins
sti
inc
push
mov
out
mov
push
inc
xor
xchg
retf
es
out
push
jecxz
(bad)
mov
mov
pusha
push
imul
jbe
arpl
push
cmp
jg
out
jns
or
rcl
test
shr
pop
jecxz
gs
out
(bad)
repnz
(bad)
test
ss
in
sahf
lods
ffree
jae
mov
or
cmp
lock
imul
aas
push
jb
mov
into
cmp
cmps
jle
test
add
sbb
cmps
(bad)
aas
out
shr
inc
jle
(bad)
cmps
loopne
aaa
sbb
xor
sbb
sbb
add
sti
cmp
test
xchg
(bad)
hlt
clc
mov
xchg
stc
ins
movs
pop
mov
push
arpl
jge
imul
sub
cmps
pop
or
jecxz
xor
and
fbld
(bad)
das
std
xor
push
mov
stos
jb
and
push
cdq
sub
sub
or
and
gs
imul
adc
mov
mov
cmp
data16
xchg
and
mov
imul
enter
imul
(bad)
cmps
or
popf
add
fucomip
add
xchg
mov
shl
push
mov
fisttp
pushf
pop
lods
inc
scas
xor
std
addr16
enter
fdiv
jnp
and
add
adc
cwde
xlat
adc
pop
out
mov
fld
call
and
push
jmp
cmp
ds
(bad)
or
jbe
dec
lods
aam
dec
xchg
and
ret
shl
fisttp
pusha
xor
fsub
push
pop
loopne
xor
jge
mov
(bad)
sub
jp
pop
addr16
mov
sbb
scas
mov
mov
inc
popa
retf
mov
aam
cmps
lods
dec
xor
and
leave
mov
jae
(bad)
hlt
jge
dec
or
sbb
rcl
mov
jle
adc
mov
scas
repnz
add
sbb
pop
in
loop
test
js
int
ja
inc
mov
push
(bad)
pop
inc
mov
cmp
and
and
xchg
(bad)
in
mov
ror
xchg
fs
mov
dec
jmp
aas
or
ja
(bad)
bound
iret
fwait
aas
rcr
enter
outs
jg
inc
fst
xchg
cmp
cmp
aaa
ins
lds
xor
mov
push
sbb
gs
(bad)
jbe
xchg
into
xchg
cmc
mov
jne
sbb
sbb
or
jl
sub
pop
adc
addr16
cmp
int3
add
push
mov
inc
push
into
inc
sar
or
mov
movs
or
pop
sar
hlt
adc
lods
test
sbb
out
or
addr16
dec
je
lods
or
sbb
mov
dec
jae
das
lds
lea
sbb
mov
ins
and
lock
retf
xor
jbe
test
or
adc
out
push
pop
cmps
inc
repnz
xchg
fiadd
mov
je
adc
es
inc
retf
dec
loopne
and
popf
xlat
and
sbb
out
jmp
out
xchg
sahf
xchg
test
jo
jmp
sbb
sbb
js
jmp
dec
int
cdq
sbb
es
fild
fsubr
xchg
out
push
vpcmpub
in
dec
out
lea
push
(bad)
shl
adc
inc
and
mov
jecxz
lods
sub
push
xor
dec
jge
lods
push
stc
mov
inc
xlat
jge
jno
cmp
jb
mov
clc
call
add
lods
cmp
lods
lock
loopne
add
les
ficom
sub
in
repz
jmp
aam
sub
mov
add
mov
push
xchg
inc
mov
outs
stc
das
test
dec
sub
popf
jl
add
iret
repz
xlat
xchg
je
jge
repz
jmp
jae
mov
fist
dec
xlat
add
push
and
and
dec
jae
test
fistp
out
mov
loopne
sub
pushf
jg
scas
call
push
mov
and
mov
int
sbb
dec
jmp
xchg
dec
fld
addr16
mov
ja
out
add
add
cmp
or
out
daa
fbld
sub
cli
cmp
addr16
or
(bad)
adc
and
add
add
xchg
xchg
mov
sub
out
jmp
add
sbb
cmp
ds
mov
inc
dec
movs
sbb
out
icebp
mov
inc
mov
cmp
adc
adc
iret
jo
jp
movs
jb
adc
inc
sbb
adc
inc
data16
sub
(bad)
sbb
movs
jbe
and
or
leave
fild
adc
mov
xor
arpl
and
stos
data16
call
enter
xchg
inc
inc
mov
pop
mov
aaa
mov
sbb
sbb
shl
shr
mov
cdq
xchg
mov
jp
(bad)
call
int
(bad)
mov
cmp
pop
mov
jb
fs
(bad)
(bad)
sti
adc
jmp
push
jno
fwait
in
pop
adc
mov
mov
xlat
sub
cmps
cmp
mov
or
ins
fcomi
pop
push
jl
mov
fst
scas
push
ins
jle
outs
ret
adc
ja
fimul
jmp
repz
adc
push
mov
pop
and
push
and
jbe
and
jnp
aam
std
rcr
sar
add
(bad)
shr
cmp
cmp
lahf
sbb
ret
repnz
call
xchg
sbb
or
(bad)
fidiv
xor
cmp
ss
retf
fyl2xp1
xor
es
fwait
pushf
std
cld
jle
hlt
movs
in
pop
bound
push
and
scas
stos
jecxz
icebp
push
inc
and
mov
cwde
lods
and
cmp
das
push
test
cmc
jo
adc
mov
mov
inc
push
in
push
cmp
adc
mov
inc
cli
mov
xchg
jg
sbb
(bad)
addr16
mov
ja
sti
in
pusha
inc
pop
mov
dec
rcl
(bad)
aas
sub
xchg
cmp
shl
or
cmps
mov
das
xchg
sbb
fcom
test
fwait
xchg
repnz
pop
ds
in
jge
outs
(bad)
cmc
out
aad
xor
adc
daa
push
or
ffree
jnp
popa
bound
rol
or
and
fcom
jno
in
int
jmp
xchg
and
add
shl
ret
and
jp
add
ins
pop
add
pop
or
adc
call
jnp
sub
ja
mov
mov
push
adc
dec
stos
or
mov
std
icebp
fild
test
shl
shl
popf
ins
adc
push
(bad)
add
sahf
mov
shl
je
add
ins
cmp
pop
icebp
jae
and
arpl
pop
pop
call
pop
test
hlt
sub
add
cmp
sbb
(bad)
icebp
imul
push
and
mov
shr
bound
lea
sahf
xchg
jne
cmp
pop
sub
or
aas
jae
or
cdq
inc
cmps
sub
mov
inc
fild
sbb
rol
mov
xchg
cli
mov
jecxz
xlat
es
mov
jmp
dec
loopne
cld
mov
push
mov
add
lds
lahf
add
das
movs
adc
rcl
aaa
dec
jle
or
dec
cmp
mov
aas
cmp
leave
mov
mov
movs
mov
jmp
mov
sub
mov
pop
dec
out
ss
shl
push
jbe
(bad)
push
leave
mov
lods
cmps
mov
pop
fsub
jge
enter
aaa
sbb
test
test
jle
mov
enter
je
jecxz
dec
inc
popa
dec
mov
mov
inc
dec
shl
sub
rcr
(bad)
rcr
cmp
add
xor
gs
lods
iret
mov
push
shr
cld
mov
cmp
mov
call
or
mov
inc
int3
sti
mov
test
sub
inc
lahf
repz
xor
mov
jmp
lock
or
in
adc
int
out
xor
rol
xor
and
cli
or
(bad)
repnz
mov
out
xor
pop
aam
lock
aaa
add
adc
call
(bad)
sub
fld
jbe
or
popf
shl
mov
cmp
movs
loop
ror
out
pop
lods
or
leave
loopne
cmc
gs
cmp
adc
mov
inc
mov
jp
push
dec
lea
(bad)
or
pop
(bad)
clc
in
sbb
jl
mov
jae
jne
push
jmp
cwde
or
push
inc
lahf
sti
js
jae
sbb
jo
dec
push
xchg
push
or
fldenv
push
cwde
adc
cwde
stos
sub
mov
sbb
xor
mov
mov
(bad)
into
jne
jnp
inc
sbb
jbe
adc
adc
idiv
xchg
xchg
cmp
or
cs
pop
cmp
inc
jg
ficom
(bad)
icebp
data16
(bad)
hlt
jmp
xor
jno
sub
je
retf
xor
mov
ret
mov
lods
fcmove
jno
dec
jmp
gs
cmp
icebp
(bad)
movs
jp
mov
pushf
mov
jg
mov
ss
inc
mov
mul
retf
lds
mov
pop
mov
movs
in
div
aaa
test
popf
jnp
aam
xchg
or
out
jmp
sbb
in
add
lods
pop
hlt
mov
jp
(bad)
xor
dec
inc
xor
loope
cmc
sbb
popa
scas
dec
cmps
dec
idiv
lods
repz
int3
push
out
add
jecxz
inc
mov
pop
mov
idiv
xchg
sub
stos
push
push
mov
xchg
or
inc
pop
mov
cwde
xor
rcl
(bad)
ror
sbb
in
xlat
sahf
popf
xchg
bnd
or
xchg
fst
adc
xchg
pushw
mov
add
popa
jecxz
lods
scas
inc
int3
dec
and
fnstcw
(bad)
ret
push
mov
(bad)
pop
rcl
call
adc
sub
adc
xchg
mov
pop
xor
aad
mov
dec
mov
leave
mov
int
and
or
xor
mov
xor
jb
push
dec
in
scas
lds
scas
push
aad
nop
in
data16
rcl
pop
loope
(bad)
jmp
loop
(bad)
ret
in
movs
jmp
call
cmp
out
pop
je
(bad)
sti
scas
sbb
xor
fsub
leave
into
cmp
iret
test
add
pop
or
jl
mov
daa
dec
dec
iret
add
shr
sub
xor
test
rol
fbld
cmp
and
pop
cmp
mov
stos
repz
mov
aam
popf
das
test
cmp
hlt
rcl
mov
test
or
xchg
retf
jns
pusha
test
das
xchg
cmp
fcomp
jmp
sbb
in
shr
bound
fld
pusha
push
lods
bound
sub
(bad)
dec
ss
arpl
stc
pop
fistp
je
cmp
jge
pop
inc
sbb
inc
dec
dec
outs
les
and
push
aad
dec
mov
push
jle
push
fdivr
lahf
xchg
sub
jl
daa
fmul
push
sbb
std
sub
xchg
cmp
dec
ret
popa
add
(bad)
call
add
xchg
fsubr
or
cmps
or
adc
sbb
movs
cmps
mov
outs
mov
movs
cmps
xchg
inc
xchg
repz
push
inc
xchg
push
(bad)
hlt
cmp
iret
out
pop
out
jge
jmp
sahf
movs
mov
inc
sub
scas
clc
push
xor
cld
or
neg
pop
jge
in
imul
mov
ss
or
xchg
das
stos
and
fisttp
add
xor
dec
fstp
test
repz
lar
(bad)
fisttp
xchg
sub
(bad)
popa
popa
push
xor
cmp
mov
xchg
loope
or
shl
aas
dec
or
popf
out
inc
aam
mov
arpl
sub
movs
cmp
leave
mov
inc
(bad)
out
mov
les
xchg
jl
sbb
loopne
sub
mov
(bad)
cmp
stc
in
cmc
mov
mov
scas
jne
imul
push
mov
pusha
mov
push
push
add
es
repz
push
lods
aas
test
ins
stos
rcl
in
jb
inc
lahf
xlat
pop
mov
in
(bad)
cmp
je
retf
imul
(bad)
and
pushf
mov
inc
and
int3
push
lea
stos
push
es
inc
cmp
jo
push
test
jmp
jecxz
es
fwait
jge
fstp
cmp
mov
adc
cmp
xchg
cmps
sub
cmp
js
pop
rol
ins
mov
pop
aam
imul
cmp
cld
inc
call
jmp
into
mov
pop
(bad)
stc
lock
les
lahf
dec
sub
xor
pushf
jb
pop
(bad)
and
call
js
call
setg
cmp
in
xor
xor
mov
loop
test
stos
push
fsub
mov
ja
loop
clc
push
add
cmps
sub
stos
cmp
add
fsub
pop
popa
inc
cwde
arpl
lea
dec
jnp
jge
xchg
pop
add
and
rcr
xchg
sub
mov
outs
lods
pop
sub
pop
fstp
xchg
es
pop
loope
xchg
fstp
mov
ror
mov
xchg
mov
jecxz
pop
cmps
repnz
cmp
aad
mov
and
int
push
daa
mov
and
adc
mov
mov
sbb
jbe
std
cmc
call
mov
ret
std
xor
lods
stc
out
(bad)
push
inc
push
mov
cli
imul
test
jmp
xchg
push
jb
mov
stos
popa
cdq
jae
jnp
push
test
inc
cmp
fsubr
sub
retf
sub
xchg
and
mov
sub
sub
add
mov
mov
test
mov
sbb
mov
int
or
scas
inc
inc
out
and
cmps
sbb
and
adc
out
out
(bad)
stos
sub
hlt
sar
iret
jae
cmc
mov
push
pop
adc
mov
fcmovbe
mov
or
push
dec
xchg
mov
out
fstp
sub
xchg
xchg
fisttp
repnz
push
mov
jbe
mov
mov
pop
ret
fistp
and
js
xchg
or
fnstcw
pop
loop
(bad)
pop
xchg
outs
movs
shr
xchg
adc
jp
cmp
iret
add
xchg
les
mov
mov
pop
xor
mov
xor
jle
or
nop
mov
push
(bad)
out
cmp
jbe
js
loopne
clc
xor
add
in
call
jmp
popf
cmps
pcmpgtw
in
xor
sub
(bad)
mov
or
xor
xor
les
add
rol
xor
jmp
push
daa
jae
rol
int3
and
arpl
push
sbb
ds
sbb
cwde
and
push
lea
lds
shr
lea
push
iret
int3
inc
and
jg
ss
or
jmp
out
dec
pop
push
or
pop
jnp
fdivp
fistp
mov
jae
push
fldcw
sar
sar
ret
call
pop
xchg
xchg
and
out
aaa
leave
fs
jbe
add
out
aad
add
ret
lds
cmc
sbb
popf
mov
je
lods
sbb
pusha
fchs
pop
data16
or
lds
push
sahf
icebp
push
nop
movs
lds
shl
cmp
test
cmp
ins
and
clc
jl
neg
sub
sub
mov
xchg
xchg
sbb
inc
daa
pop
retf
pop
xor
retf
ins
pop
add
mov
je
and
fstp
mov
ds
add
(bad)
out
sar
imul
sub
or
mov
push
add
popf
dec
rol
fwait
cmp
inc
dec
(bad)
mov
dec
and
scas
push
sbb
sbb
add
jae
(bad)
outs
xor
cmps
jb
aam
fld
out
xchg
mov
(bad)
jno
push
int3
sahf
(bad)
test
clc
(bad)
sar
loopne
inc
adc
fcomi
rcr
test
test
pop
(bad)
mov
leave
test
out
cmp
outs
jecxz
imul
lods
sub
mov
ss
or
add
sbb
cwde
ret
xchg
pop
mov
dec
int3
retf
in
mov
jae
xor
mov
jnp
dec
xor
retf
jo
rcl
retf
nop
test
cs
mov
inc
rcl
lods
jo
in
retf
scas
mov
cmc
or
jno
mov
call
inc
jg
jmp
xor
jnp
and
dec
fsubr
push
and
jmp
jae
add
addr16
nop
xlat
dec
mov
pop
(bad)
cmp
cwde
mov
fsub
sub
sbb
mov
fimul
cmp
mov
ficom
cli
pop
stos
cmp
retf
pop
icebp
test
or
outs
jns
pop
sbb
ins
ss
test
pop
inc
mov
jge
and
jg
xor
jmp
xchg
mov
cmp
sub
stc
loopne
push
repz
retf
imul
pop
dec
stos
push
xchg
mov
push
sbb
sub
into
sahf
mov
push
fcom
cld
inc
pop
jbe
jnp
shl
sub
in
add
inc
xchg
pop
sub
rcl
xchg
div
pusha
fdivr
jge
js
pop
shl
sbb
aad
mov
pop
xor
loopne
pop
mov
aad
push
mov
push
shld
mov
jno
mov
or
test
ja
inc
fs
xchg
fdiv
enter
scas
test
mov
push
(bad)
and
jg
sahf
xchg
sub
jmp
(bad)
mov
nop
out
out
(bad)
xor
fadd
es
push
test
sub
idiv
int
sar
stos
bsr
test
movs
push
stos
mov
ror
add
jne
pop
mov
or
or
fs
mov
xchg
xchg
ret
adc
pop
in
adc
add
shl
mov
movs
xor
aaa
js
dec
cdq
and
ret
xchg
pop
cld
cmp
rcr
jmp
mov
sbb
xor
xor
inc
mov
cdq
ss
data16
jnp
out
aam
jmp
jo
das
mov
out
popf
inc
mov
fcomp
and
or
push
pop
mov
ss
jmp
dec
push
cld
les
dec
aaa
ficomp
lahf
pop
or
je
inc
mov
xchg
pop
aam
pop
push
inc
ja
cmp
cmc
jo
mov
pop
pop
inc
into
je
mov
jecxz
daa
aas
std
ins
mov
mov
lock
pop
rol
mov
mov
lea
aad
xor
push
pop
test
pop
xor
les
xchg
and
mov
movlhps
jle
ins
rcr
cmp
push
gs
add
xchg
addr16
cmpxchg
xchg
(bad)
js
aaa
(bad)
enter
lods
repnz
jge
push
in
mov
dec
mov
and
in
ins
adc
mov
inc
add
jne
xchg
call
xchg
cld
icebp
mov
mov
fst
xor
aad
bound
jb
outs
mov
fisubr
xor
mov
in
aaa
arpl
stc
sbb
push
xor
xchg
mov
cld
xor
fcomp
mov
adc
xchg
xor
imul
cli
(bad)
icebp
in
js
cmps
inc
cld
stos
ds
xchg
mov
xor
jp
dec
and
outs
ins
shl
or
inc
test
lahf
neg
aaa
sbb
div
or
mov
inc
inc
(bad)
cli
mov
mov
push
xor
in
enter
xchg
xchg
adc
xor
rcl
test
jmp
add
add
sub
enter
mov
ret
jle
int3
push
jns
stos
or
jg
pop
sub
leave
ds
lock
cs
sbb
fcom
fidiv
mov
test
popf
arpl
out
aam
mov
int
xchg
ins
mov
xchg
sub
pop
out
fdiv
cmp
pop
aaa
popf
js
popf
gs
and
lock
lock
mov
add
jae
mov
push
xor
rcl
fdiv
mov
les
mov
xor
push
cwde
push
les
jg
lea
dec
les
and
cmps
jb
ja
sub
test
out
xor
cmc
ins
or
in
out
adc
inc
mov
xchg
jmp
stos
lods
adc
das
sbb
mov
cdq
lahf
mov
mov
cmp
fabs
cmp
sbb
test
addr16
shr
xchg
mov
jmp
mov
xchg
push
xor
or
push
cmp
(bad)
mov
mov
mov
xchg
sub
and
sbb
cmps
xchg
pop
xor
outs
call
imul
adc
aaa
push
mov
loopne
(bad)
retf
inc
outs
pop
(bad)
daa
push
(bad)
mov
loop
cmp
pop
adc
stos
out
xchg
scas
jle
mov
je
test
mov
icebp
call
mov
shl
push
xchg
mov
cmps
mov
(bad)
aam
movs
test
mov
sbb
jno
gs
sub
dec
imul
dec
add
jmp
lods
int
(bad)
popf
sahf
loopne
sub
std
xchg
rol
mov
and
dec
xchg
stos
add
sub
mov
mov
add
cmp
pop
mov
in
pop
clc
mov
push
adc
les
scas
dec
repz
pushf
add
mov
mov
and
ds
out
dec
push
or
adc
push
cld
test
cmp
mov
aaa
shl
int3
dec
les
repnz
cld
mov
inc
jb
mov
aad
ins
or
out
push
or
gs
and
mov
aam
xchg
push
mov
jne
mov
cmp
mov
cmp
stos
lods
adc
into
jmp
sub
xor
adc
jle
cmp
cmp
test
call
mov
iret
jo
dec
inc
ins
lods
out
add
push
mov
push
push
lea
(bad)
pop
fisttp
push
sar
and
or
pop
ss
scas
lods
inc
mov
and
sub
mov
les
jmp
sub
gs
retf
inc
bswap
jmp
dec
call
imul
std
fild
pop
cld
stos
lea
mov
mov
paddw
ds
push
nop
stos
imul
push
mov
add
aas
xchg
and
stos
push
gs
ins
data16
and
jae
cwde
retf
pusha
add
jge
sbb
mov
fisubr
(bad)
cli
or
jg
add
mov
push
scas
stos
xchg
pop
adc
adc
mov
scas
test
or
mov
sub
into
shl
loopne
inc
jp
push
clc
jmp
mov
test
(bad)
out
adc
mov
outs
out
lods
cld
je
cs
cwde
retf
fdiv
jmp
fadd
push
inc
enter
xlat
jb
mov
je
loope
push
mov
imul
adc
lock
outs
cmps
mov
mov
cmp
aam
fcom
aam
push
sbb
jno
cmps
mov
cmp
jns
add
int
sbb
sbb
xchg
dec
ins
jae
pop
in
push
(bad)
out
inc
mov
repnz
bound
sbb
fistp
fiadd
pop
push
call
arpl
push
mov
jge
(bad)
sub
pop
mov
out
scas
mov
sbb
mov
ins
inc
mov
sbb
add
fld
fisubr
shr
push
xor
dec
cmps
mov
ds
push
outs
mov
push
mov
in
(bad)
loope
(bad)
shr
fild
cmp
push
xchg
mov
mov
cmc
push
xchg
inc
ret
ror
cmp
ins
add
ficom
pop
ja
sub
outs
jmp
cmp
dec
aam
ret
fisttp
popf
lock
cwde
ds
jl
mov
test
loopne
in
sbb
ficomp
cmps
or
lods
aaa
in
jo
rcr
adc
jp
(bad)
mov
and
lods
pushf
movs
mov
cdq
movs
cwde
(bad)
imul
out
ins
sidtd
cmp
gs
sub
and
push
sbb
movs
xor
sbb
test
mov
dec
into
popa
pop
out
or
pushf
mul
inc
repnz
xchg
push
mov
jmp
dec
jne
icebp
push
cmp
es
int
pop
daa
leave
add
adc
add
and
mov
sub
std
lods
mov
data16
mov
aas
leave
ins
bound
cmp
ss
or
push
daa
and
bound
outs
ror
dec
jne
mov
push
pusha
adc
mov
cmp
fiadd
jo
add
jge
or
xchg
jo
or
fnstenv
mov
movs
cmp
mov
jle
or
dec
aaa
or
les
cmp
add
inc
fldenv
lea
aas
popa
int
mov
sbb
scas
mov
nop
cmc
cmp
pop
and
jmp
jns
(bad)
cli
cmp
pop
loopne
daa
mov
xor
pop
and
xchg
dec
push
cmp
sbb
jmp
ja
stos
pop
retf
cli
dec
retf
fwait
dec
jmp
xor
sub
xchg
jo
add
jecxz
sub
push
pushf
fadd
pushf
push
push
mov
sub
es
adc
sar
adc
(bad)
mov
into
lods
outs
(bad)
pop
fidivr
fwait
adc
push
bound
dec
inc
mov
add
movs
jle
sbb
pop
ds
int
or
fistp
ss
adc
out
sub
jmp
(bad)
pop
sar
add
in
lock
fwait
push
jo
out
mov
div
dec
retf
call
push
and
adc
test
cmp
call
dec
ror
in
fdivrp
xchg
icebp
out
jl
mov
or
or
jle
pop
cmc
xor
xor
jl
sub
jbe
sar
shl
lods
(bad)
test
pop
test
xor
ror
add
fnstenv
fmul
dec
mov
dec
popf
fbstp
ins
jno
xchg
xchg
clc
push
in
(bad)
loop
cli
outs
add
mov
mov
aad
out
test
pusha
dec
xchg
or
and
xchg
mov
out
mov
xchg
and
pop
test
adc
xor
into
aaa
mov
ror
mov
inc
jb
std
xor
jnp
lods
adc
cmp
inc
daa
add
aaa
ins
pop
or
cmc
in
pop
pop
push
inc
movs
bound
cmps
inc
adc
sub
adc
outs
push
push
int3
mov
mov
jnp
daa
test
aam
inc
push
jmp
or
fsub
xor
fdiv
mov
inc
xchg
(bad)
mov
push
shr
movs
neg
sbb
sub
aaa
test
(bad)
out
mov
lds
aad
shl
int3
xlat
out
xchg
rcr
imul
fcmovnb
xor
mov
jle
jno
add
mov
ret
sub
and
mov
jb
jle
shl
and
xchg
nop
sub
jg
and
xchg
xchg
pushf
mov
mov
sbb
pop
les
outs
cmp
sbb
pop
mov
jnp
imul
jecxz
pop
daa
shl
loop
cmp
push
sub
arpl
push
push
pop
mov
ficomp
cmps
test
loope
cdq
fst
xchg
push
rcr
xchg
ins
ror
adc
stos
or
xor
repnz
sbb
jae
add
ret
or
les
cmp
mov
leave
test
push
shl
pop
sbb
xchg
add
cmp
in
imul
les
jmp
xor
dec
push
jle
jmp
stos
sbb
call
xchg
stc
movs
push
mov
sbb
dec
dec
adc
jbe
fucomp
sti
and
fucom
stc
lea
lods
hlt
pop
jl
pop
and
loop
outs
sub
or
shl
test
(bad)
fmul
aam
xchg
arpl
gs
sub
jne
in
or
movs
fsubp
sub
xor
dec
mov
pop
ins
(bad)
push
les
pop
hlt
out
imul
jae
mov
mov
cmc
cmp
dec
in
mov
sahf
push
dec
dec
rcl
inc
aaa
cld
pop
fld
push
adc
mov
out
pop
mov
mov
popa
int
je
push
jo
sub
xor
mov
daa
inc
out
push
std
fsub
cmps
outs
push
mov
outs
jge
and
ins
fst
and
ror
cs
clc
mov
jl
jl
adc
inc
jmp
jbe
into
popf
adc
jbe
mov
mov
pop
xor
in
fcomip
clc
arpl
out
aad
and
ret
fsubr
mov
pop
or
push
popf
nop
leave
xor
fisttp
jne
(bad)
retf
mov
cwde
adc
cli
call
imul
bound
pop
add
jecxz
jmp
and
cmp
mov
jo
fadd
pop
xchg
ds
jae
lds
mov
lds
xchg
aam
or
pushf
sub
cmovb
inc
cld
sbb
push
test
ror
push
mov
mov
sti
push
add
pop
ret
out
xchg
icebp
xchg
rep
aas
mov
push
mov
test
repz
inc
call
ins
popa
shl
iret
repnz
jl
imul
add
hlt
mov
add
add
mov
dec
call
stos
(bad)
pop
xchg
in
mov
int
in
sub
pop
daa
fstp
scas
aam
ss
mov
xchg
xor
jae
adc
int3
push
dec
dec
data16
cmp
outs
pop
push
sub
and
scas
movs
sub
bound
xchg
repz
and
scas
pop
and
xchg
cli
mov
dec
and
sbb
push
arpl
adc
ret
dec
(bad)
hlt
adc
(bad)
hlt
sbb
dec
call
jle
imul
dec
cmp
pop
push
popa
push
inc
jne
test
ret
sub
add
adc
je
scas
dec
imul
xlat
lahf
js
sbb
pop
inc
mov
cmps
push
cli
rcr
les
sahf
jmp
imul
call
ror
xor
imul
ins
dec
adc
fisttp
fldcw
fucomi
into
and
sti
and
and
mov
jmp
or
push
jno
push
mov
cs
ret
mov
es
dec
pop
dec
sub
and
clc
imul
jge
iret
out
cmc
cmps
fwait
or
inc
push
push
fld
jmp
fucom
aad
push
mov
shl
es
inc
or
and
cpuid
in
push
stc
in
xor
stos
and
xchg
call
ja
mov
push
add
out
pusha
mov
xor
mov
lahf
fdivr
cdq
sub
xor
(bad)
iret
icebp
xor
sbb
sub
popa
push
dec
lea
cmps
push
imul
vshufpd
inc
xor
jae
enter
mov
fnstenv
push
pop
int
or
cmp
fldenv
dec
mov
mov
inc
out
cmp
popf
push
int3
push
enter
gs
dec
and
cmp
mov
test
imul
inc
(bad)
ror
push
pop
mov
push
das
and
mov
inc
sub
mov
sub
fwait
adc
fcom
stos
loopne
sahf
dec
xor
inc
dec
daa
cmc
sahf
fdiv
movs
repnz
push
mov
push
aad
shl
cmp
add
lds
cmp
int3
addr16
fadd
mov
data16
jno
test
dec
das
lahf
mov
call
add
fistp
inc
repnz
inc
cwde
jae
push
imul
js
jns
loope
dec
cs
push
lahf
pop
or
cdq
outs
fsubr
fnsave
int
mov
add
xlat
call
retf
pop
mov
lea
es
mov
adc
gs
adc
mov
pop
push
in
sub
sbb
fnstenv
push
pop
mov
pop
dec
xor
cmp
fprem1
ins
movs
xchg
loope
fistp
sub
xchg
enter
outs
cmc
push
in
mov
lock
push
or
retf
outs
(bad)
fst
push
push
cld
lods
call
jnp
or
jne
test
push
xchg
cmp
std
mov
rcl
in
jp
repnz
mov
dec
pushf
js
mov
(bad)
repnz
call
cmp
push
xor
das
add
loopne
rcr
in
add
jb
in
jmp
mov
outs
mov
popa
in
sub
into
clc
jb
adc
gs
data16
(bad)
pop
mov
mov
push
xchg
sbb
pop
or
popf
xor
jge
inc
daa
and
call
xor
push
xchg
nop
jne
and
addr16
test
xlat
mov
test
call
fidiv
dec
hlt
add
hlt
xlat
jmp
mov
fwait
cmp
fwait
and
cld
sub
repnz
xlat
cmp
add
mov
(bad)
xchg
test
shr
cmp
in
or
jbe
inc
xor
add
fsubr
inc
int3
jnp
add
push
movs
es
dec
xchg
lods
pop
icebp
out
gs
int3
bnd
add
mov
call
(bad)
inc
rcl
out
mov
inc
cld
jg
adc
loope
fst
mov
sub
out
fst
in
sbb
or
sysenter
(bad)
iret
jmp
cmps
or
(bad)
loope
mov
xchg
mov
cmc
imul
xchg
sbb
rol
jge
push
arpl
enter
nop
(bad)
(bad)
sub
xor
dec
(bad)
pop
das
add
mov
mov
(bad)
repnz
sbb
xchg
in
fwait
movs
mov
sub
scas
pop
add
loope
stos
sub
loopne
cmp
mov
(bad)
push
adc
jecxz
mov
mov
test
dec
retf
push
xor
outs
or
gs
sbb
pusha
sub
loope
jbe
test
addr16
jns
pop
ja
retf
adc
sahf
and
call
sbb
jae
inc
loope
push
stos
mov
inc
push
mov
xchg
jbe
xchg
push
dec
mov
add
and
push
sub
pop
test
mov
cs
and
les
hlt
push
ret
scas
stos
cmps
shl
inc
popa
cdq
xchg
cmps
ins
mov
mov
or
cmp
scas
dec
dec
(bad)
jmp
mov
(bad)
pusha
leave
mov
rcl
scas
or
push
fdiv
mov
mov
stos
pop
ret
jecxz
arpl
or
add
pop
in
mov
sub
push
sbb
push
cld
jbe
cmp
dec
push
push
mov
daa
pop
cli
push
in
shl
ror
shr
inc
fisubr
mov
aad
mov
xor
adc
hlt
mov
imul
mov
cmp
fcmovb
cmp
mov
and
add
pop
xlat
jbe
sub
test
leave
es
jae
dec
jbe
jecxz
addr16
xor
cmps
adc
nop
push
int
jle
pushf
and
mov
inc
mov
fisubr
push
xor
cmp
ja
inc
jmp
add
inc
cld
fdivr
out
pop
gs
mov
sbb
mov
inc
movs
fld
sub
mov
das
out
rol
sahf
sub
pop
adc
jecxz
lahf
jl
aas
sub
lea
repz
bound
mov
mov
adc
or
xchg
inc
out
aaa
dec
fs
xchg
add
xlat
or
loopne
jp
sahf
scas
int3
fdivr
pop
inc
xchg
cmp
mov
popf
adc
push
mov
pop
lea
cmp
mov
pushw
and
in
push
or
or
test
cmp
stos
outs
jg
movs
mov
loop
in
cmp
jb
dec
jl
cmps
in
sub
inc
jecxz
cs
dec
sti
cmp
pop
mov
pop
cmp
pop
mov
call
jne
push
pop
ret
push
cmps
mov
inc
lahf
mov
sub
xchg
iret
mov
sbb
or
sahf
mov
mov
(bad)
neg
test
es
xchg
jne
pop
push
xchg
nop
pop
out
les
idiv
dec
push
call
fsubrp
xlat
addr16
adc
fnsave
jmp
scas
mov
sub
aam
pop
or
cmp
cmps
std
aaa
(bad)
mov
rol
jb
inc
sub
push
jl
push
mov
jo
cmp
loope
in
std
mov
std
movs
sbb
xor
rcr
sub
cmp
leave
mov
lahf
push
mov
mov
or
mov
in
lahf
pop
mov
pop
pop
stc
imul
cmp
push
into
cdq
jnp
sub
pop
lock
arpl
inc
mov
sbb
mov
pop
nop
ret
sbb
cmps
pushf
loopne
inc
das
js
fist
ret
mov
ret
inc
dec
add
out
ss
or
arpl
cmp
or
fcom
sub
cmp
call
out
jle
add
mov
(bad)
mov
es
add
icebp
cmp
aad
and
push
and
or
push
cwde
add
xor
loopne
push
fidivr
xlat
shl
and
lock
out
adc
retf
fimul
pop
iret
retf
mov
(bad)
imul
xor
inc
sbb
sub
ror
idiv
gs
sbb
aad
dec
(bad)
jle
push
(bad)
lods
and
(bad)
ror
das
xlat
test
mov
jge
or
imul
and
int3
je
test
xor
dec
leave
add
mov
rol
es
mov
jge
sbb
test
out
sub
mov
adc
mov
jl
addr16
adc
idiv
lea
fcmovnu
jg
(bad)
pop
popf
fcomp
inc
mov
push
inc
addr16
ins
out
(bad)
iret
dec
or
sahf
repnz
into
shl
mov
mov
repnz
aam
out
inc
add
xor
mov
je
lds
sbb
rcl
std
out
sub
ss
dec
loopne
and
jmp
dec
dec
lea
sbb
in
shl
add
pop
aad
mov
sbb
cmp
sbb
push
and
jnp
sbb
adc
mov
push
cmp
sub
cdq
xor
mov
loopne
xor
dec
pusha
test
or
gs
rcl
outs
mov
(bad)
out
dec
push
sbb
aas
mov
jp
(bad)
test
push
fwait
inc
and
push
pushf
push
cmc
push
inc
lds
sbb
xchg
nop
outs
sbb
dec
inc
hlt
push
sub
jle
enter
aaa
inc
inc
icebp
fs
loopne
scas
adc
pop
add
rcr
pushf
ds
cmp
daa
xor
adc
or
(bad)
retf
stos
dec
sub
mov
xchg
aam
out
mov
mov
rcl
int3
xor
sar
shr
jl
mov
dec
imul
loopne
jp
fistp
or
retf
push
dec
sahf
push
xchg
sar
es
mov
push
push
jecxz
push
icebp
pop
jmp
js
and
gs
xchg
out
xor
addr16
(bad)
mov
out
repnz
mov
cs
jno
rcl
in
sbb
into
cmc
adc
jno
out
(bad)
std
mov
mov
pop
dec
dec
jo
sub
(bad)
cs
pop
in
inc
shr
or
mov
push
fwait
sub
inc
addr16
jmp
xor
loop
push
int
dec
adc
dec
mov
dec
add
test
mov
call
inc
pop
add
(bad)
out
add
outs
or
jb
sub
mov
retf
test
jno
adc
fcom
xchg
mov
xor
mov
push
movsx
cmc
jmp
jno
icebp
add
mov
or
jne
ins
or
cmps
bound
cmp
push
inc
inc
jl
adc
into
mov
mov
fs
mov
rcl
fsub
xlat
(bad)
xor
cli
jmp
mov
sbb
mov
inc
clc
movs
ret
cmp
dec
ret
inc
cmp
dec
dec
addr16
mov
sub
jae
fist
stos
cmp
stos
jb
mov
repz
cmp
iret
pop
or
push
jl
push
shr
(bad)
xor
das
add
out
aaa
xlat
add
dec
mov
(bad)
scas
dec
mov
das
ins
(bad)
call
dec
push
ret
sbb
mov
mov
mov
not
imul
das
in
add
inc
lea
xor
in
and
inc
xchg
aas
std
pop
imul
push
sub
fsub
adc
sub
test
hlt
push
in
mov
sbb
mov
sub
fwait
retf
mov
fiadd
aaa
adc
dec
leave
repz
xor
cmp
(bad)
leave
fnstcw
push
not
jmp
sbb
push
imul
lods
aad
cs
mov
xchg
jo
xor
ss
adc
movs
mov
icebp
xor
xchg
test
stc
mov
mov
add
cmp
xor
leave
(bad)
mov
pop
xor
loop
into
sub
inc
lods
test
push
outs
icebp
xor
xlat
scas
and
pop
dec
pusha
jnp
mov
outs
xor
cmps
dec
mov
pop
bound
jmp
call
ins
test
push
xchg
dec
xor
dec
xchg
xor
mov
and
inc
push
mov
scas
pop
sub
mov
loopne
jmp
repz
mov
fild
inc
sub
or
movs
mov
fdivp
(bad)
xchg
sub
pusha
pop
or
pop
lock
fstp
dec
xor
adc
fdecstp
mov
std
out
sub
xchg
sbb
inc
adc
push
fld
std
inc
es
out
xor
fistp
div
cmp
test
or
xor
sti
mul
(bad)
call
xor
ret
xchg
and
sbb
dec
pop
pop
arpl
jp
or
mov
cwde
mov
(bad)
or
push
adc
out
lods
cmps
xor
pop
fadd
out
mov
sar
test
mov
into
retf
loop
dec
pop
push
lods
in
jp
jae
cmps
dec
mov
scas
push
pop
xor
repz
push
sbb
mov
or
popa
outs
int
jmp
fcmovnb
sbb
loope
dec
xlat
imul
and
adc
lock
dec
sahf
jne
push
push
pop
xor
(bad)
fwait
add
adc
into
jae
in
pop
jnp
xor
sbb
or
mov
int
std
and
mov
fmul
mov
xor
xchg
lahf
aad
cwde
sbb
ins
je
add
sbb
mov
hlt
or
mov
xchg
add
nop
stos
inc
cmc
push
div
jnp
or
sbb
adc
lds
add
or
sub
jmp
test
jecxz
out
cdq
inc
fisttp
or
nop
out
out
mov
jge
cli
call
std
jg
sbb
xor
jg
mov
inc
pop
xchg
push
nop
fs
daa
retf
adc
sub
fisub
pushf
(bad)
sbb
sbb
push
(bad)
fisubr
add
ds
movs
shl
cmp
movs
rcr
adc
adc
ds
adc
dec
scas
mov
mov
jp
stos
pusha
call
or
push
inc
inc
mov
jae
movs
xor
xchg
enter
leave
xor
push
cwde
(bad)
ja
addr16
sbb
adc
and
bound
dec
lahf
lods
push
outs
mov
pusha
sbb
out
sub
dec
xor
dec
cmps
imul
aam
mov
push
adc
jns
add
xor
mov
inc
call
jns
outs
add
je
es
je
ror
std
neg
push
mov
mov
fcomp
mov
xor
jecxz
add
jne
out
stos
fidiv
in
loope
cmps
mov
mov
add
cwde
pop
push
cmp
cmp
jns
push
lock
pop
sub
dec
(bad)
fistp
pop
iret
add
lds
data16
mov
jo
mov
rcl
mov
ins
inc
dec
repnz
shl
xor
mov
push
sbb
push
xchg
inc
loopne
or
mov
sbb
(bad)
fldcw
and
xor
add
and
jge
jmp
sub
sbb
mov
sti
mov
xchg
xor
or
sub
int3
inc
loopne
pop
test
mov
fist
inc
in
repz
sub
fcomip
inc
mov
call
adc
addr16
popf
fnstenv
ja
ins
lods
mov
lods
in
(bad)
cmps
inc
test
sbb
lea
mov
arpl
push
mov
retf
cld
pop
loope
jmp
dec
je
add
frstor
dec
pop
int
pop
lea
arpl
cmps
xor
addr16
mov
jl
mov
sbb
or
jns
mov
arpl
sbb
cdq
jne
jge
fwait
div
imul
retf
mov
dec
ret
xlat
sbb
jl
(bad)
and
gs
jle
ret
in
and
xor
push
jo
pop
adc
jl
sub
adc
cld
out
xor
mov
or
mov
mov
xor
cmp
pop
sbb
or
repnz
and
mov
ja
(bad)
mov
(bad)
jmp
fistp
mov
and
jmp
(bad)
je
or
scas
or
cmc
or
adc
jns
cmc
jne
lahf
push
int
cmp
cwde
inc
pop
call
pusha
dec
adc
mov
enter
js
or
xor
sahf
cmp
and
jg
xchg
inc
mov
mov
ror
imul
jb
jne
lods
ret
enter
out
mov
in
cmps
ds
loope
adc
xchg
icebp
test
sbb
jo
xchg
inc
xor
xchg
xor
mov
imul
call
movs
or
and
dec
mov
jnp
jmp
outs
faddp
and
stc
ins
clc
into
or
xlat
out
sub
inc
mov
gs
loopne
fcom
and
sbb
and
adc
dec
xchg
mov
imul
out
es
stc
jp
repz
pop
mov
out
jns
fld
mov
jmp
cmps
dec
shl
ret
jae
mov
call
mov
fisub
cmps
into
test
cmp
jecxz
sbb
add
sti
mov
mov
add
dec
outs
xor
push
mov
add
imul
xchg
repnz
push
mov
movs
push
bound
sahf
imul
ins
sahf
cmp
cmp
hlt
lods
mov
dec
cwde
outs
cdq
mov
sbb
dec
mov
aas
mov
(bad)
pop
jno
mov
ss
xchg
icebp
pop
lds
and
pop
fwait
mov
daa
dec
int
jp
mov
fadd
les
ret
push
sti
lds
sub
lahf
cmp
pop
(bad)
and
jg
mov
fs
and
mov
mov
mov
in
int3
mov
retf
fist
or
push
mov
cmps
out
pop
mov
je
cli
outs
enter
stos
jne
xchg
adc
gs
(bad)
xchg
popf
mov
dec
rcl
pop
in
cmps
mov
and
pushf
aaa
cs
addr16
push
pop
call
bound
push
xor
mov
lods
stos
fist
fisubr
push
out
loopne
push
repnz
fisttp
sbb
sub
fwait
push
mov
push
lahf
push
push
not
adc
push
xchg
cmp
pop
inc
mov
aas
sub
sbb
jecxz
push
jo
stc
leave
push
aaa
sub
pop
sbb
jbe
push
sbb
sbb
sbb
push
loope
shr
or
test
cmc
mov
pop
xor
inc
fisubr
push
mov
rcr
lods
pop
xchg
xchg
hlt
jg
mov
push
lods
push
jp
adc
and
xor
es
push
jge
div
pushf
ins
cmp
add
cmp
retf
jmp
xchg
cmps
sbb
mov
imul
push
xchg
retf
in
xchg
or
hlt
ss
out
jmp
and
loopne
sbb
sub
jg
inc
jg
adc
push
cs
loope
lea
div
inc
xchg
sbb
mov
pusha
sub
mov
jbe
scas
gs
adc
lahf
pop
and
push
(bad)
nop
mov
cld
lods
add
push
or
(bad)
(bad)
jmp
inc
sub
inc
jmp
add
or
sbb
adc
mov
loop
xchg
inc
clc
push
fdivr
push
jge
cmp
or
cmp
test
(bad)
aam
xor
ins
mov
sbb
pop
push
and
add
push
push
pop
movs
or
shr
add
jno
dec
push
xor
push
xchg
adc
xor
mov
jne
push
cmp
clc
cli
clc
or
into
(bad)
sti
jns
xor
sub
data16
or
push
fdivr
mov
or
jg
inc
push
cmp
fcmovnb
gs
and
out
(bad)
imul
rdtsc
and
jmp
into
mov
adc
push
es
xchg
mov
jmp
iret
sub
leave
add
mov
pushf
in
jle
pop
xor
add
lods
adc
push
jp
ror
and
lods
xor
adc
aad
and
jecxz
les
jmp
jne
or
push
sub
xor
jbe
push
mov
jmp
mov
aas
ret
les
(bad)
addr16
cmp
xchg
loop
xchg
add
aam
or
bound
pop
jmp
loopne
nop
jb
int
scas
dec
inc
sub
outs
faddp
daa
inc
(bad)
ins
sbb
ficomp
pop
call
and
retf
fsubr
loopne
jo
fwait
inc
call
push
(bad)
nop
shr
inc
jne
jp
adc
jno
repz
in
bound
dec
cwde
mov
push
out
sbb
push
pop
sbb
adc
mov
add
fadd
iret
cmps
mov
movs
pop
mov
xor
mov
pop
or
xor
cmc
push
retf
or
iret
fsub
repz
std
dec
cmp
jge
aas
ss
stc
rcr
cmp
in
mov
dec
xor
clc
dec
loopne
movs
into
jbe
test
icebp
xchg
pop
pop
addr16
or
pop
push
stc
(bad)
mov
fs
in
ins
icebp
les
xchg
mov
cmp
cmp
call
add
add
setge
das
retf
test
neg
(bad)
retf
daa
mov
push
outs
and
cmps
pop
push
pusha
add
lods
adc
mov
jp
adc
inc
jecxz
rol
fcomp
mov
inc
push
push
xchg
add
stos
mov
fwait
mov
xchg
adc
and
sahf
sbb
sbb
and
inc
dec
or
lods
cdq
push
les
ret
sbb
sbb
xor
adc
mov
add
inc
mov
pop
push
adc
jmp
adc
mov
neg
jle
and
xchg
and
bound
cli
bound
sbb
ret
test
adc
sbb
adc
repnz
adc
mov
pcmpeqb
mov
adc
enter
sbb
(bad)
mov
fstp
mov
push
dec
dec
jge
xlat
or
imul
fmul
cld
xchg
and
or
sub
xchg
stc
lock
icebp
ins
inc
lods
and
loope
inc
lock
aam
cli
fcom
sub
push
cmp
add
retf
clc
mov
mov
adc
sbb
dec
int3
jge
std
cmp
sub
adc
mov
sbb
and
ror
push
sbb
cmps
adc
and
push
add
scas
imul
jb
xor
push
popa
inc
inc
jl
cld
mov
daa
push
outs
jbe
sbb
jmp
out
repnz
lock
xor
inc
int3
add
dec
dec
push
pusha
add
sub
fild
dec
inc
test
test
and
mov
lock
fdivr
push
xchg
(bad)
jne
nop
mov
jecxz
neg
dec
push
mov
jne
shl
jle
xor
xor
sub
daa
push
inc
xchg
fwait
xor
mov
and
stos
dec
xchg
push
xchg
sbb
inc
dec
stc
jne
ja
inc
movs
mov
outs
or
mov
sub
sbb
gs
push
fstp
xlat
enter
add
pop
les
mov
fs
xchg
ret
out
xchg
adc
(bad)
xchg
(bad)
lods
push
loop
fidivr
inc
mov
add
bnd
push
mov
movs
loop
and
loopne
je
and
aad
pop
inc
mov
xor
mul
and
ds
(bad)
in
sub
push
popf
(bad)
mov
repz
jmp
mov
push
or
sbb
fisttp
fld
into
cwde
lahf
cmp
fcmovb
or
neg
fwait
rcl
jo
pop
or
cs
xchg
or
lahf
dec
inc
out
fcmovne
mov
out
dec
movs
and
fisubr
xchg
pushf
fbstp
jae
inc
push
(bad)
(bad)
inc
pop
call
ins
movs
sbb
jp
(bad)
cmps
pusha
inc
fisttp
iret
addr16
xor
stos
xor
jmp
jo
jge
sub
(bad)
lds
cmps
aaa
sub
pop
add
jno
adc
inc
xor
shl
inc
mul
leave
and
pusha
add
in
or
jbe
pop
adc
and
cmps
pop
fcomp
neg
sbb
cs
pop
in
mov
iret
mov
pop
dec
fldcw
or
add
adc
jns
fmul
xchg
outs
mov
ja
cmp
jne
add
lods
test
jae
jp
pop
xor
movs
scas
fadd
jo
pop
sbb
rcr
fs
stc
out
ss
cmp
int
cmps
xchg
sub
scas
push
or
dec
xchg
push
rcl
jb
mov
sub
cmp
and
scas
add
push
je
cmp
inc
push
(bad)
mov
cmp
push
ins
jmp
dec
pop
dec
lods
inc
loope
bound
or
fld
push
jp
out
sti
pusha
add
xchg
out
add
leave
inc
in
adc
std
mov
out
shr
fbld
test
xchg
sbb
mov
xor
enter
(bad)
sbb
mov
and
mov
mov
data16
push
sub
pop
or
jmp
mov
mov
mov
retf
dec
arpl
inc
(bad)
pop
call
cmp
test
xor
loope
adc
out
test
rol
imul
sub
mov
push
mov
sahf
jno
jae
dec
cdq
in
mov
es
lods
push
jge
out
sub
test
or
push
xor
inc
fidivr
ja
jle
push
mov
or
cmps
pop
inc
ins
out
cmp
mov
push
mov
mov
mov
jb
mov
mov
and
xor
cs
mov
rol
pop
aaa
enter
clc
pop
fst
mov
inc
jle
or
jmp
in
scas
xlat
push
pushf
imul
or
popf
push
rol
(bad)
fist
lea
ret
jae
stos
in
or
clc
or
lahf
xor
dec
inc
add
cwde
sbb
cmp
(bad)
xlat
cmp
shl
sbb
sub
jb
inc
popa
inc
jno
sub
outs
mov
sbb
mov
or
jne
pop
or
add
push
sbb
and
xlat
inc
in
sub
mov
and
cwde
jp
sahf
pop
cdq
pop
imul
xor
ror
mov
add
out
mov
in
loop
pop
outs
xchg
mov
ja
xchg
mov
or
loop
lahf
dec
pop
in
push
enter
cmp
(bad)
stos
or
sahf
es
mov
iret
adc
add
mov
pop
movs
adc
adc
xchg
jae
sbb
mov
pop
cld
test
lock
test
push
push
xlat
sti
cli
clc
shl
sbb
cli
cld
jmp
ret
mov
dec
sar
jbe
or
(bad)
fisubr
les
xchg
jmp
add
pop
sbb
jne
pop
(bad)
scas
dec
xchg
xchg
inc
(bad)
cmp
xchg
and
rol
movs
ds
pop
jg
popf
lock
push
mov
mov
mov
push
scas
imul
cmp
push
loope
mov
test
mov
adc
loopne
cmp
pop
push
mov
mov
jnp
out
or
pop
mov
mov
jecxz
enter
jae
sub
mov
cdq
lds
pop
out
movs
or
jmp
jbe
pminsw
jns
ret
mov
xchg
pop
leave
in
push
mov
mov
out
inc
dec
xchg
imul
add
aad
sbb
dec
stos
cld
loopne
movs
add
sub
xor
xor
xor
adc
cmp
and
sti
int3
push
shl
adc
das
gs
mov
xor
std
not
jb
sub
(bad)
scas
daa
int
push
push
hlt
pop
sar
push
test
push
jmp
(bad)
icebp
js
push
add
sbb
mov
call
fcomp
in
outs
adc
mov
outs
xor
aad
sub
sbb
sub
fs
add
outs
push
retf
(bad)
lods
mov
mov
aaa
inc
xchg
ret
leave
add
adc
in
stos
or
lods
xchg
cwde
jb
imul
(bad)
dec
jb
adc
or
mov
cli
dec
fbld
xor
fist
aad
and
or
sar
inc
or
mov
test
or
int
rcl
dec
data16
xor
add
popa
mov
les
loop
cli
es
jbe
sbb
ficom
pop
in
xchg
nop
push
and
mov
dec
dec
enter
pop
dec
es
test
outs
nop
or
inc
adc
ja
push
adc
xor
push
test
je
push
adc
xchg
xchg
outs
mov
mov
push
mov
pop
lock
cmp
int3
inc
and
dec
jge
clc
jmp
gs
test
test
mov
icebp
cmp
ror
jne
fwait
sub
cmp
loopne
cmp
aam
jmp
cmp
retf
jl
inc
sbb
call
adc
fcom
ss
jge
div
pusha
mov
cwde
cmp
ja
mov
dec
call
inc
imul
mov
dec
push
loope
mov
push
test
inc
int3
inc
shr
push
jb
sub
in
mov
lock
(bad)
jge
jmp
inc
inc
and
outs
in
(bad)
fsub
stos
pop
stc
and
dec
jae
mov
sar
jmp
mov
hlt
cdq
cmp
cs
mov
cmp
xchg
xchg
hlt
mov
add
jl
jb
cmps
push
mov
imul
movs
or
add
or
mov
xor
jno
mov
jb
sub
jl
cmp
ins
and
es
test
xchg
out
xor
cmps
jo
and
fisub
xor
jmp
xchg
lea
out
cmp
mov
xchg
(bad)
push
or
xor
jle
xchg
xlat
pop
inc
enter
and
cdq
shl
jmp
bound
popa
scas
aas
test
in
add
out
dec
cmp
stc
xor
pop
adc
push
outs
sar
lock
or
call
daa
xchg
rcr
sar
push
mov
retf
(bad)
push
mov
retf
test
stos
add
mov
bound
mov
scas
mov
and
mov
cwde
cmp
pop
fs
push
clc
test
fimul
mov
test
jmp
out
jecxz
popf
push
out
sar
pusha
push
push
test
push
cmp
mov
jae
pop
push
inc
sub
or
data16
jmp
add
ret
in
cmp
adc
or
in
and
jmp
pushf
cld
sbb
inc
sub
adc
push
popa
mov
fwait
add
jae
imul
call
mov
rol
cmp
and
stc
add
add
push
es
popa
mov
and
pop
shr
sbb
(bad)
test
loop
jo
icebp
sub
scas
rcr
frstor
pop
mov
add
ret
or
adc
iret
push
xor
aad
or
dec
push
popf
mov
(bad)
pop
cmp
mov
test
adc
lock
call
mov
repnz
mov
icebp
in
jmp
mov
repz
ds
ins
lds
mov
ret
sub
or
push
lods
outs
inc
popf
repz
jno
dec
daa
mov
mov
fs
jne
xchg
or
ds
lea
jle
je
mov
addr16
mov
push
dec
xchg
imul
xrelease
sbb
xlat
mov
rcl
loopne
rcr
xor
call
(bad)
rcl
mov
mov
cmp
xor
and
retf
aaa
shr
psubq
loope
cmp
mov
inc
cwde
enter
inc
or
in
jno
cmps
pop
daa
cmp
push
inc
mov
sbb
call
sbb
fnsave
mov
mov
adc
ins
pop
lea
icebp
test
mov
adc
sub
arpl
inc
add
(bad)
pop
movnti
mov
pop
xor
mov
cmc
rol
mov
mov
lahf
outs
popa
adc
fdiv
lods
push
jne
sub
or
pop
nop
mov
(bad)
mov
lock
jnp
push
pop
dec
adc
and
sub
dec
data16
xor
imul
in
idiv
dec
inc
cmp
add
add
jo
mov
ret
dec
sysret
loopne
and
or
jne
or
jl
sub
sub
std
adc
enter
ror
or
pop
ja
ret
xchg
or
ss
jl
ffreep
int3
sbb
mov
cdq
pop
mov
jg
cmps
stc
dec
loopne
cmp
xor
inc
jmp
in
jmp
adc
xchg
sbb
xchg
es
add
mov
sub
dec
ret
repz
lea
imul
gs
add
jg
fsubr
add
jb
and
call
mov
popa
add
popa
xlat
adc
push
cmps
push
les
into
enter
jmp
cmp
push
mov
push
je
add
mov
mov
cmp
in
into
jle
sbb
cmc
cli
xor
and
and
int3
mov
and
mov
mov
stos
mov
add
and
push
adc
idiv
shr
xchg
jle
jg
pop
mov
xor
push
xchg
and
inc
addr16
xlat
retf
enter
sbb
cmps
imul
jae
mov
pop
repnz
mov
ror
mov
rcl
fild
fwait
fs
pop
pop
mov
test
enter
mov
sub
xchg
cmovne
push
ret
cmp
nop
jmp
movs
jle
inc
or
jg
ror
mov
mov
jle
pop
adc
test
retf
out
pop
loope
cli
(bad)
out
out
push
in
js
add
inc
jo
fwait
push
xor
xor
into
cmp
dec
add
jl
lea
jb
pop
xchg
cmps
xchg
mov
repnz
stc
test
xor
jb
lods
cmp
nop
sbb
sub
mov
inc
pop
dec
out
xchg
add
ins
inc
out
ins
arpl
cmps
mov
mov
sub
pop
les
mov
pushf
fst
inc
cmp
adc
push
ds
es
leave
dec
and
pop
xchg
(bad)
scas
sbb
add
sbb
and
popa
call
xor
les
mov
loop
enter
test
cmps
xor
sbb
jns
cs
mov
cmp
popf
inc
in
jp
rol
fcomp
jle
add
sar
rol
jmp
pop
ret
dec
add
mov
jp
aad
js
mov
call
outs
rcl
xor
aas
cmp
push
mov
sbb
jnp
stos
imul
adc
mov
cs
in
mov
cmp
inc
movs
ins
int3
pop
ss
mov
or
or
push
pop
fwait
bound
(bad)
out
fwait
inc
lock
and
repz
sbb
mov
popa
push
fistp
out
mov
test
jns
xchg
imul
je
or
je
call
mov
arpl
jge
ins
out
mov
lds
outs
aad
mov
add
sbb
shr
cmp
jmp
fidivr
xchg
aad
inc
pop
jno
aaa
ret
xlat
ret
push
movs
xchg
and
sub
js
mov
shr
inc
stos
dec
in
cwde
pop
pop
cs
aaa
add
mov
cmp
push
xchg
outs
mov
test
add
pop
mov
xchg
into
add
sar
icebp
test
cmp
hlt
cli
shr
adc
cdq
jbe
movs
mov
inc
sbb
fs
jbe
ret
icebp
cs
scas
movs
and
ret
mov
xor
push
je
loope
jmp
stc
clc
sbb
cmp
bound
push
and
repnz
ret
(bad)
aas
retf
scas
mov
test
adc
ins
iret
lds
movs
scas
std
adc
test
sub
in
dec
dec
ds
hlt
sbb
es
test
fs
or
cdq
loope
imul
jmp
or
lods
ss
pop
lods
jmp
and
std
cmc
outs
inc
dec
mov
sub
es
ds
xlat
or
mov
(bad)
into
(bad)
or
shr
pop
sub
or
out
inc
dec
ins
jnp
aas
ficomp
push
inc
sahf
jl
pop
cmp
push
add
jbe
outs
call
stc
out
xchg
jge
and
shl
jo
ins
jmp
mov
scas
jp
sub
dec
xor
repz
adc
pop
cmp
pop
gs
mov
rcl
inc
fld
je
retf
fisttp
pop
dec
dec
cmp
or
loope
and
dec
imul
xor
dec
stos
or
imul
pop
aas
mov
jns
jb
loopne
xchg
in
psraw
out
sbb
(bad)
jae
lock
jmp
lds
lods
mov
test
mov
add
xchg
rol
cmps
and
mov
cli
icebp
ja
and
ror
(bad)
xchg
fsubr
icebp
mov
test
push
fstp
sbb
cwde
cmp
test
jl
mov
mov
rol
mov
xchg
inc
mov
mov
xchg
push
adc
or
lods
imul
or
fidiv
adc
ret
mov
fs
jmp
ins
mov
mov
call
jp
add
das
mov
movs
pop
push
dec
or
and
and
xor
jno
push
ror
or
test
mov
mov
sbb
(bad)
sti
jns
push
in
cmp
stos
frstor
test
test
jecxz
jns
push
inc
push
stos
jo
adc
and
cmp
adc
ds
sbb
adc
scas
mov
test
push
dec
and
mov
xor
addr16
mov
(bad)
xor
cmp
push
and
mov
mov
movs
dec
movd
push
xchg
jno
int
retf
jno
fadd
mov
lods
jg
test
nop
xor
call
int
jle
mov
in
das
aaa
or
pop
bound
cmp
xchg
xchg
mov
xor
out
test
cmp
cmp
shl
mov
mov
test
or
pop
fst
mov
xchg
pop
inc
loop
push
cmovs
ins
xor
sub
inc
int3
inc
fistp
ficom
in
es
jmp
push
daa
imul
call
loopne
and
pusha
gs
pop
sbb
inc
pop
mov
adc
scas
stos
inc
loop
add
in
pop
test
lods
add
daa
inc
iret
push
outs
xor
xor
mov
add
cmp
ror
adc
test
push
mov
out
fldcw
pop
or
jne
add
ret
adc
jp
xor
sbb
pop
and
and
pop
mov
sub
loopne
xor
(bad)
xchg
in
ins
das
xor
retf
mov
ins
xchg
and
imul
mov
pop
fld
les
ror
repz
repz
popa
xchg
push
ins
pop
dec
lds
push
cmp
push
into
loop
mov
mov
push
mov
rcl
jge
push
aam
rol
stc
xlat
and
stc
inc
ja
(bad)
mov
xor
add
jmp
scas
ins
test
loop
ret
sbb
pusha
in
test
stos
cmp
fnstenv
rcl
scas
inc
(bad)
adc
rcl
int3
and
in
ja
fbld
or
jle
test
repz
call
sub
xor
xchg
jo
fimul
and
aaa
scas
es
mov
sbb
stos
add
pop
mov
inc
xchg
cmova
cdq
pop
movs
mov
in
and
jae
std
dec
outs
popf
mov
or
loope
dec
rcl
push
imul
call
pop
adc
sub
aad
bnd
add
movs
rcr
sahf
loop
scas
mov
xchg
lea
aaa
call
xchg
sahf
sbb
fdivr
push
dec
lock
mov
ins
jno
sub
ja
stc
fsubr
xor
retf
sbb
pop
add
jnp
xor
xor
retf
mov
sti
push
dec
mov
and
mov
lock
mov
gs
jle
daa
cdq
leave
rol
adc
mov
daa
fwait
jns
and
loop
cli
jne
push
xchg
xchg
sub
add
stos
or
ret
mov
rcr
iret
scas
and
pusha
jle
stos
jge
inc
cmp
fisub
ins
cmp
addr16
jg
jge
int
lods
jnp
xchg
mov
inc
or
in
push
mov
retf
frstorw
pop
adc
shr
mov
ins
rcl
call
mov
stos
(bad)
mov
jmp
xor
fs
push
imul
mov
leave
jns
jecxz
fmul
jp
ds
sbb
mov
mov
xchg
add
sub
sti
inc
loopne
cmp
jae
add
lock
cmp
cli
es
lds
sub
daa
addr16
repnz
icebp
pop
icebp
xor
(bad)
std
push
(bad)
mov
xor
mov
and
or
fwait
rcl
adc
sub
shl
xor
cmc
mov
dec
sbb
movs
scas
sbb
xor
stos
xchg
inc
scas
jne
movs
outs
dec
arpl
jmp
popf
movs
cmp
inc
(bad)
rol
jmp
lods
stos
imul
cmp
jnp
dec
sbb
mov
jne
sar
xchg
outs
leave
add
pop
inc
jecxz
(bad)
push
(bad)
xor
xchg
or
add
adc
add
int
aad
cmps
test
inc
mov
sub
pop
stos
jne
or
dec
lods
cld
sub
sub
clc
loope
fstp
inc
cmp
loope
pusha
dec
movq
mov
into
clc
fild
sahf
mov
(bad)
icebp
or
xchg
int3
push
aas
push
xchg
call
repz
mov
ficom
add
das
mov
ficom
icebp
je
jmp
cmps
sub
mov
loope
int
jle
dec
jbe
cdq
call
sub
repz
hlt
jbe
mov
inc
and
xor
mov
test
mov
pop
(bad)
pop
(bad)
fisubr
cdq
xchg
dec
sbb
(bad)
into
out
adc
push
or
cmp
jmp
fnsave
cld
inc
adc
xchg
dec
cld
(bad)
push
add
mov
sub
and
je
fsub
cmp
sbb
add
sbb
jb
(bad)
mov
add
and
movs
push
add
fsubr
inc
inc
push
push
push
leave
xlat
sbb
cmps
adc
adc
or
push
or
xor
les
out
outs
popf
das
pop
or
and
mov
lods
lock
outs
lock
xor
cmp
add
stos
movs
sub
in
cmp
xchg
lods
or
pop
jns
push
xchg
xor
push
mov
out
in
inc
imul
mov
pop
inc
jp
sub
iret
or
add
imul
pop
dec
stc
mov
loop
dec
cwde
xlat
enter
cmp
xchg
sub
icebp
inc
cmp
fdiv
xor
cmp
jp
jmp
dec
call
or
outs
mov
and
into
push
pop
clc
(bad)
sbb
xchg
lods
jle
das
dec
push
(bad)
sbb
pop
pop
ret
loopne
imul
jbe
jno
and
mov
cmp
xor
dec
stos
push
test
adc
and
shl
fstp
(bad)
cmps
outs
sbb
js
jle
test
cmp
loope
cmps
xor
mov
mov
inc
or
(bad)
not
inc
add
push
adc
mov
div
(bad)
jl
daa
js
fnsave
inc
mov
push
cmp
mov
pushf
lds
pop
jne
push
lds
js
js
test
jnp
aas
add
jns
daa
add
mov
loopne
inc
mov
cmc
inc
mov
jl
cmp
(bad)
shl
inc
les
in
(bad)
xchg
sbb
(bad)
data16
inc
in
movs
cmps
ss
dec
jecxz
xchg
loop
add
xchg
inc
dec
mov
sub
pop
or
enter
mov
loopne
mov
jg
call
and
xor
fldenv
cmps
nop
mov
cmp
sti
sub
(bad)
call
rol
clc
mov
movs
lahf
gs
adc
fs
jp
jbe
lahf
sub
adc
out
leave
xchg
popa
sar
mov
jb
inc
ret
adc
jb
ss
jnp
int3
jl
int3
jno
and
clc
test
jge
iret
xor
fcom
ins
push
push
jne
mov
inc
(bad)
xor
pop
mov
les
pop
test
or
mov
cmps
in
push
pushf
add
enter
and
aaa
gs
cmp
adc
fbstp
ret
cmc
ins
fnsave
cmp
xor
bound
push
and
out
add
lds
leave
int
sub
mov
jo
cmp
rcl
das
add
les
stc
ffree
xchg
cmp
jnp
pop
cmc
in
std
push
stos
test
jmp
or
loopne
add
mov
daa
(bad)
scas
into
push
sti
ror
jb
shl
mov
dec
xor
dec
std
xor
out
dec
jbe
pop
and
xchg
femms
add
rcr
sub
cmp
repnz
out
repnz
xor
mov
jge
push
out
pusha
retf
push
cmps
(bad)
and
aad
and
mov
cwde
cmp
jp
mov
aaa
inc
xlat
xchg
stos
xor
inc
mov
xor
les
add
and
inc
mov
push
pusha
push
dec
mov
mov
fwait
xor
add
loop
movs
in
test
imul
mov
sub
jp
in
in
adc
pop
add
inc
popa
retf
push
in
sub
mov
call
mov
sti
add
aaa
loop
and
dec
repnz
pop
push
sti
shl
xchg
add
int
sub
dec
std
add
add
sbb
leave
sub
ret
xchg
adc
inc
jecxz
mov
jo
ret
shl
push
repnz
cmp
stos
fisubr
data16
sub
ror
adc
cmps
or
int
cmp
into
mov
push
gs
jg
das
xchg
aam
inc
addr16
mov
mov
add
lock
mov
movs
mov
mov
sub
(bad)
retf
push
movs
pop
push
ins
cmc
out
sub
jbe
hlt
imul
dec
scas
push
test
or
pushf
inc
imul
pop
jecxz
cmp
pop
loope
std
fistp
pop
(bad)
pop
(bad)
mov
inc
cmc
sbb
pop
xchg
xor
xchg
pop
mov
aam
out
xchg
ret
fcomp
cmc
sbb
and
jl
fimul
sbb
adc
add
cld
push
sbb
and
mov
fisttp
push
mov
inc
lds
add
(bad)
push
(bad)
fsub
inc
js
jne
jmp
nop
mov
inc
mov
mov
sub
fistp
adc
lds
mov
pop
xor
cmp
outs
add
and
push
fs
in
dec
sbb
xor
call
ins
pop
mov
movs
push
jnp
dec
sti
int
jb
out
fld
daa
sub
fistp
fidiv
cmps
ja
xchg
cmp
mov
pop
push
and
out
cwde
sbb
in
or
gs
push
and
inc
xor
jnp
pop
outs
add
cmp
mov
pusha
popf
mov
idiv
retf
cmp
inc
push
sub
and
iret
xchg
dec
ret
xchg
xchg
add
xor
dec
lds
cdq
mov
dec
(bad)
fwait
das
add
in
retf
add
mov
aad
push
(bad)
test
cdq
mov
jbe
aaa
shl
or
cli
sub
pop
jb
div
jp
test
ja
push
shr
jne
repz
popa
mov
mov
enter
scas
cwde
loop
lods
mov
ss
(bad)
push
pop
repnz
rol
stos
xchg
lods
jecxz
push
and
in
cwde
jecxz
call
xor
sbb
loop
mov
pop
dec
cmp
loope
sub
(bad)
(bad)
fdecstp
push
xor
xchg
jns
cmps
out
sub
or
xor
mov
pop
xor
int
sbb
daa
inc
add
jo
js
loop
jb
sbb
jae
or
daa
int3
xchg
cli
ret
jne
movs
or
adc
scas
add
out
push
sbb
jp
or
nop
pop
jae
xor
cmp
sbb
mov
or
ds
test
out
cmps
mov
int
mov
cmp
sub
ror
sbb
ror
call
ficomp
repnz
mov
xor
push
cmc
test
push
inc
imul
(bad)
dec
data16
jp
retf
iret
mov
(bad)
in
mov
inc
mov
sbb
lods
sbb
push
pop
and
jl
out
jp
xor
xor
adc
out
mov
movs
dec
xchg
lock
leave
lods
ret
fisttp
xor
lods
xchg
stos
pusha
push
jae
jnp
bnd
pop
xchg
ss
jns
push
push
push
xor
imul
cmp
jmp
div
pop
cmp
fs
addr16
jbe
aaa
movs
(bad)
lods
(bad)
dec
xlat
xchg
stc
call
xlat
pop
add
dec
push
jo
icebp
sbb
shr
jg
(bad)
mov
sahf
adc
xor
aad
jnp
inc
mov
push
mov
sub
pusha
jecxz
ror
fdivr
retf
fld
adc
xor
imul
inc
adc
xchg
jno
pushf
cmp
fld
and
mov
mov
xchg
jge
lea
mov
ins
cmc
loope
je
and
pop
js
sub
gs
inc
mov
sub
jp
loop
mov
cs
add
sub
sbb
xlat
xchg
push
sbb
mov
push
sub
jle
cmp
cmc
jge
out
(bad)
mov
mov
(bad)
jmp
les
shl
stc
push
ja
sbb
imul
inc
jmp
jecxz
sar
shr
cmp
push
test
cs
aas
aam
add
fnstenv
popf
out
arpl
stos
cs
xor
and
mov
inc
leave
pop
shl
test
push
fst
jns
retf
into
mov
adc
sbb
pop
pop
sub
push
mov
jg
sbb
imul
and
jnp
dec
dec
sub
add
jne
sbb
shl
gs
pop
fcmovbe
or
retf
pop
idiv
sbb
and
aaa
ss
ss
aas
mov
test
out
rep
xor
outs
pop
ret
cmp
bound
push
xor
push
xchg
xlat
ret
imul
adc
jl
jg
inc
(bad)
nop
xlat
jecxz
loopne
cmp
fidivr
ja
cli
mov
push
shl
fist
push
jmp
sbb
fist
pop
adc
inc
imul
ins
stos
dec
mov
push
ins
pushf
xchg
daa
je
xchg
jns
mov
xor
adc
out
call
add
jno
js
fdivr
sar
push
fwait
out
mov
cld
test
dec
and
imul
dec
je
and
arpl
add
jmp
mov
xor
pop
adc
add
sti
jae
fwait
das
or
mov
out
imul
fisub
add
ret
mov
push
aaa
push
or
adc
mov
sbb
jae
sbb
sar
xor
imul
sub
push
scas
in
xchg
test
and
test
add
fs
lock
repnz
push
jmp
xlat
xchg
push
(bad)
mov
jnp
jl
mov
or
test
jp
int
cmps
movs
ins
inc
repnz
(bad)
lods
inc
inc
test
cmp
sub
jl
mov
in
nop
(bad)
(bad)
das
mov
sbb
xchg
xchg
xor
xchg
stc
dec
mov
adc
jecxz
cdq
hlt
mov
andps
loopne
inc
pop
or
rcl
sbb
icebp
dec
sahf
lds
call
(bad)
pop
push
rcl
mov
scas
test
jmp
jp
das
mov
pop
mov
jne
stc
(bad)
mov
sub
test
push
outs
inc
retf
xchg
inc
sbb
out
sbb
sub
fmulp
ret
cld
test
movs
into
jmp
cmp
call
std
mov
inc
stos
adc
mov
movs
sub
outs
(bad)
loop
into
mov
mov
mov
cdq
sahf
sbb
cwde
jg
mov
cmc
leave
ins
ja
movs
push
jne
pop
cld
and
mov
out
xchg
sbb
sti
push
mov
or
adc
pusha
aas
push
sahf
inc
cmp
fxch
lahf
and
into
inc
enter
inc
adc
and
push
dec
test
lea
push
pop
dec
sub
xchg
or
ja
sbb
inc
fcomp
cmp
cmp
or
lock
scas
push
test
mov
mov
aas
(bad)
je
xor
aas
ss
or
add
mov
sub
xor
cs
pop
jmp
adc
xchg
push
out
xchg
(bad)
xchg
mov
and
hlt
daa
sbb
sub
addr16
mov
and
sbb
pop
dec
outs
mov
mov
outs
lea
ror
push
mov
shr
xchg
cmp
mov
mov
pop
cmp
adc
aad
jle
int
adc
add
test
or
scas
cmps
leave
in
stos
mov
in
cmp
inc
enter
add
pop
and
sub
into
jbe
sahf
dec
sti
or
repz
push
mov
ds
les
mov
and
add
lods
shr
imul
push
es
pop
pop
cli
push
push
cmp
jecxz
cmp
pop
mov
outs
xor
inc
js
inc
mov
call
fld
stos
xchg
dec
daa
out
adc
xchg
dec
ds
adc
repz
pop
push
cmp
shl
mov
(bad)
push
pop
jle
mov
test
mov
add
add
mov
mov
into
xor
adc
aam
pop
fimul
hlt
scas
lds
in
fild
sbb
add
pushf
test
leave
xchg
fcom
sahf
not
inc
sti
mov
push
mov
pop
mov
push
ret
or
adc
scas
cdq
(bad)
(bad)
sub
add
adc
(bad)
pop
call
add
sahf
push
sti
push
jecxz
das
(bad)
aaa
ins
idiv
cmps
mov
adc
or
jl
mov
fst
push
test
popa
cmp
jnp
sbb
inc
ret
(bad)
(bad)
scas
stos
jnp
xor
arpl
sub
push
fidiv
jo
inc
imul
cmp
(bad)
not
cmp
sub
xchg
inc
add
xor
xor
sbb
mov
outs
jne
dec
adc
(bad)
inc
and
adc
das
or
and
cmp
out
dec
adc
out
xor
stos
outs
push
loope
mov
mov
clc
mov
pop
add
lods
popf
sub
push
test
xchg
pop
dec
rcr
rcr
pop
dec
pop
push
in
ins
and
fadd
xchg
jne
and
jno
pop
or
push
lods
jg
mov
test
cmps
ret
and
cmp
lock
mov
mov
outs
or
and
(bad)
mov
call
jge
add
xor
ins
pop
retf
jge
into
iret
jnp
inc
stos
(bad)
mov
push
jle
fiadd
cs
add
loopne
push
cmp
mov
rol
das
push
push
xchg
mov
loop
xor
mov
les
repnz
enter
data16
mov
sbb
jns
outs
imul
push
popf
sub
stos
cmp
aad
rol
add
std
enter
popf
xchg
shl
popf
and
push
mov
enter
aaa
jmp
sbb
xchg
idiv
repnz
push
lea
repnz
mov
mov
sub
and
fstp
mov
or
jo
mov
js
gs
ror
xchg
dec
dec
fwait
dec
sbb
fisttp
and
cdq
xor
aad
into
js
rcl
repz
test
(bad)
pop
sbb
inc
jbe
push
(bad)
fiadd
imul
ja
iret
repz
xchg
jmp
inc
enter
iret
dec
inc
cwde
lods
iret
jbe
adc
adc
push
or
add
and
jmp
cmp
jle
mov
adc
(bad)
jno
test
sub
jnp
sub
push
std
adc
ret
cmp
enter
out
pop
dec
push
fstp
push
outs
xor
mov
int3
ficomp
and
cmp
call
cli
dec
jb
cli
mov
rol
data16
ret
pop
sub
ret
mov
and
pop
inc
mov
xchg
xor
shl
fcmovnu
adc
lahf
aas
in
adc
xlat
adc
aas
xchg
stc
mov
lods
inc
mov
mov
xlat
fs
fistp
jmp
loopne
push
cmp
ret
jns
int
fwait
lds
fxch
mov
mov
stos
xor
sbb
and
sbb
rol
mov
cmp
aad
shl
adc
mov
lea
fs
mov
xchg
stos
call
fnstsw
gs
inc
popf
arpl
cmp
ja
fidiv
xchg
xor
adc
jmp
or
lods
pop
sub
inc
mov
cmp
rol
add
sub
repnz
pop
mov
mov
sti
xchg
sub
(bad)
mov
frstor
adc
jns
cwde
aaa
jge
cmc
mov
les
nop
jb
fsubr
repnz
stc
cli
xor
inc
rcl
stos
dec
sub
jmp
loop
je
inc
fmul
enter
xchg
inc
pusha
jbe
aas
cdq
xchg
je
dec
inc
mov
xor
add
aam
cwde
cwde
nop
stos
fcomp
pop
aaa
adc
jmp
pushf
icebp
bound
or
mov
es
pop
(bad)
cli
add
xor
xor
rcr
sub
push
xchg
push
pop
inc
pop
inc
adc
mov
mov
std
fdivr
adc
pop
mov
xor
loope
dec
mov
push
mov
ds
out
add
pop
(bad)
dec
shl
into
mov
call
xor
pop
cmps
movs
push
cmp
add
nop
or
sahf
in
push
xor
pop
sbb
mov
jbe
add
adc
es
and
lock
adc
ss
in
fcomp
sub
cli
pop
test
sub
jb
sbb
cdq
into
xchg
cmps
in
test
(bad)
jg
ja
movs
cmp
xor
ror
jno
push
scas
jge
push
clc
fisttp
and
(bad)
mov
cmp
in
aad
mov
cmc
hlt
mov
retf
push
lods
loope
hlt
mov
call
repz
out
int3
dec
hlt
push
dec
add
fst
cmp
xor
sbb
xchg
add
xchg
ss
test
loopne
xor
push
mul
mov
push
inc
fnsave
inc
inc
jmp
xchg
aam
fwait
int3
mov
test
fimul
mov
fisttp
lods
pop
pop
rol
mov
ss
int
jb
shl
nop
fwait
add
ja
es
jg
mov
dec
imul
shl
dec
cmp
jo
xchg
retf
jo
cli
dec
jmp
leave
sti
or
mov
je
sub
fs
sub
adc
(bad)
(bad)
jecxz
xchg
ss
add
in
clc
mov
jns
repnz
dec
je
cli
mov
test
ret
cmps
mov
fsubr
add
les
push
ficomp
arpl
pop
out
jae
les
xchg
jno
dec
ins
ficomp
stos
xchg
mov
fld
inc
in
jle
jg
gs
mov
and
ror
xlat
jns
popa
neg
or
pop
push
xlat
mov
mov
push
xchg
popf
xor
adc
mov
ds
outs
retf
push
lods
bound
jl
xchg
lds
cmp
jae
jno
dec
(bad)
in
add
cli
jns
cs
ficom
pop
add
call
popf
adc
add
fwait
hlt
mov
jno
pop
sub
xor
adc
and
aad
push
cmp
hlt
cld
push
xchg
mov
fwait
sti
aam
pop
mov
mov
addr16
cmp
movs
ss
loope
push
fild
and
inc
fmul
push
mov
in
dec
push
push
jo
and
xchg
inc
and
ins
test
inc
ja
mov
(bad)
loopne
cdq
xor
push
sub
int3
loop
lock
cmps
pop
cmps
test
imul
push
stos
lahf
xchg
or
pusha
sbb
cmp
jns
out
or
jbe
cmps
jne
jbe
inc
scas
and
mov
int
add
xor
(bad)
jp
or
in
fwait
mov
das
stc
add
sub
mov
lock
sub
rcl
dec
cmp
and
sahf
int
fstp
jns
out
mov
fstp
not
or
fmul
cwde
sbb
push
mov
jmp
push
jg
lea
fist
imul
lds
pop
out
add
shr
adc
pop
inc
rcr
test
(bad)
or
xor
(bad)
div
mov
retf
push
paddb
call
scas
mov
int
or
push
cld
cmp
aam
or
(bad)
(bad)
and
pusha
fcmovu
xor
push
mov
pop
test
sub
inc
retf
cs
out
xor
loope
add
xchg
jbe
adc
mov
dec
mov
cmp
inc
sbb
sub
adc
inc
std
nop
cmc
test
push
push
push
xchg
es
int3
repnz
nop
(bad)
sbb
pushf
cmp
jmp
lahf
push
arpl
das
bswap
aam
aas
and
out
or
in
xchg
test
cld
lds
inc
nop
pusha
cmp
cmp
mov
shl
dec
mov
mov
test
out
nop
jge
jmp
lea
sub
dec
ins
ins
hlt
sub
push
mov
call
adc
xchg
or
(bad)
pop
pop
xchg
mov
in
ret
xchg
cmp
pop
ret
and
add
and
sub
inc
pop
test
push
xchg
(bad)
iret
ins
aad
sbb
xor
ficomp
inc
pop
clc
mov
out
pop
in
dec
pushf
jl
mov
inc
jge
fdivr
add
sbb
xlat
neg
dec
sahf
xchg
or
dec
or
mov
inc
loopne
xchg
pop
mov
xchg
fdiv
pop
fld
dec
fidiv
das
sbb
mov
jg
adc
pop
ss
call
les
(bad)
and
in
in
jge
or
call
fs
bound
icebp
mov
xor
int3
je
sbb
stos
pop
pop
adc
mov
add
pop
dec
fisttp
cs
push
or
mov
cwde
lock
cmp
into
(bad)
shl
push
mov
scas
sbb
mov
adc
fist
and
jp
(bad)
sbb
pop
xor
pop
mov
add
aam
mov
rcr
adc
test
(bad)
icebp
dec
or
(bad)
lahf
mov
jle
fwait
outs
adc
add
inc
cmp
push
xchg
xchg
fcmovb
inc
mov
pop
add
xor
int
pop
fcmovnb
retf
adc
out
push
or
pop
sbb
or
mov
push
movs
call
mov
sbb
mov
jbe
ret
sub
js
into
lods
push
or
jo
jmp
pop
inc
mov
mov
add
sub
stos
cmp
(bad)
cwde
dec
aad
jge
(bad)
push
xchg
xchg
mov
and
jg
or
hlt
inc
adc
mov
pop
mov
loope
adc
adc
repz
xor
add
jnp
enter
jge
xchg
and
adc
push
call
jb
sub
(bad)
mov
push
fdiv
dec
retf
adc
jno
jae
call
push
call
loop
stc
into
jbe
scas
mov
pop
nop
dec
(bad)
inc
dec
pop
xchg
xchg
cmps
icebp
jno
int3
dec
ins
mov
enter
fisubr
ds
mov
dec
push
test
cmp
push
ja
sub
movlps
ficomp
test
cld
imul
aaa
mov
lea
inc
sti
lods
cmp
out
(bad)
push
jmp
rcl
adc
sbb
jo
xor
es
push
movs
pop
or
mov
jg
xchg
loop
nop
repz
adc
push
retf
gs
lock
mov
daa
in
xchg
cmps
xor
push
add
fs
or
sar
pop
jns
add
dec
pop
loope
xor
mov
shl
in
lea
repz
mov
clc
test
inc
or
inc
cmp
xchg
(bad)
outs
repz
shr
pop
xchg
out
xchg
dec
(bad)
mov
pop
lock
ror
mov
cld
pop
imul
cmp
jg
inc
dec
(bad)
ins
add
xor
add
adc
inc
ror
shl
jne
xor
and
out
mov
mov
add
popf
es
std
mov
aad
ficomp
mov
enter
aam
sbb
pop
jae
pop
inc
ret
pop
push
mov
pop
lock
shl
imul
leave
add
(bad)
imul
loope
rcr
cwde
bound
jl
sti
ins
fbstp
xor
xchg
psubw
dec
imul
inc
cmps
fdivr
or
push
dec
scas
adc
pushf
cwde
ror
shl
fnstenv
fsubr
in
(bad)
ins
push
mov
fisub
sbb
xor
xchg
mov
xor
call
push
jnp
aas
mov
sbb
jle
(bad)
fcomi
ret
push
xor
ds
in
(bad)
add
xchg
pushf
sbb
mov
popa
push
cmp
sbb
or
popf
adc
ss
jo
ffree
adc
jo
and
or
add
fwait
sub
pmulhuw
rcr
inc
mov
lods
js
int3
fsubp
pop
push
test
mov
test
ja
sub
sub
fcmovbe
mul
sub
add
in
pop
add
in
retf
add
xchg
and
aad
scas
out
sub
addr16
add
xchg
test
sbb
pushf
xchg
cmc
(bad)
out
inc
nop
and
jle
mov
push
bound
test
jae
adc
sbb
xor
sahf
mov
iret
and
bound
out
jmp
cmps
pop
rol
iret
rcl
adc
sti
int
sub
mov
inc
cdq
ror
xchg
cwde
outs
cli
jae
pop
mov
je
xlat
dec
xor
jno
cmp
mov
and
push
xchg
sbb
inc
outs
stos
pop
mov
mov
xor
rcl
mov
fs
cmp
dec
clc
lods
dec
test
inc
shl
fisub
cwde
mov
add
test
pop
inc
(bad)
(bad)
fwait
mov
or
(bad)
push
jg
inc
test
scas
adc
push
or
stos
mov
fidivr
cld
stc
pop
dec
push
ins
test
mov
mov
call
daa
xchg
mov
xor
jl
ins
(bad)
test
call
add
inc
cmps
ins
inc
push
adc
iret
add
and
pop
jmp
adc
pop
jl
mov
or
xchg
push
xlat
lock
repnz
sbb
rol
fsubr
dec
xchg
jns
mov
repnz
sub
clc
(bad)
and
mov
dec
adc
pop
cmp
adc
(bad)
dec
mov
inc
push
cwde
aas
dec
jl
fisttp
movs
popf
rol
das
sbb
xchg
and
or
mov
aad
and
xchg
aam
sbb
jl
dec
scas
bnd
push
inc
into
lea
adc
and
xor
mov
ins
mov
mov
(bad)
dec
pop
pusha
add
clc
xchg
mov
retf
popa
mov
lahf
push
ret
xor
xchg
arpl
mov
mov
xchg
int
dec
int3
iret
mov
jae
retf
sbb
mov
inc
push
daa
push
dec
call
pop
fidiv
(bad)
aas
call
jb
(bad)
fdivr
jp
mov
xchg
sahf
sub
fcomp
sub
push
mov
stos
cmps
dec
mov
mov
pushf
pop
test
rcr
aad
pushf
add
data16
imul
mov
xor
in
mov
jb
inc
lds
xchg
test
jmp
inc
and
fdivr
enter
dec
outs
(bad)
fdiv
xchg
sub
xchg
sbb
sbb
inc
push
movs
ds
push
(bad)
inc
rcr
and
push
add
adc
ins
out
dec
outs
mov
cdq
aam
call
in
das
mov
adc
sbb
push
jmp
pusha
clc
jno
stos
imul
(bad)
mov
adc
retf
retf
popf
mov
push
mov
pop
cmc
in
xchg
jge
int3
sbb
rcl
sbb
retf
pop
mov
gs
push
jns
sub
pop
fsub
pop
sbb
dec
mov
xchg
adc
xchg
xchg
push
leave
inc
adc
push
test
in
mov
stos
or
mov
das
rol
push
cmps
and
pop
fld
pop
push
add
jo
pop
loope
aad
sbb
loop
enter
hlt
mov
arpl
leave
pop
cmp
jmp
out
mov
and
outs
push
in
stos
movs
call
rcl
js
add
push
mov
in
scas
cmp
adc
aas
jle
ret
sti
stos
repz
fidivr
mov
sahf
add
data16
mov
adc
add
or
inc
nop
dec
ror
or
push
mov
xor
add
retf
mov
pop
loop
jmp
lds
cld
leave
dec
clc
cmp
sub
and
cld
jo
repnz
and
mov
pop
adc
fild
xchg
ins
sub
stos
sbb
xor
inc
lahf
mov
sbb
adc
fwait
dec
out
pop
adc
ret
xchg
scas
dec
jbe
in
fs
dec
mov
sti
and
gs
stos
jno
aad
jl
ins
leave
iret
les
cwde
mov
jne
mov
jp
jmp
or
xor
jg
aas
push
stos
mov
(bad)
arpl
push
push
call
dec
in
cdq
fnstcw
sub
in
push
in
jno
lods
(bad)
pop
xchg
dec
xor
dec
push
and
mov
iret
jmp
cmp
xor
pop
cmp
xor
sbb
push
sahf
xchg
js
push
clc
cmp
mov
fidiv
repnz
mov
pop
xchg
inc
test
daa
cmp
add
jo
popf
call
mov
push
arpl
popf
xchg
jnp
xchg
mov
add
nop
cmc
and
mov
ins
rol
jmp
sub
ss
push
jne
test
leave
sub
fstp
cli
jp
test
and
leave
nop
test
ss
fwait
cmp
and
test
dec
mov
jnp
xchg
fwait
repnz
mov
mov
nop
mov
aad
or
sbb
inc
ror
retf
sub
sti
clc
ret
mov
ins
jbe
ret
cmps
movs
addr16
mov
sbb
test
ds
aam
(bad)
lods
out
sbb
sbb
aaa
jo
leave
mov
int3
or
mov
xchg
retf
ss
jnp
and
push
pop
inc
and
repz
ds
cmps
sub
fs
and
sbb
out
xor
cmp
push
add
mov
xor
jae
or
shr
jge
push
rdtsc
inc
add
xlat
in
rcr
inc
dec
movs
enter
mov
pop
xchg
dec
sbb
jle
add
call
stos
xor
in
xlat
mov
dec
sti
mov
stos
(bad)
inc
retf
mov
xchg
in
ja
adc
dec
(bad)
daa
out
ret
jns
pop
mov
aas
retf
sbb
push
mov
mov
jne
retf
ret
cdq
jmp
(bad)
jnp
test
test
gs
sub
push
test
imul
pop
test
(bad)
jmp
add
imul
jb
adc
out
test
dec
dec
cli
xchg
push
arpl
test
cld
das
push
(bad)
cmps
inc
popf
in
bound
push
hlt
ins
movs
les
imul
js
xor
icebp
repz
cmp
mov
push
inc
xor
dec
cwde
lea
push
pop
in
dec
sub
pop
sub
and
xchg
or
xchg
sbb
push
shr
adc
shl
int
adc
test
adc
mov
cmc
icebp
popf
ja
shr
(bad)
and
fs
lea
cmps
mov
movs
(bad)
pop
jmp
into
cmc
mov
lods
idiv
push
dec
pop
ins
imul
push
aad
movs
cs
mov
cs
rol
sub
movs
shl
sub
rcl
bt
jle
and
fwait
icebp
mov
lock
add
xchg
jo
enter
mov
pop
out
ins
dec
fiadd
movs
mov
pop
inc
inc
(bad)
sub
xchg
stos
xchg
xchg
and
cmp
lahf
push
ds
cld
pop
dec
mov
cld
mov
xchg
repnz
push
cmp
call
jns
xchg
sub
lods
aas
add
xor
sar
jnp
shl
adc
rcr
icebp
mov
inc
fbld
cmp
bound
aaa
pushf
mov
in
scas
jp
scas
pop
popa
cmps
mov
dec
push
mov
repz
add
in
aaa
stc
xor
mov
fist
clc
jecxz
or
fwait
test
jg
jns
call
jae
in
mov
retf
jg
dec
mov
xchg
cmp
or
adc
daa
mov
jg
sbb
inc
mov
mov
fisub
daa
and
cwde
sub
in
and
xlat
sub
sbb
push
je
push
dec
push
jnp
imul
and
cmps
not
add
sbb
mov
in
adc
inc
out
out
daa
mov
sbb
aaa
bound
pusha
imul
mov
push
sub
fdiv
inc
nop
sbb
jmp
mov
mov
addr16
(bad)
xchg
mov
jecxz
lock
ja
pop
sub
sbb
scas
mov
sub
push
into
scas
ds
mov
dec
and
xor
call
scas
push
fisttp
lods
fnsave
ffreep
push
fst
push
or
gs
push
fs
mov
aam
xor
and
push
shl
dec
mov
(bad)
daa
sub
fs
cmp
xor
rcl
loopne
dec
or
aad
or
cdq
mov
(bad)
cmp
cli
mov
movs
fistp
pushf
mov
dec
push
jp
add
sub
dec
pop
mov
sub
cmps
push
inc
jb
adc
jns
xchg
and
imul
in
jg
pop
lods
push
fdivr
div
das
push
jmp
or
repnz
sub
inc
adc
loop
add
enter
fidivr
je
jae
mov
xor
push
jae
or
push
pushf
inc
retf
jmp
sbb
daa
add
test
sub
out
mov
imul
mov
push
push
repz
(bad)
jmp
ja
out
test
in
lea
sub
pop
daa
aaa
xchg
mov
ss
sbb
inc
(bad)
pop
clc
int
xor
leave
rcl
cmp
mov
sub
jae
pop
repnz
out
aas
dec
mov
lods
push
imul
adc
dec
xchg
scas
bound
and
lds
mov
(bad)
(bad)
xchg
jecxz
xchg
mov
mov
jp
fs
scas
fldcw
sar
inc
xor
nop
lods
bound
jp
fsubp
xor
lods
aad
pop
fnstsw
push
imul
xor
dec
ret
test
mov
inc
inc
mov
xor
sub
test
ret
jl
pop
sbb
cld
adc
int
js
cmp
dec
jae
add
inc
aaa
std
adc
(bad)
stos
sti
inc
pop
xchg
xchg
jl
fsubr
arpl
mov
aaa
test
fsub
cli
imul
or
cli
xchg
neg
dec
jae
xor
sub
pop
ins
leave
xchg
xor
ret
xchg
cmp
lods
out
inc
sbb
dec
pusha
fisub
ficomp
dec
push
pop
pop
push
ss
add
fstp
dec
(bad)
jns
sbb
push
dec
nop
fst
gs
push
mov
mov
push
pop
xor
cld
push
mov
xor
repz
sbb
inc
pop
repnz
xor
and
or
mov
adc
mov
cmp
or
jl
mov
jl
hlt
adc
sbb
mov
loopne
outs
ret
dec
cmp
rcr
or
push
sub
stos
mov
dec
mov
or
mov
cmp
inc
dec
push
mov
jecxz
out
inc
fstp
add
int
(bad)
test
jo
dec
test
xor
xchg
call
and
inc
(bad)
jno
lds
xor
xchg
stos
dec
lds
dec
rcr
pop
jae
jmp
(bad)
lods
sbb
aas
inc
icebp
fbld
xlat
jns
sub
imul
ret
push
stos
adc
pop
mov
or
fcomp
mov
movs
dec
mov
dec
imul
adc
pop
loope
push
jg
cmp
xlat
or
adc
addr16
sbb
push
pop
cmp
icebp
(bad)
rcr
push
push
scas
adc
adc
(bad)
stos
imul
mov
push
in
mov
jecxz
push
leave
lock
xchg
bound
int
(bad)
call
das
test
mov
sub
rol
or
jmp
bound
pop
jae
in
mov
pop
xor
pop
and
ss
jne
mov
mov
icebp
test
(bad)
fisttp
shl
add
cmp
sar
in
inc
cmp
sbb
lock
xor
ins
inc
dec
add
addr16
fwait
ins
inc
shl
xchg
inc
sub
loopne
fcmovbe
push
jmp
sub
call
sub
push
arpl
shl
mov
aas
(bad)
pop
retf
js
dec
sahf
dec
jbe
and
pop
inc
retf
daa
add
dec
dec
or
cld
jno
lea
and
out
ins
lods
pop
inc
adc
cmp
pop
xchg
test
cmp
pop
retf
xchg
push
and
jnp
pushf
aas
sub
sbb
or
push
lock
cdq
mov
pop
mov
ins
inc
lahf
idiv
pusha
test
jae
enter
mov
push
or
scas
add
imul
ins
mov
test
jbe
repnz
mov
not
push
mov
(bad)
loop
pop
jno
pushf
dec
adc
jns
loope
loop
das
jle
pop
jmp
jge
dec
mov
stos
int
bound
lods
cmp
sub
and
lock
jns
outs
ja
out
dec
sti
mov
mov
in
cmp
jle
loopne
iret
clc
popf
in
jmp
test
push
rcr
add
or
pop
mov
jmp
pop
inc
and
stos
ret
pop
mov
mov
mov
repnz
dec
ret
(bad)
stc
(bad)
mov
mov
jbe
inc
(bad)
ret
out
xchg
lods
mov
stc
sbb
test
nop
retf
mov
cld
(bad)
cmp
enter
aaa
sub
in
adc
test
movs
and
out
and
or
add
fild
movs
push
das
arpl
dec
inc
pop
add
pop
ret
push
bound
mov
sbb
ret
mov
je
cmc
fisubr
aaa
xor
push
int
stc
push
and
retf
pushf
cmp
pusha
fyl2xp1
jmp
adc
in
sbb
mov
and
std
in
jecxz
pop
rcr
enter
ret
dec
cmp
idiv
mov
enter
mov
jg
mov
shld
mov
inc
pop
mov
xlat
pop
sbb
stc
xlat
sub
mov
mov
cmc
jbe
sbb
cmp
inc
scas
sbb
mov
mov
push
enter
mov
mov
outs
xchg
aad
dec
call
jb
add
xlat
cwde
mov
mov
loope
inc
shl
lods
mov
and
xchg
cmova
outs
push
stos
xchg
fsub
jae
xor
pop
movs
lea
adc
jne
ins
in
pusha
jecxz
mov
gs
jle
cli
rol
jb
shl
add
pop
xchg
iret
add
enter
sbb
ins
inc
pop
ror
mov
push
aaa
dec
cmp
cs
pop
pop
add
cdq
mov
mov
loop
xchg
sbb
jmp
xor
push
fwait
popf
mov
pop
fisttp
pop
into
and
mov
(bad)
lods
scas
mov
push
fwait
cmp
jb
in
sbb
xchg
fiadd
sti
mov
movs
add
cmp
in
cmc
or
mov
sbb
fidiv
dec
push
or
out
retf
add
sub
mov
push
ror
xchg
fcmovb
rcr
add
aad
dec
push
add
xchg
rcl
fistp
inc
sar
jle
test
jo
icebp
out
sahf
daa
aaa
ins
sub
push
xchg
push
pushf
out
clc
dec
push
mov
mov
into
outs
adc
or
nop
and
popf
cmc
call
sbb
push
(bad)
fs
out
and
(bad)
(bad)
jnp
push
mov
adc
push
pop
fwait
inc
lahf
das
push
jb
pop
pop
push
xlat
popa
ins
pop
dec
div
pop
and
adc
(bad)
sbb
clc
movlps
or
sub
clc
sbb
mov
fisttp
or
xchg
xchg
xchg
cmc
jge
mov
pushf
in
test
xchg
xor
test
jp
pop
xchg
pop
cmp
vmovd
das
and
push
gs
ror
mov
int3
loope
movs
ss
gs
xchg
nop
sbb
mov
add
movs
lods
inc
mov
sub
fistp
cmp
mov
pop
push
push
mov
or
push
xchg
pop
(bad)
jl
movs
(bad)
xor
js
ss
rol
int
les
mov
sub
popf
aad
loopne
or
jge
ret
sub
push
popa
add
into
xchg
mov
lds
pop
dec
xchg
mov
aas
cmp
aaa
hlt
or
enter
test
jp
dec
imul
mov
sbb
add
dec
mov
push
inc
mov
cmp
scas
mov
fs
xor
ror
xor
and
aas
dec
(bad)
sbb
(bad)
leave
hlt
es
rol
aam
lods
shl
mov
cwde
mov
jne
inc
jne
add
pop
and
(bad)
pusha
enter
xchg
add
mov
ret
cli
repz
mov
add
jge
push
push
test
in
push
dec
shl
stos
test
fistp
push
cmp
and
jo
cmp
mov
das
enter
lods
sbb
(bad)
pop
mov
test
lods
cmps
ins
aaa
inc
xlat
dec
arpl
hlt
cmps
out
pop
aad
ja
pop
test
pop
cmp
add
shl
nop
mov
xchg
loope
int
mov
nop
jmp
or
in
daa
xchg
inc
jb
mov
xchg
xchg
mov
cs
push
sbb
fcmovnbe
inc
xor
mov
ret
sbb
test
cmps
dec
push
jne
out
pop
ret
ss
inc
loop
pop
call
add
pop
or
jg
xchg
lock
outs
and
hlt
mov
push
mul
loope
jecxz
js
xor
xor
hlt
add
dec
mov
xor
and
cld
jecxz
inc
push
ds
daa
mov
pop
push
xor
aad
sbb
sbb
add
sbb
xchg
sub
jbe
jbe
aam
mov
rol
add
std
imul
shl
fstp
inc
cs
outs
jbe
mov
in
mov
push
mov
push
fist
fwait
jnp
arpl
loope
(bad)
shr
mov
loopne
mov
data16
sbb
push
js
repnz
ins
leave
inc
xchg
cmps
push
fistp
mov
in
iret
adc
call
mov
in
in
adc
or
clc
or
shr
or
sbb
sbb
and
sbb
mov
sbb
and
adc
add
call
outs
out
and
jbe
pop
xor
enter
pop
xchg
xchg
or
sub
jae
in
xor
adc
bound
push
or
mov
jae
rcr
adc
stc
push
xor
in
xchg
mov
lock
jns
call
shl
fwait
ins
sub
lods
inc
cmp
cmps
in
adc
mov
daa
daa
jnp
push
sub
outs
xlat
cmp
cmp
sbb
das
add
push
cld
sub
test
xchg
mov
dec
movs
adc
imul
lods
ja
or
pop
sub
dec
rcl
push
jno
dec
or
stos
lock
mov
jp
inc
into
imul
inc
sub
sub
(bad)
mov
xor
sti
fimul
and
lock
pop
ja
or
data16
or
lods
ja
sub
mov
inc
outs
pop
mov
rcl
popa
dec
loopne
pop
out
jb
and
ret
mov
ret
pop
sbb
jb
sub
popf
mov
xlat
sub
mov
mov
sub
icebp
inc
xchg
aam
push
cmp
cmps
pop
xchg
dec
fnsave
cmp
daa
add
mov
mov
dec
cmc
add
and
jb
jmp
mov
xchg
xor
xchg
imul
or
sub
cmp
push
imul
pop
mov
loop
pushw
and
movs
iret
mov
and
jecxz
mov
xchg
daa
pop
adc
xchg
movzx
inc
adc
inc
hlt
xor
inc
movs
xor
pop
nop
loop
fld
in
stos
dec
lods
push
adc
cmp
sbb
cmp
gs
ins
jmp
mov
ins
add
ss
fld
aam
int
cmp
shl
addr16
enter
cmp
ins
xchg
push
(bad)
rcr
test
mov
jns
ret
pop
fcomp
dec
cmp
mov
adc
add
stos
pop
sar
(bad)
dec
inc
(bad)
icebp
jno
sub
dec
cmps
or
aas
inc
cmp
jecxz
xchg
mov
test
cmp
and
inc
mov
push
jb
cmp
ror
fdiv
sub
jne
xor
ins
mov
mov
cmps
push
inc
jecxz
jmp
mov
int3
je
fdivrp
mov
lock
mov
outs
out
adc
adc
outs
ret
and
sub
xlat
or
leave
jae
push
jae
mov
(bad)
xlat
sar
or
mov
lods
xchg
push
mov
or
rcl
in
clc
pop
movs
in
sub
aad
sar
xchg
call
sbb
rcl
mov
mov
mov
xor
inc
loopne
ret
into
lods
push
or
vpslld
inc
js
cmps
sbb
in
inc
xor
je
mov
popa
rcr
mov
xchg
fwait
inc
push
push
jle
pop
adc
(bad)
retf
dec
dec
pop
push
xor
pop
jp
lahf
loop
xor
and
mov
imul
push
xlat
and
cmp
ret
ret
or
mov
pop
outs
ss
arpl
xchg
ss
lahf
mov
out
mov
push
dec
or
bound
or
dec
inc
cdq
(bad)
loopne
imul
mov
cmp
sti
popf
loope
mov
clc
push
(bad)
pop
loopne
xchg
lahf
inc
sahf
int3
mov
scas
ret
sbb
push
in
sbb
test
dec
push
pop
and
push
inc
jmp
cmp
cmp
cmp
jmp
pop
or
call
pushf
popf
adc
out
add
sti
xchg
mov
iret
xor
sahf
ror
xor
out
xor
dec
fcomp
xor
inc
out
jae
cmp
and
pushf
cmp
mov
adc
loope
or
jmp
dec
mul
sub
adc
dec
push
cmp
dec
into
push
mov
xchg
movs
test
data16
fwait
sbb
adc
and
xchg
mov
cmp
mov
mov
pushf
mov
pushf
cmp
dec
inc
cmp
mov
sub
xchg
and
ret
cmps
sub
out
sbb
out
push
int
add
xlat
xchg
xchg
sbb
mov
sbb
push
or
cmps
xor
add
cmp
outs
cld
adc
mov
sub
(bad)
pop
xchg
movs
add
shr
scas
jmp
jp
leave
xchg
cmc
test
out
loopne
pop
out
ins
xchg
ss
mov
call
adc
sub
and
jmp
push
stos
add
ror
xlat
sahf
mov
pushf
movs
push
mov
(bad)
ja
aaa
inc
cmc
(bad)
loope
xchg
rcr
test
shl
retf
cmp
mov
shl
pop
int
fild
div
call
sub
retf
repnz
out
loopne
test
jno
test
jb
movs
inc
add
push
xlat
std
mov
or
idiv
mov
dec
adc
in
iret
lock
dec
and
iret
stos
pop
jle
retf
and
jae
loop
push
test
jne
inc
mov
pushf
sub
mov
xor
mov
aaa
dec
mov
push
hlt
in
pop
and
test
out
fisubr
loopne
xor
out
jmp
retf
cld
frstor
sahf
cmc
mov
push
and
push
in
jmp
mov
mov
in
sbb
sub
xor
mov
and
lds
imul
pop
aas
mov
or
in
retf
dec
fist
adc
add
call
sub
xchg
cmps
(bad)
bound
iret
pop
push
gs
(bad)
jb
xchg
scas
fmul
or
or
stc
scas
xor
xor
test
cs
mov
idiv
mov
mov
shl
fs
icebp
scas
mov
mov
shl
rcr
mov
and
or
inc
jg
push
inc
mov
mov
jno
test
jno
int3
faddp
fnstsw
cwde
mov
dec
popf
jne
fidiv
sbb
pusha
mov
and
test
(bad)
pop
jo
mov
sti
pusha
and
dec
and
mov
retf
cmps
pushf
adc
xor
mov
sar
sbb
test
iret
cwde
and
ror
sub
xor
outs
sub
xor
mov
jb
xor
mov
sub
cmp
pop
ficom
arpl
das
je
fs
mov
adc
xchg
imul
dec
loopne
or
add
mov
add
ds
push
pop
repz
mov
mov
gs
std
mov
push
inc
mov
or
test
add
pop
sahf
inc
sub
push
adc
aad
pop
sub
pusha
movs
rcl
pusha
or
mov
call
sbb
sbb
xchg
js
pop
jmp
xchg
mov
xor
xlat
sbb
jge
fnsave
test
xor
or
cmp
adc
xlat
push
jmp
cmp
dec
jp
popf
in
ja
sub
jns
rcl
into
mov
mov
sets
sub
add
repz
jl
pop
scas
push
je
push
nop
inc
jecxz
in
nop
out
xor
arpl
repz
test
rcl
outs
ins
pop
inc
ror
sbb
mov
stc
mov
xor
mov
mov
sub
dec
cs
sti
pop
lods
gs
aad
adc
mov
sub
jb
leave
loop
sub
ja
push
sbb
aas
mov
pop
mov
mov
adc
in
add
sub
sub
scas
cmps
sti
jge
jle
ins
fld
mov
dec
loop
inc
test
imul
dec
cmp
inc
jbe
push
push
rcr
js
sbb
ds
pop
ror
test
inc
mov
inc
aad
out
cmps
or
pop
test
jo
pop
cmc
scas
push
in
xchg
push
add
in
lds
mul
inc
push
imul
cmp
ror
mov
test
out
xor
cld
je
sub
jle
lds
xchg
aam
sbb
jnp
iret
add
ret
xchg
lds
push
aaa
jg
adc
out
mov
popa
hlt
push
jmp
push
mov
ja
sub
mov
and
enter
xor
xchg
daa
scas
xchg
scas
lock
jns
pop
dec
xor
sti
inc
dec
sub
and
push
pop
or
cdq
sar
in
inc
jmp
sbb
lahf
add
mov
and
jmp
add
mov
mov
adc
xor
std
ins
cmp
pop
and
fimul
stc
mov
ret
push
in
cdq
adc
fdivr
movs
inc
loop
(bad)
out
xor
fcmovnb
mov
cdq
add
test
xchg
push
js
adc
xchg
pop
adc
lea
cmp
(bad)
scas
push
mov
outs
popf
mov
mov
std
daa
inc
sub
int
adc
mov
cmps
loope
cli
cdq
adc
pop
sub
js
jp
ins
fisttp
outs
xchg
out
fild
inc
push
cmc
xor
ret
xchg
jle
jo
mov
sbb
push
adc
out
into
xor
xchg
mov
adc
in
sub
cmp
xchg
sti
add
ins
rol
mov
jp
add
retf
add
mov
popf
js
push
js
inc
adc
jo
mov
inc
or
jmp
mov
mov
ins
shr
mov
out
test
jmp
in
test
sub
and
mov
aad
lds
xlat
push
jge
test
cmp
out
scas
inc
adc
jmp
mov
jne
int
neg
xchg
add
fs
pop
ret
pusha
jbe
jle
jmp
pop
pop
nop
inc
fld
xor
mov
sbb
pop
add
push
dec
rcr
stc
sub
cmps
int
cmps
stos
arpl
js
aaa
loope
mov
inc
ret
into
test
int3
mov
mov
jp
pop
adc
lods
scas
in
mov
lock
sbb
pop
jne
sub
xchg
mov
push
add
lahf
repnz
fwait
or
mov
imul
cmps
int3
push
sbb
inc
adc
sub
inc
add
pop
loop
mov
movs
icebp
mov
ja
out
mov
xor
xchg
out
fld
shl
sbb
movs
call
rcl
mov
dec
data16
pop
inc
into
fcmove
mov
(bad)
adc
(bad)
es
fild
mov
mov
(bad)
mov
jl
jmp
shl
je
(bad)
adc
test
sbb
out
or
call
dec
ss
dec
add
or
pushf
add
scas
add
jns
fisub
adc
das
pop
idiv
cli
iret
adc
jecxz
in
inc
push
lock
out
mov
es
shl
or
mov
or
cmp
in
sbb
daa
mov
push
dec
xchg
(bad)
pop
pcmpgtd
mov
add
add
push
mov
in
int3
mov
std
xchg
cwde
fdiv
hlt
push
adc
jecxz
std
jmp
popf
push
cli
pop
pushf
loop
add
mov
popf
sub
push
imul
mov
xor
(bad)
(bad)
cmp
mov
lds
push
mov
cld
jecxz
add
sub
ja
icebp
pop
inc
mov
dec
mov
cmps
sub
pop
adc
jmp
in
sub
sub
and
in
dec
lods
add
jp
mov
push
jns
popa
xchg
cmp
xlat
or
stos
sbb
jge
adc
dec
mov
xor
push
xor
(bad)
dec
push
xchg
test
xor
outs
mov
cs
cld
inc
sbb
pop
lea
jge
pop
lods
dec
sub
push
xor
daa
mov
arpl
pop
mov
(bad)
int
mov
jb
pop
cs
inc
adc
mov
or
cwde
bound
push
xor
fs
sbb
mov
or
pop
push
xchg
ins
mov
jp
neg
jmp
xor
sti
inc
inc
int3
or
ins
inc
lods
in
adc
mov
inc
gs
stc
add
lods
jl
mov
xor
jno
in
enter
pop
out
popa
cli
fsubr
xor
jmp
icebp
sti
push
retf
xchg
cmps
xchg
out
adc
add
pop
leave
loope
jmp
sbb
sub
mov
lock
movs
jp
arpl
lea
mov
test
fs
cs
sbb
std
mov
gs
ins
pusha
jne
sub
jnp
je
xchg
les
fisubr
mov
sbb
jmp
mov
sub
leave
inc
push
bound
fisub
stos
add
scas
mov
repz
lds
fsub
arpl
push
imul
inc
sub
sub
scas
ds
jb
pop
popf
or
shl
dec
(bad)
leave
div
mov
mov
ret
and
mov
or
mov
icebp
mov
int
stos
fnstcw
(bad)
xor
jmp
sahf
or
add
xor
inc
or
push
jp
retf
gs
jg
inc
dec
int3
and
ret
rep
cmp
ret
jnp
push
in
add
xchg
mov
pop
add
xchg
or
or
lea
int
inc
inc
outs
fmul
add
hlt
add
xchg
or
sti
sbb
mov
mov
ss
cmp
mov
aad
xlat
sbb
mov
dec
jae
mov
or
std
stos
out
mov
xchg
mov
out
dec
addr16
loop
jbe
xchg
pop
dec
fld
hlt
push
adc
repnz
nop
sub
cmc
(bad)
jg
aam
mov
mov
cmp
inc
jnp
test
push
jb
mov
popf
sub
sub
cdq
daa
out
daa
dec
push
xor
adc
(bad)
xchg
push
stc
enter
(bad)
adc
(bad)
out
mov
push
sub
fdivr
add
ret
xchg
js
das
enter
shl
sub
fld
cld
js
push
in
push
fcomp
adc
lods
out
lahf
adc
int
and
jbe
add
mov
ds
in
fstp
aad
rcl
setnp
movs
shr
sub
xchg
pop
push
retf
js
cmps
aas
sub
clc
inc
loopne
imul
ins
push
enter
or
push
xlat
cmp
inc
icebp
jmp
ficomp
in
mov
sub
repnz
jae
test
mov
movs
ds
add
mov
pop
repz
add
outs
xor
or
sar
jp
ins
imul
mov
and
jle
adc
mov
and
ret
jl
sub
out
jp
cmp
sbb
sbb
push
xchg
out
pushf
ins
test
(bad)
fsqrt
mov
or
stc
std
test
pop
inc
popa
cmp
out
imul
scas
jnp
(bad)
leave
sbb
xchg
pop
xor
es
inc
fwait
pop
jns
mov
(bad)
lods
loop
xchg
fisttp
inc
lods
or
cmp
fstp
aas
call
xchg
fwait
jmp
push
push
sbb
jbe
or
popa
pop
mov
mov
or
pop
xchg
cli
mov
(bad)
into
xor
or
ja
scas
inc
jae
jno
leave
sub
jge
push
xor
or
imul
dec
mov
xor
mov
retf
popf
fadd
pop
push
jmp
test
xchg
jl
xchg
push
cmp
or
stos
fsub
sub
cmp
mov
pop
adc
fwait
dec
jb
xchg
and
mov
(bad)
and
pop
pop
xor
jo
out
ret
test
fiadd
xor
sub
jno
lds
(bad)
cmp
jns
int
fild
bound
leave
xor
test
imul
leave
and
ret
int
push
and
cwde
out
call
push
je
mov
inc
fisubr
dec
cdq
add
pop
sub
mov
pop
scas
push
loope
xchg
popf
mov
fmul
idiv
inc
rol
pop
mov
int3
das
aaa
push
pop
adc
aas
xchg
retf
inc
gs
enter
and
(bad)
imul
cmp
sbb
xchg
aaa
jo
outs
outs
ins
sub
mov
and
(bad)
sbb
sub
mov
mov
jmp
xor
inc
and
dec
jne
sub
(bad)
add
push
mov
add
in
retf
loop
mov
adc
mov
cmps
xor
sbb
call
fwait
push
movs
push
or
push
(bad)
in
test
movs
cmc
xchg
and
xchg
jl
popa
les
xchg
(bad)
inc
int
mov
jb
pop
jne
jge
jbe
mov
jo
ror
arpl
loope
imul
mov
lods
mov
in
pop
mov
mov
xor
out
jmp
dec
lahf
sbb
or
out
out
sti
(bad)
mov
xchg
popa
fwait
jge
or
jge
call
adc
mov
inc
test
in
ins
jmp
sub
call
sub
push
xor
rcl
mov
sub
xchg
sub
(bad)
sub
and
fnstenv
in
or
pop
cli
push
and
fldcw
or
mov
mov
push
or
mov
mov
xchg
jmp
adc
int3
lds
mov
sbb
sub
imul
xor
adc
stc
xchg
jnp
or
movs
xchg
sub
xchg
add
test
mov
push
or
icebp
out
stc
cli
sbb
pop
in
lds
jmp
in
ds
cs
movs
repz
js
dec
push
mul
popa
push
or
push
and
adc
or
jl
and
mov
inc
cwde
retf
adc
mov
mov
jo
sub
mov
inc
jge
je
or
fiadd
push
jns
hlt
popa
xor
(bad)
or
mov
mul
mov
ret
lea
in
inc
adc
(bad)
jno
jl
pop
je
test
xlat
jne
xchg
jle
test
mov
push
jns
shl
jge
mov
xor
adc
shl
outs
hlt
cmp
dec
dec
ror
add
push
popf
xchg
lock
(bad)
stos
cli
cmp
inc
mov
xchg
mov
pop
push
out
push
outs
shl
ss
cmp
push
mov
inc
sbb
pop
enter
out
rol
adc
scas
sbb
loope
daa
in
repnz
adc
or
pop
and
fimul
xchg
xchg
lods
sub
jmp
fs
push
dec
fdivr
(bad)
repz
or
cs
push
leave
inc
mov
pop
xor
cmp
xor
jp
(bad)
xor
fist
mov
adc
(bad)
rcl
(bad)
jmp
jno
push
mov
jge
mov
jno
lds
aad
push
lea
ins
dec
jns
stos
push
or
out
(bad)
call
les
mov
jbe
(bad)
jp
sub
test
mov
sar
js
jbe
mov
sub
pop
xchg
fwait
sub
rcl
push
adc
jns
test
mov
mov
inc
sub
cmc
vpunpckhqdq
adc
mov
daa
jmp
cmc
scas
ret
jecxz
push
xor
test
fcomi
retf
mov
jmp
std
push
ret
fmul
sbb
lods
jno
mov
cli
aam
sub
cmc
or
imul
mov
sub
mov
cmp
cmp
xchg
call
cmp
imul
aas
cmp
mov
jg
xor
add
jb
icebp
jp
xor
add
add
scas
or
cld
mov
push
mov
push
push
sbb
adc
adc
adc
neg
aas
cmp
jmp
aam
jbe
inc
xchg
ds
sbb
pusha
imul
test
outs
rol
jne
sbb
sub
sbb
fist
cmp
dec
stos
bound
fwait
inc
jmp
dec
jo
or
test
call
jp
sti
test
lea
cmp
test
jno
aam
mov
sub
and
add
stc
xor
xchg
test
test
cwde
mov
iret
jg
add
popa
psrlw
retf
mov
sub
pop
mov
sub
shl
nop
shl
call
push
jb
aaa
cmp
dec
out
hlt
ja
sub
int3
aas
repnz
sub
jg
sub
sahf
adc
ins
sub
ret
setb
test
scas
and
sbb
mov
in
out
cmps
int3
adc
mov
xor
cmp
inc
mov
push
in
mov
ins
mov
imul
cmc
add
pop
xchg
enter
mov
mov
sahf
fs
xlat
call
std
push
scas
sub
test
xchg
xchg
ss
xor
and
int3
test
(bad)
mov
mov
push
mov
sar
in
pop
sbb
fs
fwait
xor
mov
inc
sbb
loope
sbb
(bad)
cmc
mov
mov
or
mov
xor
stos
mov
gs
sub
xlat
sar
cld
push
sub
test
jecxz
ret
mov
xchg
imul
mov
not
dec
lea
adc
outs
std
jmp
xor
cli
mov
mov
ret
xor
push
fdivp
cmc
(bad)
(bad)
mov
movs
adc
mov
leave
or
mov
jno
pop
cmp
sub
jns
loopne
popf
add
nop
mov
or
cli
ja
xor
sub
xchg
in
adc
shl
pop
sub
jp
jne
out
daa
aam
mov
in
xchg
nop
fwait
mov
add
xchg
pop
mov
cmp
cmp
imul
fild
das
in
cmp
mov
cmc
jg
fdiv
leave
(bad)
in
loop
jnp
add
test
push
sti
in
push
or
sbb
fcmovu
jne
ins
jo
pmaxsw
xor
cmps
or
es
inc
pop
sub
or
xchg
repnz
push
adc
mov
mov
fiadd
ret
inc
xor
inc
dec
xor
push
mov
movs
lahf
(bad)
aaa
mov
pop
mov
loope
pop
das
out
lods
sbb
sub
call
data16
lahf
jb
jb
leave
xlat
or
jbe
mov
xor
dec
fs
popa
movs
sbb
push
in
push
xor
jge
shl
mov
retf
add
mov
mov
(bad)
push
iret
aam
rol
test
xchg
loope
mov
sub
sar
xchg
pop
icebp
jp
shr
jae
ret
mov
cmp
pop
cmp
les
or
add
xchg
or
jmp
div
pushf
lods
sub
mov
dec
or
or
adc
out
iret
call
not
add
cmp
pop
push
pop
stos
inc
in
jg
push
xchg
add
inc
in
les
cmp
loopne
cmc
push
jb
cmp
dec
mov
movs
call
stos
mov
out
xchg
mov
pop
aam
fwait
leave
cmps
jne
(bad)
xor
sub
into
in
imul
jl
test
mov
cdq
inc
push
jge
sahf
push
push
mov
xchg
push
outs
es
clc
dec
loope
cmps
mov
dec
sub
add
aaa
and
int3
lods
fxam
into
xor
not
inc
cmp
mov
aam
loop
ins
fs
nop
sub
xor
bound
mov
push
imul
addr16
pop
std
or
clc
jbe
repz
mul
movlps
out
test
push
and
cmp
sub
add
adc
jge
cmps
adc
pop
lods
pushf
pop
xor
outs
dec
into
and
es
mov
sbb
dec
push
pop
popf
pop
sub
test
inc
xchg
std
fldlg2
dec
aaa
dec
jo
sahf
inc
sbb
push
mov
cmp
fidiv
push
call
imul
stos
jae
pop
pop
push
repnz
inc
or
mov
in
lods
cmps
pop
or
outs
add
cmp
cwde
sub
jns
mov
cmp
(bad)
mov
ror
pop
mov
adc
mov
ret
add
sub
push
test
xor
adc
adc
jmp
call
xchg
jae
pop
cmp
bound
jno
cmps
jmp
rol
imul
fiadd
mov
xor
and
sub
sub
xchg
mov
lods
sbb
mov
ret
ds
fisub
mov
call
or
cmp
add
push
stos
mov
jle
push
lea
ja
stc
enter
cmc
dec
retf
xor
in
jle
jg
sbb
ficomp
cmps
push
jo
enter
(bad)
js
cdq
es
fcmovbe
jns
push
inc
inc
cdq
xchg
jl
jecxz
iret
cmp
in
repz
sub
add
jbe
in
mov
jmp
xchg
lods
cli
in
dec
mov
pushf
mov
pop
mov
inc
jg
arpl
repz
setae
and
repz
add
out
inc
(bad)
jmp
imul
pusha
cmps
mov
loop
aam
loope
scas
dec
ds
cmp
mov
sub
pop
xchg
mov
xor
mov
jb
cmp
jecxz
push
dec
jae
(bad)
jne
xor
xor
ds
mov
(bad)
push
xchg
dec
add
ret
rcr
add
(bad)
pusha
data16
inc
jp
fwait
mov
fld
imul
and
jae
nop
test
sub
inc
sub
nop
adc
dec
pop
mov
arpl
sbb
pusha
push
imul
or
xchg
retf
ret
push
xchg
xchg
pushf
cs
cmp
push
mov
jbe
sbb
scas
sbb
scas
push
and
mov
loop
add
ret
outs
call
pop
aad
ficomp
sbb
scas
jne
shl
mov
sbb
pushf
jae
push
mov
call
aas
arpl
sub
leave
sbb
pop
loope
and
jg
ret
inc
call
popf
ins
(bad)
movs
push
adc
cmp
retf
(bad)
fsub
mov
cld
add
mov
sbb
adc
mov
push
add
in
scas
jmp
(bad)
xor
in
adc
out
push
and
ds
cmc
dec
add
xchg
icebp
loope
mov
or
and
pop
sub
icebp
cld
rcr
dec
adc
clc
imul
mov
dec
jb
or
fisttp
xchg
daa
mov
cmp
fwait
cmp
sub
xchg
inc
out
dec
test
inc
cwde
cmp
mov
jmp
xchg
and
mov
iret
add
xor
mov
sbb
popf
into
xor
out
adc
mov
das
pop
jl
push
repz
mov
stos
in
xchg
and
call
push
sub
add
jns
ins
in
push
mov
sbb
sub
mov
ret
(bad)
fsubr
(bad)
push
repz
or
loope
xor
mov
retf
mov
jns
clc
push
and
outs
lahf
cmp
stos
cmp
push
int
sbb
leave
xchg
sbb
jb
imul
adc
inc
xor
(bad)
(bad)
cmps
pop
sub
repnz
test
out
push
inc
pop
push
fisubr
and
bound
jns
and
dec
(bad)
repz
add
repnz
jne
push
sbb
loope
retf
jp
inc
push
dec
into
test
mov
add
or
jae
push
inc
in
pop
div
dec
cmps
mov
test
ret
enter
arpl
adc
in
sahf
lahf
fisttp
pusha
inc
xchg
ret
or
fcmovnbe
adc
fld
aam
sti
and
cs
cmps
leave
sub
daa
adc
xor
pop
dec
and
or
mov
das
push
inc
push
ds
std
jge
dec
fs
dec
inc
ja
jge
push
mov
jns
hlt
imul
es
or
call
retf
push
mov
out
mov
ins
test
or
jns
adc
test
mov
(bad)
retf
retf
push
adc
movs
pop
dec
(bad)
or
popa
or
add
jle
mov
push
jg
lahf
fs
into
retf
xchg
dec
sti
test
cld
js
in
repz
stos
mov
xor
rcl
fbstp
or
add
mov
adc
test
repz
mov
loope
xchg
das
lahf
xor
fldcw
call
mov
jb
jnp
cmc
pusha
(bad)
aam
xor
dec
int3
pop
inc
xor
int
dec
cmps
xchg
shl
not
std
push
imul
jp
sbb
iret
or
or
(bad)
pop
loop
imul
add
test
sbb
loope
mov
add
jne
ja
cdq
int3
and
pop
dec
jmp
adc
fs
adc
nop
cmps
cwde
std
mov
xchg
xchg
imul
xchg
cmp
or
adc
and
cmp
inc
addr16
mov
ja
sbb
push
pop
push
mov
xor
int
shl
ins
mov
xchg
es
addr16
sbb
pop
ins
sbb
sbb
xlat
sub
in
out
lea
mov
cmps
dec
test
fcmovu
mov
cmp
fadd
push
pop
jbe
and
lea
retf
cmps
mov
add
leave
push
and
pop
outs
repz
ss
and
sub
xor
rcr
push
jmp
loope
out
mov
adc
sar
cdq
cmps
sbb
outs
mov
leave
idiv
jp
xchg
xor
setae
dec
sub
pop
loop
jge
fdiv
push
push
cmp
or
and
in
lds
(bad)
outs
jmp
(bad)
(bad)
mov
jne
push
inc
ret
imul
jnp
inc
dec
in
or
ret
mov
cmp
not
xchg
dec
bound
dec
cmc
sub
add
(bad)
or
sbb
loope
jp
xor
cmps
sar
arpl
iret
imul
enter
push
in
in
cwde
inc
inc
dec
fcom
mov
int
push
fadd
adc
xor
mov
sti
daa
mul
adc
and
dec
fwait
mov
jno
cwde
cld
pop
push
or
and
add
pushf
enter
or
jp
add
xchg
or
xchg
ds
fcomip
fucomp
test
(bad)
addr16
es
jo
inc
pop
mov
sbb
xchg
in
call
out
test
mov
dec
ds
and
xchg
sar
out
fidivr
in
cmps
and
les
sub
ja
mov
pop
scas
imul
pop
lock
push
repz
push
leave
iret
xor
lahf
xchg
inc
and
repz
cmps
push
push
cmps
fbld
sahf
push
sbb
or
lahf
or
in
push
(bad)
dec
fld
shl
adc
cdq
lea
add
stos
pop
outs
rcl
pop
scas
in
out
rcl
sbb
std
xchg
clc
lds
mov
or
enter
ins
jae
pusha
js
add
retf
mov
out
cmp
cmp
jmp
cld
movs
retf
test
push
nop
cmp
sahf
cmp
sbb
and
movs
mov
in
out
daa
sbb
or
pop
rol
mov
aad
shl
add
mov
ret
loope
les
mov
pop
adc
and
or
scas
inc
adc
jecxz
push
add
ret
stos
in
stos
push
sti
jp
(bad)
dec
jle
in
dec
dec
xor
jecxz
mov
mov
lahf
mov
mov
mov
jecxz
ror
aas
mov
dec
stos
sar
xchg
dec
loopne
bound
and
ss
mov
enter
xor
push
call
sbb
pop
push
jo
inc
push
movs
repnz
aaa
cli
call
lods
imul
xchg
dec
mov
aam
lods
jmp
dec
push
aaa
pop
test
push
dec
jmp
adc
jle
cmp
jge
xchg
push
mov
std
ror
mov
inc
xor
adc
adc
sbb
aam
loopne
gs
in
out
es
pop
push
repnz
push
xlat
adc
xor
xchg
xchg
mul
(bad)
aam
ja
mov
rcl
movs
dec
inc
xchg
or
clc
in
add
icebp
pop
mov
push
or
mov
or
shl
lods
and
scas
ror
mov
inc
cmps
cmp
shr
xor
adc
sub
xor
jb
lods
movs
sahf
retf
mov
pop
addps
pusha
(bad)
adc
std
cmp
xlat
jnp
call
jecxz
scas
push
and
fcmovb
(bad)
jl
mov
push
sub
into
inc
cmps
adc
out
jp
push
push
movs
or
push
dec
cmp
and
xlat
jecxz
add
jmp
fs
scas
push
add
sbb
mov
sbb
mov
dec
xchg
dec
adc
daa
jle
xchg
nop
int3
xor
push
ficomp
mov
mov
sar
push
retf
cmp
add
mov
add
mov
sub
das
xchg
fild
ror
adc
fs
push
outs
sub
and
inc
(bad)
ins
fs
jmp
push
bound
js
inc
and
adc
(bad)
int3
push
jle
mov
mov
mov
cmc
cmp
test
push
leave
jl
fdivr
mov
lods
fidiv
pop
or
and
cmp
push
jb
pop
sbb
cwde
mov
fcom
push
jbe
es
or
clc
mov
outs
sbb
fisubr
cmp
add
movs
stos
shl
pop
cmps
mov
addr16
mov
and
pop
les
rcl
aad
out
push
sbb
test
push
gs
add
lods
inc
pop
push
push
pop
(bad)
push
xor
pusha
cs
mov
push
outs
scas
mov
scas
(bad)
call
inc
add
or
or
xchg
stos
add
sub
push
retf
mov
dec
cmp
mov
cwde
imul
cmp
std
mov
daa
ds
neg
mov
enter
pop
call
sbb
inc
xor
test
nop
xchg
(bad)
xchg
jle
pop
mov
add
sub
nop
xlat
lods
inc
jg
shl
inc
push
mov
mul
push
mov
mov
jp
in
cmp
cmp
mov
fnstsw
mov
xor
out
or
dec
outs
int3
dec
outs
mov
or
mov
out
fs
rcl
(bad)
out
mov
ins
dec
push
jg
jae
inc
out
mov
cmovp
pop
adc
rcl
xchg
mov
push
ret
sub
aam
inc
sbb
js
rol
imul
add
popf
sub
loop
inc
sub
mov
jo
inc
xbegin
xchg
jne
pop
popf
mov
inc
(bad)
mov
add
data16
pop
xor
sbb
pushf
adc
icebp
xchg
call
sub
xor
mov
sub
fiadd
rol
dec
cdq
pop
sbb
push
xor
cmps
cdq
ja
sbb
inc
dec
dec
ss
mov
pushf
xor
add
dec
add
and
(bad)
enter
cwde
hlt
ficomp
cmp
push
add
mov
outs
inc
jge
adc
popa
xlat
inc
pop
daa
dec
scas
sbb
lods
movs
push
icebp
push
aam
es
cmp
xchg
div
or
push
movs
sbb
cmp
mov
test
jmp
or
mov
test
dec
cmp
and
inc
inc
inc
mov
adc
push
ds
cmp
into
pop
xor
aas
adc
lea
mov
fsub
sbb
popa
mov
scas
dec
and
imul
into
and
cld
mov
pop
sti
jg
imul
fisubr
mov
jo
dec
push
movs
scas
daa
jmp
rcl
test
jo
js
mov
and
dec
mov
(bad)
adc
push
and
test
inc
cmc
xchg
and
xchg
mov
arpl
out
mov
push
or
imul
fdivr
inc
les
and
mov
mov
lods
push
call
mov
enter
retf
inc
or
imul
mov
mov
push
stc
or
les
mov
fdiv
fisub
mov
aam
cwde
gs
and
push
jne
inc
pop
xchg
mov
xor
stos
sbb
xchg
and
jmp
xchg
sub
sbb
mov
push
lea
sbb
cmps
repz
jae
xor
mov
xchg
mov
not
(bad)
out
push
add
mov
mov
rol
mov
jmp
leave
mov
push
aad
xchg
dec
adc
fisubr
rol
or
jecxz
sbb
popf
inc
jp
mov
xor
sbb
movs
cwde
sbb
mov
repnz
out
stos
sub
xor
sbb
cmp
jle
push
mov
ror
add
fisttp
sbb
mov
pop
inc
pop
outs
jo
or
jbe
inc
dec
mov
cmp
adc
lea
dec
mov
pusha
xchg
xlat
(bad)
and
push
clc
gs
xor
outs
xor
out
jecxz
mov
jno
or
pop
cli
jle
or
push
mov
mov
movs
jmp
imul
cdq
jbe
jecxz
fisub
mov
mov
adc
xor
repnz
add
mov
xor
arpl
dec
nop
mov
aaa
rcr
(bad)
call
push
fstp
aad
push
and
dec
and
cmp
lods
push
sbb
pop
push
fs
jmp
xor
push
mov
and
stc
mov
cli
push
mov
imul
ret
pop
mov
push
ss
ja
mov
iret
dec
(bad)
sti
mov
jno
push
mov
push
mov
mov
out
out
rcr
sub
es
xor
dec
(bad)
nop
aaa
sub
bound
inc
retf
mov
inc
imul
clc
cwde
inc
jmp
add
xor
xchg
and
movs
(bad)
icebp
sti
outs
movs
data16
pop
adc
cwde
repnz
mov
mov
fisub
mov
jnp
cmp
cmps
pop
leave
enter
push
add
jg
inc
jne
iret
push
mov
pop
out
test
xor
push
lock
mov
sbb
ja
sub
pop
mov
and
fcmovbe
mov
mov
ins
mov
dec
rol
enter
test
sbb
adc
pop
mov
arpl
shl
test
xor
dec
dec
mov
(bad)
repnz
ja
jbe
sub
mov
sbb
clc
cli
xchg
sub
sub
add
push
jnp
hlt
test
pop
push
idiv
ss
test
pusha
xchg
shr
pop
mov
sbb
push
in
out
nop
push
scas
mov
das
stc
push
ss
mov
add
xchg
retf
mov
mov
jp
xchg
mov
shr
dec
stos
jb
jg
int3
xor
push
or
xlat
adc
dec
scas
pop
mov
mov
add
in
popf
fimul
sub
adc
loop
nop
sub
out
shl
outs
retf
cmp
jmp
lea
mov
ret
stos
sbb
je
push
test
lds
mov
frstpm(287
sub
out
and
cmps
inc
(bad)
cmp
cmp
jp
pop
xlat
leave
imul
inc
add
arpl
test
not
aam
dec
sub
imul
loopne
jno
jns
push
out
push
xchg
sub
js
add
jge
popf
scas
pop
inc
dec
pop
dec
into
xchg
cwde
mov
sahf
adc
sbb
push
fs
jle
mov
and
mov
cdq
movs
sub
popf
cmp
rol
mov
or
imul
mov
jmp
movs
and
mov
jae
loopne
xor
cmps
leave
outs
or
dec
leave
mov
(bad)
repz
iret
jge
repz
int3
aaa
sbb
stc
mov
outs
push
retf
sbb
imul
fisubr
jo
mov
int
ret
pusha
pop
call
popa
out
jg
out
iret
shl
cmc
in
cld
in
xlat
sbb
and
icebp
dec
js
push
xchg
mov
sub
pop
sti
enter
shr
push
test
fistp
pushf
and
inc
test
fild
stc
lahf
daa
ins
mov
cwde
lods
jo
int3
retf
adc
ror
sub
mov
rol
in
gs
or
sub
fadd
test
mov
test
or
pop
ja
outs
ret
inc
xlat
xor
dec
fnstenv
(bad)
jl
cs
dec
or
sub
mov
xchg
call
sahf
hlt
daa
jne
add
push
mov
fcomp
ss
jae
jne
xor
and
cmp
and
pushf
adc
pop
mov
es
in
in
inc
mov
dec
pop
(bad)
repz
outs
cmp
cmp
daa
(bad)
jmp
push
xor
pop
frstor
add
movs
rcl
or
xor
add
iret
ja
cmp
retf
inc
mov
aas
inc
sbb
fidiv
push
cmp
jae
pop
comiss
push
cmp
pop
popf
mov
jmp
loop
xchg
test
fdiv
sub
xor
mov
cmp
sbb
jo
dec
imul
xor
xchg
leave
into
jle
fldcw
push
bound
xchg
xchg
sub
sbb
adc
mov
mov
or
fadd
fcom
mov
pushf
mov
inc
dec
mov
fsub
pop
jecxz
gs
dec
iret
push
xor
test
retf
xchg
test
dec
push
je
mov
adc
enter
bound
test
adc
push
cmc
mov
(bad)
scas
push
push
cmp
sahf
lods
sahf
push
imul
sub
aas
movs
call
jmp
fst
nop
jecxz
mov
out
fwait
mov
xor
jp
iret
test
int
xchg
xchg
mov
sub
mov
arpl
mov
ss
enter
xchg
pop
and
jmp
lahf
mov
test
pop
and
ins
mov
pop
out
jmp
sahf
stc
or
dec
push
sbb
in
dec
in
retf
enter
or
add
dec
aad
(bad)
neg
sbb
out
xchg
jae
call
cmps
retf
mov
cmp
inc
mov
scas
inc
or
jno
add
sub
fdivr
adc
cmp
(bad)
pop
jle
cli
jb
ja
jo
push
xor
xor
pop
enter
dec
mov
pop
out
outs
pop
(bad)
outs
(bad)
cdq
fbld
sbb
xchg
sub
repz
sub
hlt
cmp
cmp
mov
pop
xchg
addr16
daa
dec
mov
sbb
arpl
push
sub
or
cwde
int3
nop
js
or
xor
or
je
xchg
cs
fbstp
inc
inc
sbb
call
xchg
fist
xchg
pop
add
pushf
fistp
lea
add
xchg
mov
mov
pushf
or
xlat
cmp
push
pop
inc
xchg
dec
cmp
add
std
fstp
inc
and
movs
inc
dec
sbb
loop
push
cmp
sbb
shl
or
push
inc
pop
movs
repnz
or
fs
dec
xchg
mov
out
rol
cmp
mov
jbe
and
jp
movs
push
stos
jle
ins
add
fidiv
xor
retf
lds
xor
jmp
stos
retf
sub
das
inc
rcl
div
mov
in
ror
jns
xchg
jbe
out
sub
sbb
pop
or
mov
call
retf
(bad)
adc
xchg
xchg
sub
jmp
sbb
fistp
movs
shl
hlt
lods
aaa
and
cli
adc
sahf
push
sub
sub
mul
mov
and
or
cmc
mov
mov
pop
cmp
daa
(bad)
sbb
add
mov
pop
mov
mov
jno
sub
dec
enter
sbb
sbb
ret
mov
cmp
jbe
dec
jg
ss
xchg
add
mov
fiadd
mov
aad
sub
lahf
lock
xor
(bad)
out
pop
mov
fsubr
in
fild
and
fisttp
jae
daa
aam
or
or
dec
xlat
rol
mov
into
mov
push
add
sbb
and
fistp
lods
pop
adc
or
cmp
push
dec
sbb
in
stc
mov
jmp
adc
push
div
jb
imul
dec
dec
sub
push
jecxz
in
shl
and
adc
pop
xchg
jns
sbb
add
xchg
aas
daa
sub
(bad)
push
mov
int
sub
and
lahf
xor
push
sbb
scas
out
cmp
call
mov
(bad)
cmps
fs
mov
shl
dec
clc
mov
mov
psadbw
cmp
xchg
addr16
sbb
(bad)
cmp
inc
ss
ffree
data16
mov
jbe
dec
out
int
mov
push
fidivr
(bad)
cmp
jge
sahf
fistp
adc
sahf
loope
imul
and
out
cmp
lds
mov
mov
adc
imul
pop
stos
inc
mov
lods
dec
or
imul
cli
xor
rol
ror
movs
loopne
xchg
inc
lock
jo
jno
mov
loop
fcom
mov
lahf
pop
inc
and
mov
in
test
jle
mov
clc
cmp
and
inc
stos
jmp
or
xchg
mov
and
lds
in
or
sub
add
cld
call
cmp
xchg
call
test
(bad)
test
ss
pop
(bad)
test
aad
dec
cmp
pop
arpl
jae
repz
ror
call
or
lahf
mov
sub
jl
cmp
fadd
xchg
out
clc
dec
cmp
adc
xor
jb
mov
stc
or
mov
pop
jmp
cmp
inc
sbb
call
retf
sbb
(bad)
stc
push
jmp
pop
pop
(bad)
out
push
pop
aad
push
shr
stos
repnz
and
cmp
fisub
add
mov
aad
adc
and
xor
push
scas
sti
inc
gs
or
xor
mov
and
jecxz
pop
mov
sbb
(bad)
loope
inc
inc
mov
mov
cmp
cmp
clc
inc
(bad)
sbb
add
mov
add
adc
fadd
mov
jl
aam
sub
push
push
xor
ds
fs
test
pop
mov
mov
push
mov
push
jp
not
scas
iret
and
or
xor
movs
push
mov
push
cmc
xor
imul
jge
sar
jae
mov
pop
add
(bad)
ja
in
cmps
pop
mov
rcl
adc
enter
mov
scas
jmp
xor
jg
xchg
xchg
cli
xchg
mov
jnp
mov
into
call
or
mov
cmp
inc
xchg
fstp
cmps
test
fsubp
cli
aam
or
fist
sub
shl
into
shr
xor
or
adc
lahf
and
sbb
in
popf
or
call
pop
xor
loope
int3
lea
xor
jp
pushf
and
lods
cdq
inc
addr16
out
cld
clc
(bad)
les
imul
mov
jo
outs
mov
xor
(bad)
push
repz
add
call
mov
push
test
rcr
fcmovbe
push
mov
mov
arpl
das
push
je
cmps
mov
lods
sar
dec
or
test
xor
mov
add
dec
clc
sub
add
xor
or
bound
imul
ds
cmc
(bad)
mov
mov
inc
in
mov
int3
mov
cmp
push
stos
mov
repz
pusha
cmp
xor
pop
or
jl
mov
adc
mov
arpl
pop
in
xchg
ins
xor
adc
jb
iret
mov
jmp
pushf
call
sub
cmp
fld
sti
xor
add
std
xor
shl
dec
jno
scas
pop
data16
out
cmps
mov
sahf
and
das
jae
test
mov
(bad)
mov
mov
push
push
xchg
cmc
lds
cli
ret
mov
mov
inc
cs
sub
sub
mov
test
cmp
fiadd
jg
call
shr
aaa
xor
imul
and
dec
jo
add
lock
in
ins
xor
xor
movs
sub
mov
lea
or
test
and
xchg
dec
push
repz
jne
shr
push
sub
pusha
or
push
or
sub
push
sub
pushf
xchg
lods
jecxz
cmps
add
mov
mov
cwde
fisttp
adc
add
ret
pandn
adc
fchs
push
js
in
sub
stos
aam
test
aad
jb
fadd
(bad)
fs
or
xor
retf
loope
adc
call
popa
fistp
lods
push
scas
mov
add
sub
pop
mov
fisub
inc
es
and
mov
xchg
call
xlat
std
sbb
enter
and
pusha
xor
sbb
push
sub
mov
xchg
mov
xchg
pusha
cmp
and
(bad)
push
cmp
inc
in
mov
add
jmp
adc
jmp
jo
and
add
xor
xchg
pop
jle
fcom
adc
loope
add
mov
ret
mov
mov
scas
pop
adc
sbb
or
mov
ja
dec
ret
mov
push
push
pushf
fcmovnb
bound
imul
cli
mov
mov
or
pop
les
mov
mov
scas
aam
leave
fdivr
scas
les
shl
or
es
in
mov
jo
add
dec
push
sbb
mov
test
sub
aaa
sbb
jae
lahf
pusha
adc
jnp
mov
(bad)
xor
add
mov
(bad)
in
sbb
jmp
mov
xor
mov
push
out
call
pop
mov
mov
sbb
pop
lods
and
mov
ret
pop
and
pop
arpl
cmp
push
in
push
mov
daa
out
addr16
pop
clc
dec
pop
rcl
call
push
push
fadd
out
pop
mov
and
iret
es
xchg
js
and
cmp
inc
rol
add
jg
ins
adc
std
popa
dec
mov
out
call
pop
ror
push
leave
push
movs
std
push
repz
ds
pop
mov
adc
das
movs
loop
mov
or
sahf
cli
jge
mov
jp
jno
mov
xchg
inc
mov
ss
in
inc
inc
cmc
jno
stc
or
outs
enter
int3
mov
cld
cwde
adc
push
mov
lahf
xchg
(bad)
jmp
repz
div
mov
add
test
cld
icebp
imul
cwde
ds
test
sub
fisttp
dec
hlt
addr16
push
aad
jbe
pop
rol
scas
and
xchg
and
mov
in
mov
cwde
mov
add
fisub
scas
mov
and
xchg
daa
mov
sub
cmp
stos
(bad)
fdivr
push
xor
nop
imul
add
xor
push
mov
cld
jns
call
ret
das
into
push
fld
gs
icebp
and
test
setne
int
xor
dec
xchg
pop
call
mov
sbb
push
adc
ficomp
je
xor
add
inc
inc
jmp
hlt
scas
push
xchg
cli
fild
movs
xchg
arpl
add
or
dec
inc
pop
mov
cmps
inc
es
retf
inc
mov
adc
dec
iret
out
movs
or
sbb
jmp
icebp
and
pop
mov
adc
mov
push
and
test
aaa
xlat
call
xchg
cmp
mov
and
div
cmp
shr
push
sub
push
inc
shr
pusha
push
cdq
lds
cmp
xchg
cmp
call
xchg
sub
cld
pop
sub
arpl
call
pop
mov
retf
cmp
test
iret
jge
dec
jmp
add
addr16
push
pushf
imul
sbb
js
neg
icebp
lods
sub
in
test
hlt
add
imul
gs
and
sbb
mov
push
fistp
cmp
and
mov
pop
dec
paddsb
jo
stos
cmps
or
clc
repz
lock
dec
sub
push
mov
xchg
hlt
mov
sub
aaa
xchg
lods
lahf
mov
push
gs
mov
fisubr
sub
sub
sub
xchg
sbb
(bad)
sbb
jae
popa
cmps
adc
mov
inc
fadd
push
push
fadd
repnz
mov
std
sub
in
mov
or
jecxz
fsubr
aam
std
je
call
daa
cmp
int
out
inc
mov
add
sbb
jl
adc
cmp
xlat
sbb
mov
aaa
fdivr
jo
int3
cli
sahf
xlat
push
(bad)
mov
adc
pop
inc
mov
xor
jne
cmp
dec
mov
push
or
cmp
addr16
sub
cmp
aaa
ins
mov
pop
fild
mov
das
add
push
fidivr
cwde
in
inc
fs
mov
inc
scas
xchg
lods
loopne
retf
repnz
inc
jne
out
jbe
(bad)
(bad)
js
jb
mov
shr
mov
stc
mov
push
lea
test
nop
xchg
pop
bound
mov
mov
push
fs
(bad)
dec
test
pop
sub
pusha
xor
jmp
inc
xor
mov
dec
push
adc
add
sti
into
inc
pop
xchg
repnz
dec
jmp
mov
rcr
fld
fild
mov
sbb
jb
imul
retf
lea
popf
sbb
pusha
js
add
or
aas
pushf
les
xor
push
push
call
xchg
adc
out
push
out
add
xor
or
mov
test
hlt
push
xor
jmp
movzx
fs
pushf
outs
mov
stc
retf
mov
mov
and
out
mov
and
(bad)
mov
cmp
jmp
xchg
push
out
xchg
stos
imul
cmp
mov
bound
or
inc
test
lock
and
fs
mov
adc
pop
sbb
dec
inc
jp
adc
xor
xor
aad
push
jecxz
out
ss
fstp
mov
fdiv
dec
inc
push
sti
mov
in
leave
jl
sub
sub
sub
sbb
add
iret
jp
adc
adc
pop
(bad)
aas
in
scas
shl
jle
in
ficom
adc
retf
mov
jl
sbb
dec
dec
dec
sbb
fidivr
pop
bnd
xchg
fndisi(8087
shl
imul
mov
bound
arpl
data16
or
stos
mov
pop
adc
mov
push
(bad)
cmps
out
or
fstp
in
push
ds
popf
in
stos
enter
sbb
shl
scas
shl
pop
mov
push
ss
dec
in
jmp
test
mov
fwait
in
jg
cdq
push
cmp
cli
ins
aad
mov
jno
loope
(bad)
fwait
pusha
push
repz
xlat
je
retf
icebp
push
jecxz
lods
cdq
sar
cs
fcmovne
jnp
mov
pop
mov
int3
mov
push
je
sub
pop
adc
push
or
add
adc
push
xor
sub
cli
and
jne
mov
add
cmps
pop
scas
xor
push
adc
adc
xchg
adc
int3
mov
cmp
outs
sub
sbb
and
(bad)
sub
call
mov
iret
mov
mov
mov
add
cdq
push
fst
push
pop
retf
mov
push
pop
cmp
cmp
or
lods
inc
add
dec
fwait
bound
dec
push
jmp
outs
iret
jb
je
inc
sbb
icebp
popa
xchg
cdq
ds
jo
cld
out
sar
xchg
pop
jp
sbb
push
or
push
push
out
add
mov
or
loope
xor
(bad)
fcom
jle
ins
mov
cmp
push
push
cmp
cs
mov
sahf
dec
inc
fcmovbe
sbb
sahf
add
sub
mov
mov
daa
imul
jg
repnz
test
xlat
pusha
sub
push
sbb
fwait
and
inc
push
hlt
mov
popf
or
loope
imul
js
(bad)
repnz
xor
sahf
add
sbb
outs
push
add
inc
imul
ins
into
(bad)
clc
scas
fnclex
cmp
push
and
xchg
add
call
push
cs
sub
xchg
sub
and
mov
dec
sti
mov
cs
in
pop
jg
xchg
sub
out
and
aam
loop
hlt
or
and
or
jns
aam
xor
pop
ret
out
dec
in
mov
sahf
mov
je
jbe
fisubr
mov
adc
sbb
sub
mov
js
jmp
mov
(bad)
out
movs
pop
popf
lahf
jo
mov
(bad)
nop
jb
cli
sub
cld
cdq
bound
and
cmps
sti
mov
mov
cmps
shr
hlt
xchg
dec
rcl
(bad)
push
xor
jmp
call
xor
jne
or
stc
test
and
mov
inc
cmps
jae
shl
gs
mov
inc
loope
adc
mov
adc
int
adc
shl
cmp
jecxz
mov
ror
cmp
scas
pop
ror
rcl
mov
mov
push
lods
jecxz
inc
outs
pop
sbb
pop
push
push
sbb
push
das
ja
cwde
or
clc
adc
repnz
jp
xlat
ficom
mov
repz
jl
aad
ins
push
fidiv
or
(bad)
xchg
ds
adc
mov
or
inc
mov
xchg
xor
push
mov
(bad)
jg
xor
cs
dec
xor
mov
xlat
push
mov
mov
xchg
adc
sbb
cmp
push
jl
cmp
xchg
(bad)
push
cmc
xchg
xor
out
inc
test
push
jns
lock
or
pop
in
xchg
push
das
scas
hlt
pop
add
stc
daa
push
mov
jl
outs
mov
mov
xlat
test
adc
adc
lods
out
rdpmc
mov
sub
inc
ret
ror
std
movs
pop
or
push
mov
cmps
(bad)
out
jmp
xchg
fisttp
cmps
pop
(bad)
(bad)
and
xchg
ret
leave
out
mov
push
lods
sbb
jp
and
sti
movs
clc
add
jbe
jmp
and
adc
add
inc
lods
sub
scas
jp
sub
int
sub
(bad)
cmp
add
mov
test
sbb
icebp
sahf
test
xor
lea
in
sub
pop
arpl
xlat
xor
push
cmp
lock
out
pop
cli
bound
or
aas
jae
icebp
jb
mov
js
sub
mov
jbe
cdq
jp
dec
sbb
mov
std
jmp
push
mov
(bad)
inc
daa
iret
addr16
inc
mov
sub
mov
mov
mov
mov
sub
mov
sub
mov
sub
inc
xlat
test
push
test
lods
(bad)
jno
mov
pop
data16
lods
dec
push
outs
jbe
push
mov
neg
or
jecxz
cdq
pusha
call
mov
inc
imul
xor
pop
xchg
ret
clc
xchg
aam
sbb
hlt
cmp
jmp
sub
jl
pop
loopne
fild
add
adc
push
arpl
mov
ins
cld
jmp
test
fnstenv
mov
push
push
and
jo
xlat
or
lock
push
aaa
scas
cmp
cmp
sub
shl
(bad)
sub
dec
(bad)
into
inc
addr16
cmp
retf
xchg
xor
cmp
mov
mov
dec
popa
dec
lds
scas
ins
call
jbe
fs
jns
int
test
gs
push
fidivr
inc
or
nop
mov
sub
pop
mov
int3
test
imul
inc
test
adc
inc
jge
mov
mov
test
mov
mov
mov
mov
pop
retf
cmps
mov
push
ins
sbb
mov
sub
out
call
out
popf
jg
dec
test
push
pop
lods
js
imul
jmp
jge
stc
repnz
mul
repz
fsub
sar
loope
pusha
xchg
in
scas
xor
daa
sar
inc
cmp
pop
mov
inc
jl
sub
cld
adc
push
push
adc
int3
inc
inc
xor
pop
lahf
sbb
rcl
mov
outs
fdiv
push
aam
stos
loop
push
or
(bad)
mov
cld
(bad)
sti
jecxz
or
dec
mov
xchg
lds
xor
call
loope
xchg
dec
add
call
jmp
stos
mov
movs
push
cmp
mov
sar
psubusb
inc
inc
mov
add
add
mov
push
test
mov
pop
aas
or
scas
cmp
call
imul
cmc
mov
dec
pop
fwait
mov
or
outs
mov
pop
sbb
adc
ror
int3
add
mov
cli
cmc
add
xchg
and
ss
repz
outs
pop
jle
cmp
mov
pushf
mov
call
movs
xchg
dec
fucomp
gs
sbb
inc
sub
mov
fs
xor
push
mov
dec
ds
push
dec
stc
or
scas
std
daa
mov
clc
daa
cld
push
inc
jno
push
loop
adc
popa
cmp
popf
xchg
xor
pxor
ins
fs
fmul
lods
aad
mov
xchg
mov
sbb
dec
mov
pop
stos
pop
pop
mov
push
sub
xchg
cmc
test
nop
daa
mov
mov
iret
mov
pop
ret
fdiv
cmps
leave
sbb
xchg
jo
(bad)
mov
mov
ins
cmp
fdivr
into
mov
push
jmp
lds
sar
sbb
popf
jmp
or
cmp
nop
cwde
dec
xchg
sub
mov
leave
rol
fisttp
cmp
out
test
ja
adc
mov
shr
movs
pop
sbb
cmp
cmps
push
jbe
pop
and
and
xchg
sbb
fsub
mov
bound
call
push
mov
bound
in
mov
arpl
or
int
das
out
pop
cdq
mov
inc
loopne
sub
mov
mov
sub
repz
loopne
cmp
sub
leave
push
sbb
data16
jns
mov
pop
and
loop
loop
jp
les
inc
pop
hlt
inc
fidiv
inc
mov
(bad)
mov
or
xchg
pop
fisub
mov
pushf
cmc
cs
add
or
pop
sbb
aad
inc
bound
ins
sbb
inc
pop
xor
retf
adc
dec
div
shl
ins
jae
mov
fstp
xor
pop
(bad)
(bad)
add
std
jne
std
add
aaa
je
shr
xchg
mov
jb
repnz
xor
ds
jo
stos
xchg
retf
and
cmc
movs
jl
dec
cmc
test
push
aaa
pop
xor
nop
pop
xor
mov
or
xchg
jns
fs
jnp
inc
imul
sbb
gs
dec
cdq
loopne
aam
pop
sbb
fs
inc
push
aam
sbb
add
jae
dec
mov
jne
aad
xchg
cmps
sub
push
pusha
jae
dec
repnz
stos
vpackuswb
xchg
pop
mov
movs
loope
jp
adc
sahf
cdq
mov
fnsave
mov
stos
ficomp
clc
xor
(bad)
shr
or
bound
xchg
adc
(bad)
rol
and
push
nop
icebp
xor
xor
cld
mov
in
adc
push
jae
sahf
aas
dec
stos
int3
push
mov
jo
jno
adc
push
jle
retf
xchg
out
(bad)
leave
outs
jge
icebp
cmp
or
rcr
pop
push
cmp
adc
inc
lds
jge
ret
into
sub
mov
fisttp
mov
pop
pop
inc
es
rcl
jnp
pop
bound
loop
adc
jno
jle
imul
mov
fistp
pushf
ins
leave
cmp
xchg
mov
xor
nop
add
(bad)
shr
(bad)
(bad)
cmp
shr
aaa
jnp
shr
xchg
stc
scas
retf
pop
mov
xor
xchg
mov
push
aas
cmc
fild
xchg
sti
loopne
push
mov
push
mov
adc
push
mov
sti
adc
mul
imul
call
call
mov
iret
scas
fidiv
aaa
fstp
mov
sar
ror
sti
call
lods
xchg
sti
sub
xor
or
mov
sbb
sbb
cmc
cmps
sub
popf
loop
mov
fwait
adc
jle
pushf
push
inc
fisub
mov
in
dec
push
push
push
test
adc
std
jg
jno
daa
mov
pop
dec
inc
pop
xor
leave
xchg
mov
jmp
dec
pop
xor
repz
in
loopne
jmp
pop
inc
or
jnp
idiv
nop
xor
jp
test
dec
sub
or
and
stos
xor
aam
adc
(bad)
nop
shr
ret
and
lea
sub
mov
in
sub
in
push
inc
adc
cdq
lock
jno
jne
div
fmul
push
cmc
mov
lea
push
dec
mov
mov
or
out
cmp
jae
push
shr
and
outs
inc
xchg
xlat
xchg
add
inc
loop
sbb
pop
adc
xor
std
add
dec
dec
in
shl
inc
psrlw
pop
daa
sbb
adc
fldenv
daa
adc
jno
xchg
sub
add
inc
jae
xchg
cs
mov
(bad)
retf
(bad)
in
or
pop
movnti
out
retf
inc
dec
sbb
out
sbb
mov
jmp
lds
sbb
(bad)
push
cwde
mov
jecxz
lea
enter
add
jmp
test
inc
or
outs
in
das
retf
push
inc
jge
icebp
out
pop
movs
js
mov
popa
ror
sti
pop
jg
sbb
or
inc
out
jecxz
movs
cli
sbb
jbe
stos
cmp
inc
(bad)
push
inc
pop
push
add
sub
mov
pop
xchg
inc
mov
(bad)
ficomp
mov
or
jle
stos
scas
and
xor
jae
or
xor
mov
outs
retf
hlt
jb
(bad)
adc
pop
xor
xchg
pusha
scas
and
sbb
arpl
mul
jle
hlt
pop
(bad)
mov
les
cmp
push
adc
jns
pop
ds
data16
scas
mov
fistp
jnp
test
sub
mov
js
sar
inc
int3
pop
jmp
imul
push
retf
imul
cmc
loop
movs
dec
and
lock
sub
icebp
mov
push
stos
mov
inc
cli
js
xchg
movs
outs
lea
jmp
inc
cmp
or
bswap
retf
add
lock
pushf
dec
and
sub
mov
out
lods
test
mov
and
mov
and
lods
mov
inc
xlat
pusha
or
(bad)
retf
ret
jns
les
pop
dec
aaa
dec
idiv
sub
mov
imul
test
jb
(bad)
jmp
mov
imul
inc
pusha
fidivr
mov
sub
std
push
pusha
inc
test
adc
xchg
mov
pop
in
xor
or
push
pop
mov
call
mov
mov
outs
outs
fcom
popa
bound
jp
test
popf
adc
dec
jnp
mov
mov
test
sbb
dec
call
push
jns
fistp
xchg
hlt
xlat
fist
retf
adc
or
jns
pushf
pop
shl
mov
scas
xchg
nop
inc
add
stc
dec
inc
sub
int
xor
cmp
imul
data16
jmp
scas
and
push
jge
ja
cs
sar
push
arpl
add
lds
rcl
fnstsw
fcom
ret
push
mov
mov
leave
dec
pop
stc
leave
es
(bad)
mov
adc
mov
xor
imul
loopne
stos
je
outs
cmps
in
cli
xor
ror
pop
xchg
push
je
jnp
push
ja
add
inc
out
jbe
jnp
adc
fwait
stos
dec
fwait
or
dec
sbb
jmp
mov
test
retf
fiadd
call
inc
into
pop
(bad)
adc
jmp
outs
pop
xor
clc
pop
add
mov
(bad)
sbb
cmp
sub
es
retf
js
push
cmp
out
retf
retf
outs
ins
pop
jbe
aaa
mov
icebp
outs
pop
call
movs
push
sub
in
pop
mov
xor
stos
sub
std
repz
loopne
test
mov
xchg
idiv
inc
imul
test
pop
icebp
cmp
into
dec
ins
icebp
popa
mov
jge
inc
aam
jp
cwde
sbb
jae
fmul
retf
mov
test
mov
icebp
mov
cmps
aaa
sub
adc
push
adc
dec
das
adc
add
sub
dec
pop
sbb
stos
jl
les
vpperm
leave
jl
outs
mov
(bad)
xor
bnd
inc
push
int
dec
dec
pop
sub
or
dec
pop
out
mov
jle
fidivr
pop
pop
loop
cwde
retf
out
retf
push
fcom
bound
test
dec
inc
mov
jnp
mov
jb
or
inc
add
push
pop
dec
cdq
ja
or
inc
sar
jge
aad
in
test
neg
mov
jmp
repz
psrlq
hlt
shr
test
scas
ds
aas
jmp
dec
je
mov
sbb
add
nop
pop
push
sbb
push
test
mov
jbe
adc
leave
push
in
gs
out
test
hlt
test
mov
mov
cli
and
cmps
mov
sub
sub
mov
sar
fadd
inc
hlt
xchg
(bad)
cmp
ret
test
inc
scas
xchg
in
cmc
and
xor
xchg
cmps
call
sahf
xor
jg
pop
movs
push
mov
xor
push
in
out
fcom
je
stc
pop
sbb
fldcw
in
mov
jmp
adc
jl
lds
out
ret
out
ja
leave
mov
out
mov
sbb
jb
and
les
es
xor
(bad)
jo
push
inc
(bad)
icebp
test
xchg
es
out
mov
push
ret
sbb
fmul
ret
xchg
test
daa
fnsave
push
pop
jg
push
jmp
loop
mov
(bad)
fdiv
mov
pop
push
and
jge
std
xlat
mov
pop
nop
data16
push
sub
jecxz
inc
(bad)
(bad)
lods
idiv
adc
div
repz
mov
nop
vpsllq
sahf
shr
and
dec
mov
mov
mov
mov
xchg
arpl
cmp
pop
adc
fisub
sub
and
(bad)
pop
xor
fist
cmp
loopne
and
ins
cmp
cmc
jmp
shl
xchg
push
loopne
test
imul
sbb
sahf
mov
mov
adc
xchg
jl
daa
add
push
sbb
jne
push
fs
add
js
pop
hlt
and
jbe
jnp
call
xchg
dec
loop
xchg
iret
mov
sbb
jb
(bad)
out
ror
push
xchg
lahf
leave
jae
mov
lea
rcl
jbe
(bad)
shl
xchg
ret
popf
adc
mov
enter
mov
xor
sub
cs
pop
mov
dec
add
cli
mov
mul
popa
dec
mov
retf
xor
push
push
dec
and
add
pushf
jae
pop
sti
rol
xchg
mov
pop
pushf
xchg
enter
or
ret
popa
push
sub
test
sahf
and
hlt
aam
pop
gs
outs
jns
dec
das
unpcklps
popa
xlat
es
sub
mov
cmp
fwait
shr
in
mov
jmp
rcr
cmp
cli
inc
cs
sub
fistp
lods
lods
aad
push
jb
(bad)
scas
and
lea
push
in
push
pop
fldln2
or
jnp
xchg
(bad)
dec
inc
imul
in
mov
push
fiadd
lea
fcmovu
repz
nop
sub
xor
movs
mov
outs
xchg
js
sbb
xor
inc
push
jmp
jmp
pshufw
cmp
pop
cli
pop
je
mov
ins
adc
cmp
push
push
adc
dec
mov
adc
call
pop
xor
pop
push
sub
jmp
arpl
and
aaa
(bad)
cmps
sti
xor
ja
les
mov
scas
pusha
test
mov
arpl
push
or
xor
jne
mov
and
sbb
cmp
int3
dec
cmp
iret
popf
lea
xchg
movs
pop
xchg
out
xor
inc
dec
imul
xor
mov
hlt
(bad)
retf
mov
mov
inc
test
dec
test
mov
fisubr
mov
mov
jmp
add
push
repz
nop
adc
push
pop
lea
mov
mov
loop
mov
or
data16
rol
push
pop
sbb
adc
or
rcr
int3
test
xor
and
add
jmp
in
sbb
mov
mov
push
aas
adc
mov
sbb
add
mov
fiadd
xchg
hlt
adc
je
movs
adc
sahf
movs
push
call
or
rcr
jne
in
mov
dec
and
aam
cmp
arpl
xchg
sbb
rol
mov
mov
int3
cmp
push
xchg
inc
push
mov
xor
push
fs
jmp
call
pop
pop
push
pop
push
test
mov
(bad)
lods
aad
or
es
pop
mov
mov
sub
sti
inc
inc
not
repz
out
cwde
out
and
push
stos
push
mov
mov
add
test
jg
mov
fdivr
aas
mov
in
rcr
daa
jecxz
adc
fild
aam
pop
pop
and
repnz
aas
push
xchg
ss
int3
fld
pop
js
(bad)
and
pop
add
or
pusha
ret
out
loopne
jno
cmps
adc
je
ds
push
mov
(bad)
(bad)
int3
xchg
sub
xlat
cli
jg
xchg
movs
jo
sub
shr
xor
int3
ret
repz
or
femms
add
cmps
pop
repz
push
pusha
mov
pop
nop
adc
scas
mov
push
pop
jae
dec
sti
push
ins
(bad)
call
js
inc
js
in
push
cli
cld
sub
fdivr
repnz
jne
sbb
cmp
leave
repnz
idiv
scas
inc
jb
popa
mov
scas
cmp
enter
adc
popa
test
push
ins
cmp
leave
pop
mov
push
into
add
fdiv
and
test
sbb
out
or
adc
or
cmp
iret
lods
push
add
inc
mov
jae
mov
inc
ja
mov
mov
mov
dec
sahf
mov
jecxz
and
adc
stos
dec
inc
xchg
(bad)
arpl
shl
in
dec
pop
push
cmp
or
scas
mov
fwait
into
lock
jp
xor
fidivr
push
loope
lods
out
addr16
inc
inc
aad
bound
aam
retf
push
sbb
stc
loopne
rcr
mov
jle
jmp
sbb
mov
or
in
ret
jne
fsub
mov
adc
pop
(bad)
aad
movs
jnp
add
js
cmp
fldcw
push
in
int
pop
add
ficom
cmc
js
(bad)
mov
adc
popa
pop
das
mov
pop
and
cmc
inc
adc
mov
(bad)
jg
mov
push
iret
mov
lods
cmp
adc
daa
push
dec
ss
xchg
mov
cmp
cmp
daa
ja
(bad)
ficomp
hlt
cmp
cmp
adc
das
in
sbb
ror
scas
jnp
sti
and
leave
bound
data16
retf
mov
xor
xchg
dec
(bad)
xchg
rcl
pop
xor
mov
in
cdq
inc
push
dec
add
xchg
dec
dec
jg
mov
push
mov
or
sub
fst
fidivr
mov
mov
lods
repnz
pop
repz
rcr
outs
pusha
popa
sbb
push
inc
popf
div
ins
mov
push
mov
outs
jo
data16
fnstsw
cmp
loop
cdq
jmp
scas
cdq
and
xor
or
adc
cs
adc
adc
jge
mov
push
mov
sbb
dec
fucom
sbb
xchg
mov
jg
dec
das
pop
mov
arpl
in
pop
dec
and
pop
mov
mov
inc
pusha
adc
aas
sub
fnstcw
enter
lock
and
pop
imul
icebp
jns
inc
cmc
lock
cmp
jno
(bad)
sahf
mov
ss
scas
or
mov
dec
mov
and
jg
imul
pop
cwde
out
mov
sub
sbb
lods
sub
xchg
dec
aad
dec
mov
lods
mov
fmulp
sbb
sub
dec
and
xor
inc
pop
movs
std
xor
repnz
js
setbe
js
fidiv
push
mov
scas
pop
shr
inc
mov
ins
mov
push
push
(bad)
xchg
in
sbb
mov
sbb
dec
(bad)
push
test
stos
retf
xor
hlt
pop
sbb
dec
dec
(bad)
ja
push
pop
mov
xchg
imul
xor
out
adc
cmps
add
mov
mov
xchg
shl
mov
lock
mov
call
jl
jno
and
retf
cmc
out
push
cmp
add
sub
mov
nop
sub
xchg
enter
stos
fwait
inc
enter
mov
cmp
fisub
mov
mov
sbb
movs
and
jg
sbb
mov
jle
shr
fucom
imul
sub
adc
adc
movs
aad
lds
mov
xchg
not
test
jb
and
pop
movs
inc
and
in
out
inc
push
fst
jno
cdq
je
mov
ins
sub
mov
enter
data16
popa
adc
adc
fidiv
pop
dec
mov
pop
jne
mov
adc
pop
cmp
xchg
retf
or
push
fidiv
pop
je
fwait
mov
retf
push
mov
bound
dec
cmp
pop
add
add
adc
mov
fs
ret
cmps
sbb
fwait
push
inc
jl
clflush
dec
cmp
jnp
mov
xchg
cs
sub
loop
xchg
pop
retf
fidiv
into
ds
inc
xor
or
rep
(bad)
mov
add
adc
inc
aaa
and
aas
inc
ror
inc
movs
mov
push
call
int3
fsubr
rcr
mov
(bad)
jo
ret
dec
xor
rep
aas
ins
and
outs
idiv
out
cs
es
and
(bad)
bound
test
cs
sbb
push
sub
add
js
sbb
in
out
mov
sbb
dec
push
(bad)
(bad)
ss
in
hlt
inc
rcl
(bad)
(bad)
call
adc
aam
iret
sub
(bad)
mov
cmps
cli
dec
popa
ja
movs
fisub
sbb
inc
adc
lods
jp
adc
mov
or
adc
daa
or
ds
out
inc
sahf
shr
pop
or
mov
cmp
aad
sub
mov
mov
cmp
call
cmc
pop
cs
adc
mov
daa
push
jecxz
call
out
cmp
hlt
shl
pop
push
sub
sti
and
in
xor
call
sar
add
push
mov
add
and
adc
leave
pop
inc
inc
test
mov
jo
sub
and
fs
outs
mov
xchg
cli
and
clc
sub
mov
call
jge
xchg
jmp
dec
inc
movs
repz
clc
inc
jle
add
call
jbe
data16
div
pop
div
fiadd
dec
dec
les
cld
ret
pusha
push
adc
mov
and
ficomp
loopne
mov
adc
scas
jbe
inc
jo
out
lahf
in
xor
jg
mov
sbb
lods
cmp
add
jnp
push
out
jne
pop
jp
test
pop
aaa
sbb
jbe
adc
dec
jno
in
sub
in
xchg
or
mov
outs
mov
add
sbb
scas
pop
mov
pop
xchg
cmp
(bad)
loope
or
xchg
jo
lahf
pop
cli
mov
jns
add
or
xlat
pop
sbb
push
add
imul
pop
and
inc
xchg
stos
retf
sub
or
loopne
sbb
push
cdq
adc
cmc
nop
in
ror
mov
scas
and
adc
jmp
je
pop
call
nop
hlt
pop
stc
ins
fwait
xchg
cmp
(bad)
std
outs
pop
jmp
enter
cmp
sub
cmc
adc
ins
rcl
sbb
mov
test
push
pmulhw
stos
in
mov
iret
das
mov
loop
xchg
lahf
retf
pop
cmp
cmp
push
stc
jno
adc
xor
nop
sti
not
pushw
lods
mov
jmp
dec
mov
jle
or
popa
cmp
jle
inc
fld
add
fisubr
ins
push
lods
xor
and
jo
mov
mov
dec
inc
in
and
dec
enter
ffree
or
(bad)
push
fucom
mov
mov
sbb
pop
xchg
mov
jecxz
mov
and
jmp
mov
out
mov
push
push
pop
inc
or
int3
mov
mov
push
sbb
xchg
aas
inc
arpl
xchg
jmp
xchg
popa
add
(bad)
push
inc
mov
lock
enter
aad
inc
xchg
fwait
aad
xchg
scas
imul
or
or
sub
gs
arpl
jmp
in
cmc
sbb
mov
test
jns
mov
std
push
push
movs
or
mov
mov
arpl
stos
dec
cmp
xor
or
dec
mov
mov
cmp
cmp
fnstenv
ds
jge
fcom
adc
and
xchg
pop
sbb
lods
aad
inc
jbe
jo
inc
mov
push
mov
hlt
xor
inc
jl
imul
mov
rcl
scas
or
outs
repz
xor
outs
cmps
retf
das
adc
dec
xchg
sub
push
mov
cmps
sbb
sbb
outs
loop
push
add
loopne
sub
aad
or
pop
xor
retf
sbb
cmp
stc
mov
push
ret
jmp
ins
sub
add
add
cmc
dec
adc
sbb
leave
mov
retf
jb
or
movs
sahf
push
stc
sbb
cmps
popa
pushf
cdq
xor
jp
xor
push
cmp
dec
aaa
pusha
jg
clc
arpl
lods
push
mov
sub
fldenv
dec
dec
mov
cmp
shl
sub
sub
mov
mov
push
ins
hlt
mov
idiv
pop
sbb
cmp
jmp
out
js
stos
out
push
mov
jge
pop
in
fs
inc
dec
jbe
aam
leave
xchg
sbb
or
dec
retf
(bad)
retf
and
stos
cmps
(bad)
xor
cwde
push
xor
int3
push
add
add
pop
cmps
and
ror
(bad)
pushf
dec
sub
cs
mov
loope
outs
pushf
int
push
mov
push
cmp
inc
cmps
pop
addr16
mov
test
imul
mov
out
mov
xchg
sahf
scas
shl
push
lea
push
dec
mov
and
into
xchg
ret
mov
mov
add
js
or
imul
outs
mov
stos
push
fdivr
and
push
dec
sti
jnp
outs
pop
push
push
dec
out
cmp
repz
std
leave
fdivr
mov
fild
and
cdq
les
mov
lods
jo
inc
xor
test
xchg
mov
pop
cmp
jnp
pop
inc
pop
mov
pop
adc
xchg
cmp
jno
dec
fild
std
mov
repz
adc
fstp
test
mov
sbb
and
gs
loopne
xchg
ror
in
scas
pop
mov
dec
pop
jae
jne
inc
call
popf
cmps
fisubr
mov
pop
int
pop
push
gs
jl
mov
repz
add
pop
adc
add
and
out
mov
jecxz
mov
push
enter
and
jp
test
ret
lock
div
lods
sti
int
add
xor
mov
jno
pop
dec
cmp
pop
cli
ret
jmp
mov
mov
retf
dec
rcr
mov
(bad)
call
push
cmp
or
popa
xor
in
xchg
call
das
or
rcl
or
(bad)
sbb
call
out
jmp
clc
fcmove
xchg
cmp
pop
gs
aad
or
je
mov
mov
mov
xor
das
jne
jecxz
test
call
add
push
sub
lds
cwde
jns
sbb
mov
repnz
cdq
(bad)
pusha
lock
mov
mov
pop
mov
ins
(bad)
sbb
mov
lds
repnz
ret
cs
mov
popa
push
push
mov
cdq
cdq
fld
sbb
scas
mov
xor
dec
jmp
icebp
mov
xchg
stos
dec
pop
jo
out
pop
sti
aam
cmp
or
rcl
add
inc
data16
and
or
push
ret
call
ret
icebp
std
mov
inc
pusha
aas
in
popf
das
push
test
test
neg
fcomp
jg
leave
pop
jl
add
movs
ror
sahf
dec
mov
(bad)
xchg
cmps
sbb
sub
pusha
jmp
sub
cmp
dec
mov
out
scas
out
pop
adc
cmp
lea
je
mov
(bad)
retf
test
and
mov
and
xchg
(bad)
std
and
out
cmp
jnp
push
scas
movs
jge
es
xlat
stos
(bad)
jb
dec
popf
add
dec
fldcw
or
neg
inc
daa
shr
jle
jp
pusha
je
jmp
fsub
mov
inc
stos
jmp
mov
dec
scas
gs
dec
or
rcl
mov
or
push
dec
jge
ja
leave
sahf
pop
jne
pop
test
pop
inc
bound
sti
lea
cmp
mov
in
daa
retf
enter
es
ret
mov
in
inc
and
jg
ds
mov
les
xchg
cmps
aas
test
cmps
mov
test
in
xlat
ins
outs
cmp
cmc
push
cwde
xor
fdiv
mov
dec
cld
add
push
(bad)
mov
clc
and
sbb
loopne
adc
and
cwde
mov
lods
les
cmp
mov
jae
aas
mov
shr
loopne
mov
dec
in
int3
arpl
or
or
xor
fld
cmp
cdq
(bad)
jmp
movs
xchg
cmp
aam
cmp
fadd
sahf
ret
in
mov
adc
jecxz
mov
fwait
adc
inc
popf
popa
or
mov
and
jns
pop
stc
lock
xor
jmp
addr16
daa
ja
inc
mov
xchg
daa
mov
pop
or
pop
ins
cmp
das
and
push
adc
xchg
xor
push
or
sbb
imul
inc
dec
dec
sar
jle
or
rol
cwde
rcr
popf
loop
add
mov
pop
repnz
pop
sub
std
xor
mov
sbb
loopne
imul
icebp
add
leave
repz
inc
aam
sbb
xlat
and
repz
xchg
lods
add
xchg
fcom
enter
and
(bad)
cmc
dec
jno
out
xor
pop
hlt
outs
dec
xchg
retf
jmp
jmp
arpl
sbb
xchg
das
outs
ins
push
xor
inc
arpl
test
enter
adc
xor
sbb
scas
test
add
mov
jle
push
lods
fwait
jp
sahf
mov
jmp
xchg
mov
jl
and
inc
je
jae
push
rcl
dec
xchg
lea
mov
inc
fcmovbe
loopne
dec
inc
ss
fs
cmps
dec
test
mov
addr16
pop
mov
int3
mov
aad
mov
sub
jmp
hlt
inc
mov
mov
mov
std
adc
or
sar
sub
mov
stos
je
out
fs
xchg
xchg
daa
mov
push
inc
retf
cmc
hlt
xor
std
(bad)
aas
cmp
mov
mov
xor
loop
loop
jmp
and
ds
add
mov
pushf
scas
lods
cwde
das
lea
or
popf
stos
mov
call
aas
das
mov
addr16
inc
xchg
or
mov
sbb
or
pusha
(bad)
mov
(bad)
jecxz
sti
fsub
push
retf
push
cld
mov
retf
xchg
inc
cmc
jbe
adc
sahf
data16
add
outs
mov
out
jnp
or
dec
stos
adc
and
cld
rcl
dec
lods
push
sbb
cmp
or
(bad)
xor
mov
fdiv
mov
pop
inc
dec
add
dec
mov
ja
sub
pop
xor
mov
dec
xchg
cmp
iret
add
xchg
out
inc
bound
dec
ret
inc
adc
add
dec
retf
xchg
jo
xchg
test
pop
ss
jne
inc
inc
mov
sbb
stos
out
and
or
clc
mov
xor
mov
cmp
cmps
inc
jbe
add
mov
dec
mov
jbe
retf
mov
add
inc
(bad)
mov
dec
addr16
pop
das
fbstp
or
das
and
mov
and
rcr
jg
cwde
mov
sbb
rcr
pushf
dec
xchg
sub
pop
test
adc
fld
fcom
sbb
shl
xchg
mov
dec
jbe
retf
(bad)
jb
sbb
cmps
stos
js
mov
js
imul
and
(bad)
jns
inc
inc
(bad)
xor
mov
xchg
stos
pop
add
ret
out
and
nop
call
xor
cmp
mov
ret
je
sar
rcl
rcr
aad
pop
popf
mov
mov
inc
sub
xor
xor
jae
add
dec
mov
outs
leave
ss
jle
data16
add
repz
dec
fwait
outs
push
mov
in
add
in
xchg
cmp
clc
jmp
fucom
(bad)
pop
fld
outs
out
xchg
aas
ds
push
or
pop
jmp
mov
aam
in
(bad)
push
lock
repnz
push
push
data16
add
push
sub
hlt
push
cmp
mov
mov
xchg
push
cmps
mov
sub
out
daa
jo
adc
lock
mov
pop
mov
scas
ret
gs
adc
retf
mov
inc
inc
pop
loope
dec
inc
mov
fwait
push
rcr
and
sub
cmps
jle
stc
mov
sbb
pushf
pop
jg
rcl
xor
fcomp
fabs
hlt
or
cmp
mov
xor
xlat
shr
pop
mov
or
xchg
push
and
scas
stos
dec
xbegin
ror
btr
scas
push
mov
outs
inc
push
jae
add
out
repz
out
xor
ins
add
in
inc
in
out
push
fldenv
jge
add
cmp
add
push
popa
sti
test
cmps
das
icebp
xlat
add
or
lods
pop
cs
mov
ds
pop
dec
std
(bad)
rcr
ds
hlt
xchg
cwde
or
xchg
adc
mov
ret
shl
jg
inc
movs
sub
or
add
pop
leave
inc
pop
data16
ja
addr16
jmp
mov
mov
pop
leave
push
xchg
push
cmp
xor
ret
pop
add
jno
or
cmp
jo
mov
cmp
inc
jns
cmps
(bad)
and
int
neg
jl
(bad)
pop
jle
(bad)
ds
data16
jno
outs
retf
add
adc
mov
jmp
es
int
lods
aam
movs
call
and
mov
into
mov
xchg
xor
xchg
rol
push
jmp
inc
mov
lods
lock
aaa
mov
jecxz
add
mov
(bad)
cmp
int
adc
jecxz
inc
dec
outs
xchg
call
imul
pop
add
scas
(bad)
in
test
mov
fstp
mov
fldcw
scas
pop
mov
and
out
loope
out
pop
int
iret
cmp
lsl
int3
mov
out
inc
push
jmp
ja
add
pop
add
add
xchg
xchg
mov
mov
jns
sub
(bad)
pop
repnz
push
(bad)
cmp
leave
stos
add
test
es
mov
mov
cmp
sbb
stc
xchg
cmps
call
xlat
fiadd
dec
loope
sub
pop
dec
cmps
pop
fs
mov
int3
sub
rcr
call
lds
and
cmc
repnz
mov
jne
jmp
sbb
imul
call
or
in
mov
sub
mov
movs
out
cmp
repz
cmp
test
or
push
push
ret
lea
outs
pusha
sti
xchg
stc
adc
add
fadd
mov
and
jbe
inc
sub
xor
stos
dec
pusha
inc
jne
in
sbb
call
or
xchg
iret
pop
lds
int
xor
cmp
dec
pop
pop
(bad)
jecxz
out
call
xchg
imul
cmp
pop
adc
jge
sbb
xchg
(bad)
bound
test
sub
loop
mov
inc
add
mov
fs
jge
mov
cmps
inc
xchg
jp
adc
popa
pop
push
sub
loope
and
xchg
arpl
pop
(bad)
mov
neg
lahf
or
test
add
inc
(bad)
push
mov
push
bound
std
xchg
ins
jnp
hlt
mov
inc
ret
shl
and
cwde
jae
push
sbb
mov
sbb
movs
mov
mov
pop
sbb
lds
ins
stos
and
or
cwde
cld
out
test
mov
jb
jg
ret
imul
(bad)
or
retf
sbb
sub
inc
nop
scas
pushf
xor
sbb
xchg
and
and
add
add
lahf
xlat
adc
cmc
cmc
jo
mov
(bad)
xlat
mov
xlat
int3
test
call
and
fdiv
aaa
cmp
and
add
mov
or
ret
mov
push
ins
push
xor
and
cmps
sbb
dec
adc
repnz
add
or
jg
fdivr
and
int3
popf
push
pushf
sub
cmc
test
jmp
and
das
out
push
push
xchg
(bad)
jp
gs
mov
imul
aam
jae
pop
stc
add
sbb
xchg
in
adc
gs
sbb
stos
adc
bnd
cmp
or
add
test
mov
sbb
fwait
jno
(bad)
pusha
push
add
popf
movs
outs
xor
jecxz
jp
mov
(bad)
js
pusha
(bad)
xor
mov
inc
cmc
test
jno
mov
mov
mov
daa
pop
adc
push
(bad)
adc
(bad)
lods
cdq
xchg
shl
sub
sahf
jmp
neg
int
pop
sbb
dec
lods
jmp
addr16
hlt
jge
push
stos
call
clc
adc
lock
mov
popf
cld
enter
mov
test
push
lods
repnz
xlat
mov
cmc
pop
daa
lods
pop
pop
in
adc
(bad)
jns
aad
loop
mov
mov
push
jo
fist
ds
mov
mov
scas
hlt
inc
add
loope
push
std
daa
or
pop
repnz
std
or
gs
gs
aam
push
ins
ret
cwde
mov
add
sbb
and
pop
ds
mov
out
idiv
pop
inc
cmp
xor
cvttps2pi
push
es
xor
in
or
cmps
int3
push
jp
adc
mov
mov
je
pusha
into
das
ds
mov
mov
mov
pusha
inc
mov
mov
or
dec
(bad)
jg
popf
sub
mov
push
xor
xor
push
mov
retf
out
adc
test
fisubr
ja
xchg
xor
mov
das
shr
aaa
loope
inc
(bad)
adc
push
or
xchg
xchg
add
mov
inc
inc
push
mov
pop
inc
dec
icebp
cs
stc
inc
and
pushf
mov
push
cmps
in
mov
out
icebp
xchg
je
jmp
arpl
neg
and
jmp
movs
js
xor
add
mov
jle
sbb
and
and
dec
and
xor
rcl
mov
mov
lahf
push
sbb
js
aaa
push
pop
mov
daa
pusha
adc
(bad)
cmp
sbb
mov
or
movs
arpl
inc
popf
jl
(bad)
aad
fstp
mov
push
cmps
bnd
pushf
xchg
push
jne
dec
jp
sbb
adc
push
jmp
mov
pop
rcl
popf
xchg
les
fisttp
mov
test
mov
aad
or
or
dec
jmp
mov
xor
mov
sbb
jecxz
or
adc
add
out
mov
pop
adc
fild
ret
push
not
xor
lahf
add
sti
pop
(bad)
jbe
adc
add
aaa
icebp
or
add
icebp
lods
dec
jnp
xor
out
cld
xor
in
ss
mov
out
add
int
(bad)
(bad)
adc
or
sbb
scas
xor
fidivr
es
inc
je
cwde
iret
call
ja
and
rcr
sub
sub
movs
mov
sub
or
push
jnp
cdq
aad
xchg
nop
adc
test
cs
aaa
xchg
cmp
jmp
push
cmp
std
push
aaa
xchg
push
rol
dec
fdiv
cli
ss
sbb
clc
inc
push
aaa
repz
xor
xchg
mov
inc
mov
mov
mov
pop
and
ret
fmul
hlt
sub
lds
loope
imul
pop
(bad)
push
sbb
and
or
int3
pop
fnstenv
pop
xchg
xchg
inc
ins
shr
push
scas
les
fwait
xchg
sbb
(bad)
test
cmps
mov
inc
xchg
cli
out
mov
xor
xchg
sub
data16
xchg
jle
sub
loopne
dec
jb
out
push
call
loopne
into
adc
(bad)
fldcw
mov
mov
pusha
pop
sbb
outs
jae
mov
shr
mov
mov
mov
xchg
inc
popf
push
push
or
jp
mov
inc
aad
push
cmp
out
sar
mov
ins
jecxz
mov
in
adc
imul
mov
sahf
pop
imul
cmps
cmps
leave
aad
fdivr
mov
rcr
icebp
test
pusha
mov
into
addr16
push
into
movs
das
mov
leave
pop
scas
add
in
mov
pop
push
out
shr
jmp
mov
sbb
fadd
xor
ror
pop
push
add
into
sub
push
das
daa
push
ror
stos
sub
sub
sub
jno
ss
pop
or
fwait
adc
mov
bound
fisubr
jmp
mov
xor
add
jecxz
pop
mov
test
fwait
inc
lods
sub
sbb
inc
adc
push
cdq
shl
or
jb
jmp
and
stos
bound
jbe
out
xor
inc
std
ins
fmul
icebp
packuswb
ins
add
fild
arpl
pop
push
jne
ins
in
mov
mov
inc
sar
fsubr
(bad)
retf
cld
arpl
cmp
mov
add
xchg
les
sub
and
mov
lds
cmc
pop
push
jbe
pop
repz
mov
jle
jecxz
popa
cmp
adc
pop
jae
pushf
push
pop
sub
inc
popf
adc
and
push
cmp
out
data16
jmp
loop
movs
lea
ins
pushf
or
pusha
jmp
sub
cmps
sbb
out
into
dec
add
dec
mul
pop
mov
add
(bad)
xchg
mov
mov
mov
sbb
test
cmps
xlat
fsub
repnz
mov
dec
retf
in
inc
cmps
loope
mov
cmp
push
sub
sbb
jmp
(bad)
scas
lods
out
mov
cli
pop
xlat
lds
pop
cmp
aam
out
inc
lea
pop
out
xchg
adc
sbb
repnz
mov
loopne
loopne
and
lods
mov
imul
imul
out
ja
bound
test
imul
mov
jle
fs
pop
je
xor
sti
add
cmps
sti
mov
mov
out
es
scas
jecxz
cmp
and
addr16
or
fst
pop
dec
pop
movs
je
sub
ret
jg
cmps
push
mov
les
pop
popf
jo
or
retf
cmp
shr
hlt
arpl
loopne
mov
cmp
push
loopne
shl
cld
ret
int3
das
sbb
cmps
out
xchg
inc
neg
es
leave
push
fcmovu
mov
(bad)
mov
iret
sbb
push
leave
inc
push
xor
xor
out
or
(bad)
push
push
(bad)
pop
dec
sti
jmp
push
cld
int
inc
jbe
daa
bound
(bad)
ins
push
lock
xor
xchg
xchg
loop
ins
out
cmp
add
dec
out
or
inc
cmp
sub
arpl
mov
and
fld
jmp
xor
mov
and
sbb
push
xchg
rcr
sti
add
push
cmps
out
xchg
dec
inc
push
xor
imul
and
shl
fldenv
push
inc
push
pop
pop
push
fnstenv
outs
clc
add
xor
out
pop
pop
xor
inc
or
or
or
ins
push
and
sbb
and
mov
xchg
outs
ins
and
dec
dec
xchg
mov
in
or
loope
add
aad
add
dec
adc
add
cmp
and
dec
aam
pop
add
loop
(bad)
mov
mov
push
jecxz
scas
lock
loop
mov
int3
mov
inc
fcmovnb
cli
mov
jmp
clc
add
adc
xor
stos
je
and
fstp
mov
and
icebp
movs
stos
sub
inc
in
xor
fs
stos
fiadd
inc
cmps
je
outs
jmp
add
rol
stos
jno
dec
popf
add
inc
leave
std
test
xor
sub
ins
or
addr16
retf
bound
sbb
test
mov
dec
add
sahf
jecxz
repz
and
mov
inc
shl
lods
mov
stos
inc
push
cmp
mov
or
pop
repnz
ins
jg
xor
mov
mov
ins
(bad)
scas
or
shr
push
pop
and
jmp
jo
gs
cmps
cdq
mov
test
aad
data16
fisubr
xchg
movs
icebp
(bad)
dec
jbe
and
xchg
int3
fwait
inc
ja
sti
(bad)
xchg
xor
sub
lea
sbb
inc
movs
retf
sub
ret
lea
mov
xor
fiadd
fs
cmps
mov
dec
clc
jno
scas
xor
dec
dec
call
lahf
add
and
daa
out
mov
dec
stos
mov
aad
fs
in
xchg
mov
mov
in
cli
outs
daa
pop
movs
das
pop
repz
xchg
rcr
and
lods
stos
(bad)
add
(bad)
mov
mov
add
add
or
inc
jle
mov
(bad)
xchg
cs
and
je
push
fidiv
jb
dec
adc
dec
call
jmp
cmp
push
sbb
es
jno
cwde
pop
int
ror
inc
sub
dec
out
sbb
add
cmp
fdivr
jge
dec
mov
and
cmp
or
lods
sahf
pcmpgtb
jp
jg
pop
sub
adc
inc
mov
or
mov
mov
lock
and
imul
mov
add
xchg
outs
jmp
pop
fs
aam
call
loop
int3
sub
xchg
retf
shl
dec
dec
dec
hlt
push
add
mov
out
dec
adc
jg
mov
(bad)
mov
add
xchg
xchg
jb
pusha
sar
fwait
cmp
inc
call
(bad)
jmp
push
cmps
xchg
sbb
xlat
cs
jne
push
dec
push
mov
mov
mov
add
repnz
bnd
adc
mov
mov
mov
add
or
cmps
das
shr
(bad)
(bad)
je
test
into
mov
mov
fcomp
fsubr
push
mov
or
add
ss
add
pop
fcmovne
jle
inc
(bad)
movs
xor
mov
test
cmc
fmulp
xchg
in
call
(bad)
fcmovnb
dec
in
xchg
fwait
push
or
xchg
(bad)
xor
jl
sbb
add
aad
pop
or
inc
xor
jl
int3
clc
push
(bad)
xor
stos
out
je
xor
popa
and
sbb
test
sub
xchg
cmp
jb
jle
hlt
push
icebp
test
jle
mov
mov
xchg
inc
repnz
call
mov
into
mov
push
stos
jmp
dec
cmp
cmp
dec
scas
scas
outs
mov
call
sete
pop
popa
sbb
pop
fnstenv
lock
icebp
mov
or
aaa
push
shr
push
or
lods
(bad)
xchg
jp
and
fild
popf
push
add
les
add
rol
pop
shl
add
cmp
fmul
jbe
imul
outs
xor
lea
mov
mov
pop
not
into
dec
(bad)
enter
mov
sbb
sahf
(bad)
sahf
mov
inc
mov
cmps
sahf
repz
popf
or
ss
call
ret
add
inc
adc
not
(bad)
imul
int
xor
sbb
xchg
je
out
mov
std
push
push
loopne
js
mov
clc
jno
mov
ret
or
mov
bound
inc
mov
fcom
push
push
add
xchg
arpl
test
popf
inc
push
cwde
aas
jb
push
push
stc
jb
mov
mov
sub
or
adc
outs
dec
inc
add
test
push
mov
cmps
test
and
hlt
mov
xchg
cmps
cdq
aas
rcl
mov
and
sub
enter
pop
push
sub
cmp
xor
cmp
fwait
pop
bound
jmp
shl
(bad)
ret
dec
dec
sbb
push
or
jno
sub
mov
cmp
mov
ds
dec
div
repz
aam
push
jecxz
mov
add
sar
cwde
mov
shl
jno
jne
mov
test
push
stc
repz
stos
mov
dec
shr
jbe
shr
jmp
add
mov
fwait
in
into
sbb
ds
fcom
ins
mov
pusha
pop
push
push
mov
repnz
loopne
xchg
mov
mov
mov
(bad)
outs
mov
outs
movs
ret
(bad)
in
cmp
push
add
dec
iret
mov
imul
ins
cmc
jnp
adc
xor
popf
jo
popf
xor
inc
mov
cmp
jl
dec
iret
lods
and
scas
je
pop
or
and
loopne
lods
nop
fwait
in
push
mov
mov
into
push
aad
hlt
push
inc
xlat
arpl
push
jmp
sbb
sub
rol
out
shl
cmc
aad
out
mov
gs
loope
mov
in
push
sub
push
test
pop
test
cmp
xchg
(bad)
(bad)
(bad)
mov
or
lds
outs
ret
mov
dec
push
(bad)
pop
or
cmp
jecxz
inc
int
and
cli
aad
adc
rcl
xor
repz
aad
ds
inc
mov
jmp
pop
mov
cmps
inc
mov
stos
mov
jmp
hlt
aaa
xchg
xchg
scas
fwait
jmp
ss
jo
add
(bad)
mov
icebp
or
cmps
xchg
and
or
out
in
pusha
mov
jmp
and
imul
mov
lods
xchg
and
fucom
push
mov
into
bound
dec
ror
jg
lds
lods
arpl
aad
ds
jbe
xchg
rcl
ins
(bad)
cmp
outs
jns
sti
and
stos
fst
jmp
push
fmul
or
(bad)
out
bound
test
and
dec
mov
cmp
dec
int3
push
mov
out
push
jnp
cs
nop
jl
sti
sahf
fs
mov
jge
scas
ficom
loope
cmc
push
adc
lods
sti
repnz
gs
and
int
outs
xchg
rol
mov
hlt
xor
les
jmp
dec
(bad)
int3
fisubr
test
adc
xchg
adc
inc
rol
mov
rol
hlt
xchg
jecxz
xchg
popf
dec
repnz
inc
sbb
cmps
xchg
inc
ret
xchg
lods
mov
xchg
jmp
test
les
mov
jne
sbb
mov
sub
dec
add
daa
sbb
movs
call
dec
rcr
inc
xlat
adc
(bad)
cmp
lahf
push
mov
xchg
adc
stos
xchg
cmp
fwait
pusha
sub
imul
popa
inc
add
or
mov
lahf
or
dec
push
sar
sub
mov
adc
in
jno
push
ins
jmp
sub
push
adc
clc
push
scas
xchg
jle
push
pop
fs
mov
mov
add
fsub
add
mov
and
clc
popa
push
mov
rol
xchg
rcr
adc
mov
mov
mov
aaa
loop
and
adc
xor
stos
jge
out
sub
or
or
xor
push
mov
push
jg
popa
cli
pop
cs
add
dec
imul
aam
push
sbb
retf
push
inc
cmp
into
xchg
cmp
dec
push
movs
mov
push
xor
mov
jns
call
jp
sub
lock
cld
mov
jnp
and
add
mov
out
dec
lea
cmp
ret
scas
push
mov
fcomp
js
dec
outs
pop
add
ret
mov
add
push
sbb
dec
push
mov
sbb
dec
movs
mov
adc
mov
popa
pop
jb
popa
sub
mov
cmps
inc
test
adc
fmul
cmp
rcl
dec
inc
mov
xchg
pushf
push
iret
push
xor
jl
push
dec
mov
mov
push
sbb
aas
or
adc
aam
movs
int3
push
retf
and
div
loopne
mov
ins
adc
retf
mov
inc
inc
jnp
push
fisubr
(bad)
ds
dec
pop
pop
div
(bad)
(bad)
outs
or
add
mul
push
call
int3
sub
pop
xchg
adc
push
(bad)
mov
xor
ins
mov
sub
rcr
xchg
das
and
cmps
and
xor
add
cmp
in
cmp
push
sbb
xchg
jle
daa
sbb
xor
lahf
or
pop
mov
outs
jmp
mov
xor
xchg
jbe
xchg
push
std
sahf
aam
pop
stos
in
cmp
shr
push
mov
jo
leave
scas
adc
mov
inc
das
fistp
call
sub
mov
addr16
xchg
cmp
(bad)
rcr
(bad)
(bad)
cmp
mov
dec
sbb
popf
ins
out
adc
mov
in
test
or
cmp
mov
ret
lods
rol
cmps
and
fs
outs
xlat
xchg
inc
or
mov
cmp
pop
je
retf
mov
jb
push
mov
add
out
jo
mov
retf
xchg
movs
inc
bound
fs
popa
gs
pop
retf
xor
rcr
push
fiadd
fadd
rol
(bad)
sub
shl
test
sub
je
ds
ja
jo
mov
in
mov
popf
sub
imul
mov
mov
push
gs
scas
test
out
cmp
movs
sbb
dec
loopne
out
ror
dec
adc
jne
mov
(bad)
fisub
ja
mov
(bad)
not
jno
dec
jne
idiv
dec
in
mov
loope
dec
in
jo
fistp
cld
xchg
adc
or
cdq
sub
jmp
jae
je
mov
push
dec
not
mov
and
or
xchg
outs
fild
or
sub
mov
mov
cmps
popf
call
popa
jmp
out
xor
addr16
outs
cmps
fisttp
cmp
sub
adc
daa
jo
das
fisubr
jnp
mov
sub
dec
mov
repz
and
inc
test
int
lss
inc
lahf
sbb
mov
or
sbb
jo
imul
retf
push
push
pop
call
and
cmp
ficom
(bad)
fiadd
test
sbb
js
xlat
pop
std
fidiv
pop
retf
int
retf
ss
jmp
cmps
adc
test
imul
inc
add
clc
mov
adc
stc
rcr
sbb
std
loopne
test
dec
das
test
test
add
cmc
sbb
cwde
pop
mov
sbb
out
mov
inc
leave
jo
lock
cmp
pushf
fucomp
ins
rcr
stc
or
scas
sub
imul
pop
push
or
mov
(bad)
std
add
xor
clc
retf
cmp
xlat
pushf
hlt
fistp
mov
push
call
cmps
mov
xor
jmp
jno
mov
pop
or
cmp
sbb
jne
cdq
add
cdq
rcr
xchg
jbe
pop
add
pop
mov
int
js
leave
repnz
call
inc
xchg
or
dec
test
ret
(bad)
push
into
mov
mov
std
xchg
sbb
ss
xchg
mov
ret
adc
push
add
(bad)
mov
mov
out
xor
loop
retf
ror
and
adc
into
lods
xchg
inc
push
cmp
xor
test
gs
fdivr
repnz
icebp
dec
out
les
sub
jle
pop
cmp
sar
nop
cs
fcmovnu
scas
cmp
xor
shl
mov
jge
call
(bad)
push
cld
pusha
addr16
xchg
ss
jmp
jns
xchg
push
loope
xor
or
mov
mov
dec
pop
jg
iret
push
xchg
arpl
test
gs
shl
push
jo
pop
cmps
call
inc
cmc
sbb
xor
imul
sti
sub
dec
(bad)
out
sub
ss
ror
mov
ins
adc
out
xchg
mov
and
xor
adc
int3
add
(bad)
jmp
fcom
cli
cmp
inc
je
lods
push
pop
lahf
fwait
in
mov
movs
cmp
je
les
mov
rcl
shr
vshufpd
jmp
cmp
pop
or
sbb
ret
sub
imul
cdq
inc
mov
stos
scas
popa
scas
or
or
xor
xchg
fst
movs
js
call
cmp
push
frstor
mov
ss
fwait
gs
jecxz
pop
xchg
fsubr
imul
and
in
mov
pop
xor
int3
jg
mov
dec
(bad)
adc
dec
xchg
int3
lock
xchg
stc
add
cmp
jge
push
adc
out
ror
iret
inc
dec
fdivrp
xlat
out
lods
push
fcom
aam
scas
cmp
sbb
mov
inc
pop
mov
(bad)
mov
(bad)
aam
cmps
sub
sub
loopne
jbe
(bad)
adc
push
jl
xchg
iret
add
hlt
xlat
add
sar
push
jecxz
xlat
add
pop
push
(bad)
test
loop
mov
fsubr
cmp
ds
xor
mov
add
lods
call
inc
stos
idiv
in
gs
mov
sub
std
pusha
nop
inc
pop
mov
repnz
add
inc
imul
int3
dec
ret
imul
jae
adc
jle
jge
dec
sub
cmp
push
lahf
es
dec
xor
lea
add
pop
pusha
(bad)
mov
jae
mov
mov
jmp
pop
pop
mov
xchg
mov
xchg
mov
push
out
xchg
mov
(bad)
push
dec
retf
popa
mov
adc
mov
mov
sbb
jbe
das
movsx
adc
iret
pop
or
and
sbb
xchg
jmp
dec
or
scas
mov
sti
cld
jns
sub
mov
ins
mov
(bad)
fstp
mov
into
stos
into
push
retf
cmp
es
outs
cld
and
add
and
out
movs
xchg
pop
ds
fs
ror
mov
inc
push
retf
dec
push
jno
sub
jle
xor
push
scas
cmp
inc
daa
in
ins
mov
arpl
mov
in
ja
pushf
adc
iret
or
in
bnd
xor
repz
sbb
sbb
hlt
cwde
sub
jb
pop
sbb
inc
pop
mov
sbb
sub
mov
cmps
loope
mov
loop
shl
fmul
(bad)
into
push
xor
cmp
mov
clc
pop
or
call
test
stos
ins
adc
mov
adc
sbb
sbb
nop
push
pushf
aam
cli
and
fisub
cmps
aas
jmp
data16
in
mov
and
mov
push
and
inc
pop
out
test
fwait
(bad)
mov
xor
inc
enter
fiadd
inc
or
jle
ror
push
add
mov
(bad)
xor
daa
inc
mov
inc
les
dec
mov
adc
xchg
outs
loopne
aad
rol
lea
cmp
mov
mov
and
sbb
in
pop
pop
xchg
or
retf
fidivr
popa
iret
adc
sbb
(bad)
les
retf
mov
lods
out
mov
sar
retf
push
(bad)
push
push
and
neg
cli
xchg
lea
mov
ficom
push
xor
and
push
or
dec
out
cmp
jno
out
and
inc
cmps
imul
and
inc
dec
ins
jp
and
xor
pop
stc
popa
mov
push
rcl
stos
lods
out
push
repz
in
sbb
pushw
idiv
cmp
jp
mov
fs
push
jno
and
(bad)
(bad)
jge
ins
stos
mov
mov
xor
cmp
inc
push
loop
scas
cmps
aam
mov
push
sbb
inc
push
and
jns
mov
repnz
cdq
aam
mov
loopne
sbb
popf
out
movs
mov
push
stos
outs
cmps
(bad)
stc
adc
cdq
das
fsubr
mov
add
in
inc
pop
adc
mov
push
mov
xor
mov
fwait
out
cmc
add
mov
retf
rcr
repnz
xor
in
cmp
add
fwait
xor
dec
or
xor
jp
or
inc
adc
mov
xor
adc
jnp
pop
push
sbb
and
mov
call
dec
mov
dec
cmp
lods
dec
sahf
loope
pop
inc
sti
pop
pop
fstp
xlat
adc
pop
ins
push
push
arpl
pop
data16
sub
xor
mov
jle
push
jne
xchg
add
out
js
outs
inc
outs
test
bound
fdiv
inc
dec
mov
mov
sti
mov
mov
adc
mov
into
mov
push
out
movs
xchg
int
xchg
xchg
dec
mov
dec
push
sbb
aam
(bad)
mov
int3
std
ins
test
push
gs
sub
jbe
mov
jp
push
stos
jecxz
sub
add
or
test
jno
sbb
or
in
xchg
xchg
xor
loope
in
cmp
or
test
out
sub
push
push
adc
mov
inc
stos
mov
push
and
shl
aaa
xor
loop
fidivr
repz
add
and
add
xchg
les
mov
ficom
test
ret
jnp
dec
jl
pop
mov
xchg
add
pop
pop
push
mov
add
xor
jp
or
inc
inc
inc
movs
xchg
lods
sti
push
add
mov
(bad)
jecxz
mov
lds
int
sub
add
cmps
dec
inc
xor
xor
(bad)
mov
dec
sub
(bad)
mov
mov
mov
jne
mov
fldln2
imul
loope
imul
jge
xor
sbb
push
or
or
xlat
in
add
in
add
xchg
and
sub
sub
out
fisubr
popa
jne
pop
sbb
mov
repnz
mov
mov
out
dec
jecxz
mov
gs
mov
pop
movs
arpl
inc
test
fisubr
and
mov
lahf
call
jae
mov
or
and
leave
lods
inc
stos
jb
pop
out
in
adc
mov
lds
mov
lock
stos
xchg
mov
xchg
add
lahf
add
pushf
push
xor
(bad)
or
std
push
mov
mov
icebp
add
cs
cdq
cmp
sbb
bound
es
sub
loopne
je
dec
xor
or
adc
sub
mov
sbb
cmp
rcr
movs
pop
into
push
pop
mov
in
push
shr
mov
inc
mov
sub
aad
jg
add
lds
ins
(bad)
stos
nop
pop
shr
dec
and
xchg
cld
js
sbb
pop
jno
cmp
pop
push
sar
push
cmp
js
mov
retf
fwait
int3
in
sub
ficom
cmp
xchg
repz
or
adc
sub
dec
cdq
or
jne
sub
dec
push
nop
imul
data16
in
repnz
lds
push
js
inc
mov
push
hlt
lods
pusha
cmp
pop
xor
dec
stos
in
es
int
adc
cmps
inc
cld
or
sar
pop
dec
mov
cli
movsx
push
adc
sar
or
push
pop
call
test
mov
movs
ins
and
cmp
out
dec
loopne
push
rcr
dec
ret
inc
mov
lock
cmp
jnp
lds
pop
mov
or
or
(bad)
sub
cmp
cmp
or
or
icebp
xor
nop
jbe
cli
out
mov
add
idiv
add
push
imul
sbb
and
and
addr16
pusha
add
repz
add
mov
push
popa
daa
lock
dec
dec
popa
mov
(bad)
icebp
mov
sub
pop
ss
and
mov
in
movs
and
imul
mov
mov
jmp
xor
pop
sahf
scas
cmps
pusha
lds
jnp
mov
xor
push
fs
call
sbb
movs
nop
sti
cmp
jge
call
xor
mov
ja
scas
pop
ss
scas
xor
push
xor
repnz
sub
ins
adc
shl
jo
and
test
fwait
cdq
xchg
push
xchg
sub
jmp
cwde
mov
repnz
call
push
out
in
jecxz
jmp
xchg
add
sub
ja
cdq
lea
fld
test
mov
(bad)
bound
sub
aad
rcr
or
test
call
jp
or
add
adc
mov
cmc
push
mov
pusha
lods
scas
hlt
lds
retf
mov
push
ins
mov
mov
hlt
dec
hlt
pop
mov
inc
cmps
arpl
test
int3
jmp
fistp
int
sbb
pop
das
sbb
fisub
mov
icebp
adc
test
aad
repnz
icebp
mov
cmp
jb
or
or
loope
bsf
fsubr
mov
fistp
int
push
into
es
add
call
fisubr
mov
sbb
cmp
pop
mov
cmp
and
int
neg
xor
fidiv
add
push
dec
call
cmc
mov
mov
call
or
push
and
test
jo
mov
push
push
inc
shl
add
imul
sub
dec
cs
lea
xchg
nop
or
push
popf
out
inc
icebp
das
ret
ins
mov
push
mov
jb
fld
fistp
fs
xor
inc
stos
cmp
and
addr16
call
stos
out
and
fucomi
pop
add
repnz
pop
jmp
fisubr
in
inc
sahf
iret
es
lock
jbe
push
pause
add
(bad)
push
cld
call
out
mov
stos
sub
out
cmp
arpl
push
add
shl
xchg
int3
pop
ins
dec
jb
mov
dec
int
mov
and
js
adc
push
into
mov
adc
push
stos
xor
cmps
push
pop
loope
loopne
jge
and
std
mov
not
icebp
cmp
nop
mov
lods
sbb
clc
addr16
mov
shr
xor
mov
dec
sub
and
dec
daa
dec
xchg
mov
ds
test
in
dec
or
int
stos
clc
cmp
addr16
push
fcomp
aas
cmp
loop
fs
mov
jnp
adc
pop
xchg
int3
jns
mov
ficom
pusha
mov
jb
inc
fdivr
mov
fst
jg
cmp
xor
dec
fadd
xchg
popf
lahf
jge
sub
aam
jmp
ss
mov
hlt
cs
das
mov
push
mov
pop
mov
push
test
(bad)
pop
repz
dec
jno
jne
(bad)
xchg
pop
cmp
in
dec
movs
and
int
or
or
daa
dec
ja
sahf
xor
and
mov
cwde
fld
xor
adc
repnz
and
mov
ja
sti
jg
xchg
xchg
push
call
test
jmp
jo
mov
pop
aad
je
add
into
and
xor
and
jl
pop
(bad)
mov
add
invd
js
mov
push
sbb
clc
ds
ins
xchg
xchg
test
ja
lea
cwde
mov
xchg
add
cs
pop
xchg
in
jecxz
sbb
loopne
rcl
in
cmp
mov
retf
lods
and
inc
out
ret
inc
sbb
xor
ja
cmps
inc
push
neg
mov
jl
mov
xchg
test
pop
push
aas
mov
jbe
fldcw
test
outs
aam
test
fbstp
adc
dec
xor
ins
pop
xchg
jge
inc
pushf
pop
cmp
and
movs
sbb
dec
stc
xor
sub
jge
push
push
out
movs
mov
cmp
add
xor
retf
adc
fsub
int
and
xchg
fbld
mov
add
xlat
cmp
out
xchg
movs
pop
cmp
outs
add
aam
xchg
test
out
xor
daa
adc
ss
hlt
out
mov
rcl
push
cli
fnstenv
scas
into
adc
fnstenv
jbe
and
ins
mov
popf
repz
adc
mov
lahf
jmp
rol
daa
rol
scas
dec
std
call
add
pop
(bad)
das
mov
into
daa
sub
jns
call
adc
shr
lock
mov
pop
outs
adc
lods
inc
enter
cmp
pop
inc
movups
mov
arpl
data16
push
ins
retf
cmp
xor
mov
dec
xchg
cli
jmp
cmps
sub
jns
addr16
ja
mov
sar
sub
xchg
jmp
jl
pop
movs
mov
and
cmp
dec
mov
adc
sub
jmp
or
pop
cmp
add
sub
(bad)
out
loop
mov
daa
mov
cdq
pop
repz
(bad)
mov
in
pop
ja
retf
push
in
cmp
int
xor
mov
push
inc
loope
mov
inc
loop
mov
sti
sbb
(bad)
cmc
inc
inc
push
sbb
push
pushf
cmp
nop
ret
add
sahf
ret
nop
jg
mov
test
pop
data16
or
pop
sbb
fsubr
or
xor
(bad)
and
add
adc
scas
dec
xchg
mov
outs
sub
xchg
ficom
dec
adc
movs
sti
repz
arpl
into
xchg
push
push
push
and
repz
mov
xchg
sub
xor
sbb
sbb
or
fs
mov
and
int3
mov
cmp
call
pop
add
(bad)
(bad)
stos
daa
fimul
xor
push
jb
lods
push
push
cmp
popa
(bad)
test
dec
and
mov
fstp
and
shr
push
es
jae
aam
sub
xor
fimul
in
ja
inc
xor
or
rcr
shl
sar
inc
stc
test
cld
cmp
cmp
jmp
cmp
xchg
cli
stc
jne
push
add
test
push
je
cmps
pop
inc
frstor
inc
mov
out
mov
xchg
test
aas
xchg
xchg
ret
or
fmul
(bad)
test
xchg
imul
add
xor
cmp
mov
sbb
mov
ins
mov
jb
pushf
out
gs
pushf
pusha
push
retf
cld
mov
mov
mov
xor
mov
xchg
pop
adc
into
fsub
xor
jbe
pushf
sti
xchg
adc
sbb
mov
xchg
popf
cld
outs
mov
mov
jbe
daa
xchg
ret
jp
or
cs
dec
fwait
sub
lods
pop
pushf
neg
pop
cmp
push
xchg
mov
hlt
mov
aaa
cmp
lods
fwait
add
and
and
out
nop
das
pop
cmp
fidivr
sbb
jle
inc
dec
add
push
fld
addr16
mov
cmps
pop
dec
dec
mov
push
pusha
mov
adc
or
jg
inc
mov
es
sbb
fdiv
popf
cmp
push
pop
aas
fwait
xchg
sbb
ins
sti
jo
push
inc
js
mov
adc
dec
ins
mov
bound
rol
loop
int
push
imul
dec
scas
or
xchg
in
mov
sahf
add
push
lahf
pop
(bad)
repz
int
lea
stos
pop
sbb
xor
mov
lea
pop
stos
inc
mov
xor
clc
sub
movs
mov
hlt
or
mov
mov
cmps
fmulp
pushf
xchg
xor
retf
ins
hlt
mov
pushf
mov
imul
xor
mov
jecxz
cli
adc
arpl
(bad)
fmulp
cs
das
inc
out
jne
xchg
sbb
in
test
adc
mov
jmp
xchg
scas
mul
fiadd
adc
cmps
ret
(bad)
lds
stos
hlt
jae
mov
(bad)
mov
rol
adc
xor
dec
icebp
enter
cmps
dec
fld
call
add
dec
std
mov
ror
iret
jns
mov
xchg
add
xor
inc
or
aad
sub
iret
test
in
inc
ret
imul
arpl
stc
xor
shl
out
push
or
outs
pop
pop
mov
int3
cdq
adc
jle
push
sub
xor
pop
push
inc
lods
mov
dec
stc
inc
xor
cmp
gs
shl
mov
xchg
xchg
fsubrp
or
inc
sahf
jb
retf
and
inc
sbb
cli
mov
cmp
test
xchg
outs
les
and
dec
ins
icebp
jbe
mov
cmp
popf
push
xchg
out
adc
ins
xchg
mov
repz
and
mov
mov
fdivrp
iret
je
retf
sbb
cmc
(bad)
mov
pushf
fnsave
lods
mov
mov
sub
push
mov
repz
adc
imul
in
pushf
dec
cmp
cli
mov
inc
ss
xchg
pop
pop
jo
mov
out
inc
cmp
aas
repnz
fiadd
jp
jcxz
fucomp
or
mov
sub
mov
mov
sar
cld
cmp
xchg
push
add
sti
jae
mov
jae
cmps
fidivr
push
sbb
adc
loopne
shr
push
loope
lahf
inc
cmp
add
add
inc
pop
ins
xor
aad
sbb
cmc
in
sbb
mov
icebp
in
xchg
mov
add
mov
jo
cmp
iret
scas
clc
cs
add
(bad)
call
sbb
test
sub
pop
cli
dec
imul
fwait
pop
ss
cmovbe
div
retf
enter
rcl
mov
adc
out
push
cmp
mov
test
ror
push
data16
mov
and
jmp
loope
popa
mov
out
and
lods
dec
ret
shr
inc
dec
push
jle
out
outs
inc
cmp
push
or
and
shl
pop
jp
lahf
imul
out
xchg
jp
ror
paddq
sub
stc
lar
imul
add
dec
retf
ins
fcomp
xor
xor
inc
in
daa
shl
xor
mov
retf
dec
(bad)
shr
mov
mov
outs
fistp
ret
sti
mov
sub
dec
mov
call
das
out
cwde
mov
cmp
lea
cmp
rcl
popa
xor
mov
sub
ja
(bad)
jo
inc
dec
jmp
cmp
lahf
dec
dec
jp
in
out
mov
dec
sbb
push
mov
fsub
or
js
xor
lods
push
jne
icebp
fucomp
mov
ret
push
add
inc
adc
mov
call
push
dec
shl
scas
scas
dec
sbb
not
inc
(bad)
aad
xor
ins
mov
aad
mov
sbb
popa
movs
ja
test
xchg
loopne
movs
imul
pop
scas
aad
and
cmp
mov
int
fdivp
mov
xlat
pop
test
jl
cli
lods
iret
or
sub
test
call
pop
mov
cs
push
hlt
gs
mov
scas
mov
cmp
xchg
mov
push
jle
push
push
stos
xchg
push
pop
sub
leave
inc
or
mov
and
loop
mov
push
mov
mov
ins
push
test
lock
or
jmp
cmc
nop
xchg
mov
scas
xchg
fdivr
mov
sti
jle
mov
push
dec
xor
in
gs
mov
hlt
inc
sub
sub
sub
xor
in
push
sub
or
mov
jne
jno
fwait
dec
fdiv
cdq
sbb
icebp
and
fisttp
mov
into
leave
cmp
sub
push
and
pop
xor
pop
call
ror
cs
out
retw
ins
cmps
out
out
or
in
mov
mov
jmp
test
mov
sbb
cwde
sar
movs
icebp
pop
rcl
push
aam
add
adc
sub
mov
repnz
adc
sub
movs
pop
jae
ret
sub
in
push
lods
in
mov
or
cmc
inc
js
adc
mov
mov
push
aas
and
cmp
bound
sbb
or
pop
push
adc
add
popa
sub
inc
je
or
cmc
add
out
adc
mov
gs
cmp
adc
pop
jg
ins
pop
shl
xlat
cmp
jns
aaa
scas
pusha
pop
(bad)
sub
xor
mov
xor
push
push
xor
stos
fs
and
adc
call
mov
loopne
sar
test
pusha
inc
mov
mov
neg
jle
lods
jo
mov
mov
scas
cmp
or
add
inc
mov
push
or
fdiv
jae
xor
(bad)
(bad)
outs
outs
movs
push
out
(bad)
je
pusha
xchg
popf
jge
daa
fcomp
into
or
retf
js
std
(bad)
xor
ret
int
adc
ins
mov
js
addr16
stc
nop
xchg
inc
clc
add
push
sahf
lods
in
pop
jmp
add
daa
clc
loopne
jmp
fcomi
push
imul
or
jae
cmp
call
pusha
mov
push
dec
loopne
adc
or
movs
and
movntpd
popf
inc
or
sti
sub
ret
push
mov
iret
fidivr
aam
mov
addr16
cmp
mov
xor
cmps
stc
fisttp
ror
fistp
aas
mov
jmp
jg
adc
cmp
mov
in
lds
pusha
mov
retf
movs
and
lock
and
mov
aaa
jno
ja
jmp
cmc
lods
pop
addr16
int
cmp
cmp
leave
jge
jge
cmp
push
mov
inc
mov
imul
inc
jb
or
ja
push
ds
xor
mov
pop
mov
enter
int3
js
fistp
aad
aas
jno
jg
cmps
imul
jmp
inc
icebp
jnp
cmovne
(bad)
cmp
mov
jp
clc
lock
jl
imul
mov
sar
mov
mov
mov
int
xchg
call
or
fimul
arpl
adc
adc
cmp
xor
scas
xchg
(bad)
loop
aas
adc
and
(bad)
jle
push
imul
out
cmp
adc
cmp
adc
or
xor
into
(bad)
xor
inc
adc
in
add
xchg
jmp
cmp
lahf
jmp
push
xchg
imul
sub
pop
in
add
inc
dec
dec
mov
bound
pop
test
(bad)
imul
mov
or
in
jle
cmp
inc
loop
mov
dec
pop
mov
or
rol
aas
repz
sub
js
add
dec
sub
mov
cmps
cmc
rcr
data16
pop
lahf
cmc
mov
or
stc
fadd
jns
push
call
push
cmp
push
mov
add
aam
mov
sbb
jp
jmp
(bad)
pop
jp
int
movs
or
jmp
push
cmp
shr
and
dec
inc
repz
jb
mov
jmp
lahf
sub
retf
xchg
lock
outs
shl
jmp
jge
je
dec
in
xchg
loopne
rcr
fwait
pop
fdivp
cs
retf
and
in
mov
ins
or
push
or
cmps
std
fwait
imul
xor
push
cs
lock
push
push
push
dec
ds
sbb
icebp
push
imul
repnz
inc
repnz
pop
pop
js
in
inc
push
test
mov
je
mov
inc
fistp
mov
fild
adc
xchg
aad
inc
stos
and
jae
stos
sbb
cld
loope
das
jl
jne
xor
or
jno
les
clc
mov
lock
mov
pop
test
aas
or
mov
push
inc
mov
add
movs
xor
repnz
mov
pop
(bad)
pop
sahf
ret
adc
xchg
pop
xor
lds
add
(bad)
hlt
out
out
mov
ret
cdq
loop
xchg
push
cmp
ror
and
xchg
sub
cmps
jle
mov
cld
test
sub
mov
das
shr
pop
mov
jbe
mov
retf
and
and
cmps
call
mov
mov
les
aam
shr
pop
fcmovnb
xchg
sbb
fstp
sbb
in
ins
sbb
dec
xchg
sbb
pop
inc
out
push
test
nop
mov
jnp
mov
cmp
hlt
cwde
mov
out
ret
or
pop
jle
and
xor
test
xor
jp
test
popa
sbb
imul
mov
(bad)
pop
mov
pop
sub
dec
mov
pop
sbb
out
push
(bad)
retf
and
xchg
mov
ss
xchg
loopne
pop
inc
pop
pop
adc
das
rol
fdiv
mov
adc
mov
sub
jge
xchg
invd
and
in
imul
outs
stos
sbb
retf
push
outs
scas
rol
fbstp
fldcw
mov
sub
into
outs
clc
aaa
and
sbb
das
pop
test
dec
dec
mov
scas
mov
stc
cmc
jmp
and
adc
es
pusha
mov
loopne
adc
out
mov
mov
aaa
dec
push
lods
test
psrad
(bad)
push
cwde
sbb
out
fild
pop
and
imul
lods
xor
int3
dec
sub
sbb
mov
aaa
enter
push
push
add
inc
(bad)
icebp
ja
jae
xlat
icebp
fs
mov
mov
aad
mov
xlat
fstp
adc
and
pop
sbb
sahf
inc
cli
mov
and
out
mov
adc
and
mov
outs
xor
sbb
in
and
cmp
fsub
sahf
adc
jg
inc
inc
jp
pop
fadd
inc
mov
dec
jo
sbb
aaa
cmp
aas
jne
sbb
mov
stc
sbb
jle
and
(bad)
cmps
sub
xor
push
add
xor
cwde
stc
add
pop
cmp
(bad)
inc
xchg
repz
jb
jg
sti
push
inc
mov
in
mov
aaa
xor
das
mov
in
dec
dec
ins
fistp
dec
push
dec
push
outs
sub
cwde
repnz
pop
mov
retf
repz
je
xchg
jbe
mov
cmp
aad
mov
xor
xchg
add
and
pop
fld
clc
push
mov
cmc
mov
pop
jmp
fwait
pop
xchg
sbb
fwait
aas
mov
push
push
dec
out
dec
jae
popf
(bad)
(bad)
fsubrp
xor
inc
out
outs
das
cli
dec
daa
pop
aas
mov
dec
ret
out
adc
and
jg
xor
in
shr
dec
arpl
or
fidivr
in
jmp
xchg
jmp
sbb
inc
int
ja
xor
test
lea
retf
jne
pushf
fiadd
retf
push
mov
stos
punpckhwd
mov
mov
ret
aas
mov
rcl
cwde
jmp
adc
data16
inc
test
mov
or
cli
lods
rol
(bad)
pushf
mov
and
fadd
mov
add
loope
retf
pop
test
pop
enter
aam
bound
mov
std
arpl
lds
lea
xor
jmp
mov
scas
ret
cmp
iret
scas
dec
xor
xor
jp
mov
ret
popaw
outs
add
js
jb
dec
stos
push
cmps
mov
jmp
jne
jmp
jae
adc
and
jle
imul
fidiv
and
cmp
dec
retf
inc
inc
xlat
mov
dec
mov
outs
dec
mov
daa
test
mov
pushf
aas
adc
mov
and
mov
pop
xchg
aad
fiadd
fistp
fidivr
(bad)
xor
jmp
ret
inc
adc
(bad)
(bad)
std
cmp
add
fst
mov
or
xchg
xchg
fisttp
in
inc
adc
repz
cmp
xchg
nop
rcr
jp
pop
mov
jbe
or
repz
(bad)
dec
pop
fld
cs
xor
push
jno
mov
or
sar
mov
cmp
frstor
and
xor
jo
mov
fmul
imul
(bad)
into
sti
add
cmps
jge
repnz
retf
jg
mov
sub
mov
or
jno
pop
je
js
push
pusha
loope
inc
popa
xor
les
sub
daa
popf
inc
mov
mov
out
xchg
inc
mov
inc
mov
cmps
cmp
into
nop
pop
push
jmp
fs
xchg
fistp
psrlw
mov
jb
mov
mov
ins
je
loopne
aam
retf
pop
imul
sub
mov
and
xlat
aas
and
ins
outs
and
push
rol
cmp
add
ins
(bad)
xchg
idiv
sbb
popf
inc
jge
sub
mov
dec
stc
adc
fisubr
pop
retf
lahf
push
out
pop
adc
cmp
mov
xor
mov
xchg
int
mov
pop
sub
cdq
push
xchg
inc
or
xchg
jmp
xchg
jmp
push
xor
shr
add
cld
pushf
dec
out
mov
movs
lock
hlt
add
fdivr
push
imul
sbb
adc
stos
out
push
and
and
mov
(bad)
addr16
adc
push
pop
inc
add
es
scas
icebp
pop
mov
sbb
add
das
inc
mov
push
mov
(bad)
jns
inc
push
push
mov
daa
or
pop
jle
jmp
test
data16
cdq
pop
sub
sbb
sbb
cmp
loope
xchg
pop
pop
fdiv
mov
daa
xor
and
mov
cmp
(bad)
rcl
mov
mov
cmps
aas
je
pop
les
xchg
pop
ss
sub
fidivr
ret
and
mov
scas
loopne
rep
and
adc
pop
xchg
pop
cmp
cld
pop
push
in
sbb
sub
jae
lods
push
mov
stos
(bad)
xor
es
mov
pop
bound
mov
dec
xchg
cdq
mov
jl
out
sbb
aaa
jae
sbb
jae
sbb
mov
mov
rcl
pop
hlt
pop
addr16
lock
out
inc
lock
mov
je
es
jnp
jbe
iret
xchg
jp
ss
sub
lock
pop
cli
std
js
sub
pushf
ja
imul
std
icebp
imul
jne
sbb
movs
call
lods
dec
(bad)
int
lods
or
fdivrp
stc
mov
retf
inc
mov
mov
adc
test
inc
xchg
push
dec
cmp
(bad)
nop
xchg
cmp
aas
dec
xchg
pop
in
adc
push
iret
and
ror
pop
mov
inc
mov
add
fcomp
jmp
adc
and
daa
add
xchg
dec
fs
mov
jns
and
repnz
sbb
xor
ret
inc
mov
movs
sbb
sbb
xchg
push
pop
scas
aas
shl
out
push
out
dec
inc
mov
lods
scas
addr16
mov
push
jp
stos
pop
scas
or
and
pop
pop
cmp
aad
pop
jo
stos
dec
and
mov
mov
fs
and
stc
push
or
adc
and
int
aad
mov
adc
mov
mov
and
adc
test
fwait
jecxz
and
cwde
sti
out
dec
cmp
shr
push
push
pop
dec
sbb
cmp
mov
and
in
cmp
imul
and
jns
cmp
in
clc
add
xor
scas
xor
or
mov
mov
jge
test
in
sar
inc
pop
rcl
jg
xlat
andnps
jo
cmp
hlt
jno
or
pop
sub
and
dec
push
or
xchg
xchg
sub
lds
mov
jmp
add
retf
je
ror
cdq
lahf
xchg
pop
ins
and
rcl
scas
pop
add
sbb
dec
loopne
push
dec
(bad)
stc
jne
mov
cmp
push
rol
cmp
pop
in
push
in
mov
mov
push
mov
mov
lea
mov
xor
pushf
dec
adc
jge
inc
in
jae
push
fsubr
shl
jb
aaa
popf
ins
outs
xchg
pop
movs
or
jbe
push
pop
sub
dec
je
(bad)
setnp
nop
mov
and
ins
in
cmps
adc
xor
or
adc
mov
xor
retf
cmp
xchg
pop
data16
ret
les
arpl
jp
or
aaa
push
mov
xor
or
aas
push
xchg
retf
outs
push
sbb
push
(bad)
sbb
mov
inc
mov
cmps
lock
mov
xchg
call
mov
mov
xor
enter
leave
pop
dec
and
jmp
dec
fldenv
shl
xchg
les
cmp
pop
stos
inc
das
std
cld
fadd
int
in
or
daa
sbb
loope
imul
imul
dec
dec
int3
ds
mov
(bad)
je
pop
jno
or
out
push
pop
(bad)
imul
mov
(bad)
loop
mov
in
and
push
dec
sbb
(bad)
add
mov
mov
ja
xchg
lods
cwde
jbe
pusha
push
or
popf
hlt
push
div
dec
mov
lea
je
sub
in
or
xchg
sub
neg
mov
sub
out
call
dec
pop
mov
(bad)
lahf
cmp
xor
mov
lds
int3
test
cmp
arpl
mov
and
call
xor
xor
js
lea
sar
push
enter
mov
jmp
mov
outs
cmp
cmc
jmp
gs
pop
inc
inc
inc
sbb
push
aad
inc
mov
aaa
(bad)
sub
fwait
movs
cmps
jnp
mov
jge
jl
mov
loopne
cmps
mov
jo
das
sub
mov
jmp
jmp
push
pusha
pop
add
adc
push
add
xchg
mov
lods
(bad)
xor
loope
cmp
xchg
and
sti
inc
mov
ss
mov
ret
scas
repz
ja
daa
test
jns
fdivr
or
xor
rol
ss
test
xchg
jo
mov
pop
repz
test
pop
lods
adc
pop
dec
xor
or
xor
jge
repz
mov
or
jae
(bad)
outs
fsubr
sti
jge
dec
xor
cwde
sub
sbb
or
cs
and
ror
arpl
inc
or
sub
ffree
adc
div
imul
mov
ficomp
rcl
inc
icebp
leave
jmp
out
pop
add
movs
cmp
mov
or
mov
mov
out
xor
push
scas
cmc
(bad)
mov
push
popf
out
(bad)
sub
clc
int
das
icebp
adc
sub
sub
repz
retf
(bad)
jl
pop
loope
retf
fst
fwait
jmp
mov
and
les
enter
int3
adc
test
ins
pushf
push
in
add
les
lods
push
push
mov
mov
leave
add
add
sub
xchg
aad
cli
ficom
inc
repnz
call
sub
test
pop
ret
jg
ja
sbb
mov
jg
daa
imul
add
pop
test
(bad)
aaa
push
scas
xor
push
lods
sbb
test
mov
xor
add
(bad)
sbb
lods
test
cmps
mov
call
add
fs
jb
and
push
test
test
cmp
int3
push
setl
adc
fnstenv
iret
jecxz
xor
js
test
mov
push
jns
mov
or
mov
sbb
xor
jnp
scas
js
xchg
sti
mov
or
jne
sub
xchg
adc
mov
mov
das
adc
push
xchg
lds
out
mov
xlat
loope
ins
jnp
pop
mov
mov
imul
mov
push
push
push
mov
lock
jns
(bad)
mov
ja
test
dec
ja
xchg
(bad)
lock
dec
rcr
ret
xchg
jbe
inc
test
imul
repz
mov
aam
xchg
call
out
sbb
xchg
mov
jae
arpl
rcr
(bad)
nop
adc
enter
or
jmp
pop
cmp
add
push
icebp
in
lods
iret
and
push
and
mov
mov
gs
xor
and
rol
lock
cmp
add
mov
jmp
jl
dec
and
jbe
scas
ins
jecxz
fisttp
jle
lahf
retf
add
xor
(bad)
iret
add
dec
int3
mov
std
cmp
retf
hlt
fld
push
(bad)
es
in
pop
mov
call
mov
jo
jo
fdivr
stc
dec
cmps
pop
int3
in
or
cmp
les
add
jbe
std
ret
cmp
sub
dec
out
in
mov
cmp
adc
aam
fnstsw
cmps
jg
fcom
dec
xchg
and
xor
xchg
sbb
scas
and
hlt
sub
fs
repz
mov
int
add
shl
add
aad
outs
test
icebp
pop
push
mov
ret
mov
fst
pop
stos
sti
inc
out
mov
xor
fild
movs
ins
rcr
add
enter
fild
icebp
push
fmul
push
loope
jb
ins
or
pop
aas
jns
pop
mov
jne
mov
and
xchg
jge
outs
mov
or
mov
add
(bad)
daa
dec
inc
ret
(bad)
outs
add
lock
cmp
test
test
dec
sbb
xor
cmp
sub
imul
je
sub
dec
sub
leave
aaa
scas
add
and
mov
call
mov
in
arpl
or
ret
retf
xlat
push
and
hlt
cmp
dec
pop
or
mov
pop
mov
cmps
push
sbb
jmp
dec
fcomp
mov
aad
sbb
mov
jp
movs
fidivr
retf
adc
ret
push
inc
or
xor
imul
mov
(bad)
sahf
popf
inc
cmp
test
push
inc
dec
and
fld
and
(bad)
fdiv
enter
dec
sub
dec
retf
lods
mov
out
xchg
(bad)
loopne
je
mov
push
mov
pop
pushf
xchg
and
(bad)
mov
push
pop
or
jle
outs
aaa
or
pop
add
shr
cli
xchg
lahf
shl
jo
punpcklbw
jl
dec
mov
ins
loopne
sub
in
jmp
mov
mov
movs
loope
sbb
and
repnz
mov
inc
cmp
xor
sbb
aam
pop
mov
xchg
lock
rcr
push
sub
call
or
dec
dec
loopne
mov
cmps
test
inc
xchg
enter
inc
loop
leave
push
pop
cmps
mov
popa
(bad)
adc
dec
inc
arpl
fimul
jecxz
push
test
sbb
xor
push
cmp
pop
sbb
dec
adc
sbb
mov
xchg
sti
adc
sti
pop
xchg
icebp
fstp
dec
push
gs
sub
add
pmulhuw
or
mov
outs
mov
jmp
retf
sub
out
dec
jb
push
in
dec
xchg
(bad)
push
push
push
mov
add
in
mov
cmp
(bad)
rcr
dec
(bad)
daa
retf
daa
cwde
sbb
iret
(bad)
mul
rol
mov
std
mov
fdiv
xor
jmp
dec
jge
ficom
repz
inc
mov
push
retf
add
or
ficom
pushf
cmp
imul
inc
push
cmp
scas
or
or
push
idiv
test
or
clc
xchg
in
add
mov
mov
cli
sub
pop
push
les
clc
lods
das
add
sbb
rol
shr
mov
test
cmps
or
sbb
fsub
out
mov
retf
mov
inc
retf
adc
mov
sub
ret
dec
das
(bad)
int
adc
jb
fld
sti
mov
inc
adc
sbb
dec
xor
ja
leave
push
sti
xlat
rol
ss
fadd
loop
lock
pop
ja
cli
inc
repnz
lods
pop
loopne
arpl
adc
sar
(bad)
outs
frstor
out
mov
jge
outs
imul
xlat
(bad)
repz
icebp
add
retf
dec
dec
data16
sti
lock
aaa
aas
xchg
out
pop
gs
call
pop
scas
(bad)
aad
xchg
sti
inc
cwde
mov
stos
and
jae
jb
push
xlat
imul
sub
ss
or
lock
popf
mov
je
shl
inc
movs
dec
or
(bad)
ret
cmp
add
cmp
push
lds
mov
pop
cli
nop
arpl
(bad)
stos
mov
out
pop
or
mov
push
push
jecxz
pop
lods
movs
fisub
fstp
jmp
add
inc
adc
xchg
and
(bad)
fiadd
iret
or
fcomp
mov
jmp
rep
ds
ds
imul
inc
fwait
mov
dec
push
mov
jae
fwait
mov
int
lea
jmp
test
xchg
inc
mov
add
sub
scas
cs
sub
enter
dec
sub
jp
xor
jnp
push
ret
data16
mov
aaa
mov
jge
and
jns
cmps
push
adc
inc
mov
xchg
inc
jp
sub
or
dec
stc
xchg
mov
lds
mov
and
loopne
repz
cmc
push
mov
imul
ret
fisttp
sub
pop
leave
mov
pusha
adc
retf
rcr
mov
repz
movs
ds
pop
add
sbb
ds
mov
or
popf
jle
pop
test
inc
adc
mov
mov
lds
jmp
ins
xchg
or
or
and
cmp
mov
mov
stos
out
pop
push
push
leave
dec
bound
loop
repnz
xlat
fcmovne
imul
int
repnz
mov
gs
(bad)
fld
call
call
add
iret
dec
jo
retf
cs
mov
sub
and
repnz
xchg
jg
dec
hlt
lahf
out
push
js
repnz
ror
pop
push
or
push
(bad)
aas
sub
dec
xor
loopne
es
xchg
xchg
js
mov
scas
mov
adc
adc
iret
cwde
imul
mov
sar
dec
sub
dec
mov
and
sbb
data16
jecxz
(bad)
and
into
ss
aam
test
cld
xor
cmp
inc
and
add
int
and
pop
adc
ds
popf
push
fisubr
add
xor
data16
jbe
mov
jbe
test
ss
xchg
icebp
push
scas
es
push
mov
repz
daa
test
lds
call
jbe
repnz
mov
arpl
mov
in
xor
in
pop
cs
inc
push
mov
mov
mov
sar
(bad)
pop
das
cmps
mov
dec
inc
adc
fucom
xchg
sub
bound
cmp
ds
movs
mov
cs
scas
mov
(bad)
cmp
push
aaa
inc
imul
mov
mov
cmp
inc
into
mov
rcl
cmps
loope
rol
mov
inc
std
or
test
adc
in
out
jecxz
scas
loopne
cmp
iret
cwde
xchg
mov
test
push
rcr
mov
not
(bad)
(bad)
inc
cmp
hlt
sbb
add
xchg
mov
push
idiv
push
cld
mov
retf
imul
sub
fstp
stos
inc
pop
or
lahf
or
cli
sub
mov
jle
mov
mov
out
iret
push
clc
inc
sub
add
(bad)
pop
mov
pushf
sub
daa
mov
cdq
cli
in
or
xchg
lock
arpl
shl
pop
(bad)
cmp
push
outs
cmp
inc
cmp
aas
dec
mov
xchg
int3
push
imul
mov
adc
out
inc
cld
cmp
pop
ins
sub
dec
scas
adc
ficom
enter
push
mov
push
push
out
scas
nop
xchg
in
cli
jl
jo
fisub
arpl
dec
aaa
(bad)
xor
and
lock
or
mov
and
and
push
cmc
bswap
cwde
movs
cs
shl
stos
in
sub
scas
sub
sub
sbb
sbb
shr
add
sub
icebp
pop
and
les
out
pop
std
mov
cmps
dec
push
jge
(bad)
mov
mov
mov
stos
pop
dec
inc
call
cmps
mov
push
scas
mov
imul
or
test
mov
or
push
adc
dec
repz
scas
retf
jmp
push
or
sub
xchg
mov
xlat
dec
bnd
jp
jmp
and
or
sbb
cmp
inc
inc
arpl
push
jecxz
mov
pop
pushf
les
out
sub
and
jl
sti
mov
sar
cwde
adc
retf
xchg
shr
add
cmp
adc
mov
loopne
mov
jg
mov
dec
sbb
movs
stc
bound
mov
sub
stos
adc
adc
ins
mov
int
loop
lahf
into
(bad)
(bad)
jns
mov
lods
enter
out
icebp
or
fcom
gs
cmp
mov
dec
inc
sub
jp
adc
cld
pop
cmps
adc
pop
or
jmp
repnz
imul
sbb
push
sbb
stos
dec
push
pop
call
xor
jl
retf
int
push
mov
xor
jge
neg
push
and
(bad)
inc
gs
cld
aas
jg
push
xor
ins
data16
push
pop
cwde
(bad)
sub
or
mov
fist
cmc
loop
fist
jns
ret
aas
mov
push
es
fdiv
ins
push
mov
repnz
aaa
imul
mov
pushf
cli
mov
outs
(bad)
aas
addr16
jge
mov
retf
mov
pusha
adc
repnz
fdivr
mov
push
icebp
neg
mov
outs
movs
imul
mov
cld
xchg
out
mov
pop
pop
out
xor
fisubr
jne
mov
jecxz
ins
jne
mov
pop
icebp
mov
in
jl
repnz
cs
dec
aaa
pop
mov
pop
out
je
enter
fwait
jo
mov
lods
fimul
adc
aaa
bound
add
xchg
push
cmp
mov
cwde
or
jbe
mov
test
xor
mov
pop
fxch
cmp
dec
push
push
xchg
dec
xchg
pop
add
loop
pusha
leave
sbb
jns
cdq
(bad)
fdiv
stc
mov
stos
jmp
jno
adc
jne
jecxz
ss
ins
sub
push
pop
sbb
and
xor
or
mov
scas
loope
pop
sbb
shr
pusha
rcl
xor
sub
fld
idiv
mov
xor
jmp
test
push
test
cdq
imul
(bad)
aad
fs
xchg
mov
mov
pop
imul
loop
pusha
ffree
icebp
pop
stos
cmp
mov
fs
push
addr16
jno
fld
loop
out
cmps
mov
mov
int
shl
iret
cmps
sub
movs
mov
aaa
jecxz
ret
xchg
add
repz
das
jb
fsubr
inc
xchg
mov
dec
rcr
test
lahf
jmp
cli
cmps
inc
inc
popa
cli
int3
or
popf
mov
mov
in
push
mov
sbb
js
in
sub
sbb
adc
pop
jb
les
push
retf
jge
out
push
push
xor
add
movs
xchg
push
cmp
xor
in
and
and
jne
pop
dec
cmc
pop
out
add
push
addr16
fistp
aaa
push
jecxz
mov
jg
outs
lods
mov
pop
cmps
mov
jne
pop
push
sbb
cdq
shl
into
test
sti
sti
stos
call
cmp
mov
hlt
lea
mov
cmp
jmp
jecxz
fs
xor
mov
lods
push
sahf
mov
sahf
xchg
mov
mov
jnp
xlat
sbb
cwde
ret
scas
adc
je
(bad)
aas
ror
mov
pop
push
fiadd
mov
jns
pop
outs
sbb
into
xchg
aad
in
cmc
cwde
fcmovu
xor
std
push
dec
ret
and
out
push
xchg
jmp
test
(bad)
fs
add
mov
fcomp
sbb
scas
ins
push
mov
xor
mov
add
sbb
es
xor
cmp
xchg
gs
dec
into
movs
mov
adc
pusha
add
jmp
xchg
xchg
loope
popa
sbb
pop
and
pop
push
sub
nop
ins
mov
int3
inc
shl
pop
retf
dec
add
repnz
es
xor
xor
lods
shr
mov
mov
or
inc
pop
and
fdiv
movs
aad
dec
mov
repz
nop
cmc
jno
cmp
pop
icebp
xchg
mov
adc
mov
int
mov
je
vmovsd
and
or
dec
sbb
jmp
icebp
mov
(bad)
pop
leave
or
je
ins
and
jmp
pop
dec
mov
sub
fs
js
cmps
out
repnz
out
jmp
pop
inc
fisub
ins
pusha
fsub
ss
mov
nop
sbb
fiadd
sbb
sbb
inc
xchg
xchg
les
jne
dec
fidiv
sbb
pop
leave
pop
fstp
lahf
jp
sub
sbb
adc
add
xor
loop
mov
ja
jp
int
pop
xor
push
push
sbb
jbe
cmps
pop
stc
icebp
add
mov
movs
cli
fwait
in
jo
mov
hlt
add
sbb
jb
sbb
loope
add
repz
mov
je
ss
das
out
sub
jle
inc
mov
bound
enter
rol
xchg
and
ror
jae
fistp
es
aam
scas
cli
inc
xchg
xor
sub
pop
xchg
test
push
scas
pusha
mov
fst
cld
mov
mov
cwde
pop
sti
shl
cli
jge
popf
int
repz
imul
and
push
(bad)
cld
pop
in
adc
arpl
scas
mov
je
jg
sahf
movs
popa
xchg
test
or
sar
cmp
and
or
mov
add
les
es
jnp
pop
pop
and
or
inc
shl
sti
sub
stc
cmps
and
ror
xor
sar
call
xor
jp
sbb
xchg
(bad)
retf
leave
into
mul
shr
mov
cmc
push
and
fwait
adc
lock
jecxz
fidiv
out
push
ret
or
ds
cmps
jae
mov
fwait
scas
dec
pop
repz
inc
js
cli
popf
(bad)
scas
or
cld
adc
dec
movs
lea
outs
push
int
and
nop
mov
push
neg
lds
and
loopne
fsub
scas
in
push
dec
sub
das
imul
int
cmc
jp
mov
mov
push
sub
mov
pop
test
or
jecxz
outs
pop
mov
lock
adc
jnp
jecxz
push
xchg
and
test
and
xor
idiv
mov
pop
nop
dec
and
jne
xor
dec
add
mov
mov
nop
and
xor
ja
repnz
(bad)
jnp
xor
mov
xor
cwde
push
loop
pop
aas
sub
into
addr16
pop
lods
mov
fcomip
imul
sbb
aas
leave
sub
pop
test
aad
arpl
jl
ret
xchg
ins
aad
fistp
or
sbb
arpl
xor
or
mov
ja
cld
sbb
(bad)
or
adc
rcl
and
push
push
icebp
or
jge
aaa
xor
(bad)
mov
cld
add
cmp
stos
test
and
sub
jno
jo
dec
test
mov
ds
outs
add
mov
pop
cld
inc
push
push
sahf
hlt
push
fdiv
push
idiv
ins
mov
dec
mov
xchg
movs
jbe
aam
lahf
loop
ds
inc
mov
jg
jae
sub
xor
cmc
mov
adc
jne
repz
xor
mov
adc
mul
(bad)
in
in
mov
and
mov
dec
les
inc
mov
pop
xor
mov
lods
push
ficom
dec
pop
mov
or
xor
mov
fistp
dec
and
in
into
je
pop
jl
pop
lods
jle
jb
jno
(bad)
data16
aad
cmp
jb
add
icebp
das
in
in
leave
(bad)
stos
enter
addr16
or
cdq
dec
sub
ss
and
sar
mov
or
cmp
add
fwait
jmp
xchg
enter
inc
mov
push
pop
xchg
inc
in
dec
mov
clc
call
mov
lock
push
mov
pop
push
clc
jne
mov
int3
addr16
xor
outs
sub
cmp
mov
mov
or
inc
aas
pop
and
mov
lock
iret
(bad)
nop
jl
out
push
addr16
jge
dec
or
xor
loope
stos
xchg
test
add
mov
jo
fdiv
and
loopne
inc
fidiv
(bad)
mov
(bad)
and
lea
push
mov
jno
jecxz
dec
inc
mov
mov
inc
in
pop
ds
(bad)
fld
ror
mov
(bad)
mov
jge
retf
ins
xchg
mov
push
cmps
add
jecxz
repnz
mov
enter
(bad)
mov
cdq
rol
cdq
mov
jbe
retf
lock
mov
mov
fsubrp
adc
cmp
loopne
xchg
dec
jmp
bound
das
enter
pop
data16
hlt
pop
dec
js
cmps
sub
or
mov
clc
sub
dec
mov
fstp
pop
or
icebp
(bad)
mov
pop
push
jmp
adc
mov
fldcw
shr
jle
mov
stc
xchg
jo
in
aaa
sub
cmp
lds
mov
dec
sub
ret
je
in
push
jae
jne
popa
sbb
xchg
inc
cmp
push
div
out
xchg
or
or
mov
push
sub
xchg
xchg
push
daa
ret
aad
mov
or
adc
outs
dec
mov
icebp
lock
and
xchg
ins
ss
in
nop
mov
mov
clc
cmps
pop
push
inc
cdq
addr16
out
dec
leave
fisub
or
mov
inc
xchg
sar
int
ins
and
add
test
test
or
out
hlt
fcom
inc
and
fcmovne
idiv
mov
shl
pop
jne
xchg
xor
and
mov
cmc
lods
pop
out
daa
mov
leave
cdq
imul
xchg
xor
fwait
mul
addr16
sahf
outs
fst
repz
retf
sub
call
hlt
adc
mov
pushf
xchg
je
ret
daa
mov
repnz
sbb
call
retf
out
ja
mov
test
inc
(bad)
lods
js
fld
into
ret
jns
outs
test
test
popf
ror
outs
fnstsw
pusha
imul
iret
mov
mov
jne
cmp
dec
or
and
inc
pop
jmp
push
jge
mov
(bad)
std
cmp
(bad)
fild
out
popf
jmp
fild
arpl
mov
clc
jp
adc
or
pop
cmp
sbb
sub
push
jmp
(bad)
jnp
mov
sub
mov
and
jne
pop
xchg
push
out
(bad)
ror
movs
xchg
dec
test
inc
fld
mov
pop
addr16
nop
aas
leave
jo
jmp
and
ins
dec
ds
inc
push
push
xor
xchg
jae
mov
lock
pop
add
xchg
adc
cdq
xchg
lods
jmp
es
jo
xor
sbb
jge
adc
sub
push
hlt
retf
outs
fcom
mov
jge
add
sbb
pusha
jge
lods
or
mov
inc
jmp
fidiv
xor
pop
pop
mov
ins
stc
cmc
dec
sub
test
or
xchg
jno
add
(bad)
mov
jnp
mov
data16
or
push
sbb
cld
sub
or
ja
clc
adc
nop
fdivr
rcl
mov
std
test
jno
cmp
ss
inc
push
pop
in
sti
out
jle
pop
sahf
jnp
inc
out
xchg
inc
daa
mov
scas
fwait
outs
sbb
out
imul
adc
(bad)
xchg
leave
sub
or
leave
rol
sbb
jg
mov
adc
jns
inc
or
sub
pop
pop
lods
cmp
ins
mov
jmp
push
push
xchg
jg
retf
fiadd
js
sbb
mov
(bad)
lock
cmp
xor
sti
(bad)
in
dec
sbb
aad
xchg
ins
enter
fld
fimul
(bad)
aas
sbb
push
dec
gs
mov
jg
iret
push
mov
xor
(bad)
jae
(bad)
pop
adc
mov
mov
push
pop
push
shr
adc
shl
fnstcw
jns
ins
and
mov
pop
(bad)
or
cli
inc
pop
call
mov
mov
int3
jns
(bad)
loopne
js
push
imul
in
dec
outs
push
adc
and
popa
int
jmp
inc
repnz
ror
xchg
movs
sub
or
(bad)
xchg
mov
stos
(bad)
lock
jmp
hlt
jl
stc
cwde
xor
daa
mov
inc
or
dec
test
inc
test
or
or
mov
repz
adc
mov
jecxz
pop
jae
sub
(bad)
sti
rcr
js
das
test
js
test
(bad)
fs
jo
fisttp
xchg
mov
jecxz
lea
xchg
jmp
mov
push
mov
jg
jg
adc
sbb
push
fs
cwde
repnz
mov
in
outs
in
mov
mov
cmp
mov
repnz
div
mov
repz
sbb
pop
sbb
movs
pop
inc
jae
mov
ss
mov
xchg
aad
cmps
fisub
ins
in
jae
jne
inc
xchg
push
mov
inc
test
out
or
loopne
movs
cmp
cwde
iret
jg
push
push
ins
sbb
fs
imul
xchg
xchg
scas
jne
cmp
aaa
adc
xor
bound
in
pop
inc
rcr
push
ret
ins
enter
lahf
jbe
in
pop
jnp
sub
mov
sub
sub
jns
popf
xor
hlt
mov
pop
lods
mov
(bad)
arpl
test
jbe
loope
or
jge
push
ins
out
retf
aam
hlt
pop
arpl
dec
xchg
fild
ja
dec
cs
mov
int
enter
fs
dec
rcr
shl
std
jo
adc
push
(bad)
cld
add
mov
xor
jecxz
in
fnsavew
jo
js
stos
xchg
into
call
stc
cs
repnz
jg
(bad)
bound
sub
jns
pop
scas
xor
mov
imul
shl
call
rcr
mov
mov
fwait
clc
sbb
push
aaa
fimul
mov
pop
sbb
and
mov
push
ror
sub
xchg
(bad)
leave
or
mov
adc
aad
pop
dec
jnp
mov
ror
shl
icebp
push
inc
out
pusha
into
sub
clc
xchg
lea
sbb
nop
or
stos
loope
repz
sbb
int
in
xchg
dec
mov
int
outs
pop
add
push
xor
xchg
sbb
sbb
daa
repnz
fdiv
add
xchg
sti
push
jo
mov
sar
add
mov
push
jbe
mov
not
fwait
cmp
push
dec
scas
ret
int3
ds
addr16
and
pop
lods
xchg
aaa
mov
lea
out
shl
lods
mov
push
jno
dec
inc
fadd
inc
pop
pop
dec
or
icebp
jnp
push
inc
push
jns
jns
cld
fdivp
rcl
ja
shl
cwde
push
jnp
sub
mov
and
test
or
lock
imul
mov
sub
in
cmp
pop
(bad)
mov
lahf
jae
(bad)
or
(bad)
mov
les
sub
or
mov
pop
jne
mov
push
mov
or
sub
cmp
push
int
lahf
stc
scas
ja
dec
dec
int3
mov
cs
imul
test
dec
(bad)
add
fst
ds
or
ins
mov
mov
cdq
dec
push
stos
ss
mov
jae
sub
in
jmp
xor
mov
sti
mov
sahf
add
repnz
stc
int3
in
(bad)
jg
pop
daa
lods
ds
xchg
aam
push
or
icebp
xbegin
clc
push
mov
lods
cmp
dec
mov
pop
sbb
int
imul
xor
stos
rcr
hlt
mov
push
fs
sub
shr
stos
jp
adc
lods
les
sub
cld
sbb
repnz
shr
(bad)
adc
xor
xchg
lods
pop
nop
inc
xor
call
xchg
loopne
dec
cmp
out
imul
push
fcom
adc
sub
and
test
push
push
ret
jo
add
sbb
out
jmp
xor
sub
in
jle
data16
push
jbe
cmp
in
mov
cmp
and
imul
jmp
adc
(bad)
lock
fadd
mov
mov
jne
cmps
jns
in
(bad)
jnp
rcr
add
xchg
push
cld
xlat
stos
adc
xchg
sar
pop
fcom
jo
cmps
push
imul
sub
jle
ret
and
lods
pop
mov
mov
leave
int3
mov
fcomp
or
pop
fwait
xor
and
repz
fwait
mov
popa
and
mov
rol
mov
jmp
jecxz
mov
ds
sbb
cs
mov
(bad)
xor
jp
xchg
xchg
push
dec
and
fldenv
mov
dec
xchg
sbb
push
idiv
or
out
xchg
out
sbb
imul
test
push
ja
fadd
jl
adc
push
mov
cli
push
js
dec
mov
addr16
loope
je
shl
jb
addr16
aaa
add
mov
imul
or
rcl
rcr
inc
xor
cmp
add
cli
xchg
sub
push
and
in
scas
xor
sub
sbb
sbb
or
push
jecxz
and
addr16
ret
mov
jecxz
(bad)
sub
cdq
out
outs
movs
jmp
jbe
xlat
imul
adc
jne
inc
mov
cld
daa
add
dec
pusha
and
cmps
aas
mov
sar
(bad)
jecxz
sbb
and
jne
mov
and
retf
dec
fsubr
aaa
test
or
ja
dec
sbb
jg
or
arpl
test
lahf
sbb
jo
imul
call
dec
pusha
(bad)
fdiv
sbb
dec
xchg
cmp
jle
pop
popf
ficomp
pop
stos
and
addr16
popf
add
sub
sbb
pop
mov
sub
stc
push
and
shl
and
add
les
or
arpl
pop
scas
(bad)
jle
cmp
and
xchg
cld
dec
mov
int3
mov
mov
fistp
sub
mul
movs
daa
xchg
xchg
adc
je
push
inc
cs
mov
mov
clc
cmp
or
out
repz
dec
cmp
mov
test
mov
cld
jnp
push
xchg
inc
fcmovnbe
mov
xor
gs
leave
jmp
jmp
fadd
lods
mov
mov
outs
xchg
mov
daa
bndstx
jl
js
push
cmp
xchg
jb
mov
loopne
dec
xor
inc
es
mov
leave
(bad)
(bad)
shl
sti
fidivr
pusha
outs
enter
mov
mov
add
in
adc
or
ss
jle
add
dec
add
mov
fdivrp
inc
pusha
stos
sar
cwde
addr16
jg
add
ja
repz
mov
ins
test
sub
loop
out
iret
push
stc
pop
int
scas
stos
movs
push
aaa
stc
and
xchg
call
fcomp
jmp
sub
fisubr
fcmovb
push
inc
add
in
mov
mov
mov
in
jns
rcl
xchg
inc
push
sub
push
mov
out
outs
push
test
test
push
mov
or
arpl
sub
xor
shl
stos
jnp
shr
fsubr
mov
outs
jne
xchg
or
mov
sub
sahf
and
pop
popf
adc
movs
jecxz
cmc
inc
imul
dec
clc
repz
and
pop
pop
inc
xchg
jge
test
xchg
dec
loopne
jbe
mov
cmp
mov
pop
cmp
jmp
dec
mul
xchg
(bad)
ror
xlat
xchg
xchg
sub
jne
xor
(bad)
jb
add
xchg
cmps
aas
mov
or
out
stc
outs
fcomip
and
push
iret
jg
rcr
cwde
push
inc
inc
cli
sar
cmps
mul
pop
sub
iret
jmp
aam
lods
xchg
rcl
mov
and
scas
iret
jmp
jbe
in
fimul
mov
and
xlat
mov
aad
and
or
mov
outs
in
pop
dec
call
mov
ret
adc
cmp
jle
dec
(bad)
xchg
lahf
cmc
dec
into
out
(bad)
inc
movs
mov
jnp
xlat
pop
pop
imul
jnp
mov
and
mov
lahf
fistp
mov
cmp
mov
mov
sub
push
cdq
aas
test
cs
adc
jp
inc
das
std
rcl
data16
stos
aam
jb
out
jg
inc
loope
push
cmps
adc
xchg
repnz
xchg
mov
(bad)
(bad)
dec
jae
xchg
inc
push
inc
mov
rcr
stc
loop
jp
pop
out
jnp
dec
and
(bad)
and
and
cmps
(bad)
sbb
daa
push
dec
fs
call
sub
popf
fdiv
jne
repnz
imul
inc
sbb
pop
push
xchg
inc
inc
jne
push
push
imul
pop
fsub
loopne
inc
dec
(bad)
ficom
daa
rcr
test
fstp
test
add
dec
sbb
call
fisubr
lahf
mov
nop
outs
jl
arpl
ja
push
xchg
inc
jno
push
inc
outs
stos
ja
or
and
mov
add
scas
pop
arpl
inc
inc
sbb
int3
jns
aaa
sbb
pop
and
mov
loope
pop
pop
push
and
push
popf
xchg
enter
mov
rcl
jnp
fisubr
sbb
push
cld
push
ss
pop
cmp
test
jecxz
mov
mov
push
arpl
sbb
sbb
shr
cmp
aam
pop
fsubr
fidivr
sbb
arpl
pop
dec
dec
clc
daa
jns
mov
cmps
add
std
neg
dec
repnz
jl
jp
xchg
xor
push
xchg
xor
inc
shr
jmp
mov
cli
mov
imul
pop
adc
add
jnp
sub
loope
je
lods
aas
ja
gs
std
add
call
or
push
mov
stos
inc
mov
gs
cwde
mov
test
mov
add
loopne
xor
sbb
inc
push
imul
aam
push
pushf
add
test
mov
pop
aas
into
ins
pop
dec
retf
in
sar
mov
xchg
out
icebp
mov
mov
ror
and
jle
ins
adc
sahf
movs
mov
xchg
cmp
in
cwde
ret
and
enter
sbb
dec
pop
xchg
nop
add
mov
sbb
aam
mov
xchg
retf
mov
mov
mov
push
mov
aad
clc
(bad)
xlat
sub
ins
jno
inc
adc
pop
push
stos
popa
arpl
cmp
dec
cmc
jno
imul
jmp
pop
enter
aam
pop
pop
shl
xor
jle
rcl
xor
cmp
out
jmp
or
mov
stos
mov
adc
xchg
push
cmps
and
add
push
dec
adc
cwde
lods
push
mov
push
jmp
test
jae
cmp
adc
dec
add
cli
cmp
(bad)
js
jecxz
inc
(bad)
sysexit
add
pop
sbb
repz
stos
cdq
inc
daa
and
push
sub
mov
jmp
sbb
sbb
enter
inc
xchg
sub
out
clc
lods
outs
scas
xor
jmp
stos
daa
into
(bad)
lock
push
ret
xor
mov
lods
push
icebp
jbe
lds
mov
inc
sbb
sbb
jmp
dec
mov
out
or
fwait
xchg
dec
ret
pushf
inc
js
push
arpl
jp
push
sbb
retf
push
jg
dec
ja
or
mov
jae
mov
lahf
sub
sub
imul
sbb
ret
(bad)
and
dec
adc
test
test
ret
ret
mov
or
pop
hlt
fistp
mov
jo
out
mov
(bad)
in
shr
mov
mov
hlt
mov
outs
xchg
scas
stos
mov
cmp
mov
outs
dec
cld
iret
movs
fiadd
sbb
ss
jmp
fadd
add
sub
fcom
shr
mov
enter
ror
jl
cmp
jmp
bound
in
imul
shl
test
mov
xor
call
xor
(bad)
dec
adc
cmp
mov
or
inc
popf
push
lea
jmp
out
dec
inc
ins
loopne
xchg
fs
retf
arpl
btc
inc
pop
call
inc
jne
popa
out
jno
xor
sub
dec
sub
repz
movs
push
iret
hlt
add
mov
fldcw
aam
xchg
jae
test
push
movs
inc
out
(bad)
dec
dec
jns
out
mov
sub
push
sbb
add
lds
cmp
pop
mov
sub
or
imul
jl
inc
push
mov
cdq
add
test
(bad)
addr16
sub
pop
jbe
movs
stos
jecxz
mov
pusha
iret
dec
jmp
jno
jp
das
(bad)
adc
movs
test
inc
inc
cmp
sub
call
pop
jne
ror
std
fwait
xor
ficomp
sbb
stc
cmp
sbb
dec
aas
scas
cmps
jbe
xor
mov
(bad)
jg
sar
out
cdq
mov
sbb
inc
xchg
push
out
outs
aam
inc
cmp
push
in
push
xchg
les
es
rep
popa
inc
xor
in
mov
mov
add
jge
ret
test
adc
fs
xlat
imul
xchg
dec
sti
xchg
or
pop
dec
inc
gs
int
popf
rcr
fidivr
jmp
jp
out
retf
(bad)
out
push
ror
out
dec
mul
lfs
and
dec
jmp
loopne
int
lods
jae
ror
add
or
push
xchg
popf
call
scas
sub
pop
push
mov
mov
ret
push
xor
movs
mov
xchg
cli
pop
jne
fild
dec
mov
outs
mov
xor
fcomp
or
lahf
cdq
std
sbb
xchg
hlt
shl
ins
mov
and
and
inc
lods
xor
fwait
les
imul
inc
cmp
mov
ins
cwde
cmp
cmp
sub
mov
movs
mov
leave
nop
push
out
scas
in
and
in
dec
or
and
pushf
pop
pop
pop
jns
mov
or
xchg
cdq
call
inc
mov
sub
dec
xchg
cmp
cld
arpl
sub
push
cld
or
dec
into
cmp
imul
gs
cli
iret
xlat
mov
out
or
mov
xchg
mov
fwait
test
mov
mov
mov
push
test
push
mov
int
mov
push
push
(bad)
loope
(bad)
es
push
and
jns
push
sub
jmp
inc
cld
mov
out
add
add
das
jmp
imul
popf
pushf
add
shl
inc
cmp
lock
mov
mov
jns
cmp
dec
ret
xchg
inc
icebp
inc
or
xchg
mov
inc
cmps
ss
sbb
aad
mov
mov
jbe
cmp
sahf
push
(bad)
push
popa
xchg
sbb
sbb
cmp
loop
sub
stos
movs
mov
inc
add
sub
sar
test
aam
pop
out
out
gs
in
mov
sbb
jge
mov
adc
pop
(bad)
out
mov
sahf
mov
xor
xor
test
mov
sbb
aas
adc
sbb
push
and
adc
mov
push
xchg
das
jo
sub
sub
fmul
sbb
add
(bad)
test
(bad)
jb
adc
hlt
test
pop
mov
xchg
jp
(bad)
arpl
in
mov
push
mov
sub
add
cdq
int3
push
retf
ret
jl
outs
cmc
nop
jo
ds
dec
push
mov
fs
mov
mov
ja
iret
(bad)
xchg
xor
mov
mov
push
add
and
fwait
cmps
mov
cmps
xchg
push
push
je
aam
push
mov
jmp
mov
mov
out
test
cmp
cmp
add
sbb
and
mov
add
cmps
jnp
jbe
(bad)
lods
sub
lahf
mov
sbb
lahf
fcmovb
ret
shl
shl
mov
push
dec
add
dec
adc
lock
xor
imul
mov
inc
(bad)
std
sub
mov
ins
mov
add
xchg
add
push
xchg
and
sti
repz
sub
popf
push
sub
jb
inc
ret
xlat
mov
adc
in
inc
cmps
icebp
sbb
in
cmp
int3
cmps
stos
fs
cmc
test
push
pop
mov
das
mov
sub
inc
jge
popa
mov
mov
fsubr
jmp
adc
cwde
ins
jb
adc
jecxz
sbb
hlt
inc
sub
sub
jnp
fidivr
pop
lods
rcr
mov
popf
push
leave
mov
xchg
jb
jae
jmp
(bad)
mov
inc
sar
inc
sbb
mov
push
mov
test
sbb
aas
mov
xchg
sahf
jbe
rol
adc
imul
jmp
adc
add
arpl
fdivp
jnp
mov
jge
mov
push
add
xchg
stos
mov
or
pop
adc
mov
movs
pop
cmps
jo
ror
test
xor
out
adc
xlat
add
sti
xchg
popf
push
mov
loopne
xchg
retf
(bad)
leave
sub
int3
stos
and
mov
mov
adc
cmp
movs
ins
(bad)
addr16
imul
xchg
pop
scas
into
leave
lds
xor
sti
jb
cmp
mov
inc
add
dec
je
stos
or
jmp
jl
mov
leave
ficom
enter
mov
push
pfacc
leave
xchg
movs
and
add
jnp
jp
cld
dec
xor
cli
mov
xchg
push
in
jae
or
cmp
inc
cwde
fwait
mov
in
xor
push
and
cmp
sbb
mov
mov
aad
mov
sub
push
js
movs
(bad)
jmp
inc
push
adc
(bad)
mov
sub
jmp
retf
les
dec
cmp
out
fidiv
gs
dec
and
ins
ficomp
das
jbe
pop
popf
or
scas
mov
add
add
mov
sub
test
je
add
and
and
sbb
push
sub
jmp
sbb
mov
and
cdq
mov
cmp
push
shr
loopne
cmps
or
inc
cld
arpl
mov
inc
jg
xor
sbb
xchg
push
mov
xor
cmp
dec
shl
pop
mov
push
retf
fsub
and
push
jecxz
jns
xlat
jne
and
stos
mov
jnp
and
scas
test
dec
push
neg
int3
sti
jmp
in
mov
call
inc
je
out
fdivr
jb
leave
int3
jne
mov
pop
daa
loopne
adc
js
jp
jns
icebp
mov
adc
xchg
jmp
push
xor
cmp
xor
cmc
clc
cmp
scas
fptan
cmp
scas
jno
fwait
mov
jnp
fmul
in
jg
jmp
test
cmps
shr
sub
dec
dec
push
pop
aam
jp
shr
ret
sbb
xor
inc
scas
inc
repz
int
adc
mov
dec
pop
sahf
(bad)
or
push
sub
iret
pop
into
stc
mov
add
pop
add
outs
std
fwait
cmp
movs
(bad)
cld
sub
(bad)
xlat
push
pop
push
(bad)
in
das
sbb
sbb
dec
pop
fbld
pop
jns
xchg
iret
or
popf
fwait
adc
neg
or
enter
cld
ret
push
mov
int3
pop
lock
popf
xor
or
mov
push
or
cmp
push
outs
xlat
retf
cdq
mov
les
push
pop
shr
js
push
xor
inc
xchg
pop
test
or
stos
mov
mov
test
xchg
xchg
and
push
adc
stc
inc
mov
or
lods
jo
dec
ror
push
mov
cli
mov
hlt
dec
mov
scas
sbb
push
in
out
addr16
imul
sahf
fsub
mov
inc
cmc
sbb
jo
sub
fnstcw
pop
imul
aad
mov
add
mov
push
arpl
data16
ins
fs
jmp
aaa
jl
scas
jo
xchg
xor
leave
mov
mov
cmps
movs
xchg
(bad)
stc
pop
imul
fs
outs
xchg
and
imul
xor
and
xchg
sbb
push
pushf
fsubr
sub
(bad)
pusha
fdivr
(bad)
inc
loop
jne
jmp
sbb
jnp
ror
pusha
rcl
shr
lahf
mov
icebp
pop
out
lods
aam
(bad)
dec
ss
inc
ficom
ins
cmp
addr16
mov
sahf
call
or
mov
fbld
in
dec
in
add
(bad)
sub
xchg
push
xchg
and
addr16
mov
mov
push
push
aaa
sub
inc
popf
imul
mov
sbb
in
js
gs
hlt
aad
(bad)
loopne
push
in
xchg
push
cwde
inc
and
sub
jge
mov
or
ins
dec
mov
jp
mov
int
shr
xchg
(bad)
adc
cdq
xor
fistp
jae
xchg
clc
repz
dec
bound
jmp
retf
adc
cmc
imul
or
and
mov
pushf
clc
fadd
iret
cmp
lods
adc
stos
(bad)
js
cdq
fstp
mov
dec
ret
add
cmp
arpl
xchg
call
xor
and
push
push
ins
pop
cmp
sbb
jmp
push
mov
int3
outs
dec
lea
ds
int3
out
dec
ret
push
push
pushf
shl
pop
loope
inc
sub
das
fdiv
push
inc
rsm
ss
mov
loop
push
push
pop
sbb
add
cmp
adc
test
int3
call
or
and
add
fisttp
pop
outs
test
adc
int
push
repz
inc
add
(bad)
cwde
fcom
xor
pushf
adc
out
loopne
(bad)
(bad)
pop
sub
fwait
lods
ins
jns
jb
mov
shl
and
adc
xchg
repz
ret
pushf
mov
out
pop
mov
out
inc
mov
mov
xor
test
dec
dec
leave
repz
inc
fdiv
dec
inc
daa
test
sar
pop
data16
cli
scas
sbb
and
shl
or
mov
call
retf
sbb
ret
pop
fstp
pop
sub
(bad)
mov
movs
gs
fst
stc
shr
mov
pop
fadd
push
(bad)
and
ret
lods
movs
iret
imul
addr16
or
xchg
jecxz
cmps
shr
adc
rcr
fnstsw
or
mov
stos
enter
cmp
cmc
mov
cmp
imul
in
lea
hlt
and
push
scas
and
xor
jg
(bad)
push
cmps
(bad)
lock
in
test
arpl
and
loopne
add
out
push
fbstp
adc
iret
stc
push
jb
pop
(bad)
lods
pusha
lods
sar
pushf
xchg
sub
leave
cmp
(bad)
jnp
adc
addr16
in
(bad)
rol
mov
mov
cdq
jecxz
aam
call
or
cmp
movs
pop
stos
jmp
dec
xor
or
pop
lods
jp
imul
fiadd
cs
inc
add
push
clc
mov
mov
int
sbb
data16
push
and
push
mov
and
dec
and
lds
push
lahf
dec
pop
mov
pop
push
mov
sbb
enter
imul
pop
push
test
rcr
pop
and
aad
mov
fs
jmp
add
fcmovnb
aas
shl
mov
cdq
ins
fdivr
push
inc
lock
pop
mov
sbb
cmp
jb
test
jg
xchg
not
jns
test
xchg
dec
lahf
lock
pop
call
xor
scas
rcr
fsub
xor
stos
mov
fnstcw
retf
jg
push
inc
pop
(bad)
std
pop
stc
test
pop
sahf
rcr
sbb
dec
aas
or
mov
inc
pop
xor
sti
jne
(bad)
jle
add
pop
push
stos
xlat
(bad)
(bad)
pop
outs
scas
push
mov
mov
imul
cmp
mov
popf
sub
fnstenv
out
cli
xchg
test
inc
xchg
inc
jge
test
ins
fdiv
retf
cmp
sub
adc
dec
sbb
sub
retf
gs
test
ficom
xor
pop
mov
leave
cmp
mov
jmp
popf
retf
mov
push
fwait
retf
xor
in
das
es
movs
pop
mov
scas
add
out
add
xor
mov
jns
lock
jle
mov
test
sub
mov
mov
aad
sub
sub
loope
mov
das
or
or
cwde
daa
lea
shl
dec
cmps
fidiv
es
adc
pop
jp
fmul
mov
add
or
push
js
sub
and
mov
xchg
test
in
aaa
sub
movs
icebp
or
inc
add
mov
scas
mov
and
add
mov
jl
shr
outs
sub
mov
ss
xchg
loope
nop
xor
inc
das
xor
out
leave
push
sbb
pop
sub
jge
push
std
push
adc
clc
cwd
xor
xchg
xor
inc
xchg
xlat
aad
xchg
xor
push
sbb
lea
mov
inc
cmp
push
in
push
or
add
mov
inc
iret
adc
pop
imul
xor
ret
mov
jns
stos
cs
loope
sar
mov
adc
shr
jbe
test
and
shl
nop
add
push
cmps
mov
xchg
push
shl
sti
(bad)
pop
jns
mov
dec
jne
lds
dec
test
clc
cmps
mov
and
adc
int
(bad)
xchg
mov
and
ss
push
inc
sub
outs
stos
(bad)
pushf
cdq
ss
ins
pusha
call
das
iret
fsqrt
movs
test
and
dec
cmc
cs
mov
dec
scas
push
scas
mov
and
jne
mov
mov
loope
inc
popf
sbb
dec
cs
mov
in
add
pop
daa
add
and
pop
ret
or
jno
outs
outs
nop
or
xor
sub
fist
xlat
in
push
std
inc
pushf
jge
int
cmc
icebp
fcom
ins
and
out
rol
sub
or
outs
mov
push
mov
retf
(bad)
cmp
lahf
and
jecxz
or
iret
and
stos
enter
push
call
std
xchg
das
mov
adc
scas
dec
sbb
mov
jnp
jnp
out
inc
fcomp
ret
xchg
and
jo
sub
neg
fdiv
outs
sbb
mov
sahf
push
pop
add
into
dec
stos
add
aad
es
mov
inc
in
(bad)
cmps
mov
xchg
jae
cmp
movs
in
push
and
mov
and
stc
adc
or
mov
jnp
imul
jne
out
ror
or
jecxz
mov
xchg
(bad)
and
or
jl
dec
pushf
retf
gs
push
call
dec
mov
out
popf
test
cmc
les
ins
mov
(bad)
call
(bad)
and
push
xchg
in
add
xor
cmp
fild
icebp
int3
pop
cs
adc
aam
mov
call
ins
sub
and
in
pop
xor
outs
mul
mov
xor
inc
jae
push
out
test
adc
shr
mov
jb
sub
aaa
add
enter
push
pop
push
sbb
jne
mov
ds
iret
cmp
fisubr
xchg
and
addr16
mov
test
add
sti
mov
mov
mov
push
scas
aad
lods
or
pop
jmp
fdivr
mov
fistp
cdq
adc
not
dec
ins
icebp
sbb
xchg
stos
dec
in
mov
aam
fs
ret
(bad)
mov
fcmovnb
xchg
(bad)
std
and
pushf
daa
mov
arpl
and
mov
fmul
jl
and
jmp
dec
out
and
adc
sbb
lock
mov
mov
dec
ret
cli
pusha
cmp
xor
js
jbe
mov
fild
pop
(bad)
js
aam
jge
pop
adc
cdq
in
and
sbb
fld
pop
push
rol
sub
call
lock
or
push
nop
mov
xchg
push
push
add
cmps
outs
fdivr
and
adc
xchg
cmps
add
push
xor
cs
es
dec
call
sbb
retf
pop
adc
gs
aaa
and
and
outs
push
pop
mov
(bad)
data16
jmp
mov
mov
dec
sub
punpcklbw
int3
daa
imul
and
js
sub
jne
jne
pop
xor
aad
movs
mov
pushf
idiv
fcomp
jge
dec
cwde
xor
int3
mov
and
xchg
jmp
ja
inc
scas
js
lds
dec
ins
ret
mov
cli
inc
mov
stc
enter
adc
ret
lds
xchg
and
std
push
and
popf
mov
sub
or
or
cdq
push
pop
loopne
enter
dec
mov
jmp
xor
out
mov
enter
mov
cmp
cmps
and
xchg
fsub
mov
and
cld
loopne
mov
out
test
and
lds
push
jecxz
gs
cdq
and
add
pushf
jbe
in
icebp
xchg
jnp
mov
(bad)
hlt
sub
enter
mov
cld
pop
jbe
sbb
pusha
sar
jnp
sti
stc
and
addr16
xchg
inc
push
pop
sbb
mov
adc
clc
xor
repz
std
adc
rol
aaa
outs
xor
sub
mov
or
in
push
(bad)
cmc
pushf
sbb
test
add
inc
sbb
pop
cwde
jno
sub
mov
xchg
or
rcl
adc
loopne
and
mov
xchg
retf
jbe
nop
sbb
pop
sub
sti
adc
ret
mov
call
inc
fidiv
pusha
imul
pop
mov
fisttp
fbstp
jne
pop
mov
jbe
push
xchg
fidiv
sub
outs
or
ins
cwde
pop
ror
xchg
jnp
or
sahf
add
(bad)
out
into
jb
mov
push
cmp
sub
test
in
in
jne
repz
enter
dec
dec
in
mov
push
inc
sbb
pushf
mov
scas
pop
sub
test
jmp
adc
loop
cwde
fnstenv
adc
jno
sub
out
scas
test
std
call
sub
out
jg
aaa
mov
aam
pop
adc
push
fisttp
add
cmp
retf
xchg
mov
adc
mov
sub
stos
and
or
xchg
out
cmp
lods
inc
push
hlt
mov
inc
sub
movs
fistp
push
or
sbb
inc
mov
fdivr
ret
pop
(bad)
cmp
xor
imul
inc
call
cmc
push
push
mov
sti
cdq
imul
xchg
into
addr16
and
mov
pop
retf
lock
and
xchg
stos
std
jmp
call
lock
test
lahf
adc
and
mov
adc
not
repz
lds
ins
push
int
jmp
or
sub
and
mov
cmc
jnp
jno
xor
and
pusha
test
cmp
dec
out
mov
push
neg
rcr
xchg
retf
jmp
jno
hlt
jecxz
inc
jbe
sar
push
pop
mov
jle
xor
cmp
shr
jnp
ret
scas
and
or
sub
jecxz
jecxz
cmps
fild
lods
pop
mov
mov
jae
in
dec
repz
pushf
mov
loop
cmp
pop
sbb
fld
xchg
push
mov
lods
frstor
popf
add
mov
scas
mov
leave
shl
sub
dec
add
pop
(bad)
jecxz
push
xchg
popf
jne
dec
fwait
dec
cld
adc
mov
cmp
fwait
mov
adc
cwde
mov
inc
movs
ds
imul
jmp
pop
inc
aaa
into
adc
pop
movs
not
or
fwait
lahf
ja
std
adc
iret
jne
push
dec
push
dec
adc
xlat
and
pop
(bad)
push
hlt
sub
pop
cmps
sbb
mov
add
cdq
adc
nop
jmp
pusha
pop
call
or
adc
mov
nop
sub
pusha
mov
cmc
imul
push
sub
es
inc
xchg
sbb
sbb
sbb
dec
xor
inc
mov
add
xor
int3
aaa
inc
mov
add
ret
gs
add
mov
jo
xor
popf
xor
mov
stc
fs
inc
mov
stc
add
fsubr
xor
pop
mov
nop
fldenv
xchg
cmps
aaa
repnz
add
fwait
in
mov
repz
mov
mov
sbb
mov
and
mov
mov
jecxz
jecxz
psubsb
mov
and
pop
ror
outs
push
adc
xchg
adc
(bad)
(bad)
push
sub
shl
leave
movs
jbe
pop
in
pop
fs
retf
aas
cmp
fs
cmp
dec
xor
cmc
retf
and
mov
jl
sbb
sbb
test
lods
mov
cwde
jmp
xchg
jecxz
pop
xchg
lods
push
(bad)
push
cli
jmp
xor
cmp
push
je
mov
lea
hlt
aas
outs
mov
push
pop
sbb
add
mov
sub
fcom
stos
sahf
adc
add
(bad)
gs
pop
(bad)
dec
push
lods
fndisi(8087
enter
xor
imul
mov
xor
or
push
ja
pop
jne
pop
push
adc
adc
push
fiadd
and
pop
popa
test
add
add
les
in
sbb
push
sub
sbb
pop
fwait
into
mov
pop
int
mov
clc
lds
xchg
push
sbb
inc
inc
and
gs
scas
cmps
clc
in
pop
mov
cmp
ja
loope
or
stc
(bad)
pusha
push
(bad)
test
cmps
adc
or
sbb
(bad)
push
mov
aad
jb
imul
add
adc
mov
sub
mov
xchg
ins
lea
mov
les
pop
retf
mov
sub
or
mov
dec
(bad)
(bad)
(bad)
cmp
sbb
jno
cmp
mov
jae
pop
iret
popa
enter
jp
mov
xchg
stc
pop
shr
int3
push
jmp
sbb
pushf
stc
jp
cwde
daa
(bad)
repz
sar
stc
jmp
lea
aam
ins
stos
jb
(bad)
out
xor
ins
mov
cmps
lods
and
cmp
(bad)
lock
ret
and
aaa
mov
sbb
addr16
ja
mov
jnp
ret
mov
outs
(bad)
jmp
or
jbe
call
jg
cwde
sahf
cli
pop
fdivr
ret
imul
mov
jg
movs
mov
mov
dec
stc
cmps
lock
test
mov
pop
in
jg
inc
ror
ror
or
lods
push
clc
add
cld
retf
mov
popa
or
and
popf
and
or
pushf
sub
out
xchg
retf
push
cwde
mov
bound
fdivr
fsub
pop
faddp
xchg
std
add
ffreep
or
and
xor
xchg
in
cld
int3
mov
into
test
push
xchg
ja
mov
jg
add
in
shl
or
jge
mov
sbb
bound
pusha
adc
inc
xchg
cmp
outs
arpl
mov
icebp
cmps
inc
retf
mov
das
xor
or
into
sti
clc
in
or
fwait
mov
and
mov
cmp
ret
out
and
sbb
mov
dec
add
adc
fild
dec
lods
jl
psubusw
ins
(bad)
out
lock
(bad)
data16
mov
jle
jns
sbb
pop
and
jecxz
popa
std
push
sbb
adc
sbb
cmps
sahf
dec
jno
ficomp
das
enter
bound
inc
jg
scas
sbb
jae
xchg
push
jnp
mov
xchg
shl
cmp
nop
mov
fwait
push
push
sub
mov
fwait
fwait
sub
mov
ret
test
pop
inc
inc
lods
cmps
cmc
ins
push
js
inc
pusha
push
xor
hlt
inc
addr16
sar
rcl
pop
adc
mov
jne
sub
clc
sahf
imul
push
in
(bad)
dec
cmp
cmp
imul
addr16
mov
arpl
jge
ins
fild
mov
repnz
or
cmpxchg
int
aaa
or
sbb
mov
adc
mov
mov
cmps
xchg
out
es
cmp
add
pop
(bad)
daa
mov
mov
mov
and
fs
mov
add
mov
ret
jns
dec
push
cmps
dec
sub
pushf
addr16
std
mov
fsub
fistp
shl
pop
mov
dec
jae
out
mov
push
idiv
jl
sahf
cmp
daa
repz
icebp
icebp
sti
aam
scas
or
mov
data16
fwait
sbb
and
mov
jmp
out
xor
stos
add
lds
jns
(bad)
jns
adc
dec
scas
call
in
sbb
mov
jmp
mov
sar
sub
clc
sub
cmp
inc
jl
dec
popf
out
loopne
xchg
ins
add
rol
and
aam
jp
sar
add
inc
or
ss
lds
mov
push
int
mov
inc
cmp
jno
adc
push
test
cmp
xchg
in
mov
push
mov
mov
mov
or
or
das
jae
mov
ror
enter
loopne
es
bound
push
addr16
repz
inc
rcr
data16
outs
xor
gs
dec
or
mov
push
push
add
inc
xor
nop
sbb
mov
xchg
pop
xchg
add
repnz
enter
sub
push
xchg
fstp
ins
int
dec
hlt
or
daa
shl
stc
and
add
mov
jecxz
in
rcr
daa
push
add
push
push
repz
mov
sub
add
je
mov
push
lods
int3
pop
sbb
bound
dec
push
cmp
sub
sub
gs
out
into
bound
fistp
mov
scas
fdivr
xor
mov
cmp
psllq
mov
repnz
push
jo
jp
push
ins
jmp
enter
xor
cmps
neg
xchg
cli
int3
pop
sub
fisttp
xchg
cld
xchg
mov
imul
cmc
pop
add
inc
push
mov
inc
imul
std
nop
add
ins
jmp
sbb
shl
pop
xchg
popa
rcr
int3
jge
push
rcl
cmc
cmp
pop
sbb
les
mov
(bad)
push
aad
arpl
xchg
aaa
sbb
push
stc
scas
inc
sti
mov
lea
xor
xacquire
push
mov
outs
pushf
test
push
aas
sub
(bad)
mov
xor
outs
jo
lea
cli
push
ss
pop
pop
hlt
hlt
and
inc
stos
sub
mov
call
imul
retf
pop
push
fxch
pop
push
sahf
test
scas
inc
mov
(bad)
or
pop
enter
lods
sbb
out
in
lds
add
jo
push
xor
(bad)
lock
aam
or
pop
cmps
std
shl
cmc
and
jl
fwait
addr16
dec
mov
cmp
jmp
cmp
mov
sbb
push
mov
lahf
aam
es
adc
or
in
pop
xchg
push
out
add
movs
repnz
and
jmp
sub
ss
jae
xor
cmp
mov
pop
fimul
arpl
(bad)
xor
pop
lods
xor
push
scas
dec
call
xor
popf
jecxz
xchg
inc
in
fisttp
aam
stc
xchg
sahf
mov
pop
arpl
mov
loopne
push
mov
xchg
addr16
push
stc
add
mov
sbb
in
hlt
mov
push
outs
rcl
call
add
jp
lahf
in
add
fstp
xchg
aaa
iret
retf
rcl
cmp
xor
cld
mov
rcr
jg
cwde
fs
xor
test
repnz
loopne
mov
dec
fdiv
lahf
cmps
out
jl
rol
add
xchg
push
loopne
sub
jmp
mov
and
add
sbb
jb
push
retf
pop
mov
js
loope
fwait
jg
ds
sbb
sbb
fcmovnu
mov
add
gs
cmp
ficomp
mov
and
ja
fnstcw
xlat
jecxz
add
shl
sub
cmp
gs
xor
cs
fwait
push
ficomp
mov
cmp
imul
mov
call
leave
nop
inc
sub
out
push
jge
mov
sub
jecxz
xor
enter
or
loop
out
push
mov
add
outs
test
dec
dec
cmps
popf
push
sti
les
or
pop
(bad)
push
out
mov
repnz
cmp
mov
push
stos
or
and
push
jbe
call
stos
data16
aad
push
sysret
popf
test
pushf
push
fst
or
adc
push
pop
hlt
adc
hlt
xor
jl
ins
je
shl
fsub
fild
stc
std
dec
pop
add
xchg
shl
sub
nop
retf
ret
lods
mov
xchg
push
xor
pop
push
fisub
pop
cmps
jl
fnstenv
lahf
test
pop
push
les
sub
cmp
and
and
xchg
popa
sbb
mov
cs
push
jne
jns
popf
sbb
and
xlat
mov
xor
pop
dec
addr16
lods
rcr
leave
test
(bad)
inc
fbstp
call
sub
leave
fs
popf
mov
sub
hlt
adc
fisub
aad
cmc
je
mov
fwait
adc
enter
fsub
ds
ins
mov
cdq
jmp
mov
icebp
inc
cmc
test
xchg
jl
cmp
out
in
fist
gs
cmp
inc
mov
ror
jne
and
mov
leave
hlt
inc
shr
lods
mov
cs
sbb
fimul
push
pushf
cmps
push
cmc
pop
call
push
xchg
movs
movs
aam
test
out
mov
ins
cmps
in
out
in
xor
imul
(bad)
fidiv
ja
and
in
mov
shl
mov
and
popa
mov
xchg
call
jecxz
int3
inc
out
or
inc
(bad)
adc
stos
cmp
les
jo
add
push
loop
pop
addr16
push
xlat
jns
sti
ins
or
push
jb
cmp
sbb
sub
int
mov
sbb
and
hlt
jmp
xor
xchg
adc
addr16
inc
ds
sub
scas
mov
mov
jp
jp
popf
adc
sub
das
push
adc
or
out
(bad)
dec
shl
out
pop
jecxz
mov
fisubr
or
mov
jge
jmp
push
fwait
std
iret
movs
fwait
retf
adc
mov
sub
test
pop
call
inc
pop
sbb
mov
push
test
std
inc
jbe
and
(bad)
nop
in
popf
sar
dec
lock
mov
push
jle
sub
or
inc
addr16
daa
dec
xchg
mov
inc
jo
pop
inc
bnd
arpl
pop
ins
xor
ds
cmp
push
(bad)
jno
lock
test
(bad)
int
jbe
sbb
inc
cmps
fwait
repz
int3
jbe
mov
fs
fwait
out
jo
sbb
lahf
pop
adc
and
maskmovq
not
jg
jl
xchg
retf
addr16
lods
cmc
adc
(bad)
ins
nop
pop
ins
into
push
sub
int
mov
adc
mov
repnz
enter
mov
mov
adc
and
test
and
inc
pop
stc
shl
in
movs
dec
inc
mov
adc
xor
add
das
in
inc
js
push
mov
imul
pop
push
mov
icebp
dec
sahf
mov
sbb
push
jecxz
mov
in
cbw
xor
call
(bad)
mov
pop
add
mov
psrlq
jp
and
pop
sub
int
popa
cmp
in
movs
cmp
mov
outs
cmc
in
sub
dec
jle
fxch
shl
retf
dec
jmp
mov
xchg
push
xlat
fwait
jmp
xlat
out
pop
popf
inc
sub
movs
cli
retf
xor
fwait
xor
mov
inc
int
lea
pushf
(bad)
jnp
out
adc
jne
or
ror
aaa
mov
or
jl
les
cdq
(bad)
mov
lods
movs
jmp
jmp
stos
cmp
cmps
pop
mov
into
adc
leave
sub
push
mov
out
fimul
fcom
mov
scas
stos
nop
pusha
ds
std
jns
push
xor
les
ret
inc
xor
inc
jmp
xchg
inc
jg
ins
mov
(bad)
cmps
pop
(bad)
nop
scas
test
sbb
pop
mov
xchg
daa
sbb
and
jl
loop
mov
push
sub
fstp
dec
(bad)
jecxz
jge
or
out
cmp
mov
lods
xchg
out
xchg
lahf
xlat
add
pusha
retf
mov
test
xor
test
rcr
fdiv
push
pop
and
jecxz
ret
push
aas
hlt
cmp
mov
popf
stos
jbe
arpl
shl
pop
test
into
out
mov
sbb
mov
and
rcr
inc
add
out
mov
or
or
test
punpcklwd
push
in
(bad)
push
lds
nop
mov
stos
(bad)
cmp
leave
inc
pushf
ret
or
fsub
mov
(bad)
jl
jbe
std
sub
inc
push
add
push
imul
inc
dec
dec
pushf
arpl
sbb
movs
sub
or
mov
leave
pop
call
jns
pop
popf
inc
les
scas
dec
daa
add
fbstp
dec
xchg
sar
push
pop
inc
mov
jl
les
imul
push
fwait
inc
xchg
jnp
ins
icebp
sbb
test
fcomp
sbb
jo
or
daa
xor
and
sub
nop
xchg
xchg
mov
pmulhuw
jns
cmp
push
xor
pop
cmc
cmp
push
ror
in
push
popa
or
and
push
adc
push
push
rol
mov
loop
sti
shl
xor
mov
retf
and
xchg
add
xlat
stos
aam
adc
push
retf
data16
inc
mov
sbb
std
pop
rcr
xor
jae
cmc
and
shr
mov
push
clc
cmp
popf
push
js
xchg
mov
jns
imul
mov
aad
mov
iret
sahf
jge
movs
add
lock
xor
jae
les
movs
(bad)
push
shr
rol
icebp
mov
mov
fsubr
enter
shl
mov
adc
out
(bad)
in
mov
retf
repnz
pop
or
sbb
jle
sub
adc
xchg
in
push
jmp
adc
pop
push
mov
in
mov
sub
imul
leave
dec
pop
push
popf
iret
pop
add
lods
inc
arpl
movs
adc
jmp
test
fwait
sbb
imul
sbb
cmps
fs
popf
(bad)
loop
mov
and
stc
mov
loope
add
push
add
or
iret
aad
dec
cmps
cmp
pop
aas
push
aam
cld
sahf
pop
dec
cmp
into
das
mov
dec
mov
call
mov
sub
add
add
shr
xlat
xlat
out
bound
cmp
loop
retf
(bad)
(bad)
sqrtps
in
arpl
jp
stc
fistp
retf
and
ins
cmp
and
xor
icebp
pop
lods
push
fucomi
cmp
xor
push
xchg
dec
push
jmp
xchg
movs
pop
imul
dec
loop
xorps
sub
daa
es
(bad)
fild
dec
repz
add
lea
dec
dec
push
mov
in
xor
inc
mov
int3
xor
jb
sub
push
pop
mov
rcl
cmp
stc
fwait
shl
sub
mov
push
sub
pusha
pop
popa
ja
fnsave
adc
ins
inc
and
mov
je
add
mov
jns
or
std
push
(bad)
pop
test
enter
sahf
ja
ins
cdq
or
push
adc
jnp
dec
mov
shr
cdq
push
or
fiadd
cs
inc
in
aas
and
imul
sub
mov
fcmovbe
leave
popa
hlt
mov
cmp
sub
fldcw
jl
aas
(bad)
fdiv
das
iret
xor
cmp
std
and
popf
fs
scas
call
call
xor
adc
pop
out
aas
mov
lea
cmp
jmp
call
xor
mov
lods
addr16
pusha
add
cmp
call
stos
push
mov
sub
es
sub
mov
jo
mov
xchg
rcr
pop
sub
sbb
pop
pop
hlt
call
or
mov
and
mov
mov
xchg
dec
sti
jns
push
xor
add
loop
in
push
sbb
sub
cmp
mov
popf
push
and
aas
adc
cmp
fild
sbb
popa
mov
jge
sub
xchg
fxtract
or
add
jmp
push
add
aam
out
ds
call
xor
dec
pop
cmp
pushf
push
lahf
fdiv
fisub
mov
cmps
ret
addr16
cmp
or
and
mov
and
xor
repnz
stos
retf
mov
popf
sbb
out
mov
jmp
push
lods
fucomi
js
sub
adc
cdq
add
lods
neg
popa
ret
into
jns
lds
(bad)
push
call
and
cli
mov
push
cmc
adc
push
mov
int3
sbb
repz
adc
sbb
xor
test
and
out
xor
(bad)
out
icebp
rcr
lds
bound
pop
sub
or
mov
jmp
sub
jl
fstp
test
pop
sti
mov
dec
mov
aaa
dec
cmps
push
mov
loope
push
inc
push
cmp
dec
sbb
xor
cld
ja
mov
jmp
sbb
and
loope
repnz
out
inc
inc
and
xor
out
jge
sbb
push
pushf
jne
in
xor
add
inc
mov
push
loope
retf
inc
retf
add
and
sub
pop
stos
aas
rol
pusha
bound
mov
movs
push
in
inc
les
inc
retf
(bad)
movs
and
not
pop
add
mov
sar
mov
sub
mov
fist
jecxz
push
jno
and
scas
mov
rol
pop
call
push
xor
adc
xor
jp
add
jbe
jno
std
or
stc
pop
cdq
imul
add
jmp
iret
jge
cmp
imul
dec
mov
push
mov
dec
adc
mov
aas
sbb
cli
push
pop
fwait
cdq
call
stos
call
inc
mov
cli
mov
lods
outs
in
loope
xchg
and
add
movs
aaa
mov
dec
mov
and
push
lahf
mov
sbb
xor
mov
xor
push
push
sub
aad
movs
cmp
or
sti
loop
push
and
retf
loope
cmp
or
retf
mov
pop
jae
mov
and
xchg
stos
mov
out
sar
lods
sahf
push
pushf
movs
ja
jnp
addr16
push
jmp
xchg
arpl
pop
das
dec
iret
xchg
mov
pusha
push
jns
loopne
dec
std
repnz
cmp
lods
adc
jg
cwde
arpl
fist
push
imul
ds
mov
mov
mov
pop
imul
jo
rcl
or
scas
fimul
mov
aad
fstp
loop
lock
sub
into
ret
sbb
(bad)
jne
arpl
jo
adc
add
xor
(bad)
loopne
cld
lds
push
sub
mov
stos
neg
in
movs
sub
mov
inc
lahf
sbb
sbb
mov
mov
cmps
or
ja
jae
add
sub
add
jnp
loop
and
popa
pop
cmps
push
dec
ins
retf
push
test
inc
repz
pop
icebp
int
fwait
mov
sub
mov
rcr
test
jecxz
dec
aaa
mov
mov
fwait
jmp
push
dec
fdiv
cmp
dec
fsubr
cli
mov
push
stos
in
arpl
bound
pop
ds
cld
bnd
push
std
push
sbb
(bad)
xor
mov
cmp
repz
movs
outs
es
daa
jle
neg
xchg
imul
shl
fdiv
aas
cs
pop
pop
jns
(bad)
in
xor
(bad)
imul
push
and
arpl
leave
jo
cmc
and
ret
retf
lods
aas
lods
sub
mov
pop
mov
dec
sub
xor
add
mov
pop
push
jne
in
lods
push
cdq
xor
lds
daa
shl
push
mov
ds
and
into
ja
das
xor
cmp
and
rol
div
xor
mov
jle
sub
adc
dec
bound
(bad)
jbe
mov
dec
cmp
call
sahf
mov
push
push
imul
es
mov
cmps
jmp
pop
std
mov
jge
lods
xchg
and
icebp
fbstp
add
mov
pop
or
mov
jg
int
sbb
push
ins
jle
push
(bad)
data16
and
jecxz
movs
mov
das
cmp
pop
out
test
ins
aam
ret
test
fwait
mov
push
test
out
in
cmps
dec
xchg
ins
lods
adc
jmp
repnz
adc
inc
mov
pop
out
jb
cmp
loop
cmps
(bad)
inc
inc
jns
sub
dec
jmp
pop
push
push
fisttp
scas
mov
push
or
in
in
or
mov
mov
sub
mov
ret
popf
pop
movs
mov
xor
or
test
push
cmp
ret
ror
leave
lahf
pop
xor
inc
stos
(bad)
out
mov
in
xchg
and
leave
lods
mov
pop
mov
sbb
out
mov
xor
sub
adc
xchg
jbe
lock
xor
sbb
movs
push
rol
and
xchg
sub
test
rol
fist
in
loopne
ret
jnp
dec
pop
adc
lgs
addr16
push
mov
into
cmps
fadd
pop
push
xlat
js
sbb
mov
inc
cmp
push
aam
inc
popa
scas
mov
sub
(bad)
and
fmul
in
dec
iret
mov
jg
or
cmp
retf
sti
out
xchg
inc
jae
xchg
mov
mov
repz
mov
int
push
jp
inc
ret
aaa
sbb
addr16
cld
and
mov
mov
inc
pop
mov
cwde
inc
(bad)
sbb
add
dec
hlt
lock
sti
bound
stos
add
movs
adc
cmps
xchg
mov
push
mov
cmp
daa
push
pop
jl
jge
pusha
cdq
in
inc
cmp
dec
push
mov
hlt
pop
push
cmp
ror
dec
cmp
out
fst
xor
lahf
fwait
sahf
cld
lods
pop
mov
retf
mov
js
mov
mov
fmul
cmp
cli
repz
ret
mov
push
cmp
push
loopne
add
mov
and
(bad)
push
sbb
pop
popf
sub
push
mov
fdiv
cmp
(bad)
xchg
cmc
push
sbb
xchg
jmp
mov
out
mov
or
nop
icebp
jl
ds
pushf
jmp
(bad)
mov
pop
ins
xchg
lds
xor
in
dec
addr16
jno
pop
mov
sbb
jno
inc
push
xor
dec
adc
call
mov
ins
mov
adc
push
sub
aas
shr
lods
outs
retf
add
and
(bad)
into
mov
pop
std
in
pop
jge
ret
(bad)
popf
add
mov
enter
or
pop
push
sub
imul
mov
and
lock
repnz
icebp
sub
push
imul
lods
mov
mov
fwait
jmp
ret
loope
mov
sub
sub
in
call
ret
retf
out
das
xor
outs
sub
retf
mov
dec
fadd
xchg
add
or
push
int3
mov
mov
out
std
adc
mov
jne
mov
fwait
and
sbb
stc
outs
movs
es
(bad)
stos
push
sub
jmp
fsub
push
dec
sub
fsubp
fisttp
or
fdivr
and
(bad)
or
mov
jb
pushf
jne
jle
scas
inc
outs
adc
mov
xor
movs
xchg
xchg
call
push
mov
mov
mov
movs
mov
cld
cmp
shl
dec
adc
add
les
dec
bound
stc
cli
sub
test
pusha
push
retf
mov
jl
adc
adc
psadbw
outs
out
gs
rcr
pop
cmp
dec
sub
not
sti
xor
sbb
jmp
loop
push
int
in
cwde
nop
jl
and
fabs
movs
idiv
enter
pusha
pop
fcom
dec
in
mov
push
cmp
fdiv
cwde
ror
dec
cmp
in
sbb
inc
mov
jno
mov
das
xor
ja
xchg
xchg
xor
push
adc
lods
lods
jbe
loope
add
xchg
dec
sahf
and
jbe
cmps
push
or
int3
fistp
jmp
add
add
shl
test
test
push
mov
inc
push
repnz
push
test
mov
cmps
idiv
inc
push
xchg
xor
or
xor
mov
fmulp
xchg
dec
xchg
jne
test
add
jno
mov
or
inc
scas
stos
or
pop
lock
and
mov
sbb
js
pslld
jp
or
pop
inc
js
mov
add
je
addr16
sbb
popa
lods
cli
cmc
cmp
inc
dec
pop
pop
xlat
dec
jle
xor
into
adc
sbb
cmp
movs
and
dec
xor
mov
test
dec
test
xchg
cmps
mov
xchg
push
jmp
lea
mov
pop
jb
sub
push
fbstp
adc
mov
in
or
sbb
mov
mov
dec
ds
test
sbb
mov
add
sbb
rol
retf
push
inc
cmp
js
pusha
inc
shr
xor
dec
adc
call
mov
push
sbb
lods
push
int3
pop
call
loopne
das
xor
ds
jno
jo
rol
stos
jnp
sbb
ja
adc
xchg
frstor
adc
jbe
and
xchg
pop
xchg
jge
out
fsubr
pop
cmc
stos
cmc
sahf
adc
xor
xor
adc
rol
mov
push
enter
xchg
pop
mov
movs
xor
xchg
mov
inc
push
fadd
sub
sub
push
and
mov
test
cmp
loope
dec
test
dec
ins
pop
icebp
pop
xchg
out
mov
daa
iret
xchg
daa
cwde
ins
cmp
int
push
adc
jcxz
movs
bound
jns
(bad)
pop
xor
cmps
jno
aaa
mov
lds
lds
fs
mov
push
add
inc
add
or
jns
push
push
push
fdivp
jmp
inc
pusha
cmps
sahf
movs
mov
jae
pop
outs
or
push
movs
(bad)
rol
sub
add
shl
cmp
sbb
adc
lods
and
call
sub
test
ret
push
jbe
xchg
jno
sti
iret
sub
aad
sahf
inc
push
push
mov
aad
jnp
fiadd
jnp
dec
xchg
lods
mov
xchg
inc
mov
push
jge
pop
(bad)
mov
push
or
sub
pop
mov
cmp
pop
std
push
hlt
fs
cmp
leave
mov
out
jmp
xchg
addr16
or
mov
xlat
xlat
push
movs
in
cmp
enter
xchg
adc
bnd
test
cdq
cli
and
xchg
sbb
or
pop
icebp
je
out
cli
mov
push
(bad)
dec
dec
inc
dec
jmp
fst
jmp
pusha
outs
shr
ds
call
and
les
jo
sub
mov
gs
aam
inc
xor
std
out
adc
adc
jp
in
test
fadd
sub
sub
mov
pusha
retf
(bad)
cmp
imul
test
mov
inc
cmc
int
sbb
(bad)
or
clc
(bad)
inc
pop
aas
dec
xchg
mov
xchg
pop
sbb
imul
test
and
dec
xor
xchg
mov
add
cld
fist
mov
jmp
cld
add
jno
(bad)
push
retf
mov
push
inc
push
dec
mov
rcr
pop
lods
pop
bound
cli
or
js
and
cmp
mov
ins
jnp
xchg
daa
fisub
lds
aam
stc
fneni(8087
not
cmps
retf
(bad)
add
rcr
scas
cmp
gs
push
or
test
arpl
in
pushf
inc
inc
call
ins
ins
and
xor
sbb
inc
pop
or
cmps
jmp
add
dec
sub
mov
ja
je
imul
push
and
jl
fwait
das
test
sub
popa
mov
and
ss
xor
test
adc
jbe
outs
adc
cmps
je
sub
call
pushf
test
popa
std
mov
sub
daa
dec
xlat
int
pushf
sbb
outs
bound
repnz
inc
mov
fist
imul
adc
outs
je
call
arpl
aas
pusha
ss
dec
pop
int
mov
xor
jp
js
dec
sub
jo
cdq
add
in
mov
popf
mov
stos
mov
pushf
xchg
sub
add
mov
aas
stc
sbb
xlat
loope
xchg
shl
pop
jbe
popa
stos
movs
mov
mov
or
mov
ret
mov
mov
mov
dec
aam
neg
in
stc
fbstp
mov
test
lods
mov
jo
push
fbld
sti
lods
call
fs
rol
cmp
mov
jno
mov
or
inc
outs
sar
and
sti
std
xchg
cld
add
jmp
into
sbb
popf
cs
xchg
daa
add
cmp
sbb
rcr
sub
jne
add
icebp
fild
outs
lds
sbb
or
rcl
sub
call
clc
out
loop
push
pop
push
gs
stos
movs
dec
repz
scas
push
stos
pop
scas
jle
and
scas
jmp
retf
sub
sbb
mov
jno
cmp
sub
inc
mov
sahf
mov
or
pop
adc
sbb
adc
push
mov
add
aam
bound
out
cmps
loope
push
inc
mov
xchg
pusha
jbe
jnp
xchg
inc
add
cdq
retf
repz
add
push
sub
sbb
add
fldl2t
into
popa
mov
test
stc
xor
mov
mov
aam
test
xchg
push
inc
sub
cld
lock
xor
test
inc
frstor
sbb
iret
jge
pop
in
mov
xor
out
inc
stos
adc
pop
sbb
outs
jbe
out
mov
hlt
call
test
push
and
mov
cli
jl
and
lock
dec
cmc
nop
jns
mov
adc
(bad)
fist
ins
jno
cmp
out
in
sbb
push
xchg
arpl
sbb
mov
repz
and
movs
test
out
pop
jns
dec
mov
fucomip
dec
pop
jnp
data16
sub
sub
cld
mov
addr16
stos
or
pushf
xchg
les
sub
xchg
loope
mov
sbb
inc
mov
cmp
mov
jecxz
inc
cs
rol
imul
sbb
pushf
fs
and
mov
add
fnstsw
in
lahf
cwde
sahf
mov
das
cs
or
lahf
sbb
hlt
ja
mov
nop
jmp
es
je
scas
ficom
aam
cdq
cld
ror
(bad)
pusha
jl
xchg
rcl
pop
add
cli
mov
jmp
xchg
sbb
loop
int3
or
mov
xor
mov
jnp
movs
add
leave
fdivr
aam
xchg
xor
mov
test
paddusb
hlt
lods
mov
out
sbb
push
mov
push
xchg
jecxz
mov
rcr
pusha
xor
bound
mov
movs
and
(bad)
xchg
xor
inc
adc
pop
popf
ror
dec
stc
inc
enter
xchg
(bad)
ss
jmp
jb
mov
pop
pop
dec
rol
jb
scas
push
jnp
movs
adc
push
mov
hlt
mov
dec
pusha
sub
adc
and
inc
aaa
popa
fdiv
(bad)
pop
cwde
fcomip
sbb
sub
xchg
es
jne
es
(bad)
mov
mov
dec
mov
mov
jmp
and
jle
das
stc
lahf
loope
xchg
jmp
rcr
dec
sub
icebp
in
cld
imul
xchg
lds
mov
inc
sub
lods
call
outs
outs
mov
dec
xchg
push
ret
or
add
stos
push
pop
ss
stos
enter
addr16
stmxcsr
push
jnp
je
fnstenv
cmp
fcomp
(bad)
outs
(bad)
outs
pop
pop
frstor
adc
push
push
aam
push
add
sub
dec
mov
rol
pop
mov
imul
sub
jb
sub
sti
ja
sub
das
xchg
push
xchg
push
fidivr
sbb
stos
sub
xor
aaa
add
pop
retf
or
and
push
fmul
(bad)
sub
xor
inc
(bad)
mov
add
inc
push
cmp
dec
mov
test
int3
dec
(bad)
adc
test
and
shl
jp
sub
mov
xchg
scas
jmp
imul
fld
jne
in
(bad)
mov
dec
inc
push
and
sub
imul
inc
lahf
imul
xlat
jae
xor
imul
fnsave
in
pushf
xor
add
mov
push
pushf
popf
out
rcl
loopne
ins
pop
es
ret
pop
jns
add
sbb
pusha
cmp
cmps
test
cli
and
adc
outs
arpl
dec
mov
and
lds
push
fcomi
shl
dec
cli
mov
punpcklbw
jns
lock
fcmovnb
mov
sub
out
sbb
cdq
shr
cs
test
or
fisubr
in
cld
push
out
dec
jb
out
jo
retf
les
stos
xchg
mov
push
inc
xor
or
adc
xlat
(bad)
gs
jmp
mov
inc
add
and
in
add
and
dec
call
mov
push
push
loope
sub
inc
jg
dec
fst
mov
cmc
into
aam
repnz
daa
fistp
cmc
pop
jge
jns
sub
mov
jmp
add
pop
arpl
loope
mov
and
fldcw
aas
sti
imul
and
or
add
and
jg
fnstsw
inc
cmps
gs
stos
cmps
aas
adc
mov
outs
fdiv
push
and
pop
xor
adc
xchg
pop
push
xlat
frstor
test
cs
add
inc
enter
cmps
cmps
and
cmp
push
pop
jns
xchg
fbstp
ret
iret
sti
data16
and
pop
fwait
bsr
and
enter
sbb
cs
xor
xchg
fcom
inc
lds
and
sbb
into
cmp
icebp
daa
sub
dec
fdivr
xchg
fwait
mov
fisttp
sbb
pop
je
scas
push
cmp
fisttp
das
mov
les
in
shl
xchg
inc
jmp
push
imul
shr
xchg
movlhps
int3
cbw
dec
fild
push
popf
sahf
test
cmps
repnz
pop
in
mov
loop
jp
fmul
stos
scas
push
cmp
and
add
dec
sub
or
xchg
cmps
push
adc
xlat
lods
dec
fstp
mov
or
xor
push
cwde
dec
test
clc
cli
ror
mov
jmp
stos
gs
addr16
loop
push
ret
cmp
clc
sub
icebp
pop
xchg
push
jae
icebp
inc
jmp
xchg
jmp
enter
and
pop
adc
sbb
push
neg
ins
jb
sub
cmp
dec
movapd
cli
stc
dec
and
mov
scas
dec
mov
sbb
test
das
add
cs
nop
(bad)
call
xchg
push
jg
nop
fsub
xor
sub
sbb
sbb
and
or
push
shr
loop
adc
mov
xor
outs
pop
(bad)
jecxz
sbb
jno
or
sub
dec
cmc
xadd
arpl
adc
add
mov
push
or
cli
and
repz
xchg
pop
add
jl
lea
loopne
cli
stc
rol
into
retf
in
movs
shl
push
push
in
sbb
imul
push
popf
js
xchg
je
inc
xchg
and
ja
stc
mov
push
pop
popf
es
mov
popa
(bad)
fwait
push
adc
cmps
xchg
cli
mov
pop
mov
pusha
stos
aas
daa
cmp
xor
push
cmp
push
sbb
lds
iret
lods
pushf
shr
dec
mov
sub
je
ret
(bad)
test
fiadd
ins
sbb
jle
sub
in
sbb
add
into
adc
pop
dec
(bad)
mov
int
sbb
jg
out
sbb
(bad)
jno
hlt
push
jns
mov
(bad)
arpl
repnz
adc
nop
adc
add
adc
sbb
in
jmp
jb
mov
mov
daa
pop
jg
mov
call
fmul
test
out
in
es
xor
les
loopne
mov
imul
jmp
inc
cwde
lods
imul
pop
inc
in
iret
gs
mov
push
push
out
xor
in
shl
adc
and
mov
into
ja
in
xor
ja
inc
stc
mov
jb
mov
and
fimul
mov
cld
and
jg
push
add
jno
xchg
icebp
pop
inc
and
data16
and
ds
scas
pop
and
pop
ds
mov
and
aaa
rol
ret
fdivrp
fcomip
bnd
fmul
test
shl
repz
fadd
adc
jmp
sbb
cmp
and
push
dec
sysret
adc
pop
bound
sti
cli
repnz
sbb
fucomp
mov
add
push
sti
mov
sub
lahf
ds
mul
pop
push
mov
xchg
add
sbb
sbb
xor
add
jno
mov
jno
retf
add
in
and
inc
jle
call
or
addr16
mov
jle
ret
out
push
adc
sbb
push
aas
adc
xor
lock
push
sbb
in
mov
pop
sbb
xor
push
movs
lds
push
imul
xor
mov
ds
mov
ins
rcl
inc
push
mov
xor
cmp
inc
or
ror
faddp
cli
xchg
popf
adc
std
hlt
mov
out
in
aad
cmc
pop
and
push
mov
inc
inc
jmp
mov
jge
add
shr
in
mov
mov
mov
sbb
fnsave
xchg
sbb
inc
fistp
fnstcw
imul
cmp
movs
pop
gs
fcom
sub
inc
push
or
pop
xlat
lock
ss
fldl2t
add
cmp
dec
inc
xchg
loope
loope
pop
out
dec
and
sahf
cwde
add
push
mov
pop
scas
push
gs
repz
xchg
xchg
cmp
in
gs
mov
and
movs
push
xor
pop
pop
cmp
mov
sahf
ja
cli
sbb
mov
rcl
and
ficomp
dec
ret
mov
mov
jle
xchg
jb
jg
and
rol
and
or
(bad)
out
pop
pop
mov
jmp
sahf
popa
sbb
mov
inc
fstp
icebp
jbe
jbe
xchg
imul
shl
inc
pop
push
ja
inc
stos
mov
sahf
sub
inc
cdq
inc
std
lahf
inc
and
js
mov
mov
push
or
iret
hlt
repnz
pushf
push
loop
lock
xor
jo
dec
icebp
cli
cmp
scas
iret
and
(bad)
mov
inc
jns
sub
xlat
push
es
dec
test
mov
mov
push
fs
scas
(bad)
shl
xchg
cmp
outs
sbb
mov
lods
push
inc
pop
jo
adc
push
pop
js
in
push
cmp
in
adc
cmp
ss
sbb
jbe
fwait
xchg
mov
repnz
repnz
enter
mov
cmps
jecxz
iret
xor
aam
scas
fs
dec
int3
cmp
cmps
fidiv
mov
sbb
cmp
push
sti
popa
sbb
xchg
mov
call
bound
mov
sahf
arpl
loop
inc
ins
push
ret
lock
sub
pop
mov
dec
enter
gs
xor
dec
mov
mov
ja
aam
cmp
mov
mov
push
cmp
mov
movs
sub
sar
mov
fisttp
mov
pop
test
int
jl
out
retf
in
nop
sub
ret
int
test
cmp
or
(bad)
imul
(bad)
mov
sbb
call
arpl
mov
inc
inc
mov
stos
repz
scas
fld
out
stos
or
pop
dec
addr16
rol
(bad)
sbb
push
mov
in
ins
sbb
fld
adc
into
rcl
lock
test
ficomp
sti
and
pop
jnp
push
mov
mov
xlat
aad
add
sub
push
sbb
jge
mov
(bad)
push
mov
mov
ja
add
lock
push
mov
sub
movs
int
jl
clc
jns
jp
jmp
in
ins
in
mov
mov
push
cmp
or
int3
mov
mov
xchg
es
xchg
mov
and
hlt
or
into
popf
dec
and
aad
push
fisttp
add
xlat
add
push
cmc
mov
adc
neg
push
fmul
rol
ror
out
iret
add
sbb
add
mov
(bad)
mov
jl
arpl
int
aas
pop
xchg
add
test
xor
and
aad
jo
xchg
xchg
(bad)
jg
sub
jmp
push
pop
fld
pop
sbb
mov
outs
(bad)
sti
sbb
cmp
push
push
sub
imul
(bad)
out
push
aas
sahf
jo
mov
js
out
dec
imul
adc
iret
sysexit
adc
in
push
fwait
xor
fidivr
mov
scas
retf
fstp
dec
mov
jbe
jmp
jl
mov
mov
(bad)
das
shl
adc
cmps
into
imul
bound
fimul
ins
retf
cli
test
ins
cmc
mov
hlt
push
fcmovnb
xchg
stc
pop
push
rcl
fnstenv
mov
dec
fsubrp
or
and
(bad)
cmc
in
int3
test
pop
movs
mov
dec
push
xchg
xchg
push
stos
jl
popa
int
mov
iret
push
push
sub
push
aaa
je
mov
jg
mov
(bad)
nop
mov
xor
stos
dec
fidiv
fs
jno
ret
push
jle
mov
inc
addr16
cmc
int3
fidiv
ret
shl
adc
fs
fisub
inc
add
ja
jg
sbb
cwde
icebp
fcomp
add
imul
stc
cdq
pop
ret
xlat
test
das
fisubr
mov
inc
out
jge
pop
jmp
mov
dec
mov
mov
jae
sbb
call
jp
pop
aad
sbb
es
sahf
and
fnstenv
cld
cli
inc
adc
inc
push
pop
pop
cmp
je
mov
scas
fstp
adc
fldln2
mov
mov
jne
xor
test
mov
mov
ins
arpl
fstp
pusha
movs
fidiv
cwde
jge
test
push
inc
lea
jno
jns
sub
cli
inc
retf
leave
aam
mov
xor
(bad)
xor
inc
neg
pop
jbe
into
jbe
mov
mov
jo
jb
xchg
ins
fst
push
sub
adc
push
out
movs
mov
bound
mov
and
add
leave
idiv
mov
xor
ficomp
pop
dec
fmul
lea
les
test
out
int3
iret
call
lock
inc
push
sub
in
or
jg
mov
es
clc
xor
xor
inc
push
dec
cmp
push
pop
add
sbb
mov
sub
sbb
push
iret
in
adc
push
mov
xor
jp
adc
loopne
sbb
sti
fsub
add
retf
jnp
ss
mov
ss
sub
push
mov
and
pop
lods
inc
stos
adc
xor
jecxz
lds
push
int3
inc
mov
into
add
or
int3
imul
fild
mov
add
sbb
shl
sbb
xor
shr
jge
in
and
mov
or
dec
sti
dec
cld
cmp
mov
xor
clc
jg
mov
and
std
leave
movs
xchg
hlt
fsubr
push
xor
sbb
loope
fcomp
xchg
ror
loope
cmp
inc
ja
popa
and
jle
pop
stos
inc
adc
sahf
sub
arpl
pop
stos
mov
sbb
in
push
(bad)
dec
test
push
or
retf
scas
call
dec
imul
jno
outs
test
addr16
repz
aas
cmp
jns
es
icebp
push
pop
mov
xor
dec
fisub
and
xchg
adc
push
xor
inc
stos
stos
repz
popf
loopne
stos
icebp
inc
adc
in
outs
enter
popf
outs
in
jmp
repz
xor
es
sub
call
aaa
pop
retf
push
push
add
xchg
cmps
or
sub
push
sbb
jmp
bound
je
cmp
pop
mov
scas
lods
sbb
pop
jp
push
add
push
mov
shr
dec
jl
repz
push
hlt
inc
stos
daa
or
adc
inc
inc
in
aaa
stos
sbb
cmps
sar
push
scas
je
repz
retf
std
xchg
shr
mov
adc
jno
push
clc
jecxz
mov
sbb
and
mov
gs
xchg
or
push
loope
jg
addr16
idiv
mov
repnz
adc
or
int3
jne
test
xor
imul
lea
or
cmc
pop
cmp
js
xor
xchg
cwde
jecxz
fwait
sar
dec
jns
adc
repz
mov
fdiv
sbb
push
add
cmps
and
mov
aad
dec
xchg
cdq
call
push
in
stos
push
push
daa
mov
sbb
adc
pusha
aas
xor
int
aam
iret
stc
daa
cmp
sub
jb
cmp
inc
gs
int
add
push
and
loope
push
test
inc
xchg
pop
int
stos
cdq
push
fidiv
and
leave
js
call
jmp
mov
cwde
loope
aaa
adc
or
nop
pop
push
xor
lods
jno
xchg
jmp
jl
push
xchg
in
xlat
(bad)
stc
iret
fisttp
cs
sahf
(bad)
and
adc
push
mov
mov
mov
int
(bad)
xor
cmp
and
das
inc
lods
sbb
aas
mov
mov
sti
xchg
adc
aad
mov
test
neg
stos
push
stos
sbb
fimul
pop
fsubr
cmps
mov
push
je
cdq
iret
out
das
push
in
pop
rcr
or
mov
xchg
cmp
pusha
call
fist
fwait
add
leave
out
movs
xor
sbb
push
hlt
push
or
add
mov
xor
jne
mov
retf
js
std
(bad)
lods
inc
mov
xlat
(bad)
fnstenv
leave
adc
lds
fbstp
repnz
mov
pop
rol
mov
ins
lock
pop
aam
xor
imul
pop
popf
and
fbld
imul
add
mov
icebp
xchg
dec
fnsave
mov
ret
pop
in
push
mov
gs
push
mov
repz
sub
not
xor
shl
jns
popf
mov
out
fstp
cdq
push
sbb
in
out
cmp
cmc
push
jae
popa
add
xchg
mov
(bad)
push
into
retf
movs
adc
mov
add
and
int3
mov
(bad)
cs
mov
pop
mov
test
test
cld
cli
not
(bad)
cmp
popa
jmp
test
fcom
ins
mov
dec
lods
and
push
sub
pop
stos
mov
scas
inc
in
mov
imul
adc
in
lds
xlat
sub
xor
or
and
bound
outs
push
adc
dec
mov
add
cmp
push
popa
xchg
cmps
adc
into
pushf
movs
shl
stc
inc
push
addr16
push
mov
mov
xchg
jo
aad
inc
dec
xchg
std
inc
loopne
rcr
jg
mov
rol
push
sub
ja
xchg
and
inc
bnd
retf
aaa
push
jle
arpl
popf
cmp
(bad)
std
inc
xor
rcl
std
mov
xchg
sti
jb
rcl
hlt
enter
mov
dec
movs
(bad)
mov
hlt
shl
cmp
in
enter
fnsave
add
push
in
int
pop
lods
and
sub
jmp
sbb
cmp
pop
into
repnz
sbb
jno
in
mov
test
pop
cld
mov
adc
js
mov
xchg
into
or
in
jmp
fwait
or
addr16
adc
and
push
xor
out
imul
scas
cli
pop
outs
dec
pushf
jp
lea
int3
ret
clc
sahf
icebp
mov
nop
adc
stos
inc
sbb
jp
mov
cmp
mov
pop
mov
movs
dec
js
mov
fwait
je
mov
imul
test
pushf
mov
push
xor
movs
sub
movs
mov
xlat
in
call
out
mov
pop
enter
arpl
cwde
daa
lods
pushf
xchg
loop
lods
daa
bound
mov
ror
sti
jb
sub
pop
mov
add
mov
xchg
out
and
mov
adc
loopne
push
xor
and
mov
aad
push
and
jle
frstor
ja
(bad)
movs
sub
lds
xchg
iret
jns
sbb
jae
mov
mov
sub
sbb
adc
pop
rol
sti
jns
outs
(bad)
fcmovnu
pop
jns
aaa
mov
call
add
div
out
jo
xchg
jmp
in
sbb
cmp
xor
push
(bad)
sbb
inc
lods
mov
lahf
cdq
call
mov
add
mov
jl
pop
cmps
xor
fbld
add
in
cwde
adc
mov
fmul
mov
aam
jl
jb
inc
jmp
pop
pop
xlat
mov
lods
nop
mov
retf
dec
adc
pop
imul
data16
dec
cmp
es
(bad)
movs
(bad)
cs
push
daa
sub
pop
test
jl
or
sub
adc
sub
inc
mov
sub
nop
scas
and
sub
jg
test
out
pop
adc
inc
xor
inc
pop
push
adc
ins
mov
push
xchg
mov
jp
(bad)
rcr
pop
loop
sti
xchg
or
add
mov
pushf
mov
sbb
cmp
lds
idiv
pop
sbb
pop
cli
out
xchg
pusha
dec
retf
fdivr
lea
jne
mov
call
jle
mov
xchg
sub
in
cmp
(bad)
jge
clc
jne
mov
outs
pop
and
cmp
mov
push
mov
mov
jle
test
add
bound
adc
or
loop
mov
repnz
in
cmp
push
sahf
xlat
enter
(bad)
cli
in
sbb
pusha
dec
leave
xchg
push
push
cli
xchg
cwde
inc
mov
rcr
cmp
add
and
sub
mov
cmp
jle
xchg
or
imul
(bad)
xchg
pop
mov
adc
add
test
and
lods
mov
jmp
repz
mov
jge
neg
pop
jnp
cmp
test
pop
mov
inc
xchg
pop
dec
(bad)
pop
sti
jmp
or
mov
scas
mul
lahf
jbe
jecxz
add
dec
cmps
nop
in
pop
xor
inc
pop
cmps
jle
push
rcl
mov
push
ret
pop
pop
cmp
inc
adc
inc
mov
mov
dec
xor
jnp
(bad)
mov
cmp
sbb
inc
sbb
imul
jae
(bad)
jmp
mov
ins
inc
push
shl
sbb
pop
add
xor
out
fadd
cmp
clc
arpl
jl
mov
(bad)
mov
mov
fbstp
je
idiv
add
pop
xchg
in
add
aaa
pop
sub
cmp
lahf
icebp
pop
sub
adc
cli
pop
pop
je
das
adc
dec
sub
xchg
push
(bad)
repz
call
push
aad
pop
call
jg
mov
js
dec
jno
sub
out
outs
neg
mov
mov
jne
sahf
jl
iret
cmp
test
popa
mov
mov
ret
cmps
call
test
sub
adc
mov
push
jg
mov
xor
inc
test
mov
and
pop
idiv
adc
xchg
add
(bad)
(bad)
xchg
or
rcl
push
adc
jb
inc
iret
scas
sub
pop
(bad)
xchg
dec
cmp
cmps
call
test
(bad)
fcomp
fs
cmc
dec
mov
ror
mov
aas
daa
pop
mov
cmps
sub
cmp
sub
jl
inc
arpl
mov
push
mov
hlt
mov
imul
pop
lods
and
mov
jg
push
popf
loopne
out
cmps
dec
(bad)
lods
bound
mov
test
ja
fisubr
cld
iret
addr16
rcr
pop
aad
test
cmp
dec
jp
push
jl
dec
retf
in
jae
loop
aam
cld
mov
addr16
or
shl
nop
ds
ret
push
xchg
out
loopne
push
sub
inc
xor
push
dec
enter
xchg
pop
rcl
call
ss
dec
outs
(bad)
in
out
and
aam
shl
cs
mov
jnp
pusha
stos
adc
or
cmp
xchg
ins
out
sti
jo
jns
pop
loopne
sbb
sub
inc
ret
or
stc
cmp
sub
xor
sbb
lods
retf
ffree
movs
inc
cwde
(bad)
push
aad
test
icebp
push
adc
rol
shl
dec
ins
pop
or
test
sti
push
and
(bad)
shr
xlat
sbb
dec
cwde
pop
ret
dec
sbb
xchg
fistp
sub
mov
je
mov
jle
je
repnz
sbb
cwde
rcl
push
mov
arpl
test
xchg
push
add
pushf
fld
sbb
add
loopne
gs
icebp
mov
lock
inc
xchg
cmp
wbinvd
add
sub
inc
je
(bad)
outs
mov
(bad)
rol
arpl
cmp
repnz
mov
es
sbb
cmp
std
adc
jle
pop
jmp
scas
shl
xchg
xchg
push
(bad)
call
xchg
inc
dec
cli
mov
stos
push
in
shl
ret
ret
das
add
jg
or
jnp
sbb
mov
add
sbb
enter
mov
and
icebp
xchg
xchg
jl
push
jno
adc
jmp
mov
xor
dec
mov
and
sar
aad
and
pop
daa
dec
out
jno
aam
sbb
movs
xor
ret
pop
or
aaa
jo
push
adc
(bad)
adc
sbb
ret
fbld
inc
(bad)
push
lods
push
data16
mov
iret
lds
jle
mov
push
outs
dec
cwde
das
ror
cwde
gs
inc
ret
test
nop
mov
stc
add
je
hlt
sbb
lods
cmc
xlat
call
scas
push
(bad)
stos
movs
call
fsubr
call
and
push
shl
or
add
rcl
in
into
sub
cmp
repnz
sbb
out
push
add
imul
xor
cmp
mov
sar
ss
push
into
cmp
pop
out
sti
retf
ret
and
mov
xchg
mov
xchg
cli
scas
or
test
das
dec
cdq
push
mov
aaa
arpl
mov
pop
sti
push
fcomp
cmp
in
aaa
mov
ja
(bad)
cdq
dec
pop
sbb
(bad)
sbb
add
dec
adc
inc
fs
xor
ins
push
ror
in
repnz
jns
ret
add
pusha
lea
xor
pop
inc
xchg
cwde
aad
add
ds
hlt
fist
xchg
ja
lds
add
xchg
pop
mov
stos
imul
push
call
sbb
loop
rcr
jge
into
fistp
mov
adc
call
adc
aas
dec
mov
jle
fwait
cmc
popf
retf
xchg
inc
inc
cld
out
fst
out
scas
adc
cmp
add
pop
or
add
mov
jo
cwde
mov
loopne
std
imul
arpl
push
mov
mov
cs
cmp
pop
xor
jl
sub
cmp
ret
enter
mov
inc
mov
cmp
std
je
add
pop
sahf
pop
push
and
cwde
add
push
addr16
jp
inc
pcmpgtb
gs
ins
loopne
es
bound
aam
lea
das
lods
stos
fcomp
jg
push
fadd
push
jge
aas
gs
xchg
mov
or
mov
and
push
dec
mov
jg
xor
dec
mov
xchg
push
mov
jecxz
scas
dec
das
test
jge
cmp
(bad)
popf
test
or
scas
fst
fs
loope
push
call
arpl
test
imul
dec
lahf
mov
and
push
popf
adc
mov
push
(bad)
cld
cmp
int
xchg
or
xchg
shr
mov
lds
sbb
inc
push
lods
inc
pop
push
dec
mov
retf
cmp
loop
movs
dec
fs
cs
icebp
pop
shr
push
fs
movs
jl
loope
ficomp
inc
and
iret
xor
dec
data16
cmp
(bad)
shr
test
jg
jmp
or
pop
xor
inc
bound
jnp
cmp
push
mov
mov
sbb
gs
mov
mov
push
loope
aad
rol
scas
dec
add
add
sub
loopne
movs
sbb
fild
scas
ficomp
push
jl
push
daa
push
adc
xlat
cli
lahf
xor
pop
das
mov
xchg
lods
rcr
mov
mov
xchg
out
dec
cmps
cmp
xchg
mov
stos
pop
mov
or
xchg
ret
push
mov
sbb
sbb
(bad)
enter
addr16
jmp
push
inc
movs
or
pushf
push
call
adc
adc
push
(bad)
lock
lods
fistp
xlat
xor
sub
sub
adc
jmp
add
std
pop
pop
dec
in
fs
clc
arpl
js
rcl
not
pop
or
into
fadd
mov
popf
xchg
sar
pop
add
loopne
add
enter
or
(bad)
xor
in
das
push
push
xlat
dec
loop
dec
in
pop
push
xor
frstor
into
add
out
add
popa
test
mov
mov
push
xlat
mov
dec
inc
aad
sub
sub
mov
sub
ja
push
sets
push
push
pop
in
fs
dec
shl
(bad)
fcom
xchg
cdq
sbb
mov
repz
fmul
inc
inc
imul
mov
enter
mov
and
mov
mov
xor
daa
jne
call
test
fidiv
mov
out
jp
daa
fs
ficomp
cld
or
iret
add
jp
sbb
nop
add
xchg
push
mov
cmp
loopne
push
dec
shl
or
add
scas
gs
or
movs
out
pop
dec
mov
js
xchg
pop
pop
rol
push
mov
jle
inc
lods
sbb
adc
(bad)
test
mov
xor
mov
(bad)
movs
pusha
or
push
popf
lods
mov
mov
mov
xchg
pop
xor
leave
(bad)
cmp
aad
xchg
loopne
iret
push
push
retf
push
int
int3
(bad)
ds
arpl
call
pop
or
(bad)
sbb
and
mov
and
jmp
sar
mov
rcr
or
xchg
fldcw
popf
mov
call
add
lods
jne
mov
imul
ficomp
sbb
std
push
mov
dec
pop
sahf
push
aaa
aad
push
aaa
mov
pop
inc
ins
jecxz
les
jmp
jno
scas
xchg
in
adc
mov
mov
mov
pop
into
imul
xchg
rcr
pop
push
cs
push
sbb
cli
outs
pop
sub
daa
and
fsub
dec
sti
push
shr
rcl
jae
mov
popa
and
(bad)
sub
sub
add
dec
ficomp
les
mov
loope
das
inc
cmps
xor
pop
and
inc
(bad)
push
call
sub
(bad)
or
jl
xchg
dec
jmp
xor
lods
mov
pop
mov
sub
jl
idiv
outs
out
push
sbb
dec
mov
pop
push
mov
or
mov
and
fs
cli
pop
pop
or
or
int3
cmc
scas
mov
ins
push
lods
repnz
sub
inc
imul
fisttp
sbb
xchg
inc
aaa
add
jo
pusha
stc
cdq
adc
test
int3
mov
cmp
sub
xor
iret
lods
shld
lods
push
scas
mov
shl
rcl
sub
mov
and
mov
mov
push
daa
js
adc
test
add
mov
das
shl
push
popf
imul
out
pop
jmp
dec
ja
ds
jmp
mov
call
mov
jle
cdq
pop
add
xchg
add
es
mov
jb
popa
out
lds
cmp
fld
dec
push
fbld
jnp
outs
sub
jge
imul
dec
pop
sub
fstp
fsub
and
in
nop
mov
test
(bad)
dec
pop
std
out
outs
mov
and
pop
test
nop
test
ss
jbe
push
enter
imul
stc
outs
ds
popa
cdq
sub
pop
and
ror
repnz
and
imul
mov
shl
sar
and
aaa
aam
fld
(bad)
sub
push
fisttp
mov
stc
retf
xor
push
sbb
inc
fisub
aad
adc
stos
pop
push
xor
push
aas
lahf
pop
cmp
call
fs
jb
je
xor
xor
dec
mov
mov
scas
adc
(bad)
mov
jne
xchg
pop
std
fild
jecxz
push
xchg
bound
sbb
sub
jge
add
pop
dec
bound
movs
xor
das
push
adc
or
test
test
daa
in
mov
cmp
test
pop
xchg
xor
pushf
push
add
imul
dec
mov
outs
mov
mov
popf
and
push
dec
jmp
repnz
mov
retf
out
and
push
hlt
push
pusha
test
mov
push
push
pop
mov
in
outs
ins
dec
adc
jmp
int3
mov
pop
(bad)
fsub
leave
push
sbb
movs
scas
lea
add
mov
hlt
adc
push
push
push
sahf
sub
in
inc
(bad)
adc
push
(bad)
out
mov
fwait
jmp
jg
mov
ficom
sbb
lock
add
fst
sub
(bad)
sar
mov
neg
addr16
(bad)
repz
imul
lds
repz
cs
mov
cmp
sbb
lahf
inc
cmps
jg
cwde
int
fst
inc
icebp
loopne
outs
js
stc
shl
out
lods
mov
test
fs
jo
mov
mov
shr
mov
sar
mov
aam
neg
jb
pop
pop
cmp
cwde
fdiv
dec
jae
inc
imul
push
inc
sti
pop
fcom
jle
cmp
or
mov
aad
clc
cs
lahf
ret
fs
nop
sub
and
or
cli
lock
ss
or
pop
hlt
push
or
jne
adc
add
mov
sub
movs
xchg
into
cli
rcr
jmp
rcl
mov
dec
sbb
jmp
ins
int3
popa
mul
out
lods
cmp
push
retf
add
dec
dec
fs
push
mov
popf
call
(bad)
adc
push
pop
sub
xchg
repnz
fdiv
push
out
call
adc
xchg
out
outs
leave
and
or
pop
rcl
aam
xchg
pusha
adc
gs
sub
lods
out
push
mov
imul
test
cmp
xchg
or
aad
xchg
xchg
ret
add
mov
sub
das
push
jmp
push
(bad)
jno
xlat
movs
push
sub
mov
or
das
and
loop
or
push
sub
frstor
inc
and
pop
jb
fcmovnb
arpl
push
bound
xlat
jmp
retf
gs
mov
fcom
in
test
out
dec
out
dec
test
rol
bound
cmc
ror
pusha
test
pop
icebp
jb
inc
jo
inc
mov
mov
nop
mov
sub
lea
sub
add
rcr
or
push
jge
add
xchg
pop
and
add
shl
cmp
outs
mov
iret
daa
rol
mov
test
ins
pop
xchg
loop
dec
jmp
dec
push
adc
cmc
outs
push
add
adc
call
mov
scas
push
stc
adc
imul
jg
loop
sub
mov
add
imul
ss
clc
(bad)
inc
xor
ds
pop
les
cmp
in
fwait
aad
pop
shl
mov
enter
imul
add
jae
mov
inc
fnsave
inc
push
or
dec
xor
sbb
jno
mov
dec
pop
sbb
mov
cmp
dec
push
loope
jo
test
cmp
xchg
dec
cmps
pusha
add
mov
aaa
xor
shl
inc
leave
scas
inc
out
mov
mov
inc
xor
cmps
js
lods
and
xchg
ds
dec
cli
jo
arpl
div
pop
mov
pop
mov
inc
push
in
dec
mov
pop
inc
jae
mov
mov
ins
shr
pop
(bad)
repz
sub
mov
sub
iret
dec
jmp
movs
cmps
pushf
pop
mov
addr16
sub
or
jge
test
and
inc
test
jg
cli
dec
jns
jb
lea
loop
ins
icebp
std
dec
dec
icebp
daa
push
jnp
(bad)
fsubr
popf
and
dec
lds
fisubr
inc
(bad)
rcr
cmc
mov
aaa
jecxz
ss
jmp
inc
xor
popf
stos
mov
jne
imul
pop
jecxz
sti
stc
xchg
push
xchg
dec
dec
lahf
adc
adc
sbb
mov
shl
div
fcom
dec
cmp
sbb
rcr
mov
cdq
jmp
fnsave
or
pop
cmps
movs
xchg
leave
popa
movs
or
cmps
aam
shl
(bad)
jbe
pop
xchg
pop
mov
mov
jl
jnp
clc
retf
dec
pop
(bad)
push
rcr
into
dec
sub
dec
inc
adc
mov
fstp
pop
and
inc
inc
jnp
mov
js
inc
in
out
aas
dec
mov
jp
xchg
out
adc
lea
retf
daa
cmp
dec
fs
and
sub
ds
fwait
dec
(bad)
ds
xor
sub
pop
cmp
mov
mov
sti
mov
retf
and
add
not
test
out
ins
not
mov
mov
es
hlt
xchg
jl
jmp
js
sbb
jecxz
ja
or
sub
pop
jne
(bad)
icebp
loope
lds
cmp
ret
inc
dec
or
mov
or
push
pop
push
cmc
mov
jo
cs
scas
inc
xor
inc
out
outs
movs
xchg
enter
adc
scas
inc
inc
mov
and
cmp
mov
push
sub
fadd
jmp
adc
pop
out
jle
cmp
mov
jb
ds
mov
sub
mov
mov
pop
cmp
ds
push
enter
mov
xor
push
push
pushf
sbb
iret
dec
(bad)
cmps
mov
repz
addr16
(bad)
and
pop
fs
mov
in
int3
pop
movs
and
push
fild
pop
sbb
adc
xchg
lods
xchg
push
push
cmp
into
imul
mov
addr16
xchg
fcom
jmp
push
or
out
cmp
sbb
dec
pop
outs
xchg
mov
clc
pop
es
adc
cmp
jae
jecxz
mov
add
cli
aas
mov
sub
add
(bad)
mov
and
xlat
out
addr16
mov
sub
(bad)
retf
mov
mov
(bad)
aaa
jg
dec
outs
add
mov
bound
enter
fwait
add
jle
movs
mov
(bad)
in
jmp
imul
lods
out
adc
lods
movs
std
popf
push
outs
loopne
aaa
movs
mov
bound
popa
push
outs
jecxz
xchg
cmp
pop
add
enter
popa
imul
(bad)
sti
ret
jmp
cdq
lea
sbb
scas
or
dec
inc
xchg
sbb
fidivr
ret
or
cmps
push
pop
lock
les
int
(bad)
cmp
div
xor
cld
ret
xor
retf
mov
inc
sub
push
pop
repz
sar
test
sbb
sti
pop
rol
in
scas
sub
repnz
or
or
sub
push
sub
sub
nop
cmp
mov
sub
and
xchg
test
enter
mov
ficom
cld
adc
rcl
inc
shl
test
test
push
add
inc
xor
dec
fs
dec
sbb
pop
repnz
jmp
jmp
test
mov
das
cld
lods
dec
cmc
fwait
ror
cmp
out
loope
pop
or
dec
outs
jno
xor
fadd
leave
jecxz
mov
cmps
mov
adc
fwait
xlat
aaa
inc
loopne
jle
test
mov
cs
push
dec
xor
data16
mov
or
or
pop
push
add
test
mov
movs
sbb
imul
mov
mov
or
sbb
mov
ja
sar
inc
pop
rcr
out
out
sbb
add
rol
push
sub
arpl
sbb
ret
stc
iret
repnz
xchg
fmul
mov
sub
xchg
xor
dec
leave
jbe
sub
and
jmp
das
pushf
cmc
xor
and
pusha
jg
int3
lea
add
mov
jae
cmp
test
imul
pushf
sub
jae
add
clc
jo
into
jmp
inc
inc
add
jnp
mov
shl
movs
leave
jno
xchg
xchg
popa
xor
(bad)
dec
sahf
dec
adc
sub
fistp
mov
xor
and
shl
fisttp
ins
sar
xchg
in
ds
shl
sub
jmp
xchg
xor
sub
in
hlt
jne
mov
xor
mov
push
cmp
sub
pop
xchg
mov
lock
(bad)
fcom
out
pop
in
mov
push
fbld
movs
leave
sbb
mov
push
daa
movs
push
test
and
dec
push
out
mov
xchg
out
push
(bad)
cdq
or
and
jmp
xor
dec
jno
lea
ds
mov
iret
dec
or
xor
(bad)
mov
mov
lods
loope
imul
xor
mov
pop
push
inc
push
(bad)
push
nop
mov
inc
out
or
ins
cmps
mov
cdq
sbb
xchg
sbb
push
cmps
jb
fist
stos
jb
sub
xor
cli
adc
ins
fdiv
fisub
xchg
aam
mov
dec
and
pushf
(bad)
jg
ins
enter
dec
pop
xchg
arpl
xor
movs
jo
cmp
mov
sbb
or
jmp
fidiv
add
xchg
xchg
mov
ds
cmps
retf
leave
pushf
sub
add
ds
out
pushf
sub
inc
push
mov
xchg
bt
push
jmp
bound
out
aam
cmp
aad
xor
in
mov
or
mov
in
fdiv
xor
xchg
mov
inc
lahf
outs
dec
xchg
es
pushf
inc
mov
mov
lahf
js
jns
adc
mov
cmc
je
loop
adc
xchg
pop
sbb
ds
sub
loope
rcl
cmp
lods
arpl
arpl
das
inc
sahf
cmps
mov
aas
(bad)
cwde
mov
or
dec
xchg
adc
std
pop
ja
int
jl
in
lock
push
sbb
inc
jmp
jecxz
inc
jmp
push
cmps
add
fist
add
push
in
and
mov
(bad)
xchg
retf
jle
sub
je
jp
mov
fld
jno
inc
cmps
ds
sbb
repnz
hlt
cmp
ds
and
jbe
repz
cwde
repnz
mov
pop
test
stc
fsub
dec
xlat
stc
out
jb
jmp
les
int3
enter
fwait
repz
es
xchg
xchg
fimul
jge
push
mov
mov
mov
cmp
stc
stos
pop
cwde
push
xor
jne
push
movs
stos
nop
xor
dec
xchg
sub
push
dec
sub
xor
lahf
int
or
xchg
and
add
sub
push
sbb
xor
pusha
mov
push
fwait
mov
add
test
mov
xchg
cwde
jg
out
add
mov
inc
repz
sbb
fisubr
popa
in
sub
inc
popa
xchg
xchg
push
pop
adc
pop
inc
(bad)
inc
call
outs
sub
xchg
fisub
fiadd
sahf
aad
imul
xor
and
outs
add
pusha
ss
jge
adc
add
and
ret
pop
pusha
adc
lods
pop
mov
pop
or
pop
imul
add
push
mov
imul
jg
xrelease
rcr
aam
xchg
fadd
out
call
sub
sbb
(bad)
movs
into
or
rcl
ret
pop
pop
and
adc
fisttp
ss
call
sbb
push
nop
leave
mov
and
ret
imul
ss
adc
and
mov
cmp
pop
xor
inc
add
mov
je
ja
mov
xchg
loop
add
push
and
call
adc
lods
sbb
cmp
lods
adc
ins
jg
jge
pop
and
es
inc
jo
(bad)
jmp
jle
lea
cmp
cmp
bound
mov
mov
je
ds
xchg
jmp
and
xor
mov
adc
addr16
mov
test
xor
cmp
or
(bad)
rol
int
repz
iret
pop
add
push
inc
or
icebp
and
cmps
and
push
in
(bad)
jge
pop
cmps
lods
scas
jnp
jge
mov
call
push
dec
jo
call
add
pop
ds
bnd
nop
sbb
jns
pop
repz
fistp
cmp
cmp
rol
in
aam
int3
xchg
xor
int
mov
push
mov
adc
jmp
xchg
nop
xchg
push
or
push
jle
mov
xchg
ror
(bad)
jge
arpl
int3
ins
mov
arpl
in
(bad)
dec
or
std
icebp
and
push
pop
jnp
ficom
push
cdq
pop
xor
add
inc
dec
retf
mov
scas
mov
cs
stos
hlt
data16
cmp
sbb
int3
rol
xchg
fs
or
mov
rcl
fisttp
stc
jl
mov
pop
out
test
popa
jecxz
pop
push
rol
test
xchg
mov
xlat
and
int3
push
xor
or
sub
(bad)
dec
add
mul
xlat
or
jnp
push
dec
inc
shr
xor
dec
mov
jo
(bad)
xor
ret
push
mov
cwde
push
ss
stos
ror
(bad)
fucomi
cmp
mov
arpl
(bad)
jbe
push
call
mov
mov
cmp
pop
jmp
jp
mov
fild
fstp
jle
mov
sub
cmp
or
mov
cmp
pusha
out
lods
mov
stos
pop
inc
xchg
call
sar
lods
(bad)
sub
mov
fstp
jle
pop
(bad)
sbb
xchg
jno
loop
in
inc
inc
or
(bad)
dec
mov
gs
dec
dec
dec
cli
and
imul
pop
scas
mov
cmps
shl
movs
lods
in
inc
cs
mov
mov
inc
std
dec
clc
push
ins
pusha
or
mov
bound
fs
loop
xchg
push
jae
dec
cmp
cld
outs
(bad)
movs
loopne
pop
cmp
cwde
adc
retf
(bad)
or
cld
dec
je
nop
mov
popa
sti
mov
les
daa
mov
mov
push
mov
aam
adc
xchg
pop
inc
xor
je
fmul
fbstp
cmps
aas
ja
dec
cmp
call
mov
das
frstor
sub
ja
ins
out
dec
or
imul
push
pop
add
or
in
jno
push
lods
push
and
inc
cmp
xchg
or
psubq
fsubr
leave
fisubr
ins
in
std
(bad)
mov
dec
sub
xor
add
jg
out
sub
fsub
add
stos
xor
mov
sbb
jbe
imul
push
push
push
mov
aam
test
(bad)
mov
or
or
jns
and
push
mov
ds
retf
out
sub
xchg
or
packuswb
retf
dec
cld
pushf
dec
pop
cmp
cmp
dec
stos
pop
cwde
fbld
jp
imul
sahf
mov
ret
es
mov
mov
adc
in
sub
retf
pop
in
cmp
lds
adc
mov
fmulp
inc
call
and
jge
mov
scas
mov
test
xor
(bad)
jmp
test
das
or
in
out
mov
stc
lods
ins
xor
add
jl
and
hlt
popf
sbb
fiadd
test
out
in
das
add
pop
and
mov
shl
les
xchg
adc
xchg
push
and
inc
push
push
(bad)
in
add
in
xor
out
clc
xchg
(bad)
repnz
inc
in
repnz
xor
mov
aaa
(bad)
mov
cmp
mov
inc
ficomp
(bad)
out
jp
inc
out
cmp
imul
add
xchg
and
jg
xor
iret
call
pop
adc
mov
adc
nop
call
fcos
pop
mov
int3
and
mov
jmp
dec
mov
dec
retf
nop
push
add
test
icebp
cdq
inc
xor
movs
or
jmp
stc
sbb
mov
nop
dec
mov
pop
push
add
mov
(bad)
neg
stc
stos
rcl
imul
mov
cwde
ds
mov
sbb
les
hlt
imul
rcr
test
out
loop
mov
mov
sub
xchg
out
mov
out
ret
pop
push
push
push
aam
pushf
mov
jle
adc
hlt
push
cli
je
dec
ins
push
push
retf
stos
loope
pop
into
dec
test
mov
cdq
sar
dec
stos
or
add
mov
lahf
mov
or
or
mov
sbb
aad
mov
dec
dec
jmp
cmp
data16
hlt
pop
mov
cli
sbb
ficomp
int
movs
jo
out
push
and
mov
std
ret
push
ret
adc
sub
iret
setp
ins
pop
mov
arpl
mov
pusha
fwait
xchg
xchg
div
jae
sbb
iret
(bad)
and
out
ret
addr16
pop
in
fistp
adc
push
jge
ror
pop
sub
inc
mov
(bad)
movntq
mov
(bad)
push
call
sbb
daa
push
sub
mov
cli
fistp
mov
inc
test
ds
pop
sar
movntps
xchg
cmc
sub
mov
dec
or
xchg
loop
dec
push
cwde
mov
push
and
inc
fs
xchg
and
stos
enter
and
push
mov
imul
addr16
mov
jno
arpl
pop
scas
mov
jmp
(bad)
jmp
push
jecxz
imul
stos
dec
popa
adc
stc
clc
leave
neg
ret
jecxz
test
ja
sbb
xchg
ja
aam
mov
pop
cdq
aad
retf
out
mov
sar
mov
inc
fisub
repz
jns
sbb
xsaves
mov
mov
sub
mov
arpl
daa
mov
mov
adc
(bad)
nop
aam
xchg
fld
rcl
aas
movs
inc
jmp
imul
jle
cmp
inc
sub
or
push
dec
movq
cmps
int
push
js
fcom
stc
(bad)
shl
call
pop
ret
lock
jbe
xchg
and
cmp
add
jge
mov
es
inc
aas
and
push
mov
mov
xor
xchg
out
jns
xor
mov
add
mov
add
in
mov
popa
sub
mov
aas
jbe
js
and
fs
push
mov
movs
je
lods
scas
dec
nop
shl
aaa
adc
or
gs
cld
stc
aad
ins
ror
cli
call
shl
dec
pop
call
inc
or
cmps
pop
in
mov
dec
in
xchg
lahf
int3
dec
lock
mov
jp
addr16
inc
mov
jne
mov
sbb
vpsadbw
lds
mov
mov
cmp
je
sbb
lods
outs
jnp
mov
adc
sub
and
sahf
sub
add
into
sbb
cmps
cmp
add
cld
popf
call
fdivr
loopne
in
shl
sub
jb
data16
xchg
and
retf
mul
mov
data16
stc
iret
mov
aas
test
sub
jne
mov
int3
ret
popf
cmp
mov
xor
or
(bad)
jno
ror
neg
ret
pop
movs
cmp
jmp
ret
sbb
popa
push
mov
scas
add
dec
jae
repnz
sub
xchg
xchg
and
cmp
push
out
mov
je
(bad)
sti
xchg
into
adc
das
pusha
jns
adc
std
cmp
movs
mov
add
pop
pop
mov
je
(bad)
xchg
jmp
mov
pop
pop
pop
dec
clc
xchg
(bad)
sbb
pusha
inc
fadd
sbb
pop
xlat
jnp
lods
pop
out
or
cwde
cmp
std
ins
ins
pusha
stc
push
loope
into
xor
test
push
add
cmp
cmp
enter
fidivr
fs
pop
pop
mov
mov
test
rcl
mov
push
retf
cmp
xchg
sbb
sbb
pusha
dec
(bad)
sar
loope
or
cmp
jecxz
stc
out
addr16
cdq
cmp
popa
repz
nop
sub
pop
pop
shl
fwait
add
add
inc
clc
add
xchg
or
jg
pop
mov
cld
test
fdiv
mov
outs
aam
outs
dec
outs
idiv
xchg
aas
test
(bad)
jle
hlt
adc
xchg
and
arpl
jg
push
data16
gs
or
jbe
cmps
dec
xor
fmulp
cmp
je
pop
into
fdiv
xchg
cmps
xchg
push
jge
add
arpl
icebp
iret
movs
and
lods
xor
shl
aaa
adc
and
dec
push
adc
scas
and
mov
test
push
or
inc
les
push
mov
adc
mov
fcmovu
xor
sbb
jbe
push
push
push
jg
add
mov
xchg
or
dec
inc
cmc
xchg
push
add
mov
cld
xor
mov
mov
add
xor
jge
cmps
ins
std
adc
pop
clc
push
sbb
sub
xchg
xor
push
cli
mov
rol
or
and
cli
repz
and
push
ficomp
mov
cmp
mov
cmp
int3
xchg
or
xor
jg
shr
cmc
retf
push
jnp
or
pop
push
dec
sbb
loopne
sbb
xchg
test
(bad)
(bad)
mov
(bad)
or
test
sbb
out
retf
repz
xchg
and
xlat
outs
push
es
daa
push
cmc
push
jge
ins
push
gs
int3
inc
mov
(bad)
(bad)
and
mov
and
cld
aad
popf
cli
push
dec
cwde
lods
adc
push
sbb
jge
jmp
xchg
ds
sahf
or
jnp
xchg
sbb
inc
dec
jp
mov
lock
mov
mov
pop
(bad)
(bad)
adc
(bad)
hlt
pop
(bad)
adc
add
add
aas
outs
lods
mov
jecxz
xchg
neg
mov
pop
das
sub
fwait
(bad)
enter
in
fs
jb
fwait
int3
dec
stos
xchg
retf
and
ins
out
popf
cmp
rol
sbb
rcl
xchg
cmc
addr16
pop
retf
cmp
fnstcw
mov
jge
push
loope
repnz
sbb
repz
jp
fadd
and
outs
ficomp
pop
push
(bad)
adc
jecxz
adc
mov
adc
mov
cmp
adc
mov
repz
and
cmp
(bad)
out
and
add
xchg
out
(bad)
(bad)
jne
mov
jg
push
out
or
inc
add
cs
mov
pop
neg
mov
imul
jmp
repnz
mov
add
je
fcmovu
xor
mov
(bad)
mov
xlat
rcl
movs
dec
(bad)
jle
mov
div
cs
inc
inc
sar
push
push
inc
jns
mov
test
xor
scas
leave
in
mov
sbb
loope
jne
adc
fild
jns
imul
mov
jmp
push
call
xor
pusha
arpl
mov
outs
idiv
mov
lock
ror
je
sahf
xchg
sub
sbb
and
aaa
jg
adc
mov
jle
pushf
push
mov
or
pop
imul
je
dec
dec
sti
mov
inc
in
mov
popf
jmp
xor
cmp
mov
cmp
sub
pop
out
pop
cld
fstp
mov
mov
sbb
rcr
(bad)
bound
outs
leave
cld
rol
jl
inc
stos
fwait
xor
setne
iret
xchg
add
aad
push
call
fld
call
xor
cmc
(bad)
out
sub
jp
fisubr
pop
adc
cmps
add
int
dec
or
sub
mov
aam
dec
xor
rol
in
pop
add
mov
lds
lds
and
dec
pop
xchg
mov
jno
xor
and
jb
cmc
adc
push
or
push
sbb
xchg
fmulp
retf
sub
adc
int3
icebp
fucomip
fnstcw
or
js
ret
in
jmp
fldcw
iret
nop
pop
jmp
mov
or
xchg
jnp
ror
int
sbb
fcomp
mov
jb
fidiv
and
enter
xchg
pop
xor
jecxz
ds
fadd
xor
rcr
sub
jns
aas
mov
inc
movs
or
dec
imul
sbb
mov
cmps
mov
adc
dec
push
pusha
mov
jg
aas
lock
test
dec
or
mov
in
xor
lock
aam
(bad)
cs
adc
or
xchg
pop
xor
stos
sbb
inc
or
inc
push
push
push
jns
xchg
fmul
sub
or
dec
loop
xchg
sbb
ss
push
xchg
ret
xor
push
enter
push
popf
and
dec
ret
push
mov
mov
xor
es
adc
cmp
adc
push
call
out
inc
les
dec
push
mov
cs
into
mov
hlt
(bad)
loope
call
cmp
inc
push
add
lods
push
int
test
jl
inc
ins
cmp
inc
adc
cmc
and
aaa
mov
xchg
fiadd
cmp
popf
scas
retf
push
test
popa
mov
mov
cmc
jge
mov
popa
test
cmps
bound
out
hlt
xchg
mov
fild
arpl
pop
cmps
or
int3
stos
cwde
xor
push
push
lock
inc
lods
push
mov
pop
or
mov
dec
call
icebp
pop
push
xor
dec
mov
jecxz
mov
inc
pop
mov
arpl
retf
mov
retf
loopne
dec
xchg
and
stc
push
dec
xor
xor
retf
sub
mov
std
sbb
cmp
sti
xlat
sahf
dec
ret
push
xchg
scas
push
add
sub
stos
pushf
jne
mov
fsubrp
mov
or
arpl
push
cmps
mov
mov
mov
sub
pusha
sahf
cmp
in
(bad)
out
mov
rcl
and
mov
xor
adc
cmp
mov
mov
jl
push
(bad)
hlt
mov
sub
sbb
xchg
sbb
inc
test
sbb
sbb
aad
or
cmc
shl
fcom
stc
jg
and
mov
xchg
and
mov
add
fidivr
jl
(bad)
(bad)
scas
inc
arpl
cdq
ror
rol
loope
inc
pop
mov
aad
jno
inc
sti
push
out
jae
ret
movs
(bad)
fisttp
adc
push
mov
xchg
push
push
and
in
xor
xchg
nop
xchg
addr16
mov
mov
in
ja
loope
sbb
dec
std
cmps
imul
or
fild
dec
dec
stos
sub
mov
adc
imul
cmp
test
lahf
test
xchg
fnstcw
jmp
xor
(bad)
xchg
aad
push
bound
jnp
jno
sbb
ds
dec
push
mov
jo
push
sub
and
callw
jge
mov
test
aaa
cmp
pop
sub
ds
iret
popa
int3
mov
fst
retf
pop
fnstsw
rol
jbe
or
ret
mov
and
pop
inc
lahf
jl
pop
xor
xchg
pop
(bad)
or
cmc
jns
les
mov
and
cdq
and
inc
popf
retf
add
push
das
ins
mul
movs
xchg
mov
or
jecxz
mov
jmp
aaa
xor
push
idiv
sub
sbb
mov
xor
jbe
out
fisttp
jnp
push
mov
add
inc
xchg
movs
imul
ss
xchg
leave
sti
in
inc
push
rcl
je
inc
retf
xchg
jbe
jmp
shl
jne
out
push
mov
popf
lock
xchg
adc
cli
imul
dec
mov
sbb
ficomp
mov
push
dec
and
lahf
(bad)
not
jae
jb
dec
add
call
mov
test
jl
or
lahf
pop
push
mov
xor
mov
cwde
imul
adc
test
mov
loop
mov
and
dec
out
popf
movs
inc
add
sub
sbb
ja
imul
adc
(bad)
adc
push
outs
sub
xor
ins
pop
add
outs
imul
sti
pop
push
cmp
iret
std
and
and
cmp
ret
sub
mov
and
jo
jge
iret
jns
into
mov
cmp
pushf
dec
rol
lsl
call
add
push
lea
inc
(bad)
ficom
outs
dec
ja
ins
jecxz
mov
sub
or
jno
adc
jmp
push
cmp
cmc
mov
call
add
out
cld
jmp
add
mov
(bad)
leave
test
das
into
and
add
mov
call
and
push
mov
lods
jp
dec
xchg
cmp
daa
push
add
sub
iret
inc
ret
jno
adc
cmp
jecxz
adc
sbb
mov
pop
or
mov
push
mov
dec
popf
aad
sub
mov
mov
sub
sti
enterw
xchg
out
cs
loope
sar
fiadd
adc
push
(bad)
scas
jecxz
adc
in
daa
cmp
in
in
int
fimul
mov
stos
test
(bad)
push
jmp
adc
and
push
mov
inc
push
loope
pop
pop
(bad)
mov
xchg
mov
mov
dec
ins
(bad)
inc
shr
out
sar
pusha
lock
out
pushf
(bad)
(bad)
repz
adc
je
rcr
retf
fld
sbb
adc
xchg
repz
xlat
xchg
sub
retf
in
test
xor
push
jnp
fcom
cmp
mov
rcr
jno
cdq
push
sub
rcl
mov
enter
xchg
(bad)
push
icebp
sub
repnz
cmps
das
in
mov
pop
es
mov
rcr
ds
push
inc
push
lahf
aam
mov
mov
mov
sti
push
pop
inc
add
outs
xchg
fild
add
or
jo
xor
push
adc
popa
jp
ss
loope
sar
out
mov
push
std
xchg
mov
and
dec
arpl
sbb
sbb
cs
or
test
jne
data16
(bad)
shl
and
dec
and
in
pushf
icebp
movs
mov
shl
jg
inc
(bad)
add
fwait
je
test
lods
mov
adc
mul
movs
mov
mov
add
mov
into
dec
sub
jecxz
es
add
sbb
jae
fidivr
fs
in
dec
fs
movs
add
cmp
push
popa
jno
leave
inc
mov
loope
push
mov
ret
call
mov
pop
lock
daa
push
or
cld
mov
test
inc
xchg
adc
aas
and
cs
cmc
jns
daa
cmp
mov
jo
ficom
int
call
or
push
xchg
or
sub
clc
stos
push
cmp
mov
imul
icebp
pop
mov
adc
addr16
rol
adc
mov
dec
fs
dec
dec
xchg
ret
push
and
in
push
aad
dec
ins
xor
cwde
adc
sub
outs
xor
cli
jle
jmp
adc
push
into
stc
(bad)
int3
adc
add
das
sub
pop
jb
mov
adc
jns
std
mov
inc
dec
sub
and
call
imul
sub
cmp
dec
push
aaa
push
rcr
cmps
repnz
jmp
fwait
inc
mov
ja
test
test
enter
add
cmp
or
mov
pusha
shl
mov
adc
inc
push
sub
cmps
push
jle
daa
cmc
add
lahf
js
ss
sub
sar
fwait
xchg
repz
dec
loopne
shufps
loopne
test
shl
in
pop
xor
sahf
les
xchg
dec
jae
adc
aaa
jmp
mov
pop
xor
push
sbb
dec
push
ret
es
lds
sub
je
mov
iret
jge
repnz
ins
xchg
or
daa
push
mov
aas
mov
push
mov
dec
imul
fsubr
xor
les
xor
fs
(bad)
sbb
ret
data16
mov
adc
adc
mov
sbb
repnz
cmp
icebp
movs
xchg
pop
push
das
cmps
and
out
dec
aas
daa
pop
sbb
hlt
pop
sti
push
add
and
pop
inc
int
dec
das
xor
cdq
(bad)
inc
test
pusha
inc
sub
push
xor
retf
inc
add
add
and
xchg
jns
outs
sbb
push
ja
shl
es
popa
cwde
jno
sbb
dec
sub
test
ins
inc
test
ret
bnd
jecxz
jno
pop
test
ins
and
sub
fnsave
fild
push
sub
loope
and
mov
push
lock
cli
icebp
arpl
and
sub
(bad)
leave
gs
jmp
jmp
ficom
imul
cmc
lods
test
(bad)
cmc
xor
sbb
xor
fwait
xchg
out
jmp
stos
and
and
inc
jnp
cmp
outs
push
cli
pop
add
fcom
movs
cmp
cmp
push
lahf
or
popa
sbb
cmp
inc
mov
(bad)
daa
fwait
pushf
jge
dec
push
jl
push
cmc
mov
dec
mov
mov
xchg
push
lods
ja
and
pop
repz
cmps
jecxz
(bad)
mov
icebp
ins
test
jg
mov
mov
std
push
outs
xor
fwait
sar
sub
xchg
lods
mov
out
(bad)
sahf
scas
add
jmp
(bad)
cdq
sahf
cdq
popa
fwait
push
sbb
les
into
imul
pop
shr
in
mov
ins
jl
icebp
mov
push
lods
arpl
addr16
push
dec
jmp
call
arpl
call
int
mov
xchg
mov
mov
sub
mov
ins
dec
ficomp
es
std
cmps
cld
xor
call
cmp
add
jmp
lahf
enter
xor
jg
cmp
bound
sub
lea
je
push
dec
pop
cmp
adc
daa
pusha
ins
push
fdivrp
lahf
lods
icebp
xor
(bad)
fs
mov
jae
dec
xor
ins
adc
arpl
loope
add
imul
cwde
dec
sbb
sub
xchg
call
cs
cmc
jae
(bad)
aaa
popa
aam
popa
xchg
mov
and
pushf
jns
and
pop
xchg
clc
add
pushf
fimul
pop
xlat
inc
add
inc
fisubr
test
clc
mov
das
push
inc
in
dec
add
mov
add
mov
xor
add
cmp
rcl
pop
dec
pop
dec
in
dec
popa
test
cmp
add
xchg
stos
cmp
loope
push
xchg
mov
mov
or
lods
and
ret
imul
or
xor
adc
xor
sbb
cmp
aam
or
test
sbb
fxch
or
dec
jge
popf
inc
cmps
xchg
push
scas
jb
mov
dec
aaa
and
ss
nop
adc
jb
stos
cmp
rsqrtps
cmc
push
out
jle
jo
push
pop
das
cmps
inc
cs
shl
cwde
sub
jns
mov
mov
and
cmps
jmp
and
sub
in
mov
std
outs
imul
mov
shr
xor
call
(bad)
out
mov
mov
test
int3
sub
iret
cmps
sahf
cmp
and
mov
add
cli
outs
xchg
in
cmp
dec
cmp
xor
sub
cmps
lods
push
test
cwde
cli
pop
iret
cmp
cli
lahf
push
dec
jmp
clc
sbb
mov
or
dec
cmp
dec
aaa
sub
dec
xor
mov
jbe
sbb
out
mov
mov
in
mov
push
inc
pop
jmp
dec
mov
push
pop
add
mov
fiadd
add
aas
pop
jecxz
out
mov
lds
sub
sbb
shl
dec
mov
mov
sub
dec
or
jbe
sbb
adc
add
idiv
inc
jge
mov
pusha
and
dec
adc
cmp
stos
xchg
jae
popa
push
sub
or
imul
(bad)
(bad)
xchg
dec
ja
jg
jno
test
push
icebp
retf
cmp
cmc
adc
push
jle
pop
stos
push
fucom
sbb
shl
lock
sti
push
mov
ja
jo
jge
cmp
dec
(bad)
in
stc
popa
cdq
jmp
xor
rol
in
mov
jnp
push
dec
repz
mov
adc
mov
js
repnz
imul
sub
test
fadd
sub
mov
out
fimul
jnp
je
add
push
mov
sbb
ret
xchg
sbb
inc
data16
hlt
test
cli
push
mov
xor
int
call
scas
stos
mov
add
pop
mov
fmul
inc
out
bound
jl
jbe
dec
in
movs
(bad)
cli
dec
sahf
in
lods
dec
jo
es
enter
mov
fdiv
or
aaa
pop
call
(bad)
data16
sub
mov
pop
cli
jmp
inc
sahf
jmp
test
mov
pop
add
bnd
xchg
pop
mov
mov
or
scas
retf
mov
add
push
xchg
sub
gs
cmps
stos
inc
in
ja
movs
pop
mov
adc
ret
and
mov
push
cmp
sub
sub
repz
pop
or
in
mov
add
mov
sbb
or
test
inc
adc
imul
arpl
aaa
(bad)
rol
repz
sahf
fcomi
dec
push
ins
(bad)
dec
sub
xlat
add
jmp
add
push
(bad)
xor
xor
mov
sub
mov
fsubr
bound
sbb
lea
or
pop
mov
ret
ror
test
not
jg
dec
mov
jno
fistp
adc
push
leave
aas
scas
push
jnp
and
cs
adc
cmp
jmp
sar
sbb
es
ds
and
stc
and
imul
call
hlt
xchg
or
icebp
pop
pop
cmp
repnz
jbe
mov
mul
mov
push
cmp
call
into
push
(bad)
arpl
imul
push
sub
adc
mov
fsub
add
jmp
lea
data16
push
sets
pusha
add
(bad)
mov
and
daa
xor
nop
stos
mov
ret
sub
or
in
mov
mov
cdq
and
ret
fldcw
or
jb
outs
xchg
jecxz
mov
test
push
data16
ins
add
dec
out
jge
xchg
jmp
add
loop
repnz
push
ficom
cmps
(bad)
mov
cmp
icebp
enter
add
imul
mov
add
ins
xchg
mov
scas
add
jg
and
adc
outs
in
cmp
lahf
loop
push
mov
and
inc
and
jae
pushf
out
add
mov
int3
lahf
ror
ds
and
int
mov
pop
mov
mov
fcomp
push
mov
mov
cs
sar
xor
cmps
push
mov
stc
inc
xor
stos
dec
adc
loopne
test
movs
cli
mov
sti
stos
dec
sub
(bad)
fdiv
es
es
adc
ret
sbb
xchg
movs
mov
dec
xor
mov
lock
pop
enter
not
jecxz
mov
(bad)
and
pop
xlat
test
rcl
popw
add
jge
fucom
add
sbb
adc
hlt
icebp
mov
js
gs
pop
add
and
pop
or
rol
bound
pop
xor
movs
fmul
push
inc
cmp
fwait
mov
outs
leave
int
lods
movs
lds
js
and
dec
cmp
inc
sbb
out
pop
js
dec
mov
jl
mov
jnp
xor
or
xor
int3
xchg
retf
inc
cmp
stc
(bad)
rol
shl
add
mov
or
popf
and
(bad)
dec
ins
scas
add
fld
push
add
jmp
aad
push
inc
fisubr
mov
inc
mov
arpl
push
adc
daa
mov
call
aaa
adc
add
jo
xchg
jmp
into
inc
imul
(bad)
in
not
gs
sbb
lods
dec
test
add
call
mov
or
adc
mov
sub
sbb
lock
cmp
mov
shl
cmps
adc
push
jle
fstp
les
ret
inc
mov
mov
inc
pop
fdivr
shl
jnp
outs
jmp
mov
pop
loope
sbb
pop
sbb
mov
mov
add
pop
mov
js
icebp
cmp
bound
mov
cmp
popa
push
push
icebp
jb
sbb
mov
or
inc
add
inc
ja
(bad)
hlt
pop
loope
push
push
fadd
imul
cmc
inc
jg
gs
fstp
and
mov
fdivr
or
fisttp
arpl
sahf
arpl
nop
adc
out
cmps
sub
mov
mov
movs
sub
shr
ds
or
dec
xchg
mov
(bad)
ja
popf
iret
inc
outs
les
sub
rol
sub
outs
or
retf
add
outs
xor
fidivr
mov
call
out
push
inc
pop
inc
xchg
in
aas
nop
fcomp
pop
mov
cmp
sahf
test
(bad)
lock
xchg
push
test
inc
sub
shr
and
test
test
aad
adc
arpl
cmp
ja
repnz
cmc
push
pusha
mov
gs
mov
fbstp
repnz
inc
mov
inc
cmp
fwait
sar
fldenv
push
dec
dec
sbb
ret
clc
shl
cmp
rol
sti
mov
jae
scas
and
inc
test
pushf
or
ret
push
es
xchg
into
xor
cmps
retf
(bad)
mov
dec
fs
daa
fimul
(bad)
dec
out
sub
sub
mov
add
jge
iret
mov
jmp
mov
and
pop
(bad)
shl
xor
and
div
mov
fimul
imul
dec
jno
sub
test
mov
sub
jmp
sbb
retf
dec
or
out
cli
ins
push
push
stos
pop
in
cwde
lock
mov
mov
dec
jge
stos
jne
push
push
push
mov
repz
inc
and
inc
dec
int
cmp
pop
cmp
scas
lds
inc
mov
sub
xor
push
pusha
jae
mov
push
sub
xchg
sbb
(bad)
pusha
or
or
lea
retf
and
add
cmps
pop
or
push
cmp
bound
stos
hlt
loopne
aad
rol
sub
jge
int
aad
push
xchg
sahf
cmp
ret
mov
ins
icebp
add
and
jmp
xor
ret
and
pop
pop
xor
dec
push
scas
or
add
xor
nop
jecxz
push
add
cmp
cwde
loop
iret
adc
nop
mov
sub
fmul
jge
pusha
mov
rol
mov
jne
mov
dec
loopne
mov
mov
popf
and
xor
stc
mov
es
dec
mov
xor
sub
les
inc
add
and
cmp
js
mov
jno
es
out
push
ins
pop
cmp
add
cmps
loop
adc
xchg
or
arpl
cwde
aaa
dec
scas
mov
adc
add
mov
out
int3
iret
lds
test
ret
scas
cmp
sub
aam
inc
push
xchg
loop
ror
push
cmp
cli
adc
out
lock
fucomip
push
mov
lea
mov
test
push
jbe
js
xchg
mov
push
xchg
mov
iret
in
cld
test
jb
call
xchg
jb
popf
call
mov
and
mov
dec
cdq
pop
jbe
sahf
sub
cld
xchg
in
lods
cmps
sub
ja
call
sub
pop
cmp
push
mov
and
or
rol
mov
mov
mov
jne
xor
dec
loopne
outs
cmp
pop
sbb
cmps
cli
aam
inc
imul
dec
ins
clc
test
cmps
(bad)
jo
sub
(bad)
(bad)
shr
jbe
inc
sti
shl
dec
xchg
cmps
adc
ins
mov
(bad)
push
pop
daa
jge
lahf
mov
adc
jae
or
mov
dec
xor
inc
popf
sti
jbe
into
or
int
and
xchg
pop
in
xchg
mov
pop
cs
int3
inc
xchg
test
mov
movs
jg
push
es
mov
ja
xchg
mov
inc
jmp
or
push
mov
cmc
into
popa
imul
sbb
in
adc
jmp
out
cmc
div
jmp
adc
fdivr
pop
mov
(bad)
jmp
push
test
je
add
gs
dec
movs
cmp
and
fld
jecxz
jb
in
cld
inc
outs
push
add
mov
or
adc
xor
jg
(bad)
xchg
das
mov
sub
stos
imul
sbb
inc
xor
xor
sub
mov
int
mov
scas
lock
pop
adc
es
jmp
pop
mov
sub
mov
enter
mov
mov
fwait
les
xor
popa
add
dec
xor
adc
std
mov
retf
shl
mul
add
or
sti
inc
std
xor
sub
xchg
cmp
sub
test
fs
cmp
push
inc
xor
push
adc
jne
aaa
push
lds
pusha
cdq
jns
jnp
outs
test
inc
cmps
fwait
dec
adc
and
add
mov
dec
jo
mov
ret
pop
add
dec
xor
mov
sbb
cmps
(bad)
clc
push
aam
sbb
adc
sub
xor
fwait
test
aad
stos
mov
adc
jo
int
mov
inc
push
mov
mov
ins
cmp
mov
(bad)
lds
pop
shl
daa
dec
add
es
clc
push
out
push
sahf
les
or
mov
daa
retf
mov
dec
out
movs
lock
adc
cdq
adc
fist
push
jg
and
lods
dec
add
and
mov
ror
outs
push
pop
dec
mov
aam
cmp
imul
outs
pop
push
ss
sbb
mov
cs
sar
push
mov
dec
sub
push
push
inc
ficom
cwde
ret
jbe
je
ss
js
mov
xchg
cmc
mov
test
aas
mov
in
fs
dec
sub
push
add
jae
call
(bad)
jg
xor
jmp
daa
movs
lahf
pop
push
fcmovnbe
mov
xor
aam
pop
jmp
inc
movs
dec
sahf
ss
out
movs
inc
or
push
push
or
fwait
std
and
stos
pop
jge
sbb
std
scas
cmp
adc
jmp
sub
dec
adc
mov
pop
mov
arpl
popa
push
fld
dec
test
std
cmps
mov
and
push
leave
int
lds
or
lods
xor
adc
adc
loope
xor
sbb
mov
sti
sub
pop
leave
(bad)
inc
mov
add
push
dec
sbb
(bad)
aaa
sti
push
mov
mov
mov
scas
pop
add
jbe
jmp
adc
or
sbb
fs
cmp
fwait
jno
sti
pushf
jecxz
pushf
adc
sub
push
mov
sbb
mov
int
test
repnz
outs
xchg
adc
in
jb
mov
jp
xchg
sbb
jle
jmp
xchg
dec
mov
or
cmp
push
mov
iret
push
(bad)
xchg
mov
rcl
not
and
jmp
cli
pop
xchg
push
sar
inc
xor
mov
dec
xchg
mov
mov
mov
xchg
dec
out
repz
mov
cdq
fs
inc
arpl
aas
mov
sub
mov
and
pop
push
(bad)
loope
mov
push
lods
cmp
push
je
dec
daa
add
std
out
mov
mov
repz
or
dec
jmp
mov
popa
inc
jno
pop
pusha
daa
mov
push
mov
in
mov
mov
stos
cmp
adc
jae
xor
es
loop
into
inc
scas
ror
inc
jmp
and
fnstcw
xchg
push
sub
xor
es
loop
cwde
dec
adc
into
add
je
sahf
shl
lods
loopne
mov
jle
hlt
push
mov
cmp
in
dec
out
jno
xchg
outs
and
mov
mov
dec
pop
push
push
rcl
jp
mov
shl
sub
xchg
or
rcr
push
outs
arpl
or
mov
ins
and
dec
pop
push
add
inc
test
fdiv
mov
in
mov
idiv
retf
nop
add
repz
addr16
(bad)
or
pop
fwait
push
ss
mov
mov
dec
aad
cwde
pop
repnz
push
xchg
push
and
and
ds
mov
mov
call
xor
pop
movs
add
jecxz
test
xor
outs
mov
mov
pop
(bad)
sub
jbe
pop
iret
inc
dec
xchg
mov
add
push
not
and
(bad)
imul
cmc
shl
inc
push
(bad)
mul
stc
sub
fdivr
add
mov
lea
dec
push
jl
dec
cmp
inc
inc
mov
pop
jg
icebp
and
rcl
cmp
aad
mov
pop
cmp
xor
adc
mov
je
repnz
or
shl
jbe
(bad)
out
mov
jp
(bad)
loope
or
mov
lods
mov
adc
jbe
out
ret
jns
push
add
fiadd
jecxz
jae
xadd
mov
test
(bad)
jb
iret
out
pop
jl
movs
ins
fstp
xchg
mov
in
shl
mov
and
or
jmp
fwait
stos
popa
xchg
mov
ficomp
test
adc
mov
test
xchg
adc
xlat
shl
call
pop
movs
push
push
test
dec
adc
push
mov
loop
pop
jae
jae
push
mov
aas
sbb
inc
jmp
dec
inc
xor
hlt
mov
in
xor
in
jnp
addr16
mov
pop
loop
cmc
mov
pop
movs
(bad)
repnz
imul
cdq
test
adc
dec
retf
jg
push
(bad)
icebp
mov
sub
pop
std
mov
push
add
scas
sub
out
adc
mov
and
jg
fcomp
lods
cmps
sbb
jne
outs
call
scas
popf
and
pusha
(bad)
scas
or
psadbw
enter
int3
cmp
jo
scas
int
fstp
xchg
dec
xchg
xor
pop
or
inc
pop
push
jo
and
ins
jne
(bad)
enter
cmp
xchg
retf
adc
cmp
cli
rcl
pop
(bad)
cld
or
pushf
scas
and
mov
test
pop
dec
sbb
dec
lahf
data16
js
adc
lea
mov
cdq
scas
test
mov
and
jbe
jne
int
mov
pop
jp
xchg
or
test
scas
in
cmp
ins
ror
mov
jmp
bound
xchg
xchg
enter
mov
in
cmps
imul
xlat
(bad)
jo
xchg
out
(bad)
mov
xchg
dec
cmps
dec
inc
shr
outs
pusha
(bad)
sub
test
and
mov
mov
dec
(bad)
jnp
rol
shl
not
mov
call
ret
xchg
xor
fst
xlat
das
nop
cld
das
lds
push
movs
mov
test
int
imul
sub
and
int3
or
mov
dec
pop
aad
and
xchg
je
cli
xchg
mov
inc
push
addr16
repz
dec
mov
fstp
dec
dec
push
mov
mov
push
or
xchg
cmp
mov
neg
sub
(bad)
(bad)
sti
add
stc
jl
shl
leave
pop
jl
scas
punpcklwd
mov
pusha
xor
and
clc
cmc
adc
call
xor
xor
sub
push
pop
fs
cmp
out
mov
xor
or
inc
xchg
jnp
jo
xchg
ja
ja
lods
fsubr
mov
neg
mov
adc
pop
fdivr
dec
fild
div
retf
pusha
adc
push
pop
push
js
lahf
jle
push
push
movs
pop
inc
gs
pushf
jmp
mov
jae
sub
popa
mov
cmp
mov
mov
sar
fs
gs
adc
adc
sbb
std
xor
adc
fimul
test
jns
out
mov
imul
ins
int3
adc
rcl
fwait
or
pushf
push
test
aaa
and
xlat
(bad)
mov
inc
es
sbb
stc
repz
cmp
or
push
out
(bad)
cs
push
loope
repz
pop
sub
pop
xchg
jno
ret
retf
cmps
xchg
or
push
ins
outs
inc
pop
mov
pushf
jne
xchg
jb
ds
mov
or
mov
fisubr
sub
mov
lods
and
xor
push
ret
or
(bad)
fnstsw
sbb
dec
add
mov
or
and
in
inc
fwait
bnd
mov
(bad)
bound
fsubrp
push
pushf
aas
hlt
pusha
test
int3
mov
jae
jl
mov
lock
sub
adc
sub
or
loope
lahf
enter
nop
(bad)
dec
in
shl
mov
push
or
cli
xor
dec
aas
mov
ret
mov
scas
sub
or
jo
xchg
xor
lods
std
lods
dec
xchg
in
sub
dec
sub
(bad)
jl
mov
cmc
jge
push
xchg
dec
pop
sahf
jae
enter
outs
pop
fcomi
add
cld
jmp
cmc
movs
mov
jae
mov
ss
arpl
test
ror
hlt
cdq
jl
ret
fsub
and
adc
and
or
sbb
inc
inc
cmp
cmp
cmp
sbb
dec
mov
push
dec
mov
rcr
rep
sub
xor
mov
push
sub
push
hlt
or
jns
xor
mov
sbb
sahf
stc
pop
pusha
jae
pop
xchg
sbb
daa
sar
mov
or
ins
mov
stos
mov
stc
sbb
scas
frstor
mov
add
lahf
leave
jg
sti
mov
jo
and
fwait
call
jae
popa
icebp
aad
cmp
dec
retf
sbb
and
xor
dec
inc
inc
xlat
cwde
mov
lea
(bad)
jmp
lahf
adc
hlt
outs
fsubr
cs
(bad)
or
fwait
outs
mov
into
and
jp
or
out
addr16
movs
call
sti
test
pop
lock
and
mov
pop
push
or
movs
pop
jne
or
into
and
fcom
test
or
repz
int
pop
iret
jmp
push
mov
fwait
push
mov
dec
pop
cmp
rcl
mov
dec
fidiv
pop
aaa
mov
ret
lahf
or
inc
inc
xor
jmp
jae
cmps
cmps
adc
and
aaa
pop
sub
mov
jge
rcr
shr
mov
push
repnz
dec
or
lahf
jle
fldcw
cmps
dec
or
cld
mov
pop
jns
pop
fadd
jnp
(bad)
in
shl
into
mov
push
enter
pop
out
cmp
mov
fdiv
seto
inc
call
(bad)
pop
fsub
dec
and
sbb
adc
pop
fmul
mov
ds
stos
mov
stc
adc
lahf
daa
add
jp
jmp
loopne
jae
cli
sub
xor
or
adc
popa
sub
and
dec
sub
mov
shl
movs
cmps
mov
sti
fwait
cmp
(bad)
hlt
inc
sub
xchg
mov
jle
ret
out
sub
mov
icebp
xchg
scas
stos
int3
pop
add
les
jl
mov
movs
mov
sub
int3
push
push
aas
fsubr
es
and
jne
(bad)
jb
pop
xor
dec
jecxz
aam
dec
xor
pop
add
or
pop
adc
jb
cmc
pop
pop
inc
out
cmp
jno
test
loope
leave
add
ficomp
cmp
imul
dec
xchg
cmp
inc
and
or
mov
xor
push
jnp
lds
xchg
sub
pop
pop
lahf
sbb
leave
test
popf
out
ror
outs
jecxz
rcl
push
neg
data16
cld
cmp
in
repz
je
ret
cmps
pop
repz
push
es
and
in
in
jl
out
push
xlat
mov
and
jp
fstp
cmps
cdq
push
nop
sub
scas
(bad)
not
add
sbb
repz
sti
xchg
shl
push
clc
call
pop
add
addr16
mov
sbb
mov
cmp
aas
lods
xor
ss
test
jnp
inc
into
or
add
imul
push
mov
xor
jnp
int
jb
ret
je
jmp
cmps
jg
push
movs
and
xor
jge
jmp
push
sbb
dec
es
push
sub
imul
shr
repnz
xchg
add
mov
out
pop
jmp
cmp
jo
sbb
movs
jg
cmps
div
ror
int
pop
js
test
arpl
retf
push
push
out
add
mov
add
dec
or
inc
bnd
(bad)
mov
jecxz
sbb
clc
pop
and
(bad)
mov
sbb
mov
pop
jge
clc
(bad)
mov
popf
fbld
lds
inc
push
ins
sub
pop
push
pop
cld
das
mov
xchg
gs
sahf
cmp
out
addr16
gs
in
push
cld
ds
cs
addr16
in
call
stc
push
sub
add
loope
xchg
mov
sbb
bound
mov
enter
xor
pop
inc
aaa
sbb
or
clc
sbb
adc
(bad)
sbb
sub
mov
xor
retf
ret
jae
fdivr
js
jmp
pop
icebp
xchg
dec
or
pop
lock
cmp
pop
add
mov
xor
cld
gs
adc
icebp
loopne
cld
add
pop
inc
cdq
push
jne
cmp
fisub
push
inc
lock
cs
jne
dec
mov
stos
jge
test
or
fild
jmp
jl
mov
fdivr
and
inc
stos
mov
fbld
cmp
push
mov
mul
pusha
jmp
sbb
dec
stc
inc
mov
or
frstor
and
sub
adc
test
pushf
adc
loope
pop
jne
xor
and
jmp
retf
cwde
or
in
and
mov
add
inc
mov
or
loopne
mov
pop
inc
ds
add
jg
pop
cmp
ror
icebp
cmp
mov
pop
popf
push
js
popa
imul
dec
lods
in
mov
xchg
sbb
fdiv
push
pop
imul
xchg
aaa
mov
(bad)
(bad)
mov
adc
dec
xor
data16
call
and
xor
cmpxchg
outs
inc
fnstsw
and
push
xor
mov
mov
mov
adc
mov
dec
cwde
shl
or
fild
xor
aaa
dec
jmp
in
int
mov
xor
fcmovnb
cwde
xchg
cs
add
mov
xchg
mov
add
xchg
in
sub
jge
xor
out
jecxz
(bad)
lods
jmp
or
movs
jmp
retf
or
xor
mov
pusha
call
or
xor
clc
imul
push
aas
jne
rcr
or
js
call
and
mov
lea
test
sbb
mov
stos
xchg
xlat
in
bound
mov
retf
cwde
outs
das
add
xlat
adc
shl
bound
xchg
sub
push
or
dec
fsub
pusha
cli
aam
inc
popf
idiv
test
rol
add
jg
shl
arpl
mov
ja
inc
or
retf
jge
adc
inc
cmp
jae
pop
inc
loopne
cmp
jmp
and
cmc
bnd
sub
inc
dec
icebp
popa
(bad)
mov
add
lods
mov
push
sbb
outs
xchg
call
shl
jp
das
add
mov
mov
out
popa
jecxz
popf
sbb
or
push
add
dec
daa
popa
call
cld
std
or
test
inc
scas
sar
sahf
inc
out
pop
aad
xor
ret
cmp
jbe
fdivr
xchg
xor
xchg
or
push
or
mov
and
dec
fcom
cld
in
out
fs
inc
repz
mov
(bad)
ins
mov
rcl
add
call
in
xor
and
loopne
add
icebp
mov
mov
les
scas
and
out
or
popf
loop
out
rep
cmc
enter
in
(bad)
iret
test
mov
adc
dec
push
inc
and
cmps
cmp
lds
or
cdq
jb
cmp
and
aam
xchg
imul
sbb
les
or
mov
stos
add
sar
arpl
push
jno
pop
aas
pop
mov
push
iret
mul
pushf
jmp
arpl
in
jno
jmp
fcmovb
xor
cmp
stos
mul
fstp
iret
sub
movsx
in
sbb
xor
cmp
loope
add
nop
jbe
mov
shl
mov
fild
mov
out
mov
das
int3
gs
sub
xor
test
xchg
push
pop
enter
das
frstor
fnsave
fidivr
xchg
fsubr
mov
xor
jecxz
mov
arpl
inc
pop
mov
jmp
push
aas
ss
push
lods
or
daa
inc
and
mov
mov
data16
or
and
jecxz
sbb
lods
out
cwde
dec
dec
mov
adc
xor
fidivr
(bad)
aas
or
std
mov
pop
sub
das
cmp
push
xor
mov
int3
sti
lods
xor
and
or
pop
int
fadd
fild
xchg
or
cmps
pop
aam
daa
mov
push
push
add
push
mov
cmp
jne
ins
push
test
dec
sub
or
and
xchg
xor
in
add
cmps
push
mov
cmp
in
sbb
pop
call
push
sbb
leave
jle
sbb
test
sbb
adc
popf
dec
sub
xchg
lea
out
sar
rcr
mov
pop
(bad)
fnstenv
xor
lds
xor
arpl
or
call
jge
dec
sub
retf
jg
pushf
scas
inc
stc
inc
sar
int
mov
fnstsw
call
lock
mov
pcmpeqb
mul
dec
retf
xchg
jne
pop
add
dec
das
popa
sub
sti
pop
inc
jno
repnz
out
xchg
imul
sub
mov
mov
pop
test
sbb
pop
pop
call
pop
nop
cmp
sbb
scas
push
xchg
or
adc
fldenv
adc
jbe
cmp
add
or
out
jge
xchg
aas
xor
adc
icebp
es
jg
ja
std
arpl
int
pop
jge
pop
ins
retf
ss
fdivr
push
daa
dec
jmp
push
jge
(bad)
cdq
cmp
mov
ins
ret
popf
inc
jmp
and
stos
mov
rol
mov
jl
es
scas
mov
retf
fcomp
inc
or
fbld
mov
pop
in
dec
sar
retf
rol
mov
or
add
cmps
fisubr
inc
xchg
test
cli
shl
rcl
pop
stc
sbb
and
test
fisttp
fwait
xchg
test
pop
jns
sbb
dec
es
jl
out
ja
pop
jle
daa
adc
add
cmp
xchg
push
lock
adc
sub
mov
jp
sub
std
xchg
lock
hlt
or
or
int3
mov
nop
imul
mov
jmp
mov
arpl
and
fs
xor
xchg
jmp
in
cmp
sbb
dec
repz
dec
mov
fild
mov
sbb
lds
pop
shr
mov
mov
lahf
pop
retf
imul
dec
dec
mov
cld
mov
int3
pop
inc
outs
push
mov
(bad)
inc
repz
pop
sbb
ficomp
pop
(bad)
lods
es
fist
or
(bad)
fiadd
js
es
ffreep
jmp
push
loop
loop
leave
ins
sub
out
je
iret
xchg
and
cmp
arpl
lods
jo
sbb
cdq
inc
adc
cwde
push
add
push
mov
aam
cmps
ins
nop
scas
loope
sub
sahf
cmp
cmc
sbb
pop
std
lds
push
push
cmp
cmps
(bad)
mov
or
int
jb
outs
cwde
sub
and
xchg
and
dec
inc
sub
xchg
pushf
pxor
jmp
cmps
popa
jns
mov
loopne
je
js
sbb
push
xchg
fwait
ret
or
pop
mov
xchg
jl
or
fisub
cli
mov
in
pop
out
and
lahf
cld
push
shl
lock
test
mov
into
cmps
fwait
aad
xor
cmp
mov
rcr
retf
jge
fsubr
call
rol
sbb
sahf
stc
or
dec
add
inc
or
loop
cmp
mov
push
repnz
(bad)
call
rcr
in
or
mov
das
std
mov
add
pop
cmp
outs
add
jl
aas
jne
call
call
sub
push
js
inc
dec
int
mov
or
push
and
call
stc
push
clc
mov
xor
shl
aas
pop
cmp
mov
pop
lods
js
ror
push
mov
shl
into
push
leave
xchg
loope
push
pop
sbb
movs
loopne
pusha
push
ret
sti
inc
pop
jge
lods
leave
repz
(bad)
repz
jge
repnz
pop
push
ss
out
sahf
xchg
dec
add
cwde
jge
lahf
sub
imul
inc
jmp
inc
xlat
sbb
xchg
mov
jl
push
test
xchg
mov
outs
call
fbstp
loopne
enter
in
push
ret
scas
scas
jo
sbb
sub
pop
pop
mov
int
push
mov
test
mov
mov
mov
cld
fsubr
call
jmp
sbb
adc
and
and
ins
shl
call
pop
out
shr
imul
dec
shl
fisubr
sub
sub
sbb
cmp
fwait
scas
cdq
mov
cmp
cmp
xchg
(bad)
shr
jno
and
and
sub
jo
clc
(bad)
daa
jae
jnp
call
pop
adc
cmps
into
add
aam
jmp
mov
imul
push
and
push
jp
cmovl
sbb
mov
and
dec
adc
(bad)
mov
inc
scas
cmp
push
sub
mov
not
out
mov
scas
mov
pop
dec
sbb
dec
xor
test
rcl
adc
sbb
lds
je
jbe
dec
dec
clc
jne
sar
test
inc
and
fld
test
imul
sbb
push
es
data16
ja
in
retf
ror
adc
mov
jp
cli
mov
pushf
movs
mov
xor
arpl
(bad)
(bad)
sti
pop
imul
add
ja
pop
xor
fwait
nop
enter
jne
xchg
and
mov
sti
icebp
cli
push
push
mov
in
cld
adc
leave
addr16
in
xchg
xchg
lea
add
es
inc
sub
mov
outs
push
into
or
in
mov
sbb
sub
xchg
(bad)
into
push
cmp
ds
pxor
pop
mov
mov
jno
add
jne
pop
inc
gs
sub
call
movs
jo
loop
pusha
loopne
pushf
inc
test
inc
sub
repz
pop
imul
add
shr
inc
popa
in
or
sub
js
(bad)
mov
xor
xchg
aaa
arpl
int3
adc
jmp
push
scas
xchg
dec
xor
dec
jle
outs
cmp
out
fstp
mov
jle
add
and
in
std
sti
pop
mov
xor
in
in
mov
movs
sbb
jge
xor
ror
dec
ror
mov
mov
hlt
stos
(bad)
out
inc
loop
ret
in
or
ds
aad
or
aaa
dec
add
js
cdq
into
(bad)
repnz
int3
(bad)
xchg
xchg
fsubr
cwde
mov
cmc
jns
cmp
jl
ins
sub
xor
daa
sub
pop
mov
mov
popf
mov
fsin
movs
dec
jmp
push
(bad)
out
dec
or
les
mov
xchg
dec
call
add
ja
inc
sub
mov
mov
imul
mov
pusha
cmps
test
retf
inc
shl
dec
lea
lds
jbe
jmp
(bad)
dec
push
ins
imul
mov
jns
mov
mov
mov
push
lea
cli
pop
frndint
outs
test
stc
push
adc
adc
push
iret
xor
inc
adc
movs
sahf
adc
add
imul
stc
xchg
mov
pushf
add
xchg
movs
and
push
fistp
fimul
out
ins
ins
add
imul
(bad)
ins
pop
cmp
inc
xchg
sbb
add
fsubr
pop
sbb
mov
(bad)
xlat
sbb
lahf
mov
jae
ficomp
push
popf
sti
clc
lods
int3
(bad)
mov
pop
sub
add
mov
mov
jge
dec
adc
scas
push
and
jle
dec
int3
dec
sbb
and
xlat
push
popa
or
test
or
push
aas
loop
sbb
shr
jno
frstor
sbb
inc
mov
cmps
fstp
cli
out
jmp
inc
outs
jp
arpl
ins
sbb
lea
je
or
imul
idiv
xchg
cdq
or
sbb
arpl
(bad)
outs
lods
in
add
jg
jb
add
dec
pusha
imul
or
cmp
cmps
mov
icebp
jp
repnz
inc
fcomi
(bad)
ins
retf
je
inc
ret
xchg
dec
daa
pop
leave
fistp
call
leave
jp
push
mov
mov
sti
popf
mov
div
inc
and
fisub
clc
fs
and
fdivr
xor
movs
or
xchg
dec
clc
adc
out
ret
adc
pop
ficom
or
sub
aas
and
sti
les
pop
loopne
mov
inc
push
xlat
dec
aas
mov
adc
mov
mov
es
jnp
ds
dec
push
outs
mov
cli
lds
in
adc
or
inc
xor
lods
sar
hlt
inc
ja
push
(bad)
retf
xchg
fisubr
test
dec
jnp
mov
iret
je
xchg
scas
sub
jg
ins
dec
fwait
lds
sub
or
adc
or
cs
jne
bnd
jg
lahf
xchg
push
(bad)
jecxz
rol
mov
mov
inc
loop
icebp
cmp
adc
or
cdq
lea
mov
inc
xor
lods
js
jmp
lahf
inc
and
in
pop
shl
jl
inc
mov
mov
inc
and
sub
add
cmp
fsubr
lea
dec
sti
add
stc
lods
sbb
stc
pusha
dec
fwait
and
nop
xor
pop
arpl
mov
enter
jmp
cmp
fwait
jae
mov
neg
add
jl
mov
loope
into
pop
aad
enter
pop
push
push
sbb
cs
sbb
std
loop
data16
cld
adc
js
xchg
jge
popf
repz
(bad)
pop
je
(bad)
mov
es
dec
cmp
outs
jge
mov
dec
ret
fwait
in
bnd
adc
aaa
mov
fdiv
(bad)
ja
cld
pop
cmp
iret
jl
push
push
arpl
and
retf
sbb
pop
jbe
mov
addr16
mov
in
push
das
lss
xchg
popa
sbb
pop
mov
add
mov
mov
(bad)
pusha
cs
dec
das
sub
arpl
inc
cmp
pop
push
pop
ins
daa
sbb
test
loope
add
neg
sub
cmp
dec
and
pop
adc
and
xchg
in
mov
jno
cmc
jmp
mov
(bad)
stos
ficom
cmps
jmp
add
loop
jae
stc
dec
iret
into
(bad)
adc
ret
sub
jmp
jo
bound
fld
mov
arpl
xor
and
fcom
add
pop
or
aad
sti
aaa
bound
inc
and
sub
shr
add
fcomp
mov
xchg
jne
fld
rcl
leave
cmp
mov
sbb
cmp
outs
inc
mov
in
sar
outs
dec
cmp
adc
mov
add
or
jo
xor
adc
push
lock
jmp
adc
fucom
mov
nop
pop
fcom
icebp
cli
adc
jb
call
sub
cwde
pusha
mov
and
pop
repz
inc
jne
sbb
pop
push
pop
sub
mov
jge
bound
jl
jno
ds
shr
jge
jae
das
js
mov
or
cmp
and
push
or
mov
je
push
fmul
pop
ins
mov
mov
pop
or
sbb
shl
test
xchg
rol
cmp
enter
add
inc
xchg
mov
or
not
rcl
and
dec
fstp
cmps
(bad)
std
sbb
test
cwde
mov
nop
inc
sub
je
mov
repnz
lds
fmulp
dec
jo
js
cmp
push
add
int
out
daa
push
nop
push
push
imul
repz
mov
dec
into
mov
ror
std
out
pop
push
push
stc
pop
and
jb
stos
jb
jb
xor
mov
cvtdq2ps
daa
out
movs
shl
add
pop
jae
addr16
sahf
jecxz
and
inc
mov
in
les
nop
fild
sbb
imul
test
dec
xchg
test
test
add
out
jae
ja
sbb
mov
mov
sar
or
mov
add
lds
(bad)
jmp
mov
xchg
xchg
push
retf
xor
test
sub
lods
pop
sub
mov
add
jg
fsub
in
lds
dec
dec
js
js
dec
or
ret
jnp
fiadd
sbb
dec
adc
in
test
lahf
(bad)
shr
repnz
addr16
or
scas
pushf
outs
dec
inc
push
enter
xor
add
adc
push
adc
dec
adc
out
int
or
jle
sub
and
inc
sbb
mov
inc
dec
pop
imul
clc
sub
add
fcom
sub
add
jge
les
dec
mov
xchg
inc
and
mov
in
jg
jae
pop
clc
sbb
(bad)
cmp
mov
cs
ret
xchg
xchg
cli
push
es
mov
je
cmp
sbb
cmp
in
add
retf
pop
push
mov
push
add
sub
xor
or
jbe
pop
out
pusha
daa
adc
mov
and
push
add
pusha
add
shl
int
inc
xor
or
outs
jo
in
call
ja
movs
cwde
sti
jbe
xor
scas
pop
xchg
daa
retf
mov
mov
cmp
mov
cvttps2pi
xlat
stos
imul
das
cmp
inc
lock
xor
and
pop
sub
xor
add
je
mov
dec
out
aas
les
add
ja
cmp
pusha
sahf
lock
inc
(bad)
call
inc
cmp
mov
and
enter
and
dec
push
pop
xchg
and
dec
fistp
push
mov
pusha
(bad)
sar
scas
jns
les
sbb
outs
cmc
lods
dec
mov
ror
lea
inc
dec
ins
push
enter
xor
lods
ss
mov
call
into
fist
lds
scas
cmp
add
sbb
and
and
int3
and
mov
pop
bound
mov
dec
pop
outs
jo
repnz
jl
xchg
leave
inc
xchg
out
(bad)
sub
mov
sub
inc
xchg
and
jne
cdq
lds
fcomp
xchg
pushf
jo
fcmovnu
pop
sar
aad
outs
xchg
sbb
pop
mov
mov
mov
jmp
dec
cmps
cmp
inc
call
ret
jp
xor
xchg
repnz
add
mul
ins
xchg
fs
jl
retf
and
push
into
enter
sbb
and
pop
jne
jl
xor
outs
inc
add
into
adc
inc
sub
inc
and
push
sub
push
fwait
dec
mov
mov
add
jb
shr
int3
lahf
popf
jns
inc
mov
lahf
dec
pop
xchg
ins
cmp
test
xor
push
ins
enter
push
gs
sbb
jns
inc
movs
jg
inc
fcom
xchg
xor
dec
das
lahf
shl
fs
inc
pop
lea
stc
fwait
ret
mov
jnp
aad
ja
div
ret
hlt
imul
pop
push
idiv
fistp
cmp
jnp
icebp
dec
xor
adc
mov
pop
stos
and
sbb
arpl
shl
mov
add
movs
mov
jnp
mov
ret
cdq
xor
leave
shr
imul
jl
mov
jne
inc
push
push
adc
popa
popaw
jge
mov
nop
cwde
lds
adc
pop
or
nop
ins
addr16
mov
test
retf
jne
fstp
xchg
outs
xor
xchg
sti
in
sbb
cmp
sahf
add
or
nop
std
fs
mov
cwde
xor
mov
hlt
je
dec
leave
test
dec
add
fild
jecxz
or
mov
cmc
(bad)
lock
pop
xchg
stos
rcr
cld
pop
imul
cmp
sub
mov
(bad)
(bad)
call
jmp
cmp
and
inc
pop
push
stos
push
repz
xor
xor
aam
push
sahf
inc
out
cwde
lahf
mov
sbb
lods
add
mov
sub
aam
jle
pop
test
in
cwde
push
ss
fs
cmp
or
dec
loopne
adc
mov
test
scas
cmp
fcomp
adc
mov
das
jns
ror
xor
cld
(bad)
sbb
je
xchg
push
fnstcw
test
jge
push
push
xchg
movs
and
fisub
adc
sbb
jnp
add
cmp
mov
enter
add
dec
stos
add
stos
test
out
sbb
into
push
(bad)
pop
test
sbb
mov
mov
cmp
jle
pushf
pop
adc
daa
pop
push
or
or
mov
jl
and
scas
ret
sub
xchg
push
and
lock
add
fisubr
jge
out
cmp
push
inc
out
sub
add
and
mov
or
(bad)
lahf
xor
or
jns
ins
clc
out
test
pushf
inc
stos
bound
fidiv
pop
ins
ficom
test
cmp
sub
lock
adc
scas
jmp
push
mov
js
fdiv
fimul
sbb
jl
xor
cmp
fild
neg
fldcw
repz
xor
loopne
dec
mov
mov
into
xor
or
push
adc
cli
add
jo
sbb
inc
outs
push
stc
out
addr16
pop
std
(bad)
fistp
mov
sub
push
and
or
outs
fwait
mov
add
in
mov
push
jb
and
vpmacssdql
pop
scas
push
cmp
ss
jno
xor
xor
js
mov
add
dec
push
adc
pop
and
push
jmp
imul
cmps
add
xor
les
sbb
cmp
pop
js
and
inc
(bad)
mov
cmp
ja
stos
scas
xor
imul
fldenv
jb
lods
push
rcl
mov
add
xchg
push
fwait
sbb
sub
popf
ja
test
cmp
movs
mov
out
dec
or
paddusb
mov
mov
xchg
fnstcw
cwde
loopne
(bad)
sub
call
xchg
mov
inc
aas
xchg
aaa
pop
ins
jp
sub
sbb
fidivr
int3
add
ror
sub
in
sub
inc
sbb
fidiv
movs
cdq
out
retf
repnz
call
in
fistp
adc
sub
out
int
dec
adc
movs
xchg
(bad)
push
mov
pop
imul
mov
retf
xlat
das
sub
jo
fnstcw
hlt
call
add
mov
cmp
push
or
inc
push
(bad)
mov
mov
test
pop
sub
fist
inc
add
test
outs
inc
dec
stos
mov
js
add
adc
movs
fsubr
loope
icebp
jnp
push
xchg
pop
add
fisubr
loope
xor
stos
and
das
fsubr
fcom
add
fsubr
mov
ins
and
cmps
retf
mov
out
jg
call
jnp
test
adc
fwait
mov
das
push
pop
mov
xchg
mov
or
pop
(bad)
or
add
and
and
div
bswap
mov
scas
add
loop
imul
les
aam
inc
loop
add
jmp
sbb
pop
es
adc
les
inc
aas
add
add
xchg
sbb
mov
jle
pop
out
jno
int3
jno
loopne
cld
inc
xchg
pop
stc
(bad)
jl
sub
xor
jae
lock
mov
and
icebp
inc
jnp
scas
xor
shl
cmp
inc
add
outs
fistp
sti
test
cmps
test
fcom
sub
stc
div
mov
adc
jge
in
pop
mov
stos
addr16
cld
push
push
outs
imul
dec
popf
sbb
aas
jb
retf
daa
mov
leave
jmp
xor
enter
loopne
cs
dec
aas
push
sahf
cmp
jnp
jmp
xor
bound
lds
out
sub
mov
cld
(bad)
push
jecxz
stc
gs
sbb
leave
or
add
movs
dec
rcl
inc
sub
movs
jmp
push
mov
aaa
arpl
sbb
test
clc
cmc
sub
add
ret
in
out
jmp
pop
int3
jecxz
jne
mov
push
popf
mov
pop
lock
(bad)
in
int
inc
or
mov
into
inc
mov
mov
mov
and
out
cmp
inc
add
ret
data16
pop
scas
add
fsubr
ret
jno
xor
ffree
repz
dec
xchg
fld
and
adc
sti
xlat
repz
loope
out
fmul
mov
dec
cwde
jmp
scas
ret
pusha
fmul
sub
(bad)
sub
xor
mov
push
rcr
fnsave
pop
repnz
add
ds
ret
sbb
and
call
mov
and
repnz
ficom
in
and
(bad)
arpl
daa
jl
ss
push
push
xor
test
sbb
mov
pop
mov
and
pop
inc
pop
push
(bad)
push
fstp
sti
xor
pop
and
es
loop
jne
sub
jne
ds
jbe
in
cmc
pusha
xor
mov
sbb
gs
mov
mov
call
daa
test
cmps
outs
loope
(bad)
mov
daa
or
lods
fistp
scas
sub
out
mov
shr
jge
push
retf
sbb
pop
jge
sbb
pop
or
sar
and
enter
dec
xchg
push
cmp
push
lds
cmp
out
and
dec
pop
push
imul
sbb
xchg
out
add
mov
or
out
or
jb
mov
repnz
jnp
test
sysret
popf
enter
mov
jge
add
outs
xchg
adc
mov
lahf
push
iret
in
pop
mov
clc
sbb
xchg
dec
add
jp
ds
push
sbb
pop
xlat
enter
dec
or
jp
and
push
push
imul
int3
outs
and
mov
push
push
adc
add
test
pop
das
fsubr
pop
test
jmp
mov
xor
xlat
jle
outs
jno
jmp
add
and
cmps
cli
sub
loopne
daa
inc
stc
test
dec
sub
inc
push
push
sub
cmp
inc
or
push
mov
daa
add
jmp
jnp
and
iret
(bad)
xchg
and
mov
push
or
inc
dec
out
neg
pop
mov
xchg
jmp
sub
daa
scas
sub
inc
or
call
shl
das
arpl
lahf
cmp
xchg
push
mov
push
icebp
dec
(bad)
push
out
add
push
mov
shr
out
mov
cli
pop
ret
test
adc
popf
sub
js
pop
shl
or
pop
cli
mov
je
scas
and
aas
fadd
mov
push
dec
out
cmps
cmps
not
push
adc
jle
xchg
push
test
fisttp
cmp
dec
pushf
adc
(bad)
mov
out
loop
mov
add
xor
inc
push
mov
ins
sbb
sbb
push
xchg
mov
dec
cmp
ja
jg
scas
popf
imul
scas
inc
or
leave
jmp
icebp
mov
add
jo
retf
test
es
mov
jmp
aad
aaa
or
sti
sub
mov
sub
push
sub
out
pop
fs
or
sbb
jle
mov
sub
gs
(bad)
lea
repz
lods
daa
aad
daa
in
cmc
pop
mov
pop
mov
clc
fsub
test
imul
jge
shl
scas
pop
pop
test
mov
jl
push
pushf
cmp
sbb
mov
mov
cmps
sbb
add
pusha
retf
outs
adc
loope
(bad)
(bad)
xchg
arpl
out
adc
test
jb
and
mov
xchg
xchg
gs
in
mov
ficom
aad
jp
dec
loope
cmp
in
cs
rol
ins
mov
sbb
push
imul
mov
pop
pop
stos
in
sbb
inc
les
sub
idiv
pop
inc
mov
xchg
mov
jnp
mov
fs
and
(bad)
cmp
inc
fnsave
jge
int
push
mov
aam
cmc
push
popa
mov
push
push
cmps
lahf
mov
jno
add
lea
add
cmps
add
and
(bad)
adc
mov
cdq
cmc
aas
mov
retf
push
push
call
pop
push
xchg
sub
pusha
leave
pop
mov
mov
mov
mov
les
pop
push
fstp
ds
clc
mov
out
jnp
or
scas
inc
mov
xor
add
sub
or
iret
add
sub
push
loopne
test
out
lds
mov
sbb
mov
sub
movs
or
popf
add
dec
cdq
push
jg
mov
lds
icebp
add
cmp
pop
xchg
into
pop
mov
(bad)
(bad)
mov
inc
or
in
adc
push
mov
fxch
inc
fist
inc
jnp
sub
mov
inc
std
adc
in
push
daa
stos
std
dec
mov
movs
js
iret
stc
or
(bad)
stos
mov
pop
scas
inc
lods
push
sbb
pop
ror
push
sub
repnz
xor
iret
xchg
dec
dec
iret
daa
dec
sahf
inc
add
loop
add
or
add
cmc
ins
in
or
sub
jp
mov
mov
out
cmc
aad
mov
ds
lds
mov
out
add
and
pop
mov
sahf
imul
xchg
xor
inc
(bad)
cmp
stos
iret
xor
add
and
mov
in
or
cmp
mov
je
and
ja
xchg
outs
cmp
jmp
mov
scas
or
xchg
pop
repnz
push
sub
pop
imul
jb
outs
fwait
adc
xchg
xchg
cmp
in
push
int3
test
jle
mov
pushf
out
imul
push
clc
sbb
cmps
pop
aaa
int
or
test
fstp
mov
cwde
jge
pop
xchg
sub
dec
sti
int3
(bad)
and
call
mov
jae
lods
cmp
sbb
bound
mov
mov
sbb
adc
inc
xor
in
test
sbb
push
ret
out
ret
adc
test
adc
loopne
cmp
jne
sbb
hlt
pop
jmp
mov
scas
xor
xor
mov
and
outs
push
je
sbb
dec
push
pop
xchg
or
push
shl
out
jg
fcomp
(bad)
cli
cdq
repz
cli
es
out
xor
dec
icebp
cs
scas
pop
sub
(bad)
arpl
lods
call
into
cmp
cmp
(bad)
xor
xor
test
xchg
lods
out
les
xchg
scas
and
pop
jo
push
jo
cmc
cmp
adc
pop
xchg
jb
outs
stc
js
aas
movs
jge
out
adc
fsub
push
aaa
call
jno
aam
push
fucom
call
dec
cwde
cdq
mov
fwait
scas
push
stos
sub
ja
adc
scas
add
shl
or
ja
inc
push
and
outs
push
scas
(bad)
cld
int3
xchg
test
jg
pop
or
stos
aam
popa
jbe
add
fcom
mov
mov
hlt
push
nop
sbb
(bad)
and
push
push
pop
mov
xlat
in
fisttp
loop
ds
js
cmp
call
add
mov
call
mov
mov
add
repz
dec
jle
test
call
inc
or
pusha
scas
call
into
imul
dec
sub
sbb
(bad)
popa
test
dec
inc
sub
mov
or
test
push
mov
mov
push
jae
in
das
xchg
push
xchg
ret
xor
js
loop
push
mov
mov
cli
sub
or
or
cmp
aaa
sub
icebp
inc
call
jmp
jb
icebp
sti
cs
test
data16
mov
loop
mov
shl
icebp
(bad)
fsubr
sbb
inc
mov
and
pop
push
and
lock
mov
fiadd
pusha
inc
cmp
mov
fwait
cmps
push
inc
push
repz
add
out
fs
mov
lahf
xlat
lods
or
mov
test
push
aaa
pop
pop
dec
push
jge
(bad)
push
inc
xchg
xlat
add
xor
mov
icebp
push
ror
add
and
outs
sub
das
(bad)
outs
dec
mov
sub
in
iret
push
and
imul
dec
stos
and
jne
jmp
xchg
lods
jno
jno
mov
test
dec
jl
in
outs
xchg
clc
shl
adc
dec
or
cmp
dec
adc
adc
push
dec
pop
mov
popf
sbb
outs
cmp
xchg
test
gs
out
shl
xchg
ss
(bad)
retf
mov
xor
rep
and
jp
dec
outs
mov
ss
cs
push
adc
and
jae
jecxz
in
xchg
call
lods
jl
int3
jmp
fsub
sbb
push
inc
pop
retf
(bad)
dec
test
test
or
xor
jl
mov
xor
outs
mov
adc
xor
(bad)
outs
ds
pop
pop
push
or
out
outs
sub
sbb
push
xchg
bound
sbb
dec
adc
xor
mov
pop
scas
mov
dec
fadd
clc
movs
sar
in
pop
call
ficomp
into
cmp
test
or
xor
das
aam
jmp
push
inc
cmp
adc
inc
(bad)
fcom
mov
jns
mov
and
xchg
xchg
lea
stc
fidiv
fisttp
jnp
jo
jle
out
adc
(bad)
xor
daa
repnz
repnz
fimul
rcl
jge
push
cwde
mov
out
jo
(bad)
aas
loop
ins
jo
jmp
dec
enter
push
js
add
push
push
sub
xor
adc
sub
sahf
cmp
data16
pop
and
xchg
into
inc
mov
xchg
dec
aaa
call
sti
xchg
add
imul
(bad)
or
frstor
xchg
mov
inc
cld
ja
xchg
ds
xchg
cmp
mov
push
dec
jle
cmc
inc
clc
pop
(bad)
aam
mov
sub
jnp
pusha
mov
adc
mov
test
aaa
dec
test
mov
dec
push
cdq
ret
dec
pop
cmps
push
xlat
addr16
jae
sti
std
inc
sbb
fwait
push
les
and
ins
cmp
cmp
jle
sbb
pop
add
pop
loope
cld
ja
in
inc
(bad)
pop
(bad)
push
in
xor
movs
aaa
xchg
test
idiv
xchg
inc
cmp
dec
inc
test
(bad)
push
mov
clc
adc
or
ins
mov
fwait
sbb
jl
nop
lock
cmp
adc
imul
out
pop
imul
arpl
push
push
int
int
in
mov
in
test
mov
lods
adc
test
jne
dec
call
enter
ins
mov
push
scas
fptan
sahf
jne
js
xor
jl
outs
mov
sbb
xchg
sbb
fisttp
dec
pusha
call
es
ins
sub
inc
push
jno
leave
xchg
sub
mov
add
sub
jp
pushf
sbb
or
xor
xchg
dec
sub
sbb
(bad)
stos
(bad)
mov
loope
xchg
dec
sbb
cld
call
or
jmp
sbb
mov
add
jae
adc
fsubr
xor
popf
push
and
inc
js
lock
mov
and
push
xchg
in
pop
jns
les
cmp
adc
and
sbb
inc
dec
fcom
push
icebp
push
sub
mov
dec
test
imul
call
cli
inc
pusha
sar
and
ror
(bad)
jecxz
ss
cmp
pop
sahf
inc
push
jp
je
aam
addr16
sbb
push
jl
pop
mov
imul
push
pop
retf
daa
cmps
scas
popf
sbb
(bad)
inc
push
ins
(bad)
fisubr
mov
pusha
sahf
pushf
mov
sbb
sbb
les
or
hlt
call
sub
sbb
fisttp
out
(bad)
iret
repnz
jmp
fild
pop
mov
push
pop
mov
enter
sub
cmps
dec
mov
aam
push
fstp
add
xchg
mov
arpl
inc
jae
jnp
lahf
or
xor
sbb
xchg
ret
imul
cld
sbb
adc
(bad)
arpl
test
sbb
test
scas
inc
push
or
lahf
mov
aad
cs
inc
and
sbb
cmc
mov
mov
inc
and
aas
stos
cmp
dec
adc
lahf
and
dec
xchg
jmp
dec
out
repnz
daa
xchg
push
loop
xchg
mov
cmp
add
xchg
cmp
mov
inc
mov
jge
or
mov
mov
xchg
movs
or
sub
mov
add
cdq
outs
repz
push
lock
and
ds
int3
mov
pop
scas
mov
test
push
sub
nop
lea
sar
inc
in
enter
push
and
inc
sub
stos
ds
pop
jne
adc
imul
nop
mov
stc
fmul
mov
jb
rol
lahf
mov
dec
out
or
outs
test
pop
lahf
sbb
je
adc
xchg
fiadd
or
or
xchg
or
mov
mov
fdiv
dec
pop
xlat
mov
aas
mov
xchg
(bad)
dec
jmp
push
(bad)
jg
call
xor
adc
dec
adc
loope
scas
and
out
out
mov
mov
sbb
or
shl
idiv
mov
sbb
and
js
mov
shr
cli
cwde
pop
jmp
pop
(bad)
sub
push
stos
mov
scas
ins
(bad)
test
inc
mov
push
mov
push
dec
outs
std
sbb
ficomp
pop
pop
mov
movs
in
fcomp
stos
imul
test
pusha
xchg
inc
lock
cmp
pop
or
jbe
lea
in
cmp
icebp
pop
das
jb
xor
jb
mov
sbb
retf
scas
cld
fsubrp
xchg
int3
movs
out
sub
inc
sub
gs
adc
and
cmp
jl
xor
cmps
adc
mov
das
add
or
ins
icebp
test
lock
stc
adc
loopne
dec
add
jne
jns
loop
in
sbb
xchg
fisub
jnp
das
xchg
mov
retf
aaa
jmp
mov
inc
movs
pop
pop
stos
adc
dec
jne
sub
loop
je
gs
(bad)
xchg
pushf
xchg
inc
test
xor
dec
ins
mov
mov
mov
or
jbe
push
mov
into
mov
cld
lahf
mov
jbe
dec
fdiv
je
sbb
fistp
popf
push
and
fstp
fmul
(bad)
arpl
popf
test
add
and
add
in
in
pop
stc
shl
das
ror
call
jle
jae
fiadd
or
nop
inc
add
cmp
push
sub
or
fwait
in
aaa
pop
dec
pop
jns
inc
sub
push
jbe
icebp
push
pop
jp
push
sbb
pop
dec
and
retf
ret
or
dec
xor
cmp
div
and
loop
jno
mov
call
sbb
pop
push
cmp
xchg
dec
hlt
inc
call
call
pop
pop
pop
stos
push
inc
aam
shl
mov
pop
sub
add
jae
sub
call
sbb
mov
or
lahf
ret
sbb
xchg
sti
fld
add
sub
mov
jg
xor
lock
fs
ret
or
mov
pop
out
std
add
outs
mov
idiv
fadd
ins
mov
push
xor
or
push
(bad)
add
sub
(bad)
and
fdiv
sub
cmp
mov
nop
cld
test
inc
and
das
and
ret
pop
repz
hlt
nop
sub
sub
(bad)
out
jg
pop
retf
mov
(bad)
out
inc
xchg
dec
clc
(bad)
mov
dec
das
xchg
stos
sub
enter
imul
or
or
test
faddp
mov
test
xor
sahf
leave
cmp
sub
daa
mov
pop
fldcw
icebp
mov
add
enter
loope
pop
dec
xchg
jmp
fldenv
sub
into
push
rcr
rcl
(bad)
fnstenv
les
cmp
sbb
mov
jp
das
or
in
imul
xchg
sbb
ror
pop
std
dec
mov
cs
out
test
inc
mov
mov
outs
(bad)
sub
mov
movs
push
daa
adc
mov
xor
inc
(bad)
mov
cli
sti
fidiv
mov
out
dec
ret
add
jp
jns
and
pop
test
add
push
in
call
xchg
rol
call
in
xchg
movs
and
jle
mov
mov
sub
bnd
cmp
gs
fistp
jne
xor
aaa
and
adc
inc
fcom
out
inc
cmp
and
sbb
das
out
(bad)
sbb
mov
les
ins
in
repnz
stos
(bad)
cld
xlat
push
mov
pusha
sahf
sti
sub
xor
inc
int3
and
(bad)
sub
jbe
out
mov
cmp
nop
addr16
dec
ss
(bad)
cld
adc
repz
mov
repz
loopne
push
cmps
test
shr
aad
dec
repnz
lods
stos
dec
adc
outs
cli
nop
sbb
jno
mov
lods
call
fwait
cmp
pop
inc
or
or
mov
loop
mov
call
jae
pop
in
call
jmp
pushf
gs
push
call
les
and
mov
cmps
test
push
push
(bad)
push
mov
and
hlt
mov
adc
imul
inc
gs
dec
pop
lods
xchg
push
inc
jb
pop
stos
aam
adc
mov
in
(bad)
cld
fwait
pushf
sub
retf
sub
mov
sahf
mov
xlat
jp
mov
rcr
pop
das
xor
mov
shr
mov
add
add
shl
std
cld
movs
add
sar
adc
or
hlt
xor
pop
jg
test
xchg
in
aam
jecxz
ja
mov
in
cwde
pop
xor
out
(bad)
pop
lea
das
or
(bad)
outs
sub
sub
fisubr
outs
sar
jp
pop
(bad)
mov
out
fsubr
adc
fmul
xor
pop
cs
inc
push
scas
add
xor
mov
pop
or
xor
call
out
sbb
ret
and
arpl
mov
dec
push
and
add
pop
movs
out
xor
jnp
mov
shl
cli
ins
inc
push
push
gs
cmp
aam
dec
clc
in
lock
jmp
mov
mov
nop
imul
lea
mov
iret
jo
or
or
mov
out
fwait
cmp
std
or
test
add
mov
or
or
push
movs
sti
xchg
ins
pop
(bad)
fadd
adc
jle
enter
adc
mov
xor
out
jle
mov
int
aas
or
xchg
jb
lods
pop
xor
mov
xchg
(bad)
cli
inc
dec
rol
jmp
loopne
xlat
push
add
aas
das
out
add
test
dec
push
cmps
(bad)
inc
clc
jmp
neg
mov
sub
mov
outs
dec
or
imul
daa
pop
xchg
(bad)
icebp
stc
and
mov
and
or
inc
hlt
stos
imul
cdq
nop
imul
sti
test
out
xor
sub
stc
(bad)
pop
xor
push
sbb
arpl
jp
jnp
xor
dec
jb
out
scas
push
xchg
push
popf
add
fmul
in
fldcw
mov
and
test
into
setle
jp
out
adc
les
xor
push
or
out
cmc
mov
pop
in
out
inc
cs
aas
mov
xchg
imul
les
stc
test
jmp
call
jns
daa
and
dec
or
mul
push
adc
mov
or
mov
and
jge
sbb
adc
aas
out
jnp
aam
stos
sbb
jnp
aas
jbe
stc
sub
adc
movs
dec
(bad)
shr
push
dec
mov
cmp
enter
mov
enter
jp
sbb
cmp
mov
mov
xchg
push
sbb
lea
mov
cmp
push
cwde
xor
add
jo
lahf
dec
ins
jne
sub
ds
cmp
movs
mov
inc
(bad)
(bad)
fild
cmps
adc
outs
xchg
retf
cmp
in
aam
mov
or
mov
cmps
(bad)
lahf
rcl
or
xor
inc
mov
outs
mov
fimul
inc
xor
mov
in
iret
sub
or
sub
(bad)
les
movs
mov
xor
ins
and
out
addr16
popf
inc
mov
sub
imul
xor
loopne
dec
test
jae
int
out
adc
mov
and
sub
(bad)
and
enter
push
mov
push
int
test
jae
push
neg
jp
mov
loop
dec
cmc
das
pop
and
inc
sbb
imul
dec
bound
cli
and
enter
or
imul
adc
stc
cmp
pop
scas
pusha
mov
shl
pop
pop
dec
and
xchg
mov
mov
aad
scas
call
jmp
push
(bad)
rsm
or
jp
mov
adc
xchg
ror
icebp
test
or
repz
aaa
push
mov
int
xchg
sbb
mov
(bad)
scas
stc
xchg
ins
(bad)
pushf
mov
dec
jg
(bad)
ja
out
or
adc
mov
clc
mov
fld
xchg
sub
sbb
xchg
out
pop
mov
dec
xor
jne
mov
lea
sbb
nop
daa
cmp
inc
xchg
ret
push
adc
cld
iret
loop
imul
in
dec
push
dec
jo
(bad)
test
pop
jno
lock
lods
mov
xchg
stos
and
out
cmp
pop
stos
hlt
mov
(bad)
rcl
inc
mov
dec
dec
and
sub
ja
mov
or
inc
cwde
into
add
and
cmps
stos
mov
rcl
mov
lss
and
xchg
mov
shl
jo
test
xor
and
jecxz
les
ins
add
xchg
(bad)
jmp
ss
add
fdiv
ret
xchg
dec
inc
xchg
inc
shr
jb
out
psllw
loop
or
pop
ret
enter
add
aaa
mov
and
out
jnp
movs
aad
add
pop
pop
sbb
push
out
jo
add
xchg
std
cmp
arpl
div
xchg
adc
add
lods
test
loopne
scas
jp
call
stc
leave
mov
int
mov
cld
ins
cmc
mov
movs
pop
ins
and
dec
jg
jmp
adc
inc
or
add
add
in
pop
push
push
pop
xor
jb
retf
mov
sbb
mov
pop
fstp
mov
out
or
retf
xchg
and
popf
test
hlt
dec
scas
outs
pop
and
pop
add
hlt
mov
add
push
arpl
inc
xchg
mov
in
mov
cmps
lahf
inc
int3
push
dec
or
cmp
pop
xchg
fnsave
xlat
sbb
sbb
fwait
jne
pop
inc
into
push
lods
pushf
repz
push
cmp
and
push
cmp
mov
fadd
push
cmp
mov
xchg
int
xlat
jmp
jo
mov
into
cmp
js
ja
(bad)
mov
jmp
jns
test
jl
and
sbb
fstp
mov
inc
jmp
shl
sbb
idiv
aad
xchg
inc
stos
(bad)
cmp
mov
(bad)
push
xor
out
out
nop
arpl
sub
xchg
adc
into
xor
arpl
pop
das
dec
outs
adc
rcr
mov
outs
fbstp
xchg
ins
mov
in
cmp
call
out
(bad)
sahf
pop
sar
enter
sub
sbb
clc
xor
sti
push
cmps
fs
cmp
(bad)
bound
cmp
xor
lods
nop
loope
xor
aad
mov
jae
ja
push
rcr
mul
icebp
lea
mov
sub
cmc
repz
sub
sbb
(bad)
mov
loope
nop
out
sbb
fwait
jl
jge
retf
adc
ret
pop
jge
jmp
mov
mov
sbb
xchg
mov
scas
jns
lods
cs
mov
daa
xor
(bad)
popf
xor
or
aaa
pop
xchg
jge
push
push
jmp
test
dec
fwait
jno
jmp
inc
aam
rol
aam
mov
or
loope
clc
test
(bad)
lods
add
mov
in
rcr
dec
mov
out
jecxz
mov
stc
jno
mov
adc
sahf
add
xchg
sbb
jae
retf
sub
iret
shl
fdivr
mov
mov
int
outs
cmp
cmp
les
mov
movs
xchg
xor
jno
add
and
and
xor
(bad)
adc
dec
cmp
xchg
push
std
adc
xchg
xor
aas
mov
cmp
(bad)
ffreep
sbb
xchg
popf
hlt
push
sub
sub
das
xchg
inc
jne
mov
ins
ror
pop
mov
pop
cmps
and
cmp
cmp
in
ss
dec
imul
cmps
and
sbb
mov
dec
jecxz
out
add
ins
popf
lds
dec
pop
scas
sub
pushf
loope
out
rol
dec
or
mov
lods
daa
cmps
xor
xchg
mov
push
test
or
retf
cwde
xchg
push
retf
xor
int3
dec
push
lods
lods
jge
mov
mov
fisttp
sbb
test
sbb
add
mov
mov
xor
mov
rcl
fdivp
jae
inc
jl
jno
cmc
imul
shl
fs
xchg
inc
sub
or
fstp
xor
mov
pop
push
fidiv
dec
mov
mov
pop
inc
jge
or
push
lods
push
pop
mov
dec
ins
mov
lods
imul
hlt
test
(bad)
lds
mov
push
adc
fld
in
and
mov
dec
sbb
in
adc
lds
jle
xchg
inc
xlat
xor
jmp
add
(bad)
ror
and
jno
add
dec
xchg
js
retf
shl
mov
cmp
scas
rol
ret
int3
popf
mov
movs
xor
pop
dec
(bad)
ins
jg
add
and
shl
ficomp
mov
cli
in
dec
ret
mov
inc
push
push
scas
adc
stos
sub
ja
xchg
inc
fist
sub
adc
pop
lea
call
cs
ret
test
ss
fst
jno
push
loopne
mov
daa
lea
xor
clc
dec
or
and
adc
xchg
into
push
mov
mov
call
mov
jecxz
daa
cmp
mov
ja
and
add
cmps
imul
sub
jns
stc
lea
movs
sbb
(bad)
iret
fs
sahf
or
or
push
shr
sbb
xlat
movs
rcr
push
arpl
jp
add
dec
aad
aaa
cdq
in
jns
add
add
call
inc
call
add
add
in
xchg
ror
and
test
xor
mov
clc
fldenv
adc
in
jno
jmp
ja
cwde
dec
outs
jge
(bad)
pushf
mov
ja
popa
xchg
and
mov
out
push
xchg
mov
adc
inc
and
pushf
dec
mov
pop
scas
loop
adc
outs
dec
retf
fdivp
fucomp
push
push
out
loop
mov
jl
in
adc
mov
xchg
jnp
popf
mov
aaa
or
ins
outs
adc
sbb
sbb
retf
or
sbb
mov
sahf
bound
cwde
and
mov
sti
(bad)
es
cld
cmp
imul
xor
fsub
out
retf
aad
pop
popa
test
ins
dec
mov
mov
popf
clc
(bad)
into
int
lds
pop
shr
pusha
std
sbb
pop
xchg
clc
test
cmp
iret
jae
cmp
mov
aad
mov
mov
dec
int
adc
movs
mov
aaa
es
test
out
scas
and
test
imul
std
pop
nop
and
arpl
loop
sbb
sub
sub
mov
cmp
or
(bad)
jmp
hlt
test
call
mov
sbb
(bad)
bnd
xchg
cmp
aad
cld
aam
popf
shl
xchg
retf
push
xchg
mov
mov
dec
rcr
jno
xchg
in
xor
dec
dec
and
add
dec
into
xchg
jbe
cmp
or
icebp
loope
add
and
mov
int3
xchg
push
xchg
xor
lods
out
xchg
jb
push
retf
mov
cmps
mov
cli
pop
(bad)
jle
mov
fiadd
sub
scas
fist
dec
lahf
xchg
pusha
jp
lock
inc
not
retf
pop
inc
fnstsw
jg
lea
sbb
jmp
and
xchg
cli
jo
push
xchg
mov
ret
xchg
fisubr
aas
je
shl
sub
and
xchg
outs
push
sbb
cmp
(bad)
xchg
inc
pop
outs
call
xor
xor
movs
inc
jecxz
push
repz
ror
cs
std
and
aad
psubw
ficom
or
mov
dec
pop
dec
cdq
addr16
pop
mov
pop
fwait
sub
push
ds
pop
xchg
movs
in
jecxz
test
jae
jle
mov
jbe
stc
mov
push
jo
mov
xor
pop
sbb
fisttp
mov
call
push
jl
nop
jne
push
xchg
lods
rcr
xor
sbb
mov
call
push
outs
scas
xchg
sub
mov
lock
pop
inc
pop
pushf
xor
cdq
int3
mov
pop
sub
movs
or
jno
sub
and
or
out
into
mov
(bad)
dec
dec
adc
aam
aas
mov
pop
(bad)
pop
mov
mov
fnstsw
call
mov
inc
adc
pusha
sbb
mov
imul
dec
rcr
gs
ja
addr16
je
add
push
xor
call
sub
fs
xor
push
fmul
jne
mov
jns
(bad)
xor
out
push
cmp
popa
aaa
mov
inc
cld
popa
rcr
pop
inc
adc
mov
ds
leave
dec
push
aaa
mov
sbb
sbb
sbb
es
andnps
pop
jae
test
loop
jo
and
jo
dec
leave
(bad)
xchg
dec
pusha
cli
ud2
xchg
test
ins
jmp
test
sub
loope
xor
(bad)
fwait
dec
(bad)
jmp
jno
push
push
adc
xor
pop
sub
jmp
pop
test
push
stc
lahf
mov
mov
test
fidiv
(bad)
(bad)
xchg
dec
inc
and
inc
aas
repz
(bad)
jnp
mov
cmc
mov
cmc
fbstp
sub
data16
dec
cmps
das
xor
aam
lods
sub
sub
lea
xchg
sbb
inc
jg
jne
push
mov
pusha
scas
mov
ss
shl
dec
ror
loop
aad
sub
dec
mov
push
xor
aad
dec
push
push
cmp
dec
mov
rcr
mov
dec
icebp
pop
mov
jnp
loopne
imul
fnsave
cmp
inc
or
push
gs
pop
lods
jo
call
mov
fisub
lods
(bad)
pop
sbb
into
out
cmp
push
and
xchg
jmp
popf
mov
mov
loop
imul
popa
mov
jns
lods
(bad)
jecxz
xor
fs
xlat
xlat
push
pop
icebp
sbb
shr
pop
jecxz
sub
(bad)
movs
add
pop
cwde
repz
lea
cmp
dec
push
mov
movs
sbb
lds
jne
je
mov
adc
sbb
daa
xor
push
out
xchg
xor
ret
sbb
and
je
xor
mov
pusha
out
dec
outs
mov
(bad)
fiadd
mov
iret
movs
mov
jmp
gs
jle
fwait
ins
cmp
ins
and
add
ret
sub
mov
movs
retf
sar
jecxz
ins
int
dec
dec
aas
fldenv
pop
mov
gs
jg
enter
bound
rcl
pop
push
inc
test
cmps
imul
arpl
div
adc
mov
test
dec
mov
mov
pop
jb
pop
and
cmp
ins
pop
in
pop
fnstsw
push
int
mov
mov
mov
lock
popf
pop
mov
in
test
inc
jae
mov
imul
jne
ss
cmp
out
adc
jb
cwde
repz
outs
stc
std
mov
(bad)
loopne
and
and
xchg
add
in
fstp
loope
aam
dec
push
or
or
pop
out
sbb
jecxz
rol
cmp
test
daa
sbb
imul
aad
adc
(bad)
sbb
shl
(bad)
int
fsubr
or
test
sub
dec
mov
xor
aam
fcmovb
push
into
iret
out
arpl
xchg
pop
lahf
out
aas
std
pop
mul
imul
xor
and
jl
nop
bound
shr
out
mov
mov
ret
mov
shr
je
inc
push
mov
int
test
cdq
mov
mov
dec
hlt
rcr
mov
enter
clc
out
je
jbe
clc
pop
dec
idiv
enter
mov
(bad)
mov
pop
sbb
and
ss
pop
sbb
into
out
push
leave
shl
adc
mov
imul
fst
cmp
jo
not
xor
dec
fs
hlt
adc
cdq
test
(bad)
cmp
add
cmp
inc
pop
or
push
add
push
inc
and
xchg
dec
mov
and
sub
addr16
adc
int3
dec
sub
imul
dec
cmp
mov
ins
and
pop
mov
mov
ds
mov
inc
iret
call
pop
inc
mov
dec
in
push
mov
xor
jo
fistp
mov
mov
push
out
xchg
and
ud0
arpl
leave
pop
cmc
cmps
mov
aaa
pushf
pushf
dec
and
mov
(bad)
lds
mov
test
push
jp
and
ret
idiv
push
scas
xchg
and
xor
sbb
aad
pop
mov
xor
mov
inc
out
aam
pop
ja
and
out
mov
add
mov
sub
xchg
xor
mov
sbb
push
imul
les
mov
jmp
sbb
es
popf
outs
shl
sbb
push
push
(bad)
sub
mov
sub
ja
sbb
jo
outs
xor
fstp
pop
shr
inc
inc
ret
push
test
shl
test
inc
(bad)
mov
ds
lds
mov
inc
adc
aas
inc
aas
outs
sub
daa
push
xor
outs
xor
loopne
xchg
js
popf
pop
scas
ret
in
enter
dec
add
prefetch
jmp
mov
mov
lods
mov
cwde
aad
xchg
(bad)
mov
rcl
cld
jb
mov
inc
sub
stos
test
push
imul
xchg
xor
mov
icebp
shl
int
jb
adc
pop
mov
in
pop
mov
iret
xchg
fwait
out
jmp
cld
ins
sar
or
sub
mov
test
mov
into
in
ret
cmp
pop
xchg
sar
rol
xchg
xor
aaa
mov
cmps
pop
cs
jmp
(bad)
cmp
mov
retf
aaa
ds
sbb
dec
pushf
jno
mov
(bad)
mov
adc
jge
std
or
inc
cmc
mov
into
sbb
nop
popf
mov
scas
add
push
push
stos
nop
call
dec
pop
or
lds
in
int3
mov
leave
pop
in
mov
rol
inc
outs
repz
mov
iret
push
in
push
mov
scas
xor
jmp
rcr
push
cmp
sub
aad
adc
repnz
cmp
cmp
xor
push
ficom
add
daa
loope
mov
mov
cmp
or
push
add
inc
dec
ret
imul
inc
fwait
call
movs
jbe
push
fs
mov
or
das
dec
or
pop
rcr
test
sbb
add
shl
popa
jg
repnz
sbb
adc
loope
ins
mov
push
shr
mov
adc
stos
adc
adc
jbe
sbb
mov
pusha
and
dec
fcomp
int3
xchg
(bad)
scas
pop
add
test
(bad)
push
lea
pusha
int3
cdq
aaa
mov
out
test
sbb
iret
les
or
cmp
jbe
cmp
sub
jbe
pop
dec
fs
pop
hlt
mov
add
xor
cmp
jmp
cwde
in
aam
xor
jns
(bad)
scas
sbb
jmp
xlat
aas
jno
aas
add
cmp
adc
xchg
adc
mov
sub
sbb
xchg
fs
into
scas
aaa
in
push
jg
xchg
inc
push
sub
mov
mov
(bad)
cli
mov
push
mov
fistp
jmp
push
pushaw
mov
arpl
cmp
xlat
inc
lds
lahf
cmc
xor
and
xor
xchg
cmp
push
xchg
jmp
sti
cmp
jbe
or
les
lea
xchg
pop
xor
imul
scas
rol
jo
dec
and
and
sub
add
and
addr16
pop
sub
test
jnp
sbb
fistp
mov
or
std
bound
xchg
retf
xchg
repnz
or
nop
push
bound
imul
push
(bad)
in
mov
mov
push
mov
nop
pusha
addr16
in
dec
xor
cmp
jbe
div
sti
sahf
mov
(bad)
adc
mov
test
stc
cmp
push
aaa
int3
dec
pop
cdq
and
adc
mov
jne
test
ret
xor
mov
mov
xchg
mov
jmp
into
jo
js
adc
das
aas
ret
push
dec
cmps
jne
adc
test
mov
jb
ins
test
ins
lahf
add
push
ds
div
std
push
jmp
leave
jl
cmp
pushf
mov
lods
or
lea
lahf
mov
jbe
ins
aam
popf
dec
test
cmp
cmp
mov
cld
mov
dec
aaa
iret
inc
jno
jo
mov
fistp
cmp
int
into
add
popf
xchg
jns
cmp
in
les
pop
sub
fdivr
lods
push
rcl
(bad)
adc
dec
xor
je
mov
or
sbb
inc
ja
and
mov
cmps
(bad)
add
dec
mov
xrelease
fadd
cmps
jle
out
test
jo
adc
add
stos
pop
cmp
stos
std
dec
dec
dec
sbb
mov
fild
mov
xor
xchg
xchg
fsubp
fxch
cmp
sub
dec
jno
cmp
mov
xor
clc
add
jnp
push
dec
or
add
jo
mov
lods
pop
cmp
cli
push
out
sub
dec
mov
and
inc
sub
or
test
cli
add
push
mov
ret
retf
shl
dec
jecxz
mov
jnp
dec
and
scas
in
dec
xor
popf
cwde
add
fstp
fisttp
push
mov
mov
test
lock
fs
into
mov
ret
cli
xchg
fld
das
jg
xchg
loope
dec
(bad)
mov
(bad)
fwait
mov
and
out
inc
lods
xadd
mov
jns
clc
cs
cmp
test
jp
enter
imul
dec
ins
cwde
arpl
into
imul
loopne
jbe
in
fadd
in
rol
dec
call
xchg
cli
test
sub
adc
leave
jae
(bad)
adc
cmps
fcom
imul
(bad)
mov
and
movs
neg
out
and
fistp
mov
add
xor
mov
sbb
hlt
lods
loopne
xchg
pop
mov
xchg
fidivr
pop
mov
mov
loopne
dec
cmp
push
mov
mov
dec
sub
mov
add
pop
inc
jmp
retf
mov
fwait
mov
sub
icebp
dec
nop
pop
push
push
sbb
adc
fnstcw
stos
cmp
mov
dec
push
or
es
mov
jbe
pop
push
mov
js
out
ins
ja
mov
push
or
jae
movs
cmps
xchg
pop
sub
aas
(bad)
aaa
daa
scas
loopne
mov
dec
call
push
sub
mov
mov
dec
inc
mov
mov
jmp
stos
(bad)
gs
and
xchg
pop
call
aam
jge
vpackssdw
mov
dec
das
jnp
and
sar
xor
push
cmp
stc
inc
ja
inc
cmps
sub
ins
es
add
adc
fs
and
das
int3
cmp
clc
in
jmp
or
scas
repz
lods
dec
sbb
inc
adc
push
push
fwait
arpl
adc
xor
sti
mov
hlt
imul
sbb
movs
ret
sub
pusha
sbb
dec
test
jmp
nop
ins
cmp
test
sub
lds
pop
sbb
fld
outs
jmp
dec
add
jno
aas
mov
inc
sbb
(bad)
repnz
lock
loopne
cs
pop
jns
cs
mov
inc
sahf
jmp
bound
push
mov
mov
and
cs
sub
or
aaa
dec
repnz
sbb
dec
pusha
inc
add
xchg
cmp
das
xchg
or
stc
or
pop
xchg
adc
retf
mov
mov
pusha
push
jo
les
pop
(bad)
ja
add
xor
inc
xor
sbb
jp
or
dec
je
adc
and
loope
xchg
fwait
mov
repnz
repnz
dec
jns
ins
pop
xor
mov
fnstsw
push
add
pushf
dec
cmp
es
out
jl
in
sub
mov
pop
mov
call
out
xor
cmc
xlat
push
or
(bad)
(bad)
std
xor
imul
int3
push
mov
adc
cmp
or
ins
(bad)
pusha
inc
stc
into
xchg
nop
push
addr16
sub
or
scas
lds
and
push
ret
add
or
sub
xor
inc
xor
test
mov
xor
ds
das
or
mov
push
inc
out
js
or
and
out
lahf
outs
push
mov
mov
push
xchg
loope
cmps
mov
mov
xor
int3
in
icebp
pop
mov
cli
dec
pop
xor
jmp
mov
jmp
push
push
xchg
pop
push
retf
push
(bad)
xchg
pop
aaa
mov
in
out
add
shr
shr
pop
mov
loopne
or
stc
in
in
pop
frstor
cdq
enter
jle
out
or
and
jb
mov
pop
lahf
jp
cmp
mov
cmp
jo
jp
add
inc
inc
jecxz
pop
pusha
jmp
jns
add
xor
add
(bad)
fnsave
jmp
add
push
ins
sub
aad
jae
push
int
cld
in
jge
or
cmp
leave
ret
inc
pop
xor
(bad)
in
mov
jno
pop
imul
test
pop
xchg
repnz
call
adc
mov
inc
dec
ret
loope
pop
xchg
iret
add
test
jbe
rol
or
dec
mov
and
push
xchg
mov
mov
movs
les
mov
sub
ins
cli
inc
enter
leave
fistp
mov
imul
lahf
je
lods
xor
fs
lock
cmp
sbb
xlat
adc
or
pop
sbb
not
scas
icebp
movs
inc
pop
jle
sub
xchg
inc
or
into
push
pop
mov
js
sub
and
push
adc
push
mov
sub
outs
xor
sub
xchg
xchg
cmc
xor
popf
mov
push
and
xchg
les
adc
sahf
cmp
repnz
or
push
push
xchg
retf
add
push
sahf
data16
mov
in
shr
call
mov
clc
fadd
pop
xchg
outs
sbb
fadd
call
sbb
leave
cwde
xor
bnd
dec
sbb
mov
jbe
repz
int3
ss
pop
cmp
mov
mov
sub
sbb
adc
mov
inc
aad
jno
mov
outs
dec
int
(bad)
popa
mov
sbb
scas
scas
js
xor
out
xchg
movs
add
sbb
(bad)
cmp
mov
lock
mov
push
mov
adc
cmp
lods
adc
mov
inc
pop
jmp
xlat
imul
pop
mov
jecxz
imul
or
cmps
or
test
mov
xor
cmps
mov
inc
imul
mov
in
stos
cmp
test
sub
popa
shr
adc
fld
sete
jg
repz
and
xor
clc
mov
scas
mov
pop
mov
lds
ins
push
xchg
xchg
daa
rcl
cmc
cdq
ret
adc
adc
cmps
out
ret
push
add
aas
sub
(bad)
push
sbb
adc
adc
push
jle
mov
ja
shr
inc
js
xchg
fbld
add
pop
jb
mov
fist
push
xchg
daa
outs
and
push
fldcw
inc
in
dec
pop
xor
jno
ja
add
jecxz
or
clc
push
add
out
mov
ret
pop
xchg
in
mov
ja
mov
popf
and
and
mov
add
cmp
adc
or
outs
dec
lods
xchg
adc
xor
stos
(bad)
sbb
pop
and
and
jmp
lods
shr
fs
jo
std
fdivr
int
imul
sbb
mov
mov
ret
push
push
outs
ret
shl
sbb
cmc
dec
push
lahf
gs
xchg
addr16
imul
in
dec
sub
mov
mov
sub
add
jg
adc
test
lock
js
mov
lds
mov
mov
ja
and
adc
or
xor
scas
fwait
jmp
xchg
call
push
cmps
out
bound
xchg
dec
icebp
jae
je
cmp
(bad)
mov
push
pop
(bad)
cmp
cld
pop
int
fadd
addr16
xor
outs
mov
call
and
retf
(bad)
xor
mov
mov
mov
(bad)
adc
xchg
cld
sub
mov
xchg
or
ds
hlt
push
mov
cmc
or
jb
jae
adc
(bad)
push
enter
jmp
idiv
popa
add
or
int
mov
inc
mov
mov
inc
dec
push
mov
jnp
addr16
(bad)
retf
sysenter
push
(bad)
mov
fwait
loop
xor
ja
outs
mov
repz
mov
int
or
inc
mov
ja
mov
in
test
mov
inc
jnp
lahf
pop
retf
or
icebp
dec
retf
les
pop
ja
cdq
add
xchg
data16
jg
jle
loope
das
fstp
jmp
fcomi
hlt
add
sub
mov
stos
xchg
mov
inc
retf
xchg
push
dec
inc
or
(bad)
(bad)
lahf
or
mov
in
pushf
mov
adc
data16
(bad)
xchg
pop
aas
cmp
push
mov
jmp
addr16
test
fistp
xchg
push
and
jecxz
push
test
jns
ret
jno
ins
(bad)
aaa
sbb
mov
mov
jmp
cwde
xchg
pop
js
or
sbb
xor
sbb
call
stc
fwait
call
add
xchg
(bad)
mov
inc
ror
sub
test
fcmovu
and
jno
and
push
fwait
xchg
xor
jg
inc
mov
mov
jmp
or
pinsrw
jae
and
and
pop
ror
aas
and
ror
je
add
cmp
adc
lods
jno
nop
mov
dec
test
jmp
adc
clc
inc
das
mov
in
jb
jmp
fcomp
repz
je
std
push
jg
or
shr
mov
adc
addr16
in
cdq
arpl
repz
dec
inc
xor
mov
cmp
or
dec
fbstp
in
mov
(bad)
xor
pop
or
sbb
imul
adc
sub
repnz
retf
lea
and
pop
push
aam
fdiv
out
not
fwait
out
mov
cmp
xor
add
mov
mov
xor
inc
cmp
xor
pop
add
out
shl
loop
sbb
fsubr
cld
dec
push
or
adc
add
les
test
sahf
mov
fsub
(bad)
dec
addr16
xchg
jno
xchg
ret
pop
int
nop
sub
retf
ss
or
push
mov
(bad)
pop
test
cmp
push
fsubr
cmp
lds
mov
xor
jge
add
sti
call
aas
pop
push
sti
push
push
push
loopne
jns
loop
dec
dec
push
cmps
cld
ss
addr16
xchg
icebp
vcvtpd2dq
inc
adc
or
ror
int
and
mov
inc
mov
jbe
popa
aad
adc
popa
mov
xchg
cmp
je
cmps
sub
or
mov
add
pop
mov
push
or
push
mov
sub
sti
adc
out
ds
mov
sbb
popa
sbb
pop
lods
push
mov
call
xor
inc
xchg
cmp
and
xchg
add
cmp
sbb
lds
test
scas
adc
les
sub
fnstcw
(bad)
aaa
icebp
(bad)
push
cmps
stos
pop
cli
loop
sub
aas
loopne
pop
pop
cmps
rdpmc
jmp
push
rcr
push
jg
mov
into
outs
mov
call
mov
inc
adc
sbb
aaa
outs
or
sahf
fwait
loopne
test
out
shr
pop
out
cli
xor
aaa
push
addr16
push
loopne
sbb
sub
daa
sbb
outs
out
sahf
jno
jecxz
imul
push
jns
leave
jge
jg
or
fistp
clc
ins
sub
pop
inc
shl
sbb
push
movs
mov
sbb
daa
add
cmp
cmps
lods
or
add
mov
scas
test
sbb
inc
mov
xor
xor
sub
mov
dec
pop
in
pop
loopne
enter
out
and
scas
cmps
push
leave
(bad)
jmp
loopne
mov
(bad)
cmp
in
pop
retf
push
bts
and
xor
mov
nop
adc
push
test
or
popf
mov
pusha
fs
jmp
sub
and
aas
mov
je
mov
in
(bad)
call
ds
imul
cdq
es
or
js
loope
or
pop
adc
push
mov
push
push
dec
push
and
fcom
push
xlat
(bad)
imul
test
sub
cmps
cmp
xchg
mov
jge
pop
pop
mov
mov
nop
(bad)
mov
jl
mov
xlat
cmp
mov
rol
and
sbb
jmp
sbb
leave
daa
mov
mov
mov
test
and
push
mov
stos
mov
adc
into
jns
es
push
sbb
mov
repnz
pop
cdq
fwait
mov
and
pop
mov
cmp
in
dec
std
dec
outs
scas
mov
test
xchg
sub
xor
movs
pop
je
or
fs
sub
and
mov
adc
lock
mov
xchg
jae
and
fstp
int3
inc
lahf
add
shr
cmps
mov
call
out
(bad)
mov
repz
dec
mov
cmps
cmp
mov
mov
sti
sub
out
push
sub
adc
out
cwde
xor
push
inc
dec
xor
xchg
shl
and
rcl
repnz
xor
pop
sub
ss
ins
sub
outs
dec
xchg
sbb
inc
cmp
retf
(bad)
es
jmp
sbb
xchg
inc
mov
adc
cmp
nop
jnp
mov
dec
lahf
outs
mov
repz
adc
xchg
inc
jns
add
jno
inc
cmp
jge
adc
mov
sub
push
cli
into
dec
inc
add
sbb
rcr
jp
sbb
xchg
xchg
cmp
lds
xor
jge
lds
test
jmp
pop
je
mov
inc
imul
jg
mov
call
les
aam
and
jmp
jnp
call
lods
(bad)
rcr
ficomp
clc
ins
push
ret
xchg
push
call
(bad)
ja
adc
pop
sub
mov
mov
jns
inc
jg
mov
jge
xor
(bad)
sar
ret
jp
mov
mov
into
loope
lea
dec
sub
cmp
nop
popa
iret
pop
push
push
xlat
jbe
sbb
jne
pop
cmps
jns
cmp
sub
aaa
jg
add
idiv
aam
push
fld
pop
mov
popf
jle
xchg
push
pop
in
fcos
(bad)
mov
ficomp
add
lods
mov
iret
loope
fisub
or
mov
xchg
scas
leave
pop
mov
xchg
or
or
sti
mov
arpl
fisub
xchg
loope
daa
jae
test
mov
or
mov
push
adc
add
icebp
sub
adc
leave
push
addr16
xchg
sbb
mov
mov
mov
xchg
bndldx
out
mov
pop
fild
or
push
stos
jo
not
mov
cwde
jbe
mov
ins
mov
pop
mov
imul
xor
imul
fld
sub
sti
and
out
cld
std
adc
shl
imul
fsubr
push
ja
xlat
xchg
loopne
xor
rol
and
ins
dec
mov
repz
ror
in
outs
inc
inc
cmps
fimul
jae
pusha
and
movs
sahf
push
jno
cmps
jmp
pop
jge
sub
xchg
and
and
cmp
imul
jp
sbb
cmp
fisub
inc
cmp
shl
sub
or
scas
xchg
imul
daa
out
cmp
jb
cmp
xchg
fisubr
stos
inc
(bad)
xor
aaa
jmp
sbb
stos
enter
push
mov
movs
out
imul
fdiv
jno
cli
adc
adc
add
retf
cmps
(bad)
aam
rcr
ret
cli
addr16
cmp
xor
add
jbe
pop
cmp
rol
shl
lahf
adc
mov
or
sub
fmul
shr
dec
adc
or
outs
and
mov
imul
sub
das
addr16
call
sahf
dec
dec
pop
push
inc
shl
pop
pop
xchg
ds
aas
mov
adc
ins
inc
fst
adc
xor
lods
cdq
mov
mov
test
adc
popf
test
mov
xor
xlat
dec
push
xchg
dec
int3
ror
out
push
push
xchg
xchg
stos
adc
pop
movs
cmp
dec
rcr
aas
retf
jmp
jb
mov
call
pop
aam
add
rcl
fcmovnbe
mov
adc
jno
push
popa
mov
mov
mov
sbb
pop
shr
sbb
pop
ins
pushf
(bad)
ss
xchg
fmul
mov
(bad)
cdq
cmp
fs
std
loope
(bad)
ret
pop
xchg
xchg
mov
pop
push
fst
fmul
inc
sar
arpl
or
xchg
fidiv
mov
adc
ss
ja
ret
mov
push
outs
imul
clc
fwait
pop
cmc
fdivr
lods
xchg
and
push
or
fild
cmp
ins
and
push
pop
push
fdiv
cmp
xor
xchg
add
rol
jne
(bad)
rcr
out
add
jo
and
(bad)
fcmovbe
mov
les
popa
sub
sbb
iret
gs
test
stos
xchg
test
int3
jns
lods
dec
repnz
add
test
mov
shl
dec
jb
xchg
fidivr
add
jae
int3
and
loope
push
fcomp
xchg
stc
cdq
push
mov
hlt
ds
ror
push
xor
sub
test
push
ds
xchg
cdq
test
(bad)
in
sub
sub
pushf
arpl
add
lods
fdiv
test
loop
aam
adc
out
dec
mov
es
add
enter
dec
pop
bnd
cmp
cli
sub
clc
mov
cli
add
loope
xchg
(bad)
sub
gs
rcl
push
stc
sub
call
stos
retf
daa
jge
xchg
cmps
aas
or
ret
jbe
xchg
sbb
test
jp
jmp
mov
mov
mov
inc
push
retf
sub
je
xor
or
cli
jnp
mov
push
inc
(bad)
push
jno
or
jno
retf
ins
jle
mov
cs
stc
out
xor
fbld
out
(bad)
clc
(bad)
sbb
pop
and
daa
add
jle
pop
loope
ret
clc
outs
ins
scas
mov
mov
mov
pop
jmp
jmp
shr
mov
icebp
push
daa
aad
and
pop
and
loopne
(bad)
loop
fnsave
mov
(bad)
xor
xlat
int
cmps
es
inc
pop
jno
cmc
shr
inc
inc
xor
push
das
rcl
ds
nop
out
ins
aad
cmp
push
shr
jnp
push
(bad)
stc
fsubr
jae
mov
jbe
sub
or
inc
mov
shr
pusha
pop
adc
gs
lods
jo
push
icebp
add
or
sub
adc
jo
pop
cmc
pop
pop
mov
mov
adc
jmp
in
pop
fabs
int
stos
sahf
ret
or
push
jmp
dec
cmps
test
out
out
(bad)
sbb
shl
cmp
mov
in
and
inc
cmc
push
adc
push
jns
or
xor
loop
or
fninit
mov
and
mov
stc
sub
jl
cli
lea
leave
aaa
inc
rcl
mov
jne
out
rep
dec
mov
mov
popf
or
test
out
xchg
sbb
jmp
adc
mul
enter
or
fild
nop
das
mov
into
sub
ins
xor
xchg
pop
sub
cmp
fwait
jb
mov
mov
bound
add
add
dec
pop
retf
pusha
bound
sub
xor
test
xchg
aaa
test
jmp
adc
cmp
cmp
fs
xor
(bad)
aas
inc
pop
idiv
xor
dec
add
fs
call
inc
ret
(bad)
pop
mov
dec
call
(bad)
shl
out
mov
(bad)
adc
mov
jmp
mov
mov
retf
stos
inc
sbb
rcl
pop
mov
imul
repz
cmp
mov
in
inc
xchg
ficom
retf
add
jp
add
push
in
sub
mov
dec
xor
push
jne
cmp
pop
scas
xor
mov
add
inc
mov
and
lods
push
push
mov
pusha
pop
mov
cmp
xor
jecxz
out
loope
fdivr
sbb
pop
dec
jnp
dec
mov
cmc
leave
and
in
mov
xor
add
push
lahf
(bad)
cmp
xor
cs
shl
pusha
lock
in
stc
gs
loopne
cmps
call
dec
std
jnp
outs
and
mov
dec
clc
fidivr
cmp
adc
gs
mov
mov
clc
mov
and
jo
call
xor
jae
xor
cdq
xlat
arpl
mov
test
jne
pop
idiv
clc
pop
cmp
push
pop
jno
ins
xchg
push
shr
mov
js
gs
(bad)
sbb
imul
and
arpl
jle
cmps
cs
or
fild
xor
inc
jne
add
cmps
repnz
popa
push
push
jo
inc
stos
inc
pop
push
test
sub
(bad)
call
call
sub
aas
jge
xor
fs
aam
mov
aas
dec
out
stos
in
mov
mov
mov
aad
aas
dec
push
div
shl
jnp
mov
cld
mov
pop
pop
cli
mov
adc
pop
push
push
(bad)
xchg
pushf
jbe
add
std
fcomp
cs
mov
cmp
cdq
div
mov
(bad)
fldz
jne
or
mov
cld
pop
add
push
mov
into
cmp
(bad)
and
sub
test
push
arpl
mov
add
fisttp
call
cld
or
test
stos
xchg
push
xlat
out
pushf
dec
inc
pop
cld
outs
push
add
sbb
pop
pop
mov
fwait
or
cmp
daa
push
in
adc
fsubr
gs
mov
xchg
popa
dec
shl
gs
retf
jp
xor
stc
gs
clc
fwait
int3
or
push
add
jnp
test
or
mov
or
push
or
lods
mov
xor
out
es
cmc
mov
nop
pusha
dec
into
rcl
shl
adc
fnstenv
xor
in
jo
push
imul
mov
or
xlat
sub
test
in
lds
and
push
mov
sti
repz
add
jo
aas
dec
jnp
enter
jne
ror
jge
not
xor
pop
xor
cmp
and
mov
xor
js
and
or
sbb
int
inc
pop
pop
push
sar
adc
xchg
mov
stc
xchg
adc
inc
push
push
popf
push
dec
lods
or
or
push
ins
test
and
and
push
ret
ss
ret
mov
lock
push
jnp
fdiv
mov
inc
push
imul
inc
in
dec
imul
in
inc
(bad)
pop
stc
xor
push
rol
imul
pushf
cmp
es
or
pop
dec
add
xchg
repz
cvtps2pi
mov
in
shr
repnz
lea
imul
add
(bad)
adc
adc
and
push
and
lods
stos
(bad)
loopne
cs
add
xchg
(bad)
aam
adc
loopne
or
ret
cmps
repnz
popa
(bad)
das
into
jl
xchg
int
pushf
ins
mov
aam
std
aad
mov
jno
sbb
arpl
and
pusha
adc
ds
test
sbb
out
imul
mov
ins
ja
cmps
ja
jmp
imul
cmp
mov
jmp
out
push
add
pop
cmp
jmp
cli
cmp
pop
imul
retf
cmp
mov
add
shl
in
ss
xchg
ss
fsubr
xchg
cdq
sbb
cmps
enter
mov
xor
xchg
push
movs
xchg
sbb
test
or
push
lods
mov
mov
mov
test
outs
mov
pop
rol
jnp
xchg
adc
data16
push
(bad)
xor
scas
xlat
pop
(bad)
daa
cli
or
xchg
push
mov
icebp
push
xor
xchg
scas
sbb
call
lds
ret
(bad)
lods
xlat
clc
retf
pop
and
scas
jae
clc
shl
jo
sbb
arpl
nop
or
out
shl
xchg
bswap
out
inc
mov
stos
jle
les
fwait
iret
hlt
lahf
cdq
lea
mov
push
daa
out
repz
test
cmps
sbb
mov
add
dec
(bad)
adc
sbb
loope
mov
cmps
mov
jmp
ins
aad
mov
or
iret
dec
sbb
dec
fst
nop
arpl
cli
add
call
stc
mov
inc
in
jb
xchg
mov
sbb
bound
mov
clc
pop
in
mov
in
add
idiv
sub
mov
xchg
out
pop
ja
or
sbb
ror
mov
mov
mov
mov
std
add
add
or
icebp
mov
inc
loopne
nop
out
dec
jns
ja
scas
rol
and
dec
push
ja
pop
imul
add
jp
jbe
shl
fsubr
cmp
pop
jecxz
cmps
and
sbb
xor
mov
inc
ins
add
fsub
imul
lock
add
int
or
fwait
addr16
push
lahf
mov
rol
pop
inc
mov
push
mov
push
pusha
adc
fcmove
and
xchg
push
icebp
fmul
fwait
mov
or
iret
lock
jns
cmp
inc
pop
mov
dec
nop
mov
daa
jg
sub
push
movs
test
mov
std
in
xchg
test
hlt
mov
sbb
xor
pop
iret
push
ror
jl
leave
mov
adc
mov
xchg
lds
stos
pusha
lahf
adc
xchg
and
rcr
jl
test
inc
cmp
mov
scas
ret
inc
sbb
fwait
into
movs
stos
jmp
push
or
push
dec
mov
fsub
sub
inc
xchg
fwait
cmps
stc
xorps
inc
mov
test
and
add
icebp
pop
jno
push
fs
data16
or
adc
shl
push
ins
adc
mov
jle
aam
aas
or
push
das
sbb
sahf
aam
adc
inc
fsubr
or
or
popf
dec
or
dec
out
mov
pop
pusha
xchg
dec
ja
jp
push
ds
imul
outs
and
leave
push
or
mov
cmp
lock
call
(bad)
out
sbb
xor
leave
jae
push
test
pop
data16
mov
retf
cmp
jmp
mov
dec
stos
mov
lods
dec
mov
aad
jae
aaa
adc
adc
jl
pop
adc
dec
mov
cli
mov
inc
sub
cdq
or
out
or
loopne
pop
cmp
xor
js
push
lods
lock
out
mov
mov
iret
xor
jno
push
test
out
xor
dec
xor
push
js
test
stos
mov
scas
sbb
push
or
shl
jmp
mov
push
outs
push
dec
fimul
std
mov
popf
cdq
dec
out
sub
xor
sti
(bad)
sahf
mov
jb
fst
or
sbb
pusha
hlt
sbb
mul
out
push
dec
ins
outs
mov
or
add
fisub
and
dec
mov
dec
or
sbb
mov
sbb
cld
popa
pop
pop
cmp
stc
fs
xor
sub
scas
push
aaa
sbb
or
mov
mov
mov
enter
fcomi
cmp
jg
adc
ret
(bad)
aad
xor
xor
add
ds
jg
or
scas
stc
cdq
add
add
out
and
and
cmp
imul
add
adc
or
scas
mov
imul
xchg
jb
adc
lds
sub
into
call
call
js
(bad)
scas
or
xchg
cmp
or
push
(bad)
sbb
and
pop
pushf
movs
aas
aaa
ins
pop
mov
jle
cli
or
xchg
mov
add
(bad)
push
mov
(bad)
xor
cs
in
sub
enter
sub
push
inc
add
sub
outs
ja
fidivr
into
in
mov
xor
in
sbb
pop
push
out
mov
ror
(bad)
or
sbb
inc
jns
mov
loope
mov
ret
cmc
sbb
cmps
xchg
xchg
(bad)
lock
repz
jo
(bad)
addr16
cmp
lea
push
adc
rcl
add
fcom
mov
or
jae
sahf
pop
mov
pop
sub
push
shr
jbe
and
not
add
lahf
loop
aad
mov
das
daa
xor
stc
dec
xor
lea
daa
push
add
pop
mov
dec
mov
adc
out
hlt
or
push
inc
xor
pop
test
inc
mov
pop
sbb
dec
out
push
cmp
mov
stos
ds
cs
xchg
mov
pop
add
sbb
popw
scas
test
loope
mov
ins
xor
xor
mov
ss
push
jbe
push
ins
test
cld
add
jl
dec
dec
jp
cmc
loopne
ficom
push
call
pop
neg
push
mov
(bad)
mov
call
add
and
sub
fdiv
jnp
sbb
dec
(bad)
or
mov
nop
sub
leave
and
adc
outs
cmps
lahf
pop
and
loopne
call
jecxz
adc
(bad)
xchg
and
sbb
xor
sti
or
(bad)
mov
and
fstp
and
lahf
jp
pop
call
rcr
(bad)
sbb
jae
xchg
adc
test
add
sbb
push
jg
jb
or
jmp
stos
jmp
popf
inc
aaa
cli
cwde
mov
movs
mov
scas
mov
test
ss
and
sti
fs
push
jne
xchg
cmp
lock
ins
popf
inc
sti
sahf
cdq
dec
and
adc
(bad)
out
mov
cmp
in
dec
pop
popf
outs
std
mov
mov
jmp
fisub
or
jmp
clc
mov
mov
push
movs
popa
pushf
jecxz
div
or
sub
iret
addr16
xchg
lahf
pop
add
lods
movs
fidivr
outs
add
pop
ficom
enter
pop
outs
icebp
test
mov
dec
out
jecxz
mov
loop
les
(bad)
jmp
movs
sbb
sub
dec
sub
jmp
adc
mov
jmp
dec
jecxz
sbb
cmp
or
jmp
sbb
aaa
push
lds
push
or
into
pop
cmp
sbb
mov
inc
loop
ds
ins
bound
and
push
push
test
setp
sub
retf
push
cmp
adc
dec
push
(bad)
mov
ja
mov
div
sbb
sub
int3
leave
mov
push
aaa
add
mov
cmp
mov
xchg
xchg
cmc
adc
or
ins
push
into
mov
(bad)
imul
movs
push
scas
gs
rcl
jge
cld
movs
ins
xchg
int3
das
fiadd
pop
sub
ror
pop
fdivr
mov
or
and
dec
shl
fistp
sbb
dec
test
and
scas
fcom
pop
xchg
mov
bound
adc
mov
aas
and
inc
pop
ins
pop
mov
or
adc
jne
ret
mov
outs
dec
rcr
mov
sub
(bad)
sbb
ds
jno
sub
ret
imul
ret
xor
adc
inc
ins
pop
sbb
frstor
test
pop
sub
inc
dec
movs
retf
pop
stc
imul
imul
xor
cdq
mov
push
push
lds
rcr
jmp
mov
adc
test
pop
ss
movs
das
call
(bad)
mov
int
dec
ror
into
or
and
jle
ss
int3
pusha
push
aad
stos
movs
push
jecxz
jl
mov
sub
pop
push
into
jmp
sbb
retf
mov
int
test
retf
(bad)
xchg
popw
ja
sbb
shr
mov
sbb
mov
mov
pushf
inc
pusha
mov
xlat
aaa
xor
pop
mov
ret
retf
cmp
push
movs
in
and
test
call
and
jg
movs
sbb
call
jp
mov
or
push
xor
or
cmp
sub
imul
sbb
adc
loope
les
test
(bad)
and
es
mov
enter
and
and
push
rcl
add
sar
jne
mov
sbb
push
int3
dec
mov
jae
sub
add
dec
push
dec
sub
jb
out
(bad)
cmp
sub
xor
inc
xor
lds
out
jae
push
push
mov
pop
pop
ss
or
not
inc
push
out
xchg
mov
lea
add
push
sbb
xchg
push
jecxz
sub
or
enter
add
push
push
sub
mov
cli
inc
lods
sub
call
push
inc
xchg
popf
test
jecxz
cmps
push
mov
inc
xor
(bad)
mov
ins
fs
mov
daa
mov
es
test
popa
push
into
dec
retf
repnz
push
ins
popa
inc
test
xchg
jnp
and
gs
and
dec
scas
loope
mov
outs
les
mov
jnp
retf
push
adc
xchg
push
pusha
ins
mov
pop
or
leave
fst
movs
std
jbe
push
push
cdq
popa
push
xchg
ja
jnp
jle
push
mov
(bad)
sahf
xchg
add
mov
jg
mov
shr
pop
scas
clc
lods
cmp
cmc
pop
hlt
mov
adc
mov
and
das
ins
jp
rcr
push
xor
sub
inc
xor
push
dec
jo
xor
or
jg
test
xor
cmp
adc
aad
clc
adc
sbb
jae
dec
push
xor
jo
cld
loop
and
xor
jno
jge
(bad)
adc
jmp
or
or
mov
in
push
sti
push
jo
shl
mov
mov
jo
inc
dec
cs
cli
xchg
dec
xchg
les
cmp
jno
cdq
dec
inc
pop
inc
push
(bad)
adc
mov
and
(bad)
push
xor
arpl
jecxz
(bad)
push
mov
adc
adc
xor
or
xchg
dec
pop
pushf
stc
(bad)
(bad)
jp
out
scas
repz
push
mov
lea
(bad)
fcmovnu
rcl
sbb
xchg
pop
inc
cmp
aam
jae
xlat
loop
xchg
jbe
(bad)
bswap
ficom
xchg
cmp
aad
xor
sub
push
jne
mov
(bad)
jl
lock
nop
sahf
je
out
(bad)
movs
pop
adc
fmul
xor
and
(bad)
int3
and
jmp
loopne
pop
(bad)
dec
push
jge
test
and
or
jge
cmps
xchg
mov
add
retf
in
movlps
pop
xor
nop
dec
mov
cmps
cs
xor
das
sub
fdivr
dec
scas
dec
(bad)
lock
cmps
and
cmp
mov
das
test
in
(bad)
or
mov
add
pop
and
xor
test
mov
sub
js
bound
out
xor
xor
test
mov
in
xchg
(bad)
adc
push
shr
jno
fs
(bad)
jge
aam
imul
out
jo
test
mov
inc
xor
xor
mov
mov
and
les
and
sub
jbe
jne
xor
xchg
cmp
add
push
xchg
or
js
add
popf
mov
mov
mov
inc
ret
ror
(bad)
(bad)
fst
and
lds
xor
and
mov
test
xchg
lea
inc
lods
mov
or
loop
jns
(bad)
sbb
nop
add
push
xor
mov
mov
xchg
inc
ror
rcl
fxch
adc
inc
mov
adc
stc
iret
xchg
or
cmp
dec
mov
fwait
adc
sbb
neg
data16
and
mov
mov
adc
call
retf
push
lahf
dec
jecxz
cmp
ret
sbb
mov
in
cld
jle
outs
ret
ror
fsubr
sar
inc
mov
pop
mov
sahf
enter
jmp
icebp
mov
aad
int3
imul
test
sub
scas
cmp
pop
lea
push
fiadd
add
das
ds
pop
inc
enter
sbb
gs
in
lahf
les
ja
loop
aaa
sub
and
mov
popa
push
push
sbb
dec
aad
add
test
imul
pop
pop
cmp
shl
cli
mov
xor
dec
outs
imul
daa
fucom
enter
push
rol
test
mov
push
mov
(bad)
mov
add
sbb
popa
out
jmp
push
jns
jbe
push
pusha
inc
and
cmp
sar
add
outs
test
add
(bad)
aam
imul
xchg
sbb
ficomp
outs
ffree
jb
and
sub
inc
add
or
xor
inc
mov
pop
add
test
out
int
xchg
(bad)
pop
imul
pusha
mov
out
push
sub
jns
repz
mov
push
call
inc
ins
mov
loope
into
in
push
dec
mov
lods
fwait
(bad)
mov
test
lahf
stos
stos
adc
movs
dec
je
xchg
daa
icebp
and
pop
sbb
push
(bad)
jno
pop
sbb
lock
sbb
ja
and
push
mov
and
or
(bad)
out
aam
xor
sbb
ins
sbb
mov
retf
or
mov
stos
scas
imul
xlat
or
mov
mov
dec
jge
pop
out
push
bound
in
and
adc
dec
pop
push
inc
add
enter
sbb
xchg
sbb
xor
jae
mov
xor
repz
push
pop
aaa
add
out
ja
cmp
and
cmp
jo
pop
push
pop
and
imul
ret
xor
mov
cmp
cmc
std
leave
mov
cmc
cli
inc
ret
stc
mov
pop
nop
call
or
and
mov
daa
sub
jns
popf
cmp
scas
popa
jns
out
inc
ret
jp
imul
mov
add
mov
shl
cwde
xor
sbb
lahf
frstor
leave
inc
push
enter
(bad)
dec
(bad)
std
dec
xchg
int3
xor
jmp
(bad)
fisttp
mov
xchg
stos
jl
nop
sbb
aad
aas
shr
sub
ins
outs
mov
test
pop
fwait
cmc
icebp
pop
es
cdq
fisttp
ins
mov
mov
xchg
mov
push
xor
xchg
shl
lods
outs
call
rcl
mov
add
and
xor
lods
call
dec
(bad)
mov
iret
sbb
out
loopne
in
mov
outs
js
aad
lods
adc
test
push
mov
jnp
test
jbe
dec
into
mov
shl
test
mov
data16
in
inc
or
or
retf
and
fsubr
lods
xchg
fcom
in
jg
add
aaa
ins
aaa
(bad)
arpl
or
mov
pop
data16
mov
jle
adc
cdq
inc
jb
or
xor
jle
add
jmp
add
sahf
jno
adc
xchg
sub
cdq
inc
fistp
xlat
ror
sub
xor
or
(bad)
jnp
pop
jae
shl
pop
push
xchg
test
out
cmps
mov
out
sub
ror
retf
or
push
bound
int3
inc
jp
(bad)
sbb
(bad)
test
sbb
push
sbb
clc
xor
adc
mov
gs
dec
sbb
loope
das
add
push
aad
and
aaa
adc
hlt
stc
lahf
arpl
retf
jle
sbb
jmp
sbb
adc
ficomp
mov
adc
mov
pop
repz
cwde
sbb
data16
xor
jo
fs
or
lds
stc
dec
jae
inc
dec
xor
popa
push
mov
retf
out
arpl
aam
stos
jno
xor
les
xchg
sahf
jae
mov
jp
xchg
std
clc
dec
test
stos
push
cmp
mov
adc
mov
imul
aam
inc
out
pop
in
xchg
mov
add
imul
or
lods
fsubr
loopne
sbb
stc
xor
push
in
mov
out
pushf
mov
jbe
nop
imul
or
sbb
retf
sti
out
sbb
fnstenv
adc
(bad)
out
push
shl
jne
mov
popf
sbb
xor
cmps
stc
sub
ja
push
test
sbb
push
dec
mov
cmp
or
pop
mov
adc
aas
mov
mov
and
inc
push
scas
push
mov
xor
cmp
lahf
in
(bad)
sar
daa
cmp
movs
and
shl
sub
pop
jns
or
in
dec
push
push
out
stos
cmp
int
ins
cdq
jne
mov
test
aas
fild
imul
or
dec
dec
dec
adc
fsqrt
cdq
and
test
repz
sbb
mov
test
mov
iret
stc
lods
mov
je
ret
ror
mov
enter
test
shl
adc
jmp
in
ret
out
adc
mov
bound
jl
mov
ja
iret
pop
pop
cmp
xor
jbe
outs
push
fistp
jle
inc
lahf
add
loopne
(bad)
movs
lods
rcr
bound
pop
push
nop
adc
pushf
mov
inc
aaa
cmp
fild
mov
mov
fnstenv
test
xchg
mov
adc
mov
call
cmp
jp
mov
inc
push
push
je
shrd
pop
sbb
rcl
dec
daa
test
jns
jp
sub
ds
leave
dec
bound
in
mov
push
push
call
sbb
leave
dec
call
xchg
div
retf
aam
out
pop
mov
cld
xchg
jns
fisttp
adc
sbb
pop
pusha
pop
aas
das
mov
loope
jns
sbb
add
dec
cmps
xor
repnz
add
cmps
es
div
lock
clc
cs
popa
push
icebp
mov
add
retf
ja
pop
jbe
sbb
xor
pop
inc
xchg
sahf
shl
out
std
mov
jg
call
jbe
push
dec
or
push
cmp
pop
add
shufps
jle
addr16
lahf
into
nop
lods
std
push
data16
sbb
mov
(bad)
(bad)
pop
inc
scas
pop
test
stos
pushf
jns
sbb
cli
push
mov
aas
xor
retf
mov
dec
in
mov
xor
fnsave
pop
or
push
arpl
sti
retf
in
dec
pusha
mov
mov
cmp
dec
adc
je
push
iret
sbb
movs
xchg
cmps
xchg
dec
dec
push
adc
das
std
add
ror
popf
retf
ins
mov
cmp
dec
push
aam
ja
les
arpl
push
imul
push
push
je
adc
leave
push
movs
sub
xchg
lock
xchg
jl
push
stc
sub
mov
push
push
mov
jb
lahf
retf
sub
pushf
loopne
mov
dec
xor
in
nop
test
add
pop
add
mov
adc
stc
xchg
pop
inc
cmps
push
lahf
xchg
je
push
push
lock
add
es
pop
scas
sbb
hlt
inc
sbb
xchg
add
imul
sub
pushf
pop
sbb
bound
add
and
dec
xlat
mov
std
sub
dec
retf
enter
in
push
dec
mov
les
cmc
sbb
test
pusha
call
dec
pop
(bad)
cmp
mov
fistp
in
popa
and
xchg
(bad)
loopne
out
iret
dec
gs
ret
push
add
fisub
mov
ret
mov
or
push
jbe
pushf
push
sub
mov
jae
nop
mov
sub
adc
inc
inc
cmps
lahf
inc
cdq
dec
add
dec
mov
inc
int
push
xchg
inc
mov
in
push
sahf
pop
in
push
je
jo
arpl
push
add
fdiv
xor
push
inc
mov
bswap
sbb
ror
push
jne
das
stc
cwde
fild
mov
retf
pushf
cmp
arpl
mov
mov
pop
mov
jo
adc
xor
inc
popf
xor
xor
out
inc
lds
jbe
(bad)
push
xchg
daa
or
xchg
cmp
and
dec
in
xor
mov
fcmovne
in
xchg
mov
mov
jecxz
dec
jbe
iret
or
imul
add
mov
jmp
cmp
sbb
std
push
sbb
mov
and
loop
xor
icebp
mov
push
inc
adc
jbe
movs
push
imul
lock
scas
add
test
or
pusha
stc
jnp
nop
lds
push
jge
or
jge
inc
call
cmp
test
enter
adc
inc
test
ds
jne
pop
xor
icebp
sub
and
xor
sbb
sub
dec
and
out
hlt
test
jecxz
(bad)
stos
jl
jecxz
dec
or
sbb
sub
jg
pop
inc
imul
and
or
fcomp
cmp
mov
jno
mov
in
xor
xor
adc
mov
and
pop
(bad)
mov
inc
xlat
dec
and
pop
outs
aas
cs
push
fadd
jge
je
sub
shr
into
loopne
add
cmps
imul
push
pop
retf
ja
pop
jmp
add
(bad)
dec
xchg
push
inc
loopne
xor
iret
xchg
dec
dec
imul
arpl
pop
gs
xchg
inc
not
jl
sar
ins
or
xchg
xchg
adc
inc
bnd
es
outs
cld
sbb
xchg
movs
loope
sub
mov
jmp
mov
ja
mov
sbb
inc
mov
pushf
xchg
push
xchg
push
call
adc
sti
bound
pop
aad
xor
xlat
(bad)
adc
push
neg
(bad)
stc
mov
out
ret
dec
loopne
cmps
and
and
mov
xor
into
scas
imul
jno
inc
inc
sbb
adc
sbb
inc
xor
dec
and
add
cmp
adc
inc
rcr
pop
pushf
sbb
pop
movs
out
push
fucomi
push
mov
int
cmc
jp
mov
sub
push
lea
jl
out
jnp
cmc
imul
cmp
add
call
loopne
dec
xchg
pop
fisub
ins
cwde
shr
mov
dec
out
push
das
je
pop
pop
rcr
(bad)
cwde
mov
add
nop
fnsave
and
pop
dec
mov
cmp
xor
out
shr
cmp
mov
mov
enter
push
sbb
mov
(bad)
pop
pop
mov
das
mov
std
adc
rcr
xchg
push
sti
adc
jmp
dec
(bad)
stc
pusha
movs
rcr
add
imul
shl
pop
xor
mov
push
pop
into
(bad)
xchg
sahf
daa
sub
push
in
scas
enter
(bad)
not
mov
cmp
dec
imul
adc
pop
inc
mov
es
add
bound
pusha
mov
repnz
sbb
add
cmps
jnp
and
push
push
xchg
add
(bad)
dec
(bad)
clc
xor
adc
jns
mov
arpl
addr16
and
sub
arpl
fs
push
xchg
inc
cmp
push
shl
add
out
push
xor
or
cmp
lock
dec
rcl
add
leave
add
rcr
xchg
std
stos
fld
cmp
pop
loope
cmp
mov
push
pop
and
movs
cli
pop
or
in
add
lock
ss
sbb
stc
jp
and
jg
dec
jae
stos
call
pop
pop
and
jl
ret
jge
jmp
xor
es
mov
(bad)
mov
jle
add
sbb
(bad)
xor
mov
and
push
and
mov
loope
mov
cdq
ret
fist
pushf
jg
stos
add
add
ret
mov
pop
ins
jns
mov
shr
ror
xchg
mov
dec
mov
outs
jl
mov
retf
(bad)
push
out
lods
mov
retf
adc
pop
dec
bound
cwde
add
mov
add
xor
jbe
jmp
mov
aaa
push
push
push
jnp
loopne
dec
rol
stos
fiadd
fistp
ins
loope
fisubr
jnp
dec
pop
cmp
or
int3
in
pop
pop
jno
and
fdiv
aam
and
in
call
mov
bnd
imul
push
loope
movs
jge
or
nop
(bad)
ja
or
xchg
push
dec
in
mov
jg
ss
sahf
ins
xor
inc
add
xchg
mov
pop
cld
and
add
cmps
fistp
cmc
daa
adc
dec
sbb
fisubr
adc
add
adc
jle
or
hlt
aad
mov
mov
adc
adc
je
nop
in
xor
push
cli
jecxz
pop
sahf
ins
or
icebp
stos
scas
ror
cmp
jbe
fsubr
je
int3
adc
mov
or
sub
mov
inc
push
scas
mov
push
sub
rcr
gs
push
enter
js
nop
adc
inc
pop
emms
aad
popa
arpl
or
lock
or
aas
call
jo
retf
cld
popf
popa
xlat
lock
ins
paddsw
out
into
pushf
inc
push
repz
sub
aas
mov
mov
and
stos
outs
data16
sbb
mov
mov
cmc
cli
mov
jecxz
imul
mov
push
xor
mov
pop
cs
aad
enter
in
test
fxch
inc
(bad)
inc
fdiv
repz
inc
adc
mov
mov
lahf
add
cdq
jno
mov
stc
fcmovbe
pop
fild
sub
ss
sub
dec
add
pop
ficomp
lea
hlt
push
cmp
and
sub
dec
xchg
retf
or
in
jnp
inc
xchg
jmp
adc
mov
cmps
jne
xor
jo
pop
dec
nop
imul
mov
lahf
pushf
sti
jmp
pop
popf
icebp
cmp
mov
in
xchg
call
push
and
rcr
sbb
adc
sub
(bad)
cmp
outs
shr
add
cmps
sar
(bad)
fidivr
pop
adc
mov
test
mov
dec
popf
aas
cdq
int
jnp
mov
xlat
shr
in
ds
sbb
hlt
jne
xchg
mov
jne
lds
push
cmp
test
lock
out
pop
cmc
mov
jbe
jnp
cmc
lahf
outs
int
jmp
dec
dec
adc
scas
push
(bad)
mov
jg
mov
int
fsub
hlt
jecxz
sub
ja
push
dec
dec
aaa
xor
ja
sbb
or
hlt
adc
loop
cmp
sbb
adc
loope
jnp
mov
ins
sar
inc
cmp
sbb
shr
dec
cli
dec
sub
(bad)
or
cmp
xor
xor
(bad)
jns
adc
xchg
aaa
push
(bad)
xor
call
mov
mov
xchg
loop
add
adc
cmp
sub
or
(bad)
(bad)
in
cmp
test
xchg
jecxz
movs
adc
push
test
clc
adc
sbb
rcl
(bad)
push
popf
(bad)
xchg
xchg
mov
add
(bad)
jnp
mov
shr
push
std
jno
out
or
inc
scas
mov
aam
loopne
rcl
pop
push
fwait
out
out
sbb
and
sar
cmp
retf
cmc
or
xor
cdq
fs
es
stos
jmp
sub
mov
pop
leave
cmc
inc
fs
cld
adc
dec
lock
push
aam
add
cmp
or
inc
call
jg
inc
in
and
push
fcomp
setb
lea
xlat
leave
jo
ss
cmc
mov
test
(bad)
sub
cmp
push
inc
cdq
push
fisub
dec
jb
aas
and
popf
sub
mov
add
xor
aad
jecxz
push
add
jbe
int3
in
stos
js
dec
daa
mov
loope
out
daa
cli
cmp
xorps
xor
lahf
pop
dec
inc
cwde
(bad)
icebp
mov
add
fst
imul
gs
xor
or
sub
popa
pop
sbb
fwait
aad
ds
je
mov
inc
stc
cmc
(bad)
rol
sub
lock
mov
cmp
ins
in
pop
ins
dec
jl
mov
jp
mov
mov
cs
test
retf
jb
xchg
xor
jp
gs
jecxz
xor
int3
xlat
in
push
outs
dec
cmps
sub
jl
lahf
pop
lods
fld
pop
mov
dec
inc
jmp
sbb
mov
sbb
inc
fmul
mov
sahf
retf
cli
mov
fcomp
mov
lods
or
dec
je
push
data16
jnp
pop
fstp
sahf
xchg
jmp
in
push
cld
nop
jecxz
xor
nop
call
mov
mov
clc
fldcw
jns
xlat
mov
das
rcl
pop
push
xor
imul
xlat
jge
into
pop
cmp
add
outs
push
and
cmp
push
mov
icebp
sub
dec
add
into
mov
lea
cmc
test
aam
mov
int
ins
inc
retf
iret
dec
call
mov
je
pop
sbb
mov
push
test
(bad)
mov
cli
arpl
xor
lds
lahf
mov
pop
push
or
pusha
xor
push
sti
sar
mov
push
mov
jle
sub
sbb
ds
pop
(bad)
mov
stos
mov
lds
ficomp
xor
add
push
jmp
pop
mov
and
xor
dec
lods
retf
movs
hlt
daa
add
mov
inc
push
add
rcl
inc
add
mov
xlat
test
sub
inc
out
movs
int
int
push
mov
test
mov
xor
stos
and
aad
jecxz
push
xor
fsubr
aad
xchg
outs
cmps
aas
add
enter
out
in
or
repnz
pop
pop
sbb
out
bound
or
aad
xchg
dec
sub
aam
sbb
xor
jne
rcl
out
and
pusha
icebp
adc
push
and
arpl
mov
mov
mov
clc
pop
inc
pop
push
nop
push
test
push
dec
enter
adc
adc
mov
iret
ins
jmp
in
jb
dec
push
sbb
stc
sub
mov
pop
xor
data16
gs
je
dec
push
add
sbb
jecxz
push
sub
pushf
push
lods
pushf
loope
je
sub
and
into
fild
dec
push
jmp
outs
inc
xchg
pop
push
dec
adc
retf
fsubr
cmc
jle
cmp
sub
mov
xchg
enter
(bad)
popf
dec
rcl
inc
nop
and
sub
bound
mov
jbe
dec
inc
movs
das
mov
aaa
jb
jg
(bad)
dec
(bad)
pop
es
out
sub
cmp
pop
ja
mov
ffreep
jecxz
sbb
loopne
data16
enter
sbb
fsubr
in
sub
xor
(bad)
(bad)
xor
movs
or
test
sub
test
stc
shl
pop
jmp
jno
push
mov
addr16
jns
sar
inc
or
fdivp
xchg
loope
push
scas
(bad)
jge
outs
sbb
bound
and
xchg
and
jae
fs
fld
mov
int3
repz
jl
jne
mov
push
mov
lea
push
daa
pop
cs
sbb
or
ja
sub
(bad)
hlt
xchg
mov
daa
dec
shl
xlat
imul
in
movs
mov
xor
add
jp
leave
xlat
sub
jmp
leave
push
test
sbb
rol
mov
mov
in
pop
push
mov
repnz
leave
mov
jge
lahf
lods
cdq
jno
xor
sahf
pop
cmp
outs
mov
and
mov
pop
cmc
dec
out
dec
pop
pushf
push
int3
jae
aad
pushf
add
cmps
retf
xchg
push
pushf
out
inc
arpl
sub
push
inc
jle
xlat
cmp
enter
sahf
repnz
mov
ret
xor
and
test
mov
lahf
inc
add
add
sbb
jg
xbegin
jg
push
addr16
push
or
(bad)
jle
jbe
or
and
or
frstor
icebp
inc
mov
inc
inc
in
jo
rcr
cmp
add
cmps
ficom
cmp
xor
xchg
jmp
xchg
imul
imul
shl
out
movs
xor
and
mov
test
jo
shl
jmp
push
je
enter
int
cmp
mov
lds
and
pop
ins
inc
div
mov
dec
add
aaa
pop
jne
nop
mul
adc
in
pusha
inc
scas
pop
rcl
lods
jb
add
jp
lea
jl
push
lea
pop
fidiv
dec
(bad)
push
loopne
pop
in
jns
adc
leave
out
call
xchg
pop
fwait
cwde
pop
fidiv
cwde
test
and
sbb
in
jl
scas
(bad)
sub
mov
fdiv
dec
mov
sub
cmp
and
test
adc
dec
xor
(bad)
dec
mov
xchg
mov
mov
inc
stc
mov
hlt
inc
imul
shr
or
ins
ror
add
inc
mov
and
imul
or
dec
mov
retf
es
push
sbb
movs
out
xor
out
pop
sub
pop
jbe
int
fstp
mov
adc
or
into
cmps
dec
dec
adc
rcl
push
lock
iret
and
mov
aad
popf
call
push
rcl
cwde
push
std
ins
inc
xlat
icebp
adc
jb
mov
scas
call
ja
jl
jmp
hlt
js
fwait
mov
push
xchg
xor
ins
add
into
pop
leave
add
(bad)
jo
cmps
clc
outs
scas
push
lock
movd
ss
pop
mov
xacquire
add
and
pop
push
xchg
push
adc
pop
xchg
sub
xchg
int
dec
inc
lods
sub
sub
icebp
pop
mov
cmp
lds
daa
mov
inc
jnp
in
lea
pop
sub
data16
sbb
or
imul
out
retf
std
dec
mul
sbb
je
int
inc
xchg
call
rcl
clc
in
sbb
adc
call
scas
push
(bad)
ss
(bad)
cdq
clc
sbb
repz
ins
mov
xchg
adc
push
and
sbb
and
mov
mov
movs
cmp
lock
inc
mov
and
cmp
jle
jo
loope
cmp
mov
scas
jmp
gs
or
and
js
repnz
mov
sub
inc
loopne
or
pop
pop
push
in
push
push
mov
cld
mov
or
out
jae
pop
push
inc
xor
daa
mov
test
add
xor
mov
ficom
scas
cmp
and
sub
mov
xor
sbb
adc
pop
in
sbb
sub
and
xor
pop
test
or
aaa
data16
push
push
pop
mov
icebp
idiv
out
cmp
lods
pop
fstp
dec
loop
dec
or
int
sti
pushf
and
test
sub
stc
pop
mov
fisttp
movs
push
xchg
sahf
dec
(bad)
fidivr
mov
cmc
push
mov
xor
sub
test
sub
sub
cld
mov
xchg
jae
ja
sub
sub
leave
gs
data16
push
mov
jl
pushf
fsub
cmp
pop
jns
mov
imul
and
test
mov
nop
sti
out
loopne
pop
and
movs
cld
or
pop
js
(bad)
pop
mov
push
adc
jno
out
xchg
inc
fimul
jnp
stos
jecxz
mov
push
ficom
js
pushf
arpl
xchg
adc
mov
sahf
xchg
into
ds
(bad)
xor
fiadd
loope
ja
fimul
(bad)
aaa
fwait
fs
mov
dec
or
add
xchg
mov
mov
cmp
lods
jmp
ret
adc
mov
cmp
mov
cmp
out
outs
push
nop
mov
sbb
sti
push
pop
shl
xor
retf
mov
hlt
mov
bound
arpl
add
das
push
shl
sbb
push
ret
stos
std
inc
mov
addr16
mov
cdq
push
push
enter
add
xor
lahf
inc
je
jo
mov
shr
adc
neg
xchg
ss
aaa
mov
ret
fadd
mov
add
or
cmps
xchg
cld
add
mov
out
cmp
mov
es
lahf
cdq
ret
pop
test
movs
ffreep
popf
int3
xchg
push
inc
xor
cmps
inc
push
lods
push
retf
dec
pusha
add
jno
in
xor
jecxz
adc
aaa
call
dec
pop
xor
and
cmc
mov
outs
dec
sbb
rcr
jno
stos
sbb
push
and
dec
inc
in
iret
leave
popa
fcomp
cli
cmp
adc
add
je
xor
sbb
or
das
mov
push
mov
(bad)
dec
xchg
inc
dec
xchg
jno
ss
aad
js
lds
adc
aad
cmp
mov
push
or
mov
xor
jmp
fcmovu
lods
clc
popa
scas
in
ret
je
or
and
inc
mov
fimul
add
inc
or
scas
cmp
ins
push
and
pop
fild
movs
xchg
sub
int3
arpl
cmp
ret
loop
fimul
xchg
sub
xor
int3
dec
addr16
xor
add
cmp
ja
ret
int3
sbb
push
xchg
sub
cmps
or
mov
sbb
mov
rol
mov
mov
arpl
int
and
mov
out
cmps
push
pop
ins
mov
popa
and
adc
or
enter
sbb
fxam
inc
sub
mov
movs
out
cmps
cmp
lods
mov
xor
cmp
push
mov
fnsave
cmc
data16
xchg
jae
enter
xor
xlat
stos
repnz
inc
repnz
into
test
aas
ret
aad
retf
in
outs
fsubp
sub
ins
shl
inc
aaa
push
push
(bad)
stc
aam
pop
mov
jb
jecxz
jmp
cmp
rol
test
jge
std
xor
lds
inc
xchg
sbb
clc
xchg
dec
mul
das
lar
mov
adc
inc
enter
jl
and
jmp
test
lods
xor
jno
pop
fidivr
fisttp
sar
adc
push
fwait
pop
or
mov
mov
movs
adc
add
cmp
rcl
add
mov
push
pop
js
icebp
sbb
sahf
scas
loop
inc
pop
fcmovbe
cmp
xor
mov
mov
jp
jge
push
ds
mov
in
lea
(bad)
mov
dec
adc
lahf
pop
dec
mov
lods
sub
add
inc
je
scas
repnz
or
pop
inc
cmps
push
or
clc
es
mov
fadd
dec
mov
inc
iret
sahf
jle
retf
imul
addr16
lock
and
push
es
(bad)
mov
rcl
or
jmp
cmp
(bad)
add
or
dec
js
loopne
lods
sub
and
mov
sub
jno
mov
iret
and
std
xchg
sahf
mov
jne
pop
in
int3
call
mov
mov
push
mov
mov
jns
icebp
jns
cli
lds
jns
test
pop
inc
or
leave
sbb
pop
sub
xchg
mov
jae
mov
daa
push
sbb
lods
jo
pop
mov
les
div
cdq
adc
mov
scas
or
add
loopne
push
in
dec
xchg
icebp
xlat
push
jle
jo
mov
mov
cmp
call
mov
jmp
cmp
push
or
test
daa
jmp
out
mov
inc
imul
or
pop
push
iret
xchg
lods
mov
dec
leave
int
xlat
cmp
push
and
stos
test
sub
and
je
test
and
lea
xor
int
sti
or
pop
inc
clc
mov
mov
enter
push
test
sbb
adc
xchg
sbb
cmp
jo
adc
jp
fild
mov
leave
scas
fcomip
aaa
push
pop
sub
dec
fwait
adc
std
xor
push
pop
jns
pop
cmp
ret
sub
mov
neg
and
cmp
es
lods
pop
jae
push
fisttp
outs
ret
dec
jne
pop
imul
mov
scas
mov
and
and
lods
jbe
popa
daa
push
sub
mov
int3
pop
push
jno
cwde
inc
in
inc
test
and
mov
xor
add
add
outs
jb
and
adc
inc
xor
xchg
pop
ror
daa
push
adc
mov
sbb
aas
push
int
add
adc
jmp
jae
(bad)
test
sub
push
mov
pop
and
pop
adc
push
popa
in
loop
add
mov
pop
cwde
scas
mov
iret
loope
push
cmp
sahf
shl
ss
cdq
outs
cmp
dec
adc
cmp
jp
xchg
xchg
mov
fcomp
fwait
repz
test
cmp
jmp
int
jo
jns
and
pop
dec
les
je
gs
(bad)
sub
ds
sub
int3
inc
xchg
mov
mov
ret
mov
jb
es
or
mov
sbb
test
outs
add
cmc
pop
xchg
aaa
sbb
cmp
call
inc
cmp
jecxz
add
out
mov
ds
push
cmp
add
mov
mov
in
mov
cmps
adc
mov
repnz
mov
mov
cdq
fistp
jge
mov
pop
loope
out
xchg
push
add
leave
test
out
mov
dec
or
mov
pop
sub
or
outs
scas
inc
fwait
mov
mul
pop
xor
fstp
bound
jp
xor
jecxz
sub
repnz
push
pop
jecxz
shl
pop
or
pop
fsub
and
in
std
mov
pop
push
retf
leave
or
jbe
mov
sbb
xor
adc
sahf
jge
ret
adc
stc
neg
cli
cmps
cli
mov
dec
sbb
ret
fcom
sub
popa
cwde
push
jp
imul
push
aas
in
aaa
das
enter
ins
or
dec
dec
or
aam
inc
not
mov
sub
loope
jbe
cmp
and
push
dec
enter
mov
outs
leave
mov
mov
mov
jge
cmc
dec
fbstp
dec
pusha
mov
ja
(bad)
js
mov
fisttp
cmp
ficomp
(bad)
dec
pop
jp
push
(bad)
cld
shl
jne
mov
cmc
loopne
inc
inc
mov
ftst
mov
xchg
imul
mov
fiadd
cwde
xchg
aas
inc
out
nop
mov
add
push
adc
xlat
ficom
ins
shl
ficomp
jbe
xchg
and
cwde
sub
push
cmps
xchg
push
aad
mov
(bad)
sub
fwait
jl
inc
or
movs
jo
pushf
jge
es
sbb
push
(bad)
icebp
arpl
stc
pop
repz
retf
test
mov
arpl
fstp
push
inc
shl
jno
sub
hlt
push
sbb
scas
or
loop
inc
imul
gs
inc
jns
pop
ins
adc
leave
lods
jmp
push
ffreep
ds
loope
adc
movs
icebp
lock
mov
cmp
es
leave
loop
mov
lock
cmc
or
mov
cmps
ds
shl
std
add
mov
jle
jle
cdq
add
(bad)
call
mov
inc
pop
jno
ror
into
inc
mov
push
ret
ja
sub
outs
add
hlt
jmp
pop
popa
iret
or
repz
cmp
js
cmp
xchg
stos
push
push
push
and
cld
retf
inc
sub
push
xchg
mov
pop
mov
(bad)
int3
call
sahf
inc
sbb
mov
out
cmc
imul
xlat
push
repnz
push
cmp
jle
dec
xchg
cmp
xchg
sbb
cs
call
mov
xchg
stos
adc
or
in
in
cld
inc
xor
dec
xchg
outs
pop
lods
dec
push
aaa
dec
add
imul
nop
stos
shl
mov
cmps
ds
stos
xlat
pop
test
aam
sbb
sub
sar
or
add
mov
push
test
pop
scas
push
or
inc
cwde
pop
sub
pushf
(bad)
rol
xor
scas
cmp
shl
jmp
ins
stos
cmp
fs
into
ins
je
jge
(bad)
ins
into
cmp
into
mov
leave
xchg
add
fisubr
mov
aam
popa
dec
mov
(bad)
cmp
ins
adc
push
sbb
dec
daa
inc
sub
aam
adc
(bad)
dec
sub
cmp
dec
jge
punpcklwd
jb
in
jo
cmp
mov
fcmovnb
std
lock
es
pop
jo
bound
aas
and
xor
and
(bad)
sub
cmp
out
jmp
pop
test
or
popf
sbb
(bad)
xor
or
clc
or
or
cmps
cmp
stc
adc
mov
iret
int3
dec
inc
ret
aam
cmp
jb
dec
mov
and
and
inc
pop
mov
in
mov
int
pop
inc
mov
sahf
into
loop
movs
stos
jge
or
sbb
mov
push
lods
or
or
adc
xchg
les
in
xchg
and
retf
ret
ins
popa
dec
arpl
mov
xor
dec
ins
and
int
popf
js
(bad)
pop
xchg
(bad)
mov
sub
cs
jmp
cmc
ins
pop
mov
jmp
in
in
add
outs
or
je
inc
xchg
sbb
mov
xor
push
cmc
(bad)
lods
mov
mov
pop
xchg
mov
sbb
scas
cmps
imul
dec
push
sbb
inc
sub
mov
imul
cmp
nop
xchg
gs
sub
imul
int3
push
or
adc
mov
add
sub
cmp
cmp
xchg
aaa
paddb
mov
arpl
mov
mov
inc
clc
inc
mov
jae
ins
repnz
addr16
jp
xlat
jbe
ins
jle
mov
dec
in
sub
xor
dec
add
leave
scas
dec
pushw
into
push
jecxz
push
aaa
mov
aad
add
out
fild
sahf
shl
leave
pop
scas
mov
test
movs
(bad)
push
jae
in
push
fistp
lods
push
cmps
mov
(bad)
jmp
stc
aaa
jne
dec
out
sahf
fsubr
jb
out
sar
sbb
jge
in
or
inc
shl
neg
loope
vpunpckhdq
stos
jle
rol
in
add
mov
or
mul
add
dec
adc
clc
jo
leave
xchg
daa
mov
ins
and
ins
clc
or
mov
cmp
les
rcl
xchg
inc
cmp
jmp
mov
xor
push
inc
rcr
sbb
add
dec
(bad)
push
jp
adc
push
pop
test
mov
mov
in
aaa
mov
cmp
or
bound
dec
mov
mov
ret
push
imul
xchg
mov
or
mov
xchg
sahf
xchg
pop
out
mov
sti
xchg
inc
adc
push
add
or
mov
call
rcr
pop
scas
push
pop
or
xchg
jnp
int
ins
retf
jo
rep
mov
jp
dec
movs
cmp
jle
aad
cmp
mov
ja
mov
mov
xchg
repz
add
fstp
xor
adc
and
mov
xor
jmp
test
push
push
push
fstp
out
jmp
call
(bad)
out
push
into
mov
and
iret
(bad)
sti
push
out
ins
sar
mov
xchg
ror
jl
mov
lea
test
mov
push
or
adc
push
adc
push
cmp
(bad)
aad
push
ret
leave
inc
ret
aas
aaa
fadd
stos
call
std
dec
inc
cmp
xor
jne
and
aad
in
push
shr
push
gs
dec
aad
int3
push
outs
cmp
jnp
(bad)
nop
dec
test
push
jge
add
js
mov
mov
ret
test
stos
xchg
fstp
dec
xchg
and
xchg
jecxz
ret
push
inc
mov
inc
mov
sub
ss
enter
ror
(bad)
std
sub
(bad)
dec
sbb
das
sub
loop
pusha
leave
fidivr
add
inc
int3
xchg
pusha
in
cli
movs
lock
ds
xchg
adc
(bad)
mov
ja
inc
test
nop
inc
jmp
add
out
mov
pop
xor
das
jnp
(bad)
jle
add
lds
test
daa
fisttp
inc
ins
shr
loopne
cld
hlt
xchg
sbb
and
cdq
pop
fild
sub
cmp
movs
dec
push
fistp
mov
shl
fsubr
adc
movs
ins
aad
ret
dec
add
and
outs
jmp
lock
dec
pop
sub
sub
ja
lods
je
fdivr
stos
push
add
leave
ins
add
cmps
mov
xchg
fist
xchg
nop
pop
(bad)
fcmove
sbb
sbb
push
sbb
mov
mov
push
iret
push
adc
sti
jmp
rcr
fisttp
movs
shl
push
push
idiv
jnp
pop
scas
imul
stos
adc
mov
xchg
push
das
in
push
lds
ja
mov
inc
mov
add
addr16
idiv
out
xor
scas
pop
pop
pop
fstp
fmul
and
push
mov
dec
invd
js
and
test
gs
sbb
mov
out
in
out
sahf
and
cmp
pop
and
sub
(bad)
leave
mov
repz
sahf
adc
mov
dec
div
mov
sub
mov
pop
and
adc
jmp
adc
je
test
jne
jno
mov
mov
dec
in
outs
push
rcl
push
and
call
ins
ins
xor
or
mov
dec
xor
mov
push
pop
movs
mov
adc
xchg
call
(bad)
adc
daa
retf
scas
outs
stc
mov
add
xchg
cmp
pop
pop
out
call
in
gs
sti
pop
jp
jge
in
pop
lock
pushf
jb
pushf
dec
call
ret
addr16
dec
stos
in
(bad)
lock
cmp
lahf
ror
gs
movs
or
jae
ds
and
out
mov
test
or
imul
and
add
fnstsw
push
sub
ja
mov
fs
in
sub
sbb
jl
js
enter
std
sub
push
les
(bad)
int3
push
or
clc
fild
or
xchg
fnstsw
fdivr
in
pop
jno
int
nop
clc
iret
data16
popa
int3
rcr
repnz
test
or
jae
pop
ins
dec
repnz
les
sbb
lods
test
sbb
mov
push
into
push
into
ret
loopne
lds
outs
inc
add
push
in
dec
xor
mov
ins
lods
mov
push
es
pop
dec
mov
int3
pop
mov
jmp
cs
loop
push
xor
je
hlt
adc
sub
jae
mov
ror
aam
pop
mov
enter
inc
push
jmp
mov
push
inc
cmp
and
out
sbb
xchg
xchg
fucomip
pop
pop
(bad)
sub
add
sub
adc
dec
hlt
inc
das
inc
xchg
fwait
aam
inc
jno
xor
cmp
push
icebp
add
mov
mov
push
xor
ja
repz
mov
cmp
xor
ja
cmp
fidivr
xchg
ins
jmp
cdq
adc
dec
ja
lea
adc
mov
jne
add
xchg
(bad)
jmp
gs
xor
and
push
cdq
jb
(bad)
push
sahf
mov
aaa
pop
je
add
pushf
mov
mov
test
mov
mov
dec
jg
popa
xor
test
and
rcl
mov
and
and
call
movs
push
pop
cmps
mov
add
add
jmp
test
or
adc
test
jbe
push
scas
ret
mov
xchg
lods
ret
aad
jg
sub
adc
call
ret
cmp
ret
fwait
jne
add
push
(bad)
addr16
adc
das
sbb
push
nop
les
aas
movs
cmps
mov
adc
xchg
nop
adc
mov
xor
add
mov
push
push
sbb
jmp
sub
push
xchg
cmp
es
push
test
cli
adc
gs
fdivr
repz
push
jmp
mov
xchg
outs
popf
les
stos
adc
popa
adc
sahf
dec
popa
add
mov
pop
xchg
adc
das
mov
jmp
xor
and
push
cli
and
bound
stos
call
mov
fidiv
rcl
lahf
mov
test
fild
or
push
xor
gs
sub
cmp
imul
and
push
ins
jecxz
inc
mov
pop
fwait
mov
mov
in
outs
xchg
push
ficomp
add
int
inc
inc
push
dec
in
test
neg
push
and
sbb
pop
sbb
inc
push
aaa
xchg
pop
fwait
imul
movs
xchg
test
jns
not
in
sub
pushf
les
cdq
cmp
in
cmp
mov
xor
xchg
leave
adc
jne
repnz
and
mov
int3
push
out
push
sbb
mov
xor
push
sub
pop
add
shl
inc
ins
sub
aad
fbld
sbb
int
dec
movs
cmp
out
xchg
jg
mov
nop
idiv
aaa
in
repnz
xor
pop
or
in
xchg
or
jns
adc
xor
out
mov
or
cmp
add
in
call
mov
ud1
fs
out
cmp
mov
add
mov
inc
and
imul
jbe
jbe
and
cmps
and
mov
std
int
push
fwait
jp
inc
sbb
or
cld
jno
sahf
and
pop
dec
sub
int3
pop
push
push
test
dec
stos
aas
push
aad
ja
mov
into
int
into
jmp
pusha
mov
sbb
mov
lods
imul
push
ins
xor
xchg
sbb
xor
mov
xchg
push
dec
outs
sar
and
jns
pushf
sar
mov
cmp
pushf
add
mov
(bad)
jno
loopne
xchg
dec
xor
jmp
loope
or
pop
cmp
mov
ret
mov
dec
shl
inc
jg
pop
cmp
push
(bad)
div
sbb
sub
push
mov
and
and
enter
mov
lahf
push
mov
je
mov
es
cmp
cmp
jne
inc
sbb
out
sbb
movs
call
add
js
jns
data16
cmc
inc
mov
pop
fwait
(bad)
fisub
inc
jmp
pop
ja
test
jne
mov
lds
push
std
iret
sub
into
in
mov
scas
mov
mov
mov
loop
sbb
jge
ret
test
cmp
cmp
repnz
test
cmp
fs
xor
stc
mov
data16
and
test
int3
shl
add
cmc
fidivr
sub
aas
sbb
jmp
addr16
and
cli
mov
test
dec
add
mov
jns
mov
push
sub
sbb
fwait
rcr
popf
or
test
dec
movs
inc
shl
aas
adc
jg
and
pop
adc
test
mov
aad
mov
inc
scas
mov
mov
mov
in
jmp
jmp
out
pop
repnz
push
sub
pop
inc
scas
test
jo
in
xchg
and
jae
adc
iret
and
mov
lods
sbb
jg
cli
in
ficom
xor
stos
pop
lds
add
inc
xchg
mov
in
xchg
xchg
dec
mov
mov
inc
sbb
fwait
add
gs
test
push
jmp
cmp
dec
shl
ret
pop
sti
gs
adc
(bad)
out
mov
sub
xchg
pop
dec
(bad)
push
int3
rol
in
adc
push
rcr
sub
or
adc
aas
push
xchg
jmp
fdecstp
add
mov
(bad)
jp
daa
fcom
push
push
mov
cmp
or
bound
jge
cmc
jle
lods
add
sbb
loopne
ret
sahf
out
lods
div
in
mov
sbb
ror
out
fs
dec
inc
add
xchg
jmp
mov
jmp
adc
mov
aaa
pop
(bad)
sub
repz
jmp
lock
scas
cmp
dec
mov
pop
loopne
fbstp
test
dec
inc
inc
bound
es
shl
lock
dec
jmp
inc
in
jmp
or
retf
sub
pop
callw
push
or
push
and
outs
push
sbb
in
sbb
mov
lods
dec
ins
cmp
cmps
lods
and
scas
ds
push
ins
movs
add
jmp
xor
(bad)
fsubr
daa
mov
add
adc
retf
jg
jmp
neg
fdiv
push
xor
dec
scas
mov
mov
xlat
dec
sar
ds
inc
inc
fst
iret
adc
sbb
jb
lahf
movs
packssdw
(bad)
das
mov
test
push
mov
sbb
push
inc
out
sub
inc
push
inc
pop
shl
mov
js
pop
(bad)
popf
pop
sahf
mov
test
pop
out
fs
test
movs
hlt
add
inc
or
mov
ret
xor
out
mov
sub
sbb
std
dec
jno
cmps
xor
rcr
or
inc
clc
cmps
(bad)
jg
aas
xchg
inc
ror
mov
bound
mov
data16
push
and
rcr
and
mov
add
xchg
iret
pop
mov
adc
jecxz
lds
push
lods
mov
push
cmps
and
sbb
xchg
fisttp
or
xchg
and
shr
mov
sub
ds
xchg
mov
xchg
psubb
sub
jmp
jmp
xor
sbb
iret
pop
test
dec
pop
mov
sbb
pop
mov
mov
je
jb
pushf
ror
loopne
repz
ror
test
mov
xor
jno
frstor
iret
imul
lods
xlat
inc
adc
outs
je
dec
pop
adc
inc
scas
jb
addr16
mov
icebp
mov
nop
xor
test
(bad)
imul
push
(bad)
add
(bad)
fisubr
xchg
repz
sub
imul
jge
outs
rcl
loope
mov
adc
sar
aas
mov
pop
adc
pusha
xchg
inc
fldcw
fild
xchg
repnz
(bad)
pop
inc
push
sahf
or
out
and
aam
dec
pop
pop
sbb
dec
xor
aam
fst
sti
inc
(bad)
rol
repz
lods
(bad)
(bad)
jnp
test
dec
sub
popa
fs
mov
ret
push
and
ror
xchg
sbb
pop
sub
or
adc
sbb
sub
pushf
ret
add
inc
and
mov
mov
push
sbb
add
call
inc
cmp
lea
scas
(bad)
mov
loop
inc
mov
push
xchg
push
sbb
mov
xor
mov
cmp
mov
jge
pop
cmp
test
pop
in
bound
mov
sub
mov
nop
fldenv
sbb
push
je
sub
and
mov
lock
pop
fdiv
loope
pop
icebp
cmp
cmp
pop
add
loopne
inc
in
enter
mov
pop
jns
stos
sti
pop
adc
pop
imul
ins
cs
mov
inc
sub
(bad)
pop
pop
call
in
das
(bad)
repz
aaa
push
iret
adc
(bad)
in
or
sbb
loopne
fild
mov
mov
jg
sbb
lods
cs
addr16
into
push
push
pop
dec
cmp
cmc
pusha
ins
adc
int
jbe
retf
xchg
push
add
gs
aaa
and
sbb
mov
std
jmp
repnz
sbb
sub
xchg
daa
pop
sbb
or
into
jmp
adc
pop
loopne
lock
dec
sbb
inc
rol
push
add
std
adc
mov
ret
out
mov
push
adc
out
test
popa
push
inc
push
jge
pop
mov
xchg
xor
mov
pop
xchg
ret
cmp
push
mov
and
and
inc
mov
push
test
push
int
pop
sub
sahf
fcmovu
xor
pop
movs
stos
out
ror
push
cmp
add
scas
push
adc
lods
and
pop
mov
adc
sub
ja
pop
out
xor
fldcw
sahf
retf
cmp
or
add
or
jns
mov
out
fidivr
hlt
std
test
inc
leave
fwait
and
pop
mov
dec
and
adc
adc
stos
cli
(bad)
shl
dec
push
cdq
cmc
daa
jmp
test
(bad)
icebp
and
mov
or
sub
les
jl
xchg
cwde
int
imul
movs
jae
sub
out
push
mov
aam
push
mov
pop
pop
shl
rcr
cmp
arpl
sub
push
ins
cli
shr
push
xor
push
and
in
addr16
mov
mov
pop
pop
jmp
inc
cmp
jo
(bad)
adc
pop
sub
jmp
es
pop
aam
mov
pop
sbb
test
xor
cld
bound
pop
add
into
sbb
repnz
add
(bad)
lods
cmc
call
pop
dec
daa
sub
ret
mov
stos
in
cld
push
xor
xchg
aad
nop
sub
sbb
aas
push
fisubr
sub
or
jmp
and
loope
inc
adc
jecxz
or
lahf
fcmovnb
mov
dec
daa
sbb
mov
sub
mov
sub
ds
stos
push
push
retf
lds
retf
jp
push
rcl
das
repnz
sbb
add
pusha
jp
adc
scas
push
cli
pusha
dec
(bad)
xchg
push
dec
xchg
xor
fild
scas
dec
ins
inc
inc
mov
adc
xor
icebp
sbb
sahf
int3
les
pop
data16
out
mov
das
loope
mov
push
mov
push
mov
or
and
xchg
cwde
sub
jp
push
bound
in
jl
or
and
push
hlt
lods
mov
xchg
or
pop
stos
vxorps
fdiv
dec
sar
and
out
cmp
fdiv
pushf
xor
and
mov
pop
loope
adc
lahf
jns
mov
mov
repnz
xor
or
inc
stos
pushf
sub
jns
xchg
mov
loope
add
push
mov
idiv
inc
jae
or
pop
push
jo
dec
sti
adc
cmp
fdivr
push
pop
fucomip
xor
sub
fs
push
push
jecxz
das
pop
mov
xchg
sbb
mov
jo
and
loopne
pop
push
or
mov
mov
mov
fld
(bad)
es
jns
adc
cmps
out
cmps
imul
push
push
cld
adc
cld
std
jmp
movs
push
shl
xor
fisttp
out
(bad)
sub
xor
leave
cdq
loop
fdiv
rcl
sbb
add
jge
pop
push
and
lea
arpl
or
inc
and
enter
inc
rol
pop
aas
sti
je
stc
js
dec
dec
inc
add
sbb
sbb
xchg
adc
dec
or
call
cmp
movs
dec
addr16
mov
repz
dec
adc
jg
call
in
fwait
add
sbb
jle
cmp
push
loop
cmp
inc
mov
xchg
stc
jbe
xlat
out
jne
(bad)
test
pushf
ins
jmp
and
inc
jp
dec
dec
dec
pop
(bad)
fcom
adc
daa
xchg
scas
mov
test
jbe
leave
jo
xchg
or
mov
push
cmp
and
sti
cmp
loop
cmp
xchg
xchg
lea
test
sub
jge
(bad)
xor
pop
cmp
sar
inc
out
repz
cwde
cmp
es
or
mov
push
fadd
mov
sub
es
ss
cmps
jle
pop
lahf
popf
ret
pop
int3
mov
mov
xor
push
jmp
jp
and
jge
cmp
mov
in
ds
xor
aad
or
inc
aas
shr
xchg
ficom
fchs
ja
add
xor
fnstsw
outs
adc
mov
mov
stos
fucom
cdq
imul
pusha
aaa
cmp
shl
xchg
pushf
fs
das
cli
dec
ins
jecxz
jg
test
adc
push
pop
or
mov
movs
dec
aaa
pop
push
or
aad
shr
sahf
push
dec
call
adc
mov
enter
xlat
fisub
xor
and
sti
aam
in
prefetch
cmp
adc
inc
into
push
adc
stc
sub
nop
sahf
push
je
add
arpl
rep
mov
popa
pop
pop
in
mov
fldenv
fwait
jmp
gs
xchg
mov
std
mul
imul
pop
push
mov
mov
push
jge
scas
in
(bad)
jno
mov
push
sti
xchg
inc
loopne
dec
ins
xor
call
not
sub
sbb
(bad)
lods
sub
adc
push
lods
dec
mov
add
int
dec
fwait
jle
push
dec
adc
repz
push
iret
fs
cdq
add
mov
pop
fiadd
mov
xchg
loope
call
cmp
sbb
inc
test
jecxz
mov
jp
fistp
mov
push
clc
stos
sbb
movs
mov
(bad)
(bad)
lods
loope
dec
pop
outs
repnz
mov
bound
xchg
adc
ds
clc
aam
stos
add
inc
fwait
jecxz
push
sahf
add
mov
jae
push
push
gs
ins
aam
fcomp
jns
repz
mov
addr16
inc
adc
bound
pop
mov
ds
fild
sar
mov
or
mov
and
loope
stc
das
mov
cmps
out
cli
xchg
call
in
movs
inc
sub
jne
xlat
cmc
or
mov
daa
(bad)
ja
cmp
mov
jmp
dec
lods
pop
xchg
lock
jle
les
or
jb
sub
movs
daa
jp
mov
jns
pop
sub
(bad)
xor
lods
bnd
iret
imul
fwait
cmc
fstp
jl
aad
mov
sbb
push
icebp
das
mov
daa
iret
xor
xchg
fdivr
pop
outs
cmp
dec
cmp
push
out
sub
addr16
ja
cld
xchg
scas
jmp
xchg
cmp
repnz
retf
movs
sub
sbb
xchg
(bad)
sub
sub
popf
sbb
in
bound
leave
out
jo
aam
push
daa
xadd
cmp
sahf
push
mov
shl
xchg
pop
ins
sbb
dec
repnz
scas
adc
mov
in
inc
repnz
sub
dec
and
in
sub
in
ins
or
jnp
cs
jecxz
not
neg
enter
dec
aaa
xchg
ds
jae
mov
xchg
pop
fdivr
addr16
lahf
neg
js
mov
nop
cs
cmp
sbb
es
xchg
enter
mov
clc
push
shl
add
push
ds
hlt
out
mov
jmp
pop
mov
ret
cmp
data16
cmps
mov
into
push
aas
call
mov
cmp
stc
jp
test
mov
pop
pop
sbb
scas
cmp
test
push
jns
ds
icebp
adc
cwde
mov
sahf
icebp
rcr
sbb
popa
outs
xor
out
push
xchg
aam
sub
mov
inc
xchg
cli
int
xor
shr
mov
add
call
mov
and
cmp
mov
lock
pop
fwait
je
fbstp
in
(bad)
pop
push
hlt
inc
mov
enter
pop
icebp
dec
xchg
pop
inc
(bad)
test
inc
imul
out
inc
adc
sbb
push
xchg
fsubr
xchg
sbb
popa
xor
clc
pop
mov
scas
mov
mov
test
mov
not
das
fs
sbb
pop
xchg
push
mov
sub
aaa
leave
iret
stc
xchg
jne
popf
add
(bad)
dec
add
sub
out
inc
add
aas
sahf
inc
movs
jecxz
ins
pop
fs
repz
rol
call
and
(bad)
fcmovu
cmp
inc
xchg
mov
inc
and
pop
adc
mov
ja
call
sbb
daa
cmp
sbb
cdq
mov
mov
cmc
xor
cmp
into
in
pop
push
xor
inc
mov
mov
es
ss
push
jo
xchg
cmp
mov
fild
(bad)
les
sti
pop
mov
fisubr
or
cmp
pop
fwait
or
dec
fwait
xchg
lods
inc
popa
test
clc
pop
out
mov
fist
mov
pmullw
pop
sub
xchg
sti
fsubr
push
clc
test
xchg
add
mov
xor
repz
test
pop
cdq
jp
scas
pop
test
mov
(bad)
dec
pop
xchg
pop
aaa
test
mov
mov
imul
call
(bad)
aaa
add
push
imul
push
mov
lea
(bad)
(bad)
cli
adc
jns
add
imul
push
adc
xor
and
inc
imul
jb
jns
loopne
fld
cmp
mov
xchg
add
out
pop
popf
mov
dec
cmc
mov
test
lds
inc
and
cmc
xor
pop
rcr
dec
addr16
mov
jg
int
cmps
jmp
xchg
or
mov
bswap
out
cld
inc
ret
adc
dec
jp
dec
test
test
dec
pop
cmps
sub
mov
cmp
xchg
add
mov
adc
add
adc
or
(bad)
ja
add
mov
and
dec
cmp
aaa
cmp
popf
adc
addr16
aaa
adc
fstp
mov
loope
sbb
dec
jmp
mov
int3
xchg
mov
stos
jg
mov
inc
ret
daa
push
jno
mov
imul
jmp
outs
push
inc
jl
test
popf
shl
xchg
xlat
push
hlt
jno
mov
mov
sub
jmp
lahf
xchg
test
cdq
push
cli
mov
lock
and
nop
xchg
(bad)
sbb
ins
mov
pushf
mov
inc
shr
iret
sub
add
xor
hlt
es
(bad)
mov
cld
dec
mov
pop
(bad)
inc
(bad)
mov
cdq
jmp
xchg
repnz
stc
push
out
adc
addr16
in
mov
dec
mul
(bad)
sbb
jg
aam
jle
and
jl
bnd
cld
and
test
jb
xchg
adc
inc
cmp
push
mov
or
stos
or
into
push
sbb
push
mov
xchg
mov
out
xor
les
xchg
sub
ret
call
shr
adc
push
pop
inc
mov
(bad)
(bad)
adc
or
ins
jae
test
loope
stc
sahf
and
jmp
fdivr
add
xchg
or
dec
test
mov
fstp
ret
push
bound
and
push
mov
mov
jge
pop
push
rol
xor
xor
pop
adc
shl
popf
xor
ret
lds
pop
(bad)
jge
jne
iret
dec
arpl
push
push
mov
xchg
push
fst
ja
xor
sbb
push
mov
in
aam
cmp
cmp
outs
jno
je
push
mov
xchg
cli
bound
loopne
aad
in
mov
mov
clc
add
push
sub
jp
pop
mov
jmp
mov
int3
ja
test
movs
sbb
ror
test
push
mov
adc
push
js
pop
lds
push
and
out
dec
test
fst
pusha
(bad)
sti
sti
add
call
loop
inc
mov
xchg
out
xchg
sti
inc
ret
aas
jb
mov
push
jle
add
pop
sbb
xor
and
inc
jmp
(bad)
(bad)
fisttp
mov
into
sti
(bad)
adc
or
mov
push
repnz
movs
les
call
pop
cmps
fdivr
dec
mov
inc
add
sti
pop
int3
cmp
ja
push
adc
jno
icebp
dec
push
mov
jb
cmova
movs
pop
pushf
imul
dec
dec
repz
mov
stc
pop
ins
popf
and
lds
mov
jg
jb
out
cmp
push
sub
or
fnsetpm(287
mov
push
(bad)
sub
stos
mov
movs
inc
loop
dec
adc
xor
hlt
(bad)
enter
(bad)
adc
mov
and
in
jnp
mov
fnsave
add
jns
and
je
popa
pusha
sbb
dec
jl
cdq
hlt
jne
mov
in
scas
add
hlt
test
loopne
in
loope
test
(bad)
movs
sub
fist
pop
shl
sbb
cwde
enter
sub
add
add
mov
daa
mov
enter
addr16
call
retf
repz
xchg
sar
sbb
rcr
pop
aad
jo
ficom
icebp
xchg
xchg
fst
push
jl
push
mov
xchg
mov
out
pusha
(bad)
sbb
and
test
stc
cmp
pushf
jno
pusha
inc
or
inc
dec
push
sub
nop
dec
mov
add
fwait
stos
lock
js
adc
icebp
ins
jmp
and
xchg
pop
ds
xchg
dec
and
inc
mov
add
push
adc
ss
xchg
cwde
nop
js
sub
aad
stos
(bad)
fisub
mov
arpl
rcr
dec
jle
pop
daa
comiss
fwait
ins
pop
inc
outs
mov
call
push
mov
cmp
pop
push
lods
fidivr
mov
add
into
xchg
add
repnz
test
dec
or
lock
call
mov
push
aaa
lahf
int3
pop
shl
mov
nop
rcl
cli
cmc
loope
sub
add
and
repnz
push
jmp
mov
ins
jle
into
mov
push
mov
sub
cmp
push
jne
test
and
cdq
je
test
pop
dec
nop
addr16
pop
sub
das
retf
fist
fadd
or
ds
xchg
lock
add
sbb
fwait
nop
sbb
push
cmp
xadd
shl
dec
jns
jg
jne
sti
pop
aaa
mov
jle
bound
push
(bad)
retf
ss
sub
pop
xor
add
xlat
mov
mov
jmp
addr16
icebp
jp
jge
jo
fsubr
add
dec
sub
jno
ror
sub
or
jo
mov
mov
fs
mov
fst
imul
mov
adc
or
pop
jle
inc
xchg
adc
mov
jmp
fmul
adc
sub
dec
mov
icebp
fwait
mov
xor
fwait
sbb
shl
hlt
scas
ins
out
pop
pop
xchg
dec
inc
data16
lahf
icebp
(bad)
mov
push
rcl
aas
add
or
gs
jb
out
(bad)
(bad)
xlat
aas
retf
outs
push
test
loopne
add
push
mov
mov
loope
mov
sub
cld
inc
and
mov
push
popf
xor
push
xchg
mov
mov
rol
dec
lods
arpl
cmp
mov
mov
pushf
out
jnp
cmp
scas
or
shl
inc
fxch
cmp
hlt
imul
cmp
stc
sbb
add
inc
movs
xchg
ins
jg
popa
aad
movs
in
xlat
test
mov
out
movs
and
add
fcmovnb
xor
push
sub
adc
outs
ds
stos
loop
test
xchg
repnz
cdq
ret
repz
and
aad
cmps
cmp
out
inc
xor
lock
and
int3
push
test
fldenv
loopne
retf
mov
loopne
pop
das
dec
dec
scas
sub
cmp
out
xor
or
mov
jb
xor
sbb
xlat
adc
sub
inc
(bad)
xor
fdivr
dec
push
push
aaa
loop
int
rcl
dec
xor
xchg
fs
aas
dec
push
cmp
lods
sub
imul
adc
cmp
fbstp
jae
scas
inc
mov
inc
in
jmp
sub
push
(bad)
xchg
jbe
gs
imul
mov
adc
outs
retf
iret
imul
push
pop
or
call
push
jb
jmp
cmp
out
xor
jmp
mov
push
fmulp
imul
test
inc
push
mov
(bad)
jl
aas
sub
add
int
mov
sub
nop
mov
jecxz
push
sub
xchg
test
je
push
xchg
shl
push
inc
mov
cmp
cli
xchg
aad
inc
push
ja
sar
pushf
xor
call
jle
outs
or
outs
fdivr
aas
ror
pop
mov
clc
and
or
mov
ins
mov
push
pop
sub
and
out
sbb
fwait
sub
inc
or
fisttp
test
div
push
pop
addr16
lea
mov
retf
int
addr16
adc
push
cmp
jle
psubusw
xor
into
into
sub
add
push
(bad)
push
xchg
ja
in
and
rcl
(bad)
jno
fwait
add
call
pop
ins
leave
sub
pop
sar
retf
es
lods
sbb
loop
push
in
fisub
adc
pop
cmps
pusha
movs
jmp
lock
sbb
sub
sub
inc
jns
push
aaa
cmp
sahf
int
jl
in
es
stos
fs
cwde
sbb
hlt
inc
pop
sahf
and
push
push
push
mov
or
stos
push
mov
pushf
inc
mov
and
sbb
inc
inc
push
fisttp
dec
push
mov
hlt
mov
dec
push
cld
lahf
ror
xchg
sub
test
out
jo
mov
xchg
sbb
retf
mov
mov
cmps
aad
ret
ins
jmp
push
xchg
mov
mov
sbb
ret
cmp
ror
push
fsub
mov
icebp
mov
xchg
addr16
(bad)
pop
pop
sbb
dec
ror
mov
adc
push
mov
xchg
mov
outs
idiv
arpl
fdivr
fisub
rcr
sbb
add
rcr
mov
test
test
mov
aam
adc
cmps
xlat
mov
outs
add
or
hlt
adc
xchg
jle
xchg
push
es
cmp
out
adc
pop
ss
sbb
ja
je
sahf
adc
mov
adc
nop
xchg
mov
jnp
imul
in
add
sub
das
aad
shl
stos
jnp
cmp
jno
add
lds
jne
cmps
jb
cmps
and
fcomp
mov
cmps
stc
mov
jge
mov
mov
data16
repz
mov
xchg
scas
bound
fnstcw
(bad)
pop
push
out
jg
in
jecxz
inc
dec
xor
push
adc
push
adc
outs
push
ins
xor
sahf
sbb
jo
mov
call
ret
fisub
add
nop
dec
cwde
outs
lea
mov
dec
inc
xchg
das
xor
dec
ret
loop
inc
lock
mov
dec
mov
pop
pop
ins
jo
mov
mov
out
cs
lods
std
in
xchg
dec
aam
into
lahf
push
outs
jge
mov
push
pop
rol
pop
ror
outs
jns
sub
and
pop
lods
shl
jmp
and
mov
push
dec
mov
pop
cmp
pop
cmp
mov
add
xchg
sbb
fs
(bad)
retf
sub
mov
lods
push
popf
cmp
xchg
cmp
emms
and
je
out
lock
in
test
loopne
mov
mov
push
add
aad
pop
bound
or
push
mov
mov
and
mov
jg
les
test
scas
lea
sbb
sub
sub
iret
mov
lds
fist
rcl
(bad)
sbb
sub
ret
sub
mov
inc
(bad)
dec
dec
jge
rcl
aad
loop
cli
xchg
shl
sub
xchg
stos
out
fisub
fsub
add
call
loopne
pop
cmp
in
ret
ret
iret
out
lock
sbb
out
push
cmp
push
cmp
fbstp
mul
mov
nop
ins
lods
mov
loop
imul
push
shl
idiv
fld
inc
ins
adc
mov
sub
lahf
or
(bad)
nop
pop
and
sbb
push
bnd
lods
pusha
test
dec
pop
pushf
inc
sar
xor
popf
and
stos
inc
shl
sub
inc
aaa
sub
repnz
stos
aas
(bad)
loope
repnz
test
xor
mov
sub
lods
mov
aad
shl
sbb
(bad)
pop
repz
bound
in
(bad)
ret
and
and
sbb
out
mov
inc
or
pop
stc
jnp
xchg
mov
test
push
add
adc
sub
scas
pop
out
xchg
das
(bad)
pop
outs
jmp
mov
mov
mov
pop
cmp
pop
sub
daa
(bad)
fimul
lock
jge
xor
xor
cmps
mov
in
adc
push
ins
(bad)
mov
cmp
(bad)
arpl
aas
lock
xchg
pusha
aad
or
cmps
mov
or
not
adc
mov
push
xor
pop
and
bts
jnp
icebp
sub
cli
inc
cmp
push
and
cmp
or
add
push
xchg
leave
pushf
xor
retf
push
cmps
cmps
mov
sbb
retf
xchg
mov
dec
je
jg
add
adc
retf
pop
je
mov
outs
loop
loopne
mov
lahf
add
jl
rcr
(bad)
add
retf
cmp
stc
mov
push
mov
jo
jb
xchg
cmps
pop
sub
stc
pop
pop
loop
mov
inc
jno
lea
pop
(bad)
dec
neg
sbb
out
clc
ret
sbb
mov
stc
stos
xchg
adc
push
jns
jno
pushf
lock
pop
dec
cs
(bad)
lods
jp
test
dec
pushf
adc
adc
inc
xchg
cmps
loop
adc
(bad)
ss
enter
lahf
cld
and
pop
inc
das
rcl
aam
xor
mov
ror
xchg
shr
inc
jl
inc
inc
add
mov
(bad)
push
xchg
test
test
dec
sbb
ja
cmp
imul
mov
mov
cmp
add
inc
xchg
sbb
das
and
jae
jmp
xor
or
aas
mov
add
add
js
dec
push
push
fwait
dec
mov
mov
gs
and
call
leave
neg
cmps
jno
push
push
inc
dec
cmps
mov
add
pop
push
cmp
iret
or
les
das
mov
leave
mov
push
xor
fdiv
aam
jns
fdiv
(bad)
adc
cmp
push
and
dec
mov
push
jp
(bad)
call
por
xchg
dec
fcomi
icebp
test
sub
pushf
sbb
mov
test
adc
cdq
mov
mov
add
sbb
in
fidiv
mov
sub
jnp
rep
std
mov
dec
dec
and
icebp
push
cmp
fcmovb
pop
sub
inc
aas
hlt
aam
retf
ret
js
sub
inc
push
push
jge
sub
jmp
push
jbe
pop
adc
jmp
xchg
jle
in
mov
ins
ins
popa
jmp
push
outs
cli
xor
mov
jmp
(bad)
cmp
xchg
out
add
inc
ret
xchg
es
(bad)
mov
jno
gs
out
ins
ja
repnz
test
bound
shl
pop
sahf
xchg
lods
mov
iret
sbb
jbe
pop
xchg
test
imul
cmp
adc
inc
mov
pop
mov
or
xchg
jmp
dec
div
movs
cmp
mov
aas
and
fistp
ror
cmp
adc
mov
xchg
push
dec
lea
jl
retf
and
and
xor
movs
cmps
cmp
push
xchg
mov
dec
gs
jp
aaa
aam
adc
jge
inc
sub
sbb
js
repnz
loope
mov
mov
xor
ds
dec
fbld
sbb
addr16
xchg
inc
dec
xor
add
mov
icebp
adc
sbb
pop
cmp
push
sub
xchg
jns
mov
mov
fmul
in
pop
out
xchg
dec
add
hlt
test
pusha
inc
outs
aam
scas
adc
add
fld
dec
mov
jae
xchg
jp
jne
and
push
jp
stos
ss
sbb
in
or
xchg
scas
in
sub
or
pop
lods
movs
push
push
addr16
adc
das
fld
pop
cli
mov
mov
outs
lahf
cld
mov
and
pop
dec
inc
fwait
cmp
jmp
in
inc
shl
cwde
sbb
jmp
sub
push
sub
mov
jbe
aaa
fidivr
pop
call
repnz
sub
jp
pop
mov
stos
out
(bad)
mov
imul
test
xchg
scas
(bad)
jno
dec
xlat
dec
push
jno
sahf
loope
fucomip
dec
jmp
mov
sub
clc
cmps
push
or
ja
scas
mov
cmp
add
idiv
inc
or
retf
or
cmp
movs
cmps
cmp
cmp
sub
and
add
add
dec
int
push
cmp
rol
icebp
push
out
cmp
xchg
in
jae
or
stos
(bad)
push
cmp
pop
or
ins
pushf
sub
push
call
xchg
movs
cmps
jmp
cmps
mov
jmp
sub
dec
movs
sub
fbstp
aam
xor
mov
add
out
mov
in
pop
dec
daa
mov
push
pop
mov
add
dec
mov
inc
(bad)
ss
rcl
das
int3
adc
cmovne
xchg
and
mov
ja
imul
xor
fabs
sbb
daa
in
mov
adc
cmp
out
adc
int3
push
inc
test
sti
jnp
mov
cmp
xor
xor
push
dec
jns
retf
sbb
cdq
adc
(bad)
mov
sbb
ret
jno
call
adc
jl
test
(bad)
xchg
pop
movlps
sbb
xor
inc
dec
inc
pop
and
or
jne
int3
shl
dec
pusha
jle
jb
dec
jg
add
aad
(bad)
jns
sub
inc
jecxz
ss
aaa
cmovp
sbb
push
in
mov
jae
sbb
outs
es
mov
adc
out
cmp
ds
pop
mov
mov
aam
cmp
xor
aaa
test
mov
int3
sbb
sbb
cdq
cld
out
and
inc
movs
and
push
lds
add
das
bound
aam
fnstcw
pop
iret
cmovnp
adc
leave
mov
pop
icebp
and
mov
and
pop
sub
cld
and
retf
std
(bad)
jle
mov
mov
mov
cwde
push
sbb
fwait
loop
xchg
mov
out
sub
or
mov
dec
or
pop
sub
cdq
inc
jle
sub
int3
imul
dec
add
das
adc
imul
mov
fninit
ror
inc
pop
mov
fs
mov
ja
test
push
mov
push
mov
out
xchg
mov
or
test
sub
mov
or
jnp
cmp
mov
sbb
int3
not
out
ja
inc
pop
pop
mov
push
xchg
sar
retf
ins
call
xchg
xchg
not
adc
xchg
fisub
popa
and
jnp
adc
icebp
repnz
in
neg
into
mov
push
push
mov
mov
stc
and
jmp
fild
adc
dec
test
sub
test
xor
(bad)
fdivr
or
retf
mov
inc
dec
in
xchg
mov
add
movs
mov
les
mov
lods
xchg
mov
mov
std
dec
jle
dec
or
xor
retf
xor
aaa
pop
and
imul
and
jp
fsub
pop
ret
pop
pop
or
sbb
mov
inc
movs
dec
push
loop
pushf
cmp
in
sahf
jge
stos
(bad)
daa
add
aam
(bad)
cdq
push
push
and
jb
retf
xchg
xor
fbstp
and
test
das
fidiv
push
pop
js
jbe
add
xchg
mov
lods
lds
sub
int
dec
popf
mul
jno
int
cmps
imul
jmp
fld
outs
inc
pop
dec
sahf
call
out
or
fwait
mov
and
fs
add
sub
cmp
in
out
sbb
pop
jnp
mov
call
add
or
xor
mov
jl
push
sbb
fadd
loop
int
dec
or
mov
jge
jae
jle
iret
add
test
push
ret
neg
inc
ret
addr16
call
dec
inc
xor
movs
cli
in
lea
adc
or
shl
sub
xor
adc
nop
call
cmp
jmp
pop
jmp
mov
invd
mov
cmp
xchg
fldcw
(bad)
(bad)
push
es
call
dec
test
mov
push
push
or
enter
or
aam
or
xor
ja
mov
imul
dec
inc
sahf
out
mov
cdq
ins
fbld
daa
aad
ret
mov
jge
outs
mov
push
inc
not
dec
cmc
or
ss
div
adc
aaa
loopne
dec
push
out
mov
push
push
sti
mov
cmp
inc
fs
clc
dec
cli
adc
jmp
mov
sbb
push
adc
add
pop
inc
add
and
and
adc
out
xor
push
test
je
or
iret
fstp
cmp
jp
dec
push
mov
adc
xchg
inc
sub
call
xchg
cmp
cs
out
and
cmp
pop
shr
enter
mov
in
pop
(bad)
dec
div
mov
jmp
leave
dec
adc
lahf
imul
dec
add
or
ds
mov
push
aad
push
mov
fmul
cwde
sar
(bad)
adc
ror
and
dec
int3
jne
pop
adc
fxch
sub
in
repnz
push
push
xchg
lahf
jno
sub
cmp
push
rcl
cmp
bound
mov
aad
pop
jo
adc
dec
aas
xor
shl
pop
dec
scas
dec
(bad)
sbb
out
mov
rcl
mov
jo
or
mov
sti
lea
mov
cdq
adc
mov
xchg
inc
dec
cmp
adc
fwait
pusha
xlat
pop
add
stos
mov
inc
jl
jl
jnp
add
adc
adc
les
jo
jns
dec
mov
mov
neg
add
xor
(bad)
mov
rol
jne
enter
iret
add
inc
dec
lea
scas
fwait
mov
sbb
cmps
pop
sub
cs
add
inc
std
mov
aad
ins
outs
div
push
(bad)
push
fwait
dec
xor
mov
daa
sbb
adc
and
cmps
out
repz
adc
stc
cmp
jl
lds
jl
fnsave
add
xchg
imul
push
cmp
shl
add
and
sbb
jb
pop
sub
scas
cdq
mov
xor
push
mov
jmp
add
sbb
vmwrite
int
mov
adc
leave
mov
(bad)
out
xchg
popf
bound
adc
and
gs
cmp
(bad)
mov
loopne
jnp
outs
add
jl
(bad)
mov
and
imul
mov
inc
ins
cmps
fwait
push
test
repz
out
fist
addr16
les
(bad)
or
xor
jno
add
mov
lahf
xor
xor
pop
clc
(bad)
imul
xor
rol
cli
xlat
aad
xor
xor
mov
sub
pushf
jno
and
dec
mov
push
sub
and
cmp
adc
out
and
mov
enter
mov
cs
not
loopne
mov
ins
xor
fbld
iret
mov
pop
pop
(bad)
sub
sbb
adc
lods
gs
jns
ja
jb
jnp
xor
or
enter
(bad)
imul
clc
pop
std
pop
in
or
aam
mov
js
xchg
je
stc
lfs
xor
cwde
dec
push
mov
outs
and
and
out
out
inc
jae
loop
scas
mov
pop
pop
shl
out
int
pop
dec
mov
loopne
mov
cmps
icebp
jbe
push
pop
rcr
movs
pop
scas
and
stc
ja
sbb
jbe
out
adc
xchg
add
cmps
(bad)
shl
push
frstor
sbb
push
gs
pop
stc
iret
push
dec
sub
shl
scas
rcr
fwait
icebp
or
adc
retf
ss
(bad)
fidivr
cmp
arpl
pop
jcxz
jl
ss
jmp
jge
jae
add
shl
dec
repnz
jb
jo
push
outs
(bad)
push
xchg
sub
daa
mov
mov
add
pusha
xor
fsubr
stos
daa
and
loop
sbb
pop
leave
gs
xor
arpl
xor
lods
rcl
ja
rol
or
shr
ins
aaa
mov
sbb
cmp
(bad)
mov
hlt
jne
push
div
push
test
in
sbb
mul
dec
pop
test
pusha
mov
popa
adc
out
jl
adc
std
cmp
shr
dec
adc
xchg
out
dec
les
arpl
in
mov
test
add
xchg
fs
push
pusha
jl
adc
xor
popfw
ins
cmp
shl
out
cld
aam
scas
pop
jno
or
jb
sub
(bad)
jbe
fcom
xor
dec
fstp
in
es
xchg
pinsrw
sbb
cmp
cs
mov
and
mov
leave
cmp
inc
adc
push
mov
mov
lock
cmp
add
fild
pop
(bad)
dec
and
je
push
mov
sub
push
sti
fcomi
mov
fs
or
scas
mov
push
or
ss
(bad)
sahf
cmp
xchg
lds
push
sbb
adc
mov
fdivr
sub
push
(bad)
pop
jne
pop
mov
sub
jecxz
mov
icebp
out
mov
retf
ror
adc
fld
je
mov
cmp
das
mov
fwait
mov
xchg
mul
sub
mov
int3
js
movs
cwde
pusha
movs
fcom
inc
pop
leave
sub
mov
and
add
xchg
fild
push
sub
dec
aad
ds
(bad)
cmc
adc
dec
inc
pop
imul
hlt
dec
iret
daa
stc
cmc
loop
jl
jb
stos
sub
mov
aaa
lods
popa
inc
mov
pop
pop
mov
js
push
sti
mov
cdq
call
(bad)
fwait
add
js
pop
and
test
mov
add
iret
repz
icebp
hlt
scas
mov
or
mov
xchg
dec
(bad)
mov
ret
in
in
stos
sbb
idiv
mov
push
pop
or
aam
inc
xchg
sub
or
(bad)
call
imul
call
sbb
pushf
test
ret
cmp
mov
ret
dec
out
dec
sbb
dec
push
or
cs
push
mov
dec
mov
cmp
movs
push
jmp
mov
aam
in
mov
retf
scas
jmp
aaa
vpunpcklqdq
lea
iret
cs
xor
mov
or
sti
add
es
adc
mov
push
arpl
pop
shr
int3
pop
mov
jno
xor
dec
ret
retf
arpl
xchg
sahf
xchg
neg
int
jns
das
movs
push
mov
mov
sbb
(bad)
mul
pop
clc
fwait
cmp
adc
iret
aas
dec
ins
xchg
lahf
mov
and
cmps
sahf
sbb
into
(bad)
mov
leave
add
cs
shl
out
jl
ds
pop
cmc
test
adc
push
inc
retf
out
leave
dec
dec
ror
adc
xor
or
jmp
(bad)
in
aad
and
or
inc
mov
inc
jno
push
pop
les
xor
shl
inc
jbe
enter
popf
aaa
adc
je
mov
sub
jo
add
xchg
xchg
fcom
sub
pmuludq
xchg
into
test
xchg
les
xor
dec
and
and
(bad)
movs
out
xchg
fisubr
test
sti
pop
or
xor
adc
mov
fld
(bad)
jecxz
out
fadd
call
pop
pop
pop
push
pusha
cmp
popf
fidiv
mov
lahf
je
or
(bad)
mov
mov
test
cld
out
mov
mov
les
lds
push
or
cdq
hlt
scas
(bad)
cld
ds
add
out
jle
push
push
add
jns
jb
mov
sub
xor
cmp
pop
fistp
imul
cmp
ror
xor
pop
adc
xlat
pop
test
cwde
shl
nop
popf
call
ins
cmp
add
ins
sbb
or
ret
out
jno
mov
test
fld
inc
pusha
sub
out
adc
sbb
sbb
aad
mov
sub
lahf
inc
js
wbinvd
or
(bad)
pop
sbb
pop
lods
adc
scas
adc
aaa
mov
mov
les
pop
mov
in
dec
aaa
movs
stc
pushf
adc
fidivr
xlat
or
inc
mov
adc
pop
mov
adc
loope
imul
in
repnz
xchg
mov
add
repz
call
adc
pop
nop
idiv
cmp
pusha
xchg
pop
and
and
pop
out
push
add
mov
les
xchg
add
xchg
xchg
fstp
test
ret
xchg
loop
inc
inc
std
int
sub
or
cmp
inc
imul
mov
mov
jg
repz
fnstenv
cs
add
or
into
or
add
into
neg
call
fwait
(bad)
dec
data16
rol
mov
push
(bad)
mov
test
retf
push
dec
pop
out
cmp
mov
out
nop
pop
(bad)
loope
dec
loop
mov
xor
mov
dec
fild
fisubr
or
or
ficomp
jbe
dec
loope
cmp
shl
mov
outs
mov
test
ss
mov
adc
add
adc
movs
and
inc
dec
sub
sar
pushf
push
xlat
inc
add
push
pusha
mov
je
loope
(bad)
or
movs
adc
and
pop
ja
scas
jmp
std
stos
call
jl
push
(bad)
sti
(bad)
sbb
inc
out
daa
(bad)
in
or
std
das
shl
mov
pop
retf
lds
call
push
pop
jo
in
add
sub
(bad)
nop
push
sub
inc
daa
xchg
sub
push
ja
dec
add
xchg
add
sub
pop
js
lods
loope
mov
imul
or
push
loop
push
das
scas
arpl
pusha
ret
xor
mov
inc
fimul
dec
add
stos
mov
addr16
pushf
push
aas
loopne
mov
inc
outs
fcomi
cs
push
mov
jp
push
mov
cmc
ins
pop
outs
mov
xchg
sbb
dec
movs
retf
popa
dec
mov
or
inc
pop
js
das
or
scas
data16
jb
stc
mov
jbe
lods
add
xchg
adc
cmp
xchg
out
push
mov
sbb
les
arpl
or
dec
xor
and
inc
repnz
(bad)
scas
mov
sbb
xchg
push
sbb
push
sbb
loop
popa
(bad)
and
out
or
push
jl
into
cli
aad
xchg
imul
or
pop
push
or
sub
and
jnp
push
lock
fdivr
loopne
ror
and
cmp
nop
jno
test
ins
push
and
sub
fs
adc
bound
push
dec
xor
retf
or
mov
jmp
mov
fimul
jae
in
and
imul
sub
push
xchg
mov
loopne
adc
dec
mov
das
inc
push
enter
xacquire
test
push
inc
mov
mov
mov
outs
fwait
xor
xchg
and
inc
or
adc
jge
lods
cmp
dec
js
and
data16
inc
cmc
inc
jge
shl
and
retf
movs
retf
cmp
mov
movs
jo
pop
push
xchg
(bad)
retf
add
ja
cmp
mov
lods
cmp
dec
pop
inc
sub
mov
inc
lea
jge
adc
xchg
repnz
mov
sbb
adc
stos
fld
cdq
push
or
xchg
mov
dec
popf
push
dec
outs
test
push
mov
(bad)
sbb
scas
fwait
add
imul
or
in
add
xchg
add
out
adc
dec
xchg
jmp
loop
gs
call
adc
xor
xor
adc
test
cmp
add
inc
mov
xor
test
adc
frstor
test
cs
jge
inc
and
mov
or
sub
xor
jp
inc
jge
ins
inc
dec
pusha
in
movs
sbb
mov
ret
ret
fs
push
popf
and
add
dec
pop
neg
sahf
adc
and
xor
mov
xchg
mov
xchg
js
add
fld
cmps
dec
mov
add
imul
xlat
mov
aas
jp
or
mov
xor
dec
dec
lds
(bad)
mov
inc
fwait
bound
xchg
mov
jecxz
jmp
sbb
sub
data16
test
add
ret
movs
ret
nop
adc
jb
pop
ss
jne
scas
iret
mov
jbe
ficom
xchg
and
cli
mov
mov
adc
mov
pop
pop
push
and
add
loop
push
sub
jge
push
int3
jle
dec
inc
xlat
jmp
add
icebp
sbb
inc
or
aas
push
cmp
out
dec
dec
add
push
jnp
rcr
ja
adc
sub
mov
xor
push
sbb
xchg
dec
arpl
in
adc
lahf
push
xor
imul
in
jb
cmc
dec
sub
add
es
and
xor
push
fistp
sbb
mov
adc
fwait
call
jo
ror
mov
mov
stos
or
push
sub
xchg
scas
inc
mov
call
mov
mov
or
ins
aad
cdq
cli
leave
mov
ins
repz
mov
sub
jmp
cs
out
jl
outs
push
jb
push
ins
mov
mov
(bad)
in
out
pop
jbe
fstp
aad
retf
loop
and
loope
xor
and
dec
shl
mov
cmp
sub
xor
out
push
jp
test
in
repnz
outs
dec
sub
dec
adc
outs
call
sbb
ficom
jmp
jecxz
leave
add
fiadd
fwait
mov
clc
enter
mov
sbb
and
pop
js
loop
sub
fild
sbb
imul
mov
fstp
mov
ss
pop
push
outs
add
jmp
push
int
call
dec
add
mov
and
push
push
stc
pushf
and
mov
fmul
popf
cmp
rcr
pop
enter
icebp
add
test
xchg
mov
pop
shr
sbb
mov
jmp
(bad)
jge
xchg
daa
jnp
pop
enter
js
mov
dec
inc
loope
mov
add
mov
mov
or
adc
push
jp
push
cmp
hlt
jp
(bad)
pop
out
cmps
push
repz
pop
lds
dec
and
call
inc
jg
test
ret
sbb
sub
das
xchg
inc
cmc
sub
sbb
fidiv
arpl
and
mov
jle
mov
add
sbb
movs
les
push
push
jo
test
mov
imul
xchg
fs
dec
stos
pop
mov
popa
lods
psllw
dec
mov
fadd
fisubr
sub
lods
pushf
cmps
inc
jbe
mov
mov
dec
mov
leave
repnz
cli
std
pop
fcom
pop
jbe
xor
aaa
lods
pop
addr16
mov
out
pop
lock
scas
push
push
imul
aaa
jnp
xchg
mov
add
sbb
dec
jg
lea
ins
mov
aas
mov
cli
cdq
popf
or
xor
inc
icebp
dec
push
cld
or
or
pop
mov
mov
pop
arpl
jbe
out
sbb
and
repz
jb
lock
cmp
ja
xchg
movs
scas
ret
pop
sbb
push
pop
dec
mov
fsub
shr
push
retf
fwait
mov
je
stos
push
sbb
(bad)
iret
jb
sbb
and
fwait
icebp
sub
sbb
stos
adc
xlat
push
cwde
sbb
mov
lock
aaa
jae
mov
fstp
mov
mov
mov
push
lahf
pop
lds
sbb
xchg
jnp
enter
clc
jmp
cmp
mov
cs
repnz
iret
inc
(bad)
jecxz
xchg
popf
test
pop
push
das
push
mov
cmp
push
int3
mov
jnp
retf
fstp
fisttp
sbb
or
jp
mov
outs
sub
stc
test
fs
add
push
push
retf
popa
das
pop
xchg
cmp
push
lods
enter
je
out
stos
loop
ret
fmul
push
add
rol
add
cmp
lock
shl
adc
push
jge
popf
inc
and
lds
pop
cmp
jne
aas
in
les
in
hlt
fmul
aad
call
push
push
mov
cwde
jb
mov
out
xor
add
mov
repz
scas
xchg
mov
popf
cmps
mov
cmps
cmps
add
add
pop
and
js
pop
ja
and
dec
jae
pop
push
mov
and
dec
or
jl
arpl
or
push
push
push
(bad)
xor
imul
pop
jmp
(bad)
aam
sar
cmp
jecxz
fstp
mov
cmp
fidivr
hlt
loope
inc
inc
sbb
cmps
mov
xchg
mov
dec
iret
cmps
cmps
popf
mov
popa
and
in
xchg
loope
mov
arpl
xor
mov
call
sahf
or
int3
(bad)
test
ret
(bad)
or
(bad)
in
lds
jnp
jae
push
cmp
iretw
movaps
scas
inc
mov
push
sahf
out
mov
sub
mov
fs
dec
mov
sbb
jecxz
or
hlt
clc
adc
add
shr
jo
push
and
xchg
retf
call
fdiv
pusha
mov
mov
(bad)
jge
and
jno
bound
push
push
inc
dec
dec
call
mov
sti
scas
adc
dec
movs
cs
out
sbb
iret
(bad)
mov
mov
jp
and
and
in
and
sar
outs
outs
add
cmp
mov
out
xor
inc
sub
or
(bad)
pop
sbb
out
mov
push
jg
jae
pop
fbstp
or
sbb
mov
mov
dec
sbb
mov
and
std
jns
push
adc
push
test
sbb
sbb
aam
cli
lahf
ret
mov
or
jnp
adc
data16
inc
test
pop
sti
retf
in
adc
push
push
sbb
cmps
shr
jnp
movs
pop
push
aaa
cmp
in
and
and
sbb
add
sar
cmp
jg
xlat
(bad)
dec
dec
cmc
cwde
xlat
addr16
in
(bad)
fld
mov
push
push
mov
sbb
outs
mov
pop
loop
xchg
mov
jg
push
sbb
mov
add
xchg
adc
push
adc
test
sub
or
push
call
pusha
(bad)
sbb
inc
adc
rol
popa
das
stc
jmp
repz
aad
jp
mov
add
adc
push
add
nop
push
repz
pop
(bad)
cmp
aas
inc
js
mov
cmp
mov
sahf
pusha
push
sbb
mov
nop
push
add
pusha
mov
cmps
cli
or
jecxz
pop
shl
xchg
sbb
push
out
xor
sbb
xchg
lea
arpl
test
sbb
ror
lods
cdq
lock
pop
mov
dec
out
out
cmps
lds
cmc
mov
jp
xchg
or
jmp
les
push
idiv
xlat
sbb
out
jmp
and
stos
test
in
movs
dec
aam
or
mov
add
mov
sub
repnz
mov
jae
push
inc
in
jno
add
push
enter
imul
sub
lods
xchg
adc
sahf
pop
sub
push
mov
xor
mov
out
xchg
mov
or
mul
das
and
out
mov
mul
or
fidiv
(bad)
cmp
aaa
(bad)
sbb
lds
jbe
jp
leave
popa
inc
or
or
frstor
mov
bound
jb
call
mov
in
dec
mov
mov
and
push
pop
pop
or
fstp
bnd
pop
jns
ficom
sbb
shl
mov
push
mov
jmp
scas
dec
ror
jp
or
mov
dec
xchg
sub
fwait
pop
dec
jbe
out
xchg
pushf
call
movs
int
popa
out
outs
add
scas
ret
mov
dec
mov
adc
adc
jne
add
jmp
cmc
das
push
inc
fcom
ficom
call
pop
xor
movs
sub
or
aam
ss
pushf
add
sub
and
test
stc
and
push
out
jns
jmp
fnstsw
imul
rol
stc
mov
(bad)
or
mul
xor
test
adc
push
ret
and
ja
cld
sub
xchg
scas
inc
rcl
in
and
jmp
pop
pop
inc
(bad)
fimul
sbb
stc
dec
addr16
call
push
(bad)
in
sti
pop
ds
fsubr
sbb
jns
dec
in
popa
cli
mov
dec
aad
enter
test
xchg
or
dec
push
add
movs
pop
pop
in
ja
sub
mov
mov
or
push
hlt
test
inc
arpl
xchg
push
lar
std
dec
push
std
mov
hlt
shl
movs
fwait
cmp
xor
add
add
int
jg
jbe
jle
xor
fwait
sbb
lods
pshufw
jbe
aas
(bad)
push
add
adc
mov
xor
pusha
ret
jmp
cld
call
in
int3
sbb
fcomp
jne
lds
mov
dec
ret
jge
jle
in
or
inc
jae
inc
clc
fsubr
xlat
or
gs
push
repz
dec
push
and
push
xchg
jg
cli
jbe
cmp
add
pop
sub
mov
mul
jl
dec
xchg
mov
mov
int3
xor
lods
xchg
or
imul
and
pop
fadd
fisub
dec
cmp
out
repnz
or
xor
mov
aaa
pop
popa
rol
movs
pusha
cdq
imul
add
in
pop
inc
daa
push
pop
inc
xchg
mov
std
aam
add
jb
xor
or
cmp
icebp
jg
add
addr16
and
out
mov
(bad)
pop
pusha
call
push
xor
pop
cmp
cmp
mov
mov
iret
fisubr
mov
lahf
cwde
mov
cmp
in
pusha
add
inc
outs
into
loopne
jae
sbb
and
xor
dec
xchg
hlt
rcl
sbb
dec
enter
das
das
out
cmp
sti
ss
loopne
(bad)
dec
ins
mov
mov
aas
dec
mov
push
in
and
inc
xchg
dec
add
mov
call
mov
dec
lods
test
in
(bad)
add
sub
push
jmp
ja
xor
push
in
(bad)
and
ds
mov
fdivr
pop
mov
(bad)
xchg
mov
into
inc
xor
push
rol
into
mov
ss
pop
jae
adc
cmp
std
stc
stos
js
ja
or
shr
jbe
push
ins
sbb
lds
cmp
pop
jb
jl
test
and
mov
addr16
jae
push
cmp
popf
cdq
mov
adc
xor
inc
adc
dec
imul
mov
cmp
(bad)
push
(bad)
cmp
and
jmp
leave
mov
push
popa
rcl
push
add
aam
shl
es
mov
cdq
cs
add
jo
sbb
jbe
out
stos
sbb
or
test
xchg
out
adc
retf
out
ret
fs
cli
inc
fdiv
rcl
xor
xor
pop
pop
cmps
dec
cmp
mov
shl
sahf
jecxz
sahf
or
mov
loope
mov
pushw
cmp
jbe
sub
ret
pop
push
xchg
mov
mov
pusha
add
scas
ret
mov
movs
push
daa
mov
adc
pop
cmp
sub
dec
je
dec
outs
cmp
ffreep
jns
xor
repnz
cmps
mov
xchg
jmp
dec
iret
dec
hlt
das
in
mov
fwait
add
xor
push
push
fstp
inc
loop
test
bound
inc
mov
stos
jne
gs
xchg
fxam
data16
sbb
sbb
sbb
xlat
inc
add
cmp
pop
and
ds
xor
and
sub
call
fisub
add
pop
adc
lahf
push
xor
xchg
ja
fisttp
loope
cs
lds
or
pop
mov
icebp
fs
mov
mov
sub
xchg
imul
xor
repz
dec
mov
leave
cmp
jmp
jb
mov
lock
xchg
inc
je
int
jae
add
xor
sti
xchg
mov
dec
mov
push
enter
inc
adc
gs
pop
push
jmp
sbb
mov
(bad)
scas
sub
and
outs
scas
and
fdivr
inc
xor
lods
or
out
push
push
pop
int
push
enter
in
test
arpl
(bad)
fild
jle
xchg
(bad)
xchg
dec
push
fcomp
or
aad
nop
fstp
mov
mov
jl
xlat
dec
cmp
lods
jns
imul
cli
mov
aad
retf
sbb
leave
mov
loopne
push
test
(bad)
arpl
retf
(bad)
sbb
mov
jg
test
sbb
das
std
inc
sub
pop
mov
mov
pop
sbb
(bad)
mov
fs
push
sbb
mov
jp
inc
(bad)
sub
outs
(bad)
mov
(bad)
call
fs
loope
repz
dec
icebp
jae
jmp
dec
mov
ja
loopne
jne
stos
and
push
fsub
jle
sbb
pusha
mov
out
out
ss
inc
xchg
(bad)
pop
jle
(bad)
out
dec
and
sub
out
fwait
out
sbb
gs
retf
cmp
xor
lea
call
dec
push
in
ins
sbb
jnp
ror
dec
mov
dec
popf
fwait
add
mov
push
sahf
(bad)
sar
sar
pop
cld
mov
pop
mov
lods
xchg
gs
push
inc
test
js
cmp
pop
cmp
cmp
xchg
aad
call
xor
sub
shl
inc
add
movs
jo
ret
jns
lock
hlt
and
jmp
js
sub
fwait
mov
adc
jmp
xor
outs
push
mov
or
mov
jle
xor
in
lods
jo
mov
jnp
std
push
sti
(bad)
(bad)
push
aad
or
xlat
sbb
xchg
imul
jp
and
jg
inc
popa
push
adc
stos
neg
rcr
popa
xchg
mov
jecxz
popa
(bad)
(bad)
cmp
mov
mov
or
test
(bad)
mov
out
lea
out
push
stc
icebp
pusha
jbe
mov
(bad)
movs
(bad)
adc
sub
cwde
les
sbb
pop
pop
jns
fadd
imul
sbb
arpl
push
stos
jle
retf
xor
or
(bad)
jae
js
push
xor
fcomp
pop
test
jmp
test
retf
shld
jo
cmp
loope
in
mov
imul
sar
pop
dec
push
(bad)
(bad)
(bad)
and
outs
jl
mov
fucom
out
sub
sub
pusha
sub
mov
out
push
xchg
dec
and
mov
dec
cmp
pop
cli
push
pop
das
pop
push
rol
add
mov
fnstenv
das
sbb
adc
bound
sahf
inc
repnz
cli
out
mov
sub
retf
arpl
push
dec
loope
mov
es
aaa
adc
mov
sub
adc
mov
push
mov
das
cmps
aas
stc
out
or
ins
stos
jp
bound
push
ret
cmp
xchg
xchg
mov
popa
jns
mov
push
(bad)
sar
adc
stos
lock
cwde
xchg
or
inc
adc
push
dec
je
and
in
test
push
fcmovne
es
in
pop
cmp
out
jbe
sbb
mov
dec
into
sub
stos
jb
es
fsub
push
rcr
mov
test
int
sub
nop
push
jmp
das
leave
sub
mov
push
xor
scas
jg
jnp
mov
call
mov
inc
jecxz
sub
sti
dec
xlat
and
sbb
inc
popa
xchg
or
cmp
inc
lahf
mov
retf
inc
jmp
addr16
xor
xlat
inc
fild
jb
mov
cld
cmp
lods
push
jns
mov
dec
dec
mov
movs
mov
jae
das
and
std
sbb
pop
in
movs
pop
and
mov
cmp
adc
gs
and
(bad)
jmp
pop
setns
and
mov
xor
ins
mov
dec
out
mov
mov
add
movs
pop
popf
cmp
and
icebp
jge
call
test
and
pusha
mov
and
sub
mov
xor
jle
cs
jno
dec
jmp
test
ins
fimul
dec
fnstsw
fist
sub
movs
aad
jne
mov
mov
fwait
cmps
xchg
fwait
mov
lds
cwde
dec
je
jmp
inc
mov
inc
cs
jmp
fwait
and
pop
sbb
pop
repz
aam
jle
popf
data16
int
fisttp
ror
mov
push
add
mov
mov
pop
call
cmp
push
add
sub
xor
retf
push
mov
inc
adc
xor
sub
fwait
test
xor
jp
ficomp
sub
std
jae
jo
cmp
or
mov
xor
sahf
adc
jl
out
ja
imul
(bad)
int
add
jmp
fmul
clc
push
mov
imul
push
or
sbb
ds
push
jle
dec
in
jno
not
loop
ret
xor
movs
shl
or
xchg
mov
cmp
js
(bad)
ret
shr
int3
mov
mov
pusha
cwde
push
dec
inc
popa
aad
mov
js
dec
clc
dec
lock
movs
lods
jg
popf
and
shr
mov
and
in
jbe
jns
xchg
push
dec
jb
jl
sub
ins
inc
shl
jbe
add
sbb
xor
mov
dec
xor
xchg
inc
sub
sbb
inc
repz
jae
into
xchg
xchg
mov
pop
sub
dec
xor
inc
mov
push
test
enter
test
std
iret
sbb
xchg
or
mov
ins
jp
dec
sub
outs
mov
push
jecxz
sub
adc
mov
out
stos
cmps
pop
(bad)
mov
int
mov
out
div
xchg
and
sub
in
and
bound
mov
out
ins
ins
jns
test
cmp
add
outs
lds
jecxz
sbb
popa
popf
pop
(bad)
cld
test
push
out
ja
add
mov
jns
jmp
cdq
test
std
dec
cmp
xchg
lds
test
add
scas
jb
xor
sahf
and
push
shr
in
jg
dec
xor
fimul
push
dec
pop
cmp
jmp
cmp
js
es
mov
lds
sbb
inc
movs
ja
std
out
enter
pop
xchg
push
pop
movs
xor
jno
fcmovu
add
cli
test
outs
ret
add
mov
test
pop
adc
add
cmc
sub
popf
sbb
push
cmp
mov
sar
adc
or
sub
dec
pop
jne
lock
in
jl
adc
mov
lea
outs
inc
jae
mov
int3
imul
pop
sbb
mov
cdq
push
fwait
xchg
jo
push
inc
pop
mov
jnp
in
icebp
and
movs
jp
jmp
or
in
sub
pop
xor
cmps
dec
sub
add
lods
jge
push
push
mov
lods
in
add
mov
or
mov
add
mov
mov
ins
push
jae
pop
xlat
int3
jb
(bad)
dec
daa
pop
pop
sub
sbb
add
cmp
dec
ror
mov
test
push
aas
push
dec
ret
hlt
retf
sbb
xchg
sub
adc
outs
sub
rol
popa
xor
pop
inc
mov
and
sbb
jl
enter
jg
(bad)
sahf
push
add
sbb
xchg
inc
retf
imul
ror
shl
pop
lods
pop
mov
retf
xor
mov
inc
adc
xchg
xchg
pop
aaa
cmp
mov
sbb
imul
cdq
xchg
pushf
pop
inc
add
out
call
xor
mov
push
loop
dec
fst
pop
dec
jecxz
movs
dec
add
push
sbb
sbb
outs
mov
mov
ss
push
sqrtps
cmps
mov
mov
mov
into
dec
mov
jne
or
add
ds
mov
xchg
rcr
push
inc
(bad)
and
enter
test
mov
inc
in
jb
dec
in
jp
jmp
pop
dec
xor
jp
push
mov
push
jmp
mov
cld
sub
dec
sub
or
and
cmp
stos
imul
pop
xchg
sahf
xchg
scas
cmp
loope
sbb
pop
jae
cmps
outs
add
xchg
ror
push
aad
jno
dec
js
cdq
popf
cli
xchg
mov
jae
punpckhbw
xor
lods
fcomp
jp
test
adc
nop
mov
aas
aad
sub
je
aaa
hlt
test
fcomp
mov
test
mov
retf
and
add
jmp
out
xor
xchg
or
fcmovu
pop
std
cmp
or
fcomp
adc
xor
jmp
xchg
push
ret
ret
xchg
mov
sbb
sub
sub
(bad)
adc
neg
mov
icebp
xchg
mov
out
daa
xor
test
movs
call
adc
mov
dec
add
cmp
xor
adc
dec
ret
cmps
popf
iret
inc
inc
inc
or
mov
mov
jns
xor
outs
jmp
inc
lds
sti
retf
int
or
mov
pop
sti
jno
dec
addr16
pop
cmp
mov
pop
pop
and
(bad)
ffree
jnp
movs
ror
outs
sbb
jb
leave
mov
and
xor
outs
pop
mov
lahf
and
push
jecxz
repz
and
mov
mov
std
mov
fwait
cmp
test
pop
pop
jb
mov
ret
rol
mov
push
jno
mov
es
jae
pop
cmp
add
push
out
lds
xor
in
(bad)
push
test
push
ret
push
ins
xlat
ret
jno
iret
sub
dec
aam
push
test
xchg
(bad)
mov
out
jge
xchg
mov
fistp
sub
jmp
repz
ficomp
cli
or
add
mov
data16
dec
movsx
xor
aaa
pop
call
pop
ds
jno
and
mov
popa
jmp
cmp
fwait
popf
mov
test
ins
push
xor
xchg
test
repnz
add
xor
inc
add
test
adc
inc
pop
rep
mov
jb
pushf
mov
mov
or
inc
add
retf
cli
fst
clc
adc
rcl
into
std
loope
sbb
loope
ret
jno
xchg
lahf
in
jge
popf
mov
xor
imul
out
jne
sub
jg
(bad)
pushf
ds
fsubrp
idiv
mov
imul
stc
push
lds
aad
rcl
(bad)
xlat
inc
xchg
call
(bad)
lock
adc
bound
mov
imul
add
imul
dec
jbe
into
mov
retf
imul
xchg
jg
sub
xor
adc
jle
xchg
inc
and
xchg
shl
or
out
in
or
sub
daa
mov
hlt
dec
ds
and
push
inc
scas
cmp
xchg
call
cmc
fs
test
(bad)
adc
cdq
mov
dec
push
inc
inc
mov
movs
sub
mov
xchg
sbb
dec
and
clc
pop
xor
push
mul
cmc
cmp
mov
aaa
xor
int
fiadd
hlt
pusha
pushf
inc
fcom
hlt
jge
in
and
inc
popaw
dec
loop
or
mov
es
fstp
je
retf
cmp
fldcw
lds
rcr
push
sbb
xor
mov
push
in
push
xchg
inc
push
mov
mov
stos
mov
inc
push
imul
mov
or
call
ret
pop
mov
aaa
push
mov
loope
clc
cld
loopne
sbb
(bad)
push
sbb
aad
imul
repz
test
inc
test
mov
mov
push
inc
cmps
inc
pop
adc
gs
jge
fisub
xor
jne
in
arpl
push
fld
add
jb
je
xchg
or
fstp
push
hlt
adc
dec
sbb
mov
inc
cmp
mov
sub
sti
aam
das
into
bound
or
daa
mov
rcr
jmp
fcmovbe
add
imul
fstp
inc
pop
imul
xlat
xchg
and
jl
cli
lock
xchg
or
sbb
add
jne
mov
test
sub
and
aam
push
ror
cmp
add
scas
pop
int
stos
cmp
cmc
bound
mov
fstp
pop
(bad)
and
(bad)
ins
into
mov
lahf
in
test
mov
cmp
add
or
jae
xchg
push
fild
sub
mov
in
jmp
sbb
addr16
jae
pop
cmps
sub
shr
clc
cmps
cmp
(bad)
clc
push
dec
shl
rol
cld
mov
pop
(bad)
sub
inc
pop
jbe
data16
push
jge
nop
mov
js
test
pop
hlt
inc
and
pop
idiv
mov
ret
sub
out
push
outs
lock
or
cmp
push
pop
push
inc
and
cmp
sub
dec
arpl
cmp
nop
sahf
mov
ffree
daa
pop
shl
xchg
dec
inc
(bad)
mov
push
sub
push
jle
cs
cmp
cmp
and
rcl
and
mov
pusha
fbstp
cmps
inc
bound
xor
iret
cwde
inc
test
lahf
call
xchg
nop
jp
je
mov
cmp
cmc
mov
mov
fcomp
sub
pushf
ftst
or
lock
push
cmp
in
mov
adc
out
movs
sahf
mov
int
test
dec
jbe
rep
jecxz
rcr
out
xlat
push
(bad)
fdivr
lds
mov
jge
das
sbb
jnp
rol
jmp
(bad)
je
adc
das
push
aam
popf
or
test
pop
out
idiv
hlt
popa
fwait
outs
xor
pop
inc
adc
mov
mov
xchg
cmp
add
or
xor
popf
jb
retf
iret
mov
pop
sub
xchg
rcr
sub
rol
xchg
adc
aad
(bad)
in
dec
dec
xchg
inc
jno
cmc
retf
rol
pop
cmps
dec
dec
lea
xchg
xor
enter
jo
call
std
inc
sbb
xacquire
outs
jmp
xchg
pop
imul
add
cmps
and
ret
scas
or
jns
out
jo
push
jo
cmp
scas
inc
xlat
js
mov
lahf
lock
adc
pusha
outs
mov
stos
ror
icebp
imul
sar
xchg
lods
je
lahf
xor
inc
data16
and
addr16
xor
sbb
daa
jbe
(bad)
xor
loop
cld
mov
push
xor
mov
push
add
fidivr
xchg
out
lods
jl
mov
(bad)
jle
and
dec
xchg
mov
ins
out
or
dec
mov
ins
jecxz
pop
mov
xchg
int3
dec
lds
cwde
loope
xor
int
lods
jmp
pushf
in
mov
test
mov
xor
lea
pop
mov
out
pop
out
pop
test
out
mov
mov
fmul
fwait
sub
cld
cld
dec
adc
adc
stos
shl
add
inc
pop
shr
push
and
mov
pop
or
fwait
clc
sbb
xor
add
xchg
add
pop
inc
sub
push
dec
imul
sub
jno
pop
outs
xor
aad
rcl
stc
enter
xor
cwde
jae
rcr
test
enter
sub
lods
xor
lock
iret
outs
cwde
or
jmp
xchg
cld
(bad)
rcl
mov
sti
push
outs
mov
lahf
(bad)
push
invd
pop
mov
scas
ret
jge
inc
push
and
jns
in
and
fisttp
xor
lods
lea
and
out
push
xor
cld
lds
clc
lock
addr16
fsubp
jne
push
cmp
(bad)
loopne
into
xor
rol
or
cmp
pop
sub
in
sub
mov
push
imul
sub
jecxz
ss
loop
sub
ret
outs
xor
jge
cld
lahf
push
xchg
jge
mov
sub
mov
jmp
les
pop
retf
dec
push
xchg
cmps
cmp
ss
cmps
sbb
mov
ins
pop
mov
ins
xchg
and
aas
jo
sbb
mov
sub
xchg
scas
mov
stos
sbb
add
push
out
xor
push
jecxz
add
push
pop
loopne
mov
sbb
lock
push
test
imul
pop
xor
push
or
imul
test
sbb
fnstenv
lds
inc
fild
and
xor
lods
pop
pop
ret
xchg
imul
repz
lds
mov
mov
xlat
inc
or
movs
push
cmps
jge
rcr
bound
jns
sub
or
mov
xchg
push
adc
pop
(bad)
cmp
(bad)
aaa
xchg
stc
xor
call
call
scas
and
test
cli
cdq
pop
cmp
push
icebp
xor
sbb
lds
xor
push
inc
jmp
or
mov
je
push
sar
jno
clc
and
or
push
dec
fwait
hlt
cld
scas
repnz
sbb
push
arpl
mulps
jne
outs
rcl
pop
dec
or
mov
jmp
cmp
out
call
shr
and
adc
ins
push
ficomp
ret
mov
sub
sbb
dec
(bad)
cmc
dec
test
sbb
jle
mov
mov
jle
scas
or
dec
fistp
mov
aad
cmps
cwde
add
repz
mov
pop
cmc
mov
mov
mov
ret
xlat
mov
mov
loopne
sbb
and
arpl
arpl
out
mov
push
jmp
jo
vmaxps
loope
push
mov
ins
(bad)
fwait
mov
jb
pop
stos
cld
push
into
out
sub
jmp
ret
cmp
test
cdq
aad
sub
xchg
es
icebp
mov
mov
cmp
xchg
idiv
les
das
cwde
xchg
cmc
add
mov
sbb
loopne
pop
daa
hlt
push
xchg
or
or
retf
or
pop
jl
lods
fadd
jnp
gs
jne
mov
fisubr
idiv
and
hlt
sub
xor
jns
icebp
mov
shl
sbb
test
push
jmp
or
or
push
retf
mov
bound
mov
in
call
int3
inc
pusha
dec
sbb
cdq
popa
leave
lods
and
shl
inc
xchg
mov
mov
neg
xor
pop
xchg
xchg
out
adc
outs
jne
jne
xchg
lods
add
sub
and
cs
pop
in
out
xchg
repz
pop
fst
imul
sub
sub
mov
ret
sbb
dec
rcl
or
je
mov
cwde
scas
cmps
or
test
popf
sti
leave
sbb
mov
call
es
test
cwde
mov
and
adc
mov
test
fisttp
pop
mov
mov
cmp
int3
jge
sbb
and
test
outs
cdq
jo
and
imul
xchg
and
add
scas
ins
xchg
movs
pushf
jmp
sbb
adc
sub
inc
int
std
pop
push
jns
mov
cwde
pop
mov
and
ret
adc
std
and
and
push
adc
out
cdq
mov
dec
push
jecxz
fwait
icebp
mov
icebp
xchg
jne
push
stos
lods
sub
test
or
push
dec
enter
jecxz
test
dec
out
cmc
pop
pop
mov
inc
je
test
call
fsubr
loopne
bound
cmp
daa
mov
mov
mov
test
or
imul
sub
pop
cdq
stos
fcom
pushf
test
push
enter
test
addr16
in
fdiv
mov
jb
call
ja
les
or
adc
out
pop
mov
and
popf
icebp
test
in
xchg
cs
aad
in
mov
mov
inc
mov
inc
sahf
ja
idiv
dec
add
(bad)
mov
imul
gs
hlt
scas
adc
cmp
pop
test
inc
adc
pop
jns
mov
pop
mov
(bad)
jns
js
pop
mov
test
rol
nop
int
js
sub
jo
adc
pop
shl
pop
scas
sbb
sbb
outs
clc
iret
jne
jb
and
stc
mov
add
add
enter
fidiv
cmp
test
cmp
pop
shl
jnp
jge
jns
cwde
pop
or
rdpmc
cmp
call
in
je
inc
call
jmp
and
fdiv
or
pop
adc
mov
push
mov
pushf
rcl
sar
xchg
add
dec
pop
or
xchg
jge
int
jmp
sahf
outs
xor
sub
test
mov
add
jl
aaa
mov
(bad)
int3
add
shl
(bad)
mov
inc
pushf
and
sti
xor
adc
and
pop
dec
push
mov
(bad)
cmps
jp
sub
shr
xor
xchg
clc
adc
sub
dec
jmp
pusha
icebp
(bad)
fwait
mov
es
or
xlat
stos
ins
cmp
pop
pop
inc
mov
and
xor
(bad)
fisttp
dec
int3
ss
fsubrp
or
jae
sub
push
addr16
sub
mov
or
shl
aas
push
xor
jmp
push
lds
inc
mov
ss
jnp
xor
test
es
popa
shl
test
fiadd
mov
pop
(bad)
mov
pop
js
hlt
cmc
push
sbb
cwde
imul
aam
sbb
test
data16
mov
call
out
pop
les
push
ja
mov
iret
addr16
das
outs
jp
jmp
xor
retf
pop
cmc
push
pop
cwde
push
jge
mov
jno
call
sub
mov
xor
fnstenv
mov
jo
repnz
icebp
mov
repnz
aad
xchg
xor
pop
cmp
and
xchg
mov
jne
int
imul
scas
push
adc
push
cmps
mov
xor
fs
cmp
cwde
dec
imul
enter
add
jae
push
scas
imul
xchg
mov
and
clc
xchg
jb
nop
push
test
inc
popf
mov
fstp
sbb
cmc
das
cdq
loop
and
ror
fst
pop
pop
xor
mov
cmp
std
test
jl
mov
retf
pop
jmp
sub
inc
pop
cs
mov
in
adc
ja
aaa
ins
or
push
pop
jns
faddp
push
jmp
dec
sub
cmp
or
xchg
test
test
xlat
rcl
pop
clc
in
cmp
clc
xchg
inc
mov
xor
and
and
and
inc
(bad)
or
fcom
aas
jmp
mov
aam
add
aam
sub
mov
aaa
pop
cwde
neg
inc
je
cmp
lea
call
imul
pop
mov
sub
es
outs
mov
ds
inc
cmp
stos
scas
int
pop
push
paddsb
pop
adc
jp
daa
xor
daa
fldenv
adc
sub
xlat
cmps
sbb
mov
test
cwde
pusha
jle
mov
add
pop
xchg
add
pop
push
(bad)
das
xlat
jo
jo
xor
aas
push
dec
sub
sbb
inc
mov
push
repnz
aad
mov
sar
sbb
jno
xchg
mov
and
and
add
inc
push
out
mov
xor
mov
or
(bad)
pop
mov
fdivp
(bad)
not
fdiv
nop
les
ja
rep
leave
jno
xor
push
mov
cmps
retf
test
(bad)
xor
movs
in
gs
and
bound
fcom
add
shr
sbb
pop
(bad)
pop
dec
add
les
xor
push
test
outs
fisttp
popa
xchg
mov
xor
jae
std
jns
scas
adc
jle
rcr
pushf
xchg
loop
fwait
loop
js
sub
mov
call
pop
ret
lods
outs
stos
sbb
test
add
imul
mov
jae
sbb
sub
jecxz
or
adc
aas
pushf
ret
sub
and
clc
mov
div
push
adc
xor
mov
inc
push
cs
mov
in
push
scas
(bad)
cmc
xchg
idiv
jecxz
xor
ror
in
(bad)
cli
(bad)
mov
je
xlat
pop
pushf
in
retf
cli
add
adc
cmps
scas
jo
clc
add
jb
jl
sub
in
outs
pop
cmp
pop
imul
inc
mov
lock
mov
or
cmc
loope
pop
(bad)
fcom
or
repz
sub
xchg
in
daa
push
ss
cmc
scas
jg
stc
mov
js
clc
dec
out
dec
icebp
call
push
sub
pop
cs
fwait
dec
push
push
jb
push
sbb
pushf
mov
pop
fcomp
movs
xor
fwait
(bad)
div
std
cs
es
fisttp
mov
jno
pusha
mov
xor
dec
test
loope
cmc
arpl
cmc
cmp
dec
dec
push
sti
pusha
push
push
push
add
mov
fsubp
imul
mov
(bad)
push
mov
push
mul
push
xchg
inc
xchg
and
imul
retf
not
pop
bound
repz
retf
clc
sbb
outs
inc
into
mov
add
inc
and
jb
ds
sti
add
leave
pusha
jnp
(bad)
movs
shr
xchg
pop
inc
or
cs
dec
mov
xor
push
pop
add
and
cmp
pop
pushf
call
outs
les
fidivr
out
call
in
icebp
xor
scas
arpl
sub
fs
sub
xor
xor
mov
into
ds
dec
push
out
push
xchg
cvtdq2ps
lea
pop
das
push
push
or
pop
sub
push
cmp
xor
(bad)
ret
push
ja
test
sar
call
pop
sub
xchg
mov
hlt
aam
adc
add
aad
mov
or
mov
xchg
cs
ror
push
leave
pop
mov
rcr
or
in
jae
or
mov
int
xchg
retf
mov
loope
addr16
repnz
sti
mov
push
fstp
aaa
push
cmps
sbb
fs
cmp
mov
(bad)
cmp
sub
jle
pop
mov
aas
das
pop
xchg
mov
pop
sub
cmp
lock
mov
lea
or
jb
and
aad
pshufw
psrld
call
xor
int3
jo
add
mov
cmp
orps
and
dec
fld
or
call
ins
cmp
push
mov
ret
jmp
arpl
sbb
shl
sbb
lahf
loopne
mov
js
or
cmps
out
mov
mov
sbb
and
out
pop
mov
std
cmc
rcl
loopne
sbb
add
vpsubq
ds
mov
xchg
jmp
nop
shr
xchg
mov
and
cmps
push
mov
and
and
mov
(bad)
icebp
in
jmp
fldcw
pop
xor
daa
popf
push
sub
aas
retf
jmp
shl
loopne
into
je
repz
lods
imul
dec
add
inc
cmp
fist
aas
icebp
and
ja
aas
test
push
data16
mov
out
sub
sbb
dec
pop
repnz
dec
or
hlt
mov
frstor
xchg
pop
daa
push
xor
ja
push
mov
and
jne
inc
addr16
pop
sub
cmp
cmp
push
inc
cmp
jno
inc
inc
sbb
xor
cmps
sbb
push
rcr
sbb
jmp
pusha
fwait
xchg
mov
push
in
aad
(bad)
scas
popf
inc
(bad)
xor
cs
jns
pushw
test
ins
iret
mov
xchg
xor
sub
out
adc
xchg
lds
test
cwde
or
mov
fcomip
mov
fucom
ins
sti
loopne
mov
neg
mov
aas
mov
adc
int3
inc
inc
in
fcomp
stc
rcr
cmp
ret
(bad)
(bad)
mov
mov
dec
jl
es
in
xchg
mov
aad
loop
int
leave
push
push
xchg
push
add
test
pop
push
or
sub
popa
xchg
inc
and
ja
push
jnp
ret
loop
jl
and
mov
fisub
cmc
add
not
es
cmps
ins
mov
mov
inc
icebp
dec
xchg
pop
jns
cdq
mov
pusha
into
add
mov
pusha
sub
mov
ss
ret
das
mov
mov
ins
inc
fwait
lock
in
out
int3
sub
nop
ret
cmp
xchg
cmps
inc
mov
inc
adc
jge
cld
shl
mov
sbb
inc
push
inc
adc
push
pop
shl
pop
inc
push
aam
push
add
call
adc
sub
adc
add
out
call
fldcw
push
xchg
inc
enter
dec
sub
leave
or
neg
les
in
sbb
dec
pop
fs
xor
repz
add
test
addr16
mov
loop
pop
das
xchg
mov
sar
mov
cmp
retf
sahf
push
push
aam
ror
dec
aas
push
and
cmps
adc
mov
fbld
(bad)
inc
in
fisttp
sbb
fwait
lods
retf
leave
push
push
jecxz
stos
mov
repnz
jge
stc
push
inc
adc
mov
cmp
or
dec
jb
ds
push
push
or
movs
cdq
or
jae
sbb
(bad)
and
scas
xor
pop
stos
enter
stc
out
cs
pop
push
nop
cmp
icebp
cmp
push
sbb
lds
hlt
cmp
mov
fs
mov
adc
fcomp
xor
adc
sti
mov
pop
lods
getsec
or
std
(bad)
xor
xor
imul
ins
mov
ret
hlt
xlat
int3
mov
and
xchg
sub
repnz
dec
neg
dec
or
or
sub
mov
and
rol
fiadd
(bad)
jmp
dec
movaps
repnz
cli
es
scas
iret
or
mov
mov
inc
pop
sete
fnsave
scas
cmc
or
cwde
mov
cmp
sti
mov
jge
mov
pop
lds
adc
xchg
push
hlt
das
jecxz
loop
adc
fisubr
dec
rol
(bad)
mov
(bad)
mov
push
xor
ss
rcl
adc
in
mov
pop
cmp
cmp
call
outs
stos
addr16
jmp
dec
out
shr
daa
pop
jb
adc
cmc
mov
sbb
cs
retf
jmp
xchg
movs
mov
in
stc
mov
int
or
and
add
jmp
or
jnp
es
sbb
iret
(bad)
adc
dec
add
mov
test
call
sbb
mov
mov
mov
add
cmp
push
sahf
push
pop
jnp
in
push
jmp
(bad)
retf
outs
in
jmp
mov
xor
out
movs
cmp
je
rcr
inc
push
in
vmaxps
xor
(bad)
enter
push
into
dec
inc
jae
mov
pop
cld
add
imul
add
mov
or
cmp
iret
mov
pop
inc
cmp
jmp
pop
jae
adc
inc
cmp
and
fld
adc
test
mov
xchg
shl
gs
ja
and
mov
scas
ficom
(bad)
cmc
pushf
adc
jb
pop
and
adc
xor
push
push
ins
cmp
dec
stos
sbb
pop
gs
mov
lea
inc
jnp
popf
dec
add
push
adc
adc
ret
mov
cmp
and
les
sahf
xchg
div
mov
dec
and
in
aad
add
in
jb
jbe
or
jle
mov
ror
imul
cmp
add
xor
and
lea
daa
pop
push
jmp
xor
and
dec
jno
es
or
cmps
jle
nop
mov
stos
hlt
xchg
jle
aas
push
xchg
or
push
xor
push
ins
xchg
out
cmp
test
outs
(bad)
adc
aas
jge
scas
adc
and
data16
cmp
cdq
inc
jbe
mov
mov
adc
pop
lea
jns
imul
int3
xchg
or
in
pop
mov
sbb
jg
xor
push
mov
popf
xchg
push
mov
movs
pop
jmp
pusha
push
sub
fsubp
ret
ficomp
mov
inc
ror
xlat
mov
loopne
mov
(bad)
out
jmp
ret
in
imul
repnz
mov
push
mov
mov
movs
int3
mov
inc
(bad)
call
enter
or
cmp
stos
inc
cdq
(bad)
call
mov
sbb
adc
fiadd
mov
inc
movs
loop
ror
hlt
imul
dec
(bad)
fisubr
ja
sub
adc
sub
add
sbb
mov
pop
or
mov
add
arpl
das
sub
dec
scas
push
repnz
test
ds
sbb
inc
push
fadd
jnp
xchg
pop
xlat
dec
mov
div
dec
mov
lods
or
fld
hlt
fcomp
mov
or
sub
inc
retf
mov
mov
and
jno
sub
mov
(bad)
jge
push
das
fcom
(bad)
jle
push
sbb
int3
loop
int
inc
repz
repnz
add
or
pop
ins
repnz
mov
jecxz
imul
nop
mov
aas
xlat
push
leave
mov
repz
jge
adc
sbb
(bad)
test
mov
mov
daa
jb
jae
lods
dec
mov
leave
push
mov
adc
pop
jmp
(bad)
out
sbb
xchg
out
jmp
or
jmp
(bad)
nop
mov
call
mov
mov
in
xchg
sbb
outs
loopne
stos
jo
xchg
rol
jmp
repnz
out
loop
shr
inc
or
aam
jge
xor
out
pop
pop
adc
daa
gs
ror
(bad)
xor
daa
mov
or
push
mov
int3
inc
sub
xchg
in
sub
imul
jmp
out
sub
sub
cmc
sbb
rcl
gs
mov
xor
cmp
ins
or
xor
repnz
adc
sub
(bad)
jmp
mov
xchg
daa
retf
xchg
cmp
sub
(bad)
adc
push
cmp
mov
es
jle
dec
sub
sbb
into
out
adc
call
retf
pop
adc
enter
push
add
rcl
add
cmp
pop
fiadd
jb
jae
pop
xlat
ss
cmp
data16
icebp
jp
push
or
aad
das
mov
scas
pop
les
mov
hlt
mov
lods
cli
(bad)
ins
icebp
mov
aas
mov
sub
test
mov
popf
std
mov
loop
xor
push
jg
jp
(bad)
xor
outs
inc
add
pop
xlat
or
dec
retf
cmp
cdq
xchg
or
push
xor
pop
cmp
nop
int3
push
call
lods
and
push
jmp
sbb
call
push
xor
addr16
push
jp
loop
add
adc
mov
xor
cli
popf
test
cld
fbld
aam
or
pop
sbb
and
add
xor
fiadd
aaa
(bad)
mov
mov
push
sub
fadd
fcom
ja
adc
jp
hlt
adc
mov
mov
mov
clc
mov
add
sub
retf
cmp
cmps
inc
push
cld
mov
xor
call
cwde
(bad)
jbe
dec
cmps
and
mov
mov
adc
neg
call
xchg
popa
dec
add
dec
cmp
retf
fidivr
ins
xlat
dec
pop
lods
and
mov
mov
sbb
scas
(bad)
aad
jg
fiadd
jb
lahf
inc
lods
dec
xor
loopne
neg
xchg
mov
jno
mov
js
cmps
mov
stc
cmp
push
int
(bad)
into
xchg
aam
or
pop
call
das
inc
mov
das
or
les
sahf
fmul
shr
lods
ins
mov
test
jbe
arpl
cmp
fstp
push
lods
call
fdiv
cmp
jge
xchg
inc
not
mov
adc
adc
in
shl
gs
idiv
lods
pushf
popa
or
sbb
lods
outs
sub
daa
mov
cmp
dec
lock
sti
push
jge
lds
pop
mov
rcr
mov
shl
in
aaa
xor
fidivr
mov
(bad)
add
dec
sbb
shl
jae
dec
out
and
mov
cmp
mov
movs
dec
jmp
adc
mov
outs
cld
push
mov
pop
mov
jae
cdq
pop
jne
inc
pop
adc
retf
out
pop
mov
add
test
mov
lea
std
cmp
into
mov
adc
push
mov
mov
mov
mov
les
iret
psllq
sti
fsubr
mov
or
mov
fwait
neg
dec
retf
mov
inc
inc
test
pop
push
jl
cmp
imul
mov
sahf
and
ret
xchg
(bad)
stos
add
mov
cli
push
mov
cmp
sbb
dec
sbb
sbb
in
ja
sub
mov
iret
test
mul
test
jmp
iret
(bad)
out
cmp
mov
outs
sub
lea
mov
je
and
cmp
out
cmp
xor
mov
movs
out
push
iret
fwait
(bad)
xor
mov
movs
add
fdivrp
mov
sbb
(bad)
sbb
xchg
or
pop
out
shr
xchg
aam
sbb
dec
sbb
xor
icebp
dec
mov
pop
data16
pop
push
lahf
icebp
xchg
inc
arpl
add
test
neg
cmps
push
xchg
aaa
sbb
retf
and
fbld
addr16
mov
add
jno
push
adc
in
popa
aas
lahf
dec
cld
iret
cwde
dec
mov
pop
out
and
push
or
adc
lods
fs
shl
adc
sub
pop
sub
cmc
and
jmp
inc
movs
cmc
daa
cwde
stc
pop
jmp
out
push
jmp
inc
test
in
in
or
pop
sub
and
jb
fs
std
repnz
inc
xchg
xor
xchg
nop
jns
pop
ret
inc
cmp
addr16
cld
bnd
cs
ss
movs
stc
cld
stos
test
sub
mov
pusha
retf
jo
outs
push
arpl
sbb
jp
test
test
push
ja
dec
push
test
dec
cmp
js
mov
adc
jne
cmp
enter
mov
sahf
aad
imul
cmp
xchg
sbb
in
sub
xchg
test
jb
xor
jno
loope
rol
cld
imul
xchg
leave
sub
or
ret
movs
pop
inc
cdq
push
(bad)
or
jo
enter
mov
mov
ficom
in
cs
les
jmp
sub
push
cld
cmp
lahf
mov
inc
sti
jb
push
push
adc
adc
or
mov
or
xlat
fsub
stos
sub
outs
std
das
mov
jmp
lods
xor
pop
push
mov
mov
pop
xchg
xor
jle
fwait
and
mov
(bad)
sub
in
inc
add
push
icebp
add
nop
out
xchg
mov
push
cdq
xchg
out
sub
in
mov
aas
mov
les
pop
adc
dec
test
sub
rol
xchg
out
or
cmp
sub
or
data16
sbb
repz
mov
push
xchg
sbb
jo
add
std
cmps
not
mov
pop
movs
add
scas
enter
sbb
jmp
enter
movs
push
out
les
xor
cmp
xor
add
stos
pop
movs
ins
pushf
dec
sub
cmp
jno
mov
aas
cmps
loopne
in
repnz
test
data16
pop
shl
jne
push
add
cmp
mov
fstp
cmp
shl
adc
aam
or
pop
call
in
push
xlat
mov
pusha
or
mov
int
gs
cmp
xchg
and
adc
popa
push
shr
add
push
jno
aam
mov
leave
adc
xchg
daa
mov
icebp
inc
hlt
rcr
fstp
pop
div
lea
repnz
mov
ret
dec
add
xchg
(bad)
(bad)
int
into
and
ins
ins
xchg
jecxz
mov
aas
test
loop
stc
cwde
bound
popf
push
(bad)
mov
xchg
inc
sbb
adc
ret
push
push
int3
ja
std
xor
lods
test
xor
dec
jmp
stos
test
inc
mov
dec
enter
push
xor
adc
add
fisttp
fimul
mov
out
xchg
xchg
inc
push
(bad)
stc
in
ret
sub
es
in
mov
iret
sbb
out
mov
xchg
cli
jb
jns
pop
ds
fimul
pop
cwde
in
push
mov
add
aad
(bad)
pusha
xchg
sub
lea
aaa
pop
in
jecxz
cmp
jmp
push
pop
mov
mov
pop
add
fwait
pop
and
pop
xor
or
jnp
dec
xchg
push
dec
and
mov
stc
jbe
popa
bound
imul
sub
adc
push
ins
loope
ret
pop
sbb
xor
jb
jl
outs
mov
dec
mov
ins
test
addr16
mov
dec
ret
push
aad
dec
pop
adc
mov
push
ss
test
xchg
mov
jnp
push
sbb
scas
dec
push
or
xlat
outs
pop
popf
(bad)
fcmovne
mov
add
inc
inc
sbb
jge
addr16
xchg
clc
sti
pop
fldz
inc
xchg
adc
sar
aam
daa
push
ret
dec
lock
jmp
sti
cld
xlat
mov
outs
adc
sub
(bad)
inc
add
lahf
pop
and
sub
stos
mov
mov
aam
icebp
outs
sahf
imul
or
mov
or
aaa
ins
fldcw
clc
cmp
xchg
inc
repz
popf
fistp
das
cmp
daa
std
mov
mov
out
js
add
mov
adc
pop
push
xor
mov
jmp
xchg
xchg
test
and
movs
sub
sti
cmp
imul
pop
mov
mov
pop
xchg
add
pop
lock
dec
movs
sub
jns
and
adc
dec
fs
xchg
push
(bad)
mov
gs
cmp
enter
and
jge
sub
out
adc
xchg
jmp
mov
or
imul
xchg
enter
shl
bound
outs
jne
sub
in
std
cmp
and
fld
ret
adc
nop
mov
hlt
cmp
ss
in
mov
je
or
div
dec
xchg
test
mov
xchg
jmp
adc
jmp
sbb
xchg
add
dec
dec
dec
leave
inc
dec
stc
mov
pop
int
fwait
loop
push
hlt
scas
mov
add
xchg
push
ins
mov
repz
fiadd
mov
cmp
mov
sub
inc
ds
add
out
jl
test
xchg
jl
ins
push
add
jae
xchg
jmp
mov
inc
repnz
(bad)
jmp
adc
or
outs
and
sub
jle
pushf
pop
setg
scas
mov
add
movs
aad
xor
pop
jmp
xlat
jg
addr16
(bad)
dec
rol
push
pop
sti
ret
not
push
and
xchg
ss
shr
pop
push
mov
out
xor
jl
ret
xor
sti
js
inc
es
and
arpl
add
sahf
lock
and
push
sub
enter
addr16
hlt
jno
jmp
xchg
mov
adc
sub
xchg
js
test
out
mov
cmps
in
inc
dec
jne
dec
jnp
push
ins
cdq
fild
rol
and
inc
add
std
scas
test
retf
add
das
adc
mov
lods
daa
sub
jmp
add
mov
add
mov
sub
repnz
pusha
jle
ss
out
xchg
imul
xor
sub
arpl
mov
int3
mov
in
std
outs
xchg
aam
jnp
inc
sub
xchg
adc
mov
or
mov
mov
inc
scas
mov
sbb
push
out
outs
sbb
ja
mov
dec
mov
sbb
adc
sub
mov
xchg
xor
xor
mov
mov
sbb
xchg
cs
fs
loopne
arpl
mov
and
add
push
jno
mov
add
shr
iret
xchg
test
leave
int3
fs
push
sbb
lea
cmc
fwait
pop
cld
loop
mov
(bad)
xor
imul
je
add
xor
push
pop
or
xchg
fiadd
jge
das
ja
dec
push
in
jle
xor
ds
sahf
(bad)
rep
fmulp
mov
pop
lahf
stos
and
mov
aaa
cld
mov
add
jae
mov
aam
mov
xchg
shr
lahf
jl
dec
or
push
lods
push
and
dec
div
adc
out
push
(bad)
(bad)
dec
mov
rcr
sbb
retf
out
movs
pop
mov
mov
call
cs
jnp
call
(bad)
(bad)
sub
fmul
push
in
dec
dec
lock
(bad)
jmp
lahf
test
fisubr
lock
in
mov
sub
out
repz
(bad)
mov
add
xchg
ins
mov
push
xor
fcomi
mov
jns
inc
std
dec
call
jno
mov
sbb
cmp
mov
jle
cs
jmp
sbb
xchg
cwde
nop
test
mov
aaa
cmp
(bad)
jnp
xor
mov
push
stos
ds
test
(bad)
loope
cmps
cmp
push
rol
jp
mov
sahf
sbb
or
test
imul
pop
aad
mov
mov
sub
jae
jmp
mov
ins
cmp
in
and
inc
cmp
cmps
or
mov
sub
(bad)
adc
fistp
dec
cmps
lods
in
test
jo
adc
adc
scas
fwait
enter
push
push
xor
and
mov
adc
sbb
jecxz
neg
and
(bad)
and
pop
mov
std
mov
imul
rcr
repz
leave
xchg
dec
fldcw
xor
fdivr
les
sbb
lods
repnz
(bad)
sub
adc
dec
jns
hlt
iret
sar
and
(bad)
jmp
mov
bound
push
mov
cmp
xor
and
repnz
mov
les
push
retf
int
stc
cmp
jae
clc
mov
push
popa
retf
inc
add
add
lds
in
push
sub
repz
mov
stos
mov
fidiv
dec
lods
push
sub
sbb
pop
xchg
imul
loopne
xchg
xor
imul
xor
icebp
add
mov
and
adc
repnz
xchg
in
add
push
pop
push
xor
jp
mov
push
mov
ins
mov
es
mov
pusha
inc
dec
ror
pop
mov
pop
mov
mov
inc
or
add
or
pusha
cmp
rcr
cmp
addr16
adc
cmps
xchg
imul
enter
fucomi
sub
cmc
cmp
shl
pop
jnp
lods
out
xor
fnstsw
lods
push
test
loope
jp
cmc
int
je
mov
cwde
cmps
add
jae
mov
scas
push
sbb
push
mov
xor
mov
mov
xchg
and
shl
xchg
fs
push
in
sbb
loop
stos
sbb
inc
cmps
sub
fnstcw
mov
xor
in
mov
cmp
ins
mov
and
cli
std
stc
push
adc
scas
aas
dec
pushf
int
imul
out
imul
sbb
adc
push
mov
leave
inc
loopne
mov
mov
cmp
call
std
(bad)
jg
clc
jl
(bad)
(bad)
aaa
jg
ror
adc
sbb
jmp
test
jge
push
sbb
rol
dec
lock
cs
ins
fwait
in
fwait
adc
scas
fcmovnu
jbe
cmp
or
dec
lock
aas
fdivr
sbb
cmp
leave
out
add
test
ror
push
test
inc
adc
inc
call
add
stos
(bad)
scas
arpl
mov
int
jge
in
mov
jmp
dec
pop
daa
nop
push
dec
or
adc
dec
popf
push
(bad)
in
lods
movs
add
jns
(bad)
add
and
add
ss
fstp
and
mov
iret
sub
ret
jge
mov
jmp
in
daa
sbb
nop
inc
mov
or
ret
leave
inc
mov
mov
ror
jle
inc
repnz
sub
inc
cmp
inc
sub
dec
and
cld
test
mov
dec
test
fwait
lea
adc
int3
add
xor
jne
data16
mov
push
shr
sar
fs
cmp
push
dec
pop
out
ins
(bad)
ficomp
xchg
ror
fadd
and
out
shr
inc
jmp
mov
mov
ret
xchg
jmp
lods
xchg
xor
sbb
outs
push
repz
sub
or
or
clc
or
lea
in
and
in
pop
cmps
lods
lea
popa
mov
hlt
push
fsubr
outs
or
jmp
das
fcomp
into
or
cs
and
xchg
xor
dec
pop
ss
shl
dec
aam
cs
push
dec
or
or
pop
enter
and
xchg
xchg
icebp
xor
fs
push
in
cmp
dec
jp
rol
push
cwde
dec
dec
outs
out
ds
(bad)
in
xor
out
and
iret
lods
push
push
xchg
push
pop
jo
sub
or
jae
inc
fimul
push
cld
pop
icebp
pushf
rol
mov
mov
(bad)
aad
je
sub
dec
jle
sahf
mov
xchg
adc
icebp
fild
mov
bound
jl
leave
das
ficom
xor
cmps
or
in
in
cdq
dec
fwait
xor
repnz
std
pushf
in
mov
mov
test
mov
pushf
(bad)
les
repz
fcomp
sbb
into
mov
mov
ret
cmp
test
dec
mov
dec
jmp
ss
and
cmc
add
mov
in
out
std
cmp
push
aas
or
repnz
int
mov
cmps
and
cmp
hlt
jge
lods
mov
or
xchg
cmps
add
mov
pop
xor
add
jle
loopne
inc
jbe
(bad)
and
mov
and
aam
cmp
sbb
gs
loopne
jl
hlt
push
jecxz
mov
ins
xor
push
jbe
mov
lahf
cdq
jecxz
mov
adc
mov
sbb
jne
jp
setb
xlat
add
aaa
jno
mov
push
out
jno
push
dec
repnz
add
cdq
sahf
sub
push
jmp
hlt
ins
sbb
ret
std
cmp
out
out
xchg
push
xor
and
xchg
mov
cwde
xor
xchg
mov
movs
and
pop
fwait
mov
fcom
scas
nop
inc
ins
mov
in
inc
mov
sti
shl
jns
dec
pop
(bad)
retf
cli
sbb
jmp
mov
add
sahf
inc
hlt
sar
push
mov
pop
imul
mov
pop
and
add
dec
push
xor
mov
fimul
jmp
or
mov
ins
repnz
cmc
mov
ret
jmp
mov
or
mov
xchg
(bad)
arpl
imul
retf
loopne
or
js
push
lock
retf
cmp
push
stos
xor
jle
mov
loopne
sbb
sub
sbb
push
(bad)
stos
pop
(bad)
sub
rol
mov
cmps
push
enter
add
shl
hlt
test
mov
outs
xor
push
pop
cs
adc
imul
lahf
lock
cmp
imul
fsubr
ret
(bad)
fnstsw
push
push
push
adc
ficomp
ins
mov
ss
mov
stos
mov
or
inc
mov
dec
xor
push
xor
test
ficom
dec
xor
rcr
jg
xchg
rcl
pshufw
jne
cld
or
add
out
cmps
mov
cwde
xchg
xor
sti
jne
(bad)
mov
add
sbb
rcl
cmp
xor
jge
xor
retf
jne
inc
or
add
and
mov
push
inc
pop
rcl
lock
adc
arpl
pop
lods
lock
pop
mov
sar
pop
dec
out
test
das
bound
xchg
inc
inc
sbb
inc
mov
xchg
adc
in
in
lahf
rcr
dec
xchg
pop
cmp
or
js
xchg
dec
mov
cs
adc
sbb
mov
mov
or
scas
cmp
out
das
cld
push
xor
mov
push
(bad)
sbb
sbb
stc
(bad)
push
pop
mov
jae
mov
jo
pop
leave
into
jecxz
or
mov
out
test
jle
xchg
das
enter
mul
je
mov
inc
xchg
dec
jne
jns
dec
ins
and
push
lahf
gs
and
mov
mov
xchg
sahf
loop
sahf
push
and
dec
jns
cmps
pop
xchg
not
(bad)
iret
std
mov
add
dec
and
xor
mov
outs
mov
jb
mov
call
and
std
mov
add
pop
lods
mov
or
ret
ret
xor
dec
xor
sub
ret
add
lods
pop
sbb
pushf
or
mov
push
pop
jl
in
push
add
dec
bound
and
mov
jle
mov
outs
lods
dec
popa
and
mov
dec
pop
jnp
and
mov
loopne
jns
mov
outs
mov
mov
or
sbb
push
sbb
iret
data16
aad
pop
push
push
cmp
mov
jnp
inc
jne
push
jg
or
and
xchg
mov
jae
jg
call
mov
rcl
(bad)
jne
retf
and
mov
sbb
por
inc
icebp
stc
popf
push
mov
(bad)
add
or
popa
and
mov
jne
xchg
or
adc
popa
outs
movs
sti
hlt
popf
push
and
in
push
mov
xchg
and
dec
sub
jno
cs
aam
xor
jnp
jbe
and
popf
stc
in
into
fnstcw
int3
sbb
stos
in
adc
les
pop
movs
adc
out
into
inc
bound
js
or
aad
das
push
push
add
and
cwde
bound
(bad)
sti
lds
std
xchg
mov
int3
test
jae
or
xor
cmp
je
inc
aaa
mov
popf
dec
cdq
in
xchg
jge
inc
fisttp
push
dec
jno
ret
scas
jecxz
pushf
repnz
stos
sub
mov
inc
pop
adc
fwait
out
cmp
pushf
jmp
lods
mov
ins
mov
sbb
iret
stos
mov
push
sub
jno
mov
cld
add
or
call
sbb
outs
cmp
jo
in
or
js
xor
sub
mov
(bad)
cmp
sti
push
call
enter
or
rcl
daa
jmp
imul
push
dec
cmp
mov
cmps
cmps
and
sub
mov
push
pop
inc
add
fs
aad
movs
pop
push
mov
push
pop
push
xlat
push
cmp
jbe
stos
icebp
and
adc
mov
loope
inc
pop
mov
hlt
lds
sbb
and
mov
lea
rol
xchg
jne
xchg
jle
(bad)
nop
pushf
inc
and
bound
jb
adc
jnp
pusha
jle
mov
jg
sub
push
test
mov
add
iret
hlt
cmp
ret
out
pop
or
xchg
add
mov
mov
les
sub
jp
cmps
das
cmp
mov
mov
mov
gs
scas
xor
jmp
and
das
idiv
cs
cmp
adc
and
imul
xor
inc
mov
add
(bad)
loope
ficom
outs
jl
and
fild
aam
cmp
not
and
dec
add
lahf
imul
(bad)
cmc
mov
(bad)
loopne
leave
in
dec
repnz
rol
sub
neg
pop
pop
jne
ss
les
jle
jb
enter
push
xor
repnz
mov
mov
sub
call
mov
scas
and
lods
inc
jp
or
es
mov
jo
and
pop
(bad)
out
out
repz
cmp
push
pop
test
fcom
fmul
jne
add
push
push
sbb
cmp
jg
cmp
or
fwait
scas
outs
repnz
std
ret
int3
jp
jmp
jo
xchg
and
dec
mov
and
cmps
aad
and
cmp
adc
inc
bsr
cmp
div
retf
movs
hlt
mov
mov
xor
xchg
mov
xchg
bound
ins
scas
sub
inc
pop
mov
mov
std
stos
je
pop
inc
scas
ins
xchg
fdivr
pop
rcr
(bad)
pusha
cmp
scas
aaa
fisttp
sahf
and
and
inc
test
jmp
cmp
mov
jo
jmp
call
and
cmps
sbb
jb
sub
sbb
jno
pop
ss
mov
pop
dec
cmps
sbb
cmps
fcom
cwde
pushf
les
push
cld
fidivr
xor
mov
loop
pop
test
and
jl
outs
mov
scas
xchg
dec
ret
mov
stos
sbb
inc
pop
cmps
cmc
add
pop
jnp
sub
mov
push
dec
retf
sbb
adc
adc
outs
push
clc
lods
loope
pop
add
pop
loopne
xchg
or
or
jge
jmp
pop
xor
push
shl
data16
out
dec
out
xchg
or
cmp
imul
mov
stos
(bad)
sbb
push
stos
inc
in
push
mov
mov
jmp
fst
daa
jns
lock
outs
(bad)
mov
push
lea
daa
aas
imul
retf
sub
add
dec
bound
pop
mov
not
retf
xchg
mov
cmp
push
and
jecxz
repz
jle
and
retf
jge
scas
gs
test
pop
outs
out
jl
push
dec
cmp
lds
or
pop
fcomp
pop
push
xchg
outs
or
mov
or
(bad)
inc
pop
cmps
and
loopne
nop
push
lock
cli
xor
fdivr
ins
mul
add
pop
scas
lock
in
cmp
sahf
mov
add
cld
push
push
xor
lea
jmp
fdivr
adc
not
fs
mov
test
daa
(bad)
and
int
sub
call
pop
or
lods
push
imul
ins
jle
xchg
or
daa
xor
je
popf
out
add
(bad)
push
cld
sub
cli
sbb
rol
retf
es
mov
pop
or
stos
repz
out
dec
xor
mov
mov
fwait
lea
sbb
push
cmps
les
jmp
adc
and
test
dec
movs
je
ret
push
xchg
dec
(bad)
mov
sti
test
or
mov
shl
ret
fldenv
or
sti
jl
push
push
scas
data16
inc
or
in
in
push
pop
mov
inc
je
xchg
push
jo
cmp
movs
leave
lahf
cmp
pop
cwde
aad
addr16
push
sub
or
mov
ins
and
mov
lock
cmp
clc
shl
mov
call
push
pop
jp
call
call
and
pop
imul
out
push
icebp
cs
xor
or
pop
(bad)
pop
rol
pop
mov
dec
call
stos
pop
pop
push
pop
jecxz
psrlq
(bad)
loope
dec
popf
mov
sub
xor
xchg
or
out
jp
xlat
mov
sub
sbb
popa
cmp
push
lea
mov
pushf
sbb
dec
lds
loope
cld
call
ret
test
jge
and
xchg
and
(bad)
loopne
bound
jns
outs
xchg
dec
cmp
xchg
cmps
xor
push
mov
les
enter
fs
in
jge
cli
cmp
aaa
cmps
add
pop
mov
cmp
cmp
call
stc
js
xchg
mov
jo
mov
aaa
pop
sar
jnp
cmc
ins
in
lds
(bad)
mov
in
mov
push
mul
scas
xchg
and
(bad)
clc
push
jo
and
jb
inc
adc
aaa
in
out
cmp
push
add
pop
out
aas
hlt
xor
jns
jbe
call
mov
sub
push
fnstsw
push
xchg
xor
in
daa
push
xchg
dec
pop
pushf
inc
mov
iret
or
loop
or
cmp
int3
sub
lds
add
cmp
xchg
lods
fidiv
ret
(bad)
mov
sbb
test
xchg
mov
push
dec
mov
pop
push
(bad)
cmc
ja
cld
out
adc
mov
aad
idiv
jno
sti
test
mul
jge
and
inc
or
aam
rol
jp
lods
(bad)
push
arpl
cmp
mov
jbe
in
push
sbb
xchg
add
movs
cmps
stc
ins
push
jbe
movs
fucomp
add
mov
stos
sar
stos
mov
loopne
mov
and
pop
enter
aam
retf
xchg
xor
jnp
mov
dec
ins
fist
mov
scas
clc
aaa
pop
mov
add
jmp
imul
mov
push
(bad)
jne
std
pop
push
call
mov
or
mov
push
sbb
or
inc
inc
in
aam
sub
daa
rcr
test
dec
movs
lods
and
fidivr
movs
xlat
push
sbb
or
int
xor
icebp
sub
and
arpl
add
shl
mov
mov
add
lock
add
ret
pop
loopne
dec
shr
fild
imul
xchg
retf
scas
and
fld
inc
cmps
es
call
stc
out
in
inc
cwde
mov
mov
shl
clc
in
out
xlat
and
push
add
ret
(bad)
mov
push
mov
rol
aad
(bad)
cs
push
xchg
fadd
sbb
jmp
xchg
or
ins
lock
adc
outs
sub
fs
call
shl
loop
fbld
(bad)
es
out
in
sub
jno
or
movs
dec
sub
dec
add
push
ins
mov
test
push
pusha
sub
mov
dec
scas
and
or
rol
(bad)
fxch
test
cmp
sbb
inc
adc
test
add
dec
push
data16
sub
loopne
xchg
sbb
fwait
pusha
fcomp
je
sti
in
outs
add
repnz
dec
jb
dec
pop
stos
dec
mov
cs
mov
sub
adc
rol
popf
mov
jmp
push
sub
lods
cmp
loope
push
pusha
inc
jmp
add
pop
cs
pop
adc
sbb
pop
pop
add
pop
adc
bound
js
test
dec
jmp
lods
pop
in
mov
sub
jmp
rcr
cmp
pop
(bad)
outs
dec
jbe
dec
inc
xor
ret
mov
mov
aaa
call
sbb
or
pop
mov
push
call
scas
enter
sbb
fadd
js
and
mov
idiv
push
jg
mov
repnz
sub
sbb
in
shl
mov
in
sar
xor
lods
xchg
mov
mov
sahf
retf
outs
and
mov
cmps
xchg
jnp
hlt
ror
mov
cmp
or
adc
pop
stc
jmp
jns
mov
xlat
fwait
outs
scas
pop
lods
call
mov
and
jnp
lods
sub
mov
push
push
pop
add
mov
xchg
mov
mov
xchg
adc
mov
popa
outs
retf
js
sbb
push
cld
and
xlat
das
shl
std
sub
pop
mov
test
(bad)
xchg
add
adc
add
int3
cmc
xchg
mov
add
mov
or
mov
push
aaa
jns
cmp
aam
clc
push
scas
jge
sar
mov
xchg
inc
repz
test
mov
lods
sub
arpl
inc
loop
xor
cs
fs
stos
mov
inc
rcr
mov
mov
js
push
aad
push
dec
and
xchg
mov
push
push
xor
or
in
loope
push
pop
push
jmp
pop
pop
or
mov
(bad)
(bad)
cmp
and
push
xor
jmp
sbb
das
std
fadd
out
mov
sbb
shr
mov
push
jmp
(bad)
push
ret
fdivr
data16
push
jnp
imul
dec
lds
jmp
dec
test
mov
imul
shl
fdiv
(bad)
mov
int
rcr
cmp
enter
push
sbb
invd
ret
pop
push
mov
mov
arpl
fidivr
icebp
popa
cmps
pop
or
xchg
jns
cld
sti
mov
lock
ins
scas
add
ja
sbb
dec
sbb
mov
push
xchg
(bad)
fisttp
cld
ds
lods
out
cmc
jecxz
fstp
xchg
int3
lock
xor
cmp
fsub
and
push
mov
inc
and
shr
cs
dec
mov
adc
pop
je
movs
icebp
ret
pop
or
les
outs
mov
setne
mov
dec
xchg
lea
or
sub
mov
cmp
push
mov
stc
dec
push
leave
popa
jge
add
test
sbb
sub
mov
mov
movs
fcomp
fisubr
adc
pop
pop
add
jge
xchg
xchg
dec
mov
pop
jl
cmp
pushf
push
mov
call
jnp
stc
mov
inc
xchg
into
rcl
add
retf
outs
stc
test
mov
int
xor
add
push
inc
sti
in
aam
adc
imul
add
adc
fucomip
outs
sub
and
sbb
aaa
es
and
clc
out
cmc
cld
pop
sbb
mov
sub
pop
sbb
sahf
sub
push
pop
pop
add
lea
mov
jmp
jmp
sti
lods
add
pop
mov
mov
and
sbb
pop
xchg
cmp
pop
sbb
mov
scas
adc
sub
xlat
rcr
mov
adc
(bad)
sub
pop
cmp
push
cmps
std
xchg
jne
sub
xchg
jbe
fwait
fwait
xchg
imul
mov
int3
add
xchg
mov
fucompp
(bad)
aad
cmps
cmp
fild
stos
mov
push
sub
std
xor
adc
es
ins
push
mov
and
test
fstp
icebp
shr
xchg
les
ins
repnz
xchg
adc
jae
retf
nop
dec
js
clc
xchg
mov
idiv
cs
repnz
xchg
(bad)
xchg
push
repnz
push
popf
icebp
mov
aam
adc
sbb
sbb
adc
(bad)
dec
push
out
test
call
retf
arpl
and
aam
mov
stc
ret
psllq
pusha
in
cmp
mov
mov
adc
clc
xchg
dec
dec
and
push
cld
mov
cwde
jmp
outs
xor
ins
xor
inc
ins
adc
inc
sbb
mov
mov
xchg
cmps
in
push
retf
fs
jp
retf
aaa
ror
sbb
iret
pop
xor
sub
shr
fidivr
ja
ret
cmp
pop
(bad)
bound
adc
loop
jge
out
fisubr
scas
shl
or
push
in
test
xor
sub
push
fdiv
inc
fstp
mov
cmp
push
jl
ror
lea
push
cmp
jo
pop
fidiv
iret
out
dec
outs
adc
imul
loopne
xchg
enter
lds
(bad)
cli
mov
pop
out
out
jg
dec
mov
out
add
icebp
outs
dec
into
add
bound
sbb
xchg
dec
dec
mov
outs
push
xor
jl
scas
in
or
and
jno
int3
stos
and
pushf
mov
arpl
jne
ins
mov
cmp
sar
dec
lahf
push
push
push
pop
jbe
push
dec
push
loopne
jg
ins
dec
lods
cdq
enter
(bad)
push
fdivr
outs
inc
sar
movups
inc
sbb
cmp
dec
gs
add
dec
adc
loope
rcl
call
sbb
pop
jecxz
mov
mov
and
xor
pop
call
(bad)
jne
popf
cmp
mov
jnp
push
inc
dec
mov
jmp
dec
out
mov
ss
inc
sbb
call
iret
dec
add
js
jmp
and
bound
pop
pop
outs
pop
(bad)
xlat
inc
inc
push
fcmovb
(bad)
xor
pop
and
adc
inc
mov
mov
lods
sub
jg
pop
(bad)
sbb
fst
sbb
and
adc
es
jle
xchg
pop
cli
xchg
add
sbb
leave
and
cmp
inc
sub
push
(bad)
aam
int3
lods
add
pop
cmps
mov
es
(bad)
outs
inc
jle
dec
pop
int3
fsub
cmp
mov
sahf
fistp
nop
je
xchg
ja
repnz
dec
mov
iret
ss
inc
ret
loop
cmp
or
pop
or
test
xchg
pushf
outs
fcomp
js
ins
jp
push
pop
int
movs
(bad)
sbb
sub
inc
pop
pop
sbb
scas
lahf
dec
xor
outs
pop
scas
ret
pop
sub
inc
retf
sar
enter
jmp
dec
nop
aas
adc
shl
fstp
mov
in
inc
int
call
pop
dec
mov
mov
inc
xor
mov
pop
outs
(bad)
adc
add
int3
mov
jecxz
sub
inc
dec
xlat
shr
test
loop
fsubr
xchg
xchg
cmp
pushf
pusha
clc
mov
fisub
push
sbb
gs
sbb
jmp
dec
sbb
test
out
jmp
shl
lahf
aad
and
add
sahf
sbb
inc
mov
xchg
jbe
jne
mov
cli
js
xlat
mov
das
and
cs
mov
call
retf
mov
jmp
sbb
adc
xor
je
add
sahf
dec
xor
push
mov
xchg
pop
jl
adc
adc
call
cmp
aam
xchg
push
push
sub
into
push
rcr
int3
(bad)
fistp
or
scas
ficomp
xor
mov
nop
mov
js
fstp
js
jecxz
stos
xor
jg
and
ss
je
mov
add
loopne
loopne
push
clc
mov
add
fwait
mov
cli
cmp
add
rcr
std
stos
rol
pop
(bad)
mov
(bad)
not
mov
cs
fld
xlat
scas
mov
imul
sub
push
popa
pop
mov
dec
imul
daa
out
jns
fcmove
and
jno
ret
inc
pop
adc
xchg
jb
mov
or
addr16
xor
adc
test
push
repnz
leave
sub
inc
push
dec
xchg
xor
jnp
inc
or
repz
movs
xlat
pop
mov
mov
out
adc
lds
imul
xor
mov
(bad)
imul
push
mov
iret
pop
mov
dec
push
ins
mov
cmp
test
jmp
mov
fidiv
jb
push
add
(bad)
xor
call
es
ins
and
ins
xchg
popf
shl
jmp
popa
das
cs
pop
dec
cmp
mov
inc
adc
test
out
jmp
jge
mov
xor
xchg
sar
in
dec
fimul
es
repnz
pop
cmp
pusha
or
mov
push
pop
mov
push
test
pop
jle
pusha
outs
daa
cmp
pminsw
fstp
fisubr
cld
pop
es
xchg
out
jmp
ja
cvtpi2ps
lahf
jns
jg
mov
scas
pop
jmp
and
call
mov
dec
or
mov
add
fcmovbe
adc
stos
ins
jb
jne
push
mov
xchg
xchg
cmp
jmp
loop
stos
pop
dec
repnz
sbb
(bad)
mov
mov
iret
mov
push
and
cmc
dec
jne
cs
outs
adc
cmp
mov
jp
sbb
push
repz
or
call
adc
retf
sbb
ret
(bad)
scas
leave
leave
push
mov
fs
mov
sub
and
mov
gs
movs
clc
cmps
lock
and
out
sub
popa
adc
shl
and
mov
adc
stos
outs
pop
loop
je
jge
nop
leave
sub
test
mov
mov
jl
sub
mov
ins
outs
cmp
scas
pop
sbb
in
call
shr
sub
mov
in
(bad)
mov
xchg
sub
jbe
cli
inc
popf
stos
loope
inc
mov
ror
pushf
stos
data16
lods
xor
xchg
or
mov
pop
outs
fld
cmps
dec
fsub
push
jecxz
aad
adc
push
test
xchg
mov
ds
gs
jecxz
and
jmp
jmp
lock
jns
out
repnz
adc
call
and
cmc
je
sub
inc
and
(bad)
pop
jge
test
inc
std
and
pavgw
popa
push
cmp
and
sub
dec
and
mov
adc
aaa
stos
cmps
(bad)
mov
dec
(bad)
(bad)
sbb
les
mov
fidiv
les
mov
shr
leave
or
adc
inc
mov
mov
and
mov
pop
push
push
enter
into
add
gs
and
or
aam
pop
inc
jno
int3
jno
jno
cs
js
call
jae
xchg
rol
jns
xchg
out
and
(bad)
imul
fs
xlat
out
in
sub
pop
adc
sub
dec
loopne
or
fstp
loop
xchg
rol
mov
push
or
xor
stc
out
or
das
jmp
lock
mov
or
mov
adc
inc
mov
ficom
push
mov
mov
mov
int
push
hlt
mov
in
mov
loopne
add
stos
in
outs
add
popf
push
mov
jmp
mov
mov
sub
add
xor
dec
push
xor
popf
xchg
lods
dec
sar
push
cmp
or
jecxz
push
xchg
mov
jns
pop
cmps
fild
push
pop
popf
cs
out
rol
cmp
movs
int3
out
pop
push
dec
call
loopne
retf
mov
adc
cmp
sbb
div
sub
add
ror
inc
adc
mov
sub
xor
(bad)
or
dec
and
fnsave
dec
sub
push
div
xchg
ss
repnz
fadd
and
out
xchg
mov
mov
pop
xor
xchg
leave
loop
pusha
sahf
mov
lock
jecxz
xor
dec
mov
cdq
adc
aaa
mov
cmp
imul
mov
xchg
xchg
inc
and
push
and
push
inc
pop
adc
mov
stos
popf
add
jnp
lea
jecxz
dec
fidivr
xor
xchg
xchg
sar
xor
xchg
iret
add
ins
mov
pop
rcr
out
and
push
pusha
addr16
add
mov
int3
js
push
add
pop
rol
cmp
mov
mov
sbb
mov
mov
mov
inc
jmp
cmp
rcl
jno
test
xor
sbb
fisttp
add
stc
xor
inc
push
(bad)
not
out
xchg
jmp
push
xlat
ror
xchg
mov
and
out
out
jle
or
pop
pop
test
mov
jae
jns
(bad)
sbb
xchg
adc
sub
add
or
ret
cmp
test
mov
mov
frstor
add
mov
std
adc
int3
daa
inc
fmul
and
rol
xor
daa
(bad)
mov
jmp
sbb
sub
mov
fisttp
loopne
adc
sbb
adc
loop
repnz
xchg
jle
dec
push
xchg
aas
test
push
inc
jno
sub
pop
fist
(bad)
leave
adc
adc
arpl
push
mov
and
dec
sub
loope
push
in
imul
cdq
jbe
xchg
and
test
test
bound
in
add
mov
int
sbb
repz
jle
into
or
mov
xchg
push
aas
push
add
pop
xchg
jo
ins
mov
in
aas
push
mov
xor
enter
push
push
ds
add
frstor
cmp
fmul
lock
jp
cli
cmps
ins
sub
popf
xchg
cwde
jp
sbb
adc
stc
div
jae
jp
lds
adc
movs
cmps
xchg
cmp
mov
gs
sub
and
jg
jmp
(bad)
(bad)
jl
xor
or
fwait
push
xchg
retf
ds
or
into
rcl
cmc
inc
hlt
outs
rcr
jl
or
outs
loope
stos
iret
out
(bad)
sbb
adc
rcl
mov
fidivr
mov
mov
jns
jecxz
inc
cmp
xchg
test
ja
sbb
adc
aaa
mov
clc
hlt
arpl
push
test
sub
hlt
(bad)
sti
ror
aad
in
aad
js
fcom
mov
push
fidiv
and
push
mov
adc
mov
mov
xor
pop
pop
push
xor
and
fucomip
xchg
push
push
es
sahf
leave
ss
sbb
jge
add
ficomp
icebp
popf
retf
mov
or
pop
rcl
mov
jnp
jo
add
cmp
mov
sbb
mov
repz
adc
mov
ret
sbb
imul
stc
iret
out
dec
es
dec
cmps
stc
test
xchg
adc
js
and
call
mov
movs
or
or
xor
ficom
inc
test
jmp
cmps
jne
xchg
inc
or
jo
push
loope
bound
mov
sbb
push
pop
cdq
fcomp
std
pop
inc
jns
in
push
aas
loope
sbb
mov
dec
pushf
adc
jne
test
inc
jne
push
sbb
mov
and
push
stc
xor
jmp
sti
or
cmp
and
and
dec
mov
and
xor
retf
pop
mov
inc
cs
in
adc
loopne
mov
mov
and
sub
int3
adc
call
cmp
repnz
ds
cmp
push
leave
loopne
or
sub
xchg
loope
jmp
or
popa
dec
adc
shl
or
retf
leave
push
jbe
add
stc
pop
je
loopne
mov
test
js
xchg
adc
ins
mov
jb
cdq
test
inc
call
rcr
xchg
inc
xor
dec
pusha
addr16
adc
movs
mov
sub
jbe
fnstcw
outs
outs
pop
xor
push
scas
ins
mov
cwde
xchg
or
xchg
mov
adc
mov
add
jmp
push
cmp
adc
stos
jno
jmp
mov
xlat
add
jnp
mov
mov
sbb
mov
(bad)
xchg
push
rcl
fdivr
jl
(bad)
in
and
int3
in
pop
int
jle
or
call
cmp
test
test
push
loop
lahf
stc
(bad)
jp
std
(bad)
out
push
adc
enter
lds
shl
rcl
adc
lahf
cmps
push
dec
push
adc
xchg
rol
scas
adc
pop
aaa
out
add
sub
arpl
pop
sub
adc
add
sub
mov
ins
xchg
enter
mov
pop
cmp
mov
mov
push
test
shr
fild
(bad)
(bad)
inc
ins
pop
mov
mov
inc
mov
sbb
adc
iret
cmp
xor
frstor
xchg
enter
mov
push
jp
mov
repz
inc
in
hlt
fcmovu
adc
(bad)
repnz
mov
jne
hlt
stos
mov
pushf
enter
inc
lock
cmc
movs
outs
nop
popf
mov
stos
xor
mov
outs
js
cmp
retf
push
test
std
xor
mov
jecxz
fisubr
adc
push
mov
xchg
xchg
push
jge
xchg
push
mov
cwde
iret
jecxz
ins
inc
pushf
(bad)
cmp
mov
inc
pop
(bad)
jmp
add
fidivr
xchg
mov
jge
jmp
(bad)
sbb
cmc
outs
fidiv
call
sahf
push
xchg
test
outs
out
arpl
pop
ja
jecxz
sti
sti
inc
sub
inc
and
mov
lods
data16
xor
cmps
les
mov
push
cmps
mov
add
push
adc
cs
fwait
push
pushf
or
jno
or
cmp
push
cld
push
fcomp
push
push
push
mov
jg
mov
leave
or
cmps
sar
les
sub
outs
xchg
mov
inc
test
xor
addr16
mov
in
jo
scas
pop
arpl
cwde
push
adc
sbb
imul
xchg
aaa
sbb
test
cmc
pop
add
adc
inc
mov
and
shr
lea
inc
mov
mov
mov
retf
icebp
lods
and
mov
data16
dec
pop
(bad)
pop
dec
pop
retf
ret
fs
rcr
loop
xchg
sbb
sbb
dec
add
or
pop
popa
loop
mov
pop
fs
loope
xchg
add
lods
and
cld
imul
cld
imul
fstp
xchg
test
pop
and
pop
iret
xchg
push
mov
rol
sub
aad
add
fcomp
js
test
int
cmps
pusha
arpl
mov
fcomp
fstp
imul
pop
out
in
add
or
jbe
adc
fcom
(bad)
sub
adc
loop
les
imul
xchg
mov
test
push
stos
cmp
sbb
mov
std
lods
sub
sub
in
mov
mov
js
xor
xchg
sub
pop
mov
push
ins
and
sti
sub
bound
xchg
(bad)
cmps
sahf
sub
xchg
lahf
arpl
in
xlat
cmp
in
imul
fwait
jns
sub
lock
sar
mov
dec
imul
xchg
fbld
lods
leave
mov
add
push
seta
iret
repnz
in
fwait
adc
mov
cld
popa
jge
ret
ds
mov
lods
jbe
lods
ins
outs
cmps
imul
lahf
or
test
imul
push
nop
or
or
gs
div
(bad)
outs
mov
cmps
retf
sbb
test
sbb
xor
cwde
sub
xor
mov
clc
in
mul
ffree
or
data16
repz
dec
mov
aas
or
push
bound
jle
fdivr
es
div
ins
cmp
cmp
fstp
dec
dec
out
int3
and
jo
add
pop
test
mov
or
fisubr
cmp
or
std
and
xor
add
xor
shl
dec
xor
retf
movs
push
mov
cmc
loopne
ss
cmp
out
popf
inc
jbe
ror
arpl
les
mov
cmp
adc
pop
(bad)
sub
or
or
bound
not
mov
into
aas
test
sbb
and
(bad)
mov
jnp
iret
mov
jg
test
push
or
xchg
sbb
adc
mov
sahf
cmp
inc
sub
sbb
pop
lods
icebp
mov
sub
loopne
imul
ss
(bad)
xlat
cmp
repz
push
inc
xchg
(bad)
cmp
push
scas
movs
in
mov
cmp
dec
loopne
sbb
test
enter
sbb
fsub
repnz
ins
mov
mov
movs
adc
stos
xchg
or
push
or
out
(bad)
sub
mov
mov
jno
mov
lock
cmp
mov
xchg
outs
das
retf
or
in
pop
mov
lock
mov
and
data16
mov
je
data16
inc
fild
lock
cmp
fst
mov
sub
push
jecxz
imul
dec
lds
pusha
in
vmwrite
push
and
inc
cmp
retf
in
jne
xor
jg
fstp
mov
ins
call
adc
fnstcw
dec
mov
pop
jge
dec
or
and
push
dec
ret
loope
jmp
fucomip
xchg
sbb
bound
enter
jge
imul
xchg
fistp
hlt
or
int
imul
xor
xor
retf
js
xchg
ret
popa
pusha
jle
adc
sbb
push
scas
into
shl
popa
xor
xchg
dec
loop
bound
sti
and
sub
sbb
cmps
push
mov
aaa
pop
out
pop
bound
adc
xchg
adc
sbb
jl
xchg
and
jge
in
and
cli
inc
xor
add
cmp
ja
sti
into
call
retf
inc
push
inc
stos
call
cmp
sub
pop
(bad)
(bad)
xor
dec
hlt
mov
(bad)
int3
(bad)
cli
popa
(bad)
fwait
mov
inc
int3
mov
cmps
push
jp
cmp
push
mov
cmp
es
rol
fdiv
adc
sbb
fwait
dec
pop
adc
ins
repnz
cmp
mov
pop
test
mov
xchg
dec
hlt
cmovb
mov
(bad)
(bad)
push
lea
fwait
movs
call
xchg
ja
mov
mov
and
jmp
jl
(bad)
(bad)
(bad)
(bad)
add
lea
mov
mov
xchg
outs
pop
aad
cs
mov
sbb
int
and
xchg
add
neg
inc
sbb
jecxz
in
clc
bound
loop
les
(bad)
ret
les
inc
jecxz
out
les
xor
nop
fstp
jb
and
daa
in
hlt
adc
inc
and
dec
jp
imul
sub
fild
lods
adc
test
js
dec
sub
adc
fwait
add
out
inc
test
stc
inc
test
dec
and
adc
cmp
push
jbe
sbb
and
xchg
ror
push
mov
or
scas
in
cli
inc
aaa
dec
clc
ficom
mov
inc
loope
xor
and
xchg
ret
xor
sti
lds
jb
jl
mov
and
cmc
adc
xor
stos
sti
or
call
adc
mov
mov
pushf
pushf
dec
je
outs
cdq
fs
cmp
in
or
push
cmp
sbb
xor
mov
hlt
jle
(bad)
lahf
pop
or
mov
xor
scas
fistp
pop
xchg
int
xor
push
mov
adc
popa
push
retf
or
push
jns
jcxz
shl
sbb
pop
xchg
push
push
inc
in
xor
cmp
aaa
(bad)
adc
mov
inc
pop
jmp
adc
inc
dec
jbe
shl
and
cli
ins
or
in
dec
aad
data16
mov
mov
push
push
sbb
(bad)
repnz
jbe
pop
and
icebp
mov
cmp
jb
mov
sti
shl
mov
icebp
pushf
stc
fcomp
fst
mov
or
and
es
lahf
sar
xchg
xor
lods
inc
inc
sub
lods
mov
jo
icebp
sbb
inc
mov
out
inc
std
sub
out
pop
cli
dec
rcl
cmps
or
call
loop
pop
movs
sahf
xor
push
jp
scas
cli
ins
inc
push
push
jle
in
rcr
jbe
cmp
std
movs
ss
mov
xor
iret
sub
mov
xor
(bad)
or
jge
js
loope
jle
mov
cmp
jb
(bad)
popf
out
imul
xchg
fsubrp
dec
mov
push
iret
push
cmp
retf
sbb
push
iret
test
sbb
ds
cmc
out
cwde
cs
and
ror
scas
sub
xchg
xchg
mov
jns
dec
sar
lods
jmp
pop
movs
xor
clc
pop
xchg
mov
mov
aas
sub
icebp
jl
(bad)
inc
dec
frstor
inc
pop
das
mov
sahf
xchg
mov
sub
sbb
push
fnstenv
in
sbb
ins
jbe
xor
and
push
jmp
add
xor
mov
pop
or
push
xchg
sbb
out
test
jno
out
imul
and
add
push
mov
movs
pop
cmp
fwait
retf
pop
cld
pushf
test
mov
inc
rcr
cli
jge
dec
add
mov
outs
add
sbb
xor
pop
mov
sub
push
int
push
inc
and
cmp
fsubr
jl
adc
mov
imul
es
dec
mov
mov
(bad)
cld
loop
test
mov
nop
jb
mov
xchg
call
scas
aaa
mov
sub
add
sub
sbb
mov
sbb
xchg
popa
movs
sub
in
cmc
sbb
pop
movs
mov
dec
fstp
das
or
sbb
rcr
inc
cli
mov
sub
mov
mov
pop
add
xlat
pop
mov
or
mov
addr16
leave
pop
fwait
sub
loopne
adc
mov
dec
mov
call
xor
ud0
push
mov
and
bnd
rcr
loop
sub
sbb
call
push
popa
(bad)
jae
call
jmp
ins
cmps
cmp
mov
cs
jl
test
cwde
ins
push
fwait
loope
push
stc
cmp
mov
call
sbb
sahf
dec
pop
pop
(bad)
jg
shl
sub
add
mov
stos
dec
gs
jno
pop
jne
dec
repnz
out
dec
mov
xchg
xchg
push
fnstenv
push
std
and
mov
(bad)
jmp
dec
popf
adc
stc
dec
pop
inc
cwde
or
lahf
and
into
fwait
cmps
mov
jne
mov
std
pop
pop
jae
pop
repz
mov
mov
loop
adc
loope
popa
lea
or
jmp
add
or
sti
xchg
cmp
dec
push
sbb
daa
mov
add
out
sahf
mov
pop
mov
and
retf
aaa
(bad)
jg
cmp
cld
(bad)
pusha
jmp
inc
add
dec
loope
cmp
jnp
fisttp
dec
shl
iret
stos
jecxz
pop
mov
ja
movs
bound
(bad)
push
hlt
mov
or
leave
sbb
cmp
jmp
ror
dec
mov
jbe
push
sar
(bad)
std
and
inc
or
loope
mov
xchg
(bad)
xor
lods
(bad)
cmp
arpl
or
in
call
xor
neg
jle
push
movs
inc
aas
dec
ror
xor
nop
cdq
das
xchg
test
mov
xor
dec
cld
imul
sub
dec
std
push
push
scas
pop
jno
loopne
inc
cmp
jle
ja
dec
push
xchg
ds
(bad)
daa
sbb
sub
xor
push
fidivr
adc
loop
adc
mov
xchg
sub
fwait
mov
jns
nop
and
adc
lods
push
cmps
aaa
out
ret
into
pop
push
sahf
push
(bad)
addr16
cmp
das
add
adc
sub
sahf
retf
inc
pusha
getsec
pop
sub
arpl
mov
mov
cmp
std
jmp
hlt
push
and
mov
aas
retf
pop
add
fcmovb
xor
and
cli
(bad)
int3
cmp
add
cld
push
sbb
not
add
mov
inc
cmp
mov
sbb
fild
mov
push
dec
mov
and
les
cmp
dec
aam
sbb
xor
sbb
xor
cmp
int
in
pop
xlat
push
inc
and
xchg
mov
test
nop
jno
daa
bound
lea
xor
aad
and
jp
jno
jmp
sar
xchg
push
imul
imul
sti
inc
sbb
dec
add
out
addr16
cs
mov
push
xor
icebp
dec
add
add
inc
cmps
rcl
jo
jmp
add
repz
test
cmp
stos
or
aaa
inc
mov
rcr
movs
xchg
inc
call
jbe
xchg
test
hlt
mov
push
lods
sbb
call
call
call
popa
ret
je
out
fs
cmps
jge
xchg
jns
iret
inc
and
rcl
xor
inc
jle
fcmovnbe
inc
icebp
cmp
rcr
out
(bad)
pop
jle
mov
enter
cmc
sahf
fist
jg
mov
push
enter
dec
jbe
(bad)
inc
jecxz
iret
jmp
push
(bad)
push
bnd
(bad)
jnp
xlat
mov
adc
cmp
loopne
jg
fwait
jne
test
mov
and
add
sub
mov
sub
xchg
push
push
inc
xor
and
lea
shl
retf
imul
push
push
cmp
push
jg
mov
(bad)
pushf
xchg
and
pop
or
sar
inc
inc
sbb
dec
inc
imul
ror
out
jb
push
ds
jae
repz
test
cli
push
or
mov
mov
sar
cmp
iret
std
cld
repnz
add
stc
in
push
sub
pop
lods
mov
int3
adc
jmp
sar
or
sub
ds
int
lods
inc
and
push
mov
das
lea
mov
out
add
push
add
pop
ss
ins
add
sub
ins
adc
xor
or
lea
cmp
and
ret
or
ss
sti
ror
or
scas
out
and
sub
sbb
fsub
push
xchg
mov
inc
popf
cmp
pop
aaa
mov
dec
mov
jmp
pop
fldenv
fld
adc
or
setae
sub
jmp
jge
into
mov
mov
bound
push
test
ja
xchg
(bad)
in
outs
cs
fwait
repnz
jnp
mov
jl
retf
mov
call
pop
dec
and
in
push
jne
pop
mov
dec
xchg
mov
xchg
ds
retf
cwde
cs
xlat
repnz
ret
cmp
xchg
sbb
lds
mov
cmc
sbb
out
sbb
mov
mov
inc
test
add
lea
dec
jl
cmps
jecxz
repz
ins
dec
add
xchg
rol
fdivp
and
push
inc
ret
sub
rol
iret
push
mov
sbb
dec
rcr
sbb
mov
retf
mov
out
dec
arpl
adc
rcr
mov
push
inc
xor
cmp
dec
adc
jbe
xor
gs
cmp
jl
aad
xlat
loope
cmp
pusha
sbb
pop
sub
shr
(bad)
hlt
pop
jno
xchg
call
jo
push
aas
rcr
dec
fucomp
adc
rcl
inc
in
xor
std
dec
add
movaps
fcomi
retf
add
sub
sub
das
pop
or
or
pop
mov
adc
xchg
cwde
jb
mov
leave
push
mov
retf
mov
xlat
push
mov
sub
and
jmp
enter
retf
call
ins
jg
ret
or
cmps
adc
push
scas
bound
imul
sub
cmp
jns
xchg
mov
sbb
jle
rcl
dec
mov
stos
lock
daa
rol
aas
push
jmp
pusha
mov
outs
sbb
adc
cmps
inc
out
scas
fld
arpl
pop
repnz
cld
in
push
cmp
mov
pop
inc
aaa
pop
cli
xor
or
fnstsw
in
inc
std
mov
int3
adc
call
push
xor
cld
jl
cmp
out
mov
inc
pushf
jmp
dec
sahf
push
dec
cli
retf
xor
ja
xchg
add
add
bndstx
and
(bad)
(bad)
aad
xor
vmread
sbb
jl
(bad)
fmulp
gs
mov
sub
mov
adc
push
mov
lock
dec
sbb
and
icebp
ret
push
into
mov
rcl
sbb
pop
xor
lods
fsub
mov
sbb
dec
test
std
out
aam
pop
mov
or
ins
cwde
add
and
jg
add
sbb
xchg
fadd
popa
sahf
mov
fucomp
stos
dec
test
arpl
cli
or
mov
inc
shr
ja
xor
and
mov
cdq
ins
ficomp
enter
dec
push
aad
imul
xor
in
xchg
xor
adc
jge
jp
jae
aad
mov
jp
and
inc
test
xchg
fisub
add
ret
test
out
lods
lods
stc
movs
jle
mov
push
dec
pop
cmp
ret
jge
and
adc
mov
scas
mov
rol
and
shl
pop
scas
push
mov
sub
mov
pushf
jmp
and
psrld
sub
inc
stos
cmc
inc
retf
outs
mov
mov
lahf
test
mov
sbb
(bad)
add
cli
sub
test
push
daa
fmul
mov
out
shl
fwait
dec
loop
jg
jnp
lods
scas
mov
or
lods
mov
sbb
xor
jbe
sub
mov
stos
and
sahf
add
cmps
mul
shr
call
test
sar
mov
mov
neg
std
inc
push
pop
cmp
dec
aam
xor
fs
jno
dec
and
xchg
iret
fdiv
aaa
hlt
mov
(bad)
cmps
xchg
fucomip
push
inc
mov
pop
sbb
push
and
add
or
sar
sbb
sar
jge
rcl
push
xor
jmp
call
add
scas
jmp
jo
into
repnz
sbb
out
mov
and
ret
mov
dec
mov
add
lods
inc
ins
dec
mov
leave
(bad)
mov
stos
jns
mov
or
xchg
repz
ret
arpl
loop
push
stos
out
mov
jb
lock
dec
dec
mov
cwde
mov
mov
das
mov
push
xchg
into
cwde
(bad)
and
mov
jmp
jg
inc
mov
pop
jnp
sub
clc
jecxz
mov
iret
mov
mov
stc
and
xor
xchg
mov
adc
sbb
in
mov
and
cmp
clc
outs
pushf
fist
movs
and
and
ins
mov
jae
pop
push
scas
leave
std
div
(bad)
mov
test
inc
aam
xchg
shl
clc
sub
xor
pusha
mov
mov
lods
(bad)
call
dec
pop
hlt
pop
icebp
shr
mov
imul
xor
ins
add
sbb
(bad)
and
leave
push
data16
(bad)
mov
jb
ja
(bad)
(bad)
lock
in
jae
xor
sbb
fldenv
inc
sub
outs
stos
fmul
jg
(bad)
retf
dec
neg
rcl
stos
inc
and
push
mov
cmp
pop
xor
mov
push
and
fwait
shr
inc
dec
and
data16
fild
in
aam
int
and
or
dec
cdq
add
mov
push
xchg
ja
sub
mov
inc
or
lods
sub
add
xchg
pusha
push
in
repz
popf
dec
or
mov
sub
(bad)
loopne
bound
pop
popa
les
xlat
fdiv
das
lea
arpl
mov
retf
rol
fwait
mov
icebp
jae
dec
cmp
sub
sub
sub
mov
mov
cli
leave
lock
jecxz
mov
pop
cmp
add
fsubr
cld
or
std
cs
iret
pop
jnp
jno
das
adc
jge
call
cli
popa
jbe
popf
jp
fsubr
scas
int
mov
das
fs
stos
inc
popa
clc
cld
hlt
xor
xor
inc
les
out
cmp
dec
and
test
test
mov
mov
mov
mov
out
mov
xlat
pop
stos
loopne
cmp
add
mov
outs
add
adc
push
add
outs
lods
ss
mov
repnz
fs
pop
cwde
stos
xchg
xchg
mov
xor
repnz
xor
out
cdq
cmp
cmp
jae
repnz
lahf
jmp
push
pop
jbe
adc
out
xor
loop
stc
mov
sbb
jl
scas
inc
sub
inc
jp
xchg
mov
fist
sub
fs
mov
popa
test
test
leave
ins
jae
sahf
xor
scas
cmp
imul
xchg
cmps
xlat
cmp
push
icebp
jae
jl
pop
in
xor
clc
out
mov
or
test
xor
jo
(bad)
imul
mov
aam
shr
dec
xchg
push
xchg
std
je
inc
cmps
out
gs
loope
add
scas
test
pushf
xchg
or
sbb
lea
jne
call
sub
fidiv
cmp
pop
xor
push
in
addr16
arpl
or
cmps
mov
push
pop
loop
cmp
and
mov
dec
aam
loopne
or
mov
daa
add
movs
pop
adc
into
pop
adc
in
fld
call
out
lock
push
push
in
jle
into
push
push
mov
imul
mov
fldenv
xor
outs
jmp
jp
mov
jo
or
(bad)
in
fadd
fdiv
jg
cdq
xchg
out
dec
icebp
cmps
push
cmp
std
cmp
loope
push
push
cmc
call
push
mov
mul
or
inc
int
test
and
pop
ja
push
lahf
(bad)
nop
xor
sti
rcr
dec
movs
pop
push
inc
shr
dec
mov
xchg
sar
push
pushf
lds
mov
jbe
add
jmp
adc
mov
outs
test
cmps
mov
jnp
push
jns
mov
mov
dec
ja
mov
sahf
pushw
in
xlat
outs
push
jg
cmp
jp
jb
leave
sbb
xor
fwait
(bad)
out
push
nop
xchg
fmul
push
sbb
push
xchg
mov
call
xor
adc
cmp
ror
sub
ins
xor
dec
das
mov
shl
cdq
mov
test
rol
cmp
dec
pop
shr
inc
ins
fs
int3
push
pop
inc
inc
ins
es
adc
jno
adc
cli
nop
cli
test
out
xchg
mov
push
or
aad
push
mov
(bad)
sbb
sbb
in
outs
(bad)
frstor
xor
jl
inc
cld
push
inc
mov
jnp
adc
leave
add
xchg
aad
cmp
add
int3
add
or
cwde
push
mov
movs
adc
add
push
add
scas
mov
cdq
jecxz
(bad)
inc
mov
mov
test
call
jp
jmp
pop
jae
sub
js
and
push
movs
fcomp
cmp
(bad)
cmp
or
shl
or
adc
and
xchg
and
jg
cdq
int
mov
rdtsc
mov
ss
jle
enterw
vpsubq
test
jmp
pop
jbe
in
mov
dec
xchg
pushf
xor
repz
pop
mov
adc
xchg
dec
rol
popf
jmp
mov
cmp
or
push
les
rol
inc
sub
push
aam
call
inc
pop
sti
movs
pop
ror
outs
pop
lds
mov
or
jle
pusha
xor
leave
and
add
adc
xor
pusha
popf
inc
jnp
loop
imul
mov
(bad)
fld
inc
out
(bad)
aad
push
mov
dec
(bad)
jp
sbb
push
add
mov
push
push
mov
mov
enter
cmp
lods
mov
pop
addr16
popf
loopne
mov
cmps
mov
aaa
fldenv
jle
in
xor
sub
mov
mov
pop
mov
test
dec
add
test
xor
daa
stc
add
call
pop
es
movs
ror
stc
cdq
xlat
in
cs
in
aam
loope
cs
and
push
mov
and
ins
mov
xchg
dec
jge
cmp
lfs
in
dec
addr16
push
mov
loop
sbb
add
sub
das
xchg
xor
rcl
(bad)
dec
je
mov
retf
out
cmps
jno
daa
xor
adc
inc
dec
cmps
adc
mov
stc
lahf
(bad)
cmp
sahf
inc
loopne
jo
fwait
dec
pop
push
cmp
dec
fdivr
ror
stc
inc
test
fisub
icebp
xchg
ret
fisttp
pop
jl
repz
sub
push
add
mov
ret
push
push
(bad)
pushf
sub
clc
xlat
mov
scas
xlat
out
mov
std
loop
push
jnp
xchg
mov
sar
aas
or
xchg
adc
inc
int
pop
jns
call
imul
jno
cmc
adc
push
rcr
inc
ins
inc
push
clc
pop
loopne
jne
jns
sbb
sbb
int3
add
inc
cwde
(bad)
fsub
gs
sub
cmc
cld
mov
jbe
(bad)
jecxz
es
pop
pop
add
adc
push
adc
inc
xor
and
fstp
test
sub
int
sub
addr16
lea
pop
call
xchg
mov
ins
xor
and
ud1
or
jle
xor
dec
jns
or
jbe
jmp
cmc
cmp
rol
movhps
stos
bound
nop
mov
or
jl
das
(bad)
out
dec
xchg
inc
fcom
in
enter
outs
pop
and
iret
jae
push
enter
mov
sbb
mov
loope
jne
add
inc
and
fbld
and
sub
out
call
cmc
scas
mov
daa
in
out
shl
sub
(bad)
cmp
ins
ja
push
icebp
jo
stos
mov
jmp
sti
sub
mov
fmulp
mov
loopne
cmp
sar
lds
leave
lds
mov
pop
std
inc
or
add
sahf
xor
sub
jb
sub
sbb
push
loope
in
fld
add
adc
fist
in
cmp
cmps
inc
cmp
stos
lods
fidivr
shl
jae
aaa
sbb
mov
pop
xchg
fwait
cmp
pushf
sbb
xchg
cld
jo
mov
in
xchg
jo
jge
sti
mov
jmp
add
ror
call
pop
aas
cli
xor
neg
xchg
aad
pop
mov
jmp
rcl
push
icebp
das
movs
dec
mov
mov
mov
ja
or
add
stc
jns
add
jmp
scas
imul
cli
push
adc
mov
aam
lods
dec
jle
pusha
pop
dec
pushf
dec
ds
adc
repnz
loop
xchg
pushf
(bad)
mov
nop
sub
xor
fsubr
ret
test
mov
cmp
xlat
ret
mov
and
add
out
scas
and
shr
sbb
out
xchg
rcr
sub
mov
mov
idiv
cmps
push
mov
add
mov
enter
mov
sub
call
repnz
leave
push
xor
or
pop
jne
mov
dec
and
push
dec
or
std
popa
xchg
clc
mov
dec
fnstenv
fmul
dec
and
dec
adc
and
inc
ret
test
addr16
sub
pop
je
mov
out
push
inc
mov
out
lock
cmp
or
inc
sbb
cmp
ins
lock
push
addr16
ins
jp
outs
lock
clc
cs
mov
xchg
push
(bad)
and
or
xchg
icebp
scas
xor
hlt
pop
and
ds
cmp
bound
add
xchg
in
adc
retf
nop
test
(bad)
mov
ret
add
dec
pop
pop
dec
scas
cdq
cmp
imul
push
mov
add
jmp
xchg
sbb
xchg
cmp
cmc
std
in
(bad)
das
cld
iret
pop
xor
push
cmps
xchg
jmp
sub
mov
outs
cmc
ins
xchg
mov
cmps
xor
mov
lds
inc
sbb
cmp
add
inc
dec
and
xchg
xchg
add
dec
pop
xchg
call
inc
lds
pusha
cmps
std
popa
push
outs
imul
xor
daa
retf
repz
pop
call
or
xor
mov
es
rcr
je
push
inc
aad
push
rol
stos
inc
rcr
mov
jle
xor
out
cmovno
scas
mov
mov
cmp
stc
xor
call
aas
jns
int
jo
add
bound
and
rcl
fisub
mov
pop
mov
add
sbb
sub
sar
xchg
push
jne
pop
sbb
scas
and
(bad)
movs
lock
push
in
aam
js
loopne
jge
(bad)
xor
mov
mov
xchg
xor
jnp
jb
jae
mov
loope
cmp
dec
and
cmp
sbb
lods
add
xor
push
movs
mov
ins
add
inc
popa
mov
mov
jmp
inc
ja
je
xchg
out
or
cmp
cli
fidiv
shl
icebp
inc
adc
std
ret
pop
jl
inc
push
bound
inc
mov
(bad)
out
inc
xchg
lahf
jge
repz
dec
sbb
mov
mov
enter
mov
pushf
out
in
add
iret
xlat
jle
push
fsub
imul
xchg
sub
dec
(bad)
test
aas
das
sub
mov
mov
int3
dec
and
imul
fbstp
std
mov
nop
outs
mov
mov
jmp
fdivr
adc
ins
dec
push
add
xchg
sbb
leave
push
sub
cmp
pop
je
pop
pop
in
cmp
sar
mov
(bad)
or
fs
mov
push
sub
mov
xchg
mov
xlat
cmp
jl
fsub
sti
not
jmp
(bad)
jle
adc
out
bound
pusha
sbb
dec
aam
xadd
js
das
sbb
jbe
fimul
mov
btr
movs
dec
cmps
(bad)
adc
mov
in
retf
lods
stos
jecxz
push
or
and
inc
jmp
sbb
mov
scas
lea
or
jae
loope
mov
cmp
dec
fs
mov
pushf
sbb
retf
ds
ret
jp
and
in
mov
mov
ret
adc
jle
sbb
sbb
aas
js
mov
push
or
hlt
pop
inc
add
icebp
add
shr
sub
jl
cdq
or
gs
xchg
jns
pusha
(bad)
out
fs
inc
add
pop
jg
pop
dec
mov
sbb
dec
cmps
pop
pop
stc
dec
mov
jmp
inc
mov
push
sbb
jne
push
rol
xor
dec
sahf
jbe
and
push
js
xchg
sub
xlat
dec
icebp
into
sbb
addr16
enter
jae
lahf
pop
pop
fisub
cwde
test
inc
push
jb
rcr
in
scas
dec
movs
pop
jp
dec
dec
ret
shl
hlt
jg
pop
push
cmps
push
rcl
sub
fisub
not
stc
cmp
cmps
dec
std
out
test
test
outs
inc
jae
sbb
or
mov
jmp
sub
xor
fimul
sbb
fcmovnu
icebp
xlat
sub
mov
cmp
stc
cmp
inc
mov
lock
push
aam
push
dec
jl
sub
sub
fcmovu
sahf
sbb
call
lea
adc
xorps
or
dec
dec
icebp
cmp
fbstp
out
cmc
inc
fst
xlat
nop
push
enter
loop
(bad)
push
dec
not
pop
xchg
ss
ret
adc
or
sar
int3
pop
sbb
lds
test
lods
das
inc
and
ja
push
cmp
cmp
xchg
movs
cld
and
pop
jae
repnz
push
arpl
call
ins
sub
movs
push
outs
pusha
sahf
push
pop
push
jae
popf
ins
test
inc
lahf
ins
inc
fdivr
and
mov
inc
jl
in
(bad)
xchg
out
pop
mov
scas
movs
cmp
mov
jmp
into
sub
out
data16
pusha
xchg
sbb
jno
or
bound
xchg
push
adc
loope
test
cmps
adc
cmps
add
js
sub
call
mov
push
pop
add
out
xor
popa
and
ss
push
(bad)
(bad)
fsubrp
and
mov
add
xor
add
xor
sbb
aad
xchg
add
mov
ds
int3
(bad)
loop
sbb
dec
inc
mov
arpl
(bad)
sub
cld
in
mov
pop
mov
dec
cmp
into
(bad)
cli
mov
int3
pop
push
pop
fsubr
pop
pop
sbb
and
and
aaa
mov
mov
outs
jo
into
jbe
out
ds
add
addr16
(bad)
fimul
jg
outs
push
mov
sbb
clc
mov
adc
(bad)
clc
scas
scas
fisttp
dec
inc
enter
and
mov
jns
jno
pop
shl
xor
lods
lods
div
pop
call
stc
mov
mov
pop
push
inc
pop
clc
sbb
mov
outs
gs
fst
rol
sub
leave
cmp
jo
mov
sub
cld
mov
sub
in
mov
iret
rcr
pushf
inc
ret
repz
loopne
sbb
sub
or
sub
sub
or
inc
jmp
(bad)
iret
test
into
outs
or
pop
scas
aam
dec
sbb
(bad)
int3
pusha
movs
int3
fbld
dec
dec
(bad)
xor
fdiv
movs
mov
push
scas
aam
inc
hlt
out
add
scas
push
mov
imul
rcr
and
adc
mov
push
pop
sbb
dec
dec
mov
jecxz
pop
and
scas
lds
cs
adc
leave
ror
push
mov
out
cmc
mov
scas
and
lock
push
pop
(bad)
cmp
xchg
ja
push
mov
add
xor
stos
out
(bad)
cmp
dec
stos
retf
dec
movups
xchg
or
aas
pop
test
je
mov
mov
jecxz
dec
fdiv
xchg
fldcw
adc
inc
rcr
mov
loopne
push
xchg
bound
fst
xchg
mov
clc
jae
inc
jae
xor
int
sub
sbb
mov
inc
jmp
shl
and
push
pop
cmp
int3
pushf
dec
in
push
xchg
jle
daa
fist
mov
cmp
(bad)
sbb
pop
or
out
out
aaa
sar
and
jl
repz
mov
bound
(bad)
cmp
cmp
jp
dec
push
inc
jnp
xor
cwde
imul
stc
adc
xor
test
and
dec
sbb
cli
ds
aaa
pusha
sbb
(bad)
jmp
sbb
pop
adc
jle
aad
movs
repz
dec
aad
jno
mov
xchg
mov
icebp
into
mov
jp
inc
jle
adc
leave
test
in
jecxz
popf
xor
nop
sub
xchg
or
js
inc
sbb
les
stos
push
jo
leave
mov
inc
dec
retf
xchg
inc
push
ja
add
and
lock
cwde
and
add
ret
mov
inc
jg
push
popa
push
mov
mov
pop
mov
mov
sub
mov
icebp
dec
je
jo
cli
dec
jnp
call
jae
xor
div
add
sub
jne
or
cli
test
adc
aaa
mov
in
inc
ja
inc
les
enter
jecxz
adc
fisttp
inc
xor
pop
lods
cwde
aas
retf
push
sbb
and
and
lds
pop
mov
movs
retf
bound
test
stc
mov
and
imul
(bad)
nop
adc
xlat
js
and
mov
inc
outs
xchg
push
dec
inc
cmps
push
iret
std
mov
rcr
mov
cld
(bad)
mov
call
xor
or
cmp
out
jmp
(bad)
imul
push
mov
xor
sub
push
or
xor
xchg
in
(bad)
and
push
call
and
xlat
or
dec
ret
sbb
xchg
jmp
das
(bad)
lock
and
int3
lods
mov
and
sub
arpl
stos
dec
add
mov
scas
jno
cmp
inc
add
or
add
xor
fadd
jno
cmp
inc
fistp
in
pop
cs
cdq
ret
and
das
mov
dec
test
nop
jmp
mov
jne
cs
mov
dec
outs
jb
inc
adc
movs
inc
dec
or
ins
push
js
rcl
adc
aad
pop
sbb
jecxz
aas
(bad)
je
cli
arpl
jle
(bad)
loopne
mov
inc
cvtps2pi
add
xchg
pusha
mov
adc
dec
or
aas
push
xchg
retf
mov
out
into
cs
je
bound
add
dec
xchg
aam
pushf
or
int3
and
mov
mov
adc
out
and
and
ret
mov
jae
int
xchg
lods
cmp
aas
loope
pop
jmp
cmp
aam
cmp
les
mov
xchg
js
push
movs
cmp
idiv
mov
dec
data16
jle
(bad)
sub
in
jae
mov
push
das
rol
and
lock
pop
jne
es
dec
add
xlat
bound
mov
mov
retf
xor
ficomp
aam
inc
mov
xor
jmp
jge
sub
fisubr
fs
push
dec
inc
aaa
dec
pushf
add
iret
jp
lock
xchg
mov
mov
jae
add
sub
xor
jmp
add
stc
movs
cmps
push
and
std
jge
sub
pop
pop
push
fistp
lods
push
nop
in
imul
pop
or
inc
ret
pushf
imul
add
addr16
push
cmps
jmp
cs
test
xchg
adc
inc
(bad)
dec
sbb
xchg
mov
out
jg
inc
daa
mov
fistp
es
test
outs
popa
mul
jge
mov
div
test
scas
aaa
xchg
cmc
push
sbb
(bad)
in
push
(bad)
les
mov
jp
loop
movs
sub
shr
jecxz
(bad)
(bad)
outs
xor
adc
sub
sbb
jb
xor
fild
adc
retf
cmp
cmps
movs
sub
fadd
add
sbb
test
dec
call
inc
std
fnstsw
adc
mov
sub
inc
jae
cmc
dec
(bad)
mov
jb
out
pop
inc
inc
clc
ret
aad
icebp
movs
cwde
inc
xchg
pop
icebp
sub
(bad)
jg
push
bound
mov
add
bound
or
ror
push
es
or
jmp
and
nop
ja
adc
mov
es
mov
pop
or
outs
daa
sbb
repnz
cmc
sub
cmps
sbb
or
mov
pushf
mov
inc
dec
icebp
inc
(bad)
adc
(bad)
fcmovne
(bad)
iret
jo
in
inc
out
into
add
mov
out
call
(bad)
xor
or
cs
mov
std
jae
dec
enter
inc
pop
mov
cmp
ss
popf
pop
enter
dec
ss
ins
scas
movs
mov
xlat
dec
cmp
test
fs
mov
clc
and
dec
lea
mov
mov
aad
jge
fwait
call
cwde
inc
neg
jae
xor
mov
arpl
xchg
in
call
push
and
adc
jmp
pop
mov
stos
inc
fwait
pop
mov
sub
mov
xchg
ror
lock
fsubr
inc
lods
loop
jmp
(bad)
in
sub
pop
xor
mov
xchg
push
sbb
in
push
sbb
out
pop
mov
pusha
mov
inc
or
jecxz
leave
push
cmp
sub
adc
pop
push
test
aas
dec
push
es
inc
xchg
jnp
test
ja
retf
rcl
sbb
stos
push
test
mov
dec
xor
dec
fld
leave
cli
cli
push
jo
jle
push
in
jb
add
mov
push
xlat
xchg
pop
test
gs
jmp
sbb
adc
aam
sbb
bound
pop
call
mov
pop
(bad)
sbb
cmps
dec
sub
pusha
ins
add
nop
mov
test
(bad)
push
(bad)
or
xchg
mov
mov
jbe
repnz
repnz
mov
or
popf
jo
popa
jno
and
sar
xor
push
jnp
mov
push
ins
mov
pop
jmp
cwde
jmp
das
mov
inc
test
push
mov
sbb
sub
std
and
pop
dec
aam
cs
cmp
int
dec
(bad)
sbb
sub
mov
push
mov
or
mov
jg
pop
in
scas
and
mov
loop
je
push
pop
inc
cmp
test
lods
cmp
mov
jmp
out
(bad)
push
jb
mov
sbb
(bad)
mov
enter
dec
or
add
shr
cmps
pop
cld
ja
xor
xchg
add
add
xchg
xchg
fs
lds
movs
jp
lods
mov
mov
mov
mov
retf
test
add
cmp
dec
sar
je
icebp
rcr
movs
jmp
mov
aad
mov
inc
mov
xor
xchg
hlt
jnp
cmc
push
adc
gs
add
movs
jmp
in
cmps
jno
jmp
xor
sbb
xchg
stos
retf
es
push
aad
imul
js
lods
xor
fistp
jecxz
dec
and
out
movs
inc
in
dec
sbb
mov
bound
mov
pop
jnp
and
adc
jp
aad
fsubp
fsub
or
pusha
repz
fwait
mov
je
pushf
cmp
fisttp
xchg
jnp
or
or
pop
and
js
dec
mov
js
pop
iret
rol
sbb
mov
jbe
sar
and
lahf
add
sub
(bad)
out
jmp
dec
xchg
mov
jbe
dec
cdq
jmp
ret
popa
cmps
xor
mov
lea
mov
retf
jle
ret
repz
(bad)
fistp
mov
imul
fisub
and
push
cmps
pop
cwde
xor
outs
loopne
add
cdq
sti
xchg
pop
ss
jecxz
jbe
outs
daa
fdivr
fwait
xchg
inc
cmp
mov
push
(bad)
xchg
pushf
pop
aad
push
out
stos
or
cld
js
loop
cmp
add
sub
mov
jno
jns
test
jge
inc
and
cs
jno
sub
rcl
icebp
push
ins
add
and
mov
jmp
cmc
dec
stos
push
jb
fld
enter
outs
std
es
push
sti
int3
sbb
jmp
adc
or
pop
inc
pusha
pop
sbb
in
push
loop
sbb
(bad)
shl
call
sbb
sub
nop
cwde
xchg
les
mov
mov
mov
shufps
not
sbb
cmp
jmp
pop
xchg
mov
test
test
lahf
icebp
push
jo
cmp
push
out
push
sti
(bad)
and
stc
imul
jns
(bad)
mov
ins
cdq
arpl
out
dec
stos
aad
(bad)
mov
nop
mov
xchg
and
mov
jbe
test
into
repz
movs
mov
imul
sub
not
cmc
stos
popf
dec
popf
lahf
inc
xor
mov
int
stc
sub
out
test
cmps
cdq
push
and
in
sbb
outs
pop
add
iret
je
xor
and
mov
add
xlat
jg
adc
cmps
aas
or
ds
js
je
scas
xchg
outs
into
jae
mov
and
pop
mov
jbe
in
mov
jmp
arpl
adc
pop
mov
xchg
das
sub
sub
test
popa
out
and
inc
js
sub
aam
daa
loopne
(bad)
inc
shl
in
dec
mov
out
(bad)
sbb
stos
or
outs
add
imul
pop
sub
jecxz
test
xchg
jmp
adc
mov
sub
cli
xlat
ret
mov
xchg
cmp
js
sbb
xor
shl
dec
add
gs
add
jno
in
xor
imul
aas
popa
loopne
out
cmp
xor
rol
inc
aaa
ins
stc
xchg
fdivr
repz
pusha
mov
ja
les
xchg
xchg
pushf
iret
ja
adc
xchg
or
mov
loope
jnp
inc
jg
dec
pop
or
stos
pop
aas
lock
adc
jo
jmp
mov
xor
sahf
mov
and
xchg
cmp
add
jg
bsf
jo
jl
pop
imul
sub
cmp
xchg
xor
cdq
outs
scas
lahf
popa
cmp
jno
cmp
xchg
int
mov
mov
in
dec
mov
adc
popf
sub
shl
lock
adc
and
adc
call
shl
sar
std
push
or
sbb
xchg
cld
inc
push
or
xor
or
xchg
pop
push
and
mov
repnz
pop
dec
outs
int
cmp
fst
(bad)
into
pushf
jns
dec
inc
hlt
cmc
(bad)
sbb
out
inc
sub
in
cmp
xlat
push
icebp
pop
int
sub
sub
mov
imul
jns
ins
cmp
push
mov
mov
or
cmp
cmp
sbb
imul
(bad)
lods
cwde
out
out
inc
jbe
enter
repnz
xor
jp
inc
xchg
fidiv
outs
cmp
popa
les
xchg
cmps
mov
pop
cli
jge
dec
cmp
in
xlat
pusha
shl
mov
jmp
es
retf
rol
nop
jg
call
loop
mov
or
mov
out
and
lea
jae
aas
adc
aad
sahf
out
jg
xchg
in
mov
mov
je
push
inc
dec
jmp
dec
mov
or
jo
sub
xchg
call
je
stos
lock
cmp
cli
dec
mov
iret
mov
test
xchg
dec
loope
into
(bad)
mov
clc
or
add
das
ror
lods
sbb
lods
scas
dec
mov
fidiv
mov
cdq
pop
adc
push
arpl
pop
cmp
jns
mov
cdq
xor
hlt
mov
bound
data16
dec
mov
cmp
fdiv
out
add
or
fs
icebp
xchg
mov
jne
dec
nop
jl
xor
out
je
aam
or
scas
pop
jmp
outs
dec
scas
jp
dec
aas
adc
lea
fs
in
into
dec
loope
jmp
cmp
xor
xor
hlt
lods
jae
outs
je
and
(bad)
jle
(bad)
jnp
or
cmp
jno
xchg
add
jne
(bad)
mov
dec
nop
cdq
retf
idiv
lods
mov
ss
aad
shr
test
ss
jg
add
aaa
dec
push
lods
sub
mov
jecxz
inc
fwait
add
hlt
fmulp
stos
push
xlat
loop
push
int
jle
mov
mov
jb
scas
and
inc
out
push
mov
sahf
je
sti
gs
pop
std
sub
mov
xchg
out
pop
gs
popf
int3
jp
xor
adc
bound
mov
dec
xchg
mul
(bad)
inc
gs
icebp
sub
in
jne
adc
mov
and
std
mov
dec
or
mov
les
adc
inc
add
sbb
cmp
adc
mov
sub
arpl
iret
les
and
xchg
cmp
rcr
xchg
mov
into
fnsave
jge
push
test
jns
push
inc
repz
cdq
inc
retf
mov
sbb
aaa
out
enter
loop
scas
dec
iret
sbb
out
test
inc
bound
into
fcom
mov
add
arpl
jecxz
xchg
jnp
loop
cmps
or
pop
cs
test
jae
popa
cs
mov
cdq
cmps
jmp
aaa
dec
jo
adc
cmp
sub
ins
or
add
inc
mov
pop
mov
test
popa
jge
cmc
inc
xchg
inc
adc
adc
pop
xor
inc
sub
test
pop
sub
imul
dec
xlat
(bad)
mov
mov
pop
dec
and
push
arpl
scas
scas
repnz
push
(bad)
mov
push
or
fiadd
popa
stc
ss
push
inc
mov
mov
inc
dec
fbstp
(bad)
cli
mov
stc
push
xor
sti
xor
sbb
psadbw
jmp
pop
(bad)
gs
push
jae
in
dec
and
mov
or
cwde
mov
jne
mov
js
clc
pop
cmp
test
push
add
(bad)
lahf
lods
mov
pop
fisttp
inc
and
int3
adc
and
into
mov
adc
pop
pop
popf
mov
mov
xchg
lods
xor
dec
retf
stc
inc
push
mov
aad
push
aas
add
adc
cmps
jecxz
imul
and
(bad)
adc
lds
push
fwait
ror
aam
jne
ror
xchg
loop
arpl
xor
xor
xchg
adc
push
cli
sbb
into
mov
pushf
xchg
adc
pop
push
mov
inc
(bad)
movs
movs
gs
adc
clc
pusha
inc
hlt
jns
xor
adc
shl
cs
cld
mov
pop
mov
sbb
and
inc
mov
add
push
push
sbb
sbb
call
xor
into
adc
mov
imul
mov
shl
outs
jmp
rol
push
push
and
lods
pop
jle
sar
pop
and
mov
xor
ss
retf
outs
add
aaa
push
xchg
push
rol
and
es
enter
stos
ins
aas
pop
stc
push
(bad)
sub
mov
mov
xchg
or
fldpi
int
xor
dec
inc
inc
shl
loope
pusha
les
jl
out
cs
inc
dec
fxtract
inc
push
adc
lods
mov
cmc
push
pop
push
es
cmc
pop
scas
jbe
dec
and
leave
adc
add
push
push
fstsw
aaa
std
or
out
movs
lea
pop
js
sahf
mov
xlat
inc
lods
and
(bad)
or
ds
and
adc
dec
movs
mov
pusha
retf
lods
shl
mov
xor
ficom
xor
jbe
xchg
add
daa
push
call
inc
retf
lods
jne
fdivr
jae
fstp
mov
lods
shr
ss
mov
pop
fild
jmp
scas
xchg
aam
shr
(bad)
loop
lea
cmps
call
imul
hlt
xchg
scas
xchg
ja
sbb
mov
mov
jo
cmps
fwait
xchg
movs
je
sahf
push
dec
(bad)
dec
adc
and
das
adc
mov
mov
ss
mov
sub
mov
std
lahf
dec
stos
es
ds
addr16
adc
mov
jl
mov
pop
jnp
shr
dec
sbb
fld
lods
pop
out
cmps
cs
mov
cmp
leave
in
frndint
mov
fild
jo
jg
shl
cmp
cld
aad
or
hlt
mov
jno
inc
rcr
je
mov
(bad)
retf
test
gs
lahf
sbb
sub
shr
cmp
retf
mov
mov
add
xor
jns
push
sar
cmp
ins
jno
mov
fist
test
add
inc
mov
(bad)
jmp
fsub
aam
(bad)
adc
retf
push
pop
sub
loopne
mov
add
bound
add
aam
repnz
and
jns
(bad)
hlt
(bad)
inc
xlat
add
mov
pop
inc
adc
pop
mov
movs
mov
or
lahf
adc
push
aam
enter
dec
stos
sub
or
repz
stc
sbb
mov
retf
scas
mov
mov
cmc
xor
and
scas
(bad)
(bad)
mov
retf
push
(bad)
ja
addr16
sub
push
ja
jp
and
test
das
inc
aad
out
fisttp
push
jle
jns
add
call
and
mov
nop
jmp
jle
ds
loope
fcomip
mov
and
jbe
jge
imul
inc
jle
stc
xor
sahf
addr16
pop
jecxz
and
push
fcmovb
cmp
test
push
jl
add
(bad)
sub
pusha
ror
sub
scas
inc
xor
jle
rcr
in
mov
mov
shl
(bad)
mov
in
repz
shr
dec
xchg
mov
fdivr
scas
les
mov
push
loopne
dec
out
jnp
adc
or
test
pop
jo
jmp
adc
cdq
lods
popf
jp
mov
rcr
mov
and
cmp
out
movs
fcom
or
sbb
mov
push
mov
pop
jnp
xor
push
push
dec
xchg
gs
fld
cs
lds
inc
or
sub
shl
test
loope
outs
cmp
mov
lods
jecxz
mov
repnz
mov
sbb
mov
sub
add
sti
jmp
icebp
std
inc
jge
xchg
mov
fcomip
sub
jp
out
test
clc
and
mov
and
lods
pop
sub
cwde
xor
aaa
rol
in
sahf
stos
les
sub
mov
xor
cdq
mov
push
cs
push
sub
add
pop
xorps
push
inc
bound
mov
jbe
jo
inc
test
daa
lds
pop
or
aaa
rcr
xchg
out
ds
mov
shl
xlat
shr
dec
es
cmp
mov
and
or
cmp
mov
inc
int
fist
inc
xor
ins
cs
adc
pop
xor
sti
or
ret
(bad)
dec
dec
push
cwde
inc
sbb
jae
jae
daa
xor
repz
imul
or
outs
push
fwait
in
dec
movq
cmps
add
test
pop
call
sub
int3
pusha
nop
mov
sub
or
inc
xor
jbe
mov
pop
shl
fcmovne
div
mov
jmp
je
test
int
test
cmp
shl
mov
enter
mov
adc
cmp
das
out
mov
mov
(bad)
pop
sbb
mov
je
sub
and
cmc
push
enter
and
mov
into
fwait
ret
pop
xchg
loop
jle
jae
push
fbld
fsubp
mov
in
sub
in
jle
jno
js
out
inc
out
adc
jnp
mov
popf
push
pop
nop
mov
cmp
stos
inc
fs
xchg
dec
mov
rcr
pop
mov
cs
pop
fistp
imul
xchg
ss
imul
in
fldcw
stc
ss
jp
adc
xchg
sbb
mov
in
je
test
stos
es
dec
inc
mov
and
repz
pop
out
lahf
cmc
enter
or
jae
sti
outs
push
mov
push
fist
mov
inc
dec
sub
jbe
mov
(bad)
xor
jmp
and
sbb
(bad)
inc
mov
arpl
ss
jg
cmps
mov
les
sub
outs
fucomip
mov
dec
push
adc
xor
mov
loop
mov
jmp
in
add
xor
adc
mov
neg
ja
cmps
mov
inc
and
add
je
pop
or
(bad)
(bad)
test
lods
or
mov
xor
dec
push
test
mov
vaddsubps
pushf
imul
sti
test
push
sub
inc
add
test
pushf
fst
and
mov
cmp
ret
adc
out
lock
data16
retf
pop
out
stos
push
push
add
es
mov
popa
inc
enter
mov
xor
cmp
(bad)
jl
cs
sbb
add
push
dec
mov
out
add
arpl
push
int
test
inc
sub
out
ret
xor
(bad)
in
and
xor
xor
push
cwde
jmp
test
popf
or
pop
sbb
sbb
sub
or
or
push
adc
or
rcl
js
mov
pop
dec
cs
jg
dec
add
pop
rcl
jge
inc
xchg
pop
arpl
or
enter
mov
push
xor
dec
fwait
aad
jno
jge
std
shl
(bad)
inc
xchg
sti
inc
mov
inc
xor
test
sub
sub
nop
jg
cli
(bad)
shl
xchg
sbb
mov
ret
xor
pop
mov
dec
sub
jb
jbe
cmps
loope
mov
mov
es
mov
push
pop
mov
and
mov
fimul
hlt
cmps
jmp
mov
(bad)
int3
and
jg
shl
sahf
sbb
outs
mov
push
out
out
ja
cmp
(bad)
mov
inc
mov
ds
sbb
xchg
push
mov
das
outs
xchg
inc
or
loop
ds
xchg
adc
fnstsw
arpl
ins
std
shr
sti
jecxz
ja
scas
mov
cs
mov
mov
mov
push
or
push
mov
(bad)
cmc
ins
jnp
mov
rol
mov
add
mov
fstp
mov
lods
cmp
in
in
clc
ror
mov
mov
test
movs
mov
clc
xor
jl
and
jecxz
jb
daa
sldt
inc
pop
or
sbb
(bad)
xchg
or
movs
xchg
push
adc
push
fsub
or
not
fsubr
mov
js
inc
push
mov
mov
cwde
test
mov
mov
imul
fcmovnu
cld
pop
hlt
jnp
in
sub
jno
enter
rcl
fidiv
dec
or
fsubrp
addr16
iret
sahf
inc
fild
cmp
xor
dec
mov
sub
or
mov
cmp
jmp
stos
cli
mov
dec
leave
add
pop
push
jle
jno
sti
mov
lods
repnz
sti
cmp
add
data16
icebp
leave
call
loopne
nop
shl
retf
inc
(bad)
sub
popf
clc
pop
pop
retf
scas
and
mov
adc
mov
sbb
leave
cmc
lds
mov
cs
jmp
dec
stc
push
loopne
jmp
js
add
in
enter
sahf
js
outs
or
test
xchg
rcr
cmc
ins
ss
jns
jno
das
imul
jmp
(bad)
mov
push
add
daa
or
xchg
xchg
xchg
fwait
jbe
sbb
and
adc
adc
sub
test
mov
pop
add
iret
lods
test
xor
add
ret
es
das
mov
dec
cmp
jmp
mov
ja
mov
rol
gs
loop
push
and
test
pop
(bad)
dec
sahf
mov
je
dec
dec
adc
mov
bound
addr16
and
jle
out
push
retf
imul
sub
xor
mov
pusha
ror
dec
popa
cmps
clc
pop
mov
cmc
cld
pop
icebp
into
lahf
mov
stos
lock
fistp
lea
and
inc
jb
out
mov
or
jmp
lods
outs
xor
mov
jl
out
sub
ins
sbb
mov
into
mov
mov
sbb
ins
lods
or
dec
or
loop
cli
movs
pop
sti
inc
lock
jle
into
bound
fsubr
add
mov
mov
adc
jne
popa
(bad)
push
sti
push
pop
push
xchg
addr16
lods
enter
ins
and
sub
scas
repnz
xchg
ds
mov
mov
add
out
fst
push
or
ja
das
sbb
mov
js
and
mov
adc
mov
inc
in
and
les
or
not
bnd
cmp
add
cmp
ret
aad
rcr
inc
cwde
mov
pop
mov
(bad)
movs
in
call
cmp
add
test
sub
loopne
enter
and
les
ss
mov
std
outs
js
cwde
add
(bad)
(bad)
and
add
pop
or
sahf
test
ficomp
mov
mov
rol
stos
or
(bad)
mul
adc
clc
in
aad
fs
(bad)
scas
adc
mov
push
mov
mov
inc
push
dec
in
out
aaa
shl
hlt
mov
push
shr
arpl
aad
movs
or
push
es
pop
ss
jb
add
sub
dec
add
mov
fidivr
not
pop
mov
leave
mov
push
aad
pop
sub
pop
dec
loopne
inc
out
cli
xor
adc
xor
jae
push
in
int
push
mov
fbld
scas
inc
iret
lahf
movs
sbb
inc
push
pop
inc
sbb
inc
xor
shl
cmp
sbb
div
dec
aad
repnz
jp
sahf
jo
mov
ja
fwait
bound
mov
ins
rcr
adc
ss
out
inc
out
pop
jmp
sbb
cmp
xor
and
xor
ss
sbb
and
daa
sub
(bad)
js
aaa
inc
mov
in
cwde
jno
pop
retf
or
mul
mov
push
xchg
sbb
inc
hlt
dec
or
ss
mov
jno
adc
cli
dec
pusha
arpl
das
mov
call
addr16
jge
pop
movs
mov
fcomp
retf
adc
mov
add
mov
adc
int3
popf
or
ja
push
dec
js
mov
lods
xchg
push
adc
test
mov
mov
cmps
rol
mul
inc
mov
push
xor
jmp
mov
jb
scas
push
xlat
or
dec
jb
add
mov
mov
push
sbb
push
push
pop
pop
fsub
sti
call
and
fcomp
sub
mov
in
jns
push
mov
repz
das
ja
cmp
mov
test
sub
xor
xor
xchg
addr16
scas
movs
ds
jns
mov
dec
loopne
outs
jle
sbb
popf
adc
adc
into
lea
movs
sub
xchg
fcomp
inc
cmp
adc
pop
ins
mov
into
xlat
vpsubsw
adc
pop
and
xor
test
push
sbb
dec
ss
fild
adc
inc
lahf
and
(bad)
cmps
scas
fnstenv
pop
in
movs
call
xchg
scas
inc
pop
jge
jno
push
xor
pop
or
mov
mov
ss
add
jl
pusha
out
cdq
dec
push
dec
int
adc
jbe
mov
aad
into
mov
ss
xchg
jb
out
outs
and
inc
fst
call
dec
jge
sub
mov
and
fisubr
inc
clc
xchg
int3
popf
or
xchg
rol
mov
lods
mov
fwait
mov
xor
sti
iret
mov
mov
mov
mov
cmp
pop
aad
stc
or
not
xchg
push
cli
ret
call
into
int
mov
ret
pop
push
mov
and
sbb
ror
(bad)
cdq
cld
lods
inc
inc
clc
stos
repz
dec
mov
lds
mov
jmp
lods
sbb
push
jbe
test
rcr
hlt
cld
(bad)
adc
add
sbb
adc
mov
sbb
inc
xchg
leave
push
mov
pop
mov
fadd
shr
adc
mov
jmp
lds
int3
xor
fmul
pop
sbb
push
scas
jne
ins
fadd
ret
push
mov
push
mov
and
pop
arpl
cs
imul
lea
test
rol
add
mov
xor
jmp
pop
imul
call
loopne
int
in
mov
fs
test
adc
arpl
cdq
aad
test
pop
scas
pop
jno
shl
xlat
cmps
test
cmp
add
jae
dec
in
cmp
xchg
fcom
fild
adc
outs
outs
clc
loope
int3
lock
es
mov
jmp
jl
jne
loopne
jno
inc
imul
push
inc
imul
not
xchg
loope
adc
add
in
mov
dec
or
imul
sbb
cmp
movs
idiv
mov
mov
or
scas
icebp
pop
and
mov
ins
and
stc
mov
inc
sar
mov
and
addr16
inc
xor
add
out
xor
aas
dec
sbb
cmp
sbb
in
repnz
adc
sbb
mov
and
jl
dec
adc
jmp
mov
int3
inc
retf
faddp
sub
pop
dec
inc
mov
adc
xchg
adc
or
ins
sub
aaa
mov
aad
xchg
mov
or
pop
mov
ja
jle
ins
push
sbb
lahf
movs
fsubr
gs
(bad)
mov
(bad)
jge
and
imul
movs
cmc
inc
leave
xchg
into
xor
out
leave
jae
mov
mov
(bad)
sbb
push
and
dec
xchg
jl
lods
pop
mov
ds
pop
xchg
mov
mov
inc
lods
test
sub
mov
in
pop
dec
dec
mov
mov
inc
jecxz
add
and
fld
movs
push
xchg
ds
cs
popa
or
mov
mov
and
sbb
and
repnz
adc
das
rol
fistp
sahf
push
push
mov
arpl
push
push
(bad)
out
fucomip
fidivr
lds
pop
mov
mov
pop
pop
cmp
loop
cld
sbb
dec
push
cmp
in
stos
scas
jno
retf
add
xchg
sub
adc
fcomp
test
lods
lods
je
or
js
out
mov
(bad)
mov
push
icebp
lock
xchg
and
aas
(bad)
dec
sbb
idiv
int
cmps
out
hlt
dec
icebp
(bad)
bnd
pop
adc
mov
test
fwait
mov
lock
mov
xchg
sub
add
leave
lea
cmps
(bad)
pop
inc
(bad)
cmc
das
push
sar
inc
mov
pop
bsf
or
into
sti
ss
push
and
mov
retf
jns
push
jae
(bad)
aad
scas
fdivp
es
mov
dec
xchg
fsubrp
mov
lea
cmp
jne
xor
mov
xor
out
jns
aam
mov
cmp
sub
sub
xchg
pop
dec
ficomp
(bad)
xor
dec
fisubr
test
mov
out
push
push
add
imul
(bad)
sti
mov
stc
push
push
pop
xchg
addr16
dec
ja
inc
pop
bound
(bad)
sub
(bad)
stos
ds
out
mov
sub
out
or
shr
mov
or
sub
mov
imul
pop
jb
jnp
mov
mov
int
in
imul
nop
rol
stc
fistp
pop
rol
(bad)
mov
push
jmp
fiadd
(bad)
test
dec
push
cmp
jne
pushf
cmp
into
mov
test
inc
lods
push
daa
loope
or
mov
in
adc
lea
sbb
xchg
xor
pop
mov
adc
xchg
sahf
add
pop
push
outs
stos
or
jmp
mov
add
mov
jmp
fmul
rcl
jecxz
stos
sub
mov
add
xor
(bad)
imul
sbb
or
ins
fcomp
xchg
aad
xchg
xchg
popa
gs
mov
and
push
in
(bad)
bound
dec
std
inc
loopne
or
push
mov
push
mov
push
jecxz
cmp
dec
mov
rcr
or
stos
cmps
arpl
push
xchg
lods
test
jno
adc
shl
xlat
adc
(bad)
in
xor
fidivr
dec
cmp
js
sbb
or
hlt
add
dec
out
mov
int3
inc
mov
in
adc
cli
shl
lods
retf
popf
fmul
jae
scas
inc
dec
sbb
retf
in
outs
enter
in
and
mov
lock
add
(bad)
in
xor
ficomp
in
retf
bnd
div
int3
xlat
pop
sub
pop
les
dec
inc
adc
pusha
adc
fstp
push
xor
or
icebp
test
push
mov
cmps
int3
mul
push
mov
cmps
xchg
fld
mov
adc
movs
sbb
pop
add
bound
call
add
jno
push
push
lahf
push
pop
sbb
pop
ins
jns
or
test
fdiv
call
es
lock
mov
popa
aam
cs
push
xchg
jmp
mov
shr
jne
(bad)
sahf
add
mov
pop
jl
dec
add
xchg
mov
fwait
imul
xor
dec
mov
sbb
pushf
push
cmp
jb
sbb
ins
in
outs
dec
fst
(bad)
out
sbb
ret
dec
inc
jge
fdivr
loop
imul
pop
daa
(bad)
mov
es
sub
mov
mov
test
dec
popa
or
mov
mov
(bad)
int3
and
fisubr
cmp
into
jl
mov
add
repz
pusha
popf
mov
cwde
ins
pop
adc
push
in
add
test
push
inc
imul
out
sbb
sbb
mov
mov
retf
cld
push
(bad)
mov
jnp
clc
test
in
(bad)
mov
daa
xor
xchg
sbb
adc
sub
in
add
push
(bad)
pop
fsubr
xor
mov
and
cmp
push
mov
xchg
and
pop
ret
dec
jae
jecxz
in
inc
cmc
push
sbb
outs
push
jbe
js
int
push
xchg
and
add
pop
in
inc
idiv
(bad)
lea
je
fmul
dec
inc
add
std
push
xor
jmp
adc
adc
enter
mov
mov
dec
(bad)
inc
mov
xchg
(bad)
stc
popf
dec
inc
das
test
jmp
std
fsubr
and
(bad)
cmc
fsubr
and
mov
mov
repnz
in
mov
xchg
add
add
mov
call
lahf
dec
dec
sub
rcr
jno
xor
cs
pop
fs
and
push
inc
push
sti
xor
mov
sub
cmps
nop
dec
cmp
or
and
push
das
popa
lahf
lahf
(bad)
in
sti
mov
and
mov
data16
inc
mov
loop
push
aas
jne
add
mov
mov
jge
xor
test
cmp
or
xlat
enter
inc
xlat
sar
adc
and
push
fmul
in
pop
pusha
jb
js
or
mov
xchg
sub
icebp
fadd
inc
xor
push
mov
and
fmul
mov
mov
adc
sti
mov
sub
inc
xor
cmp
int
test
xor
adc
outs
in
fwait
in
into
out
fnstcw
dec
inc
arpl
jecxz
(bad)
stc
daa
mov
test
sub
inc
dec
ror
lahf
stos
mov
dec
add
(bad)
repnz
gs
jo
fwait
loope
adc
enter
jne
in
mov
jl
lahf
push
loopne
jecxz
jle
arpl
xor
shl
gs
push
inc
call
cwde
jp
sti
inc
shl
test
outs
pop
pop
pop
mov
push
clc
mov
aam
popf
adc
mov
mov
jle
repnz
movs
jne
out
ss
mov
std
call
(bad)
inc
sbb
dec
cld
jmp
mov
adc
sbb
adc
outs
scas
sub
lods
jnp
leave
push
test
test
lahf
and
and
ret
xor
fld
cli
mov
and
cmp
cmp
call
ror
or
jle
fwait
cs
dec
push
pusha
push
mov
(bad)
mov
sub
test
arpl
(bad)
cmp
cmp
sbb
in
(bad)
sub
out
jg
sub
cmc
ficomp
stc
retf
jmp
push
mov
mov
icebp
mov
cld
ret
cwde
mov
cmp
rol
div
pop
int3
imul
lea
loope
(bad)
ret
shr
ja
sbb
jl
es
sbb
sub
mov
hlt
and
cmp
mov
or
jle
sub
lea
test
dec
mov
scas
xor
ins
fmul
fs
sub
push
or
jp
adc
sub
retf
sar
mov
mov
and
xlat
hlt
inc
cmc
lods
ror
leave
bound
out
std
mov
loop
fdiv
mov
sbb
dec
lea
in
ins
xor
addr16
push
rcl
ins
pop
data16
jl
gs
push
dec
mov
stc
push
lea
jmp
jecxz
pop
cwde
or
in
xchg
jp
sahf
clc
sbb
retf
xor
pop
icebp
movs
inc
mov
fstp
cmp
scas
mov
js
sar
inc
mov
retf
inc
mov
or
mov
aaa
xchg
dec
add
fld
ins
movs
mov
pop
jbe
inc
sti
clc
jmp
mov
mov
xchg
in
dec
or
outs
je
loope
in
jae
lock
adc
fs
adc
mov
mov
int3
inc
sub
repz
cld
rol
pop
push
retf
repnz
sbb
jle
add
dec
scas
(bad)
jae
mov
shl
xor
test
cmp
mov
mov
adc
push
repnz
sbb
lods
or
out
jmp
clc
jg
xchg
sub
aam
(bad)
sub
xchg
mov
push
cs
xchg
call
stos
stc
sub
outs
pop
sbb
sub
push
ins
loopne
popa
std
xlat
in
cmp
popa
fwait
loope
mov
and
sub
xchg
add
fstp
ret
int3
jae
fsubr
or
shrd
(bad)
aas
sbb
sbb
dec
xchg
cs
adc
push
sub
lds
sub
test
lods
dec
xchg
sbb
dec
xchg
add
or
sub
sti
dec
cld
aas
cs
inc
jno
cmp
cmp
dec
jl
das
daa
inc
nop
xor
xor
fcom
xor
in
sets
mov
aad
or
call
dec
imul
enter
cmp
jmp
sbb
stos
inc
pop
cmc
mov
ja
fadd
inc
mov
or
out
ja
or
bound
and
into
or
inc
retf
and
outs
(bad)
(bad)
pop
(bad)
repnz
bnd
xchg
jl
inc
push
inc
dec
test
fst
mov
adc
jecxz
ffreep
jb
call
mov
out
in
dec
nop
push
fwait
cs
inc
cmp
adc
cmp
rcl
inc
imul
push
jl
or
or
in
rol
in
and
in
sub
add
inc
inc
jecxz
cmp
loope
mov
outs
jmp
hlt
iret
lock
sub
(bad)
in
rsm
lods
and
ret
or
cdq
jl
mov
cdq
mov
xor
xchg
sub
cs
mov
sbb
jb
add
sub
retf
push
fisttp
xor
repnz
inc
xlat
dec
dec
popf
fld
aaa
sar
imul
mov
mov
lds
xchg
sbb
lds
pop
mov
stos
addr16
sti
imul
nop
xchg
dec
inc
sub
jmp
xchg
cmp
xchg
ins
mov
mov
fsub
or
add
iret
pop
(bad)
in
(bad)
jecxz
xor
push
xchg
inc
xchg
ja
mov
xor
cmp
cwde
jl
sysenter
leave
lea
repz
xor
push
xchg
mov
ffree
bound
push
dec
ds
jl
push
pusha
out
add
jnp
xor
es
push
jo
fstp
(bad)
pop
xchg
add
and
dec
xor
(bad)
fisub
push
xor
push
std
inc
ret
fidiv
lods
xor
sbb
pop
lods
test
je
mov
mov
ret
cwde
mov
and
out
rol
adc
div
rol
inc
in
rcr
jmp
cmc
jo
sub
jp
jmp
mov
push
(bad)
fbld
xchg
icebp
imul
pop
icebp
dec
sbb
xor
mov
mov
fbld
stos
mov
retf
jae
ins
stc
fcomip
(bad)
cmp
cmp
stos
add
mov
jo
daa
xchg
jbe
pop
sbb
cmp
popa
xor
mov
arpl
out
sbb
mov
and
ret
cs
(bad)
fldenv
ds
mov
rcl
loopne
add
imul
jle
mov
gs
mov
mov
adc
mov
retf
or
aaa
inc
imul
popw
rcr
push
sbb
call
adc
mov
ret
jo
push
mov
(bad)
sbb
jno
test
jnp
js
cmp
enter
scas
or
sub
push
lea
jge
ret
test
pop
jecxz
add
cmp
cmps
leave
pop
outs
enter
sar
stos
stc
loopne
or
leave
mov
(bad)
pop
push
dec
ss
mov
xor
rol
aad
xor
(bad)
adc
sbb
fisub
sub
loopne
test
repz
out
and
mov
icebp
fwait
mov
pop
aad
ja
xchg
mov
adc
jle
call
inc
jp
lea
mov
repnz
jbe
push
cmc
add
cmp
sub
aad
rcr
jecxz
jge
shl
retf
dec
hlt
pop
cmp
mov
pop
mov
(bad)
add
mov
cmp
or
mov
cwde
daa
xchg
adc
shl
lods
and
add
pop
or
(bad)
ins
jle
cmp
and
(bad)
sti
mov
movs
cs
xor
or
cld
stos
mov
sub
push
aaa
(bad)
mov
and
xchg
add
mov
push
sbb
fstp
adc
(bad)
es
inc
push
mov
push
push
xor
cs
(bad)
sub
fsubr
dec
repz
mov
xchg
outs
(bad)
sbb
clc
dec
retf
sbb
sub
mov
jo
cmp
enter
mov
enter
xor
ret
inc
inc
call
and
mov
sub
test
jmp
popf
je
sub
adc
out
stc
lods
int
retf
sbb
gs
add
xlat
mov
repz
sub
inc
xlat
dec
push
lods
mov
inc
mov
and
mov
ror
push
jmp
cld
(bad)
(bad)
push
jmp
push
pop
mov
push
scas
sahf
sub
lds
pushf
sbb
pushf
sub
cmc
outs
ins
pop
pop
pop
xchg
ss
jo
mov
ds
lahf
push
or
mov
imul
xchg
jne
(bad)
pop
pand
in
ja
lds
icebp
dec
out
mov
inc
jle
ins
cmp
outs
adc
cmp
and
inc
sbb
dec
inc
adc
shl
aad
aaa
(bad)
(bad)
mov
jge
add
xchg
dec
adc
out
stos
aaa
push
jge
retf
rcl
ins
js
mov
mov
out
jne
mov
std
(bad)
lods
adc
in
xor
or
movs
int3
pushf
mov
(bad)
push
sbb
push
mov
rcr
shl
dec
mov
call
jmp
(bad)
jno
in
ret
jmp
fcomp
push
out
dec
push
cmp
int
pop
repz
pop
xor
fisub
test
clc
and
sahf
sbb
popa
inc
push
rcl
mul
pop
leave
rep
scas
rcl
push
add
xlat
imul
xchg
push
sbb
lock
loope
cwde
test
push
out
push
mov
xor
jnp
push
jae
outs
or
push
cmp
and
scas
push
push
cli
stos
jnp
cmp
imul
jno
or
in
test
or
imul
loope
call
loopne
imul
pop
es
iret
mov
in
rol
test
pushf
cmp
test
out
xor
test
sbb
div
mov
int
loop
pop
jge
or
pop
pusha
sub
inc
repnz
dec
mov
mov
daa
aam
inc
jecxz
xor
pop
idiv
add
mov
out
sub
add
inc
int
inc
push
ficom
add
in
dec
pop
dec
pop
div
std
mov
adc
ret
in
ja
clc
nop
loopne
mov
sbb
push
cmps
push
gs
retf
jb
es
fild
je
push
test
sub
gs
test
xchg
test
dec
popa
les
outs
jne
mov
or
add
arpl
sub
imul
ret
push
arpl
mov
cmovbe
sub
mov
xor
xchg
push
(bad)
jmp
out
adc
les
mov
cmps
jg
div
mov
pop
add
int
ins
scas
movs
jge
test
push
and
pushf
icebp
xor
push
mov
and
aad
inc
add
jg
xor
pop
out
push
ror
clc
and
leave
js
inc
inc
enter
adc
jnp
mov
add
pop
cmp
xchg
or
push
cdq
mov
out
sbb
mov
push
movs
jmp
outs
ins
push
mov
lods
fstp
jmp
fimul
ficom
mov
cli
out
mov
inc
xchg
add
daa
lea
or
out
mov
sti
jl
fld
aaa
inc
pop
into
sub
hlt
pop
mov
xchg
push
mov
or
fstp
adc
mov
add
mov
add
aas
push
dec
data16
xor
data16
inc
arpl
(bad)
sti
ins
inc
sub
aas
call
fild
cmc
xlat
inc
xchg
inc
ret
sub
in
inc
ror
mov
or
add
sub
add
or
mov
mov
sub
lea
adc
and
jb
mov
lods
cld
adc
leave
sar
mov
lods
call
addr16
mov
dec
jmp
jg
jp
inc
add
or
mov
sbb
stos
call
mov
repz
add
lods
not
loop
aaa
movs
jnp
jg
xor
xor
sbb
in
je
in
leave
dec
ror
or
xchg
mov
jo
inc
and
fisttp
inc
lods
push
or
(bad)
movs
jl
and
pop
das
rep
cmp
dec
cs
cwde
push
push
sub
mov
les
ins
jnp
xor
stos
div
pop
out
repnz
ret
push
mov
outs
ret
pop
adc
movs
sahf
repz
jmp
jmp
adc
jmp
push
les
adc
ror
fwait
clc
mov
pop
movs
and
xor
pop
mov
shl
int3
iret
push
xchg
sti
jae
iret
rep
gs
pop
mov
sbb
ins
cmps
(bad)
call
movs
fcom
inc
cmps
sbb
add
push
fdivr
shl
mul
mov
test
cs
and
out
fcom
lds
clc
mov
dec
xor
repz
sbb
repz
movs
das
outs
in
mov
and
cli
arpl
in
popa
(bad)
in
(bad)
test
cmp
inc
or
lds
(bad)
push
in
sub
or
xor
jb
inc
mov
scas
repnz
add
fsub
push
jle
retf
or
add
(bad)
cmc
xor
and
and
xor
dec
cmps
into
adc
or
dec
fist
adc
mov
cmc
xchg
xlat
es
cmp
mov
cmovbe
mov
inc
xor
dec
jb
push
(bad)
sub
arpl
jns
iret
mov
xor
fdivr
retf
dec
std
jne
mov
pushf
iret
test
fucomip
push
pop
je
push
dec
fwait
into
fadd
adc
test
pop
xchg
je
add
pop
pop
lds
push
ss
cwde
jae
repz
or
pop
cmps
icebp
fs
push
push
mov
mov
push
push
or
clc
cdq
adc
clc
fwait
mov
sbb
idiv
pop
inc
(bad)
not
lds
(bad)
movs
mul
scas
push
movs
rol
imul
add
or
pop
fnstenv
inc
adc
mov
mov
fwait
jnp
ror
cmp
into
ffreep
(bad)
cmp
scas
mov
push
movs
popa
pop
mov
mov
inc
add
mov
call
sub
stos
lods
lahf
mov
fidiv
push
pop
push
mov
dec
push
add
mov
ja
stos
bt
out
pop
pop
int3
sbb
call
mov
test
and
stc
gs
in
mov
pop
pushf
add
cmc
mov
adc
(bad)
jb
add
ror
bound
ror
and
lock
hlt
xlat
mov
mov
hlt
dec
cli
in
xchg
cmp
mov
xchg
sbb
out
das
push
les
push
or
ds
daa
sub
cmp
dec
pop
sbb
(bad)
xchg
lds
mov
push
icebp
push
push
scas
cmps
add
aas
repz
mov
or
in
lods
mov
cwde
adc
pop
fst
rol
xchg
sub
dec
jne
in
nop
pop
rcl
hlt
jo
scas
faddp
lods
iret
mov
inc
mov
dec
movs
popf
push
jnp
shl
push
pop
fisub
dec
pop
dec
jge
push
adc
jle
or
rol
mov
leave
pop
rep
jo
mov
add
icebp
test
sahf
popf
mov
leave
and
ffreep
mov
in
jg
rcl
les
jbe
inc
adc
out
mov
fs
xchg
hlt
repz
shl
aad
ss
movs
xlat
xchg
movs
les
ret
sbb
pop
repz
loopne
or
or
mov
push
es
inc
int
mov
bound
jmp
iret
stos
fsubr
and
in
outs
rcl
sub
hlt
or
xchg
hlt
jbe
add
movs
cmp
in
outs
jns
xchg
sbb
dec
out
je
pop
dec
inc
pop
jl
jg
pop
mov
jbe
pop
mov
mov
sub
outs
cmp
outs
push
sub
and
push
dec
mov
retf
xchg
push
xchg
xor
lods
inc
pop
inc
and
(bad)
addr16
out
jne
fcom
fadd
js
test
not
and
(bad)
push
mov
fiadd
push
in
cmp
or
aam
xchg
inc
adc
push
mov
adc
popf
mov
lods
cmp
cmp
and
and
retf
add
inc
scas
xchg
sbb
pop
sub
pop
jg
push
add
scas
jmp
pop
arpl
repnz
mov
leave
das
adc
mov
pushf
out
jge
aam
nop
pop
out
enter
ret
out
xor
xchg
pop
iret
aaa
adc
push
cli
in
xchg
into
dec
jno
sbb
push
dec
xchg
xor
jecxz
add
mov
fcmovnu
in
jo
outs
mov
jge
push
shr
xchg
cmp
jecxz
adc
mov
retf
add
movs
mov
xor
inc
xchg
pop
jns
sbb
lods
lods
fwait
pusha
mul
jge
xchg
sub
jnp
in
into
scas
push
movs
jb
hlt
push
(bad)
paddusb
and
mov
fcom
loopne
sub
hlt
push
sbb
adc
cmps
mov
in
xchg
adc
cmps
lea
shr
cmp
mov
sqrtps
dec
repnz
mov
jo
mov
sub
xor
movs
movs
mov
push
sub
out
adc
xor
stos
cmp
aas
cmp
aaa
and
out
ja
out
into
int
dec
pusha
push
xchg
add
mov
sub
push
mov
pop
pop
outs
aad
adc
jns
in
ins
jmp
call
xor
pusha
pop
fs
out
ss
cmps
mov
retf
cmc
daa
cmps
jno
or
xchg
in
movs
sar
and
pop
xchg
sub
and
dec
(bad)
xchg
or
add
imul
adc
(bad)
cli
add
pop
cmps
pop
(bad)
(bad)
adc
(bad)
(bad)
mov
test
xor
pop
(bad)
mov
fs
popf
ins
ins
fdivr
add
pop
rcl
scas
jg
pusha
jo
sub
in
hlt
sub
xor
xchg
mov
ret
adc
fmul
xchg
add
ins
test
sub
pop
test
orps
mov
sbb
sub
cmp
or
add
test
pop
leave
das
jno
jmp
repz
rol
mov
test
cs
out
repz
ret
ret
addr16
inc
dec
outs
mov
pop
cmp
adc
dec
sbb
das
add
adc
movs
sub
in
(bad)
hlt
dec
dec
mov
xchg
test
push
repz
push
scas
popf
lock
dec
inc
xlat
push
mov
pop
sub
stc
jb
sub
mov
(bad)
cs
xchg
les
call
aam
add
std
fs
nop
(bad)
shl
std
pop
and
adc
loopne
into
jle
sbb
lods
cmps
mov
sub
cmp
cmp
dec
cmc
fistp
rol
pop
or
sub
cld
mov
dec
fisub
mov
adc
mov
push
or
sbb
ror
sbb
shl
dec
jmp
clc
dec
(bad)
jbe
mov
imul
out
lea
(bad)
fwait
(bad)
inc
repz
retf
xchg
outs
nop
push
movs
pop
scas
call
xor
push
mov
dec
movs
or
sbb
cmp
nop
ja
cmp
mov
mov
mov
pop
adc
sar
pop
pushf
out
stc
mov
mov
icebp
dec
fst
dec
data16
cmp
push
mov
jns
and
inc
jmp
cwde
xchg
sub
jae
mov
test
lahf
or
dec
mov
fiadd
adc
pop
je
mov
pushf
cmp
add
je
div
ret
jo
in
xor
(bad)
sub
outs
dec
callw
enter
fiadd
pop
dec
add
ja
(bad)
rcl
sbb
test
or
shl
pop
mov
push
ss
aaa
cmp
mov
jae
pop
inc
lahf
mov
fsub
jae
mov
cmc
push
adc
cdq
sub
jl
es
repnz
fidiv
not
cmp
fwait
mov
inc
mov
dec
sbb
mov
sbb
mov
(bad)
cdq
rep
xchg
mov
pop
fmul
in
jae
mov
(bad)
retf
push
push
std
call
sti
xor
mov
arpl
pop
test
sub
dec
pop
push
push
std
add
jecxz
ds
call
lods
mov
cmp
mov
scas
add
enter
mov
cmps
xor
and
das
cmps
sbb
mov
xchg
cmp
cmp
push
test
xor
mov
pop
jo
xchg
std
test
adc
and
pop
or
in
mov
mov
pcmpeqb
jo
test
mov
in
out
xor
pop
or
jp
lock
repnz
adc
data16
rcr
call
jge
mov
mov
inc
pop
lea
cmp
inc
cmp
scas
pop
lods
xor
int3
mov
test
popa
xchg
adc
mov
inc
aas
sub
mov
leave
inc
(bad)
pop
movs
and
xchg
je
cld
sar
(bad)
nop
push
aam
or
mov
cmp
jno
cmp
jge
retf
test
jp
sub
mov
push
sub
add
ja
loopne
fbstp
xchg
inc
call
into
ins
cld
leave
push
retf
aaa
mov
sub
in
and
jl
adc
xchg
jg
aas
mov
pop
and
add
push
push
xchg
inc
sbb
clc
ror
sbb
daa
push
repz
data16
test
cwde
jecxz
or
and
jne
dec
mov
cmps
cmp
push
xchg
(bad)
mov
loope
inc
icebp
cs
pop
inc
jae
add
repnz
cld
xchg
sbb
cli
dec
push
xor
(bad)
das
dec
lahf
jo
std
dec
dec
lds
xor
outs
clc
leave
outs
retf
retf
in
lods
out
scas
data16
jg
addr16
sbb
push
scas
sbb
lods
rcl
inc
clc
inc
dec
(bad)
mov
cmp
mov
out
jb
hlt
inc
outs
daa
xor
mov
out
pop
jmp
cli
pop
pop
(bad)
xor
pop
in
in
aas
xor
add
pop
jne
sti
push
mov
sub
ror
jns
stos
aas
and
pop
xchg
loop
push
pushf
stc
aam
mov
mov
out
call
jle
sub
pop
and
xchg
cmps
mov
adc
jbe
out
repnz
mov
sti
add
(bad)
push
cmps
cmps
lahf
pop
in
loope
into
add
addr16
fstp
data16
sti
pusha
(bad)
fisub
cmps
push
push
push
jecxz
cmps
mov
rol
sbb
leave
mov
loopne
push
xchg
add
mov
sbb
(bad)
mov
cld
aam
mov
cmp
mov
mov
jbe
int
movs
enter
sbb
add
in
stos
pop
xchg
stos
fiadd
mov
cmp
fsubr
jne
shl
pushf
stos
xor
and
sub
jg
sub
sbb
(bad)
lds
mov
inc
je
pop
mov
call
jg
push
xor
push
add
jae
xchg
push
imul
je
loop
or
mov
(bad)
movs
inc
out
clc
clc
inc
pushf
cmp
test
cld
mov
mov
imul
inc
pop
pop
sub
fisttp
xor
mov
cld
sub
ins
sub
scas
mov
test
pop
ficomp
jge
lea
lahf
aaa
cmp
inc
and
pop
or
ret
(bad)
push
call
push
sbb
cmc
imul
pop
das
pop
inc
push
add
jae
jmp
out
rcl
faddp
fadd
cld
(bad)
and
popa
push
push
mov
test
stc
test
pop
jae
or
out
repz
cli
add
xchg
sbb
lods
pop
sub
fbstp
jl
je
dec
adc
or
xchg
and
out
inc
lods
sbb
scas
pop
inc
mov
gs
sub
jmp
js
repz
lock
add
adc
or
into
pop
icebp
lock
sbb
xlat
int
neg
addr16
push
enter
xlat
(bad)
mov
add
lods
add
test
neg
xor
sub
jb
int
and
sbb
mov
aas
push
in
xor
mov
into
test
add
repz
jns
push
mov
or
(bad)
addr16
scas
mov
push
cmp
pop
pop
inc
shl
inc
call
pop
ds
test
sbb
(bad)
cs
add
repz
arpl
push
rcl
push
cmps
xor
dec
mov
pop
cs
dec
cmp
xor
(bad)
mov
xor
sti
(bad)
xor
add
es
mov
or
retf
mov
and
test
pusha
ins
push
sub
js
jb
xchg
in
pusha
sub
ja
mov
jbe
xchg
sbb
std
fcom
pop
ins
pop
push
inc
leave
movs
sbb
outs
outs
mov
jge
dec
fs
push
jp
inc
cmps
jo
loopne
movs
mul
mov
test
xchg
mov
cli
push
cmp
inc
dec
mov
pop
xchg
mov
push
lea
mov
or
(bad)
mov
ds
pop
dec
cmps
mov
je
pop
pop
retf
push
les
repz
inc
ret
(bad)
jno
das
rcl
sub
mov
push
cs
jl
(bad)
mov
test
lods
in
repnz
scas
xchg
(bad)
xchg
pcmpgtd
movs
ficom
push
pop
pop
push
test
sete
or
cdq
ret
ins
(bad)
cmp
imul
mov
iret
enter
outs
test
jne
and
jmp
sub
adc
out
xor
popf
sbb
sbb
xchg
outs
jns
cmp
sub
jle
or
test
lahf
sub
lods
lahf
xor
inc
ror
scas
pop
mov
aaa
or
lahf
mov
enter
push
add
test
lock
sub
gs
xchg
int
and
push
in
or
jns
lahf
fld
push
int
inc
test
and
(bad)
xor
pop
(bad)
jp
sub
xor
imul
inc
aas
rol
retf
frstor
clc
push
or
jg
xchg
push
ss
iret
lods
arpl
mov
int
sub
jne
pusha
daa
mov
mov
shl
push
cmp
gs
cmp
jae
sub
cmp
int
adc
push
mov
add
out
dec
sbb
sbb
xchg
xchg
push
ror
and
jg
and
push
neg
ins
or
cmc
loope
int
or
xchg
rcl
imul
sahf
ffreep
mov
adc
(bad)
pop
mov
ins
pop
out
mov
jb
jmp
push
sub
adc
pusha
retf
pop
data16
or
mov
and
xchg
mov
sub
dec
jp
das
mov
jb
sub
push
xor
pop
dec
fiadd
ins
add
(bad)
lds
cmps
cmc
push
out
out
cmp
int3
dec
inc
mov
dec
pop
push
and
pushf
ss
push
xlat
and
pop
cdq
inc
inc
lods
enter
shl
lods
and
mov
and
scas
call
stc
adc
movs
jmp
outs
nop
sub
call
adc
repz
cmp
mov
cli
xchg
jb
sbb
sub
call
outs
mov
adc
xchg
fild
out
test
in
ret
xor
ss
xchg
scas
xchg
loope
mov
jg
push
push
and
loope
shl
xchg
rcr
xlat
jne
push
in
daa
inc
loopne
int
outs
(bad)
call
jbe
sub
(bad)
in
or
retf
mov
xchg
inc
test
xchg
mov
ja
mov
push
fisubr
dec
add
bound
sub
jecxz
dec
and
xor
cmp
imul
daa
loop
sub
fbld
dec
das
rcr
fbstp
cli
or
mov
shl
jle
mov
nop
sub
jnp
scas
jl
imul
xchg
add
jmp
inc
pop
and
dec
push
jnp
mov
stos
inc
add
(bad)
and
(bad)
rcr
mov
enter
jge
xor
push
and
xchg
adc
lea
scas
or
push
pmulhuw
stc
mov
jno
daa
add
and
cmp
(bad)
jo
inc
mov
cmps
cs
sub
push
cmp
test
and
call
and
add
pop
push
scas
imul
imul
mov
(bad)
jo
in
lods
cmp
inc
(bad)
mov
push
imul
xor
xor
sbb
aam
xchg
gs
mov
pop
mov
mov
pop
sahf
movs
mov
jle
mov
jle
sub
jmp
fdivr
xchg
pushf
adc
int3
mov
or
mov
dec
mov
mov
call
ficom
fmul
mov
add
add
add
inc
push
jp
fnstenv
std
shl
adc
retf
lds
pop
(bad)
jmp
(bad)
inc
add
dec
sub
jb
mov
movs
add
xor
mov
jle
adc
push
jecxz
mov
mov
add
les
and
das
jno
push
repz
push
(bad)
(bad)
push
push
push
dec
xchg
js
jo
cmps
inc
push
jp
movs
das
or
cmp
stos
test
push
or
lods
stos
and
add
cmps
jmp
jnp
icebp
popa
xor
adc
pop
mov
in
in
xchg
jl
mov
imul
xor
stos
rol
retf
stc
lods
aas
adc
ret
sub
mov
loop
fadd
xchg
sub
pop
popa
in
sti
and
leave
ror
arpl
mov
jle
push
jbe
shl
fadd
iret
es
adc
pusha
ror
in
sbb
pushf
arpl
pusha
sar
xor
jae
xchg
sub
call
jmp
scas
hlt
ja
movs
mov
(bad)
push
pop
lahf
jo
jnp
jns
lea
push
pop
in
add
xor
cmp
(bad)
or
stos
adc
inc
test
mov
loopne
xchg
data16
sub
jmp
lods
mov
int
mov
jae
sbb
mov
or
jno
mov
or
fwait
dec
retf
in
cmp
adc
stc
dec
movs
jmp
out
add
push
into
aas
dec
xor
mov
xchg
enter
push
mov
lods
jb
sbb
jecxz
cmp
pop
jbe
mov
inc
add
loop
inc
mov
and
and
jbe
shl
dec
xchg
and
mov
ss
pop
cdq
test
rcl
(bad)
clc
es
or
(bad)
call
out
push
mov
pop
sbb
dec
loop
sub
pop
bound
jne
call
iret
add
dec
jge
push
or
out
shl
push
cld
retf
adc
mov
in
cmp
test
sahf
sub
retf
idiv
or
scas
inc
cs
dec
loope
xor
pop
dec
mov
dec
and
or
imul
push
sub
pop
cmc
adc
and
mov
fwait
and
loopne
adc
fld
rcr
push
imul
arpl
cli
adc
lods
imul
xor
cs
test
inc
lock
fidivr
bnd
scas
jnp
adc
and
mov
push
jg
pop
mov
in
mov
inc
mov
mov
fdivr
cli
js
push
add
pusha
dec
mov
int
jne
xor
push
popa
push
add
add
enter
std
repnz
jno
imul
and
iret
(bad)
pop
shl
xchg
xor
gs
cmp
push
mov
push
bound
sub
test
loope
pop
std
push
sub
pop
stos
retf
push
xchg
xchg
sub
ss
mov
(bad)
pushf
add
jge
iret
mov
and
repnz
test
push
push
sub
mov
sub
adc
push
mov
xlat
shr
cdq
xchg
xor
dec
lods
in
inc
inc
cmp
fidiv
cmp
or
loopne
or
mov
adc
adc
popa
retf
and
jmp
out
xchg
xlat
mov
cmp
in
movs
in
ss
cwde
ds
mov
sub
pop
add
dec
fdivr
nop
in
loop
gs
int3
aad
mov
sub
mov
test
adc
(bad)
loopne
sar
popa
jle
ja
cmp
jecxz
adc
stc
out
mov
call
repnz
mov
repz
jb
push
sub
je
push
loop
cmp
loope
popf
sub
sbb
fbld
repz
mov
out
imul
lods
out
xchg
dec
aam
fdiv
push
jle
cmp
ret
or
jb
and
call
and
add
mov
retf
inc
or
inc
xor
mov
mov
or
ja
or
pop
inc
cmp
imul
sahf
loopne
cmp
ficomp
xor
movs
std
sbb
sub
pop
ins
mov
jae
pusha
test
inc
mov
(bad)
int
cmps
nop
hlt
lds
outs
xchg
and
lds
or
pop
xor
sub
outs
ja
out
adc
dec
lods
and
add
retf
sti
push
or
xor
ror
leave
call
mov
inc
sete
cdq
add
into
popa
jo
(bad)
std
hlt
dec
sub
inc
retf
pop
sahf
test
in
or
repz
and
dec
clc
imul
adc
mov
cdq
adc
jl
push
ins
ret
test
cmps
pop
or
loope
lahf
push
dec
add
ja
xchg
push
pop
jne
inc
cwde
popa
sahf
sub
mov
adc
fcomp
pop
dec
rcr
mov
push
ror
sar
mov
inc
mov
add
outs
jo
sub
sahf
ret
(bad)
mov
mov
or
jmp
in
pushf
ficom
push
(bad)
mov
mov
and
xchg
loop
add
je
xlat
cmc
lock
ret
jne
pop
clc
xchg
cmps
sbb
loope
xor
sti
jae
mov
xor
add
lahf
ins
jbe
mov
and
retf
lds
and
cwde
add
cmp
mov
mov
sub
sub
jb
adc
xor
and
pop
gs
cld
mov
pop
xlat
sbb
stos
retf
call
inc
jmp
test
add
push
mov
mov
cmp
dec
cli
add
inc
xlat
pop
rcl
and
fimul
add
sub
adc
mov
adc
pop
adc
sub
ret
jp
mov
inc
inc
and
cmp
ds
or
div
xor
je
pushf
jl
push
das
jecxz
ins
dec
mov
enter
inc
leave
add
adc
ins
iret
xchg
cs
dec
inc
mov
dec
imul
push
inc
push
(bad)
dec
add
dec
or
jne
pop
xchg
retf
xchg
sub
popf
add
imul
cmp
jbe
mov
retf
inc
adc
mov
test
dec
rol
out
cmps
gs
mov
cmps
mov
call
jecxz
rol
shr
rcl
dec
adc
push
dec
stos
inc
push
sbb
xchg
call
mov
sub
xchg
lods
arpl
ss
push
fimul
mov
jl
popa
mov
mov
ficom
ret
in
in
jnp
push
jmp
cmp
call
mov
fs
pop
retf
out
into
fmul
aam
add
ret
push
pushf
ds
xchg
ss
fdiv
shr
push
xchg
xchg
call
adc
scas
pop
xlat
fs
mov
jne
xchg
pop
mov
idiv
mov
adc
int
std
fnstcw
push
dec
and
cmp
jnp
pop
scas
mov
adc
loop
jge
imul
dec
dec
push
aam
mov
std
adc
retf
mov
or
xchg
jnp
lods
cmp
aaa
into
and
arpl
mov
jmp
clc
mov
sub
movs
xchg
push
jbe
loop
loop
mov
lds
xor
pop
ja
(bad)
xchg
lahf
xchg
js
mov
ror
ret
dec
lds
fdiv
retf
out
or
bound
test
les
inc
xor
mov
mov
mov
add
mov
loopne
sbb
xlat
mov
addr16
nop
mov
adc
cmp
push
mov
xchg
jo
neg
cwde
int
sti
cld
fcomi
ficom
icebp
(bad)
jge
daa
lahf
shr
sbb
xor
fld
or
movs
cmp
bound
jecxz
mov
xor
(bad)
push
es
xor
xchg
jne
imul
push
mov
repnz
jbe
aad
xor
or
clc
xchg
pop
and
adc
jns
retf
out
sti
ds
popa
inc
nop
fsub
jnp
add
lea
xor
in
test
shl
jne
cmc
cwde
xor
xor
xor
inc
mov
enter
jmp
sbb
mov
(bad)
shld
unpckhps
jbe
(bad)
pushf
pop
mov
repz
int3
mov
mov
jmp
test
jl
pusha
sar
outs
and
movs
das
jp
add
xchg
xchg
xor
pop
push
push
push
add
mov
dec
cs
cmp
loopne
mov
add
js
jns
mov
hlt
xchg
mov
(bad)
adc
or
push
adc
pop
mov
xor
xchg
shl
push
clc
or
push
cbw
dec
outs
pop
mov
hlt
add
mov
test
retf
sbb
and
outs
mov
sti
movs
xchg
push
nop
cld
sub
aaa
jecxz
add
mov
pop
jp
pop
sub
xor
std
dec
push
jo
out
(bad)
adc
jbe
call
not
stc
nop
js
jmp
ror
vphsubbw
sub
(bad)
mul
fidiv
mov
mov
adc
jmp
cmp
fnstsw
push
clc
lds
ins
add
sub
pop
and
fldenv
ins
sar
sub
mov
mov
mov
fnsave
in
jecxz
dec
xchg
jnp
and
pop
sub
dec
pop
pop
mov
add
(bad)
mov
ins
and
dec
fsub
mov
or
imul
call
imul
aad
(bad)
pop
add
enter
ss
adc
or
test
lahf
movs
fild
mov
xor
xchg
pop
stc
dec
and
and
jmp
pop
xor
ss
xor
into
lods
out
pop
jg
(bad)
jne
nop
ss
pop
cmp
xlat
mov
cmps
ret
xor
add
mov
ficomp
dec
jno
mov
loope
push
shl
daa
out
mov
jmp
push
jecxz
(bad)
repnz
dec
mov
jge
sub
test
pusha
stos
ret
int
dec
adc
test
dec
cdq
sbb
inc
leave
mov
test
lahf
(bad)
cmp
fsubr
pop
mov
test
jl
mov
cmovp
sbb
push
(bad)
sbb
nop
mov
dec
sbb
dec
mov
jb
sub
mov
push
push
mov
into
sbb
dec
ror
xor
clc
in
cdq
mov
(bad)
js
push
push
rcl
into
or
sbb
jne
push
push
cmps
js
dec
jbe
dec
jae
es
mov
cmps
lahf
push
xchg
adc
pop
or
mov
cmp
mov
pop
jae
xchg
mov
sbb
jne
movs
or
dec
push
xchg
jo
test
les
aaa
mov
gs
outs
xor
xchg
ror
xchg
shl
mov
mov
int
inc
mov
jg
push
pop
xor
cmp
inc
or
xchg
mov
fisubr
inc
adc
jg
sahf
inc
cmps
leave
movs
movs
test
div
mov
push
cwde
mov
cld
bound
adc
add
push
jle
pop
ins
ror
inc
ja
xlat
jge
and
mov
push
cmp
in
mov
sbb
mov
ins
jne
push
push
ins
shl
stos
jb
jge
sub
clc
mov
add
rcl
sbb
cdq
inc
xor
sahf
or
aas
(bad)
repz
call
rcr
std
sbb
repnz
stos
sub
sub
xchg
mov
shr
add
xor
jbe
ja
adc
jle
mov
xor
cmp
(bad)
(bad)
addr16
xor
movs
in
inc
pop
test
mov
adc
aad
xor
dec
xchg
sbb
adc
xchg
or
mov
or
cmp
cmp
xchg
mov
pushf
fimul
jg
mov
adc
fnsave
mov
std
test
pushf
movs
popa
sub
xchg
aas
xor
cmp
push
mov
add
imul
stos
mov
mov
push
in
xor
adc
icebp
(bad)
mov
jle
dec
popf
fiadd
nop
xlat
repz
cli
retf
ss
sub
cmp
outs
fwait
div
xchg
jae
sti
and
lahf
cmc
cmp
mov
fld
xchg
xor
retf
sbb
cmps
inc
inc
aas
cwde
sbb
cdq
mov
mov
div
fsub
inc
and
and
out
pop
cmp
jmp
enter
pop
stos
(bad)
pop
dec
out
push
inc
(bad)
xlat
inc
imul
int
or
and
sbb
adc
call
xchg
jmp
mov
adc
jbe
out
retf
rcl
fistp
xchg
push
int3
in
adc
ds
test
push
adc
in
out
cmps
mov
ret
push
and
cmp
les
sub
jl
cmp
xchg
out
ins
or
or
test
cmc
mov
hlt
mov
sahf
ret
jne
mov
test
mov
inc
sbb
mov
jne
add
dec
or
enter
mov
cld
adc
or
pop
mov
(bad)
scas
popa
pop
arpl
test
mov
das
cmp
and
fistp
loope
mov
clc
inc
jecxz
or
mov
xor
add
adc
movs
(bad)
mov
xchg
icebp
jg
sar
fadd
mov
lods
stc
mov
xchg
sub
aaa
(bad)
fild
daa
ins
push
sub
imul
scas
movs
lods
or
daa
jle
or
jnp
and
inc
add
cli
mov
in
fistp
jb
les
pop
pop
pop
mov
inc
or
push
or
ins
movs
icebp
mov
xchg
add
lods
inc
pop
imul
daa
or
jo
and
movs
add
repz
push
sbb
dec
daa
mov
imul
call
dec
retf
push
mov
daa
jae
sbb
xchg
sbb
les
sub
xchg
es
jb
sub
stos
inc
jge
sub
outs
adc
push
div
andps
lods
mov
jnp
shl
test
cmps
popa
loope
adc
out
or
mov
sahf
call
not
mov
mov
jle
jo
jl
pop
pop
cmp
in
jmp
xor
push
mov
in
add
or
out
xor
movs
int3
nop
jno
inc
dec
not
rol
nop
jmp
dec
mov
mov
jbe
(bad)
mov
pushf
js
gs
outs
pop
mov
jmp
and
jecxz
imul
and
pop
and
shr
popf
jle
inc
dec
leave
jg
nop
loopne
lock
adc
loopne
(bad)
aam
push
mov
lods
mov
inc
mov
and
scas
dec
icebp
dec
cld
sub
push
dec
add
ds
sbb
inc
inc
(bad)
call
call
push
pop
cdq
mov
pslld
dec
adc
sub
cmpps
jge
fwait
retf
mov
lods
mov
push
lahf
in
add
xchg
mov
test
test
add
cmp
add
lods
call
adc
loope
mov
inc
adc
mov
jle
gs
in
pop
sti
jl
mov
scas
mov
adc
jnp
cmp
push
loopne
jae
(bad)
out
aaa
stc
xor
mul
outs
or
pushf
std
rol
inc
xchg
adc
inc
add
std
jle
jecxz
jl
pop
call
mov
inc
test
push
push
daa
dec
sub
pop
adc
add
mov
lods
out
stos
add
dec
cmc
or
sub
xchg
pushf
or
sbb
loopne
pop
mov
mov
xor
idiv
leave
adc
pop
sub
or
stos
in
xor
loop
or
dec
and
push
jne
sub
dec
cmp
fdiv
add
fstp
and
xor
push
and
cmc
mov
hlt
mov
rcl
inc
jge
sub
popf
aad
cmp
in
js
aaa
pop
mov
and
push
lds
mov
xchg
push
sti
popa
fistp
pop
xor
lock
sbb
xchg
push
test
and
adc
bound
into
push
mov
mov
or
jge
xchg
mov
inc
(bad)
inc
inc
fld
(bad)
xor
or
add
movs
pushf
cmp
loop
cld
mov
lds
pop
leave
ins
cmc
pop
add
fisubr
mov
test
jl
call
sti
mov
stos
pop
add
cmp
daa
lahf
fwait
adc
out
push
nop
cli
aaa
cs
fs
push
rcl
jg
adc
pop
rol
int3
jbe
lods
shl
jge
pop
mov
mov
mov
pop
test
es
sahf
aaa
push
lock
fmul
add
cmp
sub
ret
in
sbb
add
loope
mov
in
loopne
in
jp
shl
or
mov
sti
add
jno
cli
inc
test
adc
sub
jmp
cli
fisttp
cmp
xor
or
popf
or
ss
jmp
gs
stos
cli
mov
stos
sub
mov
ins
xchg
leave
ins
ins
lods
pop
lahf
test
inc
push
and
dec
pop
push
jmp
xor
ror
sbb
fisub
or
pop
enter
mov
jnp
mov
push
mov
mov
arpl
pop
pushf
hlt
cdq
aad
aas
push
call
mov
adc
into
imul
jmp
nop
or
inc
out
retf
fstp
stc
pushf
daa
cmovg
ficomp
or
rcl
jl
leave
mov
in
mov
fistp
cmps
and
jge
and
mov
xchg
cmc
lds
int
sbb
outs
dec
loopne
in
or
mov
add
mov
stc
push
(bad)
hlt
adc
jb
or
cs
cvttps2pi
(bad)
fadd
into
xor
adc
(bad)
fldcw
popf
sub
cmp
or
retf
mov
inc
push
xchg
mov
jno
mov
scas
out
add
jmp
js
cs
outs
push
dec
ins
push
ja
in
or
jns
dec
push
pop
push
add
(bad)
scas
push
ss
xor
add
icebp
and
xor
or
jo
pop
cli
add
(bad)
stos
sbb
lods
mov
lds
dec
push
mov
push
adc
cmps
out
into
push
fiadd
adc
in
shl
test
lea
mov
pop
inc
xchg
sub
and
mov
rcl
repz
in
shl
push
jb
fyl2x
jmp
retf
jno
iret
mov
aad
sub
sbb
ret
inc
mov
pushf
jne
les
pop
fnstcw
mov
jnp
idiv
mov
fimul
cmp
mov
lods
xor
mov
pop
inc
xor
mov
(bad)
and
data16
in
adc
ins
call
dec
cld
mov
retf
or
dec
sub
jg
icebp
cmps
stc
add
rol
xor
retf
ins
stc
popf
sbb
inc
out
pop
in
push
gs
aas
dec
sar
pop
movs
jmp
adc
adc
jecxz
jae
aas
dec
or
xchg
loopne
mov
adc
repnz
sbb
jl
movs
adc
mov
jl
inc
(bad)
gs
mov
and
xchg
repz
adc
jns
mov
push
jmp
rol
sub
imul
lahf
or
pusha
mov
pop
push
add
lods
ins
mov
inc
adc
fisttp
jle
xchg
push
aaa
cmp
hlt
fld
ds
dec
ss
xor
retf
and
inc
cld
aaa
in
push
xor
add
daa
arpl
jmp
push
inc
je
jno
stc
popa
or
add
sub
scas
inc
mov
mov
inc
jo
frstor
mov
mov
inc
(bad)
dec
es
popf
and
int3
dec
sbb
repz
mov
xchg
jbe
hlt
(bad)
add
cdq
jne
inc
gs
xor
aam
jg
out
call
inc
and
je
and
inc
hlt
das
fild
mov
div
lds
retf
int3
mov
add
inc
outs
imul
jnp
mov
daa
inc
xor
cmp
sar
pop
and
lock
js
ins
sbb
xor
sub
ret
cld
push
add
fild
test
sbb
es
sbb
lods
xchg
stos
mov
les
inc
mov
inc
mov
and
adc
mov
adc
sbb
pop
js
cwde
adc
mov
or
or
mov
push
popf
push
call
inc
jle
ins
std
mov
jg
ret
mov
loope
and
sub
ror
daa
ds
jmp
mov
dec
push
cmp
int3
or
dec
inc
mov
xor
cmc
mov
mov
es
mov
push
stos
add
jmp
cmp
adc
cmp
shl
inc
popf
movs
movs
shl
loopne
je
or
jo
mov
pop
test
out
jbe
sbb
arpl
enter
into
shl
outs
iret
loope
pop
data16
fdivr
cmp
sti
xchg
std
mov
cld
dec
lds
jb
icebp
sbb
leave
sbb
loope
cdq
xchg
cmc
loopne
arpl
cli
int
lds
test
stos
idiv
xchg
mov
sbb
and
call
cmp
and
mov
dec
in
sbb
mov
lods
pop
inc
(bad)
cwde
lods
ins
imul
xor
js
popa
xchg
les
xchg
fwait
loope
mov
xor
cld
retf
xchg
sub
jp
xor
xchg
xor
test
aas
push
xchg
cwde
jmp
out
push
sbb
and
dec
js
(bad)
cmps
sub
fidiv
arpl
mov
fnstenv
int3
xchg
mov
add
dec
xchg
xchg
pop
jbe
mov
dec
in
jne
sbb
pushf
jnp
push
jno
jbe
idiv
ret
bound
pop
scas
pop
ret
push
xor
cld
dec
iret
cmps
dec
clc
push
pop
sar
or
xchg
pop
ss
mov
mov
out
inc
gs
(bad)
out
fiadd
mov
sub
pop
xor
je
or
sub
lods
inc
push
jp
dec
cmps
mov
hlt
in
push
dec
xor
sub
in
sub
mov
je
bound
movs
mov
fwait
int3
push
int
repz
mov
scas
sub
mov
dec
add
push
mov
arpl
and
mov
sub
out
ror
dec
cdq
ins
cmps
mov
out
or
inc
xor
ss
cmp
sub
and
pop
sbb
xchg
or
xchg
out
pop
rcr
xchg
fs
and
mov
icebp
xchg
cmp
inc
pop
jno
sbb
icebp
out
in
popf
into
xchg
adc
jmp
inc
push
loope
icebp
pop
scas
xchg
out
aam
ds
jmp
lods
dec
sub
loopne
mov
sbb
enter
sbb
shl
arpl
sub
jne
imul
(bad)
dec
push
in
xor
adc
adc
rcr
push
pop
inc
mov
popf
in
and
pop
fs
sub
adc
dec
mul
aaa
pop
push
xchg
adc
xchg
jg
pop
jnp
out
mov
lahf
push
push
mov
(bad)
xchg
and
sbb
jnp
in
push
neg
mov
add
mov
mov
cld
inc
loope
pop
cmp
mov
inc
sbb
(bad)
sub
xor
repz
mov
cmp
xor
mov
popa
bound
(bad)
in
mov
mov
xlat
and
test
mov
pop
or
mov
test
and
lahf
inc
xchg
js
clc
imul
sbb
lods
adc
gs
cdq
scas
sbb
and
int3
loop
add
popf
aad
sbb
push
ror
jg
retf
jbe
xor
lds
sar
xchg
mov
mov
mov
pusha
popf
or
(bad)
dec
jne
adc
mov
push
ret
xor
xchg
add
imul
sub
cmps
push
cmc
adc
xor
cmc
outs
dec
cmp
mov
and
sbb
enter
movs
cmp
jle
push
xor
add
mov
push
outs
fimul
pop
mov
fist
push
stc
aam
mov
pop
mov
pop
pop
add
xchg
pop
cld
mov
adc
jns
scas
xor
jne
lea
mov
and
call
jbe
lods
clc
jbe
cwde
iret
push
call
add
and
clc
jno
xchg
dec
mov
in
mov
dec
mov
or
sub
call
cmp
pop
cmp
(bad)
jbe
sub
push
xor
out
fcmovne
jmp
pop
xchg
sbb
mov
mov
push
aad
(bad)
sti
cli
gs
fwait
out
cmp
dec
xor
in
push
out
mov
sbb
(bad)
lods
push
jl
xchg
or
bts
popa
cmp
and
es
xchg
idiv
mov
shl
test
mov
push
sub
jns
mov
push
sti
mov
sbb
add
jmp
add
jg
sub
sub
cmp
mov
sar
jp
and
fmul
xor
dec
repnz
mov
sbb
jb
inc
cdq
adc
sbb
lods
mov
sub
jo
jge
ds
xor
mov
sbb
outs
stc
int3
icebp
or
jle
jmp
idiv
or
imul
leave
mov
out
xchg
movs
cmps
sub
sub
dec
stc
jle
ret
loop
xor
bound
into
cld
and
push
js
pop
jae
ret
movs
arpl
pop
or
dec
popa
test
sub
ret
out
dec
cmps
bound
ja
out
leave
pop
jns
rcl
add
cwde
sbb
cs
push
or
mov
jle
jb
dec
(bad)
xchg
repz
push
mov
shl
lock
jbe
scas
push
cmps
or
in
test
sbb
or
into
popf
add
imul
ds
xor
scas
cmps
jg
scas
jg
stc
adc
inc
dec
cs
aad
inc
pop
or
adc
jnp
repz
mov
loopne
pop
test
add
into
push
mov
dec
aad
stos
cmps
pop
sub
nop
sbb
pop
cmp
jae
jecxz
scas
dec
adc
cs
adc
lea
push
shr
je
hlt
and
dec
lds
xor
mov
push
push
adc
mov
call
std
inc
imul
loop
pop
cmp
push
lock
stos
and
iret
scas
add
test
daa
xchg
mov
jg
sti
add
jle
cmp
pop
in
jae
mov
lods
lock
cmps
mov
cli
sbb
and
xor
ror
sub
repnz
aaa
shl
jae
fisttp
and
test
adc
jmp
int3
mov
fs
jmp
imul
test
into
jge
xchg
leave
mov
(bad)
loop
call
jo
cdq
dec
cdq
sub
jo
pop
fisttp
fadd
shl
or
inc
pop
add
xor
xchg
mov
ret
mov
sub
into
call
push
pop
push
into
add
jne
sub
mov
or
stc
pop
gs
mov
dec
jns
push
push
movs
rol
mov
mov
xchg
ret
jne
lds
(bad)
mov
int3
jp
cli
out
push
pop
call
mov
(bad)
dec
push
bound
stc
add
sbb
lods
xor
idiv
sub
mov
and
hlt
es
cmp
dec
fdivr
mov
sbb
and
cmp
or
test
enter
push
cmp
jl
fucomp
cli
xlat
cld
mov
into
ss
inc
jne
add
out
aas
sub
je
push
mov
xlat
xor
ret
sbb
xor
add
push
and
mov
ret
or
hlt
push
push
adc
(bad)
cld
fnsave
movs
aas
mov
jmp
das
xor
mov
add
js
popa
cmps
add
ret
pop
ja
loope
adc
dec
outs
sar
hlt
mov
sub
movs
fld
and
xor
cmp
std
dec
sbb
je
mov
sub
sub
xor
and
ret
or
nop
adc
loop
xchg
inc
xchg
les
aad
mov
(bad)
scas
cmp
mov
xchg
cmp
maxps
xor
enter
jle
or
outs
popa
aam
pop
pop
jge
out
adc
popa
(bad)
movs
out
mov
add
xchg
(bad)
and
push
pop
xlat
clc
push
and
imul
dec
inc
mov
jne
out
adc
loop
hlt
and
push
pop
sar
mov
xchg
ds
xchg
jne
mov
popa
mov
jg
pop
xlat
and
sbb
mov
sub
xchg
fild
xor
scas
add
stc
or
cwde
ja
mov
jbe
loope
jbe
adc
shl
adc
mov
int3
pusha
pop
push
ins
arpl
out
push
ins
push
add
xchg
pop
pushf
sub
nop
movs
les
cmc
sbb
push
mov
ret
and
xlat
adc
xlat
(bad)
ds
shr
aaa
fdiv
je
es
adc
je
not
mov
mov
int3
ja
jle
pushf
mov
js
or
lock
mov
in
sti
mov
in
xor
pop
cmp
aaa
popf
xchg
xor
inc
dec
mov
mov
enter
scas
xchg
test
sbb
jns
std
out
or
std
pop
mov
pop
and
mov
pop
std
or
test
loopne
jmp
lods
aam
stc
push
sbb
fild
inc
rcr
sub
add
jno
mov
stc
mov
enter
rcl
jp
dec
(bad)
enter
dec
pop
retf
mov
sbb
in
shl
xor
not
pop
pop
jmp
mov
(bad)
jg
lods
add
in
test
sbb
fbstp
aam
ss
cmc
cmp
xchg
mov
pop
push
mov
mov
inc
rol
add
mov
jl
mov
(bad)
pop
pop
cmps
lds
cmp
pop
push
push
pop
and
inc
aam
sub
xlat
ficom
inc
fcom
arpl
cdq
mov
inc
(bad)
scas
or
test
adc
cmc
pop
clc
or
push
push
inc
xchg
xchg
pop
fs
nop
sbb
test
jl
push
cmp
mov
sbb
mov
inc
cmp
arpl
daa
lods
dec
xor
sbb
pop
add
jno
inc
cli
adc
pop
xchg
and
lods
xchg
dec
or
xlat
cs
test
mov
and
jo
ss
push
mov
loop
repz
inc
jbe
mov
shl
cmp
jge
dec
inc
enter
movs
fdiv
push
(bad)
xchg
push
scas
mov
inc
push
mov
jnp
cmp
ret
cmps
ficomp
lds
fcmovu
int3
outs
pop
fistp
or
out
test
or
mov
jge
(bad)
xor
cmp
sbb
push
push
xchg
cmc
cmc
leave
ja
cmp
mov
cmp
cmc
jp
cmp
or
aam
repz
(bad)
xchg
popf
add
xor
(bad)
dec
shl
test
(bad)
fwait
in
push
hlt
dec
aad
dec
or
(bad)
mov
out
cmc
out
int
adc
dec
repnz
and
sub
in
das
mov
shl
add
addr16
inc
mov
(bad)
out
sbb
ret
xchg
sbb
add
rcl
xchg
cmc
push
sar
mov
push
mov
fs
imul
push
and
sti
inc
push
stos
push
mov
xor
pusha
ja
retf
dec
fadd
sub
adc
pop
test
shr
nop
and
cli
fisub
and
push
in
cdq
jae
mov
cmp
xchg
sub
xor
gs
mov
pop
js
leave
xchg
xchg
adc
aas
sti
ins
xchg
fcom
ret
int
and
push
adc
mov
mov
std
inc
je
ja
mov
and
repz
ds
test
fsub
mov
sti
test
jmp
sahf
dec
loop
cmp
cmps
push
movs
repnz
jge
scas
lds
cmps
fistp
dec
icebp
push
sbb
scas
xchg
nop
test
add
sub
cld
and
mov
and
arpl
mov
dec
fxch
inc
loope
dec
pushf
call
jmp
inc
pop
pop
dec
xor
push
not
cmp
pop
in
call
sub
and
pop
xchg
repnz
push
xor
cmp
fcomp
dec
dec
sar
inc
sub
fisubr
jle
out
lods
sbb
test
fs
jb
mov
mov
imul
pushf
mov
sub
movs
int
push
repnz
lds
ins
rcl
dec
jns
adc
test
(bad)
push
je
mov
leave
cmps
sub
adc
in
mov
sub
in
push
push
scas
int
adc
mov
mov
scas
and
lods
in
loopne
jb
add
push
jo
sbb
mov
arpl
loopne
iret
call
inc
jb
mov
mov
jmp
jp
aaa
and
call
(bad)
ret
fisttp
or
and
imul
in
adc
(bad)
hlt
cmps
jne
imul
and
push
mov
pusha
shl
xchg
js
mov
cmps
call
pop
jp
adc
fbld
and
(bad)
adc
pop
adc
xchg
shr
test
inc
pop
or
iret
mov
imul
ret
nop
rcr
popa
sbb
(bad)
jne
cwde
xchg
loopne
inc
jmp
xchg
out
imul
mov
cs
sub
add
rcr
out
shl
inc
or
mov
mov
push
and
(bad)
mov
and
test
xchg
or
cmp
sub
dec
imul
xchg
rcl
(bad)
outs
cmps
adc
das
(bad)
shl
test
dec
imul
push
ret
xor
push
jmp
inc
iret
ja
es
add
dec
shr
cmps
in
or
sbb
mov
cmc
aaa
cli
sub
dec
sub
sub
mov
clc
cli
mov
push
jno
test
push
inc
repz
add
cmps
mov
(bad)
enter
mov
arpl
mov
push
pop
inc
leave
cmc
jbe
sti
push
push
popf
inc
adc
jne
xor
cmp
mov
adc
push
or
fadd
pop
pop
adc
mov
sti
fcomip
xchg
shr
movs
mov
xchg
and
xchg
pop
mov
jns
add
js
test
popf
mov
daa
sbb
or
dec
sub
inc
retf
shl
or
pusha
fstp
adc
sub
inc
push
pusha
fild
or
(bad)
popf
xor
mov
call
idiv
rep
loop
dec
and
xor
das
lea
adc
push
lahf
push
or
or
inc
aaa
xchg
push
lods
pop
dec
xor
inc
and
(bad)
mov
xchg
jmp
outs
call
(bad)
bound
jae
mov
add
pop
mov
jns
imul
test
jno
scas
xchg
push
aas
div
cmp
dec
fld
loope
xchg
pusha
lock
mov
adc
cs
gs
mov
sub
jns
xchg
test
aad
mov
jae
sub
inc
inc
adc
jns
or
add
stos
retf
lods
repz
in
xor
jmp
cmc
repz
and
or
lods
imul
sbb
mov
lods
test
inc
aaa
mov
in
repnz
adc
add
xchg
(bad)
mov
xlat
iret
addr16
xchg
xor
je
test
jb
inc
mov
aam
or
push
adc
mov
mov
adc
sub
mov
inc
imul
das
(bad)
out
jmp
dec
jb
pushf
call
inc
cwde
ds
imul
dec
(bad)
jl
call
rol
mov
and
dec
fdiv
fsubr
pop
cmp
in
cmp
mov
in
stos
adc
ins
lods
loope
(bad)
loope
pushw
jg
xchg
mov
add
sti
inc
jns
leave
call
lock
xor
sub
add
jle
sub
cmp
dec
retf
shl
iret
xchg
pop
jns
aam
xchg
fwait
test
jp
lahf
mov
mov
push
ja
inc
cmps
lock
adc
cwde
pop
cmp
leave
xchg
or
xchg
push
mov
sbb
mov
fwait
adc
cmp
sti
jle
adc
xlat
jb
sbb
inc
fs
xchg
dec
test
mov
xchg
add
mov
les
pop
add
hlt
and
sub
sub
movs
(bad)
dec
call
cmp
jp
adc
or
sub
or
jnp
mov
rep
mov
das
sbb
stos
jo
and
pop
pop
sahf
cmp
cmp
sbb
mov
cmp
(bad)
(bad)
mov
jbe
aaa
cdq
les
pop
cmps
xor
cmp
nop
test
enter
cmp
call
cld
adc
xchg
jbe
xchg
adc
jmp
iret
cmps
in
(bad)
inc
fidiv
xchg
test
hlt
test
mov
push
movs
push
xor
scas
repnz
retf
cld
out
push
(bad)
push
xor
dec
(bad)
aam
ins
clc
push
sahf
cdq
mov
add
mov
daa
xor
mov
xor
ja
sahf
xor
stos
inc
ficom
(bad)
mov
scas
push
int
adc
je
add
cdq
lahf
in
sbb
xlat
sbb
cmps
cmp
ja
pop
dec
lods
jnp
mov
xor
in
dec
push
pop
dec
pop
push
rcr
jle
or
inc
sahf
loope
test
jb
mov
sub
mov
add
add
xlat
pop
retf
loop
cdq
push
inc
inc
cld
pop
call
sbb
jmp
xchg
imul
(bad)
mov
dec
jmp
sub
out
test
fwait
inc
cmp
cmp
dec
dec
lahf
dec
sbb
xchg
or
sar
or
daa
in
mov
pop
scas
repz
jne
nop
arpl
popa
sbb
(bad)
sub
dec
push
mov
test
push
out
sub
bound
and
pop
mov
arpl
cs
mov
clc
in
data16
test
loope
popa
mov
test
retf
je
jmp
stos
fstp
imul
lds
stos
jnp
adc
loope
pop
xchg
sub
shl
int3
mov
mov
pop
dec
inc
jmp
sbb
push
cmp
inc
mov
int
push
test
paddsw
mov
sub
push
inc
mov
lds
loope
int3
pusha
jecxz
jb
fist
sbb
xchg
enter
clc
sahf
fbld
in
pop
pop
movs
rol
jecxz
ror
fwait
push
dec
fxch
repz
jo
mov
jecxz
call
dec
jge
push
ins
fld
adc
jle
dec
arpl
fdiv
cmc
inc
imul
mov
test
adc
pop
(bad)
mov
mov
mov
jb
adc
or
repz
jo
jge
popf
adc
jbe
out
int
push
bswap
cwde
jmp
popa
add
shr
pop
popf
fld
dec
dec
xchg
in
inc
sbb
cmp
sub
aam
pop
stc
repz
das
cmc
fisub
mov
sub
cmc
pop
inc
sti
cli
(bad)
or
dec
sbb
or
ret
xchg
test
jnp
push
push
ret
retf
lock
mov
dec
or
jbe
or
pop
dec
mov
sbb
cld
fcom
fs
mov
fsub
retf
sbb
xchg
arpl
push
ins
daa
clc
std
and
jb
adc
push
lock
inc
int
jmp
adc
mov
aam
mov
ret
hlt
mov
outs
push
jmp
outs
mov
dec
repnz
les
mov
mov
loope
pop
sahf
sbb
inc
xchg
push
xchg
sbb
and
fistp
mov
sub
jmp
jle
xchg
adc
sbb
xchg
fadd
outs
and
cmp
(bad)
je
xlat
not
or
push
fisub
sbb
mov
sub
sub
das
dec
add
ds
out
xor
or
fnsave
push
mov
xor
cmp
mov
test
std
pop
mov
push
imul
cmc
outs
out
jb
test
jbe
sbb
in
mov
sbb
push
addr16
ror
add
mov
adc
cmp
pop
in
adc
pop
push
adc
out
stos
add
pushf
cmp
pop
xor
fdivr
inc
cmp
not
ja
mov
call
dec
mov
push
lods
mov
mov
push
ss
push
and
cmp
jo
or
mov
outs
jg
leave
pop
cmp
(bad)
mov
std
push
es
test
loopne
loope
repnz
mov
pop
sub
lds
and
ror
mov
xor
mov
ins
(bad)
push
scas
(bad)
ds
aaa
mov
xor
enter
or
shl
xchg
(bad)
(bad)
inc
(bad)
push
shr
(bad)
sbb
movs
mov
test
outs
cdq
mov
ins
sbb
stos
aad
push
dec
adc
and
(bad)
cmps
add
push
lock
imul
add
in
fs
inc
lods
ror
and
mov
retf
out
dec
and
scas
dec
lea
cmc
sbb
out
leave
aas
mov
cmp
ret
push
js
mov
pushf
in
sbb
cmp
jmp
jecxz
cld
jmp
cmp
push
xchg
jle
xor
ja
inc
pushf
push
push
jle
and
mov
fcomp
stos
mov
and
add
jae
push
pop
ins
test
test
fadd
sbb
adc
pop
mov
cs
or
and
sub
sbb
pop
fcomi
retf
(bad)
call
(bad)
cmp
dec
(bad)
mov
cmp
jecxz
adc
push
out
mov
repz
push
test
adc
in
stos
out
adc
stos
cmp
and
xor
cmp
test
sub
in
pop
ret
fcom
cld
movs
push
sbb
push
sub
jmp
push
fmul
loopne
sar
in
mov
arpl
xor
or
push
xchg
imul
adc
jp
ret
jmp
fist
push
jo
add
jbe
add
std
add
sbb
sahf
and
int
mov
in
jo
pushf
push
inc
scas
call
popa
scas
inc
mov
push
repz
sub
and
push
or
xchg
add
xchg
pop
xchg
je
add
iret
out
(bad)
cmp
and
mov
pop
xchg
retf
icebp
inc
or
mov
cmp
daa
cs
inc
(bad)
sbb
lods
nop
repz
jbe
dec
adc
xchg
push
pop
lods
call
mov
mov
and
sub
pusha
adc
jge
les
xchg
clc
jg
push
add
and
cmp
scas
ficom
ds
dec
jns
jns
pop
aad
and
dec
jo
mov
data16
es
loop
es
adc
jg
mov
sub
lea
jp
aam
int3
ss
imul
xchg
shl
cmp
sbb
sub
pushf
mov
push
shl
xor
mov
xchg
test
stos
push
mov
push
repnz
cmp
scas
fwait
rcr
lea
fs
les
dec
xchg
cwde
and
jnp
ret
xchg
lds
adc
mov
mov
(bad)
jp
and
ficom
inc
mov
push
mov
mov
xchg
fprem
rcr
jne
and
cwde
ret
call
mov
adc
cmp
mov
lods
inc
cmps
add
imul
cmp
mov
add
xchg
popf
int
jae
pop
shl
sub
lds
shl
call
je
sbb
fidiv
dec
jg
das
stos
mov
(bad)
push
mov
mov
mov
cmp
mov
pop
or
mov
ins
add
and
push
dec
pop
cmps
jae
pop
mov
jne
push
gs
test
out
adc
ins
jno
in
popf
in
xchg
xlat
lods
cmp
bound
cmps
dec
mov
in
push
aaa
jg
sub
jp
push
and
mov
ret
sbb
or
jg
and
adc
clc
les
scas
push
xor
lock
push
lahf
jne
iret
shl
dec
cmps
cmp
(bad)
cmp
cmp
popa
ja
sbb
test
inc
js
mov
xor
sbb
xchg
call
mov
scas
xchg
mov
jecxz
loop
xor
mov
xor
mov
mov
push
jle
enter
scas
adc
sbb
jb
push
jg
xchg
cs
pop
fisttp
pop
ins
inc
sbb
xchg
rcr
push
clc
mov
stc
imul
int3
leave
xor
(bad)
jb
fsubr
xchg
imul
mov
mov
scas
ret
mov
stc
scas
(bad)
repnz
jecxz
push
pop
adc
sub
test
out
dec
icebp
loope
mov
enter
repz
test
ins
mov
inc
add
pop
push
cmp
stc
shl
push
push
push
rcr
mov
pop
test
call
dec
int3
iret
and
or
xchg
push
shl
add
push
xchg
jb
ins
push
mov
jl
push
aam
inc
in
mov
pop
jnp
scas
pop
or
bound
mov
test
in
(bad)
mov
daa
adc
shr
ficomp
sub
jmp
cmp
outs
(bad)
aad
(bad)
fisub
adc
pop
ror
daa
jb
aaa
mov
jno
and
loopne
sub
loope
sbb
aaa
loop
icebp
das
test
cmc
popa
xor
std
nop
add
ror
push
sub
ret
and
cmp
mov
and
imul
jno
mov
clc
ds
jo
and
mov
add
add
inc
cmp
pop
rol
fmul
jmp
(bad)
jb
shl
jg
inc
or
dec
(bad)
addr16
and
mov
fwait
xor
sbb
scas
call
sub
or
test
mov
cmovle
xor
dec
sub
lea
cmps
mov
lea
loopne
(bad)
cmp
mov
mov
push
inc
scas
inc
adc
mov
push
daa
jns
jno
xchg
add
or
add
xor
jbe
xlat
push
add
jp
mov
add
mov
and
nop
mov
test
int3
test
cmp
retf
ja
sub
sbb
mov
psrad
push
cmp
jmp
xor
call
add
ror
sbb
add
call
ins
(bad)
aaa
test
and
pop
test
mov
cld
dec
inc
sar
xchg
(bad)
arpl
ret
mov
mov
jg
add
mov
mov
xor
retf
pop
mov
mov
xchg
mov
shr
retf
inc
add
shr
jmp
mov
jns
div
adc
add
nop
push
test
add
jp
fild
test
adc
sub
out
(bad)
cmp
ror
imul
sub
(bad)
adc
mov
dec
sahf
dec
pop
jmp
leave
dec
mov
fld
nop
sbb
mov
or
aaa
push
mov
lock
popa
or
lods
mov
jnp
gs
(bad)
pusha
lea
jecxz
push
push
add
mov
dec
into
mov
test
add
test
retf
pop
test
add
mov
pop
frstor
test
cld
mov
adc
in
loope
or
xchg
sbb
(bad)
jns
retf
jmp
dec
adc
sub
mov
outs
orps
jge
push
shr
add
aaa
pop
sbb
lods
sbb
pop
mov
data16
fwait
inc
hlt
adc
pop
rcr
fidiv
mov
es
std
jle
leave
retf
xchg
push
cmp
sbb
mov
out
clc
pop
(bad)
in
sbb
cmc
xor
and
es
lods
cwde
jmp
scas
dec
leave
mov
inc
and
push
sbb
retf
scas
shr
sub
inc
aaa
mul
in
xor
xchg
inc
adc
mov
dec
or
in
sbb
in
adc
loopne
pop
mov
or
repnz
scas
xor
pop
dec
popf
mov
std
repz
stc
or
push
sbb
cwde
popf
mov
inc
xor
xor
pop
pop
or
adc
xor
out
lods
int3
adc
push
jbe
pop
clc
inc
sub
ret
adc
and
cmc
movs
xchg
lods
inc
adc
inc
and
gs
xchg
int
push
push
dec
mov
jo
movs
clc
sar
jbe
sbb
or
push
ja
stos
ja
popf
adc
push
cmp
inc
loopne
mov
dec
sub
jo
inc
dec
fist
out
scas
dec
sbb
idiv
sbb
mov
pop
pop
mov
gs
adc
xchg
xor
mov
dec
push
mov
dec
cs
leave
loopne
pushf
scas
aas
pop
cmp
cmp
sbb
cmp
add
pop
mov
mov
outs
inc
sub
adc
and
inc
pushf
xor
jae
dec
mov
mov
inc
sbb
cmp
nop
inc
pop
popf
outs
jmp
push
daa
rol
(bad)
or
shl
adc
inc
cli
enter
das
sbb
cld
pushf
jne
leave
leave
push
dec
xor
and
popa
adc
shl
iret
ins
mov
cmp
scas
ins
sbb
rol
jge
ins
mov
hlt
add
push
xlat
pop
cmp
jnp
or
sbb
nop
test
pop
mov
sahf
sub
and
mov
xchg
sbb
and
outs
scas
xor
push
test
fst
push
nop
xor
mov
xchg
sub
xchg
sahf
add
push
cs
stos
fadd
std
or
call
mov
cmp
into
sti
jle
dec
mov
in
mov
es
inc
xchg
jno
fisttp
in
je
aad
sub
sbb
sub
arpl
mov
in
pop
enter
dec
and
fs
gs
(bad)
mov
(bad)
js
fdiv
lods
mov
xor
cmp
push
out
loopne
rcr
jbe
gs
xchg
sub
or
call
add
iret
xchg
aaa
jbe
pop
cld
or
cmps
jle
(bad)
mov
mov
dec
jbe
retf
mov
(bad)
jo
test
dec
sub
outs
mov
inc
and
push
sbb
or
sahf
add
loope
adc
mov
cmp
int3
lods
jne
sub
mov
div
jl
repnz
push
pop
(bad)
pop
fcmovu
aas
xor
jns
stos
xlat
js
sbb
push
fsubr
push
lods
add
ins
and
mov
call
shl
cmp
jno
sbb
push
push
cli
mov
mov
add
popf
mov
lea
test
mov
pop
jmp
adc
movs
fcmovu
cmp
inc
dec
addr16
es
mov
and
fisttp
or
stos
inc
cmp
or
clc
push
fs
and
push
add
mov
jo
jge
sub
lods
popf
(bad)
aad
add
xor
dec
mov
ins
sub
ja
fwait
jl
jo
(bad)
js
sbb
mov
sbb
in
jecxz
jge
or
jecxz
xor
mov
or
add
jg
movs
mov
xor
push
push
mov
xchg
and
aaa
sti
push
scas
(bad)
idiv
and
setg
dec
scas
std
lds
pop
add
mov
in
cwde
xor
lods
dec
int3
push
mov
retf
bound
mov
mov
out
add
sbb
pop
jo
mov
lock
inc
cld
and
dec
sbb
aas
popa
jb
movs
adc
mov
and
jp
std
out
add
inc
mov
(bad)
(bad)
in
call
pop
or
outs
test
pusha
lsl
cmp
cmp
pop
mov
std
jl
stos
sub
and
dec
jo
jecxz
(bad)
dec
cli
mov
das
mov
ins
out
pop
cwde
mov
aas
mov
add
icebp
lea
push
mov
nop
jnp
loop
int
nop
inc
scas
shl
pop
push
xlat
or
xor
icebp
lods
imul
jbe
jnp
inc
push
loopne
mov
aas
movs
add
push
or
pop
adc
fdiv
sub
movs
xchg
mov
ja
test
retf
push
test
dec
push
shl
dec
inc
shr
dec
icebp
mov
adc
push
popf
or
std
test
pop
or
rcl
adc
adc
cmps
es
daa
jg
into
lods
or
dec
ins
jns
bound
(bad)
push
dec
cdq
pop
loopne
sbb
popf
stc
imul
jmp
rcr
pop
mov
(bad)
mov
int
out
(bad)
sti
and
inc
push
cld
aad
sub
pop
pop
(bad)
fs
xor
sub
loop
sub
mov
xor
sbb
ins
pusha
add
lods
movs
movs
imul
add
aaa
mov
inc
add
jl
rcr
leave
jbe
hlt
cmp
fidivr
jno
adc
xchg
or
inc
xchg
cmps
xor
nop
push
mov
mov
mov
and
mov
sub
ins
mov
or
mul
test
popf
mov
xor
in
lock
mov
cdq
fcmovnbe
fstp
loopne
add
push
jl
out
adc
inc
xor
mov
pop
enter
xor
retf
mov
(bad)
mov
les
mov
push
bnd
cs
fwait
pop
push
aaa
pop
(bad)
rcl
dec
ret
mov
es
out
scas
push
mov
movs
jge
adc
ror
and
jle
cmp
adc
lods
out
into
pop
out
iret
dec
dec
ins
jmp
movs
inc
jmp
popf
sbb
fsubr
test
lea
jno
mov
nop
imul
cs
std
aam
cmp
mov
xchg
cs
lahf
movs
cmp
dec
aas
cmp
mov
pop
xor
(bad)
dec
inc
addr16
int
fmul
std
sub
jmp
adc
test
stos
repnz
mov
dec
fld
addr16
ficomp
aad
sahf
cmp
sub
pop
into
sbb
jae
movs
inc
push
cwde
or
gs
cmp
or
cmp
movs
pop
hlt
inc
adc
jae
mov
mov
loope
inc
and
rol
pushf
mov
jl
stos
nop
jns
popa
aad
xchg
or
pop
jns
cmp
pop
rol
adc
pusha
push
(bad)
das
cdq
stos
rol
out
sub
xor
cdq
(bad)
clc
icebp
cmp
xchg
mov
arpl
mov
lea
cmps
cs
lds
pushf
jae
jmp
outs
fucomi
clc
mov
fld
push
sar
outs
add
loope
pop
xchg
pop
repz
xchg
fstp
add
xor
shl
mov
retf
(bad)
js
sub
dec
adc
push
inc
xor
mov
mov
ins
jnp
int
sbb
cmp
sub
or
shl
jo
fsub
mov
aas
jb
push
push
jp
std
fild
retf
ret
popa
mov
inc
jg
lods
into
gs
mov
aad
imul
leave
lahf
inc
jno
push
jb
dec
adc
cwde
xor
adc
out
pop
xchg
push
call
and
(bad)
and
sbb
fidivr
pop
adc
xchg
(bad)
mov
outs
fld
xchg
jae
mov
es
mov
movs
sub
sbb
xlat
lock
xor
popa
(bad)
aaa
xor
cdq
xchg
in
or
inc
or
movs
out
inc
xor
shl
xchg
or
je
push
sbb
sub
movs
(bad)
sahf
sbb
(bad)
fistp
sub
mov
rcl
xchg
adc
scas
push
mov
dec
xor
push
sub
in
add
xor
inc
cmp
cmp
cdq
pop
(bad)
js
test
mov
data16
pop
pop
add
shr
sti
imul
pop
jmp
cli
dec
call
pop
inc
repnz
mov
lahf
mov
cdq
imul
dec
and
mov
mov
pop
ret
cmp
out
adc
repnz
dec
sub
adc
daa
enter
and
xlat
push
sub
loope
adc
and
out
loope
pop
sub
neg
data16
daa
sub
mov
shr
rcr
sar
(bad)
mov
fs
pop
or
loop
pusha
mul
push
ins
pop
outs
repz
cwde
(bad)
push
shl
xchg
push
inc
dec
xchg
xor
in
jb
push
dec
in
xor
lea
les
mov
imul
mov
xor
and
sbb
test
mov
scas
xor
xchg
int3
retf
fld
test
jno
adc
loope
pop
xchg
sahf
dec
sti
pusha
inc
repz
jne
mov
mov
mov
lahf
adc
int3
in
mov
cmp
pusha
xchg
pushf
(bad)
xchg
in
popa
pop
call
imul
sbb
xchg
push
loop
nop
aad
dec
aaa
imul
mov
ins
shl
jbe
test
in
das
inc
push
mov
pop
push
mov
dec
mov
push
add
fdiv
sbb
push
out
inc
cmp
loope
inc
inc
outs
adc
or
rcl
jge
icebp
mov
dec
aam
pop
sti
nop
mov
inc
popa
cmp
mov
sub
mov
ja
lea
push
cmp
inc
and
arpl
call
shr
xchg
xor
sbb
add
xchg
(bad)
ins
les
jp
dec
out
out
xchg
nop
sub
mov
mov
popa
mov
jge
jno
call
jne
and
fistp
bound
push
test
imul
pop
lea
sub
adc
test
xchg
mov
nop
pop
(bad)
sub
retf
clc
aad
rcr
mov
fstp
mov
lods
fucom
xchg
(bad)
mov
popa
pop
cwde
and
call
and
stos
cld
je
lds
movs
daa
or
and
ss
in
xor
and
lds
dec
(bad)
pop
cwde
fcomip
lea
inc
xor
or
xlat
cmp
lods
ret
sbb
iret
inc
mul
adc
hlt
test
add
bound
fcmovb
and
pushf
adc
ja
cwde
dec
(bad)
outs
cmp
mov
jmp
xlat
(bad)
clc
mov
iret
fwait
jp
mov
jg
ins
dec
adc
das
mov
in
xchg
cmp
xor
enter
mov
nop
out
push
lods
test
leave
push
test
inc
cmp
lea
mov
jp
aaa
dec
push
retf
(bad)
outs
jmp
jl
jne
cmp
fisub
stos
mov
lods
add
out
dec
loope
dec
test
push
push
out
mov
dec
icebp
cli
adc
retf
pop
jmp
rcl
imul
add
jg
retf
out
fwait
push
jns
das
bound
movs
xchg
enter
cwde
mov
lods
pop
inc
sar
jo
in
ins
pop
leave
and
fistp
sub
bound
in
fsubrp
mov
int
fadd
adc
cld
cwde
mov
inc
(bad)
cmc
loope
pop
mov
pop
in
sar
mov
sbb
mov
dec
jp
mov
lods
fistp
stos
clc
into
mov
into
int
adc
(bad)
mov
aam
sbb
mov
std
in
jecxz
jge
enter
sbb
xor
in
int3
add
and
sub
mov
test
push
dec
and
call
hlt
mov
loopne
jmp
clc
xor
mov
out
enter
out
int3
lock
or
cli
dec
shr
adc
fst
cmp
retf
push
add
outs
mov
fwait
xor
pop
inc
pop
sahf
dec
sti
mov
outs
sbb
test
xchg
cdq
cmp
mov
and
xor
and
cmp
jge
jp
mov
fldenv
inc
inc
movs
aas
popa
ffreep
aas
out
fs
xor
and
call
jae
mov
mov
jmp
or
ins
push
imul
or
ss
ficom
imul
cmp
cmp
and
and
retf
lods
push
cmp
sti
ja
sbb
mov
mov
mov
mov
adc
and
(bad)
jne
mov
mov
or
xor
aad
fbstp
push
cld
mov
xor
mov
es
inc
sub
lds
mov
push
retf
pop
mov
ins
ror
sbb
or
pusha
jo
push
lods
add
cmps
add
mov
xchg
sub
add
xor
push
shl
dec
lods
stc
pop
inc
or
mov
mov
das
stos
sbb
pop
lds
enter
or
sahf
mov
les
fbld
pop
or
push
dec
mov
xchg
mov
out
je
in
mov
lods
(bad)
cmps
xchg
push
dec
sar
cli
push
in
and
mov
fist
pop
stos
int
inc
mov
pop
les
inc
addr16
jns
in
jno
sub
dec
mov
rcl
test
inc
fiadd
xlat
xchg
jge
mov
add
dec
leave
xchg
and
(bad)
cmp
dec
mov
mov
push
sub
inc
xor
push
cdq
inc
call
movs
stc
ret
mov
lea
test
(bad)
mov
(bad)
(bad)
movs
sbb
mov
mov
jl
mov
jmp
lods
sub
outs
xchg
mov
cwde
xchg
cmps
jmp
out
sbb
out
stc
ror
jne
and
jbe
retf
add
pusha
or
sti
clc
push
xor
jmp
jmp
jb
sub
daa
adc
js
push
pop
push
mov
out
xor
dec
xor
push
ss
xor
in
or
in
test
scas
sub
push
sbb
fisubr
sbb
xchg
out
imul
inc
xchg
aas
fistp
mov
sub
or
je
push
out
pop
jmp
xchg
cmps
mov
pushaw
and
ret
sti
retf
inc
xlat
cmp
sub
mov
sahf
addr16
scas
mov
adc
cmc
rol
ins
pop
scas
sbb
pop
cmps
cmp
popa
xchg
fcmovnu
ss
pop
cmp
xchg
sbb
lods
inc
jl
sbb
pushf
stc
mov
movs
mov
jb
inc
xchg
pop
cdq
mov
cli
push
stos
out
pop
scas
sti
fimul
xchg
mov
scas
add
out
div
xor
imul
mov
rol
adc
push
lods
lods
mov
lea
adc
cwde
(bad)
and
mov
out
arpl
pop
mov
dec
test
and
push
in
jmp
shl
shl
and
ins
retf
aad
cmp
inc
cmp
es
aaa
mov
fisttp
mov
stc
(bad)
call
xchg
shr
cmp
daa
and
pop
rcl
dec
inc
adc
mov
dec
icebp
and
sbb
and
fwait
repz
push
bound
adc
jae
lock
mov
test
scas
daa
mov
pop
add
dec
inc
in
or
pusha
push
sub
pop
jno
pusha
push
les
mov
test
add
push
iret
mov
or
xchg
sub
push
gs
or
daa
les
mov
fmulp
stos
bound
ss
imul
pmuludq
inc
xchg
inc
sbb
jmp
xor
pop
in
xchg
je
pop
(bad)
test
(bad)
mov
adc
stos
adc
fdiv
lock
icebp
push
fadd
and
sub
pop
or
jg
inc
aad
inc
mov
push
arpl
jmp
cmp
shr
cmp
js
out
mov
dec
scas
pushf
addr16
std
or
sub
push
cmp
sub
cmc
lahf
imul
nop
and
aas
push
push
and
mov
push
mov
push
pop
cmps
shl
cdq
dec
cmp
ins
jb
and
cmc
aam
aam
and
push
rol
pop
call
mov
nop
bound
cmc
test
dec
dec
push
xchg
xor
fild
and
mov
call
dec
pusha
sbb
fnstcw
dec
test
mov
stos
in
jge
mov
mov
cmp
adc
addr16
dec
push
xchg
inc
or
push
cmp
ins
mov
push
xchg
mov
jns
push
adc
push
cdq
aas
rep
or
loope
push
shl
and
mov
xchg
mov
retf
push
cld
mov
dec
push
sub
jecxz
mov
stos
inc
dec
hlt
pushf
push
int
xchg
inc
ror
push
jge
(bad)
lds
sti
std
push
add
dec
repnz
fsub
mov
ret
adc
mov
jbe
mov
push
or
xor
fadd
outs
add
mov
mov
scas
adc
xchg
cmp
mov
dec
es
sbb
stc
mov
shl
add
adc
lods
scas
push
shr
(bad)
jns
je
jl
cmp
dec
jnp
cmp
xchg
mov
addr16
call
(bad)
jo
jb
cmp
push
out
mov
mov
sar
xchg
int3
sub
lock
and
neg
mov
lds
lods
out
aam
call
shl
push
aas
sbb
xchg
xlat
inc
push
outs
or
push
mov
out
push
xchg
stos
push
call
call
stos
call
pop
jns
mov
push
and
push
repz
pop
mov
iret
jecxz
es
xor
or
int3
dec
sar
mov
bound
push
sub
or
mov
int3
inc
test
out
push
int
push
call
pop
jb
cmp
cld
test
rcr
jo
ds
(bad)
rcr
sbb
aam
push
sub
ins
fisubr
cmp
push
in
and
sub
xchg
or
xor
pop
movhlps
sbb
xchg
dec
movaps
ja
cmp
cs
jne
add
pop
test
add
dec
push
mov
mov
push
arpl
clc
stc
pop
jmp
shr
in
mov
push
add
push
pusha
cdq
(bad)
ror
aas
mov
push
inc
jle
jne
mov
out
ds
cmp
stos
ror
and
movs
inc
pop
xor
inc
or
sar
lea
dec
pop
lods
adc
in
and
test
sbb
add
and
xchg
or
xchg
or
in
ret
pusha
push
adc
cli
mov
xchg
mov
sub
xchg
mov
in
and
dec
mov
sbb
data16
push
pop
sbb
pop
sbb
lods
jecxz
push
cmc
into
in
push
jmp
jle
pop
push
mov
lods
data16
ror
push
jne
or
ins
lods
dec
test
adc
fadd
adc
sar
addr16
loope
xchg
sub
sahf
pushf
stos
fcomp
(bad)
arpl
adc
lea
addr16
add
xor
mov
xor
btc
xchg
push
push
jle
inc
das
inc
push
cmp
(bad)
rcr
push
mov
pop
fcmovb
add
mov
cmp
ds
add
inc
dec
clc
out
pop
sbb
or
inc
add
rol
xchg
bound
cdq
je
jo
xor
push
call
or
movs
dec
adc
and
repnz
pop
or
stc
mov
push
and
or
push
push
sbb
or
gs
les
loopne
add
mov
xchg
jo
ficomp
fdivr
push
mov
sub
stos
loope
rcl
retf
adc
cmp
dec
mov
stos
addr16
jecxz
in
sbb
fxch
aaa
movs
sti
bound
test
pop
and
mov
and
push
xor
or
jle
cmp
xchg
test
mov
js
aam
lock
loopne
cli
fs
jle
push
cmp
leave
mov
shl
arpl
jo
xor
cmp
repz
xor
(bad)
jmp
inc
xchg
bound
sbb
into
push
push
out
or
mov
test
inc
jecxz
lock
inc
mov
lea
mov
ficomp
movs
(bad)
adc
pop
xchg
add
fs
jne
movs
xor
sbb
or
retf
stos
in
push
inc
aaa
add
inc
push
test
jnp
jae
jb
icebp
mov
dec
add
and
shl
loope
jb
je
outs
std
mov
jmp
cli
or
or
inc
pop
pop
shl
xchg
ret
call
xor
mov
cs
xchg
push
(bad)
xor
dec
jbe
push
adc
sub
add
sbb
xchg
mov
mov
and
mov
ins
test
and
add
into
ret
rcl
gs
cld
imul
xchg
push
xchg
ja
repz
or
cmp
and
nop
jae
(bad)
lock
sbb
push
in
mov
call
dec
pusha
bound
hlt
sbb
das
jns
push
xchg
cmp
adc
cs
xor
jmp
in
fstp
test
mov
loopne
xor
sbb
call
and
mov
xor
scas
popa
jg
xor
ins
sahf
test
mov
out
dec
call
mov
adc
or
retf
sub
jl
jg
lea
test
and
add
xor
leave
push
adc
or
sar
ja
jmp
int3
adc
cmp
push
and
stos
inc
dec
pushf
jg
(bad)
mov
data16
loope
lds
add
push
pop
retf
out
ror
cwde
lock
loop
rcl
push
cs
push
xchg
push
or
popa
retf
fistp
pop
cmp
movs
out
cwde
int
outs
sti
sbb
movs
test
mov
icebp
sar
aam
or
out
cmp
pop
xchg
je
dec
dec
pop
pop
and
bound
push
int3
jnp
arpl
shr
mov
dec
das
adc
sbb
int
xor
or
(bad)
in
ins
ret
and
mov
das
sbb
mov
in
cli
jnp
ror
dec
clc
dec
adc
jmp
fbld
loopne
jae
(bad)
out
cwde
out
rcl
loop
outs
or
xlat
test
push
add
scas
out
ja
bound
sti
in
mov
mov
cmps
(bad)
or
ror
xchg
cdq
out
and
jb
jb
cwde
add
inc
xchg
call
sub
push
je
dec
xor
adc
test
jmp
xor
out
ret
xlat
(bad)
retf
xchg
mov
mov
xchg
imul
jbe
ficomp
sub
fisttp
mov
sar
scas
das
ins
jl
fmul
fs
push
pop
shl
sub
leave
push
ja
push
jge
pop
(bad)
fisttp
mov
shl
xor
fmul
out
in
jne
jle
dec
pop
cmp
mov
icebp
and
(bad)
mov
iret
scas
jns
pop
and
fcmovnb
lock
pop
cmp
aad
cmp
mov
add
push
not
jg
idiv
(bad)
data16
ja
push
sbb
das
cmps
xchg
or
aaa
ins
mov
out
movs
xor
test
or
mov
loopne
loop
add
pushf
push
adc
movs
and
pop
dec
lds
(bad)
addr16
xor
add
inc
stos
mov
imul
jmp
inc
jl
sbb
icebp
sbb
dec
(bad)
scas
jne
test
lahf
inc
push
int
loopne
pop
add
out
push
mov
out
mul
ficomp
call
repz
int
clc
mov
pop
out
mov
cdq
mov
into
mov
arpl
sub
(bad)
clts
aaa
inc
outs
daa
sbb
inc
mov
cwde
inc
cld
data16
loop
fstp
lds
xlat
outs
out
mov
in
mov
jl
cmp
sbb
push
mov
xor
je
scas
push
pusha
std
or
add
mov
pop
loope
(bad)
ja
or
out
mov
pop
lods
cld
(bad)
popa
fsub
pop
mov
inc
ins
xchg
mov
call
bound
imul
retf
push
out
mov
dec
cmp
jg
add
dec
push
jo
pop
pop
out
rcr
dec
jmp
mov
push
pop
push
icebp
cmps
sub
int3
jmp
pop
mov
ret
lock
aaa
sub
sub
sub
sbb
ja
or
push
push
cwde
or
push
push
inc
std
loope
or
unpcklps
rcl
mov
xor
xchg
lods
data16
(bad)
xor
fstp
push
xor
dec
xchg
(bad)
fs
jmp
test
and
enter
aam
jp
push
mov
add
int
xchg
cdq
and
adc
aad
push
aas
add
cli
xchg
fmul
fiadd
jecxz
adc
add
fmul
mov
and
daa
imul
xchg
rol
popf
pusha
jge
sbb
stos
in
movs
xor
dec
sub
cld
jmp
pop
and
adc
sub
aam
in
sbb
imul
popf
sahf
mov
xor
fld
imul
cmps
jecxz
pop
mov
shl
addr16
and
in
pop
mov
inc
xchg
hlt
ss
dec
repnz
xchg
mov
(bad)
xor
mov
sub
dec
pop
(bad)
xchg
xchg
fstp
loopne
mov
push
jmp
jge
(bad)
mov
retf
jo
or
add
push
dec
add
test
push
outs
test
inc
scas
push
gs
cwde
push
ror
inc
fidiv
in
or
jbe
test
or
jno
add
push
jle
push
int3
cdq
ret
repz
cmps
xchg
out
jo
and
das
call
add
fldenv
popf
(bad)
and
iret
dec
mov
push
mov
int3
loop
cdq
lea
imul
rcr
and
into
mov
mov
test
clc
dec
jo
adc
mov
push
clc
lahf
out
iret
scas
jne
pop
jmp
es
aad
int3
imul
mov
lock
fnstcw
add
adc
pop
arpl
ficomp
fisub
das
shl
push
jle
gs
pusha
add
out
cmp
mov
jb
out
cmc
scas
sbb
mov
dec
push
jae
fs
xchg
mov
cs
pop
dec
xor
xchg
pop
int
push
jo
dec
loope
sub
adc
mov
or
stos
enter
sub
xlat
cmp
sub
daa
jp
and
imul
add
int
xor
ret
cmps
jmp
inc
or
push
(bad)
cdq
lods
xor
test
jl
add
push
or
jb
daa
push
ds
ins
loope
in
push
ror
dec
mov
dec
add
icebp
clc
stc
fsubr
(bad)
out
sbb
push
xchg
cmp
jle
xlat
lds
xchg
fwait
xchg
xor
inc
pop
xor
pop
sahf
lahf
gs
ja
pushf
lds
stos
add
dec
or
adc
into
(bad)
push
imul
inc
fisub
mov
push
arpl
cmp
(bad)
lahf
push
adc
xchg
cmp
push
or
pusha
push
jmp
enter
daa
dec
sbb
loopne
cwde
sti
movs
xlat
fdiv
stos
pop
jmp
sbb
in
pop
nop
mov
and
enter
ss
push
mov
and
mov
jle
test
push
jp
fwait
or
icebp
fnsave
pop
enter
add
add
retf
jg
out
aaa
dec
push
shl
pop
dec
je
retf
fisttp
call
or
test
lahf
cmps
mov
lfs
in
sub
push
in
fwait
mov
enter
sbb
push
ja
or
(bad)
cld
lock
jmp
pshufw
cmp
pop
push
push
pushf
in
cmp
dec
iret
and
dec
inc
stos
mov
cmp
push
jge
mov
or
pushf
and
out
dec
cwde
fadd
dec
jge
mov
cmp
loop
pop
cmp
call
jbe
pushf
imul
or
ds
das
fwait
in
adc
mov
or
arpl
sti
enter
sub
cli
outs
cmc
sub
(bad)
jbe
mov
sahf
(bad)
mov
or
fwait
das
jae
xlat
iret
(bad)
cmp
mov
jecxz
sbb
push
call
xlat
sbb
mov
mov
mov
adc
sahf
push
stos
cmp
aam
cmp
and
mov
outs
daa
adc
shl
call
mov
or
cmc
push
xor
fwait
mov
popa
mov
xchg
add
inc
in
and
fbld
test
out
stos
das
lahf
fs
repnz
jnp
cmps
das
fwait
or
stos
nop
push
icebp
and
push
add
loop
mov
hlt
xchg
mov
stc
scas
mov
jl
pop
pop
iret
push
fsubr
lods
and
jp
push
int
leave
push
push
jle
xor
imul
sti
fdivr
lahf
and
jnp
mov
cmp
mov
sbb
imul
xchg
xor
adc
xlat
inc
stos
shl
and
xor
out
shl
xor
xor
and
stos
add
sbb
mov
mov
loopne
lods
mov
jmp
or
dec
inc
les
xchg
popa
sub
mul
and
pop
dec
pop
pop
leave
dec
mov
push
fbstp
shr
std
xor
test
pop
push
or
ins
aad
repnz
push
fwait
jle
push
fidiv
push
(bad)
outs
sbb
sbb
std
add
neg
mov
mov
loop
test
dec
cmp
out
sbb
dec
(bad)
stc
pop
outs
xor
mov
cmp
pop
mov
dec
inc
(bad)
jmp
mov
movs
jae
xor
mov
aas
mov
movs
jne
jmp
or
sbb
xor
jmp
into
neg
jge
dec
push
cmps
pop
jp
inc
aaa
hlt
imul
jg
cwde
add
scas
adc
add
mov
and
pusha
push
mov
cmc
push
sbb
aaa
rol
test
(bad)
dec
xor
add
ins
daa
ja
lahf
int3
add
adc
lods
ret
movs
and
aaa
jbe
test
cmp
pop
xchg
mov
in
add
pop
fwait
(bad)
repnz
adc
cli
loope
icebp
inc
ja
loop
xchg
sahf
lahf
sbb
int3
clc
mov
pop
jmp
pop
imul
cmp
(bad)
gs
inc
das
cmp
fild
add
lock
lea
cmp
test
movs
daa
pop
dec
mov
out
cli
popf
(bad)
jle
out
(bad)
scas
ja
or
jnp
aam
call
dec
push
neg
cmp
mov
and
mov
aaa
or
inc
stos
jecxz
test
jl
test
in
mov
retf
fidivr
lock
mov
icebp
mov
add
jbe
sbb
mov
and
sub
stos
in
or
pop
pop
(bad)
ins
mov
movs
and
pop
bts
dec
or
inc
push
jne
nop
and
push
loopne
repz
lods
test
hlt
arpl
aam
jmp
pusha
jg
sbb
sbb
jge
sbb
stos
mov
cmp
(bad)
jle
adc
inc
nop
leave
imul
jae
sub
or
adc
jmp
mov
and
addr16
stc
mov
mov
mov
push
push
push
pushf
cmp
js
(bad)
cmp
dec
call
mov
lods
xchg
sar
fisubr
cli
ja
jno
dec
xor
stc
sub
add
adc
dec
inc
sub
retf
or
push
xchg
pop
outs
adc
scas
movs
sbb
push
mov
rol
cmps
adc
jge
xor
xchg
cld
in
in
popa
sbb
jo
pop
inc
(bad)
sbb
(bad)
repnz
or
and
ffreep
in
xor
(bad)
mov
dec
push
mov
xchg
retf
or
sbb
xor
cmp
mov
xchg
cmp
mov
arpl
inc
xchg
leave
sub
fild
scas
ret
test
in
push
xor
sub
stc
fwait
cli
loop
sub
enter
pop
jmp
sub
loop
pop
xor
mov
mov
jl
(bad)
nop
loop
enter
jnp
mov
pop
inc
xchg
pop
outs
jbe
push
cmp
xor
hlt
sbb
adc
adc
fisttp
dec
mov
mov
int3
cmp
jbe
pushf
dec
cld
sbb
int
fcom
mov
jns
push
dec
pop
cdq
mov
scas
in
push
xchg
and
mov
jp
mov
pop
add
add
loope
(bad)
in
cmc
imul
mov
add
jecxz
xor
or
(bad)
fnstcw
inc
cwde
ffree
loop
inc
scas
xchg
mov
mov
sub
outs
sub
aaa
and
mov
stc
fwait
mov
(bad)
retf
sub
out
dec
fld
clc
lock
mov
dec
ret
ret
mov
popa
push
adc
pop
inc
pop
cmp
pop
sbb
pop
sub
sub
mov
mov
fcomip
xchg
pop
sti
cmc
aas
data16
push
lds
ret
ins
or
fdiv
pop
pop
mov
fdiv
or
pusha
add
fadd
xor
or
dec
stos
sbb
fwait
jns
shl
push
mov
lahf
jb
dec
test
xor
icebp
jge
movs
jb
jecxz
dec
pop
add
loop
pop
pop
mov
mov
cmp
inc
pop
xor
cmc
pushf
inc
mov
scas
mov
stos
dec
add
pop
(bad)
ins
jmp
test
sar
imul
call
std
jnp
je
jecxz
and
loop
add
ins
addr16
mov
mov
xchg
mov
enter
sub
scas
ss
loop
cmp
mov
imul
dec
push
addr16
cmp
shl
fld
test
retf
dec
adc
cmp
popa
imul
(bad)
lods
push
sbb
push
(bad)
pop
pop
and
bound
shr
dec
adc
mov
jnp
pop
xchg
xchg
push
stos
push
push
sub
in
(bad)
push
bound
fmul
ja
jns
adc
sar
xchg
cmc
out
jmp
pop
jns
(bad)
std
mov
adc
clc
and
sub
jecxz
xor
arpl
retf
push
leave
jmp
fnstenv
ins
sar
int3
sbb
dec
ret
adc
and
push
cmps
mov
icebp
and
arpl
push
sbb
into
mov
retf
xchg
lock
sysret
call
test
ds
xor
jmp
enter
and
shr
xor
leave
enter
xlat
push
stc
fstp
pop
ss
cs
mov
retf
ficomp
out
pop
jns
mov
push
sbb
inc
pusha
mul
sub
cli
sub
dec
jno
iret
enter
push
and
or
das
data16
pop
cmp
pop
mov
push
xor
fwait
push
inc
pop
mov
mov
cld
enter
mov
jb
add
sub
and
sub
ss
fsub
mov
pusha
jb
jmpw
cmps
fdivr
mov
pusha
dec
push
xor
icebp
xor
popa
fdiv
ror
mov
push
xchg
dec
repnz
sbb
setle
cmps
in
loop
add
cld
push
mov
(bad)
xchg
shr
mov
dec
ret
pop
xor
add
cmp
jp
jb
dec
push
out
pop
test
mov
arpl
sbb
out
add
inc
or
imul
mov
sete
je
jb
hlt
test
das
out
fstp
movs
ror
sub
sub
test
movs
(bad)
idiv
out
xchg
mov
cmp
push
mov
test
xor
or
out
das
add
push
lods
push
mov
int3
jbe
(bad)
dec
aam
movs
push
call
mov
xchg
dec
fucomip
pop
std
add
repz
mov
cld
in
inc
imul
or
mov
adc
adc
dec
outs
pop
sbb
repz
push
hlt
xor
loop
push
mov
jle
jmp
das
ins
mov
je
jmp
test
mov
push
call
data16
cmp
es
xor
dec
mov
sub
inc
inc
push
cmp
hlt
xchg
je
fsubr
or
rol
xor
mov
fcmovb
and
cld
rcr
ret
mov
push
dec
loope
mov
ins
fsubr
dec
out
test
inc
stos
popf
cmc
add
adc
mov
or
ret
jae
push
xchg
sbb
imul
xor
and
inc
loopne
in
fsubr
add
xchg
cli
int
rcr
psraw
dec
xor
cmp
and
and
or
adc
fnsave
mov
xor
(bad)
cmp
aad
and
and
gs
mov
adc
sub
inc
or
or
add
(bad)
or
inc
aad
bound
mov
frstor
sbb
ror
fistp
std
push
sbb
push
inc
lea
pop
dec
and
iret
xchg
mov
cmp
jns
sbb
inc
add
mov
retf
pop
fs
(bad)
icebp
arpl
push
jnp
stc
into
push
xchg
mov
lods
add
and
or
mov
cmps
mov
fild
movs
pop
pusha
pop
lahf
movs
inc
loop
add
xchg
pop
mov
push
push
idiv
dec
pop
or
leave
and
ficomp
rcr
imul
pop
(bad)
retf
inc
add
push
sbb
cmp
rcl
mov
movs
pusha
mov
sti
and
mov
loope
(bad)
repnz
cmp
pop
fcomip
adc
inc
xchg
inc
hlt
xchg
mov
xor
out
sbb
jne
cmp
sbb
dec
icebp
xlat
jmp
je
pop
mov
cmc
rcr
shr
dec
inc
ret
mov
or
push
mov
das
jg
xchg
lods
push
mov
popf
lahf
add
movs
mov
xor
or
cmps
add
mov
push
cli
push
push
scas
mov
inc
mov
cmp
cmps
push
xor
adc
outs
mov
iret
retf
mov
lds
dec
in
sbb
jno
mov
mov
add
jp
popf
xchg
pop
ss
adc
jmp
(bad)
lds
ret
jl
dec
fsubrp
lahf
mov
js
cld
xchg
push
(bad)
jg
add
xor
sahf
add
adc
in
stos
aad
sbb
std
dec
dec
mov
add
xchg
xchg
jge
add
jmp
ret
test
and
mov
mov
fcomp
loop
adc
cmp
fstp
rcl
mov
int
(bad)
dec
movs
push
push
movs
or
cmp
or
dec
or
repz
sub
dec
sbb
(bad)
leave
fstp
xchg
cmp
stc
cmp
fmul
dec
loopne
div
inc
sbb
cmps
xchg
jg
mov
test
push
push
add
cmps
xor
movs
dec
sbb
aam
cli
xchg
stc
cmps
cmc
retf
push
sti
addr16
test
inc
and
ins
xor
push
mov
pop
je
dec
daa
xor
push
mov
inc
shr
mov
xchg
lock
out
push
es
push
cld
(bad)
mov
sbb
iret
shr
sub
mov
outs
pop
pop
mov
jg
cmp
mov
(bad)
and
aad
pop
cld
dec
test
lahf
add
or
jne
mov
pop
jecxz
fnsave
add
nop
sub
xchg
test
add
call
leave
pop
mov
cmp
sbb
lods
inc
ins
out
cdq
fstp
bound
arpl
or
jo
and
push
push
dec
in
and
ja
push
mov
xor
scas
jne
es
fistp
icebp
push
fdivrp
mov
xlat
pop
xor
jecxz
push
mov
sbb
add
push
stos
ds
add
push
lock
jo
loopne
mov
inc
pop
std
jmp
aas
(bad)
sub
jb
xlat
adc
sbb
adc
scas
adc
jnp
xor
dec
std
sub
dec
mov
push
push
push
sub
shl
xor
pop
cmp
das
int3
and
dec
pop
add
hlt
jno
lea
xchg
xchg
sub
pop
sbb
mov
ja
retf
push
inc
adc
mov
fimul
clc
js
imul
call
pushf
cmp
xchg
rcl
cmp
mov
push
(bad)
fcom
add
ins
stc
adc
add
xor
add
push
or
icebp
popa
mov
push
xchg
inc
or
mov
movhps
add
mov
arpl
mov
inc
sub
seto
lods
xor
adc
jbe
mov
xor
or
mov
xchg
inc
hlt
shl
or
lods
sub
ss
mov
and
mov
es
push
retf
sub
add
sub
xor
out
in
cmp
loope
xchg
mov
stos
call
mov
repnz
frstor
jle
xor
pop
pop
enter
pop
pusha
loop
mov
into
jg
push
and
mov
dec
push
es
jmp
and
add
xor
mov
mov
loope
push
inc
mov
jl
or
sbb
loop
ja
mov
and
jnp
pop
mov
sub
in
fnstenv
inc
fst
xchg
xchg
adc
sbb
inc
pushf
daa
test
mov
not
mov
lahf
stos
adc
jecxz
mov
jbe
cmp
in
dec
mov
xchg
test
dec
imul
and
push
dec
out
mov
cmp
adc
daa
popa
fld
lahf
mov
aas
push
or
int3
add
push
int3
lahf
ja
jo
out
jge
fidiv
ret
jp
sbb
push
out
outs
fs
or
outs
mov
pop
ds
out
clc
push
fcom
gs
clc
in
in
pop
xchg
je
imul
sbb
jns
stos
gs
push
sbb
loop
sbb
ret
fsubrp
fcom
mov
dec
arpl
test
push
stos
pop
or
dec
or
ins
push
pop
add
inc
mov
imul
xor
inc
xchg
movs
sbb
es
and
mov
or
pop
pop
sub
sahf
inc
fcomip
add
cmp
mov
faddp
rol
xchg
mov
lock
sub
pop
adc
jne
repz
jecxz
in
fimul
pop
loop
into
jle
pop
sub
sub
mov
call
sbb
push
xchg
retf
(bad)
adc
pop
add
imul
fimul
xlat
cli
push
dec
sbb
add
idiv
sbb
imul
call
int3
dec
or
sub
cmps
mov
xchg
cmps
paddusw
(bad)
loop
shr
pop
pushf
(bad)
lock
fmul
jg
and
jp
loopne
and
fbld
or
ret
lods
std
mov
dec
sbb
jb
in
out
ins
cmps
mov
and
fimul
sub
ret
xlat
mov
add
movs
fcomp
gs
sub
pop
ja
pop
mov
sbb
sbb
repz
test
ja
add
stos
jbe
dec
xor
add
imul
xor
std
push
inc
or
pop
add
add
(bad)
scas
cmp
jbe
pusha
adc
xchg
outs
je
rcl
fst
int
in
adc
in
mov
mov
pushf
cmp
stos
pop
mov
push
pop
mov
imul
sbb
inc
cmps
pop
ds
mov
ret
pop
rcl
ins
out
sub
sbb
rol
xor
mov
lods
scas
mov
add
cwde
mov
mov
xchg
jp
retf
inc
js
retf
sbb
mov
into
add
pop
fst
dec
sub
inc
clc
pop
call
inc
out
sbb
and
adc
sub
cli
or
(bad)
adc
inc
push
jmp
inc
adc
fnstsw
pop
mov
lahf
add
gs
call
mov
push
mov
and
xor
sub
pop
iret
not
pop
in
add
retf
xchg
add
dec
lock
mov
cli
je
std
xchg
clc
cmp
fsub
retf
inc
lock
ret
in
push
ins
cmp
js
int3
pusha
mov
ret
push
adc
fdivr
pop
sub
sub
mov
cmp
(bad)
retf
jl
mov
ss
ins
dec
ds
add
mov
jle
out
jno
clc
pop
push
xchg
sub
cmp
jnp
in
stos
dec
xchg
stc
inc
cmp
ret
pusha
sub
jne
daa
daa
inc
pop
and
sar
mov
lods
int
sbb
mov
mov
in
xor
or
aaa
inc
xor
lea
or
int
(bad)
fisttp
cld
cmp
idiv
int
push
dec
sub
cmp
iret
neg
and
lock
lock
push
in
xchg
pop
cmps
(bad)
push
call
outs
popa
pop
cmc
push
repnz
(bad)
mov
call
jne
push
inc
(bad)
out
sub
das
xchg
das
(bad)
addr16
or
add
js
and
jae
xchg
sub
push
xchg
or
sbb
mov
xchg
ret
push
(bad)
mov
sbb
into
scas
push
or
sbb
addr16
test
outs
adc
outs
into
xchg
and
xlat
dec
out
jg
mov
pusha
in
push
dec
inc
cmp
ret
and
cld
inc
clc
pusha
pop
jecxz
push
adc
test
inc
add
pop
or
aas
in
js
dec
mov
movs
mov
out
push
xor
and
stc
js
ds
cld
iret
mov
cmp
mov
add
(bad)
cli
and
sbb
imul
sub
sti
and
jecxz
xchg
test
int3
and
xor
call
mov
je
dec
icebp
fwait
int
xor
sbb
and
inc
jno
(bad)
and
sub
pop
mov
inc
or
ret
jge
(bad)
dec
rol
test
mov
imul
xor
jne
fabs
into
lock
push
pop
sub
and
or
scas
pop
mov
xchg
mov
jne
dec
add
adc
adc
loop
scas
inc
mov
pop
cmps
jae
push
or
sub
test
clc
stos
mov
xchg
sets
or
jg
mov
fistp
dec
test
movs
xor
dec
sub
mov
and
adc
cld
das
(bad)
sbb
in
or
inc
clc
push
cmps
ret
xlat
(bad)
push
cmps
(bad)
or
cmp
les
dec
or
jp
xor
je
sar
push
jge
mov
mov
dec
and
repnz
mov
and
xor
adc
in
movs
jno
dec
(bad)
sub
test
or
outs
push
dec
xchg
test
stc
jb
adc
sar
lods
jo
mov
jae
sbb
test
or
mov
loope
das
and
bound
lahf
out
cmp
cmp
repz
idiv
lods
aaa
fidivr
ds
lods
mov
out
icebp
test
lds
rcl
bound
push
mov
mov
ds
sbb
pop
fwait
in
cmp
xchg
pop
scas
lea
int
out
ja
jne
addr16
inc
out
jg
(bad)
(bad)
jns
jecxz
mov
pop
or
jecxz
stc
es
add
dec
jp
ret
lods
clc
sti
rcl
(bad)
sti
mov
fstp
daa
adc
adc
jae
xchg
das
(bad)
(bad)
mov
sbb
cmps
aam
js
ja
mov
pop
cmp
mov
or
jl
and
xor
mov
pop
sbb
cmps
push
xlat
push
jmp
pop
repz
mov
mov
nop
clc
(bad)
jecxz
adc
daa
xchg
cld
icebp
mov
div
loopne
icebp
ins
sub
jle
lds
je
out
mov
sar
jmp
in
imul
popf
scas
aaa
push
cmp
jnp
punpckhdq
cmp
adc
sahf
inc
idiv
call
repnz
mov
or
jbe
and
inc
jp
jne
aad
dec
ret
std
jmp
mov
int
jmp
xor
xchg
or
or
cmps
fidiv
dec
test
stos
adc
stc
bound
imul
mov
mov
adc
mov
mov
mov
ins
test
sub
es
adc
adc
xchg
mov
push
movs
bound
jmp
in
push
fcmovb
mov
es
into
cs
ds
inc
jg
cmp
mov
(bad)
sub
stos
shl
lahf
lods
pop
aam
cs
scas
inc
aaa
mov
xor
cwde
repz
outs
repz
ret
mov
push
push
mov
xchg
lds
sub
out
in
lahf
ror
test
jbe
in
fucom
shl
and
lds
rcr
and
adc
jge
cmp
ins
clc
jg
in
xchg
dec
dec
div
or
cmp
mov
and
icebp
aam
xchg
xchg
into
fistp
test
ja
inc
dec
sbb
inc
mov
add
adc
jmp
out
xchg
fucompp
dec
adc
push
pop
push
xor
iret
cmps
push
push
or
aaa
sbb
sub
sbb
pop
outs
push
push
lods
mov
sub
fs
push
xor
movs
jmp
push
xchg
mov
pop
cmp
cmp
das
sbb
dec
mov
ficom
mov
xchg
xchg
(bad)
push
cld
scas
mov
nop
dec
adc
push
rol
pop
pop
push
std
jae
push
test
ds
add
arpl
push
or
leave
sti
loopne
in
daa
mov
nop
jmp
adc
sub
fsub
shr
or
jecxz
cmps
fldcw
in
sub
sar
outs
mov
mov
popf
cmps
in
jmp
cmp
fimul
(bad)
loope
shr
lock
adc
or
lods
out
lea
in
test
pop
fsubr
add
mov
aad
aas
push
push
retf
loop
test
in
sbb
lock
ja
stc
clc
call
jns
lods
mov
aas
or
cs
das
xchg
adc
out
fidivr
pop
push
popa
xor
aam
scas
dec
loop
jo
lds
or
inc
xchg
out
adc
and
js
xor
mov
pop
add
mov
sub
call
ds
std
retf
or
lods
add
data16
sti
les
xor
xchg
push
inc
ins
repz
dec
outs
push
ret
mov
fnstsw
pavgw
fsubr
retf
jnp
stc
outs
adc
xchg
xchg
xor
push
pop
pop
test
lea
add
pop
aad
imul
push
in
cmp
les
loop
sti
stos
pop
imul
bound
scas
push
retf
lods
sub
push
aaa
aas
and
sbb
pop
pop
push
sbb
and
mov
data16
rcl
sbb
cmps
je
sar
jnp
inc
ja
xchg
or
loop
adc
xchg
inc
pop
jge
aas
aad
rcl
jmp
lods
fcom
inc
mov
mov
mov
push
sub
mov
xchg
xor
xchg
or
push
pushf
jle
les
or
cmp
push
xchg
dec
push
movs
mov
xor
push
inc
ret
ins
mov
fadd
push
and
scas
inc
add
shl
sbb
ja
mul
adc
and
jne
sub
mov
dec
xor
ja
or
(bad)
fsqrt
stos
in
pop
int
mov
test
and
add
inc
jmp
cmc
cs
lods
jecxz
dec
mov
test
loope
jno
push
fcmovb
inc
cwde
fdivr
repnz
push
mov
mov
or
(bad)
gs
sbb
push
enter
jnp
inc
cmps
push
mov
sahf
pushf
dec
push
push
and
mov
dec
dec
(bad)
adc
jnp
loopne
sub
mov
xor
mov
xor
and
(bad)
jbe
out
cmps
and
push
(bad)
pop
fisubr
add
sbb
jnp
xchg
dec
push
fwait
test
cmp
xor
(bad)
jmp
xchg
loop
sti
push
fild
scas
vpsubb
inc
add
test
or
pop
dec
pop
or
outs
push
pop
mov
arpl
xor
das
and
das
mov
cmps
add
daa
xchg
scas
mov
popf
in
jl
cli
shl
enter
jno
pop
inc
pop
push
aam
mov
dec
push
aad
jne
addr16
(bad)
in
popa
inc
add
neg
out
push
xchg
push
xor
sbb
add
sahf
mov
pop
and
mov
rcl
push
inc
mov
inc
dec
push
xlat
mov
(bad)
sub
lea
xchg
jge
hlt
mov
mov
xchg
es
inc
clc
shl
pop
add
cmps
ss
outs
imul
(bad)
sar
jb
aad
pusha
xor
dec
push
jns
push
inc
push
ss
mov
mov
or
xor
aas
(bad)
pop
out
adc
mov
push
rcr
test
loopne
movs
mov
push
test
cwde
out
arpl
int
dec
das
lds
pop
jbe
xchg
mov
mov
repnz
ret
sbb
add
les
sub
loop
pushf
movs
mov
js
ss
pop
(bad)
ss
xchg
shr
lods
jmp
mov
fwait
sti
pop
inc
xlat
popf
ja
pop
enter
push
push
lock
pop
mov
stos
fist
inc
pop
sti
arpl
icebp
dec
cdq
jo
add
mov
inc
(bad)
mov
shr
sbb
add
adc
xchg
f2xm1
fdivr
pushf
add
test
pop
leave
mov
inc
test
pop
push
(bad)
(bad)
mov
jb
sbb
mov
or
jle
mov
dec
ss
outs
dec
fdiv
xor
mov
xor
hlt
mov
xchg
jecxz
jge
pushf
or
jmp
(bad)
inc
push
cli
clc
es
and
cmp
mov
jne
nop
pushf
mov
das
adc
mov
sahf
sub
data16
popa
shr
out
xor
mov
push
add
fisubr
sbb
pop
ss
cmp
xadd
(bad)
mov
rcr
lea
repnz
xor
mov
and
jo
jae
clc
and
or
push
mov
cmp
inc
xlat
add
inc
not
test
fist
inc
mov
mov
jae
ret
push
std
lea
call
jnp
cmps
lahf
mov
(bad)
mov
ficom
in
mov
adc
pop
jo
das
dec
clc
adc
shl
xchg
js
in
sahf
push
xchg
outs
xor
sub
mov
mov
xchg
sub
push
push
inc
mov
lock
sbb
cmp
mov
sub
adc
or
and
xchg
mov
cmp
mov
push
das
mov
or
inc
sub
iret
stos
add
sti
xor
shl
and
jo
(bad)
in
or
inc
ins
dec
cmp
dec
bound
loope
jae
(bad)
fild
pop
jns
icebp
sti
add
call
(bad)
mov
imul
xchg
mov
aaa
jnp
test
idiv
mov
rcr
shr
aad
push
mov
sbb
pop
test
aas
xor
mov
inc
and
fstp
(bad)
sbb
pop
pop
outs
aas
mov
das
jl
repz
rcr
das
in
inc
aad
(bad)
sub
adc
int
xor
add
sbb
arpl
(bad)
or
push
jne
cli
repz
sbb
or
or
push
data16
or
mov
push
loopne
aam
mov
inc
and
add
adc
in
mov
pop
out
and
add
cwde
sbb
mov
enter
xor
jnp
mov
jo
mov
jecxz
shr
pop
jns
inc
and
push
cmp
ins
add
adc
popf
or
mov
xor
dec
xchg
mov
inc
xor
dec
aaa
mov
sbb
mov
and
mov
push
xchg
inc
jns
xchg
push
js
test
push
clc
int3
(bad)
test
bnd
jge
je
sbb
clc
adc
iret
or
nop
(bad)
ins
xchg
test
mul
cmp
adc
xor
jno
cwde
rcr
mov
push
faddp
xor
or
stos
or
out
lods
mov
sahf
dec
mov
inc
and
xor
pop
in
loope
mov
mov
stc
fsubr
mov
xor
jg
adc
test
shl
mov
clc
xor
or
xor
mov
aaa
inc
sub
cli
cmp
xor
loopne
jle
addr16
mov
xor
cs
sar
pop
mov
daa
mov
or
cmp
and
and
std
out
dec
mov
leave
(bad)
pusha
outs
mov
pop
sub
inc
ds
imul
aas
stc
jecxz
push
mov
adc
dec
push
lods
aad
mov
bound
sbb
cs
sub
shr
or
add
mov
ins
call
cmp
je
push
hlt
xchg
loop
pushf
aas
aad
aad
movs
cmp
(bad)
adc
fdiv
adc
jge
out
mov
adc
push
ins
out
jle
dec
xor
or
sub
iret
mov
and
movs
fwait
call
aam
sub
cmp
fsubr
gs
ficom
pop
cld
xlat
movs
mov
rcl
adc
sub
jno
push
push
adc
xor
mov
cmc
ins
test
add
push
mov
loope
jo
in
or
in
cmp
adc
xchg
cmps
scas
dec
and
lock
outs
push
jmp
int
add
jmp
jecxz
mov
lds
jb
aas
clc
cs
ins
dec
std
fidiv
pop
sbb
lds
mov
or
outs
sub
sbb
lea
enter
sahf
test
loop
popa
jne
sbb
inc
test
sbb
adc
popa
xchg
ins
loope
mov
jmp
retf
lods
xchg
int3
jp
jmp
add
ins
xchg
fistp
imul
dec
mov
push
cmp
js
stos
jp
jne
sbb
ret
or
adc
dec
std
mov
hlt
test
xchg
enter
pusha
cwde
lahf
adc
scas
sbb
jecxz
fs
adc
popf
call
repz
mov
fwait
and
ds
mov
int3
bound
fwait
adc
cli
mov
test
(bad)
stos
or
in
push
jo
leave
jl
xchg
inc
inc
in
push
cmc
jbe
adc
xchg
mov
(bad)
xchg
push
hlt
(bad)
aad
jmp
fidiv
inc
or
mov
push
mov
loop
and
or
pop
cmp
inc
nop
jns
sbb
in
ja
repnz
push
inc
lds
adc
(bad)
or
sar
push
int
aaa
mov
jb
cli
rcr
jns
jle
pusha
fstp
daa
jl
(bad)
mov
inc
cmp
xor
loope
cmp
push
pop
les
push
fnsave
inc
sahf
adc
(bad)
imul
and
push
ds
push
jecxz
push
loope
daa
jle
lahf
jns
pop
cld
sbb
add
je
loope
popa
retf
mov
xchg
adc
adc
movs
mov
(bad)
xchg
adc
cmp
loop
jge
sub
jle
cld
mov
ds
cmp
fld
addr16
rcl
test
shl
aaa
popa
xlat
cmp
gs
fsub
mov
lds
outs
je
test
popa
mov
cld
sub
sub
push
fnstenv
push
dec
jecxz
add
cdq
mov
fist
(bad)
loopne
adc
in
out
push
lock
lock
aas
jns
jns
stc
xlat
out
add
xchg
inc
int
adc
jl
pushf
mov
sti
cmp
add
xchg
sar
add
sub
mov
cld
lahf
and
scas
and
imul
dec
retf
popa
xchg
cmc
dec
xchg
pop
cmc
retf
xchg
push
(bad)
outs
movs
jo
pop
in
ja
mov
rcr
jb
mov
inc
push
ret
rcr
pop
jle
cmp
imul
retf
jl
lods
in
dec
sbb
imul
rcl
mov
lea
imul
push
xor
push
xchg
ss
dec
jp
movs
gs
test
sub
mov
std
fdivr
sahf
in
push
call
inc
mov
mov
sbb
mov
ss
and
push
gs
fisubr
jb
into
bound
test
sub
mov
mov
jge
mov
cmp
(bad)
push
test
pop
mov
jle
popf
add
sub
jne
test
loope
loopne
repnz
cs
out
neg
or
pushw
mov
xchg
shr
adc
pushf
leave
shl
mov
loope
(bad)
sub
sbb
mov
out
mov
add
push
and
pop
cli
sbb
add
mov
mov
cmc
loope
jmp
(bad)
jg
in
jge
mov
inc
and
out
in
xchg
xchg
dec
sub
inc
mov
dec
mov
cdq
xchg
aas
xchg
jbe
inc
cdq
rcl
mov
ret
sub
popf
(bad)
std
jns
sar
cmp
std
cmp
fldcw
xor
pop
test
mov
xor
iret
xchg
sar
(bad)
pop
add
imul
push
jo
mov
pop
data16
cmp
xor
cmp
jmp
dec
test
repz
xchg
fnsave
inc
imul
aas
adc
int3
loop
les
shl
into
int3
ret
outs
cwde
out
mov
pop
in
dec
cmp
jno
ins
adc
add
mov
mov
scas
mov
mov
pop
cli
xchg
pop
cmp
out
inc
add
jl
ss
fisttp
hlt
xchg
mov
and
call
scas
adc
push
mov
ins
ret
movs
cld
imul
xchg
mov
jae
jne
add
ror
mov
mov
xor
and
(bad)
sub
(bad)
xchg
dec
outs
push
pushf
cmp
mov
movsx
int3
mov
(bad)
pop
pop
mov
(bad)
mov
adc
or
in
inc
(bad)
inc
inc
pop
lock
or
xor
cmp
mov
xchg
neg
pushf
repnz
pop
ret
ins
in
dec
lods
mov
enter
sub
xchg
iret
push
mov
ins
dec
or
add
inc
mov
cwde
lahf
fldcw
inc
xor
(bad)
fnstcw
cmps
movs
aaa
lods
data16
pop
cmp
mov
dec
aam
push
xchg
(bad)
js
dec
and
push
sbb
add
push
call
lods
or
sub
add
addr16
in
pop
push
push
mov
test
xor
mov
jmp
push
arpl
ds
scas
js
pop
dec
jmp
sbb
jae
not
inc
xor
and
sbb
adc
adc
in
call
push
(bad)
and
xchg
imul
pop
enter
push
mov
mov
retf
ret
jg
into
push
dec
jg
mov
pusha
xor
fidiv
or
sbb
shl
lods
dec
pushw
fsub
retf
mov
mov
xor
mov
sub
fsubr
inc
add
sbb
mov
es
popf
idiv
bnd
add
push
jbe
sub
dec
leave
rol
int3
sbb
dec
and
outs
jne
das
pop
add
dec
mov
jmp
cmp
in
push
pop
pop
xor
xor
xchg
cmp
push
mov
fdiv
push
or
lea
fistp
test
loope
jp
imul
dec
aam
or
cmps
xor
xor
ins
pusha
lea
sti
and
popa
cdq
sub
bound
retf
add
dec
fwait
outs
mov
and
or
cs
mov
movs
dec
lahf
adc
push
mul
mov
and
push
or
sahf
mov
leave
call
sub
test
jl
outs
cmps
add
lock
jbe
lea
inc
das
retf
fisubr
pop
dec
mov
es
fadd
and
shl
loopne
mov
xor
dec
imul
mov
cld
movs
sub
push
dec
cmc
es
sbb
icebp
test
or
inc
dec
aaa
mov
dec
add
add
xor
(bad)
push
mov
loopne
lods
es
hlt
jb
add
adc
xchg
cmp
mov
std
adc
and
retf
call
mov
pop
mov
repnz
or
xchg
je
xor
sub
adc
xor
aam
dec
cmp
mov
ja
fbstp
loope
leave
call
xchg
not
and
jl
inc
add
das
popf
jl
sahf
and
jo
xchg
cmps
aas
retf
sub
rol
(bad)
push
jb
cwde
enter
mov
push
adc
out
jmp
inc
fcmovbe
(bad)
data16
inc
and
ins
mov
shl
and
(bad)
or
fistp
mov
js
je
push
add
inc
inc
and
cwde
and
jmp
in
jb
jae
add
out
ficomp
and
push
inc
call
stc
xor
adc
mov
cmps
push
mov
mov
inc
cld
mov
fldcw
lahf
mov
sbb
into
dec
iret
stc
and
fsubr
mov
test
popf
add
mov
ficom
pop
aam
and
mov
sbb
mov
or
jnp
or
pop
push
(bad)
fld
dec
jno
call
and
mov
xor
mov
jecxz
push
ja
loope
or
sar
sbb
xchg
push
xchg
aas
lods
repz
xlat
test
jle
aaa
(bad)
mov
jnp
lds
jl
jge
ja
fwait
retf
xchg
out
pop
mov
std
xor
mov
and
dec
jnp
cmps
jp
jne
xor
pop
dec
cmps
pop
push
ja
mov
sub
pop
or
test
not
cli
mov
nop
jnp
ins
out
xchg
scas
xchg
mov
mov
push
inc
push
and
test
xor
cli
jl
mov
clc
popf
dec
outs
call
xor
out
push
and
or
push
adc
sbb
pop
test
mov
adc
ins
or
pusha
scas
dec
push
and
adc
mov
add
add
adc
push
enter
ins
sub
mov
int
push
cld
add
push
movs
lods
dec
int3
xchg
dec
cli
xchg
mov
das
mov
push
cwde
or
shl
and
sub
mov
push
xchg
imul
retf
fiadd
pop
or
fimul
ret
ss
call
jne
jo
and
xor
int
ficom
mov
and
dec
inc
scas
movs
sbb
sub
fdivr
mov
mov
xor
jbe
inc
push
jno
adc
jns
nop
dec
test
jb
inc
arpl
mov
mov
adc
popf
cmovl
into
retf
mov
scas
mov
jne
jno
pop
jl
cmp
leave
adc
jnp
in
pop
pop
mov
loope
xchg
neg
ret
mov
pop
dec
mov
shr
loopne
jo
cmps
sbb
sub
and
aaa
jno
mov
xor
pop
fs
xchg
scas
mov
cli
loopne
arpl
pushf
les
xchg
xor
xchg
rcr
and
retf
push
dec
addr16
gs
(bad)
push
inc
jb
pop
mov
jmp
mov
cmp
mov
clc
arpl
xchg
push
aaa
pop
nop/reserved
and
ficom
mov
push
lea
push
push
std
jle
fmul
pop
ds
or
inc
arpl
into
je
jb
mov
xchg
or
push
or
and
pop
xchg
jge
lods
lock
xchg
and
test
mul
xchg
xchg
jmp
inc
(bad)
adc
cmp
sti
fidivr
push
fidivr
repz
stos
sbb
cmp
sub
cmps
add
or
stos
inc
and
call
jne
mov
push
xchg
sub
jmp
pop
hlt
jnp
les
pop
movs
imul
sbb
adc
bound
cmc
lods
cld
jno
sbb
stc
push
sahf
mov
loope
jne
pop
or
add
scas
mov
cmp
sub
mov
xchg
mov
jle
xor
and
mov
das
cmp
shl
xlat
and
lock
jo
ret
cwde
dec
movs
mov
jne
cmps
retf
retf
dec
add
sbb
mov
repnz
js
rcl
fwait
add
mov
adc
inc
xchg
call
mov
sub
hlt
shl
enter
and
inc
push
(bad)
pop
arpl
out
bound
movs
rcr
(bad)
psrld
ret
retf
mov
js
mov
sti
jnp
cmc
out
sbb
repnz
js
das
sahf
rol
mov
(bad)
sbb
mov
dec
jne
sahf
test
jle
pop
add
rcl
ret
outs
push
loopne
(bad)
mov
ret
jle
mov
mov
mov
or
in
addr16
shl
adc
loopne
(bad)
jl
add
ins
(bad)
movs
sub
ret
mov
je
jb
add
repz
mov
cmp
int
or
nop
dec
push
out
aaa
rcr
daa
adc
ins
dec
mov
scas
cmp
or
sbb
mov
adc
cmps
push
hlt
fwait
in
sub
retf
inc
nop
pop
gs
xor
cmc
loop
iret
ret
imul
les
mov
movs
jge
stc
into
and
mov
pop
push
(bad)
ja
in
movs
jnp
push
dec
idiv
sbb
jne
repnz
sti
mov
ja
xlat
(bad)
icebp
(bad)
rol
repnz
ss
fld
xor
outs
movsx
xchg
in
int3
call
test
sar
and
inc
hlt
adc
test
ret
call
add
test
sbb
sbb
pop
(bad)
mov
xchg
inc
jle
cld
and
xor
adc
jnp
pop
inc
cmc
and
sbb
call
scas
push
ret
inc
jmp
ret
fwait
push
in
aas
ds
ret
push
sbb
imul
std
cmp
fsub
(bad)
add
inc
xchg
repnz
adc
lods
cmp
sti
and
mov
xchg
inc
mov
test
mov
loope
pushf
mov
cmp
test
jecxz
sbb
add
sbb
jmp
outs
sar
jle
daa
fldcw
enter
lods
stos
retf
push
push
mov
xchg
mov
(bad)
mov
rcr
rol
or
push
cmp
push
arpl
lea
add
std
test
in
imul
fdivr
popa
sbb
(bad)
hlt
ss
test
push
nop
mov
nop
fisttp
stos
add
sbb
dec
pop
(bad)
(bad)
clc
mov
mov
or
xor
add
push
pusha
loop
and
xor
out
repnz
shl
hlt
cmp
call
push
repz
addr16
ins
push
shl
push
cwde
mov
or
mov
push
mov
das
adc
sub
stos
mov
xchg
adc
cwde
into
adc
adc
mov
or
sub
cmp
(bad)
sbb
movs
pop
xor
jnp
jns
out
(bad)
sahf
inc
repnz
pop
jecxz
call
lahf
and
jbe
fwait
cmp
loope
rcl
popa
cwde
mov
xchg
push
movaps
pop
mov
test
movs
inc
push
pop
lock
mov
pop
jl
gs
inc
js
xor
adc
scas
repnz
popf
xor
cmp
rcr
sub
add
pop
pop
sbb
jl
sub
lods
int
xchg
cmp
xchg
push
out
fisttp
ss
daa
call
leave
mov
(bad)
lods
push
gs
pop
outs
ss
xlat
add
jns
xchg
inc
loop
mov
popf
aad
lods
push
in
(bad)
in
repnz
xlat
mov
cdq
add
(bad)
cmps
cwde
repz
sbb
jmp
std
jb
in
jmp
stc
cmps
and
int3
enter
rol
inc
(bad)
outs
pop
adc
or
push
lea
retf
pushf
rcr
cld
mov
rcr
mov
aam
stos
aad
fnstcw
(bad)
std
mov
push
push
fwait
xor
dec
imul
pop
or
int3
shr
push
jmp
out
push
(bad)
push
cmp
cmc
les
enter
mov
jb
dec
pop
adc
jmp
push
fst
sbb
ins
sub
(bad)
fxch
or
or
cmps
dec
outs
(bad)
push
jnp
pop
xchg
loopne
dec
rcl
call
push
mov
nop
pop
aaa
dec
adc
movs
ins
das
add
(bad)
stos
inc
mov
test
sbb
repnz
iret
dec
mov
loope
sub
push
dec
arpl
sub
jo
(bad)
and
in
pop
dec
cli
dec
lods
dec
mov
scas
push
jae
mov
jecxz
aaa
movs
es
cmp
and
dec
pusha
sti
sbb
cld
xchg
out
inc
sar
mov
pop
jno
xlat
jle
and
imul
stos
loope
movs
sub
fmul
movs
cs
push
inc
je
mov
pop
ss
shl
cmp
dec
lahf
(bad)
out
aaa
or
cmc
scas
call
clc
arpl
push
out
cli
jle
dec
mov
xor
push
sub
outs
push
and
jbe
adc
icebp
lock
repnz
push
push
in
loope
popa
xlat
ins
sub
cmp
or
bsf
cmp
mov
adc
cmp
in
sbb
std
cmp
lds
xchg
add
sub
xchg
mov
js
pop
mov
cmp
mov
xchg
test
push
rcl
das
inc
or
adc
mov
mov
movsx
jge
js
addr16
add
push
arpl
inc
mov
dec
stc
and
stc
ds
aam
inc
rol
and
sub
jp
mov
mov
mov
mov
mov
imul
jns
test
cld
mov
or
push
pop
ret
(bad)
fadd
xor
push
jne
inc
cmp
jecxz
xor
icebp
mov
movs
fdiv
mov
sub
mov
out
inc
push
repz
jae
shl
mov
lock
int
xor
ror
shl
pusha
in
stos
lods
add
inc
lds
leave
xchg
call
(bad)
ror
inc
(bad)
int
xor
jp
and
inc
cmp
push
call
xchg
mov
nop
aad
push
enter
sub
or
xor
xor
test
add
xor
sub
dec
shl
jg
mov
dec
adc
mov
jnp
or
pop
frstor
or
xchg
lock
adc
sub
outs
dec
sub
mov
addr16
add
adc
adc
iret
out
adc
stos
sbb
aas
sbb
jbe
mov
test
push
cmp
jle
lea
jge
ret
addr16
stos
int
cmp
bound
out
jmp
pop
pop
scas
jns
jbe
ja
(bad)
jge
and
push
repz
shr
bound
inc
jle
cmps
outs
pop
mov
jae
mov
pop
movs
add
enter
pop
add
mov
xchg
jbe
ss
sub
xor
and
in
xor
bndstx
mov
out
ins
out
xchg
dec
xchg
xchg
lds
(bad)
mov
sbb
sub
addr16
arpl
mov
sub
stc
neg
ins
cwde
add
outs
inc
mov
aaa
cmps
aas
cmp
std
mov
inc
in
into
pop
xor
ja
sub
dec
cs
out
xchg
je
xchg
add
fs
pop
mov
mov
rcl
jg
xor
nop
adc
leave
mov
sar
xchg
mov
ss
xchg
xor
sbb
ret
shl
adc
sbb
mov
sub
fwait
retf
outs
push
movs
int3
adc
add
cld
pop
push
add
(bad)
stc
movs
add
mov
cmc
neg
popa
mov
push
ror
repnz
fmul
mov
loop
xchg
jnp
out
out
mov
in
mov
in
sbb
xchg
dec
mov
push
adc
mov
sbb
push
or
pop
popa
test
lods
pop
test
data16
scas
dec
mov
stos
call
lahf
pop
sub
aas
shl
jb
add
dec
ficomp
hlt
xchg
cdq
je
adc
dec
pushf
sbb
daa
mov
ds
popa
sbb
cmp
mov
or
shr
loop
push
js
jecxz
xor
fiadd
sbb
rcl
jp
(bad)
iret
ins
cmp
bound
js
xchg
jg
fnstcw
(bad)
sahf
jb
int
and
imul
(bad)
out
mov
imul
jae
addr16
enter
out
cdq
jmp
or
outs
push
mov
mov
mov
xor
sbb
mov
scas
dec
bound
in
inc
sub
lahf
adc
test
push
push
enter
mov
adc
mov
mov
push
mov
and
cmp
mov
mov
push
lock
add
xchg
pop
cld
mov
out
fwait
bound
mov
(bad)
scas
(bad)
fs
mov
inc
retf
pop
fadd
das
repz
push
syscall
add
leave
jnp
ret
outs
xchg
push
mov
mov
int3
aaa
jg
sub
push
inc
das
jo
xor
push
ds
xor
or
rol
xor
xchg
dec
jge
ss
ds
in
mov
jmp
jl
aam
scas
cmp
data16
nop
jbe
(bad)
mov
sar
sahf
dec
movs
ret
sti
jl
and
mov
iret
mov
push
popf
outs
mov
sub
fild
xchg
loop
scas
sbb
ins
jnp
and
test
rcr
lea
std
mov
ret
dec
pop
mov
mov
inc
mov
dec
outs
jo
aad
(bad)
rcr
jle
jg
mov
ret
outs
cmp
daa
stos
stos
adc
bnd
inc
inc
repnz
icebp
(bad)
mov
test
sub
add
ja
pushf
mov
fnstcw
das
pop
dec
adc
cmp
bnd
xchg
inc
mov
stc
xor
jmp
add
mov
xchg
inc
add
icebp
repz
push
xchg
test
mov
aas
movs
push
xor
hlt
dec
mov
xor
sbb
jne
adc
ins
sar
sub
push
shl
hlt
nop
sub
aaa
add
fist
xor
cmc
jle
je
dec
pop
ror
(bad)
nop
add
in
adc
cmp
add
mov
mov
xchg
cmp
hlt
sub
cmc
jg
jo
pop
inc
(bad)
xor
adc
cmp
xor
dec
pusha
in
or
(bad)
dec
sar
mov
test
dec
or
pop
std
