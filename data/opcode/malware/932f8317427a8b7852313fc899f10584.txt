cmp
add
add
add
add
add
add
add
add
add
add
pusha
and
add
add
add
xor
add
add
add
add
jb
add
jo
add
add
sub
add
or
add
or
add
or
add
jo
add
add
je
add
sbb
jle
add
add
xor
push
add
jo
add
add
add
add
sub
add
xor
add
add
adc
or
and
push
push
add
xchg
jle
add
add
jle
add
add
imul
add
pushf
push
pop
pop
or
add
imul
add
add
or
add
or
add
add
pop
add
jo
or
add
jae
add
or
pop
outs
or
add
fimul
add
pop
adc
or
jae
add
push
jp
jle
add
add
pop
add
jo
or
add
sub
add
push
or
add
fiadd
jle
add
add
pop
add
jo
or
add
sub
add
or
sub
sbb
add
add
or
or
add
add
add
push
ins
add
add
add
adc
add
add
add
adc
add
or
push
outs
adc
add
jb
add
jo
adc
add
es
jb
add
jo
adc
add
push
push
outs
adc
add
push
pop
outs
adc
add
jle
add
add
adc
pop
lea
add
add
push
add
add
or
outs
pop
add
or
add
push
sub
add
push
add
sbb
add
sub
jb
add
jo
sbb
add
add
add
sbb
add
add
add
sbb
sbb
add
sub
add
sub
add
add
add
add
add
push
add
or
push
add
add
add
and
add
add
add
add
add
add
sbb
add
add
sub
add
push
sub
adc
add
push
add
add
add
add
pop
add
push
outs
and
add
or
adc
outs
and
add
sub
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
mov
je
add
add
loope
add
and
push
add
push
add
dec
add
dec
add
inc
add
add
inc
add
xor
add
add
and
mov
movs
and
xor
jmp
lahf
(bad)
pop
xor
loopne
xchg
sbb
outs
movs
mov
out
add
ret
mov
imul
mov
pop
sbb
xchg
retf
inc
pop
rcr
push
jb
outs
jl
xchg
sahf
inc
les
add
adc
dec
inc
pusha
mov
push
xchg
retf
push
pop
fldenv
jle
hlt
xchg
mov
add
xchg
aaa
jg
push
jmp
mov
mov
jb
xor
scas
(bad)
mov
je
or
pop
cli
jmp
and
inc
add
sahf
fldcw
hlt
sahf
push
jl
fst
(bad)
nop
jns
or
push
inc
fiadd
jno
cmc
jnp
dec
fld
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
add
cmps
out
xchg
cmp
adc
adc
jbe
in
aam
lahf
(bad)
sub
sub
mov
scas
inc
sbb
pop
sbb
popa
inc
pop
enter
loop
pop
(bad)
push
mov
aad
pop
adc
addr16
xor
gs
inc
or
test
mov
iret
cmp
loopne
inc
test
or
sbb
daa
xor
xor
jl
enter
daa
pop
sub
adc
jno
arpl
pushf
cmc
or
sti
lds
shl
dec
cmp
bound
cld
inc
push
sbb
mov
inc
std
sub
push
es
sti
ss
out
adc
pusha
inc
xchg
mov
push
into
inc
or
xchg
mov
xor
push
pop
fwait
loopne
inc
test
or
mov
lods
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
(bad)
sbb
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
or
add
add
jg
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
imul
test
mov
inc
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
mov
pop
(bad)
jnp
ss
loope
daa
jg
inc
mov
push
mov
push
push
retf
pop
popf
xchg
mov
mov
fst
fwait
loopne
inc
test
or
dec
movs
call
cmp
ins
ror
mov
sub
sbb
imul
ret
outs
mov
or
sti
lds
shl
push
fdivr
js
hlt
mov
inc
std
sub
or
add
ss
out
adc
inc
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
(bad)
enter
and
sub
sbb
jno
arpl
nop
cmc
or
sti
rcr
mov
bound
std
bound
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
mov
or
ins
mov
lods
daa
add
ret
fsub
add
sbb
jno
inc
mov
xchg
or
aad
push
nop
lds
or
mov
push
inc
fild
hlt
mov
inc
std
aas
(bad)
sub
add
sti
xor
jg
inc
xchg
mov
pop
call
lahf
mov
mov
aad
jne
out
inc
test
add
outs
mov
inc
xor
ins
rol
movs
sub
sbb
xchg
pop
lds
repnz
sti
rcr
mov
or
bound
(bad)
inc
rol
sbb
push
sub
push
or
add
jl
ds
mov
inc
jmp
cmovp
loope
fwait
mov
fst
stos
xlat
xchg
or
or
and
ins
rol
scas
sub
sbb
adc
cmc
or
mov
inc
sti
lds
shl
cmp
shl
pop
hlt
mov
inc
std
aas
(bad)
cmp
push
push
out
adc
jg
inc
xchg
mov
jbe
inc
or
lods
mov
mov
fst
fwait
rcl
inc
pop
dec
lods
xchg
lods
daa
sbb
pop
and
enter
or
sbb
jns
arpl
mov
ins
lods
inc
repz
out
imul
std
bound
repnz
inc
pop
hlt
mov
ins
fstp
(bad)
push
or
dec
mov
out
or
inc
xchg
mov
push
into
inc
or
mov
mov
jmp
add
or
inc
sbb
daa
adc
fdivrp
mov
sub
sbb
jno
addr16
lahf
sub
jle
ror
pushf
outs
mov
scas
movs
xor
ror
push
dec
fidiv
cmp
dec
std
add
cmp
add
sbb
jl
dec
mov
outs
ja
inc
or
lahf
lahf
fcmovbe
and
cmps
pop
imul
mov
cmp
jb
sbb
cld
call
not
sbb
sub
adc
in
ret
inc
nop
aad
xchg
mov
inc
fld
sbb
rol
ins
xor
cld
inc
push
or
inc
std
sub
and
jnp
ss
(bad)
add
inc
cwde
mov
mov
imul
mov
mov
fnstenv
mov
mov
add
push
inc
sbb
and
pop
and
and
sub
nop
dec
sar
bsf
push
push
inc
ds
leave
xor
ror
jge
std
bound
push
inc
sbb
xchg
pop
sti
xor
jnp
ss
imul
aam
dec
jmp
mov
mov
cld
push
dec
adc
test
or
inc
cdq
jmp
daa
adc
(bad)
shl
adc
add
arpl
xchg
in
and
mov
(bad)
push
mov
xor
stc
shl
and
inc
cmp
bound
cld
jne
pop
sti
stc
jnp
inc
test
push
or
pop
int3
dec
mov
out
or
inc
xchg
mov
je
dec
or
cdq
mov
lods
stos
fsub
jge
push
jne
enter
xor
dec
ss
mov
cmps
and
ret
cmps
mov
ss
xor
popa
mov
test
movs
push
jno
lds
mov
or
shr
out
inc
outs
inc
fiadd
or
mov
shl
ds
push
add
ss
enter
inc
inc
cdq
mov
fs
inc
cmp
out
call
outs
hlt
jno
push
ins
cdq
jecxz
inc
test
or
sbb
add
gs
test
add
pop
xor
arpl
mov
or
sti
lds
mov
mov
push
bound
pushf
jns
arpl
push
(bad)
push
es
pop
ret
sbb
jl
and
jne
inc
xchg
mov
inc
into
inc
or
(bad)
mov
mov
fst
loop
add
or
es
mov
test
and
enter
adc
sub
jp
add
arpl
mov
push
mov
pop
cmp
(bad)
bound
(bad)
inc
retf
dec
push
cmp
in
add
push
add
inc
cmp
inc
cwde
mov
je
inc
add
xchg
mov
mov
jge
push
jb
xchg
add
add
sbb
add
aas
cmp
ins
cld
out
mov
and
add
sbb
jb
arpl
mov
add
aad
sbb
arpl
daa
retf
sbb
std
bound
fist
pop
hlt
mov
add
sub
add
dec
(bad)
jl
adc
pop
pop
fs
mov
push
call
xchg
mov
movs
stos
outs
in
out
pop
jne
repz
add
addr16
jmp
sub
enter
push
pop
sub
adc
jns
imul
mov
(bad)
sbb
shl
jnp
lds
inc
ficomp
sbb
add
push
std
sub
push
ds
loop
mov
out
add
jl
xor
mov
inc
mov
xchg
mov
mov
fst
mov
lea
or
sbb
and
cmp
es
enter
and
cmp
and
jne
inc
mov
and
jle
cld
add
outs
fld
sbb
shl
addr16
inc
dec
inc
fiadd
cmp
mov
push
(bad)
sbb
add
js
adc
inc
ins
xchg
mov
sar
je
dec
sub
xchg
mov
cmps
mov
(bad)
jno
(bad)
jecxz
dec
test
ins
call
adc
movs
mov
pop
cmp
sbb
jge
addr16
or
enter
ss
movs
fs
outs
pop
aam
bound
bound
in
pop
div
cmc
aas
les
add
sti
ss
jl
dec
xchg
sahf
push
mov
inc
dec
mov
or
cmp
fistp
jge
push
dec
mov
cmp
pop
inc
das
push
fs
cmp
ins
cld
in
(bad)
mov
pop
or
jno
and
arpl
mov
or
sti
iret
sbb
fld
fadd
std
bound
repnz
push
adc
ins
jmp
add
sbb
pusha
push
cmp
into
inc
or
lods
mov
mov
fst
mov
test
cmp
pop
aaa
push
addr16
and
xor
inc
cmps
int3
mov
push
cmp
pop
xor
lods
xchg
pop
rcl
add
fcom
shl
cmp
jp
inc
(bad)
pop
ror
les
add
cmp
inc
pop
xchg
fwait
dec
xchg
clc
gs
inc
or
loope
lods
stos
(bad)
daa
lods
mov
dec
ret
push
pop
mov
cmp
jb
arpl
aaa
dec
es
rol
test
sub
sub
jno
outs
mov
test
mov
rcr
mov
xor
cmp
in
bound
cld
xor
cmc
jnp
dec
std
add
cmp
add
adc
jge
xchg
call
lahf
mov
mov
and
dec
loop
jl
loopne
fs
add
outs
lods
shl
es
test
mov
or
pop
push
and
jb
pushf
pop
loope
mov
pop
test
jmp
xchg
sbb
(bad)
push
hlt
bound
out
inc
push
pop
std
mov
arpl
sub
and
jnp
ss
je
inc
xchg
mov
add
mov
fldenv
cmps
pop
ins
rcl
jl
loopne
mov
sbb
sub
xor
dec
ror
mov
sbb
sub
arpl
mov
jae
push
sti
lds
mov
xor
clc
xchg
cmp
(bad)
bound
retf
inc
rol
or
mov
arpl
add
sub
add
sbb
js
dec
xchg
mov
mov
ins
pop
dec
xchg
xchg
mov
mov
fstp
fwait
loopne
inc
xchg
cmp
jno
sbb
cld
stos
and
cmp
es
ror
mov
sub
sbb
jno
arpl
mov
or
aad
or
ror
dec
xor
(bad)
pop
in
adc
lds
add
cmp
jg
inc
xchg
mov
je
inc
or
fwait
mov
mov
fst
fwait
into
mov
or
cmp
into
mov
sub
hlt
fbld
add
add
arpl
lahf
clc
or
sti
loope
mov
mov
push
(bad)
adc
fisubr
sbb
mov
inc
fild
push
es
jnp
or
inc
xchg
mov
data16
arpl
pop
mov
in
mov
scas
jbe
fwait
loopne
inc
mov
inc
push
mov
adc
cmps
stc
scas
xchg
mov
push
aas
or
pop
sbb
pop
arpl
add
add
xchg
cmps
dec
das
shl
xor
pop
outs
dec
shl
pop
hlt
mov
push
std
sub
adc
jnp
xor
jg
inc
xchg
scas
push
xchg
clc
gs
retf
pop
xchg
mov
test
pop
fs
push
ins
fwait
into
add
or
sbb
add
fnstcw
pop
sub
ins
jge
jno
pusha
mov
dec
ret
jle
cld
jp
xor
sti
jecxz
xchg
mov
or
mov
or
bound
test
fiadd
pop
hlt
mov
inc
xlat
aaa
(bad)
push
sub
jnp
ss
(bad)
adc
inc
xchg
mov
mov
gs
call
lahf
mov
cdq
in
mov
jge
push
pop
fwait
loopne
pop
mov
or
sub
rep
daa
adc
(bad)
int3
mov
or
sbb
inc
adc
test
jle
into
adc
rcl
sbb
ret
mov
or
push
inc
leave
dec
inc
cmp
dec
std
add
sub
add
add
jo
push
xchg
sahf
push
cwde
out
gs
dec
and
movs
mov
pusha
fs
fst
stos
ret
mov
outs
mov
fwait
sub
ins
cld
frstor
or
sbb
jge
addr16
test
dec
(bad)
test
mov
push
jmp
aas
mov
mov
jge
shr
inc
fiadd
adc
inc
sar
lds
jnp
ss
fdivr
pop
je
inc
xchg
mov
fs
sub
xchg
lahf
movs
mov
pusha
dec
shl
push
pop
xor
imul
ins
mov
stos
and
or
and
hlt
cld
mov
cmp
or
jne
addr16
or
add
xchg
mov
jp
or
bound
retf
or
mov
ins
icebp
cmp
push
sub
jnp
cmps
jnp
cmp
pusha
inc
cwde
mov
addr16
mov
mov
cld
push
dec
adc
test
or
adc
into
xchg
daa
add
(bad)
mov
or
fs
movs
arpl
dec
cmps
imul
xchg
stos
cmps
inc
sti
iret
adc
mov
push
dec
repnz
je
hlt
mov
imul
clc
inc
mov
jl
inc
xchg
mov
jg
ins
sbb
xchg
xchg
mov
mov
retf
lahf
icebp
mov
cmp
jb
push
imul
fcmovu
test
sub
ins
jnp
pop
inc
or
push
scas
pushf
btr
add
mov
pusha
xor
(bad)
pop
jbe
repz
fs
mov
ins
icebp
aas
ret
or
lods
push
in
adc
jns
inc
cdq
mov
push
into
inc
or
xchg
mov
mov
fst
stos
xlat
mov
cmp
pop
inc
sbb
jecxz
and
pop
cld
(bad)
cmp
sub
add
loope
mov
jns
inc
sti
iret
pop
xchg
lds
or
mov
cs
pop
cmp
popa
ins
dec
fiadd
pop
ror
(bad)
push
and
jnp
ss
enter
pusha
aaa
xchg
mov
je
inc
or
xchg
mov
mov
fldenv
pop
lahf
loopne
inc
cmp
jb
sub
out
and
cmp
outs
fcmove
mov
sub
or
pop
packsswb
xchg
cld
jp
cwde
jno
popa
enter
movs
add
shl
push
inc
fidiv
hlt
cwde
js
inc
std
das
ret
or
adc
jl
adc
jg
inc
cmp
cdq
mov
lods
cmps
push
ins
ret
push
pop
fwait
loopne
fs
cmp
pusha
outs
xor
mov
cmps
and
dec
sub
jle
loopne
cmps
mov
pop
sbb
sbb
arpl
mov
pop
cmps
inc
sti
(bad)
sbb
xchg
or
jp
ficom
js
cld
inc
push
pop
fld
(bad)
push
add
adc
jnp
popa
and
pusha
dec
call
std
push
or
xchg
mov
mov
fst
stos
int
inc
test
or
sbb
out
test
es
rcl
aam
and
sub
or
jno
arpl
mov
add
retf
call
or
lods
outs
cmp
repz
std
popa
pop
popa
lock
push
pop
hlt
mov
sub
daa
and
mov
out
xor
push
popf
mov
mov
gs
dec
add
xchg
mov
lods
and
sar
push
pop
xchg
out
inc
nop
cmp
jb
imul
lods
and
dec
pop
cmp
(bad)
sub
sbb
inc
stc
in
pop
ret
jle
in
mov
sar
lds
or
mov
sbb
push
inc
ret
jg
pop
hlt
mov
xor
ss
ss
in
push
xchg
mov
je
inc
or
mov
sub
dec
out
push
pop
fwait
in
push
xor
jb
sbb
out
test
pop
inc
cmp
ins
retf
add
arpl
xchg
sub
mov
inc
repz
mov
inc
cmp
fistp
sbb
bound
(bad)
cmp
cwde
jnp
inc
out
pop
sar
add
inc
mov
adc
dec
mov
gs
inc
sub
shl
pop
outs
in
fistp
xor
inc
scas
dec
or
sbb
add
or
es
rcl
mov
sub
sub
pop
sbb
arpl
mov
or
lods
push
mov
mov
mov
push
and
bound
out
inc
pop
pop
hlt
mov
inc
stc
sub
push
or
pusha
jmp
mov
fiadd
jg
inc
nop
mov
pop
sti
ins
or
xchg
mov
sahf
mov
outs
in
int3
push
jae
cmc
cmp
push
outs
mov
push
or
ins
ror
or
xor
popa
mov
mov
and
(bad)
sbb
mov
daa
retf
inc
cmp
bound
icebp
dec
inc
sbb
test
sub
or
and
push
inc
xchg
mov
pop
in
inc
or
lea
mov
retf
push
jne
into
add
add
ins
mov
mov
es
ror
test
xchg
pop
xor
pusha
xchg
lods
pop
ret
jle
repnz
cmc
pop
cmps
inc
jmp
push
mov
mov
push
and
bound
repz
push
cmp
in
or
or
add
jl
or
jnp
mov
fs
xchg
mov
mov
push
outs
in
mov
xor
mov
jnp
aas
cs
sbb
xor
cmp
and
cmps
mov
pop
sbb
or
inc
push
arpl
mov
pop
movs
inc
(bad)
fnstsw
mov
mov
jnp
cmc
push
pop
inc
cld
inc
jge
hlt
mov
ins
in
(bad)
aaa
cs
pop
jmp
mov
out
add
push
inc
xchg
mov
jo
inc
or
jecxz
lods
stos
shl
mov
fst
xchg
jmp
or
(bad)
mov
movs
daa
adc
fcmovb
xchg
mov
sub
xor
pusha
mov
or
xchg
mov
popa
sti
mov
mov
adc
out
imul
les
dec
cld
inc
push
pop
iret
mov
dec
in
sub
push
add
ss
jmp
mov
add
push
or
mov
and
or
jno
loop
or
sub
sbb
and
xor
es
rol
cmps
test
js
sub
sub
loopne
mov
or
aad
adc
mov
sbb
mov
jb
dec
retf
sbb
cwde
jnp
dec
repnz
push
or
inc
mov
lds
sub
push
pushf
mov
ins
mov
lods
mov
mov
bound
jge
ja
mov
pop
cmp
push
inc
sbb
daa
adc
fmulp
mov
call
xor
push
fwait
inc
(bad)
jle
repnz
jmp
adc
sahf
ss
test
cmp
cmc
gs
outs
dec
aaa
stos
pusha
inc
pop
in
pop
xchg
and
ss
in
ss
jo
nop
scas
inc
mov
pop
push
pop
xchg
xchg
mov
mov
leave
push
jl
stc
(bad)
fs
cmp
lods
out
and
cmp
push
mov
pop
or
ins
mov
lock
jecxz
adc
mov
outs
cmp
xchg
shl
inc
cld
pop
inc
pop
(bad)
outs
loopne
std
sub
aaa
push
sbb
xor
jne
push
in
jae
into
inc
or
nop
mov
mov
and
or
push
pop
fwait
cmc
pop
cmp
inc
sbb
daa
push
aas
cmp
mov
add
sbb
jno
dec
lahf
mov
cld
or
lds
out
ins
cmp
jmp
repz
push
ins
fadd
mov
pop
jnp
ss
jns
xor
xchg
mov
push
ret
ins
test
and
mov
fst
mov
add
or
ins
mov
lods
and
fcmove
cmps
xchg
xchg
pop
or
or
push
adc
xchg
pop
(bad)
pop
mov
ins
cmps
popa
cmc
aam
xchg
cmp
in
bound
retf
outs
ret
cmc
inc
mov
int3
or
add
cs
jne
inc
xchg
mov
jge
inc
or
xchg
mov
xlat
jae
xchg
sti
xchg
cmp
jae
inc
mov
xor
es
rol
xchg
nop
push
sub
mov
lds
xchg
(bad)
imul
inc
or
xchg
or
outs
adc
jbe
inc
fiadd
pop
rol
sub
and
je
ss
enter
dec
mov
bound
sub
xchg
mov
mov
push
sar
(bad)
loopne
inc
xor
pop
adc
add
dec
hlt
clc
mov
sub
sbb
jno
arpl
mov
or
jmp
pop
xchg
mov
arpl
cs
cmp
inc
gs
inc
int3
pop
lds
add
cmp
jg
pop
lahf
mov
push
ret
or
mov
and
xchg
and
push
fst
fwait
cmc
pop
cmp
jb
sbb
daa
push
aas
cmp
pop
stos
retf
sti
and
cmp
sub
loope
into
outs
mov
pop
lea
sbb
rcl
adc
jmp
out
dec
push
sbb
xor
mov
int3
or
jnp
cs
jne
dec
movs
mov
je
inc
or
mov
test
push
fadd
fwait
loop
push
xor
ins
and
add
cmp
and
cld
int
mov
add
add
arpl
dec
cmps
imul
pushf
sub
sti
iret
cmp
mov
push
retf
jb
inc
cld
push
dec
adc
inc
in
lds
xor
mov
adc
aaa
xchg
mov
pop
loopne
or
xor
cmps
push
outs
out
fst
pushf
fist
push
jo
gs
lods
daa
adc
ror
mov
sub
pop
pop
xor
arpl
pushf
test
mov
push
xchg
call
or
ins
rcr
sbb
inc
push
sbb
inc
std
sub
sub
es
in
ss
jg
inc
xchg
mov
push
lds
and
lods
mov
and
test
fst
mov
mov
cmp
ja
sbb
daa
and
ds
lock
adc
sub
sbb
jno
arpl
mov
or
mov
sbb
fldcw
sbb
inc
dec
retf
sbb
test
jle
sub
push
and
js
inc
mov
aad
and
pusha
inc
lahf
mov
inc
fimul
dec
mov
mov
mov
rcr
lahf
test
mov
fwait
and
cmp
movs
xchg
mov
cmp
cs
or
ins
call
add
jecxz
push
mov
mov
ins
cmp
inc
jns
repnz
sub
hlt
mov
inc
fstp
retf
cmp
cmp
cs
out
adc
inc
cwde
cwde
jae
(bad)
push
dec
adc
imul
fwait
loopne
fs
xor
popa
mov
lods
xor
outs
hlt
enter
dec
je
sub
pop
xor
outs
mov
test
or
inc
in
fstp
mov
fldenv
js
jge
in
jb
inc
repz
push
sbb
lahf
arpl
jae
aas
lds
cmp
push
adc
mov
push
rcr
mov
(bad)
xor
pop
std
and
mov
xchg
pop
or
aas
jae
mov
adc
popa
aad
lods
sar
add
adc
add
pusha
call
jns
stos
push
aam
fstp
ins
out
ds
xchg
dec
or
aam
push
ror
fcom
sbb
hlt
jle
jl
and
aaa
and
jle
cmp
js
xchg
dec
ficom
dec
mov
retf
mov
fiadd
lods
loop
inc
test
or
xchg
int
or
adc
frstor
add
push
xor
arpl
mov
dec
cmps
outs
dec
mov
mov
dec
dec
lea
jecxz
inc
sbb
jae
sub
jle
jb
clc
xor
jae
xor
adc
in
push
dec
popf
mov
fadd
pop
popa
int
retf
xchg
xchg
xchg
das
js
outs
adc
cdq
out
mov
sub
shl
sbb
pop
add
add
nop
jecxz
mov
jecxz
sbb
aam
cs
fs
jecxz
jbe
hlt
cmp
stc
and
cmp
pusha
shl
mov
jnp
push
cmp
jae
xor
cmps
outs
jle
jns
pop
dec
mov
add
sbb
and
das
pop
dec
pop
ror
mov
aas
sub
sub
xchg
ins
mov
mov
add
test
push
test
xor
push
inc
ficomp
sbb
mov
icebp
sub
jg
adc
and
dec
inc
test
js
retf
addr16
push
push
dec
in
movs
cdq
mov
inc
imul
rcl
sub
xor
jnp
jmp
and
ins
mov
sub
sub
xor
mov
dec
mov
pop
movs
ins
(bad)
push
mov
mov
jae
lea
aaa
int
inc
sbb
cmps
outs
loopne
icebp
sub
or
add
imul
retf
push
retf
jl
lahf
movs
mov
mov
stc
and
mov
sbb
pusha
or
aad
and
jg
(bad)
das
imul
or
mov
(bad)
push
xchg
mov
icebp
pop
xchg
mov
popa
cmp
aam
cmp
retf
adc
mov
xor
or
cmp
jnp
fs
push
mov
jbe
out
push
ins
sbb
js
pop
cli
jae
mov
xchg
ds
cli
sar
inc
(bad)
rol
sub
pop
and
cmp
xchg
dec
mov
inc
xlat
push
(bad)
sbb
lods
data16
out
cmp
jbe
aaa
stos
pusha
inc
sbb
mov
shl
and
jo
adc
ja
cmp
popa
fs
xchg
mov
cwde
mov
ficom
fwait
(bad)
repnz
xor
arpl
sbb
and
aas
ss
enter
aas
pop
sbb
pop
sbb
adc
mov
rcl
or
inc
push
test
outs
cmp
mov
aad
gs
leave
dec
jle
int
je
push
add
js
cs
push
pusha
inc
xchg
mov
jnp
pop
sbb
lods
cdq
mov
fild
loop
mov
pop
(bad)
loopne
inc
mov
pop
inc
dec
add
xor
inc
xor
shl
xchg
push
cmovb
jge
arpl
ret
aam
test
ins
out
cmp
cmp
mov
push
push
aas
fnstcw
or
sbb
ss
(bad)
adc
mov
inc
mov
js
arpl
(bad)
xor
jno
push
arpl
push
addr16
adc
xor
loopne
xchg
mov
pop
cmp
xor
mov
cwde
or
pushf
push
mov
fsubp
cmp
jmp
(bad)
test
inc
leave
fs
ret
test
ret
jle
es
jmp
pusha
loope
push
test
dec
or
xchg
mov
mov
push
push
gs
push
and
jo
inc
sbb
and
sub
jg
shr
add
add
inc
push
cmp
mov
mov
sbb
mov
add
xchg
mov
jp
xor
add
std
bound
aad
inc
sbb
cwde
bound
daa
and
or
xchg
adc
je
xchg
addr16
arpl
outs
sahf
xchg
fwait
mov
js
pop
cli
jae
mov
(bad)
test
or
sbb
mul
push
pop
fst
cmps
xchg
xchg
aaa
pop
or
add
inc
sbb
cwde
inc
mov
cmps
loopne
xchg
mov
cmc
sbb
shl
push
inc
ficom
pop
hlt
(bad)
jg
inc
std
sub
push
add
ss
out
adc
jae
push
xchg
mov
ja
inc
or
call
mov
fst
test
aaa
or
sbb
lock
and
sub
xlat
movs
xor
cmp
pop
or
data16
xchg
dec
nop
in
xchg
into
sbb
mov
cli
arpl
fsubr
inc
in
je
sbb
push
icebp
and
push
add
mov
jns
add
jp
cmp
addr16
push
sbb
mov
jmp
sahf
xor
add
dec
pop
xchg
repz
mov
imul
(bad)
shl
sub
cmp
mov
jecxz
lods
mov
push
loopne
and
shl
sbb
repz
inc
add
sub
in
cs
es
pop
lods
outs
stc
xor
dec
cmp
dec
xchg
push
pushf
stos
inc
imul
xchg
aad
je
xor
or
push
ins
xor
and
shl
cmp
push
adc
fwait
inc
rol
loop
mov
inc
mov
(bad)
loope
xchg
xchg
sub
sbb
jns
in
inc
inc
inc
mov
scas
outs
icebp
push
stc
and
jg
dec
xchg
fs
ss
jp
pop
call
retf
pop
xchg
xchg
cmps
mov
enter
out
xchg
push
jo
inc
sbb
and
ror
scas
mov
aaa
pop
adc
add
inc
push
cmp
mov
xor
sbb
mov
push
add
xchg
mov
jp
and
add
std
bound
aad
inc
sbb
cwde
bound
aaa
and
or
ds
jp
fs
mov
fs
push
cvtpi2ps
aam
fwait
test
pushf
jb
push
ins
mov
sub
inc
pusha
push
push
jecxz
and
sub
inc
(bad)
shl
sub
cmp
mov
nop
jecxz
mov
(bad)
sbb
mov
cmp
int
das
(bad)
outs
inc
leave
jne
or
std
push
mov
ds
jle
adc
imul
in
popa
fs
pop
jnp
mov
mov
sti
sbb
ins
stc
and
mov
aaa
add
push
push
leave
movs
xor
push
(bad)
shr
sbb
add
cmp
mov
push
xlat
jle
fcomp
test
push
or
aam
dec
pop
aam
jae
fldenv
pop
retf
sub
adc
adc
jo
dec
cmp
pop
mov
shl
lea
out
int
pop
lahf
jmp
inc
mov
push
jbe
adc
and
ins
in
mov
pop
sbb
pop
add
nop
push
retf
out
or
mov
rcr
mov
dec
or
mov
dec
cmp
imul
int
push
dec
idiv
ret
daa
jle
sbb
jns
and
jnp
pusha
mov
popa
inc
in
gs
xchg
xchg
mov
mov
dec
pop
xchg
pop
int3
push
bound
cmp
fwait
xchg
scas
daa
adc
cmps
(bad)
cmp
sbb
jne
data16
mov
add
stos
dec
mov
xchg
mov
addr16
fadd
test
inc
in
fs
ret
test
lds
xor
or
adc
push
dec
dec
mov
outs
pusha
in
push
movq
fisub
fwait
mov
(bad)
pop
sub
sub
pop
xchg
int
or
adc
out
movs
mov
add
dec
and
jne
mov
jecxz
mov
or
shl
push
mov
cli
ins
cmp
data16
fldcw
or
mov
cs
es
pop
lods
jle
adc
imul
in
popa
fisttp
pop
cmps
scas
mov
cwde
add
arpl
sub
jnp
ja
in
movs
sub
sbb
xor
mov
xor
pop
push
addr16
test
imul
mov
test
jl
or
popa
cmp
mov
stos
pop
repz
add
adc
jg
ja
mov
ja
push
or
out
mov
cwde
xor
jbe
push
dec
mov
and
mov
lods
daa
adc
sub
outs
stos
fnstenv
adc
xor
cli
mov
rol
or
(bad)
fst
shl
jnp
jmp
inc
fiadd
adc
cmc
push
mov
add
or
dec
inc
fwait
mov
xchg
in
jae
ret
dec
mov
movs
cdq
mov
pop
push
imul
mov
push
inc
sbb
and
imul
adc
or
bound
fs
mov
in
jp
pushf
dec
rol
out
test
push
or
push
inc
fiadd
pop
hlt
mov
inc
std
sub
cmp
add
es
out
adc
pusha
inc
xchg
mov
gs
pop
xchg
mov
lods
stos
rol
mov
in
iret
js
loop
add
or
push
push
aaa
cmp
rcl
movs
xor
sub
xor
mov
sar
push
xchg
fsubr
aas
sbb
lods
bound
aam
and
jbe
inc
repz
inc
adc
pushf
dec
hlt
ins
stc
es
pop
pop
add
xor
sub
stos
push
test
outs
addr16
dec
in
xchg
mov
cwde
mov
rcl
jmp
push
mov
or
cdq
jecxz
sub
int3
mov
movs
daa
pop
sub
adc
jne
imul
mov
enter
xor
rol
dec
lea
jecxz
inc
or
mov
cmp
sbb
inc
mov
jge
push
fbld
in
or
mov
fwait
xchg
inc
ins
hlt
or
push
dec
mov
xor
jge
add
xor
das
cmp
ins
rcr
mov
adc
push
pop
sbb
cmp
mov
dec
xchg
out
jns
stos
push
mov
mov
xchg
(bad)
in
sbb
fiadd
push
jge
xor
push
enter
jae
mov
jl
enter
dec
or
xchg
mov
rol
mov
repnz
add
and
xor
and
std
fnsave
aas
sbb
dec
xor
and
fwait
inc
(bad)
jle
lock
cmps
push
mov
fsubp
cmp
in
jno
and
dec
bound
ins
pop
sbb
arpl
and
jle
or
cmp
push
adc
inc
mov
jae
ret
dec
add
ins
iret
push
push
dec
mov
xchg
inc
scas
sbb
pusha
adc
aam
xor
out
mov
sub
adc
jle
data16
rol
mov
(bad)
or
xchg
(bad)
popa
sub
iret
popa
sbb
cwde
je
dec
mov
pusha
pop
or
add
imul
loopne
je
dec
sbb
test
and
pop
aad
dec
lahf
out
cmp
sub
bound
push
dec
and
cmp
jg
jmp
mov
pop
add
mov
jecxz
call
outs
xchg
mov
push
or
push
inc
fiadd
pop
hlt
mov
push
std
sub
push
and
jnp
es
out
adc
pusha
inc
xchg
mov
jae
inc
or
mov
lods
stos
rol
mov
in
iret
js
loop
add
or
outs
(bad)
shl
jl
iret
mov
and
das
pop
push
dec
and
popa
mov
dec
rcl
pop
test
jb
sar
out
push
jp
leave
dec
pop
sbb
cwde
pop
repz
repnz
ret
or
add
jl
adc
pop
push
mov
and
ret
dec
in
cmps
scas
mov
inc
(bad)
fsub
cmp
inc
mov
add
adc
cdq
sar
pop
stos
(bad)
das
and
pop
popa
cdq
nop
dec
retf
outs
iret
test
mov
jle
rcr
enter
mov
fs
inc
inc
retf
sbb
scas
or
push
stc
sub
push
xor
push
int
mov
out
xor
jp
fs
into
dec
push
dec
test
and
cmps
push
push
ins
retf
mov
add
bound
imul
loope
mov
and
adc
inc
cmp
mov
aam
mov
push
mov
jmp
sbb
movs
ins
cmp
out
dec
std
inc
jl
fld
or
test
aaa
les
and
jg
cmps
jg
xor
fwait
mov
inc
in
sbb
xchg
mov
cwde
fild
fsubr
push
jae
icebp
(bad)
jp
or
bound
bnd
sub
outs
(bad)
(bad)
cmps
mov
cmp
sbb
xor
mov
or
stos
das
shr
rcr
xchg
sub
mov
and
fs
stos
dec
inc
sbb
stos
outs
loopne
xlat
xor
outs
shl
mov
loope
cmp
jae
xchg
ficomp
sub
retf
scas
inc
ins
out
int3
inc
pop
xchg
in
push
mov
pop
jb
push
outs
mov
push
and
sbb
clc
movs
mov
adc
add
pusha
mov
repnz
pushf
push
mov
xchg
cmp
int
das
(bad)
outs
imul
or
std
push
ror
cmps
jle
or
jnp
pop
cmp
dec
test
daa
mov
fst
test
xchg
inc
cmc
sub
jb
adc
jecxz
and
xor
and
ret
movs
xchg
cmp
mov
fisttp
in
add
jmp
push
test
pusha
sub
cli
ins
cmp
repz
push
sbb
pushf
push
in
mov
aaa
and
out
add
push
adc
push
fcom
call
sahf
scas
fdivr
inc
js
jno
push
dec
test
xchg
inc
cmc
sub
jno
sbb
sar
outs
retf
mov
pop
sub
add
inc
sbb
cwde
dec
mov
mov
or
retf
test
jg
or
dec
cmp
fiadd
movntq
sub
push
add
ss
enter
fs
nop
mov
je
inc
or
xchg
mov
mov
fstp
fwait
loopne
push
(bad)
dec
daa
jb
sbb
and
or
mov
sub
push
add
mov
int
mov
or
add
xchg
lods
pop
push
out
pop
cmp
cli
outs
adc
dec
pop
inc
leave
gs
int3
mov
cmp
ss
add
xor
jg
inc
xchg
mov
pop
cli
or
xchg
mov
mov
jp
pop
cs
ror
ja
jnp
leave
movs
xor
adc
xor
jecxz
cmps
xchg
sahf
aaa
pop
cs
aaa
add
mov
lods
adc
test
sbb
test
fs
imul
rol
aad
inc
sbb
xor
call
ins
ror
addr16
add
dec
fs
mov
pop
push
pop
popf
mov
and
mov
pop
xchg
push
mov
add
es
inc
sbb
(bad)
sbb
and
icebp
out
mov
sub
sbb
jno
arpl
mov
and
mov
inc
out
rcr
xchg
mov
shl
ds
bound
in
ins
inc
sbb
lods
push
jae
sub
push
or
jns
add
jl
ds
mov
dec
std
push
sbb
cmps
nop
mov
mov
fbld
ins
mov
push
add
cli
leave
mov
cs
and
shl
sbb
add
inc
sbb
out
int
xchg
repnz
mov
inc
test
xchg
fwait
daa
sbb
mov
cmp
popa
sub
outs
bound
ins
inc
or
mov
xor
push
and
js
es
ins
pop
dec
xchg
mov
je
dec
or
mov
scas
rcl
not
push
popa
fwait
in
dec
stos
cmp
jb
cmp
out
daa
cmp
pop
es
ror
test
sub
sub
or
sbb
or
cwde
lds
xchg
mov
xchg
mov
pop
pop
ds
push
inc
enter
in
jne
push
mov
sar
or
jns
xor
mov
add
cdq
mov
stos
shl
cmps
pop
imul
xchg
out
imul
jge
out
and
sbb
es
movs
push
ja
pop
cmp
and
movs
inc
rcr
out
or
scas
dec
movs
jno
in
out
ss
mov
popa
sub
ins
bound
push
push
sbb
test
sbb
sbb
add
sub
mov
je
inc
or
mov
mov
mov
retf
mov
or
arpl
jae
mov
mov
adc
xor
shl
or
add
add
pusha
mov
pop
aad
xchg
repz
fwait
inc
mov
imul
sbb
xchg
push
xor
repnz
dec
lea
jecxz
inc
or
pushf
push
out
std
sub
daa
pop
sbb
adc
jae
cmp
arpl
shl
mov
mov
push
pop
cmc
cmc
test
and
gs
or
jecxz
daa
sub
ror
rcl
movs
push
pop
sbb
cs
jne
outs
sbb
test
ficomp
mov
cmp
pop
xor
or
inc
fiadd
outs
int
pop
loopne
stc
sub
aaa
and
jl
cmp
jge
inc
cwde
mov
or
inc
jnp
xchg
sahf
popf
mov
cmps
push
ja
jno
inc
ja
repz
js
inc
push
jg
in
add
pop
sbb
mov
add
or
pop
xor
imul
cmps
in
xchg
into
sbb
xchg
and
bound
out
outs
inc
ficom
sbb
xor
std
aas
les
or
jnp
add
jg
adc
xchg
mov
mov
popa
lds
mov
mov
xlat
jae
jmp
inc
ins
push
push
add
cld
retf
mul
sub
ss
add
nop
push
call
xchg
into
sbb
fldcw
or
gs
int3
push
outs
inc
ficom
sbb
stc
dec
cmc
ins
stc
and
and
jns
and
jnp
aaa
test
je
dec
or
mov
lods
stos
(bad)
and
jge
push
ins
mov
add
pop
add
imul
into
mov
adc
and
push
or
fdiv
(bad)
push
mov
fst
push
mov
mov
jno
out
outs
imul
push
or
scas
push
rcr
push
add
call
mov
fcom
and
arpl
scas
arpl
inc
or
xchg
mov
int3
inc
pop
xchg
call
add
push
outs
sti
leave
mov
and
(bad)
cmp
cmp
inc
push
cmp
mov
out
or
scas
outs
scas
push
dec
pop
cdq
mov
or
movs
arpl
pop
xchg
fidiv
inc
stos
push
pop
lock
add
js
and
dec
mov
je
pop
jnp
mov
(bad)
cwde
mov
xlat
push
dec
mov
sub
imul
sub
(bad)
mov
dec
adc
jge
addr16
or
fdecstp
sbb
scas
jb
ds
cmp
inc
jp
leave
dec
pop
sbb
cmps
jg
ins
fstp
lds
sub
mov
jmp
sub
push
icebp
popa
fs
push
jnp
mov
shl
mov
cli
jae
out
in
imul
mov
data16
and
mov
sbb
and
addr16
sub
sti
lds
mov
sbb
mov
sbb
outs
cmp
retf
sub
loopne
fbld
or
inc
fist
fsub
jnp
jne
mov
jnp
push
jg
mov
fcom
mov
fld
lods
loopne
inc
mov
or
ja
mov
lods
add
stos
retf
mov
sub
sbb
jno
arpl
mov
or
inc
sbb
shl
push
inc
fimul
pop
hlt
mov
inc
std
sub
cmp
add
adc
jl
adc
jg
inc
xchg
mov
ja
jne
ins
xchg
mov
mov
cmps
push
push
jbe
push
pop
jmp
test
mov
sub
sbb
xchg
and
sub
push
sbb
out
cmps
mov
sub
pop
adc
pop
cmp
mov
clc
or
aad
adc
lds
sbb
xchg
or
push
dec
in
ds
sbb
jge
and
sbb
cmp
ja
cmp
pop
retf
sub
stos
mov
rcl
in
out
and
xchg
push
nop
sub
jnp
sahf
mov
xor
mov
sbb
or
add
jne
in
(bad)
outs
movs
stc
sbb
pushf
pop
lods
push
mov
ins
out
adc
ds
ins
pusha
inc
fidiv
pop
or
adc
into
cmp
add
jo
inc
xchg
or
adc
cdq
mov
mov
inc
pop
dec
sahf
call
xchg
popw
repz
pop
dec
jmp
popa
ja
outs
lods
call
and
cmps
sti
and
and
push
adc
lahf
sub
jl
inc
mov
repz
adc
les
or
xchg
pop
cmp
jmp
inc
mov
mov
push
test
push
and
mov
js
dec
mov
ins
mov
ins
gs
or
xchg
fwait
cmps
push
js
push
fistp
jmp
jb
cmp
lods
out
daa
adc
sbb
cmps
mov
cmp
push
push
daa
add
mov
popf
ror
sti
lds
(bad)
rol
shl
lea
inc
retf
outs
fld
aad
add
cmps
jl
pop
sub
mov
push
mov
jae
pop
xchg
xor
stos
push
outs
out
fst
lahf
in
fs
xor
push
sbb
and
rcl
movs
xor
cmp
pop
and
data16
xchg
dec
scas
loopne
xchg
adc
rcr
xchg
lahf
adc
out
jg
or
bound
leave
bound
in
pop
dec
outs
test
cs
push
add
xor
ins
pusha
inc
xchg
mov
fs
jbe
jl
mov
fmul
push
outs
in
fist
jmp
bound
push
adc
(bad)
or
or
xor
cli
mov
out
or
pushf
dec
mov
mov
sbb
shl
cmp
fisttp
sbb
mov
push
cmc
das
ret
adc
xor
jg
pop
out
push
mov
jae
dec
in
mov
cmps
shl
mov
test
arpl
ss
mov
mov
xor
jmp
mov
or
jge
addr16
or
ffree
or
fnstcw
and
jp
leave
inc
inc
push
int
inc
cmc
inc
test
ret
push
jg
xor
jnp
fs
and
retf
ja
mov
cwde
movs
dec
push
dec
lahf
xrelease
ds
popa
arpl
dec
cmps
retf
sub
sub
inc
retf
mov
sub
aas
and
pop
add
nop
dec
aad
mov
dec
mov
xchg
mov
jno
sbb
bound
dec
inc
sbb
inc
sar
rcr
cmps
js
sbb
jnp
ins
mov
pop
ret
dec
cdq
xchg
fwait
adc
inc
rcr
add
sub
and
cmp
and
mov
aaa
pop
adc
imul
ret
push
scas
(bad)
or
stos
push
mov
test
cmp
cli
outs
xor
jp
inc
ficomp
adc
mov
inc
in
ret
push
jg
shrd
pop
cmp
js
xchg
mov
push
(bad)
push
minps
fisub
mov
ins
loop
jae
in
xchg
inc
xor
popa
arpl
dec
cmps
int
and
aas
xor
jg
shl
aas
sub
and
xchg
dec
les
jecxz
xchg
mov
outs
or
xchg
fs
aam
cmp
cld
inc
inc
sbb
test
push
retf
aas
lds
and
jno
cs
out
or
jg
pop
mov
popa
fs
push
or
cmp
stos
pop
push
push
int3
push
jae
lock
sbb
jae
mov
cmps
and
sbb
ret
cmps
mov
xor
xor
add
inc
addr16
pop
xchg
xchg
dec
movs
inc
loopne
sbb
mov
add
fcomp
js
jnp
(bad)
sbb
retf
sbb
xor
stc
and
or
xor
aas
jo
cmp
bound
jae
dec
xchg
test
mov
jns
push
ja
stc
xchg
xor
or
repz
and
(bad)
fbstp
cmp
or
push
cmp
cdq
nop
dec
(bad)
ins
mov
outs
movs
outs
dec
push
mov
xchg
pop
cmp
enter
push
inc
cld
inc
inc
sbb
mov
push
in
aad
add
add
jge
ins
cmp
pop
xchg
lahf
mov
mov
pop
push
jno
push
pop
mov
push
or
jne
xchg
ret
dec
and
jmp
mov
pop
xor
xor
mov
out
(bad)
mov
jecxz
mov
xchg
js
dec
push
retf
bound
fnsave
or
stc
jg
outs
stc
shl
adc
movs
jo
or
jl
push
mov
and
retf
jne
pop
xchg
xchg
test
mov
gs
mov
sbb
sahf
lods
daa
adc
retf
xchg
mov
sub
push
pop
sbb
imul
sar
pop
lods
push
(bad)
or
cmp
int3
cmp
inc
inc
mov
cwde
push
mov
or
and
imul
mov
push
or
pushf
stos
mov
test
retf
mov
test
mov
sub
sbb
daa
and
sbb
ins
ror
mov
das
pop
adc
add
lea
outs
mov
or
sti
iret
cmp
mov
adc
xchg
std
inc
aaa
ror
pop
hlt
pushf
push
aam
std
sub
and
jnp
ss
(bad)
adc
jb
inc
xchg
mov
inc
into
inc
or
lods
mov
adc
push
jmp
push
inc
aaa
ins
mov
test
es
loop
mov
pop
sbb
jns
push
xchg
pop
rcl
sub
enter
mov
jp
or
push
fs
jle
out
imul
pop
sub
sub
push
stos
movs
cmps
jmp
popf
cmps
mov
fucomi
cmp
fisubr
loop
icebp
pop
pop
cwde
neg
fs
cdq
sub
dec
movntps
cli
stos
mov
cmp
pop
gs
inc
cmps
sub
ja
fild
xchg
mov
in
ds
xchg
sbb
mov
xchg
jmp
pop
pop
icebp
and
loope
push
stc
push
in
enter
pusha
out
shl
xor
dec
jecxz
inc
ror
pop
fnstcw
sub
jmp
dec
retf
outs
call
cwde
pop
mov
sub
dec
ss
call
cmp
ins
ror
mov
sub
sbb
jb
jo
xchg
pop
sar
ret
(bad)
and
inc
sti
lds
shl
inc
cmp
dec
outs
gs
inc
push
pop
hlt
mov
inc
(bad)
pop
(bad)
push
add
ds
call
dec
xchg
test
je
inc
or
xchg
mov
in
push
outs
jmp
fwait
repnz
inc
cmps
cmp
dec
sbb
add
cmps
out
xchg
cmp
adc
adc
jbe
in
aam
lahf
(bad)
sub
sub
mov
scas
inc
sbb
pop
sbb
popa
inc
pop
enter
loop
pop
(bad)
push
mov
aad
pop
adc
addr16
xor
push
add
inc
or
cdq
mov
cwde
mov
js
jno
sub
test
or
push
outs
mov
lods
pop
adc
rcr
mov
sub
pop
pop
xor
arpl
nop
test
sub
xchg
mov
imul
stc
dec
cmp
inc
outs
inc
fimul
pmulhuw
(bad)
or
cmps
js
sbb
jg
dec
xchg
mov
inc
mov
mov
mov
mov
fldenv
test
cmp
inc
pop
ins
mov
mov
outs
aad
stos
cmps
mov
bndstx
push
packsswb
mov
add
dec
call
sbb
mov
pusha
adc
in
inc
push
pop
idiv
inc
aam
test
push
and
jnp
xor
jl
adc
jg
jb
mov
je
inc
pop
jne
mov
and
nop
push
push
jge
push
dec
jmp
pop
ins
sbb
dec
jnp
push
dec
add
ss
inc
jne
pop
or
test
inc
mov
cmps
popa
sti
ret
xchg
adc
shl
cmp
fiadd
sbb
cmps
jnp
inc
jmp
(bad)
sbb
add
ds
int3
adc
jg
fs
mov
pop
mov
popf
mov
mov
dec
fst
fwait
loopne
dec
mov
or
ins
lods
leave
lods
and
ror
mov
cmp
sbb
xor
arpl
mov
or
mov
inc
leave
lds
shl
push
inc
lock
push
sbb
stos
jnp
inc
cmc
xor
push
and
cmp
and
pusha
dec
mov
into
pop
mulps
retf
movs
je
out
out
push
dec
mov
cmp
jb
sbb
daa
adc
fsubp
cmps
mov
and
add
or
jno
inc
mov
test
xchg
jg
inc
(bad)
jmp
scas
movs
xor
(bad)
push
inc
retf
pop
fsubr
sub
push
adc
add
jg
inc
mov
ins
mov
bound
and
xchg
mov
lods
mov
out
jmp
add
or
sbb
and
cmps
fbld
sbb
sbb
jno
imul
mov
lds
shl
push
push
fiadd
sbb
inc
std
pop
loopne
and
jg
inc
mov
out
add
jg
pop
out
push
mov
gs
inc
pusha
pop
sti
lods
mov
fwait
cmps
push
dec
in
fist
loop
add
or
dec
sbb
in
and
sub
and
cmps
mov
pop
sbb
sbb
add
arpl
mov
pop
cmps
dec
clc
std
add
sar
push
dec
retf
sbb
inc
std
sub
or
sbb
pop
push
cmp
ins
inc
into
inc
or
sahf
mov
mov
push
outs
in
jmp
or
or
sub
in
daa
add
sub
pop
cld
into
adc
jno
inc
mov
ror
xchg
mov
popa
loopne
fs
lods
xor
cmp
cli
push
fist
inc
retf
adc
mov
sub
sbb
ss
jae
fs
mov
fwait
xchg
adc
mov
call
mov
lock
dec
fwait
(bad)
cmps
imul
sub
jmp
and
sbb
cs
(bad)
retf
and
and
inc
pop
sub
mov
or
cmp
sti
jmp
xchg
pop
sbb
jmp
inc
ror
sbb
mov
push
enter
or
jbe
sbb
jns
adc
ins
inc
inc
mov
arpl
push
mov
stos
shl
mov
imul
adc
or
sub
lds
jge
enter
dec
ss
pop
jne
add
xchg
pop
ret
jl
or
and
pop
sti
sar
mov
pop
xor
shr
bnd
dec
icebp
push
ins
not
sbb
and
jae
sbb
jl
inc
xchg
mov
dec
into
inc
add
mov
daa
mov
lods
push
pop
fwait
into
scas
je
push
add
sbb
sub
outs
(bad)
int3
or
jno
addr16
sub
inc
ds
int
or
mov
out
cmp
adc
push
pop
hlt
mov
push
(bad)
or
aaa
ja
xor
jl
cmp
inc
dec
mov
mov
jmp
ins
ret
pop
pop
lods
loopne
inc
xchg
clts
addr16
sbb
and
or
(bad)
cmps
xchg
mov
and
sub
mov
ret
jge
clc
adc
(bad)
loopne
clc
mov
imul
(bad)
push
arpl
inc
push
pop
out
push
stc
jae
sub
and
ss
(bad)
popa
or
xor
gs
arpl
fsub
cmps
inc
push
ins
retf
xchg
stc
xchg
cs
lahf
out
and
sbb
movs
sar
and
sub
pop
or
mov
or
mov
lds
xchg
cmp
mov
in
fs
inc
leave
pusha
inc
adc
inc
sar
in
and
jnp
mov
js
push
xchg
je
ins
sbb
xchg
mov
mov
enter
out
xor
ins
lods
loopne
daa
pop
and
push
(bad)
jmp
mov
arpl
jb
mov
into
std
das
mov
xlat
in
sbb
ret
mov
or
dec
pusha
inc
fadd
push
test
daa
(bad)
or
daa
ja
cmp
dec
jae
xchg
jo
inc
or
mov
pop
mov
loope
jae
ret
xchg
inc
test
jnp
ss
mov
lods
and
aas
cmp
rcr
aad
and
push
sbb
sub
mov
ret
push
ret
test
cwde
pop
cmps
push
sti
(bad)
sbb
jmp
repnz
aas
imul
inc
(bad)
sub
mov
inc
stc
sub
cmp
pop
push
fnsave
mov
jbe
inc
mov
inc
mov
popa
inc
lds
dec
xchg
mov
lods
mov
dec
outs
in
fstp
(bad)
lods
imul
push
div
je
jmp
pop
or
sub
nop
jns
dec
mov
add
(bad)
adc
aad
and
(bad)
jno
out
inc
jns
cmc
ins
push
outs
les
shl
add
ss
jg
sub
gs
inc
cmp
xchg
mov
scas
ret
push
lods
cmps
push
fisttp
lods
push
dec
mov
cmp
jg
push
outs
scas
leave
lods
and
inc
ror
mov
adc
jne
adc
cmc
or
(bad)
sbb
mov
sbb
dec
cmp
imul
rol
shl
push
jne
cmp
jl
adc
js
dec
xchg
mov
jno
push
or
mov
and
scas
push
outs
hlt
inc
rcl
adc
inc
push
test
add
cmp
sahf
test
pop
and
sbb
pop
sub
mov
pop
fld
rol
xchg
mov
push
test
and
lods
js
ds
arpl
jbe
inc
in
sub
repnz
test
push
push
add
das
cmp
jg
inc
mov
data16
inc
or
mov
mov
bound
jns
jle
xchg
loopne
je
cmp
dec
packssdw
xchg
lods
daa
adc
cmp
cmps
nop
mov
pop
sub
sbb
sub
mov
ret
outs
movs
ror
xchg
mov
loopne
xchg
mov
dec
cmp
hlt
sbb
std
inc
dec
inc
retf
inc
pop
sbb
cmp
retf
and
es
add
mov
jbe
pop
xchg
lods
inc
mov
gs
push
or
xchg
xchg
mov
mov
inc
outs
fdiv
dec
ins
xchg
mov
mov
test
or
mov
sub
sbb
add
ret
dec
lods
int
test
cld
push
xchg
mov
or
sar
es
dec
cmp
outs
dec
push
lods
inc
push
xor
inc
rcr
jecxz
and
jl
ss
leave
xor
push
dec
xor
in
push
or
cmp
outs
ret
inc
pop
fwait
loop
push
or
jb
xor
out
push
ds
cmp
outs
stos
out
movs
mov
sub
pop
aaa
imul
ret
jle
ror
xchg
stos
push
cmps
popa
std
call
or
mov
push
inc
rcr
pop
hlt
xchg
jge
push
call
aad
and
arpl
es
call
pop
xchg
mov
je
push
pop
xchg
sahf
mov
mov
push
fcom
loop
xor
or
pop
ins
(bad)
out
scas
and
sar
jae
or
imul
movs
sub
push
call
sbb
mov
push
cmp
jbe
inc
shl
pop
adc
mov
adc
test
es
fnsave
mov
enter
pusha
inc
xchg
enter
push
je
inc
js
cdq
xchg
mov
jnp
hlt
ins
shl
xchg
in
push
xchg
and
pop
jge
add
sahf
mov
and
xor
ins
(bad)
movs
add
sub
xor
xchg
push
mov
test
(bad)
sbb
xchg
or
jge
retf
dec
imul
push
or
mov
jae
and
push
es
or
movs
pop
(bad)
sbb
outs
bound
sar
pop
retf
pop
xchg
and
fild
fmul
dec
ins
mov
xor
pop
dec
sbb
das
push
aas
aas
push
jl
retf
nop
xchg
mov
dec
sbb
and
sub
mov
stc
or
int3
mov
clc
lds
pmuludq
popa
pop
out
pop
push
inc
leave
dec
inc
pop
fisttp
pop
(bad)
or
push
jno
push
lahf
jle
sbb
ins
dec
inc
mov
addr16
inc
adc
xchg
mov
icebp
pop
popa
fwait
test
push
stos
adc
imul
pop
inc
add
jae
cwde
push
retf
xchg
xchg
mov
push
fnstenv
or
cmps
sbb
cmp
data16
in
inc
imul
mov
xlat
sub
sub
jne
clc
xor
jge
inc
lahf
(bad)
jae
fisubr
in
dec
maxps
mov
outs
hlt
ins
cld
push
ins
lahf
fld
addr16
ds
scas
in
(bad)
pop
aaa
sub
dec
hlt
enter
sub
and
or
adc
cwde
jbe
pop
(bad)
pushf
or
test
push
shl
sbb
inc
sbb
fs
sbb
xor
push
or
mov
(bad)
cmp
js
dec
xor
loopne
or
mov
scas
cld
sub
add
push
pop
xchg
(bad)
not
cmp
jno
cmp
out
xor
dec
es
mov
dec
sub
cmovnp
pop
sub
mov
aad
xchg
mov
sbb
mov
xor
int3
outs
dec
std
ins
jne
inc
inc
push
inc
test
lds
es
jl
or
jp
aaa
fwait
mov
js
inc
or
xchg
mov
cld
adc
add
push
je
loopne
jp
xor
dec
push
scas
push
add
rol
xchg
sub
dec
lods
xchg
pop
into
jge
repz
rcl
sbb
test
or
mov
push
sub
outs
pop
sub
jl
gs
cs
push
sbb
es
jns
adc
jns
xor
clc
bound
xor
pop
nop
xchg
mov
mov
enter
in
push
mov
sbb
sub
cmp
and
mov
cmps
xchg
and
sbb
adc
xchg
pop
xlat
pop
mov
sbb
enter
mov
pusha
aas
jo
jge
retf
inc
jbe
cld
jo
push
iret
mov
inc
test
and
jb
adc
push
cdq
cmp
jg
dec
cmp
ret
push
loopne
mov
repnz
push
ins
imul
pop
ins
fwait
loopne
je
cmp
inc
inc
or
mov
sbb
cli
mov
cmp
pop
pop
and
das
repnz
push
mov
or
fst
push
test
imul
cld
push
imul
call
sub
(bad)
jl
adc
pusha
pop
mov
gs
retf
push
or
xchg
mov
mov
dec
fist
mov
and
or
jo
ins
mov
mov
push
cmp
inc
ret
cmps
mov
push
and
push
lods
loopne
lds
(bad)
ud1
(bad)
push
mov
mov
pop
sub
bound
retf
pop
sti
stc
jne
push
jmp
add
add
jg
inc
call
out
or
mov
rcl
in
not
fwait
jecxz
inc
sub
pop
aaa
or
push
aas
das
or
cmps
mov
jp
or
pop
cmp
xchg
mov
stc
or
mov
cli
xchg
ins
cmp
std
pop
sub
bound
cmc
push
pop
pop
hlt
mov
inc
fstp
shl
adc
ins
(bad)
adc
pop
inc
mov
jae
icebp
addr16
lahf
mov
mov
pop
xlat
data16
add
sbb
and
sub
arpl
sub
sub
and
nop
dec
retf
cld
push
cwde
std
pop
cmps
inc
sti
rcr
mov
mov
jnp
fld
fiadd
sbb
ins
stc
sub
push
and
jg
sbb
jge
xor
jge
mov
mov
mov
lds
test
in
shl
mov
mov
adc
pop
inc
push
jne
xchg
aad
push
aas
pop
and
enter
and
sub
ja
jne
push
call
add
leave
(bad)
sbb
mov
cmp
stc
pop
cmp
dec
pop
inc
fiadd
pop
hlt
sub
fbld
lds
and
jnp
sbb
dec
in
adc
pop
jo
sahf
xchg
inc
mov
push
fs
inc
daa
dec
xchg
mov
mov
inc
outs
in
shl
arpl
cmp
pop
inc
adc
daa
add
ror
mov
cmp
push
cmp
pusha
loopne
push
ret
je
test
std
push
mov
mov
mov
dec
das
out
pushw
jecxz
gs
fisttp
aas
into
cmp
pusha
call
adc
jb
ins
call
mov
xchg
mov
pop
test
repz
lods
out
sub
xor
es
aam
mov
cmp
ds
xor
ins
call
or
ffree
push
call
cmp
cli
push
pop
loop
inc
pop
test
add
adc
jbe
pusha
xor
mov
movs
and
cmps
dec
push
jne
inc
jo
in
imul
or
or
out
and
cmp
leave
cmps
mov
push
sub
pop
dec
xor
or
cld
push
fwait
or
(bad)
rcr
rol
push
cmp
inc
pop
data16
inc
psrld
and
jg
add
xor
jge
sub
adc
int
push
dec
test
daa
mov
inc
outs
in
enter
call
or
sbb
xchg
test
sbb
and
int3
cmps
leave
test
pop
or
adc
je
pusha
mov
repnz
sti
ficomp
xchg
jno
idiv
retf
bound
test
push
sbb
cmc
jnp
xor
sub
jp
add
push
fistp
xor
jg
inc
test
fs
jp
cdq
test
mov
add
push
jae
test
inc
aas
jl
aam
dec
jnp
sbb
mov
mov
or
jge
lods
mov
inc
mov
push
xchg
scas
jnp
inc
lock
cwde
mov
jl
and
dec
cmp
loope
and
and
in
and
jnp
xor
imul
mov
or
xchg
xchg
mov
mov
aam
pop
xor
je
cmp
mov
sbb
into
mov
sbb
sbb
and
imul
ror
in
xchg
pop
cmps
dec
mov
adc
mov
and
inc
dec
inc
fisttp
sbb
xchg
or
jae
or
or
adc
dec
mov
jmp
push
xchg
mov
pop
mov
mov
test
fisub
sub
push
arpl
cmp
xor
inc
lods
out
and
and
and
fsubr
cmp
pop
pop
cmp
ja
xchg
pop
out
jle
repnz
xor
xchg
xor
push
adc
outs
outs
inc
leave
fs
or
mov
icebp
sub
daa
dec
jb
int
cmps
jne
pop
xor
ins
mov
and
ret
pop
xchg
mov
push
mov
fiadd
xchg
xacquire
or
or
test
movs
movs
scas
xor
sub
or
add
imul
icebp
add
pop
aad
sbb
lds
gs
jbe
inc
xlat
dec
pop
pop
lock
jns
push
fild
(bad)
add
(bad)
sti
sbb
addr16
xor
imul
or
call
mov
(bad)
fbstp
push
and
cmp
bound
ins
call
and
fld
push
prefetcht2
push
sub
in
cs
jge
(bad)
cmp
sti
loop
sbb
cmp
bound
push
inc
sbb
mov
inc
in
(bad)
sub
adc
and
jp
pop
test
push
idiv
pop
call
mov
neg
mov
or
jb
sbb
and
sub
stos
xchg
cdq
cmp
sub
sbb
sub
mov
fild
into
cmp
jmp
aaa
mov
mov
jnp
xchg
sbb
jmp
out
jl
cmp
sbb
es
inc
pop
inc
xchg
jo
inc
add
xchg
lods
call
imul
jmp
dec
or
lods
out
and
and
sahf
movs
cs
sub
sbb
sub
fstp
repnz
sbb
mov
or
mov
or
div
rcl
inc
stos
dec
push
sbb
hlt
jle
inc
in
sar
or
movs
push
adc
mov
je
jp
jl
cmps
mov
fwait
stos
pusha
push
jno
and
cwde
fs
or
push
push
sar
cs
fnsave
cmp
add
sub
xchg
sti
and
sti
retf
mov
imul
retf
jb
push
retf
push
rol
iret
sub
push
call
add
inc
dec
xchg
mov
fs
in
popf
lods
call
ins
xchg
jno
push
pop
mov
cmp
push
pusha
push
daa
add
stos
int
cmps
xchg
and
sub
jae
jne
fs
xchg
dec
ret
outs
mov
or
jmp
and
mov
and
movs
imul
std
data16
inc
sbb
mov
inc
std
sub
sbb
add
es
xlat
add
jl
inc
out
jno
icebp
data16
inc
movaps
jmp
fwait
cmps
outs
imul
test
cmp
outs
mov
cmp
push
mov
and
sbb
pop
and
popa
mov
mov
push
mov
sti
(bad)
push
scas
mov
push
lods
imul
bound
fs
sbb
sbb
cmp
adc
es
sti
imul
mov
movs
in
bound
inc
or
test
cwde
fild
in
rcl
test
cmp
call
sbb
int3
mov
xchg
pop
pop
popa
sub
mov
fcomp
or
jmp
pop
mov
xchg
xor
pusha
cmp
inc
sbb
popa
pop
pop
in
push
test
(bad)
cmp
or
ss
jno
inc
or
mov
inc
or
nop
mov
jmp
repz
ins
pushf
int
inc
xchg
sub
bound
outs
lods
ret
mov
and
lahf
mov
jge
cmp
sub
cwde
pop
sar
or
mov
sbb
js
or
jl
fdiv
push
pop
ret
icebp
outs
cli
and
push
pop
or
and
xor
ins
cmp
or
repz
push
pop
loop
add
and
imul
ror
ror
sub
pop
inc
push
sub
ret
jge
out
test
sbb
test
and
(bad)
jl
(bad)
outs
imul
jle
ret
mul
and
sub
adc
movs
jle
and
dec
xchg
mov
fs
jb
cdq
test
sti
mov
imul
retf
push
pop
jecxz
add
sbb
inc
or
mov
test
and
shl
push
imul
mov
hlt
add
(bad)
sbb
jp
or
fs
adc
aas
inc
sbb
xchg
jne
inc
test
aad
xor
jle
pop
mov
fadd
es
pop
xor
imul
or
mov
lods
mov
dec
imul
aad
dec
xchg
loop
je
adc
jnp
xor
in
test
es
stos
mov
movs
mov
sbb
add
addr16
loopne
ret
jle
(bad)
or
test
sbb
(bad)
dec
cmp
dec
outs
inc
neg
or
mov
sub
sub
cmp
sbb
pop
pop
pop
cmp
(bad)
pop
or
xchg
mov
sahf
mov
outs
in
push
std
jge
test
aaa
or
sbb
and
add
and
mov
daa
inc
sub
or
jno
mov
sti
or
repz
xchg
sahf
sbb
rcl
cmp
(bad)
inc
cmp
bound
jecxz
inc
sbb
mov
push
lea
jl
add
inc
xchg
jo
cmp
inc
aaa
xchg
mov
inc
jmp
call
imul
mov
aas
or
pop
or
lods
(bad)
mov
and
out
cmps
(bad)
and
sub
sub
in
jge
addr16
aam
xchg
stos
jae
xchg
pop
push
rcl
jge
test
inc
in
ds
sbb
mov
icebp
push
retf
push
ds
jl
ss
ins
jmp
or
inc
test
into
inc
or
xchg
mov
lods
stos
jb
idiv
push
and
aas
add
ja
fwait
loop
dec
arpl
sub
hlt
fldcw
sub
pop
imul
xchg
pop
idiv
out
cwde
pushf
jle
gs
(bad)
adc
clc
fstp
xor
outs
inc
call
dec
inc
fst
adc
mov
jae
cmp
push
push
jb
cld
and
jne
inc
xchg
retf
push
test
jno
in
inc
or
xchg
mov
cdq
fbld
cld
pop
cli
push
dec
mov
sub
jb
sbb
and
adc
and
(bad)
cmps
mov
add
and
pop
xor
arpl
sti
xor
int
and
ror
cmp
inc
dec
inc
leave
jae
sbb
stc
jnp
inc
jmp
int
mov
ins
push
inc
fwait
xchg
inc
test
pop
punpcklwd
lock
test
repz
pop
sahf
(bad)
mov
or
xor
daa
adc
sar
pop
or
pop
xor
lods
mov
les
loope
xchg
mov
inc
lock
sbb
shl
adc
std
inc
sbb
inc
inc
pop
out
push
inc
iret
sub
push
es
jmp
mov
(bad)
adc
push
jo
mov
ja
inc
cvtps2pd
lds
test
hlt
dec
enter
loop
imul
outs
mov
scas
daa
ss
sbb
jl
mov
pop
sub
das
pop
and
xor
pushf
pop
retf
push
mov
add
repz
sahf
lds
sbb
test
sbb
jl
scas
pusha
jo
ret
repnz
sub
cmp
xor
js
adc
mov
data16
jo
jl
loope
lods
scas
mov
push
je
push
pop
fwait
jecxz
test
sbb
or
call
es
mov
mov
push
pop
sbb
outs
pop
and
mov
or
sti
loope
test
and
mov
imul
inc
outs
pop
cli
dec
inc
push
imul
sub
sbb
sbb
jg
inc
mov
inc
fimul
pop
mov
cmps
sub
imul
adc
or
push
sbb
aad
and
sbb
pop
stos
fbld
sbb
adc
jns
jae
nop
push
jmp
test
sbb
fucom
push
out
xor
test
imul
push
jle
cld
inc
js
fcomp
pop
lds
dec
adc
inc
mov
pop
inc
inc
fwait
(bad)
arpl
dec
xor
iret
mov
mov
add
jne
push
je
loopne
dec
mov
or
sbb
ror
and
rcr
mov
sbb
pop
and
dec
mov
xor
sahf
cmc
pop
movs
xor
rcr
lds
add
nop
popa
ds
lock
ja
jecxz
inc
sbb
stos
ins
bnd
aas
ret
push
add
push
fst
lods
or
sbb
jnp
cmp
sub
shl
mov
dec
inc
test
xor
popa
cmp
das
popa
cmp
and
or
cmp
retf
push
mov
pop
mov
test
cmp
jnp
out
jl
fldenv
sbb
stos
push
retf
daa
js
and
jg
dec
test
bound
or
mov
stos
shl
std
cmps
jne
out
jmp
movs
je
cmp
inc
jne
pop
lods
jecxz
daa
adc
(bad)
retf
adc
and
ins
out
mov
push
cmps
push
sti
retf
or
mov
xor
mov
idiv
pop
fdivr
adc
jge
aaa
pop
rol
jno
adc
jg
aaa
mov
inc
(bad)
div
das
inc
sahf
mov
add
dec
jmp
pop
cwde
nop
fwait
outs
mov
xor
hlt
call
fidivr
inc
pop
cmp
adc
ins
int
pushf
(bad)
test
mov
or
sub
jnp
sbb
dec
outs
pop
loope
push
xor
mov
inc
std
sub
jle
jno
xlat
sbb
push
jo
in
(bad)
fist
fs
sti
rol
lds
retf
jne
icebp
xchg
scas
dec
xchg
jle
sbb
add
dec
xor
xchg
mov
push
sbb
arpl
repnz
xchg
fwait
push
or
cwde
outs
xor
repz
dec
ret
cmp
push
inc
icebp
or
or
pop
mov
push
jb
mov
std
popw
pop
mov
ret
or
xchg
pop
dec
retf
pop
jge
in
movs
xor
xor
jp
mov
push
ins
in
mov
das
or
cmp
loop
jmp
movs
and
loop
sbb
loopne
adc
add
jg
mov
xor
xor
sti
mov
xor
push
(bad)
aas
nop
push
les
jl
jo
xchg
gs
fist
cmc
push
es
mov
mov
aad
dec
in
imul
add
cmp
xlat
mov
and
loop
mov
adc
gs
cwde
pop
lods
imul
sbb
aaa
out
in
push
cmps
test
inc
inc
sbb
pop
or
sbb
cli
pop
jns
xlat
lods
push
iret
das
(bad)
push
idiv
adc
adc
js
jns
lea
ror
push
in
pcmpeqb
movs
lods
mov
cmp
dec
fsub
mov
scas
dec
repz
pop
dec
and
stos
xchg
aam
ds
andps
xchg
lods
inc
dec
pop
and
ins
and
xchg
dec
icebp
push
fwait
repnz
xlat
mov
mov
xchg
add
push
push
ja
outs
inc
sub
xchg
jns
xor
xor
or
jae
repnz
push
push
bound
adc
in
inc
aas
push
mov
push
cmps
mov
int3
data16
xor
mov
adc
add
popa
hlt
retf
lods
movs
in
ins
das
adc
ins
sub
dec
mov
or
inc
jmp
pop
pop
fnsave
push
push
enter
stc
xor
xlat
sahf
adc
lock
add
arpl
cmp
pop
dec
dec
jmp
pop
ret
jmp
mov
ret
mov
push
test
sti
ja
inc
xor
adc
int
or
xor
push
sbb
out
fwait
xchg
das
pop
inc
pop
and
call
cmps
mov
leave
outs
movs
call
add
adc
push
popa
inc
aad
push
and
mov
or
or
adc
push
mov
std
push
push
or
jg
jmp
jecxz
mov
mov
inc
push
lock
(bad)
sub
cmp
or
sbb
aas
push
dec
or
mov
jbe
pop
imul
inc
adc
mov
in
fsubr
pop
xchg
test
aad
aam
imul
in
dec
aad
pop
inc
mov
stos
pop
repz
aas
mov
or
js
xor
dec
pop
jbe
leave
jbe
int
push
enter
jecxz
mov
popf
loopne
cld
mov
dec
mov
sub
repnz
xor
ror
pop
stos
(bad)
movs
in
ins
sbb
add
pop
sbb
test
mov
shl
fwait
mov
neg
xchg
mov
jl
mov
or
addr16
aad
pop
dec
fdiv
imul
mov
aam
add
or
xor
popf
mov
call
pop
movs
mov
add
xchg
pusha
pop
xchg
push
shr
mov
sbb
xor
xor
add
ret
sbb
sub
cmp
aas
push
sbb
xor
test
scas
mov
xor
not
sti
(bad)
push
or
imul
pop
aaa
mov
xor
add
xchg
inc
lds
jle
push
ins
push
nop
mov
fs
add
cwde
cmps
test
and
movs
pop
pop
hlt
imul
jno
out
sub
or
pop
call
push
inc
fsincos
mov
or
adc
pop
and
test
repnz
mov
aad
jae
retf
xor
mov
cld
sbb
jp
pusha
mov
push
sbb
mov
add
or
or
push
inc
jae
loop
inc
shr
jb
push
or
mov
scas
inc
inc
(bad)
jb
push
and
clc
mov
mov
push
pop
cmps
xchg
mov
adc
sahf
mov
outs
push
add
ds
mov
mov
push
scas
aaa
shl
and
jns
pop
xor
dec
pop
xor
inc
jle
sar
and
sbb
add
xor
jbe
mov
jbe
inc
xor
mov
das
loope
inc
pop
out
scas
fs
xchg
ror
push
dec
sbb
shl
push
inc
retf
icebp
scas
cmps
fwait
and
pop
sbb
jbe
in
into
adc
fild
nop
mov
ins
(bad)
ja
mov
push
repz
xor
inc
sti
pop
push
push
repz
jg
outs
repnz
jbe
jae
fisub
int
cmc
xor
xchg
test
jbe
dec
sbb
sahf
mov
popf
loop
scas
fild
pop
xlat
jae
inc
dec
(bad)
out
inc
cmc
sub
pusha
ja
xchg
shl
or
leave
popf
daa
je
and
pop
sbb
or
mov
dec
mov
mul
sub
scas
or
mov
bound
out
bound
stos
pop
push
sub
imul
aad
and
push
mov
jg
add
scas
mov
cld
dec
add
mov
lds
(bad)
mov
retf
jnp
mov
sti
dec
xchg
or
inc
push
outs
mov
aaa
push
js
std
mov
mov
xor
sub
ja
mov
in
add
pmulhuw
jp
pop
out
jp
sti
sbb
jmp
push
xor
push
enter
(bad)
xor
bound
or
mov
fmul
dec
jne
push
rol
popf
sar
push
mov
push
inc
mov
or
or
retf
mov
cdq
pop
arpl
arpl
imul
push
fwait
mov
jle
mov
add
stc
pop
and
jae
bound
mov
imul
jo
xlat
and
jbe
xchg
pushf
ja
imul
push
dec
xchg
pop
(bad)
repnz
inc
out
aad
xor
xor
js
xchg
sahf
add
or
or
jne
sbb
push
imul
sub
or
in
pushf
(bad)
push
enter
sub
cwde
and
(bad)
lea
clc
pop
xor
jge
out
je
pop
in
(bad)
pop
xor
les
add
addr16
push
lea
lea
(bad)
xor
pop
loop
xchg
fiadd
and
or
ja
cwde
aad
dec
mov
ds
inc
imul
lahf
add
sub
scas
test
pop
xor
data16
movs
out
rcl
cwde
xor
test
ds
xchg
mov
imul
hlt
dec
inc
inc
fiadd
pop
ret
mov
mov
adc
xor
jle
adc
inc
inc
xchg
mov
je
push
(bad)
xchg
xchg
fwait
call
outs
in
out
pop
jl
loopne
fs
cmp
jp
add
and
cmp
or
enter
daa
pop
sub
and
jno
outs
cwde
nop
pop
ret
jbe
out
or
sti
lds
fist
dec
cmp
bound
retf
pop
clc
mov
inc
clc
or
cmp
add
dec
mov
jmp
sub
inc
mov
dec
fs
inc
or
call
cmps
push
dec
rcr
push
pop
(bad)
clc
add
or
sbb
daa
adc
es
xlat
shr
sub
add
xchg
cs
jle
div
mov
(bad)
sbb
out
imul
fiadd
sbb
mov
arpl
jnp
xor
jl
adc
pusha
dec
xchg
mov
je
push
or
lds
jl
in
leave
push
ins
fwait
loopne
push
stos
cmp
jne
adc
out
and
cmp
and
enter
or
pop
adc
cwde
pop
ret
jne
loop
xchg
(bad)
pop
mov
xchg
call
or
gs
in
bound
repz
push
pop
in
push
test
(bad)
sub
add
cs
jmp
inc
cdq
mov
inc
in
or
call
cmps
push
pop
hlt
ins
fst
mov
add
add
pop
mov
lods
daa
sbb
adc
stos
xchg
mov
add
pop
sub
xchg
sub
outs
mov
push
xchg
sbb
mul
push
inc
fiadd
sbb
jl
sub
push
or
jnp
xor
jp
adc
jb
xchg
mov
je
dec
add
xchg
cmps
mov
dec
outs
in
ficom
fwait
loopne
inc
mov
or
adc
in
and
cmp
add
mov
xor
pop
add
nop
pop
ret
je
loopne
xchg
mov
jno
lds
mov
xor
rol
add
retf
bound
fisub
stc
mov
inc
inc
sub
add
and
jg
inc
in
jae
clc
jle
call
xchg
mov
mov
fst
xchg
lds
inc
inc
sbb
daa
push
dec
sbb
ins
xlat
fsubr
or
pop
cmp
xchg
pop
shr
sub
cwde
pop
cmps
dec
adc
xchg
mov
imul
repnz
fiadd
hlt
mov
jl
sub
pop
or
jnp
xor
jg
adc
pop
push
xchg
mov
je
or
mov
rcl
and
mov
in
rcl
loopne
inc
test
or
cmp
in
and
cmp
aaa
ins
in
mov
sub
sub
jno
inc
mov
pop
ret
jl
stc
or
sti
lds
xchg
cmp
std
arpl
retf
bound
leave
dec
push
pop
(bad)
stos
jl
inc
(bad)
pop
(bad)
push
add
sti
adc
jg
inc
in
jae
clc
adc
or
mov
lods
test
push
imul
xchg
enter
cmp
push
inc
sbb
daa
add
cmp
ins
sar
movs
mov
and
das
sbb
pop
ds
arpl
mov
add
scas
pop
cmps
dec
fld
sbb
shl
cmp
jb
inc
fiadd
push
ret
frstor
sub
or
sub
ss
jns
adc
push
push
xchg
mov
je
imul
xchg
xchg
mov
dec
outs
in
repnz
dec
fwait
loopne
inc
icebp
cmp
jp
adc
out
cs
ror
mov
sub
xor
jno
ins
mov
mov
pop
cmps
push
sti
lds
mov
ins
cmp
sti
jp
retf
bound
rep
push
pop
in
push
test
int
add
adc
jl
and
jg
inc
mov
jne
mov
mov
sub
sar
push
pop
mov
add
add
sbb
daa
pop
or
es
sar
push
cmp
sbb
add
arpl
mov
add
dec
dec
sbb
mul
push
inc
fiadd
pop
ret
test
sub
add
pop
jnp
xor
and
push
xor
gs
xor
call
push
outs
in
fist
fwait
loopne
jnp
cmp
jb
cmp
out
cs
hlt
enter
cmp
pop
adc
cwde
pop
ret
ja
aam
xchg
mov
inc
sti
lds
fimul
jg
in
bound
ficomp
pop
in
pop
test
lds
add
rol
jl
ss
mov
mov
dec
dec
in
or
pushf
mov
mov
pop
fst
mov
add
or
mov
lods
daa
adc
sub
ins
rcr
test
mov
xor
arpl
mov
and
repz
xchg
mov
imul
(bad)
jb
inc
fiadd
sbb
mov
jae
sub
or
jnp
xor
js
adc
push
push
jmp
xchg
xchg
mov
(bad)
shl
fist
in
lock
dec
fwait
loopne
push
stos
cmp
jp
push
ins
mov
mov
add
enter
sub
sub
xor
adc
jge
jecxz
xchg
(bad)
dec
movs
push
sti
lds
test
dec
cmp
cld
sbb
(bad)
pop
sti
mov
add
push
add
adc
jl
sbb
pusha
inc
stos
mov
mov
push
je
inc
or
mov
lods
test
daa
lods
cmps
push
imul
mov
add
add
sbb
daa
pop
das
sub
ins
rcr
mov
sub
sbb
gs
lds
mul
mov
pop
cmps
inc
int
sbb
mul
push
inc
fiadd
pop
hlt
mov
ins
mov
add
jnp
ss
jnp
adc
arpl
mov
je
pop
or
test
adc
outs
in
retf
pop
dec
fwait
loopne
fs
cmp
jl
or
in
and
cmp
enter
push
pop
sub
push
push
mov
mov
or
sti
lds
xchg
mov
dec
cmp
std
jnp
retf
bound
retf
pop
repz
imul
inc
(bad)
cmp
add
cmp
jg
inc
xchg
inc
fiadd
pop
xchg
xchg
mov
mov
fst
mov
sti
jnp
push
pop
add
mov
stos
and
cmp
or
mov
sub
cs
xor
dec
mov
test
mov
movs
popa
sti
lds
xchg
cmp
std
pop
cmp
bound
in
pop
push
pop
repz
sub
sub
add
mov
jmp
inc
cld
mov
pop
ret
pop
popf
lods
test
inc
ins
ret
push
pop
xchg
in
inc
xchg
adc
jno
sbb
hlt
fsub
adc
enter
and
pop
pop
push
add
mov
hlt
or
jmp
push
xchg
test
or
sbb
push
dec
in
push
and
cmc
push
in
or
or
add
sti
les
or
addr16
push
in
push
xchg
gs
loopne
or
mov
daa
mov
scas
push
pop
lods
in
inc
xchg
sbb
jno
sbb
div
sbb
movs
sahf
and
and
dec
and
pusha
(bad)
in
iret
dec
movs
icebp
or
jmp
push
popf
mov
add
movs
push
cmp
(bad)
ins
cmp
jb
inc
fst
push
ret
cmc
inc
fild
retf
xor
stc
adc
jne
add
jl
push
shr
inc
sbb
cmp
mov
ins
out
fnsave
mov
add
sub
pusha
call
aaa
pop
rol
mov
cmp
cmp
push
xchg
jl
repnz
push
mov
adc
mov
cmp
(bad)
jno
cmc
gs
fdiv
push
push
rcr
sub
push
adc
push
mov
inc
push
jl
ins
xchg
mov
mov
inc
sbb
mov
mov
pop
fldcw
dec
mov
add
add
mov
test
and
sbb
adc
mov
enter
or
ret
mov
sbb
mov
cmp
bound
ficom
sbb
stos
jg
jae
pop
lds
mov
adc
jl
dec
xchg
mov
jbe
inc
add
jecxz
scas
(bad)
(bad)
and
imul
add
sbb
popa
lods
out
and
loop
mov
cmp
or
sar
setne
shl
mov
or
mov
cmp
ins
cmp
jb
inc
fild
adc
pushf
dec
cmc
inc
cmc
sub
cmp
push
std
add
jb
adc
xchg
mov
mov
inc
sub
xchg
and
imul
add
or
or
idiv
sub
in
mov
sbb
or
xor
jae
test
mov
or
cmps
pop
fild
stos
push
xchg
movs
ss
mov
cmp
out
push
inc
aad
and
hlt
mov
arpl
cmp
or
add
sti
xor
and
push
test
jne
fisub
pop
in
xchg
xchg
xchg
mov
and
mov
cmc
jns
pop
jl
jecxz
inc
test
jb
and
mov
scas
xor
sub
imul
cmps
mov
sub
pop
outs
push
add
mov
fimul
xchg
mov
scas
push
xchg
xchg
ss
or
jb
inc
fild
ror
sub
push
ss
(bad)
cmp
jl
dec
xchg
mov
mov
inc
jae
in
mov
lods
mov
ins
loope
fld
mov
add
push
inc
push
or
out
and
cmp
nop
cmps
mov
sbb
and
popa
cmp
xchg
dec
in
jnp
test
xchg
jo
rcr
mov
cmp
(bad)
xchg
or
sbb
stc
inc
imul
pushw
hlt
mov
ins
iret
sub
push
and
add
jno
add
jl
pop
xchg
test
shl
push
or
scas
scas
shr
mov
pop
cli
push
pop
loop
mov
jbe
sbb
hlt
stos
and
and
mov
or
adc
jge
jae
in
pop
(bad)
outs
mov
or
int
sbb
mov
sub
sti
push
cmp
inc
sbb
stos
jg
push
out
push
lds
or
frstor
and
push
movs
mov
push
retf
jp
sub
xchg
scas
call
push
jns
push
push
mov
mov
or
je
sbb
and
sbb
mov
cmp
ds
cmp
inc
lods
test
mov
push
in
js
inc
stc
mov
xchg
inc
cmp
xchg
jb
inc
fist
add
lahf
jg
dec
std
sub
or
test
sbb
mov
jo
inc
pop
pop
add
mov
ficom
out
in
inc
icebp
cmp
push
sbb
hlt
lods
and
and
mov
sub
sub
pop
or
nop
(bad)
sar
add
add
mov
or
ror
sbb
clc
outs
imul
dec
sbb
mov
dec
test
sbb
add
jmp
(bad)
jl
adc
jl
push
xchg
pushf
push
mov
jp
push
test
daa
mov
retf
pop
pop
mov
add
add
push
outs
mov
test
and
lea
and
push
pop
ror
(bad)
or
call
ss
mov
sub
push
inc
fild
or
lahf
jne
inc
shr
iret
push
adc
xor
ins
pusha
inc
xchg
mov
popa
fiadd
dec
test
sub
jns
pop
jl
out
add
sbb
sbb
and
sbb
(bad)
mov
sbb
and
inc
sub
sar
or
clc
(bad)
push
fwait
xchg
xor
mov
cmp
ins
xor
jb
inc
fdiv
adc
dec
shr
aad
xor
imul
xor
xchg
scas
push
mov
inc
add
xchg
aas
lods
mov
ins
out
outs
aam
ins
sahf
fld
jb
cmp
sub
loopne
mov
sahf
xor
cmp
or
xchg
ins
shl
adc
int
sbb
lds
push
shl
dec
in
imul
and
mov
pop
lds
es
imul
inc
xchg
mov
jnp
or
xchg
mov
mov
pop
outs
in
iret
push
ins
sahf
fld
jb
or
jecxz
add
sub
mov
pushf
and
es
je
popa
mov
cmps
aad
xchg
test
popa
jmp
push
xchg
xchg
ss
or
ins
sbb
bound
fldenv
pop
test
add
jmp
(bad)
jg
adc
push
push
xchg
mov
add
inc
or
mov
scas
test
sub
ret
push
jl
loop
je
cmp
jb
jae
mov
inc
es
call
popa
sub
sub
pop
sub
sar
fistp
xchg
pushf
and
or
mov
outs
cmp
out
sbb
jno
dec
ficom
aas
rcr
sub
push
xor
mov
jge
inc
xchg
mov
jo
inc
sbb
mov
mov
fst
pushf
fist
jg
outs
call
and
xchg
popf
sub
cmp
jge
bound
je
nop
pop
mov
nop
stc
pop
mov
jmp
push
xchg
mov
sub
mov
cmp
enter
inc
inc
inc
fld
addr16
xchg
arpl
sbb
or
add
std
sbb
ins
clc
sbb
or
pop
stos
mov
jb
inc
sbb
mov
push
mov
test
test
jb
outs
mov
test
ss
int3
xchg
sub
pop
pop
jne
pusha
(bad)
mov
fimul
xchg
pushf
pop
mov
call
xor
rcr
cmp
out
sub
fidiv
or
pushf
ins
cmc
inc
test
aad
xor
mov
ret
ds
arpl
inc
test
jp
push
xchg
xchg
mov
pop
push
pop
lahf
in
inc
xchg
sbb
push
inc
sbb
sub
sub
and
cmps
lea
pop
sub
dec
xor
pusha
cmp
or
repz
xchg
mov
jle
mov
ins
(bad)
inc
ficom
das
rol
pop
fisttp
adc
js
adc
jl
aaa
xchg
mov
mov
push
push
xchg
xchg
mov
mov
fst
out
jecxz
pop
mov
bound
inc
mov
sbb
mov
cmp
or
jno
addr16
out
movs
lock
call
ss
mov
cmp
(bad)
dec
cmp
bound
in
push
inc
pop
loope
jg
arpl
sub
or
es
jg
add
jne
push
stos
mov
je
push
add
mov
lods
mov
ins
out
fst
mov
sub
inc
sbb
and
and
mov
cmp
das
pop
xor
test
jp
fild
repz
lods
and
fnstenv
adc
(bad)
imul
inc
pop
(bad)
sub
sbb
add
int3
add
ins
std
imul
mov
jno
inc
or
lods
test
daa
mov
not
mov
mov
mov
or
sbb
daa
push
inc
cmp
mov
inc
sub
ds
mov
adc
add
mov
and
(bad)
shr
add
push
out
push
imul
push
pop
div
jg
inc
out
fstp
add
jbe
add
arpl
mov
mov
gs
pop
and
mov
push
fld
mov
add
sbb
call
and
test
sahf
xor
xor
dec
and
pusha
mov
hlt
sbb
or
nop
jl
cmp
inc
cmp
adc
cld
push
push
pop
mul
sub
pop
cmp
mov
enter
inc
push
test
dec
clc
inc
pop
jl
mov
and
jge
push
jb
in
push
xchg
or
jbe
adc
and
cmp
mov
cmp
pop
sub
mov
repnz
inc
out
rol
mov
sub
out
dec
cmp
sbb
retf
sbb
cld
dec
test
int
ss
js
inc
mov
enter
push
pop
xchg
nop
jae
sti
arpl
inc
or
xchg
lea
mov
int3
push
xor
call
or
jg
test
sub
int3
mov
sub
or
pusha
mov
xchg
repnz
shl
pop
xchg
ins
sbb
(bad)
push
dec
ficom
pop
out
jg
push
out
sub
or
and
and
aaa
mov
call
mov
and
jns
and
loopne
inc
mov
jbe
sbb
neg
push
ins
ret
mov
cmp
jp
push
sub
call
push
mov
leave
ror
test
ins
sbb
(bad)
jno
cli
gs
inc
fnstenv
push
or
stos
jae
push
icebp
sub
cmp
jb
jmp
mov
cmp
adc
lds
xchg
data16
inc
pop
pop
test
das
mov
ins
fst
mov
mov
pop
sbb
neg
or
push
test
sub
sbb
pop
push
pusha
mov
dec
mov
gs
push
xchg
movs
ss
div
ins
or
ins
jp
aad
je
neg
(bad)
sbb
es
push
(bad)
pop
or
mov
fs
inc
sbb
fwait
lods
mov
push
jns
jae
pop
ins
mov
sbb
push
sbb
xchg
lods
or
ins
sar
mov
pop
sub
sub
sar
or
xchg
cmps
inc
push
or
ins
ss
jb
inc
ficom
sbb
dec
(bad)
pop
(bad)
push
es
int
cmps
jne
and
push
xchg
mov
addr16
inc
cmp
xchg
mov
fwait
mov
ins
loop
fnsave
mov
add
or
adc
add
cmp
ss
ret
test
pop
sbb
and
ins
lods
xchg
jge
repnz
mov
adc
movs
outs
inc
sbb
imul
jb
inc
retf
sbb
test
dec
shr
or
xor
jg
push
shl
inc
add
mov
xchg
xchg
inc
outs
in
jp
push
pop
xchg
in
fs
sbb
push
dec
sbb
sub
sub
outs
in
nop
mov
pop
aaa
pop
pop
popa
fwait
nop
pop
int
cmps
pushf
or
jmp
push
nop
call
or
je
fild
sbb
test
hlt
inc
cli
sbb
push
cmp
mov
ja
ins
xchg
xchg
arpl
or
xchg
mov
mov
push
(bad)
fistp
jne
mov
add
xor
sub
sub
and
mov
and
cmp
sub
mov
div
xchg
test
or
aad
or
push
inc
shr
sbb
xchg
jae
(bad)
stc
das
aam
xor
jnp
adc
jl
jp
mov
ins
in
jg
popf
xchg
lods
mov
rcl
hlt
ins
loopne
pop
mov
mov
cmp
push
sbb
and
inc
cmp
int
fwait
sbb
push
and
pusha
mov
(bad)
or
repz
aam
ins
xor
in
pop
cmp
jb
inc
int
sub
mov
sub
sbb
jns
xor
addr16
mov
mov
push
pop
xchg
mov
mov
imul
dec
mov
push
pop
push
mov
and
sbb
and
cmps
pop
ret
js
hlt
adc
call
ss
mov
or
ins
sub
jb
outs
cld
inc
push
sbb
mov
push
lds
pop
add
frstor
xchg
jg
xor
jg
inc
cwde
mov
fidiv
push
xchg
lods
mov
ins
loop
fnsave
mov
or
ins
mov
add
pop
ror
cmps
(bad)
mov
xor
bound
pusha
mov
lock
rcl
sbb
aam
ins
cmp
clc
jns
in
pushw
push
inc
pop
loop
jg
inc
out
sub
or
add
int
mov
js
jnp
mov
fs
pop
cdq
xchg
lods
mov
mov
inc
ret
push
pop
lods
in
dec
icebp
cmp
fwait
jecxz
and
aas
cmp
mov
sub
or
and
mov
outs
movs
out
mov
je
inc
call
aas
sbb
mov
ins
cmp
push
dec
xlat
fs
out
push
cmc
inc
stc
sub
sub
mov
jb
push
jecxz
push
(bad)
cld
imul
xchg
scas
call
addr16
push
push
fwait
in
dec
cmc
cmp
jno
sub
mov
and
aad
or
add
aas
ja
mov
retf
neg
xchg
cwde
jnp
inc
out
repnz
loope
ds
mov
mov
(bad)
push
push
fimul
adc
push
fisttp
lds
and
sti
and
push
fcom
and
dec
inc
xchg
mov
mov
inc
adc
mov
mov
xlat
pop
data16
jg
pop
jl
fst
bound
mov
sub
mov
pop
dec
add
xchg
imul
xchg
cwde
pop
mov
xchg
test
pop
cmp
stc
pop
cmp
pop
imul
jbe
in
imul
clc
add
js
pop
push
jl
aaa
xchg
mov
jb
inc
add
xchg
xchg
call
arpl
ins
retf
mov
or
jl
sbb
and
cmp
fisubr
sub
add
nop
pop
loope
mov
pop
mov
xchg
retf
and
xor
out
adc
cli
imul
jno
repnz
pop
lds
and
frstor
xchg
adc
jns
pop
cmp
inc
or
xchg
mov
mov
fist
mov
and
arpl
js
test
mov
aaa
or
pop
xor
pusha
mov
stc
sbb
stc
(bad)
push
mov
aad
push
cmp
dec
cmp
pop
inc
fimul
sbb
stos
jg
arpl
sub
or
imul
and
push
push
shl
inc
sub
mov
fwait
mov
ins
hlt
jg
push
jge
jmp
dec
and
aaa
adc
(bad)
int3
scas
sbb
sbb
xchg
pop
icebp
addr16
repnz
fld
adc
scas
cmp
shl
sbb
icebp
dec
push
es
pop
inc
std
daa
lds
and
js
and
and
je
mov
jo
inc
sbb
mov
lods
mov
ins
loopne
fld
mov
add
or
or
aad
daa
adc
sub
int3
mov
cmp
sub
arpl
nop
repnz
xchg
lahf
sub
popa
jmp
xchg
dec
shr
int3
pop
outs
inc
fstp
sbb
cmc
jg
inc
out
or
call
add
jl
je
mov
mov
inc
push
dec
loopne
mov
cmps
fsubr
lahf
scas
push
imul
lods
in
je
cmp
jno
sbb
and
sar
mov
or
adc
jns
dec
cdq
cmps
pop
loope
mov
push
mov
sti
lds
aam
push
mov
(bad)
adc
inc
adc
lahf
push
inc
iret
sub
push
cmp
add
jl
cmp
arpl
adc
mov
stos
mov
xor
mov
jns
dec
fnstcw
or
dec
mov
or
outs
outs
mov
test
and
int
dec
pop
sub
adc
sbb
movs
icebp
cmp
dec
sbb
cmps
js
sbb
inc
fnstenv
es
(bad)
test
sbb
pop
jle
aas
lahf
jl
xor
ins
jo
test
push
fnstsw
pop
mov
mov
mov
and
and
dec
sahf
call
sbb
outs
mov
test
and
lods
xchg
and
das
and
ss
sub
sar
sub
int
sub
movs
imul
inc
in
push
imul
js
arpl
push
shr
xor
jnp
aas
mov
fidiv
and
arpl
mov
push
fidiv
fs
xchg
mov
mov
push
imul
xchg
ror
add
imul
cmp
mov
sub
sbb
outs
mov
mov
or
aad
or
mov
adc
jmp
cmp
outs
imul
jns
neg
sbb
sub
add
sbb
jo
sbb
outs
adc
mov
fs
dec
or
xchg
mov
and
cmps
dec
pusha
out
fst
mov
(bad)
push
test
inc
xor
and
adc
rcl
nop
popa
cs
mov
cmps
out
or
call
add
or
(bad)
push
gs
sbb
pushf
push
fisubr
xor
mov
into
gs
mov
jns
inc
or
cdq
lahf
test
(bad)
push
mov
dec
lods
push
pop
pushf
in
inc
repz
pop
inc
aaa
outs
(bad)
out
fsub
ins
sti
fcom
das
(bad)
pop
xor
pusha
mov
repnz
inc
stc
ret
push
out
sbb
sub
(bad)
push
dec
in
push
jae
lock
push
clc
cmp
and
js
cmp
dec
jo
xchg
mov
inc
mov
jae
xchg
mov
scas
(bad)
(bad)
add
mov
ins
loope
fstp
xchg
loopne
inc
movs
inc
or
inc
sbb
aad
add
dec
loopne
stos
movs
mov
dec
and
pop
xor
mov
xrelease
out
xchg
mov
add
mov
or
out
push
push
iret
push
push
ret
ja
clc
sbb
jg
inc
popf
cmps
push
mov
inc
push
pop
xchg
xchg
mov
mov
or
inc
imul
sbb
shr
and
jmp
movs
mov
pop
inc
sub
sub
ret
jge
or
mov
rcr
test
push
out
push
ds
data16
push
imul
gs
mov
outs
iret
sub
add
add
and
outs
push
push
cld
mov
push
in
inc
or
jecxz
test
mov
rcl
jmp
pop
jo
gs
xlat
fsubr
and
add
push
int3
mov
popf
and
pop
pop
pop
adc
test
jno
out
xchg
stos
pop
mov
call
xor
adc
jp
(bad)
gs
fcomp
pop
or
int
or
jnp
ds
je
pop
sbb
mov
jg
dec
adc
loop
lods
stos
retf
fist
in
cmc
push
pop
mov
push
or
sbb
hlt
lods
and
dec
cmp
xchg
xchg
mov
and
and
pusha
mov
in
or
and
rcl
fist
int3
pusha
pop
pop
repnz
sub
and
add
push
pusha
xor
inc
stos
mov
je
jne
pop
adc
popa
ret
push
pop
lea
sbb
or
and
dec
cmp
mov
cmp
add
js
push
lods
xchg
pop
lds
repnz
jecxz
adc
mov
jg
mov
cmp
int3
ins
sub
jb
inc
xlat
sub
pop
hlt
mov
jae
sub
push
and
jg
xor
inc
pusha
inc
cdq
mov
push
fst
pop
mov
xchg
mov
mov
ins
loopne
lods
push
dec
fwait
iret
add
adc
or
and
adc
es
rcr
adc
popa
sub
xchg
jnp
repnz
pushf
jno
popa
sti
lds
mov
and
mov
cmp
out
and
jb
inc
fimul
adc
pushf
or
inc
std
sub
sub
cmp
ss
jmp
dec
jnp
inc
mov
dec
ins
into
inc
adc
xchg
mov
xchg
jmp
mov
sbb
push
inc
sub
out
test
outs
fisub
pop
or
adc
popa
sub
test
(bad)
iret
or
clc
lds
xchg
lods
and
fnstcw
ins
dec
std
popa
fs
fbstp
sbb
std
sub
or
outs
jmp
sar
push
jp
inc
out
inc
mov
data16
push
or
xchg
lds
mov
out
push
pop
lods
in
fs
dec
or
sbb
repnz
push
and
cmp
inc
stos
int3
cmps
mov
add
sub
jne
push
xchg
sar
btr
movs
call
or
ins
jge
push
push
rcr
shl
add
adc
add
mov
pop
mov
data16
inc
sbb
mov
xchg
out
push
ins
fwait
in
fs
sbb
je
sbb
hlt
mov
sub
fwait
or
sub
xlat
push
repnz
mov
inc
xchg
(bad)
aas
mov
xor
out
imul
addr16
inc
loope
jns
std
mov
cmp
jge
sbb
or
inc
push
test
outs
je
dec
or
lahf
mov
mov
out
inc
ins
mov
mov
bound
jne
xchg
mov
outs
fxch
mov
aas
cmp
push
add
xchg
jp
bnd
stc
pop
cmps
inc
jecxz
pop
xchg
jge
sbb
push
push
ficom
sbb
popf
push
jae
sub
push
or
pop
frstor
mov
(bad)
xor
mov
mov
inc
and
xchg
mov
mov
aad
pop
mov
and
dec
aaa
ins
(bad)
jmp
and
cmps
mov
push
xor
inc
mov
add
inc
aaa
add
sbb
mov
cmp
out
ins
xor
push
imul
pop
sbb
cmp
xor
mov
enter
arpl
pushf
push
mov
inc
sbb
xchg
mov
mov
retf
fwait
loopne
push
xchg
add
popa
dec
sbb
test
mov
or
sbb
push
mov
loopne
movs
rcr
xor
(bad)
push
xchg
test
add
mov
dec
sbb
outs
imul
push
cmp
scas
jnp
arpl
aas
in
add
arpl
inc
mov
fadd
pop
cmovns
xchg
mov
ja
inc
push
dec
test
and
xchg
push
inc
loope
fisttp
mov
push
jp
push
imul
xlat
loop
test
xor
pop
xor
jae
xchg
pop
cmps
in
xchg
cwde
dec
mov
xchg
scas
and
fldcw
sbb
pop
cmp
push
inc
retf
sbb
mov
push
call
and
fstp
pop
add
cmp
data16
inc
or
xchg
sub
push
fnsave
fwait
loopne
inc
test
add
push
test
sbb
cmp
inc
rcr
movs
mov
sbb
pop
cmp
pusha
fwait
mov
out
add
neg
xchg
test
cmp
xchg
jbe
pop
clc
gs
hlt
mov
sub
and
or
inc
mov
fadd
sub
xchg
mov
ja
inc
and
lods
mov
mov
std
push
pop
out
mov
aaa
sbb
xchg
mov
pop
cmp
and
mov
and
pop
pop
push
xor
pusha
mov
out
or
sti
ror
nop
int
or
shl
sbb
popw
pop
in
push
jp
sar
test
out
sub
ret
add
push
inc
sub
jmp
lea
lods
mov
ins
loope
int3
push
pop
lahf
rol
inc
ins
outs
xor
sbb
movs
mov
jge
and
dec
dec
pop
xor
mov
ror
mov
int
sbb
les
pop
(bad)
jbe
inc
inc
add
pushf
dec
cmc
inc
mov
push
es
fnsave
or
xchg
mov
mov
gs
cld
inc
push
ins
xchg
and
cmps
inc
jge
ins
(bad)
push
pop
mov
xchg
xchg
or
sbb
add
fmulp
mov
sbb
xor
pop
mov
adc
jmp
sbb
shl
sbb
ficom
sbb
clc
pop
hlt
push
stc
push
lds
sub
outs
popf
add
imul
movs
push
mov
inc
cmp
mov
daa
mov
jp
in
iret
inc
jb
cmc
test
jb
sbb
aas
sbb
sub
jg
int3
int
xchg
and
das
cmp
gs
xchg
pop
shl
push
or
and
shl
gs
jb
dec
ficom
sbb
mov
das
sar
adc
lods
outs
ret
or
push
jae
xchg
mov
mov
inc
push
arpl
shr
retf
mov
add
push
push
inc
sbb
neg
and
cmp
sub
cld
mov
and
sbb
jp
outs
mov
ror
lock
add
shl
jnp
in
jno
inc
ror
out
pop
repnz
cmp
cmp
ss
add
xor
inc
stos
scas
push
mov
jp
pop
test
lods
call
outs
out
sti
pop
arpl
push
or
sbb
neg
push
and
cmp
jmp
mov
das
and
pop
adc
adc
nop
repnz
repnz
sbb
shl
pop
cmp
jp
dec
in
ins
inc
cmp
mov
or
pop
push
xor
fnsave
cmps
pop
in
and
pop
je
xchg
lahf
push
mov
pop
or
retf
call
ins
ret
push
jl
in
xor
ins
xchg
mov
adc
hlt
int3
movs
cmps
popf
das
pop
sub
adc
jne
pusha
mov
repz
sti
in
xchg
int
push
ret
cmp
cld
outs
ds
add
dec
jp
rcr
enter
jno
and
sbb
jo
mov
imul
or
mov
cmps
test
fst
xchg
in
movs
push
std
cmp
arpl
ins
mov
movs
cmp
and
and
xchg
mov
or
pop
pop
inc
mov
fimul
nop
mov
jecxz
nop
xchg
ss
mov
ss
pop
ss
jno
ds
sbb
and
in
retf
add
rcl
jl
adc
push
jae
xchg
test
push
into
inc
or
mov
(bad)
mov
ficom
lahf
xchg
add
add
outs
mov
fbld
adc
ret
mov
sub
pop
cmp
pushf
pop
sar
(bad)
xchg
cmc
pop
mov
out
retf
mov
jnp
mov
xor
out
sbb
clc
inc
imul
pop
sbb
xchg
imul
std
push
lds
xor
int3
adc
jl
inc
mov
push
mov
data16
ins
or
mov
in
and
push
pop
out
in
push
xchg
or
sbb
test
or
int3
mov
sahf
push
xor
sub
pop
sbb
popa
mov
cdq
iret
or
jmp
ja
mov
ins
sub
out
push
cmp
jo
inc
fiadd
sbb
mov
data16
and
add
jnp
ss
or
adc
leave
inc
sub
inc
(bad)
dec
or
popf
xchg
mov
mov
add
jge
push
pop
mov
sbb
or
sbb
mov
and
out
mov
and
cmp
or
sar
sub
loop
sbb
out
inc
add
not
(bad)
imul
mov
and
push
sub
sti
mov
jl
xor
gs
inc
or
xchg
mov
and
inc
dec
mov
xor
outs
lods
cmc
(bad)
daa
adc
(bad)
ret
and
pop
dec
and
pusha
(bad)
mov
shr
xchg
nop
mov
push
inc
sbb
stc
mov
sub
in
imul
push
outs
inc
in
push
inc
adc
test
inc
in
ret
daa
and
clc
aas
mov
and
push
jecxz
push
mov
inc
je
ins
or
nop
mov
lea
fistp
(bad)
in
fs
sub
jl
leave
movs
add
aas
cmp
mov
sbb
sbb
inc
(bad)
mov
(bad)
or
sti
cld
or
scas
xor
sub
in
jns
hlt
push
push
ficom
sbb
test
arpl
shufps
jo
cld
aas
mov
in
imul
leave
dec
mov
inc
or
xchg
mov
mov
fst
test
adc
inc
push
outs
outs
mov
movs
sub
ror
scas
fwait
push
push
sub
xor
jns
fs
dec
ror
imul
lea
push
lahf
lea
cmps
mov
ins
push
fild
fstp
or
mov
inc
in
push
lds
lds
or
ins
pusha
push
sahf
mov
inc
in
or
call
mov
scas
push
pop
lahf
aad
ins
cmp
push
adc
sub
cmp
and
mov
dec
sbb
xor
inc
and
nop
dec
ret
ins
ret
repnz
ror
imul
mov
rcr
outs
inc
rol
pop
rol
int
sub
sti
cmp
push
push
dec
xchg
xchg
ror
clc
or
movs
enter
add
imul
mov
or
fs
xor
(bad)
sub
sub
jne
pusha
mov
cmc
or
inc
jg
xchg
sbb
dec
cmp
inc
imul
and
icebp
mov
inc
iret
push
(bad)
aaa
and
pop
shl
cmps
pop
enter
arpl
pushf
push
movs
in
ins
fs
jp
pop
xchg
(bad)
lods
fucomp
daa
fwait
mov
jg
ins
loop
pop
mov
push
or
sbb
out
daa
push
and
sub
test
sahf
or
and
pop
adc
mov
dec
movs
ret
or
mov
imul
xor
leave
mov
push
ins
cld
dec
push
cmc
inc
mov
enter
jnp
and
and
sub
pusha
or
xchg
pushf
mov
mov
push
pusha
shr
inc
dec
cdq
jecxz
inc
xchg
push
or
sbb
push
aas
or
outs
cmps
fld
or
pop
cmp
sbb
movs
(bad)
or
sti
xlat
or
lds
push
(bad)
fld
cmp
cli
push
sub
pusha
inc
gs
push
pop
mul
sub
adc
sub
pop
jl
inc
xchg
lods
inc
mov
push
add
xchg
xchg
lods
mov
jb
out
retf
lahf
retf
mov
sbb
push
jecxz
aas
adc
ds
shl
lods
mov
pop
inc
adc
xchg
push
rcl
psrad
mov
xchg
xchg
ss
mov
cmp
out
ins
xor
fbstp
sbb
sahf
push
lock
stc
sub
and
es
xor
pop
pusha
push
lahf
mov
inc
fisubr
xchg
xchg
cwde
lods
mov
push
push
jp
push
dec
lahf
in
je
push
or
push
imul
sbb
dec
shl
test
and
bound
mov
or
jmp
pop
test
js
xor
jge
sti
pop
dec
inc
test
test
outs
jmp
mov
add
jl
aaa
xchg
mov
xchg
cli
push
jo
inc
push
dec
xchg
and
cmps
inc
sbb
imul
or
das
dec
inc
sbb
test
xchg
movs
movs
and
das
and
das
push
cdq
nop
pop
shr
cmc
or
sti
(bad)
or
fsub
ins
pop
std
jb
dec
in
inc
push
sbb
mov
pop
std
and
jb
and
jg
and
cdq
xchg
inc
mov
inc
or
mov
scas
fmulp
es
mov
fld
mov
jo
aaa
gs
lods
and
or
and
shl
or
and
jge
inc
lods
test
ja
fisttp
test
push
sahf
mov
imul
fiadd
pop
(bad)
sub
or
and
and
push
xchg
mov
pop
into
dec
add
mov
mov
fnsave
mov
mov
jno
sbb
sub
cld
int3
mov
mov
jle
pop
pop
push
mov
out
xchg
mov
push
jmp
push
xchg
xchg
ss
mov
sbb
enter
jbe
inc
fldenv
pop
add
enter
js
adc
daa
jl
cmp
jle
clc
inc
or
mov
mov
mov
neg
loopne
je
sub
jb
adc
fbstp
and
xchg
fwait
aas
push
pop
cmp
outs
xor
inc
mov
sbb
mov
or
clc
xchg
or
pop
sub
jb
imul
lahf
jle
inc
in
sub
push
xor
mov
sti
sbb
jae
cmp
ja
fisub
loop
mov
lods
mov
fstp
mov
push
outs
outs
mov
test
sub
lock
and
cmp
pop
xor
shr
bnd
mov
out
sbb
mov
inc
cmp
gs
inc
shl
in
pop
in
arpl
push
(bad)
or
add
jmp
popa
and
ins
xchg
mov
mov
inc
or
mov
aas
lods
mov
jl
pop
fldenv
mov
mov
das
dec
pop
push
outs
mov
test
es
xlat
shl
or
or
popa
and
(bad)
mov
clc
add
imul
sbb
movs
sbb
add
inc
cmp
popa
addr16
aad
fs
in
ins
(bad)
inc
out
and
and
push
cmp
push
xchg
mov
fsubr
pop
xchg
xchg
mov
xchg
shl
loope
fst
jecxz
fs
sbb
dec
lahf
jecxz
daa
sbb
adc
mov
push
jbe
cmp
add
xchg
jp
into
pop
xchg
(bad)
dec
xchg
in
xchg
retf
add
test
imul
retf
jb
inc
fidivr
push
icebp
jae
sub
cmp
add
or
sub
into
push
mov
jae
dec
loopne
scas
popf
cmp
data16
jle
push
push
mov
adc
and
and
mov
or
scas
mov
and
or
dec
imul
or
call
push
xchg
leave
ss
out
outs
cmp
sbb
bound
ins
jno
out
jne
dec
cli
sbb
or
add
frstor
movs
jae
adc
jns
mov
jle
mov
inc
jo
xchg
mov
lods
movs
inc
dec
ret
push
push
fwait
in
inc
xchg
xor
jg
rep
push
sub
add
push
cld
int3
xchg
mov
sub
popa
sub
sar
add
fst
sbb
aam
ins
sbb
(bad)
imul
stc
jg
arpl
or
sub
mov
lds
and
jb
movs
mov
addr16
inc
and
xchg
retf
scas
popf
ror
test
ficom
cmp
inc
xchg
jb
and
daa
adc
retf
mov
sti
push
pop
cmp
add
or
jo
test
jle
repnz
mov
out
lds
enter
mov
sub
(bad)
inc
inc
inc
leave
inc
jno
hlt
cdq
dec
test
(bad)
push
and
inc
mov
fadd
push
outs
jo
xchg
mov
addr16
add
stos
cmps
retf
cmp
adc
outs
fiadd
and
push
nop
dec
or
sbb
hlt
mov
and
(bad)
sub
pop
pop
ss
addr16
ret
jge
ret
test
popa
jmp
push
nop
mov
sbb
jno
dec
sub
outs
inc
rol
adc
pushf
or
inc
in
(bad)
sbb
sbb
pop
jl
dec
xchg
(bad)
push
mov
gs
jnp
pop
xchg
(bad)
mov
mov
aam
dec
and
push
cmp
jno
and
xor
sub
ins
cld
fild
cmp
sbb
jno
inc
xchg
cwde
or
jmp
push
xchg
sahf
ss
ds
push
inc
leave
ja
sbb
(bad)
outs
hlt
jae
sub
sub
adc
es
fadd
xchg
mov
push
mov
xchg
lahf
mov
mov
outs
out
mov
nop
inc
cmp
pop
push
mov
add
movs
sahf
and
pop
push
sub
gs
xchg
out
jno
mov
inc
jmp
adc
test
ss
outs
cmp
inc
imul
pushf
or
inc
retf
sub
push
ss
std
sbb
jg
cmp
addr16
dec
or
lea
xchg
fist
(bad)
out
lods
push
mov
xor
mov
cmp
nop
xchg
xor
add
inc
sub
ror
ret
mov
dec
clc
iret
adc
mov
imul
les
bound
xchg
inc
icebp
sub
sub
xor
pop
jl
inc
call
loopne
or
test
fwait
mov
lock
mov
add
sub
push
jl
neg
and
mov
inc
and
data16
jae
inc
xor
xchg
test
push
jmp
add
out
jg
add
arpl
stc
jb
push
in
push
fs
cmps
jnp
inc
fisttp
ret
ja
(bad)
xor
jg
add
jmp
inc
fwait
clc
ins
jb
inc
add
xchg
nop
call
jnp
ins
test
xchg
push
icebp
cmp
jno
sbb
sub
lock
sub
outs
push
push
jb
arpl
mov
or
xchg
stos
pop
xchg
mov
jns
sbb
push
inc
fiadd
jno
or
jbe
xor
test
push
push
or
ret
push
and
xchg
int3
mov
mov
fst
cdq
clc
repnz
imul
cmp
xchg
mov
push
popa
ret
fisttp
sub
sub
adc
mov
jns
mov
mov
stc
loopne
fwait
shl
and
mov
data16
enter
xlat
inc
inc
ror
aas
in
sub
or
add
push
inc
dec
adc
dec
xchg
mov
mov
mov
leave
jl
cdq
clc
repnz
ins
outs
lods
lds
push
fs
fcom
or
outs
push
ja
adc
mov
pop
xlat
addr16
pop
xchg
leave
xor
adc
mov
fsubr
aaa
sar
das
mov
loopne
and
icebp
or
das
jg
inc
xchg
mov
jns
push
cmp
xchg
int3
(bad)
scas
rcl
mov
leave
and
dec
mov
or
sbb
push
xor
aam
shr
sbb
push
test
out
xchg
xchg
push
scas
popa
(bad)
cld
push
mov
xor
enter
sub
jnp
lock
aad
push
outs
stc
popf
push
mov
adc
mov
js
inc
mov
dec
movs
jmp
nop
xchg
xchg
stos
inc
pop
call
jmp
js
push
inc
scas
loope
push
push
inc
cmp
fs
test
mov
sub
cmp
sbb
shl
mov
pop
xlat
pop
int3
aad
movs
mov
jnp
xchg
jp
cmp
inc
imul
lods
pop
iret
dec
hlt
cmp
jbe
push
or
adc
push
push
js
adc
into
inc
or
lahf
xchg
int3
mov
movs
jbe
out
js
pusha
push
adc
push
jne
inc
repnz
push
xor
hlt
enter
adc
aaa
and
jbe
ja
adc
mov
jns
cli
dec
xchg
popa
jecxz
sbb
fwait
jp
pop
clc
pop
dec
(bad)
jae
inc
jno
call
aas
lds
sub
jnp
xor
or
sbb
pop
movs
call
ds
xchg
mov
cmps
cwde
ret
mov
fldenv
push
mov
add
aas
sbb
out
push
or
shl
push
inc
popa
das
fs
and
mov
xlat
dec
aam
sub
mov
jns
jo
ins
dec
not
pusha
aad
push
outs
call
(bad)
add
sub
lock
xchg
jl
adc
xchg
movs
jo
xchg
adc
mov
xchg
lods
cmps
ffree
adc
jge
js
cdq
xchg
repnz
cmps
sub
push
inc
ins
sbb
fsubr
and
or
ins
push
jae
pop
sbb
dec
xor
ins
fwait
call
or
js
enter
stc
dec
inc
sub
mov
dec
mov
repz
add
icebp
es
fimul
and
inc
inc
nop
int
mov
js
jl
mov
adc
movs
jbe
push
push
cdq
nop
repnz
jge
in
push
sbb
or
xchg
test
or
xor
or
cmp
jge
pop
mov
jg
popa
cld
lds
and
fst
jnp
repnz
dec
aaa
xlat
imul
gs
aas
loopne
ds
jle
adc
imul
pop
mov
push
daa
outs
xchg
mov
mov
mov
leave
jl
add
add
sbb
int3
mov
push
addr16
xor
xor
or
jae
adc
mov
or
shr
and
cmc
mov
jnp
enter
cli
gs
ss
mov
xchg
inc
retf
pop
and
jge
xor
or
outs
inc
jecxz
jbe
call
jnp
mov
loop
xor
push
jb
rol
inc
inc
fs
xchg
mov
push
dec
loope
nop
test
sub
xor
sbb
outs
test
mov
dec
xchg
dec
stc
shr
and
sar
cmp
imul
push
outs
jmp
imul
imul
add
xor
jg
add
pusha
dec
xchg
mov
ins
(bad)
push
sub
xchg
in
mov
mov
leave
jns
popf
out
sub
or
cmp
lods
jmp
je
fcom
and
sbb
sbb
scas
in
call
mov
xchg
jns
cmp
imul
data16
dec
iret
dec
clc
cmp
add
or
cmp
push
inc
jns
mov
fist
fiadd
pop
xchg
xchg
les
inc
pop
jmp
in
and
lock
ja
add
jge
inc
mov
dec
sub
dec
retf
or
pop
adc
mov
jns
popf
dec
mov
stc
mov
mov
and
fbld
dec
cmp
pusha
inc
aaa
shr
inc
cs
mov
iret
dec
clc
cmp
sub
dec
sti
cmp
dec
fwait
add
mov
gs
xchg
xchg
mov
mov
inc
dec
sar
jns
lock
xchg
pop
jge
ins
test
mov
push
je
fisttp
add
ja
add
addr16
in
ret
jge
(bad)
pop
xchg
test
stc
jmp
mov
js
test
inc
repnz
std
mov
dec
into
cmp
jbe
js
fnstsw
mov
enter
push
or
mov
xchg
mov
mov
jl
popf
in
repnz
jmp
xchg
jecxz
sub
sbb
fisttp
daa
pop
or
jae
adc
mov
jns
cli
dec
xchg
jb
out
mov
imul
outs
jg
mov
stos
imul
push
push
or
push
hlt
xor
jg
inc
mov
pop
jg
push
and
mov
or
push
icebp
sub
or
sub
sar
ins
fninit
rol
das
sbb
cmp
dec
scas
xchg
sub
push
mov
push
mov
mov
fwait
xchg
and
mov
js
test
aaa
xlat
sub
mov
sub
sbb
add
sti
inc
movs
dec
fist
add
inc
push
or
jmp
mov
adc
pop
fdivr
adc
jb
or
push
or
ror
shr
sbb
ja
pusha
mov
mov
cmp
(bad)
das
mov
mov
cmp
imul
jbe
(bad)
std
jge
dec
retf
das
mov
cmp
or
sbb
int
xchg
call
jnp
nop
test
mov
je
jl
cdq
les
inc
inc
sub
adc
cmp
and
test
dec
popa
daa
and
push
ja
adc
mov
cmp
stc
jmp
mov
and
or
pop
cmp
arpl
xlat
jge
xor
dec
(bad)
aas
out
add
or
inc
cmps
dec
enter
pusha
dec
movs
mov
jg
push
cmp
xchg
xchg
int3
mov
movs
and
push
pop
fwait
out
push
stos
cmp
and
or
cmp
mov
mov
pop
sub
and
imul
jno
in
nop
mov
dec
loopne
sbb
fbld
js
enter
xlat
dec
push
push
xchg
sub
add
or
add
sbb
int
mov
jne
mov
mov
int3
mov
rcl
pop
leave
and
sub
or
outs
mov
cmp
and
xchg
mov
and
or
cmp
jmp
dec
xchg
popa
loopne
aas
xchg
mov
jns
pop
cld
inc
dec
test
out
inc
jl
hlt
cdq
js
dec
xchg
cmp
jbe
or
fild
and
inc
stos
mov
jnp
xor
pushf
xchg
stos
lea
jmp
(bad)
and
out
inc
stos
cmp
(bad)
loope
push
xor
sar
rol
sub
pop
adc
sub
mov
cmp
int3
(bad)
xor
mov
jp
pop
clc
popa
dec
in
imul
cli
push
mov
sbb
mov
out
xor
inc
pop
fwait
mov
jnp
ins
jnp
pushf
test
test
inc
dec
pushf
jg
and
lock
cmps
push
das
push
inc
sbb
out
add
add
cmc
fmul
daa
inc
or
jae
or
pushfw
lock
stc
mov
mov
or
test
jle
sub
js
repnz
aaa
xlat
xor
ror
sub
ds
sti
xor
or
outs
inc
mov
push
inc
enter
in
xchg
mov
mov
dec
fild
xchg
loopne
jae
sbb
inc
inc
or
push
pop
sbb
pop
arpl
shl
sub
pop
adc
and
xchg
lea
push
mov
jns
stos
dec
lea
std
std
ins
fwait
xchg
ds
push
cmp
(bad)
bound
cld
push
inc
xor
sahf
push
(bad)
jp
adc
icebp
or
or
dec
aaa
mov
dec
or
xor
mov
shr
mov
pop
sar
and
out
jns
cmp
jge
adc
mov
xchg
daa
ins
cmp
push
data16
fist
(bad)
pop
jae
ja
adc
scas
div
or
aam
sub
mov
jo
push
jae
inc
ja
jecxz
push
xor
sub
sub
add
inc
movs
dec
fist
push
push
push
mov
adc
retf
inc
and
xchg
lods
mov
push
outs
out
out
pop
pop
xchg
repz
xor
push
xor
push
or
retf
scas
xchg
and
xor
jb
xchg
pop
cmc
or
ja
dec
loopne
sbb
shl
arpl
jnp
pusha
out
inc
outs
(bad)
(bad)
imul
dec
mov
dec
adc
fnsave
xor
stos
inc
xchg
clc
gs
clc
inc
sub
xchg
xchg
mov
retf
xor
test
js
pusha
sbb
(bad)
(bad)
push
push
or
or
out
xchg
xor
sbb
or
sub
push
test
fmul
test
ins
fwait
fwait
and
add
js
fsub
aaa
ret
xor
mov
push
and
dec
xor
jecxz
and
inc
jecxz
push
cmps
clc
adc
in
and
mov
add
leave
addr16
cdq
repz
repnz
inc
inc
sub
repnz
push
je
int
cmps
xchg
add
sub
and
jae
adc
mov
jns
mov
mov
popf
lahf
and
idiv
imul
jb
jb
inc
addr16
std
sub
push
or
push
xor
ret
sub
jg
dec
or
in
push
and
fwait
xchg
xchg
inc
ins
leave
push
rcl
sahf
rep
jnp
cmp
jge
ds
out
mov
push
je
shl
pop
sbb
jae
adc
mov
ds
cmp
aad
and
push
aaa
shl
ja
aam
je
dec
clc
cmp
jbe
cmp
lock
mov
jmp
push
xchg
lds
call
cmp
add
xchg
lock
pop
sahf
(bad)
or
cmp
inc
sbb
aam
adc
cmp
push
dec
(bad)
test
mov
pop
add
push
mov
and
xlat
addr16
and
cmc
mov
outs
and
jb
dec
aad
jno
shl
cmp
sub
or
inc
movs
push
retf
adc
mov
sbb
dec
sub
xchg
mov
push
test
leave
jg
cdq
mov
dec
xchg
sub
inc
push
cmps
lock
adc
(bad)
stos
mov
pop
jae
jae
adc
mov
jns
stos
pop
mov
cdq
mov
jp
pop
sti
inc
cmp
pusha
sbb
shr
sub
mov
fidivr
out
sub
mov
enter
push
inc
mov
addr16
(bad)
push
and
mov
mov
inc
pop
jmp
lods
loopne
pop
imul
cmp
inc
aaa
sbb
enter
xor
or
stc
fmul
or
sbb
sbb
test
and
fcom
sub
enter
sbb
pop
aas
std
pusha
ins
je
inc
inc
jo
es
sbb
or
neg
pop
xlat
ss
ins
aaa
xchg
xchg
pop
sub
jnp
popa
jnp
add
fwait
mov
fnstcw
cdq
out
pop
stos
xor
js
or
daa
adc
sbb
icebp
int3
mov
sub
push
xor
test
out
call
sub
aad
cmp
ficomp
addr16
retf
or
mov
gs
sub
add
add
jecxz
mov
push
inc
inc
or
dec
call
mov
mov
rcl
movs
das
pop
les
jne
mov
adc
pop
inc
and
or
adc
out
mov
sub
xor
xchg
imul
test
pop
rcl
xor
mov
jns
jl
outs
adc
push
jl
inc
outs
stc
mov
ins
retf
cs
sub
xor
ds
enter
push
inc
out
push
xchg
into
dec
push
aad
cmp
mov
and
cmps
push
inc
jmp
lods
and
rep
cmp
push
dec
scas
loope
push
push
add
adc
stos
cmps
mov
pop
or
add
sub
cmp
xchg
outs
mov
mov
pop
xlat
fs
mov
jp
jo
ins
cmp
jne
inc
fadd
cs
mov
push
in
sub
sub
or
icebp
sbb
push
push
or
xchg
nop
int3
cmps
(bad)
scas
mov
retf
scas
(bad)
test
xchg
jp
or
and
sbb
mov
mov
sub
sbb
adc
mov
jns
mov
movs
inc
inc
cmp
mov
inc
dec
div
inc
test
sti
mov
dec
call
push
pop
out
sbb
push
js
or
inc
enter
mov
shl
ins
retf
push
scas
push
pop
xchg
rep
dec
mov
sub
push
pop
test
adc
sar
jl
pop
sbb
jae
push
lods
mov
fmul
dec
repz
out
inc
jnp
test
pop
or
jae
outs
inc
outs
cld
xchg
jle
dec
dec
mov
push
es
xor
pop
jae
xchg
mov
xchg
push
pop
clc
inc
adc
mov
adc
pop
retf
or
or
sbb
xchg
mov
and
mov
sbb
cmp
sbb
pop
arpl
mov
pop
lahf
inc
lock
fld
push
jbe
ja
outs
aam
push
call
jecxz
cmps
push
loope
adc
loope
push
mov
addr16
inc
cmp
movs
int3
mov
ret
movs
cmp
(bad)
jo
bound
xchg
sub
arpl
sbb
enter
cmp
fmul
and
jo
ja
push
lods
mov
repz
mov
jnp
pop
enter
mov
dec
dec
add
js
repnz
aaa
xlat
inc
push
ss
xchg
jnp
dec
imul
sub
push
fidiv
xchg
dec
dec
adc
ins
mov
mov
scas
in
test
retf
popf
jmp
and
aas
sbb
shr
dec
aam
mov
das
sub
push
adc
xchg
push
cmc
or
dec
and
ins
mov
and
or
inc
dec
lock
aad
pop
sub
mov
cmp
and
adc
jl
adc
mov
push
mov
push
daa
push
xchg
out
mov
mul
mov
push
inc
shl
pop
mov
push
js
ins
or
push
xor
cmp
retf
fist
and
or
push
and
xchg
pop
mov
(bad)
out
mov
pop
xlat
dec
retf
xchg
mov
sbb
or
inc
dec
not
jg
fisub
xor
(bad)
dec
fbld
or
ret
ins
loop
and
ins
xor
dec
je
dec
das
pop
xchg
xchg
int3
cmps
mov
bound
cld
pop
xlat
push
jno
shl
dec
xchg
pop
inc
or
das
add
shl
(bad)
xchg
mov
daa
cmp
push
test
mov
adc
stc
jmp
mov
mov
push
fldenv
ins
mov
cmp
push
es
push
mov
mov
test
push
jo
cwde
int
xchg
jmp
inc
int3
xor
xchg
aam
fst
rol
in
leave
popa
pop
sahf
(bad)
or
and
inc
sub
aam
add
cmp
push
data16
fmul
das
pop
adc
imul
xchg
icebp
or
mov
shl
call
and
fs
ret
sub
jae
cmp
es
inc
stc
movs
jo
or
push
adc
sahf
fsub
(bad)
push
sub
xchg
lahf
int3
cmps
nop
hlt
cmps
mov
fistp
out
jecxz
dec
scas
sub
or
sub
add
pop
aam
rol
and
pop
ds
outs
stos
scas
dec
in
pop
cmps
cld
or
fadd
aaa
xchg
adc
push
dec
cld
inc
xor
mov
dec
lock
cmc
push
push
sbb
xor
push
js
or
push
push
mov
push
test
fistp
mov
xchg
sub
inc
inc
push
sbb
repnz
push
dec
loope
xchg
xchg
mov
and
jne
imul
repz
icebp
or
mov
push
shl
and
or
cld
dec
dec
lock
push
aam
push
loopne
and
or
inc
movs
push
enter
inc
inc
xchg
int
movs
jmp
ja
inc
adc
xchg
cmps
mov
or
rcr
sar
push
imul
cmp
xor
push
and
fisttp
sub
sbb
cmp
dec
lahf
mov
out
mov
enter
mov
jp
pop
clc
push
cmp
pop
sbb
inc
jbe
ror
aas
out
pop
or
jg
cmp
dec
outs
inc
cld
int
(bad)
dec
into
inc
jae
xchg
push
scas
movs
jno
cld
push
leave
push
popf
shl
dec
mov
sbb
(bad)
scas
push
cmp
or
retf
scas
lods
movs
xor
or
adc
xor
dec
xchg
in
mov
jnp
pop
out
aad
cdq
mov
dec
cmp
sti
js
repnz
dec
aaa
shr
cs
mov
xchg
pop
(bad)
or
adc
mov
jg
inc
popf
int
mov
imul
test
xchg
push
pop
jmp
loope
inc
xchg
repz
or
pusha
sbb
leave
lods
aas
sbb
fisttp
or
adc
imul
ret
inc
mov
jnp
addr16
scas
push
xchg
adc
(bad)
je
inc
push
outs
in
mov
push
shr
call
icebp
add
xor
inc
jns
mov
jg
inc
cmp
xchg
(bad)
cmps
cwde
rcl
mov
leave
arpl
in
xchg
fs
cmp
jb
sub
loope
push
ss
enter
push
sub
or
js
pusha
mov
mov
jns
mov
jb
icebp
ins
mov
cmp
out
gs
retf
xor
dec
(bad)
cmp
jecxz
mov
loope
or
pusha
aaa
xchg
lods
push
mov
adc
inc
and
mov
xchg
in
loopne
jg
out
popa
mov
cmp
xor
enter
cmp
les
sbb
adc
push
mov
lahf
fimul
movs
test
jb
out
ins
mov
and
fbld
pop
adc
cld
inc
jne
in
std
ins
test
hlt
add
or
and
push
ins
jp
mov
inc
mov
mov
or
retf
popf
out
test
sbb
test
cmp
ss
out
stos
not
add
jae
jae
adc
mov
push
popa
sti
(bad)
xor
stos
inc
dec
add
jnp
fsub
cli
gs
xor
mov
imul
hlt
add
push
xchg
or
outs
inc
mov
push
push
fcom
push
mov
xchg
cdq
lods
fcom
xchg
jg
inc
jl
jecxz
cmps
sub
inc
pop
pop
imul
shl
mov
sub
arpl
sub
push
mov
or
stc
ret
lahf
and
test
inc
cmp
repnz
cmp
imul
push
adc
mov
push
cs
adc
inc
movs
fs
push
sub
mov
clc
sbb
out
ins
jnp
cmps
test
xchg
fldenv
push
mov
mov
xchg
inc
push
outs
ins
lahf
out
mov
es
xlat
shl
pop
or
push
pop
outs
lods
xchg
jge
jae
cli
or
stc
(bad)
ins
popf
xchg
adc
stos
jns
jo
addr16
inc
push
inc
rol
das
ror
cmp
sbb
or
hlt
xor
dec
inc
(bad)
out
jae
rcl
fdiv
dec
xchg
xchg
mov
mov
sar
and
repz
xchg
jg
sbb
out
lods
das
xor
dec
das
dec
jmp
xor
or
movaps
pusha
cmp
xchg
jns
jae
repz
mov
sub
mov
data16
addr16
mov
stos
imul
dec
mov
xor
mov
aad
and
imul
inc
mov
push
sbb
mov
and
mov
fnstsw
mov
sub
inc
inc
das
push
and
dec
dec
dec
hlt
fmul
sub
arpl
jb
adc
mov
cmp
(bad)
aad
out
mov
outs
mov
push
ins
mov
xchg
imul
test
repnz
sub
icebp
add
imul
int
ret
call
aas
push
loopne
movs
mov
push
pop
loop
fst
mov
cmp
inc
inc
push
xchg
out
mov
push
je
fild
or
or
jno
arpl
fsub
add
scas
push
movs
mov
or
scas
push
dec
add
fs
aaa
hlt
inc
push
sbb
pop
iret
sub
jbe
add
xor
jnp
inc
xchg
xchg
pusha
mov
adc
xlat
push
cmp
mov
push
mov
fild
and
dec
mov
or
mov
scas
cs
cmp
push
arpl
loopne
xchg
cdq
xor
sub
ds
popa
std
xchg
dec
call
mov
dec
mov
(bad)
sub
mov
jnp
enter
cli
xor
fisttp
in
sub
or
xor
pop
js
adc
pop
xchg
mov
lods
fdiv
push
xchg
cmc
and
out
dec
test
adc
adc
fdivr
pop
jl
iret
shr
das
adc
sbb
xchg
sub
dec
call
aas
std
cmc
ins
popf
into
and
fbld
jnp
repnz
shl
daa
fisttp
hlt
cmp
(bad)
jecxz
movs
push
xchg
adc
jae
nop
sub
sti
jne
dec
xchg
xchg
int3
cmps
test
adc
movs
jae
cld
js
outs
popf
xchg
repnz
popf
sub
push
inc
sub
into
lahf
and
xor
or
cmps
lea
jno
das
push
adc
inc
test
repz
xchg
pop
mov
std
push
xchg
mov
jno
sbb
popa
dec
lock
jl
aad
outs
in
cli
imul
sti
das
mov
add
or
aaa
xchg
mov
not
stc
push
ds
in
mov
ret
rol
sar
push
sahf
lock
cmps
sub
push
inc
push
inc
mov
and
dec
stos
enter
sub
and
push
jno
arpl
mov
ds
dec
mov
imul
and
fbld
js
into
dec
sbb
ss
mov
jmp
test
ret
adc
push
adc
in
push
add
xchg
test
mov
enter
jnp
and
lock
or
push
ins
xor
mov
cmp
shl
sbb
je
jae
adc
xchg
loop
mov
dec
mov
shr
and
mov
jnp
repnz
pop
inc
out
push
inc
pop
loope
ja
push
es
call
add
push
pusha
sbb
pop
xchg
jecxz
mov
push
pop
hlt
ins
leave
jp
mov
repnz
xchg
sub
jge
xor
jmp
pop
lock
mov
sub
or
dec
cmp
xchg
jae
jne
out
call
ins
fwait
movs
and
out
jno
or
dec
dec
lock
jl
out
inc
and
(bad)
cdq
push
mov
ds
xlat
xor
jl
outs
xchg
xlat
push
cmp
mov
adc
cld
push
leave
bound
popf
out
ja
dec
or
ds
xchg
mov
sub
mov
xor
xor
push
xchg
jo
pop
mov
sub
addr16
scas
and
test
outs
cmp
pop
outs
inc
leave
inc
addr16
mov
inc
in
mov
test
push
loope
pop
push
push
adc
dec
nop
test
movs
rol
out
pop
shl
xchg
rep
ja
adc
inc
xor
and
rol
sar
and
dec
cmp
sbb
(bad)
jae
jp
out
in
mov
popa
loop
ins
mov
and
fbld
js
std
inc
dec
inc
fiadd
outs
xlat
cdq
dec
div
das
adc
adc
or
xchg
movs
jo
aam
push
in
and
mov
retf
mov
stc
push
pop
popf
out
repnz
stos
sub
jge
sbb
(bad)
mov
mulps
out
mov
sbb
cmp
mov
mov
mov
jns
xchg
dec
mov
stc
mov
mov
and
rol
dec
fld
ja
inc
inc
outs
call
sub
add
pop
push
fidiv
or
push
inc
xchg
gs
inc
and
xchg
lods
int3
mov
mov
retf
popf
loopne
dec
stos
ds
inc
sbb
push
sbb
pop
push
dec
stc
fcom
add
push
mov
xchg
dec
test
xor
(bad)
jns
jo
ins
dec
test
shl
sti
mov
dec
cmc
sub
loopne
mov
cmc
and
mov
inc
jnp
ins
jnp
test
add
leave
jl
cdq
mov
fs
adc
pop
adc
in
or
cmp
ror
aam
mov
or
inc
sub
cmps
dec
(bad)
jle
shl
mov
dec
ffree
push
xchg
xor
cmc
stos
imul
cmc
inc
jg
aad
ja
stc
cli
jle
dec
sti
or
cld
es
push
outs
inc
mov
dec
push
call
pushf
mov
ffree
or
nop
pop
data16
pop
in
and
pushf
fnstenv
jg
or
and
and
and
fmul
sbb
aaa
jae
pop
sbb
push
cmps
push
ffree
or
sbb
std
js
repnz
inc
aaa
ret
sbb
test
jo
sub
jnp
sbb
xor
jg
adc
inc
dec
adc
jg
mov
scas
(bad)
in
test
and
out
push
stos
cmp
lods
out
or
adc
(bad)
fcom
or
or
jae
pusha
mov
mov
and
mov
div
sbb
fist
dec
dec
ficom
jbe
inc
push
outs
in
mov
cmp
sub
add
push
cmc
add
ja
inc
nop
mov
push
enter
pushf
xchg
mov
jg
and
repz
add
inc
inc
push
jl
jecxz
or
cmp
xchg
cmps
lods
push
push
or
sbb
adc
dec
pushf
xchg
inc
fistp
(bad)
jns
xchg
dec
xchg
gs
adc
mov
sub
fnstcw
enter
fisubr
outs
in
cmps
imul
sti
or
lea
lods
pop
jecxz
xor
sbb
int
movs
xchg
dec
retf
push
and
xchg
lahf
mov
xchg
inc
pop
ret
jno
cwde
lock
xchg
js
sub
loop
and
ror
mov
sub
arpl
nop
loop
mov
dec
mov
mov
xchg
cdq
and
in
inc
cmp
rcl
cmp
fs
arpl
ins
push
les
sbb
into
xor
outs
inc
mov
lsl
inc
push
push
sti
test
mov
leave
jns
mov
repnz
xchg
sub
lods
out
push
add
xor
mov
mov
jle
and
pop
and
outs
lods
pushf
jge
dec
(bad)
dec
xchg
mov
inc
repz
push
fist
jg
fst
ins
fisub
or
mov
inc
enter
and
dec
mov
js
jle
jge
inc
cdq
mov
ja
inc
sub
mov
adc
fst
loopne
je
cmp
push
or
fdivr
push
je
cld
cmps
pushf
mov
and
cmp
dec
mov
or
jmp
push
mul
sbb
ja
ins
ficomp
adc
(bad)
js
pop
call
push
ja
daa
movs
dec
xchg
or
mov
add
inc
push
push
movs
mov
daa
mov
ins
shl
xchg
rep
cmp
push
ins
mov
mov
adc
in
sar
and
jg
jae
pusha
lods
sub
jge
or
aas
std
rep
fwait
retf
mov
fnstsw
std
jp
inc
into
push
imul
mov
add
xor
and
aaa
push
sbb
jl
shl
in
or
mov
scas
test
inc
push
out
fist
mov
sbb
sub
dec
mov
movs
ds
aam
shr
unpckhps
inc
cmp
xchg
sub
jne
lock
sti
retf
xchg
jp
pop
clc
ins
dec
lock
outs
out
inc
and
mov
sub
(bad)
movs
dec
fdiv
pop
ja
inc
stos
mov
clc
sbb
jl
mov
mov
mov
retf
popf
repz
mov
adc
jmp
and
cmp
arpl
aaa
imul
dec
pop
data16
popf
dec
neg
sar
pop
mov
mov
and
cmc
mov
js
lds
shl
cs
js
pusha
call
push
ds
jle
ss
cmc
data16
inc
inc
cmp
int3
ins
jnp
mov
mov
scas
mov
sti
push
pop
xchg
rep
dec
xchg
push
dec
xor
adc
dec
sub
icebp
mov
sub
jg
pop
cmp
xchg
outs
mov
mov
or
pop
repnz
mov
sbb
cmp
clc
dec
dec
in
jl
mov
mov
push
mov
push
push
jg
es
out
sub
test
rol
mov
out
mov
jg
gs
mov
sub
jmp
dec
aam
shr
and
jg
pop
cmp
xchg
jle
jae
in
mov
jnp
aas
clc
rcr
hlt
mov
cmp
fmul
retf
addr16
rol
sub
daa
add
ret
adc
mov
pop
xchg
push
jg
push
add
xchg
leave
mov
inc
pop
ret
inc
jl
lock
push
ds
test
scas
daa
push
sbb
into
movs
movs
test
pop
daa
pop
sbb
jl
dec
adc
mov
cdq
mov
jns
bound
outs
aaa
ret
cs
mov
in
repnz
ss
xor
out
and
outs
arpl
xchg
mov
mov
cmp
mov
test
inc
inc
pushf
jnp
imul
pop
lea
cmp
sbb
loope
and
or
out
cmp
cmp
xchg
jne
adc
pop
scas
push
int
or
lock
pop
cmp
cld
pop
cmp
imul
shr
iret
and
add
sti
and
or
inc
inc
xchg
pop
ret
call
jnp
sti
test
movs
jg
jmp
cdq
iret
repnz
stos
sub
jnp
pop
dec
and
add
cmp
ret
mov
pop
and
push
cmp
xchg
jle
push
nop
iret
cmp
inc
leave
repz
movs
imul
pusha
jns
rcr
xor
mov
inc
aam
mov
xor
jae
adc
push
push
mov
gs
push
push
push
lea
or
movs
and
push
pop
lahf
loopne
outs
sbb
mov
dec
sub
xchg
xor
sbb
xor
jb
push
mov
popf
out
mov
dec
mov
stc
shr
or
call
shr
repnz
inc
jbe
hlt
mov
or
or
push
or
sbb
jae
xor
popa
outs
div
dec
xchg
loopne
cmps
adc
push
add
rep
ja
push
js
sub
inc
repnz
sub
sub
retf
movs
cmps
adc
sub
outs
push
sub
adc
mov
jns
hlt
push
cmps
push
test
pop
xor
std
push
aaa
int
push
pop
lock
js
dec
mov
loopne
and
or
and
and
je
mov
mov
dec
je
inc
push
jl
xchg
adc
and
out
xor
or
push
pop
adc
or
shr
xor
dec
cmp
dec
mov
mov
jns
mov
xor
aam
mov
or
mov
pop
clc
gs
lock
inc
fild
fdivr
jne
inc
clc
ds
into
xor
push
inc
inc
pushf
int
lahf
(bad)
push
push
xchg
lods
int3
mov
mov
retf
popf
fdiv
fs
push
js
jne
inc
lods
call
push
popa
fldz
mov
push
sub
sub
and
test
scas
shr
mov
pusha
repz
leave
and
lock
xor
clc
sbb
adc
jbe
inc
push
idiv
mov
or
or
in
sbb
int
sar
pop
loopne
add
test
mov
fsub
jl
(bad)
mov
pushf
add
inc
xor
xchg
mov
add
sbb
(bad)
mov
push
das
das
sub
push
cmp
xchg
dec
mov
mov
pop
cmps
dec
repz
movs
and
jecxz
imul
test
jb
dec
iret
pusha
push
cmp
mov
pop
xchg
aas
call
sti
sbb
dec
push
dec
xchg
int
xor
pop
enter
mov
mov
stos
rcl
ret
outs
cdq
aam
inc
std
cmp
push
pop
cmp
fdivr
dec
ins
shr
sar
sub
jo
jae
adc
mov
cmp
dec
jecxz
adc
movs
pop
xor
push
dec
test
out
inc
pop
outs
in
(bad)
imul
dec
lock
and
jl
adc
jnp
dec
or
(bad)
push
outs
xchg
mov
scas
scas
in
fwait
mov
lock
lock
xchg
js
gs
xor
or
or
retf
or
sub
call
cwde
mov
mov
or
test
arpl
addr16
mov
mov
movzx
push
jl
xor
jg
popa
push
jg
inc
cmps
mov
jg
push
cmp
mov
cld
and
or
push
pop
popf
xchg
cmp
jns
inc
xor
adc
or
movs
mov
cmp
or
dec
or
mov
(bad)
fstp
repz
jns
cs
arpl
ret
xor
mov
pop
in
les
push
imul
mov
int
xor
inc
jecxz
pop
mov
dec
push
int3
sub
int3
mov
hlt
sub
cmps
push
jle
fstp
popf
out
xchg
inc
lahf
push
js
push
or
aaa
xor
cmp
icebp
fcom
push
and
das
adc
mov
or
movs
inc
mov
xchg
scas
xor
mov
sub
imul
in
jg
test
mov
push
mov
das
push
jae
xor
or
inc
inc
xchg
mov
mov
inc
add
mov
push
or
rol
inc
or
das
sbb
enter
add
or
pop
cmp
repnz
push
mov
(bad)
out
mov
mov
ins
mov
and
mov
jnp
std
jns
xor
pop
gs
mov
gs
cmp
add
add
in
inc
xchg
jo
xor
ins
jae
xchg
lods
jo
not
enter
xchg
mov
xor
shl
jl
jecxz
dec
stos
sub
dec
push
mov
adc
(bad)
fisubr
adc
dec
cmp
pushf
js
jbe
test
loop
dec
mov
stc
mov
aas
sar
add
adc
ds
outs
in
mov
and
push
cmp
mov
enter
push
xchg
lea
int3
adc
xlat
push
cmp
or
ffree
adc
mov
(bad)
jmp
mov
or
or
adc
push
xor
rcr
shr
sub
sub
popf
dec
icebp
jb
fsub
mov
jecxz
popf
into
and
idiv
inc
dec
in
sbb
dec
jno
ror
hlt
sub
or
push
jae
inc
xchg
mov
(bad)
int3
push
and
(bad)
mov
scas
jb
loope
mul
jns
rol
bound
push
adc
retf
shr
and
cmp
dec
test
in
scas
test
addr16
or
xchg
pop
cmp
jnp
repnz
jns
sar
xor
sub
sub
add
aas
cmps
dec
les
xor
inc
adc
into
inc
sub
xchg
nop
int3
mov
mov
out
and
repz
xchg
js
push
or
and
cmp
popa
mov
xor
sub
add
jno
push
mov
(bad)
jns
(bad)
push
mov
xchg
mov
jns
pop
cld
pop
cmp
dec
sbb
fiadd
fisttp
cmp
cmp
es
out
and
fs
lods
pop
mov
adc
out
cmovl
in
xchg
fild
mov
test
push
inc
adc
push
and
adc
dec
sar
scas
or
cmp
and
call
cmp
xchg
ins
adc
in
pop
(bad)
xor
rcr
cmc
cmp
or
jecxz
movs
push
fnstsw
and
pop
mov
push
mov
data16
inc
jnp
mov
xlat
push
test
inc
inc
sar
and
lock
xchg
pop
xor
ins
mov
lahf
das
fs
arpl
mov
push
or
sub
outs
lods
xchg
pop
rcr
out
mov
push
mov
xchg
mov
jp
cs
xor
aad
pop
outs
in
mov
or
out
xor
jg
inc
mov
push
mov
adc
mov
loope
lods
mov
push
jle
jg
push
jbe
retf
xchg
pop
push
push
je
cld
fwait
adc
cmp
addr16
mov
mov
or
imul
in
mov
loop
sub
into
jp
pop
clc
pop
dec
in
jg
inc
outs
stc
cmc
jge
inc
mov
add
ja
ret
aas
movs
dec
fstp
sub
mov
mov
push
es
mov
push
test
inc
inc
ret
jne
cdq
xchg
repnz
repnz
inc
adc
xchg
fwait
or
and
ror
sub
cmp
push
test
test
dec
xchg
dec
stc
rcr
mov
mov
js
fst
imul
inc
pop
in
mov
hlt
sub
push
cmp
movs
push
in
and
inc
loopne
pop
mov
fs
in
mov
mov
ins
fbstp
mov
cli
push
movs
push
js
jne
pop
test
pushf
push
sbb
sub
adc
int
mov
sub
pop
pop
or
xchg
jl
je
pushf
or
stc
icebp
ins
mov
dec
add
movs
outs
sbb
shr
in
inc
push
aaa
ret
cmp
mov
dec
in
aas
idiv
and
or
add
jl
jnp
mov
push
sti
inc
jnp
cwde
test
sbb
push
sub
sub
sbb
pop
adc
icebp
fisttp
or
or
ja
adc
mov
or
repnz
test
dec
dec
add
js
repnz
dec
aaa
ret
xor
mov
imul
dec
retf
adc
bound
int
mov
dec
jnp
outs
or
int3
mov
aam
mov
mov
push
xchg
lock
cmp
pop
outs
mov
mov
ss
shr
mov
das
sub
and
test
push
mov
jns
scas
dec
xchg
dec
mov
or
jmp
dec
cs
bound
xor
cdq
imul
call
add
adc
add
dec
std
sbb
nop
lods
inc
movs
int3
dec
jb
inc
das
jb
xchg
mov
xchg
jae
xchg
dec
hlt
push
dec
cwde
out
fwait
dec
mov
cmp
push
(bad)
loop
xor
add
push
jg
out
mov
push
and
push
add
cmps
sub
cmps
dec
test
retf
imul
test
sub
call
bound
dec
arpl
fwait
or
aaa
jmp
adc
call
dec
xchg
cmps
jp
enter
inc
jae
movs
xchg
add
enter
and
ja
mov
sbb
iret
fcmovbe
lods
adc
sub
and
push
add
mov
dec
ror
sub
rcl
sbb
mov
cmc
inc
push
clc
bound
stos
dec
push
and
mov
bnd
sub
sub
sub
add
fisubr
xor
ja
int
mov
popa
das
push
in
stos
mov
aad
mov
bound
js
push
pop
sahf
call
pop
inc
dec
adc
aad
sub
or
scas
and
xor
xchg
mov
mov
jmp
or
clc
xchg
jp
push
test
push
sbb
fsub
sub
sahf
inc
(bad)
cmp
dec
add
ds
push
dec
jns
lahf
push
mov
jno
(bad)
inc
sub
mov
movs
xchg
pop
(bad)
(bad)
dec
xor
ret
mov
add
sub
jmp
sub
(bad)
add
inc
push
push
xchg
lods
(bad)
rcl
add
mov
xchg
push
and
nop
jl
les
pop
in
dec
and
rol
pop
rol
outs
xlat
push
mov
outs
adc
xchg
outs
cmp
pop
les
pop
sti
mov
cdq
mov
or
or
pop
ja
iret
mov
inc
jno
pop
sahf
in
mov
ss
icebp
mov
sub
inc
add
mov
mov
sub
test
lock
xor
les
jb
xchg
gs
rcl
inc
ds
inc
arpl
xacquire
xor
dec
sbb
adc
dec
ja
mov
xchg
rol
mov
mov
test
movs
jns
retf
push
rcl
clc
test
inc
push
and
add
es
stos
int3
mov
sub
outs
pop
sbb
in
rcr
or
jno
retf
(bad)
inc
or
stos
jge
daa
imul
in
pop
arpl
ins
popw
rol
pop
retf
and
adc
ins
pop
cmp
push
mov
push
cwde
test
mov
outs
retf
test
adc
jp
pop
jne
sahf
xchg
xor
cmp
repz
mov
push
sub
dec
adc
mov
popf
(bad)
out
push
mov
cmc
aas
test
and
ror
jl
sub
data16
ss
add
(bad)
cmpps
(bad)
pusha
xor
retf
push
in
aaa
adc
push
xor
mov
sahf
movs
call
jne
pop
stos
jnp
jmp
call
or
xchg
lods
or
xor
push
ja
out
mov
invd
sub
pop
inc
adc
mov
jns
jcxz
imul
repnz
lea
pop
loop
es
mov
aas
mov
and
mov
fwait
xor
mov
dec
cdq
icebp
dec
add
push
or
mov
xor
aad
(bad)
call
inc
push
xchg
mov
jg
sub
xchg
fimul
inc
aaa
push
dec
fcmovbe
call
ss
xor
sbb
(bad)
dec
repnz
xchg
lds
mov
lock
sbb
lods
inc
sbb
in
jne
pop
into
aaa
pop
fidivr
sbb
or
add
ds
push
inc
mov
dec
jge
popa
and
cmps
test
push
out
pop
fidiv
aam
outs
mov
ins
pop
mov
sahf
push
aas
push
dec
sub
shr
cmp
dec
sbb
aad
pop
adc
xchg
fisubr
lea
js
add
push
push
pusha
lock
push
daa
(bad)
mov
inc
mov
sbb
xchg
or
push
aaa
pop
dec
ss
mov
movs
aad
pop
std
cmp
mov
mov
out
rcl
fwait
loopne
dec
mov
arpl
es
sub
or
dec
adc
mov
dec
sub
bound
jbe
pop
cmps
mov
xchg
loop
push
xor
loope
movs
test
xor
nop
jnp
or
popa
and
outs
ins
pop
mov
mov
pop
std
sbb
sbb
adc
fs
mov
ins
test
sbb
inc
lods
xor
enter
push
nop
cmc
mov
xor
nop
test
cs
ins
stos
jmp
cmp
sub
pop
adc
in
call
mov
jecxz
cmp
cli
mov
xor
call
jbe
rcl
aaa
(bad)
mov
or
add
add
xor
outs
in
push
cmps
mov
retf
mov
mov
add
dec
idiv
arpl
xor
inc
dec
imul
mov
and
aad
leave
test
push
dec
or
imul
and
mov
repz
cmps
sti
or
xchg
int3
sub
rol
js
push
and
or
pusha
aad
inc
imul
outs
fldcw
cmp
rol
je
ds
jbe
dec
mov
dec
add
push
sbb
lahf
fwait
scas
mov
jl
pminsw
mov
sub
push
jno
pop
cld
int
and
cmc
int3
scas
xchg
mov
and
sbb
mov
fdivr
push
or
sub
xlat
jnp
das
fistp
push
(bad)
je
sub
ins
pop
ins
test
ds
dec
xor
add
jg
sub
jae
jns
into
jge
mov
retf
pop
xchg
fwait
mov
rcr
xchg
or
jae
loop
fwait
dec
xchg
xor
or
jle
ret
lea
pusha
movntps
inc
(bad)
call
push
push
mov
mov
aas
icebp
out
xor
enter
xchg
pusha
or
ja
outs
jp
out
push
cld
ja
or
push
add
sub
adc
pop
movs
xchg
shr
fild
cs
loopne
mov
pop
ficomp
mov
add
jge
ins
jbe
fisubr
adc
cmps
test
sti
ss
xor
pop
sbb
mov
inc
in
pop
mov
push
mov
and
sub
ret
sub
int3
push
jno
int
imul
fisttp
mul
sbb
push
push
inc
stos
mov
hlt
push
inc
int3
inc
sub
mov
loop
repnz
pop
jp
pop
hlt
inc
ins
mov
in
(bad)
or
jb
jnp
out
aam
xor
es
jmp
xchg
xchg
mov
cmp
jle
or
inc
lods
ret
add
cmc
in
mov
imul
out
pop
inc
repz
cld
call
je
pop
lds
or
retf
add
adc
lods
addr16
jno
mov
loope
call
pop
fst
(bad)
outs
jecxz
xchg
push
xor
or
movs
sar
add
faddp
lods
aad
adc
add
dec
add
(bad)
ret
repnz
mov
push
lods
ins
lock
das
out
mov
movs
nop
add
sbb
pop
sub
in
data16
neg
ds
and
jg
adc
dec
xor
cwde
arpl
pop
push
jl
xchg
lods
mov
mov
mov
push
pop
cdq
int3
mov
add
imul
or
dec
dec
push
pop
hlt
enter
push
and
cs
and
js
cdq
bound
mov
jmp
test
in
gs
push
imul
and
shl
mov
sbb
adc
ds
loope
sub
pop
out
and
fidivr
xor
jb
loope
cdq
xchg
dec
scas
mov
jg
jb
je
xchg
in
fwait
outs
xchg
dec
add
dec
das
ins
mov
pop
cmp
sbb
mov
ins
cmp
inc
xor
pop
adc
xchg
hlt
sbb
mov
xor
movs
xor
out
push
adc
(bad)
sbb
dec
loop
jbe
or
and
sub
pop
mov
jmp
movs
xchg
sub
mov
xchg
(bad)
fiadd
pop
jg
push
lods
inc
sub
xor
imul
lods
hlt
fisub
cmp
xor
leave
xchg
push
push
pop
sub
adc
dec
cmp
sbb
inc
call
and
sbb
jmp
dec
inc
enter
hlt
mov
inc
jmp
leave
pop
add
sub
mov
push
mov
xchg
lods
mov
xchg
inc
(bad)
in
jle
je
scas
xchg
mov
jmp
scas
int
xor
pop
adc
push
pushf
push
sub
xor
pop
sbb
adc
or
mov
cmc
sbb
sti
xchg
ins
or
in
dec
test
cld
xor
adc
xchg
cli
jl
pop
out
and
push
call
push
push
inc
jns
stos
cwde
push
cdq
call
pop
jecxz
sbb
pushf
mov
std
(bad)
jnp
leave
or
jmp
cmp
je
add
sbb
jmp
pop
sbb
inc
pop
inc
dec
lods
lods
and
xchg
jge
inc
std
shr
lods
adc
adc
pop
dec
mov
je
cld
ja
xor
push
stc
pop
std
jge
sub
mov
test
sub
mov
ins
lahf
jmp
pushf
sti
xchg
xchg
call
hlt
push
call
mov
add
adc
lahf
lahf
sub
sub
sbb
fwait
adc
add
bound
or
popf
cdq
sub
push
mov
das
out
das
mov
jmp
adc
clc
cmps
pop
(bad)
in
pop
sbb
pusha
jo
call
retf
or
and
or
xor
aam
jl
dec
jae
mov
mov
pop
iret
push
mov
jno
imul
data16
sbb
aad
sub
sub
adc
fdivrp
mov
and
pop
inc
mov
xchg
les
scas
sub
xchg
sahf
push
add
aam
push
xor
push
cmp
ja
pusha
xlat
dec
push
mov
adc
jno
pop
iret
or
xor
jecxz
int3
push
es
inc
dec
cld
stos
and
ins
push
je
xchg
mov
sahf
in
mov
gs
and
loop
outs
xor
dec
lahf
cmc
xchg
das
sbb
shl
or
sub
inc
sbb
xchg
imul
fwait
sti
data16
fmul
ins
cwde
cdq
or
and
outs
adc
repnz
push
(bad)
and
daa
xor
mov
dec
arpl
mov
xchg
shr
mov
mov
mov
scas
fs
imul
jb
hlt
mov
mov
push
add
push
test
or
ds
rcl
aaa
inc
and
adc
jb
sti
add
push
call
pop
or
mov
add
enter
jbe
inc
fnstenv
adc
fwait
pusha
sar
add
pop
jecxz
mov
pop
pop
jb
mov
mov
popa
add
xor
das
mov
mov
call
ror
jnp
(bad)
mov
jg
dec
push
pop
std
xchg
mov
es
fstp
adc
pop
xor
sbb
add
movs
(bad)
sub
xor
(bad)
fs
add
out
jp
rcl
sbb
push
pop
xor
mov
sbb
icebp
and
ins
out
adc
inc
test
add
jno
inc
xchg
mov
mov
data16
psraw
mov
test
dec
pop
popa
pop
push
mov
inc
add
jmp
pop
cmp
cmp
pop
mov
(bad)
cwde
xchg
inc
(bad)
inc
fcmovne
aas
xchg
pop
dec
adc
push
cmp
gs
loope
sub
std
scas
push
lock
ja
sti
sbb
push
leave
xor
clc
iret
inc
cmps
ficom
push
movs
sub
push
mov
and
mov
xlat
ins
(bad)
mov
dec
push
jne
and
mov
push
xor
call
cmp
push
pop
inc
mov
xchg
sbb
shr
adc
mov
call
pop
das
sti
push
sbb
ins
popw
in
adc
lds
pop
xor
add
jl
add
inc
jo
test
push
jecxz
or
cmps
mov
(bad)
xor
mov
stos
inc
dec
xchg
jmp
cmp
ins
sbb
shl
jp
in
lahf
mov
movaps
add
clc
xchg
push
push
pop
test
stc
xlat
xor
xchg
pusha
or
pop
inc
iret
inc
pop
push
fiadd
xor
clc
js
push
rcl
inc
aam
mov
pop
push
mov
jle
ins
sub
lahf
and
push
inc
test
test
adc
jns
cmp
out
mov
es
mov
sub
pop
sub
inc
mov
add
pop
aad
adc
test
pop
aas
shl
loopne
inc
xchg
pop
repz
setge
push
pop
addr16
push
xchg
jmp
inc
out
add
mov
shr
sub
pop
xor
mul
push
dec
push
adc
xchg
mov
dec
jp
lock
and
pop
es
xor
cdq
js
jne
repnz
cmps
scas
sub
leave
xor
enter
adc
pop
push
int
dec
aaa
lods
jne
cmp
mov
and
pop
push
jae
or
jnp
and
popf
pushf
arpl
addr16
test
ss
cmp
into
dec
xchg
cwde
movs
dec
nop
cmp
data16
in
or
clc
xchg
test
sub
push
push
push
in
pusha
int3
outs
scas
std
add
mov
(bad)
push
cmps
pushf
sub
sti
xchg
sbb
inc
fs
push
jns
outs
shr
shl
or
push
mov
gs
inc
xor
mov
adc
push
hlt
pop
sub
adc
jg
sub
repnz
add
div
test
cmp
adc
adc
call
nop
xchg
push
movs
push
scas
sbb
pop
cs
ins
or
push
dec
dec
cmc
ins
jge
sti
fwait
jg
push
mov
into
or
add
sbb
inc
imul
(bad)
out
and
adc
ja
imul
mov
jp
xor
or
dec
add
leave
mov
push
adc
jecxz
idiv
xchg
xchg
sahf
das
test
and
mov
sbb
push
jmp
icebp
jno
pop
xlat
pushf
pop
out
jmp
or
in
inc
cmp
in
popa
fcomi
jo
leave
imul
fwait
mov
and
or
aad
inc
movs
dec
or
push
xchg
sbb
cmps
cmps
(bad)
mov
adc
sub
je
loope
jecxz
xchg
cmp
lahf
dec
mov
call
add
(bad)
push
jg
ja
sbb
push
ror
ret
sbb
add
push
je
popf
mov
icebp
ins
dec
lds
and
mov
js
jp
pop
ins
scas
les
add
ins
pop
mov
sub
or
mov
add
bound
pushf
pusha
mov
mov
dec
(bad)
arpl
into
cmp
ret
cmp
xchg
inc
popa
dec
stc
aaa
js
sti
mov
push
in
jecxz
and
dec
enter
(bad)
or
xchg
jp
in
push
add
cmp
loopne
int
(bad)
mov
or
cmps
dec
stos
or
fwait
in
test
adc
cmp
mov
cmp
dec
sub
cmps
mov
or
retf
(bad)
cs
mov
es
xlat
sbb
and
dec
sbb
pop
inc
imul
push
outs
clc
lods
jnp
jb
aaa
ror
jbe
aam
fbstp
sbb
fs
dec
stos
shl
xchg
fisubr
les
outs
mov
rol
stos
sti
push
mov
push
int3
push
dec
mov
mov
sub
(bad)
rol
push
pop
(bad)
mov
mov
outs
sub
in
jge
imul
mov
xchg
lahf
or
cli
test
sbb
inc
pop
jb
push
fs
call
sub
push
mov
pop
adc
mov
gs
loopne
pop
out
or
out
mov
cmps
stos
xor
pop
test
mov
xchg
and
xor
pusha
cmps
xchg
(bad)
adc
dec
cmps
(bad)
mov
xchg
xor
and
sbb
and
test
rcr
popf
ja
xor
jecxz
mov
xchg
sub
mov
cmp
ins
pop
aas
shl
cmp
std
pop
loop
into
cmp
cmp
and
and
pop
imul
es
(bad)
jge
rcl
adc
mov
inc
pusha
nop
jnp
dec
dec
xchg
fdiv
jp
xor
jb
sbb
add
or
and
retf
(bad)
mov
movs
aaa
pop
or
adc
pop
or
mov
inc
(bad)
push
xchg
mov
mov
cmc
(bad)
sub
loop
push
sub
shr
out
jp
pop
scas
xor
test
jbe
mov
jmp
sub
bound
gs
sub
ja
lods
mov
adc
push
rcl
mov
add
cs
ja
sbb
cmp
and
ftst
xchg
leave
mov
aas
imul
sbb
xchg
pop
enter
push
mov
pop
(bad)
xor
or
mov
dec
aad
jns
scas
pop
jbe
div
push
mov
sti
pop
xchg
push
not
das
jl
inc
or
jge
pop
sub
fcom
daa
cli
fild
jae
jbe
popf
shr
and
mov
sub
fld
bound
jns
ja
loope
ret
push
fadd
sbb
push
fsubp
sbb
mov
sbb
(bad)
ins
inc
retf
jo
dec
fisttp
pop
out
scas
jb
ins
(bad)
and
aaa
das
jno
rcr
push
pushf
ds
mov
or
sub
test
mov
outs
jns
imul
movs
xor
xor
inc
movs
cmc
stos
xor
add
mov
test
pop
inc
addr16
jno
mov
mov
loop
xor
xor
ror
mov
jb
and
push
adc
ja
push
xor
fsub
add
adc
and
adc
in
dec
fisttp
push
cs
xchg
add
js
into
push
loope
push
mov
sub
xor
out
ret
push
and
and
aam
(bad)
das
add
pop
dec
mov
pop
mov
fwait
ret
mov
jmp
cmp
sub
pop
dec
fadd
adc
scas
or
dec
in
sub
add
push
rcr
mov
jge
xor
mov
mov
push
in
outs
sbb
lods
call
mov
push
lock
sub
repnz
cmps
or
jb
pop
or
adc
pop
mov
aas
and
cmp
sbb
lea
adc
sti
sbb
push
in
(bad)
or
cmps
inc
sbb
inc
push
out
ins
pop
jae
jne
jno
mov
inc
out
loope
push
outs
pop
jmp
mov
sbb
push
push
inc
lahf
mov
pop
imul
dec
loope
int
pushf
(bad)
and
push
stc
and
dec
jno
push
sbb
aad
adc
dec
sub
dec
shl
scas
mov
or
dec
pop
inc
stos
mov
retf
push
xchg
add
sti
lds
test
imul
mov
inc
fld
or
test
ins
inc
jecxz
mov
jno
xchg
dec
fdivr
pop
pushf
mov
add
mov
jb
jo
test
(bad)
dec
cmp
aam
adc
jg
mov
sub
sub
or
popf
mov
repz
sbb
jecxz
cmp
nop
pop
aas
jle
adc
(bad)
pop
pop
aaa
scas
fs
aas
in
std
push
xchg
sub
jbe
push
or
xor
xor
pusha
dec
mov
data16
out
adc
push
jg
mov
retf
stos
dec
dec
loope
loop
js
cmc
lods
push
mov
adc
and
and
(bad)
jmp
sub
sbb
mov
fmul
mov
das
test
clc
lahf
add
sbb
jne
jge
jb
push
ret
sti
dec
fdiv
fild
test
push
adc
ret
sbb
or
ja
lods
inc
leave
iret
dec
jbe
xor
and
hlt
sbb
jmp
in
xor
ins
jp
xchg
movs
add
sub
mov
or
pop
push
push
inc
jae
sbb
cmp
mov
lock
xchg
jge
add
gs
inc
inc
loope
arpl
dec
mov
in
push
or
and
xor
bound
jl
ret
pop
out
mov
lods
aad
add
add
xlat
xchg
stos
sub
push
dec
cmp
mov
add
push
push
cmc
stc
mov
and
jle
ja
push
stos
lods
dec
clc
push
mov
jle
sub
xchg
and
sub
push
add
pop
adc
mov
and
adc
pop
into
add
xchg
jg
out
pop
inc
int
jae
mov
fisub
cmps
push
jnp
pop
rcl
out
xchg
inc
ins
ins
in
xchg
and
cs
js
loop
mov
add
es
inc
sahf
in
jb
pop
mov
and
add
call
or
dec
cmp
inc
arpl
clc
mov
pop
iret
pop
adc
push
iret
adc
pop
ins
cmp
ins
push
cmc
pusha
or
xchg
mov
mov
adc
mov
out
cld
jo
xchg
rcr
pop
push
ins
addr16
int
pop
adc
add
push
(bad)
iret
mov
add
pop
sbb
mov
sar
sti
(bad)
retf
mov
dec
sbb
mov
inc
leave
outs
fs
lods
push
std
jae
inc
retf
or
ss
xor
jns
jns
xchg
inc
stos
mul
(bad)
push
cmp
or
mov
daa
cwde
mov
jge
js
push
xor
and
inc
jae
popf
rep
xor
cs
push
push
(bad)
in
xchg
movs
cmps
pop
and
pop
xor
push
mov
xchg
fdiv
mov
xor
loope
cld
movs
cmp
les
dec
add
push
jg
mov
stos
jno
pop
fstp
(bad)
sub
adc
movs
push
int
adc
xor
inc
add
pop
and
xchg
mov
mov
lods
pusha
pusha
into
fnstenv
mov
xchg
adc
xor
push
or
cmp
mov
lea
pop
pop
das
imul
cwde
inc
idiv
lock
xchg
pop
test
shl
das
mov
cdq
outs
cmp
out
inc
xchg
outs
jbe
jmp
(bad)
ins
into
addr16
add
fs
push
jnp
daa
int
call
pop
xchg
xchg
popa
mov
push
jns
inc
or
xchg
(bad)
mov
in
and
out
lea
add
xor
pop
mov
or
add
hlt
shl
cmp
jb
dec
pop
push
call
mov
fsub
xor
cmps
dec
das
and
dec
pop
aad
sbb
inc
ins
loopne
pop
shr
aaa
int
das
jb
enter
stc
adc
push
inc
ins
fwait
mov
xchg
mov
sti
xor
lahf
or
mov
shl
jo
mov
add
dec
sub
mov
adc
inc
aam
cwde
mov
add
xor
pop
or
(bad)
cli
daa
mov
push
test
shr
xor
mov
bound
dec
dec
iret
jo
sbb
mov
sbb
or
sub
jmp
mov
push
sub
mov
mov
inc
push
pop
sbb
dec
fdivr
inc
jl
fdivr
pop
bound
inc
add
daa
xor
pop
adc
mov
xchg
mov
push
daa
jns
jae
loope
mov
mov
jge
xor
mov
(bad)
(bad)
sbb
xlat
mov
cmp
data16
adc
push
leave
inc
jle
fnstsw
adc
js
xor
ins
push
dec
cld
iret
jns
cmc
jo
mov
lahf
mov
in
jo
xchg
jp
pop
jno
fld
pop
imul
pop
sbb
push
pop
pop
out
test
xchg
adc
pop
xor
das
ja
mov
in
mov
leave
iret
cmp
xchg
jp
jo
ins
sub
sub
fld
and
and
cmp
pushf
push
(bad)
sahf
inc
mov
inc
outs
mov
pushf
xchg
mov
shl
push
retf
pop
mov
pop
xchg
out
(bad)
jae
sub
pop
imul
xor
sbb
adc
retf
xchg
cmps
xchg
and
sub
bound
je
adc
cmp
out
pop
sahf
ja
(bad)
ds
mov
sbb
std
bound
out
je
jg
push
es
stc
out
ret
data16
push
add
aas
sub
dec
pushf
xchg
popa
(bad)
shl
fidiv
jne
mov
xor
fidiv
retf
je
mov
cmp
push
adc
neg
push
pusha
adc
sub
shl
or
dec
pop
or
dec
mov
jbe
push
in
call
push
mov
cmp
mov
and
pop
adc
clc
push
sub
xchg
pop
mov
adc
movs
outs
shr
adc
out
dec
add
test
pushf
lods
inc
ins
iret
or
jl
sahf
in
xchg
add
jae
and
add
sbb
mov
cmp
inc
add
scas
inc
jecxz
fwait
xchg
in
gs
dec
xlat
ror
lods
cmp
cmp
jl
icebp
inc
outs
inc
fiadd
sbb
popf
pusha
in
leave
pop
loope
and
inc
out
inc
mov
imul
mov
fcmovne
gs
enter
mov
std
add
rcl
loop
shl
mov
cmp
sub
out
sub
sbb
mov
xchg
push
push
and
pop
or
cmc
jp
or
iret
cmc
cmp
lea
movups
popa
xor
imul
lds
sbb
jl
push
jo
xor
push
sbb
mov
xlat
push
add
sub
mov
movs
mov
retf
nop
idiv
jno
dec
or
ja
inc
xchg
xchg
cmps
and
inc
push
jle
lds
pop
or
jns
add
pusha
cli
loope
int3
pop
cmps
sub
cld
in
pop
mov
test
and
inc
inc
xlat
xor
mov
sbb
sub
push
retf
outs
loop
add
ja
nop
jae
ror
jmp
push
dec
test
add
dec
shl
jmp
inc
imul
das
push
sbb
fidiv
sub
pusha
pop
je
cdq
inc
not
fwait
iret
and
iret
(bad)
call
bswap
adc
popa
push
jae
pusha
push
loope
jb
inc
icebp
pop
mov
add
inc
repnz
fistp
pop
daa
jg
dec
loope
ins
mov
data16
push
out
int3
(bad)
rol
mov
imul
movs
dec
mov
jno
dec
or
add
push
adc
ror
xor
jbe
dec
lods
out
out
mov
bound
rol
jae
mov
and
inc
sub
or
repz
sbb
mov
das
jmp
lods
pop
leave
imul
pop
fndisi(8087
push
inc
fdiv
add
cmps
mov
and
ret
mov
sbb
mov
lods
push
add
adc
mov
xor
add
ins
lock
mov
dec
aam
mov
sub
mov
adc
mov
aam
ja
icebp
jne
daa
in
hlt
or
mov
or
jg
das
xchg
jno
daa
add
inc
movs
enter
push
inc
into
dec
add
xchg
xchg
lahf
shl
or
jns
inc
pop
pushf
leave
mov
and
call
xor
dec
aad
mov
add
push
adc
mov
sub
mov
cmp
jmp
mov
fild
inc
hlt
push
jg
ins
mov
push
aaa
jo
test
fst
outs
adc
movs
outs
movs
test
inc
sub
mov
mov
dec
push
dec
arpl
sub
jle
sub
ret
xor
push
add
stos
(bad)
lods
xchg
test
or
add
inc
repnz
not
hlt
or
in
test
push
sub
pop
dec
std
jnp
jbe
pusha
inc
adc
int3
cmp
jg
aaa
jbe
cmp
dec
push
xchg
mov
jae
push
sbb
loope
scas
rol
mov
jb
inc
jo
jmp
xor
sub
loop
add
sbb
stos
mov
sbb
aaa
add
dec
popf
test
or
imul
loopne
imul
rcr
in
add
xor
cld
push
ret
add
jge
sub
inc
lods
gs
adc
xchg
inc
in
data16
dec
mov
retf
not
adc
loop
push
xchg
div
jnp
ds
lods
loop
push
aaa
cmp
mov
outs
or
adc
js
popa
mov
xchg
jo
popf
pop
xchg
ss
scas
es
mov
pop
add
stc
add
(bad)
dec
outs
ss
ins
jo
rol
push
cmp
xor
jns
xor
pop
bound
scas
jno
hlt
or
ss
mov
add
ja
pop
push
mov
repz
lods
pop
sbb
sti
xchg
mov
and
xor
mov
and
dec
sbb
mov
aam
mov
pop
(bad)
push
in
(bad)
imul
dec
adc
adc
(bad)
jle
xor
test
std
ins
stc
and
pusha
loopne
lea
xor
mov
dec
cmps
repnz
jne
pop
mov
movs
test
dec
leave
or
mov
push
inc
pusha
movd
push
sub
in
(bad)
mov
and
dec
inc
addr16
ins
mov
pop
lods
dec
iret
xchg
mov
outs
fsubrp
push
xchg
movs
add
in
pop
sbb
mul
sub
aas
and
sar
jns
dec
hlt
xor
inc
test
rcl
pop
push
jbe
mov
mov
mov
pop
cwde
mov
sbb
dec
(bad)
popa
dec
(bad)
ror
add
push
idiv
pop
push
mov
dec
sub
sub
pop
adc
pop
jle
in
mov
out
iret
ja
mov
rcl
cmp
repz
pop
sub
cmp
cmp
add
push
xchg
scas
pop
mov
popa
push
lds
xor
pushf
cdq
and
jl
jge
inc
outs
mov
xchg
xor
sub
js
retf
aad
xor
sbb
xchg
mov
inc
and
sub
cdq
mov
loop
mov
jmp
sub
mov
push
adc
push
imul
mov
pop
loop
adc
js
das
xchg
outs
cli
adc
jl
dec
sbb
fstp
das
mov
lds
mov
inc
xchg
jns
pop
dec
mov
or
inc
(bad)
int
push
add
sbb
jg
cld
mov
cli
or
add
jno
mov
icebp
jle
fisttp
imul
add
leave
dec
add
dec
inc
ss
mov
cli
jle
inc
mov
sub
icebp
add
push
dec
jnp
xchg
jp
cmc
push
fidiv
or
loop
movs
mov
fistp
sar
jle
les
inc
inc
or
int3
lea
xor
rcr
stos
int
xor
adc
imul
loope
mov
je
pop
clc
(bad)
sub
enter
mov
dec
sub
pop
pop
inc
mov
jle
aam
ja
das
not
sbb
mov
fwait
push
into
sub
(bad)
push
test
outs
jae
cmp
jp
in
cmps
fsub
inc
retf
and
xchg
mov
xchg
adc
adc
mov
cmp
cs
shl
mov
adc
ss
inc
test
pushf
rol
ret
ds
sbb
icebp
sbb
gs
push
jl
shl
and
pusha
xor
mov
fstp
dec
push
bound
dec
jge
jne
push
lods
test
stos
mov
lods
and
jmp
add
js
shr
es
mov
outs
dec
sbb
dec
movs
mov
icebp
cmp
neg
ds
xchg
pop
sub
and
data16
dec
push
sub
dec
retf
push
and
jg
ds
(bad)
push
add
pusha
xchg
xchg
jnp
mov
mov
jecxz
mov
xchg
inc
pop
in
pop
sti
push
inc
xchg
dec
jo
xor
lods
enter
sub
sub
xlat
fcmovnbe
cmps
xchg
sub
pop
outs
jp
bound
jo
loop
shr
or
loopne
sbb
xchg
jo
jns
ins
push
fisub
inc
fidivr
arpl
in
push
arpl
add
sbb
add
dec
mov
push
adc
movs
and
fs
mov
in
mov
dec
inc
rcr
inc
js
xchg
test
sub
arpl
clc
aad
sub
clc
fld
push
jne
and
xchg
mov
in
data16
out
retf
retf
or
call
test
push
inc
xor
pop
sub
cdq
push
icebp
jo
pop
mov
dec
and
ds
push
dec
jns
pushf
push
mov
jae
std
jnp
push
movs
xchg
mov
cli
mov
loope
ret
scas
jecxz
jno
(bad)
pop
xor
lods
out
sub
adc
mov
ins
das
and
dec
inc
jbe
outs
lods
sahf
jg
dec
movs
test
loop
sub
jle
cld
das
out
test
mov
jle
sar
jg
jo
xor
test
cmp
pop
loop
or
fild
pop
xlat
adc
push
jb
lahf
into
jp
fiadd
jmp
or
cmp
stos
jo
in
fst
mov
stos
aaa
lahf
and
jo
push
adc
and
cld
mov
jnp
sub
and
xchg
cli
inc
loopne
fwait
clc
sub
ss
xlat
adc
cwde
dec
dec
add
gs
pop
repnz
sar
in
imul
mov
lea
sbb
aaa
mov
jb
clc
inc
push
jge
xchg
mov
fs
inc
dec
mov
(bad)
scas
or
sbb
jae
mov
inc
adc
cmps
(bad)
pushf
pop
das
pop
cmp
jne
jnp
mov
ins
cmps
fldcw
loope
dec
(bad)
inc
cmc
int3
push
test
pop
(bad)
nop
pop
xor
shl
fst
pop
shl
pop
xchg
jle
xor
or
inc
mov
inc
add
xchg
adc
jne
js
cdq
leave
xchg
push
or
pop
imul
pop
push
adc
out
nop
sti
add
pop
sub
arpl
mov
sub
cmp
mov
push
test
inc
into
dec
push
sub
mov
jl
sub
jg
sub
dec
int
push
dec
adc
mov
ret
or
mov
lds
repnz
arpl
outs
lods
push
jbe
in
dec
pushf
dec
xor
sbb
out
fwait
pop
and
pop
push
ins
cld
mov
test
imul
clc
xchg
xor
or
aam
cwde
sub
cmp
mov
cmp
dec
xor
jno
sub
push
jb
pop
int
mov
not
packuswb
adc
mov
push
jge
xchg
lods
ret
add
test
pushf
or
add
cs
pushf
xchg
pushf
xor
invd
sub
cli
cmps
xchg
mov
sub
sbb
add
mov
inc
loope
xchg
into
xor
mov
(bad)
inc
(bad)
add
mov
lea
sbb
pusha
push
pop
hlt
(bad)
arpl
push
call
add
dec
cli
sub
aaa
fwait
lahf
jl
mov
mov
mov
and
mov
std
inc
jg
stc
stos
aaa
mov
and
push
pop
cld
call
and
inc
mov
cmp
sub
or
and
daa
sbb
xchg
and
(bad)
cld
es
xchg
aas
and
jg
sub
adc
test
sbb
fisttp
ds
sar
mov
xor
xchg
fisub
mov
push
mov
ja
jno
lods
aad
pusha
(bad)
dec
adc
xchg
cmps
and
and
xchg
es
and
mov
out
mov
out
loope
mov
mov
sbb
inc
sub
pop
push
fisttp
call
jmp
mov
push
dec
ins
sahf
lods
ins
mov
inc
jae
mov
popf
lahf
fsubp
push
cmps
aam
inc
in
js
je
xchg
cdq
mov
stos
dec
and
lods
retf
lods
add
(bad)
scas
mov
sub
das
and
jnp
in
dec
enter
cmp
rol
mov
inc
cmp
test
aas
fld
xor
fs
hlt
jbe
pop
fisub
and
push
and
ins
inc
clc
lods
bound
or
mov
add
jp
jae
in
lock
push
std
adc
push
cmovg
push
sub
push
out
mov
pop
jnp
push
xor
test
paddusb
or
(bad)
out
fwait
mov
cmp
xchg
sbb
fs
ins
jnp
lods
inc
xor
xor
and
fidiv
fwait
movntq
retf
jno
shl
std
pop
sub
mov
mov
mov
inc
dec
repz
pop
push
mov
sbb
addr16
sbb
repnz
dec
pusha
pop
and
inc
test
(bad)
stos
dec
jo
pop
or
push
sbb
jne
addr16
fdivr
test
enter
inc
jl
aad
push
sbb
ins
aaa
lods
ins
and
popf
adc
dec
test
jg
xor
unpckhps
sahf
aas
or
mov
sti
xchg
js
iret
or
daa
imul
xor
push
addr16
inc
add
xchg
mov
aaa
push
dec
sub
call
cs
outs
test
mov
mov
adc
sti
mov
ds
leave
push
and
push
fs
dec
jp
hlt
mov
pop
in
enter
dec
mov
fwait
jnp
push
xor
jns
shl
out
sub
mov
mov
ret
gs
bound
enter
sbb
inc
dec
and
or
jle
repz
(bad)
push
pop
cmp
jge
jae
xchg
add
inc
sti
lds
lea
ins
cs
imul
jno
push
stc
inc
push
adc
cmc
push
arpl
sub
jl
push
dec
in
sbb
dec
inc
inc
in
jo
add
xor
dec
mov
ret
enter
push
bnd
mov
add
in
mov
es
jmp
cmp
inc
daa
jl
dec
mov
mov
and
je
idiv
mov
mov
sub
inc
or
sub
ins
repnz
arpl
push
(bad)
and
and
mov
or
arpl
gs
xchg
adc
xor
xchg
fwait
mov
outs
push
iret
gs
jle
lods
out
test
jle
dec
imul
aas
or
movs
shl
cmp
jp
imul
mov
mov
jmp
push
in
sbb
fwait
jge
idiv
test
ins
out
push
jge
ror
(bad)
cmp
js
sub
adc
jo
nop
mov
jo
inc
add
cwde
sbb
rcl
push
jge
in
pop
repnz
pop
push
es
repz
add
or
adc
mov
scas
scas
sub
sbb
imul
js
cmp
in
aad
out
xchg
xor
or
int
or
or
cmc
pop
js
jecxz
pop
iret
push
aam
in
push
sub
dec
in
adc
pop
sahf
sub
js
addr16
push
jnp
inc
addps
sar
xchg
push
jge
dec
out
pop
push
mov
pop
sbb
adc
add
ror
nop
mov
pop
sub
push
mov
(bad)
xor
hlt
into
push
movs
test
or
mov
sbb
push
jle
jmp
pop
xchg
push
in
aad
retf
or
sub
inc
mov
dec
pop
inc
xchg
xchg
push
or
sub
jmp
xchg
repz
sub
xchg
mov
jmp
mov
ds
mov
movs
sbb
and
pop
cs
mov
xchg
in
sbb
call
sbb
and
sbb
mov
xor
mov
push
and
ss
and
hlt
es
push
xchg
and
jl
sub
lods
sub
leave
sub
test
mov
and
imul
jne
loopne
jbe
add
cwde
jecxz
xor
dec
dec
push
outs
cli
ror
inc
ins
push
pop
adc
in
into
dec
xchg
sti
and
std
mov
mov
mov
and
inc
push
xlat
dec
arpl
push
dec
push
fidivr
sbb
jg
sub
jnp
sbb
push
jbe
movs
push
lahf
rol
inc
jae
mov
rcl
enter
dec
scas
pop
push
mov
or
add
(bad)
cli
ret
mov
and
and
mov
dec
and
dec
sbb
dec
cli
mov
jmp
dec
xchg
jl
mov
sub
aam
sub
in
sbb
outs
ja
fild
daa
sbb
xor
add
push
dec
outs
cmps
mov
pop
fcom
pop
sahf
jecxz
stos
cmps
mov
jge
push
jmp
mov
cmp
sbb
mov
or
in
test
push
sub
or
inc
lea
shl
mov
inc
iret
xlat
push
call
or
jae
fist
push
push
ja
jecxz
adc
xor
push
repz
clc
cmp
dec
bound
mov
inc
mov
addr16
fidiv
jg
mov
fild
inc
(bad)
mov
outs
xchg
stc
mov
bound
add
rcr
jg
ret
mov
sub
jp
xchg
push
mov
mov
pop
xchg
ins
push
add
cmps
and
in
cmp
fs
fimul
or
jb
sbb
jg
sbb
enter
jmp
test
fild
sbb
mov
mov
push
imul
stos
iret
mov
js
sbb
inc
xor
(bad)
out
xchg
int
push
pop
or
jne
sub
jo
movs
jns
jbe
cli
aas
xchg
sahf
inc
mov
xor
test
or
mov
inc
adc
jmp
cld
xor
and
dec
idiv
mov
push
jo
loope
jle
fadd
fist
js
mov
fwait
scas
jmp
jbe
push
hlt
pusha
ja
(bad)
(bad)
cmps
sub
jnp
cmp
in
sub
sub
data16
cld
cwde
pushf
xchg
push
and
popa
es
fwait
out
sar
xchg
mov
pop
mov
xor
scas
jp
push
fadd
test
fadd
call
xlat
and
add
cmp
push
dec
xor
jno
in
cmp
call
(bad)
movs
addr16
fs
xchg
(bad)
movs
xor
(bad)
sbb
jecxz
das
push
or
adc
(bad)
mov
push
and
punpckhbw
fisub
loop
sub
outs
(bad)
sub
xchg
pop
adc
mov
and
jle
in
push
jge
xor
repz
pop
jmp
fisttp
mov
or
jnp
int3
pop
xchg
lea
(bad)
push
mov
and
shl
out
jnp
jo
mov
mov
add
jo
pop
inc
movs
int3
mov
pop
popa
(bad)
(bad)
xchg
lods
xor
and
inc
and
dec
mov
iret
loope
cmp
cmp
mov
sub
aam
xor
dec
je
test
sub
xchg
js
push
fild
retf
aas
push
adc
cmp
imul
retf
repz
inc
mov
mov
in
push
push
out
mov
cmc
push
xchg
or
inc
or
cld
mov
stos
(bad)
stos
xlat
mov
ins
pop
xor
sbb
nop
pop
enter
add
pushf
pop
(bad)
xor
mov
xchg
or
imul
(bad)
sbb
jae
sbb
mov
rol
sbb
push
sti
ss
cld
jp
inc
jno
mov
dec
add
jbe
sub
lahf
in
mov
gs
push
cs
dec
sbb
add
sub
sbb
mov
add
sbb
push
mov
pop
shr
and
push
xchg
dec
retf
out
xchg
mov
jg
cdq
jno
jnp
outs
add
push
jl
cld
outs
je
div
push
dec
xor
outs
stc
pop
xchg
addr16
or
stos
pop
sar
push
imul
inc
xchg
xor
inc
pop
jmp
mov
jmp
adc
and
jecxz
mov
xor
punpcklwd
xchg
icebp
or
jl
(bad)
xor
mov
sbb
add
inc
push
mov
cmp
push
adc
dec
add
jb
cmp
inc
cmp
jge
cmc
jnp
dec
mov
es
cmps
push
dec
ret
pop
popa
mov
add
sbb
and
cmps
mov
sub
and
pcmpgtd
iret
jecxz
mov
jb
xor
or
jmp
fdivr
gs
out
outs
les
sub
push
dec
push
jmp
dec
js
xchg
lds
(bad)
jno
fiadd
xor
cdq
mov
pop
xchg
or
inc
xor
nop
mov
pushf
push
das
dec
pop
pop
push
xor
idiv
xchg
push
ins
inc
inc
or
and
addr16
test
test
mov
clc
retf
cmp
movs
mov
and
pop
add
ss
shl
ja
outs
push
and
gs
imul
pop
mov
pop
ins
leave
xor
push
mov
iret
stos
test
pop
mov
arpl
push
(bad)
mov
popf
or
push
bound
inc
in
mov
xor
lock
xchg
mov
push
bound
push
mov
xchg
hlt
or
push
xchg
rcr
scas
test
adc
lods
pop
or
out
das
fidiv
imul
stos
push
(bad)
inc
fld
mov
push
outs
jno
cmp
pop
push
popa
cwde
xchg
inc
test
inc
and
sbb
jg
pop
ret
sbb
sub
cmp
push
popa
and
mov
pop
add
sub
add
ret
jae
(bad)
push
mov
das
mov
ror
cmp
movs
and
mov
enter
cmc
push
inc
xor
mov
pop
lock
ja
mul
cdq
ja
cmp
pop
pusha
mov
ja
(bad)
xor
mov
(bad)
pop
arpl
jb
imul
or
push
sub
add
aaa
push
jge
into
call
cmp
push
sbb
int
call
dec
cmc
retf
mov
shr
cmp
inc
pop
ins
iret
push
aaa
cld
stos
outs
test
or
sbb
add
in
es
std
and
inc
push
popf
scas
push
mov
xor
xchg
or
movs
movs
push
stos
shl
loopne
loop
jb
xchg
stos
cmp
sub
cli
in
aad
arpl
dec
and
iret
(bad)
scas
mov
es
ins
sbb
push
cmp
lds
lds
test
jecxz
out
mov
add
fwait
sbb
icebp
adc
call
arpl
xchg
adc
jge
pusha
and
xor
xchg
mov
inc
clc
pop
adc
cmps
out
lahf
(bad)
stc
and
outs
fild
mov
dec
or
aaa
and
and
cmp
mov
ja
push
sbb
pop
add
jp
in
dec
int3
push
xchg
int
mov
mov
cmps
mov
pop
push
xor
addr16
aad
bound
dec
jl
in
mov
cmp
pop
xor
pop
inc
ins
pushf
cmp
or
jmp
push
mov
push
add
mov
lea
ficomp
into
jns
daa
bound
cmp
pop
fs
das
pusha
sbb
pop
arpl
out
fcmovbe
mov
sub
dec
mov
mov
sub
cwde
push
mov
loop
jae
lea
and
sbb
pop
popa
jne
pop
push
into
xor
sbb
and
cmp
adc
jge
xchg
les
fist
inc
stc
push
sub
stos
(bad)
daa
cmps
mov
fld
inc
sub
inc
sub
pop
adc
mov
add
fbld
pop
cmp
cmp
dec
mov
mov
sub
or
cwde
ds
mov
outs
pop
jmp
jb
sbb
stos
or
(bad)
pusha
and
inc
aad
sub
ins
mov
dec
sbb
pop
pop
and
not
stos
push
dec
cld
dec
xlat
push
jge
sti
cli
ins
mov
xor
lds
or
int3
mov
push
adc
jnp
jbe
mov
repnz
scas
inc
shr
loopne
add
ret
add
cld
push
jb
inc
jae
cli
movs
jle
cmp
adc
jg
and
mov
mov
xchg
es
data16
cwde
and
inc
sub
cmps
mov
mov
jle
sub
fisttp
add
jns
neg
push
pop
sbb
push
jge
cmps
mov
call
push
jns
dec
cwde
cdq
inc
mov
popf
cwde
sbb
enter
mov
or
mov
jmp
jbe
cmp
cmps
adc
push
call
xor
push
mov
out
push
aas
jae
fs
mov
adc
shl
pop
in
out
dec
sub
(bad)
dec
pop
inc
cmp
stos
sub
adc
sbb
in
lods
mov
xor
pop
push
and
loope
test
sti
mov
cmc
xor
mov
sbb
adc
jmp
sub
push
iret
and
dec
fnsave
les
adc
dec
sbb
mov
mov
push
or
cmps
mov
cmps
rol
(bad)
push
loopne
imul
outs
adc
in
push
cmp
pop
pop
push
sbb
addr16
adc
mov
ficomp
scas
mov
out
mov
mov
and
sbb
jmp
jo
push
inc
test
push
rol
mov
pop
sbb
mov
pusha
sti
imul
fiadd
daa
push
push
int3
pusha
outs
mov
sbb
gs
pop
xchg
fist
sub
hlt
enter
adc
push
xor
pop
inc
std
sbb
stc
or
ret
sbb
les
out
jle
es
push
sbb
xor
or
jo
pop
rol
pop
js
clc
inc
mov
adc
jg
mov
movs
inc
and
mov
push
stc
cmps
jg
in
dec
out
and
mov
lock
jge
imul
ret
mov
push
dec
retf
out
mov
cmp
push
pop
pop
xchg
movs
xor
jle
mov
loop
or
pop
dec
xchg
bound
ficom
and
cld
or
xor
sbb
aaa
add
ret
ja
sbb
outs
fs
pop
(bad)
mov
xlat
inc
cmp
xchg
xchg
xchg
je
xchg
gs
and
mov
add
js
push
mov
dec
xor
pop
lock
xchg
(bad)
mov
sub
add
arpl
cwde
loop
jecxz
jae
xor
in
call
cmp
fsubr
sti
push
pop
jmp
sub
std
jnp
pusha
enter
push
outs
push
clc
and
or
xor
cdq
inc
mov
ss
out
mov
fstp
mov
fld
fwait
in
xor
dec
jo
push
or
sub
sub
inc
idiv
stos
test
push
or
sbb
jl
dec
scas
loop
xchg
test
push
xchg
mov
xchg
xor
movs
jle
add
sbb
int
jns
hlt
dec
inc
fistp
pop
in
pop
xor
les
push
adc
dec
mov
ins
push
(bad)
dec
sti
test
fistp
das
pop
(bad)
jp
cmp
loopne
xor
sub
out
sub
aas
movhps
mov
push
aaa
cmp
aaa
cmp
dec
cld
jecxz
call
sti
call
lahf
mov
popa
add
lea
jp
jne
inc
inc
cmp
loop
rol
mov
adc
pop
rcr
push
or
ins
inc
inc
mov
gs
jp
sub
xchg
add
push
test
jl
(bad)
mov
mov
sub
outs
inc
inc
cmps
and
xlat
loop
lods
mov
push
sub
push
push
cmc
js
sar
mov
sar
loopne
xor
retf
mov
outs
xor
adc
rcl
psraw
push
push
test
mov
xchg
fs
addr16
arpl
mov
test
jae
imul
push
repz
jg
cld
ja
jge
xchg
aam
xor
push
dec
xchg
add
inc
mov
dec
jle
sub
sbb
or
js
out
xor
xlat
jne
mov
xchg
cmp
out
jnp
call
xor
cli
xchg
pop
shl
sbb
add
push
in
xor
dec
push
xchg
mov
ret
inc
dec
mov
mov
fldenv
dec
push
les
jbe
cwde
out
je
xor
inc
dec
sbb
lahf
push
push
add
sub
int
mov
add
sub
and
mov
aad
fcom
aas
and
mov
retf
(bad)
gs
add
mov
dec
adc
push
adc
loop
push
(bad)
dec
repz
test
sub
push
cmc
push
cmp
or
xor
clc
jl
std
xor
pop
pushf
mov
mov
mov
fldcw
jo
idiv
pop
lods
push
xor
je
repnz
adc
xor
inc
(bad)
ficomp
and
push
xor
adc
std
cmps
push
shr
frstor
pushf
std
dec
mov
mov
push
imul
jle
fiadd
dec
(bad)
jge
jne
xor
mov
or
mov
xchg
adc
fwait
xchg
bound
je
pop
cmps
xchg
int3
lahf
scas
mov
and
dec
int3
je
mov
xor
gs
xchg
fnstenv
arpl
xor
fwait
mov
and
je
inc
cs
cwde
mov
out
ins
scas
shl
cli
js
push
mov
dec
or
out
sbb
ja
pop
lods
inc
ja
hlt
mov
push
int
xor
add
sbb
add
push
mov
in
inc
add
outs
and
mov
stos
cmp
jmp
jmp
pop
stos
leave
mov
xchg
push
sbb
outs
push
cld
out
mov
add
push
gs
mov
add
sub
pop
cmp
push
mov
mov
or
jmp
repnz
inc
and
neg
out
push
jp
into
imul
stos
dec
out
jl
and
jns
adc
cld
arpl
pop
sbb
cdq
jl
fbstp
mov
mov
adc
push
stos
jl
stos
jmp
das
fs
sbb
shl
mov
sub
cs
inc
xor
mov
xor
cwde
das
lahf
xor
sar
mov
or
cli
mov
jnp
pop
xor
inc
jp
jecxz
imul
adc
out
push
loope
pop
sub
(bad)
or
or
xchg
inc
mov
mov
stos
cwde
out
mov
ja
bound
(bad)
(bad)
dec
xor
mov
add
or
mov
imul
pop
push
std
sub
mov
call
xor
cmc
xchg
jns
addr16
scas
pop
pop
xor
call
add
add
xor
jg
sbb
or
sahf
xchg
inc
cmps
iret
sbb
in
jae
jo
scas
mov
mov
push
add
cmc
shl
inc
xor
repz
sub
mov
adc
sbb
pop
sub
mov
ror
jecxz
inc
mov
cwde
mov
pop
adc
(bad)
pop
xor
repz
lock
jg
push
fst
xlat
sub
sub
push
mov
loope
pop
imul
rcr
cmc
xor
mov
mov
mov
dec
jecxz
sar
pushf
dec
cmp
ja
sbb
into
(bad)
or
sbb
add
clc
xchg
mov
push
cs
pop
sub
sbb
jo
cli
sub
xchg
imul
loopne
xchg
sbb
cmp
bound
pop
arpl
int3
mov
hlt
push
icebp
sub
add
jae
and
fs
sbb
lahf
iret
inc
xchg
std
or
or
(bad)
push
push
pushf
js
and
(bad)
cmc
push
mov
outs
stc
(bad)
ins
xor
or
iret
movs
mov
sub
sub
sbb
push
data16
or
fucom
ins
loopne
inc
add
test
sbb
in
adc
inc
outs
push
mov
popa
sbb
mov
repz
and
or
das
lahf
jb
sbb
jae
push
xchg
push
pop
jmp
scas
mov
ins
sbb
dec
idiv
in
xchg
movs
push
cld
sub
outs
adc
push
cmp
xor
lods
leave
cmps
push
sub
jns
jno
loop
jmp
jle
ins
stc
loopne
lahf
lea
mov
rol
(bad)
push
dec
dec
iret
jno
or
movs
dec
adc
icebp
sub
(bad)
(bad)
and
dec
imul
outs
lahf
int3
jno
leave
imul
mov
fst
mov
jg
and
dec
mov
or
inc
ja
cmp
push
cmp
xor
ror
sub
cmp
call
mov
and
xor
in
or
xchg
sub
lock
and
dec
dec
jno
je
pop
jecxz
inc
dec
sub
push
adc
cmp
pop
xchg
add
outs
push
jecxz
ins
test
push
or
sub
mov
xchg
mov
dec
xchg
xchg
jmp
push
ja
pop
test
cmps
pop
push
push
sbb
sar
or
pop
add
sbb
mov
(bad)
aad
sahf
mov
xlat
pop
mov
sub
out
jp
fadd
xlat
ins
daa
outs
rcr
pop
ror
push
and
cmp
jnp
dec
xor
leave
and
mov
lods
out
scas
mov
jmp
call
xchg
imul
imul
add
mov
xor
pop
daa
pop
sbb
movs
mov
hlt
adc
jle
imul
push
mov
adc
or
int
sbb
push
inc
arpl
jne
xchg
pop
lods
jg
xor
inc
mov
daa
xor
dec
movs
enter
push
jp
inc
or
(bad)
fisttp
inc
pop
xchg
jnp
and
repnz
sbb
jne
xor
enter
sbb
sbb
ret
xchg
lods
sub
daa
xor
inc
and
dec
lods
mov
ret
dec
mov
pop
scas
jb
jmp
add
xchg
pop
sub
int3
jno
iret
sbb
mov
mov
jae
add
rcl
mov
stc
cmp
or
stos
mov
ins
ret
jns
mov
pop
mov
ja
sub
cmc
mov
sbb
mov
xor
sbb
aad
and
cmp
push
inc
movs
mov
iret
sub
mov
sub
xchg
pop
or
add
pop
je
dec
push
aas
xchg
es
add
add
cmp
dec
xlat
or
push
stos
xchg
ins
cmps
aad
data16
das
lods
adc
cmps
jb
aam
scas
ja
fwait
int3
lods
gs
sbb
push
cwde
ret
adc
xlat
mov
je
pop
ds
mov
movs
lock
stos
push
shl
aad
out
int
sub
aad
sbb
out
pop
push
call
imul
popa
xchg
sbb
or
dec
fnstcw
mov
int
adc
push
cdq
pop
fwait
rcl
or
in
lea
stos
sar
enter
pop
mov
inc
add
or
xchg
out
ds
pop
adc
(bad)
mov
add
arpl
inc
mov
cmp
mov
mov
out
pop
and
mov
jns
mov
inc
ret
push
push
sbb
cmp
call
pavgb
lds
inc
push
mov
jb
fidiv
jb
inc
lods
mov
pop
push
lock
lods
jp
mov
sub
jns
sub
shl
or
in
cwde
movs
mov
dec
sub
xor
and
ins
scas
mov
xchg
cli
push
xchg
outs
stc
jmp
call
sbb
into
push
dec
cmc
inc
push
fsubr
cmp
and
push
add
cmp
pop
pop
dec
movs
mov
jns
dec
or
xchg
mov
mov
jle
add
pop
and
cmp
push
inc
ins
pusha
mov
push
push
sub
(bad)
scas
mov
cmp
pop
or
ja
mov
cmc
or
in
test
push
pop
jno
pop
add
pop
or
test
xor
cmovns
sbb
je
imul
xlat
push
sbb
xor
mov
inc
mov
cs
cli
gs
xor
fs
ins
dec
adc
push
or
loope
mov
and
je
jae
sub
scas
jnp
dec
(bad)
in
add
retf
inc
and
(bad)
bound
sub
jae
call
inc
popa
ins
(bad)
outs
shr
(bad)
push
xor
mov
push
pop
mov
jb
sub
adc
fistp
iret
jae
cmp
jo
or
inc
sbb
xor
push
ds
ret
xchg
mov
xor
popa
adc
inc
scas
mov
clc
add
jmp
inc
jnp
xchg
add
(bad)
pop
ins
(bad)
out
jne
adc
das
(bad)
and
ds
or
inc
mov
cwde
sub
push
outs
pushf
mov
mov
xor
dec
mov
cmp
lock
pop
mov
sub
loopne
mov
xor
mov
mov
and
sub
add
pop
mov
add
jbe
jmp
adc
sti
pop
or
pusha
imul
scas
push
jne
or
sub
xor
fdiv
fwait
push
imul
adc
ins
jno
enter
sbb
int
sub
mov
stc
xor
call
xor
dec
adc
js
or
mov
dec
add
sbb
in
fimul
sbb
push
sbb
push
test
dec
mov
test
mov
mov
sub
cmc
lods
dec
dec
jp
dec
sbb
fs
xor
ds
sub
movs
outs
in
neg
push
push
adc
push
mov
push
pusha
popa
movs
nop
es
push
into
aaa
jb
sti
loop
mov
std
push
test
dec
into
cmp
enter
or
sbb
xor
ss
out
rcl
and
push
(bad)
sub
retf
(bad)
sbb
xchg
push
sar
jne
inc
retf
adc
xchg
xor
or
cmp
cs
cmp
pop
div
push
dec
sub
retf
rcr
cmp
mov
add
(bad)
xchg
push
mov
and
jae
cli
ret
mov
aaa
jns
out
nop
lods
test
sub
jg
dec
xchg
shr
mov
iret
shl
pushf
and
shr
stc
dec
arpl
xor
xchg
adc
iret
push
push
add
and
adc
test
shl
stc
xor
popf
xchg
mov
mov
xchg
push
fs
aam
imul
pop
lods
enter
or
addps
in
xchg
sahf
scas
adc
pop
sub
popa
mov
xchg
in
jno
fwait
dec
xchg
cmp
xchg
inc
adc
adc
dec
aad
jl
out
jnp
dec
idiv
int
add
push
retf
adc
shr
push
inc
fldcw
movs
in
fiadd
jne
ret
ja
push
mov
adc
sub
out
pop
addr16
dec
cmp
rol
cmp
jp
inc
cmps
movs
pop
sti
dec
xchg
icebp
sbb
leave
jecxz
cmps
fwait
cmp
aaa
jo
pop
xor
dec
inc
dec
cli
push
imul
hlt
add
sub
xor
std
inc
test
xor
retf
cli
popa
pop
aad
sub
mov
popf
test
shr
pop
push
mov
icebp
inc
out
cmp
pop
dec
cs
out
adc
add
mov
ins
jnp
push
pop
adc
inc
mov
jp
fs
imul
mov
outs
adc
push
jnp
lods
push
cmp
test
push
repnz
push
sub
pop
fistp
cdq
dec
into
data16
inc
xchg
jo
xchg
gs
mov
adc
stos
inc
sbb
imul
mov
add
push
inc
push
jl
loopne
push
or
xor
gs
sbb
push
and
xchg
outs
call
xchg
popf
jb
jle
out
out
and
mov
dec
xor
gs
bnd
ins
repz
icebp
cmp
sbb
jge
push
je
daa
mov
push
outs
mov
jb
jmp
jp
pop
sbb
scas
test
xor
xchg
cmp
jmp
(bad)
rep
xor
cmp
push
adc
sub
fidivr
pop
add
ja
ins
sti
mov
rcr
cmp
push
cmp
mov
jae
inc
sub
jb
push
std
mov
ds
xor
add
dec
ins
dec
test
pop
mov
jnp
xchg
sub
retf
push
sar
mov
fwait
ja
push
and
ds
cwde
out
aam
or
std
cmps
xchg
rol
xor
sbb
jo
scas
das
jmp
lahf
fidivr
mov
(bad)
sub
retf
sub
or
push
jb
jg
sub
outs
(bad)
cmp
and
cmps
adc
sbb
push
dec
in
jae
fisttp
dec
or
mov
mov
enter
dec
xlat
jae
jmp
sub
inc
dec
ja
sub
sub
shl
scas
(bad)
stos
or
pop
cvtps2pd
sub
fwait
xchg
jl
jae
les
sti
mov
jmp
mov
xchg
jno
adc
jp
retf
(bad)
lock
pop
push
adc
add
lea
fisttp
dec
push
jmp
movs
js
sub
jmp
mov
das
dec
hlt
pop
not
out
(bad)
mov
aas
inc
push
cmp
fist
sbb
push
sub
mov
pop
pop
dec
xor
ja
lea
addr16
clc
or
shr
adc
stc
pop
adc
push
pop
jno
inc
pop
sbb
xchg
das
enter
push
push
dec
out
add
jl
dec
mov
arpl
sub
into
mov
lods
outs
imul
stos
jl
mov
ss
xor
adc
rcr
sub
mov
pop
sub
jo
xchg
push
shl
bound
mov
adc
(bad)
sbb
xchg
sbb
loope
jno
fidiv
ret
jnp
add
add
dec
imul
arpl
dec
or
xchg
mov
repz
pop
jp
jg
pop
and
sub
dec
dec
push
ins
test
lods
pop
sbb
push
ins
retf
mov
and
dec
add
xor
add
mov
xchg
inc
retf
mov
mov
adc
push
mov
(bad)
dec
jno
rol
aam
xor
inc
lock
push
inc
jne
stos
inc
stos
adc
inc
and
xchg
test
mov
inc
gs
fnstenv
out
shr
add
loope
add
and
dec
cmps
out
adc
pop
jb
(bad)
dec
xor
pop
push
mov
mov
push
mov
(bad)
rcl
mov
xchg
dec
or
inc
ds
iret
movs
push
lds
or
and
mov
dec
push
ja
mov
mov
dec
jl
mov
lods
aam
mov
sbb
jnp
inc
je
mov
dec
mov
pop
je
push
dec
cwde
xchg
cwde
push
adc
adc
fcmovu
xlat
mov
cs
sub
imul
xchg
cmp
push
cmps
inc
sti
lds
mov
bound
mov
data16
out
pop
push
xor
ficom
sar
pop
int3
sbb
add
pop
push
xor
call
in
lods
scas
mov
arpl
push
into
jge
pushf
out
dec
xchg
dec
or
nop
xor
popa
std
fsubr
cs
cmp
lods
js
loopne
jecxz
imul
enter
das
out
xor
outs
pop
jo
xor
iret
mov
clc
pop
ret
sbb
cs
fsubr
push
push
data16
jl
inc
add
scas
int3
scas
mov
adc
mov
into
je
mov
movs
xor
inc
sbb
and
leave
into
mov
or
push
jne
js
or
push
iret
add
mov
shl
aas
mul
outs
or
xor
(bad)
dec
cli
add
push
xor
jb
and
and
sub
xchg
jae
ror
out
pshufw
pop
lea
scas
sub
xchg
cmps
je
dec
and
push
jnp
out
push
add
xor
push
movs
jecxz
int
sub
inc
sub
jo
sahf
push
or
scas
push
(bad)
movsx
pusha
and
call
dec
aaa
lods
jne
cmp
or
add
push
inc
int
shr
push
dec
popf
sahf
push
mov
imul
mov
shl
or
inc
pop
xchg
fnstenv
sbb
mov
fist
dec
add
ins
(bad)
xor
inc
sub
(bad)
jno
(bad)
js
mov
retf
or
jmp
jno
push
ror
aad
addr16
fiadd
sub
mov
ret
ss
sub
adc
pcmpgtd
leave
cmp
xor
mov
scas
ret
and
push
aad
arpl
xor
imul
stos
dec
adc
pop
and
shr
pop
adc
jp
add
push
cmps
cwde
pop
cmc
push
mov
cmp
xlat
mov
test
arpl
jo
dec
or
fs
outs
shr
imul
repnz
call
fistp
cmps
dec
out
or
pusha
test
push
cmps
xchg
sbb
pop
out
fwait
sbb
and
rol
(bad)
cwde
sub
outs
outs
mov
mov
add
call
push
add
and
bound
dec
movs
mov
test
cmp
rol
cmp
mov
adc
xchg
jle
cmp
outs
sbb
inc
pop
inc
scas
jae
cmp
stos
jbe
dec
iret
rcl
pop
sub
outs
retf
add
inc
cmp
test
movs
sti
data16
pop
or
mov
inc
out
push
sub
pop
ds
push
sbb
sub
sbb
push
in
test
mov
adc
add
cmp
cmp
mov
dec
rol
outs
mov
aad
adc
mov
mov
push
ret
push
pusha
push
xchg
push
les
push
div
or
push
popa
call
stc
js
outs
mov
jmp
pushf
popf
inc
pop
loope
retf
sub
xchg
lods
outs
cmps
adc
pop
pop
and
or
sbb
gs
nop
xchg
mov
pop
sub
xor
sbb
lods
push
retf
push
mov
jnp
mov
fsubr
cwde
pop
add
mov
add
xlat
jp
in
pusha
aas
leave
fs
cmp
gs
push
mul
xor
fistp
or
dec
clc
test
inc
movs
xor
ja
fwait
popf
and
fild
cwde
mov
sbb
mov
or
mov
das
movd
pop
push
sbb
mov
or
aam
push
xchg
leave
es
push
es
dec
fsubr
pop
in
xor
sbb
jb
sub
pop
push
sbb
xlat
add
outs
ins
mov
adc
imul
lahf
(bad)
mov
ins
bnd
jbe
mov
sbb
inc
dec
adc
imul
push
dec
push
inc
xor
inc
fs
nop
dec
leave
jno
sbb
cmps
imul
xchg
movs
adc
cli
mov
xor
jnp
aam
dec
xor
mov
pop
out
sbb
cmp
out
shrd
in
cmp
imul
bound
addr16
mov
test
movs
jb
loopne
(bad)
pop
arpl
cmp
jbe
jae
sahf
ret
xor
push
push
dec
fsubp
sub
xor
inc
jg
dec
mov
(bad)
out
xchg
std
push
test
mov
test
pop
das
jmp
jne
xchg
adc
inc
lock
in
and
push
xchg
and
fs
outs
clc
xchg
cld
pop
dec
push
pop
xchg
and
jo
push
push
xchg
xchg
mov
mov
and
push
dec
(bad)
iret
(bad)
and
jp
out
lods
lea
and
ds
mov
xchg
jle
std
jno
outs
xchg
rcr
lahf
inc
adc
(bad)
adc
repnz
jmp
fidiv
sbb
sub
push
cld
dec
fstp
dec
je
jo
mov
fdiv
out
or
movs
(bad)
xor
jmp
iret
dec
bound
dec
sub
cmp
mov
adc
lock
push
sub
bound
pop
lea
loopne
cwde
test
imul
sbb
retf
mov
push
in
je
psadbw
daa
in
and
std
adc
push
in
adc
xchg
xchg
push
ror
popa
loope
jns
mov
shl
mov
imul
jae
stc
mov
add
or
mov
add
leave
sar
es
and
imul
repnz
push
outs
fstp
fldenv
sub
inc
push
aad
inc
cmp
popf
jns
dec
test
push
adc
call
dec
mov
sub
cli
sub
push
mov
and
pop
arpl
or
push
repnz
dec
and
and
cmps
int3
mov
add
pop
pop
punpcklwd
add
pop
mov
movs
lds
xchg
inc
mov
in
mov
fcomp
xor
repnz
inc
push
in
xor
mov
aas
lds
add
jg
add
fs
bound
jno
pop
xchg
call
xchg
dec
jnp
jno
dec
jns
(bad)
mov
jnp
cs
xor
aaa
sbb
xor
test
popf
aaa
push
pop
sbb
sbb
in
jmp
sub
adc
scas
xor
shl
push
inc
(bad)
pusha
jp
rcr
pop
jmp
lock
je
cmp
imul
enter
inc
jge
xchg
adc
enter
cs
xor
xor
test
add
shr
(bad)
lods
mov
and
push
cmp
xlat
jb
iret
and
push
test
cdq
int
sub
fimul
(bad)
imul
inc
adc
mov
pop
shl
sub
push
xchg
pop
lea
or
xor
je
fild
jno
xchg
xchg
fimul
inc
jmp
fimul
xchg
out
dec
xchg
push
and
(bad)
cld
mov
xor
(bad)
mov
sbb
push
sbb
mov
neg
cmc
or
xchg
outs
mov
nop
test
sub
mov
cmp
sbb
bound
scas
dec
js
(bad)
outs
fsub
daa
rcr
adc
(bad)
out
and
js
jnp
mov
jmp
push
jmp
mov
mov
imul
ror
mov
mov
or
push
popf
cmp
ds
pop
out
test
xchg
sbb
cmp
cs
add
call
sbb
lock
push
aad
dec
or
retf
push
les
inc
fidiv
or
lahf
or
jne
push
ret
adc
dec
jmp
je
int
xchg
lea
div
push
in
scas
mov
lea
in
or
jne
scas
jmp
xor
pop
in
scas
adc
inc
stc
fstp
sbb
pusha
pop
inc
cwde
mov
in
mov
pop
int3
jae
xlat
imul
rcr
aas
and
arpl
out
bound
cmp
cmps
jle
jae
cmp
push
pop
cmp
add
fcomp
xor
mov
fs
dec
or
sti
xchg
fnstsw
jge
jmp
jle
loop
mov
cmps
sub
adc
lds
or
shl
scas
cmps
pop
pop
adc
push
inc
test
add
hlt
and
xchg
cmp
(bad)
fadd
cmp
repz
in
adc
mov
fs
mov
cmc
ja
cmp
arpl
cmp
adc
int3
inc
cmp
add
mov
xor
lods
push
sub
popa
movs
or
ins
or
mov
xor
push
gs
shl
add
pop
and
push
loopne
shl
fisub
and
adc
xchg
adc
std
inc
cmp
adc
retf
dec
jbe
cld
fwait
imul
or
xor
and
dec
ss
jns
lock
push
cld
xor
dec
xchg
loop
(bad)
mov
and
js
and
xchg
test
adc
cmc
lahf
das
sbb
stc
cmps
mov
sbb
jl
jp
pop
repz
pop
hlt
pop
cwde
cmc
or
cld
out
loop
pop
es
xchg
adc
adc
out
push
fs
call
sub
mov
ins
xchg
cmp
sub
and
clc
sbb
push
inc
pop
sub
xchg
fst
(bad)
xor
xor
jmp
popf
mov
jmp
out
add
or
outs
xchg
mov
xor
lods
add
sub
xor
mov
out
js
(bad)
jle
test
enter
ins
loop
and
movs
test
pop
xor
push
rcr
push
(bad)
pop
jl
cmp
in
adc
add
inc
sub
pusha
mov
outs
bound
mov
add
je
sub
in
push
std
adc
dec
inc
pop
dec
lods
jecxz
push
xor
adc
fcmovnu
xchg
lods
das
and
inc
sub
or
outs
in
push
mov
mov
push
mov
leave
ret
test
add
fmul
jge
imul
push
imul
mov
sbb
and
adc
fdiv
mov
jae
pop
xchg
jmp
xchg
cdq
cmps
and
fldenv
xchg
jmp
pusha
push
outs
scas
sar
pop
ins
(bad)
in
cmps
lea
sbb
ja
jo
mov
fstp
stc
imul
xlat
int3
push
movs
nop
pop
adc
nop
ins
xor
test
push
daa
cld
popf
dec
fidiv
es
push
gs
push
push
mov
push
mov
gs
loope
add
lds
xchg
cs
mov
pop
pop
in
out
adc
add
or
and
sub
dec
es
cmp
and
scas
pusha
mov
add
mov
jp
dec
mov
pop
sub
adc
in
dec
dec
jle
jae
xor
scas
adc
jae
add
jge
jno
retf
cmp
push
dec
bound
pop
add
inc
sub
sti
mov
call
pop
bound
xor
inc
fwait
lock
das
pop
or
xor
mov
sub
jge
imul
xor
nop
stos
xor
adc
in
jge
fisttp
xlat
inc
push
cmp
out
ficomp
es
movntps
add
pop
ss
scas
pop
call
jns
mov
sub
outs
jmp
jo
in
repz
push
outs
push
(bad)
enter
adc
push
fs
scas
aad
sub
sub
pop
dec
pop
pop
das
imul
std
or
mov
lods
ss
out
cmp
xchg
add
(bad)
jmp
lods
arpl
push
push
cmc
sbb
pop
and
jo
xor
push
sbb
into
ins
fcmovne
push
add
sub
mov
movs
mov
retf
xchg
clc
cli
jne
dec
push
bound
inc
test
cmps
xor
push
push
jg
(bad)
in
jnp
add
push
add
mov
dec
out
mov
jge
fs
mov
mov
test
cs
jl
icebp
inc
jg
retf
sub
std
or
sub
push
mov
aaa
push
dec
push
cld
lds
int
pop
les
mov
leave
xor
xchg
outs
dec
nop
jle
push
out
nop
mov
icebp
xor
dec
dec
xor
retf
push
or
adc
sar
xchg
and
jl
bound
ins
mov
arpl
dec
rol
inc
fxch
adc
fwait
xor
neg
push
in
adc
sub
std
js
jl
cmp
and
dec
mov
mov
or
lds
fist
mov
popf
stos
and
arpl
inc
in
bound
in
mov
sub
outs
sbb
enter
and
loop
add
or
add
sti
dec
(bad)
fdivr
mov
cmc
(bad)
cmp
inc
xor
jmp
jge
mov
pop
push
ja
or
or
pop
stc
xor
push
adc
loop
ins
mov
push
or
xchg
mov
xchg
bound
push
mov
xor
comiss
das
add
dec
or
gs
scas
xchg
mul
dec
sbb
sbb
or
pop
xchg
sub
sub
mov
idiv
jne
dec
stos
jno
cmp
call
and
xor
jno
push
mov
je
inc
sbb
lods
sahf
mov
pop
dec
ret
or
pop
ja
out
pop
mov
cmp
push
sbb
cmp
xchg
cdq
and
or
ins
pop
aaa
push
sub
mov
rol
in
imul
pop
dec
sbb
sbb
retf
inc
sbb
ins
dec
xor
dec
in
add
jg
push
or
adc
and
jb
xchg
xchg
out
push
and
dec
std
mov
lods
inc
sub
pop
sub
or
jecxz
sbb
aas
push
or
in
mov
cmp
push
imul
xchg
jecxz
xchg
mov
outs
leave
(bad)
sub
sbb
adc
icebp
inc
cmp
xchg
jbe
sbb
pop
repnz
mov
inc
jns
mov
dec
jae
dec
cvtpi2ps
add
out
push
pop
mov
cmp
out
daa
adc
leave
jmp
cmps
imul
pop
cmp
sbb
fs
adc
or
in
js
lods
push
xchg
jae
(bad)
aas
sahf
mov
js
mov
push
bnd
mov
ds
pop
cmp
mov
or
cmp
xor
adc
popa
lahf
mov
mov
jb
jo
out
fwait
stos
fld
dec
aad
cs
mov
fs
and
repnz
fisub
sbb
adc
xchg
mov
das
imul
imul
mov
cmp
push
mov
jmp
xor
pop
push
das
xchg
fld
aas
into
push
pop
ins
xchg
or
sub
or
cmp
aaa
fs
xchg
cmp
in
scas
mov
and
jns
gs
out
call
outs
pop
movs
xchg
stos
sbb
inc
das
fs
(bad)
test
and
push
daa
jne
nop
pop
into
outs
iret
pushf
sub
shl
ret
xor
fidivr
icebp
inc
outs
inc
fiadd
sbb
test
leave
push
loope
adc
ins
call
mov
int
and
dec
movs
mov
mov
stc
jb
dec
cmps
mov
das
cmps
mov
shl
sub
jmp
mov
sbb
das
jns
iret
aad
mov
adc
pusha
mov
dec
(bad)
dec
cmps
out
or
std
loope
scas
mov
cmp
mov
cmp
stc
push
push
(bad)
jg
sbb
mov
or
and
cs
and
jl
xor
inc
ret
cs
mov
test
jbe
pop
sar
hlt
fwait
dec
mov
cmp
mov
or
add
mov
adc
sub
pusha
fwait
xchg
dec
fisttp
mov
inc
mov
or
push
cmp
(bad)
js
stc
jno
inc
inc
push
mov
pop
int3
and
add
cmps
or
adc
cmps
lea
loopne
sbb
fsubr
jo
rcr
data16
div
dec
ds
push
cmp
dec
sbb
mov
cs
xor
dec
scas
xchg
push
iret
iret
jnp
cld
push
aam
mov
adc
aad
push
sbb
sbb
not
je
dec
arpl
std
mov
sub
push
(bad)
jbe
adc
adc
dec
(bad)
jle
dec
sbb
xchg
jle
mov
out
push
jge
(bad)
in
xchg
stos
and
retf
ja
mov
stos
data16
adc
ins
push
mov
dec
add
test
dec
pop
adc
push
dec
add
inc
sbb
fs
mov
es
test
push
fsubr
xchg
or
jb
popa
jle
icebp
cmps
imul
iret
push
icebp
push
add
add
and
or
fs
inc
jge
push
push
call
mov
jmp
and
cmp
or
pop
(bad)
stc
mov
add
sbb
scas
push
mov
mov
outs
mov
stc
mov
popf
scas
push
pop
mov
call
inc
dec
aad
je
out
or
mov
and
add
and
or
push
cmps
out
push
jle
push
pop
push
mov
cld
push
mov
push
mul
dec
adc
sbb
dec
cmps
jecxz
xor
add
xchg
mov
and
sbb
add
jae
mov
icebp
add
mov
push
mov
xlat
inc
inc
fstp
pusha
jae
imul
dec
xlat
push
out
adc
cmps
push
cld
xor
ja
cmp
jle
sub
dec
lahf
xchg
mov
fs
outs
mov
mov
or
push
pop
pop
cdq
fisttp
or
(bad)
out
xchg
xchg
pushf
das
pop
and
dec
and
and
sti
test
mov
test
pop
sub
stos
xor
iret
sbb
mov
imul
sub
xchg
div
(bad)
sbb
sbb
je
shl
dec
(bad)
aaa
push
or
xchg
popa
lds
mov
(bad)
lods
mov
push
dec
xchg
adc
fs
xchg
xchg
push
hlt
push
sbb
pop
sbb
add
jnp
retf
cwde
mov
cs
or
jbe
pop
das
addr16
mov
aad
mov
outs
mov
in
sub
test
add
jae
(bad)
push
fadd
iret
cmp
sub
inc
pushf
and
or
add
jbe
js
push
mov
cmps
pop
cdq
mov
ret
stos
fcomi
dec
cmc
dec
add
sbb
or
ret
(bad)
or
pop
or
push
push
push
mov
cwde
rcl
mov
pop
adc
cmp
imul
jae
lds
into
jg
data16
or
data16
cmp
pavgw
xor
pop
out
jbe
xchg
jo
call
xchg
movs
fldcw
addr16
pop
fst
mov
cmp
aaa
cmp
adc
or
fldlg2
cmps
mov
or
pop
pop
jno
imul
mov
popf
stc
gs
push
out
mov
xchg
pop
sbb
aam
imul
mov
xor
xor
and
or
sub
dec
fs
push
jb
scas
mov
aad
dec
fmul
push
dec
xchg
iret
mov
xor
add
fild
add
fnstcw
push
sub
pop
jnp
mov
jle
test
xchg
mov
mov
movs
mov
cmp
in
adc
inc
sbb
int
mov
sub
jno
seto
jp
or
xchg
push
fst
jg
sub
jmp
std
fs
call
sub
add
inc
xchg
jmp
add
inc
cmp
rcl
sahf
adc
sbb
pop
pop
stc
mov
sti
addr16
xor
repnz
mov
nop
dec
sub
sbb
shl
hlt
(bad)
adc
in
pusha
push
and
adc
pop
dec
outs
xchg
scas
pop
mov
push
add
popf
mov
mov
outs
pusha
in
jae
push
push
out
int
jno
xor
gs
or
iret
sub
sbb
pop
movs
out
mov
movs
push
sub
or
je
jnp
push
mov
repz
xchg
stos
pop
shl
lds
clc
movs
popa
cmp
(bad)
push
repz
call
loope
es
inc
popf
push
rcr
push
je
mov
les
jl
lahf
stos
cmp
dec
jmp
fadd
mov
repz
xor
dec
gs
call
adc
loop
xchg
std
sbb
jnp
add
js
loopne
mov
cmp
mov
shl
or
aad
adc
iret
push
push
stc
jae
sbb
(bad)
sar
imul
cmp
ins
push
imul
es
jo
jmp
test
dec
inc
rcr
jno
mov
mov
imul
movs
push
jnp
sub
sbb
mov
push
sub
adc
dec
cmps
mov
fcomp
(bad)
gs
dec
aad
pop
mov
mov
push
repz
jmp
push
fs
pushf
pop
not
cs
xchg
cmp
or
cmp
pop
fs
sub
loopne
sbb
xchg
fwait
mov
lods
arpl
inc
scas
push
xor
adc
pop
dec
xor
dec
ss
stc
shr
pop
or
inc
pop
scas
test
dec
mov
jb
jb
mov
out
inc
sub
rcl
push
(bad)
out
push
add
xor
stc
jne
imul
es
and
dec
imul
adc
scas
mov
mov
and
add
in
xor
or
jmp
dec
fsub
jp
push
xor
cmps
pop
in
pushf
int
mov
into
(bad)
adc
stos
adc
rol
and
mov
into
push
bound
xor
push
push
test
adc
fist
bound
addr16
(bad)
sbb
dec
and
mov
into
xor
outs
out
jo
cmp
aad
xor
or
icebp
mov
dec
pop
fsubr
movs
mov
sub
sub
in
out
jle
in
mov
(bad)
idiv
mov
mov
(bad)
inc
sbb
jne
pinsrw
aam
push
cmp
inc
mov
sti
daa
adc
imul
pop
fidiv
sub
mov
pop
rcl
ins
stos
aad
ins
pop
inc
dec
sub
mov
xor
jmp
test
inc
adc
add
sbb
mov
out
(bad)
movs
cmc
dec
sar
fadd
xchg
push
cmp
xchg
cs
outs
inc
sub
dec
mov
int3
pop
and
mov
aas
sub
push
cmp
dec
and
retf
movs
fsubr
xor
lods
and
out
inc
out
bound
xchg
test
pop
inc
or
lock
adc
mov
adc
cmp
push
adc
mov
mov
mov
lods
dec
adc
lea
push
stos
dec
and
fstp
cmp
push
out
and
adc
js
lea
in
inc
add
loope
mov
xchg
and
jno
and
iret
mov
sub
outs
ss
or
adc
out
mov
push
sub
add
pop
mov
fidivr
movs
and
xor
enter
test
adc
shl
(bad)
adc
inc
sbb
popf
outs
cmc
inc
in
or
cmp
cmp
jne
dec
mov
and
fmul
out
sub
leave
mov
mov
dec
xchg
jne
jno
sub
sub
and
xchg
shl
add
stos
add
add
cld
mov
clc
add
in
ret
stos
or
out
push
or
imul
jle
jecxz
pusha
pop
(bad)
std
jnp
jbe
adc
pop
add
mov
(bad)
cmp
addr16
inc
mov
ins
or
mov
and
add
and
lods
shl
outs
cmovp
(bad)
and
push
adc
je
mov
movs
mov
adc
jns
pop
lods
cmps
je
push
lahf
jns
jl
int3
aaa
mov
(bad)
imul
push
bound
inc
dec
sub
xor
hlt
and
dec
int
sub
push
jae
bound
imul
xor
mov
sar
cmps
lods
push
pop
icebp
jge
dec
dec
mov
or
jg
inc
mov
sub
shr
inc
or
cmp
ins
cdq
xchg
js
mov
mov
jne
shr
out
sbb
(bad)
sbb
push
and
jnp
outs
mov
sub
ret
iret
inc
test
jmp
mov
mul
xchg
xchg
jns
rcl
std
xor
jl
lods
mov
push
pusha
ret
dec
outs
add
inc
or
dec
xor
or
das
cs
mov
or
push
cmp
and
jge
push
and
or
xor
icebp
ins
clc
cwde
add
clc
and
(bad)
outs
push
xlat
addr16
jne
xor
pop
in
pop
rcl
mov
adc
add
add
adc
push
aaa
out
sub
fdiv
pop
out
call
jns
ret
push
pop
inc
mov
jg
dec
sub
movs
(bad)
mov
sub
(bad)
xchg
mov
jno
sbb
adc
dec
xchg
imul
aaa
mov
enter
test
movs
ins
in
mov
mov
enter
(bad)
sbb
inc
dec
imul
add
mov
lods
movs
pop
pusha
xchg
paddusw
dec
stos
enter
aaa
arpl
xor
xchg
fmul
cmp
add
outs
loopne
(bad)
mov
inc
adc
data16
inc
or
jle
dec
xlat
into
das
pushf
mov
push
and
dec
jnp
retf
dec
jle
stc
cmp
call
ss
std
xor
push
fidiv
imul
mov
pusha
gs
dec
sub
movs
mov
mov
inc
(bad)
jno
inc
dec
mov
or
adc
loopne
sub
sbb
push
jg
in
xchg
stc
push
jg
adc
jnp
pop
ds
(bad)
lods
das
bnd
les
mov
iret
mov
lahf
nop
sbb
mov
pusha
or
pop
arpl
xor
fistp
pop
les
add
je
test
add
mov
mov
mov
daa
inc
rcr
arpl
sub
test
sahf
xor
xlat
fst
add
ja
ins
xchg
mov
hlt
dec
iret
jecxz
lods
xchg
jo
stos
pop
mov
xchg
jo
sbb
jbe
div
je
lock
dec
pushf
imul
jb
into
push
ror
add
lahf
xchg
inc
mov
outs
push
dec
nop
xchg
fwait
mov
stos
es
fdiv
push
push
lods
dec
or
xor
(bad)
xchg
lods
xor
dec
and
jns
les
cmp
add
jl
dec
xchg
xchg
loopne
js
push
jecxz
add
sti
xchg
jns
dec
adc
adc
xor
jno
aaa
sahf
mov
cmp
push
aaa
or
mov
xor
dec
outs
inc
mov
aas
xchg
lea
mul
pop
nop
or
fcmovnb
push
repz
pop
int3
push
daa
xor
mov
arpl
data16
hlt
mov
adc
(bad)
mov
or
sub
add
mov
aad
scas
ret
sbb
enter
nop
sub
mov
cmp
pusha
sbb
cld
popa
push
aam
inc
xor
add
xor
push
(bad)
push
pop
pop
arpl
mov
push
fcom
xchg
test
cwde
lods
inc
push
dec
bound
out
mov
mov
gs
mov
dec
aaa
ss
fst
push
inc
cmp
inc
cmp
movs
sub
jle
mov
ficom
or
dec
jns
ins
push
fst
inc
in
inc
je
xchg
adc
pop
loop
cwde
jl
fs
pcmpgtd
mov
ret
ins
inc
shl
fisub
jns
retf
jo
popf
stc
xchg
imul
mov
push
cmp
imul
add
sub
lods
xchg
push
iret
ins
mov
pop
mov
fsubr
test
aaa
daa
cld
inc
push
test
rcr
xchg
push
fisttp
inc
mov
(bad)
aas
cdq
push
retf
xor
arpl
int
mov
jnp
ins
mov
(bad)
lods
mov
aad
ja
repz
test
or
inc
or
(bad)
mov
xor
ret
lock
sbb
inc
pop
or
lea
jp
into
das
loope
push
ss
imul
mov
or
sbb
push
jg
ret
push
arpl
xchg
or
jbe
add
or
jle
dec
pop
cmp
retf
loope
pop
fcom
das
lea
adc
scas
pop
pop
ror
xchg
stos
xchg
xor
popa
inc
push
push
call
xor
icebp
mov
pop
cmp
inc
popa
add
(bad)
jno
mov
mov
lahf
(bad)
sbb
shl
adc
imul
inc
inc
or
mov
pop
int3
pxor
push
cmp
xor
outs
enter
jo
stos
lods
fist
stc
addr16
mov
(bad)
or
add
repnz
dec
mov
sub
xchg
(bad)
cdq
xor
arpl
clc
mov
test
inc
xor
add
mov
lds
int
xchg
sahf
dec
mov
sbb
test
dec
cmp
sbb
sti
jo
jb
push
push
int
xchg
sub
cmp
mov
loope
adc
xor
call
jmp
test
addr16
cmc
iret
xchg
push
test
jp
pop
sub
push
add
pop
jmp
cmp
das
js
mov
shl
cwde
cld
js
pop
repz
fmul
jp
add
inc
aaa
mov
dec
mov
inc
cmp
mov
sbb
or
sbb
inc
xchg
sub
imul
sbb
in
inc
and
scas
into
(bad)
out
std
shr
in
enter
loopne
jno
adc
jnp
cmp
sub
add
mov
arpl
pop
xor
push
cs
lahf
push
mov
into
fisub
dec
cld
or
(bad)
pop
or
jle
call
push
jns
loop
push
shl
aas
rcr
xor
inc
loop
xchg
pop
clc
daa
and
ins
jno
test
jmp
sysenter
movs
mov
dec
xchg
lahf
arpl
push
retf
mov
or
es
add
xor
out
nop
xchg
xchg
adc
add
inc
cmp
addr16
icebp
dec
movs
iret
sbb
fsubp
xor
mov
movs
test
add
pop
or
push
inc
inc
std
push
dec
in
fisub
mov
out
xor
push
clc
and
or
dec
jmp
leave
dec
push
jo
lods
movs
movs
and
std
or
inc
push
xchg
cmc
mov
cmp
sbb
sbb
or
push
push
pusha
jecxz
nop
cmps
mov
sub
xor
mov
cwde
or
ins
shl
sbb
mov
pop
jno
pop
adc
push
pop
jno
jo
or
test
cmp
adc
(bad)
imul
outs
fwait
xchg
fisubr
ins
or
sti
fwait
sub
hlt
imul
mov
dec
and
je
dec
fwait
lea
push
jnp
in
int
add
pop
and
push
inc
adc
xchg
int
mov
ret
mov
adc
cmc
adc
inc
js
in
dec
and
push
mov
leave
pop
cs
outs
mov
xchg
pop
in
aas
add
inc
cdq
lods
outs
mov
cmovg
cld
and
mov
(bad)
jno
mov
xor
push
pusha
adc
mov
scas
adc
adc
xchg
movs
mov
add
xor
inc
inc
test
pusha
jmp
push
xchg
aas
into
repnz
mov
sbb
ins
sbb
push
push
imul
pop
test
ret
or
movs
jl
imul
inc
mov
outs
(bad)
in
or
mov
ret
adc
outs
mov
xor
dec
xor
inc
xchg
xchg
cmp
push
out
stos
cmps
or
sub
push
arpl
in
sub
add
stos
push
mov
enter
mov
add
cs
sbb
jo
xor
ins
pop
sbb
test
inc
retf
cmp
je
mov
or
dec
imul
add
js
pop
adc
fwait
xchg
je
retf
jp
mov
cmp
lahf
cld
xchg
add
retf
mov
ins
xor
or
inc
call
sub
repz
in
or
leave
stos
popa
cmp
jge
rcr
sbb
enter
add
jg
pop
xchg
push
sar
outs
push
mov
adc
stc
push
sub
xor
jbe
or
pop
jle
out
add
or
pop
push
inc
call
sbb
mov
and
push
sbb
sbb
push
cmps
pop
clc
outs
mov
aas
mov
push
mov
std
into
ds
stos
dec
push
push
mov
mov
dec
aas
stos
inc
jno
test
xor
inc
mov
sbb
outs
adc
les
icebp
popw
out
sub
sbb
mov
cmp
jge
pop
inc
stos
xchg
repz
mov
imul
adc
loop
test
pop
pop
jae
pop
inc
jo
jecxz
div
(bad)
mov
loop
cmp
mov
sbb
hlt
sbb
ds
sub
xchg
dec
out
popa
jmp
ret
cmp
and
pop
dec
lahf
test
push
fs
arpl
pop
mov
fbld
cdq
mov
jge
js
sub
xlat
lods
pop
lods
push
es
dec
adc
sbb
call
cmps
aam
pop
sub
outs
jg
inc
adc
test
adc
push
lods
dec
icebp
repz
cmp
mov
push
xlat
jb
dec
xlat
gs
pop
clc
stos
jnp
inc
jmp
jg
dec
cmps
outs
call
push
pop
dec
pop
cwde
lods
dec
test
adc
(bad)
cmp
jae
mov
sub
shr
pop
sub
xchg
mov
jmp
inc
lods
push
cmp
xor
mov
clc
sbb
and
pop
cs
sahf
mov
in
sbb
mov
repnz
stos
ins
cmp
(bad)
push
push
hlt
jo
push
dec
push
int3
mov
add
jbe
sbb
adc
jns
push
mov
ja
shl
xchg
sahf
mov
std
xchg
daa
sbb
mov
mov
add
jnp
test
xchg
mov
xor
and
pushf
cs
(bad)
pushf
push
mov
mov
cmp
shl
jp
add
ficom
gs
xlat
jge
sbb
dec
mov
out
push
adc
adc
jbe
pop
sbb
dec
pusha
sahf
xchg
jp
call
jle
cmps
mov
ficomp
dec
ret
jg
mov
xchg
dec
hlt
or
push
xor
arpl
loop
add
xor
sbb
xor
cs
add
mov
ja
inc
sahf
xor
sub
mov
mov
jl
(bad)
dec
pop
inc
jmp
bound
xchg
sub
pop
rol
je
xlat
pop
mov
outs
jnp
mov
inc
dec
rcl
cwde
in
mov
cmps
and
push
jmp
mov
sub
cli
xchg
cmps
adc
cmp
sub
into
xchg
fiadd
aaa
ins
and
jne
in
retf
outs
xchg
das
in
fwait
push
xor
retf
rcr
mov
add
inc
add
pop
ins
dec
scas
imul
xor
aaa
push
stc
xor
ins
pushf
cmp
push
js
mov
outs
ret
dec
sbb
fwait
leave
cmps
sub
shl
cwde
idiv
add
sbb
int3
movs
or
fs
fcmovnu
fwait
or
sub
dec
or
dec
mov
test
es
sub
mov
fmul
sbb
pop
inc
in
dec
jne
inc
pop
or
pop
fistp
mov
cld
sbb
ins
pusha
dec
mov
dec
loop
fs
mov
stos
push
inc
retf
and
loop
dec
xchg
ds
data16
pop
cmps
leave
pushf
add
xor
ja
out
cmps
and
pop
aas
pop
add
fwait
mov
les
mov
retf
xchg
test
jns
mov
das
jle
pop
adc
addr16
aas
shl
fistp
push
lods
or
adc
fs
movs
test
push
call
mov
aaa
lea
shr
test
mov
push
push
pcmpeqd
ds
adc
stc
or
pop
or
inc
sti
popf
pop
in
dec
mov
xor
cmps
lods
sub
clc
mov
dec
jl
pop
aas
(bad)
push
ins
outs
lock
daa
das
out
pop
hlt
je
and
jbe
and
jno
push
push
jnp
dec
cmps
test
mov
fiadd
mov
lds
mov
dec
jmp
jmp
lahf
cmp
add
sbb
cmp
dec
fisub
push
adc
arpl
outs
mov
dec
rcr
rol
cmps
std
push
popf
inc
enter
test
jnp
xor
popa
or
push
push
push
xor
loopne
or
ins
out
fisub
or
daa
test
and
mov
jne
mov
or
test
push
dec
fisub
mov
pop
bound
cmps
xchg
cwde
sbb
and
add
cmps
cld
mov
pop
xor
add
sbb
cli
cmp
icebp
in
gs
mov
or
jl
outs
sub
pusha
jp
ret
aas
lock
and
or
cs
loope
or
les
int3
push
jl
push
cs
mov
ins
(bad)
jge
jnp
mov
lock
dec
cmp
sub
sahf
add
add
push
dec
fucomp
rol
cmp
inc
sbb
sub
xchg
dec
(bad)
fadd
inc
fsubp
sbb
mov
pop
not
dec
jecxz
inc
cmp
xchg
or
mov
jae
int
ret
ss
ins
inc
ja
movs
pop
cmp
sub
mov
rol
nop
mov
jmp
mov
jp
jae
scas
cmc
adc
and
dec
outs
loop
mov
test
bound
push
sub
xchg
imul
test
iret
sbb
popa
cmp
in
arpl
fs
addr16
aas
ret
xor
mov
xchg
daa
pop
pop
adc
test
rcr
loopne
and
cmps
lea
jle
or
repnz
bound
fs
loopne
aam
bound
sbb
cwde
pushf
dec
push
or
cmp
jns
mov
add
mov
movs
mov
adc
movs
inc
sub
shl
cli
push
pop
imul
push
int
jge
push
lea
ror
adc
jno
pop
mov
adc
dec
(bad)
int
pop
mov
mov
sub
ret
lods
fdivr
add
jecxz
or
add
push
jmp
xchg
pushf
mov
sbb
fs
cmps
push
sar
jno
sti
jnp
pop
jmp
gs
stos
inc
sbb
mov
xlat
jno
jmp
ins
aas
std
sub
xor
xor
ficom
dec
sbb
dec
out
outs
adc
int
xchg
lock
add
xor
je
lods
(bad)
xchg
scas
(bad)
cs
inc
mov
jns
rcl
xor
cwde
xchg
movs
push
data16
pop
inc
stos
call
sub
or
jge
ins
sti
mov
aam
xchg
cld
and
xchg
and
pusha
retf
scas
les
(bad)
pop
and
cmc
pop
or
dec
dec
sub
sub
sbb
hlt
dec
add
sub
pop
les
or
outs
push
rcl
into
sub
mov
test
fld
lods
jecxz
push
popf
or
(bad)
iret
mov
adc
fld
xor
push
inc
add
mov
out
in
xchg
inc
sar
test
ins
or
(bad)
pop
sbb
jo
aaa
(bad)
aas
jae
cli
test
push
in
sub
or
sub
and
or
jb
mov
movs
ficomp
into
inc
or
test
scas
mov
imul
and
cmp
cs
sahf
fmul
imul
pop
dec
add
sub
add
loopne
movs
add
fidivr
adc
mov
push
dec
call
dec
pop
ror
adc
mov
sbb
or
push
lds
xor
dec
lahf
mov
pop
fdiv
sub
mov
fist
lahf
mov
inc
leave
jle
ins
mov
sbb
js
fiadd
or
neg
mov
cmp
jns
add
test
jns
fstp
mov
das
movs
(bad)
std
cmc
sub
fwait
sub
mov
call
inc
push
stc
dec
pop
test
sub
icebp
inc
call
ins
cwde
sahf
push
sbb
dec
lds
xchg
mov
mov
(bad)
je
ret
gs
pop
pushf
out
dec
pushf
sub
jle
cmp
dec
pusha
pop
xor
dec
in
shr
xor
and
push
push
dec
mov
mov
sbb
ret
xchg
cwde
ss
test
xor
inc
aaa
xlat
push
dec
bound
mov
sbb
or
sub
add
or
and
dec
dec
jbe
lods
jns
mov
fcom
js
mov
mov
xchg
push
pop
(bad)
ja
jns
or
inc
xchg
dec
jnp
pop
fs
mov
das
dec
pop
pop
lock
or
pop
or
add
cli
(bad)
jle
or
(bad)
das
mov
mov
sbb
fsub
js
lock
dec
into
xor
hlt
hlt
dec
fldcw
or
adc
ss
popf
bound
adc
shr
fcom
js
(bad)
mov
mov
add
pop
push
aam
push
scas
sub
imul
repnz
ret
adc
add
push
(bad)
out
(bad)
mov
pop
push
cmp
sub
lods
sub
imul
cmps
inc
sti
lds
loope
pop
daa
retf
xchg
or
jg
jmp
sub
mov
data16
loopne
adc
jbe
pop
(bad)
pop
enter
ja
movs
sar
retf
enter
add
rcl
into
jne
jle
stos
shr
push
das
sbb
in
mov
pop
sbb
cmps
cmp
pop
and
pop
add
es
mov
sub
push
lea
shl
enter
inc
sbb
xchg
cmp
push
bound
pop
inc
sub
jb
inc
int
adc
jge
es
pop
pop
imul
and
hlt
inc
jge
push
mov
mov
push
js
or
lock
xor
pop
pop
test
dec
pop
pop
pop
fidiv
and
sbb
dec
add
inc
repnz
mov
sub
mov
push
mov
aaa
and
pop
aaa
in
outs
bound
mov
popf
pop
into
inc
test
mov
sub
ins
pushf
xchg
fiadd
retf
popa
mov
enter
xor
push
ficom
mov
adc
es
data16
sti
xchg
aad
and
cs
loop
test
xor
inc
or
xchg
das
(bad)
push
xchg
and
(bad)
nop
sbb
cmp
fcom
dec
sbb
test
pushf
ja
sub
int3
cmp
push
dec
pusha
and
jno
out
mov
inc
(bad)
aad
pop
shl
das
mov
sub
jo
cmp
jmp
cmp
or
sbb
mov
lods
sub
jbe
or
pop
xchg
out
add
push
mov
sbb
sbb
inc
xor
popa
add
sub
test
and
or
adc
dec
popf
adc
adc
mov
ja
mov
xchg
mov
add
xchg
fsub
and
adc
sub
inc
lea
or
(bad)
mov
jp
xor
sub
dec
xor
mov
(bad)
cmp
xor
mov
loop
inc
and
retf
push
jmp
mov
daa
adc
jge
or
or
ins
loop
fwait
pop
popf
xor
jno
mov
pop
pushf
(bad)
push
pop
fst
push
scas
xchg
mov
aad
dec
retf
jnp
inc
pop
cmc
jmp
jne
or
add
loopne
dec
cmovg
push
repz
sahf
test
jl
cmp
dec
inc
inc
cmp
mov
test
mov
je
ins
icebp
mov
clc
mov
fs
mov
addr16
mov
movs
dec
lds
add
sbb
pop
mov
ror
push
das
jns
inc
cmps
into
inc
movs
rcl
mov
test
lahf
(bad)
and
ja
mov
or
push
imul
fistp
es
out
xchg
mov
push
aaa
dec
adc
mov
repz
mov
adc
mov
das
clc
fmul
add
bound
out
jo
jne
bound
mov
or
push
hlt
cmp
sbb
and
or
inc
mov
inc
xchg
push
dec
in
inc
add
in
test
arpl
outs
loopne
sub
shl
xor
and
push
dec
sbb
adc
or
ja
cmps
lea
ds
sbb
inc
mov
sbb
xchg
aas
shl
or
xor
out
dec
sti
inc
jg
int
and
mov
sar
push
test
push
js
repnz
push
jb
mov
dec
mov
jle
out
add
mov
mov
and
inc
dec
fwait
jecxz
outs
mov
pop
jbe
push
sbb
adc
rep
test
pop
and
inc
push
adc
cwde
pusha
aad
mov
jbe
push
(bad)
sar
fcmovnbe
pcmpgtd
outs
push
jmp
pusha
addr16
sub
pop
in
jp
xor
push
inc
imul
and
sbb
movs
jnp
xchg
ja
daa
das
mov
xor
push
outs
pop
xchg
adc
mov
mov
pop
inc
pop
pop
inc
loopne
ja
jae
ror
cmc
test
movs
jl
sbb
dec
sbb
int
push
add
test
loope
cmc
sub
add
punpcklbw
cs
neg
sbb
mov
xchg
and
inc
cmp
sub
enter
pop
ficomp
xchg
cdq
xchg
pusha
stos
adc
js
nop
cdq
dec
sub
and
js
enter
sub
pop
and
push
adc
int
mov
iret
rcl
nop
test
sub
add
int
pop
(bad)
fs
push
icebp
jle
outs
std
mov
sbb
and
das
jnp
pop
cmps
js
and
adc
cmps
cdq
pop
mov
push
add
nop
mov
mov
cmp
pop
repz
(bad)
repnz
push
sub
lods
xchg
scas
push
jg
dec
ds
(bad)
cli
mov
sbb
pop
sbb
and
and
push
mov
add
cmps
jb
jne
aad
in
sbb
dec
or
pop
cmp
test
inc
xor
ins
int3
bswap
and
das
jnp
es
or
sub
jmp
fisubr
pop
dec
retf
or
inc
jno
xchg
lods
push
xor
push
mov
pushf
and
sub
out
mov
adc
imul
pop
icebp
or
aaa
xchg
jl
std
or
stos
pop
sbb
in
inc
or
push
jp
sti
mov
add
jle
sub
cmp
dec
out
push
dec
adc
(bad)
pop
test
jle
(bad)
dec
and
nop
mov
cdq
test
pop
lods
dec
dec
sahf
call
jnp
push
or
xchg
sbb
ins
retf
repz
sbb
and
dec
mov
lahf
hlt
jge
mov
ret
xchg
dec
and
cmp
mov
and
adc
jp
ret
test
icebp
jno
push
mov
xor
xchg
jl
sbb
mov
inc
aad
ds
sahf
lock
nop
adc
inc
push
lods
xlat
movs
jne
adc
push
jle
fs
call
stos
mov
push
pop
movaps
xor
sub
xchg
sub
jle
clc
adc
(bad)
mov
call
cmp
fstp
inc
gs
in
imul
data16
xor
push
sbb
int3
jno
push
es
je
xchg
mov
pop
mov
cdq
lods
lods
mov
pop
dec
loopne
jmp
nop
pusha
(bad)
push
daa
push
dec
imul
or
or
jl
out
nop
xchg
sbb
inc
inc
jge
jae
xchg
sub
sbb
int
xor
lods
cmp
cs
fistp
sub
jae
jae
xor
outs
iret
dec
mov
pop
fiadd
inc
jne
mov
mov
inc
call
mov
or
xchg
dec
addr16
in
nop
cmc
inc
mov
aas
push
push
adc
adc
dec
repnz
ja
inc
aaa
dec
add
dec
xchg
aam
cmp
or
cdq
push
and
cld
pop
and
addr16
enterw
dec
sbb
jbe
sbb
outs
push
xchg
mov
add
imul
adc
pop
ret
dec
fidiv
mov
xor
sub
xchg
fdiv
push
dec
and
leave
rcl
xor
je
inc
add
pop
test
lods
test
pop
retf
out
ss
xchg
or
dec
push
mov
jae
push
addr16
mov
add
es
inc
lea
dec
retf
ds
ins
adc
xchg
nop
aas
adc
fs
jp
call
cmps
lods
pop
sbb
pop
jecxz
lock
lods
or
pop
mov
frstor
cmp
push
sbb
mov
dec
pop
daa
bound
inc
sbb
jecxz
ror
jo
xchg
push
(bad)
xor
cld
sub
mov
jo
jae
cli
addr16
ja
ss
fcom
inc
out
ds
sbb
dec
jno
lahf
lds
aam
jg
dec
aas
pop
xchg
loop
fisub
pop
push
(bad)
jg
inc
jp
icebp
xchg
push
sbb
aaa
sbb
push
adc
mov
sub
inc
add
xchg
sub
or
leave
in
pop
clc
movs
and
add
mov
fbld
not
outs
shl
pop
ror
and
sbb
pop
pop
fst
jnp
dec
cmps
mov
xchg
aam
add
movs
mov
lods
movs
popa
outs
repnz
fld
xor
loopne
inc
jmp
mov
lahf
sub
push
adc
mov
dec
pop
inc
imul
nop
js
dec
into
test
mov
ret
xchg
enter
mov
adc
leave
pop
jl
jmp
test
xor
cmp
pusha
or
jns
sbb
push
dec
mov
pusha
sbb
in
call
es
pushf
fild
ret
mov
pop
inc
xor
adc
adc
in
sbb
adc
push
jae
mov
les
jmp
test
xor
lock
scas
or
(bad)
mov
xor
into
jns
inc
push
mov
cli
push
xchg
or
sub
dec
inc
mov
cli
push
mov
push
callw
jp
jecxz
mov
mov
addr16
enter
xchg
mov
mov
xor
pop
sbb
jg
xor
lods
test
popa
xor
arpl
lods
cmp
hlt
sub
jl
iret
cmps
xchg
daa
bt
dec
aas
shr
outs
stos
pusha
es
(bad)
jne
imul
lds
push
add
mov
int3
jae
xor
pop
ins
inc
cmps
iret
(bad)
vhaddps
or
test
shl
mov
sti
jne
in
lds
pop
jo
sbb
popa
aaa
pop
xor
rol
pop
inc
inc
addr16
mov
dec
fsub
into
add
scas
push
sbb
stos
pop
sub
(bad)
push
pushw
jno
or
cmc
js
push
enter
and
jmp
daa
push
ins
jnp
loop
pop
fcomip
inc
jno
arpl
push
rcr
cli
stos
push
imul
jmp
jno
sub
mov
mov
sub
cld
clc
xchg
cmp
xor
movs
in
mov
rcr
mov
cmp
shl
dec
sbb
pusha
dec
sub
dec
inc
pop
ficom
cs
sbb
or
adc
imul
out
dec
ins
fidiv
test
daa
mov
push
loopne
dec
out
in
test
dec
jp
adc
clc
(bad)
fild
cmp
xor
xchg
sbb
imul
neg
mov
je
xlat
push
mov
or
xlat
dec
add
enter
jp
arpl
inc
push
sub
mov
repnz
or
cmp
cs
jmp
mov
mov
js
push
mov
movs
aaa
lahf
mov
fidiv
mov
jne
ds
sahf
mov
es
mov
sub
imul
sub
retf
loopne
mov
jmp
sub
test
cmp
mov
inc
cmp
jbe
lock
ins
dec
or
aas
adc
mov
xor
clc
mov
sub
ja
push
test
xor
call
lahf
xchg
cmc
jbe
sbb
pop
dec
pop
addr16
mov
adc
rcl
sbb
or
call
mov
sub
jne
retf
test
dec
cmp
sbb
sub
bound
jecxz
jne
arpl
pop
out
pop
and
ds
in
adc
push
mov
and
sti
adc
sub
mov
aad
test
push
push
dec
mov
xor
adc
outs
(bad)
pop
adc
mov
aas
push
dec
cmp
xor
lods
xchg
jno
dec
mov
or
movs
sub
arpl
out
push
call
add
sbb
hlt
push
sbb
or
in
push
ror
outs
pop
fild
or
popw
dec
adc
lods
ins
mov
xor
mov
jecxz
and
inc
push
mov
scas
push
xchg
add
mov
adc
je
fst
mov
(bad)
push
jle
push
test
sahf
out
and
cld
push
mov
mov
shl
das
in
data16
sbb
rol
or
mov
jae
aaa
icebp
js
jns
(bad)
inc
(bad)
pop
(bad)
pop
and
jne
xchg
and
pop
xor
in
call
jg
call
in
in
xchg
lods
sub
mov
sub
ins
(bad)
rol
pop
pop
outs
and
lods
sub
or
mov
push
test
xor
xchg
push
sbb
inc
das
mov
jo
jb
addr16
icebp
pop
push
or
sbb
inc
enter
jae
xchg
movs
push
cwde
fild
fimul
pop
mov
fdiv
in
jl
ret
jne
xchg
vpcmpgtw
inc
test
push
and
xchg
clc
or
sub
sub
push
mov
dec
int
mov
jnp
dec
(bad)
sub
frstor
push
sub
pusha
push
ins
retf
data16
xor
retf
jnp
push
mov
xchg
or
or
jnp
test
sbb
push
loope
mov
movs
mul
add
inc
popf
in
push
adc
jnp
or
mov
inc
sbb
push
fidivr
ins
push
pop
outs
cs
imul
not
out
sbb
sti
jo
inc
jecxz
sbb
rcr
or
fs
gs
pop
xor
mov
sub
fs
jo
cld
inc
lea
cmp
pop
sbb
mov
inc
fadd
sub
out
in
inc
sbb
jo
pop
push
mov
adc
bound
jbe
rcl
and
push
or
pop
fmul
xchg
aas
cmp
imul
ror
fwait
cwde
xor
loop
sbb
mov
sbb
inc
sbb
pop
dec
fimul
sub
cdq
push
push
lds
jl
xor
es
push
jbe
in
bound
imul
sbb
(bad)
(bad)
push
loopne
sub
jecxz
sub
sub
outs
sti
repz
ds
mov
push
sbb
mov
xchg
fnstenv
cmc
jp
je
out
cdq
leave
add
out
push
adc
fist
std
dec
inc
or
xchg
push
daa
std
and
aaa
ins
stc
inc
cmps
push
push
ss
enter
jo
cli
cmp
dec
mov
sahf
xchg
fwait
jmp
inc
ror
loopne
pop
mov
mov
imul
movs
pop
and
dec
es
(bad)
mov
es
or
mov
scas
cmc
xor
repz
cmps
xchg
inc
push
out
jnp
adc
data16
jo
inc
jmp
jg
call
hlt
sbb
push
and
pop
outs
je
mov
mov
retf
dec
loope
nop
pushf
test
dec
push
dec
retf
inc
dec
xchg
enter
xor
cdq
leave
mov
xor
mov
adc
jbe
push
cmp
jecxz
test
mov
inc
sbb
movs
sbb
sbb
xor
inc
inc
data16
and
daa
das
ja
(bad)
pop
lea
xor
push
xchg
xchg
jmp
fistp
sub
in
cli
shl
dec
jae
shl
imul
add
rol
xchg
nop
cmps
sub
aaa
xor
jg
dec
and
shr
jmp
xchg
pop
movs
push
mov
test
xor
icebp
dec
outs
imul
jnp
sar
push
mov
add
add
sbb
gs
sub
ficom
push
mov
push
pop
repz
je
mov
movs
jne
inc
das
popa
push
push
sbb
dec
aaa
add
mov
and
bound
mov
test
mov
jmp
aam
dec
or
inc
add
fs
push
shl
(bad)
push
leave
pop
push
jb
ror
jne
adc
outs
xchg
call
xor
bound
fidiv
call
pop
sub
aas
sub
sbb
pop
sbb
and
mov
jp
sub
pop
push
(bad)
xchg
je
pop
fsub
push
mov
dec
xchg
jno
repnz
test
inc
adc
inc
jns
mov
addr16
imul
out
rol
and
pop
stc
pop
mov
pop
push
inc
cdq
mov
int
push
(bad)
gs
(bad)
hlt
sub
sti
js
mov
cwde
outs
repnz
dec
aaa
sbb
and
or
dec
mov
sbb
pop
pop
add
adc
lahf
sub
push
iret
in
mov
jmp
xor
test
sbb
ds
inc
test
cdq
dec
out
das
cmc
add
add
ins
loopne
fistp
cmp
imul
shr
call
push
cmps
mov
mov
ror
xchg
jno
inc
pop
xor
jnp
adc
movs
repz
add
cld
jmp
push
cmp
pusha
daa
push
mov
fadd
test
out
sbb
mov
and
jg
call
and
mov
inc
sti
xor
dec
stc
cmp
jge
push
mov
ja
clc
or
in
push
xor
mov
pop
mov
addr16
leave
pop
into
pop
push
sahf
(bad)
xchg
cmp
sub
popf
xchg
fwait
adc
add
std
mov
jge
cmp
aaa
arpl
dec
cwde
xchg
leave
jl
ficomp
mov
outs
ror
jmp
cwde
mov
inc
or
mov
mov
imul
adc
mov
mov
aaa
or
add
jge
sub
mov
or
push
xlat
imul
lods
test
sbb
mov
loop
in
inc
and
sub
mov
or
push
js
in
xchg
xlat
mov
sub
push
and
jecxz
mov
add
mov
pop
xlat
dec
jmp
dec
xor
cmps
ins
adc
in
ins
jg
arpl
xlat
scas
jle
data16
(bad)
jns
cmovle
push
mov
inc
push
xor
movs
ins
pushf
shl
push
push
xchg
mov
clc
mov
pop
out
or
xchg
jmp
inc
xor
pop
in
test
cmp
adc
xchg
mov
xor
pop
and
pop
mov
xchg
out
xor
into
mov
loopne
inc
sub
xchg
push
into
push
xor
fadd
cmp
enter
aaa
jno
fcomp
lds
push
cs
inc
inc
mov
inc
sbb
outs
or
mov
adc
inc
repnz
xor
adc
pop
arpl
xor
retf
mov
pop
push
pop
adc
jge
dec
cwde
mov
fdivr
cdq
push
xlat
xor
shr
mov
sbb
repnz
inc
ficomp
xor
data16
and
sub
xor
lea
dec
cwde
add
dec
inc
dec
mov
adc
xor
push
xchg
mov
mov
ins
stos
push
push
mov
es
into
sahf
pop
adc
adc
icebp
xchg
shl
sub
and
mov
jle
shl
xchg
mov
dec
mul
ins
loopne
add
(bad)
test
sbb
xchg
inc
imul
mov
cmp
and
je
das
les
aaa
jae
push
cmc
sbb
jmp
in
lds
ins
sbb
push
fld
dec
xor
nop
mov
sbb
adc
xchg
adc
inc
sbb
push
and
stc
add
(bad)
cli
sub
enter
lea
or
test
sbb
popa
aas
clc
imul
arpl
(bad)
movs
dec
sub
repz
or
cmp
push
push
jnp
mov
jno
leave
ss
jl
mov
aam
(bad)
btc
daa
pop
out
mov
stos
imul
ficomp
add
sti
leave
xchg
(bad)
push
jg
sbb
pop
add
sub
jp
hlt
push
mov
mov
add
clc
mov
add
ins
dec
jno
inc
sub
ret
(bad)
jge
ds
adc
and
push
xchg
aaa
push
or
cmp
sub
retf
xor
inc
leave
jbe
sub
xchg
add
push
outs
mov
mov
xor
push
mov
sub
pop
cvtdq2ps
pop
inc
fs
mov
add
fsubrp
xor
xchg
xchg
into
push
sbb
dec
gs
clc
inc
(bad)
sub
add
and
cmp
push
jge
inc
mov
outs
pop
mul
jg
xchg
xchg
fdivr
jge
pushf
jp
jnp
cwde
xacquire
pop
add
cmps
inc
cmovle
push
sub
es
ins
inc
sbb
inc
std
loopne
fisttp
mov
lods
mov
popa
inc
movs
xchg
pop
pop
clc
nop
adc
fisttp
inc
push
jbe
push
jl
ret
test
rol
pop
in
push
das
jbe
inc
fisttp
jp
dec
push
push
test
ins
mov
fwait
movs
mov
repnz
out
call
mov
mov
or
sbb
int
and
out
test
popf
adc
pop
aaa
outs
push
add
inc
mov
data16
jp
pop
push
adc
mov
ins
adc
sub
and
ret
daa
sub
dec
repz
aaa
dec
dec
dec
xchg
popa
ror
js
sahf
mov
lods
in
pushf
(bad)
pop
pop
xchg
pop
shl
stos
out
mov
add
pcmpeqd
cmp
loopne
mov
sbb
jbe
dec
cmp
mov
mov
imul
leave
xor
sub
addr16
retf
dec
jnp
frstor
and
dec
out
inc
ret
and
sub
jbe
int
or
mov
lods
int3
jb
(bad)
push
call
das
inc
inc
or
mov
dec
ds
jp
iret
mov
movhps
dec
or
test
pusha
aam
mov
ds
out
lds
cmp
shl
sub
popa
adc
ins
inc
dec
call
mov
push
in
or
outs
xchg
xor
js
ins
fwait
(bad)
pop
mov
inc
push
enter
nop
mov
push
mov
jmp
mov
jp
jae
pushf
jmp
sub
adc
lea
adc
dec
pop
bound
int
mov
dec
mov
ds
xchg
dec
das
add
js
out
inc
inc
push
jmp
out
in
pop
sar
push
sbb
pop
lds
arpl
outs
outs
xor
ins
push
shl
outs
mov
int
mov
push
mov
inc
pop
jmp
icebp
sub
popa
xchg
jmp
dec
(bad)
mov
ja
sub
pop
xor
outs
mov
(bad)
fisttp
adc
popf
mov
cmp
lods
pop
adc
push
jg
(bad)
push
and
adc
and
inc
mov
pop
pop
xor
mov
jae
adc
scas
into
mov
mov
pusha
enter
ins
mov
xchg
popa
nop
dec
jns
push
andnps
sub
out
mov
cs
ins
add
dec
cli
mov
test
mov
inc
retf
cmps
test
sub
cmp
jp
stc
or
push
cmc
inc
ins
(bad)
imul
xor
and
push
push
dec
nop
mov
enter
lds
jg
cmp
sahf
mov
pop
lea
stos
inc
dec
call
cvtps2pi
or
div
sub
cmps
cmps
mov
cmp
push
pop
fcomp
adc
call
cmp
mov
sbb
dec
pop
popa
retf
pop
call
shr
push
js
jmp
mov
dec
imul
jge
(bad)
jp
dec
xchg
mov
push
mov
pop
xor
xchg
lods
xor
or
jl
loopne
sbb
sbb
(bad)
xchg
adc
and
addr16
scas
inc
fisubr
shr
mov
mov
mov
cmp
ret
test
or
sbb
push
dec
je
sub
call
mov
push
or
and
dec
adc
mov
imul
and
cdq
mov
mov
push
int3
push
jo
out
xor
push
jle
rcl
outs
rcr
mov
cmp
and
and
lods
ins
aad
movs
out
xor
loop
or
mov
jnp
inc
or
adc
aad
pop
imul
pop
sub
inc
xchg
jns
sbb
sahf
mov
sbb
jae
xor
cmps
stos
not
movs
jb
in
inc
mov
push
cdq
hlt
(bad)
pop
mov
imul
dec
sbb
xchg
mov
or
aas
imul
lds
out
and
stos
sub
popa
mov
jnp
mov
dec
add
jbe
inc
enter
int3
scas
push
repz
or
enter
(bad)
adc
xchg
movs
pop
test
push
in
mov
xchg
movs
and
mov
popf
jnp
jnp
mov
sti
aaa
xchg
adc
adc
call
dec
and
std
mov
es
adc
imul
pop
lods
loope
cmps
mov
jae
lock
out
sbb
lds
dec
add
bound
fdiv
dec
xor
stos
or
outs
dec
xlat
add
mov
sbb
push
xor
addr16
in
je
pop
movs
lods
les
dec
js
push
jmp
sub
xor
inc
sub
inc
lods
call
cmp
inc
(bad)
mov
xor
adc
sbb
mov
fistp
fwait
and
adc
xchg
jle
sub
outs
aas
imul
xor
xor
shl
jmp
mov
dec
adc
movs
leave
inc
movs
fisubr
int3
jae
pop
mov
enter
xor
mov
mov
imul
add
or
lahf
mov
es
retf
test
sub
add
pop
push
popf
(bad)
and
push
(bad)
mov
retf
pop
loope
xor
fmul
(bad)
jmp
inc
(bad)
fnstenv
pop
push
ja
add
sbb
add
inc
mov
pop
in
outs
or
mov
adc
popf
jnp
push
xchg
jmp
xor
add
cmp
call
pop
pop
add
or
addr16
pop
iret
jp
loopne
jecxz
and
cs
int
pop
jmp
pusha
or
ror
into
push
push
jb
push
push
stc
push
leave
sub
sub
xor
lea
pop
dec
push
push
mov
pop
cli
xor
test
or
fistp
ror
adc
pop
push
inc
gs
fcompp
pop
add
(bad)
mov
pop
adc
imul
mov
and
cmps
imul
sbb
jo
pop
and
push
imul
popf
jb
ins
lea
mov
xor
outs
rol
lea
sub
data16
jg
sti
popa
data16
xor
dec
test
pop
cli
rol
std
pop
fcom
nop
stc
mov
inc
imul
mov
sub
add
fucomp
test
sbb
push
cmp
jbe
xchg
je
or
stc
das
int3
popa
xlat
shr
(bad)
cmp
repz
inc
cmp
cmc
adc
sub
push
or
lock
test
sub
push
push
cmp
jle
retf
push
add
popf
mov
mov
pop
int
shl
mov
xchg
je
xor
pop
inc
outs
loopne
mov
pop
dec
movs
mov
xor
cmp
push
mov
inc
idiv
(bad)
and
cmps
sub
or
lock
adc
int
dec
aam
pop
je
push
jae
sbb
or
add
xlat
push
mov
jecxz
xor
fs
xchg
(bad)
sub
xchg
adc
jo
call
mov
add
retf
xchg
sub
inc
popa
cmp
sahf
cmps
and
or
jne
cli
cmp
cs
jno
outs
mov
popf
fidivr
jns
imul
fs
ror
push
icebp
ins
adc
adc
not
sub
sub
mov
(bad)
push
add
hlt
and
pop
in
and
jo
jp
mov
inc
retf
popa
mov
sti
dec
mov
jl
retf
jg
adc
ja
inc
sbb
sbb
pop
pusha
add
add
in
adc
push
sbb
or
mov
sar
mov
mov
pop
mov
aad
es
mov
or
icebp
and
jae
jbe
push
sub
shr
pop
iret
sbb
add
inc
mov
inc
js
test
push
jno
ja
pop
sahf
in
mov
mov
pop
ins
xchg
push
(bad)
in
push
jno
sbb
push
add
xchg
sti
cs
pop
adc
sub
pop
jne
pushf
jae
jbe
lock
out
adc
movs
pop
xor
pusha
jg
cld
dec
cmp
out
jbe
or
cmp
push
mov
push
imul
fmul
stc
outs
jge
out
mov
cdq
xchg
pop
dec
sar
jge
mov
sbb
push
gs
xchg
mov
jge
fcom
cmp
xor
dec
mov
test
lods
mov
fidivr
xchg
stos
or
in
addr16
or
dec
dec
in
sbb
imul
movzx
cmp
movs
imul
inc
mov
pop
push
fistp
js
xchg
sbb
mov
pop
cmc
add
cdq
mov
sub
inc
inc
cmp
xchg
mov
cmp
sbb
fcom
add
jge
js
mov
int3
push
xchg
add
mov
push
div
push
aad
add
or
imul
inc
inc
mov
jae
cli
test
adc
js
add
adc
pmulhw
mov
inc
test
inc
or
sahf
mov
lods
mov
call
sub
in
mov
mov
inc
xor
pop
call
push
inc
retf
std
ficom
sub
push
stos
loopne
int3
pop
cmps
mov
test
jmp
(bad)
outs
push
pop
fsubr
in
inc
push
push
retf
data16
xchg
jae
dec
in
sbb
and
xchg
push
loopne
xor
mov
jb
inc
jnp
mov
rcl
mov
sbb
jle
push
push
mov
cli
jae
adc
mov
or
xchg
mov
sub
xor
mov
aad
jecxz
inc
and
js
pop
cmp
shr
fdivr
ins
ret
xor
adc
xchg
dec
out
push
ins
pop
dec
call
stc
xor
jo
xchg
scas
mov
and
inc
hlt
jae
mov
xchg
sbb
inc
pushf
shl
sub
xlat
mov
jp
sbb
aaa
inc
push
cmovg
add
movs
mov
shr
loope
xor
std
lea
sub
fisttp
jb
push
fisubr
rol
(bad)
or
and
add
je
loopne
inc
popf
xlat
sbb
in
add
mov
xor
xchg
gs
xchg
push
fsub
mov
add
imul
clc
call
adc
(bad)
mov
jbe
adc
pop
es
and
in
hlt
ins
sbb
xchg
cli
push
test
mov
test
inc
pop
push
mov
retf
pop
inc
inc
cld
pusha
dec
sbb
imul
pop
jbe
es
jle
xor
sahf
into
push
test
outs
pop
fld
call
jo
dec
push
mov
sub
add
push
mov
sahf
pop
sbb
cmp
sbb
loopne
xchg
stos
pop
inc
sub
add
jno
outs
mov
test
mov
jmp
or
sbb
pusha
cmp
bound
mov
test
aam
sar
iret
js
or
ins
int
xor
inc
push
aam
jo
inc
jp
nop
loope
fild
push
div
inc
push
mov
xchg
push
pop
push
ds
jge
aam
push
adc
dec
add
sti
fbstp
add
pop
jbe
push
pop
push
mov
cmps
cmc
or
xlat
call
add
nop
sbb
out
sbb
mov
and
repz
adc
mov
sub
cmc
inc
add
pop
loop
jle
fsubr
retf
push
mov
sahf
fiadd
and
and
mov
xchg
inc
mov
add
sub
scas
shl
dec
out
ror
daa
xor
sbb
mov
mov
push
mov
jecxz
imul
clc
jg
xlat
adc
data16
cmp
adc
push
lea
adc
outs
mov
dec
add
loope
rol
mov
addr16
jae
and
loop
pop
test
jns
xor
aam
add
(bad)
(bad)
out
mov
or
sbb
popf
inc
into
push
shr
movs
push
xor
call
jb
stos
pop
or
sbb
int3
inc
add
or
mov
push
imul
fidivr
xor
mov
xlat
jp
dec
sbb
xchg
outs
mov
ins
add
inc
jg
xchg
lahf
mov
dec
ror
ja
fwait
xchg
stos
xor
sbb
mov
inc
push
imul
ss
adc
push
jp
push
or
mov
in
cmp
xor
test
jle
dec
int
push
arpl
dec
and
ret
fbld
sbb
lock
pop
inc
inc
mov
inc
call
jge
mov
push
clc
enter
or
lea
add
jle
sbb
and
cmp
sbb
sub
pop
ins
sub
pop
adc
jne
sar
cmp
aam
out
xchg
xor
fcomp
jge
jo
adc
call
je
imul
dec
pushf
pop
jmp
in
jp
or
out
cmp
pop
ja
mov
push
shl
add
push
xor
mov
popf
hlt
push
xchg
int
jb
mov
dec
lea
push
ds
ins
dec
sbb
movs
mov
push
pop
or
jns
sbb
mov
lods
jne
(bad)
and
mov
imul
jns
and
push
dec
lods
inc
data16
icebp
stos
imul
push
or
ja
sbb
or
xchg
ins
out
das
jl
mov
pushf
(bad)
das
repz
stos
inc
push
scas
repnz
ins
test
jl
jle
imul
movs
std
mov
or
ds
push
or
cwde
cmc
data16
jne
xor
neg
scas
mov
add
xor
push
sbb
adc
fs
shl
mov
and
(bad)
sbb
xor
push
mov
push
gs
popf
leave
xchg
outs
inc
repz
jo
popf
cdq
cwde
inc
lock
push
jb
push
sbb
or
jne
mov
outs
sbb
cmp
jne
adc
push
xchg
(bad)
cs
pop
shr
int3
lock
scas
xchg
sbb
sub
in
jbe
dec
scas
xor
ret
loopne
mov
test
and
dec
xchg
add
add
dec
xchg
(bad)
dec
cmp
cmps
popf
mov
mov
hlt
pop
in
pop
sub
in
jp
dec
sbb
sub
jecxz
xor
dec
jmp
and
pop
sub
jp
dec
mov
ins
in
xchg
adc
xor
call
push
jg
add
in
inc
aaa
int3
push
popa
(bad)
push
dec
sbb
sub
push
repz
inc
fistp
adc
test
jnp
mov
in
push
es
loop
xchg
and
data16
lahf
(bad)
lock
hlt
xor
dec
repz
mov
and
xchg
adc
inc
jne
imul
cmps
dec
mov
pushf
mov
dec
pop
neg
retf
push
ins
imul
push
adc
mov
repnz
aam
enter
pop
aam
mov
ins
ja
xor
pop
sti
xchg
test
mov
push
pop
fist
lahf
hlt
nop
test
imul
retf
mov
and
and
jge
imul
(bad)
imul
xor
cmp
or
outs
or
jbe
sub
jne
aaa
mov
int3
adc
js
daa
sub
adc
call
jae
imul
inc
pop
xchg
inc
ficom
scas
stc
stos
xchg
dec
jo
inc
outs
pop
mov
dec
ss
popa
ret
fiadd
or
addr16
arpl
or
cwde
adc
xchg
mov
adc
inc
push
mov
jno
jle
or
mov
sub
add
pop
push
rol
pushf
jl
xor
or
test
pop
loopne
sub
cwde
test
mov
inc
fisub
mov
test
sbb
cld
shr
ds
retf
stos
fdivrp
push
jae
push
sub
push
and
mov
lds
mov
retf
adc
jmp
in
cmp
ss
cmp
mov
shl
pop
je
and
dec
push
xchg
mov
enter
imul
mov
fldcw
xchg
enter
cmp
push
dec
sbb
iret
movs
push
push
adc
adc
fdivrp
xchg
mov
adc
inc
sub
pusha
cmp
lods
push
in
push
sahf
out
xor
xor
lahf
pop
or
aas
pop
ds
dec
ja
jmp
dec
push
lds
sub
and
xor
or
jne
mov
add
loop
fwait
mov
pop
jne
jge
jae
popf
xchg
cli
jae
push
cmp
push
push
add
pop
sub
xchg
test
cmp
pop
jbe
test
outs
(bad)
lods
dec
popa
leave
cmc
pop
loop
cmp
cmc
mov
cmp
add
outs
inc
xor
dec
inc
ins
les
les
jo
xchg
and
jb
cmp
jp
inc
mov
jge
std
cmp
sub
mov
inc
ret
inc
loopne
das
mov
scas
data16
inc
dec
sbb
xchg
movs
or
std
mov
pop
cmp
pusha
sti
cmps
dec
iret
dec
mov
jge
dec
cld
mov
or
test
cs
xor
inc
jnp
call
jmp
push
push
bound
cmp
ins
inc
dec
xchg
cwde
jl
bnd
fadd
dec
cmps
xchg
movs
(bad)
cmp
pop
xlat
inc
jne
cwde
scas
push
mov
es
xor
or
(bad)
ds
loopne
mov
or
pop
movaps
pop
and
fwait
adc
out
jb
inc
jecxz
sbb
(bad)
cmp
neg
sub
cmc
push
jl
outs
xlat
and
sbb
sbb
add
push
adc
mov
dec
xchg
jbe
lds
imul
push
xchg
test
std
jns
pop
sub
icebp
call
adc
fisttp
sbb
or
ins
rol
test
scas
and
add
jp
pop
ds
loop
out
ja
loope
mov
fst
fs
cmp
xchg
adc
call
sbb
scas
xor
int3
loop
fisttp
es
aas
or
imul
mov
loopne
sub
mov
or
jle
cmp
scas
pop
jne
jns
jns
out
fdiv
inc
mov
gs
test
sbb
sub
mov
ins
push
and
sbb
dec
in
dec
mov
pushf
out
mov
(bad)
or
(bad)
movs
dec
sub
xchg
dec
xchg
inc
inc
push
enter
lock
jle
outs
mov
leave
jnp
cs
and
adc
jno
mov
mov
test
fdivr
js
sar
pop
call
das
cmp
adc
nop
mov
sbb
adc
test
mov
jno
add
in
imul
out
loop
sub
ins
xchg
aad
loope
push
js
xchg
bound
sub
jl
aam
jp
loopne
push
xchg
aaa
idiv
es
sti
ss
out
es
jae
mov
sbb
(bad)
ins
add
movs
mov
push
mov
dec
fnstsw
outs
jmp
test
cmp
and
fdiv
pop
pop
and
push
push
sbb
pushf
jg
pop
mov
cmp
call
xor
cli
sar
add
push
xor
sbb
jecxz
push
adc
mov
and
add
jl
add
push
jbe
mov
adc
push
loop
sbb
fmul
inc
add
or
pop
js
div
jo
cmp
mov
cs
retf
(bad)
xlat
lea
cmp
jbe
push
and
dec
mov
call
aas
lods
fwait
sbb
loopne
inc
and
inc
dec
into
jno
push
fisttp
or
and
add
pusha
add
push
fwait
cdq
ins
xchg
push
dec
mov
xchg
movs
scas
lds
jne
jo
inc
inc
mov
or
sbb
and
xor
dec
add
ret
xchg
or
or
mov
lds
mov
(bad)
inc
retf
iret
add
pushf
inc
add
mov
xor
lea
outs
push
rcl
fadd
or
daa
aas
push
repnz
jle
xor
jbe
ja
mov
add
sahf
mov
adc
jge
jns
scas
xchg
test
push
dec
xor
loopne
sub
or
outs
fmulp
mov
test
outs
and
ds
jns
outs
mov
sar
sub
mov
xchg
arpl
add
jl
aad
pop
aas
test
sub
add
js
add
push
les
and
inc
xor
mov
pushf
rol
ret
jo
xchg
xchg
(bad)
fldcw
pop
pushf
or
loopne
bound
or
xchg
(bad)
mov
das
sbb
rcl
pop
xor
jnp
mov
or
mov
mov
popf
enter
test
dec
cmp
bound
div
adc
clc
push
out
push
push
iret
add
sbb
es
gs
add
jne
cmps
push
add
jne
(bad)
mov
clc
xchg
push
inc
int
std
ja
mov
movs
inc
std
ds
(bad)
lea
cmove
int3
leave
scas
cmps
adc
add
sbb
sahf
cmps
sub
outs
ret
cmps
mov
jmp
sub
mov
lds
dec
mov
pop
push
mov
cmc
push
hlt
xlat
or
and
addr16
add
mov
jne
mov
mov
test
hlt
pop
nop
mov
repnz
cs
out
cli
push
nop
dec
sbb
inc
imul
call
les
and
cmp
sub
lods
(bad)
push
in
pop
fwait
iret
adc
ret
adc
inc
adc
je
jae
push
cmp
repnz
leave
pop
out
or
cmps
jbe
sbb
adc
test
cli
dec
sub
mov
(bad)
push
pop
leave
outs
stos
cmp
mov
xor
int3
mov
or
add
in
xlat
sub
adc
dec
mov
mov
sub
sub
adc
dec
dec
ss
dec
push
xor
mov
sub
push
adc
push
mov
mov
cwde
cmp
outs
push
ins
mov
jecxz
or
mov
fsubr
scas
(bad)
inc
dec
call
xchg
rcl
inc
dec
imul
call
loope
aad
add
aas
xor
pop
clc
mov
out
dec
xchg
(bad)
xor
xchg
jb
and
dec
sbb
inc
dec
jle
inc
push
pop
icebp
sub
xchg
inc
cmc
cmp
xor
ja
mov
push
add
mov
vpandn
mov
cld
and
inc
mov
xor
push
push
and
arpl
icebp
movs
and
pusha
cmp
sti
mov
mov
mov
pop
lea
in
push
mov
test
sub
cli
dec
xor
adc
xor
xor
jno
pushf
jbe
jne
add
jge
adc
jmp
and
test
jp
push
sbb
loopne
mov
cs
loop
repnz
dec
jecxz
div
test
dec
cmp
and
dec
pop
inc
mov
pop
inc
sub
pop
sbb
jno
popf
and
jae
fdivr
stos
push
mov
rcl
mov
add
aas
sbb
sbb
arpl
dec
and
rcr
add
jge
or
xor
pop
std
sbb
push
pop
cmp
push
fistp
pop
in
mov
scas
outs
jbe
or
jle
mov
aaa
or
lods
jmp
je
in
mov
aaa
jp
(bad)
dec
pop
push
inc
sbb
mov
test
xor
(bad)
nop
push
sub
retf
jae
jmp
outs
repz
pop
iret
jp
jbe
aam
mov
jne
movs
xchg
gs
dec
dec
rcl
jecxz
xchg
mov
jmp
pop
lock
lock
jp
sti
mov
and
dec
outs
sub
mov
sub
outs
aad
xchg
aad
push
sub
add
jp
lahf
imul
mov
push
jle
mov
scas
retf
mov
stc
dec
cmp
push
inc
and
scas
ins
ret
inc
sar
mov
jmp
(bad)
push
int3
pop
das
jne
inc
stos
iret
inc
(bad)
pop
cmc
xor
scas
(bad)
fsubr
daa
mov
inc
imul
cdq
shl
dec
pop
outs
fwait
out
ret
push
data16
push
pop
dec
xchg
or
inc
and
shl
out
cmps
jmp
ins
in
leave
adc
cmps
ins
sub
fst
inc
retf
or
inc
sti
inc
mov
push
add
pop
call
mov
pop
fmul
inc
xchg
add
and
jo
popa
dec
mov
xor
inc
pop
sbb
(bad)
mov
adc
mov
xor
popa
inc
push
pop
inc
mov
cdq
les
out
jb
sub
fiadd
mov
ror
paddsw
int3
adc
mov
stos
push
out
fisttp
rcr
push
or
cmp
imul
xchg
xchg
sub
mov
scas
int
mov
pop
sbb
push
stos
jae
mov
xchg
or
jg
imul
sbb
(bad)
xchg
xchg
jne
pop
arpl
lods
xchg
das
int3
dec
(bad)
into
add
(bad)
out
mov
mov
pop
and
pop
inc
imul
test
mov
or
sub
and
sbb
pop
enter
push
xor
retf
fst
outs
fwait
sti
cdq
ficomp
cmp
shl
cld
push
cmp
sbb
cmc
fild
xor
cmp
push
scas
es
pop
sbb
dec
cmp
mov
cmp
pop
xchg
sub
(bad)
pop
mov
mov
ins
ss
inc
outs
repnz
je
ror
or
jl
jbe
stc
and
push
jmp
dec
xchg
add
jne
dec
lea
xor
dec
sti
addr16
stos
mov
imul
cdq
repnz
sbb
(bad)
xchg
sahf
loopne
sub
pop
sub
xchg
dec
out
adc
je
jl
shl
add
retf
fstp
adc
push
sub
bound
int
cmp
call
cs
mov
aas
jnp
pop
xchg
mov
sbb
(bad)
fs
test
inc
pop
imul
gs
mov
mov
inc
jne
jge
ret
xor
aaa
pop
imul
movs
scas
clc
adc
ins
and
inc
mov
xchg
out
mov
fbstp
sub
rol
mov
scas
aas
inc
jno
loop
xchg
cmp
imul
add
or
stos
into
dec
test
adc
dec
sub
mov
push
leave
and
scas
hlt
test
jnp
ds
xchg
lods
and
push
sbb
nop
xchg
cld
cmp
jl
add
js
mov
cwde
or
cld
repz
sahf
sub
mov
(bad)
push
cmp
outs
dec
ja
ja
sub
mov
cmp
sbb
push
js
xor
pop
outs
fs
scas
pop
test
xor
xchg
mov
(bad)
pop
lods
int3
pop
dec
int3
jno
jg
in
lock
jg
aas
inc
cld
ror
add
out
mov
pop
xor
or
inc
in
jl
push
cmps
cld
sub
xchg
push
mov
(bad)
leave
ds
adc
cmps
mov
jg
rcl
pusha
in
arpl
mov
aaa
call
cmp
sbb
pop
dec
or
pushf
int3
push
cmps
icebp
sbb
(bad)
sub
jecxz
add
sub
pop
loop
ja
in
mov
add
xchg
leave
mov
or
shl
push
sbb
push
dec
mov
push
or
hlt
mov
cmps
mov
retf
rol
sbb
outs
data16
jae
es
sti
push
les
cmp
aam
lea
sbb
or
dec
jmp
es
dec
inc
into
xor
push
mov
cs
repnz
pop
jmp
sbb
test
fwait
cmp
or
xor
cmps
mov
and
pop
ja
in
je
outs
sbb
mov
ins
mov
or
and
bound
out
dec
inc
ret
addr16
ins
fisub
cmp
js
or
rol
push
xor
jo
mov
fcomp
imul
sub
xchg
outs
fidiv
(bad)
repz
aaa
sbb
cmovl
inc
fsubp
call
push
dec
dec
cmp
cwde
(bad)
or
int
out
push
mov
xor
mov
jb
movs
inc
sub
push
sbb
ja
or
das
(bad)
sbb
cmp
adc
inc
mov
jge
xor
inc
add
inc
sub
xchg
call
dec
popf
je
pop
push
out
xchg
cmps
ins
test
imul
scas
or
sub
or
fcom
xor
xor
inc
and
shr
mov
xchg
xchg
dec
mov
imul
adc
out
pop
or
fidiv
std
inc
pop
(bad)
(bad)
aaa
int3
mov
pop
(bad)
and
xor
push
push
outs
call
cld
inc
jb
mov
(bad)
xor
jo
push
jp
in
jo
dec
jl
cmp
int
adc
adc
dec
jmp
sub
push
ss
or
push
or
in
popf
adc
(bad)
out
add
jp
add
ins
sbb
jae
adc
xchg
dec
hlt
pop
(bad)
cmp
adc
lods
jns
add
or
sub
fimul
outs
jnp
mov
in
xchg
test
retf
push
imul
fwait
jne
pop
sbb
xor
shl
aaa
outs
out
mov
popf
sub
pop
add
and
push
push
out
jmp
dec
xchg
push
shl
sub
or
jl
xchg
outs
dec
jb
sub
push
jne
or
cmp
test
daa
ins
adc
nop
mov
and
jnp
loope
les
inc
(bad)
xor
in
icebp
push
mov
sbb
or
jecxz
xchg
xchg
mov
push
sbb
xor
push
repnz
cmc
das
xchg
xchg
xor
mul
mov
test
inc
cmp
jp
stos
pop
push
pop
ret
xchg
push
pushf
push
les
icebp
sub
sahf
push
cwde
add
mov
enter
push
cdq
mov
outs
jne
pop
idiv
mov
sub
addr16
sbb
into
mov
push
add
push
xor
xor
pop
add
cwde
jl
addr16
jno
test
mov
out
cmp
pop
dec
push
test
lock
inc
out
sub
aaa
push
je
rol
pop
in
dec
push
jb
mov
jo
ret
xor
retf
fild
jmp
add
dec
icebp
sbb
arpl
jne
jmp
push
xor
xchg
cmps
mov
inc
nop
je
push
pop
push
mov
mov
sub
lock
aaa
nop
mov
add
xchg
imul
pop
pop
ins
stos
outs
pop
rcr
add
cs
jbe
retf
push
lods
dec
popf
cmp
jbe
cmp
in
jae
sti
mov
test
(bad)
push
jns
dec
mov
call
ja
clc
ret
test
cmp
das
ja
into
mov
pop
sbb
adc
mov
iret
data16
hlt
dec
or
sbb
xchg
pop
dec
pand
call
(bad)
jmp
scas
push
cmc
jp
sbb
inc
nop
outs
fcomp
cmp
outs
mov
pop
push
fsub
jae
test
mov
mov
arpl
pop
aam
sub
sbb
or
jle
neg
aas
sbb
in
mov
lods
cmp
popa
sbb
mov
rcl
test
lds
xchg
movs
ss
test
arpl
fistp
bound
dec
sub
dec
fist
push
sbb
add
cmp
xchg
mov
(bad)
sti
pusha
inc
loopne
cmp
mov
xchg
test
jp
rol
jl
fldenv
jne
or
faddp
aas
ds
sbb
jle
fldcw
sub
cmp
fs
outs
xchg
mov
loopne
scas
test
mov
xchg
mov
pop
and
jo
xor
pop
pop
ins
(bad)
stc
pop
into
inc
std
sub
push
add
shl
fisttp
adc
mov
daa
xchg
inc
inc
xlat
push
jl
mov
out
cli
test
test
push
mov
cmp
or
pop
xchg
in
lahf
aaa
pop
or
mov
push
cmp
imul
mov
add
call
mov
sub
mov
push
inc
iret
sbb
ret
jle
fidivr
pusha
stc
add
or
frstor
push
sub
inc
call
in
test
xchg
mov
sbb
pop
into
jnp
out
in
mov
cmp
mov
xor
ds
sar
sahf
mov
ss
and
push
cmp
or
call
dec
mov
les
inc
or
push
adc
sub
jnp
sub
cs
lds
jp
dec
in
inc
cwde
mov
popa
out
dec
xor
xchg
mov
(bad)
shl
movs
jne
(bad)
fcom
scas
mov
add
push
xor
outs
movs
fnstenv
das
or
inc
and
adc
add
mov
xor
mov
or
xchg
sbb
imul
jmp
mov
pop
in
cmp
sbb
push
push
stos
mov
mov
push
sbb
xchg
mov
ins
not
mov
or
pop
ja
push
repnz
or
or
mov
adc
add
xchg
cmp
cmc
jp
arpl
(bad)
das
lahf
leave
inc
cmp
mov
aas
xor
bound
loop
test
jmp
ret
jae
addr16
jnp
test
arpl
outs
cmp
test
jle
(bad)
and
xchg
xchg
xchg
jo
sub
push
aas
sbb
mov
and
push
jns
int
mov
pop
jne
or
adc
sahf
push
jo
sti
push
(bad)
push
mov
and
pushf
cmp
jmp
imul
dec
dec
cli
push
jl
ret
fdiv
and
imul
xchg
jo
aas
adc
movs
es
lock
sub
mov
mov
pop
int3
js
jg
lahf
int3
rep
xchg
and
dec
push
inc
movs
shl
push
dec
out
shl
sub
or
pop
icebp
dec
cdq
cwde
pop
xchg
xchg
dec
xlat
jae
(bad)
xor
movs
adc
dec
xor
jl
stos
push
popa
sub
scas
inc
rol
sub
sub
adc
inc
scas
imul
test
(bad)
sub
mov
mov
sbb
pop
lock
icebp
cmc
jnp
or
pop
arpl
jg
(bad)
(bad)
xor
dec
inc
mov
xor
and
jle
dec
pushf
cli
jo
or
lds
mov
jp
inc
into
fdiv
mov
mov
sar
in
dec
sbb
jne
xor
mov
inc
std
sub
cmp
adc
sbb
push
push
cmp
mov
xchg
push
ins
cld
dec
jae
xchg
xchg
(bad)
fld
cmp
cld
add
data16
and
pop
aaa
inc
std
aam
adc
adc
cmps
mov
or
pop
mov
xor
sub
mov
adc
movs
push
dec
adc
gs
hlt
or
lods
inc
pop
sbb
inc
aaa
cmc
shr
push
xchg
dec
cwde
adc
jne
ja
cdq
inc
xchg
clc
dec
pop
ret
push
sub
mov
xchg
jb
pushf
add
jo
out
out
dec
mov
push
outs
scas
xchg
mov
add
ret
cwde
and
xor
dec
dec
inc
cmp
sub
xchg
sahf
and
jno
ret
mov
and
cmp
jbe
(bad)
out
mov
sub
into
cmp
push
pushf
data16
jae
dec
call
(bad)
dec
push
dec
mov
test
movs
mov
loope
fisub
mov
cmp
jg
adc
xchg
xchg
das
sub
popa
fdivr
xchg
cs
jb
mov
in
push
mov
or
int
xor
mov
cmp
mov
into
pusha
imul
hlt
imul
sub
or
xchg
outs
sti
popa
aaa
pop
inc
outs
cmps
scas
and
push
pop
jbe
in
xchg
mov
ins
pop
retf
push
fldenv
bound
je
xchg
cdq
push
adc
(bad)
shr
pop
inc
and
jns
imul
cli
sub
jmp
std
mov
sbb
pop
cmp
fidiv
cmp
xor
imul
push
mov
imul
add
xchg
or
fst
scas
addr16
mov
or
inc
push
pop
xchg
shr
or
mov
or
adc
ins
test
jno
imul
inc
mov
cld
test
push
aas
std
add
mov
je
outs
push
cmp
add
outs
jmp
jae
mov
lds
cmp
mov
xchg
jle
mov
pushf
mov
clc
test
out
jnp
mov
mov
cmc
xor
inc
popf
xchg
movs
ss
jecxz
fwait
mov
push
push
outs
inc
push
or
mov
mov
mov
add
fsub
cmp
xchg
sbb
fadd
sbb
(bad)
lock
test
inc
aas
fisub
pop
int
xor
pop
ret
cmp
addr16
fs
movs
jae
jmp
pop
mov
lea
movs
push
js
push
iret
jbe
lahf
lds
jne
push
pop
in
fwait
push
cs
cs
std
mov
jnp
pop
xor
add
lahf
dec
clc
jle
clc
or
in
repz
(bad)
(bad)
dec
sub
sti
pusha
cmp
bound
stos
xor
in
test
jl
sbb
js
pop
jae
dec
movs
jo
ds
jae
mov
adc
xor
xor
jg
out
xlat
push
push
mov
xor
jge
xor
lea
push
jl
out
lea
add
imul
mov
mov
jecxz
es
lds
jb
stos
js
cmp
pop
cmp
dec
jbe
cli
ds
sbb
mov
push
out
and
pop
dec
or
mov
xor
sub
les
inc
mov
std
sub
inc
fist
xchg
out
lock
bound
fs
mov
and
cld
xchg
aas
sbb
js
or
pop
fwait
sar
inc
repnz
or
xchg
pop
or
fcom
dec
call
mov
push
loope
adc
inc
mov
adc
test
cli
inc
jno
push
xor
movs
in
test
mov
fbld
pop
in
(bad)
mov
add
in
sub
xor
xor
dec
mov
or
ins
outs
xor
lea
dec
mov
pop
xchg
gs
sbb
mov
sbb
int3
jno
dec
loope
push
sub
cmc
push
int
call
ja
je
stc
xor
jp
add
or
jge
neg
fdiv
loope
lea
int3
jne
out
outs
std
pop
inc
xchg
clc
test
xor
sti
out
or
push
dec
packuswb
xor
and
and
lea
push
ret
test
xchg
cwde
pop
enter
sbb
lea
out
inc
cs
ins
xor
fiadd
sbb
sahf
push
fdiv
call
jbe
stc
sbb
jge
jp
xchg
jg
shl
sbb
out
test
das
pop
loopne
fiadd
sahf
int3
mov
mov
pop
inc
je
pop
std
leave
lahf
dec
sbb
pop
sub
rcl
test
pop
jb
cmp
xor
add
mov
mov
push
loopne
dec
xchg
imul
and
std
scas
ins
dec
(bad)
adc
dec
dec
ins
aad
pop
sub
xor
and
and
pop
int3
xor
and
dec
test
pop
int3
arpl
sahf
lods
test
mov
inc
out
int3
push
(bad)
out
sti
jb
pop
sub
xchg
jecxz
sub
or
retf
test
xor
and
fcom
in
cwde
dec
or
je
sar
or
je
shl
and
fist
pop
mov
push
or
and
dec
jo
fwait
lahf
cmp
sub
movs
fldcw
push
push
jp
iret
sub
or
cmp
cmp
add
xchg
xchg
mov
ss
and
pop
push
mov
sub
and
cld
out
mov
fadd
xor
rcr
adc
shl
xor
cdq
dec
not
and
and
cmp
xchg
xor
add
cmp
jno
cmp
js
loope
cmps
sbb
pop
test
push
pop
cwde
shl
bound
push
mov
adc
xor
enter
adc
das
add
push
pop
pushf
mov
enter
jno
mov
mov
(bad)
mov
add
nop
pop
das
sub
inc
dec
shr
ja
inc
daa
or
xor
push
cmc
adc
outs
outs
fs
jns
shr
loopne
push
ins
call
dec
pop
push
pushf
dec
frstor
mov
sbb
xchg
lods
daa
adc
cmc
shl
pop
and
sbb
push
aad
mov
sub
dec
enter
movs
add
mov
retf
test
outs
mov
out
ret
inc
mov
adc
cmp
inc
pusha
dec
add
jl
xchg
mov
aam
sub
jmp
xor
mov
add
call
push
add
and
push
adc
dec
shl
(bad)
jo
xchg
jp
xor
repz
mov
push
rcl
adc
iret
pop
dec
inc
cli
outs
inc
sbb
push
aas
push
imul
cmp
cld
xchg
inc
fcomip
jo
out
cmp
dec
mov
mov
movs
mov
hlt
jne
pop
jne
fst
pop
pop
or
rcl
inc
in
mov
pop
cmp
cmp
out
sar
not
jecxz
push
popf
xor
out
add
test
adc
mov
or
cli
jg
cmc
bound
in
push
inc
push
pop
mov
pop
xchg
inc
scas
inc
std
sbb
push
imul
mov
xchg
xchg
mov
xchg
pop
sbb
pop
loopne
jg
repnz
xor
add
pop
ja
dec
xchg
sub
out
stos
add
sub
jp
mov
movs
out
mov
push
xchg
fs
repz
sahf
add
rcl
adc
test
rcr
in
jg
ins
in
aad
or
ins
mov
scas
les
dec
dec
jne
mov
xchg
fcom
add
jae
jb
lods
sahf
xchg
mov
or
pop
std
sub
(bad)
lods
popa
mov
cs
sub
xchg
mov
xor
cli
ss
inc
and
jge
push
and
adc
cmc
data16
pop
cmps
bound
and
dec
and
pop
jecxz
pop
xor
mov
je
pop
call
repnz
pop
jns
push
adc
mov
loop
xchg
mov
inc
inc
retf
and
hlt
imul
add
jae
lods
ror
sub
retf
fwait
mov
pop
sub
add
dec
test
test
jl
test
xlat
loop
loopne
sub
out
adc
adc
dec
scas
pushw
cmc
pop
out
jbe
xor
jno
dec
xchg
push
in
and
inc
xor
inc
sbb
xor
dec
mov
fdiv
mov
push
stc
inc
dec
mov
test
adc
gs
mov
mov
push
outs
inc
pop
pop
add
cli
pop
cli
dec
movs
hlt
pop
sti
fwait
mov
(bad)
in
fs
add
outs
adc
outs
fs
leave
inc
push
icebp
scas
push
push
fadd
and
dec
mov
fstp
pushf
mov
inc
retf
dec
xchg
les
inc
dec
ret
push
inc
mov
in
xor
movlps
sub
hlt
mov
cmp
sbb
mov
or
pop
pop
sbb
add
sahf
popf
push
int
fcomp
and
ret
in
inc
jns
mov
sub
fcomp
sbb
xlat
pusha
push
or
pusha
in
adc
inc
lea
(bad)
imul
inc
test
adc
cmp
mov
cmps
lahf
clc
push
xchg
sar
or
pop
push
mov
mov
dec
imul
lahf
add
cmp
ss
shr
and
add
cmp
dec
lahf
cli
and
scas
mov
loope
loopne
xor
add
(bad)
sbb
int
popa
inc
lods
inc
and
mov
cs
ja
sbb
inc
mov
push
push
ss
xchg
jne
loope
arpl
fwait
mov
xchg
icebp
push
mov
fst
in
stc
lock
stos
push
push
inc
inc
sbb
cmp
das
and
movs
sub
sbb
adc
push
in
push
aam
mov
push
mov
in
mov
sbb
lea
rol
dec
sti
or
cmc
sub
scas
pop
loope
fstp
hlt
jp
or
ret
ja
adc
jnp
push
adc
movs
xor
xor
sti
enter
and
data16
rep
(bad)
xor
ss
lods
(bad)
scas
or
icebp
mov
sbb
add
ins
adc
add
shl
mov
cmp
cli
js
int3
inc
popa
outs
div
pop
int
dec
loop
xchg
adc
jl
adc
push
lahf
cmp
ja
mov
fnstenv
loopne
mov
test
daa
sti
xchg
push
pop
sar
pop
jb
fld
pop
xor
js
ret
xchg
adc
and
aad
cmps
mov
aaa
adc
ja
in
in
dec
lahf
test
clc
ins
lea
repnz
xchg
adc
lock
aaa
ret
ss
mov
push
xlat
or
add
inc
nop
add
pop
push
dec
jnp
mov
ins
dec
sti
dec
sub
cwde
fwait
mov
mov
cs
popf
and
jns
cdq
sti
mov
jle
aas
pusha
cmps
rcr
push
pop
cmp
inc
in
aam
mov
adc
or
jno
mov
jmp
nop
mov
into
jge
mov
inc
pop
xchg
jno
in
outs
sbb
push
pusha
push
clc
test
hlt
xor
xlat
sub
and
cmp
gs
cmp
imul
(bad)
inc
mov
inc
fs
mov
mov
cmp
mov
pop
mov
js
xchg
mov
test
addr16
and
xor
movhps
outs
out
movs
movs
xchg
sbb
sbb
pop
xchg
mov
call
xchg
hlt
mov
mov
xchg
dec
add
(bad)
push
push
inc
pop
and
mov
add
int3
inc
int3
addr16
jp
push
inc
inc
xor
mov
cwde
mov
lahf
lock
test
into
sub
aam
bound
fs
(bad)
fmul
push
arpl
mov
inc
sub
xor
dec
and
fwait
or
mov
loop
adc
arpl
fst
adc
push
cmp
push
pop
retf
xor
adc
sub
dec
mov
push
or
xchg
push
inc
mov
cmp
dec
(bad)
wbinvd
sbb
xor
in
(bad)
and
adc
push
imul
ja
add
adc
nop
mov
scas
inc
mov
out
inc
sbb
lods
push
and
out
dec
in
pusha
arpl
jle
pop
fstp
and
pop
into
pop
cwde
ja
sbb
stos
shl
xchg
int
je
outs
push
push
in
xlat
sub
ret
mov
aas
jge
jo
jl
retf
add
adc
add
mov
imul
pop
and
in
and
pop
xchg
shl
not
test
pop
sbb
xchg
pop
inc
out
popa
gs
ds
dec
shr
pop
les
add
jbe
inc
mov
jno
inc
jmp
std
push
push
bound
loopne
sub
xor
sbb
dec
sbb
test
fwait
cmp
dec
and
pop
or
test
mov
call
dec
sbb
add
clc
or
test
outs
fisubr
sbb
cmp
aaa
push
push
mov
push
inc
mov
adc
dec
sub
mov
mov
call
mov
xor
jb
sbb
pop
sbb
add
cmp
pop
add
pop
inc
pop
mov
out
in
std
jg
jne
in
adc
jge
push
(bad)
popa
dec
cmc
adc
ror
mov
pop
aam
push
ss
mov
dec
in
and
ins
inc
jbe
mov
cmps
std
adc
int
or
fwait
lods
cwde
test
arpl
dec
sahf
mov
inc
popa
add
or
cmp
outs
xlat
fst
lea
sub
je
ins
in
inc
lock
(bad)
shl
mov
push
int3
imul
lods
mov
jb
xchg
sbb
jp
jo
mov
pop
pop
scas
jbe
aas
in
push
cld
ja
or
add
cmp
or
leave
aas
ret
inc
mov
cmovp
add
lahf
pop
imul
mov
mov
xchg
adc
stos
xchg
mov
push
dec
cmps
cmps
(bad)
pushf
adc
push
pop
ins
daa
pop
cmp
ret
pop
mov
push
sti
sbb
mov
jp
pop
rcr
test
add
aas
cmp
(bad)
jae
and
jg
cmp
mov
sbb
cdq
push
mov
data16
xchg
scas
test
sbb
adc
pop
jne
out
xchg
dec
lahf
adc
ja
adc
loope
xor
or
sbb
mov
push
adc
js
dec
mov
sar
xchg
sub
jmp
xchg
sbb
cmp
outs
or
push
push
test
jnp
hlt
xchg
ror
sbb
add
jno
rcr
loope
dec
pop
gs
cld
mov
jl
jno
sub
jecxz
test
dec
retf
jne
out
jmp
inc
or
adc
xchg
lea
and
lahf
mov
adc
jg
push
test
mov
adc
aam
add
(bad)
sbb
push
arpl
inc
push
shl
jb
push
and
arpl
cmp
push
push
mov
and
push
and
lods
mov
rol
aas
(bad)
mov
inc
int
into
jo
jmp
call
push
adc
xor
dec
stos
fcmovnbe
movs
(bad)
sub
pop
sub
ss
jae
movs
and
dec
xor
xchg
out
xchg
dec
rol
ins
cmps
lds
xchg
inc
adc
lds
(bad)
sub
xor
mov
cmp
push
sbb
xchg
jo
and
mov
gs
add
xchg
enter
and
mov
lods
jp
(bad)
out
xchg
sub
adc
add
aam
push
cmp
dec
outs
(bad)
fild
pop
push
xor
xor
scas
les
hlt
cmp
pop
repnz
sub
out
inc
push
and
jo
dec
test
cmp
sti
(bad)
outs
rcr
cmp
and
scas
jle
sbb
js
bound
or
xor
xchg
mov
mov
callw
fwait
in
fs
aaa
pop
inc
push
xor
icebp
mov
sub
stos
and
push
and
add
pop
xchg
movs
ins
fist
sar
jbe
aaa
rcl
test
nop
inc
dec
iret
jbe
dec
fild
adc
clc
or
sub
sbb
ja
xor
inc
xor
or
pop
xchg
push
enter
mov
movs
nop
mov
xchg
inc
jns
jge
sub
mov
mov
push
xor
push
push
and
sub
std
mov
sub
xor
jne
xchg
jl
mov
fistp
push
or
sbb
fcom
cmp
push
inc
ret
outs
dec
int
mov
pushf
pop
xor
bound
push
call
xchg
mov
aad
ja
push
cli
jno
mov
dec
jo
inc
sbb
nop
xchg
cmp
ss
adc
ror
and
adc
adc
test
ja
imul
enter
xor
(bad)
dec
or
(bad)
outs
xor
ins
push
inc
ret
ds
cmp
test
jecxz
aam
shr
sub
setae
adc
addr16
outs
fwait
test
rcl
out
lahf
mov
rcl
lock
popa
xchg
jmp
push
mov
add
jae
test
fst
pop
mov
dec
inc
add
arpl
dec
pop
jno
loopne
sti
jns
les
mov
(bad)
push
loopne
adc
push
sbb
push
xor
push
je
in
xor
sub
test
adc
add
or
dec
fwait
and
mov
arpl
push
or
movs
xchg
mov
mov
jp
jg
mov
or
push
outs
sbb
repz
push
adc
mov
sbb
cmp
rcr
xchg
mov
ffree
sbb
in
jg
cs
jnp
into
adc
dec
pop
sbb
pushf
or
jae
ds
cmp
jle
xor
jnp
sub
cld
dec
add
sub
mov
sbb
push
out
push
out
retf
test
or
xor
shr
dec
inc
mov
dec
pop
add
push
and
mov
fistp
mov
out
mov
mov
pop
xchg
(bad)
push
inc
fld
sbb
cwde
jb
bound
adc
mov
pop
push
data16
push
adc
sub
mov
cmps
ror
xchg
push
pop
cld
jp
dec
push
xchg
ret
xchg
xor
dec
and
(bad)
loope
or
cs
push
mov
imul
sbb
pop
add
dec
cmp
arpl
inc
sub
mov
xor
leave
sbb
(bad)
popa
sbb
push
dec
fdiv
pop
shl
xor
cmp
push
push
imul
ja
arpl
pop
xchg
mov
mov
cmp
jg
pop
jno
enter
push
jle
aaa
push
jbe
sar
dec
out
fwait
mov
adc
pop
das
push
call
pop
xchg
mov
fs
mov
mov
xor
dec
push
fstp
inc
std
inc
dec
sub
xor
test
out
sbb
js
mov
imul
jae
mov
mov
push
aas
imul
and
xchg
jae
les
hlt
push
pop
mov
xor
add
popa
loopne
mov
xor
or
(bad)
mov
pop
adc
inc
cmp
lods
dec
fisttp
mov
ins
mov
mov
pop
add
lods
inc
cs
dec
sub
lods
inc
cmp
(bad)
outs
fild
retf
push
loope
or
adc
mov
ret
hlt
dec
jns
jb
push
and
test
data16
jle
inc
push
sbb
jns
sbb
out
sub
pop
(bad)
shl
sub
pop
sub
mov
xchg
ret
stc
jg
push
fwait
sbb
fidiv
inc
aas
mov
pusha
repz
inc
cs
movs
dec
fst
or
and
mov
or
mov
lock
pop
fiadd
pop
lods
sahf
mov
mov
push
test
(bad)
jb
sub
sahf
loopne
xor
cmps
xchg
mov
jge
pusha
inc
jb
loop
out
or
xor
cli
pop
mov
stc
cmc
xor
rcr
cmp
fs
push
inc
test
jns
(bad)
test
cli
inc
cli
xor
push
mov
add
inc
push
stos
mov
xchg
in
inc
push
ret
and
in
stos
add
pop
out
inc
pop
nop
test
xor
imul
or
push
mov
xor
xor
dec
and
pop
or
scas
fdiv
std
ja
jl
mov
or
add
rol
and
jnp
(bad)
push
gs
lds
sub
inc
mov
jl
dec
loopne
jg
shr
(bad)
xor
mov
xchg
cmp
xor
(bad)
mov
sbb
jbe
sub
aaa
xor
in
leave
lods
sub
pop
outs
bound
push
sub
lea
iret
dec
nop
cwde
sub
inc
cmc
retf
call
add
jns
fist
dec
inc
int3
pusha
push
shl
jb
jno
or
jl
sbb
sbb
and
jo
scas
sub
mov
mov
and
test
sbb
imul
sub
fs
ins
dec
cmps
call
aas
or
mov
arpl
and
push
cmp
jae
loop
repnz
(bad)
clc
adc
std
sbb
xor
rcr
mov
dec
into
jno
cmp
fwait
dec
iret
xor
push
repnz
es
jne
cmp
dec
retf
fs
push
jnp
movs
mov
jno
imul
mov
cdq
mov
shl
fs
cdq
test
lock
or
outs
sbb
cmc
aam
add
sti
or
add
pop
mov
(bad)
cld
jns
xchg
sbb
sar
add
adc
lods
push
push
das
(bad)
(bad)
adc
loopne
add
pop
sti
adc
or
or
dec
push
pop
sbb
into
xor
xchg
mov
nop
xchg
jo
std
jge
jg
loop
sti
jo
dec
sub
pop
scas
xchg
mov
sbb
sar
inc
xor
pusha
lahf
mov
(bad)
sub
fs
lds
fiadd
jg
test
es
mov
adc
push
xchg
cmp
jae
pusha
dec
ja
cmp
inc
pop
retf
jns
movs
lods
fisttp
jns
(bad)
or
fs
or
inc
xchg
pop
push
push
cmp
push
or
(bad)
mov
cmp
sub
push
adc
test
in
xchg
dec
xlat
(bad)
adc
(bad)
inc
adc
mov
out
jo
pop
icebp
jne
and
cmps
or
in
pop
sub
and
pop
push
cmp
les
jecxz
jp
addr16
popa
sahf
pushf
(bad)
sahf
and
hlt
jne
inc
push
pushf
(bad)
mov
cs
xor
(bad)
adc
div
stos
fild
sbb
pop
daa
jae
mov
out
push
(bad)
cli
sub
enter
lea
test
and
pop
cmp
fidiv
cmp
mov
jmp
fld
mov
dec
push
push
movs
mov
(bad)
jae
jecxz
add
mov
js
loope
leave
addr16
aam
push
adc
pop
dec
jae
mov
xor
add
cdq
push
js
sbb
je
or
js
nop
sub
dec
movs
jecxz
out
imul
mov
jp
add
jge
not
imul
(bad)
outs
fbld
jmp
or
pop
fist
test
fistp
sub
cwde
jnp
fiadd
div
outs
out
lods
aad
stos
and
js
jno
test
adc
imul
test
xor
dec
push
inc
icebp
cmps
mov
mov
xor
inc
push
adc
rol
push
dec
sbb
loopne
addr16
call
je
xlat
dec
inc
or
pop
out
sub
stc
daa
lds
imul
xchg
jb
in
imul
nop
loop
mov
and
js
sub
xchg
lds
inc
inc
or
mov
xor
(bad)
cli
test
mov
xor
jl
sbb
xchg
mov
loop
inc
cmp
xchg
pop
ds
inc
sub
jo
ds
ja
cmp
mov
cs
aaa
adc
pop
enter
pop
dec
xchg
scas
push
mov
jl
mov
xchg
nop
aam
rcr
xchg
pop
inc
sar
imul
repz
popa
lods
adc
jns
push
inc
test
fsubr
sbb
dec
push
ins
(bad)
cli
test
and
dec
movs
cwde
jae
jo
aad
sti
hlt
je
push
repz
test
pop
dec
daa
(bad)
jo
stc
dec
pop
jne
push
jns
sti
lahf
inc
shl
cmp
fdivr
fist
or
jg
xor
inc
ret
pop
adc
mov
popf
test
jbe
pop
fidivr
hlt
cmps
aaa
mov
outs
pop
cld
ror
ds
enter
and
adc
pop
sub
test
fild
lea
(bad)
adc
mov
inc
and
inc
pop
aas
fdiv
sbb
call
cmp
pop
cmps
fs
ss
and
icebp
push
push
fdivr
and
stc
sub
or
jp
mov
xor
pop
jno
push
movs
(bad)
(bad)
inc
sti
sti
lods
mov
aas
push
cmp
jle
inc
push
push
sti
loopne
hlt
pop
mov
or
into
cld
aaa
loop
pop
sar
sub
push
fs
mov
les
repnz
pop
shl
add
jmp
push
test
xor
outs
mov
pslld
fst
cwde
in
fwait
dec
mov
cmp
sub
and
addr16
(bad)
sti
adc
add
jb
push
movs
mov
cli
or
call
push
lods
mov
aas
std
mov
jno
push
sub
dec
jns
leave
push
dec
es
mov
cmp
or
or
adc
jge
pop
mov
jge
out
xor
and
icebp
sbb
fild
jge
adc
add
xor
pushf
xchg
fisttp
pusha
xor
or
icebp
mov
lea
pusha
push
or
sbb
dec
sahf
mov
int
test
rcl
shl
fs
jno
push
call
mov
add
iret
adc
outs
inc
dec
cmps
nop
sub
call
pop
in
lea
repnz
pop
pop
out
jnp
jns
mov
adc
pop
adc
mov
jnp
xor
data16
mov
jl
pop
sbb
inc
pop
xor
mov
loope
nop
cwde
push
sahf
sub
sar
lea
jb
ror
lds
ficom
push
lods
bound
or
hlt
jg
push
sti
les
push
or
xor
add
popa
sub
dec
push
mov
dec
jp
push
sbb
mov
leave
xor
or
jp
adc
addr16
cs
imul
and
loop
mov
adc
sbb
sbb
iret
pop
mov
cmp
fnsave
jge
xlat
jb
pmulhw
or
outs
sbb
xor
or
(bad)
aam
lds
and
lea
xchg
or
mov
push
jl
xor
mov
mov
or
js
cwde
shl
jne
sbb
jl
sahf
test
and
rcr
lea
pop
es
or
push
cmps
in
mov
dec
add
sbb
retf
(bad)
fwait
adc
adc
sbb
imul
cmps
jnp
inc
(bad)
jmp
push
sub
dec
leave
and
arpl
mov
mov
lds
push
mov
fisub
repnz
and
jg
mov
sub
push
inc
adc
retf
and
pop
sub
fld
pop
cmp
jne
jl
adc
mov
mov
mov
aaa
mov
mov
mov
cmp
sbb
inc
push
in
inc
cmp
icebp
mov
push
sub
add
pop
js
push
movs
test
ins
inc
mov
test
mov
retf
mov
icebp
push
mov
arpl
sbb
lock
inc
out
test
pop
push
bound
es
dec
ror
add
mov
leave
xor
xchg
jno
lea
adc
jne
dec
xlat
xor
test
pop
(bad)
add
adc
fist
gs
pop
push
aaa
xchg
(bad)
inc
mov
xor
mov
cdq
fsubr
test
iret
pop
aad
dec
xchg
xchg
xchg
push
push
stos
or
push
xor
jp
fist
aas
and
imul
sbb
mov
lods
ss
loope
mov
and
cmc
mov
jle
sbb
xchg
pusha
outs
push
mov
jge
ficom
aas
mov
enter
out
ds
mov
arpl
dec
ds
sbb
aad
ins
xchg
dec
retf
pop
sub
shl
jg
jae
mov
push
dec
or
fadd
ds
sub
inc
add
lahf
xchg
pop
(bad)
push
movs
loopne
mov
sti
(bad)
push
in
push
ss
ins
adc
adc
inc
jno
loopne
jbe
aaa
xchg
das
in
sub
pop
fadd
jg
or
ja
push
test
xorps
cmp
jno
lods
mov
mov
inc
inc
retf
push
push
pop
jo
dec
push
mov
add
sub
lea
sub
daa
add
push
(bad)
inc
mov
sub
pop
enter
lds
add
movs
xor
dec
cmp
jb
outs
scas
xor
push
out
ret
inc
mov
ror
mov
or
test
pop
loopne
or
xchg
mov
ror
xchg
dec
loope
and
ss
ins
adc
mov
ficom
ja
ret
mov
xor
inc
or
jmp
and
xor
stos
gs
cmp
in
add
sbb
dec
and
test
or
adc
xor
dec
imul
hlt
gs
js
js
sti
lahf
mov
rcr
jae
push
push
mov
ja
xor
push
gs
sub
jmp
lods
mov
sub
sub
pop
cmp
pop
test
jnp
push
xchg
shr
mov
xchg
sub
xchg
sbb
lock
push
add
jp
fs
jo
xor
lods
inc
test
lock
or
mov
jae
add
jae
jecxz
dec
test
dec
je
jae
pop
call
repnz
or
xchg
mov
aas
adc
cmp
iret
test
and
ret
mov
pop
sub
pop
add
adc
mov
das
test
jmp
scas
movs
and
cmp
push
adc
aam
jbe
sahf
stos
dec
cld
je
cmp
pop
push
adc
adc
or
dec
mov
push
xor
and
dec
ret
mov
icebp
jo
inc
add
sub
pop
xchg
cmp
push
inc
sub
sar
dec
adc
(bad)
push
loope
mov
pop
scas
lea
add
xchg
jp
aas
(bad)
outs
or
jns
push
iret
ins
push
ficom
and
push
pop
ja
sar
fwait
pop
out
add
dec
pop
dec
lahf
lods
and
lds
pop
adc
push
retf
ja
fs
stos
ret
xchg
cmp
adc
loopne
fstp
and
inc
pop
(bad)
fndisi(8087
xchg
test
aaa
push
pop
or
and
and
add
dec
mov
ficomp
fisubr
pusha
cmp
shl
xlat
cmc
push
mov
push
push
bound
and
addr16
and
sbb
loopne
cmps
mov
pop
add
jg
push
jl
xchg
stos
xor
ds
mov
aas
xor
stc
(bad)
mov
mov
sbb
pop
push
popa
cli
in
mov
lods
mov
ss
cmp
and
out
pop
sbb
fiadd
pop
cld
mov
pop
lds
adc
popf
pop
loopne
add
push
inc
loop
jle
shl
jae
ja
xor
jmp
mov
sub
inc
push
sbb
fisub
xor
loop
mov
dec
and
cmp
mov
cwde
and
icebp
mov
push
dec
dec
adc
repnz
push
aam
mov
mov
adc
inc
jmp
or
mov
imul
cdq
mov
cmps
test
in
push
out
push
jo
out
xor
push
jge
rol
add
or
add
imul
sbb
xchg
(bad)
sub
loope
cdq
scas
xor
movs
sbb
or
add
pop
sbb
movs
ins
xchg
aas
std
or
dec
mov
mov
imul
repz
ret
pop
mov
leave
fnstenv
jns
rcl
(bad)
push
arpl
icebp
sti
push
pop
sbb
daa
jnp
push
clts
mov
add
pop
or
push
sbb
cmps
jge
pop
iret
fidivr
pushf
inc
mov
mov
ss
xchg
cmp
push
push
ins
pop
adc
(bad)
push
aam
(bad)
cmp
sub
add
icebp
add
add
pop
clc
int3
mov
push
and
mov
push
call
dec
ja
aam
jp
sbb
pusha
push
dec
cdq
xchg
mov
add
icebp
loope
rol
xor
lods
pop
retf
(bad)
mov
out
pushf
lods
sbb
xchg
push
push
sbb
ins
dec
(bad)
bound
push
aas
mov
push
icebp
cmp
adc
add
or
sub
jmp
mov
(bad)
aad
fbld
scas
mov
jmp
jmp
jnp
or
loope
or
or
pop
jp
int
xchg
(bad)
aas
xor
push
cmp
jnp
push
xchg
out
das
out
push
scas
dec
ffree
sbb
movs
fwait
pop
or
aad
sub
jns
dec
shl
push
movs
pop
repz
(bad)
sbb
xor
adc
dec
dec
jo
sahf
js
enter
jo
push
test
push
mov
or
and
jmp
jns
cmp
repz
sbb
fistp
add
sub
push
aas
adc
push
mov
mov
ret
xchg
int3
and
cmps
xchg
jge
jns
jle
in
popa
inc
fcom
xor
inc
mov
jnp
ja
fadd
pop
lahf
or
jg
jb
mov
push
fnstenv
sbb
mov
mov
push
idiv
xchg
movs
dec
mov
or
arpl
dec
cmps
xchg
xchg
pop
pusha
cs
aas
dec
shl
xchg
or
pop
xor
jo
cmp
mov
add
clc
push
mov
sti
mul
mov
mov
lds
jae
gs
(bad)
inc
push
test
retf
and
adc
push
dec
js
ins
stos
mov
mov
jp
push
loop
mov
and
jle
mov
adc
inc
sahf
loopne
xor
das
dec
push
pop
cmps
loop
mov
adc
cs
cmp
mov
mov
js
mov
(bad)
sbb
pop
or
jmp
jge
in
xor
(bad)
pusha
xchg
add
push
push
sub
fist
cwde
push
enter
dec
dec
xchg
int3
jns
neg
xor
push
xchg
enter
daa
mov
jle
push
bound
xor
jo
xor
in
cdq
ds
aas
dec
fcmove
mov
and
dec
inc
dec
or
xchg
xchg
jns
or
ins
mov
mov
add
std
mov
dec
daa
nop
arpl
xchg
gs
cmp
ins
lea
in
sub
pop
mov
dec
retf
pop
je
xchg
cmps
and
jae
sub
les
mov
(bad)
mov
sub
pop
popa
sub
sbb
dec
add
stos
(bad)
cmps
cmps
sti
adc
pop
sbb
lods
loopne
shr
pushf
sub
test
dec
in
lds
adc
sub
push
adc
or
push
bnd
sub
stos
jns
jne
add
cmp
pop
fisub
push
inc
inc
dec
mov
inc
mov
dec
jns
cmp
pop
xchg
aad
pop
sahf
lds
add
push
or
sbb
mov
and
dec
cmp
jne
mov
test
push
lods
push
mov
or
mov
leave
jp
hlt
push
jbe
retf
test
add
paddw
fist
add
imul
call
xor
bound
mov
push
or
and
jo
xor
dec
imul
mov
sub
(bad)
loop
mov
pop
jno
sub
xor
add
mov
sar
mov
into
retf
xchg
dec
sub
int
pop
enter
stos
inc
gs
sti
jb
inc
(bad)
cmc
jnp
and
fdiv
xchg
push
cld
add
adc
mov
pop
push
enter
fwait
mov
aaa
fwait
lahf
dec
dec
les
push
imul
mov
jno
cmp
out
daa
push
xor
sbb
xchg
xchg
push
push
sub
sub
inc
inc
xor
in
shr
cmps
xchg
ins
in
mov
mov
dec
rcl
push
xlat
push
dec
jo
jge
or
movs
jg
xor
add
dec
enter
aad
or
mov
repnz
dec
loopne
adc
movs
leave
fwait
xchg
pop
repz
jmp
mov
mov
or
arpl
inc
lods
jmp
and
sbb
sub
scas
movs
sub
xor
adc
jb
pop
test
mov
xor
retf
cld
stos
add
enter
push
(bad)
pop
or
outs
jg
imul
cmp
mov
dec
xlat
sub
jge
sbb
and
pop
pop
push
fwait
cwde
and
inc
pusha
and
icebp
push
add
inc
jno
xchg
mov
add
xor
fs
in
test
add
push
sar
xchg
movs
cmovg
add
push
dec
dec
or
xchg
add
dec
mov
fs
pop
adc
in
adc
inc
jns
xor
jecxz
or
jo
inc
cdq
push
adc
addr16
jo
stos
dec
test
adc
xor
jae
xchg
retf
mov
mov
pop
xchg
inc
cli
jns
mov
and
movs
fisubr
push
push
(bad)
mov
inc
cmp
push
push
pop
inc
cmp
xchg
xchg
scas
ror
test
icebp
and
ror
dec
dec
sbb
inc
cmp
dec
je
mul
pop
les
sub
and
dec
xchg
ds
pop
inc
jb
mov
xchg
mov
out
sbb
xchg
popf
movs
xchg
mov
pop
ret
bound
xchg
stos
push
sbb
add
call
xor
mov
adc
push
inc
mov
mov
jae
jae
aad
pushf
mov
cmpps
sbb
outs
sbb
jmp
mov
inc
int
or
push
ret
and
push
push
mov
inc
mov
xchg
movs
mov
stc
and
push
fnstcw
adc
xor
arpl
movhps
mov
pop
and
jb
adc
mov
push
test
in
call
pop
lock
(bad)
data16
push
jl
in
push
xchg
loop
cs
loop
popf
jns
push
push
addr16
xor
mov
mov
jne
imul
push
cwde
mov
fistp
in
retf
xchg
pop
pop
dec
sbb
lock
sub
loopne
mov
inc
sbb
jg
push
pop
pop
mov
in
in
dec
test
xchg
sbb
(bad)
scas
dec
inc
jl
inc
pop
mov
std
dec
jl
repz
sub
ret
inc
xchg
add
and
push
inc
push
cmp
in
ja
xor
shl
fist
rol
jecxz
push
xchg
sub
push
arpl
push
add
(bad)
retf
cwde
mov
sbb
je
jle
jae
out
mov
mov
cs
jmp
sbb
rol
adc
(bad)
ins
ss
pop
adc
pop
sbb
je
adc
mov
sbb
jbe
add
dec
xlat
xor
jns
out
inc
mov
inc
arpl
push
scas
mov
ret
adc
inc
scas
dec
pop
mov
dec
adc
sbb
sub
adc
int
mov
inc
cmp
push
data16
cwde
pop
xlat
dec
test
add
mov
repz
stc
scas
dec
adc
cmc
push
ja
ficom
das
loop
or
push
std
adc
dec
fidiv
push
cli
add
imul
or
pusha
jbe
loopne
mov
mov
shl
inc
dec
sahf
lock
push
dec
imul
sbb
sub
out
add
dec
inc
add
int
into
in
sub
fcomp
out
stos
xor
ret
cmp
(bad)
push
pusha
fst
cmp
mov
push
ficom
stc
push
lods
pop
div
mov
pusha
or
push
jle
loopne
xchg
mov
push
pop
(bad)
ins
test
cs
xchg
scas
push
xchg
or
mov
sub
adc
sub
cmp
sbb
inc
mov
dec
mov
scas
loop
out
dec
mov
mov
movs
int3
add
jmp
in
sbb
sbb
dec
pop
ins
ret
in
fsub
ret
aas
xor
js
sbb
push
dec
mov
pop
mov
inc
sbb
xchg
cmp
add
add
cmp
in
bound
adc
mov
stos
sbb
cmp
scas
test
das
jl
sbb
pop
adc
sbb
mov
ret
sbb
cwde
dec
lea
jmp
or
clc
sbb
jo
je
xor
icebp
fwait
jbe
push
fild
(bad)
aas
ss
push
fld
sub
xchg
xchg
ins
fucomi
push
add
sub
mov
(bad)
mov
retf
test
sub
dec
dec
push
push
cmp
add
outs
(bad)
repz
aad
push
je
pop
and
inc
adc
in
je
dec
ret
test
adc
rcl
mov
push
xor
out
cmp
jbe
inc
call
sub
test
outs
mov
mov
push
and
push
pop
jbe
in
xchg
lods
mov
and
push
fldenv
dec
xor
xchg
mov
push
add
call
sub
pop
add
dec
and
xlat
push
test
jle
mov
neg
adc
pop
jl
pop
or
push
push
jno
dec
inc
adc
push
cli
add
cmp
outs
push
mov
add
push
mov
push
mov
ds
mov
pop
jl
dec
repz
push
mov
mov
jl
or
int
pop
popa
ss
sub
mov
ins
push
and
ss
inc
int3
jne
sar
(bad)
imul
mov
jnp
test
and
js
les
sub
push
jnp
dec
test
add
ja
cs
add
cmp
lea
leave
outs
jge
dec
cmp
out
lods
mov
pop
inc
rcr
jp
fwait
in
test
xor
push
je
push
mov
mov
sbb
jnp
mov
xchg
call
or
dec
daa
ja
ja
xor
mov
push
shl
sar
xor
rcr
sbb
fwait
inc
dec
jo
push
adc
adc
pop
aaa
out
pop
hlt
inc
fistp
push
adc
jae
push
cmps
or
add
push
lahf
shl
sub
mov
sub
adc
jge
pop
jbe
xchg
stos
addr16
ds
aaa
sbb
in
adc
or
mov
or
jg
pop
pop
dec
stc
jecxz
cmc
pop
cmps
std
add
lods
aaa
sar
jmp
inc
xor
into
inc
push
sub
jg
in
add
call
mov
sbb
sub
outs
sar
or
push
inc
cwde
mov
test
push
push
sti
cmp
push
in
scas
mov
lahf
jb
fst
cld
jne
in
aad
ins
mov
jbe
adc
xor
push
and
dec
and
xchg
test
push
jb
sbb
lahf
idiv
push
xlat
mov
das
ror
cmp
dec
popa
xor
jbe
adc
std
dec
sar
push
xor
sbb
dec
dec
jno
lea
mov
sub
shl
std
adc
inc
shl
retf
mov
nop
sub
push
adc
pop
sbb
or
fsubr
sub
sub
jne
adc
mov
jnp
xchg
xor
movs
inc
push
shl
jnp
in
sbb
push
sub
xchg
ja
and
sub
cmp
pop
ror
outs
js
mov
gs
ficom
push
xchg
mov
mov
js
push
push
mov
or
pop
fs
ins
lea
sub
add
mov
inc
pop
xor
pop
add
das
arpl
call
cmps
mov
outs
hlt
cld
sbb
mov
sbb
inc
cmp
addr16
jb
push
pminub
and
pop
push
or
and
inc
inc
push
mov
dec
inc
in
dec
add
mov
or
xchg
pop
xchg
jns
jne
lahf
shr
imul
dec
lahf
xchg
mov
xor
mov
jge
pop
adc
jb
push
mov
mov
fs
faddp
sub
mov
add
nop
addr16
sub
sbb
outs
bound
fstp
xor
push
cmc
sbb
xor
dec
test
pusha
mov
aas
jae
nop
nop
cmp
pop
dec
cld
dec
push
jecxz
xchg
dec
sbb
push
adc
or
adc
mov
push
add
add
push
inc
popf
xor
ret
icebp
adc
frstor
sbb
fbld
inc
and
dec
dec
jo
push
pusha
xor
cmp
adc
or
add
cmp
mov
pop
retf
pop
mov
or
out
jg
xchg
xchg
in
dec
cmps
dec
and
push
popf
imul
xor
shl
pop
adc
push
pop
imul
cmps
pop
xchg
push
fdiv
adc
mov
sub
sbb
push
cmp
mov
sub
cmp
sub
and
add
adc
dec
dec
jp
mov
(bad)
retf
int
cmp
cwde
fwait
mov
scas
arpl
push
call
ror
jo
outs
jg
icebp
scas
and
ret
sar
das
sub
popa
inc
jno
cwde
push
(bad)
dec
sahf
icebp
or
mov
xor
mov
cmp
xor
pop
jne
xor
iret
test
int
in
std
sub
xor
inc
mov
inc
dec
dec
stos
mov
vdivps
inc
add
rcr
xchg
pop
nop
pop
mov
push
sbb
or
push
lods
cld
(bad)
pop
pop
xor
ins
ror
mov
add
push
push
sbb
add
(bad)
mov
jecxz
xchg
inc
sbb
jmp
int
pop
ins
loop
jbe
dec
xchg
and
jnp
push
pop
fadd
jg
or
outs
push
push
mov
or
leave
push
jb
lods
mov
mov
pop
shr
mov
ucomiss
inc
sub
xchg
or
pop
aas
xor
in
cmps
sbb
jge
pop
and
sbb
scas
in
mov
retf
nop
(bad)
sbb
inc
dec
cmp
ret
push
and
fimul
aas
mov
rcr
add
outs
pop
mov
test
or
nop
sahf
(bad)
aam
test
push
retf
dec
xor
(bad)
cmps
imul
jg
leave
mov
xor
stos
cmps
shl
pop
arpl
xor
lods
popf
jl
jle
(bad)
cmps
mov
shr
movs
pop
add
fcomp
cmp
addr16
jb
dec
stc
push
jl
shr
mov
push
adc
int3
push
shl
and
inc
mov
jno
jecxz
div
jge
lods
dec
pop
icebp
and
jbe
sub
push
jne
fs
xchg
pushf
add
sub
push
inc
out
fcmovbe
clc
push
pop
and
add
mov
sar
rol
xchg
scas
jge
push
out
retf
xchg
sub
test
dec
or
in
bswap
push
pop
sub
ds
push
mov
sti
push
imul
std
jge
jns
fdiv
mov
push
inc
imul
or
mov
(bad)
aas
xchg
mov
ins
rcl
push
outs
jmp
mov
stos
sub
add
jae
mov
pop
adc
cli
loop
mov
adc
and
cs
adc
inc
push
xor
push
pop
xlat
cld
outs
movs
mov
jnp
jnp
jl
jmp
cmc
push
in
dec
add
add
jl
aaa
or
mov
arpl
imul
pop
inc
into
fs
push
mov
sti
push
cmps
pop
add
add
repz
fwait
add
movs
into
mov
sbb
jne
je
inc
mov
xchg
test
cmps
stos
dec
xchg
aas
fmul
setp
ins
sub
(bad)
inc
imul
add
mov
adc
pop
fidivr
call
sub
ins
pop
(bad)
xor
mov
mov
xor
lods
and
ror
aad
pop
xchg
lock
jne
add
imul
mov
push
dec
and
mov
popf
das
jl
add
inc
daa
jne
push
cdq
nop
push
in
inc
(bad)
(bad)
cmp
xor
out
mov
add
(bad)
sbb
lock
dec
fadd
pusha
stos
popa
and
int
pop
sar
out
sbb
adc
push
mov
inc
fs
add
div
fwait
mov
fisubr
adc
jge
and
cwde
mov
inc
push
sub
jecxz
push
add
push
mov
push
pop
sub
ss
sbb
jo
popf
jg
or
dec
cmps
push
mov
push
and
fiadd
int
sbb
cmp
pushf
dec
cli
arpl
xor
jne
ja
ins
push
dec
popf
sahf
push
cwde
lea
xlat
imul
cdq
cld
sub
dec
jmp
lods
and
mov
mov
and
mov
pop
and
jne
add
loop
(bad)
pop
cmps
div
mov
inc
or
(bad)
sbb
clc
bound
aad
dec
aaa
test
sahf
jl
outs
lea
sbb
xchg
gs
and
or
mov
push
push
movs
in
fld
data16
push
pop
sub
stc
xchg
pop
xchg
pop
and
rcr
ins
add
push
loopne
mov
inc
sbb
push
inc
jno
pop
xor
add
icebp
ret
mov
and
aam
adc
bnd
ficom
inc
in
push
dec
cli
jl
cmp
jbe
es
inc
lea
cmp
inc
dec
aaa
jmp
call
jle
lahf
mov
(bad)
fistp
jbe
sub
sbb
inc
fs
scas
idiv
es
jmp
sbb
bound
dec
pop
jo
cwde
dec
retf
pop
ror
test
(bad)
and
loop
pop
xor
rcr
push
out
gs
jo
cs
mov
or
and
push
push
mov
pushf
jb
add
dec
push
dec
jecxz
jae
clc
dec
dec
int3
xor
lods
loopne
ret
sub
or
daa
and
or
add
arpl
add
mov
lea
popa
xor
(bad)
push
ror
rcl
cwde
mov
mul
sub
(bad)
ins
or
dec
adc
or
jmp
jno
les
and
or
push
retf
and
gs
and
dec
push
fwait
mov
push
mov
xchg
xchg
aad
jecxz
mov
js
inc
imul
(bad)
outs
das
jns
xchg
fldenv
add
sbb
stos
movs
pop
popa
pop
cmp
cmps
mov
jnp
out
xchg
pop
cmps
push
xchg
sbb
and
dec
or
pop
dec
push
sar
sub
sbb
xor
jbe
cmp
dec
push
(bad)
jne
dec
xchg
add
mov
sbb
xlat
inc
inc
xchg
jne
sub
xchg
jmp
push
adc
jecxz
push
add
push
push
mov
xor
inc
xor
pop
cmp
mov
fdivr
test
std
push
jecxz
inc
js
stos
dec
or
enter
pusha
sbb
aas
pop
sbb
mov
sti
sub
add
push
jecxz
mov
out
adc
mov
sahf
sti
jle
(bad)
inc
and
xchg
fwait
movs
mov
nop
inc
imul
fist
cwde
xchg
mov
add
bound
or
push
dec
push
inc
cld
repz
fidivr
sbb
dec
test
sub
sbb
push
stos
xor
(bad)
jp
sub
jp
fs
pop
pop
sub
stos
pop
cmc
jle
add
adc
push
cmps
or
jp
pop
jns
mov
dec
add
push
xor
lods
rcr
mov
ret
jp
scas
jmp
push
adc
stc
cmc
mov
or
ss
mov
ss
pop
daa
cmp
or
xchg
push
leave
pop
mov
add
aam
push
jecxz
push
jb
lods
dec
adc
xchg
jp
inc
in
xor
lea
inc
ret
adc
cmp
pop
lds
cs
dec
push
mov
imul
sti
lds
xchg
cs
hlt
pop
jmp
stos
dec
xchg
xor
mov
stos
add
pop
cmps
mov
jo
cmp
push
add
pop
dec
clc
cli
dec
iret
jnp
clc
jle
xchg
leave
adc
xchg
push
pop
jp
sbb
shl
jbe
ins
and
loop
pusha
out
outs
leave
aaa
loope
push
aaa
dec
rol
push
fild
mov
mov
xor
dec
xchg
movs
mov
sti
lods
jb
pushf
ins
call
sti
imul
cmp
lahf
out
and
ror
(bad)
mov
adc
xor
push
push
xchg
dec
jmp
mov
rcr
loopne
cmp
and
xchg
sbb
iret
xor
push
loop
sti
add
push
ss
jae
pop
mov
push
fs
into
pop
and
mov
leave
test
jo
rcl
shl
mov
nop
sub
adc
jle
(bad)
stos
or
adc
xchg
movs
mov
add
push
aas
jnp
call
mov
fnstenv
adc
lock
cmp
gs
imul
push
or
(bad)
jbe
aaa
cmc
das
retf
push
mov
mov
push
push
test
pop
in
pop
push
xchg
in
sub
retf
stos
in
dec
stos
cmp
inc
ins
cs
cld
fwait
and
pop
(bad)
stc
xchg
(bad)
add
cmp
pusha
pop
inc
pop
ins
mov
iret
aad
lods
mov
out
xchg
popa
xor
repnz
outs
fimul
pop
loop
jns
bound
je
xchg
sub
push
dec
adc
leave
inc
mov
imul
or
lods
mov
xchg
pop
inc
in
pop
int
(bad)
out
(bad)
mov
mov
add
xor
sub
push
mov
jb
adc
xor
fwait
push
in
dec
nop
fadd
mov
test
call
add
push
dec
xchg
push
inc
dec
stc
ja
ud0
ds
push
cs
inc
lods
je
or
inc
imul
mov
adc
pusha
and
mov
pop
cmps
test
xchg
ja
push
push
jmp
test
dec
ds
push
ja
xchg
mov
push
pop
ffree
rcl
lahf
pop
jo
adc
add
gs
test
js
repnz
mov
and
mov
mov
sbb
retf
adc
cli
ins
push
imul
int3
or
pop
push
cmp
ds
je
and
imul
pop
mov
je
ins
in
mov
lods
stos
shl
enter
inc
cld
inc
pop
mov
adc
jne
outs
jge
neg
sub
sti
mov
and
jo
or
adc
push
test
fdiv
in
cmp
call
out
outs
mov
push
div
sub
mov
sbb
ss
(bad)
fnstenv
lahf
or
inc
jnp
iret
bound
daa
je
out
cdq
mov
cmp
mov
inc
mov
push
out
fst
jne
and
inc
fld
push
or
or
mov
popa
sbb
inc
add
dec
mov
fistp
xchg
mov
inc
hlt
enter
cmp
out
dec
dec
sub
push
xor
jo
sub
adc
adc
pop
xor
push
xchg
mov
push
(bad)
inc
sbb
cmps
xchg
mov
mov
push
mov
ins
jg
push
(bad)
xchg
mov
push
addr16
shr
cmp
mov
sub
and
jp
add
mov
ins
mov
xchg
test
loop
pop
mov
fdivr
in
dec
jae
test
dec
add
pusha
das
enter
div
jns
test
dec
rol
(bad)
cmp
inc
sar
push
inc
addr16
test
shl
mov
mov
call
daa
pop
mov
lock
dec
sbb
ret
test
push
sbb
mov
shl
cmp
pop
add
xchg
jl
xchg
dec
(bad)
jb
cmc
adc
cdq
sbb
cmp
data16
adc
bnd
or
mov
dec
test
hlt
and
adc
pop
nop
push
popf
aaa
and
mov
adc
cmc
pop
adc
nop
mov
adc
lea
int3
pop
je
leave
xchg
push
xor
popa
push
inc
cmps
xchg
ficom
or
les
sub
add
addr16
mov
mul
cmps
and
xor
mov
ins
sub
pushw
inc
mov
cmp
out
(bad)
cmp
jbe
xor
mov
les
and
pop
bound
mov
pusha
dec
out
or
or
dec
aad
jbe
jmp
add
push
push
pop
mov
sbb
data16
(bad)
fist
pop
xor
dec
cmp
xchg
jb
ins
mov
xchg
xor
mov
popa
xor
int3
push
pop
outs
rcl
or
add
fisubr
ret
jno
pop
jo
pop
cmp
mov
mov
jb
ror
mov
out
std
stos
pop
jp
gs
mov
pop
jp
dec
es
test
fisttp
or
rcr
xchg
mov
daa
pop
outs
bound
pop
pop
inc
cld
xchg
push
sbb
enter
xchg
sub
lock
ins
or
je
(bad)
enter
loopne
push
(bad)
neg
adc
dec
cmc
cmp
or
bound
ins
js
inc
or
mov
sub
inc
neg
jmp
inc
mov
es
es
sub
inc
loopne
or
adc
or
jae
xchg
jnp
outs
(bad)
std
push
adc
mov
and
sub
adc
(bad)
dec
dec
and
xchg
pop
fdiv
inc
aam
pop
ja
fsub
imul
and
bound
ins
ins
fdivr
jae
mov
stos
mov
(bad)
repz
jge
jmp
cdq
clc
icebp
push
and
test
or
adc
pop
dec
stos
(bad)
mov
daa
aas
bound
es
ja
mov
cld
sbb
jmp
pop
sub
into
jg
sub
dec
pop
jno
ins
dec
xor
sti
push
aam
shr
mov
or
jb
cmp
cs
dec
xor
aad
inc
fidiv
sub
xchg
lods
fisubr
jne
ret
inc
push
scas
xchg
test
xchg
das
pop
sub
imul
or
mov
push
pop
pop
add
int3
or
push
test
fucomi
or
or
fild
dec
dec
push
cld
imul
xchg
outs
fidivr
add
mov
jb
popa
movs
cwde
mov
pop
fwait
mov
add
psrld
mov
sub
pusha
(bad)
lahf
mov
adc
icebp
mov
dec
sbb
xor
jge
push
cdq
xchg
inc
shr
repnz
mov
stos
jb
leave
das
mov
(bad)
sbb
(bad)
fimul
fnstcw
ins
call
mov
and
or
or
dec
pop
mov
adc
dec
daa
inc
xchg
cwde
scas
mov
lods
inc
inc
retf
push
bound
adc
push
fs
pop
test
cmp
jnp
retf
mov
pop
add
inc
and
mov
loope
lods
mov
inc
sti
lds
xchg
nop
cmp
aas
sbb
dec
cmp
imul
scas
push
jne
lea
pop
lds
push
xor
push
xchg
jo
cmp
push
jp
rcl
jmp
mov
rcl
xchg
outs
inc
out
fsubr
jmp
mov
scas
add
jbe
outs
push
adc
sub
imul
pop
add
sub
cmp
pop
ja
mov
rol
test
aas
lock
push
aam
inc
dec
and
push
cmp
xlat
dec
inc
xor
popa
cli
add
jl
jno
retf
pop
int
xor
sub
push
and
jmp
int
dec
icebp
out
ins
xchg
sub
mov
or
pop
adc
icebp
xor
jns
push
lods
call
cwde
scas
push
xchg
jl
mov
xchg
mov
jl
jns
fs
hlt
dec
pop
dec
stos
jb
xor
stc
push
inc
mov
jmp
sub
jp
inc
mov
pop
xchg
clc
gs
or
mov
retf
or
loopne
and
push
jno
dec
xor
jmp
dec
idiv
and
and
push
cmp
jp
xchg
pop
xlat
dec
mov
sub
mov
xlat
fs
aas
sbb
mov
dec
cmp
bound
push
inc
outs
in
or
leave
cmp
adc
xor
js
arpl
jno
cwde
jae
in
or
jmp
je
adc
repz
inc
sub
or
xchg
test
or
lock
mov
pop
jl
push
add
jno
dec
mov
imul
(bad)
cdq
mov
aam
mov
add
movs
mov
jg
mov
push
retf
cmp
mov
push
fnstsw
cmp
inc
call
imul
jg
jp
inc
mov
mov
outs
loope
out
addr16
lods
xor
push
movs
and
jns
fnstenv
cmp
sbb
inc
pop
daa
adc
mov
repnz
pusha
enter
mov
ds
fwait
dec
sbb
inc
aas
lock
jbe
in
sub
sub
cdq
pextrw
dec
fst
or
inc
cdq
add
jo
cdq
mov
dec
sti
jne
push
lods
xchg
xchg
cmps
mov
jp
push
push
mov
dec
jl
xor
lahf
daa
and
movs
(bad)
add
imul
push
adc
lods
sub
mov
div
aaa
xchg
lds
add
mov
cmp
(bad)
adc
inc
push
shl
sub
jmp
xor
and
retf
sbb
cs
arpl
enter
adc
jb
pop
mov
stc
and
jnp
jle
scas
out
mov
mov
jo
inc
adc
icebp
fnsave
add
or
sbb
icebp
mov
and
pop
xor
ds
lea
fsubr
mov
outs
lods
push
retf
mov
xor
loope
pusha
pop
xor
pusha
cmp
bound
retf
sbb
xchg
and
push
add
or
xor
es
jo
loope
inc
mov
ins
add
movs
mov
mov
daa
pop
out
int3
addr16
mov
inc
push
and
pop
(bad)
mov
(bad)
aaa
push
add
cmp
outs
scas
cdq
inc
in
jno
xchg
fs
int3
sbb
cmps
sbb
das
xchg
not
inc
mov
movs
adc
jno
sub
cmp
sub
setb
sub
xor
dec
(bad)
lds
das
popa
mov
dec
loope
inc
jne
push
test
cli
outs
mov
arpl
sub
lds
add
std
cmps
mov
adc
pop
dec
xchg
mov
sar
cld
and
push
shl
or
ror
xor
jp
int
dec
arpl
inc
jns
(bad)
mov
push
add
mov
push
push
push
mov
inc
add
inc
sub
xchg
cwde
(bad)
aam
dec
pop
ins
xchg
lds
jle
imul
mov
add
stos
cmps
aam
test
cs
xor
push
call
jno
cmps
je
inc
shl
and
cmps
sbb
adc
outs
aas
retf
ins
fsub
data16
dec
ror
sbb
or
adc
adc
xor
push
add
jp
je
pushf
retf
test
and
pop
in
jnp
scas
out
mov
add
push
mov
cmps
dec
fs
adc
mov
sub
sbb
add
cs
outs
iret
fisub
out
ja
jg
xlat
push
cdq
cdq
adc
movs
movs
sbb
sbb
jg
mov
arpl
dec
and
(bad)
pop
repnz
std
push
ds
add
jo
stos
xchg
dec
xchg
dec
ret
jp
pushf
mov
fdivr
data16
or
mov
lea
jg
jmp
sub
outs
(bad)
int3
mov
xor
or
mov
push
xchg
cld
push
mov
iret
movs
enter
mov
gs
hlt
popa
jge
lock
xor
sbb
add
add
cmpps
sub
adc
cmps
aas
mov
sbb
movs
dec
jg
mov
mov
pusha
(bad)
push
hlt
inc
push
cmps
xor
push
bndstx
xor
or
cmps
loop
stos
cmps
ss
push
sbb
jno
add
pop
scas
lods
jae
jo
xchg
cdq
mov
ret
ins
lea
aas
and
inc
dec
test
push
std
push
sub
cli
push
xor
das
xlat
push
movups
inc
test
add
push
sbb
stos
mov
pop
out
add
in
scas
mov
mov
inc
loope
(bad)
jno
jmp
test
pop
adc
pop
gs
in
mov
push
pop
shr
nop
test
push
xor
push
or
adc
test
(bad)
jp
push
xchg
mov
mov
lods
imul
inc
test
arpl
dec
pop
sbb
movs
pusha
xchg
int
push
xor
jbe
adc
pop
(bad)
fcomp
enter
nop
popf
mov
mov
push
pop
xchg
ins
int
push
mov
pop
cmp
jno
dec
repz
and
dec
adc
inc
dec
mov
mov
or
jnp
inc
lods
mov
sti
sbb
(bad)
scas
psrad
inc
sub
fild
inc
cld
dec
push
fidiv
adc
pop
out
adc
jl
push
fwait
xchg
inc
movs
iret
ins
add
xor
mov
mov
sub
adc
pop
pop
xchg
not
pop
push
stos
or
adc
and
shl
inc
xor
sbb
push
loopne
mov
sub
jbe
out
sub
xor
dec
xor
jb
outs
scas
jge
xor
loop
ret
inc
repz
push
mov
inc
gs
add
movs
xchg
xchg
mov
fnstenv
mov
inc
sbb
jne
xchg
mov
jg
xor
int
add
inc
(bad)
mov
test
adc
xor
xchg
call
mov
aad
aaa
(bad)
xchg
es
rcr
jle
arpl
push
dec
popa
scas
dec
gs
clc
js
ja
sub
add
push
loopne
cmps
push
sbb
cwde
mov
cmps
shl
in
add
mov
adc
outs
mov
xchg
add
push
or
cs
or
add
in
mov
sub
adc
arpl
push
jecxz
mov
fdiv
add
test
pop
fsubr
xor
retf
shl
push
add
push
sbb
push
imul
(bad)
and
or
daa
pop
lea
or
xor
pop
xchg
mov
mov
xor
inc
movs
movs
(bad)
aam
cld
xor
mov
sti
je
mov
stos
inc
xchg
dec
cmp
sub
pop
in
fisttp
ds
adc
xchg
pop
pusha
pop
sub
sub
call
and
not
sbb
movs
aad
sub
xchg
jmp
sub
loop
(bad)
jl
sub
sbb
cmp
pop
(bad)
aas
adc
mov
push
shl
popf
scas
(bad)
fiadd
dec
pop
std
jns
jno
lahf
retf
mov
sbb
fcom
inc
adc
fldenv
pop
add
or
pop
mov
dec
mov
mov
sub
mov
cmp
cmps
jns
pop
mov
(bad)
or
gs
push
pop
adc
(bad)
jle
xor
sub
pop
jmp
jne
inc
stos
mov
xchg
ror
push
add
mov
xchg
outs
dec
mov
je
out
in
mov
cmc
ds
dec
xor
test
cmp
push
jnp
lds
push
or
push
add
cmp
mov
jecxz
mov
jge
je
scas
pop
mov
mov
pop
inc
fldenv
out
push
push
push
cli
pop
mov
sti
and
pop
inc
pop
call
int
xor
mov
push
mov
pop
cmc
jg
mov
add
push
add
mov
or
call
xor
cmp
push
add
push
in
js
rcr
xchg
test
mov
loop
sbb
xlat
push
sub
lea
retf
imul
je
loop
push
loop
es
pop
shr
int
leave
sub
dec
inc
sub
fwait
jno
in
jne
cli
xor
xchg
jg
jmp
mov
xchg
dec
and
dec
aas
pop
xchg
leave
mov
add
fsubr
lods
mov
pop
xor
jno
mov
lock
aam
mov
test
adc
mov
jnp
leave
dec
arpl
loop
dec
lds
inc
in
jbe
adc
inc
mov
call
inc
call
jmp
and
movs
mov
pop
and
je
lahf
(bad)
mov
dec
and
push
sbb
rcr
jge
loop
and
cmp
popf
in
push
hlt
push
fdivr
sub
clc
push
stos
fs
imul
cmp
ror
dec
shl
addr16
std
pop
les
add
fs
jb
inc
adc
and
je
mov
inc
ret
jbe
jno
lahf
stos
movs
mov
inc
ja
push
rol
scas
mov
jl
sbb
lds
push
push
(bad)
cmps
fwait
test
bound
jb
inc
lods
nop
push
repnz
scas
fidivr
mov
shr
ret
xor
hlt
push
(bad)
addr16
inc
int3
dec
es
loopne
pop
mov
es
(bad)
sbb
jns
pop
movs
test
cwde
sti
adc
je
cmps
movs
or
pop
ret
pop
shl
push
xchg
and
jl
ins
jge
lahf
xchg
push
cmp
in
(bad)
mov
dec
push
push
push
imul
lahf
movs
pop
call
xchg
xchg
fs
cmp
movs
add
daa
fstp
hlt
dec
jge
repz
out
mov
daa
mov
push
aaa
dec
(bad)
adc
dec
inc
push
xchg
lds
jecxz
dec
(bad)
xor
mov
je
xchg
or
clc
movs
jb
or
sbb
popa
std
xchg
mov
push
dec
mov
cmp
pop
dec
jp
dec
repz
btr
add
retf
movs
mov
jo
iretw
jl
mov
xor
xchg
push
(bad)
mov
push
push
sbb
add
dec
stc
xor
gs
(bad)
xor
fisttp
jle
shr
out
out
inc
hlt
add
ja
in
mov
xor
lds
sub
sbb
push
or
mov
hlt
add
test
jp
shr
or
inc
aaa
mov
outs
into
jbe
xor
xchg
test
retf
push
jns
inc
shr
and
push
out
pop
lahf
shl
jmp
lahf
lahf
loopne
stc
mov
les
push
cs
icebp
outs
pushf
ds
xor
inc
mov
sbb
adc
in
xchg
lods
test
push
inc
jno
ins
cdq
xchg
imul
stos
jne
ds
mov
fs
int3
adc
fisubr
enter
jecxz
push
sub
in
adc
jle
push
xchg
jbe
add
adc
mov
(bad)
rcr
jecxz
and
fwait
sub
out
pop
push
mov
dec
jle
imul
add
dec
dec
xor
fsub
mov
cmp
imul
jnp
jbe
test
sub
and
mov
adc
sbb
push
push
(bad)
popa
fs
and
mov
lock
sti
and
sub
sub
ins
cmc
xor
imul
fwait
int
or
mov
mov
mov
loop
sub
adc
pop
push
and
sub
push
cli
adc
aas
xor
imul
fldcw
mov
in
out
mov
movs
bound
xor
inc
iret
dec
inc
or
aam
std
jl
add
fcomp
mov
dec
sbb
call
jae
dec
xchg
mov
call
inc
xchg
push
retf
jg
lods
jecxz
sub
or
pop
inc
ins
fs
fild
sbb
mov
add
dec
add
loope
aad
sbb
adc
cmp
rcr
sar
into
outs
dec
pop
xlat
jb
sub
scas
or
inc
in
es
add
push
xlat
sbb
sub
inc
call
lds
mov
fistp
arpl
pop
lods
inc
outs
out
ret
cmps
dec
jo
push
sbb
shl
pop
loop
stos
sahf
mov
sbb
add
movs
pop
enter
jns
mov
ins
mov
xor
mov
sub
mov
adc
int3
pusha
cmp
popa
iret
cmp
or
mov
daa
or
popa
cmps
stos
dec
mov
outs
jge
sbb
mov
pop
loope
pop
xchg
shl
push
xor
xor
add
xor
xchg
sbb
add
add
dec
in
js
push
fiadd
cmc
pop
mov
(bad)
or
mov
jb
nop
pusha
or
sbb
dec
bound
loope
and
popf
inc
fist
icebp
daa
xor
or
add
js
imul
les
pop
movs
cmps
mov
cdq
xchg
jns
inc
repz
xchg
cmp
dec
mov
mov
ss
and
inc
aam
mov
daa
das
or
pop
adc
lahf
and
dec
xchg
stc
push
mov
sub
out
sub
pop
pop
jge
pop
sbb
push
ins
imul
push
adc
repnz
pop
iret
adc
jae
or
ins
inc
je
mov
fwait
retf
(bad)
cmp
pop
sti
mov
pop
mov
imul
repz
ja
dec
or
scas
xrelease
and
dec
push
jge
int
mov
adc
sbb
das
outs
xchg
fisub
mov
std
in
movs
rol
leave
xchg
sbb
dec
ror
inc
iret
dec
dec
adc
mov
sbb
jg
pop
dec
fild
mov
(bad)
sbb
cmps
inc
sahf
ret
popa
retfw
inc
xchg
mov
add
jo
popa
arpl
repnz
mov
das
pop
inc
es
pusha
and
outs
fcmovu
lods
mov
or
dec
popa
pop
inc
test
sub
push
fdiv
aas
mov
mov
push
mov
adc
mov
dec
into
or
xor
ret
out
inc
aad
int
dec
jno
xchg
xor
dec
std
arpl
dec
jns
mov
pop
test
gs
les
and
out
(bad)
mov
das
push
in
dec
cli
inc
push
cmc
cmp
pop
pop
or
mov
adc
sti
sti
mov
pushf
or
pop
sub
jnp
xchg
ja
or
or
out
adc
inc
cmp
dec
push
repz
jnp
ficomp
inc
(bad)
sub
movq
adc
pop
outs
jbe
mov
(bad)
fistp
xor
mov
sub
int3
js
pop
arpl
or
dec
xor
pop
repnz
jle
lock
das
dec
push
fs
push
mov
mov
push
mov
(bad)
imul
(bad)
push
je
dec
jge
shl
jge
dec
fld
sbb
lahf
gs
jle
or
mov
jl
dec
xorps
ret
and
mov
retf
jne
mov
and
inc
sbb
xchg
lahf
adc
push
adc
mov
pop
and
aaa
or
push
stos
popf
pop
ror
gs
ja
repnz
pop
xor
fcomp
aam
gs
retf
inc
jg
neg
sbb
pop
fcom
sub
push
outs
gs
mov
inc
mov
push
jo
push
sbb
popf
mov
cmps
lods
cs
test
lahf
retf
nop
or
jno
sbb
lea
cmp
xor
movs
cmps
cld
push
dec
cmp
push
stos
pushf
jne
push
aam
mov
sti
mov
mov
xchg
ins
inc
js
dec
dec
icebp
inc
push
inc
stos
bound
out
jno
inc
cmc
pop
mov
adc
inc
mov
daa
ja
fs
mov
push
aad
xor
lods
nop
lahf
xchg
xor
mov
inc
jle
xchg
mov
add
inc
inc
or
(bad)
aam
gs
sbb
dec
sti
les
adc
jnp
js
mov
retf
ja
fiadd
xchg
cld
cmps
mov
ror
imul
inc
push
test
pop
sub
mov
add
add
dec
aad
mov
aad
and
ins
xchg
xchg
push
(bad)
repnz
pop
fdiv
pop
in
int3
mov
test
dec
int
fisub
cwde
nop
test
gs
fild
cmp
dec
or
fidivr
push
sbb
cmp
cli
mov
pushf
jl
xchg
push
test
out
popf
nop
cmp
les
dec
sub
jae
ins
repz
lods
push
int
cmc
add
or
sub
push
mov
sbb
jns
mov
cmp
xor
sub
ret
pop
sti
xchg
push
imul
xchg
cmp
sbb
and
add
loopne
stos
stos
xor
adc
xor
pop
repnz
dec
mov
xchg
popf
and
sub
lds
push
hlt
xchg
jp
or
pop
cmp
dec
pop
aas
inc
cmp
sub
fmul
or
adc
adc
je
jp
xchg
push
adc
pop
(bad)
xor
jo
in
int3
mov
jecxz
cmps
mov
enter
sub
mov
sbb
cmp
mov
cs
jl
fistp
sub
pop
sub
inc
pop
addr16
(bad)
mov
adc
mov
ror
shr
movs
sbb
test
dec
test
into
arpl
cmp
cwde
pop
into
inc
out
add
or
pop
(bad)
dec
sahf
sub
pcmpeqd
call
je
jp
test
std
mov
int
mov
das
mov
(bad)
dec
popf
adc
push
or
xchg
xchg
test
xor
stc
cwde
xlat
mov
outs
and
das
pop
or
jb
mov
cwde
or
stos
jbe
jb
xlat
push
mov
mov
push
xor
jle
call
sub
mov
sub
and
dec
icebp
and
push
aaa
jmp
data16
ins
pop
mov
lahf
mov
fstp
gs
pop
aad
dec
call
xor
jnp
sbb
mul
pop
cmc
iret
test
pop
or
or
push
mov
jmp
popf
jae
push
shl
out
ins
dec
jp
inc
cmp
or
push
int
push
not
out
ss
arpl
jp
jnp
je
lea
into
pop
add
outs
adc
lea
pop
scas
enter
pop
rcl
out
xor
unpckhps
cmovp
sbb
(bad)
mov
add
pop
sub
push
cdq
in
jno
push
ret
jecxz
dec
mov
mov
sar
jp
pop
or
dec
jl
fadd
pop
hlt
mov
ins
iret
sub
aam
mov
jecxz
and
ins
mov
push
pop
jbe
jecxz
fnstenv
dec
push
xchg
inc
int3
cmp
repnz
outs
scas
sbb
dec
push
sbb
mov
add
rol
ficom
ds
sub
add
pusha
cmps
mov
hlt
push
cmp
push
movs
imul
adc
xor
add
xor
cmc
outs
repnz
out
lods
xor
and
dec
sbb
mov
pusha
retf
imul
cmp
sar
js
or
nop
push
xor
mov
or
ret
mov
mov
adc
push
push
push
lods
loop
lods
dec
rcr
mov
in
out
ds
and
add
xor
inc
inc
or
lahf
dec
cli
sub
daa
mov
or
jbe
cmp
push
jae
mov
inc
xchg
cld
dec
pop
mov
popf
pop
ror
iret
jle
push
pop
mov
dec
xor
xor
dec
sbb
mov
pop
cmp
jbe
push
push
adc
or
adc
mov
and
add
push
jmp
add
fbstp
(bad)
xor
pop
ret
jl
jle
or
mov
addr16
inc
sub
mov
cmps
pop
push
out
cmc
dec
and
xor
popa
dec
cmp
(bad)
test
adc
pop
shl
shl
push
pop
das
and
push
cmp
inc
lods
xchg
jnp
dec
xchg
inc
arpl
xlat
adc
xchg
dec
sub
aad
sub
dec
sbb
ins
pavgw
push
ret
pop
retf
js
sti
cmp
push
dec
jne
scas
jae
rol
in
or
sti
xchg
aad
in
mov
push
jge
push
leave
mov
sbb
adc
adc
xor
pop
(bad)
fimul
pop
and
pop
add
sub
test
shl
repz
lahf
daa
sbb
xchg
jo
and
inc
or
push
outs
std
push
and
fimul
pop
lds
pop
add
or
push
push
imul
cs
pushf
xchg
scas
lods
inc
dec
call
lahf
xlat
repnz
mov
sbb
sbb
int
and
xor
retf
loopne
push
and
jne
push
xor
test
dec
iret
test
jecxz
aaa
mov
cld
push
into
sbb
enter
bound
inc
jo
aaa
and
xchg
xor
cmp
add
and
dec
fst
pop
pop
adc
call
imul
mov
mov
or
inc
dec
xchg
jmp
xor
or
xchg
fld
sbb
in
mov
cmp
imul
jno
cli
jle
jge
fsub
out
ja
pop
xlat
ret
xor
ins
xor
outs
and
push
jp
fsub
sbb
pop
and
lods
jns
aas
add
dec
jp
mov
popa
int3
xor
loopne
mov
mov
inc
inc
out
(bad)
jnp
cmc
cwde
lea
inc
and
sbb
fild
pop
dec
clc
fstp
sbb
ins
dec
cmp
push
test
mov
dec
mov
jmp
sub
xlat
pop
sub
sbb
dec
data16
ja
xor
mov
push
mov
das
cs
inc
mov
data16
mov
ins
add
inc
adc
xchg
and
gs
outs
lock
out
push
nop
push
sub
xchg
mul
xor
retf
cdq
push
outs
and
push
jns
inc
cmp
sub
daa
mov
fld
ja
mov
dec
push
jle
jp
jmp
push
pop
bnd
xor
mov
push
mov
fadd
xchg
pop
fist
jge
aaa
stos
xchg
fs
inc
push
jns
xchg
test
dec
jmp
xchg
dec
imul
or
xor
data16
neg
add
sbb
aad
test
pop
sbb
and
jno
dec
movs
jecxz
(bad)
pop
sub
mov
dec
mov
icebp
aam
mov
mov
sub
sar
test
push
lods
dec
cmp
shl
add
jg
cmp
dec
rol
scas
inc
mov
sbb
leave
outs
and
mov
neg
jno
(bad)
dec
loop
xor
(bad)
mov
and
push
jnp
shr
sub
in
mov
cs
xor
sbb
inc
cmp
mov
cwde
cmp
xchg
popa
xchg
jecxz
xchg
popa
push
add
dec
push
into
data16
test
fldcw
sub
ds
jno
fnstsw
mov
(bad)
ss
mov
jl
xor
mov
movs
outs
js
ins
lods
jl
mov
lea
or
dec
cmp
lahf
mov
xor
loope
mov
add
cmp
out
(bad)
loopne
dec
mov
xchg
(bad)
or
leave
and
dec
jo
lea
retfw
sbb
mov
push
push
jmp
sbb
outs
xchg
int3
inc
mov
inc
inc
ror
and
sub
add
in
xchg
inc
mov
and
and
push
test
cs
add
sub
adc
xchg
bound
cmp
jl
inc
cmp
adc
inc
data16
fwait
pop
icebp
push
leave
pop
mov
pop
jno
aad
mov
push
ins
jno
pushf
jl
fdiv
call
mov
push
(bad)
mov
push
sub
xor
pop
pop
call
and
ror
test
and
and
push
mov
je
or
cwde
jno
mov
popa
rcl
xor
shr
inc
int
sbb
ja
ss
mov
ins
cli
add
sbb
or
pop
fwait
sbb
je
xor
outs
add
ins
das
push
xchg
mov
fisubr
ins
fcomp
jl
mov
adc
push
mov
add
loop
mov
pop
pop
adc
cmp
cdq
pop
out
mov
pavgb
iret
imul
js
sbb
dec
sbb
adc
shl
outs
lock
jb
sub
or
jns
jbe
loop
xor
bound
pusha
addr16
ins
push
jo
cdq
mov
test
jns
and
in
repnz
out
add
jbe
pop
ins
call
pop
push
movs
rep
xchg
mov
imul
cmp
loope
mov
inc
test
retf
out
imul
fisubr
shl
dec
scas
inc
cmp
xchg
sub
and
xor
mov
ins
imul
jae
(bad)
sub
test
mov
popa
sbb
dec
cld
jno
sub
push
lock
ja
inc
mov
test
sbb
sbb
inc
(bad)
mov
inc
pop
and
bound
add
dec
mov
mov
dec
(bad)
shr
cwde
or
cmps
mov
add
push
jp
call
cdq
or
ins
aam
xlat
push
pop
push
push
inc
mov
push
adc
adc
and
dec
loope
add
sub
inc
shl
addr16
mov
test
add
push
scas
out
mov
push
add
int3
mov
or
add
dec
popa
xor
mov
idiv
loope
lods
mov
inc
sti
lds
mov
pusha
sbb
xor
sbb
mov
not
add
push
sub
mov
enter
dec
bound
push
sti
push
sbb
sti
cdq
test
inc
dec
lock
in
je
mov
adc
push
adc
cdq
in
adc
mov
adc
pop
sub
or
mov
loope
sub
xchg
mov
push
movs
and
nop
fs
push
ins
aas
retf
cmp
stos
jno
pop
jmp
aam
add
outs
hlt
sbb
push
data16
test
je
dec
sbb
or
scas
in
movs
fisubr
out
idiv
hlt
sub
pop
mov
cmp
and
loop
xchg
cwde
and
cmp
adc
lods
xchg
dec
shl
aad
cmps
stos
jge
push
fcomp
push
xchg
sbb
cmp
jno
lock
ret
sahf
psubw
mov
dec
add
movs
ins
cmc
xor
pop
jne
sahf
lahf
push
sbb
jno
jnp
dec
mov
ret
pop
mov
imul
pop
lods
(bad)
cmps
push
lods
or
xor
sub
xor
adc
sar
push
and
inc
jb
push
push
movs
fisub
lea
xlat
sub
cdq
pop
sub
mov
popa
adc
fsubr
xor
dec
fcomp
or
jae
fbld
mov
or
xor
inc
push
ret
push
out
mov
xchg
mov
dec
out
push
stc
imul
pop
inc
movs
xchg
fild
pusha
pop
or
int
in
ins
or
xor
pop
sbb
clc
nop
dec
out
fwait
int
mov
dec
shr
out
test
es
xchg
dec
adc
mov
inc
jp
int3
push
pop
sbb
mov
das
jecxz
aas
push
pusha
mov
das
ins
push
inc
test
push
stc
jb
push
add
jbe
dec
int
and
lock
jo
pop
and
cmps
aad
xor
xor
xor
rcr
loopne
inc
or
dec
add
xor
mov
xlat
sar
mov
and
(bad)
fwait
outs
xor
pop
or
dec
pop
das
sbb
lods
push
cmp
(bad)
push
fwait
adc
jb
stos
test
push
fiadd
imul
jp
call
loop
repz
sub
je
push
inc
push
mov
pusha
or
dec
(bad)
(bad)
mov
test
pop
xor
or
mov
sar
mov
jmp
cmp
shl
dec
dec
mov
jge
pusha
dec
xor
adc
cmp
js
out
sub
push
or
jnp
into
daa
fisttp
or
lods
mov
mov
dec
std
imul
sbb
dec
pop
bound
add
pop
outs
jnp
add
push
shl
(bad)
or
(bad)
jge
jo
enter
xor
sub
jae
fmul
push
test
loop
jecxz
sti
pop
mov
iret
inc
(bad)
setl
ss
push
push
out
jge
in
inc
ins
loopne
or
loopne
movs
xchg
fcom
mov
jnp
and
jecxz
inc
mov
sbb
ss
lods
enter
cmp
mov
pop
sbb
adc
sbb
scas
test
push
shr
loope
jno
ss
sub
stos
outs
or
in
adc
mov
je
pusha
js
in
mov
jge
xor
push
mov
int
loop
and
pusha
inc
mov
push
pop
in
push
dec
scas
mov
cli
adc
imul
movs
sub
and
xor
and
fidiv
sub
pop
inc
push
aas
sbb
clc
or
jg
xlat
adc
mov
das
(bad)
cmp
inc
push
imul
stos
jnp
dec
retf
or
mov
sub
or
mov
mov
popa
push
sti
push
or
xchg
pop
jl
or
inc
jg
call
cmp
sub
jle
loop
xor
sub
(bad)
fsubr
cwde
stos
mov
and
pop
inc
imul
in
mov
ins
nop
mov
cmp
mov
xor
aad
imul
mov
div
lds
adc
xor
jl
pop
mov
push
inc
aad
jg
dec
es
and
jne
and
(bad)
xchg
inc
icebp
adc
sub
jg
fiadd
jge
jmp
push
add
dec
sub
cli
sub
jp
xchg
ds
out
mov
inc
jg
movs
inc
adc
(bad)
adc
ror
arpl
sub
repz
or
es
xor
xchg
jp
cmp
push
push
je
cwde
jne
(bad)
outs
outs
shr
xchg
mov
mov
outs
lock
push
mov
or
imul
adc
sbb
(bad)
pop
push
pop
mov
nop
into
add
jmp
jmp
outs
sub
dec
sub
dec
jl
mov
pushf
jo
inc
fist
push
mov
fistp
gs
lods
jbe
fild
movs
push
jle
xchg
push
mov
leave
inc
jno
in
dec
xchg
add
mov
(bad)
or
sbb
int
cmp
pop
sbb
xchg
fldcw
xchg
mov
jecxz
xchg
mov
jl
adc
push
cmp
fs
sbb
popf
pusha
cli
push
into
or
js
aaa
pusha
inc
dec
fbld
sub
xchg
jns
repnz
gs
cmp
mov
mov
fisub
aam
mov
push
xchg
ret
mov
sbb
addr16
sbb
sbb
mov
cmp
jae
ja
jbe
mov
in
cmp
call
inc
or
aad
inc
and
push
je
outs
push
cmp
outs
in
call
clc
add
pop
dec
dec
xchg
mov
pop
cmc
dec
xor
mov
pushf
cmps
ret
movs
jo
cld
imul
inc
out
repz
inc
adc
push
dec
lods
loopne
add
push
push
and
xchg
xchg
je
inc
or
pop
add
xor
cli
or
xchg
mov
in
xor
(bad)
mov
push
aam
cmp
inc
bound
pop
sbb
jae
das
leave
push
sub
push
rcr
dec
xchg
push
adc
imul
bound
jbe
push
mov
movs
mov
add
(bad)
test
dec
sub
sub
rol
and
adc
es
out
xchg
push
dec
and
dec
ds
movs
mov
mov
cwde
in
xor
mov
lds
mov
cmp
frstor
inc
cmp
push
jbe
ror
push
repnz
js
cs
in
aaa
ja
xor
sahf
push
(bad)
xlat
dec
inc
jmp
jp
loopne
mov
xchg
fs
xchg
push
frstor
cwde
fsincos
ins
lahf
adc
add
call
lods
and
aas
es
and
das
ins
jp
jbe
jo
sbb
fwait
lock
sar
imul
xchg
popa
dec
out
pop
dec
inc
cli
ss
or
mov
xor
js
jl
imul
in
jbe
int
sub
xchg
test
es
jmp
xchg
add
push
adc
retf
aas
push
sub
(bad)
sti
xor
sbb
push
adc
(bad)
pop
loope
call
dec
int
xor
xchg
xor
retf
xchg
and
popa
jo
xor
icebp
fwait
inc
fcomp
pop
aad
push
ss
sbb
ins
push
cmp
adc
or
mov
xor
push
idiv
xchg
lock
lods
add
add
gs
scas
retf
adc
fstp
sbb
sbb
cmp
lods
jns
dec
(bad)
or
stos
outs
shl
adc
mov
pop
mov
mov
lock
fs
pop
in
pop
loopne
adc
ja
inc
mov
inc
pusha
inc
xchg
mov
inc
movs
aaa
sub
fild
popa
jp
push
jmp
outs
test
inc
push
pop
dec
sub
mov
or
xor
ret
test
mov
sub
inc
inc
xor
xor
inc
xchg
loopne
scas
xchg
xor
jb
xlat
sbb
mov
js
fisttp
jle
jno
cmp
scas
arpl
dec
xchg
sub
daa
add
imul
mov
jb
pop
movs
mov
mov
or
cmps
xchg
scas
popf
repnz
or
je
stos
jecxz
push
mov
js
push
ins
jg
vunpckhpd
sbb
loope
sar
pop
pop
jl
push
adc
mov
aad
xor
out
cmp
clc
mov
or
std
jne
sub
inc
inc
xor
repnz
in
pop
or
push
dec
dec
xor
jge
enter
loope
mov
fdivr
pop
xlat
or
mov
push
cmp
mov
das
push
or
in
scas
lods
mov
ss
cmp
inc
pop
inc
pop
adc
xchg
mov
clc
hlt
and
mov
aam
or
adc
fadd
add
mov
sbb
into
push
(bad)
or
push
add
je
mov
shr
push
cli
inc
add
mov
mov
pop
jbe
push
leave
fs
mov
push
dec
or
movs
icebp
sub
or
arpl
fistp
(bad)
aaa
jg
dec
xor
mov
out
mov
in
scas
fs
xor
ror
pop
inc
leave
push
inc
pop
out
bound
ins
sti
mov
cmp
cmp
add
es
int3
adc
adc
push
movs
lds
jge
cmc
dec
sbb
call
xchg
pop
inc
nop
push
shl
hlt
mov
cmp
push
imul
xchg
repz
add
in
mov
cmp
add
imul
mov
stos
es
sbb
cld
stos
adc
fstp
aad
push
jne
push
and
ror
in
and
mov
or
push
xor
mov
fwait
mov
mov
or
out
cli
inc
sub
or
pop
dec
sbb
int
and
add
xor
out
test
lea
jne
pop
xor
jne
jbe
lahf
pop
imul
xchg
mov
cmc
aas
in
sbb
shr
jg
test
jle
sub
sub
std
cmp
es
push
push
mov
int3
dec
cld
ds
or
dec
test
je
(bad)
js
jle
mov
mov
ficomp
retf
adc
mov
adc
add
punpckhdq
dec
sbb
lock
adc
push
jbe
push
imul
mov
repz
jecxz
outs
sbb
enter
sbb
retf
sub
cld
pop
lds
pop
cmc
pop
or
pop
(bad)
adc
push
mov
push
inc
retf
inc
or
scas
loope
xrelease
loope
test
test
or
xor
jne
in
push
addr16
sbb
pop
stos
out
movs
lahf
mov
jbe
or
pop
pop
and
ret
push
xchg
cmc
aas
call
aas
or
xor
add
scas
pusha
inc
pop
neg
pop
frstor
adc
xor
jae
cmp
cwde
mov
xchg
bound
xor
pop
xchg
mov
test
cmps
or
sahf
jge
(bad)
push
enter
icebp
mov
mov
cmp
retf
ss
sbb
cmps
xchg
mov
cmp
push
xchg
ret
sub
fsub
das
mov
mov
dec
daa
jmp
hlt
pop
gs
movs
dec
clc
inc
jmp
lock
adc
jg
dec
mov
cmp
inc
jo
movs
jo
retf
ins
js
inc
or
(bad)
mov
mov
push
fisubr
jge
jmp
and
cmp
sti
cmc
add
sub
add
out
scas
mov
js
and
dec
cmp
dec
mov
ror
xchg
mov
mov
clc
xchg
inc
xor
cdq
bound
push
in
jle
(bad)
push
dec
rol
sbb
mov
retf
sub
cmp
cmc
das
mov
push
push
xor
ja
ret
push
add
test
lea
les
inc
inc
mov
scas
pop
mov
cmp
push
dec
lods
sahf
stos
and
or
add
clc
ret
clc
or
movups
dec
inc
inc
or
mov
into
pop
mov
jp
cmps
pop
mov
out
and
loopne
arpl
cmp
popa
repz
(bad)
mov
sub
jl
pop
push
jmp
sub
dec
inc
jns
xchg
cmps
mov
jb
dec
add
(bad)
ficomp
pop
imul
xchg
dec
jp
ins
imul
or
push
or
rcr
int
push
push
pop
and
arpl
test
lods
push
mov
jmp
inc
js
xlat
imul
jns
out
imul
mov
jle
adc
pop
adc
rcl
mov
lahf
cmp
jne
mov
inc
out
jp
loopne
mov
push
pop
xchg
or
mov
or
pop
inc
xor
in
mov
sub
nop/reserved
ins
push
xor
sbb
sti
xchg
dec
mov
scas
push
nop
or
div
cs
outs
adc
sbb
in
sti
push
aad
out
enter
js
mov
pop
push
dec
mov
and
jp
pop
lea
aas
movs
xor
jne
js
lods
mul
jg
inc
mov
or
(bad)
and
addr16
jno
mov
push
nop
ret
sbb
hlt
and
or
or
rcl
retf
jbe
push
retf
sbb
cli
add
sub
jns
xor
pusha
inc
nop
test
cmp
fs
inc
or
xchg
enter
and
movs
and
pop
jno
(bad)
mov
dec
or
mov
cmp
es
movq
sub
ja
inc
sub
xchg
push
ret
jle
fstp
lahf
xchg
jmp
nop
pop
ds
push
inc
fmul
or
(bad)
imul
std
sub
push
add
cmp
pusha
inc
xchg
movs
push
enter
into
inc
or
mov
cmp
xlat
push
pop
hlt
pop
fst
fwait
loop
inc
test
push
dec
xor
mov
dec
dec
(bad)
repz
or
xor
jno
arpl
mov
add
inc
aad
sbb
jmp
imul
(bad)
push
inc
fimul
pop
hlt
mov
inc
std
das
ror
adc
fs
pusha
inc
pushf
mov
inc
fimul
pop
cdq
xchg
mov
stos
shr
mov
(bad)
jl
(bad)
mov
jle
inc
push
ins
mov
lods
and
cmp
jl
enter
or
pop
sbb
js
arpl
mov
pop
scas
jno
retf
leave
xor
add
mov
in
inc
imul
scas
push
cmc
jae
sub
push
add
js
sbb
jl
ins
xchg
mov
in
gs
inc
jb
mov
mov
fwait
sbb
fld
mov
or
jbe
sbb
and
cmp
es
cmps
ror
add
js
push
dec
pushf
ror
xchg
mov
push
repz
test
cmp
mov
jmp
inc
iret
inc
push
imul
daa
lds
and
mov
jge
jo
mov
ins
cld
dec
or
mov
lods
movs
pop
ins
ret
push
jl
iret
sub
pop
dec
mov
cmps
daa
sbb
xor
ins
lock
mov
or
cmp
arpl
mov
and
fxch
adc
mov
jg
add
js
clc
sbb
cld
inc
jne
hlt
mov
inc
in
ret
push
jnp
xor
jnp
inc
mov
push
retf
gs
jl
mov
call
imul
fstp
jmp
push
pop
sbb
daa
push
cmp
fist
push
and
call
mov
or
lock
sbb
aad
imul
call
inc
pop
pop
hlt
test
(bad)
stc
es
pop
jnp
adc
jns
adc
jg
dec
xchg
mov
jo
inc
or
call
rcl
xchg
or
push
pop
lahf
icebp
xchg
inc
test
sub
mov
lods
and
or
cs
rcr
cmps
or
sub
cdq
mov
test
lds
xchg
imul
dec
outs
dec
retf
pop
loopne
jnp
push
dec
(bad)
aas
add
sar
push
jae
jmp
inc
(bad)
inc
push
jle
xchg
mov
repnz
mov
mov
or
jle
jmp
outs
aam
mov
sbb
sbb
inc
mov
popf
or
sbb
clc
fstp
mov
and
rcl
imul
(bad)
inc
fiadd
xor
stc
jnp
jl
and
push
and
jnp
xor
pop
adc
mov
mov
gs
dec
or
cdq
mov
fwait
mov
loopne
jl
loop
inc
cmp
jb
sbb
pop
adc
(bad)
enter
adc
cs
inc
mov
or
aad
ds
mov
cmp
stc
outs
cmp
push
fs
pop
lock
jne
dec
stc
aas
(bad)
or
ss
call
inc
xchg
mov
je
inc
or
fwait
mov
mov
xlat
push
push
lahf
in
inc
cmc
cmp
inc
inc
sbb
out
daa
adc
(bad)
mov
outs
sub
sbb
jb
arpl
mov
add
inc
ss
push
or
mov
sbb
repnz
imul
xor
mov
dec
std
and
add
add
sbb
jg
push
mov
outs
push
retf
jl
xchg
mov
call
xchg
or
ins
inc
lods
jmp
and
cmp
sub
mov
pop
or
or
pusha
sub
pushf
push
ret
jle
or
or
inc
sbb
mov
dec
cmp
jb
inc
fld
pop
icebp
xchg
jg
jge
sub
or
ins
in
and
jp
inc
test
ja
dec
or
sti
mov
fwait
rcl
mov
xchg
ins
mov
das
cs
clc
int3
aam
mov
pop
cmp
adc
pusha
test
pop
retf
outs
mov
jns
mov
popa
sti
jmp
mov
xor
out
dec
aaa
sbb
outs
push
retf
pop
neg
mov
push
js
adc
ja
adc
outs
jo
xchg
mov
movs
dec
pop
clc
inc
push
ja
fwait
mov
fwait
cmps
push
gs
push
jl
(bad)
pusha
fs
add
adc
clc
mov
or
or
and
arpl
mov
or
sti
(bad)
push
mov
and
not
outs
cmp
je
inc
cld
inc
push
ror
sub
cmp
add
ds
(bad)
sbb
test
retf
arpl
jl
xchg
mov
lods
cmps
jo
hlt
jno
push
pop
fwait
leave
xor
cmp
jb
sbb
xor
hlt
enter
and
das
pop
pop
pop
xor
imul
stc
pop
scas
inc
rol
or
test
cmp
idiv
(bad)
jno
inc
cld
inc
push
adc
arpl
sub
push
add
and
jl
inc
mov
push
movs
jmp
xchg
xchg
test
js
push
dec
and
xchg
sub
jbe
sbb
int
xor
sub
jl
mov
dec
cmp
ins
pop
xor
sub
pushf
pop
(bad)
imul
(bad)
adc
mov
cmp
cli
adc
(bad)
dec
fiadd
pop
fisttp
aas
leave
push
add
add
jbe
inc
and
xchg
cmps
mov
mov
(bad)
mov
test
dec
or
addr16
and
mov
and
jne
outs
mov
or
stc
pop
mov
int
aas
lea
jb
cmp
jo
(bad)
fs
inc
cld
inc
push
les
push
(bad)
cmp
cmp
and
jo
stos
mov
je
inc
or
xchg
scas
lods
xchg
and
jo
push
pop
xchg
jmp
mov
or
adc
in
pushf
daa
adc
xor
ins
fdivr
mov
cmp
xor
add
push
mov
cmps
std
sub
jmp
sub
shl
cs
cmp
jp
data16
dec
jp
in
jo
inc
lock
inc
jmp
cmps
jl
cmp
push
inc
dec
cmp
sbb
push
hlt
jo
push
dec
test
and
jbe
pop
dec
call
push
jl
enter
sbb
and
jns
arpl
mov
push
cmps
inc
test
pusha
shr
cmp
outs
jl
call
sbb
popa
cmc
ror
or
sbb
jg
push
cwde
mov
mov
or
call
mov
fcom
lahf
fadd
popa
inc
movq
int
das
add
lock
mov
cvtps2pd
pop
and
popa
cli
cmps
pop
shr
or
repnz
mov
imul
jbe
dec
retf
sbb
test
push
stc
sbb
or
xor
and
dec
in
pop
enter
leave
jnp
push
mov
shl
adc
sti
sbb
aas
bound
ins
xchg
shl
dec
cld
les
lsl
outs
and
arpl
mov
bound
ror
sbb
repz
outs
cmp
fs
inc
cld
inc
inc
das
in
jnp
data16
sub
or
cmps
dec
dec
and
jae
call
into
dec
or
xchg
xchg
cmps
push
pop
sar
push
pop
mov
lock
test
or
sbb
daa
sbb
(bad)
cld
mov
or
das
pop
and
arpl
mov
jns
xchg
pop
mov
xchg
mov
or
movs
push
cmp
in
jb
inc
(bad)
dec
push
xor
pushf
dec
test
lock
xor
mov
out
pop
and
bound
test
std
pusha
je
push
sbb
mov
fwait
movs
push
outs
in
ins
fimul
lods
loopne
push
mov
or
sub
sub
pop
add
shl
test
sub
jge
imul
loope
pushf
imul
mov
sti
loope
xchg
mov
outs
cmp
test
loope
push
cmp
jae
add
sub
and
repnz
mov
loope
and
inc
dec
xchg
mov
ja
inc
add
xchg
call
pop
outs
out
call
fwait
repz
cmp
jo
push
jbe
out
aaa
push
xor
and
fisub
or
sbb
jno
inc
mov
lock
sti
(bad)
sub
mov
push
dec
retf
adc
push
jmp
(bad)
cmp
add
mov
and
push
inc
loop
pop
mov
popa
or
cmps
mov
push
push
hlt
je
push
jg
jecxz
push
sub
pop
pop
inc
call
push
dec
ret
(bad)
mov
cmp
add
pop
sub
sar
or
out
lds
(bad)
fldcw
or
jo
jmp
pop
jecxz
inc
clc
sub
sub
sbb
jnp
xor
and
inc
inc
xchg
mov
push
into
inc
or
xchg
mov
mov
push
pop
mov
and
jb
sbb
and
das
cmp
jl
shl
adc
jno
jno
sahf
ja
or
cmps
push
inc
sbb
lds
cmp
outs
ins
dec
in
inc
inc
sbb
push
inc
push
cmp
lahf
jle
adc
mov
inc
retf
pop
lea
and
sbb
jns
push
push
mov
add
or
adc
daa
sbb
es
sub
sub
adc
pop
and
xchg
push
ret
outs
mov
pop
or
pop
xchg
mov
data16
out
outs
cmp
int3
push
pop
adc
mov
inc
jmp
add
push
fwait
jg
or
inc
mov
bound
cmp
mov
lock
ficomp
mov
xor
adc
sbb
daa
xor
shl
sub
pop
xor
outs
call
sbb
dec
jecxz
sbb
aam
pop
and
jmp
outs
gs
dec
js
xchg
sub
sbb
sub
dec
mov
or
dec
pop
mov
inc
jo
push
sub
cmps
xor
movs
pusha
dec
loop
repnz
inc
mov
mov
imul
retf
dec
lsl
in
or
add
clc
test
addr16
out
adc
lock
xor
sbb
cmc
inc
and
jno
pop
int3
pop
jle
xchg
pop
rol
sub
lahf
neg
add
inc
or
outs
xchg
mov
mov
xlat
adc
cld
or
push
popf
int3
repnz
xchg
sub
bound
pop
mov
and
or
iret
sar
das
adc
adc
dec
mov
mov
jns
cmps
dec
(bad)
(bad)
stc
out
ins
fwait
retf
in
outs
dec
add
js
enter
ret
pop
hlt
and
retf
sub
push
push
add
es
lahf
sbb
mov
mov
ja
pop
cdq
lods
mov
mov
push
sbb
jle
inc
sub
or
popa
call
xor
mov
ds
add
xchg
pop
mov
mov
add
clc
neg
leave
mov
inc
cs
pop
inc
fiadd
pop
test
add
ss
pop
ja
cmps
mov
je
jp
pop
mov
mov
xchg
mov
loop
pop
loop
nop
xor
es
mov
call
(bad)
(bad)
mov
cmp
sbb
bound
inc
mov
mov
sub
in
loop
out
push
sub
icebp
inc
and
inc
bound
in
or
inc
out
sbb
pop
ret
jl
sbb
jo
addr16
imul
xchg
xchg
mov
sti
add
jp
jbe
mov
cmp
outs
adc
ret
or
dec
cmp
aam
push
inc
cmp
pop
xor
cmp
sub
mov
pop
test
mov
mov
and
leave
xor
mov
cmp
dec
push
arpl
inc
inc
cmp
or
inc
out
add
push
cli
and
dec
mov
jle
mov
sub
xchg
mov
aas
lea
lock
(bad)
loopne
push
lock
or
jbe
call
or
mov
pop
sub
xor
pop
fiadd
test
mov
inc
sti
lds
cdq
and
(bad)
cmps
sbb
sbb
jb
pop
test
clc
push
aad
(bad)
pop
in
xor
mov
fcom
push
outs
gs
mov
jo
push
adc
call
mov
ins
out
fst
lods
loopne
jns
cmp
mov
lods
and
adc
enter
push
dec
cmp
cmp
arpl
xchg
pushf
or
jmp
or
mov
xlat
jns
mov
jle
lock
or
stc
jnp
push
lea
shl
punpckhwd
pop
mov
in
adc
jne
inc
mov
pusha
mov
sub
xchg
jle
dec
sub
sub
mov
lods
push
adc
xor
and
dec
pop
data16
xchg
ins
ret
shrd
test
in
aas
mov
mov
and
not
aad
ins
inc
repnz
push
sub
sub
pop
add
sti
xor
es
dec
mov
popa
jo
push
or
sahf
stos
lods
jmp
outs
mul
jno
lods
loopne
push
lock
adc
sbb
lock
add
aaa
cmp
jns
enter
and
push
adc
pop
and
cmp
shr
std
sub
loopne
aas
in
sbb
xlat
aad
xor
std
inc
sbb
push
ins
inc
fldcw
data16
mov
cli
add
or
sub
sbb
pop
jbe
mov
push
int
push
pop
lods
mov
sub
jle
jo
mov
mov
pusha
xor
jbe
cld
lahf
cmp
sub
and
mov
pop
xor
pop
sub
cmp
in
lahf
cdq
dec
xchg
dec
std
imul
and
test
inc
cmp
cli
push
outs
aad
inc
outs
(bad)
mov
sbb
fnsave
cmps
push
retf
push
adc
imul
pusha
mov
adc
cld
pop
or
xchg
test
push
pop
cld
push
out
dec
mov
das
inc
inc
adc
mov
pop
xlat
fisttp
cmp
ss
add
fwait
arpl
addr16
jns
mov
ret
mov
es
dec
dec
add
pusha
jl
shl
sub
mov
inc
lea
in
sub
pushf
pop
ret
jg
inc
xchg
mov
outs
mov
cmps
mov
adc
movs
cs
out
inc
retf
cdq
out
push
add
pop
repnz
push
pop
sbb
pop
pop
fmul
shr
cmp
sub
je
xchg
dec
iret
imul
cmps
dec
stc
ret
ins
or
js
test
aaa
shl
ror
ror
or
or
add
jae
inc
xchg
mov
mov
imul
lods
nop
in
mov
inc
bound
cmp
pop
push
lods
and
dec
cmp
inc
retf
scas
mov
pop
cs
jns
jno
data16
ror
scas
pop
lods
popa
clc
ror
mov
push
add
outs
inc
std
inc
pop
not
cmp
cld
dec
in
inc
jmp
loop
sbb
sbb
adc
stos
jae
fidiv
fnsave
sub
mov
and
outs
lock
mov
add
adc
sub
loop
pop
add
adc
dec
rol
mov
add
push
and
(bad)
pop
ret
jle
dec
mov
(bad)
in
push
in
add
and
push
arpl
arpl
xchg
push
out
push
fstp
push
xor
dec
cmp
daa
dec
jo
xchg
movs
inc
mov
push
je
inc
push
sub
sti
push
cmps
mov
ins
shl
push
pop
nop
call
push
jb
sbb
and
ror
mov
mov
and
arpl
add
push
or
fwait
outs
test
call
sub
mov
cmp
mov
jmp
push
data16
ss
ror
xlat
push
es
loop
mov
sbb
pop
inc
pop
nop
int3
jae
std
ins
push
int3
inc
sbb
mov
mov
outs
sar
push
pop
xchg
out
outs
cld
or
jge
call
adc
push
lock
xchg
and
or
dec
sub
cmps
in
sub
jp
shr
scas
pop
mov
mov
mov
sbb
pop
ds
push
push
test
cmp
std
and
cmp
push
jl
ss
enter
inc
inc
xchg
mov
(bad)
arpl
inc
ds
xchg
cmp
mov
out
jbe
mov
mov
pop
aas
sbb
aas
add
or
or
jb
inc
mov
fld
inc
clc
xlat
push
(bad)
mov
imul
retf
pusha
dec
inc
fisubr
cmp
(bad)
ja
pop
repnz
aam
es
push
dec
jl
pop
push
addr16
dec
jecxz
addr16
jmp
(bad)
inc
and
mov
mov
dec
hlt
pop
(bad)
nop
int
push
xchg
adc
sbb
xchg
add
cmp
cmp
mov
and
adc
in
outs
loope
mov
pop
test
mov
jecxz
xor
mov
fsubr
call
fs
cmp
test
cmp
or
jne
jmp
cmps
ins
sar
mov
jbe
outs
sub
xchg
mov
cmps
rcl
xchg
jne
push
cs
add
imul
and
and
xchg
mov
sbb
or
jnp
xchg
ret
sahf
cwde
pop
mov
(bad)
icebp
push
mov
mov
sbb
ror
gs
(bad)
jo
push
pop
retf
adc
inc
mov
call
inc
movs
lahf
jns
leave
jge
fisubr
dec
lods
cmp
std
jb
push
pop
mov
hlt
inc
adc
add
ins
call
pop
dec
sti
retf
mov
inc
sub
sbb
jb
js
mov
(bad)
fistp
mov
inc
sbb
movs
push
sub
sbb
inc
push
sti
arpl
cmp
or
pop
mov
addr16
pop
adc
inc
xchg
cdq
pop
mov
inc
or
xchg
stos
test
sti
pop
lea
fst
fwait
jecxz
push
test
sbb
mov
fwait
add
sub
push
dec
(bad)
(bad)
cmp
sub
and
pop
arpl
mov
cmp
mov
push
sti
lds
xchg
sbb
push
(bad)
dec
jge
ret
dec
and
repnz
pop
or
pusha
jmp
mov
int3
adc
jl
push
xchg
mov
je
ja
dec
sahf
cdq
mov
mov
or
push
inc
fwait
loopne
push
stos
cmp
je
push
ins
mov
inc
add
pop
(bad)
int
cmps
mov
or
pop
add
xchg
jns
imul
movs
xor
mov
sbb
stos
push
or
icebp
arpl
sti
jne
fs
push
pop
or
pop
xlat
cmp
jg
inc
popf
movs
inc
(bad)
push
retf
pop
popf
xchg
mov
lods
test
ret
push
pop
pushf
fsub
push
inc
cmp
xlat
test
popa
cmp
add
sub
jb
arpl
mov
dec
cmps
inc
stc
leave
sbb
mov
cmc
sbb
sar
fs
inc
push
cmp
hlt
push
(bad)
jle
sub
aas
adc
jg
inc
mov
jb
pop
movs
sahf
jns
ret
gs
inc
sbb
mov
daa
lods
mov
out
push
bound
cmp
jp
pop
ins
mov
test
es
mov
sub
sbb
jge
arpl
mov
or
(bad)
in
cmp
(bad)
jl
cli
imul
fistp
sub
and
cwde
pop
clc
pop
sbb
pop
jo
mov
pop
lds
sub
xor
push
push
dec
fwait
loopne
pop
mov
add
xor
ins
mov
test
sub
ds
fyl2xp1
xchg
mov
sub
sub
xor
adc
fwait
clc
sbb
(bad)
sbb
shl
push
cmp
push
inc
fisub
icebp
mov
push
std
sub
jl
add
xor
das
pop
pusha
inc
jecxz
pop
mov
xor
pop
in
xchg
mov
test
and
mov
test
pop
(bad)
loopne
xchg
or
pusha
lods
in
daa
adc
add
mov
sub
pop
xor
jp
xchg
ins
ret
js
(bad)
or
aad
sbb
sub
std
pop
cmp
bound
fiadd
pop
repnz
jnp
arpl
push
shr
es
add
pop
add
push
xchg
cmps
inc
mov
gs
inc
sub
mov
fwait
cmps
push
test
xchg
loopne
push
cld
inc
or
das
ins
fwait
jecxz
ss
fcmove
mov
sub
dec
and
arpl
mov
or
clc
mov
nop
stos
xor
shl
hlt
push
fs
inc
fs
std
test
inc
icebp
add
push
es
jl
and
pusha
dec
nop
mov
fs
jnp
pop
adc
outs
in
hlt
push
pop
fwait
loopne
inc
mov
or
add
cmp
jl
mov
dec
sbb
sub
pop
popa
popf
xchg
pop
(bad)
dec
mov
or
jmp
(bad)
xchg
imul
sti
imul
std
stos
jnp
push
(bad)
pop
(bad)
sub
cmp
xor
xor
cmps
mov
push
int
or
sahf
cwde
mov
push
outs
idiv
push
push
xchg
loopne
inc
xchg
or
push
lods
jecxz
cmp
cmp
and
fmulp
mov
sub
sbb
pushw
popa
lods
xchg
(bad)
(bad)
jle
fisttp
xchg
xchg
pop
add
sbb
aad
sbb
or
outs
cmp
popa
push
inc
shr
hlt
or
test
retf
adc
sbb
jl
xor
cmp
dec
or
lea
mov
fst
jmp
xchg
pop
sbb
sub
jmp
pop
bound
cmp
lock
or
pop
adc
inc
lods
xchg
pop
aad
mov
cmpxchg
lds
(bad)
fstp
sbb
inc
cmp
push
inc
mov
push
pop
icebp
stc
jnp
push
retf
sub
push
or
jbe
ds
out
pop
sbb
mov
jbe
inc
push
dec
xchg
xchg
movs
(bad)
push
jne
jne
push
pop
out
loopne
dec
mov
or
push
lods
out
add
jl
cld
mov
or
sbb
jb
arpl
mov
or
mov
push
lds
shl
ds
bound
pop
push
sbb
mov
cmp
sub
jnp
cmp
pusha
inc
movs
stos
push
mov
gs
dec
or
xchg
mov
mov
fstp
xchg
loopne
gs
cmp
jle
push
popa
popf
out
lods
cmp
or
enter
adc
cmp
cmp
or
arpl
mov
or
scas
pop
xchg
out
sbb
aam
imul
std
bound
fiadd
sub
mov
arpl
daa
(bad)
or
add
inc
mov
jg
inc
stos
mov
jno
inc
add
xchg
popf
mov
inc
push
dec
ficom
mov
add
push
add
ins
call
es
fucomp
mov
sub
sbb
push
xchg
pop
retf
vpcmov
repz
sbb
(bad)
into
sbb
sbb
push
inc
test
push
sbb
push
xlat
ds
or
mov
jge
push
nop
mov
arpl
inc
sub
mov
and
mov
enter
loopne
xchg
sbb
mov
lods
daa
push
dec
dec
es
(bad)
mov
pop
xor
push
daa
imul
ret
jp
repz
test
mov
mov
mov
outs
add
push
gs
dec
pop
sbb
test
push
std
sub
push
and
(bad)
xor
and
dec
in
inc
mov
addr16
fimul
pop
mov
les
sahf
mov
inc
hlt
push
out
inc
sub
mov
push
dec
cmp
jecxz
daa
adc
ror
cmps
cmp
cmp
in
(bad)
dec
nop
stc
or
sti
rcr
xchg
xor
shl
cmp
popa
dec
inc
ficom
pop
test
jg
xor
js
push
mov
inc
mov
inc
or
mov
scas
mov
push
imul
std
push
pop
mov
sbb
jno
sbb
daa
add
stos
fist
das
and
cmp
mov
jno
cwde
pop
scas
inc
mov
adc
div
cmp
dec
outs
inc
retf
sbb
stc
jae
inc
fld
into
sub
add
adc
jg
push
call
fimul
jl
popf
mov
mov
call
xchg
jmp
push
sub
call
and
and
and
sbb
and
test
ret
mov
add
xchg
ins
cmp
cli
dec
xor
inc
outs
inc
jecxz
jbe
in
pop
cmc
push
jmp
adc
adc
jl
inc
nop
mov
inc
retf
jo
loope
stos
mov
jg
loop
rcr
out
(bad)
and
jb
cmp
daa
push
xor
and
mov
and
das
cmp
pop
or
mov
ins
mov
add
jmp
sub
jl
sbb
data16
dec
pop
push
jecxz
inc
pop
neg
loopne
adc
ss
dec
inc
pusha
xchg
mov
cmps
sti
gs
inc
or
call
cmps
push
outs
in
rcl
xchg
in
je
xor
push
inc
push
imul
fcmovu
mov
or
or
ret
ins
ret
test
scas
pop
scas
popa
sti
int3
adc
not
addr16
clc
ja
inc
fist
pop
fdivr
push
icebp
(bad)
std
daa
retf
and
and
pop
pop
xchg
jge
xor
pop
call
lods
mov
in
std
push
push
mov
inc
sbb
jecxz
and
cmp
outs
fnstsw
pop
cmp
sbb
arpl
ror
and
jmp
sbb
imul
popa
cmp
push
pop
fidiv
jno
shl
sub
push
add
jg
xor
jge
push
xchg
mov
je
or
fwait
mov
mov
or
push
pop
fwait
jecxz
inc
std
cmp
jb
sbb
out
mov
es
icebp
cmps
mov
push
xor
pusha
cdq
cmps
pop
mov
mov
or
ror
adc
shl
fsub
aas
fimul
aas
in
jb
jl
sub
and
jg
inc
cmps
pop
std
sbb
pusha
xchg
sahf
pop
sar
je
inc
add
sti
mov
mov
(bad)
pop
lods
lds
jb
adc
mov
mov
es
call
sbb
arpl
mov
or
inc
sub
mov
jg
(bad)
outs
push
aaa
push
pop
fst
(bad)
push
sub
jb
add
jg
dec
xchg
xchg
inc
xchg
iret
dec
(bad)
dec
aas
ins
sahf
sahf
mov
mov
fst
xchg
loop
inc
test
add
cmp
lods
das
add
shr
movs
mov
es
sbb
adc
pop
sub
loope
retf
std
or
mov
push
sti
loopne
mov
cmp
out
push
sbb
push
pusha
fidiv
sbb
mov
dec
mov
(bad)
cs
jnp
inc
mov
adc
(bad)
push
or
xchg
mov
mov
test
add
or
dec
sbb
daa
push
xor
adc
cmps
enter
push
pop
and
pop
or
push
mov
sar
push
mov
sti
aad
pushf
mov
imul
(bad)
adc
leave
pusha
push
pop
(bad)
jnp
push
retf
and
cmp
jb
ss
jg
pusha
xchg
mov
pop
loopne
rsqrtps
fisub
fwait
test
retf
push
pop
fwait
jecxz
push
mov
adc
and
dec
aaa
es
fsub
add
sub
jp
mov
mov
mov
inc
not
adc
lods
ins
sub
(bad)
push
inc
fimul
pop
test
add
ds
loopne
push
jg
push
fbstp
mov
sbb
mov
pop
xchg
test
hlt
dec
dec
out
retf
mov
or
jae
call
and
enter
dec
ss
inc
jne
pop
pop
inc
or
adc
cwde
or
iret
sbb
mov
jns
std
addr16
fidiv
dec
pop
hlt
mov
dec
out
(bad)
push
add
ss
jmp
mov
je
inc
or
xchg
test
mov
retf
push
pop
xchg
loopne
push
xchg
or
sbb
daa
adc
xor
cmps
mov
cmp
sub
pop
jno
arpl
test
mov
lds
test
or
mov
push
inc
into
push
inc
pop
repz
inc
stc
sub
and
lods
jl
xor
dec
mov
fidiv
or
sbb
out
fld
mov
mov
push
or
sub
shr
xor
cmps
shl
push
pop
sbb
push
add
sub
mov
pop
xchg
(bad)
jne
inc
cld
call
or
mov
push
fs
inc
js
hlt
mov
ins
shr
ret
jo
adc
pusha
inc
sub
jl
mov
and
rcl
in
fnstenv
fwait
loopne
inc
test
or
adc
in
lahf
and
or
and
sbb
imul
rcr
xchg
test
lds
xchg
popa
cmp
dec
ja
fiadd
sbb
mov
std
aas
(bad)
jg
and
sbb
jns
dec
xchg
into
push
pop
arpl
shr
popf
mov
fst
out
loopne
xor
ins
push
mov
mov
sub
enter
cmp
and
cmp
sub
mov
ret
jnp
cmc
or
lock
shl
sbb
inc
cld
inc
cmp
cwde
sub
outs
adc
in
adc
jg
jo
mov
inc
mov
sti
sti
rol
lds
mov
mov
xor
mov
outs
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
pusha
dec
outs
adc
out
adc
jg
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
ins
mov
lods
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
rcr
mov
push
inc
fiadd
pop
ret
test
(bad)
push
add
ss
enter
pusha
dec
xchg
mov
je
inc
or
mov
mov
fst
fwait
loopne
inc
mov
or
sbb
daa
add
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
cmp
jg
inc
xchg
mov
je
inc
or
xchg
mov
lods
cmps
push
outs
in
fst
fwait
loopne
inc
test
or
ins
mov
lods
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
rcr
mov
push
inc
fiadd
sbb
mov
inc
in
(bad)
push
or
ss
fcom
and
pusha
inc
xchg
mov
je
inc
or
mov
mov
fst
fwait
loopne
inc
pushf
cmp
jb
pop
ins
mov
lods
and
cmp
es
(bad)
enter
and
sub
pop
add
test
jle
icebp
or
sti
lds
shl
push
inc
ficom
pop
hlt
mov
inc
std
sub
push
add
es
out
adc
jg
inc
xchg
mov
je
inc
or
xchg
mov
fwait
cmps
push
outs
in
fst
fwait
out
inc
test
or
ins
mov
lods
daa
adc
jecxz
mov
sub
sbb
jno
arpl
mov
sub
adc
mov
push
inc
cld
inc
push
pop
xchg
jnp
dec
fstp
(bad)
push
and
jge
ss
sahf
pop
push
pop
dec
outs
cmps
cmps
daa
mov
inc
sbb
mov
cmps
jge
repz
pop
pop
mov
cmp
jb
ss
lock
xor
cmp
es
and
sub
push
inc
jp
inc
stc
pushf
pop
ret
jle
test
mov
inc
sti
lds
shl
bound
xchg
adc
fisubr
hlt
mov
arpl
pop
(bad)
or
xor
jg
inc
xchg
mov
jle
inc
or
sahf
mov
lods
cmps
push
outs
in
add
push
pop
fwait
les
push
inc
sbb
daa
adc
ror
mov
cs
sub
shr
or
sti
rcr
mov
push
inc
fiadd
sbb
mov
inc
std
sub
push
add
ss
out
adc
jg
cmp
gs
inc
add
xchg
mov
mov
jge
pop
pop
fwait
out
dec
cmps
cmp
jb
sbb
jmp
es
mov
pop
sub
sbb
jne
arpl
mov
or
sti
ret
sbb
shl
cmp
push
inc
fcomp
ins
hlt
mov
dec
mov
call
hlt
cmp
jg
ins
nop
mov
mov
gs
inc
add
xchg
mov
mov
fcomp
fwait
out
inc
stos
xor
jb
pop
ins
fwait
xchg
mov
outs
in
test
jmp
pop
sub
adc
xor
and
mov
cld
or
mov
sbb
shr
dec
std
push
inc
shr
ins
hlt
test
dec
in
mov
or
cmp
jg
pusha
xor
ret
pop
xchg
xchg
mov
lods
fist
in
add
je
loop
or
jb
sbb
out
sub
cmp
es
movs
mov
pop
and
push
add
in
into
dec
mov
or
sti
retf
sbb
out
pusha
cmp
fdivr
std
bound
aad
inc
data16
ds
push
es
jnp
inc
cmps
jbe
adc
jg
cmp
push
add
xchg
mov
mov
retf
pop
pop
fwait
out
dec
cmps
sub
jb
sbb
(bad)
mov
outs
retf
cmps
xchg
pop
cs
push
push
xor
arpl
mov
or
sti
ret
sbb
shl
jg
std
bound
retf
xor
mov
dec
std
ds
push
es
jnp
adc
jg
inc
mov
jl
(bad)
gs
pop
add
xchg
mov
mov
ret
jmp
jb
sbb
xchg
mov
and
aas
es
cmps
xchg
mov
pop
and
add
jns
arpl
mov
or
ret
sbb
stc
movs
outs
cmp
mov
retf
imul
sbb
mov
inc
std
or
cmp
push
jnp
add
jns
adc
jg
dec
mov
jl
(bad)
gs
arpl
pop
mov
ror
in
fst
fwait
jecxz
inc
test
or
mov
lods
and
cmp
es
(bad)
enter
xor
es
push
pop
adc
pushf
pop
ror
or
fld
sbb
mul
imul
inc
push
or
mov
xlat
sub
sub
adc
inc
mov
jg
aaa
xchg
mov
addr16
inc
and
mov
mov
push
ficom
cdq
fild
bound
ins
mov
lods
and
imul
mov
sub
sbb
jno
arpl
pushf
test
mov
jno
ficomp
shl
push
inc
fldcw
ror
and
push
and
mov
(bad)
adc
jg
inc
xchg
mov
clc
gs
inc
sub
mov
mov
fst
cwde
fild
inc
inc
or
daa
adc
(bad)
enter
and
sub
pop
sbb
arpl
mov
or
clc
int
mov
mov
push
inc
fsub
sbb
mov
iret
sub
push
and
jnp
ss
xlat
sbb
jg
push
xchg
cwde
arpl
inc
push
pop
xchg
movs
mov
fwait
movs
jae
loopne
fst
fwait
loopne
inc
scas
and
jb
sbb
jecxz
xor
jl
enter
and
sub
and
cwde
pop
ret
jle
aad
test
sbb
out
imul
std
popa
jl
rcl
or
dec
in
les
es
jnp
es
jg
ins
fwait
cwde
push
mov
gs
dec
das
dec
xchg
xchg
mov
fwait
mov
shl
lahf
out
dec
icebp
xor
inc
sbb
out
movs
add
retf
mov
and
pop
adc
das
arpl
mov
or
inc
sbb
shl
in
imul
cmp
mov
dec
mov
jnp
es
jg
fs
cdq
inc
mov
gs
dec
das
dec
xchg
xchg
mov
fwait
mov
shl
lahf
out
dec
mov
sbb
shl
(bad)
rol
cmp
jl
jne
arpl
lock
ret
sbb
shl
retf
imul
cmp
mov
inc
retf
and
push
and
jnp
adc
pop
(bad)
adc
jg
cmp
gs
dec
das
dec
xchg
xchg
mov
fwait
mov
shl
lahf
out
dec
xor
inc
inc
sbb
xchg
movs
add
stos
rol
pop
adc
das
arpl
mov
or
inc
sbb
mul
adc
imul
aaa
ror
and
sub
push
jnp
es
jg
cmp
gs
dec
and
mov
lods
mov
sar
lahf
out
inc
nop
xor
push
inc
sbb
leave
cmps
rdpmc
aas
aas
outs
faddp
mov
pop
adc
jne
arpl
mov
or
inc
sbb
movs
outs
cmp
arpl
imul
aaa
ror
daa
out
sub
push
jnp
inc
mov
jg
je
cdq
inc
mov
gs
dec
das
dec
xchg
xchg
mov
lods
mov
sar
lahf
out
dec
cmps
xor
inc
sbb
jecxz
or
aas
aas
es
ret
mov
and
das
arpl
mov
or
inc
sbb
shl
in
imul
cmp
mov
dec
(bad)
jecxz
and
jnp
add
jg
pusha
cwde
cdq
inc
mov
gs
dec
das
dec
xchg
xchg
mov
fwait
mov
shl
lahf
out
dec
mov
and
ins
fwait
lds
outs
faddp
mov
cmp
das
arpl
mov
or
inc
sbb
shl
in
imul
cmp
mov
dec
test
jecxz
and
jnp
adc
jg
dec
lahf
xchg
jae
(bad)
gs
dec
das
dec
xchg
xchg
mov
fwait
mov
aam
dec
lahf
out
dec
mov
sub
inc
sbb
xchg
mov
es
clc
les
das
pop
pop
push
mov
or
inc
sbb
shl
in
imul
cmp
mov
dec
std
and
push
and
jnp
and
jg
ins
sahf
xchg
jae
(bad)
gs
dec
and
mov
fwait
mov
fsub
lahf
out
dec
stos
cmp
ins
test
mov
es
fcmovb
mov
cmp
sub
in
push
test
or
inc
sbb
out
outs
cmp
imul
das
in
jge
inc
icebp
cmp
cmp
push
jnp
add
dec
fcom
aaa
pop
push
mov
inc
jg
push
daa
ins
xchg
xchg
mov
jns
jle
pushf
rep
dec
icebp
sub
dec
test
mov
add
fisttp
and
add
mov
out
dec
mov
cs
mov
jno
(bad)
cmp
cmps
jp
or
jl
retf
gs
fnstenv
inc
xor
mov
inc
jmp
adc
inc
mov
pop
gs
xchg
jno
push
daa
ins
xchg
xchg
mov
pop
int
ins
pushf
rep
inc
xchg
sub
inc
inc
push
dec
mov
sub
gs
mov
(bad)
pcmpeqb
test
dec
mov
cs
xchg
dec
mov
(bad)
cmp
cmps
jp
add
jl
retf
gs
aad
inc
xor
mov
dec
test
jmp
and
pop
cmc
dec
mov
jg
ins
xchg
je
push
add
scas
popf
lds
lods
mov
outs
out
into
pop
jl
out
inc
icebp
and
push
pop
sbb
lds
es
lods
sbb
cmp
stos
loope
neg
jecxz
mov
inc
xchg
popa
jecxz
sbb
idiv
jo
fstp
dec
fiadd
pop
hlt
mov
inc
stc
das
int3
cmp
add
add
jg
pop
xchg
lea
shl
ret
pop
xchg
xchg
mov
lods
movs
and
add
push
dec
fwait
(bad)
mov
cmp
jb
sbb
int
push
add
ret
cmps
mov
and
sbb
packsswb
mov
pop
(bad)
outs
fucomp
sbb
mul
push
dec
xlat
je
push
inc
std
sub
push
and
jnp
cs
inc
inc
push
jg
ins
xchg
mov
jl
inc
daa
jb
cmps
mov
mov
fnstenv
cdq
test
inc
or
mov
lods
daa
adc
retf
xchg
sahf
and
cmp
pop
xor
arpl
mov
or
sti
lds
shl
ins
aas
(bad)
inc
fiadd
pop
hlt
mov
dec
in
std
push
ss
jnp
dec
mov
out
adc
push
mov
data16
ins
xchg
xchg
mov
mov
and
inc
test
or
sbb
xor
das
or
mov
and
sbb
and
in
pop
iret
outs
mov
or
stc
rcl
out
push
cmp
(bad)
push
inc
rcr
adc
xchg
jno
push
in
sub
push
add
ss
(bad)
adc
dec
dec
xchg
mov
mov
gs
inc
sub
xchg
xor
mov
fst
cdq
loopne
dec
pushf
push
jge
pop
xor
out
daa
adc
ror
mov
sub
dec
adc
xchg
pop
ret
jle
lock
cld
int3
sbb
shl
push
inc
into
ins
push
sbb
pushf
jnp
inc
std
sub
push
and
jle
add
je
inc
xchg
mov
je
push
add
mov
mov
fld
leave
add
and
sbb
push
xor
adc
mov
mov
push
sub
sbb
jae
arpl
mov
ja
inc
sti
lds
test
cmp
imul
(bad)
jp
inc
fiadd
ror
sar
and
mov
out
adc
jg
aaa
or
clc
ins
or
xchg
mov
mov
inc
outs
leave
dec
fld
mov
cmp
bound
imul
ror
mov
and
jb
arpl
mov
or
std
(bad)
sbb
rol
push
inc
ret
pop
hlt
mov
jae
sub
push
and
jnp
inc
cmps
pop
(bad)
adc
jg
fs
gs
pop
add
xchg
mov
mov
fnstcw
fwait
aam
ins
cmp
jb
aaa
addr16
lods
daa
adc
rcr
mov
es
xor
arpl
mov
or
ffree
sbb
mul
ins
and
addr16
dec
cld
inc
push
pop
hlt
mov
dec
in
loope
sub
jnp
xchg
and
imul
ins
mov
inc
add
xchg
mov
lods
movs
push
imul
fwait
xchg
mov
or
or
sar
popa
hlt
cld
mov
daa
sub
es
mov
test
mov
push
(bad)
jecxz
adc
push
inc
retf
push
inc
cmp
lahf
dec
test
(bad)
push
add
cs
std
push
das
jl
push
xchg
mov
je
inc
daa
jl
in
mov
pop
(bad)
in
fst
cdq
test
push
gs
test
fwait
daa
adc
retf
mov
sbb
jne
arpl
mov
push
xchg
pop
mov
mov
or
mov
jle
(bad)
inc
aam
push
hlt
mov
dec
stc
sub
daa
cmp
mov
jmp
and
pusha
inc
xchg
xchg
jae
loopne
pop
in
and
mov
stos
shl
movs
inc
outs
jecxz
iret
arpl
or
or
sbb
aas
sub
add
mov
sub
jae
jae
cmps
loope
in
jle
cli
push
mov
stc
(bad)
sbb
shl
adc
std
bound
rol
not
sub
or
jnp
ss
(bad)
adc
xchg
(bad)
push
mov
jne
into
inc
or
xchg
lods
mov
outs
jecxz
ficom
fwait
loopne
dec
cmp
dec
adc
jecxz
daa
adc
cmp
ins
ror
mov
nop
pop
jo
xchg
pop
ret
jle
in
sahf
pushf
inc
mov
popf
scas
xor
shl
push
inc
call
mov
sub
sbb
adc
ins
inc
inc
xchg
mov
jbe
inc
sub
nop
pushf
mov
fwait
cmps
cmp
hlt
jge
push
jl
jmp
or
ja
call
es
enter
push
pop
sbb
sbb
jae
arpl
cld
or
stc
rcr
shl
push
inc
in
inc
push
pop
ror
or
push
add
ss
(bad)
adc
xchg
mov
je
inc
or
in
mov
lods
cmps
jno
in
fst
fwait
rol
jb
sub
out
and
cmp
and
mov
pop
pop
sbb
sbb
jno
pusha
mov
or
clc
out
xchg
mov
or
mov
push
inc
in
inc
push
pop
ror
sub
cmp
js
ss
out
adc
pusha
dec
xchg
mov
je
inc
or
mov
call
outs
sar
push
jl
retf
test
or
outs
mov
lods
and
cmp
and
mov
pop
pop
sbb
sbb
jae
pusha
mov
or
(bad)
in
sbb
shl
cmp
popa
pop
inc
retf
pop
ret
cmc
push
std
sub
push
and
js
ss
(bad)
adc
jl
inc
xchg
mov
fs
inc
or
mov
mov
fst
sahf
retf
mov
or
outs
call
and
or
pop
pusha
lods
xchg
pop
ret
outs
mov
or
clc
leave
push
mov
xor
out
jl
cs
push
inc
cld
inc
push
pop
ror
sub
cmp
js
ss
(bad)
adc
jl
inc
xchg
mov
push
into
inc
or
mov
mov
push
dec
sahf
in
test
or
outs
lods
out
daa
add
ror
mov
or
sbb
je
pusha
lods
xchg
pop
sar
or
sti
int3
push
mov
mov
push
inc
in
inc
push
pop
in
outs
repz
std
sub
sub
es
ss
(bad)
adc
jp
inc
xchg
mov
push
into
inc
or
xchg
mov
lods
cmps
pop
imul
fst
fwait
loopne
je
cmp
push
inc
adc
mov
cmp
and
enter
sbb
pop
add
xchg
pop
ret
outs
mov
or
mov
push
sti
mov
or
mov
push
inc
fiadd
pop
in
jle
inc
std
sub
sub
jg
ss
fcom
xchg
mov
je
inc
or
mov
lods
stos
shl
cmps
and
jge
push
jl
mov
inc
inc
sbb
out
daa
add
ror
mov
cmp
sbb
je
lods
xchg
pop
ret
outs
mov
or
mov
popa
clc
(bad)
sbb
mov
push
inc
retf
pop
ror
sub
cmp
mov
out
adc
mov
fs
inc
or
mov
fwait
mov
fst
sahf
clc
test
cmp
inc
inc
aas
push
out
daa
add
ror
mov
cmp
sbb
je
fs
jne
stc
hlt
sbb
mov
push
inc
retf
pop
in
(bad)
(bad)
sub
jl
adc
js
inc
xchg
mov
fs
inc
or
mov
daa
lods
movs
cs
cdq
stc
test
cmp
push
inc
cmp
out
daa
and
sub
mov
cmp
sbb
jb
fs
jne
stc
mov
or
mov
push
inc
retf
pop
ror
sub
cmp
mov
out
adc
mov
fs
inc
or
mov
mov
jge
push
dec
cdq
stc
test
cmp
push
inc
cmp
out
daa
and
sub
mov
cmp
sbb
je
fs
jne
stc
hlt
sbb
mov
push
inc
retf
pop
in
(bad)
(bad)
sub
jl
adc
js
inc
xchg
mov
fs
inc
or
mov
daa
lods
movs
cs
cdq
stc
test
cmp
push
inc
cmp
out
daa
and
sub
mov
or
sbb
je
fs
jne
stc
(bad)
sbb
mov
push
inc
cld
inc
push
pop
ror
sub
cmp
sbb
mov
out
adc
js
inc
xchg
mov
push
into
inc
or
cmp
hlt
jge
push
ins
cdq
cdq
test
or
or
out
daa
xor
and
jl
enter
daa
pop
or
sbb
jae
lods
xchg
pop
ret
outs
mov
btr
sbb
mov
push
inc
in
inc
push
pop
ret
icebp
jae
sub
push
and
fnsave
mov
enter
inc
inc
xchg
mov
inc
into
inc
or
test
fwait
mov
fst
sahf
cdq
test
or
push
out
and
cmp
mov
sbb
sbb
jb
fs
mov
bt
sbb
mov
push
inc
in
inc
push
sbb
mov
lds
and
jl
ss
enter
push
inc
xchg
mov
inc
into
inc
or
mov
mov
jge
push
pop
cdq
jecxz
test
or
push
push
jecxz
push
add
(bad)
enter
add
das
add
push
and
arpl
mov
or
push
add
cmps
popa
cmp
out
push
inc
fst
xor
mov
inc
retf
sub
push
and
jnp
xor
jg
inc
xchg
mov
mov
inc
add
stos
scas
shl
push
fld
xchg
lds
bound
mov
lods
aas
xor
adc
push
enter
pop
pop
and
jnp
arpl
mov
pop
fisub
mov
sahf
xchg
xor
add
push
inc
rol
or
adc
cmp
adc
xor
jg
inc
xchg
cmps
arpl
inc
sbb
lahf
mov
sub
mov
fstp
popf
jecxz
dec
cmp
jb
adc
int
xor
dec
dec
es
(bad)
enter
daa
pop
and
cmp
nop
pop
retf
outs
mov
or
std
(bad)
sbb
rcl
jno
sub
push
inc
stc
inc
push
sub
(bad)
push
mul
sub
sub
jnp
sbb
je
sbb
jg
inc
xchg
mov
mov
inc
or
in
mov
outs
les
pop
pop
in
nop
and
add
sub
int
ss
clc
enter
daa
pop
sbb
das
arpl
rcr
sahf
mov
jno
enter
xor
xlat
inc
cmp
cli
push
inc
out
inc
push
push
imul
rcr
xor
sbb
jae
imul
scas
arpl
jmp
je
inc
add
mov
sub
mov
fisub
call
cmp
inc
ds
movs
int
pop
adc
(bad)
enter
or
add
push
and
arpl
mov
cmps
mov
jno
(bad)
sbb
out
sbb
cmp
push
inc
rep
push
jne
out
neg
sub
push
sub
jnp
xor
jg
push
fsub
in
adc
xchg
mov
mov
push
fidivr
cdq
rol
dec
inc
sub
jecxz
push
cmp
dec
es
(bad)
retf
leave
movs
mov
pop
add
sbb
js
arpl
mov
pop
xchg
push
repnz
sbb
shr
imul
fs
inc
fadd
adc
test
ss
das
into
push
and
jnp
sbb
push
std
sbb
adc
mov
inc
sbb
mov
mov
inc
outs
nop
jns
and
test
dec
cmp
jecxz
adc
dec
adc
push
ret
add
arpl
fisttp
nop
mov
inc
clc
cmc
sbb
ret
stos
sbb
jl
imul
dec
inc
scas
inc
push
pop
int
add
ins
xlat
das
fisttp
das
adc
sbb
je
push
or
inc
xchg
mov
mov
inc
push
jae
scas
mov
fwait
mov
fisub
out
into
and
sbb
gs
mov
scas
sub
cmp
sbb
retf
mov
lahf
sub
dec
sbb
arpl
mov
ror
mov
pop
scas
push
repnz
mov
xor
shr
add
je
inc
aam
push
jno
test
cmc
jb
das
into
push
and
jnp
xor
jl
inc
nop
mov
mov
inc
add
mov
mov
scas
jb
not
pop
dec
xchg
les
bound
ins
lahf
int
das
add
(bad)
retf
xchg
pop
cmp
sbb
js
arpl
mov
pop
scas
push
repnz
cmp
cmp
push
in
fs
inc
fisub
imul
fld
push
das
sbb
adc
jg
fs
(bad)
push
mov
inc
fs
pushf
mov
and
stos
jp
rcr
push
pop
xchg
rol
jb
sub
shr
pop
hlt
enter
push
pop
sbb
sbb
jl
arpl
cwde
or
mul
sbb
shr
push
inc
in
pusha
push
adc
inc
fld
push
sub
jnp
adc
jg
fs
mov
mov
inc
add
cwde
cmps
mov
mov
fld
xchg
cmc
add
sbb
sub
shr
ins
hlt
enter
add
bndstx
jns
pusha
mov
fimul
xchg
stos
pop
mov
repz
test
cmp
fsubr
std
push
inc
fsub
ret
imul
sub
cmp
adc
inc
mov
fcomp
jl
aaa
xchg
mov
cli
dec
mov
xchg
mov
mov
or
sub
cmp
jp
push
pop
outs
mov
xor
and
xchg
lahf
xor
jae
pusha
sub
loope
in
dec
cmps
hlt
or
jmp
out
imul
repnz
outs
pop
inc
cld
dec
push
xor
jne
cs
cmp
js
xlat
ss
fcomp
xchg
(bad)
jae
(bad)
gs
inc
sbb
mov
fwait
mov
fisubr
cdq
rol
bound
ins
mov
lods
aas
add
ror
mov
sub
sbb
jno
arpl
mov
or
sti
(bad)
sbb
shl
push
inc
xlat
fs
daa
ror
cs
sub
jnp
dec
mov
out
sbb
jg
inc
xchg
call
inc
sub
mov
mov
ins
cmc
jns
cmp
push
std
aas
sub
test
stos
push
xor
(bad)
jg
into
mov
xchg
push
pop
push
cmp
dec
xor
arpl
hlt
or
std
push
xchg
mov
pop
cmp
cli
push
inc
(bad)
ins
push
pop
ror
sub
push
sub
jnp
xor
jl
dec
xchg
mov
jo
inc
or
mov
mov
ficom
cdq
mov
jb
cmp
shr
es
enter
and
sub
push
and
pusha
call
or
sti
lds
out
imul
(bad)
imul
bound
dec
push
pop
hlt
mov
inc
xlat
sub
push
add
add
push
fmul
and
inc
xchg
mov
mov
push
fiadd
pop
xchg
mov
daa
mov
fstp
mov
dec
or
xor
test
fisub
add
sar
and
imul
xchg
jle
cmc
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
dec
mov
out
adc
pusha
dec
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
add
ror
mov
sub
sbb
jno
arpl
mov
or
sti
rcr
mov
push
inc
fisubr
ret
test
les
es
jl
adc
jg
dec
xchg
mov
ja
inc
(bad)
xchg
cmp
out
fst
clc
add
or
sub
lock
add
sub
jp
fdiv
sub
add
lods
sub
jns
xchg
mov
mov
add
(bad)
lea
psllw
(bad)
jno
gs
cmp
or
push
mov
sar
xor
std
dec
(bad)
pop
(bad)
and
cmps
sahf
arpl
jno
pop
cdq
lods
mov
mov
gs
jbe
dec
dec
lods
fisttp
je
sbb
add
or
cli
mov
add
sub
outs
cmps
xchg
jle
stc
adc
in
(bad)
adc
fcomp
sbb
inc
sbb
bound
push
int3
ds
loop
push
out
(bad)
and
sbb
ss
loop
mov
clc
cvtps2pd
movs
lahf
jp
clc
jo
lds
dec
call
cmps
mov
in
push
pop
nop
int
xor
dec
sub
xor
loopne
aas
add
adc
dec
rcr
xchg
pop
das
dec
pop
data16
and
mov
sub
stos
inc
sbb
sbb
push
sbb
xor
repnz
jnp
push
sbb
or
xor
pop
call
ss
jle
fnstenv
adc
xchg
scas
lahf
fistp
outs
loopne
loop
sub
or
imul
dec
sub
mov
push
js
push
das
pop
xor
arpl
jp
fld
imul
cmp
cmps
inc
sub
jmp
push
pop
test
mov
push
mov
outs
xlat
and
fs
nop
pushf
dec
mov
xor
inc
sahf
in
mov
shl
(bad)
ficomp
retf
ins
loop
jl
in
mov
ja
sbb
add
sub
sub
inc
pop
cmp
jp
add
jbe
push
mov
pop
mov
in
icebp
cmp
cmps
inc
sbb
jmp
pop
ret
push
inc
pop
loop
push
in
push
(bad)
cmp
jg
cmp
xor
jl
sbb
addr16
nop
cwde
dec
mov
js
sub
shl
cmps
mov
dec
xchg
push
dec
sub
sbb
sub
clc
hlt
pushf
add
dec
adc
dec
or
xor
adc
fwait
das
loope
movs
fld
xchg
pop
test
test
(bad)
fcomp
ds
popa
and
jno
(bad)
fcom
cmp
lahf
dec
aad
fsubr
in
sub
pop
(bad)
adc
pop
jbe
jecxz
dec
mov
outs
sub
cdq
mov
mov
jge
inc
out
dec
jbe
shl
je
sub
in
cmp
sub
ss
(bad)
mov
imul
pop
inc
cmps
sbb
mov
test
stos
daa
adc
mov
sub
sbb
jmp
pop
gs
push
imul
lahf
dec
aam
inc
fst
xor
sar
imul
stos
pushf
inc
(bad)
jo
imul
mov
mov
jbe
outs
out
jno
cwde
out
mov
pop
push
push
cmp
sub
add
mov
ds
inc
mov
ret
cmp
mov
(bad)
mov
(bad)
mov
sub
rol
out
push
arpl
push
data16
xchg
aad
out
sbb
imul
sbb
pop
addr16
mov
jge
fnstcw
pop
mov
cwde
stos
mov
addr16
repnz
jae
nop
int
xor
sbb
pop
adc
fnstsw
dec
cmp
dec
inc
or
cmps
mov
cmc
sub
in
cmp
mov
dec
sub
dec
inc
pop
test
and
loop
dec
in
push
inc
push
neg
adc
mov
jle
fnstenv
adc
call
lahf
mov
dec
enter
pop
jecxz
cmps
push
xchg
adc
push
dec
cmps
(bad)
cmp
sub
add
mov
cmp
jnp
push
add
mov
(bad)
sub
adc
lahf
mov
ins
sbb
inc
and
jb
pop
test
mov
aad
fcomp
push
and
les
or
cmp
inc
inc
int
sub
mov
cmps
mov
dec
repz
jno
mov
cwde
je
xor
xor
dec
mov
lods
aaa
data16
push
jne
loope
scas
and
sub
inc
inc
pop
add
fwait
jne
addr16
jo
push
stos
pop
adc
mov
sbb
std
and
jno
arpl
push
pop
add
lahf
push
aad
out
pop
(bad)
or
cmp
cwde
pop
les
adc
push
cmps
pushf
inc
(bad)
clc
jno
fnstenv
sbb
mov
fisub
loop
lods
jbe
cwde
into
xchg
inc
lods
add
fs
aaa
ins
mov
fwait
aaa
inc
or
xchg
and
jns
add
dec
loope
into
fst
mov
aad
mov
scas
push
cmp
jmp
push
push
test
(bad)
ins
(bad)
pop
neg
sbb
xor
ja
pop
pusha
inc
mov
jle
lds
sub
mov
data16
dec
mov
adc
imul
cmps
hlt
fld
inc
jmp
or
push
inc
movs
xchg
fld
out
mov
hlt
mov
(bad)
call
adc
js
rcr
push
pop
int3
dec
and
repnz
in
imul
adc
dec
les
pop
push
jg
stos
pushf
dec
mov
je
sub
inc
popf
fisubr
hlt
jle
jno
nop
leave
mov
je
and
daa
adc
(bad)
inc
(bad)
mov
push
jns
inc
add
mov
ret
adc
loopne
cmp
test
adc
sbb
jmp
outs
push
not
cmp
cld
push
loope
aam
fstp
and
jnp
inc
les
pop
push
ins
jbe
mov
jge
fnsave
sub
test
xchg
test
loope
sub
sub
sub
xchg
test
adc
push
add
mov
sub
jp
jle
inc
clc
fwait
push
loopne
lods
shr
cld
je
inc
(bad)
repnz
add
cld
fadd
adc
push
sub
push
inc
gs
popw
in
lahf
dec
aad
mov
fstp
push
das
pop
std
adc
pop
dec
xor
jle
jmp
adc
mov
pop
clc
rcl
xchg
push
inc
pop
mov
cwde
push
adc
add
sub
lock
adc
(bad)
mov
push
xor
jle
arpl
shr
mov
hlt
ds
cmp
(bad)
rol
(bad)
pop
sub
inc
addr16
mov
aad
jmp
adc
dec
sahf
neg
pop
outs
jns
jecxz
jns
rol
(bad)
ins
xchg
cmps
lahf
stos
mov
jg
loopne
test
push
nop
rcr
imul
mov
sub
push
jne
sar
and
bound
clc
lahf
jbe
movs
(bad)
sub
clc
pop
test
jmp
mov
sbb
mov
pop
pop
int3
xor
pop
repnz
out
jmp
jmp
cvtps2pd
stos
cwde
inc
mov
inc
jae
xor
inc
sahf
in
mov
fld
cmps
mov
out
inc
push
nop
xlat
fwait
xor
sub
lahf
xchg
add
cmp
push
jp
cld
mov
sub
imul
add
movs
xchg
push
into
fst
mov
repnz
cdq
inc
sub
fsubr
ror
pop
into
xor
loop
jnp
imul
xor
pop
call
inc
sbb
mov
adc
popf
stos
lods
out
lea
repnz
sub
sub
jae
dec
lods
in
add
gs
mov
pop
cmp
inc
sbb
mov
out
mov
sub
jmp
rol
jnp
pop
sbb
jbe
test
in
dec
rcl
push
(bad)
or
aaa
pop
mov
lds
adc
jns
mov
jle
aad
sub
mov
add
call
cwde
push
xchg
adc
jne
call
adc
sbb
mov
pop
and
or
arpl
iret
into
or
(bad)
sbb
push
pop
sbb
dec
bound
fsub
add
cmp
les
push
out
push
rcl
push
shr
adc
dec
in
cmc
jo
nop
retf
cwde
push
xchg
adc
dec
clc
imul
add
stos
cld
mov
xor
bound
clc
mov
ret
sbb
movs
sub
cmp
enter
mov
sbb
fcom
pop
loop
push
aad
jmp
addps
pop
sub
xor
inc
pop
fnstenv
push
sahf
movs
cwde
add
outs
jecxz
lock
mov
xchg
dec
test
sbb
lock
add
dec
mov
cmp
pop
aaa
jle
jbe
xchg
cmps
neg
out
imul
mov
xor
icebp
inc
push
or
test
inc
out
adc
cmp
mov
out
push
jg
pop
mov
jno
leave
xor
dec
xchg
and
movs
inc
jne
pop
fbstp
cwde
cmc
cwde
push
mov
or
ret
and
ds
mov
xor
jb
js
mov
shr
or
fwait
je
inc
clc
ret
mov
pop
cmp
icebp
inc
and
push
cmp
mov
(bad)
sub
jl
add
and
ins
jns
jecxz
inc
vmovq
push
adc
lahf
fidivr
push
jge
inc
enter
jmp
push
inc
or
lahf
scas
xor
sub
es
popf
sbb
pop
adc
jp
jp
arpl
movs
xchg
in
push
imul
or
fcom
or
outs
sbb
imul
fild
sub
and
cwde
pop
call
cmp
inc
jb
push
adc
scas
cmps
mov
shl
lea
hlt
jo
mov
cmps
inc
cld
add
jne
xor
retf
adc
ss
in
mov
and
sub
inc
mov
std
sbb
push
add
sub
ins
cs
sbb
retf
aas
in
xchg
rcl
push
(bad)
sbb
mov
adc
pop
jns
mov
jne
jmp
adc
xchg
lahf
mov
(bad)
jecxz
fwait
push
mov
xor
test
cmp
cmp
cmps
lea
inc
pop
and
jge
js
in
jo
js
into
sub
in
loop
adc
sbb
push
pop
ret
outs
jp
repnz
out
jae
add
jl
cmp
and
fs
mov
gs
sub
xchg
cmps
mov
movs
jnp
xchg
inc
cmc
dec
inc
nop
rcr
add
outs
dec
cmps
sahf
lods
cmp
inc
add
mov
ds
popa
sub
in
ins
fsubr
(bad)
sub
in
loop
mov
mov
inc
and
push
inc
arpl
inc
pop
or
mov
push
test
aam
pop
pop
bound
add
imul
movs
inc
mov
outs
or
in
mov
fidivr
xchg
push
jbe
mov
mov
je
sub
hlt
test
adc
add
std
and
adc
dec
out
(bad)
fisubr
out
dec
mov
xchg
inc
and
cmc
jns
shr
gs
dec
fs
cmp
rcr
sbb
outs
mov
adc
jnp
cmps
inc
mov
jle
mov
mov
stc
add
jb
jae
xchg
fild
data16
je
xchg
mov
ss
iret
mov
and
add
jp
jbe
inc
xchg
lahf
jbe
jp
(bad)
sub
cld
out
push
(bad)
mov
pop
mov
xchg
pop
addr16
int3
inc
jns
in
test
push
lea
aad
xor
outs
mov
sub
jnp
scas
push
cmps
sti
jbe
fst
popa
popf
xchg
test
lods
std
add
stos
push
jnp
jp
jo
nop
in
mov
imul
xchg
in
xchg
pop
add
es
neg
inc
adc
arpl
or
(bad)
retf
in
aaa
sub
icebp
pop
sbb
lock
lahf
dec
out
push
les
push
(bad)
adc
pop
jns
mov
inc
pop
jecxz
sub
movs
movs
mov
mov
jge
jp
dec
dec
cwde
jecxz
inc
xchg
add
imul
stc
cld
stos
add
sub
add
inc
sub
xor
data16
fwait
ins
fdivr
neg
mov
sub
nop
mov
bound
push
stc
inc
and
imul
xchg
sbb
and
xor
adc
pop
pusha
inc
xchg
pushf
inc
mov
jne
div
sub
mov
and
(bad)
jg
enter
sub
dec
sub
jns
retf
adc
xor
lock
sub
and
in
ins
fsub
fild
aaa
hlt
mov
in
pop
sub
mov
pop
sbb
inc
arpl
xchg
push
cli
add
sbb
test
gs
jbe
cmps
lahf
daa
mov
ins
adc
mov
pop
clc
rcl
bnd
jo
nop
cmc
cmps
push
pop
sub
pushf
xchg
mov
push
jp
cld
mov
add
dec
inc
add
mov
ret
pop
mov
(bad)
repnz
sub
(bad)
aad
xor
in
sbb
ins
pop
gs
mov
in
push
(bad)
cmp
pop
pop
sub
pop
clc
pop
or
xchg
aad
adc
cmps
mov
jmp
jne
jb
inc
sub
adc
imul
cmp
and
push
sub
inc
clc
xchg
or
neg
mov
jmp
adc
icebp
inc
sbb
jns
inc
fisttp
cmp
fwait
push
push
sub
imul
push
jg
dec
mov
jle
out
adc
xchg
movs
mov
call
cwde
push
inc
sbb
xchg
cwde
pop
or
cmp
push
loope
mov
adc
inc
inc
jge
jbe
sub
mov
dec
sub
ds
xchg
inc
sbb
std
ins
and
jno
push
fsubr
add
or
aaa
neg
or
packssdw
adc
outs
adc
test
jo
inc
sbb
xchg
popf
mov
jns
push
loope
push
mov
mov
pop
push
sbb
cmp
inc
adc
mov
mov
cmp
or
pop
sbb
aam
into
in
mov
in
sbb
(bad)
aam
and
cmc
jl
lea
fdivr
js
in
lahf
dec
aad
mov
(bad)
or
les
sbb
pop
adc
lahf
jns
int3
inc
bound
scas
mov
popf
lods
jnp
into
add
shl
je
sub
jmp
xor
sub
ds
(bad)
aam
sub
pop
ss
data16
cmps
and
mov
sbb
hlt
pop
mov
hlt
rol
xchg
cmp
cli
fdivr
sbb
jl
jmp
push
and
std
xchg
jmp
std
and
sbb
jbe
mov
jo
int
sub
lahf
call
dec
loop
loope
pop
adc
inc
xchg
sub
jbe
xchg
mov
or
adc
push
lock
xor
add
mov
out
mov
hlt
(bad)
sbb
mov
mov
gs
idiv
push
aam
(bad)
cmp
and
pusha
loop
mov
add
lahf
jns
iret
gs
jne
pop
mov
inc
mov
leave
dec
inc
mov
add
adc
das
dec
pushf
lock
add
fnstsw
dec
add
push
aaa
bound
inc
stc
loopne
loopne
mov
sbb
clc
inc
(bad)
scas
adc
and
xchg
sub
fcom
or
xchg
jmp
xlat
and
push
pop
jbe
mov
inc
jae
inc
sub
test
lods
out
fwait
movs
ins
jne
outs
inc
mov
mov
pop
pop
sub
call
dec
es
cli
push
jnp
xor
add
jbe
or
xchg
test
icebp
ds
les
adc
cdq
pop
sbb
push
fs
fwait
jne
push
lea
(bad)
or
mov
fs
xchg
cdq
jns
int3
inc
jo
push
jbe
cmps
cmps
mov
sar
jb
dec
dec
out
iret
cwde
push
xchg
cmp
fs
aaa
je
hlt
add
dec
cmp
mov
push
inc
pop
and
jbe
js
test
push
mov
jo
inc
in
mov
or
sbb
cmps
pop
and
mov
fcom
or
fwait
dec
out
push
lea
fisttp
and
xchg
outs
clc
fs
test
mov
inc
pop
jecxz
adc
and
mov
movs
push
dec
repnz
hlt
inc
pop
mov
mov
je
sub
rep
xor
dec
ds
sti
fdivr
sub
jl
jle
jo
mov
xchg
add
cmp
aam
sbb
adc
sbb
retf
popa
jge
int3
xor
loop
push
in
out
in
xor
mov
or
cmp
inc
(bad)
div
pop
xchg
in
lods
test
push
mov
push
dec
std
push
jo
mov
cmps
push
xchg
sub
jns
retf
adc
xor
mov
and
push
add
(bad)
in
pop
out
pop
sbb
mov
inc
clc
rol
test
das
(bad)
mov
sub
pop
sbb
ret
push
js
repnz
inc
out
xor
and
pop
popf
pop
adc
stos
mov
pop
leave
xor
sub
add
mov
repz
pop
mov
sub
movs
call
cmp
push
shl
or
pop
adc
sub
xchg
fld
pop
lock
cmp
xlat
mov
pop
sbb
push
and
test
push
(bad)
imul
shl
push
pop
outs
movs
lahf
js
aad
pop
mov
call
popf
mov
dec
repnz
inc
pop
mov
cwde
push
adc
add
dec
movs
imul
add
std
scas
mov
xor
pop
sbb
jecxz
mov
pop
mov
lock
mov
icebp
pop
sbb
dec
jle
std
(bad)
jae
push
mov
in
xor
pop
repnz
or
sahf
jns
aad
je
inc
sub
loope
movs
mov
movs
pop
jne
outs
fbstp
mov
or
dec
clc
in
cwde
aas
or
cmp
pop
aad
xchg
outs
jns
popa
sub
loopne
xlat
ja
into
or
or
or
sub
mov
cs
push
sbb
popa
pusha
pop
int3
jg
pop
lock
dec
aad
jmp
cld
cmp
pop
pop
imul
inc
pop
jecxz
das
pop
and
cmps
mov
dec
std
jb
jno
mov
cwde
pop
scas
cmp
imul
cmps
lahf
xchg
add
and
inc
idiv
or
inc
inc
inc
add
call
adc
loopne
ds
stos
pop
or
scas
inc
sbb
rol
gs
push
addr16
cmp
jmp
in
xor
addr16
adc
outs
cmps
cmps
push
leave
mov
shr
in
sbb
mov
dec
loopne
lods
dec
dec
xchg
nop
cmps
inc
nop
cmp
xchg
call
cmp
push
(bad)
mov
and
jns
jbe
xchg
jbe
push
mov
jo
push
clc
xlat
push
(bad)
mov
inc
cmp
inc
and
jno
push
test
jp
fistp
cmp
or
sub
and
or
dec
mov
ja
mov
cmps
sahf
stos
lods
mov
jp
jp
jae
cwde
jmp
ins
mov
fs
jne
hlt
pushf
add
dec
aaa
ds
in
mov
xor
sub
mov
xlat
or
(bad)
pop
xchg
idiv
in
and
leave
scas
sbb
add
push
fs
xchg
neg
xor
mov
clc
pop
pop
pop
adc
cmps
inc
mov
push
test
cli
mov
fidiv
nop
xlat
mov
imul
call
es
sti
and
pop
ds
sub
jae
in
shr
shr
(bad)
push
mov
clc
int3
push
(bad)
scas
xor
mov
cmc
js
in
inc
inc
fisttp
add
or
les
in
pop
sub
ds
popf
pop
push
ins
jbe
test
inc
jb
xor
dec
in
mov
add
movs
inc
jbe
outs
test
lock
add
sbb
call
dec
ss
jmp
adc
or
jl
jb
inc
stc
fwait
jbe
or
fld
mov
call
xor
mov
(bad)
push
gs
sub
not
out
sub
in
inc
sahf
addr16
fs
adc
movs
mov
ins
int
sub
scas
fistp
dec
loop
repz
inc
mov
sub
push
xor
call
adc
jle
fiadd
cmp
push
sbb
inc
xchg
xchg
push
js
into
sbb
fwait
sub
push
(bad)
mov
sbb
aam
and
ins
sbb
ins
pop
fadd
ja
icebp
pop
(bad)
or
sub
pop
out
or
jnp
cmps
inc
xchg
leave
inc
push
fnstsw
dec
xchg
mov
push
stc
mov
dec
enter
jbe
(bad)
call
sub
in
test
(bad)
cld
mov
cmp
xor
js
xchg
sub
ja
(bad)
adc
clc
xlat
cmp
mov
inc
sbb
jno
gs
clc
or
push
jmp
fnsave
pop
jae
inc
and
inc
sub
in
cmps
cmps
mov
cmp
add
fcomp
jne
and
aaa
add
or
inc
(bad)
mov
dec
cmp
sub
jb
inc
stc
xchg
jae
js
neg
xchg
mov
inc
xchg
dec
sub
mov
pop
retf
cmp
mov
inc
rcl
rcr
and
in
adc
pop
jbe
mov
jbe
ror
loope
sahf
stos
mov
fs
xchg
jno
inc
sub
sub
dec
xchg
in
daa
adc
cmp
mov
ss
aaa
or
inc
cmps
xor
mov
adc
neg
std
mov
sub
in
push
sbb
ins
push
arpl
dec
jle
lock
rol
sub
jl
daa
push
call
push
xchg
test
pushf
(bad)
jle
mov
or
mov
push
movs
mov
jns
add
xchg
(bad)
jns
cmp
add
jge
retf
or
cmp
inc
(bad)
mov
ds
and
xchg
pop
out
movs
fld
mov
retf
in
add
mov
cmc
inc
and
jb
push
(bad)
ja
icebp
sub
sbb
movd
pop
xor
addr16
mov
jo
push
pop
dec
xchg
xchg
lahf
lods
pop
jge
add
out
xor
adc
cld
stos
xor
cmps
(bad)
mov
popf
and
sub
dec
inc
pop
cmp
xchg
push
call
xchg
stos
pop
mov
adc
add
sub
std
fs
ins
jnp
fisubr
or
xchg
inc
icebp
sub
sbb
mov
ins
je
sahf
scas
inc
(bad)
jo
inc
pop
dec
xchg
lea
cli
test
lock
inc
pop
cwde
out
xchg
push
lods
cmp
add
push
jns
aad
xor
cmp
aas
sbb
popf
daa
dec
push
es
aaa
add
aam
mov
jp
push
cld
ror
mov
aam
sub
sar
popa
jge
into
xor
mov
jae
cmp
or
adc
sbb
jo
inc
xchg
add
in
scas
mov
test
xor
outs
aam
pop
mov
xchg
push
xchg
cmp
jbe
or
lahf
mov
xor
aad
mov
div
dec
cmp
pop
dec
and
and
sbb
mov
sbb
retf
out
xor
aam
jl
or
sbb
stos
fs
or
inc
in
aam
pop
adc
out
cmp
das
imul
in
ja
(bad)
xor
sub
xchg
scas
test
lds
sti
mov
jl
jp
inc
pop
mov
call
adc
xor
push
cdq
xor
sbb
aaa
pop
sub
mov
cmc
sbb
jmp
or
aam
and
jl
stc
jne
push
fst
pop
lock
imul
shl
(bad)
sbb
daa
outs
out
add
push
push
xchg
test
leave
in
jne
lds
dec
in
scas
mov
test
aaa
lahf
test
retf
dec
sub
aas
adc
ins
ins
mov
stos
aaa
cmp
cs
jecxz
mov
push
adc
or
arpl
mov
push
mov
mov
mov
inc
sbb
int3
ss
cmp
lahf
dec
rcr
fstp
push
das
pop
std
adc
pop
jns
sahf
cmps
inc
(bad)
jb
inc
sbb
mov
pop
movs
mov
dec
repnz
jmp
inc
mov
cwde
pop
xchg
fs
loopne
cmp
sub
cmp
mov
sub
and
fwait
jne
push
xchg
push
mov
ds
lea
add
sbb
sti
dec
pop
rcl
or
jmp
repnz
adc
push
movs
cdq
dec
mov
js
inc
test
push
xor
dec
sub
or
add
jge
lahf
fwait
add
fmulp
mov
sub
ss
jb
inc
mov
jo
shrd
sub
cld
neg
push
outs
sbb
ins
pop
pop
fcom
adc
(bad)
jo
push
add
outs
mov
push
pop
jbe
cmps
scas
dec
cwde
sar
int
sub
mov
cmps
mov
hlt
dec
sub
retf
mov
or
dec
clc
ret
addr16
add
lds
inc
pop
cmp
ins
mov
into
adc
clc
leave
or
fcomp
cmc
inc
sbb
aas
push
aad
repnz
or
cmp
pop
mov
jmp
lahf
es
pop
fnstcw
sub
jmp
jbe
jb
dec
sub
adc
jne
lahf
lahf
cmp
dec
cmp
aam
or
jp
jb
jne
xchg
into
ret
sub
mov
nop
mov
das
(bad)
push
pop
test
addr16
xchg
dec
aam
test
jl
daa
ja
ds
out
push
adc
lahf
jae
hlt
jae
frstor
loope
sahf
(bad)
in
cmps
mov
dec
xchg
add
aam
xor
ins
dec
xor
xor
dec
cmp
or
and
fwait
jbe
push
movs
rol
test
inc
div
mov
(bad)
dec
ss
dec
push
stos
dec
fs
cld
dec
aad
les
in
add
cld
dec
mov
adc
jae
inc
movs
mov
mov
inc
pop
shl
sub
mov
jle
inc
int3
push
pop
mov
cmp
dec
stc
lock
add
cmp
cmp
mov
push
and
mov
imul
or
ds
xor
xlat
mov
sub
dec
sub
push
push
pop
ret
dec
and
loop
push
in
jmp
loop
mov
pop
cmp
mov
inc
jb
jnp
pop
lods
movs
sahf
mov
lahf
popa
dec
enter
sub
adc
pop
push
sub
jmp
xor
adc
cld
mov
cmp
ss
data16
cmps
fwait
jbe
inc
mov
add
sbb
mov
icebp
inc
sbb
inc
and
xchg
add
or
add
pop
shl
or
mov
jle
mov
mov
stos
sar
pop
clc
(bad)
pusha
dec
enter
sub
dec
adc
and
add
cmps
mov
dec
sub
sub
adc
xchg
push
loopne
fwait
xchg
or
or
leave
mov
daa
jmp
pop
pop
into
pop
bound
mov
in
cli
sbb
or
sub
fs
add
pop
inc
inc
sahf
stos
jle
lock
mov
adc
mov
push
movs
mov
dec
in
push
dec
dec
cwde
(bad)
pop
inc
es
in
cmp
adc
push
fild
sub
adc
xchg
push
(bad)
fisttp
xchg
xor
(bad)
icebp
or
mov
sub
std
push
sbb
jns
arpl
push
pop
cmp
(bad)
lea
in
xor
sbb
or
inc
mov
inc
add
mov
mov
popa
loope
in
pop
pop
(bad)
fisttp
dec
outs
pusha
sahf
cld
stos
xor
push
sub
mov
push
xor
bound
xchg
xchg
or
xchg
imul
xchg
pop
push
shl
sbb
dec
pop
pop
fild
adc
mov
inc
std
pop
enter
jnp
es
pop
clc
pop
push
pop
data16
imul
loope
mov
mov
jne
outs
div
mov
cmps
inc
pushf
push
add
(bad)
int
sub
fnstsw
inc
pop
and
jbe
jno
loopne
out
movs
sub
fwait
dec
xchg
call
or
fmul
jp
inc
sbb
dec
inc
push
ret
dec
imul
mov
pop
rol
or
pusha
in
cmp
jne
out
push
leave
fbstp
(bad)
pop
mov
jmp
push
test
push
mov
cwde
push
mov
sub
mov
xor
add
aam
or
sub
sbb
adc
lahf
sub
js
neg
xchg
fwait
jne
push
fsubrp
add
les
pop
and
jne
pop
retf
add
xchg
in
fcomp
pop
mov
daa
pop
adc
lahf
inc
mov
outs
sub
call
popf
fisub
std
outs
test
jbe
enter
adc
dec
stc
lock
aas
cmp
dec
ss
stos
cld
mov
xor
pop
push
inc
mov
mov
sub
push
clc
int3
cmp
mov
sbb
inc
sbb
jno
inc
fiadd
cmp
imul
xor
sub
adc
cdq
pop
mov
xor
pop
adc
dec
in
push
int
jbe
retf
hlt
adc
pop
jae
dec
xor
pop
add
dec
add
enter
adc
add
inc
daa
jle
inc
xchg
xchg
jb
js
fisubr
xor
cmp
stos
sbb
in
push
pop
int3
ss
std
mov
push
jecxz
sub
loop
les
cmp
mov
inc
pop
fnstenv
jbe
loope
(bad)
out
lea
test
push
nop
rcr
bound
dec
clc
call
or
js
inc
cmp
inc
sbb
adc
hlt
call
cs
mov
sbb
in
push
imul
cmp
lahf
push
test
in
and
les
adc
push
mov
inc
jb
je
jne
xchg
cwde
movs
mov
es
loop
fld
xchg
cwde
pop
(bad)
imul
inc
adc
scas
test
inc
and
inc
xchg
fwait
sub
push
fwait
jbe
pop
lock
cmp
xchg
imul
xchg
in
popa
pop
inc
fcom
pop
hlt
hlt
or
inc
cmc
sub
cmp
xor
std
and
jg
inc
test
fiadd
jl
mov
sub
pop
(bad)
fwait
loopne
xor
sub
shr
es
enter
or
pop
sbb
jb
arpl
xchg
xchg
mov
jno
neg
out
push
cmp
mov
in
popa
sbb
push
push
pop
hlt
hlt
push
test
cmp
xor
std
and
jg
inc
loop
inc
mov
gs
inc
adc
mov
aas
mov
push
fnstenv
cwde
rol
bound
ins
mov
add
gs
adc
jb
arpl
mov
or
clc
lds
shl
push
inc
fsub
adc
inc
test
push
xor
add
gs
adc
imul
(bad)
gs
inc
pop
pop
xchg
mov
xor
loope
fnstenv
loopne
push
test
add
(bad)
jmp
sub
retf
xchg
mov
sub
sbb
jne
popa
cwde
loope
fsubr
or
cwde
pop
cmps
inc
fprem1
sbb
mul
push
inc
fadd
cmp
push
in
sub
push
and
mov
out
cmp
xchg
lahf
inc
mov
gs
fs
pop
xchg
mov
add
movs
outs
loop
fnstenv
cwde
rol
inc
inc
xor
out
sub
cmp
es
enter
adc
add
jp
jb
arpl
mov
or
sti
jecxz
xchg
int
das
out
dec
cmp
bound
fild
pop
hlt
mov
inc
mov
push
es
(bad)
xor
jg
inc
test
jge
inc
adc
mov
stos
(bad)
add
jge
inc
jl
loopne
xor
ins
mov
lods
sub
cmp
scas
xchg
lea
push
add
xchg
pop
out
mov
or
in
sbb
shl
push
inc
fadd
cmp
mov
dec
mov
push
es
stc
ss
fcom
sbb
imul
shl
cld
inc
add
scas
mov
jp
out
fnstenv
fild
jb
xor
sub
fcmove
mov
sub
inc
xor
arpl
fisttp
xchg
mov
jno
call
sub
mov
push
inc
shl
ror
sub
push
and
mov
out
adc
jg
pusha
xchg
cmps
inc
mov
inc
jl
je
pop
cdq
xchg
mov
test
and
mov
jne
jge
push
pop
lahf
loopne
inc
xchg
or
sbb
daa
adc
cmp
pop
rcr
mov
sbb
sub
xor
xchg
sub
js
imul
mov
jo
inc
int
or
lods
imul
hlt
outs
outs
gs
inc
jg
std
pushf
jnp
inc
(bad)
xor
pop
fnsave
and
push
inc
test
jne
int
or
xchg
lahf
mov
push
dec
in
iret
push
pop
(bad)
loopne
xchg
or
dec
mov
or
mov
push
or
cmp
js
xchg
jge
jl
imul
inc
repz
shl
sbb
jmp
push
cld
inc
push
pop
lock
jnp
jae
cmp
or
add
cmp
ja
inc
mov
pop
dec
mov
adc
mov
fwait
movs
jns
out
(bad)
cwde
retf
xchg
cmp
jb
xor
xor
imul
mov
sub
inc
adc
mov
fld
into
or
clc
retf
xchg
xor
out
push
cmp
xchg
retf
popa
pop
inc
fcomp
cmp
(bad)
pop
test
out
and
mov
fcom
push
jg
dec
xchg
mov
mov
gs
inc
adc
nop
mov
lods
movs
outs
outs
loop
fnstenv
cwde
xchg
add
adc
and
pop
add
cmps
enter
cmp
jp
jb
arpl
ror
stc
pop
scas
popa
sti
jecxz
xchg
lds
adc
mov
push
inc
ror
aas
hlt
(bad)
push
test
in
es
dec
mov
out
adc
jg
dec
xchg
scas
inc
mov
gs
inc
push
ins
xchg
mov
scas
stos
shr
mov
jge
dec
dec
cwde
xchg
or
sub
sub
out
lods
cmp
cmp
outs
cmps
enter
push
pop
sub
add
xchg
pop
retf
pop
mov
push
in
pop
test
jmp
das
out
inc
cmp
imul
in
popa
dec
inc
fidiv
push
aas
in
push
test
cmp
mov
enter
addr16
stos
arpl
inc
adc
mov
push
mov
jno
jbe
cwde
fadd
bound
ins
xor
xor
cmp
gs
adc
jb
arpl
mov
or
sti
lds
sub
cmp
adc
fsubr
ret
test
in
and
mov
out
adc
jg
push
xlat
gs
inc
or
mov
aaa
lods
movs
jg
loop
fnstenv
cwde
int
inc
test
sbb
inc
xor
mov
lods
add
cmp
es
enter
and
cmp
inc
and
arpl
or
cwde
pop
test
lds
in
xor
shl
push
inc
shl
push
pop
hlt
mov
sub
push
and
mov
call
aaa
xchg
sahf
push
mov
gs
inc
pop
ins
xchg
mov
push
mov
ins
fstp
cwde
leave
add
jb
cmp
int
add
cmp
es
enter
sub
cmp
push
arpl
mov
or
clc
call
sub
mov
push
inc
fsubr
hlt
mov
inc
in
in
and
mov
fcom
adc
cmps
inc
mov
gs
inc
sub
mov
add
jge
jo
cwde
nop
or
sub
ins
ins
xor
daa
sbb
push
es
enter
adc
cmp
cmp
mov
pop
mov
or
sti
jecxz
nop
mov
inc
cmp
(bad)
push
inc
rcl
cmp
dec
in
sub
push
and
mov
fcom
push
jg
fs
mov
mov
gs
inc
adc
mov
stos
adc
outs
loop
fnstenv
cwde
rol
jb
xor
sahf
lods
add
push
enter
push
pop
sub
packsswb
xchg
pushf
mov
push
clc
mov
xchg
mov
pop
cmp
(bad)
popa
push
inc
fcom
cmp
inc
xlat
sub
cmp
mov
out
adc
mov
mov
gs
inc
adc
mov
cmp
movs
popa
outs
in
jne
jno
cwde
nop
or
sub
inc
xor
imul
es
lods
cmps
mov
pop
sub
sbb
jb
arpl
ror
xchg
cmps
pop
test
jecxz
nop
mov
sub
mov
push
inc
rcl
add
(bad)
push
test
into
push
and
mov
out
adc
cdq
jae
shl
clc
inc
sub
mov
pop
mov
(bad)
cwde
xchg
add
jb
xor
jecxz
add
push
enter
or
pop
sbb
jb
arpl
fisttp
xchg
stc
pop
stos
popa
sti
lds
in
xor
shl
sbb
popa
push
inc
fidiv
add
(bad)
dec
test
jecxz
and
mov
(bad)
adc
jg
inc
xchg
lahf
jae
iret
gs
inc
add
out
stos
scas
rol
mov
fst
mov
or
sub
ins
mov
lods
cmp
cmp
push
enter
push
pop
sub
add
xchg
pop
loope
mov
or
clc
(bad)
sbb
shl
push
inc
fadd
pop
ret
test
sub
mov
out
adc
jg
push
xchg
mov
mov
gs
push
sbb
sahf
xchg
xchg
test
cmp
push
mov
or
push
bound
sub
ret
mov
sub
sub
pop
sbb
fs
or
mov
sbb
xchg
cmp
(bad)
push
std
pop
popa
inc
cld
fs
push
in
jae
inc
cmc
or
push
add
adc
js
dec
mov
ins
je
inc
or
mov
cmps
push
imul
xchg
loopne
inc
mov
cmp
out
das
adc
cmps
(bad)
cmps
cmps
lods
and
and
pop
and
imul
stc
pop
mov
xchg
aaa
add
mov
push
inc
fiadd
adc
stos
pop
idiv
ret
add
es
jl
sbb
jg
inc
xchg
mov
mov
inc
add
xchg
mov
mov
fst
leave
adc
or
ins
mov
das
cmp
dec
cmps
(bad)
cmps
sbb
sub
ret
dec
mov
pop
scas
inc
repz
xchg
call
or
dec
cmp
pop
addr16
cld
dec
push
pop
ret
mul
sub
sub
sbb
xor
jg
fs
mov
je
pop
or
mov
mov
mov
rcl
fwait
jmp
test
or
add
and
adc
movs
cmps
test
pop
sub
add
jno
popa
mov
out
push
xchg
mov
popa
repz
sbb
mov
and
push
inc
in
inc
push
sbb
xchg
jnp
jae
and
sub
jnp
cmp
jns
pusha
xchg
mov
pop
into
dec
or
mov
mov
rcl
out
fs
or
pop
outs
call
es
retf
adc
das
push
sbb
mov
dec
cmps
popa
jecxz
sbb
out
dec
cmp
test
imul
jle
ins
stc
push
(bad)
sub
pop
js
cs
js
es
inc
nop
mov
xchg
cli
pop
call
cmp
test
ret
inc
dec
nop
lds
dec
aaa
sbb
stos
das
adc
mov
es
cmp
adc
arpl
mov
or
inc
sbb
test
cmp
std
push
dec
fldenv
pop
hlt
mov
imul
add
inc
mov
out
adc
jg
push
xchg
mov
fs
inc
or
mov
fwait
rcl
in
ficom
out
out
inc
mov
add
ins
outs
mov
or
enter
pop
pop
sub
pop
sbb
mov
(bad)
push
xor
xchg
mov
imul
aaa
or
xchg
fdivr
retf
push
ins
inc
cld
xor
sar
jne
push
and
jb
add
jp
push
xchg
mov
push
into
inc
(bad)
loopne
mov
mov
and
lods
dec
push
or
pop
pop
lahf
loop
inc
xchg
cmp
jno
push
ins
mov
lods
and
fxch
mov
aas
and
jae
add
popa
lods
mov
(bad)
push
mov
dec
or
xchg
lods
cmp
not
addr16
retf
pop
popa
inc
cld
xor
fld
or
daa
sub
push
jmp
mov
cld
adc
jp
aaa
pushf
mov
fs
fwait
mov
xchg
movs
jae
ret
jne
lahf
rep
dec
nop
add
push
push
cmp
shl
mov
cmp
or
pop
and
test
push
pushf
ror
cmps
push
movs
push
sti
lds
mov
ins
cmp
bound
ficom
pop
ror
sub
push
and
ret
jl
gs
jo
nop
mov
(bad)
lock
push
call
xchg
mov
fwait
mov
xlat
pop
dec
(bad)
out
xchg
cmp
aaa
pop
fs
es
in
mov
cmp
adc
fs
xchg
pop
imul
jecxz
xchg
xchg
dec
mov
xchg
ss
mov
push
dec
fnstenv
pop
hlt
test
ins
mov
lds
add
sbb
jg
adc
jnp
inc
mov
jae
icebp
gs
xchg
xchg
fwait
cmps
push
outs
int
ficom
mov
xor
mov
and
cmp
sub
stos
mov
sub
cmp
or
pop
xor
xchg
pop
(bad)
data16
add
jmp
sbb
mul
jp
in
jb
inc
leave
pusha
pop
sbb
mov
push
shr
(bad)
push
and
jb
es
(bad)
ss
pusha
inc
xchg
mov
je
or
xchg
mov
mov
fst
mov
add
or
sbb
daa
adc
in
mov
cmp
sbb
popa
cmp
xchg
pop
sar
or
add
xchg
lods
and
shl
push
inc
fld
pop
hlt
pushf
outs
test
lds
es
ss
fcom
and
pusha
push
xchg
call
inc
or
xchg
mov
mov
fst
add
inc
xchg
cmp
bound
push
push
dec
ds
rol
stos
mov
sub
sub
adc
jge
mov
shr
or
sti
rcr
mov
cmp
jmp
jecxz
inc
sbb
cwde
imul
jmp
pop
jns
ss
out
imul
mov
add
add
addr16
imul
add
cmp
ror
jl
fiadd
add
pop
xor
arpl
(bad)
icebp
or
repz
xchg
xchg
xor
rol
cmp
inc
ins
inc
fiadd
sbb
inc
fisttp
lds
add
jnp
and
pusha
push
jmp
dec
or
sahf
mov
(bad)
mov
ins
fnsave
push
jl
jecxz
outs
test
or
adc
mov
mov
and
cmps
lods
and
pop
sbb
xor
outs
mov
icebp
or
stos
dec
movs
push
add
mov
fldcw
ds
in
push
inc
sbb
cmc
jl
inc
xlat
daa
les
pop
pop
jle
and
pusha
fs
mov
or
xchg
mov
mov
pop
push
dec
fwait
call
or
sbb
repz
and
fldenv
sbb
cs
mov
out
test
pop
mov
xchg
call
or
jle
retf
sbb
scas
je
push
std
and
cmp
adc
dec
mov
fadd
mov
fs
or
popf
mov
mov
pop
icebp
push
arpl
sub
bound
sbb
repz
and
fldenv
sbb
cs
sar
or
out
aad
out
and
rcr
outs
cmp
in
inc
dec
inc
fisub
ror
sub
cmp
push
fadd
jge
xor
addr16
inc
(bad)
add
xchg
imul
add
sbb
sahf
stos
and
das
xor
jl
in
mov
sub
or
or
mov
(bad)
dec
mov
pop
mov
xchg
xchg
xor
cmp
fsub
retf
jbe
inc
retf
sbb
cwde
jae
inc
mov
jns
ds
fdiv
imul
mov
fs
test
mov
add
push
ins
(bad)
icebp
adc
or
push
or
call
and
sub
cmp
adc
mov
push
mov
mov
fldcw
ds
in
push
inc
sbb
cmc
jl
jae
cmp
js
dec
mov
out
ss
pusha
fs
fimul
ja
test
mov
ficom
sahf
fld
inc
pop
or
call
and
xchg
xchg
aaa
inc
sub
sbb
jno
arpl
mov
test
(bad)
sbb
shl
inc
xor
int3
dec
js
loope
dec
cli
push
fist
retf
jno
in
and
push
jo
pop
cmps
mov
mov
jge
(bad)
xor
jbe
in
stos
movs
sti
and
cmps
pop
outs
hlt
jge
pop
dec
out
(bad)
mov
or
jb
sbb
daa
add
leave
rol
add
dec
sub
js
xchg
sub
push
movs
test
mov
ins
sbb
inc
sbb
jne
push
cmc
push
addr16
cwde
jnp
inc
fild
(bad)
or
xor
or
push
mov
fisubr
(bad)
jne
dec
test
and
adc
jge
push
push
cdq
les
jne
imul
dec
sub
jp
mov
jl
pop
or
jp
inc
xchg
fwait
pusha
jecxz
into
ret
clc
dec
mov
mov
mov
pop
sbb
xor
std
lahf
inc
(bad)
push
neg
xor
jae
inc
mov
sbb
outs
mov
jle
lds
dec
in
mov
sub
jge
pop
pop
xchg
nop
mov
pop
push
gs
cmps
lock
sbb
adc
scas
cdq
or
sub
dec
inc
pop
je
in
push
adc
in
out
adc
lods
sbb
sbb
jbe
push
fimul
or
out
in
or
in
cmp
inc
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
and
arpl
mov
or
clc
loop
in
or
leave
mov
stc
pop
sbb
popa
pop
fs
fwait
push
sti
imul
add
ss
(bad)
add
ja
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fimul
sbb
mov
inc
std
sub
push
sbb
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
fwait
cmps
push
outs
in
fld
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
inc
mov
or
sti
lds
shl
pop
std
bound
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
(bad)
adc
pusha
inc
xchg
xchg
push
mov
gs
inc
or
mov
mov
fst
cwde
(bad)
xor
push
inc
sbb
daa
adc
ror
shl
sub
dec
adc
in
pop
aam
mov
or
clc
into
sbb
mul
push
inc
fidivr
push
pop
hlt
mov
dec
mov
mov
push
add
xor
jg
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
cmp
jb
sbb
daa
adc
ror
mov
sub
sbb
jb
arpl
lock
clc
call
sub
mov
push
inc
fcom
sbb
mov
inc
in
sub
sub
mov
fcom
push
jg
inc
xchg
cdq
push
mov
gs
inc
sub
mov
mov
push
pop
fwait
jecxz
inc
mov
sub
inc
and
add
cmp
es
lea
pop
sub
sbb
loopne
mov
or
sti
(bad)
sbb
shl
push
inc
fmul
adc
mov
inc
in
sub
push
add
cs
(bad)
adc
jg
push
xchg
scas
push
mov
gs
inc
adc
mov
mov
fnstenv
cwde
aam
inc
test
or
sbb
sahf
lods
cmp
cmp
push
enter
push
pop
sub
sbb
sbb
shr
test
mov
inc
sti
int
xchg
mov
pop
cmp
enter
popa
jns
fcom
cmp
inc
xlat
sub
cmp
mov
out
adc
mov
mov
gs
inc
pop
jl
mov
aaa
mov
fld
cwde
aam
dec
xchg
cmp
bound
ins
mov
or
push
lea
pop
sub
sub
mov
pop
fdivr
fisttp
xchg
mov
mov
xchg
mov
das
shl
sub
bound
fcom
cmp
(bad)
push
test
(bad)
push
and
mov
(bad)
adc
jg
push
xchg
cmps
arpl
inc
sbb
mov
fwait
movs
outs
outs
loop
(bad)
cwde
into
or
or
sbb
sahf
lods
add
gs
xor
sbb
packsswb
mov
or
sti
cld
sbb
shl
push
inc
ror
aas
in
push
test
in
and
mov
enter
data16
cmps
inc
mov
gs
inc
sub
mov
xor
movs
popa
outs
loop
(bad)
cwde
rol
jb
(bad)
xor
add
cmp
es
lea
pop
and
jno
arpl
mov
or
clc
std
sbb
shl
push
inc
fadd
cmp
(bad)
push
test
(bad)
push
and
mov
out
adc
jg
je
cdq
inc
mov
gs
inc
das
dec
xchg
mov
aaa
fwait
cmps
push
outs
in
fstp
call
sbb
mov
dec
es
enter
xor
cmp
adc
mov
ret
mov
push
sti
icebp
sbb
mul
push
inc
fbld
sbb
inc
stc
sub
cmp
mov
(bad)
adc
data16
cwde
inc
mov
gs
inc
adc
lods
mov
fwait
movs
popa
outs
loop
fst
fld
jb
sub
out
sub
cmp
es
ror
aad
mov
outs
jp
inc
cmovbe
fwait
shr
std
jne
push
mov
adc
cld
scas
pop
and
rcr
adc
int
push
adc
stos
push
dec
ficomp
push
sub
jb
ja
outs
mov
je
mov
scas
lahf
fistp
in
push
in
jo
out
fist
pop
xor
stc
call
adc
mov
sbb
pop
es
sbb
sbb
stc
in
outs
int
mov
sub
repz
cmp
sbb
jle
in
push
data16
ds
out
inc
sti
outs
std
add
sub
jae
ss
neg
pop
fs
mov
jle
fnstenv
pop
mov
mov
dec
repnz
(bad)
jo
sub
in
aas
add
aaa
jle
mov
inc
jbe
inc
pushf
in
outs
into
push
mov
sub
mov
adc
fldcw
arpl
sar
dec
shr
cmp
clc
inc
out
neg
push
ja
mov
fwait
addr16
pusha
or
pushf
inc
mov
je
jne
mov
sub
or
xchg
push
add
cmp
cmp
sub
push
jne
mov
push
sub
jb
lahf
jbe
addr16
out
jo
inc
clc
std
cmp
(bad)
mov
and
repnz
sbb
cmc
dec
sub
fistp
pop
fidivr
sub
jno
pusha
adc
sahf
es
aam
jbe
push
movs
mov
out
movs
mov
(bad)
push
jb
(bad)
mov
push
add
cmp
add
shl
mov
imul
inc
mov
mov
jo
imul
or
mov
sub
xchg
in
inc
dec
rcl
psrad
pop
xlat
sbb
sub
in
jle
outs
inc
xor
ins
jbe
sbb
lods
cmps
mov
mov
jne
outs
leave
jno
mov
mov
add
jl
xchg
cmps
das
pop
cmp
cs
(bad)
xor
pop
inc
call
add
pushf
xchg
ds
shl
or
inc
gs
dec
popa
cmp
stc
je
arpl
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fld
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
ror
mov
sub
sbb
jno
arpl
mov
or
sti
lds
shl
push
inc
fiadd
pop
hlt
mov
inc
std
sub
push
add
ss
out
adc
pusha
inc
xchg
mov
je
inc
or
xchg
mov
mov
fst
fwait
loopne
inc
test
or
sbb
daa
adc
scas
mov
fucomp
and
or
sbb
mov
fimul
mov
jns
xor
lock
xchg
ins
sbb
add
jmp
jo
fsubr
sbb
sub
aaa
push
rcl
aam
xlat
xor
push
inc
jp
cwde
dec
lods
cdq
pusha
push
sti
arpl
scas
hlt
mov
test
outs
pmulhuw
cmps
outs
cmps
adc
dec
scas
mov
pop
or
mov
xor
push
and
jno
pop
cdq
ret
loope
mov
call
imul
push
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
add
and
jb
outs
addr16
add
add
or
add
add
add
push
push
add
or
add
add
add
inc
push
dec
inc
add
add
or
add
add
and
outs
bound
add
add
add
push
push
mov
add
cli
add
add
add
add
add
and
add
add
add
or
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sub
push
add
add
rol
sub
push
add
add
add
add
add
add
add
add
add
sub
push
add
xchg
push
add
add
add
add
push
add
add
add
add
or
sbb
add
or
inc
add
or
mov
enter
fld
xchg
add
add
add
push
add
sub
push
add
add
add
add
add
add
add
sti
add
add
add
add
add
sti
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
add
and
fiadd
push
add
add
inc
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
pop
add
add
or
adc
jp
push
add
add
add
and
add
add
add
add
xchg
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
cs
add
cmp
add
add
xchg
inc
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
xor
adc
add
cmp
add
add
pusha
add
xchg
add
push
add
add
add
popa
add
add
add
add
add
jns
add
add
nop
add
add
jne
jbe
jns
mov
call
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
and
add
add
add
add
daa
add
push
add
add
add
add
add
popf
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
or
push
add
add
add
xchg
rol
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
and
add
add
add
add
add
sub
add
add
xor
add
add
push
inc
and
push
inc
push
and
cs
add
push
inc
and
push
inc
push
and
add
arpl
ins
imul
gs
add
imul
push
pop
cs
jae
jne
arpl
add
xchg
sbb
fld
add
outs
addr16
ins
add
je
push
popa
fs
dec
bound
arpl
mov
mov
fld
mov
sbb
fld
add
je
outs
outs
popa
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
fld
fld
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
inc
jae
gs
bound
inc
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
arpl
add
je
bound
arpl
fs
add
inc
push
push
inc
je
jb
bound
add
jb
popa
ins
push
jb
je
jb
push
jns
je
ins
cs
dec
add
outs
jbe
jb
add
jns
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
imul
arpl
add
je
jb
je
jb
push
jb
je
add
imul
ins
add
jo
jae
add
ins
add
gs
add
mov
fdiv
add
ins
jo
ins
gs
popa
jb
ins
gs
jb
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
ins
jo
ins
gs
gs
ins
je
add
je
push
gs
outs
arpl
inc
jae
gs
bound
jae
push
je
imul
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
je
inc
outs
ins
jo
ins
gs
jo
imul
je
inc
outs
gs
je
inc
js
arpl
popa
bound
jae
je
inc
outs
gs
je
dec
outs
dec
gs
outs
jb
add
push
outs
fs
jb
jbe
fs
dec
imul
je
inc
push
push
dec
inc
imul
jb
pusha
xor
inc
outs
fs
outs
ins
push
jb
jbe
fs
inc
outs
ins
jo
ins
gs
jae
gs
bound
jb
ins
inc
imul
inc
outs
ins
jo
ins
gs
jae
gs
bound
fld
scas
fsubr
outs
ins
inc
popa
jae
ss
je
imul
imul
je
inc
gs
outs
ins
fs
popa
je
add
arpl
ins
inc
outs
ins
fs
push
popa
je
add
je
gs
jo
imul
inc
outs
ins
bound
add
arpl
outs
jb
fld
fld
add
arpl
je
outs
outs
add
sbb
fdiv
fld
lods
fld
fsubr
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
fld
fdiv
fld
fld
gs
outs
fs
outs
outs
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jbe
imul
sbb
fld
fdiv
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
jbe
push
add
add
add
and
push
add
push
add
dec
add
dec
add
inc
add
add
inc
add
xor
add
inc
add
ins
add
imul
jb
push
add
jb
jae
imul
add
jbe
xor
add
add
or
add
add
adc
jae
je
add
add
add
cmp
add
add
add
je
cmp
ja
imul
js
add
add
add
ins
add
je
data16
jb
ins
add
add
cmp
add
add
add
outs
add
dec
add
add
ins
add
dec
add
add
dec
add
jne
ins
add
add
pop
add
add
push
add
dec
add
xor
jne
bound
push
add
push
add
add
inc
add
pop
add
push
inc
add
dec
add
jbe
push
add
outs
add
das
add
add
add
add
add
xor
arpl
xor
add
add
inc
add
pop
add
add
dec
add
add
inc
add
add
ins
add
add
pop
add
cmp
dec
add
xor
dec
add
ja
arpl
push
add
jb
pop
add
dec
add
arpl
inc
add
inc
add
add
push
add
add
add
jb
jo
xor
cmp
inc
add
add
push
add
push
add
add
push
add
push
add
add
push
add
jne
push
add
xor
push
ja
dec
add
add
add
add
add
xor
jno
imul
add
dec
add
add
jo
push
add
pop
add
sbb
xchg
inc
stos
push
jno
out
mul
add
mov
pop
push
sbb
mov
push
sbb
adc
add
push
add
push
add
add
adc
add
adc
push
adc
push
add
or
push
push
pop
and
add
add
add
add
add
and
add
add
add
pop
add
adc
adc
add
add
adc
add
add
push
push
add
add
push
add
add
push
push
add
or
sbb
adc
add
add
inc
add
add
push
add
add
add
and
add
push
or
add
inc
adc
add
adc
add
push
add
pop
add
add
add
adc
adc
imul
and
sbb
sbb
adc
shl
mov
shl
mov
ror
test
mov
sub
add
shl
rol
shr
sar
mov
test
mov
nop
rol
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
shr
rol
shr
shl
rcr
shl
ror
add
shl
adc
mov
add
add
or
test
test
xchg
rol
add
or
add
xor
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
mov
add
cmp
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
