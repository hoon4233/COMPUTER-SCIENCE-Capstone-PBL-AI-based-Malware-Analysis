out
pop
add
add
add
add
add
add
add
and
add
add
add
add
and
add
xor
add
add
add
add
adc
add
add
xor
add
add
add
add
adc
adc
add
add
adc
add
add
sub
add
or
pop
add
dec
test
or
add
push
add
add
add
add
add
add
add
popf
add
add
(bad)
(bad)
(bad)
cmp
add
add
xchg
mov
pop
cmp
sbb
add
sar
(bad)
jmp
add
add
add
cmp
add
lods
add
add
add
and
(bad)
or
cdq
sub
jecxz
fisttp
adc
popa
cmp
and
or
pop
pop
and
(bad)
cdq
popa
sub
xor
ret
sub
add
add
jns
imul
(bad)
(bad)
inc
and
push
aas
pop
and
dec
ins
jl
cmp
(bad)
inc
and
cmp
(bad)
inc
sbb
add
add
push
and
jbe
pop
and
inc
mov
(bad)
inc
rol
sbb
add
outs
sbb
add
jae
add
push
jge
add
add
and
data16
ins
imul
add
(bad)
(bad)
jmp
add
adc
add
add
add
adc
dec
loopne
loop
add
cmp
add
add
call
daa
repz
and
cmc
cmp
cmp
add
add
or
add
bound
add
scas
add
add
add
add
add
add
add
push
add
add
add
add
(bad)
(bad)
call
add
add
add
add
sbb
dec
add
add
jne
add
and
stos
mov
and
inc
xchg
and
add
and
mov
cmp
and
addr16
cmp
je
add
inc
sub
add
and
and
cmp
call
cmp
add
add
sub
add
cmp
add
and
and
cmp
(bad)
(bad)
cmp
add
and
fidivr
and
pusha
movs
add
daa
add
add
adc
xchg
dec
fcomp
jp
cmp
popa
cmp
add
add
outs
sbb
add
and
in
push
cmp
(bad)
(bad)
push
add
or
xor
stc
(bad)
(bad)
jmp
loope
push
xlat
cmp
add
add
jnp
add
add
sbb
adc
sub
and
and
cmp
add
add
sbb
and
pop
sbb
adc
mov
cmp
and
cmp
add
stos
in
rcr
adc
fisub
xchg
add
push
pop
pop
pop
push
and
sbb
push
jae
add
or
add
add
inc
or
add
jae
add
or
add
or
call
(bad)
dec
outs
and
add
adc
sub
mov
pop
and
jo
(bad)
popa
push
cmp
add
add
aaa
add
cmp
add
ds
retf
and
mov
adc
pop
std
xchg
sub
and
arpl
popa
sub
add
push
mov
(bad)
(bad)
jmp
jno
outs
and
(bad)
sbb
pop
adc
adc
add
ret
jmp
add
test
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
jmp
jbe
push
push
cmp
outs
and
add
adc
cdq
push
xchg
(bad)
pop
and
push
popa
sub
add
or
call
pop
push
add
inc
push
and
stos
jnp
cmp
(bad)
(bad)
cmp
inc
and
div
inc
and
les
push
std
(bad)
call
add
mov
pop
pop
cli
xor
cmp
and
cmps
xchg
push
cmp
std
(bad)
jmp
into
in
in
cmp
(bad)
(bad)
jmp
or
sbb
(bad)
push
add
push
cmp
std
(bad)
dec
cmp
std
(bad)
call
add
call
add
jo
(bad)
inc
cmp
add
call
add
call
add
mov
(bad)
inc
add
xor
add
add
adc
adc
pavgb
cmp
add
and
cdq
enter
and
add
pop
pop
pop
cmp
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
cmp
rol
add
dec
popa
into
movs
pop
and
cmp
mov
add
jnp
add
add
scas
add
add
scas
add
add
mov
add
and
stos
jl
dec
(bad)
(bad)
(bad)
cmp
cmp
add
add
movs
add
add
sahf
dec
mov
ret
pop
mov
cmp
(bad)
(bad)
(bad)
cmp
push
and
(bad)
(bad)
jg
push
push
pop
push
push
adc
xor
jecxz
in
lock
cmp
(bad)
(bad)
(bad)
cmp
add
adc
sub
and
mov
iret
add
add
call
pop
adc
cmp
add
mov
xlat
into
popa
cmp
(bad)
(bad)
push
add
or
add
adc
movs
lock
lods
pop
and
or
add
push
pop
adc
push
pop
dec
add
add
add
and
add
and
rol
cmp
bound
add
add
push
dec
pop
outs
add
or
push
cmp
and
gs
(bad)
call
add
mov
sub
pop
and
stos
fistp
popa
sub
and
call
in
sub
or
push
push
pop
dec
push
and
(bad)
(bad)
jmp
gs
mov
and
dec
jae
add
or
mov
adc
(bad)
call
add
call
or
popa
sub
push
ds
std
(bad)
inc
pop
adc
jnp
add
add
sub
add
push
inc
push
and
sbb
sub
(bad)
(bad)
jmp
inc
pusha
xchg
lock
out
cmps
popa
and
pop
inc
adc
add
call
inc
(bad)
(bad)
jmp
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
inc
add
add
(bad)
(bad)
call
add
cmp
add
jb
(bad)
jmp
add
add
(bad)
jmp
(bad)
(bad)
jmp
adc
imul
call
sub
inc
cmp
sub
and
in
ja
adc
mov
xor
popa
cmp
(bad)
dec
pop
inc
or
pop
sbb
add
or
outs
sub
add
es
xchg
(bad)
pop
cmp
sbb
(bad)
(bad)
inc
pop
adc
sub
and
sbb
adc
(bad)
jmp
fbstp
mov
inc
sbb
pop
or
dec
pop
pop
push
and
or
cmp
cld
(bad)
call
add
mov
and
icebp
sub
cmp
(bad)
(bad)
inc
pop
or
push
sbb
push
and
mov
imul
cld
(bad)
inc
adc
fstp
std
outs
xchg
add
mov
jae
hlt
mov
fsin
(bad)
inc
pop
adc
pop
or
dec
push
inc
push
adc
inc
mov
in
mov
fsub
mov
pop
adc
sub
and
cmc
je
jle
(bad)
call
add
(bad)
jbe
imul
popa
cmp
sbb
dec
add
push
and
jno
cmp
(bad)
jmp
enter
and
add
mov
and
or
popa
cmp
(bad)
inc
push
pop
push
pop
or
dec
pop
pop
push
and
out
cmp
cld
(bad)
jmp
pop
adc
and
pop
ja
and
cmp
fs
popa
cmp
(bad)
(bad)
inc
and
ins
movs
cmp
(bad)
(bad)
dec
pop
popa
or
pop
sbb
add
or
outs
sub
add
es
ins
jmp
adc
jbe
sub
pop
and
or
popa
cmp
std
(bad)
jmp
or
sar
call
add
call
add
cmp
(bad)
inc
cmp
(bad)
dec
cmp
jmp
add
or
inc
cld
(bad)
jmp
add
or
inc
cld
(bad)
call
add
push
add
or
popa
cld
(bad)
inc
add
adc
add
retf
add
add
adc
and
xchg
and
and
add
pop
sbb
xor
sub
add
sar
(bad)
inc
add
add
add
xor
add
sub
sub
int
and
cmp
add
sbb
add
add
fcos
(bad)
call
add
pop
add
add
mov
or
sub
and
cmp
ins
or
sub
(bad)
jmp
inc
jnp
add
add
push
add
add
sub
add
add
push
or
sbb
add
and
add
and
and
xlat
and
(bad)
cmp
or
pop
(bad)
(bad)
dec
cmp
sub
pop
add
push
sub
add
sbb
add
mov
add
add
add
add
and
das
call
push
nop
popa
and
add
pop
inc
or
add
outs
add
add
add
enter
rol
add
jmp
add
(bad)
(bad)
inc
sbb
add
and
jg
and
sar
add
add
sub
push
pop
inc
or
add
mov
add
ins
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
cld
add
add
aad
xchg
add
add
mov
pusha
aam
and
outs
loopne
popa
sub
add
mov
add
and
shl
jmp
call
cmp
(bad)
(bad)
cmp
add
add
and
pop
and
add
shl
(bad)
(bad)
(bad)
cmp
add
add
add
into
add
add
iret
add
add
add
rcl
xor
mov
popa
cmp
(bad)
(bad)
cmp
add
add
outs
sbb
add
or
mov
add
and
stos
and
sub
and
push
sub
and
loopne
cmp
jecxz
(bad)
jmp
and
js
and
mov
jg
sbb
xchg
(bad)
jmp
or
mov
push
enter
(bad)
(bad)
(bad)
inc
add
sub
add
or
and
test
cmp
and
test
inc
push
popa
cmp
(bad)
(bad)
inc
and
push
adc
into
(bad)
(bad)
(bad)
fisttp
cmp
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
and
stos
cld
and
and
add
add
adc
add
add
add
(bad)
(bad)
inc
add
add
sub
or
mov
pop
xor
jbe
push
jnp
sub
add
outs
das
add
or
push
sub
and
sbb
jmp
movs
mov
sub
add
sub
add
or
push
push
and
nop
popa
and
add
add
add
add
add
add
add
add
fdivr
(bad)
jmp
inc
and
out
sar
pop
inc
add
add
xor
add
sbb
add
loopne
(bad)
jmp
cmp
xchg
stc
sub
out
pop
pop
and
mov
adc
and
or
jg
cdq
movs
pop
and
push
imul
sub
add
add
add
add
add
add
add
add
add
add
adc
add
bound
add
add
cmp
add
add
daa
add
add
(bad)
retf
lods
mov
cmp
add
pop
push
pop
inc
push
add
add
add
add
add
add
add
je
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
cmp
add
add
jne
adc
pop
and
sub
retf
add
add
and
sbb
cmp
in
xor
and
dec
xchg
and
cmp
movs
and
cvtps2pd
and
mov
add
add
inc
sub
push
cmp
stc
sti
out
cmp
(bad)
jmp
inc
cmp
add
add
pop
fld
popa
and
add
or
or
add
mov
add
(bad)
(bad)
(bad)
push
add
enter
mov
(bad)
call
add
add
add
add
add
add
add
cwde
add
add
gs
pop
cs
(bad)
(bad)
dec
and
daa
not
pop
and
mov
cmps
data16
(bad)
(bad)
jmp
retf
or
loop
pop
jnp
add
add
xor
add
and
frstor
push
mov
cmp
(bad)
dec
and
and
or
(bad)
(bad)
jmp
add
iret
enter
(bad)
call
cmp
(bad)
(bad)
inc
and
sbb
call
sub
pop
cmp
(bad)
(bad)
jmp
repz
neg
js
(bad)
dec
and
and
or
push
popa
cmp
(bad)
(bad)
call
sub
add
or
and
imul
pop
and
sub
popa
cmp
(bad)
(bad)
inc
and
(bad)
(bad)
jmp
test
repnz
(bad)
inc
add
add
add
add
dec
fstp
(bad)
inc
or
sahf
jo
(bad)
pop
and
(bad)
fwait
shl
adc
(bad)
jmp
sub
and
dec
xor
popa
cmp
std
(bad)
dec
and
mov
ret
pop
popa
sbb
dec
(bad)
(bad)
(bad)
cmp
add
aam
(bad)
dec
cmp
std
(bad)
dec
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
dec
cmp
(bad)
dec
jl
(bad)
inc
add
xor
add
add
adc
and
leave
cmovle
popa
and
add
fs
inc
add
add
or
add
or
add
add
jno
add
push
adc
add
add
sub
add
cdq
or
add
add
jbe
add
arpl
add
and
pop
add
inc
or
add
push
add
lods
or
add
clc
add
add
(bad)
call
sldt
add
add
cmp
or
add
add
arpl
add
rcl
add
jge
add
rol
add
xor
add
lock
add
adc
add
add
add
add
add
xlat
add
add
add
xor
add
or
add
inc
push
add
test
add
fmul
add
mov
add
add
add
add
add
add
add
inc
adc
add
sldt
stos
add
add
add
cli
push
add
or
add
retf
add
add
add
pop
add
cmps
push
add
xchg
add
add
push
or
add
or
add
or
add
add
add
add
push
add
cmc
or
add
add
leave
push
add
push
add
add
lds
add
leave
pop
add
je
add
and
add
add
or
add
mov
add
popw
add
or
add
fadd
add
repnz
xor
add
pop
sldt
push
or
add
add
add
add
add
add
out
add
scas
add
add
push
add
cmp
add
cmp
adc
add
in
jl
push
pop
and
cmp
sbb
or
add
cmp
adc
add
fst
pop
popa
fcomp
cmp
add
add
mov
inc
scas
cmp
(bad)
(bad)
(bad)
cmp
or
add
cmp
mov
add
and
and
xchg
popa
cmp
std
(bad)
(bad)
cmp
ins
jo
mov
and
cmp
or
add
and
mov
cmp
std
(bad)
(bad)
cmp
call
cmp
add
cmp
add
jae
add
or
add
add
sub
test
and
add
scas
test
popa
cmp
and
and
retf
cmp
scas
cmps
cmc
test
scas
loop
cmp
jnp
add
add
or
addr16
add
or
add
or
adc
xchg
(bad)
cmp
inc
pop
and
and
jb
popa
cmp
(bad)
inc
jnp
add
add
outs
xor
and
push
jmp
iret
and
popa
cmp
std
(bad)
inc
and
add
pop
and
cmp
or
add
sub
add
or
jnp
add
add
aaa
add
or
aam
out
mov
(bad)
cld
(bad)
inc
and
push
jmp
jns
cmp
or
add
and
out
mov
inc
and
adc
or
test
cmp
or
add
and
int3
cmp
cld
(bad)
inc
and
cdq
jno
pop
and
mov
popa
cmp
or
add
jnp
add
add
add
add
cmp
add
add
xor
(bad)
inc
and
add
inc
and
add
jae
add
or
cmp
add
sbb
aas
(bad)
(bad)
inc
and
and
adc
popa
push
cmp
or
add
fs
(bad)
inc
and
cdq
and
add
imul
jb
add
add
add
add
sldt
jo
cmp
add
and
loopne
sar
xor
(bad)
inc
jnp
add
add
or
jle
xor
add
outs
xor
add
push
and
and
cmp
or
add
jnp
add
add
sbb
sub
add
and
mov
sti
(bad)
inc
jnp
add
add
and
add
jae
add
or
add
or
and
pop
repz
and
cmp
sti
(bad)
inc
and
call
pop
or
jo
cmp
or
add
jae
add
or
add
add
pop
mov
cmp
add
add
add
or
xchg
add
add
add
or
add
or
and
jno
and
cmp
(bad)
inc
and
int
pop
and
cmp
push
and
repz
pop
and
cmp
cmp
(bad)
jmp
outs
or
add
push
and
fldenv
pop
and
cmp
add
add
sub
and
and
(bad)
inc
and
and
cmps
pop
out
popa
cmp
or
add
and
add
and
add
jae
add
or
aas
add
or
or
mov
inc
pop
sub
add
pop
and
iret
stos
pop
and
pop
iret
popa
cmp
cli
(bad)
inc
jnp
add
add
inc
add
or
test
(bad)
cli
(bad)
inc
and
fs
call
cmp
pop
add
add
add
or
jnp
add
add
aaa
add
or
mov
scas
(bad)
cmp
and
and
sub
add
add
add
add
outs
inc
add
or
sub
push
(bad)
inc
pop
and
and
lahf
push
cli
(bad)
inc
jnp
add
add
or
xor
xor
add
outs
xor
add
push
and
test
pop
and
fcmovnbe
popa
cmp
add
jnp
add
add
inc
add
add
jae
add
or
add
or
and
es
pop
and
cmp
pop
add
add
add
add
outs
inc
add
or
test
inc
repnz
stc
(bad)
inc
and
adc
pop
and
pop
bound
or
add
add
add
add
outs
inc
add
or
and
xchg
jl
and
leave
loopne
popa
cmp
push
add
add
add
add
inc
add
or
icebp
cmp
(bad)
inc
push
and
pop
pop
and
std
clc
popa
cmp
push
add
add
add
add
xor
add
cmp
add
and
in
movs
cmp
sub
add
or
jnp
add
add
aaa
add
or
pop
and
call
scas
scas
cmp
stc
(bad)
inc
add
add
jo
sub
add
push
and
push
and
cmp
add
add
add
add
outs
dec
add
or
and
outs
hlt
pop
and
in
push
popa
cmp
add
add
add
or
jnp
add
add
aaa
add
or
lods
mov
stc
(bad)
inc
and
lods
push
push
pop
and
cmp
push
add
add
jnp
add
add
outs
add
jo
sub
add
and
add
in
(bad)
(bad)
inc
pop
and
and
div
popa
cmp
clc
(bad)
inc
and
push
jb
and
pop
repz
cmp
add
mov
lods
clc
(bad)
inc
pop
and
inc
push
pop
and
(bad)
push
popa
cmp
and
jp
or
xor
cmp
jnp
add
add
outs
dec
add
or
dec
mov
(bad)
inc
jnp
add
add
outs
dec
add
or
and
cwde
outs
retf
dec
ffree
mov
(bad)
inc
and
mov
push
pop
popa
cmp
add
add
add
add
add
jo
sub
add
and
stos
adc
inc
and
push
pop
and
call
jbe
popf
popa
popa
cmp
add
jnp
add
add
cmp
add
and
add
add
add
or
add
or
mov
xor
(bad)
inc
and
xor
inc
popa
cmp
add
add
jnp
add
add
outs
inc
add
or
and
and
int
popa
cmp
add
add
and
mov
inc
and
push
outs
fstp
mov
fidiv
cmp
add
add
and
add
(bad)
inc
pop
and
and
hlt
pop
popa
cmp
and
mov
pop
and
mov
add
add
and
sbb
cmp
add
add
add
outs
dec
add
or
jno
mov
cmp
(bad)
inc
and
sub
cmp
popa
cmp
add
add
ins
mov
aam
sub
(bad)
inc
push
cmp
loopne
lods
dec
pop
and
int3
xor
popa
cmp
add
add
jnp
add
add
mov
cmp
add
and
div
(bad)
inc
and
jmp
pop
and
pushf
mov
add
add
and
adc
and
dec
packuswb
add
add
add
or
jnp
add
add
aaa
add
or
aad
clc
in
cmp
jnp
add
add
mov
add
cmp
add
add
and
(bad)
xchg
ins
push
popa
cmp
and
and
stos
popa
cmp
push
and
and
sub
aas
mov
xchg
add
add
jnp
add
add
rol
add
sub
add
and
add
(bad)
inc
and
and
mov
push
and
(bad)
pop
icebp
cmp
idiv
inc
and
and
mov
cmp
add
add
add
add
jmp
add
dec
add
or
and
cmps
outs
cmps
pop
and
leave
int
popa
cmp
add
add
and
mov
cmc
(bad)
inc
and
ficom
or
add
add
jnp
add
add
dec
add
or
mov
mov
add
add
add
outs
inc
add
or
push
cmp
(bad)
(bad)
jmp
outs
sahf
push
out
pop
and
cmp
rcl
add
popa
cmp
add
add
and
ins
fstp
(bad)
cmc
(bad)
inc
and
int
pop
pop
and
cmp
jnp
add
add
outs
inc
add
or
ds
push
stc
cmp
(bad)
inc
add
add
add
cmp
add
pop
sub
or
add
or
push
and
and
(bad)
mov
popa
cmp
add
add
add
add
rol
add
cmp
add
pop
cmp
std
(bad)
jmp
cmps
sahf
xchg
add
jnp
add
add
pop
add
jo
cmp
add
push
and
pop
inc
or
enter
popa
cmp
add
add
push
and
cmp
aas
fmul
add
add
jae
add
or
add
add
mov
sub
(bad)
inc
and
ins
adc
in
adc
add
add
push
and
and
add
popa
cmp
add
add
jnp
add
add
dec
pop
adc
add
or
add
or
add
add
add
outs
inc
add
or
and
jecxz
popf
cmp
and
and
pop
and
xor
add
add
and
lahf
jmp
pop
and
mov
pop
and
pop
jmp
inc
and
and
jmp
add
add
add
mov
cmp
hlt
(bad)
inc
and
adc
je
and
rcr
popa
cmp
add
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
out
cmps
mov
jmp
(bad)
inc
and
and
cmp
add
add
jnp
add
add
outs
push
add
or
out
into
test
ret
repz
inc
and
mov
xlat
int
xlat
popa
cmp
add
add
jnp
add
add
outs
inc
add
or
and
and
cmp
jnp
add
add
outs
inc
add
or
push
and
and
cmp
and
jp
sahf
cmp
(bad)
inc
pop
and
fwait
adc
cmp
push
popa
cmp
(bad)
inc
and
and
rcl
xor
ins
add
add
add
sub
add
cmp
add
and
and
xchg
cmp
and
pusha
pop
pop
and
inc
add
add
or
add
add
fnstenv
in
cmp
repz
inc
jnp
add
add
adc
add
outs
push
add
or
and
and
adc
popa
sub
add
pop
and
jmp
push
sub
adc
ins
out
or
or
pop
pop
inc
pop
add
add
add
add
add
add
(bad)
dec
(bad)
jmp
stc
(bad)
(bad)
cmp
(bad)
inc
stc
(bad)
(bad)
js
(bad)
jmp
add
sbb
(bad)
dec
std
(bad)
dec
std
(bad)
(bad)
jnp
(bad)
jmp
repz
(bad)
fdecstp
(bad)
inc
sti
(bad)
dec
hlt
(bad)
call
(bad)
push
cld
(bad)
jmp
idiv
inc
repz
(bad)
(bad)
(bad)
call
(bad)
push
cli
(bad)
(bad)
add
add
cld
(bad)
call
(bad)
jmp
add
cmps
cmc
(bad)
jmp
add
add
add
add
idiv
jmp
add
add
sti
(bad)
inc
cli
(bad)
inc
add
idiv
call
add
jecxz
add
aam
add
inc
hlt
(bad)
jmp
(bad)
(bad)
js
(bad)
jmp
add
dec
stc
(bad)
(bad)
jns
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
cmp
add
jp
(bad)
call
std
(bad)
push
cmc
(bad)
call
add
std
(bad)
jmp
add
add
(bad)
(bad)
dec
clc
(bad)
jmp
cld
(bad)
call
idiv
(bad)
jg
(bad)
jmp
(bad)
dec
add
add
add
dec
cli
(bad)
call
(bad)
call
add
mov
add
clc
(bad)
(bad)
mov
add
add
stc
(bad)
inc
repz
call
cmc
(bad)
jmp
cli
(bad)
jmp
add
add
add
add
int
mov
(bad)
inc
and
sub
lock
popa
cmp
(bad)
inc
and
aaa
icebp
(bad)
inc
jnp
add
add
outs
xor
and
push
mov
pop
and
adc
(bad)
(bad)
inc
add
push
add
inc
add
or
push
add
or
and
and
sbb
(bad)
inc
and
xchg
in
sar
jmp
test
jl
int
cmp
std
(bad)
inc
jb
add
jo
cmp
add
and
adc
lock
inc
pop
and
in
ret
inc
in
imul
or
lea
pop
and
cmp
std
(bad)
inc
and
ins
js
inc
and
push
scas
pop
and
jp
popa
cmp
and
adc
cmp
(bad)
inc
and
mov
repnz
cmp
and
lock
inc
jnp
add
add
dec
pop
adc
add
or
add
or
and
and
xchg
(bad)
inc
jnp
add
add
outs
inc
add
or
mov
sbb
(bad)
inc
and
cmp
and
push
leave
mov
(bad)
inc
and
cdq
xchg
cmp
out
(bad)
(bad)
cmp
and
mov
int
popa
cmp
out
(bad)
inc
and
and
call
(bad)
inc
jnp
add
add
or
add
pop
push
jae
add
or
add
or
push
pop
rcl
cmp
jnp
add
add
push
add
or
lea
push
add
add
add
outs
pop
add
or
and
shl
movs
pop
and
push
or
popa
cmp
or
add
inc
add
jo
sub
add
pop
and
push
out
pop
and
cmp
(bad)
inc
and
mov
pop
and
cld
(bad)
inc
and
out
cmp
(bad)
inc
and
jns
nop
pop
and
jae
cmp
(bad)
inc
push
and
xor
pop
and
mov
sti
popa
cmp
(bad)
inc
add
add
add
daa
pop
adc
add
or
add
or
mov
add
(bad)
inc
and
and
cwde
inc
pop
popa
cmp
jnp
add
add
inc
pop
or
or
add
or
add
add
add
outs
inc
add
or
and
bound
cmp
out
(bad)
inc
pop
and
stc
pop
pop
and
push
out
(bad)
inc
sub
add
or
jnp
add
add
aaa
add
or
and
and
lods
je
popa
cmp
and
pop
add
(bad)
movs
mov
mov
pop
sub
add
and
arpl
call
sub
push
and
dec
cmp
and
jl
cli
popa
cmp
(bad)
inc
push
and
inc
inc
jbe
and
cmp
popa
cmp
(bad)
inc
and
aaa
out
(bad)
inc
and
add
iret
xor
dec
sti
(bad)
inc
and
popa
or
inc
and
ficomp
pop
and
and
(bad)
inc
jnp
add
add
outs
pop
add
or
rcl
cmp
in
(bad)
inc
pop
and
hlt
pop
and
cmp
in
(bad)
inc
jnp
add
add
push
add
add
push
jae
add
or
add
or
and
xor
pop
and
cmp
cli
(bad)
inc
sub
add
and
iret
cld
mov
cmps
in
(bad)
inc
jnp
add
add
cmp
and
adc
rcr
push
arpl
in
(bad)
inc
and
cs
and
not
cli
(bad)
inc
and
mov
(bad)
inc
pop
and
mov
add
cmps
push
jecxz
popa
cmp
(bad)
inc
pop
and
dec
pop
(bad)
pop
and
cmp
(bad)
inc
add
sub
add
pop
and
and
sub
sub
(bad)
inc
and
push
cld
mov
and
sbb
popa
cmp
(bad)
inc
jnp
add
add
cmp
add
pop
and
add
or
add
or
not
sar
stc
in
(bad)
inc
pop
and
xor
jmp
(bad)
inc
and
test
and
xchg
int3
imul
stc
(bad)
inc
jnp
add
add
or
or
xor
add
outs
xor
add
push
and
adc
lea
aam
(bad)
inc
sub
add
or
jnp
add
add
aaa
add
or
push
and
test
stc
(bad)
inc
push
and
out
test
pop
and
xchg
inc
dec
popa
cmp
or
jl
(bad)
inc
cmp
out
(bad)
inc
cmp
out
(bad)
inc
cmp
jmp
add
or
inc
out
(bad)
inc
cmp
inc
cmp
inc
cmp
(bad)
inc
cmp
(bad)
inc
add
xor
add
add
adc
sub
or
dec
inc
outs
xchg
and
and
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
sub
cmp
push
sbb
add
add
loopne
(bad)
jmp
add
add
add
add
jge
pusha
loop
mov
and
inc
push
nop
sub
cmc
imul
add
fwait
push
and
daa
mov
and
dec
dec
popa
sub
add
add
add
add
adc
cmp
cmp
add
add
jmp
aad
popa
and
add
pop
inc
or
add
ret
(bad)
jg
add
sgdtd
add
add
add
add
add
add
add
add
or
add
and
int3
cwde
cmp
cmp
add
cmp
add
and
sbb
mov
lods
cmp
add
add
je
push
push
pop
and
pop
mov
sub
push
add
dec
pop
xor
and
(bad)
(bad)
(bad)
cmp
add
add
inc
pop
jl
and
add
int
nop
inc
popa
sub
std
add
add
add
add
cmp
add
add
inc
cmp
add
add
adc
mov
cmp
(bad)
(bad)
cmp
add
add
in
add
add
ror
in
pop
shl
cmp
(bad)
(bad)
jmp
sti
cli
iret
movs
and
mov
rol
add
push
pop
inc
or
add
je
add
sbb
add
cmp
add
add
(bad)
(bad)
dec
add
add
(bad)
dec
push
add
pushf
cmp
(bad)
(bad)
inc
jae
add
or
and
mov
push
add
add
add
add
add
add
imul
or
add
jnp
jno
cmp
in
and
cmp
(bad)
jmp
push
and
repnz
and
and
adc
cmp
(bad)
dec
and
icebp
shr
and
cmp
(bad)
jmp
or
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
(bad)
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
sub
(bad)
inc
add
adc
add
sldt
add
add
adc
push
or
or
add
sub
add
xor
add
add
add
add
adc
sub
or
sub
xor
add
add
add
add
adc
add
dec
xor
sub
inc
sub
sbb
mov
add
cmp
add
add
pop
sbb
movs
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
enter
and
imul
and
sbb
xchg
popa
cmp
mov
mov
mov
cmp
pop
sbb
mov
and
(bad)
sub
cmp
(bad)
jmp
sar
lods
add
add
mov
and
aas
jge
popa
cmp
(bad)
call
cmp
mov
and
(bad)
inc
outs
adc
add
or
sub
and
jns
in
popa
cmp
(bad)
(bad)
inc
or
aas
mov
pop
and
push
dec
cli
popa
cmp
(bad)
jmp
pop
push
jno
leave
popa
and
add
add
loopne
(bad)
jmp
(bad)
(bad)
jmp
sti
or
cmp
(bad)
(bad)
(bad)
fstp
add
add
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
jmp
add
push
cmp
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
push
add
push
cmp
(bad)
jmp
and
aam
adc
inc
sub
or
add
add
add
add
add
add
add
add
add
fdivr
(bad)
jmp
pop
add
and
jae
popa
pop
sbb
and
or
mov
or
jmp
test
or
leave
mov
imul
inc
and
sub
nop
and
leave
popa
and
add
add
sbb
add
lods
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
and
(bad)
(bad)
call
sub
or
stos
push
das
mov
and
push
jns
popa
sub
fiadd
pop
sub
inc
sbb
add
add
add
add
add
add
push
add
add
add
add
xor
add
add
adc
sub
or
sar
mov
out
popa
and
add
(bad)
(bad)
push
add
add
add
add
add
sub
add
sub
mov
jl
fcmovnb
popa
and
add
add
loopne
(bad)
inc
add
add
add
add
imul
sub
icebp
sub
dec
jg
pop
and
dec
sub
push
cmps
and
mov
adc
add
adc
add
adc
adc
sldt
add
adc
adc
add
sub
or
daa
sub
inc
stos
shl
or
or
or
add
je
add
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
push
add
add
mov
add
and
jbe
loopne
popa
and
add
add
jnp
add
inc
add
add
(bad)
(bad)
call
xor
retf
pushf
push
sub
mov
and
and
pop
popa
sub
cmp
and
cmp
(bad)
inc
or
div
add
test
(bad)
inc
and
pop
(bad)
(bad)
jmp
push
or
xor
repz
push
cmp
inc
(bad)
(bad)
jmp
scas
dec
fwait
stos
and
pop
adc
inc
mov
sub
cmp
(bad)
inc
sub
add
push
add
and
stc
test
pop
(bad)
(bad)
inc
and
and
or
cmp
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
cmps
or
adc
and
cmp
sub
sbb
inc
push
add
add
add
add
add
or
add
imul
(bad)
call
(bad)
cmp
add
and
sti
jge
leave
(bad)
bound
cmp
pop
inc
add
add
imul
add
(bad)
(bad)
jmp
mov
fmul
pushf
sub
imul
add
hlt
or
in
call
(bad)
jmp
pop
adc
adc
add
pop
and
out
ss
and
adc
sub
popa
cmp
(bad)
jmp
inc
adc
sldt
add
cmp
(bad)
jmp
pop
inc
lods
push
cmp
(bad)
call
sub
sub
and
and
fnstenv
(bad)
(bad)
fisub
or
aas
(bad)
(bad)
dec
cmp
inc
cmp
sub
sub
sub
add
or
fsubr
add
add
add
add
out
out
add
add
add
adc
add
lods
add
add
add
adc
and
sub
xor
popa
and
add
pop
inc
add
add
push
add
add
add
add
add
(bad)
(bad)
jmp
inc
add
pop
and
push
or
and
sub
sub
push
sub
sub
dec
and
aam
pop
and
inc
jge
add
add
inc
and
mov
aad
push
sub
push
cmps
popa
cmp
sub
and
xchg
lods
lahf
pop
adc
sub
add
add
sub
cmp
cmp
sub
add
push
sub
sub
add
into
sub
add
push
sub
add
add
xor
add
add
add
add
adc
or
pavgb
xchg
add
add
and
inc
inc
mov
popa
and
add
or
inc
or
add
add
add
add
add
add
add
add
add
mov
add
arpl
add
rol
add
mov
(bad)
call
add
test
add
cmp
add
add
fs
jecxz
and
data16
and
add
and
cmp
popa
cmp
add
add
daa
add
add
pop
dec
pop
pop
push
and
cld
xchg
and
add
ja
(bad)
(bad)
cmp
add
add
or
sub
and
retf
out
sub
jp
das
les
pop
(bad)
(bad)
jmp
mov
jecxz
sub
hlt
add
add
pop
inc
adc
add
and
adc
(bad)
cmp
add
add
sub
jns
or
sub
cmp
add
add
or
xchg
loopne
adc
(bad)
jmp
mov
jmp
pop
in
popa
and
pop
inc
sldt
add
add
add
add
cmp
add
test
add
add
add
add
jmp
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
xor
mov
call
add
loop
mov
scas
jmp
or
add
or
and
int3
add
(bad)
jp
(bad)
jmp
jo
push
push
popa
cmp
(bad)
inc
jae
add
or
jae
ret
mov
dec
pop
outs
pusha
add
or
add
mov
sbb
daa
(bad)
(bad)
jmp
imul
popa
cmp
(bad)
(bad)
inc
sbb
dec
push
and
into
jmp
cs
(bad)
inc
and
pop
out
cmp
(bad)
(bad)
call
add
cmp
(bad)
(bad)
jmp
sbb
and
inc
aam
popa
cmp
(bad)
(bad)
inc
push
pop
push
sbb
push
inc
push
adc
xlat
jns
(bad)
pop
and
cmp
(bad)
(bad)
inc
and
in
std
(bad)
call
add
cs
add
inc
ins
cli
push
popa
cmp
(bad)
(bad)
inc
adc
jle
or
cld
push
shl
jmp
mov
(bad)
call
add
stc
test
retf
jno
cmp
or
mov
mov
add
arpl
inc
add
pop
push
adc
push
pop
mov
pop
and
inc
push
popa
cmp
(bad)
dec
sub
cmp
call
add
call
add
leave
std
(bad)
inc
cmp
std
(bad)
inc
cmp
std
(bad)
call
add
inc
cmp
(bad)
(bad)
call
add
sbb
(bad)
inc
es
(bad)
inc
add
xor
jl
add
or
add
add
lods
push
iret
jmp
and
add
push
pop
inc
push
add
add
add
jecxz
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
jns
add
pop
add
cwde
add
add
ret
add
add
in
add
cmp
add
add
jmp
add
add
add
cmp
add
add
out
add
add
push
xor
scas
pop
and
adc
popa
cmp
(bad)
(bad)
cmp
add
add
push
and
popa
add
or
jecxz
cmp
and
add
push
(bad)
(bad)
inc
add
add
add
bound
add
or
scas
nop
ja
pop
and
cmp
(bad)
dec
and
cwde
pop
pop
and
cmp
and
sbb
(bad)
inc
and
add
add
add
or
cmp
add
add
and
sub
mov
cli
dec
popa
cmp
sbb
add
add
xchg
pop
and
mov
add
sbb
add
or
and
sar
(bad)
inc
or
xor
cmp
mov
and
cmp
(bad)
(bad)
call
(bad)
(bad)
popa
sub
push
pop
outs
add
or
int3
and
cmp
and
pop
mov
mov
sub
add
xchg
clc
call
(bad)
jmp
xchg
add
retf
out
pop
fbld
or
or
or
add
mov
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
add
dec
(bad)
(bad)
call
(bad)
push
add
and
shr
cmp
(bad)
inc
or
sub
push
mov
cmps
imul
(bad)
(bad)
jmp
push
or
jl
cmps
mov
mov
(bad)
(bad)
dec
and
jb
repz
mov
add
add
add
data16
or
add
std
(bad)
call
cmp
dec
push
cmp
(bad)
jmp
sbb
enter
and
popa
cmp
(bad)
inc
sub
inc
cmp
(bad)
(bad)
jmp
add
or
adc
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
or
or
cmp
(bad)
dec
cmp
(bad)
(bad)
push
add
or
pop
(bad)
(bad)
call
xor
add
add
add
add
adc
push
jnp
add
add
add
test
adc
add
add
add
sub
sub
jge
add
add
add
cmc
add
hlt
adc
add
pop
add
add
add
adc
adc
adc
sub
or
add
add
add
add
add
xor
add
add
or
add
pop
push
dec
loopne
rol
sar
and
sub
popa
and
add
or
or
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
pop
stos
pop
push
cmp
add
add
ret
repnz
cmp
add
add
and
fwait
cmp
add
and
pop
cmp
inc
and
dec
popa
cmp
push
add
pop
inc
cmp
add
add
scas
shl
dec
cmp
(bad)
(bad)
cmp
add
add
cmp
add
test
cmp
add
pop
or
outs
push
add
push
inc
inc
push
and
enter
cs
(bad)
call
push
and
(bad)
loope
pop
and
stos
popa
sub
push
push
push
adc
and
loop
cwde
pop
and
sub
jo
add
and
das
addr16
cmp
(bad)
(bad)
(bad)
cmp
call
pop
and
and
pop
jns
cmp
(bad)
(bad)
jmp
int
jecxz
and
lea
adc
push
pop
inc
or
add
sbb
add
xchg
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
push
(bad)
(bad)
dec
(bad)
jmp
(bad)
jmp
or
(bad)
(bad)
call
push
and
cmp
inc
pop
and
movs
les
mov
and
fcmovbe
sub
mov
(bad)
inc
add
add
add
imul
or
adc
and
and
lods
popa
cmp
(bad)
inc
jnp
add
add
outs
ins
add
or
add
or
add
and
cmp
jg
sub
popa
and
pop
inc
adc
add
rol
add
add
cdq
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
add
aam
add
dec
add
add
add
add
cmp
add
push
sbb
add
outs
add
or
(bad)
inc
add
adc
and
mov
ficomp
bound
mov
pop
or
outs
sbb
add
push
adc
and
fidiv
pop
and
and
popa
cmp
(bad)
inc
jae
add
or
add
add
pop
and
and
cmp
(bad)
call
push
and
gs
pop
and
stc
dec
jecxz
cmp
add
add
jnp
add
add
sub
add
outs
jo
add
outs
jno
add
and
xchg
jmp
test
and
or
and
xor
das
pop
popa
cmp
and
cwde
out
cmp
(bad)
(bad)
call
add
push
pop
dec
outs
jb
add
adc
and
sar
(bad)
jmp
fcom
pop
and
and
cmp
push
and
sbb
imul
add
or
adc
push
and
jg
js
popa
sub
add
push
cs
xchg
(bad)
call
push
and
mov
pop
and
add
sub
push
pop
or
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
sub
(bad)
jmp
out
hlt
ret
and
lea
adc
pop
or
or
add
movs
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
mov
add
add
add
add
loope
add
adc
(bad)
call
push
and
and
sub
push
pop
dec
push
sbb
pusha
push
and
sub
pop
cmp
std
(bad)
inc
adc
and
rol
repnz
and
cmp
std
(bad)
call
push
and
scas
(bad)
pop
and
gs
cmp
(bad)
inc
push
pop
adc
outs
add
or
adc
add
(bad)
call
sbb
sbb
(bad)
call
push
and
movs
call
cwde
popa
cmp
(bad)
(bad)
(bad)
fstp
mov
inc
cmp
push
and
lock
mov
add
popa
cmp
(bad)
inc
and
push
cwde
add
add
add
nop
add
add
ret
dec
and
sub
popa
and
push
sub
add
add
add
add
add
add
fdivr
(bad)
jmp
and
push
or
push
sbb
add
add
xor
add
inc
add
add
(bad)
(bad)
call
add
add
rcr
inc
sub
and
sbb
fs
popa
sub
add
or
push
and
and
sub
jns
and
pop
and
daa
jbe
sub
es
sub
add
add
and
pop
clc
jp
jg
sub
popa
and
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
pop
add
add
add
add
test
add
and
mov
clc
and
lea
adc
sbb
add
add
add
add
xor
add
xlat
(bad)
(bad)
inc
add
add
add
pop
inc
sub
rcl
xchg
and
movs
loope
sub
push
dec
pop
mov
and
xchg
pop
or
jl
(bad)
jmp
test
push
push
dec
pop
pop
push
and
push
outs
(bad)
(bad)
(bad)
cmp
(bad)
jmp
sbb
cmp
cmp
dec
(bad)
(bad)
jmp
push
lods
push
(bad)
jmp
or
cmp
(bad)
call
pop
cmp
call
push
cmp
(bad)
call
push
cmp
stos
cli
(bad)
inc
cmp
mov
cmp
ret
inc
add
add
add
mov
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
js
dec
mov
and
cmp
add
sbb
add
(bad)
(bad)
call
add
add
add
add
mov
add
cmp
add
add
lock
add
cmps
or
neg
xlat
adc
popa
sub
and
sub
popa
and
add
push
add
add
add
add
add
(bad)
(bad)
jmp
add
push
sub
popa
hlt
cmp
(bad)
(bad)
cmp
adc
inc
push
cmp
cmp
pop
cmp
stos
jns
fwait
pop
and
mov
jno
cmp
(bad)
(bad)
cmp
adc
mov
add
outs
je
add
or
and
cmp
and
cmp
(bad)
(bad)
jmp
fs
(bad)
dec
and
push
jno
and
call
push
jl
bound
dec
(bad)
(bad)
call
push
sub
inc
lods
cmp
and
and
dec
(bad)
(bad)
inc
sub
dec
cmp
(bad)
(bad)
dec
es
(bad)
inc
cmp
dec
cmp
(bad)
inc
cmp
dec
cmp
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
call
xor
add
add
add
adc
and
cmps
mov
mov
and
add
es
cmp
add
add
and
or
add
sub
add
js
add
rol
add
mov
add
add
add
add
add
add
int3
add
add
into
add
add
xchg
adc
cmp
jo
add
sub
mov
ror
loopne
push
shr
cmp
mov
add
cmp
sub
test
inc
ins
popa
sub
add
cmp
lea
cmp
(bad)
jmp
popa
cmp
jo
es
sub
(bad)
call
sub
and
shl
mov
mov
popa
and
add
pop
inc
add
(bad)
(bad)
push
(bad)
jmp
add
add
dec
mov
(bad)
(bad)
inc
and
pop
mov
push
popf
popa
push
sub
and
cmp
icebp
(bad)
(bad)
jmp
or
clc
(bad)
(bad)
inc
cmp
(bad)
jmp
jne
add
cmp
(bad)
(bad)
push
add
push
cmp
(bad)
jmp
jbe
add
cmp
(bad)
inc
cmp
(bad)
(bad)
jmp
ja
add
cmp
(bad)
inc
cmp
(bad)
dec
cmp
call
xor
add
add
add
add
adc
sub
or
inc
xor
sbb
and
add
add
loopne
(bad)
inc
add
add
add
add
adc
add
and
and
push
pop
mov
sub
sub
add
xor
add
add
adc
and
call
and
add
cmp
add
push
cmp
add
pop
or
or
add
sti
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
add
add
cmp
add
and
gs
les
cmp
add
add
dec
or
push
add
add
or
add
and
push
push
and
(bad)
(bad)
(bad)
cmp
add
add
cmp
add
add
jnp
add
pop
and
cmp
(bad)
(bad)
jle
add
add
inc
cmp
add
add
out
add
cmp
in
fdiv
cmp
(bad)
(bad)
jmp
int3
sbb
and
cmp
pusha
popa
and
add
pop
inc
add
(bad)
(bad)
(bad)
jl
(bad)
push
add
add
mov
cdq
cmp
(bad)
(bad)
jmp
ja
cmps
add
add
mov
imul
outs
popa
cmp
(bad)
(bad)
push
add
jo
or
add
sub
add
or
add
or
add
or
adc
sub
xchg
pop
push
push
popa
cmp
(bad)
(bad)
jmp
or
and
or
xchg
xor
lods
pop
popa
cmp
(bad)
inc
and
cmp
call
test
push
(bad)
(bad)
dec
sub
add
cdq
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
out
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
add
std
(bad)
(bad)
dec
cmp
cmp
(bad)
dec
call
add
push
(bad)
(bad)
inc
add
adc
add
mov
add
adc
cmp
cmp
(bad)
stos
jle
and
sub
popa
and
add
pop
inc
add
add
add
add
add
add
retf
(bad)
(bad)
call
add
sub
and
inc
cmp
retf
popa
and
pop
sbb
add
add
fcos
(bad)
(bad)
cmp
add
add
gs
ror
cmps
sub
and
pop
int
pop
and
push
pop
popa
cmp
pop
add
add
sub
stos
jl
sbb
jmp
and
push
mov
out
jge
popa
sub
jbe
(bad)
dec
sub
aam
sub
push
sub
add
adc
add
sahf
add
add
add
adc
push
sub
sub
and
and
inc
add
add
fdivr
(bad)
inc
add
add
add
xor
add
sub
in
ret
mov
into
popa
and
sub
pop
inc
add
add
fdivr
(bad)
call
add
cmp
add
and
loop
mov
xor
cmp
retf
mov
(bad)
nop
push
popa
sub
add
add
sub
push
and
cmp
sub
(bad)
(bad)
dec
sub
rol
sub
add
adc
add
int3
add
add
add
adc
and
mov
xor
lahf
add
add
and
sub
push
cmp
add
add
add
add
add
(bad)
(bad)
jmp
add
sub
outs
add
add
jb
add
adc
adc
pop
and
sub
shl
mov
out
popa
and
inc
add
add
aaa
add
add
add
add
(bad)
(bad)
jmp
mov
clc
loop
sub
cmp
sbb
add
xor
and
neg
jnp
pop
movs
popa
cmp
(bad)
jmp
and
and
xor
popa
sub
cmp
(bad)
dec
cmp
sub
mov
in
xor
add
add
add
add
adc
sub
add
add
adc
add
sbb
add
adc
or
add
add
sub
add
push
sub
sub
add
sub
add
add
add
jnp
add
sub
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
clc
or
add
add
push
je
imul
add
add
add
push
push
add
sbb
add
add
add
inc
push
dec
inc
add
add
sbb
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
pop
mov
add
pop
add
add
add
add
add
push
add
add
add
sbb
add
and
add
add
add
add
add
sbb
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
aaa
add
add
pop
add
add
test
push
add
add
add
add
add
add
add
cmp
or
push
add
add
add
cmp
push
add
cmp
push
add
push
xor
push
add
test
push
add
add
add
test
push
add
add
add
push
mov
push
test
push
add
pop
sbb
add
pop
add
push
add
add
pop
pop
push
add
add
add
pop
test
push
add
pop
pop
pop
push
add
or
pop
push
add
or
or
pop
push
add
sbb
push
add
add
add
add
or
add
add
add
add
add
cmp
push
add
pop
add
add
pop
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
fild
pusha
or
add
add
aaa
add
add
mov
aaa
add
add
or
or
repnz
add
add
add
aaa
add
add
in
add
add
add
or
add
add
or
pop
or
dec
or
bound
cwde
or
mov
add
or
sbb
jnp
push
add
add
jnp
push
add
jnp
push
add
cmp
push
add
add
push
mov
push
popf
add
add
getsec
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
pop
add
add
add
add
push
add
add
add
add
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
adc
add
adc
add
adc
add
push
and
add
add
add
add
add
add
xchg
push
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
dec
sub
add
add
add
add
push
add
sub
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
or
movs
inc
add
add
xchg
sbb
add
or
rol
add
xchg
push
add
add
add
inc
add
add
add
add
inc
add
add
xchg
push
add
add
add
add
add
xchg
push
add
add
add
les
add
or
mov
add
add
xchg
push
add
or
ins
dec
add
add
add
or
inc
dec
add
add
xchg
add
push
add
add
xchg
add
push
add
add
or
or
add
add
add
add
add
add
xchg
add
push
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
pop
add
add
xchg
add
add
sbb
cmp
add
add
add
add
add
add
add
add
add
xchg
or
add
add
add
pop
add
add
xchg
or
add
add
add
xchg
or
add
add
add
xchg
push
add
add
add
add
add
add
pop
add
add
push
sbb
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
imul
add
daa
add
add
add
add
add
jle
add
add
push
add
add
add
push
push
ja
or
push
push
addr16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
pop
add
add
add
(bad)
or
or
test
add
add
or
add
or
add
add
add
add
add
inc
pop
or
add
add
add
add
add
add
add
add
add
mov
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
pop
or
add
add
add
or
add
(bad)
or
add
fwait
or
add
add
mov
fild
jmp
add
add
or
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
or
add
out
or
add
add
or
add
add
add
or
cmps
or
add
add
or
pop
or
push
add
add
push
add
add
cmps
or
lds
int
and
add
or
clc
or
add
imul
add
xor
imul
imul
imul
add
mov
push
add
add
add
add
push
add
add
add
add
add
add
push
push
or
push
add
add
fisttp
jne
or
das
or
repnz
xchg
add
push
mov
add
shld
add
packsswb
mov
sub
mov
mov
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
inc
add
add
inc
add
inc
add
jbe
add
jg
add
sahf
add
add
inc
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
jp
out
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
sub
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
jecxz
add
pushf
push
add
add
add
imul
add
add
add
ficom
push
add
add
add
adc
add
add
add
push
add
add
add
cld
push
add
add
add
inc
add
add
add
or
add
add
add
or
add
sbb
add
add
add
or
add
add
add
or
add
pop
add
add
add
or
add
add
add
add
or
pop
add
push
outs
jne
inc
outs
jne
je
jb
gs
add
jne
inc
outs
jne
je
jb
cmp
outs
fs
gs
add
arpl
ins
imul
arpl
jns
je
ins
add
sub
(bad)
loop
lods
loop
mov
sub
scas
loop
mov
or
(bad)
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
scas
add
sub
loop
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
mov
sub
mov
or
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
add
or
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
or
mov
sub
loop
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
mov
sub
mov
or
mov
sub
loop
scas
add
ins
je
arpl
je
gs
gs
je
add
sub
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
scas
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
scas
loop
scas
add
add
je
imul
jne
inc
outs
jne
je
jb
push
jb
jo
jb
imul
ins
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
inc
je
jb
bound
add
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
je
outs
outs
add
imul
outs
add
popa
je
jae
je
imul
push
je
imul
jae
popa
bound
add
arpl
popa
jb
dec
popa
bound
add
je
outs
js
inc
jne
outs
push
gs
je
jbe
outs
je
push
jns
je
ins
cs
push
imul
add
cmp
xor
xor
inc
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
je
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
jns
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
arpl
outs
jb
arpl
add
outs
je
jb
jae
dec
gs
popa
add
imul
bound
arpl
gs
outs
add
jbe
imul
popa
jns
outs
popa
add
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
loop
stos
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
mov
or
lods
loop
scas
loop
mov
or
scas
loop
lods
loop
mov
or
mov
sub
lods
loop
scas
add
or
mov
sub
lods
loop
mov
or
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
or
mov
or
loop
scas
loop
scas
add
or
(bad)
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
add
popa
jne
je
inc
imul
push
outs
fs
jb
arpl
inc
imul
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
jb
ja
popa
bound
je
jb
bound
add
jne
addr16
jb
ja
popa
bound
je
je
add
inc
push
push
inc
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
cmp
xor
je
add
jbe
xor
dec
jns
push
addr16
add
sub
loop
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
mov
sub
mov
or
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
cs
jae
jne
arpl
add
add
jb
jae
jne
arpl
add
jno
dec
push
jo
aaa
arpl
push
dec
xor
dec
ss
push
dec
xor
aaa
inc
add
push
xor
jb
push
cmp
inc
push
cmp
add
inc
imul
aaa
jb
add
ss
jns
dec
push
xor
dec
add
xor
popa
xor
gs
je
aaa
add
inc
cmp
push
ss
aaa
xor
push
pop
pop
inc
bound
ss
ss
outs
inc
ja
xor
dec
pop
xor
dec
imul
xor
push
push
xor
jno
dec
xor
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
inc
jae
gs
bound
push
je
jo
popa
je
push
jo
inc
jbe
outs
je
popa
imul
add
je
inc
jns
add
gs
fs
je
jb
add
gs
add
popa
jb
add
je
inc
ins
popa
jo
gs
imul
outs
fs
push
je
imul
fs
push
jns
je
ins
cs
gs
add
je
push
popa
ins
jne
add
outs
outs
ins
add
js
add
je
inc
push
add
jo
outs
add
je
imul
je
outs
ins
add
je
push
gs
add
je
push
popa
jb
ins
add
ins
jo
outs
outs
je
dec
inc
imul
ins
add
jbe
jb
outs
ins
outs
je
inc
js
je
push
jns
je
ins
cs
jb
ja
outs
add
imul
pop
dec
outs
arpl
imul
pop
inc
jne
outs
push
imul
pop
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
add
ins
push
je
imul
push
imul
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
dec
popa
ins
add
jb
outs
jb
dec
popa
jns
jne
add
jp
add
je
inc
ins
imul
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
jae
outs
fs
popa
jns
jne
add
je
push
popa
bound
fs
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
jae
je
push
popa
bound
outs
jo
dec
push
jne
jo
jb
dec
outs
imul
add
fs
outs
imul
gs
popa
jns
jne
add
je
inc
push
add
je
dec
imul
jae
je
push
imul
pop
push
arpl
ins
ins
inc
popa
jb
add
jb
ins
ins
inc
popa
jb
add
imul
push
gs
inc
outs
js
popa
jae
add
je
dec
jne
je
ins
imul
pop
dec
popa
js
ins
jne
add
fs
dec
outs
popa
add
ins
push
je
imul
dec
je
ins
jae
push
outs
outs
ins
push
je
imul
outs
ins
ins
arpl
outs
add
fs
popa
outs
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
je
push
popa
ins
jne
add
xor
je
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
popa
jae
inc
ins
outs
jb
je
ins
add
outs
jae
outs
jb
inc
imul
arpl
push
popa
imul
add
imul
js
inc
jns
gs
push
jns
ins
gs
imul
imul
pop
inc
ins
outs
arpl
imul
pop
dec
gs
jae
je
dec
gs
imul
pop
push
popa
fs
imul
add
je
dec
outs
fs
jo
gs
outs
fs
je
dec
push
add
gs
je
inc
arpl
jo
outs
jb
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
push
fs
gs
dec
popa
outs
popa
gs
jb
outs
add
fs
data16
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
jb
popa
ins
add
jae
gs
cs
dec
add
outs
popa
jb
push
gs
fs
push
gs
fs
dec
outs
je
xor
inc
gs
jns
gs
dec
inc
outs
jne
gs
bound
xor
push
gs
fs
jns
gs
dec
outs
popa
add
je
dec
je
ins
add
jo
imul
add
popa
bound
imul
jns
gs
push
jne
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
gs
imul
add
outs
arpl
outs
outs
imul
add
or
popa
add
add
add
bound
add
add
adc
outs
add
add
outs
add
jp
jp
add
jb
popa
add
add
inc
add
je
je
outs
add
xor
add
inc
add
outs
add
add
add
add
jne
ins
add
add
popa
add
add
add
dec
add
ja
add
arpl
popa
add
add
pop
inc
add
outs
add
add
add
add
jne
ins
add
add
je
jb
jp
add
je
jb
popa
add
imul
add
jb
xor
add
jb
popa
add
add
inc
add
je
je
outs
add
xor
add
jae
je
popa
add
add
push
add
add
jo
xor
add
je
outs
add
ins
add
je
jb
imul
je
popa
add
add
dec
add
bound
add
add
adc
add
je
inc
add
js
xor
add
bound
jne
je
je
outs
add
xor
add
inc
add
jb
ins
add
add
adc
jo
jo
add
arpl
popa
add
add
pop
add
add
add
add
add
ja
add
xchg
adc
inc
add
mov
pop
push
sbb
mov
push
adc
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
add
add
add
push
adc
inc
add
inc
add
adc
push
adc
push
adc
add
add
and
add
add
or
and
add
push
push
and
add
adc
and
add
push
and
add
sbb
and
sbb
and
sbb
and
adc
adc
adc
add
or
sbb
and
adc
sbb
or
add
adc
add
adc
add
adc
add
add
dec
add
add
sub
and
add
add
add
cmp
dec
add
add
dec
add
add
sub
add
add
add
add
add
sbb
jb
addr16
and
jne
inc
outs
jne
je
jb
xor
xor
add
push
outs
jne
inc
outs
jne
je
jb
add
add
xor
xor
xor
xor
add
add
and
xor
cmp
aaa
cmp
sub
sub
sub
xor
popa
xor
xor
add
push
and
add
add
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
add
daa
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
and
add
sub
add
add
push
and
add
cmp
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
or
add
adc
cmp
and
add
or
and
or
pop
push
lgdtd
or
adc
add
or
and
or
or
and
adc
add
sysret
push
lgdtd
sbb
sbb
adc
or
inc
pop
pop
add
inc
add
or
add
or
pop
add
add
or
mov
pop
jg
aad
cmp
or
and
add
sub
and
adc
add
sbb
and
add
push
and
add
cmp
and
add
add
adc
add
or
adc
adc
add
and
add
and
or
add
or
pop
add
sub
pop
add
sbb
or
add
or
add
add
sbb
and
add
cmp
adc
adc
adc
or
add
add
add
adc
add
adc
or
adc
inc
add
inc
or
add
adc
adc
add
or
add
adc
or
add
dec
adc
or
or
pop
add
adc
or
or
add
add
and
add
adc
adc
dec
or
push
pop
add
dec
or
push
pop
add
sub
or
add
adc
add
mov
add
add
push
icebp
icebp
fist
push
or
nop
gs
dec
xor
push
jne
fwait
dec
push
aaa
mov
push
xor
xor
hlt
sub
(bad)
test
sub
inc
rcr
les
add
stos
fdivrp
xchg
lods
in
sbb
mov
push
aaa
dec
jne
sbb
pop
pop
xor
push
xlat
pop
repnz
pop
int
sub
jns
cld
inc
adc
fisttp
jle
call
jmp
mov
out
xchg
in
ret
adc
push
jnp
cld
pop
dec
inc
enter
imul
aas
fmul
mov
sub
add
call
rcl
pavgb
bound
xchg
in
sar
mov
rol
ja
sub
sar
sub
icebp
jle
fsub
div
(bad)
nop
shl
std
fcomp
adc
es
out
sbb
xor
pop
pop
jle
(bad)
mov
mov
das
retf
mov
cmp
or
sbb
mov
dec
mov
lock
call
in
imul
push
ret
mov
adc
and
cmp
xchg
leave
lea
or
stos
sbb
mov
std
int3
jo
loope
das
xchg
adc
xchg
xor
and
or
cwde
imul
cwde
xchg
pop
pushf
xchg
out
inc
mov
stos
push
and
ds
gs
mov
out
mov
test
es
mov
je
(bad)
mov
push
dec
pop
push
(bad)
xchg
rcr
pop
je
xchg
mov
xchg
call
jg
push
jb
in
push
repz
mov
and
push
cld
lods
and
in
pop
dec
imul
push
out
push
hlt
lea
lods
xor
repz
add
xor
xor
mov
cmp
mov
ror
inc
cmp
iret
movs
sti
jg
or
rcl
dec
mov
adc
xor
xor
mov
add
dec
pop
mov
movs
cld
iret
in
cs
push
cmc
pop
addr16
sub
mov
inc
push
xor
cdq
xor
je
mov
int
rcr
loopne
sbb
clc
jle
(bad)
jge
adc
mov
iret
mov
mov
mov
and
aad
push
lods
lds
jo
std
sub
pop
adc
aaa
jae
leave
repz
jae
push
dec
fcmove
push
inc
sbb
mov
in
or
push
hlt
cdq
loopne
leave
sar
in
pop
fld
add
mov
je
mov
std
lods
adc
cmp
loope
mov
call
iret
jl
pushf
push
mov
loopne
dec
popa
(bad)
scas
out
xlat
mov
dec
arpl
rcr
lods
pop
sub
ror
je
adc
loopne
add
jl
jb
test
or
loop
mov
mov
push
mov
or
sub
fcomi
push
adc
lea
xor
lahf
or
std
add
pop
xchg
ds
cmps
fs
xlat
jp
mov
or
scas
jo
fbld
in
add
jbe
mov
mov
test
xchg
xor
inc
xchg
or
out
pop
mov
mov
cs
mov
les
and
iret
jle
mov
jae
loope
mov
out
and
test
(bad)
sbb
aas
cmp
inc
jecxz
icebp
xchg
push
jmp
les
xchg
dec
(bad)
dec
enter
nop
sub
les
aas
sub
das
xchg
mov
int
jnp
pop
cmp
es
sub
(bad)
jns
es
dec
pushf
push
das
dec
push
add
dec
aas
shl
test
sbb
js
int3
mov
ss
jb
pushf
jo
dec
dec
or
push
and
aad
out
stos
lds
xor
les
xor
mov
and
push
stos
pop
cmc
mov
sub
shr
clc
add
sahf
xor
cmp
clc
cmp
lods
mov
pop
xor
test
jl
cmp
jg
pop
cmp
das
rcr
std
adc
retf
push
sub
mov
and
jne
rcl
sub
push
and
jg
or
les
movs
(bad)
div
adc
test
fiadd
dec
(bad)
(bad)
test
daa
rcl
hlt
test
and
fcomp
mov
mov
push
es
cmps
mov
int3
lods
retf
mov
(bad)
jno
mov
fbstp
iret
fcomip
mov
daa
mov
mov
and
and
out
jp
jp
out
push
pop
sahf
and
push
mov
sub
aad
adc
pop
aad
or
repz
mov
sub
push
leave
stos
push
inc
js
sub
xor
sub
retf
mov
xor
adc
and
addr16
push
sahf
lock
jnp
imul
std
out
xlat
int
jb
mov
mov
mov
fistp
add
xlat
aaa
pop
xchg
dec
push
and
jmp
cs
add
sti
sub
jmp
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
dec
sahf
add
add
push
icebp
icebp
fist
push
or
nop
gs
dec
xor
push
jne
fwait
dec
push
aaa
mov
push
xor
xor
hlt
sub
(bad)
test
sub
inc
rcr
les
add
stos
fdivrp
xchg
lods
in
sbb
mov
push
aaa
dec
jne
sbb
pop
pop
xor
push
xlat
pop
repnz
pop
int
sub
jns
cld
inc
adc
fisttp
jle
call
jmp
mov
out
xchg
in
ret
adc
push
jnp
cld
pop
dec
inc
enter
imul
aas
fmul
mov
sub
push
or
ficom
cwde
sbb
sub
jns
mov
jl
adc
out
call
int
rol
mov
ja
adc
push
movs
or
dec
jns
push
dec
outs
add
cmp
mov
add
mov
sub
xor
mov
adc
cwde
or
mov
push
retf
adc
add
ret
fnstsw
sbb
scas
(bad)
xlat
aam
or
les
adc
in
xchg
adc
pop
mov
push
sub
ds
push
sub
std
out
shl
lock
push
sub
lea
out
xchg
nop
int3
jno
loop
hlt
out
mov
inc
mov
or
mov
sbb
jmp
or
cmps
mov
xlat
fwait
xchg
push
adc
dec
arpl
cmp
push
pop
xchg
mov
dec
pop
movs
jmp
push
test
sub
fnsave
sbb
retf
ret
aad
and
cwde
and
rcr
es
mov
inc
aad
inc
mov
mov
clc
dec
adc
std
lods
outs
enter
in
mov
sbb
mov
icebp
xchg
mov
into
(bad)
dec
sub
jb
mul
xchg
clc
ret
mov
ret
lahf
and
mov
push
add
jp
iret
test
jns
mov
sub
test
fild
cli
enter
loopne
xchg
movs
lods
cs
retf
sti
mov
pop
cmp
jmp
dec
cwde
pop
inc
cmps
add
lahf
xor
xor
or
or
mov
hlt
dec
add
and
xchg
cmps
int3
adc
(bad)
fdiv
dec
test
in
xchg
retf
lock
jb
rcl
sahf
mov
sub
adc
jb
out
dec
mov
test
push
mov
shr
pop
xor
nop
in
fwait
out
inc
mov
fistp
jb
dec
jmp
cwde
(bad)
in
ret
mov
cli
bound
adc
sbb
inc
fadd
xor
cmp
outs
and
rol
call
jnp
add
jo
push
out
out
fcmovu
push
cmps
pop
cmp
nop
nop
mul
sar
inc
test
or
push
xchg
rcl
xchg
xor
stos
inc
lock
imul
mov
jne
sahf
movs
outs
mov
or
sti
mov
popa
fadd
and
fcom
hlt
mov
outs
sbb
aas
rol
icebp
mov
ret
xor
pop
cdq
cwde
inc
ins
test
ffreep
pop
adc
push
xchg
mov
mov
lock
mov
dec
mov
(bad)
jmp
aas
in
push
mov
rol
add
sbb
sti
pusha
mov
repnz
daa
pusha
xchg
arpl
repnz
lods
jns
or
jp
sub
sbb
cmc
jmp
call
add
cld
sub
jno
push
loope
mov
fwait
cmp
sar
scas
cmps
cdq
imul
xor
dec
retf
lahf
movs
jb
and
pop
in
(bad)
int
sahf
leave
mov
test
mov
fwait
lahf
rcr
jecxz
xor
frstor
into
push
repnz
pop
arpl
mov
icebp
mov
xor
ud0
(bad)
retf
sbb
cmps
and
int3
stos
aad
popf
pop
mov
sbb
sahf
sbb
inc
out
xchg
xchg
sbb
cli
nop
sub
cmp
xor
push
ds
xor
jns
cmc
or
jmp
jns
lods
xor
leave
sub
sub
rol
push
jl
cli
inc
test
jae
ss
lods
push
xchg
or
ret
ror
pop
dec
std
call
scas
pop
std
or
jo
rol
imul
das
cwde
sbb
outs
inc
rol
arpl
not
mov
mov
adc
push
dec
arpl
lds
pop
ss
jg
inc
es
gs
daa
dec
push
lahf
not
aaa
adc
mov
sub
sbb
and
mov
push
mov
mov
aaa
xchg
mov
push
pop
hlt
sbb
cmp
sub
cs
cli
and
inc
pop
ds
and
adc
es
push
jl
pop
inc
sbb
cmp
ror
mov
mov
jge
test
or
popa
mov
mov
dec
inc
jmp
inc
scas
adc
aaa
inc
addr16
cdq
xlat
(bad)
jmp
daa
and
fnsave
test
rcl
mov
inc
push
arpl
push
mov
fcomp
std
inc
xlat
jne
cmp
cmps
mov
movs
lds
or
pop
call
inc
sub
icebp
iret
adc
dec
repnz
loopne
call
add
mov
cmp
pop
test
jae
daa
aad
ret
lock
mov
xor
aaa
out
cmp
(bad)
adc
jle
or
call
push
int3
xor
mul
cli
iret
cmp
ss
jge
jmp
jnp
add
jns
je
pop
mov
cmps
mov
ror
cmp
clc
icebp
mov
adc
fistp
dec
sbb
jae
lods
pushf
add
adc
pop
inc
add
cmp
mov
lahf
retf
xchg
push
leave
pop
pop
retf
sub
push
mov
push
mov
fiadd
daa
and
and
mov
movs
xchg
xchg
dec
push
sbb
mov
stc
pop
stc
or
dec
push
in
pop
dec
into
std
pop
data16
mov
das
loope
pop
pop
(bad)
mov
add
sbb
loope
jnp
cmp
(bad)
in
das
in
sbb
(bad)
and
xor
inc
xlat
jl
in
mov
in
jns
(bad)
(bad)
shl
xchg
aad
(bad)
push
xchg
jge
cmp
jmp
nop
mov
mov
pop
ins
clc
mov
xchg
inc
scas
xchg
mov
fst
lock
and
add
mov
popa
jecxz
sbb
lods
das
push
sbb
inc
dec
mov
mov
fnstenv
mov
dec
data16
out
xor
xchg
ins
adc
in
cld
loop
and
mov
xor
in
inc
cwde
nop
adc
jbe
repz
xor
xor
xor
movs
or
call
jnp
pop
pushf
nop
out
and
jno
out
inc
push
and
push
adc
(bad)
sahf
std
add
arpl
loopne
sahf
sub
pop
and
xchg
or
sbb
fwait
push
aaa
repz
stos
mov
stos
or
loopne
add
nop
sub
inc
cdq
mov
leave
mov
das
lock
mov
sti
mov
repz
test
cmp
ret
stc
sbb
xchg
fidivr
mov
dec
sar
add
mov
mov
retf
mov
clc
jmp
aam
jb
mul
scas
mov
and
cmp
(bad)
pop
xchg
pusha
in
stc
sbb
adc
jbe
fdivr
(bad)
neg
test
jne
push
scas
in
mov
and
mov
(bad)
xor
xor
jl
rcr
fidivr
jmp
mov
mov
(bad)
push
xor
(bad)
push
cmp
inc
aad
sub
ss
ret
pop
cli
xor
loop
loope
outs
xlat
sti
inc
in
push
pop
pop
neg
jne
scas
mov
inc
stos
sbb
scas
ins
fst
sti
js
jmp
mov
or
dec
push
mov
dec
pop
es
adc
cmp
les
(bad)
test
sar
cmp
xchg
popf
sub
mov
iret
fsub
dec
shl
push
mov
std
mov
fwait
xor
push
test
rcr
mov
dec
sbb
arpl
fidivr
test
and
pop
in
jp
cli
ret
dec
rol
sbb
sbb
aas
das
icebp
scas
dec
int
scas
retf
push
push
movs
scas
jbe
pop
xor
mov
mov
sub
add
fnsave
mov
test
aam
mov
pop
mov
jle
out
jp
mov
mov
sbb
xchg
cmp
test
cmp
ins
ins
arpl
xchg
enter
test
push
cmps
fbld
fwait
inc
(bad)
cwde
xor
mov
and
or
dec
adc
lock
sti
mov
retf
mov
jbe
dec
xchg
pop
cld
add
jp
cmp
cmps
inc
dec
in
add
(bad)
hlt
test
jns
sub
xchg
sahf
pop
add
push
iret
jmp
push
xor
bound
outs
sbb
cmp
add
mov
jg
sbb
mov
addr16
inc
dec
jmp
pop
sbb
ja
mov
mov
jne
mov
add
lahf
bound
adc
add
add
cmc
ss
test
jp
adc
cmps
icebp
fild
jmp
fild
mov
jl
repnz
xchg
inc
scas
(bad)
jbe
adc
adc
(bad)
and
in
gs
push
rcl
mov
enter
jae
test
lahf
hlt
inc
sub
inc
fcomp
jo
adc
sub
gs
push
daa
clc
add
cmp
enter
int
inc
not
retf
mov
sar
in
lods
xor
pop
xor
out
ins
sar
mov
ds
neg
xchg
jmp
jle
jp
imul
mov
push
cmp
gs
sbb
or
jns
mov
add
inc
mov
rcr
std
shl
jp
inc
push
lea
sbb
mov
jecxz
stos
or
push
shl
imul
setl
jl
icebp
lods
push
mov
xchg
or
and
sahf
or
jg
jae
ret
das
not
(bad)
std
jnp
inc
push
sub
int3
add
jg
ja
inc
(bad)
push
movs
push
fld
ins
outs
inc
outs
or
add
call
mov
sub
out
dec
cmp
sti
ja
mov
adc
outs
adc
cmp
dec
cmc
repz
mov
or
push
repz
js
aad
push
ret
stos
(bad)
(bad)
inc
std
jl
dec
sbb
jp
add
jnp
xchg
and
mov
(bad)
ds
sub
lahf
mov
and
(bad)
rcl
loop
jbe
cmp
enter
shl
mov
xor
pop
ins
push
aam
sbb
in
pop
mov
daa
cmps
xor
lea
pop
xor
je
dec
shl
jnp
idiv
lods
xchg
mov
in
shl
shr
cmp
jns
ins
sub
or
mov
call
dec
mov
jp
leave
dec
imul
dec
jg
dec
shr
jnp
mov
ficomp
leave
mov
mov
nop
cmps
(bad)
ins
stc
jle
fsub
stos
pop
into
jmp
mov
cmp
pcmpgtb
pop
loope
dec
xor
cmp
f2xm1
adc
out
sahf
mov
daa
xor
xchg
sbb
dec
push
pop
xor
in
in
inc
jns
and
ror
mov
into
addr16
pop
adc
sub
or
scas
mov
dec
sbb
ins
mov
sbb
push
imul
(bad)
mov
push
cs
bnd
xchg
out
push
mov
mov
lahf
pop
fs
inc
adc
push
cmp
mov
sub
push
jmp
and
mov
ins
pop
dec
enter
std
sbb
pop
mov
out
xchg
aam
ret
or
loopne
imul
pop
adc
add
js
aam
pop
hlt
xchg
adc
ss
fnstsw
loope
or
in
mov
pop
xchg
sub
data16
mov
push
add
mov
push
jbe
iret
movs
xor
clc
mov
inc
inc
jmp
and
loope
idiv
out
adc
push
sbb
cmp
sbb
int3
(bad)
loope
mov
pop
aaa
dec
enter
(bad)
adc
sub
mov
loope
add
inc
mov
aam
fmulp
and
inc
jecxz
das
add
aam
sar
adc
inc
pusha
pop
jmp
das
or
repnz
stos
aam
sub
sub
sti
push
(bad)
push
mov
sub
push
adc
bound
and
push
jge
outs
mov
sub
jg
outs
fsubr
cmp
lahf
in
xchg
sub
cmp
inc
jp
out
pushf
xor
adc
cdq
xor
mov
jle
and
popa
in
fptan
sub
iret
test
outs
scas
add
mov
mov
pop
cld
sub
test
inc
out
dec
dec
jg
lahf
call
cmps
xchg
mov
push
mov
idiv
ret
pusha
inc
xchg
xor
pop
xchg
inc
inc
enter
jb
pop
mov
pop
stos
xor
inc
or
sub
add
in
je
xchg
sti
or
xchg
xor
mov
xchg
cmp
xchg
nop
add
xchg
std
in
pushf
pop
push
sahf
cdq
(bad)
push
mov
ds
push
push
ja
jle
test
test
dec
fwait
push
mov
prefetch
or
lods
xchg
xchg
mov
push
jp
jne
push
sbb
inc
push
jp
cmc
shl
adc
addr16
push
add
xchg
pop
out
mov
lock
add
es
xor
jb
out
(bad)
jb
xor
leave
xchg
pop
or
adc
imul
js
outs
add
fsub
cmp
jmp
cmc
mov
imul
adc
mov
xchg
mov
fcmovnb
jb
ins
lds
mov
jo
dec
aas
xchg
ret
js
pop
fwait
cmp
pop
rcl
stos
std
adc
scas
adc
add
loope
es
mov
push
popf
aad
out
dec
mov
sbb
xchg
mov
pop
fs
fcom
xlat
in
out
push
imul
outs
(bad)
mov
xchg
dec
xchg
in
(bad)
jae
mov
scas
adc
lea
sti
repnz
fsub
and
xchg
adc
xchg
cmp
stos
and
lds
repnz
sar
shl
sbb
scas
jnp
das
xor
data16
cmps
xchg
stos
cdq
ds
pop
mov
xchg
rcr
jg
mov
push
repnz
bound
jns
fldenv
mov
adc
bnd
js
(bad)
sbb
loopne
cmps
cmc
aad
sbb
sbb
sbb
pop
data16
xchg
or
es
ins
sbb
in
pop
jmp
rcr
dec
imul
sub
emms
jmp
or
retf
xchg
cdq
add
sub
shl
clc
jbe
adc
(bad)
mov
push
sbb
cmp
addr16
dec
and
out
call
xchg
pop
cmc
sti
mov
jb
push
mov
retf
pop
out
or
pop
cmp
xchg
jl
stos
inc
and
xchg
inc
sbb
in
test
mov
sub
adc
jge
pop
into
push
je
mov
or
out
repz
sbb
fcomp
sub
in
scas
(bad)
into
ins
xor
int
popf
out
mov
mov
ficomp
in
retf
dec
push
sub
mov
cmp
sub
mov
xchg
xchg
lods
fdiv
pusha
adc
lods
ds
pop
cmp
or
pop
out
fisttp
int
dec
in
cwde
push
pop
loop
ficom
fcmovnbe
int3
fdiv
test
retf
cwde
lahf
adc
pop
inc
or
mov
inc
out
and
loope
dec
push
popa
pop
push
scas
jmp
arpl
cli
hlt
imul
adc
or
fnstenv
arpl
cli
loope
ja
and
imul
sar
fadd
cwde
stos
xchg
(bad)
in
and
popf
enter
pop
sbb
xchg
adc
out
(bad)
jns
pop
dec
or
push
je
lods
fisubr
lods
dec
loopne
leave
arpl
mov
nop
iret
and
ret
sbb
xor
das
pop
clc
loop
popf
out
mov
cmp
or
mov
mov
lock
adc
test
mov
push
and
les
mov
mov
imul
gs
jg
xor
dec
fimul
mov
sahf
jbe
mov
cmp
mov
call
sbb
daa
out
xor
dec
int
jnp
mov
aas
push
mov
ret
lods
ficomp
mov
xchg
jmp
sub
call
push
and
push
jns
inc
aas
loop
daa
mov
in
pop
repz
int
fwait
aas
pushf
dec
and
(bad)
xor
add
cmp
ins
xchg
jg
int
mov
das
lock
add
mov
icebp
sahf
cld
daa
xor
aam
dec
mov
fisttp
rol
push
push
sbb
xchg
add
ror
mov
mov
add
mov
jmp
mov
imul
stos
in
(bad)
jbe
jmp
es
xlat
jl
pop
test
pop
pop
mov
ins
shr
xchg
adc
retf
xor
xor
inc
and
stos
and
xchg
mov
pop
pop
adc
scas
cld
sti
test
mov
sub
pop
aad
into
popf
add
pushf
mov
adc
xor
sbb
jge
fisub
cs
add
cmp
ret
lea
stos
pop
mov
aaa
test
xchg
mov
xor
fimul
std
xchg
ret
mov
(bad)
in
aad
out
or
xor
rcl
test
xchg
cmps
scas
sub
ret
push
pop
xor
test
fist
or
mov
out
cmps
or
inc
in
sbb
xchg
sbb
cs
cmp
push
mov
xchg
mov
adc
and
es
cmp
push
sub
lods
nop
push
test
adc
adc
push
sbb
sbb
ins
adc
cmps
js
pop
rol
mov
jp
sub
test
cmps
push
addr16
popf
sub
retf
into
mov
rcr
adc
rol
(bad)
sti
mul
sbb
dec
int3
adc
out
pmaddwd
sbb
cwde
test
jbe
cld
jb
nop
jmp
and
mov
addr16
fcomp
mov
aas
and
jmp
adc
inc
(bad)
cdq
popf
jo
(bad)
fdiv
xchg
pop
fsub
cmps
mov
jo
cmp
dec
xor
xor
dec
imul
arpl
not
inc
imul
and
push
addr16
fidivr
rcl
mov
lods
or
loopne
sbb
adc
mov
inc
mov
iret
or
jl
ffree
scas
hlt
pop
mov
mov
popa
xchg
adc
repz
cmc
scas
mov
or
imul
into
lea
xchg
xor
or
jl
fdiv
sub
aam
das
lahf
push
dec
mov
mov
lock
in
jmp
pop
jmp
mov
jns
fcom
sahf
push
pushf
cmp
iret
mov
loope
aad
ja
enter
push
ins
push
out
jns
sbb
xchg
ja
xchg
inc
inc
adc
xor
lahf
retf
push
lock
dec
outs
out
adc
mov
xchg
push
adc
push
mov
out
repz
or
aam
or
xchg
ret
xlat
sbb
xor
push
(bad)
imul
mov
mov
ins
jo
mov
mov
in
jae
scas
enter
aad
cmp
aam
and
xor
adc
cmp
mov
sbb
fmul
pop
pop
or
pushf
in
out
xchg
outs
add
xor
add
(bad)
lock
sub
jecxz
test
jmp
pop
ds
fist
cmp
pop
enter
dec
inc
pop
mov
mov
xlat
stos
test
call
pop
sbb
popf
pop
xor
xchg
aas
int
ficom
addr16
pop
add
into
stos
rcr
fsubr
sub
xlat
mov
test
inc
mov
mov
mov
mov
ficomp
push
(bad)
mov
movs
cmp
mov
pop
add
mov
push
and
icebp
and
lods
dec
mov
rcl
push
jg
retf
shr
add
fisttp
test
popa
stos
cld
and
shl
out
dec
sbb
sub
or
mov
add
add
ret
mov
and
dec
mov
mov
mov
setne
cwde
add
mov
in
outs
cmc
call
retf
(bad)
call
xor
adc
and
call
add
cmp
std
push
mov
push
imul
ror
addr16
jnp
sub
push
adc
xchg
ror
push
push
out
pop
pop
pusha
push
adc
adc
sbb
test
sub
xchg
aas
jp
gs
fisttp
jae
jo
mov
into
pusha
xor
iret
in
ret
shr
pop
mov
fimul
(bad)
mov
push
iret
addr16
ins
ss
ficom
test
loop
out
icebp
sbb
xor
outs
xchg
pushf
jne
jmp
or
popf
jbe
cmp
enter
dec
adc
push
cmp
dec
xor
xchg
mov
std
std
ins
xor
retf
rcl
scas
int
scas
inc
pop
js
mov
push
jl
jno
rol
sbb
jmp
imul
dec
movs
loope
in
pop
adc
inc
push
mov
clc
loope
sbb
cmp
iret
neg
stos
pop
sbb
jbe
ror
bnd
out
icebp
mov
cmc
sub
push
popa
jae
stos
pop
les
jmp
je
lods
loopne
jecxz
inc
rep
sbb
pushf
cwde
shl
mov
mov
neg
gs
push
jle
mov
mov
push
mov
or
hlt
or
mov
push
jle
push
sbb
cmp
sbb
xchg
mov
mov
inc
mov
adc
push
sub
add
adc
sub
cs
mov
std
test
(bad)
xchg
test
nop
cmp
mov
mov
inc
mov
xor
(bad)
aas
pop
cmp
xor
inc
pop
aad
test
nop
xor
mov
push
mov
repz
dec
ja
pop
int3
xor
in
nop
ins
adc
sbb
jmp
xor
inc
call
clc
push
mov
fst
enter
rcr
or
and
in
cld
and
inc
imul
jnp
sub
cmp
sbb
mov
and
ins
xchg
dec
arpl
push
cmp
arpl
sub
adc
pop
imul
push
pop
sub
cmp
xor
mov
leave
pop
std
mov
jae
cmp
push
popa
cmps
jns
inc
cmp
(bad)
push
and
outs
movs
and
icebp
outs
arpl
dec
int
inc
push
xor
mov
cdq
xor
cdq
sbb
cmp
adc
jns
xchg
xchg
push
mov
cmp
inc
jl
cs
xchg
in
in
retf
int3
xchg
es
and
mov
pop
inc
ja
fsubp
pop
rcl
repz
shl
enterw
cmp
arpl
xchg
dec
std
imul
xchg
xchg
xor
aad
rcr
mov
sbb
sti
out
push
mov
pop
dec
movs
movs
data16
push
test
movs
hlt
mov
daa
mov
ins
inc
mov
mov
fiadd
or
dec
jle
ds
mov
(bad)
out
fucomi
out
adc
or
adc
sbb
scas
pop
dec
mov
fdiv
sbb
lods
pop
or
fs
or
int3
or
jge
dec
leave
(bad)
cmp
cvtps2pi
cmp
push
or
das
and
fild
in
les
mov
ds
pop
cmovae
imul
mov
inc
adc
jge
popf
sbb
xchg
jmp
pop
rcl
xlat
xchg
or
es
dec
jnp
sbb
imul
fisttp
(bad)
mov
sar
aam
xor
imul
mov
jb
sub
(bad)
retfw
mov
shl
stc
mov
imul
mov
jge
jl
shl
pop
out
push
fistp
leave
xor
push
std
test
gs
pushf
out
mov
mov
iret
mov
int
mov
adc
pushf
popa
xlat
cmp
push
pop
or
cmps
push
dec
dec
jmp
jmp
xor
cmp
push
clc
pop
or
outs
lahf
test
sti
mul
test
cmp
adc
std
ror
outs
xor
popf
popf
jno
ss
les
dec
call
and
mov
mov
push
aas
adc
test
adc
repz
lds
pushf
lock
xlat
or
aad
arpl
test
and
pop
ss
sub
mov
add
dec
sahf
out
xchg
shr
fsubrp
xlat
int
jecxz
xchg
push
sbb
lock
pushf
outs
retf
int
mov
mov
mov
sub
shl
(bad)
fidivr
fdivr
gs
cmp
mov
outs
or
cmp
test
cmps
cmp
and
inc
pop
push
sub
lods
(bad)
(bad)
je
xchg
out
sub
and
aad
push
stc
push
fcom
xchg
rol
sbb
movs
out
hlt
push
punpcklwd
adc
rcr
or
add
(bad)
push
add
cwde
ins
xchg
icebp
or
mov
add
in
and
sbb
dec
pop
cmc
sub
movups
xchg
loop
shl
and
fninit
xchg
into
mov
icebp
xchg
les
enter
or
mov
mov
stos
loope
jbe
inc
aaa
cmp
mov
(bad)
cmp
add
pusha
jbe
pop
xor
sar
shl
inc
cmps
fcom
frndint
repz
popf
fdivr
ror
movs
mov
adc
xor
dec
pop
adc
clc
lock
sbb
add
cmp
inc
mov
sub
call
jb
jb
ds
fwait
ror
aam
faddp
xor
call
imul
or
mov
adc
cmps
mov
icebp
xor
cmp
rol
arpl
cld
xchg
and
outs
popf
jns
das
ror
not
mov
xchg
cdq
cmps
cld
adc
inc
adc
(bad)
sbb
cmps
test
mov
(bad)
jne
jno
pop
fld
and
out
ret
lods
jmp
call
imul
adc
jno
fcomp
jl
push
lods
jo
(bad)
sbb
mov
add
xchg
stos
popa
dec
aam
test
mov
add
pusha
fcmovnb
pop
popf
pop
mov
icebp
add
lahf
xchg
xor
(bad)
loopne
sar
bound
mov
test
add
pop
adc
call
cmovg
push
mov
sbb
test
mov
mov
sub
sub
fwait
jecxz
push
add
sub
pop
(bad)
sahf
sub
or
(bad)
jmp
inc
mov
sbb
sbb
outs
dec
xor
enter
mov
inc
push
push
pop
les
mov
cmp
adc
jae
push
aaa
stos
cmp
adc
jnp
pop
add
pop
(bad)
mov
cmp
cmp
ret
enter
fisttp
push
mov
mul
ins
jge
mov
sti
test
cmp
mov
rol
(bad)
stc
sub
xor
xchg
push
inc
inc
mov
jl
cmp
adc
jle
xchg
pop
mov
mov
(bad)
imul
(bad)
jp
sar
mov
add
add
jmp
iret
xchg
sti
xchg
test
(bad)
fnsave
out
out
jmp
faddp
mov
into
mov
ror
call
fdivr
cmc
hlt
dec
cmp
pop
stos
sbb
test
mov
push
cmp
or
add
xchg
mov
mov
push
add
xchg
gs
pop
bound
cmp
mov
js
sti
push
mov
ss
cmp
jmp
loope
jge
or
sbb
sub
push
xchg
stos
mov
sbb
jle
cmc
in
dec
into
push
(bad)
jne
popa
jnp
sub
js
cli
adc
mov
and
xchg
shr
into
inc
xchg
mov
retf
xor
scas
ja
ror
inc
pop
pop
daa
call
(bad)
lahf
inc
pop
movhps
int
ins
cdq
mov
jae
outs
ja
mov
or
ficom
je
sbb
loop
lods
sub
pop
out
xchg
and
(bad)
je
add
bound
gs
into
scas
mov
or
mov
imul
inc
out
iret
mov
in
nop
mov
inc
in
int
movs
cmps
test
add
add
pop
mov
data16
push
push
sub
ds
test
sbb
ins
lods
or
in
adc
imul
cmc
mov
jmp
sahf
ins
rcr
add
inc
mov
js
mov
mov
mov
mov
pop
add
mov
cli
sti
xchg
movntq
sub
sbb
adc
mov
cmp
arpl
cs
fstp
mov
clc
xchg
jge
push
mov
push
dec
sbb
cmps
jae
mov
aam
cld
cs
cmp
dec
cli
mov
in
jns
ficom
xor
cmps
jge
in
adc
(bad)
in
mov
pop
fild
mov
mov
gs
mov
out
stos
cmovbe
sbb
xchg
stos
pop
ss
sub
imul
out
inc
inc
jno
mov
push
and
loopne
sub
mov
loopne
addr16
xchg
cmp
test
push
pop
out
xchg
sti
aaa
es
xor
xchg
push
rcl
cmp
xchg
lods
mov
sbb
mov
sbb
js
shl
jbe
lahf
cdq
pop
mov
sbb
inc
mov
add
xor
mov
in
aaa
mov
xor
dec
ret
xchg
jbe
hlt
(bad)
jno
(bad)
xchg
dec
pop
mov
xor
mov
xor
int
inc
xlat
dec
iret
inc
inc
push
mov
cmc
jecxz
cmps
add
mov
sbb
je
cmps
jmp
jne
or
and
push
data16
jno
test
pop
inc
enter
and
sub
push
inc
fs
xor
and
out
lods
je
mov
in
(bad)
stc
mov
xor
arpl
sub
pop
rol
std
sbb
add
cmps
(bad)
pop
sbb
jmp
push
clc
push
push
hlt
add
cmp
push
pop
mov
adc
pop
jne
stc
pusha
push
es
lock
pop
jecxz
add
xor
xchg
pop
add
dec
push
jne
sub
std
leave
pushw
push
mov
cmp
sbb
fwait
mov
jne
retf
and
imul
mov
push
mov
jo
mov
and
shr
or
icebp
pop
inc
mov
xchg
or
cmp
add
or
jg
out
push
fistp
in
and
lds
xor
mov
inc
aaa
pop
in
mov
movs
sub
or
out
cwde
jp
mov
fcomp
fs
or
and
in
pop
fdivr
inc
add
shl
mov
imul
jno
int3
enter
mov
call
enter
lods
es
in
call
fsub
cmp
cwde
jne
pop
mov
or
loopne
push
mov
int3
cmps
jmp
jge
xor
outs
or
stos
repnz
in
xchg
jl
movs
or
jbe
mov
scas
pop
mov
fimul
sub
inc
in
jno
std
les
push
in
and
(bad)
push
aas
mov
mov
scas
test
mov
add
mov
adc
mov
ds
pop
adc
sub
fild
xor
mov
xchg
push
adc
popa
xchg
inc
dec
repz
cmp
inc
jecxz
pop
xor
int
loop
jae
xchg
lock
and
daa
adc
scas
shr
inc
sar
cli
pop
add
cmc
test
out
sti
ins
aaa
mov
int
scas
cmp
popf
test
xor
sbb
mov
pop
loopne
adc
imul
shr
shr
and
loope
and
mov
adc
clc
push
not
ffree
jecxz
fadd
push
(bad)
cli
loope
fild
fsub
movs
pop
sahf
pop
scas
cwde
dec
mov
pusha
sub
or
jno
mul
mov
imul
ss
add
add
sar
loopne
jl
inc
nop
nop
xor
inc
or
cli
inc
xchg
lods
fisubr
jle
sub
in
bswap
add
push
sub
movs
dec
mov
cli
icebp
into
inc
mov
xor
call
mov
inc
loopne
cmp
mov
es
sub
mov
jmp
sub
fs
leave
dec
mov
lds
xchg
leave
je
loope
inc
jnp
add
and
add
pushf
lea
sub
lock
imul
fcom
and
sbb
jge
cmps
cdq
sbb
mov
push
cli
dec
sbb
ins
das
test
pop
mov
xchg
fucom
fwait
mov
cmp
adc
loopne
popf
ds
pop
leave
xchg
in
xchg
popf
dec
add
mov
inc
mov
repnz
push
mov
push
cli
pop
xchg
push
sub
xchg
and
fidivr
sbb
repnz
in
jge
imul
mov
sub
or
mov
inc
add
mov
sub
mov
xor
jle
cmp
js
and
hlt
push
push
sbb
std
mov
mov
jge
imul
out
ins
or
repnz
pop
popa
push
xchg
jns
inc
div
lods
cmp
push
out
pushf
dec
call
mov
jg
mov
addr16
jge
inc
ficom
addr16
sbb
mov
outs
or
cdq
pushf
aas
xor
add
cdq
xchg
jmp
pavgb
and
sub
es
lahf
dec
shl
add
in
mov
sub
xor
addr16
enter
sub
mov
stos
leave
adc
fucomip
sub
lods
cwde
in
pop
dec
dec
pushf
into
sar
pushf
lock
xor
mov
scas
fisttp
stos
lock
mov
das
loop
xor
adc
adc
aad
retf
push
sahf
mov
mov
out
mov
retf
push
xchg
sbb
loopne
jmp
test
and
jno
test
inc
(bad)
xchg
sbb
dec
shr
shr
add
jns
and
inc
out
mov
scas
mov
ret
jno
xchg
or
rcr
xor
outs
sbb
sbb
fbld
int
adc
ror
jp
vmcall
dec
ror
xor
or
fdivr
pop
jbe
dec
sbb
ret
aam
(bad)
js
push
mov
push
sub
fcmovnbe
mov
retf
jmp
or
inc
data16
jg
popf
adc
hlt
out
inc
icebp
cli
aad
push
xchg
iret
leave
(bad)
dec
div
ret
(bad)
adc
push
mov
or
push
mov
sub
inc
mov
ins
jmp
mov
in
and
ins
in
adc
push
in
repnz
sti
push
fisttp
jl
std
movs
xlat
out
loop
ins
cmc
daa
movs
pop
popa
mov
cmp
pop
outs
rcr
dec
ret
mov
mov
adc
mov
xchg
inc
loop
loope
pop
push
push
ds
lds
pop
test
dec
ins
rcl
imul
pop
scas
or
test
out
test
mov
out
dec
stos
jo
jg
cmp
call
dec
adc
xor
sahf
xchg
imul
xor
in
jmp
mov
std
test
lods
(bad)
stc
adc
sar
enter
adc
or
jmp
leave
aas
movs
add
sub
(bad)
leave
mov
or
adc
call
arpl
add
xor
jg
test
xor
add
arpl
rcl
pop
sbb
rcl
push
mov
jns
cld
retf
mov
or
cmp
aaa
nop
ins
dec
adc
jne
rcl
in
and
retf
sub
loope
cs
(bad)
rcr
jmp
out
(bad)
sbb
pand
and
mov
push
jge
mov
aaa
cmp
icebp
mov
xchg
mov
in
test
adc
sahf
outs
movs
imul
add
sbb
xor
adc
adc
and
iret
adc
push
stos
cmp
mov
jne
js
adc
mov
shl
add
xchg
gs
xchg
pop
enter
and
addr16
popf
inc
adc
mov
cld
jmp
lods
add
pop
out
or
xor
dec
xor
retf
repnz
pop
or
ficom
daa
or
les
aaa
xchg
mov
mov
stc
rcr
lea
push
(bad)
fnstsw
fist
clc
out
ins
mov
(bad)
cmps
inc
out
aaa
out
xchg
and
sub
clc
cmps
call
dec
mov
mov
sub
sbb
lods
pop
inc
inc
push
enter
and
xchg
scas
mov
int
dec
xchg
or
mov
push
dec
int3
sub
jns
pop
(bad)
cld
jl
or
jp
xchg
push
jb
mov
adc
lahf
inc
push
arpl
lahf
aas
inc
sub
jp
dec
cli
pop
movs
out
call
ds
pop
mov
aam
inc
jb
ja
retf
les
mov
aad
xlat
fisub
(bad)
adc
movs
jecxz
lock
push
in
or
(bad)
dec
dec
out
into
push
enter
push
fnstsw
dec
mov
test
fsub
jp
daa
lea
fbstp
stc
xchg
xor
iret
movs
test
dec
sbb
xchg
xchg
aas
popf
je
call
aas
mov
sahf
mov
loopne
ds
int
iret
test
clc
sub
cli
inc
or
cmp
or
jl
mov
outs
xor
rcl
sti
scas
adc
daa
daa
sub
pushf
fidiv
sbb
push
push
pop
sub
scas
mov
xchg
fmul
ins
stos
add
jae
jmp
add
inc
or
sahf
fcomp
pushf
push
stc
inc
inc
mov
lock
lods
sbb
jmp
sahf
les
inc
outs
inc
mov
rcl
(bad)
sub
push
les
push
xlat
jle
fdiv
aas
and
sub
inc
xor
jnp
pop
int3
mov
push
xor
int
jne
in
pop
int3
jg
adc
jns
jge
in
out
cmp
push
mov
jb
sbb
sub
hlt
mov
jmp
in
das
jnp
sub
and
sub
retf
scas
inc
test
mov
inc
inc
pop
adc
jb
xor
ror
out
jns
adc
stc
or
jno
mov
sahf
clc
xor
imul
inc
push
ret
pop
test
ins
sub
push
div
repnz
adc
call
(bad)
out
mov
daa
test
push
dec
(bad)
jmp
inc
push
test
out
fisttp
xchg
lods
shr
leave
loop
mov
and
and
fisub
mov
jmp
ja
dec
push
fdiv
mov
cmp
pop
fiadd
out
inc
xor
call
xchg
sub
inc
sub
stos
and
addr16
cmp
sahf
out
cmp
lds
fcomp
shr
enter
aaa
cmp
xor
icebp
in
inc
lods
ja
cmp
and
bound
cmps
sbb
into
mov
enter
mov
xor
imul
xchg
out
and
lods
push
ret
sbb
xchg
cmp
push
mov
jle
dec
sbb
adc
mov
dec
mov
sub
and
inc
jmp
mov
mov
addr16
ror
sub
aad
test
ret
push
push
jno
aas
les
fmul
mov
int
movs
arpl
jge
pop
stos
mov
int3
jnp
outs
lahf
rcl
xorps
sbb
pop
(bad)
push
mov
ret
call
(bad)
pop
pop
(bad)
cmc
mov
push
fiadd
mov
mov
loope
jns
jbe
jb
cmp
in
push
ja
iret
mov
mov
sahf
lods
adc
xchg
outs
pop
sbb
push
fld
add
fbld
sub
jmp
mov
or
shl
aas
jge
ja
xor
mov
or
das
pop
aas
in
mov
push
inc
sub
test
or
jp
xchg
cmp
fcomp
iret
ins
adc
repz
push
dec
or
and
into
cmp
inc
out
call
inc
or
shl
daa
bound
loopne
and
ins
rcl
mov
cmc
aaa
nop
fwait
inc
mov
mov
mov
rcr
(bad)
mov
dec
out
test
daa
pop
addr16
std
mov
je
or
pop
pop
pop
adc
adc
loop
imul
and
inc
jp
mov
aaa
mov
mov
fisubr
fnstsw
jnp
daa
js
mov
test
test
shl
push
push
mov
arpl
ins
push
xchg
pop
dec
ds
inc
pop
or
jp
add
hlt
outs
lea
xchg
sub
jle
cmp
(bad)
das
push
sar
data16
movs
sub
div
cmp
leave
mov
push
fst
retf
or
dec
xchg
pusha
dec
push
clc
mov
aaa
ins
popf
xchg
fist
xchg
jge
and
jnp
out
popa
inc
cmc
dec
add
cwde
hlt
push
mov
retf
pop
pop
and
adc
jmp
outs
arpl
mov
push
cmc
sbb
cmp
cld
jl
sbb
pusha
in
or
xor
cmc
shr
cmps
je
std
or
and
mul
mov
fisub
mov
xchg
mov
pop
dec
sub
xor
inc
idiv
ror
cld
mov
test
mov
es
sbb
mov
das
ret
fist
pop
xchg
mov
jb
jl
jmp
sub
jp
and
mov
push
es
or
pop
push
push
jl
outs
das
pop
inc
mov
jl
mov
sti
popf
icebp
xor
jne
or
ins
retf
xor
stos
test
lods
(bad)
neg
cmp
jno
leave
dec
mov
js
xchg
mov
sub
jnp
mov
lahf
pop
mov
in
rcl
xor
outs
sub
mov
dec
int
xchg
push
mov
cmc
pop
sar
dec
aaa
jle
stos
add
gs
add
cld
test
sbb
and
jecxz
out
and
mov
into
mov
pop
iret
and
pop
cs
mov
arpl
lods
outs
not
adc
test
aas
push
cli
cli
sbb
adc
adc
mov
movs
mov
ret
cli
stos
clc
scas
xchg
ja
popf
mov
movs
mov
pop
dec
sub
xchg
vpcmpgtb
sahf
(bad)
repnz
dec
mov
or
and
jo
cmp
add
jmp
fcmovne
fst
or
lods
xor
in
inc
adc
imul
ins
fidivr
iret
jmp
bound
loope
mov
push
pushf
sbb
aad
add
add
call
and
cwde
(bad)
in
lods
movs
mov
inc
stos
daa
ins
inc
dec
cmps
(bad)
fimul
iret
sub
pusha
jae
sbb
mov
mov
jle
(bad)
out
pop
loope
test
sbb
pushf
out
ds
cdq
sub
mov
out
fsub
ja
push
mov
xor
lods
loop
sar
sub
cs
data16
imul
das
lds
sbb
sub
mov
pop
push
fcmovb
mov
std
ins
cld
cdq
call
jo
pop
xchg
pop
cli
sbb
jmp
sub
cmp
push
sbb
pop
retf
fmul
mov
imul
inc
push
out
pop
out
fcom
mov
(bad)
push
inc
jp
mov
pop
lods
sub
(bad)
call
jmp
sub
and
fnstsw
sti
fstp
adc
add
jae
sub
mov
std
or
mov
add
jl
cmps
and
aaa
pop
ins
add
in
adc
push
pop
pop
cmp
(bad)
mov
sbb
xchg
jno
rol
add
jo
add
retf
pop
inc
mov
(bad)
call
mov
and
inc
pop
or
push
xchg
popa
call
or
dec
js
arpl
mov
cld
add
in
mov
jge
sar
push
shr
movs
mov
jg
(bad)
xchg
sbb
cmp
test
ja
sbb
loop
clc
xchg
fmul
mov
xchg
(bad)
in
xor
xor
sub
rol
jne
mov
add
push
shr
push
cmp
jb
loope
adc
stos
ja
cmp
sub
es
repz
ins
int3
pop
outs
mov
aaa
pushf
cwde
lahf
cmps
sub
add
push
(bad)
mov
into
in
movs
enter
dec
sbb
das
ins
imul
jmp
adc
out
mov
mov
or
fild
sahf
sub
dec
mov
mov
jo
dec
aaa
xchg
hlt
gs
lea
mov
dec
jno
fmul
xor
in
and
inc
push
(bad)
xchg
mov
sbb
and
fimul
pop
fcomip
pop
lods
fidivr
movs
mov
mov
cmc
(bad)
or
or
int3
leave
sub
mov
leave
lahf
pop
sbb
aas
sahf
popf
fcmovne
xor
repz
xchg
inc
xchg
inc
gs
(bad)
cdq
sbb
or
ins
inc
add
xlat
out
xchg
out
jl
rcl
jmp
push
mov
mov
cmps
sub
sahf
(bad)
loop
add
sti
add
push
mov
std
lods
push
fmulp
loope
hlt
outs
pop
lock
mov
movs
movs
call
xor
inc
xor
dec
jbe
pop
push
stc
push
xor
pop
pop
imul
aas
fabs
test
mov
mov
sub
pop
and
add
push
(bad)
aad
test
push
push
mov
mov
adc
jne
cmp
xchg
(bad)
add
gs
fs
xchg
imul
push
inc
mov
es
imul
sar
fistp
push
loope
(bad)
sub
mov
push
cmp
gs
in
xchg
lods
pop
fiadd
shl
mov
ds
fld
inc
leave
pop
pushf
repnz
rcr
test
lds
push
mov
mov
(bad)
fdecstp
push
adc
inc
sar
aad
imul
loope
xchg
cmp
in
cmp
mov
push
xchg
(bad)
js
pop
div
mov
cmc
xlat
fdivr
test
jb
jp
mov
xchg
jns
clc
shr
test
mov
popa
enter
stos
aad
cld
mov
not
les
sub
inc
sbb
sub
cs
cmc
call
test
add
pusha
dec
(bad)
data16
test
test
pop
fimul
fwait
(bad)
xchg
ret
push
cs
sbb
shr
out
adc
pushf
sbb
lock
mov
aas
dec
cmp
mov
cdq
inc
xor
cmp
push
outs
inc
retf
add
mov
pop
push
icebp
hlt
out
pop
fcom
inc
pop
popf
les
mul
call
cmp
call
imul
fninit
mov
jg
push
pop
add
xchg
push
sbb
and
jae
mov
cmp
and
into
xor
xchg
je
adc
push
pop
iret
dec
or
pop
ret
mov
inc
stos
inc
jns
repnz
jecxz
test
pop
shr
hlt
jmp
cmp
and
mov
mov
push
daa
pop
jno
shr
daa
inc
(bad)
adc
xchg
daa
leave
jle
jp
test
jne
sub
adc
mov
test
fadd
push
aad
das
(bad)
mov
xchg
call
inc
hlt
je
loopne
xor
xchg
or
push
sti
mov
inc
mov
pushf
sahf
jo
push
nop
jmp
xchg
pop
xor
sbb
into
xchg
inc
jno
mov
ja
enter
mov
jp
es
ret
shl
test
cmc
hlt
or
push
stos
xchg
add
xor
xchg
and
fnsave
pop
inc
xor
pop
cmp
retf
dec
jmp
fcom
pop
mov
sub
pop
sub
and
addr16
(bad)
fcomp
test
add
cmp
fisubr
mov
imul
movs
xor
dec
mov
fldenv
xchg
sub
add
lods
add
bound
out
inc
adc
xor
add
xchg
cmps
out
rcr
and
test
xchg
in
xchg
jno
add
fldcw
je
cwde
lock
xor
movs
jg
je
dec
sti
outs
mov
push
jge
das
loope
(bad)
pop
pop
rcr
mov
sub
inc
adc
pop
(bad)
jo
aad
push
jge
pop
pushf
and
fwait
sub
pop
mov
fnstcw
sbb
rcr
fucomp
or
icebp
mov
ins
or
je
push
xchg
aam
scas
ins
fcom
inc
jl
test
and
pop
mov
arpl
cmps
mov
clc
or
lahf
cdq
cmps
stc
push
fsubr
test
imul
pop
add
mov
push
(bad)
int3
int
scas
xchg
sbb
pop
pop
sti
add
ds
mov
and
adc
mov
jl
add
sar
test
es
jp
inc
mov
jp
sub
fwait
or
sub
out
(bad)
jbe
or
xor
push
jnp
cwde
fild
pop
pop
ja
or
add
and
sub
and
js
ficomp
lods
and
and
mov
xchg
sbb
(bad)
jmp
push
xor
movs
push
int
and
xchg
jl
adc
adc
enter
and
mov
gs
jmp
stos
mov
add
addr16
jmp
mov
rcr
pop
add
add
adc
push
push
les
loop
stos
ins
aas
sti
in
cmp
xchg
jecxz
mov
es
call
rcr
mov
push
dec
xor
push
sub
cli
dec
push
fprem
push
ss
lea
into
test
push
inc
jb
dec
movs
jns
mov
xchg
or
push
xor
movs
stc
cmp
nop
repnz
aas
pop
pop
jmp
in
add
aas
dec
ror
lock
cli
and
lods
call
mov
and
xor
div
inc
mov
adc
nop
sub
sbb
test
pusha
ret
jbe
xchg
push
sbb
mov
mov
and
outs
jne
inc
stos
push
out
(bad)
ja
xor
or
out
mov
mov
ss
test
stos
push
fst
mov
ficom
jecxz
mov
int3
clc
sbb
iret
les
push
iret
xchg
enter
gs
xchg
mov
ins
lods
dec
and
sbb
add
mov
int3
scas
test
in
add
loop
lahf
pop
add
push
pusha
pop
test
(bad)
int3
pop
pusha
lods
rol
dec
out
mov
push
or
arpl
mov
outs
test
push
les
or
mov
jmp
repnz
push
mov
shl
cdq
cmp
push
sub
xor
xor
pop
pop
inc
call
aad
int
adc
dec
and
fadd
fs
xchg
pop
dec
ss
repz
in
mov
push
sub
into
lods
ret
push
cmp
xor
inc
jle
data16
fidiv
ss
(bad)
in
rcl
mov
rcl
mov
sbb
cmc
mov
scas
sbb
(bad)
(bad)
popa
push
in
inc
mov
in
xor
mov
scas
xor
daa
mov
mov
jmp
xchg
jl
loop
push
or
pop
out
jne
and
dec
in
mov
pusha
(bad)
pop
mov
xchg
mov
inc
xchg
jae
jl
jle
rol
jge
aad
lods
sub
add
dec
mov
or
loop
scas
enter
cmps
mov
xchg
outs
imul
jecxz
cmc
pop
push
idiv
jmp
loope
add
pop
add
sub
call
sub
into
stos
xchg
test
les
jecxz
pop
add
or
jns
and
loopne
scas
fldcw
mov
mov
cwde
push
mov
push
xor
push
xchg
cmps
out
sub
or
int3
mov
xchg
out
sbb
fnstsw
sub
idiv
mov
sub
push
add
ret
jl
cwde
push
sbb
mov
xor
movs
cmp
dec
adc
cmps
sub
aas
repnz
sub
out
daa
mov
adc
fistp
pop
stos
mov
xchg
jg
inc
pusha
push
rsqrtps
ficomp
test
push
mov
sub
cli
push
loopne
mov
inc
hlt
ja
push
fcmovu
imul
sbb
jb
and
shl
mov
scas
sub
in
fisubr
scas
and
iret
xchg
inc
std
pop
jle
mov
ss
fadd
int3
inc
push
addr16
lods
cs
adc
pop
hlt
aad
dec
mov
gs
aad
iret
jae
pusha
inc
add
ins
nop
pushf
pop
or
pop
ds
aas
cmp
lods
cs
sahf
(bad)
push
fisubr
clc
fwait
dec
aaa
shl
loop
push
dec
fwait
cld
xchg
nop
pusha
xor
cmp
pop
inc
xor
test
xor
adc
pop
sub
xchg
test
pop
scas
xor
mov
pop
jl
ret
mov
std
mov
dec
(bad)
and
inc
jno
and
repz
frstor
mov
fistp
jno
mov
push
xchg
cmps
sbb
fldcw
mov
(bad)
push
push
jnp
call
dec
fcmove
fdivr
fcomp
add
jne
movs
pop
pminsw
fwait
sbb
cdq
sub
jge
loop
dec
cmc
or
xlat
sbb
push
adc
leave
and
mov
lods
jnp
lds
into
loopne
xor
loopne
dec
rcl
mov
mov
inc
mov
aas
mov
xchg
xor
cmp
xchg
scas
xor
jno
loope
and
ds
in
fidiv
fidivr
cmp
jb
xchg
clc
sbb
ret
pop
dec
lds
sti
dec
jge
or
jbe
inc
xchg
in
leave
pop
jmp
fs
retf
lea
ficomp
inc
jge
test
ja
ss
dec
mov
daa
mov
lods
dec
push
int
sar
sub
push
lods
(bad)
sub
cmp
retf
adc
pop
int
xor
sub
dec
or
xchg
je
fimul
and
mov
mov
popf
sub
inc
and
jmp
imul
sub
mov
push
xor
add
inc
push
cmp
mov
call
aam
or
add
movs
jmp
das
outs
addr16
inc
call
fpatan
sub
lea
pop
mov
idiv
adc
or
push
lahf
hlt
cmps
imul
ins
ja
sbb
jecxz
aaa
adc
push
ja
mov
fdiv
mov
(bad)
idiv
mov
mov
add
icebp
inc
jbe
fucomp
fnsave
mov
movs
pop
stos
xchg
test
mov
sub
adc
or
push
fild
lods
mov
lahf
push
fnstsw
xlat
out
mov
aas
xor
addr16
xchg
outs
push
cmp
daa
scas
outs
imul
add
or
mov
push
jmp
mov
inc
pop
add
aam
movs
jmp
clc
(bad)
push
leave
div
jp
and
inc
dec
hlt
scas
neg
ss
test
je
shr
fld
iret
(bad)
repnz
and
in
mov
ror
cmp
inc
push
dec
push
retf
mov
in
sbb
cmp
and
scas
call
pop
lods
rcr
sub
or
loopne
adc
int3
pop
xchg
mov
push
xchg
xchg
sbb
retf
sub
pop
sbb
inc
into
jmp
mov
xor
cmc
xor
inc
cmp
push
icebp
sub
mov
add
cld
fsubr
movs
sbb
lods
pusha
icebp
mov
js
sub
int3
xor
mov
loop
adc
pop
rol
std
xor
aas
mov
(bad)
and
mov
dec
xchg
cs
neg
pop
xchg
inc
aam
push
popa
test
mov
adc
push
add
and
cli
outs
test
pop
(bad)
aam
dec
push
leave
ss
in
inc
cmc
mov
fwait
push
imul
xchg
cwde
les
lahf
jp
mov
fisttp
add
inc
mov
inc
cmp
mov
fsubr
(bad)
or
aaa
daa
pop
imul
out
int
mov
fiadd
sub
aad
daa
fsub
jmp
lods
retf
movs
sbb
scas
sbb
push
mov
addr16
(bad)
mov
inc
push
pop
inc
ins
ins
int
xor
ja
and
sbb
or
mov
ins
ja
mov
in
dec
fs
ror
push
sub
test
stos
dec
jno
ds
iret
in
dec
fidivr
xchg
cli
test
hlt
mov
xchg
shl
xchg
xchg
dec
mov
mul
sbb
ds
adc
sbb
add
cmp
xchg
test
jmp
shl
cs
jle
cdq
fwait
scas
stc
shr
pusha
lock
stc
in
test
gs
cwde
sub
inc
push
test
loop
dec
sub
ja
push
into
mov
les
lods
pusha
jne
pop
jp
stc
add
sti
and
(bad)
xor
adc
jnp
add
imul
in
(bad)
outs
movs
inc
jno
sub
scas
adc
retf
retf
pop
mov
jae
adc
fiadd
mov
dec
cmp
inc
gs
test
mov
test
sub
dec
xchg
out
adc
push
mul
cmp
lahf
aam
or
out
and
(bad)
aaa
shl
xchg
(bad)
jmp
sti
gs
pop
pop
xor
add
cmp
je
rol
cmp
push
ins
xchg
or
dec
shl
or
movs
or
xlat
or
push
out
int3
add
(bad)
cwde
int3
faddp
dec
iret
cmp
(bad)
or
inc
adc
aad
pop
and
dec
aas
or
add
loop
icebp
ret
ins
leave
sub
aam
jp
adc
inc
stos
inc
jp
mov
lods
(bad)
ror
aas
inc
push
cli
gs
mov
cmp
jp
in
mov
mov
dec
retf
iret
je
mov
mov
pop
cmps
jmp
mov
push
sub
clc
jno
mov
fs
dec
dec
sbb
aam
pop
cmps
or
leave
shr
and
cmc
ret
xchg
test
dec
mov
pusha
mov
or
fwait
popa
xlat
lods
mov
pop
inc
mov
push
popa
push
add
imul
pop
mov
ret
movs
sbb
neg
mov
aas
jae
mov
(bad)
loop
mov
fcom
pop
ins
mov
and
xlat
(bad)
outs
test
(bad)
retf
lock
outs
out
inc
add
arpl
mov
xor
das
pop
test
call
xor
mov
cmps
dec
out
jmp
add
inc
add
and
push
and
adc
push
addr16
sti
xchg
dec
idiv
mov
mov
dec
cmps
push
jns
loop
xchg
scas
inc
fsubr
and
jge
mov
inc
mov
sbb
ret
fisttp
cmp
pushf
xrelease
scas
mov
loop
dec
mov
or
nop
push
aam
jbe
jle
mov
into
ret
mov
adc
push
loop
push
or
sub
in
mov
outs
(bad)
cmp
gs
iret
ja
ret
or
loop
xchg
push
fstp
xchg
out
pusha
(bad)
push
xor
dec
ss
cmps
add
test
sar
in
sub
popf
add
jne
adc
je
and
xor
add
push
call
rol
add
mov
or
ret
jne
cmps
or
cmps
aad
pop
imul
mov
jbe
cwde
mov
mov
mov
ja
dec
gs
dec
mov
mov
cmp
arpl
dec
retf
sub
stos
dec
cmp
jns
push
test
mov
jecxz
repnz
or
inc
enter
add
mov
or
stos
aaa
xchg
fnstcw
mov
and
loope
and
call
leave
imul
inc
add
mov
jecxz
mov
dec
pop
sbb
inc
cld
xchg
pop
mov
jnp
retf
mov
jp
mov
pop
aam
std
popf
popf
cwde
cmps
into
mov
fisub
(bad)
cmp
int
fsub
popf
mov
jmp
pop
scas
cdq
cmp
push
aaa
mov
mov
pop
push
xchg
test
sbb
sub
dec
out
mov
xor
jl
lods
or
xor
in
push
pop
sub
pop
jg
push
out
adc
mov
dec
aad
push
pop
mov
lds
into
cli
(bad)
clc
pop
and
and
mov
jno
cmp
sub
xchg
push
stos
popa
pop
aam
jg
dec
out
ja
mov
daa
ins
loope
dec
aas
add
scas
repz
xor
sub
fwait
mov
mov
stc
movs
loopne
or
lds
enter
cmp
js
sbb
out
jns
fidiv
not
xchg
mov
fst
sub
mov
mov
arpl
dec
lgs
inc
inc
or
frstor
cli
pop
or
pushf
xor
cld
push
push
pop
jno
pop
xor
and
pop
dec
arpl
xchg
stc
cmp
sub
sti
pop
or
(bad)
hlt
adc
jmp
(bad)
push
sub
push
frstor
shr
in
ins
cmps
and
movs
mov
or
sbb
daa
ret
pop
or
arpl
pop
push
xor
pop
and
jl
xchg
lea
xchg
daa
int3
xchg
call
lea
stc
fsin
adc
xchg
jmp
add
adc
cmp
call
fimul
out
and
(bad)
cmps
lods
mov
popf
push
dec
jbe
sbb
cmp
test
out
and
cdq
mov
mov
push
jo
loope
aas
or
(bad)
movs
sub
enter
adc
icebp
mov
inc
and
mov
into
add
mov
into
sub
scas
jp
sbb
stos
or
push
ds
push
js
add
cmp
jne
out
das
div
mov
test
das
mov
and
mul
stos
push
xor
aas
xor
aas
stos
movs
xchg
mov
ins
add
and
fsubr
stos
mov
pop
into
jne
and
mov
fsub
call
bound
inc
ds
xlat
xor
out
xchg
sbb
xchg
xor
or
fs
dec
shl
adc
xchg
js
cmps
fwait
push
adc
mov
sub
leave
mov
sbb
(bad)
xor
mov
pop
imul
cmps
xchg
mov
push
xchg
add
dec
mov
add
sub
bound
cmp
mov
std
add
dec
fdiv
mov
pop
std
pop
push
fstp
inc
cmps
pop
fidiv
inc
mov
fcom
addr16
lea
(bad)
cmp
aaa
pop
mov
out
jmp
in
cmc
push
mov
movs
call
push
push
cmps
or
jb
sub
dec
dec
jmp
pop
or
dec
hlt
or
cmps
pop
in
adc
adc
xor
mov
fbstp
inc
mov
xchg
test
pop
cmc
(bad)
imul
push
popf
add
aaa
mov
or
mov
mov
in
fild
sub
push
mov
loope
out
std
sbb
and
add
push
jle
cmp
mov
gs
repz
pop
ins
push
into
aaa
and
xchg
inc
in
lahf
in
xor
movs
ss
jne
rcl
scas
and
push
sbb
call
mov
je
lds
sbb
push
lahf
imul
inc
in
mov
push
in
jnp
push
repz
jae
or
test
cmovl
out
push
push
movs
jecxz
cmp
sub
sub
xchg
pop
mov
mov
adc
(bad)
in
pop
jmp
add
xchg
fwait
outs
stos
leave
sub
or
pop
mov
and
iret
jle
fdivr
gs
adc
mov
fcomp
mov
mov
or
out
test
ss
(bad)
retf
sub
leave
addr16
cwde
loop
(bad)
xchg
adc
sbb
adc
xor
push
cli
add
xchg
movs
mov
or
mov
int3
je
add
sub
or
rcl
loop
sahf
push
stc
mov
aad
xchg
mov
cmp
dec
retf
frndint
or
fisubr
jge
mov
mov
inc
inc
mov
movs
mov
add
mov
test
jmp
add
lods
fcmovnu
dec
mov
cmp
jno
xor
sub
push
or
bswap
lods
mov
dec
jg
mov
xchg
adc
jb
popa
mov
fisubr
outs
int3
xor
in
(bad)
in
jbe
outs
sub
sub
or
jb
movs
cmp
or
jle
out
jo
pushf
les
mov
xor
pushf
test
add
fcmovnu
in
(bad)
push
mov
adc
inc
inc
retf
das
mov
sbb
repnz
and
mov
xor
out
jae
inc
adc
jl
inc
enter
mov
imul
rcr
idiv
jge
fnsave
dec
fnsave
dec
xchg
inc
or
idiv
sbb
repnz
aam
xlat
inc
add
call
in
sti
push
mov
fxch
and
in
push
and
pop
mov
rol
or
retf
je
inc
loop
cli
sti
not
imul
adc
sub
movs
cld
adc
cs
mov
mov
mov
mov
sahf
div
in
loope
test
arpl
lock
and
mov
add
cmp
movs
mov
pusha
sub
(bad)
and
pop
in
pop
mov
call
xchg
ins
movs
ret
mov
inc
lahf
cld
mov
jmp
or
shl
icebp
adc
fimul
mov
es
fild
mov
add
cmps
scas
sbb
and
addr16
aad
or
or
daa
outs
mov
cdq
jl
add
(bad)
mov
jo
lods
mov
mov
mov
inc
pop
call
add
(bad)
gs
lods
out
retf
mov
cmp
arpl
sub
xor
(bad)
hlt
ins
jb
bound
pop
pop
loop
push
sbb
xchg
mul
inc
mov
push
pusha
faddp
int3
inc
jl
sti
iret
xor
xchg
xor
or
or
sbb
sti
retf
and
and
mov
pushf
push
addr16
mov
sub
inc
ss
or
mov
aaa
xchg
repz
(bad)
out
rcl
(bad)
and
and
jne
jmp
fsubr
ficom
inc
test
movs
inc
jle
inc
test
fstp
jmp
(bad)
lahf
mov
data16
xchg
ficom
fsubr
inc
push
pop
pushf
pop
stos
js
aaa
es
inc
add
inc
pusha
mov
and
fs
push
mov
mov
cmps
push
add
cwde
(bad)
mov
push
mov
test
jns
mov
add
sbb
daa
imul
cmp
shl
push
leave
std
in
test
mov
pop
ins
call
xchg
nop
(bad)
mov
outs
fwait
dec
out
outs
std
or
in
popa
pop
ds
and
dec
cmp
cmp
mov
(bad)
fimul
add
dec
inc
dec
mov
ins
cmp
ret
or
jge
push
mov
inc
cmps
iret
inc
ins
or
mov
xlat
out
mov
inc
clc
sub
cs
xchg
sbb
sbb
lods
inc
add
fchs
in
dec
jg
sahf
pop
mov
scas
push
dec
pop
rcl
fwait
dec
loop
inc
test
cmp
push
pop
inc
test
sbb
jmp
or
push
call
loope
mov
xchg
push
adc
nop
xchg
jae
loop
mov
mov
mov
(bad)
aaa
sar
adc
dec
ret
call
jns
test
inc
mov
dec
loopne
mov
adc
dec
dec
push
sbb
push
imul
rol
les
jns
xor
(bad)
jle
pop
arpl
loopne
sbb
mov
sbb
mov
data16
fnstsw
fiadd
and
movs
cs
lock
adc
pop
push
adc
jl
sbb
les
mov
add
mov
jmp
outs
movs
fidivr
mov
cli
pop
mov
scas
test
dec
sbb
inc
call
pop
xor
cmovne
mov
mov
adc
and
cmps
sub
sub
inc
mov
mov
lahf
cmp
mov
sahf
mov
popf
jg
xchg
mov
sahf
scas
push
push
and
jns
push
inc
mov
adc
add
add
push
imul
sub
leave
std
dec
stc
les
or
ja
dec
xor
sub
or
(bad)
mov
fs
iret
and
arpl
mov
ins
mov
movs
cmps
bound
add
(bad)
iret
xchg
not
std
pop
shr
jp
call
lahf
jmp
mov
dec
add
mov
div
rcr
adc
pop
shl
lock
inc
inc
imul
inc
int3
push
retf
push
in
cwde
cli
xor
aad
push
push
mul
sub
jnp
mov
(bad)
nop
pop
mov
movs
je
stos
lods
push
cmp
shl
cmp
in
repz
mov
stos
jno
ins
jo
fs
ret
in
pop
sbb
neg
iret
cmp
cld
ffree
and
mov
sub
call
lods
mov
adc
retf
aas
(bad)
into
iret
(bad)
pusha
sub
mov
lods
ss
enter
and
fld
mov
dec
mov
(bad)
les
sbb
arpl
jg
btc
imul
in
shl
ja
or
lods
shl
cmp
jne
add
call
add
push
inc
pop
mov
ror
pop
push
nop
mov
test
mov
es
aaa
sub
mov
repnz
iret
imul
fsub
xor
loope
dec
jecxz
and
xlat
aas
sub
out
lods
pop
dec
lea
outs
push
jo
scas
pop
or
jb
xchg
sbb
popa
fdiv
in
cli
jge
pop
sbb
out
into
in
int3
icebp
mov
dec
ss
jecxz
outs
aad
ret
mov
and
pop
ja
aas
stc
xor
sub
call
repz
cmp
and
mov
imul
mov
push
f2xm1
xchg
mov
xchg
or
dec
jmp
mov
fmul
push
mov
mov
mov
jl
mov
push
pop
imul
dec
mov
pusha
enter
sti
call
sbb
dec
aad
sub
mov
shl
push
and
test
jp
gs
mov
adc
out
ss
stos
cld
cmps
cmp
adc
dec
pop
out
pop
jmp
sub
into
jbe
cmp
mov
cmp
add
in
js
push
xchg
cs
shl
addr16
xor
ins
fsubr
int3
popa
in
popa
out
push
data16
sub
dec
ror
adc
call
fldcw
lock
mov
retf
mov
pop
mov
in
dec
push
pop
ins
enter
(bad)
sti
js
cld
pop
jbe
sub
icebp
enter
xchg
retf
cmp
push
jge
mov
pusha
or
or
out
inc
js
aam
mov
and
shl
in
sahf
adc
rcr
iret
inc
jg
push
movs
addr16
call
add
daa
inc
or
sahf
inc
mov
adc
bound
cmp
pop
jo
mov
ja
(bad)
data16
push
mov
xchg
ss
inc
push
cs
leave
adc
push
(bad)
mov
inc
xchg
cwde
inc
sbb
mov
push
xchg
mul
nop
mov
xor
pop
sbb
cmp
mov
and
test
scas
dec
addr16
adc
add
adc
push
lock
adc
(bad)
jge
loopne
or
cmp
mov
stos
pop
test
fsubr
adc
mov
mov
adc
rcl
or
xchg
jg
mov
cwde
sbb
add
push
sti
mov
ficomp
xor
push
jl
add
retf
(bad)
repnz
les
xlat
(bad)
adc
or
and
aam
test
repz
xchg
pop
xlat
sub
dec
es
mov
sbb
xchg
sbb
clc
(bad)
mov
gs
xor
movs
jne
pushf
jle
stc
fs
lahf
sbb
inc
cmp
sbb
aad
in
mov
xchg
sub
sbb
mov
sub
adc
mov
outs
push
(bad)
cmp
push
ss
jno
dec
out
mov
rep
retf
or
jbe
pushf
aaa
jge
mov
out
push
retf
popf
adc
(bad)
out
adc
cmps
sti
imul
test
mov
xor
add
jnp
add
inc
pop
mov
fs
lock
in
jne
fmul
push
jg
adc
dec
pop
(bad)
xor
pop
dec
mov
push
dec
pop
sbb
addr16
ins
cmps
jno
les
loopne
add
sub
cmp
and
dec
inc
ss
push
mov
push
pop
imul
adc
jns
aaa
xor
pop
or
jne
add
out
xor
xchg
adc
pusha
push
test
mov
add
and
jae
retf
adc
push
jg
shl
lods
push
sti
not
stos
jecxz
xchg
mov
mov
cdq
retf
cmp
or
dec
int
adc
jl
inc
inc
test
sbb
cmp
adc
xor
push
dec
popf
inc
hlt
cmp
and
and
das
fwait
retf
out
test
fwait
bnd
js
call
(bad)
cmps
mov
xchg
ins
mov
pop
xor
push
jmp
stos
mov
pop
adc
inc
fsubr
or
pop
call
or
daa
dec
aad
pcmpeqb
mov
imul
loop
push
std
add
out
fldcw
dec
ret
call
cmc
in
push
mov
and
mov
jno
pop
(bad)
push
mov
inc
loopne
sbb
ins
mov
and
loopne
pop
stc
sbb
inc
mov
(bad)
out
mov
sub
xor
nop
test
into
and
retf
jns
mov
mov
xchg
xchg
fs
(bad)
fptan
push
sbb
ins
ror
or
add
retf
ret
lea
sbb
std
fwait
mov
je
xchg
mov
adc
mov
jae
aam
sub
push
(bad)
(bad)
xor
inc
repnz
xchg
(bad)
fsub
inc
nop
dec
(bad)
fsubp
int
lods
sub
cmp
inc
fs
xchg
mov
push
mov
cdq
movs
rol
xor
int3
js
add
repnz
cmp
xchg
adc
pop
dec
dec
cmp
imul
into
addr16
popa
pop
mov
ret
(bad)
pop
and
inc
jmp
xor
mov
lea
xchg
mov
lahf
ja
es
mov
loope
sub
in
retf
sahf
mov
shl
mov
and
pusha
fild
arpl
xor
sub
sub
pusha
xor
rol
outs
jo
xor
stc
or
div
(bad)
enter
push
fwait
imul
rcl
lock
and
(bad)
in
aas
pop
pop
ds
test
scas
mov
popf
xchg
mov
or
sti
and
jmp
imul
sbb
pop
call
xchg
inc
idiv
inc
aad
push
lods
out
mov
lods
jb
leave
icebp
shl
jbe
mov
inc
es
mov
mov
mov
mov
scas
mov
xor
or
jmp
pop
pop
inc
sub
test
pusha
bound
cmps
add
enter
(bad)
jg
fld
and
pop
adc
icebp
(bad)
std
and
std
adc
nop
in
inc
push
and
enter
fist
sub
mov
jmp
xchg
adc
jl
dec
push
mov
pop
leave
enter
mov
inc
into
jb
aam
stos
fwait
sbb
js
pop
fsubr
pushf
pop
adc
push
mov
adc
cmp
inc
jmp
mov
iret
inc
mov
xor
or
mov
pop
jg
sub
(bad)
rcr
mov
outs
call
add
loop
ficom
mov
lea
jmp
push
mov
inc
ds
mov
mov
xchg
call
xchg
pushf
mov
pop
jmp
pop
popf
sub
es
shr
gs
jmp
outs
mov
sub
stos
cli
adc
pop
repz
or
and
adc
sub
out
xor
pop
int
in
lods
sbb
mov
cmps
(bad)
jns
xor
inc
jno
(bad)
dec
jge
cmp
xchg
xlat
cmp
(bad)
arpl
int
dec
mov
or
or
repz
inc
dec
mov
data16
xor
mov
adc
int3
movs
mov
mov
ins
pop
mov
test
pusha
int
es
cmp
pop
cli
mov
xor
sub
inc
mov
adc
inc
inc
call
ins
movs
or
sbb
js
enter
cmps
jge
pop
gs
int
adc
sub
sbb
dec
or
outs
inc
sub
and
pushf
shr
add
jl
sbb
shl
pop
sbb
mov
pusha
ins
fucomip
adc
and
sub
rcl
fsub
xchg
in
xlat
cdq
jno
mov
cdq
outs
pop
arpl
fnsave
sar
lods
mov
scas
popf
je
or
ins
jl
(bad)
fist
movs
adc
fst
cmp
jbe
push
inc
mov
mov
jb
push
movs
pusha
mov
pop
sahf
arpl
movs
loope
cmps
mov
jb
out
movs
aas
lock
loop
adc
sti
aam
sub
aad
idiv
test
fcom
add
add
sbb
cmc
punpckhdq
fist
movs
mov
dec
aad
retf
jbe
jno
sbb
xchg
push
jo
pusha
les
and
and
je
dec
lock
xlat
push
arpl
jbe
call
xchg
inc
into
push
outs
cmp
shr
pop
int3
scas
inc
add
push
cmp
adc
stos
and
repnz
scas
xchg
push
mov
xor
(bad)
or
jbe
mov
mov
add
and
push
and
adc
pop
pop
and
aaa
stc
or
sub
out
mov
mov
cli
lds
rcr
ins
pop
cmp
add
adc
cli
test
adc
movs
mov
xchg
mov
push
inc
test
sub
aad
fwait
or
mov
addr16
scas
repnz
inc
jge
and
fcmove
jae
leave
popf
pop
dec
in
call
repnz
sub
inc
mov
(bad)
mov
push
jns
test
sub
clc
std
xchg
mov
shl
and
mov
call
nop
add
mov
push
stos
jle
add
mov
outs
outs
retf
shl
and
sbb
shr
mov
jecxz
pusha
scas
std
and
cmp
in
dec
xor
cmps
cmp
or
cmc
jecxz
sbb
stos
cmpxchg
sbb
sar
jmp
inc
mov
es
inc
pop
push
icebp
popa
push
and
pop
sbb
loop
and
fisub
ret
enter
fisubr
out
add
cmps
loop
jno
ficomp
lea
xchg
jnp
hlt
retf
out
jae
stos
hlt
inc
fadd
cmp
add
fisubr
add
(bad)
das
add
push
and
movs
push
pop
aas
mov
jae
cmp
pop
inc
inc
aas
push
jns
mov
ins
les
iret
(bad)
sub
mov
bound
mov
adc
jo
cmp
mov
sbb
pop
xchg
rol
xchg
ss
lahf
and
xchg
cmp
adc
popf
es
or
cmc
mov
retf
outs
cmp
pop
daa
cmp
ror
dec
mov
ins
icebp
sub
into
es
outs
pop
enter
pop
dec
mov
xor
stc
sti
and
(bad)
jo
and
mov
sbb
ja
or
adc
shr
push
sbb
xchg
test
mov
das
fist
(bad)
sub
pop
adc
test
lea
(bad)
mov
loope
mov
int3
push
or
jg
test
mov
popf
inc
jmp
ret
ds
mov
dec
out
fstp
jo
rcl
fwait
jmp
fld
add
stos
adc
pop
in
repz
mov
iret
cwde
fdivr
fwait
cmp
pop
mov
pop
jp
aam
nop
pop
enter
xchg
js
es
movs
mov
es
lds
es
sbb
fmul
aaa
lock
(bad)
leave
push
push
jl
dec
pushf
lods
pop
and
jnp
call
mov
xor
jo
lea
pop
jne
imul
sahf
pop
jae
push
add
mov
push
or
push
jge
cmp
je
fcom
cmp
inc
jmp
xor
shl
out
sub
stos
mov
adc
cmp
dec
or
lods
cmp
push
xor
sar
aad
cld
mov
xor
add
repz
pop
xchg
outs
adc
aad
adc
xchg
pop
repnz
adc
lds
out
mov
or
cmp
mov
cmp
mov
je
inc
fucompp
mov
mov
push
mov
pushf
xchg
sub
repz
nop
test
mov
mov
mov
xchg
pop
cmp
mov
jge
mov
lahf
or
rcr
mov
lods
push
jb
shr
in
sub
xor
mov
fwait
and
add
jb
lods
mov
stos
xor
inc
cmc
aam
hlt
imul
xor
push
in
div
in
mov
inc
push
data16
jb
mov
xor
mov
aas
jle
hlt
and
jl
bnd
jo
and
pop
cmps
and
cmp
cmp
mov
rol
ret
int
mov
loop
arpl
add
jecxz
add
dec
or
push
cli
push
push
push
pop
clc
push
push
and
jge
outs
add
mov
adc
jl
mov
lock
inc
xchg
jge
push
(bad)
and
push
sub
mov
sbb
je
lds
dec
xchg
dec
jecxz
pusha
scas
in
pop
sbb
ret
push
mov
ret
mov
pop
mov
jne
cld
adc
mov
push
sti
(bad)
cmps
retf
xor
(bad)
sahf
test
mul
sbb
repz
cmp
fwait
push
ins
push
pop
iret
je
ins
std
cld
push
(bad)
out
xchg
or
icebp
fistp
fimul
sbb
pop
pop
movs
es
jo
xor
cmps
popa
jnp
jne
inc
pop
add
sbb
aam
call
xor
mov
cmp
and
imul
arpl
pop
mov
cmps
ret
or
cmp
pop
adc
or
std
pop
push
push
ret
ret
aas
mov
cld
lock
ins
ret
sti
push
add
and
popa
jbe
jo
jge
shl
dec
adc
pop
cmp
push
cwde
mov
mov
daa
out
inc
mov
es
lods
jb
mov
xchg
repnz
sub
mov
dec
movs
les
dec
or
cmps
dec
inc
push
sbb
cdq
shr
cmp
mov
xor
fcmovu
fucomp
mul
cli
(bad)
std
inc
lods
xlat
sti
or
sbb
xor
inc
lods
push
scas
adc
add
sub
add
aaa
sbb
push
add
mov
fdivr
cmp
dec
rcl
mov
les
movs
fild
xlat
xchg
(bad)
pop
push
test
xchg
mov
add
mov
sbb
ins
movs
push
pop
or
mov
sbb
arpl
(bad)
aam
adc
inc
or
push
clc
add
adc
xchg
dec
sbb
mov
sbb
mov
neg
adc
mov
jl
(bad)
pusha
hlt
jge
and
es
xlat
adc
in
push
mov
xchg
add
cwde
lods
loopne
sbb
push
sub
pushf
add
shl
bound
add
lds
sar
jl
or
and
test
cmp
call
jge
fsincos
pop
inc
sbb
fstp
sbb
shl
and
cmps
xor
movs
mov
jp
add
mov
fnstsw
pop
ds
ss
and
push
xchg
add
in
pop
mov
xchg
cs
xor
lahf
cmp
adc
adc
add
enter
sub
add
das
mov
lahf
fldcw
loopne
fsubp
test
rol
cmp
or
jp
cld
(bad)
dec
jno
pop
add
mov
out
clc
fld
loopne
pop
es
lods
sahf
push
lock
xor
scas
xchg
out
jmp
mov
aad
bound
popf
aad
rol
jecxz
fs
xor
stos
jmp
ins
icebp
pop
or
inc
xchg
and
fdivr
div
cmp
adc
push
call
inc
pop
lea
or
add
cmp
imul
pop
or
test
or
dec
fistp
cmc
xchg
(bad)
jbe
ins
repz
xchg
jbe
pushf
mov
ffreep
pop
pushf
cmp
sub
mov
jg
rcl
sbb
call
out
loop
sbb
push
push
imul
add
retf
jle
and
test
ficomp
cmc
stc
inc
stc
lds
imul
and
pop
in
lock
stc
sahf
sbb
dec
in
or
retf
mov
xor
rcr
inc
test
outs
in
jo
jecxz
cmp
test
(bad)
dec
inc
aaa
ffreep
jae
mov
fidivr
jnp
fld
call
repz
sub
ins
push
mov
ror
hlt
(bad)
jp
dec
pop
push
mov
cli
jno
inc
ins
or
sbb
xchg
les
mov
std
inc
popa
xchg
or
rcr
xchg
mov
js
cmps
int
in
enter
cmp
jle
add
retf
cdq
xchg
call
ret
sub
imul
ret
dec
shl
out
jo
add
(bad)
loope
outs
jno
adc
inc
xlat
mov
push
ret
stc
std
test
add
jge
aaa
repnz
mov
outs
popf
rcl
sbb
cmps
or
push
sub
jbe
movs
adc
fs
gs
aam
enter
adc
inc
mov
pop
and
add
or
pop
mov
in
push
or
repz
add
push
add
xlat
cmp
xor
(bad)
in
fisttp
mov
aas
cmp
and
push
mov
cmp
or
mov
mov
lds
aad
mov
rol
ds
sbb
retf
fisubr
xchg
ror
pop
cmp
mov
test
movs
cmp
or
mov
or
push
push
lods
xor
adc
inc
mov
stc
sbb
out
mov
sbb
pop
loope
cmps
sub
in
cwde
iret
inc
rcpps
sub
in
mov
jmp
mov
std
jge
jbe
dec
push
test
and
push
push
push
rep
xchg
fcom
mov
test
adc
stos
dec
mov
inc
std
mov
outs
xor
jg
(bad)
push
mov
and
(bad)
pop
or
sub
rol
cwd
js
sub
outs
adc
add
cmp
mov
out
(bad)
lods
add
fsubp
jle
or
adc
pop
and
mov
lock
mov
xlat
outs
scas
pop
jns
div
rol
jb
sub
popa
int3
sub
push
pop
pop
adc
xor
loopne
fbld
int3
or
push
pop
mov
mov
or
xor
push
iret
outs
adc
pop
push
push
mov
fwait
out
jmp
pop
pop
lea
fwait
pop
pop
addr16
outs
xor
dec
shl
pop
adc
fimul
ins
test
jb
push
test
lods
jno
repz
(bad)
fwait
inc
mov
int3
and
cmps
aas
mov
std
dec
in
xor
add
mov
inc
pop
faddp
mov
shl
retf
movs
jae
movs
cmps
or
cld
arpl
(bad)
sub
(bad)
fisub
mov
cld
or
inc
je
(bad)
push
adc
stc
xor
mov
fs
push
inc
mov
adc
(bad)
repz
out
cwde
xor
loopne
mov
adc
lock
adc
call
mov
xchg
cmp
call
cmp
out
mov
sub
jns
into
mov
adc
scas
push
outs
addr16
movs
test
jb
popa
sbb
ficom
and
mov
pushf
fdivrp
mov
enter
pop
mov
(bad)
ficom
mov
xor
(bad)
aam
(bad)
lods
xor
mov
cmc
mov
adc
cmp
and
int
mov
inc
call
pop
arpl
in
mov
cwde
mov
add
sbb
fistp
jb
dec
les
push
pusha
lods
or
jb
std
test
mov
int
jmp
cmp
jo
inc
and
pusha
jecxz
mov
sub
loope
add
ins
ins
xchg
scas
add
pop
fld
mov
out
movs
clc
inc
push
xor
inc
and
test
(bad)
out
jle
stc
inc
pop
leave
adc
es
sbb
mov
pop
xchg
push
clc
arpl
mov
shl
mov
(bad)
js
inc
mov
mov
and
shl
cs
sub
add
push
mov
imul
fs
repz
jp
loopne
and
cmps
xchg
std
mov
movs
cmp
call
popf
cld
addr16
ss
adc
ret
lods
rol
loop
pop
movs
(bad)
inc
enter
pop
fdiv
js
aam
jge
adc
aas
je
scas
xor
out
jl
and
cs
mov
xor
rcl
icebp
lsl
mov
push
div
mov
mov
or
push
mov
lahf
lods
adc
jo
das
fidiv
div
mov
dec
ja
scas
enter
xchg
rol
mov
ins
jmp
xor
cmp
pop
leave
dec
iret
iret
les
inc
fisttp
mov
inc
sbb
leave
sub
xlat
popf
add
inc
push
mov
lahf
gs
add
movs
xlat
dec
retf
cmp
jne
test
or
cmp
out
pop
fcomip
add
in
xchg
pop
inc
mov
inc
fisttp
push
les
cs
stc
movs
sbb
cmp
pop
loop
std
hlt
sti
cli
mov
inc
jecxz
pop
jbe
pop
in
inc
into
pop
push
or
(bad)
mov
iret
dec
jp
sub
vpcmpgtd
fsub
cmove
enter
add
pop
push
(bad)
dec
mov
shr
or
mov
ss
jae
mov
inc
jmp
xchg
das
mov
in
lods
stos
jle
pop
pop
pop
(bad)
call
mov
cmc
enter
adc
jno
mov
imul
mov
push
pop
cmp
mov
and
jns
mov
inc
in
sbb
and
movs
push
into
repnz
fucomi
inc
loop
in
and
jl
xor
shl
into
mov
cs
pop
fisub
mov
fisubr
div
ja
and
repnz
xchg
adc
repz
loope
pop
je
add
aaa
jmp
repz
repnz
inc
pusha
lock
xchg
(bad)
or
xchg
sar
es
mov
addr16
cmc
ss
mov
mov
xchg
mov
xchg
stc
repz
adc
mov
ins
mov
loop
sbb
call
pop
out
xor
dec
xor
cmp
sub
sbb
push
mov
pusha
fimul
push
fcmovnb
add
cmp
out
arpl
(bad)
sti
scas
inc
shl
push
mov
scas
das
push
pop
js
mov
stos
aam
jge
jl
data16
in
push
gs
test
pop
mov
dec
int
lods
in
daa
loop
pop
inc
adc
sbb
inc
jecxz
xchg
jmp
inc
and
ss
iret
xchg
xor
retf
(bad)
imul
(bad)
jbe
loope
mov
or
inc
loopne
sub
scas
icebp
sbb
xor
adc
pop
je
fnstenv
daa
cmp
jbe
xchg
xchg
inc
ret
rcr
inc
mov
fs
stos
(bad)
repz
mov
je
jo
xchg
push
adc
lea
xchg
mul
jnp
mov
adc
popf
(bad)
movs
or
rcr
dec
frstor
sbb
fild
mov
cmp
pop
and
push
scas
add
cdq
or
or
push
mov
sub
(bad)
ss
sub
cmp
sub
stos
pop
jp
pop
aad
mov
push
xchg
mov
repz
mov
mov
mov
test
mov
sub
adc
pushf
mul
lods
fstp
icebp
push
loop
retf
pop
xchg
sbb
retf
adc
mov
jo
js
aaa
cmp
lahf
icebp
inc
xchg
mov
pushf
(bad)
outs
lea
pop
int
sbb
sbb
pushf
push
add
cwde
jbe
push
mov
sbb
inc
into
sub
sbb
aas
add
push
lahf
xchg
pop
xchg
xor
movs
inc
cmp
xor
sub
jo
jae
push
(bad)
gs
out
and
ins
push
daa
ss
sbb
push
push
out
lahf
xchg
cmp
add
inc
push
aam
daa
mov
js
jo
jae
push
bound
imul
(bad)
dec
and
adc
pusha
sbb
sar
je
js
inc
or
mov
imul
sbb
fadd
std
mov
movs
adc
data16
pusha
inc
cmp
ins
and
xlat
jnp
fist
fdiv
xor
pusha
jb
push
or
imul
or
sbb
push
cmc
js
and
(bad)
jle
push
ins
call
aad
xchg
and
xor
sub
(bad)
pop
retf
xchg
cmps
sar
bound
adc
push
imul
ja
icebp
(bad)
push
and
out
int
pop
inc
addr16
jp
lock
mov
sbb
aaa
test
dec
sub
mov
push
mov
jnp
mov
xchg
or
add
adc
movs
ror
ret
ret
xchg
mov
jmp
pop
dec
push
jp
add
aam
bound
mov
push
mov
cmc
sahf
mov
mov
push
je
cmp
pop
cs
lods
sahf
cwde
mov
test
ins
fwait
inc
mov
xchg
and
and
pop
cmc
sbb
out
or
addr16
leave
sbb
int
scas
mov
and
adc
xchg
gs
cmps
or
out
movmskps
out
jo
pop
ret
sbb
stos
inc
stos
mov
sar
or
push
xchg
dec
sbb
aas
or
cmc
sub
pop
mov
call
pop
int
lods
mov
mov
aaa
leave
aaa
in
in
mov
cmp
add
dec
dec
iret
mov
fnstsw
jne
faddp
les
ins
jb
push
loope
and
pushf
xor
(bad)
fdiv
jmp
jns
sub
push
rcl
jmp
jp
test
xor
add
out
pop
xchg
call
popf
pop
or
xor
fcomp
pop
js
div
lock
repnz
and
mov
mov
adc
pop
sbb
fsub
clc
xchg
mov
and
jle
loope
imul
mov
int3
and
dec
sub
je
into
ss
jae
movs
mov
ins
pop
mov
sub
ror
ds
dec
sar
and
mov
out
mov
(bad)
cmps
loopne
inc
mov
adc
push
xor
cli
jg
ss
sar
sbb
dec
lods
jmp
sbb
sub
sub
lods
adc
aam
hlt
retf
mov
or
test
int3
imul
push
fucomi
xchg
cli
(bad)
cs
pop
das
nop
cli
mov
inc
je
leave
outs
mov
mov
pushf
inc
clc
mov
mov
add
sub
xor
mov
out
or
jp
and
pop
mov
jne
dec
sbb
jbe
rcr
dec
repz
cmp
sbb
jno
xchg
mov
xor
bound
dec
sub
and
outs
cmp
out
jns
add
jo
and
pop
push
shr
jmp
aam
cmp
xor
push
xlat
call
hlt
dec
push
cdq
push
sbb
fild
and
cmp
(bad)
js
mov
inc
dec
dec
mov
cwde
pop
(bad)
movs
jbe
in
jnp
sar
and
es
cmp
stos
push
cwde
mov
fisubr
pop
rcl
inc
es
dec
jbe
fsubr
push
push
push
xor
xor
ins
pop
xchg
iret
test
rcr
push
pop
cmp
pop
pop
push
stos
add
push
xor
rcl
lahf
mov
(bad)
popf
scas
call
push
and
je
push
pop
test
outs
loope
and
out
inc
sub
jae
in
adc
mov
xor
adc
jae
mov
mov
jp
out
arpl
fistp
dec
mov
(bad)
xchg
xor
mov
mov
adc
push
std
push
aam
cdq
out
jmp
pop
sub
mov
call
add
mov
scas
mov
hlt
or
jg
jl
fmul
out
aad
outs
xchg
sbb
push
stc
cwde
xor
inc
scas
push
xor
xchg
popf
jae
mov
sbb
(bad)
adc
xchg
pop
xor
jno
lds
dec
jp
inc
or
sbb
and
mov
or
dec
int3
or
in
jmp
fwait
pop
test
push
pop
test
jne
or
stos
sbb
fistp
mov
mov
sub
mov
jle
adc
fdivp
xchg
and
cmp
pop
xor
rol
add
aad
cmps
repz
cmp
idiv
mov
mov
dec
repnz
(bad)
fwait
dec
push
xchg
fwait
sbb
popa
cmps
sahf
mov
sbb
mov
movs
leave
aam
dec
es
pop
jle
cmc
in
shl
retf
sti
hlt
jns
and
in
xchg
ins
and
ja
cmc
push
mov
in
push
cli
ja
frstor
adc
xchg
inc
mov
les
test
out
xchg
cmp
jge
rcr
out
dec
retf
loope
retf
test
movs
(bad)
imul
pop
push
dec
sbb
mov
les
add
cmp
test
sbb
and
pop
or
cwde
xchg
jmp
mov
add
in
dec
jo
xchg
(bad)
mov
lea
adc
push
cmp
pop
mov
and
ss
imul
call
sar
fidivr
xchg
xchg
jge
xchg
test
pop
popa
cmc
jg
jae
out
pop
sar
or
test
movs
ret
aad
outs
pop
js
sub
clc
dec
popf
sar
cmp
es
leave
(bad)
mov
jg
icebp
push
cli
cmp
in
call
pop
sbb
dec
jg
scas
out
mov
stc
hlt
fisub
dec
push
lahf
xor
lock
sbb
jo
ins
imul
or
xchg
mov
xchg
xor
mov
(bad)
stc
push
push
cwde
test
inc
cs
pop
jne
mov
dec
cmps
rcl
inc
movs
mov
call
sar
ds
enter
mov
dec
pop
mov
jae
aad
xor
push
inc
lea
inc
pop
out
push
lea
fwait
aad
fmul
add
les
xlat
inc
aam
jmp
mov
ins
sar
pop
arpl
add
cmp
fdivr
mov
and
(bad)
enter
loop
cwde
cmp
out
js
xchg
aad
sbb
push
int
push
pop
cmp
mov
pop
jno
mov
xchg
sub
sub
inc
test
pop
push
pop
call
dec
rcr
fstp
sub
mov
mov
mov
aad
loopne
push
imul
jo
iret
test
cs
jnp
cmp
xchg
mov
stos
mov
je
and
movs
or
(bad)
lods
mov
cwde
fisttp
and
mov
pop
in
mov
jle
vpsrlw
call
sub
ss
mov
mov
mov
sub
push
(bad)
repz
jne
xlat
mov
adc
call
nop
aam
rol
popa
mov
outs
mov
xlat
xchg
jo
mov
jl
xchg
lea
icebp
and
mov
sahf
and
push
cdq
clc
je
(bad)
aaa
fist
arpl
stos
lahf
sub
push
lds
or
aaa
test
test
inc
jg
cdq
imul
push
adc
sbb
jle
jge
jnp
and
retf
pop
mov
lods
repz
test
dec
pushf
mov
lahf
mov
lahf
push
mov
int
cli
cld
mov
jns
push
push
push
dec
xchg
xor
imul
and
xchg
out
jb
sbb
jmp
fnstsw
inc
xchg
xor
mov
xor
int3
sbb
sahf
adc
sti
and
ret
js
jae
shl
repnz
dec
dec
and
das
pop
jb
add
and
aas
mov
and
adc
sub
xchg
hlt
push
fs
add
in
outs
in
mov
(bad)
ror
pop
ficomp
and
xor
movs
xchg
les
inc
popa
shl
and
test
dec
stc
cmps
cmp
je
or
push
ret
fisubr
retf
(bad)
icebp
sub
or
jmp
jmp
lock
add
(bad)
mov
and
xor
jg
(bad)
and
sbb
cmp
pop
clc
imul
sub
jns
test
jg
stos
push
and
std
ins
clc
pop
in
mov
adc
sbb
fisubr
sti
xor
xchg
xchg
cmp
jp
or
mov
pop
push
pop
pop
add
retf
push
out
and
in
(bad)
push
mov
jle
stos
ret
out
mov
sub
icebp
add
enter
int
daa
jno
pushf
xor
add
imul
push
jl
sahf
sub
pop
(bad)
cmp
inc
cmc
loop
data16
mov
lock
iret
dec
push
sub
inc
mov
sbb
(bad)
fs
xchg
mov
mov
imul
cld
jmp
stos
add
cmp
sbb
add
repz
mov
and
mov
ja
pop
ja
repz
lock
cmp
test
mov
jbe
sub
repz
sub
loope
push
jl
sti
(bad)
sbb
ins
push
movs
mov
cmc
std
jmp
mov
xchg
pusha
popa
mov
adc
and
mov
cmp
inc
fs
jae
daa
ret
cmp
push
lahf
jecxz
add
ins
lods
adc
pop
imul
je
(bad)
stc
ret
ror
or
pop
add
repz
ins
(bad)
pop
retf
test
mov
add
pop
imul
push
xor
push
neg
mov
dec
repz
fs
cmp
enter
shl
mov
and
xchg
xchg
add
cmp
call
sahf
mov
xlat
xchg
nop
hlt
loopne
push
inc
fisubr
dec
retf
xor
lea
lahf
sbb
cmp
arpl
mov
and
mov
xor
movs
aas
fisub
push
xchg
and
pop
popf
inc
and
xchg
ja
xchg
jmp
dec
xor
xchg
sub
mov
or
cld
aad
mov
sahf
(bad)
push
or
push
aad
into
or
inc
rcl
loopne
fsub
jae
in
dec
mov
out
jg
cdq
jle
jb
sub
adc
(bad)
sbb
nop
mov
xchg
dec
mov
mov
(bad)
inc
repnz
jle
(bad)
add
in
ds
pop
repz
xor
lea
popa
xchg
jge
dec
pop
lock
fsubr
aas
ins
xor
and
sbb
jmp
ror
and
dec
push
inc
add
iret
mov
mov
dec
(bad)
call
xor
call
jnp
stos
sub
ins
test
xchg
pop
je
cmp
(bad)
cmc
push
mov
push
adc
lahf
and
mov
sbb
mov
std
sbb
sbb
mov
sbb
lock
ret
sub
addr16
sbb
pop
ficom
lds
(bad)
adc
mov
arpl
jno
xor
mov
out
inc
out
dec
out
cmp
cs
mov
add
mov
pop
rcr
out
cmps
dec
(bad)
icebp
fucomip
push
or
xchg
outs
loop
push
iret
lock
stc
lahf
icebp
sbb
push
gs
mov
or
lods
mov
scas
sub
push
sahf
or
jns
sbb
fild
push
push
cwde
or
(bad)
pop
sub
push
les
stos
jl
add
jp
fstp
xchg
inc
rcr
dec
out
add
or
rcr
push
js
mov
mov
test
jmp
push
mov
sar
(bad)
inc
out
outs
jg
jae
sti
xchg
popa
dec
inc
(bad)
jo
mov
pop
std
dec
ins
ss
xchg
jbe
inc
pop
loope
iret
adc
adc
sti
xchg
mov
lea
push
cmps
push
push
popa
mov
jae
push
push
xchg
fisub
mov
test
call
sub
cmp
push
pop
cli
cs
mov
rol
xchg
in
dec
enter
(bad)
fiadd
mov
adc
adc
dec
push
dec
jmp
stc
fistp
into
test
mov
pop
iret
pusha
lea
jg
cdq
or
mov
repz
jae
mov
mov
mov
xlat
cdq
jg
inc
and
xchg
adc
lods
fcmovnu
adc
xchg
popa
xor
mov
push
cmps
jp
call
and
out
adc
push
test
jge
mov
imul
xchg
mov
sbb
push
sub
fst
out
test
outs
adc
push
cmp
or
aam
mov
xor
pop
repnz
test
stos
pop
mov
sbb
inc
jle
adc
xlat
lfs
push
loop
popf
retf
outs
dec
es
jle
add
outs
and
mov
fimul
mov
idiv
push
and
loope
out
in
gs
push
inc
js
inc
pop
(bad)
push
xor
aaa
dec
or
inc
iret
inc
push
cmp
sub
sub
lods
div
ins
pop
retf
dec
cld
adc
scas
push
jmp
movs
aaa
fist
icebp
xchg
mov
retf
cdq
mov
adc
push
sub
les
std
leave
adc
sbb
add
ret
or
ss
popf
adc
adc
or
mov
fsub
mov
dec
nop
dec
add
xor
jno
mov
aad
out
cwde
arpl
ficom
sub
mov
sub
add
aam
sbb
punpckhdq
call
ss
cwde
mov
pushf
lods
out
neg
xor
dec
sbb
stos
add
jmp
jecxz
sub
call
mov
sub
lds
clc
ss
push
fcomip
shl
hlt
ret
out
jecxz
mov
nop
cld
jnp
int
inc
sub
stc
das
dec
adc
mov
adc
sub
imul
push
cmp
push
push
fidiv
std
add
out
mov
sub
and
sub
test
(bad)
cli
xchg
mov
add
and
add
sbb
repz
retf
loope
push
cld
cmp
mov
or
fistp
mov
mov
scas
test
or
pop
leave
dec
cmp
inc
pushf
lea
jno
push
aas
sti
stos
test
inc
js
lds
ret
fs
push
call
in
scas
in
adc
fcom
test
pop
std
scas
cmp
xchg
ss
and
pop
in
xchg
sbb
out
xor
iret
push
fst
into
push
mov
leave
(bad)
cmp
loope
and
test
xor
sub
pop
sub
es
les
xor
sbb
jns
jl
in
mov
dec
sbb
jne
inc
sub
les
push
mov
out
(bad)
ficomp
in
add
aam
out
adc
std
mov
(bad)
mov
sub
add
test
mov
mov
out
fwait
xchg
inc
xor
or
sbb
test
inc
push
cmps
dec
int3
mov
adc
mov
push
aas
fist
adc
not
ins
test
je
inc
stc
(bad)
jmp
xchg
loope
jg
push
cdq
ss
sbb
dec
xchg
out
xchg
mov
mov
pusha
pushf
call
and
mov
adc
cmp
in
ds
inc
rol
stos
jb
mov
mov
cmp
idiv
loopne
fcom
das
xchg
xor
jae
jne
test
ja
test
sbb
loope
adc
push
add
and
or
aad
out
inc
out
imul
and
loopne
pop
mov
xor
js
jle
sub
sahf
mov
hlt
shl
dec
pop
push
sbb
mov
jnp
ret
jmp
or
sbb
test
cmps
aas
fucom
add
jl
ds
cmp
rcr
les
jb
jb
mov
add
ret
in
cmps
dec
call
loope
pop
pop
jne
bound
cmp
pop
sar
lock
mov
add
popa
aam
sbb
int3
ins
and
ret
cmp
sbb
lea
xlat
sub
icebp
mov
adc
in
inc
dec
xor
out
sub
jne
sbb
jns
pop
or
test
in
cmp
xor
and
and
adc
iret
sbb
xor
sbb
xor
nop
sbb
js
test
ins
sbb
out
add
fcmovnu
adc
push
stos
and
(bad)
jne
call
push
add
cdq
pop
into
dec
iret
repz
push
xchg
addr16
and
rcr
stos
inc
push
dec
shl
mov
inc
add
out
and
push
and
stc
cmp
push
cld
or
mov
sub
inc
rol
jnp
jnp
loop
unpcklps
xchg
fadd
cmp
pop
add
mov
icebp
push
mov
bnd
dec
add
rdtsc
adc
jmp
sbb
mov
dec
xchg
cli
push
push
test
xor
xor
inc
cmp
or
and
lahf
mov
sub
bnd
cmp
jmp
xor
(bad)
retf
lods
ret
dec
movs
adc
jmp
cwde
add
sbb
lea
out
js
icebp
mov
jmp
and
std
movd
iret
inc
js
jnp
cmps
jle
sti
pop
mov
loop
sub
out
xchg
repz
push
out
mov
out
enter
mov
es
sbb
fcomip
aad
jno
cmps
jl
sbb
pushf
mov
dec
add
push
add
push
xor
mov
movs
int3
sbb
push
sub
push
sar
std
sub
stc
sub
fmul
push
cwde
pop
es
dec
daa
movs
std
mov
(bad)
outs
in
push
mov
lods
add
cmp
push
mov
call
(bad)
push
jecxz
arpl
repz
aad
xor
xor
fs
(bad)
out
cmp
into
fidiv
lock
lods
scas
mov
and
retf
(bad)
shl
fidiv
es
into
pop
std
and
inc
mov
(bad)
sbb
push
out
pop
leave
xchg
aad
jle
xrelease
mov
aad
jmp
and
jns
pop
or
cs
and
push
ss
arpl
retf
(bad)
stos
mov
xchg
daa
retf
mov
call
or
neg
imul
nop
ror
mov
push
or
idiv
jo
xchg
ret
ins
addr16
bnd
outs
mov
push
cmp
jo
mov
and
nop
lock
dec
stc
inc
(bad)
stos
fs
jl
add
bnd
xor
out
xor
xchg
popf
push
adc
add
scas
fwait
sbb
aad
loop
cmp
hlt
in
sub
cmp
fmul
mov
int
pop
or
fwait
mov
sub
lea
add
and
mov
adc
fcomp
inc
imul
add
movs
dec
outs
add
test
or
iret
dec
outs
int
stos
in
add
mov
pusha
mov
ins
cmp
movs
jg
and
out
jecxz
and
dec
int3
push
dec
mov
fsub
ret
out
jg
addr16
cld
out
inc
xor
xchg
xchg
faddp
sub
jmp
mov
outs
mov
add
stos
jp
stos
adc
xor
lock
aas
cmc
sbb
(bad)
jns
mov
stos
data16
pop
push
inc
lahf
js
fs
(bad)
addr16
pop
(bad)
cmp
ror
mov
cli
nop
js
cmps
adc
pushf
retf
enter
mov
dec
dec
stos
mov
scas
loope
retf
lods
scas
cdq
mov
add
adc
fcmovb
(bad)
dec
jge
xchg
inc
aam
push
leave
in
out
lahf
retf
jbe
adc
push
mov
sbb
or
nop
(bad)
lahf
mov
sahf
loopne
sti
(bad)
lods
pop
xchg
mov
out
cmp
push
push
push
jbe
ins
jmp
mov
sahf
es
je
sub
jns
je
hlt
sub
loope
xchg
and
mov
xchg
data16
shl
mov
jg
movs
imul
call
lods
jno
and
test
mov
and
push
out
add
cld
cmp
and
in
outs
lahf
inc
jb
xlat
jp
movs
test
or
fbstp
es
cmps
sub
inc
jp
stc
icebp
mov
xchg
sub
mov
cli
fbstp
loop
in
dec
push
es
cmp
xchg
(bad)
push
push
fimul
xchg
ret
les
mov
xchg
push
pop
adc
loop
scas
retf
mov
push
or
dec
fadd
inc
xor
add
(bad)
icebp
(bad)
hlt
das
imul
daa
lods
mov
xchg
sub
mul
aam
mov
and
aad
cmp
mov
push
les
xchg
popa
sbb
icebp
mov
movs
ror
dec
pop
inc
and
and
sbb
mov
andps
popa
adc
push
and
mov
xor
fsubr
ss
or
push
into
std
je
push
pop
mov
mov
jo
xor
(bad)
int
pop
pop
gs
sub
ret
ss
adc
nop
addr16
retf
mov
fst
dec
std
sbb
fild
pop
inc
into
(bad)
jg
and
push
xor
xchg
scas
mov
mov
pavgw
addr16
or
ja
lea
out
inc
cwde
and
sub
rcl
mov
dec
iret
ins
mov
je
push
dec
test
cmps
ins
or
adc
adc
js
sbb
push
push
sub
cmp
arpl
(bad)
xlat
inc
test
inc
rcl
les
inc
sbb
pop
sub
xchg
nop
pop
xchg
out
jmp
xor
ins
pop
mov
push
clc
mov
dec
int3
push
jmp
mov
fidiv
call
mov
loop
mov
sbb
adc
cmp
mov
je
push
out
fild
sub
mov
retf
jmp
jmp
aad
lods
xchg
call
mov
pop
test
push
jns
mov
es
xor
loop
mov
xlat
stos
sbb
pop
retf
mov
cli
dec
popf
fs
dec
xchg
ret
loopne
(bad)
sti
cs
je
mov
dec
adc
out
sub
out
fidivr
(bad)
or
stos
adc
in
xor
adc
call
cmps
movs
xor
mov
push
cmp
aaa
inc
pop
pop
into
or
daa
mov
add
out
mov
push
jne
cmp
into
push
cwde
scas
retf
or
hlt
xchg
inc
jns
ds
lods
das
add
jmp
cli
sbb
dec
ins
add
push
xlat
test
popf
arpl
mul
in
push
out
mov
dec
stos
dec
jl
not
xor
out
std
mov
jb
sbb
pop
hlt
fst
and
pop
mov
mov
shl
mov
shl
mov
out
sahf
enter
cs
jnp
dec
daa
jmp
hlt
stc
sbb
gs
sub
push
movs
(bad)
mov
aad
cld
pop
gs
cs
jle
lahf
test
pop
push
mov
add
or
adc
mov
mov
jmp
mov
xchg
fld
mov
cmps
sbb
dec
aam
test
and
push
call
or
pop
dec
scas
div
and
inc
aad
add
movs
push
push
sub
pushf
sbb
mov
cmp
retf
pop
and
std
fs
mov
mov
loopne
push
into
sbb
push
pop
ins
rcl
hlt
(bad)
movs
jecxz
cs
inc
fldcw
mov
pop
test
mov
xchg
movs
popa
jb
in
stc
jae
push
mov
in
sbb
xchg
mov
lock
cs
inc
and
or
stos
mov
stos
sub
mov
int3
popa
nop
or
sbb
sub
jb
jo
fnstenv
movhps
fist
jo
ins
adc
jnp
stc
ret
sar
dec
lds
push
adc
adc
in
nop
pop
in
add
lahf
sar
arpl
ins
sbb
aas
pushf
gs
jns
fld
loope
arpl
mov
xor
clc
lahf
lods
cmps
cwde
ja
mov
lods
mov
adc
rol
sub
fstp
stc
pushf
mov
(bad)
stc
(bad)
bnd
cli
outs
jp
aaa
sti
push
imul
and
lock
test
std
adc
mov
imul
and
stos
js
push
aad
push
jmp
add
xor
hlt
lods
push
neg
dec
jae
sub
das
sahf
int3
push
in
femms
or
inc
jle
stos
sbb
xchg
pop
jmp
imul
add
inc
jl
sbb
cmp
inc
adc
in
mov
add
jl
(bad)
stc
loopne
sbb
in
and
lock
xor
push
inc
int
imul
fsubr
or
add
in
or
mov
imul
mov
lods
clc
int3
bound
out
push
push
mov
mov
(bad)
bound
inc
in
popf
bound
rol
jg
push
scas
push
lods
jmp
ret
fidivr
loopne
pusha
inc
fdivrp
pusha
fld
clc
xchg
sbb
adc
or
(bad)
dec
movs
push
sub
dec
dec
fwait
test
add
imul
pop
ret
jae
cld
inc
sbb
jb
adc
lods
jno
addr16
in
cmp
bound
add
mov
(bad)
dec
jl
lods
jmp
gs
jge
fistp
fisub
push
rol
adc
retf
sar
jl
call
inc
pop
jecxz
test
sbb
dec
scas
std
cmc
retf
fs
and
mov
leave
out
mov
ss
sti
adc
icebp
push
inc
into
cmp
xlat
sbb
jne
pop
add
test
aad
inc
and
mov
push
dec
es
scas
repz
retf
cli
nop
rcl
sbb
mov
mov
nop
ror
jge
sub
push
xor
out
hlt
and
shl
push
(bad)
adc
outs
push
pop
push
std
shl
sub
in
sub
xchg
sbb
jmp
jp
mov
jb
mov
sbb
sub
adc
dec
adc
push
popa
fwait
xlat
push
es
mov
push
frstor
sbb
sub
rol
add
sub
in
add
and
adc
js
out
ja
pop
dec
and
inc
mov
mov
jo
fsub
mov
jae
out
add
fs
jo
xlat
fmul
rcl
imul
inc
loope
outs
pop
test
arpl
test
push
and
add
aam
or
add
loopne
repz
jno
rol
xchg
push
int
test
pop
jne
clc
loopne
mov
jp
push
jae
cmps
inc
jmp
add
mov
mov
popf
and
mov
mov
popf
jo
mov
xchg
lock
mov
mov
xchg
xchg
call
cmps
or
cmp
(bad)
(bad)
(bad)
call
xchg
or
xchg
push
push
cmp
push
mov
call
clc
shl
cmp
test
push
mov
pop
hlt
mov
sub
pop
jnp
push
repnz
aaa
movs
and
loopne
out
and
xchg
dec
std
ja
mov
sub
inc
idiv
mov
cmp
test
pop
sub
push
sub
sub
and
out
jo
inc
pop
mov
mov
xor
imul
jae
mov
add
fidivr
pushf
lods
mov
cmps
shl
ret
repz
sahf
rcl
lahf
or
add
loope
jno
in
mov
pusha
cmp
mov
mov
mov
mov
aam
cwde
lods
ja
clc
xor
test
mul
int
mov
mov
lds
sub
sub
xor
mov
arpl
cmp
pop
inc
in
or
jns
mov
pop
pop
or
and
js
loop
scas
mov
mov
add
aad
repz
mov
jge
pop
or
ret
fst
push
ins
scas
jmp
in
out
cmps
(bad)
push
das
mov
clc
arpl
mov
sbb
jb
or
ss
in
push
and
(bad)
sub
pop
pop
shl
rol
das
jmp
push
rcr
jmp
retf
jle
xchg
mov
or
shl
add
cmp
into
int
pop
sbb
loopne
gs
out
or
cmp
and
iret
(bad)
sub
xor
hlt
inc
or
adc
mov
scas
(bad)
ss
xchg
jecxz
pop
in
sar
jnp
pop
out
jne
xor
xchg
fldcw
mov
xchg
mov
fld
fmul
stc
fdiv
jnp
lahf
sbb
xor
out
cmp
mov
dec
gs
xchg
xor
ja
ss
rol
out
ja
add
ins
ret
stc
pop
jle
sbb
fcmovnb
mov
and
cmp
lahf
inc
mov
adc
jmp
stos
or
push
xchg
cmps
add
xchg
(bad)
adc
cdq
jge
dec
xor
repz
or
push
shr
(bad)
jb
(bad)
mov
(bad)
dec
in
pop
(bad)
jmp
jmp
hlt
sub
std
clc
sti
fdiv
sbb
jge
sub
and
mov
push
(bad)
fdiv
(bad)
cmp
push
into
cmp
lock
xor
test
push
lods
ret
lods
jge
cmp
jns
fcmovnb
jg
sbb
mov
sahf
mov
or
std
jb
sbb
or
jo
or
test
xor
xlat
mov
cmp
sti
std
out
psraw
(bad)
pop
jns
jnp
xchg
jp
dec
xor
adc
sub
cmp
and
fwait
data16
(bad)
les
movs
lahf
fadd
ins
mov
lods
push
sbb
mov
add
imul
pop
xor
ja
add
sbb
dec
out
cs
and
xor
loope
pop
dec
es
enter
jb
jns
fstp
mov
push
jecxz
sbb
adc
and
shl
jbe
adc
cdq
adc
xor
mov
xchg
outs
ds
mov
(bad)
mov
mov
aaa
pop
jno
dec
jp
xchg
mov
dec
cdq
add
icebp
and
ins
cdq
sti
mov
pop
enter
sbb
inc
daa
inc
out
cmp
mov
jle
adc
inc
xchg
popf
and
mov
dec
xchg
repnz
in
repz
in
pop
lods
scas
lock
ins
imul
scas
loop
test
outs
cmp
cs
pop
dec
sbb
add
into
iret
shl
fistp
jle
mov
pushf
daa
mov
push
imul
arpl
mov
in
or
bound
push
mov
push
mov
mov
cmc
ins
pop
shr
mov
fnstsw
dec
cli
jbe
imul
rcl
push
(bad)
or
dec
or
pop
fild
jne
push
add
leave
sbb
clc
push
mul
out
neg
arpl
cwde
push
stos
cmp
lods
rcr
xchg
test
inc
sti
shl
xor
sub
in
dec
mov
mov
popf
push
mov
je
lods
xchg
ja
fwait
aam
mov
xor
outs
scas
mov
mov
call
not
mov
dec
jmp
cmp
hlt
popa
ins
fsubp
nop
jbe
adc
sub
sbb
push
jl
sub
adc
inc
or
sub
pop
shr
test
lock
fisttp
dec
js
mov
clc
mov
test
(bad)
fild
fisttp
fs
pop
ret
xlat
lock
mov
pop
cmp
push
mov
movs
jns
retf
nop
mov
mov
inc
and
aaa
sub
les
arpl
mov
ret
fxch
mov
leave
popf
mov
or
push
out
outs
pushf
fcomp
inc
dec
shl
add
cmp
pop
popa
popa
sbb
pop
call
addr16
mov
adc
dec
inc
inc
push
jae
popa
psllq
(bad)
sub
xor
adc
cmp
sub
mov
mov
jg
cwde
xor
push
and
sub
loope
out
jae
ret
cli
popf
stc
inc
sar
hlt
adc
ds
sti
retf
inc
sub
sahf
retf
pop
nop
popa
(bad)
xlat
mov
mov
and
lock
sbb
mov
aaa
(bad)
leave
into
addr16
mov
xchg
enter
rep
outs
xchg
mov
push
ror
cmp
pop
jne
jle
jecxz
sbb
push
mov
push
mov
(bad)
(bad)
lds
push
sub
mov
mov
pop
xor
test
sub
repz
push
fwait
(bad)
xor
mov
ror
fwait
mov
push
sub
in
adc
nop
hlt
stos
les
sahf
(bad)
pop
fiadd
push
jno
ja
jecxz
jbe
dec
and
cmp
(bad)
sub
inc
mov
(bad)
loope
hlt
loop
xor
jmp
push
adc
jg
inc
adc
add
push
(bad)
cmps
adc
push
leave
test
outs
lea
xchg
mov
ds
rcr
xor
addr16
pop
add
cmc
enter
jnp
and
test
fs
and
out
repz
enter
lods
inc
sub
adc
aam
scas
fdivrp
inc
fwait
inc
jno
xchg
add
ret
fild
retf
add
mov
mov
ins
mov
dec
arpl
lock
lea
push
ficom
push
mov
int3
dec
hlt
inc
inc
ins
xchg
and
sub
jmp
iret
add
leave
jl
stos
push
adc
xor
shl
clc
rol
pop
int3
push
das
mov
xchg
fxtract
ja
rcl
(bad)
cmp
test
jecxz
or
jmp
and
jno
in
popf
dec
inc
inc
push
imul
or
or
xchg
ja
call
sub
stos
push
fbld
imul
cmp
fld
(bad)
sub
and
neg
ins
mov
clc
retf
(bad)
jno
ror
mov
inc
mov
imul
das
pop
mov
sbb
push
push
sub
loope
cli
fs
lahf
std
push
bound
and
jl
repz
test
sub
adc
or
and
xchg
sbb
call
mov
jmp
fild
push
scas
hlt
inc
rcr
add
in
adc
xor
pop
movs
mov
cmp
push
popa
loopne
ins
in
das
pop
rcl
in
sub
ins
sbb
lods
xor
push
icebp
mov
add
inc
jae
mov
xor
mov
pop
ret
ds
xor
mov
mov
push
lods
repnz
or
dec
ins
dec
arpl
gs
sbb
js
movs
test
(bad)
shl
call
pop
jb
pop
inc
sbb
(bad)
cdq
jle
aas
sub
inc
imul
in
loop
fisubr
cs
leave
xchg
pop
mov
push
popa
xchg
pop
or
call
(bad)
stc
(bad)
dec
push
dec
mov
inc
sbb
pop
cmp
and
push
ins
mov
adc
mov
ins
jae
mov
xchg
pop
nop
xor
pop
mov
pop
push
jecxz
xchg
retf
test
fdivrp
mov
cmp
xor
ins
lods
xor
mov
sbb
jmp
test
stc
inc
jns
shl
jle
mov
jmp
adc
adc
mov
push
cmps
cld
dec
aaa
ja
retf
jns
inc
mov
adc
mov
sub
mov
push
xchg
cdq
add
push
sbb
out
out
cmp
lods
aaa
gs
pop
lds
leavew
mov
or
loop
jnp
(bad)
popa
mov
lock
mov
std
scas
dec
jae
js
xchg
fld
mov
loope
pop
sbb
fbld
scas
popa
mov
sub
jo
(bad)
arpl
xor
pop
jp
mov
aas
jo
add
sbb
test
gs
neg
mov
mov
dec
fwait
mov
sub
mov
clc
and
aaa
mov
stos
test
(bad)
test
loopne
dec
pop
cmp
imul
stos
push
xchg
mov
inc
and
loop
push
inc
scas
mov
enter
outs
scas
out
in
out
shl
gs
cld
fdiv
aam
push
gs
(bad)
fcmovnbe
loopne
xor
add
push
test
pushf
scas
out
out
jecxz
add
xor
mov
mov
and
jno
sub
int3
jo
adc
loop
cmp
call
adc
mov
adc
xlat
jo
mov
mov
mov
dec
adc
mov
fild
xchg
dec
jecxz
add
repnz
fild
push
mov
jg
(bad)
fstp
dec
sub
adc
sbb
and
fstp
jno
xchg
push
(bad)
sbb
jecxz
fwait
ins
rcl
inc
ja
aas
push
xchg
adc
aaa
setbe
lock
cmc
add
sub
jne
xlat
lds
jmp
pusha
cmp
daa
loopne
jns
(bad)
sub
fisttp
retf
push
out
cmp
stc
lea
and
cdq
or
mov
scas
clc
add
outs
sub
out
fisttp
adc
jnp
out
jle
sar
cmp
fsub
test
das
cmps
mov
je
push
loopne
imul
and
test
fidiv
add
sub
dec
(bad)
push
shl
enter
cmp
jb
in
fst
adc
test
mov
ins
push
and
enter
jae
sub
adc
xchg
aaa
cmc
jnp
inc
clc
add
mov
cmp
sti
pop
rcl
mov
inc
scas
call
in
jge
in
sbb
jle
jnp
xchg
push
js
sub
(bad)
xchg
arpl
fimul
fmul
cdq
mov
xchg
pop
stos
mov
ins
fs
adc
movs
xchg
outs
xchg
movs
in
mov
jns
xchg
test
pop
fcmovnbe
and
jecxz
aad
repnz
es
sub
gs
lahf
bound
mov
push
rol
call
addr16
fild
ins
bound
sbb
bound
or
je
mov
dec
and
sbb
lods
(bad)
ficomp
call
loop
fs
adc
cdq
mov
ret
mov
jg
xchg
sti
xor
in
fmul
out
xlat
fist
sub
(bad)
push
fild
cmp
fadd
add
push
mov
ds
dec
xchg
add
into
ffreep
jge
dec
pop
add
xchg
mov
sub
inc
mov
mov
pop
rcl
test
push
inc
retf
mov
fidivr
adc
cdq
(bad)
ja
outs
js
aas
icebp
dec
mov
or
push
inc
add
inc
inc
out
or
mov
arpl
std
mov
int3
jg
ret
push
cli
in
and
cmps
gs
(bad)
lahf
jmp
les
pop
and
loop
fsub
loop
sub
sub
or
loop
stc
cmc
nop
adc
pop
pop
sub
jnp
ja
mov
jne
clc
sub
out
mov
(bad)
dec
rcl
add
adc
mov
sub
in
data16
call
mov
jmp
fcom
sbb
pop
dec
(bad)
mov
mov
mov
dec
imul
xchg
in
aas
add
ss
scas
das
jle
aas
lahf
mov
cmp
push
test
imul
xor
(bad)
adc
je
sbb
adc
jbe
shl
sbb
mov
xchg
int3
cmp
inc
je
jg
jl
je
push
cmps
add
add
retf
and
adc
and
mov
push
push
arpl
mov
scas
sbb
dec
retf
inc
addr16
xchg
sbb
push
sbb
xchg
fwait
lahf
dec
aad
ins
sbb
test
dec
das
cli
cmp
adc
sub
shr
outs
movs
sbb
mov
mov
add
mov
outs
cld
cmp
jmp
mov
mov
(bad)
cmp
push
jg
dec
add
fiadd
into
stos
mov
inc
jo
fadd
pop
ds
out
dec
jnp
jmp
rcl
jmp
in
jmp
iret
xor
mov
into
retf
gs
cmps
push
int3
(bad)
jno
and
ins
popa
lods
inc
sub
imul
fcomp
mov
pop
mov
popa
pop
xlat
mov
movs
sub
mov
out
nop
ret
(bad)
jmp
das
inc
mov
adc
dec
add
adc
stos
pop
lods
adc
in
xor
add
lods
or
or
push
cmp
dec
sub
cmp
sbb
sub
and
push
fiadd
out
lock
push
pop
ret
ficomp
xor
int3
adc
adc
sub
push
cli
xchg
mov
dec
rol
fs
fwait
xor
dec
jb
in
ret
icebp
shl
mov
sub
test
and
adc
adc
add
stos
aaa
push
outs
mov
push
std
loope
sub
gs
jl
xor
(bad)
fwait
neg
repnz
leave
rcl
aas
xor
add
adc
pop
fadd
or
shr
test
jge
in
sbb
push
cld
adc
xchg
test
push
scas
ss
inc
pop
xchg
cmp
daa
(bad)
dec
(bad)
iret
inc
loop
scas
fistp
jno
adc
sbb
mov
rol
in
cmp
mov
inc
in
inc
add
in
or
cmp
xor
mov
or
test
push
push
mov
push
in
mov
nop
mov
sbb
out
in
and
inc
fsub
adc
inc
cwde
mov
sahf
jno
jmp
dec
push
fldpi
repz
neg
clc
outs
mov
arpl
xchg
inc
mov
dec
retf
pop
test
sbb
xor
pop
mov
cmp
ss
out
xlat
ins
sub
imul
sbb
js
fild
or
push
xchg
cdq
xor
jmp
cmps
cld
dec
movs
dec
xor
in
mov
dec
push
ss
inc
fdiv
lahf
dec
out
xor
sti
jge
and
mov
cmp
xor
add
neg
or
pushf
jno
mov
xlat
jmp
mov
mov
outs
gs
call
iret
fld1
repnz
push
shl
fisttp
inc
sbb
movs
push
mov
push
sti
xor
adc
cmp
xor
std
(bad)
dec
or
sahf
sub
popf
dec
jae
mov
push
daa
leave
arpl
inc
shr
jns
test
jns
popa
cwde
ret
popa
and
push
push
jb
scas
imul
ja
adc
adc
mov
das
jmp
adc
sbb
or
push
(bad)
mov
sub
dec
fstp
jnp
mov
xchg
cld
ficom
mov
(bad)
mov
xchg
xchg
cmp
sub
stos
sbb
jo
or
push
mov
mov
sub
aad
push
out
lock
xor
sub
daa
push
out
std
fstp
or
add
mov
pusha
add
enter
push
add
push
pop
fld
daa
mov
outs
fdivrp
mov
cdq
and
rcl
loope
push
xchg
and
retf
dec
jb
mov
cs
in
rep
lock
fwait
cmc
push
push
xor
and
jo
mov
xchg
mov
int3
(bad)
xchg
dec
jg
jmp
xchg
(bad)
and
adc
xchg
add
xchg
cli
inc
sahf
fnstcw
sub
and
imul
in
lock
inc
(bad)
mov
enter
dec
lahf
fist
xchg
xor
pop
nop
mov
popa
out
adc
cmp
mov
cdq
std
fwait
fwait
inc
cmp
xchg
and
adc
test
sbb
stos
out
mov
das
mov
xchg
fisub
aam
xlat
inc
or
retf
ret
repnz
jmp
in
jb
xchg
aam
xchg
sub
loopne
cmp
or
push
cpuid
dec
mov
mov
cmps
or
neg
push
adc
mov
rcl
pop
push
daa
push
push
pop
xor
pusha
in
jns
dec
std
xor
jl
(bad)
ss
push
mov
cmp
mov
mov
cmp
(bad)
aad
sbb
xchg
jbe
test
add
retf
in
sub
(bad)
iret
cwde
or
mov
add
jp
(bad)
jl
repnz
je
(bad)
or
and
popa
scas
js
scas
xlat
dec
and
retf
popa
adc
into
shl
adc
jp
xchg
idiv
adc
cli
retf
mov
test
cmp
jecxz
push
cmc
dec
cmp
fimul
pop
addr16
adc
leave
mov
mov
and
scas
repz
aad
dec
test
mov
pop
(bad)
int
xchg
xchg
mov
mov
add
repz
dec
xchg
xchg
shl
or
fmul
or
mov
(bad)
mov
or
ins
mov
add
leave
outs
jb
sti
mov
ret
mov
lods
stos
outs
jge
or
repnz
(bad)
xor
cmp
clc
or
xchg
or
sub
pop
dec
push
mov
ja
pop
pop
mov
sub
int3
scas
test
stos
in
enter
shl
call
aaa
mov
rcl
std
popf
xchg
popf
in
inc
sbb
lock
inc
(bad)
mov
shr
xor
xchg
xchg
and
xchg
repz
dec
je
xchg
adc
clc
test
mov
je
pop
add
sub
xchg
cmps
or
mov
sbb
mov
jecxz
adc
rol
mov
adc
add
xor
and
mov
aas
or
rcl
mov
mov
mov
or
fstp
lds
mov
push
(bad)
sahf
test
or
dec
sti
mov
cmp
lds
push
mov
push
out
xchg
jmp
lds
mov
inc
adc
fwait
push
int3
inc
sub
cmps
sub
test
movs
loop
test
mov
jns
lahf
repz
rcr
xor
lods
loopne
jns
rcl
(bad)
ins
add
jb
mov
dec
xchg
mov
mov
and
stc
cwde
xchg
icebp
and
and
inc
sahf
mov
fwait
popa
mov
push
sti
pop
add
ja
lahf
xor
(bad)
cmp
cmp
sub
jp
mov
hlt
cli
sbb
mov
xchg
ficom
jl
and
mov
mov
and
aas
lds
mov
in
fild
mov
mov
and
mov
inc
(bad)
scas
mov
and
push
shl
mov
outs
fs
and
nop
(bad)
test
jmp
mov
cwde
adc
(bad)
loopne
pop
shl
addr16
jle
xchg
sbb
mov
cmp
pop
push
fld
mov
mov
in
jns
gs
ror
mov
fwait
rcl
shl
pop
mov
sbb
push
mov
retf
in
mov
outs
xchg
or
cdq
popa
dec
scas
out
sbb
adc
jne
mov
daa
call
scas
sbb
popf
pop
and
arpl
add
adc
out
ror
cdq
mov
jne
or
loop
sbb
sbb
and
aas
(bad)
popa
jmp
jmp
dec
dec
cmps
int
mov
(bad)
dec
arpl
sbb
pop
sbb
(bad)
cwde
sar
inc
add
sti
xor
mov
mov
fucomip
scas
mov
and
xchg
ret
scas
repnz
mov
ret
outs
lods
push
adc
out
mov
and
xchg
mov
loop
cmps
stos
or
clc
mov
out
mov
arpl
xchg
loope
cdq
cli
dec
std
les
push
cmp
test
shl
call
add
in
mov
stos
and
push
mov
jle
add
mov
xchg
or
push
leave
test
push
popa
les
push
jp
xchg
xor
call
xchg
in
push
call
inc
dec
jnp
jnp
loopne
test
inc
or
cwde
xchg
dec
sbb
cdq
dec
mov
lock
ins
dec
push
test
cmp
mov
xlat
pop
or
jno
lods
xchg
mov
jo
out
lock
out
inc
mov
jle
inc
add
les
dec
inc
ja
push
adc
push
ror
es
inc
fsubr
dec
push
lock
pop
pushf
sahf
out
add
out
and
mov
lahf
push
sbb
outs
aad
xor
(bad)
idiv
outs
imul
fst
jge
call
movs
pop
pop
mov
hlt
(bad)
mov
popf
inc
test
test
fsub
and
(bad)
or
into
dec
retf
inc
jne
in
push
push
sbb
clc
dec
movs
push
add
data16
loope
ins
mov
dec
pop
and
push
nop
push
mov
push
aam
xchg
push
loope
or
int
pop
js
call
mov
retf
add
out
mov
push
jne
movs
loop
ja
leave
sbb
jae
add
cmp
add
push
mov
pop
icebp
loopne
not
shl
lods
xchg
push
out
stos
jns
dec
xchg
(bad)
inc
popf
enter
pop
jecxz
mov
adc
inc
cmp
retf
add
jg
out
stos
adc
cmp
dec
repnz
rcr
inc
fisubr
adc
xchg
cmp
inc
sub
cmc
lahf
int3
adc
mov
or
push
pop
cmp
fist
xor
mov
xchg
cmp
not
inc
sbb
leave
xor
or
or
push
xchg
adc
ins
rcl
scas
mov
bound
jmp
out
and
push
stos
add
je
js
dec
sbb
and
je
dec
pop
nop
ds
pop
cmc
sub
loopne
or
arpl
je
jmp
jp
mov
sub
cwde
ja
int
inc
pushf
jg
cmps
loopne
dec
or
cmp
cwde
and
or
jecxz
cmc
cmp
mov
cmp
or
jp
jmp
mov
and
sub
cmps
out
mov
arpl
sbb
stos
shl
xchg
mov
dec
cmp
sub
aaa
les
stos
mov
push
movs
sbb
out
fbstp
mov
jl
imul
mov
cmp
fwait
jnp
inc
mov
in
sub
les
loope
ret
bound
cmps
xchg
ror
ja
dec
aas
inc
(bad)
adc
imul
fisub
test
and
clc
in
adc
sub
sub
jno
sub
mov
adc
ss
pop
adc
loop
loopne
(bad)
push
ss
xchg
sub
jne
cmps
pop
add
xor
mov
neg
cwde
fisub
in
jnp
ret
and
or
cwde
call
or
xor
mov
bound
(bad)
(bad)
icebp
hlt
push
adc
fisttp
add
pop
or
adc
xor
push
dec
movs
mov
mov
aad
cs
push
(bad)
std
shl
and
loopne
and
dec
push
repnz
in
stos
push
push
fsubp
sbb
fmul
jmp
xor
(bad)
(bad)
mul
add
adc
retf
(bad)
mov
ins
mov
sbb
test
sbb
mov
pop
mov
sbb
stc
jns
je
xlat
jb
test
xor
jmp
push
dec
retf
dec
bound
pop
aad
sub
ins
(bad)
out
and
(bad)
ins
adc
inc
popa
xchg
cmps
je
and
dec
popa
hlt
adc
icebp
push
enter
adc
in
xlat
rol
push
mov
mov
sub
sbb
xor
outs
sbb
fs
xchg
out
add
ja
mov
int3
add
or
std
repz
cmc
adc
imul
mov
stos
dec
push
mov
pusha
ret
xor
inc
adc
xor
xlat
pop
cmp
clc
cwde
mov
xchg
adc
push
cmp
das
push
fldenv
sub
jge
test
jmp
cmp
adc
int
xor
cmp
fistp
sahf
lahf
cmps
fisubr
lods
mov
out
pushf
sub
mov
lahf
jp
xchg
or
xchg
mov
out
dec
xchg
jg
pop
cmp
enter
jbe
ficomp
mov
mov
fcomi
js
push
fisubr
mov
int3
or
pop
imul
lock
test
sub
jecxz
jno
(bad)
enter
push
cmps
daa
sbb
(bad)
xor
jns
jno
or
or
pop
lea
movs
gs
jp
ss
lods
push
and
icebp
std
inc
ret
jb
lods
repz
push
bound
retf
jnp
mov
cmp
ficom
sub
cwde
mov
jo
add
mov
jae
fdiv
dec
out
ins
mov
imul
mov
push
cld
mov
ret
enter
mov
pop
cmp
inc
call
or
push
add
xor
test
sub
push
push
push
std
jmp
or
jnp
mov
movs
and
xlat
sub
push
adc
pop
es
add
es
xchg
addr16
in
jl
rcl
stc
retf
repz
imul
out
or
sub
mov
int
jg
xor
xor
sbb
dec
out
add
push
sub
cmps
push
jb
into
ss
add
div
cdq
test
mov
stos
xlat
js
cs
mov
fisubr
lds
pop
sti
mov
ins
or
test
pop
fwait
lea
jmp
and
call
xchg
sub
lahf
adc
cmp
push
lock
inc
aad
cmps
dec
test
mov
push
out
out
or
mov
xchg
jb
mov
xchg
aas
sub
dec
test
dec
pop
pusha
nop
jnp
adc
pop
or
sub
sub
in
call
ficomp
xchg
mov
cmp
lods
int3
add
push
ss
ja
jno
leave
pop
jl
xchg
pop
stc
add
push
repz
cmps
xchg
mov
sub
xchg
mov
ss
fcom
xor
mov
or
stc
pop
adc
mov
push
xchg
cmp
add
jl
fcmovnbe
(bad)
fmul
addr16
pop
lods
retf
in
int
icebp
mov
les
loopne
mov
sub
(bad)
aam
jb
xor
xchg
movs
cmc
jge
cmp
pop
sbb
ins
loope
fs
mov
es
pop
jecxz
es
and
and
jae
inc
imul
aas
test
sahf
out
iret
xor
xchg
shl
push
in
in
out
rol
jo
mov
retf
pop
cmp
dec
add
nop
bound
add
cdq
shl
xchg
cli
cld
jns
pop
push
pop
mov
xor
cmp
sbb
cld
nop
jecxz
sub
aaa
out
aaa
in
outs
int
add
je
inc
shr
sbb
enter
xchg
fmul
pop
and
lods
dec
jmp
in
cmp
out
rcr
test
jmp
xor
(bad)
movs
push
ja
jbe
sub
mov
mov
mov
mov
popa
bound
inc
out
iret
(bad)
mov
cdq
pop
jle
imul
cmc
mov
dec
add
xchg
mov
add
stos
adc
sti
mov
xchg
cmp
jp
jnp
dec
test
mov
repz
loop
popf
or
gs
stos
movs
in
jle
call
xchg
cmps
xchg
ins
push
repnz
mov
in
pop
cld
mov
stc
jg
in
cvttps2pi
jb
mov
ror
stc
retf
jg
out
sti
mov
in
mov
sbb
push
pushf
aas
fwait
push
fild
jle
popf
push
sbb
pop
aad
imul
and
shl
leave
(bad)
out
push
rcr
test
(bad)
xor
xor
lods
sahf
pusha
rol
sbb
sub
pusha
push
mov
mov
fwait
and
bound
sub
xor
mov
adc
mov
mov
mov
ss
sahf
xchg
or
dec
push
add
cdq
lods
ret
clc
ss
pusha
mov
sub
test
popa
outs
fwait
arpl
scas
cmp
lods
sbb
adc
ds
leave
pop
dec
xchg
or
inc
ins
enter
popf
push
mov
in
enter
retf
fld
not
test
jg
add
js
aaa
outs
or
mov
shr
jmp
adc
pop
xchg
add
je
ins
mov
mov
push
aas
xor
addr16
and
jmp
sbb
dec
jae
aaa
or
dec
mov
dec
mov
fwait
xor
and
xlat
arpl
js
cdq
pop
das
or
adc
jg
pop
jno
or
mov
lds
arpl
and
adc
add
aad
push
sub
test
adc
loope
dec
jb
fwait
xor
inc
sbb
cmp
pop
lods
cmp
cmp
jno
cli
sar
push
retf
bound
or
add
pop
pop
shr
jmp
je
in
push
aam
and
jmp
cmp
sbb
imul
mov
mov
and
push
mov
mov
ror
jmp
push
add
pop
movhps
imul
inc
or
xor
mov
mov
jno
fmul
jno
fldcw
int3
mov
jmp
sbb
push
inc
ins
popa
(bad)
jecxz
nop
mov
dec
xchg
test
bswap
ret
mov
gs
cmp
xor
or
jge
mov
pusha
xor
inc
push
fstp
sbb
mov
inc
xor
xor
retf
into
out
ret
mov
cli
(bad)
cmp
pop
pop
fs
push
pop
xor
stos
fsubr
ss
sub
(bad)
xchg
jnp
sbb
mov
das
in
xchg
stos
push
push
ja
xchg
out
ror
in
fadd
not
mov
sti
adc
ret
(bad)
cmp
in
push
inc
imul
pop
je
add
add
mov
inc
mov
jne
xor
mov
test
stc
es
sahf
jmp
mov
mov
sub
sti
loop
cld
into
or
mov
je
sbb
cdq
fs
mov
adc
loope
dec
outs
jae
inc
ret
shl
ret
imul
dec
jp
push
rcr
jmp
pushf
out
int
je
xor
pop
lods
inc
retf
cmps
push
and
jmp
or
retf
xor
loop
add
pusha
not
leave
outs
sbb
mov
sub
rol
sbb
sbb
inc
adc
adc
loopne
in
pop
pminub
test
pop
cmp
jl
push
test
int
ret
mov
popf
fisttp
test
daa
pop
movups
fsub
push
cmp
aas
inc
dec
(bad)
or
dec
inc
daa
jg
jmp
sahf
mov
inc
cld
pop
xchg
cmp
aaa
shl
sbb
or
and
mov
fidiv
push
jg
add
push
inc
sbb
xchg
inc
mov
jnp
inc
and
dec
fwait
ja
ins
mov
inc
in
out
in
xchg
pop
push
retf
ret
cmps
xor
xchg
in
ja
dec
bound
sub
daa
(bad)
sub
xchg
ficomp
dec
sub
test
or
lods
lahf
or
or
aas
and
dec
ins
ror
pushf
ins
push
js
rcl
icebp
rcl
stc
mov
and
fnstcw
xor
sub
cmc
push
jb
cmp
out
clc
push
or
rcr
pop
sub
jge
in
mov
sbb
test
push
pop
mov
mov
xor
lds
or
cmps
fbld
(bad)
fsub
mov
jmp
jl
and
adc
sub
sub
in
mov
xchg
(bad)
rol
(bad)
fldenv
je
aam
psubusw
adc
call
adc
mov
push
fs
aas
sahf
scas
test
sub
push
hlt
sbb
popf
and
jecxz
lods
mov
loop
inc
or
sub
and
mov
or
fcomp
inc
dec
adc
inc
shufps
sub
fld
test
push
jl
pop
mov
dec
fs
mov
adc
inc
sbb
cmps
xor
cmp
call
jge
scas
inc
cmp
pusha
dec
push
mov
clc
retf
scas
retf
xlat
popa
dec
test
daa
arpl
hlt
sub
jmp
repnz
inc
retf
push
shl
in
dec
add
inc
cli
shl
sbb
outs
and
ds
fcom
dec
(bad)
mov
sbb
in
mov
repz
das
cmps
dec
bswap
loopne
inc
sub
jno
addr16
call
mul
pop
es
cdq
cld
stc
jle
xchg
popa
dec
cwde
fst
repz
sub
add
je
fist
or
sahf
xchg
das
mov
stos
out
pop
das
(bad)
test
in
push
mov
mov
xchg
push
sbb
dec
mov
sub
jmp
xchg
mov
push
lock
jl
push
xchg
or
or
mov
xchg
cli
xor
ror
ret
mov
xchg
or
cs
add
push
and
rcr
dec
cmps
push
push
cmc
sbb
stc
sub
adc
es
push
outs
inc
paddusb
iret
xchg
push
add
stos
dec
lods
mov
adc
rol
repnz
mov
sbb
jbe
mov
out
pop
xchg
add
fisubr
ficom
popf
xchg
xchg
dec
push
je
gs
add
xchg
in
sub
mov
icebp
test
inc
fwait
and
dec
push
push
or
jecxz
ret
cmc
fldenv
jmp
inc
(bad)
(bad)
push
ja
sub
lods
(bad)
test
push
sub
cmp
pusha
and
aad
jae
cs
stos
push
cmp
ret
or
and
add
mov
icebp
mov
mov
rcr
ret
enter
pushf
mov
mov
lock
fnstcw
jns
xor
loop
xor
cmp
fdivr
inc
mov
outs
fwait
hlt
enter
popf
cmp
and
dec
and
lods
fst
cmp
cmp
mov
mov
or
imul
aad
mov
adc
aad
fidivr
cwde
das
pop
mov
daa
out
mov
mov
popa
ds
add
sub
mov
and
lods
push
jnp
pushf
call
sub
sbb
addr16
inc
and
(bad)
cmp
fstp
ffree
add
scas
add
dec
sub
imul
and
in
lods
dec
dec
and
pusha
je
pop
or
stos
sbb
adc
add
ret
int
push
pusha
int
mov
icebp
retf
adc
out
cmp
adc
jle
xchg
or
popf
retf
push
jle
loop
xor
pop
sub
lods
dec
sar
and
pusha
push
into
(bad)
in
cmps
in
ss
lods
xchg
pop
and
xchg
shl
mov
fwait
cli
mov
sub
lods
dec
call
or
fwait
loop
cmp
fs
out
cdq
(bad)
cmp
faddp
dec
or
hlt
js
sub
(bad)
lock
or
jmp
sbb
arpl
cld
cdq
inc
std
xor
xor
sbb
push
aaa
lods
xor
sar
std
cld
imul
dec
pop
cld
xchg
sub
mov
pop
call
lock
sbb
test
aad
pop
icebp
sub
aad
movs
fiadd
sbb
pop
jmp
cs
in
jg
jno
cmp
inc
in
fadd
and
sub
fld
xor
dec
mov
leave
sbb
shl
jmp
or
jbe
outs
icebp
mov
jle
mov
xor
cmp
push
lea
and
add
lock
clc
sub
ja
xchg
dec
aad
pop
add
fisttp
shl
cmps
in
int3
mov
enter
mov
fisubr
push
or
pushf
or
fucomi
(bad)
out
inc
test
jp
pop
loope
retf
jno
outs
int3
(bad)
cmp
nop
dec
imul
ja
out
scas
rcr
push
mov
out
pop
xor
sbb
retf
xchg
les
lds
mov
(bad)
jo
repz
mov
test
jnp
ror
rep
inc
in
rdpmc
mov
mov
cwde
test
lds
jl
test
clc
pop
adc
mov
mov
pop
shl
int3
gs
ds
or
ds
ins
fldenv
ret
repz
repz
mov
shl
(bad)
(bad)
(bad)
mov
push
call
push
inc
in
jge
mov
sub
or
(bad)
int3
and
test
(bad)
fwait
jmp
push
pushf
cmp
mov
and
add
mov
pop
xchg
cmc
adc
inc
add
fcomp
xchg
sub
xchg
xchg
icebp
dec
pusha
aam
aaa
stos
push
or
rcl
fcmovbe
mov
pop
popa
mov
cmps
push
shl
xor
adc
jbe
xchg
aad
dec
sbb
pop
mov
push
jp
sbb
aas
inc
inc
add
loopne
iret
scas
das
cmps
iret
fimul
mov
xchg
adc
add
and
inc
ja
sbb
pop
or
(bad)
xchg
stos
jne
scas
mov
dec
pop
cdq
(bad)
push
(bad)
xor
fcom
pop
mov
or
aaa
jp
(bad)
push
ret
adc
cmp
sbb
push
test
setle
loope
sub
fisub
push
fadd
call
popf
repnz
stos
sub
jne
outs
xchg
call
push
scas
and
or
or
fiadd
shl
pop
and
stos
movs
pshufb
xchg
das
je
mov
(bad)
xor
fisubr
shr
fdivr
in
js
xor
repz
mov
xor
add
and
(bad)
ret
daa
xlat
sbb
pushf
aam
xor
ret
xchg
int3
mul
out
cmp
xchg
cs
mov
(bad)
xchg
ja
mov
add
lgdtd
mov
iret
xchg
sbb
jb
jl
adc
add
inc
jne
retf
outs
add
out
jae
xchg
ins
mov
ret
rol
mov
or
(bad)
pop
ret
sub
repnz
sbb
shl
push
sub
ins
(bad)
fidivr
sub
push
mov
mov
pop
rcr
or
pop
mov
out
(bad)
xchg
out
pop
and
scas
or
movs
xor
fist
repnz
or
and
dec
pop
mov
or
test
xchg
mov
pop
popa
pop
test
xor
jmp
into
push
add
cld
ret
add
out
cmc
loope
(bad)
hlt
pushf
inc
mov
xchg
jl
adc
mov
mov
push
fstp
push
(bad)
adc
loopne
mov
(bad)
in
fist
sahf
push
arpl
(bad)
in
call
dec
xlat
jne
hlt
mov
hlt
sbb
xor
imul
or
sub
cmp
xchg
mov
cmp
add
outs
pop
xor
sti
adc
inc
sbb
mov
cmp
and
mov
inc
xchg
jnp
ja
sub
fsub
leave
add
push
sbb
(bad)
iret
jo
inc
inc
mov
lds
std
sub
inc
js
cmp
jns
adc
sub
push
mov
jb
cmp
test
pusha
adc
std
enter
sbb
cmp
pop
push
loope
stos
or
mov
mov
loopne
(bad)
clc
inc
sbb
pop
xor
pop
xor
hlt
hlt
leave
ror
cdq
lea
sub
or
add
in
inc
jbe
and
mov
outs
xor
pop
xchg
lods
sub
iret
jg
ja
jnp
in
mov
jmp
cmp
jg
pop
inc
loopne
xchg
xchg
movs
iret
cwde
repnz
and
test
inc
inc
out
sahf
shr
push
test
lds
in
add
mov
cmps
sub
inc
pushf
xchg
xchg
fisubr
pop
push
xor
sub
mov
loop
mov
es
jl
lds
mov
or
mov
shr
lods
xchg
inc
(bad)
jb
loope
mov
inc
adc
pop
pop
mov
xor
mov
hlt
hlt
mov
xchg
jmp
mov
ja
addr16
mov
dec
or
pop
and
bound
jb
cs
xchg
xchg
les
sbb
movs
sub
mov
sti
mov
fimul
jno
cmps
dec
pop
addr16
fisubr
push
pop
je
cmp
ret
push
pop
addr16
jp
in
and
jmp
cdq
shl
sub
add
dec
sar
loop
lea
dec
inc
and
or
add
or
adc
loop
loop
jge
sub
pusha
movs
add
or
aas
outs
in
mov
sbb
dec
mov
mov
or
sub
outs
jecxz
inc
mov
(bad)
jp
out
mov
nop
sar
sbb
pop
ffreep
int3
xor
js
mov
(bad)
out
fwait
inc
fistp
ins
leave
add
fs
sbb
or
adc
lock
xor
dec
pop
pop
cmps
jno
pop
jle
popa
outs
in
push
mov
add
push
(bad)
adc
popa
fwait
inc
lahf
loop
das
ret
inc
mov
pop
jl
dec
sti
or
int
mov
and
cmps
test
cmp
adc
cmp
sbb
in
mov
(bad)
push
jecxz
xchg
ficomp
push
fistp
mov
iret
das
adc
into
cwde
or
in
push
pop
or
mov
push
jle
and
jno
mov
dec
(bad)
rcr
push
add
fmul
add
add
rol
adc
push
(bad)
mov
xchg
adc
mov
movs
imul
mov
mov
sahf
sub
sub
push
inc
cli
fimul
push
arpl
jg
repnz
mov
push
iret
adc
or
out
in
rcr
stos
js
jmp
outs
(bad)
fcomp
cmp
xchg
fbstp
pop
pop
and
xchg
push
push
loope
jp
and
jmp
pushf
adc
jmp
sub
mov
mov
out
pusha
(bad)
shr
pop
sahf
xor
es
test
and
push
jbe
ret
jb
adc
es
(bad)
int
mov
clc
retf
dec
inc
and
call
fld
mov
or
mov
gs
add
jno
mov
cmp
div
pop
mov
mov
int
stos
dec
aas
pusha
cmp
rcl
adc
data16
imul
jns
fs
xchg
mov
cwde
and
(bad)
cmp
sti
cmp
xchg
ja
call
mov
sti
enter
mov
ss
mov
aam
imul
loopne
and
mov
or
dec
push
mov
xor
fnsave
test
fstp
inc
mov
in
in
mov
popf
jns
test
ffree
outs
adc
pushf
jg
cmp
lods
es
adc
cdq
test
mov
test
stos
arpl
push
mov
enter
dec
(bad)
dec
out
xchg
pop
mov
popa
ret
sar
test
mov
mov
pop
cmps
fs
pop
lahf
jl
dec
out
sahf
out
or
add
call
lods
add
jae
cmps
pop
xor
jno
hlt
add
xor
mov
rcr
mov
aaa
stos
pushf
sbb
(bad)
mov
mov
popa
mov
mov
div
jl
and
lds
fstp
loopne
mov
sub
xor
inc
loope
in
repz
dec
push
in
jae
xchg
inc
and
(bad)
push
popa
dec
test
xchg
add
xchg
add
inc
popa
scas
outs
ins
sbb
add
mov
test
mov
ds
and
addr16
fiadd
inc
shl
inc
cmp
push
mov
fwait
movs
cmp
inc
mov
jl
adc
pop
inc
cdq
ret
or
xor
mov
sbb
rol
int3
mov
(bad)
cmp
mov
push
ins
hlt
ja
push
aam
mov
ret
test
pop
add
mov
jle
sti
mov
dec
enter
mov
mov
inc
mov
add
and
or
inc
mov
adc
sub
or
and
pop
ret
jecxz
pop
cwde
mov
clc
and
push
mov
dec
cwde
fcomp
push
pop
leave
adc
mov
icebp
out
push
clc
adc
inc
call
mov
cmp
sub
mov
xor
add
aad
icebp
mov
xor
dec
mov
pop
jo
jg
pop
iret
stos
and
lods
call
pushf
mov
mov
in
dec
test
pop
test
adc
mov
mov
mov
retf
dec
test
mov
xor
cmc
mov
call
popa
loopne
xchg
lds
jae
or
mov
sbb
ret
or
outs
int3
push
cmc
int
stos
loop
popf
arpl
jb
call
cmps
lahf
in
push
dec
in
daa
sub
out
push
push
loop
mov
xor
pop
add
mov
dec
mov
ins
cdq
or
outs
sar
ficom
cmps
and
xor
and
shr
retf
mov
mov
push
retf
push
mov
sub
push
push
in
ret
cli
add
add
scas
repz
cli
push
push
ror
sahf
cmp
jo
test
or
xchg
sbb
clc
xchg
fistp
mov
push
mov
mov
jb
popf
cmp
xor
pmulhw
pop
ins
outs
retf
pusha
and
add
loopne
or
enter
push
lock
shld
movs
call
movs
retf
(bad)
sbb
xor
cmp
xor
add
lahf
gs
pop
loope
mov
fimul
push
bound
sahf
inc
aas
inc
or
push
xchg
mov
dec
cmps
xchg
xchg
fwait
dec
mov
dec
mov
out
or
xor
test
mov
clc
sbb
cmp
lock
mov
push
cmp
std
mov
(bad)
xchg
in
or
das
pop
jo
rcl
push
mov
cmps
push
nop
adc
rcr
test
mov
call
inc
lock
push
cmp
mov
sahf
test
inc
fadd
fs
mov
mov
dec
pop
enter
fmul
or
push
add
(bad)
jmp
pop
ins
dec
clc
push
jmp
push
and
pop
push
data16
xchg
adc
mov
xchg
and
xor
mul
cmp
dec
addr16
dec
xchg
sub
jg
int3
push
loop
in
or
outs
div
fnstsw
jmp
adc
adc
adc
hlt
pushf
sub
jb
aaa
xor
cmp
inc
fadd
inc
mov
les
push
cdq
(bad)
div
shr
retf
push
mov
sub
sti
adc
mov
mov
jns
gs
aas
pop
mov
cmps
out
pop
mov
and
bound
das
and
sbb
xchg
ret
add
js
fwait
mov
in
js
and
add
pop
xchg
inc
jmp
call
inc
adc
leave
push
ins
push
mov
mov
mov
jb
stos
mov
cli
stos
iret
and
lea
retf
mov
hlt
es
out
call
mov
fwait
lds
(bad)
xchg
ja
rcr
adc
xchg
sub
lea
dec
jne
jnp
push
sbb
push
hlt
or
aam
jns
(bad)
sbb
aam
sbb
movs
mov
and
and
(bad)
add
arpl
inc
fdiv
cdq
lea
sbb
mov
add
in
fwait
(bad)
cdq
mov
and
xchg
hlt
mov
fs
shl
push
add
mov
xchg
xor
ja
ficomp
inc
push
cmp
out
pushf
mov
dec
bound
in
adc
inc
or
in
sub
sub
mov
add
in
and
or
shl
mov
push
mov
gs
scas
push
loopne
and
(bad)
into
es
xchg
loopne
bound
mov
add
ss
jge
(bad)
fild
outs
retf
imul
dec
leave
imul
dec
cdq
push
addr16
rcl
cmp
xchg
rcr
xchg
add
or
pop
push
fist
inc
dec
push
fcomp
adc
aam
or
rcl
aaa
fidiv
pop
add
int3
mov
ret
add
(bad)
repz
ss
push
mov
(bad)
and
out
adc
sub
nop
fisttp
fwait
or
scas
mov
imul
shl
xchg
arpl
jecxz
xchg
into
push
(bad)
sti
daa
icebp
push
or
dec
retf
sub
adc
dec
push
loopne
cld
clc
call
movs
pop
push
rcl
(bad)
xchg
mov
jp
or
push
test
retf
xchg
fs
inc
pop
mov
jae
cli
pop
les
jno
fwait
(bad)
mov
xchg
sbb
jmp
add
push
dec
adc
fistp
add
aas
xor
xchg
sub
mov
call
sub
pushf
and
mov
sahf
arpl
cld
xlat
call
adc
jno
mov
cmp
pop
sbb
(bad)
add
push
mov
retf
rcl
ins
repnz
or
mov
div
imul
push
cmp
ins
jnp
pusha
sbb
iret
fidiv
sti
loop
mov
and
push
movs
out
mov
outs
cmp
pop
pop
push
sbb
fs
ins
imul
in
or
mov
xchg
(bad)
xlat
popa
xor
push
jl
fcomp
pop
cmc
test
arpl
enter
mov
dec
xor
call
and
sbb
dec
movs
xchg
loop
push
xlat
retf
movntq
mov
imul
push
xchg
clc
shl
mov
call
dec
push
cmp
loop
pop
out
in
in
(bad)
jge
outs
push
mov
out
mov
push
push
(bad)
sbb
mov
and
mov
add
or
jo
mov
inc
xchg
add
and
cmps
dec
jle
into
mov
or
mov
mov
repnz
pop
sbb
or
jae
xlat
hlt
rcr
add
mov
push
stos
xor
jp
mov
cdq
mov
mov
ret
push
dec
pop
bnd
in
imul
fdiv
or
mov
pushf
in
mov
push
mov
jmp
mov
mov
jbe
ret
fisttp
push
outs
adc
neg
xor
mov
jns
mov
ja
aas
repz
test
out
jg
push
std
dec
popf
stc
and
shl
pop
inc
jns
sub
loop
cld
sub
cmps
stos
mov
xlat
jecxz
cmp
cdq
stos
cld
mov
inc
xchg
pop
hlt
fsub
sbb
xor
and
xor
das
mov
fild
shl
jl
ins
pop
inc
inc
jl
sub
add
aas
loope
cli
sbb
cmc
mov
mov
xor
in
clc
les
mov
inc
dec
leave
test
or
mov
and
(bad)
out
add
test
adc
inc
cmp
aam
mov
pop
push
lahf
retf
aaa
out
jns
out
sbb
dec
jmp
scas
mov
aam
test
xor
enter
lahf
cmp
sub
push
inc
out
movs
adc
jle
cld
mov
aad
xor
dec
icebp
jecxz
bnd
mov
or
jl
cmp
leave
pushf
pop
mov
loope
dec
cmp
(bad)
cmp
cs
xor
dec
pushf
sub
les
xchg
push
sbb
out
int
addr16
out
xchg
iret
iret
shl
cmovs
jl
or
jge
fs
xchg
test
pusha
xchg
or
pop
inc
jns
cpuid
aaa
sub
xor
adc
(bad)
sbb
stc
daa
sbb
data16
scas
cmp
pop
jmp
gs
or
hlt
xor
fisttp
mov
dec
adc
jecxz
xchg
inc
cmps
scas
adc
cmp
stos
std
rcr
scas
dec
fadd
jmp
ins
mov
mov
lods
(bad)
movs
sub
pop
rcr
xchg
xlat
mul
xchg
arpl
pop
and
pop
mov
fnstenv
fisttp
test
or
lock
xor
pop
mov
or
jmp
jo
pop
xlat
push
jne
(bad)
push
mov
(bad)
ja
into
xchg
mov
cmp
outs
inc
std
sbb
repnz
rcr
sub
sar
add
mov
sub
add
pop
dec
pop
add
adc
fwait
inc
push
mov
jne
pop
repz
xor
jmp
cmovo
fbstp
cmp
inc
xor
push
push
fbstp
into
mov
dec
ins
cmp
sti
test
outs
adc
mov
fnstenv
sbb
in
mov
jne
mov
add
(bad)
enter
lods
aad
in
jb
jle
mov
aaa
mov
outs
sahf
pop
pminsw
cld
and
sbb
imul
retf
out
push
sbb
adc
ror
lea
cs
add
inc
aad
xlat
scas
cmp
pop
sub
jbe
mov
xor
mov
mov
out
push
fcomp
or
xchg
and
xor
sbb
stos
cmp
mov
sti
ins
aas
cmp
push
jg
jge
xchg
mov
pop
icebp
aaa
cmps
cmc
add
scas
push
inc
mov
push
fmul
jae
ret
test
outs
push
ja
stos
gs
popf
loop
in
retf
loopne
or
add
ins
push
or
jno
(bad)
dec
in
inc
or
ds
into
adc
pop
jb
pop
push
retf
pushf
mov
(bad)
xor
inc
repnz
or
fstp
scas
lahf
or
add
pop
sar
rcr
das
push
mov
ins
or
push
fisubr
(bad)
pop
mov
xchg
call
push
mov
xchg
enter
mov
xchg
sbb
xor
ds
out
out
xchg
loope
and
int3
xor
inc
xor
mov
mov
retf
adc
retf
fucom
scas
jmp
js
cdq
in
mov
mov
sahf
mul
lds
jmp
inc
(bad)
sbb
and
add
outs
push
or
test
fs
jg
fisttp
cmp
dec
dec
test
cli
inc
loope
shl
sbb
adc
mov
cmp
fild
bound
icebp
(bad)
pusha
aam
scas
popa
ins
dec
loopne
jb
inc
lock
mov
(bad)
stos
out
movs
mov
pop
movsx
add
retf
dec
xlat
mov
aad
mov
(bad)
jmp
(bad)
sahf
pop
int
pop
jns
xchg
test
sbb
or
psubd
xchg
ret
aas
sahf
loopne
dec
inc
adc
loope
shl
mov
das
jg
pop
jg
push
push
pop
fwait
add
fdivr
ret
mov
jg
rol
lods
mov
pop
ja
xor
inc
addr16
imul
aam
out
inc
jnp
sub
add
add
ret
mov
jne
sub
test
fldcw
out
in
inc
or
or
adc
mov
iret
and
loope
fwait
sahf
scas
fs
add
rcr
mov
bound
add
mov
mov
jp
push
xchg
add
das
outs
int
dec
sbb
jnp
rcr
sbb
(bad)
cmp
xor
dec
dec
cmc
sub
inc
(bad)
xchg
scas
xchg
call
xchg
jp
leave
iret
mov
lahf
ror
sbb
inc
inc
and
mov
mov
lds
lods
cld
or
fisub
std
xchg
xlat
push
xor
and
aam
xchg
add
pusha
mov
dec
dec
or
xchg
mov
sub
inc
idiv
xor
jge
cli
pop
call
fs
sar
lds
fs
enter
dec
aaa
jo
and
add
addr16
in
mov
xchg
retf
sub
xor
test
sbb
jl
ss
cwde
and
hlt
mov
dec
cmp
mov
jns
enter
call
add
xor
ret
fisub
jl
outs
fldenv
leave
dec
sar
stc
mov
and
fild
fs
or
dec
loopne
xor
ret
push
(bad)
mov
call
test
int3
dec
mov
in
adc
mov
jl
push
je
ret
push
sub
repz
and
and
cmps
and
ds
mov
out
and
dec
cmps
push
rcr
pop
mov
cmp
in
cmp
sbb
in
pop
sbb
sbb
xchg
lods
sbb
sahf
dec
add
dec
push
cwde
scas
mov
cmp
mov
cmp
pop
bound
dec
add
sbb
mov
jnp
adc
adc
push
rcl
mov
mov
cmp
xchg
pop
cdq
mov
jmp
push
push
test
movs
or
and
arpl
adc
dec
cmp
or
call
push
loope
fwait
dec
nop
push
ins
sub
xor
rol
inc
inc
cld
ss
fsubr
shl
pop
jnp
test
push
xchg
jecxz
fiadd
dec
mov
loopne
xor
outs
popf
aas
sti
and
ja
lock
sbb
call
mov
int3
xchg
rcr
dec
xor
sti
mov
xchg
pop
aaa
(bad)
aad
scas
shl
out
cli
sbb
mov
jo
adc
sbb
or
sbb
das
xor
jns
jmp
mov
shl
es
or
mov
aaa
pop
xor
push
push
out
sub
jle
scas
fs
lds
jg
push
xor
mov
imul
push
fisubr
jns
fcmovne
ss
jge
call
aaa
sbb
retf
std
ret
mov
or
ror
hlt
aad
cmps
cmp
into
push
dec
call
call
adc
pop
mov
push
dec
(bad)
(bad)
lock
sub
jl
in
jns
mov
std
dec
iret
push
fnsave
jecxz
mov
mov
xchg
pop
test
retf
invd
adc
sub
mov
sub
call
mov
add
or
lods
and
outs
inc
mov
cdq
mov
es
sbb
or
xchg
mov
stc
jns
cmps
sbb
mov
sbb
(bad)
cs
enter
inc
mov
sti
mov
jae
mov
mov
les
sbb
pop
stos
fadd
xchg
loop
adc
xor
aad
and
push
fadd
cmp
lock
mov
inc
aam
lods
jmp
inc
jecxz
ss
mov
mov
movs
ja
cli
bound
sbb
cmc
das
dec
out
cdq
out
add
push
sub
add
xchg
add
pop
jae
adc
xchg
ja
ds
sbb
js
je
sbb
jl
pop
(bad)
sub
mov
xor
in
ret
mov
add
rcr
mov
fst
xchg
mov
add
jo
cmps
jno
and
mov
sbb
cs
push
or
adc
fisttp
dec
sbb
mov
mov
dec
(bad)
jno
and
retf
mov
sbb
or
je
pop
inc
int3
add
dec
ret
dec
dec
test
fimul
jbe
inc
scas
push
push
sbb
popa
lock
les
push
jl
xchg
mov
mov
inc
out
pop
scas
pop
les
xchg
dec
movs
imul
jl
es
inc
dec
pop
or
pusha
jmp
loopne
xor
dec
mov
imul
dec
pusha
in
aad
scas
jmp
or
(bad)
pop
dec
jnp
sbb
fstp
fnstcw
dec
sbb
mov
sub
and
fcmovnu
mov
in
das
xchg
or
scas
adc
aad
sbb
stc
int
mov
jecxz
pop
and
xor
jo
adc
sub
mov
and
push
pop
pop
and
cmp
mov
inc
or
int
add
cmp
or
daa
mov
inc
cld
inc
(bad)
pop
sub
jne
and
add
pop
pop
daa
icebp
push
shl
jmp
test
fild
iret
push
and
mov
test
and
cwde
xchg
inc
in
test
sub
push
cmp
cmp
(bad)
out
cmps
adc
clc
test
dec
and
and
mov
push
mov
or
jns
xor
inc
dec
mov
mov
mov
push
push
mov
scas
or
jmp
fimul
ja
sub
lahf
cwde
and
enter
xchg
je
imul
arpl
fidiv
sbb
or
or
mov
mov
push
jne
fadd
out
xor
(bad)
call
mov
aam
xchg
and
pop
sub
mul
push
mov
fisttp
pop
push
ror
cs
or
sub
mov
and
xchg
add
mov
lods
fs
cmp
cmp
test
adc
sar
aam
jne
retf
add
mov
enter
mov
jbe
scas
dec
inc
ret
mov
sbb
jb
outs
push
shl
sub
(bad)
mov
pop
mov
add
lock
pop
or
pop
in
cdq
jnp
(bad)
cmps
mov
pop
ret
pushf
mov
in
ds
mov
(bad)
(bad)
xlat
add
movs
dec
fwait
ret
push
add
out
pop
in
sub
loop
mov
pushf
(bad)
cmp
pusha
rcl
xchg
data16
xor
shr
xchg
stos
cdq
fs
not
lods
push
outs
js
rol
outs
(bad)
jmp
mov
and
sub
jns
jle
icebp
push
in
push
dec
inc
sti
in
in
aas
dec
daa
cmp
aas
aas
gs
jp
inc
ss
cmp
xor
test
xchg
out
cmps
rcl
push
cld
lahf
retf
fldenv
adc
lds
call
cmp
cld
rcl
xor
mov
arpl
adc
mov
pop
jecxz
fucomi
div
mov
mov
sbb
sar
outs
in
callw
mov
and
add
outs
fld
icebp
sar
dec
dec
cmp
enter
daa
add
outs
movs
cmp
shr
cmp
aam
(bad)
es
fcom
push
mov
push
fcomp
in
int
call
daa
adc
or
outs
pop
dec
cmp
mov
mov
stc
pop
jecxz
in
ins
mov
cmp
jb
outs
sbb
pop
mov
pop
push
jmp
test
mov
xor
push
fnstenv
push
icebp
mov
ja
dec
cmc
cs
or
ins
test
jmp
retf
sbb
scas
je
push
add
pop
stos
jo
rcl
outs
shr
shr
int
inc
(bad)
jle
push
mov
icebp
inc
mov
and
test
idiv
push
push
aaa
xor
(bad)
adc
push
dec
clc
mov
out
inc
add
and
je
pop
xor
test
push
adc
js
push
sub
scas
xor
pop
cld
add
and
cmc
les
cmp
push
push
dec
movs
xor
retf
cld
mov
pop
retf
pop
pop
popa
push
inc
cmp
push
xchg
dec
push
push
(bad)
and
sti
xchg
adc
fmul
int
add
lds
cmc
jmp
aam
sub
out
lea
imul
mov
push
int
retf
ins
lds
aad
(bad)
mov
push
ret
int
cdq
imul
add
push
cmp
(bad)
or
shr
mov
mov
std
shl
out
loopne
cmps
out
adc
sahf
not
jae
iret
or
xor
mov
inc
ret
inc
xor
jle
retf
pop
leave
push
das
xor
popa
fldpi
(bad)
xor
xchg
push
jmp
in
cmps
aas
or
das
ret
and
out
mov
ja
pop
and
add
cmp
dec
mov
inc
and
xor
mov
pushf
push
cld
push
cmps
cmp
mov
mov
(bad)
inc
enter
jl
ror
imul
pop
nop
mov
adc
fdivr
rcl
aam
mov
popf
sbb
mov
mov
(bad)
fidivr
push
ss
sub
stc
(bad)
cmc
pusha
loope
out
repnz
repz
dec
and
cmp
pop
push
jg
lahf
sti
or
or
in
call
sub
jae
jl
js
imul
gs
cmps
scas
xor
movs
retf
sub
inc
rcl
pop
mov
dec
lea
dec
dec
in
xchg
mov
daa
xacquire
or
fs
adc
add
and
in
xchg
dec
push
xchg
sbb
xchg
pop
dec
sub
data16
stos
mov
push
sub
inc
fcomp
inc
mov
ja
mov
dec
jnp
(bad)
adc
ins
ror
mov
out
adc
add
mov
mov
jle
push
jae
leave
pusha
pop
xchg
imul
dec
clc
hlt
aad
std
test
mov
sbb
aas
mov
cmps
xchg
(bad)
and
adc
aad
dec
sbb
mov
fwait
push
or
(bad)
pop
jns
mov
mov
jae
pop
sbb
das
inc
lock
lahf
xor
adc
out
xor
sbb
daa
stc
movs
mov
sub
push
mov
loop
dec
inc
add
add
adc
inc
pop
add
cli
fistp
mov
push
pop
push
jnp
leave
cmovnp
bound
hlt
dec
mov
mov
mov
mov
add
add
jmp
bound
pusha
xor
cmps
mov
(bad)
(bad)
push
out
loope
test
int
inc
stos
out
nop
mov
mov
pop
or
mov
repz
cmp
xor
stos
push
push
add
std
test
cmp
popf
pop
rol
mov
iret
imul
jnp
pop
fild
icebp
ss
cld
stc
nop
mov
pop
loope
pop
cmps
ret
sahf
mov
mov
fxtract
sbb
cmp
jmp
popf
xlat
test
mov
int3
mov
lds
pop
jg
jno
sbb
lds
sub
push
or
push
hlt
xchg
enter
jb
int3
xor
adc
sbb
or
or
jmp
sbb
into
jl
add
inc
jle
push
into
inc
fisttp
pop
mov
(bad)
xchg
test
and
pop
(bad)
xchg
std
dec
(bad)
pop
mov
and
fcmovb
loope
add
movs
jp
inc
dec
mov
stos
fst
pop
xchg
outs
fdivp
sbb
xor
sar
mov
sub
xchg
mov
pop
mov
test
xchg
and
popa
das
jge
loop
int3
mov
leave
(bad)
jmp
les
adc
sti
test
or
fiadd
and
dec
into
imul
mov
ror
pusha
adc
aaa
push
adc
ins
scas
retf
xlat
cmp
jbe
xor
test
in
pop
jnp
push
outs
inc
and
jne
jne
pop
lock
and
cmc
inc
xlat
test
push
dec
nop
dec
xchg
pushf
dec
aam
dec
les
lods
xchg
(bad)
xchg
xor
ja
rol
cmc
mov
lock
dec
popf
mov
inc
fwait
call
jbe
jae
rcl
xor
xlat
dec
loop
clc
mov
jno
dec
mov
(bad)
(bad)
xchg
mov
xchg
and
dec
add
push
mov
ja
mov
es
das
in
add
movs
xchg
xor
lahf
clc
mov
int
mov
mov
jge
lock
sub
mov
popf
dec
and
pop
imul
mov
xchg
in
into
push
in
push
inc
push
fisttp
mov
add
pop
mov
adc
das
nop
xchg
pop
mov
cmc
std
mov
and
pop
inc
out
aad
mov
push
arpl
pop
js
int3
adc
movs
movs
push
nop
cmp
sub
popf
je
icebp
xchg
or
inc
fwait
cmp
fiadd
daa
or
movs
dec
jmp
xor
mov
mov
mov
dec
int
aas
sbb
add
jae
ret
cmp
inc
out
aad
mov
shr
jmp
neg
inc
ja
aam
xor
sub
jne
add
dec
xor
cmps
arpl
movs
push
and
leave
cmp
fwait
inc
sahf
xchg
cld
add
lods
jno
sub
loopne
cmp
push
(bad)
out
dec
mov
outs
xchg
dec
fdecstp
push
xor
mov
and
sub
jo
outs
imul
retf
xchg
sub
not
out
xchg
xor
pop
fs
lock
pop
scas
loopne
xchg
inc
cli
inc
dec
(bad)
cmps
repnz
out
push
sbb
aaa
mov
jl
pop
inc
outs
or
xchg
pop
ret
pop
add
ret
push
and
aaa
push
dec
jmp
inc
sub
rcr
sbb
outs
cmp
pop
or
dec
dec
or
scas
ds
pop
adc
jmp
mov
fld
imul
xchg
inc
mov
fcom
(bad)
in
outs
sub
add
xchg
xor
cmp
push
stc
jl
loopne
mov
jge
mov
push
icebp
xchg
mov
or
js
dec
cli
and
cwde
inc
stc
pandn
test
push
xchg
or
pop
mov
or
stc
inc
in
mov
in
jmp
sbb
ins
dec
(bad)
or
ret
sub
in
je
jge
out
xchg
add
fdivr
push
daa
stos
iret
sahf
daa
pop
pop
push
shl
add
push
pop
enter
jmp
or
fs
dec
sub
out
fistp
dec
dec
mov
dec
cwde
retf
cmps
jnp
icebp
cdq
lahf
push
xchg
xchg
push
fwait
cmp
sub
add
and
inc
and
retf
mov
out
popf
mov
jno
dec
nop
adc
push
in
jmp
ror
cwde
jnp
test
push
sub
mov
fstp
cmp
add
fcomp
add
loope
ins
out
int3
pusha
div
and
sub
mov
stos
mov
ficom
mov
nop
mov
test
inc
ret
mov
mov
dec
mov
stc
loope
out
ret
gs
jno
retf
or
mov
shr
xchg
das
cmp
(bad)
std
cmp
push
xor
dec
fstp
or
jns
sbb
ror
mov
push
shr
mov
or
nop
and
enter
cmp
mov
xchg
lds
pop
daa
inc
jbe
test
mov
ins
test
rol
nop
aam
movs
ror
sub
push
ja
push
ja
clc
mov
sbb
ror
pop
xchg
mov
lahf
psubq
jns
aas
outs
int3
inc
or
std
mov
push
cmc
icebp
mov
in
test
push
pop
fdivrp
in
pop
ja
or
push
bound
mov
test
jno
pop
sbb
inc
xor
xchg
fimul
ret
xchg
add
cwde
ins
pop
jns
imul
test
mov
cdq
out
mov
out
pop
or
rcr
xor
pop
push
xchg
ins
pushf
and
cld
addr16
cld
jl
push
push
aam
adc
jmp
jne
daa
adc
sbb
in
cmc
push
cmc
mov
repz
mov
or
leave
push
out
pop
lods
in
and
mov
push
hlt
push
push
jb
cmp
shl
iret
rcl
xchg
inc
mov
adc
push
dec
adc
cs
jo
repnz
(bad)
mov
inc
mov
mov
or
xchg
sub
jl
(bad)
pop
push
div
xchg
sbb
scas
or
dec
aaa
jl
adc
inc
inc
imul
or
mov
movs
fidivr
pop
sub
cdq
lods
mov
pmaxsw
adc
popf
outs
inc
push
icebp
shr
push
xor
fldenv
inc
cmps
or
jecxz
addr16
ins
fstp
push
fdiv
xlat
xor
enter
dec
dec
sub
out
add
sub
gs
outs
cmp
vmwrite
pop
sub
dec
xor
push
imul
fdivr
add
stc
dec
and
add
dec
cmp
and
push
(bad)
fidiv
inc
jmp
das
shl
into
imul
jae
and
ror
adc
lock
and
xor
mov
jmp
and
pop
inc
jp
add
(bad)
mov
mov
ja
lahf
fidiv
cs
or
adc
and
and
add
lock
(bad)
bound
mov
jnp
mov
dec
jb
lods
dec
loope
addr16
shl
and
(bad)
mov
or
cs
ret
cmps
xor
pop
sbb
cmp
cmp
data16
les
stc
xor
or
inc
jne
cmp
fwait
sahf
outs
xchg
out
gs
sbb
mov
pop
scas
pop
mov
arpl
leave
je
mov
ret
fs
rcl
loop
ret
arpl
jg
add
fld
inc
inc
push
cmps
xchg
inc
jecxz
mov
neg
into
pop
inc
jmp
cmps
hlt
mov
mov
push
mov
jl
call
inc
pop
jg
adc
mov
inc
mov
fs
jae
int3
lds
mov
push
mov
out
push
hlt
xchg
push
push
mov
jnp
mov
mov
fadd
jae
jp
fcom
xor
enter
jbe
repnz
pop
fadd
mov
sub
mov
dec
punpckhwd
xor
ret
mov
xor
push
nop
sub
sbb
arpl
and
mov
sub
lods
lds
pusha
push
call
les
or
sbb
repz
cdq
fsub
xor
mov
inc
loope
inc
stos
push
pop
retf
test
cmp
sar
xchg
push
mov
push
mov
mov
sahf
call
clc
push
cmp
ins
pop
fidiv
(bad)
sar
xor
dec
cs
stos
iret
enter
dec
rcr
pop
fs
pop
adc
or
xchg
test
jmp
mov
dec
outs
xor
daa
mulps
in
push
sbb
popf
mov
mov
xchg
xor
xchg
lods
shl
ret
movs
in
enter
add
call
retf
mov
aad
imul
dec
daa
(bad)
push
repz
neg
adc
mov
das
cdq
fwait
add
retf
enter
fsubr
loop
xor
mov
lods
enter
es
icebp
mov
pop
dec
sbb
push
test
jge
inc
mov
jmp
fsub
shl
in
jb
cmp
cld
jg
retf
inc
mov
pop
mov
jnp
iret
push
lock
rol
fimul
into
push
imul
jo
mov
cmp
aaa
mov
(bad)
xchg
mov
push
lahf
js
cld
or
add
daa
pop
pop
or
mov
aaa
or
leave
(bad)
(bad)
pushf
movs
fdivr
or
xor
mov
sbb
jnp
mov
mov
push
mov
or
cdq
aas
inc
sub
pop
shl
adc
fwait
jg
imul
inc
jno
cmp
sbb
jl
cmovs
jle
xor
gs
dec
push
and
jmp
inc
enter
cmp
mov
mov
sub
push
je
arpl
push
pop
jo
aaa
add
pop
sub
cmovnp
not
xor
(bad)
cmp
jecxz
call
or
inc
imul
adc
mov
retf
popa
rcl
mov
or
adc
cmps
push
push
ins
cli
xor
cli
cmp
fmul
mov
inc
or
lds
out
jae
stc
jo
inc
jg
sub
cmp
xor
ficomp
xchg
pop
cmp
fcomp
test
dec
and
jo
or
push
jnp
out
inc
aaa
pop
mov
dec
rcl
jmp
dec
jo
jne
data16
(bad)
cmp
push
xor
idiv
movs
mov
sub
mov
scas
xor
fs
xchg
test
int3
mov
xor
mov
hlt
jle
sbb
in
ficomp
or
or
mov
push
cld
mov
xchg
mov
imul
jmp
(bad)
adc
add
jo
adc
(bad)
fstp
cmp
jmp
jo
push
js
inc
retf
cld
xchg
retf
repnz
sbb
dec
xchg
retf
fnsave
cmps
add
jmp
mov
dec
das
jle
mov
cmp
(bad)
adc
mov
xor
cdq
inc
das
xchg
aaa
addr16
jnp
outs
fist
xchg
pop
add
jmp
mov
push
stos
mov
cmp
in
or
arpl
out
xchg
and
mov
popa
xchg
mov
dec
fsub
sbb
ficomp
ffree
push
fwait
add
ins
push
test
jmp
dec
mov
push
(bad)
daa
bound
xchg
xor
adc
cwde
jb
sbb
fld
sub
sbb
repz
jo
clc
shl
bound
mov
push
add
jo
or
mov
cmps
aam
add
xlat
pop
call
lahf
inc
pop
xlat
push
mov
mov
pop
jbe
int3
mov
arpl
dec
in
loop
mov
sbb
push
outs
add
cmp
jmp
sub
lahf
ret
retf
shr
idiv
mov
jecxz
ss
scas
les
mov
mov
inc
aad
cmp
jp
ficom
add
mov
loope
xor
inc
jmp
(bad)
sub
jne
mov
repz
cld
lahf
(bad)
stc
clc
cmp
push
ss
pop
cmp
push
sub
jns
not
sbb
jb
adc
push
jg
iret
not
push
and
rcl
dec
inc
clc
stos
stos
into
shr
and
sub
jns
test
shr
popa
dec
movs
sub
fcom
inc
mov
sbb
mov
mov
xor
(bad)
test
jb
test
pop
dec
sbb
cmp
les
clc
fwait
pop
push
jne
adc
push
sub
push
outs
pop
in
pop
dec
pop
xlat
and
call
or
xor
and
pop
ret
inc
test
ds
cmc
ins
xor
cwde
in
xor
(bad)
mov
add
xchg
enter
xchg
pop
push
stos
jb
and
push
xchg
push
or
mov
push
push
(bad)
cld
inc
mov
dec
stos
cwde
mov
pop
fmul
lds
xchg
push
mov
xchg
(bad)
lock
and
jmp
jp
xchg
imul
add
pop
sahf
jmp
cmp
call
jo
in
xchg
xchg
jbe
aam
daa
es
ror
dec
adc
(bad)
sti
loop
fs
jae
push
inc
xchg
leave
(bad)
pop
xor
dec
bound
mov
and
ror
leave
ds
imul
add
and
adc
test
sbb
(bad)
in
cwde
data16
mov
push
ja
div
add
mov
jp
sub
movs
pop
or
popf
fistp
cwde
xchg
loop
clc
mov
inc
int3
daa
jmp
adc
push
iret
sub
push
cmp
(bad)
xor
sub
sti
ror
fsubr
dec
cmps
mov
inc
stos
dec
sbb
ins
pop
jno
(bad)
pop
(bad)
sbb
jg
and
fldcw
int3
mov
ret
cmp
inc
or
fs
gs
lea
sub
mov
sti
push
push
xor
mov
std
pop
arpl
inc
fs
fs
sub
retf
int
pusha
cs
arpl
out
adc
or
ror
repnz
loop
lea
outs
mov
inc
lahf
mov
lods
cwde
(bad)
inc
cwde
inc
xchg
popf
fldenv
push
out
inc
ja
sub
sahf
mov
(bad)
fdivr
aam
jle
mov
xchg
int3
shl
rcr
mov
fisubr
dec
nop
sbb
inc
clc
mov
cmp
rcr
pushf
loop
jge
xchg
pop
or
mov
pop
cwde
push
mov
imul
push
sub
push
pusha
jecxz
leave
cmp
lock
sub
scas
add
jo
xchg
cmp
cmp
aas
inc
jae
outs
ret
daa
dec
retf
out
in
mov
cmp
push
push
outs
mov
mov
ja
cmp
inc
xor
mov
jne
pop
sbb
int3
std
sbb
aaa
enter
into
je
loop
or
adc
xlat
mov
cmp
icebp
fisubr
ins
mov
and
lods
cld
stc
stos
jl
xor
xchg
orps
lea
mov
(bad)
cmc
nop
xor
pop
popa
lods
cdq
pop
rcr
iret
mov
mov
jmp
scas
and
test
mov
aas
data16
arpl
enter
add
mov
mov
dec
or
in
call
enter
adc
push
push
dec
nop
stos
adc
call
jmp
cli
cld
outs
inc
aas
loope
sbb
mov
adc
cmp
mov
push
out
cmps
je
push
call
es
es
fsub
es
dec
mov
cmp
(bad)
xchg
sti
jnp
xlat
mov
xor
sar
mov
cdq
pop
pop
popf
stos
push
xchg
aaa
leave
cli
pop
lods
jno
push
sbb
daa
sbb
(bad)
or
out
ja
xchg
adc
dec
fild
call
js
xor
jno
das
pop
aas
mov
aam
les
push
enter
dec
adc
arpl
movs
jmp
ss
loopne
jne
js
dec
clc
or
or
cmp
pop
call
xor
into
dec
movs
je
sub
bswap
inc
pusha
or
inc
das
nop
lods
xor
or
pop
daa
fs
(bad)
dec
sub
xor
push
adc
cs
jmp
mov
mov
mov
loope
mov
std
cmp
add
cdq
inc
cmp
jg
ret
(bad)
xor
(bad)
neg
(bad)
mov
loopne
pop
aas
inc
push
lahf
sub
scas
into
add
pop
rol
cmps
push
lea
mov
hlt
mov
in
xchg
inc
xlat
jnp
cwde
dec
xor
lds
mov
add
popf
jmp
ret
and
adc
sub
mov
or
or
call
push
adc
cmp
mov
mov
(bad)
pop
xchg
cbw
cmp
pop
imul
ins
outs
ins
jmp
movs
ins
push
test
retf
inc
mov
dec
rcl
push
fwait
(bad)
pop
xor
and
jae
data16
repz
in
int
jmp
aaa
lahf
fs
lods
mov
(bad)
push
jmp
lods
push
loopne
dec
(bad)
push
or
xchg
daa
ins
inc
aas
cmp
dec
test
clc
cmp
jno
dec
xchg
scas
push
lds
jne
and
data16
out
js
jmp
call
adc
idiv
addr16
mov
retf
arpl
mov
(bad)
add
adc
jmp
stos
fcomip
mov
push
mov
out
adc
enter
and
xor
or
rol
jecxz
into
sbb
sahf
xchg
stos
sbb
(bad)
sub
xchg
pop
hlt
or
sbb
repz
add
cmp
test
stos
mov
stos
stc
cwde
dec
sub
adc
jns
inc
pop
push
push
dec
xbegin
sub
jmp
(bad)
add
les
stc
and
fimul
jo
mov
xchg
lds
xor
pop
std
test
sbb
cmp
sub
push
(bad)
scas
shr
lods
stos
lods
movs
test
or
and
xor
mov
jb
jns
clc
bound
rcr
call
pop
sar
call
sub
jle
andnps
fnstcw
call
cmp
ja
in
adc
mov
scas
div
xor
inc
sub
jg
(bad)
cwde
dec
or
inc
loopne
cld
inc
pop
imul
sbb
hlt
xor
push
push
sub
scas
(bad)
sub
jecxz
jmp
push
push
retf
shr
scas
das
pushf
lahf
gs
cld
dec
pop
scas
outs
cmc
lock
adc
xor
loop
les
cmp
mov
inc
ret
fcomp
dec
shl
or
loope
movs
push
mov
adc
cmp
mov
addr16
dec
lds
and
dec
ss
or
call
xor
push
jns
fadd
fldz
and
push
in
push
pop
(bad)
sbb
imul
adc
daa
adc
je
xor
mov
push
dec
outs
bndldx
shr
jge
ret
popf
dec
clc
imul
push
nop
cld
(bad)
push
mov
nop
mov
push
cmc
sbb
add
mov
ja
out
pop
jae
cmp
call
nop
pop
cld
xchg
int3
adc
rcl
test
cmp
lock
mov
mov
test
xor
adc
push
cdq
push
or
bound
stos
dec
loope
dec
es
inc
push
ja
or
sbb
icebp
push
mov
hlt
gs
fadd
(bad)
jnp
(bad)
adc
dec
lea
or
mov
or
ja
js
je
(bad)
push
movzx
mov
mov
(bad)
repnz
sub
arpl
ins
sub
pop
inc
mov
add
mov
(bad)
push
out
jo
mul
mul
push
(bad)
lahf
mov
push
push
push
stos
cs
mov
push
call
pop
xor
sbb
push
pop
ret
iret
rcr
xor
dec
out
test
cld
(bad)
ja
cmc
push
and
movs
xchg
aaa
movs
sbb
mov
sub
repz
jb
stc
jp
hlt
xchg
mov
fild
(bad)
(bad)
daa
mov
arpl
lods
jno
in
jnp
fs
sbb
pop
(bad)
into
cmp
sar
(bad)
dec
sub
test
xor
sahf
mov
pop
cmp
arpl
sub
das
push
lahf
xchg
jg
fnstsw
mov
or
pop
push
mov
mov
push
push
sbb
imul
inc
and
enter
cdq
cmp
lods
loope
xor
cmp
xor
rcr
aam
jecxz
lods
cmps
push
mov
inc
cld
sub
dec
and
inc
mov
sbb
aam
ret
(bad)
jmp
inc
sahf
outs
(bad)
xchg
push
add
enter
mov
fldpi
push
outs
rcr
call
mov
jno
dec
sbb
add
sub
mov
mov
das
jp
shl
lds
inc
out
mov
in
dec
xor
ss
or
in
outs
jg
jno
lahf
sbb
jmp
add
xor
hlt
mov
jbe
push
push
sub
cmps
jge
aaa
add
inc
fadd
mov
movs
xor
cmp
in
stos
fadd
out
mov
cmp
scas
pop
sti
dec
idiv
call
cli
scas
loope
mov
jnp
or
xor
loopne
xchg
sar
retf
push
shl
xchg
pop
jnp
inc
jo
sub
sar
cs
xor
call
sub
cmp
dec
(bad)
scas
jmp
sub
mov
div
test
sub
ffreep
cld
push
mov
push
jmp
cmp
push
fdiv
cmp
xor
sar
loope
jnp
stos
scas
neg
add
cmps
shr
push
ds
ja
imul
and
iret
test
mov
xor
xchg
mov
rcl
enter
jecxz
mov
cld
xor
mov
ss
imul
jmp
xchg
icebp
mov
or
xchg
in
dec
mov
mov
inc
cdq
stos
pop
stos
adc
les
outs
es
test
lds
test
jno
dec
push
cmc
jle
cdq
cs
push
js
add
rcr
fsubrp
dec
pop
(bad)
sahf
jb
xlat
in
leave
bound
loopne
pop
cmc
pusha
lods
xchg
mov
jns
push
arpl
adc
inc
mov
dec
or
pop
or
cmp
fcom
rcl
jmp
lds
scas
mov
outs
inc
sti
icebp
pop
mov
(bad)
popf
fld
jmp
xchg
loop
ret
mov
xor
ins
popf
inc
mov
out
mov
inc
or
dec
jo
sub
xchg
test
out
mov
iret
xchg
ss
jo
xchg
adc
ja
movs
xor
lods
rol
mov
sub
push
out
jo
shl
xor
sub
sbb
adc
stos
stos
popa
rol
out
ja
inc
jnp
mov
xlat
jecxz
stos
mov
add
adc
pop
sub
dec
mov
dec
xlat
mov
scas
push
retf
mov
sar
je
int3
sub
dec
xchg
add
mov
mov
icebp
loopne
add
call
or
imul
(bad)
jmp
sub
mov
xor
mov
xchg
cld
xor
pop
lods
jmp
leave
outs
test
fisub
dec
bound
js
mov
shl
pop
adc
add
aas
sub
jb
das
daa
mov
sub
mov
std
add
jns
pop
inc
lock
jmp
fwait
cdq
jmp
add
push
sub
mov
jg
push
mov
std
mov
jbe
lods
add
jp
or
imul
fld
or
lods
xchg
and
pop
ja
mov
pop
rol
ds
mov
lods
sti
push
add
or
push
div
inc
xchg
push
add
xchg
icebp
xchg
mov
not
gs
add
retf
pop
sbb
adc
out
mov
int
or
fistp
test
shl
out
sbb
jbe
call
sbb
or
xchg
adc
popf
fisubr
mov
jne
call
lock
rol
stos
sbb
fild
fdiv
(bad)
retf
retf
ss
gs
mul
scas
add
xlat
ret
iret
(bad)
(bad)
push
cmp
xchg
aad
ror
pop
std
mov
aas
jge
call
lock
xlat
cmc
pop
repz
sti
cmps
pop
inc
je
adc
nop
aam
or
inc
cmp
mov
and
mov
add
sbb
mov
push
test
sub
pop
cmp
loope
mov
fwait
adc
fadd
sbb
mov
push
ret
xor
adc
ret
mov
jp
or
xor
add
std
cmp
jmp
jae
test
or
pop
fisttp
cmps
imul
(bad)
mov
dec
xor
mov
cmp
jne
jns
mov
les
dec
mov
sbb
dec
sbb
je
scas
mov
lods
je
sub
es
push
push
mov
add
(bad)
and
sub
test
xor
mov
retf
(bad)
xchg
and
mov
xchg
test
outs
cs
xlat
mov
repnz
cmp
pop
push
addr16
scas
cmc
mov
aaa
aad
or
mov
xchg
sbb
sbb
daa
or
jae
sar
dec
daa
shrd
movs
shl
mov
mov
add
sub
pop
mov
xor
inc
pop
pop
jecxz
mov
mov
xchg
not
mov
cwde
jo
jb
push
jmp
xor
test
pop
sbb
pop
into
ins
mov
fwait
sahf
mov
push
push
sar
xchg
lock
cmc
adc
pop
fst
ins
jo
pop
mov
out
and
inc
fistp
movs
mov
pop
mov
test
aad
mov
inc
pop
xor
in
mov
mov
icebp
xchg
fidivr
mov
call
test
jmp
test
aas
jg
xchg
popf
cmps
js
sub
aam
fbstp
mov
sbb
or
xor
mov
cs
xor
loopne
mov
imul
and
enter
xor
in
(bad)
fidivr
pop
or
mov
and
outs
and
or
sbb
push
pop
sbb
call
or
xor
mov
xor
mov
dec
sbb
mov
jecxz
mov
cmc
(bad)
fdiv
pop
inc
lods
(bad)
aaa
outs
mov
pop
out
sub
mov
call
stos
add
mov
gs
test
sub
xchg
mov
mov
cmp
mov
repz
inc
jg
add
pop
scas
sub
pop
aas
xchg
jnp
pop
pop
xchg
mov
or
loop
aad
sub
fstp
or
sbb
icebp
xor
ror
loopne
or
jns
jmp
mov
movs
lahf
cdq
stos
je
std
ins
mov
mov
or
jmp
push
mov
cmp
dec
inc
test
sbb
jp
dec
or
loopne
into
int3
xchg
and
ja
dec
nop
out
mov
es
mov
test
inc
jae
push
mov
jle
iret
cmp
outs
leave
adc
add
or
xchg
sbb
enter
dec
and
mov
(bad)
cmps
jae
add
xlat
inc
retf
pop
pop
mov
sub
test
pop
lds
push
xchg
stos
sub
pop
pop
dec
mov
add
or
ins
arpl
fnstcw
test
jno
pop
jbe
fild
and
movs
jg
into
xchg
add
add
xor
(bad)
or
mov
stc
cdq
lea
mov
aaa
mov
jmp
mov
xor
ret
stos
xchg
out
(bad)
dec
cmp
inc
aas
mov
push
sti
or
adc
inc
cmp
daa
ds
clc
data16
add
mov
adc
adc
(bad)
loope
shr
inc
mov
add
mov
dec
adc
aam
gs
mov
scas
pusha
sbb
idiv
fcmovnu
mov
jle
sahf
sbb
mov
and
fdivr
dec
pop
dec
int3
jb
neg
and
(bad)
or
outs
in
add
push
xchg
fdivr
fild
xchg
inc
les
mov
test
and
enter
sbb
(bad)
jp
and
loope
jne
cwde
call
ror
adc
leave
js
inc
stc
mov
push
pop
repnz
xchg
and
lods
inc
jnp
push
xchg
loopne
sub
mov
mov
xchg
and
imul
or
xor
mov
scas
ss
push
test
jmp
icebp
jb
add
repz
outs
mov
pop
push
jge
sub
and
retf
xchg
hlt
outs
(bad)
jmp
cmps
or
jge
inc
add
outs
push
jecxz
add
je
or
mov
dec
leave
inc
iret
dec
test
out
dec
loop
xlat
pushf
cld
ins
test
mov
inc
pop
xor
pop
add
(bad)
test
cld
sbb
dec
jae
call
cmp
adc
(bad)
and
popa
lods
movs
(bad)
call
cmp
cdq
ins
add
dec
mov
fwait
adc
and
jg
add
imul
push
xchg
jbe
call
lahf
out
add
mov
test
dec
push
mov
es
xor
cmps
or
ret
ret
fcomp
cmp
popa
cli
mov
(bad)
arpl
pop
add
in
stos
lds
cmps
jecxz
push
in
mov
push
call
push
cmp
(bad)
retf
cmps
popa
popa
and
outs
fidivr
scas
xchg
jbe
popa
imul
add
popa
sahf
enter
and
pusha
mov
stc
cwde
push
(bad)
pop
pop
sbb
es
loop
add
movs
loop
cli
add
adc
add
mov
fistp
cmps
adc
mov
mov
push
push
inc
jecxz
xchg
loop
stc
sar
pop
in
imul
and
sub
mov
fsub
mov
pop
xchg
aam
jne
outs
mov
lods
ss
outs
in
(bad)
mov
ja
je
pop
lahf
test
mov
xchg
cmp
lahf
sub
std
fwait
ins
pop
adc
mov
or
cmp
pop
imul
aas
hlt
dec
movs
ror
jecxz
xchg
jnp
mov
cld
in
call
xchg
sub
cmp
movs
scas
pop
loop
mov
call
(bad)
push
scas
enter
cmc
(bad)
(bad)
(bad)
call
mov
mov
je
pop
mov
movs
push
push
dec
call
pop
push
fsubr
adc
jno
movs
pop
adc
popa
jb
retf
mov
and
jnp
and
jno
into
mov
aaa
daa
xchg
jmp
xchg
cmps
ss
add
mov
adc
jp
cmp
jae
imul
jmp
ins
cmp
sub
push
sub
xor
sbb
jmp
int
add
sbb
fucomp
mov
sbb
cmp
les
sahf
add
test
outs
gs
mov
xor
mov
push
stc
jb
mov
add
mov
mov
fidivr
jb
movhps
cdq
les
scas
ins
movs
sbb
in
pusha
mov
imul
fisub
fdiv
out
xchg
out
xchg
fidivr
jae
loopne
call
cmp
inc
or
in
xchg
mov
fwait
bnd
scas
outs
mov
sahf
cmps
in
les
xlat
lods
sbb
sar
push
inc
xchg
and
leave
and
les
pusha
sub
xlat
scas
test
jno
outs
mov
bound
push
mov
mov
test
loopne
dec
test
mov
xchg
ret
out
fimul
mov
dec
jl
pusha
sar
dec
sti
(bad)
repz
shl
mov
jno
mov
inc
jns
retf
add
stos
(bad)
cld
(bad)
out
ss
pop
outs
add
pop
mov
repnz
mov
xor
fnstcw
push
int3
loop
pop
xchg
mov
mov
outs
xor
xchg
rcr
rcr
test
dec
and
mov
out
cmp
dec
ss
mov
(bad)
mov
int
shl
pop
cvtps2pi
mov
xlat
(bad)
push
jns
xchg
(bad)
shl
mov
pop
mov
add
sbb
fwait
and
or
dec
scas
jecxz
inc
add
scas
sub
test
cdq
mov
in
sub
dec
and
imul
jp
and
jae
jl
hlt
sbb
add
ins
mov
dec
add
adc
dec
sub
jo
cmps
movs
xchg
cld
jnp
and
loopne
fwait
iret
arpl
jecxz
push
mov
xchg
cmps
out
xlat
xor
iret
icebp
adc
or
xor
xchg
fisttp
push
sbb
dec
ret
(bad)
(bad)
jg
cwde
jbe
sbb
ret
ret
ja
xor
cwde
in
push
imul
hlt
mov
es
mov
xchg
dec
sbb
xor
inc
dec
push
and
rol
(bad)
cmp
addr16
sub
and
fs
inc
add
dec
jecxz
cmp
lds
dec
cmp
cmp
and
push
push
add
rcl
sar
rcl
cdq
cs
sbb
lahf
xlat
adc
ss
push
in
jmp
sub
sahf
repz
(bad)
mov
imul
out
dec
or
jecxz
mov
inc
mov
nop
ror
(bad)
ja
fcomi
pop
xchg
xchg
out
movs
outs
hlt
rcr
in
sbb
bound
jecxz
js
(bad)
int
mov
dec
and
ss
in
mov
jbe
mov
jae
shl
mov
fnstenv
outs
out
and
loop
jle
inc
pusha
add
jmp
mov
add
fucomip
out
cld
jp
leave
or
into
xor
or
xlat
dec
adc
inc
add
inc
mov
inc
pop
mov
jo
fs
jo
pop
icebp
cmp
and
(bad)
movs
pop
jns
sub
and
(bad)
fst
pop
out
sub
sub
push
xor
pop
jecxz
mov
pop
and
std
sbb
stc
jmp
mov
mov
sahf
mov
mov
les
jl
jle
je
jns
mov
mov
shr
adc
mov
addr16
ins
(bad)
aaa
xor
icebp
jo
aaa
xor
out
jns
inc
popf
mov
push
fisttp
out
ret
gs
test
and
data16
jmp
sti
xor
pop
xchg
dec
mov
cmp
push
icebp
leave
fdivrp
loopne
cld
dec
out
mov
dec
fdivr
add
xchg
or
mov
pop
ds
test
mov
mov
cmp
cmp
bound
fdivr
lahf
aaa
iret
(bad)
adc
sub
push
retf
aaa
add
pop
mov
lea
pop
push
test
add
loop
adc
cmp
and
xchg
fist
push
aad
repz
push
movntps
inc
int
mov
cmps
shl
xor
push
push
cdq
lods
inc
addr16
std
mov
and
in
or
clc
jns
and
cmp
xor
jl
in
push
retf
ret
mov
retf
mov
lds
mov
push
movs
lock
xor
les
rol
div
sub
nop
jl
mov
mov
(bad)
out
add
test
faddp
sbb
sbb
lock
inc
add
pop
mov
test
sub
push
dec
and
pop
mov
pushf
push
mov
fst
ins
or
cmp
xchg
cmp
lock
popa
xchg
sahf
xor
in
jo
push
mov
jae
das
(bad)
and
ret
adc
pop
imul
in
adc
test
mov
push
mov
mov
jge
scas
stc
hlt
dec
mov
xchg
into
in
dec
mov
push
dec
aam
cmp
dec
push
mov
push
push
sbb
add
adc
(bad)
bound
mov
lods
xor
dec
mov
in
popa
inc
xchg
jg
fst
test
sub
mov
popa
sbb
in
pop
leave
addr16
fdivr
arpl
sahf
and
mov
and
pop
sub
mov
inc
sar
repnz
add
outs
dec
inc
cmp
data16
dec
popa
inc
dec
mov
loop
dec
mov
or
adc
shl
push
pop
repz
or
jl
add
sub
push
jb
(bad)
xchg
pop
(bad)
and
xchg
jl
(bad)
outs
(bad)
jle
(bad)
push
pushf
enter
jge
mov
add
sbb
clc
movs
(bad)
jmp
test
stc
xor
call
rcr
jmp
adc
pop
sti
mov
adc
test
add
fsub
retf
je
sub
loopne
movs
cwde
mov
dec
fdivr
addr16
sub
cmps
mov
mov
inc
dec
popf
push
repz
aaa
dec
mov
scas
xor
adc
mov
hlt
inc
xor
cmp
and
xchg
daa
int
(bad)
or
shr
dec
mov
dec
add
(bad)
test
imul
pop
mov
and
das
mov
mov
adc
add
or
push
push
and
cli
fwait
cs
cmc
dec
lods
push
add
mov
sbb
xlat
cmp
jp
mov
jno
sbb
gs
hlt
(bad)
js
fisub
es
push
es
add
add
adc
idiv
stos
popa
imul
mov
pop
out
loop
mov
mov
cmp
xor
pop
add
mov
add
sub
fld
ror
push
mov
and
imul
add
or
jp
mov
inc
push
loopne
sbb
jo
jbe
mov
xor
mov
aas
cli
push
stc
dec
jmp
xor
shl
lahf
mov
dec
pop
jne
ret
mov
fld
leave
pop
xlat
sub
out
cmp
mov
xchg
cli
fld
enter
fist
pop
aam
xchg
adc
das
test
in
shr
lea
arpl
std
ret
mov
pop
pop
fwait
dec
fldenv
cmps
dec
dec
cmp
cmp
enter
fs
cmp
adc
cmp
ficom
sub
mov
jae
sahf
repnz
xor
in
sub
adc
push
fs
ret
loope
ret
sbb
in
nop
push
sahf
cmp
dec
and
rol
jae
mov
mov
scas
in
cmp
push
push
jg
arpl
popa
jne
lea
mov
inc
bound
sub
push
mov
pop
sbb
or
sub
sahf
fcomip
aas
bound
cwde
mov
pop
mov
mov
push
inc
shl
fdiv
test
xor
jo
adc
sub
mov
cmps
test
mov
xor
pop
in
aas
(bad)
mov
inc
ds
into
sbb
add
repnz
sub
adc
and
mov
jne
call
inc
stos
ret
ins
mov
cmc
pop
(bad)
in
js
je
hlt
retf
xchg
cmps
push
arpl
adc
icebp
pop
les
idiv
mov
aad
fld
bswap
stos
push
sbb
mov
jae
arpl
ror
call
xchg
mov
cwde
jl
mov
xchg
icebp
sub
push
addr16
sub
pop
cmp
pop
and
mov
pusha
aam
inc
int
sub
sub
fdiv
fadd
icebp
out
sar
pop
mov
mov
jge
ins
inc
pop
in
xchg
mov
pop
xor
sti
loopne
mov
stos
xchg
loopne
xor
xor
push
push
push
pop
movs
add
not
jg
in
jns
push
(bad)
movs
ror
lds
mov
aam
mov
jle
dec
out
fidiv
jge
mov
jg
mov
out
xor
aad
push
sub
sub
xor
pop
xlat
push
mov
outs
jb
(bad)
movs
inc
(bad)
and
mov
aam
sar
xor
ins
sub
lods
xor
sbb
sub
pop
add
imul
inc
inc
scas
jg
dec
cmp
fld
shr
add
cmps
sbb
push
mov
mov
inc
mov
or
dec
mov
mov
add
imul
dec
mov
push
jae
stos
imul
pop
out
inc
or
scas
or
int3
xchg
addr16
shl
test
inc
pushf
rol
adc
bound
cmp
jecxz
fisttp
mov
adc
cmp
sub
mov
arpl
cmp
inc
call
or
add
gs
repz
stc
(bad)
cld
add
xchg
aaa
cmc
dec
sub
cmp
jo
xchg
dec
inc
jns
push
js
in
pop
adc
in
pop
lds
mov
cli
fild
enter
fwait
push
jmp
jle
test
add
dec
mov
fldcw
or
adc
or
mov
pop
cmp
mov
jae
push
pop
mov
fdiv
(bad)
or
movs
(bad)
lods
jmp
in
sub
push
fldcw
xchg
add
pushf
movs
sahf
and
les
aaa
cmp
cmps
jbe
test
icebp
push
and
das
cmp
stc
sbb
in
mov
not
push
inc
fdiv
push
jmp
loope
adc
addr16
jge
adc
mov
in
ins
aad
inc
jmp
mov
(bad)
mov
icebp
popa
sar
lea
dec
cmp
adc
call
adc
pop
jae
ret
fcmove
xchg
icebp
mov
mov
pop
jl
les
xor
cmc
addr16
mov
lahf
popa
pop
mov
jae
push
push
add
ins
je
test
or
mov
add
nop
pop
cmp
sbb
sub
imul
add
mov
or
xlat
xor
loope
xchg
aaa
xchg
or
stos
mov
bound
inc
pusha
dec
(bad)
xchg
test
inc
adc
sbb
xchg
sub
arpl
fld
or
cli
iret
popf
ins
pop
jmp
and
pop
cmp
(bad)
ds
mov
dec
mov
push
(bad)
dec
in
repz
mov
push
pop
or
xchg
jp
adc
data16
mov
cld
push
sub
pop
imul
pop
mov
sti
out
jle
test
call
mov
cmp
stc
fld
xchg
std
mul
jne
dec
adc
in
mov
jb
add
outs
xchg
test
not
mov
in
jmp
mul
inc
shr
icebp
lahf
das
call
div
fcom
movs
cwde
jp
cmp
rcr
inc
retf
push
test
adc
jmp
ret
outs
mov
mov
push
outs
sbb
stos
out
lahf
ret
jno
or
jno
ins
jecxz
xchg
retf
sti
inc
not
mov
jns
pop
cmp
(bad)
cmp
inc
xchg
cmp
or
jne
in
mov
mov
cs
mov
or
aaa
js
shl
ficomp
pushf
fwait
cmp
pop
jl
dec
clc
dec
aad
in
cli
pop
int3
stos
(bad)
sbb
and
jle
cmp
xlat
lea
out
inc
sti
xchg
outs
add
add
pop
mov
jnp
es
jbe
cmp
cmp
mov
push
test
scas
ror
movs
fs
fdiv
sbb
jns
mov
xchg
imul
or
mov
rol
cld
and
mov
lahf
mov
and
pop
add
cmp
jmp
repnz
lock
loop
shl
adc
xchg
or
es
outs
xor
xchg
retf
aam
outs
fist
ret
dec
dec
cld
out
sub
jae
inc
xchg
add
(bad)
adc
jmp
inc
fnstcw
pop
adc
retf
push
inc
out
dec
test
test
(bad)
jmp
add
jge
je
cmps
cmp
retf
mov
cmps
dec
mov
jmp
mov
jmp
ret
mov
push
add
xor
cmp
add
ins
jne
scas
xchg
dec
ficomp
int
push
or
mov
push
sub
adc
out
dec
push
inc
cmp
mov
mov
(bad)
push
in
or
pop
adc
pop
or
movs
scas
mov
hlt
test
nop
xor
daa
mov
sti
jns
call
rol
pop
xor
xlat
jecxz
jno
cli
call
and
mov
outs
mov
mov
ret
rcr
jnp
mov
pop
ins
mov
adc
mov
stos
or
cmp
sbb
aaa
retf
ret
and
inc
out
sub
js
repnz
ss
cdq
jb
xor
ficomp
cdq
sbb
xchg
sub
rol
ja
bound
fld
dec
rcl
dec
stos
jmp
or
ss
hlt
iret
mov
push
cli
ds
lods
aaa
sub
cmp
stos
and
cmp
mov
inc
pop
inc
dec
loope
xchg
jbe
ja
out
xchg
test
mov
clc
sbb
gs
lds
jmp
loope
fimul
and
cmp
lea
cli
mov
pusha
adc
cmp
inc
outs
das
mov
or
mov
xchg
push
add
sar
adc
mov
mov
movs
or
cdq
out
add
inc
dec
fild
and
jne
daa
xchg
pop
retf
ror
out
mov
sbb
lods
adc
daa
rcl
xchg
sub
push
adc
push
dec
cmc
dec
stos
jnp
sub
movs
movs
fimul
mov
add
jno
add
sbb
xor
sub
or
mov
mov
retf
pusha
cmp
jbe
retf
push
arpl
sti
push
lahf
cdq
push
dec
data16
pop
adc
xor
cmp
push
int
jge
push
ret
sub
jnp
ins
jmp
mov
push
ret
(bad)
cmc
dec
adc
lock
xchg
sbb
dec
xor
xchg
clc
adc
xor
fstp
add
adc
jae
js
mov
out
jmp
jae
adc
outs
fld
shl
ficom
sub
nop
push
adc
call
std
movs
and
aam
fisttp
jmp
(bad)
retf
or
test
jecxz
retf
inc
and
inc
bt
in
arpl
add
add
rcl
push
pop
push
mov
pop
push
lods
and
and
arpl
cmp
cmp
add
and
push
mov
sahf
mov
call
sbb
out
mov
ins
fisubr
shl
add
adc
fsubr
jle
stos
jg
clc
push
(bad)
or
outs
sar
cmc
mov
mov
jmp
mov
xchg
xchg
or
push
inc
in
lock
icebp
mov
mov
call
sub
loope
cmp
fiadd
das
es
mov
fs
sub
cld
add
js
mov
jle
pusha
out
(bad)
sar
push
jae
sbb
je
adc
sbb
pop
ret
add
test
jo
shl
std
imul
mov
outs
pushf
out
lock
jmp
and
leave
and
mov
sub
push
mov
xor
retf
mov
or
sub
add
mov
arpl
adc
push
adc
jae
in
pop
pop
inc
sub
xchg
out
imul
ins
aam
pop
outs
cmc
sub
mov
push
adc
iret
cs
pop
pop
loope
sbb
mov
lahf
movs
mov
cmps
(bad)
push
cmc
adc
push
cdq
or
or
xor
sbb
sbb
jb
inc
int3
sbb
dec
mov
arpl
mov
stos
addr16
out
into
ja
mov
mov
jno
stos
ret
test
ins
loopne
(bad)
addr16
aaa
bound
test
lods
add
sahf
mov
in
mov
pop
sub
pop
adc
jmp
repz
test
jl
sbb
call
popa
into
repnz
jecxz
xor
mov
in
push
nop
fs
mov
adc
int
ror
dec
dec
or
sbb
sub
mov
ja
jbe
push
push
pushf
push
mov
sti
ror
repnz
outs
sub
das
jns
loopne
add
mov
push
lds
call
dec
and
adc
jae
dec
xor
mov
mov
repz
cmp
push
add
xlat
jl
mov
loopne
fcmovnb
into
popa
mov
inc
int
dec
out
sbb
mov
aaa
mov
add
fistp
aad
push
cmp
les
shl
scas
fdiv
repz
push
pop
sub
addr16
cmp
sbb
inc
sub
pop
enter
cli
lods
sbb
sbb
sbb
cmp
outs
jecxz
xlat
jmp
in
fs
(bad)
mov
add
iret
aas
ss
mov
int
mov
add
xchg
cmp
cld
push
loopne
xchg
adc
push
xor
ja
cmp
and
and
imul
or
pusha
outs
out
cli
mov
inc
fldenv
mov
or
leave
adc
popa
xor
or
pop
jle
dec
or
mov
stos
jno
xlat
aam
cmps
in
mov
stos
repnz
jb
dec
pop
mov
adc
fisubr
jmp
add
cld
jle
sub
inc
addr16
js
sbb
push
dec
pusha
mov
fmul
int
jl
sbb
out
popa
ror
pop
jp
js
xor
dec
fild
(bad)
pusha
daa
test
retf
cwde
xchg
mov
pusha
lock
(bad)
imul
mov
aam
ror
outs
add
and
lahf
in
cmp
xchg
fs
mov
mov
jp
sar
iret
sbb
rol
xor
push
scas
mov
cmp
movs
pusha
std
addr16
push
outs
pop
mov
icebp
mov
inc
sub
shl
and
and
inc
out
(bad)
jo
jmp
fs
test
leave
or
mov
jae
out
mov
scas
enter
call
fsub
xchg
sub
lods
xchg
loop
outs
not
sub
mov
lahf
sti
inc
push
mov
in
sbb
push
inc
mov
xor
imul
push
daa
xchg
sbb
fst
lahf
mov
iret
fnsave
out
push
outs
mov
and
pop
imul
and
jb
add
cli
pop
jno
or
(bad)
lock
push
bound
ret
mov
push
scas
clc
xor
imul
fsubr
shl
ficomp
mov
adc
and
mov
adc
push
mov
(bad)
xchg
call
cli
push
xchg
mov
or
sub
cmp
pop
rcl
xor
inc
test
adc
(bad)
shl
push
ss
test
je
cld
scas
arpl
(bad)
lods
ret
dec
pop
addr16
jecxz
jmp
les
mov
and
mov
and
rol
ret
lds
cmp
or
add
mov
daa
mov
inc
cmp
rol
(bad)
shl
adc
or
adc
jae
(bad)
push
add
or
jge
into
aad
(bad)
jecxz
mov
or
cmp
movs
mov
xchg
imul
in
fbld
sbb
mov
jnp
xor
cwde
sbb
pop
clc
fsubr
(bad)
dec
jns
jmp
jns
inc
ins
iret
mov
std
adc
out
jmp
mov
push
(bad)
cmp
xor
sti
popf
and
and
mov
fs
jmp
or
(bad)
sbb
repnz
(bad)
in
jge
jp
fmul
xor
das
or
or
pop
push
lods
push
jno
fs
or
jge
(bad)
pop
cmp
pop
sub
add
js
sahf
ja
lods
sub
xor
fnsave
maxps
mov
push
ret
es
repnz
mov
or
gs
xchg
jmp
add
scas
sub
xchg
bound
aaa
fwait
imul
adc
cmp
pop
sub
jne
cmp
mov
push
ds
pushf
pop
mov
in
out
or
ds
mov
mov
lock
and
rcr
push
loop
cmps
jne
or
call
sar
push
add
les
lods
addr16
cmps
icebp
mov
neg
push
xor
and
jb
fwait
jmp
outs
iret
lea
and
jo
das
push
div
popf
mov
cld
mov
dec
and
or
mov
ror
lods
sbb
sbb
hlt
jnp
jmp
fs
test
(bad)
out
cli
loopne
push
xchg
and
rcr
fidivr
jp
sbb
sbb
jae
in
cmp
scas
xor
pop
push
push
sbb
push
jp
xchg
lahf
sbb
int3
dec
dec
push
retf
out
jl
mov
xor
push
call
pop
ret
xor
movs
pop
or
int3
xchg
pop
mov
imul
movs
xor
hlt
pop
mov
push
sub
andps
or
bswap
jle
or
cmp
xchg
push
dec
cmp
ins
test
dec
fcomp
je
adc
cdq
cmp
xchg
fldenv
cmps
pop
arpl
and
(bad)
jp
and
repnz
xchg
cmp
sti
mov
bound
mov
es
cld
inc
xlat
(bad)
ss
mov
rcr
adc
aad
and
repnz
stc
or
mov
dec
rcr
int
dec
inc
cmps
jo
mov
jns
es
aam
les
or
clc
fistp
sub
ds
test
imul
shl
and
adc
stos
outs
jb
jg
call
sti
jnp
(bad)
int
sub
xchg
jl
stos
dec
lahf
pop
sub
or
popf
add
std
mov
push
add
push
cmps
je
xor
cmp
jnp
xchg
mov
xor
or
sti
(bad)
xor
and
enter
mov
push
push
dec
scas
sub
inc
mov
mov
and
outs
adc
fisub
daa
mov
mov
and
and
or
icebp
int3
xchg
push
mul
push
dec
cmp
inc
mov
out
sub
or
(bad)
repz
cmp
xchg
fisttp
out
add
ins
push
cld
test
mov
sar
mov
push
pushaw
lods
test
imul
or
out
cmc
mov
xchg
movs
push
xchg
jb
in
fidivr
mov
xchg
pop
jge
popa
(bad)
pop
ja
xchg
(bad)
out
jmp
jge
leave
inc
add
push
add
mov
loope
dec
mov
lods
mov
cmp
cmps
jl
inc
push
js
pop
es
and
std
fst
xchg
jl
dec
jbe
push
fstp
(bad)
out
pop
sbb
scas
pop
or
push
or
xchg
sbb
popf
mov
sbb
push
or
sub
mov
arpl
adc
leave
movs
stos
xchg
adc
pop
xchg
call
mov
fwait
mov
(bad)
fist
scas
lods
xor
es
mov
enter
int
and
jmp
mov
mov
cdq
daa
push
aad
(bad)
cmps
in
inc
adc
scas
dec
test
xchg
lds
stos
ins
inc
lock
add
mov
sub
fidivr
out
fs
rcr
stos
bt
leave
jge
jg
cmp
dec
rol
pop
ficomp
(bad)
enter
loopne
lods
sub
int3
pop
xor
test
int3
pushf
and
xor
movs
cmp
jbe
inc
(bad)
cmps
iret
(bad)
push
xchg
scas
inc
popa
mov
or
mov
and
mov
xchg
mov
fcmovb
stos
pop
fst
mov
mov
sti
push
stos
push
stc
xchg
xchg
ror
(bad)
out
jle
add
and
cmc
sahf
sahf
jecxz
push
retf
xlat
fimul
mov
xchg
lahf
ss
cmps
imul
int
pop
retf
enter
mov
shr
add
out
cmp
rol
stc
sub
popa
push
ins
mov
mov
daa
or
xlat
outs
je
push
rcr
psubsw
cmp
push
dec
and
jne
inc
mov
jo
xor
sbb
push
xor
dec
in
scas
ds
jo
sub
xor
je
jecxz
dec
cdq
adc
mov
ret
mov
(bad)
push
and
imul
(bad)
pop
push
adc
imul
loop
addr16
cs
jns
iret
jae
cmp
jl
je
sbb
mul
clc
int
push
xchg
jecxz
push
xchg
cmp
pusha
mov
stos
rcr
stc
gs
pop
hlt
and
out
pop
push
jno
cmpps
cmc
sbb
(bad)
je
cmp
sbb
cs
adc
stos
icebp
ffree
add
mov
xchg
cmp
push
mov
fld
jmp
mov
scas
mov
hlt
dec
push
popf
cmc
jns
emms
test
sub
jmp
cld
push
jb
imul
scas
mov
sub
js
jb
out
cdq
mov
xchg
fadd
xor
shr
pop
xchg
mov
popf
leave
push
inc
sub
mov
push
mov
mov
push
es
dec
cmc
add
sbb
je
xor
lods
fs
mov
cmp
xchg
call
scas
inc
ins
sbb
jae
cmp
push
xchg
inc
jne
cwde
sahf
pop
cmp
pusha
fld
jle
sub
inc
(bad)
rcl
retf
aaa
int
int3
int3
jmp
add
xor
loopne
and
lds
dec
test
jmp
adc
cs
inc
lods
ficom
mov
outs
inc
sub
adc
mov
mov
cld
or
(bad)
jmp
retf
mov
(bad)
mov
(bad)
sbb
aas
xchg
mov
or
pop
ins
pop
jb
push
jb
cmps
mov
jge
sbb
icebp
mov
add
sub
mov
pop
xor
nop
out
outs
fwait
jmp
inc
cmp
mov
cmp
int
push
jmp
cmp
mov
lods
and
jo
mov
mov
jg
cs
aas
or
push
arpl
mov
xor
xchg
jecxz
xor
mul
xchg
jle
lea
fidivr
add
xchg
fucomip
cmp
imul
mov
shr
jb
ja
dec
mov
cs
inc
xlat
out
xchg
add
in
jp
popf
sbb
xor
add
out
jge
lods
jmp
cmps
jle
push
add
mov
push
push
jbe
fdivr
mov
dec
and
pop
not
leave
lock
scas
into
cmps
or
sbb
jmp
repz
imul
loopne
out
or
push
push
add
into
adc
mov
xor
ins
sub
rcr
inc
shr
jns
imul
out
mov
and
std
fidivr
or
pop
push
push
loopne
not
push
or
sbb
or
and
mov
jns
inc
mov
cmp
iret
call
unpcklps
or
add
call
movs
test
movs
xor
in
mov
adc
sub
es
xchg
std
enter
cli
ins
mov
in
mov
(bad)
(bad)
movs
jo
sub
test
clc
shl
pop
enter
cli
push
dec
and
sahf
fisubr
add
push
xlat
retf
add
cmp
rcl
jmp
sub
sub
in
sbb
sub
push
mov
jmp
popf
jo
inc
nop
mov
aad
jmp
mov
jnp
lods
(bad)
aam
inc
and
ja
(bad)
push
sbb
cmp
idiv
cmps
pop
mov
stos
push
test
data16
and
imul
cmp
inc
add
xlat
mov
movhps
leave
jno
jbe
clc
xchg
hlt
fisub
xchg
mov
mov
adc
out
inc
and
jge
cs
cs
call
std
mov
(bad)
adc
leave
sub
mov
repnz
imul
pop
sub
icebp
dec
push
jg
xor
push
xlat
int
pop
stos
jno
jge
movs
test
cmp
movs
cmps
loope
dec
aaa
mov
pop
add
adc
std
sar
push
mov
sub
cmp
test
in
fdivr
push
call
pop
jnp
fild
into
retf
(bad)
cs
mov
stos
cmps
popa
call
inc
mov
fbstp
dec
jecxz
leave
push
and
inc
pop
cmp
int
ins
and
dec
push
dec
or
push
fldcw
or
pusha
push
pop
lods
in
mov
cdq
fadd
and
mov
int3
mov
mov
mov
in
mov
cmp
sahf
(bad)
ret
adc
lods
xchg
adc
sub
lods
xlat
mov
bound
add
dec
test
dec
sbb
inc
inc
cmp
out
xchg
mov
push
loope
cmp
pusha
aaa
mov
rol
(bad)
adc
ins
push
adc
cmp
sbb
arpl
imul
mov
out
out
repz
std
ss
aaa
test
retf
xchg
mov
jmp
mov
shl
cmp
ret
loope
pop
clc
stc
ins
xchg
pop
lea
dec
xchg
out
(bad)
push
lods
lods
jle
repz
cmps
sbb
jp
dec
add
xor
(bad)
enter
mov
(bad)
mov
adc
pop
adc
sbb
rcl
lea
mov
cmp
jl
mov
test
push
jle
mov
ficom
jp
sbb
loopne
lods
(bad)
xlat
xchg
pusha
nop
in
(bad)
out
xlat
ret
icebp
pop
sbb
dec
mov
mov
mov
mov
(bad)
shl
scas
inc
pop
pop
mov
sbb
push
jmp
btc
cmp
std
rcr
sbb
sbb
retf
jnp
jp
or
push
out
movs
cdq
mov
add
sub
ja
daa
retf
rol
lock
test
sbb
xchg
ror
cmp
adc
and
adc
mov
or
add
ss
push
jge
out
hlt
or
cs
adc
inc
lds
or
test
mov
stos
cdq
push
(bad)
push
retf
mov
das
mov
ror
sub
call
mov
sahf
pop
(bad)
daa
xchg
adc
out
jle
cmp
jae
or
les
cmp
cmp
out
and
push
pusha
pop
sbb
push
in
retf
movs
fcmovb
test
xchg
loope
xchg
sti
jno
xchg
(bad)
jmp
adc
and
mov
daa
xchg
lea
ret
pusha
gs
rcr
test
dec
or
shl
retf
mov
neg
cs
sub
jge
inc
xchg
jle
push
sar
mov
cmp
imul
repnz
sbb
mov
int3
fdivrp
mov
cmp
in
mov
aaa
or
and
lea
jmp
push
repnz
pop
(bad)
mov
cmp
jo
add
aas
push
xchg
pop
fadd
stos
nop
mov
scas
jmp
mov
repnz
bound
nop
fisttp
fnsave
jle
movs
pop
jp
sbb
jp
pop
lock
add
mov
call
add
out
lods
add
dec
mov
mov
in
mov
stc
arpl
push
inc
or
mov
(bad)
mov
or
xor
adc
jnp
xchg
mov
lods
dec
xor
xor
pushf
dec
or
loop
cmc
(bad)
mov
jg
mov
sbb
dec
inc
lods
test
push
cwde
stc
ret
sub
or
ss
in
xchg
stos
mov
lods
sahf
pop
cmp
lds
jmp
imul
jne
mov
push
imul
pop
fst
test
leave
lahf
das
sub
iret
(bad)
stos
push
or
js
mov
inc
mov
xlat
and
jg
std
je
aaa
dec
js
sbb
lds
out
lea
leave
imul
dec
in
stos
inc
xor
in
movs
jp
lods
js
push
xchg
nop
loop
jge
loope
dec
or
in
pop
ja
call
pop
add
jecxz
sbb
sub
ins
push
(bad)
and
jmp
xchg
stos
leave
add
pop
call
lds
(bad)
in
mov
push
mov
retf
pusha
xor
int3
(bad)
in
cmp
repz
(bad)
pminub
(bad)
adc
jnp
push
shr
jmp
retf
fwait
xor
lods
cld
ss
mov
test
add
mov
into
outs
mov
pop
fwait
(bad)
adc
(bad)
fwait
scas
cmp
retf
jns
jnp
inc
sti
dec
add
add
mov
push
pop
dec
bound
xchg
push
inc
test
ja
mov
out
imul
std
cmps
mov
pop
fnstsw
ins
dec
or
int
xlat
jnp
inc
pop
jbe
aaa
retf
sti
cdq
jae
cmp
mov
xchg
inc
push
and
sub
sbb
adc
fistp
and
fdiv
jmp
adc
push
xor
repnz
(bad)
movs
ror
into
aas
dec
mov
push
repz
icebp
enter
dec
rol
sub
pop
xchg
mov
push
mov
(bad)
outs
dec
add
test
rcr
inc
mov
stos
(bad)
lahf
pop
imul
cmc
jg
ins
or
out
sub
mov
in
scas
div
mov
fld
pop
call
and
mov
iret
mov
outs
add
jbe
jbe
pop
outs
repnz
push
(bad)
clc
neg
out
push
pop
inc
mov
jp
clc
push
and
mov
sub
add
sub
adc
retf
xor
jl
ss
sbb
fiadd
mov
add
dec
jno
ins
sbb
adc
repz
stos
clc
or
and
dec
mov
xor
aam
jae
adc
inc
out
jnp
dec
xor
arpl
inc
mov
mov
fincstp
inc
imul
jns
scas
push
jnp
mov
add
push
mov
ss
adc
imul
aas
ds
lds
adc
xchg
xchg
inc
jb
and
push
aaa
cmp
mov
xor
push
rcl
jmp
(bad)
cmps
popa
inc
ja
push
(bad)
sti
dec
lods
sub
das
bound
xchg
sbb
pop
fs
jae
jmp
pop
scas
cmp
lods
or
cmp
mov
add
inc
daa
cdq
and
add
test
sub
jge
loopne
dec
mov
add
and
mov
(bad)
mov
fild
inc
mov
inc
jae
popf
pop
dec
ror
jns
and
mov
int3
out
or
mov
inc
cdq
and
push
cmp
xchg
mov
or
dec
push
int3
jecxz
or
dec
aaa
movs
not
push
cmp
daa
jecxz
jmp
out
mov
push
leave
and
mov
enter
jg
xor
scas
test
mov
loopne
or
cmp
push
test
sbb
add
mov
out
fmul
mov
mov
dec
popa
pop
mov
out
aaa
mov
sbb
xchg
icebp
sbb
cli
pop
inc
jl
stos
fsubr
test
push
jl
or
cmp
in
jl
pop
les
sbb
cwde
jns
hlt
repz
inc
pop
gs
xchg
cmps
test
xchg
pop
xor
in
int
jp
sbb
adc
push
pushf
sub
cld
xor
out
je
popf
add
fsubr
xchg
dec
nop
mov
push
imul
fisubr
je
add
sub
loope
iret
pop
into
neg
mov
mov
leave
pushf
push
out
sbb
mov
test
adc
and
mov
jae
xor
mov
ins
push
outs
dec
pop
lds
jo
(bad)
not
aas
imul
inc
mov
lods
call
or
in
sub
in
jmp
push
inc
es
bound
stos
cmp
outs
mov
(bad)
jecxz
push
adc
cli
inc
imul
fistp
gs
and
in
imul
into
push
addr16
dec
push
je
call
scas
jmp
or
push
sbb
gs
xchg
test
mov
outs
push
or
clc
and
stos
lds
or
mov
dec
popf
imul
xchg
lahf
xchg
call
xor
jp
lods
(bad)
sub
fcomp
pop
stc
fcom
in
popf
jb
mov
xor
or
les
lods
ret
sbb
retf
hlt
sub
cmp
pop
jmp
push
pop
mov
inc
or
inc
cmp
sub
or
sub
mov
push
xchg
or
cwde
(bad)
mov
aad
xchg
out
mov
mov
xor
into
nop
outs
xchg
push
xor
out
nop
les
adc
fs
ins
outs
xchg
dec
arpl
gs
add
mov
add
xchg
jmp
clc
add
dec
mov
cmp
sti
push
sub
outs
xchg
or
pop
inc
(bad)
push
or
shr
sbb
and
out
imul
or
pop
xchg
pop
in
pop
inc
mov
sbb
push
enter
dec
sub
mov
add
or
cmp
idiv
mov
call
push
stos
jp
inc
xchg
xor
or
bound
add
sbb
repz
ficom
xor
out
dec
xlat
mov
pop
jge
and
jae
jnp
adc
stc
rcl
in
mov
shl
or
mov
xor
add
mov
aaa
xor
fs
nop
mov
xor
adc
xor
mov
(bad)
(bad)
fsubr
test
push
xor
mov
ss
pop
mov
sti
adc
sbb
nop
cmps
ins
int
es
jne
jge
add
mov
fadd
aam
adc
mov
mov
mov
retf
(bad)
xlat
inc
test
fwait
jecxz
add
dec
mov
imul
cmps
in
fistp
xor
ret
in
pop
adc
xor
loop
push
loope
jno
shl
xor
stos
daa
jl
jb
in
ss
sahf
xor
add
xor
popf
add
popa
pop
ds
fcmovne
mov
mov
test
and
ret
in
sbb
inc
dec
adc
ret
lods
mov
xchg
jno
mov
jb
lds
nop
fsubr
mov
xor
aad
dec
scas
lock
add
rcl
sub
scas
dec
xchg
sub
shl
ret
out
dec
in
daa
push
and
sbb
push
adc
aas
push
pop
js
jecxz
pop
cmovg
std
push
xchg
pop
ret
sbb
inc
jle
repz
inc
test
push
inc
(bad)
mov
in
test
out
stos
sub
test
mov
sub
in
or
into
iret
inc
call
mul
rol
(bad)
jge
mov
cmp
dec
add
arpl
dec
cmp
adc
jge
push
mov
push
stos
pop
adc
in
lods
fild
pusha
(bad)
in
(bad)
adc
in
jge
cmp
mov
xchg
ret
mov
mov
out
mov
cmp
push
sbb
cdq
imul
and
sar
jo
in
repnz
cdq
push
sbb
seto
fwait
retf
sar
lods
mov
add
pop
and
aam
inc
js
adc
lock
fdivr
inc
nop
icebp
pop
gs
daa
xchg
adc
repnz
sbb
adc
push
out
shr
ficom
ins
aad
cwde
ss
and
adc
in
retf
or
pop
and
push
loope
out
cdq
push
jo
and
cmp
sub
(bad)
cld
aam
arpl
and
frstor
sub
sbb
mov
sub
imul
add
jge
mov
push
ja
into
ficom
outs
popa
mov
push
and
add
mov
mov
mov
sub
xor
arpl
test
mov
movs
inc
xor
je
(bad)
rcr
inc
mov
test
loope
icebp
fist
adc
loopne
dec
jnp
inc
push
inc
jg
sub
mov
and
retf
stos
fs
dec
mov
outs
add
icebp
xor
das
jle
jbe
stc
ja
out
movs
xchg
push
test
mov
and
push
pushf
dec
jle
push
sti
pop
pop
retf
les
jp
xor
pop
mov
cmps
adc
stos
or
arpl
stos
xchg
pop
je
(bad)
mov
xchg
mov
dec
pop
ficom
inc
pop
add
loope
test
cmp
ja
jmp
int
out
mov
and
clc
loop
dec
dec
cs
inc
lds
adc
daa
sub
mov
and
add
outs
and
and
mov
pop
into
mov
rol
cmc
push
mov
mov
fisttp
out
ins
stos
outs
inc
rcr
or
std
fstp
ins
pop
mov
mov
push
mov
lods
add
nop
outs
clc
jb
mov
xor
shr
push
nop
gs
sbb
inc
or
xchg
or
push
loope
daa
sub
xor
movs
sbb
add
test
fsubr
mov
or
adc
das
stc
cmp
cdq
ins
popf
cmp
jo
iret
out
and
dec
push
mov
test
outs
lea
mov
bnd
ss
add
out
inc
pop
das
fistp
add
cdq
ss
ds
xlat
dec
(bad)
push
adc
or
push
shl
mov
jge
jecxz
icebp
pxor
or
out
mov
pushf
jne
test
mov
mov
xlat
shr
inc
jbe
mov
sti
sysenter
(bad)
(bad)
lods
cld
adc
or
jne
sti
int3
call
fldcw
cwde
sub
or
cmp
pop
aas
fyl2xp1
mov
rol
add
xchg
movs
fsubr
xor
sbb
in
call
stos
xlat
xchg
mov
outs
movs
mov
or
inc
jne
lahf
mov
xchg
inc
je
sub
imul
shr
mov
jge
mov
xor
xor
or
dec
repz
imul
jp
cmp
dec
add
jl
clc
push
nop
sub
out
out
lods
xchg
or
mov
(bad)
retf
int3
xor
adc
bound
jns
ja
lods
sbb
test
add
(bad)
in
cmps
cmp
cli
mov
jno
add
inc
stc
mov
popf
sbb
cmps
fisubr
xchg
cmp
jmp
jp
xchg
mov
jecxz
in
and
hlt
xchg
push
mov
add
xchg
jg
mov
mov
mov
out
xor
mov
adc
xchg
lea
cdq
mov
in
jecxz
push
(bad)
call
add
pushf
cmp
cmp
stc
inc
popf
mov
or
rol
lods
gs
xchg
dec
call
pop
xchg
test
lods
ret
fsub
mov
dec
stos
icebp
sar
inc
popa
jg
jmp
xor
daa
cmps
mov
push
je
fld
mov
and
into
mov
push
loopne
(bad)
jmp
loope
pop
adc
dec
hlt
shl
jecxz
inc
adc
dec
xor
xor
pop
dec
pop
jl
gs
ss
mov
sub
nop
cwde
add
movs
add
(bad)
cmp
or
mov
dec
add
data16
mov
dec
pop
pop
je
adc
sbb
jae
mov
sbb
jnp
es
and
mov
imul
push
jle
mov
xor
xlat
xchg
xchg
in
dec
out
gs
adc
xor
mov
xchg
retf
xchg
cmp
aam
out
adc
aam
dec
sub
les
xchg
dec
inc
fnstcw
jmp
data16
(bad)
frstor
xor
dec
pop
sub
mov
xchg
je
xor
iret
add
mov
dec
cmps
adc
sbb
add
popa
mov
and
xlat
loop
pushf
or
xchg
movs
jmp
ja
xlat
clts
pop
div
loop
mov
int
test
add
mov
mov
dec
add
test
(bad)
jmp
or
add
mov
scas
loopne
pop
adc
icebp
sbb
sub
dec
jl
xor
imul
stos
cmp
das
push
xchg
fwait
lods
repnz
shr
dec
sub
xchg
xor
lods
xchg
and
xor
test
scas
icebp
clc
dec
in
loope
and
mov
mov
(bad)
frstor
or
stc
ficomp
mov
adc
pop
push
stos
int3
(bad)
push
xchg
lahf
jg
pop
xor
or
shr
jg
add
daa
adc
pop
adc
in
sbb
sub
cmps
push
cli
xchg
jbe
pop
xor
jnp
iret
cs
xchg
data16
int
iret
out
stos
int
jge
xor
(bad)
arpl
mov
mov
jne
clc
inc
jge
jl
(bad)
mov
pusha
add
aas
hlt
xor
(bad)
outs
dec
rol
arpl
idiv
fs
xor
jmp
in
cmp
jnp
arpl
xor
ret
push
lds
xor
or
(bad)
push
inc
ffreep
jb
lea
les
imul
pop
or
and
rcr
and
pop
xor
out
jae
pop
mov
pop
movs
lods
das
test
push
psubw
xor
mov
mov
sbb
xchg
jb
aad
cmp
lock
pop
xor
inc
jg
xor
out
pop
fidiv
pop
ja
adc
push
push
adc
cmp
sub
outs
dec
xchg
(bad)
aas
xlat
jl
lahf
inc
dec
mov
mov
aad
icebp
(bad)
mov
xchg
outs
pop
jb
lds
or
loop
daa
ret
jns
xchg
mov
cmp
dec
ficomp
inc
scas
(bad)
movs
loop
out
fst
pusha
in
cmps
sbb
repz
inc
shl
shr
pop
mov
jl
dec
shl
mov
cmp
xlat
push
push
nop
xor
in
sti
cmps
push
mov
rcl
mov
push
push
and
mul
aas
sahf
jnp
push
mov
jle
call
scas
ffreep
in
sbb
ffree
lods
fwait
loopne
add
or
mov
retf
xor
retf
jae
call
inc
gs
cmc
and
mov
mov
mov
sbb
sub
and
scas
imul
dec
dec
inc
mov
imul
leave
inc
nop
ss
je
cmps
xchg
mov
pop
cmps
mov
movs
or
dec
push
mov
fdivr
mov
inc
cmp
xchg
setge
add
(bad)
mov
add
int3
push
cmp
fcmove
gs
xchg
dec
aam
xchg
and
cdq
or
test
xchg
scas
jp
inc
mov
add
test
fdivr
enter
add
pop
icebp
cmp
cmp
popf
or
sub
pop
push
xlat
mov
outs
or
inc
mov
jp
test
addr16
enter
mov
pusha
pop
push
loope
cmp
repnz
lods
pusha
inc
out
js
mov
push
pop
arpl
mov
clc
mov
adc
scas
pop
fstp
aaa
loop
sar
mov
cdq
mov
push
pop
xor
fwait
pusha
pop
test
mov
push
lods
call
in
jmp
cli
or
add
cli
and
lods
mul
aaa
jmp
cmp
mov
out
pop
lahf
(bad)
ss
shl
ins
sahf
xor
test
xchg
aad
mov
xchg
ror
xor
jg
lods
mov
ret
aaa
into
retf
pop
fxam
call
call
pop
jp
cmp
sbb
inc
add
sub
mov
fld
clc
jne
nop
enter
loop
scas
pop
shl
daa
aad
add
ins
jae
xchg
inc
cmps
jge
cli
push
and
shl
dec
inc
shr
jecxz
mov
out
cmp
dec
hlt
add
ds
or
add
sub
adc
cmp
ins
test
lea
push
mov
mov
movs
xor
outs
push
jbe
push
punpckldq
ja
jge
enter
jmp
fyl2x
mov
push
js
inc
test
dec
push
(bad)
push
pop
test
jp
fcomp
popa
in
jle
in
push
mov
lds
dec
xchg
xor
aas
sub
in
jmp
fcmovbe
push
inc
loop
and
mov
out
xor
stos
fimul
inc
and
pushf
aam
stc
test
aad
clc
sub
int3
fcmovnb
mov
pmullw
arpl
mov
shl
sbb
adc
test
mov
push
dec
jb
lahf
fwait
cmc
cmp
push
shl
pop
test
xor
nop
fst
(bad)
out
ror
sbb
jne
jmp
loope
xchg
add
rcl
mov
add
dec
add
in
fimul
mov
add
popf
inc
vzeroall
push
je
(bad)
clc
inc
mov
leave
inc
pop
sub
pop
loopne
xor
cmp
(bad)
aas
fs
cmp
inc
xor
aaa
mov
xchg
cmp
loopne
mov
inc
or
pop
cmps
adc
gs
cwde
mov
hlt
pop
ror
scas
ja
sub
popa
xor
jl
dec
out
push
jecxz
xchg
(bad)
into
xor
push
or
mov
ret
das
push
movs
push
mov
inc
cmc
jecxz
xor
call
pop
iret
mov
call
mov
leave
or
aas
jle
and
push
add
mov
mov
stos
sbb
je
inc
pop
dec
inc
leave
mov
(bad)
clc
dec
lahf
add
xor
sbb
repz
pusha
loope
cli
in
pop
jbe
jmp
out
(bad)
and
inc
adc
scas
sub
movntps
cwde
std
in
scas
and
(bad)
cmp
rol
and
xchg
ret
in
dec
xchg
ins
dec
into
out
xor
sub
push
js
pop
fwait
pusha
or
xchg
movs
cmp
push
xchg
jo
xor
add
call
inc
rcr
sub
mov
jp
sub
fld
imul
jno
out
xor
js
das
popf
lods
(bad)
mov
jecxz
pop
or
arpl
pop
leave
mov
rcl
cli
inc
or
int
shl
daa
jno
sbb
dec
cmp
cld
inc
call
aam
lds
push
mov
adc
pop
cwde
pusha
xchg
and
mov
inc
icebp
pop
pop
aam
mov
shl
push
iret
inc
push
pop
cld
iret
jne
cmp
mov
es
jno
stos
ins
cwde
iret
daa
stos
jg
add
and
vpcmpgtb
das
pop
xor
xchg
sbb
mov
je
xor
lods
rcl
and
fdivr
cmp
xchg
call
push
aad
mov
and
mov
push
sub
sbb
out
jge
add
lahf
pushf
xchg
adc
iret
mov
adc
jecxz
push
ds
inc
xchg
(bad)
(bad)
pop
mov
int
jmp
cdq
mov
jp
movs
loop
ret
mov
jo
or
test
jo
and
dec
scas
sahf
das
jb
adc
outs
aad
cs
xor
dec
mov
fadd
int3
add
hlt
nop
rol
jbe
gs
aad
mov
(bad)
mov
jp
mov
xor
aam
mov
ficom
das
sub
or
int
in
in
push
sbb
dec
iret
pop
int3
adc
fldcw
into
scas
dec
les
gs
push
inc
stos
adc
jnp
xor
imul
pop
dec
and
popa
adc
mov
mov
jl
repz
rcl
xor
jg
xchg
int3
dec
adc
mov
movs
xor
in
push
mov
ret
push
aam
push
and
es
ins
cmc
ficom
enter
repz
imul
scas
bound
pop
fadd
mov
xchg
xor
add
sbb
push
rol
mov
cli
scas
inc
pop
add
test
xchg
adc
mov
jne
cmps
xor
out
xor
push
sbb
jmp
ins
dec
stos
lahf
ss
call
push
leave
or
pop
cmp
stos
sub
dec
pop
xchg
xchg
mov
xor
mov
loopne
push
sbb
movs
xlat
out
xchg
add
cmp
push
mov
repz
mov
push
cmp
test
sub
push
pmullw
lahf
xchg
pop
mov
pop
sbb
sub
dec
outs
push
xchg
sar
and
jle
cmp
jne
movs
inc
cmp
stc
dec
xor
ret
(bad)
push
fist
sub
push
rcl
bound
cmc
push
fdiv
retf
(bad)
pushf
inc
push
push
xor
dec
jge
jno
(bad)
call
fsubr
and
cwde
push
sti
dec
dec
mov
pop
popa
add
int
mov
and
pusha
and
cmps
mov
gs
ins
mov
adc
(bad)
call
or
je
cmp
sahf
mov
push
call
jl
jo
imul
int
inc
mov
mov
pop
(bad)
jg
shr
cmp
mov
leave
xchg
pop
stc
loop
dec
and
sti
push
mov
jg
push
dec
cwde
and
pop
dec
aas
ds
(bad)
out
push
add
ja
adc
mov
(bad)
outs
fst
arpl
lds
int3
mov
lods
sub
sbb
mov
pop
and
jnp
cmps
call
fs
int
js
push
dec
push
mov
push
inc
jns
rcr
xor
pop
sub
jp
mov
das
or
or
and
ror
dec
fdiv
in
stos
push
sti
test
rcr
and
fsubr
call
cdq
fisubr
inc
pop
mov
and
pop
cmp
into
xchg
fld
mov
bound
ret
outs
stos
pushf
mov
test
jmp
mov
mov
dec
cmps
mov
add
dec
dec
jo
adc
mov
push
jg
test
and
mov
push
ds
out
adc
push
sahf
ds
jge
pop
out
std
jl
jl
jg
or
test
xor
push
and
iret
dec
fadd
adc
fistp
into
(bad)
ins
jecxz
xchg
gs
fistp
fld
jl
jmp
shl
or
push
mov
jns
and
sub
iret
pop
mov
dec
inc
fs
add
in
mov
movs
cmp
and
dec
fcomp
cld
adc
imul
push
cld
pop
sti
or
cmps
cwde
lods
push
ret
addr16
and
pushf
sub
sub
leave
imul
pop
fistp
mov
sub
or
cld
bound
loope
push
rcr
mov
or
imul
pop
mov
dec
cli
pop
rol
inc
cmp
popa
inc
mov
cld
push
xchg
pop
popf
fild
or
aaa
es
retf
push
pop
sbb
stc
or
ds
lea
cwde
sub
xor
cdq
(bad)
std
repnz
mov
mov
xor
sbb
adc
aad
or
mov
aaa
adc
enter
pop
je
cs
popf
xchg
shr
xor
imul
pop
rcr
xchg
mov
cmp
fs
sahf
or
dec
xchg
fdiv
fnstsw
lahf
sti
daa
int3
stc
retf
daa
pop
sbb
xor
test
loope
add
and
mov
cmps
push
call
gs
xchg
cwde
lea
cs
cwde
mov
pop
push
adc
(bad)
dec
push
stos
dec
hlt
mov
jge
aad
retf
jmp
pop
out
jae
rcl
jmp
mov
ins
not
and
mov
(bad)
or
mov
(bad)
dec
scas
and
push
js
int3
js
sar
dec
or
inc
shr
mov
xor
es
jno
sbb
jmp
jle
enter
(bad)
mov
test
mov
inc
hlt
fcmove
or
enter
dec
ins
add
rcr
mov
test
int
nop
cli
call
sbb
cld
and
leave
loopne
repz
dec
cdq
jmp
xchg
aas
and
loopne
outs
pushf
inc
pop
adc
mov
lods
mov
inc
xor
neg
or
out
in
and
push
stos
gs
jmp
jb
cwde
mov
aaa
nop
imul
enter
and
and
add
sub
pop
mov
ret
cdq
cdq
ja
xor
int
call
pop
xor
xchg
out
and
mov
sub
je
lds
dec
mov
pop
xor
mov
test
adc
or
sub
mul
scas
sub
aam
mov
sahf
mov
arpl
or
(bad)
and
or
fisubr
mov
mov
mov
inc
and
cmp
imul
inc
sub
daa
push
and
cmp
rol
(bad)
cmps
in
pop
ins
mov
popf
lock
in
pop
pop
push
add
ds
dec
ror
sbb
or
dec
or
pop
retf
jb
inc
out
mov
pop
sbb
sub
loope
mov
jae
fdivr
or
das
div
ds
or
call
mov
add
and
pop
mov
test
adc
iret
sbb
test
xchg
test
sbb
adc
int3
repnz
push
jl
inc
mov
xchg
push
call
imul
sbb
dec
inc
mov
out
ret
mov
xor
inc
push
addr16
sub
sbb
mov
scas
dec
lock
push
add
in
xor
or
addr16
cmp
repnz
pop
fwait
pushf
inc
(bad)
push
mov
test
pop
les
xor
sahf
stos
cmp
or
mov
and
and
adc
jg
and
jmp
rol
lock
fwait
xor
dec
ficom
pop
mov
mov
mov
jne
mov
sub
(bad)
cmp
jg
movs
gs
mul
lods
imul
pop
jecxz
ret
xchg
pusha
xor
add
dec
push
push
cmp
stc
xchg
xor
jg
cmps
or
cli
push
test
outs
imul
dec
jno
in
adc
cmp
mov
cmp
hlt
mov
sbb
iret
pusha
add
loop
jg
test
cmc
out
adc
inc
and
dec
test
scas
pop
aas
dec
jbe
idiv
repz
mov
out
clc
jg
inc
jb
out
data16
mov
mov
adc
cdq
aas
inc
neg
jns
xchg
ret
(bad)
bound
adc
test
or
sbb
cli
lock
int3
sbb
cmps
nop
dec
fwait
mov
int3
stos
cs
adc
out
out
ret
mov
sub
lock
add
(bad)
ficomp
cmp
inc
add
mov
jbe
push
pop
sbb
cld
jns
jmp
out
sar
or
lahf
mov
xor
je
inc
(bad)
mov
adc
adc
out
das
push
xlat
pop
ret
cmps
pop
fnstenv
imul
shr
jbe
or
mov
je
not
loopne
shl
add
dec
pop
and
push
sbb
and
jno
add
lds
xor
add
popf
call
jno
add
inc
fadd
dec
(bad)
and
add
sar
je
and
mov
cmp
jecxz
mov
dec
int
push
aaa
lea
mov
mov
fnstcw
popa
mov
mov
jge
rcl
ror
(bad)
pop
(bad)
mov
xchg
mul
test
and
push
adc
xchg
push
mov
jmp
add
repz
div
xor
push
mov
xchg
adc
mov
or
dec
(bad)
test
out
iret
test
fnstsw
cmp
add
lahf
scas
xor
sti
gs
gs
or
mov
and
sti
dec
or
nop
mov
retf
or
jecxz
std
mov
ins
sbb
fadd
jbe
ret
icebp
repnz
mov
fisttp
stos
or
pop
mov
cs
retf
and
test
out
sbb
or
dec
out
pop
loopne
jle
push
lea
fwait
push
xor
push
ins
int
jne
iret
adc
push
mov
xor
xchg
or
lahf
push
fwait
pop
test
xlat
xlat
cmc
jns
arpl
mov
in
into
movs
push
mov
sbb
lea
shr
test
inc
cmps
add
mov
mov
inc
cmp
xchg
xchg
mov
ficomp
jae
fbstp
cmp
jg
push
xchg
xlat
mov
iret
jge
cwde
nop
dec
and
das
repz
sbb
or
and
sbb
jo
cmp
push
or
pop
and
cs
(bad)
inc
scas
jge
hlt
pop
repnz
jno
in
cli
xchg
dec
enter
mov
aaa
int3
enter
pop
sti
pusha
daa
call
(bad)
pop
out
mov
and
add
sti
cmp
and
popf
repz
cmp
push
sub
jg
sbb
push
outs
dec
movs
xchg
cmp
int3
dec
rep
pop
or
unpckhps
mov
pop
and
inc
inc
xchg
add
in
sub
rol
fidivr
xor
push
dec
mov
dec
push
and
lods
lock
clc
ds
aad
inc
fs
dec
mov
inc
xor
xchg
sbb
adc
pusha
xor
shl
out
addr16
cmp
push
mov
fcomp
mov
dec
mov
js
popa
call
mov
xor
mov
push
dec
xchg
adc
arpl
mov
add
leave
(bad)
loop
loopne
(bad)
mov
jl
pop
test
lods
adc
not
mov
jae
adc
cmc
and
cdq
push
data16
ror
int3
ja
mov
dec
push
add
xchg
mov
outs
xor
adc
mov
pop
sbb
lahf
lea
pop
push
dec
add
pop
jno
xchg
lods
mov
pop
ret
aam
gs
cdq
xor
and
inc
push
inc
push
cwde
push
mov
nop
movs
or
mov
push
div
mov
lds
shr
fwait
mov
xor
adc
push
push
scas
mov
cli
imul
fnsave
adc
cmps
adc
inc
and
dec
lds
or
out
jge
jns
mov
xchg
leave
jp
push
adc
or
dec
gs
push
xor
mov
iret
dec
or
jb
ins
xor
dec
fld
jmp
push
pop
push
js
jge
jmp
pusha
adc
nop
pop
or
jg
cdq
push
lahf
push
dec
adc
inc
inc
jo
dec
call
jle
sub
(bad)
(bad)
movs
aad
or
push
mov
stc
clc
int3
ins
adc
call
outs
cmps
dec
xchg
push
inc
ja
sub
jmp
jo
xchg
and
loop
add
sbb
cmps
rep
hlt
mov
pop
std
and
(bad)
out
jns
sub
adc
sbb
push
pop
pop
icebp
sbb
xor
and
mov
es
add
dec
pop
mov
lods
sub
pop
sub
fadd
call
test
or
jns
into
inc
mov
xchg
shr
pop
xchg
lea
cmp
in
rcl
outs
pop
push
xlat
add
mov
(bad)
aaa
push
mov
jb
xchg
out
pop
inc
mov
sbb
mov
popf
movs
popf
cmp
imul
jp
div
loope
sub
in
inc
cmp
dec
sub
mov
push
(bad)
lahf
and
ficom
xchg
cdq
jne
jl
and
mov
sbb
dec
ficom
jg
(bad)
test
sub
ret
ret
cmp
mov
rcl
into
mov
popa
std
sbb
(bad)
jns
jae
mov
(bad)
mul
adc
sub
inc
or
push
fwait
rol
(bad)
dec
out
sbb
(bad)
adc
or
icebp
ins
rol
clc
sub
clc
mov
mov
repnz
pop
sub
mov
sbb
or
retf
add
pop
cmp
push
mov
jg
ret
sub
sub
iret
sbb
pop
into
inc
jo
push
add
add
inc
rcl
inc
out
test
movs
nop
div
or
stc
or
rcr
lods
retf
push
test
enter
test
and
mov
or
add
pop
and
xchg
xchg
imul
bound
in
sub
push
dec
sub
ja
in
imul
xor
outs
movs
test
or
mov
sbb
lock
sub
ins
fisub
and
pop
inc
hlt
out
mov
fistp
(bad)
mov
fisttp
fild
dec
retf
jp
inc
push
mov
scas
loopne
cmps
cmp
stos
adc
cmp
sbb
cdq
retf
pop
scas
push
std
or
push
jmp
aam
daa
dec
or
sbb
(bad)
mov
sbb
jmp
lahf
and
in
stc
push
rdmsr
rol
or
aad
sbb
sahf
test
adc
ds
fwait
test
icebp
or
iret
add
jle
mov
jns
and
inc
add
(bad)
jp
jbe
imul
inc
push
shr
repnz
ins
add
mov
sti
lock
push
fmul
jl
out
xchg
mov
(bad)
lahf
jle
mov
push
dec
jle
leave
sbb
pop
outs
mov
xor
fidivr
retf
sbb
cs
mov
mov
xor
add
pushf
stos
imul
fs
or
mov
sub
cld
cmp
push
arpl
xchg
ja
ror
mov
mov
mov
sbb
outs
repnz
das
fsubrp
push
test
data16
retf
jbe
pop
cmps
popf
retf
mov
js
add
repnz
cli
mov
inc
call
mov
movs
dec
push
sbb
ret
add
xor
jg
mov
pusha
jnp
mov
jnp
pusha
or
mov
xchg
call
cmp
jl
adc
dec
dec
in
in
xchg
xor
cld
fcomp
cmp
mov
pop
mov
repz
call
aaa
jns
mov
xlat
pop
call
cli
std
jmp
xchg
mov
daa
rcl
sub
push
jno
lock
dec
sub
in
cmp
(bad)
mov
mov
inc
xchg
push
sub
mov
cmps
movs
pusha
fucomi
or
pop
dec
neg
pop
iret
dec
xchg
mov
retf
movs
xchg
mov
mov
or
xchg
sahf
rol
mov
lods
jmp
pop
arpl
sahf
inc
(bad)
xor
mov
in
jmp
sub
xchg
cmp
or
fidiv
imul
push
add
fst
xchg
ins
dec
div
and
jmp
adc
(bad)
cmp
das
fwait
inc
adc
(bad)
in
add
push
fwait
xor
mov
sub
test
and
mov
es
fild
lock
push
cmp
sub
mov
mov
in
xchg
aaa
ins
out
xor
les
xchg
loope
(bad)
mov
ss
inc
shl
(bad)
push
fs
int
sbb
(bad)
ret
adc
mov
cmp
inc
pop
jmp
xor
jmp
cmp
mov
mov
ret
and
lock
leave
popa
adc
lock
(bad)
int
rol
sub
repz
stc
xchg
push
and
mov
add
and
into
push
xor
test
mov
clc
aaa
js
(bad)
into
fst
xor
jnp
mov
std
push
ja
sbb
xor
shl
add
sbb
and
jmp
enter
xlat
lahf
or
or
add
sbb
add
sbb
shr
(bad)
in
fistp
xor
out
rcr
jno
mov
pop
daa
or
mov
jne
icebp
mov
mov
xor
sub
test
jns
cmc
int3
inc
dec
lods
loope
cmp
and
add
jg
mov
dec
jecxz
and
push
ins
test
sub
test
(bad)
mov
mov
inc
cs
ins
lahf
xor
fs
out
xor
pop
push
ins
clc
push
pop
xchg
push
mov
into
outs
inc
inc
loop
mov
jbe
xor
push
push
gs
sub
inc
in
adc
mov
sbb
cmp
mov
scas
push
popa
repz
lods
pop
in
icebp
push
pusha
mov
sub
loop
outs
fwait
loopne
xlat
push
out
iret
ret
lds
mov
mov
push
ror
push
mov
sub
pop
dec
or
nop
cli
xor
mov
or
int3
inc
or
or
jns
call
and
cwde
inc
test
push
push
mov
jns
mov
retf
sub
fisubr
or
shl
movs
push
stos
sar
cs
aaa
or
jne
stos
push
pop
inc
and
jae
pop
aaa
aad
bnd
test
add
jmp
js
outs
aad
enter
ins
xor
enter
or
xchg
pop
lods
sbb
gs
icebp
add
nop
pop
call
add
fild
loop
ins
jp
dec
add
jo
push
lods
add
mov
sbb
mov
pop
push
jmp
and
lock
ret
shl
(bad)
into
sti
call
pop
imul
jnp
dec
mov
pop
cmp
imul
test
nop
ins
and
test
gs
ja
mov
mov
mov
or
in
mov
sub
dec
je
inc
loope
pushf
sti
jae
mov
dec
daa
sbb
lock
test
repz
aam
(bad)
(bad)
int
xor
xchg
fidivr
add
in
dec
imul
enter
sbb
pusha
sub
sub
inc
mov
inc
mov
shl
in
add
int
xlat
pushf
add
out
cmp
jae
cmp
into
es
retf
mov
fbld
pop
test
out
sahf
adc
cmp
and
push
pushf
out
(bad)
adc
lods
and
loop
outs
jmp
mov
push
movs
dec
jbe
fs
or
pop
xor
test
sub
mov
js
js
sub
dec
pop
mov
add
push
rcl
push
pushf
cmp
xchg
mov
push
jnp
sbb
lock
jmp
aas
pop
out
xor
inc
and
aam
into
xor
ror
fstp
inc
les
sbb
test
mov
xor
lds
cwde
xor
cmp
jmp
pop
(bad)
cmp
popf
mov
dec
fisttp
sar
sbb
xor
xor
out
mov
pushf
cmp
adc
test
xchg
and
sbb
and
push
push
enter
iret
push
es
icebp
dec
cs
mov
mov
push
cdq
adc
jl
sbb
es
bound
pop
icebp
mov
mov
test
out
and
(bad)
push
in
iret
jmp
inc
mov
or
push
and
inc
adc
int
sub
lock
pop
sub
inc
inc
jmp
mov
pop
add
mov
stos
jge
or
mov
lahf
sbb
scas
nop
cwde
inc
mov
jp
push
scas
and
not
es
adc
sahf
push
aad
cld
jmp
inc
cmps
shl
fstp
fcom
mov
lahf
dec
push
mov
adc
addr16
lea
jecxz
mov
hlt
fisub
mov
sub
ins
loopne
lahf
jae
push
fsub
cs
into
ror
pop
dec
pop
icebp
ret
xor
shr
outs
xor
mov
(bad)
shr
inc
mov
mov
pop
stos
jne
dec
mov
mov
sbb
(bad)
dec
push
enter
out
loope
sbb
aad
push
and
mov
std
ficom
call
add
push
out
push
mov
add
jbe
push
mov
mov
hlt
mov
adc
sahf
and
pop
jo
jae
or
ret
xchg
addr16
retf
dec
inc
mov
ins
les
ja
mov
mov
mov
fbld
das
loopne
or
push
cmp
mov
push
mov
push
in
es
sbb
ror
xchg
nop
sub
movs
or
sbb
mov
enter
inc
call
(bad)
sub
ffree
inc
jne
jb
cmps
repnz
mov
leave
sub
ins
imul
icebp
imul
sti
loope
jmp
mov
or
mov
or
cmp
cmp
dec
fadd
inc
cmc
popf
scas
in
into
adc
sbb
add
test
adc
call
fnsave
ror
icebp
and
inc
push
mov
rcr
or
inc
push
leave
mov
aad
mov
loopne
pop
ret
popf
dec
and
pop
aas
pop
dec
addr16
dec
pop
in
xor
or
adc
iret
cli
fadd
mov
push
sub
xchg
ret
dec
or
popf
pop
ret
out
jns
out
jp
ins
lock
or
stos
mov
xchg
pop
jg
cmp
aaa
sbb
pop
xchg
mov
xchg
sbb
dec
(bad)
mov
aaa
jno
in
inc
lods
aas
and
retf
jge
bound
sub
movs
mov
add
aam
ret
add
fdivr
into
outs
mov
dec
(bad)
mov
sahf
pop
adc
dec
pop
mov
les
push
fistp
call
pop
jp
sub
lock
add
call
mov
cmp
push
cli
(bad)
mov
leave
test
aaa
jae
repz
xchg
and
js
test
cwde
pop
cmp
sub
mov
icebp
jne
jl
xor
mov
sub
clc
pusha
xor
jl
jae
push
xlat
lods
and
push
xor
sbb
cmp
adc
test
sub
push
pop
stos
loopne
cmps
pop
out
rol
push
adc
inc
mov
call
mov
sti
(bad)
lock
xlat
adc
lock
in
xor
dec
mov
in
ja
(bad)
out
outs
xchg
xor
fwait
pop
call
mov
out
inc
push
sub
jl
and
loop
mov
mov
call
and
imul
mov
(bad)
ror
adc
jno
xchg
bound
pop
sbb
xchg
jbe
maskmovq
cmp
mov
jp
and
push
xor
test
repnz
cmc
and
loopne
idiv
jne
pop
push
imul
(bad)
sub
xchg
dec
mov
loop
mov
stc
in
push
jno
repnz
add
aad
jl
mov
std
out
mov
ja
adc
(bad)
js
in
add
cmp
pop
pop
ins
lahf
shl
sub
cmp
add
jae
loopne
loopne
fld
mov
stos
inc
inc
popa
xchg
jle
dec
xor
cmc
gs
test
cmp
jp
inc
fbstp
imul
(bad)
xchg
mov
adc
stos
cmp
dec
fistp
push
mov
inc
add
(bad)
iret
push
cmp
(bad)
pop
je
sbb
adc
sbb
aad
dec
ins
cwde
jge
imul
sbb
cli
dec
aad
shr
jnp
test
mov
int
and
or
stos
cli
push
push
pop
push
xchg
aas
or
sub
lock
cmps
pop
ror
(bad)
cli
pop
dec
scas
inc
(bad)
sbb
cli
pop
nop
out
repz
test
xor
jno
(bad)
mov
xchg
push
xchg
pop
jae
mov
popa
add
scas
lahf
jecxz
and
movs
dec
enter
xor
push
push
dec
test
cmp
and
sbb
mov
pop
stos
adc
es
or
out
inc
cmp
inc
setb
hlt
jge
adc
arpl
xor
stos
outs
(bad)
bswap
(bad)
test
dec
jecxz
retf
call
and
or
aaa
shl
push
inc
inc
scas
jle
adc
cmp
xchg
(bad)
(bad)
fxch
aaa
sub
dec
cmp
sbb
inc
lahf
jmp
push
repnz
(bad)
sti
push
jo
pushf
or
sbb
cmp
test
adc
mov
retf
ror
cmps
(bad)
add
jle
cmp
push
inc
cld
push
fidivr
or
iret
and
jle
cmp
and
cmp
push
retf
jmp
stos
mov
cli
imul
mov
inc
retf
rcl
sub
enter
pop
aad
xor
or
fadd
es
fiadd
xchg
mov
repnz
inc
call
add
stos
or
test
mov
shr
inc
push
push
jne
popf
mov
cli
fucom
enter
mov
outs
adc
jmp
mov
and
pop
mov
jae
ins
ja
jns
leave
mov
fdiv
fidiv
pop
ds
sahf
loopne
data16
jl
xchg
xor
inc
jb
mov
pop
mov
sbb
sub
test
ror
sub
stos
sbb
test
and
pop
cmp
mov
jle
ss
inc
mov
cmp
clc
pop
rol
enter
enter
xor
ds
xor
push
add
cmc
jno
mov
add
arpl
inc
shl
adc
aad
cld
add
push
movs
jae
aad
adc
mov
inc
mov
xchg
xor
mov
mov
push
xor
ds
or
xchg
jbe
fwait
aaa
outs
loopne
inc
test
push
aad
mov
mov
add
vmovupd
xor
mov
jge
inc
cmps
xor
call
in
into
push
cmp
outs
pop
ds
dec
outs
add
sub
cdq
fsubr
xchg
pop
lock
jae
dec
movs
adc
jns
cwde
sub
out
jl
ss
(bad)
fisubr
fcmovnu
pop
mov
adc
mov
adc
dec
xchg
clc
inc
sub
loope
js
dec
icebp
pop
dec
dec
mov
mov
cmc
dec
jg
adc
or
daa
cmp
jnp
ins
out
jno
lds
dec
mov
int3
popa
fiadd
test
sub
inc
dec
das
mov
or
jb
lea
enter
dec
into
fcos
xchg
ins
out
out
push
test
ins
xor
addr16
cwde
sar
test
lds
imul
call
hlt
stos
inc
and
sbb
int3
int
or
loop
push
push
xchg
and
dec
jb
callw
cmp
inc
pop
pop
lds
pop
pop
das
fcom
mov
mov
cmp
ja
sbb
hlt
jnp
ficom
int3
xor
push
and
mul
std
and
push
push
and
jp
data16
lea
jo
loop
ret
and
(bad)
in
stos
cwde
icebp
mov
cmp
(bad)
mov
jmp
hlt
jl
ins
sbb
push
fs
in
clc
mov
xchg
sbb
dec
push
cmps
js
stos
jle
pop
fistp
inc
mov
pop
das
and
loope
sbb
sahf
and
xor
push
or
push
loopne
mov
mov
cmps
jbe
mov
and
jb
add
jge
pop
sub
push
pop
in
jmp
mov
mov
cmc
inc
dec
adc
test
jl
and
bnd
lahf
sub
and
rcr
push
xor
add
xchg
retf
dec
gs
retf
jmp
std
sub
jmp
pop
sbb
int3
pop
test
xchg
movs
retf
repz
pop
rol
mov
cwde
sar
inc
push
call
pop
add
sar
cld
xchg
add
push
dec
cli
repz
mov
xor
shl
jmp
jns
xchg
data16
shr
jg
mov
lahf
mov
(bad)
fisub
cmp
pushf
ror
(bad)
push
shl
inc
ins
push
sbb
mov
add
mov
xor
sbb
cmp
pusha
std
out
and
add
mov
mov
retf
mov
js
stc
and
cmp
mov
cmc
jp
pop
fisubr
add
sub
sbb
retf
ja
not
or
(bad)
loop
push
pushf
stc
xchg
rcl
(bad)
and
xchg
xor
fidivr
cmp
sbb
cmp
push
xor
fisub
popa
sbb
in
fcom
jno
pushf
mov
push
jg
shr
in
outs
aaa
xchg
mov
lds
lods
push
mov
dec
ficom
rol
inc
jg
xor
and
adc
es
retf
mov
jnp
jge
inc
icebp
add
mov
push
inc
sahf
les
push
xor
out
adc
shr
dec
jb
bound
gs
inc
std
cmp
add
add
sub
call
mov
dec
dec
push
neg
lods
bound
push
xor
ins
sub
test
fsubrp
iret
lea
mov
jae
test
mov
dec
movs
sbb
call
js
mov
ret
repnz
mov
mov
test
xor
sbb
push
fadd
int3
sahf
jecxz
jp
fld
sub
(bad)
cdq
inc
(bad)
xchg
fcom
mov
or
mul
call
pop
aas
jmp
(bad)
mov
push
in
test
pop
xchg
movs
and
mov
leave
retf
test
inc
xor
aaa
fwait
cmp
push
in
gs
adc
inc
scas
imul
ja
call
pusha
pusha
or
out
repnz
xchg
enter
cmp
popf
lea
or
fwait
(bad)
daa
xchg
(bad)
clc
ret
leave
aas
jmp
and
out
xor
and
or
test
sbb
stos
push
pop
ret
xchg
mov
inc
cld
sbb
jle
dec
imul
cmp
mov
pop
cli
test
retf
pop
je
inc
sbb
(bad)
mov
cmps
xor
iret
int3
push
mov
mov
cmp
adc
jb
inc
xor
pop
inc
pop
mov
sbb
sub
gs
inc
div
(bad)
cmp
std
inc
xchg
test
fdivr
fadd
mov
mov
(bad)
jmp
sbb
hlt
nop
lea
mov
sub
imul
cmp
dec
fidiv
cmp
jb
inc
int
xchg
in
dec
mov
sbb
arpl
inc
jbe
inc
psubw
dec
push
and
(bad)
adc
or
in
fucomi
jge
xchg
lock
sbb
fwait
into
add
push
xchg
outs
and
push
push
adc
test
cmc
sahf
cwde
add
fs
pop
jnp
inc
pop
mov
or
mov
fdiv
ins
fdiv
cmp
cli
cmps
add
sbb
jno
ds
repnz
cmc
out
adc
pop
jge
adc
aam
fwait
mov
cmp
sub
pushf
fcomp
shl
aad
mov
add
fwait
mov
cmp
or
rep
add
retf
cwde
sub
mov
mov
sbb
retf
mov
xchg
imul
sbb
lods
inc
xchg
inc
(bad)
mov
jp
neg
(bad)
test
mov
mov
sub
cmp
ret
sub
xchg
pop
out
les
aaa
or
xchg
sub
sti
lds
test
adc
cmps
jmp
lds
cdq
loop
outs
mov
ins
add
and
idiv
dec
xor
jg
xchg
stc
popf
mov
lods
push
cmp
pop
and
cmp
and
adc
sbb
add
repz
mov
jle
pushf
dec
jmp
pop
xchg
jb
aam
jae
sar
sahf
xchg
dec
fucom
in
cs
scas
fwait
outs
mov
pop
push
push
out
adc
pop
mov
cmp
repnz
leave
fdivr
nop
mov
outs
aas
jge
mov
xchg
iret
pop
add
push
jl
xor
ret
imul
or
lods
add
sub
ficomp
sbb
xor
inc
enter
sbb
je
mov
mov
cli
jae
sbb
xor
and
fcom
sahf
pushf
bound
stos
(bad)
push
enter
mov
xor
xor
popa
sbb
jmp
adc
rcr
add
into
sub
std
test
scas
adc
and
cmp
mov
lods
movs
adc
push
mov
call
(bad)
aam
icebp
movs
jmp
xor
push
stos
inc
out
sahf
ins
ret
neg
jle
(bad)
inc
or
jle
mov
pusha
arpl
xchg
sub
mov
js
mov
xchg
loope
rol
ins
jb
test
push
cmp
outs
(bad)
imul
pop
das
jmp
les
scas
xor
jp
gs
mov
xor
jno
add
(bad)
fucomip
scas
shl
inc
cmp
mov
inc
inc
inc
lods
ret
je
(bad)
mov
mov
jmp
js
xchg
add
cwde
in
mov
lock
mov
mov
aas
sub
loopne
hlt
xor
or
pop
cmp
in
push
and
xor
ror
dec
cld
xor
xor
cwde
(bad)
adc
loop
jmp
ins
and
dec
bound
sbb
mov
fisttp
mov
loopne
jmp
lahf
icebp
or
lods
xor
in
jno
sahf
outs
jle
(bad)
ficomp
cmps
add
imul
jl
or
sbb
xchg
jle
mov
adc
inc
pop
inc
cli
shl
mov
and
inc
pop
lahf
sbb
mov
and
movs
dec
(bad)
fsubr
xchg
nop
je
aas
mov
fimul
sub
ret
enter
pop
mov
daa
shl
cdq
test
ror
add
(bad)
cmp
push
push
jle
or
shr
mov
add
jo
test
xchg
xor
add
jnp
add
pop
dec
push
xchg
ins
inc
adc
cdq
fist
in
ds
out
arpl
(bad)
ret
enter
aam
push
data16
jns
clc
addr16
cwde
jnp
outs
sbb
or
add
pop
js
xchg
jae
enter
mov
hlt
or
add
mov
or
xor
xchg
push
jns
jle
xchg
jmp
xchg
imul
inc
sbb
scas
xlat
test
(bad)
inc
call
shld
pop
push
ficom
push
test
jne
outs
mov
inc
pop
jmp
xlat
aaa
pop
sti
mov
into
push
sar
lea
retf
push
ror
mov
mov
out
pop
mov
int
(bad)
pusha
dec
call
add
mov
mov
and
movs
jmp
cdq
push
add
addr16
jbe
xor
cmp
adc
cmc
add
rep
jbe
arpl
jb
push
adc
movs
pop
test
push
mov
das
cmp
fs
jge
lahf
jecxz
push
mov
inc
outs
jbe
xchg
scas
call
push
mov
mov
fsub
mov
int3
mov
cmp
mov
xchg
pusha
sbb
clc
xchg
jo
adc
lods
mov
cli
pop
jo
inc
in
(bad)
pop
sti
xchg
jbe
mov
test
shr
pop
pop
add
ret
add
cdq
mov
ret
dec
(bad)
into
cwde
cwde
push
outs
std
rcl
inc
sbb
pop
add
jb
adc
jl
sub
xchg
inc
xchg
jns
imul
adc
fsubr
sub
adc
mov
hlt
mov
push
movs
cmp
(bad)
jmp
dec
retf
and
fild
inc
sar
inc
sub
stos
shl
cs
mov
mov
xchg
(bad)
(bad)
jecxz
les
les
fistp
jno
pop
jnp
jg
push
loopne
sub
add
inc
mov
test
or
pop
in
mov
xchg
mov
test
fxtract
mov
out
inc
or
jmp
inc
and
loop
cmp
mov
pop
idiv
outs
dec
jmp
or
adc
push
jbe
dec
lds
cmc
xchg
push
ss
daa
(bad)
lock
mov
cmps
cmp
inc
lahf
sti
jl
xchg
jns
mov
in
pop
repnz
movs
inc
ins
(bad)
movs
adc
xor
loope
and
int3
dec
(bad)
(bad)
mov
hlt
add
xor
ss
es
cmp
lock
inc
jnp
ret
and
(bad)
hlt
mov
les
add
xchg
(bad)
clc
and
mov
pop
mov
mov
dec
mov
adc
jmp
mov
cmp
add
ret
jbe
inc
mov
xchg
(bad)
sbb
pop
xchg
shl
cmc
stos
jmp
mov
pop
adc
scas
pop
add
ret
mov
sbb
pop
mov
ja
pushf
mov
lock
scas
pop
cdq
mov
sar
dec
xor
xchg
mov
stos
or
lea
adc
pop
push
dec
imul
fisubr
push
iret
in
jecxz
enter
stos
cmp
jne
sbb
push
mov
sbb
pushf
cmp
cwde
dec
cmp
(bad)
fisub
jno
aad
(bad)
jp
adc
je
xchg
scas
xor
xlat
jge
jmp
pushf
out
(bad)
stos
xchg
mov
pop
push
push
js
mov
nop
and
jne
lahf
stos
std
nop
push
(bad)
stos
mov
imul
xchg
fdiv
pushf
enter
fwait
arpl
in
dec
pop
call
popa
cmp
dec
adc
inc
xchg
in
jne
xchg
dec
loop
and
mov
ret
mov
or
inc
push
jns
add
sub
add
ins
mov
shr
in
aaa
in
je
sbb
pop
jecxz
add
inc
fsub
(bad)
aam
popf
mov
mov
xor
ret
or
bound
pop
cmps
dec
fild
ja
adc
push
inc
mov
loop
arpl
sbb
enter
jne
(bad)
cli
cwde
sbb
in
sbb
push
xor
xor
retf
cmp
mov
jl
in
jne
or
xchg
pop
push
retf
test
loop
jns
cmp
xor
adc
jge
pop
adc
aas
jno
sar
and
pop
jge
pusha
mov
mov
add
pop
dec
dec
sbb
outs
inc
call
xchg
cmp
sbb
cmp
aam
data16
lds
xlat
mov
xchg
test
fidiv
xor
retf
mov
inc
ret
mov
jne
ins
in
mov
sub
add
mov
es
fs
pop
call
aaa
imul
iret
mov
adc
sar
mov
mov
inc
ficom
leave
retf
sub
test
addr16
jbe
movs
dec
out
sub
cmp
dec
fwait
xor
mov
jno
ret
ins
pop
pop
sub
and
aam
loopne
mov
fmul
pop
daa
sbb
(bad)
pop
test
ficomp
pop
pop
push
sbb
push
in
inc
or
dec
dec
iret
repz
sahf
push
out
les
repz
pop
push
mov
mov
pop
lods
jp
stos
jp
aas
dec
movs
dec
gs
inc
mov
aaa
or
mov
mov
adc
lock
lods
test
es
fwait
adc
sub
jno
in
push
adc
mov
jl
xor
out
or
pop
icebp
xchg
jmp
mov
shl
pusha
mov
mov
mov
or
test
jns
retf
fld
sub
inc
jge
sahf
add
xor
mov
mov
fbstp
add
leave
xchg
mov
mov
push
stc
lock
jnp
xchg
add
stc
je
(bad)
cmp
jmp
pop
sbb
sub
mov
dec
lock
test
mov
cmp
mov
dec
(bad)
test
ret
sbb
xchg
mov
push
jbe
ret
sbb
inc
les
es
dec
sub
enter
pop
jmp
test
icebp
rcl
mov
push
addr16
push
loope
lea
gs
inc
mov
stos
icebp
inc
daa
out
cmps
in
pop
xchg
(bad)
ins
dec
or
inc
(bad)
cdq
ja
pop
leave
jmp
pop
push
pop
scas
jmp
mov
frstor
xchg
mov
fnsave
fldcw
mov
add
push
inc
add
inc
repz
test
mov
xor
jns
jbe
sbb
cli
mov
stos
in
and
fs
dec
adc
je
xchg
ret
shl
lahf
scas
repnz
and
imul
jmp
jmp
popa
xor
into
add
mov
mov
mov
icebp
sbb
out
in
js
xor
or
add
dec
xchg
aas
loopne
ror
arpl
cmp
inc
pop
or
sub
pop
rcr
and
cmps
cwde
jp
rcr
in
(bad)
push
mov
mov
push
cli
xor
dec
xchg
jne
out
mov
xchg
xchg
popf
rcl
enter
es
test
ret
jmp
arpl
sbb
(bad)
pop
repz
or
mov
lds
sbb
pop
jns
jl
stc
outs
test
(bad)
push
(bad)
adc
dec
or
jae
dec
push
js
xor
mov
rcl
push
data16
pop
aam
dec
scas
pop
jb
sar
cld
jl
push
mov
mov
jb
ret
repnz
and
das
nop
jmp
push
cli
lods
mov
or
inc
adc
repz
push
repnz
adc
pop
rol
add
jo
cmp
mov
and
push
in
fcmove
lock
pushf
mov
imul
shl
and
or
ins
data16
sub
test
std
and
ss
push
stos
xor
mov
xor
xchg
fidiv
mov
stos
dec
mov
push
sbb
pop
pop
cmp
out
xor
test
xor
ins
ds
jnp
push
stc
cld
add
std
xor
fcmovb
xor
std
or
cs
outs
cdq
fs
ret
add
add
dec
pop
pop
sbb
adc
pop
popa
xor
jmp
(bad)
loope
or
nop
pop
add
mov
les
push
test
inc
sar
lock
(bad)
out
fisttp
stos
out
inc
cdq
jno
dec
shl
and
int
enter
jmp
pop
fcomp
mov
jns
dec
adc
and
ins
inc
leave
mov
jns
test
aam
xor
ds
into
inc
clc
aam
or
ss
and
mov
icebp
sbb
cmp
(bad)
clc
push
fld
loope
sbb
cmps
mov
dec
outs
arpl
fbld
(bad)
xchg
out
outs
cmps
icebp
out
in
movs
jecxz
push
in
les
nop
mov
or
cmp
lds
mul
add
(bad)
adc
(bad)
(bad)
push
into
mov
cmp
(bad)
fsubr
pop
pushf
arpl
aam
ror
sub
not
mov
pop
pushf
mov
sbb
inc
jp
mov
retf
retf
loope
sub
inc
cmp
shl
imul
and
mov
pop
pop
in
jle
xor
cmp
pop
loopne
icebp
jp
pop
ret
mov
inc
iret
inc
ret
int
jo
xchg
push
or
mov
add
cli
out
icebp
mov
stos
dec
mov
call
pop
pop
leave
call
fs
int
cdq
push
xchg
xlat
jo
popa
or
cs
dec
pop
lds
sbb
xchg
sbb
fcom
jmp
in
(bad)
mov
push
in
loope
aam
imul
sub
in
mov
push
mov
adc
inc
(bad)
cmps
sbb
dec
jl
mov
daa
pop
or
int
or
popa
cmc
xchg
lock
fucompp
retf
retf
lahf
pop
and
sub
dec
nop
mov
dec
loope
sub
loop
rcl
fst
stc
inc
(bad)
cmps
test
dec
jo
mov
jp
push
cmps
ins
or
push
adc
sub
lea
cdq
out
sub
test
cld
shr
mov
popa
loopne
psllw
push
push
add
imul
jge
sub
jmp
jno
push
enter
movs
in
ins
jns
cmp
and
jle
cmp
adc
ret
dec
dec
sub
cmp
das
ret
pmaxub
gs
or
test
and
dec
mov
push
jbe
pop
fwait
xchg
shl
lods
gs
mov
jg
ret
pop
or
rcl
test
inc
mul
adc
lods
mov
popf
sub
(bad)
mov
xor
test
or
stc
adc
test
adc
mov
cmp
dec
(bad)
pop
adc
xchg
mov
(bad)
fld
ror
(bad)
cli
pop
add
and
mov
mov
call
sub
mov
mov
pop
sqrtps
out
mov
mov
lods
mov
push
pop
adc
pop
lods
or
mov
retf
xchg
mov
xchg
test
inc
xchg
daa
shl
mov
out
cli
dec
(bad)
popf
cld
adc
pop
hlt
ret
fdivr
jae
bound
test
and
js
cmp
mov
cdq
aaa
xchg
jge
xchg
jle
push
sub
ffree
int
mov
test
pop
ds
mov
cmp
imul
mov
gs
sub
xor
and
xlat
mov
into
xchg
repz
dec
pop
mov
(bad)
enter
jl
dec
movd
js
add
xchg
mov
js
jo
add
(bad)
pop
bndldx
ret
in
dec
mov
and
ds
mov
outs
cmp
mov
push
test
xchg
enter
test
fldenv
cmp
je
or
mov
and
mov
clc
jmp
inc
mov
mov
cdq
cmp
imul
mov
jle
cld
sbb
ja
mov
inc
dec
loopne
xor
jmp
jge
pop
sub
enter
(bad)
cmp
adc
mov
sub
std
cmps
cmp
mov
dec
dec
sub
(bad)
jmp
fld
mov
inc
fisttp
cmp
repz
push
in
fsub
int3
xor
sub
sbb
icebp
adc
dec
aaa
xchg
out
adc
push
cli
mov
(bad)
idiv
sahf
cmp
rsqrtps
inc
push
retf
push
or
cmp
hlt
mov
loope
test
push
add
cwde
add
pop
ins
sbb
adc
repz
mov
add
cmp
sub
dec
adc
dec
jbe
xor
and
fs
and
push
dec
pusha
sub
scas
jge
mov
cmp
pop
es
add
or
adc
rcl
out
(bad)
sti
mov
std
arpl
call
xchg
mov
mov
ret
add
out
call
dec
or
fs
enter
and
jle
jge
addr16
cmp
adc
sub
inc
pop
out
xor
lods
mov
in
pop
inc
xor
pop
jecxz
push
lds
pushf
pop
stos
pushf
stos
and
mov
and
and
icebp
out
add
mov
les
popf
jb
into
shr
mov
jbe
push
mov
lahf
dec
loop
scas
into
sub
clc
bound
retf
ror
fimul
in
shr
inc
pusha
pop
std
in
outs
in
out
popa
inc
ss
popa
hlt
out
pushf
add
mov
jne
xchg
test
das
xchg
mov
movs
pusha
jp
dec
mov
or
sub
cmp
pop
cmp
sub
xchg
(bad)
jmp
dec
xlat
jae
cs
sbb
mov
add
xor
xor
push
push
sbb
fnstenv
sub
sub
daa
retf
(bad)
push
and
jle
cld
in
xchg
mov
repnz
jmp
test
or
inc
movs
mov
(bad)
fisttp
lods
cwde
sahf
dec
imul
into
test
fnstsw
loope
mov
loop
mov
cmp
fwait
jecxz
mov
fs
jne
xor
ja
sbb
imul
fiadd
pop
repz
jns
xchg
xlat
test
loopne
xchg
stos
inc
aad
into
sbb
cmp
sbb
add
fcomp
es
and
dec
jae
sub
aad
push
stos
out
test
dec
xor
lods
test
adc
mov
sbb
inc
jmp
dec
mov
loop
pop
dec
or
and
cmps
pop
jno
jmp
cmc
or
(bad)
call
push
pop
lods
adc
ss
repnz
cmp
dec
sbb
xor
cld
repnz
or
retf
and
das
mov
popf
je
scas
jp
jo
rcr
xor
or
retf
inc
icebp
ror
mov
scas
ror
inc
cmc
leave
mov
push
add
fdiv
mov
ss
mov
into
sti
shl
inc
out
movs
mov
pop
sbb
dec
sbb
mov
jb
movs
fld
mov
stos
ds
or
jge
sbb
cmp
bound
sbb
out
into
pop
sub
jl
shl
mov
inc
jecxz
pop
(bad)
in
mov
shl
out
mov
xchg
pop
call
hlt
int
cmp
jnp
cmps
iret
mov
sti
or
xor
clc
pushf
pop
fwait
mov
(bad)
jmp
jp
jl
push
pop
aaa
in
shr
dec
inc
dec
cs
shr
(bad)
pop
lea
fsub
adc
xor
pop
push
xchg
(bad)
xchg
push
pop
daa
mov
arpl
call
and
cmps
out
pop
outs
and
imul
cmp
movhps
std
pop
data16
xchg
movs
pusha
repnz
pop
loope
mov
fwait
xor
xchg
ret
inc
jp
and
push
adc
cwde
call
jb
js
(bad)
mov
inc
mov
ins
pushf
jle
clc
ds
adc
inc
daa
push
pop
mov
call
inc
push
dec
pop
mov
jge
aam
inc
ficom
(bad)
imul
or
push
push
in
or
ins
mov
les
add
ins
mov
loop
les
xor
ins
aaa
jmp
test
dec
mov
int
jae
pop
push
dec
xchg
push
mov
push
pop
jae
cmp
mov
cs
mov
(bad)
lock
or
adc
sar
or
dec
lods
sub
cli
mov
mov
shl
dec
lds
fwait
adc
or
(bad)
lods
aam
push
lods
call
push
imul
jmp
cmp
jbe
pop
mov
repnz
movs
sar
std
xchg
jmp
scas
cwde
enter
repz
idiv
lock
fwait
xchg
mov
bound
xchg
pop
sar
dec
push
iret
daa
(bad)
(bad)
sbb
lock
or
add
shl
ret
repz
add
mov
add
(bad)
das
ret
aam
in
bound
adc
scas
stc
fsubr
cmp
mov
pop
push
inc
cmp
test
repnz
cmps
push
or
mov
fdivr
xor
es
adc
ins
jmp
and
sti
and
inc
repz
mov
pop
call
mov
pushf
xor
popa
lods
xchg
pop
lahf
xor
outs
movs
sbb
mov
arpl
cmps
dec
push
out
push
xchg
daa
sbb
mov
dec
sti
xor
nop
mov
arpl
in
ins
mov
push
mov
xchg
push
sbb
cmp
fst
mov
ficomp
and
push
in
xor
daa
push
daa
push
push
push
mov
xchg
in
dec
jle
(bad)
fdiv
or
aad
jmp
hlt
xchg
in
jae
cmp
push
aaa
mov
adc
mov
imul
ins
adc
cmps
xchg
mov
es
xor
sbb
jne
pop
xor
jmp
mov
(bad)
jge
loop
cmp
lods
rep
mov
retf
push
add
ins
pop
ss
xchg
fstp
aam
dec
stos
inc
out
xor
(bad)
sub
not
push
xor
adc
std
and
lahf
imul
xlat
test
pop
call
cwde
ins
popf
mov
inc
xchg
rcr
call
adc
dec
xchg
dec
iret
inc
xor
dec
xor
dec
bnd
pop
fsubrp
xchg
adc
je
pop
xchg
dec
mov
cdq
fnsave
xchg
or
ja
xchg
mov
call
cmp
or
int3
xchg
xor
lds
adc
xchg
aas
in
cmp
jnp
push
lea
addr16
jns
popa
jge
pop
arpl
test
xchg
shl
into
jmp
mov
xchg
rcl
push
xor
cmps
icebp
in
jmp
mov
push
push
pop
cmps
jp
add
retf
jmp
pushaw
push
icebp
mov
aam
into
pop
(bad)
sub
and
xchg
jno
lock
cmp
jmp
add
das
test
inc
lahf
dec
into
cli
int3
mov
dec
sbb
daa
loop
and
inc
mov
pushf
xchg
inc
sub
sbb
or
and
cs
sbb
call
mov
push
xchg
jmp
sbb
fst
pop
adc
(bad)
and
imul
sbb
mov
in
es
dec
pop
mov
add
repz
push
call
aam
popf
add
and
sbb
jl
jmp
inc
xchg
pusha
push
mov
xchg
repnz
hlt
jp
ror
pop
das
js
sub
cdq
es
(bad)
out
dec
loop
mov
sbb
dec
or
or
inc
xchg
lods
mov
in
mov
cmps
sbb
(bad)
add
(bad)
stos
xor
push
loopne
cmp
(bad)
sbb
jbe
pop
inc
stos
pop
push
cmp
sbb
pop
adc
push
xor
jecxz
ds
and
adc
sti
push
xchg
sbb
adc
dec
les
push
push
stos
mov
inc
lods
movs
sub
jmp
sti
mov
mov
fldenv
(bad)
mov
adc
mov
out
fs
jbe
js
mov
xchg
add
jmp
jae
cmp
(bad)
lods
aad
addr16
inc
fild
jbe
test
jp
jge
aaa
push
cmp
imul
push
std
push
aaa
xor
cmps
fdiv
xor
inc
rol
data16
loopne
or
sub
cmp
pop
in
in
ret
in
sbb
arpl
jns
inc
mov
sub
rcl
out
xchg
aaa
in
fwait
bound
and
jnp
test
push
jnp
mov
ss
and
mov
and
in
sahf
sbb
sub
mov
mov
add
mov
shr
cmp
loopne
sahf
arpl
mov
test
dec
scas
pop
xchg
adc
cmp
iret
popa
and
dec
mov
test
mov
jle
add
clc
int
dec
xchg
cmc
xor
xchg
cmp
shl
fcom
adc
int3
ret
cmp
xor
sub
neg
sbb
push
xor
test
jae
pop
(bad)
pop
push
jnp
shr
shl
mov
adc
test
je
cmp
mov
iret
bound
(bad)
cwde
push
fcomp
inc
dec
in
cmp
shl
pushf
js
adc
jnp
jg
xchg
cdq
mov
adc
inc
ficomp
inc
and
and
cmps
dec
cwde
or
repz
outs
ret
mov
inc
mov
inc
xor
les
add
xchg
xor
jge
push
inc
dec
mov
ret
dec
movs
add
scas
cmp
scas
jp
int
lahf
das
clc
arpl
in
jnp
mov
jl
lock
(bad)
sbb
push
dec
xor
inc
xchg
or
pop
fisttp
inc
xor
dec
push
scas
jmp
xor
cmp
and
cmp
out
inc
stos
mov
mov
into
pop
test
inc
pop
mov
dec
shl
inc
aad
(bad)
cmp
inc
cmp
cmp
pop
xchg
mov
xchg
mov
dec
xor
outs
xchg
fs
sbb
test
test
mov
adc
jae
(bad)
ins
inc
push
scas
(bad)
int
mov
fbstp
mov
xchg
gs
fidivr
retf
loop
jns
xor
cmp
lods
mov
nop
imul
push
jecxz
lahf
pop
mov
and
ins
(bad)
test
sub
push
inc
fbstp
jecxz
or
push
out
outs
pop
pop
or
std
in
cli
(bad)
and
(bad)
xchg
sar
pop
cmp
fxch
cld
out
popa
xchg
pop
lahf
xor
jmp
cmps
cmp
dec
and
out
push
mov
ror
or
fwait
jmp
mov
xor
add
add
repnz
repz
into
aaa
push
or
leave
cli
xor
stos
mov
loope
xor
sbb
stos
jno
sub
mov
lea
jge
or
mov
ror
sub
movntps
pushf
jno
imul
jecxz
xlat
mov
mov
int3
xor
jecxz
test
sub
inc
fsubr
mov
mov
and
mov
push
xlat
add
pop
or
jmp
loop
push
push
push
jl
mov
test
mov
test
or
shl
xchg
push
bound
dec
sbb
aam
mov
and
xchg
mov
adc
xor
jle
dec
dec
(bad)
jmp
outs
sub
sbb
push
cmp
test
push
adc
or
and
mov
cmps
xor
sbb
jp
je
add
out
int3
xor
cmp
stos
fs
js
cdq
mov
sbb
rol
or
fsub
repnz
inc
xor
xor
sbb
xchg
xlat
jle
sar
adc
js
imul
repnz
sub
in
in
(bad)
ss
dec
test
stos
les
ss
xor
jb
(bad)
int
dec
xchg
pusha
mov
mov
sub
ror
xor
sub
push
dec
mov
pop
or
movs
ss
stos
push
pop
or
and
les
shl
addr16
jl
and
test
retf
cmp
sub
cld
sbb
loopne
cwde
out
adc
push
push
cmps
imul
mov
push
(bad)
out
fld
fsubr
adc
stos
in
rcr
jg
(bad)
pushf
jg
inc
addr16
fcom
(bad)
out
(bad)
test
xsha1
cmps
or
cwde
test
inc
ins
(bad)
retf
dec
or
fwait
neg
scas
jae
cld
mov
jnp
xchg
add
movs
in
repz
pop
cmp
push
call
mov
out
nop
push
pop
stc
push
in
jl
in
mov
(bad)
cld
js
jmp
test
pusha
push
call
fstp
test
and
mov
mov
xor
(bad)
sbb
dec
pop
and
push
push
fsub
pop
stos
inc
inc
pusha
gs
sar
inc
es
jo
ror
cmp
sbb
into
jg
cld
out
jecxz
xchg
mov
das
js
inc
inc
fwait
jl
xor
dec
addr16
ret
rol
sub
outs
shr
test
adc
jge
rcl
adc
jne
fdivr
xchg
xor
loop
stos
xor
fstp
lea
in
xor
test
sbb
jmp
cmp
cwde
inc
outs
mov
out
aam
mov
outs
inc
xor
mov
and
cmp
sbb
mov
(bad)
cli
add
lds
xor
shr
shr
in
int3
fnstsw
adc
ins
and
(bad)
lods
aam
xor
(bad)
int3
stos
(bad)
pop
movs
xchg
into
sbb
jecxz
aas
dec
nop
xchg
test
sub
aaa
(bad)
xchg
movs
enter
and
shr
adc
sub
cmp
out
std
push
xor
repnz
les
dec
sub
pop
sub
and
sub
ds
or
jb
sub
pop
nop
ins
fist
push
cmp
pop
mov
push
out
(bad)
dec
fsubr
inc
jns
mov
aam
rol
mov
sbb
mov
jo
add
cmps
mov
mov
retf
dec
jmp
push
and
mov
lods
mov
sbb
mov
sbb
sbb
push
push
push
aam
lock
inc
cmps
mov
jno
idiv
std
xchg
popf
mov
sbb
or
sbb
xor
mov
ja
jb
scas
or
lahf
imul
mov
mov
aaa
add
popf
sbb
imul
xor
mov
fsub
cmp
scas
mov
call
xchg
stos
push
dec
dec
cmp
or
mov
jmp
mov
mov
sbb
mov
sbb
out
dec
test
cwde
sub
ret
mov
mov
cmp
jno
and
hlt
mov
scas
or
mov
test
cmp
jo
or
retf
shl
dec
jge
cmc
pop
push
cli
mov
shr
outs
or
out
xchg
xor
cmp
xchg
in
xor
xchg
push
cmp
jo
pop
push
lds
add
pop
loopne
mov
enter
xor
cmp
and
(bad)
and
movs
mov
je
test
mov
test
xor
cmp
dec
push
test
adc
imul
test
ja
inc
or
cmp
adc
xor
dec
cmp
or
pop
aas
sub
or
icebp
cmps
iret
mov
mov
fcom
mov
or
(bad)
xor
push
pop
xchg
mov
in
fiadd
sbb
mov
sahf
sbb
adc
xlat
dec
cmps
or
sbb
sub
mov
jmp
or
inc
sub
dec
dec
test
fnsave
lea
and
or
pop
xchg
xor
adc
out
add
shl
xor
and
jmp
mov
pop
imul
mov
mov
ficom
icebp
sub
xchg
enter
adc
mov
retf
jbe
loopne
mul
or
push
add
jae
jecxz
jbe
mov
imul
adc
mov
sbb
inc
inc
repz
enter
mov
stos
jmp
jne
vmwrite
jo
pop
arpl
ins
shl
shr
test
pushf
pushf
push
xchg
or
push
(bad)
pop
loope
xor
jg
fimul
xchg
mov
mov
sub
and
loope
ins
mov
inc
cld
xchg
adc
mov
sbb
(bad)
sub
or
ins
(bad)
lea
or
test
inc
cmps
adc
movs
mov
jge
nop
aam
lods
jne
(bad)
sbb
das
push
cmp
jns
int
xchg
test
enter
dec
repnz
pop
adc
mov
loopne
pop
nop
retf
je
mov
out
(bad)
popf
js
ds
sbb
add
mov
mov
sub
cmc
pusha
call
cmp
jae
push
outs
mov
in
outs
iret
or
or
cli
loope
imul
adc
xor
jne
shl
add
inc
push
and
cld
imul
ret
xchg
xchg
scas
sbb
mov
add
mov
test
icebp
cdq
ret
lahf
addr16
sbb
inc
pop
fisttp
add
popf
fsubr
popf
pop
and
jno
and
sub
pop
xchg
cmps
push
and
int
je
cwde
call
xchg
test
loopne
stos
add
stc
int3
pop
outs
and
movs
xchg
adc
or
jmp
mov
mov
gs
sbb
cmp
inc
loope
sub
xchg
inc
loope
and
ja
jmp
ds
jne
add
pop
popa
int3
and
jle
or
and
les
std
mov
shl
addr16
jl
les
pop
xchg
into
imul
jmp
hlt
xchg
dec
(bad)
cmp
add
inc
gs
sub
sbb
sub
or
inc
and
rcr
sub
adc
pop
adc
clc
dec
arpl
and
std
push
or
or
jge
idiv
scas
pushf
mov
sbb
mov
adc
xor
add
dec
or
lahf
dec
cmc
lods
jno
push
xchg
lahf
les
(bad)
lock
rcl
mov
iret
iret
hlt
push
xor
int
jae
pop
sbb
fst
push
outs
xor
cli
retf
clc
sub
cli
jmp
ins
xor
add
into
mov
xlat
mov
data16
movs
sti
jg
sbb
mov
inc
jno
test
ja
or
jnp
jbe
enter
push
icebp
pop
pop
fiadd
shl
loopne
imul
inc
xchg
sbb
xchg
dec
mov
and
sti
mov
movs
xchg
in
cmp
mov
je
mov
in
aam
jmp
rcl
sub
cs
pop
lahf
stos
inc
mov
jmp
and
cdq
dec
shl
js
jl
imul
cmp
inc
loope
nop
lahf
xchg
adc
sahf
cld
test
fs
stc
call
sub
adc
adc
sti
cs
push
leave
aaa
rol
sub
in
ret
xchg
aam
adc
jns
push
daa
dec
adc
cs
scas
xchg
xchg
xlat
mov
cmp
dec
push
hlt
ins
fiadd
jnp
inc
cli
enter
mov
nop
cmp
jb
mov
cmp
xor
cwde
popa
mov
cwde
and
icebp
xchg
pop
inc
or
hlt
test
cs
movsx
shl
cld
int3
dec
pop
and
cli
std
jecxz
cli
clc
movs
lods
xchg
or
shl
repz
sbb
cmp
mov
sub
sub
es
cmp
inc
adc
pop
push
or
and
pop
cmps
cwde
xor
xlat
loopne
inc
adc
xor
call
aaa
fsubr
stos
pop
mov
adc
jge
dec
sbb
sti
jbe
jae
mov
push
iret
xor
mov
push
jo
xchg
mov
test
pop
arpl
imul
push
mov
jl
push
rcl
inc
pop
jo
sub
or
jl
cmp
cmp
xchg
(bad)
(bad)
sbb
call
cmp
cwde
test
lods
ret
div
push
je
sbb
mov
popa
bound
arpl
cmp
jmp
sub
hlt
pop
inc
in
mov
ret
jne
mov
add
dec
repnz
push
fdivr
sbb
cmps
jp
jmp
icebp
or
loop
aas
mov
lods
dec
pusha
and
xor
test
jl
cmp
aaa
sbb
ficom
fadd
adc
fld
les
arpl
mov
xchg
(bad)
mov
push
add
jmp
(bad)
shr
loope
pop
bound
cmp
fild
cmp
mov
std
(bad)
and
pushw
sub
in
xchg
push
repz
cmp
mov
popa
outs
ins
imul
dec
out
fistp
mov
and
scas
jecxz
ins
inc
arpl
jmp
idiv
out
jnp
repnz
or
add
or
and
and
mov
lds
add
daa
(bad)
and
adc
int3
cmp
aam
cmc
push
ffreep
call
xor
cmp
push
stos
call
fsubr
neg
sub
add
jge
jno
loopne
jmp
clc
push
dec
stc
imul
repz
les
stos
sub
dec
fmul
stc
xor
sbb
test
retf
std
add
pop
mov
or
stc
div
je
sbb
(bad)
scas
jne
xor
jge
aas
jo
repnz
icebp
mov
rcr
lods
xchg
inc
xor
les
loope
pop
adc
pop
out
or
aas
pop
loopne
sub
(bad)
xchg
ds
xchg
scas
xchg
jp
pop
ror
(bad)
jno
sub
cmp
in
imul
retf
pop
add
jo
mov
jne
bound
inc
int
push
pusha
imul
out
js
mov
push
test
cmp
inc
xor
jne
pop
jmp
mov
repnz
jnp
inc
jp
gs
sub
jl
mov
shl
sahf
sti
sti
mov
mul
and
clc
mov
or
adc
cmp
sar
xchg
sbb
retf
out
loopne
pop
ds
iret
push
repz
retf
mul
mov
stc
out
mov
sub
dec
and
adc
dec
dec
aaa
mov
imul
std
and
rcl
cmp
mov
retf
sub
mov
and
(bad)
ret
push
pop
add
xchg
inc
in
sub
push
data16
dec
jg
mov
sub
push
stos
inc
sub
es
pop
mov
leave
jecxz
mov
call
add
pop
jo
or
push
popa
fstp
not
outs
mov
cmp
outs
mov
test
rcr
jne
fbstp
lds
out
or
mov
cmp
xchg
daa
jb
xchg
or
lea
cmc
add
test
pop
test
or
lock
pop
mov
mov
and
cmp
push
call
es
shl
jp
je
jbe
cmp
scas
mov
mov
pop
(bad)
arpl
sbb
aaa
jge
sbb
dec
mov
inc
mov
daa
mov
aad
stos
daa
std
scas
mov
lahf
call
xor
or
aam
in
fidiv
jl
mov
push
lea
sbb
mov
test
pop
js
pop
xchg
jl
movs
xor
xor
ins
or
and
mov
add
lea
xor
enter
mov
sub
loope
sub
gs
(bad)
hlt
sub
(bad)
inc
aas
sub
inc
adc
data16
cmp
call
cmp
lahf
mov
lahf
jmp
lahf
jb
cld
sar
xchg
push
push
inc
loop
(bad)
jmp
shl
shr
pop
mov
das
add
jge
rol
cmc
sbb
jle
inc
or
sbb
ret
outs
dec
adc
aas
pop
adc
lods
push
xor
jmp
sbb
and
xlat
stc
ror
pop
xchg
push
mov
hlt
leave
shl
sub
inc
retf
xor
js
and
fist
movs
data16
popf
(bad)
loope
retf
jno
in
xchg
inc
lock
aaa
hlt
ficom
jb
bswap
nop
mov
push
or
cmp
push
sar
push
xor
xchg
(bad)
je
mov
cmp
dec
and
or
cmp
mov
add
adc
push
adc
cmp
sahf
xor
jnp
les
mov
test
cmp
out
xor
dec
inc
mov
mov
gs
jbe
mov
pop
and
sub
in
ret
xor
mov
in
enter
nop
sbb
popa
inc
outs
stos
loop
lods
popf
cli
push
aas
jno
in
dec
dec
and
mov
push
movs
and
sbb
cmps
lds
ins
mov
jmp
sub
lods
jne
mov
iret
loopne
mov
out
push
jmp
sub
dec
xor
add
mov
lods
add
mov
movs
adc
movs
mov
mov
out
int
sub
outs
pushf
das
cmp
and
jnp
imul
js
imul
or
popa
cmps
jmp
lods
cmps
les
retfw
loopne
cmp
or
iret
int
push
add
test
das
lock
add
call
or
vpmacsdd
int
push
mov
fimul
retf
scas
stos
add
xor
mov
pop
gs
adc
xchg
xchg
mov
xor
loop
sub
adc
mov
mov
jp
enter
mov
dec
sar
push
dec
out
inc
test
pop
cdq
fxch
fwait
and
or
sar
add
and
mov
repnz
shl
imul
jle
dec
cmp
pop
push
data16
je
shl
imul
lds
ja
(bad)
and
shl
and
jbe
int3
sub
mov
outs
mov
mov
xor
xor
rcr
enter
aam
test
repz
scas
and
mov
or
adc
jb
sbb
cmps
mov
jecxz
mov
or
stos
cmps
push
(bad)
jle
cmp
movs
inc
cmps
xchg
pop
mov
mov
sub
xchg
xchg
or
les
cmps
jno
and
mov
sub
movs
into
mov
mov
loop
lods
adc
add
shr
cmp
(bad)
mov
push
(bad)
clc
(bad)
data16
jmp
push
shr
mov
test
scas
mov
ret
or
sbb
or
inc
jge
(bad)
call
aad
adc
jecxz
scas
jp
scas
ds
int
cli
adc
(bad)
(bad)
sbb
(bad)
(bad)
push
jp
lahf
icebp
inc
cld
sub
or
mov
mov
mov
jno
retf
push
ds
test
fbstp
outs
int
pop
ret
xchg
inc
xlat
cli
cld
cli
sbb
inc
xor
sbb
jne
(bad)
leave
mov
fcomp
cmp
mov
cmc
idiv
cmps
imul
mov
rol
xor
sbb
ja
jo
les
inc
dec
fisttp
xchg
pop
sbb
das
mov
pop
cdq
imul
mov
in
ds
adc
lea
sub
test
loop
adc
repz
and
cmp
cli
dec
cmp
cmps
xlat
(bad)
clc
inc
mov
push
sar
dec
jne
aad
and
stos
add
(bad)
mov
dec
push
cmps
mov
popf
dec
stos
pop
imul
hlt
push
call
imul
daa
mov
mov
mov
add
lea
cpuid
daa
fidivr
sub
and
cmp
push
loopne
in
or
data16
iret
lods
jle
and
jno
push
sub
and
fadd
nop
dec
mov
or
mov
lods
pop
jle
stc
adc
pop
mov
repz
add
lea
lods
sub
pop
imul
movs
out
xor
sub
add
adc
in
imul
ins
inc
xchg
(bad)
add
jbe
mov
scas
cli
lods
cwde
cs
dec
cmps
cld
push
dec
mov
mov
fs
pop
cmps
in
jp
push
scas
and
xor
pop
aad
mov
jae
out
cmp
push
add
xabort
push
scas
sub
jne
cmp
scas
bound
mov
and
sar
movs
nop
lahf
mov
or
dec
jo
jb
cmps
or
lods
cmp
cmp
jp
sub
cmp
adc
imul
scas
cdq
mov
cmp
or
cdq
fiadd
out
sbb
cmp
sbb
jp
fiadd
xchg
mov
xor
xchg
movs
pop
cld
pop
xchg
adc
out
push
std
ror
je
es
xchg
icebp
xor
mov
in
stos
mov
sti
xor
or
jmp
jbe
inc
arpl
pop
rcl
or
out
in
inc
xchg
adc
adc
xor
or
popf
xchg
(bad)
xchg
fst
pusha
(bad)
xchg
ins
rcl
mov
pop
cmp
mov
sub
imul
xchg
push
lahf
inc
mov
dec
mov
pusha
push
loopne
js
mov
ror
pop
ds
out
adc
sub
pop
scas
(bad)
adc
popa
or
test
or
fst
nop
adc
xor
adc
into
xchg
cmp
aaa
(bad)
adc
aaa
dec
jmp
xor
cs
lds
xchg
xchg
push
aam
daa
pop
lds
jp
repz
jmp
std
xchg
out
or
add
or
push
mov
inc
imul
in
icebp
test
in
xor
leave
mov
pop
test
inc
test
jo
(bad)
int
repz
rol
and
mov
jmp
and
cmp
mov
nop
dec
cmps
and
xor
call
fcomp
mov
std
fild
xchg
pusha
push
sbb
cmp
gs
jp
mov
outs
sub
inc
test
in
jp
fstp
dec
call
fcmovu
push
jl
xlat
(bad)
push
adc
mov
pushf
lock
sub
sub
sub
or
(bad)
dec
scas
jbe
test
ss
push
test
sub
movs
jbe
pop
ins
sbb
or
mov
(bad)
ins
xchg
pop
lods
and
out
popf
jbe
shr
jno
leave
and
cmp
enter
push
mov
lock
leave
movs
or
jne
xchg
addps
cwde
jmp
fdivr
push
cmp
or
pop
sbb
lahf
nop
das
mov
dec
inc
in
mov
pushf
test
cwde
call
adc
mov
fs
fisttp
mov
push
lds
test
pop
adc
pop
(bad)
loopne
stos
rcr
aad
adc
loop
push
push
or
sub
mov
push
cmps
aam
and
cmp
jle
not
lock
repnz
popa
out
xor
fs
out
out
jl
ret
mov
jbe
xchg
mov
shl
shr
mov
jne
shl
(bad)
lock
addr16
pop
fcmovne
dec
loope
jmp
pop
sti
cmps
cwde
add
int
gs
or
jp
in
fcom
div
add
inc
hlt
xchg
mov
add
and
call
mov
mov
sub
xchg
xor
or
xlat
imul
ror
inc
or
pop
jo
adc
inc
mov
sub
mov
push
xchg
lock
sbb
xchg
data16
or
cmc
dec
jg
mov
xchg
mov
mov
adc
je
mov
jnp
xchg
pop
or
loopne
mov
sbb
out
(bad)
aas
leavew
adc
and
bound
clc
call
(bad)
cld
mov
push
mov
mov
ret
cwde
aas
outs
and
xor
ins
mov
test
and
cmp
cld
cmp
and
cmp
sub
fcomi
repnz
pop
add
pop
cmp
sub
movs
addr16
and
rcl
xchg
push
int
or
mov
or
js
push
call
pop
jecxz
test
inc
sbb
cmp
mov
add
rcl
aaa
sbb
js
outs
ins
test
jp
jno
(bad)
daa
in
ja
pop
test
jecxz
dec
xor
mov
xor
jbe
test
fwait
jl
hlt
dec
pop
ret
jae
ret
push
lods
(bad)
repnz
add
inc
pusha
repnz
jno
lahf
dec
pushf
in
int3
fldcw
mov
cmps
mov
adc
inc
or
and
clc
sbb
lea
xchg
mov
push
out
mov
in
pop
pop
nop
jo
in
lahf
add
setl
std
fcmovbe
xor
out
aas
jbe
add
loop
enter
scas
xchg
(bad)
sbb
add
adc
add
sub
outs
dec
shl
mov
inc
dec
imul
dec
xor
nop
push
inc
mov
int3
jmp
dec
lea
push
loopne
sub
push
push
mov
out
pushf
stc
jecxz
xor
icebp
sub
push
out
pop
rcr
cdq
jg
inc
and
stos
or
jle
xor
xchg
(bad)
cmp
inc
pop
sub
jmp
dec
bound
out
or
pop
add
popa
xlat
adc
or
popf
fsubr
or
in
or
push
or
jns
inc
cmps
jo
mov
inc
fild
aad
xchg
mov
popf
mov
sahf
scas
cmp
fs
sbb
push
sub
xor
and
or
idiv
fidivr
jo
pop
mov
test
pop
adc
mov
imul
dec
pop
ja
fidiv
ret
cs
adc
xor
popf
stc
adc
test
fsub
lock
jb
sar
xchg
jo
or
je
jae
je
sti
cmp
mov
sbb
lods
mov
mov
jle
mov
pop
jmp
cmp
dec
pop
je
lds
fmul
pop
inc
shr
imul
movs
lods
gs
inc
icebp
mov
mov
loop
dec
test
xor
adc
mov
icebp
pop
ins
adc
ins
xchg
sti
cli
imul
inc
xlat
ficomp
jle
sub
jmp
popa
mov
mov
xlat
test
xor
inc
dec
mov
sbb
or
pop
xchg
(bad)
xchg
inc
sub
mov
(bad)
xchg
es
into
daa
xchg
mov
mov
test
inc
int
int
push
inc
dec
pusha
rcl
das
push
ret
outs
jns
loopne
jl
sub
sar
cmp
inc
aas
jg
pusha
jae
sbb
adc
cld
pusha
aam
push
ror
cmp
inc
fild
jno
push
fld
aaa
pushf
dec
add
repnz
repz
inc
mov
pop
xchg
dec
or
jecxz
out
test
fidiv
mov
pop
sub
fcmovu
mov
mov
dec
popa
dec
arpl
dec
test
vpsubd
test
jne
ins
push
rcpps
sbb
jecxz
inc
ins
sbb
jnp
sbb
push
clc
ins
add
shl
and
jnp
dec
jb
pop
sbb
push
jns
mov
loopne
xchg
jl
into
jge
in
mov
mov
jmp
inc
mov
in
std
cwde
stc
les
sbb
add
out
mov
fs
mov
add
pop
mov
retf
ds
push
bound
push
push
std
ror
push
cwde
xchg
mov
mov
inc
push
hlt
push
js
xchg
mov
fwait
mov
add
mov
popf
ret
cli
mov
dec
movs
gs
dec
lods
fucomip
shr
iret
out
jb
cmps
test
push
push
cmp
and
pop
test
std
cmp
fs
sti
pop
dec
adc
xlat
jecxz
cmp
inc
fld
imul
pop
outs
mov
sub
outs
mov
xchg
adc
mov
pop
add
pop
inc
hlt
(bad)
pop
mov
inc
imul
pop
ss
push
push
int
daa
mov
inc
jp
jl
mov
mov
leave
cmp
xchg
js
mov
inc
push
inc
mov
aas
xor
(bad)
clc
test
sub
sub
fidivr
jae
addr16
mov
mov
sar
or
sub
mov
in
pop
hlt
mov
loope
xor
inc
pop
xchg
inc
arpl
sbb
nop
xor
out
dec
mov
fild
shl
hlt
dec
cld
push
add
in
scas
mov
push
outs
jb
cmp
test
jae
sub
addr16
jmp
mov
test
outs
xchg
sbb
ss
cmp
mov
jecxz
sub
push
and
arpl
cs
add
test
sti
mov
iret
add
inc
mov
int3
mov
lods
mov
test
sub
xor
sbb
push
test
icebp
mov
lds
rcl
es
dec
leave
mov
inc
sub
in
jl
ret
stos
outs
inc
push
mov
movs
nop
cmp
pusha
rcl
call
dec
in
or
(bad)
mov
stc
aaa
or
pop
hlt
les
ins
push
popf
dec
sub
das
cdq
cmp
cmc
sub
scas
jle
out
daa
ins
sub
cmp
idiv
dec
jmp
jecxz
out
std
nop
push
push
sbb
icebp
adc
jae
lahf
or
pop
push
xchg
and
pushf
lock
cwde
and
sti
leave
sti
sub
cdq
stos
ja
sub
mov
test
mov
sahf
cmp
adc
cmps
push
jbe
sbb
gs
cdq
mov
lahf
mov
xlat
mov
jb
rcl
pusha
lahf
mul
outs
push
sahf
or
push
sub
cmp
push
sti
cmp
mov
fimul
jmp
mov
fdivr
loope
push
mul
xchg
and
ret
call
mov
aas
xor
ss
imul
jno
fdiv
mov
in
mov
xor
mov
adc
mov
test
push
lods
jmp
xchg
call
jo
fwait
pop
add
push
mov
data16
(bad)
cmp
cmp
cmp
mov
jmp
mov
retf
ins
pop
scas
sub
inc
je
cmp
or
mov
pop
pusha
dec
sahf
test
(bad)
out
push
push
test
mov
jo
cmp
lock
mov
adc
cmp
not
(bad)
and
jge
push
ds
mov
sbb
and
add
nop
nop
mov
(bad)
into
loope
dec
mov
ins
xchg
mov
sub
jmp
xchg
cmp
xlat
leave
adc
mov
das
dec
out
mov
inc
rcl
scas
mov
push
loopne
pop
ret
mov
jno
inc
call
mov
mov
xchg
bound
stos
pop
into
sub
sub
mov
dec
adc
xor
retf
in
mov
pop
lods
mov
xchg
and
fistp
dec
(bad)
xor
push
sub
push
mov
add
inc
enter
cs
lahf
cmps
ss
loopne
mov
add
mov
mov
or
push
adc
mov
lahf
xor
jge
movs
pop
sbb
ins
push
dec
retf
scas
lahf
ret
jne
loopne
sub
es
and
leave
in
or
mov
jmp
in
cdq
adc
dec
movs
jns
mov
scas
daa
ds
ret
pop
jo
lods
into
aas
or
or
sysenter
sbb
aaa
add
ror
or
cmps
mov
std
mov
fwait
or
pop
outs
aam
add
inc
bound
jmp
xchg
cld
or
test
pop
cmp
inc
push
outs
mov
cmp
leave
lock
outs
xchg
call
retf
pop
test
adc
adc
ret
mov
out
xchg
stos
cmp
jns
aas
cmp
add
push
sahf
cmp
mov
call
ret
mov
lahf
mov
push
arpl
push
lods
adc
loop
test
mov
lea
test
cwde
dec
jmp
in
push
je
dec
ror
pop
pop
fld
pushf
loop
dec
sbb
xor
sub
mov
xor
cmps
fs
out
repnz
xor
nop
push
pop
lahf
xchg
xlat
xor
(bad)
rep
leave
pop
jp
sub
jg
repz
xor
fldcw
push
mov
and
daa
adc
jecxz
jecxz
sbb
push
sub
(bad)
or
gs
out
sbb
xor
lds
das
in
sbb
adc
sti
sar
jo
test
shr
sar
(bad)
dec
cwde
ss
push
jmp
pop
bound
imul
stc
cmps
sbb
sbb
pop
hlt
int3
sahf
push
mov
call
pop
shr
push
cld
adc
lahf
in
ficomp
mov
outs
jle
in
(bad)
imul
cmp
mov
push
jl
jo
pop
inc
xor
jbe
mov
jge
jmp
xchg
sbb
jns
cwde
fnstcw
(bad)
pop
sbb
mov
mov
stos
mov
inc
sbb
xchg
fwait
jmp
pop
jo
mov
(bad)
cli
aam
test
or
jg
cmp
sub
or
into
idiv
push
rcr
jge
mov
ror
and
leave
(bad)
retf
mov
jge
gs
jle
push
cmp
adc
xor
add
daa
shl
aas
outs
or
movs
ss
das
lods
dec
dec
pop
sti
jmp
pop
pop
xlat
sub
sbb
mov
mov
jns
pop
and
mov
out
sbb
xchg
and
xchg
add
repz
or
movs
jmp
sahf
mov
mov
popf
mov
out
mov
mov
adc
xchg
mov
mov
push
xchg
push
test
and
adc
jb
dec
sbb
shrd
inc
int3
fst
adc
or
(bad)
sub
xchg
adc
jmp
lahf
sbb
fxch
sub
mov
dec
test
xlat
shl
mov
(bad)
jmp
xchg
xlat
movs
sub
jecxz
pusha
ret
mov
ins
mov
jg
mov
fstp
mov
inc
jae
xchg
xchg
or
call
lods
pop
loopne
xor
add
and
xchg
jmp
cmp
retf
dec
je
inc
(bad)
gs
jmp
out
arpl
daa
(bad)
daa
xlat
call
mov
xor
pop
push
stc
call
sbb
loopne
mov
and
push
sub
sahf
pop
(bad)
out
dec
jmp
in
mov
inc
(bad)
je
dec
test
inc
cmp
mov
nop
and
mov
cmps
mov
in
loop
add
pop
jmp
mov
jnp
jg
jmp
mov
loop
nop
test
or
jns
sti
rol
pop
fdivr
push
pmullw
iret
mov
out
inc
movs
mov
mov
mov
int
pop
sub
xor
cmp
mov
jbe
dec
hlt
mov
cmps
(bad)
and
mov
imul
mov
sub
(bad)
data16
inc
jae
pop
inc
cwde
fldenv
xor
imul
xor
sbb
call
inc
repnz
fwait
cs
push
mov
jns
add
repnz
mov
mov
fisub
inc
(bad)
sbb
int
mov
inc
dec
ror
(bad)
mov
lock
sbb
jb
js
imul
(bad)
addr16
fucomp
push
mov
cs
dec
adc
or
mov
and
and
pop
mov
out
(bad)
jg
mov
sbb
xchg
out
and
stos
pop
jns
adc
repz
cmp
fstp
mov
(bad)
lds
jle
mov
ror
xor
cmp
jae
lock
lahf
ss
gs
adc
xor
or
add
and
aad
xchg
and
push
pop
or
out
cmp
pop
ds
mov
xor
xchg
nop
adc
repnz
out
mov
push
pop
xchg
sbb
mov
xchg
mov
rcr
and
sar
add
xor
mov
aas
ss
adc
mov
lds
sub
xor
cld
in
add
and
dec
sbb
mov
push
(bad)
lock
in
and
in
xchg
ficom
popa
out
mov
icebp
cmp
pop
cmps
scas
fnstsw
dec
sbb
dec
push
and
xlat
iret
mov
pop
sub
mov
pop
int
ror
lock
test
ficom
and
pop
icebp
mov
cmp
inc
shl
and
int
dec
xor
xor
imul
pop
inc
jmp
adc
xchg
jmp
js
add
mov
mov
bnd
mov
or
jl
push
cmps
inc
icebp
dec
dec
imul
pop
add
sbb
sbb
push
loop
add
sub
aam
retf
pop
and
lods
mov
in
pop
(bad)
rcr
(bad)
arpl
jge
and
rol
pop
xor
xchg
pop
mov
pop
rcl
pop
cmps
xchg
mov
nop
ja
fldpi
fwait
mov
outs
sub
dec
clc
pop
and
and
sbb
push
cmp
not
mov
xchg
iret
mov
sub
mov
push
test
(bad)
mov
sbb
ficom
jbe
adc
inc
and
push
pop
mov
sbb
cmc
push
mov
xor
test
and
mov
lods
loopne
movs
cmps
mov
dec
cmp
push
mov
jbe
adc
mov
mov
shr
mov
cld
push
call
ficom
push
cli
cwde
mov
pop
push
or
pop
or
mov
and
pusha
add
mov
in
mov
mov
(bad)
call
int3
or
scas
imul
add
inc
pop
and
mov
xor
add
leave
push
mov
mov
adc
and
and
cdq
fcmovne
div
or
pop
(bad)
jns
es
int
mov
push
mov
(bad)
dec
cdq
xchg
add
xor
icebp
pop
push
neg
add
push
lds
dec
jmp
inc
nop
cld
fsub
push
adc
pop
inc
cmps
push
sbb
in
pop
and
(bad)
mov
dec
and
push
pop
call
jg
jae
pushf
stos
fisubr
into
iret
sub
sbb
jae
mov
in
xlat
cld
aam
pop
stc
cdq
pop
push
in
dec
nop
int3
popa
ja
cmp
pop
inc
jno
test
xchg
retf
retf
adc
popa
sar
je
inc
jge
xor
jg
fstp
sbb
popa
ja
push
test
jmp
jmp
ret
xor
enter
add
jno
adc
cmp
ins
aaa
add
das
sbb
out
inc
aaa
dec
inc
adc
mov
inc
xchg
lock
push
push
xor
icebp
loope
clc
aas
jp
mov
(bad)
sub
xchg
inc
hlt
dec
fldcw
mov
loopne
idiv
mov
movs
inc
or
ins
jne
add
jo
stos
jle
mov
(bad)
inc
mov
and
push
hlt
sbb
jnp
cmc
popf
movs
lods
mov
mov
loope
jle
cmp
call
mov
test
loop
cmp
xchg
xor
je
mov
dec
loope
sub
in
pushf
cmps
cmc
inc
pop
mov
and
shl
in
sbb
adc
push
into
mov
xor
mov
mov
call
jmp
mov
sub
dec
mov
push
pushf
stc
pop
pop
in
inc
ret
xor
and
adc
fwait
mov
scas
cdq
jbe
xchg
popf
pop
cmp
hlt
je
js
stc
popa
js
ins
or
push
jp
or
jg
add
push
sahf
sub
(bad)
lock
mov
or
(bad)
jmp
sub
shr
jae
inc
xchg
(bad)
xchg
sbb
sti
jg
adc
dec
sbb
xchg
or
push
mov
mov
lock
mov
lods
xchg
les
jnp
jne
xor
dec
xor
mov
jne
mov
push
popf
or
mov
loope
push
inc
xor
dec
scas
xor
or
outs
(bad)
pop
push
sbb
dec
dec
mov
addr16
jle
xchg
repz
call
xor
outs
call
dec
shl
xor
mov
jecxz
or
not
inc
and
jmp
push
scas
fs
jmp
xchg
mov
cdq
jmp
push
cmp
jl
in
mul
dec
cld
(bad)
cmp
imul
loope
mov
out
jne
xchg
adc
sbb
test
sub
push
cmps
lock
dec
xor
xchg
in
retf
lea
sbb
retf
adc
fucomp
out
add
sub
xor
mov
call
adc
dec
push
aas
pop
mov
mov
or
or
pop
aad
sbb
jne
xchg
dec
(bad)
xchg
xor
aad
and
retf
js
mov
in
lods
(bad)
jmp
retf
jecxz
int
add
je
sub
xchg
mov
xor
outs
xor
push
aad
pop
mov
push
inc
push
lods
inc
and
sbb
cmp
and
into
jnp
push
dec
scas
lods
fisubr
and
les
emms
shr
fisttp
or
lea
mov
bound
jg
push
nop
aas
push
sub
mov
das
mov
ja
mov
or
fidivr
sbb
out
(bad)
adc
adc
dec
inc
push
scas
inc
mov
mov
jno
stos
inc
in
mov
ficomp
inc
and
(bad)
sbb
mov
and
pop
aam
dec
and
out
cmp
and
add
(bad)
lea
sub
lds
add
add
inc
sbb
test
xor
push
mov
or
(bad)
mov
rcr
inc
mov
rep
lods
sahf
xchg
out
and
mov
sti
sbb
inc
outs
into
sub
adc
xchg
(bad)
cli
add
adc
or
cmp
sub
aaa
add
sbb
cmps
sub
out
rcr
lss
mov
sbb
mov
sbb
in
out
jae
xor
test
or
sbb
test
std
fbld
fwait
jecxz
xchg
call
or
sbb
je
les
fcom
xchg
jl
or
jp
mov
sub
imul
or
mov
cmp
inc
mov
rcl
push
xor
jp
sbb
xchg
inc
in
xlat
leave
shl
pop
retf
pop
aas
pop
inc
sahf
shr
imul
and
mov
inc
add
js
or
push
scas
test
mov
or
ins
jmp
or
das
jbe
iret
cmovae
stc
jmp
rol
shl
push
ins
inc
std
jne
mov
lss
adc
mov
mov
pusha
push
sub
ins
aam
arpl
ret
cmp
adc
push
add
jno
pop
cmp
sub
mov
pushf
cs
das
jmp
jge
sahf
mov
clc
sbb
mov
(bad)
shr
arpl
stos
mov
push
sub
pop
retf
lea
cld
adc
sbb
out
push
mov
pop
loope
lahf
xchg
mov
sbb
int3
jae
jmp
in
jmp
in
pop
shl
fwait
jmp
sbb
into
mov
out
xchg
ret
sahf
and
inc
(bad)
adc
mov
mov
add
rcl
dec
inc
mov
mov
cld
mov
push
mov
jbe
int
jne
fistp
mov
add
call
push
gs
pop
cli
test
sub
mov
mov
xlat
in
fistp
push
mov
cli
cmp
addr16
fs
repnz
push
jnp
popf
arpl
inc
mov
hlt
stc
cwde
outs
push
cmp
retf
fwait
mov
or
xlat
mov
xor
and
mov
mov
pop
ficomp
cld
adc
cmp
mov
lds
shr
adc
cwde
xchg
nop
mov
stos
xchg
jle
test
lods
push
pop
and
bnd
addr16
and
sar
jp
or
fld
xchg
pop
sbb
push
jge
fild
or
fisttp
clc
xor
cli
jmp
fist
cmc
inc
cmp
or
dec
sar
mov
rcr
fwait
ret
inc
call
js
inc
hlt
shr
cmps
cli
push
aad
outs
dec
dec
call
or
dec
xor
sub
nop
leave
xlat
ds
das
shl
test
mov
push
rcl
add
xor
pop
mov
fistp
adc
movs
and
cs
xchg
push
jo
dec
or
xchg
out
enter
sub
sub
fs
mov
add
retf
jp
stos
xor
loope
mov
rol
pop
adc
jo
ror
ss
xchg
push
sbb
mov
fild
xchg
retf
jge
inc
call
lock
mov
cld
enter
retf
mov
push
sub
jmp
mov
call
clc
ins
mov
or
std
or
popf
in
fisub
ins
add
sub
xchg
mov
sub
idiv
ins
das
jae
jp
retf
ficomp
jg
out
fs
or
pusha
cli
ins
je
and
stc
mov
shl
xor
xchg
jo
cmp
mov
mov
push
or
sti
call
xlat
(bad)
push
ret
mov
pop
push
lahf
repnz
sbb
pop
push
xor
(bad)
je
mov
adc
and
cmc
lock
inc
outs
call
sub
sbb
xchg
(bad)
mov
out
xor
clc
dec
and
mov
lds
jbe
sbb
pop
sbb
mov
push
push
cdq
dec
gs
cmp
dec
popf
inc
and
cmc
mov
mov
push
inc
pop
adc
iret
pop
ret
sub
jnp
lea
scas
sbb
fst
enter
jnp
lods
arpl
movs
sbb
(bad)
not
arpl
mov
int
gs
ds
mov
xor
test
add
mov
les
cmp
or
inc
test
cmc
retf
jbe
inc
and
fimul
push
scas
mov
jmp
stos
inc
data16
mov
ins
test
xchg
in
cwde
outs
pushf
fidivr
adc
repz
xchg
adc
(bad)
lods
leave
rcr
push
and
push
push
lock
push
out
xchg
mov
rol
pop
and
(bad)
out
or
(bad)
adc
push
(bad)
sub
xchg
mov
cmp
lods
jo
(bad)
jo
inc
in
addr16
jg
mov
push
(bad)
inc
(bad)
cs
inc
sbb
stos
ins
cmp
mov
inc
scas
jno
push
test
mov
xchg
retf
adc
adc
sub
movs
or
test
iret
mov
out
(bad)
mov
rcr
and
pop
movs
jl
mov
cmps
add
popa
popf
test
arpl
dec
retf
(bad)
push
cmps
shr
dec
pop
jle
dec
pop
(bad)
fnstsw
cmps
rol
sub
push
mov
or
mov
call
les
fwait
call
aad
loop
ss
cmp
nop
mov
cmps
adc
xchg
mov
loopne
adc
mov
and
xor
mov
pop
ja
imul
ret
sbb
mov
jle
int
inc
mov
cmps
outs
mov
aas
in
stc
aaa
fwait
push
lahf
repz
and
add
ins
add
ret
test
xchg
cmp
test
ja
ret
push
ins
push
pop
mov
mov
inc
mov
fsubr
outs
fmul
(bad)
call
dec
cmp
jo
pop
inc
hlt
fcom
cmc
aam
leave
repnz
pop
cmp
test
cmp
ds
addr16
mov
sbb
and
mov
jg
popf
shl
mov
out
and
cmp
clc
sbb
dec
scas
sub
adc
add
jecxz
fst
jne
fnstsw
movs
jecxz
jmp
jne
jno
lds
and
jbe
push
pop
adc
and
or
test
push
sub
pop
pavgw
retf
ja
loope
add
cmp
icebp
and
fnstenv
aas
sbb
jns
xchg
in
sahf
mov
fstp
push
sub
dec
mov
push
mov
fs
pop
pop
movs
rcr
xchg
popa
ret
cdq
jl
call
mov
mov
fcmovbe
inc
mov
mov
push
in
mov
fs
fwait
and
nop
sar
cwde
es
into
push
ss
or
add
dec
inc
inc
call
pop
aaa
movs
push
test
sub
repnz
dec
(bad)
mov
and
jecxz
outs
aas
inc
test
mov
fucomp
stc
push
fadd
mov
out
int3
dec
push
out
aad
push
mov
cmp
inc
shr
fneni(8087
cs
sub
and
popa
fninit
mov
lds
pop
sub
mov
add
add
(bad)
cmp
hlt
aad
inc
sbb
pop
addr16
jge
mov
cmp
ss
popa
in
in
and
imul
mov
pop
cmp
xor
and
pop
jo
xchg
out
xor
cmp
xor
sub
mov
in
lahf
(bad)
push
push
or
rol
shl
ins
mov
xor
les
dec
les
test
push
fwait
push
xor
jae
pop
lock
scas
jp
xor
sub
jge
and
jae
enter
stc
or
push
sbb
and
inc
popf
hlt
pop
inc
and
test
nop
push
out
and
cmp
lahf
out
mov
mov
or
gs
cmp
out
loopne
push
dec
mov
sbb
xchg
call
pop
and
sub
dec
push
adc
jno
xchg
or
add
pop
std
inc
cmp
es
sub
xor
cmp
in
pop
aad
in
inc
xchg
add
data16
mov
mov
add
or
jns
in
push
pop
mov
mov
pop
jle
mov
repz
adc
sub
push
jl
lds
daa
ror
dec
xchg
call
test
xchg
add
ret
jno
push
dec
inc
jae
popa
adc
cld
pop
iret
sub
jb
sbb
imul
sbb
xor
or
mov
sub
hlt
add
dec
aam
loopne
add
mov
add
add
adc
sbb
sbb
sbb
movs
sub
push
inc
xchg
inc
mov
or
jle
out
adc
inc
fdivrp
ds
int
mov
es
inc
ss
add
sub
fidiv
es
loop
pop
mov
xchg
pop
xchg
stos
or
ret
jnp
mov
dec
xchg
ret
fsubr
pop
sti
pusha
push
add
dec
imul
xor
and
xor
in
inc
cld
imul
jmp
(bad)
scas
inc
sub
inc
push
mov
jecxz
stos
xchg
inc
outs
sub
jb
jmp
aaa
outs
call
cmps
pushf
dec
fcomi
jmp
xchg
shr
fbld
outs
pusha
cmp
inc
test
arpl
pop
shr
sti
arpl
call
fld
in
mov
(bad)
mov
push
dec
sub
js
fbld
or
call
pxor
pop
daa
lock
xchg
dec
mov
pop
imul
lahf
out
push
or
fmul
loopne
clc
or
inc
test
mov
out
mov
jns
(bad)
rol
out
int3
cmp
div
pop
shr
out
in
ins
leave
xchg
or
retfw
xor
adc
lds
push
sbb
xor
hlt
jg
(bad)
jmp
popa
les
pop
std
add
loope
and
xor
sar
jmp
es
js
daa
iret
imul
in
push
test
mov
int3
js
push
mov
pop
ins
ss
mov
adc
mov
pop
scas
add
and
mov
pop
dec
mov
in
mov
lahf
lods
leave
add
fild
add
push
push
sti
inc
scas
hlt
data16
aad
ret
mov
test
cmp
cmp
cmp
sub
lock
and
jge
repz
xor
bnd
fdivr
enter
and
jge
mov
ins
add
dec
xchg
jg
cli
js
aaa
movs
jle
add
and
pop
sbb
int3
mov
mov
bound
ja
in
mov
rcr
movs
lds
adc
xlat
movs
push
push
sub
pop
bound
pop
mov
sbb
add
dec
sub
mov
dec
outs
mov
(bad)
xchg
cmps
lahf
dec
frstor
(bad)
pusha
push
mov
fidiv
dec
jne
fild
mov
mov
push
movs
or
dec
xchg
inc
in
push
jo
mov
inc
inc
sti
movs
je
mov
movs
movs
pop
cld
cmp
clc
push
push
int
lock
cwde
mov
retf
adc
inc
call
xor
jno
jb
cmps
pop
test
mov
xlat
sbb
and
sub
sbb
nop
xor
mov
mov
in
mov
(bad)
jg
jp
stos
cwde
mov
mov
pop
mov
aad
imul
push
in
test
sti
inc
int3
pop
sub
pop
(bad)
jg
xchg
xchg
mov
xor
shl
rcl
inc
sub
ja
inc
js
jecxz
dec
in
pusha
pop
or
stos
gs
sahf
inc
lods
shr
sbb
call
xchg
sub
ds
icebp
sub
movs
pop
xor
dec
sbb
(bad)
sbb
add
jno
rol
add
push
dec
add
mov
arpl
xlat
ret
inc
mov
sub
mov
pop
jge
push
cmps
xchg
loopne
stos
imul
push
bound
sbb
mov
cmp
dec
cmc
add
pop
push
add
adc
sub
icebp
fbstp
cli
inc
iret
and
dec
mov
test
je
leave
mov
jno
jbe
fnstsw
cmp
lock
cmp
imul
int
jb
sbb
and
xor
call
vmovddup
mov
mov
mov
jb
fsubr
test
mov
ret
rcl
ins
mov
mov
inc
loop
stos
xchg
mov
or
fisttp
ret
cld
mov
pushf
jmp
mov
dec
pushf
fld
std
jae
or
push
in
sahf
inc
mov
dec
xchg
repnz
push
cmp
(bad)
lds
retf
and
xchg
pop
mov
pop
test
mov
mov
sbb
dec
lods
jecxz
stos
fcom
ss
hlt
push
sbb
mov
adc
vmulpd
xchg
mov
and
push
aas
lods
pop
and
daa
pop
popf
or
(bad)
pop
ins
lds
das
test
rcl
mov
xchg
rcl
xchg
jo
xor
cwde
rcr
add
xor
xlat
jbe
lock
cmp
ins
aad
jo
push
mov
jns
jns
popa
das
div
mov
adc
cmp
dec
stos
retf
cmps
xchg
inc
mov
dec
test
repz
lea
jg
mov
push
jns
add
shl
(bad)
and
dec
repz
sbb
popf
fnstenv
addr16
dec
(bad)
enter
nop
sub
push
add
fucom
xchg
add
sbb
test
add
mov
and
or
xor
arpl
pop
push
outs
pop
loopne
push
rol
sti
je
test
lea
bound
cmove
jbe
stc
loop
fbstp
add
aas
int3
cdq
jnp
inc
repnz
mov
cmc
enter
jge
scas
into
xor
test
xchg
xchg
fs
shl
test
mov
xor
xchg
jp
lock
xor
push
pushf
mov
inc
mov
aas
mov
icebp
fnsave
sub
iret
jo
dec
stc
ror
imul
pop
push
shl
test
ja
push
mov
ss
pushf
in
jl
iret
xlat
std
adc
cmp
aaa
clc
repnz
jae
sub
add
test
push
xlat
inc
xchg
push
mov
add
mov
mov
mov
xchg
add
jp
cmp
add
test
push
call
xor
es
out
clc
cmps
in
mov
xor
cmp
xor
and
fbld
inc
cmp
xlat
pop
jnp
loope
(bad)
repnz
adc
push
in
ret
sub
add
icebp
inc
into
jno
jmp
sar
xor
cmp
inc
push
sub
(bad)
push
jp
fdiv
ror
lods
test
je
sub
push
movs
fild
enter
xor
mov
sub
hlt
push
cli
jns
jp
dec
jg
retf
cmps
xor
mov
lods
cs
cmp
xchg
leave
aaa
sar
inc
xchg
cmps
aaa
push
dec
fwait
adc
cmps
cmp
mov
std
sbb
jno
and
dec
or
shl
jge
cmps
call
add
add
stc
pop
jne
les
add
and
pop
stos
and
jno
adc
mov
ror
ds
dec
sbb
fisttp
pop
aaa
xchg
retf
cld
fcomp
xchg
or
pop
(bad)
fsubr
movs
and
xchg
dec
aaa
int3
or
(bad)
aam
jge
aas
loopne
gs
repnz
jne
inc
inc
and
aad
dec
mov
jmp
in
cmp
mov
call
xchg
hlt
lods
cmp
sti
jmp
test
daa
inc
fist
repnz
imul
jb
leave
push
sbb
jnp
leave
xor
call
sub
mov
xchg
aas
xlat
add
jo
cmp
pop
jae
rcr
push
(bad)
xchg
lods
scas
aad
sti
pop
sub
(bad)
data16
sub
inc
frstor
adc
loopne
sbb
aas
pop
imul
mov
jo
jl
inc
fiadd
xor
cwde
inc
push
mov
sub
rcr
in
loope
xchg
lods
int
mov
sbb
push
fisubr
imul
cwde
shl
mov
adc
(bad)
test
jo
pop
into
lea
xchg
cmc
loope
and
retf
shrd
cmp
mov
sub
repz
div
mov
out
cmp
sub
je
test
sahf
add
loop
jmp
mov
not
fisttp
mov
nop
fdivr
scas
aam
call
cmp
sahf
test
push
cmp
ds
aaa
xor
(bad)
aaa
sub
(bad)
(bad)
cld
test
mov
repnz
int
iret
xchg
ds
xchg
pushf
ret
sbb
mov
stos
adc
mov
das
adc
ins
inc
cmp
cmp
ret
pop
pop
mov
enter
push
xor
aaa
and
inc
xor
ret
ins
call
repz
mov
test
jecxz
sub
int
add
lea
lds
and
xchg
and
jl
fwait
out
mov
cmp
pop
cmps
push
dec
xor
dec
adc
out
cmp
lds
jmp
mov
jns
mov
shr
test
inc
adc
mov
fisttp
rcl
shl
pop
xchg
mov
add
int3
mov
dec
push
sahf
or
add
push
xchg
out
inc
inc
sbb
sub
jno
push
sub
sub
sub
(bad)
sub
push
add
mov
or
add
push
in
mov
sahf
data16
movs
mov
movs
data16
leave
xchg
pop
mov
xchg
outs
inc
js
aaa
aad
push
mov
xor
ret
sbb
or
push
or
adc
(bad)
sbb
ins
xchg
mov
test
adc
mov
pop
stc
mov
mov
pop
pop
lods
icebp
sbb
mov
rcl
and
sub
loopne
fstp
(bad)
daa
(bad)
je
sub
sti
sbb
shl
test
adc
js
adc
sbb
loope
test
fcom
sbb
add
dec
popf
jnp
jbe
dec
aaa
scas
into
add
imul
xor
dec
mov
icebp
cli
sub
sahf
xor
js
enter
shr
add
push
outs
cmp
loop
test
jmp
stos
jns
sub
mov
ret
sub
sub
rcr
dec
sar
enter
js
cmps
outs
test
jbe
sbb
addr16
jg
jae
jno
dec
adc
cwde
(bad)
outs
jle
cmp
iret
push
daa
popf
imul
nop
inc
jo
imul
cmc
push
movs
leave
jo
retf
pushf
xchg
jmp
in
sub
push
cmp
movs
push
int3
jo
xor
loop
es
push
mov
inc
push
add
pop
xor
jp
std
test
inc
retf
push
inc
(bad)
mov
scas
dec
xor
jmp
inc
mov
xchg
cmp
dec
clc
retf
lock
out
adc
or
pop
jg
jno
hlt
cmp
mov
xchg
cli
cmp
sub
mov
xor
test
sub
dec
aad
push
mov
repz
repz
jle
xor
movs
mov
push
ficomp
pushf
inc
mov
mov
sahf
movnti
push
xor
pop
cs
lock
iret
dec
xor
es
mov
out
loop
xor
pop
adc
stos
mov
xor
inc
xchg
jnp
outs
out
arpl
fstp
cmps
aad
fbstp
(bad)
fist
shl
(bad)
xor
shl
adc
and
push
rol
ins
loope
sbb
outs
inc
jae
data16
ds
pop
test
repz
dec
or
sub
push
sbb
repz
test
inc
adc
inc
jle
or
mov
in
mov
push
push
and
loop
gs
cmp
cmp
jns
jl
xchg
xor
ins
enter
mov
fld
adc
mov
shr
push
stos
movs
mov
fcmove
xchg
ins
scas
add
aam
pop
xor
mov
xor
xor
jmp
fldenv
call
loope
jmp
sbb
push
hlt
add
in
and
in
pusha
jg
es
sbb
mov
in
push
enter
inc
es
mov
xchg
addr16
inc
repnz
jbe
into
cmps
adc
leave
enter
std
jne
xor
call
popf
inc
jmp
inc
fwait
lods
scas
sbb
cmp
inc
std
xchg
mov
dec
mov
clc
xchg
mov
jp
or
sbb
xchg
stc
and
sub
xor
jne
ret
jnp
daa
jp
jl
jne
jb
ds
mov
dec
mov
mov
pusha
stc
retf
xchg
mov
(bad)
or
das
xor
ret
mov
je
imul
hlt
movs
enter
xchg
dec
mov
clc
cmp
gs
pushf
xchg
int3
out
int3
rcl
js
ins
inc
in
rol
loop
(bad)
lods
nop
fcom
enter
mov
jae
ss
push
push
cld
and
hlt
xor
jmp
or
popa
into
dec
sub
mov
cwde
xchg
fwait
mov
inc
ins
adc
or
jne
out
xor
mov
es
aam
jle
jp
(bad)
sub
jnp
mov
dec
cmps
push
enter
mov
mov
out
pop
mov
cwde
ins
loopne
shl
mov
scas
pop
push
adc
scas
aaa
retf
pop
xchg
stos
inc
push
nop
sar
adc
repz
push
shl
dec
(bad)
cmp
ins
test
pop
add
cdq
enter
push
sbb
movs
lock
daa
push
in
adc
fcom
popa
repz
ja
sbb
xor
inc
xchg
xor
dec
in
int
mov
lods
dec
outs
or
test
and
ja
cmps
icebp
aad
(bad)
jae
ins
or
cld
shl
or
ja
dec
fwait
push
in
in
mov
xor
pop
fwait
(bad)
out
imul
jae
addr16
jmp
xchg
(bad)
movs
xor
enter
pop
pop
gs
mov
jge
mov
inc
imul
dec
(bad)
popa
test
outs
dec
dec
and
jo
xchg
fs
ret
jo
and
inc
sahf
adc
lods
test
test
cdq
and
cld
movs
aaa
adc
pop
push
mov
ss
nop
ret
test
(bad)
pop
rcr
push
nop
mov
dec
add
dec
cdq
imul
movs
push
pushf
cmp
jno
push
es
dec
loop
cmp
cld
cmp
pop
ret
xchg
inc
loop
xor
xor
or
out
xor
jb
gs
or
or
push
cmp
ins
inc
movs
xlat
dec
jmp
cs
inc
cwde
loop
mov
mov
std
dec
add
xchg
rep
js
popf
or
test
imul
inc
sahf
pop
xor
jp
push
imul
jno
adc
dec
test
lea
fmul
push
into
mov
mov
pop
jne
out
jg
pop
jo
cmps
aaa
and
jo
pop
ficom
pop
dec
mov
inc
outs
(bad)
call
in
es
inc
mov
movs
fwait
int
out
and
in
cdq
sahf
js
adc
imul
adc
or
add
das
dec
sub
xor
ror
cmps
(bad)
loope
mov
jne
(bad)
lahf
or
cmp
add
aam
mov
and
jne
mov
dec
rol
pop
ins
ss
ret
xor
adc
jns
iret
gs
jnp
inc
jns
clc
test
mov
pop
mov
adc
cdq
dec
nop
ins
mov
test
inc
mov
fs
ins
xor
jnp
cmp
add
aad
xchg
mov
and
push
cmps
xor
dec
mov
mov
lds
lods
mov
sbb
xor
rol
sbb
in
into
cli
in
pop
loopne
jecxz
mov
adc
sub
lds
inc
sub
fisttp
adc
mov
cmp
aad
loop
dec
retf
mov
jmp
test
pop
add
inc
bnd
push
jae
(bad)
cs
fsubr
and
jge
pop
or
sub
sub
xlat
push
push
cmp
and
adc
pop
sti
pop
pusha
inc
and
shr
push
push
imul
out
jmp
mov
pop
(bad)
fstp
js
jno
(bad)
enter
add
jle
scas
sub
cmps
lods
xchg
out
inc
pop
dec
das
mov
mov
push
fsubp
sub
ret
repz
mov
int
pop
push
popf
(bad)
mov
pop
or
mov
xor
retf
sbb
sub
or
xchg
(bad)
(bad)
aad
cmp
sbb
jmp
and
xchg
into
cmp
adc
xchg
push
jecxz
add
ja
icebp
mov
fmulp
push
and
(bad)
call
push
mov
mov
jmp
in
jmp
adc
outs
mul
les
mov
mov
std
lahf
xchg
xor
arpl
sbb
jg
jno
adc
xchg
outs
jecxz
push
test
clc
pop
mov
push
lea
movs
adc
cmp
das
retf
iret
add
push
movs
dec
out
sub
ins
mov
cli
imul
(bad)
pop
cmps
je
add
adc
dec
mov
movs
sar
dec
hlt
push
(bad)
sbb
jge
mov
push
in
retf
sbb
push
imul
fist
xor
cs
pop
push
(bad)
mov
xchg
mov
mov
stos
adc
add
icebp
inc
mov
add
add
cmp
loopne
outs
sub
xchg
or
mov
clc
sti
arpl
movs
mov
push
push
dec
mov
cmp
mov
shr
fiadd
in
call
stc
push
call
test
jne
or
push
mov
mov
mov
or
lds
les
movs
pop
ins
out
jno
pop
mov
movs
pop
iret
dec
ficomp
dec
pop
push
and
xor
cmp
push
pop
xor
lds
mov
stos
push
push
fwait
sbb
or
stc
adc
jecxz
pop
fnstcw
dec
pusha
cdq
pop
push
xor
jnp
mov
or
push
pusha
adc
popf
js
popa
xchg
inc
jmp
enter
or
std
test
sbb
mov
imul
jnp
jmp
xor
std
mov
lods
leave
mov
aam
sub
xor
into
dec
ret
xor
mov
ja
adc
shr
push
retf
inc
cmp
aam
aaa
adc
fcomp
push
sbb
inc
mov
dec
ins
push
pop
es
or
hlt
(bad)
jmp
test
mov
cli
call
lods
cmp
into
stos
stos
lods
push
xchg
lock
fld
jne
(bad)
adc
dec
cs
lods
inc
cmp
xor
push
movs
(bad)
stc
jl
push
xor
arpl
sbb
aad
repnz
(bad)
cld
sbb
outs
pop
mov
jmp
mov
xchg
outs
sub
enter
int
leave
test
cmc
add
test
push
cmp
push
mov
xor
sub
repz
sbb
popf
mov
icebp
jno
ins
or
jp
(bad)
xchg
jecxz
push
sub
ds
lods
test
mov
xchg
xchg
scas
and
test
clc
movs
inc
in
nop
int
cld
test
int
outs
iret
or
(bad)
push
les
loope
sub
xchg
push
iret
pop
sbb
mov
mov
inc
fsubr
js
mov
mov
mov
enter
fwait
push
pop
mov
mov
or
jmp
dec
dec
and
pop
das
adc
sbb
mov
bound
inc
sti
imul
mov
add
div
fadd
nop
sub
jae
xor
std
dec
(bad)
cmp
aad
sub
sbb
mov
imul
jecxz
cmps
inc
add
lea
dec
push
fisubr
icebp
call
wrmsr
jns
je
xchg
adc
lds
xchg
dec
jae
arpl
xchg
mov
fstp
mov
sub
jg
dec
and
pop
out
imul
pop
inc
dec
inc
push
adc
inc
dec
sub
add
test
adc
xor
push
hlt
sbb
(bad)
adc
push
pop
aas
je
call
fwait
popa
mov
shr
sbb
cmp
sbb
loop
cmp
adc
push
daa
pop
je
xor
dec
fwait
push
cli
icebp
mov
add
bound
cld
out
shl
scas
outs
adc
or
test
add
jmp
pop
fistp
sbb
ffreep
test
jae
ins
sti
and
adc
push
sbb
fstp
mov
gs
call
mov
daa
bound
jo
out
jnp
push
adc
xor
sbb
mov
cli
and
mov
lea
sbb
repz
cmp
mov
cwde
and
fisub
mov
into
test
mov
pushf
les
jp
or
cmp
sbb
inc
mov
std
aas
(bad)
(bad)
add
(bad)
adc
sub
je
mov
push
jge
inc
ins
cmp
push
pop
pop
out
fstp
in
cld
sub
call
out
out
mov
xchg
xchg
imul
jns
sbb
xor
mov
repz
jp
pop
iret
cmps
gs
std
ins
ins
cld
push
cwde
inc
sti
xor
fidivr
adc
sbb
jl
jno
push
sbb
icebp
pusha
mov
mov
xchg
or
jle
je
repz
jecxz
xchg
pop
xchg
aaa
push
xor
mov
or
in
push
pushf
push
mov
sub
pop
test
push
xchg
xor
push
cmp
inc
xor
in
outs
mov
(bad)
jmp
out
dec
leave
call
cs
sbb
call
sub
push
retf
xchg
jno
xor
pop
inc
sbb
cmp
xchg
scas
arpl
cmps
cmp
ds
jl
cmps
mov
push
fwait
test
or
mov
jb
aas
lods
sar
(bad)
(bad)
jmp
xor
adc
(bad)
rol
and
jg
mov
xor
or
neg
and
add
sbb
pop
xor
or
test
mov
or
(bad)
leave
mov
push
pop
mov
clc
scas
mov
stos
add
icebp
push
jne
jne
push
aaa
fs
push
and
inc
mov
(bad)
xor
push
jge
sub
inc
push
shr
cs
addr16
sub
hlt
(bad)
lahf
push
into
enter
sbb
push
cld
imul
pop
mov
add
push
pop
dec
stos
add
inc
mov
dec
mov
pusha
add
mov
jns
in
into
pop
ja
pusha
mov
inc
sbb
iret
cmp
jmp
aas
cmp
push
and
pop
test
xor
xor
sub
xchg
jnp
xor
cld
sbb
adc
ja
pop
sar
test
sub
inc
imul
mov
jb
stc
adc
push
sub
and
inc
cli
inc
mov
inc
jno
mov
mov
dec
enter
mov
cmp
sbb
scas
mov
mov
out
mov
scas
sub
mov
mov
dec
imul
mov
or
or
jne
add
call
clc
sub
mov
inc
pop
icebp
xor
test
imul
jo
in
and
push
mov
adc
dec
mov
pop
jmp
push
adc
xchg
hlt
mov
add
jmp
add
cmp
(bad)
or
and
icebp
xchg
and
scas
(bad)
push
mov
cs
into
xor
fcomp
jmp
lods
jo
dec
retf
pop
shl
pop
cmp
mov
push
sbb
lock
cmp
push
movs
push
stos
cwde
nop
jb
std
cmp
(bad)
dec
mov
cld
mov
and
icebp
cmps
out
test
jns
cmps
cmp
or
and
shl
ror
pop
mov
dec
jae
and
imul
test
sbb
scas
leave
mov
movzx
sbb
mov
cmp
sahf
push
(bad)
sub
fstp
imul
fimul
mov
test
mov
pusha
push
xor
div
and
and
or
out
pushf
push
retf
je
xchg
add
adc
mov
movs
sub
or
xor
or
sbb
push
mov
sbb
pop
sbb
mov
xchg
jl
sub
or
inc
movhps
nop
movs
into
ins
aas
sti
mov
aad
dec
dec
ss
sub
je
mov
popa
fneni(8087
and
popf
mov
push
pop
aas
jecxz
lods
pushf
sub
sbb
fstp
aas
ficom
cmp
jb
shl
push
add
inc
cmp
cmps
movs
enter
fwait
aam
pop
or
ficom
popa
or
jbe
add
sub
iret
inc
ins
inc
pushf
bnd
aad
je
pop
jge
mov
cmp
sbb
into
imul
ss
cmps
scas
call
in
sbb
cmp
mov
js
das
add
mov
mov
add
nop
repz
jg
mov
ins
es
enter
es
mov
outs
sbb
xchg
xor
pop
jbe
lods
aam
sar
jmp
push
sbb
(bad)
mov
aaa
sahf
inc
mov
es
sahf
scas
frstor
ror
bound
cmp
lods
or
adc
jmp
mov
dec
and
jo
fiadd
mov
and
inc
mov
addr16
in
cmps
xor
call
xchg
fwait
sbb
mov
in
dec
enter
add
pusha
pop
jne
mov
xchg
les
test
add
xor
enter
mov
neg
sub
into
fs
movs
icebp
xchg
(bad)
and
jp
inc
cmps
iret
add
mov
pop
add
xchg
pop
mov
sub
sbb
sub
gs
int
push
pusha
stos
ja
call
mov
jge
cs
mov
or
movs
dec
cmp
or
and
jns
not
fiadd
mov
pusha
mov
cmp
fisttp
dec
xchg
mov
push
xor
mov
jno
adc
push
xchg
xor
dec
aaa
inc
sbb
xchg
pop
cmp
or
sbb
sbb
and
sar
pop
cs
or
movs
push
scas
scas
mov
adc
mov
cmps
mov
dec
enter
pop
jp
push
icebp
or
js
sbb
adc
out
inc
jno
je
je
jns
retf
and
mov
sbb
and
inc
add
mov
and
and
push
dec
pop
inc
xchg
push
jb
daa
xchg
test
cmps
fmulp
call
enter
dec
imul
push
add
(bad)
in
out
add
das
cmp
(bad)
ss
js
fcmovnb
fs
repz
movzx
mov
test
sbb
adc
sbb
xchg
xchg
scas
shr
inc
ror
or
jmp
xchg
cld
sbb
scas
inc
cmc
mov
add
cmp
rcr
sub
sahf
mov
cwde
pop
xabort
dec
jb
inc
jle
retf
rcl
(bad)
xor
jecxz
add
cli
out
out
xchg
mov
arpl
add
clc
dec
out
mov
fadd
mov
mov
push
movs
or
in
aas
fsubr
push
bound
pop
int3
outs
mov
pusha
mov
fisub
out
or
das
pusha
mov
cmp
cdq
inc
sub
xchg
xor
or
xchg
push
jbe
push
xchg
fdiv
xor
test
pushf
scas
xor
xchg
xchg
mov
les
mov
out
mov
push
sbb
xor
push
xchg
jns
or
aad
cvtps2pi
mov
mov
add
jp
add
cmp
cmp
cmp
lds
jp
dec
dec
icebp
call
mov
gs
(bad)
ja
jecxz
jbe
pop
test
pop
mov
ror
mov
or
ret
cs
dec
xor
sub
out
stos
or
cmp
shr
sbb
fsub
push
ins
fld
sti
and
repnz
pop
mov
repz
inc
jle
sub
cmp
mov
stos
inc
cld
repnz
jnp
imul
dec
mov
pop
sub
ja
dec
fcmovnb
dec
mov
mov
pop
xlat
in
sti
gs
mov
fucomi
xchg
pushf
pop
outs
push
or
mov
push
push
xchg
or
fcom
jbe
shl
mov
cwde
jecxz
fistp
xchg
sub
and
xor
cs
clc
xchg
loop
jge
jecxz
aam
loope
test
adc
xchg
(bad)
fs
inc
mov
xchg
pusha
or
sbb
push
and
leave
les
jne
adc
ins
out
and
push
shr
sbb
push
push
pop
and
xor
bound
add
and
pop
or
push
adc
lahf
lahf
adc
push
aam
adc
jg
sti
ins
mov
shr
adc
push
mov
lock
mov
outs
pop
mov
out
push
push
cmp
add
sahf
ins
stos
mov
outs
pop
out
or
sub
aaa
sbb
jo
xchg
xchg
mov
jo
xor
sub
iret
rcr
mov
jge
mov
inc
add
mov
push
sbb
xor
mov
ins
pop
sub
and
cwde
(bad)
das
add
fsub
fwait
outs
pushf
movq
pop
mov
int3
loope
in
test
(bad)
imul
test
dec
sbb
jae
pop
in
or
fisubr
or
mov
jp
movs
test
jae
repnz
jns
cmc
adc
call
stos
ret
inc
int3
or
add
jne
dec
jp
mov
or
test
hlt
(bad)
pop
xchg
test
dec
pop
dec
dec
push
add
dec
xchg
fsub
xchg
out
xchg
ret
push
jo
int3
xor
pushf
es
and
jecxz
into
xchg
shr
or
or
stc
xchg
dec
inc
xchg
(bad)
sbb
rcr
(bad)
in
pop
test
sub
cld
cmp
in
mov
jnp
inc
xor
inc
in
std
and
fild
stos
test
cdq
daa
cmps
adc
in
mov
(bad)
pop
xchg
and
push
sbb
adc
data16
sbb
popa
mov
sbb
pop
pop
mov
push
xchg
sub
aad
jmp
mov
add
sbb
aas
call
dec
mov
gs
fs
lea
jns
add
or
les
jb
pusha
sbb
das
repnz
dec
jg
ret
jbe
shl
stos
xor
das
cdq
inc
pop
cli
bound
arpl
imul
outs
cmps
and
ficom
je
push
add
(bad)
inc
jle
cmp
outs
sbb
adc
xchg
retf
lahf
push
mov
fucomi
dec
stc
mov
repz
cmp
aaa
dec
out
(bad)
jo
and
ins
lds
or
dec
push
(bad)
cmp
(bad)
ins
(bad)
inc
push
jb
lahf
shr
jmp
aaa
inc
add
clc
jg
out
cmp
hlt
or
gs
push
in
mov
les
fist
sar
mov
mov
cmps
jmp
jno
sub
out
sub
mov
adc
fiadd
lods
daa
mov
aad
push
std
data16
loope
ds
dec
rol
mov
aam
mov
mov
or
cli
inc
add
dec
pushf
js
cmc
push
call
cmc
sbb
and
js
sbb
sub
inc
shl
sbb
dec
out
and
xor
rep
xchg
sub
lods
push
mov
jmp
sub
adc
in
arpl
sub
jbe
sbb
(bad)
ror
jno
rol
xor
sahf
pop
xor
out
pop
pop
retf
adc
xor
ins
cmp
mov
adc
mov
test
or
add
xor
cmps
sub
mov
mov
mov
data16
mov
int3
clc
xchg
xchg
es
clc
cmp
iret
or
or
mov
popa
cmps
fild
fistp
retf
inc
bound
clc
movs
std
je
sbb
cdq
retf
fldenv
fisubr
xchg
(bad)
push
push
mul
jo
jns
jns
jl
or
int3
ins
popa
pop
adc
pushf
mov
cmc
xchg
push
or
inc
jmp
adc
mov
add
inc
jge
mov
dec
outs
xchg
fld
pusha
int3
scas
sar
mov
shr
sbb
sub
inc
(bad)
xor
inc
call
adc
div
call
loope
ins
inc
mov
sar
cli
rol
add
sub
jns
sub
daa
pop
inc
dec
push
out
addr16
bound
add
jnp
fcom
and
das
mov
sub
retf
jae
jle
mov
in
inc
imul
mov
enter
cdq
js
pusha
dec
or
adc
cdq
(bad)
cdq
xchg
or
dec
xchg
ins
imul
pop
js
jb
inc
pop
xchg
cli
xchg
cwde
in
or
dec
xchg
movs
jg
loopne
inc
in
and
cmp
rol
pop
sbb
pop
xor
pop
mov
add
test
jo
push
sub
jns
add
rol
hlt
push
call
(bad)
and
out
ret
or
das
jmp
test
pop
repz
mov
pop
or
xor
in
(bad)
frstor
sbb
jbe
std
or
arpl
push
mov
mov
inc
mov
cwde
mov
(bad)
pop
pop
dec
jmp
mov
int
dec
inc
sahf
ror
aas
(bad)
jnp
pusha
push
sbb
add
aam
je
retf
add
jmp
(bad)
das
push
add
push
mov
lahf
aas
jnp
fst
clc
push
ret
shl
dec
aaa
cli
mov
dec
clc
adc
mov
mov
mov
cmp
ins
jns
pop
lds
jbe
push
sbb
jmp
mov
lea
add
and
enter
mov
sub
sub
mov
scas
aam
in
ins
nop
inc
pop
mov
scas
and
jo
push
jge
loop
adc
jle
dec
push
fcom
out
sbb
or
push
mov
cmps
retf
adc
jns
out
mov
clc
cmp
call
jl
jb
and
mov
js
pop
mov
push
out
or
jge
fwait
pop
inc
rcl
int3
clc
mov
iret
frstor
aas
not
test
es
push
pushf
mov
test
adc
jae
mov
popa
dec
cmp
dec
pushf
es
add
ror
add
neg
inc
das
mov
leave
xor
sbb
fisttp
mov
add
fst
(bad)
das
adc
dec
jmp
xchg
arpl
loope
inc
mov
pushf
scas
in
pop
jmp
jae
jle
ja
sbb
mov
mov
inc
stos
dec
push
bnd
sahf
js
xor
in
jg
sbb
push
fs
mov
int
pop
sbb
mov
rol
add
xor
jno
sbb
fabs
add
jge
je
retf
dec
xchg
rcl
mov
push
into
js
(bad)
iret
push
jo
in
addr16
mov
inc
je
and
xchg
inc
pop
pushf
sub
sbb
jge
nop
cmps
iret
scas
movs
lds
mov
mov
mov
xor
or
adc
jge
push
mov
dec
jae
punpckhbw
in
or
xor
jae
dec
push
fsubr
daa
jp
cmp
(bad)
fld
xchg
mov
(bad)
ja
xor
dec
pop
enter
mov
cmp
xor
mov
test
fisttp
into
jle
outs
mov
sub
fmul
push
fwait
sar
sbb
cs
add
jmp
cmp
daa
add
fiadd
out
ja
loopne
mov
xchg
mov
pop
mov
repnz
push
mov
xchg
adc
ror
mov
fisubr
dec
mov
xor
lds
test
(bad)
xor
pop
test
xchg
add
push
mov
mov
xor
fs
mov
pop
mov
mov
jae
pop
pop
pop
jo
inc
dec
pop
pop
sub
clc
rcr
jae
jge
mov
xchg
inc
sti
add
cmp
sti
aam
jmp
add
or
(bad)
push
pop
jmp
jbe
adc
sub
jge
push
mov
aad
fild
push
mov
hlt
or
dec
sahf
pusha
pop
dec
ret
inc
jp
push
xchg
es
imul
push
adc
cmp
mov
cmp
in
(bad)
cmp
arpl
or
leave
ins
mov
out
nop
and
loop
push
pop
aam
scas
jae
sbb
mov
nop
retf
mov
aad
nop
mov
cs
das
xchg
jmp
jp
inc
sahf
and
xor
or
cdq
mul
xchg
inc
push
cli
and
fs
repnz
push
jmp
or
sar
inc
in
popf
loope
aam
stos
xor
pop
fisub
jnp
hlt
mov
xor
sbb
das
jo
lea
and
ins
mov
sub
sbb
sbb
loope
jg
pextrw
mov
mov
mov
daa
xchg
popaw
in
cld
jnp
xor
(bad)
pop
dec
push
in
and
mov
pop
sub
add
jne
xchg
inc
retf
sub
and
fnstcw
hlt
retf
scas
adc
(bad)
repz
xchg
inc
jecxz
xchg
call
dec
(bad)
push
mov
sub
mov
push
or
stos
shl
jp
lds
(bad)
(bad)
ss
push
in
in
pop
dec
out
jbe
call
mov
mov
mov
xchg
sub
retf
clc
lds
pop
lock
or
xor
stos
pop
mov
adc
lods
xor
cmps
pop
xchg
fsub
push
inc
rcr
nop
(bad)
inc
ror
(bad)
cmp
ja
cmps
jmp
std
add
adc
sbb
mov
adc
dec
out
test
adc
add
jmp
or
(bad)
mov
rol
leave
cdq
pop
jo
jp
push
aaa
jns
dec
icebp
ins
push
hlt
lds
lods
call
sub
out
pushf
cmp
and
jg
xchg
out
sti
and
mov
call
fidiv
mov
jmp
add
mov
adc
add
lds
add
into
jo
lods
inc
pop
dec
int3
(bad)
push
enter
aaa
in
cmp
outs
cdq
jnp
cmps
repz
jge
jp
push
(bad)
outs
jae
aaa
push
xchg
pop
addr16
sti
pop
test
push
imul
xor
in
cdq
lds
fs
push
sbb
jmp
mov
les
int3
(bad)
outs
jae
retf
mov
add
jns
sbb
adc
imul
mov
or
mov
ds
jo
xlat
jle
fcomp
jo
cwde
aaa
sbb
out
dec
add
xor
sbb
mov
fistp
sub
neg
std
pop
retf
mov
push
fldcw
(bad)
sub
neg
(bad)
(bad)
jns
mov
call
stos
fild
xor
inc
daa
xor
adc
test
or
and
cmc
push
sub
xlat
pop
jp
mov
push
dec
sub
cli
sub
mov
push
mov
in
pop
or
xor
fwait
ror
adc
pop
(bad)
and
xor
or
pop
push
fisttp
shl
jmp
xchg
call
push
inc
cmc
mov
enter
jnp
(bad)
jne
cmps
xor
iret
repnz
sti
fsub
ja
and
aad
fisub
xchg
bound
mov
dec
and
test
mov
or
mov
aad
std
fcom
into
mov
or
(bad)
aad
daa
inc
dec
push
test
adc
mov
pop
stos
lock
in
fdivr
cli
or
jp
stc
mov
sub
mov
mov
das
fistp
xor
push
jb
pop
hlt
xchg
mov
cmp
jecxz
sahf
aas
das
(bad)
cli
xlat
call
sbb
sahf
(bad)
int3
sar
push
fdiv
push
lods
inc
fwait
in
movs
mov
push
mov
inc
in
fnstsw
stc
fnstcw
test
xchg
mov
ror
pop
inc
jnp
mov
jmp
(bad)
push
jae
loope
movs
idiv
cmp
xchg
sbb
out
jnp
rcl
dec
bound
stos
pop
(bad)
jb
outs
adc
push
add
fdiv
out
lea
push
pop
jo
sbb
mov
xchg
jmp
sub
pop
ds
cmc
lods
inc
xchg
and
pop
push
jmp
inc
mov
out
(bad)
scas
popf
and
lds
add
or
add
jbe
mov
les
retf
icebp
(bad)
mov
sar
xchg
rcl
push
pop
sub
push
arpl
aam
out
jecxz
sbb
pop
sub
inc
jmp
cs
cdq
inc
mov
adc
jnp
imul
mov
out
mov
push
cmp
fisub
and
ret
adc
aas
std
je
sahf
mov
sub
out
lea
or
(bad)
mov
lock
enter
sbb
icebp
adc
xchg
jno
push
pop
mov
lahf
xor
cs
mov
mov
xor
nop
pop
divps
sbb
mov
sub
sub
cmp
cmp
das
pop
lods
sbb
int3
mov
sub
sti
xlat
pop
sub
mov
or
retf
jmp
pop
data16
add
retf
or
fnsave
jbe
sub
popa
jp
mov
and
hlt
mov
ret
jp
add
or
out
int
sbb
icebp
stos
add
and
sbb
cmp
rcl
lahf
add
adc
jge
lods
push
rol
call
in
push
cmp
in
inc
pop
aad
jmp
sub
mov
push
or
repz
arpl
(bad)
or
cmp
fnstsw
out
call
xor
cmp
push
push
sti
adc
mov
xor
mov
mov
mov
dec
mov
ds
jno
pop
push
pop
fnstenv
stos
test
in
mov
mov
or
mov
stos
dec
retf
(bad)
pop
mov
push
dec
fmul
adc
mov
imul
aaa
mov
pop
inc
mov
les
ret
cmc
mov
xchg
shr
fdiv
loopne
dec
lods
(bad)
jno
shr
ins
jno
push
jo
xchg
loopne
js
dec
ret
retf
cmps
repz
pop
push
call
and
cwde
in
retf
outs
mov
leave
xor
mov
shl
bound
ds
lahf
push
inc
push
out
fistp
add
enter
mov
outs
mov
mov
loopne
add
loope
mov
mov
rcr
cmp
sbb
xor
shl
fldenv
mov
sub
lahf
cli
dec
movs
jmp
pop
dec
arpl
scas
xchg
sub
int3
jae
nop
or
and
fst
inc
stos
leave
inc
(bad)
sbb
adc
daa
sbb
jmp
adc
in
cmp
mov
jns
xor
scas
mov
sbb
sbb
jno
inc
imul
mov
imul
cmp
(bad)
mov
jnp
adc
(bad)
fs
std
(bad)
std
xor
jp
cmp
push
ins
jmp
cdq
outs
popa
push
cmp
rol
mov
ret
push
call
or
repz
loopne
(bad)
jmp
setbe
or
inc
pop
push
mov
or
in
fstp
push
in
sub
inc
(bad)
mov
out
repz
lahf
add
pop
out
jmp
shr
add
addr16
fcom
inc
ja
nop
and
hlt
and
push
add
dec
xchg
mov
mov
shl
jnp
in
cwde
add
mov
lea
cmc
fist
mov
sub
gs
adc
mov
das
outs
retf
inc
sub
lahf
std
call
loope
mov
and
xchg
and
pop
jg
xchg
retf
mov
mov
mov
pop
aaa
out
fstp
sub
or
movs
stos
push
and
jnp
je
push
(bad)
clc
sub
(bad)
sbb
cld
and
callw
out
clc
dec
mov
arpl
in
iret
pop
and
or
out
xchg
and
lock
lods
enter
pop
cld
xor
clc
call
xchg
pop
aad
or
cmp
nop
xchg
adc
xor
mov
leave
mov
(bad)
mov
pop
push
frstor
and
add
retf
inc
daa
stos
dec
cmc
and
test
mov
push
pop
(bad)
out
(bad)
pushf
add
inc
mov
stos
pusha
push
lahf
test
jmp
xchg
sbb
lock
pushw
mov
std
fistp
in
or
pop
cmp
mov
push
(bad)
fild
mov
xor
cmp
data16
push
add
or
ds
lock
mov
mov
or
cmp
push
inc
mov
xor
add
cmp
jnp
ins
mov
gs
dec
repz
rcr
and
aaa
pop
xchg
sbb
and
mov
out
adc
sbb
push
xor
mov
in
pop
ins
test
dec
xor
stc
(bad)
std
push
repz
jmp
or
add
ja
outs
or
xor
data16
xor
and
loope
loope
int
xor
jmp
mov
clc
mov
retf
sbb
mov
mov
ins
add
jp
loopne
sub
data16
iret
inc
je
neg
jmp
(bad)
stc
repnz
jno
sbb
pop
push
ins
jnp
pop
fnstenv
mov
cs
jge
je
addr16
(bad)
sti
xor
jmp
mov
mov
(bad)
push
jbe
push
mov
mov
int
movs
and
clc
scas
sbb
pop
lds
hlt
push
jo
jmp
mov
sub
cwde
lds
das
xchg
or
mov
fstp
push
jg
jg
jne
dec
(bad)
(bad)
jne
scas
lock
xchg
nop
dec
lds
and
stos
scas
stos
mov
ret
popa
dec
push
pop
cdq
int
inc
xor
pop
inc
loop
aad
sbb
ret
adc
scas
mov
leave
mov
data16
mov
ret
ins
rcr
fs
dec
adc
jg
jae
inc
les
add
xchg
in
xchg
popa
cmp
enter
mov
sbb
xor
mov
xchg
aam
mov
mov
sbb
imul
pop
or
push
je
sti
in
mov
push
nop
cld
mov
fcomp
and
xchg
sahf
pop
loope
not
mov
mov
fst
or
in
inc
mov
(bad)
movs
nop
pusha
sbb
or
loope
leave
jnp
cmp
xchg
lock
into
frstor
inc
jo
fmul
xor
jmp
adc
cmp
and
push
xchg
mov
xchg
ins
clc
imul
or
push
inc
add
xchg
cmp
shr
xor
xchg
cdq
loope
jp
adc
movs
lahf
cs
int
movs
xor
sbb
sti
jmp
xchg
jmp
dec
pushf
cld
sar
scas
scas
fwait
repz
sub
jle
ffree
addr16
retf
gs
(bad)
mov
push
in
(bad)
pop
pop
push
mov
stos
(bad)
cmp
popa
sar
sub
mov
push
movs
fadd
jl
dec
xchg
call
and
push
xor
pop
push
push
imul
repz
mov
fmulp
mov
rcl
cmps
or
cli
inc
jge
(bad)
xor
fistp
add
jb
ss
mov
add
sbb
rcl
fadd
push
iret
push
mov
cmp
sbb
inc
fbld
sub
pop
retf
hlt
sti
push
push
(bad)
int3
sub
add
pop
gs
pusha
add
call
jge
mov
inc
fiadd
push
adc
add
mov
xchg
mov
mov
into
lea
xor
test
mov
push
mul
pop
clc
test
dec
loopne
scas
jbe
call
(bad)
and
xor
mov
pop
mov
sub
cmp
addr16
bound
jp
or
pop
mov
imul
pop
shl
out
addr16
rol
xchg
sbb
jb
ret
shl
add
adc
(bad)
mov
mov
mov
or
cmp
in
mov
sub
mov
in
jnp
and
push
lahf
loope
cmp
xor
or
popa
adc
lods
inc
addr16
mov
sbb
cwde
jge
inc
sub
nop
mov
pop
push
inc
fistp
push
call
cmp
xchg
in
pop
adc
or
daa
inc
push
repz
jl
loopne
stos
xlat
mov
stos
cwde
rcl
xchg
outs
je
std
sbb
out
or
mov
sbb
(bad)
fsub
iret
stc
mov
jae
fcomp
cmps
retf
xchg
add
jge
sbb
jae
cmps
jo
or
jne
dec
xlat
clc
jmp
(bad)
in
push
cli
jmp
pop
out
xchg
lods
xchg
mov
es
fs
daa
pushf
sub
cmc
cmp
pop
jmp
mov
hlt
pop
push
mov
pop
clc
dec
outs
das
jmp
inc
or
or
pop
in
mov
mov
mov
push
movs
inc
stos
pop
inc
div
cmp
pop
(bad)
fisttp
mov
mov
int3
idiv
imul
aaa
sub
sub
jmp
dec
mov
test
inc
sbb
cmp
cmp
inc
arpl
adc
jmp
out
fdiv
out
cmp
out
push
xchg
push
ins
dec
push
xor
test
outs
mov
mov
push
ret
daa
aad
and
ins
push
sbb
std
adc
outs
popf
fstp
cs
inc
jecxz
xchg
aad
pop
push
loope
add
je
cmps
ins
dec
fadd
pop
(bad)
adc
test
pop
mov
mov
jmp
inc
das
mov
xchg
leave
into
dec
cmps
int3
xor
fs
mov
je
mov
pop
enter
dec
add
add
leave
ja
(bad)
out
mov
xchg
push
jmp
(bad)
mov
push
out
in
scas
jbe
and
xor
lods
ja
mov
ret
and
mov
and
xchg
jb
add
xor
sti
out
test
in
aas
mov
sub
and
jecxz
in
out
jge
jns
push
rcr
mov
xor
cmp
jo
add
sub
ret
das
jnp
mov
fwait
lods
jno
jmp
(bad)
imul
adc
xlat
ja
inc
pop
retf
xchg
xchg
cmp
dec
or
cmps
adc
xor
(bad)
mov
cld
pop
ins
xor
aam
(bad)
div
inc
out
sbb
mov
or
xchg
jae
mov
daa
mov
ret
jmp
sahf
mov
lods
movs
xor
xchg
inc
dec
pop
leave
and
rol
mov
clc
jge
test
xor
mov
jne
cdq
mov
iret
test
test
or
ss
cmp
inc
cmp
cmp
mov
ret
sbb
xchg
adc
call
popa
cmp
ja
sbb
xchg
jo
les
adc
inc
retf
or
sar
jg
adc
lea
leave
cli
stc
jne
pop
dec
xchg
pushf
mov
je
push
sbb
shl
jnp
and
and
shr
jnp
mov
pusha
cmps
cmp
loopne
lods
mov
das
mov
pop
scas
les
cmp
arpl
xchg
mov
mov
push
mov
xor
stc
inc
cmc
shl
push
inc
jbe
inc
fdivr
call
cs
push
ins
jns
cmc
aam
das
jae
mov
lahf
loopne
xor
aaa
xchg
nop
sub
jo
popa
aaa
xchg
add
push
mov
imul
xor
add
push
test
jae
jmp
adc
jge
cmp
aam
push
adc
pop
push
xchg
or
mov
sbb
stos
shr
xor
dec
pop
stos
jmp
push
cmp
or
dec
xchg
(bad)
adc
push
sbb
or
pop
inc
ja
inc
mov
lock
and
cmp
popf
dec
inc
mov
scas
jns
movs
lods
bound
shr
pop
mov
jo
jnp
popf
sbb
jmp
xor
sbb
test
pop
stos
lds
mov
into
pop
sbb
adc
ror
jno
(bad)
xor
iret
mov
mov
pop
sbb
mov
pop
lock
xchg
adc
mov
jle
xor
jnp
and
or
pop
(bad)
ret
push
pop
push
jg
shrd
cs
stc
add
and
(bad)
(bad)
cmp
jae
cmp
pop
call
dec
mov
dec
sbb
std
xor
retf
mov
cmp
push
(bad)
mov
outs
inc
pop
xchg
jecxz
add
adc
or
pop
mov
or
daa
mov
jae
jne
jns
sub
cmps
xor
mov
fisttp
adc
or
test
(bad)
jo
fucom
ins
mov
in
call
sbb
push
scas
mov
fst
hlt
call
mov
cmps
stc
es
sub
add
mov
dec
jno
ss
jns
les
int
push
das
mov
arpl
leave
dec
jl
fadd
xchg
sub
add
imul
(bad)
outs
in
or
jl
out
mov
clc
push
fld
lods
int
jmp
inc
xor
ror
imul
inc
cmp
and
out
xchg
push
sub
jl
sbb
or
push
mov
ds
out
mov
repnz
adc
ds
inc
fwait
call
aam
fdiv
pop
aad
imul
out
repz
mov
hlt
in
nop
pop
fist
ret
popf
shl
hlt
lods
test
jmp
cmps
cmp
in
pop
xor
xlat
(bad)
xor
jl
push
jb
push
fcomip
and
pop
scas
or
mov
es
xchg
mov
aam
and
js
bound
es
out
minps
ret
scas
shl
ins
ja
xchg
mov
dec
in
test
jmp
push
in
push
out
es
jno
fst
or
adc
cdq
aaa
push
scas
inc
adc
adc
mov
stc
jge
aad
cld
aaa
lods
out
fnstcw
mov
add
mov
mov
pop
imul
pop
test
mov
adc
das
enter
das
jne
lahf
push
pop
ja
lds
mov
jnp
cmp
push
icebp
mov
adc
jne
ja
sar
xchg
add
or
test
call
outs
(bad)
stos
xchg
jp
push
jle
push
sub
xchg
adc
rol
cdq
mov
loop
pusha
mov
aas
sti
cmp
pusha
cmp
fistp
push
dec
adc
pop
mov
sub
sub
outs
and
sbb
(bad)
xchg
dec
mul
fild
cmp
lahf
stos
xlat
sbb
loopne
inc
mov
inc
test
stos
pop
int3
aam
jl
fidivr
inc
mov
fistp
mov
add
icebp
fsubr
cdq
adc
fs
lock
aam
mov
or
das
jecxz
fsub
and
out
jecxz
sar
xor
or
xchg
lahf
adc
add
dec
pop
or
inc
nop
or
mov
aas
sub
xchg
push
lods
add
out
fwait
lods
movs
and
sbb
and
pop
das
lods
call
inc
jne
out
cmp
or
jge
push
xchg
pop
or
iret
jl
sbb
and
jno
jl
repnz
adc
push
lahf
add
in
fwait
xchg
pop
outs
push
xlat
nop
data16
jmp
outs
xchg
int
imul
bnd
cwde
shr
loope
not
ins
fnsave
xor
bound
inc
xchg
pop
gs
js
imul
adc
js
mov
stc
fiadd
in
mov
add
push
or
test
rcl
les
mov
pop
xchg
add
(bad)
fisubr
mov
retf
cmp
add
sti
mov
push
inc
jmp
jmp
cmps
push
das
fcomp
mov
enter
addr16
push
enter
daa
mov
outs
sub
leave
shl
mov
test
pop
jmp
inc
push
jmp
shl
xchg
(bad)
adc
xlat
outs
add
pop
jle
jbe
repz
or
fisub
mov
daa
imul
jmp
push
cli
shl
daa
xor
enter
sub
es
lds
sbb
jmp
call
inc
movs
or
inc
loopne
mov
push
cmp
mov
pop
(bad)
and
adc
shl
out
jl
shr
popa
mov
xlat
jmp
mov
xchg
out
pop
pop
test
sbb
imul
add
cmps
aaa
jp
sar
inc
retf
cmp
cmp
sub
dec
lahf
outs
js
xchg
sub
(bad)
or
fld
dec
jecxz
(bad)
aad
jmp
jmp
scas
in
inc
jmp
cdq
in
push
les
mov
out
mov
test
into
inc
jp
or
popa
cwde
add
in
xor
pop
dec
out
xor
lock
jmp
xor
jmp
iret
rcl
addr16
out
in
dec
arpl
cmp
adc
dec
fcomp
jecxz
pushf
jg
in
shl
mov
out
imul
icebp
mov
jno
or
cdq
repnz
sbb
jle
jp
sbb
aaa
jmp
xchg
push
xor
adc
cld
inc
adc
mov
push
jg
or
jmp
cmp
push
mov
in
sub
push
sti
sub
push
inc
mov
jne
iret
xchg
xchg
(bad)
scas
ret
cmp
adc
pop
sbb
push
pop
ret
sbb
pop
iret
adc
test
fwait
mov
mov
les
pop
sbb
push
cmp
(bad)
pop
pop
outs
jnp
sbb
outs
std
lock
sbb
cmps
cmc
imul
jmp
rol
mov
mov
sbb
fdiv
jne
in
fimul
adc
sub
loope
sahf
cli
add
add
sbb
lock
and
ret
fsubr
int
add
xor
jae
push
sbb
add
inc
mov
xor
test
inc
mov
es
aam
xchg
or
das
xor
dec
aas
push
push
ret
sbb
and
mov
mov
ins
fiadd
jle
test
add
jl
data16
call
adc
imul
inc
jae
aam
dec
cld
loopne
scas
lea
leave
mov
fnstsw
adc
in
cmp
xchg
scas
dec
jo
cli
xchg
jnp
fisub
movs
xor
inc
es
sbb
sbb
mov
outs
clts
(bad)
mov
pop
dec
movs
mov
daa
stos
mov
mov
and
loope
mov
and
cdq
push
lahf
add
and
xor
hlt
retf
mov
in
mov
jmp
mov
in
cld
pop
out
sbb
pop
cmp
add
inc
lods
inc
cmp
mov
in
mov
and
adc
pushf
js
sbb
sar
sub
pop
ret
or
jno
push
push
pop
call
inc
mov
inc
jnp
xor
cmp
enter
and
inc
enter
test
xor
mov
adc
dec
mov
push
lods
out
pop
mov
jecxz
sub
pop
push
aam
jecxz
xchg
dec
repz
cmc
ds
aas
cmps
enter
adc
pop
nop
add
call
push
loopne
inc
push
cmps
sahf
movs
jno
add
dec
pop
inc
cmp
ja
cmps
or
jno
(bad)
mov
and
mov
ja
xchg
fmul
push
and
dec
gs
mov
call
mov
add
adc
(bad)
jnp
aaa
inc
stos
jbe
mov
pop
inc
sbb
outs
ret
mov
mov
lock
repz
mov
outs
repnz
std
or
pop
pop
or
ret
fnstsw
in
cmp
in
sbb
and
pop
mov
cmp
loope
mov
sub
stos
push
loopne
cwde
xor
sub
add
adc
pop
push
sub
add
pop
cmp
or
out
fisub
add
jl
aas
js
pop
ds
js
ret
gs
mov
mov
sahf
sbb
mov
inc
dec
fisubr
push
mov
pop
repnz
stos
in
icebp
xor
aaa
inc
fucomip
mov
or
pop
in
stc
fwait
jae
xchg
ficom
push
jo
int3
add
add
aaa
(bad)
or
mov
sbb
mov
(bad)
add
mov
mov
push
out
and
inc
es
(bad)
scas
mov
ss
pop
add
add
and
arpl
pop
cmc
aam
int3
inc
call
or
jl
rcl
adc
adc
jmp
mov
dec
jbe
je
out
and
mov
inc
aam
imul
jmp
and
add
cmp
pushf
out
je
iret
jp
cmp
cmp
mov
xor
int3
aaa
push
sub
(bad)
push
sub
test
(bad)
test
jecxz
push
jp
jl
mov
retf
mov
dec
sub
lea
movs
pop
and
cli
inc
mov
xor
ror
test
push
mov
xchg
aad
and
sub
sbb
xor
clc
mov
jbe
lahf
adc
mov
mov
mov
ins
dec
xchg
(bad)
cmps
dec
(bad)
mov
lods
push
and
ins
dec
or
movs
imul
in
aad
mov
iret
repnz
inc
xchg
loope
cli
bound
aas
pop
gs
mov
jmp
aad
(bad)
je
jmp
xchg
dec
sub
cdq
ror
aaa
or
add
mov
mov
or
imul
pop
xor
push
mov
lahf
xor
xchg
mov
mov
leave
sub
scas
adc
push
or
pop
movs
xor
popf
pop
inc
sti
inc
std
inc
inc
mov
dec
add
or
add
fiadd
lods
push
cmp
ret
loop
hlt
mov
pop
dec
cmp
cmp
shr
ja
mov
add
(bad)
fstp
or
mov
(bad)
jmp
and
cld
popf
sbb
push
rol
mov
pop
jns
mov
sbb
cs
cmps
adc
in
cli
in
jbe
popa
jl
jp
iret
mov
push
popa
mov
scas
not
shr
test
sub
jns
jb
fsubr
jae
push
sub
ja
out
pop
js
pop
xchg
adc
adc
dec
fist
xchg
mov
mov
jecxz
xchg
sbb
jb
movs
stc
enter
sub
mov
mov
xor
retf
int3
push
sbb
das
adc
jg
enter
and
pop
cmp
stos
jo
push
mov
in
fwait
mov
ds
lock
mov
adc
mov
cmc
std
cld
fimul
sar
test
mov
push
adc
mov
sub
fldenv
ret
pop
in
mov
pop
jle
cmp
and
jbe
cmp
sub
xor
dec
mov
cdq
in
cmc
ret
mov
mov
and
jg
clc
hlt
cmp
mov
cmp
fs
or
xor
xor
pop
cmps
enter
popf
iret
xor
out
fstp
pop
mov
pop
int3
ror
or
test
xacquire
mov
and
push
sbb
mov
cmp
outs
scas
test
les
sbb
das
sti
out
and
ins
icebp
pop
ret
xor
lea
out
push
in
out
popf
das
out
sub
aaa
pop
dec
xchg
jecxz
sbb
pop
adc
dec
cmps
add
jecxz
pop
inc
xor
retf
das
mov
scas
pop
lds
je
call
movs
cmc
add
and
cmps
jnp
push
xchg
aaa
cmps
push
std
pop
fadd
icebp
stos
fdivr
outs
call
inc
cmp
outs
adc
cdq
(bad)
fdiv
test
inc
lds
jl
ret
sub
nop
mov
sbb
aad
xlat
add
sbb
lea
stos
sti
xchg
jne
shl
dec
adc
sub
push
xor
pop
mov
dec
in
xor
imul
repz
mov
xchg
into
adc
scas
inc
mov
mov
lods
mov
adc
fsubrp
push
push
mov
aaa
mov
nop
dec
xor
call
cwde
fs
jl
iret
gs
fwait
lods
rol
mov
mov
fcom
rcr
icebp
fwait
and
mov
fcomp
and
(bad)
mov
jle
jno
xor
jmp
lds
lahf
xchg
addr16
jge
mov
or
imul
inc
push
add
cdq
push
pop
rep
mov
mov
fyl2x
fwait
fwait
cmp
pusha
stc
(bad)
or
shr
jnp
cdq
or
push
jecxz
jmp
or
cmp
cmps
fs
xlat
jbe
imul
inc
mov
fimul
stc
sti
aaa
leave
stos
mov
mov
mov
lahf
or
ror
sbb
in
adc
mov
push
(bad)
pushf
xor
or
add
pop
mov
(bad)
mov
(bad)
cmp
jnp
cmp
out
aaa
cmp
add
pop
cmps
push
push
or
sbb
xlat
mov
pop
adc
jge
mov
jno
push
cmp
adc
outs
ret
mov
bound
push
sbb
jns
lods
ins
inc
cmp
pushf
jmp
xor
mov
push
cmp
aam
test
push
stos
mov
or
pop
psrad
arpl
stc
aaa
pop
pop
ins
push
test
sti
outs
pop
jg
stc
xchg
jl
stos
lds
retf
adc
inc
jbe
ss
xchg
sti
adc
mov
mov
mov
aaa
sub
pop
(bad)
icebp
sub
and
sub
data16
outs
ret
repz
dec
hlt
call
stc
bound
jmp
pop
or
fwait
push
das
pushf
test
test
dec
add
mov
mul
ins
addr16
mov
push
xchg
inc
sub
(bad)
int
pop
pop
and
ss
daa
repnz
call
pop
es
icebp
outs
leave
ret
mov
sub
gs
mov
jg
in
je
add
out
into
sbb
jg
data16
mov
xor
push
(bad)
js
(bad)
aam
xor
(bad)
ret
arpl
sub
pop
sbb
or
jp
jbe
mov
and
xchg
adc
pop
add
out
mov
sbb
xchg
into
jae
in
and
cmp
ret
mov
leave
xor
and
add
jl
or
add
lds
loope
in
scas
jg
fnstenv
retf
outs
sar
fwait
adc
scas
sub
xchg
fisub
pushf
push
fldcw
call
cmps
mov
in
add
ja
pop
pop
xchg
push
xor
dec
sub
jmp
mov
loope
test
lahf
js
jl
xor
int3
mov
(bad)
xor
fisubr
aaa
imul
mov
loope
pop
enter
inc
pop
std
cmps
adc
pop
xor
mov
dec
push
imul
push
movs
loope
push
ficom
in
dec
scas
inc
test
inc
nop
sbb
std
test
fild
jno
in
dec
nop
in
or
cmp
xor
xchg
je
mov
inc
adc
jmp
gs
loope
mov
test
aaa
lods
call
mov
jne
retf
ror
aas
iret
push
sbb
retf
in
cmp
out
sbb
sub
out
ja
js
das
bnd
lds
clc
xchg
dec
(bad)
es
scas
pop
mov
xor
sub
pop
dec
js
adc
cmp
fistp
mov
sbb
pushf
fisttp
mov
aas
mov
mov
lahf
dec
mov
int
aas
mov
pop
sub
jno
fst
inc
in
jecxz
lods
rcl
push
test
hlt
fdivr
sub
or
pop
popf
call
ja
enter
inc
xor
xchg
push
cmp
ror
std
in
mov
inc
cmps
add
and
xor
xchg
popf
mov
inc
rcr
movs
push
test
pop
cwde
add
popa
push
aad
sbb
xchg
dec
push
fwait
scas
pop
enter
mov
shl
pop
sub
mov
call
dec
fadd
movs
popa
fdiv
shl
pop
sbb
mov
cmp
shl
(bad)
and
dec
sbb
sbb
and
jmp
rcl
lock
mov
push
arpl
adc
(bad)
xchg
jae
cld
jmp
xchg
in
std
pop
cmp
test
(bad)
aam
(bad)
dec
xor
inc
cmc
into
out
pop
clc
jp
sahf
jmp
out
loope
sahf
call
jns
add
inc
fdivr
repz
sbb
mov
stos
adc
(bad)
xchg
mov
icebp
xchg
mov
int3
lods
es
mov
add
or
into
inc
icebp
cmp
into
dec
mov
xchg
xlat
cmps
addr16
push
mov
jo
and
mov
lods
dec
pop
xor
loop
outs
gs
inc
sub
div
dec
add
push
xor
dec
aad
cmp
fdiv
leave
cmc
add
pop
imul
mov
out
pop
pop
data16
and
push
loop
sar
je
jbe
outs
xchg
inc
jmp
hlt
xchg
sbb
pop
sbb
outs
nop
dec
dec
je
call
icebp
add
cmp
bsr
push
cwde
pop
shr
test
mov
nop
aas
fbld
in
xchg
loopne
adc
push
push
jl
add
mov
push
jg
ja
cmps
loope
pop
xor
into
aad
mov
sti
push
jge
jge
sbb
popf
xchg
movs
mov
(bad)
(bad)
bound
jae
lock
pop
adc
les
cmp
retf
les
sahf
popa
outs
jmp
jge
dec
neg
jmp
push
jp
movs
cld
mov
aaa
add
les
inc
xchg
mov
adc
cmps
aas
(bad)
mov
dec
rol
xchg
pop
xchg
pop
cmp
cs
js
sub
stos
rcr
clc
repnz
sub
pop
or
out
shr
cmps
aam
pushf
jl
jo
shl
xchg
test
jp
jae
add
mov
repnz
in
xor
stos
fimul
jcxz
lock
inc
xchg
xor
jecxz
dec
dec
lods
cld
or
imul
ss
mov
test
push
xor
pop
bound
xor
rcr
fsubr
push
js
outs
push
shl
mov
rol
and
mov
push
repz
test
icebp
mov
clc
jl
retf
push
imul
test
outs
pop
mov
cmps
icebp
jge
dec
(bad)
stc
ret
in
xor
push
cmp
pusha
test
cmp
out
or
and
in
pusha
iret
adc
jmp
dec
adc
sub
fcom
arpl
push
pop
and
iret
cmp
iret
or
push
inc
lock
sub
icebp
mov
(bad)
lahf
inc
inc
adc
cmc
sbb
mov
push
add
jb
int
in
inc
mov
xchg
cmp
es
test
dec
mov
into
push
jno
aaa
inc
outs
cmp
inc
out
jmp
leave
add
jns
(bad)
mov
sbb
pop
sub
and
jmp
retf
leave
jmp
iret
sti
push
add
les
and
cmps
push
dec
and
ror
add
outs
push
ret
sub
push
xchg
inc
test
das
repnz
ficomp
gs
or
sbb
fmul
iret
or
xchg
popa
sbb
test
sbb
add
ss
aam
fld
jo
cld
push
push
cmc
cmp
outs
xchg
lea
jb
dec
jg
mov
sbb
out
cmp
fisubr
cmp
inc
gs
pop
fnstsw
fstp
es
mov
iret
mov
sbb
mov
daa
and
sbb
and
js
movs
adc
pop
pop
push
pop
mov
inc
call
enter
xlat
mov
cmps
lock
or
and
sbb
mov
xchg
mov
cmp
or
jo
xchg
loope
pop
mov
dec
rcr
jmp
mov
ins
ret
into
clc
cmp
mov
jmp
dec
xor
adc
rcr
sbb
sbb
xchg
mov
mov
mov
test
pusha
jmp
push
mov
inc
aaa
dec
and
mov
(bad)
cwde
(bad)
movs
xchg
mov
mov
jg
mov
ret
fimul
or
dec
dec
adc
fs
enter
cmp
and
adc
ds
arpl
sub
xchg
jmp
icebp
mov
jno
dec
aam
cld
mov
sub
popa
xchg
test
repz
xor
ins
xchg
add
sbb
inc
mov
push
in
adc
jbe
cli
inc
mov
repnz
std
xor
(bad)
cmp
imul
sub
movs
std
rcl
mov
xchg
mov
xor
jmp
inc
jo
adc
arpl
enter
out
dec
xchg
pop
sub
rcr
sar
icebp
clc
inc
adc
bound
fcomp
pop
mov
push
push
xchg
sub
xchg
cmps
fadd
xor
push
ja
std
(bad)
(bad)
push
loopne
icebp
jmp
bnd
es
jae
test
adc
arpl
mov
scas
cdq
(bad)
pushf
inc
jp
jl
scas
add
mov
arpl
shl
loope
push
cmc
clc
mov
dec
mov
mov
mov
add
pop
das
das
xchg
cs
or
aas
cli
movs
(bad)
jge
loop
fstp
dec
pop
cmp
ret
mov
test
cmp
test
jnp
add
lea
iret
dec
inc
mov
rcr
push
jecxz
adc
loopne
and
sbb
inc
aas
mov
mov
and
push
out
(bad)
repz
frstor
adc
jo
mov
(bad)
mov
icebp
adc
dec
gs
imul
jb
or
cmp
xor
mov
and
int3
sbb
mov
gs
shl
aam
dec
sub
nop
xchg
jl
inc
cli
or
lods
out
push
(bad)
sbb
cwde
rep
or
repnz
add
jecxz
icebp
or
pop
inc
push
mov
into
(bad)
jl
sbb
mov
or
inc
push
cli
pusha
sbb
nop
test
test
xlat
add
test
pop
add
or
imul
push
xchg
ss
or
lea
test
call
in
or
mov
test
jnp
repz
sub
pop
call
jns
shl
xchg
es
fimul
sub
xchg
inc
in
sub
mov
pop
pop
inc
dec
das
sub
xchg
xchg
sbb
cmps
test
sub
pop
jecxz
mov
xor
lahf
xor
fbstp
push
jb
jbe
aas
push
cli
imul
dec
lock
es
and
cli
and
mov
pop
cmp
mov
or
js
xchg
popa
in
xor
ret
std
mov
loop
bound
inc
pop
mov
rcr
test
hlt
leave
or
sub
retf
pop
aad
xchg
out
fisttp
arpl
xchg
cmp
daa
mov
outs
push
xchg
cmp
dec
mov
mov
retf
cmp
movs
cmp
movs
mov
sbb
push
daa
xchg
cmps
xchg
jnp
and
test
dec
int
sub
push
cmps
xor
pusha
es
jp
ror
cmp
xor
shl
jmp
nop
hlt
cli
xchg
clc
cmps
cli
pop
mov
cdq
cmp
add
sub
add
mov
push
pusha
and
push
adc
(bad)
push
push
push
sub
or
outs
xchg
fs
add
sbb
leave
aas
aas
jae
retf
sub
cmp
add
stc
fs
push
add
pop
iret
jp
movs
out
adc
add
inc
mov
daa
inc
and
xchg
mov
mov
sub
push
out
les
xchg
and
and
mov
lds
cmp
test
ds
dec
int
add
addr16
mov
popa
jmp
pop
jmp
push
lahf
mov
push
mov
sbb
hlt
and
test
mov
jle
loope
xchg
cmp
pop
scas
outs
cmp
in
sar
and
imul
sub
cmc
movs
imul
rol
pop
pop
cmp
hlt
xor
or
test
out
push
and
dec
jge
out
mov
fninit
iret
(bad)
and
mov
shr
call
stos
jb
outs
sbb
ins
or
outs
adc
cmps
out
les
xchg
stos
push
sbb
push
(bad)
lock
lea
mov
js
adc
cmp
dec
add
loope
fild
dec
cmp
or
fidivr
ror
call
ins
adc
ret
adc
inc
ret
bound
xchg
movs
xor
test
sbb
cmp
push
push
stc
arpl
mov
mov
jge
leave
aad
sub
dec
sbb
mov
xor
inc
jne
inc
xor
and
sub
xchg
out
jnp
adc
mov
jae
or
xchg
lods
jo
sar
mov
add
fwait
mov
mov
(bad)
xlat
repnz
sub
pop
xor
loop
call
mov
mov
hlt
mov
jno
jg
lods
cmp
test
out
jge
mov
gs
fwait
sub
fs
ins
xor
in
outs
lahf
add
clc
scas
jg
sbb
push
sub
aam
mov
mov
push
inc
adc
jmp
add
dec
sub
cdq
movs
xchg
repnz
and
pop
fisubr
or
lahf
cmp
rcr
adc
push
add
or
sbb
leave
lahf
xchg
enter
dec
leave
adc
or
jno
fild
sbb
mov
ja
inc
pop
stos
mov
inc
xchg
xor
gs
inc
nop
movs
or
or
add
inc
lods
pushf
dec
add
stos
push
fnstcw
test
(bad)
mov
cmp
repz
add
das
inc
sbb
call
into
and
xor
test
xchg
inc
mov
add
pop
push
pop
jmp
test
sub
cmps
push
jmp
stos
lock
sub
fwait
xchg
jne
cmp
hlt
and
lods
je
loop
hlt
xchg
jo
cmp
push
sub
sbb
test
daa
(bad)
stc
sbb
jle
jne
and
popf
ret
push
pusha
sub
adc
ror
pusha
in
push
add
jb
into
sahf
cmps
or
dec
psrld
jmp
push
(bad)
lods
inc
cld
pop
push
xchg
xor
in
sub
movs
jb
stos
and
or
push
push
test
ins
lahf
xchg
call
test
stc
mov
fcom
push
shl
lock
jecxz
stos
xchg
sti
and
out
mov
or
push
pop
or
addr16
(bad)
pop
add
add
jle
adc
xchg
add
jl
ror
das
lahf
jle
lock
xchg
rcr
push
cmp
mov
out
ins
push
loopne
xchg
xor
nop
hlt
fstp
pusha
pop
push
or
jbe
ret
fwait
adc
bound
shl
jb
stos
push
mov
cmp
std
fcomi
fld
in
dec
mov
dec
xchg
inc
push
je
xchg
shr
add
ror
sbb
or
dec
fisubr
jmp
out
out
test
sbb
je
inc
pop
dec
lds
test
enter
cmp
mov
mov
xchg
(bad)
or
movs
and
test
or
lds
mov
aad
xor
movs
test
and
in
mov
mov
in
mov
xchg
jmp
add
stos
sbb
out
sar
pop
daa
pop
xchg
jmp
lahf
popa
inc
fadd
jle
mov
out
call
stos
mov
push
add
imul
loop
call
push
xchg
arpl
ja
lods
out
xor
sbb
mov
inc
inc
adc
vandnpd
jae
pop
inc
mov
inc
adc
and
xor
lock
fwait
or
(bad)
mov
clc
inc
xchg
js
mov
inc
fild
sbb
in
loope
mov
xchg
lahf
adc
xlat
lahf
mov
imul
es
and
(bad)
mov
sahf
loopne
push
adc
sahf
jns
mov
xchg
xor
int
jmp
dec
aam
loopne
lods
(bad)
out
cmp
mov
or
into
scas
sbb
push
lods
add
call
push
sbb
sub
inc
test
push
out
or
test
mov
fbld
cmp
inc
lods
push
inc
les
imul
xor
fwait
leave
and
and
dec
pop
(bad)
rcr
mov
sahf
cmp
call
leave
inc
mov
inc
clc
retf
test
and
pop
stc
call
pop
(bad)
xchg
hlt
cmp
idiv
push
sbb
retf
pop
sub
dec
fadd
ret
mov
adc
push
scas
and
dec
jp
mov
jmp
or
xchg
pop
jnp
lock
mov
cmp
div
adc
pop
retf
fsubr
jmp
jecxz
cmp
(bad)
xchg
pop
and
pop
(bad)
popa
push
stos
mov
or
fs
or
xor
inc
adc
mov
pop
jle
xchg
fsubp
daa
jecxz
cdq
lea
pushf
scas
jmp
retf
mov
dec
mov
lahf
mov
mov
stos
mov
addr16
push
xor
cmp
fisubr
lds
loop
test
test
mov
mov
jbe
pusha
jno
mov
sar
push
or
xchg
cdq
jb
daa
jnp
mov
cdq
mov
jns
icebp
scas
sub
retf
test
dec
sti
add
(bad)
jb
fcomp
mov
sbb
pop
sbb
push
fdivr
retf
xchg
dec
jl
mov
test
pop
dec
(bad)
(bad)
add
leave
adc
and
jecxz
ins
pop
xchg
aas
push
out
fdiv
cmp
gs
jbe
dec
sbb
or
mov
push
outs
jmp
fs
lea
ins
and
jo
xchg
pop
ss
push
dec
sub
lea
xchg
dec
adc
xchg
cmps
dec
aad
retf
push
imul
and
test
pop
sub
pop
inc
mov
mov
push
ss
test
outs
mov
mov
xor
cmp
and
push
jne
pop
rcl
dec
out
and
mov
cmps
or
xlat
retf
les
in
jge
sti
mov
not
jae
jle
lock
add
adc
sbb
xchg
xchg
jne
inc
pushf
mov
icebp
(bad)
outs
sub
idiv
adc
mov
adc
mov
cwde
push
out
xor
inc
arpl
shl
fisubr
dec
push
mov
hlt
push
lock
jae
daa
int3
dec
leave
pop
repnz
call
jbe
adc
push
rol
and
adc
push
push
sub
pop
mov
daa
cmp
jg
jmp
int3
lea
daa
fisub
hlt
in
mov
(bad)
lods
retf
ja
sub
jb
aas
xor
xchg
out
xor
in
jb
sbb
mov
cmp
lods
cwde
aam
dec
das
imul
daa
mov
dec
xchg
xchg
pop
inc
push
mov
mov
mov
sub
scas
stos
adc
in
fsubr
jle
inc
hlt
(bad)
jb
in
inc
lods
movs
adc
mov
dec
pop
fmul
test
fscale
iret
and
(bad)
or
jo
inc
fcomp
lea
pushf
jo
in
cmp
mov
das
add
and
test
addr16
loope
addr16
mov
jecxz
in
xor
sbb
js
mov
xchg
out
imul
bound
data16
sbb
push
and
ret
fbld
out
ret
js
cmp
adc
test
ins
jbe
shr
or
test
jne
leave
sti
rcl
jmp
sbb
pop
loope
inc
(bad)
movs
fnstsw
inc
fsub
(bad)
dec
xor
int
pop
xlat
pop
sub
iret
shr
pop
iret
jb
(bad)
xchg
sub
cmp
cmp
sti
dec
or
mov
sbb
bound
push
xchg
lods
adc
push
loopne
out
ret
xchg
fwait
sub
nop
mov
xor
xor
(bad)
es
fisub
push
inc
pop
push
add
jmp
cmc
inc
shl
mov
(bad)
jecxz
pop
out
mov
mov
stos
jae
add
push
push
in
movs
call
scas
xor
in
jp
idiv
cmp
aad
pop
xchg
fidivr
retf
xor
(bad)
pop
ret
pop
pushf
cmp
pushf
scas
cmp
dec
dec
fsub
cmp
adc
call
cmp
mov
jmp
lods
pop
mov
mov
and
cli
cs
pop
rcl
aaa
dec
mov
xchg
bound
adc
cmp
in
adc
repnz
rol
enter
popa
addr16
rol
push
jle
xor
mov
xor
scas
cmc
aam
test
mov
adc
mov
push
and
hlt
mov
scas
fwait
inc
jge
inc
out
and
inc
(bad)
or
xor
aam
or
test
sbb
call
add
mov
je
push
xchg
andps
out
inc
jae
sub
test
cmp
nop
push
push
dec
cmc
add
je
mov
or
shl
(bad)
cli
jae
test
movs
popa
sbb
sar
sub
out
cmp
shr
inc
lea
sub
rcr
inc
pop
inc
aas
or
dec
sub
xchg
push
xlat
imul
mov
cmp
jne
or
pop
xchg
sbb
mov
in
mov
push
jecxz
leave
xor
das
dec
cmp
outs
pop
push
leave
repnz
jmp
in
mov
outs
popa
push
sub
sub
push
cld
imul
call
jns
or
popf
into
enter
xchg
mov
shl
loopne
mov
clc
sub
ins
dec
sub
and
(bad)
scas
fnstsw
jbe
stc
dec
xchg
adc
xor
ret
loop
inc
mov
(bad)
sar
fidivr
stc
cdq
mov
push
call
jno
and
push
loopne
jne
out
xchg
and
jae
jge
jns
fcmovnbe
and
xor
mov
mov
cwde
mov
pushf
pop
sti
shr
dec
(bad)
lds
mov
xchg
xchg
aas
es
push
loope
cmp
rol
cmps
mov
fs
mov
mov
jnp
push
sahf
daa
ja
fwait
outs
xchg
pusha
ror
(bad)
push
mov
stc
xor
xchg
cmp
aaa
cdq
shl
mov
adc
or
xchg
cwde
adc
mov
inc
lods
shl
in
adc
push
or
into
cmps
pop
jno
test
mov
sub
aam
xchg
and
mov
push
and
xor
dec
jne
and
in
or
jg
inc
dec
push
into
sub
mov
and
xchg
and
test
xchg
in
or
jns
data16
stos
lahf
pop
jbe
jg
(bad)
push
xchg
(bad)
or
dec
jmp
sbb
jmp
call
ss
xor
or
xor
pusha
add
repz
ds
push
gs
xlat
imul
inc
jne
mov
dec
rcr
out
(bad)
sar
xchg
and
mov
lahf
in
mov
xor
lahf
dec
jno
bnd
dec
js
dec
jg
cdq
jp
adc
dec
push
xor
cwde
movs
fmul
test
imul
cmp
add
test
sub
scas
adc
and
stc
popa
push
test
call
out
std
push
ret
mov
pushf
les
in
mov
dec
mov
pop
mov
cld
pop
arpl
xlat
jns
outs
stos
neg
clc
sbb
loop
push
mov
stos
dec
retf
inc
jb
pop
mov
iret
cmps
adc
cli
xor
aad
popf
movs
fwait
mov
dec
push
cmps
popa
xor
add
push
dec
xchg
in
dec
in
stc
imul
adc
sahf
mov
out
cmp
hlt
int3
xchg
inc
imul
xchg
push
xchg
push
fadd
mov
or
jae
and
sbb
push
(bad)
clc
xchg
pop
leave
clc
cld
clc
push
sub
popa
mov
and
icebp
push
(bad)
in
mov
aas
sub
or
inc
inc
add
mov
xchg
popa
sub
xor
fcomp
adc
push
fadd
push
and
loope
xchg
ret
jns
call
or
jmp
push
int
push
in
sahf
mov
retf
xor
sub
pop
inc
mov
ret
mov
into
jnp
mov
dec
out
inc
out
mov
adc
add
shl
ins
(bad)
ins
push
xor
xlat
outs
movs
daa
mov
movs
test
call
daa
(bad)
pop
xor
test
add
dec
push
out
xlat
scas
or
lds
mov
arpl
lds
push
xchg
xchg
aam
mov
mov
addr16
aam
rcl
imul
jmp
and
movs
hlt
inc
(bad)
cmp
cmp
push
pop
inc
and
xor
mov
push
xor
out
mov
popa
push
(bad)
dec
and
dec
(bad)
test
push
test
nop
fstp
mov
aas
es
xchg
xchg
sbb
jecxz
or
js
pop
sar
dec
jmp
stos
mov
idiv
cmp
jno
fs
jmp
bound
mov
jmp
rol
mov
mov
arpl
dec
js
push
into
jae
jno
mov
inc
inc
pushf
call
loope
gs
nop
pop
lods
(bad)
push
das
mov
paddq
loopne
lods
ret
push
push
jg
mov
mov
jmp
xchg
sbb
add
pop
fldenv
sbb
add
std
ror
jnp
or
inc
dec
in
das
adc
xchg
mov
movs
ret
(bad)
mov
jle
xchg
les
cld
aas
adc
mov
sahf
popf
xor
mov
mov
rcl
enter
add
adc
(bad)
mov
or
repz
xor
sbb
pop
add
dec
rcr
jb
cmps
iret
inc
mov
pop
inc
stc
sub
push
fisttp
cli
add
out
inc
aaa
cmp
(bad)
cmp
sub
call
mov
adc
or
ins
jae
sti
(bad)
pop
or
inc
jae
pop
xchg
add
xchg
ss
shl
xchg
xor
inc
xor
mov
mov
sub
sbb
inc
outs
jbe
ror
or
out
fcomp
adc
and
retf
pop
pop
sbb
in
add
fwait
xchg
pop
repnz
frstor
arpl
add
or
in
mov
ret
rcl
mov
imul
sub
fs
cs
lods
xor
pop
push
popf
stos
imul
enter
pop
xchg
dec
xor
test
inc
imul
cli
cdq
or
dec
ins
jnp
ins
in
clc
inc
(bad)
fst
push
lods
jbe
popa
fidiv
cmps
test
lahf
retf
sahf
jbe
repnz
sahf
jl
xor
ins
mov
movs
xor
out
in
mov
inc
sub
sub
enter
enter
sbb
push
out
sti
std
jmp
nop
loop
sub
push
mov
movaps
inc
or
xchg
adc
enter
mov
hlt
mov
push
mov
and
iret
js
(bad)
add
jp
lods
int
leave
lds
in
and
nop
div
fs
jg
push
xchg
(bad)
pushf
push
pushf
pop
push
stos
(bad)
fisubr
adc
adc
or
lods
mov
jl
ins
je
ins
mov
push
(bad)
imul
pop
in
jbe
enter
std
test
dec
sahf
std
in
daa
fisttp
push
bnd
fsubr
fiadd
fmul
(bad)
push
adc
ins
not
pop
add
pusha
pop
out
dec
or
sub
shr
hlt
rol
lods
and
inc
call
mov
sbb
dec
clc
mov
jnp
pop
fimul
xchg
jnp
movs
inc
scas
pop
sub
mov
in
jle
adc
add
jnp
push
jnp
jbe
pop
(bad)
fisttp
rcl
pop
shl
rcl
xor
rol
inc
jns
or
push
add
addr16
cwde
ror
and
xchg
inc
inc
xor
es
sbb
les
mov
faddp
fsubr
dec
mov
jne
adc
nop
out
lea
and
dec
loopne
call
mov
cmps
mov
mov
cmp
out
icebp
xor
jmp
dec
ins
aaa
scas
sbb
or
inc
ins
aaa
retf
nop
inc
test
xchg
and
pop
(bad)
in
xchg
cmps
mov
repz
cmp
xor
mov
mov
in
fwait
sbb
xchg
(bad)
push
mov
mov
push
call
mov
imul
sbb
daa
pop
jg
jl
xor
pop
and
mov
in
(bad)
call
mov
cmp
pop
aam
mov
(bad)
and
mov
bound
add
and
(bad)
jmp
std
cdq
push
dec
add
dec
mov
sub
outs
les
mov
mov
or
stos
scas
lea
addr16
sbb
ds
jp
lahf
je
jge
add
in
adc
jae
sub
dec
mov
cmp
inc
cmp
jo
js
adc
inc
cwde
std
loopne
jae
inc
or
test
mov
pop
in
pop
retf
vorps
aad
jb
mov
inc
jns
ds
gs
shl
bound
aad
iret
or
mov
xor
clc
jnp
stc
add
push
outs
adc
cmps
cmp
dec
pop
dec
ja
inc
arpl
fisub
cmp
sar
xor
fnsave
mov
je
popa
sub
pop
out
mov
jns
inc
test
pushf
(bad)
mov
scas
sub
jge
jne
cmc
cdq
(bad)
push
and
push
ds
data16
lods
jb
adc
fcom
retf
jno
fisub
inc
iret
jno
mov
and
jmp
add
sti
inc
sub
sub
cdq
push
pop
aad
es
repz
xchg
sub
jp
call
sub
cmp
inc
sbb
sbb
push
mov
loope
enter
cmps
jmp
rcr
xor
aad
sbb
fld
xchg
ins
out
repnz
sub
mov
int
sub
bound
popa
fcomp
cmps
xor
or
mov
fsubr
jbe
imul
mov
into
test
mov
xchg
cmp
push
and
jmp
inc
cli
cmc
sahf
sub
icebp
or
dec
mov
int
lods
sbb
loopne
(bad)
fbld
mov
outs
or
xor
and
pop
popf
(bad)
(bad)
test
sub
or
or
popa
loope
movs
push
sbb
test
test
jno
or
push
mov
addr16
adc
or
pop
mov
ss
dec
retf
lods
movs
daa
mov
sub
xchg
ins
imul
adc
or
shl
mov
es
inc
mov
mov
fnstsw
mov
jl
stc
add
xor
cmc
test
xor
out
or
or
out
xchg
repz
pop
scas
xchg
add
ins
imul
sbb
add
fisubr
out
outs
jl
xchg
repnz
sub
inc
in
lods
mov
sbb
add
cmps
jmp
ret
aad
pop
jbe
in
sbb
lds
xor
jge
aam
xchg
push
popa
jbe
inc
xchg
pusha
out
and
int3
cmp
and
jle
xchg
sbb
in
sar
cwde
rcr
dec
mov
stc
daa
movs
loop
scas
push
and
cmps
fsub
mov
out
retf
in
jnp
lahf
jmp
xchg
int3
push
cmp
inc
in
jno
add
loopne
ret
jns
sbb
adc
data16
xor
or
out
ins
sbb
ret
das
stc
mov
ss
cmp
ss
xchg
xchg
shr
cli
sbb
retf
mov
loopne
mov
lock
mov
ror
push
movs
rol
push
sub
xor
movs
lods
imul
leave
ja
jg
push
push
mov
or
sbb
pop
imul
adc
call
in
sti
fistp
and
inc
ror
pop
adc
pop
add
add
stc
in
inc
mov
and
xchg
push
enter
(bad)
jbe
dec
aad
imul
pop
(bad)
mov
addr16
pop
mov
retf
int
jnp
in
xor
lods
mov
test
hlt
fwait
outs
push
adc
not
punpckhbw
pop
imul
hlt
bound
add
lods
add
rcr
mov
daa
inc
jecxz
(bad)
ss
fsub
outs
xor
sbb
lahf
dec
pop
fdivr
int
aaa
pop
popa
(bad)
fcos
stos
test
hlt
inc
xchg
inc
js
pop
stc
or
jae
ss
test
enter
pop
cmp
adc
push
jl
aas
jl
repnz
cmp
outs
pop
test
pop
sub
push
jb
jbe
jo
fiadd
and
mov
push
push
es
cld
add
into
fimul
jmp
into
xor
fidivr
or
or
cmps
cmp
cmp
out
(bad)
iret
movs
jno
stos
or
call
xor
pop
(bad)
outs
lock
jbe
ss
fst
mov
inc
mov
call
cmc
call
popa
xor
sub
mov
sets
cmp
jns
jno
dec
clc
les
call
xor
add
mov
adc
pop
push
mov
mov
mov
cdq
xchg
jle
xor
cdq
fistp
aas
std
and
cmp
sub
rcl
fild
push
xchg
mov
pop
mov
sbb
enter
push
(bad)
stos
stc
scas
not
test
aaa
mov
inc
jmp
stos
sub
pop
outs
and
or
jae
aas
and
xchg
jg
push
arpl
pop
jae
mov
fxch
pop
jg
sar
dec
xchg
pop
lahf
out
adc
fld
xor
jb
adc
cs
imul
sub
popf
dec
stc
add
xor
je
xchg
push
(bad)
jg
stos
test
(bad)
push
test
sbb
mov
push
(bad)
inc
in
push
aad
push
or
cmp
or
inc
xchg
outs
jnp
jle
in
jp
stc
clc
fiadd
push
sub
mov
push
rol
ror
mov
xor
mov
cmp
xchg
xor
and
adc
das
add
inc
(bad)
jmp
(bad)
jp
test
cmp
fbld
in
daa
test
push
pusha
pop
pop
cmp
hlt
dec
mov
xchg
fs
faddp
push
xor
call
aam
inc
div
dec
imul
jecxz
push
jmp
push
and
push
loopne
int3
cmps
jo
loope
into
jo
mov
inc
icebp
mov
or
jmp
xchg
in
loopne
mov
sbb
mov
jmp
jg
xchg
push
sahf
dec
lock
in
es
call
aas
mov
push
jmp
outs
xchg
sti
in
xor
sub
or
leave
jp
pop
test
and
pop
mov
jle
xor
lahf
mov
sti
cmp
mov
sub
mov
cdq
push
push
js
push
imul
cmp
(bad)
mov
jle
pusha
loope
(bad)
outs
daa
and
and
adc
call
push
adc
scas
or
in
ds
test
xchg
stc
repnz
and
aaa
repnz
push
cld
cmp
dec
imul
mov
cdq
xchg
fisubr
je
call
lods
jbe
test
push
mov
pop
or
in
pop
das
cmp
aad
mov
jge
les
fsub
jne
sbb
xchg
add
bound
lods
adc
adc
scas
adc
jns
cli
out
stos
hlt
push
(bad)
cmp
jmp
sub
pusha
cmp
(bad)
fsubr
mov
add
adc
ficom
fs
icebp
int
repnz
addr16
inc
into
adc
sub
sub
jmp
movs
pop
inc
shl
pop
shl
sub
add
iret
leave
imul
push
movs
adc
(bad)
aam
sub
ins
sub
shr
and
jg
mov
imul
mov
add
dec
fst
and
out
push
(bad)
sbb
fst
add
call
retf
pop
jmp
pop
sbb
loop
ss
ja
inc
cmp
dec
outs
scas
xor
xor
sbb
(bad)
mov
scas
dec
ds
jbe
es
pop
dec
and
jnp
das
pop
push
sahf
lods
dec
sub
repz
sar
xchg
sub
xchg
or
xchg
xchg
in
hlt
mov
rcl
imul
push
cli
pop
push
mov
push
rcr
loope
call
shl
rol
mov
movs
xchg
int
jge
xchg
jecxz
push
inc
mov
cwde
inc
sbb
push
and
add
aas
in
or
shl
lea
mov
outs
jecxz
pop
pop
pop
jmp
jne
(bad)
sub
hlt
mov
lock
cmp
push
xchg
or
jae
scas
xchg
outs
call
cmp
dec
daa
stc
lea
sahf
jae
cld
mov
dec
push
sub
xchg
adc
fld
aad
jnp
or
xchg
daa
add
sub
jle
add
imul
sbb
stos
push
fimul
jne
push
adc
jbe
iret
frstor
stos
xor
dec
sub
push
cmp
push
inc
test
or
sbb
icebp
ins
pop
scas
mov
mov
ds
mov
fcom
jb
aam
in
dec
sbb
mov
aad
or
cmp
jle
sti
sbb
idiv
push
ja
or
movs
mov
fsubr
lea
push
std
mov
fmul
mov
mov
mov
(bad)
aaa
jge
fstp
cwde
xlat
mov
test
popf
cmps
test
in
shl
les
pop
xchg
jecxz
dec
cdq
fld
cmp
(bad)
pop
and
adc
loop
or
std
sub
int
dec
and
mov
and
or
mov
mov
push
or
mov
fwait
sub
lods
or
mov
arpl
sbb
mov
cmp
(bad)
hlt
rcl
sbb
and
call
add
out
cmp
popf
or
sub
mov
fs
push
mov
push
mov
xchg
ins
loopne
fsub
shl
mov
repz
add
(bad)
xchg
inc
push
loop
sahf
test
fldenv
pop
sub
mov
push
and
fisub
dec
push
and
jge
lahf
push
adc
cli
add
xchg
nop
outs
out
ja
cmp
xlat
ret
mov
add
in
iret
adc
out
inc
fisub
mov
popf
test
push
sub
adc
jl
pop
shl
nop
ficom
data16
pop
ret
repnz
push
cmp
fistp
lods
mov
cmps
mov
out
inc
jl
repnz
mov
adc
pop
dec
xor
pop
cli
fisubr
enter
fstp
dec
in
stc
jns
out
mov
push
retf
mov
mov
cwde
mul
int
inc
push
pop
xor
xor
xor
inc
push
(bad)
f2xm1
call
movs
(bad)
xchg
cmp
mov
shl
es
out
cs
shl
adc
into
pop
mov
mov
inc
jg
pop
dec
test
sub
je
xchg
in
mov
pop
dec
test
add
sar
add
aam
mov
xchg
cmps
xchg
mov
(bad)
xchg
mov
call
jge
cdq
jno
push
push
cmps
cmp
fimul
mov
out
and
add
inc
inc
cmp
and
jp
jbe
aam
pop
cld
xchg
xor
rcr
xor
call
test
xchg
fidiv
xchg
cmp
mov
popa
ss
inc
pop
jg
in
pop
jno
loope
mov
mov
out
fld
jo
popf
retf
into
jae
sti
shl
ins
adc
in
cmp
pop
addr16
pushf
sahf
jg
imul
jge
push
xor
push
sahf
mov
dec
and
dec
shld
xchg
xchg
xor
xchg
xchg
add
arpl
rcr
mov
out
cmps
jle
ret
xor
cmc
jae
jp
mov
jecxz
xor
fldcw
cmps
push
loope
and
dec
in
sub
inc
popa
outs
ins
outs
cvtdq2ps
movs
add
pop
jp
mov
jae
push
dec
push
cs
mov
jns
ret
mov
popa
lods
cmp
pusha
retf
jbe
mov
mov
inc
movs
ffree
paddsw
aas
cmp
ins
out
lea
es
push
xor
mov
add
jbe
or
(bad)
out
clc
jae
cmc
push
push
retf
je
sbb
imul
arpl
sbb
mov
das
aad
imul
or
xchg
jecxz
add
dec
cmps
pop
outs
sbb
cli
sbb
sahf
mov
loope
pop
test
movs
call
inc
or
call
push
and
mov
fwait
jne
inc
xchg
loope
icebp
movs
xor
in
call
mov
fnstsw
or
fstp
xor
adc
inc
cdq
imul
cmps
cmp
sbb
call
cli
call
add
push
arpl
outs
or
sti
jae
int3
xchg
push
sub
sub
js
ss
mov
pop
ror
push
in
and
push
inc
addr16
sub
mov
popf
push
imul
call
sbb
fnsave
jge
pop
cmp
(bad)
fiadd
retf
push
aas
out
addr16
ror
or
(bad)
out
add
jmp
inc
cmp
cld
xlat
cmp
mov
pop
and
daa
push
xor
cmps
jg
sti
jecxz
cdq
movs
(bad)
repz
lea
push
daa
rcr
shr
xchg
je
fnsave
(bad)
clc
fdivrp
jno
push
(bad)
pop
rol
jmp
repz
inc
push
mov
adc
aas
mov
ret
mov
dec
jecxz
sbb
push
xchg
jmp
(bad)
out
sbb
inc
mov
jp
mov
push
out
int3
inc
lock
into
dec
ror
and
sahf
movs
rol
adc
add
push
or
adc
bound
test
jl
xor
(bad)
sbb
mov
dec
test
cmp
mov
leave
cvtpi2ps
sbb
lahf
call
xor
arpl
fisub
jo
add
rcr
xchg
pop
icebp
dec
out
jge
push
popa
sti
pop
add
push
fidiv
(bad)
aaa
sub
int3
xchg
inc
in
daa
mov
out
cmp
jne
pop
out
stc
sbb
adc
inc
mov
arpl
les
rol
mov
dec
dec
test
push
imul
jecxz
lar
pop
inc
jp
les
into
xchg
popf
pop
(bad)
jnp
jns
xor
shr
cdq
(bad)
fld
in
rcr
mov
cs
lods
enter
int
popf
xor
pushf
pop
out
cmp
jp
(bad)
pop
pop
pop
data16
xchg
adc
imul
cdq
pop
sti
arpl
pop
sbb
in
pop
int3
add
jg
test
fiadd
cmp
test
xchg
repz
or
adc
lods
sahf
mov
movs
dec
sbb
or
out
mov
(bad)
xchg
ret
push
shr
fwait
xor
mov
ds
clc
mov
cmps
shl
es
aad
or
sti
mov
push
and
sbb
ins
out
push
ror
js
sbb
shl
in
shl
jo
cmps
jg
sub
push
test
les
ret
into
int3
mov
nop
or
call
xor
jmp
(bad)
stos
mov
scas
cmc
addr16
jge
mov
retf
mov
inc
into
mov
test
inc
ds
dec
adc
sbb
or
cs
cmp
dec
(bad)
loope
cmps
push
lods
inc
mov
(bad)
pop
das
sbb
movs
push
cmp
mov
lods
loope
(bad)
clc
aaa
push
inc
pop
out
sti
sbb
mov
scas
pop
push
pop
stc
sub
cmc
jno
cs
out
jl
jecxz
ss
mov
pop
xchg
pop
rcl
out
jo
in
pop
and
xor
cmp
mov
xchg
xchg
pop
cmp
mov
xor
xchg
iret
xor
loope
sti
ror
push
xchg
bound
iret
add
push
sbb
in
call
out
mov
scas
or
add
cmp
mov
imul
les
inc
(bad)
movs
int
or
arpl
cmp
mov
adc
movs
sub
cmp
xadd
lods
(bad)
push
pop
ins
retf
or
push
add
rol
inc
dec
jb
pop
rep
movs
xor
cmp
out
push
scas
sbb
(bad)
rol
xchg
into
xor
out
dec
rol
fidivr
sti
aas
cmp
fild
mov
pop
retf
pop
cmp
and
shl
call
and
dec
fldenv
xchg
xlat
cli
xor
mov
vphsubdq
jnp
cmp
in
cmps
fsub
data16
iret
sub
test
or
dec
xchg
rep
cmc
test
cmp
repz
mov
in
push
push
cmp
dec
mov
add
sbb
mov
mov
fcomp
push
mov
enter
push
xor
popa
pusha
push
sti
arpl
xor
mov
hlt
repnz
call
jne
shl
sar
pop
das
ja
mov
das
jge
mov
sub
xchg
dec
push
sti
test
xor
and
test
xchg
pop
mov
(bad)
(bad)
push
mov
in
mov
cdq
inc
iret
dec
nop
or
dec
cld
mov
ds
cmc
pushf
and
mov
dec
mov
ret
nop
xchg
stc
retf
ror
out
cmps
add
mov
outs
shr
add
push
loope
dec
scas
add
pop
dec
mov
add
lods
scas
mov
fidiv
pop
das
retf
loop
or
xchg
and
scas
pusha
iret
xchg
aaa
dec
xchg
pop
fadd
sbb
push
and
jp
mov
xor
int3
stc
xchg
lods
mov
dec
leave
pop
sub
jg
push
dec
je
inc
pop
adc
push
push
push
dec
fisttp
cs
inc
dec
sub
les
sub
div
inc
fidiv
xchg
hlt
imul
cs
xor
dec
pushf
jns
and
pop
push
mov
scas
xchg
jecxz
pop
vpsubb
cmp
ds
inc
pop
addr16
movs
stc
stos
adc
pushf
fld
(bad)
pop
ret
mov
jns
sbb
je
or
push
sbb
loop
stos
(bad)
lods
lahf
add
and
lds
xchg
mov
adc
inc
push
sub
and
jl
cli
sub
cmp
jl
das
xchg
das
test
rcl
movs
mov
dec
shr
rol
cmps
or
sbb
mov
(bad)
dec
(bad)
sti
mov
data16
mov
inc
mov
cwde
movs
pop
aaa
jecxz
cmp
dec
imul
inc
mov
rcl
pop
mov
(bad)
jb
cmp
or
xor
push
aad
xchg
pop
pop
mov
loop
xchg
dec
mov
mov
in
cdq
mov
xor
jge
into
push
test
cmp
call
sub
push
cli
test
mov
inc
rol
movs
movs
xchg
in
lahf
int3
pop
les
mov
out
lea
mov
stc
jmp
(bad)
out
aad
xor
push
jbe
mov
pop
std
test
pop
popa
repz
adc
mov
inc
cs
xor
pop
std
add
mov
(bad)
mov
pop
inc
cmp
sbb
xor
enter
loopne
xor
push
cmps
inc
test
pop
lods
rep
out
sbb
xchg
aaa
mov
in
jmp
and
stos
ror
add
mov
jno
loopne
inc
mov
out
lds
sbb
daa
dec
mov
jae
jo
mov
call
les
jmp
cmp
xchg
retf
or
in
faddp
repz
push
(bad)
dec
cmp
xchg
mov
add
or
ret
xor
sub
dec
repnz
fnstcw
cmp
cs
push
inc
sub
xchg
cmp
add
jp
lods
loop
pop
out
scas
xor
and
mov
sbb
test
repnz
jecxz
aad
mov
xchg
adc
aam
pop
and
xchg
jne
ror
cmps
leave
retf
fdiv
imul
xchg
sub
push
jp
lahf
ret
mov
cmp
std
rcl
dec
out
or
js
sub
mov
pop
adc
inc
push
sahf
mov
mov
and
mov
leave
ficom
vmwrite
sub
imul
test
cdq
pmulhuw
js
xlat
mov
jecxz
ss
sub
loope
lahf
std
push
stc
push
iret
rcr
push
ds
sbb
xor
loope
jecxz
test
pop
xchg
dec
add
pop
fst
dec
add
(bad)
not
or
inc
fcomip
inc
add
xchg
iret
jmp
adc
ins
mov
jb
js
push
scas
dec
mov
pop
or
dec
nop
jae
out
push
dec
xchg
pop
xor
add
inc
jb
push
mov
repz
add
xor
or
adc
arpl
out
hlt
es
(bad)
daa
and
ins
xchg
jo
or
adc
test
mov
add
ror
dec
cmps
(bad)
fisttp
ins
xor
fwait
inc
int
out
xchg
push
fsubr
push
loop
test
pop
pop
dec
inc
into
retf
pop
(bad)
mov
ja
fcomp
hlt
inc
inc
sub
movs
jns
sbb
dec
retf
mov
not
jle
sbb
stc
dec
daa
call
and
loope
push
retf
addr16
jno
pop
scas
jp
jge
mov
iret
data16
repnz
sbb
adc
(bad)
cmp
xor
es
push
mov
movs
test
mov
fdivr
mov
xor
cmp
stos
(bad)
cmp
pop
pop
mov
cmp
fld
mov
cmp
and
jne
xor
cmps
jae
or
addr16
hlt
mov
jo
daa
int3
les
jg
rcl
inc
ins
add
mov
(bad)
fidiv
push
dec
imul
ins
xchg
leave
hlt
lahf
cmp
push
xor
push
push
cld
sbb
or
es
je
push
call
adc
int3
inc
inc
jnp
cmp
in
pushf
xor
int
dec
push
inc
std
jno
or
lods
mov
dec
sbb
jmp
mov
js
add
inc
mov
jl
xchg
and
mov
int
femms
lahf
pop
sbb
xor
adc
ja
push
dec
retf
loop
inc
inc
sbb
ja
push
and
fwait
imul
repnz
or
add
and
jp
xor
fldenv
xchg
mov
imul
push
sahf
loopne
popa
fs
rol
repz
adc
xchg
adc
jae
shl
push
jnp
xlat
xchg
fnstenv
xor
scas
or
(bad)
ror
in
fs
dec
pop
shr
xchg
jecxz
inc
std
pop
arpl
push
dec
call
inc
pop
out
fistp
popa
adc
movs
mov
fdivr
leave
or
mov
inc
adc
stos
stc
or
jno
mov
das
add
test
dec
(bad)
in
jmp
lods
mov
mov
dec
inc
push
lds
pop
ja
in
mov
out
xchg
pop
cld
in
pop
dec
(bad)
push
popa
hlt
adc
lea
add
je
cmp
pop
xor
cmps
je
jns
stc
ret
push
fdiv
mov
cmp
dec
popf
mov
hlt
icebp
or
popa
stc
dec
arpl
add
xchg
and
cmps
int3
shl
scas
cli
add
cs
cmps
xchg
ds
lock
inc
std
inc
je
ret
fadd
dec
(bad)
aaa
mov
cmp
in
mov
out
jnp
mov
loopne
dec
lock
dec
call
or
xchg
cmp
lods
lahf
rcl
pop
outs
mov
mov
cmps
(bad)
out
inc
shl
mov
xchg
cld
lds
sbb
loope
mov
sub
js
js
jo
xor
in
imul
js
adc
enter
(bad)
out
sub
and
(bad)
retf
adc
ja
or
lods
cdq
adc
dec
jbe
fdiv
mov
call
stc
mov
push
out
lods
imul
enter
sub
mov
movs
and
mov
or
ret
std
fistp
ins
and
or
dec
jb
xor
shl
fiadd
jp
test
(bad)
rol
jl
push
dec
jbe
loop
into
movs
scas
jo
push
pusha
movs
ret
mov
mov
std
or
aas
retf
nop
fimul
retf
iret
push
jno
xchg
hlt
outs
jo
(bad)
xor
mov
loope
mov
loope
or
enter
sbb
int3
movs
retf
add
iret
mov
xlat
xchg
xchg
sub
adc
movs
xchg
repnz
mov
sub
xchg
(bad)
ins
(bad)
dec
push
mov
ficom
and
xchg
fsubr
lock
cmp
or
add
mov
stos
jne
jns
cmp
mov
adc
add
adc
or
push
fsubr
inc
or
fcmovb
popa
jmp
mov
scas
xor
hlt
xchg
push
push
scas
and
mov
sbb
retf
push
cwde
xchg
ins
dec
faddp
fcmove
(bad)
mov
dec
or
data16
mov
pop
and
clc
pop
sub
loop
not
xchg
inc
pop
mov
std
icebp
sbb
push
mov
jns
fs
pop
rcl
push
add
sub
outs
cmp
mov
cmp
adc
inc
ret
pop
lock
jp
pop
jg
pop
and
jecxz
push
xchg
inc
push
sar
out
pop
daa
cmc
push
ficomp
mov
sti
ror
dec
xchg
outs
mov
retf
push
xlat
mov
cdq
xor
jmp
out
push
pusha
inc
ins
cmps
push
mov
cmp
rol
sar
mov
rcr
jo
dec
jo
cmp
xchg
push
xor
(bad)
imul
jg
das
inc
mov
pop
clc
(bad)
rol
sub
in
imul
xor
cmp
inc
loopne
in
daa
outs
rcl
mov
adc
leave
mov
add
shr
mov
push
arpl
jecxz
mov
sub
sar
push
sbb
imul
test
lahf
mov
out
adc
out
test
shl
dec
retf
imul
(bad)
mov
xor
fidiv
mov
es
int3
pusha
cmps
imul
out
jno
adc
push
scas
mov
hlt
jae
sub
mov
cmp
jbe
movnti
lock
and
scas
aam
gs
pop
pushf
inc
call
sysexit
(bad)
shr
leave
imul
sahf
mov
repnz
lods
push
mov
jge
push
dec
pop
xchg
imul
cdq
rcr
mov
adc
inc
cmp
add
shl
int
shr
xor
push
std
push
and
cmc
xor
pop
xchg
icebp
cmps
xchg
cdq
mov
or
les
sub
imul
fdiv
jb
pusha
pusha
in
test
push
gs
in
into
xor
mov
xchg
dec
cli
fwait
jns
rol
out
jb
mov
or
mov
inc
lea
push
mov
pop
add
ss
lods
outs
sub
jo
aam
sbb
cmp
repnz
dec
je
xchg
fisttp
cld
in
cmps
mov
sbb
cdq
pop
pop
aas
cmp
and
inc
mov
dec
movs
push
iret
jae
and
pushf
stc
mov
mov
es
jnp
lods
xor
dec
hlt
push
mov
xchg
sbb
xchg
scas
push
stos
jb
int3
cmp
aas
lds
pop
cmp
xchg
mov
xor
add
ss
xor
dec
gs
pop
in
cmp
push
sti
out
test
imul
jns
add
dec
cmc
pushf
loope
or
xor
mov
bound
pop
inc
call
add
jo
imul
mov
dec
pop
jmp
fnstcw
mov
cmp
jge
adc
loopne
cmc
xchg
xor
fist
sahf
sbb
(bad)
dec
lds
retf
ins
shl
dec
sbb
sbb
and
cmps
fcomp
cwde
and
pop
in
cmp
fisttp
xor
clc
lock
and
sahf
jmp
cmp
mov
addr16
fs
ins
inc
sbb
jle
(bad)
sbb
cmp
cmp
xchg
daa
ss
push
push
mov
jb
cmp
mov
int
pop
sub
push
ins
adc
push
add
pop
xor
test
retf
adc
jle
outs
sub
mov
mov
cmp
cvtdq2ps
shl
mov
jae
xor
ds
push
xchg
popfw
pop
sub
popf
push
mov
add
inc
push
(bad)
inc
add
jg
and
popf
(bad)
sub
jns
xchg
(bad)
xchg
fld
fwait
cmp
push
xchg
mov
xor
xchg
cmp
movs
mov
in
dec
call
pop
mov
sbb
or
ins
sbb
leave
(bad)
std
out
inc
out
adc
enter
jnp
mov
lods
mov
jle
je
shl
js
adc
push
jmp
arpl
enter
hlt
or
xchg
mov
and
mov
sar
xor
sbb
clc
iret
hlt
xchg
int
push
fwait
test
je
or
popa
je
mov
test
push
out
movs
lock
mov
mov
cmps
adc
fiadd
stos
jo
rcr
(bad)
leave
fstp
ins
xchg
pop
call
aaa
movs
jno
pop
lods
adc
or
xor
dec
jns
mov
jae
inc
js
stos
mov
and
jmp
and
imul
jns
cwde
pop
jo
sbb
sbb
retf
sbb
pusha
lods
cs
xchg
cld
in
out
sbb
scas
xchg
hlt
dec
and
and
loopne
mov
or
rol
clc
fsubrp
(bad)
loop
jbe
ss
mov
mov
xchg
inc
lahf
push
cmp
mov
xchg
ror
and
fidiv
ret
div
mov
mov
scas
pusha
push
stos
xchg
rcl
mov
mov
mov
imul
adc
dec
es
(bad)
mov
mov
xor
push
mov
jo
jns
or
dec
mov
mov
leave
test
test
mov
add
(bad)
adc
mov
movs
retf
pop
clc
xor
stos
mov
or
mov
enter
outs
fdiv
ss
aas
add
push
outs
jle
repz
stos
push
xchg
cdq
mov
pusha
pop
fdivrp
clc
enter
dec
stos
push
adc
mov
push
xor
cmps
and
imul
jmp
je
cli
scas
cmps
xchg
or
pop
jno
call
pop
xor
daa
and
(bad)
cmp
jno
das
imul
mov
and
push
je
sbb
fisub
xor
adc
sbb
jmp
js
aad
or
inc
cmovg
push
enter
shl
cmp
and
pop
or
jmp
out
retf
sbb
out
push
fisub
cli
dec
cs
std
push
pop
sbb
jbe
pop
fdivr
addr16
adc
int
repz
xchg
and
por
dec
lds
mov
loope
mov
dec
add
bound
mov
sbb
mov
leave
jnp
cli
sbb
cdq
test
add
sahf
cmps
(bad)
clc
std
jl
in
fdivp
xor
mov
push
(bad)
popf
jne
xchg
xchg
out
and
daa
mov
inc
dec
dec
xor
mov
xor
in
or
cmp
hlt
sub
mov
enter
clc
mov
inc
movs
and
lock
push
dec
popf
ror
ret
cmp
mov
loope
xor
and
repz
or
fisub
jne
popf
sbb
rcl
dec
mov
arpl
js
mov
or
mov
jns
pop
dec
jle
xor
or
mov
out
fsubr
xchg
mov
push
mov
int3
sub
ret
stos
scas
jae
fwait
or
xor
repnz
sahf
cs
jl
cmc
pop
shl
adc
stos
hlt
shl
hlt
mov
lods
add
cmp
pushf
sbb
mov
cmp
xor
dec
stos
clc
test
mov
lea
stos
mov
fisttp
sbb
push
jo
push
dec
push
adc
jae
in
(bad)
and
pop
out
mov
jmp
addr16
das
in
arpl
pop
mov
outs
div
push
jne
pushf
add
rol
fnstcw
aas
push
cmc
xor
mov
push
mov
stos
out
in
push
data16
test
inc
xchg
sub
push
retf
push
mov
mov
push
push
jns
xor
js
mov
popf
mov
adc
je
leave
or
push
inc
fwait
cmp
mov
test
aad
scas
sub
mov
pop
dec
push
push
mul
out
xor
jnp
jmp
xchg
repnz
add
xchg
pop
jp
push
ja
enter
mov
test
jno
out
xchg
repz
das
or
mov
shr
pop
jae
pop
mov
movs
push
inc
xor
inc
fisub
mov
dec
ds
imul
fisttp
inc
cmps
push
jae
mov
adc
loop
inc
imul
jecxz
aad
pop
sbb
push
data16
push
mov
ret
retf
jnp
nop
jae
xchg
lea
scas
loop
add
xor
test
inc
bound
mov
add
mov
ins
jl
lods
xor
sub
dec
(bad)
aas
pop
gs
addr16
mov
jmp
sub
sub
jne
adc
mov
daa
test
out
jg
or
(bad)
out
adc
call
sbb
mov
lahf
jns
inc
dec
es
in
jl
imul
mov
call
leave
adc
in
sub
xlat
stos
pushf
addr16
lods
and
aam
or
mov
jmp
enter
fsub
cmps
mov
fs
imul
push
scas
xor
pop
sub
fld
push
sub
cmp
mov
rcr
(bad)
dec
inc
sbb
mov
pop
(bad)
dec
and
cmp
xor
sbb
push
cmp
mov
mov
add
push
imul
mov
stos
scas
mov
int3
and
popa
ds
xchg
cmc
fdiv
stos
(bad)
push
adc
xlat
out
(bad)
sub
and
movs
inc
(bad)
ror
ins
sbb
mov
mov
push
ret
stc
adc
imul
retf
xchg
xchg
imul
push
or
hlt
test
cmp
cwde
out
movs
pop
dec
retf
clc
push
repnz
dec
mov
gs
inc
mov
daa
dec
sub
jns
pusha
sub
mov
popf
iret
and
sbb
sub
mov
mov
pushf
inc
xchg
add
pop
fsubr
cmp
shl
sbb
jae
xchg
cmp
push
xor
imul
dec
das
mov
mov
add
xchg
idiv
jl
dec
sbb
jo
jns
jle
xchg
ja
sbb
out
adc
imul
ror
loope
jmp
push
push
pushf
push
or
pop
mov
cmp
or
pop
jmp
push
lea
(bad)
es
mov
mov
mov
adc
pop
xchg
mov
arpl
rol
(bad)
out
lods
sti
mov
sub
lds
xchg
jle
sbb
pushf
inc
ja
aaa
xor
mov
lahf
leave
lock
mov
sub
ffree
das
in
pop
sbb
scas
fldcw
jl
sti
push
scas
sub
movs
pop
movs
mov
imul
in
xor
pop
push
(bad)
ficomp
je
pop
sbb
mov
xchg
inc
sbb
imul
ss
fisubr
adc
bt
sbb
repnz
cmc
fadd
sub
and
mov
or
cdq
pop
dec
adc
outs
cmp
inc
mov
mov
push
out
pop
aad
retf
sbb
push
ror
xchg
int
pop
sar
ins
ins
adc
dec
mov
ror
sub
sub
scas
pmaxub
js
push
lods
aas
movs
and
in
out
push
sbb
push
mov
stos
mov
cmp
inc
pop
push
mov
mov
jge
lds
call
pop
movs
ret
in
inc
sbb
(bad)
xchg
push
jecxz
fimul
dec
cdq
sahf
jne
ins
xor
dec
pop
out
add
and
les
cdq
cmp
jno
cmps
jmp
xlat
adc
push
mov
out
xor
push
sbb
inc
cmp
shl
lea
or
aaa
imul
loope
call
pop
cmp
scas
ins
sbb
call
idiv
and
pop
jmp
aad
(bad)
aad
movs
push
dec
sahf
mov
jl
aad
sub
cmp
mov
push
xor
mov
dec
jmp
mov
or
addr16
and
mov
ror
add
mov
movlps
das
sbb
mov
out
enter
push
inc
xlat
sbb
stos
cwde
(bad)
lahf
mov
pop
and
mov
ret
add
push
push
ins
jmp
adc
dec
fwait
push
jp
sub
push
stc
fs
jg
inc
mov
(bad)
adc
mov
push
rcl
arpl
lds
call
mov
jle
fnstenv
loop
inc
adc
and
popf
adc
dec
mov
pop
call
fild
mov
add
dec
in
jge
mov
sub
and
retf
sbb
imul
daa
pop
test
ret
inc
add
adc
cli
gs
lods
xlat
push
dec
pop
sar
test
adc
fdiv
outs
jmp
cmp
stos
fisttp
pop
nop
jo
pop
mov
inc
xchg
or
(bad)
xor
clc
daa
mov
fld
lahf
(bad)
mov
mov
jb
pop
sub
aam
daa
fsub
or
push
aas
jl
loop
mov
fstp
ficomp
pusha
cmp
je
jmp
mov
sub
inc
dec
stos
mov
cli
mov
mov
xlat
arpl
bound
aaa
or
mov
les
cwde
sub
jge
xchg
jecxz
xor
test
leave
out
retf
outs
xor
mov
in
test
into
jo
push
push
sbb
test
cmc
dec
mov
xchg
fmulp
shl
push
popa
cli
mov
inc
cmps
pop
jns
mov
cmps
adc
mov
in
adc
addr16
sbb
mov
ss
mov
sahf
add
or
inc
sar
xor
sbb
ds
retf
cmp
and
lahf
push
rol
fisttp
xchg
xor
jns
push
fucomi
popa
(bad)
mov
or
scas
mov
(bad)
push
mov
add
sub
add
dec
test
jl
es
ret
pop
xor
pop
dec
xchg
jg
jmp
dec
add
das
cmc
mov
add
cmp
fldl2e
in
mov
test
dec
out
push
fcmovne
jb
aaa
jge
in
sbb
jmp
cmps
pop
and
pop
cmp
cmc
sub
push
dec
or
call
and
sbb
push
sbb
cwde
adc
add
sub
fnsave
mov
sti
dec
(bad)
mov
xchg
(bad)
movs
scas
jg
sbb
out
mov
dec
rcl
jl
or
xchg
add
dec
push
(bad)
pop
dec
mov
mov
pop
jmp
push
in
call
mov
mov
ins
mov
faddp
or
jbe
sbb
xchg
and
test
scas
inc
outs
cmps
xchg
popa
xor
aad
jl
mov
cli
gs
adc
imul
add
into
adc
xchg
xor
add
ret
ret
jbe
fcom
mov
rcr
dec
cdq
xchg
push
cmps
(bad)
cmp
cli
rcr
mov
mov
aam
mov
(bad)
sub
test
add
stc
dec
inc
xor
adc
stc
push
push
xchg
inc
popf
mov
iret
ja
out
rcr
fsub
jle
in
and
retf
fs
xchg
rol
mov
jae
or
bound
(bad)
ja
mov
jno
and
mov
mov
sbb
mov
imul
lods
xor
js
jecxz
scas
push
movs
ss
clc
(bad)
imul
cmp
mov
scas
jle
push
or
pop
popf
js
(bad)
sub
outs
into
(bad)
adc
mov
pop
lds
gs
mov
mov
push
mov
clc
inc
and
daa
mov
cmp
ret
and
out
mov
scas
push
in
pop
aas
mov
sar
fwait
push
dec
aad
mov
rcr
aas
popa
jbe
or
sub
sbb
lock
inc
pusha
xor
sti
call
push
inc
dec
jno
repz
pop
pop
ret
pop
cmps
xchg
imul
ins
inc
mov
sbb
adc
mov
repnz
jecxz
xchg
in
cli
ins
push
(bad)
xlat
or
imul
xchg
and
add
je
sbb
inc
sbb
mov
jb
inc
adc
cmp
dec
ret
mov
mov
(bad)
jmp
dec
xchg
pop
jne
xor
push
shr
inc
fucomp
lods
enter
add
push
sub
cmp
add
bound
cld
sbb
dec
shl
adc
mov
pop
rcl
pushf
movs
test
and
mov
push
adc
stos
and
outs
stc
punpckhwd
(bad)
bound
mov
enter
fld
movs
sub
in
jmp
dec
pop
xchg
sti
lahf
test
imul
dec
addr16
mov
xchg
dec
mov
pop
fistp
test
jae
sahf
inc
ins
jl
mov
mov
clc
popa
cmc
cmc
push
push
lds
lahf
stos
mov
jmp
repnz
adc
xchg
mov
lods
sub
fidiv
push
bound
jg
push
dec
and
std
push
mov
retf
ds
mov
push
push
inc
std
aam
int3
aaa
xor
cmps
mov
mov
fnstenv
dec
pop
pop
inc
(bad)
and
cli
push
fstp
test
mov
or
add
cmp
jmp
call
xor
fwait
in
call
lock
push
jge
js
out
je
adc
pop
xchg
inc
repz
or
(bad)
dec
fadd
pop
mov
adc
cwde
mov
jecxz
mov
mov
jnp
add
pop
mov
imul
xchg
nop
inc
in
jno
inc
pop
cmp
inc
mov
dec
and
iret
popf
jbe
mov
ins
push
push
pusha
jecxz
push
inc
dec
xchg
sar
les
fistp
ja
lods
stos
mov
jge
or
add
mov
jp
cdq
hlt
loopne
lea
mov
push
and
xor
scas
or
es
sub
dec
les
adc
mov
lods
fldenv
push
cmps
fcomp
mov
shl
cmp
out
mov
inc
add
dec
dec
stos
cs
sub
adc
jo
test
imul
(bad)
push
ret
pop
adc
xor
jmp
lock
aaa
jg
in
cmp
call
je
fistp
mov
lock
data16
icebp
inc
clc
scas
hlt
dec
fld
cmp
ja
mov
outs
cli
jnp
push
into
jmp
les
iret
ja
or
in
pushf
inc
ror
jno
mov
repnz
jbe
jnp
jno
or
xor
(bad)
aam
lock
fldenv
add
sub
lea
inc
cmp
out
xchg
sub
dec
add
fidiv
std
fisttp
lods
adc
pop
jae
cld
ins
arpl
out
xchg
dec
mov
mov
scas
jne
rcl
xchg
xor
ds
mov
add
sub
ss
sbb
jl
push
scas
push
lds
mov
mov
xor
xor
sbb
or
scas
outs
arpl
ins
sbb
mov
ret
or
lds
sbb
pop
imul
test
int3
adc
enter
cmps
pop
std
cmp
(bad)
mov
push
addr16
call
mov
dec
ins
pop
jp
repz
mov
inc
ins
test
out
ror
mov
mov
push
shl
push
mov
retf
mov
jle
dec
cmp
xor
retf
mov
(bad)
(bad)
inc
loopne
(bad)
push
pop
xchg
ror
cmp
mov
pop
adc
jecxz
out
xchg
xor
jp
or
mov
je
or
jp
jmp
je
in
jb
pop
xor
lea
xor
adc
leave
out
ins
push
lods
inc
xor
ds
mov
fld
cmp
loope
out
in
xchg
push
sub
inc
aad
push
sbb
pop
inc
add
xchg
mov
mov
(bad)
cmp
dec
je
cld
adc
sbb
cmps
xor
ret
sbb
arpl
jle
(bad)
not
mov
loope
mov
lock
(bad)
into
arpl
fadd
mov
jns
gs
jmp
rcr
push
les
cmc
fiadd
movs
in
mov
mov
movs
dec
sbb
scas
mov
sub
add
mov
jmp
mov
pop
out
jae
sbb
dec
es
ins
or
jns
aas
cld
out
and
or
int3
pop
mov
mov
inc
(bad)
je
retf
jmp
pop
into
sub
jb
dec
mov
out
inc
leave
mov
aas
(bad)
lea
or
ja
aam
inc
ss
jnp
icebp
xor
data16
dec
push
jae
fimul
adc
shl
dec
mov
cmps
sub
enter
and
jns
lds
xchg
clc
cdq
inc
mov
movaps
pop
fist
mov
xor
loopne
aam
leave
outs
(bad)
fcmove
aam
test
dec
shl
addr16
cmp
fwait
shl
cmp
bound
xlat
outs
out
ds
aas
in
sub
(bad)
hlt
clts
(bad)
pop
ret
dec
xor
mov
jge
or
pop
cmps
test
inc
in
popf
xchg
retf
jae
xchg
mov
sahf
ret
clc
push
retf
sbb
and
nop
xchg
das
adc
jnp
jno
mov
mov
pop
adc
mov
xor
(bad)
loopne
inc
mov
dec
stos
inc
movs
adc
inc
jb
imul
arpl
loope
mov
pop
adc
cmp
jl
push
dec
cmc
imul
push
and
push
lahf
hlt
pop
sub
pushf
stc
xchg
outs
gs
call
fs
fs
enter
mov
inc
into
fcom
inc
stos
pop
in
cmps
mov
mov
jecxz
shl
lods
jmp
jo
outs
shl
inc
nop
jle
xchg
ret
in
jl
mov
xor
mov
mul
sar
mov
clc
mov
iret
mov
in
sub
ss
arpl
jo
pop
cmp
adc
dec
cdq
push
(bad)
ds
fdiv
into
sub
rcl
call
pop
cdq
test
jbe
push
ret
push
mov
push
or
ins
fldenv
retf
stos
ins
mov
pop
scas
in
sti
in
mov
fs
push
cmps
sbb
call
push
pop
inc
push
xor
pop
(bad)
jp
fist
addr16
sti
inc
sub
pop
fld
push
loope
out
ret
and
xchg
xchg
mov
ret
jl
sbb
das
test
(bad)
daa
gs
push
sub
dec
xchg
mov
scas
jge
inc
dec
add
inc
dec
hlt
xchg
leave
sahf
sub
cdq
sbb
jle
pop
dec
dec
dec
icebp
popa
fidiv
and
add
lock
mov
mov
nop/reserved
dec
fisttp
shl
push
inc
pop
pop
fisub
repnz
dec
sbb
ins
xchg
lea
inc
cmp
or
ds
push
gs
pop
in
ss
cmp
inc
pop
js
dec
inc
ins
aaa
stos
xor
cdq
fstp
xchg
mov
xlat
stc
sub
lods
push
and
adc
rcl
adc
push
ins
push
loope
into
lods
dec
pushf
xchg
sub
arpl
arpl
(bad)
aam
lods
pop
xchg
idiv
mov
je
paddd
inc
imul
lods
das
jno
mov
out
xor
jmp
and
mov
jg
mul
cwde
scas
lock
frstor
data16
xor
cmp
mov
inc
jnp
enter
test
jb
push
test
push
adc
and
jp
add
jnp
pop
push
pop
add
pop
dec
sahf
sub
repnz
pmulhuw
imul
clts
inc
add
dec
push
fwait
add
in
mov
jae
mov
mov
mov
test
test
push
xchg
cmp
xchg
imul
loop
dec
fisub
adc
push
cmp
inc
lds
test
inc
pop
int
test
pop
add
sub
pop
mov
adc
xchg
cmp
out
cmps
pop
je
add
mov
jne
stos
xor
mov
js
out
(bad)
ins
pop
lahf
repnz
fild
(bad)
cmp
js
stos
inc
div
daa
pop
xlat
and
leave
jo
jns
in
dec
fild
test
mov
pop
lods
inc
pusha
out
into
gs
ror
mov
fadd
loop
or
stos
xchg
mov
test
jnp
cmc
jp
xchg
cmc
push
cwde
arpl
xchg
das
mov
push
retf
movs
addr16
push
dec
lahf
mov
or
mov
fld
rcl
pop
push
addr16
cmp
popf
inc
xor
loop
xchg
and
lea
out
fdivr
xchg
mov
xor
inc
fisub
stc
pmaxsw
aam
fs
xor
mov
cs
sub
jbe
add
adc
in
jecxz
dec
xor
das
shl
or
dec
popa
retf
adc
jnp
xor
push
jle
xchg
add
test
dec
and
xchg
sub
pop
xor
outs
add
mov
xchg
mov
test
out
xchg
inc
push
add
or
ror
cmps
sub
std
mov
fisttp
retf
or
adc
test
in
sub
fidivr
and
div
push
call
mov
imul
adc
outs
mov
xor
cmps
leave
xor
not
scas
cmp
pop
jmp
jbe
push
adc
dec
mov
xchg
in
sub
mov
das
cmp
(bad)
cli
in
push
inc
nop
ret
test
int3
and
mov
xor
int3
push
cmps
mov
scas
push
(bad)
pop
jo
jg
push
shr
clc
cmp
jbe
in
stos
mov
into
dec
inc
jmp
adc
pop
push
sub
repnz
push
cmp
adc
cmp
jl
test
mov
sbb
lods
repnz
dec
mov
sbb
shl
dec
add
jg
sbb
in
fwait
les
mov
daa
in
cli
sub
sub
test
xchg
jbe
mov
pusha
dec
jp
jmp
push
aam
dec
(bad)
shr
mov
pushf
mov
dec
aaa
and
popa
cwde
aaa
retf
dec
and
fistp
into
mov
xchg
aaa
(bad)
div
mov
icebp
popf
lds
inc
sub
loope
in
cli
ret
test
test
sbb
(bad)
cvtps2pd
cmp
push
sbb
add
sub
push
push
imul
movs
xor
xlat
jp
jae
cmp
mov
jnp
int
aaa
dec
mov
dec
dec
mov
adc
sbb
loop
mov
loop
das
js
jmp
in
div
test
pop
cmps
fdivp
sbb
jle
mov
xchg
test
inc
mov
ja
icebp
hlt
or
popa
pusha
js
jle
pushf
push
dec
lea
rcl
mov
add
xchg
and
int
xchg
adc
xor
xor
dec
test
jp
push
dec
adc
inc
lahf
not
fmulp
inc
inc
mov
sbb
(bad)
push
arpl
mov
add
mov
mov
cmp
call
test
push
mov
in
repnz
les
or
or
retf
sbb
sbb
mov
in
ret
fnstsw
arpl
adc
pop
stc
nop
test
scas
loope
sti
push
xor
sbb
stos
mov
cmc
fstp
jecxz
or
retf
pop
mov
add
pop
test
aaa
arpl
cmp
pop
jmp
inc
mov
sbb
sub
retf
xchg
mov
mov
cld
(bad)
xchg
cmc
aad
shl
cs
leave
xchg
fld
jmp
adc
ins
sub
dec
add
js
shl
(bad)
shl
inc
int
lock
pop
fs
loop
loope
dec
mov
mov
jbe
push
cmc
inc
scas
mov
cmp
in
mov
fld
sti
xchg
icebp
mov
jp
jno
mov
loopne
les
daa
ja
pop
rol
lods
and
or
lock
call
nop
dec
iret
mov
mov
mov
sbb
sbb
xor
jns
out
leave
bound
call
sbb
enter
gs
js
pop
mov
inc
mov
mov
xor
retf
ret
lds
ret
mov
(bad)
push
sbb
sub
int
nop
and
mov
inc
inc
xor
into
call
in
mov
sti
stos
mov
out
rol
repz
pop
out
test
push
fimul
(bad)
push
and
add
pusha
adc
scas
pop
xor
bound
or
mov
scas
add
sti
fsub
aas
js
jne
adc
cmp
ror
and
dec
arpl
ss
sbb
lea
pop
rcl
add
shl
in
bound
ins
push
scas
repz
(bad)
jbe
push
xlat
repnz
xor
fstp
push
inc
push
sbb
(bad)
push
or
shl
shl
lds
mov
mov
movs
and
inc
mov
ret
cmc
and
(bad)
pop
push
ja
xchg
outs
xor
mov
and
xlat
inc
xlat
test
leave
xor
pop
retf
popf
jb
jge
arpl
lds
test
adc
push
lock
push
rcr
or
pop
mov
xor
push
sub
shr
pop
sub
dec
jnp
enter
or
loope
dec
fdiv
dec
inc
or
fst
cmp
jmp
imul
cvtpi2ps
neg
sub
div
test
icebp
dec
repnz
adc
fsub
out
cdq
fwait
and
fisttp
inc
shr
cmp
stos
inc
xor
add
fs
fs
dec
mov
into
and
add
ss
and
jge
std
fwait
call
into
jmp
add
xchg
sub
xchg
mov
jle
ret
lahf
jmp
int
mov
mov
ret
sub
jecxz
in
cmc
xchg
(bad)
in
xor
js
push
sbb
mov
mov
ror
mov
or
push
sar
(bad)
int3
inc
push
or
retf
lea
sti
push
in
repz
imul
cmp
popa
imul
mov
popa
push
push
sub
cs
jae
cmp
dec
pop
jp
dec
xchg
and
inc
das
mov
sub
je
lea
out
stc
bound
outs
icebp
sti
push
inc
mov
inc
jbe
daa
mov
ret
arpl
(bad)
mov
jge
in
push
shl
and
stos
add
or
xlat
rcl
lods
out
mov
(bad)
xlat
das
fnstenv
mov
in
lods
cmp
dec
xchg
xor
ss
cwde
mov
mov
xchg
xchg
or
or
jns
push
inc
fs
add
sub
or
(bad)
movs
aad
popf
and
(bad)
or
lods
popf
inc
pop
dec
popa
xchg
rcr
stc
in
stos
std
(bad)
fisttp
loopne
fidivr
pop
arpl
imul
inc
cli
or
xlat
and
pop
cmp
arpl
mov
jnp
ja
stc
sahf
adc
fmul
out
adc
pop
nop
xchg
aam
push
push
lods
lea
cmc
dec
std
inc
and
mov
and
out
dec
or
push
in
ja
popf
dec
(bad)
mov
mov
xchg
test
fwait
inc
sbb
sbb
pop
pop
pop
dec
jecxz
mov
and
jo
int
pop
add
pusha
lock
imul
cmp
and
shr
sub
int
lds
mov
fwait
inc
sbb
(bad)
iret
dec
gs
fs
inc
push
mov
data16
pop
push
ins
inc
adc
mov
mov
jecxz
or
xchg
dec
(bad)
int
das
cli
mov
js
and
es
and
xchg
nop
xlat
lods
mov
jb
or
call
outs
(bad)
gs
aas
call
fsubr
pop
mov
ret
fs
sbb
add
and
aaa
fdivrp
dec
fist
and
test
add
scas
jbe
jns
retf
stos
inc
adc
cmp
adc
(bad)
xchg
out
pop
mov
inc
xchg
xor
xchg
pop
sti
xchg
lods
xor
lds
inc
push
fimul
les
push
js
pop
dec
sbb
clc
cmc
push
nop
cmp
shr
ins
pusha
mov
adc
je
or
jp
push
pop
mov
int3
inc
mov
mov
push
dec
outs
jp
adc
sbb
xor
nop
lahf
add
mov
cmp
dec
cli
pop
xor
test
inc
dec
lahf
retf
cmp
push
push
jg
mov
sbb
leave
ret
cmps
bound
cdq
dec
mov
pop
mov
adc
push
lahf
push
push
movs
ds
cmc
push
adc
dec
sbb
bswap
inc
retf
xchg
xchg
nop
movs
rcl
mov
popa
sbb
mov
lds
data16
out
inc
loop
jmp
adc
push
push
iret
mov
out
sahf
xor
test
in
cmp
inc
mov
add
test
test
jb
jg
scas
adc
adc
loope
js
out
sub
cmps
jae
add
scas
xor
pop
fsub
ror
add
out
jns
inc
popf
add
test
add
ja
enter
jecxz
xor
aam
in
es
jle
ss
hlt
cs
mov
outs
(bad)
fisub
sbb
mov
adc
cmp
sahf
cmps
ja
jecxz
jmp
jbe
into
pusha
push
pop
pop
imul
cli
sbb
pop
vmovsldup
scas
push
fbstp
aas
jmp
xor
cmp
std
in
fstp
lds
jae
loopne
jo
imul
inc
sbb
push
loope
or
jae
sahf
push
and
inc
ss
dec
xor
test
mov
sbb
xor
xchg
iret
adc
cmp
inc
sub
xchg
cmp
out
loope
add
mov
mov
jmp
mov
(bad)
test
fist
push
movs
mov
xchg
add
js
adc
fld
xor
dec
sbb
xor
sahf
mov
repnz
dec
jns
push
fcom
pop
mov
pop
sbb
jmp
sbb
xor
les
icebp
add
xor
push
pop
jmp
test
cmp
pop
ins
inc
dec
mov
movs
xchg
push
add
pusha
enter
cmp
into
pushf
xchg
push
cmp
stos
mov
add
xchg
push
jnp
movs
scas
push
movs
pushf
ret
std
retf
leave
bound
push
fild
cmp
cmp
bound
fistp
outs
sub
into
adc
mov
mov
(bad)
test
call
and
mov
clc
lea
repz
add
mov
cs
xor
loope
out
pop
ret
mov
out
outs
test
sbb
aam
movnti
(bad)
fild
xor
inc
bswap
scas
aad
xchg
dec
mov
retf
dec
sbb
imul
mov
mov
int3
push
add
mov
cmps
cld
in
xor
add
std
add
test
and
test
xchg
cdq
leave
jnp
adc
jo
stc
aam
test
sub
data16
gs
mov
outs
rcl
push
in
sar
lds
pop
fucomp
jp
int3
es
loope
ins
cld
mov
and
pop
stos
adc
adc
aas
inc
and
push
not
movs
(bad)
nop
rol
(bad)
mov
mov
xchg
out
test
movs
mov
fidiv
icebp
mov
pop
loop
mov
in
xor
scas
jge
mov
mov
movs
xchg
(bad)
out
out
mov
push
in
jmp
leave
jmp
pushf
and
xchg
(bad)
es
push
fdiv
in
inc
lea
xchg
popa
popf
test
push
pop
inc
idiv
lods
cmps
dec
cmps
repz
fisubr
and
cmps
jmp
pop
push
fisttp
(bad)
sbb
int3
cmp
pop
ins
sub
sub
je
pop
arpl
xchg
xchg
sahf
movs
leave
dec
and
daa
jmp
xor
std
push
sub
aad
(bad)
or
or
push
add
sbb
push
lock
xor
stos
adc
add
sbb
retf
or
jne
out
xor
pop
pop
stc
sbb
adc
dec
popf
pop
jcxz
pushf
jmp
mov
or
jmp
mov
out
in
pop
cmp
mov
mov
sub
clc
repnz
test
sahf
xor
mov
nop
mov
xchg
push
cmp
cmp
cld
and
and
and
(bad)
lods
pop
out
out
shl
fmulp
fcmovbe
ds
sub
call
xor
fbld
punpcklbw
jl
jae
add
fwait
ret
jmp
xchg
and
test
dec
addr16
test
cmp
mov
jae
mov
xor
dec
lea
aad
cwde
les
mov
fild
mov
xor
call
movs
xchg
(bad)
(bad)
pop
(bad)
xlat
pop
pop
loopne
inc
xchg
push
cmp
lahf
xor
jmp
xchg
xchg
fadd
push
add
fstp
mov
xor
retf
push
mov
inc
mov
loopne
or
sbb
out
jmp
jmp
dec
int
aas
xchg
scas
push
lods
dec
fs
dec
add
adc
mov
mov
cmp
(bad)
scas
data16
sbb
pop
lea
push
and
clc
jnp
lahf
imul
push
sbb
mov
cli
lds
rcr
(bad)
int3
mov
sbb
imul
mov
mov
cli
xor
mov
cdq
inc
leave
xor
xchg
aaa
adc
sbb
repz
lods
inc
call
jecxz
push
mul
mul
mov
test
xchg
int
sub
retf
enter
aas
clc
repnz
pop
retf
cmp
mov
push
outs
ror
scas
neg
or
jo
jne
fs
inc
pop
cmps
test
fisubr
mov
inc
(bad)
fstp
mov
jmp
cwde
shl
retf
sbb
push
in
inc
mov
loopne
ja
mov
fsubr
cmp
pop
mov
fstp
test
dec
cli
leave
inc
aaa
les
outs
outs
cmps
sahf
pop
mov
or
cmp
lock
sbb
mov
mov
ss
popa
movs
fild
adc
push
pushf
popf
rcr
jae
aad
and
enter
push
fcomp
jl
cli
jne
sub
sbb
(bad)
push
sub
sub
fst
cmp
adc
dec
pop
xor
xchg
sub
xchg
in
pop
cmp
lea
fcom
xor
dec
sbb
icebp
btc
aam
out
inc
clc
pop
dec
fdivr
dec
inc
xchg
(bad)
lock
pop
aas
arpl
mov
cmp
(bad)
ficom
or
(bad)
push
aaa
in
push
sub
xor
sar
xor
cdq
out
retf
adc
popf
push
daa
ffreep
mov
dec
inc
clc
(bad)
sbb
sbb
dec
les
fwait
ror
and
clc
sti
ret
loop
out
cmp
dec
jne
mov
loope
icebp
mov
nop
icebp
je
cwde
sbb
ins
push
adc
lods
adc
mov
xchg
lea
and
out
div
xchg
loopne
aaa
pop
addr16
imul
daa
ins
jo
mov
stc
pop
push
repz
loope
bound
mov
or
fnstsw
push
jmp
aam
jnp
pop
sub
xor
jmp
fild
push
cmc
aam
mov
push
dec
or
nop
popf
dec
pop
xor
mov
pop
dec
xchg
push
test
mov
lahf
jne
repz
stos
mov
retf
dec
ins
xor
pop
aaa
aam
push
mov
not
cmp
mov
xor
jae
cmp
js
inc
inc
jns
xor
bound
out
inc
aam
in
arpl
cmp
mov
loop
push
xlat
fwait
repnz
push
fnstcw
dec
or
je
js
imul
dec
pop
xchg
and
test
xor
and
fs
mov
fstp
mov
xchg
pop
xor
push
push
and
inc
dec
xchg
addr16
out
retf
test
xchg
jmp
xchg
xchg
xchg
pop
xchg
enter
nop
mov
jae
scas
bswap
fcmovb
mov
repz
cdq
push
dec
xchg
shl
jne
fwait
into
not
dec
por
aad
test
nop
and
or
aaa
xor
cmovno
movs
inc
or
pop
pop
push
mov
xchg
xor
adc
sub
pop
xor
outs
inc
not
xchg
jmp
sbb
push
test
mov
inc
dec
loopne
test
cmp
xchg
xchg
enter
ins
mov
aad
pushf
neg
stos
jp
or
imul
cmp
and
push
add
test
dec
adc
ret
aaa
sbb
mov
and
jg
rcr
lock
dec
jo
and
enter
mov
cmp
fwait
adc
movs
arpl
and
bound
push
push
add
std
bound
pushf
icebp
sub
(bad)
rol
cmps
mov
mov
xchg
jo
in
inc
clc
xchg
xchg
mov
ins
pop
push
mov
sub
adc
push
jecxz
cmp
rol
push
mov
jne
test
fnstenv
jle
lods
sbb
and
fsubr
add
lods
out
xor
mov
xchg
les
bound
leave
loop
in
jmp
shr
cmp
daa
ret
inc
and
cmp
enter
sbb
scas
sti
mov
push
ds
les
sub
pop
and
rol
push
ret
(bad)
jle
std
xchg
xor
cmc
ds
pop
aaa
mov
loopne
jns
movs
lods
inc
inc
mov
adc
dec
cmps
call
mov
cmp
inc
test
rol
enter
scas
xchg
je
ss
lods
popf
iret
into
ret
dec
jecxz
xor
xchg
xor
ins
test
cmp
movs
loopne
in
and
movs
xchg
adc
jbe
jecxz
mov
fadd
sbb
repz
push
sahf
pop
fisttp
cmp
leave
jle
xlat
push
jmp
cmp
pusha
fimul
loopne
push
mov
add
ja
(bad)
stos
jecxz
or
and
pop
xchg
jno
in
sub
loopne
ds
and
cmp
ror
out
mov
sar
or
mov
stos
adc
test
xor
mov
sahf
mov
imul
mov
loope
js
ret
addr16
dec
repnz
xor
mov
sub
dec
sbb
mov
adc
pop
dec
test
test
and
mov
mov
mov
mov
lods
sub
ins
(bad)
push
add
in
retf
shl
outs
mov
inc
mov
pop
jle
push
rol
mov
sti
add
sub
sbb
adc
or
ret
and
dec
xor
push
pop
dec
aad
cmp
lods
aad
xchg
into
pop
ins
js
dec
xchg
sbb
(bad)
sar
loopne
loop
sbb
push
psubq
mov
stc
push
into
ins
aas
pop
push
dec
xchg
xor
test
pop
inc
jmp
or
mov
sub
scas
mov
sbb
add
(bad)
fwait
loope
test
mov
sub
repnz
mov
fsubr
mov
popa
ret
xor
movs
pop
sar
ret
jb
mov
ja
mov
pop
pop
mov
sub
inc
mov
(bad)
and
adc
and
imul
imul
stc
sub
or
mov
lock
jb
sub
(bad)
sub
dec
mov
mov
and
out
pop
mov
inc
cmp
and
cmps
pop
ret
pop
push
ins
or
scas
mov
mov
mov
jb
clc
call
dec
push
jmp
movs
mov
mov
fsubr
mov
adc
cmp
mov
jo
sbb
shl
mov
jle
mov
and
inc
push
sub
sub
ss
mov
adc
inc
xchg
sbb
ja
push
cmp
xor
sub
scas
js
rcl
out
test
xor
dec
sbb
xchg
adc
popa
jp
shr
aam
adc
inc
aam
mov
out
stc
xchg
xor
inc
dec
mov
call
cmp
sar
dec
xchg
pushf
inc
dec
imul
mov
outs
xchg
(bad)
addr16
test
sbb
pop
and
mov
push
in
pop
sti
sub
or
push
neg
fadd
leave
mov
dec
data16
jl
ret
rcr
mov
cmp
jne
jmp
sub
ret
icebp
mov
es
mov
les
jecxz
or
stos
rcr
or
les
(bad)
in
xor
shr
inc
bound
outs
ins
nop
dec
pushf
cmp
pushf
ror
cmp
pop
mov
sub
fdivr
xchg
sbb
jae
pop
inc
shl
ror
jo
push
inc
xchg
dec
xchg
je
mov
icebp
add
call
sbb
sar
and
or
dec
or
or
mov
scas
mov
int
icebp
xor
mov
mov
add
add
out
pop
sti
add
int3
fadd
adc
loop
pusha
xor
lock
dec
fstp
rol
mov
mov
in
icebp
call
iret
invd
movs
repnz
xor
push
fbstp
xlat
iret
lods
(bad)
adc
xchg
mov
mov
outs
push
inc
imul
js
(bad)
xor
inc
sbb
adc
fwait
repnz
or
and
in
dec
(bad)
adc
rcr
mov
pop
cmps
(bad)
jnp
aaa
std
ja
mov
push
loopne
xor
repnz
lock
in
outs
fucomi
and
lods
cmc
shl
or
adc
jecxz
xchg
repz
mov
pop
(bad)
retf
jb
add
xlat
call
sub
(bad)
xor
mov
(bad)
in
ins
movs
iret
(bad)
aad
or
or
loope
cdq
push
mov
cmps
sbb
call
es
push
mov
call
fdivr
push
xchg
daa
cmc
push
xlat
fisubr
popf
cmp
in
out
ficom
add
xchg
dec
sub
test
out
iret
or
call
frstor
mov
mov
icebp
dec
add
out
adc
movs
pop
loope
arpl
dec
retf
sub
adc
out
aas
pop
push
iret
xor
push
mov
mov
xchg
dec
into
mov
into
cmps
sahf
mov
ins
xchg
cmpxchg
mov
jo
cmp
push
fadd
dec
nop
mov
jl
xchg
xchg
push
xor
or
xor
cli
std
iret
xlat
gs
out
jl
inc
cmc
clc
pushf
ja
jne
pop
retf
push
and
push
ja
cdq
icebp
ret
pop
cmc
pop
cmps
jo
xor
inc
loop
adc
jb
(bad)
ins
mov
inc
fs
(bad)
xor
lds
jg
loope
dec
gs
(bad)
rol
clc
mov
cmps
popa
hlt
das
ret
dec
rcr
and
repz
adc
sahf
aad
mov
sti
xchg
or
aam
or
lea
sub
mov
fstp
xlat
dec
retf
push
inc
mov
or
mov
xor
cmp
imul
loopne
push
or
iret
enter
mov
retf
movs
mov
jnp
xor
pop
das
mov
(bad)
adc
push
dec
jne
pop
(bad)
or
inc
mov
test
mov
(bad)
in
sbb
fdiv
mov
lea
into
sbb
mov
pop
enter
inc
mov
cmp
out
test
xor
xor
dec
ficom
out
dec
daa
test
mov
mov
xchg
xchg
ins
mov
fstp
hlt
std
nop
cs
jno
add
test
cmp
ja
xor
push
out
add
mov
(bad)
sti
cmp
mov
lea
sub
pop
mov
cmc
mov
lahf
scas
idiv
test
das
lods
or
pop
mov
dec
cdq
(bad)
dec
xchg
out
stc
push
enter
sbb
or
test
mov
arpl
xor
leave
sar
call
cmps
inc
lods
(bad)
jae
rol
xor
sbb
or
or
dec
inc
cwde
sbb
add
mov
xchg
jl
adc
add
inc
and
add
push
mov
jge
and
mov
xor
(bad)
jp
mov
dec
das
sub
gs
add
add
fs
lods
xchg
add
dec
sar
xor
cmp
adc
cmps
daa
pop
cmp
mov
enter
retf
push
lods
adc
cmps
dec
call
mov
loopne
mov
cmp
adc
fs
retf
aam
xor
shr
inc
repnz
jmp
les
fstp
stos
out
mov
add
mov
div
pop
lahf
(bad)
(bad)
sbb
shl
cmp
enter
mov
jb
ds
jle
push
sub
popf
xchg
out
out
dec
pop
xor
jl
imul
shl
mov
mov
(bad)
dec
in
pop
mov
fistp
ds
adc
and
mov
movs
mov
stos
pop
mov
push
dec
popf
jp
xlat
in
sub
lods
out
or
test
xor
sbb
in
and
arpl
and
mov
jnp
xor
bound
in
mov
xlat
fidiv
xchg
out
jnp
leave
(bad)
ss
mov
sub
mov
lock
(bad)
dec
xchg
sub
mov
adc
cmps
cwde
rcl
clc
mov
out
loopne
aaa
xchg
lock
push
faddp
sbb
retf
add
xor
add
adc
and
pop
adc
cld
repz
dec
je
or
jae
les
lahf
and
cmp
ret
mov
daa
adc
dec
mov
cmp
cmp
ja
pop
mov
ja
lods
xchg
(bad)
sub
push
push
shl
hlt
inc
jb
add
pop
pushf
jae
lahf
xchg
fcom
call
pop
enter
jae
les
inc
and
int
adc
mov
ficom
fnsave
xor
mov
sar
dec
stc
je
in
es
movs
popa
repz
cdq
xlat
imul
adc
rol
les
sbb
hlt
pop
enter
movs
popf
push
loopne
cld
imul
xchg
aad
test
xor
inc
scas
inc
int
imul
dec
dec
inc
pop
adc
dec
pop
cmps
sub
lods
jmp
push
mov
rcl
cmp
sub
test
imul
mov
ret
pop
xchg
and
pop
aam
sbb
sar
xlat
(bad)
mov
mov
shl
fadd
push
inc
nop
scas
mov
mov
sub
daa
mov
sbb
add
adc
adc
cdq
mul
pop
sub
xor
push
mov
ret
dec
and
out
fwait
xor
dec
or
add
clc
xchg
xor
sub
or
imul
jne
add
mov
jp
aaa
and
frstor
mov
pop
fst
imul
stc
add
adc
add
push
lahf
out
dec
xchg
outs
stos
test
pop
dec
fwait
adc
daa
sub
fwait
rcr
out
(bad)
pop
pop
push
dec
aam
push
mov
xchg
pop
sbb
adc
pop
rol
jmp
es
pushf
nop
sbb
fst
mov
pop
dec
shr
sbb
nop
sahf
jecxz
xchg
cmps
aas
dec
sub
test
idiv
jb
jg
jmp
push
retf
mov
lods
stc
mov
(bad)
pop
nop
or
dec
lods
icebp
aaa
cwde
imul
je
xchg
or
or
shl
movs
retf
xchg
jno
fimul
or
xor
inc
mov
or
iret
int
adc
or
fcomp
lods
add
int3
xor
or
mov
mov
ja
add
ins
dec
jmp
pop
out
lds
sbb
popa
sub
pop
dec
popf
jmp
inc
pop
or
adc
fild
or
aad
cmps
mov
push
(bad)
int
mov
and
sub
(bad)
cli
ret
push
test
ins
sub
pop
retf
add
adc
and
cs
mov
clc
sbb
mov
rcr
aam
sbb
les
jmp
adc
mov
or
pusha
inc
mul
xor
imul
shr
gs
aas
ret
and
jg
lock
mov
push
push
xor
pop
fs
(bad)
std
jo
std
adc
sti
cmc
add
or
dec
or
add
jge
sti
mov
adc
xor
inc
pop
(bad)
pusha
pop
dec
call
int
pop
and
push
or
(bad)
mov
clc
das
mov
jp
enter
cdq
loop
test
(bad)
dec
stos
push
sbb
mov
and
nop
repz
cs
xchg
jmp
cld
cmps
and
ja
lods
hlt
sub
shl
add
stos
inc
cmp
xor
mov
sub
mov
xchg
dec
fwait
add
mov
jnp
outs
sub
int3
popa
ss
stos
lods
fimul
sub
(bad)
enter
mov
ja
mov
(bad)
fs
outs
call
test
das
dec
repnz
enter
cdq
into
clc
mov
fs
outs
pop
and
(bad)
cmp
or
mov
gs
jmp
push
repnz
cmp
retf
ins
jg
mov
int3
push
call
(bad)
jae
dec
mov
rcl
add
jne
xchg
and
cli
sbb
adc
push
daa
dec
lds
loop
jle
ja
dec
loopne
add
pop
fistp
jbe
cld
and
int
sbb
aas
or
adc
test
cwde
pop
hlt
loopne
jmp
add
out
mov
imul
movs
sbb
pop
(bad)
stos
movs
xchg
in
mov
scas
sub
clc
jmp
dec
les
jl
pop
dec
fwait
lods
cdq
addr16
je
mov
mov
pusha
or
cli
popa
push
or
lea
push
cmp
iret
add
popa
inc
pop
fcmovu
sbb
xchg
lock
popa
mov
inc
dec
cmc
xchg
or
shl
inc
mov
xor
xor
scas
sub
and
stos
xor
or
test
sahf
cmp
and
scas
aaa
cmps
xchg
mov
int
adc
fld
sub
dec
cmp
enter
mov
clc
shl
pop
cmp
xor
aam
test
jmp
xlat
or
aaa
in
loope
enter
sbb
ret
icebp
push
mov
adc
call
jle
mov
cwde
stc
inc
les
mov
(bad)
(bad)
daa
inc
jg
mov
inc
mov
test
inc
mov
mov
inc
dec
movs
fs
inc
aad
js
clc
xor
mov
into
and
leave
shr
in
and
and
lea
js
fldcw
inc
jmp
stc
cld
gs
sub
inc
rol
jecxz
(bad)
fcomp
mov
push
aas
mul
(bad)
mov
mov
pop
mov
in
dec
mov
inc
cmp
sub
rol
lods
fs
test
and
cwde
dec
fistp
loop
pop
jge
xchg
xchg
out
fld
lods
push
xchg
(bad)
in
jle
xor
pop
jge
enter
jecxz
or
inc
es
adc
mov
into
iret
inc
icebp
stos
leave
sbb
or
and
lods
xor
pop
jb
push
and
call
mov
push
ins
sub
in
mov
jmp
pushf
fs
sbb
cmp
sub
std
xchg
inc
xlat
jbe
cmps
xor
cmp
push
fadd
jle
call
or
dec
out
cmc
retf
adc
push
mov
push
jp
add
pop
jo
and
cmc
test
cmp
imul
xchg
push
movs
push
and
out
pop
cdq
mov
cmps
test
pop
cdq
and
mov
and
cli
push
xchg
mov
dec
pop
pop
jge
out
sbb
xor
mov
mov
pop
mov
(bad)
add
shr
xor
rcr
and
das
std
dec
cmp
inc
cmp
pop
daa
xor
lods
push
or
xchg
cld
or
add
inc
and
xchg
mov
mov
arpl
jb
or
enter
push
pop
mov
sbb
mov
fldcw
cmp
pop
inc
pusha
or
xor
lds
mov
(bad)
jns
xlat
lahf
stos
loopne
inc
scas
push
mov
mov
(bad)
outs
jmp
inc
in
jne
pop
xchg
sub
std
sbb
xor
or
sbb
cdq
loop
es
aas
pushf
int3
outs
sti
pop
test
das
and
sbb
mov
in
pop
dec
xor
out
pop
popa
pop
mov
rcl
fidivr
sub
lods
dec
sub
pop
fmul
mov
mov
loope
fadd
pop
add
dec
pop
cld
sbb
cmp
mov
test
adc
inc
stc
push
cmp
data16
inc
xor
aaa
mov
cs
sbb
push
jae
sbb
ds
fwait
xchg
je
hlt
je
data16
leave
std
sbb
enter
or
jmp
push
and
call
push
xor
ret
mov
sub
sti
clc
lods
imul
ror
scas
add
test
lods
cmp
jne
sbb
sub
xchg
ficom
imul
iret
lds
jnp
xor
inc
inc
sub
dec
scas
or
adc
(bad)
call
sbb
in
xor
mov
add
push
ret
outs
(bad)
dec
cmp
imul
fld
pop
aaa
jae
stc
mov
(bad)
cmp
sub
mov
add
add
jp
retf
enter
and
ret
or
or
pop
dec
dec
cmp
ficomp
scas
movs
sub
adc
or
lock
into
inc
push
and
and
and
loopne
mov
sub
int
dec
movs
into
std
cmc
jmp
push
adc
(bad)
cwde
addr16
push
xchg
sbb
scas
into
cmp
push
ins
scas
dec
jns
not
sbb
dec
js
dec
xor
(bad)
in
jge
sbb
jmp
shr
sbb
cmp
or
dec
das
inc
stos
xor
outs
adc
into
mov
fist
and
lahf
xchg
or
pop
inc
test
push
shl
xchg
cmps
adc
dec
fld
jo
test
imul
push
sbb
sub
lods
mov
add
in
dec
sbb
hlt
ficom
in
aam
(bad)
repnz
addr16
pop
test
jns
push
pop
fnstsw
xchg
lock
xor
daa
sub
fs
and
adc
and
and
(bad)
fidivr
in
or
push
inc
das
mov
pop
out
xchg
loope
mov
add
inc
or
dec
test
sti
sbb
inc
mov
not
xor
into
repz
dec
cmp
arpl
arpl
and
cdq
and
dec
imul
aas
(bad)
fwait
(bad)
not
adc
loope
pop
sar
out
out
mov
lds
adc
inc
das
stos
sub
inc
and
dec
push
add
loopne
sub
mov
jnp
push
les
xchg
adc
pop
jmp
push
cmp
(bad)
push
mov
jle
ss
pusha
mov
or
fisttp
loope
es
movs
pusha
jp
das
xchg
cld
jp
and
imul
adc
sti
jns
stos
jmp
push
mov
ficom
movs
cmp
push
sub
pop
aaa
fcom
jmp
pop
inc
cwde
clc
cmp
mov
xchg
jne
jg
fidiv
push
out
add
mov
or
in
mov
arpl
sbb
sti
xor
ins
rol
add
xchg
enter
jnp
pop
(bad)
icebp
sub
push
int3
psrld
add
sar
into
stos
add
test
fcom
out
shl
dec
push
mov
rcr
lahf
out
pop
nop
cmp
jg
sar
outs
mov
and
or
shr
push
retf
scas
jp
push
test
jnp
out
repnz
and
(bad)
or
stc
dec
inc
add
repnz
dec
cmp
lds
or
push
(bad)
(bad)
mov
aaa
mov
jno
in
popa
addr16
push
jl
jbe
xchg
in
ds
int
adc
mov
and
adc
add
stc
lahf
sbb
test
adc
inc
inc
lahf
inc
sub
aaa
out
shl
lods
mov
repnz
outs
add
inc
sbb
aas
cli
sbb
outs
call
mov
or
out
dec
(bad)
rol
repz
imul
pop
int3
mov
mov
scas
cmp
out
push
jmp
inc
or
dec
mov
and
sub
enter
add
dec
imul
xor
mov
mov
iret
and
aam
and
xlat
jp
add
(bad)
(bad)
jmp
cmp
test
loope
retf
pop
xor
ret
fistp
jno
mov
ret
jo
stc
fisubr
dec
xor
cmp
xchg
(bad)
adc
inc
fnstsw
cmp
ja
pop
cmps
js
jne
xchg
jl
or
dec
xor
shr
sbb
xchg
neg
imul
std
std
int
jl
cmc
dec
xchg
inc
xchg
jnp
je
leave
imul
inc
fdiv
pushf
add
sub
mov
div
sbb
xor
clc
outs
mov
push
retf
popf
into
into
sub
inc
neg
and
mov
arpl
fstp
lds
dec
pop
mov
in
outs
jmp
scas
mov
adc
add
std
clts
clc
pop
ds
cmp
outs
scas
call
icebp
aas
repz
ret
mov
sbb
mov
rol
fadd
rol
stos
cmps
xchg
mov
(bad)
xor
mov
jnp
scas
das
data16
mov
rcl
push
fdivr
inc
jne
test
mov
sub
ins
mov
inc
pop
shl
mov
es
xchg
pushf
mov
mov
add
pop
add
in
lods
cli
fcmovne
push
sub
jecxz
xchg
sub
leave
cmp
lods
cmc
mov
sub
(bad)
in
iret
xor
or
dec
jmp
cwde
xchg
sahf
cmp
sbb
sub
push
scas
imul
loope
loop
bswap
jp
cmp
in
nop
mov
mov
das
shl
jl
pop
cmp
push
jno
or
out
mov
aaa
in
dec
sahf
(bad)
push
arpl
jbe
add
pop
out
mov
sbb
retf
pop
call
setge
xor
outs
mov
xlat
jmp
popa
inc
js
push
xor
out
add
adc
jp
aas
jo
cmp
mov
inc
pop
repnz
cli
pusha
adc
ror
mov
xor
loopne
add
mov
adc
(bad)
pusha
cmp
outs
sar
popa
aam
mov
sbb
jp
in
dec
pop
cmp
cmps
das
jae
inc
and
in
scas
push
xor
cmps
popf
repnz
popf
sbb
repz
loop
call
inc
test
pop
push
and
call
and
add
std
bound
jmp
add
js
das
cmc
in
cld
(bad)
fimul
fdiv
ins
mov
test
sar
cmp
idiv
out
cld
movs
(bad)
call
mov
stc
cdq
dec
mov
repz
sbb
push
sahf
pop
and
push
jmp
push
out
xor
pop
retf
pop
xchg
retf
jmp
and
jle
jmp
pop
cmp
mov
and
data16
cs
inc
add
pop
pusha
mov
repnz
mov
daa
in
xchg
mov
mov
into
cmp
popf
xabort
into
mov
xor
inc
int
push
sbb
pop
int3
movs
fwait
xchg
cmps
pop
adc
addr16
xchg
arpl
fnstsw
mov
out
xor
cmp
movs
dec
mov
jmp
cwde
lea
sbb
arpl
retf
hlt
enter
and
inc
fild
jg
add
stos
xchg
sti
ret
imul
sti
xlat
and
mov
mov
or
daa
pop
xchg
sahf
pop
mov
test
aad
jmp
gs
push
jnp
or
(bad)
and
inc
or
cmovl
dec
and
or
das
pop
mov
sbb
iret
and
cmp
xchg
xchg
enter
push
(bad)
lahf
out
add
imul
xor
in
(bad)
adc
lea
adc
push
pop
ins
repnz
pop
int
inc
cmp
add
fnsave
movs
mov
movs
push
xor
popf
pop
(bad)
sti
sbb
xchg
sub
cwde
jmp
xor
(bad)
push
icebp
pop
mov
enter
pop
jbe
imul
cli
mov
sbb
xlat
adc
ret
ss
scas
sahf
mov
sub
movs
sub
mov
stc
mov
add
pop
mov
cdq
popf
sub
xor
cli
dec
jge
mov
popa
aam
test
mov
push
(bad)
and
adc
(bad)
mov
xchg
jmp
jae
cmp
mov
mov
and
add
xchg
out
xchg
lahf
jo
mov
mov
mov
adc
aas
add
inc
jg
jbe
cmps
push
mov
push
adc
popa
sbb
(bad)
in
cld
xlat
add
(bad)
mov
rcr
sub
loopne
push
sub
mov
loope
sub
pop
jecxz
push
inc
inc
fsub
dec
popf
add
xor
or
push
shl
mov
test
xor
ins
lea
cmp
push
das
in
cmp
adc
jbe
or
sub
cld
or
(bad)
push
add
or
movs
push
jns
fimul
pop
mov
fsubr
inc
adc
fstp
fdivr
add
retf
lods
pop
cmp
ret
mov
clc
cmp
or
add
aaa
adc
fdivr
test
mov
stos
dec
sahf
adc
or
mov
imul
in
sub
repnz
cdq
dec
pop
jns
xor
mov
jb
test
pop
addr16
jecxz
in
add
mov
push
ss
xor
push
pop
push
aas
(bad)
jg
mov
mov
or
in
xchg
xchg
jge
mov
push
push
popa
and
xchg
das
mov
add
sub
inc
cli
es
outs
inc
add
aam
lods
jb
movs
ja
jge
pop
into
add
pop
xlat
fmul
and
cdq
outs
sbb
lahf
stc
mov
xchg
push
test
(bad)
cdq
adc
addr16
adc
cmp
sti
sbb
loop
outs
inc
sahf
cmp
mov
sbb
sahf
mov
mov
jne
push
rol
int3
int
ret
xchg
xchg
dec
fistp
jmp
das
or
aad
inc
int
aad
xor
ret
adc
aad
xchg
shl
fmul
mov
pop
nop
jo
rcl
add
mov
fistp
add
xor
sub
sbb
xchg
jne
fld
xchg
xor
xchg
xor
jb
and
retf
inc
leave
iret
cld
(bad)
jle
or
jecxz
out
rcr
movs
rcr
pop
hlt
jge
mov
sbb
pop
mov
jb
adc
and
cmp
repnz
sub
mov
icebp
mov
outs
mov
xlat
jb
test
stos
out
dec
or
sbb
dec
jne
pusha
in
lods
dec
pusha
or
loop
jbe
clc
les
xchg
xchg
je
in
xor
xchg
jp
retf
pop
arpl
add
hlt
addr16
dec
jmp
xchg
cs
xor
idiv
(bad)
sbb
int3
add
mov
repnz
mov
imul
shr
push
xor
lods
push
jecxz
pop
call
push
jae
repnz
jmp
shl
cwde
fisttp
call
sub
sub
je
leave
add
iret
dec
adc
scas
ins
sbb
sti
inc
jmp
(bad)
push
iret
inc
in
imul
or
out
bound
jb
jbe
mov
mov
xor
cmps
loopne
shl
stos
sub
push
bound
adc
hlt
in
cmp
cwde
jecxz
xchg
loop
cmps
es
mov
cdq
xchg
ja
xchg
cmp
add
xchg
cld
dec
push
pop
add
xor
cwde
test
mov
(bad)
aad
(bad)
fwait
cdq
jnp
push
sbb
mov
(bad)
out
and
das
dec
(bad)
sbb
xchg
jbe
fucomp
pushf
adc
ins
push
fsub
sbb
add
movs
fdivp
add
scas
clc
(bad)
add
loope
mov
jbe
inc
xchg
and
xchg
cmp
or
xchg
mov
pop
mov
fidivr
mov
adc
leave
xor
xchg
scas
fidivr
adc
lock
or
pop
sti
neg
test
pusha
inc
aad
das
outs
mov
xchg
arpl
(bad)
xchg
push
mov
and
iret
and
(bad)
cdq
out
sub
lods
sbb
mov
ja
sahf
das
sub
fistp
cmc
push
xor
mov
out
mov
jmp
gs
rol
rol
leave
xor
pop
imul
pop
and
popa
lods
mov
icebp
shl
leave
fsubr
dec
sbb
jecxz
push
push
dec
xlat
pop
add
jbe
and
retf
stos
jne
pop
cmc
xchg
xchg
std
or
fdiv
cmps
jne
je
push
out
pop
pop
adc
add
fsubrp
mov
cmp
adc
inc
ins
pop
xchg
bound
jle
jb
adc
mov
jnp
inc
fiadd
mov
inc
test
mov
jp
dec
into
(bad)
sahf
or
rol
jb
dec
xchg
sbb
pop
inc
test
lea
sub
call
dec
(bad)
sbb
adc
out
outs
inc
(bad)
fisttp
rcl
pushf
xchg
sub
div
popa
enter
cmc
mov
inc
pop
xor
inc
push
and
outs
fst
cwde
adc
clc
mov
sub
mov
jns
mov
mov
cmps
inc
dec
push
xchg
dec
jb
test
or
sbb
mov
or
dec
dec
call
das
pop
mov
push
xchg
jecxz
fwait
xchg
xchg
cld
dec
cmp
ja
jns
and
mov
adc
mov
frstorw
aas
jg
int
clc
rol
arpl
adc
cmp
sbb
pop
sbb
lods
in
pushf
in
ds
xor
cld
aaa
mov
mov
mov
adc
push
fisubr
inc
jl
in
push
push
xchg
jle
adc
lahf
adc
mov
shl
push
push
push
xchg
push
cmps
mov
jno
call
xchg
stos
fld
icebp
int
popa
sub
fsubr
xchg
mov
mov
stos
and
lahf
test
int3
inc
rcl
cmps
movs
and
sbb
pop
pop
std
pop
imul
lods
mov
pop
sbb
inc
sbb
popa
xchg
sar
sub
loopne
lahf
test
jae
mov
outs
ss
shr
sar
cwde
enter
fiadd
data16
std
dec
sub
inc
frstor
adc
retf
lahf
test
adc
push
lds
and
mov
jbe
adc
jbe
aam
mov
out
gs
inc
jl
repz
imul
scas
add
les
xchg
cmps
je
sbb
ja
sub
xlat
fcomi
add
out
or
cmps
dec
in
jae
sbb
sub
mov
mov
mov
rcr
push
xor
rcr
pop
jo
and
clc
sub
addr16
mov
jae
and
pop
sti
cmp
sub
adc
pop
test
stos
push
xor
in
out
sbb
push
mov
lods
sar
sbb
inc
cwde
mov
jmp
sbb
sub
sbb
jg
aaa
shr
jge
jp
lock
mov
test
cli
push
and
cmps
xchg
fcom
pop
mov
repnz
add
mov
pop
stos
sub
or
mov
pop
es
lahf
dec
pop
(bad)
cmp
jo
adc
adc
mov
cmp
out
paddw
inc
jb
leave
jmp
adc
push
shl
popf
cmps
xchg
jb
push
sub
dec
jno
idiv
cmps
(bad)
mov
out
jmp
inc
ds
fs
inc
lods
adc
adc
lea
clc
scas
jp
adc
xor
fidivr
outs
mov
mov
adc
pop
xchg
xchg
clc
mov
in
rcl
add
shl
movs
sub
add
push
pop
jne
data16
pop
adc
mov
sbb
sbb
jmp
lahf
out
push
inc
mov
(bad)
leave
fisttp
lahf
imul
sti
inc
leave
cdq
mov
popa
data16
or
in
fcom
and
xlat
or
cmp
btr
in
pushf
jbe
repz
data16
lldt
stc
push
xor
or
mov
mov
mov
jno
aad
pop
out
(bad)
mov
push
xor
dec
mov
(bad)
ins
lods
aad
inc
dec
jmp
xchg
test
mov
fist
jecxz
push
mov
adc
js
movs
pop
test
scas
or
push
sar
cmp
xor
pusha
(bad)
mov
inc
dec
stos
mov
mov
xlat
jl
lea
adc
mov
fst
ror
jnp
dec
dec
mov
ret
mov
mov
loop
mov
mov
push
(bad)
movs
push
in
dec
retf
in
stos
mov
push
nop
sbb
xchg
call
loop
outs
stos
sub
dec
dec
je
push
pop
fisub
shl
cmp
inc
jnp
imul
jns
pop
mov
and
(bad)
fild
ror
jae
repz
fimul
push
retf
mov
xchg
dec
cmp
popa
xchg
cdq
cmp
mov
push
(bad)
cmps
pushf
jnp
out
sub
jmp
push
std
rcr
retf
jmp
jnp
push
pop
fisttp
out
ret
mov
dec
xchg
xor
outs
jae
test
adc
pop
pop
add
add
push
(bad)
js
sub
xor
repnz
cmps
cwde
push
leave
lock
aas
xor
mov
(bad)
fwait
iret
jecxz
xchg
rol
or
icebp
sub
xchg
fnstcw
(bad)
mov
and
mov
mov
push
lea
or
and
je
imul
cmps
rcr
xchg
push
xchg
mov
outs
jge
ins
mov
out
adc
xchg
arpl
ror
(bad)
movq
xchg
dec
test
lahf
enter
fisubr
dec
or
xchg
xor
push
xchg
jbe
loopne
sub
cdq
daa
jmp
push
adc
out
cld
lea
jge
mov
adc
cmp
fwait
leave
xchg
es
push
ins
pop
sbb
mov
cmp
aaa
shl
js
mov
inc
adc
(bad)
push
pop
lock
jae
out
addr16
aad
xchg
add
(bad)
loopne
add
outs
and
sbb
and
mov
outs
add
mov
cli
inc
jnp
inc
push
dec
dec
mov
ret
pop
ja
sti
add
sub
push
std
add
fild
cmp
or
mov
pop
test
inc
pop
adc
ins
repnz
fld
mov
sbb
xchg
cmp
lahf
nop
inc
cmp
jnp
xchg
dec
loope
mov
and
popa
push
imul
or
xor
jg
cwde
mov
es
inc
std
ficom
mov
add
mov
in
mov
mov
inc
push
mov
je
pop
jmp
inc
lea
shl
pop
and
mov
mov
and
sahf
and
pop
adc
adc
sub
std
mov
ds
cld
push
jbe
mov
or
sub
inc
adc
or
xchg
(bad)
lock
add
fst
int3
push
clc
es
mov
call
ret
push
dec
jmp
or
in
jno
popf
cs
adc
inc
adc
jns
jecxz
std
push
pop
mov
test
mov
mov
push
cld
int
sahf
mov
or
dec
fbld
adc
or
push
ret
mov
je
lahf
ins
or
je
dec
stc
call
out
aaa
bound
mov
cmp
mov
jmp
dec
add
jecxz
adc
std
push
lds
sub
push
popf
retf
mov
dec
mov
push
popf
out
idiv
push
sub
shr
or
fwait
cmp
jl
and
xor
repz
jl
and
scas
cmps
dec
les
cmps
mov
fstp
sub
or
sbb
aam
or
push
sti
add
neg
fwait
add
fild
mov
and
xlat
inc
pop
and
(bad)
test
push
adc
popa
jge
xor
pop
dec
jge
je
mov
cmp
movs
dec
call
pop
or
fcmovnu
int
lods
jmp
or
mov
mov
stos
test
cmp
xor
arpl
bound
pop
out
fidivr
retf
lods
in
int
cld
rol
enter
push
cmovbe
arpl
xor
out
add
and
dec
adc
pop
(bad)
jb
push
lahf
pop
les
sti
dec
add
sbb
aad
loop
inc
mov
std
pop
cmp
(bad)
repnz
cli
arpl
dec
inc
imul
ret
(bad)
fld
or
test
push
sub
retf
cmp
test
shl
rcr
fld
vpminuw
sub
jp
rcl
fmulp
les
lds
pusha
xor
cmp
hlt
jecxz
cmps
xor
jnp
or
cmc
sub
icebp
loope
bound
jmp
mov
mov
push
cmps
xor
inc
fmul
rcl
and
jne
or
and
jle
scas
push
and
jnp
jg
in
add
push
imul
or
mov
add
mov
mov
scas
in
cld
mov
fisub
mov
sub
fwait
ja
xchg
outs
mov
mov
loopne
pop
inc
mov
add
pop
mov
sub
mov
clts
out
int
into
fwait
inc
lea
rcl
mov
pop
and
shl
jge
ss
vunpcklpd
retf
test
jo
xchg
pop
jp
jo
add
mov
outs
arpl
jmp
xchg
nop
retf
pop
xor
jmp
push
mov
sub
push
sbb
ds
cmps
loope
hlt
pop
ins
jno
mov
inc
movzx
fisub
xor
sub
out
xor
pop
add
pop
ret
test
lods
push
mov
mov
push
(bad)
shl
scas
int
sbb
xchg
pop
inc
mov
pop
ret
das
cmp
popa
and
adc
clc
sbb
mov
call
sub
and
mov
std
ins
shl
mov
xchg
shl
mov
xchg
pop
and
add
rol
sub
ss
ret
add
lods
addr16
fs
lods
jmp
imul
pop
jecxz
inc
es
mov
inc
adc
and
sub
push
xchg
int
sbb
adc
mov
xor
stos
or
dec
cmc
or
cmp
(bad)
mov
pop
add
xchg
mov
ins
xor
xchg
sbb
or
cli
mov
pop
push
es
or
rol
push
mov
pop
sub
outs
idiv
mov
mov
aam
sub
inc
push
aam
push
push
shl
gs
xchg
push
pop
stos
jbe
mov
and
add
scas
mov
dec
and
sti
add
dec
cmp
add
repnz
pop
rcl
xchg
outs
int
jo
rdpmc
mov
pop
mov
mov
bound
add
mov
ficom
jb
push
out
xchg
xlat
in
sahf
mov
xor
dec
aaa
jae
or
(bad)
std
or
test
adc
or
shr
sbb
jnp
bound
inc
sub
loopne
push
mov
in
int
jl
popa
cli
ins
xor
mov
sub
aas
scas
mov
repnz
inc
sub
dec
aaa
pop
lea
add
or
mov
ficomp
pop
pop
mov
add
(bad)
xchg
repz
adc
inc
sub
inc
cli
popa
or
pop
outs
popf
inc
mov
jbe
sub
pop
test
arpl
iret
or
add
(bad)
sbb
mov
loop
inc
push
sbb
lock
xchg
sbb
jns
fist
pop
xor
mov
push
xchg
inc
jbe
std
fisttp
cwde
fisubr
std
lea
popf
imul
sahf
pop
popf
sub
xor
dec
cmps
mov
or
sbb
(bad)
daa
int
test
dec
shr
pop
mov
inc
pop
cmc
scas
repnz
ins
test
(bad)
jnp
mov
adc
data16
mov
lock
sub
adc
xchg
outs
inc
loop
mov
js
je
jecxz
test
stos
fidivr
aam
pop
ins
adc
int
cmp
pop
stos
aaa
mov
das
or
inc
shl
push
scas
mov
add
jne
jns
mov
cmp
fld
and
adc
mov
leave
cli
jns
ss
push
jmp
rol
imul
push
je
mov
cmp
arpl
enter
jp
inc
pop
leave
aaa
int3
mov
mov
cmp
test
jae
push
mov
sbb
cmp
push
lds
jo
pop
popa
mov
(bad)
pop
xor
jle
jp
jne
out
mov
sbb
or
dec
lods
dec
fadd
mov
or
and
stos
mov
cvtdq2ps
into
jg
sub
push
aas
sbb
mov
(bad)
lock
rcr
inc
dec
fcmovnb
shl
retf
jmp
mov
nop
movs
ret
pop
mov
lods
fcmovu
mov
popa
mov
push
out
add
fidiv
stos
idiv
adc
sbb
mov
dec
and
lods
dec
jnp
cmp
push
addr16
stos
inc
imul
jmp
mov
add
(bad)
stos
push
push
js
or
dec
push
mov
loop
stos
dec
inc
pop
daa
repnz
ins
mov
sbb
gs
pop
arpl
repnz
fild
enter
mov
jp
pop
add
sbb
addr16
scas
sub
adc
or
adc
cs
xchg
inc
sub
xor
mov
mov
mov
std
xor
cmps
pop
mov
mov
cmps
sbb
(bad)
imul
push
(bad)
in
shr
popa
mov
rcl
pusha
scas
jge
inc
add
mov
sub
aam
xchg
retf
jnp
cld
and
jge
call
icebp
addr16
ss
cmps
jae
push
inc
(bad)
xchg
mov
call
xor
(bad)
aas
rcl
adc
sbb
das
fstp
hlt
and
int
lods
dec
or
mov
pushf
or
es
sahf
add
or
inc
out
inc
out
jbe
xor
jmp
retf
retf
jmp
fwait
imul
cwde
mov
cmp
push
mov
xchg
repnz
mov
mov
outs
xchg
out
jbe
xor
xchg
dec
ret
(bad)
ds
mov
mov
sbb
out
inc
jnp
nop
fdivr
call
jo
fld
xlat
push
ins
pop
cli
(bad)
loope
jo
dec
jnp
fadd
stos
rcr
push
pop
xchg
inc
inc
sbb
mov
popa
xchg
scas
mov
xchg
adc
jns
inc
and
loop
fiadd
jne
xor
pop
cmps
bound
inc
mov
rol
sti
inc
mov
jge
jns
jge
jmp
jb
dec
loope
xor
ror
mov
repnz
(bad)
mov
mov
test
jp
sbb
jb
pop
push
adc
out
cmc
sbb
cmp
xchg
lds
aam
aas
hlt
xchg
ror
fimul
js
dec
push
mov
fbld
mov
cmp
mov
aad
xchg
mov
gs
dec
cmps
cs
inc
mov
cmps
or
and
sub
fisub
and
in
inc
int3
in
adc
das
call
cmc
outs
cmps
dec
cmps
push
out
in
aas
adc
pop
stos
push
addr16
es
popa
loop
pop
mov
jg
fcom
xchg
(bad)
mov
inc
xchg
mov
inc
cdq
mov
jg
push
pop
(bad)
js
sub
inc
jne
or
js
in
aaa
jecxz
add
and
arpl
loopne
adc
xor
or
(bad)
pop
inc
clc
xor
das
in
hlt
mov
push
(bad)
popa
ret
mov
xchg
mov
int3
cmp
mov
gs
js
retf
mov
adc
or
jmp
inc
pcmpgtw
mov
stc
or
sub
loop
in
cld
jns
xchg
and
mov
mov
(bad)
mov
xlat
jbe
xor
icebp
push
mov
pop
aaa
xor
dec
or
rcl
(bad)
dec
inc
push
and
dec
movs
cmp
pop
adc
loop
repz
pushf
jle
shr
xor
or
aaa
jge
and
movs
int
stc
jb
out
ja
push
data16
loop
mov
adc
stos
jmp
xchg
cmp
fadd
sub
push
push
nop
adc
xor
cmp
adc
inc
and
pop
jl
pop
mov
retf
movs
daa
outs
rep
inc
adc
sti
adc
cmc
repnz
add
loop
ins
sub
mul
test
leave
push
add
jmp
fcom
ret
icebp
stc
adc
xchg
rcr
(bad)
adc
pushf
icebp
xchg
and
int3
mov
add
ja
jle
xor
stc
in
loopne
daa
or
test
or
xchg
cs
jnp
pop
pop
mov
movs
mov
(bad)
repnz
(bad)
out
retf
inc
jae
mov
xor
jno
pop
cli
cmps
retf
xor
xor
retf
jl
dec
(bad)
xlat
ret
les
popf
mov
leave
les
int3
fs
out
and
adc
pop
cmp
ror
xchg
mov
adc
xchg
or
inc
imul
cmps
mov
(bad)
rol
xor
icebp
push
jmp
or
pop
movs
call
sub
call
push
test
ret
xor
je
sub
xchg
xchg
mov
icebp
ds
fst
push
das
pop
lock
mov
(bad)
mov
stos
cs
fsubr
fidiv
mov
lods
mov
mov
xchg
or
cmp
mov
adc
inc
call
adc
dec
jno
dec
add
xchg
push
and
mov
pop
jnp
mov
adc
addr16
sub
mov
lahf
into
add
rol
aas
sti
jp
retf
mov
sahf
pop
je
mov
leave
cli
sbb
fnstcw
dec
push
xor
neg
mov
sbb
cld
data16
cld
(bad)
cwde
or
lods
aaa
push
dec
and
es
mov
iret
mov
outs
or
mov
cli
mov
out
xchg
adc
xchg
add
push
jmp
mov
xchg
ds
xchg
push
(bad)
lock
push
inc
das
jns
adc
rcr
(bad)
jnp
pop
mov
imul
cmp
xchg
add
sti
mov
jmp
pop
loopne
sbb
pushf
push
jae
jbe
cmps
addr16
jmp
adc
pusha
xor
push
int3
sti
fs
mov
lock
xchg
hlt
push
xor
and
sbb
out
xor
cdq
mov
test
xlat
pop
inc
dec
cld
xchg
(bad)
outs
push
jo
les
mov
nop
push
xchg
movs
dec
inc
outs
je
retf
xor
mov
in
dec
pop
sbb
mov
xchg
and
stc
inc
pop
daa
and
ins
and
dec
or
int
fcomp
pop
jecxz
jmp
fild
cld
or
ds
mov
mov
sub
push
imul
mov
sub
xlat
fwait
pusha
ficom
push
lea
mov
sahf
fwait
out
cmp
add
and
lahf
xchg
mov
repnz
pusha
por
aas
jge
mov
mov
cwde
pop
cmp
or
outs
pop
inc
jae
jne
adc
xchg
call
leave
jae
xchg
jp
jp
(bad)
jo
popf
shl
nop
not
ret
mov
(bad)
jle
adc
sbb
add
call
cmps
mov
xor
outs
dec
addr16
inc
cld
out
popa
add
mov
push
mov
xchg
mov
ret
sub
lahf
nop
xor
fild
cmps
sub
outs
pop
retf
dec
mov
xchg
int3
sbb
mov
jnp
popa
xchg
xor
xchg
iret
movs
jne
aam
mov
xchg
stos
or
mov
inc
arpl
dec
ss
scas
mov
sub
lock
jle
push
cmp
jge
mov
add
pop
sbb
sar
scas
out
(bad)
xchg
push
jmp
xchg
add
shl
std
mov
adc
sbb
and
inc
lahf
sub
out
popa
cmc
leave
imul
pop
jno
adc
fnstcw
movs
sub
dec
out
xor
cmp
outs
mov
shl
in
in
cmp
add
es
push
imul
adc
not
mov
sbb
mov
cmp
mov
dec
into
cmp
int
je
jnp
sub
cmp
scas
out
stos
pop
je
mov
mov
into
jns
dec
out
sub
scas
xlat
xchg
das
sub
or
push
call
mov
adc
cmps
sbb
pop
sub
mov
push
repnz
lock
popa
js
movs
popa
ins
cmp
hlt
out
sub
data16
retf
and
mov
and
push
push
je
xor
cli
dec
mov
mov
(bad)
aam
mov
pushf
xor
test
sahf
mov
(bad)
loop
mov
or
jmp
pop
je
xor
pop
adc
dec
xor
cmc
mov
outs
push
iret
inc
jmp
xchg
rcl
inc
lahf
xor
rcl
push
(bad)
repnz
dec
fwait
scas
add
cmps
sbb
arpl
jnp
js
scas
in
sub
mov
dec
imul
(bad)
jle
xchg
mov
jne
nop
call
repz
imul
cmps
mov
daa
sub
fisttp
push
hlt
mov
aaa
retf
fwait
ins
out
vpmovmskb
push
sub
add
int
dec
inc
test
ss
adc
sbb
add
xor
mov
sahf
sub
mov
and
addr16
test
pushf
out
gs
cmp
out
or
adc
cdq
popa
shrd
jb
or
xchg
push
retf
loope
jmp
ror
mov
fisttp
mov
add
sub
fidiv
mov
pushf
jb
xor
jmp
mov
pop
test
sahf
inc
xchg
xchg
iret
adc
(bad)
mov
push
push
sub
lahf
fldcw
sbb
push
stc
xchg
das
sub
and
loopne
sub
mov
je
mov
jae
adc
xor
idiv
shl
mov
rcl
call
sub
cmp
push
sbb
and
mul
scas
or
(bad)
outs
mov
and
pop
sub
test
mov
fsub
sub
fsub
sub
jmp
mov
out
inc
sbb
mov
push
ja
jg
mov
and
xchg
push
mov
int3
mov
add
div
lds
pop
and
sub
push
clc
or
jp
xor
lahf
jge
adc
inc
dec
push
mov
or
ins
pop
aas
mov
push
push
call
call
jnp
out
xchg
xchg
mov
loop
mov
xchg
hlt
call
mov
(bad)
daa
push
sub
ror
sar
cmp
ret
pusha
loop
call
mov
push
sub
iret
inc
mov
outs
stc
sbb
push
push
loope
cdq
xchg
mov
jl
adc
dec
sbb
inc
(bad)
stc
inc
and
push
shr
jo
push
aaa
push
retf
clc
aaa
jae
loopne
cmp
adc
push
lea
iret
pop
and
mov
test
pop
jmp
cmp
or
aam
adc
mov
jp
fcmovnb
mov
pop
fcom
xchg
es
aas
fwait
mov
cs
fbld
loope
and
ret
cmp
mov
ffree
mov
cmp
inc
ins
and
dec
fmul
stos
xchg
dec
and
dec
push
cmp
mov
stos
sub
pop
fnstsw
sbb
jle
push
add
sbb
popa
jle
or
add
push
fldcw
mov
inc
bound
sbb
xchg
stc
ins
sbb
sub
test
gs
ficomp
inc
ror
push
xchg
add
xor
mov
push
inc
loopne
adc
mov
jl
lea
dec
leave
mov
push
loope
bound
jecxz
(bad)
add
add
cmp
xor
lods
fstp
mov
enter
leave
in
lea
jl
push
sub
test
inc
cmp
sub
mov
mov
and
sbb
in
sub
lods
mov
jne
or
mov
xchg
jnp
arpl
je
cmp
ins
add
and
mov
lock
inc
imul
xchg
loopne
push
leave
repnz
pop
jp
(bad)
inc
nop
mov
xor
out
lods
test
xor
popf
mov
(bad)
js
sub
pop
(bad)
leave
sub
cmp
jge
pop
retf
ja
xchg
gs
inc
lods
or
sbb
adc
jbe
imul
or
sbb
xchg
std
retf
dec
mov
adc
push
dec
retf
ror
sub
lods
pop
inc
inc
cmp
scas
pop
xchg
push
push
sbb
mov
pop
sar
test
add
ror
sub
(bad)
outs
(bad)
mov
bound
mov
movs
push
fsubr
ds
lahf
mov
jmp
std
or
loope
xchg
mov
dec
push
aaa
xchg
nop
cmp
or
arpl
inc
dec
ds
shl
aad
lahf
loop
es
fcmovu
jno
add
xchg
fisub
int
call
or
fwait
rcr
adc
mov
inc
rcr
or
sbb
mov
(bad)
fst
stc
push
sub
fisttp
mov
cmps
rol
cmp
cmc
adc
sbb
cmp
cmps
jnp
movs
sub
dec
js
or
lock
(bad)
stos
es
mov
mov
mov
mov
jno
hlt
movs
popa
outs
rcr
cmp
pop
jno
pop
cmps
test
out
add
push
addr16
gs
xchg
mov
add
or
xor
add
sbb
int3
dec
jne
ss
push
jl
nop
test
stc
jno
cmp
dec
adc
fsubr
push
adc
(bad)
mov
dec
inc
shl
call
mov
je
ins
jns
pop
data16
mov
cmps
ins
shl
out
sbb
pop
adc
mov
jmp
lahf
and
das
xchg
xchg
int3
mov
icebp
pop
sti
out
push
xor
imul
push
fstp
push
inc
test
or
lea
leave
xchg
xlat
nop
fldenv
jp
scas
rcr
sahf
xor
xchg
repnz
icebp
mov
cmp
fnsave
sub
out
inc
cmp
pusha
gs
ret
cmp
jno
adc
(bad)
xrelease
push
fdivr
push
sbb
xor
call
jae
inc
(bad)
mov
fs
mov
add
mov
mov
dec
pop
retf
inc
adc
mov
pop
mov
ins
js
jno
loop
dec
enter
outs
fdivr
xchg
popf
sub
retf
inc
rol
test
loopne
ret
mov
add
xchg
cmp
loop
icebp
mov
mov
ror
stc
sbb
imul
adc
jg
loopne
pop
inc
inc
pop
dec
jno
cld
inc
push
mov
sbb
xchg
mov
rcl
in
mov
in
fwait
rcr
pop
imul
dec
mov
call
push
jnp
xchg
jle
loope
addr16
mov
js
or
stc
sbb
dec
movs
sub
ja
sar
xor
or
mov
daa
hlt
and
sub
mov
jl
sub
dec
(bad)
scas
or
inc
mov
cmps
test
push
cmps
push
mov
add
pop
lfs
fs
xchg
scas
xor
inc
sub
imul
jle
inc
mov
jb
sub
mov
(bad)
pushf
push
sbb
pop
hlt
mov
jae
lea
xor
fucomp
in
xchg
aad
data16
add
dec
cmps
cld
outs
cmps
adc
fisub
mov
inc
inc
mov
aad
iret
lods
mov
out
sbb
pop
add
mov
cs
and
repz
loope
xchg
pop
cmp
and
sub
int3
(bad)
sub
pop
xchg
xchg
(bad)
aaa
cs
pop
pop
xlat
cs
cmc
inc
dec
xchg
adc
icebp
mov
sti
mov
test
loopne
xor
lea
push
fnsetpm(287
add
mov
jno
sbb
mov
mov
outs
sbb
sbb
dec
mov
enter
adc
push
mov
mov
jmp
sbb
mov
or
mov
add
jne
test
mov
sbb
inc
(bad)
shr
pop
sub
fdivr
xchg
mov
sbb
jae
mov
jnp
cwde
xor
pop
jmp
arpl
and
sahf
fwait
mov
pavgw
adc
lock
cmp
ds
call
fwait
jge
call
cmp
and
sbb
arpl
mov
std
pop
call
je
or
adc
mov
and
inc
sub
repnz
inc
pop
inc
shl
ss
inc
jae
and
pop
inc
xlat
or
dec
aad
les
std
xchg
and
mov
not
and
lock
xchg
jae
aas
out
stc
lock
cmp
not
fld
mov
out
pop
push
jns
fldcw
(bad)
retf
inc
into
xor
js
mov
test
nop
push
fidivr
test
dec
and
mov
mov
dec
leave
mov
jmp
inc
cmp
out
mov
mov
xchg
fld
and
xchg
mov
xchg
mov
jo
call
test
cmp
sbb
js
add
in
inc
push
xchg
outs
aam
vandps
std
fdivr
ret
jae
adc
inc
xlat
add
retf
push
hlt
sub
mov
fiadd
outs
jge
mov
mov
dec
xor
icebp
lds
add
mov
jmp
or
xchg
mov
jecxz
and
cld
push
out
xchg
movs
and
jmp
lds
inc
dec
push
std
cvttps2pi
push
stc
sbb
mov
scas
mov
mov
mov
and
outs
jl
mov
pop
clc
jmp
pop
test
sbb
and
cmp
int
mov
push
mov
outs
int3
push
inc
cmp
or
or
ins
mov
pusha
movs
aas
out
and
cmps
repnz
inc
jg
push
add
(bad)
loope
push
inc
jmp
stos
iret
lea
les
loope
(bad)
xor
mov
dec
xchg
loopne
inc
push
mov
js
sbb
ror
movs
jmp
neg
outs
and
leave
aad
out
iret
xchg
or
out
pop
xchg
aaa
xor
mov
scas
sbb
jae
adc
cmp
jl
jl
popf
stos
lock
rol
add
pop
fscale
pop
(bad)
and
rol
mov
push
ficom
and
mov
jmp
aad
repnz
cmps
scas
popa
dec
dec
push
into
repz
xchg
repnz
jne
and
and
int
dec
outs
dec
sbb
aad
and
cmp
push
cmp
push
pop
xchg
pop
loop
mov
inc
daa
mov
mov
in
and
sbb
lock
cdq
cs
mov
fldcw
push
repz
sbb
retf
mov
ins
cmp
idiv
and
mov
cmp
xchg
sti
push
(bad)
xor
add
mov
and
test
mov
lahf
cli
and
ja
sbb
cmps
loopne
inc
popa
repz
shr
mov
xchg
icebp
mov
xchg
ret
pop
(bad)
movs
sbb
lock
push
sub
fcom
in
jmp
or
push
inc
in
pop
add
lea
sbb
jp
es
cmps
shl
outs
cld
sub
aaa
mov
mov
ja
out
mov
fldenv
jge
popa
and
adc
pavgb
jns
push
jmp
or
add
or
out
je
ss
das
push
xor
push
mov
fld
ror
adc
gs
mov
ja
inc
jo
sahf
fwait
mov
cmp
ins
cmp
retf
mov
fistp
ror
jo
mov
nop
inc
xchg
(bad)
adc
in
mov
lahf
push
and
cmp
mov
rcr
push
data16
mov
test
jns
jmp
movs
sub
ret
sti
dec
iret
sbb
sar
in
or
out
mov
mov
jae
mov
clc
or
in
sbb
xor
(bad)
daa
mov
jp
xchg
js
inc
lock
loopne
sbb
outs
dec
push
shl
clc
push
cmp
sub
add
mov
sub
mov
sbb
push
test
retf
cmp
xor
inc
jne
sbb
xchg
jmp
loopne
loopne
sub
shrd
add
inc
test
scas
jmp
jnp
mov
pop
in
call
xchg
jb
pop
and
ins
pop
cld
in
leave
push
or
adc
pop
adc
repz
sbb
adc
mov
hlt
pop
bound
les
(bad)
fsubr
ins
sbb
push
adc
sbb
or
xor
ror
jns
add
fwait
data16
mul
jno
inc
dec
push
das
loop
(bad)
jl
ja
icebp
dec
mul
push
out
dec
inc
cmp
ss
mov
in
or
out
push
sub
in
ss
sub
and
pop
add
cmp
inc
in
jnp
mov
and
sub
ficom
data16
(bad)
out
out
sbb
sti
cmp
lahf
out
fidiv
ret
imul
and
stc
shr
dec
xor
xchg
cld
enter
cmp
push
dec
xchg
shl
pop
ds
arpl
cmp
icebp
push
pop
hlt
push
lods
cli
push
or
scas
xchg
lods
xor
mov
sub
(bad)
inc
es
mov
jp
xor
pop
lods
outs
fdiv
sub
(bad)
sbb
lahf
lock
dec
adc
or
mov
xchg
xchg
fwait
xchg
sbb
cmp
loopne
aam
cmp
cs
mul
loopne
jl
scas
lock
mov
inc
repz
mov
arpl
fmul
in
aam
iret
inc
aam
nop
or
test
out
push
dec
sub
mov
ss
mov
adc
add
add
add
push
xchg
xor
jmp
pop
repnz
nop
pop
sub
add
push
add
xchg
sbb
test
test
(bad)
mov
cmps
fisttp
adc
sbb
adc
pop
mov
mov
in
daa
addr16
push
jg
xor
dec
nop
mov
add
leave
jnp
xor
and
aaa
pop
adc
inc
jge
add
pusha
mov
mov
dec
int
cmp
ret
sbb
xor
es
and
mov
sbb
jecxz
pop
fwait
sbb
shl
outs
mov
adc
jae
mov
movs
pop
jl
loop
dec
pop
(bad)
mov
jl
les
in
adc
ror
jnp
add
sbb
shr
fst
xor
dec
jno
pop
sti
cmp
adc
stos
loope
pushf
adc
mov
xchg
fcom
test
add
mov
lahf
jmp
div
pop
and
aad
sahf
leave
and
xlat
lea
adc
shr
pop
outs
fisub
jno
fwait
mov
mov
repz
mov
outs
mov
ret
dec
int3
nop
sbb
inc
add
scas
xchg
aaa
fild
loopne
xchg
xchg
jmp
pushf
sbb
xchg
mov
sub
aam
cmp
shl
cmc
out
adc
jge
pop
ret
fwait
mov
pop
adc
popf
shl
inc
pop
fld
out
jo
push
xor
pusha
add
fcmovnb
xchg
jecxz
push
mov
scas
inc
fs
xchg
and
add
mov
inc
mov
mov
jge
out
pop
mov
mov
lahf
mov
sbb
jbe
ficomp
into
sti
sti
sti
nop
sbb
mov
push
push
cmovge
inc
jnp
loope
cli
ins
ja
sub
mov
push
int
les
xchg
jmp
jp
rcr
sbb
sub
aad
test
adc
and
xchg
mov
es
mov
pop
cmps
cmp
scas
outs
mov
jbe
and
lods
cdq
lods
inc
(bad)
sub
in
push
dec
jns
mov
test
dec
in
mov
scas
daa
xchg
data16
mov
add
dec
mov
ret
xor
push
shl
push
jecxz
in
les
mov
adc
sub
inc
push
push
jmp
push
hlt
xchg
jnp
cmps
jmp
jle
push
jns
lock
jp
out
adc
dec
pop
inc
jnp
sbb
gs
repnz
push
inc
bound
mov
and
push
xor
cmc
into
sub
fidivr
cwde
sub
ficomp
fnstsw
ret
stos
cmps
cmp
jo
sahf
ret
into
popf
(bad)
jno
jb
mov
dec
push
into
sub
xor
adc
cmps
test
mov
(bad)
(bad)
jmp
inc
bnd
call
leave
jmp
cmp
pusha
in
mov
mov
test
je
pop
arpl
(bad)
sahf
or
push
call
das
xchg
push
das
repz
jb
(bad)
mov
loop
repz
lods
xchg
mov
inc
scas
add
adc
jo
jno
jle
aad
inc
lahf
stos
dec
add
cmp
pushf
sbb
fs
push
clc
retf
clc
pop
ret
fadd
repz
pop
mov
cmp
sub
out
cdq
inc
sahf
adc
mov
daa
pushf
and
fld
or
scas
sub
mov
ret
icebp
ds
out
mov
imul
xchg
addr16
jmp
bound
addr16
pop
ins
hlt
and
add
and
fnstsw
adc
jo
ds
aas
ds
adc
in
mov
test
and
jmp
xor
add
pop
test
push
int
jns
xchg
out
in
lock
mov
lahf
jb
iret
sub
out
outs
arpl
lods
mov
mov
out
loop
aaa
scas
mov
inc
jne
push
sub
les
cli
xchg
(bad)
dec
sbb
pop
mov
outs
adc
mov
jle
into
test
test
das
cmps
out
test
sbb
mov
(bad)
ds
nop
push
sbb
fldcw
pop
push
rcr
aaa
shl
jne
cwde
jae
sub
xor
ss
and
xor
dec
jo
and
outs
mov
jno
adc
mov
imul
mov
popa
mov
out
es
xchg
sbb
retf
push
add
mov
mov
ins
and
mov
cmp
in
ds
test
outs
cmp
pop
add
(bad)
xlat
loope
movs
ret
out
mov
jp
and
scas
sub
jbe
cwde
jb
push
push
loop
jge
jg
arpl
xchg
sbb
mov
mov
nop
inc
gs
out
cmp
and
(bad)
or
and
out
push
inc
movs
lods
xchg
int
jl
adc
outs
push
in
and
aam
sahf
mov
jo
mov
mul
push
adc
mov
ins
gs
mov
fdivr
push
retf
test
jns
xor
adc
dec
in
mov
(bad)
push
ss
(bad)
jmp
adc
jb
mov
adc
addr16
adc
adc
sbb
sub
jnp
adc
out
mov
pop
aaa
push
sub
adc
pusha
bnd
ss
test
in
popa
mov
adc
cld
or
es
sub
call
jno
cmps
xor
or
jno
jbe
pop
push
adc
test
pushf
jne
add
lea
push
mov
scas
shr
mov
lahf
lds
loopne
and
pop
xchg
into
adc
cmp
jne
or
rcl
sub
adc
mov
add
adc
jecxz
cmp
fidivr
pop
xchg
mov
(bad)
mov
mov
pop
push
iret
pop
arpl
cmp
xchg
jno
mov
call
shr
aas
push
pop
sub
xchg
dec
(bad)
out
sti
rol
(bad)
xchg
inc
jnp
in
call
xchg
pop
mov
sub
push
push
xlat
push
dec
push
pop
mov
and
retf
cld
or
push
call
mov
dec
adc
ds
call
ror
jmp
sub
add
mov
add
lea
test
je
nop
inc
fldenv
and
inc
dec
sar
or
inc
fsubr
jle
push
or
retf
out
mov
jp
(bad)
xchg
fild
xor
pop
pop
fmul
repz
pusha
int3
(bad)
enter
popf
mov
(bad)
cmps
and
fwait
xor
stos
push
(bad)
repz
std
std
jmp
ins
std
pop
ret
stc
push
int3
inc
adc
mov
ss
jmp
cs
mov
fisttp
jnp
sub
in
pop
push
pop
xchg
arpl
popf
jle
fstp
std
enter
push
fnstenv
push
mov
sbb
xchg
sub
pusha
cwde
enter
call
test
les
leave
mov
dec
cmp
stos
jmp
aad
mov
pop
cmps
dec
sub
push
jbe
stos
push
pushf
jno
iret
stos
ret
idiv
inc
push
fucomp
mov
popa
in
sub
in
fcmovbe
mov
xor
mov
sti
dec
inc
mov
adc
and
add
shl
imul
shl
mov
into
inc
push
outs
jmp
add
pop
test
pop
and
leave
or
push
xor
outs
icebp
arpl
nop
jne
ret
push
push
aas
sar
movs
inc
or
loope
cmps
clc
xor
test
imul
xchg
mov
jns
and
add
cs
xlat
jo
push
cmp
cli
add
cmp
loope
jge
outs
mov
pop
push
and
dec
cmp
dec
nop
gs
into
ficomp
test
int3
push
push
pusha
adc
test
cmc
fdivp
imul
les
jns
jns
adc
xchg
pop
mov
lea
add
test
sub
cmp
dec
shl
in
dec
mov
sahf
xchg
push
push
xlat
ss
mov
stos
leave
mov
ror
das
cmp
adc
or
ret
into
or
std
sbb
mov
out
repz
sbb
aad
jl
fistp
sahf
cmp
lahf
mov
(bad)
jmp
jnp
shl
add
stos
sbb
pop
outs
es
cmc
or
outs
jge
ret
fdiv
cmp
pop
les
(bad)
lahf
pop
test
push
adc
mov
rcr
xchg
dec
sub
into
add
test
pop
or
retf
cmp
fldenv
call
nop
add
pop
popf
mov
clc
neg
sub
loope
shr
sbb
call
dec
(bad)
jle
mov
outs
dec
pop
les
aaa
or
call
cmps
in
jg
pop
lods
lods
shl
out
int
xchg
xor
xchg
clc
out
pop
pusha
test
inc
iret
sub
stc
loopne
xor
cld
das
call
cmp
mov
mov
std
mov
shr
das
not
adc
shr
call
or
lods
xor
hlt
sub
aad
jge
pop
out
mov
popa
jns
jle
out
jmp
sub
loop
mov
les
and
sub
xchg
test
ffree
xor
mov
sbb
mov
adc
cmp
jle
dec
push
push
push
sbb
inc
call
mov
mov
aad
fild
test
jo
test
add
pop
push
push
(bad)
jb
jl
retf
jle
mov
mov
cpuid
in
aaa
jns
xor
enter
push
sub
test
jp
push
nop
and
shl
and
leave
cld
or
(bad)
pop
ret
dec
dec
push
or
outs
xor
add
cdq
test
ss
jecxz
dec
ret
and
adc
adc
xchg
sub
addr16
push
aad
push
ret
shl
sbb
mov
cmp
xchg
and
movs
mov
data16
push
shr
je
xchg
and
hlt
imul
cmps
sbb
or
in
adc
add
neg
cmp
mov
push
nop
push
fnstcw
mov
add
cmps
mov
rcr
pop
push
and
les
cmp
add
push
push
dec
mov
push
leave
dec
pop
lods
test
inc
retf
out
fdiv
fwait
mov
repz
pop
or
mov
imul
or
adc
cwde
(bad)
and
or
out
adc
or
jl
into
fistp
fst
jmp
xchg
fdivr
lock
xor
mov
add
ins
add
ret
mov
jmp
in
mov
dec
dec
or
xlat
dec
add
jno
mov
out
cs
adc
mov
int
and
inc
add
neg
xchg
cmc
cmps
cmps
inc
dec
xor
jle
mov
fiadd
push
aad
add
fwait
mov
and
pop
inc
dec
or
ret
mov
jo
jg
movaps
mov
jle
push
dec
sub
into
ffree
cmps
adc
cli
xor
cmc
je
and
mov
cmp
loopne
mov
xlat
pushf
add
mov
mov
sub
je
sub
mov
cmps
test
fcom
cld
xor
fs
pop
test
popf
(bad)
int3
pop
das
push
jnp
mov
into
icebp
repnz
pop
xor
lods
sbb
(bad)
rcl
fwait
mov
test
movs
sub
test
dec
(bad)
repz
ficom
dec
rcl
les
add
mov
mov
sbb
dec
mov
cmc
jb
sbb
jmp
cmp
pop
fcomp
and
ret
loope
push
cmp
out
imul
push
pop
mov
cmp
fbstp
rcl
popa
mov
mov
pusha
pusha
pop
sbb
push
jb
jae
sub
retf
bound
dec
(bad)
or
lods
std
mov
jae
scas
(bad)
and
lock
dec
add
pop
or
repz
scas
xchg
lahf
repnz
ror
out
xchg
cmc
fisubr
xchg
imul
stc
push
(bad)
cmp
pmulhw
dec
mov
or
retf
imul
cmps
stc
xor
call
inc
sub
or
icebp
pop
push
std
or
push
(bad)
(bad)
inc
fwait
inc
inc
sbb
aaa
cmp
stc
and
jl
sbb
or
mov
mov
sbb
loop
push
add
dec
adc
pop
retf
in
mov
mov
out
cmp
mov
ror
dec
push
push
shl
pop
sub
stos
xchg
mov
out
xchg
mov
call
xchg
sar
jmp
lahf
int3
sahf
retf
inc
pop
xchg
(bad)
nop
pop
ins
loop
and
pop
outs
addr16
xchg
test
retf
nop
cmp
lea
push
ret
xchg
sbb
in
push
daa
fild
pop
and
jge
pop
lds
mov
and
outs
jecxz
mov
fild
mov
mov
out
out
pop
outs
cmp
dec
int3
sub
dec
int3
into
mov
mov
pop
push
cmps
call
fnstsw
out
nop
cmp
or
and
stos
jmp
jno
mov
jnp
pop
xlat
sti
inc
add
dec
loopne
mov
cmp
and
std
add
push
movs
dec
pop
ja
dec
inc
inc
gs
xor
cmps
jmp
push
push
inc
xchg
xor
jmp
stc
pop
add
lds
xor
pop
fdivr
int
and
aam
in
das
mov
std
cmc
retf
or
imul
mov
les
pop
mov
add
xchg
add
cld
xlat
popa
fs
and
mov
inc
stos
adc
leave
or
sub
and
cmp
loopne
xlat
faddp
pop
inc
iret
les
fldcw
and
enter
adc
int3
or
es
cs
or
dec
adc
fs
mov
shl
dec
sbb
push
scas
and
or
sub
call
xchg
sbb
add
fst
out
fucom
jns
add
inc
jge
test
in
repz
xchg
loope
cmps
or
shl
rol
add
mov
and
aam
mov
icebp
out
imul
loope
jnp
mov
jl
test
sub
into
add
mov
ret
dec
cli
(bad)
call
lahf
sbb
push
add
add
cwde
xchg
es
mov
adc
push
aas
dec
mov
das
(bad)
dec
jbe
push
pop
movs
dec
dec
mul
jns
test
jl
or
pop
outs
cwde
imul
pop
cwde
pop
inc
mov
mov
push
dec
inc
cmp
mov
sub
enter
jne
(bad)
cmps
mov
popf
nop
loopne
push
popa
mov
stos
xchg
rcl
or
inc
pop
and
jg
push
clc
or
pop
lods
movs
jl
pop
pop
mov
dec
jmp
fisttp
jmp
test
cwde
gs
push
xor
lods
popf
movs
sbb
movs
in
push
(bad)
adc
pop
sar
out
pop
rcr
mov
imul
sbb
xchg
dec
cdq
popf
cmp
adc
outs
test
pop
cmp
push
ins
jo
inc
pop
xchg
mov
mov
and
movs
cmps
loope
arpl
sub
dec
sbb
inc
xchg
(bad)
or
pop
gs
cmp
cmp
mov
mov
jge
push
sub
scas
pop
pop
xchg
sbb
jo
int3
nop
jb
pop
pop
mov
jge
pop
inc
push
cmp
test
or
(bad)
fimul
push
pop
add
sub
push
mov
xchg
clc
call
aad
fidiv
sbb
fsubrp
xor
outs
pop
loopne
push
inc
sbb
cmps
dec
lea
ret
add
test
dec
xor
inc
fbstp
(bad)
mov
outs
xchg
sbb
mov
jns
(bad)
daa
push
sub
adc
call
loop
mov
sbb
mov
lods
stos
(bad)
sbb
push
jb
mov
stos
jmp
data16
pop
daa
dec
mov
ins
cmp
push
addr16
xchg
or
cmp
out
mov
fidivr
pushf
jg
cmp
ja
dec
test
and
aad
daa
mov
add
(bad)
pop
mov
mov
mov
adc
sbb
div
inc
lock
or
sub
js
je
dec
div
fld
clc
test
dec
xchg
ret
std
push
jae
loope
inc
add
mov
sahf
cld
jg
jmp
mov
jne
sbb
in
pusha
ins
jns
xor
cli
add
add
or
xor
pop
retf
add
cld
call
test
mov
rep
imul
sbb
int
xchg
inc
lea
stos
cli
hlt
dec
jnp
aam
push
fldenv
clc
mov
(bad)
ds
inc
not
lahf
jno
das
sbb
sub
clc
xor
xchg
pop
push
sbb
loop
shr
mov
(bad)
cmp
repnz
mov
(bad)
xchg
mov
xor
xchg
cmp
dec
loopne
daa
push
and
xchg
in
mov
aaa
pop
addr16
fwait
jbe
cmp
push
inc
aas
jno
es
mov
(bad)
fbld
pop
inc
xchg
repnz
mov
(bad)
es
dec
push
daa
lahf
ins
mov
mov
sbb
xor
cld
add
jg
dec
jg
mov
outs
mov
xchg
pop
sahf
and
sbb
push
loop
xor
fs
adc
sub
sub
test
push
inc
ss
mov
les
mov
jle
jp
mov
or
jno
push
out
sub
jmp
push
dec
fbld
into
or
sbb
daa
lods
iret
adc
adc
jle
aas
lock
xchg
sbb
cmp
adc
push
add
mov
sub
fnstsw
jecxz
aas
ins
sbb
pop
fwait
and
push
jge
(bad)
es
sti
test
mov
in
sub
shl
pop
push
and
dec
pop
cwde
es
inc
fs
mov
cmp
pushf
xchg
aas
lock
sar
push
mov
mov
xor
sbb
mov
fld
outs
and
(bad)
pop
jo
mov
sbb
and
xchg
dec
push
icebp
fsub
in
mov
mov
xchg
cs
cmp
mov
mov
test
loopne
push
sbb
fcmovnu
xchg
cmp
jno
(bad)
pop
jnp
int
cmp
lock
jae
push
fisub
inc
mov
inc
mov
movs
pop
jb
out
repnz
and
xor
test
nop
pop
stos
sub
xor
es
add
jecxz
xlat
inc
int
push
callw
shl
pushf
xchg
fcomp
daa
xchg
iret
sbb
push
mov
push
(bad)
mov
sub
stos
and
add
imul
data16
(bad)
shr
(bad)
loope
std
pop
pop
popf
cmp
jecxz
xor
pop
std
jbe
pop
hlt
sub
mov
iret
jbe
fcmovb
fwait
iret
mov
mov
cmp
or
pop
fidivr
ret
sub
jmp
pop
or
pop
out
jge
push
dec
fs
repz
jmp
repz
test
xor
ret
sub
int
xchg
xchg
inc
jecxz
pop
xchg
pop
mov
and
and
mov
movs
int
arpl
es
push
dec
jmp
lods
push
mov
and
lahf
mov
mov
fadd
push
mov
mov
and
mov
ss
hlt
popa
nop
arpl
scas
fsubr
icebp
inc
cvttps2pi
jns
mov
xchg
outs
sub
fstp
mov
into
loopne
xor
mov
mov
fwait
out
or
jns
pop
in
mov
(bad)
in
lods
pop
out
out
and
mov
jo
cmp
(bad)
jmp
addr16
add
and
sti
cld
mov
ins
ins
push
and
sub
or
neg
leave
or
(bad)
stc
inc
inc
adc
xchg
aam
iret
xchg
mov
cmps
jae
mov
pop
push
shr
cld
or
pop
loopne
lods
and
add
scas
mov
int
inc
cdq
test
cs
mov
adc
(bad)
clc
aam
mov
xchg
outs
shl
fdivr
lea
mov
push
ja
sub
jge
mov
push
stos
fisubr
mov
adc
in
adc
push
mov
jae
ret
pop
jmp
or
push
push
dec
mov
cs
js
push
mov
test
ins
xchg
shr
out
xor
mov
jle
sbb
cld
sahf
and
das
sub
into
push
jecxz
sbb
sahf
adc
and
int3
popf
out
mov
adc
clc
push
adc
inc
pop
add
sub
outs
in
or
and
jecxz
movs
push
loope
das
cmp
inc
ss
add
call
xchg
lock
push
pop
sbb
arpl
ret
xchg
cmps
inc
adc
daa
xchg
into
leave
aas
imul
xchg
scas
add
cmp
xor
mov
sbb
push
ss
xchg
ja
idiv
xor
pop
push
clc
stos
cmp
addr16
aad
pop
and
add
(bad)
stc
inc
loope
adc
jg
fwait
(bad)
pop
cmp
cmc
loop
or
dec
enter
aas
sahf
gs
or
scas
xlat
pop
xor
(bad)
mov
fiadd
inc
jmp
jmp
int3
pop
icebp
(bad)
scas
sub
je
scas
ss
push
and
push
mov
push
dec
lds
into
je
mov
cmp
push
add
xchg
add
pop
sub
mov
retf
cmp
xor
jmp
dec
je
ja
sub
call
jmp
pushf
push
lods
and
adc
xor
mov
and
popa
clc
js
and
xchg
pop
enter
push
cs
nop
aam
test
and
push
cmc
call
inc
pop
and
test
cmp
sti
ins
retf
adc
inc
mov
ret
loope
hlt
enter
fs
add
dec
inc
fcomp
les
aaa
(bad)
ins
imul
add
in
xchg
sub
ss
test
pop
popa
sub
add
and
shl
(bad)
sub
test
aam
retf
movs
pushf
xchg
std
arpl
push
xchg
imul
aam
loope
in
xchg
shr
or
lahf
fnstenv
inc
adc
shr
mov
mov
movs
fisubr
arpl
stc
(bad)
mov
mov
es
cmp
sub
pop
push
pop
cld
mov
sub
ss
icebp
cs
lock
icebp
out
mov
adc
cdq
pop
popf
sub
bound
pop
ins
add
push
adc
cmp
push
sbb
mov
int3
aaa
dec
adc
pop
nop
sub
call
jmp
aas
out
xchg
out
sbb
push
push
(bad)
jb
rol
arpl
test
jnp
mov
sub
or
aam
enter
inc
jae
rcl
imul
cmp
enter
add
push
fwait
or
mov
sar
xor
add
loope
dec
jmp
push
cmp
hlt
add
xor
mov
jecxz
out
jmp
xchg
(bad)
pop
jno
mov
imul
sbb
fwait
les
pop
jne
das
leave
or
(bad)
and
ret
imul
ss
mov
push
shl
add
shl
outs
idiv
mov
adc
xchg
aam
mov
stos
dec
cmp
jnp
repz
scas
xchg
sbb
(bad)
out
cmp
push
ficomp
push
int3
cld
out
push
jo
cdq
sub
inc
movs
shr
dec
adc
mov
test
fwait
rol
sbb
scas
inc
sahf
cdq
cmp
cdq
mov
into
ja
cmps
pop
loop
mov
mov
retf
jo
mov
fcomp
jns
stos
aad
mov
and
or
hlt
in
jmp
add
add
sbb
mov
push
jns
mov
inc
xchg
mov
and
imul
ret
jmp
jg
(bad)
jecxz
out
(bad)
imul
pop
imul
shr
loopne
ficomp
std
es
loop
cmp
pop
lock
or
pop
leave
jecxz
repz
pop
mov
(bad)
aad
imul
pop
test
mov
push
lahf
data16
jae
push
addr16
iret
push
xor
xchg
pop
cli
mov
(bad)
sbb
bnd
imul
mov
test
adc
not
or
loope
out
in
xor
ja
xor
aam
nop
cmc
mov
bswap
push
not
cwde
jp
adc
mov
iret
dec
lods
mov
xchg
std
aad
ja
mov
fstp
shl
popf
mov
int3
xor
int3
fld
add
enter
fld
imul
xor
jns
mul
stc
jno
sbb
clc
mov
push
call
push
mov
sub
retf
(bad)
cld
or
loope
adc
and
jmp
js
cmps
and
int
cli
and
test
js
cmps
mov
or
cmp
movs
adc
arpl
shr
inc
pop
aam
out
rcr
or
pop
lods
and
push
push
sti
or
jg
out
in
pop
or
repnz
inc
cmp
pop
dec
mov
add
cmp
adc
sbb
push
jle
shl
mov
and
repz
out
out
out
in
int
or
mov
out
mov
fidiv
sub
sub
cdq
jge
and
mov
jmp
out
pushf
sub
int
or
outs
retf
scas
popf
gs
add
xchg
pop
test
dec
addr16
inc
adc
sbb
jne
jp
loope
push
rcr
cmp
(bad)
ret
cmp
sub
repnz
pop
add
dec
mov
pop
je
mov
dec
aaa
pop
das
jl
inc
dec
ja
pusha
xchg
pop
jmp
adc
dec
lea
mov
xchg
cmp
cdq
shl
adc
daa
or
xor
lea
retf
push
and
mov
sar
call
mov
(bad)
cmp
shr
pop
aas
retf
bound
add
mov
pop
pop
in
and
push
test
sahf
aam
push
test
in
adc
fild
sbb
call
imul
xchg
mov
xchg
test
ja
jmp
mov
cwde
push
xchg
rol
jecxz
push
xchg
movs
test
jle
sub
xor
fsubp
test
pop
cdq
xchg
lock
xchg
dec
(bad)
movs
rol
mov
pop
push
cwde
daa
xor
ffree
aam
xor
push
cmp
cmp
cmp
inc
cwde
or
fldcw
into
xor
mov
sbb
jnp
add
cmp
fadd
cli
sub
lahf
in
mov
mov
and
call
arpl
ss
mov
lea
or
xchg
jmp
aaa
push
push
call
xchg
xchg
(bad)
xchg
inc
aaa
add
mov
retf
test
jo
(bad)
in
fnstsw
dec
and
inc
fidivr
stos
dec
xchg
hlt
popa
sar
push
or
or
xlat
dec
(bad)
adc
and
pop
mov
test
and
inc
in
dec
cmp
add
out
adc
out
jae
cmovae
cs
enter
push
adc
sbb
outs
loopne
(bad)
repz
pop
push
and
out
pop
outs
sbb
xor
jle
aas
sub
lock
stc
mov
or
sbb
sbb
fs
fcmovnu
xchg
js
out
pop
(bad)
outs
fsub
pop
push
(bad)
mov
mov
imul
add
not
xchg
loopne
push
sub
mov
jecxz
mov
or
cmp
test
cwde
xor
dec
sbb
shl
repz
jg
neg
arpl
push
loope
shl
xor
rcl
test
test
sbb
jae
push
retf
jle
sub
push
int3
push
xor
mov
inc
push
pushf
fiadd
cmp
leave
mov
es
pop
lahf
loope
inc
mov
push
std
and
mov
int
push
scas
add
jl
inc
les
in
cmp
mov
inc
out
shr
and
mul
int
leave
or
test
jmp
daa
in
or
movsx
ror
jg
(bad)
or
ins
inc
stos
pop
int
lea
jmp
jnp
and
adc
or
jle
xchg
retf
sbb
push
push
ret
dec
or
mov
mov
inc
push
sub
pop
inc
je
sbb
jg
(bad)
cmp
mov
cmps
sar
sbb
cwde
xchg
push
into
imul
xchg
movs
pop
add
inc
in
not
iret
(bad)
popf
dec
mov
ja
or
stos
sub
aaa
(bad)
dec
add
sub
test
addr16
mov
pop
xor
ror
jp
adc
mov
jg
cmc
and
lods
or
cmp
pop
ds
ss
stos
jmp
sub
aaa
retf
adc
int3
test
add
aad
ror
jne
ret
je
mov
shl
retf
dec
fwait
and
out
lods
rcl
enter
dec
mov
pusha
mov
or
cld
imul
rcl
int
add
aaa
xchg
xlat
(bad)
cli
in
loopne
fcom
sti
out
out
add
stos
jl
jo
pop
push
popf
dec
push
div
xor
dec
jl
sti
popf
sub
sub
adc
cmps
shr
retf
mov
(bad)
mov
inc
ins
js
adc
lock
pusha
mov
pop
popa
repz
fisttp
gs
jle
les
mov
rcr
call
ret
adc
push
pop
inc
shr
mov
aad
adc
pop
imul
(bad)
outs
movs
jnp
cmp
addr16
jns
xor
add
shl
dec
jmp
std
loope
lods
and
jecxz
xor
cmp
mov
sub
push
xchg
aad
data16
outs
xor
ss
xor
pop
test
sbb
mov
mov
loopne
xchg
xchg
mov
dec
inc
pop
cmps
movs
nop
enter
test
xchg
push
rcl
aad
mov
mov
jo
sti
cdq
mov
or
jne
sbb
jmp
dec
mov
scas
sub
xchg
repnz
or
repnz
pushf
jae
xchg
cmp
jmp
dec
cmp
popa
not
jl
sbb
dec
dec
mov
sbb
retf
lock
mov
lock
mov
imul
stos
jns
xor
jnp
rol
mov
or
int3
nop
movs
es
xor
sub
xchg
rcl
dec
test
pop
sahf
ror
mov
outs
aam
inc
inc
cwde
scas
enter
ret
into
stos
pop
mov
ret
sbb
add
stos
xor
mov
outs
les
cdq
jl
pop
and
adc
ss
cdq
xor
nop
aas
or
pusha
ror
fcmovb
mov
push
fisubr
mov
and
out
jge
pop
cld
dec
loopne
call
xchg
out
and
push
aaa
and
push
int3
xchg
adc
lahf
push
sbb
retf
aas
pop
push
cmps
sbb
lds
cmp
add
sub
pop
pop
aam
mul
jae
sahf
popf
jae
addr16
loopne
cmp
out
inc
inc
sbb
aad
popa
mov
inc
mov
or
xor
sbb
(bad)
daa
arpl
mov
xor
cld
outs
pop
dec
lea
xchg
xchg
and
stos
repz
push
into
in
cmp
fdivr
adc
ja
movs
icebp
dec
scas
lahf
test
retf
xchg
icebp
lods
mov
ins
jecxz
(bad)
mov
stc
popf
stos
xchg
jbe
cs
jo
xchg
dec
arpl
pop
sbb
inc
pop
cmp
retf
les
add
sbb
dec
std
jnp
mov
dec
int
outs
lods
pushf
inc
pop
add
mov
fadd
popa
pop
push
mov
push
pop
pop
fisttp
or
or
daa
cmp
mov
push
jg
mov
add
stos
jo
jno
push
out
mov
mov
add
add
jmp
xor
mov
sbb
mov
xchg
jbe
stos
mov
ror
mov
(bad)
xchg
inc
sahf
pop
xchg
test
xor
adc
aas
adc
jnp
jg
mov
aad
xchg
mov
clc
pushf
ja
and
pop
push
mov
rcr
push
ins
or
mov
pop
les
jge
xchg
mov
popa
push
(bad)
mov
xchg
jne
loope
out
jo
fiadd
mov
aad
aas
fldcw
cmc
xor
fnstenv
ret
ret
lods
in
sub
sahf
sbb
mov
mov
repz
imul
push
and
cmp
mov
mov
xor
cld
xor
mov
dec
shl
inc
xor
mov
sti
mov
in
xchg
xor
pop
ins
cwde
icebp
inc
dec
inc
add
out
dec
cmp
std
pop
jbe
and
xor
inc
les
inc
lds
and
push
mov
movs
fnstsw
mov
js
jns
ror
xor
mov
or
aas
cmp
cmp
inc
cmp
pmaxub
pop
sbb
fisttp
lods
movs
and
jmp
and
xchg
sub
cmp
mov
loop
lds
dec
jae
cmc
xchg
pop
xchg
mov
addr16
popa
or
xchg
jne
loopne
mov
dec
icebp
dec
test
jmp
or
sub
dec
fisub
pop
mov
add
push
ret
arpl
or
xchg
sbb
daa
xchg
fidivr
xor
aad
mov
pop
sbb
cmp
fimul
in
in
jmp
add
xchg
and
push
in
mov
pusha
ror
icebp
mov
out
mov
add
mov
jmp
pop
stos
jae
test
mov
add
bound
das
push
push
mov
xor
xor
rol
xor
jns
pop
ret
dec
mov
neg
push
stc
jge
mov
jmp
shl
sbb
mov
std
fwait
ret
aam
and
or
ins
add
mov
in
(bad)
sub
jmp
push
imul
cwde
xchg
lock
test
or
inc
mov
fst
mov
icebp
pop
pop
cmp
pop
push
dec
lock
int3
xchg
mov
jmp
sti
add
test
xor
add
pavgw
mov
fisub
les
retf
sub
jo
inc
jmp
xor
mov
sahf
push
or
test
rcl
fstp
gs
dec
bt
bound
inc
fiadd
inc
pop
xchg
sub
pop
loopne
repz
push
inc
leave
rol
jae
std
aad
js
inc
pop
jecxz
mul
adc
rcr
xchg
sub
pop
jae
in
jecxz
in
xor
lahf
cld
inc
popf
push
test
lods
adc
test
push
sub
mov
loope
pop
loopne
sbb
xchg
lock
mov
adc
jns
aas
add
lods
add
arpl
inc
bndstx
push
aam
mov
and
mov
push
jno
cmps
or
jg
mov
fld
fistp
cs
mov
xor
push
lock
fcomp
dec
ret
mov
test
mov
aaa
mov
push
call
int
push
push
mov
out
shl
mov
test
sub
pop
mov
adc
lea
pop
dec
enter
popa
data16
xor
mov
mov
mov
ret
cmp
push
and
pop
jne
add
inc
gs
sti
jle
mov
out
ja
or
sub
xchg
js
mov
idiv
nop
or
js
xchg
mov
pop
add
and
push
(bad)
mov
mov
mov
or
icebp
dec
mov
adc
push
inc
mov
(bad)
dec
mov
jmp
nop
jp
fsub
jmp
cmc
push
div
and
or
loop
sbb
rol
jge
jl
fcom
fist
fcom
outs
das
dec
iret
gs
or
and
xchg
pop
push
fcomp
in
sbb
mov
dec
add
movs
jmp
jmp
jecxz
jne
ror
(bad)
retf
retf
shr
push
gs
cld
jnp
fisttp
add
iret
arpl
dec
pushf
icebp
add
jl
jns
in
xchg
test
(bad)
sbb
scas
stos
into
sbb
call
leave
or
push
sbb
neg
mov
pop
call
sbb
jp
mov
nop
pop
xlat
cmps
addr16
sar
adc
add
xchg
pushf
or
jge
xor
inc
xlat
stos
mov
push
lds
daa
mov
push
sub
jge
iret
lahf
mov
gs
mov
imul
inc
dec
add
(bad)
clc
test
mov
sbb
int
stos
retf
inc
pusha
push
jl
push
adc
idiv
leave
stos
aas
adc
int
cmp
pusha
xor
xor
sub
sub
xor
stos
add
mov
jb
inc
lods
inc
mov
adc
nop
das
or
jmp
mov
test
push
and
(bad)
mov
adc
ins
popa
mov
movsx
push
mov
addr16
push
xchg
fsin
and
ins
push
cs
cdq
jb
jp
jno
add
xchg
mov
inc
xor
aaa
add
popf
jmp
out
xor
push
shl
dec
sbb
ficomp
jmp
add
mov
leave
push
ins
xor
cmovbe
je
aam
leave
sbb
pop
cld
sti
pop
(bad)
stos
lods
stos
in
ds
scas
push
(bad)
icebp
imul
pop
cmp
rol
jmp
jg
or
sbb
aaa
push
std
nop
stos
fwait
xor
pop
cmps
inc
inc
(bad)
(bad)
push
sub
xchg
push
xor
mov
cs
jnp
pop
ret
xor
cli
enter
adc
inc
sbb
movs
stos
out
icebp
nop
outs
sbb
fidiv
sbb
adc
mov
xchg
pushf
xchg
repnz
fldcw
dec
adc
jbe
xchg
jns
popa
sub
je
mov
lahf
leave
mov
jmp
dec
imul
mov
mov
test
lods
not
pop
les
mov
cld
adc
outs
cmp
cld
jge
sub
inc
lods
pusha
jo
add
ret
popw
inc
dec
mov
xchg
fwait
lods
pop
and
mov
out
sysret
xlat
xchg
aaa
repz
lahf
cli
jg
gs
outs
(bad)
stos
mov
add
jge
add
mov
jle
int
pop
pop
jmp
cwde
movs
iret
sub
aas
xor
jecxz
lahf
(bad)
push
add
mov
sahf
js
and
in
mov
push
addr16
xor
js
mov
sub
sbb
loopne
xchg
aad
inc
cld
in
or
cmc
mov
out
mov
outs
std
inc
gs
or
nop
fwait
sbb
adc
stc
or
fstp
test
jbe
nop
(bad)
mov
inc
xchg
cld
dec
mov
mov
xor
shl
and
add
(bad)
std
sbb
and
dec
sbb
jno
mov
test
cmps
jb
outs
cmp
pop
(bad)
imul
sub
cdq
push
ret
pop
cmp
jge
mov
js
cs
cmp
jmp
pandn
xchg
mov
mov
mov
sub
rol
and
pop
repnz
mov
movs
mov
and
inc
mov
jo
jne
mov
sbb
xor
xchg
fincstp
daa
or
pop
inc
or
mov
inc
cmp
sbb
xlat
xor
inc
sahf
dec
ds
icebp
(bad)
sbb
adc
or
icebp
jg
xchg
aaa
shl
icebp
hlt
cmp
cmps
fadd
mov
scas
fucomp
popf
test
test
adc
or
mov
std
mov
mov
xchg
sti
repnz
jae
mov
cdq
fadd
mov
daa
sahf
mov
jmp
xor
test
pop
sbb
cwde
push
(bad)
mov
xor
jbe
fs
mov
fstp
adc
push
int
lea
mov
retf
adc
mov
or
push
sti
sbb
pop
xor
stc
mov
dec
loopne
xor
test
lods
lahf
and
into
sub
(bad)
sahf
push
aad
push
inc
smsw
fs
pop
int3
jno
jo
shl
and
add
add
outs
jge
fistp
(bad)
dec
jmp
xor
sub
ror
xor
or
jae
scas
inc
jo
sbb
nop
jp
dec
psubb
add
push
mov
fisub
or
and
push
and
inc
mov
dec
and
es
pop
xchg
fst
jmp
es
cmc
in
sub
adc
jp
mov
mov
int
ins
jne
idiv
cmp
sbb
pushf
fst
lods
xchg
xchg
push
(bad)
lock
imul
ja
jmp
dec
xchg
push
push
in
cmp
scas
mov
dec
icebp
add
mov
dec
xor
push
stos
fnstsw
repz
ds
add
sahf
imul
add
pop
jmp
cli
push
mov
lahf
mov
cmp
mov
xor
inc
pop
or
adc
jne
inc
outs
je
retf
ss
pop
repz
jl
push
arpl
cmps
and
mov
adc
(bad)
mov
mov
je
je
cli
pop
lods
xchg
sbb
out
sub
sbb
test
scas
adc
cmps
xor
or
icebp
aaa
ins
cmps
xor
imul
daa
sub
adc
aas
je
pop
popf
scas
dec
outs
jle
es
xlat
xor
push
imul
and
jb
das
ds
test
push
xor
cmps
cwde
(bad)
fimul
frstor
jae
je
sbb
call
cs
sar
fwait
pop
arpl
call
fsub
inc
je
push
(bad)
retf
push
js
sbb
movs
out
aam
arpl
mov
mov
aaa
mov
push
fdivr
pop
call
lahf
jecxz
pusha
inc
hlt
cmp
stos
ret
leave
xlat
mov
inc
xchg
xor
pop
pop
vpsubusb
and
jmp
cmps
inc
test
aas
hlt
xchg
hlt
js
lods
ret
les
inc
adc
sbb
jle
inc
inc
mov
div
jo
dec
int
jnp
enter
(bad)
push
pop
es
outs
mov
push
je
adc
sahf
out
dec
loopne
gs
mov
int3
stos
cmp
dec
mov
mov
lock
(bad)
adc
jge
jae
xchg
fs
fild
jbe
shl
(bad)
(bad)
pop
shl
jo
lds
cli
xor
jo
jno
jae
jnp
movs
dec
mov
adc
push
popf
push
cwde
xor
sbb
popa
stc
inc
(bad)
push
cmp
mov
fwait
dec
inc
mov
jne
and
pushf
xor
outs
js
jae
in
pop
mov
mov
pop
add
and
les
sub
push
cmp
pop
jmp
adc
std
mov
dec
stc
mov
jmp
(bad)
into
pop
cs
mov
(bad)
test
pusha
and
mov
popf
fcom
mov
lea
sahf
popa
in
retf
jle
adc
xchg
cmp
and
mov
jmp
test
mov
cmps
movs
sti
call
(bad)
in
cli
add
jnp
push
scas
retf
lahf
movs
loopne
sbb
sbb
mov
stos
imul
sbb
aad
inc
xor
inc
and
jmp
scas
jp
ret
scas
call
lock
or
xchg
push
sub
fistp
sbb
imul
or
cmc
lods
inc
inc
movs
xchg
add
das
and
(bad)
sub
popf
xor
dec
nop
fcom
out
xor
(bad)
fiadd
data16
fs
ficom
lea
mov
pop
jae
xor
pop
cmp
clc
jmp
pop
mov
inc
(bad)
mov
sti
add
sub
cmp
sub
mov
and
sub
leave
push
push
jmp
sub
lds
or
cs
in
popf
lea
and
(bad)
cmps
xchg
add
mov
mov
cmp
stos
lea
push
jle
arpl
add
mov
scas
dec
mov
sbb
pop
out
adc
gs
jb
push
xor
stos
fdiv
repz
cdq
fnclex
lock
push
pop
xchg
imul
(bad)
push
sti
inc
dec
jmp
dec
adc
imul
sbb
push
mov
js
jno
scas
mov
and
(bad)
fcmove
add
mov
cmp
mov
push
and
inc
inc
cmp
nop
push
dec
dec
jmp
and
jmp
mov
jno
push
inc
xchg
jo
fidiv
mov
pop
pop
pop
and
and
jae
inc
sahf
je
xchg
jmp
fnstsw
popa
mov
pop
push
test
aad
popf
repnz
mov
mov
jb
imul
mul
jmp
jbe
pop
jo
xchg
(bad)
mov
cld
adc
mov
loop
arpl
mov
xchg
clc
lods
cmp
ja
adc
loope
hlt
ss
test
je
push
(bad)
mov
pop
movs
and
xchg
sbb
int3
push
out
xor
mov
jb
push
dec
jecxz
loop
ret
push
or
adc
imul
das
xchg
mov
cmp
push
(bad)
sbb
cli
mov
sub
cmc
mov
movs
iret
sub
adc
cmp
mov
push
cmps
jle
mov
sahf
push
ror
mov
je
sub
fs
mov
nop
jge
test
mov
out
jne
add
es
adc
dec
fisttp
sub
in
mov
push
mov
mov
jnp
xchg
ja
xor
adc
cmps
lds
cli
loopne
mov
dec
scas
dec
repz
sbb
xchg
aas
sub
xchg
fidiv
aam
ret
push
in
cwde
pop
inc
aaa
cmp
lds
xor
xor
mov
sbb
sub
imul
ins
xor
mov
sub
mov
mov
fldpi
cmp
jnp
push
mov
push
push
jae
and
adc
gs
hlt
out
push
je
je
stos
(bad)
adc
movs
mov
ds
sahf
loopne
inc
std
jns
push
push
pop
fld
aaa
and
cwde
mov
popa
mov
add
clc
call
fisttp
xchg
lods
or
xor
dec
ins
cmp
add
mov
mov
cld
lock
loop
mov
jg
outs
push
pushf
dec
test
(bad)
daa
loop
(bad)
ss
push
adc
sub
pushf
jmp
dec
push
loop
add
ss
mov
test
loope
ins
mov
in
xor
mov
pop
inc
xchg
pop
leave
and
ret
xor
sbb
test
jecxz
and
jle
jnp
arpl
pop
mov
dec
mov
and
lea
jbe
sbb
in
fdivrp
(bad)
push
arpl
sbb
adc
cmps
scas
xor
xlat
push
daa
push
pop
mov
mov
scas
xchg
fstp
xchg
test
arpl
sbb
cld
popa
cmp
or
lahf
or
dec
retf
jne
out
adc
cmp
push
jl
jo
retf
lds
stc
cmp
pop
sbb
out
mov
mov
inc
mov
xchg
cli
push
popa
cmp
test
stos
sub
js
in
inc
addr16
scas
aad
out
mov
cmp
add
cwde
sbb
dec
sub
arpl
es
cmp
sub
mov
pop
mov
jp
and
or
mov
sub
movs
es
inc
pop
or
cmp
popf
jo
or
add
cmc
lds
test
push
add
into
sbb
mov
(bad)
pop
ins
mov
int
mov
dec
dec
in
mov
dec
int
push
xor
and
adc
jge
sub
btc
push
test
mov
or
cli
mov
mov
push
mov
lea
jo
inc
xchg
retf
fdiv
mov
xchg
sub
ret
imul
push
pop
sbb
add
inc
mov
fisub
xchg
addr16
or
jnp
scas
jbe
adc
sbb
pop
push
adc
pop
test
(bad)
and
in
push
xchg
cdq
sar
jg
jb
out
imul
shl
sbb
mov
rcr
mov
test
mov
addr16
not
retf
outs
push
aas
xchg
(bad)
cli
out
fstp
loopne
mov
imul
jge
push
push
stos
mov
push
mov
ja
sub
add
(bad)
jge
jmp
push
nop
mov
pop
movs
loope
cmp
aaa
cwde
stos
or
aad
push
bound
movs
mov
sub
inc
or
(bad)
lahf
pop
rcl
xchg
dec
xlat
mov
mov
shr
inc
inc
fcom
push
out
sbb
push
mov
ror
and
repnz
aaa
sti
pop
call
(bad)
jecxz
mov
in
fcomp
jno
pop
and
(bad)
fld
ffree
mov
call
push
jbe
inc
int
cmps
and
aas
(bad)
clc
mov
push
fcomp
pop
pop
in
jo
add
jae
pop
and
dec
mov
jbe
pop
ja
push
push
sub
push
sbb
icebp
push
retf
gs
pop
jno
mov
jp
xchg
ins
mov
pusha
mov
imul
scas
iret
lea
pop
inc
inc
mov
add
mul
mov
mov
mov
je
jb
mov
sub
popf
rcl
sbb
ja
popf
aad
jne
cmp
fidiv
xchg
push
pop
mov
mov
xchg
jl
and
push
xchg
out
repnz
rcl
ins
outs
int
pushf
je
dec
cmp
sub
dec
push
pop
and
outs
adc
mov
pop
shl
and
inc
scas
push
lahf
mov
jmp
add
repz
fwait
jl
push
ins
sti
test
mov
fst
lock
(bad)
loop
mov
sbb
inc
leave
sbb
outs
xor
mov
jbe
push
xor
sbb
and
xchg
fistp
lods
daa
cmp
jns
and
mov
(bad)
inc
dec
jnp
cmc
ins
and
jb
mov
inc
shl
dec
jmp
movs
bound
stos
or
sub
inc
repz
in
std
adc
scas
(bad)
sbb
dec
cmp
dec
push
or
bound
pop
jne
ja
jmp
cmps
das
arpl
cmp
test
sbb
addr16
jbe
mov
shl
mov
xlat
btc
std
test
mov
mov
leave
mov
sbb
movs
mov
aad
jbe
ja
aad
xchg
add
aas
push
jmp
sub
dec
push
inc
movs
outs
mov
xchg
and
adc
pop
in
shl
pop
push
data16
ret
push
pop
mov
stos
imul
inc
sub
cli
idiv
inc
mov
pop
jae
loope
shl
inc
sar
ds
sbb
pop
fisttp
cmps
pop
pusha
arpl
inc
jmp
dec
mov
xlat
ja
sub
xchg
scas
push
mov
sti
add
push
and
xchg
sub
inc
fsub
mov
mov
(bad)
out
nop
and
arpl
jo
mov
sbb
mov
aas
sbb
jecxz
push
stos
cli
loopne
ror
leave
jb
test
test
push
test
hlt
push
xchg
cmp
cmps
xor
and
push
hlt
pop
hlt
sbb
add
jecxz
mov
cs
jmp
push
or
pop
jnp
dec
mov
push
mov
jle
outs
add
or
je
dec
sbb
std
movs
mov
movs
adc
sahf
test
std
fisub
inc
push
pop
outs
xor
sti
jae
or
dec
pop
cs
mov
(bad)
xchg
cmps
mov
xchg
adc
mov
scas
loopne
(bad)
jecxz
mov
cmp
aas
sbb
fsub
in
imul
or
call
sbb
ds
mov
mov
movs
(bad)
hlt
in
add
dec
mov
scas
ss
or
pop
pop
out
cld
movs
or
or
test
aas
mov
cmc
popf
and
inc
std
pop
dec
mov
cmp
ja
fsub
pop
dec
cmc
and
imul
stos
mov
imul
xchg
outs
cs
imul
xor
adc
push
fsub
or
push
jge
loopne
pop
or
inc
into
loop
adc
jle
sahf
lods
call
les
adc
inc
scas
add
stos
adc
mov
call
sbb
aad
jns
adc
nop
pop
cwde
lds
adc
les
in
cmp
imul
cmp
stc
mov
pop
shr
cmp
cmps
bnd
dec
lods
xchg
xchg
ds
mov
ror
pushf
neg
xchg
add
xor
repnz
aam
mov
enter
outs
and
test
cld
or
add
mov
jae
jecxz
sub
jo
or
retf
in
inc
cs
popf
inc
rcr
rcr
aaa
(bad)
jns
fldl2t
jp
icebp
cmp
xor
sti
add
mov
(bad)
xchg
adc
xchg
out
std
imul
outs
jle
mov
inc
ins
jbe
es
shl
je
sbb
scas
jne
aad
push
pop
mov
(bad)
loopne
addr16
xor
fsubr
out
cmp
sahf
push
mov
inc
gs
cmp
push
or
(bad)
xchg
mov
test
xor
pop
cs
add
pop
adc
lods
data16
fs
and
mov
mov
nop
inc
jg
repz
cmp
clc
jg
or
push
loopne
jae
ins
push
or
nop
xchg
inc
les
jecxz
sub
(bad)
push
cmp
test
fs
mov
fwait
mov
sub
or
lahf
push
movs
sti
and
or
test
pop
cmp
mov
movs
push
idiv
pop
or
xor
dec
xchg
xor
lods
push
rcr
scas
mov
mov
arpl
stos
or
pop
mov
rcl
iret
add
lods
repz
cmp
fwait
je
sahf
in
pop
xor
daa
fwait
inc
pop
xchg
and
outs
cmp
sbb
mov
mov
in
(bad)
fsubr
sub
sbb
or
dec
xchg
not
addr16
div
cmp
lea
in
inc
sbb
inc
xchg
xor
sub
add
loope
loop
push
div
inc
rcr
dec
push
scas
sbb
int
xor
xchg
pop
cmps
les
inc
mov
into
sahf
inc
push
xchg
outs
ins
mov
je
xchg
les
jae
(bad)
xor
fiadd
fdiv
repnz
push
iret
fwait
leave
mov
xchg
mov
rcr
scas
aaa
mov
mov
mov
or
hlt
mov
cld
lods
xor
push
xor
std
mov
imul
call
scas
mov
and
mov
and
pop
dec
clc
mov
out
leave
inc
jnp
into
frstor
mov
cmc
rcr
mov
js
cmp
pushf
hlt
fisttp
mov
dec
pusha
in
mov
or
ds
test
pop
je
mov
js
jmp
fcomp
adc
gs
test
mov
jl
lea
mov
xchg
shr
pop
push
inc
jbe
add
or
xor
or
xlat
jle
sbb
mov
and
jb
sub
mov
test
sub
in
mov
mov
neg
sti
pop
(bad)
pop
sub
lods
xor
or
xchg
dec
hlt
push
xchg
or
fist
mov
dec
loope
inc
jo
and
or
jo
(bad)
rcl
sub
jl
call
pop
push
inc
mov
dec
and
inc
out
sub
scas
mov
mov
and
jmp
lahf
addr16
ins
sub
test
mov
push
jl
call
clc
dec
out
lods
sub
and
jp
mov
or
or
sbb
call
and
dec
pop
sbb
jmp
pop
xchg
cmp
xchg
xchg
prefetch
movs
inc
inc
cs
sbb
cmp
mov
sbb
sbb
loope
mov
std
out
imul
push
jo
in
ss
xor
aad
repz
icebp
(bad)
mov
pop
pushf
and
add
pop
sahf
push
push
in
(bad)
mov
inc
fst
pop
fst
data16
clc
stc
push
dec
sub
pop
adc
or
test
mov
js
lds
mov
retf
dec
xchg
btr
add
xchg
cdq
test
xchg
jne
repnz
xchg
dec
out
and
fwait
xor
xchg
push
pop
add
jmp
jmp
icebp
inc
jle
pop
cmp
jmp
mov
cmc
dec
gs
sar
push
inc
(bad)
int3
pop
cmp
test
repz
pop
adc
pop
or
inc
ret
cmc
fnstenv
sbb
mov
xchg
cld
(bad)
scas
shr
push
cli
mov
sbb
popa
(bad)
out
gs
mov
not
jno
lahf
imul
sub
adc
ins
fld
cmp
pop
stos
push
mov
xor
fdivr
iret
retf
cmp
push
mov
fdiv
fidivr
xchg
lahf
cdq
xchg
dec
clc
sub
xor
jo
vpunpcklqdq
repz
sub
mov
add
add
loopne
cmps
aam
cmp
fcomi
daa
pusha
iret
rcr
bswap
and
mov
ficom
xlat
xchg
lock
mov
xchg
sub
push
cmps
loop
sub
xchg
mov
push
xchg
pop
or
out
in
inc
xchg
push
push
aaa
push
xor
dec
daa
xchg
mov
sahf
inc
(bad)
gs
sub
fisubr
js
mov
jecxz
and
pop
icebp
cs
ret
dec
pushf
xchg
add
fisub
fnstcw
mov
push
jp
stos
fs
test
or
fnstcw
sbb
scas
sar
pop
sub
movs
jp
movs
mov
iret
cmps
xor
je
scas
retf
mov
mov
mov
test
adc
xchg
cdq
xchg
xchg
call
add
out
dec
out
or
jo
ins
jo
jge
scas
xchg
bnd
mov
leave
xchg
daa
push
shr
pop
dec
and
bound
mov
arpl
aam
add
cmp
lea
pop
push
call
mov
push
shl
pop
add
sbb
rol
mov
adc
dec
sar
daa
mov
xor
out
jae
pusha
dec
mov
out
cmp
in
and
xor
sub
sbb
outs
jp
xor
(bad)
adc
les
sub
stos
dec
push
dec
mov
retf
mov
jno
call
frstor
mov
pop
or
jne
sub
jl
mov
push
leave
mov
movs
out
add
cmp
fmulp
gs
sub
and
mov
sbb
(bad)
repz
add
pop
pop
push
fiadd
cmp
fldenv
movs
in
(bad)
iret
(bad)
add
adc
inc
and
sub
mov
xor
cs
push
adc
jle
pusha
ror
and
fstp
inc
cmp
sub
test
in
and
retf
mov
mov
std
xchg
push
arpl
ret
enter
push
gs
or
(bad)
pop
and
mov
js
adc
inc
cmc
cmp
mov
cld
push
add
into
adc
dec
jmp
fdiv
data16
xor
js
mov
call
add
(bad)
(bad)
mov
mov
das
sub
jge
inc
jo
cli
or
out
add
jle
sbb
fwait
and
pushf
icebp
jmp
mov
stos
pop
and
loop
ror
enter
mov
lods
sub
sti
stos
loope
sbb
and
xchg
outs
imul
sar
and
loope
scas
jg
(bad)
push
sub
xor
dec
aaa
inc
push
and
clc
mov
mov
idiv
xchg
daa
mov
dec
pop
int
pop
cmp
or
cmc
pop
idiv
and
xor
xchg
lods
sahf
xor
cwde
(bad)
cmp
mov
adc
adc
xor
fst
test
and
cmps
sahf
lea
js
outs
xchg
xchg
fsub
sbb
xchg
into
xchg
inc
mov
jmp
sub
or
addr16
sbb
jo
xchg
xlat
loopne
sbb
mov
(bad)
pop
jecxz
int
bound
ss
ret
dec
pop
mov
cwde
mov
std
or
shl
sub
jbe
(bad)
add
test
or
pop
adc
jo
mov
cmp
and
mov
in
jg
call
int
fdiv
(bad)
or
inc
adc
pusha
fcomp
aam
sub
out
jmp
call
cmp
nop
jno
pop
aad
das
pop
repz
jp
mov
mov
(bad)
imul
xor
cld
push
inc
aam
jo
stos
mov
lods
leave
ins
iret
sub
and
lahf
out
arpl
xor
leave
aam
je
enter
cmp
push
pop
add
mov
dec
fnstcw
jmp
test
dec
jne
xchg
adc
sub
repnz
sbb
pop
jg
leave
push
fcmovnb
mov
inc
imul
iret
ret
cmps
add
daa
frstor
ss
mov
or
ja
(bad)
fst
sub
pop
mov
nop
div
xchg
rol
pop
in
in
mov
aam
stos
lods
inc
mov
mov
adc
mov
pop
mov
clc
imul
add
xchg
dec
push
lock
(bad)
arpl
call
sbb
xchg
test
call
in
cmp
fist
stos
xchg
je
in
rol
stos
mov
sahf
aam
mov
enter
pop
or
xchg
mov
frstpm(287
adc
push
xor
data16
sbb
or
pop
test
inc
jp
pcmpgtd
dec
xor
pop
adc
sub
in
fcomp
jecxz
cmp
or
jb
xchg
mov
imul
aad
jae
add
retf
xlat
or
mov
adc
aaa
fild
sub
test
lods
or
ss
mov
fcmovbe
arpl
xchg
add
rcr
gs
loope
dec
std
xchg
dec
push
je
xchg
cs
ror
jns
cli
scas
(bad)
jb
popa
cmps
in
xor
mov
lahf
std
inc
test
loope
pop
ret
mov
rcr
mov
jg
mov
xchg
js
xchg
lahf
fsubr
sbb
lock
xor
pop
cmp
stos
pusha
inc
push
dec
cmp
not
sub
inc
jle
sbb
jmp
mov
mov
lea
mov
mov
pop
scas
lahf
stos
jbe
lds
pop
out
(bad)
(bad)
stos
pop
sub
xchg
mov
mov
call
sub
(bad)
in
icebp
hlt
dec
lods
dec
test
sub
dec
pop
xor
imul
rcl
repz
pop
mov
scas
retf
mov
xor
js
xchg
lods
(bad)
and
pop
icebp
ins
sub
enter
push
jbe
pop
xor
clc
int
sub
jnp
call
pop
movs
in
inc
xor
popa
mov
mov
lods
or
cwde
(bad)
adc
xchg
or
ins
xlat
jmp
dec
outs
jo
int3
push
in
jbe
cmp
ret
xchg
xor
dec
stos
popa
cli
and
ds
and
mov
(bad)
cmp
jmp
push
xor
push
sbb
retf
adc
push
and
xchg
retf
ficom
popa
or
jg
mov
xchg
or
adc
mov
retf
xchg
stos
push
imul
not
cmp
push
mov
test
data16
mov
mov
fld
gs
sti
pop
(bad)
enter
call
shl
push
div
popa
shr
mov
jb
icebp
call
xor
xlat
test
adc
fwait
xchg
scas
mov
xchg
les
inc
rcr
mov
mov
aam
inc
adc
movs
inc
dec
scas
in
pop
xor
mov
movs
movs
xchg
xor
jne
out
xchg
cmp
mov
int
push
stc
repnz
es
cmc
pop
adc
push
rol
mov
add
add
popf
fnstcw
mov
out
into
das
xor
ret
mov
ret
and
fcmovne
mov
xor
in
outs
test
test
mov
leave
sahf
mov
cs
cmps
das
stc
mov
and
dec
and
(bad)
rcl
loop
movs
loop
mov
call
(bad)
sahf
inc
add
xor
push
push
add
push
aam
stc
shr
rol
hlt
(bad)
mov
add
inc
dec
ss
push
jns
stos
xor
repz
inc
cdq
fs
inc
jns
aaa
push
in
sbb
in
add
call
pushf
mov
jno
sbb
test
pmaxsw
mov
(bad)
pop
inc
xor
arpl
xor
lock
xor
test
je
test
inc
stos
xor
mov
inc
into
hlt
fild
mov
xor
xchg
popf
pop
shl
cmp
adc
cmp
out
gs
push
repz
call
push
stc
push
inc
push
adc
xchg
call
cmp
stos
pop
dec
sub
ds
jmp
jne
xchg
loope
add
aad
cmp
jb
sub
jae
daa
xchg
fadd
fistp
sub
nop
in
pop
(bad)
mov
mov
test
sub
enter
test
inc
std
ja
xor
imul
or
imul
cmp
ret
nop
mov
xor
cmp
pop
sbb
loopne
sar
cli
or
jl
data16
mov
adc
call
(bad)
xlat
dec
icebp
(bad)
es
jp
xor
or
pop
loope
push
adc
(bad)
dec
add
push
inc
xor
xlat
push
icebp
add
fistp
retf
add
lods
jg
les
lods
push
jg
sti
xchg
sub
adc
xor
sub
dec
sub
mov
test
ret
movs
jmp
daa
dec
cli
jmp
push
push
mov
cmp
sbb
wrmsr
stc
leave
aas
inc
movs
add
push
sbb
ret
aaa
mov
daa
xchg
aam
loope
rcr
inc
fldcw
loop
bound
jb
mov
mov
cmp
pop
(bad)
jp
xchg
bound
cmp
lods
into
mov
pusha
push
push
mov
push
call
addr16
jne
outs
xchg
es
sub
scas
int3
pusha
lds
ds
mov
test
sbb
cmp
cmps
lds
nop
retf
daa
ret
addr16
push
lods
test
(bad)
dec
dec
sbb
mov
aaa
and
sub
add
xchg
stos
mov
pop
inc
shl
outs
sti
popf
or
je
xchg
ds
push
inc
sub
jb
jnp
pop
xchg
(bad)
mov
jmp
ret
or
in
shl
das
(bad)
xor
sub
xor
xor
cmps
push
cmp
call
cmp
mov
mov
je
or
sub
mov
jns
jmp
sbb
mov
in
and
xchg
jl
icebp
mov
outs
xchg
cld
cmp
and
xchg
pop
das
jmp
nop
pushf
pusha
cmp
sbb
lods
cmp
(bad)
retf
out
sbb
mov
sub
pushf
xchg
pop
loope
fstp
pop
ss
cmp
not
add
in
and
ds
xchg
dec
loope
icebp
add
outs
mov
out
fmulp
inc
aam
adc
pop
or
pusha
out
jl
inc
int3
hlt
daa
inc
cmp
neg
ret
pop
in
pop
jnp
pop
xchg
cdq
lds
lods
scas
rcl
test
in
dec
icebp
cwde
retf
mov
push
and
jecxz
ret
xlat
leave
or
push
cmps
xadd
aaa
add
adc
bswap
sub
jp
int
add
test
out
mov
push
cmp
sub
rcr
sbb
mov
shr
jne
fidivr
fdivp
sti
inc
sbb
push
mov
push
cdq
mov
ret
repz
inc
mov
icebp
test
inc
push
movs
add
xor
mov
mov
(bad)
or
mov
adc
fst
call
jb
loop
xchg
cmp
outs
jmp
lea
js
bound
sbb
mov
jmp
sub
push
dec
ret
jmp
xchg
push
inc
push
pop
sub
adc
cmps
inc
dec
jle
lahf
lahf
dec
outs
inc
arpl
xor
mov
(bad)
test
inc
cmp
retf
fstp
leave
vinsertf128
pop
pushf
stos
(bad)
fiadd
ret
jl
add
fdivr
push
dec
dec
push
fs
jbe
dec
inc
add
jmp
add
iret
mov
dec
and
inc
push
fdivr
cmp
out
imul
lods
sub
sub
rcl
cmp
scas
push
jmp
pop
lahf
adc
mov
jl
dec
and
or
mov
xlat
or
cmp
sub
shl
xor
push
push
aad
jae
push
aas
repz
fs
es
sbb
jmp
ins
aad
jg
dec
sub
adc
mov
push
mov
popf
aad
push
rol
mov
lods
stos
mov
push
pushf
movs
and
mov
pop
sub
outs
mov
push
ss
dec
int3
imul
cs
(bad)
xor
shl
aas
daa
xchg
xor
cmp
add
jmp
push
pop
addr16
movs
xor
jne
(bad)
mov
jb
ins
add
pop
and
xchg
retf
jo
daa
mov
lock
cmp
sar
push
pop
push
inc
lock
add
stos
adc
push
jmp
push
mov
inc
push
dec
(bad)
lea
in
mov
lock
cmp
aas
and
adc
and
jb
jge
jmp
daa
outs
xchg
push
inc
sub
jmp
jo
pop
sbb
leave
xchg
aas
inc
cmc
es
gs
cmc
mov
push
test
mov
call
fs
jno
les
pusha
das
push
jnp
test
outs
aas
mov
jle
(bad)
pushf
imul
ror
push
inc
out
cs
(bad)
mov
sbb
sub
das
sub
adc
out
inc
fstp
leave
ss
popa
cmp
pusha
sbb
push
pop
jo
bnd
add
aas
sub
xchg
out
inc
call
pop
in
pushf
xchg
shl
inc
ror
aaa
out
mov
aad
jmp
adc
les
and
out
adc
push
(bad)
ds
xchg
mov
in
jg
jp
loopne
inc
and
gs
retf
cmp
js
inc
sti
fcom
sbb
(bad)
jb
ret
dec
pushf
scas
cmp
outs
mov
push
sbb
out
push
retf
mov
gs
bound
xor
mov
adc
stos
fbstp
fs
pop
les
jge
data16
(bad)
xchg
add
(bad)
cmc
out
jnp
jmp
jl
jecxz
xor
sbb
xor
push
mov
ja
cdq
mov
push
mov
xchg
arpl
mov
mov
fdivr
cs
inc
pop
popa
das
hlt
aas
(bad)
loopne
xor
xor
xchg
movs
push
mov
fiadd
jecxz
popa
stos
xchg
mov
xchg
aam
in
mov
fdivp
std
cmps
xchg
xchg
sbb
fwait
push
mov
adc
sub
scas
mov
mov
add
cmps
test
dec
mov
retf
cmp
jge
jecxz
(bad)
cs
jle
sbb
cli
cmp
fdivr
es
imul
add
sub
scas
data16
aam
mov
adc
shl
shl
fisub
sbb
jp
cmp
pop
inc
or
pop
inc
addr16
pop
add
imul
data16
xchg
adc
or
cmps
(bad)
sbb
jg
aad
ds
sti
mov
mov
ret
xor
shl
in
fwait
loop
aaa
in
and
inc
and
jmp
push
sub
stc
xchg
adc
dec
shl
loope
(bad)
and
inc
sbb
test
dec
pusha
cdq
cdq
pop
add
movs
les
mov
mov
dec
daa
imul
out
add
clc
fbstp
mov
push
push
movs
(bad)
retf
mov
cmc
adc
ja
je
dec
pop
jnp
in
push
mov
xchg
sbb
mov
stos
out
and
add
fistp
xor
push
and
push
or
das
call
loop
movs
jae
cld
mov
inc
xor
inc
(bad)
mov
sub
cmp
lock
gs
add
adc
cmps
pop
jp
movs
add
sbb
into
pop
xchg
mov
out
jle
nop
pop
scas
pop
call
adc
test
sbb
jne
stos
and
inc
lods
daa
stos
hlt
pushf
pop
ret
inc
mov
sub
sahf
dec
js
sbb
int3
inc
mov
xchg
in
out
popa
and
ins
cmp
sbb
aas
dec
push
push
sub
xor
out
dec
rcr
mov
ret
pop
jmp
push
mov
leave
push
inc
dec
sbb
jo
mov
and
ja
adc
hlt
xchg
icebp
retf
push
mov
mov
sub
adc
rol
fbld
inc
jecxz
pop
jb
push
xchg
lods
je
imul
inc
mov
adc
jb
and
mov
xchg
mov
addr16
mov
add
aad
imul
cmps
jl
popf
pop
pushf
xor
and
mov
add
cmps
mov
fcom
pop
cmps
fcom
xchg
(bad)
dec
scas
xchg
pop
xchg
(bad)
movs
fdiv
popf
pop
aas
cmc
pop
dec
ret
add
cwde
mov
in
cmps
and
loop
cmp
aam
les
arpl
inc
rcl
cmp
pusha
ins
adc
dec
add
adc
mov
dec
cmp
push
and
ror
jg
das
mov
scas
mov
xchg
mov
push
or
cmc
ss
call
rcr
jge
push
fstp
push
arpl
cmp
pop
dec
or
popa
popa
leave
inc
sbb
or
ja
push
pop
lods
scas
mul
inc
(bad)
push
shl
push
sub
out
out
cmps
outs
sub
ret
int
(bad)
sub
ins
adc
ret
or
jle
jle
sbb
(bad)
mov
enter
inc
mov
popf
xchg
ror
sbb
cld
mov
mov
jecxz
sqrtps
push
dec
add
jb
clc
shr
fimul
outs
nop
xchg
push
out
fld
xchg
je
xchg
mov
js
mov
ds
shr
lods
pop
(bad)
xor
pop
mov
shl
sub
or
inc
cld
xchg
jne
sbb
sub
add
mov
push
add
push
movs
aam
out
push
inc
jecxz
aas
push
outs
pop
jne
mov
dec
push
xor
sbb
or
xlat
adc
jp
fld
xchg
rcl
std
and
test
stc
das
sub
pop
ja
add
shl
in
jge
(bad)
ficomp
int3
pop
popa
sbb
mov
leave
mov
push
ret
add
leave
pop
out
and
xchg
jge
ins
jno
and
sub
mov
(bad)
stos
inc
mov
addr16
sbb
or
sbb
mov
inc
and
out
cmp
test
hlt
dec
shl
jmp
and
add
mov
loope
inc
jle
adc
push
pop
adc
call
xchg
cwde
inc
hlt
pop
mov
jg
icebp
fisttp
cmp
rcr
sbb
sub
stc
sub
adc
jo
add
and
dec
repnz
call
cmps
xchg
fld
cmps
sub
or
jmp
icebp
push
lahf
das
sbb
pop
imul
sbb
xchg
cmps
pop
in
xor
add
(bad)
and
fild
sbb
shl
shr
dec
retf
lods
rcl
xchg
cmp
or
dec
pusha
push
mov
shl
loope
les
stos
aas
push
sahf
pushf
movs
fnsave
(bad)
in
mov
int3
mov
lea
cmps
int
xor
sub
and
inc
xchg
enter
mov
(bad)
xor
inc
icebp
(bad)
imul
(bad)
(bad)
fiadd
fdivr
or
je
inc
scas
jae
cld
call
and
cmp
call
sbb
call
les
repnz
push
add
ds
sbb
aad
pop
push
and
mov
sub
mov
repz
mov
scas
mov
jae
push
jmp
xor
mov
push
test
sbb
ins
xor
inc
test
ror
sbb
aas
sbb
lock
push
in
gs
and
inc
stos
xchg
xor
dec
(bad)
rcr
sbb
cs
or
jle
pop
aam
add
ins
sub
pop
(bad)
cs
lods
xor
cli
cmp
dec
es
mov
pop
call
add
inc
xor
xor
stc
out
inc
push
cmps
stc
push
dec
xchg
mov
(bad)
daa
in
xchg
pusha
jle
pop
call
mov
add
out
ja
vpaddq
and
mov
enter
stos
xor
sub
(bad)
cli
dec
mov
cld
cmp
mov
mov
cld
daa
jne
mov
dec
mov
imul
cmp
and
dec
aas
pushf
xor
xchg
push
push
sbb
dec
push
call
nop
dec
mov
call
or
push
push
call
add
inc
pop
shl
fcom
icebp
retf
stc
cdq
cld
iret
jns
mov
cmp
popf
in
mov
pop
bound
inc
mov
mov
and
xor
out
xchg
dec
lods
call
jne
jg
jae
mov
mov
add
in
push
repnz
mov
sbb
xor
mov
sub
sbb
or
jnp
xlat
inc
into
push
adc
mov
and
jmp
fwait
jg
mov
ret
mov
pop
xchg
push
mov
xor
ds
mov
ss
pop
ins
imul
outs
loope
je
cmc
sub
cmp
mov
and
sbb
bnd
out
cld
adc
sub
push
test
push
jo
jmp
jae
xlat
dec
test
adc
lea
inc
xchg
sbb
shl
out
test
or
sbb
sub
inc
outs
dec
cli
aaa
push
fstp
mov
sub
aaa
push
jp
cwde
stos
add
sbb
xor
ja
xor
dec
xchg
cmp
repz
imul
stc
xchg
daa
inc
bound
leave
lods
iret
sub
push
movs
stos
inc
add
jg
adc
sub
cdq
push
icebp
adc
out
xor
sbb
rcr
cmp
cmps
dec
je
cmp
sahf
imul
dec
inc
push
ret
inc
jge
sbb
jns
out
cdq
stos
xor
aad
jnp
jo
push
scas
cs
ret
popa
mov
adc
(bad)
xor
cmp
(bad)
pop
push
mov
jnp
xor
iret
leave
jb
push
or
xchg
sub
outs
adc
and
push
das
push
retf
mov
adc
cdq
loope
stos
out
adc
xchg
push
pop
mov
add
dec
jecxz
in
xchg
add
mov
cmp
xchg
dec
cmp
ss
xchg
rcl
fstp
or
dec
mov
retf
aaa
repnz
out
data16
jl
dec
pop
sub
push
push
fcomp
xchg
add
test
(bad)
aas
or
mov
pop
inc
test
inc
out
mov
xchg
imul
mov
or
cmp
sub
and
mov
inc
or
test
fs
scas
jmp
and
push
int
pop
test
mov
mov
js
fmul
pop
imul
sbb
jg
mov
sbb
xchg
pop
gs
gs
mov
jecxz
fist
(bad)
data16
push
sbb
mov
addr16
cmps
std
xchg
ficom
fisttp
or
jb
fbstp
inc
mul
ror
xor
mov
mov
adc
sbb
xor
lea
mov
loope
mov
mov
adc
sbb
xor
or
inc
xor
push
pushf
and
ja
call
lock
cmp
icebp
leave
mov
pop
sub
scas
push
mov
or
pop
push
xchg
vpand
add
mov
mov
xor
enter
mov
pop
ss
jnp
or
popf
(bad)
test
xor
popa
cld
outs
ror
jo
xchg
ror
pop
xchg
pop
stc
imul
xchg
pop
pop
out
dec
sub
neg
add
fdivr
cmp
adc
imul
xchg
pop
dec
fnstenv
outs
and
jne
leave
inc
(bad)
in
push
daa
lea
fwait
mov
es
inc
mov
in
or
ja
add
or
push
mov
outs
jg
les
mov
aad
push
mov
adc
repnz
dec
add
mov
xchg
mov
push
jg
pop
jo
stos
adc
and
sub
lods
es
push
xchg
adc
xlat
aad
jecxz
push
sti
pop
add
pop
jg
ins
pop
push
cmps
(bad)
das
in
outs
test
das
xlat
cmp
pop
loop
out
(bad)
jecxz
scas
cmp
cli
loope
test
and
movs
sub
push
cmp
sub
sbb
mov
mov
(bad)
add
test
les
mov
mov
push
inc
add
lahf
inc
inc
(bad)
jo
cmp
(bad)
loope
xchg
mul
pop
jl
pop
fidivr
(bad)
popa
jmp
cmp
fsub
mov
inc
inc
mov
mov
mov
adc
in
stos
push
adc
stc
rcr
and
jae
out
cmc
jae
dec
gs
es
je
push
sbb
pop
or
pop
clc
xlat
push
dec
adc
push
lods
aas
loop
jbe
in
in
jecxz
push
into
call
fld
push
xchg
inc
in
imul
shl
sub
adc
popf
(bad)
xchg
xchg
iret
arpl
cwde
jbe
mov
lods
mov
push
or
mov
aas
mov
or
xchg
cmps
xchg
lahf
ins
scas
lds
rol
nop
out
sbb
inc
pop
xor
mov
or
xchg
out
mov
jne
imul
sbb
push
add
aaa
inc
(bad)
lods
mov
xchg
pop
fisttp
cmps
mov
lds
sub
mov
pushf
xchg
outs
lahf
jmp
jmp
scas
push
shl
(bad)
sub
ja
arpl
adc
sbb
push
out
or
pop
xor
add
pop
shl
add
test
sbb
ds
icebp
pop
mov
(bad)
movs
cmp
in
xchg
rol
std
push
pushf
bound
fld
icebp
sbb
jbe
scas
shl
dec
sub
add
fst
sti
push
inc
fst
adc
and
dec
adc
pop
dec
out
mov
xchg
sbb
and
and
pop
fadd
xchg
xor
push
popa
adc
adc
push
int3
sbb
xor
and
aaa
out
add
pop
xlat
test
xor
daa
and
cmp
inc
idiv
push
sbb
xor
out
(bad)
test
in
cmp
test
xlat
mov
xchg
mov
int3
in
sbb
push
mov
mov
int3
dec
push
xchg
inc
test
arpl
das
mov
push
xchg
push
and
xchg
(bad)
fcomip
pop
cmp
es
jmp
(bad)
sub
cld
xor
or
out
pushf
jmp
mov
(bad)
fistp
cmps
adc
addr16
jl
aaa
mov
arpl
icebp
ret
jmp
shl
adc
dec
in
inc
jnp
jbe
fwait
jns
js
cdq
jle
mov
mov
cmc
xchg
cli
jmp
enter
cmps
popf
cmp
retf
mov
loop
stos
xor
ret
mov
test
imul
cmp
pop
mov
or
cmp
push
xchg
cs
icebp
std
add
int
dec
idiv
inc
dec
mov
call
jb
adc
jg
sbb
push
out
xchg
xor
jmp
mov
loope
popa
std
iret
sub
push
pop
dec
pop
clc
not
and
push
inc
inc
out
mov
mov
(bad)
fadd
xor
cwde
cmps
or
and
mov
adc
loope
jge
sar
cmp
leave
xchg
mov
push
pop
aaa
xchg
push
push
ror
dec
dec
xor
cmp
inc
lods
xchg
pusha
pop
mov
cmp
xor
nop
sub
(bad)
enter
add
cmp
pop
mov
aaa
cmp
(bad)
sti
outs
xchg
repnz
aaa
ins
pop
addr16
dec
movs
mov
add
lods
in
stos
inc
push
test
fsub
mov
sar
and
lods
ret
sbb
cmp
addr16
cmps
mov
sbb
adc
push
and
in
mov
jmp
retf
mov
enter
mov
sbb
imul
ret
not
pop
mov
out
jmp
repz
int
mov
or
mov
adc
and
pop
in
cmp
mov
add
mov
cwde
out
(bad)
sbb
push
cmp
xor
cld
add
cmp
push
mov
jno
xchg
int3
sar
fidivr
inc
xor
mov
popa
xchg
hlt
test
fcmovnu
and
dec
push
fist
sbb
mov
mov
jg
ins
push
pop
pop
cwde
dec
pop
mov
xlat
test
jae
jnp
into
fst
mov
in
ds
sub
loopne
xor
js
ret
push
sub
in
cmp
jno
xchg
sbb
mov
jecxz
jl
jg
imul
dec
retf
rcr
test
sub
shr
xchg
jmp
and
pop
inc
mov
jmp
push
fcmovu
mov
cmp
jl
sub
iret
push
sbb
dec
jnp
inc
enter
in
push
push
mov
popf
sbb
inc
adc
jg
sub
psrlq
fsubr
cmps
adc
xor
adc
ffreep
push
shl
daa
sbb
inc
jmp
push
call
sub
add
xchg
jnp
cmp
and
ins
sar
aas
jmp
add
les
pop
jno
pop
mov
fidivr
mov
aas
bound
(bad)
repnz
cmp
lahf
or
xchg
es
mov
push
cmp
sub
dec
mov
(bad)
push
call
hlt
push
movs
dec
add
stos
sub
int
(bad)
loop
or
mov
dec
sub
mov
and
xchg
pop
rol
xchg
nop
cwde
addr16
popa
jp
popf
and
or
fimul
cmp
push
and
(bad)
icebp
pop
xchg
jne
mov
add
inc
lahf
(bad)
push
add
xor
jp
outs
mov
mov
test
pop
mov
pop
in
cld
jo
pop
sbb
lods
ds
call
xor
(bad)
or
jnp
mov
shl
sbb
je
add
cmp
outs
mov
jno
inc
test
vaddpd
out
xchg
repz
push
fs
ins
cwde
or
xor
jnp
or
push
adc
sbb
or
jmp
jns
add
sahf
into
test
retf
xchg
sbb
and
push
pusha
enter
or
pop
imul
mov
cmp
jecxz
dec
(bad)
adc
out
imul
mov
enter
sbb
cdq
aad
cmps
and
inc
or
pop
mov
add
mov
xchg
sub
ret
retf
mov
addr16
(bad)
pusha
add
shl
push
(bad)
retf
scas
mov
inc
adc
aam
add
sub
jecxz
repnz
fimul
shl
adc
inc
sbb
jb
xchg
cs
sub
mov
bswap
outs
add
adc
rcl
pusha
lea
pop
add
adc
xor
add
cmp
les
lock
out
mov
lea
mov
xchg
imul
lods
fcomp
inc
daa
jl
push
test
mov
xor
jns
pop
mov
lock
or
retf
je
and
inc
mov
mov
ror
dec
cmp
ret
ret
(bad)
mov
push
pop
mov
jae
jno
pop
sbb
imul
mov
iret
cmp
sbb
and
dec
jl
rcl
push
ss
call
je
stos
adc
icebp
(bad)
push
dec
sub
cdq
sbb
test
jge
xchg
shr
fadd
dec
adc
pop
mov
fdiv
mov
fs
popa
mov
cmp
or
test
or
(bad)
xchg
inc
jmp
xchg
arpl
dec
fistp
inc
push
xor
add
xchg
jo
adc
and
jo
mov
jns
scas
andnps
push
sbb
xor
out
je
shl
xchg
mov
xor
addr16
sbb
popa
pusha
mov
icebp
mov
out
xchg
push
pop
repz
xor
push
pushf
sub
adc
add
push
popa
dec
dec
(bad)
dec
xchg
in
in
fwait
push
shl
shl
xchg
mov
mov
arpl
inc
add
shl
mov
outs
push
(bad)
mov
scas
mov
and
inc
add
dec
movs
std
mov
shl
fwait
ret
and
and
push
ss
jb
push
xor
cmps
and
rcl
hlt
add
pop
cmp
sbb
mov
sbb
into
xor
mov
cld
mov
call
pop
ss
cmp
clc
mov
into
mov
jl
xor
or
pop
mov
ficomp
imul
mov
push
and
loopne
rol
jecxz
ins
xchg
int
sbb
inc
shl
jb
pop
das
fwait
cmp
repz
ja
pushf
mov
add
cmc
xchg
jg
mov
and
xchg
mov
pop
jge
pusha
pop
movs
sbb
ret
jl
stos
int
fwait
iret
(bad)
mov
add
shl
fdivr
and
les
or
adc
mov
scas
sub
xchg
popf
ins
mov
mov
ret
dec
or
cs
hlt
mov
or
ja
dec
(bad)
pop
push
adc
xchg
dec
test
aad
ins
cmp
push
call
test
cli
fist
bound
pop
clc
jmp
add
mov
mov
stos
cmp
mov
test
jae
icebp
push
scas
and
pop
test
inc
or
cwde
adc
jmp
add
lahf
nop
popa
in
jbe
and
and
aad
mov
cmps
push
gs
test
push
addr16
xchg
add
ss
retf
cdq
jmp
std
pop
fiadd
add
sbb
(bad)
out
mov
int3
mov
mov
mov
xor
repnz
ror
inc
ret
in
test
mov
mov
push
fs
xchg
lahf
(bad)
in
fwait
int
mov
add
out
mov
or
xlat
jnp
cmp
jp
mov
adc
and
std
dec
sub
jns
sbb
jecxz
sub
add
mov
call
push
out
mov
jl
mov
mov
mov
jmp
leave
fdiv
add
add
sbb
inc
or
push
rcr
mov
div
pop
aas
dec
nop
dec
sbb
arpl
ja
jmp
jmp
pop
das
jmp
cs
pushf
stc
pop
ja
jecxz
sbb
cmp
pop
dec
mov
in
push
adc
mov
call
rcl
aas
cmc
ror
icebp
stc
fimul
frstor
leavew
mov
stos
int3
push
mov
sbb
shl
fst
jo
xchg
jb
ret
cmps
(bad)
push
sub
outs
and
jmp
call
dec
mov
cli
add
or
movs
adc
addr16
push
das
(bad)
mov
jnp
inc
inc
and
add
jmp
and
(bad)
xor
mov
jg
adc
ds
(bad)
and
inc
pop
std
xor
or
mov
push
inc
cmp
push
cmps
and
stos
dec
pop
cmps
mov
cmp
dec
pop
icebp
jbe
outs
jecxz
mov
cmp
mov
jle
mov
push
bound
les
cli
daa
xchg
je
mov
inc
add
xor
push
(bad)
cdq
jmp
push
(bad)
jb
mov
test
and
in
and
or
push
cmc
jecxz
xchg
dec
mov
xchg
jmp
fs
mov
push
(bad)
ret
pop
inc
lods
add
add
out
fwait
cmp
js
movs
movs
jg
add
adc
repz
ins
adc
(bad)
leave
dec
movs
sbb
xchg
jmp
mov
inc
cdq
fcmovnbe
in
jae
inc
jb
pop
scas
add
cmp
ret
and
push
aad
fcmovbe
cs
arpl
gs
or
test
pop
fstp
sub
jbe
and
mov
movs
fs
mov
ds
out
lock
lahf
je
in
scas
ret
push
jb
dec
jg
cmp
xor
sbb
scas
outs
cmp
cmp
or
loopne
ins
enter
or
sahf
les
or
sbb
adc
addr16
data16
mov
mov
jmp
outs
sar
daa
xor
cld
jp
jbe
sbb
gs
out
(bad)
pop
lods
jb
or
xor
(bad)
(bad)
(bad)
popa
jle
mov
cmp
sbb
pusha
mov
fistp
stos
pop
mov
or
cmp
or
test
push
stos
sub
mov
xchg
fwait
dec
inc
int
inc
loop
add
mov
push
lds
add
in
(bad)
jne
shr
into
call
fcomp
or
call
mov
jl
or
sub
jl
or
adc
mov
fs
xor
mov
sub
loope
leave
out
fisttp
mov
sbb
add
cwde
lods
or
or
mov
add
mov
in
je
fisubr
shl
test
jnp
cmp
jno
(bad)
outs
cmp
jmp
jno
push
(bad)
ins
(bad)
(bad)
mov
pusha
inc
fs
push
movs
fdivr
sbb
mov
push
(bad)
lock
xchg
and
mov
mov
sbb
cmp
sub
call
jge
test
lods
ficomp
mov
xor
push
imul
out
sub
sub
ins
js
cmp
hlt
jne
test
repnz
xchg
or
(bad)
and
and
mov
push
fldenv
and
mov
fisubr
jmp
mov
std
mov
jmp
ins
fpatan
ins
enter
popf
xor
jbe
lods
pop
call
jae
xchg
int3
rcr
popa
lods
push
adc
mov
(bad)
cmp
cld
icebp
mov
ds
mov
out
in
xchg
inc
pop
rep
call
and
outs
mov
sbb
ins
jg
cmp
xor
rcl
mov
xchg
cld
dec
xchg
dec
dec
and
pop
loopne
mov
outs
jp
les
sub
lea
jns
sbb
cdq
loope
ds
adc
push
ds
(bad)
(bad)
mov
sar
cld
repnz
mov
mov
jecxz
sbb
mov
mov
retf
cmc
fwait
add
aad
scas
and
out
mov
sbb
jns
xor
shr
push
push
pusha
stos
push
add
es
xchg
iret
mov
mov
out
fcom
add
clc
out
jo
and
inc
mov
inc
ror
out
mov
xchg
jnp
ror
push
cmps
mov
scas
shl
jns
and
lahf
jne
mov
mov
dec
sahf
pop
(bad)
std
xchg
push
jnp
and
adc
jne
loop
sbb
push
add
js
aam
out
jae
push
stos
cmp
mov
addr16
(bad)
push
das
lea
push
pop
stos
jg
fnsave
mov
sbb
dec
imul
xchg
or
cmps
les
or
dec
iret
and
ins
ror
add
loope
pop
rol
pop
hlt
bound
das
sub
rcr
lahf
jns
pushf
sbb
test
sahf
fdiv
icebp
call
push
ins
fld
inc
lods
pop
rcl
stc
lods
cmp
adc
sti
xchg
jmp
sbb
(bad)
pop
cmp
add
cmp
icebp
loop
and
loope
aas
(bad)
jnp
repnz
es
mov
and
imul
addr16
push
fsubrp
int3
stos
enter
cmp
loope
xchg
imul
(bad)
bound
sub
cwde
nop
repnz
cmc
repz
and
xor
test
cmp
lds
mov
add
mov
test
xchg
add
daa
push
pop
inc
xor
int3
outs
out
lds
mov
push
mov
mov
adc
adc
aaa
xchg
jmp
nop
gs
test
jmp
add
call
cmp
xor
je
and
fdiv
fnstsw
pop
jl
cli
xor
mov
rol
scas
sbb
inc
push
inc
or
icebp
jns
xor
xchg
pop
daa
bound
inc
push
jae
mov
aam
pop
xchg
xchg
out
movs
inc
hlt
xchg
sbb
aad
sub
in
push
or
dec
jecxz
cmp
in
xor
cli
xchg
js
mov
xor
in
retf
push
push
iret
fld
pop
pop
or
pop
and
(bad)
int
sbb
mov
jmp
push
test
dec
add
ret
lods
cmps
mov
xchg
xlat
or
xchg
mov
outs
(bad)
ja
or
stc
pop
scas
add
and
clc
bound
ffreep
inc
xor
leave
inc
inc
inc
jg
addr16
mov
or
dec
not
push
and
xacquire
daa
mov
push
pop
jb
mov
mov
ror
aam
out
sbb
lea
dec
fwait
xor
in
mov
popf
xchg
in
add
aad
fwait
mov
shl
enter
out
xchg
and
(bad)
jae
sub
scas
mov
pop
jmp
jnp
rol
pop
jno
and
mov
and
mov
xor
mov
sub
test
pop
rcl
imul
and
jmp
dec
cmc
jae
fscale
or
cmp
add
rol
add
cmp
movs
ins
movs
xor
and
jecxz
aaa
mov
mov
(bad)
addr16
cmps
mov
idiv
jp
ins
xlat
pop
pushf
mov
int3
mov
scas
les
jge
jae
mov
(bad)
cmp
mov
movs
jp
mov
jle
sbb
pop
in
xchg
(bad)
retf
mov
mov
add
jecxz
lock
mov
mov
push
adc
sub
ret
pop
xor
out
jp
add
jbe
out
sub
ins
cs
data16
jbe
shl
lods
mov
pusha
push
or
cld
jle
stos
fs
mov
xchg
mov
mov
inc
stos
xchg
sbb
add
adc
adc
fld
inc
fbstp
pop
repz
add
mov
imul
pop
sbb
movs
and
mov
imul
push
stc
stos
sub
lods
retf
outs
in
mov
pavgb
mov
fs
ffree
sub
retf
lock
mov
or
sub
pop
add
aam
(bad)
out
or
scas
ins
pop
dec
gs
jbe
jg
sub
add
xor
out
mov
dec
hlt
pop
mov
or
(bad)
outs
jge
cdq
out
mov
ds
test
push
mov
pop
int
mov
pop
xchg
ret
jne
jae
inc
push
sub
daa
jl
sub
cmp
sub
and
inc
ss
sbb
gs
aas
imul
dec
mov
fcomp
pop
add
add
mov
stc
(bad)
nop
ss
jb
sub
aas
bnd
lods
jb
or
jmp
and
idiv
out
pop
sub
repz
sbb
pop
pop
sahf
jno
add
mov
cmp
ja
hlt
push
cmp
mov
ins
jmp
shl
cmp
jp
push
(bad)
mov
fcmovnb
inc
sub
pop
jbe
(bad)
sbb
cmp
cs
and
mov
int3
pop
push
icebp
mov
jmp
push
clc
out
inc
in
iret
jns
mov
fdivr
mov
add
or
mov
push
jno
pop
dec
repnz
xchg
sbb
adc
and
dec
adc
iret
mov
inc
sahf
enter
xchg
jge
test
pop
jl
les
jne
fld
dec
cmps
sbb
test
cmp
pusha
inc
cdq
jge
sbb
mov
xchg
push
sahf
jb
fcomp
sub
xchg
mov
jmp
pop
jmp
mov
int
mov
pop
das
add
mov
retf
mov
rcr
push
popf
mov
jnp
add
pop
pop
pushf
out
(bad)
in
cwde
xchg
sbb
mov
popf
push
lock
frstor
pop
dec
xor
mov
popa
ror
out
movs
sub
jne
mov
les
push
push
aaa
(bad)
pop
sbb
push
and
pop
inc
(bad)
pushf
or
cmc
pushf
je
retf
ret
ret
xor
test
cmp
xchg
add
into
xchg
xlat
fdiv
rol
jno
add
std
add
and
cdq
push
fstp
arpl
iret
rcr
test
dec
push
das
xchg
stc
cmp
sti
pop
fisub
mov
jno
call
into
in
(bad)
lock
(bad)
mov
xchg
sbb
inc
mov
(bad)
(bad)
jmp
adc
inc
add
fisub
icebp
arpl
sub
xchg
mov
push
inc
and
mov
adc
jbe
cmovne
adc
sub
pop
mov
mov
xchg
mov
enter
cli
lea
add
daa
lods
xor
pop
push
test
mov
std
sahf
mov
cmp
cwde
ins
sar
push
xor
pushf
call
stc
cmp
and
pop
mov
jne
rcl
rcl
iret
ins
sub
add
enter
rcr
pop
xlat
icebp
push
call
add
ficom
cmp
daa
xor
push
scas
pop
jecxz
jns
adc
mov
xchg
xor
xchg
and
fwait
stos
pop
mov
or
cli
cdq
sub
sub
int3
test
sbb
sahf
jl
jbe
nop
pop
cmp
pop
pop
aad
xor
popf
pop
ja
fmul
pop
aam
or
sbb
sahf
(bad)
rcl
mov
push
sub
enter
and
in
(bad)
mov
cwde
test
enter
push
push
cmps
sub
and
leave
push
jge
jno
gs
mov
add
cld
rcl
leave
xlat
cmps
sub
mov
and
inc
push
in
test
out
leave
ficomp
mov
inc
jecxz
dec
jmp
mov
fnstsw
jmp
push
sbb
and
sub
in
dec
aas
sub
dec
mov
sbb
shr
sahf
mov
pop
(bad)
cmp
out
or
(bad)
fimul
imul
jmp
jns
cli
stc
test
lods
data16
out
popf
in
inc
and
jb
or
arpl
xor
out
call
fadd
loopne
and
xor
mov
push
test
mov
jmp
pop
jp
jno
out
cmps
xor
xchg
inc
inc
leave
add
ins
fwait
sbb
cmps
imul
inc
(bad)
sub
xchg
mov
data16
xor
fild
mov
data16
dec
add
mov
inc
push
shr
(bad)
in
gs
(bad)
mov
push
fptan
push
inc
jp
dec
fld
int
into
and
pop
mov
test
mov
lea
xor
imul
in
scas
adc
push
inc
imul
cmp
rcl
outs
mov
std
jb
test
iret
fbstp
fwait
xor
outs
inc
and
fcomp
out
inc
out
lods
icebp
cmps
or
popa
(bad)
inc
shl
loopne
sahf
mov
ret
out
lods
cdq
(bad)
jge
xor
retf
or
dec
jge
lahf
push
xor
hlt
(bad)
pop
mov
test
ret
sbb
push
pop
adc
lds
retf
shl
cmp
movs
sub
add
push
cmp
rcl
out
not
mov
stos
cwde
cmps
mov
scas
inc
(bad)
jb
cmc
call
ror
sbb
(bad)
cmp
cli
sbb
fs
ds
popa
in
ret
cli
push
mov
mov
mov
mov
shl
inc
mov
xchg
mov
imul
cmps
es
adc
addr16
(bad)
mov
pop
int3
push
mov
leave
sub
lods
shr
call
xor
xor
jnp
push
inc
xchg
jecxz
add
sub
mov
push
and
cdq
mov
sbb
inc
ret
ins
pusha
jl
out
movs
fwait
cmps
sti
and
fimul
bound
ins
icebp
movs
inc
mov
pusha
pop
inc
nop
and
(bad)
arpl
js
push
les
mov
adc
cdq
in
xchg
xor
in
and
nop
shl
add
mov
stos
retf
cmp
or
or
pop
pop
push
dec
test
xchg
jns
aaa
ror
ror
test
adc
push
push
(bad)
xor
test
push
dec
inc
pop
and
mov
dec
sbb
xchg
pop
push
and
jl
cmp
jnp
and
mov
add
dec
mov
pop
jl
mov
mov
repnz
test
jecxz
xchg
not
call
xchg
and
stos
xor
push
mov
jmp
stos
mov
dec
add
div
push
lods
loopne
sub
jg
enter
sbb
fstp
push
push
jge
retf
mov
(bad)
(bad)
xchg
pop
cmp
iret
popa
cmp
test
xchg
mov
jle
cmps
mov
push
lods
mov
gs
inc
and
or
pop
pop
pusha
or
movs
and
pop
jb
sub
mov
aad
or
mov
jmp
std
idiv
push
pop
aaa
or
and
push
ja
mov
xor
cmp
mov
fnsave
outs
xor
js
sub
inc
xchg
cld
and
jmp
fadd
push
loope
test
xchg
ins
cmp
mov
push
fild
sub
sub
cmc
mov
jecxz
inc
mov
inc
xor
cmc
test
push
cmps
pop
pop
jno
mov
adc
lods
dec
hlt
pop
jmp
cmps
fld
orps
ins
test
mov
fs
pop
jle
jno
test
fisttp
mov
in
retf
push
(bad)
rcr
movs
mov
gs
bnd
dec
clc
pop
adc
clc
mov
lock
sbb
mov
sbb
mov
stc
xor
sbb
stc
es
and
pop
push
jo
ja
push
cld
sbb
int
cwde
push
mov
adc
cld
loope
add
repnz
shl
icebp
jne
loope
pop
arpl
pop
add
sub
xchg
movs
push
aas
xchg
xchg
ret
push
leave
in
inc
leave
pop
pop
inc
cmp
addr16
mov
mov
mov
(bad)
or
xchg
inc
loope
ja
or
pop
and
pop
out
mov
scas
xchg
bound
(bad)
stc
sahf
iret
sbb
push
push
sbb
fs
jle
or
cmp
enter
pop
out
les
inc
xor
mov
rcr
lahf
inc
cmp
std
outs
inc
lods
xor
mov
sbb
stos
sub
clc
ds
int3
rcl
inc
inc
neg
out
(bad)
pop
lds
jns
adc
(bad)
sub
mov
mov
jmp
cmps
sbb
loop
xor
push
cmp
push
push
lods
scas
sbb
into
push
push
dec
ret
cmp
bsf
mov
bound
pop
movs
adc
jns
jge
popa
in
cmp
jp
nop
push
leave
sub
push
jg
jmp
add
js
mov
and
mov
sbb
and
ret
mov
jne
(bad)
clc
xor
cmp
pop
dec
dec
sub
repnz
jnp
scas
dec
neg
(bad)
enter
mov
js
cmp
mul
cmc
sbb
and
sub
sbb
or
test
adc
sub
movs
mov
std
jb
push
or
and
pop
std
aad
mov
mov
jns
movs
add
fimul
cmp
inc
call
ins
sti
or
out
push
mov
cmp
jl
jmp
(bad)
mov
pop
or
dec
in
lock
pop
movs
mov
into
retf
jmp
mov
cmps
jg
mov
rol
and
mov
lea
ins
sub
jns
inc
adc
dec
mov
mul
xchg
push
ss
cmps
(bad)
les
and
imul
add
mov
fidiv
ins
cld
xor
call
addr16
inc
fmulp
icebp
(bad)
jle
dec
scas
xlat
lahf
ret
add
into
mov
aam
push
add
rcl
adc
data16
ret
and
and
xlat
ds
pop
cli
adc
sbb
int
sbb
inc
xchg
imul
sbb
pop
xchg
mov
mov
pop
stos
lods
mov
adc
stos
test
push
outs
je
icebp
fisttp
cmp
sbb
outs
jp
sub
ja
int
fwait
js
retf
xlat
iret
xchg
ja
jno
or
(bad)
fisub
mov
stos
sbb
pusha
and
lods
mov
push
dec
retf
cmp
ins
lock
or
dec
mov
(bad)
push
div
call
and
dec
pusha
gs
test
mov
inc
cli
aas
(bad)
jnp
cld
mov
imul
repnz
not
add
in
stc
push
cmps
and
add
icebp
scas
push
cld
mov
nop
mov
loopne
call
cmp
(bad)
(bad)
mov
adc
pop
popa
aaa
(bad)
mov
pop
ret
mov
lea
ror
sub
pop
mov
sbb
into
cdq
mov
arpl
sti
outs
repz
shr
adc
leave
mov
loop
sahf
sub
xor
lods
dec
fdivrp
out
add
push
add
(bad)
push
jg
es
arpl
retf
bswap
or
mov
lock
dec
addr16
in
mov
jmp
push
(bad)
push
cmp
in
or
repnz
or
jo
cld
pop
fisttp
in
(bad)
lock
inc
adc
mov
gs
test
in
(bad)
sbb
ror
and
repnz
mov
xlat
daa
popf
ds
sti
leave
ja
iret
and
in
push
mov
bnd
clc
cmp
movs
ja
add
push
lahf
cwde
jmp
popa
outs
pop
inc
inc
inc
add
cmp
iret
mov
ret
iret
dec
pop
cmc
xchg
test
(bad)
xor
ins
or
retf
leave
adc
xchg
adc
cwde
xor
in
add
cmp
sub
repz
sub
push
lds
sbb
idiv
clc
jmp
not
mov
sub
mov
mov
mov
popa
fisub
loopne
mov
call
pop
add
cs
and
pop
cli
ja
sub
fs
loopne
xchg
mov
mov
loope
out
cwde
mov
cli
xchg
xor
cmp
pop
cmp
stos
sub
pop
add
jmp
dec
and
or
xchg
cmp
call
rep
outs
popa
sub
test
in
push
(bad)
push
imul
pusha
xchg
call
pop
xchg
push
test
jmp
sub
sar
or
mov
sub
dec
xchg
les
xchg
cdq
lea
xchg
stc
xchg
fs
jb
push
inc
cmp
dec
push
mov
jge
bound
and
adc
leave
xchg
(bad)
fdivr
lods
ror
mov
mov
mov
push
movs
gs
or
(bad)
sbb
sub
push
or
or
sti
inc
mov
cmp
sub
ins
mov
mov
ret
inc
call
retf
jge
stos
sar
fwait
sbb
cmc
out
loop
fistp
adc
cmp
rsqrtps
retf
call
push
sti
pop
and
sub
dec
dec
out
jno
lea
movs
add
inc
mov
arpl
cmp
dec
dec
and
call
sahf
(bad)
pop
pushf
dec
retf
mov
mov
fdivr
shl
add
cmc
inc
add
add
sbb
sbb
jmp
repz
repz
jns
ret
push
add
add
jg
movs
ins
inc
pop
cmp
pop
push
adc
pop
or
icebp
lds
xchg
leave
lahf
les
fidivr
aam
retf
stc
cmc
dec
int3
loop
mov
xor
enter
pop
sbb
cmps
mov
shl
shl
jns
pop
jecxz
push
xor
and
inc
xchg
popa
add
fwait
mov
lock
jg
in
add
dec
mov
and
imul
es
in
add
fst
cmp
scas
mov
repnz
stos
cmps
add
cmp
fucomp
les
popa
sbb
mov
call
jmp
arpl
cmc
push
rol
xchg
fwait
lds
xchg
jmp
cdq
cdq
fmulp
arpl
dec
fiadd
stc
mov
xchg
dec
pop
int
retf
add
lea
dec
js
aam
retf
lea
sahf
xchg
out
xchg
dec
pop
mov
dec
int
xchg
lods
inc
gs
pop
mov
mov
dec
or
stos
cli
arpl
jae
dec
dec
in
or
fsubr
cmp
pop
aam
inc
lods
psubusw
mov
sti
in
dec
stos
out
cmp
jbe
push
mov
cmp
ror
xor
test
xchg
jmp
cli
stc
or
adc
aas
addr16
jmp
ret
push
or
fcom
and
(bad)
fbld
jno
popa
sbb
mov
mov
pop
mov
sub
mov
mov
arpl
das
(bad)
loope
(bad)
lahf
lds
retf
(bad)
lock
and
pop
inc
iret
dec
mov
ffreep
sbb
cmp
inc
mov
add
pop
test
pop
jl
pop
xchg
inc
cmp
push
gs
stos
sub
lods
xchg
dec
pop
or
popa
das
mov
std
inc
ss
xchg
mov
jmp
or
fs
retf
inc
mov
fs
fld
dec
pop
jns
dec
rcl
add
loope
mov
push
cld
daa
add
push
sub
test
xchg
out
(bad)
fwait
mov
pop
sbb
shl
or
arpl
add
inc
scas
xor
scas
in
or
pop
in
inc
out
mov
inc
dec
sub
push
mul
and
dec
lock
xor
ret
dec
std
rcr
int
pop
mov
movs
mov
mov
or
xchg
xchg
adc
retf
std
and
jmp
das
(bad)
clc
mov
arpl
pop
adc
xor
or
data16
imul
outs
add
imul
mov
pop
mov
(bad)
sub
jbe
fisub
fimul
mov
xchg
sub
sub
in
leave
sahf
movs
jae
or
dec
inc
fldenv
adc
iret
(bad)
push
mov
loope
cmps
sbb
push
popa
and
scas
popa
push
xchg
stos
push
test
das
cmp
in
rol
cmp
lea
or
(bad)
stc
sbb
or
gs
cmc
mov
dec
aad
jle
call
sahf
scas
xchg
mov
pop
in
mov
pop
sbb
adc
fdiv
loopne
jle
mov
mov
in
sub
repz
rcl
stos
dec
mov
scas
or
jg
(bad)
sar
lods
add
mov
add
sub
les
xlat
mov
inc
pop
dec
mov
aas
stos
dec
js
jb
sub
hlt
jecxz
add
ror
lock
sahf
xor
movs
add
es
jae
mov
mov
repnz
jb
dec
lahf
test
fwait
dec
ds
ret
dec
loopne
stos
mov
push
outs
or
cwde
lds
xchg
jmp
(bad)
fist
add
ds
add
icebp
or
add
and
or
mov
xchg
int3
icebp
mov
mov
sar
xchg
scas
xchg
test
sub
fdivr
(bad)
dec
(bad)
mov
dec
inc
sbb
jecxz
call
pop
movs
sub
pop
jne
lea
gs
sub
xor
cli
sbb
fmul
adc
dec
push
int
xor
adc
in
test
xchg
stos
push
adc
lods
cmp
push
adc
add
fs
pop
jmp
fcmovu
mov
xor
mov
jae
js
gs
(bad)
fldcw
stos
(bad)
mov
jae
icebp
movs
sub
movs
(bad)
call
out
jle
dec
test
inc
add
test
adc
stos
jns
fisubr
fmul
pop
or
and
mov
inc
sar
retf
popf
cli
sub
add
movs
pop
mov
call
and
popa
inc
rcl
cld
cmp
int3
inc
sbb
pop
dec
in
dec
(bad)
xchg
xor
mov
aam
int3
loope
add
call
jno
lock
jmp
outs
or
cwde
jnp
loop
push
push
call
imul
leave
push
dec
jp
nop
into
bound
xor
leave
pop
scas
daa
repnz
pop
pusha
repz
xor
push
mov
mov
or
or
fst
mov
retf
in
repnz
or
idiv
mov
test
fiadd
and
jno
loopne
adc
es
cmps
jae
dec
mov
push
int3
pusha
in
aad
cmc
stos
add
xchg
mov
mov
cmp
mov
xchg
ret
sti
or
push
mov
aam
add
out
sub
mov
(bad)
pop
std
jns
cmps
ja
push
mov
lock
push
daa
test
jb
pop
frndint
rcl
inc
mov
in
push
mov
jp
sbb
and
sub
imul
jmp
push
aad
ret
dec
inc
jmp
or
sub
les
(bad)
sbb
sbb
pushw
mov
mov
or
sahf
xor
rol
lahf
gs
sti
mov
mov
and
pop
and
les
xlat
fisub
jecxz
push
cmps
out
pop
mov
xchg
lods
adc
in
mov
repnz
xchg
sbb
in
xlat
out
push
fwait
imul
mov
and
inc
xlat
inc
push
mov
mov
mov
and
bound
sar
dec
(bad)
inc
or
dec
repz
dec
popf
jno
test
mov
jne
retf
jmp
push
jle
xchg
std
push
push
xchg
inc
rcr
xor
loop
cmp
aaa
pop
mov
aaa
shl
jmp
int3
fst
xor
popa
xor
cmp
xchg
and
pop
adc
xchg
pop
ja
dec
iret
or
imul
dec
sub
rep
jmp
ins
fdivrp
lea
cmp
sahf
adc
ins
push
out
mov
adc
push
fistp
and
adc
fnstcw
xor
cmp
xchg
cmps
cmp
test
int
int
sub
jp
mov
test
dec
xor
sub
fnstsw
fdivr
(bad)
les
je
pushf
inc
add
rol
cmp
loope
push
aam
inc
minps
mov
ror
mov
adc
loope
jmp
cmp
and
mov
out
out
sub
jo
movs
fbld
daa
cli
adc
popf
mov
shr
in
movs
aam
data16
jbe
test
add
inc
xor
retf
push
rol
outs
aas
aas
hlt
sub
retf
movs
ja
jne
(bad)
mov
pop
mov
add
mov
and
cs
mov
mov
mov
push
stos
int
push
data16
pop
mov
out
mov
retf
jp
call
sub
xlat
mov
icebp
cmp
into
inc
aas
dec
ins
adc
xor
adc
mov
je
neg
or
repz
inc
pop
and
jo
test
xchg
int
hlt
mov
adc
or
jp
and
aad
ins
mov
out
sub
or
dec
mov
jl
stos
inc
sbb
cmp
or
sbb
add
cmp
mov
add
jno
outs
les
pop
dec
fimul
cmps
mov
scas
or
fwait
mov
pusha
pop
cld
icebp
aas
jno
mov
mov
jns
pop
(bad)
mov
cmp
sbb
push
outs
mov
ds
xor
and
js
sub
(bad)
jmp
jnp
sub
dec
sbb
xchg
sub
arpl
test
mul
jge
bound
mov
pop
into
sbb
out
jne
ror
or
(bad)
retf
sbb
outs
shr
fsub
and
push
cld
popa
test
pop
xchg
rcl
xchg
jecxz
dec
lock
jns
sub
popf
cld
inc
out
dec
ret
pop
push
dec
cs
add
pop
pop
ficomp
imul
loopne
call
leave
xchg
(bad)
out
inc
cmc
sbb
xor
aaa
(bad)
sub
jl
mov
xchg
sbb
jle
jno
xchg
gs
lock
inc
je
cmp
mov
add
sub
aaa
xlat
inc
sub
dec
jle
and
and
xchg
mov
cmps
iret
cmps
icebp
mov
jne
(bad)
sub
mov
cmp
sti
pop
in
push
js
jo
pop
mov
out
jecxz
das
xor
test
xchg
mov
inc
mov
aaa
dec
call
pop
enter
jecxz
pop
and
xor
loopne
in
jne
in
fistp
enter
jmp
sbb
mov
inc
dec
(bad)
gs
lds
jnp
outs
inc
sbb
jg
jmp
xlat
or
or
repnz
or
hlt
push
pop
jae
movs
or
or
push
rol
iret
mov
add
leave
test
push
icebp
push
popa
int
sbb
xor
(bad)
xchg
mov
arpl
add
or
pop
jmp
mov
fld
sub
dec
push
and
xlat
mov
dec
and
mov
xchg
jle
push
shl
dec
sub
sub
push
iret
pop
ds
dec
or
leave
xlat
jmp
or
pop
and
lods
mov
adc
inc
or
stos
call
mov
ss
mov
ds
movs
gs
arpl
hlt
bound
xor
mov
xchg
add
popf
or
fsubr
add
mov
add
dec
xor
mov
mov
cli
xchg
ret
les
rcr
sub
jno
out
push
adc
adc
and
xchg
imul
popf
ins
xchg
add
stos
retf
(bad)
jl
loopne
sub
lods
inc
test
test
aas
jp
rcl
inc
cli
xchg
out
ret
maxps
push
nop
loopne
ins
lock
outs
push
shr
xchg
aad
fnstsw
das
sbb
test
lds
imul
(bad)
jbe
loop
inc
add
mov
cmp
aam
sahf
cmp
lods
push
adc
daa
mov
stos
inc
fsubr
loop
scas
jbe
jg
push
mov
mov
mov
mov
fs
bound
mov
jecxz
push
out
addr16
jge
dec
inc
out
(bad)
inc
ret
jl
pushf
jmp
aad
(bad)
adc
popa
push
xchg
out
push
inc
mov
or
mov
(bad)
or
xchg
jns
mov
pushf
ins
cmp
xchg
adc
sbb
in
mov
xchg
pushf
dec
ins
lea
xor
rcl
xor
out
pop
mov
hlt
jmp
adc
jnp
mov
inc
xor
and
push
cdq
dec
jmp
scas
sub
lods
stos
cdq
sbb
(bad)
shr
cmp
call
adc
pop
in
sbb
cmp
mov
jb
add
mov
loop
add
cli
inc
or
mov
dec
retf
mov
outs
xchg
cmp
(bad)
push
icebp
or
jo
rcl
and
jbe
add
jno
(bad)
stos
mov
or
xor
sub
(bad)
js
test
xor
mov
mov
push
data16
inc
lods
dec
lahf
fwait
cmp
cs
rcr
mov
push
in
iret
adc
sbb
xchg
enter
sbb
pushf
add
pop
jl
movs
stc
test
std
add
stos
jne
mov
mov
pop
xchg
add
fst
jle
and
sbb
dec
pusha
add
lea
inc
(bad)
(bad)
mov
outs
push
rcr
pop
xchg
es
imul
mov
add
fsub
sbb
mov
and
data16
pop
test
inc
shr
sbb
das
push
mov
add
xor
cmps
leave
sbb
aas
push
mov
nop
pop
push
inc
and
jno
test
mov
int3
ss
push
ret
ficom
popa
jnp
dec
sbb
(bad)
rol
jns
fcmovbe
test
add
mov
xchg
outs
inc
ret
mov
add
stos
pusha
std
(bad)
je
inc
mov
call
adc
jle
mov
sub
sar
dec
and
test
cmp
cmp
xchg
js
test
cli
rol
addr16
icebp
mov
xor
jo
test
retf
dec
loop
dec
pop
aas
cmp
jmp
or
mov
sbb
mov
cli
pop
int3
dec
sub
int
or
scas
in
jbe
(bad)
test
xor
fstp
push
mov
jmp
scas
xchg
or
pop
add
popa
mov
push
pop
xlat
test
mov
les
pusha
lock
shl
cli
lea
mov
or
sbb
jl
jo
cdq
or
jae
and
pop
loope
sub
jbe
dec
hlt
setb
call
push
in
ret
sbb
pop
addr16
mov
mov
loopne
mov
cmp
hlt
sar
cwde
adc
push
push
add
and
ins
in
jne
stos
pop
icebp
dec
pop
add
push
mov
pop
mov
stc
cmp
jns
mov
lahf
daa
and
add
jmp
mov
fcmovnu
retf
mov
out
test
add
fisub
pop
out
mov
cmp
mov
fnstenv
mov
loope
ss
fcomp
inc
push
jp
cli
cld
jmp
xlat
lds
adc
push
in
or
das
pusha
mov
mov
jle
fcomp
movs
dec
call
stos
add
std
call
(bad)
mov
jmp
mov
pop
mov
leave
sti
dec
mov
xchg
adc
xchg
in
rol
ins
cmp
push
pop
mov
mov
ror
imul
and
(bad)
push
addr16
(bad)
out
mov
int3
pop
movs
xchg
sub
push
loop
jns
inc
mov
js
cmps
jmp
cmc
repz
sar
outs
pop
jl
adc
sub
xchg
or
test
jne
leave
add
mov
or
fnstcw
pop
cmp
fldenv
call
jmp
data16
scas
xchg
in
fisub
mov
mov
addr16
dec
rol
sub
test
sbb
inc
adc
mov
popf
leave
retf
mov
fisttp
mov
add
test
ror
xchg
sbb
jg
jmp
retf
aam
lsl
add
mov
xor
push
cmc
arpl
in
dec
ins
xor
test
(bad)
cli
xlat
jnp
(bad)
pop
out
mov
or
cs
xor
adc
test
test
xor
sbb
call
cwde
aad
iret
xchg
cwde
jmp
cmp
sbb
pop
call
iret
scas
fidivr
les
fld
push
mov
push
xor
mov
pop
push
out
lea
in
stos
add
mov
mov
imul
imul
sub
adc
neg
add
fsubr
adc
dec
mov
jle
fs
popa
sahf
retf
inc
sub
inc
dec
pop
push
shl
cwde
or
mov
mov
jp
inc
in
in
mov
push
mov
mov
mov
call
mov
dec
in
ja
sbb
sub
and
and
inc
loopne
sahf
inc
inc
pop
mov
aam
and
mov
(bad)
and
mov
sbb
sub
mov
popf
add
inc
mov
and
mov
pop
jecxz
dec
xchg
lock
xor
ins
xchg
stc
xor
das
(bad)
int3
adc
push
or
ss
sahf
dec
mov
cmp
jle
cli
mov
xchg
(bad)
cmp
inc
jge
mov
inc
fwait
mov
mov
xchg
xor
cld
inc
or
call
clc
cmps
push
retf
repnz
xchg
jbe
sub
fcom
mov
shl
dec
mov
adc
lods
jle
psrlq
mov
mov
sub
mov
xor
jmp
jmp
mov
sbb
add
sti
mov
xchg
mov
pop
lss
push
cmp
mov
add
add
xor
test
outs
or
cmp
lock
popf
call
push
mov
ins
es
sub
inc
xchg
xor
adc
std
mov
lods
icebp
idiv
sbb
loope
jnp
(bad)
mov
jecxz
je
dec
jo
mov
jmp
pop
push
js
jnp
(bad)
dec
clc
adc
sub
aaa
scas
jecxz
lock
push
ds
outs
mov
dec
lods
lds
sbb
xor
and
(bad)
jl
fcomp
scas
adc
push
mov
mov
call
pop
jmp
lods
push
cmps
xlat
popf
pop
daa
inc
pop
inc
jae
add
mov
and
adc
lock
sbb
lea
and
sbb
out
jmp
arpl
cmp
cmp
mov
test
mov
mov
sbb
cmc
mov
fcmovnu
mov
int3
mov
out
stc
jne
cmp
push
mov
push
fld
pop
lods
popf
jmp
hlt
data16
call
mov
loope
mov
lds
lsl
cwde
ja
and
retf
cmp
sub
add
mov
shl
ja
cld
jbe
jne
pop
enter
xchg
xchg
inc
sbb
iret
push
and
fwait
movs
test
jecxz
or
adc
mov
stc
sbb
cwde
push
jle
or
mov
adc
jp
mov
pop
adc
dec
imul
in
push
in
pop
pop
mov
xlat
test
sbb
mov
xlat
movs
xor
dec
bound
shl
mov
cli
xor
enter
mov
and
sysret
push
in
fwait
lea
pop
es
sub
inc
movs
xor
cmp
xor
test
jb
scas
xchg
daa
sbb
cmp
pop
cmp
enter
pop
pusha
adc
jns
leave
sbb
lods
(bad)
(bad)
shl
cmp
jmp
or
adc
sbb
jge
ja
add
dec
mov
bound
sub
into
push
aad
mov
sbb
call
(bad)
mov
cs
pop
mov
inc
mov
pop
push
pop
loope
mov
and
jge
adc
jbe
xchg
inc
mov
sub
adc
mov
inc
into
lock
cmc
add
add
(bad)
std
test
sar
aam
cmp
repz
xchg
cmps
push
sbb
into
jmp
nop
out
pop
icebp
inc
mov
mov
cmc
cmp
cmp
call
xor
mov
xor
lods
pop
ds
push
mov
mov
sbb
lods
loope
sbb
inc
ret
leave
mov
add
mov
jp
scas
pop
inc
jl
jge
stc
test
xlat
fbld
pop
jmp
scas
jb
cld
pop
movs
movs
dec
pushf
mov
fimul
jg
mov
xor
mov
scas
pop
or
leave
repz
mov
and
movs
cmp
add
stos
pop
mov
jne
repnz
ds
add
mov
xchg
xor
jmp
jecxz
out
xor
int
je
jno
imul
adc
pop
jmp
adc
jmp
in
frstor
cmp
sub
jmp
mov
test
xchg
rcr
(bad)
pop
fs
xchg
gs
test
mov
xchg
dec
push
ds
jne
(bad)
hlt
inc
pop
int3
arpl
inc
sar
mov
xchg
cmp
retf
pop
dec
aam
push
retf
ret
and
xchg
ss
cwde
xchg
pop
into
sub
aaa
into
and
shl
cmc
shl
cmp
fxch
idiv
add
(bad)
push
cmp
sub
cmp
sbb
or
outs
sahf
mov
(bad)
jg
mov
xchg
cmp
in
daa
pop
or
mov
mov
cwde
sbb
daa
in
xor
sub
ficomp
iret
mov
mov
or
movs
rcr
inc
mov
popf
ficom
in
inc
std
cmp
xchg
js
push
dec
push
jl
push
stc
push
fild
xchg
mov
push
aas
push
jecxz
out
xor
mov
dec
lods
int3
sbb
mov
(bad)
jmp
push
pop
or
xchg
pop
add
push
gs
mov
or
out
xchg
test
dec
dec
dec
lds
cmp
je
clc
(bad)
loop
mov
jecxz
mov
lock
stos
out
xor
add
push
ret
and
test
jne
addr16
dec
pop
dec
ins
xor
in
fldcw
das
push
mov
xchg
leave
fisub
iret
popf
jmp
mov
outs
xchg
call
bound
fs
enter
xchg
xchg
mov
stos
push
div
js
xchg
mov
hlt
adc
mov
mov
test
or
sar
je
jp
xchg
mov
fild
xchg
cmps
mov
and
adc
sti
cmc
daa
pushf
icebp
out
clc
mov
xor
cmp
push
fs
sbb
cld
push
js
cmp
jl
popa
in
mov
test
pop
push
mov
int
rcl
sub
or
fcmovu
or
jns
fwait
mov
movs
jg
jle
popf
add
imul
mov
dec
sub
mov
icebp
add
and
je
add
pop
mov
pusha
fld
push
sbb
jmp
inc
test
jmp
mov
sbb
mov
test
and
div
test
pusha
popf
cwde
ror
lds
loop
jp
cmp
ds
sub
test
outs
fild
push
ins
jae
mov
push
inc
mov
jmp
sub
shr
and
daa
xor
jns
outs
dec
push
add
scas
mov
test
iret
add
cmc
pop
fldcw
jno
mov
movs
and
cmps
and
pop
dec
mov
mov
xchg
ret
sti
fisttp
push
rcr
js
add
adc
xor
sbb
xchg
(bad)
cs
add
sub
(bad)
sub
mov
push
cmp
sub
(bad)
mov
shl
icebp
jno
outs
ds
dec
popa
ds
in
xchg
mov
test
xchg
in
xor
test
call
jns
jg
sbb
shr
jecxz
(bad)
sbb
scas
add
test
xlat
stos
aam
jl
sub
sbb
js
ror
inc
ds
mov
pop
xchg
out
cmp
in
mov
xchg
push
inc
or
pop
repnz
(bad)
(bad)
leave
inc
mov
dec
loop
jne
cmc
mov
adc
fmul
push
pop
retf
lds
jne
or
and
sub
or
push
sub
lahf
out
imul
mov
jge
push
mov
adc
adc
xchg
data16
cmc
loop
mov
mov
cmps
in
arpl
aam
leave
push
scas
push
pop
add
in
sub
push
push
lahf
pop
data16
sub
pop
sub
icebp
xchg
fldcw
sbb
gs
or
(bad)
cmp
sbb
xchg
add
push
xor
imul
pop
jge
cmp
rol
js
in
lods
mov
mov
daa
xor
aad
lahf
cmp
jp
jp
(bad)
push
ja
rcr
push
(bad)
(bad)
mov
dec
push
xchg
ret
mov
add
cmp
js
pop
fdiv
lods
adc
jno
repz
dec
sbb
cmc
push
dec
adc
jp
mov
and
and
mov
call
fst
xlat
inc
inc
movs
sbb
fsub
in
loopne
push
push
movs
test
mov
and
cmc
pushf
xchg
bound
div
pop
lds
lea
outs
push
sbb
pusha
dec
xchg
or
sub
test
fcmove
adc
push
jecxz
sbb
out
sbb
aad
push
add
aam
call
dec
fld
cmp
mov
call
add
out
xor
dec
jp
mov
pop
mov
xchg
pop
cmp
ss
cmp
mov
dec
(bad)
push
jl
clc
mov
repnz
imul
inc
xor
jae
stc
mov
pop
bound
xchg
inc
dec
rol
push
mov
movs
movs
dec
cmp
mov
enter
push
jg
jl
xor
xor
out
repnz
push
xchg
mov
jle
fisttp
gs
and
out
add
jnp
pop
sahf
or
lahf
jbe
sub
xchg
inc
cmp
push
out
sub
int
xchg
xchg
jmp
and
scas
inc
or
lea
popa
loope
inc
fdiv
add
mov
repnz
pop
ins
lods
out
xchg
xchg
push
cli
fnsave
test
jmp
mov
clc
mov
aad
add
sub
fs
and
jae
xchg
into
sub
push
push
jae
xchg
or
mov
lock
gs
hlt
(bad)
retf
sub
push
and
xor
push
xor
jmp
sbb
es
test
das
loope
pop
(bad)
jl
addr16
(bad)
mov
mov
jmp
stos
popf
cmps
in
out
mov
adc
pop
aaa
push
cld
or
cdq
into
add
(bad)
cli
fisubr
cmp
cmps
jae
xor
pop
cs
leave
push
push
lock
in
cld
stos
pop
push
out
xor
mov
fcomp
cld
ss
ja
xor
ror
jp
outs
pop
cmp
mov
mov
add
(bad)
jmp
ja
ret
out
pop
cmp
lock
fs
adc
stos
mov
cmp
add
push
add
or
inc
jmp
mov
jecxz
lds
outs
xchg
pop
add
adc
int3
or
jmp
mov
aad
rcl
inc
loope
dec
cwde
pop
call
adc
loopne
mov
fbstp
(bad)
fcom
jge
retf
sbb
repnz
imul
cmp
or
retf
aaa
test
ds
push
call
je
xlat
mov
sbb
sbb
xor
dec
aas
test
xchg
sub
das
sub
mov
shl
out
scas
inc
aam
mov
adc
dec
out
dec
dec
mov
or
ror
add
mov
pop
push
mov
ffreep
dec
mov
mov
mov
fwait
dec
out
or
mov
push
pop
xchg
jp
clc
fld
movs
mov
cmp
adc
cmc
dec
add
daa
shr
or
test
sub
jbe
es
mov
fst
adc
inc
fcomp
cmp
mov
dec
push
(bad)
popf
rcr
jne
cmp
out
ins
pop
mov
and
inc
jb
int3
addr16
add
jp
and
fwait
xlat
inc
cmp
xchg
fimul
dec
inc
ret
pop
xchg
fisttp
pop
sub
dec
ret
mov
push
lods
push
xchg
pop
shr
jae
xor
fwait
icebp
fistp
retf
movs
nop
jp
dec
cmps
xchg
mov
cmp
jl
push
pop
adc
ins
inc
push
shl
out
mov
lea
lods
les
call
xchg
add
mov
mov
sbb
mov
das
pop
outs
push
mov
inc
dec
movs
clc
push
push
mov
scas
push
sbb
sbb
nop
dec
or
mov
fisubr
mov
(bad)
lods
inc
js
daa
lahf
dec
jo
(bad)
cwde
popa
aas
addr16
mov
das
cmps
lea
mov
add
repz
and
or
push
jae
fstp
inc
lds
lahf
or
mov
je
cmp
inc
jp
out
cwde
lods
or
xchg
sub
aas
xchg
repnz
adc
sbb
int
push
pop
jle
sahf
jmp
cmp
(bad)
ds
repnz
retf
and
xchg
sbb
ja
(bad)
ss
les
imul
add
iret
icebp
mov
stc
xor
sub
push
call
xchg
repz
push
mov
sar
fdivrp
ret
imul
push
dec
pop
xchg
lods
call
mov
xchg
int3
dec
mov
sub
aam
add
js
stos
mov
sub
jne
pop
sbb
js
test
mov
(bad)
mov
pop
adc
mov
scas
imul
retf
loope
mov
test
push
into
or
sub
(bad)
sti
movs
(bad)
push
punpckhwd
je
adc
int
xlat
daa
fcmovbe
mov
test
xchg
mov
jno
leave
cmp
scas
add
call
call
and
add
sub
gs
(bad)
jge
int3
add
repnz
(bad)
xor
cmp
in
and
int3
ss
stos
xor
mov
add
test
sub
jno
jns
xor
scas
mov
pushf
inc
es
push
jl
aaa
jg
into
inc
jne
push
xor
mov
mov
sar
jmp
out
fimul
or
or
stos
lea
call
or
mov
mov
jno
out
rcl
cmp
leave
stos
aaa
jle
outs
cmp
clc
or
push
leave
push
mov
lds
std
lahf
cmp
stos
push
stc
(bad)
cwde
and
repz
jnp
sti
outs
call
ss
(bad)
stos
hlt
ins
sbb
ret
je
and
ins
or
push
ret
cmps
sbb
pop
xchg
mov
(bad)
fdivr
pop
test
mov
outs
(bad)
push
out
in
adc
ja
mov
movs
adc
cdq
add
xchg
nop
imul
inc
or
add
xchg
ss
xor
push
mov
mov
push
cli
daa
rol
(bad)
push
fsub
and
push
xchg
sub
aad
inc
fwait
xor
call
call
ret
sub
push
adc
ret
fcomp
lahf
das
xchg
shl
jne
cmp
cmc
call
mov
adc
lahf
jb
inc
rcl
pop
lods
pop
hlt
out
cmp
int
cli
mov
jne
push
jns
aam
lock
shr
xchg
sbb
dec
push
add
adc
push
(bad)
sub
jbe
xor
mov
xor
je
jns
inc
pop
in
mov
dec
int3
imul
and
fwait
call
cmp
ins
adc
push
test
pop
imul
gs
pop
bnd
repz
ret
sbb
adc
fidivr
add
aam
pop
and
sbb
pop
(bad)
test
adc
in
dec
push
jbe
push
stos
ds
out
xchg
xchg
add
fidiv
sbb
imul
mov
jae
scas
push
fsubr
in
jnp
lahf
jl
mov
cmp
xchg
hlt
push
dec
mov
push
ja
leave
mov
inc
ds
jne
xchg
adc
aad
or
mov
les
aaa
or
mov
outs
ins
outs
xor
push
dec
sbb
call
jge
sti
loopne
and
outs
scas
cmps
jge
xchg
jo
inc
or
ficom
fstp
(bad)
xchg
sbb
sub
cld
ja
cmp
neg
pop
shl
or
or
push
fbstp
jmp
mov
jo
adc
cmp
cmp
fwait
inc
rol
sbb
jmp
mov
sar
fistp
hlt
out
(bad)
push
cdq
aas
push
out
outs
div
push
ss
and
in
sbb
or
sub
and
imul
scas
push
dec
xor
inc
daa
mov
je
(bad)
out
or
push
xchg
mov
inc
fistp
dec
push
aad
inc
sub
inc
out
call
sub
cmps
rcl
xchg
ret
sbb
or
dec
pushf
(bad)
ror
jb
inc
sub
xor
jo
mov
push
add
out
test
ds
or
ds
imul
in
test
(bad)
sub
dec
mov
lahf
mov
mov
or
shl
mov
adc
retf
jle
aas
xor
call
add
(bad)
fimul
setge
push
aas
out
cmp
mov
int
into
and
xchg
loopne
add
shl
jo
hlt
add
ret
fcomp
(bad)
cmp
cmps
push
xchg
mov
pop
rcl
jl
mov
mov
dec
jle
hlt
fcmovbe
pushf
xchg
sbb
and
arpl
dec
adc
or
jmp
adc
adc
jp
adc
fsub
fsubr
scas
jne
(bad)
fnsave
(bad)
jo
and
arpl
add
pop
fisubr
pop
in
or
fidivr
inc
rcl
cmps
mov
jp
pop
jae
call
sbb
mov
inc
ja
xchg
sti
enter
retf
clc
imul
lea
sbb
mov
fsubr
sahf
xchg
mov
dec
shl
or
push
(bad)
sbb
jae
jns
cmp
iret
clc
adc
cld
cmp
(bad)
push
or
stos
xchg
sbb
pop
push
jns
ror
push
push
fild
and
xor
jo
out
test
jbe
xor
inc
adc
inc
cld
call
in
popf
pop
jmp
addr16
pop
pop
xchg
add
bound
inc
rol
pop
mov
(bad)
adc
push
out
push
sbb
sub
pop
aam
into
xor
retf
cdq
in
xchg
outs
cli
mov
cmp
test
xchg
imul
(bad)
iret
and
jno
and
je
sub
es
repz
aam
add
and
int
lock
mov
inc
(bad)
mov
je
jnp
jns
clc
push
adc
out
xchg
sahf
and
test
push
rcl
xor
imul
stc
ins
xor
fwait
mov
outs
xchg
inc
xchg
out
jmp
icebp
dec
and
data16
dec
outs
ins
shl
mov
sbb
repz
pop
dec
repnz
js
shl
xor
into
retf
pop
mov
mov
xor
mov
ror
test
popf
sub
shr
mov
bound
mov
adc
ja
cmp
or
push
ds
repnz
xor
sti
call
dec
in
and
push
mov
mov
dec
addr16
jle
jl
cmps
xchg
xchg
xor
sbb
cdq
hlt
mov
out
je
pop
jnp
push
jmp
add
xor
cs
adc
loop
je
dec
cmovns
or
pop
in
in
dec
xor
inc
xor
loop
push
push
outs
clc
fwait
jne
or
ins
push
xor
rol
aaa
and
mov
jns
popf
jl
ret
enter
shr
in
pushf
jl
fdiv
sbb
inc
xchg
and
div
push
sahf
push
iret
push
cmp
popa
adc
shl
(bad)
nop
pushf
push
adc
outs
test
scas
dec
loop
add
pop
idiv
ja
or
out
(bad)
les
arpl
daa
mov
hlt
stos
icebp
pop
pop
add
cmps
leave
call
jmp
movs
je
or
iret
loope
xor
retf
sahf
(bad)
mov
popa
or
pop
jmp
xchg
movzx
test
int
movs
push
add
dec
stos
jg
das
sub
xchg
inc
dec
loope
adc
fld
inc
(bad)
inc
js
lock
fcomp
push
mov
sub
and
fnstcw
cwde
mov
movs
cld
(bad)
mov
dec
ret
pusha
(bad)
xor
rep
mov
cdq
push
jno
dec
cmp
mov
arpl
dec
mov
js
std
cwde
fbstp
add
jne
pop
xchg
enter
push
lods
pop
fild
mov
out
mov
in
cmc
clc
xor
lods
inc
xchg
jnp
ins
stos
inc
dec
pop
idiv
push
xor
punpckhwd
hlt
sbb
mov
repz
fild
cmps
sub
adc
out
dec
jo
fist
jle
jae
pop
sahf
pop
loopne
adc
retf
in
adc
shl
xchg
xchg
inc
nop
add
mov
fiadd
xor
cli
mov
sub
js
pop
in
es
sbb
sbb
adc
(bad)
cmp
push
pop
xchg
int3
or
mov
retf
add
daa
call
mov
jns
je
(bad)
adc
nop
dec
adc
ins
push
cdq
icebp
pushf
aad
xchg
mov
repnz
je
mov
ret
cdq
cmp
or
pop
sub
ficom
gs
sub
sbb
ja
movs
xchg
jecxz
lea
js
out
and
std
push
jmp
js
daa
cmc
cli
(bad)
cmp
dec
jns
cmp
cli
loop
test
arpl
stos
loopne
cmp
inc
and
lock
imul
mov
lds
pop
mov
mov
dec
and
sub
jmp
xchg
mov
push
pop
loopne
popf
jecxz
sub
mov
fsubp
test
lods
fs
mov
dec
mov
jg
nop
push
pop
mov
inc
xchg
push
mov
hlt
call
xor
adc
nop
loope
or
cmp
dec
xchg
mov
fidiv
or
and
aaa
aam
pop
mul
jno
ds
sbb
icebp
jae
repnz
scas
retf
dec
call
imul
dec
and
mov
in
cli
je
hlt
ins
cmp
popa
add
inc
xchg
pop
xor
ja
movs
mov
fbstp
int3
jno
pop
mov
sar
jmp
jo
ss
mov
les
into
mov
xor
retf
fdiv
addr16
pushf
call
ror
sub
out
and
fistp
add
dec
add
ret
inc
ss
push
xlat
mov
stos
call
ret
mov
lock
mov
push
mov
inc
xor
push
cmp
adc
pop
das
or
fistp
mov
das
shr
cmp
cmp
aad
jae
push
fwait
pusha
push
cwde
xchg
xor
jno
cmp
repz
or
scas
call
xchg
jge
stos
dec
int3
(bad)
cmp
in
cmp
jge
xchg
add
call
rep
sub
pop
pop
xor
cmp
stos
outs
xchg
jns
gs
ja
(bad)
xor
sub
je
imul
test
aam
xchg
es
dec
fdiv
dec
push
cmp
jmp
sbb
rcr
and
ret
es
mov
cdq
adc
in
test
push
and
nop
jg
sbb
push
cld
dec
aam
adc
ror
lods
pushf
mov
loope
lea
sub
adc
sub
(bad)
int3
push
aaa
pop
cmp
mov
jnp
pop
sbb
into
sub
test
or
outs
jno
popa
and
inc
jnp
mov
xor
mul
aas
sub
add
lahf
mov
push
mov
pop
aas
mov
out
nop
fwait
es
icebp
cmp
sbb
fimul
es
xchg
stc
push
sub
dec
push
inc
arpl
arpl
jg
push
add
adc
(bad)
rol
add
pop
fcomp
mov
fmul
pop
xor
jae
cs
adc
icebp
xchg
sub
fld
loope
push
sbb
pop
iret
enter
out
push
in
retf
leave
movs
and
sbb
add
fnstcw
sub
jmp
test
mov
xchg
pushf
inc
inc
adc
cmps
movs
xor
jl
jns
adc
xlat
sahf
ins
cmp
lahf
out
enter
das
fldenv
js
cld
(bad)
je
enter
push
xchg
xor
(bad)
mov
outs
test
pusha
lahf
push
push
fld
mov
call
and
xchg
(bad)
jge
aaa
pop
in
sub
xor
adc
inc
pop
mov
jge
cwde
repnz
xlat
bound
push
add
cli
cmp
mov
or
xor
pop
movs
push
repz
mov
aas
sbb
arpl
(bad)
sbb
(bad)
jmp
loope
pop
rcr
xor
lods
(bad)
fs
ror
cdq
xchg
not
sub
add
pusha
or
lea
and
mov
int3
pushf
stos
sub
adc
and
inc
loope
dec
mov
jne
jp
(bad)
scas
cmp
dec
mov
inc
sub
adc
imul
mov
adc
fimul
(bad)
pop
sbb
or
inc
and
jle
ins
add
push
cwde
lock
mov
lods
mov
push
dec
jp
scas
and
or
call
std
lods
fadd
fs
jns
aaa
icebp
stos
test
adc
sub
loope
adc
dec
repz
loope
ds
push
and
pusha
cmp
scas
test
outs
mov
loope
in
cmp
jbe
mov
cld
xchg
repz
ins
stos
add
cwde
aaa
cld
dec
add
test
xchg
inc
xchg
es
pop
movs
popf
inc
pop
ja
rol
ins
sbb
repz
mov
sub
cmp
nop
sti
adc
enter
mov
(bad)
push
scas
mov
pusha
imul
xchg
repnz
cld
xchg
cmovns
mov
cmp
daa
xchg
and
(bad)
jns
pop
mov
or
sbb
mov
lods
aas
iret
(bad)
aaa
xor
jbe
(bad)
mov
adc
jg
retf
fnstsw
mov
dec
fisub
xor
jg
xor
pusha
out
mov
(bad)
out
pop
push
inc
test
sub
es
xchg
loopne
or
jbe
mov
inc
or
ret
cmp
test
cmp
and
push
xchg
pushw
and
mov
mov
int
or
pop
lods
adc
adc
rcr
out
pop
mov
xchg
push
in
mov
fs
push
out
mov
mov
sti
jns
test
cmp
jno
mov
add
gs
das
icebp
adc
retf
mov
and
push
clc
cdq
iret
or
jmp
pushf
or
out
jmp
scas
mov
shl
popa
sub
retf
cmp
dec
push
shr
push
(bad)
stc
mov
add
push
retw
jmp
jl
loope
leave
loop
iret
and
or
ins
enter
jl
cmp
cmp
arpl
mov
and
sti
or
scas
ja
arpl
icebp
ret
mov
xor
aas
mov
jmp
xchg
aaa
icebp
xor
(bad)
push
mov
daa
pusha
(bad)
retf
push
call
jb
cdq
inc
pop
rcl
in
ins
shl
mov
sbb
or
inc
int
mov
add
and
add
sub
ret
jg
or
sub
aas
iret
mov
sahf
push
ror
jl
dec
dec
test
jns
pop
call
cmp
pop
leave
lods
jle
jl
add
enter
jge
inc
aam
repz
or
mov
push
mov
inc
mov
fimul
mov
repnz
leave
jno
or
icebp
adc
pop
fwait
pop
and
retf
out
imul
fs
lock
sub
dec
test
rcr
inc
jne
pop
sbb
and
inc
jnp
inc
out
cs
adc
dec
imul
ja
ins
push
mov
add
pop
push
das
sbb
mov
call
xchg
push
mov
xor
xchg
not
pop
imul
sbb
or
or
pop
cmp
dec
mov
inc
inc
mov
std
push
mov
mov
ror
(bad)
aas
mov
sub
sahf
xchg
xor
arpl
xor
jbe
retf
sbb
gs
es
aaa
cmc
adc
call
fsincos
scas
adc
in
push
(bad)
jle
or
leave
sub
gs
enter
lahf
(bad)
xor
xchg
sub
mov
inc
cmp
adc
push
hlt
dec
add
xor
push
xchg
cmps
shl
and
cmp
xchg
les
mov
sbb
dec
mov
shl
sti
pop
pop
or
ja
mov
nop
dec
push
push
frstor
cmp
pop
sti
imul
xor
mov
dec
repnz
push
mov
or
mov
mov
mov
xor
mov
ror
test
or
and
mov
mov
push
cmp
test
mov
sahf
aam
lods
mov
and
inc
shr
(bad)
(bad)
icebp
add
fild
addr16
sub
mov
pusha
scas
push
test
push
arpl
icebp
in
ror
in
setns
int3
call
jge
jmp
pop
cmp
and
inc
popa
and
mov
mov
and
pop
dec
std
ins
or
mov
fdivr
add
jae
(bad)
jmp
mov
repnz
adc
test
mov
adc
imul
ds
cmc
sbb
cmp
outs
pop
jg
sahf
mov
out
mov
mov
movs
daa
pop
push
or
inc
stc
xchg
adc
mov
push
cmp
aas
sub
fst
xor
stos
dec
xor
or
mov
aam
popf
jnp
jno
mov
cli
inc
dec
adc
dec
cmp
xor
fcomp
es
dec
inc
cmp
gs
sbb
or
iret
jnp
lea
pop
push
mov
pop
pop
push
add
iret
lahf
xor
pop
adc
sub
fisub
mov
jnp
add
movs
xor
out
enter
and
dec
push
in
test
mov
jne
inc
push
lahf
fadd
mov
pop
add
cmp
mov
imul
dec
push
or
sub
cmp
aam
lock
add
jecxz
fisttp
data16
push
out
mov
push
rcr
sub
mov
cmp
retf
cld
mov
jne
inc
jb
lods
jns
xchg
ficom
xchg
in
add
sahf
push
or
sbb
adc
push
cmp
pushf
scas
mov
pop
in
push
jne
jg
dec
jne
xor
vmaxsd
mov
std
inc
out
mov
out
pslld
ficomp
arpl
xchg
and
stc
lods
pop
fst
sub
push
in
xchg
xor
icebp
mov
int
xor
or
xchg
dec
push
outs
dec
jmp
cmp
rcl
out
cmc
or
ret
in
into
fst
fdiv
jbe
pop
popa
adc
sar
xor
test
add
or
dec
out
adc
jmp
xchg
movs
jle
inc
bound
jb
push
(bad)
js
enter
push
and
dec
xadd
mov
add
lahf
in
push
ins
cmps
ret
cvtpi2ps
fst
sub
or
repz
ret
mov
out
mov
(bad)
in
std
cmps
cmps
mov
fsubr
(bad)
mov
and
mov
das
cld
sbb
fsubr
add
in
ins
adc
pop
ret
mov
push
or
xchg
mov
mov
or
fld
sbb
int3
dec
sub
adc
push
cmp
cwde
xchg
and
fldcw
or
sub
stos
fucomip
mov
cmp
jno
out
jne
je
sub
fimul
push
pop
fwait
sti
mov
rol
pop
xchg
push
call
sub
sub
push
push
dec
push
das
mov
add
mov
ret
pop
cmp
pushf
push
daa
dec
xchg
clc
lahf
sar
stc
aam
push
imul
dec
push
jb
sar
idiv
jmp
or
add
pop
mov
loope
in
add
mov
lock
adc
push
xchg
xchg
call
inc
push
ins
pop
cmps
cmps
loopne
or
ret
sub
in
dec
push
cmp
fs
mov
call
pop
iret
mov
sub
mov
xor
cs
data16
out
jge
fcom
adc
test
cli
xor
cmc
movs
cmps
(bad)
(bad)
fstp
sahf
ss
and
xchg
scas
mov
mov
aaa
pop
clc
or
pop
sub
rcr
pop
pop
sub
dec
dec
jae
test
pop
(bad)
xor
fstp
in
out
popf
sar
sub
ror
sub
pusha
mov
dec
mov
mov
fwait
push
ds
cmp
shl
cmp
xchg
mov
dec
rol
nop
mov
cmps
add
mov
rcr
adc
cmp
leave
mov
lds
mov
aam
lds
and
mov
test
sbb
lds
lahf
(bad)
push
mov
ffree
jno
loope
stos
jmp
xor
data16
bound
(bad)
and
dec
cs
or
sbb
fs
inc
mov
scas
outs
and
adc
adc
jb
bound
xor
jmp
and
jne
xchg
mov
retf
lahf
mov
loopne
cmp
pop
test
fidiv
ss
std
pop
mov
loop
sub
sub
adc
cld
pushf
xchg
in
inc
int3
mov
sub
push
inc
loope
mov
add
sahf
cmp
aaa
xchg
sub
movs
jo
jl
jmp
cmc
adc
js
icebp
push
xchg
lods
jp
push
add
repnz
push
jnp
jo
fs
xor
xor
cwde
pop
sub
sbb
pusha
cmp
mov
or
mov
cmps
inc
push
add
imul
enter
adc
push
ins
ins
mov
xor
mov
mov
dec
pop
push
xchg
cmp
int3
sub
cld
xchg
ins
and
cdq
or
mov
ds
sbb
shr
mov
cmp
scas
cmps
iret
das
or
cs
jnp
adc
loopne
ins
add
mov
pop
xlat
mov
mov
es
imul
pop
xor
bswap
lahf
cmp
push
push
retf
add
fs
sti
cmp
cmp
pop
std
or
mov
or
clc
dec
xchg
jle
sub
ds
jg
inc
sbb
test
dec
xacquire
cli
sti
mov
xchg
or
aaa
adc
mov
daa
adc
popa
push
sar
or
rcr
push
(bad)
sub
(bad)
mov
push
dec
sbb
mov
push
retf
(bad)
std
push
out
js
mov
lock
mov
push
std
test
pop
out
jae
sar
inc
cmps
adc
dec
cs
in
or
fadd
mov
idiv
xchg
mov
pop
scas
jecxz
mov
in
cmp
retf
test
fistp
push
call
push
or
ror
(bad)
cmp
sbb
cmps
add
jle
xchg
ss
and
inc
cmp
(bad)
jnp
jecxz
inc
das
fisubr
mov
jae
jne
ror
(bad)
sbb
or
push
sub
mov
push
add
sar
js
lea
aad
(bad)
mov
adc
ror
mov
int
lea
gs
xchg
adc
or
lahf
dec
mov
dec
xchg
mov
scas
push
(bad)
xlat
adc
jl
mov
je
mov
ror
xor
nop
stos
test
jmp
push
sar
mov
mov
call
jmp
fucom
ret
jmp
jbe
jl
lock
adc
mov
test
adc
int3
sub
dec
ret
mov
jge
push
jb
adc
pop
dec
movs
stos
jbe
loopne
fnstenv
shl
ror
cmp
les
call
inc
jno
lahf
sub
test
aaa
mov
xchg
or
xchg
retf
dec
fs
test
or
dec
cs
sar
xchg
xor
mov
out
xlat
vunpckhpd
pop
test
sbb
rcr
and
lds
xchg
fimul
dec
add
push
mov
loop
inc
lods
sub
jne
sbb
jl
jle
cwde
xchg
lods
pop
dec
or
fwait
sbb
daa
mov
imul
lahf
sahf
xlat
mul
inc
push
dec
cmp
sub
pop
jge
push
(bad)
jmp
ret
pusha
imul
sahf
or
fcomp
mov
imul
xchg
out
cmps
mov
push
xchg
jmp
mov
mov
popf
fild
out
stc
xor
cmp
fdivr
lock
aad
shl
cwde
mov
int3
sbb
or
sbb
dec
(bad)
sub
sub
ins
js
xchg
xor
std
pop
mov
cmp
adc
mov
ret
pop
repz
xchg
aam
xchg
mov
sub
fld
sbb
ins
dec
pusha
nop
(bad)
cmp
in
addps
cmps
das
jl
(bad)
mov
push
arpl
push
mov
push
sbb
dec
sbb
daa
nop
inc
adc
and
ret
outs
aas
movs
test
push
pusha
jmp
lods
sub
add
ret
and
push
jbe
mov
mov
fdiv
test
icebp
inc
xor
cmp
sub
fstp
bound
test
adc
or
(bad)
adc
jmp
js
loopne
sbb
dec
fsubr
mov
gs
(bad)
ss
lock
movs
outs
xchg
cmp
stc
(bad)
ins
mov
retf
jge
dec
push
mov
into
test
jns
movs
pushf
adc
sub
movs
dec
xor
in
les
pop
and
dec
sub
dec
pop
fmul
cmp
jne
and
push
lock
fadd
cmp
icebp
leave
adc
mov
xlat
dec
imul
mov
mov
add
ja
pop
hlt
arpl
xor
cmps
xlat
stos
and
rcl
imul
mov
and
out
fdiv
pop
cmp
cmp
cmp
fucomi
icebp
out
pop
fadd
pop
inc
popa
adc
test
movs
fdivr
call
pop
adc
sti
pop
xchg
loopne
dec
imul
add
cmp
push
int3
mov
fwait
push
xchg
fbld
fsub
ret
xchg
call
inc
rcr
fistp
fisttp
leave
loopne
mov
cld
push
sar
push
adc
mov
jle
sub
shl
arpl
push
stos
ret
mov
pusha
mov
pop
dec
xor
popa
cwde
inc
sub
sub
leave
mov
lock
in
mov
sete
cmps
cs
mov
ins
jg
movs
push
xor
lds
jno
and
fcomip
adc
ret
cmps
scas
or
in
sbb
cdq
and
xchg
in
sub
xchg
out
and
push
xor
dec
rcl
push
xor
add
xor
jo
or
stos
jmp
cmp
test
iret
inc
jg
dec
mov
stc
mul
nop
inc
shr
dec
push
dec
cwde
mov
fisttp
out
mov
cmc
xchg
mov
mov
add
jmp
xchg
jnp
or
outs
loopne
push
scas
rcl
cmp
sti
or
retf
or
in
inc
sub
mov
das
push
stos
aas
add
pop
test
sbb
test
pop
into
ds
inc
aaa
cs
mov
sub
and
and
(bad)
xchg
sar
aas
dec
inc
push
std
xor
into
sbb
pop
and
or
stos
addr16
jns
pop
pop
outs
mov
call
sub
repnz
dec
fwait
cmps
data16
cwde
cmp
mov
rcl
push
in
mov
jae
outs
push
and
or
push
(bad)
out
fisttp
out
push
cmp
or
scas
stos
pop
mov
mov
pop
inc
mov
cli
mov
repz
mov
mov
push
jbe
mov
addr16
int
sbb
and
jle
mov
and
imul
retf
repnz
xchg
pop
fild
add
in
jl
sub
aam
or
jmp
and
dec
xchg
or
out
fs
lods
push
ror
jae
adc
mov
mov
mov
pop
scas
outs
inc
dec
sub
add
sub
mov
inc
pushf
and
shr
ret
daa
aas
dec
xchg
mov
hlt
aam
adc
mov
in
imul
call
inc
xlat
cmp
add
in
inc
outs
retf
fdivr
ins
add
xor
shr
test
scas
sbb
(bad)
in
ds
push
sbb
fwait
pop
mov
aam
nop
std
outs
inc
iret
jno
mov
or
dec
stos
jle
into
cmp
push
pusha
xor
add
cmc
sbb
or
dec
scas
dec
or
pop
dec
pop
mov
pop
push
add
div
fwait
push
(bad)
ss
sbb
ins
nop
and
bound
out
cs
mov
jmp
out
lahf
outs
sbb
sar
rcl
popa
stos
shr
(bad)
das
cdq
dec
jnp
gs
pop
inc
adc
and
movs
mov
cdq
push
mov
mov
inc
and
outs
ror
popf
scas
ds
sbb
mov
cmp
jne
and
or
xor
nop
pop
pop
jno
(bad)
movs
jl
cmp
fsubr
cmp
push
(bad)
imul
mov
into
js
add
cmp
mov
inc
popf
retf
push
fisubr
and
xchg
mov
cmp
aad
(bad)
jae
outs
adc
jnp
stc
inc
or
jle
mov
arpl
in
sbb
rol
sbb
in
mov
inc
adc
mov
sti
bound
js
cmp
(bad)
jo
mov
arpl
fld
bndstx
dec
int3
lods
aas
jns
in
out
popa
ins
cmp
xchg
ins
pop
icebp
inc
and
jle
bound
push
inc
adc
or
fwait
sbb
int
lods
add
mov
lods
retf
retf
aaa
adc
inc
or
pop
jp
inc
aas
mov
mov
shl
arpl
rcl
aas
cmps
lods
or
push
fucomip
test
gs
mov
aas
scas
jmp
jbe
inc
nop
sti
lea
pop
inc
iret
dec
push
aad
pop
mov
jge
lds
adc
rcl
jl
or
ins
sub
fisub
ret
call
pop
pop
pop
mov
push
test
mov
inc
fcom
add
push
adc
xlat
jbe
ds
(bad)
mov
adc
cmps
sbb
aaa
ja
fcom
fldln2
mov
pop
hlt
ret
mov
lock
xchg
in
shl
inc
loopne
ins
add
inc
cs
mov
xchg
pop
int
sbb
clc
cmp
cmps
scas
xchg
mov
add
pop
cmps
xchg
jp
out
sub
push
and
(bad)
xor
mov
jecxz
fldenv
sbb
xchg
mov
xor
and
aam
les
retf
repz
arpl
(bad)
xor
mov
mov
cs
pusha
in
lods
pushf
xchg
mov
or
push
mov
xchg
jmp
sub
popf
mov
add
shr
retf
out
nop
ficom
rcr
add
fwait
mov
xchg
inc
adc
aaa
mov
repnz
push
cmp
int3
cld
stos
test
fsub
repz
dec
out
mov
std
mov
ret
adc
adc
xor
imul
arpl
cmps
push
cmps
xchg
inc
leave
jmp
stos
cwde
pop
stos
test
cmp
xchg
stos
xor
mov
push
ds
inc
je
pop
loopne
icebp
ret
push
daa
fst
enter
or
push
pop
pop
mov
movs
fist
stos
loopne
xor
(bad)
inc
push
mov
dec
in
cld
cmp
jg
dec
ins
shl
fnstcw
std
sbb
pop
into
call
lock
xchg
inc
add
(bad)
int
inc
pop
pop
jg
or
sub
clc
sar
jmp
in
jge
test
xchg
int
push
xor
test
call
or
adc
push
xchg
push
inc
mov
cmc
loope
jno
test
adc
ja
adc
mov
out
cmps
pop
mov
pop
sbb
sub
xchg
stos
xor
out
daa
or
in
push
jmp
loop
ins
xchg
xchg
sahf
jno
mov
push
cmc
mov
mov
cmp
movs
pop
sub
jle
call
shl
adc
aas
(bad)
sub
mov
and
mov
fst
ficomp
jns
jo
mov
add
add
and
jle
adc
rcl
or
add
push
imul
mov
ins
stc
or
fisttp
dec
cdq
and
mov
pop
jl
jbe
sbb
inc
sub
sbb
and
push
mov
mov
mov
push
lahf
stos
stc
gs
cmc
outs
iret
dec
jle
xchg
inc
movs
icebp
jne
and
cdq
loope
fsubr
aad
out
bound
imul
popf
movs
ret
stos
jl
push
add
(bad)
imul
inc
cmps
xchg
imul
push
test
push
ins
push
fisub
mov
loope
dec
adc
sbb
add
inc
sar
outs
sub
and
sar
inc
cmp
add
imul
fs
adc
fdiv
adc
pop
lds
cmp
loope
jo
mov
push
fdiv
data16
jb
iret
dec
xor
pop
pop
push
ins
pop
into
lods
jo
leave
mov
je
xchg
or
leave
cmp
mov
dec
cmp
push
ds
cmc
(bad)
add
int
fild
cdq
retf
cs
pop
or
and
dec
jl
and
mov
stos
cmp
test
loop
jg
or
sbb
mov
(bad)
adc
jns
mov
popa
xchg
aas
dec
pop
jbe
js
and
fs
jecxz
mov
jmp
and
movs
pop
mov
pop
xchg
mov
xor
cli
jbe
dec
test
outs
pop
jmp
(bad)
(bad)
aad
scas
dec
fstp
std
aaa
sub
in
mov
cmp
jbe
mov
or
ins
adc
into
not
loope
dec
mov
aas
xchg
add
int3
and
leave
pusha
stos
fcmovu
cmp
mov
or
add
shr
dec
fistp
das
xchg
rcr
cmp
pop
sbb
mov
push
dec
dec
add
scas
cmp
in
cmps
inc
add
mov
push
xor
aaa
sbb
dec
xchg
mov
or
fld
(bad)
xor
jo
cld
mov
loop
or
xchg
xchg
gs
adc
or
mov
movs
(bad)
or
push
xor
inc
push
in
in
mov
or
scas
fcomip
mov
cmps
cmp
mov
scas
idiv
inc
jmp
mov
push
je
inc
test
push
aam
mov
jp
fistp
dec
sbb
clc
jecxz
test
js
inc
aas
cld
lds
sub
inc
setae
repz
enter
mov
xor
pop
inc
loop
sbb
les
fidiv
push
xchg
fld
inc
jns
aaa
cwde
add
or
call
and
xor
push
and
pop
ficom
mov
or
shl
adc
adc
cwde
rol
enter
mov
aad
dec
fld
jae
xor
jnp
push
inc
sub
dec
fwait
and
out
ss
into
enter
rcl
and
rol
sub
pop
test
outs
sahf
arpl
pop
(bad)
test
jns
scas
(bad)
fcmovnu
addr16
jge
xchg
jns
jge
shr
pop
mov
out
dec
mov
jae
jbe
call
sahf
(bad)
sub
fbstp
cmp
mov
xor
out
fldenv
inc
sbb
mov
jo
sahf
pop
xchg
cdq
add
nop
fisubr
fcmove
cdq
jnp
out
pop
rol
mov
cli
out
and
mov
cmp
shr
pop
fmul
ss
or
fimul
mov
push
xchg
fldenv
ins
fisttp
(bad)
ins
pop
enter
imul
sbb
and
stc
lods
out
pop
test
fbld
fcmovnb
cmps
cwde
or
retf
pop
xor
pxor
daa
xchg
stos
and
js
cmp
and
jmp
mov
das
call
ficomp
mov
loop
pop
loope
scas
maskmovq
test
rcr
or
xchg
jns
push
js
lock
jp
jg
out
fst
push
mov
adc
stc
shr
mov
cmp
div
sbb
mov
push
pop
inc
je
xor
in
fsub
mov
shr
mov
sub
or
outs
(bad)
mov
sahf
jae
mov
inc
in
popf
cmp
hlt
imul
xor
sbb
push
fmul
inc
inc
fimul
(bad)
test
ins
sbb
retf
inc
xlat
pop
pop
xor
jne
pop
test
stos
test
ror
aad
jp
retf
push
or
std
mov
loope
inc
inc
pop
xchg
mov
addr16
pop
xchg
cmp
sahf
pop
and
cmp
add
lods
xchg
outs
xor
int
mov
dec
pop
es
adc
addr16
jp
(bad)
mov
ins
icebp
enter
push
rcr
data16
pop
sahf
cmp
movs
sar
pop
dec
pusha
mov
xor
inc
mov
add
cmc
push
add
sbb
xlat
imul
and
and
fbld
(bad)
call
mov
pushaw
mov
mov
adc
add
aaa
mov
mov
test
push
rol
(bad)
cmp
push
mov
push
xor
call
inc
aaa
push
cmc
shl
mov
sub
in
or
fidiv
jmp
std
cmp
and
sbb
mov
adc
and
mov
mov
scas
lock
sahf
mov
xor
sbb
add
leave
movs
(bad)
mov
add
push
pop
idiv
stc
cmp
adc
shl
aam
and
bound
pop
and
ins
jmp
jnp
xchg
in
jno
mov
fisubr
out
aam
mov
pop
inc
mov
sar
sbb
push
aam
push
jnp
fcmovnb
imul
mov
mov
lods
test
not
rcr
dec
mov
das
jg
repnz
mov
daa
inc
(bad)
jne
icebp
sub
aad
dec
cmp
xor
out
pushf
sub
push
aad
and
test
cdq
jp
mov
call
pop
fs
stc
repnz
iret
xor
fwait
sub
mov
rcl
jle
(bad)
neg
pushf
ds
movs
int
retf
pop
and
adc
xor
pusha
cmp
dec
jae
mov
nop
(bad)
shl
cmp
(bad)
in
push
mov
cmps
sbb
fstp
jae
add
test
scas
mov
scas
ja
adc
inc
outs
xlat
aam
mov
mov
jbe
pop
mov
fimul
sub
xchg
fdiv
pop
shl
ss
xchg
movs
in
cmp
aad
rcl
fldenv
xor
mov
popf
dec
ret
mov
aaa
cld
xchg
sub
ss
or
into
push
addr16
pop
movs
add
adc
push
jae
xchg
ror
ins
ficomp
push
sbb
repnz
in
push
mov
ins
sbb
pop
dec
dec
pop
lock
pushw
push
ret
mov
scas
push
or
int3
scas
mov
dec
outs
mov
dec
adc
push
es
mov
or
call
sahf
(bad)
out
or
in
and
imul
xor
dec
push
sub
icebp
jae
iret
adc
xchg
aad
sbb
inc
fadd
jae
pop
inc
mov
jbe
js
outs
retf
jge
dec
cmp
sti
aaa
pop
out
dec
movs
(bad)
and
xchg
js
mov
mov
cmp
lods
aas
or
shl
jb
out
(bad)
push
(bad)
sbb
xor
adc
imul
and
(bad)
inc
or
adc
sbb
gs
dec
outs
mov
int3
loop
or
(bad)
shl
add
sar
aas
inc
lock
sbb
jmp
push
fcomp
inc
sub
inc
xor
xor
dec
popa
adc
rcl
mov
dec
leave
call
mov
sar
xor
scas
shr
outs
dec
jb
int3
pop
jle
push
pop
pop
fadd
(bad)
sar
aam
addr16
cmp
test
sbb
pusha
je
pop
outs
fnsave
out
ins
pop
hlt
jl
push
mov
repnz
xor
dec
sbb
inc
call
ds
sbb
or
repnz
push
lea
(bad)
cmp
adc
lods
repnz
cwde
or
(bad)
mov
test
adc
mov
aad
cmc
lods
add
sbb
push
sub
pop
mov
inc
jmp
jecxz
retf
jno
repz
pop
jl
xchg
push
fld
shr
mov
or
cld
mov
sti
jg
or
jmp
add
add
outs
into
xchg
les
inc
jmp
add
data16
xchg
mov
sti
scas
shl
cmp
fwait
je
nop
mov
pop
cmps
iret
mov
arpl
sbb
push
mov
pop
fnstcw
mov
sub
xor
xor
jbe
inc
sti
jne
cmp
ret
adc
adc
or
test
fistp
jmp
mov
sahf
repz
cdq
inc
inc
jno
fwait
cmc
sub
stos
xchg
cdq
jno
retf
dec
aaa
or
add
int3
mov
cmp
push
xchg
adc
cmps
or
leave
out
std
mov
xor
repz
sub
in
out
movs
jle
push
jae
mov
hlt
cmp
sbb
imul
inc
mov
or
std
xor
xchg
and
out
and
cmp
enter
add
mov
jg
ret
cmc
and
scas
in
push
xchg
ret
jo
mov
lods
add
fmul
arpl
jmp
xor
cmp
push
std
lock
or
and
jbe
jne
dec
std
iret
mov
sar
inc
mov
into
rcl
rcr
das
cmps
daa
addr16
xor
jge
mov
mov
mov
in
inc
mov
inc
xchg
rcr
ja
cwde
xchg
sbb
repz
inc
push
xor
jo
push
push
(bad)
pop
int3
add
jae
xor
pop
jns
and
sbb
stos
mov
add
cmp
not
sub
les
cmp
mov
xchg
add
sbb
add
mov
xor
mov
imul
in
stos
mov
mov
leave
out
add
pop
dec
pushf
out
cld
ds
rol
xchg
xchg
and
and
push
test
in
test
add
lods
clc
cdq
push
sub
xor
dec
test
aaa
cwde
sub
cwde
in
call
and
cmp
adc
movs
hlt
and
add
push
test
mul
loop
pushf
pop
(bad)
jge
mov
and
xor
fisttp
daa
popa
call
rcl
mov
ins
out
sub
cmc
xchg
fisubr
inc
sti
and
shl
nop
xlat
movs
mov
addr16
ss
xchg
ins
add
mov
cmc
inc
call
int
xchg
mov
cmp
sbb
les
(bad)
sbb
je
or
es
cli
call
sbb
mov
movs
imul
lock
xchg
sub
xor
mov
add
push
scas
lds
dec
sbb
aas
xchg
sub
mov
loopne
xchg
and
pop
das
jmp
xor
mov
mov
retf
sbb
dec
std
loope
movs
imul
mov
add
or
cmp
loopne
dec
xchg
sub
mov
jmp
adc
sub
xchg
ja
add
in
js
mov
or
jnp
icebp
cs
rcl
aas
mov
rcl
cmp
outs
mov
dec
or
into
and
ins
aam
arpl
xchg
idiv
jno
(bad)
fwait
iret
les
and
mov
lahf
popf
pusha
or
into
iret
dec
imul
sbb
sbb
enter
and
dec
dec
scas
jmp
xchg
clc
mov
loop
pushf
xchg
inc
push
mov
gs
sub
sti
and
push
fsubr
cmps
addr16
test
dec
push
cmc
sbb
and
inc
push
shr
loop
retf
sub
jmp
push
add
retf
pop
ja
loopne
mov
aam
je
sbb
push
je
movs
rol
adc
sahf
and
call
jae
out
shr
sub
or
neg
ret
jge
lods
daa
cs
dec
adc
ds
(bad)
pop
mov
xor
aam
mov
inc
mov
stos
(bad)
out
(bad)
test
jne
sub
push
jnp
dec
cmp
mov
and
daa
adc
in
add
mov
mov
daa
jbe
mov
jecxz
cmp
xchg
add
push
ds
shl
sar
frstor
mov
lods
jb
mov
mov
ins
pop
and
popf
jno
jnp
out
pop
xlat
lea
in
and
or
adc
jmp
mov
cmp
push
push
addr16
add
mov
fbstp
call
or
xchg
in
push
or
dec
icebp
xor
ror
jnp
mov
(bad)
pop
icebp
adc
push
shr
mov
shr
mov
sub
sub
add
mov
movs
adc
pop
xchg
loope
daa
pop
mov
call
mov
(bad)
stc
loope
mov
mov
mov
aad
sbb
inc
(bad)
sti
jb
add
add
aas
loop
idiv
lock
cs
xchg
js
in
push
(bad)
shl
mov
fisub
adc
bound
push
mov
sbb
fmul
(bad)
das
imul
popa
mov
xor
lahf
fsubr
(bad)
sub
mov
test
dec
retf
es
je
enter
les
xchg
pop
push
or
jno
pop
inc
jl
lock
into
pop
or
inc
and
mov
mov
dec
sbb
ins
mov
fdivr
xchg
and
ins
add
mov
icebp
int3
fimul
adc
adc
gs
xlat
push
fs
jp
rcr
test
xchg
pop
hlt
mov
push
jge
repnz
neg
adc
bound
mov
xchg
mov
jmp
mov
inc
cmp
and
push
test
mov
sub
xchg
in
dec
loope
sti
xchg
retf
inc
lock
ins
lods
mov
aad
mov
pop
cmp
pop
pop
hlt
int
xchg
aaa
pop
cs
adc
mov
sbb
pop
fsubr
cmp
es
push
pop
dec
cmp
push
xchg
add
cs
aad
adc
xchg
or
(bad)
mov
inc
mov
test
sub
xor
push
jbe
jno
inc
push
or
(bad)
fidiv
ins
dec
or
push
(bad)
lahf
and
adc
jg
or
pop
ins
and
xor
dec
xchg
mov
and
ins
xor
inc
retf
mov
stos
jecxz
rcr
fidivr
jge
push
rol
clc
loope
outs
jo
xor
cdq
pusha
lods
outs
imul
(bad)
aas
xor
jl
and
pop
adc
das
shl
mul
cmp
jmp
(bad)
inc
xchg
inc
mov
dec
pop
jmp
cmp
sbb
xor
aaa
mov
mov
mov
sar
fsub
add
mov
std
jge
xor
fstp
inc
or
cmp
inc
dec
xor
das
idiv
pop
mov
or
out
xor
out
idiv
xchg
add
or
sub
stc
fsubr
sti
cmp
mov
fucomp
arpl
js
sbb
dec
cmp
push
stc
gs
xchg
or
mov
es
mov
rcl
inc
in
jle
mov
and
pop
ja
retf
add
push
push
jmp
and
inc
cwde
out
sbb
lock
daa
leave
aaa
imul
cmc
xchg
fistp
mov
xchg
retf
jg
add
mov
pop
adc
xor
pushf
fwait
iret
sar
mov
or
or
cwde
mov
mov
ret
adc
push
adc
inc
mov
cmp
pop
gs
jecxz
rdmsr
xlat
push
xor
mov
cmc
xchg
mov
mov
(bad)
add
push
xor
sub
sti
xor
scas
sar
pop
inc
jo
push
les
retf
sbb
add
das
test
ins
retf
pop
test
lock
in
int3
mov
lock
retf
test
push
sbb
outs
xor
shl
das
cmp
adc
(bad)
(bad)
jecxz
cdq
add
cmp
fnstsw
jmp
fcomp
das
jmp
cmp
inc
rcl
adc
retf
jp
inc
jmp
leave
loopne
mov
fld1
inc
adc
fdiv
adc
scas
sbb
push
dec
out
ins
inc
fnstsw
in
lds
sub
fadd
push
js
imul
jo
dec
cld
out
adc
shl
or
dec
aad
jge
jecxz
pop
adc
test
mov
lahf
sti
jbe
sar
sub
out
sub
fldenv
(bad)
aaa
or
cmps
repnz
adc
dec
pop
rcl
mov
xor
loopne
loope
sub
xor
retf
and
pop
inc
pusha
icebp
outs
test
cmps
test
push
mov
pop
or
pop
into
in
inc
pop
out
jmp
lahf
mov
xor
pop
xchg
lea
ret
stc
dec
stc
and
inc
sub
sub
mov
fs
sub
fwait
mov
mov
hlt
sbb
adc
and
and
dec
mov
pop
cmp
rcl
iret
outs
(bad)
jmp
dec
repz
jecxz
ins
inc
mov
or
inc
mov
xchg
push
das
or
ins
push
out
sub
pop
mov
pop
mov
jo
scas
fdiv
and
pop
aaa
jb
jecxz
pop
fucomi
mov
cmp
pusha
ins
cmp
push
inc
out
and
and
test
mov
out
(bad)
cmova
jmp
cmp
lahf
or
cmp
ror
lds
outs
dec
inc
xor
test
bound
std
adc
test
repnz
xor
out
and
mov
jp
or
lods
enter
call
pushf
mov
xor
mov
mov
repz
jb
nop
dec
aaa
addr16
stc
fisub
adc
int
fidiv
mov
mov
mov
maskmovq
test
test
shl
push
push
fucomip
jmp
int
mov
imul
iret
or
sbb
jmp
inc
push
jmp
dec
sahf
pusha
jle
sbb
iret
repnz
and
xchg
mov
sub
call
adc
push
ret
cmp
outs
retf
and
cwde
sub
add
mov
das
mov
mov
pop
cs
add
shl
mov
mov
dec
mov
jge
aad
lahf
xor
and
add
in
push
out
and
std
xchg
cmp
cmp
sub
xchg
out
ins
(bad)
lods
ret
in
imul
mov
xchg
xor
cmp
inc
fs
lock
(bad)
jmp
or
outs
in
call
dec
or
aam
arpl
mov
popf
sub
cmp
mov
stos
scas
fdiv
cmp
jo
gs
xchg
loop
fld
dec
rcr
push
out
push
or
sti
test
xor
pop
(bad)
push
clc
mov
das
push
cmps
push
call
in
cmp
cmp
mov
cmp
lea
cmp
sbb
fild
lock
xor
mov
pusha
js
cmp
iret
jbe
repnz
hlt
adc
mov
test
shl
retf
out
cli
cmp
adc
add
dec
sub
dec
push
mov
dec
pop
lea
in
test
add
cmp
and
mov
lds
(bad)
mov
pop
mov
pop
or
stos
dec
jle
adc
hlt
pop
stos
int
jg
jbe
cmp
aam
cmp
mov
mov
fcomp
xchg
mov
rol
cmp
sub
gs
jae
and
inc
cmp
mov
mov
aad
cmps
das
(bad)
call
repz
in
jmp
nop
rol
ja
pop
gs
mov
leave
xchg
fistp
dec
sbb
scas
mov
js
leave
ror
(bad)
cs
mov
dec
dec
jge
das
sti
inc
inc
je
and
pop
push
test
stos
mov
aas
push
jne
sbb
or
dec
add
addr16
xchg
test
jecxz
retf
aad
cmp
or
(bad)
mov
and
mov
stos
test
add
and
cmps
sbb
es
(bad)
pop
cmc
sahf
cli
shr
lahf
xchg
add
loopne
cmc
cmp
pop
retf
sub
dec
std
outs
sbb
adc
movs
mov
sbb
gs
loopne
jg
mov
fmul
add
xor
scas
outs
dec
in
xchg
add
dec
dec
adc
adc
jns
aas
cmp
out
dec
or
xor
sub
jns
in
sti
inc
stos
push
or
cld
cwde
loope
cmp
mov
mov
pop
icebp
cmc
hlt
ss
je
lahf
stc
(bad)
cdq
stos
out
or
inc
mov
inc
dec
jnp
mov
out
sbb
es
inc
nop
scas
dec
lock
mov
mov
pop
setle
sbb
xor
jnp
int
mov
fistp
inc
jne
adc
jg
ret
jl
add
jl
(bad)
clc
mov
out
inc
mov
fimul
dec
popa
cwde
adc
daa
ds
cli
mov
loop
lds
call
inc
enter
sar
mov
lea
(bad)
pop
add
push
adc
dec
add
cdq
jmp
(bad)
aas
cld
and
ret
xchg
cmp
out
pop
cmp
lahf
mov
xor
adc
idiv
mov
dec
(bad)
popa
lock
retf
mov
cs
(bad)
and
bound
cmps
add
lods
or
lds
push
test
loopne
mov
cmp
xlat
scas
pop
pushf
adc
jbe
push
push
stc
xchg
push
inc
pop
xchg
mov
inc
cmp
xchg
lock
sbb
inc
popa
rep
test
aaa
and
sub
push
cmps
test
imul
or
pusha
adc
push
jl
cs
popf
aam
fucomp
fiadd
jecxz
daa
pop
cwde
pushf
cmps
inc
xchg
(bad)
sar
jmp
mov
movs
dec
ret
push
push
(bad)
bound
push
aas
pop
add
(bad)
leave
mov
shl
mov
(bad)
into
movs
jmp
and
mov
mov
imul
xlat
pop
out
mov
jo
sub
push
pop
daa
(bad)
shl
stos
jecxz
mov
and
mov
or
add
and
call
jmp
xchg
sti
(bad)
in
and
scas
push
push
add
hlt
(bad)
pop
xchg
xor
xchg
addr16
shr
fmul
stc
fidiv
dec
cmp
cmp
push
int3
cmp
mov
jmp
(bad)
adc
pop
hlt
shl
fdivr
cmp
mov
jl
xchg
mov
and
jo
ficomp
inc
popa
and
retf
adc
xchg
leave
repnz
lods
hlt
test
retf
outs
dec
icebp
push
and
test
cmps
mov
jl
shr
mov
mov
sub
sbb
dec
jns
dec
jl
jp
inc
push
daa
push
xchg
inc
in
push
dec
and
cli
xchg
js
dec
imul
mov
shl
ja
mov
scas
aad
in
sar
cmp
xor
call
jno
(bad)
(bad)
into
leave
jb
stc
cmp
rcl
jg
repnz
test
add
add
push
aas
stos
inc
mov
mov
aas
(bad)
ja
in
outs
dec
mov
rol
stos
jge
jb
jb
xor
les
imul
in
pop
sub
dec
mov
in
int
sub
sbb
test
enter
jecxz
aas
dec
call
ret
cmps
movs
dec
cs
dec
pop
cmp
mov
add
lods
inc
mov
pop
xor
jmp
jg
test
push
pop
add
sub
movs
iret
into
les
lods
dec
sahf
xchg
or
in
inc
xor
jnp
aaa
jmp
mov
jmp
and
mov
and
or
mov
movs
cli
adc
repnz
jne
fistp
sub
xor
push
ret
in
sbb
paddusw
retf
xor
call
xchg
loopne
mov
fcom
or
jo
clc
(bad)
js
js
jmp
js
aas
pusha
inc
je
or
dec
retf
mov
push
jp
dec
cmp
outs
popa
add
jb
push
(bad)
call
cld
jmp
cmp
gs
or
fs
mov
fcmove
cmc
jecxz
or
pop
cdq
and
and
push
adc
xlat
out
add
ficomp
ins
inc
repnz
test
das
add
push
test
loop
inc
adc
mov
xchg
loope
arpl
ret
inc
pop
sbb
data16
push
sti
pusha
and
xchg
mov
dec
mov
sar
fsubr
jle
or
and
int
mov
in
movs
jnp
(bad)
(bad)
cmp
fs
dec
mov
cmp
fsub
xor
cs
cmp
cmp
xchg
ds
shl
push
test
jge
adc
or
xchg
out
ds
mov
adc
cmp
push
mov
pop
nop
cwde
pop
sub
sub
cwde
push
jp
jg
pop
sub
or
or
pop
cmps
sbb
sti
push
call
dec
xchg
enter
sub
inc
mov
cs
js
mov
xor
test
push
ins
jp
jmp
scas
mov
inc
sub
mov
popa
push
and
cmp
daa
nop
je
cwde
and
lock
je
aad
push
js
test
xchg
loop
mov
mov
jmp
outs
aam
movs
xchg
call
add
pop
jmp
ss
js
mov
or
les
xor
inc
test
mov
repnz
outs
or
mov
movs
retf
pop
fidiv
sar
pusha
inc
inc
or
mov
(bad)
adc
cmp
dec
ret
xchg
sbb
mov
jb
push
fadd
mov
mov
dec
cmp
push
mov
pop
popa
aam
repz
mov
rep
adc
xchg
add
pop
into
in
add
rcr
icebp
clc
mov
xchg
bound
movs
push
lods
mov
in
mov
push
push
loope
add
scas
jl
xor
mov
sub
mov
or
push
scas
scas
or
outs
mov
sbb
outs
and
inc
jle
pusha
test
adc
inc
push
dec
cmp
test
dec
push
aas
lods
imul
ins
movs
xchg
xchg
add
das
mov
inc
and
push
lods
das
push
inc
jne
pop
enter
(bad)
push
(bad)
sar
jmp
repz
jne
scas
and
mov
inc
(bad)
cdq
loopne
jge
cmp
adc
inc
out
loopne
sbb
imul
pop
ret
pusha
and
mov
jge
mov
mov
mov
out
inc
add
test
jmp
sub
imul
rol
adc
sbb
(bad)
sub
movs
mov
and
(bad)
ret
jo
fimul
test
fs
mov
pop
out
sub
es
out
lahf
(bad)
icebp
xor
inc
jmp
in
call
jno
bound
mov
mov
push
daa
fs
out
gs
pop
lea
jno
popa
or
xchg
out
fisttp
mov
mov
and
mov
sub
jns
or
bound
arpl
dec
popf
add
xchg
imul
jecxz
xchg
das
xor
cmc
push
cmc
dec
jns
mov
mov
lahf
ins
test
add
in
and
cmp
and
or
imul
imul
aaa
cmp
dec
scas
or
mov
add
cmp
mov
mov
pop
dec
mov
adc
mov
mov
dec
gs
test
pop
dec
scas
cmp
sbb
inc
xor
(bad)
mov
(bad)
mov
test
xor
inc
push
adc
pushf
ret
stos
inc
sub
mov
pop
mov
aam
mov
pusha
sbb
inc
mov
leave
xchg
dec
xor
sbb
dec
fiadd
mov
mov
pop
ja
mov
push
mov
push
mov
getsec
cmp
inc
sub
xchg
and
outs
and
sub
cs
repnz
mov
int3
or
cmp
rcl
push
adc
stc
add
lods
sub
(bad)
lock
or
sub
imul
imul
push
ins
(bad)
push
xor
pushf
and
pop
cmp
retf
into
fsub
inc
or
in
or
push
jmp
stos
cmp
cwde
jge
adc
ret
cmp
mov
jmp
or
(bad)
and
dec
jnp
add
das
or
sub
scas
mov
cmp
xchg
into
mov
imul
mov
jo
jge
and
scas
dec
lods
cmc
lods
xchg
mov
add
fisttp
stos
mov
cmove
js
dec
mov
les
cmp
add
nop
retf
std
test
sbb
(bad)
sbb
pop
xchg
mov
adc
inc
xor
adc
lahf
in
pop
sub
and
(bad)
or
xor
ja
sub
dec
stos
fidivr
jmp
xchg
mov
pushf
jb
add
cmp
xchg
ret
imul
pmullw
sbb
ins
push
mov
or
jbe
sbb
call
gs
ja
aas
or
mov
leave
xchg
scas
push
sbb
inc
fistp
mov
call
cmp
sbb
ins
pop
test
sub
mov
or
pop
pop
xchg
mov
cmp
adc
pop
fsub
scas
ret
lahf
and
dec
inc
leave
cmc
ins
or
loope
pop
jne
scas
nop
mov
imul
and
fild
sbb
repz
daa
or
push
add
repz
dec
fldcw
xchg
xor
inc
xor
aad
push
movs
mov
lds
pop
loope
(bad)
and
(bad)
gs
pop
in
int
cli
jns
lods
push
inc
sbb
xor
xchg
cs
mov
jmp
pushf
(bad)
fs
sub
pop
fcomip
mov
cmp
sbb
dec
stc
cld
push
jb
add
adc
push
jecxz
adc
lahf
mov
inc
mov
lods
inc
add
jmp
adc
push
stos
mov
inc
inc
xor
mov
push
mov
mov
(bad)
nop
lock
js
dec
sbb
mov
movs
bound
mov
fcomp
leave
cwde
lods
sar
outs
cmp
inc
push
rol
call
fwait
pop
jmp
jl
in
ror
call
push
jae
int3
test
mov
cmps
jae
push
xchg
xchg
icebp
std
sbb
daa
fimul
ja
push
cmp
rcl
imul
push
rcr
out
or
mov
lahf
inc
xor
cdq
lds
test
add
dec
push
or
xchg
push
mov
mov
jno
retf
mov
not
fstp
mov
mov
mov
adc
cs
xchg
or
mov
ins
(bad)
(bad)
retf
add
mov
fstp
push
sub
in
sbb
and
pop
jbe
sub
add
cmp
pop
fxch
pop
xchg
stc
inc
sub
mov
adc
fld
sub
cwde
cmps
jmp
xor
imul
push
or
jmp
inc
retf
cwde
push
les
ds
push
fcmovb
dec
push
jecxz
push
xlat
mov
or
adc
dec
sar
inc
stc
pop
and
inc
mov
je
(bad)
stc
(bad)
mov
test
add
aas
jmp
movs
xchg
mov
aad
std
sub
mov
pop
in
add
dec
mov
push
ss
fnstenv
pop
jp
outs
adc
(bad)
mov
div
push
jae
fidiv
push
mov
(bad)
xor
iret
mov
sbb
push
sub
xor
mov
mov
clc
jns
mov
mov
out
jg
xchg
pop
xor
retf
jbe
xchg
into
fidiv
sub
shr
(bad)
rcl
in
lods
inc
gs
mov
jl
sub
xchg
xchg
sbb
bound
rcr
ss
jle
mov
mov
sti
sbb
sbb
xlat
or
outs
cwde
fist
imul
inc
adc
adc
shl
fs
pop
sub
jle
dec
ret
add
xor
or
jmp
add
push
pop
cdq
dec
xor
pop
cmp
lds
bound
pusha
cmp
xor
pop
out
jo
in
pop
les
xchg
repnz
sub
lds
and
mov
sar
push
je
lods
pop
push
out
mov
cmc
call
fnstcw
loope
(bad)
stc
push
(bad)
pop
fsubr
xor
cmp
hlt
rol
mov
xor
mov
and
push
jae
pop
fistp
fmul
add
sahf
cli
cmp
push
or
sub
nop
cmp
sbb
mov
push
adc
and
push
add
adc
aam
in
push
sub
add
into
es
(bad)
(bad)
ins
scas
movs
mov
sub
lods
sub
push
in
cmc
jmp
push
and
pop
jecxz
mov
scas
adc
sti
out
in
movs
mov
cmp
ja
icebp
jp
clc
repnz
cmps
pop
xlat
mov
xor
pushf
inc
and
and
inc
adc
dec
adc
loope
or
fsub
and
dec
jl
ret
mov
inc
test
xor
(bad)
cs
ret
xchg
imul
dec
pushf
stos
pop
cmc
xchg
ret
icebp
xor
loop
adc
mov
(bad)
retf
xchg
mov
(bad)
xchg
and
cmc
mov
fwait
sub
sub
or
repnz
ror
aas
(bad)
loopne
pop
outs
and
sub
arpl
into
lods
ret
add
jle
xchg
popa
sub
cmc
(bad)
aas
push
mov
xor
fwait
jo
imul
jo
cmc
mov
adc
jmp
xchg
loopne
bound
inc
mov
adc
cld
jae
jnp
jge
adc
mov
mov
or
pop
aaa
(bad)
daa
(bad)
lock
mov
sbb
jmp
imul
dec
inc
ficom
fwait
adc
pop
(bad)
dec
jmp
ins
fs
stos
or
and
mov
in
jp
test
push
jg
xchg
lahf
test
mov
sahf
(bad)
pop
or
pop
push
jbe
jp
xor
cmc
sbb
loop
mov
clc
bound
jno
lods
std
sub
or
xchg
mov
xor
or
dec
in
sahf
or
dec
fsubr
add
mov
xchg
loop
rcr
pushf
mov
loop
adc
das
movs
sub
test
push
sbb
push
dec
pushf
(bad)
mov
pop
test
rol
std
push
dec
cdq
imul
jo
dec
test
ins
ret
push
(bad)
into
xor
out
nop
xchg
fadd
sbb
jno
jae
mov
mov
sub
push
push
hlt
inc
cmp
mov
dec
mov
or
sub
lds
cmps
retf
adc
outs
retf
stos
pop
or
xor
out
mov
addr16
cmp
or
ret
dec
mov
or
or
push
or
iret
inc
fs
movs
mov
mov
aam
mov
jp
pop
std
out
loopne
push
stos
dec
addr16
fdivr
dec
adc
xor
and
clc
stos
(bad)
test
sar
xchg
pop
sbb
pop
add
cmps
dec
adc
(bad)
adc
pop
push
stos
xchg
push
sbb
cmc
xchg
aaa
aad
adc
cmp
fnstcw
or
add
leave
jo
sbb
mov
ficom
sub
aaa
xchg
push
pop
xor
(bad)
mov
push
das
jecxz
cmp
icebp
mov
aam
cmp
pop
pop
cdq
cs
jge
and
das
cmp
ins
cwde
lock
sti
loop
add
cmc
rcr
fcomp
rcr
add
jecxz
mov
into
pop
pop
in
stos
out
add
sar
stos
pop
and
push
xor
outs
fsub
pop
sbb
(bad)
stc
push
xchg
fld
push
push
and
dec
lea
mov
jo
mov
imul
mov
jp
mov
jle
add
out
mov
mov
hlt
add
hlt
cmc
iret
add
std
jle
or
test
dec
test
cld
ret
aaa
push
xchg
test
inc
push
repnz
aas
jge
repnz
xor
(bad)
out
jl
addr16
scas
sti
sbb
es
arpl
inc
or
dec
lock
(bad)
mov
rcl
fisubr
adc
jp
into
or
lea
sar
adc
jecxz
stc
pop
sub
mov
inc
xor
cli
leave
adc
into
loope
aas
js
pop
jmp
push
int
mov
pop
jl
jo
xchg
ret
aam
call
adc
xchg
xchg
lock
xchg
jl
ffree
xor
mov
rol
in
and
jbe
outs
enter
push
arpl
jmp
and
push
dec
daa
pop
scas
jl
sbb
pop
(bad)
shl
cmp
shl
sbb
sub
jnp
sbb
mov
push
dec
loop
cli
adc
add
pop
sahf
cmps
iret
mov
(bad)
call
nop
pusha
fbld
sbb
in
jne
popa
enter
sub
rol
repz
jmp
jmp
push
or
jmp
cmps
push
cmp
outs
call
loop
mov
cld
sbb
aaa
sbb
dec
push
inc
aam
stc
movs
shl
mov
popa
out
or
cdq
or
nop
out
and
pop
jnp
lods
cmps
inc
out
adc
data16
dec
sbb
leave
retf
jge
sub
mov
jbe
jo
jmp
push
rcr
xchg
rol
inc
jno
gs
pop
inc
and
sbb
and
out
xlat
adc
xchg
fsubr
jbe
data16
gs
inc
and
push
mov
mov
dec
stc
jno
les
mov
adc
jo
mov
push
jo
or
pop
sub
call
push
inc
push
lea
fidivr
shr
dec
mov
bound
mov
and
sub
mov
mov
cli
outs
bound
lods
xor
enter
or
mov
imul
(bad)
xchg
sub
mov
adc
(bad)
pop
adc
int3
hlt
out
icebp
and
mov
fisubr
cld
or
int
test
mov
cmp
fs
adc
dec
mov
mov
xchg
cmc
or
inc
dec
imul
fidiv
pop
mov
iret
sbb
push
repz
aaa
xchg
push
xor
mov
scas
cmc
retf
and
popa
data16
mov
inc
cmc
jns
xchg
sti
mov
hlt
cmc
jno
push
adc
les
push
test
cmps
ins
and
xor
dec
shl
push
pusha
call
push
push
nop
lock
ucomiss
inc
call
loop
add
mov
and
lahf
cdq
mov
jb
mov
clc
hlt
mov
movs
and
dec
xor
mov
loopne
xchg
daa
ret
add
out
ins
xchg
lahf
pop
pop
or
cmps
xor
retf
cmp
arpl
mov
fwait
inc
out
lahf
gs
leave
loopne
cwde
xchg
rcl
dec
mov
adc
outs
adc
jecxz
push
xlat
lds
pop
mov
inc
in
xor
into
pop
and
leave
js
fdivr
push
and
inc
clc
pop
or
jns
(bad)
test
pop
outs
dec
adc
xchg
jo
call
enter
dec
mov
shl
cmp
ins
cld
sti
inc
int3
pop
adc
clc
mov
and
sub
mov
lods
fst
cmp
inc
aam
mov
mov
xor
jg
aam
repz
xchg
bound
push
sub
dec
mov
outs
and
lods
jl
push
add
les
sbb
sbb
repz
jae
sub
sbb
and
jecxz
dec
movs
jmp
movs
scas
idiv
dec
dec
icebp
bound
and
fdiv
pushf
jle
arpl
sbb
daa
mov
mov
adc
fmul
dec
test
cmps
jbe
movs
jo
neg
(bad)
hlt
test
shl
inc
repnz
cld
push
push
out
and
sbb
lds
jle
and
or
loopne
movs
or
fucom
dec
dec
dec
mov
cmp
push
xor
or
es
pop
xchg
xlat
les
(bad)
lahf
cmp
jmp
jp
cdq
add
add
add
aad
sbb
mov
hlt
loop
sub
cmps
xchg
mov
push
rcr
sbb
pop
jle
div
fidivr
adc
add
rol
and
retf
dec
clc
out
cmp
je
inc
gs
rol
in
lds
fcomi
dec
pop
movs
add
test
fist
inc
inc
neg
xchg
dec
cld
addr16
test
movs
mov
push
std
sbb
add
daa
and
inc
fiadd
enter
add
movs
out
retf
pop
lds
xchg
test
(bad)
repnz
cmps
in
mov
cmp
data16
in
movs
inc
stos
ja
sub
arpl
jmp
fistp
je
scas
pusha
out
movs
test
mov
sbb
popa
cmp
cmp
stos
je
out
fimul
mov
into
add
jae
jp
out
lods
pop
sar
jge
push
mov
push
mov
stc
xlat
hlt
hlt
fwait
dec
test
test
pop
cmps
or
inc
out
mov
inc
mov
and
jg
in
jg
test
xchg
mov
cld
pop
les
or
dec
jbe
ins
jnp
in
xor
mov
bound
sub
inc
dec
cmp
in
xchg
jns
sbb
add
dec
movs
repnz
(bad)
sub
iret
jae
or
push
scas
adc
lods
pop
push
stos
push
fild
jb
and
pop
aad
dec
call
loopne
or
mov
(bad)
je
das
(bad)
and
push
sahf
mov
fwait
cmps
pop
dec
pop
xor
mov
pop
mov
icebp
cmp
je
inc
daa
push
fistp
push
(bad)
cmp
and
or
sbb
push
aas
xchg
or
adc
and
jge
ret
es
retf
xor
jl
pop
cdq
add
adc
loope
adc
in
add
imul
(bad)
ror
out
in
aad
adc
sub
or
mov
in
js
dec
ret
jl
mov
pop
int3
test
outs
mov
(bad)
xchg
dec
jmp
mov
pushf
rdpmc
xor
sub
nop
fst
dec
xor
sbb
aaa
shl
pop
pop
xchg
shr
mov
sti
out
fcmovnu
pop
cdq
pop
popa
daa
dec
fild
xlat
stos
dec
in
jno
adc
sti
das
test
dec
in
sub
adc
mov
mov
ja
inc
mov
das
sub
mov
call
int
pop
mov
loop
mov
pop
daa
mov
lds
test
hlt
mov
aas
stos
ror
std
add
adc
clc
adc
les
inc
hlt
aaa
dec
ss
jns
shl
and
jmp
jecxz
cwde
dec
rol
out
getsec
stos
das
fcomp
mov
nop
retf
(bad)
iret
mov
ja
or
std
lods
sbb
sbb
sub
pop
xor
adc
inc
mov
jle
pop
cli
inc
pop
sbb
pop
shl
mov
cmp
(bad)
xchg
jecxz
stos
icebp
adc
dec
jae
pusha
loope
cmps
push
jo
cmp
fld
xchg
test
adc
mov
mov
sub
retf
or
es
inc
xchg
in
(bad)
pop
jecxz
or
dec
scas
mov
jb
add
retf
jne
stos
mov
mov
(bad)
aaa
aad
adc
push
lods
push
icebp
js
mov
and
xor
out
xor
xchg
add
push
and
jns
retf
add
cmp
sub
sub
adc
fsub
sbb
sub
pop
ret
sub
call
pushf
mov
test
or
cmp
ins
(bad)
mov
loopne
and
jle
hlt
mov
adc
scas
and
cdq
add
pop
sbb
push
ja
push
stc
(bad)
out
lds
gs
scas
or
es
int
jmp
xchg
mov
jo
ins
sub
push
or
push
xor
jbe
test
push
mov
or
and
lds
sbb
test
test
(bad)
dec
mov
jmp
enter
outs
xchg
rol
das
xchg
sbb
adc
jl
lahf
cmp
adc
sbb
js
in
neg
sbb
dec
imul
xchg
call
div
jbe
dec
stc
lock
es
(bad)
in
stc
ins
call
mov
push
or
mov
imul
ficom
mov
scas
add
cmc
test
cmps
lods
rol
and
clc
mov
mov
dec
xchg
push
stos
dec
stos
push
adc
mov
imul
jl
cmp
cmp
xor
dec
les
lock
jge
or
mov
cdq
int
jle
inc
dec
fcomp
int3
pop
xchg
iret
inc
jns
inc
fldenv
mov
loope
jne
pop
and
es
jbe
leave
repnz
adc
adc
arpl
jmp
jne
mov
popf
pop
ret
iret
xor
push
jge
cdq
or
dec
pop
movs
test
iret
mov
cwde
mov
add
jne
add
aaa
aaa
popa
inc
hlt
sbb
sbb
ja
xchg
sub
pusha
mov
mov
cmp
pop
mov
cs
sub
jp
ins
sub
es
mov
(bad)
cmp
test
pusha
push
sbb
sub
cmp
and
not
cmp
mov
cwde
adc
ins
(bad)
shr
inc
jmp
or
sbb
push
push
pop
or
stos
(bad)
xor
push
adc
jle
aad
xlat
fidivr
fsubr
adc
loopne
push
call
or
fwait
cli
ss
hlt
nop
and
cmps
xlat
dec
out
(bad)
cli
sub
imul
push
retf
(bad)
dec
dec
outs
mov
mov
in
mov
adc
mov
out
add
push
sub
int
fsub
fnstcw
loopne
sbb
fmul
inc
or
xchg
add
jmp
lea
fmul
push
push
or
stos
(bad)
(bad)
fcom
or
ds
push
aad
les
push
daa
or
push
ret
and
inc
retf
shl
xchg
pop
loope
jb
pop
outs
push
scas
sbb
mov
fisubr
stc
xlat
addr16
push
sub
adc
xchg
mov
dec
sub
(bad)
mov
mov
ds
in
jmp
adc
add
jb
in
out
pop
add
test
mov
lahf
movs
pop
sub
mov
lea
sbb
test
xchg
xor
test
xchg
add
fldenv
xchg
add
xlat
jmp
fiadd
aam
clc
push
adc
gs
cmp
ds
mov
jge
push
xchg
mov
call
imul
jnp
icebp
or
dec
inc
sbb
and
cmp
sub
iret
mov
xchg
movs
pop
pop
retf
leave
out
cmp
xchg
mov
mov
pop
inc
jmp
and
std
ret
(bad)
mov
pop
fisub
cmps
mov
cmp
xor
pop
stc
pop
mov
btr
sar
jecxz
sub
dec
sar
int
test
loop
aaa
movs
in
imul
pop
and
loope
lods
mov
push
lods
cmc
outs
ins
das
bound
out
xchg
mov
inc
jge
sub
or
mov
mov
jns
jnp
add
mov
inc
jno
cmps
push
sub
dec
fisub
push
add
sti
mov
loop
call
push
mov
sbb
xor
dec
sub
ret
cmc
adc
xor
icebp
push
fcmovu
mov
mov
fist
rol
dec
inc
jmp
call
retf
xor
pop
dec
test
and
imul
adc
sti
out
push
ss
jnp
in
sar
pop
mov
scas
push
jmp
dec
push
lods
cmp
out
and
in
adc
pop
or
sbb
clc
stos
lahf
sub
pushf
sub
mov
sbb
and
and
xchg
xor
(bad)
dec
loope
inc
es
or
stos
mov
lea
div
out
jbe
push
cli
jl
not
outs
fdivrp
xchg
test
mov
cmp
enter
stc
or
push
add
jg
sar
(bad)
repz
iret
jns
jae
aaa
sbb
xor
and
push
mov
lods
mov
cwde
adc
pop
jns
pop
mov
cli
in
and
mov
mov
push
into
imul
addr16
adc
push
mov
pop
icebp
inc
in
fstp
mov
jmp
ins
sub
xchg
mov
pop
pop
mov
sbb
fiadd
mov
push
jp
mov
jg
dec
dec
xchg
inc
push
mov
mov
mov
xchg
daa
les
inc
test
in
shr
dec
jbe
imul
(bad)
mov
cdq
hlt
xlat
push
test
jae
jne
push
retf
jbe
retfw
xchg
stc
out
(bad)
mov
inc
shl
push
sbb
lock
mov
or
cmp
xchg
loopne
cmps
adc
iret
inc
(bad)
int3
push
dec
mov
adc
sti
and
jmp
rol
xor
cwde
push
push
shl
or
pushf
stos
jb
inc
jg
(bad)
mov
pop
dec
sbb
jle
xchg
xlat
pop
and
pop
push
aaa
shl
(bad)
jb
aad
repz
push
push
inc
jbe
fimul
js
out
call
(bad)
fisttp
loopne
pop
cdq
pop
icebp
and
mov
fisubr
ror
lods
cwde
in
cmp
jo
dec
(bad)
nop
rcr
lahf
inc
nop
jns
shl
vaddps
das
rcl
lock
lds
iret
test
pushf
(bad)
inc
adc
dec
push
or
mov
add
mov
xor
jbe
jecxz
lahf
and
mov
sub
xchg
cmps
mov
ss
sti
pop
cmp
cs
std
add
push
or
and
das
mov
ja
xchg
cli
inc
jns
mov
int
and
int3
push
popa
mov
jne
mov
daa
mov
xor
cmp
shld
imul
(bad)
leave
pop
ins
push
js
adc
(bad)
jno
xchg
xor
push
enter
xchg
movs
push
dec
mov
fisub
and
jge
cdq
sahf
data16
iret
popa
mov
pop
movs
dec
in
stos
sub
push
out
loop
sub
sbb
aad
pop
cli
lods
add
sar
pop
lods
inc
jmp
cld
aam
addr16
pop
jle
xchg
jg
or
pop
dec
xchg
xchg
arpl
jno
stos
movs
es
cmp
dec
mov
mov
cmp
sbb
fs
and
enter
out
ds
inc
dec
jl
mov
push
(bad)
loop
add
out
fldcw
pusha
or
cmp
cs
and
xor
mov
mov
icebp
jno
ins
and
loop
mov
fmul
sbb
jl
sub
jae
retf
or
sbb
test
sbb
jp
mov
sbb
inc
div
repnz
stos
clc
jge
sbb
leave
xor
pop
test
mov
jg
mov
mov
outs
pushf
push
out
iret
push
sbb
or
les
loop
and
(bad)
push
bound
and
mov
cwde
push
cdq
mov
mov
(bad)
scas
xchg
cld
std
dec
push
aaa
adc
fwait
repnz
sub
xchg
cmp
in
cmp
push
xchg
dec
or
mov
push
push
sub
or
es
outs
cmp
into
fsubr
and
(bad)
(bad)
fidiv
cmp
adc
fwait
jp
movs
bound
call
jecxz
push
pop
xchg
clc
push
dec
in
xchg
js
lahf
in
inc
(bad)
outs
jno
shl
imul
sub
sub
shl
and
mov
bound
sbb
add
cmp
fwait
dec
add
movs
mov
push
jmp
or
jbe
test
shl
cmc
ret
leave
mov
pop
dec
mov
loopne
fxch
pop
jb
pop
call
mov
sub
push
test
cld
or
xchg
pop
add
mov
mov
fcomp
pop
lock
inc
popa
jbe
ja
or
pop
sub
jb
shl
cld
hlt
cmc
dec
pop
test
ds
mov
lods
scas
ror
jnp
loope
jge
lea
out
fwait
adc
mov
xchg
inc
push
cmp
(bad)
mov
bnd
xor
cmp
(bad)
repz
xchg
psllq
scas
shl
xchg
sbb
dec
outs
add
inc
add
test
test
movs
cmp
xchg
fcom
fdiv
lods
and
push
or
xchg
fdivr
mov
push
and
cmp
or
mov
sbb
inc
cmps
inc
aaa
jbe
inc
call
loope
mov
mov
or
jmp
push
fnstenv
stc
adc
lock
fdivr
dec
nop
jbe
not
sbb
pop
cmps
and
xor
mov
pop
icebp
xchg
push
jnp
jne
mov
outs
xchg
pop
icebp
sub
mov
jmp
dec
dec
jbe
dec
pop
mov
mov
xor
test
sbb
in
ret
pop
push
ins
out
ja
pusha
cli
iret
in
clc
add
mov
mul
leave
push
in
sbb
and
in
or
nop
push
enter
dec
inc
stos
jge
sub
mov
in
sbb
(bad)
test
outs
jmp
ja
sbb
jg
inc
and
enter
bnd
adc
jecxz
or
outs
xchg
and
xchg
pop
out
bound
xor
in
xchg
push
mov
dec
xchg
push
mov
jbe
cli
and
cmps
push
stc
pop
scas
push
sar
pop
push
sbb
push
pushf
lock
inc
adc
neg
arpl
sbb
xchg
out
inc
dec
xlat
cwde
(bad)
repz
retf
ds
or
inc
mov
add
movs
or
outs
or
sbb
fwait
or
hlt
inc
mov
loope
(bad)
loope
faddp
aam
loop
mov
adc
in
add
dec
jle
fidivr
cmp
or
mov
and
jns
(bad)
cmp
mov
inc
ins
add
loopne
iret
jbe
mov
retf
arpl
test
cdq
fld
jbe
inc
cmc
mov
ret
and
rcl
nop
bswap
jecxz
xor
sub
cmp
mov
dec
cmp
mov
cmp
mov
or
mov
and
cmc
out
mov
cmp
lods
call
mov
push
gs
push
pop
sub
or
mov
or
sbb
inc
shl
fcmovu
cs
mov
fiadd
dec
and
jne
loope
pop
lods
jecxz
xchg
out
aam
mov
push
div
not
jecxz
mov
xchg
icebp
mov
outs
jecxz
mov
stos
mov
jmp
jb
cmp
mov
or
(bad)
lods
nop
ror
cld
(bad)
push
sbb
push
cli
inc
inc
and
sbb
xchg
out
xor
dec
in
pop
(bad)
cmp
jb
imul
push
xlat
and
jae
dec
gs
push
sub
neg
cmp
js
inc
aam
jmp
pop
push
cli
cmc
loope
test
add
lock
test
in
test
xor
push
xor
push
inc
retf
aad
push
jne
cmp
out
xor
fisttp
outs
and
test
jns
scas
cmps
arpl
inc
cmc
idiv
daa
ficomp
sub
aad
sub
or
int
mov
loope
aaa
pop
cmp
das
mov
and
ja
sti
je
sub
dec
in
push
fwait
push
or
mov
repnz
dec
call
sar
mov
xchg
lods
or
retf
push
mov
popa
ins
ja
scas
push
push
dec
sub
jg
lea
test
cmp
lods
aad
in
stos
retf
es
jl
repz
mov
dec
test
and
ins
jmp
push
cdq
das
dec
cmp
jns
sbb
cld
scas
or
neg
mov
imul
xor
jl
push
sar
and
fisubr
stos
mov
sar
sbb
test
fnstenv
add
test
mov
sub
sub
in
push
je
push
xor
or
mov
lds
pop
mov
bound
xchg
fdiv
call
add
mov
inc
jecxz
pusha
lea
pop
pop
ss
cld
in
loop
data16
sbb
xor
lods
jecxz
pop
ins
sbb
lods
jl
sti
sti
push
mov
fidiv
fs
inc
call
out
sub
jmp
cmp
in
push
xchg
ret
mov
iret
jl
psrlw
mov
es
sbb
and
mov
enter
inc
cwde
cld
scas
jno
xchg
dec
push
sbb
xor
mov
push
repz
(bad)
mov
xchg
sbb
inc
dec
cwde
or
add
inc
add
xchg
sub
xlat
jbe
fnstsw
in
add
rol
inc
add
xchg
xchg
imul
fadd
test
shr
xchg
push
mov
and
pop
neg
in
setb
xor
xchg
xchg
add
and
push
inc
mov
out
in
fst
mov
jne
mov
hlt
add
mov
loop
add
mov
data16
je
cmp
mov
push
pop
inc
pusha
xor
nop
inc
cmp
fcomp
pop
inc
movs
jge
xlat
pushf
nop
add
je
inc
es
(bad)
outs
cmps
adc
push
loope
fcomp
in
fstp
dec
mov
mov
fwait
call
pusha
in
test
mov
xor
or
jns
(bad)
fnstcw
push
and
lods
es
lds
xor
iret
push
push
jo
jo
jae
ror
cs
mov
je
sbb
jns
cmc
call
xlat
push
ret
pop
adc
mov
mov
xchg
add
stos
hlt
pop
push
dec
push
sbb
mov
fcmovu
jnp
or
dec
or
into
fadd
movs
fwait
cmp
js
dec
js
add
outs
mov
pop
and
mov
repnz
std
sbb
mov
scas
cmp
test
adc
push
loopne
sub
inc
out
fst
iret
push
mov
push
clc
jns
test
mov
add
cdq
mov
fwait
push
retf
or
sub
pop
mov
jbe
ret
imul
aas
and
call
(bad)
rcr
outs
mov
inc
dec
mov
cs
aam
daa
and
loop
mov
xchg
sub
push
(bad)
mov
adc
jl
js
aaa
popf
mov
add
adc
out
mov
mov
add
lea
mov
fisubr
shl
adc
out
sbb
or
dec
call
inc
xchg
dec
mov
mov
sub
jp
sar
out
std
fs
dec
inc
mov
sbb
and
jp
mov
inc
bound
xchg
xchg
dec
imul
mov
cs
enter
adc
bound
mov
cmp
fyl2x
add
and
xor
push
xchg
iret
dec
xor
leave
rcl
push
pop
jmp
popa
push
addr16
mov
jns
movs
xor
(bad)
fsub
jne
outs
sbb
inc
mov
mov
mov
and
test
xchg
mov
jmp
mov
mov
lock
fwait
(bad)
rcl
push
add
clc
mov
adc
sub
je
push
pop
ret
enter
scas
pcmpgtd
add
jle
dec
arpl
retf
fldenv
cmp
retf
sub
out
ret
mov
mov
jg
adc
dec
pop
retf
inc
and
push
or
mov
inc
jg
lock
in
mov
jne
sbb
in
xchg
int3
gs
add
enter
inc
and
imul
dec
arpl
cmp
cmp
call
push
mov
and
xchg
imul
push
pushf
lods
cmp
lock
push
pop
(bad)
mov
ja
stc
jg
aad
loopne
cmps
aas
pop
add
retf
loope
pushw
push
out
popf
pop
in
and
inc
push
sub
jne
repz
inc
shl
(bad)
and
xor
sbb
xchg
dec
stos
push
jno
in
ret
sub
shr
jne
(bad)
call
xchg
test
push
shl
in
ds
sbb
aam
cmc
adc
jle
or
sbb
pop
emms
call
adc
fsub
sti
pop
jbe
push
mov
or
xor
jl
add
pop
pop
ja
jmp
stos
add
xlat
pop
leave
jmp
cmp
mov
inc
out
push
xchg
push
imul
push
cmc
cwde
jb
or
ds
pop
out
mov
sar
out
pop
in
into
add
cmp
adc
xchg
sbb
or
ss
popf
lahf
and
push
sub
jge
outs
cmps
xchg
stc
(bad)
jae
cmps
gs
push
dec
cmp
cld
lahf
cwde
lahf
dec
pop
loope
in
fistp
jbe
cmp
ja
test
push
xor
adc
cmp
jo
add
sbb
aas
inc
nop
lea
xlat
fwait
pop
fmul
sbb
fcmovnbe
stos
mov
and
mov
and
aad
addr16
xchg
push
sahf
(bad)
(bad)
aad
xor
and
in
mov
add
fisubr
retf
pop
mov
jbe
dec
outs
fcmovbe
push
mov
cwde
pop
nop
sti
div
mov
stos
sar
and
xor
in
movs
out
and
loopne
fidiv
nop
add
mov
xor
ins
(bad)
jmp
sbb
loopne
xchg
cmp
xchg
and
sub
ret
outs
arpl
bound
das
ja
sbb
jns
aad
mov
mov
adc
jb
mov
ja
popa
sbb
dec
scas
imul
mov
bound
mov
mov
mov
mov
pushf
mov
aad
dec
inc
fdivp
cmc
out
mov
loopne
adc
inc
push
mov
lahf
xchg
pop
(bad)
jb
fwait
add
dec
pop
push
jg
dec
mov
pop
popa
cmp
out
pop
jg
jo
rcl
dec
std
cmp
aaa
sub
test
sbb
push
pop
idiv
cmp
add
push
in
test
xor
les
adc
or
cmc
lock
(bad)
push
xor
lods
cdq
stos
mov
mov
pop
ds
mov
pop
or
cdq
jg
sub
mov
into
mov
jg
test
or
out
int3
pushf
pop
jecxz
jbe
push
popf
inc
dec
leave
pop
cdq
fldenv
push
mov
add
pop
cli
xchg
stc
pop
mov
add
cmps
xchg
outs
call
push
lock
mov
test
mov
pop
shl
pop
lds
scas
ds
in
int
adc
cwde
xchg
push
test
movs
aam
pusha
popa
jns
xor
and
jb
sub
mov
mov
inc
mov
retf
xchg
xor
dec
mov
xchg
ins
jno
adc
(bad)
loopne
int3
clc
cs
enter
movs
fcmovnbe
dec
cdq
(bad)
jo
gs
std
bound
xor
int3
out
xor
in
js
es
or
mov
pushf
push
loop
imul
push
aad
aam
aad
loope
test
test
push
sub
and
pop
push
dec
mov
iret
or
adc
fmul
jne
arpl
rcl
repnz
pop
jno
ins
adc
test
data16
xor
mov
xor
inc
push
ja
leave
add
push
pop
inc
in
pop
xchg
arpl
popa
adc
ja
jns
xchg
jbe
hlt
sbb
and
lods
jg
xor
sub
pop
scas
(bad)
cmp
shr
je
xchg
adc
xchg
add
call
fdiv
out
les
outs
ins
fnstcw
lods
jbe
push
js
sub
shl
fstp
push
popa
dec
gs
and
jmp
mov
inc
addr16
in
mov
mov
(bad)
jp
cmps
sub
cmps
gs
mov
iret
or
stos
push
jp
adc
idiv
adc
jo
sbb
loope
push
adc
sub
dec
adc
pop
mov
mov
inc
jmp
fdiv
inc
push
push
out
mov
add
les
scas
mov
(bad)
xor
bound
and
lock
in
das
xchg
lds
div
daa
and
and
mov
xor
inc
push
das
pop
adc
rcl
sub
sbb
mov
test
cmp
scas
push
sahf
or
(bad)
ja
into
in
dec
inc
mov
xchg
pop
fsubr
retf
inc
adc
test
ret
mov
rol
ror
inc
mov
sbb
and
lea
or
push
enter
das
mov
mov
adc
stos
rol
fcomp
mov
sti
dec
retf
test
and
jl
rcr
sbb
jae
xchg
shr
retf
clc
mov
sbb
and
imul
inc
mov
fiadd
ss
ins
ret
and
jb
or
mov
fsub
cmp
inc
fisub
(bad)
push
out
out
movups
out
test
pop
cld
jmp
push
sbb
movs
dec
mov
jmp
add
xor
cmps
in
btr
loopne
pop
mov
or
aad
mov
mov
dec
and
sub
int
jg
jbe
dec
mov
xchg
scas
or
dec
outs
dec
inc
(bad)
dec
imul
out
xlat
(bad)
int
(bad)
xchg
cmp
push
sbb
push
xchg
jmp
sbb
jle
rcr
loope
inc
out
fisub
xor
ror
ror
xor
in
stc
or
lds
cdq
es
xor
and
xor
sbb
jnp
mov
lock
daa
sbb
jmp
push
out
stos
mov
mov
lods
imul
sar
xchg
retf
and
outs
sub
adc
push
jns
push
xor
xor
pop
xlat
addr16
aaa
popa
or
call
je
mov
or
je
mov
das
pop
lods
add
xchg
shr
sbb
(bad)
push
lods
mov
mov
fdiv
push
mov
in
adc
int3
cmps
or
mov
pusha
fdivr
inc
push
add
adc
xor
or
mov
xor
in
ror
stc
enter
jno
mov
mov
in
sbb
dec
rol
or
inc
fsubr
test
adc
in
jge
mov
cmp
mov
mov
mov
adc
adc
xchg
int3
ret
add
imul
jo
add
movs
lock
daa
add
push
xchg
addr16
sbb
popa
jl
out
inc
fisubr
scas
ins
and
pop
ja
test
sub
xchg
aam
rcr
and
xor
jbe
inc
pop
sub
(bad)
data16
fimul
and
iret
daa
aaa
push
sub
stos
inc
test
clc
arpl
movs
hlt
jmp
loope
mov
and
cwde
(bad)
gs
xor
aaa
ss
jg
cmp
push
pusha
xchg
ss
push
out
retf
cmp
jno
mov
cmp
xor
rol
cmc
loopne
shl
pop
sub
daa
fiadd
test
jb
retf
mov
mov
push
sbb
scas
inc
fwait
test
loop
mov
loope
iret
out
push
dec
mov
(bad)
shl
push
fistp
aas
dec
push
cmc
push
cmp
xchg
inc
or
sbb
enter
(bad)
push
mov
cmp
idiv
inc
xrelease
dec
ja
xor
ja
pop
loope
dec
loope
or
bound
dec
push
mov
xor
daa
lods
imul
cmp
je
dec
jns
aad
jne
fld
cmp
xor
pop
mov
idiv
fcom
retf
ds
ins
cmp
jnp
hlt
fisttp
cmc
jns
add
or
jbe
lahf
nop
(bad)
xor
cdq
mov
aam
add
xor
cs
aas
enter
in
retf
jmp
aas
xchg
hlt
enter
xor
xchg
jb
dec
pop
imul
and
shl
lea
adc
daa
adc
jbe
inc
xor
cmp
and
jle
in
fst
es
sub
and
data16
dec
mov
jp
sbb
or
mov
mov
or
mov
inc
(bad)
fs
jne
movs
mov
mov
push
out
repnz
xchg
cmp
icebp
push
jl
je
sbb
or
xor
mov
repz
les
inc
ds
cwde
xlat
fwait
lods
dec
call
push
ja
mov
ins
add
ins
jmp
jle
xor
movs
popf
mov
std
pop
and
or
sub
push
mov
movs
push
adc
inc
ins
mov
(bad)
ret
mov
mov
jns
lds
rcl
pusha
or
xchg
lods
jl
inc
mov
xchg
push
inc
dec
fdivrp
test
pop
test
adc
jle
jecxz
mov
ret
cmp
imul
mov
push
lods
xchg
rcr
inc
and
jl
imul
jle
cld
pop
pop
dec
out
das
je
xlat
outs
inc
fstp
adc
in
enter
inc
in
pop
xchg
push
sbb
shl
push
stos
or
sbb
xchg
loope
xor
enter
sahf
mov
call
mov
(bad)
add
sbb
adc
sub
sbb
push
jb
pop
push
mov
icebp
pop
xor
or
xor
out
push
(bad)
mov
or
mov
xchg
or
mov
add
popa
lea
mov
and
ds
out
scas
push
aas
es
ss
inc
loopne
loope
(bad)
adc
arpl
movs
ret
push
daa
or
cli
inc
jg
cmps
jp
loope
rcl
jo
mov
xlat
add
xchg
fistp
push
repz
fidivr
mov
in
mov
imul
and
and
add
mov
shl
mov
xchg
out
test
mov
sar
cmp
retf
addr16
jle
fidivr
sub
(bad)
xchg
cmp
lock
sbb
push
fisttp
test
xchg
mov
xor
jnp
cmps
out
loop
je
mov
shl
pop
(bad)
jmp
cdq
mov
jmp
pushf
xlat
add
shl
cmp
mov
pop
aas
and
mov
jne
mov
add
add
rcl
cmp
xchg
inc
fwait
popa
cmp
out
and
ret
dec
add
test
mov
iret
imul
mov
jge
push
or
sbb
les
sbb
dec
fsubp
cld
and
mov
mov
and
mov
fidivr
dec
std
push
pushf
sbb
cmpxchg
outs
adc
movs
stos
int
lea
(bad)
es
mov
mov
dec
sbb
mov
cmp
inc
ss
retf
push
inc
in
jo
xchg
out
pop
xor
pop
jl
fistp
push
clc
sub
sbb
jl
ins
ja
in
and
fsubr
jg
xor
xchg
imul
jg
mov
adc
clc
pop
ret
dec
(bad)
mov
movs
adc
jl
cld
jb
pop
inc
(bad)
repz
xor
xor
data16
adc
mov
mov
jmp
and
loope
cmp
ds
sbb
test
mov
cwde
jae
rcr
fld
in
mov
mov
xor
mov
xchg
cmp
xchg
inc
jl
clc
scas
mov
sub
push
cmp
xor
or
cli
rcr
ss
movs
xchg
dec
bound
sub
int
pop
xor
bnd
jne
(bad)
std
out
cwde
das
pop
sub
aad
ret
dec
in
sti
xchg
(bad)
lahf
dec
push
xchg
lds
ret
mov
lahf
sbb
enter
std
sub
push
push
loopne
xor
adc
push
inc
push
ror
sub
jmp
scas
xor
jl
scas
fstp
les
cmps
or
ds
fld
enter
jmp
jmp
or
fsub
sub
loop
or
sub
dec
sbb
icebp
mov
ret
pop
fisub
aad
stos
cmp
mov
scas
push
in
ret
mov
loope
fwait
cld
sub
mov
stos
add
dec
adc
push
in
in
dec
mov
adc
imul
ror
cmp
mov
push
gs
sbb
loopne
ss
mov
hlt
mov
test
popf
jnp
adc
mov
addr16
and
sar
sub
jne
(bad)
xchg
rcr
and
pop
ja
pavgw
(bad)
sub
adc
ret
jecxz
xor
les
mov
ret
mul
adc
push
mov
inc
push
mov
repnz
fmul
and
lods
jmp
inc
es
out
mov
or
ds
jmp
push
xchg
jns
and
add
adc
cmp
cmps
in
inc
xor
sti
add
cmp
inc
arpl
mov
adc
or
add
xchg
mov
mov
dec
cmps
ds
and
jno
dec
mov
jo
out
or
ss
adc
or
shr
test
sub
shr
sahf
stc
scas
mov
(bad)
fidiv
adc
jmp
xor
adc
cwde
or
xor
fdivr
cmp
mov
pop
or
stos
mov
std
icebp
mov
pop
xchg
push
adc
sub
loope
retf
mov
push
out
(bad)
mov
mov
xor
inc
dec
scas
mov
ss
test
sbb
movs
dec
jo
ja
push
mov
xchg
shr
mov
add
out
jae
jnp
inc
push
les
out
mov
sub
pop
inc
in
lock
xchg
mov
int
call
jno
pop
or
repnz
nop
sahf
mov
mov
pop
inc
test
mov
jo
xor
movs
fdivr
mov
xchg
adc
movs
pop
fs
mov
mov
or
retf
scas
lods
jae
(bad)
adc
retf
inc
dec
test
imul
push
(bad)
aas
sub
or
cmp
mov
xchg
imul
mov
sub
xchg
sti
and
push
add
sbb
fiadd
or
mov
xchg
mov
mov
sub
mov
inc
or
sbb
fistp
pop
pop
cmp
fisttp
mov
enter
mov
xchg
leave
in
mov
lds
push
and
rcl
jl
in
ja
inc
loopne
jl
test
add
push
jb
xor
adc
mov
fldcw
cmp
inc
sub
cmp
sub
rcl
fnstsw
in
mov
fist
das
or
daa
iret
jecxz
mov
aad
mov
ja
iret
cmps
or
addr16
cmp
pop
jg
sub
xchg
(bad)
in
in
icebp
dec
xor
(bad)
jo
pop
jnp
fwait
xor
add
xchg
movs
inc
ds
sbb
pop
ret
push
js
fild
mov
shl
or
cmp
jbe
scas
add
cmp
popa
test
dec
sbb
test
pop
and
icebp
dec
(bad)
and
(bad)
pop
sbb
ror
inc
std
not
fist
xchg
test
test
or
mov
inc
xlat
or
mov
into
and
imul
js
movs
mov
fstp
bound
and
iret
adc
and
mov
out
push
fcmovnb
hlt
fist
cmp
aad
lods
mov
lock
imul
mov
jne
mov
and
inc
cmp
icebp
mov
adc
repnz
jmp
xor
test
(bad)
jle
xlat
mul
add
sub
bound
les
lods
push
jbe
xor
loop
popa
sub
enter
push
push
xchg
mov
adc
push
dec
ja
mov
nop
lods
inc
push
xor
xchg
data16
clc
mov
stos
push
jne
ins
jge
ss
ret
in
or
mov
and
lea
fild
mov
mov
mov
pop
xchg
adc
les
mov
xor
(bad)
xchg
ret
test
cld
stos
in
cmc
sub
sbb
sahf
cmp
xchg
xchg
jbe
jns
cdq
icebp
cs
push
fistp
sbb
xchg
xchg
test
sbb
or
or
je
and
bswap
pop
imul
repnz
jbe
aas
std
js
bnd
jmp
test
mov
jae
sub
test
xor
retf
retf
stos
mov
adc
dec
inc
add
sub
daa
rol
and
fnsave
loope
mov
jmp
mov
loopne
(bad)
sti
retf
add
adc
movs
dec
jge
sub
inc
and
ror
imul
jbe
pop
(bad)
idiv
cmp
sub
mov
dec
(bad)
adc
sub
push
(bad)
repz
mov
adc
ins
(bad)
push
aam
inc
and
push
sub
xor
inc
adc
fisttp
into
jae
mov
jmp
push
inc
bound
inc
dec
sbb
push
xchg
xlat
mov
fcomp
or
add
bound
inc
adc
push
jns
mov
sub
outs
test
pushf
sub
int3
sbb
sub
mov
cmp
xchg
mov
repnz
xor
mov
leave
ret
aas
jge
(bad)
mov
mov
xchg
stc
cmp
jbe
test
add
lods
mov
mov
jecxz
in
(bad)
xlat
cmp
frstor
mov
xchg
dec
mov
xchg
sub
mov
cdq
shr
ret
iret
cs
rcl
lahf
ret
push
sub
jp
stc
adc
in
dec
pop
je
daa
inc
mov
adc
mov
addr16
mov
lods
adc
jb
jle
mov
add
jle
mov
mov
inc
jle
retf
ficomp
adc
sub
cld
inc
call
les
jns
push
cdq
sbb
outs
cmp
in
loop
lock
repnz
mov
cmps
inc
rcr
inc
lods
inc
xor
es
int3
cmp
add
inc
imul
jmp
dec
jmp
mov
pop
sbb
xor
inc
lock
stc
pop
push
mov
call
mov
or
or
movs
fdivr
sbb
mov
cmp
add
xor
mov
repnz
or
rcr
enter
sub
pop
sub
cmps
into
or
mov
jmp
dec
movs
imul
jp
jnp
das
jp
push
lods
test
ss
lods
pop
sub
wrmsr
leave
call
nop
or
mov
test
imul
es
xchg
rol
jnp
cdq
arpl
jbe
retf
inc
sub
inc
mov
jge
data16
xchg
int
inc
pmulhw
imul
in
add
fadd
lods
(bad)
pop
xlat
adc
sub
mov
adc
mov
sysenter
aam
lea
fcomi
(bad)
jle
sub
sar
cmps
and
imul
loope
mov
and
(bad)
psadbw
jge
push
icebp
jb
(bad)
ret
push
xor
retf
xchg
outs
pusha
jae
or
repnz
pop
push
cs
mov
jmp
(bad)
(bad)
ds
cmp
mov
retf
or
or
sbb
sbb
jo
and
pop
sub
popa
sub
dec
adc
add
sub
retf
adc
ins
xchg
cmp
mov
dec
mov
and
sbb
xor
movs
dec
jl
and
call
and
je
cmp
mov
cmps
cdq
add
xor
push
xchg
in
jnp
inc
cld
xor
repz
jbe
push
mov
mov
and
jo
outs
out
in
dec
pop
or
pushf
and
(bad)
(bad)
jne
add
xor
aad
ja
in
ins
pop
ds
inc
xchg
and
not
mov
in
in
mov
rol
call
jecxz
jle
adc
daa
add
in
les
movs
enter
repz
dec
cli
mov
hlt
adc
or
scas
mov
add
xor
jmp
push
les
push
movs
inc
mov
mov
repnz
jnp
xchg
movs
mov
lods
and
lods
jl
shl
loop
xchg
mov
push
and
mov
or
test
loope
cmps
pause
data16
xchg
pop
fistp
sbb
fs
je
fld
or
loop
mov
jne
mov
pop
xchg
add
adc
xchg
sbb
xor
rol
push
div
mov
sahf
and
jns
scas
test
ins
jbe
jno
mov
test
mov
sbb
xchg
push
push
add
xor
icebp
adc
lock
xchg
cmps
scas
sbb
test
mov
sbb
fist
pop
sar
xlat
jbe
hlt
cmp
rcr
ret
frndint
push
shl
cmc
jcxz
ret
xor
fwait
jae
pop
jb
push
shl
int3
pusha
mov
jno
ret
xchg
in
mov
push
es
cli
loope
(bad)
sti
jle
popa
(bad)
push
xor
or
gs
bound
mov
cmp
mov
pop
test
xor
pcmpeqd
adc
ret
xor
shr
(bad)
sti
sbb
jge
test
jbe
sub
cmp
cmp
sub
fimul
sbb
add
or
in
loopne
test
adc
and
adc
jl
jb
movs
out
lahf
jmp
jl
ins
mov
jae
iret
fisttp
sub
push
mov
mov
int3
out
lock
es
xchg
mov
enter
stos
js
fisubr
adc
sbb
(bad)
sub
paddsb
sbb
pop
fidivr
sbb
out
out
iret
loope
cli
pop
xlat
jne
fs
mov
dec
cmc
jle
and
repz
or
mov
mov
cmp
adc
mov
xchg
fs
mov
ins
adc
(bad)
aaa
add
aaa
ins
imul
fadd
push
inc
mov
xor
shl
(bad)
mov
cmp
arpl
test
pop
je
jmp
xor
pop
ss
jmp
pop
(bad)
adc
jns
push
mov
test
cmps
test
aad
stos
xchg
ficom
add
loope
int3
sahf
out
mov
hlt
sar
gs
sbb
xchg
sbb
cmps
gs
cmp
jge
and
pop
or
xor
mov
test
cmp
mov
mov
rcl
and
ins
repz
mov
jecxz
push
xchg
sub
jb
in
add
push
jns
push
je
mov
mov
outs
sahf
mov
xor
adc
cmps
popa
ins
mov
sub
pusha
loope
xchg
out
mov
enter
lds
loop
fsubr
shr
shr
sbb
push
pop
pop
push
jmp
push
dec
mov
jmp
jp
in
sub
jl
rol
das
dec
lock
not
xchg
push
movs
ss
hlt
movq
test
adc
pop
sahf
rcl
nop
mov
xor
push
sub
push
push
arpl
sub
enter
sub
in
and
bnd
or
test
(bad)
in
jo
imul
inc
sbb
mov
push
xor
push
sbb
(bad)
jmp
adc
rol
dec
aad
cwde
cli
aam
stc
repz
adc
jg
adc
aad
fsubrp
push
xchg
and
dec
inc
cwde
int
(bad)
outs
imul
lods
hlt
push
call
mov
jae
js
jp
jp
enter
fld1
mov
arpl
sbb
(bad)
fcmove
in
mov
add
(bad)
xchg
mov
test
pop
jmp
adc
mov
icebp
jmp
pop
and
jbe
fcomi
enter
icebp
adc
js
in
aaa
jne
pop
xchg
inc
stc
jl
rcl
scas
mov
(bad)
cld
outs
cld
cmp
shr
int3
mov
mov
out
data16
in
popa
aaa
add
jbe
fdivr
movs
push
(bad)
cmps
sti
cmp
push
clc
test
das
cmps
addr16
iret
popa
pop
mov
enter
adc
ds
fs
sub
or
push
xchg
inc
cmc
fs
lds
(bad)
jns
les
aad
sbb
dec
mov
fisub
jo
ja
or
rcl
cli
mov
jbe
jb
rol
ret
test
enter
out
ret
push
xchg
cmps
daa
adc
sbb
pushf
dec
jle
pop
push
xor
(bad)
cdq
stc
mov
and
xor
jne
inc
ror
ficomp
stos
jmp
in
loopne
jnp
ret
jp
stos
xor
not
out
std
lods
inc
(bad)
ja
scas
inc
adc
inc
adc
push
ins
sbb
mov
idiv
inc
iret
bound
add
and
rol
mov
jmp
mov
jne
stos
sti
lods
arpl
adc
and
shl
xor
and
inc
cwde
call
rcr
test
jg
add
xchg
lods
adc
cmps
dec
loop
mov
jecxz
cs
pop
mov
test
xchg
add
mov
xor
out
and
sub
pop
sub
cdq
jp
outs
pop
mov
addr16
(bad)
xor
into
jmp
dec
test
xor
jge
mov
pop
cmp
sub
mov
xchg
lods
cwde
pop
lods
in
xor
jmp
mov
test
cdq
movs
jecxz
popf
bound
ret
es
cmp
xor
dec
lea
cli
add
les
ds
cs
fimul
adc
ret
mov
mov
xor
jecxz
add
pop
loopne
push
sub
pop
movs
mov
xchg
push
je
es
sbb
cmp
mov
(bad)
push
pop
scas
push
bound
gs
mov
jnp
aam
out
xchg
aad
and
out
mov
aad
and
out
and
mov
sti
and
mov
stos
dec
mov
push
and
aad
pop
sub
jp
or
es
cs
dec
add
es
mov
mov
xor
inc
cdq
cmp
xchg
and
scas
push
mov
mov
mov
in
pop
imul
xchg
pusha
pop
mov
loop
outs
inc
les
pop
mov
add
and
push
mov
shl
mov
jg
adc
cmc
loop
push
pop
fild
mov
ret
pop
inc
or
enter
iret
mov
scas
popf
test
ins
shl
add
nop
aam
(bad)
jecxz
fs
sbb
mov
int
xor
int
push
inc
pop
and
sbb
push
inc
sbb
cmps
lods
mov
dec
push
ja
pop
xchg
push
sub
fnstenv
in
ss
ret
iret
iret
call
fcomp
mov
bnd
and
es
cs
or
inc
(bad)
cmp
jle
inc
sub
cmp
jns
fadd
fstp
fmul
shl
(bad)
(bad)
pop
into
cmc
inc
mov
mov
int
gs
pop
sub
jb
push
mov
mov
enter
push
daa
mov
inc
and
jg
pop
sbb
or
mov
out
arpl
pop
push
jg
mov
test
leave
ja
sbb
clc
push
or
rol
cmp
mov
gs
sub
sahf
stc
aam
das
int
or
in
mov
mov
pop
add
xor
cmp
je
adc
add
cmp
push
nop
cmp
cdq
or
fmul
sbb
push
push
inc
cmp
mov
test
jo
cmps
adc
seto
test
mov
test
xchg
jecxz
jmp
jmp
pusha
inc
xor
ss
test
in
(bad)
loopne
xchg
jmp
fdivr
pop
push
pmuludq
es
and
dec
or
or
mov
or
cmp
ins
cmp
(bad)
mov
push
xchg
popa
cdq
ins
jmp
xchg
std
fdiv
sub
or
jno
mov
mov
in
lahf
push
mov
loop
xchg
es
mov
lea
push
test
jmp
or
lahf
outs
ss
dec
jnp
jne
aaa
dec
les
pop
ss
add
mov
shr
mov
and
jge
lock
imul
frstor
pop
add
bound
into
xor
rcl
inc
pop
mov
mul
mov
sub
call
dec
dec
out
jnp
addr16
sub
sti
mov
xchg
ja
adc
or
arpl
in
cmps
sbb
repnz
out
cld
jmp
icebp
add
shl
sbb
adc
addr16
sbb
cmp
xchg
xor
mov
xchg
xchg
jns
test
mov
fild
shl
cmps
cmc
data16
inc
leave
fild
dec
or
in
popa
jl
(bad)
adc
(bad)
ins
cdq
mov
(bad)
jns
inc
cmp
jae
pop
xchg
mov
cmp
rcl
test
or
sub
(bad)
call
xchg
shl
fdivr
fistp
cmc
mov
mov
mov
outs
adc
dec
sub
dec
std
int3
fst
imul
add
mov
test
icebp
ficom
enter
vandps
dec
jmp
addr16
outs
cli
lods
jl
mov
push
pop
xchg
stc
retf
rcr
daa
enter
xchg
test
push
inc
idiv
call
in
jae
pop
pop
jno
jb
push
xchg
sbb
mov
adc
setns
adc
push
mov
movs
or
adc
inc
mov
or
inc
icebp
in
in
outs
push
xor
js
pop
dec
add
fcomi
xor
mov
fwait
ins
xchg
xlat
cli
(bad)
ret
mov
cmps
iret
movs
adc
and
push
ja
push
ja
jno
push
movs
mov
ss
lock
cmp
and
stos
js
sub
in
dec
mov
stos
jne
dec
loope
add
aad
inc
sub
cmc
mov
fwait
and
fist
loopne
shr
dec
mov
loope
into
mov
jae
add
hlt
jb
test
push
out
(bad)
fnstenv
xchg
retf
fs
adc
mov
xor
mov
push
add
mov
push
pop
sub
mov
js
xchg
nop
xchg
pop
icebp
std
mov
mov
jbe
gs
icebp
in
cmc
fcmove
retf
xchg
aad
movs
adc
je
sub
iret
out
mov
fcom
cmp
xchg
lock
movs
(bad)
aam
je
js
and
les
pop
sbb
jp
jo
and
aam
fnstcw
imul
scas
lock
mov
inc
dec
xor
dec
test
cmps
mov
mov
pusha
out
or
push
dec
arpl
mov
mov
dec
in
xchg
pusha
push
cmp
gs
rcl
jmp
rcl
es
push
mov
popa
cs
loopne
sub
xor
aam
aaa
rol
sub
ficom
test
popa
sbb
inc
push
pop
add
sbb
push
pop
pop
out
int
jp
sti
pop
pop
gs
movs
test
xor
gs
sbb
sbb
add
jg
pop
loop
mov
jmp
sbb
mov
push
frstor
mov
pop
jmp
cmc
jge
(bad)
int
aam
xchg
sub
add
ds
test
mul
sahf
jno
fsubr
fisttp
push
jo
shr
ret
shr
repnz
int3
mov
(bad)
ins
add
and
ret
mov
mulps
int3
cdq
leave
push
jae
stos
fsubp
aad
nop
loopne
dec
dec
adc
or
add
push
aad
popa
sahf
push
sbb
add
dec
cmc
add
inc
jmp
mov
outs
adc
dec
ret
add
push
pop
ror
hlt
pop
xchg
sub
dec
mov
mov
fs
mov
cmps
scas
push
neg
scas
add
push
test
ins
call
int3
pushf
pop
popa
bound
sub
scas
and
fdivr
test
nop
xchg
pop
addr16
fld
cmps
(bad)
(bad)
das
in
and
mov
jbe
sub
cmp
push
adc
bound
mov
cmp
lock
loopne
adc
inc
ds
les
mov
movs
into
mov
mov
movs
cmp
setb
cmps
(bad)
adc
adc
in
jnp
sub
stos
test
pusha
jbe
mov
xor
scas
mov
and
sub
shr
dec
add
in
push
push
cmp
xchg
add
jmp
and
ins
lods
div
pop
sbb
jb
fwait
inc
pop
rol
imul
rcpps
inc
add
xchg
jbe
jno
jno
lods
mov
and
dec
lahf
xchg
jns
jge
(bad)
adc
xor
mov
outs
adc
test
mov
cmp
mov
enter
into
enter
bound
std
movs
dec
and
xchg
mov
pushf
xor
imul
mov
test
mov
add
call
or
jbe
in
pop
rol
jns
sub
push
movs
dec
mov
(bad)
std
xor
push
mov
stos
add
cmp
jns
push
sti
adc
out
(bad)
or
cmp
push
push
movs
fbld
push
into
push
inc
jno
fsub
hlt
pop
cwde
sahf
pop
jge
adc
inc
test
cmc
mov
sub
mov
jle
loopne
fwait
lock
add
out
std
and
push
pusha
mov
xchg
pop
inc
fist
fbld
mov
and
pop
nop
inc
jo
loopne
pop
ds
sbb
loopne
push
cmp
ss
icebp
dec
push
pusha
(bad)
fdiv
dec
xchg
(bad)
in
bound
mov
jns
push
(bad)
aaa
rol
adc
fs
inc
std
cli
scas
mov
cwde
push
call
add
out
and
popa
cmc
mov
sbb
mov
iret
jl
cmps
clc
push
pop
das
adc
test
push
xchg
nop
in
or
inc
rcl
shl
add
int3
(bad)
bound
repnz
lea
loop
enter
loop
outs
dec
stos
push
loopne
popf
or
add
fistp
(bad)
call
xor
int3
test
ins
or
nop
fst
pop
push
neg
aaa
std
loope
pushf
pushf
inc
mov
jp
jb
push
add
pop
sbb
rol
les
or
mov
mov
dec
ficomp
adc
clc
jnp
add
out
sub
or
jo
js
mov
inc
nop
gs
shl
ret
lods
cmp
loopne
jmp
mov
cmp
fstp
dec
sbb
or
or
and
stc
cmp
cmp
repz
mov
repnz
sbb
ja
std
stos
in
or
xchg
jae
inc
sbb
xor
adc
inc
add
or
fs
fwait
retf
and
adc
or
imul
dec
pushf
xor
pop
add
push
retf
cmp
and
xor
movs
dec
mov
xor
xor
std
dec
aam
cld
inc
scas
clc
sahf
call
sub
pop
mov
pop
dec
retf
sub
stos
sub
(bad)
sahf
and
jb
add
ret
xchg
xor
jl
call
jle
shl
(bad)
scas
ret
push
fstp
inc
daa
push
fs
jne
popa
jge
nop
lds
adc
in
mov
or
ss
cmp
aaa
dec
jnp
das
test
and
push
inc
sub
ret
popa
inc
adc
dec
jecxz
cmp
ins
sbb
test
daa
loope
xor
dec
pop
xor
mov
sub
xchg
sub
push
mov
test
cmps
push
fs
sti
dec
xlat
jmp
cs
and
mov
sti
adc
retf
pop
and
push
mov
add
inc
adc
and
add
loope
fcmovnu
mov
lds
cmps
repnz
lods
xor
dec
scas
mov
mov
pop
or
stc
cmp
push
call
sti
cmc
and
mov
and
jns
push
jns
das
jl
fld
pop
rcl
fdivr
test
call
xchg
fld
mov
call
test
fwait
push
ss
sub
dec
mov
sbb
je
mov
xchg
xchg
jo
jle
cmp
hlt
xor
jne
jmp
aas
je
movs
jl
out
sub
imul
and
jmp
pop
lods
(bad)
mov
xchg
add
sub
popf
fdiv
sbb
nop
mov
pushf
add
pop
mov
and
iret
test
inc
imul
push
icebp
ret
jb
nop
jbe
ds
xchg
mov
dec
fild
cmps
jo
fistp
inc
lea
jae
fcmovnb
cs
jbe
in
mov
xor
pop
inc
mov
sbb
fnstcw
iret
xchg
mov
ret
cmps
(bad)
std
mov
mov
cmps
daa
xchg
js
mov
sbb
mov
imul
sti
lods
jo
int
push
dec
outs
or
mov
loope
retf
(bad)
mov
inc
ds
adc
pop
dec
or
pop
mov
cmps
jp
xor
jo
stc
push
jbe
inc
push
cwde
mov
movs
push
out
les
add
sub
inc
out
mov
jle
fwait
outs
sti
add
retf
loop
jl
or
(bad)
rcr
(bad)
fnstenv
or
pop
(bad)
hlt
mov
mov
jecxz
in
aam
pop
sub
popa
aam
pop
ins
push
sbb
sbb
std
and
ds
sbb
fidiv
inc
sbb
jno
mov
not
add
nop
popf
arpl
icebp
jge
je
mov
mov
lods
sbb
xchg
cs
or
mov
add
ret
movs
gs
cmp
fadd
xchg
and
cmps
inc
cmp
and
mov
pop
loop
cs
mul
or
dec
xor
mov
arpl
ret
mov
or
jbe
sar
nop
fcmovne
test
mov
inc
pusha
dec
adc
in
mov
mov
stc
loopne
xor
xchg
dec
inc
add
rcl
xor
(bad)
fisub
or
arpl
leave
cmp
mov
dec
out
(bad)
adc
nop
in
cld
xor
cs
pop
repz
dec
ror
int
sub
sub
adc
hlt
inc
test
retf
outs
nop
push
imul
mov
jp
and
sub
pop
push
sbb
push
push
push
xor
dec
sub
push
stos
nop
push
sbb
call
mov
ins
daa
push
push
nop
or
jge
push
jne
rep
or
sbb
in
jg
and
pop
mov
les
test
sbb
lds
jmp
es
push
test
daa
loop
xor
in
ja
add
scas
push
int
int
add
adc
test
sbb
xor
mov
mul
push
mov
cs
std
ret
mov
xchg
call
sbb
shl
xor
imul
hlt
bound
push
dec
int
and
test
dec
dec
mov
mov
mov
mov
xchg
or
leave
adc
cli
aaa
jmp
mov
iret
cmp
jge
pop
int
test
jne
mov
xchg
pop
retf
test
movs
mov
(bad)
das
jno
pop
mov
dec
lods
mov
(bad)
cmp
or
jg
jbe
or
jno
test
dec
leave
and
jo
pop
and
lahf
ins
iret
add
addr16
add
fst
aam
shl
ror
cmp
(bad)
push
mov
mov
mov
movs
stc
jbe
cmovo
mov
retf
pop
das
pop
fcom
icebp
sub
dec
call
xchg
sub
cmp
inc
mov
shl
stc
mov
leave
jns
mov
js
ficomp
out
fnstcw
fsubr
call
movs
cmps
cwde
add
(bad)
push
jno
xlat
inc
addr16
int3
loopne
retf
shl
or
and
mov
pop
xor
lock
sahf
popa
bnd
scas
dec
xor
jmp
imul
rcl
sub
lods
shr
add
inc
mov
and
lahf
push
push
jbe
ds
out
bound
adc
movs
jo
adc
xchg
out
pop
inc
idiv
push
and
or
mov
test
mov
jmp
or
sub
fsub
jl
xor
test
fsub
das
adc
jge
cmp
adc
pop
sahf
jo
dec
aam
pop
outs
sahf
loope
sbb
stc
jno
jnp
sbb
out
sbb
das
mov
aaa
jge
aaa
mov
paddsb
push
jl
jg
sub
inc
jp
mov
adc
add
int
fdiv
jo
fisttp
les
xlat
mov
xor
not
xchg
lea
cmp
icebp
popf
(bad)
or
xchg
inc
add
pop
in
mov
push
stc
or
ja
mov
lds
inc
dec
dec
adc
bound
lds
cmp
sbb
iret
into
daa
scas
inc
xor
fimul
jmp
mov
sti
cdq
frstor
enter
stc
jno
xchg
xchg
push
adc
inc
shl
shl
adc
adc
pop
xchg
jno
sar
aad
shr
rol
aad
adc
xor
int
aam
push
imul
cmp
mov
int
sahf
add
inc
jae
ss
xchg
ficom
dec
inc
repnz
stos
or
or
mov
jle
add
pop
xor
dec
popa
dec
cdq
pusha
add
std
inc
int
movs
ds
pop
icebp
retf
dec
inc
dec
loopne
push
(bad)
out
jnp
ins
sbb
adc
sar
enter
lods
cwde
push
(bad)
push
xor
pop
mov
(bad)
jle
mov
push
and
mov
xor
mov
xchg
retf
fcom
out
frstor
mov
xadd
mov
fsubr
daa
jne
out
add
daa
jg
cld
mov
jmp
push
outs
cmps
lahf
ror
add
(bad)
dec
xor
sub
jbe
popa
pop
in
add
xor
inc
jmp
std
pop
jp
mov
inc
xor
iret
xchg
inc
dec
rol
cmp
sub
cmp
movs
sbb
push
mov
fld
adc
stc
nop
aam
lods
arpl
mov
xchg
in
sub
in
int3
mov
dec
cmp
popa
adc
rcr
mov
popa
inc
fdiv
jne
ins
fdiv
jne
cmps
add
xchg
shl
sub
mov
cld
mov
rol
cwde
stc
push
(bad)
in
cmps
sbb
(bad)
jge
xchg
daa
push
sub
xor
or
repz
js
xor
arpl
fdivrp
fidivr
cmp
jmp
dec
dec
push
les
push
mov
inc
daa
jle
mov
xor
xchg
repz
pop
pushf
inc
inc
pusha
loopne
push
xchg
mov
xchg
cmps
mov
sub
(bad)
addr16
sbb
imul
and
dec
(bad)
cmp
adc
test
cmpps
mov
js
mov
mov
test
(bad)
xor
ss
jae
fstp
jnp
shl
cmps
pop
add
jae
sub
inc
in
aas
cmp
jbe
or
aas
dec
repz
jp
fnstcw
jne
pop
mov
mov
ss
adc
fnstenv
mov
xchg
mov
pop
pop
clc
jbe
out
dec
jo
je
rcr
xchg
iret
(bad)
cmp
test
call
scas
push
xchg
fwait
out
enter
pop
inc
jp
and
popa
outs
std
pop
aam
data16
adc
mov
iret
xor
push
xchg
imul
adc
fisubr
jmp
xchg
scas
out
aad
and
ss
ret
aad
dec
xor
shl
cmp
pop
jp
test
add
retf
lock
outs
mov
xchg
rcr
cmp
div
sub
xor
mov
sar
xor
call
or
push
dec
mov
loop
ror
movs
xor
shl
(bad)
mov
jecxz
int
push
pusha
icebp
sbb
push
jl
and
shr
xor
xor
icebp
dec
fldl2e
adc
adc
and
mov
repz
cmps
push
rcl
and
jmp
scas
or
sbb
cli
cmp
aam
(bad)
mov
jmp
adc
mov
adc
movsx
mov
sbb
je
lods
jae
push
and
movs
cmp
(bad)
nop
pop
cdq
mov
jns
test
dec
imul
test
push
dec
popa
fidivr
imul
jl
jno
cli
add
mov
cmp
daa
sub
test
int3
and
retf
lock
(bad)
aam
shl
lock
outs
pop
inc
xor
call
int3
mov
xchg
dec
dec
ret
cmp
fisttp
push
in
add
mov
inc
mov
hlt
cdq
loope
stc
in
inc
sbb
pop
and
ror
aas
aam
stos
cld
or
add
sbb
in
xchg
sub
cmp
push
lea
push
mov
mov
add
in
pop
test
cmp
cmp
mov
push
out
nop
push
push
stos
jbe
add
aad
outs
inc
mov
outs
jecxz
lods
scas
push
aam
inc
push
add
pushf
push
int
inc
jl
add
jle
inc
mov
pushf
in
add
dec
fcom
addr16
push
add
lds
sub
ds
xchg
inc
adc
dec
cmp
iret
inc
add
call
es
add
inc
(bad)
mov
push
test
xlat
ss
repnz
jb
mov
iret
mov
ins
imul
and
loop
pop
or
outs
inc
sub
fldcw
push
mov
sahf
xor
mov
fsub
popf
int3
sbb
sbb
dec
dec
xor
sahf
test
pop
into
(bad)
or
push
inc
repnz
idiv
and
fcomp
and
pop
shl
push
clc
lock
cdq
jb
std
or
add
dec
test
push
aam
movs
cld
adc
out
or
mov
sbb
mov
or
push
pop
pop
fst
movs
mov
fisub
icebp
inc
pop
inc
dec
mov
sub
js
cmp
rcr
ficom
mov
hlt
pop
lods
inc
and
pop
cmp
test
stos
mov
inc
push
mov
leave
and
pop
sub
movs
pop
(bad)
data16
cs
inc
xchg
retf
mov
in
(bad)
out
in
mov
xchg
or
rcr
clc
push
and
and
jb
(bad)
mov
mov
scas
ret
iret
xlat
inc
push
shr
sub
or
movs
das
and
je
or
fs
adc
aas
mov
es
jne
mov
bound
aaa
xchg
es
inc
test
addr16
xlat
jp
inc
ficomp
adc
jmp
cmp
cmp
adc
stc
mov
out
inc
cld
mov
int3
xor
push
jl
popa
sbb
cmc
pop
lds
mul
cmp
xchg
out
jmp
push
mov
cmp
(bad)
jnp
inc
mov
jb
enter
sub
cmp
iret
fild
and
sbb
jo
cmp
add
rcl
sbb
and
mov
xor
std
leave
pop
jmp
or
pop
addr16
push
xchg
stos
or
(bad)
mov
xchg
fistp
xchg
jb
jecxz
dec
xchg
sub
xchg
pop
sbb
adc
jae
jnp
lods
outs
scas
push
push
mov
or
fisubr
loopne
iretw
in
xor
inc
fbstp
popa
enter
data16
jnp
pusha
fnstenv
adc
es
cmps
xchg
or
das
xlat
adc
out
mov
jp
mov
(bad)
into
mov
ja
or
es
lods
push
mov
icebp
mov
shl
in
stc
repz
cmp
jne
jl
sub
aad
outs
jl
test
repz
retf
pop
test
scas
idiv
mov
pop
mov
dec
div
or
mov
sub
xor
dec
repnz
sbb
movs
inc
xor
sahf
or
mov
lods
jno
icebp
sub
fild
jg
test
push
push
clc
out
iret
jns
mov
mov
int
inc
(bad)
push
jmp
stc
rcl
add
sbb
push
lds
sub
in
leave
push
mov
dec
scas
imul
mov
jle
push
inc
mov
ret
sub
sbb
cmp
xlat
mov
mov
fild
sub
fmul
pop
es
push
sub
fsub
sub
inc
fcmovnbe
cmp
outs
mov
push
cwde
sub
xchg
pusha
aam
cmp
jno
movs
push
adc
sub
and
mov
xchg
and
pop
xor
xor
lds
sub
jge
and
cmp
adc
aaa
push
pop
xchg
adc
sub
(bad)
cwde
mov
(bad)
stc
push
loop
(bad)
mov
inc
test
iret
inc
xlat
shl
repz
adc
std
in
and
and
sbb
mov
jl
sti
in
or
cmp
pushf
jb
pusha
(bad)
test
mov
lods
dec
cmc
jmp
jne
int
pop
icebp
xlat
stos
cmc
jmp
add
cmps
mov
inc
inc
push
mov
mov
xchg
fstp
cmp
and
sti
mov
das
xchg
pop
mov
sbb
in
stc
out
leave
outs
xor
jecxz
cld
fild
xlat
jg
pop
movs
retf
or
inc
psrlw
and
add
push
fistp
or
das
aas
xchg
mov
in
fisttp
push
add
cmc
jne
sahf
and
mov
arpl
(bad)
adc
test
sub
mov
adc
pop
mov
cmp
sbb
cwde
and
push
(bad)
xor
cmp
or
repnz
ret
aaa
mov
add
add
ins
ins
aaa
add
inc
jle
xor
nop
mov
inc
push
cmps
es
test
loopne
jae
in
push
inc
into
pop
(bad)
mov
(bad)
sbb
ss
jae
fcomp
xchg
adc
test
ret
bound
jl
pop
pusha
cmp
mov
loope
xor
jmp
outs
mov
popf
inc
retf
dec
cs
daa
add
packssdw
jecxz
loope
dec
mov
je
add
add
inc
hlt
adc
(bad)
jmp
loope
adc
mov
mov
sub
mov
push
lea
rcl
out
dec
ins
test
outs
rcr
jo
test
fnsave
dec
ror
sbb
push
ror
call
into
scas
bound
mov
imul
pop
test
loop
xor
pusha
scas
ss
call
jmp
inc
mov
mov
mov
enter
repnz
jl
dec
pop
lea
add
sbb
jno
push
rcl
sbb
adc
jno
add
jno
and
jno
adc
xchg
icebp
sbb
or
sub
cld
popf
mov
xchg
cmp
sbb
pop
push
outs
mov
jge
jp
jae
cmp
sbb
add
inc
inc
add
lahf
sbb
movs
mov
repnz
jl
xchg
jo
push
in
sbb
jg
jmp
fnstsw
cmp
xchg
sbb
xor
jbe
je
push
aaa
loope
fdivrp
mov
inc
add
sbb
cmp
sub
jns
push
cmps
add
or
sar
pop
pushf
in
call
cdq
mov
pushf
nop
adc
mov
(bad)
cmp
(bad)
fdivr
shr
sub
test
gs
in
pushf
inc
(bad)
cli
dec
and
fild
mov
lea
mov
fs
inc
loope
sub
push
movs
push
lods
cmps
dec
mov
dec
cmp
es
imul
test
adc
xchg
ret
inc
add
push
ret
popf
lea
cwde
loop
jg
cld
adc
cmps
cdq
dec
cld
mov
push
fld
mov
add
xchg
mov
call
adc
call
mul
cld
gs
enter
mov
adc
stc
inc
clc
and
push
jge
aas
cmp
aas
inc
sub
retf
retf
jmp
fild
out
pop
in
xchg
sbb
call
leave
and
xchg
push
repz
mov
cmp
test
xor
adc
movs
aaa
aam
imul
add
sub
or
sub
jns
sbb
mov
sub
dec
xlat
bound
push
retf
cmps
mov
sti
sub
in
xlat
mov
adc
xor
push
jns
ins
cmp
sub
imul
pop
inc
jmp
cmp
fwait
sbb
xchg
mov
daa
sub
dec
test
xor
int
bound
pop
and
sbb
adc
mov
jnp
cmp
adc
push
mov
sti
jmp
cwde
imul
jo
jl
cwde
sbb
sbb
xchg
sub
jno
call
dec
add
mov
aas
push
dec
xor
es
les
mov
mov
xor
je
retf
cmp
ja
out
inc
in
mov
or
mov
out
or
test
ret
dec
sbb
cmp
sbb
mov
mov
jns
popa
bound
je
inc
jecxz
adc
ja
push
ins
mov
xchg
and
test
jmp
gs
sbb
and
sbb
bound
mov
pop
sbb
rcl
fsubr
les
pusha
dec
les
cmp
mov
fsubr
mov
in
or
ficom
or
leave
adc
xor
or
pushf
pusha
mov
pop
test
pop
mov
daa
cli
aaa
jmp
cmp
mov
int3
mov
sbb
outs
push
pop
xchg
loop
sub
jnp
or
inc
sbb
adc
std
or
sahf
mov
mov
jecxz
idiv
sar
sbb
loop
retf
push
stos
add
sub
cdq
mov
jge
mov
sub
call
xchg
call
iret
adc
lods
sub
push
mov
sar
xor
or
pop
mov
dec
jmp
ss
dec
mov
test
retf
aaa
addr16
jbe
(bad)
imul
xor
ins
call
xchg
lods
retf
xor
dec
sub
dec
pop
adc
test
ja
(bad)
sbb
(bad)
pusha
or
lahf
sub
jecxz
add
popf
ret
push
pop
pop
ficomp
rcr
or
pop
js
cmps
mov
in
mov
mov
mov
movs
mov
cmp
les
mov
push
or
addr16
jecxz
mov
call
xchg
sar
mov
or
ins
inc
out
pop
mov
pop
add
jg
repz
xor
sub
and
pop
in
stc
(bad)
pop
mov
dec
pop
sahf
pop
mov
enter
retf
test
fs
loope
add
js
not
fs
cdq
clc
sbb
das
and
(bad)
in
mov
sub
push
add
inc
movs
imul
and
clc
ss
fiadd
into
push
(bad)
xchg
in
xchg
inc
mov
fwait
aad
cmp
lods
fwait
mov
adc
push
ins
sub
xchg
into
lahf
shl
and
shl
jle
pop
jbe
mov
jmp
xchg
mov
sti
xchg
aaa
(bad)
push
add
and
mov
jmp
sar
aad
rol
dec
or
lock
ja
ja
pop
cld
push
or
fs
lods
sub
stc
xchg
hlt
sbb
(bad)
mov
mov
jnp
int3
call
mov
or
mov
mov
fsubrp
or
imul
sub
xor
jg
push
dec
das
mov
add
in
dec
push
mov
in
ret
lods
fild
push
ins
mov
add
lds
(bad)
pop
xor
mov
xor
(bad)
test
mov
jnp
outs
push
loop
mov
ins
inc
lods
inc
(bad)
fld
xor
pop
lods
xlat
sbb
out
inc
cmp
jne
call
add
(bad)
mov
dec
mov
mov
and
movs
jne
movs
movs
xchg
xlat
jne
xor
adc
int
cmc
cdq
jnp
not
iret
sbb
(bad)
(bad)
movs
repnz
mov
int
xchg
ror
dec
jns
rcl
push
adc
pop
inc
gs
loopne
jl
fst
int3
dec
cmp
mov
retf
es
fist
jge
jo
dec
(bad)
jae
jns
push
mov
or
or
mov
push
mov
int
or
inc
add
ror
ins
dec
shl
fdecstp
or
jnp
sub
mov
or
add
xchg
stos
nop
sub
sbb
in
in
test
jae
das
sub
mov
stc
adc
ror
xor
add
xor
inc
fdivr
sti
inc
or
movs
or
inc
jno
(bad)
xor
icebp
mov
push
nop
popa
into
pop
mov
jl
out
mov
lods
in
add
jle
loopne
call
mov
adc
sbb
ins
add
pusha
test
idiv
gs
in
retf
mov
xor
movs
fucomp
leave
rol
test
in
xchg
int3
sbb
inc
xlat
push
jmp
dec
(bad)
pop
cli
or
cmps
mov
in
clc
sbb
push
sbb
dec
fimul
inc
imul
xlat
push
adc
mov
push
test
xchg
add
stos
pop
cmp
sub
xchg
retf
rol
mov
cmps
inc
xchg
xor
jno
xchg
dec
sub
fidivr
adc
jno
mov
out
mov
xchg
arpl
mov
push
nop
clc
dec
mov
loopne
sbb
lods
inc
and
ret
dec
jecxz
stc
int3
mov
or
retf
dec
adc
inc
pop
call
cmp
mov
or
or
enter
data16
or
jg
xchg
fisub
lods
ror
pop
dec
cld
inc
inc
xchg
jno
je
xchg
push
scas
add
cmp
adc
dec
push
add
pop
test
cs
fidivr
pop
sub
xchg
jne
div
test
call
xlat
test
sbb
aad
popf
aaa
inc
jnp
add
jae
mov
cs
pop
call
pop
ja
cmp
fist
mov
cmp
aaa
xchg
pop
xor
leave
imul
imul
pop
les
sbb
test
(bad)
mov
or
sbb
pusha
xor
loopne
sbb
(bad)
jmp
imul
test
in
jge
or
pop
stc
cmp
fmul
push
add
jmp
loope
sub
inc
jae
dec
arpl
dec
cs
stos
or
add
fimul
shr
push
mov
test
leave
sub
stos
cmps
jo
cwde
jle
movs
push
arpl
jecxz
or
xchg
push
aaa
dec
adc
mov
mov
push
mov
inc
mov
rol
retf
or
add
test
ror
shr
jp
xchg
rcl
xor
pop
inc
jp
int3
addr16
dec
mov
out
push
pop
and
or
dec
jmp
test
popf
repnz
jg
cmp
mov
out
(bad)
aaa
mov
lock
mov
out
cmc
pusha
scas
js
xor
shr
jae
pop
(bad)
mov
loopne
inc
test
mov
out
jg
pushf
outs
cmp
jl
fwait
(bad)
inc
leave
stos
jl
bound
push
pop
or
push
mov
xchg
test
(bad)
fwait
call
jmp
jecxz
dec
bound
mov
fbstp
push
test
cmc
push
scas
retf
in
std
xorps
sbb
enter
cmp
test
or
cmp
cdq
push
push
loop
mov
xchg
push
(bad)
push
sbb
in
bound
shl
jb
pop
fild
jl
imul
hlt
adc
icebp
adc
ret
jmp
and
add
imul
and
sbb
jno
ror
test
mov
or
scas
shl
shl
jmp
jp
out
push
fsubr
(bad)
dec
rcl
add
call
lock
scas
test
xlat
lahf
adc
mov
mov
mov
fld
mov
out
and
inc
pop
fsub
das
inc
repnz
dec
call
out
dec
bound
inc
int
push
xor
inc
outs
aam
mov
mov
inc
add
(bad)
fnsave
stos
xor
push
callw
ja
aas
cmp
mov
jl
xor
push
pop
inc
sub
repnz
mov
pop
sbb
inc
loope
es
clc
ret
push
push
cmps
fsub
(bad)
mov
sbb
rcr
jmp
lock
mov
dec
xor
imul
ret
or
pop
or
or
lock
js
xor
xchg
in
in
stos
loope
daa
adc
adc
pop
mov
test
pop
leave
popa
push
pusha
lahf
mov
addr16
cmp
(bad)
outs
fwait
mov
jmp
mov
repnz
jns
xor
add
xor
inc
sti
push
mov
dec
mov
int
sbb
int3
ins
lods
add
fisub
in
popa
pusha
movs
push
stc
add
adc
xchg
ds
mov
jp
push
iret
out
mov
paddsw
das
loope
jmp
loopne
test
cmp
je
mov
imul
inc
lock
push
xor
cmp
hlt
mov
push
and
pop
movs
in
push
mov
call
dec
into
xchg
popa
or
movs
pop
pop
add
sbb
sar
cli
push
loopne
jl
pop
dec
shr
cli
(bad)
dec
inc
inc
sar
xor
jb
loopne
and
call
and
call
loope
sbb
mov
pop
push
sub
or
out
jb
lods
ss
push
push
fsubr
mov
mov
loope
add
outs
xlat
dec
fsubr
dec
sbb
push
fidivr
cmp
jne
pop
jno
bound
xchg
dec
pop
aam
(bad)
mov
xor
lods
repnz
call
jno
loop
xchg
jl
cmp
sub
sbb
push
xchg
mov
mov
mov
je
inc
or
xor
aam
ror
adc
outs
mov
sbb
repnz
and
jnp
leave
int
addr16
jae
pop
adc
pusha
jg
cmp
jg
aad
sub
(bad)
xchg
push
js
int
jge
rcl
loop
lds
add
sbb
mov
jle
pop
dec
int3
jnp
or
and
arpl
jo
xor
cs
mov
mov
xor
push
lods
sti
(bad)
jmp
cdq
shl
inc
mov
and
pshufw
mov
arpl
enter
sub
add
jg
test
push
into
xchg
mov
test
push
cmp
outs
fdivr
cwde
jae
fdiv
outs
and
jg
inc
ds
std
fcmovu
sbb
sbb
mov
add
mov
lods
movs
mov
mov
cmps
mov
jmp
lea
inc
sbb
or
mov
(bad)
(bad)
mov
add
aad
sbb
jns
(bad)
test
imul
bound
sub
mov
lds
je
bswap
(bad)
in
adc
aaa
rcl
in
aam
mov
dec
adc
es
es
dec
and
xchg
int
(bad)
mov
or
ins
lds
pop
iret
ins
test
(bad)
ins
jl
and
xor
mov
pop
(bad)
xchg
sar
call
sbb
mov
daa
xchg
mov
adc
enter
sub
jmp
jb
addr16
add
jns
outs
pop
inc
sub
cmp
cmp
je
bound
jo
retf
cmc
xchg
std
jae
xor
add
movs
cli
dec
(bad)
gs
mov
dec
mov
fsubr
and
in
adc
std
outs
stc
aas
xchg
mov
push
and
pop
xchg
cld
imul
das
outs
shr
test
push
(bad)
loope
dec
sti
loope
ret
ud1
adc
mov
mov
stc
jcxz
and
pshufw
xor
jnp
stos
adc
mov
test
and
(bad)
shl
push
fcmove
mov
xchg
je
or
fistp
pop
xor
mov
jmp
push
mul
jb
mov
add
(bad)
icebp
or
dec
js
pop
ret
xor
cdq
inc
cli
cmp
adc
xor
int
adc
aad
test
aaa
xor
push
xchg
les
loop
or
in
mov
cdq
dec
add
test
push
mov
xchg
leave
mov
loope
lods
hlt
or
aad
jb
stos
cli
xchg
jp
ds
push
rol
jmp
jae
fld
out
xchg
mov
in
xchg
sbb
lods
(bad)
icebp
mov
inc
sbb
xchg
leave
jne
into
mov
enter
popf
cmp
jge
xchg
in
inc
enter
inc
ss
and
test
cmp
mov
mov
lods
ds
cmp
stos
pop
push
call
mov
pop
clc
jbe
jmp
jb
or
add
fisubr
arpl
das
jge
std
sub
jbe
dec
repnz
cwde
dec
retf
xchg
mov
cmp
mov
xchg
xlat
cmp
add
out
jmp
rol
cmp
cmp
mov
jl
iret
(bad)
sti
dec
xchg
test
lods
inc
dec
ss
push
or
push
adc
adc
jle
xor
inc
(bad)
loopne
jb
adc
fisub
jb
adc
mov
jb
jb
jb
fdivr
dec
xchg
lahf
inc
outs
repz
adc
xor
jecxz
mov
arpl
cmp
test
loopne
rcr
adc
add
mov
sub
stos
out
pop
loope
sbb
or
xchg
retf
inc
and
add
daa
rcr
repnz
and
fist
or
cwde
sub
pushf
sbb
bound
jnp
mov
and
mov
push
and
(bad)
inc
cmp
pop
mov
(bad)
xchg
ret
pop
in
retf
mov
push
rcl
out
mov
inc
push
lds
xor
loop
mov
mov
or
retf
jge
pop
inc
xchg
pop
add
out
push
gs
sbb
jl
cmp
lahf
cmp
xor
jecxz
ins
mov
jmpw
cmc
es
sbb
add
push
out
data16
pop
inc
mov
mov
push
out
mov
js
sbb
cs
popa
cmp
inc
in
cmp
push
ins
popa
jle
dec
push
fisttp
int
test
sub
in
mov
xor
lea
or
mov
shr
xchg
mov
cmp
in
mov
mov
les
jmp
jle
retf
mov
xor
lds
jbe
sub
mov
sub
loop
add
mov
iret
cmps
jne
lods
xchg
shr
adc
pop
fimul
sub
in
adc
les
xor
cmps
jmp
data16
mov
inc
icebp
cmps
test
out
(bad)
loopne
push
fwait
shr
inc
daa
jbe
jl
add
inc
push
mov
leave
aad
outs
fsubr
aam
cmps
inc
jnp
lea
ficom
pushf
test
inc
sbb
adc
xchg
mov
push
fist
dec
in
faddp
inc
ss
inc
aad
sbb
cmc
ins
push
das
push
push
cmp
or
push
into
imul
ret
and
cdq
jecxz
mov
and
adc
sar
cmp
xchg
popa
ja
or
imul
mov
and
jno
(bad)
int
mov
cmp
xchg
sbb
call
nop
pop
xchg
sbb
scas
push
inc
adc
mov
add
shl
ret
out
loop
lock
pop
jle
mov
test
add
mov
mov
(bad)
jae
pop
cmps
pop
jl
mov
xchg
mov
jae
repnz
pop
shl
nop
sub
sbb
inc
pop
mov
outs
fild
retf
frstor
shl
repnz
popf
ja
mov
retf
aam
mov
(bad)
retf
and
xchg
adc
or
in
cld
clc
ss
jge
mov
sbb
sahf
mov
xor
or
push
lods
jle
sub
repz
stos
pop
push
jecxz
fiadd
imul
cmp
gs
call
inc
and
cmp
ror
daa
mov
popa
jns
jo
cs
jle
sti
mov
das
lock
js
jae
mov
inc
sbb
aaa
retf
add
add
cdq
(bad)
cs
(bad)
aad
dec
(bad)
xchg
mov
cmc
mov
push
xchg
inc
idiv
int
enter
xor
fs
inc
xchg
arpl
jnp
sbb
dec
jo
xchg
jge
jmp
push
push
sbb
push
push
mov
mov
jmp
push
div
or
pop
xchg
cmp
fbstp
scas
sub
dec
push
adc
out
adc
push
xchg
scas
out
add
and
neg
or
movs
fdiv
push
push
rcl
cmp
cli
jnp
xor
jecxz
movs
sti
aas
jge
add
lods
outs
sub
xor
rcl
mov
repz
test
pop
inc
(bad)
clc
mov
sub
fimul
stos
test
xchg
jbe
jae
test
dec
jecxz
xor
pop
mov
jo
mov
cdq
imul
test
sbb
and
jmp
cmp
(bad)
in
inc
mov
or
shr
leave
ss
in
mov
retf
es
lock
aaa
in
fcmovne
cmp
mov
jmp
pop
mov
sbb
sub
add
jp
jnp
sub
aas
sar
push
call
and
call
loopne
push
xchg
sar
push
stos
sbb
ret
push
mov
lock
stc
data16
inc
cmp
inc
ins
addr16
in
lods
xor
push
pop
out
cmps
adc
dec
and
inc
dec
push
imul
std
jbe
or
pop
xchg
(bad)
popf
xchg
lods
retf
cmp
pop
xchg
std
scas
dec
jnp
lods
sahf
add
or
mov
cmp
push
pushf
push
lahf
push
lods
rol
std
(bad)
mov
cdq
repz
dec
ja
aaa
dec
mov
(bad)
jl
add
push
pop
mov
mov
mov
cs
shr
jg
dec
jl
inc
popa
imul
adc
mov
jg
jae
mov
popa
push
ins
dec
mov
shl
xchg
nop
rol
or
repz
pop
adc
lea
mov
push
adc
ds
int
pop
sub
or
or
rcl
jb
jae
shl
jns
test
cmp
ret
inc
mov
js
pop
stos
mov
js
daa
push
rcl
mov
movs
pop
mov
int
push
add
dec
jmp
fbld
pop
jge
fcomp
rol
xor
ds
pop
adc
cmp
adc
fist
push
sbb
add
shr
push
dec
lock
ret
ds
lock
cld
jmp
xchg
xchg
sbb
pop
jno
xchg
adc
xor
sbb
fadd
ret
adc
or
outs
add
mov
push
mov
ret
push
mov
jno
jb
sub
call
clc
add
lods
push
sti
outs
iret
sbb
mov
xchg
retf
nop
(bad)
neg
fld
add
outs
cmp
out
jmp
sbb
mov
sub
jecxz
mov
xor
(bad)
out
dec
out
inc
sub
mov
fstp
dec
out
sub
push
in
add
shr
into
imul
adc
ins
outs
inc
ins
ret
movs
sar
sbb
lds
push
out
or
or
adc
xchg
cmp
aaa
fimul
test
jnp
leave
lods
clc
arpl
push
push
sbb
popf
(bad)
pop
or
fisubr
mov
dec
hlt
sbb
movs
cs
fnstcw
mov
add
cs
mov
(bad)
retf
or
pop
mov
fiadd
cmp
push
fbstp
or
dec
ds
push
push
lahf
sbb
mov
pop
aas
pop
push
out
out
mov
sahf
call
inc
or
fs
sub
add
outs
iret
arpl
or
leave
push
dec
inc
mov
popa
and
into
lds
fsub
and
mov
sbb
xchg
add
loopne
pop
das
movs
inc
dec
cmps
mov
xor
adc
cs
lds
fisttp
sub
jle
xor
loope
outs
xor
gs
mov
je
sbb
push
fimul
cwde
(bad)
push
add
jecxz
cld
in
xchg
lods
pop
(bad)
leave
dec
push
ds
cwde
sbb
mov
push
xchg
es
add
js
fld
fs
push
(bad)
aad
prefetchwt1
inc
in
jle
sbb
mov
dec
sub
ss
and
sbb
cs
add
iret
out
or
fisubr
loop
in
in
popa
xor
mov
ds
clc
mov
cld
or
xor
jle
jge
lock
imul
out
imul
mov
iret
mov
fld
mov
daa
cmp
jecxz
push
lock
sub
push
push
ret
adc
and
xchg
mov
or
xor
inc
xchg
sub
or
or
or
pop
xor
sub
icebp
retf
lahf
jne
mov
hlt
scas
out
(bad)
cmp
xchg
xor
cmp
outs
icebp
add
mov
imul
cli
xchg
sti
lods
mov
mov
daa
int
scas
jmp
dec
pop
cmp
ret
adc
inc
sbb
in
out
sub
rcr
push
outs
inc
ss
xor
retf
int
call
addr16
rcr
inc
mov
cmc
dec
sti
inc
lock
mov
mov
test
or
push
test
or
stos
imul
mov
js
(bad)
sbb
and
cdq
add
mov
and
jecxz
adc
dec
or
and
push
test
dec
outs
inc
jnp
cdq
sbb
or
frstor
jmp
arpl
out
inc
lahf
les
and
jb
or
add
pop
icebp
in
int
scas
in
stos
repnz
jmp
gs
or
xchg
or
test
and
mov
xchg
jbe
jb
mov
jmp
cmp
push
add
ret
ins
add
out
jl
fsubr
ins
sub
rol
inc
xchg
or
push
imul
sbb
inc
pop
outs
dec
test
add
push
scas
std
dec
push
outs
add
(bad)
call
fcmovnbe
sub
cmps
jmp
enter
rcl
stc
les
jmp
xchg
mov
dec
jg
cld
test
lea
dec
aad
ins
inc
test
fbstp
dec
stos
shl
push
std
pop
inc
fisttp
fdiv
je
or
inc
cmp
mov
sbb
jl
ret
aaa
fnstsw
push
pusha
mov
or
mov
push
xchg
in
cwde
popa
lods
shl
std
not
adc
jmp
push
sahf
cmp
inc
fild
sti
lahf
dec
das
and
sti
cs
mov
sbb
mov
icebp
or
push
int3
sub
jle
fdiv
sbb
in
xchg
mov
push
and
cmps
inc
clc
xor
arpl
repz
pusha
cmc
stos
push
xchg
int3
fwait
sbb
outs
in
call
push
out
in
cmp
inc
sbb
sbb
adc
ja
int3
outs
adc
cmp
sahf
movs
fsub
clc
dec
pop
bound
addr16
es
sub
or
sub
gs
call
fdiv
pop
mov
cmp
ret
idiv
inc
jbe
sbb
cdq
adc
mov
cmp
push
xchg
cmp
out
int3
inc
cmp
jle
jmp
clc
imul
xchg
push
cmp
or
jge
cli
fwait
test
jne
sar
lods
hlt
call
cmp
cmps
or
shl
or
or
mov
leave
in
sub
imul
xchg
call
adc
adc
or
jmp
pop
hlt
adc
mov
adc
or
outs
movs
xchg
adc
stos
test
xchg
sbb
mov
in
push
and
push
inc
inc
jne
mov
xlat
daa
(bad)
mov
(bad)
mov
cld
jns
xor
dec
sbb
out
or
scas
movs
stos
inc
jne
aam
sbb
push
xor
mov
aaa
retf
sub
cld
pop
in
sar
jo
inc
push
(bad)
push
mov
icebp
scas
sub
dec
cdq
test
cdq
sbb
enter
aam
push
push
push
sub
xor
xchg
ins
aaa
popf
adc
iret
pushf
pop
mov
inc
out
jmp
add
or
xchg
xchg
xlat
pushf
inc
(bad)
fwait
pop
push
or
mov
add
mov
js
or
sub
gs
sbb
cwde
cld
dec
push
jmp
cli
movs
fld
sub
(bad)
xchg
mov
pop
jmp
add
xchg
aam
fadd
mov
mov
mov
dec
in
cld
mov
jmp
pop
pop
dec
lds
push
ins
repz
dec
cmp
jo
adc
loope
xlat
stos
aad
xlat
stos
xchg
push
mov
nop
idiv
scas
xor
push
mov
and
and
ds
fld
or
jbe
retf
aaa
xchg
ja
xchg
nop
mov
inc
dec
dec
bound
stc
sbb
(bad)
in
mov
inc
clc
and
inc
imul
inc
xor
js
and
es
js
lock
dec
jp
aaa
cwde
test
push
es
jmp
(bad)
fdiv
out
nop
mov
and
push
jecxz
int
dec
xor
into
ins
jbe
xor
cmps
mov
stc
out
xor
adc
cmp
test
adc
jl
cmp
mov
das
pop
stc
lods
mov
test
jmp
dec
jno
sahf
mov
sub
adc
cmp
data16
mov
lahf
cmps
sbb
pusha
inc
ror
popf
les
ret
jns
seta
clc
sub
(bad)
jo
jl
pop
cmp
das
jns
test
or
lea
pop
fcomp
cmps
adc
jge
add
repnz
jle
xchg
or
and
dec
xlat
into
dec
fdivr
jbe
xor
out
hlt
cs
aaa
aam
out
xchg
push
xchg
mov
push
mov
fist
mov
lea
rol
and
dec
or
psraw
addr16
scas
push
int3
inc
inc
adc
call
inc
in
inc
sbb
mov
sub
movs
jle
xlat
test
in
pop
cmps
pop
es
dec
aad
call
rcl
mov
jg
cmps
mov
push
adc
stos
imul
adc
mov
fisub
adc
repz
inc
lods
aaa
popa
mov
in
movs
push
xchg
cmp
cli
loopne
gs
inc
sub
fdiv
push
jle
mov
inc
or
xor
dec
test
mov
daa
call
and
loopne
xchg
inc
fild
push
adc
inc
jmp
nop
xchg
rcl
imul
inc
adc
pop
test
pop
dec
dec
lock
mov
sbb
das
mov
rcr
test
push
jl
push
lods
aas
sub
repnz
pop
(bad)
mov
dec
test
or
mov
jg
mov
ret
cmps
cmc
les
not
adc
(bad)
out
jl
xchg
mov
cmp
mov
xchg
sbb
lds
out
mov
pop
out
mov
push
fwait
idiv
mov
mov
or
push
xchg
cmp
dec
push
xor
pop
xchg
frstor
xor
aas
in
into
add
pop
xchg
data16
in
aaa
js
test
loopne
out
adc
sbb
mov
(bad)
test
inc
jae
(bad)
adc
xchg
mov
mov
cld
jecxz
adc
add
push
push
pop
movs
loop
clc
cmc
dec
dec
cmp
pop
pop
fwait
and
addr16
jnp
fdiv
jns
pop
sbb
push
leave
push
jmp
push
pop
add
and
repnz
push
and
inc
add
shr
cmp
cmps
push
jns
sub
outs
pushf
inc
arpl
mov
sbb
imul
movs
loop
push
push
mov
fwait
gs
(bad)
cmp
retf
shl
xchg
dec
mov
or
sbb
pusha
jmp
mov
adc
mov
and
add
ror
or
cmp
fstp
outs
movs
push
adc
fmul
add
xchg
icebp
xchg
sbb
xchg
xchg
push
jns
data16
outs
int
icebp
gs
mov
nop
inc
pavgw
fs
aas
adc
lods
xchg
outs
pop
(bad)
pop
retf
mov
stc
repz
call
data16
inc
xchg
dec
hlt
das
(bad)
push
dec
pop
fsubr
pop
movs
(bad)
ficomp
out
cmc
fdivr
push
and
loopne
push
push
sub
aad
pop
push
les
pop
push
inc
xor
ss
cs
jle
sub
jmp
idiv
call
mov
sbb
adc
fist
bound
sub
into
or
in
xchg
adc
push
lods
pusha
retf
mov
mov
mov
cmps
adc
(bad)
pop
ret
xlat
fsub
dec
mov
icebp
inc
ja
movs
neg
inc
mov
dec
stc
xor
test
sbb
sbb
mov
xor
push
jle
add
sbb
into
(bad)
jnp
dec
ffree
es
movs
imul
stc
shl
add
sbb
xchg
stos
aaa
stc
xchg
out
fcomp
(bad)
lods
das
shr
xor
push
call
push
jmp
test
add
out
(bad)
adc
es
inc
ret
outs
pop
and
inc
jg
ins
push
cmc
iret
mov
mov
sbb
test
sub
mov
sar
mov
pop
push
and
bound
push
lods
or
sbb
aas
jecxz
scas
icebp
xchg
daa
pop
daa
jne
mov
mov
and
inc
test
lds
jecxz
cmp
ins
mov
rcl
adc
pop
mov
cmc
adc
cs
in
neg
into
jg
push
pop
dec
lds
inc
repz
test
adc
into
fbstp
retf
and
ret
int
(bad)
cmps
retf
ds
pop
push
ror
sbb
stos
dec
rcr
or
adc
cdq
mov
pop
aam
xchg
out
out
sbb
fs
xchg
ds
or
loop
pop
call
mov
out
mov
mov
les
fwait
or
outs
xchg
in
ffree
push
jae
repnz
out
xor
xchg
div
pop
xchg
shl
mov
cmc
sub
aam
into
aaa
and
(bad)
out
mov
or
(bad)
imul
and
test
sub
jle
push
add
pusha
cli
into
icebp
test
hlt
or
sub
pop
hlt
xchg
lods
push
jle
adc
or
inc
or
das
cmp
push
adc
jecxz
pop
cwde
(bad)
jns
xor
jno
dec
sbb
ds
jge
ins
dec
cs
out
cmp
adc
push
mov
lds
jp
pop
leave
clc
jnp
mov
dec
or
aad
xor
mov
iret
fwait
into
cmp
pop
and
xchg
jecxz
mov
push
xor
hlt
lahf
test
out
std
sbb
fsincos
test
loop
xchg
je
push
dec
out
imul
xor
dec
push
imul
lds
stos
and
cmp
jnp
sub
inc
repz
mov
and
jno
jae
std
and
imul
adc
cmp
jmp
aad
and
add
xor
mul
call
adc
in
push
cmp
push
dec
mov
imul
xlat
leave
jnp
lods
push
xor
movs
mov
sbb
mov
cwde
xchg
retf
pop
adc
mov
leave
or
popa
aas
int3
mov
inc
ds
popf
ror
rep
les
js
sub
pop
movs
sub
iret
out
cmc
fidivr
add
sbb
mov
mov
xor
push
add
sbb
leave
pop
xchg
idiv
jno
repnz
pusha
imul
out
inc
mov
neg
cmp
inc
dec
adc
pop
in
cmp
inc
add
aaa
or
movs
das
call
or
and
cmp
mov
aaa
cmps
sbb
test
or
imul
icebp
out
popa
mov
sub
mov
xchg
clc
jb
fst
sub
sbb
xor
xor
adc
mov
xchg
mov
dec
test
xchg
sahf
sbb
shl
xor
pushf
std
int
mov
cdq
cwde
cmp
mov
cwde
movs
pusha
mov
pop
pop
xchg
nop
sub
add
stos
sbb
outs
mov
aaa
out
fs
pop
(bad)
xchg
ds
xor
fldcw
out
jecxz
xor
mov
or
xchg
mov
not
imul
push
fstp
clc
inc
aad
shl
push
pop
repz
rcl
icebp
push
mov
adc
xor
ds
imul
jb
xchg
push
sub
setbe
push
pop
adc
clc
cmc
fcom
xor
or
adc
sbb
in
xor
fimul
push
inc
mov
iret
xchg
mov
sti
in
retf
jae
inc
imul
fs
sbb
or
js
sahf
xchg
sbb
pop
push
dec
fsubr
test
or
ret
enter
jno
scas
mov
fwait
inc
xor
or
les
pop
lods
adc
jmp
adc
mov
lds
mov
cmp
int3
mov
add
fist
test
cli
push
stc
and
(bad)
sbb
xchg
jo
shl
out
pushf
ror
inc
sti
loop
pop
xor
nop
jmp
(bad)
bound
dec
push
cmc
sub
cmc
mov
rcr
ret
xchg
mov
mov
mov
lahf
sahf
int
jbe
outs
xor
loop
add
cmps
xchg
scas
mov
xor
xchg
std
sbb
fcos
or
outs
bound
add
inc
xor
push
rol
ins
fdecstp
test
cs
jno
sub
movs
pushf
pop
ja
mov
repz
jmp
sbb
test
pop
adc
pop
xor
xchg
sub
dec
in
ret
aaa
and
mov
add
(bad)
pop
(bad)
fdiv
dec
fwait
ds
mov
cwde
push
(bad)
push
lock
push
cmp
jg
call
pop
fbld
fdivr
lods
cs
rol
push
in
stc
ficomp
jbe
je
popa
jmp
dec
les
imul
dec
inc
mov
dec
adc
and
int
daa
cmps
adc
dec
sbb
(bad)
and
mov
js
mov
fild
int3
mov
js
movs
cli
cmp
js
in
mov
test
mov
xchg
call
jbe
jnp
daa
xlat
mov
jo
or
(bad)
push
jae
js
fcmovbe
mov
fs
xchg
pusha
mov
sbb
sar
xor
jae
dec
sub
xchg
das
cwde
jmp
cmp
jle
push
mov
add
repz
and
adc
imul
ins
pop
cwde
cs
cli
or
stc
in
xchg
jbe
xchg
(bad)
jmp
pop
sub
mov
retf
repz
test
hlt
sti
loop
add
push
add
popf
xor
ins
imul
icebp
stos
retf
push
das
mov
dec
push
int
sbb
cdq
bound
rcl
outs
cld
push
cs
mov
fwait
leave
adc
retf
pop
xor
out
and
sub
pop
mov
test
daa
in
sbb
test
push
retf
popa
jmp
push
cmp
stos
and
jo
inc
mov
mov
adc
cld
mov
scas
cmp
cwde
pop
jmp
icebp
mov
ds
jl
mov
mov
push
cdq
push
dec
inc
std
icebp
fnstcw
push
sub
loope
jae
cld
xchg
stos
sahf
aam
mov
das
cmps
stos
stos
and
mov
push
and
cwde
cmps
leave
mov
(bad)
push
es
sbb
fidivr
data16
sbb
pop
cdq
xchg
repnz
clc
jmp
cwde
mov
fstp
cdq
add
shr
(bad)
out
jg
xchg
mov
or
push
and
and
ins
inc
mov
or
xor
inc
fucomi
cmps
pop
fcos
xor
shl
dec
sbb
shl
mov
push
pop
sub
mov
add
jne
test
sbb
cmovnp
repz
sahf
out
xor
mov
hlt
mov
loop
inc
mov
and
leave
scas
jbe
outs
sbb
movs
xchg
(bad)
ror
jne
push
pop
mov
xor
cld
xor
bound
test
push
leave
add
xor
in
popf
fcmovb
cdq
movs
dec
loope
jp
xchg
loopne
js
mov
add
mov
jg
push
aas
inc
mov
int3
jmp
(bad)
push
adc
cwde
fild
mov
xchg
or
fs
test
xchg
dec
push
pop
sbb
xor
mov
(bad)
dec
out
push
add
out
ret
push
test
push
lahf
inc
pop
popf
dec
ss
push
sbb
pushf
dec
mov
(bad)
pop
xor
pop
pop
stos
sahf
add
xchg
xor
leave
shr
cdq
ret
data16
ins
bound
ins
sub
cmc
mov
fstp
mov
inc
out
enter
ja
xor
seto
cmp
test
stos
icebp
daa
jnp
or
aad
or
mov
jne
(bad)
ficomp
pop
jbe
out
movlps
std
sub
adc
xor
dec
in
dec
test
mov
mov
pop
jl
dec
in
adc
addr16
dec
mov
jne
mov
or
test
dec
je
add
pusha
enter
xchg
adc
mov
jno
nop
add
cmps
mov
cmp
jno
dec
mov
call
scas
stc
sub
adc
push
lahf
ret
jmp
xchg
mov
lock
adc
outs
leave
out
fistp
jle
pusha
imul
add
push
push
cdq
fwait
and
adc
popf
fsubr
jg
sub
mov
mov
mov
xor
loope
mov
clc
movs
idiv
ja
mov
pop
xor
imul
xchg
loope
add
inc
loopne
sbb
cmp
or
data16
cmps
out
jmp
mov
cmp
lds
imul
imul
or
push
fsub
and
and
(bad)
fidiv
jnp
out
mov
mov
xor
jmp
mov
xchg
sbb
sub
dec
sbb
push
ficomp
mov
sbb
sar
inc
xchg
ret
fnstcw
mov
sbb
ret
xor
mov
test
(bad)
in
xchg
pop
dec
pop
mov
pop
sti
cld
jecxz
or
(bad)
jns
dec
hlt
xor
push
cmc
ss
je
jmp
ins
movs
jae
popa
into
aas
and
dec
xor
in
ret
movs
repnz
test
hlt
cmc
pop
(bad)
frstpm(287
pusha
in
push
shl
ror
div
jmp
stc
pusha
adc
in
hlt
cmps
mov
push
mov
mov
add
sbb
sbb
retf
inc
mov
adc
test
mov
mov
shr
test
push
rcl
clc
jns
dec
cmp
jecxz
mov
inc
cmps
xchg
(bad)
cmp
adc
call
dec
sbb
push
test
scas
inc
jnp
or
movs
mov
mov
jg
mov
ins
mov
clc
adc
je
clc
in
and
push
cmps
xor
stc
and
xchg
xor
(bad)
sti
xor
add
movs
cmc
cmp
popa
push
xor
mov
mov
adc
mov
cmp
mov
outs
aaa
xchg
inc
sbb
sub
and
imul
xor
sqrtps
mov
push
cmp
push
adc
dec
pop
cmp
pusha
test
cld
(bad)
pop
out
jae
cmps
pop
minps
loope
imul
fld
mov
out
cmps
cmp
xor
push
movs
jbe
mov
test
jmp
in
outs
in
jmp
pop
push
test
cmp
into
imul
mov
and
xlat
in
fimul
or
leave
sub
mov
inc
mov
fdivr
scas
push
mov
iret
pop
aaa
adc
lock
imul
jg
dec
lock
int
mov
lock
pop
or
arpl
pop
shl
mov
dec
mov
out
outs
and
pop
pop
imul
mov
adc
jmp
test
adc
mov
cmp
out
arpl
shr
fisttp
jbe
dec
movs
mov
in
mov
cld
sti
mov
cmp
mov
cmp
push
jnp
dec
mul
inc
pop
std
xchg
jmp
push
jmp
shl
jo
jne
rol
push
mov
push
dec
frstpm(287
fld
xchg
xor
mov
int3
scas
imul
push
out
bound
out
pop
adc
push
call
popf
pop
jmp
rcl
mov
adc
push
jle
dec
imul
sub
retf
inc
gs
icebp
mov
push
sub
pop
(bad)
xchg
aas
push
(bad)
imul
scas
xchg
push
retf
inc
adc
mov
pop
addr16
jp
enter
les
into
push
and
lahf
pop
jne
xchg
add
mov
mov
xchg
mov
adc
xlat
sub
pushf
das
cs
mov
cld
int3
add
xchg
xchg
mov
or
sbb
sbb
pop
inc
push
aad
and
mov
xor
xchg
or
xchg
xor
dec
call
fwait
mov
mov
xor
jg
call
adc
mov
mov
leave
jmp
and
push
mov
xor
les
fucomip
push
(bad)
movs
mov
mov
push
or
push
push
test
scas
bound
sub
mov
push
icebp
mov
(bad)
dec
add
add
adc
jo
jns
outs
lock
in
mov
push
sub
xor
push
sti
push
push
in
cmp
test
std
cdq
xchg
test
xchg
mov
movs
mov
pushf
mov
repnz
mov
sbb
or
div
ror
outs
retf
pusha
dec
adc
jmp
push
movs
add
repz
fbstp
cmp
(bad)
or
cmp
pop
mov
mov
retf
mov
inc
jmp
xor
mov
push
loop
or
sbb
jo
fcmovu
mov
mov
mov
push
push
fxch
popf
inc
idiv
cwde
mov
cmp
jno
adc
lock
out
cmps
stos
adc
dec
adc
push
ret
xor
mov
xchg
ja
(bad)
jmp
daa
jle
ss
adc
(bad)
jo
xchg
mov
push
fcmove
int
inc
dec
push
fadd
add
in
and
mov
or
mov
leave
adc
rol
xor
lock
lea
div
jg
pop
repz
(bad)
call
cmp
mov
inc
and
push
pop
dec
jmp
push
test
pop
xor
jmp
mov
cdq
add
jbe
dec
jne
or
sub
jge
pop
test
add
mov
pop
outs
pusha
push
adc
mov
fstp
pop
cli
out
test
mov
mov
ja
jnp
cmp
cmp
pop
mov
movs
cld
jp
dec
loopne
adc
or
ja
adc
dec
ja
sub
call
loope
imul
shr
adc
imul
inc
dec
cli
and
clc
mov
or
and
and
mov
call
xchg
pop
and
adc
(bad)
xchg
adc
xlat
call
fadd
movs
test
loop
sbb
sub
jno
dec
cdq
dec
ror
xchg
iret
mov
ins
dec
xor
push
pop
sbb
out
and
jge
lods
ss
fwait
xor
aam
jbe
enter
xor
add
cmp
mov
pusha
repnz
or
push
pusha
cmp
sub
dec
packuswb
xchg
push
in
dec
mov
in
sbb
mov
and
jge
cs
fidiv
lods
mov
mov
cmps
leave
jmp
pop
fldenv
fnstsw
rol
xchg
fwait
(bad)
stos
(bad)
mov
retf
mov
mov
xor
movs
inc
push
mov
das
les
(bad)
xchg
jb
add
mov
les
mov
adc
mov
mov
sti
sbb
mov
cmp
(bad)
das
dec
xchg
xor
pusha
jl
test
in
mov
push
mov
mov
imul
and
repnz
xor
jno
cld
or
daa
mov
adc
jmp
mov
js
loope
cmp
retf
mov
sbb
xchg
jp
ins
push
lds
enter
in
mov
ficom
xor
xchg
or
add
jecxz
ja
mov
mov
retf
mov
add
sbb
sbb
dec
(bad)
lahf
push
mov
fsubr
pop
mov
pop
inc
aas
sbb
jns
pusha
sbb
inc
hlt
push
enter
icebp
mov
stos
jl
leave
mov
mov
inc
repz
adc
int3
adc
cld
dec
les
pop
sbb
mov
adc
ret
retf
cmps
int
dec
push
jmp
daa
imul
add
test
add
push
pop
inc
jnp
test
xchg
retf
push
and
movs
sti
test
xor
loop
inc
pop
gs
mov
std
mov
iret
lds
mov
popf
nop
xchg
pushf
push
arpl
push
daa
fsubr
adc
jge
cmp
jp
jecxz
inc
cmp
jb
int
mov
xchg
adc
and
mov
cmp
and
and
push
push
leave
push
ins
push
lahf
retf
cmp
push
popa
add
pop
mov
mov
loope
mov
mov
shl
int3
sub
sub
xor
sahf
test
cs
xor
mov
mov
xchg
out
and
dec
loopne
mov
shl
xchg
mov
jmp
xor
mov
xchg
xor
or
dec
scas
jge
int
(bad)
lods
scas
cmps
pop
and
inc
movs
cmp
rcl
call
mov
fistp
fisubr
mov
ror
jmp
push
pop
test
stos
adc
sub
or
ja
sar
mov
adc
dec
gs
in
iret
ds
cmp
add
mov
aaa
xchg
das
pop
mov
adc
jle
cmp
add
test
sub
fsub
add
sbb
pop
or
jp
out
ret
sbb
lock
mov
hlt
xchg
cmc
push
and
cmp
adc
jno
aam
cmc
test
jae
push
leave
and
cmp
jne
pop
and
fmul
and
sbb
stos
push
sbb
leave
add
stc
arpl
sub
retf
(bad)
sub
pop
or
dec
dec
mov
or
and
cmp
mov
cmp
dec
pop
xor
push
mov
aaa
xor
outs
mov
jmp
lock
adc
les
outs
(bad)
dec
pop
xchg
movs
push
and
mov
cmp
aam
push
mov
dec
in
or
popa
xchg
das
pop
add
loop
and
stc
pop
or
repnz
inc
shr
mov
xchg
int
je
push
add
mov
sub
in
jnp
mov
es
inc
or
xchg
ds
adc
mov
(bad)
cmp
int
lods
sub
mov
xchg
lahf
in
fdivr
jno
(bad)
clc
xchg
push
(bad)
lock
fist
fldcw
nop
jmp
push
pop
add
ins
and
adc
cli
cwde
xchg
or
sbb
shl
out
xlat
test
pop
xor
mov
and
mov
jp
jb
dec
xchg
or
push
imul
inc
test
add
mov
jb
sub
dec
cdq
xchg
cmp
(bad)
ds
or
std
pusha
xchg
stos
retf
(bad)
neg
jmp
ret
dec
(bad)
imul
or
inc
xchg
mov
xor
and
pop
lea
and
test
sub
clc
bnd
xchg
mov
lods
movs
push
aam
addr16
dec
add
sub
push
hlt
test
fstp
xchg
in
iret
mov
fidiv
mov
gs
lock
sbb
lods
jae
in
outs
xlat
mov
inc
ds
outs
mov
lea
xchg
js
sti
push
mov
jmp
sub
jb
add
sub
icebp
mov
and
(bad)
mov
out
retf
pop
adc
mov
test
leave
cmp
mov
pop
fstp
addr16
aaa
add
dec
sbb
mov
aad
fldenv
out
push
pop
xchg
leave
jns
data16
dec
pop
mov
pop
xor
jmp
mov
sbb
mov
rcr
lods
nop
mov
mov
fbld
mov
fwait
in
cmp
pop
frstor
pop
mov
rcl
lock
mov
mov
jmp
dec
les
out
push
repz
ja
lds
bnd
cmps
iret
mov
xor
pop
call
jne
lds
pushf
popa
sbb
or
cli
repnz
jmp
(bad)
jns
and
pop
ret
ror
arpl
mov
mov
mov
lods
popa
les
adc
call
cmps
movs
pushf
test
shr
push
into
jb
push
and
(bad)
mov
sbb
data16
mov
mov
rcl
mov
add
mov
int3
(bad)
push
sbb
das
or
dec
add
push
fild
xor
fisttp
sub
jo
inc
cmps
cmps
ja
adc
stc
fs
cmc
je
or
adc
test
jp
pushf
add
stos
push
jns
xor
dec
add
adc
jge
cmc
js
adc
and
std
lods
clc
call
sub
fneni(8087
mov
mul
sub
mov
test
push
test
mov
or
loopne
jnp
and
imul
sbb
cli
es
or
xor
in
and
and
arpl
or
dec
in
inc
je
mov
push
mov
stc
cmps
cs
aam
call
ret
and
out
into
int
movs
push
enter
in
pop
xor
lds
mov
push
lods
daa
push
mov
xor
mov
xchg
xchg
retf
and
rol
add
jb
pop
fidiv
loopne
cwde
mov
sub
mov
pop
lock
bound
mov
popa
cmp
ins
fwait
cmps
dec
fcom
and
pop
cli
pop
mov
hlt
mov
xor
fist
in
cmp
xlat
imul
add
jo
lods
jecxz
sub
push
cmp
xchg
mov
stos
push
xchg
pop
call
(bad)
dec
lods
inc
xor
xor
lahf
sbb
cwde
(bad)
add
cmp
xchg
iret
sti
sub
add
mov
shr
xchg
push
sub
ja
mov
(bad)
jmp
jg
dec
jne
adc
dec
xor
daa
pop
cmc
sbb
sub
push
mov
lods
or
xor
cmps
retf
xor
pop
mov
pop
shl
movs
fdivr
pop
pop
inc
aad
sub
cld
lahf
lahf
aad
lods
lods
test
mov
imul
cmp
stc
jmp
inc
lock
jmp
jnp
mov
mov
sub
scas
mov
scas
lea
repz
cmps
xchg
in
lods
scas
inc
(bad)
fild
or
cmp
push
fs
jae
dec
std
fs
pop
imul
cli
sar
scas
push
in
xor
add
adc
call
(bad)
je
sahf
sbb
push
pop
jp
aas
fidivr
push
int3
retf
fimul
mov
out
mov
jns
xor
(bad)
fild
stc
inc
fucom
(bad)
jb
xor
stc
adc
imul
out
hlt
test
aas
push
inc
inc
imul
dec
fnstcw
(bad)
mov
in
xchg
jmp
cli
adc
sub
jge
(bad)
pop
inc
or
push
daa
mov
dec
xor
test
ds
cmp
lahf
mov
jo
cmp
cli
(bad)
sub
pop
fsub
int3
dec
and
mov
xchg
ret
ja
mov
dec
leave
pop
mov
dec
aaa
(bad)
(bad)
adc
pop
mov
add
in
push
xor
sbb
push
mov
hlt
jb
fisttp
lods
fmul
jns
pop
sti
xor
mov
in
std
and
cmc
mov
inc
mov
push
pop
retf
sti
add
push
hlt
xor
adc
aam
cdq
(bad)
out
mov
inc
and
les
popf
aam
ins
cmc
scas
push
add
ficomp
cli
add
add
xor
sbb
dec
scas
pop
xchg
dec
and
sbb
jmp
mov
jl
push
aad
inc
jns
cdq
push
shl
mov
cli
cmps
fidivr
aas
jae
add
call
add
jmp
dec
cmp
fsub
rcl
mov
push
inc
aad
aam
and
adc
lods
cmps
mov
inc
push
and
jo
enter
jmp
jle
sub
add
pop
loopne
lea
mov
inc
cld
pop
push
jno
xor
mov
in
cmp
cmp
ret
xchg
pop
push
xor
js
repnz
push
nop
cmp
pop
movs
shr
movs
jmp
mov
dec
es
push
jp
outs
jae
add
adc
pop
retf
sub
adc
call
cld
or
fild
(bad)
mov
dec
sti
pushf
popf
jmp
sub
mov
mov
jmp
add
gs
inc
jecxz
add
neg
lods
push
test
rcl
mov
and
ficomp
or
pop
clc
mov
pop
adc
fsubr
inc
cmovp
out
push
inc
fwait
jmp
cld
push
sbb
ja
out
rcr
xadd
sbb
shl
fs
sbb
inc
add
add
neg
test
jae
outs
push
pop
dec
jb
aam
test
gs
test
push
cs
daa
and
sbb
mov
sub
(bad)
dec
adc
idiv
dec
ja
sub
dec
xchg
cwde
iret
add
adc
scas
mov
rol
inc
pop
pop
sbb
jbe
out
pop
add
aas
and
icebp
mov
rcl
xchg
push
xlat
push
scas
test
loop
xchg
not
mov
cwde
repz
inc
xlat
(bad)
cdq
out
mov
adc
cwde
pop
mov
and
ins
pop
ins
jnp
xor
stos
xchg
(bad)
mov
setge
inc
and
mov
dec
icebp
(bad)
pop
xlat
mov
shl
stc
inc
daa
mov
lods
xchg
push
mov
inc
addr16
inc
lss
dec
ret
mov
arpl
mov
iret
sti
pop
cld
and
sub
jecxz
imul
repnz
jl
mov
hlt
retf
test
fist
cmc
test
xchg
dec
addr16
xor
cmp
jl
push
fiadd
mov
and
pusha
mov
movs
xchg
inc
aam
inc
mov
jge
bound
sbb
cmp
icebp
cwde
push
pop
sub
test
sub
in
jne
inc
push
mov
jecxz
scas
add
cs
mov
adc
icebp
inc
xor
sbb
push
sbb
mov
push
adc
mov
xchg
fs
mov
nop
inc
out
jg
xchg
push
shr
outs
mov
and
pop
aaa
data16
movs
jmp
and
inc
xor
cli
icebp
(bad)
mov
(bad)
jnp
mov
repnz
enter
loope
es
cs
adc
loope
test
clc
(bad)
sbb
and
enter
icebp
xor
push
mov
repz
in
and
(bad)
fnstcw
jb
add
fisub
lods
pop
icebp
shl
mov
cmps
dec
lods
xor
daa
test
add
add
dec
lods
enter
mov
xchg
das
xchg
push
pushf
int3
ja
in
(bad)
fdivr
test
xor
mov
jecxz
xchg
fwait
sub
out
cli
xchg
xor
pop
and
xchg
call
xchg
hlt
inc
call
or
ror
jns
lods
aas
sub
les
sahf
fld
push
shr
fisubr
push
outs
arpl
cs
lea
pop
cdq
js
push
into
dec
jge
xor
inc
cmc
imul
ja
pop
retf
ss
mov
ja
or
mov
movs
fnsave
stc
lods
add
js
out
xchg
fild
mov
and
loopne
cmps
lea
mov
in
pop
push
fistp
sub
loope
arpl
gs
dec
sbb
jnp
jle
pushf
lods
fadd
cmp
sub
sar
cmp
sub
call
xchg
shr
repz
xchg
ror
mov
mov
addr16
aam
xor
and
sub
nop
add
push
mov
push
xchg
daa
jl
jecxz
aas
inc
retf
(bad)
xor
daa
or
jne
xor
cmps
shr
ror
xor
fs
pushf
ret
inc
xor
lock
push
inc
sub
sbb
dec
stc
enter
pop
outs
and
clc
out
xor
call
mul
test
idiv
ja
lds
mov
fild
imul
(bad)
out
(bad)
mov
jecxz
mov
pop
cmps
(bad)
jne
dec
inc
faddp
fcom
dec
sub
jle
sar
mov
push
jno
dec
xor
bound
xchg
mul
and
mov
push
or
add
xchg
popf
fisttp
cmp
std
sar
push
mov
sbb
jge
jmp
pop
mov
(bad)
pop
jmp
call
nop
jno
xor
fmul
cmp
stos
inc
push
mov
(bad)
lods
jns
mov
out
xchg
mov
ss
out
sbb
retf
fdivr
jle
mov
inc
dec
sti
fucomi
imul
jno
int3
pop
xor
sar
(bad)
xchg
push
int3
daa
jo
repnz
sub
fcom
mov
mov
imul
in
pop
movs
pop
add
dec
fsub
mov
pop
jo
in
test
cmps
push
jne
adc
arpl
inc
sbb
test
mov
pop
scas
push
inc
and
sbb
sbb
cmp
dec
scas
popf
ins
out
loope
outs
scas
clc
fisub
cmp
enter
xchg
fwait
inc
sbb
cpuid
outs
cmp
push
push
iret
and
pop
(bad)
fwait
js
adc
dec
sbb
sbb
sbb
mov
stos
jmp
repz
aam
jl
sbb
out
sub
cs
bswap
sub
retf
retf
test
es
arpl
dec
aad
bound
mov
add
pushf
and
dec
mov
cwde
and
inc
and
pop
jp
dec
and
popa
test
pmaddwd
jnp
ss
mov
pop
jp
jge
pusha
mov
dec
jo
movs
je
ins
and
cmps
dec
xchg
add
sub
and
inc
dec
lods
cli
clc
and
or
(bad)
retf
mov
and
fst
mov
push
jle
aaa
shr
frndint
dec
(bad)
movs
inc
test
int3
inc
sbb
sbb
mov
xlat
and
adc
ja
ret
and
ins
xchg
mov
aam
neg
push
xor
jecxz
inc
pop
xchg
ja
test
xchg
jg
xor
aad
mov
and
js
jno
popa
inc
mov
or
std
int
pop
xor
into
mov
and
fld
test
pop
int3
adc
inc
add
das
or
cdq
ret
pop
mov
jge
mov
jecxz
mov
lahf
add
out
adc
aas
retf
ret
jne
mov
push
mov
cmp
std
cmc
mov
cmp
inc
pop
push
leave
jl
retf
lahf
inc
jmp
aas
jge
sub
(bad)
mov
repnz
das
xchg
sbb
jbe
gs
jle
dec
dec
ret
(bad)
js
hlt
test
push
pushf
ss
test
cmp
out
pop
mov
adc
add
cmp
cmp
in
nop
pop
xor
xchg
jmp
fs
sub
push
push
out
pop
inc
cli
loop
jbe
js
dec
scas
cs
jmp
add
sbb
cmc
pop
pop
mov
shl
jp
adc
fdiv
dec
dec
mov
xchg
jmp
add
xchg
not
xor
ror
push
mov
mov
fsubr
adc
mov
inc
mov
jl
scas
fadd
and
sub
fistp
mov
int3
push
icebp
addr16
pop
in
getsec
(bad)
push
push
or
jns
cmp
xchg
clc
ret
mov
data16
in
mov
cmp
in
mov
push
movs
test
lock
sub
cmps
add
pop
cld
call
ins
repnz
ins
sub
retf
fstp
out
cli
aaa
ror
(bad)
xlat
daa
jae
in
in
cmps
jecxz
not
gs
enter
test
jb
rcl
push
(bad)
cmps
(bad)
and
aas
aad
mov
mov
test
dec
out
pop
push
fs
arpl
lds
aam
adc
mov
(bad)
jno
sbb
dec
push
outs
sbb
jmp
jno
mov
fadd
cmp
iret
cwde
push
push
mov
xchg
ss
inc
lds
and
jo
jmp
pusha
xchg
clc
inc
imul
jge
add
hlt
mov
mov
push
(bad)
jp
dec
adc
xlat
mov
add
xor
out
shr
push
out
lods
xor
cmps
outs
jl
test
test
es
push
cwde
xchg
mov
loope
in
or
ja
int
and
test
pop
(bad)
pop
inc
cdq
sbb
push
lock
icebp
adc
push
shl
jns
(bad)
push
fdivr
ins
loopne
xor
fdivr
xchg
cli
mov
push
or
mov
pop
shl
push
and
sub
ins
aas
sbb
inc
jge
mov
hlt
fcmovnu
jmp
sbb
fstp
mov
xchg
ret
mov
loopne
jecxz
jne
inc
cmp
ror
js
sti
dec
fild
add
mov
push
shr
cmps
or
adc
pop
loopne
mov
xchg
(bad)
jmp
dec
inc
loopne
xchg
mov
and
nop
pop
jmp
cld
pop
mov
mov
inc
(bad)
jg
jmp
ds
fistp
shl
pop
mov
fs
(bad)
(bad)
mov
in
jbe
jno
xchg
or
fmul
push
call
sbb
adc
xchg
sub
shl
imul
push
inc
inc
lahf
jmp
push
mov
add
std
sbb
aam
mov
in
loope
jmp
in
cmp
es
iret
fldl2t
add
cmp
ficom
and
cs
out
or
inc
test
out
xor
test
add
das
iret
jmp
jmp
adc
or
div
pop
sbb
icebp
sbb
jecxz
loop
arpl
sbb
dec
cwd
rcl
sbb
sub
or
jecxz
lock
mov
popf
inc
adc
mov
inc
xchg
sbb
mov
ret
out
xor
add
lods
mov
mov
ss
les
xor
lfs
cdq
sar
icebp
xchg
inc
lods
test
js
nop
fcomp
or
addr16
dec
int
shl
ficomp
adc
add
aas
outs
xchg
cdq
in
fs
dec
enter
(bad)
popf
push
inc
fdivrp
adc
xchg
sub
sub
fwait
lock
mov
stos
push
ins
ja
jne
jle
jbe
out
adc
push
push
or
hlt
aas
cmps
popf
inc
stc
mov
push
mov
pop
mov
pop
test
cmp
mov
and
enter
not
pop
mov
xchg
cmp
(bad)
stc
jl
jmp
adc
es
(bad)
addr16
jle
lods
bound
dec
xchg
or
cmp
lods
fs
aad
icebp
sbb
inc
lods
int3
lds
mov
push
jne
fbld
ins
shl
inc
cmp
xchg
xchg
add
mov
jmp
mov
call
lods
ror
movs
repz
pop
inc
mov
fsubp
lahf
leave
or
fmul
es
pop
repz
dec
fcmovnu
dec
mov
rol
jg
mov
enter
jp
xadd
pop
ja
pop
es
icebp
movs
and
mov
retf
test
sti
inc
push
pop
pop
add
sub
loope
pop
fidivr
sbb
pushf
(bad)
movs
fwait
imul
ja
sub
jl
ret
aas
loop
pusha
push
scas
push
dec
xor
sbb
in
sbb
rol
xchg
xchg
(bad)
(bad)
mov
(bad)
jge
push
daa
aaa
push
inc
icebp
and
(bad)
shl
scas
fadd
fiadd
and
mov
sbb
adc
dec
pop
sub
push
mov
fimul
imul
pop
sub
jo
jbe
mov
cwde
pusha
lea
or
mov
mov
sti
in
les
in
or
scas
mov
adc
scas
fs
dec
xchg
call
xchg
addr16
adc
sbb
test
mov
fsub
pop
popa
in
pop
adc
mov
in
push
inc
xchg
cmps
gs
cmp
jne
(bad)
jmp
pop
fs
jecxz
xchg
mov
xchg
ret
mov
push
into
cmp
jb
aaa
nop
sub
pop
ins
inc
mov
js
popa
sbb
lods
fidivr
call
jg
pop
add
jo
in
push
xchg
(bad)
mov
outs
dec
cs
cmp
mov
xchg
aaa
cld
xchg
sbb
rcl
xor
add
mov
stc
out
imul
(bad)
and
ins
outs
pop
lds
adc
mov
dec
enter
push
int3
or
mov
lock
les
mov
(bad)
jo
mov
mov
xchg
aas
xchg
inc
(bad)
jecxz
and
pop
sbb
push
fisttp
fdivr
sbb
test
and
out
mov
cli
mov
js
sbb
or
xchg
add
std
sub
cmp
test
push
push
dec
mov
mov
adc
pushf
sti
cmp
das
repz
and
js
dec
mov
out
sub
jge
mov
push
pop
stos
je
sub
stos
fisttp
pop
cmp
xlat
pop
fisubr
mov
xor
retf
sbb
xchg
mov
adc
mov
and
aas
div
jecxz
inc
in
inc
sub
jns
les
xor
out
pop
add
mov
push
cmp
retf
out
frstor
inc
lds
inc
movs
jecxz
inc
sub
pop
sub
push
pop
or
ror
or
pusha
sbb
call
fdiv
aam
ja
fwait
idiv
and
sub
rol
lock
mov
jg
cmps
ffreep
mov
sar
fistp
jl
add
inc
stos
mov
xchg
mov
stos
fdiv
xor
pop
jp
xchg
pop
in
(bad)
sbb
mov
ins
pop
mov
jbe
cmovbe
mov
xchg
stc
sbb
pop
dec
daa
xchg
pop
jno
or
xor
(bad)
iret
(bad)
pop
mov
push
mov
jmp
or
jg
mov
mov
(bad)
adc
add
add
xor
loope
pop
and
xchg
aas
adc
jecxz
mov
das
xchg
ins
popa
pop
jae
aas
inc
cmp
mov
add
hlt
sub
cmp
movs
mov
xchg
out
repnz
mov
pusha
dec
mov
aad
pop
and
sbb
(bad)
sbb
mov
(bad)
push
and
pop
bound
lock
test
pop
les
mov
ja
and
sub
out
sti
xchg
xlat
or
mov
or
dec
dec
jb
inc
dec
jb
repz
adc
in
ret
sub
pusha
jge
mov
hlt
je
loope
loop
nop
inc
mov
fs
mov
pop
outs
cmp
pusha
(bad)
std
push
dec
adc
scas
pop
mov
xchg
sti
mov
add
jmp
loopne
inc
int3
mov
test
inc
daa
fsubr
out
mov
inc
cmp
dec
dec
cwde
xchg
adc
js
int3
out
xor
bound
call
sub
mov
or
call
imul
icebp
cwde
bound
add
mov
dec
sbb
pop
call
sbb
gs
cmp
sahf
fcomp
fwait
inc
mov
pop
inc
mov
cmc
cwde
mov
in
retf
mov
mov
xchg
xchg
out
pop
jbe
bound
adc
mov
(bad)
in
ss
ins
xchg
gs
mov
ja
aam
pushf
outs
mov
push
xor
daa
and
mov
es
imul
fwait
aaa
sbb
call
hlt
mov
cli
pop
test
imul
test
pop
pop
aad
xor
sar
jge
movs
sbb
inc
int
and
xchg
mov
(bad)
push
fstp
popa
sti
sub
shl
pop
test
jp
loope
push
cmc
arpl
mov
repnz
add
pop
xor
mov
in
pop
mov
inc
mov
mov
mov
lods
sahf
aam
push
push
in
icebp
daa
scas
inc
mov
sub
xor
(bad)
push
dec
fcmovb
adc
and
mov
fdivr
stos
mov
mov
xor
into
dec
out
int
pop
mov
jle
out
enter
out
dec
pop
push
fdivr
fldenv
jo
cmp
pop
xchg
xor
cli
(bad)
idiv
retf
sahf
jb
sbb
jecxz
or
ins
mov
dec
push
and
popa
call
mov
jge
pop
fs
loope
push
cmps
sti
push
movs
(bad)
out
call
data16
stos
repnz
mov
inc
mov
cmp
iret
mov
movs
jl
ins
xor
fsubr
add
cmps
ror
clts
mov
sti
xor
sub
retf
fiadd
fs
(bad)
fcmovnb
outs
adc
xchg
out
mov
mov
pushf
pop
lahf
stos
add
jne
fwait
jmp
aam
pop
inc
sbb
pop
add
scas
popf
and
push
add
or
in
and
push
pop
mov
fistp
mov
push
cmp
pop
jns
clc
inc
pusha
lods
cmp
(bad)
loop
in
mov
xchg
outs
lds
xchg
js
cmc
fdivr
or
fmul
jle
call
xchg
icebp
mov
imul
out
fistp
call
adc
adc
mov
icebp
jnp
movs
fistp
jp
stc
mov
add
stos
dec
add
mov
sar
fbld
test
call
xchg
mov
gs
xchg
out
iret
aaa
in
in
or
jg
pop
stos
and
sub
mov
scas
hlt
or
test
jo
fisttp
jne
mov
ds
ins
outs
xor
enter
inc
les
adc
xchg
pop
push
push
pop
ret
stc
sub
and
pop
jns
push
sbb
inc
les
and
test
sti
jmp
shl
inc
xor
popf
add
out
aaa
addr16
arpl
and
or
mov
das
xor
add
sub
mov
push
push
in
imul
jae
ds
jge
xchg
pop
(bad)
shl
test
fadd
ja
or
mov
fstp
pop
cld
ins
popa
aas
aas
xor
nop
jp
add
(bad)
ret
fist
push
es
in
out
lea
ret
add
fadd
test
push
fwait
(bad)
arpl
int3
xchg
push
jmp
xchg
in
es
movs
jmp
inc
push
in
ds
mov
es
xchg
int3
int
dec
dec
in
push
mov
push
jl
xchg
xchg
(bad)
push
pop
mov
ja
dec
cmp
adc
and
lods
xchg
out
call
bound
iret
dec
jne
das
setbe
repnz
jl
rol
sbb
mov
(bad)
xor
push
jle
out
fmul
dec
clc
and
gs
and
push
(bad)
xlat
xlat
jle
sbb
mov
loopne
push
push
movs
retf
pop
jmp
lods
imul
popa
test
sbb
in
rcr
or
xchg
and
xor
adc
add
sbb
or
inc
mov
pop
and
test
push
xchg
mov
xchg
push
push
add
aam
or
xchg
nop
push
push
mov
out
ret
inc
(bad)
xchg
scas
in
pop
lods
mov
xchg
sbb
sub
jl
mov
jmp
mov
aaa
dec
sbb
ror
(bad)
pop
jmp
fiadd
inc
jnp
pop
(bad)
mov
add
push
icebp
push
xchg
ins
add
fwait
lahf
adc
add
es
push
dec
inc
(bad)
scas
and
mov
jg
xchg
outs
mov
mov
cmp
outs
mov
and
enter
js
adc
cli
mov
fwait
imul
xlat
push
sub
pop
inc
stc
push
loop
bound
jp
lea
in
inc
or
dec
test
ret
adc
push
mov
sbb
pop
jp
ror
out
jecxz
add
xchg
nop
nop
xchg
add
add
ss
hlt
pusha
push
enter
sbb
xor
cli
loope
dec
cdq
mov
mov
inc
cs
mov
fistp
test
mov
sbb
cmp
cmps
push
lods
inc
ret
or
jecxz
dec
xor
sbb
push
div
(bad)
jecxz
cwde
aam
jo
jae
jo
lds
cwde
fisttp
dec
and
imul
push
icebp
pop
push
pop
or
mov
or
jo
adc
mov
pop
pop
mov
aas
jns
pop
pop
xchg
mov
or
cld
(bad)
fisubr
inc
dec
cmc
stos
arpl
pop
lods
fimul
and
inc
jno
cli
inc
push
ins
mov
xor
nop
lock
inc
fstp
fs
cmp
xchg
and
stos
jmp
mov
ret
cdq
mov
pop
test
mov
ss
sub
sub
ret
lea
push
inc
fnstcw
out
and
push
inc
popf
stos
pop
outs
push
jecxz
inc
inc
mov
mov
(bad)
out
add
or
test
aad
mov
mov
sar
mov
inc
sti
jbe
sbb
retf
push
dec
jns
retf
pop
aas
out
movs
pop
dec
adc
xchg
std
pop
loop
fdivr
push
inc
jmp
jle
imul
loope
cmp
push
or
cmp
sbb
adc
ss
jbe
cmp
test
adc
mov
call
shl
xor
mov
test
stos
sbb
jo
xchg
iret
mov
jmp
pop
ds
or
std
ja
xor
fs
loope
fsubrp
sbb
mov
imul
xor
push
dec
fsub
fdivr
adc
jmp
out
repz
in
pop
add
inc
retf
dec
sub
stos
fxch
sbb
sahf
js
mov
call
popa
mov
add
(bad)
loop
in
adc
xchg
xlat
test
jmp
xor
sub
adc
mov
sbb
sub
(bad)
cmps
ins
dec
adc
aaa
clc
push
dec
add
in
jae
xchg
shl
cmova
dec
jno
movzx
mov
loop
mov
imul
push
fisubr
stos
stos
push
shl
out
cmp
test
dec
xor
jbe
outs
push
cld
call
cmps
aaa
adc
jns
xchg
xor
int3
jmp
xlat
dec
(bad)
jmp
das
shr
jae
and
sti
jmp
aaa
ficom
adc
jo
dec
fnstenv
sbb
loop
push
loop
push
ja
push
ds
and
fisubr
bound
repnz
xor
dec
sbb
push
sub
dec
test
rcr
dec
cmp
inc
push
pop
imul
push
mov
stc
jbe
or
pusha
push
pop
mov
sti
inc
sub
mov
repnz
aam
int
mov
ret
hlt
jecxz
jo
js
mov
xchg
push
sbb
sahf
mov
mov
(bad)
jecxz
or
pop
xchg
fimul
jo
scas
gs
in
pop
ds
jmp
push
mov
call
xchg
jne
pop
out
arpl
mov
loopne
retf
jmp
not
outs
sub
push
sti
sub
or
adc
icebp
ins
mov
fisttp
dec
xchg
(bad)
dec
rol
int
mov
out
sub
in
jnp
ret
or
cmp
mov
pop
mov
aaa
add
add
jno
xor
test
sar
rcr
gs
fstp
pop
dec
push
mov
sub
sub
fadd
push
jae
xchg
jecxz
sti
xchg
xchg
mov
cmp
xchg
movs
pop
aas
aaa
(bad)
mov
or
add
push
mov
test
jns
cld
lea
jg
adc
(bad)
cld
xchg
pop
push
push
xchg
or
xor
mov
inc
jnp
mov
ret
retf
xor
sahf
pop
mov
in
mov
test
dec
xchg
pop
pop
test
mov
mov
sti
sbb
movs
imul
dec
sti
sbb
shl
ficom
and
xor
mov
fisubr
pop
pushf
popf
cwde
ret
lea
sub
mov
sbb
cdq
and
neg
jg
and
cld
xor
jno
adc
out
cs
add
mov
nop
pop
lods
pop
adc
lods
push
bnd
cmp
jbe
das
pop
or
popa
les
aad
sub
push
xchg
or
arpl
shl
push
pop
cwde
movs
shr
(bad)
mov
xor
jmp
test
add
fst
pop
shl
out
lahf
sbb
sub
fs
adc
sub
dec
inc
cdq
xchg
(bad)
in
arpl
jnp
push
jmp
adc
pop
neg
pop
dec
jmp
inc
mov
add
jne
pushf
movs
(bad)
pusha
cli
dec
pusha
add
xor
cmp
ja
adc
pop
inc
daa
push
mov
cmp
retf
loopne
sbb
jno
sbb
push
pop
sbb
jo
sbb
mov
sbb
bnd
add
mov
rcr
jl
out
mov
jno
or
setle
inc
stos
and
sub
ret
mov
add
xor
pop
mov
jns
shl
pop
push
push
sub
cwde
mov
push
test
call
das
das
push
or
js
mov
xchg
movs
and
stos
push
mov
(bad)
jl
dec
add
pop
push
shl
ret
fwait
jo
xchg
cmp
sbb
ja
int3
adc
(bad)
mov
das
icebp
or
repnz
sysenter
retf
stos
sar
push
mov
pop
xor
inc
loope
clc
mov
push
ret
sbb
jl
adc
lds
outs
scas
popa
shr
cmps
and
jbe
jmp
adc
cmc
stc
mov
adc
inc
or
shl
sahf
cli
fld
repnz
pop
cmp
jns
fidiv
or
cmps
xchg
sbb
mov
jo
sub
push
test
add
ss
(bad)
shl
ret
jl
popa
into
dec
cld
daa
jmp
pushf
push
cmp
jae
cmp
arpl
adc
test
enter
sub
jne
xor
in
mov
lds
add
or
cmps
add
cmp
pushf
rcl
jnp
jge
je
(bad)
hlt
xchg
lods
xor
clc
jg
push
rcr
xchg
daa
clc
aas
mov
dec
sub
pushf
cmp
add
in
jecxz
sbb
add
frstor
pop
mov
pop
sub
mov
xchg
pop
add
stos
stos
rol
pop
int3
mov
xor
int3
int
test
aad
dec
jmp
cmc
mov
retf
or
scas
jl
inc
xor
push
xor
lea
push
scas
aad
jne
and
sub
ss
loopne
movs
push
(bad)
aad
out
bound
pusha
xchg
in
lock
sub
test
cdq
mov
push
xchg
pop
sub
pop
jmp
sti
loop
fwait
aas
mov
movs
in
loopne
push
jo
pop
mov
mov
adc
xchg
pop
shr
fisub
pop
movs
js
icebp
add
push
add
xchg
test
div
pushf
push
mov
out
outs
mov
bound
es
add
je
pop
scas
dec
lods
(bad)
pushf
loopne
mov
mov
iret
inc
out
(bad)
ret
dec
retf
mov
mov
mov
loope
ror
pop
fs
aad
nop
sub
add
mov
aad
push
xchg
xlat
in
mov
inc
out
or
arpl
(bad)
rcl
test
add
push
pop
into
retf
test
out
sub
mov
inc
jecxz
xor
imul
jns
mov
or
(bad)
scas
in
addr16
stos
cmp
cli
push
clc
nop
inc
mov
out
mov
jl
aam
scas
js
dec
jbe
cmps
retf
push
mul
loopne
(bad)
out
pop
sub
add
add
ins
or
push
mov
lods
mov
sbb
daa
push
jmp
outs
ds
shl
sbb
into
sub
adc
leave
gs
pop
mov
in
imul
mov
hlt
loope
out
adc
out
jbe
enter
xor
xor
mov
les
std
cld
vmovd
mov
adc
adc
sbb
adc
lea
pop
xor
sub
add
paddusw
pop
xor
in
gs
enter
ficomp
repz
and
mov
ss
add
or
in
out
xchg
push
pop
in
bound
fidivr
stos
mov
inc
adc
push
retf
mov
retf
pop
push
sbb
or
or
fs
xchg
popf
mov
mov
inc
(bad)
jecxz
ja
imul
in
lea
adc
and
inc
xchg
xchg
mov
dec
push
movs
es
not
push
in
pushf
inc
push
mov
jmp
in
scas
iret
adc
sbb
pop
pop
pop
pop
aaa
dec
fisubr
inc
movs
push
adc
jmp
sub
inc
push
or
cmps
add
add
retf
xlat
test
jne
xchg
jns
sub
out
ss
in
mov
sub
jecxz
and
cdq
ja
pushf
pop
pop
add
add
mov
add
call
ror
cmp
mov
call
shl
cmp
fld
ret
dec
xchg
repz
jne
lock
mov
dec
add
mov
retf
rcr
shr
sbb
in
jmp
mov
ret
lods
pop
pushf
inc
aam
aad
popa
adc
div
push
push
mov
es
push
dec
push
wbinvd
jmp
cdq
push
out
mov
push
xor
add
mov
inc
test
fdivr
loop
mov
sahf
daa
test
push
or
add
clc
adc
adc
fmul
iret
popa
adc
or
jmp
data16
push
dec
pop
push
loopne
shl
(bad)
cmp
repz
cs
mov
mov
enter
loop
inc
adc
jnp
arpl
xor
xor
lsl
mov
dec
test
in
xchg
adc
shl
icebp
or
idiv
dec
data16
pop
mov
mov
dec
or
stc
mov
or
dec
iret
sub
push
jmp
addr16
shl
shl
enter
dec
dec
mov
xchg
add
push
jne
pop
cmp
sbb
mov
sub
cmp
push
mov
xor
dec
inc
sbb
mov
xchg
sbb
xchg
fsubr
inc
in
dec
(bad)
in
jmp
aas
xchg
mov
(bad)
call
mov
xor
jecxz
popf
jle
mov
inc
aas
xchg
loopne
adc
inc
int3
pop
pusha
in
call
mov
retf
jg
or
shl
fs
out
dec
mov
mov
pop
mov
push
call
mov
or
jmp
and
sub
push
test
sahf
inc
imul
movs
mov
outs
pop
in
js
fcmovnbe
xlat
stc
jb
pop
xchg
pop
iret
dec
lea
cwde
aas
mov
mov
arpl
xor
push
fwait
inc
jb
pusha
push
adc
popa
leave
mov
sahf
stc
cli
xchg
popa
cmp
mov
sbb
out
dec
mov
or
cli
pop
mov
nop
add
mov
fs
dec
cmc
sbb
daa
js
jo
fbld
bound
scas
dec
test
enter
mov
dec
fcom
leave
adc
lahf
mov
ror
xor
je
scas
sub
dec
sub
lods
ins
xor
sti
jle
(bad)
retf
push
ins
iret
shl
cmp
mov
jne
cdq
mov
out
arpl
or
ret
inc
nop
andps
and
pop
cmc
add
sub
mov
test
mov
sub
inc
push
stos
aaa
inc
js
and
adc
cmp
enter
dec
sub
lods
lods
ins
sbb
push
call
mov
popa
mov
cmps
ins
outs
sti
div
sbb
sbb
retf
jmp
sub
(bad)
(bad)
repnz
jo
mov
movs
cdq
xor
cmp
stos
jl
cmp
xor
jecxz
iret
mov
and
and
test
aad
add
movs
fcom
adc
push
push
jp
push
ffreep
fs
(bad)
mov
outs
pop
arpl
test
cld
fmul
cmp
std
adc
mov
imul
sar
enter
cmp
ins
test
dec
enter
int
icebp
lods
(bad)
or
or
jmp
sbb
mov
and
inc
popf
push
jecxz
jnp
enter
pop
dec
xor
fbstp
push
(bad)
jne
jne
inc
outs
mov
lock
retf
jns
std
pusha
out
mov
dec
jge
imul
out
xor
(bad)
pushf
ret
push
aad
sub
sbb
in
ss
daa
xor
(bad)
sar
int3
pop
cld
or
aam
ret
mov
push
and
sar
call
jae
test
xor
(bad)
cld
mov
cmp
dec
xchg
clc
enter
jb
sti
sti
push
inc
fsub
je
pop
mov
jmp
sub
adc
scas
hlt
pop
mov
jnp
cmps
or
shr
scas
cmp
outs
addr16
inc
stos
lock
adc
(bad)
mov
push
ja
pop
enter
mov
xchg
cdq
aas
xchg
leave
das
mov
adc
lods
dec
cld
cmp
mov
lods
cdq
pop
and
cmp
loop
imul
pop
stos
scas
push
inc
fwait
cmc
push
jl
jle
mov
cmp
call
add
sub
xor
fs
sbb
iret
inc
dec
inc
ds
inc
leave
push
push
jnp
lods
add
or
sbb
push
pop
push
mov
retf
mov
jmp
pop
and
jmp
test
push
pop
movs
out
add
int3
mov
jge
or
fbstp
add
and
or
aad
ror
loopne
shl
sbb
movs
mov
enter
push
inc
push
adc
retf
aad
enter
(bad)
pop
retf
in
mov
fmul
dec
sahf
xchg
mov
call
ret
adc
or
or
inc
dec
cli
pop
sub
fs
stos
xchg
jge
jne
inc
and
hlt
ins
mov
imul
mov
out
popa
mov
sbb
pop
jnp
add
nop
loope
ret
push
sub
jb
mov
xchg
lock
cmc
popa
xchg
enter
xchg
mov
into
lds
or
aad
xor
mul
pop
xor
sub
dec
mov
mov
sbb
push
mov
imul
movs
jo
sub
std
and
outs
dec
add
xor
test
out
rcl
adc
push
repnz
cmp
and
inc
sbb
sub
mov
es
and
sbb
xchg
or
adc
jmp
mov
(bad)
mov
loop
mov
mov
mov
push
enter
retf
dec
stos
js
in
(bad)
xor
pop
into
jns
xor
pop
mov
imul
pop
retf
bound
sub
shl
sbb
out
and
and
fld
(bad)
jns
stos
rcl
cwde
dec
jge
push
xor
adc
cmp
sahf
mov
xlat
xor
add
mov
addr16
jnp
mov
imul
test
or
xchg
test
inc
push
leave
fist
sub
and
xchg
push
jne
hlt
lods
ds
ins
pop
inc
sbb
and
xchg
xlat
int
ret
lea
ds
mov
or
fstp
bound
aaa
outs
sub
lods
dec
add
bound
loope
mov
sar
enter
pop
std
adc
mov
cdq
rcr
sar
in
sti
jb
js
pop
add
(bad)
div
ins
icebp
cmc
xchg
das
bound
shl
(bad)
stos
data16
jnp
or
mov
push
add
adc
lea
jge
lahf
daa
rcl
inc
pop
mov
sub
and
jb
test
jmp
mul
leave
pop
mov
(bad)
mov
hlt
xchg
popf
nop
cmp
hlt
retf
cmps
sahf
nop
pop
iret
in
out
jae
(bad)
push
cmp
inc
out
or
test
popa
inc
call
(bad)
loopne
test
or
xor
int3
pushf
fs
mov
jo
in
adc
push
test
popf
dec
mul
scas
cmp
mov
nop
jae
stos
int
es
aas
(bad)
sbb
popf
inc
(bad)
sti
ds
add
rcl
loopne
sub
push
push
stos
out
loop
xor
fcomp
icebp
jns
mov
into
mov
fs
push
stos
mov
jecxz
(bad)
jns
or
fs
idiv
(bad)
dec
popf
mov
mov
jle
in
jmp
fwait
(bad)
jl
mov
fst
xor
pop
movs
xor
xor
ins
and
out
xor
in
test
push
sbb
movs
sub
jae
jp
call
xor
jo
cwde
push
aad
pop
shl
xchg
loopne
jge
mov
mov
sub
mov
push
mov
ror
ret
outs
loopne
push
repz
pop
inc
inc
inc
lea
fcom
and
sub
jl
dec
mov
test
adc
dec
jb
add
adc
xor
dec
dec
and
repnz
jecxz
icebp
popa
iret
pop
mov
retf
push
js
xlat
pop
jb
fwait
dec
pop
(bad)
pop
and
popa
out
xor
cmps
ja
mov
and
lods
mov
cmc
sub
sbb
jne
in
not
mov
jecxz
hlt
xor
movs
and
lods
mov
push
test
cmp
and
adc
cdq
mov
mov
sub
xor
or
inc
xor
rol
push
(bad)
jecxz
cmp
dec
add
fild
repz
fadd
and
pop
or
pushf
sbb
push
(bad)
fwait
scas
inc
hlt
shr
sbb
fist
ror
dec
imul
imul
cwde
cmps
mov
push
int
(bad)
pop
(bad)
arpl
push
rol
cmp
sub
imul
xor
inc
mov
push
popa
push
ins
ins
inc
sbb
inc
scas
shl
mov
nop
lods
pusha
outs
add
push
ds
sbb
mov
test
shr
jmp
mov
nop
sub
xchg
mov
outs
dec
jnp
movs
push
daa
imul
cmp
dec
push
mov
xor
push
mov
stc
xchg
jmp
or
out
or
add
mov
jno
sbb
and
jecxz
sub
mov
xchg
mov
arpl
mov
popa
push
popf
aas
adc
dec
ja
movs
xchg
adc
mov
mov
pop
sub
cmps
xor
div
in
fsubr
sbb
mov
and
jne
mov
xlat
mov
dec
or
jne
cld
aam
push
dec
inc
cmc
ret
sbb
jbe
pusha
aad
shr
jmp
xchg
fdivrp
mov
out
jb
sbb
(bad)
mov
mov
rcl
imul
xchg
mov
push
cmps
dec
pop
test
jb
jge
adc
mov
(bad)
mov
aaa
adc
mov
pop
fiadd
dec
rol
mov
hlt
mov
xchg
aad
out
mov
cdq
call
xchg
gs
xor
sub
cmp
in
test
jle
mov
nop
pop
xor
add
aas
ss
mov
adc
and
jmp
adc
jns
in
jns
inc
inc
rcr
add
push
jne
sbb
mov
ins
adc
arpl
loope
cmp
daa
xchg
push
aam
xor
leave
or
(bad)
int3
xor
inc
jae
retf
inc
push
fnsave
jns
loope
pop
pop
das
xchg
(bad)
cmps
jae
clc
bound
test
sub
shr
push
mov
cmp
mov
jle
ss
hlt
les
in
and
aad
jecxz
bswap
inc
test
mov
add
loopne
and
add
mov
fcomp
dec
or
lock
mov
mov
xchg
sub
pop
sub
push
xor
cwde
xor
cmp
(bad)
repz
cs
sahf
retf
pop
fstp
(bad)
pop
(bad)
push
ja
es
retf
push
or
xchg
loope
scas
mov
icebp
imul
add
arpl
add
and
(bad)
fmul
shr
ret
jns
fdivr
xlat
aam
jbe
xor
mov
icebp
and
mov
mov
inc
fsubr
xor
mov
push
mov
arpl
pop
nop
sub
cmp
mov
push
call
jnp
ins
push
retf
fld
and
mov
leave
mov
sbb
inc
mov
shr
pop
sti
jo
fs
outs
cs
popa
cli
daa
int
loope
push
sbb
int3
jns
mov
js
not
cdq
iret
retf
jno
ja
jae
ret
(bad)
dec
mov
add
repnz
jmp
or
jecxz
jl
shl
int3
pop
(bad)
cdq
add
mov
sub
adc
jmp
fbld
or
div
push
mov
std
mov
les
adc
xor
clc
mov
mov
jo
bound
adc
loopne
mov
inc
movs
mov
lahf
jae
mov
xchg
mov
push
cmps
out
inc
shl
add
js
in
jne
aas
jecxz
sub
in
mov
sti
push
data16
stc
push
mov
pop
mov
inc
mov
xchg
add
std
or
mov
in
jno
shr
sub
mov
fbstp
in
jmp
movs
mov
sub
adc
ror
and
retf
outs
cli
outs
pop
jecxz
ins
aas
ja
or
clc
xor
xchg
aas
sub
xlat
lock
xchg
shl
call
mov
test
cmp
xchg
(bad)
push
int3
shl
add
(bad)
bound
rcr
cmc
shl
mov
sbb
mov
or
fimul
hlt
ja
popa
icebp
cmps
mov
cmp
cld
lds
mov
(bad)
in
(bad)
and
add
or
jge
mov
scas
test
cld
leave
xchg
shr
lds
out
ins
mov
push
mov
fsubr
out
movs
cmp
movs
fwait
ret
cmc
add
mov
pusha
loopne
es
mov
inc
ds
jbe
retf
inc
inc
loope
mov
xor
lea
test
loopne
cmp
aas
repnz
lahf
and
repz
cmps
test
in
hlt
mov
jae
sub
sub
and
(bad)
fmul
ud0
jmp
mov
mov
test
(bad)
push
es
lods
pop
xor
inc
pop
xor
mov
in
add
add
sub
xor
ja
sub
out
dec
xchg
popf
and
mov
jb
aaa
sbb
fcomp
iret
cmp
arpl
aad
jmp
jne
mov
mov
pusha
imul
inc
fld
push
ins
ja
aam
jb
cmc
rcl
and
xor
sub
jb
retf
sub
lock
ret
mov
fisttp
stos
mov
cmp
xor
jle
adc
push
je
(bad)
lahf
fiadd
fist
cmp
vhaddps
call
sub
leave
retf
dec
adc
or
dec
or
push
lock
jno
imul
inc
in
(bad)
mov
and
retf
imul
dec
dec
xchg
sub
xchg
jno
movs
sbb
xchg
ror
jmp
cs
and
jg
ret
ins
ss
xor
jae
call
int3
xor
and
push
cs
mov
pop
cwde
movs
retf
jle
js
adc
mov
push
xlat
xchg
and
inc
pop
das
mov
nop
aaa
xor
xor
sub
mov
or
addr16
push
aad
stos
xchg
push
dec
int
(bad)
stc
inc
mov
jle
jle
dec
inc
add
jae
dec
mov
sub
ja
sub
xchg
rcl
dec
inc
push
add
cmovl
fucomi
sbb
and
mov
push
jmp
jl
mov
sbb
add
mov
aad
xchg
fld
jo
adc
and
test
retf
cwde
stos
jge
or
jbe
xchg
call
pop
outs
cmp
(bad)
and
dec
mov
pop
je
xchg
mov
or
popa
iret
adc
nop
out
repz
retf
or
sub
xchg
pop
into
sar
mov
xchg
and
mov
shl
pop
sub
in
les
push
pop
add
mov
cmc
add
stos
xor
sahf
pop
outs
pop
movs
retf
fcmovu
lods
cs
out
(bad)
retf
xchg
inc
repz
(bad)
xor
push
inc
cmps
pop
out
mov
cmp
ins
inc
cld
lock
inc
(bad)
push
retf
lock
jae
aas
out
aad
adc
ds
and
inc
xchg
stc
cmp
cdq
xchg
test
inc
cmp
sahf
aas
mov
xor
lods
inc
adc
inc
ja
int
xor
push
dec
mov
movs
iret
push
push
add
shl
xchg
pop
add
out
inc
adc
bound
icebp
jge
imul
sbb
imul
ja
mov
out
loope
inc
inc
mov
push
stos
in
in
and
test
les
sar
cmp
sbb
add
scas
adc
push
addr16
pop
mov
fild
stos
imul
jno
inc
daa
adc
or
(bad)
outs
repz
shr
sbb
xchg
mov
ret
(bad)
rcl
(bad)
shl
test
xor
inc
pusha
repnz
test
ins
call
loopne
cmp
(bad)
pop
pop
nop
sbb
mov
popa
cmp
pushf
xor
push
push
outs
jg
fld
inc
cld
push
cld
and
lahf
stc
retf
mov
gs
arpl
je
push
lods
inc
push
fst
mov
fs
fwait
fwait
nop
jle
fiadd
aas
enter
or
mov
fadd
cdq
sub
(bad)
push
add
add
push
xor
movs
jmp
out
and
gs
and
lahf
jnp
stos
jae
or
call
sbb
jmp
add
mov
cmp
or
neg
or
xor
adc
xor
push
rcr
dec
int
test
retf
cmps
mov
push
test
lahf
addr16
cmp
mov
arpl
gs
ret
aas
xor
leave
push
(bad)
jmp
xor
push
daa
ficomp
pop
test
mov
push
js
push
cmp
(bad)
popa
jnp
dec
push
retf
xor
test
cwde
mov
ret
or
les
sbb
push
pop
stos
xchg
mov
jge
aaa
adc
test
test
imul
inc
arpl
add
or
stc
data16
jbe
jmp
pop
mov
xor
adc
loope
mov
sbb
adc
jns
sahf
mov
test
add
add
repnz
add
das
pop
(bad)
std
pop
mov
jae
test
cmp
(bad)
sti
ss
mov
mov
jns
aas
aam
dec
fcom
fdiv
and
call
out
xchg
adc
or
jmp
cmp
push
cmp
jg
test
arpl
in
mov
cmc
fsqrt
aad
popf
sub
lahf
inc
ds
pop
jg
ret
xchg
and
js
leave
mov
sub
addr16
aad
fwait
imul
xchg
mov
shr
fst
(bad)
mov
adc
or
cli
hlt
repnz
mov
data16
pop
out
and
in
aaa
(bad)
repnz
and
gs
sti
adc
mov
or
jg
pop
push
inc
cmp
jmp
rcl
push
sub
out
pop
pop
jge
adc
fld
pop
(bad)
retf
repnz
push
adc
div
js
sbb
and
mov
add
cmp
add
mov
mov
and
sub
mov
pop
ret
lahf
mov
xor
movs
pop
xor
sub
pop
inc
adc
cmc
xor
into
inc
sbb
add
xor
and
fscale
out
jmp
aam
push
push
jg
stos
popf
ja
or
aam
lods
ss
mov
add
pusha
(bad)
int
pop
mov
mov
jmp
xchg
jl
mov
sub
mov
sti
(bad)
imul
push
inc
xor
sar
rcr
xchg
clc
pop
(bad)
(bad)
(bad)
xor
xchg
aad
fwait
sub
cs
out
xor
jp
inc
mov
rcr
jmp
xor
sti
mov
xchg
in
mov
sub
aad
xor
call
jno
pop
sar
ror
cmp
add
fist
add
or
inc
mov
jge
dec
jo
addr16
rcl
sub
loopne
and
push
movs
icebp
push
mov
rol
inc
into
adc
call
xchg
scas
jns
mov
(bad)
xlat
das
nop
lods
dec
and
jl
fist
xor
push
fstp
inc
mov
cmps
ds
jbe
xor
fist
in
cs
aad
pusha
add
mov
cmp
rol
call
scas
xor
mov
stc
jmp
ss
add
enter
or
sti
xchg
bound
lods
cli
(bad)
iret
jmp
fstp
ret
shl
jmp
int
sbb
mov
(bad)
cwde
dec
push
sub
inc
mov
push
repz
aam
test
and
fdivr
mov
xchg
jbe
mov
xchg
outs
add
dec
adc
data16
daa
push
xchg
(bad)
and
cmp
or
mov
test
adc
mov
or
vmovsd
adc
xchg
mov
pop
jno
and
pop
int
test
add
jno
dec
mov
(bad)
mov
imul
mov
clc
cdq
test
fcmovbe
sbb
jp
pop
inc
dec
push
sbb
mov
push
nop
jae
inc
fwait
outs
das
or
ds
es
pushf
xlat
xchg
pop
fcomp
pop
dec
daa
scas
jmp
adc
adc
mov
adc
lods
push
nop
add
dec
rol
out
inc
mov
jp
aas
daa
pop
sbb
and
into
sahf
test
ds
movs
jo
(bad)
pop
add
test
pop
cmps
stos
loopne
pusha
gs
push
std
(bad)
dec
xor
stos
lods
add
out
pushf
jmp
call
loopne
pop
fist
inc
dec
cdq
movs
(bad)
hlt
inc
mov
aaa
daa
stc
es
test
std
movs
cmp
int3
push
leave
mov
movs
cli
xchg
and
jmp
mov
ret
push
cmp
fsub
sbb
daa
js
lock
mov
mov
jg
pop
cmp
ja
xor
jl
fs
mov
imul
jns
(bad)
je
or
clc
(bad)
out
xchg
ss
jl
dec
xchg
rol
ins
adc
(bad)
int
fiadd
push
out
and
xchg
or
sbb
lods
in
push
pop
push
jns
jb
(bad)
in
push
cmp
test
mov
mov
push
mov
push
test
call
sbb
out
(bad)
xchg
push
retf
and
test
fwait
adc
inc
jo
or
jp
adc
xor
into
call
lock
lods
inc
mov
sbb
fcom
cli
add
js
cwde
xor
xchg
jb
movlps
add
ss
sbb
inc
mov
inc
push
inc
cmp
sub
pop
jle
rol
xlat
xchg
jecxz
jb
cmc
and
push
daa
add
out
jmp
ja
lods
aas
jbe
push
out
fimul
mov
cmp
nop
sbb
cmps
(bad)
ret
inc
jbe
rol
test
callw
mov
rol
(bad)
pop
or
mov
in
cwde
aas
scas
mov
outs
or
pop
jb
jge
push
rcl
pop
stos
sbb
(bad)
add
aad
scas
jnp
sbb
pop
pop
out
std
lods
mov
jl
cmp
aam
stos
xlat
addr16
shl
inc
data16
retf
shl
jb
mov
and
cmps
fst
stc
adc
adc
shr
aam
sub
les
out
cdq
mov
mov
mov
add
dec
aas
ds
xor
push
out
or
jae
jg
jns
(bad)
adc
(bad)
mov
xchg
xchg
fidiv
loop
mov
mov
and
sar
test
mov
xor
scas
dec
fist
repz
enter
add
jle
mov
dec
movs
test
repnz
out
outs
in
pushf
adc
sub
cmp
daa
inc
(bad)
scas
cmp
adc
lahf
push
mov
jle
sahf
mov
adc
ss
cmp
cmp
mov
mov
inc
dec
lahf
add
addr16
lods
jp
into
ja
fsub
ret
xor
jnp
gs
test
dec
pop
jp
ss
ret
hlt
ficom
push
mov
xor
push
xchg
jp
mov
mov
push
jle
daa
rcr
jp
aad
push
into
ret
add
out
outs
xor
push
pop
fcmovb
push
std
mov
in
bswap
mov
shl
jecxz
or
retf
push
sbb
add
out
jmp
and
pusha
jo
adc
add
pop
sbb
xchg
bnd
mov
sbb
xor
mov
(bad)
pop
lods
jmp
jge
ds
mov
jge
sub
sti
fstp
iret
pop
cmp
mov
cmp
xor
pushf
or
mov
iret
xchg
xchg
cdq
pop
pop
dec
pop
(bad)
loop
sub
xchg
or
push
rol
pop
and
(bad)
xor
cs
arpl
out
in
popf
mov
inc
xor
js
hlt
mov
cmc
hlt
or
in
mov
mov
add
in
cmp
repnz
sub
mov
or
cvtps2pd
in
push
cdq
shl
jmp
xlat
aam
and
rcl
sub
ds
ror
les
mov
cdq
add
mov
mov
jno
data16
jl
aam
sub
pop
dec
cmp
inc
js
add
pop
mov
mov
sbb
pop
imul
adc
and
hlt
adc
test
sub
sub
sbb
(bad)
push
iret
movs
push
imul
frstor
mov
mov
and
addr16
sbb
daa
jge
das
mov
cwde
mov
add
std
push
cld
adc
xchg
xchg
and
shl
je
jge
test
stc
bound
pop
push
repz
repz
xchg
in
std
retf
out
mov
lods
cmc
xor
jmp
add
dec
xor
int
fwait
mov
stc
sub
retf
cmps
fcom
fxam
mov
das
cdq
bound
add
aad
ds
add
stos
jmp
test
jne
repz
test
sbb
sub
out
stc
jecxz
xchg
hlt
mov
ds
mov
mov
xchg
outs
test
inc
pop
test
in
mov
bound
mov
and
adc
mov
pop
inc
js
xchg
rol
repnz
sub
fsubrp
dec
sbb
pop
jb
adc
pop
mov
jmp
sbb
test
pushf
dec
(bad)
stos
popfw
and
push
mov
int3
mov
mov
scas
xlat
cs
mov
shl
mov
leave
push
pop
aaa
mov
pop
mov
jns
and
jbe
dec
and
add
clc
push
hlt
add
sub
stos
inc
dec
arpl
sbb
push
xchg
mov
int
jo
jle
dec
es
clc
jb
adc
dec
out
movs
fsubr
mov
mov
push
push
cmps
add
dec
popa
jns
dec
std
push
dec
push
dec
call
jle
add
or
push
cmp
stos
shl
or
fmul
jmp
cmp
aaa
jbe
repz
enter
in
mov
push
fdivr
ret
pop
mov
pop
out
(bad)
lods
call
adc
cmp
mov
jno
imul
jb
push
cmp
rol
fs
in
lock
js
push
add
inc
dec
mov
in
push
iret
push
in
inc
inc
mov
or
jle
push
and
or
mov
mov
jmp
push
mov
fadd
push
mov
out
fmul
push
cld
rcr
jno
xchg
rcl
sbb
mov
fcomp
add
bound
gs
sub
shl
inc
or
add
cmp
inc
popa
scas
repz
cmc
shl
test
mov
xchg
xchg
test
add
ja
out
sbb
addr16
mov
mov
adc
int3
ins
ror
xor
aam
ins
adc
fwait
enter
pop
rol
inc
sub
add
jg
rcl
inc
jl
imul
icebp
dec
or
cmp
pop
jl
mov
xchg
retf
loopne
jmp
loopne
sbb
pop
call
xor
mov
jmp
outs
pop
sbb
fwait
jns
push
retf
inc
dec
add
leave
jbe
inc
mov
aas
clc
mov
dec
ror
add
and
and
dec
inc
mov
mov
(bad)
sub
imul
xchg
(bad)
loop
adc
sbb
loop
(bad)
or
movs
into
jb
aad
cmp
inc
jle
cmp
movs
cmps
fild
ficomp
outs
dec
cmp
add
push
fdiv
scas
mov
push
fld
fstp
mov
aas
dec
hlt
loopne
push
xor
popf
xchg
aas
(bad)
dec
fcomp
mov
add
dec
pop
enter
sub
retf
es
dec
cmc
xchg
(bad)
in
or
xor
and
jle
mov
add
mov
aaa
inc
inc
mov
int3
jl
in
jecxz
jp
stos
jbe
imul
push
fsub
pop
outs
pusha
stc
adc
or
(bad)
rcr
fisubr
push
jecxz
out
shl
fdivr
jp
pusha
xchg
adc
mov
mov
push
ds
xchg
outs
jmp
xor
cwde
cmps
ds
sar
ficom
test
aad
or
xor
ret
adc
and
add
jno
inc
push
mov
popa
mov
pop
sti
popa
aaa
xchg
std
retf
mov
cmp
jl
pop
dec
push
push
ret
push
sub
cli
and
call
idiv
inc
retf
ins
add
jmp
mov
repnz
push
push
push
fistp
dec
xchg
cmps
aad
jne
(bad)
jmp
push
stc
xor
cmp
xor
shr
jbe
loop
inc
mov
fbld
push
gs
mov
push
inc
inc
data16
stos
pop
stos
sti
push
jmp
loopne
sbb
nop
jbe
xor
rcl
loope
cmp
fisttp
sub
adc
pop
mov
jle
add
test
fwait
ret
jns
mov
cdq
repnz
jp
ss
sbb
lods
jmp
mov
stos
cmps
xor
xchg
jmp
(bad)
ins
ret
sub
add
dec
int3
cmp
ret
std
push
and
loopne
js
mov
xchg
fidiv
jge
mov
(bad)
lea
test
mov
sub
mov
add
hlt
cld
ja
xlat
pop
or
sbb
lds
sbb
div
sar
mov
cmp
lods
mov
fisubr
(bad)
mov
inc
mov
ja
mov
mov
add
shl
inc
jl
jp
imul
scas
mov
mov
hlt
int
mov
(bad)
dec
in
inc
dec
mov
push
adc
dec
cdq
pop
adc
sbb
and
hlt
push
cmp
fist
jge
(bad)
fwait
mov
cmp
adc
cwde
mov
add
ins
jg
jg
inc
mov
jp
xlat
mov
jmp
movs
cmp
add
jg
mov
dec
jge
jecxz
add
mov
cmp
fwait
imul
cmp
jge
daa
push
adc
icebp
scas
xor
or
lds
pop
pop
adc
neg
xor
fcomp
jmp
xchg
movs
adc
das
test
(bad)
add
pop
loope
mov
mov
(bad)
fisub
mov
sbb
fwait
retf
fstp
inc
add
inc
inc
pushf
jle
nop
push
cmps
fnsave
mov
pushf
es
fld
mov
mov
xchg
and
and
or
imul
retf
or
inc
dec
jle
cmp
or
mov
(bad)
mov
add
sub
call
or
push
add
pop
jl
mov
das
xor
dec
xor
in
ins
imul
add
push
scas
xchg
mov
nop
jb
inc
push
adc
fnsave
mov
mov
mov
mov
push
cld
xchg
xchg
outs
jmp
dec
xor
(bad)
clc
xchg
das
push
or
xchg
dec
dec
aas
mov
fistp
xchg
or
(bad)
int3
div
fstp
mov
fstp
mov
add
ret
sub
movs
xchg
jo
mov
in
dec
pushf
push
ror
cmp
fcmovnb
xchg
add
pop
xor
sbb
ins
stos
pop
sbb
out
rcl
jmp
(bad)
sub
mov
call
stos
call
adc
jp
xor
pusha
loopne
xchg
add
int3
sahf
and
dec
xchg
dec
cmp
dec
mov
pop
rcr
adc
das
jns
int3
(bad)
mov
sub
shl
imul
sbb
jae
push
cmp
add
out
jge
daa
rcr
xor
fadd
add
and
cs
out
popf
loopne
lahf
inc
xor
iret
dec
jle
sub
adc
(bad)
out
mov
xchg
push
ror
out
adc
stc
popa
clc
iret
outs
cwde
xchg
lock
sub
cmp
pop
nop
push
cmp
je
lock
push
inc
sub
xor
sti
sbb
dec
ins
push
mov
aam
popa
stos
adc
mov
enter
imul
jns
js
(bad)
dec
xor
cmp
(bad)
xor
xchg
jp
(bad)
mov
cmp
add
aas
pop
cmp
lds
sub
jp
ins
add
lahf
iret
sub
aam
inc
fiadd
mov
int3
retf
cld
les
pop
mov
cmp
inc
in
jp
in
leave
sbb
out
scas
les
(bad)
dec
in
cmc
add
out
and
xor
int
sub
pop
imul
jge
lea
jecxz
sahf
nop
and
cdq
dec
mov
add
cmp
add
(bad)
into
and
shr
xor
dec
push
ins
enter
enter
pop
scas
ficomp
xchg
mov
aaa
(bad)
rcr
rcl
les
leave
mov
hlt
call
inc
jns
and
add
or
and
mov
mov
dec
xchg
xor
cmp
dec
mov
add
bound
push
pop
int
outs
cmp
repnz
xchg
xchg
fsub
bound
sbb
mov
push
mov
nop
inc
outs
xchg
mov
adc
out
mov
nop
pop
movs
jg
nop
js
pushf
mul
jne
or
(bad)
aam
cmps
add
jg
icebp
stc
xor
mov
fistp
stc
and
out
mov
xchg
bound
int
cmp
sub
pop
cmp
or
jb
aas
js
cmp
mov
sub
jmp
sub
dec
fcom
add
cld
sbb
xchg
push
or
jl
inc
out
or
and
ins
xchg
jecxz
add
mov
inc
jl
adc
or
inc
sbb
ficomp
and
mov
jg
das
dec
gs
repnz
sub
stos
add
inc
mov
bound
lahf
rol
push
or
cli
scas
mov
popf
into
inc
xor
add
ficom
stc
rcr
mov
sbb
(bad)
(bad)
ficom
jp
cmp
bound
xor
inc
cli
xchg
fcomp
daa
sbb
inc
cmp
shl
sub
pushf
jge
les
data16
xchg
jmp
jne
and
dec
cwde
scas
retf
clc
push
cmps
neg
mov
sbb
mov
arpl
pop
inc
jg
fld
xchg
lea
ds
fbld
pop
cwde
xlat
call
int3
in
push
push
in
dec
mov
mov
push
mov
xchg
cld
sbb
jae
les
sub
divps
dec
cmc
not
retf
push
fiadd
ret
in
jne
cmp
clc
fisubr
adc
(bad)
mov
jg
ret
push
inc
lea
pop
mov
adc
nop
add
aas
inc
hlt
add
add
icebp
jne
xor
push
dec
test
in
mov
bound
sbb
(bad)
iret
mov
in
not
jle
aaa
jp
call
out
mov
sub
int
sub
in
sub
imul
push
es
jecxz
xchg
loope
outs
and
pushf
iret
nop
loop
cmps
push
pop
cli
frstor
cmp
mov
nop
in
xchg
mov
push
dec
xchg
ret
cmp
add
fsub
push
fnsave
into
loop
mov
jns
jle
aam
inc
ror
leave
dec
repnz
adc
mov
xor
fisubr
cmp
fidivr
mov
sbb
les
sbb
or
jl
xor
(bad)
and
sub
shr
aam
jmp
nop
xor
scas
add
(bad)
fiadd
jg
xor
jbe
leave
(bad)
nop
or
dec
jae
(bad)
mov
setne
hlt
repnz
mov
sbb
pop
aad
push
jae
inc
or
push
jl
je
in
popf
inc
xor
push
push
jb
jne
add
lock
mov
dec
adc
icebp
(bad)
out
xchg
jmp
jmp
and
adc
cli
rol
cmp
fmul
sub
mov
repz
addr16
add
mov
pusha
mov
sbb
mov
fcomp
sub
push
jbe
jecxz
mov
mov
lahf
inc
add
cld
xor
pop
sub
or
push
mov
repz
mov
imul
in
hlt
mov
call
in
ja
sub
xchg
mov
icebp
hlt
call
popa
sub
outs
mov
xchg
pop
outs
popa
sbb
movs
mov
cmp
nop
cmp
cli
ins
sub
or
aaa
fsubr
mov
sub
test
ror
fst
push
xchg
xor
xchg
push
xor
push
std
shl
mov
add
xor
cmps
sti
pop
xor
push
(bad)
scas
cmp
dec
les
add
cmc
jge
(bad)
repz
out
sub
movs
hlt
and
xchg
sbb
cwde
adc
test
dec
dec
dec
call
and
jo
rcr
fwait
jp
sbb
fild
fistp
cwde
mov
cmps
jmp
fs
lahf
dec
outs
jle
mov
js
loopne
jmp
jle
push
pushf
lea
and
gs
dec
lods
inc
push
jns
sub
fstp
fs
or
cld
adc
inc
pop
sete
ss
lds
push
push
sahf
out
lods
push
arpl
mov
sbb
call
frstor
sbb
xchg
fcmovnb
or
dec
and
and
xchg
xchg
add
xchg
xor
popf
shl
and
xchg
das
fs
and
dec
mov
iret
scas
sub
outs
dec
retf
icebp
ja
push
jge
cdq
mov
jl
sub
sub
and
scas
xor
cmp
cmp
stc
(bad)
jge
(bad)
(bad)
sub
popa
int3
jnp
and
jo
adc
xchg
aas
mov
pop
ss
push
fstp
aaa
ret
ja
(bad)
xchg
pop
mov
cmp
inc
cmp
cmp
mov
(bad)
cmp
mov
cmp
shl
imul
leave
cmp
lock
outs
mov
adc
adc
rol
push
xor
call
shl
adc
div
(bad)
jno
aam
xchg
clc
xchg
sbb
jecxz
fidivr
imul
push
mov
addr16
jb
scas
inc
(bad)
mov
push
leave
(bad)
retf
imul
mov
test
cwde
mov
push
inc
dec
mov
push
shr
imul
pop
add
add
loop
outs
jge
in
or
sbb
inc
adc
dec
mov
mov
jl
test
or
sub
jno
test
dec
pop
jge
mov
sub
push
in
cmp
mov
xlat
and
es
add
xchg
pop
scas
ds
mov
les
sbb
pop
les
outs
inc
call
iret
rol
and
enter
cli
cli
cmp
sbb
inc
popf
lea
test
add
adc
push
iret
cmps
mov
ds
or
cwde
push
lods
(bad)
in
cmps
sbb
push
popf
jle
adc
(bad)
lock
arpl
imul
jno
mov
mov
repnz
xchg
test
not
rol
aaa
mov
cmp
or
outs
aam
dec
shl
sub
int
ins
cmp
cmp
int
inc
add
hlt
aaa
in
into
sub
mov
xchg
(bad)
and
ret
out
sbb
cwde
(bad)
je
(bad)
pop
data16
(bad)
lods
lock
push
cmps
inc
repnz
jns
lods
jae
cmps
das
fwait
add
lahf
inc
clc
imul
xchg
imul
and
sbb
ss
jp
mov
iret
cmp
xor
or
sbb
push
jecxz
ins
inc
jnp
pop
xchg
fdivr
sbb
pop
xchg
push
aaa
mov
cmps
adc
push
call
data16
push
imul
and
sbb
sahf
cmp
pop
jns
add
push
inc
ins
sti
adc
mov
lds
cmps
and
test
xor
cmp
scas
and
daa
and
js
inc
dec
fcom
jg
mov
loopne
mov
ss
push
imul
lahf
mov
jg
pop
jge
fisttp
clc
mov
pop
inc
cmp
les
xchg
sbb
je
mov
xchg
mov
pushf
fdiv
sbb
in
xor
mov
pusha
adc
push
add
fsub
sub
(bad)
out
push
scas
mov
xor
lea
adc
xchg
adc
pop
div
scas
add
push
sub
push
jp
dec
leave
out
adc
xor
or
cmp
imul
cmp
push
and
int3
les
mov
cmps
pop
movs
rcr
scas
idiv
and
adc
(bad)
sti
mov
mov
(bad)
ins
out
mov
mov
mov
les
and
call
std
daa
jne
imul
ins
in
fistp
push
sub
inc
enter
sub
fisub
fnstcw
loop
mov
cmp
inc
hlt
cmp
and
outs
adc
dec
or
mov
and
inc
enter
mov
imul
add
add
clc
pop
int
jp
(bad)
jo
add
push
xor
test
test
inc
and
in
lds
sub
jecxz
leave
ds
jmp
cs
jle
and
int3
icebp
mov
inc
or
loop
popa
xor
jmp
pop
inc
daa
sbb
sbb
inc
pop
clc
xor
cld
test
xchg
xchg
cwde
xor
adc
aas
dec
fidiv
stos
or
mov
sar
test
cmp
(bad)
pop
or
adc
xchg
int3
inc
xor
xbegin
enter
cmc
sahf
jmp
(bad)
cs
(bad)
fs
add
in
mov
mov
int
adc
dec
jne
test
(bad)
and
test
mov
ins
and
mov
sub
or
aam
fbld
div
movs
out
push
and
dec
in
inc
mov
stc
adc
add
mov
mov
(bad)
dec
mov
xchg
dec
test
fwait
push
sbb
mov
push
dec
push
dec
repnz
hlt
inc
or
lods
sti
cs
sti
sti
inc
ficomp
mov
xlat
test
push
out
xchg
das
dec
cmp
jo
mov
mov
pushf
mov
maxps
lods
mov
mov
xchg
and
xor
dec
xchg
cmps
ss
inc
mov
inc
test
div
bound
outs
rcl
xchg
jb
cmp
cmp
cmp
pop
leave
mov
adc
mov
mov
push
sub
into
pop
dec
pop
das
or
in
std
inc
jns
xchg
ins
jbe
sub
adc
pop
cvtps2pi
mov
addr16
fwait
xchg
xor
inc
gs
or
pusha
xchg
hlt
jbe
cld
loopne
sbb
add
mov
dec
daa
push
mov
add
shl
push
add
jp
outs
push
or
(bad)
outs
mov
sub
pop
es
div
lds
jne
inc
hlt
jp
xchg
pop
(bad)
dec
adc
jns
mov
(bad)
out
xchg
add
xchg
sbb
sbb
icebp
add
add
fdiv
hlt
pop
icebp
scas
dec
jns
or
in
js
pop
mov
pop
adc
mov
xor
cmps
mov
mov
jne
sub
(bad)
sar
xlat
fnstsw
dec
jle
das
enter
iret
imul
sub
test
fisttp
popf
push
mov
int3
mov
jae
sub
xchg
adc
xor
cmp
icebp
nop
scas
mov
push
ror
xchg
or
lahf
sbb
mov
scas
push
push
add
and
repz
icebp
sub
push
dec
in
xor
mov
xchg
mov
pop
push
mov
dec
rol
add
and
pushf
dec
mov
cmc
addr16
sbb
out
lea
ficom
or
daa
movs
jg
fld
add
push
(bad)
cmps
ja
inc
aam
xor
(bad)
mov
aam
pop
push
sbb
cmp
call
lea
pop
fbld
test
dec
mov
out
ss
cmps
loope
xchg
lock
mov
fdivrp
or
mov
aas
sbb
aaa
ret
retf
adc
add
aad
cmps
mov
add
mov
iret
sub
jle
cmps
leave
arpl
jge
mov
jle
ffreep
mov
pop
les
inc
and
test
xlat
push
adc
rcr
movs
stos
repz
jecxz
ror
stc
push
in
add
xchg
out
sbb
mov
addr16
stos
pop
inc
push
mov
(bad)
call
and
in
mov
mov
adc
mov
outs
xlat
lock
cmp
adc
in
sub
stc
jb
mov
outs
push
popa
or
and
cdq
aaa
pusha
movs
dec
sbb
push
repnz
jmp
loope
pop
loope
out
dec
stos
push
mov
test
leave
inc
stos
mov
hlt
pop
dec
pop
or
dec
pusha
jae
cwde
sub
loop
mul
int3
push
loope
xor
aam
cmc
int
aas
test
aad
aas
mov
je
inc
xchg
or
dec
mov
dec
addr16
scas
les
cwde
cmp
push
pop
xchg
adc
ret
sar
add
and
cmp
imul
fst
scas
or
or
xchg
aas
lds
lock
loopne
jecxz
pop
cmp
loop
sub
stos
(bad)
sub
and
push
lahf
stos
fnstcw
(bad)
mov
xchg
das
sbb
pop
retf
das
or
push
neg
push
adc
inc
lahf
dec
loope
jb
into
fdivp
ficom
mov
mov
pop
ins
sub
dec
sbb
ret
lds
stos
pop
(bad)
shl
cmps
ret
cmp
xlat
cmc
icebp
xor
mov
jmp
xchg
and
imul
xor
repz
sbb
cmp
sub
dec
mov
leave
outs
lods
js
pusha
(bad)
xor
cdq
test
(bad)
je
xor
ror
out
mov
cwde
and
lods
data16
push
jb
pushf
push
stos
jge
dec
sub
outs
xchg
add
shl
(bad)
stos
rcr
fild
add
or
fcomp
or
repnz
jl
aad
test
xchg
cmp
ret
cmp
call
js
dec
stos
push
not
cs
ds
push
lahf
mov
icebp
xor
fs
and
data16
mov
adc
hlt
xchg
sub
(bad)
jp
scas
pop
jecxz
add
mov
xor
aas
clc
mov
inc
sub
inc
add
jmp
xchg
lds
sar
pop
sbb
add
jecxz
mov
mov
fidiv
dec
push
xchg
push
adc
out
(bad)
inc
call
mov
or
in
dec
jne
loopne
xor
or
xchg
dec
dec
in
sbb
call
jle
outs
in
inc
repz
jg
mov
inc
xor
adc
ins
out
retf
dec
xchg
stos
and
xlat
cs
xor
sbb
adc
mov
add
stc
xor
pusha
lea
mov
test
jo
mov
lea
fisubr
jnp
js
stc
sti
jp
aam
mov
cmps
popf
adc
pop
push
in
lods
xor
pop
jecxz
pop
inc
pslld
push
or
loop
jns
and
sbb
fsubr
cmp
or
ja
pop
test
gs
out
mov
inc
pop
dec
cmp
dec
into
(bad)
xchg
and
add
out
jmp
sub
inc
adc
rcr
cmps
xchg
push
in
dec
mov
add
jb
push
fs
xchg
inc
popf
pop
dec
(bad)
imul
jle
push
push
sbb
leave
popf
jne
je
(bad)
and
xchg
stos
jo
fmul
iret
and
mov
(bad)
sti
push
fsubr
ins
test
jge
jne
arpl
les
(bad)
xchg
xor
popa
fild
jns
scas
push
movs
test
leave
scas
xchg
mov
adc
sti
mov
int3
ins
and
cli
popa
pop
inc
and
leave
aad
mov
inc
aad
sar
(bad)
fist
outs
sbb
mov
pusha
xchg
imul
pop
xchg
or
or
mov
jmp
out
jmp
and
jae
xchg
mov
jmp
or
lods
enter
mov
mov
jbe
add
pop
xchg
aaa
std
jge
and
jmp
dec
fwait
xchg
inc
lods
inc
(bad)
cmps
sub
jmp
lahf
fwait
xchg
mov
pop
shl
aam
add
xlat
(bad)
lea
push
retf
push
mov
cmp
outs
mov
adc
(bad)
fldenv
sahf
out
sub
fnsave
adc
sub
enter
ffree
pop
clc
push
mov
mov
in
mov
call
call
hlt
(bad)
loope
push
popf
jne
or
je
clc
retf
aam
push
dec
inc
jmp
adc
adc
hlt
mov
push
je
jne
int
jecxz
dec
xchg
mov
retf
int
fild
inc
dec
sub
shl
test
(bad)
out
(bad)
xchg
call
mov
sbb
daa
inc
cmp
rcl
dec
or
mov
add
push
jmp
pop
out
fbstp
call
cmp
or
jns
das
add
sbb
retf
movs
ins
xor
movs
xchg
push
or
cmp
add
lods
push
imul
lods
mov
cmp
adc
mul
xchg
cdq
lds
mov
adc
(bad)
(bad)
add
aaa
mov
gs
repz
mov
cmc
jp
xchg
imul
ret
xchg
mov
in
lahf
push
push
out
dec
faddp
jb
mov
js
mov
push
sbb
cmp
mul
xor
cmps
das
rcl
cmps
push
sar
and
mov
sbb
fwait
dec
sub
ins
cmc
sbb
std
lock
jbe
cmp
pop
stos
sbb
sub
mov
rcr
xchg
dec
lods
enter
push
(bad)
sbb
fcom
xlat
popa
push
push
adc
pop
sub
lods
fnstsw
cmp
pop
gs
sub
inc
sbb
and
mov
xchg
or
jne
mov
(bad)
mov
hlt
sub
fcmovnbe
or
cld
neg
sti
(bad)
ds
jecxz
jmp
jne
and
xchg
aam
pop
adc
(bad)
sub
scas
sbb
and
shl
dec
icebp
or
adc
cmps
retf
pop
dec
aas
xchg
mov
loopne
jmp
push
cld
scas
ja
push
cmp
retf
xor
test
in
xchg
jl
xchg
or
push
out
mov
or
enter
mov
sub
test
test
push
pop
shl
in
mov
inc
call
xor
cmc
mov
out
call
mov
or
pop
sub
scas
pop
daa
jle
xor
out
and
repz
sub
jmp
push
lods
xor
adc
xlat
mov
gs
imul
gs
adc
addr16
sub
fdiv
fld
mov
and
or
sub
mov
outs
out
es
xchg
adc
mov
dec
pop
pop
pop
repnz
cmp
add
inc
aam
adc
push
jl
bnd
jb
jnp
cmps
mov
in
in
push
int
xor
or
sub
xor
imul
ds
jecxz
hlt
or
lock
jnp
int
fld
je
xchg
fild
xchg
fsub
fdiv
dec
in
clc
into
popa
fisubr
mov
dec
add
push
add
sub
and
dec
int
imul
leave
ficomp
ror
xchg
pop
cmps
mov
jae
push
(bad)
jmp
out
mov
jns
in
inc
outs
rcr
xor
daa
jp
add
inc
sub
pop
mov
jp
and
xadd
mov
stos
mov
xor
jg
pop
imul
jecxz
inc
loopne
int3
jae
mov
retf
mov
dec
jmp
jb
push
popa
imul
jno
xchg
dec
xchg
xchg
xchg
loop
test
popa
popa
mov
fnstenv
sbb
fisttp
jecxz
cmps
scas
into
lea
pop
movs
gs
mov
mov
dec
(bad)
js
enter
pop
sbb
test
dec
rol
mov
push
lock
sti
pop
outs
mov
clc
cmp
mov
inc
push
jne
out
stos
push
jne
jge
dec
and
movs
daa
mov
jmp
sbb
push
pop
in
sub
sub
pop
cmp
les
nop
inc
test
inc
dec
pop
int
pop
add
fsubr
pop
iret
pop
or
xor
idiv
mov
je
and
mov
mov
in
(bad)
fistp
mov
outs
fwait
inc
fisub
xchg
rol
loopne
mov
stos
add
mov
xor
mov
lock
jmp
mov
push
cmps
aaa
(bad)
sub
add
fs
lods
mov
and
fmul
addr16
mov
inc
dec
inc
js
mov
push
and
and
aam
or
xor
int3
stc
movs
retf
fiadd
mov
push
jl
push
push
mov
xor
pushf
lahf
imul
aam
cmp
xchg
dec
sbb
adc
cmp
lahf
push
fild
xor
dec
or
xchg
add
sbb
mov
aas
int
mov
jbe
std
xchg
test
sbb
repnz
mov
pop
loope
mov
imul
iret
push
fst
cdq
icebp
mov
movs
lods
lea
dec
enter
js
enter
add
mov
popf
mov
adc
aam
pop
pop
dec
sub
dec
cmps
adc
push
lock
mov
mov
es
inc
loope
xchg
scas
push
cmps
mov
out
loopne
push
retf
outs
in
and
sbb
mov
pop
xor
push
dec
push
push
add
xor
mov
cmp
sbb
push
add
ret
mov
mov
inc
push
(bad)
shl
inc
pop
cs
sbb
push
outs
push
call
test
jecxz
test
cmps
fstp
aaa
pusha
xlat
xor
cmp
aas
mov
je
fild
xchg
cmp
stos
(bad)
pop
push
imul
cmp
lods
lea
pop
cmp
push
adc
mov
movs
fcomip
jle
pop
sbb
jp
lock
pusha
dec
and
pop
jg
cmp
scas
dec
mov
cmp
(bad)
es
sub
sub
dec
pop
sbb
pop
(bad)
call
jo
xor
aam
mov
lock
fmul
retf
je
xchg
cmc
push
pushf
ret
push
xor
push
mov
retf
sbb
xchg
adc
sub
jno
push
jo
lods
mov
xor
cmp
fild
arpl
inc
adc
cmp
test
ins
xchg
dec
jg
jmp
nop
popf
out
jmp
and
sbb
icebp
and
fimul
xor
push
in
adc
js
adc
in
mov
add
mov
mov
repnz
sub
cli
mov
out
retf
mov
sti
(bad)
add
cmp
xchg
in
clc
jmp
mov
dec
cmp
mov
xchg
xor
and
add
adc
mov
pop
add
fbstp
ss
ret
jmp
and
jo
mov
jnp
dec
xor
pop
dec
or
push
sub
push
and
xchg
add
cmc
mov
aam
xchg
call
jg
sbb
aaa
mov
sbb
loopne
xchg
add
js
jae
shr
jns
push
ins
jg
(bad)
xchg
loop
das
sbb
push
adc
push
jp
inc
xchg
das
lods
adc
pushf
(bad)
retf
jmp
enter
pop
xor
pusha
out
popf
test
and
adc
mov
into
and
sahf
inc
sar
pop
xchg
dec
adc
sub
jp
jnp
retf
mov
or
xor
sbb
arpl
stos
call
xlat
and
sti
push
lahf
mov
(bad)
retf
test
jbe
out
jmp
lods
iret
and
stos
mov
pop
xchg
pusha
cmp
pop
sbb
out
stos
xchg
or
mov
xchg
jns
mov
into
mov
prefetcht0
outs
sub
je
xlat
push
ret
vhsubpd
imul
sub
push
jp
add
jg
leave
add
sub
mov
aam
inc
mov
jmp
loop
repnz
in
fisttp
xor
out
adc
icebp
xchg
(bad)
pop
ins
inc
loope
add
ins
scas
push
cmp
mov
mov
rep
cmc
xor
lods
repnz
inc
push
xchg
and
ss
dec
ins
addr16
and
(bad)
mov
push
les
ins
cmp
ins
rcl
call
mov
or
inc
in
dec
cmp
sahf
cdq
push
cdq
push
in
cmp
cmc
shr
(bad)
stc
test
jbe
xor
pop
sub
jnp
mov
arpl
adc
popa
inc
fs
xor
les
push
add
fdivrp
jp
mov
out
in
scas
outs
cvttps2pi
stos
fwait
adc
cmp
xor
or
pop
and
ins
jecxz
or
mov
adc
retf
mov
cmp
push
ins
add
lock
fcmovnbe
mov
or
pop
in
xchg
std
cmc
sti
jmp
cmp
mov
ins
ja
and
fnsave
sbb
out
stc
repnz
mov
dec
fs
xchg
sti
clc
test
ja
popf
jp
in
jne
ins
xchg
(bad)
sbb
jae
movs
adc
daa
jle
jbe
adc
xchg
call
xchg
fld
das
jge
dec
test
int
repz
pop
pop
jmp
leave
shl
mov
mov
and
ja
ret
inc
dec
repnz
xor
mov
jle
icebp
aad
xchg
sub
pop
pop
jne
pop
xchg
lea
cdq
scas
push
(bad)
loopne
div
lea
ret
jmp
mov
(bad)
inc
pop
xchg
or
mov
bound
push
stos
ret
jmp
imul
push
add
fiadd
stos
pop
cmp
cmp
shr
addr16
push
stos
loop
mov
adc
inc
aas
and
(bad)
je
push
icebp
xchg
mov
sbb
jmp
in
pop
mov
in
xor
adc
test
aaa
jo
jno
mov
adc
jnp
enter
jp
imul
inc
je
xchg
loop
xor
leave
or
push
scas
in
test
jg
cmps
pusha
mov
lea
mov
cmp
jnp
xchg
and
jg
(bad)
in
cmps
js
sbb
mov
push
and
xchg
mov
pop
fisub
repnz
imul
das
int3
cwd
fst
es
sub
inc
cwde
and
gs
add
mov
out
pusha
pusha
lock
rol
mov
pop
and
aad
shr
add
push
and
add
(bad)
std
or
aad
xor
(bad)
aas
mov
loope
mov
enter
daa
and
repz
pop
aas
clc
gs
push
stos
xor
jnp
fsub
pop
ror
stc
aas
mov
or
in
mov
ret
jp
shr
dec
dec
ins
sub
sar
rcr
push
mov
ins
xchg
(bad)
jb
fsubp
pop
inc
mov
or
xchg
push
lds
mov
mov
stc
stos
pop
cwde
mov
mov
arpl
xor
and
jnp
xor
add
mov
popa
jmp
ficomp
pushf
push
out
lods
cdq
pop
ins
push
pop
sub
pop
jl
xchg
arpl
pusha
pop
sar
or
adc
loopne
ret
out
push
sub
imul
enter
inc
jmp
dec
ret
scas
outs
repnz
jbe
jns
fwait
add
mov
xchg
movs
div
loop
push
xor
sub
(bad)
imul
dec
sar
cmp
mov
out
lea
xchg
mov
or
out
es
addr16
jle
pop
add
add
repz
lods
mov
clc
outs
fsub
and
repz
dec
inc
push
add
sub
sbb
cmp
sti
xchg
and
shl
add
sub
mov
(bad)
aaa
cs
icebp
pop
movs
pop
lea
ds
out
cmp
jae
push
mov
call
adc
dec
cmp
dec
lds
jp
xor
mul
mov
(bad)
mov
popa
movs
cmps
cwde
lea
cmp
cmp
jnp
lock
xor
pop
xchg
(bad)
xchg
ret
xor
push
sub
or
mov
movs
and
js
ss
xor
lods
int
xchg
xor
push
pop
sbb
(bad)
sti
mov
mov
jmp
sbb
xchg
pop
push
sahf
rcl
or
enter
cmp
sahf
fistp
pop
push
or
fnstcw
mov
inc
push
popf
jmp
outs
in
loopne
outs
adc
gs
push
jp
mov
xchg
or
fnop
pop
lods
sahf
push
push
and
nop
sub
mov
or
and
cmp
jns
jge
nop
aad
sbb
xchg
mov
pop
je
pop
mov
scas
hlt
dec
jmp
pushf
xchg
nop
cmp
cdq
jno
pop
and
pop
repnz
mov
mov
imul
ds
xlat
xchg
fidiv
stc
jae
cmps
xchg
mov
mov
pop
xchg
inc
loopne
popf
outs
jecxz
mov
xor
pop
sub
add
add
pop
push
push
xchg
push
loop
inc
jns
in
mov
pusha
jae
(bad)
mov
push
fnstsw
cs
inc
sub
popf
sti
(bad)
cmp
push
mov
cmp
mov
sti
and
pop
(bad)
cld
dec
repz
push
mov
outs
sbb
jle
sub
and
and
js
adc
adc
ret
mov
addr16
arpl
aad
sbb
lods
enter
ins
or
iret
mov
push
and
fmul
and
mov
jb
add
push
or
test
scas
xchg
jne
(bad)
popf
call
retf
lods
adc
xor
addr16
dec
lods
(bad)
ror
jae
(bad)
xchg
mov
ret
push
inc
mov
loop
(bad)
jl
in
mov
fsub
cmp
adc
ret
aam
xchg
inc
int
cmps
sbb
data16
leave
jno
adc
test
jmp
ja
mov
or
data16
and
ins
jp
push
jmp
test
mov
pop
(bad)
loopne
je
retf
ds
or
add
sub
jge
mov
inc
into
pushf
sub
and
test
mov
add
pop
inc
sub
ror
add
std
dec
pop
loope
imul
jb
push
cmps
es
retf
loopne
icebp
fwait
adc
dec
add
adc
clc
test
in
lahf
jp
inc
(bad)
xlat
xor
inc
lock
xor
in
popf
arpl
mov
lods
cmp
cmc
xchg
xchg
pop
and
das
or
mov
and
dec
fldcw
std
mov
xchg
test
shl
sbb
pop
mov
add
jge
data16
add
xchg
js
sub
leave
pop
pop
cmp
test
lds
push
push
(bad)
add
jge
mov
or
jmp
jmp
push
fsub
into
jle
sbb
pop
add
cli
ficomp
les
(bad)
adc
xor
enter
(bad)
xor
or
dec
push
nop
mov
out
dec
sbb
cmp
dec
pop
adc
add
(bad)
mov
inc
imul
ret
adc
xor
cdq
les
(bad)
lock
hlt
fadd
cmp
inc
test
and
xor
jnp
adc
dec
mov
(bad)
mov
ret
mov
pop
mov
jne
mov
(bad)
jge
arpl
fimul
xor
push
or
cmp
ret
iret
push
ret
fmul
dec
sub
inc
mov
into
js
mov
gs
push
test
sub
sub
add
inc
in
ins
mov
cs
mov
pop
lods
sub
aad
nop
sti
cmp
data16
popa
push
ret
imul
xchg
adc
and
mov
aas
lock
sbb
mov
inc
repz
jmp
gs
movs
shr
mov
icebp
mov
mov
ins
int
mov
(bad)
sub
mov
loopne
dec
int3
cs
jmp
call
cmps
es
fidiv
fnstcw
cmp
outs
and
cmp
pop
push
pop
or
xchg
icebp
leave
cmps
jae
pop
push
pop
xchg
pop
fist
mov
xchg
mov
shl
push
shr
xchg
sbb
inc
ins
outs
test
shl
cmp
push
aad
xchg
inc
mov
and
xchg
push
outs
adc
movs
dec
inc
adc
in
loopne
in
xchg
outs
xlat
or
rcl
adc
cmp
mov
test
icebp
inc
call
sbb
pop
adc
mov
adc
pop
int3
cmps
xor
xchg
and
inc
leave
or
push
idiv
fiadd
add
xchg
das
jbe
add
arpl
push
fsub
mov
dec
sub
and
scas
aaa
stc
or
out
sub
xchg
into
jns
outs
es
fdivr
fisubr
jl
pusha
pop
xlat
cmp
retf
cmp
pop
adc
imul
mov
and
pop
les
retf
iret
pushf
sbb
mov
xchg
add
sar
(bad)
mov
push
test
cmp
mov
(bad)
xchg
sub
sbb
repnz
inc
mov
retf
sbb
test
mov
and
ds
jle
push
mov
or
cmp
sub
push
les
outs
xor
retf
imul
loope
mov
jge
into
add
pop
inc
imul
ficomp
mov
mov
fimul
rol
push
imul
and
fdivr
jp
push
jns
imul
leave
shr
imul
pop
(bad)
in
add
push
aas
add
add
dec
xchg
sbb
rcl
neg
jg
mov
lods
leave
push
mov
in
std
fistp
jno
popf
add
imul
cmp
jae
mov
stos
jmp
jns
movs
std
jp
sbb
mov
push
ror
cmps
std
out
adc
aas
cwde
repz
pop
sti
cmp
inc
ret
fiadd
push
adc
pop
push
xor
add
push
pop
inc
jmp
xchg
leave
pop
push
loop
and
xlat
(bad)
xor
xor
dec
(bad)
in
push
adc
jo
fwait
mov
call
mov
hlt
jns
xchg
repnz
jmp
movs
ss
std
int3
or
xchg
inc
inc
cwde
test
mov
repz
pop
(bad)
jecxz
jae
nop
cmc
pop
(bad)
call
inc
ret
aas
cmp
mov
repz
in
es
push
mov
(bad)
push
in
mov
shl
or
push
mov
call
loopne
mov
hlt
pop
xchg
mov
inc
stos
cmps
mov
aas
xor
shl
stos
dec
pushf
lods
xor
ja
mov
pop
dec
jle
and
in
popa
xor
mov
lds
sbb
nop
jae
call
es
int
jae
inc
pushf
out
lock
sub
outs
(bad)
sar
dec
add
stos
dec
sub
sub
hlt
xchg
das
adc
push
imul
dec
push
cmp
cmc
test
mov
cld
jp
mov
inc
les
xor
repz
mov
cli
xor
(bad)
jae
not
sbb
or
fwait
jmp
jae
iret
inc
mov
(bad)
je
or
xor
repnz
xchg
jmp
retf
ret
push
test
add
test
dec
xchg
mov
call
mov
push
mov
pop
inc
xchg
add
(bad)
mov
es
test
ins
inc
push
inc
retf
or
mov
and
mov
xchg
and
lds
std
push
dec
fsubr
inc
push
pushf
scas
fs
pop
pop
push
fdiv
fcomip
aad
mov
popa
or
(bad)
fnstenv
pop
sbb
repnz
idiv
xchg
or
push
mov
out
frstor
ret
fwait
and
std
and
mov
mov
dec
pop
pop
js
aad
arpl
dec
pop
loope
ret
in
cld
(bad)
scas
aam
cmp
mov
xor
ins
mov
dec
adc
fisubr
sar
xor
push
sti
retf
mov
pop
scas
outs
adc
ins
push
movs
jbe
xchg
repz
xor
push
mov
sub
or
in
ret
cmc
or
sub
call
inc
jnp
push
aaa
outs
xor
mov
das
adc
jno
inc
js
mov
mov
pop
imul
addr16
dec
xchg
xor
scas
xor
adc
or
std
fdiv
inc
(bad)
in
sub
sub
es
loopne
pop
jmp
mov
push
loop
cs
adc
das
rol
mov
cmp
dec
mov
lock
rcr
jmp
retf
dec
jns
adc
vmread
loopne
stc
mov
stos
sbb
cs
movs
lods
pop
xchg
into
mov
mov
push
lahf
mov
xchg
(bad)
data16
pop
dec
sub
(bad)
aad
pop
das
or
lods
mov
in
retf
idiv
lods
or
ja
inc
mov
loopne
in
and
sbb
fwait
mov
pop
adc
push
pop
add
mov
mov
mov
cmp
stos
ins
inc
loope
jo
mov
inc
test
jp
inc
test
outs
leave
mov
fs
cwde
dec
jmp
loop
xor
push
enter
fsubr
jno
fcomip
retf
rol
jbe
inc
push
cmp
sbb
ret
inc
call
popf
cld
xchg
stos
push
sub
aad
jmp
cdq
jmp
mov
sub
ins
retf
and
dec
outs
lods
sbb
adc
dec
pop
inc
cld
ins
out
jmp
in
xor
dec
cmp
jecxz
mov
mov
out
xchg
jmp
std
inc
test
sub
or
lea
(bad)
in
mov
or
pop
xor
or
(bad)
cmp
mov
pop
stc
scas
mov
xlat
push
mov
aas
pop
xchg
jmp
cs
fs
mov
or
lods
mov
add
push
pop
lods
mov
xchg
popf
shl
frstor
xor
in
daa
and
out
jb
test
cmp
dec
std
cmp
and
fldcw
or
repz
lods
jns
and
(bad)
push
xor
iret
call
sbb
xchg
mov
push
pop
pop
stos
sbb
pop
sahf
inc
mov
jae
mov
movs
into
jbe
(bad)
ins
data16
icebp
call
push
xor
cmpxchg
cmps
mov
arpl
jne
leave
add
sti
sub
mov
nop
inc
je
aaa
addr16
scas
sahf
mov
(bad)
cwde
loop
lods
push
inc
and
es
out
adc
and
inc
mov
neg
mov
fnstsw
leave
adc
ds
mov
sub
in
mul
cmc
jp
xchg
dec
shr
pop
xchg
das
mov
nop
sbb
icebp
push
add
lahf
fst
call
neg
fdivrp
or
push
sub
dec
sub
neg
pop
jle
aad
aad
push
cmp
ss
(bad)
ins
sub
jae
mov
xor
cmp
ss
popa
jge
iret
(bad)
pop
ss
xchg
mov
inc
push
jmp
shl
movs
sbb
sbb
loope
outs
daa
lock
(bad)
stc
icebp
push
jge
mov
nop
mov
push
push
inc
mov
fiadd
out
icebp
cmp
ins
jae
add
sub
push
dec
loope
nop
pusha
sub
fmul
lds
dec
sti
jg
call
jg
(bad)
fiadd
repz
icebp
loope
fidiv
add
das
xchg
rcl
movs
lods
pop
or
div
inc
push
(bad)
inc
aas
(bad)
jmp
shrd
cmp
(bad)
mov
sbb
sub
aam
sti
mov
ins
aad
mov
in
sti
cmp
sti
sti
lods
daa
jle
pop
das
pop
add
daa
cmp
dec
mov
jo
add
lock
sub
dec
push
stc
mov
je
leave
jnp
xchg
add
push
popf
call
pushf
jmp
cmc
popa
xchg
sub
scas
jne
pop
push
fisubr
jo
fisubr
hlt
inc
int
(bad)
cld
jp
mov
ins
mov
sub
xchg
add
push
jbe
jo
loopne
sbb
push
or
out
cdq
push
ds
retf
jmp
xlat
stc
jge
ins
lock
lahf
mov
add
out
pushf
sub
push
fild
and
mov
jmp
and
add
or
mov
mov
xchg
and
sbb
mov
add
push
cmp
xchg
mov
xchg
lea
pop
sbb
cmp
mov
add
add
jbe
clc
arpl
fbstp
or
dec
pop
fmul
cmp
push
pop
xchg
sar
adc
mov
leave
ret
sub
outs
push
fsub
inc
or
push
stos
jmp
aad
jne
cli
leave
in
mov
dec
dec
inc
inc
push
adc
pop
loop
fs
add
mov
jl
fldenv
add
xchg
lahf
lock
xchg
sbb
add
push
cmp
sub
(bad)
rcl
scas
out
dec
int3
mov
cli
pop
icebp
inc
sub
fisub
sub
jl
repnz
sar
mov
jmp
sar
pop
jb
or
push
inc
or
pop
mov
mov
fisub
mov
addr16
xor
loope
cmp
movs
call
inc
dec
mov
add
cmp
mov
adc
jecxz
and
fstp
das
cmp
sub
imul
int3
loopne
aad
jge
loope
xchg
clc
outs
fs
shl
popf
or
ins
mov
sbb
data16
shl
sub
daa
lock
mov
jmp
push
aaa
in
addr16
cmp
movs
cmc
push
cwde
pusha
fimul
xchg
aaa
jmp
jge
push
(bad)
jb
cli
(bad)
pop
test
jns
out
push
or
into
push
(bad)
ja
mov
xor
icebp
cmps
dec
jmp
cwde
(bad)
das
adc
push
add
mov
push
loope
fidiv
retf
inc
jge
outs
sub
dec
shl
mov
jle
cdq
pop
aad
push
add
pop
or
sub
xor
push
rcl
inc
sub
fst
les
retf
jmp
cli
and
pop
test
dec
xchg
adc
sub
push
add
jle
adc
bound
fdivr
repz
dec
cmp
cmp
dec
dec
into
pop
xor
pop
push
sbb
pop
adc
cmp
cmp
xchg
cdq
loopne
mov
jmp
add
xchg
repz
fadd
nop
int
hlt
shl
pop
fiadd
cli
fdiv
or
push
icebp
cli
lahf
mov
mov
aam
mov
inc
scas
sub
inc
mov
jo
leave
cs
mov
pop
fs
mov
cmc
jmp
in
push
xchg
dec
inc
xor
test
xor
adc
lahf
mov
xor
mov
outs
push
push
test
out
push
mov
mov
dec
cmps
fsubr
sar
xchg
iret
sub
xlat
add
jecxz
add
mov
std
nop
in
mov
sub
test
dec
repnz
imul
xchg
loop
clc
mov
pop
imul
jae
mov
jmp
nop
dec
sub
les
add
xor
ins
mov
rcr
jecxz
cwde
call
jg
jmp
mov
jle
fild
mov
test
out
bnd
mov
xchg
mov
sbb
xchg
imul
mov
std
jmp
pop
test
mov
repnz
hlt
jmp
and
xchg
stos
mov
out
mov
rol
mov
pushf
jnp
or
leave
sbb
mov
mov
jmp
scas
push
jbe
in
iret
sub
pusha
ins
add
xchg
inc
push
inc
jnp
jp
je
mov
dec
xchg
xor
pop
hlt
mov
fbstp
mov
loop
aad
movs
cwde
stos
(bad)
add
mov
push
hlt
ins
or
stos
loopne
js
les
push
outs
xchg
scas
jmp
inc
clc
jno
loop
ror
xor
mov
push
mov
cmp
mov
(bad)
push
js
mov
and
data16
xchg
mov
stos
jg
mov
or
inc
inc
xchg
jae
pusha
dec
inc
add
cs
gs
mov
adc
aaa
outs
stc
xchg
out
pop
imul
and
xchg
mov
in
fwait
in
mov
enter
push
jp
inc
imul
inc
inc
dec
and
stos
push
inc
movs
cmps
mov
ret
pop
out
cmc
leave
aad
pushf
lds
out
ficom
and
pop
sub
jnp
mov
pop
out
dec
repz
dec
aam
mov
push
aas
or
aaa
sbb
push
les
dec
cmp
int
(bad)
pop
adc
sub
jmp
push
or
(bad)
sbb
(bad)
pushw
xor
imul
sbb
movs
and
loope
outs
call
sbb
sbb
jg
mov
mov
ds
(bad)
mov
loopne
loope
cs
mov
stos
inc
jle
inc
loop
jmp
pop
ins
jmp
(bad)
nop
loopne
add
jle
or
in
mov
adc
sbb
or
iret
mov
aad
movs
sub
jp
push
pop
xlat
lds
jp
cmp
mov
xor
add
jp
test
int3
mov
sbb
fild
push
pop
or
inc
adc
loopne
rcl
xchg
fild
(bad)
jecxz
pop
mov
call
mov
cli
xor
popa
sbb
or
repnz
inc
and
adc
mulps
pop
fist
jne
mov
dec
adc
jmp
idiv
jo
in
int
out
add
push
mov
jg
stos
cmp
movs
sahf
fstp
ds
imul
mov
sub
dec
adc
fiadd
inc
cmps
push
and
adc
adc
aas
or
mov
xchg
push
xchg
dec
jb
and
mov
test
ja
hlt
repz
frstor
cwde
xchg
fisubr
(bad)
add
sahf
dec
cmps
or
in
jno
into
or
sbb
lock
or
aam
pop
rcr
cwde
xchg
outs
jne
cmc
imul
xor
test
aad
mov
dec
fnstsw
sar
scas
adc
pop
and
leave
mov
xor
jecxz
imul
outs
mov
(bad)
mov
cmps
repz
out
jo
sub
pop
ldmxcsr
push
and
xor
ss
dec
mov
xor
inc
inc
movs
in
fmul
stc
scas
pop
js
mov
sub
cs
push
push
out
or
and
sbb
or
in
jns
repz
pop
jmp
push
push
test
jns
push
in
pop
cmps
sar
cmp
jae
and
xor
inc
xor
jnp
aam
frstor
sbb
mov
out
test
lds
cli
pushf
mov
out
mov
(bad)
(bad)
bnd
enter
sbb
arpl
pushf
out
xchg
(bad)
mov
fbld
pop
cmc
call
mov
xchg
adc
adc
loope
into
sub
ret
xchg
rcr
cdq
ror
ss
mov
in
xor
fimul
pop
outs
add
clc
xor
es
push
push
(bad)
and
jp
movs
daa
lods
jnp
clc
stc
or
data16
pop
fstp
aaa
dec
add
rol
inc
xor
push
leave
call
jmp
cwde
popf
push
loopne
sar
xchg
mov
out
pop
je
sub
mov
aam
lods
pop
data16
fwait
fs
pop
mov
jmp
push
jp
sbb
mov
(bad)
jnp
imul
push
into
push
mov
test
inc
cmp
enter
mov
ins
rcl
mov
mov
mov
loope
xchg
mov
(bad)
imul
jecxz
cmps
call
test
lea
nop
inc
rol
or
sub
sar
sbb
ret
cdq
rol
mov
arpl
xchg
test
retf
ds
in
adc
xor
dec
repz
lock
xor
and
repz
imul
repnz
inc
sahf
inc
gs
xchg
push
sbb
outs
loop
sbb
mov
sar
sbb
or
repz
xchg
inc
int3
stc
shr
pusha
xchg
test
mov
mov
pushw
sub
rcr
cli
out
nop
push
call
jmp
push
add
inc
inc
cmp
pop
xchg
sahf
rcl
loopne
js
cld
aas
outs
push
dec
cmp
mov
rcl
mov
dec
outs
imul
ret
(bad)
pop
mov
sbb
retf
pop
push
pop
fiadd
xor
stos
and
in
mov
jns
loop
fs
leave
fcomp
sub
dec
dec
jmp
dec
dec
xor
pop
out
add
mov
inc
inc
cmp
int3
(bad)
mov
jbe
mov
fisubr
cmp
fbstp
adc
fwait
xchg
add
adc
dec
jp
xor
and
add
cmps
cdq
pop
xor
add
pop
mul
les
mov
in
push
shl
les
js
scas
cmp
aam
gs
xchg
dec
inc
shl
inc
and
enter
aaa
dec
dec
sar
cmp
push
xchg
int
fstp
stos
ds
sbb
inc
test
fdivr
mov
addr16
inc
sbb
sti
jg
int
add
retf
scas
mov
push
or
mov
sbb
fwait
jmp
cmp
push
dec
mov
inc
das
pop
in
inc
inc
clc
std
scas
movs
sub
sbb
test
aad
and
cli
test
jb
out
scas
out
out
aas
imul
sub
cmp
dec
mov
push
add
or
cmc
pop
shl
jnp
push
sar
push
adc
retf
mov
dec
dec
fiadd
add
mov
ins
clc
pop
jge
pop
push
mov
test
leave
das
mov
pop
icebp
xchg
repnz
jb
aas
and
mov
jg
je
test
and
jmp
outs
(bad)
stc
(bad)
mov
icebp
cwde
lock
fstp
sbb
xor
mov
or
int3
lea
sub
call
aaa
xor
and
or
jnp
jae
jge
mov
mov
imul
and
mov
sub
mov
mov
dec
fisttp
fs
ins
cmp
xchg
and
pop
jns
pop
pop
(bad)
retf
xor
sti
call
cdq
pop
xchg
mov
mov
jmp
mov
and
adc
xor
dec
mov
adc
stos
pop
cmovs
pop
repnz
into
fs
stc
mov
sub
pop
dec
pop
push
adc
jo
xchg
add
lahf
sub
pop
adc
nop
xor
sbb
lahf
xchg
push
sub
mov
iret
inc
imul
dec
aam
cdq
xchg
xchg
jmp
pop
or
das
jl
lea
xor
or
add
mov
mov
dec
movs
ins
push
loopne
leave
sbb
ins
in
rcr
popf
push
sbb
aad
mov
sbb
mov
sub
pop
sahf
sub
in
dec
pop
jle
test
imul
int3
loopne
add
and
das
rcl
call
jp
sbb
repnz
data16
fld
and
add
push
fnsave
mov
or
jnp
pop
inc
mov
shr
cmp
push
sub
test
cmp
jle
inc
inc
lock
(bad)
and
mov
push
lods
dec
sub
and
cmp
push
dec
xor
test
xchg
jbe
push
icebp
add
sti
dec
or
inc
test
xchg
mov
arpl
xchg
sti
adc
in
xchg
and
fild
xchg
push
push
cmp
pop
fstp
cmps
cs
(bad)
scas
retf
inc
inc
xlat
adc
gs
shl
sub
xchg
stos
neg
mov
dec
add
out
jmp
adc
cmps
or
nop
jnp
xchg
cmps
sbb
out
add
je
xlat
pop
inc
lods
or
aas
xchg
xor
fisttp
int
stc
je
outs
popf
xor
ins
xchg
mov
iret
push
push
les
jmp
cmps
clc
loopne
mov
cmps
neg
pop
gs
repnz
ror
sbb
xchg
cmp
pop
add
mov
push
aam
mov
dec
out
cwde
imul
cmc
movs
mov
les
dec
sub
mov
hlt
fstp
add
inc
mov
cmp
adc
imul
push
test
cmp
push
loop
inc
neg
shl
inc
xchg
push
std
stos
leave
jecxz
jmp
into
mov
jle
hlt
add
mov
mov
aas
adc
inc
mov
inc
fcomp
lea
jl
add
mov
adc
fwait
or
movs
retf
pop
mov
or
inc
pushf
cdq
outs
pop
push
ret
mov
cs
push
inc
fistp
xor
(bad)
bound
dec
jmp
mov
fisub
dec
jmp
gs
push
cmp
std
sub
cmc
jp
call
rcl
cmp
repnz
sbb
cmp
outs
pushf
and
jnp
xchg
mov
jmp
xchg
inc
ret
sbb
adc
jbe
stc
fmul
loope
dec
sti
xlat
adc
cmc
adc
pop
jo
pop
stos
call
jnp
in
sub
xor
and
daa
test
lock
dec
cli
mov
mov
clc
ins
cmps
daa
stos
and
pusha
lds
mov
jmp
mov
adc
cmps
inc
or
sub
nop
cld
jmp
sub
and
out
cli
fistp
and
mov
(bad)
mov
test
xor
sbb
out
mov
stc
push
daa
repnz
push
mov
jae
pop
dec
enter
cdq
loope
mov
pop
fstp
xchg
jno
jl
fistp
sub
mov
pushf
jnp
inc
mov
movs
scas
cmp
push
sub
sub
mov
aas
imul
pop
(bad)
(bad)
jns
mov
xchg
(bad)
jne
adc
jo
aam
mov
aaa
sbb
loop
movs
xor
icebp
cld
sti
or
mov
and
(bad)
mov
aam
xlat
dec
adc
fwait
stos
lahf
inc
(bad)
movs
sub
stos
pushf
and
adc
xchg
stos
or
xor
or
adc
imul
loop
mov
ss
add
psllq
in
adc
in
ds
cmps
pop
cmp
out
xchg
lock
and
mov
push
aas
mov
jl
clc
fcmove
mov
mov
imul
inc
ins
xor
popa
sbb
out
repz
(bad)
scas
mov
sub
mov
imul
dec
pop
mov
and
clc
leave
jbe
xchg
scas
leave
repz
xchg
in
cmps
mov
bound
cld
imul
cwde
sub
lds
das
call
outs
mov
aas
xchg
cmps
inc
pop
or
dec
pop
sub
sbb
pmulhw
pop
shl
jmp
es
inc
inc
adc
(bad)
popa
push
inc
lahf
xor
pop
das
shl
add
sub
imul
jmp
and
push
xor
xchg
xchg
push
inc
pop
jle
cwde
rcl
mov
(bad)
popf
and
fwait
pusha
inc
gs
jbe
ds
imul
xchg
or
xchg
pop
dec
or
repnz
mov
jg
aad
pop
mov
iret
xchg
jecxz
cmp
jp
lahf
scas
cmp
in
and
push
sub
popa
adc
test
out
pop
push
and
leave
xchg
(bad)
cmp
ficomp
retw
and
retf
sbb
fsub
stos
fwait
push
jl
bound
add
outs
add
pusha
sbb
pop
loope
les
gs
jp
xchg
arpl
mov
call
sbb
jmp
call
cwde
pop
loopne
sbb
add
xchg
mul
fs
dec
cmps
cmp
aad
out
fwait
mov
movs
ins
retf
xor
mov
xchg
cmp
out
adc
fiadd
xchg
dec
jmp
adc
sbb
xchg
rcl
ret
inc
(bad)
xchg
ins
jmp
inc
xchg
mov
fwait
mov
jg
aam
sbb
push
cmp
mov
jmp
aad
pop
rcl
movs
sub
call
jmp
lahf
fwait
inc
adc
sti
ins
inc
test
jbe
xlat
ja
push
push
pop
retf
mov
sub
push
xchg
fs
cmp
mov
cmpxchg8b
(bad)
retf
jnp
mov
push
stos
shrd
adc
jnp
iret
lods
fs
dec
data16
sbb
xchg
js
repz
jl
in
jg
lods
loop
lock
jb
inc
mov
daa
mov
jo
rcl
mov
cmp
loopne
dec
mov
mov
push
(bad)
pop
ins
or
imul
jecxz
lods
(bad)
sub
xchg
sbb
daa
dec
xor
pop
mov
inc
inc
mov
sub
jbe
xchg
movs
fxch
popa
mov
shr
xor
dec
sub
jmp
fwait
pop
and
adc
jle
mov
mov
ficom
push
dec
and
push
mov
out
xchg
scas
cs
cmp
sub
push
and
arpl
retf
bound
dec
lds
cli
xchg
in
aad
ret
xor
cmps
adc
mov
fldenv
ret
mov
ret
push
data16
js
std
inc
inc
gs
push
xor
test
add
dec
add
(bad)
out
push
jno
repnz
jae
jl
js
test
xor
in
jne
or
aad
fist
pop
das
pop
pop
dec
adc
out
inc
int3
mov
and
iret
repnz
adc
mov
pop
or
(bad)
aam
repnz
packsswb
lea
stc
inc
mov
in
hlt
sbb
or
push
mov
push
cmp
add
pop
add
ds
lods
aas
inc
bound
xchg
in
pop
push
jl
push
adc
outs
mov
stos
ss
push
mov
adc
xor
std
fidivr
sahf
sahf
loope
sub
ja
push
add
retf
xor
(bad)
loop
adc
jg
or
pop
lea
xor
cmp
push
lock
dec
xchg
add
xchg
mov
dec
mov
ficomp
pushf
sti
ret
adc
imul
pop
ja
sbb
pop
mov
ror
mov
mov
push
and
push
dec
jmp
mov
pop
loope
imul
sub
push
inc
xor
mov
sub
pop
sbb
push
imul
jbe
push
cli
or
out
std
popa
cmps
les
push
call
jmp
cvtps2pi
push
aad
scas
xchg
xchg
xchg
and
push
sbb
fisub
clc
add
xor
xchg
out
xor
clc
adc
out
loop
in
jmp
inc
dec
xor
xlat
push
inc
add
stc
daa
xor
mov
pop
es
mov
push
sub
cmp
int
pop
inc
push
adc
push
jae
dec
and
jbe
and
inc
icebp
and
xor
or
xchg
push
mov
aam
or
out
das
pop
push
inc
rcr
repnz
push
sub
pop
xor
mov
pusha
je
inc
mov
sbb
mov
push
sar
daa
lods
(bad)
fsubr
xor
inc
pop
ins
add
cld
sbb
add
les
cmc
add
fcompp
(bad)
cdq
sub
sbb
bound
mov
mov
bnd
sbb
xor
dec
xlat
clc
js
sub
mov
cwde
mov
push
in
or
sub
cmps
sti
lods
and
adc
das
mov
adc
jmp
pop
lea
mov
shr
jne
xor
iret
adc
ds
or
dec
je
inc
dec
jp
jo
or
dec
repnz
inc
arpl
or
je
push
es
nop
ret
sbb
add
enter
shl
xchg
imul
(bad)
xchg
(bad)
xor
xchg
sti
mov
mov
and
lods
inc
mov
dec
lds
push
adc
add
mov
mov
idiv
and
adc
jmp
loopne
bnd
in
pop
rcl
and
jbe
jg
les
adc
std
std
in
inc
bound
push
pop
mov
into
imul
pushf
es
lods
xor
sbb
shr
in
imul
daa
or
out
shr
sahf
mov
lahf
shr
addr16
daa
sbb
push
inc
loopne
sbb
and
gs
add
add
arpl
and
(bad)
ins
retf
js
inc
xchg
xor
je
or
aam
mov
dec
mov
and
pop
or
and
or
shr
adc
dec
rcr
(bad)
scas
or
int3
retf
jo
cwde
jmp
dec
iret
xchg
lock
pop
mov
rcr
cwde
call
not
lahf
push
lea
(bad)
fwait
push
sbb
mov
dec
mov
les
cli
mov
dec
adc
js
imul
jg
popa
jno
and
stos
fwait
or
aas
in
adc
cmp
or
xor
xor
adc
sbb
push
inc
(bad)
into
dec
adc
pop
inc
je
loope
les
faddp
inc
inc
ret
xchg
dec
cdq
jmp
and
push
retf
retf
mov
mov
jl
nop
sbb
ret
arpl
xchg
jo
push
sub
xlat
in
aas
fwait
jae
(bad)
sbb
es
sub
imul
sbb
arpl
fidivr
cmp
sub
mov
pop
fdiv
loopne
inc
lock
xchg
cld
(bad)
or
mov
aam
and
fcmovnu
in
mov
fild
sbb
sbb
retf
retf
sub
xor
dec
adc
mov
mov
dec
daa
pop
repnz
ret
gs
pop
(bad)
mov
xor
adc
pop
mov
cmc
jl
xlat
inc
sbb
in
pop
sar
dec
pop
or
jmp
ss
mov
mov
or
inc
or
xchg
(bad)
aas
and
jo
mov
and
push
xor
add
imul
imul
mov
mov
aas
ins
pop
jnp
loopne
sbb
repnz
and
sti
xchg
ficomp
sub
inc
fwait
and
loop
or
jmp
lahf
and
add
movs
imul
aad
nop
push
js
in
fnsave
adc
xor
sti
test
fscale
or
retf
jle
test
mov
(bad)
aas
daa
pop
jge
int
bound
retf
cmc
leave
movs
xchg
cmc
imul
jnp
adc
inc
mov
fistp
mov
cmc
xchg
bswap
sbb
and
or
jnp
retf
bound
sub
inc
mov
or
cmps
sbb
inc
in
xor
fwait
rcr
ds
mov
jno
mov
mov
jae
mov
div
pop
mov
xchg
out
add
cdq
jmp
pusha
mov
aad
cmp
push
lahf
xabort
ret
dec
cmp
push
hlt
je
sub
test
les
shl
repnz
cdq
(bad)
adc
inc
mov
ins
aas
push
cmps
fidivr
imul
lods
ret
out
mov
pop
add
lea
push
int3
pop
mov
adc
pop
inc
and
xchg
mov
adc
call
pop
(bad)
out
cmc
shl
add
sub
inc
pop
mov
and
gs
das
movs
(bad)
nop
aas
sub
xor
and
div
sti
gs
aaa
adc
(bad)
int
sahf
(bad)
stos
mov
in
daa
fwait
pop
mov
or
sbb
xor
in
vpperm
lock
js
shr
adc
mov
in
mov
sub
jg
scas
push
std
movs
mov
add
imul
(bad)
or
call
inc
mov
jecxz
jecxz
sub
pop
push
mov
mov
fs
or
repz
ins
mov
jne
cmps
dec
xor
push
xor
imul
and
les
outs
mov
mov
cmp
dec
adc
fistp
and
mov
mov
jmp
or
jmp
fwait
out
push
popa
leave
mov
mov
cmp
sub
int3
mov
fnstenv
push
movs
cmp
xchg
or
je
sbb
imul
mov
push
or
ret
in
pop
mov
mov
(bad)
cmc
cmps
repz
ficomp
jmp
jmp
pop
sar
fsub
cld
or
cmp
fdivrp
or
std
push
adc
js
test
lods
loopne
(bad)
mov
shr
push
or
adc
test
aas
inc
shl
ret
or
leave
inc
jge
adc
and
and
push
dec
enter
push
fcmovnbe
outs
mov
ins
add
in
xchg
les
pop
xchg
cmps
mov
cmp
in
aaa
fidiv
addr16
and
loop
ret
loop
cli
xchg
inc
loopne
fild
pop
pushf
repnz
adc
test
mov
push
imul
fbstp
movd
mov
test
pop
fcomp
cdq
mov
imul
and
sub
add
test
add
(bad)
in
mov
scas
cli
pop
repnz
cmp
repnz
imul
or
inc
dec
adc
inc
sub
mov
mov
or
add
push
rcr
inc
push
clc
sub
jle
fcomp
xchg
cmps
mov
xchg
movs
fimul
adc
fadd
test
fisttp
mov
inc
push
inc
pop
inc
add
aaa
mov
or
and
and
or
lock
jecxz
add
(bad)
out
icebp
mov
mov
adc
scas
dec
xlat
in
out
ja
jle
sbb
daa
adc
dec
and
aaa
mov
push
push
add
pop
pop
xchg
pusha
dec
icebp
push
cwde
sbb
pop
dec
xchg
iret
dec
xor
fild
js
cli
mov
adc
pop
ret
fstp
sub
test
adc
aam
out
pop
push
add
or
test
mov
not
pop
jb
push
fs
push
push
mov
jo
mov
sahf
imul
daa
add
div
xlat
pop
mov
add
xor
pop
leave
je
hlt
pop
adc
fimul
sub
dec
mov
repnz
jbe
test
push
icebp
pop
(bad)
cmp
cmps
sub
mul
mov
ins
cmp
inc
dec
adc
fdiv
inc
jmp
repz
xor
sti
in
jne
xor
xor
sub
retf
dec
js
add
cmps
mov
cs
sbb
sbb
addr16
sub
add
mov
add
mov
ret
sub
jne
stc
gs
mov
pop
stos
ficomp
inc
dec
or
inc
jg
jb
icebp
inc
fnsave
cmp
dec
pop
mov
push
outs
stc
data16
jbe
into
dec
push
mov
std
lea
xor
inc
ss
sub
xchg
push
jecxz
push
push
jmp
aam
ja
aam
leave
dec
mov
push
inc
cmp
stos
(bad)
aad
dec
inc
jmp
mov
push
jecxz
xlat
add
bound
lock
imul
iret
sbb
inc
stos
daa
pop
daa
popf
cmp
rcl
clc
pusha
xor
dec
(bad)
fisub
das
push
cwde
pop
lahf
cmp
jge
std
jne
call
push
mov
or
inc
test
mov
pop
(bad)
cmps
inc
test
xor
mov
add
and
repz
add
inc
pop
mov
cmps
lods
rol
dec
mov
imul
sbb
lods
fcomp
ret
or
dec
imul
adc
and
sti
mov
aad
or
jg
(bad)
cmc
inc
bound
(bad)
fidiv
push
je
std
dec
jbe
cwde
inc
or
push
inc
dec
and
sbb
ins
pop
mov
test
xor
push
outs
(bad)
mov
ins
mov
(bad)
popa
call
mov
or
and
xchg
xlat
mov
iret
outs
mov
jmp
mov
add
in
mov
call
sbb
jnp
adc
lea
adc
push
ins
fldenv
sub
test
jae
and
xchg
loope
nop
lock
fwait
or
mov
mov
and
fidivr
mov
jle
pop
mov
dec
sub
cmp
cmp
test
(bad)
jae
cmp
cmp
fs
sub
push
stos
shr
mov
push
adc
push
call
pop
mov
test
ja
in
out
daa
repnz
(bad)
aas
bnd
mov
xor
fprem
rcl
mov
shl
arpl
rcl
mov
or
loopne
outs
sti
inc
sar
scas
retf
les
clc
jbe
mov
pop
gs
pusha
bound
int
sbb
iret
pop
inc
inc
mov
cld
jmp
hlt
adc
jne
jbe
push
fstp
push
inc
cmp
daa
sbb
hlt
sar
pop
mov
push
(bad)
retf
xor
jge
sub
cmp
cdq
xchg
clc
das
or
data16
pusha
outs
mov
popa
cmp
adc
movs
aad
js
(bad)
pop
cdq
jle
leave
dec
jno
mov
cmps
pop
jo
aas
call
loope
cmp
xchg
aas
sub
cmp
shl
popa
inc
pop
push
test
ds
inc
fwait
je
push
js
xchg
jo
icebp
push
sti
xlat
addr16
mov
mov
cmp
sub
jmp
inc
inc
xor
mov
pop
popf
and
inc
and
xchg
int
nop
pop
jmp
dec
xchg
movs
jge
stos
add
xlat
adc
push
ja
jg
sub
jae
sahf
mov
jmp
jns
adc
mov
jae
dec
or
add
mov
mov
lea
cmps
call
lods
inc
push
lods
in
dec
cdq
aad
and
mov
stos
ret
bound
scas
pop
(bad)
hlt
push
mov
xchg
ss
and
std
xchg
xchg
sbb
(bad)
movs
jmp
xchg
pop
mov
inc
dec
push
sbb
jl
inc
sub
inc
or
pop
das
fbstp
xchg
mov
jmp
push
into
repz
xor
lock
sub
inc
int3
shr
cli
ret
repz
pop
div
arpl
in
nop
gs
or
cs
add
xor
adc
add
jmp
pop
rcr
ss
std
sub
data16
inc
ficom
mov
ficomp
aas
stos
xchg
push
dec
shr
imul
ds
jbe
mov
mov
outs
sub
aas
cmp
mov
push
push
movs
in
mov
call
inc
xchg
or
adc
mov
jne
mov
hlt
call
adc
loopne
mov
jg
sbb
push
inc
dec
jbe
in
push
inc
out
jne
xchg
lahf
imul
push
cmp
ja
aam
lea
cli
mov
or
(bad)
(bad)
pop
pop
adc
mov
fcmovnbe
cdq
aad
sti
jne
inc
mov
shl
enter
inc
(bad)
je
pop
inc
push
sub
loop
xor
ins
and
rol
mov
xchg
outs
sahf
aam
jmp
jno
scas
movs
inc
ret
jp
lea
(bad)
out
jp
jno
cs
inc
je
push
outs
stos
jmp
cmps
adc
mov
adc
jnp
or
or
sti
pop
ss
cmps
cmp
in
popf
dec
ins
xchg
ds
paddusw
dec
cmp
scas
cmp
invd
not
jno
push
adc
call
pop
or
cmc
jecxz
fadd
sti
dec
push
data16
inc
scas
mov
push
std
pushf
(bad)
aam
and
jecxz
push
add
pop
push
js
(bad)
stos
or
lods
mov
mov
pop
(bad)
ror
push
mov
popf
fwait
or
push
cmp
pop
mov
sub
mov
inc
dec
cmp
jmp
mov
test
jmp
inc
xchg
cli
mov
push
pop
stos
jl
repnz
push
(bad)
cli
test
push
retf
clc
mov
cwde
outs
out
or
jg
retf
cmp
movs
xchg
or
retf
sub
sub
push
add
fidiv
jnp
out
dec
pop
stos
sub
mov
fld
push
xor
mov
jmp
fisub
adc
mov
loopne
add
add
lock
mov
ins
or
test
(bad)
es
daa
dec
xchg
shl
xor
xchg
jmp
and
je
adc
and
xor
dec
mov
cdq
stos
icebp
jle
xor
jne
lods
and
test
xor
movs
sub
gs
pop
movs
dec
xor
aad
hlt
dec
push
push
and
(bad)
out
shr
stos
push
movs
fld
adc
je
sar
mov
mov
dec
out
stc
jb
mov
mov
sbb
hlt
test
cwde
fnstcw
data16
xchg
lods
mov
setg
mov
inc
xor
mov
cmps
and
sbb
ret
pop
ret
sbb
inc
adc
shr
daa
cli
xchg
adc
fbstp
mul
xor
scas
shl
dec
out
jmp
or
adc
inc
hlt
adc
pop
repnz
popf
arpl
stos
js
jle
in
fisttp
xor
popa
fbld
or
(bad)
sbb
pop
push
sub
arpl
iret
int3
mov
xor
ins
enter
loopne
fld
shl
jne
retf
pop
dec
icebp
imul
iret
cdq
(bad)
icebp
ins
ja
push
(bad)
push
push
(bad)
dec
push
inc
push
mov
add
inc
leave
mov
mov
jle
movs
test
sub
gs
out
stos
push
mov
xchg
sbb
adc
test
stos
inc
sahf
inc
daa
inc
lock
jns
fisttp
lea
cmp
xchg
add
cwde
lahf
mov
cmp
daa
popf
xchg
or
popf
xor
repz
jbe
xor
and
cmp
test
sub
jmp
xor
push
fnop
fwait
cmp
ds
adc
and
lock
and
push
ja
or
into
xor
fisubr
mov
sbb
dec
or
jns
jge
jns
or
push
dec
push
repnz
xor
lods
push
sbb
call
ror
scas
push
sub
repnz
cmp
cmps
cmp
gs
or
ins
cmp
add
lea
pop
xchg
xchg
(bad)
imul
test
sub
in
jmp
sti
aaa
gs
push
cmc
pushf
mov
sub
xchg
mov
in
jb
jne
js
pop
sbb
jne
sbb
adc
inc
mov
popf
push
xchg
js
xchg
cli
pusha
pop
jb
sbb
lods
xchg
gs
jmp
jmp
add
mov
leave
xchg
cmp
ucomiss
push
cli
aaa
sbb
repz
nop
movs
push
stos
add
div
add
sti
or
sub
std
mov
cmc
mov
int3
xor
xchg
fdivr
jp
outs
ja
xchg
dec
push
push
mov
push
inc
sbb
out
ret
call
push
add
lods
mov
cmp
arpl
fiadd
pop
cmp
dec
xor
fstp
add
push
xor
adc
(bad)
push
and
dec
sbb
cmp
cmp
dec
out
pop
push
div
lods
mov
sub
outs
outs
aad
dec
and
xchg
cdq
fldenv
dec
ja
add
dec
rol
mov
xor
cmp
mov
popf
xchg
push
rcl
adc
or
mov
mov
mov
in
adc
cmc
jge
aaa
loopne
inc
mov
mov
jbe
aad
sbb
(bad)
stc
ret
mov
mov
jmp
and
je
movs
and
ret
add
jbe
jmp
(bad)
das
push
in
push
mov
mov
and
or
cmp
or
in
sbb
fisubr
jge
ins
call
pop
div
int
imul
test
pop
or
je
or
sti
add
mov
xchg
jns
fld
(bad)
js
jns
into
jmp
add
stos
sub
cdq
(bad)
adc
sahf
jp
push
iret
clc
cli
mov
mov
outs
cmp
rcr
bound
ins
mov
test
dec
or
xchg
or
ror
sti
dec
and
rol
jle
push
lods
cmps
les
aas
xor
(bad)
push
mov
ja
or
nop
pop
push
js
jg
inc
xchg
bound
pop
nop
xchg
aaa
sbb
sti
add
mov
shl
es
push
or
pushf
inc
repz
pop
in
(bad)
sub
jns
cmc
mov
xchg
push
cmp
jmp
jne
ret
out
lock
js
pop
lds
and
lea
jecxz
ret
imul
cmps
cmp
mov
mov
push
add
fisubr
mov
add
or
out
adc
in
les
jg
es
add
add
sbb
cmp
mov
jns
retf
in
pushf
fldenv
mov
push
(bad)
mul
enter
push
int3
(bad)
into
iret
pop
je
scas
test
or
imul
cmps
dec
pop
cmp
xchg
inc
repnz
jmp
fdiv
mov
icebp
mov
jecxz
repnz
xchg
or
add
lods
mov
lods
push
adc
(bad)
sub
jo
add
push
shl
fimul
inc
arpl
bound
dec
jecxz
pop
test
dec
nop
xor
xor
xchg
mov
fsub
and
xchg
mov
and
xchg
jne
dec
add
ins
mov
addr16
push
repnz
dec
ja
cs
xor
or
sub
inc
mov
adc
retf
push
jl
sub
inc
push
pushf
dec
push
inc
imul
mov
cwde
sbb
jb
das
ror
sub
push
(bad)
in
loop
mov
lods
sahf
bswap
sbb
mov
mul
xchg
arpl
push
call
es
mov
pop
adc
mov
adc
shr
ror
out
(bad)
mov
sbb
test
sub
mov
nop
add
mov
outs
hlt
fnstcw
fidiv
adc
mov
add
or
dec
or
in
fidivr
xchg
push
ror
in
dec
pop
mov
mov
xor
(bad)
or
sub
jnp
mov
sub
nop
sti
pop
pop
sbb
sti
pop
adc
imul
push
call
pop
hlt
test
xchg
test
cmp
cmp
add
and
or
adc
imul
clc
adc
sbb
mov
push
test
test
cdq
cs
sub
jl
jbe
mov
sub
jae
lea
ret
add
cmp
test
scas
inc
repnz
cli
ja
mov
or
ins
repz
xor
bound
pop
rcl
mov
movs
fldcw
loop
mov
loopne
mov
imul
jns
mov
adc
mov
ret
jbe
or
dec
fdivr
es
(bad)
aam
icebp
or
sub
clc
jmp
jno
mov
jno
lods
sub
xchg
inc
xchg
pop
add
xor
cmps
lods
xchg
xchg
dec
push
pop
cmp
push
in
shl
push
push
xchg
mov
add
repz
imul
pop
mov
shrd
cli
mov
xor
push
popa
icebp
xor
pushf
outs
dec
shl
or
jmp
stos
(bad)
rol
adc
xchg
sbb
sbb
fs
gs
push
ss
les
jbe
mov
std
in
repz
mov
push
push
lock
popf
retf
mov
fsubr
popa
add
sub
aaa
mov
std
sub
bound
sub
jnp
or
xchg
pushf
mov
jb
jmp
sti
jmp
movs
aaa
adc
(bad)
jbe
movs
getsec
stos
jmp
and
mov
enter
cmp
mov
cmp
xor
adc
test
push
and
out
out
pop
pop
fcmove
adc
loop
cmp
jge
and
sti
lods
in
pop
out
pop
(bad)
mov
pop
ss
jns
cmc
fidiv
xor
cmps
mov
into
neg
push
inc
pop
cmps
ror
add
push
pop
adc
call
repz
add
or
loopne
lods
and
popf
fwait
jnp
ficom
or
cli
adc
adc
inc
pop
jae
aad
push
inc
jbe
dec
fwait
jmp
adc
stos
mov
ficomp
add
jmp
jb
sub
sub
jne
cmps
cmp
cmp
fistp
mov
sbb
jl
dec
pop
mov
js
inc
jmp
fsubr
sub
aas
sub
xchg
cmp
jl
addr16
rol
mov
xchg
dec
cmp
and
mov
cmp
popf
jmp
sub
popa
mov
daa
or
jmp
mov
test
dec
inc
add
ja
mov
jmp
iret
sbb
inc
pop
pop
dec
xchg
mov
mov
mov
fsubr
xchg
mov
or
push
xor
repnz
es
loopne
cmp
and
mov
pushf
sub
inc
or
(bad)
or
in
adc
ret
aaa
push
adc
pop
fistp
cmp
ins
outs
mov
pop
mov
push
ja
gs
les
mov
mov
les
div
nop
popa
stc
scas
mov
sbb
test
mov
add
in
push
and
cmp
iret
sahf
adc
cmp
setge
adc
bound
mov
jb
sbb
leave
jnp
xchg
stos
call
xor
add
mov
mov
push
std
mov
ins
fstp
fptan
arpl
out
dec
gs
sub
fdivrp
mov
enter
inc
in
cli
add
loopne
xor
xchg
test
fucom
outs
jbe
mov
adc
outs
dec
cmp
je
mov
inc
in
sub
dec
push
jo
jle
es
pop
cli
add
loope
addr16
sub
xor
jl
inc
shr
mul
icebp
sbb
xchg
cmp
sbb
xlat
int3
rcr
mov
dec
scas
daa
idiv
lods
pop
pushf
mov
adc
adc
loop
rcr
push
stos
adc
iret
rol
imul
xchg
psrad
lea
add
inc
dec
jnp
nop
mov
mov
adc
pop
or
sbb
test
(bad)
or
in
sti
ja
cwde
jp
sub
das
xchg
jmp
iret
jae
xchg
pop
ins
scas
mov
fs
inc
mov
pop
int3
out
jnp
jle
jnp
std
dec
or
imul
into
or
nop
sub
jne
jbe
xchg
push
dec
sub
pop
push
das
enter
and
jne
es
xor
imul
es
inc
rcr
xchg
mov
xor
fstp
mov
cmp
dec
and
xor
loope
cmps
sub
sub
mov
out
mov
sti
lea
aam
lahf
cwde
repz
xor
out
or
jge
ins
scas
lock
dec
jle
data16
pop
pop
clc
imul
lea
out
jecxz
inc
ins
jns
or
iret
jecxz
loopne
aaa
fwait
sub
sti
lods
in
addr16
dec
inc
mov
jmp
or
daa
or
add
iret
dec
add
push
inc
and
loope
mov
ror
(bad)
idiv
popf
out
pop
push
pop
or
(bad)
in
test
cmc
mov
and
loop
xchg
jnp
push
adc
sti
pop
xchg
out
xor
xor
inc
rcr
adc
bound
sahf
scas
lods
xchg
test
cmc
cdq
cmps
loope
lea
jecxz
cmp
push
clc
fmul
pop
cmp
int
scas
call
out
xor
jnp
inc
pushf
xchg
lea
not
(bad)
idiv
fcmovbe
push
jle
ret
mov
or
adc
dec
out
stos
les
adc
mul
rcl
lock
or
ja
shr
cmps
mov
jp
inc
aaa
sub
dec
sar
imul
fstp
inc
(bad)
jns
dec
les
and
or
stos
xlat
test
jnp
cmp
div
dec
pop
jno
stos
xchg
push
xchg
cdq
sbb
cmp
inc
cld
js
pop
mov
pop
mov
jl
repz
push
xor
pop
js
fadd
dec
xchg
adc
in
das
loop
xor
lock
fadd
mov
xchg
xchg
mov
xchg
xchg
push
xor
(bad)
out
cmp
mov
in
xchg
xor
mov
cmc
jge
jno
jge
or
push
mov
call
icebp
sub
xor
push
retf
js
push
pavgb
and
mov
cmp
jge
cmp
ja
mov
es
inc
in
icebp
jp
push
xchg
sub
dec
xor
or
(bad)
push
mov
xor
fs
inc
sbb
fsub
xchg
push
cmp
push
ins
and
fisub
enter
cs
pop
jnp
or
jne
inc
dec
data16
(bad)
pop
dec
push
punpckldq
mov
outs
ja
inc
retf
xor
and
gs
cmps
xchg
pop
cmp
mov
sub
push
loope
addr16
pop
scas
cmp
loopne
adc
mov
sbb
(bad)
xchg
inc
outs
popf
xor
sbb
push
jp
(bad)
mov
sbb
jnp
leave
(bad)
ficomp
loope
ins
inc
and
dec
push
mov
sub
mov
dec
push
jle
sti
daa
and
push
repz
ret
jno
shl
cwde
or
pushf
inc
mov
dec
ret
push
sub
xor
ja
push
xchg
outs
push
stc
call
mov
inc
cmp
xchg
push
icebp
call
out
out
dec
xchg
and
sub
lds
mov
push
ja
xor
cmp
jae
mov
aam
les
adc
xor
lds
inc
out
mov
mov
push
sbb
and
pop
xchg
jmp
sbb
adc
in
cmp
dec
(bad)
std
or
fcomp
ins
daa
fst
and
push
push
lods
popa
mov
jg
mov
sbb
adc
and
inc
das
and
add
pop
scas
jg
pusha
xchg
popa
rcr
fmul
sbb
pop
test
ins
add
jecxz
xor
lahf
or
sbb
rcl
mov
call
add
(bad)
lock
adc
rep
jb
jae
sbb
and
add
aas
inc
je
scas
pop
push
nop
movs
jnp
and
fwait
mov
std
fnsave
sti
mov
daa
clc
std
mov
ror
add
mov
outs
arpl
movs
jb
ins
push
push
test
div
mov
pop
aam
(bad)
(bad)
(bad)
into
ins
pop
sub
test
mov
test
sub
jb
cdq
jl
jge
add
lock
(bad)
into
pop
xchg
xchg
inc
push
push
mov
xchg
mov
sbb
sbb
jnp
daa
sahf
jp
push
(bad)
mov
ror
jmp
ja
cmp
push
repnz
pop
pop
inc
lahf
pushf
clts
out
rol
sbb
stos
jo
mov
or
ret
sbb
push
ss
mov
xor
enter
fdivp
les
test
inc
pusha
sub
idiv
mov
mov
jb
shl
in
lods
adc
das
push
adc
movs
div
mov
stc
mov
cmps
aas
data16
mov
sbb
cs
push
inc
mov
out
or
push
cs
lods
and
jg
pop
xchg
mov
xchg
and
stos
out
pop
pop
lods
mov
push
wrmsr
(bad)
cmp
setb
mov
je
repnz
aam
mov
ret
pop
rcr
movs
sbb
adc
mov
ret
push
sub
or
cmps
call
cmp
lock
add
xor
enter
add
rol
xor
(bad)
imul
pop
mov
inc
jge
in
gs
inc
loopne
call
cs
add
aam
mov
ror
mov
push
test
out
xchg
sbb
inc
test
hlt
jmp
or
js
mov
add
call
cmp
jae
mov
or
sahf
jecxz
data16
mov
jmp
pusha
inc
cmps
and
ja
cdq
fist
push
jl
xchg
ja
xor
xor
push
jmp
test
ret
and
and
sub
jns
adc
xor
ins
(bad)
loopne
ins
mov
retf
leave
mov
ins
cld
lds
xchg
js
jge
cmps
cwde
scas
push
outs
fmul
sub
aas
fidiv
mov
and
push
imul
sub
es
push
adc
and
loop
frstpm(287
movs
push
jecxz
jno
add
or
arpl
push
outs
shl
cld
xchg
fwait
or
and
hlt
mov
adc
movs
mov
int3
or
fucom
lock
adc
cs
sub
fsubr
mov
dec
fst
fcomp
jp
push
mov
imul
dec
pop
out
sbb
ret
sahf
push
cmp
nop
jae
mov
jp
jno
or
mov
test
dec
dec
mov
int
loopne
xor
xchg
dec
lods
add
retw
xchg
ins
sub
out
mov
lea
out
sbb
shr
mov
adc
aam
cs
mov
adc
push
mov
jb
push
rcr
ins
push
dec
cmp
data16
pushf
mov
xchg
cld
cld
push
mov
add
cdq
pop
mov
mov
mov
jp
dec
pop
and
add
inc
cmps
popa
retf
xchg
into
dec
(bad)
stc
inc
test
jns
lock
repz
and
mov
dec
inc
nop
jne
cmp
sub
or
ja
xchg
fist
mov
(bad)
movs
call
bound
outs
add
inc
iret
call
enter
dec
sub
retf
hlt
and
adc
jg
pop
adc
inc
repnz
mov
push
out
out
sbb
(bad)
nop
cs
movs
and
stos
mov
push
aam
pop
xchg
mov
jecxz
sub
jnp
fbstp
jg
je
mov
dec
add
jmp
xchg
push
inc
shl
inc
inc
cmps
xor
pop
loope
lods
cmps
cmc
pop
test
and
out
xor
punpcklwd
nop
mov
and
or
jl
int3
lods
push
sub
or
jno
inc
adc
adc
mov
rcl
pop
ja
add
pop
pop
push
adc
test
inc
cmps
sbb
aam
test
mov
(bad)
adc
mov
push
in
shl
icebp
push
int3
jp
inc
dec
cdq
jno
xor
sbb
mov
jmp
jge
xor
(bad)
fld
(bad)
jl
out
inc
addr16
sbb
enter
cli
jo
inc
cs
mov
sbb
or
fmulp
mov
xchg
xchg
inc
gs
cmp
inc
adc
sub
sub
inc
fisubr
pop
icebp
cs
loope
test
push
or
outs
cmps
pop
add
xor
das
lods
jle
and
aas
shl
ja
jno
jno
test
dec
push
mov
(bad)
cwde
pop
das
dec
arpl
jle
aad
dec
mov
out
and
idiv
aas
mov
rcr
mov
adc
inc
stos
(bad)
outs
popf
cmps
into
stos
lock
xchg
test
sahf
and
xor
ja
pop
pop
pop
movs
(bad)
(bad)
mov
and
add
repnz
ror
nop
inc
lods
push
dec
int
out
cmc
jae
mov
adc
dec
in
mov
mov
push
mov
cmc
dec
arpl
add
shr
or
scas
and
shl
and
(bad)
add
fisubr
not
cmp
push
jns
cmp
fs
loop
fild
fld
sub
push
add
movs
xlat
loope
sbb
xor
mov
inc
jae
int
pop
xchg
int
xor
pushw
popf
popa
cs
pop
lea
fs
adc
call
out
adc
mov
das
aad
or
imul
xchg
inc
aaa
cmp
inc
xchg
iretw
montmul
cmps
add
and
les
dec
or
fidivr
push
in
iret
int3
test
bound
xchg
add
nop
jmp
and
nop
test
cmp
inc
dec
pop
enter
scas
scas
cmp
or
mov
gs
xor
add
dec
(bad)
pop
sub
xor
loop
cmp
dec
cmp
cmps
icebp
movs
fsub
sahf
jno
out
scas
test
stos
mov
repnz
xchg
mov
jecxz
jae
push
add
cmps
mov
pushw
xor
outs
mov
xchg
shr
cli
mov
pushf
and
fmulp
out
push
adc
xchg
aaa
ja
sbb
out
ret
(bad)
or
out
inc
mov
pop
jns
cmp
pushf
and
push
xchg
jo
pop
push
cmps
arpl
fwait
test
repz
cmp
inc
mov
in
ins
inc
inc
lods
pop
sbb
pop
loopne
cmps
out
xor
loop
enter
push
lahf
hlt
xchg
xchg
jns
mov
cmps
mov
fdivr
add
sti
movs
lods
push
jg
jno
mov
cmps
push
out
mov
ins
add
pop
bound
mov
pop
cmp
ins
sub
mov
cmp
adc
jno
(bad)
ss
jnp
push
xchg
cli
cmp
mov
and
lods
jns
mov
sbb
cs
iret
jecxz
mov
adc
mov
sub
jno
mov
pop
ja
les
inc
add
ss
gs
js
into
jbe
push
fwait
(bad)
jl
movs
ss
sub
ins
enter
and
cli
in
sbb
pushf
push
stc
adc
dec
mov
stos
xchg
or
cs
mov
add
(bad)
push
adc
jnp
or
call
sbb
adc
(bad)
cmp
repz
mov
jb
mov
push
adc
ficom
rcr
jl
sbb
les
cdq
test
pop
in
cs
sar
fmul
inc
imul
ror
mov
repz
shl
rcl
xor
repnz
mov
dec
imul
push
popf
add
jecxz
xor
pop
sub
jnp
or
fsubr
xlat
loopne
sbb
iret
ficom
(bad)
jmp
and
lahf
jae
icebp
cmp
inc
sub
out
mov
loope
push
pop
push
jno
dec
push
mov
or
call
sub
xchg
addr16
out
int
mov
jb
cmp
inc
(bad)
out
and
dec
sub
push
call
icebp
add
sahf
pop
and
jno
out
dec
aad
mov
pop
inc
and
fcomip
daa
aam
mov
int3
cmc
dec
js
out
cmp
popa
jns
inc
cmp
sub
in
loope
call
js
or
cli
sub
pop
jbe
pop
and
xchg
mov
pop
mov
in
jmp
mov
lahf
shl
add
cmp
sbb
add
cli
jecxz
cmp
dec
sbb
pop
cmp
pop
bound
sub
lods
dec
jle
stos
test
pop
fisubr
pusha
cmp
in
mov
push
adc
pop
or
adc
retf
test
cmp
ins
in
adc
imul
loop
jecxz
pop
inc
retf
fidivr
sbb
sbb
jne
data16
jnp
movs
in
sub
retf
pop
rcl
int
imul
sbb
mov
mov
cmc
bnd
push
fist
cs
test
xchg
sub
sub
mov
inc
test
jle
mov
je
test
or
sub
xor
sbb
inc
icebp
mov
pushf
add
sahf
daa
out
fstp
addr16
in
mov
not
cli
mov
adc
data16
dec
aas
sub
shl
fwait
cmp
outs
pusha
scas
and
imul
push
in
les
in
mov
pop
add
jl
ret
jl
lds
rcl
push
stos
(bad)
call
cmp
adc
ds
pop
push
jmp
pop
mov
je
sti
adc
add
dec
rol
xor
mov
rcl
lds
lahf
jl
js
push
mov
sub
dec
inc
aam
ins
imul
enter
push
imul
xchg
pop
mov
jl
and
adc
outs
push
not
add
mov
sub
add
xor
lahf
pop
mov
fimul
cmps
add
xchg
xchg
aas
adc
jmp
(bad)
aad
jb
repz
xchg
add
push
scas
sub
inc
movs
pop
lock
fwait
mov
movs
lahf
ja
loopne
repz
mov
test
xchg
sub
loop
cwde
xor
mov
data16
scas
adc
out
movs
pop
test
enter
stos
int
push
sub
adc
js
mov
jb
stos
test
add
cmp
mov
mov
and
into
or
and
sub
or
pop
out
mov
nop
loopne
mov
shl
inc
sub
inc
jle
mov
sub
push
pop
cli
mov
ja
(bad)
sbb
inc
mov
(bad)
(bad)
(bad)
pop
ins
xchg
add
xor
in
xor
jne
maskmovq
mul
mov
or
(bad)
retf
jne
jle
lea
pusha
adc
xlat
inc
js
sub
mov
mov
adc
pop
sahf
pop
xor
push
or
jns
in
sub
sub
jg
les
enter
sub
and
pop
jecxz
imul
(bad)
jmp
(bad)
in
dec
push
mov
sbb
out
xchg
inc
mov
xacquire
lds
cmp
mov
push
xchg
fadd
cwde
arpl
inc
loop
lock
stos
out
cmps
fwait
cmp
pushf
pop
(bad)
mov
sub
mov
mov
sub
mov
jmp
jnp
movs
xor
or
das
pop
sub
addr16
xchg
mov
push
(bad)
jge
xor
das
inc
jmp
into
cmp
jbe
mov
(bad)
and
arpl
jge
xchg
into
and
in
xchg
out
mov
in
mov
mov
jge
adc
jmp
imul
jp
shl
fs
scas
inc
mov
cwde
add
sahf
adc
mov
push
icebp
sbb
pop
repz
loopne
xor
(bad)
cld
add
cmp
pusha
jo
fs
rol
mov
dec
test
pusha
lods
ds
hlt
movs
xor
ror
pop
fwait
mov
out
scas
mov
fimul
or
push
or
xchg
imul
pop
add
dec
inc
jne
xchg
cmps
push
cmp
push
dec
mov
push
fisub
adc
inc
in
int3
hlt
xor
and
and
loope
add
mov
mov
sbb
or
xor
lahf
push
sub
jecxz
cmp
cmc
jno
fwait
stos
cmp
sub
mov
das
sar
cmps
inc
push
or
aas
inc
nop
mov
jg
sbb
lods
pop
mov
jmp
xor
adc
xor
in
dec
cdq
hlt
aas
dec
test
xchg
lahf
push
int3
inc
call
les
scas
leave
repnz
mov
sub
mov
push
xor
shr
mov
scas
sahf
mov
adc
and
inc
push
(bad)
aas
pop
push
dec
inc
retf
inc
jo
mov
adc
mov
ins
jne
fwait
mov
lods
and
jmp
mov
stc
lds
jmp
aad
xlat
(bad)
lahf
mov
sub
imul
or
dec
adc
sbb
xchg
pop
pop
cwde
popf
mov
push
sbb
cmp
js
imul
fdivr
cwde
test
nop
call
sar
lea
sub
dec
adc
pop
dec
aas
add
js
jb
js
out
das
and
xchg
gs
cld
cmp
in
push
xlat
adc
movs
inc
shr
scas
mov
dec
(bad)
jbe
test
in
int
jecxz
out
and
sbb
mov
fidivr
xor
add
arpl
repz
mov
js
rcr
sahf
cmp
fwait
mov
push
adc
(bad)
aaa
and
mov
ficom
cmp
dec
(bad)
int3
lock
cmp
lahf
push
cmp
jecxz
mov
movs
sub
fs
dec
dec
push
cmp
mov
inc
mov
call
repz
sbb
or
in
xchg
pushf
rcl
imul
inc
pop
cmp
iret
iret
inc
cli
push
fsub
adc
mov
dec
push
inc
fcomi
daa
arpl
out
and
daa
sbb
lods
xchg
push
gs
scas
fist
data16
lock
jne
cmp
xchg
mov
loop
outs
in
xchg
rol
sar
cs
clc
pop
std
es
push
sub
cs
sub
adc
lods
cmp
ror
(bad)
cmp
push
arpl
cmp
test
mov
jns
sub
pusha
xor
sbb
aam
and
imul
imul
push
test
add
scas
imul
jle
out
(bad)
push
or
mov
mov
loop
ror
popf
xor
sbb
enter
loope
cmp
cs
fmul
pop
in
or
pop
pop
cmp
cmp
retf
mov
or
loopne
push
clc
stos
popa
call
movs
jmp
test
outs
(bad)
and
cmp
stos
xor
jbe
pop
in
xor
mov
jmp
fimul
and
mov
(bad)
int
and
push
popf
les
mov
adc
lahf
loope
dec
popf
aam
push
dec
xor
jmp
in
ror
adc
rep
dec
test
fisubr
nop
sub
push
mov
or
xor
stos
imul
or
add
(bad)
fmul
jmp
cmp
jb
bound
and
push
lea
mov
push
push
push
mov
test
and
ja
jg
retf
xchg
movs
fisub
add
inc
cmps
dec
mov
stos
dec
jbe
mov
rcl
mov
push
out
outs
dec
into
pop
jge
add
xchg
push
lods
cmc
mov
std
mov
aam
mov
popa
dec
jns
sub
(bad)
dec
call
jmp
loopne
pop
(bad)
push
mov
psubb
jmp
popf
jno
ret
jmp
push
xchg
jecxz
jle
and
ret
jmp
ror
call
mov
repz
push
stc
jmp
jmp
pop
mov
push
data16
loopne
jecxz
cmp
(bad)
mov
sbb
sub
aaa
ret
pop
mov
pop
out
dec
stc
mov
mov
in
in
mov
sub
cmp
pop
scas
fcom
out
stc
mul
mov
mov
outs
mov
jmp
scas
repz
sbb
mov
mov
inc
aad
bound
xchg
and
mov
sub
dec
ds
jb
mov
xor
jl
nop
in
cmp
mov
sti
leave
daa
lods
and
jmp
pusha
inc
cmp
xor
cmp
xor
mov
(bad)
push
das
loop
cmp
int
mul
jl
pop
imul
mov
mov
lahf
inc
jl
nop
iretw
data16
mov
sahf
outs
sub
clc
adc
sbb
push
sbb
sbb
stos
das
xlat
mov
sub
mul
lds
fstp
mov
push
xchg
(bad)
imul
test
inc
shl
or
leave
jl
xchg
add
out
(bad)
or
stos
adc
or
rcr
mov
jl
mov
mov
imul
cmp
pop
lods
ror
add
test
js
(bad)
(bad)
aas
mov
mov
adc
pop
gs
out
cs
das
clc
and
mov
inc
rcl
bound
xchg
or
fnstcw
mov
push
and
or
jnp
icebp
or
fst
call
adc
or
adc
mov
jmp
in
ss
xchg
shr
jmp
jno
and
push
sbb
lods
out
mov
aaa
jmp
leave
loop
xor
leave
lods
cmp
(bad)
retf
pop
in
das
stos
js
xchg
ficom
or
jg
pusha
cmove
rcl
xchg
ror
xchg
push
iret
xor
pop
xor
retf
add
mov
loope
sub
inc
push
dec
imul
int
hlt
retf
mov
xchg
and
and
(bad)
cli
jb
pop
jns
pop
div
push
pop
xchg
retf
loope
adc
sub
shr
jne
and
cmp
fsub
stos
pushf
jle
dec
xor
(bad)
stc
enter
loope
sub
movs
xchg
mov
xor
sub
mov
mov
jle
cdq
cmp
cmp
cli
cmp
cmc
sub
mov
adc
idiv
push
mov
scas
sub
mov
pushf
mov
or
mov
out
out
(bad)
adc
xchg
ret
xor
dec
bound
stc
into
inc
call
or
pop
rcr
pushf
sbb
enter
out
pop
mov
outs
cs
pop
sbb
jle
rol
mov
clc
jmp
daa
xchg
leave
xchg
cmps
mov
int3
mov
pushf
or
pop
movs
(bad)
imul
adc
sbb
mov
cwde
mov
jmp
xor
push
mov
xor
add
xor
sbb
or
xchg
mov
(bad)
sbb
xor
js
es
jae
movs
adc
xlat
shl
movs
mov
imul
stos
inc
std
jae
dec
jle
nop
dec
inc
cli
add
xor
xchg
pushf
lock
jo
shl
outs
cli
sub
pop
ins
mov
movs
lods
fistp
pop
or
(bad)
pop
popf
dec
cmp
and
mov
adc
pop
inc
lds
daa
cdq
cmp
retf
fistp
jmp
fild
cmp
int
jnp
stos
mov
dec
mov
sbb
mov
das
pusha
jmp
enter
pop
cmp
clc
lahf
leave
add
add
inc
loopne
in
nop
push
out
lahf
js
push
sbb
mov
stc
in
xor
in
retf
dec
sub
pop
scas
aad
test
or
xchg
push
mov
mov
in
iret
idiv
cwde
jae
xchg
rcl
daa
popf
xchg
hlt
mov
lds
push
inc
jne
outs
aad
mov
mov
loopne
dec
mov
adc
(bad)
stos
test
and
dec
ud1
scas
stc
icebp
and
pop
or
adc
jg
jge
shl
add
out
mov
jg
in
xchg
adc
push
mov
lea
jp
xchg
sub
pop
ret
mov
or
rcl
mov
mov
cmp
out
sti
repz
outs
sti
cmp
lods
jb
cmc
adc
mov
loop
inc
pop
aas
mov
adc
shl
imul
hlt
retf
fisttp
xlat
mov
sub
xchg
inc
sbb
(bad)
(bad)
(bad)
and
stos
cmp
inc
cmp
pop
popa
(bad)
lods
push
adc
mov
push
sbb
or
xlat
xchg
out
sub
scas
mov
mov
aam
(bad)
mov
sbb
jo
jns
jno
pop
add
lods
cmps
repz
dec
inc
mov
and
adc
call
push
xchg
(bad)
inc
push
xor
push
mov
lock
fistp
fst
and
and
cwde
scas
jmp
inc
dec
ins
push
cmps
push
stos
pop
jge
call
daa
cld
jmp
pop
std
mov
les
cmp
xchg
loope
fs
stos
push
ins
fcom
call
push
sub
jl
inc
lods
dec
sbb
push
cs
mov
imul
mov
rol
pop
mov
shr
aaa
push
out
xchg
ins
pushf
data16
mov
xchg
jge
dec
push
push
xor
mov
mov
or
ins
in
jp
pop
fmul
xchg
ret
outs
scas
fs
out
lods
leave
dec
mov
stos
xchg
hlt
or
push
add
jecxz
test
adc
popa
cld
rol
cmp
out
mov
xchg
push
push
sub
adc
sbb
scas
jge
mov
sub
add
mov
ins
xchg
popa
in
pop
aam
adc
xor
mov
xchg
mov
mov
pop
inc
dec
inc
in
lods
inc
movs
sbb
xor
xchg
mov
cmp
gs
sbb
icebp
or
inc
push
fld
cmps
into
test
arpl
scas
push
adc
sub
jmp
sbb
inc
sbb
es
lea
aaa
sub
les
sbb
outs
pop
jmp
adc
xchg
add
xchg
mov
ret
pop
mov
call
out
push
push
and
push
or
mov
xor
leave
aaa
jo
or
je
xlat
mov
(bad)
fidiv
xchg
sub
rol
hlt
cwde
xor
daa
pop
pusha
mov
mov
outs
dec
sar
arpl
outs
mov
cmp
adc
sub
jb
adc
mov
push
dec
add
movs
add
dec
dec
push
mov
sub
pop
mov
push
mov
or
xor
ins
add
ss
sub
adc
jp
mov
xchg
xchg
test
sub
call
push
mov
outs
push
xor
dec
outs
adc
cmps
pop
shr
das
mov
xchg
arpl
adc
stos
mov
cmp
inc
jl
aaa
outs
mov
inc
add
repz
dec
push
rcr
sbb
pop
fs
fisttp
scas
xor
scas
out
inc
mov
xor
sub
ja
adc
or
inc
test
adc
ds
das
xor
add
mov
popf
push
aas
fistp
xor
les
xchg
shl
push
fist
xor
lea
adc
clc
(bad)
shl
fs
lds
dec
push
lahf
or
jge
stos
shl
push
inc
loope
and
call
xchg
ret
inc
mov
mov
imul
popa
jg
ins
fist
dec
retf
jl
ins
cmp
cmp
jmp
inc
ds
mov
gs
in
test
sub
cs
retf
data16
fs
inc
xchg
pop
fist
or
lods
and
ss
jg
outs
ins
loopne
sahf
pop
in
(bad)
fistp
aaa
ins
scas
sbb
xor
fistp
or
out
addr16
outs
dec
stc
loop
loop
push
test
into
xchg
mov
retf
mov
leave
dec
and
xchg
pop
sbb
pop
jnp
fs
retf
add
in
mov
sub
outs
inc
inc
popa
or
lea
sub
push
mov
mov
les
int
jns
inc
and
rol
repz
jg
mov
in
fiadd
jae
sbb
jo
jbe
adc
sub
xchg
mov
adc
aaa
adc
jns
ffreep
sbb
and
pop
mov
push
xchg
pop
mov
aas
fwait
cmps
cdq
or
shr
lahf
adc
jp
not
loopne
data16
and
xchg
jmp
mov
push
test
jl
int3
mov
int
or
sbb
add
loopne
ret
adc
not
dec
mov
jle
cmp
push
je
mul
push
adc
inc
xchg
push
cs
pop
cmp
mov
ins
imul
outs
loopne
and
aas
sub
and
or
mov
and
dec
fs
jno
cmp
sbb
xrelease
pushf
jmp
push
sub
mov
sbb
inc
pop
call
inc
and
inc
enter
xor
iret
ret
adc
dec
jmp
daa
add
mov
inc
inc
popf
leave
sahf
cli
outs
mov
(bad)
cmp
dec
sti
sahf
in
sub
xchg
stc
(bad)
jo
imul
jmp
add
mov
icebp
lods
add
imul
xchg
dec
adc
inc
nop
inc
xchg
adc
mov
sbb
loopne
fs
or
imul
xchg
fsub
pushf
(bad)
cmc
mov
mov
and
nop
pop
jle
push
out
lea
mov
leave
sbb
or
xchg
cdq
into
pop
ret
or
inc
and
push
adc
push
std
loope
fs
test
cmp
das
mov
(bad)
repz
push
fst
lock
dec
lods
jecxz
add
sub
lds
and
movs
mov
pop
int
cmp
ins
xchg
cmp
test
lods
jns
inc
push
jmp
xor
fistp
(bad)
and
(bad)
addr16
xchg
ins
aas
jge
jp
mov
dec
inc
dec
rcr
leave
jge
sub
adc
push
push
add
cmps
xchg
ss
leave
lahf
test
jnp
lods
into
cmp
mov
in
add
test
call
sbb
ret
les
sub
dec
stos
inc
fimul
pushf
or
jmp
xor
pop
loopne
loopne
cmp
neg
adc
lahf
mov
loop
xor
dec
cwde
je
mov
loopne
mov
push
into
and
xchg
add
sbb
loopne
cli
push
dec
mov
stos
cmp
sub
adc
cmc
adc
adc
cmp
test
jle
sub
xchg
push
adc
dec
pop
adc
mov
ins
popa
es
ja
xchg
push
fwait
add
adc
rcl
dec
or
jmp
xor
std
cwde
fs
sti
js
mov
add
fld
shl
xor
test
pop
jle
add
xchg
jns
imul
xchg
adc
rol
ret
sub
mov
and
jns
mov
pop
into
or
imul
jg
mov
push
call
inc
mov
shl
loope
sahf
hlt
adc
cmp
imul
and
cmp
sti
jne
stc
and
mov
(bad)
aam
movs
std
cmp
dec
into
mov
mov
stc
push
ret
xor
hlt
cmp
mov
mov
repz
lahf
and
std
cmps
cmp
sub
push
and
aaa
mov
or
jmp
dec
inc
cmp
or
loop
hlt
iret
adc
cmp
(bad)
aad
and
jle
push
xchg
cmp
stos
aad
push
sahf
lock
mov
xor
nop
or
mov
cmp
mov
fcomp
mov
adc
push
mov
pop
mov
je
push
fidivr
lahf
inc
ja
mov
outs
inc
pop
dec
jo
jo
xchg
movs
test
call
outs
pushf
and
pop
shl
jle
fdivr
ror
xchg
nop
cs
data16
xchg
mov
lock
or
cwde
mov
pop
xchg
cmp
(bad)
adc
mov
rcr
mov
aam
(bad)
lock
or
stos
imul
rol
pop
push
(bad)
inc
mov
inc
or
lods
cdq
sub
cmp
or
dec
cmp
push
and
es
add
outs
pop
in
push
jns
jnp
cmp
push
push
mov
jecxz
mov
sub
call
jmp
cmc
call
(bad)
push
je
stc
xchg
xchg
or
dec
jg
lods
mov
cli
imul
out
in
pushf
cld
or
push
std
inc
cmc
pop
movs
jnp
loopne
cmp
shl
stc
pop
sub
dec
leave
xchg
push
cmps
push
ins
push
pop
std
jmp
sbb
iret
frstor
xor
pop
dec
call
pop
jle
or
push
mov
pop
sub
adc
cdq
add
in
inc
mov
sti
mov
sub
aad
xchg
ret
out
xchg
jecxz
into
aaa
mov
mulps
(bad)
call
pop
neg
ins
or
mov
pop
pop
and
mov
clc
dec
pop
enter
cmp
in
popf
lea
sbb
mov
push
fisub
aad
in
mov
and
lea
jno
lods
adc
repnz
aam
jbe
pop
mov
push
cdq
push
mov
xchg
cdq
pop
adc
and
fistp
and
adc
add
push
out
loope
adc
int3
cmp
xchg
lds
xchg
sub
push
lahf
jno
inc
and
mov
push
out
ja
pop
add
test
dec
stos
outs
fwait
inc
xor
sbb
fnsetpm(287
mov
push
push
sbb
dec
loope
jb
sub
stos
dec
and
jno
adc
adc
mov
int
cmp
pop
add
jl
int
xor
in
pop
shrd
fmul
loopne
add
xchg
movs
fcomi
in
jbe
popf
dec
mov
pop
psraw
int
nop
mov
push
cs
mov
lds
adc
hlt
xor
mov
dec
out
adc
je
and
pop
aam
rcl
call
sbb
inc
cld
inc
ins
imul
and
in
and
mov
push
cmp
out
push
cmp
ins
mov
sbb
mov
push
enter
sahf
dec
sbb
test
aam
cs
xchg
add
aam
int
jae
mov
dec
int3
shl
outs
inc
inc
xchg
sbb
cmp
lock
jg
push
adc
jno
pop
add
ret
imul
fstp
pop
scas
ror
jmp
mov
cmp
dec
push
nop
or
push
sbb
xchg
add
jl
jbe
sbb
pop
mov
xor
outs
sbb
xchg
daa
repz
add
movs
popf
retf
je
shl
push
stc
dec
outs
test
repnz
aad
pop
stc
jno
ins
int3
add
scas
jns
cmp
icebp
inc
inc
movs
movs
mov
aad
and
clc
mov
mov
xchg
mov
mov
ins
add
push
or
mov
jns
lds
daa
inc
dec
jg
sahf
scas
mov
call
pop
loope
cmp
aas
inc
mov
add
call
push
jg
xchg
leave
enter
lds
push
int
inc
leave
shl
lds
cmps
jb
aas
in
repnz
call
mov
imul
jno
jle
rcr
xor
stos
sbb
hlt
mov
out
inc
(bad)
and
imul
pop
cmc
out
mov
jp
inc
enter
adc
dec
test
jge
test
mov
out
xchg
mov
add
shl
dec
je
inc
in
rcr
xlat
mov
(bad)
jns
push
les
mov
add
jle
cmps
aad
addr16
push
scas
je
pop
loop
les
das
shl
ss
scas
addr16
jp
mov
outs
lods
rcl
mov
sub
movs
push
ins
out
cmp
mov
cmp
pop
not
pop
jb
and
lods
int3
fsub
mov
push
fs
sbb
and
and
in
fdivr
retf
adc
dec
lods
adc
push
push
adc
test
sub
mov
jg
push
push
mov
sbb
repnz
add
add
sbb
fwait
sub
adc
xlat
jl
jp
dec
lods
pop
(bad)
out
push
scas
mov
jmp
xchg
mov
(bad)
inc
and
jbe
ins
ficom
shl
push
(bad)
dec
xor
cmps
xor
mov
outs
std
ds
adc
aaa
jbe
pushf
repnz
(bad)
push
fsub
out
lds
mov
xor
mov
loope
xchg
enter
leave
push
jae
sub
mov
or
sar
jno
pop
inc
mov
mov
aaa
rcr
and
std
adc
or
dec
aas
push
push
cmp
fsub
out
loopne
inc
cmp
bound
cdq
adc
and
in
out
inc
adc
in
int
push
dec
xor
xor
sub
jnp
or
outs
adc
xlat
cmps
pop
jne
inc
jp
push
lods
add
jmp
ret
sub
lods
cmps
into
inc
cdq
dec
mov
lods
jo
sub
sub
std
je
mov
loope
push
push
xor
pop
es
cmp
mov
pop
jmp
(bad)
sub
in
nop
daa
jge
scas
js
cmc
mov
mov
xchg
sub
sub
cmc
gs
out
push
aas
dec
push
pop
sub
jmp
inc
dec
xchg
xor
test
fs
xor
mov
shr
shl
fs
add
jb
jns
rcr
cs
cmps
dec
les
hlt
pop
jne
cld
mov
push
lds
ja
cwde
lods
cmp
mov
retf
ins
adc
arpl
aad
outs
fidivr
sahf
mov
xor
les
in
fadd
mov
sbb
dec
loop
mov
xor
fdiv
mov
fsubr
xor
les
and
inc
mov
pop
ror
inc
jno
sub
into
test
sti
mov
add
mov
stc
fbstp
inc
xchg
retf
jnp
lods
lods
push
cli
pop
pushf
into
dec
outs
ret
add
add
adc
jge
in
push
jmp
push
inc
loope
hlt
pusha
sbb
retf
(bad)
scas
test
jle
jle
adc
fimul
popa
out
dec
(bad)
push
push
(bad)
les
xchg
les
xchg
pop
nop
inc
daa
mov
std
and
shl
ds
into
xor
shl
push
sub
dec
sub
es
sub
push
xchg
push
icebp
(bad)
sti
das
je
(bad)
fs
test
push
jp
idiv
shl
enter
das
dec
imul
rcl
pop
push
jecxz
lods
jp
lock
ret
jg
loopne
ror
mov
dec
mov
dec
(bad)
int3
xchg
xor
push
imul
jnp
movs
mov
cmp
mov
mov
aas
mov
cmp
js
cmps
or
scas
(bad)
mov
in
cmp
pop
retf
sub
jg
push
call
dec
aad
sbb
cs
mov
dec
sub
jno
fs
xchg
fs
(bad)
pusha
lods
retf
pop
and
aam
mov
test
mov
fidivr
push
retf
imul
sbb
jnp
enter
sbb
pop
stc
(bad)
dec
movd
lods
sar
loope
sahf
pusha
sar
adc
sbb
mov
push
mov
repnz
inc
push
and
dec
xor
(bad)
adc
int
cmp
cdq
sbb
xchg
sub
(bad)
aas
mov
mov
repnz
(bad)
call
mov
xor
cwde
dec
cmovl
sbb
sbb
cmp
outs
jp
ror
fstp
inc
mov
jge
int
enter
pop
mov
test
dec
mov
out
inc
mov
pop
xor
test
inc
mov
stc
mov
fidivr
adc
xlat
push
das
xor
in
jp
stos
(bad)
fwait
push
out
inc
fnstenv
(bad)
inc
jg
aam
bound
mov
outs
test
pop
adc
xchg
jo
mov
in
xchg
xchg
xchg
les
retf
jge
jge
ds
jmp
jg
jae
jae
pop
mov
xor
ds
fwait
repnz
lock
outs
sbb
adc
inc
push
jg
adc
mov
call
adc
jb
bound
xlat
lods
mov
inc
dec
push
or
in
xchg
jb
(bad)
hlt
push
(bad)
jecxz
inc
push
inc
bound
stos
jae
(bad)
bound
in
(bad)
mov
hlt
enter
out
mov
xor
bound
(bad)
ret
pop
mov
lahf
xchg
in
mov
jecxz
iret
mov
shl
dec
mov
xor
cmp
test
inc
jg
inc
test
(bad)
or
movs
pop
call
sub
sbb
cli
cwde
add
daa
mov
xchg
pop
inc
push
xchg
icebp
xor
or
jno
jae
popa
inc
push
lahf
sbb
jge
push
ficomp
adc
inc
gs
leave
stc
adc
push
xor
xor
xchg
popa
jle
sub
mov
mov
test
sub
xor
sub
xlat
jmp
adc
test
int
mov
xor
(bad)
jmp
jmp
jge
mul
adc
les
inc
jno
cmp
inc
mov
inc
(bad)
xor
fadd
sbb
xchg
add
cmp
movs
adc
imul
push
add
(bad)
jecxz
into
push
stos
jb
cdq
jo
xchg
mov
cwde
shl
lahf
dec
scas
jmp
bound
mov
jne
ret
xor
aam
sti
lds
jecxz
shl
xchg
(bad)
mov
xor
cmps
push
jp
or
jo
inc
fiadd
dec
cwde
xchg
xchg
jae
jb
xor
add
push
repz
pop
in
movs
outs
retf
rcl
pop
xchg
aas
out
mov
or
jge
push
aaa
gs
push
push
inc
sub
retf
jge
jae
xchg
mov
sbb
lahf
sub
call
aaa
sbb
mov
add
pusha
jmp
adc
cmp
hlt
clc
sti
adc
dec
sub
dec
imul
out
pop
pop
shl
cmp
or
mov
jmp
test
sub
xor
out
sbb
and
mov
pop
loope
lock
or
xchg
iret
xchg
pop
out
lods
mov
call
mov
sbb
jo
add
clc
or
mov
(bad)
pusha
in
scas
fsubrp
mov
bound
cld
lock
mov
add
leave
int
xchg
test
gs
add
out
jecxz
(bad)
call
jl
stc
fwait
xor
fild
and
fnstcw
js
cmps
shr
js
dec
inc
fadd
lock
xchg
inc
or
pop
icebp
test
mov
sub
lock
push
js
mov
aam
push
aam
fst
repz
in
scas
mov
mov
adc
add
retf
call
inc
int
inc
(bad)
ja
in
xchg
sub
mov
clc
test
call
xchg
fld
test
or
and
xchg
call
inc
dec
loop
shl
xchg
dec
jns
lods
dec
fnclex
dec
loope
enter
repz
adc
mov
mov
cmps
xchg
add
stc
je
mov
jae
ins
int
sbb
xchg
add
add
sbb
lds
adc
mov
xor
data16
callw
xor
loopne
dec
loope
pop
push
popa
ins
adc
loopne
cmp
mov
(bad)
call
ret
add
cs
push
push
push
dec
dec
inc
jle
jp
adc
mov
inc
icebp
addr16
faddp
or
inc
bound
cmp
cdq
pop
mov
sbb
lahf
cmps
jp
fmul
ret
jp
cmp
mov
sub
cmp
retf
jns
(bad)
and
mov
pop
dec
movs
fwait
ja
ss
cmps
push
(bad)
mul
call
arpl
push
pop
mov
cld
(bad)
and
xor
loopne
xchg
imul
or
(bad)
cmp
ja
ret
bound
add
neg
pop
mov
cmp
adc
scas
jb
push
cvtdq2ps
cli
enter
aaa
loope
jmp
loop
ret
jo
mov
adc
jp
inc
pop
jmp
dec
mov
push
cmp
stc
out
jbe
inc
mov
aas
adc
and
dec
std
ror
mov
fnstcw
mov
(bad)
in
es
cmp
ja
nop
and
mov
mov
cmp
fimul
pop
dec
sub
das
pop
hlt
fidiv
or
add
fisttp
fidivr
nop
jle
cmp
mov
ror
inc
aam
ins
add
pop
scas
pop
cld
(bad)
pop
add
iret
add
xchg
fsub
or
xchg
xlat
call
leave
xchg
jle
sbb
lock
mov
cmp
das
inc
test
cwde
push
push
mov
(bad)
inc
inc
test
mov
adc
call
adc
(bad)
and
jp
fsubp
adc
mov
mov
push
add
and
loopne
scas
push
test
push
or
push
jnp
pusha
or
mov
cwde
cdq
mov
scas
mov
int3
mov
cmp
hlt
xchg
or
mov
in
stc
add
dec
push
mov
(bad)
cmps
(bad)
cmp
daa
jne
ins
jne
stos
mov
int
out
gs
cmc
(bad)
ror
and
xor
push
(bad)
out
cmp
mov
das
mov
out
(bad)
outs
cmc
or
in
(bad)
mov
pop
(bad)
jmp
ss
inc
pop
cmps
dec
cmp
xchg
add
xchg
(bad)
cmps
sbb
sub
movs
jecxz
div
fs
dec
out
icebp
imul
jbe
xor
ror
xchg
repz
hlt
sti
xor
mov
scas
pushf
out
sbb
mov
ror
adc
cmp
or
xor
cmp
stc
mov
or
es
cli
test
or
stos
xchg
test
sbb
dec
mov
jmp
iret
cmp
sbb
mov
mov
or
das
push
mov
scas
bound
xchg
add
ja
jmp
sub
lods
mov
jnp
xor
frstor
jns
and
xchg
std
leave
mul
fadd
call
jo
idiv
gs
pop
pop
mov
(bad)
fwait
in
xor
jae
push
aaa
or
std
(bad)
call
fadd
dec
ret
and
ins
sti
sub
sub
xchg
les
les
sub
in
aaa
sbb
fidiv
cmps
pandn
or
pop
lahf
daa
int3
inc
sti
xor
scas
dec
into
popa
ins
ins
pop
lock
in
daa
inc
rcr
xchg
movs
adc
xchg
lock
jg
imul
dec
sahf
mov
stc
xor
idiv
js
out
fmulp
scas
sub
mov
outs
xor
lea
or
or
push
inc
fdivrp
std
jge
mov
sbb
pop
test
(bad)
shl
sub
dec
add
test
ret
lea
icebp
shr
add
fsub
std
sbb
dec
mov
xchg
and
ficom
mov
(bad)
ja
ja
and
xlat
pop
or
stc
mov
push
push
lock
cmps
xchg
and
xor
inc
jecxz
pop
(bad)
jae
adc
push
out
sbb
sub
mov
dec
outs
xchg
mov
sbb
aas
mov
add
push
inc
jge
xor
xor
jmp
add
enter
test
mov
sbb
or
pushf
inc
add
test
enter
inc
cmp
stc
outs
nop
ins
repnz
movs
outs
stc
fsubr
ror
adc
sub
sbb
mov
das
cld
les
outs
and
out
mov
mov
cmp
jmp
add
push
sar
cdq
aaa
sub
test
or
(bad)
(bad)
outs
dec
mov
iret
mov
or
imul
jne
mov
clc
xchg
push
add
mov
push
cld
or
into
pop
sbb
pushf
pop
int
push
add
dec
jle
pop
in
repnz
dec
call
stos
mov
dec
addr16
jl
pop
je
mov
sbb
repnz
mov
ret
ret
dec
adc
jnp
and
xchg
sbb
rcr
js
inc
sbb
mov
cmp
data16
jge
cmp
cmp
mov
cmp
lds
sahf
aas
or
aas
mov
jg
mov
movs
push
sub
or
sti
xchg
pop
ins
in
rcr
push
outs
push
mov
daa
ins
fist
pop
loop
inc
push
(bad)
mov
pop
jne
and
or
lock
dec
inc
mov
scas
push
add
cmc
and
scas
mov
lahf
lds
les
mov
or
push
sub
jle
bound
in
xchg
push
push
pop
and
mov
sub
xor
cmp
push
push
pushf
jno
loop
call
bound
jae
fstp
lahf
cmp
cmp
loope
sbb
jae
in
adc
sbb
jmp
fild
in
ret
mov
mov
frstor
ins
fcomp
lock
mov
inc
mov
cmp
jne
mov
xlat
or
sub
out
cmp
inc
mov
cdq
fisttp
mov
mov
jb
xchg
pop
cdq
repnz
inc
fidiv
mov
fdiv
sbb
sti
stos
shr
mov
rol
jle
out
mov
dec
xor
into
sbb
cld
dec
shl
xor
neg
push
push
push
push
mov
pop
adc
pop
cmp
div
retf
mov
and
repnz
pop
fst
lds
movsx
sub
inc
cs
pushf
jo
aas
inc
pushf
xor
cmp
rol
sub
xchg
imul
shl
push
and
call
enter
jle
(bad)
xchg
xor
outs
pop
test
xor
sahf
(bad)
fst
arpl
aad
mul
and
jnp
(bad)
icebp
int3
(bad)
and
xor
xor
loopne
je
mov
cdq
mov
xchg
imul
imul
sub
push
jl
or
outs
retf
xchg
ss
cld
mov
push
into
fadd
xor
(bad)
mov
mov
fs
push
push
push
adc
fdiv
xor
inc
ret
jg
loop
xor
xchg
xor
retf
scas
arpl
(bad)
fs
cmp
cmp
js
cmp
sbb
out
cmp
sub
jns
in
sbb
cmps
repnz
sti
pusha
popf
out
pop
sahf
xor
les
jmp
or
mov
push
pop
pop
pop
in
xchg
fucomi
add
hlt
jmp
rcl
sbb
sbb
call
scas
pop
(bad)
enter
push
scas
cmp
sub
mov
rep
sub
jmp
inc
outs
sub
jae
dec
scas
and
jle
and
idiv
xchg
mov
imul
xchg
cmp
jp
call
jmp
pop
pusha
sbb
dec
pop
add
(bad)
not
add
lea
popw
pop
pop
fcom
into
xor
xchg
pop
jmp
out
sbb
imul
imul
and
dec
adc
inc
pop
ror
out
imul
cmp
push
imul
pop
dec
jmp
mov
arpl
mov
mov
test
dec
out
repnz
arpl
add
adc
out
xchg
nop
xchg
push
pop
pop
xor
mov
jp
xchg
mov
sar
mov
jo
in
sbb
sbb
jnp
pop
mov
cmps
sub
dec
ds
fld
push
jp
(bad)
push
pop
mov
hlt
inc
mov
ret
mov
gs
movs
jnp
imul
mov
mov
shl
cmp
jb
xor
mov
(bad)
mov
xchg
and
dec
fld
dec
jle
icebp
fld
dec
inc
inc
das
sbb
(bad)
adc
sti
push
popf
shl
mov
je
mov
push
mov
adc
push
mov
call
ds
imul
xchg
jns
adc
sbb
test
sbb
outs
enter
jle
pop
fisubr
sahf
sbb
mov
sbb
adc
cli
into
lock
in
jns
pop
cmp
retf
xor
out
mov
or
fdiv
push
mov
inc
jp
mov
movs
inc
ret
call
les
xor
xchg
push
adc
mov
pop
add
or
je
int
fcomp
push
adc
sbb
push
adc
mov
outs
fst
sar
inc
mov
mov
in
imul
cdq
dec
xor
shl
ds
sbb
loope
push
and
sbb
ret
rol
jb
push
cli
daa
push
js
xor
ss
test
retf
dec
push
sahf
and
xchg
mov
inc
or
push
cli
hlt
jl
inc
or
inc
sti
mov
jno
adc
mov
mov
inc
and
mov
loope
xor
scas
mov
sub
ins
fdivrp
mov
cmp
push
and
inc
sub
push
clc
fild
xchg
fimul
or
mov
mov
mov
repnz
mov
jbe
lock
adc
mov
mov
xor
ins
mov
mov
stos
sbb
pop
cmc
fistp
push
cmp
or
adc
sbb
pop
and
or
into
sbb
pop
(bad)
out
into
xchg
movs
adc
add
dec
jno
neg
js
sbb
ds
pop
mov
push
xchg
test
add
xchg
sub
(bad)
pop
out
sbb
enter
add
cmovle
imul
xchg
mov
clc
cli
enter
(bad)
inc
sti
sub
mov
inc
add
out
popf
ins
inc
sbb
inc
enter
mov
stos
push
bound
mov
sub
pop
add
xchg
test
inc
ins
ja
aas
push
push
js
daa
stc
jno
push
adc
jne
ret
ins
mov
cmps
or
scas
sbb
into
push
sub
lods
retf
lods
outs
jae
nop
call
mov
dec
in
sub
mov
and
pop
cmc
pop
and
test
popf
pusha
(bad)
dec
ds
aas
dec
pop
push
ficomp
mov
or
loop
mov
outs
mov
pushf
pop
jg
inc
loope
mov
dec
ret
jmp
add
stos
sub
loope
repnz
int
aaa
or
sub
sbb
es
in
ds
(bad)
popa
pop
cmp
call
int3
and
scas
mov
add
pushf
cmp
mov
adc
dec
(bad)
push
stc
pop
add
or
retf
inc
loope
adc
hlt
xchg
gs
push
dec
adc
mov
nop
ss
mov
sbb
push
fdivr
add
stc
sub
in
call
mov
and
cdq
dec
(bad)
fcom
rcr
jae
hlt
push
ins
scas
retf
int3
loop
xchg
xchg
cmp
test
movs
push
stos
daa
popa
xchg
mov
jg
sub
jo
push
icebp
loopne
imul
in
cmp
movs
add
pop
loopne
popf
jae
xchg
pop
mov
call
fst
movs
call
push
push
jg
fstp
inc
mov
pop
hlt
cmp
inc
stos
xchg
shl
outs
sub
jns
mov
fldcw
cs
(bad)
aaa
sbb
or
inc
test
stos
enter
arpl
cmps
addr16
mov
and
push
xor
(bad)
sbb
out
sub
xchg
adc
xor
and
test
adc
inc
jbe
mov
movs
jb
loope
dec
repz
mov
jae
scas
add
repnz
mov
bnd
xor
scas
cmp
pop
pushf
aaa
clc
(bad)
out
jecxz
lahf
retf
outs
push
fist
gs
xlat
push
push
cmp
add
cdq
adc
push
call
leave
ror
inc
push
xor
add
std
xchg
out
mov
cmp
sbb
xor
add
xor
jp
enter
push
ins
fwait
inc
movs
js
(bad)
popf
cli
adc
and
les
je
lock
jnp
jae
(bad)
ins
mov
sub
cmps
xor
sub
add
cmp
mov
mov
inc
ret
addr16
je
out
jmp
adc
or
or
mov
mov
cdq
fsubr
jb
int3
jecxz
push
sbb
leave
sbb
repz
and
cmp
sbb
add
adc
cli
(bad)
stc
jbe
dec
pusha
jns
dec
sti
jmp
push
jl
inc
shl
sbb
ficom
xchg
loope
cmps
mov
dec
sub
in
aad
stos
js
fcom
shr
dec
add
ins
movs
cmps
lods
test
push
stos
sahf
add
imul
dec
dec
retf
lds
xchg
inc
cmp
int3
loope
sub
push
lock
lds
inc
mov
cmp
je
pop
jb
jmp
aaa
shr
dec
mov
jp
cmp
mov
fimul
scas
loopne
mov
mov
addr16
mov
mov
xor
jb
sahf
cmovno
ss
and
shr
fnsave
mov
mov
jb
cmp
aas
pop
addr16
aam
pushf
outs
add
or
cmp
mov
loope
mov
cwde
test
or
ffreep
test
bound
mov
adc
xchg
mov
pop
mov
xor
ins
cwde
jne
or
shl
jp
movs
jg
loop
je
xchg
inc
push
out
gs
arpl
test
cs
jmp
fs
inc
cdq
xor
inc
outs
xor
jecxz
int
xor
lock
dec
mov
xor
(bad)
xor
fxam
add
sar
idiv
in
mov
(bad)
js
mov
mov
add
xchg
push
ins
ss
xchg
movs
outs
pop
and
bound
mov
push
aam
mov
bound
stc
jb
mov
mov
push
xchg
jbe
out
and
lods
clc
mov
jp
mov
fstp
data16
inc
ret
push
arpl
adc
jbe
xor
js
ins
sti
shr
jl
jecxz
hlt
sti
out
or
and
out
push
mov
mul
loope
sbb
(bad)
(bad)
and
pop
pop
jge
jmp
mov
das
pushw
inc
or
cli
inc
mov
adc
lds
je
pop
fwait
test
test
jle
fcom
push
xor
push
sahf
sahf
mov
jle
inc
das
stc
imul
rcr
mov
cs
push
test
fs
mov
stos
int
retf
xchg
and
je
fnstsw
imul
jne
mov
das
sub
sub
shr
pop
mul
mov
test
dec
mov
push
xor
jo
mov
call
jnp
pushf
and
loope
cmc
lds
jg
adc
xor
sbb
dec
dec
cmp
sub
into
dec
repnz
adc
mov
out
jae
sbb
rcr
fld
sbb
jnp
push
cmps
dec
ret
faddp
lods
mov
mov
fiadd
pop
shl
or
dec
movs
enter
adc
sbb
pop
jnp
movs
push
repz
mov
sti
clc
test
pop
sbb
int
mov
add
icebp
(bad)
cld
cmp
mov
sub
pop
lea
div
scas
mov
push
pop
(bad)
xor
mov
mov
pop
(bad)
mov
adc
inc
loope
mov
push
add
and
mov
jp
xchg
fsub
mov
pop
scas
sbb
xchg
fs
xor
cmp
xchg
mov
(bad)
jmp
je
mov
pop
scas
es
pop
pop
adc
(bad)
adc
out
jl
arpl
pop
inc
sbb
ins
inc
test
dec
sbb
xchg
scas
test
add
and
sub
lods
and
cmps
movs
jg
dec
iret
pop
je
add
sub
jp
aam
clc
(bad)
mov
das
ss
test
js
pop
add
into
(bad)
dec
sti
shr
stos
or
xchg
dec
aaa
ret
xchg
scas
dec
mov
(bad)
jg
fisub
arpl
nop
push
and
dec
mov
mov
lods
pop
test
call
mov
gs
jne
mul
mov
cwde
adc
pop
es
cwde
jnp
sbb
mov
mov
js
sar
push
or
push
jno
imul
(bad)
push
cs
fdivr
xchg
and
ja
test
mov
add
and
outs
loopne
(bad)
aaa
retf
outs
jb
jne
int
push
dec
fadd
sbb
stos
shr
add
cs
inc
enter
fadd
(bad)
nop
loop
jns
cmp
jp
fld
jb
dec
pop
xchg
sbb
xor
cld
ror
inc
mov
(bad)
jns
cmps
out
icebp
and
jo
xor
push
(bad)
loopne
(bad)
push
(bad)
mov
nop
nop
cwde
inc
jo
test
data16
lea
sub
mov
or
or
in
aad
sub
mov
test
idiv
scas
mov
out
cmps
pop
es
inc
enter
push
xchg
div
scas
add
dec
adc
mov
fnsave
xchg
xchg
pop
rcl
mov
sub
jbe
mov
jecxz
shl
pop
dec
fiadd
and
or
mov
test
pusha
int
cmp
pop
mov
mov
fdivr
fcmovne
jmp
pusha
jl
jge
in
dec
lea
in
fild
or
repz
lahf
xchg
mov
mov
into
jge
jo
dec
mov
les
into
mov
or
push
stos
fadd
pop
into
sbb
daa
pusha
dec
ja
pop
xchg
addr16
add
daa
add
(bad)
imul
and
bound
dec
daa
add
test
jbe
cmp
inc
mov
dec
pop
ret
dec
mov
push
enter
rcl
mov
ret
shr
dec
aaa
out
jmp
pop
jmp
gs
mov
xchg
dec
sbb
adc
ins
in
into
mov
mov
stos
sbb
hlt
ins
(bad)
int3
fistp
imul
sti
inc
xor
jne
cmp
jle
test
adc
out
shr
dec
sub
ds
cmc
popf
out
mov
addr16
mov
pop
ror
div
cdq
in
xor
xchg
pop
ror
ret
mov
stos
add
ror
mov
fbstp
in
pop
into
mov
cmp
push
jp
jb
(bad)
pop
dec
adc
jge
stos
mov
xchg
mov
inc
bound
cmp
nop
daa
sbb
or
cmp
ja
loop
push
dec
lods
adc
add
lock
and
inc
xor
mov
inc
mov
or
mov
repz
mov
mov
mov
in
pushf
movs
mov
xchg
aad
inc
(bad)
or
(bad)
call
and
inc
dec
pop
mov
mov
je
sti
int3
mov
and
stc
ins
test
shr
mov
cmps
mov
sub
mov
push
test
clc
rcl
mov
fcmovnbe
call
loope
pop
mov
fcmovu
inc
in
test
js
aas
test
bound
mov
pop
pop
dec
sbb
dec
ret
push
or
jmp
cmc
leave
push
aam
out
push
xchg
dec
or
in
lahf
sub
xchg
add
pop
das
lods
mov
push
xor
adc
pop
outs
mov
sub
clc
mov
ret
je
mov
stc
add
retf
fcmovne
out
sbb
cmp
add
mov
cli
fistp
cld
mov
and
loope
mov
jae
cmp
arpl
jne
jo
xor
pop
xchg
mov
xor
jp
ss
mov
lods
call
into
movs
(bad)
sbb
and
sbb
scas
ins
pop
adc
cwde
mov
fs
scas
jmp
(bad)
pop
xchg
xor
sbb
ss
mov
jmp
jbe
jbe
jmp
or
movs
das
push
adc
pop
and
push
and
shr
ret
stos
inc
or
mov
(bad)
std
pusha
adc
(bad)
(bad)
push
retf
popa
jbe
mov
out
xor
(bad)
repnz
imul
(bad)
addr16
inc
in
repnz
fwait
mov
or
cdq
xchg
int
mov
inc
loop
xor
mov
cmp
pop
push
aaa
xor
js
call
mov
(bad)
mov
push
mov
lods
mov
cld
or
jns
jge
rol
cmp
loop
adc
mov
or
push
aas
push
cwde
add
jo
pop
mov
data16
aad
(bad)
jae
mov
mov
out
push
push
mov
mov
ror
popa
mov
jle
xlat
repnz
nop
mov
mov
pop
aam
into
cmps
jle
push
(bad)
xchg
fadd
shl
aad
mov
inc
inc
or
push
mov
call
and
dec
nop
dec
scas
or
and
mov
adc
(bad)
js
repnz
xor
mov
mov
je
daa
imul
adc
outs
je
scas
aam
gs
jmp
xchg
sbb
mov
pop
mov
cmp
jns
add
pop
bound
cs
mov
jnp
(bad)
mov
push
mov
rol
cli
xchg
dec
in
or
xor
loopne
mov
mov
pop
adc
add
push
xor
and
sub
dec
mov
ret
xlat
jmp
jno
or
cmp
std
xor
xor
mov
pop
or
arpl
dec
nop
aas
mov
inc
rcl
fabs
(bad)
fistp
dec
fisub
mov
xchg
sbb
cli
xchg
xchg
pusha
pop
push
jl
mov
fcmovu
cmp
retf
dec
or
outs
pop
adc
sti
add
jle
aaa
jae
mov
aaa
adc
cmc
add
fiadd
and
xchg
jo
in
mov
stc
adc
mov
idiv
cmp
ds
jnp
push
inc
mov
jmp
jno
inc
fs
add
loopne
fcmovbe
iret
jae
or
cld
leave
rcl
pop
iret
dec
cmp
mov
(bad)
xchg
in
aam
out
cld
xchg
cmps
leave
pop
mov
call
and
inc
adc
fwait
cdq
dec
jmp
fild
movlps
test
(bad)
hlt
xor
cmovo
jmp
ins
ja
adc
and
sub
(bad)
ss
push
in
clc
imul
or
or
adc
dec
jae
(bad)
repz
mov
lahf
mov
fnstsw
sar
xchg
pusha
into
pop
ror
fsub
or
ret
adc
not
pop
and
fsub
or
jbe
scas
xor
aam
mov
xchg
inc
add
loop
pop
xor
in
inc
fs
jbe
inc
cs
sbb
daa
rcl
and
jne
cmp
sub
xor
js
fistp
fcom
cmps
jp
sbb
dec
out
push
xlat
jo
in
sahf
imul
adc
arpl
in
aas
pop
pop
cmp
cdq
sub
mov
or
in
mov
jo
push
adc
call
data16
sub
cmovg
ret
sbb
add
fnsave
cld
ins
dec
cmp
outs
inc
or
jmp
add
dec
gs
mov
mov
cdq
or
sahf
pop
pop
cmps
jo
push
and
pop
fs
(bad)
mov
dec
test
push
aad
pop
repz
outs
mov
imul
push
test
and
dec
sbb
cmp
test
sbb
push
clc
mov
cmp
and
imul
adc
xchg
call
(bad)
pusha
mov
cmp
inc
mov
and
(bad)
cs
mov
push
xchg
sub
mov
cli
loop
call
fwait
pop
stos
push
push
mov
jae
add
imul
dec
out
mov
pop
push
into
cld
xchg
mov
pop
xor
jp
out
loop
stc
push
mov
push
sbb
mov
movs
jae
mov
add
mov
sub
mov
mov
cwde
loopne
test
movs
inc
sub
cmps
push
add
movs
sbb
lods
inc
shl
and
addr16
aaa
sub
push
retf
or
jle
stos
inc
cmp
push
mov
mov
pop
outs
loop
icebp
push
xchg
cmp
add
cli
scas
push
(bad)
iret
xor
jnp
push
add
jle
add
ret
push
aaa
scas
in
nop
cld
pusha
dec
icebp
add
gs
cmps
arpl
jle
push
xchg
out
pop
arpl
(bad)
mov
inc
dec
imul
or
push
dec
or
iret
sub
and
push
shr
sub
mov
cmp
hlt
lahf
mov
push
ss
cmc
adc
mov
xchg
pop
sti
pop
mov
int
cmp
xchg
xchg
jl
jle
(bad)
dec
mov
xchg
or
push
cli
pop
out
push
cmps
in
stos
je
or
push
es
mov
hlt
push
(bad)
mov
cdq
fwait
add
pop
data16
gs
daa
jl
push
out
outs
and
out
push
ss
rcl
(bad)
cmps
adc
sbb
stos
push
and
das
push
fild
adc
jnp
ret
push
sti
adc
cli
imul
fmul
ret
xchg
pop
and
aaa
jge
retf
push
movs
fs
xchg
ficom
mov
pushf
sbb
ja
pop
pop
mov
or
in
in
add
cmp
movs
repz
arpl
or
jne
push
xchg
and
xchg
xlat
hlt
cmp
add
jo
ror
jle
mov
ror
ss
int
shr
int
pusha
push
push
cmps
jae
call
or
mov
mov
ret
cwde
loopne
jbe
and
pop
xor
out
jbe
dec
scas
jl
push
imul
push
push
cwde
test
sbb
ins
dec
test
(bad)
mov
pop
xor
pop
out
fld
and
lea
iret
fcomp
xchg
(bad)
pop
jmp
or
sub
(bad)
jle
pop
mov
push
add
mov
int
sbb
jbe
bound
pop
cmp
sbb
enter
test
cmp
outs
jnp
push
sbb
cdq
pop
retf
int3
aad
retf
mov
jl
dec
ret
and
idiv
dec
scas
cli
pop
test
jns
adc
mov
and
ins
test
scas
or
outs
mov
int
adc
ins
sub
pop
mov
pop
jge
dec
jecxz
adc
mov
pushf
les
call
ja
jmp
popf
call
out
xor
lods
sti
mov
pop
neg
or
int3
mov
adc
fwait
pop
jne
dec
outs
into
push
dec
out
mov
js
inc
mov
icebp
imul
and
inc
xchg
shl
mov
popf
test
sbb
leave
pop
inc
xor
fwait
xor
add
sbb
jmp
sar
dec
popa
pushf
mov
cwde
mov
push
int3
out
aaa
clc
ins
jbe
pop
ins
sbb
rcr
or
and
bnd
sbb
cmp
add
lods
cmp
mov
out
imul
push
cmc
fisub
sti
jl
stc
ss
lea
sub
es
cmp
scas
outs
stos
or
scas
push
dec
add
and
in
repnz
movs
test
es
loope
dec
or
xlat
retf
and
inc
or
sbb
and
xchg
or
jmp
mov
sbb
repz
or
mov
jns
out
mov
sbb
fs
xchg
add
pop
and
mov
nop
push
cwde
push
gs
xchg
jbe
fwait
enter
inc
daa
in
cmc
push
vpcmpeqb
loope
push
and
inc
enter
loope
call
adc
icebp
pushf
and
jb
add
pop
ss
jp
cli
sub
ins
scas
pop
fisubr
add
stc
cmc
lds
and
ins
sbb
mov
and
pop
lds
mov
inc
xor
sti
inc
je
adc
test
dec
cmp
js
daa
push
or
out
push
jmp
cli
jmp
movs
es
mov
aas
out
dec
lods
push
loopne
je
icebp
mov
add
sub
out
shl
xchg
(bad)
loopne
xchg
mov
aas
in
mov
pop
pop
cmc
lea
imul
retf
sub
shl
in
cmps
sub
pusha
shr
cmp
mov
icebp
push
js
sahf
js
in
loopne
popa
and
or
pop
fs
sub
pusha
pop
int
das
movs
xchg
pop
imul
jp
imul
inc
div
push
mov
jle
sbb
frstor
es
scas
or
(bad)
loopne
or
mov
cmp
mov
and
sbb
ret
mov
sub
(bad)
mov
cwde
ror
jecxz
and
outs
sub
(bad)
mov
enter
sub
sub
jecxz
ret
mov
pop
jnp
sbb
jecxz
mov
sub
popf
and
push
dec
mov
mov
cmp
pop
fimul
scas
inc
xor
pushf
mov
ret
add
xchg
mov
test
imul
cmps
stos
stc
add
(bad)
pop
aas
lock
shl
inc
mov
lock
stos
clc
adc
jmp
mov
imul
js
push
std
cmp
aas
cwde
pop
push
stos
inc
cs
xchg
test
ret
jae
outs
push
int
dec
push
mov
adc
inc
leave
mov
dec
mov
dec
xchg
mov
adc
(bad)
ins
ds
sbb
inc
xchg
inc
rol
xchg
call
dec
and
xor
leave
pop
mov
clc
xor
into
test
jbe
jbe
sbb
push
std
mov
aam
loopne
inc
mov
shl
mov
leave
retf
jns
mov
loopne
mov
add
cli
and
ins
xchg
push
ret
repnz
pop
sahf
repnz
out
ins
xor
fxch
push
xchg
movs
xchg
mov
stos
mov
add
sbb
cdq
mov
mov
sbb
fdiv
lods
or
ins
sti
int
into
inc
rcr
fidivr
rcl
cmp
in
mov
daa
int3
cmp
or
and
(bad)
in
add
and
js
push
ds
repz
cmp
push
xchg
sub
fisttp
and
mov
shr
or
or
jmp
xchg
dec
scas
(bad)
aaa
call
mov
inc
test
push
scas
fs
sbb
jge
inc
minps
dec
push
mov
shl
sbb
enter
out
adc
mov
imul
out
dec
inc
cmp
nop
adc
ja
iret
push
mov
pusha
call
mov
xor
out
sub
and
cmp
cmp
or
movs
(bad)
(bad)
xchg
cli
ret
shl
out
xchg
push
es
lahf
sub
das
fisub
aam
mov
xor
jl
leave
gs
adc
stos
dec
inc
adc
data16
mov
mov
mov
cmp
xor
push
sti
push
cmp
dec
es
mov
mov
add
add
or
xor
aad
fstp
add
dec
rcr
push
xchg
cld
xchg
gs
jmp
mov
jle
jo
add
pop
loope
dec
enter
and
sbb
jno
and
jae
leave
xlat
dec
imul
popf
and
pop
das
(bad)
jmp
sti
gs
jno
daa
inc
movs
setns
fld
popa
mov
mov
lahf
or
or
sbb
mov
sbb
push
sbb
or
xchg
jmp
push
aas
clc
lds
mov
iret
dec
xchg
cmp
stc
sbb
sub
pop
jg
xchg
pop
push
adc
or
ret
into
repz
cmp
or
xor
cdq
das
daa
out
cmp
addps
jbe
rol
jo
jb
cs
dec
js
addr16
mov
xor
mov
leave
fisttp
aas
mov
mul
push
cmps
(bad)
fidivr
iret
cmp
aam
adc
ds
xlat
cmc
xchg
stos
push
cmp
lock
pop
loop
pop
dec
test
jns
xor
xor
addr16
rol
aam
pop
xor
adc
mov
mov
add
jle
sbb
cmps
imul
cdq
push
mov
(bad)
out
fwait
mov
cmp
jno
jns
in
sbb
loopne
aaa
iret
jo
hlt
(bad)
pop
pop
pop
fild
shl
xchg
add
inc
test
mov
push
lods
out
dec
mov
fsubr
jp
dec
mov
icebp
adc
xchg
mov
jbe
inc
sti
dec
sbb
in
jo
add
lock
inc
in
cs
test
mov
test
test
cmp
add
sbb
jl
pushf
int3
cld
cld
cmc
sub
test
or
sbb
sub
rep
scas
rol
push
sbb
(bad)
(bad)
mov
aaa
pop
hlt
test
test
ds
cmp
jl
sub
pop
mov
jge
aam
sbb
mov
mov
ret
sub
test
sahf
out
(bad)
(bad)
add
pop
cs
ja
shr
jp
push
sub
popa
fistp
scas
out
pop
(bad)
fdivr
mov
add
in
jge
push
xchg
mov
push
outs
jl
xchg
out
mov
dec
xlat
fistp
lods
pop
idiv
fwait
test
in
inc
in
pop
shr
call
xchg
push
xor
arpl
fimul
adc
and
mov
call
jne
xchg
mov
sti
call
js
jecxz
xor
or
mov
xchg
lock
mov
jle
loopne
fisub
xchg
cmps
call
pop
dec
dec
fld
ds
int3
or
or
or
mov
jnp
les
int
in
xor
jl
jae
enter
popf
jg
pop
sbb
out
das
test
and
cmp
and
ss
popa
add
into
fadd
mov
cmp
(bad)
pop
xlat
jge
aad
lods
scas
jo
aad
xchg
ficom
ss
cli
adc
clc
test
sub
test
mov
push
fs
push
dec
xchg
xchg
cmp
sahf
rol
out
std
xchg
xor
add
icebp
aam
lock
cs
dec
or
imul
xor
les
jbe
cmps
inc
cmp
fnsave
test
call
movs
sbb
into
inc
loop
sub
jne
inc
xor
cmps
push
pop
loop
cwde
xchg
int
cmp
ins
inc
mov
xor
pusha
ret
std
or
push
ret
shl
xchg
push
push
iret
cmc
lock
test
and
and
push
mov
add
cli
ret
les
enter
add
ret
rcr
pop
push
jmp
loopne
add
xchg
cmp
div
aaa
mov
mov
out
mov
or
mov
dec
enter
ja
xchg
push
mov
mov
call
adc
pushf
test
cmp
ffree
jae
xchg
or
and
jne
xchg
cmp
imul
sti
xor
call
mov
int
xor
stc
aas
mov
jb
int
sbb
xchg
xor
shl
fld
shl
addr16
pop
stos
xlat
push
retf
outs
cld
mov
sar
jge
mov
sbb
xor
lea
cmps
jp
inc
fs
inc
xchg
sbb
rcr
cmp
mov
push
xor
mov
cdq
std
jns
clc
ins
adc
repnz
adc
mov
mov
sub
dec
ficom
add
mov
lock
push
iret
aaa
pop
cld
push
jp
mov
and
jno
cwde
sbb
push
cmp
out
mov
push
cmp
push
int3
adc
and
call
shl
sbb
out
xchg
shl
cmp
jmp
jl
dec
icebp
pop
sar
dec
adc
push
xchg
mov
mov
sbb
ins
aas
cmp
stos
push
dec
jae
arpl
(bad)
ins
icebp
imul
fisttp
pop
and
ret
mov
sar
(bad)
call
and
add
xchg
sti
cmp
push
or
fwait
mov
pop
movs
sub
or
(bad)
jmp
clc
mov
movs
xor
cli
inc
ds
(bad)
xlat
or
fcmovb
shl
retf
sub
pushf
mov
ret
out
or
xchg
mov
std
inc
add
mov
ja
ja
push
fsub
inc
mov
xchg
xor
or
add
jp
popf
js
push
test
lea
push
dec
shr
and
add
addr16
push
dec
gs
popf
gs
and
pusha
rcl
and
push
cmp
mov
mov
jb
jbe
and
lock
ins
mov
inc
add
dec
call
mov
test
and
push
imul
data16
ds
inc
xchg
pop
stc
xchg
cmps
mov
loope
or
or
jmp
fmul
mov
mov
pop
mov
adc
mov
push
pop
inc
fmulp
sbb
cs
cmp
adc
(bad)
jecxz
imul
ds
mov
aam
imul
pop
and
(bad)
push
vcmpsd
jp
mov
xchg
arpl
out
push
shl
call
adc
mov
dec
retf
call
dec
dec
add
outs
out
or
push
add
jns
push
jbe
lock
cmp
mov
nop
sbb
les
xor
jbe
push
jmp
add
mov
daa
xor
inc
mov
push
in
ss
or
dec
outs
popf
push
int3
scas
xchg
stos
out
test
pushf
fbld
fwait
int
outs
mov
dec
and
mov
pop
xchg
out
ins
enter
outs
sbb
cmp
mov
mov
and
fisttp
jnp
nop
inc
adc
aad
nop
sub
js
(bad)
cmp
jg
rcl
iret
push
test
inc
xor
aam
xchg
je
cmp
fwait
mov
dec
mov
and
adc
mov
dec
rcr
sahf
xor
ret
movs
inc
bnd
sahf
in
jmp
movs
sbb
dec
add
sub
mov
das
xor
push
mov
jbe
leave
or
pop
mov
aad
repnz
retf
or
pop
push
ja
mov
in
push
mov
mov
cwde
aad
aam
push
call
stc
stos
fwait
jle
cmps
out
lock
(bad)
cmp
push
dec
sbb
push
pop
shl
fnstcw
test
jmp
mov
ja
jb
cmp
dec
inc
inc
cmp
adc
std
pop
push
cmc
adc
scas
mov
pop
push
mov
clc
stc
push
nop
repz
push
hlt
rcr
in
enter
daa
cs
mov
mov
jge
ss
or
into
inc
cmp
mov
cld
movs
mov
aas
ss
xlat
ret
call
adc
retf
adc
sub
mov
mov
jnp
mov
fbstp
pop
lods
jmp
xor
js
sub
hlt
or
mov
movs
or
ret
ret
rcl
(bad)
retf
sahf
sysenter
cmp
inc
lods
xor
adc
loop
add
mov
retf
dec
xchg
loop
lods
add
pop
lea
mov
jge
popa
fs
aas
lahf
pop
mov
push
xor
xchg
es
xchg
in
sub
test
or
pop
das
mov
mov
and
in
xchg
das
out
ds
xchg
mov
lods
push
adc
mov
xchg
adc
retf
loope
pop
push
sbb
mov
jmp
stos
arpl
test
leave
gs
dec
call
jne
in
push
rcr
les
hlt
sub
xlat
jp
in
ins
or
jge
mov
ds
repnz
movs
jl
inc
or
mov
inc
inc
adc
push
adc
jge
adc
sbb
popf
xchg
xlat
mov
(bad)
mov
push
rcr
jbe
and
adc
push
xor
test
fdivr
cmp
cld
or
pop
inc
jp
jbe
and
mov
in
repnz
push
ins
scas
movs
push
inc
adc
or
sub
mov
push
pop
mov
je
adc
add
ret
cmc
sbb
in
xlat
add
sub
push
inc
sbb
cmp
or
add
pop
xor
and
arpl
dec
mov
scas
mov
(bad)
xchg
jmp
sbb
jne
xchg
xchg
xor
sub
ins
push
mov
pushf
shr
out
ret
sti
aam
jg
call
imul
push
inc
lock
test
or
mov
call
stc
and
test
mov
push
les
aaa
jno
inc
aaa
jbe
cwde
mov
adc
jbe
xchg
pop
sub
int
or
jns
mov
pop
xlat
or
xchg
sub
xlat
add
cmc
mov
ficom
push
pusha
xor
push
push
or
test
fld
and
pop
scas
add
(bad)
mov
mov
cmp
inc
nop
sbb
scas
cmps
mov
lods
xchg
sbb
xchg
(bad)
aad
xchg
lods
or
inc
call
and
ret
push
push
leave
inc
inc
popa
mov
(bad)
outs
pop
xchg
mov
popa
popf
lahf
test
or
mov
pop
(bad)
bswap
cwde
in
jne
xorps
gs
gs
add
sub
shl
and
icebp
add
daa
xchg
mul
mov
out
fcom
and
xchg
std
inc
aaa
add
inc
(bad)
mov
cmp
mov
(bad)
sahf
shl
mov
scas
jmp
cmps
(bad)
jnp
idiv
icebp
push
mov
dec
jmp
pop
(bad)
dec
test
mov
xor
push
dec
inc
dec
xchg
pop
sub
lds
mov
or
das
add
iret
cs
fidiv
xor
pop
pop
pop
shl
(bad)
push
push
pop
or
pop
fwait
add
xor
push
call
mov
and
fdivrp
add
fistp
inc
and
(bad)
jns
mov
add
outs
mov
and
pop
retf
mov
push
movs
add
ja
mov
dec
push
cmp
daa
cmps
xor
iret
retf
adc
xchg
ins
mov
mov
mov
adc
inc
push
imul
xor
sub
outs
pusha
adc
ss
mov
or
sub
mov
mov
cmp
daa
shr
jmp
sub
repnz
xor
fistp
mov
lods
mov
mov
xor
aaa
xor
push
pop
ficom
imul
lea
call
retf
je
mov
std
xor
pop
out
fwait
push
add
xchg
mov
cmps
mov
or
lds
xchg
mov
mov
inc
rol
scas
in
daa
and
leave
dec
mov
dec
dec
movs
xor
pop
arpl
std
xor
jbe
int3
test
in
add
ror
xlat
in
sbb
add
div
xor
inc
icebp
sbb
and
mov
adc
mov
test
fisubr
xchg
fs
xor
cli
push
out
ja
imul
inc
xor
xchg
aad
and
mov
por
or
stc
jge
les
push
arpl
xchg
push
mov
into
mov
sbb
outs
push
mov
jp
jge
dec
or
xchg
xchg
cmp
or
leave
push
fdivrp
jp
inc
ja
and
stos
xchg
jmp
scas
sub
fiadd
repz
cli
in
cmp
xor
add
cs
add
jo
cmp
(bad)
aas
mul
out
fdiv
fdivr
cmp
data16
push
or
jae
add
jmp
inc
enter
cwde
mov
mov
xor
jmp
movs
stos
fwait
sbb
xchg
xor
enter
mov
mov
mov
scas
ret
sbb
xor
xor
mov
lock
dec
pop
pop
push
or
leave
test
ins
js
adc
jl
push
mov
scas
adc
adc
cwde
sahf
stos
iret
movs
jb
nop
call
mov
sbb
xlat
loope
cs
stos
bound
ret
(bad)
push
xor
inc
push
dec
test
adc
daa
cmp
mov
and
enter
dec
xor
popa
loope
lods
arpl
inc
les
adc
mov
out
pop
pop
sahf
push
fwait
shl
pusha
pop
pop
test
mov
xchg
fs
loop
rcl
adc
popf
and
sbb
sti
push
mov
in
clc
pusha
add
daa
lods
push
popf
xlat
iret
cdq
ret
arpl
lock
xchg
sbb
rol
pop
jb
inc
xchg
shr
mov
ss
stos
pop
gs
ins
jl
add
xchg
popf
pop
mov
loope
scas
es
aas
rol
icebp
fs
ss
call
aas
jbe
or
jne
clc
lds
je
(bad)
pop
lock
pushf
out
push
jno
sub
arpl
ret
add
dec
xchg
jae
mov
push
in
ficom
mov
cmp
(bad)
add
jge
ror
stos
dec
js
xor
call
pop
icebp
test
jne
hlt
jge
test
in
mov
sub
iret
add
movs
inc
xor
je
hlt
rcl
xor
xchg
xor
xchg
cmp
imul
mov
fdivr
bound
test
loope
pop
ins
cmp
and
std
nop
and
xchg
xor
or
daa
cmp
jno
test
test
and
shr
sti
inc
push
cmc
add
arpl
in
icebp
aaa
(bad)
lods
xchg
cmp
mov
je
add
xor
mov
pop
add
mov
popa
or
data16
hlt
fwait
popa
cmovnp
mov
xchg
cli
outs
lock
(bad)
aas
es
push
adc
mov
and
push
aaa
cwde
bound
inc
pusha
jnp
xor
cmp
fsubr
sbb
fstp
adc
xchg
cmps
mov
and
sub
and
retf
arpl
jnp
inc
pushf
outs
inc
add
retf
xor
mov
and
aaa
les
xor
int3
xchg
or
mov
pop
xor
mov
inc
mul
mov
xchg
scas
in
dec
push
mov
inc
t1mskc
add
(bad)
mov
pop
mov
sub
retf
in
lahf
inc
repnz
inc
sar
hlt
jae
ja
lods
pop
push
ficom
pop
out
pop
dec
xor
test
aas
sub
xchg
lods
inc
mov
cli
dec
movs
addr16
mov
jne
jmp
ins
mov
push
add
push
adc
xchg
cmp
adc
rol
pop
lds
sbb
inc
lods
or
es
adc
test
mov
dec
repnz
popf
into
or
pop
imul
dec
outs
das
or
xor
out
leave
outs
daa
ss
test
mov
int3
(bad)
push
mov
and
lahf
repz
call
ins
push
aaa
clc
mov
cmp
jb
dec
lea
pop
mov
dec
fnstcw
and
push
sti
sbb
add
retf
int
mov
adc
nop
adc
adc
out
mov
xor
ss
mov
mov
(bad)
xchg
or
scas
jmp
mov
cmp
arpl
loope
das
pop
mov
inc
and
xchg
nop
sbb
sbb
push
out
aas
mov
xchg
scas
test
and
jmp
xchg
std
test
mov
push
xor
imul
ficom
into
ret
xor
std
mov
mov
or
cld
fidivr
fsub
xor
fmul
stos
dec
repz
sub
fidiv
jae
pop
dec
mov
repnz
and
dec
and
sub
sub
ficom
or
leave
sub
fild
push
and
push
cld
mov
mov
xchg
sar
mov
movs
mov
push
movs
mov
ins
push
xor
outs
popa
mov
jmp
mov
(bad)
rcl
or
in
out
mov
mov
fimul
cs
mov
(bad)
jne
jne
push
dec
ror
mov
xchg
jle
fisub
ror
scas
jnp
dec
jns
xchg
mul
bswap
fwait
mov
outs
test
mov
push
pop
lds
xchg
sbb
pushf
in
outs
mov
mov
xchg
or
fwait
call
or
sbb
mov
cld
add
int
es
pop
addr16
or
retf
xchg
dec
inc
xlat
aaa
pop
(bad)
push
fnstenv
sub
cmp
push
lods
push
je
xchg
jge
repz
cld
in
pop
lods
push
lds
sar
jbe
jmp
sbb
dec
adc
sbb
imul
call
sbb
sbb
pop
add
push
ja
cmp
mov
ja
test
mov
jb
jnp
pop
inc
sub
or
adc
cmp
aas
push
push
push
and
xchg
mov
mov
adc
iret
outs
out
add
(bad)
mov
xchg
or
jbe
jmp
scas
xor
int3
out
popf
mov
and
jg
std
pop
outs
mov
mov
scas
test
ds
pop
scas
sahf
sbb
enter
test
push
jns
ret
push
popa
cld
pop
lock
movs
mov
adc
xchg
mov
not
lods
shl
mov
push
jmp
mov
je
inc
lea
jp
test
loop
scas
pop
dec
lods
dec
jl
into
mov
sbb
aas
imul
push
adc
(bad)
sub
retf
add
push
mov
call
and
push
scas
aad
jno
nop
sub
js
retf
repnz
and
ins
mov
arpl
imul
mov
mov
je
int3
xor
lods
mov
push
and
iret
and
lock
jb
test
mov
mov
push
push
hlt
std
dec
add
hlt
fwait
cli
(bad)
mov
push
xchg
cmp
and
dec
inc
call
ja
pop
gs
add
inc
icebp
out
xor
call
mov
sbb
fmulp
mov
lahf
pusha
sub
jle
sbb
push
mov
mov
in
add
call
scas
sub
cmps
call
push
int3
(bad)
addr16
pop
(bad)
sti
sub
shl
clc
sti
add
sahf
inc
movs
in
adc
xchg
test
push
cwde
int3
add
jnp
sbb
leave
loopne
in
xor
mov
adc
sub
clc
mov
push
fsubr
push
test
rol
jbe
mov
aad
stos
mov
repnz
pop
lods
push
push
inc
dec
inc
jbe
test
in
imul
movs
dec
dec
mov
or
xchg
inc
ja
and
popa
dec
sub
es
test
sbb
popa
in
adc
push
je
out
xchg
sub
adc
ret
add
cmp
cmp
push
scas
or
dec
jg
xchg
int3
and
imul
aaa
push
(bad)
cmp
push
mov
jne
or
fwait
pushf
dec
jle
push
mov
fucomi
enter
mov
mov
(bad)
out
sbb
xchg
mov
and
fwait
adc
sub
jnp
cmp
jp
and
jge
aam
mov
sar
lds
iret
aaa
dec
push
loope
pop
cmp
mov
and
pop
push
lea
mov
out
add
fmul
in
fmul
(bad)
and
retf
and
ret
push
mov
mov
in
push
dec
in
mov
mov
push
clc
pop
into
xchg
dec
fisubr
or
jnp
in
xlat
cli
or
xchg
scas
ja
adc
mov
jecxz
sub
ja
addr16
rol
(bad)
adc
(bad)
mov
jmp
iret
push
and
pop
sub
adc
cs
callw
sar
jb
xchg
mov
mov
jb
mov
mov
mov
jno
mov
scas
adc
aad
in
verr
loope
in
ror
dec
rcr
or
scas
fimul
scas
jnp
cmps
jle
push
shr
clc
out
fcom
dec
lods
dec
repz
fdiv
fwait
mov
repz
xchg
inc
push
xchg
adc
push
stos
xor
js
into
jne
dec
cmp
(bad)
pop
or
scas
xor
lods
pop
or
jbe
cmp
or
out
jl
add
mov
add
dec
mov
sub
pop
jno
neg
pop
jmp
or
jne
mov
or
mov
dec
pop
pop
es
jmp
mov
sar
jbe
add
jl
or
sti
rol
xor
popf
xor
pop
mov
(bad)
pop
xchg
enter
int3
dec
sbb
xchg
cli
in
adc
sti
imul
inc
in
dec
nop
in
arpl
jmp
mov
ret
xor
(bad)
bound
add
pop
paddd
mov
mov
fcom
xchg
jmp
jne
rcl
adc
fimul
push
mov
mov
mov
retf
cli
imul
cmp
xchg
stos
jecxz
add
fdiv
and
inc
test
cmp
call
push
sbb
fldcw
pop
mov
adc
test
iret
push
dec
leave
mov
movs
xchg
cmp
inc
or
mov
(bad)
mul
(bad)
adc
hlt
je
jecxz
shl
retf
aas
pop
fidiv
add
jmp
lods
popa
hlt
dec
shl
mov
mov
loope
adc
jnp
test
(bad)
inc
or
jnp
mov
jo
ins
mov
fs
adc
das
dec
pop
daa
int
(bad)
push
jno
jnp
mov
dec
(bad)
dec
rcr
repnz
daa
jae
sub
das
dec
loope
test
cs
gs
pop
inc
push
and
pop
shl
fistp
xchg
cmc
fcomp
inc
inc
add
arpl
arpl
or
xor
test
clc
inc
ss
(bad)
call
cmp
std
xchg
cwde
pop
shl
add
mov
retf
adc
idiv
push
mov
cmp
adc
pop
mov
fadd
mov
iret
cmp
or
add
mov
xchg
into
ins
std
fldenv
xchg
fild
mov
lods
fs
pop
test
call
xchg
mov
jns
inc
sti
adc
push
fnstcw
adc
pop
inc
sub
push
mov
stc
cmps
mov
out
sbb
mov
and
pop
test
cmc
scas
mov
stc
ss
pop
pushf
pop
sub
xchg
or
popa
jne
gs
adc
test
jl
daa
jl
pop
data16
or
push
jb
adc
aaa
xchg
dec
pop
loop
ficomp
int
jecxz
inc
popf
repnz
mov
fcomp
fidivr
jl
mov
xor
scas
ror
outs
lock
pushf
pop
push
in
add
in
add
jp
xchg
ss
mov
cmps
inc
xor
mov
sub
stos
cmp
scas
(bad)
fsub
psubd
sahf
mov
push
fs
adc
xchg
push
popf
mov
push
mov
test
out
mov
jp
xlat
pop
cmp
add
int
test
push
arpl
rol
ret
pop
pop
mov
fwait
aas
xchg
mov
mov
inc
or
in
ret
mov
push
nop
icebp
jge
or
cmps
inc
fwait
jns
cli
xchg
cld
xor
scas
fst
shl
adc
pushf
xor
or
inc
jnp
xchg
ins
outs
pop
adc
in
or
movs
mov
mov
mov
xlat
cmp
jp
in
sub
or
aaa
test
sbb
cld
lods
and
and
out
add
test
sbb
xchg
rol
push
ins
adc
cmp
lds
adc
mov
sbb
or
leave
cli
into
rcr
mov
shr
clc
dec
fs
std
outs
jmp
push
xor
cmp
mov
mov
shl
pop
jmp
xor
pop
mov
mov
add
mov
cli
xor
clc
loop
icebp
sub
jno
lahf
inc
inc
unpcklps
xchg
jmp
into
cwde
add
out
imul
ret
stos
sahf
adc
sub
xor
in
(bad)
ror
cmps
jb
xor
stos
sbb
mov
ret
mov
jl
xor
xor
mov
(bad)
imul
mov
jecxz
loope
jge
sbb
sbb
call
cli
sbb
jle
idiv
jo
repz
mov
rcl
into
mov
jns
jae
jne
out
add
bound
jnp
js
mov
mov
loop
sub
mov
mov
fucom
aam
sbb
mul
sahf
inc
cmps
push
aas
callw
push
xchg
inc
cmp
adc
lock
cmp
stos
sbb
dec
pushf
es
mov
shl
push
nop
stos
stos
inc
rcl
cld
lods
xchg
sbb
les
bound
mov
(bad)
jnp
lock
xcrypt-cfb
cmps
and
loope
call
neg
push
outs
adc
pop
jmp
out
call
cli
xrelease
je
cmps
cs
cld
xchg
dec
or
sub
test
cmp
mov
fnstenv
jp
jmp
push
cli
lods
test
dec
into
xchg
push
xor
dec
(bad)
jbe
dec
add
xlat
adc
mov
pop
test
jbe
inc
retf
shr
xchg
xor
mov
(bad)
cli
fcom
pop
cmp
sub
das
and
out
out
inc
inc
mov
add
retf
add
mov
sbb
stos
pushf
in
out
xchg
push
jo
in
lods
jle
dec
ret
and
sbb
das
out
push
add
(bad)
sub
int3
jae
je
(bad)
retf
inc
ds
mov
lahf
nop
adc
lds
and
pop
mov
cmps
cmp
icebp
loopne
jl
sahf
es
mov
cwde
js
arpl
dec
call
pop
mov
mov
cmc
sbb
push
push
cdq
mov
sub
cld
inc
cmps
xor
sbb
inc
imul
xor
mov
outs
int3
push
repnz
mov
dec
in
fucomip
enter
in
loope
add
push
ja
fwait
rol
fwait
mov
cmp
or
cli
and
jge
icebp
lods
outs
dec
not
mov
mov
fidiv
cmc
test
push
int3
repnz
loopne
inc
sub
js
mov
sub
add
nop
cmp
and
lods
cmp
and
in
test
mov
mov
xchg
cmp
sbb
and
and
xor
fidiv
jl
or
mov
sub
nop
popa
lods
ins
imul
idiv
pop
bts
lock
or
pushf
jbe
(bad)
enter
jmp
mov
or
xchg
and
pop
(bad)
cmp
and
fadd
mov
jno
mov
stc
test
and
xor
pop
inc
fs
repnz
mov
jne
jle
fld
adc
cdq
pop
outs
pop
xchg
sbb
sahf
jb
cld
mov
sub
lds
movs
lods
les
popf
repz
cmp
push
iret
lea
pushf
mov
jno
cmp
pop
add
outs
push
or
stos
inc
adc
mov
sbb
jbe
test
push
push
cmp
das
ds
shl
inc
and
retf
scas
mov
loope
je
aam
push
pusha
xor
test
pop
rcr
ins
pop
cs
stc
inc
sub
iret
cmps
repnz
and
into
sbb
adc
bnd
fmulp
aam
ja
xor
int
cld
adc
xor
jmp
push
jb
call
call
sbb
aad
call
int3
(bad)
sbb
xchg
icebp
test
and
(bad)
jmp
pushf
mov
lods
or
jmp
mov
shr
inc
inc
jb
popf
call
pop
mov
mov
imul
mov
fmul
mov
inc
mov
in
lock
sbb
(bad)
fnstsw
xor
sbb
aad
jl
jo
or
push
ss
inc
cmps
mov
jne
fisub
pusha
out
mov
addr16
mov
fimul
push
xor
cmp
mov
inc
mov
mov
stos
and
jmp
push
ins
add
sar
lahf
xor
and
inc
repnz
leave
adc
rol
mov
xchg
rcr
cdq
mov
into
and
add
and
dec
lds
mov
pop
outs
sbb
dec
punpckldq
in
push
pushf
cmps
mov
mov
popf
in
pop
xchg
add
mov
out
cmps
std
bound
fst
pop
imul
xchg
fld
xlat
jne
xchg
clc
repz
xchg
adc
cmp
test
movs
sti
mov
xchg
push
ins
dec
xchg
cmp
xchg
(bad)
int
sub
jb
(bad)
mul
mov
nop
pop
inc
test
cwde
mov
dec
call
or
sahf
div
xchg
mov
ret
push
cmp
mov
mov
ja
adc
out
add
jg
adc
push
lods
dec
xchg
dec
pop
mov
dec
lods
inc
clc
xor
inc
add
xor
adc
push
cmp
call
sub
and
xor
das
je
rcl
aad
pop
ror
ss
push
pusha
jo
adc
sbb
mov
clc
(bad)
sub
jo
(bad)
or
data16
pushf
das
lds
pop
movs
pusha
cmp
mov
mov
and
rcl
out
mov
enter
cmps
outs
loop
test
inc
cmp
mov
aad
mov
mov
lea
mov
ret
add
nop
(bad)
pusha
aam
(bad)
jmp
ja
mov
cmp
sub
jg
push
push
out
movs
adc
adc
jg
pop
mov
jmp
ret
cwde
mov
stos
sub
mov
mov
xor
mov
sahf
pop
and
jbe
dec
push
jno
xchg
aad
or
sbb
dec
jl
cmp
sbb
push
lock
mov
in
add
sub
int
sub
pop
pop
shl
repz
or
dec
sub
push
mov
cmp
or
jg
into
sbb
js
xchg
leave
mov
into
sbb
push
mov
es
mov
aad
inc
call
jno
shufps
cmp
sbb
cs
arpl
aas
sti
test
push
lds
out
mov
pop
sub
push
sub
or
add
inc
pop
call
push
fisubr
enter
push
dec
pop
and
lods
mov
mov
movs
push
push
add
xchg
dec
les
(bad)
push
aaa
mov
sbb
or
enter
or
lods
jmp
bound
in
or
sub
fadd
call
mov
mov
mov
lahf
sub
add
mov
push
daa
fisubr
or
retf
cmps
les
(bad)
mov
call
jne
fadd
xor
push
imul
(bad)
and
sti
jecxz
push
jns
or
mov
mov
xor
(bad)
sub
gs
(bad)
adc
mov
loopne
scas
pop
cs
xor
or
fcmovu
inc
push
clc
pop
push
inc
pop
clc
mov
pop
and
popa
lock
lahf
daa
pop
out
repnz
mov
in
xor
xchg
cmps
pusha
sub
push
push
mov
mov
mov
cmp
sub
pop
and
lahf
shl
dec
outs
imul
mov
mov
jb
mov
xlat
fimul
outs
sbb
cmp
mov
fs
ins
gs
sbb
fxtract
push
jle
lahf
push
rcr
mov
cs
fstp
clc
aaa
mov
adc
mov
popf
jge
test
rcl
mov
or
add
movs
rol
test
cmc
into
pop
cmp
outs
shr
lods
sbb
add
cmps
mov
outs
sbb
arpl
sub
push
or
dec
inc
mov
ficom
jbe
mov
mov
daa
call
jo
jmp
inc
sub
mov
dec
retf
je
xor
lds
cs
scas
sbb
add
cmps
xchg
or
enter
xchg
mov
shr
mov
test
movs
ror
dec
test
fisubr
add
sbb
and
cmc
or
inc
data16
sub
xchg
dec
stc
cmps
add
pushf
dec
push
pop
inc
sbb
stc
imul
cmps
xor
xor
mov
jnp
dec
jge
inc
mov
retf
xor
in
xor
jnp
loopne
popa
mov
add
retf
cmp
push
sbb
add
dec
clc
cdq
not
pop
push
mul
xchg
shl
not
pop
pop
and
inc
cmp
cmc
pop
pop
xchg
leave
(bad)
int
push
in
ins
jp
push
xor
ins
scas
cmp
(bad)
dec
xchg
xchg
inc
lds
push
push
pop
dec
inc
inc
aas
sbb
hlt
jmp
push
jb
or
popf
pusha
dec
jns
shl
inc
in
mov
fs
in
sbb
push
mov
lds
mov
and
push
jo
clc
or
push
ds
pop
dec
mov
aas
sub
sub
pop
inc
xchg
or
xlat
loope
jl
mov
push
inc
gs
and
and
inc
imul
test
pop
pop
and
mov
inc
xchg
mov
pop
cmc
int
sar
mov
lods
jnp
shl
cmp
leave
int
pop
mov
mov
neg
iret
jb
movs
dec
push
ins
inc
and
mov
nop
test
hlt
ins
jbe
out
sbb
inc
mov
push
in
ins
jmp
fdiv
es
push
scas
hlt
or
jbe
and
or
leave
lahf
js
xlat
push
fwait
(bad)
mov
mov
pushf
add
adc
data16
adc
pop
inc
jne
fisttp
popa
push
int3
or
mov
mov
test
mov
fcmovu
push
cld
sub
outs
mov
and
jae
dec
push
in
dec
sbb
or
arpl
mov
cli
mov
mov
pop
adc
nop
push
lods
add
stc
xor
jbe
xor
test
in
inc
jecxz
or
jo
out
cdq
lods
loope
int
mov
movs
ror
mov
int
xchg
mov
jp
out
or
sub
pop
mov
enter
jns
pushf
(bad)
xor
inc
pop
add
push
cmp
push
arpl
add
xchg
xchg
or
xor
and
mov
add
xlat
ret
sahf
test
jo
push
jns
in
test
push
adc
adc
pop
in
inc
xor
icebp
ins
(bad)
and
ja
or
lock
gs
and
inc
inc
test
dec
cmp
xchg
aam
hlt
add
mov
dec
dec
adc
sub
xor
inc
xchg
push
jle
inc
push
sub
imul
cmps
call
pop
pop
jge
mov
inc
inc
push
or
mov
dec
out
pop
sbb
mov
mov
dec
outs
aam
and
adc
lock
mov
into
(bad)
ss
jmp
(bad)
aam
outs
test
dec
(bad)
and
sub
addr16
arpl
mov
jo
rcl
push
sub
pusha
xor
test
pop
je
sbb
push
jmp
mov
mov
arpl
cmp
iret
test
jl
push
mov
movs
iret
into
or
dec
push
outs
dec
aaa
adc
outs
movs
sbb
adc
or
das
test
int3
cmp
scas
sub
icebp
sbb
pop
imul
sahf
aad
push
ds
pusha
sub
sub
popf
out
cmp
in
cwde
jne
aaa
push
jmp
or
shr
nop
inc
ins
aas
rol
jo
sbb
push
outs
push
pop
lock
jecxz
sbb
popf
ret
(bad)
mov
or
jmp
jns
inc
stos
fadd
fs
sub
jb
loop
mov
or
sbb
fiadd
mov
div
das
sar
out
loopne
std
sbb
inc
popa
movs
cmp
cdq
sbb
out
mov
(bad)
push
enter
cli
mov
mov
xchg
movs
inc
cmp
and
cmps
ss
ret
(bad)
jae
sub
ja
xchg
jnp
jge
mov
mov
loope
fst
mov
sbb
sbb
imul
jp
bound
pop
add
and
lahf
cmc
push
jp
sub
xlat
ins
shr
jnp
movs
loopne
adc
sbb
shr
mov
mov
adc
jo
rcl
leave
gs
push
fwait
inc
es
ret
retf
outs
sub
cs
mov
cmp
add
retf
sbb
mov
call
aaa
jp
test
sub
out
push
add
pop
in
jmp
inc
shr
pop
jp
pop
push
dec
dec
jbe
popf
pop
xor
div
xor
jecxz
adc
outs
and
mov
in
in
repnz
xor
(bad)
pushf
mov
cmps
xchg
cmp
dec
int
(bad)
loop
fcomp
sub
mov
movs
neg
add
mov
push
ins
fsub
in
mov
fmul
fcom
and
aaa
mov
stos
push
or
and
stos
scas
jle
jae
and
xchg
popf
xor
mov
rcr
sub
add
cdq
cld
push
inc
mov
nop
add
mov
cmp
icebp
int
movs
sbb
call
push
cmp
jmp
ret
lock
mov
xor
jno
cwde
into
mov
sbb
xlat
add
repz
jne
push
cld
pop
cs
mov
adc
dec
shl
xchg
and
je
pop
pop
sbb
xor
mov
push
pop
mov
lahf
pushf
es
xlat
fmul
pushf
jle
loope
pop
adc
test
pop
fs
fs
jbe
sbb
push
xchg
nop
xchg
in
jbe
or
push
sbb
test
inc
(bad)
call
sub
(bad)
cli
ret
(bad)
cmp
lds
fst
out
ins
gs
mov
fnstenv
test
aaa
les
xchg
icebp
inc
ins
or
cld
call
jnp
sbb
(bad)
movs
int
mov
imul
out
test
xchg
pop
adc
push
fld
cmp
daa
popa
mov
and
in
xchg
push
hlt
loope
stos
push
xlat
test
pop
ds
dec
inc
(bad)
sbb
nop
fist
pop
adc
in
add
xchg
xchg
add
cmp
pop
ins
dec
ret
jl
stos
gs
mov
xchg
cmp
pop
pop
sbb
mov
lods
push
mov
movs
push
daa
es
mov
fdiv
push
test
js
call
inc
push
adc
fcmovbe
push
jns
or
inc
daa
mov
xor
lock
(bad)
and
cwde
dec
sbb
popa
cwde
pushf
aam
movs
dec
lods
jmp
test
jb
ret
out
push
and
std
pusha
mov
cmp
loopne
jmp
sti
add
pop
xor
pop
jecxz
pop
imul
pop
sbb
sub
std
call
ins
xor
or
ret
xor
lahf
push
sbb
sub
fisttp
bound
jo
or
push
pop
popa
(bad)
in
dec
(bad)
ds
jp
inc
ja
cwde
pop
and
pop
adc
inc
pop
pop
adc
push
sub
fwait
cmp
push
out
xor
or
popf
ss
sub
push
and
push
adc
add
mov
pop
xor
(bad)
pop
test
in
adc
shl
mov
inc
and
mov
mov
pop
dec
fdiv
dec
mov
icebp
or
dec
xor
mov
xor
or
shl
jp
xlat
loopne
push
out
mov
jmp
pop
adc
sub
arpl
push
es
mov
in
arpl
(bad)
mov
jmp
xchg
cmp
mov
out
lea
cmps
not
xchg
pop
repnz
cmp
cld
dec
adc
scas
rcl
adc
mov
sub
push
pop
adc
mov
in
mov
mov
jge
xchg
cmp
rcl
pop
gs
das
push
cmp
jns
push
dec
or
xor
push
lods
pop
push
and
sub
(bad)
sbb
sar
outs
adc
cld
and
mov
movs
hlt
dec
pop
xchg
(bad)
add
and
and
scas
xchg
(bad)
sbb
aas
dec
call
xchg
stos
and
repz
mov
inc
cmp
push
shr
js
dec
push
cli
aad
retf
push
mov
ja
bnd
push
stc
clc
or
dec
dec
(bad)
shl
jnp
fwait
fs
sar
popa
(bad)
enter
les
fst
clts
or
inc
and
cmp
sub
sub
dec
xchg
mov
mov
pop
mov
aas
hlt
pop
clc
mov
rcl
sub
xor
aas
call
jecxz
pusha
xor
ja
xor
sub
cld
out
jmp
mov
lods
out
add
lods
sub
movs
lods
mov
mov
mov
mov
mov
jmp
sbb
mov
cmp
test
mov
xchg
fs
es
xchg
fwait
xchg
fs
mov
shr
inc
dec
rcl
mov
mov
cmp
sub
jecxz
jmp
das
mov
icebp
or
pop
xor
ins
push
lods
dec
out
shr
sub
loopne
adc
push
mov
ins
je
call
inc
sub
ins
clc
mov
dec
mov
out
add
leave
popf
sbb
div
mov
test
lods
jne
dec
lods
(bad)
jnp
push
ins
movs
loopne
popa
test
and
icebp
pop
into
jecxz
jmp
mov
xchg
adc
je
adc
das
mov
adc
jg
fld
int3
in
jmp
adc
or
je
popf
(bad)
sbb
movs
pop
mov
jmp
daa
mov
cwde
mov
gs
cmp
add
aad
stc
cmps
arpl
clc
push
xchg
int
loopne
out
scas
push
ret
or
fiadd
int3
ins
enter
pop
push
push
jecxz
add
jge
mov
imul
jmp
dec
ins
mov
stos
or
icebp
inc
sub
dec
cmp
push
pop
push
cs
sbb
rcl
push
mov
test
mov
test
aas
cmc
std
cmp
scas
xor
je
shl
ret
mov
sahf
loopne
ins
sub
int3
rcl
push
mov
cld
push
outs
cwde
test
sub
jb
mov
fs
inc
push
clc
or
lods
inc
jl
sub
loopne
push
idiv
(bad)
iret
and
stc
xlat
pop
jl
mov
mov
mov
mov
push
jb
pusha
shr
dec
adc
sub
arpl
test
aam
sbb
shr
fucomp
retf
and
out
xor
stc
cmps
mov
dec
sub
xchg
mov
js
repz
push
sbb
lods
call
hlt
push
out
mov
ds
push
enter
icebp
jp
retf
int
adc
shl
mov
jmp
ret
js
pop
sahf
icebp
ror
das
xor
inc
lock
sti
or
aas
xchg
sahf
ja
mov
sbb
sub
jbe
cld
ja
mov
retf
pop
out
push
adc
scas
jge
add
add
ficomp
sbb
lea
jo
inc
lahf
sub
inc
sbb
jmp
addr16
add
push
jmp
rcl
cmp
fidiv
cdq
aas
popf
(bad)
cs
jle
retf
call
mov
ss
gs
xor
fwait
cmp
mov
xor
cmp
jne
outs
pop
pop
or
mov
push
dec
test
xchg
adc
pop
mov
jne
cmc
sub
dec
mov
mov
imul
mov
add
jp
push
mov
mov
retf
or
sub
cmp
in
sbb
int3
stos
das
pop
daa
loop
fs
jae
fdiv
dec
sbb
movs
test
stos
mov
mov
dec
mov
fisubr
cmp
call
shl
xchg
xor
imul
test
iret
arpl
mov
inc
mov
cmp
cld
and
pop
ins
adc
pop
mov
xchg
aad
aas
cmp
in
and
hlt
scas
aam
fbstp
xor
or
popf
ror
das
ret
dec
into
out
in
std
retf
int
cmp
cwde
in
into
test
dec
mov
inc
das
jmp
inc
sub
cmp
jge
adc
pop
or
sbb
and
sbb
stos
xchg
loope
sbb
not
pop
jmp
and
push
jns
repnz
mov
jbe
int
mov
jg
xchg
add
pop
pop
mov
sbb
mov
cmp
arpl
jmp
or
xchg
rcl
jb
adc
retf
mov
out
aas
add
pop
ds
shl
fist
mov
and
(bad)
pop
xlat
popa
jge
popf
test
dec
fsubr
out
ucomiss
movs
ins
mov
jbe
(bad)
pop
retf
dec
mov
std
popa
ror
add
data16
sbb
mov
lods
mov
xchg
jno
rcr
iret
jne
aad
and
adc
sub
sbb
mov
lods
inc
sub
ffreep
sbb
imul
les
sar
in
mov
or
mov
adc
int
jno
adc
dec
ficom
test
xor
mov
fadd
push
fdivr
dec
adc
call
inc
lods
(bad)
push
(bad)
cdq
mov
sbb
lds
jecxz
mov
mov
call
in
lea
rep
rcl
adc
xchg
jbe
mov
xchg
push
aaa
loope
mov
cmps
xchg
xchg
push
imul
aam
test
lods
sti
cdq
(bad)
mov
dec
data16
bound
adc
push
popf
jp
jbe
loopne
iret
int
and
push
push
mov
out
mov
jb
shl
sbb
fmul
ins
dec
shl
push
inc
mov
pop
add
inc
mov
in
or
aam
sbb
mov
lock
xchg
add
inc
aas
push
not
xchg
pop
xchg
test
mov
mov
cwde
adc
retf
xchg
cmps
or
jecxz
mov
repnz
sbb
stos
out
pop
fcomip
fisubr
outs
ror
test
mov
sti
inc
fs
aas
(bad)
pop
cmp
fnstsw
add
and
sub
mov
inc
cmps
jmp
scas
xchg
movs
sti
push
fdivr
cs
stos
mov
stos
nop
inc
retf
in
pop
xlat
ds
mov
test
imul
adc
pusha
mov
cdq
mov
call
clc
cdq
bound
push
cli
xor
(bad)
push
daa
jne
fbstp
js
dec
mov
xor
push
retf
pushf
cs
not
fwait
push
adc
add
int
mov
xchg
pop
div
add
pushf
pop
mov
int3
add
test
and
jmp
push
mov
push
retf
sub
cmp
mov
rcr
xchg
js
fwait
clc
push
repz
add
pop
fistp
pushf
or
or
ficomp
pop
nop
mov
push
mov
push
sbb
lods
add
mov
jo
mov
fdivr
pop
and
dec
cmps
dec
push
jle
xchg
dec
f2xm1
pop
les
movs
ror
sti
push
fmul
test
or
adc
lock
(bad)
xchg
test
push
push
(bad)
lods
push
mov
jnp
ret
adc
data16
inc
loope
mov
leave
ror
jle
das
fstp
test
in
in
fwait
adc
xor
retf
cmp
rcl
xchg
sbb
(bad)
and
jb
mov
xchg
dec
cli
pop
js
out
fmul
pop
stc
xlat
push
or
jmp
push
imul
mov
adc
xor
mov
cmps
ret
scas
jne
mov
out
add
and
scas
mov
in
call
and
(bad)
addr16
imul
out
aaa
popf
loop
jl
ror
in
xchg
jp
lods
(bad)
js
sbb
jae
dec
jecxz
ret
adc
add
pop
push
or
lods
cmp
adc
mov
cmp
pop
cmp
dec
movs
jns
pushf
cdq
adc
jmp
scas
fwait
cmp
je
mov
into
or
(bad)
ficomp
shl
hlt
jns
and
(bad)
out
jb
das
frstor
push
movs
mov
enter
into
mov
xchg
sar
dec
lahf
cld
push
push
sub
fcom
xchg
movs
pushf
or
mov
inc
jnp
adc
sub
or
scas
popf
sbb
dec
xchg
das
push
sub
jns
into
and
loop
out
or
mov
sbb
mov
movs
popa
stc
xchg
movs
xchg
out
xlat
adc
jmp
jae
dec
in
rcr
fnstsw
mov
out
xchg
mov
inc
jmp
mov
leave
out
aaa
adc
sub
sahf
aam
fwait
sbb
ds
nop
repnz
std
iret
sub
mov
or
jbe
(bad)
stos
(bad)
das
fist
sub
cmps
xor
cmp
or
dec
rol
push
add
arpl
add
inc
aas
adc
inc
sahf
sub
imul
and
fwait
sub
retf
xchg
cmps
adc
sbb
(bad)
cmp
jl
sub
push
mov
cmp
sub
aas
fidiv
loop
cmp
sahf
and
cmp
xchg
mov
push
cmps
sti
pop
not
or
cmp
cmp
out
(bad)
out
mov
cmp
xchg
call
je
sub
mov
mov
into
sub
or
loopne
cmp
cwde
and
xchg
cdq
dec
sub
inc
and
inc
cmp
fisttp
adc
adc
add
lock
test
and
sub
or
or
cld
mov
popf
or
push
and
xchg
push
ins
push
loop
rep
mov
and
mov
scas
outs
and
hlt
and
dec
and
mov
adc
lods
(bad)
shr
or
data16
sti
movs
out
cdq
xchg
xchg
fdiv
dec
mov
ret
mov
dec
iret
inc
movs
loope
popa
inc
fwait
sbb
cmp
aas
cli
shr
outs
mov
or
sbb
ja
sub
shr
inc
stos
sub
mov
or
sub
dec
cwde
(bad)
mov
sar
daa
lods
jb
add
add
xchg
scas
mov
jmp
outs
arpl
mov
dec
cmp
scas
outs
dec
je
push
jg
jle
loopne
lods
repz
mov
(bad)
xor
call
xor
mov
push
cli
int
mov
loope
xchg
xchg
test
loop
jmp
jp
xchg
mov
aad
dec
or
das
clc
into
fidiv
std
inc
and
in
add
mov
jmp
out
jmp
inc
addr16
sub
push
cmps
or
addr16
dec
mov
arpl
xlat
jbe
xor
popf
adc
aas
and
pop
mov
movs
push
mov
xor
push
aas
xlat
xchg
daa
mov
pop
pop
cmp
and
pop
mov
mov
push
in
mov
mov
mov
test
jbe
mov
pop
or
sbb
int3
push
pop
and
push
scas
(bad)
sbb
jl
hlt
cli
shufps
cmc
(bad)
rol
(bad)
and
add
jg
aas
sub
xor
js
movs
inc
scas
pop
ins
je
xchg
cs
outs
sbb
pop
aas
hlt
cli
sti
lock
or
movs
cmps
push
dec
lods
jmp
(bad)
stc
jne
dec
jg
scas
into
fidivr
mov
or
xchg
push
sub
cdq
sar
xchg
call
ins
icebp
test
mov
and
push
popf
mov
cmp
fwait
mov
inc
xlat
xchg
inc
(bad)
lds
xor
push
sub
ds
mov
xchg
jns
cmp
inc
ins
outs
outs
inc
mov
arpl
repz
ja
jl
and
movs
dec
sbb
sub
lahf
dec
push
push
xor
and
enter
in
mov
nop
lahf
push
add
xchg
loop
fdiv
fld
jecxz
or
adc
call
outs
cs
addr16
xchg
and
pop
ins
sub
imul
inc
lock
push
mov
ja
jns
jbe
push
scas
pop
sbb
dec
aas
mov
(bad)
inc
or
inc
test
cld
enter
cmp
mov
fiadd
outs
adc
or
pop
add
mov
std
sbb
pop
or
imul
call
nop
mov
xor
inc
dec
or
xchg
jmp
sbb
fs
enter
movs
jns
(bad)
fmul
stos
call
ds
je
jle
pusha
and
jnp
sub
dec
popf
push
mov
sbb
xchg
fwait
jne
adc
lds
imul
cs
cli
stc
mov
adc
sahf
js
repnz
fidivr
clc
sub
push
push
sbb
and
xchg
push
xor
jo
aaa
(bad)
cli
es
aas
jbe
sti
hlt
and
cmp
imul
adc
add
dec
dec
ds
add
adc
rol
xor
adc
out
jb
adc
jo
push
jb
cmp
jmp
out
movs
or
fdivr
xchg
sub
jo
push
jns
xor
jae
test
fucom
sbb
mov
or
std
xchg
out
add
pop
in
sub
sbb
ss
xlat
sub
add
int
xchg
ret
add
cmovs
mov
add
iret
test
jecxz
sub
idiv
leave
mov
mov
mov
ret
(bad)
adc
int
adc
je
jecxz
aas
dec
ins
stc
pusha
push
xlat
fcmovne
inc
inc
(bad)
cmp
cdq
mov
imul
and
sub
pop
into
ds
movs
add
xor
int
mov
repz
inc
neg
and
pop
ja
out
in
mov
sbb
or
pop
and
pop
retf
push
cmp
mov
xor
push
fdiv
push
loope
or
dec
mov
cmp
inc
and
retf
or
adc
push
fstp
les
sbb
push
jb
repnz
dec
std
movs
dec
lock
gs
mov
int3
pop
inc
push
push
jno
dec
in
mov
inc
mov
cmc
adc
push
add
inc
outs
xchg
cmp
sub
jle
dec
inc
mov
scas
aas
sub
lea
int3
push
fdiv
jecxz
mov
inc
test
xchg
xor
aad
xchg
dec
jbe
ins
mov
xlat
mov
call
mov
js
jmp
test
mov
push
add
shl
gs
sbb
int3
(bad)
mov
bswap
xchg
inc
bnd
push
mov
out
ins
add
inc
dec
out
ins
add
add
add
add
add
add
add
add
mov
add
add
sbb
les
add
les
add
pop
mov
mov
mov
mov
mov
xchg
sub
outs
jnp
jae
cmp
jnp
jge
push
jge
jl
fs
fs
addr16
ins
jnp
jae
mov
mov
nop
xor
xchg
xchg
jo
xchg
jno
xchg
outs
xchg
xchg
outs
nop
xchg
jo
lea
xchg
xor
js
jle
mov
mov
xchg
add
cdq
mov
test
add
mov
add
or
mov
mov
add
mov
xchg
lds
jo
add
dec
test
mov
mov
mov
xchg
sub
outs
ja
je
cmp
jl
jle
push
jg
js
gs
data16
imul
jnp
ja
mov
nop
jle
xchg
xor
jne
xchg
jbe
xchg
je
xchg
jne
xchg
jbe
lea
mov
test
cmp
jp
cmp
jle
test
add
test
xchg
sbb
xchg
add
xchg
xchg
jns
mov
mov
mov
mov
xchg
add
lea
xchg
ret
jb
(bad)
outs
cdq
add
push
imul
xchg
mov
push
sub
jb
jne
cmp
jle
jle
push
and
data16
addr16
push
test
mov
ja
nop
jp
nop
jge
pop
(bad)
mov
jp
(bad)
jnp
nop
jl
lea
mov
xchg
jl
xchg
xchg
xchg
xchg
mov
lea
test
cmp
or
test
jl
xchg
mov
mov
mov
mov
mov
xchg
jge
test
lea
xchg
shl
ins
cwde
add
pop
outs
jge
jo
bound
fs
addr16
ins
jb
outs
jo
jno
xor
jl
cmp
and
data16
addr16
addr16
push
xchg
mov
lea
(bad)
ja
(bad)
jp
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
xchg
cmp
jg
jle
xchg
add
jle
js
mov
mov
mov
mov
xchg
jg
lahf
jnp
cmps
jns
scas
jnp
mov
xchg
mov
xchg
mov
jns
jno
arpl
addr16
push
test
test
test
xor
jge
add
test
test
test
xchg
xchg
mov
mov
lea
lea
mov
add
xchg
or
mov
xchg
adc
(bad)
nop
adc
mov
jge
cmp
jge
jns
test
xchg
mov
mov
mov
mov
or
fwait
jp
mov
lea
xchg
mov
xchg
add
fs
imul
outs
test
test
test
test
js
test
add
test
test
test
xchg
xchg
xchg
mov
mov
mov
mov
xchg
test
test
or
mov
pop
mov
adc
lea
lea
mov
cmp
test
ja
xchg
mov
mov
mov
mov
jg
xchg
jg
xchg
jp
popf
ja
movs
js
stos
jne
scas
jb
mov
(bad)
mov
mov
jle
imul
jne
jb
xor
je
test
test
cmp
jge
add
sub
jl
ins
jns
imul
jl
ins
jge
jo
mov
mov
mov
xchg
test
add
mov
mov
lea
nop
mov
xchg
or
mov
mov
xchg
cmp
xchg
xchg
mov
mov
mov
mov
mov
mov
xchg
jnp
cwde
js
sahf
js
movs
jne
test
lea
add
jbe
jg
jae
ja
xchg
xchg
test
test
cmp
jle
add
sub
ins
jl
ins
jp
imul
jl
outs
jge
jb
test
js
test
test
add
xchg
mov
(bad)
xchg
or
nop
mov
xchg
or
xchg
or
test
jg
xchg
jp
mov
mov
mov
mov
lea
xor
mov
or
(bad)
xchg
jns
popf
jbe
mov
xchg
jle
cmp
test
jp
test
test
cmp
jp
cmp
sub
add
sub
jl
je
xor
jnp
cmp
jle
jg
mov
lea
jge
(bad)
jle
(bad)
jg
nop
jg
xchg
or
nop
mov
xchg
or
mov
test
add
mov
mov
mov
(bad)
jns
mov
(bad)
jge
lea
mov
test
jle
xchg
jge
xchg
jp
pushf
js
mov
jp
mov
jle
cmp
jae
jle
test
cmp
jp
cmp
jle
cmp
jle
jg
outs
jge
ins
jnp
ins
jns
ins
jns
outs
jl
jb
jg
jge
jp
jg
cmp
jg
test
mov
lea
(bad)
jp
nop
jnp
nop
jl
xchg
jge
xchg
adc
nop
mov
xchg
add
test
test
or
jl
jl
mov
lea
mov
xchg
jnp
xchg
jl
xchg
jg
pop
mov
mov
or
xchg
jge
pushf
jnp
lahf
js
add
xchg
test
xor
jno
jge
jge
outs
jg
ins
jge
ins
jge
ins
jge
outs
jl
ins
jp
ins
jns
outs
jns
jno
jge
jnp
jp
jnp
jle
add
test
mov
lea
nop
ja
nop
js
nop
jp
xchg
jnp
xchg
jg
xchg
adc
pop
pop
mov
nop
jnp
xchg
jnp
xchg
jge
xchg
jg
lea
xchg
mov
jp
nop
jl
xchg
jge
xchg
jle
xchg
sub
jb
mov
lea
mov
mov
test
cwde
xor
imul
mov
test
test
jnp
jae
xor
jo
sub
ins
jnp
outs
jnp
outs
jp
outs
jns
outs
jp
jae
jnp
jl
jge
ja
jg
xchg
mov
nop
mov
xchg
jae
xchg
je
xchg
ja
xchg
jp
xchg
jle
nop
or
pop
(bad)
jp
mov
nop
js
xchg
jns
xchg
jnp
xchg
jge
(bad)
jle
lea
or
(bad)
jl
nop
jle
xchg
jg
xchg
sub
imul
xchg
mov
mov
mov
mov
mov
jge
mov
mov
mov
xchg
mov
xchg
or
test
xor
jno
test
sub
ins
jns
outs
jp
outs
jp
outs
jp
jo
jns
jle
jp
jbe
jle
test
mov
xchg
mov
(bad)
outs
xchg
xchg
outs
xchg
xchg
jb
xchg
jne
nop
jns
xchg
jle
pop
xchg
jg
xchg
jnp
nop
js
(bad)
jne
xchg
jbe
xchg
ja
xchg
jns
xchg
jl
xchg
jge
(bad)
jg
mov
jge
jle
(bad)
jge
nop
jg
xchg
xor
ins
xchg
test
outs
xchg
mov
mov
(bad)
js
(bad)
jns
mov
jg
add
xchg
xchg
imul
cwde
xchg
mov
test
jnp
jnp
mov
xchg
test
xchg
test
jg
jns
outs
jnp
outs
jnp
outs
jl
jno
js
xor
jne
jg
xchg
mov
mov
xchg
imul
xchg
xchg
je
xchg
jns
xchg
jle
mov
test
jle
xchg
jnp
nop
js
nop
jne
xchg
jne
xchg
jbe
xchg
js
xchg
jnp
xchg
jl
xchg
jg
mov
or
xchg
xor
ins
xchg
mov
mov
(bad)
jb
nop
jbe
nop
ja
mov
mov
add
cwde
xchg
pop
add
pushf
xchg
test
jg
cmp
je
jl
mov
mov
mov
test
sub
outs
jl
outs
jl
jo
js
jle
ja
jbe
xor
mov
xchg
mov
lea
xchg
push
xchg
outs
cwde
xchg
jae
xchg
jns
xchg
jg
lea
test
jle
jl
xchg
jns
nop
jbe
nop
jbe
xchg
ja
xchg
jns
xchg
jnp
xchg
jge
xchg
jg
nop
cmp
jl
mov
mov
nop
cmp
xchg
xor
jo
mov
mov
nop
jb
xchg
jbe
nop
ja
mov
mov
add
nop
fwait
gs
cwde
pop
add
sahf
xchg
sbb
test
jg
mov
mov
mov
xchg
sub
outs
jle
jno
js
jg
js
jne
xor
outs
mov
xchg
test
mov
mov
xchg
push
xchg
outs
cdq
xchg
je
xchg
jp
xchg
or
mov
xchg
jle
xchg
jl
(bad)
jns
(bad)
js
xchg
jns
xchg
jnp
xchg
jge
xchg
jle
xchg
cmp
jp
xchg
mov
jl
nop
jg
xchg
cmp
jb
mov
mov
nop
jb
xchg
jbe
nop
js
mov
jle
add
cwde
call
jge
fwait
jl
xchg
jnp
xchg
js
lea
xchg
xor
je
js
mov
xchg
sub
outs
jg
jno
jns
cmp
ja
test
test
sub
imul
cwde
mov
(bad)
push
cwde
outs
fwait
xchg
je
xchg
jnp
xchg
adc
mov
nop
test
cmp
js
jl
(bad)
jge
xchg
jle
xchg
xor
jne
xor
js
mov
mov
mov
(bad)
jle
nop
jg
xchg
cmp
je
mov
mov
xchg
ja
nop
jns
lea
mov
add
sahf
push
add
pushf
mov
xchg
xchg
je
xchg
jo
mov
test
jg
mov
mov
test
xor
jno
jge
cmp
jp
cmp
jne
test
outs
mov
xchg
test
push
vpshlw
cdq
ins
pushf
cdq
outs
fwait
cwde
jne
xchg
jl
xchg
adc
mov
nop
mov
test
xor
jae
xor
jno
xor
je
xchg
mov
mov
mov
mov
mov
(bad)
jg
xchg
cmp
ja
mov
lea
nop
js
(bad)
jnp
mov
xchg
js
movs
outs
lea
test
call
cdq
jno
xchg
outs
mov
xor
xchg
test
xor
jb
jg
test
test
jp
xchg
test
xor
outs
pop
xchg
mov
mov
ins
fwait
cdq
outs
fwait
call
jge
xchg
adc
lea
nop
lea
mov
xchg
jno
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
lea
lea
jle
lea
nop
cmp
js
mov
(bad)
jp
mov
mov
jg
cmps
js
test
mov
add
xchg
mov
xchg
call
outs
xchg
test
ja
test
jb
test
xor
js
jg
test
xchg
test
xor
jb
xor
jno
mov
xchg
jo
cdq
jb
fwait
je
call
test
mov
test
jns
(bad)
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
test
mov
mov
mov
jg
mov
jg
test
test
xchg
xchg
mov
xchg
popf
outs
mov
xchg
cmp
jnp
test
test
jae
xchg
ja
test
cmp
jge
add
mov
mov
xchg
cmp
jbe
xchg
jne
cwde
jbe
call
adc
mov
nop
xchg
test
ja
xchg
jae
nop
jo
mov
(bad)
ins
xchg
xchg
mov
mov
mov
xchg
or
mov
mov
lea
test
jbe
lods
ins
jle
pop
jge
push
add
xchg
call
jb
(bad)
jb
mov
jbe
jle
cmp
ja
test
xchg
jne
mov
mov
mov
xchg
test
or
nop
jg
xchg
test
mov
xchg
jns
xchg
jnp
cdq
jl
call
xchg
mov
adc
mov
test
adc
nop
jo
(bad)
je
(bad)
ja
mov
mov
jle
xchg
add
mov
lea
mov
lea
test
jbe
lods
ins
jns
pop
jbe
push
add
xchg
ins
nop
xchg
jno
(bad)
jne
mov
xchg
cmp
jg
js
test
xchg
je
mov
js
lea
lea
mov
mov
mov
or
nop
mov
nop
jle
xchg
jg
xchg
jg
xchg
adc
mov
lea
nop
xchg
jnp
xchg
jne
xchg
jo
xchg
ins
test
xchg
imul
adc
mov
mov
mov
test
jg
xchg
test
or
sahf
add
jnp
ins
jbe
pusha
jno
push
add
xchg
mov
mov
jns
mov
test
jg
cmp
js
xchg
mov
mov
jne
nop
js
xchg
jp
xchg
jnp
nop
jle
nop
add
jnp
lea
jle
mov
lea
(bad)
xchg
adc
mov
mov
mov
mov
test
adc
xchg
jno
xchg
je
xchg
ja
mov
mov
xchg
jle
xchg
jle
xchg
xchg
test
mov
xchg
jl
ins
jbe
popa
jo
push
add
xchg
jge
nop
xor
ja
xchg
test
jle
test
test
mov
mov
lea
nop
ja
xchg
jns
xchg
jnp
xchg
jl
xchg
jg
xchg
test
mov
lea
jle
mov
mov
nop
or
mov
cdq
mov
test
mov
test
adc
xchg
jb
xchg
je
xchg
ja
mov
mov
xchg
jge
mov
mov
jl
mov
xchg
mov
mov
jge
outs
ja
arpl
pop
add
(bad)
jne
mov
cmp
test
mov
mov
mov
mov
adc
xchg
test
lea
mov
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
adc
xchg
outs
jnp
outs
jnp
jb
xchg
jae
xchg
jbe
mov
mov
test
jge
mov
mov
mov
mov
mov
mov
(bad)
xchg
test
js
movs
jo
cmps
data16
pop
add
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
lea
nop
jnp
xchg
jge
xchg
jle
xchg
cmp
adc
xchg
mov
jge
mov
mov
test
xchg
(bad)
mov
test
xchg
xchg
adc
xchg
jno
xchg
outs
js
jno
xchg
jae
xchg
jne
(bad)
jp
mov
xchg
jge
mov
mov
mov
lea
lea
mov
xchg
xchg
test
js
mov
ja
pusha
add
sub
jae
test
xchg
xchg
mov
xchg
mov
mov
(bad)
jle
xchg
jg
xchg
cmp
jg
mov
mov
nop
jge
(bad)
jg
mov
xchg
or
mov
mov
xchg
pop
mov
jg
call
jae
cdq
jb
xchg
jb
xchg
jo
xchg
jb
xchg
jb
xchg
je
(bad)
jp
mov
xchg
jle
mov
mov
jnp
(bad)
jle
pop
xchg
mov
xchg
adc
mov
jle
popa
add
jle
jl
jo
xor
jle
test
xchg
xchg
mov
mov
xchg
test
test
jle
mov
(bad)
jle
xchg
jle
pop
xchg
or
mov
lea
xchg
xchg
adc
cdq
test
jp
cdq
jbe
cdq
jne
xchg
jne
xchg
jno
xchg
jb
xchg
jb
xchg
jne
nop
jp
mov
xchg
jg
mov
jl
(bad)
jl
xchg
jle
xchg
or
mov
adc
lea
xchg
jns
jg
jo
jg
mov
xchg
xchg
xchg
xchg
test
test
test
xchg
mov
mov
nop
jle
xchg
jg
nop
adc
mov
xchg
test
jge
mov
jp
mov
nop
jge
xchg
jg
xchg
adc
pushf
add
js
js
cwde
ja
xchg
jae
xchg
je
xchg
jae
xchg
jne
xchg
jnp
lea
mov
add
mov
(bad)
xchg
or
call
xchg
jl
cdq
js
fwait
jno
sahf
imul
jnp
mov
mov
cdq
xchg
test
test
xchg
mov
xchg
xchg
mov
lea
xchg
jle
xchg
adc
pop
mov
xchg
test
xchg
mov
mov
lea
nop
jnp
xchg
jge
xchg
adc
fwait
mov
test
cmp
jbe
jp
cdq
jns
xchg
jne
xchg
jne
xchg
je
xchg
jbe
xchg
jl
mov
add
mov
lea
mov
xchg
sbb
fwait
popf
addr16
mov
je
cmp
jge
nop
add
sbb
xchg
add
mov
xchg
mov
mov
mov
(bad)
jg
xchg
jle
xchg
sbb
xchg
xchg
jl
test
xor
js
mov
mov
jbe
mov
nop
jnp
xchg
jle
xchg
jg
mov
mov
jl
cmp
je
jl
cdq
jl
xchg
ja
cwde
ja
cwde
jbe
xchg
js
xchg
jge
mov
add
mov
call
or
and
lahf
xchg
jne
xchg
outs
mov
pusha
add
jae
test
mov
nop
add
sbb
xchg
add
mov
mov
mov
lea
jle
xchg
jge
xchg
jg
xchg
adc
mov
test
xor
jne
xchg
xchg
mov
mov
lea
(bad)
jnp
(bad)
jl
lea
mov
mov
test
xor
outs
cdq
jg
xchg
jp
cwde
jns
cwde
js
xchg
jp
xchg
jg
lea
add
cdq
js
popf
jp
sahf
jle
mov
and
movs
mov
mov
nop
outs
test
stos
fwait
popa
add
je
test
mov
nop
add
test
adc
mov
or
nop
mov
mov
nop
jl
xchg
jl
xchg
jge
xchg
adc
xchg
test
xor
jb
test
test
xchg
mov
mov
mov
lea
mov
mov
mov
xchg
sub
ins
cwde
sub
push
jl
xchg
jge
xchg
xor
jge
test
mov
mov
mov
xchg
movs
test
xchg
mov
outs
stos
mov
xchg
bound
cmp
mov
xchg
xchg
xchg
add
mov
mov
mov
mov
(bad)
jns
nop
jnp
xchg
jp
xchg
jnp
xchg
jle
mov
or
mov
mov
xchg
mov
mov
mov
mov
je
mov
mov
xchg
test
test
sub
ins
xchg
xor
jg
mov
mov
mov
mov
xchg
jle
cmp
jne
sub
imul
jg
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xchg
js
xchg
js
nop
jnp
mov
or
mov
test
test
jo
xchg
xchg
je
mov
lea
mov
mov
mov
imul
xchg
test
test
test
mov
mov
mov
nop
cwde
jnp
fwait
jns
popf
jns
sahf
jnp
mov
sbb
popf
jge
mov
ins
stos
test
xchg
or
xchg
mov
mov
add
xchg
jnp
mov
mov
mov
mov
(bad)
jne
(bad)
jne
mov
mov
add
mov
mov
xchg
test
xchg
xchg
mov
mov
mov
lea
mov
mov
lea
imul
mov
mov
mov
mov
(bad)
(bad)
jl
xchg
jge
xchg
jge
call
jnp
popf
jnp
popf
jnp
fwait
jnp
call
js
fwait
ja
mov
ins
add
mov
pop
adc
pop
mov
test
jl
test
mov
mov
je
lea
mov
mov
xchg
test
jp
mov
mov
mov
mov
xchg
ins
xchg
xchg
xchg
mov
mov
mov
(bad)
jo
(bad)
jo
nop
outs
cwde
nop
ins
xchg
nop
ins
xchg
nop
outs
xchg
mov
mov
mov
mov
mov
xchg
mov
(bad)
jle
xchg
jg
xchg
adc
nop
cdq
jl
call
jp
xchg
ja
xchg
jbe
xchg
jne
xchg
jae
cdq
jae
pushf
ja
add
mov
xchg
or
(bad)
mov
mov
cmp
jg
jle
mov
test
jl
cmp
jbe
mov
mov
mov
mov
mov
test
cmp
adc
lea
lea
mov
mov
mov
mov
mov
mov
jae
lea
nop
jno
xchg
jo
xchg
outs
cdq
xchg
outs
cwde
xchg
outs
xchg
xchg
jo
mov
lea
lea
mov
nop
add
jg
pop
xchg
adc
xchg
xchg
jg
xchg
jle
xchg
jl
xchg
jp
nop
jbe
nop
je
lea
lea
xchg
jo
xchg
jae
add
xchg
add
mov
lea
nop
cmp
jg
jle
test
jge
cmp
jbe
mov
mov
mov
mov
mov
test
cmp
xchg
jnp
xchg
js
xchg
ja
nop
je
mov
mov
mov
mov
jne
mov
lea
jno
nop
jb
xchg
jno
xchg
jo
xchg
jo
xchg
jno
xchg
jb
(bad)
jae
mov
lea
mov
xchg
mov
mov
nop
xchg
adc
xchg
jl
ja
mov
xchg
xchg
mov
mov
add
xchg
add
mov
mov
pop
mov
jge
xchg
jg
test
mov
mov
mov
lea
mov
outs
sahf
test
cmp
jl
jl
xchg
jns
xchg
jns
xchg
jbe
xchg
jae
mov
mov
mov
mov
mov
mov
mov
xchg
jae
xchg
jb
xchg
jo
xchg
jno
xchg
jb
xchg
jae
nop
jne
mov
lea
add
adc
lea
mov
mov
jge
mov
xchg
xor
jb
jb
add
nop
test
jg
mov
mov
xchg
test
jg
(bad)
jge
(bad)
jnp
mov
add
mov
mov
mov
(bad)
ins
popf
mov
mov
xchg
test
cmp
jle
jnp
xchg
jnp
xchg
js
xchg
jbe
mov
mov
mov
mov
mov
mov
mov
xchg
je
xchg
jae
xchg
jno
xchg
jno
xchg
jae
xchg
je
nop
jbe
mov
mov
lea
vprotb
xchg
mov
mov
mov
test
jl
cmp
jne
jns
js
jo
je
ins
add
test
jg
mov
jns
test
xor
jne
jnp
(bad)
jp
lea
mov
xchg
jg
mov
nop
jae
nop
outs
cwde
xchg
ins
popf
xchg
imul
popf
xchg
jbe
cmp
jg
jle
xchg
jl
nop
jp
lea
mov
mov
mov
mov
lea
mov
nop
jbe
xchg
je
xchg
jb
xchg
jb
xchg
jae
xchg
je
nop
jbe
lea
mov
mov
lea
nop
mov
lea
mov
mov
jl
jle
cmp
ja
jbe
jns
jno
outs
jae
add
mov
xchg
test
jns
xor
jbe
jge
(bad)
jp
(bad)
jns
(bad)
jp
lea
mov
test
jnp
xchg
jne
xchg
jo
xchg
outs
popf
xchg
ins
mov
outs
popf
mov
xchg
xor
jnp
add
xchg
mov
mov
mov
mov
(bad)
js
xchg
jbe
xchg
jae
xchg
jb
xchg
jae
xchg
je
(bad)
jbe
lea
mov
mov
mov
mov
pop
pop
xchg
jg
test
jge
jl
jns
jle
jne
jo
jne
jae
add
test
cmp
jge
cmp
jbe
xor
jnp
jns
xchg
jp
(bad)
jge
mov
xchg
add
xchg
xchg
jae
xchg
jno
xchg
outs
sahf
xchg
outs
popf
(bad)
jno
mov
mov
test
cmp
or
xchg
test
xchg
mov
mov
mov
xchg
je
xchg
jb
xchg
jae
xchg
je
lea
mov
mov
mov
mov
mov
mov
mov
test
jle
xchg
jle
jle
jns
jg
jbe
jo
jne
jae
add
or
jg
jle
cmp
xor
ja
jl
(bad)
jp
xchg
jns
xchg
jp
xchg
jge
lea
jle
test
jnp
cdq
ja
fwait
jbe
call
jae
lea
jae
mov
js
xchg
xchg
xchg
mov
mov
adc
mov
mov
mov
test
test
test
mov
mov
add
or
jg
jns
xor
jb
jbe
jno
add
jl
jl
cmp
cmp
jp
jg
xchg
(bad)
jnp
xchg
jp
xchg
jnp
xchg
jl
(bad)
jl
mov
xchg
jg
pushf
jl
sahf
jp
popf
ja
fwait
ja
xchg
ja
nop
jbe
mov
je
mov
mov
mov
mov
(bad)
call
add
jle
test
mov
mov
mov
mov
xchg
cmp
jle
add
add
test
xchg
add
add
xor
jae
jbe
jno
add
jns
jp
test
cmp
cmp
cmp
jp
jl
xchg
jl
xchg
jl
xchg
jge
nop
jl
mov
mov
or
xchg
mov
xchg
xchg
jp
xchg
jns
nop
jbe
lea
mov
lea
lea
mov
xchg
cwde
jns
cwde
jp
xchg
jnp
xchg
jge
(bad)
jle
mov
xchg
add
xor
jge
cmp
jle
mov
mov
xchg
mov
mov
or
test
cmp
jne
jo
add
jne
js
cmp
jg
jle
jp
cmp
cmp
jnp
jge
xchg
jge
xchg
jge
xchg
jle
xchg
jl
mov
mov
xchg
adc
nop
cdq
jle
xchg
jl
xchg
js
(bad)
ja
mov
mov
pop
nop
lea
xchg
ja
xchg
jbe
xchg
jne
xchg
jbe
nop
js
mov
xchg
cmp
jno
sub
jo
jnp
jnp
ja
ja
jns
cmp
jge
mov
mov
mov
mov
xchg
xchg
jg
cmp
jnp
jbe
jbe
ins
add
jb
jbe
cmp
ja
cmp
jg
mov
xchg
jge
xchg
jg
xchg
jle
xchg
jle
xchg
jge
nop
jle
lea
mov
xchg
or
mov
test
adc
xchg
mov
(bad)
jne
xchg
jae
xchg
jb
mov
mov
xchg
xor
jbe
jl
outs
jp
ins
ja
outs
ja
jo
jne
jne
jns
jbe
jbe
cmp
jp
xchg
mov
xchg
mov
lea
mov
mov
mov
jge
cmp
jns
jne
jp
push
mov
mov
test
cmp
jbe
cmp
jge
xchg
mov
xchg
jle
xchg
or
xchg
xchg
jle
xchg
jle
pop
mov
mov
xchg
add
or
xchg
test
mov
mov
mov
lea
mov
mov
sub
outs
jb
jno
js
ins
jbe
imul
jae
outs
jae
jae
jae
jo
jl
jbe
je
xor
jle
xchg
mov
mov
mov
test
add
push
add
ins
xor
jl
jnp
jbe
test
xchg
mov
xchg
jg
xchg
add
xchg
xchg
jg
nop
adc
cdq
mov
mov
xchg
jg
lea
lea
jle
nop
cmp
js
mov
mov
mov
test
sub
jne
push
jbe
ins
jne
imul
jo
ins
outs
jb
ins
jae
ins
jbe
outs
ja
outs
jbe
jb
xor
jp
test
xchg
xchg
xchg
jns
xchg
test
cmp
jnp
jne
test
and
test
sub
outs
jl
jae
xor
jnp
mov
mov
xchg
add
lea
xchg
xchg
adc
xchg
nop
xchg
xchg
lea
mov
or
xchg
adc
xchg
mov
jo
sub
jb
push
jb
addr16
data16
jb
ins
jb
ins
jae
push
jae
js
push
jp
js
outs
jbe
jb
test
test
test
mov
lea
pop
mov
mov
mov
mov
gs
imul
jp
js
mov
mov
xchg
cmp
cwde
test
xchg
xchg
adc
xchg
nop
xchg
lea
lea
mov
lea
mov
test
jge
xchg
xor
outs
jle
ins
ja
push
jb
addr16
gs
gs
jb
ins
je
imul
ja
addr16
push
jnp
jns
outs
ja
jno
test
test
mov
jl
lea
jge
xchg
jge
(bad)
jge
lea
jp
mov
mov
mov
mov
and
imul
jnp
jns
mov
mov
xchg
cmp
test
(bad)
xchg
test
xchg
mov
mov
mov
test
mov
pop
xchg
test
test
xor
jo
jp
jbe
imul
data16
outs
jno
ins
jae
imul
js
addr16
gs
xor
jp
jl
push
sub
jo
test
jbe
mov
lea
(bad)
js
xchg
js
xchg
js
(bad)
js
nop
jbe
(bad)
jno
mov
mov
mov
add
push
jl
add
mov
pop
xchg
add
xchg
mov
nop
xchg
xchg
mov
vprotb
pop
xchg
xchg
mov
test
test
jg
xchg
jge
outs
jne
imul
gs
arpl
fs
jne
ins
ja
push
ins
addr16
xor
jbe
cmp
sub
jo
xchg
mov
mov
(bad)
jae
xchg
je
xchg
jne
nop
jne
xchg
je
nop
outs
jnp
imul
outs
mov
add
cmp
test
mov
pop
xchg
test
add
xchg
test
xchg
mov
mov
mov
test
mov
mov
xchg
test
or
jl
jnp
jge
jo
js
ins
jne
imul
jb
fs
jbe
ins
js
push
ins
xor
ja
test
test
add
test
xchg
mov
mov
mov
nop
jno
nop
jae
nop
jae
xchg
jno
xchg
ins
jl
push
mov
mov
add
jo
xor
jp
mov
nop
add
test
mov
(bad)
xchg
xchg
xchg
mov
(bad)
mov
xchg
mov
pop
xchg
xchg
test
cmp
jno
jnp
ins
js
imul
jae
outs
ja
ins
jp
imul
xor
jae
mov
mov
mov
xchg
mov
pop
xchg
mov
lea
(bad)
jo
(bad)
jno
nop
jb
xchg
jo
xchg
imul
jns
imul
jge
lea
mov
test
adc
xchg
add
lea
xchg
xchg
xchg
mov
mov
xchg
mov
mov
mov
mov
mov
lea
add
jnp
push
outs
data16
addr16
push
jp
ins
jg
imul
mov
lea
jle
mov
xchg
test
xchg
mov
mov
mov
mov
nop
jno
xchg
outs
adc
xchg
push
add
jne
mov
mov
mov
mov
xchg
test
xchg
xchg
mov
mov
nop
mov
mov
mov
(bad)
mov
mov
mov
mov
test
test
outs
ins
sub
addr16
addr16
imul
outs
jg
ins
xchg
jne
lea
mov
nop
jnp
nop
jge
xchg
xor
jno
test
test
mov
mov
lea
mov
nop
jno
xchg
outs
adc
xchg
imul
mov
mov
or
xchg
mov
mov
mov
xchg
xchg
mov
xchg
(bad)
mov
xchg
(bad)
lea
mov
mov
call
(bad)
mov
mov
mov
jne
mov
test
outs
push
jne
jne
outs
je
outs
jb
jb
xchg
mov
mov
nop
js
xchg
jnp
xchg
jl
xchg
jg
cwde
xor
jne
test
mov
mov
mov
mov
nop
jo
xchg
ins
adc
cwde
gs
data16
mov
jbe
mov
adc
mov
mov
mov
nop
xchg
mov
mov
mov
lea
xchg
xchg
nop
xchg
nop
nop
xchg
nop
nop
cdq
nop
nop
fwait
nop
xchg
fwait
(bad)
xchg
cdq
mov
mov
mov
or
lea
mov
mov
test
xor
jne
js
jno
jl
jne
je
xchg
mov
lea
nop
js
xchg
jp
xchg
jl
xchg
jg
cdq
cmp
pushf
test
mov
jno
lea
(bad)
jb
xchg
jno
xchg
ins
sbb
pushf
fs
gs
movs
mov
mov
mov
mov
test
or
mov
lea
lea
xchg
(bad)
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
call
mov
mov
xchg
mov
test
jl
(bad)
jbe
mov
mov
mov
test
xor
jnp
jp
ja
test
mov
mov
mov
xchg
jnp
xchg
jl
xchg
jg
xchg
add
jns
mov
mov
mov
xchg
jae
xchg
jb
call
addr16
data16
data16
movs
nop
addr16
sahf
mov
mov
or
(bad)
mov
lea
xchg
nop
mov
mov
mov
(bad)
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
call
mov
mov
xchg
test
js
jge
xchg
ja
nop
jb
lea
mov
xchg
xor
js
jge
ja
jle
jle
jnp
test
mov
mov
mov
(bad)
jl
xchg
jg
xchg
add
cwde
mov
lea
jae
xchg
je
xchg
jae
pushf
jno
lahf
ins
and
add
outs
popf
mov
xchg
jle
mov
jl
lea
lea
lea
xchg
lea
lea
mov
nop
mov
xchg
xchg
cwde
xchg
xchg
call
pushf
(bad)
pushf
fwait
mov
xchg
xchg
or
xchg
jg
xchg
jns
nop
je
mov
mov
xchg
test
jg
jns
jp
jg
jnp
cmp
add
mov
jl
lea
nop
add
jge
mov
mov
xchg
je
xchg
jne
xchg
jne
popf
je
mov
jle
outs
jge
outs
jl
cdq
xchg
gs
(bad)
ins
cwde
mov
xchg
jge
lea
lea
mov
mov
mov
xchg
mov
mov
mov
nop
mov
mov
xchg
xchg
pushf
call
mov
test
xchg
or
pop
mov
mov
je
xchg
test
jg
jnp
jns
cmp
jl
cmp
jg
test
mov
mov
xchg
test
mov
(bad)
jne
xchg
jne
xchg
jbe
cwde
ja
sahf
ja
mov
jle
je
cmps
jbe
add
ins
nop
lea
xchg
add
lea
mov
(bad)
jl
pop
xchg
mov
mov
mov
pop
mov
xchg
nop
pushf
cdq
nop
fwait
fwait
mov
xchg
xchg
xchg
jg
xchg
xor
jbe
jns
mov
xchg
test
cmp
jns
jge
jnp
js
jg
jge
jns
cmp
jge
test
xchg
mov
(bad)
nop
jne
xchg
jne
xchg
ja
cwde
jns
sahf
jnp
mov
jle
jp
movs
jl
add
imul
mov
mov
mov
lea
(bad)
jl
(bad)
jg
xchg
test
mov
mov
adc
xchg
xchg
xchg
xchg
(bad)
fwait
xchg
(bad)
fwait
cdq
lea
cdq
xchg
test
xchg
test
jnp
test
xor
jbe
js
cmp
jns
jnp
jp
js
jge
jl
ja
xor
jp
cmp
jle
test
or
lea
lea
mov
test
jg
jg
mov
call
jae
mov
test
add
mov
lea
mov
xchg
adc
mov
nop
jge
xchg
or
fwait
xchg
mov
xchg
test
xchg
xchg
jge
xchg
cmp
jbe
jl
jg
ja
jp
jl
jns
jp
jns
jns
ja
jnp
jnp
jne
jge
jge
js
cmp
jnp
cmp
add
cmp
jns
(bad)
jbe
xchg
ja
xchg
jp
xchg
jge
fwait
add
sbb
ins
jo
outs
ja
jno
mov
test
cmp
test
mov
mov
test
adc
xchg
mov
lea
nop
jns
xchg
jle
cwde
test
lea
xchg
or
xchg
or
mov
test
xor
ja
jl
jp
ja
jp
js
ja
js
jp
jp
jne
jl
jl
ja
jg
jg
jp
cmp
add
xchg
mov
xchg
jns
xchg
jl
xchg
jg
cdq
add
sbb
add
outs
push
outs
jb
jo
mov
test
cmp
add
mov
lea
pop
xchg
test
test
test
mov
mov
mov
(bad)
jbe
xchg
jp
xchg
or
mov
test
mov
or
mov
jl
xchg
test
xor
ja
jg
ja
jne
jnp
js
js
js
js
jnp
ja
jl
jle
jns
jg
jle
jge
add
test
xchg
mov
xchg
test
mov
lea
data16
outs
outs
mov
xchg
xor
cmp
or
add
jnp
test
xchg
mov
mov
je
xchg
js
xchg
jle
xchg
or
mov
or
add
xchg
mov
mov
jns
test
xor
jbe
xor
jae
jg
ja
jbe
jnp
js
jp
jp
jl
jle
jnp
cmp
jg
add
cmp
jg
mov
nop
or
mov
xchg
mov
nop
xchg
pop
mov
mov
xchg
xor
jb
jge
cmp
jl
mov
mov
xchg
cmp
jl
cmp
jns
xchg
xchg
mov
mov
ja
xchg
jl
xchg
or
xchg
add
jge
xchg
mov
mov
xchg
test
jae
jle
mov
xchg
test
test
test
jb
xor
js
js
jge
jnp
jge
jle
cmp
jg
add
add
mov
nop
test
mov
mov
xchg
xchg
pop
mov
xchg
test
xor
jno
jnp
cmp
jl
mov
jle
pop
xchg
cmp
jl
test
test
xchg
xchg
mov
mov
mov
nop
jl
mov
lea
mov
mov
xchg
cmp
jge
jp
mov
mov
mov
mov
jb
xor
jb
jl
mov
mov
mov
mov
jb
xchg
jbe
test
cmp
jge
add
add
add
mov
mov
mov
mov
xchg
xchg
xchg
test
xor
jno
jns
test
mov
mov
jle
xchg
cmp
jle
test
test
jl
xchg
jp
xchg
mov
mov
lea
jge
mov
xchg
jnp
cmp
jns
ja
mov
lea
mov
jae
mov
test
xor
jne
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
or
mov
mov
lea
test
test
jns
xor
jae
jnp
cmp
ja
mov
mov
mov
xchg
jge
xchg
cmp
jle
cmp
jle
test
test
xchg
test
xchg
mov
mov
mov
mov
xchg
jp
cmp
jbe
js
mov
mov
mov
mov
mov
mov
xchg
test
xor
ja
jnp
mov
lea
(bad)
jbe
nop
js
(bad)
jnp
mov
nop
cmp
or
mov
add
mov
lea
(bad)
jle
nop
or
xchg
add
jp
xor
jbe
js
mov
mov
lea
(bad)
jne
xchg
js
xchg
jnp
xchg
jle
xchg
cmp
jge
cmp
jg
test
test
xchg
mov
mov
mov
mov
test
jp
jg
test
test
xchg
mov
lea
nop
jne
(bad)
jae
(bad)
jae
mov
mov
test
xor
ja
cmp
js
jns
mov
xchg
js
xchg
jp
xchg
jge
xchg
cmp
xchg
test
test
xchg
xchg
mov
xchg
jl
xchg
jle
xchg
jg
xchg
jle
xchg
jge
cdq
jnp
mov
jnp
jg
mov
mov
(bad)
jb
nop
jo
xchg
jo
xchg
jb
xchg
jne
xchg
jns
cwde
jl
cdq
jle
cdq
jg
cwde
cmp
sbb
xchg
test
xchg
mov
test
cmp
js
jnp
xchg
mov
mov
nop
jbe
nop
je
(bad)
je
lea
mov
xchg
jbe
cmp
jns
cmp
jp
jns
xchg
jp
xchg
jge
xchg
cmp
jl
test
xchg
test
mov
mov
lea
xchg
jp
xchg
jl
xchg
jl
xchg
jp
cwde
js
fwait
jne
mov
jge
jle
nop
js
xchg
jne
xchg
jno
xchg
outs
jnp
outs
jge
jo
xchg
je
cwde
js
cdq
jnp
call
cmp
sbb
cwde
add
mov
mov
mov
mov
jnp
mov
mov
(bad)
ja
nop
ja
nop
jbe
mov
mov
je
test
test
test
test
cmp
jp
jl
xchg
jge
xchg
jg
xchg
cmp
jnp
xchg
xchg
xchg
mov
mov
lea
nop
js
xchg
js
xchg
jns
xchg
jns
xchg
jbe
cdq
jae
pushf
jo
movs
imul
add
adc
xchg
outs
jle
outs
jg
jo
xchg
je
cwde
js
cdq
jp
cdq
jnp
cdq
jl
cdq
jg
call
add
mov
lea
mov
mov
jnp
mov
mov
(bad)
js
nop
jns
(bad)
ja
lea
mov
xchg
test
test
test
test
cmp
js
jle
xchg
jg
xchg
cmp
jns
mov
mov
mov
mov
mov
nop
mov
lea
lea
nop
ja
xchg
jbe
xchg
ja
xchg
jbe
xchg
jb
cwde
outs
(bad)
pushf
imul
xchg
test
adc
xchg
jno
xchg
jne
xchg
jns
xchg
jnp
xchg
jnp
cwde
jl
cwde
jg
cwde
add
xchg
mov
mov
mov
xchg
mov
mov
mov
(bad)
jnp
mov
mov
mov
test
cmp
js
test
xchg
test
xor
ja
xor
js
mov
mov
mov
mov
mov
nop
mov
jg
mov
lea
(bad)
jbe
xchg
jne
xchg
jbe
xchg
je
xchg
jo
xchg
imul
add
mov
test
adc
ja
xchg
jnp
xchg
jge
xchg
jge
xchg
jle
xchg
cmp
sbb
cwde
add
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
xchg
mov
mov
pop
xchg
lea
mov
mov
mov
nop
mov
jg
mov
mov
lea
(bad)
je
(bad)
jne
(bad)
jb
xchg
outs
xchg
xchg
push
lahf
pop
add
xchg
xchg
jp
xchg
js
xchg
jne
xchg
jne
xchg
jne
lea
lea
mov
mov
xchg
cmp
jg
add
test
mov
(bad)
xchg
or
(bad)
(bad)
jnp
lea
mov
mov
mov
(bad)
jle
mov
mov
jp
cmp
jp
cmp
jp
xchg
test
test
test
xchg
mov
mov
mov
jle
mov
mov
vprotd
xchg
mov
mov
mov
lea
je
mov
lea
(bad)
lea
popf
xchg
sbb
lea
test
mov
mov
mov
mov
xchg
test
test
add
lea
nop
xchg
adc
xchg
mov
lea
mov
mov
mov
(bad)
jg
lea
mov
xchg
jp
cmp
jp
test
test
test
test
xchg
mov
lea
jge
lea
mov
mov
lea
xchg
mov
mov
mov
mov
mov
jne
mov
mov
mov
lea
xchg
bound
pop
(bad)
jp
nop
jp
mov
mov
xchg
jl
add
xchg
xchg
mov
mov
mov
mov
mov
xchg
test
or
xchg
nop
jg
(bad)
jl
mov
mov
mov
mov
mov
pop
mov
xchg
cmp
jnp
cmp
jnp
jl
cmp
jl
test
jge
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
test
jno
xchg
mov
mov
mov
mov
mov
mov
test
cmp
cmp
jge
mov
mov
mov
lea
(bad)
jle
nop
jge
mov
mov
jg
mov
test
or
xchg
(bad)
jl
lea
mov
mov
mov
(bad)
jle
nop
or
add
cmp
jbe
jle
cmp
jle
xchg
mov
lea
mov
xchg
xchg
mov
mov
mov
mov
test
jge
jo
cmp
jne
xor
js
cmp
add
js
nop
js
nop
jnp
xchg
jle
xchg
jle
xchg
jl
xchg
jns
xchg
jp
(bad)
jge
mov
mov
test
adc
xchg
mov
mov
mov
mov
(bad)
jge
nop
or
or
cmp
jg
jg
jne
jg
cmp
jle
test
mov
mov
xchg
add
mov
mov
mov
mov
mov
jne
test
xor
js
jg
jl
ja
jge
add
test
jo
jl
xchg
jns
mov
xor
outs
test
mov
xchg
ja
xchg
js
xchg
jp
xchg
jle
cwde
jle
call
jns
xchg
jnp
(bad)
jge
mov
test
jg
nop
jl
(bad)
jns
mov
mov
mov
mov
nop
jnp
xchg
jg
nop
add
test
add
xor
jne
xor
jns
cmp
jnp
cmp
jle
jg
test
add
mov
mov
mov
je
mov
mov
ja
cmp
jp
jg
jp
jl
jnp
add
test
push
jne
nop
jb
xchg
sub
imul
cwde
jns
call
jp
pushf
ja
cdq
ja
xchg
jp
xchg
jl
lea
test
jge
nop
jp
(bad)
ja
mov
je
mov
jne
xchg
jp
xchg
jle
xchg
add
jns
xor
add
jne
xor
ja
xor
jns
cmp
jl
jle
xchg
test
add
xchg
jae
mov
mov
mov
xchg
test
cmp
jg
jle
js
add
pop
cmps
outs
mov
jb
ins
jns
imul
mov
nop
jbe
xchg
je
cdq
jne
call
jl
lahf
jns
sahf
ja
fwait
ja
xchg
jns
xchg
jl
mov
xchg
jle
xchg
jp
xchg
js
(bad)
jne
mov
mov
mov
mov
xchg
js
xchg
jge
xchg
add
jns
test
jno
xchg
xchg
test
test
jbe
xor
jne
xor
jns
jle
xchg
jl
xchg
xchg
xchg
mov
xchg
or
add
mov
push
cmps
imul
imul
jge
xchg
mov
xchg
jne
cwde
jae
fwait
jne
fwait
ja
popf
jnp
sahf
jnp
lahf
jns
sahf
ja
call
jl
mov
test
jnp
xchg
js
xchg
jbe
nop
jae
lea
mov
mov
mov
xchg
jbe
xchg
jnp
xchg
add
jl
test
xchg
xchg
mov
xchg
test
test
xor
add
jge
xchg
xchg
mov
jg
xchg
mov
mov
test
or
xchg
or
sahf
imul
jb
push
jl
xchg
lea
xchg
jne
cdq
jae
pushf
jne
pushf
js
popf
jl
popf
jl
sahf
jp
pushf
js
cdq
js
xchg
jnp
lea
xchg
add
mov
xchg
lea
mov
mov
(bad)
outs
lea
xchg
jle
xchg
cmp
jp
xchg
mov
jb
mov
xchg
test
xor
jno
xor
jbe
jp
mov
mov
mov
mov
mov
mov
mov
mov
js
mov
mov
mov
outs
push
movs
outs
pop
popf
ins
imul
jl
xchg
mov
xchg
jne
cdq
je
fwait
jbe
fwait
jns
pushf
jge
fwait
jge
fwait
jnp
call
jl
mov
test
jns
xchg
jbe
xchg
jae
xchg
jb
xchg
jo
mov
lea
ins
nop
nop
outs
mov
adc
xchg
cmp
pop
mov
add
xor
jo
xor
jne
jnp
mov
mov
lea
lea
pop
nop
mov
mov
lea
ja
mov
mov
mov
jae
mov
push
ins
jae
imul
xchg
mov
xchg
jbe
xchg
jne
call
jle
cwde
jle
cwde
jge
xchg
jge
xchg
jl
(bad)
jle
mov
add
adc
xchg
jno
xchg
outs
xchg
(bad)
ins
xchg
mov
(bad)
imul
mov
adc
xchg
test
jns
xchg
mov
xchg
jo
xchg
xor
jo
sub
jo
xor
jne
jnp
mov
jle
pop
xchg
sub
outs
xchg
mov
mov
lea
mov
lea
lea
mov
jne
mov
imul
cmp
jp
lea
xchg
ja
xchg
jbe
xchg
jns
xchg
jl
xchg
jg
xchg
xor
jns
jg
nop
jle
mov
test
add
adc
jo
xchg
outs
xchg
nop
imul
(bad)
xchg
outs
mov
test
jg
cmp
jge
test
xchg
mov
xchg
xchg
xchg
sub
outs
jl
outs
jl
jo
xor
je
jge
mov
jge
mov
nop
xor
jno
sub
outs
xchg
mov
mov
lea
ja
mov
pop
xchg
mov
push
pushf
je
xchg
jno
xchg
outs
jne
ins
jnp
imul
nop
jns
xchg
js
xchg
jp
xchg
jge
xchg
sub
js
cmp
or
jle
nop
jns
xchg
jne
xchg
jb
xchg
jo
xchg
jo
xchg
outs
xchg
nop
ins
xchg
nop
ins
xchg
xchg
ins
(bad)
xchg
outs
lea
xchg
sbb
xchg
xchg
jp
test
test
xchg
sub
outs
jl
outs
jnp
jno
xor
jne
jg
mov
lea
(bad)
jg
xchg
xor
jno
xchg
mov
mov
lea
ja
(bad)
jnp
xchg
or
mov
cwde
je
xchg
jno
xchg
jo
mov
test
push
jge
mov
mov
jnp
nop
jl
mov
mov
mov
mov
cmp
jle
jns
mov
mov
mov
(bad)
jo
nop
outs
xchg
(bad)
ins
xchg
(bad)
ins
xchg
xchg
outs
(bad)
xchg
jno
cwde
jae
call
jle
sahf
add
jg
test
xchg
jns
test
xchg
xor
jno
test
test
test
xor
js
jg
lea
(bad)
jg
xchg
xor
jb
test
mov
mov
mov
lea
(bad)
jnp
xchg
or
add
xchg
jae
nop
jno
(bad)
jno
mov
test
sub
ins
lea
lea
mov
xchg
xchg
jg
cmp
jg
jbe
mov
mov
mov
mov
mov
mov
nop
outs
(bad)
xchg
jae
xchg
jne
call
jg
sahf
add
cwde
xchg
test
test
jno
test
test
test
jbe
test
cmp
jp
cmp
js
jg
xchg
xor
jne
xor
xchg
xchg
mov
jbe
lea
(bad)
jp
xchg
jg
xchg
add
add
(bad)
jb
lea
mov
mov
xchg
test
test
test
test
sub
jno
test
mov
mov
jbe
xchg
test
add
jnp
xchg
xchg
xchg
jae
mov
mov
lea
(bad)
jae
xchg
jbe
xchg
ja
cwde
jnp
cdq
jle
call
test
xchg
test
jne
mov
xchg
xchg
xchg
xchg
xchg
cmp
jnp
cmp
pop
xchg
xor
je
test
xchg
je
mov
mov
(bad)
ja
nop
jnp
xchg
jge
xchg
jge
xchg
jg
jo
mov
mov
lea
jne
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
cmp
cmp
jnp
cmp
js
xchg
mov
mov
mov
mov
xchg
jns
xchg
jns
xchg
jl
xchg
or
mov
test
or
or
mov
mov
mov
test
cmp
jge
cmp
js
test
test
xchg
je
xchg
je
mov
lea
jbe
(bad)
jbe
(bad)
jne
(bad)
jne
jno
mov
mov
jbe
mov
mov
jl
mov
(bad)
jl
nop
js
lea
lea
mov
nop
jns
(bad)
jns
lea
mov
mov
cmp
jg
jge
cmp
cmp
jnp
mov
mov
lea
jge
xchg
jge
xchg
jg
xchg
or
mov
xchg
mov
or
mov
jg
mov
xchg
cmp
jp
test
test
xchg
xchg
xchg
je
xchg
mov
mov
mov
mov
mov
mov
mov
jae
mov
mov
mov
(bad)
jge
pop
xchg
or
lea
mov
xchg
test
xchg
jge
test
cmp
jge
add
xchg
xchg
mov
mov
mov
mov
test
jg
lea
lea
lea
xchg
or
xchg
xchg
xchg
xchg
mov
mov
mov
jb
mov
mov
mov
mov
xchg
xchg
test
ja
xchg
mov
mov
nop
add
mov
(bad)
cdq
or
mov
xchg
test
mov
xchg
xchg
xchg
xchg
xchg
test
xchg
mov
mov
xchg
xchg
mov
mov
mov
mov
nop
xchg
mov
mov
jg
xchg
mov
xchg
mov
mov
mov
mov
mov
xchg
mov
mov
mov
xchg
test
test
adc
jne
jge
mov
mov
xchg
xchg
mov
or
lea
mov
xchg
mov
mov
mov
mov
mov
mov
jl
mov
lea
mov
mov
lea
mov
xchg
mov
mov
mov
test
xchg
jnp
mov
lea
mov
jg
mov
mov
xchg
mov
mov
mov
mov
mov
xchg
mov
mov
mov
test
sbb
push
jo
dec
add
mov
pop
xchg
mov
mov
test
or
mov
xchg
mov
mov
lea
mov
mov
lea
nop
jp
xchg
jp
xchg
jnp
xchg
jnp
xchg
jle
(bad)
jg
lea
mov
mov
xchg
jge
mov
mov
mov
mov
nop
jns
xchg
jge
nop
adc
pop
(bad)
jge
mov
jp
mov
mov
mov
xchg
xchg
xchg
xchg
test
pop
jns
push
jo
dec
add
mov
xchg
mov
xchg
xchg
popf
adc
mov
xchg
jl
xchg
jnp
mov
jge
cmp
jg
jnp
nop
js
xchg
jns
xchg
ja
xchg
ja
xchg
ja
cwde
ja
xchg
js
xchg
jnp
xchg
jl
(bad)
jle
(bad)
jg
mov
mov
mov
xchg
mov
xchg
xchg
jns
xchg
jp
xchg
jle
xchg
adc
xchg
adc
xchg
lea
mov
mov
mov
xchg
xchg
xchg
imul
jb
dec
add
xchg
xchg
mov
xchg
fwait
mov
test
adc
mov
xchg
jl
xchg
jnp
(bad)
jl
mov
xchg
add
adc
xchg
jne
cwde
je
call
js
xchg
jns
nop
jnp
mov
mov
mov
mov
test
mov
xchg
xchg
jp
xchg
jl
xchg
jg
xchg
adc
xchg
mov
adc
xchg
mov
js
test
jo
test
imul
jne
dec
add
xchg
xchg
xchg
xchg
fwait
xchg
adc
xchg
fwait
jle
fwait
jnp
fwait
jns
cwde
js
xchg
jp
xchg
jp
xchg
jnp
mov
mov
jg
xchg
jns
xchg
ja
xchg
je
xchg
jae
cdq
jb
call
jbe
xchg
jbe
(bad)
jns
lea
mov
xchg
mov
test
jge
xchg
jge
xchg
jl
xchg
jl
xchg
jle
xchg
sbb
xchg
mov
adc
mov
test
jns
xor
outs
mov
test
jp
push
ja
dec
add
cwde
xchg
or
xchg
cdq
test
adc
xchg
call
jbe
xchg
je
xchg
ja
xchg
ja
xchg
jns
nop
jl
mov
test
jnp
xchg
ja
xchg
je
xchg
jb
cwde
jb
cdq
jae
xchg
jae
xchg
je
nop
je
mov
mov
test
add
xchg
or
nop
add
mov
xchg
jg
xchg
sbb
xchg
mov
test
adc
mov
xchg
test
test
test
jle
pop
jl
push
jnp
dec
add
test
or
xchg
cwde
sbb
cwde
cwde
jl
cwde
jl
cdq
js
cdq
je
cdq
jb
xchg
jno
xchg
jae
xchg
jae
xchg
jne
xchg
jns
(bad)
jge
mov
test
jns
xchg
jne
xchg
jae
xchg
jb
xchg
jae
xchg
jae
xchg
jae
mov
mov
test
cmp
mov
mov
xchg
test
add
nop
xchg
adc
xchg
mov
xchg
adc
mov
xchg
test
cmp
outs
cmp
jg
add
xchg
mov
mov
or
(bad)
xchg
jge
xchg
jge
xchg
jge
xchg
jnp
xchg
jnp
xchg
jp
xchg
jns
cwde
jne
cwde
jno
cwde
outs
xchg
xchg
ins
xchg
xchg
outs
(bad)
cwde
outs
lea
mov
mov
(bad)
jl
(bad)
js
xchg
jbe
xchg
je
xchg
jne
xchg
je
(bad)
jae
mov
test
xor
jl
jp
movs
jns
mov
mov
xchg
xchg
add
mov
xchg
pop
mov
test
adc
xchg
xor
ja
jle
jae
jns
jle
ins
cmp
sub
or
jg
cwde
jl
xchg
js
xchg
js
xchg
jns
xchg
jp
xchg
jp
xchg
jns
xchg
jns
xchg
jns
xchg
ja
cwde
jae
cwde
outs
xchg
cwde
imul
xchg
call
jno
xchg
jbe
xchg
jp
mov
test
jge
nop
jp
xchg
js
xchg
js
nop
ja
lea
xchg
jne
jle
test
and
fwait
jae
xchg
jae
mov
mov
test
add
mov
xchg
or
mov
test
xor
jae
jl
je
ja
jge
outs
jg
ins
jg
push
test
mov
nop
pop
add
xchg
jp
xchg
ja
xchg
je
xchg
je
xchg
jne
xchg
jbe
xchg
ja
xchg
ja
xchg
js
xchg
js
xchg
jbe
cwde
jno
cdq
ins
xchg
cdq
push
cwde
addr16
cdq
addr16
pushf
addr16
sahf
imul
mov
mov
mov
nop
jl
nop
jl
mov
mov
test
jg
stos
jl
test
jge
jne
movs
jae
mov
lea
nop
mov
xchg
or
mov
xchg
jg
xchg
cmp
jg
jl
xchg
xor
jo
jnp
jbe
jne
jge
jno
jl
add
mov
(bad)
arpl
jp
(bad)
jbe
nop
je
nop
jb
xchg
jb
xchg
jae
(bad)
je
nop
jne
xchg
jbe
xchg
ja
xchg
ja
xchg
jne
cdq
jo
cdq
ins
xchg
call
gs
sahf
fs
mov
mov
mov
mov
or
call
test
jg
test
jp
jns
movs
jbe
movs
je
mov
mov
mov
test
add
add
mov
mov
js
xor
outs
cmp
jl
jle
jno
jge
js
js
cmp
jb
xchg
mov
jbe
mov
mov
mov
mov
(bad)
jno
lea
mov
jne
xchg
jbe
xchg
ja
xchg
jne
cdq
jo
call
xchg
call
data16
mov
lea
vpmacssdqh
sbb
mov
jnp
jge
movs
jp
mov
xchg
mov
mov
lea
xchg
add
xchg
xchg
jns
xchg
test
xor
ins
xchg
test
jge
cmp
xor
jp
test
mov
mov
add
xor
jno
mov
mov
mov
mov
lea
jne
xchg
jbe
xchg
ja
xchg
jne
cwde
jb
cdq
outs
xchg
call
xchg
sahf
gs
lahf
lea
sahf
outs
mov
(bad)
pop
mov
xchg
sbb
cmp
sbb
pushf
jns
call
jnp
nop
jl
lea
jle
xchg
test
xchg
cmp
jl
test
cmp
jne
xor
je
jl
mov
mov
mov
jle
test
jg
jns
xchg
mov
nop
jge
xchg
jl
add
jge
movs
xor
jae
mov
mov
jbe
lea
(bad)
js
xchg
jns
xchg
ja
xchg
je
xchg
jno
cwde
outs
cdq
xchg
ins
cdq
xchg
imul
mov
nop
xchg
jl
mov
mov
xchg
test
jg
cmp
sbb
jl
cdq
jl
cwde
jnp
xchg
jl
xchg
jge
xchg
jge
mov
jge
mov
jp
xchg
test
cmp
jbe
xor
jae
jg
mov
mov
mov
(bad)
ja
lea
mov
mov
test
test
test
mov
jb
jnp
movs
xor
lahf
xchg
xchg
mov
mov
mov
(bad)
jl
xchg
jnp
xchg
js
xchg
jbe
xchg
je
xchg
jno
xchg
outs
cwde
xchg
ins
xchg
xchg
outs
xchg
xchg
jb
xchg
je
xchg
js
(bad)
jge
mov
xchg
xchg
test
sbb
cwde
add
xchg
xchg
xchg
mov
or
xor
jbe
jg
cmp
jb
jp
mov
(bad)
je
xchg
je
xchg
jne
nop
jns
(bad)
jge
lea
xchg
mov
mov
mov
je
jbe
cmps
jl
mov
jnp
cmp
jge
xchg
mov
mov
mov
lea
mov
mov
mov
(bad)
jb
nop
jne
nop
ja
nop
js
mov
mov
mov
test
xchg
test
xchg
add
xchg
xchg
xchg
xchg
or
xor
jne
jl
cmp
jbe
mov
(bad)
je
xchg
jo
xchg
jo
xchg
jb
xchg
ja
xchg
jp
mov
mov
mov
mov
mov
jne
imul
jl
jnp
mov
sbb
fwait
add
sbb
xchg
mov
test
jns
xchg
mov
mov
jl
mov
xchg
xchg
or
lea
xchg
mov
add
nop
add
mov
mov
test
add
jle
cmp
je
mov
mov
xchg
outs
js
ins
ja
ins
jne
outs
je
je
xchg
ja
mov
mov
xchg
mov
lea
mov
jg
jae
movs
ja
mov
test
xchg
test
adc
xchg
jle
xchg
jge
xchg
cmp
adc
xchg
test
test
add
mov
mov
xchg
add
pop
mov
mov
or
xchg
add
js
jbe
xchg
mov
xchg
ins
js
ins
jp
push
xchg
imul
js
jae
mov
mov
xchg
xchg
mov
nop
add
pop
xor
mov
mov
mov
xchg
test
test
adc
xchg
jl
xchg
add
mov
mov
mov
mov
mov
nop
add
mov
xchg
test
mov
test
jle
test
xchg
mov
(bad)
imul
jp
imul
jp
push
xchg
jo
mov
mov
test
xchg
xchg
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
xchg
or
mov
mov
xchg
add
test
test
xchg
mov
mov
imul
jg
fs
fs
data16
push
xchg
ins
jns
jo
xchg
js
test
test
xchg
nop
add
bound
ins
(bad)
mov
lea
mov
test
xchg
jbe
xchg
jne
xchg
jb
xchg
jo
xchg
jb
nop
jae
nop
jbe
(bad)
jp
lea
mov
mov
mov
mov
mov
test
or
mov
mov
test
add
add
mov
mov
nop
push
xchg
sbb
data16
cdq
gs
imul
ja
jb
xor
jp
cmp
xchg
nop
pop
pop
mov
xchg
lods
push
mov
(bad)
cdq
je
cwde
jne
xchg
js
xchg
jp
xchg
jp
xchg
js
xchg
jbe
nop
jne
(bad)
jb
(bad)
outs
mov
mov
(bad)
mov
mov
mov
add
mov
mov
mov
mov
mov
add
test
test
test
test
test
sbb
cdq
fs
push
mov
test
cmp
sub
xchg
add
cwde
lods
imul
xchg
cdq
je
cwde
jbe
xchg
jns
xchg
jnp
xchg
jnp
xchg
jns
xchg
ja
mov
mov
lea
mov
mov
mov
jns
mov
xchg
test
test
xchg
xchg
or
mov
mov
mov
xchg
mov
mov
mov
mov
lea
lea
nop
outs
test
test
and
popf
fs
gs
imul
jbe
jne
cmp
sub
imul
mov
cwde
mov
call
cmps
ins
call
cdq
jbe
cwde
js
xchg
jnp
xchg
jge
xchg
jge
nop
jnp
nop
jns
lea
lea
mov
mov
mov
mov
mov
test
add
xchg
xchg
add
test
test
mov
mov
xchg
test
mov
mov
lea
(bad)
jae
nop
jno
xchg
outs
test
xchg
test
and
xchg
ins
jge
outs
js
jb
cmp
test
ins
jg
ins
test
mov
popf
scas
imul
call
cdq
jp
xchg
jle
xchg
add
jg
jl
mov
mov
mov
xchg
je
xchg
xchg
test
add
xchg
xchg
mov
mov
mov
mov
xchg
test
test
test
xchg
mov
mov
xchg
outs
mov
test
xchg
xchg
and
xchg
outs
jl
jb
test
jg
outs
jl
outs
jnp
ins
jnp
ins
jle
outs
sub
imul
pushf
mov
xchg
fwait
jl
cdq
jle
xchg
add
jl
jg
mov
mov
jns
test
test
test
test
add
xchg
mov
jnp
test
xchg
jle
xchg
xchg
test
add
jp
xor
je
mov
mov
xchg
ins
mov
xchg
push
call
mov
mov
sbb
mov
cmp
sub
ins
jp
outs
jl
jb
scas
je
add
jne
stos
js
cmps
jns
mov
xchg
fwait
jg
cwde
or
jnp
test
cmp
jge
cmp
jle
jns
cmp
jnp
cmp
add
xchg
add
test
test
add
add
jg
test
test
xchg
mov
mov
xchg
xchg
mov
mov
test
or
cmp
mov
xchg
outs
jns
jno
cmps
jbe
mov
xchg
xchg
lods
jp
stos
jge
test
xchg
movs
jle
lahf
jle
pushf
adc
xchg
mov
mov
xchg
cmp
jg
jge
cmp
test
test
add
test
test
cmp
jnp
cmp
jnp
cmp
jge
test
xchg
xchg
xchg
test
mov
mov
xchg
xchg
jbe
lea
test
xor
js
jo
xchg
jno
lahf
jne
test
add
test
xchg
movs
test
adc
mov
or
mov
xchg
add
jge
cmp
add
test
add
xor
mov
xchg
test
jns
cmp
jbe
xor
ja
cmp
jl
test
test
test
adc
xchg
outs
mov
mov
mov
test
jg
jne
mov
nop
jae
xchg
jne
mov
jp
xchg
cmps
lea
mov
xchg
xchg
mov
mov
mov
mov
mov
mov
test
cmp
jle
jle
cmp
add
xchg
mov
mov
mov
test
xor
jne
jle
test
test
add
cmp
xor
jb
lea
(bad)
jae
nop
jae
xchg
jb
xchg
jno
xchg
jae
xchg
jae
cwde
jbe
xchg
ja
xchg
jp
xchg
jnp
mov
add
mov
nop
jbe
xchg
js
lahf
jl
cmps
test
mov
jle
xchg
and
cwde
mov
xchg
xchg
mov
mov
mov
mov
mov
mov
test
cmp
jl
cmp
jg
test
test
test
xor
jb
jge
mov
js
xor
cmp
jle
cmp
jle
cmp
jg
jle
jnp
jle
ja
xor
je
mov
mov
mov
(bad)
jne
xchg
je
xchg
jbe
xchg
jbe
xchg
ja
xchg
jns
xchg
jnp
nop
jl
mov
add
mov
(bad)
jns
xchg
jl
popf
jg
mov
jne
jnp
cdq
jle
xchg
sbb
xchg
mov
test
test
xchg
xchg
xchg
xchg
xchg
test
cmp
jns
cmp
jnp
cmp
test
mov
mov
mov
mov
js
xor
outs
cmp
jge
cmp
outs
cmp
jge
cmp
jp
jp
ja
jg
js
ja
xchg
mov
mov
(bad)
jbe
xchg
js
xchg
ja
xchg
js
xchg
jns
xchg
jnp
mov
jle
add
xchg
lea
jg
call
(bad)
jb
jnp
fwait
jge
xchg
jle
xchg
jle
pop
mov
test
cmp
jp
cmp
jbe
test
test
jb
test
xor
jp
jbe
xor
js
xor
je
xor
jno
xor
jne
jl
test
xor
outs
cmp
jnp
cmp
jnp
cmp
jl
cmp
js
jl
jns
je
js
cmp
js
mov
mov
mov
mov
(bad)
ja
(bad)
js
mov
mov
test
jg
jg
test
xchg
mov
nop
xor
jno
mov
jg
fwait
jle
xchg
jle
xchg
jge
(bad)
jle
mov
mov
cmp
jle
cmp
jbe
xor
jb
test
test
xor
jb
jg
jp
jb
xor
add
test
xor
je
xor
ja
js
xor
ins
jg
imul
cmp
jp
cmp
jl
cmp
ja
jle
jns
jb
jnp
jg
jb
jns
cmp
jns
mov
mov
mov
mov
mov
mov
xchg
cmp
cmp
jl
xchg
xor
xchg
test
mov
lea
xchg
mov
mov
xchg
test
test
add
sub
jl
outs
jl
ins
jnp
outs
jge
jno
jg
add
test
xchg
xchg
jbe
cmp
js
jnp
jle
jl
outs
jge
ins
jle
ins
jge
ins
jge
imul
jle
jb
jge
cmp
js
xor
jno
jl
jg
jo
jp
cmp
jp
xchg
mov
xchg
mov
xchg
test
cmp
jg
cmp
jle
lea
xchg
test
mov
mov
mov
xchg
add
test
add
jg
test
add
sub
imul
jge
ins
jle
jo
jle
jg
jae
xor
je
mov
mov
mov
xchg
cmp
jns
ja
jp
jns
outs
jp
outs
jp
outs
jp
outs
jnp
jo
jle
cmp
jnp
xor
jae
jle
cmp
jnp
test
xchg
xchg
test
test
xor
jp
jg
cmp
js
jle
mov
xchg
xchg
jno
xchg
xchg
xchg
ja
mov
jg
add
or
jg
cmp
jg
cmp
xor
outs
add
jp
cmp
jp
jle
imul
jg
jb
xor
je
xchg
mov
mov
lea
jl
xchg
xor
jbe
jno
je
jbe
jae
js
jns
je
jg
add
jg
test
xor
jb
jg
xchg
test
xchg
xchg
jge
cmp
ja
cmp
jp
jnp
cmp
js
jg
nop
cmp
ja
mov
test
sub
popa
add
mov
mov
xchg
add
jbe
jge
cmp
jle
cmp
jge
cmp
jns
jg
imul
jle
jae
xor
ja
mov
mov
(bad)
jle
nop
jg
mov
mov
test
jle
jae
jb
jne
jae
jno
ja
js
jbe
jp
cmp
xchg
mov
xor
jne
jg
xchg
test
cmp
cmp
js
xor
ja
cmp
js
test
mov
mov
test
and
pop
add
xchg
xchg
test
test
cmp
jp
cmp
jb
jnp
cmp
jp
xor
jbe
xor
jp
jl
jae
xor
jnp
mov
xchg
xor
jb
js
mov
xor
ins
jno
outs
je
jo
jnp
jl
jbe
cmp
or
jle
test
cmp
jns
cmp
js
xor
jp
jp
jge
test
xchg
test
test
xchg
test
xchg
mov
mov
test
jge
cmps
je
add
add
adc
add
push
icebp
icebp
fist
push
or
nop
gs
dec
xor
push
jne
fwait
dec
push
aaa
mov
push
xor
xor
hlt
sub
(bad)
test
sub
inc
rcr
les
add
stos
fdivrp
xchg
lods
in
sbb
mov
push
aaa
dec
jne
sbb
pop
pop
xor
push
xlat
pop
repnz
pop
int
sub
jns
cld
inc
adc
fisttp
jle
call
jmp
mov
out
xchg
in
ret
adc
push
jnp
cld
pop
dec
inc
enter
imul
aas
fmul
mov
sub
push
or
ficom
cwde
sbb
sub
jns
mov
jl
adc
out
call
int
rol
mov
ja
adc
push
movs
or
dec
jns
push
dec
outs
add
cmp
mov
add
mov
sub
xor
mov
adc
cwde
or
mov
push
retf
adc
add
ret
fnstsw
sbb
scas
(bad)
xlat
aam
or
les
adc
pop
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
pusha
add
(bad)
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
imul
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
inc
dec
adc
dec
test
jno
sub
push
jle
inc
dec
mov
call
scas
shl
test
test
jo
inc
and
outs
xor
in
or
xor
pop
stos
pop
dec
pop
(bad)
jae
shl
aam
xchg
pushf
cwde
out
jo
inc
in
lods
add
mov
adc
retf
push
xor
in
imul
out
fwait
mov
es
xchg
add
sub
mov
mov
inc
push
sub
xor
enter
jo
retf
xor
push
loopne
sub
pop
jae
stos
mov
xor
fwait
push
dec
adc
movs
cmc
(bad)
arpl
imul
test
rcl
xchg
dec
xor
push
lods
adc
sub
dec
cmp
scas
js
int
push
in
aam
ss
mov
sub
mov
inc
ins
xor
mov
jae
test
mov
loope
fdivp
pop
fwait
dec
repz
mov
mov
fs
cmps
cmp
lods
popa
mov
mov
xchg
xor
cdq
cmps
xchg
dec
push
and
test
push
pop
cwde
dec
lahf
push
pop
push
ficom
in
fcom
rol
jecxz
pop
cmp
cmps
aaa
int
cmps
mov
addr16
gs
sbb
ins
jno
or
sbb
push
xor
dec
ret
sub
nop
push
xor
push
into
or
je
jbe
cmps
add
mov
aad
stc
jp
mov
icebp
fs
xor
mov
adc
cmps
mov
lods
jl
cwde
rol
mov
fld
pusha
fist
push
lods
enter
xchg
mov
sub
inc
fisub
call
scas
add
xchg
mov
inc
push
in
stos
xchg
push
mov
out
mov
aaa
cmp
retf
sbb
mov
xchg
adc
and
pop
sub
cmps
jmp
xchg
cmps
cmp
mov
shl
fstp
movs
in
je
mov
inc
and
enter
mov
sbb
mov
mov
je
stos
in
jno
imul
sbb
ja
push
inc
retf
bound
mov
clc
in
imul
dec
loope
in
push
mov
xchg
cmp
inc
scas
jmp
sbb
xchg
ds
push
push
inc
push
push
mov
push
sub
or
imul
push
movs
outs
(bad)
in
popf
lea
aad
ds
xchg
mov
sub
hlt
jb
cdq
pop
call
cmp
sub
clc
mov
inc
(bad)
pop
fldln2
sbb
xor
(bad)
pop
daa
sbb
mov
mov
jns
sub
cwde
push
sub
xchg
mov
adc
xchg
xchg
scas
pop
sbb
inc
icebp
outs
ins
(bad)
aam
xchg
mov
pop
adc
imul
les
(bad)
dec
cmp
dec
es
push
mov
arpl
mov
or
call
mov
mov
popa
add
outs
add
scas
push
push
movs
mov
retf
ficomp
outs
adc
test
and
mov
sahf
xchg
movs
pop
cmp
aad
pop
xchg
inc
test
adc
xchg
cmp
jne
fcmovnbe
int
mov
mov
sti
ss
xor
add
jp
stos
div
test
scas
add
or
cs
inc
sbb
cwde
aas
retf
push
in
leave
test
mov
or
aam
and
icebp
scas
retf
pop
dec
movs
mov
loop
ret
or
sub
movs
fwait
mov
loopne
mov
mov
xchg
movs
in
cs
sbb
pushf
pop
add
mov
push
stos
bound
jmp
sbb
mov
jp
sub
xlat
sbb
call
shl
push
jb
and
rol
pop
push
pushf
add
movs
gs
mov
mov
imul
(bad)
bound
adc
cmps
bound
mov
jge
in
sub
push
push
jo
and
dec
xlat
xor
add
push
fist
mov
mov
adc
sbb
loop
ret
aad
loope
push
jb
pop
retf
retf
test
or
dec
in
push
pop
popf
cmc
call
fs
ins
mov
mov
cmp
in
pop
mov
mov
pushf
dec
retf
repz
test
mov
icebp
sub
pop
sbb
add
mov
sub
enter
sub
data16
enter
loope
add
fsubp
add
add
add
add
add
add
add
add
scas
add
add
add
add
push
add
les
add
jae
jl
je
addr16
pusha
cmp
jp
mov
xchg
je
xchg
mov
xchg
jle
xchg
jnp
lea
test
add
cdq
jnp
popf
jg
mov
lea
xchg
jg
stos
jbe
movs
outs
mov
jle
imul
or
cdq
jo
popf
js
lahf
ja
lahf
ja
lahf
jb
cmps
imul
jg
arpl
popa
je
data16
jb
movs
xor
outs
test
jae
popf
jge
cdq
xchg
xchg
jb
xchg
imul
mov
cmps
imul
outs
mov
js
xchg
sub
gs
jbe
test
jne
push
movs
ins
jns
jne
mov
je
mov
mov
xchg
test
test
mov
xchg
add
jnp
mov
mov
test
sub
outs
call
imul
jp
arpl
pop
mov
(bad)
pop
outs
xchg
pusha
jnp
pop
mov
mov
push
mov
pop
mov
add
jnp
je
data16
pusha
xor
ja
test
xor
jo
test
mov
test
jge
xchg
jp
mov
cmp
or
pushf
jne
mov
mov
mov
or
test
jl
imul
mov
fwait
cwde
jne
pushf
jbe
popf
js
sahf
jne
cmps
ins
mov
stos
ins
jl
outs
jne
imul
jo
xchg
mov
cwde
jno
fwait
jne
pushf
sbb
jg
cwde
jbe
xchg
outs
xchg
lea
jns
pushf
outs
fs
arpl
ins
mov
ins
cwde
test
mov
test
test
jge
pushf
js
movs
jno
test
jp
ja
lea
ja
mov
lea
mov
test
xor
test
jnp
lea
mov
mov
test
xor
call
addr16
fs
fs
cmp
jb
xchg
mov
xchg
fs
popa
mov
popf
fwait
pop
sahf
call
xchg
add
js
jne
data16
pusha
jge
pusha
jle
xor
outs
add
test
sub
jp
js
cmp
jp
jne
popf
jno
sahf
outs
jl
je
lahf
jp
fwait
mov
xchg
test
mov
jg
push
jle
jns
addr16
test
mov
call
xchg
jne
fwait
jns
popf
ja
movs
jno
lods
jae
scas
jae
scas
js
scas
jns
lods
jae
movs
jbe
lahf
jg
mov
ins
cmps
cwde
jno
call
(bad)
(bad)
xchg
xchg
test
ja
lea
js
xchg
ins
imul
fwait
jbe
xchg
sub
jae
mov
push
jge
mov
jns
jne
fwait
jp
(bad)
jp
jl
lea
(bad)
imul
add
cmp
jg
xchg
xchg
jl
mov
xchg
xor
jno
ja
xchg
jno
cwde
ins
ja
imul
add
je
test
lea
xchg
addr16
test
xchg
call
ins
(bad)
pushf
outs
and
bound
arpl
fs
pusha
jl
popa
jnp
push
outs
cmp
imul
mov
xchg
jg
xchg
jge
xchg
je
lahf
outs
jne
ins
je
jo
call
mov
mov
mov
mov
sub
push
jae
je
addr16
xor
jbe
fwait
sub
jno
nop
je
xchg
js
cdq
ja
mov
sub
scas
xor
jb
xchg
nop
ins
mov
jae
cwde
jns
xchg
sbb
mov
or
(bad)
imul
push
arpl
imul
push
mov
xchg
jo
nop
imul
nop
test
ja
jl
fwait
jp
call
jl
jnp
(bad)
je
mov
xor
jp
jl
test
jge
mov
mov
mov
test
xor
jo
jne
xchg
jb
nop
outs
jp
outs
jp
outs
cmp
xor
lea
xchg
imul
mov
mov
xchg
mov
ja
jnp
bound
jl
bound
push
jo
ja
cmp
jp
xchg
jnp
xchg
jne
mov
mov
xchg
xor
ins
fwait
jbe
mov
outs
cwde
outs
jb
jno
mov
add
js
xor
je
jbe
jo
imul
outs
gs
data16
outs
fs
jp
mov
jb
nop
ja
xchg
jbe
sahf
je
cmps
js
lods
jle
lods
xchg
xchg
xor
jb
mov
xchg
outs
fwait
xchg
outs
lahf
cdq
je
xchg
jp
xchg
sbb
xchg
mov
add
ja
popa
outs
xchg
mov
mov
test
jnp
outs
jl
push
cwde
push
mov
test
cmp
jp
jg
xchg
jnp
xchg
cmp
jnp
jne
jnp
xor
ja
xchg
test
jg
test
mov
mov
test
sub
jo
jp
mov
xchg
jl
xchg
mov
test
mov
lea
xchg
ins
ins
xchg
ins
js
jb
cdq
jo
cwde
jae
xchg
jns
pushf
jge
pushf
jge
cmps
jl
mov
ja
jle
bound
bound
gs
ins
jl
jp
outs
xor
js
nop
ja
xchg
jno
mov
mov
jo
sub
imul
outs
outs
xchg
cmp
jnp
jns
js
jns
jne
jb
ja
jb
outs
push
ins
push
imul
mov
cwde
jae
mov
jno
mov
(bad)
jne
call
jg
stos
mov
xor
je
lea
xchg
jo
xchg
jno
cwde
je
xchg
jns
(bad)
jg
lea
test
jge
nop
sub
gs
pusha
je
arpl
imul
outs
jns
imul
outs
popf
outs
jno
ins
je
imul
test
mov
(bad)
jge
mov
xchg
cmp
xor
jno
xchg
xchg
jg
add
jne
mov
mov
mov
test
test
cmp
jl
add
mov
lea
xchg
jo
xchg
outs
je
jne
cwde
jae
xchg
jbe
xchg
jge
pushf
xor
pop
mov
ja
jg
cmp
jp
jl
jae
jae
js
xchg
nop
js
nop
jbe
xchg
outs
or
lea
mov
xchg
and
(bad)
jae
test
jp
jae
jne
jb
jp
jb
je
jno
je
jo
jae
push
fs
bound
arpl
push
ins
ja
imul
sahf
je
mov
jbe
mov
xchg
jae
lahf
js
cmps
jg
test
jns
xor
ja
mov
xchg
je
xchg
je
xchg
je
xchg
ja
mov
mov
mov
jp
jp
pushf
jns
xchg
jl
lea
test
js
fs
ins
jno
jp
outs
mov
xchg
outs
mov
push
ins
ins
mov
jnp
jns
lea
xchg
test
jg
mov
mov
test
jle
ins
add
jb
xchg
cmp
jae
js
mov
lea
xchg
imul
xchg
or
(bad)
jl
lea
jbe
(bad)
ja
xchg
jae
cwde
jno
xchg
jne
cwde
je
xchg
ja
cwde
jge
sahf
jg
lahf
and
mov
jbe
jle
push
xor
jp
jbe
jnp
lea
xchg
jp
xchg
ja
xchg
outs
or
xchg
jo
mov
lea
xchg
and
imul
push
js
jno
push
jae
ins
jo
outs
outs
ins
outs
je
imul
jb
popa
outs
push
jo
push
xchg
jb
pushf
jns
call
xchg
je
pushf
js
cmps
jge
test
xchg
jns
cmp
jnp
nop
ja
(bad)
jbe
xchg
jb
(bad)
jae
mov
je
xchg
jg
mov
ins
call
jae
jnp
addr16
outs
jne
jge
imul
movs
je
cmps
jno
mov
jae
jnp
(bad)
ja
mov
xchg
xor
js
sub
imul
jge
je
xor
jge
ins
xor
ins
mov
xchg
ins
xchg
data16
imul
adc
xchg
cmp
jne
jp
xchg
jnp
cdq
ja
pushf
je
pushf
jbe
pushf
jne
cdq
ja
fwait
jnp
mov
popa
lods
adc
jb
jp
ins
add
add
xchg
jg
call
jno
xchg
jo
xchg
ins
mov
xchg
xchg
push
mov
sub
addr16
popa
jbe
pusha
jo
arpl
push
jo
outs
outs
imul
push
bound
push
outs
je
jb
imul
jbe
jno
xchg
jbe
xchg
cmp
jne
xchg
jbe
call
or
jnp
jl
xchg
cmp
ja
mov
outs
mov
outs
cmps
sub
imul
mov
pusha
xchg
jb
mov
jl
push
imul
mov
jae
lahf
je
mov
pop
mov
ins
nop
jle
mov
mov
xchg
xor
jb
xor
imul
xchg
jge
jb
jg
jns
ins
jl
push
imul
arpl
jne
ins
sbb
xchg
jl
xchg
mov
xchg
test
jg
xchg
jg
fwait
jl
lahf
js
mov
js
js
sahf
jns
mov
popa
stos
jge
mov
add
imul
jo
xchg
mov
mov
pushf
cmp
adc
xchg
jno
xchg
jne
xchg
jo
xchg
imul
jp
jno
test
jge
pop
jns
pop
jb
pop
imul
jae
outs
jo
jno
imul
outs
ins
addr16
outs
outs
ins
ja
jb
jno
xor
jae
mov
mov
mov
mov
test
and
sahf
jle
cwde
xchg
jo
mov
test
sub
push
jns
mov
arpl
pusha
mov
jge
outs
ja
js
imul
fwait
js
sahf
jle
sahf
jg
popf
and
jne
jnp
xchg
test
sub
jno
sub
imul
js
ins
jns
imul
xchg
nop
arpl
popf
push
popf
je
pushf
je
xchg
jnp
nop
xchg
xchg
xchg
cmp
jbe
xor
jns
jns
mov
jbe
jne
mov
pop
stos
add
pop
push
imul
or
sbb
movs
add
xchg
test
test
jnp
ins
je
jbe
mov
test
jne
pop
outs
jl
imul
jae
je
ins
je
imul
jp
jne
push
jns
jg
jl
ja
cmp
add
jle
cwde
jle
movs
jns
cmps
jp
test
jns
jae
movs
jp
mov
push
mov
and
cmps
jnp
cmps
jne
lahf
jb
lahf
jae
call
jne
jge
jne
outs
jge
jo
jp
mov
jl
xchg
jle
xchg
test
mov
mov
mov
mov
xor
jns
jo
jle
cmp
jge
jg
push
jnp
cmp
js
jns
push
outs
mov
xchg
addr16
push
sahf
jae
fwait
je
xchg
jnp
pop
adc
cwde
xchg
test
xor
jnp
jnp
test
and
sahf
outs
ins
sahf
jae
mov
push
outs
jnp
jns
jnp
xchg
cmp
add
test
mov
jg
jl
(bad)
jge
nop
jbe
xchg
jno
call
jnp
xchg
sbb
push
add
gs
push
ja
jp
jo
gs
pusha
jne
pop
jge
arpl
je
jle
jle
cmp
jle
xchg
add
mov
sub
jns
test
fs
pusha
mov
pusha
scas
jge
stos
jns
cmps
ja
movs
jae
pushf
jb
pushf
je
cdq
js
xchg
jnp
mov
jle
jp
jbe
jp
xchg
jg
mov
nop
mov
nop
push
nop
or
jno
jl
jns
jnp
jb
jbe
xor
js
jle
imul
jns
jl
jno
jne
jp
imul
mov
xchg
imul
jns
outs
test
mov
xchg
jge
mov
jge
mov
test
cmp
sub
jo
call
add
imul
(bad)
js
xchg
cmp
or
mov
mov
jnp
test
xor
jno
jbe
call
jge
xchg
test
xchg
test
popa
js
push
jl
jle
jne
jae
mov
mov
nop
pop
test
xchg
test
xchg
pop
xchg
jle
mov
mov
ja
jb
scas
jnp
scas
xchg
mov
mov
pop
lods
jg
cmps
jns
mov
imul
xchg
sub
cmp
jle
mov
mov
test
test
jne
outs
jb
je
jp
jo
jge
jne
outs
jns
jo
jl
jo
outs
jno
outs
je
jae
jp
jae
jb
jp
outs
sub
imul
je
push
mov
lea
mov
nop
xchg
jle
pop
mov
jg
lods
jg
movs
ja
sahf
jo
xchg
ins
jns
jo
lea
add
js
je
jo
nop
jne
xchg
jl
xchg
lea
popf
jge
movs
or
mov
js
lea
mov
sub
push
jbe
fwait
jge
xchg
sbb
mov
jge
ins
js
jno
xor
jle
adc
cdq
pop
mov
xchg
jg
cmp
adc
sahf
je
popf
outs
mov
jbe
jbe
scas
sub
pusha
scas
(bad)
pop
scas
mov
mov
test
jnp
fwait
ja
cdq
je
xchg
ja
xchg
jnp
xchg
sub
je
mov
mov
lea
mov
xchg
adc
mov
mov
xor
ja
jl
data16
data16
imul
ja
push
jbe
js
outs
jae
je
sub
ins
jnp
ins
js
push
movs
imul
mov
lea
mov
adc
cwde
xchg
and
or
adc
jl
xchg
mov
xchg
jno
xchg
jbe
lea
sbb
pushf
xchg
mov
jbe
xchg
outs
mov
nop
jge
cwde
jns
call
jle
nop
jle
mov
add
xchg
test
cmp
adc
mov
xchg
popf
arpl
jae
xchg
jns
xchg
jg
xchg
test
mov
xchg
call
jne
stos
jle
stos
xchg
nop
pop
stos
xchg
pop
test
pop
sahf
mov
jle
xchg
jns
xchg
ja
mov
xor
jnp
xchg
test
xchg
adc
or
adc
mov
ins
imul
and
cmp
jns
xor
je
jge
ins
js
je
sub
jo
(bad)
outs
jge
outs
js
ins
ja
outs
jnp
outs
test
lea
xchg
mov
or
xchg
xchg
xchg
mov
xchg
js
mov
jb
cmp
add
test
outs
xchg
test
cmp
sbb
xchg
xchg
or
test
mov
xchg
jns
xchg
jnp
xchg
jns
(bad)
js
mov
test
test
mov
xchg
test
imul
xchg
mov
nop
xchg
outs
mov
xchg
xchg
adc
xchg
xchg
ja
cdq
js
sahf
jle
movs
xchg
imul
popf
(bad)
bound
push
jp
xchg
add
lea
cdq
or
adc
mov
jle
mov
mov
test
test
test
test
xchg
xchg
mov
mov
test
js
xchg
jae
xor
jne
jge
outs
or
fwait
jo
mov
sbb
mov
mov
add
mov
call
adc
mov
ja
add
mov
outs
mov
jge
xchg
xor
jl
xchg
or
test
mov
and
pop
mov
mov
(bad)
jbe
mov
mov
test
test
jle
test
or
lahf
popa
xchg
mov
xchg
mov
xchg
xchg
ins
mov
xchg
jge
xchg
or
xchg
xchg
or
je
(bad)
ins
mov
fs
cdq
arpl
gs
mov
jle
cmp
xor
jle
mov
xchg
jg
call
lea
mov
xchg
jle
cmp
xor
popa
mov
lea
nop
jl
mov
jp
nop
jbe
mov
jae
xor
jo
xchg
mov
lea
xchg
jb
sahf
jne
mov
adc
test
jl
xchg
jl
xchg
add
test
sbb
lea
xor
ja
add
outs
nop
mov
jle
mov
mov
test
mov
xchg
jge
xchg
or
adc
mov
and
xchg
mov
mov
test
test
cmp
or
add
cdq
arpl
popa
xchg
sahf
bound
imul
mov
(bad)
mov
xchg
mov
nop
je
xchg
outs
mov
push
xchg
addr16
(bad)
push
jbe
jbe
outs
outs
xor
jno
xor
movs
xchg
jl
xchg
jnp
cwde
jg
cwde
xchg
mov
mov
or
jl
js
jg
outs
mov
mov
xchg
sub
jno
jg
xchg
jge
cwde
jp
xchg
ja
xchg
jne
mov
xchg
test
js
jb
xchg
je
cdq
js
fwait
jge
xchg
jg
mov
mov
jg
xchg
js
mov
pop
test
sbb
sahf
jbe
xchg
je
mov
jg
add
mov
outs
xchg
mov
jle
mov
xchg
test
mov
(bad)
jl
xchg
add
jl
js
xchg
mov
imul
jg
push
je
sub
push
sub
jb
jbe
mov
xor
xchg
(bad)
mov
mov
mov
lea
lea
xchg
nop
mov
xchg
xchg
jae
call
imul
mov
imul
jo
ins
push
jbe
xchg
jg
popf
mov
xchg
jae
xchg
je
xchg
jns
xchg
adc
xchg
lea
mov
add
jbe
jle
pop
cwde
xchg
cmp
jne
xor
cwde
js
nop
js
mov
xchg
jbe
je
mov
xchg
jnp
xchg
sub
jae
test
test
cmp
jle
jle
jne
xchg
xchg
add
xchg
jl
call
jae
fwait
jno
nop
jo
xchg
add
call
jae
jl
xor
ja
cmp
jg
mov
cmp
jge
xor
jb
xor
jno
sub
xor
push
jns
mov
mov
sub
ins
jo
jns
add
mov
xchg
ins
adc
jo
nop
jb
mov
jle
xchg
xchg
xchg
mov
jnp
fwait
je
popf
jno
popf
jo
cdq
outs
popf
cwde
outs
cwde
(bad)
outs
xchg
mov
test
jne
js
outs
ins
outs
ins
bound
pop
xor
pusha
xchg
mov
nop
push
xchg
jo
xchg
jns
xchg
jge
popf
jge
sahf
or
xchg
nop
je
mov
test
cmp
add
mov
sbb
mov
jge
jg
lahf
jnp
xchg
jnp
nop
jg
mov
jbe
je
mov
(bad)
jp
pop
add
mov
xchg
cmp
xor
jbe
test
mov
nop
jp
call
je
mov
jle
jae
add
lahf
js
xchg
ja
mov
cmp
jle
jl
xchg
cmp
jge
jns
xor
jne
jne
jg
js
jne
xor
jo
jne
jle
jge
mov
nop
jne
nop
push
lea
sbb
imul
outs
cmp
lea
ja
xchg
jns
xchg
je
xchg
je
lea
mov
test
lea
cdq
jnp
popf
je
sahf
jae
popf
jb
cdq
jae
xchg
jae
mov
mov
xor
jno
push
pusha
outs
outs
pop
jp
pop
cmp
mov
mov
lea
xchg
outs
nop
xchg
je
sahf
jbe
lahf
jl
popf
js
xchg
ja
xchg
ja
(bad)
je
mov
xchg
xchg
cmp
mov
mov
test
test
add
xchg
cmp
jns
xor
imul
xchg
xchg
mov
jno
cmp
je
jg
js
xor
jbe
(bad)
jnp
cdq
jg
mov
js
jbe
lahf
jbe
pushf
jbe
add
mov
test
jbe
mov
jne
mov
test
cmp
jp
jns
xor
jle
jns
jp
jge
jl
jae
jge
jg
jne
outs
jg
mov
xchg
jno
xchg
gs
pop
jne
push
jo
push
outs
jge
ins
and
jns
jge
jl
xchg
jg
xchg
cmp
jle
js
nop
jbe
mov
test
mov
xchg
jnp
pushf
jne
popf
je
popf
je
cwde
jbe
xchg
jbe
lea
mov
xor
jae
fs
bound
ins
pop
jno
pop
jbe
pop
jle
pop
mov
mov
mov
(bad)
lahf
js
pushf
js
xchg
js
(bad)
js
mov
xchg
xchg
mov
test
jle
mov
mov
add
xchg
test
lea
or
je
ja
xchg
mov
mov
jge
arpl
gs
push
mov
test
cmp
cmp
cmp
jns
mov
xchg
or
jbe
jle
mov
add
xchg
mov
ja
nop
jno
nop
outs
xchg
mov
mov
test
cmp
jp
jnp
xor
jns
ja
jns
cmp
js
jle
jne
jo
jg
cmp
jbe
xchg
outs
outs
cwde
bound
jbe
dec
jno
dec
outs
adc
fs
jno
jg
test
jp
mov
cmp
ja
jle
test
xchg
adc
pushf
jbe
pushf
jne
cwde
jp
xchg
jns
lea
mov
jle
mov
and
pop
ins
bound
push
pop
ins
je
je
pop
jg
pop
add
mov
xchg
push
popf
js
fwait
jp
xchg
jp
lea
mov
test
xchg
mov
xchg
jle
mov
xchg
test
add
xchg
stos
adc
xchg
jno
jl
xchg
mov
xchg
add
xchg
mov
xchg
test
jg
cmp
mov
cdq
mov
mov
mov
test
add
test
mov
jne
xchg
outs
call
mov
test
cmp
jle
jge
cmp
jle
jbe
jbe
mov
mov
test
xchg
imul
cwde
outs
jo
popa
jbe
push
jns
dec
jne
dec
jno
dec
jb
push
jns
pop
jns
imul
lea
mov
xchg
xor
outs
xchg
jg
xchg
test
adc
pushf
jne
cdq
jnp
xchg
jp
mov
xchg
jge
mov
test
jbe
ins
imul
data16
ins
jns
js
pop
jle
pop
add
(bad)
mov
cdq
ja
cdq
jnp
xchg
jge
mov
xchg
test
test
mov
test
jge
mov
test
cmp
jnp
add
mov
xchg
popf
test
xchg
sub
mov
test
and
cmp
test
add
or
nop
mov
xchg
lea
nop
imul
lahf
je
popf
jl
sahf
xchg
nop
jne
xchg
outs
lahf
xchg
imul
movs
xor
jge
jge
mov
cmp
mov
nop
outs
jbe
ins
jno
ins
jne
push
and
addr16
ins
jno
popa
js
push
jl
dec
jp
inc
jbe
dec
ja
dec
jle
push
jnp
add
jns
xchg
jbe
lea
xchg
sub
jno
nop
jb
lea
xchg
ja
(bad)
js
xchg
jne
cwde
jbe
call
jp
(bad)
jnp
xchg
jge
mov
test
js
outs
outs
bound
gs
push
ja
jnp
popa
jge
popa
jle
arpl
push
xchg
js
xchg
jge
lea
add
jnp
mov
test
jnp
xchg
xchg
test
cmp
and
test
xchg
xchg
mov
lea
xchg
sub
test
cmp
jns
cmp
cmp
xchg
mov
mov
(bad)
mov
xchg
xchg
add
xchg
outs
mov
jge
lea
xchg
jae
nop
outs
cmps
test
outs
cmps
jnp
movs
jns
fwait
jnp
mov
jbe
jp
nop
jae
xchg
ins
je
addr16
data16
bound
jge
popa
mov
cwde
imul
jp
push
sbb
xchg
inc
jle
dec
adc
xchg
cmp
xchg
nop
outs
cdq
mov
test
sub
ins
mov
xchg
xchg
jbe
xchg
jbe
cdq
jne
cdq
jnp
cdq
jns
xchg
jns
mov
jg
mov
test
jns
jo
data16
arpl
push
jb
push
jb
jns
push
sub
outs
or
mov
jle
xchg
test
mov
mov
mov
xchg
xchg
mov
test
nop
stos
adc
mov
(bad)
ja
xchg
jo
mov
xchg
sub
test
cmp
jns
xchg
test
test
jle
mov
mov
test
cdq
imul
js
add
popa
xchg
jle
jle
xchg
mov
mov
mov
jle
test
jo
jne
mov
test
xor
ins
xchg
jno
cdq
push
xchg
arpl
pusha
jae
pop
jae
pop
jp
pop
mov
imul
test
xchg
mov
test
xchg
jge
xchg
ja
xchg
jno
lea
xchg
sub
imul
xchg
xchg
lea
nop
jbe
xchg
jne
cdq
jnp
call
jns
cmp
jne
data16
ins
data16
bound
jns
ins
ja
imul
jo
ja
je
outs
je
jo
xor
jp
mov
test
jl
add
xchg
and
push
js
mov
mov
mov
mov
jg
test
mov
(bad)
ja
xchg
jb
xchg
je
lea
xchg
xor
je
jnp
xor
jg
add
test
jnp
mov
mov
mov
or
lahf
arpl
add
xchg
imul
jp
jnp
xchg
test
jns
test
js
test
jb
outs
js
jno
xchg
js
add
lea
xchg
jo
call
pop
jno
pop
jno
pop
ja
pop
xchg
xchg
push
sahf
pop
mov
nop
xchg
inc
nop
nop
dec
nop
nop
dec
xchg
lea
xchg
jns
xchg
jne
lea
xchg
sub
ins
mov
mov
mov
pop
sahf
xchg
jne
xchg
jp
cdq
ja
xchg
jne
mov
cmp
jnp
outs
je
ins
jo
jb
je
popa
js
fs
imul
je
jbe
je
outs
jns
outs
jp
outs
xor
jns
jg
test
jl
jge
cmp
mov
test
jg
mov
nop
jge
(bad)
jl
mov
mov
lea
jp
test
mov
mov
xchg
je
xchg
ja
nop
ja
mov
test
xor
jns
jnp
jge
xchg
(bad)
js
(bad)
js
(bad)
jle
mov
test
xchg
jae
xchg
outs
popfw
cmps
add
popa
jb
outs
jbe
jbe
cwde
jp
xchg
cmp
jge
jg
test
jne
push
popf
ins
jg
jbe
jge
jge
mov
(bad)
jne
cwde
jo
fwait
ins
outs
xchg
imul
xchg
sbb
arpl
jg
pop
mov
xchg
(bad)
dec
xchg
mov
mov
test
and
xchg
jge
(bad)
jns
lea
xchg
xor
ins
mov
lea
jne
xchg
jl
call
xchg
jp
xchg
ja
xchg
je
mov
xor
jns
je
js
jno
js
jne
bound
xor
jno
jns
ins
js
jae
imul
jp
push
js
xchg
jg
xchg
jg
jns
cmp
jg
je
mov
test
xor
jnp
or
mov
xor
fwait
jo
xchg
je
test
jge
xchg
jns
xchg
jnp
xchg
jnp
mov
xchg
cmp
jp
jge
jbe
test
mov
nop
je
(bad)
ja
lea
test
jle
jb
mov
cmp
(bad)
outs
gs
push
mov
mov
jae
jns
fwait
jg
mov
jg
ins
jl
addr16
data16
ins
jle
jne
js
jns
mov
xchg
jb
call
imul
pop
jb
pusha
jge
mov
xchg
adc
(bad)
push
call
xchg
xchg
sbb
pusha
xchg
and
je
jle
cmp
jne
xor
outs
mov
lea
ins
je
jae
call
mov
xchg
ja
(bad)
jne
mov
test
jg
jp
jae
jns
jnp
imul
jg
jno
jno
jns
jo
imul
jge
xchg
lea
mov
test
mov
jne
mov
mov
xchg
mov
test
jns
xchg
jle
outs
test
xchg
mov
xchg
add
xchg
jnp
jp
cmp
outs
mov
lea
add
jns
jno
mov
cmp
sub
ins
gs
add
imul
ins
cmps
jp
movs
jp
mov
and
lahf
gs
ins
jl
jbe
jbe
jbe
(bad)
je
xchg
outs
bound
imul
xchg
popa
outs
(bad)
arpl
gs
imul
xchg
arpl
push
fwait
xchg
sbb
nop
sbb
xchg
and
mov
add
jno
ins
ins
mov
mov
nop
imul
fwait
jns
cwde
cmp
jns
mov
xchg
test
test
xor
jne
xchg
sub
jns
jno
jbe
ja
push
and
mov
cwde
xchg
mov
xchg
xchg
xor
jle
jbe
xchg
jno
lea
mov
mov
and
scas
ja
scas
push
cmps
xchg
mov
xchg
test
test
jnp
mov
xchg
mov
mov
mov
xchg
jno
xchg
ja
lea
or
mov
xor
ins
jns
ins
jno
ins
ins
mov
xchg
add
je
mov
jae
jge
stos
add
test
mov
jge
jns
js
je
xchg
jae
xchg
outs
bound
imul
nop
push
xchg
jne
mov
mov
nop
mov
mov
pop
call
jg
nop
sbb
pop
xchg
test
test
test
mov
jb
xor
xor
outs
xchg
data16
imul
jnp
test
xchg
xchg
mov
mov
jns
mov
mov
jae
test
jge
jb
xor
ja
cmp
xchg
mov
mov
mov
lea
nop
ins
xchg
mov
mov
xor
jle
ja
xchg
jae
(bad)
js
mov
xchg
jns
cmp
xchg
mov
mov
mov
lea
mov
mov
lea
lea
pop
xchg
jb
xchg
js
nop
jle
test
js
jbe
jle
jno
jp
jns
push
sub
outs
jae
add
jle
mov
add
xchg
and
mov
jl
jbe
xchg
jne
xchg
jb
pushf
jne
popf
jge
sahf
jnp
fwait
jae
xchg
jb
mov
xor
jge
outs
test
mov
xchg
and
push
and
pusha
cdq
xchg
xchg
xchg
mov
xchg
test
jg
js
jae
xchg
test
xchg
mov
mov
mov
mov
xchg
jns
cmp
xchg
jl
lea
xor
outs
ja
outs
jno
jne
xchg
mov
call
xchg
jo
xchg
ins
pushf
nop
outs
fwait
mov
test
cmp
mov
xchg
xchg
mov
jp
je
lods
push
movs
mov
nop
xchg
lea
mov
jg
mov
mov
nop
js
xchg
jp
xchg
test
imul
mov
jle
cmp
jl
js
imul
js
add
mov
mov
xchg
test
or
xchg
popf
jl
xchg
cmp
jns
xchg
jns
xchg
jns
call
test
jge
nop
jl
xchg
jge
mov
xchg
outs
mov
mov
xchg
and
imul
xchg
xchg
arpl
nop
mov
lea
mov
xchg
add
jae
sub
push
mov
cmp
add
adc
cdq
mov
test
mov
lea
mov
test
mov
nop
mov
nop
ins
sahf
xchg
jno
xchg
jbe
fwait
jb
pushf
outs
sahf
xchg
outs
popf
xchg
jno
mov
test
jge
xchg
jl
xchg
jle
(bad)
jle
test
jbe
jnp
lods
jb
stos
push
mov
(bad)
call
jae
xchg
jle
mov
jle
lea
mov
xchg
jbe
xchg
jns
cdq
and
push
cdq
jns
xchg
jg
mov
jle
jns
xor
jne
imul
jnp
add
fwait
jle
cwde
or
xchg
mov
scas
jns
cmps
jge
mov
or
jne
sub
imul
mov
jl
mov
mov
mov
mov
mov
mov
mov
popf
mov
mov
mov
mov
mov
mov
mov
test
jl
jl
jle
cmp
sub
jne
jg
mov
pop
xchg
jnp
xchg
jle
nop
sbb
xchg
mov
(bad)
jb
lea
mov
test
mov
xchg
mov
xchg
jae
xchg
ja
call
outs
popf
cdq
outs
fwait
xchg
jno
mov
mov
jl
add
ja
mov
cmp
je
js
stos
jo
cmps
push
lahf
lea
xchg
xchg
imul
lea
xchg
jns
nop
jp
cdq
ja
pushf
jns
sahf
and
jno
cwde
jnp
xchg
adc
jl
xchg
test
jg
ja
data16
push
movs
mov
sahf
mov
xchg
test
mov
xchg
mov
and
xchg
pop
nop
mov
xchg
jb
cdq
jno
xchg
jae
xchg
jns
pop
xchg
xchg
imul
xchg
jne
(bad)
jo
mov
test
jle
test
mov
fwait
mov
mov
mov
mov
(bad)
jbe
lea
lea
mov
add
jp
lea
cmp
adc
jnp
cdq
jge
cwde
and
xchg
nop
jl
(bad)
jbe
mov
test
cmp
cmp
jbe
xchg
js
xchg
jnp
popf
jl
movs
jbe
movs
outs
cdq
lahf
ins
xchg
fwait
outs
(bad)
xchg
jb
(bad)
ja
mov
mov
lea
call
jle
movs
ja
cmps
jno
mov
mov
xchg
xchg
ins
xchg
nop
jbe
lea
adc
xchg
jp
sahf
js
mov
pusha
sahf
lea
xchg
jb
xchg
jle
xchg
test
mov
mov
mov
sub
gs
cmp
stos
mov
mov
(bad)
mov
xchg
test
mov
nop
mov
xchg
mov
jl
mov
jge
xor
jno
(bad)
outs
xchg
call
je
xchg
jnp
nop
js
lea
xchg
xor
jb
mov
nop
jae
mov
lea
mov
xchg
jge
nop
jl
xchg
jle
mov
test
jns
xchg
jnp
cwde
cmp
sbb
movs
jle
movs
jns
mov
mov
test
mov
js
cmp
js
mov
xchg
jp
xchg
jl
mov
pushf
test
xchg
mov
test
jnp
jbe
xchg
jp
fwait
sub
ja
jg
mov
jp
outs
test
mov
xchg
mov
mov
cmp
sbb
mov
pop
movs
and
cbw
mov
nop
jg
pop
or
jg
jnp
lea
test
and
test
add
into
nop
mov
xchg
or
lea
mov
(bad)
sahf
mov
sahf
mov
test
jb
mov
xchg
jo
popf
jno
pushf
jbe
xchg
jl
xchg
test
cmp
jbe
jle
test
(bad)
je
xchg
jns
xchg
jl
nop
test
mov
and
mov
jge
xchg
jns
call
cmp
and
stos
jl
stos
ja
cmps
jns
cmps
jl
mov
nop
xchg
xchg
jg
cmp
xchg
mov
mov
js
cdq
jnp
mov
xchg
lods
outs
mov
test
xchg
imul
mov
je
xor
jb
jl
cwde
js
xchg
jb
lea
xchg
mov
mov
mov
jge
jle
call
js
sahf
jnp
movs
jnp
test
pop
movs
and
xchg
mov
mov
mov
jle
(bad)
jl
xchg
add
jnp
jno
sub
mov
add
retf
mov
(bad)
scas
jl
stos
jl
test
mov
popf
mov
mov
mov
test
jb
nop
jb
xchg
jne
popf
js
pushf
jle
xchg
test
lea
ja
xchg
test
jle
xchg
jp
xchg
jle
xchg
or
mov
test
sub
mov
mov
jns
jle
cmps
jns
cmps
js
scas
ja
scas
jae
lods
je
stos
ja
cmps
adc
test
jnp
xchg
lea
mov
xchg
jb
xchg
jbe
popf
js
cmps
js
scas
je
mov
mov
mov
je
fs
push
popf
jo
mov
jne
xor
jno
xor
jae
jns
mov
test
mov
mov
mov
jg
popf
jle
mov
imul
test
popa
mov
imul
xchg
jle
(bad)
js
(bad)
js
xchg
jg
xchg
jge
xchg
jl
mov
test
jnp
lea
add
mov
jns
lods
jbe
cmps
jbe
movs
ja
mov
mov
xchg
cdq
mov
mov
xchg
jp
xchg
je
xchg
ja
xchg
jnp
pushf
sbb
xchg
xchg
adc
mov
mov
add
xchg
(bad)
xchg
cdq
nop
lahf
pushf
mov
jg
xchg
jl
xchg
jge
lea
xchg
jns
xchg
jne
sahf
ja
movs
cmp
cmps
jl
cmps
jne
test
xchg
scas
jb
mov
cdq
scas
outs
cwde
scas
jo
stos
jp
cmps
or
jge
mov
lea
jbe
xchg
jo
xchg
outs
xchg
call
je
mov
mov
sub
popa
jo
popa
ins
mov
mov
jne
test
mov
mov
xchg
xor
jle
jp
mov
xchg
cmp
jae
jg
mov
cmps
and
imul
xchg
test
jle
lea
mov
(bad)
je
xchg
jge
xchg
jl
xchg
jle
mov
jp
js
xchg
add
sahf
mov
nop
(bad)
ret
test
je
stos
jno
movs
jno
mov
xchg
xchg
jg
xchg
or
cwde
xchg
mov
mov
xchg
js
xchg
jl
xchg
sbb
xchg
xchg
cwde
lea
ja
xchg
jb
xchg
imul
test
test
(bad)
xchg
popf
nop
pushf
sahf
mov
movs
xchg
jns
xchg
js
lea
xchg
ja
xchg
jae
fwait
jne
mov
jl
jns
movs
jb
cmps
outs
nop
scas
ins
(bad)
mov
xchg
scas
push
lods
jne
test
jp
nop
jp
xchg
ja
xchg
je
xchg
jbe
xchg
outs
xchg
xchg
ins
(bad)
cdq
jno
mov
xor
scas
arpl
pusha
jp
popa
jbe
bound
bound
data16
imul
xchg
mov
mov
mov
xchg
cmp
or
xchg
add
je
test
push
xchg
mov
mov
xchg
cmp
lea
(bad)
jo
xchg
jae
xchg
jge
call
add
cwde
pop
add
fwait
mov
mov
js
mov
xchg
test
cdq
pushf
jo
xchg
je
mov
adc
pushf
pop
mov
mov
pop
xchg
xchg
xchg
nop
cdq
xchg
mov
(bad)
mov
xchg
xchg
lea
cdq
xor
jbe
test
mov
(bad)
cdq
sahf
mov
jle
xchg
ja
xchg
jbe
mov
mov
mov
xchg
jae
popf
jns
mov
test
mov
lea
sub
mov
xchg
js
xchg
jbe
xchg
je
xchg
ja
nop
outs
xchg
(bad)
ins
lea
and
scas
data16
arpl
gs
imul
outs
bound
xchg
mov
xchg
outs
mov
test
xchg
nop
lea
popf
test
mov
mov
mov
lea
mov
lea
lea
xchg
cmp
(bad)
je
xchg
outs
adc
pushf
cmp
jp
mov
cdq
pop
add
fwait
mov
nop
mov
mov
xchg
pushf
jb
xchg
jo
xchg
je
xchg
add
adc
xchg
test
or
adc
xchg
mov
test
mov
nop
nop
bound
fs
sub
xchg
xor
jge
mov
xchg
jl
xchg
jne
(bad)
jae
mov
mov
mov
xchg
jno
cwde
jne
popf
jne
popf
je
fwait
outs
mov
xchg
sub
movs
jnp
mov
jp
xchg
jns
(bad)
ja
mov
mov
mov
nop
jo
cdq
outs
jge
jno
test
jns
ins
jp
push
lods
ins
jo
outs
cmps
ins
arpl
popa
xchg
jge
pop
lea
mov
test
or
nop
cdq
or
and
lahf
xchg
ins
mov
js
nop
jnp
(bad)
jle
xchg
test
jnp
nop
je
xchg
jo
cdq
je
popf
cmp
ja
xchg
mov
xchg
xchg
push
add
fwait
mov
xchg
mov
mov
xchg
xchg
jp
xchg
jbe
mov
add
test
adc
lea
mov
mov
jnp
lea
mov
mov
add
xchg
push
xchg
and
push
xor
mov
mov
jnp
xchg
je
lea
xchg
test
test
mov
xchg
jb
xchg
jae
xchg
je
xchg
jb
cdq
jo
popf
outs
and
cmps
and
fwait
cmp
jg
mov
mov
mov
test
xor
jno
xchg
jo
cwde
jb
mov
js
jb
scas
jno
lods
je
test
popa
call
and
outs
mov
mov
add
(bad)
xchg
ja
call
test
jb
xchg
jno
cwde
ja
xchg
jnp
xchg
jle
xchg
sbb
xchg
jle
xchg
jne
xchg
jb
fwait
ja
sahf
xor
jne
xchg
mov
pop
add
pushf
xchg
mov
mov
nop
popf
mov
jle
xchg
jp
sahf
jbe
pushf
js
xchg
jg
xchg
jge
mov
xchg
test
imul
mov
xchg
jbe
cmp
adc
mov
nop
jge
xchg
jge
xchg
sub
jae
cmp
xchg
sahf
xchg
and
xchg
test
cmp
js
test
mov
nop
ja
nop
jns
mov
xchg
js
xchg
jne
call
sbb
jp
xchg
add
or
test
jae
xchg
jne
sahf
jp
mov
jns
jp
stos
jl
cmps
jg
lahf
jge
xchg
jl
mov
add
mov
xchg
jno
xchg
jno
lea
mov
cmp
je
lea
xchg
outs
lea
xchg
jle
xchg
je
call
jge
cdq
jg
xchg
adc
xchg
cmp
je
jbe
cdq
jnp
fwait
xchg
mov
mov
mov
mov
add
pushf
xchg
mov
lea
mov
xchg
lea
test
jp
mov
test
jp
jae
sub
test
xchg
nop
sub
call
jbe
mov
sub
ins
mov
nop
jns
nop
jge
mov
lea
mov
mov
pop
mov
mov
cmp
cmp
jb
jg
test
jle
mov
mov
xchg
jb
cwde
outs
xchg
lea
lea
mov
add
jnp
jbe
mov
fwait
jge
mov
jns
xor
outs
mov
mov
jnp
addr16
ins
js
jo
xchg
je
xchg
je
lea
mov
xor
imul
mov
fwait
jle
pushf
mov
xchg
jbe
fwait
jbe
mov
xchg
pushf
adc
mov
test
jl
(bad)
jns
xchg
jg
xchg
mov
jb
xchg
test
ja
test
add
fwait
xchg
test
mov
nop
nop
lahf
xchg
mov
adc
mov
jg
jp
xchg
jg
jne
popa
jp
pop
cmp
jl
mov
xchg
test
cmp
cmp
je
mov
(bad)
jne
(bad)
js
(bad)
jge
mov
mov
mov
mov
mov
mov
xchg
add
mov
mov
test
xchg
mov
mov
mov
xchg
jp
xchg
jbe
xchg
jno
(bad)
jae
mov
mov
add
mov
ja
xor
ja
mov
xchg
jle
popf
cmp
ja
xchg
mov
mov
test
xchg
mov
mov
mov
xchg
jbe
xchg
jne
lea
mov
test
add
mov
mov
xchg
jp
cwde
mov
pushf
js
mov
cwde
sahf
jle
cdq
adc
xchg
mov
cmp
jae
lea
xchg
xor
outs
pop
add
xchg
xchg
call
mov
mov
sbb
cdq
mov
xchg
mov
jge
jl
xchg
jg
jo
pusha
je
pop
jge
pop
test
mov
lea
xchg
jg
xchg
test
test
jnp
jg
jne
mov
mov
mov
mov
mov
or
lea
popf
mov
mov
xchg
or
xchg
jo
mov
nop
jb
xchg
jno
xchg
jb
xchg
jp
(bad)
jge
add
nop
mov
mov
mov
add
test
test
xchg
xchg
mov
xchg
jge
call
xchg
xchg
mov
mov
xchg
xchg
mov
mov
mov
xchg
js
xchg
ja
mov
mov
test
jg
bound
pop
test
or
xchg
lea
cwde
js
sahf
jnp
mov
call
mov
xchg
jle
xchg
mov
mov
nop
sub
pop
add
xchg
nop
mov
and
lods
cwde
sub
mov
adc
xchg
jae
js
xor
gs
pop
jp
pop
xor
jns
lea
xchg
sbb
mov
jl
xor
outs
lea
mov
mov
mov
xchg
mov
mov
xchg
adc
cwde
ja
xchg
jbe
cdq
jne
call
js
xchg
jnp
xchg
jp
nop
jbe
mov
mov
test
add
jae
mov
xchg
mov
xchg
jnp
cdq
jge
sahf
cmp
jge
xor
mov
jb
ins
ins
mov
mov
mov
xchg
jp
xchg
jp
nop
jge
mov
test
jge
arpl
popa
jl
popa
cmp
jo
xchg
jnp
xchg
test
xchg
jbe
cwde
ja
pushf
jae
call
js
mov
test
jle
xchg
xchg
xchg
pop
sbb
add
jbe
xchg
ja
xchg
jg
xchg
sub
mov
test
add
jb
sub
ins
sub
xor
jle
xchg
sbb
arpl
js
xchg
jg
xchg
mov
mov
mov
lea
mov
mov
pop
xchg
xchg
jns
cmp
js
jge
sahf
jp
sahf
jne
popf
jae
pushf
jne
cwde
jns
mov
jle
xchg
js
mov
mov
xchg
add
outs
add
xchg
ja
xchg
ja
xchg
js
pushf
jge
lahf
jg
cdq
jle
xchg
test
sub
jo
sub
jb
mov
mov
xchg
jg
xchg
jg
mov
xor
jne
js
gs
fs
fs
addr16
outs
jns
jbe
xchg
jle
popf
mov
jb
xchg
outs
movs
xchg
outs
movs
(bad)
jo
xchg
js
jg
lea
jge
test
adc
mov
mov
mov
add
add
xchg
jo
xchg
jp
xchg
sub
cmps
and
xchg
mov
and
lea
xor
addr16
arpl
pop
lea
mov
adc
xchg
mov
mov
xchg
xchg
(bad)
(bad)
(bad)
xchg
mov
nop
xchg
test
adc
mov
xchg
xchg
cmp
jns
jp
popf
ja
sahf
jbe
fwait
js
nop
jle
mov
jp
(bad)
jp
mov
xchg
xchg
mov
mov
xchg
xchg
(bad)
jno
xchg
jo
cdq
je
popf
ja
xchg
ja
xchg
jle
xchg
jbe
outs
outs
jl
imul
test
mov
pop
mov
xor
push
jo
je
push
jne
jns
outs
ja
jb
nop
js
cwde
xor
imul
jle
xchg
jnp
xchg
jp
mov
mov
xchg
jnp
call
push
pushf
push
jnp
add
gs
xchg
imul
test
test
mov
mov
js
nop
jo
nop
ins
xchg
ja
jb
jl
push
jnp
mov
mov
mov
jge
test
mov
xchg
mov
xchg
nop
mov
xchg
xchg
jg
add
xchg
mov
mov
xchg
test
cmp
mov
pushf
xchg
jl
lea
test
jl
xchg
jl
mov
mov
mov
mov
xchg
test
test
mov
xchg
push
pushf
outs
sbb
ja
outs
outs
jns
ins
xor
jle
mov
xchg
sub
xor
outs
outs
jb
ins
jns
imul
js
outs
ja
jno
mov
xchg
jns
xchg
jnp
call
sub
jno
jnp
pushf
jns
xchg
jp
mov
mov
popf
jnp
popf
jo
fwait
imul
sbb
xchg
xchg
imul
mov
mov
xchg
lea
call
cwde
ins
adc
jns
jae
jle
push
mov
xchg
test
test
adc
xchg
xchg
mov
xchg
xchg
xchg
or
jge
xchg
xchg
mov
ja
mov
mov
test
cmp
xchg
popf
cdq
jnp
xchg
ja
mov
jg
xchg
jle
lea
xchg
mov
mov
ins
lea
xchg
sub
bound
arpl
imul
jno
jbe
jns
jo
ja
ins
jg
imul
lea
lea
xor
jo
jb
jb
imul
jo
outs
jno
js
js
jno
test
mov
nop
jae
xchg
jbe
lahf
js
movs
js
cmps
jbe
mov
jg
jl
xchg
jle
mov
sbb
mov
xchg
or
xchg
imul
xchg
xchg
xchg
lea
xchg
ja
fwait
jb
lahf
jo
popf
jo
xchg
ins
ins
mov
jg
jae
jl
push
mov
arpl
jo
cdq
jnp
xchg
add
lea
cwde
mov
mov
adc
cwde
lea
test
jle
jp
jge
add
test
xchg
test
test
xchg
test
jg
popf
jl
xchg
jbe
mov
sub
je
xchg
xchg
mov
lea
jno
lea
xchg
test
sub
arpl
pop
adc
xchg
data16
jb
xchg
jns
je
js
imul
jg
ins
add
xchg
test
jge
xor
jno
jae
jbe
imul
jne
outs
jne
jbe
jp
jne
jg
jl
outs
jns
outs
outs
xchg
jo
pushf
jb
mov
js
jns
mov
xchg
xchg
jge
lahf
je
mov
test
xchg
xchg
cwde
ins
cdq
xchg
ja
lea
mov
lea
xchg
xchg
mov
xchg
jns
sahf
jne
mov
ins
call
jbe
je
jg
or
xchg
push
xchg
jne
xchg
jg
pop
xchg
cmp
jge
xchg
test
jg
xchg
jns
mov
test
je
jl
jne
js
cmp
xor
jns
test
mov
mov
test
ja
xchg
outs
cdq
test
xor
jbe
mov
lea
xchg
js
xchg
jne
mov
jae
xor
mov
mov
jge
pop
jl
pop
jg
fs
jno
xchg
jp
jp
jnp
push
jg
cmp
mov
xchg
mov
js
jle
test
jge
jns
jo
jb
jp
imul
jns
ja
jl
js
jl
jg
ins
jnp
imul
ins
call
jne
mov
mov
xchg
mov
call
ja
mov
jl
add
ins
xchg
xchg
outs
xchg
(bad)
js
mov
xchg
test
mov
mov
xchg
jae
jne
movs
jne
pushf
outs
push
ins
outs
xor
ja
imul
jnp
imul
adc
mov
jle
lea
jl
xchg
cmp
xchg
add
nop
xchg
jns
mov
xor
jo
jl
jae
jae
cmp
jg
nop
cmp
ja
mov
mov
xchg
ja
xchg
outs
xchg
mov
jno
mov
lea
xchg
jl
xchg
jge
xchg
jnp
lea
test
jg
cmp
ja
cmp
pop
js
pop
jge
or
jg
ins
add
mov
jae
mov
test
jle
test
xor
jne
je
jle
jno
jbe
jl
jge
jle
jp
jge
add
mov
cdq
ins
jae
jae
mov
mov
xchg
call
nop
adc
mov
jnp
mov
xchg
xchg
xchg
jb
mov
cmp
adc
mov
mov
cmp
ja
jle
movs
jns
movs
jns
fwait
jno
xchg
ins
jo
jae
jne
sub
js
outs
jns
jbe
mov
test
jp
jg
xchg
jnp
jge
mov
nop
jg
xchg
jg
xchg
jnp
mov
xor
outs
je
ins
jae
outs
jae
je
mov
mov
lea
cwde
mov
xchg
jbe
xchg
ins
xchg
mov
xchg
mov
jl
xchg
jg
xchg
cmp
jnp
cmp
jnp
ins
jns
fs
pop
jbe
pop
jne
pop
jne
pusha
jge
add
jg
jp
mov
mov
mov
xchg
mov
mov
mov
test
jp
cmp
jnp
jne
xor
jne
cmp
jle
jl
xor
outs
jnp
imul
outs
cwde
outs
je
jbe
mov
(bad)
mov
xchg
pushf
mov
nop
xchg
test
xchg
jbe
fwait
ins
add
sbb
test
jl
xchg
js
xchg
jne
cwde
jnp
xchg
jns
lea
mov
jnp
mov
xchg
outs
mov
outs
xchg
jne
(bad)
jo
xor
test
mov
mov
jnp
mov
or
mov
mov
jge
jns
mov
mov
lea
mov
xor
je
ins
jne
jb
cmp
jnp
cmp
jge
pop
test
jae
xchg
push
mov
test
xchg
mov
pop
nop
cmp
jl
test
jle
js
je
addr16
bound
popa
jno
bound
arpl
imul
jae
nop
jo
lea
mov
nop
jp
(bad)
jns
mov
test
jl
cmp
add
mov
test
add
add
xchg
jb
call
mov
xchg
xchg
pushf
xchg
xchg
cwde
nop
xchg
call
pushf
mov
jno
cmps
add
js
ins
test
xchg
jle
xchg
jne
xchg
jno
cwde
outs
xchg
fwait
je
cdq
jae
(bad)
je
(bad)
ja
xchg
ja
mov
mov
xchg
xor
ja
jae
jg
cmp
je
mov
mov
xchg
test
jge
jae
lea
xchg
add
add
add
jb
ins
jne
ins
ja
jae
jle
ja
cmp
jp
nop
jle
mov
sbb
xchg
addr16
mov
add
add
test
cmp
jnp
jae
imul
jae
outs
jb
jo
addr16
imul
xchg
jp
xchg
ja
xchg
je
(bad)
jbe
mov
xchg
jge
xchg
jge
mov
or
mov
mov
lea
mov
or
jp
jno
mov
ja
xchg
xor
xchg
xchg
xchg
xchg
xchg
cdq
xchg
xchg
xchg
xchg
xchg
cdq
xchg
lea
xchg
mov
mov
ins
mov
xchg
cmp
mov
call
xchg
jb
xchg
jne
xchg
jne
(bad)
js
(bad)
jae
mov
xchg
test
jle
mov
cmp
jbe
jnp
mov
sub
or
jno
mov
xchg
add
jle
jp
xor
add
jg
jg
jne
jne
jl
jbe
jno
js
ja
jg
jbe
js
test
lea
nop
jge
lea
sbb
cwde
xchg
fs
and
test
xchg
test
add
ins
je
imul
outs
imul
outs
xor
jge
xchg
jge
xchg
jp
xchg
jl
mov
xchg
cmp
test
xchg
xchg
sbb
cdq
test
jnp
ja
(bad)
jnp
nop
jge
xchg
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
test
imul
xor
adc
fwait
addr16
sahf
imul
cwde
xchg
jne
xchg
jne
xchg
js
xchg
jne
(bad)
jns
mov
mov
test
jg
cmp
jp
xor
push
mov
mov
mov
mov
test
cmp
test
jl
jnp
xor
jl
js
test
cmp
jbe
jp
jl
js
jbe
jbe
jns
xor
jbe
test
lea
nop
jge
lea
jg
xchg
je
xchg
ins
xchg
lea
xchg
and
push
cmp
jg
mov
add
jle
test
outs
ja
imul
jo
ins
jo
outs
ja
jo
jo
mov
xchg
jg
xchg
cmp
or
xchg
cmp
or
mov
mov
mov
cmps
nop
xchg
lahf
mov
jle
mov
nop
xor
jno
mov
mov
xchg
(bad)
(bad)
xchg
mov
xchg
nop
xchg
mov
call
data16
pop
add
pop
test
jle
jl
js
jae
mov
addr16
fwait
gs
xchg
outs
xchg
xchg
je
xchg
jne
xchg
js
xchg
jbe
xchg
jl
lea
mov
mov
test
jge
mov
mov
xchg
pusha
adc
mov
xchg
cmp
jbe
test
test
jl
jge
xor
js
cmp
jg
test
xor
jnp
jge
jne
jnp
xor
jne
test
mov
nop
jge
mov
jle
xchg
jbe
xchg
outs
mov
xchg
mov
xchg
add
jl
xchg
outs
jnp
ins
jae
jo
jo
jb
jno
imul
jle
cmp
jnp
cmp
jg
cmp
mov
lahf
xchg
xchg
cmps
sahf
xchg
stos
lahf
(bad)
stos
lahf
xchg
stos
xchg
xchg
mov
mov
ja
mov
mov
xchg
ja
nop
test
mov
mov
mov
jnp
call
pop
add
pop
test
jge
jl
jbe
je
(bad)
ins
test
cwde
fwait
xchg
call
jb
xchg
je
xchg
jbe
xchg
jne
xchg
jge
lea
lea
mov
mov
add
adc
xchg
pop
jnp
push
test
jle
jbe
cmp
jnp
mov
jle
jg
cmp
jge
add
jl
xchg
test
add
ja
test
jae
mov
jp
mov
jle
jg
(bad)
jp
(bad)
jb
mov
xchg
data16
xchg
add
jl
cmp
adc
mov
sub
jb
je
jbe
jne
ins
jne
je
xchg
mov
cwde
xchg
test
jge
xchg
jg
xchg
add
mov
xchg
stos
cmps
cwde
scas
test
lods
test
stos
popf
xchg
movs
xchg
nop
popf
nop
mov
jns
xchg
je
xchg
jne
xchg
js
xchg
test
mov
mov
xchg
ja
cwde
outs
lods
xchg
arpl
pop
xchg
jg
jge
jne
ja
nop
jno
xchg
ins
mov
xchg
cwde
push
xchg
jae
xchg
jbe
(bad)
jbe
nop
jbe
mov
mov
nop
jg
nop
jns
lea
test
cmp
pushf
sbb
pop
jnp
addr16
je
mov
jg
jp
test
mov
cmp
jle
ja
xor
jp
test
jge
mov
jle
xchg
xor
jno
jge
jl
jo
mov
test
xor
js
jl
mov
imul
mov
xchg
add
jnp
cmp
jns
mov
mov
xchg
xor
jne
jno
jl
jp
jns
xchg
mov
mov
mov
jl
lea
xchg
jnp
xchg
jg
lea
xchg
call
call
test
xchg
lahf
cdq
mov
adc
mov
mov
lea
mov
test
jne
xchg
ins
test
popa
add
popa
mov
xor
jbe
jl
xchg
js
call
imul
nop
jae
mov
mov
mov
mov
xchg
mov
(bad)
je
mov
test
xor
ja
addr16
pop
jp
pop
jns
addr16
jae
mov
add
mov
test
jge
jl
jl
js
cmp
jg
jle
mov
mov
xchg
jp
xor
jne
jle
ins
add
jle
mov
mov
test
push
sub
mov
lahf
test
jg
mov
jge
mov
mov
mov
mov
xchg
cmp
jg
jge
xchg
mov
xchg
mov
js
mov
mov
mov
mov
xchg
lahf
nop
pushf
test
test
xchg
movs
mov
mov
mov
xchg
nop
call
jnp
xchg
test
adc
mov
adc
xchg
ins
movs
nop
fs
mov
push
jne
test
cmp
mov
xchg
xchg
ins
xchg
lea
mov
mov
jno
mov
xchg
cmp
jle
mov
lea
mov
and
imul
stos
pop
je
pop
jbe
data16
jo
mov
cmp
mov
mov
jl
jle
jg
jns
jnp
cmp
or
mov
add
jp
ins
jno
ins
imul
ja
jnp
ins
jg
push
jp
cmp
jns
sub
outs
jg
jo
cmp
adc
mov
jle
cmp
nop
(bad)
je
xchg
jne
(bad)
jp
mov
add
test
test
(bad)
jg
mov
jo
mov
mov
xchg
mov
fwait
mov
pushf
mov
nop
movs
mov
mov
mov
mov
nop
xchg
jg
xchg
jge
lea
mov
mov
xchg
(bad)
jnp
xchg
jae
xchg
ins
popf
xchg
push
add
jl
mov
mov
test
or
call
xchg
test
sub
jo
test
jg
xchg
test
(bad)
jg
xchg
jge
sahf
jae
cmps
imul
pop
jno
gs
ins
ja
jb
cmp
mov
mov
jnp
cmp
jns
jge
jl
test
mov
mov
test
jg
jae
xchg
and
push
push
jb
ins
jno
push
ja
jp
imul
jge
jge
jne
jg
mov
pushf
add
jle
cmp
ja
mov
xchg
jne
call
jnp
mov
xchg
mov
mov
mov
test
ins
mov
add
nop
scas
mov
mov
mov
test
mov
mov
lea
xchg
xchg
jnp
mov
je
xchg
test
xchg
jne
xchg
outs
cwde
xchg
imul
cwde
xchg
adc
xchg
js
xor
jae
xor
outs
xchg
xor
ja
test
test
sbb
fwait
jno
mov
test
mov
jne
outs
jp
js
jne
test
xchg
cmp
jae
jns
cmp
jle
jle
jae
mov
mov
jle
xchg
imul
jns
pop
outs
jne
imul
addr16
outs
outs
pusha
outs
je
jno
gs
outs
jne
je
ja
js
xchg
mov
xchg
or
and
cdq
xchg
je
call
jl
popf
jge
xchg
xchg
mov
mov
lea
mov
xchg
jle
mov
popf
jg
stos
xchg
mov
mov
test
xchg
mov
xchg
or
xchg
mov
mov
mov
jno
test
mov
pop
lea
xchg
outs
xchg
xchg
jb
add
nop
mov
xchg
mov
mov
xchg
ja
jnp
test
outs
movs
jl
mov
outs
xchg
jle
mov
test
mov
nop
je
xchg
outs
pop
sahf
imul
addr16
ins
ja
jbe
outs
jge
outs
mov
mov
xor
js
jge
jno
jg
jg
jo
xchg
xor
jns
ins
jns
gs
pop
js
pop
outs
outs
pop
imul
pop
addr16
imul
pop
ins
jge
outs
jle
jno
jno
jl
jne
cmp
jge
xchg
or
test
mov
jbe
lahf
jp
cmps
jns
test
cwde
movs
jle
call
xchg
or
test
imul
test
jnp
xchg
xchg
jnp
movs
add
ja
mov
xchg
mov
mov
or
xchg
add
jle
mov
test
xor
mov
mov
mov
add
xchg
mov
mov
nop
pushf
jge
mov
jl
je
lods
jns
stos
jp
cmps
jg
mov
jbe
xor
xchg
mov
lea
xchg
jno
cwde
outs
pop
popf
push
call
outs
outs
js
je
ja
push
sub
outs
test
jg
imul
cmp
xor
jae
jae
sub
pop
jbe
pop
ins
imul
popaw
push
addr16
pop
push
gs
addr16
imul
jl
jae
je
cmp
xchg
jg
sahf
jle
cmps
add
test
jbe
cdq
jne
mov
call
mov
lea
or
xchg
ins
mov
or
xchg
sbb
lahf
mov
lea
mov
mov
lea
lea
mov
add
xchg
jge
fwait
test
jns
test
xor
jb
mov
js
mov
nop
xchg
mov
add
cwde
xchg
mov
mov
xchg
popf
ja
mov
sub
scas
js
lods
jg
cmps
xor
ja
xor
ins
mov
mov
mov
jne
xchg
jne
xchg
jb
xchg
js
mov
xor
jae
imul
jnp
arpl
ins
jle
imul
jns
jb
jle
cmp
jnp
jg
js
addr16
bound
jae
popa
imul
pop
push
push
imul
push
arpl
data16
imul
xor
mov
add
sub
call
jne
stos
js
cmps
jnp
mov
xchg
xchg
cdq
mov
or
js
mov
mov
mov
mov
mov
test
jle
jl
xchg
cmp
xchg
(bad)
jno
xchg
jb
(bad)
outs
xchg
mov
test
jns
xchg
jl
popf
test
xchg
test
xor
outs
xchg
jge
cmp
add
mov
xchg
mov
test
(bad)
fwait
jb
mov
xchg
jp
jns
mov
jne
xor
xchg
test
sub
lea
mov
mov
jg
mov
mov
jp
push
ja
addr16
popa
jp
popa
jle
addr16
ins
ja
ins
je
outs
jbe
je
jp
jg
jnp
jge
test
test
jg
js
push
je
jno
pushw
push
push
outs
pop
push
outs
push
pop
outs
dec
bound
push
arpl
ins
jbe
jo
jge
jnp
xchg
xchg
add
js
mov
xchg
outs
mov
outs
mov
je
mov
scas
mov
movs
xchg
xchg
cwde
xchg
pushf
mov
xchg
js
mov
mov
ja
mov
jbe
cmp
cmp
test
mov
xchg
jb
cwde
je
xchg
jo
cwde
jb
xchg
jbe
(bad)
jns
mov
add
xchg
adc
mov
ja
xor
outs
xchg
mov
mov
mov
xchg
jl
call
cmps
mov
mov
add
mov
mov
mov
jp
cmp
jp
cmp
jl
xchg
xor
ins
mov
test
push
xchg
data16
push
jge
addr16
bound
arpl
imul
js
jae
jp
jle
jge
add
cmp
je
jl
jbe
imul
ins
outs
imul
push
jne
pop
jb
fs
imul
jle
ja
imul
jnp
ja
js
cmp
jbe
test
test
mov
xchg
imul
mov
outs
mov
jno
call
nop
lahf
lea
mov
test
je
mov
mov
jns
cmp
jp
js
xor
jnp
xchg
nop
jp
cdq
jbe
popf
js
pushf
je
lahf
jne
cdq
jns
xchg
jp
mov
add
test
xchg
cmps
mov
xchg
xchg
mov
mov
mov
xchg
jp
sahf
js
add
and
xchg
jg
ja
xchg
jb
xchg
imul
lea
xchg
sub
fwait
xchg
jne
xor
je
xor
jb
nop
ins
adc
xor
gs
addr16
ins
jno
je
jle
outs
jl
jae
xor
jnp
mov
test
jns
jae
je
je
outs
je
jae
data16
arpl
pop
jns
pop
jp
pop
jbe
gs
outs
sbb
jns
ins
jp
outs
jle
jne
jo
xor
jae
test
test
jo
mov
(bad)
push
mov
mov
nop
outs
mov
xor
xchg
test
jg
test
xchg
xchg
add
test
test
test
jnp
xchg
jle
pushf
jp
mov
jg
jns
sahf
jl
xchg
jl
mov
mov
nop
popf
mov
xchg
xchg
cmps
xchg
nop
mov
sbb
mov
xchg
jp
mov
sbb
jle
je
xchg
jno
mov
mov
mov
xchg
imul
test
test
sbb
xchg
cmp
mov
sbb
nop
js
cmp
sub
ins
jns
jb
cmp
jl
add
mov
mov
mov
jnp
cmp
jno
ja
jne
ins
js
push
imul
pop
jle
popa
jns
push
popa
ja
data16
ins
jp
outs
jg
jae
imul
mov
xchg
jno
mov
lea
mov
jae
xchg
mov
mov
test
jge
pushf
jl
xchg
jge
mov
test
xor
jbe
cmp
test
or
jns
test
xchg
xchg
cmp
jnp
cmp
test
xchg
cdq
jg
xchg
adc
nop
xchg
movs
xchg
xchg
cmps
xchg
cwde
cmps
xchg
xchg
mov
test
jl
nop
or
mov
add
xchg
jns
xchg
ja
xchg
outs
adc
xchg
ins
lea
xchg
xchg
jbe
mov
mov
mov
fwait
cmp
jge
add
and
pushf
xor
xchg
jl
jae
mov
mov
mov
mov
nop
mov
mov
mov
xor
jae
jp
jge
outs
jl
ins
jge
ins
jl
outs
xor
jo
sub
ins
jle
je
push
jl
jp
outs
jle
jno
push
sub
movs
xor
jae
mov
mov
test
xor
mov
ja
jle
scas
ja
movs
jbe
fwait
jne
xchg
ja
mov
jg
xchg
jl
mov
mov
(bad)
jnp
xchg
jns
xchg
ja
nop
jne
mov
test
add
popf
cmp
jle
add
xchg
fwait
or
(bad)
nop
nop
(bad)
nop
fwait
xchg
xchg
mov
xchg
movs
call
mov
or
test
data16
add
mov
mov
mov
ins
test
add
jno
mov
xchg
jns
popf
jnp
mov
mov
sbb
xchg
popf
xchg
jge
xchg
ja
mov
xchg
jae
mov
xchg
outs
xchg
jg
jbe
xchg
jp
xchg
jg
xchg
cmp
js
mov
jae
mov
mov
test
jle
mov
cmp
xor
jb
xor
jbe
jns
xor
jo
xor
jo
sub
jb
je
jl
jo
push
jge
mov
pushf
jle
movs
cmp
jnp
mov
cmp
jnp
jle
scas
cmp
sub
xchg
jb
xor
jae
jne
mov
mov
xchg
jae
cdq
jne
cdq
je
xchg
je
mov
test
add
sbb
stos
xchg
xchg
mov
xchg
cwde
mov
xchg
mov
mov
mov
test
je
lods
bound
mov
mov
mov
mov
mov
xchg
test
xor
jbe
test
lea
xchg
jns
cwde
jne
lahf
jns
mov
jle
add
mov
call
ins
mov
outs
xchg
sahf
ins
mov
sbb
cwde
jle
call
mov
mov
mov
mov
mov
xchg
sub
imul
or
cmp
jns
jnp
cmp
jg
jbe
xor
outs
jns
jae
imul
xchg
xchg
jl
fwait
add
test
test
cmps
jp
cmps
jno
sahf
outs
xchg
xchg
outs
pushf
mov
jle
call
push
xchg
ins
lea
xchg
cdq
jae
(bad)
js
mov
test
mov
sahf
mov
xchg
xchg
xchg
mov
popf
mov
xchg
mov
xchg
jne
scas
bound
xchg
jl
(bad)
ja
mov
jo
lea
mov
mov
cmp
jl
jns
xchg
jl
xchg
test
mov
xchg
jae
call
cmp
jg
mov
cdq
jp
lahf
jno
mov
sahf
mov
xchg
cmps
push
test
mov
test
test
jge
xchg
mov
addr16
mov
mov
test
test
je
mov
mov
xchg
mov
xchg
test
jnp
jge
jnp
outs
js
jno
jb
jp
cmp
jge
mov
xchg
or
mov
mov
test
mov
fwait
mov
ja
pushf
push
call
bound
imul
xchg
xchg
jns
mov
xchg
pop
popf
xchg
mov
xchg
xchg
sbb
pushf
xchg
or
nop
xchg
test
mov
test
jne
scas
arpl
pushf
jg
xchg
jns
nop
jbe
mov
xchg
js
nop
jge
mov
jle
xchg
ja
xchg
js
xchg
jg
mov
test
js
test
xchg
or
jae
mov
call
cmps
xchg
lods
mov
stos
jo
movs
jne
mov
mov
mov
jae
xchg
addr16
mov
mov
mov
mov
mov
xchg
add
jle
mov
test
add
xor
jo
jnp
jnp
jnp
cmp
cmp
xchg
mov
fwait
mov
mov
mov
xchg
mov
je
jb
lahf
outs
sahf
pop
ins
cwde
pop
je
pop
jle
bound
ins
xchg
mov
mov
lea
(bad)
cdq
jle
pushf
or
xchg
mov
xchg
cdq
sbb
mov
xchg
(bad)
popf
xchg
or
xchg
cdq
xchg
ja
scas
push
xchg
mov
mov
test
jge
test
test
adc
mov
jns
jl
call
mov
xchg
call
fs
mov
(bad)
cmps
fs
lods
data16
xchg
movs
jae
lahf
jp
popf
jp
popf
jns
cwde
jge
mov
mov
pop
popf
xchg
addr16
xchg
jge
xchg
xchg
nop
jl
(bad)
jge
mov
mov
test
add
add
jo
xchg
test
xchg
mov
mov
xchg
add
mov
mov
lea
or
lahf
outs
ja
popa
outs
mov
jae
pop
jp
pusha
and
mov
mov
mov
xchg
cdq
jns
pushf
jl
movs
jge
cmps
adc
pushf
cwde
jle
xchg
jnp
test
jnp
movs
jle
lahf
test
add
add
jp
scas
outs
popf
add
xchg
jnp
xchg
jbe
(bad)
jne
xchg
jnp
xchg
jle
xchg
add
(bad)
jns
(bad)
jp
pop
mov
ja
jg
cwde
mov
mov
mov
mov
mov
test
stos
addr16
cmps
outs
xchg
mov
call
xchg
jp
mov
xchg
mov
(bad)
push
nop
jbe
xchg
or
jge
lea
mov
test
cmp
sbb
mov
jl
nop
jb
xchg
jo
xchg
jb
nop
je
xchg
jb
xchg
jae
xchg
jns
xchg
xchg
pushf
mov
mov
xchg
xchg
nop
mov
sbb
cmps
pop
outs
movs
pop
jne
pop
ja
popa
jg
data16
test
mov
xchg
xchg
jp
fwait
jbe
popf
ja
cmps
ja
test
xchg
cmps
jle
movs
jg
sahf
jge
fwait
jge
xchg
jns
xchg
add
xchg
jnp
test
xchg
jle
cmp
jge
fwait
jp
scas
jb
add
mov
mov
xchg
jl
add
jg
mov
lea
xchg
jle
xchg
xor
outs
xchg
mov
mov
mov
sbb
mov
mov
xchg
mov
pushf
xchg
jnp
xchg
jp
xchg
js
xchg
js
mov
test
xchg
(bad)
nop
imul
xchg
js
xchg
or
jnp
xchg
jle
mov
add
jg
js
xchg
jns
lea
jge
xchg
jae
fwait
jo
call
outs
adc
or
mov
xchg
pushf
xchg
xchg
xchg
(bad)
(bad)
xchg
(bad)
mov
jle
data16
pop
jo
pop
jne
popa
jne
arpl
sub
mov
mov
xchg
xchg
jl
fwait
jne
sahf
je
cmps
jb
stos
je
stos
jbe
cmps
jns
mov
popf
cwde
jns
mov
test
add
js
xchg
test
jp
test
mov
pushf
jne
lods
jo
add
lea
jle
mov
mov
mov
xchg
jns
xchg
jle
pop
xchg
nop
mov
jg
cwde
xor
jae
(bad)
jo
(bad)
jbe
pop
adc
outs
jbe
addr16
gs
imul
cwde
xchg
jbe
xchg
jnp
nop
jns
xchg
ja
(bad)
jbe
xchg
test
xchg
mov
mov
mov
cdq
xchg
jns
nop
jle
xchg
cmp
sbb
xchg
je
mov
jle
pushf
je
mov
sbb
xchg
push
mov
mov
lea
call
cdq
pushf
xchg
fwait
cdq
xchg
xchg
call
or
jne
addr16
arpl
data16
addr16
imul
and
sbb
xchg
popf
jno
cmps
ins
mov
mov
xchg
mov
mov
and
lahf
mov
xchg
xchg
jo
jbe
mov
nop
outs
jns
outs
jns
imul
xchg
cmp
jle
lea
lea
jg
jge
nop
test
jg
mov
mov
mov
mov
xchg
je
xchg
jp
xchg
test
xchg
je
xchg
ja
xchg
jb
xchg
imul
jns
ins
sbb
xchg
js
xchg
jnp
lea
lea
xchg
jbe
mov
xchg
test
xchg
test
mov
or
mov
xchg
jbe
mov
cmp
jl
jae
cwde
outs
sbb
xchg
ins
xchg
lahf
jne
movs
jo
mov
ja
ins
js
push
test
jg
add
xchg
pushf
xchg
cdq
xchg
fwait
cdq
xchg
lahf
xchg
xchg
cdq
cdq
xchg
xchg
mov
mov
scas
jno
mov
js
imul
jp
imul
sub
xchg
jg
nop
adc
call
movs
push
test
sub
mov
xchg
fwait
jp
xchg
sbb
lahf
lea
mov
xchg
outs
mov
lea
xchg
data16
data16
fs
add
cdq
jg
xchg
mov
xchg
jle
xchg
jg
xchg
cmp
jp
mov
pop
xchg
nop
ja
xchg
jns
xchg
jg
mov
lea
xchg
js
xchg
jp
xchg
or
jp
cwde
ja
xchg
jnp
xchg
ja
xchg
jo
xchg
outs
jne
jno
xchg
jbe
xchg
js
lea
jle
mov
mov
mov
mov
xchg
test
jnp
xchg
xchg
jle
outs
jle
jbe
mov
mov
xchg
xchg
jge
call
imul
mov
lahf
je
movs
outs
jb
jno
popf
ins
outs
cwde
imul
jne
push
xor
test
xchg
xchg
xchg
pushf
sahf
xchg
pushf
mov
fwait
cdq
fwait
cwde
xchg
sahf
xchg
(bad)
mov
jp
jp
mov
jnp
jno
test
sub
mov
mov
fwait
xchg
sbb
mov
jle
push
mov
mov
xchg
xchg
test
mov
sbb
xchg
outs
ins
(bad)
bound
pop
jo
pop
imul
jle
cdq
mov
xchg
jge
cwde
jg
cdq
cmp
cmp
jns
xchg
jae
xchg
outs
cwde
xchg
jno
xchg
js
(bad)
jge
mov
xchg
jp
xchg
jl
call
nop
adc
js
xor
jo
je
cwde
jno
xchg
jae
xchg
js
mov
mov
mov
xchg
mov
mov
mov
ins
pushf
xchg
mov
mov
test
xchg
xor
jne
test
test
xchg
sub
jo
jae
fwait
imul
xchg
bound
arpl
imul
pushf
jae
cdq
outs
addr16
ins
imul
jae
js
xchg
test
nop
test
mov
mov
xchg
xchg
xchg
cdq
xchg
xchg
jge
ja
lods
jne
cmps
jbe
mov
mov
mov
xchg
mov
xchg
jne
nop
jno
cwde
push
fwait
push
pushf
push
cdq
ins
jl
jo
pushf
jns
call
mov
mov
sbb
xchg
push
xchg
pop
outs
xchg
push
outs
xchg
push
push
push
pop
add
cmps
jl
mov
or
adc
jg
(bad)
jne
xchg
outs
mov
xchg
call
jnp
xchg
jp
cwde
jg
pushf
xchg
xchg
xchg
cmp
sahf
xor
xchg
jne
xchg
jp
mov
test
mov
mov
je
nop
ins
stos
mov
lea
mov
mov
mov
xchg
js
ja
xor
jns
add
jge
fwait
js
cdq
jb
call
arpl
arpl
test
cdq
js
fwait
jae
xchg
jbe
xchg
jb
xchg
jo
mov
jg
imul
jb
jne
mov
popf
and
mov
mov
xchg
xchg
xchg
test
test
mov
mov
xchg
lea
nop
jbe
mov
(bad)
outs
adc
xchg
jae
cwde
jnp
cwde
jg
xchg
mov
xchg
xchg
mov
test
jl
push
cwde
push
jo
dec
imul
jp
cmps
mov
sahf
mov
mov
adc
pushf
arpl
push
xchg
jae
xchg
js
xchg
jns
call
(bad)
nop
cdq
xchg
mov
mov
xchg
jl
pushf
ja
cwde
jbe
xchg
jnp
mov
test
jg
mov
nop
jae
xchg
ins
lods
xchg
imul
xchg
mov
test
jbe
jp
test
test
test
lea
xchg
jp
fwait
js
cdq
je
cwde
jo
xchg
outs
js
push
mov
and
imul
xchg
jl
xchg
js
xchg
jbe
lea
sub
jl
jne
cmp
xchg
lahf
jge
cmps
jl
scas
jbe
lods
je
test
pushf
pushf
sbb
or
mov
mov
nop
pop
mov
mov
test
xchg
jne
mov
mov
xchg
jbe
xchg
jl
xchg
or
nop
lea
or
jnp
pop
js
push
jne
dec
jo
dec
add
mov
xchg
stos
mov
popf
xchg
nop
pushf
xchg
mov
mov
xchg
jno
cwde
sbb
adc
jbe
cdq
jge
pushf
xchg
xchg
xchg
xchg
xchg
xchg
lea
mov
jl
jns
cdq
ja
nop
jnp
mov
cmp
jle
mov
xchg
je
xchg
ins
stos
xchg
push
xchg
imul
xchg
mov
add
ja
xchg
mov
xchg
jl
cdq
jns
call
jbe
nop
jbe
xchg
outs
jne
outs
ja
ins
add
sub
push
and
push
jle
nop
jne
test
xor
je
jle
add
fwait
scas
outs
pushf
scas
imul
popf
popf
jbe
xchg
jge
xchg
mov
popf
mov
mov
xchg
xchg
test
xchg
test
jl
lea
cmp
jp
js
nop
jp
xchg
jge
xchg
or
mov
xchg
or
xchg
imul
jl
dec
js
dec
outs
add
mov
movs
lods
test
cdq
mov
xchg
cwde
mov
xchg
outs
jns
gs
pop
jp
pusha
jns
arpl
imul
jg
jae
cdq
jns
call
mov
xchg
xchg
and
cwde
jns
mov
xchg
cmp
jge
(bad)
jnp
xchg
jbe
call
outs
mov
jns
mov
je
jg
xchg
mov
mov
mov
xchg
jl
xchg
jnp
xchg
jle
xchg
jg
mov
mov
mov
nop
ja
lea
mov
mov
mov
xchg
mov
outs
cdq
xchg
jge
mov
mov
xchg
cmp
jg
test
jp
stos
ins
xchg
stos
data16
test
popf
pushf
ins
fwait
xchg
jne
xchg
adc
xchg
nop
cwde
xchg
xchg
cwde
mov
adc
xchg
cmp
jge
jg
xchg
ja
mov
mov
test
jg
jg
xchg
jg
xchg
or
mov
test
jl
(bad)
jne
nop
jo
xchg
arpl
push
adc
jne
test
scas
fwait
xchg
lods
xchg
xchg
cmps
lea
mov
nop
jo
xchg
data16
pusha
jbe
popa
jne
arpl
push
xchg
ins
js
outs
jl
jne
xchg
jg
xchg
or
cdq
mov
sbb
pushf
jg
xchg
jl
mov
xor
js
test
mov
jns
call
jne
cdq
ja
xchg
jle
mov
mov
xchg
mov
mov
mov
xchg
jl
xchg
jge
mov
test
xor
mov
mov
mov
(bad)
jae
lea
xchg
jo
xchg
jae
nop
jne
xchg
ins
(bad)
jnp
(bad)
js
mov
nop
jp
mov
jge
movs
outs
xchg
cmps
data16
cmps
pusha
mov
pushfw
xchg
jo
xchg
jge
xchg
mov
xchg
pushf
(bad)
xchg
cwde
(bad)
xchg
lea
test
mov
jge
mov
(bad)
jae
lea
mov
xchg
adc
xchg
or
mov
mov
xchg
mov
mov
xchg
popa
mov
test
add
mov
mov
stos
mov
mov
mov
xchg
fs
arpl
gs
imul
jae
ins
jbe
jb
xchg
jl
xchg
jg
mov
mov
sbb
test
cmp
test
mov
xchg
add
jle
cwde
jns
pushf
js
lahf
jp
call
xchg
jns
test
xchg
xchg
mov
mov
mov
test
jnp
ja
mov
mov
mov
test
jge
nop
jns
xchg
jbe
xchg
ja
xchg
jae
cwde
jbe
cwde
jns
(bad)
js
xchg
sub
ja
je
xchg
jbe
xchg
jge
mov
jbe
lahf
imul
sahf
xchg
data16
xchg
jo
xchg
jge
xchg
mov
xchg
mov
mov
add
jle
jbe
xchg
jno
mov
mov
xchg
xchg
mov
mov
mov
or
adc
lea
mov
add
mov
mov
mov
mov
ja
mov
nop
imul
outs
(bad)
ins
jno
imul
jo
jo
xchg
jp
xchg
jge
lea
mov
sbb
xchg
mov
jge
mov
xchg
add
sub
cmps
mov
pushf
xchg
test
test
test
xor
outs
outs
xor
ja
jl
js
ja
mov
mov
xchg
jp
(bad)
js
nop
ja
mov
add
xchg
cdq
je
pushf
jbe
popf
jp
xchg
jp
mov
test
jge
call
jp
xchg
jge
mov
xchg
call
push
xchg
jne
xchg
adc
lahf
mov
mov
mov
outs
jbe
jno
xor
jb
xchg
mov
test
xchg
xchg
or
xchg
xchg
jg
xchg
lea
cdq
xchg
js
call
jge
xchg
test
pop
(bad)
xchg
push
mov
add
lods
mov
or
mov
jl
test
mov
mov
xchg
outs
jno
jo
xchg
ins
outs
xchg
imul
jb
jp
xchg
jg
pop
mov
sbb
test
jp
lea
add
test
and
call
je
je
jg
data16
imul
jl
outs
jl
jb
je
jbe
ja
jge
imul
jp
xchg
ja
nop
jge
xchg
jns
xchg
ja
cwde
jb
pushf
jae
lahf
js
call
jae
jle
lahf
je
mov
xchg
mov
xchg
jae
xchg
outs
cdq
xchg
jno
xchg
jl
cdq
xchg
xchg
pushf
mov
xchg
xchg
xchg
sub
ins
jl
jo
jle
test
pop
mov
jg
nop
jne
(bad)
jae
xchg
jns
xchg
mov
xchg
xchg
jae
fwait
jno
cwde
jno
cdq
jns
xchg
sub
pop
mov
xchg
lea
mov
popf
ja
xchg
jnp
xchg
jp
test
cmp
xchg
mov
mov
mov
nop
jo
xchg
ins
outs
xchg
jb
xchg
jge
xchg
add
xchg
mov
popf
cdq
sbb
xchg
cmp
mov
test
and
popf
cdq
test
cmp
ins
gs
push
addr16
ins
outs
jbe
jb
je
addr16
arpl
arpl
ins
xchg
jl
xchg
js
xchg
jge
mov
jp
xchg
jbe
xchg
jo
xchg
jo
fwait
jbe
cdq
js
xchg
jne
xchg
ja
jne
mov
jg
jl
cwde
add
mov
xchg
jne
xchg
js
xchg
or
mov
xchg
sub
imul
je
imul
cmp
jge
mov
xchg
add
xchg
jge
mov
mov
xchg
je
xchg
sbb
jl
cdq
jb
call
js
xchg
sub
mov
(bad)
xchg
mov
xchg
cdq
jnp
xchg
jae
xchg
outs
(bad)
xchg
jb
mov
test
jp
add
jge
mov
nop
jne
xchg
jb
cwde
jbe
cwde
cmp
nop
xchg
cdq
xchg
mov
mov
adc
adc
mov
test
xchg
cdq
test
or
ins
push
pushw
push
jb
jae
jno
popa
jb
pop
js
pop
add
jp
xchg
jle
lea
or
xchg
xchg
jb
xchg
jbe
mov
test
jne
jbe
mov
jp
jg
fwait
test
mov
xchg
mov
nop
jl
xchg
or
(bad)
xchg
mov
test
jae
sub
data16
arpl
imul
jle
jbe
xor
jnp
add
lea
mov
outs
test
jge
cdq
test
xchg
jg
xchg
jne
xchg
jo
xchg
jb
xchg
jl
xchg
xchg
xchg
pop
xchg
xchg
lahf
fwait
mov
cdq
mov
mov
mov
mov
sub
ja
add
lea
ja
call
mov
xchg
mov
stos
cwde
jle
cwde
jg
xchg
jns
xchg
jne
(bad)
jns
mov
xchg
or
(bad)
xchg
adc
xchg
jno
js
imul
jp
outs
ja
outs
jne
jno
ins
jbe
jo
pop
jo
pop
jbe
pop
add
xor
jg
jg
xchg
jle
add
add
(bad)
jno
mov
xor
jae
jbe
fwait
jne
call
xchg
lea
xchg
mov
mov
pushf
xchg
mov
jle
lea
mov
test
and
pop
jno
data16
outs
jne
jae
jns
jle
jne
jge
mov
xchg
ja
mov
xchg
jno
xchg
jnp
cdq
sbb
adc
mov
ja
lea
xchg
pop
and
cwde
xchg
movs
xchg
mov
ins
cwde
xchg
fs
xchg
sub
test
xchg
lea
mov
jnp
jl
pushf
jg
cdq
mov
sahf
xchg
xchg
cmps
xchg
mov
jle
xchg
jge
xchg
jg
(bad)
jns
mov
jbe
xchg
test
cmp
add
mov
xchg
test
jl
jl
je
jnp
jno
outs
je
ins
jne
outs
jne
jno
jo
jp
jae
pop
jb
pop
jbe
pop
jg
arpl
cdq
jge
fwait
add
xor
ins
jle
addr16
push
xchg
sub
jb
js
xchg
jg
cdq
test
mov
js
xchg
test
mov
xchg
add
mov
mov
test
jb
arpl
ins
jo
jno
js
ja
jae
jge
add
xchg
test
xchg
nop
je
xchg
jnp
cwde
jg
xchg
test
mov
mov
mov
mov
mov
nop
lea
fwait
xchg
bound
push
cmp
xchg
xchg
xchg
jns
xchg
jle
xchg
cmp
test
xchg
xchg
mov
xchg
jnp
xchg
jp
lea
xchg
xchg
xor
ja
xor
jl
jbe
ja
cmp
add
test
jns
jg
js
jne
xor
xor
pusha
jbe
pop
js
popa
or
xor
jge
test
jg
jle
jns
jbe
jp
push
sub
jo
sub
jno
jnp
nop
xor
jne
mov
jbe
xchg
or
adc
mov
xchg
mov
xchg
jae
pusha
outs
js
ins
jns
ins
ja
jno
jno
jge
jle
je
lea
xchg
jg
lahf
add
mov
or
mov
pop
jb
fwait
push
sahf
imul
xchg
cmps
mov
test
mov
mov
xchg
test
test
test
jnp
cwde
jnp
xchg
adc
xchg
lea
lahf
xchg
mov
jl
mov
mov
xchg
cmp
outs
mov
test
jp
jg
push
je
jge
outs
cmp
cmp
test
jge
test
cmp
jl
xchg
cmp
or
mov
mov
(bad)
or
test
test
mov
test
mov
jg
jle
jno
js
ins
jbe
push
sub
jae
xor
jno
xor
jp
mov
jns
xchg
jbe
xchg
jne
call
jnp
xchg
test
xchg
jl
xchg
jp
xchg
jns
xchg
jb
xchg
ins
mov
mov
adc
pop
jo
ins
jp
imul
jge
jb
ins
jns
outs
adc
mov
sub
pushf
xchg
adc
lea
xchg
nop
adc
call
jle
add
test
pushf
lahf
stos
xchg
xchg
movs
mov
mov
mov
mov
mov
xchg
or
nop
xchg
test
xchg
xchg
xchg
xchg
cwde
(bad)
pushf
cwde
mov
jp
mov
(bad)
jbe
xchg
xor
imul
jg
fs
addr16
push
xor
jnp
mov
xchg
mov
test
xchg
jge
mov
mov
imul
lea
xchg
mov
mov
js
xor
outs
jb
js
outs
xor
or
or
call
call
jb
xchg
jnp
mov
jg
ja
xchg
ja
xchg
jno
xchg
ins
mov
(bad)
pop
test
jae
arpl
arpl
fs
jg
jo
imul
sbb
lods
add
cwde
nop
adc
mov
xchg
sbb
or
add
movs
scas
sahf
popf
movs
xchg
xchg
popf
xchg
sbb
xchg
nop
je
(bad)
ja
mov
mov
xchg
mov
mov
mov
mov
jle
xchg
jns
xchg
ja
xchg
jbe
mov
test
test
sub
imul
jg
pusha
jle
bound
ins
add
mov
xchg
xchg
xchg
mov
mov
adc
mov
mov
(bad)
jbe
mov
mov
xor
ins
jg
jo
jbe
ja
cmp
js
jg
xchg
jg
mov
xchg
mov
jns
xchg
jo
cdq
outs
(bad)
cwde
push
cdq
push
xchg
jb
xchg
jnp
jnp
xor
js
mov
(bad)
jno
xchg
push
xchg
popa
mov
jp
popa
jne
popa
je
pop
jo
pop
ins
test
mov
push
mov
test
jl
lea
nop
test
xchg
mov
sbb
mov
add
sahf
movs
sahf
cwde
cwde
cwde
nop
xchg
xchg
test
jle
xchg
jge
xchg
jg
xchg
jle
pop
xchg
test
test
test
xchg
jnp
cdq
js
fwait
ja
call
jp
mov
xchg
ins
jnp
fs
popa
xor
ins
jg
jne
mov
mov
test
mov
mov
xchg
xchg
mov
jnp
xchg
js
xchg
jae
xchg
outs
jge
outs
jg
ins
or
xchg
je
mov
lea
test
jg
cmp
js
jge
mov
xchg
xchg
mov
(bad)
cdq
xchg
xchg
jo
xchg
imul
mov
jge
js
jae
ja
cmp
jne
mov
(bad)
jno
xchg
push
xchg
imul
ja
pop
jb
pop
outs
mov
mov
xchg
addr16
jne
mov
sub
pushf
nop
jge
xchg
xchg
mov
mov
test
xchg
test
add
xchg
xchg
pushf
xchg
mov
xchg
xchg
xchg
xchg
adc
mov
mov
xchg
jp
cwde
jnp
cdq
jnp
sahf
jle
mov
xchg
movs
jg
mov
mov
jns
xor
jno
jo
sub
xor
jns
jns
jns
mov
lea
xchg
or
lea
xchg
test
jnp
xchg
jbe
cdq
jo
xchg
outs
js
imul
jge
outs
adc
mov
test
xor
jge
jp
xor
jne
mov
mov
xchg
xchg
xchg
xchg
xchg
cdq
xchg
call
xchg
jb
xchg
imul
mov
jge
je
jno
ja
jl
ja
ja
cmp
jae
xchg
jne
xchg
jne
mov
mov
mov
mov
mov
xchg
pusha
jo
imul
ja
mov
(bad)
js
xchg
jne
xchg
jp
cwde
test
xchg
mov
mov
jge
movs
jno
mov
cwde
mov
mov
mov
xchg
mov
mov
or
xchg
lea
lea
xchg
js
cdq
jbe
popf
jbe
sahf
jbe
mov
mov
movs
jnp
mov
jnp
sub
imul
xor
jnp
push
jne
xor
jns
jae
jle
mov
mov
mov
mov
jnp
lea
popf
xchg
sbb
call
jo
xchg
imul
ja
outs
jle
jae
mov
mov
jl
cmp
pop
cdq
nop
sbb
xchg
xchg
cdq
cwde
cwde
xchg
call
test
outs
mov
xchg
jl
je
outs
ja
outs
jp
jbe
js
jge
test
adc
xchg
jns
nop
ins
jp
bound
jno
pop
jae
bound
ins
imul
lahf
xchg
jno
xchg
jb
pushf
jo
fwait
jbe
fwait
or
adc
xchg
test
(bad)
jbe
mov
add
xchg
mov
mov
mov
(bad)
jne
mov
mov
jnp
xchg
jp
mov
(bad)
ja
xchg
jne
fwait
je
sahf
je
lahf
jne
lahf
jnp
popf
or
mov
jnp
jg
mov
bound
xchg
jbe
jns
je
jne
jg
jp
jp
outs
xchg
lea
lea
mov
mov
mov
mov
mov
xchg
sbb
jns
jno
mov
outs
xchg
ins
jae
outs
jnp
je
mov
cmp
add
jl
cmp
jp
nop
sbb
cwde
cwde
cdq
call
xchg
xchg
xchg
mov
jne
mov
mov
mov
xor
jns
ins
jl
outs
jl
je
jp
jnp
add
test
jbe
jo
xchg
gs
pop
jo
bound
imul
xchg
xchg
push
call
ins
mov
xchg
or
nop
cmp
jge
jno
call
js
sub
ins
xchg
mov
mov
(bad)
jno
(bad)
jnp
mov
js
xchg
ja
(bad)
jbe
(bad)
jbe
xchg
jne
fwait
jne
popf
jbe
popf
js
fwait
jle
xchg
or
mov
js
xor
cbw
nop
popa
xchg
xchg
pop
mov
jns
outs
jae
jp
jg
jbe
cmp
jle
outs
mov
xchg
nop
bound
imul
jl
cmp
jle
cdq
jnp
mov
jns
jo
cmps
jno
mov
jb
jo
(bad)
jne
test
add
mov
xchg
jle
xchg
jg
xchg
test
sbb
xchg
xchg
fwait
xchg
xchg
pushf
cwde
xchg
xchg
xchg
xchg
xchg
mov
jge
mov
mov
mov
cmp
jle
outs
cmp
jnp
jp
jge
test
cmp
cwde
xchg
xor
js
addr16
bound
outs
nop
push
mov
mov
(bad)
sahf
imul
sbb
mov
xchg
test
mov
mov
cmp
test
xchg
outs
test
add
test
mov
fwait
mov
outs
sahf
mov
mov
jle
call
jbe
lea
xchg
js
cwde
jns
call
test
mov
mov
test
test
mov
xchg
lea
jp
push
xchg
test
cmp
or
xchg
bound
imul
test
xchg
xchg
jl
fwait
jp
mov
jnp
jo
stos
jb
movs
ins
outs
cwde
outs
je
jno
mov
cmp
cmp
jns
jl
xchg
jge
xchg
cmp
popf
xchg
mov
nop
popf
xchg
xchg
cwde
xchg
(bad)
xchg
mov
or
mov
test
outs
xchg
cmp
jge
jl
ja
test
xor
je
test
jg
xchg
jae
xchg
imul
imul
or
imul
xchg
mov
add
xchg
jg
jbe
jle
ins
(bad)
addr16
jno
jns
imul
call
mov
xchg
jl
pushf
je
cwde
je
xchg
ja
mov
(bad)
jl
xchg
jle
xchg
sub
jne
mov
pop
nop
xchg
mov
mov
jg
ins
je
ins
jb
je
lea
lea
xchg
jl
lea
xchg
ins
cdq
xchg
imul
mov
add
add
cwde
js
popf
js
movs
jne
test
jl
jae
movs
outs
je
jo
xchg
jb
mov
jl
test
jg
xchg
mov
xchg
jp
xchg
jnp
nop
jle
xchg
xchg
mov
mov
mov
(bad)
mov
mov
or
xchg
mov
mov
mov
jg
outs
jle
jno
xor
jb
test
xor
ja
jae
(bad)
imul
imul
cmp
mov
xchg
imul
xchg
imul
mov
mov
add
jo
outs
imul
jne
jl
jne
xor
ja
test
xchg
xor
outs
sahf
jae
cdq
jae
xchg
js
mov
mov
xchg
and
ins
xchg
mov
xchg
jns
xchg
add
adc
mov
mov
xchg
jns
xchg
je
xchg
je
cdq
jb
xchg
jns
nop
xor
js
xchg
js
nop
jo
xchg
outs
pushf
xchg
gs
mov
mov
ins
add
add
sahf
jbe
movs
je
test
xchg
jnp
jo
xchg
jno
mov
js
js
mov
test
xor
outs
(bad)
jnp
xchg
jl
lea
pop
mov
mov
pop
mov
lea
mov
mov
lea
ja
lea
cmp
test
sub
ins
mov
mov
mov
mov
sub
jb
jle
gs
addr16
ins
jg
outs
adc
mov
xchg
sub
popa
pushf
ja
cwde
jp
xchg
jle
mov
jnp
gs
je
xchg
pushf
add
imul
jns
or
mov
jne
sub
push
je
nop
jp
xchg
mov
mov
mov
sbb
test
cmp
mov
xchg
jl
xchg
jns
xchg
jle
pop
xchg
xchg
cwde
(bad)
jno
nop
outs
pushf
nop
addr16
mov
xchg
sub
jae
jnp
jnp
xchg
xchg
jne
pushf
jae
sahf
jne
mov
mov
sbb
mov
cmp
jg
jno
mov
mov
jg
mov
(bad)
jge
mov
lea
xchg
test
xchg
test
mov
mov
nop
lea
test
jns
jne
xchg
jne
xchg
add
mov
jnp
xchg
mov
xchg
jl
ins
js
imul
jns
jae
mov
jb
mov
test
jle
mov
pop
movs
js
mov
push
xchg
mov
mov
and
sub
add
ins
jno
jbe
mov
xchg
sahf
jl
lahf
js
fwait
jno
xchg
jae
mov
test
test
mov
(bad)
jae
cdq
jns
popf
test
jge
mov
jp
mov
mov
mov
xchg
xchg
sub
jb
mov
test
jbe
mov
lea
mov
mov
test
xor
jbe
jns
jnp
mov
xchg
jne
pushf
jae
popf
jne
mov
mov
test
mov
xchg
ja
xchg
jb
nop
jae
mov
test
xor
je
jg
lea
xchg
xor
jg
jg
pushf
xchg
xchg
xchg
xchg
lea
xchg
xchg
xchg
js
xchg
jae
xchg
jae
mov
test
and
mov
test
jnp
test
jnp
outs
ja
ins
jns
outs
jl
jae
cmp
jp
test
test
jge
mov
stos
jp
stos
jl
cmps
test
push
cwde
nop
push
mov
jge
jo
imul
outs
xchg
jbe
xchg
cmp
mov
jb
jns
cdq
jbe
xchg
jno
xchg
jae
mov
cmp
xchg
xchg
lea
cwde
jge
sahf
mov
xchg
adc
mov
adc
(bad)
mov
mov
mov
xchg
cmp
mov
xchg
mov
mov
mov
test
jbe
jge
test
jle
mov
xchg
js
fwait
jne
popf
js
sahf
ja
sahf
je
lahf
jbe
popf
jge
xchg
jge
mov
xchg
jp
xchg
jne
xchg
jbe
xchg
ja
mov
xor
je
cmp
jne
jle
xchg
jnp
xchg
jp
xchg
jns
cdq
or
sahf
(bad)
xchg
fwait
mov
xchg
xchg
mov
ja
cwde
jno
xchg
jb
lea
sub
push
and
test
cmp
jg
test
jl
outs
jns
jo
test
test
cmp
add
jp
movs
jne
test
popa
stos
sbb
pop
mov
pop
mov
jle
jb
outs
sub
add
imul
cwde
mov
mov
lea
(bad)
ja
xchg
jne
nop
jo
mov
xchg
jge
gs
imul
xchg
mov
xchg
adc
fwait
call
jg
xchg
jl
xchg
jl
xchg
js
xchg
outs
js
data16
gs
fs
addr16
ins
cmp
ins
mov
lea
mov
mov
ja
cmp
jg
jge
call
jnp
popf
jns
sahf
jl
pushf
add
mov
mov
xchg
jl
xchg
jge
mov
test
xor
jp
jle
xchg
jnp
xchg
js
xchg
jne
xchg
je
xchg
jl
xchg
adc
mov
(bad)
cdq
mov
nop
xchg
jle
xchg
jbe
cdq
jo
cdq
jno
xchg
jnp
mov
cmp
jl
cmp
sub
ins
jg
outs
jl
jb
xchg
test
add
jle
jle
cdq
jns
mov
imul
xchg
pop
lahf
xchg
pop
cdq
fwait
popa
mov
jle
jne
js
ins
jne
add
cmps
outs
push
je
mov
jo
test
xor
je
mov
xchg
test
xor
jbe
jbe
je
jns
xchg
add
xchg
xchg
pushf
sahf
xchg
cwde
sahf
(bad)
xchg
pushf
mov
test
xor
jb
jo
popf
data16
fs
popa
je
bound
addr16
jb
outs
jnp
add
push
xchg
add
mov
cwde
cmp
test
mov
mov
xchg
mov
xchg
adc
mov
xchg
test
jg
xchg
jnp
xchg
js
xchg
je
xchg
jno
(bad)
jo
nop
ja
(bad)
jl
mov
mov
or
mov
nop
jne
cdq
jo
call
cmp
jae
jp
jge
ins
jg
ins
test
sub
or
add
or
call
mov
xchg
gs
xchg
addr16
pushf
push
xchg
jo
mov
test
add
outs
data16
outs
xchg
jp
mov
cmp
jnp
ins
jg
push
outs
jb
outs
jae
jno
je
je
ja
ja
add
xchg
mov
cwde
mov
mov
js
lea
mov
sub
ins
lahf
arpl
pusha
outs
xchg
pusha
jae
data16
outs
sub
popa
add
mov
xchg
jle
xchg
jnp
(bad)
jnp
nop
jg
mov
test
xchg
mov
xchg
test
xchg
mov
xchg
mov
jg
cmp
jnp
ja
xchg
jne
xchg
jno
(bad)
outs
(bad)
mov
jb
mov
test
add
adc
jl
(bad)
jne
cwde
jno
cdq
jb
xchg
jl
mov
js
jge
jnp
jns
outs
jl
ins
or
test
xchg
mov
xchg
xchg
add
jb
jle
mov
mov
xchg
jno
fwait
jno
sahf
ja
xchg
js
mov
mov
add
ins
popa
popf
outs
push
jae
xchg
xor
ja
outs
js
jbe
ins
js
ins
ja
outs
jnp
jb
jae
xchg
xchg
mov
mov
test
jb
xchg
ins
xchg
xchg
xchg
xchg
ja
movs
ins
push
bound
bound
push
ins
je
gs
fs
push
xchg
xchg
test
jg
xchg
jle
xchg
sbb
mov
(bad)
xchg
test
adc
(bad)
xchg
mov
add
jp
je
(bad)
jae
nop
jo
mov
test
sub
je
jge
mov
jle
je
nop
jnp
mov
jl
lea
xchg
jb
cwde
je
xchg
jge
mov
ja
xor
jl
jl
imul
xchg
or
mov
xchg
xchg
xor
or
xchg
js
cdq
jns
pushf
jle
xchg
jg
xchg
sub
arpl
sahf
imul
lea
outs
push
outs
jo
outs
jae
outs
je
jae
jo
ins
jns
push
jne
jp
imul
test
add
pop
popf
sbb
popf
imul
xchg
mov
jnp
mov
outs
popf
data16
data16
ins
jnp
jb
outs
je
imul
cmp
test
xchg
xchg
adc
nop
sbb
mov
mov
xchg
test
jg
mov
xchg
xchg
xchg
jl
(bad)
jge
mov
mov
mov
mov
test
jle
lahf
jns
mov
jne
jno
xchg
outs
jns
ins
je
jne
mov
jl
mov
xchg
je
xchg
ja
nop
jg
mov
test
jg
jle
imul
xchg
jge
jo
mov
mov
jp
mov
jbe
test
test
mov
xchg
mov
lea
xchg
jg
cdq
test
xchg
xchg
mov
cwde
add
push
xchg
push
test
jle
ins
jle
jne
imul
js
jno
jo
outs
js
push
jae
jns
data16
push
jae
jle
push
xchg
mov
fwait
jns
pushf
jb
fwait
outs
mov
xchg
xchg
jge
fwait
je
sahf
outs
jne
push
xchg
imul
jno
jle
je
jo
xor
jle
jle
add
adc
xchg
xchg
mov
mov
cmps
xchg
mov
sbb
call
nop
adc
or
outs
jge
outs
xchg
xchg
jbe
sahf
jno
lahf
jo
popf
outs
jbe
imul
jbe
imul
ja
test
mov
lea
mov
jg
(bad)
ja
mov
jl
xor
push
nop
adc
mov
mov
mov
mov
xchg
jne
nop
jae
mov
lea
xchg
js
xchg
test
mov
mov
xchg
mov
mov
mov
pop
mov
mov
test
ins
outs
js
jae
outs
jnp
ins
jnp
outs
jge
jb
jo
jae
jno
js
fs
fs
push
sub
imul
jle
jle
xchg
jge
cdq
jae
call
pusha
jle
pop
jnp
pop
jle
data16
xchg
jae
xchg
outs
adc
jnp
xor
jne
ja
jl
jae
cmp
jg
(bad)
xchg
jg
xchg
adc
xchg
mov
mov
test
pop
xchg
jg
xchg
jns
cdq
js
xchg
jl
xchg
js
mov
xchg
test
mov
sub
ins
cmp
jnp
mov
xchg
outs
imul
mov
test
sub
outs
outs
xchg
test
jns
cmp
jge
test
jge
lea
xchg
jp
xchg
(bad)
ins
adc
imul
adc
xchg
ins
lea
or
xchg
test
mov
sub
outs
xchg
mov
nop
xchg
lea
(bad)
pop
mov
jg
bound
imul
jae
jp
jb
je
sub
jne
jbe
ins
jbe
arpl
arpl
addr16
addr16
push
lea
mov
(bad)
jle
xchg
jl
cwde
jb
cwde
push
xchg
data16
pop
jae
pop
outs
cwde
pusha
jb
imul
mov
lea
mov
test
jnp
jg
je
jns
jbe
jbe
xor
jb
jg
mov
mov
xchg
lea
pop
cdq
test
mov
mov
nop
je
mov
mov
mov
xchg
test
xchg
push
jnp
cmp
je
lea
xchg
addr16
popa
push
bound
gs
gs
data16
push
test
xchg
test
jle
jns
jl
mov
mov
pop
mov
xchg
jp
mov
xchg
jae
xchg
jae
cwde
je
xchg
jo
xchg
ins
adc
call
imul
jns
jbe
mov
xchg
mov
and
imul
lahf
xchg
add
popa
jne
ins
jae
je
ja
outs
ja
jb
mov
xchg
xchg
jg
jp
jbe
ins
ja
fs
arpl
jne
ins
jae
jno
xchg
ja
xchg
jle
xchg
test
jne
cwde
ins
js
data16
pop
imul
test
jge
jns
test
xchg
xor
jae
jns
jbe
jns
test
mov
mov
mov
mov
add
or
mov
mov
mov
xchg
mov
test
xchg
xchg
ins
xchg
mov
test
and
test
ja
xor
outs
push
arpl
pop
mov
mov
and
imul
jno
jns
cmp
ja
js
js
jg
jge
jp
xchg
xchg
test
cmp
jl
js
xchg
jnp
xchg
jle
call
jae
xchg
push
fwait
push
mov
cwde
xchg
ins
xchg
xchg
jae
mov
mov
mov
mov
xchg
jl
xchg
and
xchg
xchg
pop
xchg
xchg
push
xchg
lea
mov
add
jb
imul
jle
push
mov
nop
ins
or
xor
js
jo
jge
js
data16
ins
jns
je
xchg
jnp
xchg
cmp
cwde
lea
jge
cwde
je
xchg
push
xchg
bound
pop
(bad)
outs
xchg
jge
ja
xchg
add
jl
jns
jne
cmp
jo
jns
(bad)
jl
mov
add
jl
jno
xchg
xchg
test
test
cmp
add
xchg
mov
mov
(bad)
jle
xchg
jg
xchg
and
popa
mov
xchg
xchg
xor
ins
xchg
mov
xchg
sbb
addr16
ins
jne
outs
je
jae
xor
ja
ja
jp
jb
ja
jbe
jns
cmp
jg
mov
mov
mov
xchg
test
mov
xchg
jg
fwait
js
pushf
ins
ja
push
movs
mov
mov
xchg
xchg
jne
mov
mov
mov
(bad)
jp
xchg
jge
call
xchg
bound
push
xchg
mov
mov
add
jle
test
xchg
mov
cmp
cmp
test
mov
nop
xchg
xchg
sbb
cwde
imul
pop
cwde
ins
pop
nop
jae
xchg
jl
jno
test
jg
push
sub
jb
cmp
xor
xchg
xor
jns
add
test
mov
xchg
xchg
test
xchg
xor
jp
cmp
xchg
mov
mov
nop
jns
xchg
jle
xchg
jnp
lea
mov
mov
xor
jae
xchg
test
test
and
fs
sub
jne
jne
jnp
ja
jp
cmp
ja
je
jge
ins
js
outs
jbe
jb
jl
jns
js
lea
nop
jle
nop
jge
mov
cwde
nop
jno
lea
test
jo
outs
jae
imul
xchg
cdq
pushf
jb
xchg
jbe
xchg
jb
mov
xchg
jns
xchg
jp
cdq
jle
pushf
test
(bad)
gs
xchg
pusha
nop
xchg
pop
mov
xchg
jle
add
sbb
call
ins
mov
jnp
mov
xchg
cmp
xchg
cwde
lea
xchg
popf
xchg
jns
call
jb
(bad)
jbe
test
jp
ins
je
jno
jge
push
jge
js
jge
mov
cwde
test
xor
or
jae
mov
mov
mov
xchg
pop
or
xchg
cmp
jg
jl
js
mov
mov
jne
xchg
jp
nop
js
mov
mov
mov
xor
ins
test
sub
imul
jb
cmp
jge
cmp
xchg
test
xor
jae
ja
outs
ja
jo
test
(bad)
jbe
xchg
jnp
xchg
jle
xchg
test
(bad)
jae
xchg
outs
popf
xchg
outs
fwait
xchg
jl
sahf
jo
mov
and
jbe
xchg
jae
xchg
js
xchg
jns
xchg
jnp
fwait
and
xchg
xchg
addr16
xchg
pusha
mov
mov
(bad)
jno
add
sbb
pushf
imul
mov
test
jne
jns
(bad)
jg
nop
or
popf
xchg
xchg
movs
nop
xchg
movs
mov
jge
mov
sub
bound
pop
lea
cmp
sub
jo
jl
push
jg
jns
cmp
jge
nop
jnp
mov
mov
xchg
or
lea
mov
mov
mov
mov
mov
mov
mov
test
test
jl
jns
mov
jb
lea
js
nop
jbe
mov
mov
ja
test
xchg
test
xor
ins
jno
jb
cmp
cmp
add
jge
mov
xor
jne
jp
ins
jns
ins
js
outs
jae
jb
xchg
jbe
xchg
jl
xchg
test
nop
jne
xchg
outs
popf
xchg
outs
call
jo
mov
jl
mov
mov
test
js
js
pushf
jnp
lahf
sub
mov
mov
jp
mov
add
and
sahf
ins
mov
or
adc
xchg
jge
xchg
jg
cdq
adc
test
xchg
movs
xchg
js
test
sub
arpl
arpl
jo
test
jl
imul
jbe
jge
xchg
xchg
xchg
sbb
xchg
mov
test
nop
pusha
xchg
test
mov
xchg
mov
mov
xchg
jge
jp
mov
jb
mov
js
lea
xchg
mov
xchg
cmp
jnp
xor
ja
xor
jnp
js
cmp
test
or
mov
test
cmp
jge
jnp
push
mov
cwde
outs
jo
jae
cdq
jnp
cwde
test
nop
jns
xchg
je
xchg
jb
mov
jb
jo
popf
imul
js
push
movs
jo
mov
jnp
je
mov
js
jg
lahf
xchg
(bad)
jno
nop
imul
mov
add
jge
je
mov
mov
xchg
je
xchg
jno
call
jnp
pushf
jl
sahf
jl
mov
mov
xchg
mov
lahf
xchg
jg
xchg
sub
push
jl
mov
jle
ins
jbe
jae
test
jle
outs
ja
jne
jge
add
(bad)
fwait
xchg
mov
xchg
add
adc
mov
xchg
push
mov
xchg
xchg
imul
jle
test
mov
mov
mov
mov
mov
cmp
jp
add
jg
cmp
jnp
cmp
jns
cmp
test
xchg
lea
xchg
test
jle
imul
jo
jo
fwait
jp
call
xchg
jns
xchg
js
mov
jg
xchg
jb
cdq
ins
jne
ins
jne
ins
jle
outs
and
test
jns
jno
test
jle
jnp
mov
ja
mov
and
mov
(bad)
pop
add
call
jns
popf
jns
popf
jbe
lahf
jne
cdq
jae
xchg
jnp
xchg
xchg
xchg
jo
fwait
js
fwait
jne
popf
jp
sahf
jp
mov
xchg
sahf
sbb
lea
test
jbe
xor
outs
test
jl
outs
jbe
jbe
mov
xor
jl
jle
xchg
cwde
mov
mov
xchg
mov
jae
xchg
imul
adc
xchg
bound
je
mov
mov
jns
jb
test
test
test
cmp
jge
jge
jno
test
xchg
or
xchg
cmp
mov
mov
xchg
(bad)
jle
mov
mov
mov
mov
mov
xchg
push
pushf
push
mov
jp
mov
xchg
sbb
xchg
mov
ja
xchg
jb
cwde
je
popf
jae
mov
js
imul
ja
outs
jl
ins
jg
jo
lods
js
movs
jg
cwde
cmp
jae
jp
mov
xchg
ins
inc
xchg
pop
add
xchg
imul
sbb
sahf
js
fwait
jne
cwde
jnp
xchg
test
nop
outs
mov
jl
jnp
pushf
jnp
sahf
jp
mov
xchg
xchg
mov
cdq
xchg
mov
xchg
jp
xor
jno
xor
js
mov
jbe
cmp
jp
nop
jnp
xchg
sbb
xchg
nop
mov
jns
xchg
jno
xchg
push
xchg
mov
nop
pop
xchg
nop
je
mov
mov
xchg
xchg
xor
ja
jg
je
jnp
jne
outs
jbe
jae
mov
cmp
jl
xchg
jg
xchg
jg
cwde
jl
xchg
jge
xchg
jle
mov
or
(bad)
jg
mov
ja
lea
nop
jno
xchg
jo
xchg
ins
sbb
xchg
jge
xchg
mov
xchg
adc
nop
xchg
xchg
jge
jp
xchg
jge
pushf
jge
mov
je
imul
mov
jge
imul
test
sbb
xchg
jb
cdq
imul
imul
jb
jns
xchg
jns
xchg
jns
popf
js
popf
jne
pushf
jp
cdq
sub
jns
xchg
js
xchg
jge
cdq
jge
fwait
jl
lahf
add
lea
nop
mov
mov
adc
jl
jne
mov
mov
mov
test
mov
jne
xchg
jbe
xchg
jns
xchg
sbb
xchg
xchg
jl
xchg
jne
xchg
outs
jnp
data16
popa
jns
pop
js
pop
jns
pop
or
mov
xchg
jge
test
jge
ins
jl
outs
jl
jne
js
js
jl
outs
xor
jg
mov
jg
jl
cwde
jl
cdq
js
xchg
jns
xchg
jp
lea
jle
cmp
or
nop
je
xchg
jae
xchg
jno
xchg
ins
sbb
cwde
jb
xchg
jg
nop
mov
xchg
test
mov
mov
xchg
xchg
test
jle
test
jae
imul
test
xchg
test
cwde
outs
pop
lahf
addr16
mov
ins
bound
jg
jbe
xchg
js
pushf
ja
sahf
je
lahf
jns
fwait
jle
xchg
xchg
mov
mov
lea
xchg
jg
cdq
xchg
mov
pop
mov
xchg
mov
xor
jne
mov
lea
mov
mov
mov
xchg
jb
xchg
jb
xchg
jne
cwde
jp
xchg
js
xchg
jp
xchg
ja
xchg
jno
lea
gs
arpl
pusha
je
pusha
ja
add
xchg
cmp
xor
cmp
js
xor
outs
jp
imul
mov
adc
xchg
jne
(bad)
jbe
mov
jge
xor
jbe
jle
xchg
xchg
mov
(bad)
jne
xchg
je
xchg
jb
xchg
outs
test
ja
jae
mov
test
mov
xchg
add
xchg
lea
imul
stos
ins
je
imul
sub
stos
jge
movs
or
ja
ins
imul
movs
pop
add
lea
mov
mov
je
xchg
ja
call
jbe
cdq
jns
xchg
jg
test
je
sub
push
mov
mov
xchg
jg
cwde
mov
xchg
lea
mov
test
mov
mov
jp
mov
mov
lea
xchg
jb
xchg
jb
xchg
jae
xchg
ja
xchg
je
xchg
jbe
nop
je
nop
outs
ja
ins
jae
addr16
data16
gs
data16
push
jge
test
cmp
jg
jb
jl
cmp
push
jbe
mov
test
jge
cmp
jle
mov
mov
mov
mov
lea
mov
mov
jl
jne
sub
outs
jnp
jo
jnp
jle
jle
ja
mov
lea
mov
mov
(bad)
ins
or
jle
cmp
test
sbb
jo
xchg
push
lea
sub
jbe
ins
jge
jae
test
lea
mov
jne
ins
imul
add
test
mov
sbb
xchg
jae
mov
jge
jl
js
jo
test
xchg
xchg
mov
mov
xchg
jnp
cwde
xchg
mov
mov
mov
xchg
mov
mov
mov
xchg
xchg
jbe
lea
jne
mov
jbe
mov
mov
jae
mov
test
sub
jb
outs
ja
jo
js
cmp
cmp
jge
jns
jg
jo
ja
cmp
ja
mov
outs
jb
push
and
fs
xchg
test
test
je
test
test
xor
jns
ins
jge
addr16
addr16
push
jl
jl
add
xor
jo
test
js
js
jle
lea
movs
test
test
jg
mov
test
mov
sub
jnp
jae
mov
(bad)
movs
or
mov
je
jo
popf
ins
pop
popf
addr16
cdq
pop
add
xchg
jl
nop
jl
mov
mov
(bad)
ja
xchg
jne
xchg
outs
jge
outs
jbe
outs
jne
jb
jne
jge
jb
ins
jbe
data16
mov
mov
(bad)
je
xchg
jp
xchg
test
mov
and
nop
test
mov
add
test
jl
xchg
xchg
xchg
mov
mov
mov
mov
mov
xor
jne
jbe
jae
jbe
jbe
jae
xor
jg
jnp
jnp
jne
xor
jb
test
mov
(bad)
jno
xchg
ins
jne
data16
pop
mov
cwde
mov
test
and
jo
jl
cmp
jns
xor
jb
xchg
and
popa
outs
jnp
outs
jnp
outs
jge
jbe
jns
jp
jle
cmp
jns
jge
jg
jns
jns
xor
jb
test
test
test
test
and
xchg
ins
cwde
mov
sub
sahf
jne
lahf
jp
fwait
adc
xchg
sahf
xchg
mov
fwait
jle
call
push
mov
add
cwde
pop
(bad)
jp
nop
ja
nop
outs
or
jns
jns
ins
jle
ins
sub
gs
imul
mov
adc
lea
lea
xchg
xor
jnp
jg
nop
jge
xchg
jp
nop
jl
mov
xchg
test
test
add
xchg
cmp
jl
jns
jle
cmp
xor
jo
xchg
xchg
jle
jbe
xor
jb
test
xchg
lea
xchg
ins
je
imul
nop
lea
lea
mov
test
and
push
jne
mov
test
xchg
mov
xchg
sbb
pop
imul
ins
je
jb
jg
js
js
jle
jbe
jnp
jl
jns
jg
add
mov
mov
mov
xchg
add
xchg
cdq
mov
test
jge
pushf
jl
call
xchg
xchg
fwait
xchg
xchg
fwait
call
adc
mov
xchg
jle
add
xchg
xchg
popf
xchg
mov
test
jp
mov
xchg
jle
xor
ins
push
push
sub
imul
xchg
nop
jne
xchg
jns
xchg
add
movs
mov
jge
mov
test
cmp
jle
jnp
nop
js
xchg
jbe
mov
mov
cmp
jl
jns
cmp
outs
cmp
test
test
cmp
cmp
jno
test
mov
mov
mov
mov
cmp
test
mov
xchg
mov
mov
xchg
imul
mov
sahf
nop
push
mov
push
movs
jge
pushf
ja
xchg
jo
mov
imul
outs
mov
mov
sbb
pop
ins
jle
jo
push
xchg
test
test
xchg
test
xchg
nop
mov
(bad)
jo
(bad)
je
mov
mov
test
jg
cwde
jbe
xchg
jb
(bad)
outs
fwait
xchg
cmp
mov
xchg
xchg
fwait
xchg
call
call
jae
jl
xchg
jle
pop
jae
add
xchg
sahf
test
cdq
test
xchg
movs
xchg
mov
jle
xchg
ins
mov
test
jge
push
ins
ins
jle
jb
push
lea
mov
nop
jbe
xchg
jp
pop
cdq
lea
mov
mov
xor
jp
add
xchg
test
jl
ja
xor
jns
test
test
cmp
jbe
nop
outs
(bad)
(bad)
jo
xchg
jo
xchg
outs
adc
xchg
jg
jb
lea
mov
mov
lea
(bad)
arpl
popa
(bad)
call
push
movs
mov
test
jl
lahf
je
cwde
ins
pop
mov
mov
mov
mov
gs
pusha
jno
pop
jno
pop
je
pop
jns
push
mov
mov
mov
lea
lea
pop
xchg
lea
xchg
je
xchg
jbe
xchg
jnp
xchg
jge
lea
mov
popf
nop
outs
popf
mov
mov
mov
popf
xchg
xchg
mov
cwde
movs
mov
adc
ja
pop
ins
je
add
scas
mov
mov
test
test
sub
outs
jle
ins
jns
outs
jnp
jne
ins
or
lea
nop
ja
(bad)
jns
lea
xchg
mov
sub
lahf
jl
cdq
jg
xchg
js
nop
je
lea
jae
xor
jp
cmp
js
test
xchg
cmp
mov
xchg
cdq
imul
xchg
xchg
jl
mov
nop
outs
js
gs
bound
pop
mov
xchg
pushf
pop
lahf
fwait
pop
mov
push
lods
adc
push
mov
pop
mov
mov
mov
mov
sub
fs
pusha
jns
pop
add
mov
xchg
imul
jp
jnp
xchg
xor
jb
nop
je
cwde
ja
call
jg
xchg
test
mov
popf
(bad)
outs
sahf
mov
lea
pop
mov
cwde
cmps
mov
mov
xchg
jne
pop
push
add
xchg
lea
lea
mov
jne
xchg
xor
jno
jns
jnp
jns
jb
mov
(bad)
ja
lea
(bad)
js
mov
mov
mov
lahf
xchg
cmp
jp
jg
xchg
jns
nop
jne
mov
test
jg
jp
jg
jle
jb
jle
jg
jb
jge
mov
mov
xchg
jp
xchg
jbe
lahf
outs
pushf
mov
nop
cmps
imul
mov
or
lea
mov
xchg
mov
pop
xchg
xchg
pusha
fwait
fwait
pop
mov
pop
test
push
stos
jns
mov
pop
mov
xchg
jae
xor
outs
jne
push
jge
add
lea
push
xchg
imul
mov
jnp
xor
cwde
xchg
jbe
call
jge
lahf
and
call
jae
mov
mov
mov
mov
adc
xchg
movs
mov
or
jbe
pop
push
add
cmp
mov
mov
mov
mov
mov
xchg
jg
jnp
jle
jbe
mov
(bad)
jnp
lea
mov
mov
mov
mov
pop
lahf
add
jp
jl
pushf
cmp
xchg
jns
lea
test
add
test
test
ja
cmp
adc
sahf
jns
popf
jb
movs
push
movs
arpl
push
test
mov
jp
xchg
jo
(bad)
or
test
lea
pusha
mov
pusha
cmps
xchg
pop
stos
mov
jge
stos
jbe
mov
arpl
push
jbe
jge
jns
outs
cmp
and
imul
movs
xchg
outs
pushf
xchg
jb
xchg
jns
cdq
jl
fwait
xor
fwait
xchg
jbe
call
jl
mov
cdq
cdq
sbb
test
test
mov
mov
xchg
jnp
cdq
adc
lea
mov
or
cmp
sahf
sahf
mov
mov
adc
test
jge
add
mov
mov
jl
mov
xchg
test
mov
xchg
or
and
sahf
xchg
xor
pop
or
mov
mov
xchg
adc
cmps
cmps
popa
movs
cmps
bound
addr16
lods
imul
xchg
outs
jg
data16
xchg
sbb
pop
pushf
mov
xchg
arpl
fs
arpl
push
jno
mov
test
test
jg
jne
ja
jl
test
xchg
jg
mov
jbe
mov
jb
mov
xchg
jne
xchg
jnp
cwde
jle
fwait
xor
jo
xchg
je
call
jns
mov
cwde
fwait
jle
pop
xchg
xor
jno
xor
je
mov
nop
jg
xchg
xchg
mov
add
or
pushf
add
cmp
pushf
cwde
mov
lea
xchg
mov
xchg
add
lea
mov
xchg
test
test
test
xchg
lea
nop
jge
xchg
add
jg
mov
outs
nop
xchg
mov
mov
mov
jp
pop
(bad)
nop
mov
test
outs
test
bound
addr16
lods
push
cmps
jae
lahf
or
jo
mov
xchg
jg
xchg
sbb
movs
lea
nop
imul
lods
jp
test
jb
je
xchg
jae
xchg
test
jg
js
jns
jnp
xchg
jl
movs
jl
stos
cmp
jns
test
mov
mov
nop
jl
xchg
jg
cdq
sub
outs
lahf
nop
je
cwde
ja
pushf
jne
fwait
ja
mov
xchg
sahf
jnp
xchg
jg
add
js
mov
mov
cmp
cmp
test
mov
jg
xchg
add
adc
cmp
fwait
xchg
mov
mov
xchg
(bad)
xchg
xchg
lea
mov
xchg
mov
jg
xchg
xchg
test
xchg
xchg
xchg
mov
mov
xchg
mov
xchg
sbb
test
or
mov
cdq
mov
sahf
xchg
jno
cmps
push
mov
stos
cmps
imul
xchg
mov
mov
jp
push
jge
xchg
jg
xchg
test
test
mov
mov
mov
sub
outs
cmps
jbe
mov
jl
je
mov
xchg
jne
jle
cmp
jl
cwde
jp
movs
js
stos
jns
mov
jge
jge
scas
cmp
jge
lea
xchg
xor
mov
jbe
call
js
mov
xchg
xchg
jnp
mov
xchg
test
jl
jno
ja
xor
jno
mov
jns
cmp
jge
jns
cmp
jg
xchg
cmp
add
popf
mov
mov
lea
mov
test
jns
mov
mov
mov
jle
test
jbe
mov
mov
mov
mov
mov
xchg
xchg
jne
mov
mov
mov
(bad)
js
mov
mov
mov
mov
scas
mov
mov
jo
fwait
jo
sahf
jno
lahf
outs
lahf
fwait
jb
xchg
jbe
pop
jns
outs
jbe
push
jl
nop
jle
xchg
sub
jo
test
xchg
mov
jo
jns
mov
jp
ja
xchg
jae
mov
mov
sub
jae
jnp
mov
jns
movs
jbe
test
jg
js
stos
jle
mov
jg
mov
call
xchg
jbe
cwde
jne
xchg
jne
popf
ja
mov
mov
je
jnp
nop
jnp
(bad)
jnp
xchg
test
test
test
sub
je
jbe
js
ja
jp
js
jl
test
sbb
(bad)
lods
pushf
lea
test
mov
mov
or
test
xchg
add
mov
lea
jnp
lea
mov
xchg
xchg
test
je
lea
mov
mov
jnp
mov
cwde
ja
lahf
jg
mov
mov
test
jns
cwde
js
xchg
js
xchg
ja
xchg
jae
nop
jne
mov
test
jb
ins
jo
imul
lea
cdq
xchg
xchg
xchg
mov
test
jl
lahf
jp
pushf
js
call
imul
add
jl
cwde
jns
mov
sub
sahf
add
sub
push
mov
mov
xchg
ja
xchg
ja
xchg
jbe
fwait
js
mov
mov
imul
cwde
jbe
(bad)
ja
mov
mov
test
jle
addr16
ins
jne
outs
outs
je
jno
jae
jle
add
xchg
mov
stos
pushf
(bad)
call
add
xchg
xchg
mov
xchg
jae
mov
lea
mov
test
jl
mov
lea
jns
xchg
or
xchg
sbb
mov
mov
jno
mov
add
xchg
ja
pushf
jg
popf
mov
(bad)
lods
xchg
xor
mov
mov
jne
test
jge
mov
jg
jl
ins
jnp
imul
ins
jg
jb
xor
jle
mov
mov
mov
mov
sub
js
jge
xchg
jbe
mov
imul
mov
xchg
jp
mov
jg
jno
test
jle
jge
mov
ins
mov
(bad)
je
xchg
jp
xchg
jnp
xchg
jp
cdq
jl
mov
sbb
mov
push
lahf
jae
xchg
je
(bad)
jne
mov
outs
pop
jnp
gs
push
jnp
addr16
imul
xor
mov
cdq
mov
nop
cdq
mov
cmp
jg
add
jp
test
cmp
jno
mov
mov
xchg
jl
xchg
mov
mov
xchg
jg
xchg
mov
xchg
mov
jle
xchg
jns
xchg
je
mov
mov
xchg
sub
jl
xor
jbe
xchg
ja
xchg
jg
xchg
xchg
xchg
xchg
mov
mov
xchg
sub
xchg
jne
xchg
jl
jne
push
imul
jnp
jbe
xchg
nop
xchg
and
movs
mov
xchg
test
test
cmp
jl
jo
mov
mov
outs
lea
lea
xchg
jl
sahf
js
mov
jge
je
popf
jp
xchg
jge
xchg
ins
xchg
nop
jbe
xchg
jge
xchg
sbb
xchg
mov
jle
jns
popf
jae
mov
push
mov
push
xchg
js
mov
test
js
data16
jl
data16
bound
addr16
outs
test
lea
mov
add
mov
nop
cmp
jnp
cmp
xchg
jp
mov
mov
xchg
ja
ins
js
jno
cmp
jge
mov
mov
nop
test
lea
xchg
xchg
popf
xchg
je
xchg
jno
mov
mov
test
add
xchg
mov
lea
mov
xchg
mov
or
mov
xchg
jns
outs
jne
jno
jl
jb
imul
xor
or
mov
xchg
jbe
mov
lea
mov
mov
cmp
or
mov
outs
lea
fwait
jnp
sahf
jnp
lahf
ja
mov
jnp
jg
test
jo
test
mov
xchg
jns
xchg
sbb
xchg
sahf
add
popf
jae
mov
push
mov
push
xchg
jl
lea
test
jnp
push
ins
bound
sub
push
(bad)
ja
xchg
jns
add
cmps
xchg
xchg
xchg
test
jns
cmp
jg
jp
mov
xchg
cmp
jnp
jns
outs
jb
ins
jb
jo
jnp
imul
xchg
mov
cwde
xchg
test
jg
cwde
jns
xchg
jae
xchg
jno
mov
mov
and
cmp
jp
ja
jge
jle
jbe
test
test
mov
or
mov
jle
jo
xchg
imul
jbe
outs
jb
push
jno
mov
nop
jg
cdq
xchg
xchg
lahf
cmps
nop
mov
xchg
je
xchg
jne
xchg
js
xchg
jp
mov
cmp
test
lea
cmp
sbb
pushf
jp
xchg
jg
mov
jnp
jg
mov
xchg
xchg
jg
xchg
xchg
mov
sbb
ins
push
mov
push
fwait
jp
xchg
sbb
bound
xchg
xchg
imul
jne
mov
add
mov
stos
(bad)
xchg
xchg
or
mov
mov
xchg
xor
jbe
jge
jne
jns
outs
jbe
outs
jne
imul
cmp
mov
pop
xchg
test
jp
xchg
jbe
xchg
je
mov
mov
and
arpl
jb
ja
jne
jl
jnp
jge
jle
xchg
mov
xchg
cwde
adc
mov
mov
jle
push
lea
sub
push
jnp
cdq
cmp
xchg
popf
mov
mov
mov
jp
sahf
jp
fwait
jnp
call
jge
mov
test
jge
xchg
or
jge
xchg
mov
(bad)
jge
nop
add
call
xchg
lea
mov
jle
call
outs
pop
mov
pop
xchg
xchg
mov
addr16
jno
mov
xchg
sub
popa
jae
pop
adc
call
xchg
sahf
jge
mov
mov
xchg
cmp
add
ja
jl
jne
outs
je
imul
jb
gs
bound
addr16
outs
jle
jbe
xchg
lea
nop
adc
sahf
xchg
jp
xchg
jns
mov
xchg
push
jb
xor
jb
jne
js
jne
jge
jns
cmp
or
test
adc
sbb
jbe
jl
ins
mov
cwde
jle
mov
test
cwde
mov
sahf
stos
xchg
mov
adc
xchg
pushf
jge
xchg
jl
xchg
jl
xchg
adc
mov
mov
or
xchg
mov
lea
xchg
ja
xchg
jl
xchg
jg
xchg
mov
xchg
xchg
xchg
cwde
xchg
xchg
xchg
nop
xchg
xchg
mov
xor
imul
call
test
mov
mov
mov
mov
jne
xchg
sub
pusha
jae
pop
adc
add
mov
xchg
movs
js
xchg
ja
(bad)
jne
lea
mov
jg
jg
jp
jp
jp
jbe
jbe
jne
push
outs
bound
pop
cmp
jp
jle
jae
xchg
mov
pop
xchg
adc
mov
mov
jle
xchg
jne
mov
test
outs
jae
jno
jnp
jne
jne
test
mov
xchg
mov
movs
mov
ja
cmps
jo
mov
adc
jns
xor
xor
mov
test
xchg
rcr
pushf
xchg
stos
xchg
xchg
movs
mov
adc
mov
nop
cdq
jge
xchg
jge
mov
mov
add
mov
xchg
js
call
jl
cdq
test
xchg
cdq
nop
xchg
xchg
mov
xchg
(bad)
jle
xchg
jne
xchg
jo
xchg
jae
cdq
jge
xchg
xchg
jae
mov
jae
mov
mov
xchg
sub
arpl
pop
or
add
(bad)
je
mov
xchg
cwde
jne
xchg
jne
xchg
jne
nop
jnp
mov
xchg
xor
jbe
jge
imul
jbe
data16
pusha
xor
jnp
test
cmp
xchg
mov
(bad)
jg
xchg
adc
xchg
pushf
adc
xchg
jg
xchg
jne
lea
xchg
sub
ins
jp
imul
js
jp
mov
xchg
xchg
mov
sahf
mov
jns
mov
xchg
add
jns
xchg
jg
mov
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
lea
fwait
jne
mov
lahf
mov
mov
mov
xchg
xchg
jl
jg
mov
mov
lea
mov
xchg
jle
nop
mov
mov
lea
lea
mov
mov
xor
outs
js
push
xchg
sbb
push
mov
mov
jo
test
xchg
fwait
jae
xchg
je
cwde
je
xchg
jp
xchg
jge
mov
xchg
xchg
xor
jp
jnp
xor
jbe
mov
jle
test
mov
xchg
cwde
jle
pushf
jp
lahf
jp
mov
nop
xchg
adc
xchg
ja
mov
mov
sub
push
sub
ja
xchg
cmp
test
xchg
xchg
call
cdq
jnp
cwde
je
cwde
jb
xchg
jb
lea
xchg
jnp
xchg
cmp
scas
xchg
call
cmp
mov
adc
xchg
jge
popf
js
movs
jp
cmps
jbe
mov
xchg
test
mov
popf
jp
mov
mov
ins
cmps
cdq
jne
xchg
jge
pop
or
mov
test
test
test
test
mov
mov
or
jg
jnp
jb
jle
test
cmp
jno
add
pop
mov
imul
call
js
cwde
jnp
xchg
jns
lea
lea
xchg
cmp
jp
xchg
lea
mov
and
push
(bad)
js
xchg
jp
popf
jp
mov
xchg
movs
jp
mov
(bad)
xchg
jg
xchg
je
mov
test
sub
addr16
imul
adc
xchg
sahf
nop
mov
jle
xchg
jp
xchg
jns
mov
mov
jl
mov
add
xor
mov
js
mov
cmps
movs
jne
mov
mov
pop
pushf
jns
movs
jnp
test
and
pushf
jo
popf
jno
cwde
js
xchg
jge
mov
jne
stos
imul
mov
ins
mov
jge
jle
xchg
jl
(bad)
js
xchg
je
sub
outs
jg
outs
jge
jae
jnp
test
test
add
js
test
mov
mov
xchg
xchg
mov
add
push
mov
pop
scas
lods
push
call
jb
sahf
ja
fwait
jl
cwde
jnp
xchg
jns
nop
js
mov
xchg
cmp
je
(bad)
je
nop
jp
nop
jg
mov
nop
nop
ja
xchg
js
lahf
jbe
mov
nop
cmps
jb
cmps
jne
mov
(bad)
mov
jl
mov
xchg
sub
push
test
jne
xchg
add
test
lea
lea
mov
xchg
jnp
mov
xchg
add
test
js
fwait
jno
popf
ins
test
push
mov
mov
test
mov
cdq
jnp
mov
jle
js
movs
jae
mov
mov
xchg
mov
call
lods
pop
popf
movs
pop
lahf
xchg
bound
nop
jnp
mov
mov
test
xor
jno
jge
ja
ja
jl
jge
(bad)
jl
cwde
jg
cdq
add
jns
xor
outs
jp
jo
xchg
outs
jno
addr16
pop
pusha
mov
add
push
mov
pop
test
push
xchg
jno
fwait
jae
sahf
js
pushf
jle
cwde
or
jns
jnp
xchg
cmp
jae
mov
mov
nop
jge
mov
xchg
mov
je
sahf
jno
mov
nop
movs
imul
lea
mov
jbe
xor
mov
pop
xchg
mov
mov
test
mov
xchg
or
xchg
xchg
nop
add
and
pushf
cdq
ins
mov
arpl
arpl
data16
xor
jl
cmp
jge
js
mov
(bad)
cdq
jno
xchg
jae
mov
jle
mov
xchg
mov
popf
mov
fwait
lods
push
xchg
movs
push
xchg
xchg
pop
xchg
mov
xchg
jp
xor
jno
test
test
test
xor
jno
test
xchg
jbe
pushf
jp
sahf
jle
cwde
jg
nop
jg
pop
adc
xchg
data16
pop
jo
push
lea
add
push
cmps
cwde
pop
mov
push
xchg
jo
cwde
jae
fwait
jp
cdq
or
or
test
cmp
jb
mov
mov
mov
lea
xor
jb
xchg
jb
cdq
ins
xchg
pushf
gs
popf
arpl
mov
mov
mov
xchg
test
test
xor
jnp
mov
mov
test
and
popf
or
xchg
mov
test
test
lea
xchg
add
jp
nop
je
xchg
push
cdq
bound
pop
mov
jns
popa
jl
bound
pop
mov
xchg
xchg
xchg
xchg
jo
nop
jo
mov
mov
call
movs
dec
(bad)
cwde
push
mov
jle
imul
xor
jo
mov
xchg
test
cmp
xchg
xchg
jno
popf
jbe
lahf
jl
cdq
jge
xchg
cmp
jae
mov
xchg
xchg
jl
pop
jbe
dec
imul
mov
addr16
mov
mov
lea
xchg
je
xchg
jl
xchg
xchg
mov
xor
jno
jp
xor
outs
imul
xchg
jle
xchg
test
mov
xchg
imul
xchg
mov
mov
mov
add
mov
mov
and
pushf
mov
lea
or
vpmacsww
mov
mov
xchg
xchg
jp
mov
xchg
ins
xchg
xchg
bound
pop
xchg
ja
pop
jp
pusha
or
mov
xchg
js
xchg
ja
lea
test
jne
xchg
jo
lea
mov
jl
mov
xchg
mov
xchg
mov
xchg
stos
dec
mov
adc
gs
ins
jg
ins
xchg
ja
mov
test
add
xchg
jo
sahf
je
lahf
jl
cwde
jge
xchg
cmp
imul
xchg
push
jge
dec
jae
dec
outs
add
push
call
test
mov
mov
(bad)
jne
xchg
jle
(bad)
mov
xchg
or
jg
js
jae
xchg
xchg
mov
(bad)
jne
xchg
jns
xchg
jg
xchg
sub
nop
lea
nop
pop
lea
mov
mov
xchg
xchg
add
test
add
jnp
mov
mov
mov
test
js
mov
xchg
test
xchg
mov
mov
test
mov
mov
jg
arpl
pusha
jp
pusha
or
jns
call
(bad)
cdq
sbb
mov
test
xchg
lods
push
mov
jg
dec
jge
push
js
pop
jne
arpl
imul
test
mov
jl
test
jle
ins
or
sahf
jge
xchg
jle
mov
mov
xchg
xchg
pop
mov
or
add
pop
xchg
and
push
test
test
mov
jge
mov
xchg
or
mov
js
xchg
jb
mov
(bad)
jne
xchg
js
xchg
jl
xchg
jge
nop
and
pusha
mov
test
xchg
pushf
or
xchg
add
test
jle
xchg
jnp
xchg
xor
jne
mov
mov
mov
jnp
jg
xchg
jns
mov
mov
mov
xchg
xchg
mov
test
cmp
test
mov
mov
xchg
popa
or
(bad)
bound
jo
xchg
js
lahf
jns
lahf
jns
cwde
adc
(bad)
jns
mov
xor
jp
jp
lods
outs
mov
mov
call
pop
jne
arpl
ins
jp
ins
cmp
outs
mov
adc
xchg
jae
xchg
je
fwait
ja
fwait
or
xchg
jno
mov
(bad)
pop
nop
(bad)
pop
mov
jp
dec
ja
add
jge
mov
xchg
xor
jb
mov
test
test
xchg
jbe
mov
xchg
jle
xchg
mov
nop
jp
xchg
jl
xchg
jge
nop
jnp
mov
test
adc
movs
or
xchg
jg
jl
jge
jge
add
jbe
jns
mov
mov
(bad)
mov
je
mov
jg
xchg
jns
lea
ins
jge
imul
jl
push
test
xor
jne
jnp
test
jae
sub
jge
addr16
adc
pushf
js
movs
js
mov
xchg
(bad)
xchg
xchg
test
jno
jge
pushf
jp
mov
xchg
test
jns
push
jnp
pop
jp
popa
jp
data16
outs
jnp
jo
jle
mov
adc
xchg
je
xchg
ja
xchg
jns
xchg
jp
xchg
test
lea
nop
ja
mov
mov
pop
mov
jnp
push
ja
add
jle
mov
jp
mov
mov
lea
pop
xchg
nop
xchg
ja
nop
jl
nop
test
mov
xchg
cmp
ja
sub
outs
mov
jnp
outs
js
je
xchg
jbe
sahf
jnp
cmps
cmp
xchg
or
js
js
cmp
jns
jb
js
test
xor
jo
mov
mov
mov
sub
imul
(bad)
fs
xchg
nop
js
xchg
ja
lea
test
jne
xor
jno
nop
push
cwde
push
lahf
jo
mov
xchg
movs
jne
pushf
jge
(bad)
(bad)
xchg
test
outs
sahf
ja
cwde
je
fwait
jne
lahf
jo
sahf
arpl
pop
jnp
pop
js
pop
jl
pusha
jge
data16
imul
jnp
jbe
jge
xchg
adc
xchg
js
xchg
jnp
xchg
jl
xchg
jle
xchg
xchg
vprotd
jne
xchg
xchg
test
test
lea
add
pusha
xchg
jge
mov
mov
mov
nop
jl
xchg
jle
xchg
xor
adc
or
xchg
cdq
test
xchg
mov
xchg
lea
mov
je
test
mov
lea
xchg
jle
cwde
cmp
js
mov
add
jnp
ja
jg
jb
ja
jb
jae
test
xor
ins
jle
jno
xor
jae
xchg
mov
xchg
and
lea
xchg
outs
je
push
mov
test
and
bound
ins
xchg
jp
mov
jl
test
(bad)
jne
xchg
ins
sbb
movs
ins
lea
xchg
movs
outs
cdq
fwait
js
lea
jbe
jp
cdq
jae
xchg
jo
xchg
jb
cwde
jno
xchg
addr16
arpl
gs
bound
bound
addr16
ins
cmp
jge
jle
jg
cmp
jg
cwde
jle
cwde
jl
xchg
jle
nop
jg
nop
add
test
mov
xchg
test
mov
jle
outs
jbe
jb
add
pop
mov
xchg
mov
(bad)
jnp
xchg
jns
xchg
jl
cdq
sub
adc
jl
popf
jle
mov
cwde
sahf
xchg
xchg
call
xchg
jl
mov
mov
jge
nop
and
jno
xchg
jb
xchg
jae
mov
xchg
jg
nop
jp
mov
jnp
ins
jo
ins
ins
jg
push
jo
jle
outs
jp
ja
jno
xor
ja
xor
jo
test
jg
mov
mov
xchg
jo
xchg
ins
jge
add
xchg
outs
imul
mov
adc
push
test
xchg
test
cwde
cdq
jno
mov
jne
jne
xchg
outs
push
ins
outs
nop
outs
ins
xchg
jno
nop
imul
jbe
ins
ja
push
mov
xchg
jle
test
cmp
jl
jle
test
test
add
jg
add
cmp
js
xchg
mov
jle
jg
test
jl
jnp
(bad)
jle
add
pop
test
jno
xchg
(bad)
ja
xchg
jbe
cdq
jns
fwait
sub
jne
test
or
and
sahf
movs
mov
xchg
xchg
mov
xchg
popf
mov
xchg
test
xchg
mov
xchg
fs
xchg
imul
xchg
je
mov
xor
jb
jnp
js
push
ja
push
jb
test
jle
push
jno
jg
js
jp
jg
jp
jbe
xor
jo
jp
mov
xchg
jb
xchg
outs
test
jg
nop
jp
xchg
jo
nop
ins
outs
(bad)
jno
lea
jg
add
jge
outs
sub
scas
popa
mov
xchg
mov
(bad)
mov
or
mov
mov
mov
mov
mov
lea
xchg
test
xor
mov
xor
jnp
jle
xchg
xchg
or
add
mov
xchg
mov
jle
xor
js
cmp
jge
jp
xor
jo
add
push
js
pop
sub
jb
xchg
jno
cwde
je
fwait
jl
popf
xor
js
xchg
lea
sahf
lahf
sbb
xchg
movs
nop
xchg
mov
xchg
mov
nop
sahf
lea
lea
lea
(bad)
popa
popf
xchg
bound
imul
mov
test
jle
test
jns
imul
push
je
test
xor
outs
push
jae
jge
jae
jle
jl
je
jl
jge
jge
jns
jns
mov
xchg
je
xchg
jb
lea
xchg
jg
lea
mov
mov
mov
xchg
test
jge
xchg
jnp
mov
sub
mov
mov
xchg
mov
mov
jnp
mov
mov
test
mov
mov
mov
mov
mov
test
jp
cmp
ja
jbe
test
cmp
add
xchg
cmp
jbe
xor
jae
xchg
xchg
xchg
test
jns
xor
jno
xor
js
jp
test
jae
add
pop
dec
push
pop
jns
bound
gs
outs
arpl
jno
xor
jge
xchg
xchg
sahf
test
mov
xchg
nop
movs
cdq
nop
movs
xchg
xchg
movs
xchg
mov
jg
xchg
jae
nop
imul
mov
ins
scas
xchg
outs
stos
mov
jns
xor
jno
jge
jnp
outs
jo
jno
jge
test
test
jg
fs
imul
js
jo
jg
jnp
jbe
cmp
cmp
jp
xchg
jbe
xchg
jbe
nop
outs
mov
mov
test
and
imul
mov
fwait
jp
movs
jl
lods
je
mov
test
mov
lea
xchg
js
sub
push
sub
jo
mov
mov
mov
mov
add
jp
jbe
cmp
jge
jle
xchg
xchg
test
test
outs
jbe
ins
jnp
addr16
push
xor
jns
je
sub
jl
jo
jl
test
cmp
dec
pop
pop
push
jb
pop
sub
push
xchg
jae
cwde
jl
call
add
lahf
test
lea
mov
mov
lahf
xchg
ja
xchg
jb
(bad)
imul
lods
xchg
jb
(bad)
je
mov
cmp
mov
xchg
jle
jne
jp
jo
jge
add
and
push
jp
je
jno
sub
outs
ja
jne
mov
test
mov
jns
xchg
jp
xchg
jne
mov
je
jns
jg
jge
test
mov
mov
xchg
jae
mov
js
js
mov
test
xchg
xchg
adc
mov
add
test
xchg
xchg
xor
js
mov
mov
or
test
cmp
xchg
xchg
add
jae
test
addr16
popa
add
jl
jge
add
and
addr16
add
dec
dec
inc
push
push
push
imul
pushaw
xchg
mov
xchg
jo
xchg
js
xchg
jge
xchg
jge
xchg
jnp
xchg
adc
fwait
add
jle
cwde
xchg
mov
mov
jl
(bad)
jp
mov
(bad)
je
mov
mov
xchg
cmp
jge
jp
xchg
jne
mov
xor
jp
ja
xor
ins
jge
imul
jbe
outs
outs
jle
ins
test
test
xor
ja
mov
mov
xchg
cwde
jge
cdq
adc
test
jge
test
lea
nop
jno
(bad)
jo
call
jge
mov
jle
jp
mov
xchg
sbb
cwde
gs
jo
xchg
js
mov
jnp
outs
jno
je
test
xchg
xchg
test
jge
mov
lea
mov
test
cmp
add
mov
xchg
test
and
pop
add
ins
add
xchg
xchg
bound
add
cmp
inc
push
push
push
pop
pop
jns
pop
test
xchg
ins
push
jae
xchg
js
nop
js
xchg
jae
(bad)
ja
xchg
test
cmp
jbe
(bad)
jns
call
mov
mov
sub
lods
mov
test
jle
scas
jns
movs
ja
popf
jbe
xchg
jno
lea
mov
cmp
jp
jnp
mov
nop
je
(bad)
jbe
test
xor
jbe
xchg
jne
xchg
mov
xchg
adc
mov
test
jg
mov
xchg
jno
xchg
outs
imul
scas
jle
scas
jle
scas
jg
scas
js
cmps
jo
popf
outs
jle
push
popf
pusha
jg
bound
ins
je
jbe
mov
jp
jb
xchg
xchg
mov
mov
test
jle
(bad)
jp
mov
mov
test
test
jle
mov
cmp
ja
xchg
sub
outs
mov
and
pop
test
mov
xchg
add
pop
or
mov
xchg
add
cmp
dec
inc
dec
push
push
fs
pop
ja
pusha
and
mov
lea
mov
lea
outs
mov
xchg
test
test
mov
xchg
jne
popf
sbb
mov
mov
mov
mov
mov
sub
jae
cwde
outs
jp
jne
mov
mov
jnp
cmp
xchg
jge
xchg
sub
xchg
mov
mov
test
mov
mov
(bad)
lahf
xchg
mov
mov
mov
xchg
jae
cdq
outs
addr16
ins
push
ins
jno
jne
scas
jg
scas
cmp
xchg
pushf
jae
popf
ins
jge
arpl
pusha
jle
popa
ja
imul
jae
jg
ja
jbe
mov
xchg
mov
mov
sbb
mov
add
jge
mov
xchg
mov
mov
and
pop
mov
xchg
jae
lea
xchg
pop
mov
mov
xchg
push
outs
pushf
add
sub
add
adc
add
push
icebp
icebp
fist
push
or
nop
gs
dec
xor
push
jne
fwait
dec
push
aaa
mov
push
xor
xor
hlt
sub
(bad)
test
sub
inc
rcr
les
add
stos
fdivrp
xchg
lods
in
sbb
mov
push
aaa
dec
jne
sbb
pop
pop
xor
push
xlat
pop
repnz
pop
int
sub
jns
cld
inc
adc
fisttp
jle
call
jmp
mov
out
xchg
in
ret
adc
push
jnp
cld
pop
dec
inc
enter
imul
aas
fmul
mov
sub
push
or
ficom
cwde
sbb
sub
jns
mov
jl
adc
out
call
int
rol
mov
ja
adc
push
movs
or
dec
jns
push
dec
outs
add
cmp
mov
add
mov
sub
xor
mov
adc
cwde
or
mov
push
retf
adc
add
ret
fnstsw
sbb
scas
(bad)
xlat
aam
or
les
adc
in
xchg
adc
pop
mov
push
sub
ds
push
sub
std
out
shl
lock
push
sub
lea
out
xchg
nop
int3
jno
loop
hlt
out
mov
inc
mov
or
mov
sbb
jmp
or
cmps
mov
xlat
fwait
xchg
push
adc
dec
arpl
cmp
push
pop
xchg
mov
dec
pop
movs
jmp
push
test
sub
fnsave
sbb
retf
ret
aad
and
cwde
and
rcr
es
mov
inc
aad
inc
mov
mov
clc
dec
adc
std
lods
outs
enter
in
mov
sbb
mov
icebp
xchg
mov
into
(bad)
dec
sub
jb
idiv
mov
add
push
icebp
icebp
fist
push
or
nop
gs
dec
xor
push
jne
fwait
dec
push
aaa
mov
push
xor
xor
hlt
sub
(bad)
test
sub
inc
rcr
les
add
stos
fdivrp
xchg
lods
in
sbb
mov
push
aaa
dec
jne
sbb
pop
pop
xor
push
xlat
pop
repnz
pop
int
sub
jns
cld
inc
adc
fisttp
jle
call
jmp
mov
out
xchg
in
ret
adc
push
jnp
cld
pop
dec
inc
enter
imul
aas
fmul
mov
sub
push
or
ficom
cwde
sbb
sub
jns
mov
jl
adc
out
call
int
rol
mov
ja
adc
push
movs
or
dec
jns
push
dec
outs
add
cmp
mov
add
mov
sub
xor
mov
adc
cwde
or
mov
push
retf
adc
add
ret
fnstsw
sbb
scas
(bad)
xlat
aam
or
les
adc
in
xchg
adc
pop
mov
push
sub
ds
push
sub
std
out
shl
lock
push
sub
lea
out
xchg
nop
int3
jno
loop
hlt
out
mov
inc
mov
or
mov
sbb
jmp
or
cmps
mov
xlat
fwait
xchg
push
adc
dec
arpl
cmp
sbb
add
inc
cmp
popa
push
add
add
add
add
add
data16
cdq
add
int3
add
inc
sub
add
xor
sub
sub
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aad
add
data16
cdq
add
int3
add
inc
inc
add
xor
jmp
call
(bad)
push
add
xor
xor
add
add
add
xor
add
sub
xor
xor
cdq
xor
int3
xor
push
push
add
push
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
aad
xor
xor
cdq
xor
int3
xor
push
inc
xor
xor
jmp
call
(bad)
jmp
add
xor
data16
add
sub
sub
sub
sub
sub
push
add
xor
data16
cdq
push
int3
push
jmp
add
xor
data16
jmp
add
xor
data16
cdq
data16
int3
data16
jmp
add
xor
data16
data16
data16
inc
push
jmp
call
(bad)
call
xor
cdq
cdq
add
cdq
add
cdq
sub
cdq
sub
cdq
sub
sub
sub
cdq
push
add
cwd
push
cdq
cdq
push
int3
cdq
push
call
xor
cdq
cdq
or
cmp
stos
add
cwd
stos
cdq
cdq
stos
int3
cdq
stos
call
xor
cdq
cdq
aad
cdq
aad
cdq
inc
cdq
push
cdq
jmp
call
(bad)
dec
add
int3
add
int3
add
add
add
int3
sub
int3
sub
int3
sub
sub
sub
int3
push
add
push
xor
push
data16
push
cdq
int3
push
int3
int3
push
dec
add
xor
and
cdq
int3
or
cmp
stos
add
stos
xor
stos
data16
stos
cdq
int3
stos
int3
int3
stos
dec
aad
int3
aad
int3
aad
int3
aad
int3
aad
int3
aad
int3
inc
int3
push
int3
jmp
call
(bad)
(bad)
inc
add
add
inc
inc
cdq
inc
int3
inc
(bad)
jmp
add
sub
jmp
jmp
cdq
jmp
int3
jmp
(bad)
call
call
call
call
call
call
inc
inc
inc
jmp
jmp
jmp
call
add
aad
call
call
cdq
call
int3
call
(bad)
(bad)
inc
(bad)
push
(bad)
jmp
call
(bad)
inc
add
add
stc
add
add
cld
add
add
add
movs
add
or
add
or
or
dec
push
cmp
and
mov
xor
adc
test
sbb
xchg
sub
xchg
imul
mov
pusha
and
or
cmps
push
repz
dec
rcl
or
les
adc
(bad)
(bad)
sbb
xchg
dec
stos
sub
and
leave
movs
adc
inc
pushf
or
stos
aad
adc
and
xor
ror
inc
dec
daa
xor
retf
pop
mov
sub
sub
xchg
cmp
(bad)
jl
leave
int
mov
pop
ss
fwait
imul
jle
retf
loopne
push
mov
(bad)
retf
dec
jmp
adc
pop
jb
bound
mov
jns
push
inc
cwde
cmp
push
(bad)
mov
stos
out
cmp
call
ret
jae
push
sbb
imul
sbb
mov
mov
aas
jmp
stos
sbb
adc
pushf
lea
xchg
inc
xchg
mov
xchg
pop
jnp
add
inc
and
test
push
inc
xchg
add
jbe
ficom
push
pop
mov
stos
add
and
stc
gs
js
fadd
inc
cmp
in
pusha
lea
and
pop
add
xchg
gs
lea
dec
and
out
or
(bad)
pop
xchg
jno
bound
lea
jno
xchg
xchg
pop
or
xchg
imul
dec
sbb
and
js
loope
pop
dec
cdq
xor
fs
test
cwd
or
ins
scas
add
add
call
mov
gs
xchg
gs
out
fs
sbb
xchg
or
sbb
push
mov
cmp
push
or
outs
fs
stos
pop
(bad)
popa
cmp
movs
add
fstp
sub
mov
test
dec
xchg
jbe
shr
leave
xchg
test
fbld
or
mov
sub
and
pusha
inc
leave
xchg
cdq
ins
jbe
sub
lahf
xchg
adc
ror
inc
pop
test
pusha
retfw
jmp
fmulp
xor
fisttp
xor
pop
shl
and
push
fsub
xchg
dec
stos
inc
arpl
cmp
push
push
xchg
sub
pop
jno
xor
std
call
mov
out
mov
dec
jb
push
mov
mov
outs
outs
xor
movs
inc
adc
xchg
rcl
ds
and
sbb
mov
jno
xor
mov
cmps
call
jno
ret
ror
mov
mov
push
mov
pop
adc
sub
fcmovne
popa
cdq
nop
movs
xchg
or
imul
daa
scas
std
inc
enter
and
xlat
cmps
xor
xlat
mov
pop
mov
jge
xor
xchg
test
mov
leave
inc
fistp
jge
nop
pop
pop
or
lds
pop
hlt
repnz
fmul
push
pop
popa
dec
cld
xchg
pop
jno
or
jmp
cmps
in
lock
xchg
out
jl
push
std
mov
std
mov
fwait
icebp
xchg
push
call
test
pushf
cmc
push
mov
mov
dec
jo
lds
xor
mov
inc
sub
addr16
dec
pop
jno
push
mov
adc
xchg
in
xchg
adc
clc
test
xchg
xor
dec
leave
loopne
(bad)
push
mov
movs
mov
sar
int3
icebp
js
sub
fwait
pop
into
(bad)
fidiv
adc
iret
and
call
jmp
lods
sqrtps
jmp
sub
daa
hlt
lea
or
mov
mov
mov
xor
mov
mov
push
sbb
jl
fistp
adc
sbb
outs
gs
push
es
mov
test
and
stos
pop
test
xchg
xchg
add
icebp
stos
adc
ins
inc
or
nop
mov
mov
ins
(bad)
stos
or
lds
adc
cli
jne
dec
cmps
add
test
mov
mov
cmps
call
sbb
ret
inc
(bad)
(bad)
pop
icebp
add
or
jl
sub
mov
(bad)
test
and
(bad)
and
add
rol
xor
ret
push
mov
sahf
adc
and
ja
mov
je
and
or
cwd
fwait
jno
and
shr
mov
je
aaa
mov
out
cmp
pusha
mov
popf
cmp
and
pushf
popa
xor
sub
inc
iret
mov
sub
mov
movs
ss
push
sahf
jecxz
push
mov
add
cwde
xchg
cmp
inc
repz
imul
cli
push
xchg
pop
repnz
push
call
mov
inc
add
jno
fadd
pop
jb
leave
cmp
aas
dec
leave
mov
ret
shl
lods
enter
push
pusha
call
jno
cdq
cmp
out
(bad)
pusha
push
popa
xchg
stos
pop
imul
mov
sub
dec
mov
mov
mov
test
dec
inc
adc
jmp
add
add
dec
dec
adc
sahf
pop
popf
addr16
push
sub
cli
sbb
mov
jmp
je
xchg
push
out
jl
and
mov
outs
ret
nop
mov
add
ds
ficomp
aam
retf
cli
clc
mov
sbb
dec
sbb
movs
dec
stos
ins
adc
inc
scas
cld
movs
cmps
prefetch
movs
xor
shr
push
cwde
mov
popf
or
mov
and
xchg
adc
retf
xlat
push
or
dec
dec
ret
push
scas
add
or
cmp
in
mov
cmps
cmps
sti
test
sbb
aaa
pop
sub
mov
jmp
pop
xchg
sub
repz
fistp
xchg
jne
mov
xchg
mov
fcom
mov
cmp
imul
daa
and
pop
or
(bad)
outs
add
push
(bad)
or
dec
sbb
aam
bound
dec
and
xchg
adc
loop
mov
dec
push
mov
call
inc
cmps
dec
push
js
adc
sar
cmp
cdq
sbb
mov
add
repnz
mov
cmp
call
mov
xlat
jnp
enter
and
add
push
dec
test
and
imul
add
inc
jb
mov
xchg
mov
mov
inc
repz
and
inc
cli
and
loopne
jne
jb
icebp
sub
aaa
lahf
outs
mov
in
inc
cmp
sahf
shl
mov
and
inc
xor
movs
sub
xchg
hlt
cli
outs
mov
mov
xor
sub
ret
pop
movs
xor
dec
dec
sub
dec
mov
bound
iret
dec
adc
sub
xchg
stos
test
mov
(bad)
push
out
sub
sbb
lds
loopne
test
adc
mov
test
mov
or
sbb
cmps
(bad)
(bad)
cmp
mov
outs
jae
mov
mov
jns
mov
dec
inc
xchg
mov
add
push
ror
div
or
mov
cwde
sub
test
xor
and
dec
shl
adc
inc
stos
jecxz
jge
jo
out
rcr
push
push
pushf
mov
push
mov
xchg
xor
xor
mov
pop
fild
jp
push
mov
and
mov
popf
cdq
xor
pop
aas
xor
clc
sbb
or
and
cwde
ret
mov
adc
jge
jae
mov
test
sub
stos
cmps
in
ss
sbb
mov
addr16
loop
add
sub
call
pop
mov
mov
jns
sbb
jle
movs
inc
cmp
sbb
sub
jl
or
push
mov
js
dec
mov
jecxz
std
sbb
movs
mov
outs
ins
outs
retf
retf
xchg
inc
jns
mov
dec
loope
repnz
pop
or
pop
test
push
push
jno
sub
inc
xchg
push
cmp
test
inc
cmp
test
arpl
(bad)
xchg
loop
and
jbe
adc
mov
aam
jl
inc
jnp
bound
scas
xchg
jbe
adc
push
pop
jb
add
(bad)
xor
test
icebp
adc
sbb
adc
lea
or
sbb
bound
popa
inc
jae
adc
xchg
push
cmp
arpl
inc
loop
dec
int3
test
popa
cwde
repnz
stos
loope
ds
jnp
fdivr
loopne
mov
cmp
pusha
inc
les
daa
xor
ror
push
sbb
push
jne
daa
sbb
push
dec
(bad)
mov
in
cmc
sbb
ret
cmp
xor
pop
pop
call
xor
daa
sbb
mov
xchg
xor
mov
inc
aad
push
mov
inc
in
arpl
test
movs
shl
and
push
dec
leave
and
retf
jbe
mov
xor
push
sub
bound
fldenv
mov
push
and
add
inc
inc
(bad)
shl
sti
ror
imul
sbb
sbb
adc
sbb
loope
call
arpl
cmp
xor
sbb
add
ins
imul
mov
xor
add
adc
adc
cmp
dec
out
push
ds
xor
add
in
pusha
rcl
adc
dec
out
sbb
jno
sub
pop
mov
out
mov
adc
call
xchg
and
add
sub
push
aas
mov
add
das
ror
ss
ss
shl
mov
cmp
xor
inc
mov
push
xor
adc
and
mov
cmp
jg
adc
inc
inc
adc
dec
sub
call
add
(bad)
xchg
add
push
sbb
sbb
pop
int3
ret
outs
xchg
mov
cmc
and
jmp
popa
and
rcl
shl
jbe
sbb
xor
and
out
mov
mov
mov
push
ja
pop
jo
js
adc
or
cmp
arpl
add
sub
hlt
inc
sbb
push
dec
pushf
inc
pop
test
push
mov
test
repnz
cdq
add
jbe
test
rcl
mov
adc
call
(bad)
shl
sub
adc
dec
adc
pop
ins
jae
pop
test
cmp
daa
in
adc
xor
(bad)
mov
icebp
xlat
sahf
call
xchg
adc
mov
pushf
xchg
inc
mov
xchg
mov
ins
popa
sbb
push
pop
cld
adc
xor
or
dec
jne
adc
ss
loope
clc
cdq
cmp
add
or
sub
add
nop
mov
or
mov
shl
sub
jmp
dec
xchg
test
sbb
sbb
aaa
or
retf
shl
push
sbb
inc
inc
sub
xchg
pop
mov
mov
fdiv
dec
adc
movs
shr
push
adc
push
ja
int
cmp
and
xchg
or
jno
movs
adc
jno
div
mov
ds
outs
enter
cmp
data16
das
les
repnz
jb
adc
(bad)
jmp
sub
cmp
mov
inc
xchg
sub
out
addr16
or
adc
push
cmps
pop
inc
shl
pop
jo
and
call
pusha
dec
aam
dec
sbb
inc
pop
jb
cmps
sub
push
mov
sub
mov
aad
test
jne
or
add
addr16
push
cmp
test
adc
and
push
stos
inc
retf
popa
inc
int
adc
daa
popa
adc
addr16
ds
xor
imul
or
pop
outs
bound
push
ins
adc
pop
or
das
adc
mov
xchg
cmp
into
inc
pop
cwde
jbe
xor
add
or
jns
sub
and
xchg
mov
add
or
ins
add
sub
adc
je
shl
push
sub
pop
leave
inc
jl
aam
out
leave
inc
fbld
and
cmp
mov
mov
adc
adc
sbb
push
and
cmp
adc
inc
sub
shl
push
imul
adc
adc
cwde
js
sub
mov
imul
cdq
mov
mov
xchg
cli
add
jl
dec
sbb
inc
mov
xchg
and
jp
jmp
outs
es
popf
mov
and
or
retf
push
daa
xchg
cmp
xor
addr16
or
jb
inc
mov
je
ret
mov
fwait
inc
das
adc
push
xor
int3
add
adc
mov
inc
dec
jecxz
mov
mov
sub
mov
stos
scas
loop
push
sbb
outs
fwait
adc
inc
arpl
inc
ror
imul
test
sbb
push
mov
jno
call
movs
ja
jecxz
cwde
inc
outs
jae
sbb
test
mov
mov
xor
jecxz
xchg
inc
mov
push
and
cmp
jno
(bad)
jp
push
xchg
xchg
dec
je
gs
lea
aaa
add
ret
and
adc
sbb
cmp
fcmovb
add
movs
sbb
ja
or
cmps
dec
bound
adc
jo
fsubr
push
xchg
retf
retf
inc
pop
or
xor
jne
sbb
in
je
pop
adc
and
arpl
or
sub
cmp
cmps
icebp
imul
pop
enter
jne
pop
ins
cs
mov
ins
sub
sbb
cli
imul
ja
xor
xor
pop
fs
jno
xor
(bad)
(bad)
sub
cs
or
pop
(bad)
adc
and
loopne
xchg
fs
ret
sbb
sub
xchg
nop
xor
mov
jl
rcl
or
js
sbb
jne
aas
int3
stos
add
push
adc
mov
push
add
sub
and
je
in
xor
test
pop
dec
pop
adc
movs
retf
stos
js
mov
call
xchg
test
repz
sbb
and
push
cmp
xor
(bad)
mov
aaa
cmps
cmps
sub
push
xor
xor
out
ret
adc
push
inc
std
xchg
je
mov
lods
mov
inc
add
push
leave
dec
std
pushf
push
dec
mov
ror
fcom
sub
jno
inc
xor
stos
sub
xchg
push
xchg
mov
push
inc
adc
xchg
jno
push
push
sub
cmp
gs
inc
or
aas
jno
sub
sub
cmps
es
xchg
and
call
xor
inc
dec
imul
cmp
push
(bad)
cmp
sub
popf
addr16
icebp
dec
daa
adc
jp
pop
(bad)
sub
and
jns
stos
sub
xor
jns
jl
call
lods
sbb
loopne
push
and
mov
ins
mov
inc
das
jle
adc
jnp
ret
mov
mov
inc
dec
and
(bad)
movs
cdq
cmp
lds
adc
push
sar
int3
jnp
cdq
test
or
shr
adc
jg
ficomp
inc
sub
test
sbb
xor
and
cli
adc
arpl
mov
cdq
cmp
mov
sti
push
cmp
xchg
push
call
jmp
jmp
repnz
mov
mov
push
add
pop
mov
pusha
in
sbb
push
add
mov
jge
cmps
mov
dec
adc
or
fst
call
imul
les
call
sub
push
jo
movs
lods
je
adc
fiadd
loopne
es
push
xor
pop
and
mov
adc
loopne
xor
sub
js
add
push
pop
push
arpl
fistp
sub
in
nop
mov
sub
dec
das
push
scas
shr
mov
and
and
inc
scas
mov
bound
jne
xchg
fs
les
es
sbb
outs
cmp
mov
mov
dec
mov
retf
scas
jmp
xor
and
cwde
loopne
jno
cdq
jl
test
ss
gs
push
jbe
mov
sbb
xchg
sub
sub
adc
js
es
mov
xchg
leave
jb
and
lea
test
xchg
push
pop
mov
pop
daa
jmp
daa
cmp
inc
in
cmp
in
addr16
push
inc
ins
push
xor
pop
ret
mov
pop
ret
pop
loope
xlat
out
xchg
dec
cmp
xor
xor
add
dec
cwde
push
cmp
jne
add
jmp
mov
sbb
popaw
bound
sub
cmc
ds
sub
inc
and
je
jle
mov
test
cmps
dec
mov
cmp
xor
xchg
pop
test
mov
dec
aam
jp
in
or
sub
pop
xor
rcr
push
mov
es
hlt
aad
arpl
arpl
sub
loopne
xchg
xchg
push
in
xor
mov
and
pop
push
sti
xchg
iret
repz
push
repnz
lock
pop
dec
xchg
lock
test
lods
push
popf
mov
xor
sbb
and
pop
mov
and
lds
rcl
pop
aaa
aas
or
inc
inc
mov
cmc
adc
fisttp
inc
push
xor
sub
bound
repnz
xchg
sub
imul
lods
push
sbb
and
popa
xchg
ja
push
dec
ja
clc
(bad)
mov
jns
inc
and
sti
test
ficomp
mov
mov
hlt
xchg
out
sbb
push
push
or
pop
add
gs
fucomp
sbb
and
pop
mov
fisubr
(bad)
and
clc
sahf
adc
lods
ins
imul
jl
adc
sub
es
dec
pushf
das
mov
mov
idiv
push
pop
ror
jne
popa
or
std
xchg
dec
cmc
mov
or
and
bound
adc
add
xchg
add
inc
dec
inc
cmp
popa
pushf
add
test
add
xor
add
add
add
add
add
sub
add
data16
cdq
add
int3
add
inc
push
add
push
xor
push
data16
add
add
add
add
add
add
add
add
add
add
aad
add
data16
cdq
add
int3
add
inc
inc
add
xor
jmp
call
(bad)
push
add
xor
xor
add
add
add
xor
add
sub
xor
xor
cdq
xor
int3
xor
push
push
add
push
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
aad
xor
xor
cdq
xor
int3
xor
push
inc
xor
xor
jmp
call
(bad)
jmp
add
xor
data16
add
sub
sub
sub
sub
sub
push
add
xor
data16
cdq
push
int3
push
jmp
add
xor
data16
jmp
add
xor
data16
cdq
data16
int3
data16
jmp
add
xor
data16
data16
data16
inc
push
jmp
call
(bad)
call
xor
cdq
cdq
add
cdq
add
cdq
sub
cdq
sub
cdq
sub
sub
sub
cdq
push
add
cwd
push
cdq
cdq
push
int3
cdq
push
call
xor
cdq
cdq
or
cmp
stos
add
cwd
stos
cdq
cdq
stos
int3
cdq
stos
call
xor
cdq
cdq
aad
cdq
aad
cdq
inc
cdq
push
cdq
jmp
call
(bad)
dec
add
int3
add
int3
add
add
add
int3
sub
int3
sub
int3
sub
sub
sub
int3
push
add
push
xor
push
data16
push
cdq
int3
push
int3
int3
push
dec
add
xor
and
cdq
int3
or
cmp
stos
add
stos
xor
stos
data16
stos
cdq
int3
stos
int3
int3
stos
dec
aad
int3
aad
int3
aad
int3
aad
int3
aad
int3
aad
int3
inc
int3
push
int3
jmp
call
(bad)
(bad)
inc
add
add
inc
inc
cdq
inc
int3
inc
(bad)
jmp
add
sub
jmp
jmp
cdq
jmp
int3
jmp
(bad)
call
call
call
call
call
call
inc
inc
inc
jmp
jmp
jmp
call
add
aad
call
call
cdq
call
int3
call
(bad)
(bad)
inc
(bad)
push
(bad)
jmp
call
(bad)
inc
add
add
stc
add
add
cld
add
add
add
inc
and
mov
hlt
es
sbb
dec
push
es
cwde
xor
fwait
aaa
imul
leave
xchg
aas
sar
enter
movs
lea
or
retf
call
or
or
test
xchg
fwait
mov
add
movs
push
test
sub
clc
xor
inc
inc
mov
mov
(bad)
and
dec
aad
and
loopne
inc
xor
cmps
leave
xchg
inc
rcr
xor
and
mov
dec
iret
sahf
outs
cmp
cmp
imul
dec
(bad)
push
push
out
cmp
dec
ret
sub
retf
popa
xor
call
pop
stos
stos
fnstcw
cmp
loope
ins
add
adc
dec
or
pop
pop
fld
cdq
sbb
inc
cmp
movs
xchg
test
inc
shl
push
inc
cmp
dec
leave
dec
jns
add
push
cmp
xchg
dec
movs
fistp
adc
xchg
xchg
sar
dec
mov
call
adc
in
sbb
scas
sub
xchg
jne
and
inc
jno
sub
add
cmp
adc
test
push
push
fbld
test
xchg
aad
(bad)
mov
xchg
popa
xchg
mov
cs
push
je
jne
inc
lods
xor
enter
aam
outs
or
xchg
xchg
pop
push
lds
cmp
sbb
in
js
push
and
popa
xchg
push
imul
xchg
imul
cmps
adc
mov
xchg
dec
sbb
xor
je
jo
dec
inc
out
push
cmc
push
je
fst
inc
cmp
mov
jbe
call
xchg
sbb
imul
push
cmp
xor
fidivr
pop
test
push
mov
je
imul
xchg
adc
mov
nop
inc
and
push
pop
adc
xor
xchg
jo
test
sub
push
pop
cmps
mov
leave
in
push
fstp
and
jl
sahf
out
xchg
adc
xchg
jecxz
sbb
dec
call
call
out
pop
dec
cmc
fmul
pop
out
jne
(bad)
jnp
jp
xchg
loopne
rcl
cmp
adc
pop
gs
(bad)
enter
cmps
icebp
or
push
sahf
inc
ins
test
inc
je
in
data16
je
inc
cmp
call
dec
inc
aad
xchg
das
mov
cmp
push
add
xor
xor
xor
xor
inc
mov
adc
movs
mov
repz
cmc
pop
sub
mov
xchg
inc
inc
xlat
jl
xor
jb
lahf
push
add
sub
ror
test
and
outs
fs
adc
mov
sbb
test
sub
adc
add
sub
addr16
lea
pop
mov
gs
push
imul
push
dec
loop
retf
dec
mov
fs
mov
mov
jo
sbb
cmp
outs
test
aad
mov
adc
dec
push
xchg
sub
jmp
jno
mov
inc
mov
inc
pop
sbb
mov
push
push
pop
pop
mov
ret
repz
lock
cdq
mov
sti
(bad)
or
sbb
pop
lahf
xor
xor
stos
jp
data16
out
daa
cs
mov
and
dec
and
(bad)
enter
push
mov
xchg
ins
or
cdq
dec
inc
add
adc
mov
popa
fnstenv
xchg
nop
mov
dec
mov
dec
(bad)
mov
xchg
retf
pop
dec
mov
or
js
sbb
cwde
call
jno
jnp
popf
sbb
adc
adc
add
(bad)
push
sbb
into
sub
sub
push
sbb
xor
xor
cmps
cmp
lds
test
mov
popa
ret
mul
dec
mov
jecxz
pushf
or
cmp
popa
fcmovnbe
dec
jne
movsx
data16
nop
aaa
jg
loope
sahf
test
shl
int3
pop
pop
mov
mov
add
mov
jae
dec
(bad)
sub
sub
inc
dec
push
or
jae
je
push
popf
les
adc
push
sar
cmp
push
jmp
mov
pop
cs
push
inc
or
sti
and
xor
jne
mov
jmp
(bad)
ja
and
mov
sbb
imul
jecxz
pop
mov
iret
pop
ret
mov
loopne
daa
mul
pushf
or
stos
jnp
les
ret
jno
jae
push
bndldx
mov
push
adc
jle
adc
movs
jl
cmp
jmp
and
popa
mov
jmp
ins
in
rol
loop
mov
cmc
retf
les
jl
lods
fld
adc
jge
adc
adc
and
test
add
(bad)
cdq
push
xchg
dec
lods
mov
sub
and
adc
call
lods
iret
ja
xchg
out
iret
add
push
cmovbe
popa
jns
mov
(bad)
and
cwde
cmp
sub
mov
rcl
or
inc
and
dec
popa
aad
jle
add
inc
pop
mov
mov
xor
scas
mov
cdq
test
ret
rcl
dec
das
mov
jae
enter
mov
aaa
mov
jb
mov
or
mov
and
xchg
mov
pop
xor
mov
inc
adc
mov
ins
adc
mov
push
mov
mov
and
mov
in
mov
add
adc
mov
or
leave
gs
nop
fldl2e
or
hlt
sahf
jmp
adc
(bad)
enter
fs
lahf
xchg
dec
push
or
cs
sbb
mov
jmp
es
pop
nop
es
gs
mov
and
fcmovnu
inc
dec
jmp
inc
or
mov
shr
cwde
shr
mov
add
pop
xor
les
sbb
push
sbb
sub
dec
ds
mov
mov
add
and
mov
mov
inc
adc
shr
cmp
add
fsub
test
dec
dec
xchg
xor
arpl
loope
loope
xor
ins
(bad)
cld
add
jns
xchg
xchg
les
mov
sti
mov
sbb
movs
lock
adc
stos
or
dec
mov
clc
mov
mov
and
sahf
dec
jb
pop
ficomp
jl
or
out
and
dec
pop
dec
xchg
stos
lea
dec
inc
push
scas
mov
pop
push
test
inc
(bad)
fild
rol
sub
xor
hlt
and
outs
inc
fwait
ss
push
pop
adc
and
xchg
cmps
push
xchg
mov
dec
and
dec
mov
cmps
inc
data16
add
addr16
adc
push
pop
dec
stos
retf
imul
gs
in
movs
jns
outs
loope
fldenv
adc
popf
xchg
dec
adc
add
and
ins
inc
repz
adc
jmp
push
jl
rol
shl
ins
int3
(bad)
pop
push
sub
ins
sub
dec
das
jns
jne
test
mov
and
daa
imul
xor
push
add
ret
mov
sar
cs
aam
adc
fisubr
(bad)
xchg
aaa
mov
fisttp
addr16
in
xor
scas
rcr
jbe
out
into
adc
cdq
cmp
mov
mov
shl
pusha
and
loop
pusha
pop
sbb
mov
dec
cdq
dec
leave
or
mov
push
sbb
outs
xor
pop
(bad)
mov
cmp
lahf
mov
(bad)
mov
mov
or
push
pop
xor
cwde
mov
adc
fwait
jg
clc
jle
and
pop
pop
retf
retf
stc
dec
test
ins
mov
mov
jae
lock
cmc
enter
jle
ficom
cmp
push
dec
sub
sbb
mov
fsubp
xor
adc
mov
jb
jg
and
shl
and
dec
ss
daa
movs
mov
dec
movs
imul
jnp
out
sbb
mov
sub
push
pop
mov
adc
push
sbb
stc
adc
mov
xchg
loop
cmp
pop
pop
ss
jbe
adc
jge
mov
(bad)
je
fs
adc
inc
stos
xor
and
dec
push
sbb
adc
push
loope
sub
jg
push
sbb
adc
jo
mov
and
popa
dec
aaa
pop
jle
mov
in
xor
loop
inc
loope
test
pop
add
ins
(bad)
icebp
je
xor
jno
bound
jmp
inc
cs
loope
inc
and
add
jg
rcr
push
add
rcl
cmps
mov
test
gs
push
mov
xor
pop
jno
je
add
sub
jnp
or
adc
rol
push
sbb
adc
xchg
sub
push
xor
jno
pop
les
mov
and
aaa
and
add
sbb
jp
clc
push
dec
adc
mov
test
dec
dec
mov
ret
js
(bad)
(bad)
xchg
mov
dec
jl
pop
xchg
jno
ret
ins
xor
sbb
push
add
das
in
jge
push
pop
sahf
mov
daa
hlt
adc
push
inc
xor
rcl
cmp
push
std
shl
outs
push
jp
shr
xchg
mov
xchg
mov
or
stc
sub
adc
cmp
popa
dec
in
sbb
xchg
stc
inc
jl
jne
xchg
add
push
call
sbb
ins
sub
push
es
(bad)
xchg
dec
adc
aas
or
xchg
and
out
sbb
or
sub
add
push
adc
inc
sbb
push
adc
xor
cmp
cdq
inc
ja
(bad)
mul
js
jg
xchg
sub
pop
xor
fs
stc
and
and
dec
arpl
adc
mov
fwait
movs
mov
xor
xchg
pusha
or
xor
data16
and
sub
inc
dec
adc
cmp
xchg
jl
mov
shr
jne
and
mov
jle
pop
fwait
rcl
sub
hlt
sub
cmp
jns
and
xchg
push
add
cmp
push
jp
adc
and
mov
nop
xchg
jo
add
adc
jmp
and
mov
fnstenv
lods
sub
cmp
inc
pusha
cwde
adc
lods
xchg
jbe
mov
movs
daa
outs
sbb
xchg
inc
daa
push
cmp
dec
xor
adc
test
shl
add
test
movs
and
ins
sbb
sbb
vmwrite
xor
cmp
mov
mov
pop
neg
sub
mov
xchg
add
mov
shl
(bad)
adc
dec
and
push
push
adc
and
push
xchg
mov
cwde
aas
cmp
retf
pop
xor
adc
sub
sahf
pop
hlt
xor
xor
xchg
div
mov
mov
es
pop
mov
push
pushf
dec
repnz
fisttp
aaa
jb
sbb
imul
pop
xor
dec
mov
mov
movs
push
rcl
adc
jl
adc
pop
inc
test
out
mov
mov
bound
imul
pop
push
adc
sbb
add
(bad)
jp
push
cdq
xchg
movs
inc
and
jp
lahf
inc
xor
icebp
pop
cmp
xchg
xchg
dec
(bad)
hlt
and
mov
pop
mov
inc
aaa
lds
aam
popf
(bad)
xchg
xor
movs
xlat
fcomp
cmp
hlt
xchg
sbb
or
inc
call
sub
sbb
repnz
sub
in
je
(bad)
mov
xor
or
mov
mov
jne
retf
inc
jle
mov
je
and
icebp
jnp
sar
xor
mov
pop
hlt
lods
sahf
dec
ja
inc
sbb
mov
mov
sub
aaa
xchg
pop
test
cli
xchg
mov
adc
xor
sub
pop
jge
shr
xchg
sbb
xchg
cmp
pop
clc
jp
cli
stos
and
dec
test
jae
add
test
lods
push
adc
je
rcl
mov
(bad)
and
or
cs
inc
lock
jae
repz
test
mul
pop
pop
sub
mov
jl
fs
add
mov
xchg
dec
not
stos
xchg
adc
retf
xchg
scas
or
cwde
dec
jmp
dec
aad
iret
stos
das
js
adc
add
xor
div
xor
je
test
ins
in
fwait
xor
in
call
lahf
and
cmp
inc
pop
adc
jns
dec
xchg
jno
or
xor
pusha
jb
das
and
mov
addr16
xor
ins
outs
pop
cdq
push
hlt
sub
je
pushf
adc
aas
jb
daa
ret
test
repz
mov
cmp
repnz
nop
inc
xor
mov
ror
add
pop
adc
xor
xchg
retf
inc
les
sub
adc
push
dec
hlt
or
push
aad
cwde
mov
and
les
loope
dec
shl
mov
jp
and
pop
call
xchg
inc
sub
and
shl
adc
cmp
adc
push
je
inc
xor
add
fwait
cdq
repz
xor
fsub
mov
imul
pop
sar
pop
sbb
xchg
scas
adc
sbb
repz
xor
stos
xchg
addr16
mov
lahf
ret
inc
cdq
push
mov
mov
push
mov
and
jge
gs
dec
inc
stos
loop
mov
sbb
adc
jne
and
sbb
pop
retf
outs
mov
sbb
je
aad
fdiv
out
dec
sbb
les
push
cmp
or
aam
retf
mov
pop
test
ins
or
dec
push
push
adc
loop
pusha
or
mov
inc
(bad)
push
pusha
adc
inc
fs
out
ds
xchg
and
sub
add
jecxz
dec
fwait
ja
and
dec
add
jae
test
xor
cmp
jnp
fcomp
pop
and
aad
jg
outs
adc
addr16
mov
es
inc
(bad)
je
sbb
and
fisubr
jmp
xchg
add
js
mov
movs
mov
pop
repz
xchg
or
push
sub
dec
movs
inc
sbb
pushf
fs
repnz
jnp
data16
adc
xlat
cmp
cdq
pop
mov
push
xchg
cmp
mov
mov
cmp
inc
fcomp
add
ins
mov
mov
mov
mov
push
test
mov
(bad)
lods
sbb
cmp
cmp
lods
popf
(bad)
cmp
sti
sbb
jp
add
sbb
xchg
inc
or
sbb
sub
icebp
mov
jae
cmp
xchg
sbb
repz
mov
push
jp
xchg
inc
pop
pop
mov
iret
imul
loope
mov
push
loope
xchg
xchg
cmp
icebp
adc
mov
xor
adc
mov
push
inc
add
xor
push
pop
or
push
aam
pushf
xchg
adc
call
sub
cmp
cmc
outs
ret
adc
mov
int
mov
mov
ins
nop
or
pop
imul
scas
enter
pop
pop
inc
icebp
xchg
out
data16
dec
aaa
inc
dec
mov
imul
shl
mov
imul
push
mov
fdivr
xor
pop
pop
cmp
xchg
mov
jmp
mov
mov
sbb
pop
xchg
push
lea
arpl
les
or
mov
movs
test
or
test
int
leave
popa
dec
ds
jae
(bad)
(bad)
lods
sbb
movs
mov
out
xor
mov
pop
leave
adc
xor
xchg
push
in
repz
sbb
add
cs
rol
mov
int
push
push
cmp
xchg
dec
jl
xchg
sbb
imul
adc
jp
xchg
es
xchg
mov
sbb
xchg
xor
pop
test
movs
jnp
sub
movs
cmc
imul
aas
pop
in
jns
or
or
je
daa
repz
adc
and
test
(bad)
dec
or
dec
call
or
mov
cmp
and
es
aad
sbb
push
sub
fs
movs
mov
lds
ins
mov
cwde
ret
gs
lods
scas
loopne
pop
dec
inc
mov
push
call
ret
dec
(bad)
retf
mov
adc
inc
mov
inc
leave
pcmpgtw
aaa
aam
add
arpl
cs
jb
xor
imul
dec
loopne
or
pop
pop
xor
imul
sbb
retf
movs
das
retf
loop
int3
push
pop
mov
sbb
scas
push
or
xor
sbb
test
in
mov
adc
push
jo
and
scas
add
dec
ins
mov
into
aaa
push
xor
cmp
and
loope
pop
test
sub
add
add
sbb
icebp
aam
push
adc
rcr
push
call
into
out
push
adc
mov
adc
gs
aad
add
adc
pusha
in
xchg
dec
gs
xchg
stos
or
movs
sub
imul
dec
je
sub
push
xchg
jb
icebp
in
xor
add
jae
push
inc
mov
retf
enter
push
rcr
sbb
cmp
dec
push
push
sub
sub
ss
dec
push
mov
add
push
sbb
ja
ror
jno
stc
cmp
xlat
adc
adc
jo
mov
and
inc
or
(bad)
jo
xor
and
pop
test
jnp
das
push
icebp
movs
jl
adc
adc
or
add
pop
add
mul
pop
aaa
test
daa
dec
ja
sub
movs
scas
retf
xchg
xor
repz
fs
cmp
push
fwait
inc
inc
(bad)
cdq
jns
data16
out
sub
inc
hlt
or
sub
inc
stos
(bad)
ss
call
loopne
(bad)
mov
sbb
sbb
xor
cmc
cmc
sub
call
test
lahf
inc
pushf
clc
jmp
aas
aaa
movs
(bad)
daa
cmps
dec
scas
std
mov
or
add
xor
xchg
push
sub
ret
and
mov
inc
and
sbb
or
push
cmps
rcr
inc
arpl
jl
inc
dec
call
dec
push
das
dec
ret
retf
test
ror
call
add
in
or
add
mov
aas
xor
hlt
mov
loope
(bad)
retf
push
push
ins
out
ins
mov
mov
int3
jno
iret
fcmovnb
adc
sub
jge
call
out
in
xor
dec
jbe
cdq
(bad)
sti
ret
jmp
(bad)
loop
out
sbb
xchg
(bad)
push
xlat
ret
cli
mov
push
sub
inc
hlt
cmp
cmps
shl
outs
pop
mov
out
cmp
ret
and
xchg
xchg
add
ins
mov
in
outs
pop
inc
mov
in
xor
jbe
pop
jle
aas
enter
lods
add
xchg
dec
cmp
jae
xchg
out
jge
add
jge
out
pop
sub
or
mov
cmps
lds
(bad)
(bad)
add
leave
in
add
lock
inc
cli
pusha
mov
cmp
loop
pop
out
adc
inc
jecxz
mov
fdiv
jae
xchg
cmp
xchg
xor
or
rcl
imul
lock
retf
leave
jne
pop
mov
retf
inc
sbb
jge
xor
mov
xchg
fadd
dec
clc
pusha
cmps
xor
add
nop
pop
inc
xor
lods
inc
call
lods
loope
in
add
into
enter
add
popa
mov
rcl
sbb
pop
cmps
mov
mov
gs
and
popa
in
mov
adc
hlt
or
add
xlat
fsub
es
jmp
shl
mov
daa
add
fstp
add
add
mov
dec
hlt
jmp
in
dec
dec
fs
pop
jl
dec
or
dec
pop
xchg
outs
outs
pop
movs
inc
adc
xor
sub
call
stc
in
mov
ins
push
add
(bad)
fs
mov
push
mov
jnp
test
ficom
cli
ss
out
pop
xor
clc
cmp
pop
sub
sbb
pop
rol
pop
into
sbb
push
aad
cmp
jnp
gs
inc
clc
cmps
pusha
test
mov
sub
fsub
cmps
fild
fwait
mov
loope
add
ret
jno
into
dec
pop
aad
int
ss
and
retf
jmp
cmc
fcmovu
cmps
jb
shl
xor
mov
call
je
cwde
jo
out
jae
push
retf
pop
es
inc
xor
xchg
and
lods
or
ds
(bad)
(bad)
sub
imul
ret
ins
leave
push
mov
cmp
sbb
add
gs
lea
push
retf
test
(bad)
iret
push
dec
xchg
inc
push
imul
push
je
fld
aam
sbb
mov
and
xor
sub
ja
pusha
movs
jmp
rcl
mov
mov
xchg
stos
cdq
and
in
sub
clc
hlt
adc
fnstsw
je
stos
inc
fdivrp
sar
mul
mov
cmps
sbb
mov
mov
add
daa
(bad)
repz
call
mov
push
fs
push
xchg
in
xchg
mul
(bad)
and
push
arpl
or
xchg
loopne
push
jo
rol
shl
cmp
ret
js
sahf
sahf
dec
(bad)
std
sub
pop
adc
lea
cmp
(bad)
fcmove
stos
sbb
in
(bad)
shl
call
mov
pop
jbe
add
test
add
pop
cmp
sbb
enter
repz
lods
lahf
jmp
aas
jo
mov
xchg
inc
addr16
(bad)
aad
outs
out
adc
push
stos
addr16
xchg
inc
push
lods
pop
mov
adc
mov
mov
xlat
ins
call
ins
lods
mov
xor
in
inc
loopne
mov
jecxz
push
add
ficomp
adc
sub
push
or
push
push
aam
xor
test
mov
sbb
add
mov
(bad)
sbb
loope
adc
daa
out
xor
push
repz
test
lods
mov
call
jnp
int
lahf
xor
ins
cmps
mov
dec
fiadd
xor
loopne
das
sbb
lods
sub
test
(bad)
(bad)
push
retf
test
xchg
je
clc
nop
cmp
push
xchg
outs
dec
dec
push
ds
jg
aas
and
jnp
mov
cmps
pop
sbb
retf
xor
sub
out
in
sub
xor
test
lahf
or
or
daa
sbb
(bad)
sahf
mov
maxps
les
inc
mov
(bad)
lods
adc
les
sbb
xchg
addr16
sbb
mov
dec
adc
push
mov
add
mov
sub
adc
mov
pop
sbb
pop
mov
xor
xor
ins
iret
fidivr
neg
cmc
sti
hlt
hlt
repz
imul
sub
pop
pop
(bad)
cmp
sub
jne
mov
dec
scas
push
loope
mov
mov
xchg
int3
mov
or
dec
(bad)
cdq
push
xchg
mov
jmp
or
mov
pop
(bad)
sub
ja
mov
retf
and
adc
les
test
push
adc
push
cmps
cmp
inc
xor
and
sbb
ss
sub
cld
fsub
sbb
cmp
xchg
pop
adc
stc
jl
or
cmp
pusha
in
jle
cmp
fcomi
into
hlt
xor
stos
add
dec
sub
mov
cmp
rol
mov
dec
icebp
(bad)
pop
in
mov
js
push
and
xchg
call
mov
leave
jl
loopne
cmp
adc
or
mov
pop
and
sub
mov
sub
xlat
pop
repnz
mov
idiv
es
push
adc
xchg
mov
inc
test
lahf
lahf
cmp
ficom
cmp
sbb
push
and
jp
fnstcw
mov
or
pop
sbb
cmp
cwde
mov
sub
outs
pusha
pop
outs
sbb
pop
inc
pushf
sub
or
push
pop
imul
das
push
shl
es
shl
pop
imul
push
mov
dec
adc
and
push
mov
add
dec
inc
pop
(bad)
int3
ins
inc
or
sub
jmp
xlat
add
not
pop
cmp
mov
retf
mov
xchg
dec
es
lods
xor
aad
adc
lods
(bad)
repz
ins
fwait
lods
mov
sbb
scas
hlt
fnstcw
add
mov
leave
xchg
adc
fdiv
and
js
dec
sub
(bad)
scas
fidiv
mov
pop
jae
js
femms
jne
adc
stos
test
cmp
aas
xor
and
push
cs
cmps
data16
in
add
pop
sbb
inc
xchg
les
cmp
call
push
ds
push
loope
jl
cmp
xor
fadd
and
push
ins
sbb
daa
int3
into
in
mov
mov
sbb
cli
cmp
int
xor
xchg
daa
xor
cwde
test
aam
dec
or
xchg
neg
mov
fsubr
fcomp
inc
(bad)
clc
test
push
std
in
in
push
ret
sub
mov
test
rol
pop
les
sar
fidivr
(bad)
out
and
test
in
in
or
out
ret
pop
sub
mov
in
add
mov
into
dec
stc
adc
test
rcr
inc
cmc
cmp
adc
pop
cmp
pop
jecxz
inc
pop
adc
mov
and
movd
add
xlat
mov
xchg
add
(bad)
and
sub
sbb
inc
adc
mov
bound
ror
and
sar
and
push
dec
xchg
cs
inc
jmp
cli
jecxz
add
lds
sub
and
cs
sub
mov
adc
sub
pop
(bad)
rcr
xchg
les
and
fimul
stos
fcomp
xor
jge
inc
int3
xor
mov
cmp
imul
sub
xor
sbb
popf
and
pop
xor
popa
mov
mov
test
loope
cmp
add
pop
jae
(bad)
retf
outs
push
(bad)
in
call
sti
jmp
or
arpl
ret
es
add
rol
jmp
imul
and
lahf
leave
hlt
jg
xor
sbb
sbb
out
push
call
cli
sub
lods
cmp
(bad)
add
movs
stc
pop
ror
xor
sahf
pop
sub
jle
pop
into
mov
ins
inc
xchg
cdq
add
adc
push
mov
(bad)
mov
lods
addr16
inc
bound
mov
fstp
in
cli
add
addr16
lods
xor
mov
iret
aaa
cdq
mov
xchg
sub
rol
shr
test
pop
xchg
and
fiadd
in
xor
cli
xchg
pmulhw
js
cld
iret
fiadd
mov
or
xchg
test
pop
jns
test
les
repnz
mov
dec
xchg
out
inc
in
adc
fild
lods
mov
and
out
mov
push
in
in
rol
sti
adc
rol
outs
pop
div
push
mov
xchg
dec
lea
lods
dec
lock
mov
push
push
sti
stos
repnz
push
and
jmp
xchg
jp
loop
mov
scas
std
sub
mov
test
cld
imul
or
push
or
ins
push
loop
push
pop
loop
adc
lock
mov
std
rcl
cmp
inc
jb
and
jg
loopne
(bad)
aam
dec
jle
or
push
cmp
dec
(bad)
fwait
sub
scas
shr
and
popa
movs
std
(bad)
int
mov
scas
mov
(bad)
sbb
or
mul
dec
add
cmp
add
xchg
mov
mov
jle
mov
sahf
mov
sbb
pop
ja
inc
jbe
push
pusha
pop
stos
or
mov
dec
xlat
shl
aas
adc
push
rcr
fsubr
sub
dec
mov
xchg
scas
call
push
loopne
pop
sbb
jecxz
xor
sub
or
call
jp
bound
mov
addr16
dec
pop
mov
jp
mov
xchg
loop
push
mov
cmps
retf
std
cli
add
adc
jmp
jmp
add
dec
inc
dec
inc
add
add
add
pusha
add
(bad)
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
fadd
xchg
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
fmul
and
lea
std
aam
push
push
cmp
or
int3
in
jg
push
xchg
mov
pop
bound
dec
sub
pop
sbb
popf
or
in
pop
mov
sub
int3
mov
je
adc
imul
outs
jg
sbb
cmps
push
test
ret
xor
mov
call
es
mov
adc
bound
push
mov
xchg
push
push
mov
mov
stos
outs
add
mov
cmp
sbb
inc
push
jae
push
test
fcom
cmps
pop
jno
adc
cli
repz
adc
cwde
pop
scas
jp
xlat
enter
repnz
pop
shl
or
fisubr
jns
push
xor
div
xchg
push
and
fcom
mov
addr16
mov
cmp
dec
jne
jmp
dec
movs
jle
or
xchg
fdiv
adc
call
int
mov
(bad)
and
rol
addr16
sub
lahf
fs
pop
mov
ror
test
in
scas
push
dec
jae
scas
imul
push
aam
ins
pop
pop
add
and
(bad)
nop
movs
add
mov
outs
jae
into
popf
xor
call
imul
(bad)
jae
js
(bad)
sbb
ficom
jnp
xchg
dec
inc
cmp
mov
dec
sbb
test
cmp
sahf
cmps
scas
in
out
lods
inc
fistp
sbb
lds
cmp
dec
pop
mov
pop
in
mov
nop
xor
test
pushf
xor
hlt
xor
retf
das
fsubp
inc
add
test
test
pop
je
scas
retf
ins
and
or
sub
not
in
lods
and
(bad)
rcr
loope
jae
push
mov
(bad)
rcr
int3
bound
call
out
bound
stos
push
sbb
jns
adc
ret
or
jle
pop
add
pop
jne
xchg
ret
sahf
imul
dec
pop
mov
(bad)
shl
sbb
push
ret
mov
aam
or
jmp
loopne
jo
pop
push
sub
xchg
not
cs
pop
pop
sub
ins
jae
ss
adc
rol
outs
int3
lods
push
jb
fsubr
fs
movs
lea
mov
xor
inc
aaa
test
pop
cs
lea
(bad)
sbb
xchg
inc
and
dec
(bad)
xor
mov
loop
ds
mov
push
loope
je
xchg
(bad)
stc
push
jbe
cmc
jmp
pop
imul
xor
jae
sub
mov
xchg
mov
xchg
xchg
rcr
jmp
xchg
jmp
xor
(bad)
fcom
push
movs
and
sbb
je
fwait
xchg
add
inc
(bad)
mov
xchg
and
out
jb
sbb
ds
cmp
add
and
and
es
jl
jo
out
xchg
dec
movs
dec
js
ror
pop
dec
push
pop
jecxz
cdq
ins
test
dec
mov
frstor
push
test
dec
sub
aad
mov
bound
or
das
fisubr
mov
mov
adc
sbb
out
imul
inc
jl
or
sub
sbb
test
push
repnz
pop
sub
mov
popa
pop
dec
pop
std
xchg
push
or
(bad)
sbb
mov
sbb
pcmpgtb
int
rcr
add
sub
enter
imul
jno
inc
and
iret
mov
push
mov
cmp
cwde
scas
push
popf
sub
push
jbe
inc
and
int
xlat
and
mov
enter
cmp
mov
fistp
retf
aam
leave
xchg
ds
(bad)
dec
stos
push
bound
pop
inc
push
and
cmp
jnp
inc
jp
into
call
push
mov
cmp
(bad)
xor
pop
sub
das
adc
movs
pop
out
cmp
pop
aam
pop
or
aam
mov
mov
daa
dec
lods
cli
cdq
cmp
mov
mov
inc
mov
lds
mov
aaa
mov
icebp
ins
in
in
scas
push
(bad)
daa
cdq
out
shl
mov
jp
aas
mov
gs
or
and
div
enter
fs
cwd
leave
call
sub
xchg
rcl
cmp
sub
xor
pop
es
ins
rcl
mov
dec
ins
xchg
cdq
jmp
repz
inc
arpl
pop
stos
sub
adc
lea
call
xchg
mov
inc
sbb
cmp
stos
push
pop
mov
sub
push
pushf
test
dec
cmc
sub
fist
sti
shl
imul
push
pusha
pop
fs
leave
lods
or
shl
mov
out
stos
dec
push
dec
adc
sub
rcr
cmps
mov
aam
inc
push
dec
loop
repnz
pop
sub
add
cmp
inc
pop
pop
cwde
call
jl
in
sub
shl
jmp
mov
mov
lock
arpl
xchg
pop
jp
jge
(bad)
cli
jecxz
rcl
in
sub
loopne
movs
aam
mov
sub
in
icebp
imul
mov
xor
mov
lods
cmp
inc
mov
bound
aad
ins
sub
sahf
mov
push
and
popf
dec
pop
or
ss
pop
add
inc
xchg
pop
(bad)
enter
jge
cmp
inc
pop
jo
mov
sub
aas
or
rol
scas
(bad)
outs
sub
or
dec
mov
lods
fisttp
xor
out
pusha
pop
dec
xor
rcl
pop
sbb
ffree
inc
popa
(bad)
fimul
cwde
stos
adc
xor
mov
sub
adc
test
push
lods
arpl
and
mov
je
and
inc
mov
int
mov
push
(bad)
pop
xchg
inc
imul
mov
out
aam
iret
jnp
imul
xor
sbb
das
xchg
add
jmp
jle
stos
stos
lods
pop
ficom
xchg
(bad)
pop
leave
call
dec
rol
pushf
hlt
mov
fist
xchg
and
scas
pop
fnstsw
xchg
into
(bad)
mov
mov
push
sub
pushf
loop
ins
out
pop
dec
adc
jnp
stos
imul
cld
rol
push
inc
out
cmp
push
sub
dec
es
inc
pop
test
sbb
and
pop
sub
jmp
mov
and
sub
push
mov
ins
scas
push
imul
xchg
mov
cmps
stos
jb
out
push
(bad)
pop
movs
push
ss
mov
je
mov
mov
sub
sbb
sbb
push
pop
sbb
movs
jnp
in
jle
adc
add
cmps
popf
movs
cwde
nop
cmp
push
pmaxsw
aam
or
add
iret
pop
mov
jmp
es
mov
mov
mov
adc
xchg
leave
xor
dec
shl
sub
xchg
sbb
repnz
scas
sub
cmp
dec
inc
js
push
in
dec
inc
or
pop
xor
(bad)
loopne
rcl
jns
lahf
push
sub
pop
sbb
mov
dec
lahf
mov
shld
fcmovne
(bad)
or
outs
(bad)
(bad)
fldenv
retf
jmp
push
pop
sahf
into
jo
call
xlat
pop
adc
aas
dec
xor
lods
shl
jne
inc
(bad)
bound
call
sub
mov
stos
sbb
push
add
outs
mov
movs
lea
jp
push
sub
push
inc
push
loope
push
ficomp
fld
xchg
mov
sbb
push
mov
in
call
push
jb
jno
sbb
test
bound
outs
and
loop
ins
and
popa
enter
out
add
imul
out
jecxz
xchg
leave
push
fstp
fisub
pusha
or
sti
(bad)
out
pop
dec
call
ss
push
test
icebp
sbb
cmp
mov
mov
popf
cmps
(bad)
mov
fnstenv
adc
int
sbb
jg
test
xor
push
in
int
cmp
sbb
adc
push
(bad)
push
jg
push
jge
dec
fistp
mov
inc
sar
lods
es
push
fld
fdiv
pop
mov
je
mov
movs
sbb
out
mov
iret
bound
push
test
lods
jmp
test
jmp
push
cmp
repnz
cmp
shl
jp
xchg
lods
out
mov
icebp
jne
cmp
call
pushf
aad
xor
add
cmps
dec
inc
push
inc
shl
mov
lea
jmp
dec
push
rcr
out
and
dec
jno
inc
cmp
movs
inc
jl
jge
inc
loope
mov
and
or
div
or
push
or
fsub
fs
adc
mov
sar
imul
sub
adc
and
jp
adc
ins
mov
leave
sub
jmp
mov
test
mov
enter
scas
fmul
dec
pop
sbb
sub
push
xchg
dec
es
cli
mov
dec
(bad)
dec
dec
lahf
inc
mov
inc
xor
or
mov
je
popf
ins
sar
cmps
xor
jmp
push
dec
fwait
test
sbb
pop
xor
mov
mov
cmp
shl
xor
xchg
fiadd
(bad)
test
push
sbb
pop
sub
xchg
hlt
push
cs
repnz
sbb
sub
xchg
in
daa
cmp
and
(bad)
xchg
fbstp
mov
fdiv
jno
ror
ja
and
lods
lods
fnsave
(bad)
repz
sub
js
dec
mov
jp
cdq
aam
stc
shl
(bad)
das
sub
cmps
and
fsub
movs
dec
xor
fidiv
(bad)
dec
sub
and
leave
retf
repz
fadd
or
cdq
jecxz
stos
xlat
jb
mov
ins
loope
retf
push
lahf
and
dec
dec
fistp
xchg
fdiv
arpl
adc
xor
dec
stos
aam
add
mov
mov
pushf
jns
ins
dec
movs
and
inc
int3
jmp
stos
fisubr
xchg
sti
loopne
push
push
cmp
(bad)
add
pushf
out
xchg
xor
xor
pop
mov
mov
inc
dec
sub
dec
mov
(bad)
aaa
movs
dec
inc
jb
lods
ret
mov
sub
jp
mov
push
sub
sub
mov
mov
test
mov
arpl
dec
dec
mov
(bad)
fs
cdq
movs
or
sub
mov
cmps
loope
or
inc
pop
out
arpl
dec
fldpi
jae
mov
cmps
(bad)
ja
push
pop
cmps
mov
lds
fadd
call
push
cmp
push
aad
jmp
ins
lds
push
push
pop
inc
inc
push
push
inc
lds
cmp
test
icebp
mov
cmp
aam
(bad)
xchg
in
xchg
mov
scas
push
(bad)
push
imul
imul
pop
sub
fdiv
test
in
movs
repz
jge
push
les
xchg
and
mov
lods
jo
pop
pop
and
scas
fs
outs
mov
dec
and
and
lds
call
nop
mov
addr16
imul
inc
jmp
dec
js
cmps
jnp
jle
dec
mov
call
fidiv
imul
mov
ret
int
shl
sbb
pop
push
in
xchg
and
cmp
in
sti
fsub
sub
jmp
xchg
out
add
push
xchg
and
aaa
jns
das
mov
push
mov
or
loope
pushf
mov
or
nop
cwde
push
retf
jmp
add
sbb
(bad)
popf
mov
adc
mov
cs
pop
test
movs
data16
push
sbb
cmp
imul
cmp
xchg
add
loopne
jle
push
inc
call
sub
inc
add
das
inc
in
aad
loop
loope
pop
dec
cmp
xor
enter
ins
sti
mov
jo
push
mov
int3
xor
fwait
push
xor
mov
jae
mov
cmps
add
dec
hlt
xor
les
and
test
out
cmps
(bad)
int3
dec
js
je
add
jbe
aas
jb
in
pop
sbb
sub
xor
and
push
push
aam
test
mov
mov
cmp
xor
fild
xor
sbb
sbb
aad
add
dec
push
xchg
lock
and
stos
mov
mov
inc
xchg
sbb
fidivr
ss
or
and
mov
cs
jge
push
mov
test
ret
lahf
mov
repnz
test
cdq
ins
aad
scas
test
push
imul
mov
lock
ja
xor
aam
scas
inc
adc
pop
mov
mov
mov
xchg
push
mov
sbb
mov
push
push
ja
cmp
push
repz
push
and
(bad)
rol
mov
sub
in
(bad)
mov
je
xchg
cmp
dec
jae
mov
mov
or
xor
push
outs
mov
cwde
pop
jb
mov
outs
xchg
xor
movs
mov
pusha
jb
imul
(bad)
ins
icebp
and
cmps
mov
les
push
shl
imul
in
sahf
mov
in
ins
mov
inc
sar
and
sub
mov
jecxz
fnsave
adc
mov
stos
push
imul
sub
aam
stos
jmp
inc
ret
test
push
or
jnp
movs
popf
push
(bad)
je
daa
out
ins
pop
shr
ds
ins
sti
iret
dec
stos
cmp
mov
cmp
ins
pusha
xchg
add
adc
push
dec
test
sbb
inc
stos
xor
sbb
mov
and
inc
lahf
dec
mov
rcl
test
push
cmps
adc
nop
xor
ins
mov
add
sub
into
rol
xchg
fisub
mov
call
loop
jo
das
mov
in
hlt
movs
pop
add
(bad)
cwde
test
sbb
mov
inc
stos
jo
xor
in
jbe
test
cmp
inc
pusha
jae
not
pop
(bad)
outs
xchg
cdq
sbb
lods
popa
or
out
jle
stos
(bad)
test
inc
mov
aam
(bad)
cmp
imul
xor
movs
push
dec
dec
cmps
pusha
clc
stc
test
xor
sub
dec
outs
xchg
ins
sahf
sub
push
test
cmc
adc
pusha
dec
or
sub
and
jp
ins
and
ror
xor
lods
leave
mov
aad
xchg
cmp
mov
and
lods
pop
pop
pop
or
inc
xor
xor
test
push
leave
xor
dec
in
data16
mov
(bad)
sar
rcl
add
cmp
rcr
xchg
cli
mov
xor
xchg
sub
jg
push
mov
jne
pop
xor
jbe
(bad)
mov
mov
lahf
sub
test
out
jno
sbb
fcom
stos
inc
jp
sbb
in
lea
arpl
shr
not
mov
cmc
xor
call
test
fadd
mov
jno
mov
xchg
or
mov
push
inc
daa
push
inc
dec
inc
dec
enter
lods
nop
adc
stos
repnz
push
imul
loope
jge
jnp
gs
lahf
fs
cdq
test
js
std
dec
xor
stc
imul
pop
inc
jbe
add
pop
fwait
aam
pop
mov
js
(bad)
pop
pop
xor
iret
jp
jno
fwait
outs
fs
xor
daa
and
imul
(bad)
mov
sbb
xor
mov
push
adc
push
jle
mov
xchg
or
lahf
push
mov
cmp
loopne
lods
mov
hlt
popa
gs
mov
dec
push
push
fcomp
lds
cmp
inc
inc
arpl
pop
enter
pushf
jno
cs
push
adc
cdq
aad
xor
popa
sub
or
pop
outs
xor
jo
mov
mov
xchg
xchg
push
xchg
jae
adc
data16
fisub
mov
fdivr
mov
add
out
loope
iret
cmps
fdiv
pop
push
jge
js
lods
in
(bad)
jb
mov
test
imul
push
pop
jl
xchg
mov
jae
sub
push
test
xor
or
pushf
loopne
sbb
jno
mov
cmp
fild
inc
adc
(bad)
movs
jno
mov
cmp
cmp
cli
adc
jmp
pop
(bad)
mov
mov
fistp
(bad)
cdq
adc
(bad)
mov
dec
retf
xchg
sbb
xchg
cmps
xor
pop
cmp
int3
sub
fwait
mov
xchg
call
test
cmps
or
aas
xchg
adc
jnp
jmp
aad
and
mov
push
mov
mov
sub
sbb
int3
fidiv
inc
xchg
test
fsub
xor
cmp
sub
cmps
out
mov
xor
sub
outs
push
cdq
repz
xchg
into
dec
xor
mov
xchg
pop
mov
ret
mov
and
xchg
jns
inc
add
push
popf
rcl
xchg
fidiv
sbb
push
dec
arpl
enter
mov
xor
add
dec
into
jno
sub
retf
cdq
push
(bad)
sub
mov
pop
les
test
cmp
push
and
or
cmp
ins
stos
ins
ins
sbb
push
sub
fcom
push
shl
daa
pop
(bad)
or
adc
jecxz
xor
push
lea
ins
push
sbb
cmp
(bad)
ror
jno
xor
fstp
and
aad
push
dec
dec
xor
fld
setnp
adc
inc
and
sub
push
mov
sbb
je
xchg
or
push
sub
and
inc
data16
ins
ja
scas
aad
ror
mov
imul
add
and
test
ja
adc
mov
xor
stos
sbb
adc
and
test
dec
dec
dec
out
pop
fcom
fld
sbb
sub
inc
mov
mov
xchg
pop
shl
mov
jno
jb
daa
and
sub
daa
sahf
lock
(bad)
cwde
or
sbb
shl
(bad)
ds
test
call
push
dec
jno
std
mul
dec
or
cmp
xchg
inc
sbb
sahf
in
call
int
ror
kmovw
(bad)
push
stos
jmp
sbb
mov
call
enter
aas
jnp
and
push
in
and
cmps
leave
push
inc
cmp
out
sahf
pop
cmp
js
sub
xchg
inc
imul
outs
dec
es
xchg
js
jp
pop
push
mov
dec
adc
xor
aaa
sbb
cmps
ret
inc
(bad)
arpl
(bad)
(bad)
pop
add
(bad)
pop
add
and
add
(bad)
pop
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
and
