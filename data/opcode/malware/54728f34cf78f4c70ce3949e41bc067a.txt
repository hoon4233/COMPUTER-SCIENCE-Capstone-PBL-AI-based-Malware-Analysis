push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
mov
mov
mov
and
mov
pop
add
ja
mov
mov
mov
mov
mov
add
test
daa
add
mov
femms
mov
clc
stos
jmp
mov
sub
mov
int
add
add
(bad)
and
add
add
xor
cld
add
cmp
mov
je
jmp
lods
test
mov
sub
clc
add
jg
xchg
in
add
dec
add
call
add
test
repnz
in
lods
test
add
add
mov
add
(bad)
and
add
add
add
(bad)
ss
loopne
add
je
jmp
mov
sub
mov
and
add
add
(bad)
and
push
add
add
xchg
sub
out
and
add
add
in
daa
push
ja
jmp
ret
adc
sbb
and
add
add
add
inc
add
add
in
sub
mov
add
jl
or
add
ds
add
mov
sub
(bad)
pop
and
add
dec
pcmpgtd
add
add
popa
add
add
add
sub
mov
mov
add
add
(bad)
fiadd
add
add
add
outs
test
cld
add
add
mov
add
(bad)
add
add
outs
add
in
inc
dec
std
fistp
mov
rol
inc
add
jmp
add
add
sub
and
and
inc
add
push
or
add
add
add
mov
pop
mov
(bad)
rol
add
popa
xor
sbb
sub
mov
mov
add
loopne
adc
add
add
add
inc
and
js
test
add
add
(bad)
pusha
add
xor
add
add
test
cld
add
add
mov
movs
(bad)
dec
inc
add
jmp
mov
fild
mov
sub
or
test
add
and
push
cwde
call
add
outs
test
hlt
add
add
inc
in
mov
imul
add
clc
add
add
and
in
push
mov
test
aad
jmp
or
xor
add
add
into
mov
sub
and
push
add
and
fdivr
add
dec
pop
mov
and
add
add
test
pop
add
jmp
mov
pop
ror
std
cwde
mov
cmp
inc
add
ins
add
add
leave
sub
mov
scas
test
test
or
add
pop
test
add
add
xor
mov
ins
test
push
push
add
jmp
mov
sub
add
syscall
adc
cld
add
sbb
add
sub
mov
psllw
add
add
popa
xor
add
add
fcomp
hlt
jp
jmp
mov
and
add
jmp
push
and
add
jmp
mov
adc
dec
pop
call
je
jmp
mov
mov
mov
(bad)
and
add
add
in
mov
push
cld
fld
add
jmp
test
pop
add
add
test
cld
add
add
mov
dec
push
push
fisttp
test
loop
push
ret
and
ucomiss
add
jmp
mov
sub
mov
and
je
jmp
mov
sub
ins
inc
dec
pop
je
jmp
mov
sub
call
mov
jmp
lods
test
mov
add
mov
test
mov
pop
mov
fisttp
jge
cmp
inc
sbb
add
add
mov
test
add
add
les
and
je
add
add
sub
mov
outs
test
ins
add
add
cmp
sub
mov
dec
pop
je
jmp
mov
cld
add
shl
je
jmp
in
and
in
add
test
add
jmp
mov
add
mov
je
jmp
into
dec
push
mov
mov
cmp
and
in
mov
cmp
cmove
test
jbe
add
mov
mov
stos
call
cmp
in
mov
cmp
cmove
sbb
stc
stos
add
imul
add
(bad)
outs
loope
add
int
add
xor
add
inc
shr
add
add
jmp
mov
imul
add
push
xor
add
fdivr
jnp
mov
mov
jge
add
fxch
jge
add
xor
cmp
add
push
psrlw
adc
jmp
cmp
ss
mov
xor
mov
and
scas
push
cmp
xchg
and
and
mov
and
and
xor
or
xor
mov
stos
and
or
call
cmovne
mov
jmp
mov
cmp
xor
mov
mov
add
sete
outs
mov
sbb
jle
mov
sar
add
cmp
mov
loopne
or
add
add
add
movnti
add
cmps
inc
add
add
setl
mov
xor
and
and
loopne
inc
fadd
sub
and
adc
and
or
xor
xor
inc
and
or
xor
in
retf
xlat
or
test
mov
and
cmovne
mov
xchg
jmp
mov
adc
xchg
stc
sbb
add
ret
inc
ror
add
popa
add
cmp
jnp
add
mov
(bad)
or
add
add
test
cmp
jmp
jae
dec
in
add
mov
test
add
dec
mov
push
rol
movs
ins
xor
mov
add
add
arpl
retf
rol
daa
mov
inc
add
mov
sub
in
sar
add
xor
mul
sbb
add
call
add
add
add
dec
in
daa
unpcklps
or
and
xor
or
(bad)
stc
cmovne
test
add
jmp
push
add
mov
mov
mov
sbb
add
call
jns
add
mov
(bad)
fcmove
xor
mov
mov
push
add
add
xchg
(bad)
cmps
out
mov
sbb
push
and
push
add
add
lock
jmp
fld
enter
popa
add
xchg
mov
mov
xor
mov
xor
in
repz
ins
inc
add
mov
and
fisttp
inc
and
and
push
out
and
dec
fsubr
dec
pop
mov
and
jg
mov
and
mov
mov
xor
mov
or
xor
fs
add
or
retf
and
add
add
mov
mov
sbb
add
imul
push
int
add
add
mov
sub
push
sbb
sar
add
xor
ins
xlat
cmps
(bad)
xchg
add
and
out
xchg
add
and
sub
outs
in
push
dec
add
add
pushf
(bad)
inc
and
xor
add
inc
ror
cmp
das
test
inc
mov
mov
inc
pop
stos
outs
add
adc
add
mov
jecxz
int3
jge
add
mov
pop
sub
push
test
xchg
jge
mov
add
cmp
sete
cmp
add
outs
xor
lock
jmp
add
jmp
sbb
test
cmp
jmp
mov
mov
mov
and
jge
add
xlat
sub
sub
add
jl
pop
xchg
fwait
push
jge
loop
add
add
cli
add
add
pminsw
add
jne
mov
and
xor
or
test
cmovne
mov
add
in
add
mov
mov
xor
mov
popa
out
or
retf
out
add
add
sub
lahf
out
mov
loop
push
add
add
pavgw
cmp
setl
jmp
sti
mov
clts
and
mov
jmp
mov
jmp
mov
jmp
mov
add
push
dec
ins
mov
(bad)
jmp
jge
add
add
jmp
mov
and
add
add
out
or
ins
push
add
adc
ror
loop
imul
add
test
add
add
pop
add
add
add
lea
pop
mov
cmp
xor
inc
add
add
pop
sub
push
add
push
add
pop
xchg
fsub
adc
ins
inc
and
scas
inc
and
pop
ja
dec
mov
mov
stos
add
add
or
and
jmp
mov
mov
add
add
push
in
scas
jmp
scas
cli
and
add
ja
in
call
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movzx
mov
aam
lock
jmp
mov
mov
mov
mov
enter
adc
inc
and
mov
dec
cld
dec
aad
jo
inc
and
inc
dec
and
jg
jmp
mov
sub
mov
jg
sbb
test
sub
mov
and
and
add
add
and
sub
mov
je
jmp
imul
cs
shl
bound
jmp
mov
sub
mov
and
out
test
out
mov
add
loope
fsubr
je
inc
add
add
adc
sub
inc
inc
and
sbb
jns
add
dec
add
pop
xchg
movs
and
xchg
leave
push
cs
mov
jno
test
add
psubsw
add
add
push
(bad)
addr16
or
and
sbb
add
mov
sub
mov
(bad)
fld
add
loopne
mov
xlat
add
add
dec
movs
push
cs
das
cli
add
add
inc
(bad)
mov
retf
(bad)
and
xchg
movs
ret
adc
scas
lea
add
retf
sub
mov
cmp
cmove
lea
add
mov
mov
test
and
cmp
mov
mov
jmp
pop
pop
out
add
inc
mov
xor
dec
dec
adc
test
push
add
mov
jmp
mov
mov
inc
push
and
mov
mov
les
push
or
sbb
push
sub
mov
mov
jmp
mov
shl
pop
pop
xor
adc
inc
xchg
(bad)
(bad)
call
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
or
add
mov
lods
mov
mov
cmp
adc
mov
mov
add
stos
rol
mov
mov
sbb
rol
add
jmp
mov
sub
lea
jg
je
sub
add
add
sub
mov
add
fisub
add
add
cmc
xor
add
shr
mov
and
add
lods
bswap
cld
push
add
je
push
std
popf
mov
mov
cmps
and
add
pop
(bad)
rol
add
add
test
add
sub
mov
dec
(bad)
and
add
jmp
mov
and
add
sub
je
and
add
popf
imul
iret
add
jmp
mov
clc
ds
movs
mov
mov
jmp
mov
sub
mov
setns
push
add
jmp
mov
mov
add
mov
aas
test
cld
add
sbb
sub
add
lds
sub
add
push
inc
mov
and
add
add
(bad)
add
add
add
mov
fcom
ret
mov
and
add
jg
movs
add
add
pop
sub
mov
(bad)
add
add
(bad)
jbe
add
jmp
mov
sub
inc
test
in
add
add
(bad)
and
add
sbb
test
add
add
aas
push
mov
sbb
jne
add
cmovno
add
jmp
mov
push
scas
pop
out
jle
test
in
add
mov
jmp
pop
add
and
add
sub
mov
je
jmp
cdq
test
add
add
mov
jg
jmp
mov
sub
mov
int3
cmp
test
or
add
add
add
add
sub
test
aam
add
xchg
(bad)
and
add
adc
add
add
add
call
mov
montmul
cmps
inc
jl
push
jmp
mov
sbb
mov
setb
inc
lods
add
add
add
mov
and
enter
(bad)
cmps
xor
add
add
cmc
add
add
sub
mov
jg
jmp
es
add
sub
adc
and
popf
sub
test
add
mov
test
and
add
lods
push
je
retf
and
add
int3
btr
add
shr
adc
add
add
sub
and
and
add
add
push
sldt
jmp
mov
and
add
sub
das
test
xchg
add
jns
(bad)
and
add
jmp
mov
sub
mov
add
add
test
add
jmp
mov
retf
add
sub
test
popf
add
jg
sbb
and
add
shl
add
add
mov
je
jmp
mov
sub
test
mov
(bad)
and
add
je
add
add
popf
add
mov
aad
add
pop
push
int3
or
add
(bad)
add
add
add
loope
pushf
adc
mov
hlt
pushf
add
add
add
mov
popa
out
dec
stc
fwait
sbb
and
jns
jmp
jle
and
add
add
pop
mov
add
and
add
add
(bad)
and
add
jmp
xchg
test
inc
add
sub
lea
je
adc
add
and
add
mov
xchg
and
cmc
add
add
jmp
mov
and
add
adc
xchg
ret
add
add
test
inc
add
jmp
mov
std
mov
cdq
push
test
icebp
add
(bad)
and
add
retf
jns
add
ficom
and
cmc
sub
cmp
ror
add
out
add
mov
sub
mov
and
inc
popa
and
add
add
and
add
lods
push
das
inc
aad
je
jmp
fiadd
sub
mov
and
jg
jmp
mov
sbb
xchg
sbb
test
add
popf
mov
lds
lock
fimul
jmp
mov
sub
mov
je
imul
and
add
add
mov
or
jmp
mov
sub
mov
je
jmp
mov
and
add
sub
mov
andps
add
clc
sbb
test
add
inc
xor
sahf
ins
addr16
ss
je
adc
add
popf
mov
icebp
sub
stos
inc
and
jbe
pop
add
add
add
add
sub
mov
syscall
pop
or
xor
mov
test
add
add
xchg
inc
and
je
jmp
mov
sub
mov
nop
inc
add
ins
add
loope
add
sub
lock
and
pop
push
pop
repnz
push
mov
std
mov
lods
enter
in
je
jmp
mov
sub
mov
xchg
test
add
add
sbb
add
js
add
mov
syscall
or
int3
add
add
add
jmp
mov
mov
es
and
out
add
test
popf
add
add
loope
add
add
push
sub
mov
mov
add
add
xor
pop
cmp
add
adc
add
imul
out
add
add
xchg
ret
or
add
xchg
popa
(bad)
mov
mov
shl
xor
jbe
xchg
pop
jno
test
mov
add
mov
mov
hlt
xor
test
add
mov
mov
jb
imul
outs
out
call
mov
dec
cmp
mov
or
out
add
jns
adc
aam
add
cmp
sete
cmp
xor
xor
sbb
test
adc
mov
mov
add
add
mov
mov
mov
test
cmovne
and
add
add
adc
add
stos
mov
mov
mov
mov
add
sbb
sub
imul
xor
add
sete
cmp
cmovl
mov
and
xor
(bad)
fild
inc
ror
add
mov
xchg
mov
add
add
cmp
xadd
and
mov
mov
mov
mov
add
jmp
add
xor
cs
push
out
adc
sbb
dec
out
sete
cmp
setl
mov
xor
adc
and
mov
add
xchg
mov
pop
add
ror
mov
mov
or
add
cmp
and
or
les
mov
cmovne
mov
add
or
add
mov
jmp
xchg
and
out
add
test
sbb
fldcw
add
add
in
popf
add
mov
popa
test
lock
scas
or
mov
mov
mov
xor
mov
inc
add
nop
ret
lea
(bad)
sub
add
add
int
nop
inc
or
stos
repz
jnp
add
popf
cmp
sete
cmp
setl
test
popa
add
hlt
mov
and
(bad)
mov
call
hlt
or
xor
mov
or
xor
retf
(bad)
or
mov
add
inc
icebp
fwait
sub
repnz
jl
add
outs
cmc
add
add
add
or
(bad)
xchg
ret
xor
mov
gs
jge
add
add
add
push
repz
cmp
in
xchg
cmp
mov
xor
or
jbe
adc
inc
rcl
jmp
mov
push
loopne
rcr
mov
test
psubusb
mov
jmp
mov
mov
mov
mov
call
mov
mov
outs
add
add
inc
inc
sbb
mov
add
(bad)
mov
sbb
lods
add
add
fadd
cmp
setl
mov
sub
ds
add
in
cs
and
mov
and
mov
mov
pop
and
or
std
inc
xor
cmp
xor
or
and
test
mov
mov
and
add
add
or
add
mov
mov
lea
mov
xor
add
mov
mov
mov
xlat
and
out
add
add
out
sti
mov
add
add
retf
add
push
ret
push
jle
add
add
pushf
(bad)
mov
and
outs
dec
cmovne
lea
jmp
pop
scas
loope
add
add
or
mov
cmc
add
add
in
rcl
lahf
js
add
int3
add
add
add
or
pop
and
cmp
sete
cmp
setl
dec
and
xor
and
xor
add
inc
ror
add
xor
add
mov
mov
mov
fidiv
mov
mov
jmp
add
fild
add
add
sbb
mov
out
add
mov
adc
repnz
call
mov
sub
add
nop
fcom
add
test
and
sbb
clc
add
int3
mov
mov
call
xor
iret
xlat
add
out
add
add
bts
and
xchg
cli
popf
std
popf
sub
xchg
ret
inc
pop
or
add
setl
mov
and
xor
or
test
cmovne
mov
jno
add
cmc
jmp
mov
imul
mov
sar
mov
jge
add
int
enter
sub
cmp
xchg
scas
fadd
add
icebp
sub
or
add
cli
pushf
ret
or
xor
mov
mov
repnz
xor
xchg
inc
bound
or
sbb
xor
inc
(bad)
add
scas
cld
test
mov
cmovne
lock
jge
aad
jmp
mov
jmp
mov
mov
call
addr16
dec
add
push
call
sub
fwait
test
add
add
sbb
add
add
xchg
add
popf
mov
mov
mov
mov
mov
xlat
clc
mov
je
add
add
mov
push
scas
pop
add
add
add
nop
cli
add
(bad)
outs
dec
add
popf
setl
mov
shl
ds
test
inc
mov
jmp
in
addr16
aaa
xchg
sbb
add
mov
inc
sbb
inc
mov
mov
jge
add
ret
adc
xchg
jbe
popf
add
stos
jmp
ret
adc
punpckhdq
out
add
add
add
xchg
xor
add
cmp
mov
adc
repnz
add
(bad)
mov
push
hlt
or
and
mov
sub
(bad)
and
sub
test
mov
fidiv
sub
add
or
inc
(bad)
enter
pop
mov
or
call
mov
mov
adc
sub
add
and
sub
add
xchg
clc
ror
fld
add
mov
imul
nop
gs
add
add
mov
pop
sub
add
mov
jmp
(bad)
scas
and
add
lds
or
add
(bad)
std
jno
add
add
add
(bad)
dec
pop
inc
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
or
ret
mov
and
enter
mov
movs
rol
mov
mov
mov
rol
inc
jmp
mov
sub
mov
je
jmp
mov
and
or
imul
inc
or
(bad)
fdiv
jg
add
fnstcw
sub
inc
(bad)
fs
add
add
jmp
lods
cmp
mov
push
(bad)
dec
es
xchg
sub
add
mov
rcl
mov
je
cmp
inc
add
push
and
sub
mov
je
jmp
mov
sub
mov
lar
dec
add
or
push
cmps
lea
cmp
je
jmp
mov
mov
and
adc
test
add
jmp
mov
addr16
in
push
pusha
inc
and
xchg
xchg
add
add
add
add
mov
mov
cmp
mov
and
xchg
leave
add
add
add
xchg
and
addr16
pop
iret
jmp
mov
mov
mov
mov
mov
mov
push
add
sbb
out
add
add
prefetchnta
add
xchg
fmul
scas
mov
call
fcom
dec
add
pushf
ror
dec
xor
out
add
pop
cli
mov
mov
and
mov
mov
mov
je
sahf
or
xor
or
and
or
es
jmp
ja
popf
lods
pop
jmp
mov
mov
aad
mov
call
sub
mov
(bad)
adc
xchg
lea
xchg
cmp
mov
adc
add
les
add
add
retf
imul
mov
pop
cmp
por
cmp
jle
(bad)
cmp
pop
clc
stos
sti
or
test
xchg
inc
retf
idiv
cmp
add
inc
and
cmps
(bad)
iret
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
orps
test
inc
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
or
add
ins
dec
and
rol
add
mov
ins
add
mov
mov
push
sub
mov
leave
call
mov
add
xchg
jg
or
xor
jo
sub
mov
add
xchg
xchg
fs
in
sbb
mov
sub
mov
and
add
aas
packssdw
add
add
add
rol
mov
sub
mov
seta
or
retf
add
add
add
adc
outs
mov
test
divps
add
add
test
add
add
mov
imul
add
add
mov
add
mov
in
(bad)
and
add
out
mov
test
add
add
mov
je
jmp
out
test
into
movs
add
xchg
test
jne
add
bound
aas
in
add
add
sub
mov
pmuludq
add
pop
xchg
add
mov
dec
push
ds
fimul
add
jg
jle
add
add
add
sub
mov
andnps
add
push
push
fild
add
test
add
add
mov
jg
jmp
nop
icebp
and
stos
add
sub
mov
xor
or
add
lahf
(bad)
rol
lea
push
call
js
aam
mov
add
and
add
jmp
push
add
sub
mov
je
jmp
mov
jmp
mov
jg
jmp
mov
sbb
aam
ret
inc
add
add
icebp
sub
add
mov
sub
dec
test
pushf
add
add
(bad)
and
add
push
add
jo
push
adc
add
xchg
icebp
and
add
in
ucomiss
or
add
jl
add
mov
sub
mov
inc
push
add
add
jmp
mov
popaw
sbb
or
sbb
test
inc
test
xchg
mov
add
out
(bad)
jmp
test
add
add
(bad)
and
push
mov
add
test
sub
ret
mov
packuswb
sbb
add
sahf
test
add
add
movs
iret
ret
test
test
and
xchg
add
add
adc
test
or
sub
mov
punpckhwd
push
add
aas
mov
sub
mov
ud0
lea
xchg
fld
add
adc
add
and
aam
idiv
inc
leave
ror
test
add
add
add
in
jmp
mov
jns
jmp
mov
sub
ret
jo
xchg
stos
xchg
add
mov
add
cs
inc
mov
jg
cli
add
dec
and
in
add
push
mov
packssdw
add
(bad)
jmp
mov
sub
mov
fs
pop
add
jecxz
add
test
add
add
push
inc
sbb
(bad)
mov
add
jmp
push
adc
adc
mov
and
in
xchg
and
add
inc
xchg
add
add
add
sub
mov
pop
je
jmp
mov
add
in
inc
and
je
jmp
mov
rcl
mov
test
add
add
repz
add
and
add
or
mov
sahf
test
fadd
add
mov
sub
mov
dec
inc
loopne
add
or
mov
icebp
leave
inc
add
xchg
sub
mov
je
jmp
mov
call
mov
inc
and
cmp
xchg
add
add
into
add
xor
test
add
mov
add
add
sub
pop
inc
and
jb
jmp
xor
add
cmp
inc
and
je
jmp
mov
push
inc
sahf
push
in
inc
and
packuswb
add
jmp
data16
sub
mov
or
test
add
xor
add
push
dec
add
adc
mov
mov
leave
push
xchg
add
cmp
jo
in
add
push
push
sub
jo
mov
and
add
xchg
mov
cmp
mov
mov
mov
cmove
cld
mov
in
stos
add
jmp
mov
push
push
add
dec
cmp
in
inc
ror
add
aad
add
mov
mov
mov
test
push
add
movs
jge
add
xchg
ror
adc
xor
out
test
enter
xlat
mov
add
sbb
cli
stos
add
sbb
setl
mov
and
loope
or
test
mov
rol
mov
pop
pusha
ffree
fcmove
pop
out
nop
pop
stos
sub
aas
in
mov
sbb
push
add
and
add
mov
push
add
sbb
sub
mov
mov
add
imul
xchg
out
add
dec
in
add
add
setge
add
setl
std
hlt
xor
gs
xor
sub
add
and
mov
and
mov
mov
and
lods
ror
test
fadd
add
aam
out
aam
mov
imul
mov
in
add
repnz
add
add
cs
add
aas
pop
jle
mov
rol
sar
mov
mov
sub
cmovge
push
and
sbb
jne
jbe
add
mov
pop
mov
mov
xor
mov
sub
mov
in
add
in
add
or
add
setl
mov
and
xor
or
test
retf
inc
adc
add
cdq
int3
add
add
mov
mov
mov
xor
cmp
mov
and
sub
cmp
repz
(bad)
rol
xchg
jo
xchg
push
aad
fwait
or
or
setl
mov
arpl
sbb
fcomp
ins
cmp
mov
and
lods
ror
hlt
or
mov
or
mov
cld
mul
add
inc
pop
mov
jmp
add
out
mov
add
stos
push
or
sbb
mov
nop
inc
movs
jge
add
out
and
test
in
(bad)
mov
sbb
add
mov
add
add
or
add
pushf
mov
sti
ins
(bad)
ret
inc
enter
in
add
add
xor
push
inc
jae
mov
mov
mov
test
push
add
add
add
test
add
add
xchg
sete
or
pmovmskb
mov
and
push
repnz
test
adc
shl
xchg
add
jmp
mov
out
jne
add
or
add
fsubrp
lock
mov
mov
mov
xor
push
add
add
mov
in
add
add
imul
xchg
add
xchg
add
sete
cmp
(bad)
cmps
mov
arpl
add
fdiv
sub
mov
and
and
mov
and
and
push
dec
js
xor
mov
or
and
retf
jecxz
cld
in
add
adc
cmovl
mov
jmp
mov
and
mov
mov
dec
dec
add
push
call
cmp
lea
mov
mov
lds
xor
mov
sub
call
(bad)
jmp
fisub
add
add
cmp
ficom
add
add
pushf
xbegin
push
fsubr
ret
in
or
jecxz
test
sbb
mov
and
add
add
mov
xchg
add
pop
add
xchg
and
jge
add
add
mov
sbb
jmp
adc
add
sti
imul
call
inc
add
add
xchg
ins
cmp
xor
mov
push
icebp
add
push
movs
add
and
inc
fisttp
add
ror
hlt
or
inc
les
mov
cld
test
mov
icebp
(bad)
mov
in
mov
add
sub
mov
mov
xchg
xchg
and
add
and
mov
push
xlat
adc
sub
add
fisubr
add
add
lea
xchg
ret
sub
clc
into
imul
(bad)
xor
or
imul
cmovne
mov
jmp
mov
imul
ret
mov
(bad)
cmp
jo
lea
aaa
in
dec
fs
daa
ja
jmp
(bad)
imul
add
in
push
and
add
add
push
xchg
add
(bad)
mov
in
add
add
sbb
jmp
mov
mov
mov
mov
cld
mov
rol
sbb
add
add
test
sub
rol
lea
inc
nop
jmp
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
or
(bad)
and
clc
inc
and
add
inc
cmp
and
mov
mov
cmp
and
mov
sbb
add
ins
sbb
mov
and
fld
xor
mov
sub
mov
gs
loope
add
jmp
int3
inc
and
call
inc
jl
je
jmp
mov
and
sub
mov
hlt
test
add
sub
push
add
lock
or
loopne
fsub
mov
mov
adc
inc
retf
and
jmp
mov
(bad)
cs
in
jmp
mov
mov
mov
mov
call
push
ds
js
and
inc
and
pop
div
adc
and
mov
fs
mov
mov
nop
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
add
add
adc
add
aaa
add
add
xor
add
add
mov
retf
xchg
add
add
and
xchg
and
add
ror
adc
mov
mov
jg
movs
add
add
mov
or
call
and
add
add
(bad)
je
add
jmp
mov
add
outs
pop
add
in
int3
movs
and
add
add
(bad)
repz
add
mov
in
setle
call
out
pop
add
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
cli
xchg
add
std
pop
xchg
in
add
xlat
sub
mov
movnti
adc
add
mov
sbb
push
mov
gs
fadd
add
psubsw
add
add
add
sub
mov
jg
sub
add
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
into
movs
and
add
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
shl
add
pop
add
jmp
xchg
push
popa
fadd
add
cmps
jmp
or
add
xchg
adc
add
jmp
mov
sub
stos
test
add
add
and
pop
aaa
add
add
sub
mov
nop
add
jmp
mov
cld
sub
test
add
inc
sub
outs
xor
add
add
add
mov
sub
mov
je
jmp
mov
or
mov
divps
rcl
jmp
mov
pop
xchg
dec
xor
sub
lods
mov
add
add
test
sbb
jmp
mov
addr16
inc
and
je
cmc
mov
dec
and
add
add
push
retf
cmps
and
add
add
mov
pushf
add
add
mov
in
sldt
mov
adc
add
in
in
dec
and
inc
add
adc
jmp
cwde
test
add
jne
mov
push
aad
add
adc
add
mov
add
mov
sub
lds
jg
jmp
mov
sub
mov
xchg
rcl
repnz
mov
sub
and
pop
mov
imul
add
fadd
add
adc
add
dec
add
pop
popf
int3
test
and
adc
add
cmp
add
lock
add
add
dec
lods
hlt
movs
mov
movnti
add
and
aaa
addr16
clc
add
sub
adc
and
and
add
imul
push
std
ror
add
sub
repnz
add
lods
dec
dec
xor
int3
add
add
mov
add
mov
inc
add
je
jmp
sbb
cmp
rcr
lods
mov
je
and
dec
xor
add
add
sub
mov
xsavec
xchg
jmp
mov
sub
mov
jg
xchg
add
add
retf
cmps
and
add
sub
mov
add
push
(bad)
add
add
sub
mov
repnz
and
add
add
add
sub
mov
paddsw
adc
add
or
test
add
add
xor
pop
mov
test
add
add
(bad)
adc
add
add
in
(bad)
cmp
add
sub
test
add
je
jmp
mov
sub
pushf
test
add
xlat
pmuludq
push
add
add
imul
add
mov
jecxz
mov
xchg
or
and
add
inc
mov
add
ror
call
inc
add
mov
dec
sub
mov
in
je
and
inc
push
adc
add
adc
mov
jnp
jg
test
mov
sub
mov
pop
arpl
add
mov
dec
cmp
cmp
(bad)
mov
rol
cld
add
add
dec
push
and
add
push
sub
mov
je
movs
loope
add
scas
mov
xor
push
fcmovnb
retf
cs
add
bswap
and
add
jmp
jbe
and
pop
add
in
cmp
and
sub
inc
add
in
add
jmp
mov
and
ret
mov
jecxz
jmp
add
stos
push
add
add
add
sub
mov
xchg
repnz
mov
adc
add
lock
add
sub
stos
in
and
xor
add
(bad)
and
add
or
add
in
sub
mov
add
je
jmp
mov
push
mov
adc
add
xchg
push
add
test
and
add
add
mov
je
jmp
mov
and
sbb
add
mov
jg
cmp
push
and
add
jnp
xchg
xlat
test
mov
je
jmp
mov
and
and
and
add
add
jmp
jmp
mov
add
add
adc
xchg
in
add
add
jmp
es
add
jns
add
mov
ror
add
imul
push
mov
and
add
add
mov
das
xchg
jbe
add
ror
add
sub
pop
pop
clc
add
add
and
add
jmp
mov
add
fucomp
pop
sbb
add
test
push
add
jmp
mov
add
je
cmc
lock
add
add
add
add
mov
dec
sbb
sahf
sbb
mov
add
sub
add
(bad)
add
test
clc
cwde
add
sub
sbb
std
rcl
je
and
add
add
mov
and
add
dec
sub
mov
add
test
mov
data16
push
add
test
adc
sahf
jb
add
add
add
and
add
inc
sub
loopne
and
add
xor
test
sbb
or
add
enter
push
pop
ret
adc
nop
add
shr
adc
inc
repz
jns
add
or
add
test
adc
add
add
add
inc
test
add
jg
test
test
adc
mov
mov
add
dec
and
jmp
mov
xor
add
(bad)
jmp
stos
add
add
mov
sub
mov
unpckhps
shr
mov
add
pop
jmp
add
add
mov
and
push
and
add
jmp
mov
add
mov
(bad)
loop
dec
add
neg
add
mov
sub
mov
add
pop
and
add
jmp
mov
add
mov
je
add
enter
add
push
sub
mov
jg
adc
add
adc
add
xlat
sub
mov
xstore-rng
cmps
adc
or
mov
sub
mov
pop
jg
jmp
mov
xor
sbb
adc
je
jmp
mov
cmp
jmp
loopne
add
jg
jmp
mov
sub
test
add
je
stos
jae
call
add
sub
mov
dec
add
adc
add
push
inc
add
mov
sub
mov
je
(bad)
or
add
inc
add
mov
sahf
jb
add
add
add
add
lock
add
mov
je
jmp
mov
add
outs
mov
test
add
add
and
add
adc
add
add
or
clc
pop
je
jmp
mov
add
mov
jg
jmp
enter
inc
add
sub
mov
je
jmp
mov
sub
mov
js
push
add
dec
add
add
add
mov
sub
test
add
add
test
pop
enter
popf
add
mov
sub
pop
xchg
and
add
xlat
je
arpl
and
jmp
mov
add
xor
add
dec
test
add
lods
add
test
xchg
add
sub
mov
jg
jmp
mov
sub
mov
in
add
test
sbb
add
leave
push
add
mov
sub
mov
setl
add
std
add
xor
ret
sub
mov
je
jmp
mov
sub
mov
and
add
add
(bad)
and
add
jmp
mov
sub
mov
je
stos
dec
push
add
mov
and
inc
and
sub
mov
inc
add
ror
and
add
jmp
mov
sub
mov
and
xor
add
mov
jmp
mov
and
add
aaa
rcr
and
add
add
adc
leave
add
add
mov
sub
mov
je
jmp
mov
sub
loopne
and
dec
xor
jg
jmp
mov
clc
add
sub
mov
add
add
adc
test
add
js
add
and
add
add
mov
data16
and
dec
add
add
and
clc
pop
add
rcl
and
add
je
jmp
adc
mov
mov
jg
jmp
lock
add
inc
aad
popa
sbb
add
test
push
add
jmp
in
test
add
add
xchg
test
jg
jmp
sbb
sub
mov
sbb
jmp
test
mov
pop
and
mov
and
add
add
(bad)
outs
xor
add
add
and
mov
pop
adc
and
test
add
add
rcr
add
add
add
cmp
xor
pop
jmp
add
add
mov
add
inc
retf
add
mov
push
sub
test
and
ss
add
test
outs
sahf
add
mov
or
mov
adc
rol
jg
jmp
pop
test
add
inc
and
xor
add
je
add
mov
mov
mov
cmp
add
nop
std
add
jmp
mov
cli
cmp
inc
ds
cmps
and
add
inc
test
or
add
add
aaa
in
in
push
cwde
jg
call
(bad)
and
add
jmp
pop
test
ret
inc
lods
inc
pop
pop
cld
add
inc
test
cwde
add
add
add
sub
mov
and
add
add
(bad)
adc
add
and
add
add
add
sub
mov
setp
or
and
sbb
clc
rcl
push
dec
mov
jg
jmp
mov
sbb
pop
lods
mov
add
add
add
add
mov
mov
sub
dec
mov
jg
jmp
sbb
sub
mov
dec
test
add
xor
add
add
rcr
push
mov
and
add
add
(bad)
and
add
add
add
sub
mov
add
or
cmps
imul
add
pop
add
push
fdivr
aaa
retf
fadd
add
jg
lods
and
xchg
add
and
pop
rol
fimul
push
mov
rol
add
test
adc
add
clc
add
add
add
sub
test
cmp
add
add
add
inc
xchg
test
sub
call
andnps
sbb
shr
add
add
inc
inc
and
lods
push
mov
add
aaa
in
add
add
enter
addr16
add
push
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
rol
cmovl
adc
jmp
mov
push
call
fimul
add
add
mov
and
aad
pop
push
stos
test
test
add
jmp
mov
add
in
sbb
mov
add
je
jmp
mov
sub
mov
popa
mov
add
je
jmp
sahf
test
clc
aad
add
mov
and
scas
dec
xor
add
add
sub
mov
dec
movs
(bad)
sldt
cli
mov
push
and
pop
add
in
dec
aad
pop
mov
jb
retf
add
mov
sub
test
jecxz
pop
frstor
div
inc
add
xchg
std
sub
mov
je
ds
add
jnp
and
and
sub
mov
je
jmp
mov
sub
out
(bad)
and
add
push
xchg
test
or
jmp
mov
in
add
add
mov
and
add
add
repnz
add
jne
dec
add
and
dec
jne
push
add
test
adc
add
mov
add
mov
je
jmp
mov
sub
mov
xstore-rng
cmps
xchg
dec
fdivr
add
add
add
rcr
sbb
test
add
push
add
adc
cmps
sti
mov
mov
sbb
rol
sub
dec
inc
loop
test
pop
adc
and
add
and
jmp
popa
int
jge
add
add
add
mov
mov
adc
test
jbe
pop
add
mov
cmp
cmove
mov
aad
add
add
push
add
xor
pushf
xchg
mov
add
(bad)
push
add
inc
push
add
test
and
add
add
mov
mov
cmp
iret
dec
retf
pop
cld
add
add
mov
test
mov
adc
lods
xor
add
mov
pop
add
inc
pop
cwde
jge
add
add
add
clc
add
imul
and
cmp
sete
xchg
sti
or
xchg
add
pushf
ror
ret
xchg
xor
xor
repz
loope
pusha
(bad)
mov
mov
push
mov
ja
ror
test
adc
xchg
add
retf
dec
or
je
js
inc
loop
mov
cld
add
xchg
jmp
lea
mov
pcmpgtd
mov
dec
mov
add
add
pop
inc
or
mov
or
mov
dec
test
mov
in
adc
enter
add
add
out
add
(bad)
adc
dec
add
add
add
leave
add
mov
lds
sub
ror
add
inc
add
inc
add
mov
or
mov
mov
add
mov
add
adc
shr
add
add
sub
mov
iret
mov
(bad)
mov
add
and
shl
add
scas
adc
push
iret
adc
add
dec
ret
add
scas
add
dec
add
add
xchg
add
and
pushf
mov
jae
push
fs
dec
dec
pop
(bad)
cmp
add
add
add
and
call
mov
(bad)
fucomp
mov
mov
cmp
setl
out
inc
mov
adc
cwde
jge
add
add
pop
jecxz
push
add
out
add
add
sub
dec
scas
mov
cmp
sete
cmp
push
stos
sub
call
out
xor
mov
and
mov
mov
and
mov
mov
repz
inc
and
mov
and
enter
mov
or
test
inc
and
(bad)
jne
push
add
sub
iret
mov
in
adc
fmul
loopne
add
(bad)
mov
add
add
add
out
add
mov
mov
mov
add
xlat
(bad)
ret
inc
ror
add
or
and
in
push
pushf
mov
adc
stc
and
int3
push
mov
jp
mov
mov
retf
jmp
jp
adc
jmp
add
add
push
imul
and
cmp
sete
cmp
setl
mov
or
add
fcmovnbe
in
and
mov
and
and
xchg
mov
clc
xor
mov
imul
push
test
ret
test
je
ins
or
mov
jmp
lea
lea
mov
mov
and
add
adc
fs
cmc
data16
setl
sbb
mov
add
mov
pop
and
add
sub
sub
imul
and
cmp
setns
cmp
setl
mov
and
pop
sti
or
add
inc
lods
retf
cld
add
add
loop
add
idiv
mov
test
cmovne
mov
cld
pop
add
jmp
mov
jmp
lea
in
lock
inc
add
add
dec
pushf
pop
add
mov
cmp
cmovl
out
mov
add
add
jns
add
pop
test
add
inc
pushf
xchg
mov
std
add
jge
add
add
repz
add
outs
test
push
mov
cmp
movq
xor
aaa
add
push
add
push
add
lea
lea
mov
mov
call
mov
sub
xor
add
cmovl
pop
mov
add
shr
fadd
add
and
dec
add
lea
mov
add
mov
fistp
pop
add
or
dec
sbb
add
dec
retf
and
add
and
mov
mov
mov
cwde
jge
add
add
mov
arpl
add
arpl
scas
xlat
and
cmp
sete
cmp
shrd
lods
fisub
cli
xor
or
test
cmovne
rol
jmp
mov
mov
adc
into
xor
mov
and
cmp
out
mov
push
xor
cli
cli
push
add
sete
mov
dec
setl
mov
and
xor
sub
(bad)
sub
add
jmp
mov
neg
push
add
jmp
add
mov
sahf
sbb
sub
repnz
and
mov
add
imul
and
cmp
sete
cmp
shrd
test
ret
adc
out
out
and
int
add
sbb
fld
mov
and
and
or
dec
mov
test
sub
ins
aam
ret
or
je
aas
cmovne
mov
jmp
lea
mov
add
and
call
mov
mov
lods
add
setl
and
sbb
mov
pop
dec
xchg
jge
add
or
mov
dec
xor
cli
imul
and
xor
aaa
add
js
cmp
dec
pushf
ror
add
adc
and
mov
cmc
add
retf
in
pop
inc
and
and
repz
and
inc
and
pusha
sti
mov
mov
or
mov
inc
and
xchg
and
or
mov
xor
mov
outs
cld
xor
or
and
push
jp
add
add
mov
jmp
mov
jns
call
and
add
add
ret
inc
sub
add
add
test
add
in
pushf
jg
push
jmp
lea
lea
int3
add
mov
enter
add
inc
and
or
cmovl
mov
add
xchg
pushf
mov
adc
out
cmp
mov
add
add
and
call
mov
mov
cmps
add
add
dec
jmp
add
jns
xlat
jnp
test
cld
add
add
or
and
add
or
lds
add
inc
cwde
pop
add
push
cmp
cmp
add
cmovl
mov
and
add
push
jmp
mov
std
pushf
mov
ret
or
add
add
add
and
call
stc
pusha
sbb
ja
xchg
in
jb
add
add
retf
and
daa
add
jmp
mov
jmp
mov
cli
ret
mov
cmp
jge
add
add
sbb
icebp
sub
sub
iret
js
cli
out
add
inc
mov
add
movs
jecxz
repnz
pop
aaa
pshufw
xchg
ret
test
mov
xor
xor
mov
sbb
inc
and
and
and
cdq
hlt
cmc
fsub
les
mov
cli
test
inc
icebp
mov
or
add
mov
add
add
and
call
mov
mov
mov
and
pushf
mov
and
add
push
add
xchg
jge
add
cmp
and
sbb
scas
(bad)
and
cmp
push
mov
enter
push
ror
fs
daa
add
xor
loopne
add
fisttp
and
mov
and
mov
push
mov
dec
fmul
inc
and
or
mov
lods
inc
and
xchg
and
or
mov
xor
or
ret
hlt
pop
sbb
add
fmul
loopne
add
inc
retf
add
add
std
add
lods
movs
jns
mov
add
add
ret
inc
shl
and
add
add
(bad)
mov
mov
add
add
xchg
jge
add
les
add
add
in
mov
and
cmp
sete
sbb
prefetch
or
test
mov
xor
xor
mov
ror
addr16
dec
add
lahf
or
or
xor
mov
or
movs
test
xlat
or
test
mov
mov
add
add
std
or
mov
mov
mov
and
add
mov
mov
mov
adc
mov
add
imul
and
cmp
paddq
cmp
(bad)
ror
cwde
xor
mov
enter
out
mov
inc
mov
and
mov
and
ja
and
icebp
rcr
xchg
jae
test
retf
aam
out
mov
cmovne
mov
mov
ds
add
dec
and
add
add
pop
add
pop
inc
js
push
add
add
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
movs
pshufb
popf
movs
inc
mov
loop
xchg
xchg
(bad)
addr16
mov
xchg
jge
add
imul
call
xchg
iret
imul
and
cmp
syscall
sub
iret
pushf
(bad)
mov
idiv
xor
jae
test
cmovne
mov
jmp
retf
test
add
add
outs
pop
add
mov
mov
mul
add
add
add
add
add
xor
add
xor
dec
scas
repz
add
add
xchg
mov
iret
pushf
adc
mov
and
mov
xor
sbb
add
cmp
sub
out
fadd
inc
inc
and
outs
test
add
xlat
or
mov
adc
je
cmp
inc
icebp
mov
cld
rcl
add
mov
jmp
mov
mov
xor
add
pop
aaa
pop
or
test
sbb
add
rol
add
and
loope
mov
add
add
add
test
add
jnp
test
add
mov
call
cwde
jge
add
add
push
rcl
ins
out
leave
data16
ret
push
sti
dec
imul
and
cmp
sete
cmp
setl
mov
cli
int
or
not
add
push
add
inc
add
ins
pop
add
mov
loopne
and
gs
jle
sahf
mov
repnz
add
(bad)
arpl
push
inc
add
add
add
add
scas
push
push
repz
add
cmp
sete
cli
dec
add
push
dec
mov
mov
sti
ret
add
inc
rcl
and
add
add
jmp
push
enter
shr
lea
add
mov
mov
test
mov
mov
sub
pushf
repz
imul
out
add
add
inc
and
sete
cmp
push
pushf
icebp
fs
repz
or
fild
add
jmp
mov
mov
mov
sar
imul
and
lods
pushf
and
add
add
add
add
aaa
gs
ror
scas
repz
cmp
sete
dec
and
add
pushf
(bad)
mov
repz
or
not
add
push
ror
jnp
add
add
mov
mov
mov
mov
ror
add
loopne
add
lods
cld
addr16
add
mov
cld
addr16
add
add
add
test
retf
call
add
mov
and
cmp
adc
ror
shr
add
push
add
mov
sbb
add
add
in
and
add
add
sbb
jmp
hlt
adc
jne
test
arpl
xchg
add
add
add
les
jnp
jmp
add
inc
xor
jg
std
add
push
(bad)
adc
inc
mov
dec
mov
test
mov
xor
sub
add
(bad)
inc
inc
and
and
inc
ror
hlt
dec
fdiv
ficom
add
or
xor
or
and
or
daa
rol
dec
je
xor
ds
mov
jmp
mov
pushf
lods
and
mov
add
add
jnp
mov
and
add
add
add
add
dec
push
mov
jmp
add
adc
xchg
imul
xchg
mov
add
xchg
stos
xor
shr
shr
shr
cmp
add
jmp
inc
adc
lods
xor
mov
add
add
les
cmovne
add
add
inc
add
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
dec
(bad)
bound
xchg
cmp
call
cmp
add
add
add
inc
jmp
mov
mov
jmp
in
add
add
add
add
add
call
and
inc
inc
add
add
xchg
mov
setl
mov
xor
mov
xor
out
out
add
daa
mov
and
inc
and
leave
inc
cmp
mov
je
push
or
xor
fadd
add
mov
or
cld
and
movs
dec
add
add
mov
movs
mov
pop
add
add
setne
and
mov
add
mov
inc
pop
xchg
jge
add
mov
add
add
sub
imul
xchg
out
xchg
add
cmp
sete
cmp
je
(bad)
mov
pusha
repz
or
inc
lock
aaa
add
mov
fistp
cmp
daa
add
add
pcmpgtw
mov
std
cmp
inc
and
aam
add
mov
and
add
imul
mov
jmp
fld
mov
xchg
and
add
xchg
jp
xor
jmp
mov
lea
pop
pop
pop
pop
or
call
add
adc
add
mov
movs
jmp
sub
mov
or
mov
push
mov
inc
push
mov
and
inc
add
mov
mov
shl
add
cmp
mov
add
mov
mov
jl
add
je
or
inc
and
call
lea
loop
in
add
mov
(bad)
adc
add
mov
test
aaa
push
inc
add
rol
sub
mov
add
dec
add
or
add
mov
mov
or
mov
add
add
fcmovb
add
aaa
add
add
leave
data16
enter
add
mov
test
push
and
mov
and
call
pop
add
lea
mov
mov
shr
call
and
dec
ins
adc
lods
inc
and
jmp
lea
les
add
add
and
call
mov
call
add
aad
add
push
xor
in
add
lea
lea
add
add
fs
or
dec
add
jne
cwde
xor
pop
add
(bad)
jmp
lea
mov
inc
dec
and
mov
add
(bad)
and
add
push
ret
nop
lods
cmp
mov
aaa
cld
xchg
add
inc
fdiv
cmp
add
add
xlat
add
add
call
mov
mov
jmp
mov
mov
mov
add
int
push
add
(bad)
loop
loop
add
jl
and
jmp
(bad)
xchg
and
add
add
sbb
add
mov
add
fldenv
imul
or
add
scas
enter
add
in
xlat
(bad)
jmp
data16
lea
lea
push
nop
nop
lea
mov
lea
lea
push
lea
push
mov
lea
push
nop
lea
lea
and
mov
sub
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
nop
mov
lea
call
mov
mov
lea
mov
nop
lea
mov
mov
mov
mov
lea
sub
lea
lea
mov
nop
nop
mov
mov
mov
lea
jg
jmp
mov
lea
mov
lea
sub
lea
mov
mov
lea
je
jmp
nop
mov
nop
mov
sub
lea
mov
mov
lea
mov
lea
mov
jg
jmp
mov
mov
lea
mov
lea
lea
sub
nop
mov
mov
mov
mov
je
jmp
nop
lea
lea
mov
lea
sub
mov
mov
mov
mov
mov
jg
jmp
mov
nop
lea
lea
sub
nop
mov
lea
lea
mov
lea
mov
je
jmp
nop
mov
sub
mov
lea
mov
je
jmp
mov
lea
mov
mov
nop
nop
sub
nop
mov
mov
lea
mov
nop
nop
je
jmp
nop
nop
mov
lea
mov
mov
mov
sub
lea
mov
mov
je
jmp
mov
jmp
lea
mov
mov
lea
lea
mov
mov
lea
mov
mov
lea
nop
cmp
lea
mov
mov
cmovne
lea
mov
lea
mov
lea
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
nop
lea
lea
lea
mov
mov
mov
mov
mov
mov
sub
mov
lea
lea
mov
mov
lea
lea
mov
mov
nop
add
lea
imul
mov
lea
lea
and
nop
mov
nop
cmp
mov
lea
nop
sete
lea
cmp
nop
mov
lea
setl
lea
lea
mov
mov
lea
nop
xor
nop
mov
mov
xor
mov
lea
xor
lea
lea
nop
mov
nop
lea
and
lea
mov
nop
lea
and
lea
lea
nop
mov
lea
mov
mov
lea
and
lea
nop
nop
mov
lea
nop
mov
lea
nop
and
mov
or
nop
mov
mov
lea
or
nop
mov
xor
mov
lea
lea
or
mov
nop
xor
mov
nop
mov
lea
or
mov
and
mov
lea
mov
or
lea
lea
test
mov
lea
lea
mov
mov
lea
nop
cmovne
mov
mov
lea
jmp
mov
call
lea
nop
lea
mov
lea
mov
mov
mov
nop
mov
lea
mov
mov
mov
lea
mov
mov
nop
mov
mov
mov
lea
add
mov
mov
lea
sub
lea
lea
sub
lea
imul
lea
and
mov
lea
cmp
mov
lea
sete
lea
cmp
mov
mov
setl
mov
mov
mov
lea
mov
xor
nop
mov
mov
lea
mov
lea
mov
mov
xor
mov
lea
xor
mov
mov
mov
and
lea
lea
lea
and
lea
mov
lea
mov
lea
and
mov
and
lea
lea
or
or
mov
lea
xor
lea
mov
mov
mov
mov
or
mov
mov
mov
xor
lea
lea
lea
or
mov
lea
and
nop
or
nop
lea
test
lea
mov
mov
mov
mov
nop
nop
cmovne
lea
nop
mov
lea
jmp
mov
mov
mov
mov
mov
nop
jmp
lea
nop
mov
call
nop
lea
call
mov
mov
nop
nop
xor
nop
mov
lea
mov
lea
mov
lea
mov
call
lea
mov
mov
mov
lea
nop
nop
lea
nop
mov
pop
mov
nop
mov
pop
nop
lea
pop
nop
nop
pop
mov
mov
ret
call
lea
mov
mov
mov
lea
mov
jmp
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovge
mov
jmp
mov
mov
cmp
cmovle
mov
jmp
mov
sub
add
add
add
sub
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
(bad)
mov
mov
add
sub
add
add
and
inc
add
add
add
test
rol
stos
add
and
rol
add
pop
add
test
jno
add
add
(bad)
cmp
mov
xor
push
add
add
add
mov
pusha
jnp
add
or
add
in
or
mov
mov
add
test
jno
add
sti
clc
mov
and
sub
add
add
mov
sub
mov
lods
mov
inc
jb
xchg
scas
add
jmp
pop
test
int3
add
pop
sub
xlat
test
mov
and
add
jmp
sbb
or
test
add
stos
stos
test
ret
add
jo
add
hlt
and
add
pushf
or
add
add
(bad)
loopne
xor
add
mov
in
push
pushf
xchg
mov
jg
jmp
mov
pop
mov
test
(bad)
movs
add
andps
add
into
add
add
add
sub
mov
es
jmp
mov
or
pushf
xchg
int
and
add
add
not
or
add
add
test
add
add
rol
jg
jmp
sti
test
cli
xchg
mov
add
bt
enter
add
add
and
add
pushf
enter
push
(bad)
cmps
rol
and
pop
jo
add
mov
jae
push
outs
mov
(bad)
pop
imul
add
add
lahf
add
add
popf
lock
pop
test
jg
jmp
mov
push
xchg
mov
add
jle
sub
add
add
(bad)
repz
jmp
mov
sub
mov
xchg
add
add
stos
movs
add
mov
sub
mov
xchg
jmp
mov
sub
mov
pop
jg
jmp
sub
sub
pop
test
maxps
add
add
add
add
mov
pop
sub
ins
add
fisub
add
xor
jmp
mov
add
sbb
mov
inc
add
jb
mov
and
sub
mov
push
(bad)
dec
add
add
jo
add
mov
add
mov
xor
nop
pop
jmp
mov
sub
lods
shl
mov
fisub
int
add
add
test
jno
add
test
add
add
(bad)
fwait
xor
xor
add
and
add
add
xchg
sbb
add
add
retf
pop
add
add
add
ror
add
cdq
mov
push
test
jge
add
pop
add
xor
enter
lea
mov
adc
lahf
mov
and
add
inc
sub
mov
je
jmp
rol
sub
add
cmp
test
sub
enter
mov
lahf
add
mov
add
test
add
jmp
mov
add
and
stc
test
je
jns
push
add
mov
sub
lods
shl
mov
je
cmp
add
xchg
add
add
stc
or
add
test
movs
add
xchg
add
popf
stc
lods
test
add
add
test
jb
cmp
add
mov
jne
call
add
add
test
add
mov
add
add
xor
sub
mov
add
dec
out
add
add
add
pop
mov
(bad)
call
test
add
add
test
sub
add
add
add
mov
push
test
mov
add
push
sub
xchg
add
add
mov
pop
cmp
mov
add
test
add
add
mov
andps
rol
add
hlt
lods
xchg
add
sub
mov
cmp
mov
add
mov
sub
mov
in
add
test
pop
add
ror
add
sub
mov
fild
and
jo
mov
cwde
cmps
sub
add
mov
nop
add
adc
pop
add
xchg
add
inc
sub
mov
je
int
pop
add
mov
sub
xor
sub
cmpxchg
or
add
add
lahf
mov
ins
sti
test
test
add
add
sub
pop
pop
mov
xor
rcr
add
add
add
inc
ror
mov
add
or
rol
add
call
push
and
add
add
pushf
push
mov
jge
mov
nop
lock
xchg
push
pop
add
enter
jl
add
add
dec
add
sar
scas
push
xor
fdivr
add
add
sete
or
outs
and
sbb
or
test
cmovne
mov
jmp
mov
scas
or
mov
mov
mov
and
(bad)
int3
and
add
shr
add
add
push
or
imul
push
movs
jp
add
add
mov
mov
(bad)
sbb
add
in
add
call
mov
mov
mov
mov
lods
add
add
and
mov
pop
mov
add
add
or
jge
add
mov
aam
and
add
add
inc
je
jnp
add
or
pop
fst
mov
mov
mov
mov
dec
mov
add
add
add
mov
ret
into
and
add
jl
add
add
mov
sub
pop
test
add
and
mov
clc
icebp
out
add
mov
inc
add
mov
test
add
xor
lahf
pushf
ror
test
add
add
and
add
jb
add
mov
test
mov
add
mov
jp
mov
and
add
xor
enter
mov
mov
sub
mov
and
test
jo
aam
and
xor
sub
repnz
adc
and
mov
mov
add
cld
(bad)
hlt
jae
inc
add
fmul
xor
mov
cmp
or
pop
mov
out
fwait
pushf
inc
cmps
or
test
jge
add
add
sub
and
add
and
mov
popa
dec
mov
add
add
add
and
ror
add
mov
mov
dec
jbe
or
mov
rcr
add
add
mov
adc
lods
inc
and
mov
mov
popa
inc
mov
add
add
mov
add
add
mov
add
add
mov
call
mov
push
jge
add
mov
push
add
add
xchg
add
inc
and
pop
pop
jo
mov
call
mov
mov
mov
mov
mov
cmp
inc
mov
add
(bad)
lods
jns
movs
ror
mov
or
loope
add
mov
mov
mov
pop
mov
xor
inc
and
enter
sbb
call
mov
ror
push
add
mov
pop
adc
mov
hlt
and
sbb
push
jo
mov
mov
rcl
add
inc
jge
add
sar
mov
mov
mov
and
mov
sti
mov
pop
mov
add
push
add
mov
mov
mov
(bad)
int
push
mov
mov
sub
add
out
mov
add
xor
add
mov
mov
and
inc
mov
or
add
add
mov
call
mov
mov
mov
mov
mov
and
and
mov
mov
call
mov
mov
mov
mov
shl
inc
and
mov
mov
call
mov
mov
ds
push
add
add
mov
and
inc
and
mov
mov
int3
sub
add
add
stc
fdivr
add
pop
add
and
mov
mov
call
mov
imul
add
mov
xchg
mov
ss
add
add
shr
or
sbb
add
add
jge
add
rcl
mov
mov
mov
mov
call
add
mov
mov
sbb
mov
pusha
mov
dec
inc
cmc
mov
mov
or
loope
pop
add
xor
push
add
add
mov
add
mov
pop
add
lahf
mov
int
mov
jb
add
mov
mov
mov
add
inc
and
add
add
lods
dec
and
call
mov
cli
sub
push
add
lock
add
add
mov
mov
(bad)
ja
or
push
mov
or
mov
add
add
jnp
add
rol
in
jbe
xor
mov
mov
pop
mov
mov
xor
add
add
cmove
mov
rcl
(bad)
mov
es
push
pushf
data16
popf
int3
jl
add
enter
and
retf
sbb
cdq
fcomp
add
cmp
xlat
test
xor
enter
add
add
sete
adc
or
lahf
add
pushf
addr16
and
test
movs
inc
ror
add
cmp
pop
add
mov
cdq
test
add
add
(bad)
dec
add
add
xor
add
nop
pop
add
scas
scas
repnz
add
add
add
xchg
imul
mov
js
xor
add
ror
xor
into
das
add
leave
add
jmp
mov
mov
jnp
add
inc
and
add
stos
mov
pop
mov
mov
and
mov
mov
add
add
mov
aaa
cmps
or
inc
adc
mov
mov
mov
dec
outs
mov
and
jge
add
mov
mov
mov
hlt
or
add
add
inc
mov
mov
add
sbb
add
aaa
cmps
and
add
add
and
(bad)
pop
and
add
lahf
add
adc
and
jge
add
adc
add
add
mov
and
inc
and
ins
loope
or
add
add
in
or
mov
mov
mov
sti
sbb
add
pop
add
jno
or
enter
dec
and
js
mov
add
mov
push
loope
add
jnp
add
rol
jmp
in
or
sbb
mov
add
pop
jo
add
jbe
movs
and
add
enter
add
push
test
add
add
(bad)
(bad)
inc
test
sahf
mov
and
push
add
add
add
add
xchg
and
add
and
adc
ror
dec
inc
and
add
mov
call
imul
push
add
push
jge
add
jl
add
iret
xor
stc
jae
sar
mov
mov
mov
add
add
int3
retf
cmc
movs
add
jmp
(bad)
mov
add
(bad)
dec
pop
add
outs
push
add
add
mov
mov
mov
add
add
nop
xchg
repz
nop
(bad)
(bad)
add
add
add
push
pop
jo
setl
add
or
test
cmovne
test
pushf
add
add
inc
add
add
mov
xchg
xchg
and
add
add
and
mov
int
push
dec
call
lea
mov
pop
or
call
mov
mov
jmp
rol
cmp
setae
sub
mov
add
mov
mov
addr16
rol
xor
imul
and
cmp
sete
cmp
dec
pushf
mov
cld
or
add
and
xor
push
repz
sbb
dec
mov
mov
and
ss
pop
dec
and
mov
mov
and
mov
dec
or
sub
or
inc
push
inc
add
fld
and
xchg
sub
cld
xor
movs
xchg
add
or
test
xchg
xlat
mov
mov
add
add
mov
mov
imul
lods
test
add
add
mov
mov
fxam
push
mov
add
test
add
add
sbb
loopne
add
sub
cmp
add
mov
mov
mov
push
leave
or
test
mov
shl
cwde
loope
mov
cmp
add
add
add
test
jo
mov
jmp
add
add
add
add
add
mov
mov
loop
and
inc
add
add
inc
cmps
mov
add
add
add
jno
jp
add
add
adc
mov
mov
and
add
add
jns
or
mov
mov
xor
jp
add
add
xor
xchg
and
stos
movs
rol
mov
call
loope
add
add
mov
shl
and
add
xor
and
(bad)
mov
sub
call
pushf
add
mov
mov
mov
and
add
mov
bound
add
and
ror
call
loopne
add
mov
push
jge
add
aaa
xchg
pop
test
add
aam
add
inc
and
add
add
sub
sub
shl
add
mov
rcl
lods
test
add
mov
mov
mov
lods
adc
push
popa
xchg
mov
add
add
mov
push
add
mov
inc
test
push
inc
test
mov
mov
call
mov
mov
pop
test
and
lds
jmp
mov
add
(bad)
cmc
hlt
pop
inc
pop
pop
pop
sbb
or
mov
lods
lods
add
add
or
add
add
sbb
mov
add
add
push
add
mov
mov
push
inc
test
inc
pusha
or
add
add
dec
lods
sbb
fidiv
add
add
jge
add
mov
and
add
add
and
inc
add
inc
jl
jo
add
mov
call
mov
mov
(bad)
mov
movs
mov
mov
loopne
xchg
jnp
add
or
shl
pusha
out
add
mov
pop
xchg
push
mov
movs
add
mov
sahf
hlt
and
mov
add
arpl
add
mov
mov
mov
add
add
mov
add
popa
pusha
or
mov
mov
sbb
add
add
mov
lods
push
and
sbb
add
shl
and
mov
add
ficomp
adc
(bad)
dec
pop
inc
add
in
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
(bad)
push
add
test
add
add
test
xchg
push
movs
add
add
pop
add
add
das
pop
push
push
add
add
dec
nop
add
add
add
cli
sub
fwait
add
jmp
sar
add
mov
sub
dec
test
add
mov
add
add
add
sub
lea
je
jmp
fld
sub
das
test
jg
daa
add
add
mov
sub
mov
sbb
test
pop
push
or
mov
sub
mov
jecxz
xchg
and
jg
ins
add
mov
sub
mov
add
test
add
retf
or
mov
fwait
push
retf
and
cmovs
and
add
mov
mov
push
jns
(bad)
mov
and
je
jmp
mov
js
jnp
adc
inc
and
add
jb
add
add
add
sub
mov
je
jmp
mov
mov
fistp
fwait
ins
jg
jmp
mov
and
add
add
fwait
loopne
adc
inc
push
ds
jmp
sub
add
sub
dec
inc
and
mov
push
cli
add
cmp
mov
or
mov
jb
je
jmp
sub
add
sub
mov
pop
jg
sub
add
add
add
sub
in
inc
and
(bad)
lods
mov
or
add
add
pop
mov
inc
dec
push
jg
jmp
mov
and
add
add
mov
mov
add
mov
sub
call
add
add
add
or
mov
and
and
push
push
aaa
test
add
add
and
add
rcr
and
mov
test
adc
aad
add
clc
and
add
bound
test
add
jmp
mov
sub
dec
loop
cmp
pop
(bad)
and
add
add
add
jmp
jge
stos
jmp
mov
jno
add
cmp
cli
add
add
inc
leave
mov
jmp
mov
mov
mov
add
jnp
movs
add
add
mov
test
gs
add
mov
xchg
and
cmp
add
fwait
rcr
add
add
mov
mov
jmp
push
clc
dec
jns
sub
jmp
xor
add
add
mov
mov
movs
mov
jmp
add
cmp
add
add
add
add
xchg
(bad)
mov
(bad)
setl
test
xor
xor
mov
and
add
mov
and
and
(bad)
hlt
or
cmc
les
mov
cld
not
cmp
ss
lea
jb
outs
add
int
push
add
jle
add
add
add
das
xchg
data16
add
add
or
adc
add
mov
mov
call
lea
xchg
test
push
add
pop
add
cmp
inc
jge
add
inc
mov
xor
mov
mov
into
lds
mov
fs
and
mov
and
mov
sar
mov
mov
inc
xor
add
jmp
ins
mov
imul
and
sbb
add
add
psubw
hlt
dec
add
add
pushf
(bad)
mov
fsubp
and
idiv
or
push
xchg
sub
loope
add
add
add
add
mov
mov
test
cmovne
test
push
adc
jmp
clc
test
add
adc
and
add
add
add
rcr
add
add
mov
jmp
mov
mov
jl
mov
mov
mov
inc
out
add
mov
mov
ja
mov
jmp
fild
add
or
mov
add
add
pushf
(bad)
sbb
bswap
clc
mov
xor
dec
ret
repz
repnz
and
and
mov
cmp
and
mov
mov
inc
pop
and
or
aad
retf
add
add
ror
out
mov
bound
cmps
mov
jmp
mov
pop
add
adc
into
lds
sub
mov
mov
aaa
mov
or
mov
mov
adc
out
sar
(bad)
imul
add
add
cmps
inc
sub
les
add
cmp
(bad)
ret
pop
add
add
xor
xor
add
test
cmovne
mov
jmp
mov
and
push
add
movs
test
add
add
shl
pop
xchg
pop
cwde
ret
or
test
fs
jno
cmp
add
and
fwait
add
add
add
(bad)
das
xlat
and
mov
retf
add
inc
mov
test
add
mov
xor
inc
jge
add
cmc
mov
mov
and
repz
in
add
test
or
add
push
or
xor
add
sub
and
mov
inc
test
mov
add
mov
and
add
mov
push
add
aam
sbb
sahf
lds
xor
call
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
(bad)
pop
leave
jp
inc
and
mov
ret
jmp
mov
mov
psubusw
sub
jmp
mov
sub
mov
outs
add
mov
add
xlat
add
add
mov
sub
mov
je
jmp
jmp
mov
mov
mov
and
sub
add
inc
shl
add
sbb
or
mov
mov
jmp
mov
lea
cmp
pop
retf
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
movsx
mov
and
xor
or
mov
add
add
sub
mov
mov
shl
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
xchg
jecxz
cmp
addr16
xor
and
and
mov
retf
inc
and
mov
mov
cmp
and
and
and
mov
sub
mov
xchg
dec
and
ins
pop
add
add
and
lahf
aad
jbe
mov
test
add
add
mov
xchg
cmc
(bad)
stos
mov
and
jg
jmp
mov
(bad)
mov
inc
mov
jg
jmp
mov
xor
mov
bswap
dec
add
add
cmp
retf
xchg
gs
je
jmp
mov
sub
mov
comiss
add
add
jb
add
mov
xchg
inc
and
je
jmp
jo
and
sub
push
inc
and
movq
add
jmp
hlt
jmp
push
jmp
sbb
mov
and
xlat
push
loop
cmovb
xor
and
jmp
mov
mov
inc
add
leave
pop
(bad)
push
xor
rol
test
fild
out
or
and
prefetcht1
mov
mov
sbb
mov
and
int
xor
and
mov
dec
and
and
xor
mov
mov
and
mov
mov
sets
mov
and
jmp
mov
pop
pop
and
aad
jbe
jmp
add
ins
jge
sub
add
leave
out
and
add
int3
(bad)
add
add
fsub
add
mov
inc
imul
jmp
aam
push
ret
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ror
les
mov
mov
mov
mov
and
add
add
mov
mov
and
add
in
add
add
test
add
test
add
lahf
test
add
dec
mov
test
add
add
push
sbb
and
add
sbb
add
(bad)
sub
add
mov
jo
mov
sub
mov
and
add
add
(bad)
ja
add
jmp
imul
add
mov
jg
jmp
mov
sub
in
and
add
add
jmp
imul
xor
add
sti
cld
(bad)
rol
add
test
push
add
loopne
and
jo
add
rcr
rol
mov
sub
ins
loop
pop
xchg
mov
sub
sbb
add
(bad)
cs
add
jmp
mov
jle
jnp
push
loop
and
jo
add
ins
loop
pop
xchg
rol
sub
sbb
xchg
add
(bad)
arpl
add
add
add
hlt
and
add
inc
std
mov
(bad)
sub
add
jmp
mov
jne
outs
sar
mov
inc
(bad)
xchg
sbb
add
loopne
push
fcomp
ror
(bad)
mov
and
mov
mov
pop
dec
add
mov
fadd
add
sub
mov
jl
add
add
add
xchg
add
ins
add
mov
and
mov
jo
(bad)
int
add
jmp
mov
and
pop
add
(bad)
test
add
add
sbb
repz
add
add
pop
test
cmc
add
sub
mov
test
jmp
mov
test
inc
jle
rol
xrstors
sti
repz
add
add
hlt
dec
int
test
mov
jo
xchg
pop
add
mov
mov
test
add
add
pop
fsub
dec
add
je
jmp
mov
sub
mov
je
ins
add
add
mov
fadd
add
sub
ror
enter
xchg
inc
test
add
sbb
add
out
ja
mov
sub
mov
and
add
mov
add
jmp
mov
sub
mov
jl
jecxz
mov
mov
add
test
fadd
repz
fiadd
jg
push
add
add
xchg
add
fadd
aam
popf
mov
je
mov
dec
add
test
fcom
cmp
(bad)
test
pop
add
mov
and
add
imul
in
fbstp
add
dec
mov
sub
mov
movups
pop
add
jmp
mov
sub
stc
inc
cmp
je
jmp
mov
fadd
pop
add
rol
je
jmp
mov
xchg
sti
add
fisub
mov
pop
arpl
push
add
add
and
add
add
jb
mov
add
add
mov
adc
pop
add
gs
iret
lods
dec
mov
lods
push
add
jmp
mov
sub
loop
and
test
or
add
mov
test
call
and
je
add
les
sub
mov
stc
imul
add
add
sub
sub
je
jmp
mov
fadd
add
test
imul
shl
je
jmp
mov
rcl
sbb
cmp
test
add
add
add
jmp
ror
pop
leave
aas
mov
mov
mov
mov
out
and
fild
out
add
add
add
scas
xlat
and
cmp
sete
fsin
inc
add
add
and
xor
or
(bad)
add
inc
sar
add
add
jo
add
mov
mov
or
rol
test
add
ror
pop
add
add
mov
jl
mov
add
mov
jl
and
add
add
cwde
jge
add
add
and
sub
add
imul
mov
cmp
bswap
ret
cmp
fwait
pushf
mov
sti
repz
mov
jmp
(bad)
out
and
jo
sbb
jmp
mov
mov
sbb
add
add
push
ror
add
push
add
das
and
push
push
cmp
push
add
sti
and
xchg
xchg
jge
add
add
clc
add
mov
adc
dec
hlt
xchg
(bad)
jb
or
fcomi
sbb
add
and
jnp
rol
fdiv
xor
mov
and
or
jg
dec
xor
(bad)
arpl
arpl
xor
or
and
js
neg
add
inc
icebp
mov
jmp
mov
mov
inc
xchg
mov
(bad)
xlat
and
add
imul
add
mov
add
mov
sbb
mov
xchg
cmp
cmovge
pop
dec
adc
sete
cmp
packuswb
sbb
xor
in
ja
mov
add
stos
je
inc
and
and
and
or
fdiv
lahf
mov
or
xor
or
js
in
test
mov
and
movsx
mov
fcom
add
stos
test
imul
mov
jae
mov
sbb
and
pop
mov
push
jbe
in
add
pusha
add
add
add
inc
cdq
shr
add
add
mov
mov
mov
into
add
add
mov
add
mov
mov
dec
das
sub
mov
jo
mov
add
add
mov
cmp
add
mov
and
jo
sbb
mov
or
(bad)
(bad)
inc
adc
and
shl
leave
repz
(bad)
(bad)
jmp
mov
(bad)
pop
and
(bad)
or
xor
in
fcom
mov
add
add
mov
cmp
sbb
or
add
dec
add
jmp
mov
dec
jns
xchg
xchg
mov
mov
mov
add
sub
jmp
scas
xlat
sub
cli
sti
add
test
iret
ret
cmp
setl
mov
or
mov
rcr
add
retf
add
add
mov
mov
mov
mov
loopne
xchg
jge
add
jmp
cli
add
bound
imul
out
add
cmp
fwait
xchg
mov
setl
jae
xor
mov
and
mov
rol
repnz
and
and
cmp
pop
xor
mov
or
xor
fadd
push
(bad)
and
cmovne
mov
and
add
ins
jmp
mov
jmp
(bad)
mov
add
mov
or
add
add
loope
hlt
dec
(bad)
mov
addr16
push
add
add
repz
(bad)
jl
sub
in
jmp
es
or
test
cmp
sete
dec
dec
add
setl
mov
sbb
sbb
fmul
add
in
mov
and
and
and
push
or
xor
mov
(bad)
test
xlat
sahf
cld
scas
mov
addr16
push
hlt
inc
icebp
jp
and
add
add
jl
add
mov
aad
(bad)
cmc
or
sbb
repnz
jp
test
loop
(bad)
mov
bnd
xchg
mov
pop
add
mov
jge
add
add
add
adc
add
xchg
hlt
scas
xlat
adc
je
add
add
xchg
ret
cmp
(bad)
(bad)
mov
and
sti
or
test
cmovne
or
(bad)
fadd
add
jmp
mov
jmp
mov
mov
call
xchg
and
add
ins
mov
mov
mov
call
sti
mov
add
mov
call
lea
mov
mov
icebp
add
in
add
add
cmp
cmp
and
add
add
in
and
mov
mov
mov
dec
imul
and
pop
xchg
add
pop
add
test
add
add
and
add
add
inc
repz
cmc
mov
dec
test
add
jns
jo
jmp
mov
add
add
add
iret
test
stos
xlat
mov
mov
mov
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
sbb
adc
xchg
and
add
add
and
jmp
add
add
mov
mov
lods
inc
and
add
pop
add
inc
and
add
add
mov
lea
mov
and
fimul
jg
(bad)
out
add
mov
jo
sti
ja
lock
ret
add
pop
add
add
pmullw
stos
mov
gs
sbb
add
add
add
pusha
ret
add
add
cwde
add
mov
sub
sahf
mov
aas
add
jb
add
es
and
push
aad
fidiv
(bad)
sbb
xor
or
aad
adc
inc
and
je
fcom
add
pushf
inc
and
xchg
or
test
sti
sbb
add
add
sbb
sub
mov
jge
cmp
and
add
(bad)
jae
sub
sahf
inc
and
movs
call
jb
add
mov
sub
mov
and
je
jp
add
jo
add
jno
inc
jg
jmp
mov
and
sbb
ret
jae
mov
jg
push
add
jbe
sub
mov
jg
jmp
mov
and
(bad)
lods
xchg
add
mov
and
paddusw
add
add
inc
and
jae
push
shl
inc
xor
ucomiss
add
jmp
mov
sub
mov
je
pop
pusha
mov
add
into
cmps
mov
sub
mov
pop
mov
add
inc
adc
add
mov
and
psadbw
add
jmp
inc
sub
repnz
and
je
pop
sbb
mov
mov
sub
mov
and
paddusw
xor
inc
add
add
inc
ret
xlat
add
add
add
add
mov
add
ja
lods
paddusw
and
cmc
push
add
jmp
and
cmp
setle
mov
jmp
mov
xor
mov
add
and
rol
add
or
or
daa
les
(bad)
rol
and
or
je
repz
sbb
and
pop
mov
add
rcr
push
popf
xlat
mov
mov
mov
and
pop
add
setb
sbb
and
add
out
xor
and
jp
add
repz
pop
add
ret
les
call
add
add
inc
add
cmp
setl
rol
xchg
add
adc
repnz
add
(bad)
outs
inc
and
and
push
cmp
mov
and
or
xor
adc
add
jne
loope
adc
cmovne
mov
jmp
mov
mov
popf
xchg
ret
xchg
add
cmovne
jmp
mov
push
push
call
add
add
pushf
and
dec
add
mov
rcr
and
sub
mov
mov
sub
mov
mov
movzx
fisttp
jmp
add
mov
sbb
or
ror
dec
ret
xor
mov
adc
add
mov
sti
inc
jbe
cmp
and
add
add
inc
mov
inc
shl
je
push
add
leave
add
add
lds
add
add
mov
push
das
push
add
mov
mov
xchg
jo
add
mov
dec
and
mov
jmp
mov
push
jo
cdq
inc
mov
cmp
add
in
xchg
xor
add
pop
pop
xlat
and
cmp
ucomiss
add
jnp
clc
fisub
cli
xor
add
and
jmp
mov
mov
mov
lar
add
or
push
add
add
add
pop
mov
mov
mov
dec
add
add
or
push
jno
add
setl
mov
xor
arpl
repz
and
and
fsub
mov
inc
and
and
jae
or
xor
or
addr16
add
retf
movs
or
movs
mov
mov
jnp
icebp
repnz
and
jmp
lea
call
mov
mov
add
add
inc
and
jo
cdq
inc
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
mov
mov
movzx
mov
mov
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
imul
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
lea
mov
mov
movzx
mov
mov
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
imul
add
mov
mov
mov
mov
mov
call
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
sub
add
add
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
xchg
push
mov
push
push
push
sub
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
mov
add
add
sub
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
jmp
lea
pop
pop
pop
pop
ret
mov
call
mov
mov
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
dec
sbb
test
and
lock
add
mov
mov
mov
mov
sub
mov
push
mov
popf
(bad)
cmp
icebp
push
add
mov
sub
mov
jg
jmp
add
lahf
nop
mov
sub
fld
add
jmp
mov
aad
xchg
test
jge
add
ret
mov
jle
mov
and
jg
jmp
fs
sub
mov
cmp
(bad)
mov
clc
fld
add
mov
inc
xor
test
add
add
xchg
add
add
retf
or
test
push
add
push
add
cmp
sub
mov
je
jmp
sub
sub
mov
rol
add
js
sub
dec
(bad)
and
sub
mov
je
jmp
mov
sub
mov
dec
je
jmp
cmp
and
mov
mov
clc
add
xor
add
xor
sub
mov
je
jmp
mov
mov
loop
and
in
test
mov
add
adc
popf
jmp
mov
(bad)
xchg
mov
push
push
add
cmovne
mov
jmp
mov
mov
mov
xchg
cmp
xchg
pop
imul
jmp
and
inc
mov
mov
add
add
stos
retf
stos
pop
jl
adc
add
add
mov
jmp
mov
mov
outs
mov
push
add
add
add
add
sub
imul
adc
sahf
xchg
add
add
sete
jmp
or
add
setl
mov
(bad)
adc
fdiv
xor
adc
and
inc
inc
and
and
and
or
fcom
cmps
inc
and
or
xor
or
rcl
pop
cld
test
mov
cvtps2pd
jmp
pop
and
adc
push
add
add
add
add
add
cli
mov
xlat
sbb
cmp
sete
sub
(bad)
mov
mov
xor
arpl
pushf
and
inc
and
addr16
add
pop
addr16
add
lea
jae
lock
add
je
pop
movs
div
mov
mov
cmp
cmp
add
mov
mov
or
add
mov
(bad)
jmp
pop
pop
pop
pop
rcr
jmp
int
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
adc
and
add
add
add
or
mov
test
push
add
mov
mov
mov
mov
and
add
add
test
mov
es
mov
jge
mov
and
add
rol
mov
inc
mov
add
add
add
add
add
stc
add
add
sub
mov
mov
jmp
mov
mov
test
add
out
pavgw
add
aas
jmp
mov
in
sub
mov
add
test
add
add
nop
add
push
mov
sub
mov
and
stc
leave
add
test
xchg
add
add
add
mov
sub
mov
je
jle
cmps
lahf
add
ins
add
mov
xchg
push
into
add
add
add
add
mov
jmp
add
pop
adc
dec
and
add
add
test
add
add
sbb
or
mov
sub
pop
test
pop
and
add
add
movs
add
mov
nop
(bad)
(bad)
pop
out
add
fsubr
ror
add
xchg
test
add
out
(bad)
push
add
leave
fild
add
or
add
sub
mov
and
jg
cmp
add
add
in
in
and
jg
push
mov
add
outs
inc
push
je
(bad)
and
leave
add
add
or
or
and
add
sub
mov
and
je
jmp
adc
and
jp
out
inc
movs
aad
loope
vpunpcklqdq
(bad)
cmp
iret
add
push
add
add
add
sub
mov
je
jecxz
add
add
add
sub
into
inc
mov
jg
jmp
mov
sub
mov
arpl
out
call
in
sbb
or
inc
and
test
add
add
mov
add
mov
movlps
ror
add
lahf
jp
arpl
and
arpl
sub
test
lods
add
add
or
int
inc
inc
and
je
outs
inc
add
mov
std
jbe
push
inc
mov
fisttp
sub
add
add
add
add
test
out
add
inc
pop
xchg
push
mov
into
test
add
add
mov
sub
mov
and
add
call
in
lods
add
add
mov
and
movhlps
add
add
push
add
sbb
add
mov
mov
cmp
(bad)
and
add
jle
lahf
jp
mov
rol
add
mov
punpckhwd
add
push
mov
sub
add
xor
(bad)
add
add
ror
add
mov
push
les
test
add
add
add
lods
add
add
or
mov
out
stc
add
add
sub
mov
outs
cdq
test
add
mov
mov
sub
mov
retf
and
call
jmp
mov
and
add
add
xchg
inc
and
je
mov
mov
sub
jo
and
je
fist
xchg
add
test
xchg
add
sub
mov
add
add
add
enter
mov
mov
mov
mov
push
xor
inc
pop
mov
iret
jmp
mov
icebp
mov
xchg
add
mov
jmp
mov
pop
test
out
add
jne
(bad)
or
adc
daa
jmp
push
add
add
mov
or
stc
dec
(bad)
loope
jno
add
inc
add
add
cli
add
add
pop
xchg
adc
add
pushf
(bad)
mov
mov
scas
or
xor
mov
jmp
mov
mov
mov
jno
add
add
add
mov
data16
mov
ss
and
jge
sbb
add
add
xchg
mov
and
mov
mov
scas
xchg
mov
add
(bad)
in
add
add
xchg
cmp
setl
mov
ret
xor
xor
mov
and
and
mov
mov
xchg
inc
and
and
or
mov
cmp
or
xor
or
hlt
add
lods
js
(bad)
out
mov
cmovne
mov
jmp
mov
mov
mov
movs
add
stc
test
mov
test
add
add
push
add
add
mov
mov
pop
adc
jns
add
add
lahf
mov
lahf
and
cmp
sete
jle
add
add
pushf
(bad)
mov
and
xor
or
test
rol
test
add
out
add
pop
xor
jle
mov
int3
mov
mov
add
mov
jmp
mov
add
mov
ret
ja
dec
fdivr
add
jns
add
add
add
add
add
and
scas
repz
add
add
ss
or
add
test
mov
xor
mov
add
mov
repnz
in
and
mov
and
loope
xchg
hlt
or
mov
xchg
inc
and
or
dec
not
retf
xlat
or
je
cmp
inc
icebp
mov
scas
ret
add
test
add
add
int3
mov
jmp
mov
mov
mov
das
stos
fdivr
add
add
inc
inc
repnz
call
imul
mov
add
add
add
or
add
ss
mov
push
test
mov
xor
or
xchg
mov
and
and
sub
mov
ror
cwde
or
syscall
mov
mov
xor
or
and
adc
test
fcom
icebp
inc
sub
add
add
add
add
scas
adc
mov
add
add
mov
mov
sub
sub
push
mov
mov
out
ins
mov
fdivr
add
add
add
repz
imul
add
in
add
add
add
xchg
xchg
cmp
setl
sti
shl
repz
icebp
sbb
ret
add
inc
rol
inc
jg
add
add
test
add
add
stc
test
movs
mov
fs
mov
add
sub
mov
mov
fs
aas
mov
add
fsub
mov
mov
cs
xchg
mov
and
add
add
and
ror
jmp
ret
sbb
inc
pop
mov
fdivr
add
add
adc
jae
out
add
sbb
cmp
add
add
xor
sete
cmp
pushf
(bad)
mov
mov
xor
or
es
daa
psrld
mov
mov
jmp
mov
mov
mov
inc
xchg
and
push
add
mov
mov
mov
add
repnz
add
or
mov
cmp
and
or
add
xchg
push
and
out
setl
xor
xchg
(bad)
inc
in
cmovne
inc
test
add
add
mov
fadd
add
lea
pop
pop
pop
pop
inc
mov
cmp
mov
mov
mov
sbb
and
add
add
adc
mov
jmp
mov
cld
lahf
ret
add
sub
into
test
sbb
add
and
add
cmp
jp
add
test
mov
add
call
(bad)
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
retf
scas
mov
adc
add
mov
mov
inc
call
and
cld
add
and
add
inc
xor
add
add
add
cmp
or
jmp
or
iret
mov
mov
sub
aad
and
add
pop
mov
jg
jmp
inc
sub
mov
cli
test
pop
add
and
test
add
add
mov
mov
(bad)
and
add
sbb
(bad)
call
pop
arpl
mov
jb
cmp
add
jmp
mov
(bad)
gs
sub
add
mov
jp
loope
add
add
add
add
sub
mov
je
jmp
adc
add
add
mov
psllq
add
add
add
add
mov
push
data16
cmps
mov
je
pop
hlt
add
add
add
out
pop
mov
(bad)
and
add
jmp
mov
sub
mov
je
jmp
mov
and
add
add
in
fimul
int3
add
add
cmc
add
add
add
sub
mov
je
jmp
xor
sub
test
nop
add
cwde
out
and
add
add
or
sar
and
jge
add
mov
rdtsc
imul
add
add
test
cmc
loope
sub
mov
jg
push
add
and
add
add
aad
and
add
or
add
add
add
mov
shr
mov
hlt
(bad)
rol
mov
jmp
jle
and
add
add
outs
or
mov
add
call
add
mov
and
add
add
mov
psrlq
out
cwde
add
call
or
add
shr
repz
add
add
cmps
add
mov
sub
mov
hlt
(bad)
clc
add
mov
add
add
mov
sub
mov
jg
jmp
mov
sub
adc
jl
jge
add
add
mov
sub
mov
and
jg
jmp
inc
test
les
add
sub
mov
mov
cdq
mov
add
pop
mov
sub
rol
je
adc
inc
sub
mov
je
jmp
mov
and
mov
sub
addr16
xchg
test
loop
pop
add
les
add
sub
rol
psubb
add
cmps
add
test
mov
add
mov
mov
mov
add
add
add
mov
psubusb
cwde
add
ins
add
call
add
add
mov
jae
cmc
add
add
and
jne
add
jb
rol
test
add
add
ss
or
jmp
jo
in
jne
inc
and
mov
and
sbb
js
add
cwde
sub
mov
pop
fbld
add
jmp
jmp
int
sub
jne
jmp
shr
add
add
add
xor
mov
jmp
mov
mov
jno
add
sub
pop
jl
jne
pop
dec
test
test
mov
add
sti
mov
dec
push
xchg
adc
sub
test
js
and
add
or
cmps
jmp
mov
pop
mov
add
mov
jns
add
add
add
add
mov
mov
cmp
sbb
xor
hlt
loope
add
add
xchg
(bad)
(bad)
sti
or
add
popa
pushf
ror
ret
xor
xor
or
and
and
mov
rcl
fsub
outs
inc
and
bound
or
(bad)
cld
inc
or
or
cmp
and
out
(bad)
loopne
je
xor
inc
std
mov
jmp
pop
(bad)
mov
xor
mov
mov
xlat
mov
add
add
movzx
push
cmp
push
xchg
(bad)
cld
out
mov
idiv
sub
add
add
and
mov
cli
lock
and
cmp
out
pop
mov
pslld
mov
inc
hlt
add
xor
mov
and
and
mov
mov
and
xor
and
mov
ret
rcl
jae
into
xor
push
mov
retf
aam
inc
test
mov
cmovne
mov
call
pop
or
mov
dec
push
sbb
cmps
and
mov
push
cmovne
mov
jmp
mov
mov
mov
test
data16
push
sti
add
inc
jae
gs
enter
jmp
mov
mov
fcomp
mov
mov
mov
fucomp
add
add
mov
mov
pop
lock
scas
mov
add
jge
add
add
jb
pusha
or
hlt
xor
mov
xor
xor
jge
add
and
inc
inc
and
mov
and
mov
mov
ror
test
fadd
add
mov
add
add
inc
icebp
sub
cld
jmp
(bad)
je
mov
mov
mov
and
int3
add
mov
mov
mov
add
or
and
xadd
add
cmp
sete
mov
add
in
pushf
ret
mov
sub
rcr
xor
mov
pop
mov
cld
in
and
mov
and
and
or
mov
or
xor
or
and
or
test
mov
rcr
inc
icebp
mov
in
les
mov
add
popf
es
mov
add
jge
pop
add
in
adc
mov
sub
add
imul
sahf
push
add
add
add
pushw
sub
pop
mov
mov
mov
mov
mov
mov
jns
add
add
inc
push
adc
clc
add
scas
add
add
inc
add
add
xchg
mov
setl
mov
lods
inc
repz
sbb
(bad)
or
icebp
mov
js
adc
dec
sub
or
shl
or
xor
je
retf
das
mov
push
sub
inc
icebp
mov
jmp
mov
mov
mov
rol
add
sub
add
sub
sub
sub
sub
mov
mov
shl
cli
rol
mov
push
in
fadd
add
mov
mov
inc
cmps
or
xchg
in
(bad)
(bad)
mov
pop
outs
shr
sub
retf
cdq
call
psrld
jg
add
jl
sar
add
add
repnz
(bad)
hlt
out
int
add
xor
scas
(bad)
and
cmp
add
ret
cmp
setl
aaa
fsub
inc
mov
psubusb
cmovne
aad
mov
add
add
add
test
pop
add
(bad)
mov
add
jne
lea
movs
pop
pop
out
ret
xor
sub
mov
test
mov
add
mov
or
add
out
sbb
xchg
or
test
and
enter
pop
push
lock
mov
sub
inc
(bad)
out
mov
out
mov
cmps
xlat
add
add
loop
add
add
mov
adc
mov
shr
fdivr
cmp
or
je
(bad)
inc
sub
in
adc
js
mov
add
outs
add
add
fstp
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
sahf
inc
and
inc
dec
add
mov
ret
push
sar
jmp
push
inc
and
mov
dec
(bad)
sbb
add
enter
lea
mov
jle
add
jmp
mov
and
sub
mov
inc
paddusw
add
add
inc
pop
scas
and
ror
jmp
ins
sbb
in
sti
mov
xchg
dec
add
inc
fimul
sbb
xrelease
jg
jmp
mov
or
mov
je
jmp
mov
test
cli
sbb
and
jg
jmp
mov
sub
xor
test
add
jmp
mov
inc
icebp
xchg
mov
and
(bad)
sbb
add
add
mov
push
mov
je
jmp
mov
sub
ja
jbe
jg
push
add
add
sub
mov
and
je
jmp
mov
sub
mov
jb
add
sldt
pop
add
or
fldcw
mov
je
jmp
mov
sub
fild
cmovno
add
mov
stos
lods
add
and
dec
test
into
add
add
enter
ret
add
mov
pop
add
xor
add
xor
mov
leave
out
shr
mov
inc
adc
loop
add
xchg
add
xchg
ret
dec
dec
add
setl
mov
and
xor
or
test
fs
ror
add
add
mov
mov
mov
and
xor
add
and
mov
ret
jns
add
add
(bad)
hlt
jp
jmp
add
pop
imul
and
xor
cmp
cmp
mov
xor
mov
mov
mov
(bad)
sub
and
and
and
bound
mov
and
or
xor
retf
xlat
jecxz
mov
add
inc
les
in
jmp
mov
mov
rcl
test
cmovne
mov
and
jmp
mov
jmp
mov
mov
dec
adc
aaa
xor
mov
push
out
stos
xchg
and
out
add
add
add
pshufw
loop
mov
add
add
pop
add
rol
leave
dec
add
add
pop
(bad)
mov
cli
xor
or
inc
mov
jbe
jmp
mov
mov
mov
add
sub
aas
jmp
push
in
cmp
add
add
xlat
add
add
(bad)
jmp
scas
xlat
and
cmp
sete
add
mov
pminub
mov
test
pshufw
fwait
in
jmp
mov
jmp
dec
inc
and
lea
pop
retf
ret
mov
jmp
(bad)
lds
inc
and
sub
leave
add
push
int
fwait
add
jno
mov
test
out
sbb
repz
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
cmps
and
sub
push
add
hlt
and
mov
push
push
rol
js
mov
mov
sub
mov
mov
sbb
jmp
mov
inc
mov
je
jmp
mov
sub
mov
cmp
add
add
(bad)
retf
in
inc
and
je
jmp
mov
sub
bound
adc
add
add
ins
shr
push
add
add
lods
inc
in
popf
mov
cmp
cmove
inc
and
pop
xlat
add
add
inc
and
(bad)
cdq
mov
retf
in
lods
add
add
inc
and
add
add
mov
jmp
mov
lea
pop
pop
pop
rcl
mov
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
and
shr
push
add
push
stc
sub
mov
or
inc
and
push
js
mov
and
pop
rcl
nop
into
js
mov
and
mov
jg
jge
add
add
and
and
movsx
add
in
adc
ret
in
sahf
inc
and
xadd
and
popa
mov
sub
mov
je
jmp
mov
popa
retf
scas
mov
in
push
add
inc
jmp
jmp
mov
and
and
mov
add
add
inc
and
jmp
mov
mov
jmp
mov
mov
jmp
mov
in
gs
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
dec
adc
je
jo
dec
and
jnp
pop
jle
inc
pop
ins
mov
jl
inc
pop
rcr
movs
add
add
inc
and
mov
cmp
mov
lods
push
sub
mov
jl
and
jg
jmp
mov
sub
mov
(bad)
sbb
jg
add
sti
out
lods
ja
pop
lds
je
jmp
mov
sar
leave
mov
jg
jmp
mov
pop
sub
pop
jnp
cmps
jecxz
add
push
add
jns
push
and
jne
icebp
add
mov
(bad)
jmp
mov
and
sub
mov
sub
and
enter
gs
add
(bad)
sbb
add
add
push
icebp
add
mov
cmp
rol
add
lock
pop
inc
and
sub
mov
jg
int
add
xor
mov
jg
jmp
mov
ret
mov
jnp
mov
add
sbb
inc
pop
pop
sub
mov
and
jg
cmp
add
pop
or
xchg
or
test
add
test
cmc
push
mov
cmp
mov
and
jbe
mov
add
jmp
mov
pop
mov
arpl
sub
(bad)
push
add
mov
sub
mov
or
test
repnz
xor
je
mov
sub
imul
test
pop
jg
sbb
and
sub
mov
and
je
jmp
int
add
add
mov
mov
retf
xchg
add
cmp
cmovb
pop
jmp
(bad)
cmp
jg
mov
aas
add
add
(bad)
xchg
and
add
add
inc
sub
cmp
je
jmp
add
pop
dec
and
mov
mov
lea
mov
mov
xor
sub
sub
(bad)
repz
or
sete
cmp
setl
mov
push
add
fdiv
push
repnz
and
dec
add
shl
adc
xor
mov
xor
or
and
or
test
mov
cmovne
mov
out
pop
repz
int3
lods
dec
arpl
ror
mov
mov
aaa
add
(bad)
cmps
ret
jl
lahf
add
add
rol
push
add
add
popa
retf
jmp
repnz
and
mov
scas
mov
add
add
xchg
arpl
ins
btc
mov
xor
mov
mov
xor
sbb
add
(bad)
in
mul
adc
ror
hlt
or
les
mov
cld
test
mov
cmp
icebp
shl
jmp
cmp
lods
sbb
in
mov
test
cvttps2pi
mov
inc
cmc
mov
mov
mov
add
dec
and
mov
mov
jno
add
jns
and
add
ss
jg
add
mov
(bad)
xchg
and
sbb
push
add
mov
and
loopne
sub
sub
pop
(bad)
dec
and
mov
mov
add
mov
and
rol
xchg
sbb
add
pop
inc
and
lea
pop
pop
pop
pop
ret
inc
inc
dec
pusha
cmp
dec
daa
int
xchg
aaa
jmp
pop
inc
add
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
lods
inc
and
xchg
xor
pusha
mov
sub
mov
mov
sbb
pusha
add
cmp
mov
je
adc
add
sti
adc
pop
sub
nop
das
mov
add
jmp
mov
xor
shl
je
in
cmp
and
shl
and
jg
jmp
mov
sub
mov
and
out
sbb
add
add
pop
inc
pop
sub
mov
je
jmp
mov
sub
mov
fisttp
adc
add
add
retf
sbb
xchg
sbb
imul
add
xchg
xor
mov
je
jmp
mov
lods
push
int3
lds
jmp
(bad)
jp
add
add
mov
sub
cwde
lods
loope
inc
adc
mov
add
add
fistp
add
jmp
inc
movs
test
je
mov
add
add
iret
jno
ror
retf
add
add
aaa
or
mov
inc
and
scas
pmulhw
sbb
jmp
mov
sub
mov
add
sub
in
add
mov
sub
mov
test
add
imul
add
mov
mov
mov
mov
mov
mov
mov
cmp
mov
cmp
jmp
sti
add
sbb
or
and
cmp
(bad)
mov
sbb
adc
fsub
mov
and
and
mov
and
fisttp
ret
or
xor
mov
or
xor
adc
and
or
les
mov
cmovne
pop
adc
add
add
(bad)
ins
out
ror
jl
imul
mov
outs
xchg
xor
mov
jns
add
daa
xchg
jp
jmp
add
add
imul
push
jmp
iret
(bad)
and
adc
add
xchg
mov
push
pushf
ret
mov
xor
adc
mov
repnz
and
mov
xchg
and
arpl
or
sub
inc
stos
or
mov
cld
xchg
les
mov
outs
inc
icebp
lods
je
pop
jmp
mov
mov
mov
test
movsx
mov
adc
cmp
xchg
movs
nop
sub
mov
mov
mov
add
sub
sub
imul
loop
add
pop
loope
and
xchg
movs
cmp
fistp
sbb
cmc
fcomi
ret
inc
pop
mov
loope
imul
data16
nop
inc
mov
mov
or
xchg
pop
mov
push
add
in
inc
sub
lods
ret
popf
jo
inc
imul
and
cmp
cmp
lods
add
pushf
ret
mov
sbb
pop
and
xor
sub
mov
and
add
add
lock
hlt
or
inc
and
and
or
or
and
or
idiv
fwait
mov
inc
icebp
mov
jmp
mov
jmp
mov
test
mov
add
or
enter
inc
and
mov
in
or
inc
and
lea
pop
pop
mov
and
mov
call
lods
add
inc
and
cmps
je
(bad)
addr16
loopne
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
add
data16
mov
fdivp
test
cwde
xchg
mov
test
add
mov
clc
sub
mov
mov
jg
jmp
mov
jne
pop
lock
mov
imul
add
test
lea
test
add
ret
jmp
mov
add
test
mov
je
(bad)
and
add
pop
mov
pop
sti
pop
lock
inc
and
je
jmp
mov
sbb
popf
mov
inc
and
ja
pop
add
add
add
xlat
shl
push
pop
jmpw
out
xor
fdivp
(bad)
imul
inc
and
int3
(bad)
and
add
mov
sub
mov
(bad)
jno
add
jmp
adc
mov
nop
ins
dec
rol
psubb
out
xor
aaa
add
div
mov
add
mov
and
setnp
add
add
les
sub
mov
and
jg
jmp
mov
sub
mov
and
js
rol
fsubrp
add
add
jl
and
and
jmp
sub
add
add
mov
jp
imul
test
and
ja
test
add
xor
js
and
cmp
jmp
mov
cdq
push
outs
mov
inc
sub
xor
push
add
add
retf
mov
movs
popf
cmp
(bad)
push
add
add
add
add
rol
sub
mov
test
test
add
add
out
and
mov
cmp
add
add
add
mov
mov
pop
in
mov
paddusb
add
(bad)
scas
out
add
mov
sub
mov
sub
test
add
add
mov
test
add
add
mov
sbb
cwde
add
imul
add
int
push
(bad)
stos
and
je
aaa
xchg
add
mov
fmul
clc
adc
test
mov
add
ins
add
add
add
and
inc
push
add
inc
and
xchg
dec
loope
add
jmp
dec
test
add
sub
mov
and
loopne
aam
fiadd
push
(bad)
and
and
add
add
mov
and
je
jmp
mov
mov
jge
pop
mov
dec
jge
pop
pop
add
add
out
add
mov
lods
dec
mov
mov
mov
aas
cmp
mov
lods
jns
add
add
int
lock
shl
add
push
cwde
cmp
maxps
cmp
minps
shl
out
add
neg
push
add
(bad)
mov
mov
and
mov
add
ror
idiv
je
push
or
xor
or
retf
aam
out
(bad)
cdq
mov
cmovne
mov
jmp
fdivrp
add
pop
ins
add
add
add
and
and
mov
mov
mov
push
add
cmp
mov
add
mov
add
push
cmp
add
add
add
into
int3
mov
setl
mov
pop
add
mov
xor
add
mov
and
and
mov
and
xchg
ror
hlt
sbb
xor
mov
or
xor
or
jb
nop
cld
test
mov
jle
mov
add
dec
add
mov
addr16
xchg
and
add
add
ret
dec
add
adc
jmp
mov
mov
mov
pop
mov
nop
add
cmp
cmovne
mov
jmp
dec
lock
dec
(bad)
call
add
movzx
mov
psraw
cmp
paddq
inc
test
fwait
jl
mov
test
jmp
pushfw
movs
popf
sti
mov
mov
movsx
cmp
mov
and
add
or
aad
add
add
add
add
mov
jmp
sub
add
pop
or
add
test
add
add
push
add
add
add
add
add
test
add
add
adc
inc
test
add
add
add
add
mov
inc
xchg
add
add
repz
add
add
jb
fmul
add
mov
mov
jmp
mov
lods
dec
int
push
sbb
push
add
add
or
add
add
sbb
or
xlat
and
outs
retf
add
add
cmovp
(bad)
and
(bad)
mov
jecxz
test
or
iret
ret
inc
ror
add
rcl
mov
js
imul
add
add
pop
and
xor
add
and
add
and
push
add
add
mov
add
mov
add
cmp
cmp
pand
mov
or
add
pushf
or
xor
add
mov
jmp
scas
mov
arpl
add
cmp
dec
pop
pop
ret
mov
jmp
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
lahf
mov
dec
and
mov
mov
mov
fcom
push
dec
lock
fwait
mov
mov
ins
add
add
add
add
mov
sub
pop
jmp
psraw
add
add
fsub
inc
sub
cmp
and
je
mov
mov
imul
adc
(bad)
sbb
add
add
mov
and
push
xchg
call
and
movsx
pop
add
and
sub
out
and
jg
cs
inc
shr
sub
and
and
je
retf
add
mov
sub
lock
and
movs
aas
dec
add
cmp
add
imul
inc
and
sub
mov
dec
and
add
add
add
add
dec
xor
(bad)
dec
inc
add
cmp
add
test
inc
and
sbb
pop
cmps
stos
inc
popa
iret
je
jmp
cmp
sub
mov
add
add
mov
sub
mov
pminsw
pop
add
add
imul
jne
xchg
and
je
jmp
mov
and
(bad)
(bad)
jbe
dec
mov
sub
stos
add
imul
and
and
sub
loop
and
je
jmp
lahf
inc
inc
sbb
jmp
mov
je
jmp
jmp
mov
mov
xlat
jl
push
add
add
fld
and
jmp
mov
mov
mov
movzx
mov
cmp
inc
and
pop
add
add
mov
mov
mov
mov
adc
xor
push
cmovl
scas
inc
and
mov
cmp
add
add
mov
into
and
add
jns
cmove
mov
jmp
and
pop
xor
add
add
inc
and
add
cli
hlt
jmp
mov
jmp
test
dec
dec
dec
test
cmp
mov
push
add
loop
daa
push
mov
xor
inc
retf
add
fdivr
xchg
dec
(bad)
retf
mov
mov
into
repz
mov
inc
and
and
add
mov
or
jbe
cmp
hlt
cmc
pop
jmp
and
sub
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
or
add
mov
add
add
mov
rol
sub
(bad)
dec
add
and
jne
add
call
push
or
stos
add
and
add
rol
add
sub
mov
fadd
add
test
add
fcmovnu
mov
fadd
add
leave
push
fnstcw
add
test
adc
and
jge
add
int3
xchg
xor
call
add
jg
jmp
pop
test
add
and
add
das
(bad)
pop
add
add
add
add
add
add
mov
jg
sar
add
mov
cli
popf
gs
mov
add
(bad)
lods
add
jmp
mov
sub
mov
(bad)
je
add
inc
cwde
add
jp
test
cmps
add
or
in
add
mov
add
jmp
mov
sub
mov
(bad)
add
sub
mov
add
add
push
cmovo
and
add
cmps
stos
rol
add
jge
mov
xlat
sub
mov
jg
jmp
push
cmp
add
inc
sub
test
(bad)
push
add
add
and
push
jl
mov
mov
int
add
call
test
retf
dec
sub
loopne
and
add
xchg
lods
in
add
ret
add
stos
test
out
add
mov
jg
jmp
mov
add
mov
bswap
jmp
add
add
mov
dec
push
test
add
add
add
add
fs
add
add
test
mov
cmc
add
add
cmp
add
outs
pop
mov
mov
add
add
pop
enter
jmp
mov
sub
mov
wrmsr
scas
add
add
mov
sub
adc
movaps
stos
add
add
add
mov
sub
retf
fdivp
jl
test
imul
mov
sub
mov
loope
inc
lods
cwde
xchg
cmps
stos
add
mov
sub
mov
nop
add
add
add
add
lea
sub
mov
and
or
add
jmp
mov
add
inc
sub
push
add
jmp
adc
shl
test
orps
add
mov
add
mov
sub
mov
and
out
cmps
add
and
add
mov
and
je
jmp
mov
int3
add
add
ret
pop
fld
pop
add
and
add
sub
mov
je
les
add
test
sub
mov
je
jmp
mov
sub
mov
nop
push
add
jmp
mov
and
add
add
cmove
je
push
repz
add
sub
not
mov
and
test
loop
stos
cmp
test
xlat
in
add
ret
inc
mov
jmp
mov
int3
add
add
mov
je
les
test
not
and
dec
push
movs
add
add
push
mov
sub
mov
and
addr16
add
mov
add
sub
addr16
and
jo
add
cmp
mov
add
mov
loop
add
xor
and
mov
mov
or
add
sub
test
jno
add
add
add
sub
hlt
inc
and
je
jmp
ds
add
mov
mov
mov
loop
and
add
pusha
jmp
add
push
add
and
jg
lods
adc
mov
jmp
mov
pop
push
and
add
dec
repnz
enter
add
ds
jno
jg
xor
add
add
xchg
and
inc
add
cmovl
mov
and
add
add
ins
add
add
mov
mov
mov
leave
cmp
mov
sbb
add
add
gs
and
clc
rcr
out
add
and
add
sbb
add
setl
mov
mov
lods
repz
repnz
and
movs
and
mov
and
xchg
xchg
test
fsubr
xchg
add
fimul
je
and
inc
icebp
stos
mov
aam
add
jmp
call
mov
add
mov
mov
mov
cdq
idiv
jg
add
(bad)
and
stos
add
xor
add
setl
and
mov
mov
mov
mov
imul
inc
add
loop
scas
(bad)
leave
pop
add
add
imul
sbb
das
pushf
ror
xor
movs
ret
lods
xor
mov
mov
mov
and
mov
mov
mov
jl
test
xor
or
xchg
and
or
imul
fimul
inc
into
movs
repz
lods
cwde
jp
xchg
test
mov
push
and
add
add
mov
retw
ror
add
and
add
test
add
add
popf
dec
add
add
mov
mov
cld
test
add
call
add
add
scas
sbb
add
sti
mov
push
mov
mov
pcmpeqd
cdq
idiv
pop
inc
and
out
cmps
inc
and
mov
adc
stos
add
adc
cmp
add
add
mov
add
rol
push
ret
push
pushf
and
add
and
test
add
add
les
add
add
add
out
sub
add
ins
and
mov
add
mov
dec
pop
das
mov
scas
test
inc
sahf
jmp
leave
cmps
add
inc
mov
mov
mov
mov
mov
add
sub
sub
imul
or
cli
cmp
call
add
push
pmovmskb
mov
repnz
pop
jge
clc
test
cmovne
mov
mov
add
mov
push
(bad)
push
mov
jns
add
add
xlat
sub
in
out
add
add
sub
iret
push
xlat
ret
loop
add
add
sub
or
ret
push
(bad)
arpl
add
fisub
cli
xor
or
imul
add
inc
ror
add
call
test
icebp
movs
mov
jecxz
inc
add
mov
mov
shl
out
movs
jns
add
test
sub
add
imul
and
and
dec
add
mov
xor
and
fmul
xor
das
cld
sub
add
(bad)
mov
and
and
or
mov
data16
(bad)
sbb
add
add
xlat
or
test
mov
pop
icebp
mov
jmp
rcr
push
adc
or
sti
inc
out
add
add
adc
xor
mov
mov
mov
add
mov
call
imul
or
xor
dec
xchg
and
ret
mov
test
movs
fmul
sub
add
and
mov
and
and
and
or
or
popfw
or
xor
push
es
and
or
test
mov
fld
mov
mov
retf
pushf
add
add
test
aam
add
mov
or
mov
inc
out
mov
lods
sub
add
add
mov
(bad)
and
and
xlat
add
adc
add
rcl
add
add
neg
mov
js
and
add
add
inc
cwde
jmp
mov
jmp
mov
mov
sub
add
add
add
mov
adc
ficom
cmc
(bad)
jmp
nop
push
mov
push
push
push
and
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
and
hlt
addr16
add
hlt
pop
pop
pop
pop
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
mov
mov
mov
and
add
push
xor
add
add
mov
xchg
xchg
(bad)
call
mov
add
add
scas
enter
call
call
mov
out
stc
sub
add
cwde
ret
rol
xchg
and
mov
add
add
fcom
and
add
add
add
mov
mov
mov
and
add
add
(bad)
mov
jne
xchg
add
arpl
(bad)
xor
add
add
add
mov
jl
mov
test
mov
lock
add
mov
sub
mov
movs
(bad)
push
mov
add
add
add
mov
fs
push
mov
(bad)
push
and
add
xor
test
add
add
add
mov
sub
mov
add
add
add
add
mov
scas
mov
add
sub
mov
je
jmp
fiadd
sub
mov
and
add
xchg
psubsb
add
add
add
mov
cmps
loop
cmps
xchg
add
push
mov
jmp
sbb
sub
mov
and
mov
add
dec
jmp
mov
sub
mov
push
pushf
out
or
add
cmp
and
dec
add
mov
clc
xor
mov
jno
add
add
add
add
xchg
test
scas
add
add
fist
arpl
je
mov
cmc
retf
scas
mov
add
sub
mov
jg
pop
sbb
cmp
mov
mov
mov
pavgw
dec
mov
and
mov
test
mov
mov
(bad)
cli
add
add
push
xchg
add
mov
and
add
add
mov
add
(bad)
aaa
add
add
dec
add
mov
and
add
cld
out
mov
push
(bad)
inc
add
rol
add
and
add
inc
mov
jg
jmp
mov
mov
mov
and
add
add
(bad)
mov
add
add
xor
es
int
mov
jg
jmp
mov
jl
mov
and
add
stos
(bad)
and
dec
add
mov
and
dec
add
sub
mov
int3
add
add
test
add
or
add
sub
mov
jg
jp
add
add
test
add
add
mov
ins
mov
test
add
add
test
cmp
nop
movs
repnz
test
add
add
sbb
arpl
add
add
add
add
test
add
or
add
test
add
mov
sub
mov
jg
jmp
mov
push
add
add
mov
sysexit
in
addr16
jmp
add
sub
nop
mov
add
(bad)
jb
add
mov
add
cmp
sub
mov
je
jmp
xor
and
sbb
pop
jae
(bad)
mov
jg
jmp
mov
fs
call
add
add
loop
add
add
and
add
add
xor
out
mov
add
and
stos
add
jg
add
add
lgs
mov
test
add
(bad)
xor
add
out
fadd
paddsb
add
stos
jmp
mov
and
add
sub
and
mov
test
sbb
mov
sub
test
and
add
cmc
mov
inc
nop
dec
jle
jg
inc
add
or
mov
sub
mov
je
jmp
mov
sub
sar
mov
xchg
inc
sbb
add
add
mov
add
mov
and
add
or
xor
jmp
cmc
test
mov
xor
test
add
sbb
(bad)
and
cmp
add
add
nop
rol
retf
clc
add
add
add
and
xor
sub
mov
and
(bad)
and
add
jmp
mov
and
add
push
sub
mov
je
jmp
sbb
push
jmp
ror
add
movsx
add
or
add
mov
jne
push
and
add
push
mov
ins
test
or
or
pop
add
mov
test
data16
sub
mov
psubd
add
and
add
add
mov
je
jmp
sbb
and
add
cli
and
inc
inc
pusha
je
jmp
mov
sub
mov
xor
add
pusha
arpl
mov
sub
mov
bswap
imul
xchg
xchg
add
adc
mov
mov
push
je
jp
arpl
add
add
adc
test
pop
mov
jmp
mov
(bad)
sbb
mov
je
jp
add
mov
xchg
mov
add
xlat
mov
pop
mov
and
je
fsub
add
mov
sub
mov
setge
push
add
push
mov
sub
test
mov
add
mov
sub
mov
je
jmp
aas
test
add
add
nop
inc
push
mov
pop
xor
add
jmp
mov
add
and
xor
cmp
mov
and
dec
mov
and
cmp
mov
and
add
cmp
or
std
inc
mov
sub
add
mov
jns
add
add
add
pop
repz
mov
mov
add
jge
add
add
cmps
(bad)
mov
stos
repz
or
cmps
ret
xchg
ins
dec
push
xor
addr16
mov
mov
mov
mov
mov
mov
and
mov
inc
xor
inc
add
dec
xor
add
add
sub
xchg
mov
femms
ret
mov
out
dec
test
xor
xor
cmp
in
(bad)
xchg
inc
and
and
and
hlt
or
xor
sbb
and
mov
or
and
cld
test
sbb
and
cmovne
shl
ja
add
dec
sub
sub
xor
sub
pop
test
sub
add
jae
and
add
inc
add
add
test
sub
add
bound
sar
add
mov
and
add
xor
add
inc
dec
ror
test
out
add
call
mov
mov
icebp
mov
mov
mov
sub
imul
bound
or
mov
add
add
sub
dec
enter
sub
add
add
jne
and
add
add
rol
add
dec
shr
ins
mov
mov
jmp
mov
mov
mov
mov
mov
add
add
add
add
test
clc
sub
adc
add
dec
sete
mov
cmps
pushf
icebp
xor
inc
add
cdq
repz
or
add
mov
sbb
and
and
and
and
test
(bad)
xor
fadd
add
add
inc
icebp
mov
jmp
(bad)
int3
push
add
call
fnstcw
fwait
out
pop
lar
add
sbb
cdq
idiv
cmp
paddusb
and
mov
and
dec
mov
add
add
(bad)
aad
sub
add
imul
add
add
add
add
(bad)
push
sbb
push
mov
add
mov
push
fisub
subps
mov
and
add
add
add
xchg
mov
mov
xchg
ret
inc
ror
dec
jmp
(bad)
and
bound
lea
adc
mov
pushf
jns
add
mov
and
(bad)
mov
add
xor
dec
jle
cmp
sete
dec
add
add
pushf
(bad)
mov
and
cmp
(bad)
ret
inc
sti
add
jmp
mov
mov
mov
fstp
mov
add
add
mov
mov
test
add
test
cmps
mov
mov
mov
sbb
mov
test
add
or
xchg
jbe
add
setl
jno
xor
mov
and
sar
cmps
test
mov
inc
test
jnp
int
mov
add
mov
mov
in
jl
jns
add
add
repz
dec
shl
mov
jmp
add
add
mov
scas
repz
add
sete
mov
add
ret
mov
xor
sbb
mov
xor
xor
mov
sub
and
inc
and
and
and
or
call
sbb
mov
cld
mov
and
add
icebp
mov
and
sbb
cmp
add
add
mov
sbb
cmp
and
add
addr16
or
push
add
add
out
mov
mov
add
mov
sbb
mov
mov
fwait
sub
adc
sar
imul
out
add
add
add
xchg
mov
psrad
mov
adc
mov
repnz
and
mov
and
and
xor
fdiv
push
mov
add
sub
add
retf
xlat
or
test
mov
jno
icebp
(bad)
mov
cmps
add
mov
(bad)
jp
sub
add
jnp
pushf
cmp
in
add
add
test
add
add
arpl
lahf
jmp
mov
mov
sbb
mov
jns
add
icebp
xchg
cmp
out
add
add
add
pavgb
loop
test
add
add
xor
push
mov
inc
div
sti
mov
cmovne
jecxz
sub
jle
jmp
mov
mov
pop
neg
(bad)
jg
mov
xor
add
mov
fimul
and
add
arpl
xor
and
mov
mov
sub
cmp
test
xor
scas
inc
mov
add
xchg
mov
icebp
pushf
ret
xchg
idiv
and
(bad)
bound
xor
add
(bad)
mov
inc
add
jbe
or
mov
or
mov
mov
sub
cld
test
mov
movq
in
dec
add
or
pusha
xchg
add
mov
mov
add
mov
mov
sub
sub
mov
mov
jmp
mov
mov
sbb
jns
add
dec
pushf
jns
add
std
and
xor
add
icebp
scas
xlat
and
cwde
cli
add
add
nop
xchg
arpl
pushf
(bad)
and
and
xor
(bad)
ret
inc
rol
and
add
jmp
mov
mov
mov
mov
xor
ja
sub
sub
add
pop
scas
xlat
adc
bound
add
dec
pminsw
cmp
setl
mov
and
xor
or
test
mov
push
sub
add
jmp
lea
pop
pop
pop
pop
ret
sbb
mov
mov
jmp
xchg
test
add
mov
mov
jmp
mov
mov
cmp
add
sub
sub
mov
mov
mov
mov
mov
add
mov
sub
mov
mov
push
mov
add
rcl
shl
dec
mov
movs
test
sub
stos
mov
xchg
dec
add
mov
and
add
add
add
mov
mov
mov
jmp
retf
das
and
add
mov
(bad)
(bad)
dec
pop
inc
add
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
(bad)
loop
mov
inc
and
mov
mov
mov
mov
mov
mov
call
jl
or
(bad)
pop
and
int3
jns
mov
dec
and
cdq
cmp
and
(bad)
imul
mov
push
rol
mov
pop
mov
xor
add
jns
add
add
mov
push
fcomp
sub
(bad)
lods
add
jmp
mov
and
sub
mov
sub
(bad)
jge
add
jmp
mov
sub
mov
jg
jmp
fwait
inc
and
sti
pop
sahf
pop
and
je
jmp
mov
cmps
dec
movs
mov
(bad)
add
add
aaa
ret
mov
sub
and
and
in
test
add
jmp
mov
data16
fcmove
cdq
inc
and
andps
dec
add
add
ret
aad
cmp
cmps
or
add
xor
add
mov
sub
sub
je
les
aaa
add
mov
sub
and
and
in
push
add
add
add
xchg
add
add
mov
mov
cmp
jbe
and
jmp
mov
mov
movzx
dec
pop
mov
clc
mul
out
gs
xor
gs
and
mov
xor
sub
retf
pop
pushf
sbb
nop
and
inc
mov
jmp
mov
mov
mov
jns
add
add
lds
mov
dec
bound
and
cmp
int
ret
adc
pushf
(bad)
mov
or
es
inc
ds
inc
jg
jecxz
add
add
mov
mov
xor
mov
add
add
mov
dec
mov
es
push
retf
inc
pop
rol
add
loope
dec
mov
scas
xlat
sub
pop
cli
add
add
add
ret
cmp
setl
sub
or
fcmovnb
add
inc
test
mov
inc
fcomp
mov
jmp
mov
mov
inc
inc
scas
pop
pop
lea
pop
push
pop
pop
(bad)
add
add
sbb
ror
add
retf
mov
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
(bad)
repnz
adc
jne
mov
mov
in
dec
and
mov
mov
mov
mov
mov
int3
pop
das
add
daa
add
inc
inc
ins
stos
dec
push
sbb
sbb
dec
jmp
in
inc
and
mov
mov
push
jmp
mov
mov
fiadd
xchg
inc
and
inc
(bad)
int
add
jmp
mov
sub
mov
jg
jmp
mov
and
sub
mov
bndldx
add
jmp
mov
sub
mov
and
jg
jno
pop
add
inc
jns
fadd
add
inc
ss
and
dec
(bad)
inc
add
jl
add
pop
mov
sub
mov
and
pop
push
jg
add
loop
cwde
pop
add
scas
inc
fistp
sub
add
add
add
xlat
push
ret
and
jg
mov
sbb
push
xchg
aam
and
cli
(bad)
dec
add
daa
mov
add
sti
and
sub
sbb
out
bound
inc
addr16
mov
add
sub
xor
jae
je
jmp
(bad)
sti
arpl
mov
fisub
add
lock
fld
mov
das
push
jns
int3
pop
pop
add
jmp
jle
add
leave
xor
pushf
mov
je
jmp
movs
inc
and
sub
mov
and
je
jmp
mov
sub
mov
je
loop
cwde
add
mov
push
or
test
add
jmp
mov
sub
mov
mov
xchg
add
jmp
aad
and
dec
test
push
mov
pavgw
add
pop
sbb
out
push
imul
or
add
xor
add
mov
sub
mov
je
jmp
movs
or
xchg
cmovno
mov
je
jl
add
retf
pop
fs
pop
fwait
std
xchg
mov
mov
sub
add
add
minsd
mov
jmp
mov
mov
mov
mov
push
add
add
add
scas
repz
add
sete
cmp
push
xchg
repz
das
popa
or
fstp
mov
ins
jmp
mov
mov
mov
mov
(bad)
cmp
ds
add
scas
repz
out
add
add
cdq
add
mov
xadd
sbb
pushf
(bad)
mov
repz
or
test
prefetch
or
ins
mov
cs
loopne
inc
inc
leave
xor
and
inc
fiadd
addr16
mov
and
ja
(bad)
dec
inc
das
je
add
dec
mov
sbb
add
add
mov
(bad)
push
and
cmp
and
cmovb
jmp
mov
mov
in
xchg
and
add
add
mov
sti
fcom
xor
cmp
mov
push
and
xor
and
and
or
or
push
ret
xlat
mov
mov
js
mov
js
and
dec
add
jmp
mov
add
add
hlt
hlt
imul
mov
mov
mov
mov
jmp
jns
jns
add
adc
sbb
out
repnz
adc
sbb
icebp
xlat
in
add
mov
cli
add
mov
and
pushf
(bad)
mov
and
xor
or
mul
mov
jmp
mov
dec
mov
add
mov
mov
mov
jns
add
add
add
popf
xchg
mov
add
shld
dec
pop
add
adc
sete
cmp
setl
mov
xor
add
and
and
mov
and
mov
mov
sbb
test
sub
out
mov
mov
icebp
into
je
ins
sbb
cmp
pop
pop
aas
pop
movs
mov
jmp
mov
jmp
data16
push
mov
push
push
push
and
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
imul
std
inc
add
xchg
jmp
sub
mov
popa
jmp
mov
mov
(bad)
ror
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
movzx
movzx
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
movzx
movzx
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
movzx
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
add
sub
sub
shl
add
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
cmp
setae
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
movzx
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
sub
sub
add
mov
mov
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
cdq
idiv
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
cdq
mov
idiv
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
dec
adc
out
add
mov
je
cmp
add
jmp
add
cmp
mov
mov
mov
mov
jmp
inc
mov
sub
or
and
vmwrite
(bad)
je
retf
add
add
mov
push
and
movd
add
jb
sbb
xchg
push
inc
and
loopne
pop
add
add
add
add
popf
add
mov
mov
inc
and
int
ror
mov
add
jmp
adc
mov
push
stos
and
or
add
mov
test
or
or
add
mov
cmp
inc
sbb
add
mov
mov
and
mov
push
and
mov
mov
call
mov
lea
sti
data16
inc
and
cdq
mov
and
std
dec
and
call
add
or
dec
add
jbe
and
add
(bad)
dec
mov
and
aas
add
mov
mov
mov
mov
xor
call
mov
bound
push
push
add
add
loopne
xchg
and
add
dec
sub
sbb
mov
dec
pushf
and
add
add
jecxz
add
mov
mov
mov
push
mov
ins
(bad)
dec
add
add
mov
mov
add
fadd
mov
jmp
lea
pop
adc
ret
jmp
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
dec
or
push
sbb
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
or
inc
scas
add
add
inc
sbb
add
push
mov
push
in
sbb
test
stc
add
mov
add
add
mov
pop
int
les
add
ins
sar
retf
pushf
cld
es
add
sub
add
out
add
add
mov
and
cmp
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
jg
arpl
nop
add
add
aad
add
sti
cmp
mov
sub
mov
jg
jmp
jmp
and
add
in
scas
call
and
add
or
add
adc
(bad)
and
add
sub
mov
test
add
push
jbe
add
add
or
ret
xchg
mov
sub
mov
xlat
test
ins
out
mov
add
dec
jecxz
inc
and
or
mov
mov
jl
in
mov
inc
and
idiv
jmp
mov
dec
fbstp
mov
je
(bad)
and
add
jmp
mov
sub
mov
je
pushf
add
add
mov
and
add
mov
inc
and
(bad)
and
jo
jmp
mov
adc
xor
out
inc
and
popf
test
add
retf
add
add
add
pop
mov
jg
xor
add
mov
sub
sub
stos
sub
add
add
pusha
and
add
sub
aad
and
mov
jecxz
add
jmp
mov
and
add
test
pop
mov
outs
test
pop
mov
and
add
movs
sub
fild
(bad)
and
jo
jmp
mov
sub
dec
(bad)
and
je
jmp
mov
sub
push
and
test
(bad)
sahf
add
mov
add
and
mov
mov
enter
dec
je
mov
mov
out
add
add
mov
and
add
add
and
add
add
mov
sahf
inc
je
jmp
mov
(bad)
xchg
scas
dec
dec
mov
pop
(bad)
and
imul
add
add
sub
mov
je
loop
xchg
add
mov
and
test
or
xor
(bad)
and
mov
and
mov
scas
dec
call
je
jmp
mov
and
add
add
fadd
je
rol
add
add
add
mov
call
int
arpl
add
mov
test
sub
mov
sysret
add
add
push
jmp
mov
mov
jmp
rol
mov
(bad)
cmp
add
(bad)
ja
ss
add
push
add
(bad)
in
movs
add
add
arpl
pushf
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
cdq
add
push
add
mov
aam
int3
jl
add
add
das
nop
mov
add
xchg
add
xchg
scas
xlat
and
adc
xchg
ret
and
setl
ins
fisub
inc
xor
or
dec
ret
inc
arpl
add
movs
add
add
mov
mov
cmp
setne
test
and
add
or
add
add
cmp
repz
bswap
repz
es
add
add
xchg
ret
or
inc
mov
repz
repz
mov
jmp
mov
sub
movs
ret
mov
iret
add
add
ret
inc
std
mov
jmp
mov
add
pusha
outs
mov
mov
sahf
mov
add
mov
lea
mov
mov
jb
push
mov
scas
inc
pusha
add
add
lock
stos
in
dec
inc
xchg
sub
push
mov
cmp
inc
inc
retf
and
add
fsubr
inc
shl
stos
mov
bound
fistp
sub
mov
mov
and
push
sub
sub
imul
jo
cmp
push
xchg
ret
js
or
add
setl
mov
sub
xor
or
test
cmovne
mov
add
cwde
add
add
popa
xchg
mov
int3
jl
add
add
shl
out
add
mov
shl
scas
test
add
push
push
sub
sete
add
int3
pushf
(bad)
mov
and
mov
ret
inc
shl
and
add
dec
jmp
(bad)
cmp
add
ds
mov
lods
add
mov
in
mov
aam
and
cmp
add
add
sub
sub
jbe
mov
mov
add
add
test
movs
pusha
add
retf
lds
add
mov
arpl
xor
sti
pushf
jmp
shl
push
xor
mov
jecxz
mov
stc
cmp
add
or
xlat
mov
add
push
add
popa
mov
add
loope
add
daa
rol
and
add
add
xor
pushf
sub
add
mov
(bad)
shl
pop
mov
and
add
add
adc
jmp
mov
sub
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
out
and
add
fmul
add
mov
sub
and
mov
mov
in
cmp
or
add
pop
add
add
and
add
add
add
xor
fstp
add
les
add
(bad)
bound
add
add
out
and
mov
mov
or
and
jno
loopne
mov
add
add
(bad)
add
add
add
test
add
add
add
push
scas
test
xor
add
mov
xchg
test
add
add
jmp
mul
add
add
add
cmp
add
jg
jmp
mov
movs
sub
out
and
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
mov
mov
pop
xor
add
add
ins
test
add
add
mov
jg
call
out
dec
add
mov
mov
sub
jmp
mov
and
fiadd
mov
inc
mov
adc
or
lds
jno
add
cmp
into
add
dec
and
add
cmc
xchg
out
add
add
lods
test
add
add
sub
add
xlat
xor
stos
movs
add
mov
and
add
mov
inc
mov
jg
or
add
nop
mov
adc
or
adc
daa
add
(bad)
jmp
add
dec
add
add
mov
xchg
mov
bound
mov
jg
jmp
mov
sub
mov
jg
call
and
in
add
sub
mov
out
or
add
cli
(bad)
aaa
or
mov
add
add
mov
sub
mov
fadd
jmp
xchg
test
add
add
mov
and
add
add
jp
add
push
add
add
mov
mov
mov
out
or
add
daa
add
add
dec
add
add
mov
mov
inc
or
add
add
(bad)
out
test
xchg
add
sub
mov
jg
call
and
ds
fsub
test
mov
add
xor
add
or
add
fdivr
test
add
adc
inc
movs
add
add
push
add
cli
test
add
loopne
test
out
add
or
retf
and
add
adc
mov
jg
jmp
xor
loopne
add
add
mov
add
inc
adc
mov
add
fs
add
cmp
jo
or
test
add
add
add
add
add
mov
sub
ss
fadd
out
je
inc
mov
add
test
mov
mov
cmovne
add
add
add
add
mov
sub
or
movs
dec
add
out
add
xor
les
ins
fwait
out
dec
add
add
mov
jg
jmp
clc
test
dec
add
push
mov
and
add
mov
test
movs
add
mov
mov
aaa
ret
test
les
retf
(bad)
and
add
dec
xchg
add
sub
mov
or
jmp
mov
add
sub
dec
test
add
add
(bad)
and
add
jmp
mov
sub
mov
push
mov
adc
cs
jmp
mov
sub
mov
dec
bsf
add
outs
xor
mov
and
add
pop
sub
mov
retf
or
add
mov
sub
scas
test
jg
jmp
mov
add
sub
test
add
add
inc
call
push
or
retf
and
add
add
mov
jl
and
nop
add
out
add
cmp
jno
dec
and
loop
lods
mov
add
jmp
mov
sub
dec
test
lahf
pusha
pop
add
retf
add
add
add
add
movs
arpl
and
add
add
test
fadd
push
(bad)
int3
add
mov
add
xor
push
xchg
add
add
add
cmp
add
mov
fdivr
pop
adc
add
sub
jmp
lds
sub
mov
lds
jmp
mov
and
add
ret
or
test
loope
add
cmp
add
add
add
or
test
add
add
pop
add
add
mov
sub
mov
punpckhwd
add
pop
add
mov
jnp
xchg
dec
cmp
add
loopne
(bad)
rol
add
add
add
and
add
add
mov
add
(bad)
fld
xor
add
mov
mov
retf
cld
(bad)
mov
je
stos
movs
jg
call
and
add
sub
jl
lods
jo
pop
add
sub
add
xor
mov
and
add
add
mov
add
(bad)
movs
jmp
mov
sub
mov
sysret
cmps
add
add
add
movs
add
test
add
add
jle
jmp
pop
fwait
fs
out
inc
imul
add
xchg
add
adc
shr
loopne
test
add
pop
sub
das
dec
xor
xchg
add
stos
add
retf
adc
and
add
movs
jg
sub
add
dec
jno
add
mov
jg
jmp
mov
and
add
inc
pop
and
ret
pop
retf
jnp
movs
add
add
push
add
add
call
mov
and
add
jae
(bad)
aas
loop
add
nop
add
out
mov
and
add
add
mov
add
add
add
add
add
add
add
mov
cvtpi2ps
add
add
test
cmp
rol
pop
push
das
add
add
add
add
mov
and
add
outs
cmc
mov
test
push
retf
and
movs
add
add
and
add
nop
sub
mov
div
add
jg
out
add
daa
add
dec
add
das
in
mov
test
fld
add
(bad)
add
les
add
mov
xor
div
add
add
(bad)
int
add
jmp
mov
sub
imul
add
jmp
mov
add
retf
loop
lods
dec
test
push
add
je
jmp
mov
pop
loopne
out
lods
sbb
loop
cmc
add
test
or
daa
add
das
test
xor
xchg
outs
jbe
mov
fwait
and
retf
stos
add
add
mov
mov
lods
xchg
out
add
imul
daa
add
movs
je
fidivr
cmp
dec
in
add
mov
mov
or
add
mov
sub
inc
test
nop
add
add
test
movs
add
push
add
and
add
add
mov
je
sub
and
sub
mov
retf
adc
jae
(bad)
add
sbb
sub
add
je
into
mov
test
add
push
sbb
idiv
add
fmul
test
mov
add
sahf
rol
mov
sub
mov
add
jmp
mov
and
add
add
inc
mov
and
add
(bad)
xor
add
jmp
mov
sub
push
test
add
add
cmp
add
jmp
mov
out
movs
add
mov
clc
mov
mov
es
add
add
sub
mov
je
jmp
mov
add
add
mov
je
jmp
mov
out
add
sub
fild
lahf
add
add
test
int3
add
out
mov
and
add
cmc
movs
mov
test
add
add
outs
jmp
dec
test
in
add
fild
in
add
je
or
test
ds
sub
mov
je
jmp
push
cmp
dec
in
add
xchg
test
add
retf
mov
add
jmp
mov
jnp
int
clc
mov
mov
cmp
nop
jmp
test
add
add
mov
je
jmp
mov
add
push
cmp
add
add
test
add
idiv
add
add
stos
add
mov
(bad)
movs
add
add
mov
ret
ret
or
test
add
cmc
je
out
cdq
add
dec
add
sub
mov
mov
pop
adc
add
xchg
test
add
rcl
mov
and
add
lds
add
add
add
test
add
out
call
shl
add
bt
xor
mov
add
mov
adc
add
push
je
push
xor
test
add
add
mov
mov
add
je
popa
sub
and
add
add
mov
movzx
add
rol
add
mov
sub
inc
test
add
add
and
add
add
in
push
lds
mov
sub
mov
test
cmc
add
pop
jmp
mov
arpl
xchg
repnz
ret
pop
add
test
mov
movs
push
mov
icebp
jno
add
sbb
sub
mov
xor
xchg
add
add
mov
sub
sub
add
movzx
je
add
push
cmp
mov
retf
pop
sub
inc
test
je
call
retf
jo
add
sub
mov
sub
cmp
add
add
sub
mov
je
dec
sbb
push
lds
add
mov
add
add
test
adc
add
das
test
add
sub
mov
loopne
add
out
test
add
neg
add
add
add
sub
mov
je
jmp
mov
pop
out
xchg
cmc
add
xchg
mov
mov
add
mov
and
je
sub
xchg
dec
and
test
xchg
or
psrld
add
jmp
mov
mov
inc
inc
shl
arpl
daa
add
cmc
dec
xor
mov
sub
dec
inc
and
je
inc
add
add
test
add
push
call
sbb
je
jmp
add
arpl
in
jle
inc
dec
mov
inc
mov
add
add
jmp
mov
mov
mov
xlat
cli
add
add
mov
ror
add
adc
add
mov
mov
mov
xor
cld
push
mov
sldt
mov
mov
mov
cmp
cmove
mov
push
loopne
add
lods
ss
add
mov
cmp
cmovl
mov
cld
push
add
add
mov
sbb
cs
mov
dec
cli
add
stos
movs
pop
add
add
add
xchg
out
add
sbb
inc
add
add
add
add
daa
das
mov
ins
dec
xor
xor
mov
mov
mov
call
mov
mov
jo
add
sub
and
push
add
lds
enter
push
inc
retf
add
add
add
out
mov
adc
pusha
push
icebp
popf
mov
mov
cmp
cmovne
mov
jmp
ins
test
add
add
call
retf
mov
nop
add
add
mov
jo
add
mov
jle
cld
addr16
add
add
loopne
inc
fstp
test
ins
add
pop
adc
loopne
jmp
jb
add
add
pop
jae
cdq
or
add
or
test
pusha
enter
sbb
pusha
add
jmp
and
xor
add
in
mov
or
jmp
movs
je
xchg
out
pop
add
pusha
(bad)
mov
(bad)
mov
jmp
sub
mov
(bad)
int3
and
movs
add
ja
pop
xor
mov
inc
das
cmps
jo
mov
and
add
cmp
cmovne
mov
call
je
lds
inc
loopne
jge
add
xor
mov
sub
iret
fsubr
fadd
add
adc
and
push
add
add
mov
dec
loopne
add
or
mov
and
xor
or
cmp
hlt
xchg
mov
xchg
mov
cmp
mov
mov
and
mov
and
add
push
add
ror
scas
dec
repnz
add
cmp
add
sete
cmp
xchg
xor
or
inc
repnz
and
add
add
out
add
(bad)
bound
sbb
hlt
adc
add
mov
mov
mov
add
jae
pushf
lea
or
add
mov
add
cmc
mov
sub
rol
push
in
lea
jg
add
mov
add
jb
add
add
add
lds
or
and
add
add
or
lods
or
add
add
xchg
add
mov
lods
or
movs
add
add
mov
ss
ret
cmp
sahf
and
and
and
mov
fwait
add
(bad)
dec
loopne
mov
mov
test
and
daa
mov
mov
mov
push
cld
or
inc
cmp
call
mov
mov
cmp
cmovl
mov
mov
mov
jmp
jb
imul
xor
adc
mov
mov
sub
mov
add
outs
add
dec
retf
dec
enter
add
mov
ret
adc
or
add
setl
mov
and
(bad)
(bad)
in
cmovne
test
add
add
aam
xor
mov
mov
mov
dec
xor
mov
mov
add
sub
sub
imul
sub
cmp
add
add
sub
cmp
out
pushf
ret
mov
idiv
mov
xor
cmp
mov
and
and
add
push
or
or
or
pop
les
and
or
test
add
xlat
mov
mov
retf
mov
and
jno
add
in
add
test
call
dec
xor
and
fiadd
add
add
mov
jo
add
mov
cmps
add
stos
mov
ror
cdq
or
pop
es
(bad)
mov
mov
adc
or
xchg
push
(bad)
adc
mov
mov
mov
mov
inc
mov
mov
inc
sbb
add
add
add
add
(bad)
and
add
add
scas
add
mov
retf
int
mov
sar
mov
mov
and
mov
add
movs
imul
add
cmp
pusha
dec
jl
dec
les
add
jp
xchg
(bad)
cli
xor
(bad)
ret
inc
ror
add
dec
or
add
mov
mov
imul
cmp
sub
mov
add
imul
and
xor
xchg
lds
movs
psrld
out
lahf
repz
or
inc
or
push
add
sub
add
jno
loopne
call
ret
cmc
add
add
mov
mov
mov
mov
mov
dec
mov
int3
call
mov
and
jb
sub
mov
add
test
add
inc
enter
sbb
jae
movs
dec
mov
add
xor
and
add
add
and
mov
inc
out
or
inc
and
dec
adc
movs
sti
adc
mov
add
jae
out
dec
pop
data16
ds
jmp
xor
loopne
out
lods
mov
lds
mov
xlat
out
mov
les
outs
imul
sub
cmp
sete
and
or
add
setl
mov
and
data16
int
div
mov
jmp
mov
jae
test
sub
add
mov
scas
push
or
add
addr16
pop
fmulp
dec
movs
scas
repz
cmp
pop
xchg
mov
add
lahf
pushf
sub
idiv
ror
mov
in
and
mov
add
ins
or
or
xor
mov
out
fadd
add
jl
cld
test
mov
cmovne
mov
push
and
add
add
cmc
stc
call
or
add
mov
mul
add
sar
mov
sub
inc
rep
ror
scas
push
and
cmp
sete
nop
add
pushf
(bad)
addr16
and
xor
or
div
add
and
cmps
add
jmp
mov
mov
mov
mov
dec
xlat
addr16
and
dec
mov
add
out
(bad)
call
add
cli
add
add
punpcklwd
or
or
add
setnp
mov
and
xor
or
push
ret
inc
repnz
jmp
mov
idiv
retf
test
jae
dec
xor
mov
add
(bad)
adc
ins
enter
int
jo
pop
pop
add
mov
mov
cld
add
push
cmp
mov
adc
inc
cmp
xor
lock
inc
push
add
add
mov
sti
or
add
lahf
pushf
shl
hlt
add
xor
mov
dec
adc
and
mov
add
mov
mov
adc
addr16
mov
int3
(bad)
(bad)
not
fadd
push
and
mov
div
cmovne
sbb
call
daa
movs
mov
mov
cmp
setne
dec
dec
add
add
push
add
add
dec
push
add
add
jo
scas
repz
add
sete
je
add
add
pushf
ror
or
push
ret
dec
pcmpeqd
out
cld
push
mov
push
retf
cmps
cmc
scas
test
mov
test
cmovne
mov
jmp
imul
add
pop
fwait
mov
add
test
call
jno
pop
add
add
mov
push
adc
mov
mov
mov
add
retf
inc
inc
sahf
ret
jne
scas
xlat
and
cmp
movaps
add
setl
xor
or
div
add
inc
rol
add
dec
add
mov
sub
stos
add
mov
mov
jge
add
add
add
xchg
cmp
daa
cmp
inc
xchg
ret
cmp
outs
add
inc
(bad)
aaa
pop
and
(bad)
in
ret
ret
add
inc
xchg
mov
jmp
mov
jmp
mov
sub
jl
mov
add
add
cmc
mov
inc
shr
xor
pusha
fnstsw
ja
retf
add
call
xchg
test
add
add
mov
or
add
nop
push
jmp
lds
mov
sar
mov
mov
push
add
sub
xor
imul
add
adc
xchg
jnp
dec
add
setl
test
xor
xor
sub
and
and
mov
add
ror
hlt
or
xor
inc
and
or
xor
or
aas
sbb
add
or
mov
add
add
mov
mov
cmp
setb
add
mov
pop
add
mov
mov
mov
add
out
jmp
add
add
sbb
imul
add
add
xchg
arpl
lds
pushf
ret
xor
cli
inc
les
or
inc
or
in
daa
icebp
mov
and
and
and
or
or
xor
mov
cmp
xor
out
adc
and
mov
test
ins
je
cli
cmovne
mov
jmp
sbb
mov
mov
pop
add
shr
shr
add
xchg
add
retf
xor
or
add
add
add
inc
and
dec
jmp
add
stos
and
cmp
scas
dec
and
cmp
sete
cmp
cli
pushf
dec
(bad)
mul
and
mov
pop
add
repnz
and
mov
and
lahf
ror
hlt
or
xor
mov
xor
or
jmp
dec
je
sub
inc
icebp
mov
les
nop
add
add
add
cld
addr16
add
scas
or
mov
sahf
mov
add
fadd
add
(bad)
mov
add
les
mov
mov
mov
sahf
out
movntps
sub
sub
sub
mov
pop
add
add
or
or
mov
add
mov
cli
xor
or
test
inc
jbe
push
cmp
in
add
add
add
test
add
jno
jo
mov
mov
lods
fild
add
loopne
out
cmovne
inc
test
test
pop
add
mov
and
push
push
add
add
add
ret
add
std
fnstcw
add
mov
sbb
mov
mov
mov
mov
popa
jle
out
cmp
inc
mov
daa
mov
add
ud2
clc
and
cmp
sete
cmp
setl
mov
hlt
add
sub
mov
or
loope
xor
inc
and
and
or
mov
or
xor
xor
add
aam
out
(bad)
retf
mov
bswap
test
add
sub
add
mov
mov
mov
mov
mov
mov
mov
sbb
sub
or
scas
repz
cmp
xor
cmp
setl
mov
xor
mov
pop
sbb
fdiv
aas
repnz
in
mov
mov
adc
fdiv
les
aaa
and
or
adc
or
and
out
cmp
mov
bound
mov
arpl
add
icebp
mov
and
add
pop
or
adc
sub
add
add
push
lea
jecxz
pop
cs
daa
test
add
add
inc
add
mov
jmp
loopne
and
add
add
mov
test
push
add
lods
jmp
or
push
add
sbb
add
xor
mov
jmp
xor
add
movs
dec
hlt
test
add
mov
jmp
(bad)
bound
add
add
xchg
mov
add
mov
mov
call
mov
mov
mov
jmp
mov
or
mov
aam
jnp
jmp
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
or
dec
or
push
jge
jne
mov
adc
cmc
add
xchg
test
xor
add
hlt
test
add
add
movs
shr
add
cdq
das
test
inc
in
add
and
mov
mov
push
jmp
mov
mov
jne
add
jg
mov
push
test
and
fld
sub
mov
je
jmp
mov
and
add
sub
mov
and
add
add
(bad)
and
add
add
add
in
sti
xchg
mov
cwde
(bad)
push
les
jl
push
add
add
int3
fdivr
call
je
add
aaa
jg
dec
add
add
mov
or
jae
test
add
in
je
jmp
mov
call
mov
mov
jg
jmp
mov
pop
add
cld
repnz
je
jmp
mov
in
cmp
mov
bswap
pop
add
add
add
add
mov
sub
inc
in
mov
add
add
add
fadd
add
inc
test
add
add
mov
jg
jmp
mov
sub
mov
lock
pop
add
jo
add
add
test
push
xchg
push
add
mov
jg
and
loop
mov
add
add
mov
cmc
add
ror
jmp
or
push
and
push
aaa
sub
mov
rol
stos
mov
cdq
add
add
add
mov
mov
inc
test
imul
add
add
mov
sub
mov
cvtpi2ps
adc
add
mov
and
add
lea
test
fadd
sbb
movhps
jmp
in
xlat
xchg
push
add
mov
sub
mov
mov
xor
add
add
and
add
add
mov
dec
xor
add
jge
scas
add
jmp
mov
add
sub
mov
jg
jmp
arpl
and
in
add
sub
mov
ret
(bad)
cmp
add
add
and
int
add
mov
jg
jmp
sub
mov
mov
aas
pop
add
add
pop
inc
add
jmp
mov
mov
push
jnp
sub
sbb
mov
jg
jmp
push
test
scas
xchg
dec
inc
xlat
clc
mov
add
jg
int3
add
add
nop
test
add
add
test
add
xchg
paddusw
add
add
mov
and
add
add
fiadd
and
add
int3
cli
(bad)
scas
outs
jb
push
add
add
sub
mov
mov
add
sete
add
add
mov
outs
aad
imul
frstor
jnp
add
int3
imul
sub
mov
je
inc
ins
add
and
add
sub
mov
add
test
add
in
add
add
mov
je
add
mov
sub
mov
data16
popf
add
xchg
sahf
add
mov
sub
mov
cli
pop
retf
jb
cmc
add
aaa
mov
add
mov
(bad)
repz
add
jle
add
add
jmp
add
add
loopne
and
xchg
push
add
fsubr
mov
pop
and
add
scas
stos
and
loopne
mov
xor
and
or
add
mov
test
cwde
add
lds
test
add
add
test
xchg
push
jnp
dec
dec
and
ror
add
test
(bad)
jb
jmp
mov
movs
sub
mov
je
repnz
inc
in
mov
sub
repnz
and
data16
sub
add
mov
sub
mov
and
xchg
pop
fdiv
add
xor
add
scas
or
and
add
push
sub
mov
and
je
jmp
mov
sub
retf
ins
je
jmp
inc
test
xchg
add
jp
mov
and
xchg
test
mov
test
ret
push
mov
mov
add
add
add
and
add
sub
mov
pusha
je
stos
imul
add
and
add
add
loopne
and
je
jmp
mov
sub
daa
inc
mov
add
xor
icebp
movs
shl
add
shr
sbb
mov
pop
test
ss
push
xchg
fadd
loope
movs
popf
jae
cdq
mov
add
add
jmp
sub
and
and
add
mov
and
jecxz
or
add
jmp
jmp
mov
mov
mov
push
jecxz
cmp
xchg
cmp
setne
mov
sub
and
xor
and
or
neg
add
and
add
add
mov
ja
cmp
jae
mov
nop
cmp
adc
ret
repnz
sub
add
pop
scas
mov
add
add
inc
and
pushf
ss
sub
push
ss
mov
repnz
and
mov
and
and
sub
les
fadd
add
xlat
or
mov
aas
mov
and
cmovne
bnd
and
add
add
and
jle
and
add
scas
movzx
push
add
mov
add
movs
inc
ret
in
adc
mov
arpl
retf
(bad)
stos
fwait
add
sub
sub
paddw
push
cmp
xchg
ret
dec
or
(bad)
mov
cmp
sti
or
test
pavgb
mov
and
add
jmp
mov
jmp
mov
mov
mov
fcom
push
into
xor
mov
sub
scas
xchg
jmp
push
shl
jb
into
mov
scas
mov
add
add
das
inc
addr16
mov
call
mov
rol
in
daa
cs
and
add
pushf
mov
mov
das
cmp
add
xchg
inc
mov
add
add
or
add
mov
dec
cli
(bad)
and
sbb
xchg
mov
mov
mov
mov
sar
call
xchg
(bad)
ins
sbb
and
pop
dec
cmc
add
rcl
add
test
xchg
add
add
add
cmp
and
xor
mov
lahf
mov
cld
test
mov
cmovne
xchg
cmc
push
test
add
add
sub
add
add
add
sub
and
mov
call
mov
mov
add
ret
(bad)
call
xchg
and
add
mov
mov
mov
mov
add
add
mov
xor
add
mov
(bad)
call
mov
mov
mov
sub
add
call
inc
add
in
xor
ficomp
mov
mov
inc
mov
pushf
add
dec
sbb
jb
and
cmp
jge
ret
mov
or
add
cmp
(bad)
mov
and
xor
or
test
cmovne
mov
in
add
add
jns
add
mov
mov
mov
imul
add
jnp
fild
jmp
(bad)
in
mov
push
xchg
cmp
imul
add
mov
xor
add
mov
add
add
sub
add
add
sub
mov
mov
mov
mov
mov
push
dec
and
mov
mov
mov
call
adc
(bad)
(bad)
jmp
add
add
int3
add
add
mov
and
aaa
add
add
add
add
mov
int3
sub
scas
call
inc
loopne
mov
mov
mov
mov
sub
mov
add
scas
movs
and
cmp
cmovl
cmp
(bad)
xor
jne
rol
mov
jmp
mov
push
mov
add
mov
cmp
paddb
and
sbb
xchg
add
add
add
clc
add
imul
add
add
sete
or
setl
mov
adc
xor
xor
mov
add
cmp
adc
inc
mov
mov
mov
or
mov
jae
cld
mul
and
aam
out
mov
xlat
mov
mov
stc
add
add
or
ins
add
push
add
shl
sub
add
jmp
mov
jbe
add
add
cmp
shl
cmp
fld
xchg
neg
add
mov
adc
jb
add
add
inc
ror
add
cmp
scas
cld
mov
mov
sub
mov
push
add
push
cmps
jp
out
push
out
pop
sub
rdpmc
xlat
and
je
add
(bad)
scas
cmp
cmp
mov
and
xor
or
rol
add
inc
rcl
inc
add
mov
and
add
add
enter
lahf
or
mov
mov
mov
or
mov
push
add
add
pop
xchg
mov
add
pop
arpl
cmp
add
add
add
xchg
mov
adc
ret
pusha
test
or
pop
repnz
and
loope
mov
and
ja
xchg
hlt
or
xor
mov
or
xor
or
and
or
test
mov
cli
inc
icebp
mov
jmp
imul
add
and
aaa
add
test
inc
add
add
lahf
mov
xor
push
add
mov
mov
fist
mov
mov
sub
inc
inc
and
mov
and
add
repz
add
aaa
add
xchg
(bad)
mov
scas
add
add
pushf
in
ins
xor
mov
xor
push
ins
out
and
mov
mov
and
mov
and
mov
and
or
mov
or
dec
test
jmp
pop
out
pop
add
inc
cmp
add
add
js
cmc
add
mov
mov
mov
and
push
add
mov
add
add
add
call
add
scas
xlat
xor
xchg
add
xchg
ret
(bad)
dec
xchg
add
and
in
sti
or
imul
aaa
rcr
and
add
aaa
jmp
mov
and
and
add
mov
std
sbb
jbe
jp
add
fild
push
mov
popf
add
push
int
jno
sub
add
scas
mov
add
test
add
movs
dec
adc
rol
nop
sbb
in
mov
mov
mov
mov
mov
mov
and
je
sbb
(bad)
mov
mov
add
mov
and
add
add
push
add
xchg
rol
lods
push
mov
adc
retf
(bad)
jp
xchg
push
add
add
or
push
popf
or
mov
pop
test
add
add
mov
xchg
jmp
xor
and
xchg
pop
push
push
scas
jmp
stc
aam
sbb
add
mov
call
mov
int3
adc
add
pop
test
add
call
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fidivr
mov
xchg
test
add
add
add
mov
(bad)
adc
add
add
add
add
test
add
add
xchg
and
add
add
mov
mov
mov
add
mov
ins
or
add
mov
jg
rol
add
add
add
sub
mov
cmove
add
mov
dec
jno
test
cmp
add
mov
lock
bound
add
xchg
mov
add
aad
and
and
inc
sub
mov
inc
(bad)
pop
rol
add
mov
and
add
add
push
clc
fdiv
test
add
pop
jg
jmp
mov
sub
mov
or
mov
push
add
add
mov
sub
mov
pop
mov
add
add
add
add
xchg
test
add
aam
ins
pop
mov
or
cwde
(bad)
jnp
str
add
add
test
add
add
mov
xor
add
add
inc
add
jmp
mov
or
add
add
add
fidiv
add
cmp
add
add
mov
test
add
(bad)
add
mov
test
add
shr
inc
and
pshufw
add
jmp
and
add
add
inc
bound
aad
cmp
add
push
add
sbb
add
sub
xchg
imul
add
cwde
mov
xchg
in
or
add
inc
mov
jne
push
add
add
std
cmp
add
mov
and
jg
jmp
mov
and
add
add
mov
je
jmp
mov
add
mov
fisttp
jmp
and
mov
add
test
mov
jmp
mov
add
sub
mov
and
jle
and
add
jmp
mov
and
add
shr
inc
fistp
test
add
xchg
retf
add
add
fiadd
add
inc
jl
rol
test
add
add
add
test
add
add
mov
je
rol
mov
and
add
add
mov
inc
(bad)
push
add
add
mov
add
jge
movs
sar
dec
mov
add
dec
add
mov
aaa
and
and
push
test
add
xchg
add
add
sub
mov
inc
bswap
push
jne
add
add
add
xor
shr
mov
and
je
jmp
mov
cs
adc
inc
and
jp
je
jmp
(bad)
xor
lods
add
add
rol
es
loopne
add
add
add
out
in
xor
sbb
add
jmp
mov
push
gs
or
inc
add
add
sub
and
and
sub
mov
fs
add
pop
add
xchg
test
sub
clc
inc
sahf
and
test
add
jmp
pop
test
lods
jge
add
mov
ja
jmp
jmp
jmp
mov
mov
mov
pop
add
test
or
mov
cmp
cmovne
mov
jmp
dec
test
or
lea
mov
and
add
mov
sbb
add
add
test
add
add
and
inc
xchg
mov
add
add
add
mov
jl
mov
dec
je
fwait
call
mov
mov
clc
test
cmp
add
pop
add
add
add
inc
sbb
add
jmp
les
gs
and
add
aad
call
rcl
or
sbb
and
add
add
add
xor
mov
mov
sahf
mov
add
mov
mov
mov
and
call
call
loopne
jno
cmp
add
lldt
mov
mov
add
jmp
push
test
nop
add
gs
cmp
add
mov
mov
add
add
cmovne
add
lods
jmp
mov
mov
mov
test
push
add
add
cmp
push
sub
add
imul
and
cmp
inc
xchg
ret
or
or
cli
xor
dec
inc
ret
and
add
lods
mov
add
inc
mov
mov
ds
mov
mov
mov
xchg
add
add
pop
test
add
dec
mov
push
add
add
out
add
add
mov
mov
cmp
(bad)
cmp
add
jge
cmp
sete
cmp
jne
ror
outs
xor
(bad)
inc
mov
shl
cmp
(bad)
mov
and
mov
xor
ror
imul
(bad)
xor
or
xor
cmp
add
aam
lock
add
inc
cli
mov
jmp
(bad)
sub
add
pop
imul
add
mov
mov
fwait
lock
pushf
sub
add
add
add
rol
mov
jmp
mov
and
add
or
xchg
or
mov
mov
add
and
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
jge
add
mov
mov
jp
jmp
mov
mov
call
push
and
pop
and
rol
stos
scas
add
add
mov
cmp
cmovne
mov
jmp
mov
mov
and
in
or
(bad)
push
and
add
add
mov
jmp
and
lods
pop
add
sbb
and
add
add
xchg
or
fld
add
add
test
mov
add
mov
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
pusha
cmps
and
push
add
or
mov
(bad)
pop
and
or
add
int
dec
add
mov
test
or
add
test
loope
add
add
(bad)
cmp
add
add
pop
push
mov
mov
mov
mov
call
mov
mov
lea
push
xor
mov
lea
or
add
mov
mov
add
add
adc
push
xchg
and
add
and
mov
mov
lea
mov
push
add
add
or
add
mov
add
mov
adc
add
xchg
call
mov
mov
(bad)
loopne
cli
add
fwait
es
mov
inc
and
or
test
mov
mov
call
lea
cwde
xchg
rol
stos
xchg
inc
sbb
scas
add
add
mov
shl
in
mov
and
add
adc
imul
xchg
mov
ret
add
retf
ret
xchg
pop
mov
rol
add
setne
out
shl
fwait
add
rol
mov
mov
shl
dec
inc
add
add
adc
add
add
add
or
push
pop
and
mov
and
mov
mov
mov
outs
fisttp
(bad)
call
sub
add
dec
add
and
or
icebp
xchg
add
adc
inc
(bad)
(bad)
cmp
add
(bad)
lea
lea
call
in
and
or
push
fwait
mov
mov
call
lea
mov
call
sbb
add
add
add
lea
push
test
or
dec
mov
mov
mov
out
and
mov
stos
mov
add
add
lea
mov
pop
mov
cli
add
dec
add
mov
add
daa
adc
add
stos
inc
call
add
(bad)
and
mov
push
or
shl
scas
rol
call
(bad)
lds
mov
out
sbb
inc
add
add
add
test
add
add
ror
or
add
add
in
(bad)
sub
cwde
test
mov
out
mov
cmp
scas
add
mov
lods
mov
add
add
add
add
scas
xchg
and
add
mov
add
loope
add
test
lods
in
cli
mov
add
mov
sub
mov
add
or
add
add
test
add
adc
add
cmpxchg
add
add
add
add
mov
add
mov
add
add
into
sub
mov
adc
add
add
je
xor
ins
and
add
xor
sti
add
mov
pop
loope
dec
sub
mov
and
add
adc
push
jmp
mov
sub
mov
and
add
add
pop
mov
test
sub
mov
and
add
mov
add
jmp
mov
cwde
add
add
out
and
and
je
jmp
mov
or
test
mov
and
add
mov
test
adc
xchg
out
and
add
push
xchg
test
adc
add
rol
mov
aam
add
mov
mov
ret
add
jmp
mov
sub
mov
sub
scas
cmp
sbb
fisub
pop
add
add
(bad)
and
add
mov
add
add
fs
mov
sub
add
pop
int
cwde
mov
ins
stc
mov
add
add
add
add
outs
cwde
add
int3
lods
fs
and
outs
add
je
inc
aad
add
mov
and
aas
add
ror
add
(bad)
and
mov
or
pop
int
mov
add
je
jmp
mov
and
add
scas
std
pop
jmp
les
add
inc
(bad)
and
add
jmp
mov
sub
mov
syscall
xor
push
dec
mov
adc
add
mov
jg
mov
mov
sub
mov
je
jmp
mov
sub
mov
add
add
loopne
add
mov
test
cwde
adc
or
mov
xchg
sub
rol
jmp
mov
sub
sub
sub
and
add
loopne
add
test
sub
mov
jg
jmp
mov
or
adc
mov
lods
(bad)
aaa
movs
add
jmp
or
sub
mov
invd
rol
outs
jmp
mov
and
scas
add
sub
mov
jg
sti
mov
outs
daa
add
sar
test
add
outs
jg
jmp
adc
sub
mov
add
(bad)
pop
add
add
and
test
mov
add
mov
mov
add
add
add
add
and
push
sub
mov
unpcklps
rol
dec
add
mov
mov
or
add
loopne
jmp
mov
sub
call
sub
scas
jmp
mov
and
mov
ret
adc
mov
jg
inc
add
add
cwde
test
add
xchg
fld
jg
jmp
mov
cwde
adc
xchg
mov
and
mov
jnp
add
jmp
mov
pop
outs
and
sub
adc
hlt
hlt
add
xor
jmp
mov
sub
mov
femms
mov
add
jmp
mov
sub
mov
psraw
and
addr16
mov
sub
mov
sbb
add
add
add
mov
and
add
add
aaa
(bad)
fmul
add
jg
jmp
mov
sub
mov
and
add
and
add
xlat
add
and
and
add
or
out
(bad)
xlat
dec
add
push
add
lods
in
cwde
add
and
jns
jbe
bound
and
add
add
jmp
mov
(bad)
sub
mov
fwait
jns
add
loop
pop
add
adc
add
xchg
mov
sub
adc
hlt
cdq
mov
sbb
add
jmp
mov
sub
mov
je
push
add
add
mov
sub
call
je
xchg
and
add
test
add
add
mov
xchg
test
or
dec
dec
mov
test
cwde
add
add
nop
in
xor
mov
add
in
cli
popf
add
xchg
add
sub
mov
je
jmp
and
and
add
add
mov
je
dec
popa
add
aad
test
add
xchg
fmul
loopne
je
jmp
mov
movq
jo
add
or
add
rol
add
mov
push
fisttp
add
je
jmp
mov
add
cli
mov
and
add
add
test
pop
add
add
add
sub
mov
and
push
add
xchg
test
add
add
add
sub
mov
mov
lods
add
loopne
test
add
lods
or
adc
and
mov
add
add
add
call
add
je
int3
jno
add
mov
aas
rcr
mov
xchg
add
jmp
add
add
sub
mov
je
mov
test
scas
rol
fs
sub
mov
bt
add
mov
add
test
add
add
add
stc
loopne
add
add
sub
mov
nop
or
add
mov
adc
mov
add
add
pop
add
xor
and
lods
add
sub
mov
je
retf
mov
test
add
aam
pop
ror
xchg
stos
add
dec
push
add
add
add
cs
mov
test
xchg
jmp
mov
and
add
add
mov
mov
je
jmp
mov
sub
mov
and
sqrtps
or
add
adc
add
mov
add
or
je
push
mov
add
data16
adc
add
stos
and
nop
scas
add
rol
dec
add
popa
test
add
mov
scas
xchg
and
sbb
pop
add
inc
ror
add
mov
jmp
lea
push
add
retf
add
mov
mov
mov
cs
add
dec
mov
pop
mov
add
add
add
add
jae
fs
pusha
test
push
add
mov
add
add
fisttp
mov
mov
add
or
stc
mov
les
lods
jp
sub
rol
adc
sbb
add
add
cmp
sbb
xchg
mov
nop
add
xor
mov
(bad)
cmp
xchg
jmp
add
mov
iret
cmps
sub
adc
mov
add
out
fidivr
dec
add
mov
xor
mov
pusha
out
fsub
sbb
pop
mov
inc
aas
and
inc
and
and
and
sbb
mov
xor
mov
or
test
popf
or
test
mov
cmovne
fs
in
add
jmp
mov
mov
mov
mov
stos
add
mov
and
inc
and
cmp
pushf
les
sahf
mov
mov
mov
add
add
pushf
mov
add
mov
mov
fst
out
add
fwait
add
imul
and
cmp
xor
and
call
movs
pop
xor
xor
mov
and
mov
and
push
aaa
jmp
and
mov
cmp
inc
jo
and
mov
adc
or
mov
mov
mov
or
ret
inc
xchg
pop
pop
jl
dec
or
hlt
add
inc
loope
fmul
loopne
add
inc
retf
fwait
in
add
add
mov
jecxz
mov
xchg
mov
imul
cmovne
add
add
mov
mov
mov
mov
mov
add
adc
out
test
in
dec
out
in
and
cmp
vmwrite
cmp
movsx
xor
test
cmovne
add
mov
add
mov
mov
les
shl
xlat
cmp
out
adc
inc
fs
dec
xchg
scas
xlat
and
cmp
sete
cmp
pmullw
sub
push
pop
xor
or
mul
add
push
ror
add
pop
add
(bad)
outs
in
add
jmp
mov
mov
in
and
add
add
add
add
mov
mov
jmp
mov
pushf
cmp
xchg
fmul
call
sar
xlat
and
sub
adc
inc
xlat
xchg
loop
add
add
add
xchg
ret
cmp
push
and
xor
add
hlt
in
dec
add
cmps
add
ins
dec
xor
mov
mov
les
or
add
lods
add
xchg
and
and
or
add
add
add
cmp
out
add
add
or
loop
add
add
add
xchg
ret
push
dec
and
inc
mov
scas
cli
xor
inc
(bad)
ret
call
in
add
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
pop
add
add
ror
in
xchg
(bad)
outs
add
dec
xor
addr16
adc
mov
mov
mov
mov
pop
imul
call
mov
mov
mov
cmp
out
push
jne
mov
jmp
aas
mov
fidiv
test
jl
add
add
inc
jo
enter
add
and
enter
imul
push
out
add
add
add
xchg
inc
push
dec
add
add
pushf
and
mov
and
mov
xor
ins
repnz
add
mov
and
and
xor
mov
or
test
jbe
fdecstp
les
mov
push
pinsrw
mov
imul
add
add
add
out
dec
sub
mov
in
les
mov
mov
add
sub
sbb
fs
add
cmp
sete
sub
jle
test
aaa
fdiv
xor
mov
and
(bad)
(bad)
mov
and
and
sbb
(bad)
fcomp
test
and
or
sub
dec
and
cld
test
mov
dec
pmulhuw
mov
jmp
mov
jmp
mov
mov
addr16
add
add
add
add
fwait
scas
add
mov
mov
mov
and
call
sub
or
push
add
add
fwait
dec
and
call
mov
lea
jle
and
or
mov
inc
mov
dec
aaa
cmp
sar
mov
out
cmp
add
and
inc
pop
test
add
dec
ret
mov
(bad)
mov
mov
xor
mov
mov
sub
sub
ds
xchg
adc
cmc
add
add
add
sete
sbb
test
jge
mov
and
add
xor
mov
fdiv
les
(bad)
retf
or
and
or
imul
adc
sub
mov
add
xor
add
cmc
clc
addr16
add
add
and
cmp
add
or
add
rol
add
add
mov
sub
mov
(bad)
jns
shl
ror
mov
mov
loope
add
out
add
add
gs
aas
ins
imul
and
and
mov
add
add
or
add
setl
ja
cli
xor
in
not
xchg
sub
mov
add
xchg
add
add
sub
add
add
add
adc
pushf
adc
cmp
mov
add
add
add
inc
mov
add
add
test
outs
call
mov
enter
xor
mov
mov
retf
jmp
mov
and
(bad)
imul
cmp
add
add
imul
mov
outs
mov
and
mov
fwait
mov
or
(bad)
mov
hlt
add
ror
mov
mov
or
test
xlat
sub
mov
out
inc
icebp
ret
mov
in
lods
add
cmp
cmps
and
or
mov
jo
xchg
add
imul
jl
add
xor
mov
and
retf
add
xchg
out
pop
mov
outs
and
cli
add
add
sete
xor
xor
sti
or
cmps
mov
and
call
ror
add
lock
adc
test
add
loopne
lea
(bad)
mov
xchg
mov
and
lea
cmp
inc
inc
ror
ds
adc
aad
mov
add
jle
add
and
loope
add
hlt
in
add
mov
and
(bad)
call
add
add
jbe
rol
mov
and
or
mov
mov
ret
mov
add
or
add
mov
dec
inc
add
ss
mov
add
mov
mov
retf
repnz
add
(bad)
pop
mov
rol
add
and
add
add
add
fs
push
jmp
js
mov
add
in
scas
and
jmp
clc
addr16
add
add
and
call
mov
mov
or
add
add
sub
pop
inc
add
mov
mov
call
mov
jmp
mov
mov
call
lea
dec
data16
mov
jmp
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
in
and
(bad)
dec
and
out
or
mov
test
and
mov
mov
ud1
push
dec
inc
add
sbb
sbb
push
loopne
jmp
mov
aas
jo
xor
and
setne
add
add
add
mov
mov
and
sub
mov
jg
rol
add
inc
inc
and
pusha
xor
dec
mov
(bad)
popf
push
add
jmp
mov
sub
mov
sbb
mov
add
test
add
mov
aaa
dec
cld
xchg
movs
mov
mov
add
add
push
sub
push
pop
cmp
inc
imul
add
scas
add
add
mov
inc
xor
jg
scas
add
add
sbb
or
mov
out
(bad)
fld
mov
jmp
mov
sub
cmp
and
bndldx
add
add
mov
jo
add
and
cmp
jmp
mov
sub
mov
outs
sub
(bad)
dec
add
mov
add
add
and
sub
std
xchg
movs
mov
movups
or
add
sub
dec
call
cmp
test
add
add
push
add
pop
mov
sub
mov
jl
je
mov
mov
ss
adc
and
push
test
add
out
xchg
add
mov
jo
add
imul
adc
setae
add
mov
shl
add
test
add
jo
push
std
or
mov
je
jmp
mov
mov
pop
and
je
jmp
mov
sub
rol
inc
test
pop
add
jmp
mov
aaa
xor
dec
mov
mov
add
and
push
add
cdq
call
cmpeqps
mov
mov
int
xor
mov
je
jmp
jl
or
into
ins
push
mov
mov
int3
cli
add
add
cmovne
mov
mul
xor
mov
jg
adc
add
add
clc
add
dec
adc
sub
cmovg
and
and
sete
cmp
add
add
xchg
(bad)
cmp
sti
or
test
cmovne
test
je
mov
add
mov
add
cmps
dec
std
xchg
popf
mov
rol
add
mov
mov
int3
lods
add
add
mov
test
add
add
xchg
int3
cmp
seto
mov
and
xor
or
test
cmovne
mov
movs
pop
add
push
icebp
inc
and
cdq
call
add
mov
lahf
adc
imul
xlat
add
sub
sbb
add
sub
imul
and
adc
add
add
add
add
pushf
(bad)
mov
and
test
and
mov
mov
mov
mov
cmp
add
add
xchg
jae
out
mov
mov
mov
mov
sub
sub
dec
ret
rcr
cmp
mov
(bad)
out
add
add
add
(bad)
int3
mov
sbb
sbb
jo
add
and
and
mov
and
and
and
or
xor
inc
and
or
retf
xlat
or
je
pop
inc
inc
icebp
mov
arpl
loopne
aam
adc
lock
ret
inc
iret
mov
jl
or
dec
lock
shr
pop
add
push
mov
mov
and
imul
xor
add
test
cmp
sete
cmp
call
ds
test
cmovne
mov
neg
add
sbb
add
js
add
xor
lock
mov
nop
adc
mov
mov
out
jmp
add
add
ror
scas
xlat
and
(bad)
hlt
add
sub
inc
xchg
fnsave
push
setl
lahf
fidiv
mov
add
inc
aad
inc
and
jmp
mov
repz
add
push
lea
pop
pop
out
pop
push
lods
cld
addr16
add
ja
add
dec
cld
addr16
add
push
add
je
adc
sub
add
mov
jmp
mov
mov
pop
enter
mov
mov
jmp
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
es
jo
clc
or
add
add
add
add
add
dec
sbb
add
call
ret
xchg
add
mov
mov
push
jmp
mov
or
mov
mov
mov
mov
jecxz
ja
add
test
push
test
add
add
add
(bad)
push
and
add
and
test
std
mov
jmp
mov
mov
jg
jmp
mov
push
inc
mov
or
pop
frstor
add
sub
push
add
inc
and
sub
mov
sbb
add
add
inc
and
sub
mov
ins
je
jmp
mov
call
and
shr
cmp
add
mov
xchg
imul
loopne
test
test
sbb
mov
imul
pusha
jg
jmp
mov
and
dec
leave
mov
and
je
imul
sbb
or
adc
sbb
add
add
cmp
and
mov
pop
push
mov
retf
add
add
mov
sub
mov
(bad)
nop
add
mov
push
pop
sbb
dec
and
je
pop
inc
add
add
and
xor
(bad)
mov
add
mov
add
add
dec
js
mov
je
repnz
add
mov
inc
mov
inc
and
prefetcht0
and
add
fldl2t
and
rol
rdtsc
mov
je
jmp
mov
jl
jbe
shl
repz
cmp
(bad)
add
add
add
std
sbb
adc
in
stc
mov
add
mov
test
les
pop
mov
add
sbb
mov
sub
mov
(bad)
add
add
pop
add
ror
pop
inc
sbb
inc
and
pmaxsw
add
add
mov
sub
mov
je
jmp
add
or
sbb
inc
and
movlps
fild
and
mov
sub
mov
cmp
add
add
xor
arpl
cs
je
jmp
jmp
mov
fdivr
xchg
popf
test
add
cmp
dec
inc
shl
add
pop
add
or
add
add
and
add
arpl
xchg
add
(bad)
sub
add
add
add
std
mov
mov
das
leave
icebp
repnz
sbb
add
mov
mov
mov
mov
jge
add
xlat
add
cmp
out
inc
movs
cld
out
scas
xlat
and
cmp
sete
sub
imul
add
pushf
jle
fisub
cli
xor
or
inc
add
add
stos
add
add
lock
add
ret
jp
sbb
(bad)
ret
add
and
inc
add
mov
mov
(bad)
repz
add
ss
jae
add
add
add
and
sete
add
pushf
(bad)
mov
fisttp
repnz
ret
add
add
test
add
inc
add
add
mov
pop
dec
add
rol
add
nop
add
popf
test
add
add
mov
mov
sub
(bad)
fimul
add
sub
mov
mov
mov
push
add
mov
and
std
add
xor
mov
retf
mov
cwde
dec
add
cmp
mov
mov
xchg
add
add
pop
pop
and
xor
and
call
jle
and
add
inc
and
jmp
mov
push
add
and
add
cmp
add
add
add
and
and
add
add
add
mov
or
lods
(bad)
leave
in
sub
mov
lods
xor
add
leave
mov
add
ror
add
fild
mov
imul
mov
cmp
sar
add
add
xlat
add
or
cmp
pop
add
mov
inc
add
sete
push
je
(bad)
mov
mov
movs
and
or
mov
ins
rol
inc
das
mov
rol
and
add
mov
and
xchg
add
mov
mov
es
or
or
add
clc
and
sbb
sete
jmp
or
add
setl
xchg
mov
repz
and
and
mov
and
les
mov
and
or
mov
and
or
xor
or
cs
iret
add
test
mov
and
je
icebp
push
mov
test
add
leave
sub
add
fldcw
inc
mov
add
lea
pop
pop
pop
pop
mov
jmp
mov
jmp
popa
jae
pop
das
xor
adc
je
add
jecxz
xor
add
push
mov
ret
push
(bad)
daa
xchg
test
stos
das
inc
jo
sbb
cwde
das
loopne
jmp
dec
sub
add
outs
faddp
(bad)
xchg
(bad)
mov
out
push
dec
pop
mov
je
fidivr
mov
cld
sub
xor
pop
iret
cmps
outs
adc
ret
or
add
fidiv
add
jae
cmps
xor
jl
push
push
sti
lods
scas
mov
icebp
cmp
pop
push
adc
jnp
mov
and
sbb
enter
fadd
movs
pop
inc
add
ret
mov
ffree
and
mov
ins
(bad)
mov
mov
sub
loope
mov
pop
adc
movs
sbb
xchg
mov
push
nop
cdq
push
test
push
mov
cmp
loopne
stos
popf
ds
inc
aaa
dec
mov
arpl
mov
dec
push
stos
jne
test
(bad)
leave
mov
(bad)
push
dec
xchg
push
mov
icebp
hlt
mov
mov
scas
xchg
dec
jmp
mov
and
pop
fidivr
(bad)
dec
inc
jecxz
add
mov
push
das
aaa
into
dec
mov
stos
dec
(bad)
lods
movs
cmps
pop
fcom
or
and
pop
add
pop
jbe
adc
dec
jae
idiv
je
jae
xor
stos
sbb
ds
outs
push
imul
ds
push
adc
out
les
arpl
stc
mov
xor
jmp
mov
stos
nop
ja
adc
cmp
fwait
and
scas
push
cmps
movs
or
cwde
xchg
adc
push
or
mov
and
pop
dec
mov
push
xor
jl
sub
sti
fstp
inc
cli
iret
(bad)
out
push
jnp
outs
pop
inc
in
xchg
mov
dec
inc
inc
fistp
test
ror
mov
fnstenv
adc
movs
sub
in
js
shl
mov
inc
adc
out
pop
or
mov
(bad)
movs
pop
jp
cmp
cwde
shl
fs
stos
xor
cli
pop
sub
sub
xor
outs
jns
fcom
mov
lods
inc
push
jo
fldcw
nop
out
lea
mov
xor
nop
xchg
into
and
dec
nop
scas
xchg
sti
push
jbe
cs
ss
add
pop
push
test
js
inc
int
push
cwde
cmp
pop
mov
jmp
jl
sbb
inc
sar
push
fisttp
xor
or
mov
ret
shl
mov
xchg
lds
xor
adc
sti
jmp
(bad)
int
push
pop
repz
mov
test
fnstsw
sbb
nop
fidiv
shl
and
mov
mov
push
popa
or
call
aaa
pop
pop
sbb
adc
loope
inc
pop
push
mov
xor
xchg
xor
push
jno
mov
push
adc
jmp
out
jae
cdq
or
ja
(bad)
xor
dec
add
mov
jg
sar
jbe
push
popa
jo
retf
xchg
push
mov
mov
out
and
call
push
or
xchg
test
mov
cmp
mov
mov
adc
out
push
xchg
stc
mov
scas
jns
jl
inc
jmp
pop
setl
sahf
push
xchg
test
mov
stos
mov
push
fistp
pop
pushf
xor
std
ficom
fucom
gs
or
ja
aad
inc
loopne
sub
icebp
sub
cld
movs
push
arpl
loope
jne
mov
push
loopne
xor
or
cs
jnp
mov
pop
sbb
ss
into
fisubr
mov
nop
fs
and
mul
mov
and
inc
popf
sub
mov
xchg
adc
test
mov
xor
(bad)
repnz
out
rol
sub
xor
fdivr
pop
(bad)
sar
(bad)
mov
xor
jo
dec
lahf
out
xor
nop
cmp
retf
push
fisub
inc
sub
nop
(bad)
lods
cmps
pop
jmp
and
mov
and
pop
sbb
inc
imul
pop
inc
or
sub
xchg
jmp
pop
lds
pop
pop
push
jmp
nop
xchg
aaa
cmc
sar
mov
inc
mov
pop
movs
mov
inc
ja
pop
inc
dec
or
mul
cmp
mov
push
inc
mov
dec
(bad)
xchg
add
into
sub
ss
xchg
jnp
sbb
lods
inc
pop
and
(bad)
jmp
sub
rcr
mov
(bad)
lahf
cmp
imul
mov
xchg
pop
movs
ins
pop
aaa
es
pop
pop
xchg
dec
mov
pushf
or
call
pushf
cmps
or
dec
inc
and
jns
into
jbe
not
inc
jl
inc
mov
out
mov
push
ins
inc
cmps
mov
add
dec
push
test
call
sub
sbb
in
fprem1
or
add
inc
sbb
sbb
inc
adc
sbb
arpl
mov
je
imul
pop
cmp
push
mov
add
cmp
idiv
add
push
das
outs
jo
jbe
jecxz
aaa
sub
add
xchg
sub
pop
mov
inc
mov
retf
mov
or
dec
xchg
rol
mov
or
xor
hlt
cmp
inc
loopne
sbb
mov
xchg
data16
jmp
sub
sub
sbb
jecxz
(bad)
xor
fwait
jg
and
push
xor
jecxz
repz
outs
jl
int
inc
mov
int
pusha
aas
repz
ret
sbb
imul
jle
push
pop
rol
or
push
or
xor
or
add
hlt
inc
fild
add
cmp
pop
adc
or
sti
sbb
pop
and
lea
stos
retf
into
cdq
test
push
scas
hlt
fucomp
rol
mov
jne
sti
andps
pop
mov
arpl
out
dec
outs
fst
cmps
adc
sbb
jbe
scas
pop
movs
cs
loope
jb
inc
mov
lahf
stos
call
js
inc
xor
sub
xchg
bnd
gs
(bad)
fidiv
fisub
and
add
test
test
xchg
mov
dec
cmp
(bad)
cmps
cld
mov
sub
pop
cmp
add
daa
in
jns
pop
nop
and
int3
jmp
cmp
out
jbe
jge
jp
sahf
inc
fnstsw
add
mov
mov
dec
(bad)
push
out
repz
jmp
and
in
push
lds
add
(bad)
pop
and
inc
or
ins
inc
xchg
jo
gs
lods
xchg
rcr
push
add
xlat
xchg
cmp
or
mov
push
shr
and
mov
bound
stos
jnp
popa
in
js
inc
aad
pop
jmp
xor
adc
mov
daa
bnd
nop
leave
pop
outs
mov
loopne
jae
jns
fs
movs
add
xor
dec
not
dec
mov
inc
movups
sbb
jb
pop
into
push
jmp
pop
lock
sub
lock
call
sar
ins
sub
or
clc
emms
pop
loope
retf
xor
sub
mov
test
in
xchg
stos
icebp
pop
pop
lea
dec
imul
push
mov
jmp
pop
xor
inc
test
not
adc
adc
gs
lahf
(bad)
(bad)
cvtdq2ps
(bad)
mov
scas
push
(bad)
add
push
dec
test
call
pop
xchg
xlat
jge
add
and
cmp
scas
adc
mov
shl
loop
cmps
sub
xor
pop
jmp
(bad)
mov
(bad)
xor
mov
outs
call
out
dec
adc
push
popf
push
mov
leave
or
push
mov
sbb
push
clc
xchg
push
and
fwait
or
loope
mov
jb
mov
xchg
dec
push
pop
pop
push
push
(bad)
fmul
cmp
je
loopne
nop
mov
mov
gs
dec
or
inc
or
or
pop
aas
add
das
push
call
lods
shr
lods
or
cli
ss
hlt
jo
jmp
jg
push
dec
je
aad
and
pop
jecxz
bnd
push
pop
push
loope
mov
sar
ja
inc
pop
mul
int3
out
jne
lods
cmp
pop
in
enter
stos
and
mov
cmp
cmps
test
sub
xor
mov
dec
aam
ins
add
es
sub
jmp
lock
mov
mov
out
popf
mov
aaa
mov
mov
jb
pop
nop
leave
test
push
fwait
sbb
adc
push
cmp
push
inc
mov
mov
jmp
xchg
adc
add
xchg
push
cmps
fld
adc
mov
mov
add
pop
cwde
loope
cmps
xor
out
out
test
xchg
mov
retf
das
mov
jmp
push
xor
sbb
cdq
cwde
xor
test
inc
lods
adc
mov
aaa
xchg
or
sub
pop
aam
hlt
inc
jle
xor
fs
add
cmp
pop
nop
jmp
pop
cmp
js
repz
es
fdiv
jno
adc
je
call
adc
inc
xchg
test
outs
adc
pop
dec
ret
fbld
pop
mov
outs
pop
retf
test
ds
xchg
ds
fidivr
leave
mov
jbe
in
xchg
sti
and
sub
xchg
cld
ss
mov
xor
jb
cld
or
add
mov
jae
(bad)
fnstenv
movs
adc
fstp
ret
cmps
stos
jl
jne
push
les
scas
ins
imul
iret
xor
xor
xchg
or
popa
out
and
retf
xchg
lods
mov
lock
mov
mov
repnz
xchg
inc
jmp
fadd
cwde
(bad)
sbb
inc
cmp
out
les
sar
and
cs
dec
(bad)
dec
pop
test
pop
pop
stos
(bad)
jge
add
retf
loopne
inc
enter
or
movs
mov
ret
sub
mov
outs
sbb
out
add
(bad)
adc
add
add
add
add
mov
dec
add
add
add
add
fwait
add
add
rol
add
out
add
repz
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
mov
add
add
add
add
add
add
add
setle
jb
add
add
add
hlt
add
add
inc
out
je
push
pop
and
sub
pop
arpl
or
ss
mov
mov
fbld
mov
xor
and
inc
ret
dec
ret
(bad)
and
jbe
repnz
loope
mov
inc
lock
mov
fild
sub
call
push
lods
imul
ins
test
sbb
xlat
pop
mov
add
mov
icebp
add
neg
pop
cs
or
jecxz
cdq
(bad)
push
mov
hlt
sbb
xor
sahf
mov
sbb
xor
clc
push
or
ins
les
cmps
cmp
xchg
xor
loopne
inc
test
je
sbb
daa
outs
fmul
outs
stos
and
cmp
add
mov
clc
dec
push
ss
rcr
xchg
push
fiadd
pop
mov
lds
push
xchg
add
push
cmp
imul
int3
icebp
fs
adc
sbb
daa
xlat
ret
add
and
fs
je
retf
sar
aas
fisubr
add
adc
lock
in
pop
xor
cmc
inc
or
dec
sbb
xor
dec
inc
and
dec
push
(bad)
cmovne
xchg
mov
pop
xor
push
imul
inc
xchg
push
std
stc
xchg
ror
test
mov
movs
pop
pop
mov
dec
out
add
or
inc
shr
mov
rcl
dec
movs
pop
push
into
adc
repz
jge
scas
mov
sbb
fmul
lahf
jmp
call
mov
sub
mov
movs
inc
push
adc
movs
lds
cmc
inc
call
xor
pushf
mov
xchg
push
mov
js
add
push
std
(bad)
cli
icebp
sahf
gs
leave
cmc
ja
xchg
fs
cmps
xor
cmc
and
hlt
mov
lods
cld
and
xor
cmc
(bad)
xor
xor
sti
pop
(bad)
or
pop
dec
cmps
pop
(bad)
or
fsubr
add
out
lods
push
test
test
(bad)
(bad)
shl
mov
mov
and
mov
push
into
push
ins
div
fisttp
int
call
inc
xlat
icebp
fsubr
out
imul
cmp
icebp
push
outs
lods
cmps
jmp
scas
popw
inc
inc
outs
stc
pop
and
out
cmps
and
arpl
in
jg
or
mov
jb
hlt
mov
fst
mov
jbe
(bad)
mov
push
dec
stc
cdq
adc
mov
push
dec
scas
mov
cmp
fsubr
jmp
mov
jecxz
lods
cmp
call
adc
repz
scas
mov
add
mov
lock
push
sbb
ins
pop
mov
sahf
call
test
std
out
inc
mov
xchg
pop
das
jno
pop
or
xlat
ss
or
mov
mov
ror
cmp
retf
sub
lods
repz
mov
call
les
icebp
cmps
push
(bad)
xchg
push
pop
fidivr
push
pushf
sti
jbe
cmp
jno
mov
add
jo
xlat
in
mov
inc
js
sar
stos
gs
aas
mov
dec
mov
push
inc
pop
mov
and
fidiv
std
(bad)
mov
xchg
ret
inc
ss
fldcw
shl
es
mov
mov
fs
repnz
stc
ror
retf
mov
mov
data16
lods
push
cmp
inc
adc
mov
add
pop
js
pop
xchg
and
mul
and
mov
hlt
es
(bad)
into
in
inc
int
idiv
xor
sahf
popa
push
clc
add
gs
jno
int3
jmp
jg
mov
adc
dec
sti
push
repnz
icebp
aad
fcomp
sahf
sahf
test
sbb
or
or
push
(bad)
cld
ins
ror
(bad)
pop
popf
repnz
hlt
dec
dec
xor
adc
jecxz
inc
mov
test
inc
sub
(bad)
xor
cmp
int
iret
sbb
mov
ret
xor
data16
xlat
xor
add
cmps
cdq
stos
mov
jge
push
lods
dec
sub
xor
out
dec
add
pop
aaa
das
jmp
add
out
sub
add
iret
pop
daa
inc
push
xchg
aad
mov
sub
mov
(bad)
rcl
pop
push
and
call
test
jno
cmp
out
sbb
lods
mov
cli
adc
sbb
aas
dec
je
movs
pop
aad
mov
je
iret
cmp
push
ins
cli
xchg
pop
adc
bound
or
cmps
cmp
scas
adc
cmc
push
push
mov
movs
ror
jns
mov
rcl
pop
in
jle
call
addr16
sti
push
add
outs
pop
dec
ins
jo
cmp
lock
xchg
xchg
jmp
fmul
repnz
dec
push
lods
dec
mov
xchg
sahf
xchg
mov
or
dec
xchg
fstp
dec
add
jecxz
ficom
push
stos
pop
xor
sub
sub
adc
mov
loop
scas
test
retf
pop
ja
fcomi
cwde
movs
aas
xchg
sbb
scas
pop
in
in
lea
ficomp
adc
push
dec
(bad)
pop
in
les
out
and
fwait
popf
xlat
aad
movs
mov
adc
push
mov
sar
fmul
push
(bad)
jns
dec
das
loop
or
lods
lock
imul
sbb
daa
and
cld
push
lahf
cmp
mov
dec
jge
test
mov
and
inc
(bad)
xor
ds
mov
add
jmp
xor
push
not
sbb
adc
sbb
addr16
mov
add
add
bound
dec
pop
adc
addr16
and
mov
cmps
adc
hlt
jl
and
retf
xor
inc
cmp
nop
inc
push
(bad)
ror
arpl
int
mov
test
fxch
loop
push
mov
mov
cs
inc
and
data16
nop
pop
inc
lods
jle
push
add
mov
jle
cmp
scas
les
call
and
fcmove
pop
sti
sbb
data16
xchg
imul
mov
cmp
out
ja
mov
mov
push
pand
xor
xchg
mov
mov
jo
jbe
sbb
jl
sbb
mov
out
lds
aad
jbe
adc
pop
sub
mov
push
addr16
mov
inc
popa
push
cmp
loopne
pop
inc
aas
jno
jmp
xor
xor
out
push
scas
repz
loope
or
lock
xor
(bad)
clc
outs
in
ja
add
lock
popa
ror
jbe
jmp
pop
aad
xchg
sub
inc
jae
pop
(bad)
pop
ins
mov
dec
push
(bad)
nop
and
jmp
stos
jl
ds
loope
mov
sub
push
test
jmp
lahf
dec
jecxz
retf
movups
aaa
dec
repz
aam
ins
popf
cmp
out
ja
ss
sbb
or
pop
aaa
and
xchg
call
addr16
adc
mov
inc
push
sbb
add
mov
stos
xchg
cli
xchg
cs
scas
ror
xor
out
aaa
aas
and
fs
loop
mov
xor
push
aad
int
(bad)
cwde
push
js
xchg
inc
mov
mov
data16
arpl
shr
mov
pop
jecxz
fadd
ret
xchg
leave
cmps
cs
mov
lods
pop
(bad)
mov
test
rcl
jmp
test
jg
clc
rol
jge
pop
cmp
call
inc
fsubr
lock
jbe
clc
inc
ins
cdq
fild
out
out
adc
sahf
mov
cld
add
add
repnz
aaa
mov
and
arpl
push
fs
cwde
push
or
scas
pop
push
dec
les
lock
sub
adc
sbb
adc
mul
shl
sub
push
in
scas
xchg
cli
bound
std
sahf
or
ror
leave
rol
pop
mov
in
test
mov
mov
pop
xchg
cmp
xchg
inc
xchg
cmc
or
cmp
push
xchg
sub
(bad)
push
repnz
ret
ins
test
shl
mov
stos
cmp
xor
jnp
jns
push
rol
mov
dec
jb
hlt
scas
inc
(bad)
xor
dec
jbe
ins
(bad)
fistp
test
pop
mul
test
shr
or
sahf
pop
(bad)
mov
jae
call
cmps
into
push
and
movs
sub
inc
push
mov
push
lods
mov
arpl
ja
fdivr
add
imul
mov
jecxz
jb
pop
lahf
sbb
cs
sbb
and
int
fsub
jmp
or
call
adc
push
jo
adc
mov
es
imul
cmc
and
cmc
and
or
dec
daa
into
jb
inc
cmp
sbb
rcr
je
mov
jno
pop
sbb
jne
enter
push
cmps
ins
pop
cli
dec
movs
fsubr
jne
add
sub
mov
retf
in
imul
cmp
or
mov
adc
das
test
cmp
imul
adc
and
repnz
test
or
xchg
stos
sub
in
dec
loopne
push
push
out
mov
xchg
adc
call
shl
out
mov
push
cmp
push
mov
enter
sub
jecxz
xor
jmp
sub
cmps
(bad)
sbb
mov
jg
mov
clc
xchg
pushw
mov
int3
sahf
pop
es
dec
cdq
lahf
mov
loopne
fs
lods
cmc
(bad)
pop
xor
cmp
mov
clc
mov
and
retf
mov
and
dec
jno
loopne
cmp
push
mov
addr16
add
mov
or
mov
cdq
dec
cmp
dec
jae
in
xchg
(bad)
jl
fisub
sbb
mov
ins
ret
inc
sbb
mov
pop
mov
push
cwde
cmps
mov
jecxz
jg
adc
popa
pop
and
leave
mov
inc
mov
loope
scas
ss
(bad)
mov
jbe
jb
jne
aas
xchg
dec
int
mov
rcpps
sub
es
push
sbb
add
add
add
add
add
add
xchg
add
add
mov
jno
add
test
add
dec
rep
scas
dec
and
outs
retf
arpl
movs
jns
or
dec
and
bound
sub
mov
jmp
sub
jmp
mov
adc
mov
sub
mov
dec
or
sahf
cdq
xchg
pop
cmp
iret
sahf
repz
sub
iret
xor
adc
leave
push
ds
loop
jb
or
xchg
and
stc
and
inc
jecxz
jle
pop
pop
inc
push
jmp
cld
mov
ret
jbe
sbb
into
(bad)
xchg
xor
nop
jne
mov
pop
bound
cmp
cwde
jb
mov
mov
std
mov
cld
fidiv
scas
inc
jno
mov
adc
repz
test
cdq
popa
xor
adc
aas
ret
jecxz
call
mov
mov
pop
mov
aad
scas
in
leave
sub
mov
pop
jecxz
outs
push
(bad)
xchg
cmp
fidivr
lahf
shr
mov
inc
mov
mov
popa
sub
lods
sbb
mov
xchg
mov
cs
cmp
xchg
sbb
or
rol
xchg
add
es
int
nop
add
push
lods
ds
and
pop
and
mov
mov
repz
lock
mov
cmp
sub
sub
sub
(bad)
sbb
out
ror
add
mov
push
ficomp
int
fild
rol
ins
dec
mov
(bad)
dec
push
xlat
enter
sbb
or
and
fist
adc
or
push
jo
dec
scas
sbb
mov
mov
ins
xor
adc
pop
popf
xor
loop
js
sub
mov
mov
dec
retf
imul
fisubr
push
(bad)
push
push
xchg
mov
lods
popa
mov
scas
stos
inc
dec
pop
outs
(bad)
adc
sbb
adc
mov
and
je
pop
xchg
push
imul
mov
pop
shl
popa
mov
pop
bound
cmp
gs
jmp
rcl
push
outs
clc
and
xor
xlat
test
pop
inc
pop
mov
inc
(bad)
cld
imul
mov
scas
fcmovnbe
push
jle
lock
nop
lods
nop
not
(bad)
sub
in
mov
cmps
add
cwde
pop
sbb
mov
icebp
mov
inc
popa
pop
inc
mov
outs
repz
xchg
movs
mov
test
movs
rol
dec
mov
sahf
sti
push
push
lds
xchg
es
out
add
inc
lea
pop
inc
jge
jmp
adc
pop
hlt
add
ss
adc
and
sar
mov
in
mov
xor
adc
sub
jb
adc
fmul
neg
xor
xor
dec
mov
(bad)
push
dec
push
(bad)
popa
inc
retf
cmp
pop
and
inc
xchg
fidivr
adc
push
jg
push
jle
pop
or
aad
cmps
sbb
inc
xor
sbb
cwde
push
popf
mov
push
pop
mov
mov
ret
repnz
enter
dec
daa
push
and
xchg
sbb
lea
sahf
aas
sub
adc
mov
out
or
inc
scas
mov
rcr
mov
xchg
cld
pop
cmp
jb
adc
mov
sub
xor
dec
scas
fimul
mov
hlt
or
inc
xchg
xchg
movs
pop
cmp
pop
push
add
inc
jmp
daa
mov
cs
jae
imul
sbb
imul
cdq
and
out
mov
adc
or
outs
in
pop
es
ja
cwde
inc
mov
mov
xor
jmp
push
pop
dec
jae
or
out
leave
mov
cmp
dec
sbb
test
sbb
xor
sbb
js
mov
rol
pop
push
sbb
leave
lea
imul
inc
(bad)
pop
test
push
pop
cmc
cmc
or
mov
leave
jmp
rol
dec
dec
loopne
sbb
xchg
dec
hlt
lods
imul
mov
std
shl
jecxz
pop
inc
xor
fsubr
aad
pop
pop
add
int
out
jmp
inc
je
das
pop
sbb
xchg
loopne
mov
dec
add
into
retf
fld
xchg
add
inc
in
pop
mov
cs
lds
push
int3
xor
icebp
add
cmp
add
cmp
jg
push
and
gs
mov
or
sub
cwde
inc
jo
cmp
cmp
movs
es
js
push
xor
dec
add
stos
cmps
repnz
xchg
inc
pop
xor
int
jmp
dec
mov
sbb
xor
sar
sbb
xchg
ret
inc
cmp
(bad)
jnp
sub
add
jle
mov
add
repz
ins
mov
data16
sbb
(bad)
(bad)
dec
mov
fistp
xchg
push
pop
inc
icebp
mov
xchg
nop
sahf
mov
sbb
cmp
or
pop
adc
(bad)
scas
mov
cld
jno
add
in
mov
fsub
jbe
dec
inc
sbb
dec
dec
popa
cmc
pop
mov
xchg
gs
cmp
xor
push
dec
sub
adc
popa
jmp
xchg
dec
inc
sbb
in
mov
xor
test
mov
movs
test
ret
mov
fst
pop
mov
mov
std
stos
and
int3
jp
mov
push
bound
and
mov
aad
imul
xor
and
jns
inc
stos
in
push
sbb
neg
push
and
xor
push
push
repnz
mov
or
sbb
xchg
or
cmp
pop
jg
test
xchg
jns
jo
push
sahf
aam
imul
push
sub
sahf
xlat
lods
loopne
sbb
push
mov
rcr
jns
sbb
fld
stc
push
dec
xchg
jge
nop
push
cmp
mov
in
mov
jmp
inc
mov
jmp
mov
sub
pop
je
mov
mov
pop
mov
popa
push
xor
gs
(bad)
mov
push
add
(bad)
(bad)
xor
adc
and
jae
jecxz
loopne
pop
cwde
pop
aaa
push
imul
iret
lock
movs
aam
xor
sub
ins
pusha
into
push
fmulp
aas
sub
adc
out
fisttp
xchg
arpl
mov
mov
ins
ja
mov
fwait
in
je
xor
mov
push
jno
cmc
test
inc
test
dec
add
push
jne
popa
jmp
jp
push
xchg
aaa
int3
lahf
cmp
call
xchg
pop
inc
ret
pop
inc
ins
mov
pop
test
add
daa
jnp
cmps
mov
xor
or
xor
mov
pop
out
call
sub
popf
push
mov
adc
dec
lock
mov
jne
cli
mov
sbb
inc
cdq
clc
(bad)
icebp
xchg
aaa
rol
push
cld
addr16
ss
int3
add
into
xor
xor
nop
inc
mov
fcomp
adc
add
ret
imul
mov
loopne
push
adc
sbb
fisttp
std
fidiv
test
pop
(bad)
pop
aaa
jmp
sbb
in
mov
sbb
pop
clc
mov
mov
jnp
dec
xchg
push
shr
cmp
jae
mov
adc
cli
inc
xor
jl
data16
mov
pop
aam
retf
stos
mov
outs
leave
stos
daa
mov
outs
sub
sub
jb
int
test
sub
pop
mov
or
inc
(bad)
loope
retf
aad
mov
test
test
enter
aad
jno
neg
xchg
test
(bad)
adc
lods
movs
fwait
aam
and
test
xor
pop
stc
mov
dec
or
les
sbb
inc
push
les
jb
mov
ds
cwde
mov
sub
xchg
(bad)
fwait
ins
push
fdiv
pusha
out
ins
jbe
test
out
mov
sbb
cmps
clc
sbb
xchg
dec
pop
xor
mov
inc
mov
dec
scas
retf
xor
lods
imul
repnz
jae
pop
pusha
enter
popa
dec
test
loope
out
mov
xor
int
and
int
jg
xor
ss
mov
in
mov
out
stos
fwait
scas
cli
rol
xor
inc
loope
jmp
cmps
add
pop
lds
xchg
cmp
ss
dec
pop
fisubr
sub
addr16
jo
lock
and
push
and
outs
test
dec
sbb
ins
cmp
push
xlat
mov
sbb
cld
dec
ret
add
out
push
(bad)
(bad)
inc
sub
shr
jmp
cmps
pushf
mov
addr16
push
shl
jge
mov
mov
cmps
or
mov
mov
out
outs
popf
cmps
mov
int
inc
cmp
(bad)
(bad)
adc
push
in
inc
xchg
iret
popa
loope
adc
(bad)
es
int
sbb
dec
hlt
stos
inc
outs
or
(bad)
sbb
mov
inc
aam
adc
repz
in
jns
adc
inc
dec
ja
ds
popa
cmc
adc
mov
into
fbstp
aas
aaa
fstp
adc
cmp
lds
sub
sub
jp
cmp
inc
sub
repnz
(bad)
iret
lods
hlt
mov
mov
add
and
daa
popf
int3
(bad)
ror
fadd
cmp
mov
out
ja
test
dec
lods
jp
int
sub
and
sbb
(bad)
pop
pop
dec
lahf
sbb
div
test
rol
mov
popf
mov
mov
in
cmc
lods
pop
(bad)
(bad)
cmp
dec
cmps
push
ret
xor
jl
inc
xchg
push
dec
add
imul
mov
loop
out
je
xor
jmp
jg
out
xor
popa
add
pop
(bad)
cmp
dec
jp
add
test
mov
sub
in
push
add
xchg
test
dec
leave
leave
sbb
outs
push
pop
fs
jmp
mov
ss
dec
or
pop
mov
lods
jno
in
fsubr
jb
or
fidiv
push
dec
push
rcl
add
add
aaa
add
scas
(bad)
repz
jp
xor
add
add
push
add
add
add
add
add
mov
mov
fisttp
fwait
pop
stc
ins
jmp
jmp
aad
loopne
inc
fadd
xor
or
cmp
jl
adc
out
xchg
fisttp
pop
dec
jnp
clc
push
adc
cwde
mov
pop
ficomp
push
call
cld
ror
popa
aam
lods
std
cmps
ret
fcomp
mov
pop
adc
nop
push
js
cdq
(bad)
bound
iret
imul
dec
mov
pop
sar
jmp
adc
(bad)
jae
mov
xchg
push
push
xchg
in
mov
pop
nop
push
out
sub
lea
or
lods
mov
jae
jns
add
jns
mov
cdq
cmc
jno
mov
dec
in
movs
jmp
(bad)
je
xchg
jle
pushf
test
jnp
jge
add
sub
leave
sub
stc
xor
loopne
fisubr
push
xlat
stos
je
loopne
fsubr
pop
cmp
add
xchg
in
jns
stos
stos
xor
dec
sbb
dec
loope
(bad)
rol
aaa
sub
scas
inc
repnz
xor
dec
loopne
inc
xor
cmp
adc
ss
mov
inc
add
ret
rol
xchg
rol
out
lods
mov
sub
out
outs
movs
push
arpl
inc
sub
ds
push
xchg
enter
(bad)
std
xchg
and
or
ret
push
push
aaa
test
xor
cmp
push
push
gs
mov
fldenv
mov
or
je
pop
sub
pop
cmp
or
xchg
sbb
outs
fsub
xchg
in
sti
icebp
push
push
mul
fild
xchg
pushf
out
mov
dec
(bad)
daa
sub
push
pop
jl
push
in
popf
cs
(bad)
lods
cmp
push
dec
in
and
push
jp
mov
pop
add
cmps
pushf
cmps
addr16
aad
cmp
int
push
aaa
leave
shl
mov
icebp
sbb
push
add
outs
call
neg
shl
cmp
(bad)
das
mov
push
int
jp
cdq
outs
xor
sbb
inc
cdq
fiadd
shr
lea
out
popa
inc
push
es
repnz
lods
in
jecxz
sbb
mov
mov
popa
shl
movs
cmp
xchg
mov
cmp
fsubr
xchg
dec
ja
mov
push
or
and
inc
call
mov
cdq
(bad)
(bad)
sbb
xor
fwait
lock
mov
jmp
sub
xchg
sahf
pushf
inc
sub
test
adc
repnz
shl
push
push
in
inc
ds
pop
adc
jo
cwde
cs
or
push
fst
inc
ins
jp
movs
shl
loope
lods
out
pop
test
mov
push
fst
fdivr
fist
lahf
call
sbb
gs
out
push
into
cmps
add
mov
cld
push
push
pop
out
mov
sub
(bad)
adc
fmul
popf
loop
ins
push
inc
pop
sar
mov
cmp
aam
sbb
popf
in
iret
jnp
mov
loope
inc
cmp
es
and
mov
repz
mov
cmc
pushf
mov
out
jb
or
stos
addr16
and
fwait
pop
test
push
clc
(bad)
dec
sub
sub
inc
test
mov
xor
shr
pop
adc
loope
xor
mov
icebp
mov
bnd
push
out
pushf
repnz
mov
ins
cmp
lea
inc
pop
fsub
in
sbb
aam
jmp
cld
fisub
xor
aad
fimul
dec
jge
sahf
xchg
dec
enter
cs
dec
mov
outs
mov
jmp
and
(bad)
sar
retf
pop
mov
mov
lock
nop
jl
repnz
fsubr
ins
and
xchg
mov
push
adc
cld
fstp
repnz
pop
jb
loope
jl
nop
and
cmp
leave
rcl
xchg
loope
push
jno
into
rcr
retf
mov
jne
cmc
xchg
cmp
mov
mov
sar
and
das
jmp
inc
aas
push
push
push
fsubp
int3
xlat
xor
mov
imul
mov
fld
fld
inc
push
cmp
lahf
clc
and
sub
jb
jp
dec
inc
cdq
rcl
jmp
out
ins
jge
ret
adc
dec
jecxz
cs
sbb
jmp
xchg
push
jbe
jecxz
jg
cmp
cli
mov
imul
xor
std
test
mov
mov
call
jbe
mov
push
in
fsubp
jae
jg
fistp
lods
jge
bound
rcr
fmul
repz
xor
xor
aas
pop
or
sbb
jp
cmc
ficom
mov
int
xchg
jl
jnp
(bad)
ror
adc
outs
les
mov
dec
pusha
cli
pop
fwait
(bad)
addr16
mov
fisubr
dec
dec
or
mov
add
ds
(bad)
in
imul
not
das
jno
mov
in
jecxz
jb
sub
int3
mov
jmp
mov
bound
xor
imul
retf
out
jno
cmp
mov
lods
fisubr
(bad)
les
jl
xchg
mov
jo
jmp
xchg
or
int
adc
add
loope
xchg
imul
(bad)
fucomi
inc
mov
aaa
enter
neg
pushf
in
(bad)
lock
daa
mov
stos
fcom
fisttp
popf
push
call
ret
out
lods
add
fdiv
sbb
jb
cwde
and
xchg
dec
push
int
(bad)
push
das
dec
lods
loop
je
not
sbb
mov
add
bound
push
lods
add
push
jno
push
aaa
push
and
addr16
stos
push
rol
ss
cmp
pop
gs
inc
mov
adc
jp
inc
xchg
or
scas
fld
push
retf
rcr
movs
(bad)
daa
ins
xor
in
ss
sar
test
xchg
test
in
jb
sbb
cli
leave
sub
pushf
jae
and
mov
xor
jp
or
sub
or
adc
push
or
(bad)
lock
jmp
jo
loopne
or
(bad)
or
dec
add
in
inc
fnstcw
(bad)
push
lahf
cmp
mov
xchg
scas
cs
mov
dec
mov
scas
jle
cli
inc
and
push
xchg
and
(bad)
jb
loop
retf
shl
pop
imul
mov
cmps
nop
push
sti
rcr
pop
aaa
mov
repz
xor
call
int
or
xchg
inc
pop
xchg
xchg
mov
xchg
jmp
cmp
adc
sbb
bound
movs
mov
nop
pop
dec
bound
stos
adc
loope
movs
adc
icebp
pop
mov
enter
int3
int
inc
mov
(bad)
cld
sub
shl
shl
(bad)
cwde
(bad)
gs
inc
pop
dec
rcr
(bad)
pop
inc
mov
inc
les
jbe
or
jne
enter
test
out
imul
sub
repnz
xchg
or
aad
mov
sahf
sub
(bad)
dec
fst
mov
fcomp
int
xchg
lods
jae
out
push
adc
inc
jo
jmp
mov
inc
sbb
fwait
sbb
add
rcr
imul
pushf
scas
mov
sbb
xor
push
(bad)
scas
dec
xchg
xchg
dec
popf
aam
out
push
mov
loop
cmp
stc
jne
je
push
cmps
and
cwde
shr
jmp
inc
mov
stos
mov
sbb
mov
lahf
xor
bound
cmp
aas
sti
adc
es
dec
das
or
into
adc
in
call
mov
dec
sbb
add
xchg
inc
adc
sbb
jbe
jb
int3
(bad)
aaa
(bad)
or
mov
(bad)
not
es
loope
xor
jb
pop
xor
pushf
jnp
pop
nop
mov
xchg
jmp
add
(bad)
and
in
dec
inc
add
mov
inc
dec
fcom
jle
pop
xor
mov
rcr
jl
gs
jp
pop
int
shl
pop
mov
jl
fnsetpm(287
and
je
ret
leave
jbe
xchg
(bad)
pop
mov
retf
outs
sub
add
loop
dec
test
icebp
sub
mov
cld
jns
stos
sbb
test
ins
in
out
je
shr
in
sbb
xor
cld
call
jo
mov
xchg
xor
test
mov
mov
leave
or
jp
loop
les
xchg
adc
mov
cmp
jecxz
xchg
enter
cwde
das
push
adc
add
sbb
movs
mov
ror
aam
fisubr
mov
daa
pop
and
mov
sar
mov
cmp
mov
repz
pop
jne
or
cmps
dec
and
inc
sbb
in
jae
add
call
sbb
xlat
jo
xor
cmp
jns
xchg
and
mov
mov
dec
xor
in
mov
add
cmps
push
mov
ror
sub
iret
aad
loope
popa
clc
lea
jne
push
fsubr
mov
lahf
arpl
mov
inc
mov
fist
es
push
inc
xlat
sub
xchg
xor
push
rcr
ins
pop
ja
push
pop
xchg
mov
or
mov
std
sub
push
jl
and
dec
enter
movs
push
call
adc
fwait
push
adc
les
inc
es
mov
adc
mov
jle
and
test
xchg
stos
sbb
test
dec
(bad)
pop
sbb
adc
jmp
arpl
test
mov
xor
xor
jge
leave
ret
ja
xchg
repz
cs
test
pop
imul
xchg
in
rcl
loopne
add
inc
jns
(bad)
xchg
mov
xchg
adc
push
out
leave
ss
(bad)
mov
ret
jl
fldcw
jne
inc
xchg
add
mov
pop
fwait
test
clc
jae
and
leave
mov
jnp
pushf
dec
leave
in
mov
inc
xor
push
jno
pushf
xor
neg
jo
cmp
icebp
jns
push
cmp
std
dec
test
leave
add
add
add
add
pop
add
add
sbb
add
jb
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
push
aad
add
add
add
add
adc
add
add
fadd
add
add
aas
dec
jo
mov
inc
fisub
shl
or
(bad)
in
cmp
xchg
inc
sub
jns
mov
aad
dec
sub
cwde
scas
pushf
clc
jmp
and
and
sub
scas
nop
jge
dec
sub
lahf
stos
dec
sbb
jae
(bad)
inc
pop
ins
push
xchg
fdiv
push
test
or
in
repnz
stc
xor
sub
xchg
adc
movs
or
pop
jge
adc
imul
cmp
mov
sub
fdiv
ja
(bad)
retf
adc
xor
fild
sbb
push
mov
cmp
pop
into
cmp
aam
mov
sub
stos
jmp
adc
and
push
mov
dec
sub
sti
fstp
sub
retf
in
dec
mov
xchg
pop
jge
sub
push
push
xchg
jb
push
sub
out
mov
imul
add
inc
fstp
dec
jo
ret
sbb
popa
(bad)
js
inc
std
fmul
inc
imul
jp
dec
sahf
xchg
and
mov
mov
mov
outs
leave
scas
mov
cdq
add
bound
adc
jp
mov
pop
mov
data16
pop
ja
pusha
jns
or
xchg
loopne
push
mov
int3
cmps
(bad)
jge
or
push
or
sbb
mov
js
cmps
les
xchg
push
int3
jne
rol
sahf
popf
enter
sbb
in
mov
and
sti
and
outs
sbb
ror
jmp
pop
mov
sub
adc
xchg
call
fdivp
lahf
and
mov
in
or
jmp
cmc
data16
jnp
sbb
dec
test
sub
cmc
(bad)
push
cld
xchg
clc
and
std
adc
pop
data16
jle
cdq
popf
imul
aam
imul
lahf
xchg
mov
cmp
ins
push
jecxz
cmps
cli
add
in
sbb
push
cmps
les
jae
lods
xor
repnz
icebp
cmp
mov
and
test
mov
adc
(bad)
or
in
hlt
sub
icebp
and
push
iret
test
data16
out
jmp
outs
call
and
mov
js
les
and
test
dec
lds
mov
cmp
out
dec
imul
pop
xlat
cmp
js
mov
sbb
dec
out
jecxz
sub
cmp
pop
mov
lock
jmp
dec
pop
jmp
jg
xor
cmps
fs
cld
pop
xchg
fldcw
jmp
test
adc
adc
mov
(bad)
ins
adc
jbe
dec
mov
push
jecxz
and
out
fnstenv
jp
shl
inc
xchg
mov
test
leave
inc
pop
inc
jno
fiadd
adc
imul
dec
or
clc
inc
lea
adc
jbe
jae
adc
mov
pop
in
imul
mov
bound
or
jnp
clc
fwait
adc
push
loopne
nop
bound
inc
rcl
cld
in
adc
loop
dec
std
or
ror
std
ins
jae
enter
test
sub
test
xchg
shl
mov
gs
mov
or
xor
outs
shl
xchg
or
mov
xchg
bswap
pusha
push
cmp
push
pusha
ja
add
push
jl
fcmovb
loopne
mov
add
push
stos
shr
xchg
in
lds
adc
cmps
stc
hlt
lahf
pop
jle
data16
idiv
jl
loopne
in
push
adc
stc
push
mov
(bad)
shl
mov
icebp
div
and
popf
add
aam
dec
adc
jmp
add
pop
ficomp
shl
or
dec
in
inc
mov
loop
lock
fisub
lds
jg
sbb
add
test
out
mov
ss
fsubr
xchg
sub
xor
add
add
(bad)
xchg
cmps
sub
pop
xchg
mov
sbb
xor
clc
jne
es
pop
popf
(bad)
mov
int
add
mov
mov
xlat
push
cmp
out
sub
mov
popa
pop
push
jae
lods
fdivp
mov
push
or
cmp
mov
push
hlt
aas
or
ret
jo
ins
cmp
xor
mov
or
mov
dec
hlt
sub
fist
jecxz
inc
fucomip
cmc
push
push
mov
jb
stos
push
cwde
sar
fstp
and
mov
das
inc
aad
inc
retf
movs
jmp
lds
xor
mov
inc
push
xor
adc
lock
icebp
pop
xchg
pop
push
cmp
push
xlat
add
push
outs
jb
inc
stos
enter
jp
mov
xchg
retf
dec
mov
fs
jmp
push
mov
dec
ffree
mov
pop
arpl
lock
aaa
cwde
mov
xor
jns
adc
inc
add
cld
and
test
ret
or
sub
sbb
int3
dec
inc
pop
mov
add
mov
loopne
icebp
leave
scas
mov
imul
movs
sahf
dec
les
lods
cli
les
les
mov
inc
clc
add
jo
(bad)
jecxz
nop
inc
clc
das
test
fsub
jo
in
sti
sbb
dec
and
dec
mov
xchg
xor
mov
mov
xchg
mov
ins
jle
cdq
icebp
test
mov
es
push
pop
inc
pop
lods
cwde
fimul
(bad)
sti
loope
jp
mov
pop
sbb
mov
aas
or
cmps
jne
pushf
push
adc
sbb
pop
mov
in
sbb
imul
mov
pushf
push
or
jl
ins
int3
stos
mov
jle
mov
cmp
mov
pop
inc
lea
mov
cmps
push
xlat
sub
and
int
imul
jno
dec
dec
dec
(bad)
jmp
js
mov
sti
or
movs
sub
jne
pop
in
es
push
or
int
popa
jno
in
pusha
dec
mov
hlt
fistp
mov
xor
and
push
out
rol
cmp
leave
cdq
xchg
aaa
test
pop
pop
movs
cmc
push
dec
call
(bad)
adc
xor
sub
dec
arpl
fcmovbe
out
or
adc
adc
mov
inc
jp
(bad)
es
xor
rol
(bad)
out
pushf
and
pop
inc
add
lods
ss
mov
jne
sub
loope
xchg
cmc
pop
pushf
(bad)
bound
push
stos
test
sbb
mov
stos
push
inc
fst
xchg
repz
and
pushf
movs
stos
in
sub
mov
daa
xchg
in
test
xor
dec
cs
int3
push
dec
mov
jmp
(bad)
loope
add
and
dec
cli
xor
cld
pushf
mov
loopne
cwde
loope
dec
inc
pop
call
xor
jmp
adc
outs
cmps
xor
jae
sbb
dec
cmp
sub
pop
xchg
call
cmp
lahf
movs
pop
div
arpl
fsubr
mov
out
and
imul
xor
mov
in
push
mov
movs
es
dec
neg
loop
shl
add
jnp
sbb
cmps
shr
mov
pop
gs
(bad)
jmp
fisubr
out
pusha
mov
nop
mul
mov
mov
pop
lock
in
xor
xchg
daa
imul
pop
and
hlt
push
fs
enter
push
and
lds
cmp
out
pop
clc
xor
cmp
mov
fwait
cwde
(bad)
hlt
jp
xlat
cmp
xchg
pushf
mov
or
mov
(bad)
aad
sbb
outs
test
sbb
push
shl
dec
imul
(bad)
dec
mov
arpl
inc
cdq
movs
xor
sub
cmp
(bad)
mov
sub
ins
mov
fwait
mov
movs
loopne
aad
addr16
mov
pop
stc
shl
dec
movs
aad
aad
adc
jno
lahf
clc
xchg
xchg
repnz
mov
loop
xchg
pop
out
inc
mov
adc
mov
dec
test
xchg
add
xchg
or
and
pop
fucomp
xor
scas
inc
loope
push
dec
xchg
adc
(bad)
aad
and
mov
stos
dec
mov
mov
mov
adc
mov
mov
fcom
je
data16
push
pusha
sahf
mov
dec
(bad)
adc
mov
popf
jg
movs
mov
mov
mov
mov
and
push
pop
cmp
int3
mov
shl
mov
loopne
sbb
sbb
mov
push
loopne
xchg
(bad)
mov
loope
push
push
inc
(bad)
rol
push
jecxz
dec
xchg
test
jb
cmp
in
cmp
add
stc
outs
mov
dec
sub
daa
sub
dec
fwait
sbb
push
fcomp
push
gs
adc
je
mov
pop
sub
das
inc
mov
or
jecxz
call
sahf
mov
xor
or
movs
mov
sahf
push
cmp
dec
mov
cwde
les
mov
call
lock
int
or
inc
pushf
sbb
jmp
or
sub
popf
sbb
add
mov
mov
inc
fnstenv
adc
and
sti
xchg
loope
inc
aad
fiadd
out
inc
mov
xchg
rol
cs
(bad)
pop
push
mov
inc
inc
mov
arpl
jb
inc
retf
inc
test
test
jge
in
add
jb
xchg
fisub
inc
daa
scas
scas
ror
sub
stc
enter
and
(bad)
daa
movs
(bad)
aad
sub
mov
xor
mov
popf
popf
fcomip
js
mov
xor
loope
fidiv
in
sbb
arpl
lahf
test
jecxz
jno
mov
aad
pop
aam
dec
imul
es
push
or
adc
out
xor
jl
add
ss
sar
and
loop
clc
fcmovb
dec
in
sub
aas
dec
inc
inc
or
xor
jecxz
push
mov
jnp
sbb
sbb
mov
add
cmovae
adc
cdq
cmps
xadd
inc
(bad)
sbb
inc
add
sub
imul
aad
sahf
pop
add
rol
retf
dec
add
fdiv
add
add
add
add
add
out
add
add
xor
cli
and
les
lock
pop
xchg
mov
add
paddsb
sbb
dec
scas
out
sbb
cmp
ret
sahf
add
sub
shl
mov
call
push
cmp
fisttp
into
outs
mov
inc
xor
int
pop
add
and
mov
add
aad
push
or
xor
mov
dec
xlat
mov
(bad)
(bad)
sub
imul
jbe
mov
jno
jmp
mov
in
leave
loopne
pop
js
jmp
outs
cs
adc
mov
push
push
mov
push
cmps
popf
test
jecxz
jae
(bad)
stc
mov
mov
jns
xchg
retf
repz
xor
jmp
sub
shl
push
push
setg
jbe
lods
push
mov
retf
popf
cwde
inc
sub
lahf
fimul
inc
mov
neg
add
add
popf
sub
pop
cmp
xor
sub
into
mov
mov
pusha
inc
movs
fld
ss
xor
out
or
imul
mov
push
ins
aaa
stc
test
pop
(bad)
mov
shr
ret
mov
xor
or
lahf
jbe
popf
hlt
push
sbb
push
inc
push
loop
das
mov
xchg
arpl
xchg
pop
test
and
or
jne
pushf
mov
xor
mov
aam
imul
ins
pop
dec
cld
mov
ror
ss
scas
(bad)
pop
bound
bound
scas
fwait
and
cli
ds
mov
jl
aad
daa
sahf
sbb
mov
pop
xchg
dec
sub
mov
imul
test
pop
cmc
and
imul
xchg
mov
pop
mov
xor
ror
mov
pop
xchg
out
scas
inc
jg
sub
fndisi(8087
inc
repz
(bad)
push
add
and
inc
dec
pop
hlt
imul
mov
aas
sti
xchg
dec
and
cmp
xchg
mov
cmps
jecxz
out
dec
js
(bad)
retf
inc
test
int3
push
out
(bad)
pusha
and
scas
rol
ins
jle
pushf
ins
mov
repnz
sar
(bad)
hlt
push
add
enter
loope
jp
cwde
push
retf
stc
shl
mov
iret
stos
adc
pop
xchg
(bad)
push
inc
add
xchg
inc
shl
jo
inc
sub
fcomp
loop
cmp
mov
retf
cmp
cs
mov
mov
add
retf
lock
mov
adc
rol
inc
out
push
xchg
jae
pop
stos
push
movs
mov
inc
and
pop
or
adc
loop
in
jmp
jno
mov
test
fcomp
test
add
xlat
add
in
push
add
push
sti
(bad)
daa
rol
mov
mov
push
cmp
xchg
mov
jne
(bad)
jg
pop
xchg
outs
mov
retf
adc
add
mov
push
push
adc
jae
xchg
jns
mov
push
push
ins
mov
cmp
in
or
push
and
pop
mov
loope
mov
lods
rol
aad
cmp
push
inc
jg
out
popf
daa
or
aas
mov
push
cmp
mov
test
pop
mov
dec
sti
xchg
add
in
inc
gs
fucomip
aam
daa
f2xm1
and
je
add
cmp
(bad)
imul
cmp
jmp
js
fsub
jmp
sub
and
lock
ds
aaa
out
sub
cmp
sbb
cmp
retf
and
inc
cdq
inc
bound
sub
pop
rcl
aas
loop
cs
xchg
push
fisubr
mov
mov
imul
cli
out
daa
out
stos
mov
add
cmp
cwde
arpl
scas
jg
inc
or
mov
or
sub
mov
push
fst
add
sub
xor
ja
jmp
sbb
add
sahf
hlt
xor
mov
push
push
xor
daa
lea
fsub
jne
xor
mov
es
pop
inc
nop
outs
cs
mov
out
jne
(bad)
fistp
fstp
pop
jb
pushf
bound
mov
cmp
cli
dec
or
and
jne
aad
stos
push
into
in
mov
xchg
mov
mov
push
jno
inc
jnp
les
sbb
(bad)
test
adc
clc
aad
adc
idiv
mov
inc
sub
cmps
daa
mov
mov
neg
adc
push
adc
enter
out
pop
cwde
addr16
dec
pop
movs
(bad)
add
popf
imul
enter
push
pop
inc
sbb
dec
pop
out
xchg
lods
pop
or
cld
mov
jno
pusha
dec
mov
clc
pop
(bad)
jns
pop
addr16
jge
add
add
mov
dec
dec
pop
int
push
leave
inc
aas
jmp
mov
xchg
inc
loopne
sub
and
js
jae
jmp
jno
retf
mov
and
out
cmp
pop
ins
push
mov
mov
js
mov
dec
fst
neg
repz
or
jae
cwde
(bad)
dec
dec
cld
xor
mov
or
stc
fisub
jae
jbe
fst
push
or
rol
jle
pusha
sbb
cmp
lods
sahf
push
mov
in
xor
push
sub
sti
cwde
inc
pop
mov
popf
(bad)
mov
loopne
hlt
int3
xchg
dec
mov
jne
or
ret
out
sub
scas
mov
test
jnp
jb
int3
ror
push
shl
sub
inc
push
out
push
imul
jno
cld
jbe
jnp
pop
mov
sti
cmp
addr16
mov
xchg
mov
lds
movs
cwde
mov
addr16
mov
mov
xor
inc
clc
jge
aaa
sbb
test
lods
and
imul
pop
inc
mov
(bad)
jge
mov
push
push
data16
jns
xchg
test
ds
test
scas
addr16
push
lea
dec
jecxz
stos
sbb
add
ins
movs
jg
jnp
or
cs
js
std
pop
ins
and
xchg
cmp
cmp
push
cmp
cmp
sbb
dec
add
mov
cmp
or
mov
and
out
imul
push
outs
adc
fnclex
pop
in
push
mov
out
movs
inc
adc
mov
lock
jecxz
pushf
or
ret
stc
sub
(bad)
nop
sti
add
jae
push
gs
and
and
cmp
cli
sub
and
leave
pop
mov
inc
sbb
xor
and
ret
mov
in
(bad)
or
lahf
and
xor
push
es
loope
jbe
scas
xor
cmps
bound
adc
inc
fidiv
daa
(bad)
and
jns
arpl
std
add
xchg
mov
cmp
push
mov
jg
cmp
and
xchg
mov
jmp
xlat
fs
push
dec
into
lock
dec
dec
stos
outs
cmp
adc
jnp
jg
cmp
fisubr
mov
cs
push
xchg
and
lahf
pop
adc
cmp
cmc
cld
mov
cmc
aad
push
mov
mov
mov
fidivr
cmp
jmp
jae
xchg
xor
cmp
or
adc
call
add
push
add
cmps
loop
pop
pop
xor
sbb
mov
mov
outs
dec
mov
add
(bad)
arpl
dec
mov
xchg
retf
bswap
adc
jnp
xor
sub
popa
mov
or
and
xor
repz
mov
daa
mov
mov
or
repz
mov
out
in
or
push
pop
add
xor
xchg
cs
loope
inc
or
lds
sub
outs
add
mov
mov
fist
fstp
cmc
lahf
daa
loop
dec
out
mov
out
inc
jmp
mov
ds
sahf
xchg
aad
stc
xor
ins
mov
pop
out
xor
jecxz
outs
hlt
xor
dec
xchg
adc
cmc
nop
push
aam
es
push
mov
push
or
xor
xor
stos
daa
or
cwde
cmps
mov
lods
loop
out
arpl
push
push
pop
inc
mov
cmp
(bad)
loopne
sti
mov
inc
xor
jmp
inc
sub
sahf
int
enter
fstp
outs
cmp
mov
xor
out
stos
inc
pop
bound
sbb
inc
lds
popf
cmp
jp
jbe
push
lahf
(bad)
pop
bound
push
lock
cwde
sbb
cmps
inc
int3
push
sbb
fwait
cmp
sbb
(bad)
scas
adc
jmp
sub
xor
and
cmp
dec
sar
gs
push
and
inc
cmp
nop
xchg
mov
dec
fld
lahf
pop
test
shl
and
je
mov
cmp
or
mov
mov
sub
jl
sbb
call
ror
inc
fwait
in
mov
inc
cmps
add
daa
imul
bound
inc
mov
bnd
loopne
lahf
mov
idiv
test
jae
sbb
xor
ja
mov
push
mov
stc
sub
push
pop
mov
es
mov
fadd
cmp
fwait
nop
push
sbb
test
pusha
add
dec
fwait
add
(bad)
ds
mov
push
and
dec
in
mov
test
inc
mov
xor
gs
adc
pop
add
sbb
call
shl
mov
pop
push
push
jb
add
ins
cmp
sbb
lods
jmp
xchg
mov
and
js
inc
mov
loope
pop
or
call
push
outs
push
or
jp
or
ss
adc
out
mov
inc
daa
dec
scas
cmp
mov
in
mov
sbb
loop
pop
popf
sbb
or
push
adc
jb
je
mov
shl
add
add
add
add
sbb
add
add
add
add
add
add
mov
mov
add
add
add
add
add
enter
add
add
add
add
add
add
add
add
add
add
out
cmp
add
add
push
inc
add
add
add
add
add
inc
repnz
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
mov
jle
add
add
jo
add
add
xchg
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
mov
add
add
sbb
setno
add
arpl
lods
inc
test
jns
jge
dec
jecxz
mov
movs
mov
jno
push
and
(bad)
jecxz
in
mov
inc
add
fcmovnbe
mov
nop
retf
cmps
imul
xor
push
mov
add
mov
xlat
and
push
cmp
or
fisubr
outs
mov
mov
sub
jl
outs
ret
aad
in
pop
pop
div
xchg
in
mul
add
adc
ins
fist
mov
ret
xor
shr
sub
lods
bnd
push
inc
xchg
xchg
mov
push
enter
retf
pop
out
ja
cwde
out
push
fxam
fdivr
in
int
mov
or
loope
adc
in
leave
(bad)
push
jp
scas
pusha
dec
pop
cwde
test
pop
xor
pop
test
mov
(bad)
xchg
jno
or
cs
xor
aam
mov
(bad)
std
imul
out
aam
cmp
jns
push
out
outs
xor
mov
fldcw
or
adc
jo
inc
repz
inc
sar
fiadd
(bad)
jge
push
in
movs
jb
mov
xchg
push
lahf
test
sbb
fldcw
jnp
mov
je
lods
cmp
push
lock
jne
jle
imul
cmc
data16
and
xchg
in
add
dec
addr16
fcom
cdq
or
xor
cmp
into
ins
setno
mov
cmp
dec
inc
mov
push
mov
pop
jge
and
jns
aam
retf
mov
pop
lods
pop
out
pop
test
dec
rcr
xor
icebp
popa
(bad)
repz
pop
mov
nop
mov
out
jbe
jecxz
mov
retf
test
(bad)
mov
fwait
sbb
jo
inc
scas
ror
aad
mov
pop
or
adc
fsubrp
cmp
outs
es
and
jne
out
shr
jmp
aas
out
ds
fwait
in
xchg
push
je
fnstenv
push
pop
or
xchg
sbb
mov
pusha
jge
or
bound
or
pop
dec
stc
pop
into
hlt
push
imul
or
je
sti
out
rcl
xchg
loope
jne
(bad)
retf
xor
and
pop
movs
fs
fld
mov
xchg
enter
jo
test
lods
cmc
and
repnz
int
cmp
ja
pop
cld
sbb
sub
retf
pusha
cmps
cmp
sbb
sub
cmc
xchg
popa
jge
cld
stos
out
test
ror
sbb
scas
inc
push
je
fsub
inc
jp
xchg
gs
inc
jmp
pop
fdivrp
mov
push
loope
cmps
cdq
push
ret
pop
cmp
dec
xor
aam
sahf
xchg
scas
mov
fstp
pop
inc
ss
repnz
fbld
mov
idiv
push
das
sahf
or
mov
mov
jmp
aaa
sbb
adc
pop
imul
mov
mov
fiadd
cli
push
dec
inc
and
mov
(bad)
dec
jns
ficom
inc
ret
pop
(bad)
aad
in
or
cli
fwait
jecxz
and
jge
scas
rcl
push
push
arpl
dec
mov
mov
mov
mov
je
cwde
stos
jmp
(bad)
frstor
loope
enter
rol
out
pop
xor
lods
mov
or
jno
mov
daa
cmp
mov
ror
jb
dec
ds
sub
adc
pop
mov
test
sbb
adc
arpl
push
mov
xchg
xchg
movs
cmp
cmp
mov
sub
adc
scas
cld
rcl
popf
ins
or
les
mov
mov
mov
or
sbb
mov
or
adc
xor
inc
mov
sar
pushf
arpl
lea
xor
push
lea
cli
xchg
int3
lea
lea
fild
and
and
mov
sbb
lds
mov
add
in
imul
sar
mov
das
bound
test
cld
sbb
shl
fsub
or
(bad)
fist
loopne
pop
add
ret
mov
out
fldenv
pop
fst
add
adc
cmp
or
pop
xlat
shl
mul
sbb
les
jnp
ins
pop
pop
hlt
xor
and
pop
xor
sbb
outs
ret
mov
movs
repz
and
pop
outs
cmp
fs
cmp
xor
nop
pop
push
and
ins
shl
adc
xchg
cmp
xchg
stos
or
sbb
inc
pusha
call
das
xchg
sbb
pop
xlat
jg
pop
lods
loopne
inc
jg
cmp
and
dec
mul
cld
movs
fistp
sub
push
(bad)
aam
or
mov
sbb
mov
sub
adc
div
fcom
mov
inc
lods
jmp
mov
xchg
ror
jb
mov
es
cwde
es
dec
enter
or
dec
pop
and
pop
add
pop
xor
jnp
or
push
xchg
xor
lods
pop
cmps
je
imul
dec
test
jl
sti
ins
inc
jle
je
fsub
sbb
inc
cmp
pop
and
push
fcom
ss
sbb
aas
imul
movs
jbe
xchg
sti
pop
les
mov
dec
stos
arpl
push
rol
push
xchg
pop
sub
push
js
into
mov
cmp
mov
int3
jo
pusha
pop
gs
cmp
lea
inc
das
scas
sbb
inc
loopne
add
jl
push
add
jae
mov
pop
scas
pop
sbb
in
xchg
iret
add
adc
ins
movs
or
push
gs
adc
in
cmp
sbb
scas
(bad)
ret
movs
mov
ds
std
or
mov
inc
mov
(bad)
cmp
enter
push
dec
aas
sbb
hlt
pop
dec
aas
sbb
je
cmp
daa
jmp
popf
popf
fadd
repz
xlat
mov
out
xor
adc
ror
aam
xor
(bad)
sar
call
mov
call
aaa
sbb
push
lea
jmp
jb
ret
inc
jmp
and
(bad)
mov
shr
or
sbb
ja
mov
inc
add
jl
xchg
xor
enter
sbb
cmps
stc
inc
sub
movs
mov
cmps
(bad)
ins
test
xor
fmul
imul
adc
cs
fwait
lods
xchg
stc
setp
mov
adc
mov
xbegin
add
inc
cld
push
cmp
popf
dec
add
jge
xchg
add
sbb
xor
fwait
pop
shl
test
scas
leave
cs
or
jmp
xor
cmp
adc
dec
push
fstp
mov
pop
sahf
leave
inc
jns
push
rol
jne
popa
jns
add
push
and
push
cmp
mov
inc
mov
mov
inc
sub
aam
and
xor
xor
or
jecxz
ret
jbe
cmp
ucomiss
fcom
pushf
mov
shl
sahf
inc
dec
xor
xchg
adc
xchg
repz
jmp
jo
outs
mov
into
jcxz
mov
adc
dec
sahf
and
js
sti
cwde
mov
paddw
cmp
leave
sub
mov
push
sub
mov
xchg
jno
and
leave
mov
pop
add
ins
mov
push
call
enter
sub
inc
div
lahf
or
add
mov
rcl
inc
sets
aad
mov
push
sbb
push
add
mov
mov
sti
sbb
mov
pop
mov
mov
les
into
sbb
sahf
enter
in
push
xor
loop
push
xor
push
not
push
(bad)
idiv
and
mov
out
fld
xor
cld
std
mov
ins
in
cdq
addr16
jnp
cwde
dec
ds
jecxz
jmp
test
ja
or
nop
idiv
jle
jge
ja
aam
pop
mov
aas
adc
mov
sbb
or
mov
fucomip
ss
pop
xor
cdq
adc
jecxz
push
or
cmp
ja
sti
mov
call
ins
loopne
jecxz
lods
(bad)
out
xchg
inc
jae
jno
fadd
pop
jle
jbe
adc
neg
pusha
popa
popf
lods
fwait
mov
test
mov
xchg
cdq
int
sub
mov
adc
mov
loopne
lds
push
adc
call
inc
jmp
or
sbb
ror
jno
outs
(bad)
aaa
(bad)
xlat
imul
mov
pop
and
inc
gs
jl
add
ja
ss
mov
mov
dec
retf
fwait
push
test
repz
push
jb
jle
dec
mov
call
ins
mov
ins
in
xor
push
sti
popf
ror
jb
mov
imul
add
int
mov
pop
adc
mov
retf
clc
dec
mov
into
call
mov
jmp
cmps
jns
jo
fisubr
sbb
push
sub
ja
call
push
ja
xor
fwait
pop
cmps
add
sbb
mov
pushf
jb
stos
adc
cmps
out
cmps
sbb
rcr
mov
inc
mov
xchg
add
push
lea
mov
cmp
outs
pop
mov
push
and
mov
cli
movs
repnz
pop
dec
add
pop
jecxz
ds
pop
inc
bound
cmp
mov
sub
ret
std
and
mov
sbb
ins
neg
dec
xor
sbb
test
iret
cli
jecxz
(bad)
mov
repz
xor
sub
enter
push
sbb
sbb
add
pop
cmp
stos
ja
pop
mov
mov
call
mov
jmp
cdq
lods
jbe
or
and
jmp
mov
dec
dec
pushf
fsub
out
push
jmp
test
add
mov
mov
outs
cmp
fld
mov
outs
call
inc
clc
fcmove
xor
dec
mov
int
add
add
sbb
add
add
ins
add
add
add
add
mov
add
add
add
add
pop
or
add
add
xchg
add
adc
add
add
add
or
sub
add
mov
add
add
addr16
popf
cmc
cs
addr16
sub
enter
repz
push
xor
push
xchg
add
push
xor
xor
push
test
mov
mov
inc
call
out
(bad)
mov
push
adc
xor
pusha
mov
dec
inc
test
pop
movs
dec
or
ss
pop
cmps
push
pusha
call
shl
push
mov
(bad)
sbb
shl
int
test
daa
(bad)
clc
xchg
pop
and
ins
and
mov
dec
mov
sbb
icebp
popa
fwait
popf
dec
pop
add
jmp
les
add
mov
sti
iret
popa
xor
cmps
ret
xor
inc
or
jg
out
mov
cmps
pop
xchg
push
sbb
mov
sub
dec
add
lahf
add
mov
fldcw
xor
mov
add
xchg
push
push
and
mov
sbb
push
(bad)
lods
sbb
out
push
addr16
dec
mov
jg
cmps
(bad)
pop
mov
mov
xchg
push
mov
mov
jne
fwait
ret
push
push
mov
cmovb
mov
and
sahf
int
data16
cmp
stc
sbb
jge
int3
cs
sbb
mov
scas
push
shr
push
inc
add
pop
lods
js
pop
popf
shr
xchg
jl
nop
stos
inc
dec
cmp
add
sti
mov
add
xor
dec
push
imul
push
xchg
xchg
ret
in
jl
xor
jb
fs
cdq
(bad)
inc
push
shr
enter
inc
mov
add
lds
sti
push
and
or
je
or
jmp
push
stos
int3
adc
pop
or
add
mov
call
outs
rol
call
aaa
int
sub
and
vxorpd
mov
and
loope
(bad)
loope
sub
test
push
inc
adc
repnz
cmp
mov
push
iret
xor
xchg
jo
push
(bad)
dec
dec
les
les
xlat
xchg
push
dec
int
inc
jp
call
lods
jl
sar
jno
sub
ins
into
aas
inc
adc
retf
sub
dec
std
imul
adc
jns
fild
fwait
cmp
sub
js
cmp
adc
pop
inc
inc
xchg
int3
xchg
shl
jmp
out
(bad)
loop
test
adc
pop
xadd
xor
cmps
pop
push
addr16
test
icebp
xor
and
mov
push
inc
dec
pop
adc
scas
dec
xchg
pop
in
push
pop
mov
mov
pop
cmc
iret
jo
pop
or
sub
ror
or
or
scas
bound
sbb
mov
mov
scas
ret
lods
xlat
nop
add
lds
sub
dec
push
das
xchg
dec
dec
push
inc
clc
ins
cs
cli
cmp
cwde
jp
pop
in
xor
sbb
dec
push
fdivr
or
popa
mov
push
(bad)
push
mov
loop
push
int3
js
xchg
dec
fwait
out
iret
cld
aad
stc
repz
int3
push
loop
clc
xor
fst
jns
stos
fs
bound
ins
popa
mov
cmp
and
movs
fwait
in
sbb
cmps
cmps
call
je
pop
sbb
mov
pop
mov
xchg
pusha
retf
pop
adc
mov
xchg
call
pop
js
js
loope
mov
jbe
cld
xchg
jp
pop
inc
js
mov
mov
dec
ror
jo
pop
arpl
test
xor
xor
dec
and
ins
mov
clc
adc
dec
gs
imul
nop
loopne
pushf
fst
seto
mov
imul
add
cmp
push
cld
ja
pop
cmp
fwait
push
stos
xchg
imul
push
mov
test
or
(bad)
jns
jo
bound
xchg
rcl
mov
cmps
out
in
and
or
xor
(bad)
sub
sub
or
push
ror
aas
and
and
mov
lods
call
es
add
rol
dec
scas
sar
lock
sub
enter
sar
add
mov
inc
outs
adc
inc
push
push
cmp
pop
mov
xor
fld
shl
jne
dec
cmp
imul
inc
mov
retf
add
ins
in
mov
icebp
ja
push
add
cmp
out
and
es
bnd
jmp
xchg
mov
aas
imul
ret
adc
pushf
adc
(bad)
scas
test
aam
rcr
xor
rcr
xor
jmp
mov
fisub
test
call
inc
add
xchg
adc
retf
setns
ins
inc
idiv
adc
adc
pop
sub
clc
cmps
mov
add
and
cmp
inc
mov
pop
jecxz
cmp
pop
pop
mov
repnz
mov
cs
push
fimul
mov
cwde
mov
inc
mov
ffree
push
sub
in
inc
ds
push
add
daa
mov
cdq
jmp
in
add
sar
push
mov
aad
mov
add
mov
jmp
sbb
fcomp
fbld
add
or
dec
ret
int3
aam
loop
mov
and
cmp
lock
inc
push
pop
in
fcomp
mov
push
fcmove
xor
and
leave
pop
cmp
test
popf
(bad)
repnz
int3
sub
shl
clc
and
push
cs
push
shl
mov
iret
fmul
stos
xlat
mov
jo
mov
adc
mov
inc
cmp
in
inc
shl
outs
das
mov
lds
pop
inc
and
loopne
mov
cdq
xor
imul
call
jnp
popf
fst
mov
mov
mov
cmp
sar
push
outs
bound
out
dec
ds
les
inc
jmp
scas
dec
(bad)
(bad)
rcl
jl
cmp
sahf
int3
mov
inc
cmp
imul
add
sti
les
pop
mov
mov
jnp
jnp
mov
mov
mov
xchg
inc
mov
inc
test
les
fs
sub
jns
xchg
ret
call
nop
mov
aas
jle
xor
pop
cmps
imul
fcmovu
push
mov
sahf
lods
pop
jl
clc
aad
idiv
fstp
cli
in
mov
mov
xchg
mov
in
inc
sub
vorps
std
dec
rcl
test
out
les
lods
jle
or
(bad)
fidiv
sbb
fisubr
aas
out
jo
ret
mov
and
dec
sar
cmp
ins
push
in
loope
mov
in
adc
ins
jp
cwde
jne
mov
pop
dec
movs
fs
push
or
repz
push
cmp
jle
cdq
inc
pop
std
in
add
retf
loop
fisubr
and
add
popf
(bad)
adc
dec
or
and
or
js
mov
and
aam
pushf
cmp
push
mov
jno
push
mov
sbb
sbb
pop
nop
int
or
dec
out
jns
jmp
test
test
ror
pop
stc
fwait
sub
dec
ins
mov
mov
jnp
cld
ds
clc
and
ja
daa
nop
inc
sbb
mov
mov
mov
sub
fld
pop
add
xchg
aaa
mov
(bad)
mov
sahf
xor
sub
fs
scas
(bad)
data16
cli
xchg
mov
xor
lds
pop
mov
and
ja
out
retf
mov
xchg
or
bnd
pop
mov
dec
mov
cmp
(bad)
adc
retf
in
sbb
push
xor
mov
mov
or
mov
dec
call
adc
inc
add
pusha
jne
jne
sbb
test
sub
lods
push
cmp
jp
shr
fdivr
retf
mov
pop
(bad)
inc
inc
cdq
aas
or
aad
fsubr
push
pusha
mov
stos
lea
les
in
cmp
or
and
xchg
iret
cwde
cdq
fbld
mov
cs
add
mov
iret
loopne
xchg
lock
push
mov
and
or
xchg
loope
lods
xor
scas
int3
adc
mov
or
gs
mov
loopne
outs
shl
dec
dec
xor
scas
test
push
lods
div
adc
mov
dec
xchg
pop
nop
sti
rol
sar
add
adc
dec
adc
push
pop
les
scas
popf
pop
rol
sbb
inc
mov
rol
mov
xchg
cmc
sub
fs
stos
ret
mov
push
push
aad
jmp
pop
(bad)
ss
inc
xor
in
(bad)
jecxz
push
(bad)
mov
push
xchg
stos
popa
xor
mov
add
mov
jae
int3
pop
mov
dec
sbb
mov
loop
lock
jl
cmps
(bad)
push
jl
lds
mov
pop
call
pop
jmp
ds
mov
in
push
push
(bad)
or
and
loope
retf
and
cmps
scas
and
ins
add
mov
imul
cmp
dec
loope
mov
and
in
cmps
and
data16
out
adc
jecxz
mov
mov
retf
out
adc
xchg
add
dec
js
sbb
push
sub
in
and
sub
jmp
hlt
cmps
std
std
pop
ins
jmp
xchg
or
or
nop
scas
add
push
mov
push
stos
cmp
icebp
sbb
mov
adc
sbb
inc
sub
mov
loop
enter
sub
je
pop
call
into
data16
pop
loope
inc
xchg
push
and
push
mov
inc
adc
xchg
add
(bad)
mov
repnz
mov
repz
ds
adc
jo
loopne
call
dec
repz
loop
mov
and
push
pop
mov
fisttp
pusha
out
fdivr
test
mov
cmp
xlat
push
sbb
mov
scas
imul
out
xchg
js
mov
add
add
add
add
les
add
repnz
add
add
add
into
add
add
add
add
add
add
add
cmp
add
add
add
dec
adc
neg
cld
push
cmc
push
jmp
in
cld
(bad)
loopne
mov
icebp
adc
shr
(bad)
pop
jno
in
mov
jo
xchg
xor
ret
jecxz
aaa
pop
jo
ins
iret
jle
dec
retf
mov
jg
xchg
icebp
movs
pop
sub
and
clc
lods
xchg
sbb
jns
cmp
aam
leave
icebp
cmps
loopne
add
dec
scas
adc
adc
fld
das
pop
mov
mov
inc
sub
je
or
or
(bad)
jecxz
inc
inc
jne
inc
fisub
aad
sbb
xchg
gs
mov
mov
cs
mov
mov
out
rol
daa
cmp
in
test
pop
test
adc
or
cwde
cmps
lds
in
fiadd
call
sti
ret
mov
cdq
xor
pop
ds
xor
sbb
mov
push
jo
jmp
jle
shl
dec
push
mov
xchg
movs
add
scas
xor
xor
add
fidivr
sbb
fdivr
mov
addr16
cmps
mov
cld
jne
shr
lds
ds
push
fisub
fdivr
idiv
jno
xlat
sub
and
pop
inc
xchg
dec
retf
mov
repnz
sub
push
int
mov
lods
loop
adc
sbb
add
scas
and
imul
ins
push
and
cmps
in
push
xchg
and
jmp
pop
and
ficom
js
fsub
dec
mov
cmp
add
cmp
test
loope
or
aas
xor
push
jge
test
ret
mov
ds
fisttp
jnp
push
adc
dec
shr
mov
loopne
pop
xlat
or
popa
out
jnp
pop
int
(bad)
jae
es
ds
sahf
inc
into
cmp
pusha
jp
sahf
pop
rcl
sub
push
inc
(bad)
sahf
jnp
rcl
pop
fadd
sub
push
push
jnp
cmps
pop
cwde
(bad)
push
ins
inc
(bad)
mov
cld
out
or
push
jb
(bad)
and
cmp
mov
imul
dec
push
push
dec
shr
mov
jnp
pop
xor
(bad)
adc
jne
mov
mov
in
psubb
clc
pushf
fcomp
xchg
cmp
jle
ret
stc
add
wrmsr
xor
ins
outs
and
sbb
mov
jg
push
adc
loop
jne
sar
daa
aam
cld
loopne
dec
sub
mov
mov
movs
and
ror
leave
dec
jbe
ds
jmp
movs
or
jl
push
es
fcmovnbe
je
fcomp
into
xor
jo
repnz
imul
xchg
es
push
nop
jns
outs
and
sahf
ret
ret
xchg
push
lock
jno
sahf
sbb
inc
imul
fsubr
sub
sbb
sbb
xchg
(bad)
in
es
pop
jp
mov
xchg
sbb
fs
stos
pop
push
xchg
xchg
jnp
mov
test
(bad)
xor
(bad)
xchg
cmps
mov
arpl
fdivp
jnp
adc
mov
mov
add
mov
pop
into
scas
arpl
xor
mov
fs
mov
xchg
sbb
mov
div
cmp
dec
mov
fistp
adc
cli
in
in
fild
jg
outs
dec
and
cld
test
out
ins
push
in
inc
push
pop
mov
inc
inc
not
jnp
dec
aaa
fist
neg
loop
test
jmp
sub
imul
jmp
mov
call
stos
inc
lahf
cld
xor
and
push
ret
mov
mov
(bad)
adc
push
int
push
adc
cmp
stos
dec
scas
xchg
mov
mov
xchg
add
and
adc
(bad)
loope
pusha
call
and
sub
stc
xchg
lods
rcl
adc
mov
test
jnp
popf
(bad)
test
xchg
mov
pop
outs
mov
les
pop
jbe
movs
jo
sub
xchg
in
outs
pop
jno
mov
sub
mov
fadd
inc
test
jg
cmps
ds
out
ficomp
inc
loopne
addr16
data16
push
xchg
popa
ret
inc
inc
lds
je
int
mov
repnz
jmp
test
and
mov
pop
and
js
out
pushf
(bad)
xchg
(bad)
into
sbb
ds
mov
dec
add
add
and
stos
inc
icebp
xchg
enter
push
pusha
test
cmp
and
arpl
div
in
dec
pop
rcr
mov
or
mov
xchg
mov
ins
aad
add
cwde
jmp
cwde
pop
stos
lock
sub
in
retf
dec
fisttp
loope
mov
inc
pop
retf
pop
call
fcomp
xchg
mov
aam
add
sti
sub
loop
add
xor
dec
lods
xchg
jae
add
es
test
jbe
mov
dec
adc
pop
gs
fdiv
sub
(bad)
sti
adc
adc
sahf
das
enter
or
mov
pop
call
ret
sti
sbb
rcr
popf
popa
loop
je
sti
jb
dec
pushf
iret
sbb
imul
sub
or
or
push
popa
ret
fcom
shl
shl
mov
mov
sub
sar
test
mov
ficom
pop
mov
xchg
add
mov
sahf
neg
movs
jg
mov
mov
popa
punpckldq
inc
cdq
(bad)
cmps
cmc
jne
inc
repz
sar
dec
out
sbb
mov
rcr
jmp
pop
xchg
ins
jb
(bad)
jae
scas
ss
stos
lods
imul
xchg
mov
mov
add
pop
scas
imul
inc
xor
jns
call
dec
in
outs
sbb
xor
sub
adc
imul
out
cmp
fsubr
maxps
jmp
idiv
xor
fsub
stc
push
aad
lods
dec
in
lahf
mov
cld
pushf
sahf
daa
cdq
std
mov
hlt
cmp
add
dec
rcr
sub
cmp
es
out
add
mov
outs
ret
xchg
jo
mov
cdq
push
int
ret
enter
fldlg2
fs
add
clc
(bad)
xor
cmps
jmp
daa
mov
inc
xor
pushf
fst
adc
adc
call
jl
mov
sbb
in
sub
std
add
dec
dec
fmul
retf
in
cmps
cmp
mov
fs
push
fst
jge
xchg
lock
fimul
push
ret
mov
xor
jns
add
inc
and
mov
or
in
(bad)
mov
inc
push
mov
adc
dec
out
rcl
int
inc
add
leave
cmp
xchg
xchg
xchg
aas
xchg
lds
int
mov
nop
iret
out
jp
call
je
fwait
add
xor
adc
pop
push
pop
ins
js
and
ds
mov
jbe
push
dec
dec
push
cdq
(bad)
adc
mov
jge
cld
xor
shl
dec
ins
stos
sub
std
mov
push
mov
bound
mov
or
inc
test
dec
sbb
frstor
mov
push
mov
(bad)
and
cld
xor
add
lock
jl
mov
fcomip
bound
dec
or
adc
sar
daa
sub
imul
xchg
and
sub
inc
hlt
cs
mov
enter
jmp
mov
dec
xor
pushf
das
cmp
add
int3
sub
xor
inc
shl
pusha
shl
int3
ds
add
aas
add
dec
mov
ds
sbb
retf
retf
out
stc
sbb
sub
pusha
mov
pop
xor
scas
arpl
jle
repz
and
jge
in
ss
ds
add
and
pop
arpl
aad
cmp
cmp
loopne
sub
aas
cs
cmp
aam
aad
pusha
bound
xor
pop
inc
pusha
into
stc
mov
inc
fld
popf
sub
scas
add
out
mov
inc
neg
repnz
(bad)
cmp
rcl
outs
adc
cmp
ret
lea
gs
dec
pop
(bad)
sahf
lock
dec
inc
sbb
nop
mov
add
movs
adc
sub
adc
call
sub
test
lds
mov
pop
mov
scas
adc
jo
fs
jno
ins
dec
out
sti
cmp
movs
adc
loopne
loop
inc
inc
outs
mov
add
jmp
xchg
push
mov
adc
lds
pushf
leave
sub
adc
dec
mov
(bad)
inc
jbe
sbb
out
fwait
ror
push
push
mov
adc
mov
adc
or
push
out
adc
in
or
mov
push
cld
jno
and
mov
mov
and
leave
xor
fimul
jl
cmps
retf
adc
call
jbe
fist
fwait
mov
pop
inc
and
dec
jmp
inc
jl
into
dec
xor
jo
cdq
xor
out
pushf
sbb
xor
imul
std
cli
pop
out
jb
test
mov
stos
or
jnp
or
inc
mov
xor
test
sbb
pop
xor
pop
and
ja
test
and
in
push
repz
mov
dec
aad
cwde
sti
rcl
or
dec
mov
push
popf
sbb
pop
push
div
shl
sub
xchg
xchg
ss
push
(bad)
fmul
inc
leave
fldpi
leave
aas
call
aam
xchg
xor
ret
or
rcl
push
mov
push
rcl
loope
mov
jno
add
test
push
movs
sbb
scas
xor
out
and
or
dec
mov
and
mov
inc
jo
and
in
adc
repnz
push
stos
bound
fcmovne
mov
mov
adc
in
fild
adc
push
mov
mov
jns
repz
pusha
das
loope
iret
jge
(bad)
inc
cmps
fsub
shl
xchg
pop
in
add
add
add
add
add
add
add
add
popf
call
add
mov
out
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
add
add
lds
out
add
jecxz
add
inc
add
rol
call
add
add
add
add
add
add
add
pop
das
add
pop
add
leave
add
stc
add
add
add
add
add
add
test
inc
add
add
mov
add
jmp
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
adc
add
add
add
add
jp
add
add
and
push
add
inc
add
add
or
ds
mov
add
add
or
add
add
add
dec
add
add
mov
add
and
pushf
imul
std
jnp
neg
push
and
mov
inc
push
or
mov
add
adc
mov
mov
xchg
cmp
fwait
push
sub
mov
sub
add
out
push
sahf
fmul
(bad)
test
retf
sbb
pop
cmp
and
(bad)
and
cmp
mov
mov
out
movs
sub
scas
aam
pop
mov
(bad)
xor
inc
(bad)
cli
sbb
xchg
cmp
int3
sti
sub
ret
mov
repz
pop
xlat
rol
jb
push
inc
push
sbb
pop
popa
rcr
jae
sub
xor
jb
push
dec
mov
dec
fbstp
bound
adc
test
int3
push
aas
cmp
and
and
out
push
xor
je
gs
xchg
push
fisub
out
bound
stos
cmp
cmp
enter
loop
dec
jbe
sahf
sbb
imul
and
fmul
lds
adc
sbb
lock
ret
cdq
loop
mov
cmp
mov
out
stc
fbld
div
(bad)
xchg
popf
xor
jo
push
or
mov
mov
(bad)
add
sub
cmp
bound
in
xor
cwde
test
push
pop
mov
xor
lods
mov
movs
sahf
pusha
adc
test
fimul
inc
leave
cdq
add
ret
loope
mov
lea
sub
(bad)
push
pop
or
inc
iret
retf
xchg
rcr
or
jae
mov
pop
add
mov
leave
test
sahf
retf
call
sub
out
push
movs
lods
xor
inc
cmp
nop
fisub
or
xchg
add
test
or
push
jmp
(bad)
sbb
mov
mov
cmp
fdivr
ret
sti
adc
iret
fnstsw
pusha
mov
or
lds
sbb
loope
fnstsw
retf
fist
and
loopne
mov
mov
pop
or
mov
pop
and
stc
loop
xlat
jae
xchg
pusha
movs
cmp
mov
sub
jp
je
cmps
mov
sbb
aad
adc
dec
add
pop
icebp
cmp
pop
cwde
inc
inc
call
cmp
cmp
sub
movs
test
out
ss
xchg
and
pushf
fmul
pcmpeqb
lds
icebp
rcpps
mov
outs
ja
imul
lods
push
mov
data16
fst
je
or
aam
shl
enter
lods
and
ins
cmps
mov
sub
mov
push
mov
mov
xchg
mov
push
mov
retf
jmp
fst
mov
sub
mov
popa
xchg
jp
cld
pop
mov
dec
sub
sar
out
dec
and
dec
mov
fimul
add
bound
inc
(bad)
push
sub
mov
sub
sbb
adc
xchg
rol
xchg
adc
stc
push
mov
cwde
cld
into
lds
cmp
lea
jo
das
cli
ret
sar
call
loopne
sub
mov
add
gs
hlt
shl
out
in
sub
jp
fwait
js
mov
jae
mov
push
jnp
outs
je
popa
out
inc
sbb
fisttp
or
leave
stos
xor
fwait
sub
xor
jbe
inc
mov
sub
inc
mov
inc
outs
popf
pop
mov
mov
xor
push
cmp
dec
bound
jg
xlat
cmps
push
std
pop
enter
mov
in
mov
add
div
idiv
xor
call
leave
ins
jbe
cmp
and
jle
inc
inc
cmps
aas
aaa
or
inc
loope
xchg
add
jge
jl
rcr
mov
out
add
pop
into
pop
movs
(bad)
in
pop
ins
ja
ins
or
inc
jbe
fldenv
pop
xchg
push
xor
retf
lock
int3
dec
mov
add
or
dec
add
and
or
push
add
inc
mov
out
stos
jge
mov
adc
mov
jae
lea
inc
scas
icebp
xor
sbb
mov
outs
add
adc
push
inc
mov
icebp
mov
sub
in
call
and
sbb
mov
stos
ret
inc
or
cmps
in
dec
repnz
aam
sar
sbb
in
push
lahf
(bad)
sub
mov
stos
in
xchg
div
jb
inc
mov
in
popf
add
imul
ret
mov
test
adc
dec
push
push
clc
dec
sub
call
xor
fcom
shr
sbb
mov
pop
fsub
jmp
inc
cmp
sbb
mov
push
adc
aas
popf
xor
retf
mov
mov
repnz
(bad)
cmps
or
das
imul
cwde
mov
add
arpl
push
shl
mov
retf
js
call
pop
sub
mov
aam
push
mov
lds
dec
mov
jl
ja
ror
cmp
lock
sahf
imul
pop
jl
les
test
loopne
repnz
dec
rol
xlat
sbb
xlat
jmp
mul
mov
sub
jae
gs
repnz
dec
xor
scas
xor
mov
xor
mov
es
xlat
cmp
in
sahf
rcl
push
les
cmp
retf
pop
mov
mov
xor
pop
gs
lods
pusha
fsub
fisttp
sbb
(bad)
sar
shr
ds
jno
pushf
xchg
(bad)
aad
push
clc
xchg
cmp
pop
push
sbb
sbb
adc
xchg
iret
dec
add
loopne
es
out
mov
jne
aaa
rcl
inc
leave
adc
cmp
xor
lds
mov
retf
mov
imul
(bad)
sub
jle
daa
mov
lds
outs
and
ins
inc
adc
ja
dec
scas
jo
clc
mov
and
cmps
es
push
js
adc
aam
test
jl
adc
outs
fdivr
sbb
and
dec
mov
loope
sub
pop
(bad)
ds
test
mov
jns
popa
scas
jge
int3
mov
or
fcmove
les
ss
jmp
adc
jmp
pop
sub
mov
aas
cdq
adc
iret
shr
loop
in
push
mov
(bad)
push
shl
rol
sar
sub
inc
clc
gs
xor
xchg
adc
repz
mov
loopne
sbb
xchg
nop
jp
lahf
movs
mov
xchg
add
jne
sbb
xor
stos
gs
repz
(bad)
sahf
jmp
stc
mov
(bad)
jmp
ss
adc
or
xor
mov
add
pop
jb
(bad)
xchg
jnp
leave
jmp
push
stos
sub
or
mov
fs
(bad)
stc
int
pop
cmp
les
fidiv
inc
test
leave
rcr
pusha
fsub
clc
jo
fwait
push
stos
outs
(bad)
xor
jecxz
lods
pop
mov
sbb
xchg
mov
sahf
pop
sbb
dec
xor
xor
(bad)
loop
ret
adc
popf
call
or
in
push
mov
xchg
mov
add
xor
test
lahf
leave
imul
lods
fcmove
cmps
or
in
movs
or
push
test
push
dec
pop
add
sub
fimul
in
adc
push
das
push
aad
loopne
hlt
jmp
(bad)
jmp
cs
rcl
loope
scas
mov
xor
mov
push
push
jae
mov
data16
lea
into
lds
in
jmp
cmp
(bad)
into
xor
(bad)
or
push
call
xchg
ds
cdq
enter
inc
pushf
sub
xchg
loopne
push
adc
jo
sub
cld
test
repnz
fwait
jmp
adc
lds
add
test
out
lods
jmp
movs
pop
mov
inc
push
ds
int3
imul
call
dec
push
mov
imul
and
sahf
sahf
dec
aaa
out
push
mov
(bad)
addr16
inc
test
xchg
loope
rol
add
test
popf
mov
out
push
cmp
rcl
and
fimul
push
dec
xchg
sub
movs
js
addr16
pop
rcl
cmp
cdq
and
jg
and
sahf
cld
(bad)
sti
xchg
(bad)
cmc
or
mov
mov
ror
int3
out
add
not
shl
shr
push
nop
leave
pop
push
dec
push
cwde
sub
sbb
rdtsc
mov
add
jecxz
and
scas
loop
sbb
fild
push
jp
outs
jmp
adc
inc
fsin
dec
div
popf
cwde
pop
push
mov
loope
cwde
adc
imul
imul
cmp
fiadd
inc
stc
pop
arpl
rcr
rdmsr
fstp
add
mov
sbb
stc
push
in
fwait
jle
sti
jl
lods
push
cdq
sar
xchg
retf
mov
jg
test
into
sub
pop
xchg
icebp
pop
xlat
inc
dec
xchg
or
add
jmp
xchg
out
jo
pop
hlt
rcr
inc
jno
pop
js
xor
mov
sahf
mov
push
mov
mov
dec
mov
mov
and
ins
mov
out
test
scas
or
adc
call
data16
(bad)
sub
loopne
cmps
addr16
addr16
cmp
push
fwait
mov
imul
hlt
ret
outs
push
ds
rcr
dec
cld
das
std
cli
adc
rcl
inc
add
push
(bad)
in
mov
lahf
jle
and
mov
mov
(bad)
fincstp
add
mov
xchg
pushf
loope
dec
(bad)
fbstp
lods
leave
and
shl
daa
imul
les
std
mov
adc
cwde
and
fild
dec
ret
adc
jle
ret
mov
cs
paddusw
sar
dec
xchg
xor
dec
add
push
add
add
add
add
fild
add
add
add
and
jecxz
and
add
jecxz
add
add
and
rol
add
cld
add
add
add
bound
cmp
add
add
adc
add
add
add
adc
jecxz
add
add
add
add
sub
retf
inc
lods
out
arpl
adc
lock
sbb
pop
lods
dec
lods
xor
jp
stos
inc
push
pop
xchg
xor
into
cmps
mov
ss
xor
sbb
pop
mov
jp
mov
jp
popa
push
ins
mov
aaa
(bad)
jl
(bad)
xchg
in
fcomp
bound
cmp
(bad)
dec
dec
jno
dec
mov
cmp
call
(bad)
jns
cdq
sub
mov
and
push
cmps
adc
test
push
fld
repnz
fistp
pop
and
loope
outs
pushf
adc
mov
xor
movs
sahf
dec
push
lock
test
xchg
stos
in
ss
test
jmp
jle
xchg
pop
dec
mov
jnp
sbb
shl
adc
jne
fsub
jg
jo
js
jnp
pop
mov
jae
xchg
add
sbb
sub
sub
and
dec
(bad)
out
lahf
or
dec
sbb
xor
ds
pop
dec
add
fistp
je
adc
cmp
xchg
(bad)
ret
ret
push
cs
pop
and
push
and
ja
dec
cmp
aas
out
inc
xor
push
mov
and
dec
int3
sbb
push
push
or
call
lahf
shl
or
loope
jnp
jmp
add
sbb
push
test
xor
xchg
mov
push
cmp
sbb
repz
dec
xchg
ror
(bad)
outs
cmp
xchg
out
mov
mov
cwde
inc
sbb
mov
mov
xor
(bad)
and
cs
inc
das
pop
jmp
ret
scas
jl
out
dec
das
xor
cmps
adc
popf
in
rol
sbb
loopne
or
mov
imul
call
rol
sub
push
int3
retf
cld
pop
xor
es
dec
mov
movs
jecxz
sar
push
xchg
mov
iret
(bad)
std
mov
cmp
fcomp
cmp
je
fwait
mov
sub
mov
test
loopne
jmp
rcl
or
and
sub
and
out
das
std
(bad)
out
(bad)
nop
sub
fs
cmp
cmp
cdq
fistp
jp
mov
jl
ror
cmps
fisub
adc
sub
daa
xor
mov
mov
cmp
movlhps
sbb
push
push
mov
xor
sbb
and
ficomp
xchg
pop
and
xchg
sub
xchg
out
aam
add
push
push
ins
je
aas
ror
out
dec
xchg
xchg
js
xor
push
sti
fwait
ret
sbb
ds
aas
stos
ins
jo
add
push
fadd
std
icebp
scas
addr16
pop
jne
push
call
outs
stc
inc
movs
fisub
add
adc
sub
push
mov
inc
std
jp
add
adc
jbe
rol
jg
mov
push
pop
jmp
cmps
cmp
cdq
jno
xchg
mov
dec
fadd
inc
inc
and
aas
test
sub
jmp
mov
mov
adc
mov
cmp
fistp
add
sub
lods
xor
bound
push
mov
jb
out
aaa
fst
xor
and
outs
mov
dec
movs
clc
shl
sbb
in
push
sbb
out
adc
shr
push
fwait
mov
je
sbb
xchg
popf
jmp
or
iret
jae
push
xor
aad
(bad)
dec
add
aaa
or
das
mov
xchg
cdq
inc
mov
pop
or
scas
inc
and
push
sbb
push
xchg
lods
push
clc
push
add
pop
push
clc
xlat
and
jae
int3
mov
int
mov
gs
mov
cdq
cmc
adc
mov
add
jno
mov
lods
movs
inc
xchg
aad
pop
pop
push
adc
retw
pop
cmc
pop
pop
pop
(bad)
pop
cmp
ret
or
nop
pushf
outs
cmovae
push
rol
or
psraw
add
sbb
clc
imul
add
sbb
sti
leave
test
push
fsubp
mov
xchg
push
fistp
retf
and
arpl
or
cmc
cmp
push
push
iret
test
js
cld
fbld
adc
mov
mov
mov
jns
cdq
mov
repz
sbb
dec
mov
sub
add
outs
fmul
scas
mov
sub
pushf
pop
fstp
xor
sbb
jno
fbld
cld
sub
lea
aas
jge
jnp
inc
cmp
std
test
cmp
xchg
jmp
inc
xchg
xchg
or
popa
mov
jge
sar
xor
inc
sbb
lea
ja
out
mov
test
ret
call
in
int
dec
ja
shr
les
jo
jnp
add
loope
je
mov
add
dec
and
popf
cs
out
rcr
xor
inc
sbb
mov
loopne
sub
test
cmc
pop
sub
mov
dec
aad
push
sbb
jbe
sub
repnz
sub
daa
or
(bad)
shl
xchg
sub
enter
add
pop
xor
fild
nop
jnp
push
jne
sub
xor
shr
inc
test
cmp
stc
mov
dec
jbe
nop
jae
adc
add
or
xchg
xor
loop
add
dec
das
dec
cmps
sbb
retf
mov
push
add
sub
bnd
cmp
cmp
retf
fsub
fsub
push
add
sub
mov
xchg
out
inc
test
call
loopne
xchg
push
(bad)
fidiv
(bad)
leave
xor
(bad)
in
sbb
jnp
mov
push
sub
pop
cli
enter
fwait
or
jnp
ret
ss
pushf
ds
xor
jmp
mov
mov
and
push
dec
lock
add
cmp
mov
push
out
inc
mov
adc
(bad)
loop
jl
int
mov
fild
fdiv
xchg
sbb
bnd
fistp
mov
jp
dec
push
cdq
jmp
pop
xor
pop
hlt
aaa
fcom
into
rol
lahf
push
sub
inc
cmp
sub
shl
jecxz
add
fsubr
mov
mov
sub
daa
xchg
fnstcw
mov
jno
fwait
cmp
inc
dec
jle
bound
sub
je
mov
sub
stos
call
mov
js
inc
push
imul
xchg
ja
mov
adc
xchg
out
push
mov
aaa
bound
sbb
push
rol
adc
and
(bad)
int3
jns
xchg
popa
and
pusha
or
cwde
pop
sub
mov
dec
mov
xchg
adc
popf
xchg
stc
push
xchg
addr16
or
aad
dec
std
test
out
popf
mov
fsubr
adc
pop
xlat
sbb
cmp
jb
inc
jnp
in
pop
imul
pop
mov
in
xor
fdiv
rol
lahf
adc
pop
retf
ffree
fs
pop
inc
lods
mov
sbb
js
inc
(bad)
and
shl
imul
mov
dec
ret
rcr
out
push
xor
sub
sub
cmc
fdivp
mov
add
test
shl
or
xchg
cmc
sub
and
ss
xchg
push
mov
sti
push
xchg
dec
jne
pop
fidiv
mov
pop
push
out
aaa
stos
dec
jecxz
sahf
js
sar
mov
movs
push
push
cmp
imul
mov
sub
enter
loopne
xor
aad
pop
inc
(bad)
movs
icebp
loop
popf
lds
jmp
mov
es
es
scas
aam
lds
pop
stc
test
push
in
shl
(bad)
iret
jmp
adc
xlat
iret
and
imul
mov
fild
shl
lods
(bad)
std
inc
jo
(bad)
jl
popa
jle
pop
adc
bound
imul
fidiv
adc
sub
popa
ficomp
jmp
and
dec
leave
out
mov
and
adc
js
stos
fisttp
sub
sub
ins
xchg
shl
test
dec
arpl
mov
push
int
sti
scas
ins
inc
add
jp
and
pop
pusha
test
mov
gs
cmps
inc
nop
ja
xor
and
push
xchg
mov
jmp
in
lahf
cmp
lock
out
adc
inc
push
and
sub
in
ficomp
xchg
gs
rol
push
out
leave
sub
mov
shl
into
add
pop
mov
in
jg
xor
aam
xor
call
cs
mov
xchg
jne
lahf
data16
pop
das
push
fidivr
jae
pop
adc
es
pop
push
mov
pop
pop
sbb
jbe
sbb
pushf
mov
add
xor
xor
or
mov
cmc
data16
cld
not
or
(bad)
out
gs
jl
cmp
mov
push
adc
fnstsw
sbb
es
mov
cli
cwde
jp
fucomi
pop
(bad)
div
js
jo
into
shl
loopne
dec
push
nop
enter
lds
out
icebp
lock
pop
sub
mov
sahf
mov
dec
cmp
hlt
inc
push
dec
js
sahf
fidiv
fidivr
out
xchg
push
and
cli
xlat
aas
xor
mov
jno
arpl
daa
push
jo
add
push
cdq
push
ret
lods
stc
pop
js
aam
xchg
fstp
mov
push
jbe
push
inc
lods
sub
movs
rcr
jmp
scas
xchg
movs
sub
sbb
xchg
sbb
test
les
sbb
test
mov
popf
(bad)
and
not
mov
mov
jl
ja
mov
ret
dec
ins
retf
shr
jae
inc
cwde
aaa
int3
xchg
xor
jp
and
pop
retf
ins
xchg
add
mov
test
mov
std
movs
test
sub
jp
movs
xchg
jge
dec
stc
adc
outs
cmc
cmp
mov
ret
xlat
jne
mul
lahf
cmp
pop
xor
dec
stos
cmp
call
ins
jo
not
aaa
adc
inc
push
popf
imul
aam
loop
mov
dec
mov
sar
pop
rol
outs
dec
ret
fcmove
pushf
xchg
jo
sbb
repz
lods
mov
sbb
xchg
in
or
add
add
repz
add
add
aaa
add
mov
add
mov
add
add
add
add
add
add
add
dec
add
jp
add
add
add
add
add
add
jne
add
add
add
outs
add
add
add
add
push
mov
imul
fldcw
mov
mov
(bad)
jl
out
aaa
push
in
dec
dec
xchg
imul
sbb
mov
aad
nop
sahf
imul
iret
xor
rcr
cs
scas
mov
bound
sahf
or
call
add
in
das
inc
inc
in
jbe
mov
xchg
scas
inc
int
lods
jns
retf
and
fidiv
outs
es
sub
arpl
lods
aas
push
jmp
xchg
daa
ret
into
cs
outs
mov
xchg
ja
rcl
sbb
xor
and
xor
inc
inc
jns
dec
or
jb
pop
leave
aad
and
add
arpl
xor
jge
jp
mov
outs
pop
lds
xor
mov
adc
inc
fsub
lea
arpl
test
cmp
rcl
adc
inc
ret
fldenv
cli
loope
and
mov
aad
cmp
nop
mov
test
fadd
daa
ror
push
sbb
lods
test
mov
es
out
(bad)
jge
jns
adc
xchg
jae
push
adc
imul
sahf
pop
mov
push
xchg
jmp
xor
sar
enter
xor
mov
or
adc
jmp
pop
jmp
in
pop
call
push
mov
sbb
push
xchg
inc
and
jmp
mov
pushf
imul
fs
leave
scas
jae
jp
pop
pop
iret
mov
cmp
xchg
retf
popa
aaa
push
and
jl
sub
lahf
xchg
mov
int3
out
xor
imul
mov
data16
push
pop
(bad)
cli
cld
or
int
mov
jle
inc
mov
outs
fdiv
inc
les
movs
aad
inc
mul
retf
jns
scas
mov
add
push
xchg
cld
push
push
or
pop
push
or
sub
mov
imul
test
ret
data16
xchg
dec
in
clc
mov
xor
mov
mov
test
jae
in
fadd
int3
lods
and
loope
ficomp
and
mov
jno
push
mov
lods
pop
fcomp
loope
scas
fmul
push
movntps
ins
rcl
cmp
mov
adc
div
sahf
shl
xor
sub
es
hlt
push
cwde
xor
dec
call
xor
clc
out
(bad)
pop
or
sbb
or
pop
pop
push
xor
iret
fcom
sar
xchg
adc
inc
ins
nop
inc
icebp
pop
mov
xchg
mov
mov
xchg
fnstenv
mov
inc
mov
cmp
or
mov
adc
push
push
dec
pop
xor
mov
push
sar
enter
lods
or
movs
push
fld
mov
pushf
cld
xor
aam
rol
xchg
loopne
out
or
sub
sahf
inc
js
out
adc
xor
jmp
push
bound
pop
mov
mov
stos
cmp
jno
sub
pop
repnz
adc
adc
aaa
daa
jae
mov
js
cmp
sub
push
or
lods
jbe
jmp
push
daa
mov
sbb
fwait
inc
jl
fisub
(bad)
jbe
enter
mov
mov
push
js
or
cs
add
pushf
fidivr
mov
sbb
add
xor
test
pushf
hlt
or
adc
adc
or
ins
or
dec
cmps
xchg
mov
adc
int
data16
cs
cmc
push
movs
push
xchg
fmul
out
test
pusha
enter
pop
lods
popf
bound
push
and
mov
mov
push
jmp
fst
dec
cwde
or
retf
push
cmp
mov
pop
mov
ins
hlt
xor
out
add
inc
inc
cmp
ret
repz
test
or
jle
adc
cmps
shr
and
xor
pop
or
dec
jp
xor
and
sahf
mov
jecxz
out
addr16
out
add
outs
sbb
(bad)
sbb
nop
call
mov
es
dec
sub
jae
in
das
inc
rcl
sub
in
aad
and
repz
push
iret
cmp
popa
jb
lock
cmps
ret
mov
aad
or
enter
sub
call
icebp
inc
lds
ret
retf
pushf
dec
pop
rdtsc
test
sub
int
jbe
pop
ret
or
scas
popf
(bad)
outs
mov
xchg
inc
jae
btr
repnz
sub
fild
and
add
hlt
mov
mov
xchg
stos
push
push
aam
idiv
pop
inc
test
inc
jge
dec
cli
add
pop
or
lock
rcr
adc
mov
push
jmp
push
mov
push
test
cmc
or
mov
bound
push
jl
cs
in
xchg
outs
and
cmps
lock
push
mov
xrelease
inc
jno
sub
push
in
in
ror
cmp
test
and
pusha
cmc
pop
imul
lea
mov
mov
sbb
push
call
push
pop
(bad)
cdq
push
out
mov
scas
inc
xchg
sub
mov
xchg
push
addr16
xchg
adc
rdtsc
xor
movzx
and
xlat
ret
xchg
inc
and
pop
inc
adc
adc
les
call
sar
pop
adc
scas
gs
daa
int
test
cmps
jg
fnstcw
jmp
mov
enter
js
mov
ret
mov
pop
icebp
mov
xchg
sbb
xor
push
pushf
xor
sbb
test
imul
repnz
cmp
xchg
hlt
or
inc
int
mov
(bad)
push
js
xchg
movs
pop
sbb
cmc
mov
mov
push
sbb
add
sbb
ds
stos
push
push
mov
cmp
in
imul
push
mov
stos
jmp
mov
mov
mov
inc
or
cmp
int
adc
fwait
int
mov
or
jp
or
jmp
mov
xor
add
pop
movlps
seta
xchg
pop
fist
int3
xor
iret
cmps
fidivr
imul
dec
int3
int
and
aas
or
bound
xchg
pop
loopne
and
aaa
fisubr
(bad)
cmp
adc
inc
sub
dec
sti
mov
dec
or
push
ins
stos
or
leave
(bad)
out
dec
mov
mov
mov
in
les
stos
ins
inc
push
cmc
xchg
cwde
(bad)
fistp
dec
adc
lds
and
dec
ds
loop
mov
mov
stc
lds
fwait
sar
int
fwait
mov
dec
pop
add
ficomp
jecxz
xchg
xor
sar
fsub
jnp
imul
xlat
ins
adc
(bad)
adc
lods
dec
or
jmp
int
in
xor
dec
leave
xchg
bound
in
ja
hlt
int3
and
push
leave
ins
xchg
push
pushf
pop
dec
addr16
bound
fsub
pop
ror
ret
retf
(bad)
sbb
pushf
call
cdq
aaa
dec
or
pop
inc
add
rol
shr
push
in
add
loope
add
and
popa
outs
popf
and
cmp
(bad)
push
fnsave
jl
fimul
cmp
retf
fcomp
jecxz
shl
popf
and
jg
sbb
ror
cmps
inc
pusha
sahf
mov
pop
test
adc
pushf
push
sub
in
pop
adc
sub
mov
ja
cmps
pop
adc
adc
cmps
push
cmp
mov
xor
aas
ret
es
push
mov
mov
clc
push
lods
out
push
push
(bad)
(bad)
icebp
push
mov
mov
xchg
shl
not
cmc
pop
popf
pop
out
push
popf
jns
sbb
sub
push
dec
cmp
ja
test
(bad)
jmp
std
shr
and
adc
sti
sahf
imul
ret
sub
int3
mov
daa
ja
adc
test
adc
or
pop
jmp
adc
pop
je
or
sar
pop
inc
mov
xor
mov
xor
cmp
add
dec
ffree
xlat
pop
stc
out
das
add
fadd
jno
xchg
mov
enter
test
and
call
cmp
je
jle
mov
jb
push
adc
and
mov
cmp
in
stos
cmp
fs
adc
test
rcl
inc
call
xchg
lods
adc
add
stos
out
call
jne
sub
cmp
jne
shl
jns
sub
sbb
pushf
add
test
xor
xchg
cmp
add
pusha
and
out
mov
mov
shl
sti
dec
inc
psadbw
jne
std
add
push
cmp
cdq
into
pop
mov
mov
mov
xchg
xchg
(bad)
clc
cmps
in
and
sbb
jnp
fimul
ret
fstp
xchg
test
outs
pop
pusha
mov
pusha
es
mov
inc
fistp
jmp
cmp
aaa
inc
test
out
repnz
test
stos
movs
add
nop
xchg
aam
div
ins
and
add
clc
idiv
xchg
cs
cmp
dec
xor
ds
movs
in
xchg
adc
inc
fprem
loope
cs
cwde
jae
stc
sub
loopne
sub
daa
dec
jno
mov
sbb
cmp
jg
cmp
xor
loope
xchg
cmp
mov
xchg
or
lds
inc
push
ds
out
adc
push
aam
inc
pop
invd
(bad)
out
stos
push
cdq
jmp
out
ins
cmps
mov
jnp
pop
cwde
imul
loop
sub
xchg
ret
push
sub
push
lahf
xchg
and
push
ret
push
sub
in
(bad)
jle
sub
cld
jb
jo
cld
pop
inc
pop
aas
add
aad
icebp
sbb
jecxz
mov
fwait
ins
in
fstp
aad
imul
mov
nop
sbb
mov
mul
push
inc
dec
aas
(bad)
sahf
es
mov
shr
jle
gs
jbe
sbb
push
mov
test
mov
mov
aaa
sbb
or
pop
cmp
mov
fcmovu
(bad)
outs
jnp
ret
add
add
add
add
add
add
repnz
add
cmps
add
add
add
add
aaa
je
add
add
add
add
dec
add
mov
mov
add
add
add
add
lahf
call
pop
or
add
add
add
aam
add
add
or
mov
das
dec
cmp
jbe
push
or
mov
jp
and
or
test
inc
test
cmp
pop
cmps
mov
push
idiv
imul
adc
sbb
popf
jle
pop
mov
in
ror
cmp
ds
mov
xchg
outs
rcr
push
pop
add
push
xchg
fld
cdq
sub
pop
shr
mov
jno
pop
xor
div
inc
iret
lahf
imul
cmp
xchg
test
mov
dec
xchg
jle
daa
cmps
in
outs
dec
adc
jle
test
sbb
mov
push
fwait
stc
jle
and
scas
xchg
jle
sahf
data16
cmc
inc
movs
mov
add
enter
mov
add
xchg
mov
or
inc
fimul
add
add
jbe
popf
aad
out
cdq
jle
ss
aam
jle
and
mov
sub
pop
mov
sar
jnp
add
xor
mov
inc
popf
scas
imul
jle
xor
fimul
icebp
push
into
es
push
cs
xor
retf
idiv
ficomp
imul
pop
or
outs
sub
pop
loope
xchg
pop
popf
(bad)
push
mov
mov
dec
push
gs
retf
mov
dec
loope
mov
fistp
and
push
call
mov
xor
aas
or
loope
xchg
or
imul
ds
add
xor
test
test
add
push
and
or
sar
adc
and
xor
push
jnp
dec
idiv
pop
cld
add
popf
adc
push
xchg
movs
retf
pop
sbb
test
fistp
stc
les
jmp
out
pop
mov
pop
les
(bad)
loopne
iret
push
(bad)
jae
lea
ins
mov
cdq
neg
mov
sub
dec
mov
lods
and
mov
enter
pop
mov
call
inc
inc
push
bound
push
push
int3
cmps
pause
fs
pop
in
jecxz
cmps
pop
xchg
jecxz
test
xlat
mov
call
leave
inc
loopne
mov
dec
adc
add
arpl
add
xor
and
dec
into
jo
daa
xchg
into
cmp
dec
lock
mov
aas
push
ss
stos
lidtd
mov
and
fiadd
sti
inc
dec
push
icebp
or
cmp
sbb
jle
dec
adc
pop
ret
das
mov
xchg
pop
das
aad
movs
push
inc
jae
mov
seto
jle
jmp
sti
retfw
mov
stc
mov
fnsave
sti
cwde
daa
call
mov
int3
inc
jecxz
(bad)
iret
std
xchg
pop
fs
xor
inc
call
arpl
shl
xlat
in
jmp
int3
scas
pop
jne
hlt
sub
mov
ds
mov
push
cmp
clc
addr16
fisubr
xchg
xchg
and
ret
and
fmul
mov
repnz
cmp
scas
adc
dec
data16
pop
sbb
mov
jl
call
dec
das
fcomi
div
dec
shr
adc
or
rcl
shr
mov
mov
(bad)
jmp
es
sbb
sub
mov
or
in
das
popf
add
jo
mov
out
data16
xchg
or
out
and
add
jecxz
movs
or
imul
fiadd
jb
pop
jmp
dec
sub
cmps
int3
xchg
sub
arpl
xor
inc
test
test
add
mov
cmp
mov
cmp
pop
add
sub
xchg
xor
cmp
dec
cs
gs
stos
adc
shl
dec
shl
xor
dec
(bad)
and
add
pop
je
cmp
lods
pop
pop
fadd
or
movs
pop
xchg
stos
and
cmps
js
sbb
bt
push
xor
adc
loop
xchg
dec
pop
imul
push
or
and
mov
rcr
imul
xchg
dec
pop
imul
push
or
and
mov
rcr
imul
xchg
dec
pop
imul
push
or
and
mov
rcr
imul
xchg
dec
pop
imul
stos
add
ja
loope
inc
retf
cs
jp
add
mov
sahf
and
mov
add
mov
in
or
pop
xor
and
jnp
hlt
cmp
daa
fld
imul
and
add
cmp
push
jne
pop
jno
push
xchg
nop
das
rol
fld
outs
adc
xchg
dec
mov
imul
add
repnz
cli
jae
xor
dec
cwde
add
or
mov
mov
iret
outs
test
pop
daa
inc
jp
call
mov
sbb
stos
repnz
jno
jno
sbb
xor
fs
(bad)
jle
sar
or
sbb
pop
inc
or
push
and
stos
xchg
shl
(bad)
jmp
pop
cmps
cmp
popf
adc
call
or
push
mov
data16
xchg
dec
sar
fild
push
pushf
mov
stos
aad
push
dec
jne
sub
ret
or
mov
lock
(bad)
mov
lahf
jo
imul
hlt
test
loop
xchg
push
test
xchg
mov
mov
sub
sub
inc
sbb
bound
jg
in
(bad)
jns
movs
jmp
jg
repnz
popa
sbb
xchg
test
fcom
outs
and
sahf
sub
pop
fistp
mov
or
jge
nop
mov
imul
test
push
mov
fstp
push
adc
inc
fst
cmp
push
push
add
jge
pop
cmp
repz
clc
fdivr
fwait
cmps
push
pop
int3
imul
fld
jmp
popa
ret
push
shl
mov
test
jne
ds
sbb
outs
je
cmp
es
das
push
(bad)
inc
pop
add
push
pop
mov
pop
call
out
push
push
dec
sbb
pop
inc
or
push
and
stos
test
sahf
daa
addr16
or
adc
cmps
pushf
mov
je
call
dec
add
inc
popf
ja
cmps
inc
pop
dec
or
push
mov
and
lahf
xchg
popa
or
adc
dec
mov
scas
fisubr
dec
jne
mov
out
sub
ins
pop
fmul
sbb
push
inc
or
lahf
or
cmovg
adc
push
jbe
mov
test
adc
cmp
icebp
adc
sub
mov
mov
pop
jl
inc
loop
push
retf
fldcw
cwde
es
xchg
rol
cmp
xchg
out
xchg
dec
pop
imul
pop
or
sub
sbb
xchg
arpl
jl
xor
fld
jns
fisttp
inc
dec
push
ret
and
in
add
sbb
out
mov
pop
add
adc
adc
xchg
add
or
mov
cmp
cmc
jo
mov
cwde
(bad)
es
or
mov
dec
pop
fs
mov
push
xchg
adc
or
call
jo
inc
in
call
push
sbb
fisub
mov
sbb
xchg
inc
dec
mov
sub
ins
jp
push
sub
comiss
out
out
xchg
dec
pop
inc
push
outs
or
push
sub
pop
mov
pop
fnstcw
dec
cmp
pop
mov
or
mov
adc
mov
mov
and
inc
push
jb
inc
and
ficom
xor
push
inc
xor
mov
mov
add
or
outs
ss
mov
add
xor
ret
sub
sub
out
push
movs
das
adc
sti
outs
push
(bad)
shl
jmp
pop
(bad)
mov
jg
icebp
dec
iret
in
or
cdq
out
inc
in
lock
mov
sar
xchg
out
xchg
dec
pop
imul
pop
or
sub
sbb
xchg
jae
jmp
repz
lahf
(bad)
mov
scas
mov
sete
and
sbb
aaa
idiv
pop
cmp
dec
(bad)
jp
lea
xchg
sbb
mov
mov
pop
jge
cmp
dec
in
mov
jmp
neg
and
stos
in
cmp
je
xor
aam
mov
sti
dec
outs
xor
sbb
test
out
mov
jecxz
adc
test
mov
pop
movs
stc
outs
xchg
pop
dec
cmp
and
mov
repnz
out
xchg
dec
pop
inc
push
outs
or
push
sub
scas
xor
std
out
and
sub
or
pop
cmps
jmp
cmp
xchg
adc
pop
pop
int3
in
xor
add
jg
ret
sub
dec
fwait
mov
lods
dec
loopne
int3
mov
jp
or
cmp
out
cmp
(bad)
xlat
je
pop
or
xor
xor
push
jl
inc
xor
movs
or
adc
pop
fistp
add
popa
add
fwait
and
in
ja
xchg
mov
push
ss
add
inc
test
xchg
(bad)
adc
or
add
pop
outs
or
aas
push
or
and
mov
rcr
imul
xchg
dec
sbb
adc
jp
sub
fcom
xchg
out
pop
mov
call
pop
mov
ds
call
sbb
pop
mov
cmp
bnd
inc
adc
mov
out
add
adc
sbb
fs
iret
test
jo
pushf
lods
test
repz
mov
jl
pop
(bad)
movs
jno
jle
adc
sub
jo
stc
cld
call
xor
push
imul
outs
mov
cmp
mov
pusha
ins
movs
ror
adc
jb
(bad)
call
into
jne
jnp
sub
imul
jmp
leave
push
add
outs
rcr
sbb
into
push
repz
sub
std
movs
scas
lock
sub
jne
pop
ret
(bad)
mov
test
arpl
mov
mov
inc
loopne
cli
(bad)
xchg
dec
leave
retf
int
imul
push
psrlw
pop
jmp
mov
add
xor
arpl
jecxz
inc
jmp
add
add
add
add
add
add
add
jmp
add
mov
add
add
add
mov
mov
push
add
add
mov
add
add
pusha
add
std
in
sbb
mov
add
add
add
sahf
add
add
jmp
add
add
add
add
add
nop
add
add
add
add
cmc
adc
sub
out
push
lods
lea
push
fbld
add
fwait
push
sbb
icebp
aas
sub
push
in
aaa
xor
mov
retf
aaa
add
cmp
lods
or
(bad)
cmp
pop
xchg
(bad)
out
out
push
pop
jmp
push
inc
xchg
ret
mov
imul
pop
sbb
push
(bad)
cli
daa
mov
neg
push
pop
add
scas
dec
push
sbb
stos
jge
fucomip
dec
add
sub
out
nop
xor
inc
in
(bad)
xor
mov
add
das
and
inc
dec
xor
xor
sbb
xor
(bad)
push
xchg
add
push
mov
or
and
and
and
ja
mov
fisttp
(bad)
pop
pop
jo
mov
pop
push
imul
das
cwde
push
xor
jnp
or
jbe
sub
jae
sti
mov
adc
jecxz
mov
out
xchg
test
dec
sbb
dec
add
lods
dec
dec
pop
cmp
shl
add
movs
mov
js
scas
fwait
test
pop
ja
cmp
xor
cmp
into
in
popa
pop
dec
dec
push
sub
fnstenv
es
std
jle
or
fisttp
mov
pop
imul
inc
ins
push
inc
icebp
(bad)
inc
mov
dec
retf
push
add
sar
push
push
sti
jne
jnp
test
and
mov
das
xchg
stos
ja
and
(bad)
stos
inc
ret
ins
mov
(bad)
clc
ret
popf
rol
(bad)
enter
jp
cmc
jbe
ins
inc
push
fnstenv
xchg
or
pushf
stc
and
mov
cdq
fnstenv
push
movs
add
adc
hlt
fsubr
add
push
mov
rcl
outs
mov
cwde
clc
dec
jg
les
pop
jmp
lahf
xor
retf
jns
leave
push
mov
mov
mov
push
jmp
popf
jne
or
push
and
call
pop
fstp
pop
mov
push
mov
mov
jbe
repnz
lahf
nop
jns
pop
xchg
test
push
call
mov
aaa
sub
mov
dec
test
inc
add
loope
jg
push
repz
and
jnp
int3
mov
pop
loopne
pop
inc
push
pop
icebp
push
aam
mov
std
loop
popa
fld
lods
sbb
in
adc
jno
les
mov
pop
adc
mov
sub
mov
mov
xor
or
jle
in
push
dec
rcr
jl
fadd
sub
jo
or
and
and
out
jmp
test
or
xor
loop
adc
pop
adc
retf
xor
mov
add
scas
fs
dec
inc
je
mov
jnp
push
lds
retf
xchg
int
test
dec
mov
and
aad
sub
ret
or
retf
dec
xor
sub
jo
jecxz
add
imul
ins
jmp
sub
aaa
xor
jne
pop
rcr
ins
push
mov
and
movs
fst
adc
addr16
sub
and
pusha
push
call
mov
in
ins
mov
mov
das
sub
adc
call
and
popf
cmps
popf
mov
jns
iret
repnz
or
rol
jle
mov
movs
fdiv
mov
inc
mov
call
sbb
rcl
bswap
retf
rcr
adc
jno
out
icebp
ret
push
aam
push
cmps
cld
(bad)
dec
rcr
iret
ins
pop
inc
fsubr
sub
dec
iret
out
movntps
jmp
ja
add
sbb
div
xor
out
push
mov
hlt
sar
sub
in
xchg
pop
mov
fwait
mov
jp
out
out
inc
inc
imul
and
gs
mov
ret
mov
inc
inc
aaa
push
push
test
sbb
icebp
push
sub
mov
out
xchg
mov
inc
inc
ret
arpl
ror
lock
(bad)
sbb
lds
pop
mov
int
push
adc
jo
sbb
sub
push
xchg
scas
dec
jp
pop
inc
aas
mov
mov
sbb
inc
sub
and
pop
mov
pcmpgtb
push
ss
(bad)
push
fwait
jo
dec
imul
jle
les
mov
(bad)
push
jge
push
aaa
jo
jo
xlat
imul
dec
call
pop
sbb
dec
addr16
mov
leave
jl
xchg
mov
pop
enter
jge
adc
iret
pop
and
test
cmc
inc
hlt
(bad)
xchg
cmps
mov
xlat
scas
inc
add
test
(bad)
(bad)
lahf
sbb
jae
mov
pop
mov
jmp
jl
pop
fisubr
xchg
(bad)
repz
ret
sbb
movups
lods
sub
lahf
stos
jmp
sbb
pop
arpl
inc
icebp
jle
sbb
loop
and
xlat
mov
mov
(bad)
xchg
(bad)
jmp
sbb
cli
mov
mov
mov
jae
xor
adc
ret
rcl
jg
out
dec
outs
cdq
adc
sar
(bad)
push
pusha
pop
jne
jp
je
test
fdivr
cmp
ds
cmp
mov
and
cmp
pop
dec
iret
adc
inc
(bad)
mov
jns
jne
dec
mov
je
pop
lock
or
ret
sub
dec
jle
scas
ins
shl
gs
vmovdqa
or
mov
jmp
inc
sahf
xor
inc
sub
pop
(bad)
stos
xor
jp
call
pop
lea
mov
jle
out
cmp
mov
or
loop
cs
mov
push
(bad)
or
mov
mov
or
shl
sbb
cdq
(bad)
adc
ds
inc
int
sub
mov
(bad)
sbb
pop
xor
mov
sar
push
xchg
push
mov
int
xchg
adc
xor
inc
mov
cmp
adc
mov
mov
mov
mov
enter
cs
js
cmp
sub
cli
mov
mov
xor
stc
jmp
inc
add
adc
out
mov
sbb
dec
arpl
add
cli
popf
mov
mov
xlat
cmc
xchg
call
sub
rcr
into
mov
icebp
sub
test
pop
movs
jge
cmp
jb
(bad)
out
imul
or
ficom
cmp
mov
fs
xchg
xchg
(bad)
fnsave
in
stc
imul
(bad)
aad
cmp
enter
push
aam
pop
push
lock
mov
fiadd
aas
in
mov
pusha
pop
pop
sbb
or
leave
jb
mov
pushf
test
(bad)
aam
test
mov
push
retf
inc
or
jmp
aam
add
jne
jmp
(bad)
in
imul
sub
cmps
in
cli
cmp
dec
push
cdq
iret
mov
es
jg
push
ror
mov
xor
and
out
clc
mov
(bad)
push
mov
dec
xor
sbb
pushf
(bad)
test
test
sahf
and
fwait
dec
and
fstp
iret
lods
jg
cmp
mov
bound
nop
(bad)
mov
add
in
xor
aas
add
jl
mov
pushf
(bad)
les
add
dec
pushf
ret
sub
jo
cmp
pop
std
pop
call
sub
lea
call
jne
mov
sbb
adc
ror
(bad)
retf
outs
pop
cmp
push
jg
fadd
mov
xor
retf
adc
lods
jb
or
or
sub
mov
fadd
repnz
imul
arpl
lea
(bad)
(bad)
adc
fidivr
mov
ins
or
push
cmp
mov
push
xchg
movs
pop
dec
retf
add
call
aaa
int
shl
cmps
daa
arpl
arpl
jecxz
mov
in
mov
cli
xor
mov
ins
sub
leave
cld
jmp
dec
xchg
(bad)
pop
je
sub
xchg
scas
aas
cmp
xor
in
lock
or
jns
jo
push
mul
fidivr
xchg
jns
adc
cmp
pop
std
mov
test
or
retf
xlat
cld
mov
jno
fisttp
hlt
mov
xor
data16
mov
into
int
ds
xchg
scas
xchg
test
imul
jnp
jb
outs
inc
xor
push
jae
fiadd
mov
sbb
popa
cld
lods
cmp
nop
stos
xor
je
adc
mov
std
pop
adc
mov
xchg
mov
pushf
add
iret
and
push
enter
fwait
push
mov
jp
clc
dec
pop
popf
les
or
ins
jg
bound
and
imul
and
cmp
xchg
retf
mov
pop
ins
iret
jp
(bad)
fsub
sub
mov
mov
repz
inc
loopne
sbb
retf
pusha
dec
and
push
mov
adc
pop
inc
addr16
or
cdq
cs
xchg
addr16
and
fsub
push
xchg
sbb
pop
shl
mov
daa
dec
(bad)
call
dec
mov
adc
lock
fisttp
pop
call
adc
and
shl
pop
js
lock
clc
inc
mov
cdq
daa
mov
pop
ret
int3
mov
jp
out
add
push
mov
xor
push
add
push
std
mov
sub
dec
add
and
test
lock
icebp
(bad)
stos
sbb
xchg
leave
pop
sti
inc
cmps
ror
and
jno
jb
mov
ins
dec
out
mov
jno
push
repz
aad
lock
enter
sbb
sbb
jecxz
sti
retf
stos
sbb
xchg
sub
mov
lea
outs
dec
test
clc
inc
sbb
add
or
xor
mov
ror
int3
or
les
dec
add
aad
fnsave
retf
pushf
mov
inc
pop
and
je
sub
lds
dec
mov
xlat
mov
scas
pop
xchg
jb
jmp
push
inc
dec
out
rol
nop
push
adc
xor
add
add
add
add
add
stos
add
pop
add
daa
cmp
test
add
add
add
cld
add
repz
add
add
add
add
add
sub
add
add
add
add
lods
add
add
jp
add
add
repz
add
add
add
add
add
add
adc
out
add
add
and
add
and
add
repz
add
add
add
add
add
xchg
add
add
add
add
add
out
or
dec
xchg
sbb
aaa
and
fstp
(bad)
inc
sahf
mov
mov
adc
add
jmp
push
repnz
(bad)
retf
or
mov
lods
test
mov
pop
sbb
xor
in
pop
xstore-rng
cmps
ret
lods
call
push
ret
stc
cmps
mov
push
jns
rcr
push
cli
or
and
mov
(bad)
pop
mov
retf
cli
jmp
ja
mov
pop
mov
mov
mov
mov
jle
cmp
outs
repz
inc
pop
inc
dec
sbb
cmps
clc
pop
dec
es
loope
cdq
pop
fnstsw
mov
or
div
and
push
adc
jl
(bad)
iret
cmp
or
cmp
cmc
retf
sbb
ss
pop
jo
mov
xor
sbb
aas
mov
test
or
fmul
sbb
fnsave
push
aam
sbb
cdq
retf
arpl
pushf
cdq
popf
lock
pop
push
xchg
call
fistp
lds
(bad)
pop
add
sub
or
mov
aad
push
shr
(bad)
fdivr
mov
cmp
fwait
das
xchg
cmp
mov
icebp
or
mov
xchg
loope
loope
inc
and
in
sbb
aad
fwait
lahf
cs
xchg
xchg
(bad)
dec
pop
push
lods
mov
mov
test
pop
lahf
push
(bad)
xchg
js
sub
jmp
lock
xchg
mov
adc
or
mov
retf
mov
add
inc
jg
jmp
retf
xchg
push
in
xchg
cli
dec
into
jecxz
clc
sub
inc
movs
out
jg
aas
sbb
int3
mov
mov
xchg
cmp
clc
mov
xchg
into
mov
popf
pop
adc
popf
sub
stos
inc
jmp
sti
xchg
dec
add
dec
mov
or
push
test
adc
xlat
call
push
inc
fnsave
push
ret
clc
fstp
popf
dec
ror
fnstcw
mov
fwait
cmp
fcom
adc
mov
stc
mov
mov
pop
xor
or
pop
inc
test
fistp
xchg
add
fcom
ror
jo
(bad)
mov
inc
call
push
jmp
loope
inc
mov
xchg
jp
lock
sub
out
cwde
xor
or
mov
ror
pusha
test
sub
inc
movs
mov
out
pop
in
lods
mov
mov
bound
dec
add
adc
and
je
sbb
mov
aad
push
mov
(bad)
dec
shl
or
loopne
sub
or
adc
call
arpl
push
mov
mov
and
pop
loop
push
fnstsw
or
ret
fcmovu
mov
pop
rep
dec
int
int
cmc
mov
imul
imul
mov
movs
pop
or
lds
adc
jae
jnp
xchg
jo
dec
push
mov
mov
mov
fisttp
pop
mov
sub
inc
loope
ja
sbb
int
adc
mov
push
imul
(bad)
scas
mov
loop
or
dec
ret
mul
sbb
dec
xchg
xor
sbb
fnstenv
lds
shr
sahf
dec
sahf
dec
push
xor
inc
popa
mov
push
icebp
mov
pop
sub
mul
pop
pop
adc
xor
mov
dec
or
lea
mov
ret
jle
sbb
mov
js
dec
fnstcw
in
shl
cs
outs
mov
dec
mov
mov
(bad)
adc
fcom
push
pusha
mov
mov
mov
or
int3
ret
xchg
fsubr
outs
pop
mov
mov
cmp
das
in
ficomp
aam
push
retf
cmp
inc
fistp
into
inc
aam
push
add
add
adc
push
cs
imul
sub
sbb
mov
sub
movs
cli
mov
xchg
call
push
push
inc
jb
or
cmps
mov
mov
fisttp
(bad)
shr
and
sbb
imul
mov
jae
emms
int3
cwde
add
mov
bound
dec
fidivr
jne
xchg
loop
mov
in
(bad)
fstp
into
ds
xor
xchg
push
shr
ins
out
xchg
cmp
pop
inc
push
call
inc
mov
mov
dec
call
lds
fsub
fisttp
jbe
sti
mov
push
jns
test
add
test
mov
das
mov
ja
xchg
daa
cmps
add
outs
aaa
or
or
xor
sar
(bad)
pop
fdivr
push
or
fs
jl
test
mov
int3
das
pop
inc
push
xchg
adc
pop
aas
dec
arpl
add
mov
leave
sub
mov
mov
outs
loopne
loop
rcr
pushf
mov
mov
push
(bad)
fimul
(bad)
movs
leave
call
xor
or
mov
aad
in
mov
inc
int3
cmps
and
adc
lahf
les
aam
pop
inc
movs
repnz
arpl
mov
ficomp
shl
sbb
or
call
in
popf
(bad)
icebp
or
rol
jl
sar
cmp
les
inc
fnstenv
jp
mov
sub
repnz
iret
inc
call
cdq
cdq
lods
xor
jo
inc
or
shl
push
dec
cmps
push
cmp
sbb
inc
sub
shl
pop
in
leave
rcr
jp
dec
jl
add
std
jns
call
cmp
or
ds
imul
sub
stos
xchg
stc
xor
leave
popa
add
push
cdq
es
rcr
stos
outs
adc
(bad)
jae
jmp
cld
(bad)
(bad)
sbb
call
mov
fs
(bad)
mov
jg
movs
fs
in
adc
add
jl
xlat
dec
outs
or
sbb
inc
inc
mov
push
dec
push
jbe
push
jmp
les
(bad)
mov
adc
ins
lahf
sub
loope
mov
mov
xor
div
sub
dec
out
cmp
inc
popf
push
jbe
cwde
or
sbb
aas
jbe
push
mov
or
cmp
pop
sar
push
xor
imul
push
inc
js
outs
and
jle
fst
ins
jae
lahf
loop
adc
pop
mov
jg
push
xor
out
fcomp
sub
mov
outs
pop
mov
xchg
sbb
mov
mov
dec
jp
xchg
cmps
push
mov
jmp
and
ins
mov
mov
pop
fst
dec
add
mov
or
sub
xchg
dec
cmp
inc
sub
(bad)
int3
dec
and
jecxz
jmp
imul
ins
jecxz
out
mov
cmp
lahf
bnd
inc
and
inc
cmp
movs
stos
jmp
lds
int
dec
or
lds
push
and
lods
(bad)
add
cmp
mov
inc
sbb
ficom
ret
jnp
push
mov
push
cdq
or
pop
fld
aas
xchg
test
and
or
mov
cmp
xchg
sti
sub
adc
stos
and
fld
retf
dec
sub
inc
maxps
scas
ins
(bad)
and
popf
sub
push
aam
ud2
cmp
push
cmp
lods
pop
xchg
mov
pop
and
jge
(bad)
mov
sti
cmp
js
out
movs
dec
pop
inc
dec
inc
jp
ss
shr
mulps
out
jecxz
mov
push
mov
inc
jo
dec
sbb
push
movs
scas
lea
clc
jle
mov
pushf
jb
jl
jg
fadd
loopne
cmp
and
jl
scas
mov
or
xchg
sub
in
pop
xchg
jmp
retf
pop
push
dec
xor
shl
repnz
xchg
pop
fwait
aam
adc
push
jp
cmp
test
add
adc
xlat
add
fdivr
dec
sahf
mov
int3
std
mov
mov
pop
lds
fstp
movs
and
cmp
sub
popf
js
and
push
out
or
pop
mov
add
mov
xchg
movs
outs
cmps
jge
jno
jno
mov
adc
mov
sub
ins
retf
xchg
cwde
outs
jbe
lods
scas
and
sub
outs
in
fld
or
push
push
out
xor
pushf
xor
jl
pushf
adc
ins
aad
ds
enter
(bad)
daa
imul
fild
shr
aad
mov
sbb
pop
je
fdivp
ins
push
test
sbb
lds
pop
sub
lock
cwde
inc
and
cmp
int
lods
je
iret
or
xor
retf
popa
dec
in
hlt
scas
lock
jmp
shl
xor
mov
out
adc
push
xor
repnz
jl
xor
or
or
jmp
dec
scas
cmp
pop
sub
repnz
les
test
cmp
cmp
mov
jnp
adc
cmc
(bad)
outs
xor
iret
idiv
sub
jmp
or
hlt
repz
cmp
lods
mov
enter
cmp
data16
mov
inc
mov
mov
jae
and
enter
mov
mov
test
in
iret
and
sbb
sbb
inc
push
or
xor
clc
ss
fwait
int3
shl
sub
and
rcl
popa
ins
aaa
push
out
or
cld
or
cmp
jg
pop
cmp
test
push
sbb
outs
data16
push
push
cmp
jle
fstp
movs
lods
pop
adc
loope
dec
jbe
test
scas
movs
std
jl
rol
adc
add
sbb
pusha
dec
ffree
or
sub
push
jmp
mov
aam
mov
ins
push
pop
mov
or
xchg
out
dec
addr16
das
mov
enter
push
aad
leave
pop
mov
pop
outs
(bad)
clc
mov
sbb
mov
ins
push
sub
sar
mov
add
add
aad
add
cwde
add
add
add
adc
add
add
add
add
add
inc
lock
add
out
sbb
cmp
cmp
push
push
das
ret
push
test
test
ret
sbb
mov
aad
push
push
aad
cmp
dec
cmp
dec
and
mov
mov
xchg
popa
xchg
nop
(bad)
mov
sub
xor
push
pop
(bad)
pop
mov
ret
gs
xchg
adc
add
jae
rcl
loopne
sbb
cwde
dec
dec
mov
(bad)
cdq
cmp
pop
cmp
cmc
test
mov
or
push
sbb
ins
(bad)
adc
shl
shr
jne
ror
in
addr16
jb
fsubr
mov
jmp
ins
sbb
loope
xchg
hlt
ret
add
adc
les
mov
out
outs
out
addr16
fmul
arpl
aaa
arpl
cmp
test
div
mov
sub
fnstsw
mov
pop
mov
clc
xor
aas
jmp
jge
inc
mov
icebp
dec
xchg
int3
lds
mov
(bad)
push
cmp
xchg
(bad)
shl
xchg
add
loop
fidivr
sbb
dec
scas
xor
cmp
test
pop
adc
adc
ror
push
clc
popf
repz
mov
mov
mov
xchg
adc
jecxz
xchg
in
stos
dec
sub
or
aam
shl
push
shr
lods
mov
in
add
punpckhwd
or
pop
(bad)
vunpckhps
or
mov
push
push
push
test
inc
test
(bad)
fstp
push
stc
or
push
in
sub
aaa
loop
out
pop
sub
sbb
ins
or
fcom
inc
rep
mov
mov
je
dec
lea
mov
hlt
(bad)
sub
xor
push
(bad)
mov
dec
push
pusha
jge
mov
js
addr16
or
jl
push
cwde
xor
in
outs
pushf
mov
retf
xor
stos
sbb
dec
adc
js
adc
xor
xchg
adc
cmp
mov
or
dec
fsubr
jnp
loope
out
sub
adc
call
cmp
fld
ficomp
int
out
dec
ret
fmul
cmp
sbb
lods
and
adc
and
lods
push
jo
adc
pop
cmps
sub
cs
out
fisubr
cmc
test
push
dec
es
push
(bad)
pop
adc
(bad)
push
jmp
es
sbb
imul
dec
pop
int
mov
enter
ja
inc
lods
lods
out
lahf
dec
popf
mov
add
mov
loop
pop
xchg
jmp
lods
pop
movs
mov
sbb
xchg
retf
cmp
shr
ds
sub
cmp
mov
lea
cmp
test
fbstp
fcomip
add
lds
pop
push
data16
push
cmp
ret
jg
xchg
aad
in
icebp
adc
push
mov
mov
les
sub
mov
mov
adc
fisubr
gs
ja
add
sub
pop
(bad)
cld
mov
push
cs
add
xor
sub
xchg
pop
dec
lods
fdiv
push
sar
fcmovnu
dec
jle
mov
nop
enter
sub
push
add
jmp
into
ins
xchg
dec
idiv
or
sahf
repz
pop
cmp
jmp
xor
inc
push
dec
cdq
imul
mov
jnp
lods
les
mov
xchg
xor
mov
push
pop
test
cli
or
popf
mov
scas
push
call
call
cmp
mov
push
mov
and
adc
lea
ins
rol
(bad)
cmps
(bad)
cmc
pop
xchg
popf
or
jge
pusha
gs
jecxz
jle
cwde
mov
stc
push
adc
inc
sub
(bad)
in
push
into
and
sbb
mov
ins
sbb
fucomp
in
xor
fidivr
mov
lods
push
sar
mov
xor
dec
ins
(bad)
sbb
add
stc
ins
arpl
nop
fnstenv
sar
cdq
or
add
out
arpl
add
mov
pop
pop
jl
xchg
mov
loop
pop
rcl
cmps
sbb
mov
mov
and
adc
(bad)
scas
push
pop
pop
test
mov
sbb
pusha
push
push
mov
push
hlt
dec
xor
fbstp
cmps
std
add
cmps
cld
dec
and
inc
and
mov
adc
test
sub
xchg
or
or
cmps
cwde
mov
mov
jno
push
lods
ins
fsubr
fs
adc
lock
je
lods
jmp
in
xchg
retf
cmps
faddp
or
ds
and
pop
fimul
cmc
rcl
or
push
push
cmp
jae
pop
push
js
popa
movs
ret
jno
mov
jns
xchg
mov
out
stc
cmc
cmp
sub
stos
int
and
pop
jmp
cmp
cmp
mov
pop
mov
adc
shl
xchg
jg
in
jb
pop
pusha
adc
xchg
jle
push
inc
inc
fwait
add
call
mov
mov
popf
xchg
xchg
jg
outs
(bad)
into
mov
call
or
(bad)
sbb
or
or
mov
pusha
retf
lea
xor
dec
arpl
inc
imul
mov
retf
sbb
adc
sub
dec
jg
mov
(bad)
icebp
sti
mov
pop
mov
mov
and
lea
xchg
pop
sar
push
ss
loopne
pop
mov
pop
and
and
mov
mov
jmp
loop
int3
adc
mov
push
popa
lds
daa
aas
hlt
pop
push
cmp
and
test
cmp
adc
xor
out
out
lock
pushf
aas
cwde
sub
dec
push
(bad)
cmp
fistp
or
(bad)
push
mov
enter
pop
rol
pop
sbb
sbb
pop
push
test
cmc
test
push
add
xchg
sub
leave
sub
lahf
sbb
cli
ins
(bad)
xor
pop
nop
cmp
imul
mov
mov
inc
test
arpl
pushf
loopne
out
out
imul
pop
mov
push
(bad)
fadd
cmp
movs
addr16
mov
rcl
push
sar
mov
shl
xor
pop
(bad)
imul
pop
and
xchg
je
test
test
adc
dec
lods
xchg
mov
fcomp
test
clc
cmc
jmp
aad
repnz
sbb
or
mov
ret
aad
dec
dec
xchg
inc
adc
inc
cld
pop
jmp
jl
xchg
sub
jle
rcl
push
or
sbb
mov
dec
mov
mov
and
xchg
int
xchg
fild
cld
sub
pop
lds
adc
add
in
out
jl
gs
xlat
lahf
loope
call
nop
mov
dec
inc
pop
out
retf
repnz
rol
imul
mov
imul
jmp
push
pop
jge
sbb
jnp
cli
popf
fcomp
push
out
inc
retf
daa
pop
cmp
mov
jg
aaa
xor
repnz
pop
sar
std
bound
mov
dec
daa
pop
cmp
pop
or
js
popf
ins
sar
iret
stc
xor
clc
mov
mov
inc
sub
mov
sub
jecxz
push
push
test
dec
aaa
mov
xlat
xchg
int3
in
je
mov
or
jle
or
mov
sti
mov
enter
mov
test
mov
call
add
sbb
imul
cmp
jecxz
hlt
cmp
test
or
mov
and
mov
repz
arpl
cli
add
rcr
dec
pop
scas
dec
je
out
fwait
xor
jo
outs
mov
imul
mov
fnsave
or
cmc
push
leave
lods
mov
cs
dec
std
xchg
das
xchg
fild
scas
xor
xchg
adc
mov
in
and
call
mov
mov
fdivr
mov
xchg
xchg
std
shr
ret
and
hlt
push
xor
stos
(bad)
mov
stos
xor
inc
mov
and
sub
jmp
lods
sbb
outs
cmp
imul
jne
neg
sub
sbb
xchg
xor
loop
push
mov
jecxz
call
stc
or
mov
stc
dec
lea
mov
xlat
dec
dec
cld
call
test
fldenv
xor
movs
or
xchg
push
lahf
sub
movs
add
fwait
aad
jecxz
inc
add
cmps
mov
scas
jne
sub
pop
mov
push
inc
sub
sub
dec
movs
jnp
dec
sar
dec
fnstenv
push
loop
pop
add
retf
jne
jge
sbb
push
mov
mov
add
sub
aaa
push
les
repz
test
test
sub
push
add
scas
retf
pop
dec
xchg
retf
mov
mov
jecxz
sub
in
push
fimul
mov
mov
adc
pop
mov
mov
out
es
cld
(bad)
loope
or
cmps
sbb
xlat
das
repz
repz
nop
mov
xchg
outs
loop
js
out
sub
or
pop
adc
xchg
jecxz
jns
xlat
xor
pop
faddp
aas
xchg
mov
or
jge
jge
cs
test
xchg
jecxz
mov
cmp
cmp
push
lods
push
sar
mov
inc
or
dec
loope
sbb
sub
sub
scas
dec
mov
retf
xor
add
xlat
jae
sbb
xlat
or
les
or
pop
retf
xchg
mov
push
or
icebp
lods
xlat
cmc
shl
mov
lahf
ss
(bad)
aaa
iret
not
dec
pop
push
jl
mov
dec
je
inc
push
fld
data16
cli
adc
retf
cwde
pop
fisub
bound
setbe
dec
test
shr
sahf
sahf
mov
fisub
repz
rcl
outs
movs
sbb
jp
dec
ficom
ror
mov
add
sar
push
inc
loopne
add
sti
pop
add
add
add
add
inc
or
add
add
add
add
add
adc
add
add
add
pop
pop
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
cwde
repnz
cmps
ror
add
add
add
aaa
add
ins
add
rol
add
and
add
xor
add
add
add
add
add
add
add
xchg
add
add
add
xchg
sub
mov
add
add
add
xor
add
add
add
cmp
add
add
aam
rcr
ins
xor
mov
jmp
leave
mov
xchg
pop
push
mov
cmps
jno
adc
shr
cmp
loope
out
bound
dec
aad
sub
in
clc
mov
loopne
add
sahf
pop
jecxz
pop
push
xchg
xchg
cmp
cmp
cli
pop
or
pause
mov
mov
fisttp
data16
dec
xor
inc
xor
inc
mov
xor
std
dec
jne
(bad)
fisub
ret
inc
fistp
inc
pop
mov
rol
(bad)
loopne
(bad)
out
(bad)
js
or
cmc
push
mov
mov
jb
pop
(bad)
pop
test
adc
xchg
test
xchg
leave
arpl
out
cli
mov
aas
and
add
retf
jp
inc
imul
inc
hlt
leave
test
movs
and
dec
popa
loope
xlat
repz
adc
push
xchg
test
cmps
(bad)
test
xchg
cwde
cmp
push
mov
out
adc
aad
dec
cmp
cwde
(bad)
icebp
or
sbb
or
jb
fldcw
jnp
dec
mov
jns
mov
xchg
sub
push
inc
repz
xor
cli
adc
(bad)
jbe
fwait
aas
movs
stos
mov
mov
data16
cs
pop
dec
lock
ret
dec
inc
aad
js
mov
xor
mov
stc
and
ror
mov
xchg
in
je
test
cli
push
jno
mov
mov
or
dec
add
inc
mov
sahf
(bad)
out
test
leave
(bad)
xchg
mov
ror
sbb
pop
aad
shl
add
jecxz
xchg
pusha
and
pop
mov
mov
push
call
mov
mul
xor
sti
push
or
jno
nop
(bad)
or
xchg
push
ins
mov
lds
jl
push
sbb
ret
mov
xchg
xchg
out
or
xchg
ins
dec
inc
ja
jle
xchg
xor
xor
fcom
cmc
xchg
xchg
fcomip
ffree
mov
ins
xor
retf
repz
push
mov
fld
jl
mov
cmp
mov
jne
xchg
dec
sub
ja
ins
mov
adc
gs
jg
xor
out
cld
cmp
outs
pop
sub
or
mov
sar
mov
add
aad
ins
(bad)
outs
daa
jge
cwde
jno
push
xchg
add
movs
stos
and
gs
push
mov
sbb
pop
clc
sti
outs
xchg
dec
sbb
dec
(bad)
scas
xchg
repnz
(bad)
mov
loope
sbb
xchg
ret
mov
shl
lods
mov
or
fsub
xor
jnp
sti
xor
push
imul
mov
and
lahf
jmp
outs
add
jmp
pop
not
push
icebp
jne
jae
xor
dec
dec
or
dec
retf
add
adc
cmp
xchg
in
jl
adc
das
ins
lods
pop
iret
push
mov
pop
ret
(bad)
xchg
push
add
into
(bad)
div
xor
sub
add
mov
mov
xor
arpl
cmps
push
inc
movs
jne
push
lock
shl
std
mov
rcr
arpl
cmp
adc
adc
movs
in
mov
hlt
(bad)
lahf
mov
and
adc
jb
xlat
mov
jl
lock
and
in
xor
out
lock
dec
cdq
sub
xchg
pop
adc
push
xor
mov
fild
outs
mov
pop
inc
ja
ss
push
inc
scas
pop
push
ins
mov
and
push
ds
shr
jbe
mov
out
xchg
inc
inc
sahf
out
xchg
push
ins
lds
(bad)
sahf
shl
inc
repnz
jecxz
mov
mov
out
scas
jl
dec
ja
out
mov
or
cs
mov
jb
sbb
adc
pop
push
and
les
(bad)
mov
pushf
rcl
pop
fld
add
xchg
push
daa
outs
jmp
sbb
jne
push
fisttp
jle
mov
xchg
arpl
xor
mov
push
pop
(bad)
jne
and
fwait
adc
dec
inc
adc
sub
icebp
das
in
push
pop
jmp
mov
clc
imul
pop
fmul
cmp
push
xchg
imul
je
cmp
ja
xlat
lea
cmc
not
xor
dec
pop
sub
and
xchg
movs
xchg
(bad)
ficomp
mov
test
inc
push
and
rcl
mov
or
cld
retf
xor
movs
xchg
fdivr
imul
int
or
std
fimul
dec
sub
cwde
ss
retf
and
adc
dec
(bad)
call
outs
push
cld
pop
aad
addr16
inc
repz
in
mov
jmp
pop
sbb
xchg
push
adc
(bad)
add
loop
out
sahf
inc
dec
out
sbb
int
jmp
mov
adc
ins
mov
arpl
sbb
push
mov
in
or
xchg
jge
aad
jp
sub
out
mov
je
jl
sub
jno
mov
pop
cdq
xor
xchg
add
mov
popf
mov
dec
jecxz
xor
inc
push
sbb
pop
adc
mov
dec
out
stos
mov
mov
jl
mov
fidivr
je
xchg
sub
xchg
retf
cmp
aad
jmp
pusha
cdq
js
mov
jecxz
or
mov
daa
stos
(bad)
ins
pop
leave
pusha
je
and
fimul
in
popa
sar
or
xchg
(bad)
or
jecxz
popf
rol
call
in
pop
mov
in
aas
enter
stos
mov
xlat
push
(bad)
cmp
sbb
adc
add
loope
mov
cmps
shl
push
outs
ficom
pop
push
xchg
aas
loope
mov
mov
add
ret
inc
push
(bad)
fsubr
push
or
imul
lods
test
or
enter
push
adc
push
jecxz
scas
dec
inc
inc
outs
fwait
dec
outs
inc
lods
in
xor
cs
sti
aad
or
and
(bad)
repz
mov
jg
xor
sti
jbe
add
push
push
lea
pop
dec
mov
jne
xchg
dec
es
int
push
and
push
pop
or
xchg
ret
xchg
jmp
(bad)
xchg
sbb
dec
ror
das
ss
mov
js
sub
dec
push
jne
loop
jns
jecxz
jae
xchg
dec
and
in
sbb
test
jmp
inc
outs
ficom
cmp
idiv
mov
rcl
test
(bad)
out
fcom
jo
cmp
leave
lods
mov
fcmovnb
test
lods
dec
addr16
adc
push
pusha
inc
out
mov
mov
nop
mov
push
leave
daa
out
sub
pop
mov
not
mov
cmp
xchg
or
bound
xchg
stos
mov
add
mov
xchg
push
jbe
imul
or
aam
mov
movs
adc
fwait
pushf
inc
lahf
sbb
fyl2xp1
loope
repz
std
xchg
mov
sbb
add
jmp
push
ret
cmp
in
dec
leave
shl
inc
mov
pop
fisttp
or
mov
das
(bad)
sbb
cmc
bound
add
cmps
and
sti
out
daa
fnstsw
lods
cmp
in
mov
xchg
mov
xlat
add
and
fidiv
out
inc
mov
(bad)
inc
sub
adc
(bad)
test
fld
add
out
xchg
outs
mov
out
cmc
mov
cmc
dec
dec
ss
shr
add
imul
into
test
imul
out
cs
push
or
sbb
pop
and
xlat
sub
mov
push
sbb
and
test
cli
push
sub
xchg
ret
sub
gs
jb
adc
sbb
cmc
jp
mov
xor
imul
jo
repnz
dec
xor
sahf
dec
enter
xor
xlat
sbb
lods
cmp
retf
push
enter
sub
(bad)
fcom
ror
pop
jnp
adc
or
sar
add
sub
out
mov
xchg
xor
(bad)
jno
cmc
shl
ja
test
adc
std
scas
jo
sar
sbb
add
jne
jae
sbb
js
fstp
mov
sub
test
sbb
push
cdq
sub
push
xchg
fcomp
(bad)
sub
shr
ret
ins
mov
jg
and
cmps
mov
ficom
shl
adc
sub
repnz
and
loope
jae
fimul
fs
mov
js
jo
cs
cwde
mov
sbb
test
sbb
mov
mov
test
push
ds
fwait
retf
loopne
scas
and
fisttp
xor
jns
mov
or
dec
sub
sbb
loope
clc
into
outs
or
rol
fiadd
mov
ret
cs
cmovle
add
jae
sahf
repz
fsubr
(bad)
xchg
push
and
or
xchg
jp
neg
mov
xor
and
inc
pop
push
dec
push
mov
ja
sti
cmp
gs
dec
cmp
push
sbb
push
int3
stos
iret
xchg
and
inc
stos
jnp
adc
aaa
sbb
test
or
inc
jae
cli
mov
vpackssdw
inc
mov
in
and
mov
ja
fnstsw
dec
mov
push
in
mov
stc
clc
cwde
push
adc
movs
or
sub
sbb
push
cmp
push
lods
dec
sbb
je
scas
int
and
and
jg
mul
in
mov
pop
jg
lods
scas
mov
test
imul
xchg
dec
or
sub
inc
cmps
cmp
sub
ret
mov
cmp
das
mov
adc
add
outs
and
pop
lock
jo
mov
xchg
pop
stc
dec
cmps
gs
retf
xor
nop
fcmovb
ins
push
dec
add
adc
add
add
pop
pop
add
add
add
icebp
add
add
add
add
out
add
add
jnp
add
add
add
jnp
pop
add
add
add
add
add
add
or
inc
jmp
add
or
add
add
add
add
add
push
add
add
std
add
movs
add
and
add
sbb
jne
add
add
add
shl
add
sbb
arpl
add
add
add
add
add
mov
add
cli
add
scas
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
add
add
je
pop
add
add
add
add
int
cmp
inc
cmp
add
add
add
jo
adc
add
inc
scas
add
jge
add
add
int3
lods
sahf
push
add
add
add
push
add
dec
add
dec
add
add
add
sbb
add
xchg
mov
dec
cmp
loopne
data16
(bad)
mov
aam
dec
test
push
push
inc
cmps
xchg
cld
retf
xchg
adc
jb
mov
ret
inc
sub
add
adc
and
add
setae
mov
clc
inc
or
push
inc
shr
pop
test
add
jnp
xchg
or
mov
in
sbb
mov
add
sub
cs
lds
push
mov
lock
fwait
or
inc
mov
stos
loopne
clc
movs
cmp
mov
jle
or
push
(bad)
pop
imul
test
imul
dec
sbb
int
bound
lds
sub
mov
int
pushf
shl
pop
sub
jmp
in
retf
mov
addr16
sbb
dec
out
addr16
lea
shl
out
add
fld
(bad)
les
push
popa
mov
push
fldcw
jb
xchg
sub
sbb
out
mov
mov
push
sbb
jno
loope
clc
popw
retf
ss
mov
inc
xor
or
push
inc
imul
pusha
aas
fsub
jmp
inc
ja
jl
js
lock
xor
test
(bad)
and
(bad)
shl
mov
repz
(bad)
jecxz
loope
push
or
inc
cs
dec
mov
mov
gs
scas
xchg
pop
cdq
int
mov
fwait
nop
inc
add
aam
sub
cdq
scas
(bad)
aam
lock
fcmovnu
lahf
(bad)
movs
pop
jmp
outs
daa
xor
mov
sub
xor
adc
or
aas
inc
push
test
push
dec
(bad)
adc
dec
cwde
adc
push
loopne
mov
inc
cmp
mov
mov
mov
scas
into
dec
cmps
cwde
cli
loop
lock
xor
outs
ins
loopne
outs
push
adc
pop
sub
adc
dec
add
add
sar
mov
xor
test
xchg
sub
inc
xchg
sbb
inc
loopne
ins
mov
leave
push
fs
push
cli
movzx
imul
ret
mov
shl
bound
test
and
or
push
fwait
aaa
jbe
(bad)
fidiv
popf
add
rol
daa
or
mov
mov
test
inc
out
in
repz
xor
sub
inc
cmp
pop
xor
cdq
call
or
mov
cmps
add
xchg
ret
mov
repz
aas
sbb
add
lahf
stos
dec
ins
sub
sbb
fsub
xor
ret
loopne
fsub
psubw
pop
ins
xchg
das
inc
pop
cmc
repz
ds
ja
fistp
loopne
mov
lea
fscale
jmp
or
fisubr
jae
and
addr16
jae
pushf
lods
sbb
cmp
out
push
mov
xlat
or
mov
pushf
jp
adc
mov
xchg
or
jmp
call
pop
mov
out
ror
cmps
ds
xor
icebp
add
das
retf
mov
add
add
pop
mov
ds
or
stc
jecxz
add
lods
mov
in
add
mov
out
or
loope
rol
imul
loopne
je
inc
jmp
dec
jle
mov
fs
xor
pop
mov
pushf
jle
addr16
neg
push
xor
xor
neg
dec
or
push
sub
cmp
lea
xchg
leave
stc
out
sar
sbb
icebp
xchg
jle
sbb
movs
jae
stos
(bad)
loop
cmp
jmp
or
mov
bound
movs
mov
cmp
pop
lock
mov
fldcw
mov
test
mov
mov
jmp
and
arpl
sti
push
mov
jmp
xchg
enter
ret
cmovb
imul
test
movs
in
mov
push
push
out
sbb
adc
jbe
fidivr
bnd
xor
(bad)
adc
pop
jno
sub
daa
cmc
inc
push
add
in
sbb
cdq
xchg
sub
mov
mov
inc
pop
retf
outs
je
xchg
sub
jmp
pop
adc
call
push
cmp
sbb
inc
test
push
push
xchg
dec
mov
mov
adc
xchg
popf
cmp
in
fsubrp
in
popa
jae
dec
pop
pop
in
xchg
ret
sti
lahf
into
sbb
xor
dec
push
scas
dec
xchg
jno
call
push
sub
inc
stc
lods
jl
repz
lock
(bad)
sub
or
shl
pop
dec
jp
adc
mov
les
movs
adc
inc
sub
sbb
jp
pop
in
arpl
es
sub
add
mov
int
(bad)
call
pop
leave
scas
stc
and
pop
xor
mov
rcr
fistp
cli
sbb
mov
aam
adc
mov
outs
push
loop
or
mov
into
xchg
popa
leave
sub
jae
clc
inc
jbe
sub
out
adc
scas
xchg
push
outs
lea
enter
mov
test
inc
jmp
jecxz
ins
add
dec
inc
add
in
bound
mov
xchg
lahf
xchg
ss
aad
sbb
not
dec
cmps
adc
jne
jnp
jne
cmps
mov
mov
push
push
push
pusha
push
xor
or
push
lahf
ds
mov
arpl
sahf
loope
push
jne
in
addr16
scas
stos
add
popf
mov
out
push
retf
adc
ins
pop
sub
popf
cmp
pushf
lahf
mov
hlt
scas
loope
dec
cli
push
scas
inc
jnp
jp
pop
cli
pop
or
sbb
test
or
int
xchg
test
(bad)
fldcw
inc
inc
hlt
push
jnp
stos
sti
inc
in
outs
xchg
(bad)
jl
mov
lock
lods
jne
clc
ss
xchg
lods
push
loope
pusha
sub
ja
cmps
push
icebp
dec
int
dec
jg
test
ret
imul
inc
mov
(bad)
call
inc
test
sub
cmp
dec
retf
push
mov
jo
mov
daa
imul
jne
add
sub
push
outs
and
(bad)
mov
in
or
lods
cmp
std
mov
cld
sahf
sbb
and
arpl
enter
popa
repz
enter
jmp
shl
fimul
fs
push
clc
cs
popf
mov
dec
mov
dec
pusha
out
pushf
dec
sbb
mov
out
(bad)
rol
lods
cmp
test
push
pop
mov
sahf
sar
add
fwait
int
fwait
cmc
jo
sbb
rcr
outs
xchg
sbb
mov
mov
or
stos
add
jno
add
stc
rcr
cli
jl
jmp
pop
jmp
loopne
mov
pop
loopne
aas
sub
xchg
popf
repz
xlat
mov
add
sub
mov
stc
scas
pop
and
fistp
stc
les
fimul
mov
jns
jnp
pop
dec
test
sub
jmp
mov
loope
arpl
fst
cmp
sub
mov
mov
sbb
cmp
scas
fsubr
arpl
add
loopne
inc
xchg
pop
jmp
dec
test
sbb
into
and
mov
mov
mov
ds
scas
retf
(bad)
es
mov
pop
popf
fidiv
jmp
outs
(bad)
mul
jge
out
arpl
js
sub
mov
mov
dec
pop
retf
xchg
lds
pop
in
and
inc
add
inc
xchg
dec
sub
inc
icebp
or
in
test
cmc
mov
xchg
sub
dec
outs
stos
iret
clc
ins
(bad)
outs
fnstenv
fisttp
mov
cmc
add
ss
(bad)
test
dec
xchg
jecxz
xor
jno
mov
sub
scas
mov
pop
adc
jg
jnp
loope
pop
scas
into
out
mov
cld
pop
adc
adc
repz
or
push
cmp
dec
push
sbb
xchg
push
pop
add
enter
scas
push
fistp
and
jle
push
push
fs
sub
mov
sub
gs
mov
aad
aam
ds
mov
test
std
pushf
ja
xor
(bad)
cwde
loopne
leave
ret
add
push
and
sbb
mov
jg
xchg
icebp
pop
inc
mov
jo
stos
dec
repz
inc
fwait
pop
jne
(bad)
push
cmp
out
xchg
sbb
cmp
call
adc
jmp
mov
pop
dec
and
and
popa
xlat
add
mov
mov
inc
jae
popf
inc
or
xchg
pushf
mov
and
jmp
jmp
mov
ror
scas
and
or
or
(bad)
test
addr16
pop
loop
pop
push
push
in
cmps
jae
push
cmp
das
mov
sub
sub
xchg
out
mov
pop
movs
mov
nop
pop
int
jg
in
cmp
add
fnstenv
and
fnsetpm(287
xor
rcl
mov
mov
dec
pushf
repz
xchg
jno
dec
popf
pop
(bad)
jnp
inc
xchg
clc
repz
mov
xor
inc
or
pop
test
in
fwait
inc
scas
pushf
cmp
fdivp
cmp
clc
push
ret
xor
ja
and
sub
and
gs
in
mov
xchg
lods
jp
ss
adc
xchg
cmp
mov
rcl
sbb
sub
call
loop
mov
popf
scas
xchg
mov
cmc
adc
cmp
hlt
sub
cmp
nop
call
les
call
and
add
adc
out
cdq
pushf
fbstp
mov
int3
fwait
shl
mov
outs
and
push
je
xor
add
test
sbb
jle
and
mov
je
cmp
pop
(bad)
jno
sub
xchg
xchg
mov
outs
sbb
push
jne
push
xchg
sbb
(bad)
into
loopne
lods
inc
pop
fdivrp
jp
scas
cmp
(bad)
cwde
xchg
jbe
inc
call
fldl2e
in
ins
loope
cmps
std
jle
mov
or
pop
nop
push
jb
mov
push
sbb
inc
fwait
inc
scas
mov
daa
retf
ss
in
int
push
adc
daa
adc
loopne
ins
or
mov
test
add
add
add
sub
add
xor
nop
add
inc
add
add
push
add
add
add
loope
add
add
add
add
add
add
or
add
add
add
add
(bad)
add
add
les
add
add
add
xor
xchg
xor
fld
add
cmp
add
mov
add
add
add
add
xchg
add
mov
add
add
add
add
add
add
add
add
cmp
stos
add
add
add
add
add
xchg
add
add
dec
sub
add
add
add
push
xchg
add
mov
add
add
add
add
add
push
test
add
add
add
add
add
add
iret
add
adc
cmp
add
add
push
add
bound
add
xchg
mov
dec
add
push
loope
std
jbe
in
pop
mov
pop
popf
test
pop
inc
adc
nop
call
push
push
int3
mov
arpl
xor
jae
popf
jns
jb
cld
mov
lock
cli
ja
sub
jbe
mov
mov
pop
dec
shr
or
mov
lods
ja
cmc
dec
int3
push
sahf
cmp
das
gs
mov
ins
cmp
lods
stos
mov
jne
aaa
sub
stos
sbb
dec
jnp
and
int3
inc
addr16
int
mov
mov
ss
xchg
jl
int
nop
cmp
mov
test
xchg
adc
adc
data16
xchg
mov
les
push
mov
pop
pop
das
mov
sub
pop
pop
add
mov
cmp
mov
push
jg
xchg
addr16
pusha
scas
and
stos
jecxz
dec
or
movs
clc
test
and
sahf
aam
in
out
jns
jmp
lods
into
shl
lahf
or
pop
into
jae
xchg
jge
imul
retf
movs
mov
stc
rcl
les
sub
jbe
loop
and
out
std
test
fwait
addr16
fisubr
inc
add
push
aas
sbb
mov
loopne
adc
(bad)
push
push
mul
in
jl
pop
lods
xor
jl
ror
jmp
push
in
in
push
aam
loope
ss
dec
xchg
outs
nop
fidivr
hlt
jp
or
push
pusha
fcomp
inc
dec
cmps
(bad)
mov
stos
and
retf
in
(bad)
cmp
push
jmp
inc
pop
lods
mov
ret
cmp
in
pop
fidivr
(bad)
in
inc
pop
imul
mov
add
mov
add
clc
xchg
daa
imul
pop
test
sub
repz
fcom
sub
test
repz
and
ja
ror
cmp
xchg
pop
pop
aaa
mov
test
addr16
adc
inc
jns
addr16
cmps
lds
test
daa
xor
xlat
push
sbb
fdiv
add
fimul
jne
sub
sti
stos
pop
loop
lods
mov
push
jp
dec
mov
sbb
push
xor
pop
mov
mov
mov
(bad)
call
imul
jb
push
xchg
test
lock
jmp
das
ja
fcomp
cmp
mov
dec
shr
retf
pop
ss
fild
xor
aam
scas
adc
ja
nop
sbb
jne
daa
popf
push
mov
push
dec
push
dec
pop
into
cmps
int
fcmovbe
ins
or
inc
jno
cmps
fisttp
shl
mov
pop
mov
and
jg
push
jb
or
sbb
dec
jno
test
int3
popf
pop
xlat
mov
cmp
pop
mov
ins
ret
scas
mov
outs
jg
scas
not
lahf
or
jae
lahf
rol
add
ja
xchg
ret
out
pop
cmps
mov
push
std
adc
leave
(bad)
out
out
inc
ins
inc
sbb
shl
aam
xchg
mov
jle
inc
and
and
imul
xchg
ret
(bad)
mov
push
test
push
or
les
dec
mov
scas
mov
fcom
inc
mov
xchg
hlt
and
adc
mov
outs
pusha
(bad)
rol
fnsave
pop
adc
mov
test
test
retf
xor
cmps
mov
push
mov
sub
sbb
lea
push
icebp
xor
sbb
in
(bad)
scas
pop
mov
sti
and
(bad)
js
loope
adc
pop
lahf
gs
movs
out
or
xor
imul
shl
adc
test
mov
mov
ins
arpl
pop
movs
add
imul
mov
cdq
mov
push
or
push
inc
test
(bad)
push
nop
xor
inc
and
push
sub
call
bound
int
aam
dec
xor
cmp
rol
push
out
xor
ficomp
jle
clc
xor
int3
popa
dec
adc
mov
jge
and
aaa
add
cmc
mov
ds
add
inc
dec
jp
dec
sbb
shl
fs
mov
jno
addr16
mov
loop
hlt
xor
xchg
inc
fcom
dec
cmp
sbb
mov
pop
xchg
popa
leave
addr16
cwde
or
xchg
inc
aaa
or
icebp
or
rcr
in
dec
add
mov
movs
mov
dec
or
pop
xor
push
jno
pop
ret
jecxz
fisubr
sub
mov
or
sub
mov
rcr
push
int
fst
push
popa
jmp
int3
imul
stc
jae
dec
dec
adc
xchg
xor
sub
lods
icebp
mov
push
fidivr
rol
je
sbb
sbb
xor
scas
stos
jae
aam
push
out
lahf
or
clc
and
adc
outs
push
pop
add
loopne
adc
dec
push
div
clc
pop
addr16
test
dec
sub
imul
xchg
cmc
mov
pop
mov
ret
and
adc
mov
call
sahf
mov
in
aas
hlt
push
push
jo
pop
xchg
or
cmp
jge
mov
jbe
cmp
mov
fidiv
ss
out
(bad)
clc
sub
(bad)
mov
ja
fmul
adc
push
pop
mov
dec
mov
jmp
mov
js
and
in
mov
frstor
cs
test
ins
jbe
jae
lods
adc
scas
push
sbb
shr
push
sub
test
sub
btr
dec
and
popa
mov
movs
push
xor
jo
lods
retf
cmps
mov
xchg
mov
jp
inc
ficomp
jg
aad
and
ins
and
icebp
gs
adc
inc
cmp
mov
bound
cmps
scas
jle
clc
push
lods
pop
adc
sub
and
mov
js
pop
xor
into
ins
stos
inc
mov
adc
mov
jns
push
and
dec
inc
xor
push
sub
mov
or
loop
popf
hlt
pop
and
add
shl
fdivr
xchg
dec
arpl
out
inc
xchg
pop
mov
dec
cmps
and
mov
mov
cs
mov
popf
mov
mov
ins
mov
cld
inc
pop
into
jae
push
add
push
jmp
or
sub
xor
cmp
xchg
fbld
jmp
adc
or
call
pop
mov
js
pop
nop
sti
dec
stos
mov
jp
ret
adc
mov
or
push
int
pop
fcomp
ret
dec
push
xor
in
dec
adc
int3
call
dec
xchg
call
jo
neg
repnz
jg
out
pop
pop
xlat
cmp
pusha
jne
jns
pop
scas
add
ret
mov
and
sbb
fild
adc
je
neg
push
dec
popa
jp
lock
test
ds
inc
out
cdq
test
adc
jne
scas
mov
inc
imul
mov
fdiv
jmp
lock
adc
mov
jbe
xor
(bad)
stos
repnz
loope
cs
or
movlhps
cdq
cmp
dec
mov
lea
and
sub
ret
mov
test
(bad)
aas
push
cmps
jg
int
cdq
cmc
jo
rcl
mov
sbb
cli
push
pushf
and
pop
(bad)
gs
sbb
jno
dec
pop
in
jmp
or
out
and
int3
add
div
loop
push
jo
call
push
(bad)
jmp
jp
mov
icebp
cs
icebp
mov
in
aam
repz
pop
jl
push
test
dec
sbb
loop
adc
mov
lea
shl
jnp
mov
aas
or
inc
popf
xor
aas
loope
pop
sub
clc
sbb
mov
fnstcw
jbe
(bad)
push
or
lea
inc
jle
push
outs
inc
dec
pop
xor
mov
ss
pcmpeqw
sbb
test
data16
adc
xchg
loope
dec
pop
jo
sbb
push
cs
pop
mov
jge
pop
jmp
repnz
push
pop
add
rcl
arpl
push
mov
xchg
(bad)
(bad)
stc
stos
js
ret
dec
inc
mov
or
arpl
dec
pop
(bad)
loop
pusha
add
pop
jb
aam
into
or
lods
jbe
jmp
cmp
loop
daa
fsub
ja
push
movnti
lods
jmp
out
shl
xchg
xchg
adc
loopne
xchg
or
mov
jmp
mov
jge
mov
xor
dec
mov
push
jne
lods
dec
out
and
shr
imul
mov
ficom
sub
sbb
sar
xor
xor
xor
daa
shr
mov
adc
stc
fdiv
adc
dec
in
daa
xor
sar
mov
sub
jmp
mov
xor
xor
and
and
enter
jg
rcr
pushf
and
movs
imul
xchg
scas
iret
sub
mov
in
xchg
sub
pop
jns
iret
test
add
rcr
nop
retf
xchg
lods
xchg
jmp
jl
push
adc
aas
out
aas
pop
mov
and
push
fcomp
pop
cmp
out
adc
jne
call
dec
loopne
mov
jmp
movs
sahf
sbb
ret
in
push
dec
push
xor
in
fisubr
mov
sbb
ret
dec
in
push
shr
fcos
pop
mov
leave
loop
jno
jl
push
(bad)
clc
add
add
jae
push
sub
shl
sub
in
(bad)
rcr
and
mov
les
inc
stc
xor
loopne
enter
loope
adc
jg
sbb
inc
in
out
jecxz
sub
scas
inc
cwde
cmp
sti
lock
dec
dec
adc
xchg
jno
cmp
(bad)
pop
int
popf
aas
jo
fcom
or
jno
rcr
mov
repz
rol
mov
mov
or
(bad)
mov
(bad)
mov
bnd
or
call
xor
jo
jo
inc
and
rcr
sub
mov
push
xor
mov
push
and
inc
loop
adc
out
je
mov
mov
and
jnp
sub
mov
sub
lsl
dec
les
shl
jo
shr
xchg
out
add
xor
add
int3
add
lods
jnp
add
in
add
add
add
add
add
xor
add
add
add
ja
add
mov
add
repz
add
rol
add
add
mov
add
data16
add
push
add
fiadd
sub
adc
sub
inc
packssdw
pop
sbb
(bad)
popa
jg
mov
jp
and
cmc
cmp
adc
fs
pop
sbb
fs
inc
loope
cmp
fst
ror
pop
xchg
jp
daa
inc
inc
(bad)
xor
xlat
not
movs
sub
(bad)
jo
bound
mov
hlt
retf
add
sbb
(bad)
mov
jmp
hlt
jl
cmc
mov
call
sub
xchg
fadd
ror
(bad)
cdq
jbe
push
jno
mov
sub
addr16
rcr
jne
clc
ja
fisubr
rol
jle
jmp
leave
adc
pusha
(bad)
jae
jmp
in
mov
dec
push
jp
and
aaa
repz
int
idiv
hlt
inc
mov
sub
lods
arpl
js
or
ret
mov
xchg
or
xor
mov
mov
stc
jb
sbb
mov
cdq
retf
adc
test
ret
mov
fs
mov
sub
push
not
dec
imul
sbb
dec
into
inc
sbb
mov
inc
sbb
mov
xchg
dec
or
aad
mov
ds
pcmpeqd
outs
xchg
xor
fld
aam
fcmovne
fidivr
hlt
icebp
test
pop
imul
sbb
inc
test
mov
mov
pop
mov
pop
idiv
cmp
push
push
test
les
ss
jbe
xor
(bad)
not
jne
imul
shl
neg
fs
pop
pop
xchg
mov
popa
pop
icebp
repz
and
adc
cmp
xor
data16
stos
btr
dec
inc
mov
mov
add
dec
rcr
mov
inc
sbb
pop
mov
mov
lds
inc
jmp
in
inc
popf
jne
popa
mov
sbb
mov
clc
fisub
sti
shr
inc
lock
mov
rcr
adc
push
outs
and
pusha
ins
repz
sahf
movs
sbb
cli
xchg
lock
xor
(bad)
cmps
ja
mov
mov
fwait
sub
icebp
jle
push
and
jg
sub
sub
retf
xor
push
dec
das
data16
xor
int3
cmps
lock
sbb
xchg
jae
ds
pop
in
fst
je
pusha
out
shr
jmp
xlat
daa
mov
stc
pop
mov
inc
sbb
retf
in
jb
jmp
jmp
sub
push
xor
movs
add
add
jge
fidiv
inc
test
cmp
and
sbb
mov
aam
xor
add
mov
xchg
xor
or
shr
inc
push
jns
xchg
push
push
jmp
add
jge
xor
and
std
fld
pop
push
daa
mov
ds
cs
sbb
adc
mov
ret
fidiv
mov
sahf
xor
fisttp
hlt
dec
sub
stos
xor
addr16
pop
push
or
leave
pop
add
outs
mov
fwait
xor
mov
(bad)
(bad)
js
cwde
mov
xor
add
(bad)
div
pop
cwde
loop
fild
fisubr
sbb
mov
sar
xchg
inc
call
inc
add
inc
sub
sub
xor
and
or
mov
adc
and
or
clc
lods
adc
inc
rep
inc
mov
ins
scas
mov
mov
jp
sbb
jae
lahf
lea
or
(bad)
ficomp
xor
icebp
push
push
in
idiv
cmp
mov
cld
mov
mov
cmp
stos
dec
movs
scas
mov
xchg
mov
xor
and
sub
pop
or
inc
sub
cmp
pop
or
daa
cdq
mov
popa
pop
stc
outs
loope
and
or
aaa
push
or
sti
fbld
jecxz
stos
fcmovnu
scas
sub
retf
push
stos
push
xchg
mov
mov
iret
pop
test
xchg
outs
fwait
dec
pop
je
pop
jae
mov
popf
rcr
fld
lods
scas
shl
test
or
xchg
jb
div
pop
mov
or
icebp
xor
sbb
retf
mov
pop
jmp
mov
or
add
mov
mov
pushf
int
xchg
loope
jp
lea
ins
pop
dec
mov
jle
mov
push
xor
std
sub
loopne
hlt
into
xchg
mov
xor
inc
cmp
push
push
xchg
shr
mov
mov
sbb
scas
arpl
outs
and
imul
mov
sahf
mov
clc
rcl
sbb
repnz
mov
mov
xor
mov
ja
call
sbb
jo
dec
(bad)
mov
ins
cld
cld
xchg
lea
sbb
and
xchg
mov
mov
jo
push
(bad)
mul
xchg
adc
add
sub
lahf
mov
cmp
in
add
push
idiv
sbb
pop
or
adc
(bad)
and
jbe
sbb
imul
into
outs
inc
out
out
mov
adc
stc
mov
test
pushf
xor
aaa
push
call
imul
inc
aad
std
push
mov
fcomp
xor
pop
dec
mov
in
ss
nop
add
fcomp
adc
add
daa
pop
mov
cmp
mov
call
jae
leave
lods
inc
inc
icebp
rcr
push
pop
shr
pop
xchg
inc
jle
sbb
scas
jb
repz
outs
adc
movs
xchg
pop
lds
add
out
pusha
dec
cld
out
or
mov
fisttp
xor
cmp
adc
mov
cmp
push
add
js
daa
fcmove
jg
push
lods
mov
pop
je
jg
mov
mov
mov
sbb
test
mov
in
push
cs
pop
aad
mov
fistp
fst
mov
mov
in
xchg
int
int3
les
inc
jl
lds
ja
in
hlt
les
jae
jmp
inc
jb
adc
call
(bad)
cmp
lahf
adc
shr
shr
pop
add
push
lods
fsub
xchg
mov
pop
jp
adc
stc
loopne
fstp
call
and
leave
xor
jmp
pop
jl
add
(bad)
lock
out
js
cmc
dec
and
cs
in
lds
test
push
lds
push
jo
add
inc
pop
in
inc
cmps
push
lahf
movs
imul
xchg
test
cdq
or
add
out
add
rcr
and
xchg
scas
mov
(bad)
sub
add
int
xlat
adc
push
movs
add
adc
bound
jle
scas
mov
mov
jmp
shr
xchg
sub
dec
shl
mov
adc
hlt
dec
xor
std
pushf
fiadd
shr
cmp
test
test
test
sti
or
mov
pop
dec
outs
out
and
mov
mov
xor
push
inc
mov
push
test
dec
in
xchg
ins
dec
retf
mov
mov
and
daa
mov
or
mov
and
or
dec
pop
inc
mov
cmp
repz
ficom
(bad)
dec
ret
xor
sti
mov
popa
clc
xor
sbb
push
jb
data16
into
mov
sub
cmp
xor
retf
retf
xor
out
int3
cli
pop
stos
inc
adc
add
mov
push
cmc
movs
push
dec
inc
(bad)
sahf
or
mov
ja
stos
mov
mov
and
jecxz
popf
sub
outs
mov
inc
dec
jge
das
daa
(bad)
addr16
sbb
push
inc
jbe
and
test
cmp
inc
and
mov
jecxz
sbb
out
sbb
(bad)
push
mov
rol
sbb
xchg
lods
mov
js
adc
ret
int
(bad)
cmp
bound
mov
es
or
jecxz
sahf
xor
int3
outs
mov
fisttp
push
pop
add
sub
pop
mov
sub
mov
mov
mov
movs
pop
cmp
push
lahf
ins
lods
dec
pop
dec
cmp
mov
ss
test
repz
mov
cmp
sbb
ret
add
jmp
in
cmc
pop
mov
sbb
push
pop
stos
xor
xchg
push
sbb
pop
pop
hlt
ficom
cdq
std
ss
jecxz
or
into
pop
sbb
lods
dec
add
or
cmp
jno
add
scas
jmp
aas
jno
pop
into
into
dec
mov
daa
pop
xchg
int3
test
mov
push
popa
stos
xor
and
imul
stc
aad
or
arpl
outs
clc
mov
iret
loopne
lds
fwait
and
and
xchg
mov
xchg
(bad)
retf
dec
mov
rcr
adc
xchg
inc
div
mov
arpl
inc
clc
in
stos
dec
inc
push
adc
xor
hlt
mov
jb
addr16
cmp
(bad)
test
test
ror
lods
inc
push
repnz
mov
jp
inc
adc
stos
mov
pop
adc
inc
clc
in
jnp
mov
out
(bad)
cmp
xor
sub
lea
sahf
mov
and
push
mov
cmps
adc
scas
sub
jp
xchg
icebp
pop
imul
pushf
adc
dec
mov
add
xor
lahf
xor
ret
cdq
mov
push
xchg
test
cmp
push
mov
test
adc
pop
jne
pop
xchg
retf
bound
outs
mov
and
jle
cmp
dec
pop
in
adc
cmp
(bad)
xchg
sub
rcr
push
les
call
pop
jecxz
adc
loopne
push
push
test
adc
mov
inc
sub
outs
adc
outs
test
dec
xchg
mov
ss
test
loopne
pop
xchg
in
sahf
stos
in
add
add
mov
rcr
push
leave
push
stc
popa
sbb
mov
pop
push
dec
cmp
add
add
add
add
add
add
add
in
jnp
add
add
add
add
add
add
sti
add
add
sub
add
add
add
add
add
add
dec
add
add
add
pusha
add
push
add
add
add
jne
add
xchg
add
add
retf
shr
inc
add
add
rol
add
add
add
arpl
add
add
mov
add
add
sub
mov
add
add
add
add
add
jecxz
pop
ins
into
pop
aam
jge
dec
int3
mov
aaa
ja
in
test
push
scas
out
and
outs
pop
cmp
sti
lods
outs
inc
inc
jb
lahf
lea
xor
inc
test
sbb
retf
xchg
stos
clc
leave
cmp
repz
mov
test
cmc
xor
ds
add
and
and
clc
jnp
ret
in
cwde
popf
rol
push
pop
lock
push
jno
mov
pop
push
dec
jno
ffree
loop
loop
div
rcr
imul
ja
jns
movs
stos
xchg
in
cmp
neg
push
sbb
or
outs
mov
(bad)
hlt
rcl
mov
jmp
add
xchg
daa
(bad)
adc
pop
repz
fisubr
dec
out
aam
push
rcl
ficomp
xchg
dec
(bad)
jl
mov
fsub
cmp
(bad)
mov
jno
ds
fdiv
into
adc
jb
js
jnp
ins
sahf
and
xor
mov
fimul
call
lods
xchg
sub
sub
push
dec
xor
fucom
fcmovbe
push
aas
dec
gs
mov
cmp
adc
(bad)
call
leave
cs
hlt
(bad)
ins
or
in
pop
fsub
sub
adc
pop
jnp
sub
dec
pop
nop
mov
and
cmp
xor
dec
int
jnp
fstp
aas
loop
add
scas
lahf
cs
adc
es
(bad)
push
add
inc
loop
enter
ins
pop
movs
mov
fnstcw
in
fst
nop
mov
dec
mov
and
inc
mov
mov
mov
mov
jne
and
sbb
in
jmp
mov
and
rcr
dec
mov
scas
lods
loope
adc
lock
loopne
cmp
jbe
xlat
cmps
mov
mov
dec
sti
stos
retf
add
or
mov
shr
movs
loopne
nop
daa
lods
cmp
xlat
test
imul
xor
cmp
daa
paddb
push
mov
add
test
inc
jp
add
test
push
cmp
popa
push
fnstcw
jmp
add
mov
shl
arpl
and
mov
add
ins
jle
cmps
mov
cli
jecxz
and
cmp
jmp
inc
dec
xor
retf
jecxz
dec
jmp
adc
jmp
jo
jno
pop
jmp
pop
pop
into
popf
push
mov
adc
idiv
idiv
dec
pop
pop
mov
mov
or
sar
fiadd
jle
lahf
cmp
mov
sar
pop
jb
mov
ficomp
and
push
mov
rcr
imul
stos
mov
pop
jnp
imul
in
retf
push
and
aaa
push
(bad)
sbb
int
and
jb
xchg
test
ret
cmp
xchg
inc
push
(bad)
mul
ret
dec
push
imul
fistp
jnp
pop
imul
test
nop
mov
sub
xor
loop
push
mov
into
fwait
jae
mov
or
and
fisubr
(bad)
jne
icebp
jl
push
inc
ins
pop
aam
xchg
push
dec
cli
leave
mov
add
ret
xor
loop
mov
dec
mov
mov
xor
cmps
or
movs
nop
(bad)
hlt
add
pop
xchg
idiv
add
jb
cmp
xchg
or
test
sub
test
lods
ret
push
dec
lods
jge
mov
icebp
pop
sbb
pop
push
sbb
cmps
and
cmc
sahf
sbb
sar
mov
pop
in
dec
xlat
fdivr
jns
pop
pop
aas
jl
addr16
enter
cmps
ret
movs
icebp
mov
cli
dec
loopne
sub
pop
or
jl
pop
push
shl
cmp
jl
out
imul
jmp
xchg
clc
pop
out
add
dec
inc
enter
inc
xor
mov
and
pop
pop
aaa
je
mov
xchg
or
lea
retf
rcl
popf
les
cmp
dec
push
rol
outs
rcl
adc
fdiv
inc
sar
fiadd
jmp
jno
dec
xor
(bad)
das
imul
out
jmp
lods
add
cmc
xlat
jnp
or
fs
add
je
and
push
push
mov
jmp
push
pop
fisub
mov
inc
xchg
test
jecxz
jle
jg
lods
dec
movs
cmp
pop
ret
or
inc
jo
adc
stos
xlat
movs
inc
cmc
or
xchg
fnstsw
and
push
ins
adc
js
in
push
sub
stos
sub
repz
add
mov
mov
mov
in
(bad)
fnstcw
dec
enter
pushf
data16
rcl
aam
fcomp
scas
jmp
fucomip
pop
ret
ins
jns
mov
push
dec
jmp
loopne
add
inc
fist
sub
loop
test
xor
gs
mov
nop
clc
cmp
mov
adc
sub
mov
lahf
push
stos
mov
(bad)
test
mov
mov
fwait
push
(bad)
fisttp
mov
out
xchg
adc
dec
mov
ja
push
stos
cdq
inc
xchg
xchg
mov
gs
test
(bad)
hlt
xlat
mov
movs
lods
arpl
mov
inc
test
and
xor
ins
inc
push
push
pop
inc
aam
inc
ret
stos
fldcw
push
(bad)
dec
push
jns
pop
shr
inc
xchg
ins
and
out
cwde
popa
add
int
test
data16
mov
xchg
push
in
adc
int3
inc
(bad)
movs
retw
je
pop
int3
sti
cmp
mov
pusha
in
inc
out
ins
mov
fwait
icebp
out
cmp
adc
fmul
outs
add
jnp
cmp
cmp
loopne
add
(bad)
shl
jmp
jge
adc
in
mov
lahf
test
in
call
repz
xchg
leave
imul
in
fstp
hlt
inc
xchg
lea
jmp
jp
out
cmps
dec
(bad)
dec
inc
adc
jmp
xor
inc
es
scas
push
cmp
jbe
add
push
int3
movs
push
sbb
fs
cmps
mov
xor
in
sti
or
movs
adc
pop
mov
jns
or
movs
jnp
push
es
xchg
inc
faddp
sbb
ror
xor
dec
and
and
iret
(bad)
jg
sar
movs
iret
or
popf
es
es
leave
je
mov
scas
stc
cmp
mul
xor
add
push
stc
sti
adc
(bad)
cmp
xchg
xchg
fsub
jg
sub
lahf
jbe
adc
idiv
xlat
mov
popa
xchg
mov
or
jmp
(bad)
sbb
movs
cmc
jns
add
(bad)
ins
in
push
pop
int3
retf
addr16
push
scas
jg
ror
cvttps2pi
dec
push
mov
jno
add
stc
push
mov
push
inc
cmps
add
dec
data16
bound
retf
iret
xor
stc
(bad)
jl
clc
scas
dec
dec
jns
jmp
dec
dec
mov
xchg
mov
cmps
shr
add
dec
out
push
cs
arpl
sbb
sub
jmp
and
loopne
jo
pop
loope
inc
test
or
adc
sar
mov
mov
iret
icebp
xor
test
popa
jno
mov
pop
add
(bad)
ret
rcr
dec
push
pop
stos
loopne
(bad)
lock
push
mov
pushf
in
mov
imul
aam
clc
cmp
call
call
loopne
xchg
test
inc
mov
mov
xchg
outs
scas
fstp
addr16
int3
add
dec
sbb
pop
rcr
pop
dec
inc
xor
lds
mov
jbe
retf
xor
pop
lds
push
cmc
mov
lods
ror
jecxz
fwait
xor
popf
xchg
aam
inc
in
fdivr
mov
add
push
mov
or
adc
stos
pop
outs
mov
clc
shl
fisttp
aas
mov
scas
jb
sbb
and
inc
or
shl
add
in
fistp
lahf
dec
ret
push
imul
or
js
mov
pop
sbb
mov
ins
pop
ins
push
sbb
fistp
popa
shl
addr16
mov
xor
cmps
jo
cmp
xchg
push
mov
aad
pop
push
inc
jle
loop
loop
jmp
and
xor
xchg
cld
push
xchg
cs
inc
sbb
mov
shl
punpckhdq
adc
jo
pop
mov
pop
cmc
sub
pop
jl
test
dec
mov
not
ins
add
mov
mov
je
add
push
adc
stc
or
or
je
sbb
pop
adc
xchg
mov
pop
mov
mov
jo
xchg
mov
sbb
mov
ror
jp
enter
(bad)
clc
jae
mov
push
jbe
jle
int3
ss
push
imul
fmul
push
bound
adc
shl
sub
lahf
aas
daa
pop
js
int3
mov
or
cs
cmp
stos
inc
cld
or
mov
mov
cmp
push
movs
adc
aas
sbb
test
pop
cmp
pop
pop
pop
jecxz
movs
inc
jns
inc
pop
pop
mov
std
ins
mov
push
imul
xor
mov
sbb
jp
mov
adc
add
addr16
mov
pop
(bad)
jmp
sbb
push
imul
call
dec
aad
je
dec
dec
cmps
add
mov
xchg
cmp
jo
mov
pop
mov
xchg
xchg
cli
pop
ds
aam
repz
cld
xchg
or
dec
add
cmps
mov
aad
(bad)
in
mov
lahf
xchg
ja
sub
jecxz
imul
mov
mov
jnp
lods
std
fdiv
add
retf
or
loopne
ret
lahf
jge
std
jg
fld
mov
push
sar
push
ud0
sbb
mov
inc
pop
test
shr
pop
arpl
repnz
push
ss
push
out
icebp
dec
(bad)
neg
adc
inc
leave
or
icebp
ins
and
inc
mov
jecxz
shl
and
inc
push
mov
sahf
clc
scas
test
aad
adc
cld
fdivr
int
sub
dec
sub
xchg
mov
xchg
int
cwde
adc
sbb
jmp
push
sbb
in
mov
cld
jp
loope
and
loop
mov
in
pushf
jne
pop
add
add
xor
in
add
add
add
add
add
jge
add
add
add
add
add
add
adc
add
add
add
add
add
test
lods
loopne
add
add
lock
ja
or
add
add
add
push
add
add
add
add
jns
xchg
add
add
add
mov
add
add
add
mov
add
icebp
add
sub
add
ins
add
add
add
jle
add
add
add
add
add
add
add
xchg
add
out
add
add
add
sbb
add
jmp
add
add
add
add
add
add
(bad)
loope
pop
xor
rcl
pushf
mov
jbe
rcl
or
in
xor
xor
iret
inc
dec
sbb
pop
les
dec
outs
add
pusha
bound
ret
out
fadd
xor
lahf
xor
cld
movs
int
popa
retf
pop
outs
sub
movs
pop
outs
in
std
add
xchg
inc
jmp
mov
push
add
ret
ficomp
push
push
dec
imul
mov
or
out
in
push
mov
xor
pushf
dec
mov
not
test
dec
mov
mov
cmp
ja
or
nop
xor
push
jo
mov
and
jno
cld
fucom
mov
xchg
clc
lock
xchg
loop
movs
add
test
les
ins
scas
xor
jp
add
sub
shr
dec
or
cmps
and
add
inc
add
or
mov
push
sti
popa
or
loope
pop
jmp
add
sbb
dec
mov
fs
ret
jns
enter
jne
mov
mov
stos
js
imul
cmp
push
movs
cmp
shl
mov
push
js
sub
icebp
clc
add
mov
sub
lea
lea
scas
sbb
leave
cld
repz
xor
outs
or
aam
push
clc
xchg
pop
mov
push
adc
pop
add
nop
and
or
jo
fstp
dec
std
push
mov
(bad)
xor
mov
ds
add
fnsave
mov
inc
push
movs
mov
dec
and
daa
retf
add
push
out
je
aas
mov
rol
jb
popa
push
jl
pop
shl
bound
retf
mov
pop
popf
cwde
loope
ret
in
add
call
les
jnp
arpl
sub
in
dec
out
outs
and
push
in
push
push
aad
cmc
jae
outs
mov
out
aaa
in
adc
push
inc
out
out
adc
cdq
jns
add
mov
push
dec
ret
stos
cmp
ror
cwde
pop
add
imul
pop
adc
add
daa
xchg
enter
or
inc
mov
ins
ret
out
movs
aad
mov
jp
pusha
(bad)
jmp
or
pop
sbb
es
mov
push
sub
into
inc
cmp
cmp
mov
dec
add
test
mov
mov
stos
stc
xchg
push
fs
xchg
and
fld
test
inc
or
in
stos
push
daa
stos
sahf
retf
jl
pop
mov
mov
mov
mov
sbb
mov
lds
into
retf
fwait
stos
mov
adc
jmp
sbb
aaa
jns
popf
dec
imul
and
mov
pop
mov
pop
pop
call
adc
jge
daa
(bad)
adc
out
and
jp
ins
ret
test
dec
ss
sub
bound
or
retf
cmp
lock
and
xchg
scas
sub
frstor
cmc
bound
leave
or
iret
mov
xchg
and
mov
pop
jg
lds
mov
pop
or
enter
imul
es
fadd
jecxz
lahf
mov
das
push
adc
fwait
mov
les
pop
jno
and
iret
adc
jbe
push
aaa
cwde
jp
ret
aad
stos
inc
aam
and
xor
and
cli
in
xlat
out
cmp
add
push
jns
jle
call
int
dec
mov
dec
into
adc
sbb
jmp
sahf
pop
rcr
aas
xor
aam
sub
pop
cmp
repnz
popa
add
fldcw
gs
gs
cmp
lds
pusha
or
xchg
jmp
pop
sub
mov
adc
mov
dec
loop
mov
std
movs
dec
pop
jbe
fistp
jo
imul
jle
ins
cmps
or
xchg
inc
or
sub
in
push
ins
(bad)
and
push
(bad)
xchg
lock
or
mov
and
sbb
stos
repz
inc
dec
loopne
sbb
add
cs
(bad)
adc
mov
enter
adc
or
popf
mov
xor
test
test
mov
lea
shl
mov
sub
adc
add
loopne
jmp
push
scas
in
int3
iret
(bad)
push
mov
mov
mov
call
cmps
dec
in
sub
mov
clc
fadd
mov
mov
cwde
stos
pop
ret
add
jl
jnp
stos
add
mov
ror
or
into
xchg
test
les
mov
xchg
inc
jge
mov
shl
aad
les
orps
mov
sbb
mov
dec
ja
in
jle
pop
movs
xchg
cmp
out
mov
ds
je
and
lock
dec
push
mov
mov
cdq
xor
pop
mov
(bad)
je
ja
push
adc
mov
call
mov
in
(bad)
imul
outs
iret
jns
ss
adc
(bad)
and
mul
loopne
xor
sbb
(bad)
pop
cmp
imul
popf
iret
aad
sub
jne
mov
ds
mov
(bad)
icebp
je
xchg
pop
pushf
xlat
ret
into
jnp
test
pop
mov
ds
outs
ret
(bad)
jmp
jno
cld
mov
ret
pop
add
sti
scas
cmp
loop
push
arpl
mov
pop
in
cmp
mov
add
xchg
jmp
not
add
lods
fs
sub
or
rcl
fdiv
cmp
or
aam
sar
fdivr
das
mov
jbe
inc
pop
popa
adc
or
sub
pop
add
(bad)
popf
add
add
es
jns
mov
jno
push
das
cmps
inc
adc
cli
stc
loopne
jge
fistp
sub
jp
bnd
push
out
pusha
test
dec
jno
enter
jl
hlt
mov
fcmovbe
inc
xor
outs
dec
cmps
cmps
sbb
cdq
fsubr
into
jno
sbb
stos
(bad)
fwait
mov
popa
xchg
(bad)
push
rcr
mov
sbb
pop
ins
dec
and
mov
rcl
push
rcr
(bad)
sbb
and
call
sti
mov
jecxz
es
inc
paddusw
shr
dec
fmul
sub
sar
sbb
and
jmp
add
call
or
neg
lds
xchg
or
in
mov
mov
pop
shr
sahf
cli
enter
fwait
sbb
mov
push
pop
xor
sahf
in
and
add
int
sbb
outs
xor
inc
rcl
sbb
jo
sbb
cmp
js
rcr
stc
pop
(bad)
das
jmp
jmp
retf
test
mov
mov
fwait
sub
mov
movs
adc
popa
ja
rol
dec
xchg
inc
pop
sub
or
inc
cmp
mov
fdivr
push
push
mov
push
dec
cs
popf
dec
or
test
jg
je
retf
or
(bad)
mov
imul
pop
mov
jne
lar
cmp
add
jmp
mov
pop
and
mov
clc
xor
dec
mov
or
ss
shl
popf
and
mov
dec
ret
and
or
inc
cmp
rcl
cmp
repnz
shl
cmps
cli
pop
jne
cmp
xchg
sbb
dec
xor
push
(bad)
jnp
clc
sar
pop
imul
jle
add
pop
and
mov
mov
push
and
aaa
cld
in
fdecstp
adc
mov
lock
or
pop
mov
sub
in
sbb
inc
test
cmp
int3
sbb
cmps
push
aam
gs
mov
dec
mov
jns
mov
mov
les
sub
xor
mov
stc
fbld
dec
sbb
clc
xor
cs
mov
mov
lock
sub
mov
cdq
es
test
pop
(bad)
ror
ficomp
mov
push
sbb
fist
adc
xchg
int
mov
dec
outs
mov
retf
or
add
mov
mov
and
pusha
fdiv
fcmovnb
loop
nop
sbb
sar
lock
sbb
cs
int
jecxz
xchg
idiv
xchg
inc
xchg
fimul
cmp
jb
icebp
mov
xchg
retf
retf
pop
movs
fxrstor
push
jp
loop
jno
push
and
aad
mov
mov
lahf
mov
dec
jbe
sub
push
sbb
or
fsub
push
call
cmovle
add
loop
and
mov
es
mov
addr16
cs
mov
retf
test
and
and
stos
pop
push
cli
jne
mov
mov
cmps
jne
mov
iret
add
test
add
dec
jnp
adc
outs
jo
xor
aaa
inc
ret
jp
cvttps2pi
cmp
enter
inc
cmp
fcomp
adc
sbb
inc
(bad)
xchg
push
scas
lahf
push
pop
jns
movs
xchg
je
sbb
retf
xor
adc
into
in
jne
fs
inc
bswap
stos
dec
iret
loop
sbb
adc
test
mov
inc
or
pusha
in
outs
ficomp
push
stc
xlat
or
mov
mov
cmc
ds
jns
push
call
loope
lock
lods
or
loop
clc
arpl
inc
cmp
dec
imul
add
fist
(bad)
pop
lea
retf
jns
inc
test
in
sbb
out
enter
shl
cmp
adc
sub
fs
push
xchg
iret
bnd
jo
mov
imul
mov
gs
lahf
hlt
loop
push
int3
or
fabs
dec
pop
loop
push
add
fdivr
mov
cmp
movs
xchg
dec
or
jp
and
xchg
dec
and
pop
inc
adc
cmps
dec
ja
dec
pop
jb
xchg
mov
sbb
loopne
mov
push
sahf
jbe
lods
(bad)
pop
mov
xor
mov
mov
loope
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
add
add
add
pop
add
add
add
add
cmp
add
fild
add
add
add
add
add
add
add
imul
add
add
pop
jo
add
add
add
add
add
stos
add
rol
add
add
add
add
test
add
add
mov
add
add
add
add
add
add
add
add
add
push
add
add
add
ins
add
adc
add
push
add
add
mov
dec
add
add
add
add
add
add
add
add
es
inc
ret
rol
sub
mov
xor
dec
arpl
mov
cld
imul
or
pop
mov
int
jmp
aam
pop
(bad)
pop
lea
rcr
or
mov
xlat
cmp
cld
ret
das
add
mov
int3
add
pop
ins
mov
dec
add
cmp
mov
pop
mov
mov
cmp
enter
imul
or
xor
fld
test
cmp
retf
clc
sbb
xchg
jnp
cwde
cmp
xor
test
sbb
in
push
and
adc
mov
adc
test
ds
fadd
out
mov
pop
pop
adc
pusha
aaa
cld
add
mul
fdivr
fcomp
jns
adc
scas
pop
fcom
out
sub
repz
sub
or
add
retf
retf
mov
push
jmp
lds
ret
mov
or
mov
push
and
(bad)
sbb
xor
and
les
and
jbe
repz
cmc
aad
adc
retf
(bad)
adc
mov
enter
push
or
test
or
xor
frstor
in
rcl
pop
mov
inc
fld
sar
aaa
aaa
sar
and
cmps
stos
or
or
stc
push
test
loopne
dec
mov
mov
les
add
push
das
mov
cmps
cmps
pop
std
pop
cmp
js
ja
cmp
jp
test
sti
dec
inc
pop
or
ret
xchg
sub
imul
push
push
cmc
pop
addr16
fist
or
aaa
inc
test
and
out
mov
sbb
pushf
pslld
inc
rol
leave
jno
pusha
cs
pop
imul
in
into
xor
pop
fsubr
shl
stos
cmp
cmc
(bad)
retf
mov
loop
icebp
jge
je
test
mov
repz
xor
(bad)
outs
or
add
test
test
(bad)
hlt
jb
mov
imul
pop
jp
or
cwde
cmp
(bad)
xchg
sbb
cld
cli
mov
jg
sub
(bad)
test
div
inc
in
ins
int3
add
xchg
mov
and
inc
das
lahf
out
loop
cwde
jae
dec
leave
and
inc
scas
ficomp
clc
es
jbe
mov
or
pop
and
scas
push
pop
jno
hlt
mov
mov
int3
(bad)
ficom
push
cmps
add
in
mov
xor
push
into
push
dec
and
xchg
mov
fisubr
add
pop
cmp
mov
inc
lds
loop
adc
xchg
mov
cmc
or
or
sub
push
inc
cmc
dec
add
aam
jmp
adc
repz
sti
mov
mov
jnp
cvtpi2ps
pop
in
jmp
inc
and
(bad)
push
pop
mov
ret
sub
pop
xor
and
jg
test
cmps
daa
fldenv
aam
jp
sub
sub
push
mov
dec
mov
shr
or
out
pop
jmp
or
into
fisub
stc
sub
mov
dec
sub
xchg
xor
ins
out
rcl
xor
add
add
movs
call
xchg
ret
ja
mov
mov
sbb
mov
hlt
aas
ins
inc
daa
xchg
scas
xor
mov
int
sub
jbe
xor
sub
out
je
std
jp
std
sub
shr
cmp
loop
das
loope
push
sbb
push
or
cdq
movs
xor
test
mov
fisttp
loope
rcl
inc
fmul
hlt
arpl
rcr
pop
sub
xor
pop
icebp
add
(bad)
jl
or
ret
push
ret
movs
adc
push
adc
sbb
aam
sbb
int3
rol
xor
and
xchg
cmps
jle
out
and
or
mov
mov
pop
cmp
mov
clc
das
xor
push
inc
add
or
in
mov
mov
mov
and
pop
pop
jo
pop
iret
dec
push
aam
scas
(bad)
add
sbb
cld
xor
pop
xchg
outs
stos
or
mov
iret
loop
out
jo
loopne
into
cmp
xor
inc
rcr
pop
jp
add
sti
inc
adc
enter
xchg
adc
ja
add
adc
repnz
jle
dec
push
mov
fwait
dec
adc
shl
xchg
out
lods
sbb
cld
ja
mov
(bad)
sbb
dec
push
or
dec
scas
std
test
out
gs
test
int
movs
in
jp
cmps
push
add
retf
inc
(bad)
jmp
pusha
push
fwait
mov
mov
cmps
fist
dec
add
xor
add
lahf
cmc
or
test
mov
sub
dec
mov
ins
ret
pop
xchg
aad
nop
xor
mov
test
ins
push
sub
popa
lds
(bad)
adc
dec
je
mov
dec
into
xchg
call
add
popa
(bad)
push
and
sub
fidiv
lods
call
push
adc
in
(bad)
adc
jge
mov
push
mov
mov
ss
es
add
cs
push
sub
adc
mov
mov
sub
mov
call
push
jge
xor
sub
mov
cmc
mov
fisttp
mov
inc
mov
(bad)
cmp
fidiv
and
retf
jmp
ds
lods
arpl
stos
popf
ficomp
adc
test
data16
inc
imul
xor
mov
addr16
push
mov
icebp
stc
xchg
jo
lea
xchg
fld
mov
pop
pop
(bad)
in
fcom
xor
xchg
jnp
test
and
mov
loopne
jbe
stos
xchg
xor
fst
mov
repz
cs
lods
jmp
xchg
and
jmp
jnp
lods
bound
loop
pop
and
adc
xor
mov
ret
inc
rcl
dec
stos
xchg
icebp
and
loopne
xchg
and
and
mov
lods
and
aad
pop
cmp
adc
inc
xor
mov
retf
mov
jmp
add
icebp
fst
adc
int
not
pop
imul
add
mov
inc
adc
movs
push
test
pop
mov
ins
addr16
sbb
dec
cs
dec
mov
les
fild
jp
cmps
dec
enter
push
push
stos
(bad)
mov
(bad)
rol
jne
dec
popf
sbb
js
sbb
mov
call
sub
inc
leave
cmp
inc
out
mov
mov
enter
push
jno
cs
push
outs
fs
cmps
arpl
mov
mov
fsub
adc
mov
ds
pop
xchg
mov
aas
inc
xchg
mov
popa
sbb
cmps
jb
cmp
lds
inc
pop
scas
in
add
jo
lock
cli
sub
outs
pop
es
mul
pop
xchg
inc
stos
push
icebp
repnz
inc
xlat
xor
sar
(bad)
push
inc
es
inc
push
(bad)
cmp
inc
out
inc
aad
in
mov
das
fnstenv
adc
inc
jmp
jno
mov
and
sbb
xchg
int
mov
es
sbb
addr16
pusha
pop
test
sbb
pushf
mov
cmps
scas
test
ret
in
je
movs
inc
les
mov
shr
dec
iret
push
and
mov
adc
and
bswap
mov
xchg
mov
loopne
xor
pop
cmp
mov
movs
or
imul
cmp
rcr
mov
xor
push
push
popa
mov
dec
imul
push
push
dec
xchg
adc
inc
cmp
xor
push
iret
sbb
sbb
push
sub
adc
test
and
scas
sbb
sub
clc
cld
sbb
cmp
daa
shl
lea
lds
pop
or
ds
jecxz
les
stos
cdq
push
mov
or
imul
dec
and
push
jbe
punpcklbw
stos
jno
pop
popa
mul
jp
retf
jns
sub
fiadd
cmps
mov
mov
in
inc
sbb
mov
mov
xlat
jns
pop
popf
out
adc
test
fisubr
push
xchg
dec
in
and
sti
hlt
call
xchg
sbb
xchg
ja
xchg
sbb
dec
out
retf
(bad)
iret
div
lahf
cmp
mov
leave
pop
lahf
retf
mov
push
adc
fs
adc
pusha
repnz
sub
mov
sub
mov
cmps
add
sub
retf
ja
xchg
dec
xor
mov
les
xchg
cmp
add
shr
or
out
call
mov
mov
jl
in
push
mov
jno
ins
adc
dec
cli
arpl
adc
int
cmps
jg
xchg
pop
out
ja
sbb
cmps
call
fnstcw
out
sbb
aas
mov
xor
mov
and
and
push
sub
repnz
out
cmp
outs
fld
call
daa
fmul
xor
or
rol
(bad)
in
push
cmp
jns
sbb
scas
test
xor
sub
push
stc
xchg
ins
pushf
scas
mov
(bad)
cli
or
push
add
sbb
and
in
sbb
lock
jnp
aaa
pop
stos
or
or
int3
xlat
test
dec
inc
pop
idiv
cmp
pop
fsubp
xchg
push
cmp
or
neg
sub
cdq
js
sbb
lock
inc
cli
into
push
mov
cs
mov
cs
pop
gs
lods
pop
adc
loopne
cmp
cmp
jno
test
imul
ja
fimul
inc
aad
not
pop
(bad)
dec
nop
sbb
std
xor
shr
mov
push
jl
pushf
ror
inc
loope
cmps
test
jge
or
add
add
add
add
add
add
jmp
test
fadd
add
loopne
add
add
mov
xor
test
add
add
push
add
jno
add
add
jg
add
add
add
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
movs
add
add
jl
mov
add
adc
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
inc
add
dec
cli
mov
add
add
add
or
add
add
add
add
popf
add
add
add
jnp
add
xor
add
add
add
xchg
add
sahf
add
aaa
add
add
scas
add
add
loope
add
add
push
add
add
add
add
add
lea
verw
add
add
add
add
pop
add
add
jle
and
ret
add
test
add
add
sub
jecxz
lods
mov
push
stos
dec
sub
pop
inc
repnz
les
sar
leave
cld
mov
jl
push
sub
out
lahf
mov
jge
cmc
sub
sub
adc
outs
retf
or
sub
mov
fbld
push
mov
dec
dec
mov
jmp
dec
ins
mov
out
je
(bad)
push
shr
push
mov
lods
repnz
loope
addr16
jns
mov
cld
and
stos
icebp
fnsave
jl
mov
rcr
push
outs
mov
mov
push
imul
aad
jne
pushf
leavew
les
out
sar
xor
dec
mov
mov
sub
xlat
add
fcom
pop
xchg
lea
cmp
mov
pop
xchg
dec
jp
jg
inc
mov
xchg
scas
mov
aad
cli
xor
shl
cmc
inc
loope
xor
(bad)
retf
fimul
stc
xchg
mov
stc
jl
call
fst
bnd
sub
inc
sub
jnp
xlat
add
jmp
mov
loope
iret
sahf
addr16
fdivr
ins
ror
rol
call
je
or
jmp
cli
dec
popa
faddp
test
xor
or
sub
test
ins
push
dec
sbb
inc
mov
or
les
fisubr
pop
arpl
imul
dec
jnp
(bad)
xchg
pusha
xchg
jg
jo
out
pusha
pop
jnp
cmp
scas
cmp
pop
sbb
jb
mov
test
outs
sbb
push
inc
ins
test
je
pop
(bad)
rol
or
mov
xlat
pop
std
push
jb
int3
movs
lds
jne
out
jge
mov
inc
sub
call
sti
xchg
push
cdq
ins
xchg
mov
mov
sbb
push
pop
sub
aaa
js
(bad)
and
jb
pop
push
test
sub
dec
adc
out
mov
ja
pop
xor
adc
mov
push
jbe
inc
xchg
xchg
adc
or
jl
push
fisub
cmp
cmp
in
mov
cmc
(bad)
popw
adc
int
das
cmp
mov
ret
(bad)
adc
cli
cmp
jno
cmps
outs
jle
adc
or
add
retf
pop
mov
inc
js
xlat
cmps
mov
(bad)
not
mov
push
jmp
push
sbb
movs
inc
and
or
gs
push
movs
leave
pop
inc
pusha
dec
arpl
(bad)
jp
cmp
push
aaa
popf
push
sub
aas
xor
push
push
scas
xchg
and
dec
in
inc
xor
push
retf
out
out
(bad)
loopne
mul
sub
into
pop
cmc
jo
cmp
repz
xor
jmp
sub
mov
jno
add
cmc
adc
cmp
repz
pop
cmp
dec
int
pop
add
jb
or
(bad)
adc
push
mul
mov
loopne
test
jle
sbb
jmp
fimul
hlt
mov
cli
popa
jnp
fdivr
jb
imul
xor
(bad)
xchg
xchg
mov
jle
fdiv
or
pop
not
dec
xchg
push
repz
bound
rcl
mov
add
int
mov
imul
mov
ins
outs
cmp
cmp
pop
stos
push
cwde
xchg
adc
xchg
mov
rcr
cmp
dec
arpl
lock
jecxz
test
fistp
cwde
aas
push
iret
mov
dec
sub
push
sub
ret
out
das
and
(bad)
aam
fst
(bad)
jmp
xchg
cwde
jae
lock
jnp
jl
or
mov
test
push
add
or
aaa
pop
dec
mov
xor
push
pop
(bad)
xor
push
adc
cld
sbb
dec
stos
push
dec
fist
cmps
dec
out
add
popf
sbb
and
mov
inc
ret
lods
pop
aam
fild
push
and
aaa
jge
in
mov
xchg
pop
adc
ss
(bad)
cmp
clc
enter
cli
mov
dec
cmp
push
cld
popa
xor
inc
cdq
in
in
add
mov
push
or
add
int3
jb
pop
mov
test
imul
sub
in
mov
and
inc
and
mov
dec
repnz
hlt
sbb
test
jp
out
gs
(bad)
mov
jl
lds
dec
in
fbld
mov
mov
mov
mov
imul
jl
xor
fstp
ja
frstor
out
(bad)
mov
xchg
or
in
xchg
repnz
or
stos
jae
inc
mov
icebp
pop
ja
std
sub
rol
sub
dec
xchg
shl
mov
push
adc
pushf
xchg
pop
popf
mov
movs
cmp
dec
mov
mov
inc
add
add
jo
and
loopne
mov
push
movs
cld
jb
xor
ret
sbb
cmc
shl
jbe
sbb
(bad)
nop
test
lods
cwde
sti
outs
sti
dec
jmp
dec
clc
inc
sahf
das
jle
dec
push
xchg
sbb
push
in
mov
ret
jl
pushf
or
jns
f2xm1
jmp
inc
mov
inc
cwde
xchg
gs
adc
mov
push
dec
cld
mov
sbb
xchg
clc
(bad)
dec
loope
push
mov
outs
scas
mov
or
mov
retf
into
movs
dec
rcl
inc
push
cmp
scas
sbb
jmp
adc
add
add
dec
xchg
mov
mov
pop
sub
jno
push
xor
and
popf
test
fild
add
popa
cs
pop
jmp
data16
scas
scas
popa
sbb
pop
add
sub
fcom
pop
out
ins
push
ja
in
jmp
rcl
fld
jns
sbb
test
ds
add
mov
cmp
lds
add
out
pop
ror
push
js
xchg
cmp
retf
sub
lahf
push
test
jns
lea
add
mov
rcr
out
or
jns
adc
cmps
mov
mov
mov
rol
adc
in
dec
ret
imul
cld
xchg
div
lods
mov
push
pop
or
js
and
adc
mov
sub
adc
aas
mov
imul
inc
inc
mov
shl
ret
and
bound
mov
mov
mov
bound
lock
sbb
test
cli
(bad)
fyl2x
add
xchg
lods
jecxz
sti
jbe
or
lods
aam
pop
adc
push
xchg
ds
cmps
ins
cmp
mov
lock
neg
cmp
cwde
sbb
cmps
(bad)
leave
and
pop
jl
xor
jge
jg
sub
je
cli
or
xchg
(bad)
call
imul
jb
daa
fwait
imul
xor
xchg
inc
pop
fadd
test
push
sub
push
loop
scas
or
pop
jmp
adc
enter
push
aaa
aam
add
mov
cdq
retf
or
fidivr
in
rol
pusha
jo
test
repnz
stos
mov
cdq
jecxz
adc
cmp
loopne
xchg
daa
pop
cmp
lods
rcl
mov
(bad)
rcl
hlt
fdiv
pop
cmp
clc
push
pop
and
test
leave
in
out
(bad)
je
stos
call
xchg
imul
cmp
xor
or
jmp
xchg
not
push
mov
cli
jb
test
retf
(bad)
sbb
dec
add
sahf
cmp
aad
fdivr
lds
jnp
mov
inc
lods
jle
sub
or
jl
mov
leave
into
xor
call
push
cmp
adc
mov
mov
add
pushf
mov
jp
ret
out
cmp
retf
mov
aas
stc
dec
clc
scas
xchg
mov
cmp
sub
clc
mov
xchg
push
push
push
popf
std
std
test
popa
xchg
cwde
scas
sbb
daa
or
jle
fucomi
inc
leave
neg
cwde
sub
iret
inc
sub
pop
sub
inc
mov
cmp
fdiv
int3
pop
(bad)
lds
cmps
mov
bound
dec
mov
pop
cmp
xchg
mov
jnp
int
idiv
ror
pop
test
add
loope
(bad)
mov
push
mov
dec
sbb
sbb
aas
mov
adc
into
push
xchg
outs
(bad)
lea
out
add
add
mov
sahf
enter
xchg
dec
mov
movs
pop
test
inc
jbe
jecxz
jae
jge
outs
sub
xchg
cli
and
ja
push
xchg
xchg
(bad)
arpl
hlt
mov
add
ins
adc
xchg
outs
mov
(bad)
loopne
rol
retf
jl
and
adc
push
xor
add
mov
mov
pop
aam
or
(bad)
fimul
sub
push
add
mov
or
jo
add
pop
adc
xchg
rol
out
scas
pop
adc
or
into
cmp
push
dec
movs
scas
inc
xor
cmp
inc
(bad)
aaa
xlat
mov
and
or
daa
xchg
push
in
(bad)
sbb
loopne
cs
push
fimul
push
mov
and
mov
push
es
(bad)
je
aam
nop
cmc
or
cld
and
inc
add
fisttp
add
push
bound
stos
stc
push
leave
xor
or
movs
or
pop
dec
call
pop
jmp
sub
mov
adc
xchg
push
and
xchg
lods
popf
fabs
dec
and
dec
pop
mov
or
enter
out
fmulp
gs
cmc
sbb
adc
inc
das
in
mov
pop
sbb
iret
jbe
fldcw
iret
pop
lds
stc
sbb
xor
inc
jle
add
(bad)
sub
jge
mov
test
add
jge
pop
add
add
add
add
fbstp
add
add
dec
aam
add
add
add
add
add
add
jo
add
push
add
daa
add
add
add
popf
add
add
call
fwait
add
add
add
fcom
shr
add
xor
leave
add
add
add
add
leave
add
add
xchg
cmp
int
add
add
xchg
add
add
jl
add
push
cmp
xchg
push
sub
cwde
xchg
dec
inc
cmp
call
ins
xchg
adc
mov
stos
mov
test
mov
ins
and
scas
inc
adc
and
xor
xor
add
lods
jo
xor
repz
popf
dec
add
in
pushf
xchg
push
in
cs
retf
test
dec
push
and
add
xchg
inc
xchg
inc
lahf
ins
jl
bound
loop
test
sub
and
iret
bound
or
cmp
fild
jmp
mov
int
out
mov
cwde
xor
add
push
jl
jmp
xor
xchg
mov
nop
jne
sub
lds
adc
fwait
icebp
and
pushf
in
inc
shr
inc
rol
cmp
in
loope
in
dec
jno
sub
xlat
add
cmp
ins
aad
in
into
jle
push
sti
rcl
or
outs
pop
xchg
mov
mov
addr16
or
inc
adc
sub
add
repnz
int
pop
fucomi
dec
inc
or
data16
pop
dec
fcomi
dec
xor
leave
inc
jmp
test
mov
mov
push
aas
in
adc
lods
lahf
scas
fwait
and
push
sub
imul
lock
sub
out
or
out
push
gs
fstp
cwde
mov
dec
xchg
movs
mov
rcr
sbb
sti
icebp
popa
sbb
(bad)
ins
lods
or
push
mov
add
pop
popf
js
loopne
movs
xchg
(bad)
ret
scas
jb
jecxz
mov
sbb
sbb
into
retf
mov
xor
sti
sar
sbb
(bad)
outs
mov
dec
dec
mov
pop
xor
or
or
sbb
xchg
neg
scas
sub
retf
or
dec
cdq
jbe
hlt
and
push
cmp
jl
sbb
or
mov
add
nop
adc
imul
pop
into
stos
cmps
push
mov
pop
sbb
jl
lahf
mov
jne
movs
dec
dec
push
jg
push
adc
test
add
jge
popa
and
into
pop
fcomi
cmp
retf
jmp
xchg
and
and
sub
cwde
sbb
or
addr16
inc
cmc
movs
in
mov
fnsave
sub
sbb
jecxz
pop
dec
in
inc
mov
sub
push
retf
ffreep
inc
std
jp
(bad)
pop
mov
aas
mov
jo
xor
adc
adc
or
fstp
mov
mov
xor
jg
xchg
in
outs
in
imul
jnp
pop
mov
adc
adc
test
jne
shl
test
inc
pop
sub
pop
push
dec
stos
aam
(bad)
popa
and
or
jbe
js
sub
xchg
movs
or
jl
jg
mov
jae
mov
shr
repnz
push
mov
test
xchg
mov
fidiv
xor
mov
repnz
dec
iret
add
call
retf
pop
call
out
sbb
push
mov
test
pop
xor
arpl
and
out
xor
mov
xchg
inc
xor
and
dec
mov
xor
jb
mov
ja
pop
shr
imul
inc
sbb
in
jecxz
jge
aaa
pop
xchg
aas
imul
sbb
jo
or
(bad)
outs
iret
pop
sar
mov
jmp
(bad)
fsubr
push
inc
test
fs
xlat
adc
sub
(bad)
out
imul
ret
outs
push
rcr
cmp
sub
das
mov
idiv
push
push
or
movs
int
push
les
mov
ffree
cmp
fsubr
jl
add
adc
nop
inc
test
pusha
hlt
dec
adc
loope
imul
dec
mov
popf
sub
ss
out
daa
(bad)
jecxz
push
pop
push
das
mov
mov
adc
fwait
push
push
inc
jmp
cld
jno
ds
mov
leave
mov
inc
ret
cli
and
pop
(bad)
cmp
sbb
enter
loope
inc
int3
pop
inc
mov
std
push
mov
stos
daa
cld
ret
jno
ror
xor
mov
pop
fnstcw
jl
jb
jg
sti
or
fsubr
and
push
jmp
and
test
es
(bad)
stc
mov
push
popf
adc
dec
cli
mov
ds
test
ror
push
clc
pop
push
(bad)
aas
outs
cmps
jo
xor
std
xchg
jae
mov
jno
xchg
fs
push
adc
fcomp
sub
pop
xchg
xchg
(bad)
out
hlt
fdivr
gs
sti
xchg
popa
cmps
lahf
mov
sbb
jp
cmps
es
xchg
shl
xor
jmp
scas
leave
push
push
cdq
call
and
mov
push
mov
jle
dec
xlat
pop
mov
dec
dec
cld
rcr
xchg
add
xor
cmc
ds
les
jbe
jns
xor
mov
xchg
and
in
int
jnp
das
std
ds
mov
mov
(bad)
adc
in
and
dec
xor
outs
fimul
or
or
adc
movs
or
mov
jo
push
or
sahf
mov
mov
je
xchg
mov
daa
cmps
sbb
mov
ror
aam
jnp
push
adc
fisttp
adc
icebp
sbb
cmp
xor
imul
jmp
ror
jp
jmp
ins
(bad)
call
sub
jmp
jle
(bad)
ficom
not
jbe
mov
jns
jle
pushf
xor
pop
movs
adc
xor
push
pop
mov
pop
sbb
(bad)
xchg
and
mov
pop
fsub
xor
mov
aaa
fmul
mov
add
pmaxub
sbb
adc
sub
in
mov
mov
daa
jae
call
mov
push
ficomp
or
adc
lods
out
inc
or
bnd
add
aaa
rol
push
add
inc
adc
and
pushf
fnsave
and
push
retf
mov
cwde
jno
fst
pop
and
inc
pop
jns
mov
adc
fwait
into
and
jbe
iret
inc
mov
call
bound
enter
push
std
ja
lahf
push
stc
push
and
and
retf
fidivr
lahf
cdq
dec
add
mov
lods
pushf
sub
into
es
jne
sub
push
mov
jecxz
aad
out
sub
repz
loop
jl
sti
call
xchg
dec
icebp
hlt
mov
movs
icebp
idiv
mov
cmp
loop
fcom
fistp
fldcw
dec
sahf
cmp
cli
or
fistp
pop
jl
xchg
ins
mov
test
mov
add
loopne
jge
dec
adc
push
jmp
scas
adc
retf
loope
adc
lahf
adc
aas
lods
cmp
add
jne
add
jo
pop
data16
retf
or
jecxz
cmp
sbb
(bad)
mov
ror
or
call
mov
cmps
sub
fdiv
call
inc
mov
mov
xchg
jb
fnstsw
inc
call
dec
mov
stc
fmul
arpl
das
jb
enter
repnz
aaa
out
pop
pop
push
retf
(bad)
aam
cld
mov
and
inc
jecxz
pop
xchg
sbb
inc
pop
in
call
xor
in
lock
mov
dec
clc
push
dec
cmp
pop
sub
ss
cdq
es
mov
or
stc
aad
or
ror
(bad)
jp
jl
adc
ret
adc
lea
ret
adc
cmp
dec
outs
jmp
in
pop
int3
or
inc
or
retf
jge
imul
or
dec
leave
xchg
jmp
push
inc
test
sbb
pop
or
or
pop
sbb
lock
cmps
int3
fabs
xlat
push
push
imul
inc
js
pop
das
test
adc
sbb
pop
jo
and
mov
int
hlt
jne
fdiv
out
test
xor
push
imul
and
fxch
dec
dec
arpl
adc
repnz
adc
mov
xlat
mov
xor
test
xor
lods
adc
pop
dec
arpl
dec
and
add
ret
inc
fs
cld
push
stos
mov
(bad)
jp
loope
jcxz
mov
mov
push
in
push
xor
pop
adc
adc
push
push
(bad)
jle
xchg
mov
xor
cmp
xor
sub
pop
xor
sti
adc
sub
rol
and
mov
(bad)
sbb
es
mov
sbb
sub
or
test
xor
inc
nop
mov
mov
inc
sub
xchg
into
dec
dec
fist
test
pushf
or
enter
push
imul
inc
mov
and
iret
stos
sar
fmulp
and
call
mov
adc
cmp
sbb
enter
push
cmp
cs
loopne
retf
sbb
and
mov
xor
(bad)
out
push
adc
retf
sub
loope
xchg
pop
in
push
xor
or
in
adc
and
fdivr
out
test
inc
sub
in
jae
push
aam
xchg
sub
add
dec
or
repnz
jecxz
(bad)
fcom
mov
out
fs
cmp
dec
add
addr16
or
cmpps
fistp
sub
mov
dec
dec
(bad)
imul
mov
rol
jne
(bad)
in
(bad)
mov
dec
mov
or
adc
(bad)
mov
cmp
xchg
cld
mov
add
and
repnz
cmp
adc
add
push
sub
sbb
ss
and
pusha
xchg
jge
or
cmp
loope
rcr
push
rcl
les
mov
fsqrt
mov
nop
jmp
xlat
add
enter
pop
jl
dec
ret
lods
sub
or
inc
mov
inc
mov
jo
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
scas
mov
sub
add
mov
add
mov
add
add
add
add
dec
add
add
add
add
mov
add
add
add
add
add
xchg
loop
xor
add
add
or
add
add
add
add
test
or
(bad)
mov
aas
stc
and
push
retf
mov
enter
xlat
xlat
xor
stos
stos
(bad)
pusha
sub
repnz
int3
rcr
in
data16
retf
pusha
mov
mov
adc
pop
pop
mov
sbb
jp
fidiv
add
call
arpl
sub
loope
jae
cmps
fistp
jge
sbb
dec
scas
sti
je
outs
int3
outs
jl
sti
mov
add
mov
push
push
xchg
in
sub
or
and
imul
pop
sahf
jne
hlt
pop
out
lods
ror
jne
arpl
popf
fmul
ds
int
fnstsw
xchg
pop
out
lahf
xor
cmp
ja
mov
popf
(bad)
sub
jbe
call
leave
sti
into
sbb
xchg
cmp
sti
nop
out
inc
repnz
call
rol
mov
ret
inc
sbb
div
jecxz
jnp
jmp
mov
mov
and
adc
sbb
or
inc
jg
pop
retf
sub
inc
pop
cmc
repnz
sbb
jp
daa
loop
mov
out
jns
push
cwde
bound
add
popa
sbb
fmul
fadd
jne
out
xor
push
push
and
pop
nop
(bad)
or
sbb
ror
push
pop
cmps
or
(bad)
ficom
pop
fstp
mov
sub
jmp
test
xchg
data16
cli
mov
imul
pop
(bad)
pop
or
dec
(bad)
add
jmp
push
stos
imul
add
xchg
xor
ss
addr16
ins
xor
lahf
jno
shr
xor
sub
rol
and
loopne
int
push
push
and
mov
push
jp
push
sub
or
cmp
dec
inc
push
int
inc
inc
xor
cmp
gs
inc
push
push
jle
adc
stc
sub
cmp
xor
push
xor
add
arpl
jae
(bad)
xchg
out
push
aaa
jae
rol
jae
push
leave
push
xchg
pop
scas
inc
cs
addr16
dec
lea
jno
inc
(bad)
jo
arpl
add
stos
out
ret
sub
push
test
outs
test
ret
pop
dec
mov
lds
das
pop
mov
mov
mov
loopne
test
idiv
(bad)
in
or
pop
hlt
xor
cmp
xor
jg
add
add
loopne
mov
sbb
sbb
mov
xchg
adc
mov
rcl
aad
std
fild
push
sbb
fs
xchg
jp
jecxz
mov
sbb
popa
mov
mov
into
add
push
rol
jae
scas
stos
stos
sub
pop
jo
(bad)
sti
push
push
stc
push
int3
pop
leave
in
clc
mov
pushf
adc
jl
pop
sub
retf
sbb
div
push
out
in
in
sub
out
aaa
cwde
bound
aam
or
jmp
add
sub
icebp
test
repnz
xor
imul
fcmovnbe
or
(bad)
fadd
sub
popf
shl
pop
jmp
pop
jg
push
int
push
inc
stos
pop
pop
or
mov
int
mov
add
adc
xchg
nop
test
neg
in
sbb
ins
cmp
adc
frstor
inc
cmp
mov
mov
les
lea
iret
adc
pop
call
sbb
xor
call
jle
xor
ret
enter
popf
xor
cmp
mov
stos
inc
popa
out
jp
sbb
sub
mov
and
cs
stos
pop
test
ins
in
or
mov
stc
mov
adc
and
lahf
dec
rcl
clc
pop
jno
and
loopne
fbstp
sbb
stc
call
sbb
nop
ins
and
xlat
mov
push
cmp
xor
popw
inc
aad
adc
aad
outs
push
xor
inc
aam
xor
aaa
(bad)
out
sahf
dec
popa
sub
imul
mov
or
loopne
xchg
cmp
scas
fimul
jne
nop
xchg
xor
cdq
cmc
cmp
das
imul
lock
mov
xchg
xor
cmp
leave
push
push
cli
fiadd
adc
repz
inc
push
mov
pop
jecxz
lock
fidiv
xchg
sbb
rcl
adc
push
fdivrp
sbb
xchg
adc
test
scas
clc
retf
push
cli
adc
ss
aam
jecxz
xor
xchg
in
mov
add
lock
fbld
ins
pop
cld
mov
(bad)
mov
xor
xchg
retf
jnp
pop
fdiv
imul
sbb
pop
push
data16
pop
push
enter
cmps
cmp
(bad)
jg
jae
mov
jns
xor
in
pusha
adc
push
popa
pusha
je
call
push
call
xor
(bad)
outs
popa
repnz
fdiv
push
stos
push
cwde
fst
leave
ja
bound
adc
jl
xchg
rcl
(bad)
sahf
scas
leave
hlt
and
call
loopne
loope
jg
push
cmp
retf
lods
dec
inc
inc
imul
or
pop
rcl
push
add
xlat
pop
cmps
add
lock
daa
lds
mov
jmp
dec
das
xchg
sar
xchg
out
ins
cmps
add
adc
fwait
call
or
inc
jb
cld
arpl
lahf
sub
icebp
adc
push
jo
inc
jbe
ja
push
pop
dec
bound
xor
inc
dec
and
mov
add
adc
(bad)
or
xchg
sahf
push
dec
and
pushf
loopne
pop
in
jbe
adc
push
fldlg2
mov
test
mov
jb
aad
xor
leave
stos
jle
loopne
in
int3
int
test
adc
jb
or
enter
pusha
sbb
cmp
outs
sub
imul
out
xchg
imul
fdiv
push
mov
test
pop
jle
dec
or
not
mov
outs
popf
int3
retf
push
pop
sbb
push
mov
mov
test
pushf
inc
shl
dec
out
js
push
rcl
and
enter
out
adc
sbb
call
pusha
xor
jle
fnstsw
iret
mov
push
mov
call
mov
mov
cmp
sub
cld
lock
mov
loopne
lahf
cld
mov
mov
mov
rcr
(bad)
push
mov
push
neg
sbb
call
imul
jae
cmp
popa
xor
xchg
clc
aad
ss
fs
bound
cmp
es
(bad)
out
pushf
dec
sbb
inc
addr16
dec
pop
(bad)
jnp
sbb
xlat
push
mov
clc
sub
pop
mov
sbb
enter
rol
xchg
movs
xor
pop
data16
mov
ja
out
xchg
xlat
movs
cmp
sub
(bad)
ins
pop
ret
cmp
ret
and
xchg
data16
cmp
inc
jmp
stos
or
and
stos
mov
dec
xor
or
icebp
sar
retf
call
aaa
pop
sub
push
ins
xchg
cmps
rcr
lock
(bad)
sti
inc
xchg
enter
cmp
cmp
add
ins
ds
ins
daa
dec
iret
xor
xchg
sbb
sub
jb
mov
fbld
push
js
or
daa
arpl
lock
mov
in
aam
xchg
xchg
mov
jp
mov
fild
mov
dec
and
int3
mov
and
jnp
pusha
pop
and
xchg
cmps
aam
xchg
data16
sbb
les
xor
movs
sti
cmps
cmc
xchg
or
push
loopne
xchg
cmp
shr
test
xor
dec
(bad)
out
call
pop
mov
fidivr
div
dec
mov
retf
and
and
scas
sbb
retf
xchg
fiadd
add
xchg
arpl
inc
xchg
and
mov
data16
dec
mov
pop
shl
jae
sub
xchg
mov
in
inc
test
dec
sbb
jge
ror
cmp
dec
cmps
loopne
xor
(bad)
mov
es
and
into
jb
sbb
add
jo
mov
and
inc
ss
adc
test
aaa
or
sub
mov
dec
xor
inc
add
jo
jno
out
mov
add
sub
pop
ins
ins
cmc
sub
xlat
mov
leave
in
aam
or
ss
mov
jne
fstp
add
idiv
inc
sub
movs
or
adc
in
shl
cmc
push
sub
mov
mov
movs
mov
or
cmps
in
cmps
scas
test
xor
cmc
cmp
ret
test
dec
mov
bound
sub
or
xor
inc
loopne
cmp
stos
sub
cmp
pop
pop
xchg
mov
ja
fisttp
aas
xor
xor
adc
out
dec
pusha
fs
iret
adc
push
aas
add
call
fisttp
loop
(bad)
lock
(bad)
out
loope
lock
ficom
xor
xchg
repnz
mov
mov
cmp
or
pop
fiadd
fst
mov
mov
jl
mov
in
cmp
lock
xchg
ins
aaa
mov
ins
jo
and
mov
inc
test
les
mov
cmp
or
arpl
out
add
ficomp
int
pushf
adc
int
pushf
xchg
mov
lea
mov
addr16
fidivr
inc
xchg
jl
jmp
push
fsubp
dec
punpcklwd
adc
js
sbb
pop
cld
scas
or
outs
icebp
in
dec
dec
mov
jg
stos
cmps
push
dec
dec
(bad)
and
lock
outs
pop
xchg
push
stos
pop
pop
lods
gs
outs
scas
fwait
ja
(bad)
jmp
cmp
loop
aad
mov
fpatan
xchg
xchg
aas
sbb
lods
fcmovnb
mov
mov
ror
ffreep
pop
loop
mov
adc
dec
or
jp
gs
mov
xor
push
dec
xchg
mov
sbb
in
repz
movs
push
jp
test
call
aad
fiadd
jmp
cmp
jmp
cmc
(bad)
aad
cmp
ins
nop
push
and
mov
inc
xor
jg
es
dec
test
fbstp
hlt
pop
inc
add
fld
rol
mov
add
add
mov
add
add
pop
rol
add
add
inc
cmc
add
add
add
add
add
add
add
cmp
std
add
ret
mov
push
add
or
add
add
repz
push
jmp
add
inc
int
add
add
lock
jns
add
add
xlat
add
add
add
inc
add
add
mov
add
add
add
add
popf
add
add
add
add
add
add
add
pop
add
fwait
add
add
add
fiadd
add
jecxz
jl
add
add
add
add
add
add
add
add
inc
add
add
add
movs
jp
into
xchg
cmovs
cdq
inc
jle
add
ins
scas
push
xor
(bad)
scas
adc
cmp
aaa
repnz
fcomp
add
fstp
shl
sub
sub
pop
adc
add
sub
sub
in
sub
hlt
and
push
pushf
pushf
mov
jo
push
out
retf
shl
mov
shr
js
fisubr
pop
(bad)
test
in
xchg
adc
scas
lods
pop
add
inc
hlt
popf
jle
es
xor
mov
repnz
mov
fucomip
xlat
dec
jl
fst
fist
movs
xor
call
(bad)
out
mov
xor
mov
gs
(bad)
fist
fadd
push
call
xchg
fldenv
int
mov
push
loope
imul
cli
dec
pop
mov
fnstcw
outs
pusha
std
das
xchg
mov
aad
dec
aas
imul
enter
xchg
xchg
fld
cli
popa
cmp
cmp
mov
xchg
or
or
stos
nop
pop
in
aas
dec
mov
ins
fwait
or
pop
xor
jmp
jmp
stc
(bad)
shr
cmp
or
mov
aaa
adc
xor
xor
sub
and
mov
push
sub
fnstcw
xor
inc
add
pop
push
icebp
adc
pop
dec
sub
mov
hlt
jge
loop
sbb
jg
and
lahf
mov
push
adc
cmp
push
in
mov
out
jp
cmp
xor
inc
movs
inc
mov
xor
add
enter
out
outs
js
cdq
gs
cli
xor
cmp
sti
pop
adc
loopne
fstp
ret
pop
js
(bad)
xor
mov
jb
dec
into
neg
mov
cdq
xchg
push
dec
dec
inc
das
add
add
jmp
movs
jl
aaa
pop
push
repz
(bad)
inc
xor
mov
sbb
mov
cdq
out
int3
mov
mov
movs
xor
inc
mov
je
push
lea
adc
jmp
retf
bnd
jg
or
cmp
inc
xor
addr16
push
pop
adc
ds
aad
add
pop
cmps
fs
xlat
xchg
popf
stos
dec
and
out
push
fwait
movs
and
xor
imul
jp
ret
loopne
repz
sub
sar
inc
test
dec
lods
or
repnz
adc
dec
mov
mov
dec
repnz
adc
les
and
adc
data16
loope
xchg
leave
sbb
sbb
and
add
pop
mov
push
inc
xor
sbb
shr
inc
add
aad
pusha
daa
mov
outs
sbb
dec
out
lock
xor
les
mov
imul
ficomp
push
stc
or
ret
jno
ret
sub
out
pop
popf
jbe
inc
je
sub
pop
jne
ja
xchg
(bad)
jno
mov
xor
lahf
cmp
mov
idiv
add
push
out
std
sub
pop
push
mov
addr16
xchg
cmpxchg
or
aad
repnz
mov
call
mov
out
popa
push
retf
jae
ret
fsubr
adc
icebp
jns
adc
in
add
pop
or
sub
sub
dec
sahf
cmp
pop
(bad)
mov
xor
test
movs
sub
sub
push
or
dec
cs
xchg
cs
fwait
in
mov
sub
hlt
add
scas
ror
pop
fdiv
lahf
scas
sub
sub
repz
aaa
lods
sbb
add
jb
inc
add
popa
loope
outs
imul
outs
movs
es
and
jb
dec
mov
jp
loop
sbb
add
in
and
inc
test
push
retf
or
rol
adc
dec
jo
pop
xor
sti
gs
pop
outs
imul
jne
imul
inc
mov
jp
lea
cmc
enter
mov
mov
stos
mov
(bad)
xor
sub
cmp
and
adc
cs
test
push
data16
lahf
jp
cmc
jmp
or
inc
pop
xchg
jp
adc
jge
and
push
xchg
fs
push
push
out
pushaw
shl
ins
adc
pop
fisttp
pop
(bad)
out
cmc
stc
leave
aam
shl
mov
stos
in
(bad)
inc
in
cmp
fucom
lds
out
mov
stos
int
repz
sahf
push
cmp
out
retf
xchg
ret
adc
adc
cmp
pop
inc
lods
sub
mov
jne
xor
pop
adc
mov
sub
bndstx
loopne
loop
sub
out
neg
mov
std
pop
push
mov
dec
jmp
jns
sub
pop
and
mov
ret
push
adc
rol
les
mov
mov
jl
jb
lahf
ret
inc
pop
(bad)
push
add
push
pop
(bad)
adc
push
(bad)
mov
mov
sub
dec
push
dec
pop
adc
and
jmp
dec
pop
es
mul
jb
xor
sub
jle
pop
mov
fisttp
pop
xlat
cwde
dec
push
imul
ret
jae
test
inc
(bad)
adc
pop
xor
outs
nop
mov
push
jmp
or
call
push
cmps
retf
jecxz
cmp
add
add
cmc
jns
das
adc
mov
mov
push
add
add
sub
shl
push
sub
xlat
cli
call
iret
js
fidiv
jnp
mov
retf
(bad)
int
push
ret
dec
jg
jl
cmp
mov
int
dec
cmp
pop
jmp
je
test
in
mov
and
pop
and
push
mov
and
cmc
(bad)
js
lods
pop
adc
xchg
lds
push
mov
mov
and
xchg
dec
imul
cmps
lds
sub
and
arpl
mov
inc
xor
rcl
pop
xchg
jnp
sbb
or
pop
call
jp
scas
les
add
pushf
mov
sub
mov
jp
sub
cmp
retf
mov
leave
xchg
or
cdq
push
mov
enter
pcmpeqb
retf
shl
lods
add
xchg
jbe
fild
das
(bad)
xor
aam
xor
aam
outs
pop
(bad)
mov
cmps
mov
mov
push
dec
cmc
sbb
mov
xor
retf
test
lds
ficomp
inc
push
cli
dec
cmp
pop
imul
or
or
jbe
adc
nop
add
mov
mov
(bad)
inc
imul
lods
daa
cmp
dec
pop
adc
mov
cdq
push
push
sti
stc
xchg
jb
out
mov
mov
outs
mov
mov
add
add
rol
add
inc
stos
pop
mov
pushw
and
push
sbb
pop
and
(bad)
mov
(bad)
retf
shr
sub
mov
(bad)
and
cwde
xor
and
or
stos
jno
jnp
xor
je
pop
inc
cli
clc
iret
in
data16
or
ins
arpl
mov
and
je
push
std
cwde
leave
sub
and
jl
outs
rol
out
push
pop
and
adc
inc
loopne
clc
add
mov
jb
sti
jge
mov
sub
jmp
cmp
movs
adc
and
mov
arpl
xchg
loopne
mov
sub
or
loopne
jo
push
imul
xor
jo
test
mov
and
cs
icebp
or
movs
mov
jb
scas
das
pop
aas
cmp
dec
or
loop
jae
cmp
sbb
mov
aaa
dec
jbe
dec
gs
mov
movntps
lods
pushf
add
cs
leave
mov
lock
or
imul
mov
mov
push
pop
lea
jno
(bad)
pop
cmps
mov
mov
gs
adc
jns
inc
pop
inc
push
dec
mov
lahf
pop
loopne
xchg
mov
retf
cmc
pop
cwde
mov
mov
out
bound
inc
imul
or
pop
mov
call
imul
cld
xor
inc
out
arpl
iret
xor
cmp
jo
not
aam
ret
add
or
ret
dec
sbb
mov
push
shr
xchg
and
dec
sub
ret
mov
adc
jbe
movs
(bad)
addr16
mov
aam
loopne
mov
ja
ja
fwait
add
sbb
ins
fs
cmp
pusha
loop
rcl
mov
or
sbb
and
jmp
inc
icebp
mov
adc
cli
and
(bad)
stos
pusha
cli
(bad)
xlat
outs
cdq
repnz
inc
shl
and
in
ror
push
push
jb
hlt
mov
loope
xchg
dec
jl
repnz
not
pop
int
and
sbb
cmps
cld
dec
pop
(bad)
idiv
mov
(bad)
mov
scas
cld
push
mov
test
into
adc
out
pushf
enter
xlat
cmp
push
add
mov
test
ins
push
dec
inc
test
cmp
in
xchg
(bad)
or
cmp
mov
iret
fs
loopne
jne
stos
stos
scas
hlt
lahf
iret
jnp
sub
dec
arpl
push
stc
call
jne
fistp
jl
inc
iret
xchg
mov
xor
addr16
cmp
xor
cs
arpl
pop
loope
je
pusha
mov
dec
int
out
push
adc
adc
jno
lods
aaa
jge
test
sar
push
sbb
adc
int3
retf
lock
fdivr
addr16
les
push
sub
adc
cli
pop
and
call
fldenv
mul
imul
stos
lea
inc
loopne
(bad)
fs
add
xor
cdq
inc
add
das
std
push
call
sub
dec
and
xchg
cli
js
jge
neg
outs
xor
(bad)
arpl
call
inc
inc
and
test
mov
pusha
mov
sbb
js
sbb
pop
dec
add
mov
or
movs
mov
and
cmp
cmc
pop
mov
and
fld
inc
rep
pop
push
cmp
sub
pop
and
add
sub
add
mov
leave
add
add
add
sti
add
add
add
add
movs
add
add
add
das
cmc
inc
stc
add
add
add
pop
add
add
add
add
jb
and
jae
add
add
add
or
push
xchg
dec
inc
mov
pusha
push
sub
loope
or
pop
bound
jb
xchg
fcom
fisttp
shr
popa
fcmovu
(bad)
adc
or
pop
add
ja
mov
xor
movs
or
cmps
fsub
mov
cld
fstp
add
mov
icebp
xchg
push
popa
pcmpgtd
iret
mov
fs
xchg
(bad)
ror
leave
stos
xchg
mov
cs
or
stos
sbb
cmp
lods
mov
fstp
in
test
xchg
sub
jmp
xor
enter
scas
nop
adc
sahf
sub
push
out
pusha
stos
dec
push
sbb
pop
mov
dec
lahf
adc
dec
gs
fwait
out
cmps
fidivr
lods
xchg
cmc
mov
xor
cmp
cmp
lea
push
push
lock
inc
jmp
or
add
cwde
push
mov
outs
test
stc
es
push
outs
fisttp
pusha
aaa
push
jno
xchg
xchg
(bad)
mov
mov
mov
mov
xchg
int
cmp
add
in
aam
and
inc
lods
inc
mov
and
sub
pusha
les
mov
push
jns
loopne
jnp
cmps
xchg
(bad)
jns
outs
cdq
mov
pusha
push
std
mov
int3
loopne
and
lea
jo
mov
mov
sar
int3
pusha
lds
out
fstp
mov
add
loopne
push
sub
sbb
push
xor
outs
pop
test
sub
cmps
lock
add
push
jmp
outs
out
movs
jne
add
repnz
in
lods
adc
pop
push
add
dec
dec
sub
in
or
inc
xchg
(bad)
add
daa
dec
js
(bad)
pop
and
loope
cmps
(bad)
push
or
ficomp
out
fidivr
stos
std
loope
test
dec
das
mov
or
xchg
push
mov
mov
icebp
mov
cmp
ins
push
in
aaa
ins
jge
add
adc
(bad)
mov
push
jae
or
sub
in
xchg
daa
rcl
(bad)
sub
fdivr
add
or
jp
xlat
and
gs
out
std
retf
pop
sti
fcmovnb
stc
fistp
inc
ror
aad
adc
xor
dec
mov
cmc
ret
dec
rcl
sbb
sbb
(bad)
stos
(bad)
outs
inc
je
(bad)
into
pop
mov
outs
outs
cmps
mov
(bad)
(bad)
fst
xchg
sub
cmp
js
ins
sbb
mov
lods
mov
out
mov
push
pop
and
push
xor
adc
xchg
fldcw
push
jge
(bad)
cli
adc
xchg
jbe
ror
rcr
(bad)
(bad)
shl
cmp
jp
and
and
or
fsub
sahf
cmps
sbb
push
or
lods
mov
clc
xor
and
fsubr
push
pushf
pop
jp
push
retf
jp
sbb
(bad)
xchg
lods
add
sub
bound
dec
nop
mov
lods
adc
mov
xor
(bad)
jnp
add
or
push
mov
dec
das
(bad)
lahf
clc
(bad)
sbb
adc
sub
movs
or
cmps
mov
mov
sbb
xchg
push
jmp
mov
mov
(bad)
out
bound
or
cs
xor
daa
xlat
dec
sar
pusha
mov
fnstenv
out
aaa
test
daa
fwait
and
mov
xlat
mov
cmp
aaa
fcomp
mov
mov
ret
aas
pop
mov
push
stos
push
pushf
mov
lods
xor
xchg
inc
into
jmp
das
mov
xor
iret
push
leave
data16
cli
cmps
aam
jb
xchg
mov
mov
sar
sbb
stc
popa
push
xlat
push
xchg
dec
clc
push
mov
outs
repz
cli
pop
sub
push
fsubp
adc
dec
jecxz
iret
cli
ins
dec
sub
(bad)
cmp
inc
or
fild
mov
mov
mov
ja
out
je
(bad)
mov
clc
out
and
movs
aad
and
in
out
fst
daa
ins
loope
push
add
rol
rcl
and
xchg
jmp
ret
sub
jecxz
in
shl
mov
retf
or
iret
jo
sbb
pushf
jl
sar
xchg
test
das
mov
adc
nop
in
jge
scas
sbb
jp
inc
cdq
push
gs
mov
fsubr
xor
push
stc
inc
out
inc
gs
sub
sbb
push
or
jl
pushf
add
(bad)
call
mov
(bad)
xlat
out
add
aam
(bad)
fild
popf
test
call
mov
ret
jp
sub
jnp
add
out
imul
adc
bound
xchg
dec
xchg
push
xor
fisttp
jbe
pop
push
jnp
sbb
fnstsw
movs
arpl
sar
adc
push
cmp
push
add
(bad)
xor
retf
nop
sub
ja
add
fdivr
mov
add
cwde
imul
addr16
enter
cmp
pop
out
xor
mov
cs
leave
push
(bad)
cmps
mov
(bad)
dec
dec
sub
lds
pop
push
je
loop
cmp
mov
jp
ror
je
xchg
mov
xor
int3
je
push
xor
adc
add
lods
add
or
mov
pop
jb
jmp
gs
jns
bound
shl
imul
js
pop
dec
xchg
lds
mov
scas
xchg
cmp
xchg
and
cmp
(bad)
add
(bad)
retf
or
ror
arpl
nop
iret
jb
stos
xchg
mov
push
jo
loope
cld
jp
jl
mov
and
xchg
aam
add
pop
mov
jb
cmp
stos
out
adc
mov
xchg
pop
ficomp
dec
lock
dec
adc
push
add
pop
into
push
das
sub
mov
cli
es
sub
and
jo
jge
xor
into
jp
sbb
jae
(bad)
(bad)
dec
cli
call
inc
shl
mov
(bad)
mov
cmc
cmc
add
push
test
sbb
dec
mov
mov
xor
add
push
daa
pop
(bad)
jnp
xchg
add
xchg
bsr
xchg
inc
leave
add
std
pop
pop
ins
(bad)
repnz
call
sbb
fs
jae
test
popa
cmp
or
jno
fwait
cpuid
popa
jbe
sbb
scas
xchg
scas
pop
sbb
cdq
and
xchg
loop
jp
inc
cld
mov
pop
xor
xor
jne
aaa
shl
out
dec
sti
std
or
shl
mov
adc
jb
push
into
cli
mov
xor
retf
mov
sbb
int
sahf
or
mov
(bad)
adc
fimul
and
sbb
(bad)
jp
int
mov
pop
push
cmps
mov
cmp
fs
sbb
xchg
les
mov
jge
(bad)
cmc
push
in
push
out
inc
loop
cmps
dec
imul
enter
arpl
xchg
mov
leave
outs
push
pop
js
inc
adc
out
dec
push
xor
inc
push
movs
cmp
(bad)
cmp
iret
mov
into
aaa
(bad)
adc
and
adc
ins
add
add
push
lods
outs
inc
sbb
and
leave
mov
enter
push
cmps
dec
push
sub
and
cwde
(bad)
js
scas
push
call
hlt
(bad)
retf
fs
add
jae
pusha
mov
iret
shl
adc
xlat
or
and
mov
mov
(bad)
fstp
movs
ins
dec
bound
pop
jmp
push
mov
push
push
cmp
xor
xor
fs
retf
adc
and
sar
fwait
(bad)
es
ja
ds
adc
jmp
sub
or
mov
movs
mov
stos
test
cmp
cmp
addr16
push
and
test
xor
(bad)
cmps
sub
xchg
push
add
inc
dec
mov
xchg
adc
add
test
retf
add
test
(bad)
repnz
sti
stc
jle
dec
dec
fidivr
dec
and
inc
shl
mov
add
mov
ja
cmp
lds
add
repnz
pop
gs
xchg
das
mov
xchg
aas
call
lods
jg
fild
mov
jae
sti
push
cdq
mov
dec
jmp
hlt
aaa
test
fwait
cmp
pop
out
inc
outs
sub
push
loope
not
jmp
pop
inc
leave
jne
mov
pop
out
mov
mov
test
mov
add
in
sbb
fwait
cs
xor
push
das
pop
and
push
out
cmps
jb
cwde
push
popf
out
fcmovnbe
push
movs
clc
cmp
push
xchg
push
fadd
add
paddusb
int
cmp
movs
cmp
xor
lea
add
add
push
and
mov
mov
sbb
shl
(bad)
fwait
(bad)
and
sbb
enter
xor
and
scas
lea
jmp
stc
push
retf
xor
add
jg
frstor
mov
mov
(bad)
and
cs
dec
jmp
sub
xlat
xlat
cmp
retf
das
int
into
inc
rcl
out
xchg
out
adc
jmp
pop
mov
push
call
lods
aam
cld
mov
sub
or
(bad)
sbb
lea
nop
dec
xor
add
fist
ret
inc
mov
cli
jmp
cbw
mov
mov
jmp
push
neg
ret
jns
icebp
je
xor
pop
cmp
leave
or
pushf
popf
ja
pop
stos
jecxz
inc
xchg
sahf
pop
loop
jns
mov
shl
imul
js
cmps
cmp
push
xor
xchg
sbb
mov
shr
xchg
and
mov
das
out
dec
test
cmp
xor
sysret
in
mov
rol
fdivr
aas
movs
mov
fcom
jbe
cmp
mov
adc
xchg
pushf
test
les
daa
pop
mov
and
cld
imul
add
add
ins
add
add
in
add
add
adc
add
add
add
add
add
add
add
pop
add
add
add
mov
add
pop
add
add
fs
call
add
fnstsw
add
add
add
add
add
cmc
bound
add
add
outs
rol
add
add
add
push
add
adc
add
jbe
add
add
add
add
add
add
add
add
adc
dec
movs
pop
sub
mov
jecxz
rcr
jge
xchg
dec
out
inc
add
mov
mov
mov
jp
jecxz
cmp
inc
or
jmp
sub
xor
movs
and
push
lds
ret
push
data16
in
int
pop
scas
dec
test
adc
fdivrp
pop
imul
pop
sbb
das
fild
(bad)
fbld
mov
loopne
push
mov
xor
push
sbb
pusha
imul
push
shl
bound
mov
mov
jl
cwde
iret
jmp
fstp
sub
popf
int3
add
pop
shl
cmp
iret
inc
adc
or
out
jne
ja
test
or
jne
cmp
xor
mov
mov
mov
imul
lods
xchg
in
push
and
shr
inc
cmps
mov
dec
fsub
cmp
sbb
(bad)
fldcw
adc
xchg
sub
xlat
aad
cmp
ficom
push
pushf
pop
jmp
push
shl
mov
mov
cli
mov
xchg
mov
test
pop
ror
xchg
xor
adc
mov
mul
or
sar
and
bound
jmp
or
cmp
jg
iret
adc
cmps
push
inc
sbb
out
cmp
mov
jno
ret
cmps
mov
(bad)
adc
mov
pop
add
data16
xchg
outs
shl
xlat
call
test
xchg
xchg
add
mov
setnp
sub
push
retf
xor
cmps
push
iret
cmc
sub
xchg
test
xchg
rol
push
call
mov
movs
jb
add
cmp
fisubr
push
ins
jo
push
ja
popa
jmp
bound
or
fisub
mov
fist
mov
(bad)
push
dec
data16
in
addr16
xchg
mov
pop
(bad)
es
imul
push
cs
(bad)
icebp
jne
push
push
mov
out
sbb
mov
jns
adc
lods
scas
jecxz
call
dec
cwde
or
fsub
add
xor
test
addr16
imul
or
lahf
popf
add
dec
pop
inc
(bad)
outs
iret
mov
inc
out
stos
mul
or
jo
xchg
fist
jb
sub
cld
adc
adc
std
dec
add
mov
jl
pop
ja
leave
loop
pop
cmp
aas
jns
fldenv
jnp
mov
xor
mov
push
test
rcr
fdivr
imul
pop
ins
sub
and
int
call
lds
mov
and
mov
das
sub
out
or
pop
fnstcw
bound
add
cmp
cmp
pop
mov
cdq
retf
add
hlt
jmp
out
jecxz
mov
loope
mov
adc
jmp
xchg
jbe
pusha
cdq
bound
cmp
pop
or
cdq
into
lock
add
cs
stc
aas
push
repz
scas
aam
pop
xlat
scas
xor
mov
sbb
sbb
enter
push
sbb
and
inc
fbstp
ds
stos
fucom
lea
pop
lea
sbb
scas
jns
into
(bad)
leave
jns
push
loopne
and
xor
out
mov
pop
cmp
mov
jno
xor
mov
in
jbe
cmp
mov
ins
out
into
not
dec
sahf
push
jno
inc
imul
xchg
mov
es
popa
jecxz
cs
shr
aad
pop
in
shr
inc
in
leave
fs
ds
push
xor
cs
lods
(bad)
lea
sub
xor
test
and
js
pop
scas
ins
invd
add
sub
or
dec
out
addr16
aad
jp
mov
sti
scas
add
push
and
lahf
mov
clc
mov
pop
shr
sub
es
and
rcr
xor
cli
sub
call
mov
pop
test
and
mov
pop
push
fs
in
push
mov
fwait
and
cmps
dec
xchg
add
neg
retf
pop
xor
mov
int
(bad)
(bad)
pop
js
xchg
xchg
retf
ror
cmp
ss
jae
je
push
fldlg2
pop
mov
mov
push
pop
cmps
xchg
mov
call
addr16
jns
fnstsw
mov
lods
sub
sbb
iret
jne
xor
push
popf
jbe
cmp
jo
jnp
or
push
imul
lds
xor
pop
test
cmp
lock
jl
cmp
in
or
in
adc
mov
fbstp
ins
adc
scas
push
lds
add
test
js
push
push
out
je
mov
imul
fucomip
xchg
pop
popa
push
jae
and
push
sbb
pop
es
mov
dec
lods
mov
imul
push
pop
imul
imul
push
fbld
out
adc
mov
pop
add
jns
fidivr
scas
loopne
sbb
pop
sahf
scas
jmp
popf
cmps
addr16
scas
ins
test
sub
out
mov
cli
daa
jno
cmp
cwde
sub
imul
ror
mov
and
jl
sub
sub
loop
repnz
sbb
xlat
repz
ins
daa
jne
inc
popf
cmps
sbb
hlt
call
mov
lds
add
mov
es
push
fcomi
xchg
fstp
mul
inc
sbb
cdq
lahf
jns
inc
xchg
sub
ss
mov
cmp
and
xchg
test
sahf
jns
sub
mov
in
adc
adc
fistp
hlt
mov
add
sbb
pop
and
mov
or
cmp
in
fdivr
xlat
loop
js
movs
fcmovu
sbb
ins
aam
out
add
or
test
pop
stos
xchg
sub
retf
add
or
mov
dec
mov
cwde
inc
add
mov
aam
movs
xor
pop
fst
xchg
or
frndint
sti
test
pusha
fistp
and
pop
int
inc
(bad)
sbb
jmp
loopne
lods
and
sub
out
mov
(bad)
xor
jmp
mov
cmp
cwde
push
adc
sbb
in
fldcw
and
mov
adc
ins
inc
ret
pop
sub
or
push
inc
call
dec
xor
xchg
xchg
mov
loop
mov
pushf
pop
cld
cmp
movs
inc
out
fisub
push
jecxz
push
sbb
lods
out
inc
add
aad
inc
and
(bad)
mov
sbb
jne
jmp
ins
cwde
xchg
enter
pusha
mov
jns
nop
aas
call
stc
dec
lea
xchg
test
inc
mov
push
loope
rcl
ja
je
sbb
push
sub
cmp
rcr
push
mov
in
nop
jbe
in
jae
fcom
or
dec
test
dec
adc
dec
cwde
icebp
add
ss
push
pop
jno
fs
adc
lahf
lock
jno
iret
adc
fld
mov
inc
dec
pop
pinsrw
xor
or
gs
fistp
cs
mov
sub
sbb
into
push
scas
in
rol
movs
test
stc
js
xchg
ret
test
test
std
mov
xchg
loope
jne
not
outs
shl
jnp
jbe
dec
loope
cmp
dec
dec
leave
into
sar
push
jp
mov
je
in
dec
dec
mov
dec
add
adc
mov
mov
loope
mov
xchg
mov
mov
adc
je
iret
cmps
leave
ja
or
in
lahf
bound
or
cmp
or
inc
loope
adc
call
push
inc
sar
inc
addr16
sub
ins
jp
jno
(bad)
fmul
repz
jg
mov
inc
cs
cwde
push
ror
sbb
das
pop
clc
ins
add
mov
ss
add
sbb
cdq
inc
dec
test
outs
sbb
push
push
ds
mov
aam
btr
and
imul
or
xor
sar
out
int3
out
stc
rol
sub
int3
jnp
push
cmp
mov
add
and
pop
push
leave
push
adc
int3
inc
aaa
xchg
push
ror
or
xchg
mov
repnz
pop
mov
fcmovnbe
push
xchg
ja
test
cmp
shl
popa
dec
mov
ss
pop
call
loop
in
or
mov
popa
jno
(bad)
das
js
ss
sbb
shl
(bad)
mov
movs
sahf
lea
loopne
mov
mov
cmp
xor
pushf
(bad)
push
xchg
inc
lds
neg
stos
lea
and
or
pop
aas
push
push
dec
jg
fbld
(bad)
jecxz
xor
sbb
push
rcr
addr16
cmp
scas
mov
cmps
stos
and
push
jns
rol
xor
fcomp
push
lods
jg
sbb
lods
ret
pop
ins
dec
mov
push
adc
in
addr16
das
inc
jmp
mov
adc
cwde
sbb
inc
sub
arpl
jbe
icebp
cmp
(bad)
add
push
xor
(bad)
mov
pop
pushf
outs
in
scas
sbb
leave
dec
lods
pop
mov
fld
dec
fnstenv
add
inc
push
sti
sbb
lods
mov
aam
dec
popa
bound
(bad)
xor
popa
push
retf
jmp
loop
dec
ror
in
je
cmp
ss
xor
(bad)
aad
jnp
xor
inc
xor
rsm
xchg
jmp
ss
lea
in
loope
mov
sbb
xor
jbe
pop
popf
in
jnp
fcom
push
int3
addr16
pusha
mov
sub
mov
jae
sar
(bad)
add
int3
pop
aam
add
bound
push
or
mov
outs
mov
call
enter
cmp
sub
popa
imul
stos
test
add
add
add
add
les
add
in
add
add
add
int
add
add
add
add
inc
arpl
add
add
aad
add
add
add
inc
add
add
add
addr16
add
ret
add
add
add
add
add
cmp
leave
add
add
xchg
add
add
add
push
data16
out
add
add
add
add
jne
add
sbb
mov
out
xchg
and
pop
or
push
(bad)
bswap
jns
sbb
aaa
sbb
inc
push
add
mov
mov
mov
xor
push
pop
es
push
or
mov
mov
sub
xor
dec
xchg
test
inc
jnp
loopne
test
sbb
jp
out
xchg
mov
mov
mov
and
es
fcomi
movs
dec
jno
mov
test
mov
(bad)
bound
ret
cmp
stc
out
mov
sar
pop
imul
loopne
mov
mov
fst
adc
cmp
cmp
inc
jge
pop
icebp
pop
adc
daa
xchg
mov
sub
sub
loopne
sub
lods
sbb
scas
pop
sahf
jno
int
jmp
adc
pop
push
xchg
out
xchg
jb
cmp
inc
sub
and
scas
jmp
js
aas
pop
lods
dec
fxam
jb
push
inc
nop
cmps
add
ror
leave
pop
cdq
leave
leave
ja
not
fs
mov
mov
or
jle
mov
xchg
ss
push
retf
or
pusha
retf
aas
(bad)
jmp
jno
cmp
mov
imul
les
mov
inc
push
imul
(bad)
enter
pushf
xchg
outs
shr
jp
xor
jl
or
mov
lahf
xor
out
(bad)
in
xlat
jns
pop
aas
mov
jge
xchg
xor
popa
add
(bad)
idiv
mov
cs
es
push
xchg
shl
sub
scas
retf
xchg
repz
out
repnz
aas
jbe
cs
mov
xor
adc
js
jge
lds
fs
adc
neg
add
sub
adc
or
or
adc
loope
ret
inc
cmp
arpl
in
adc
add
inc
xor
outs
xlat
push
ja
enter
sub
pop
xor
mov
aad
sub
enter
pop
pushf
adc
push
push
lods
or
call
dec
mov
js
fist
push
fimul
mov
stc
adc
adc
stc
test
test
in
push
(bad)
jg
pop
adc
fwait
jb
imul
mov
pop
mov
(bad)
mov
ss
mov
aas
cmp
js
cmps
mov
loop
popa
mov
and
fwait
inc
xchg
sbb
dec
xchg
loopne
lods
cld
inc
push
jmp
je
mov
mov
mov
rcr
jae
in
sub
xchg
sti
nop
loopne
sbb
pusha
mov
push
jge
push
callw
mov
inc
and
mov
push
cmp
aas
dec
gs
scas
movs
(bad)
cmp
(bad)
jmp
jge
jge
mov
push
push
xlat
arpl
mov
xchg
dec
fst
inc
xchg
xchg
pop
rcr
mov
xor
lods
sbb
(bad)
and
in
dec
adc
adc
jecxz
sub
jb
mov
scas
pop
jmp
leave
adc
inc
loope
pushf
dec
in
xchg
mov
aas
cmp
aam
inc
ffreep
cld
aam
cdq
cmp
cmps
leave
mov
hlt
or
sbb
lods
push
cs
mov
lods
movs
push
leave
push
bound
xor
sub
cmp
dec
outs
cmc
xchg
xor
fld
in
pop
rcl
sbb
stc
sahf
test
pop
daa
inc
mov
test
jbe
pop
dec
aad
cdq
mov
movs
xor
imul
rol
add
test
ins
add
std
cli
int3
iret
sub
std
fimul
cmc
push
enter
push
bound
les
dec
pop
outs
cs
pop
(bad)
int3
mov
cmps
movs
add
inc
mov
dec
or
fcmovb
add
sub
out
aam
pop
and
scas
cld
std
aas
or
bound
adc
mov
mov
pop
push
pop
sbb
in
loope
jno
push
cmp
xor
sbb
or
push
xor
xchg
mov
test
jb
jo
in
push
int3
mov
push
mov
xchg
mov
aas
jnp
jp
test
inc
dec
mov
mov
lds
xchg
std
punpcklbw
and
add
popa
mov
retf
mov
sbb
xor
mov
jmp
test
enter
aad
mov
cmc
(bad)
fdiv
mov
xchg
xor
das
xor
inc
ret
pop
jle
push
sbb
pop
mov
add
repnz
fldenv
xor
fistp
adc
cmp
ja
and
xchg
cmp
push
push
jle
cmp
fs
push
xor
loop
fsubr
(bad)
jp
jle
ret
iret
cli
inc
lds
pop
dec
in
and
outs
scas
shr
daa
adc
pop
test
pushf
push
(bad)
jg
stos
lock
fdivr
pop
mov
aam
xor
jmp
pop
push
fimul
and
mov
test
xchg
mov
dec
and
out
imul
push
gs
jl
aad
pop
popf
push
jbe
inc
mov
sub
leave
daa
adc
inc
mov
jmp
jg
outs
adc
xchg
xchg
ror
xor
cmc
cli
gs
in
sbb
xchg
or
int
lahf
and
mov
mov
dec
fs
ins
loop
js
mov
popf
stos
or
pop
fbld
ret
out
pcmpgtw
int
or
mov
in
scas
enter
mov
in
cmp
or
pushf
stos
sub
rcl
jbe
jae
loop
loopne
movs
outs
cld
aaa
xor
or
pusha
int
mov
mov
idiv
mov
movs
hlt
js
lds
add
or
sahf
and
sub
into
adc
and
out
inc
sub
repz
sbb
pop
mov
jo
push
mov
fidivr
jl
mov
mov
or
lock
add
frstor
sbb
test
xchg
aam
repnz
or
push
fwait
sub
and
and
add
ss
lods
xor
in
jecxz
fs
inc
adc
(bad)
dec
data16
aam
push
popa
inc
stos
int
ds
daa
xor
fcom
fwait
add
cmp
retf
fwait
shl
pop
jne
ror
das
retf
sti
mov
and
cmps
nop
je
sub
cld
daa
cwde
xor
jno
xchg
add
mov
cmp
jbe
and
mov
jae
ficomp
push
stos
mov
ja
mov
test
push
or
xchg
jmp
imul
adc
fst
sbb
test
dec
xor
loop
xchg
(bad)
aas
jae
(bad)
aas
sub
xor
cld
inc
pop
fdiv
mov
cmps
mov
js
xor
and
lods
xchg
ret
sub
jle
cmp
pushw
xor
icebp
cmps
loop
push
jg
or
push
push
out
adc
xchg
mov
xchg
jmp
push
or
adc
mov
xchg
test
inc
sbb
sahf
xchg
test
pop
fist
(bad)
xlat
or
xchg
fdivr
cmp
adc
popa
pushf
sub
outs
inc
nop
add
and
dec
les
push
lock
lea
(bad)
rcr
cmp
jp
mov
sub
push
adc
pop
dec
imul
or
out
inc
nop
jge
ja
adc
push
jo
mov
sub
paddusw
pop
data16
jae
das
nop
mov
and
mov
sti
pop
movs
sbb
push
loop
lods
cdq
sbb
repnz
jae
aad
lea
or
cmp
rol
pop
sti
push
sub
daa
mov
and
cmp
xor
jp
sub
sub
jns
add
fistp
jbe
push
pushf
(bad)
je
enter
pop
jle
ret
mov
sbb
cmp
or
rcr
pop
lods
das
out
addr16
data16
stc
push
lods
and
push
dec
add
mov
stc
int3
xchg
retf
aaa
aaa
add
std
(bad)
fwait
push
ds
sar
popa
pop
(bad)
(bad)
outs
or
inc
mov
lods
xchg
jb
jnp
jae
jae
cmps
push
fdiv
fbstp
aas
pop
adc
sbb
scas
xchg
jg
std
sbb
loop
leave
sub
xchg
or
push
and
out
sbb
cs
data16
ins
repnz
imul
les
out
das
js
mov
inc
jne
xor
mov
int3
call
cs
retf
into
add
sub
mov
and
xchg
xchg
xchg
mov
test
adc
lds
sub
inc
xor
fst
jbe
push
dec
fnstenv
mov
fisttp
jb
and
popf
es
into
ret
out
cmps
test
xchg
mov
lea
mov
shl
(bad)
xor
outs
push
push
or
frstor
ins
(bad)
loope
test
push
add
push
div
aad
int3
sti
adc
outs
and
popf
cmp
jmp
mov
mov
xchg
out
sub
push
sub
repz
mov
and
fnstenv
enter
loop
cmps
fcmovbe
cmp
mov
sbb
mov
je
mov
or
and
sub
mov
int3
lds
div
add
sub
add
scas
inc
fdivr
es
sub
and
jns
inc
inc
or
jmp
push
repz
sub
shl
jmp
xchg
cmc
int3
test
adc
jmp
(bad)
in
sbb
mov
xchg
push
test
movs
push
in
sbb
lea
push
loope
out
sbb
fld
out
xchg
lahf
and
mov
cmp
or
test
cld
jnp
cmp
add
add
sbb
add
add
add
dec
js
add
jae
outs
dec
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
cmps
add
add
add
add
dec
add
add
add
mov
add
add
add
add
add
data16
add
add
add
add
inc
add
add
add
add
add
add
add
jno
div
dec
dec
aam
mov
pop
jmp
imul
mov
push
hlt
or
aam
jbe
xor
shl
inc
jmp
outs
das
scas
pushf
inc
retf
inc
ins
mov
leave
loopne
jns
fimul
jmp
fadd
sbb
les
daa
bswap
aaa
popf
fwait
out
jo
and
out
inc
sbb
xchg
std
pop
inc
push
int3
cmc
jo
sti
add
and
data16
bts
push
inc
sub
pop
leave
inc
cld
jno
push
enter
jmp
and
sub
push
in
addr16
(bad)
(bad)
das
iret
cdq
in
inc
test
call
jge
push
mov
adc
lock
sbb
ret
sbb
sbb
sub
sbb
outs
sbb
repnz
fldpi
lds
push
jle
(bad)
mov
sub
sub
lock
call
(bad)
or
scas
movs
mov
mov
ja
aad
test
scas
or
push
icebp
cmp
mov
(bad)
jo
mov
add
add
fwait
xor
in
mov
xchg
ror
mov
pop
fmulp
mov
and
fld
aam
inc
loopne
pusha
mov
jl
imul
xlat
and
mov
rcr
push
mov
mov
cld
xor
rcr
add
ins
xchg
sbb
gs
mov
popa
jmp
mov
mov
sti
call
icebp
push
fsubr
inc
pusha
aad
inc
adc
pushf
pushf
call
fcomp
daa
(bad)
stos
mov
(bad)
shl
fsubr
sub
inc
cdq
mov
pop
ins
xchg
mov
push
test
mov
jle
aas
push
stos
lea
enter
or
test
addr16
inc
rol
stc
push
bound
jle
bound
gs
jmp
jge
sti
sbb
push
out
shr
nop
mov
loop
loop
push
in
cmps
adc
push
adc
push
mov
mov
aas
fs
lds
test
sbb
cmps
lock
fidivr
(bad)
adc
add
inc
iret
sahf
add
stc
ret
and
cmp
aas
outs
dec
xor
movs
or
(bad)
cli
mov
sub
ror
push
push
cmps
sub
mov
dec
push
xor
mov
sub
leave
and
add
cmp
aam
xor
or
(bad)
dec
test
mov
loopne
retf
out
inc
add
or
leave
ror
pop
scas
sub
and
add
add
mov
cli
sub
push
sbb
call
push
jns
jnp
movs
add
sub
jmp
mov
repz
inc
inc
lea
les
pusha
or
add
mov
jge
int3
call
sti
push
inc
push
jbe
jae
xchg
fs
ins
cmps
adc
test
pop
std
aam
hlt
add
inc
cdq
jmp
cmp
aaa
jno
dec
adc
stos
or
dec
or
mov
(bad)
xor
pop
jle
cs
cmp
jmp
fmul
jp
stc
pusha
dec
jmp
daa
adc
lds
cmp
push
and
xchg
pop
inc
add
xchg
fs
mov
xor
repnz
fwait
mov
jo
xlat
cmc
and
xchg
mov
xor
jae
xchg
fild
fs
sar
je
(bad)
push
adc
push
test
push
dec
fstp
xchg
xor
add
and
cmp
xchg
ror
push
jmp
dec
mov
movs
push
cmp
ret
mov
stos
gs
push
xor
or
int3
pop
push
aaa
jl
dec
push
mov
mov
jo
sub
adc
sub
xor
sub
mov
add
mov
mov
push
fbstp
fild
mov
xchg
in
das
loope
aaa
jnp
adc
mov
cmp
retf
mov
test
fadd
dec
gs
mov
test
jecxz
rcr
push
adc
dec
inc
in
mov
repz
push
mov
test
adc
dec
mov
inc
add
jnp
push
adc
fwait
pslld
jns
daa
mov
stos
in
pusha
(bad)
in
inc
jmp
arpl
out
ror
pop
dec
jno
pop
iret
mov
mov
mov
jge
test
int
test
cmp
cmp
cmp
push
fisttp
mov
and
adc
icebp
call
imul
aad
(bad)
pop
cmps
call
div
sbb
cdq
pushf
xor
daa
add
je
push
xchg
cmp
add
sbb
bound
pop
in
adc
push
ficom
sub
or
call
mov
sub
jnp
cmc
rol
push
pshufw
(bad)
pop
push
movs
enter
push
cmps
mov
xlat
pop
js
aas
cdq
ins
xchg
ret
jno
data16
inc
in
adc
mov
pusha
in
xor
aad
inc
mov
inc
pop
push
repz
pop
pop
movs
movs
jg
stos
sar
and
pushf
sbb
in
add
cmp
mov
sub
imul
fidivr
cmp
outs
inc
sub
sbb
sbb
loope
fsubr
and
mov
pushf
xchg
push
das
jl
sub
pop
imul
out
sar
sbb
mov
or
sti
call
aas
mov
adc
push
push
mov
or
or
ret
sbb
fidivr
mov
xchg
adc
jb
cmp
pop
push
adc
outs
sub
xchg
lods
cmp
mov
dec
inc
lock
inc
pop
movs
rcl
lds
cmps
out
rcl
pushf
mov
add
bound
pop
loop
xor
mov
enter
push
jp
aaa
(bad)
push
cld
cli
push
cwde
adc
popf
sbb
ja
in
mov
out
movs
les
adc
shl
xor
sar
xchg
mov
sahf
and
xchg
sub
mov
scas
cdq
daa
(bad)
cld
lods
popf
push
jnp
mov
out
or
ins
test
mov
sbb
mov
and
sub
lahf
adc
or
lods
pop
xchg
clc
outs
mov
mov
adc
movs
and
ret
pop
pushf
ror
pop
dec
add
scas
fldenv
fisubr
and
mov
add
stos
imul
dec
jo
pop
call
push
hlt
push
call
out
ins
int3
jl
into
cmp
nop
jne
test
mov
push
std
loope
pop
push
pop
daa
std
popa
xor
mov
loopne
jg
sub
xor
popf
pop
repz
neg
pop
lock
daa
(bad)
mov
mov
adc
rcr
cmp
popf
fist
pmuludq
cmc
stos
mov
or
mov
out
adc
xchg
pop
arpl
hlt
loopne
mov
test
jmp
mov
mov
cwde
push
jmp
mov
sbb
dec
mov
sub
lock
std
or
push
adc
sbb
(bad)
jle
mov
lea
jae
into
pop
mov
int3
mov
push
jmp
out
push
loop
out
pushf
fmul
cld
sbb
lds
fst
sbb
push
adc
xor
dec
fisub
punpckhwd
outs
cmp
sbb
lds
push
or
(bad)
mov
sbb
int3
rol
inc
mov
out
xlat
jmp
mov
dec
cdq
imul
jns
xchg
aas
push
stos
mov
add
xlat
and
adc
jge
mov
jbe
rcr
mov
fcom
aas
in
push
jp
stos
pop
jmp
bnd
mov
and
inc
pushf
xor
leave
inc
ins
sbb
(bad)
adc
aaa
rcl
push
mov
xchg
jnp
or
mov
mov
sub
pop
xchg
cld
les
repz
sbb
adc
shl
test
jne
clc
sub
jo
iret
ret
xchg
out
or
mov
and
mov
push
sbb
jne
adc
jecxz
dec
aad
sbb
nop
add
in
in
jg
mov
(bad)
pop
push
xchg
jne
pop
cdq
rol
mov
pop
add
rol
ret
add
into
inc
sbb
mov
ficomp
in
push
out
fcomip
rep
fisubr
or
pop
int
js
adc
shl
inc
cld
xor
pop
data16
out
or
cmps
daa
mov
add
xchg
adc
mov
mov
pop
out
push
xlat
ins
mov
inc
cmp
inc
sbb
cdq
dec
inc
jno
int
shr
inc
xor
shl
sbb
scas
or
ret
call
inc
data16
fadd
xchg
stos
jae
fdivr
or
push
sbb
pop
mov
or
push
jmp
(bad)
stos
add
xor
pop
xchg
push
push
and
mov
cdq
(bad)
mov
loop
outs
lds
popa
movs
(bad)
arpl
aaa
and
inc
stc
ss
adc
mov
xchg
xchg
mov
mov
fs
(bad)
test
ret
pop
das
sbb
dec
jns
(bad)
cmps
or
pop
jl
inc
lods
into
pop
rcr
jne
sbb
xor
or
cld
xchg
outs
es
pandn
data16
int
and
fstp
adc
mov
ficom
cmc
lds
mov
imul
add
lds
pop
ins
jnp
add
out
mov
call
inc
ins
push
cli
mov
fnstenv
and
xor
js
mov
ret
cmp
retf
and
retf
mov
adc
mov
pop
stos
stos
or
cwde
cmp
mov
mov
inc
sbb
jnp
fnstenv
push
and
dec
pop
retf
clc
les
xor
retf
xlat
ins
mov
(bad)
iret
ss
sbb
push
mov
rcr
sbb
sbb
xchg
mov
jecxz
jmp
repnz
pop
and
add
add
jae
add
inc
sbb
add
add
add
add
add
and
add
add
add
add
push
add
add
add
pop
add
add
cmp
add
test
add
add
add
add
dec
js
add
add
add
jbe
add
add
jnp
add
outs
and
clc
add
add
add
out
add
nop
ror
add
or
pop
add
add
adc
push
daa
iret
mov
cmp
popf
add
push
loope
gs
loopne
pop
mov
pusha
pop
sbb
mov
mov
imul
pmaxub
add
mov
mov
and
xchg
inc
jp
sbb
add
push
outs
les
nop
jne
scas
add
fnsave
xchg
iret
addr16
mov
(bad)
mov
pushf
push
stos
daa
dec
call
mov
in
ss
fstp
outs
inc
push
pusha
push
and
mov
mov
repnz
jle
add
mov
popf
pop
jns
adc
lar
aad
fisttp
out
movs
inc
sub
scas
cld
les
cld
fucomi
int
push
jmp
mov
push
cld
rcr
out
out
push
int3
outs
push
ss
inc
imul
jo
fisttp
dec
(bad)
or
retf
mov
adc
mov
mov
jl
jns
pop
popf
je
ret
mov
add
js
dec
jo
sbb
jne
stc
sub
rep
lds
or
addr16
add
ds
mov
lds
and
pop
mov
mov
call
xchg
adc
mov
mov
stos
loopne
es
daa
movs
popf
pop
sub
sbb
cld
push
mov
rol
(bad)
int
loop
es
daa
das
mov
mov
cwde
and
jl
std
jle
push
imul
ds
movs
push
sti
mov
xor
movs
push
cmp
pop
push
ror
and
xor
inc
cmp
test
dec
loopne
and
jmp
clc
adc
cmp
jp
(bad)
sti
or
jb
mov
inc
inc
or
jno
mov
mov
mov
push
mov
jecxz
xchg
and
inc
cmp
sub
(bad)
pop
sahf
xor
call
jg
adc
and
xor
in
rol
xchg
sar
push
pop
xor
and
ins
or
inc
js
push
sub
add
pushf
adc
jmp
out
adc
mov
mov
xchg
or
(bad)
mov
gs
jns
ja
mov
sahf
or
sub
adc
fcom
cld
loopne
int3
cmp
sbb
mov
lods
jmp
push
sbb
xlat
out
or
xor
lds
loop
out
mov
lods
mov
fiadd
js
enter
(bad)
xor
(bad)
out
pop
std
scas
or
and
jmp
adc
jecxz
push
adc
shl
(bad)
fst
(bad)
mov
mov
jecxz
aas
dec
in
fwait
int3
jg
in
push
dec
jb
mov
ret
mov
adc
hlt
in
xor
xchg
std
adc
addr16
mov
stos
pop
ret
sub
fadd
jno
jecxz
inc
push
xor
pop
dec
popf
adc
jecxz
mov
mov
sub
sbb
outs
out
popa
lock
mov
cmp
inc
jnp
pop
mov
xor
jne
sub
mov
nop
sbb
cmp
cmp
push
or
out
sbb
add
faddp
in
aas
loop
and
dec
popf
or
xchg
in
out
shl
pop
shr
lea
daa
inc
jmp
sub
push
sbb
sub
call
xlat
cmp
add
push
inc
mov
cli
sbb
retf
adc
xchg
dec
ret
xor
push
push
jp
adc
pop
jb
xchg
dec
sti
es
jne
or
ins
jns
inc
scas
int
(bad)
inc
mov
test
and
mov
lds
std
daa
cmps
mov
rcr
call
(bad)
pop
mov
and
out
mov
(bad)
jmp
push
mov
add
das
sub
idiv
push
cmovb
test
adc
(bad)
ins
mov
cmp
push
add
(bad)
dec
clc
not
add
inc
push
sub
sbb
stos
push
push
pop
popf
pop
sbb
sahf
add
sti
mov
daa
icebp
dec
outs
(bad)
stc
xchg
or
stc
xchg
loope
add
ret
ror
or
jg
test
xchg
inc
mov
sahf
psllq
pusha
jl
and
popf
pop
pop
add
or
jbe
ins
adc
sbb
rol
test
cmp
jne
jle
xlat
xchg
dec
xchg
push
cmpxchg
xor
in
(bad)
rol
in
pop
xchg
retf
jle
movs
mov
shr
sbb
scas
jmp
mov
out
inc
mov
xchg
add
add
push
ret
jmp
push
clc
sbb
jnp
dec
sbb
outs
stc
mov
mov
fsub
mov
into
adc
xor
jb
jl
or
in
movs
sub
mov
aaa
jae
mov
fstp
sub
and
ret
dec
or
fisubr
lods
push
or
sbb
push
or
push
mov
ror
add
push
arpl
jecxz
ret
mov
fucom
movs
push
cs
pop
popa
sub
mov
cwde
push
fisub
les
cmps
mov
xor
(bad)
imul
pop
ins
cwde
pop
retf
call
fs
and
cwde
sbb
mov
in
adc
or
pop
pop
popf
rol
test
inc
mul
mov
in
ja
in
jle
xor
pop
mov
movs
(bad)
les
jnp
das
ret
shl
mov
sar
pop
dec
lock
lea
lds
jmp
adc
sub
mov
mov
pop
lea
jb
or
ds
js
and
xchg
and
mov
les
loope
retf
jno
mov
sub
xchg
dec
pop
mov
adc
cmp
mov
xlat
sub
mov
adc
stos
xchg
adc
fmul
fcom
add
jle
scas
(bad)
pop
cmp
out
in
popa
jecxz
mov
int
xchg
mov
xlat
pusha
pop
push
pop
xor
scas
mov
mov
cmp
fist
(bad)
mov
sbb
sub
mov
mov
test
inc
mov
popf
or
lods
mov
jecxz
jmp
(bad)
mov
call
fmulp
dec
into
in
icebp
movs
pushf
and
cmp
cmp
mov
add
jbe
mov
loope
cli
xor
xor
aaa
sub
sbb
mov
movs
or
mov
sbb
ss
js
repz
pop
and
(bad)
and
les
xchg
jne
iret
fwait
sub
adc
mov
mov
push
movs
shl
jb
cwde
inc
(bad)
mov
mov
imul
cmp
xchg
xor
stc
mov
nop
dec
push
stc
in
lds
iret
ds
and
retf
cmp
inc
or
push
lock
clc
cmp
das
into
and
mov
or
lahf
pusha
sub
inc
add
pushf
movs
(bad)
es
cld
stc
and
inc
cmp
mov
jns
addr16
dec
push
(bad)
stc
(bad)
dec
pop
loop
push
test
xchg
call
push
fmulp
(bad)
pop
pop
adc
mov
fisttp
rol
bound
repz
or
jg
inc
push
mov
shl
dec
pusha
push
dec
mov
imul
or
cmps
jl
mov
cmps
icebp
mov
inc
(bad)
into
push
test
cmp
clc
hlt
or
jmp
dec
add
push
imul
adc
test
pop
fs
cmp
js
add
shl
popf
sahf
mov
cs
and
outs
or
pushf
xchg
mov
push
push
xchg
shl
push
cmc
mov
test
movs
push
xchg
or
jle
das
jmp
xlat
mov
sahf
shl
push
push
lods
scas
popa
cmps
imul
scas
mov
stc
cmp
sub
cs
adc
inc
rol
mov
das
cwde
push
mov
fchs
ds
gs
jae
fstp
clc
sub
push
stos
imul
and
(bad)
lds
inc
imul
mov
cld
add
xlat
popf
inc
fwait
mov
sub
mov
dec
in
dec
rcr
imul
mov
out
cmc
inc
pop
(bad)
jne
mul
inc
popa
xchg
adc
cli
cmp
jle
imul
push
add
jg
nop
lock
pop
fidivr
out
and
inc
or
mov
and
mov
test
sbb
jo
or
fimul
fmul
ds
mov
xor
cmc
je
pop
mov
pop
adc
in
xor
mov
cmp
bound
ins
mov
jnp
pop
aas
js
je
xor
sahf
and
jnp
imul
adc
ret
clc
das
jg
mov
repz
loop
pop
push
jae
(bad)
mov
repz
test
inc
push
mov
pushf
jge
out
cmp
fnstenv
test
dec
add
jae
(bad)
xchg
push
aam
daa
jge
mov
ins
movs
shl
sub
(bad)
fstp
mov
shl
dec
sbb
mov
or
push
es
(bad)
sti
push
aas
push
retf
outs
mov
movs
repnz
mov
inc
lds
aam
out
shr
scas
mov
lods
in
outs
xor
lock
jmp
pop
inc
test
inc
or
cli
pushf
adc
pop
adc
mov
imul
jmp
and
out
sbb
push
fsubp
inc
adc
fisubr
sti
(bad)
out
sbb
sub
arpl
xor
xchg
jns
arpl
fdivr
movs
inc
pop
inc
clc
out
xor
bound
or
pop
dec
fldenv
sub
jo
mov
add
cli
add
adc
mov
push
ins
sbb
loopne
cmp
test
mov
ins
je
ret
add
stos
xchg
sti
jbe
cmp
je
jmp
mov
adc
and
jp
xchg
jnp
imul
jns
mulps
lock
and
ret
cld
cmps
nop
(bad)
mov
and
jne
ja
mov
outs
iret
jmp
aad
inc
popf
movs
mov
sti
ss
mov
or
push
add
inc
add
add
add
add
mov
pop
in
add
add
clc
push
add
add
adc
add
add
xor
add
movs
add
add
add
add
lahf
add
adc
mov
outs
add
add
add
inc
add
add
xchg
add
adc
add
add
add
add
add
add
add
add
in
add
adc
add
add
add
inc
add
add
add
add
fadd
add
add
add
add
add
add
add
mov
add
add
add
ja
add
add
out
add
stos
mov
add
jge
add
subps
idiv
mov
pop
int3
xchg
(bad)
xchg
jmp
imul
scas
mov
(bad)
xchg
lock
mov
sbb
sbb
jb
(bad)
fcmove
xchg
(bad)
jp
push
push
mov
inc
cmp
sbb
(bad)
xchg
jmp
imul
cmp
out
push
sub
pop
jmp
xchg
leave
movs
cmp
sbb
mov
add
adc
stc
jecxz
aas
pop
fadd
gs
(bad)
out
sub
cld
pop
js
pop
add
in
mov
dec
mov
test
jmp
jle
(bad)
stos
push
imul
mov
or
jno
push
repnz
cmp
or
push
jecxz
in
inc
sbb
das
inc
mov
ja
mul
push
gs
adc
in
and
mov
test
jmp
sub
dec
pop
(bad)
scas
idiv
inc
test
mov
cmps
ss
jb
mov
mov
push
jecxz
div
or
daa
jo
or
mov
inc
std
mov
mov
(bad)
cmps
cmp
and
mov
loope
pop
add
mov
sbb
jg
lock
jne
test
pop
outs
sbb
cld
shl
shl
mov
adc
cmps
sbb
jle
mov
xchg
add
dec
lock
xor
hlt
cmp
or
loopne
mov
xchg
leave
mov
jmp
cmp
or
mov
lds
xor
push
xchg
cdq
cs
mov
dec
pop
ret
stc
test
gs
scas
test
mov
cdq
fwait
and
and
push
dec
mov
fwait
es
fsub
jmp
pop
loope
sub
dec
add
push
pop
mov
stos
xchg
je
xor
popf
xchg
and
idiv
cld
sti
mov
pop
cmp
das
sbb
mov
add
mov
(bad)
test
out
fs
sbb
dec
mov
jle
mov
shr
jl
movs
lea
test
sbb
push
dec
loopne
xchg
push
adc
out
ins
cmp
das
cmp
inc
dec
or
push
sbb
cmp
sub
pushf
das
cmp
(bad)
push
and
out
ja
mov
cwde
(bad)
mov
mov
loope
outs
sbb
out
adc
xchg
rcr
movs
and
cmp
mov
cmp
mov
pop
scas
icebp
mov
xlat
retf
leave
cdq
xchg
push
mov
test
cmp
leave
fidivr
inc
sbb
add
mov
cmp
sahf
jb
stos
xlat
cmps
out
push
dec
rdseed
and
cmp
fwait
retf
sbb
mov
mov
data16
xchg
dec
push
push
sbb
loop
call
sar
fldenv
xor
mov
cmp
cwde
(bad)
hlt
dec
dec
mov
push
pop
out
jmp
cmps
add
push
fwait
mov
dec
xlat
xchg
out
scas
mov
or
or
pop
cli
out
pusha
pop
cdq
test
xor
mov
jl
lock
adc
aad
or
fwait
add
xchg
push
xor
ds
int3
aad
cs
retf
xlat
rcr
pop
in
sub
loope
daa
push
push
add
ror
leave
test
dec
sbb
retf
lds
addr16
pusha
push
push
(bad)
sbb
std
loope
lods
into
push
add
rcr
sbb
loop
or
inc
(bad)
lahf
fcom
or
push
shl
test
movs
mov
cmp
mov
sbb
inc
dec
adc
retf
call
mov
and
push
xchg
popf
das
mov
pop
pushf
add
mov
inc
add
mov
mov
dec
add
jb
loope
test
or
cdq
mov
xor
mov
inc
xchg
sub
xor
in
stos
int3
and
scas
dec
cmps
push
mov
cs
xchg
mov
inc
loope
and
movs
add
hlt
sub
out
mov
cmp
push
dec
adc
daa
lods
jmp
rcl
xor
jns
das
fistp
jne
xchg
stos
mov
test
cwde
push
sub
sbb
retf
jb
jb
sahf
out
add
dec
ins
inc
inc
push
idiv
mov
popf
mov
test
ficom
mul
sub
mov
aad
xor
xor
mov
loop
push
movs
idiv
dec
and
popa
lods
cmp
aam
add
mov
int3
clc
cld
push
out
push
pop
scas
bts
mov
cmp
or
test
fwait
push
call
push
pop
or
or
out
call
(bad)
and
mov
ret
cs
clc
sti
pop
mov
scas
mov
jno
outs
sbb
mov
adc
push
aas
leave
inc
stos
outs
aam
fwait
jb
dec
mov
inc
xchg
pushf
sahf
xchg
dec
rol
movs
retf
adc
js
jge
or
pop
xor
xor
sub
pop
dec
push
inc
loopne
push
jg
adc
pop
ss
and
inc
ins
mov
call
cli
dec
rcr
popa
iret
jl
into
mov
je
call
dec
dec
push
cwde
pop
arpl
lds
dec
mul
retf
movs
retf
mov
push
jno
inc
fcom
fisub
retf
pop
inc
inc
dec
sbb
inc
mov
bound
cld
mov
jne
xchg
mov
and
fbstp
sbb
test
fidiv
shl
cwde
out
pop
push
pop
sbb
cmp
mov
cmps
mov
hlt
xchg
outs
sar
dec
cdq
bswap
jge
sbb
mov
add
inc
jbe
je
sub
jbe
in
and
out
mov
jno
test
lock
mov
mov
idiv
jae
push
inc
clc
sub
cmp
xchg
(bad)
push
sbb
das
jp
stos
or
std
cdq
dec
(bad)
mov
inc
dec
jnp
xor
push
jg
mov
inc
loop
jl
jmp
inc
dec
jle
jle
out
push
(bad)
cmp
xor
push
icebp
(bad)
dec
push
jae
inc
pop
cs
aas
(bad)
loopne
cmp
retf
(bad)
mov
mov
call
in
jp
data16
add
jmp
jge
xor
xchg
scas
and
adc
fstp
xchg
out
mov
jle
sub
imul
jae
ret
push
mov
test
sbb
mov
cmp
aas
xchg
xchg
add
xchg
cmp
pop
ins
cmc
in
xor
pop
xor
or
cmps
jnp
out
xchg
repnz
hlt
inc
push
js
jo
push
sub
cmps
sub
inc
movs
call
sub
mov
ds
add
iret
inc
xor
(bad)
shl
mov
push
addr16
loop
fnsave
arpl
mov
shr
xor
aam
cmp
mov
adc
scas
inc
xor
jb
out
xlat
imul
jmp
leave
push
add
outs
rcr
sbb
into
jne
jnp
sub
or
push
xlat
fidiv
adc
mov
hlt
mov
sbb
in
sub
mov
retf
enter
movs
jno
repnz
xchg
iret
shl
daa
in
fwait
xor
push
or
add
ret
pushf
(bad)
inc
test
or
loop
push
mov
mov
sub
ret
fisttp
xor
mov
adc
xor
xchg
sub
mov
mov
fadd
jmp
les
inc
mov
jnp
xchg
in
adc
xor
jmp
das
pop
rol
lods
sub
fld
retf
xor
mov
push
call
xchg
je
mov
adc
int3
push
call
xor
call
pop
inc
push
cli
or
pop
cdq
jl
(bad)
xor
cmp
aaa
bound
test
push
push
aad
rsqrtps
test
les
sti
push
mov
xchg
pushf
outs
ror
add
cs
mov
ins
mov
sbb
ins
mov
jns
test
adc
cmp
outs
jnp
fwait
dec
imul
rcr
jbe
lahf
or
push
iret
pop
inc
pop
add
shr
push
and
sti
fidiv
fwait
sub
xchg
jle
shl
ja
call
jo
daa
ss
or
pop
cli
mov
aas
xchg
retf
fmul
mov
scas
das
out
pusha
and
arpl
mov
neg
mov
xor
das
fdivr
outs
xor
loopne
stos
xchg
push
and
dec
fxch
jb
fsubr
fcmovb
jo
loop
imul
mov
xchg
jmp
popf
call
inc
jbe
jl
enter
cwde
pop
pop
and
aad
dec
and
outs
(bad)
lds
retf
bound
sahf
sub
inc
push
dec
sub
mov
cli
test
jbe
cmp
les
cmc
mov
dec
add
test
out
jl
pop
pop
cs
bound
pop
mov
fild
jb
cmp
cwde
pop
adc
or
shl
into
das
jbe
mov
push
jne
enter
aad
or
mov
xchg
js
je
dec
xor
xor
and
or
adc
mov
inc
rcr
sbb
into
jle
(bad)
aaa
out
sahf
or
and
repz
inc
leave
js
push
icebp
cmp
scas
in
dec
dec
jmp
mov
mov
clc
xor
iret
adc
es
push
mov
ins
call
add
adc
dec
add
icebp
push
ret
or
xor
xchg
push
pop
sub
push
xchg
test
pop
test
std
xlat
mov
inc
jle
lock
add
pushf
jo
jmp
or
lea
xchg
pop
adc
call
sub
ret
into
out
sbb
push
xor
out
or
es
sbb
push
iret
test
(bad)
jmp
adc
imul
jmp
leave
push
add
outs
rcr
out
push
mov
outs
adc
adc
push
and
push
rcr
lea
scas
cmp
inc
lods
call
sub
pop
imul
je
push
lods
xchg
push
cdq
into
dec
jae
adc
nop
scas
xchg
outs
fcom
push
pop
push
cdq
inc
stos
idiv
not
mov
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
cmp
outs
and
std
sub
clc
(bad)
(bad)
adc
pop
shl
mov
pop
scas
test
ss
push
xchg
and
inc
(bad)
int3
mov
pop
adc
call
push
pop
jbe
in
faddp
shl
inc
stc
scas
ss
ins
jle
jge
xchg
fcom
cli
push
pop
icebp
pop
ja
and
cmc
mov
jecxz
mov
mov
test
mov
dec
sub
mov
mov
and
inc
xchg
fisub
lahf
push
inc
push
pop
dec
popa
or
scas
pop
retf
and
lahf
in
outs
dec
xor
inc
stos
ins
or
push
jmp
aam
dec
inc
jge
mov
cmc
into
pop
ss
gs
retf
cli
jno
data16
mov
jg
xchg
xchg
add
mov
sbb
ja
jp
repnz
inc
xchg
imul
je
test
add
out
adc
inc
sar
scas
mov
mov
loopne
mov
fcmovnbe
inc
mov
xor
(bad)
jmp
adc
call
outs
pusha
aas
dec
ds
cld
jg
push
neg
adc
jge
scas
add
xor
adc
sbb
sub
addr16
inc
pop
dec
inc
cmp
iret
mov
or
or
aad
dec
sub
mov
cmp
dec
add
jp
xchg
jo
mov
fst
arpl
leave
and
sti
shl
sar
pushf
or
outs
mov
imul
sbb
jmp
(bad)
pop
sbb
fadd
addr16
lock
jmp
add
dec
mov
das
inc
scas
pop
mov
add
outs
ror
push
inc
mov
mov
cmp
nop
(bad)
push
xchg
cmps
cmps
fwait
xor
cwde
adc
mov
arpl
in
and
mov
mov
lea
fs
or
scas
mov
cs
mov
mov
dec
inc
iret
mov
sbb
jne
jne
daa
add
(bad)
cmp
pop
fmul
mov
leave
or
jne
inc
jmp
push
sahf
(bad)
dec
cmc
bound
inc
adc
jl
mov
dec
lods
loope
shl
add
and
dec
add
scas
cmp
lds
or
stc
mov
ret
imul
jns
sub
es
mov
sbb
push
jno
push
gs
push
clc
dec
loopne
test
mov
cmps
enter
stos
pop
lods
mov
pop
and
adc
mov
add
std
lods
loopne
out
in
or
or
inc
leave
mov
xchg
call
(bad)
push
lea
into
jbe
sub
lods
daa
sar
daa
in
scas
cmp
pop
iret
push
lock
push
test
xchg
fild
xchg
fincstp
sub
pushf
mov
cmp
jecxz
adc
in
gs
movs
jge
sti
call
adc
mov
hlt
das
daa
nop
ret
retf
(bad)
mov
xchg
test
lods
(bad)
pop
loop
pop
mov
fild
xchg
mov
fwait
cmp
dec
or
lahf
imul
pop
fbld
rcl
inc
mov
jno
test
sub
mov
call
fidivr
pop
add
inc
or
enter
lods
std
dec
mov
js
ds
push
xchg
in
add
cmp
daa
pop
dec
fsubr
popf
and
cmp
rcr
add
add
sbb
push
or
cmp
in
mov
dec
pop
pop
dec
inc
dec
jns
cdq
sbb
pop
cwde
aam
mov
jo
inc
ins
call
pop
dec
sbb
cmp
sub
mov
es
jecxz
xor
fmul
push
pushf
call
lods
xlat
ins
inc
jb
jg
inc
xchg
aas
mov
inc
cmc
jmp
icebp
xchg
push
jb
ss
hlt
xchg
ret
(bad)
dec
addr16
pusha
mov
test
in
inc
adc
int
lahf
jl
mov
retf
dec
lock
jmp
pusha
add
scas
xchg
cli
cmp
or
mov
xor
pop
imul
jbe
or
dec
fs
or
or
fadd
sub
jl
cmp
jmp
mov
cld
dec
(bad)
sub
mov
lods
stos
push
push
push
xor
sahf
inc
xchg
pop
paddsb
xchg
pop
repz
stos
jb
inc
xchg
fldenv
inc
shl
and
lea
mov
fs
addr16
ret
xchg
push
xchg
movs
mov
ins
mov
bnd
jp
pop
and
xor
test
outs
jmp
dec
scas
add
mov
scas
xor
daa
frstor
daa
xchg
add
loop
mov
push
in
not
mov
push
pop
(bad)
cld
(bad)
pop
mov
xchg
sbb
js
push
and
xor
aaa
das
aad
test
cmp
xchg
mov
xlat
gs
(bad)
ja
mov
cmc
ins
adc
cmps
(bad)
jmp
xor
daa
pop
(bad)
fld
sub
jne
adc
cmps
mov
(bad)
loope
cmps
and
pop
fcom
or
iret
clc
outs
jbe
mov
sar
mov
(bad)
xor
push
jns
lahf
fcom
and
test
loop
in
dec
xor
dec
dec
movs
jmp
clc
sub
xor
jmp
in
mov
dec
out
sahf
push
(bad)
mov
std
push
add
xchg
sub
enter
push
mov
xlat
fxtract
sub
cs
test
mov
lahf
neg
xchg
adc
ja
sub
jmp
xchg
rcl
retf
dec
fist
dec
push
call
js
dec
in
push
aaa
js
mov
hlt
imul
mov
ins
je
(bad)
mov
dec
inc
mov
dec
retf
inc
ds
push
(bad)
push
inc
or
test
test
movs
in
out
or
push
push
fisttp
pop
and
inc
dec
in
mov
push
adc
inc
xor
cld
repnz
xchg
leave
call
repnz
jge
pop
pop
les
xor
push
jae
cmps
mov
xchg
mov
les
imul
idiv
les
les
sbb
hlt
adc
mov
pop
push
xchg
or
adc
add
jmp
or
scas
les
mov
pop
mov
inc
pop
test
add
leave
mov
add
shl
cmp
mov
les
out
lods
pop
call
(bad)
les
and
dec
int
dec
and
sbb
xchg
push
dec
sub
inc
sbb
es
retf
aam
cmc
pop
ss
xor
xor
xchg
(bad)
dec
push
(bad)
(bad)
dec
outs
stc
sub
cld
pushf
push
call
xchg
cmp
clc
or
mov
mov
fsub
mov
scas
cdq
out
mov
jno
add
jne
loopne
adc
clc
movs
or
mov
sub
aas
ret
sub
addr16
sub
outs
lea
adc
push
int
popf
sbb
ror
and
(bad)
sbb
or
push
xor
xchg
mov
int3
int3
sbb
dec
xchg
test
dec
outs
dec
(bad)
cmp
das
jno
fcmovnu
cs
popa
repz
aas
ret
push
fndisi(8087
and
xlat
gs
jp
push
xchg
loop
iret
cmp
in
or
jbe
test
mov
pop
inc
in
jle
cmp
xchg
jp
mov
out
adc
adc
mov
push
dec
call
jge
loop
rol
test
xchg
cmps
inc
jbe
jl
push
les
cmp
jns
ret
mov
mov
jne
std
sbb
add
daa
daa
(bad)
retf
and
in
jnp
cmc
repnz
or
fxch
sub
xor
xor
pushf
add
xor
inc
dec
inc
mov
loop
lea
lahf
and
rcr
daa
jbe
shl
and
xor
call
cwde
fsub
test
inc
jo
sbb
loope
cmp
stos
adc
cli
data16
mov
ror
cmp
mov
or
int
adc
enter
idiv
retf
bound
xor
data16
in
fild
jns
aas
(bad)
push
(bad)
sbb
mov
adc
and
push
imul
mov
mov
cmps
ds
repz
jb
add
rcr
push
push
cs
in
nop
inc
and
test
pop
xchg
dec
call
shl
clc
mov
pop
test
bound
sub
div
sbb
xor
repz
dec
add
lods
xor
mov
or
jl
in
stos
push
jb
in
std
cmps
les
xchg
add
test
and
retf
inc
mov
pop
enter
mov
add
cmp
loop
push
inc
test
popf
out
inc
ror
scas
add
or
jbe
shl
push
fmul
inc
jmp
inc
push
test
jo
cwde
add
adc
fild
fisubr
stc
lods
cdq
bound
iret
cdq
inc
popa
jge
jmp
or
jae
gs
mov
cwde
stos
arpl
sub
mov
(bad)
adc
and
in
cmps
xor
out
pop
ffree
arpl
jno
jmp
xor
fisub
popa
mov
lods
mul
push
ds
outs
xor
lods
iret
pop
mov
push
push
imul
in
jae
jmp
sub
add
jmp
sar
(bad)
rcl
lods
ret
jp
retf
into
cli
or
ficomp
mov
add
mov
xchg
jae
cmp
nop
aaa
pop
sub
in
push
psubsb
pop
xchg
fld
cmp
shl
aas
jl
add
mov
emms
mov
ss
inc
push
addr16
in
add
js
xchg
sub
adc
inc
inc
xlat
jge
fwait
xchg
cmp
aaa
and
adc
xchg
jno
push
lea
jl
(bad)
or
mov
add
pop
nop
aas
sub
sbb
jecxz
test
sbb
push
push
push
xlat
out
add
or
pop
inc
ds
pop
xchg
add
dec
mov
jge
aad
inc
loop
push
or
jp
out
dec
popa
vmovshdup
sub
sub
and
inc
inc
pushf
into
inc
sbb
cmps
shl
mov
loop
ins
popf
add
add
add
jg
add
loopne
add
mov
movs
add
add
add
(bad)
pushf
add
adc
add
add
add
add
add
nop
add
add
add
add
add
add
add
dec
push
jmp
add
add
mov
and
add
add
add
add
add
add
cmp
into
neg
pop
jl
xlat
pop
push
jae
cmc
lods
data16
(bad)
retf
pop
or
xor
out
inc
push
mov
cmp
or
dec
loopne
call
or
jle
mov
fnstsw
push
cs
stos
inc
mov
nop
arpl
mov
mov
jmp
add
mov
and
arpl
sub
cmc
jne
mov
into
dec
lea
movs
scas
xor
inc
pop
dec
iret
jae
or
fcomp
jns
xor
mov
add
daa
push
stc
and
nop
div
jnp
adc
sbb
mov
cli
out
cmp
sub
and
je
out
mov
cli
(bad)
or
jo
sub
jns
imul
scas
fisttp
jb
clc
aaa
pop
mov
cmp
sub
mov
aad
add
and
or
and
iret
adc
cmps
idiv
mov
sub
repnz
cmps
je
sbb
pushf
adc
mov
gs
and
dec
mov
xlat
push
in
inc
inc
lods
stos
pop
inc
push
sub
xchg
and
inc
outs
and
xchg
inc
sbb
and
pop
cmp
mov
mov
stos
mov
out
add
aas
inc
ror
and
and
jne
and
int3
xchg
neg
call
sbb
or
(bad)
jmp
stos
push
stc
mov
(bad)
call
aam
xor
sbb
and
cmp
les
mov
add
fcomp
push
fwait
mov
data16
repnz
sub
sti
xor
xor
mov
stos
mov
sbb
loopne
sar
jnp
mov
xor
push
and
mov
jle
adc
mov
and
rcl
popa
dec
not
xchg
retf
iret
test
cmp
in
sub
stos
xchg
inc
test
jmp
hlt
movs
xchg
adc
(bad)
clc
lea
jbe
cmp
xor
xchg
mov
mov
xchg
(bad)
test
inc
retf
or
cmps
mov
rcl
jo
add
loopne
pop
cwde
test
cmps
test
daa
mov
or
sbb
dec
imul
xor
stos
pop
fmul
loope
add
leave
jp
call
dec
not
sub
cmp
pop
xor
mov
popf
push
daa
xlat
push
xor
sbb
inc
xchg
lds
mov
cli
cmp
sar
loopne
(bad)
shl
lods
cdq
adc
aas
xchg
mov
mov
sub
in
cmp
enter
ds
fdivr
clc
rol
xor
sbb
mov
shl
outs
(bad)
push
dec
mov
sbb
jp
jb
out
or
mov
cmp
lahf
clc
stc
mov
sar
std
and
jns
xchg
adc
xbegin
clc
xchg
jnp
aam
clc
repz
ins
call
mov
popa
push
not
fst
inc
or
(bad)
outs
lods
into
jbe
push
stc
rcl
cmps
aad
mov
push
and
test
(bad)
movzx
mov
test
jns
dec
sbb
ins
std
ins
ss
pop
popa
scas
shl
jge
mov
ds
sub
shl
je
jae
pop
xchg
dec
inc
inc
jmp
xor
adc
add
retf
mov
xchg
clc
ret
inc
out
nop
pop
mov
jae
xor
cdq
cs
mov
clc
sahf
adc
inc
or
dec
test
jmp
cmps
xchg
inc
xchg
mov
sahf
cmps
out
movs
and
ins
push
pop
out
jmp
jg
adc
cmc
(bad)
(bad)
push
or
in
sbb
or
mov
sbb
jae
cs
jge
mov
add
cmp
cvtdq2ps
mov
(bad)
mov
sub
mov
vxorps
mov
popa
ficomp
jb
in
xor
or
dec
loope
sub
ds
pop
dec
mov
push
sar
xlat
leave
adc
pop
pop
sub
sbb
retf
cmp
fisubr
cld
je
js
ret
mov
pop
cmp
fstp
imul
and
rol
xor
sti
cmp
pop
inc
stos
into
push
imul
ret
leave
outs
int
push
lods
mov
enter
sub
aam
jp
pop
inc
and
push
or
add
adc
fwait
jmp
stc
mov
mov
jle
nop
push
shl
lahf
ficomp
mov
out
test
jge
fisubr
adc
movs
mov
stc
fsubr
pop
cld
push
and
lods
scas
popf
adc
xor
add
(bad)
mov
mov
xor
ret
xor
dec
ss
jno
mov
stos
popf
inc
call
xchg
iret
movs
push
bound
or
and
ss
push
sub
fsub
mov
mov
sub
call
aas
xor
out
mov
lahf
test
ret
loop
cmp
call
push
inc
test
add
xor
pop
outs
mov
test
jmp
pop
inc
dec
(bad)
pop
cmp
xlat
dec
(bad)
cwde
pop
leave
retf
stos
push
push
sub
cmps
xor
pop
jp
cmp
lods
xor
mov
dec
fcmovnb
fdivrp
jl
arpl
sub
(bad)
and
jb
cmp
int
sbb
fist
sbb
push
(bad)
sub
in
arpl
das
sbb
(bad)
out
mov
fwait
sti
xor
in
dec
mov
fcomp
adc
jg
test
std
sbb
imul
dec
mov
adc
jb
adc
stc
ss
jmp
into
pushaw
add
mov
sub
push
movs
sub
sbb
add
mov
leave
ret
push
mov
fdivr
sub
or
(bad)
jnp
mov
sub
stc
dec
test
ds
mov
rcr
push
icebp
call
test
jge
or
hlt
sub
jbe
test
fdiv
icebp
sub
sbb
xor
jmp
shl
mov
push
cwde
rol
adc
push
hlt
iret
inc
mov
(bad)
mov
add
in
adc
jmp
sbb
(bad)
pop
stc
pop
push
fs
push
add
cmps
mov
rcr
add
shl
call
addr16
bound
dec
leave
jbe
out
cwde
ret
mov
mov
(bad)
sbb
scas
mov
les
cmp
scas
enter
or
ins
retf
cmp
xchg
pop
sahf
movs
mov
pushf
test
xlat
xor
xlat
adc
ds
aad
repnz
xchg
sbb
icebp
push
add
sub
ffree
stos
sbb
jno
jns
mov
cmp
(bad)
dec
sbb
dec
inc
je
cmp
xchg
outs
mov
cmp
dec
jno
sbb
cmp
outs
arpl
dec
sbb
out
inc
mov
mov
pusha
add
xchg
jns
test
sahf
outs
mov
pushf
(bad)
mov
jns
sub
or
or
jmp
inc
adc
icebp
mov
pop
lahf
jnp
sti
lahf
push
into
sub
popa
pop
jl
mov
xor
and
jae
push
lds
jb
mov
dec
mov
(bad)
jne
adc
jb
scas
or
outs
popf
xchg
int
or
pushf
mov
lods
or
ins
adc
lods
nop
inc
lea
fcmovu
jecxz
xchg
inc
int3
outs
imul
xchg
daa
neg
dec
scas
pop
adc
inc
pop
ss
pop
movs
jne
add
push
pop
(bad)
in
sub
jnp
les
mov
cmc
movs
sub
dec
mov
mov
xchg
and
sub
mov
outs
stc
mov
lods
adc
push
iret
sbb
mov
cmp
mov
jmp
xchg
ja
pop
pop
pushf
push
mov
not
mov
loop
push
push
jle
mov
loope
enter
mov
push
and
mov
ss
xchg
pusha
adc
dec
sub
ins
aam
sbb
adc
mov
jbe
ret
or
add
mov
xor
jmp
sbb
pop
xor
(bad)
aaa
daa
xchg
pop
jns
add
inc
mov
pop
cmp
jns
push
je
ja
sbb
sbb
lods
xchg
jmp
jle
pop
and
push
xor
inc
scas
(bad)
xchg
adc
adc
push
test
mov
out
test
mov
std
mov
add
lea
sub
ret
addr16
mov
pop
mov
clc
push
(bad)
fcmove
retf
enter
cmp
cmp
pop
and
add
add
mov
mov
data16
dec
or
xchg
ret
and
fadd
mov
xor
(bad)
rcr
mov
gs
sub
lds
jno
sub
jo
and
sbb
icebp
(bad)
mov
movs
enter
and
sbb
mov
adc
inc
frstor
(bad)
out
bound
dec
pop
imul
popf
xlat
test
pop
or
inc
mov
adc
rcr
add
jb
inc
mov
sahf
or
pop
not
jnp
test
pushf
mov
xor
or
sub
sbb
adc
ret
into
pop
cmp
cmps
sub
xor
mov
fisubr
movs
js
push
mov
test
fstp
mov
nop
push
movs
aam
neg
outs
movs
mov
inc
in
int3
inc
loope
mov
inc
cli
push
pop
fidiv
js
cmps
inc
ja
aad
mov
std
lods
ficom
pop
jecxz
and
pop
pop
repz
mov
fisttp
mov
push
xor
fild
out
ins
ficom
push
addr16
push
movs
sar
je
sti
push
dec
and
out
bound
pop
fnstsw
xchg
outs
cli
stos
xchg
jns
es
pop
mov
test
stos
cmp
or
cmp
in
fsub
mov
inc
jg
repz
mov
aas
add
retf
(bad)
cmp
nop
sbb
push
xor
fcom
(bad)
aaa
daa
cli
fcompp
jle
sbb
add
or
add
movs
int
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
enter
add
add
add
add
out
add
add
test
movs
add
fld
add
push
add
xor
daa
cmovae
pop
repnz
ja
outs
fucom
outs
rcr
ja
das
rcl
jb
xor
out
ins
or
inc
jp
jo
mul
push
movs
cmps
scas
rol
xchg
cs
neg
lods
or
lods
test
jno
das
push
xchg
sub
enter
inc
xor
mov
push
retf
cwde
iret
test
push
jae
call
out
fadd
imul
movs
and
std
mov
jl
loope
cmp
pop
fmul
push
fimul
pusha
sbb
dec
sbb
mov
xor
adc
inc
xchg
dec
sbb
inc
cmps
jb
cmp
int3
(bad)
dec
ret
and
push
int3
adc
inc
imul
test
shl
mov
ror
inc
add
repnz
mov
push
mov
cwde
sbb
jmp
icebp
loope
inc
enter
add
retf
aas
jno
(bad)
popa
ficomp
data16
stos
out
and
(bad)
(bad)
and
jle
int3
jmp
retf
xor
mov
cmp
or
call
scas
(bad)
cmp
repnz
inc
cmp
xchg
or
push
xlat
in
pop
(bad)
fldenv
add
inc
pushf
cdq
push
test
xchg
and
push
fadd
or
xor
mov
sub
imul
adc
test
push
cmp
imul
lods
fidivr
ss
movs
fwait
mov
test
adc
adc
repnz
stos
fs
aaa
es
fsin
cwde
xchg
rcr
and
mov
lds
test
mov
nop
mov
loopne
mov
scas
pop
pop
(bad)
push
pop
outs
push
leave
xchg
jnp
scas
push
aam
jg
xor
jge
dec
jmp
ins
xchg
or
push
fdivr
push
mov
sahf
and
xchg
mov
loope
sahf
out
sub
enter
icebp
outs
push
dec
or
jge
mov
pop
aam
cmp
call
xchg
jbe
or
push
test
dec
cmp
pushf
fst
xor
push
loopne
dec
xor
les
jno
aas
add
mov
or
dec
cmp
jne
enter
and
iret
push
mov
sub
cmp
in
add
inc
nop
fcomip
shr
mov
inc
(bad)
push
dec
and
jno
add
pop
and
or
movs
fdiv
mov
inc
adc
aam
std
and
bound
xchg
push
inc
mov
outs
shr
test
(bad)
mov
repz
mov
pushf
cwde
dec
adc
mov
xor
int
sbb
lods
aas
fidivr
sub
rol
xchg
push
or
add
das
xchg
fidivr
inc
popa
test
pop
add
sub
popf
pusha
out
iret
pop
adc
std
lods
cmps
pop
xor
ret
loop
and
loop
lods
hlt
sub
fwait
enter
test
pusha
jnp
mov
cmp
pop
add
xor
stos
add
xor
lock
int
(bad)
pop
ins
popf
popa
fdivr
xchg
adc
adc
into
cmps
in
sub
in
xchg
push
dec
xchg
push
and
adc
fmul
out
daa
xchg
sbb
add
pop
out
movs
ds
jmp
inc
mov
icebp
add
mov
or
adc
xor
std
mov
jg
cmps
mov
mov
inc
jmp
jne
mov
pop
mov
stos
dec
call
xor
data16
xchg
fstp
add
mov
mov
mov
aaa
fistp
pop
xchg
mov
test
std
push
cmp
inc
out
(bad)
in
inc
pop
push
dec
and
xchg
mov
in
and
and
sbb
clc
outs
int3
sti
aas
shl
or
lods
add
int
inc
or
xor
xor
shr
xchg
hlt
and
mov
ds
pop
mov
aas
leave
pop
jbe
cmp
sbb
jg
rcl
std
add
sub
mov
pcmpgtw
call
cmp
test
call
fs
int3
cmp
and
xchg
push
das
mov
sbb
jmp
and
repz
popf
lods
(bad)
pop
push
cs
fisttp
ds
cmp
sub
dec
js
lahf
fdiv
bound
shl
push
and
fld
(bad)
pop
jl
std
dec
inc
test
iret
aaa
dec
or
adc
dec
sti
fs
or
mov
inc
retf
add
int
cld
xchg
mov
jle
xchg
not
aad
mov
int
mov
imul
pop
ja
push
(bad)
(bad)
das
fadd
fimul
(bad)
pop
jne
cs
jno
clc
int
(bad)
out
fiadd
ins
fistp
fs
xchg
jno
call
pop
fcmovnbe
nop
retf
fwait
cmp
out
jp
and
sbb
xor
push
pop
jb
push
add
movs
test
mov
jp
jp
add
add
movs
inc
or
pop
xor
pop
add
in
push
scas
add
xor
pop
icebp
jo
(bad)
div
pop
(bad)
pop
pop
dec
xor
ret
inc
and
pop
xchg
sbb
jecxz
jns
js
xor
inc
mov
or
pop
cmps
xchg
adc
ret
int3
xor
xchg
cdq
push
jp
jmp
ins
push
fstp
jle
test
out
mov
jo
sbb
scas
sar
repnz
add
outs
aam
pusha
in
inc
das
inc
retf
xor
and
xor
lds
jp
stc
sub
jo
loope
mov
adc
ins
sub
ja
and
adc
cmps
imul
in
mov
or
mov
loop
add
inc
inc
cmp
rcl
ret
sub
shl
sub
nop
mov
sbb
gs
shl
lea
loop
jecxz
sbb
mov
(bad)
and
aas
fdiv
add
imul
clc
xchg
aaa
mov
(bad)
ret
cmp
into
or
mov
xor
or
fsubr
dec
(bad)
hlt
ds
test
sbb
cwde
repnz
mov
sbb
pusha
mov
out
test
stc
outs
dec
push
ss
mov
add
mov
jnp
jl
outs
mov
std
push
adc
sti
inc
fcom
adc
fwait
int3
mov
sbb
into
int3
jb
ror
out
test
jbe
cmps
push
xchg
xchg
retf
retf
icebp
xchg
sbb
mov
leave
sbb
push
into
ja
neg
sbb
rcl
cmp
aaa
jmp
cmp
test
fcmovu
and
dec
add
into
pop
stos
ret
adc
xlat
mov
inc
ds
adc
inc
jne
cmp
rcl
mov
push
(bad)
mov
std
(bad)
dec
cmp
sub
test
lods
jnp
xchg
mov
sti
xchg
push
in
jo
aas
adc
push
movnti
push
dec
aas
outs
pop
gs
pop
pushf
mov
aaa
or
xchg
scas
mov
dec
push
mov
popf
mov
mov
loop
dec
pop
shl
adc
neg
or
lods
xor
pusha
cmc
stos
pushf
int3
inc
sbb
ins
inc
aas
ss
mov
stos
xchg
mov
sbb
mov
int
push
scas
and
mov
out
mov
fldenv
clc
(bad)
sub
fimul
in
xchg
movd
mov
jno
pop
(bad)
aam
and
lods
mov
xor
xchg
add
call
retf
ins
pop
lods
dec
mov
xchg
jecxz
rcl
jp
cs
ret
dec
xchg
cld
enter
sbb
ror
test
int3
xchg
rcr
sub
jae
out
sbb
lea
inc
das
mov
out
imul
aam
into
out
mov
mov
jge
(bad)
sbb
movs
dec
pop
mov
or
clc
add
cwde
enter
xchg
xor
rol
mov
mov
mov
and
imul
mov
cmp
xchg
jecxz
fwait
pusha
push
(bad)
xchg
pop
fiadd
jge
gs
jo
sub
cmp
sub
sti
jge
add
mov
jmp
lods
jbe
inc
mov
and
pop
or
mov
dec
int
call
push
xor
out
push
imul
mov
sub
jge
push
(bad)
pop
ss
or
dec
loop
cmp
daa
cwde
out
sub
sub
jle
push
aaa
(bad)
xor
sbb
or
test
sbb
int
cmp
les
mov
fimul
out
ss
cmp
pop
adc
inc
scas
outs
ror
xor
ss
push
push
dec
xchg
add
jo
psraw
test
cdq
cwde
mov
cmp
(bad)
adc
jmp
pop
push
mov
dec
ror
ja
test
in
or
(bad)
xor
js
(bad)
dec
inc
shl
adc
jb
fstp
in
or
mov
push
sub
pop
retf
and
mov
jmp
cmp
mov
iret
in
xchg
add
xchg
aad
pop
out
pop
loopne
or
imul
pop
mov
call
dec
dec
xchg
es
stos
outs
mov
loopne
gs
std
mov
xchg
push
dec
jnp
lods
enter
mov
mov
push
call
pop
inc
loope
rcr
(bad)
xor
das
in
out
mov
ds
push
cmp
jl
pusha
add
adc
out
and
nop
jge
mov
sti
push
daa
lea
aam
(bad)
sar
cmp
popf
jo
jmp
xor
outs
push
fidiv
pop
int
outs
jmp
arpl
lock
ret
inc
jp
push
push
arpl
and
imul
or
clc
mov
mov
aas
rcl
xchg
push
aas
push
ss
jge
das
mov
lock
and
js
mov
shl
xor
inc
stc
xchg
sbb
in
jno
and
push
jo
stos
into
popa
xchg
add
add
xor
add
add
out
add
add
xor
push
add
cmp
add
das
add
add
add
pushf
clc
add
add
jecxz
das
jmp
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
daa
sbb
add
mov
add
call
add
mov
add
dec
push
mov
sub
test
mov
mov
sbb
ret
repz
leave
xchg
retf
xchg
cs
sbb
push
push
xchg
repnz
aam
sti
out
mov
enter
adc
inc
add
xchg
dec
cwde
stc
clc
fldenv
add
mov
loope
mov
dec
(bad)
push
pushf
dec
(bad)
stc
ins
mov
cmc
cmc
stos
mov
(bad)
xchg
cwde
les
xor
or
pop
sub
adc
sub
shrd
sbb
lods
xchg
js
inc
fdiv
sahf
push
sar
jae
ss
add
outs
jmp
mov
(bad)
push
repnz
sbb
push
mov
mov
data16
std
jmp
out
inc
pop
mov
and
mov
xchg
mov
enter
sub
cmps
mov
in
(bad)
pop
aad
adc
lods
dec
mov
test
gs
cmp
iret
and
pushf
lods
aam
fbld
add
push
and
daa
nop
jl
xor
pop
jne
lahf
leave
sub
push
xor
cwde
leave
in
adc
dec
loop
aaa
and
push
jp
ja
int
out
adc
sub
inc
and
fcmovne
mov
mov
cmp
imul
mov
arpl
iret
jnp
mov
add
repz
dec
(bad)
int3
in
cmp
push
movs
jo
enter
ds
pop
jnp
ds
lds
pop
sub
scas
push
add
xor
lods
les
or
push
lods
ds
sbb
adc
js
sbb
sbb
jne
sub
or
ret
adc
shl
rcl
fs
push
xor
add
mov
jno
xor
mov
add
and
cmp
test
cli
jl
inc
jl
jae
lods
cmp
mov
lods
mov
dec
cmp
scas
sub
nop
cli
sub
loop
push
cmc
cmp
cmps
and
mov
loopne
test
sar
push
inc
inc
ficomp
test
mov
aam
mov
in
pop
jge
sbb
jo
ficom
push
retf
int
test
cmp
outs
jmp
into
cli
aad
mov
pop
jg
and
adc
jne
or
mov
pop
push
js
xchg
add
mov
dec
movs
push
push
movs
xchg
push
jns
mov
(bad)
mov
aaa
mov
gs
adc
pop
and
scas
lea
mov
jnp
popa
push
ins
lahf
xor
pusha
sbb
in
sbb
push
sahf
mov
xchg
mov
xor
pop
es
pop
bound
adc
int
push
sub
push
movs
and
sub
(bad)
pushf
arpl
je
sub
add
mov
xor
mov
or
addr16
and
dec
loop
xchg
xor
pop
mov
aaa
dec
leave
pop
mov
fldenv
popf
or
dec
lahf
or
repz
push
push
out
inc
retf
into
dec
jecxz
jns
shl
test
or
jle
inc
adc
cwde
pop
push
jo
cmps
imul
xor
es
fcomp
and
push
cdq
scas
ret
test
xchg
mov
js
cmps
xchg
cli
stos
push
bnd
icebp
add
aad
ror
cs
dec
movs
pop
shr
cmps
xor
sbb
cs
mov
dec
sbb
aas
cmp
cwde
cmc
stos
jmp
push
pop
loopne
cmp
inc
lds
popf
cs
jns
in
int3
push
dec
lods
push
mov
dec
adc
fstp
sub
imul
aaa
pop
xchg
mov
dec
sti
inc
cld
sbb
scas
dec
lods
push
bound
mov
mov
adc
pop
push
popf
int3
cmc
cmp
stos
aam
rcr
xor
mov
jge
pop
mov
mov
add
xor
test
mov
sub
arpl
jns
loope
inc
xor
xchg
dec
mov
push
popa
les
and
inc
jns
sub
shl
cmps
push
arpl
cmp
jmp
xchg
push
pop
adc
and
mov
jo
sbb
jns
cmp
fidiv
hlt
push
push
rcl
mov
mov
loopne
adc
or
in
(bad)
loope
pop
scas
xchg
in
(bad)
iret
fxch
push
sbb
cmp
shl
ds
cmp
push
lock
lock
jmp
pop
aad
retf
ins
push
adc
add
inc
jo
mov
jl
inc
loop
not
and
jecxz
clc
(bad)
fisttp
xchg
ror
in
rol
push
mov
call
aaa
jmp
mov
cwde
jns
cmp
ficomp
adc
cmp
xchg
popf
jp
shl
jns
test
leave
pop
adc
mov
mov
loope
sub
add
sahf
fcomp
or
addr16
pop
mov
or
pop
xor
sbb
ficom
cmp
aam
fstp
cmp
xchg
lock
mov
pusha
mov
icebp
dec
xor
jno
outs
xchg
add
ret
mov
call
fcomi
rcl
inc
pop
test
mov
jle
fldcw
add
std
bound
icebp
pop
and
hlt
dec
pop
lds
outs
mov
xchg
and
std
sar
push
inc
mov
ror
scas
sti
and
jmp
aas
sub
push
xchg
sub
movs
stos
(bad)
movups
push
mov
retf
xchg
sbb
jmp
pop
popa
daa
mov
and
ja
js
mov
dec
out
into
adc
adc
(bad)
sbb
jecxz
cmp
icebp
mov
mov
out
dec
ds
leave
pop
or
push
and
vcomiss
lea
fist
pushf
in
or
adc
mov
(bad)
jg
dec
xor
push
jno
fistp
mov
iret
xor
daa
jae
movs
mov
ins
inc
and
jno
adc
or
jge
mov
add
xchg
sub
mov
and
in
xor
xchg
and
dec
jmp
aam
sbb
mov
adc
push
jmp
js
and
and
std
pop
pop
ret
jg
add
call
test
mov
jge
idiv
fneni(8087
mov
cmps
cmp
jbe
or
mov
mov
jl
into
add
js
popa
adc
inc
in
mov
mov
cmp
dec
nop
push
add
jns
mov
xchg
mov
inc
pusha
jno
cmps
call
jle
push
lea
sti
push
adc
sar
not
sub
arpl
retf
jns
cmps
hlt
jmp
sbb
jl
push
test
or
(bad)
call
push
push
fcomi
xchg
pop
dec
leave
push
fst
cmp
ret
adc
neg
dec
out
mov
add
jbe
js
mov
pop
lock
add
outs
aas
jmp
std
lahf
(bad)
cmp
rcl
mov
mov
mov
sar
ins
push
sar
pop
ror
sti
pop
jl
xchg
mov
in
imul
or
rol
and
loopne
pop
loop
dec
stos
mov
xchg
cmp
fldcw
aad
add
push
pop
jecxz
jl
leave
inc
xchg
push
inc
stc
jecxz
idiv
leave
lock
pop
push
mov
test
(bad)
xor
jo
xchg
xor
inc
cmp
xchg
retf
shl
push
dec
jp
pop
jae
cmp
cld
cmp
fwait
test
push
mov
in
mov
jne
cmp
repz
push
cmp
mov
pop
mov
es
bound
sbb
sbb
inc
push
adc
adc
cmp
in
jmp
and
or
push
mov
mov
jecxz
xor
push
mov
add
or
leave
sub
cmp
sahf
scas
jmp
jl
sbb
cwde
jecxz
mov
cmp
in
jmp
jge
adc
data16
stos
(bad)
mul
bound
outs
mov
leave
adc
(bad)
cmp
fwait
(bad)
loopne
push
add
jg
push
test
arpl
aaa
dec
xor
test
pop
popf
push
cmc
adc
cs
frstor
(bad)
stos
mov
sahf
in
test
mov
mov
jae
cmp
mov
jmp
adc
jge
pop
jecxz
xchg
test
daa
or
sar
push
jg
(bad)
loop
adc
pop
jge
xchg
cwde
xchg
ins
in
or
xchg
adc
add
jb
jne
push
adc
outs
cmp
outs
addr16
imul
ret
push
pushf
mov
aaa
(bad)
(bad)
jb
pop
mov
test
retf
cmps
jne
js
xor
add
mov
jo
cmp
sbb
cmps
sahf
daa
ret
xor
xor
sbb
add
cmc
mov
and
cdq
sbb
outs
popf
cld
out
or
xchg
stos
jnp
mov
mov
xchg
stos
mov
jg
lock
bound
add
mov
dec
xor
jl
jecxz
lea
ret
inc
cmp
mov
shr
sub
sbb
not
aaa
gs
cmp
sbb
or
mov
mov
icebp
mov
and
add
add
sbb
clc
xchg
movs
cmc
xchg
cmps
fadd
mov
lea
scas
sub
data16
xor
inc
or
fcom
ss
je
in
cwde
dec
adc
or
mov
jbe
ins
mov
adc
pop
ss
and
jne
or
repz
cdq
icebp
(bad)
retf
test
pusha
mov
sbb
mov
inc
cmp
xlat
xchg
jge
xchg
inc
inc
ins
mov
xor
repz
(bad)
movs
(bad)
push
(bad)
or
fbstp
inc
mov
ja
push
xor
daa
xchg
les
leave
mov
outs
test
fnstenv
gs
dec
pop
xor
sub
push
loopne
mov
inc
mov
stos
fwait
jo
xchg
dec
push
mov
in
retf
sti
jmp
adc
mov
push
test
jge
jecxz
mov
cmp
out
mov
sbb
dec
jno
pop
xor
jb
(bad)
sub
arpl
mov
iret
add
add
add
add
add
test
in
cld
push
adc
jmp
mov
in
pop
pop
out
ret
mov
sbb
daa
mov
js
test
out
arpl
and
loopne
mov
call
inc
popa
rcl
lds
lahf
sti
adc
std
or
fwait
sub
test
lea
imul
and
sbb
cmp
mov
mov
pop
xchg
cmp
mov
popf
enter
lods
xchg
les
rol
sbb
icebp
inc
xchg
or
scas
retf
xor
aaa
stc
xchg
add
xchg
mov
push
mov
sub
pop
push
mul
push
mov
push
or
ds
das
xor
jne
or
jl
xchg
mov
sub
or
push
les
cmp
pop
sbb
dec
dec
fisubr
jns
in
cmp
inc
pop
xor
push
xor
loop
rcr
pop
inc
cmp
jp
inc
push
and
ins
mov
ja
ret
in
fldenv
add
jbe
mov
jmp
pop
xchg
inc
or
dec
add
scas
out
arpl
jae
dec
mov
push
push
loopne
ret
cld
popa
ficom
aaa
adc
cmp
cmp
sbb
push
aam
or
scas
imul
and
mov
repnz
loopne
add
(bad)
dec
pop
in
xchg
cs
sub
xchg
adc
movs
fldenv
cwde
gs
add
add
inc
mov
mov
adc
in
cli
outs
xchg
adc
push
or
stos
xor
lea
inc
jmp
int
pop
push
push
bound
jecxz
sub
shr
xor
dec
mov
mov
inc
push
repnz
es
jmp
sahf
les
repnz
js
daa
cdq
das
mov
ss
sub
leave
stc
jmp
sbb
cmp
aam
scas
or
mov
jnp
dec
fmulp
xor
sub
sub
xchg
shl
ja
cmp
ret
or
mov
jl
rcr
add
loopne
jmp
xor
mov
xchg
mov
mov
jno
(bad)
mov
dec
xchg
mov
cmp
out
mov
push
leave
stc
cmc
xchg
aad
popa
xchg
jl
cmp
ret
jo
arpl
and
push
es
in
mov
arpl
repz
mov
jnp
ficomp
test
ficom
neg
addr16
dec
mov
sbb
jns
cmps
and
ror
and
cmps
addr16
lock
test
sbb
inc
je
leave
add
loope
and
push
retf
add
mov
jmp
pop
lods
sub
and
test
push
jne
adc
jmp
lea
xchg
ret
add
aaa
mov
inc
mov
xchg
ret
ja
dec
test
inc
(bad)
mov
push
lods
mov
xor
pop
adc
adc
scas
sub
sbb
xchg
mov
adc
sub
mov
mov
and
push
or
(bad)
ins
mov
pushf
jp
inc
sub
jno
mov
iret
fadd
push
jae
in
fs
adc
sbb
add
cmp
add
jmp
rol
mov
mov
xor
ins
cmps
int3
cli
sub
loop
add
adc
dec
sbb
pop
retf
jp
push
mov
js
iret
jne
cmp
mov
add
adc
rcr
push
push
xchg
jp
mov
pop
cmp
stos
and
mov
inc
mov
into
fcmove
mov
adc
loopne
fs
mov
ja
adc
div
imul
std
ds
enter
cdq
(bad)
fldenv
xor
push
cmp
mov
sti
cdq
jmp
cld
rep
js
inc
enter
repz
ret
in
xor
and
call
fisubr
fst
xchg
sub
push
add
sbb
sbb
ss
loope
sbb
and
fst
lea
jmp
sub
push
adc
cmp
hlt
xchg
or
push
dec
loop
jns
push
dec
xchg
push
or
lea
dec
movs
je
jmp
adc
movs
push
shl
iret
ret
sbb
int3
scas
jp
pop
mov
mov
xchg
sbb
cmc
and
lahf
sbb
(bad)
mov
push
mov
adc
or
ss
push
add
jl
fwait
mov
fistp
test
cmp
and
ins
jno
(bad)
inc
xchg
xchg
js
out
cmc
inc
je
push
cs
pushf
lods
out
jmp
bound
out
lock
adc
call
mov
scas
adc
in
sti
aas
inc
jmp
arpl
jb
(bad)
hlt
jae
in
adc
daa
adc
lock
push
mov
mov
dec
in
scas
neg
ror
xor
stos
int3
adc
nop
repz
call
mov
pop
outs
or
mov
aad
adc
cs
lock
hlt
(bad)
cmp
test
pop
xor
scas
sbb
mov
dec
push
mov
mov
jp
test
adc
das
cmc
movs
imul
mov
dec
inc
(bad)
push
lock
lods
fsubr
cmp
push
xchg
pop
call
shr
pop
jbe
pop
mov
mov
xchg
je
cmp
sbb
inc
jnp
out
add
mov
pop
pop
jmp
shr
pusha
jl
mov
es
sub
(bad)
daa
lock
add
mov
repnz
pop
(bad)
cmp
inc
or
mov
jae
shl
jecxz
mov
bound
shl
ficomp
dec
adc
cwde
mov
inc
mov
loopne
repnz
shl
fwait
dec
pop
rol
sbb
popf
cli
sub
cmp
and
lea
loop
adc
or
ret
mov
mov
mov
mov
or
mov
mov
sahf
add
ret
nop
mov
(bad)
ffreep
xchg
inc
mov
frstor
arpl
fwait
jnp
dec
xlat
lea
outs
sub
cmp
pop
cmp
addr16
pop
push
pop
pop
imul
mov
rol
jmp
adc
stos
(bad)
pop
sbb
inc
cld
clc
out
jne
test
xlat
gs
fistp
add
jns
je
adc
pop
inc
cs
mov
or
add
xchg
icebp
movs
loop
xor
mov
adc
fmul
fbstp
cld
cs
test
jle
scas
inc
and
data16
xor
mov
sub
jp
bound
push
pop
add
dec
sbb
fild
clc
fadd
shl
aas
add
clc
imul
mov
stc
mov
pop
push
dec
addr16
cmps
(bad)
in
xchg
movs
and
repnz
jmp
in
repnz
dec
push
mul
fstp
pusha
std
out
stos
add
enter
jl
xchg
hlt
call
das
and
ins
rcr
les
sbb
arpl
inc
test
and
loope
fwait
mov
add
mov
in
(bad)
enter
fst
scas
xor
ja
or
dec
pusha
jno
(bad)
add
mov
pop
mov
test
and
ins
adc
mov
shl
or
push
push
inc
pop
pop
pop
pop
xor
mov
imul
sbb
ja
dec
mov
pop
jbe
fst
fild
jp
fimul
push
loop
jle
movs
shl
pop
mov
cmp
and
push
loop
repz
or
or
push
mov
pop
xchg
(bad)
jecxz
fwait
cmps
sub
push
daa
pop
mov
mov
or
pop
fnstsw
push
cmp
inc
ret
arpl
sar
mov
fisubr
push
push
aad
cmc
and
xchg
and
cdq
add
cmp
jns
out
mov
rcl
or
adc
mov
dec
xor
retf
shl
cmp
enter
js
adc
add
adc
sub
in
jbe
cli
push
pop
cmp
xlat
fwait
aam
pop
(bad)
inc
ffreep
outs
(bad)
bound
add
jne
inc
xor
push
and
adc
push
in
movs
or
in
in
xor
adc
pop
sub
inc
sahf
(bad)
and
add
mov
loopne
and
push
xor
icebp
pop
jbe
and
mov
retf
mov
adc
adc
cmp
jne
loop
cdq
jmp
xor
and
or
dec
cmp
(bad)
(bad)
rol
fwait
mov
popa
leave
data16
(bad)
mov
sub
(bad)
dec
jnp
inc
fisttp
inc
adc
cmc
ret
mov
lods
call
shl
inc
sub
call
retf
mov
adc
xchg
dec
add
(bad)
arpl
or
retf
pushf
xor
push
das
push
in
fcomp
cmp
cmp
imul
jge
in
(bad)
rcr
adc
xor
mov
mov
repnz
mov
xchg
xor
xor
xor
xchg
rcl
mov
or
cmp
je
push
ret
cmp
or
outs
xor
jmp
push
out
xchg
pop
ja
xor
(bad)
sub
and
dec
mov
jecxz
nop
rol
clc
or
push
xchg
push
or
ins
push
jl
adc
pop
es
mov
cmps
sbb
aaa
adc
(bad)
loope
into
stc
mov
mov
pop
jo
push
push
xchg
loop
clc
retf
dec
test
and
pop
ror
sbb
ret
jp
test
adc
mov
pop
stos
xor
jo
test
(bad)
fldcw
add
inc
(bad)
jmp
adc
loop
push
out
outs
cld
ret
es
int3
fsubr
test
aad
add
or
adc
add
add
outs
add
add
pop
mov
add
inc
add
ja
add
add
or
add
add
add
add
add
add
outs
add
add
add
add
inc
adc
sbb
mov
adc
ins
mov
jg
sub
xor
std
mov
shr
test
pop
bound
pop
jp
sbb
leave
dec
adc
push
inc
or
scas
ret
inc
xchg
or
jns
sbb
sbb
inc
hlt
mov
xchg
adc
in
or
cld
xchg
push
mov
rcr
cmp
xor
sahf
push
push
mov
dec
lea
cmps
add
cmp
push
cwde
pop
ins
cmp
mov
pop
cmc
cmp
jb
pusha
xchg
sbb
adc
sbb
outs
jl
arpl
adc
movs
movs
push
adc
xchg
mov
sbb
xchg
jne
shr
out
add
push
pop
je
test
out
(bad)
(bad)
jmp
pop
lahf
dec
shr
adc
mov
adc
fdivr
bound
scas
inc
outs
imul
mov
inc
pop
adc
dec
jge
pop
pop
mov
les
and
in
aam
ins
dec
jp
clc
shr
fisttp
pusha
xor
out
xor
hlt
movs
adc
add
leave
dec
mov
loop
paddsw
ds
dec
xchg
push
sbb
mov
test
out
loop
fstp
add
push
xor
test
inc
movs
mov
cmp
xor
daa
test
jg
xor
pop
dec
ja
loope
pop
pop
daa
mov
push
gs
jl
inc
std
mov
leave
jl
aas
or
and
test
push
arpl
sbb
mov
mov
cld
aaa
sar
test
sub
test
and
sub
rcpps
pusha
mov
imul
and
in
sar
or
shr
inc
jl
outs
call
or
xchg
adc
mov
mov
fnstenv
sub
mov
outs
mov
add
xor
dec
jge
pop
ror
icebp
popf
push
fcmovu
rol
test
inc
test
jae
(bad)
popf
or
fcom
js
fimul
mov
daa
lock
sub
(bad)
jge
inc
retf
fcom
out
ret
pusha
cld
cmp
cmp
jp
mov
and
fisub
inc
(bad)
pop
stos
mul
dec
mov
stc
cmps
test
je
aam
xor
push
mov
call
pop
dec
int3
loopne
sar
fcomip
std
push
mov
jecxz
mov
xchg
add
test
cmp
stos
stos
lods
je
push
pop
mov
pop
imul
lods
push
inc
jge
dec
test
mov
jmp
aas
xchg
push
in
pusha
imul
fidivr
stos
mov
inc
mov
mov
loope
cmp
pop
jge
add
cmp
imul
gs
adc
in
cmp
mov
(bad)
jg
aam
and
dec
loop
fdiv
and
jl
cmp
fdivr
mov
pop
xchg
dec
or
inc
and
sahf
sub
shl
sub
mov
add
sub
sbb
xor
dec
inc
(bad)
xor
rol
(bad)
call
pop
ins
adc
xchg
inc
fisttp
and
and
mov
jae
jo
test
sbb
mov
outs
jg
sbb
push
and
add
ficomp
sub
rcl
stos
pop
daa
popf
add
fcom
mov
(bad)
mul
jle
mov
or
popa
outs
ret
mov
push
retf
idiv
daa
rol
xor
stos
leave
and
mov
outs
and
clc
and
adc
dec
push
lods
fcmovb
popa
push
ja
ins
outs
jge
out
mov
imul
bound
cmp
test
add
push
pusha
cmp
cld
pop
out
(bad)
ja
call
jae
outs
push
lods
in
dec
fild
ror
clc
or
xchg
es
outs
push
fisubr
in
fstp
mov
jge
pop
fcmovnu
and
sub
cli
dec
xchg
jp
cmc
add
sub
inc
mov
add
enter
sub
xor
je
shl
(bad)
mov
and
or
sub
mov
inc
vcvtss2si
push
leave
repnz
adc
jno
dec
sbb
leave
out
(bad)
xchg
cli
add
mov
cmc
clc
pop
call
add
aas
jl
mov
aaa
retf
fnstenv
imul
xchg
mov
jo
test
mov
mov
lea
push
int
inc
arpl
sbb
(bad)
pop
lds
xor
xchg
ror
mov
out
pop
mov
(bad)
dec
dec
call
cs
and
test
aas
aas
out
sub
cmp
sbb
fisub
stc
ins
sub
in
xor
lods
stc
cmp
fidivr
or
and
inc
mov
outs
pop
xchg
cmp
add
arpl
push
pop
and
pop
inc
dec
pop
cdq
xor
out
xchg
xchg
retf
clc
ins
jecxz
outs
mov
xor
push
or
sub
xor
pop
or
inc
fstp
(bad)
in
pop
push
and
push
hlt
jb
test
sbb
or
add
call
out
data16
pop
sub
iret
push
pushf
jge
ins
cmp
jbe
nop
mov
dec
dec
push
test
push
and
rol
and
pop
pop
movs
push
mov
add
loope
lods
clc
fs
or
test
push
div
(bad)
leave
mov
cli
jecxz
and
dec
rol
push
(bad)
aas
mov
xchg
pop
mov
cmps
out
adc
mov
xchg
ja
cmp
(bad)
into
or
add
sbb
(bad)
shl
popa
cmps
xor
add
popf
test
cmp
in
std
jle
pushf
call
jecxz
aam
mov
and
aam
xor
fsubr
mov
popa
outs
gs
mov
scas
fidiv
push
sbb
cmp
aad
xchg
pusha
fist
sub
mov
pushf
stos
mov
imul
add
or
mov
and
or
and
mov
add
dec
add
mov
mov
aad
stc
movs
mov
cmp
jno
sahf
and
or
int3
(bad)
mov
cmp
xor
xlat
call
and
push
fsubr
retf
test
enter
into
xchg
adc
call
mov
dec
sbb
add
or
jle
int
pop
mov
xchg
cs
inc
jns
jae
inc
stos
lods
xchg
and
sbb
std
jb
out
push
in
(bad)
in
pop
aaa
(bad)
push
out
add
cdq
xchg
sub
xlat
(bad)
std
test
scas
push
dec
mov
and
pop
pop
jmp
ins
push
sub
aam
pop
repz
add
shr
das
jnp
push
push
mov
push
push
mov
adc
add
into
(bad)
push
mov
or
es
lea
adc
ja
mov
shr
mov
jnp
add
outs
dec
jge
or
sub
(bad)
mov
sub
and
cwde
fsubr
icebp
out
clc
loop
jl
sbb
aad
mov
js
and
mov
stc
stc
ja
mov
adc
mov
arpl
cli
ins
(bad)
cmps
adc
not
jno
pop
mov
mov
mov
mov
aas
jge
lea
inc
xor
mov
mov
stc
mov
or
call
sub
push
and
aad
add
addr16
loope
xor
jmp
jne
pop
outs
inc
aad
cld
fsubr
(bad)
push
sbb
dec
movs
imul
mov
fnstcw
push
sbb
mov
scas
in
xchg
sbb
adc
(bad)
stos
nop
pop
pop
mov
adc
gs
ja
out
cmp
rol
sbb
mov
pop
mov
movs
fs
ins
loopne
fild
clc
es
pushf
dec
pop
hlt
scas
adc
sub
pop
push
movs
mov
in
popf
lock
ja
and
shl
cmc
cmp
push
pop
sub
int
mov
out
(bad)
outs
and
inc
mov
rcl
not
adc
fs
cmps
inc
div
xor
sub
mov
les
inc
stos
push
jb
ins
or
push
pop
jge
shr
sbb
ja
cmp
outs
mov
xchg
mov
out
fs
xchg
xor
(bad)
pop
cmp
mov
add
test
leave
mov
add
pop
add
lock
pop
loop
adc
push
and
sahf
sub
int3
inc
sahf
loop
sbb
adc
or
sub
add
out
adc
repnz
mov
(bad)
jge
push
add
mov
inc
fwait
loopne
push
pusha
aas
lock
pushf
jnp
adc
into
das
inc
or
mov
push
mov
stos
push
movs
lds
ss
mov
cmp
test
ins
mov
enter
imul
and
hlt
jge
(bad)
pop
mov
mov
js
mov
sti
push
dec
div
je
ficomp
stc
and
pop
in
fdiv
pop
les
leave
popa
and
add
and
push
cs
(bad)
clc
mov
dec
in
inc
pop
scas
cmps
in
mov
retf
retf
outs
pushf
and
jae
inc
stc
adc
adc
repz
mov
stc
mov
outs
shl
jecxz
in
jge
mov
cld
jg
ins
xchg
mov
ja
leave
ins
popa
mov
jg
mov
in
test
jmp
ss
pop
mul
test
pop
into
leave
das
add
iret
sub
rcr
push
jbe
lahf
scas
addr16
cmp
cmp
pop
(bad)
lock
cdq
cmp
pop
xchg
fldenv
and
adc
add
pop
stos
dec
lds
js
mov
aas
pop
arpl
mov
movs
mov
ja
xchg
jge
inc
cdq
jb
sar
push
sti
xchg
cmp
cmp
ins
jae
icebp
push
jae
icebp
stos
sbb
sub
in
ret
pop
sub
dec
sub
and
mov
fdiv
xchg
push
popa
std
mov
mov
add
add
add
add
add
add
or
add
inc
dec
add
add
arpl
add
xor
add
add
add
add
add
inc
inc
add
add
add
add
cmp
add
mov
dec
add
add
add
add
add
add
add
add
ins
daa
(bad)
in
loope
out
jne
jmp
call
sar
addr16
or
mov
sub
sub
cld
lods
sar
movs
push
cmp
data16
add
sbb
inc
test
push
push
imul
or
push
lahf
outs
jmp
lods
mov
adc
adc
sub
ror
mov
or
mov
mov
outs
repz
js
retf
pop
addr16
cmps
movs
xchg
and
iret
mov
lahf
sub
addr16
js
jb
cdq
xor
pop
dec
retf
or
jmp
fild
add
add
mov
fidivr
std
jl
stos
imul
retf
or
test
mov
fimul
xlat
cmps
or
call
je
cdq
shr
lahf
iret
push
mov
mov
jl
fisubr
sahf
push
xchg
mov
mov
sub
inc
mov
inc
stos
int3
ins
cmp
cmc
push
or
push
retf
movs
jno
stos
mov
lahf
mov
test
test
sbb
lods
cmp
fstp
mov
xchg
pop
sbb
mov
mov
pop
cmp
mov
fwait
les
(bad)
arpl
xchg
sbb
loop
adc
gs
and
mov
jns
add
and
jmp
(bad)
out
loopne
cmps
xor
mov
inc
les
or
pop
(bad)
dec
mov
ret
(bad)
retf
mov
jns
push
out
mov
xlat
push
ins
or
in
int3
sbb
sbb
sahf
add
mov
or
mov
add
push
aam
jge
sbb
(bad)
xchg
xchg
(bad)
int
inc
jae
and
jp
hlt
out
(bad)
daa
in
(bad)
dec
mov
push
dec
dec
outs
fwait
jo
jl
stos
sbb
test
out
fcmove
ins
bound
retf
xchg
mov
mov
cmp
fmul
push
or
xchg
icebp
xchg
call
mov
sahf
rol
add
mov
shl
retf
(bad)
ins
xor
xchg
jge
sub
xor
cmp
jecxz
and
add
mov
jne
pop
repz
bound
adc
in
cmp
xchg
aas
dec
movs
jl
rep
das
int
dec
push
xchg
mov
stos
jge
call
cmc
push
add
cld
jo
add
pop
jmp
int3
repz
stos
les
dec
sub
and
lods
in
leave
inc
shl
mov
repz
je
mov
mov
jge
and
dec
dec
pop
mov
das
mov
das
xor
sbb
hlt
cld
inc
aaa
jb
sub
or
stos
ror
mov
rol
lock
mov
lods
xchg
iret
and
cld
push
(bad)
ficom
pop
push
lods
retf
sbb
in
pop
rcr
cmp
cdq
lahf
arpl
push
jl
mov
mov
sub
fs
test
sahf
inc
lock
adc
adc
mov
ret
(bad)
jbe
arpl
ds
addr16
xchg
push
cmp
sub
add
lock
jge
(bad)
in
cmc
mov
push
mov
es
lds
xchg
fidiv
imul
mov
xchg
jmp
sub
push
pop
scas
sar
xchg
cmp
sbb
and
js
xchg
push
mov
jmp
inc
pop
mov
in
adc
pusha
data16
push
out
dec
inc
or
mov
retf
out
or
nop
addr16
ret
push
lods
ror
arpl
lahf
dec
push
jl
or
push
cmps
lods
push
rcr
xchg
ins
mov
lds
pop
faddp
sub
jo
mov
jb
sub
or
adc
xchg
jle
push
pop
ins
mov
sbb
cmps
lods
cdq
mov
cli
fdiv
sub
dec
cmps
adc
(bad)
mov
in
ins
push
cmp
and
jg
cmps
dec
sub
aaa
out
mov
jmp
lods
das
imul
xchg
addr16
pop
jno
nop
fs
jmp
push
out
ja
sub
mul
(bad)
and
add
dec
aaa
pop
add
test
add
and
(bad)
nop
jmp
repz
shl
and
push
or
arpl
std
adc
xchg
outs
je
arpl
test
call
cmc
dec
scas
or
int3
mov
xchg
fst
mov
and
popf
addr16
pusha
ds
mov
mov
mov
lods
outs
adc
(bad)
neg
xchg
ins
loopne
push
es
and
mov
xlat
xlat
shr
in
adc
ins
push
inc
test
js
or
and
fisub
xor
nop
jecxz
rcl
mov
jno
(bad)
xor
aam
xor
or
sahf
mov
and
lods
fcomp
dec
push
dec
sti
xchg
sub
xbegin
and
es
sub
ret
sbb
dec
jmp
fist
add
pop
lock
pusha
cmp
xchg
aam
ficom
inc
mov
lods
jp
xor
fnstsw
pusha
push
and
sbb
xor
cld
adc
inc
retf
mov
mov
jg
jb
inc
dec
shr
enter
test
sbb
sub
ins
call
xchg
cmp
jle
ss
retf
prefetchw
or
int3
dec
sbb
cmps
(bad)
es
sub
inc
jns
add
xchg
adc
leave
sbb
xor
jmp
or
js
add
iret
(bad)
cmp
and
stos
stc
cmp
and
push
jnp
push
pop
je
mov
push
mov
push
adc
ret
es
into
(bad)
cmp
popf
push
adc
bswap
out
mov
call
jo
and
movs
fdiv
sbb
lock
mov
mov
leave
xor
aam
das
dec
cmp
sbb
mov
clc
pop
fimul
jg
iret
test
mov
popf
adc
dec
fild
adc
jne
pop
add
mov
inc
jb
pop
sbb
mov
cmp
or
jae
mov
movs
retf
xor
idiv
fistp
pop
dec
sub
in
and
aad
xor
add
mov
jns
loope
add
sar
dec
rcl
cmp
movs
mov
imul
mov
or
inc
movs
dec
jne
out
mov
push
cmp
sub
dec
mov
pop
mov
test
adc
jl
jbe
and
mov
(bad)
or
imul
pop
(bad)
xchg
add
std
ins
or
jnp
ret
adc
sub
adc
jae
sbb
ror
add
mov
je
mov
imul
push
jne
mov
cmp
pushf
cmp
adc
stos
icebp
fs
out
mov
dec
ja
xchg
sti
dec
pop
repnz
push
out
mov
loopne
cli
fcom
fisub
pop
shl
cmps
lods
lods
mov
dec
scas
or
add
xor
xchg
adc
ja
loope
jg
ss
and
or
ret
push
fldln2
ror
jns
xchg
inc
or
cmp
mov
mov
mov
or
mov
or
sbb
scas
fadd
fsub
xchg
push
push
lahf
mov
dec
imul
retf
jb
mov
sahf
jno
lea
clc
jmp
jo
mov
gs
(bad)
leave
rcl
pop
and
add
mov
int
cmp
daa
arpl
mov
test
inc
push
mov
movs
out
inc
cmp
lds
cmp
adc
ins
test
in
dec
mov
cmp
and
jae
test
pusha
push
mov
ins
and
(bad)
ins
sbb
dec
test
sar
jle
mov
bound
pop
xor
pop
push
pop
push
mov
xchg
test
ja
mov
push
test
pusha
mov
shr
push
mov
movs
pop
jge
cmp
sbb
push
mov
jge
xchg
jbe
shl
jp
mov
movs
jge
std
xlat
pop
or
in
add
mov
or
adc
fwait
mov
mov
repnz
xor
add
gs
movs
jbe
jmp
jmp
mov
pop
(bad)
es
loope
enter
mov
fnstcw
push
push
ins
sbb
ins
mov
pop
ss
jno
inc
je
leave
mov
fist
mov
xchg
fxtract
pop
jnp
clc
fiadd
fadd
scas
pop
pop
jp
mov
imul
cwde
push
sub
cli
sar
mov
neg
call
mov
push
sub
fst
xor
or
(bad)
pop
mov
shl
(bad)
adc
test
xor
pop
cmp
repz
pop
dec
repz
sbb
call
sahf
lds
mov
(bad)
(bad)
scas
xlat
xchg
jb
in
mov
into
push
pop
mov
lds
jle
mov
xchg
mov
(bad)
mov
mov
out
call
popa
inc
cdq
xor
ud2
jne
div
xchg
clc
push
xchg
lahf
ins
ficom
stos
neg
and
and
xor
xchg
jge
cmc
cmps
iret
inc
mov
inc
push
lock
cmp
fmul
sub
add
call
xchg
cwde
repnz
mov
stos
inc
hlt
fisttp
test
add
movs
(bad)
stc
leave
fld
pushf
nop
push
push
rol
inc
add
pop
shl
lods
pop
sbb
push
les
mov
cmc
xlat
dec
push
add
fiadd
fdivr
pop
loop
cwde
lock
daa
push
add
fxch
adc
mov
lahf
(bad)
mov
push
jae
fs
arpl
pop
inc
pop
shl
mov
iret
cld
adc
jmp
(bad)
adc
or
cmc
inc
adc
(bad)
xor
ins
mov
mov
ret
test
sub
scas
sub
and
inc
cmps
shl
add
cmp
(bad)
push
pop
cmovno
leave
stos
rol
in
adc
fnstcw
nop
push
cld
inc
adc
jb
cmps
sahf
xor
lods
push
pushf
inc
xchg
fst
xor
aaa
(bad)
sbb
shl
das
outs
inc
nop
cli
add
xor
stos
enter
push
ja
mov
int
dec
das
out
add
add
add
add
std
or
add
add
sbb
add
stc
add
add
add
std
add
add
add
add
add
add
add
cmp
dec
add
add
add
add
adc
add
add
add
add
arpl
add
add
pop
add
add
add
int3
add
les
jo
add
add
add
jg
add
add
and
xchg
int
add
add
add
sbb
add
add
add
add
test
add
add
add
add
and
add
inc
add
add
add
add
push
jb
add
inc
sub
and
add
add
add
cmp
fadd
pop
or
xchg
or
mov
pop
leave
sbb
sbb
cmp
jmp
retf
in
or
xlat
call
jmp
pusha
xor
(bad)
in
adc
rol
call
sbb
push
gs
jl
pop
dec
call
pop
mov
int
xchg
int
xor
jmp
arpl
daa
bound
inc
test
fdivr
push
pop
push
pop
ds
adc
xlat
inc
xor
iret
xchg
pop
inc
jo
jo
ret
or
fnstcw
dec
jno
call
jbe
call
pop
in
repnz
mov
push
adc
or
repnz
stos
jno
xchg
pop
repz
pop
aas
lods
sbb
mov
adc
test
(bad)
xchg
aam
aas
xor
scas
sbb
stos
xor
mov
mov
dec
stc
adc
push
aam
(bad)
ficomp
dec
mov
(bad)
sub
sub
pop
dec
pop
cmp
add
pop
dec
je
nop
sbb
fcmovb
neg
div
ins
jp
pop
pop
jg
ror
add
cmovle
push
fidivr
sahf
loop
sti
fs
(bad)
fmul
sub
xchg
(bad)
lods
out
cmc
fld
in
cmp
jg
xor
xor
ror
xchg
ror
xlat
jnp
add
ss
and
icebp
xchg
xchg
in
inc
mov
movs
mov
cmp
push
dec
and
jno
mov
stos
sub
rcl
add
inc
add
shl
fs
mov
syscall
cli
popf
pusha
sub
dec
mov
(bad)
mov
aaa
call
fxtract
mov
dec
mov
loopne
jmp
jns
xor
inc
sub
mov
repnz
pop
add
movs
sbb
push
add
ss
pop
sbb
dec
fistp
xchg
not
xchg
cmc
fnsave
leave
pushf
or
push
jmp
ror
pop
scas
test
adc
push
cmp
push
sbb
mov
fcmovb
stos
mov
stc
call
aaa
test
dec
fmul
inc
xchg
add
cli
ror
inc
xor
out
cwde
fistp
fcom
add
xor
xor
pop
dec
xor
cmp
fidivr
inc
je
test
or
loop
xchg
cld
add
mov
cmps
mov
ret
sub
pcmpeqb
mov
mov
xor
repnz
or
xor
pushf
mov
fbstp
jno
xchg
aaa
out
outs
or
and
std
pop
and
inc
loop
cmps
lds
call
pop
xchg
call
pop
jmp
cmp
jmp
stos
fcomp
loope
ds
fsubr
jg
push
iret
(bad)
xchg
mov
push
dec
int
add
cmp
test
mov
leave
dec
xchg
xchg
jb
cs
idiv
cs
jl
ins
mov
outs
cli
retf
jae
cmp
xchg
fsub
push
push
jno
jle
sbb
mov
xor
(bad)
adc
add
mov
out
mov
mov
popa
xchg
xor
popa
inc
jne
scas
push
ret
aad
sbb
fld
cmp
(bad)
shr
mov
inc
iret
xchg
dec
mov
jnp
cmp
and
mov
mov
sbb
push
jle
mov
and
outs
dec
push
cmp
jo
xchg
test
hlt
pop
div
dec
aaa
test
mov
sahf
aas
ins
(bad)
imul
mov
fs
outs
pop
sti
int3
inc
jmp
scas
cmp
shr
xchg
push
fucomi
jo
xor
xchg
fmul
or
movs
add
mov
in
xor
pop
adc
pop
mov
ja
pop
mov
add
stc
mov
inc
push
ss
push
and
or
sbb
out
push
sub
xchg
sub
cmp
pop
mov
ins
xchg
add
dec
dec
push
inc
sbb
or
shr
xchg
or
inc
mov
mov
mov
scas
dec
push
mov
mov
xor
mov
cmp
jg
jle
imul
pop
sub
jns
fist
popa
out
jb
(bad)
xchg
(bad)
repz
mov
(bad)
in
adc
nop
and
cmps
jno
push
leave
and
(bad)
jmp
pushf
sub
and
or
dec
daa
pop
aad
and
retf
movs
lods
fstp
mov
xor
pop
jge
stc
data16
push
cdq
pop
int
jmp
fsubr
pop
stos
idiv
jo
(bad)
dec
xor
bound
(bad)
out
mov
rcl
xchg
jns
cmp
ret
outs
imul
enter
xchg
or
jb
mov
mov
loope
push
cli
aad
jmp
xchg
pop
ja
out
push
loope
inc
(bad)
in
div
push
in
xchg
mov
mov
xchg
outs
aam
jmp
call
xchg
adc
dec
xchg
out
or
jno
and
and
leave
popa
sbb
xchg
loope
sar
mov
js
lea
mov
fadd
mov
push
je
lds
(bad)
sti
jl
adc
cmp
or
scas
icebp
popa
inc
xchg
inc
or
lods
outs
ja
jle
prefetchw
daa
js
add
fld
xchg
scas
add
and
fisub
inc
dec
pop
test
xor
retf
xchg
fwait
pop
cmp
inc
pop
mov
push
xchg
lods
pop
jp
nop
inc
rsqrtps
push
mov
arpl
pop
lahf
cld
pop
in
stos
cli
fwait
les
push
fidiv
hlt
push
push
xchg
xor
je
(bad)
xchg
xchg
mov
ss
xchg
or
push
xor
enter
inc
movs
push
test
xor
pusha
jl
cdq
(bad)
(bad)
movups
enter
es
mov
xor
inc
(bad)
test
outs
pushf
pushf
fisubr
sub
xor
jge
pop
add
inc
test
add
or
xchg
jmp
stos
fidivr
adc
jno
adc
dec
aaa
pop
cs
xor
lea
sub
(bad)
arpl
cmps
xchg
neg
popf
ds
popa
lods
or
fucomip
imul
rcr
test
xchg
dec
ss
fsubr
leave
ss
jp
and
ins
lahf
retf
in
mov
fiadd
pusha
rcr
shl
jo
sub
frstor
icebp
xchg
repz
mov
sbb
rcr
jb
mov
push
test
ja
in
dec
or
and
mov
jns
repz
jo
adc
(bad)
lock
aad
(bad)
dec
(bad)
jbe
adc
jmp
pop
and
dec
mov
jne
adc
mov
xchg
add
loope
jb
mov
jge
loopne
and
push
dec
adc
std
imul
jmp
inc
or
call
shl
adc
lods
and
push
jg
aad
out
enter
jmp
icebp
retf
fwait
popf
add
aad
icebp
rcl
test
cmp
push
mov
jp
call
fisub
xor
pop
sbb
jge
jo
leave
les
(bad)
shl
jns
pop
push
pop
hlt
mov
push
ins
mov
mov
aas
sub
dec
pop
int
movs
adc
aas
test
jae
inc
(bad)
mov
lea
or
jecxz
push
nop
jge
pop
call
add
outs
or
movs
mov
and
retf
cld
out
inc
ins
and
test
stc
dec
mov
or
imul
movs
aam
std
sbb
xchg
xchg
nop
scas
fdivr
push
imul
bound
mov
jmp
jno
test
jae
(bad)
xchg
and
jecxz
jne
jg
jb
shr
push
mov
xchg
cmps
mov
push
lock
cwde
int3
mov
icebp
int3
xchg
daa
fmul
sub
xchg
jne
loop
sub
push
call
out
or
rcl
addr16
ja
out
and
cmp
inc
pop
push
ret
(bad)
sub
arpl
sbb
ds
mov
cmp
scas
add
fist
mov
dec
push
xchg
and
xor
mov
pop
xchg
inc
mov
sub
xor
pop
jecxz
push
pop
js
loope
jns
adc
pushf
push
arpl
out
ins
sbb
lods
xor
sbb
and
jg
pop
and
sbb
xor
scas
ret
in
aad
cmp
xchg
fwait
std
cmp
mov
xlat
ja
cmp
rcl
mov
cmp
pop
loop
mov
repz
mov
jne
nop
nop
ja
cmp
in
les
pusha
fsubr
sub
dec
(bad)
adc
in
push
jcxz
pop
xor
sahf
sub
inc
loopne
call
cmps
icebp
or
cdq
adc
and
or
or
xchg
xchg
cli
xchg
lods
push
mov
popa
sahf
xlat
mov
mov
stc
and
jae
imul
sub
repz
add
jmp
in
adc
sub
pop
test
mov
pop
stos
sysenter
and
cmc
xchg
fild
jno
in
popf
cmp
lock
imul
sahf
in
mov
push
inc
sbb
xchg
js
or
int3
loop
cli
mov
jbe
hlt
stos
lds
sub
clc
lahf
mov
mov
ror
jl
xor
pop
js
add
les
ins
xchg
dec
rcr
mov
loope
pop
xor
rol
sub
js
adc
sub
daa
and
pop
jmp
add
(bad)
dec
stc
xchg
adc
xchg
scas
inc
mov
push
iret
(bad)
data16
and
scas
mov
dec
aas
dec
inc
cmc
fisub
xchg
jecxz
(bad)
pop
bound
ss
(bad)
daa
adc
push
cmps
movs
push
or
xchg
jo
addr16
xchg
and
mov
dec
pushf
push
loopne
movs
jecxz
and
sahf
out
push
add
mov
mov
out
add
pop
ret
adc
nop
xchg
fmul
cwde
xor
lods
pop
fbld
outs
inc
jp
and
jg
and
jne
(bad)
pusha
pop
push
sbb
aas
mov
pop
xchg
sub
retf
ror
ret
ret
adc
pop
xchg
xor
mov
or
or
fwait
arpl
dec
aad
and
xchg
cmp
dec
stc
add
pop
das
sbb
hlt
imul
sub
lods
jl
pusha
pop
loope
mov
add
imul
dec
xor
add
fiadd
add
inc
fild
enter
add
add
pop
loopne
add
add
add
add
add
add
add
add
add
or
ja
jb
add
imul
add
add
add
sub
pop
add
add
add
sub
add
add
add
repnz
add
push
add
inc
add
add
add
add
add
add
mov
add
add
in
sbb
fild
loope
add
add
add
add
add
dec
add
add
add
add
movs
add
add
iret
jnp
scas
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
in
add
add
mov
sar
add
add
sub
add
add
bound
dec
jne
in
ror
je
push
add
fwait
jecxz
rol
imul
adc
push
mov
(bad)
aas
or
outs
add
dec
or
adc
cmc
ja
out
adc
inc
mov
inc
test
daa
rcl
inc
sub
outs
mov
movs
mov
int3
fbstp
(bad)
out
call
xchg
movs
icebp
cmp
add
pushf
ss
sti
mov
neg
adc
hlt
shl
sub
movs
add
mov
mov
aad
in
mov
in
imul
mov
add
jb
add
in
test
jne
scas
fisubr
push
fbld
imul
(bad)
rcl
add
loopne
pop
pushf
repz
or
test
scas
or
and
cmps
jnp
lahf
push
jp
add
xor
in
sub
and
mov
(bad)
stos
and
mov
loop
or
clc
mov
xchg
addr16
and
xor
xchg
and
adc
add
xchg
imul
mov
sar
int
stos
mov
outs
add
push
movs
stos
pop
mov
cmc
mov
mov
in
xchg
mov
jo
fs
sahf
xchg
push
dec
inc
jnp
jmp
daa
and
mov
sahf
push
scas
ret
or
js
xchg
sub
push
aam
shl
ret
cld
inc
in
adc
(bad)
fwait
pop
sbb
repz
pop
faddp
and
mov
jno
and
mul
shl
cmp
jae
aad
outs
sub
rep
pop
sbb
jns
push
imul
ret
push
ret
sbb
rol
pop
add
dec
fsubr
and
and
in
xchg
cli
cmp
or
pop
pusha
mov
icebp
dec
pop
adc
cmp
cwde
cmp
sub
xchg
fucomp
cmp
ret
jge
aam
xchg
mov
pop
add
mov
xchg
rcr
mov
mov
pop
popf
mov
cmps
adc
mov
dec
dec
fiadd
nop
mov
jo
stos
cmp
shr
lock
push
ins
mov
aaa
cmp
ret
or
mov
in
jnp
lahf
pop
in
popa
mov
xchg
rol
(bad)
jno
lahf
nop
xor
fsubp
and
jp
in
jmp
sub
push
mov
inc
shl
inc
add
into
add
mov
je
(bad)
pushf
or
mov
into
dec
xor
mov
ins
mov
and
fucomip
in
dec
fadd
xor
sub
js
mov
(bad)
ret
and
repz
mov
xor
push
loop
inc
les
inc
cmps
imul
push
xchg
fadd
shl
mov
mov
xor
add
dec
and
pop
(bad)
imul
cmps
out
(bad)
jmp
jns
push
or
mov
adc
mov
xchg
pop
(bad)
out
cdq
inc
cmp
sbb
mov
jmp
adc
push
dec
sahf
repz
dec
fwait
ss
mov
aad
inc
lods
int3
mov
push
mov
push
pop
dec
xlat
mov
or
outs
out
sub
outs
jl
out
mov
loope
fidivr
std
mov
mov
add
lahf
retf
pusha
push
inc
cmps
inc
push
sbb
dec
xor
out
fwait
dec
mov
pop
pusha
ds
scas
js
out
inc
lods
leave
call
test
fwait
dec
sti
mov
lds
pop
call
add
scas
jle
jle
in
pop
push
maskmovq
add
lahf
push
jnp
fs
dec
mov
cmp
inc
pop
or
sub
add
and
jne
mov
popa
sub
mov
or
lahf
push
int3
movs
jecxz
dec
pop
jmp
sub
rcl
inc
xchg
adc
fstp
or
data16
inc
mov
or
ret
fistp
mov
mov
je
std
js
clc
push
jnp
xchg
lock
cdq
jecxz
xchg
add
ja
lahf
arpl
adc
retf
popa
(bad)
cli
test
xchg
(bad)
xor
adc
dec
aad
icebp
rcr
sbb
je
rol
xor
add
mov
xor
inc
outs
rol
pop
pop
mov
jns
cmp
xchg
xchg
cwde
mov
sub
pop
lock
std
sub
jae
cmp
jl
mov
enter
aam
iret
jge
int3
cwde
sub
shl
retf
xor
test
or
sbb
jl
and
dec
mov
xchg
inc
movs
xchg
dec
mov
call
and
aas
out
outs
mov
jle
loope
pop
or
scas
sub
mov
shl
jle
movs
(bad)
push
pushf
mov
and
sub
push
cmp
xchg
mov
xchg
test
sbb
test
xchg
lahf
cld
gs
mov
pushf
jbe
imul
jle
jl
sti
cmps
cmp
mov
adc
mov
dec
data16
into
js
leave
mov
std
inc
(bad)
xchg
inc
push
add
(bad)
push
mov
mov
mov
movs
sbb
push
pop
sub
(bad)
ins
adc
stc
mov
pop
(bad)
nop
in
push
pop
daa
das
adc
stos
mov
mov
int
inc
fstp
fist
mov
cmps
mov
push
mov
icebp
test
aam
push
sti
fisttp
cmp
jne
lock
sbb
stos
daa
cdq
js
push
push
scas
dec
cdq
mov
inc
rcr
jnp
inc
hlt
sub
mov
mov
rcl
xchg
in
xor
cmp
mov
cmps
mov
pop
ret
shr
xor
daa
jmp
inc
jp
jg
(bad)
sbb
bound
add
adc
dec
jecxz
imul
fcomip
jg
fistp
test
and
test
pop
adc
nop
mov
xchg
mov
pop
cmp
test
lea
adc
cli
or
inc
adc
nop
add
xchg
ja
pop
cmp
loope
(bad)
bound
pop
adc
or
sub
scas
bound
stc
mov
aaa
ret
xchg
inc
cli
fwait
jl
add
sub
in
pop
mov
nop
cdq
adc
clc
into
inc
inc
add
into
push
(bad)
rol
or
out
loop
or
pop
loope
and
and
je
cli
sbb
loopne
cdq
add
fisubr
retf
aaa
(bad)
std
stos
fnsave
xor
retf
in
loopne
out
stos
mov
push
rcr
pop
xor
adc
push
sbb
mov
icebp
rcr
jle
jecxz
imul
add
mov
stos
xor
retf
fisubr
xor
aaa
push
outs
in
mov
(bad)
cmc
icebp
xor
pop
push
dec
cmp
ret
mov
adc
and
or
sbb
cmp
call
data16
mov
push
outs
int3
jmp
fnstsw
or
fidiv
in
add
push
add
add
push
add
loop
repz
(bad)
std
int
fcomp
stos
or
dec
movs
out
lahf
adc
xchg
popf
mov
(bad)
pop
icebp
xor
inc
mov
and
loop
dec
adc
(bad)
fsubrp
mov
and
jbe
xor
arpl
scas
or
mov
jmp
or
sub
rcr
jp
mul
push
sub
test
loope
add
ret
lock
sbb
inc
stc
inc
movs
jmp
inc
leave
jae
mov
and
cmp
inc
stos
pop
ja
jb
and
sub
inc
shl
mov
mov
bound
mov
jnp
dec
sbb
jnp
sub
loope
int3
rcr
adc
xor
or
and
inc
sbb
fsubr
pop
or
(bad)
cvtps2pi
fucom
call
out
int3
fistp
sub
enter
ss
pop
adc
ss
adc
mov
ret
mov
mov
dec
ss
pop
sub
and
mov
daa
push
push
out
xchg
iret
add
or
iret
stc
mov
mov
jns
dec
into
push
aas
sub
inc
cmp
mov
jmp
push
ret
pop
jb
fdivr
mov
call
xchg
mov
xlat
jns
pop
(bad)
fidiv
gs
mov
repnz
sbb
iret
hlt
xor
test
js
lock
lods
into
test
push
sub
jo
jge
aad
cmps
ins
sbb
mov
jno
or
pop
pop
outs
int
and
jecxz
lods
cmc
mov
or
adc
test
mov
push
cmp
mov
xor
xor
mov
popf
jno
cmp
push
pop
call
mov
cmps
mov
sub
ss
pushw
push
cmps
stos
jecxz
in
dec
inc
inc
xor
ret
icebp
jne
push
mov
in
mov
push
mov
jl
pop
and
ins
mov
add
dec
fs
and
xor
ss
aam
xor
mov
push
push
pushf
jo
daa
arpl
and
inc
ja
ds
sub
and
test
cmp
mov
mov
in
mov
movs
sbb
mov
xor
cmp
mov
or
aam
(bad)
mov
rol
jecxz
xor
push
jnp
cmp
mov
jns
push
pop
sub
mov
icebp
(bad)
test
push
pop
nop
add
xchg
push
inc
or
jecxz
out
cmp
mov
les
inc
sub
test
xor
(bad)
add
xchg
jns
jno
out
pop
jg
out
push
aad
pop
sub
push
and
sub
(bad)
retf
or
push
fwait
cmp
sub
lahf
nop
cmc
mov
lock
ja
lds
pop
pop
ror
fld
outs
xlat
inc
xor
out
gs
in
ret
bound
mov
iret
xor
pusha
cmp
mov
bound
jmp
jns
div
cmp
mov
ret
daa
mov
adc
es
test
adc
xchg
xor
(bad)
ja
sbb
mov
and
pop
fld
mov
cwde
xchg
data16
add
add
add
add
add
add
mov
add
add
sub
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
loopne
add
sub
push
add
add
dec
add
arpl
add
add
sbb
add
add
add
add
add
test
add
add
xor
stos
add
add
xchg
push
add
add
lods
scas
add
push
sbb
ficom
add
in
or
sbb
xchg
push
xor
call
adc
and
mov
sbb
int
adc
lods
(bad)
aad
sbb
ror
inc
loopne
nop
lods
jmp
iret
push
cmp
pop
xchg
dec
sub
mov
jecxz
sbb
dec
xchg
lds
neg
or
jmp
push
(bad)
outs
jecxz
xor
xor
lods
cmp
push
adc
(bad)
fadd
and
into
sbb
loope
sahf
or
sbb
mov
in
pop
pop
shr
xlat
dec
addr16
lds
dec
scas
and
adc
test
pop
jne
out
jae
enter
movs
rcl
pop
add
int
in
inc
sub
fsub
fs
retf
dec
jo
ins
cs
push
mov
(bad)
dec
sub
stos
and
xchg
cdq
jecxz
loop
adc
retf
mov
ins
les
loop
mov
ret
xchg
sub
push
inc
rcr
test
(bad)
push
xchg
bound
sub
addr16
sahf
xor
add
jae
dec
aaa
addr16
and
dec
int
sub
or
mov
adc
movs
push
sub
sbb
fld
hlt
push
push
call
push
mov
div
daa
mov
pop
dec
iret
loope
ja
inc
mov
pop
dec
ins
ss
in
mov
jno
dec
inc
imul
fsubr
xchg
mov
test
mov
mov
mov
adc
or
jbe
retf
push
test
or
call
or
loop
scas
push
pop
gs
mov
call
shl
mov
fcmovnb
pop
xor
pop
sub
sar
mov
xchg
mov
inc
mov
push
sbb
test
or
in
outs
sbb
and
push
sub
lds
jmp
mov
loop
pop
(bad)
adc
popf
and
xchg
fwait
dec
sti
hlt
bound
rcl
jp
pop
mov
pop
mov
add
xchg
call
lods
into
dec
mov
scas
jp
cli
adc
ficomp
pcmpgtd
ins
in
cmp
dec
sbb
lock
and
out
pusha
lds
dec
test
dec
les
imul
scas
or
movs
arpl
(bad)
shl
dec
xor
mov
rcl
scas
adc
pop
sbb
aam
push
mov
mov
scas
adc
aad
pop
shr
push
pop
pop
xchg
mov
jg
mov
cmp
or
inc
and
(bad)
pop
lock
and
iret
sbb
mov
in
pushf
inc
jg
mov
aaa
test
ret
inc
jae
xor
aaa
out
jne
and
jne
frstor
data16
push
add
push
cld
xor
cmp
lods
jne
sbb
and
sbb
imul
jae
jns
out
mov
icebp
dec
out
cmp
inc
pop
mov
dec
mov
sub
call
jl
xor
xchg
(bad)
sbb
call
stos
push
or
add
mov
push
gs
fild
imul
arpl
loopne
and
xchg
shl
mov
add
dec
or
iret
and
and
mov
mov
jle
sub
xchg
mov
movs
cmp
mov
jecxz
aad
out
mov
push
(bad)
dec
in
ficom
jg
dec
int3
(bad)
sub
pop
xchg
je
or
push
mov
sbb
inc
jne
dec
dec
std
adc
loop
cdq
sub
movs
xor
sub
xlat
and
xchg
test
dec
sub
outs
int3
xor
leave
aam
adc
mov
jmp
sub
jb
int3
scas
push
sbb
ss
mov
movs
fwait
sbb
jae
adc
fcomp
adc
lods
and
jb
mov
dec
call
add
and
push
push
xchg
inc
(bad)
sar
fwait
sbb
xor
cld
xor
add
mov
jmp
mov
out
or
fcomp
dec
in
test
sbb
push
cmps
(bad)
push
dec
enter
jp
jmp
xor
outs
fbld
dec
mov
fnsave
pop
pop
sbb
test
lock
test
out
cld
addr16
inc
and
add
dec
mov
cmp
jle
sub
outs
mov
cdq
xlat
sbb
mov
div
popf
pop
and
push
adc
adc
xchg
retf
aas
cmp
es
sub
push
inc
sti
cmc
sti
clc
dec
int
scas
or
stos
mov
or
push
push
inc
mov
sbb
in
and
sahf
in
rcl
lahf
and
test
arpl
inc
out
je
add
push
xor
mov
ja
rcl
popf
mov
scas
shl
cli
and
sub
pop
sub
push
push
call
lods
push
mov
lds
fs
outs
inc
adc
xchg
out
mov
pop
loopne
int3
adc
(bad)
fdivr
aam
dec
shr
or
rol
or
mov
into
aad
test
inc
mov
mov
xor
add
mov
iret
dec
push
sbb
lock
jnp
mov
jecxz
xor
aaa
out
mov
lock
lds
adc
jne
mov
cmp
lock
loope
out
adc
je
das
jo
pop
sub
mov
sub
out
push
adc
jecxz
add
add
sub
or
outs
dec
or
jmp
rcl
cmp
clc
div
cmp
lea
mov
cmp
cmps
loopne
sbb
xchg
inc
cwde
arpl
fdiv
out
xchg
jno
fidivr
dec
cmps
lds
pop
scas
(bad)
retf
adc
inc
mov
les
mov
icebp
cwde
enter
cld
ficom
mov
lea
mov
pusha
adc
dec
call
fwait
scas
out
dec
mov
inc
stos
call
loopne
sub
mov
shl
jmp
cmc
jne
retf
sbb
call
fs
add
pop
add
add
sub
jmp
push
lods
cmp
push
(bad)
je
retf
sahf
xor
xchg
aad
adc
sub
cmp
xchg
popf
push
pop
pusha
ds
inc
mov
outs
daa
rcl
cld
jnp
test
in
jle
jl
jp
icebp
adc
or
jno
adc
jmp
rcl
mov
sub
leave
rol
mov
push
push
ret
movs
sbb
vpsubw
int3
push
call
dec
mov
mov
add
das
jmp
sti
loop
sahf
adc
jmp
gs
scas
imul
xlat
sbb
inc
retf
sbb
cmp
loopne
pop
ja
sahf
test
or
dec
fisttp
jge
shr
mov
xchg
in
ss
xchg
jo
or
ds
cmp
xlat
dec
repz
dec
sub
jmp
dec
xchg
sub
fstp
aad
pop
jo
xchg
call
mov
and
pop
push
in
or
cmp
jae
push
xchg
(bad)
add
xor
adc
retfw
mov
shr
cmp
jge
xor
and
xchg
call
cdq
sub
out
cmps
cld
outs
(bad)
aam
dec
scas
call
mov
dec
mov
mov
pop
stos
lea
pop
xor
aaa
out
dec
mov
xchg
sti
mov
dec
sub
adc
jns
jl
and
or
jg
nop
sbb
pop
test
repnz
push
loope
ins
mov
xchg
loopne
les
jmp
cmp
mov
aas
pop
pop
retf
fiadd
xor
lods
loop
(bad)
outs
mov
xor
shl
scas
mov
pop
nop
(bad)
jmp
push
and
adc
outs
inc
fwait
push
dec
sbb
mov
jg
push
ret
xlat
out
dec
test
sbb
mov
sbb
dec
loop
(bad)
sahf
lods
mov
mov
(bad)
xchg
mov
and
repnz
lods
bnd
icebp
sbb
sub
mov
call
stos
lds
inc
or
outs
add
jno
bnd
nop
dec
sbb
xchg
mov
cmp
push
mov
in
enter
push
jl
pop
or
arpl
fwait
jl
es
out
mov
std
jo
pop
jne
das
push
xchg
mov
push
lahf
lea
adc
sub
test
and
xor
adc
xor
and
movs
pop
adc
out
ja
retf
sub
cs
dec
(bad)
ja
adc
push
fprem
pop
pop
ja
es
xor
adc
pushf
mov
mov
adc
sbb
js
imul
adc
push
not
or
xor
stos
aad
sub
aam
std
hlt
dec
sub
loopne
jbe
mov
mov
inc
les
nop
in
push
out
(bad)
cmc
xchg
loopne
movs
dec
repz
out
cmp
scas
loop
lds
rol
(bad)
xor
push
call
pop
xchg
aad
stc
xor
ins
mov
stos
cmc
adc
add
sub
xchg
fiadd
sbb
xchg
je
mov
xor
popf
push
(bad)
xor
sar
pushf
mov
shr
or
out
aam
data16
xor
fndisi(8087
ss
mov
mov
and
dec
jae
xlat
mov
outs
sbb
xchg
ins
jmp
stos
pop
sub
pop
push
test
add
push
lahf
aaa
icebp
adc
rol
cld
jp
imul
movs
scas
sub
cmc
adc
loopne
dec
hlt
inc
push
sti
lods
jmp
cmp
addr16
scas
int3
sbb
sbb
cmp
xchg
and
imul
leave
in
mov
adc
imul
push
push
fisub
mov
and
push
xchg
outs
fimul
stos
sbb
pop
jecxz
cmps
jmp
les
jg
pop
fcmovu
shr
push
sbb
out
es
dec
(bad)
mov
add
lahf
into
add
add
add
xchg
add
add
add
mov
add
rol
mov
jge
add
add
int3
lea
add
add
inc
add
add
add
add
cmp
add
scas
add
add
add
enter
add
add
add
add
add
add
add
fld
add
add
add
add
in
int
add
push
add
add
add
jmp
add
add
add
add
rol
mov
rol
jg
mov
add
add
add
add
add
add
add
add
add
mov
add
scas
add
add
add
ret
add
add
add
add
add
add
add
add
fwait
out
leave
add
add
aam
add
add
jns
add
imul
add
push
add
add
add
add
add
add
xchg
add
add
add
les
inc
push
mov
and
add
das
ret
lock
and
xor
pop
mov
sbb
dec
cmp
rol
js
mov
pop
pop
mov
outs
jp
ins
adc
repnz
cmp
mov
mov
xchg
pop
push
cmc
mov
inc
adc
test
inc
add
sbb
lods
xchg
sub
mov
stc
repz
std
push
nop
mov
mov
iret
ret
sub
inc
adc
fucomip
in
pushf
pop
test
dec
ins
xchg
aas
cli
xor
cs
in
xchg
out
or
xor
scas
add
mov
or
aad
pop
gs
xchg
add
add
mov
pop
and
mov
aaa
cmp
push
stos
fldenv
mov
push
out
xor
cmp
xor
sub
cmp
pushf
lods
inc
stos
scas
xchg
rol
lds
scas
(bad)
mov
sbb
dec
inc
mov
jmp
adc
sbb
dec
push
(bad)
not
jno
jecxz
popa
shl
pop
in
or
aaa
sbb
lods
mov
fst
in
lods
jo
push
jmp
adc
ins
js
jg
cmp
stos
cmp
cs
or
aad
xchg
in
xor
adc
lods
call
popa
inc
xor
mov
mov
lods
adc
into
je
aam
xchg
cli
or
jo
dec
pusha
out
push
or
adc
jle
xlat
and
pop
xor
sub
movs
ja
xchg
dec
pop
add
cmp
push
mov
loop
mov
jns
in
sbb
ret
lahf
add
mov
sub
sti
dec
addr16
lods
scas
cmp
xchg
out
scas
sub
(bad)
pop
xor
lods
ret
fsubrp
add
pop
add
dec
push
inc
test
pop
dec
mov
and
xor
icebp
(bad)
mov
adc
and
sub
and
push
jne
sbb
or
or
sbb
jb
jnp
sti
jne
call
fstp
push
or
test
pop
mov
stc
jg
mov
sbb
ins
mov
xor
outs
xchg
sbb
xchg
jle
mov
out
cmps
retf
add
lea
adc
test
ret
mov
sub
pop
lods
outs
cmp
push
es
sub
sbb
cmp
add
ins
dec
pop
and
push
sar
addr16
mov
mov
xchg
fdivr
mov
inc
ds
xor
in
jp
mov
cmc
jmp
frstor
in
movs
imul
jne
stc
sub
retf
pop
push
imul
adc
sub
imul
lahf
test
push
in
and
mov
cmps
dec
mov
(bad)
and
push
push
movs
dec
(bad)
xor
int3
out
out
sub
xchg
jle
out
mov
mov
movs
les
and
jge
pop
add
pop
clc
mov
(bad)
call
mov
pop
mov
into
ins
adc
push
jmp
enter
mov
hlt
jl
bound
stos
mov
popa
mov
aad
mov
jo
inc
sbb
stc
popf
add
fucomip
(bad)
jo
push
retf
fdivr
mov
call
outs
jae
cwde
or
fimul
inc
aad
and
pop
pop
out
ss
pop
xchg
add
mov
jl
movs
sti
mov
mov
ret
push
loopne
mov
push
push
mov
mov
xor
ret
mov
mov
inc
jle
scas
mov
mov
inc
bound
popa
pop
mov
rol
ins
sti
je
xchg
lea
mov
call
push
pop
jbe
jne
scas
nop
les
jecxz
push
cmc
fwait
std
sbb
inc
lds
bound
dec
inc
push
push
xor
adc
in
adc
or
pushf
adc
and
ret
pop
repz
ffreep
sti
aaa
jmp
add
es
jmp
daa
mov
and
movs
mov
sbb
mov
sahf
mov
outs
movs
jo
retf
retf
adc
fwait
loope
mov
ja
movs
mov
movs
mov
push
shl
imul
adc
out
dec
popf
fwait
scas
jle
inc
pusha
jnp
sub
cmp
xor
mov
xlat
mov
xor
hlt
aas
dec
inc
mov
inc
mov
(bad)
enter
jmp
les
push
jns
jl
mov
jo
jmp
mov
repnz
xor
and
shr
and
add
fild
iret
or
adc
add
loope
scas
push
add
mov
jle
fs
xor
ja
lahf
sub
mov
pop
push
cmps
in
call
pop
dec
sbb
arpl
sub
mov
mov
inc
pop
adc
and
imul
dec
mov
ja
rdmsr
pop
sub
xchg
adc
mov
xor
xchg
in
or
imul
inc
add
mov
cmps
clc
xor
(bad)
out
lds
pmaddwd
icebp
ins
dec
loope
push
mov
ss
pop
lock
mov
jbe
xor
std
xlat
cmc
xchg
call
xchg
loopne
int
mov
sahf
icebp
mov
fmul
cmp
sbb
test
mov
mov
jnp
jl
sti
test
push
js
gs
inc
retf
call
pop
mov
movs
mov
fnstenv
jge
dec
int3
jmp
sub
clc
jno
mov
mov
xor
dec
loopne
popa
or
pop
ret
sar
(bad)
aam
bound
pop
movs
clc
call
jns
test
cmp
inc
bound
stos
push
lods
aas
ret
cld
mov
add
addr16
adc
test
sub
fs
xchg
ret
daa
push
inc
lds
fidiv
jae
cmp
pop
xchg
cmp
cmp
pop
ret
stc
out
ret
jnp
add
jmp
sub
ret
push
loope
std
sbb
mov
or
retf
add
add
jno
lods
stos
inc
dec
push
sub
mov
push
in
and
cmps
jmp
jb
inc
ds
fs
clc
or
loopne
xchg
test
pop
xor
shr
std
dec
cmps
ds
jnp
add
out
and
loopne
pop
adc
mov
mov
ins
mov
dec
and
jae
mov
add
lods
cmp
xor
or
daa
cs
pop
mov
js
idiv
iret
ret
imul
jbe
pop
jl
ret
xor
int
mov
test
aad
bound
scas
cmp
sub
arpl
gs
ins
adc
sub
pop
xor
add
call
mov
je
add
imul
jo
ror
call
fistp
mov
inc
inc
jge
js
and
lea
xlat
(bad)
leave
mov
movhps
mov
xchg
mov
and
dec
cwde
add
mov
jne
add
fsubr
fisub
and
cld
pop
mov
movs
add
inc
leave
fsub
sti
mov
ja
jo
mov
pusha
mov
cwde
push
xlat
imul
rol
ret
popf
cmp
int
loope
jp
inc
pop
scas
pop
loopne
in
dec
xor
in
mov
adc
xchg
das
clc
xor
jnp
(bad)
inc
adc
movs
push
inc
call
xchg
gs
mov
jo
hlt
adc
lahf
or
addr16
clc
ficomp
mov
pop
mov
push
xor
jg
std
dec
clc
add
sub
shr
dec
push
jge
ja
jmp
or
sub
stos
jg
jecxz
test
out
cmps
rcl
mov
fild
out
pop
mov
push
mov
cdq
dec
lmsw
mov
std
adc
out
xchg
jmp
(bad)
cmp
arpl
sbb
ret
push
(bad)
in
push
stos
pop
in
movs
adc
cdq
mov
jecxz
addr16
sub
and
cmps
out
mov
inc
pop
(bad)
xchg
sub
mov
hlt
adc
mov
fcomp
pop
fldenv
inc
jo
dec
jb
xchg
pop
jge
je
add
add
clc
jns
test
in
pop
lahf
loopne
ins
repz
push
sbb
clc
pop
jns
jo
ds
sub
push
in
sub
js
and
inc
mov
and
jle
idiv
(bad)
pop
xchg
aad
adc
mov
cli
inc
push
xchg
aaa
jmp
lods
daa
repz
rcl
xor
and
mov
xor
nop
jno
imul
stc
stos
cmps
pop
das
ins
addr16
dec
shl
call
pop
or
xchg
dec
stos
sub
sub
sbb
sbb
push
add
repz
pop
or
test
xchg
pop
or
shl
or
les
(bad)
jne
xor
cs
push
push
(bad)
jge
sbb
push
mov
sub
jo
mov
fisttp
test
and
loop
push
mov
inc
sub
aam
mov
cld
retf
mov
jns
stc
inc
xchg
jecxz
and
out
sub
adc
inc
rol
mov
cwde
push
inc
cs
sbb
shl
scas
shl
xchg
(bad)
div
sbb
shr
mov
adc
push
mov
std
pusha
xor
neg
mov
jg
xor
or
inc
and
add
pop
jmp
inc
loopne
iret
jno
pop
aam
mov
adc
daa
mov
ror
in
xchg
imul
das
jg
or
int3
or
iret
js
dec
xor
mov
dec
mov
or
fisub
xor
push
ss
xor
out
dec
and
lahf
mov
pusha
popa
pushf
fcomp
ins
sub
and
sbb
pop
lods
gs
loope
jb
hlt
iret
outs
xor
add
test
mov
sar
sahf
dec
sbb
jnp
xchg
mov
add
add
add
add
mov
addr16
jbe
cmp
popf
lahf
mov
and
data16
test
sbb
in
hlt
fisttp
shl
adc
lods
push
pop
enter
aaa
cmp
mov
xchg
push
xchg
ss
pop
adc
neg
sbb
xor
dec
push
jl
push
sub
pusha
out
mov
sahf
add
call
into
dec
push
xor
lods
rol
cmp
inc
adc
and
(bad)
leave
mov
scas
cmp
je
mov
sbb
mov
iret
js
mov
or
sub
test
sbb
inc
push
pop
add
cli
pop
push
mov
mov
in
arpl
stos
ins
outs
aam
sub
leave
inc
push
sahf
jmp
movs
clc
and
call
push
add
(bad)
and
or
pop
jne
xor
or
shl
add
fimul
sar
addr16
movs
sub
push
pop
push
(bad)
movs
repz
outs
in
jbe
outs
ror
shr
call
cmp
push
or
movs
pop
(bad)
cmps
cwde
ins
inc
pop
add
push
and
fadd
fisttp
fcmovbe
out
popa
and
push
pusha
(bad)
ficomp
push
jbe
cmps
adc
cwde
inc
lea
push
xor
pop
add
dec
xlat
cmp
outs
and
cmp
rcr
mov
mov
push
fs
nop
sbb
retf
repnz
adc
mov
out
push
and
sub
mov
pop
test
mov
adc
daa
sbb
xchg
dec
cmc
sub
out
pop
ror
jl
les
inc
jge
mov
(bad)
xlat
lahf
pusha
xchg
push
ins
in
repnz
fld
mov
cs
test
stc
or
fisttp
dec
lea
std
xor
jecxz
idiv
ja
dec
sbb
mov
push
fldcw
mov
push
add
fcmove
or
(bad)
push
adc
add
pop
add
push
mov
adc
cwde
jp
adc
in
lock
dec
fidiv
push
mov
or
jl
mov
rcl
push
in
jecxz
icebp
push
pop
loope
shr
lods
imul
add
test
dec
(bad)
cmp
es
nop
jmp
out
test
mov
scas
pop
and
mov
xor
outs
sar
mov
cmps
je
pushf
stos
inc
imul
in
stc
mov
mov
pop
adc
jno
dec
(bad)
jmp
movs
mov
fidivr
cmps
xlat
stc
mov
hlt
rol
aad
push
jle
sbb
pop
cmp
test
and
xchg
push
in
in
mov
adc
inc
mul
pop
repnz
sub
add
ret
jle
addr16
pop
mov
xor
inc
and
in
cmps
test
and
add
dec
push
mov
xchg
es
shl
pop
retf
aaa
dec
and
cld
cmp
cld
call
push
fimul
test
sbb
inc
repnz
(bad)
mov
dec
leave
(bad)
xchg
inc
and
or
cmp
cdq
add
das
stos
sub
ss
(bad)
xor
adc
or
and
es
xlat
stos
inc
xor
ins
jns
dec
xor
pop
bound
adc
jne
mov
jle
out
aam
jl
cwde
shr
pushf
les
mov
jno
call
fbstp
out
add
xchg
jle
push
or
push
(bad)
je
adc
int3
xchg
dec
mov
adc
call
jae
popf
shr
scas
fst
test
push
repz
fiadd
xchg
iret
daa
add
(bad)
mov
jmp
ret
in
jbe
in
mul
test
lea
push
jl
mov
adc
or
into
or
or
pusha
cmp
sub
lock
js
ja
cld
in
imul
mov
ins
dec
xchg
pop
jns
push
idiv
pop
loopne
rcr
pop
bnd
dec
inc
inc
pop
int
loopne
xchg
push
push
push
fld
repz
movs
adc
sti
out
jno
fs
test
mov
test
push
ret
dec
and
pop
and
push
adc
outs
cwde
ret
mov
mov
shl
outs
sbb
jge
xor
sub
mov
and
sbb
dec
into
test
aaa
and
push
shl
fild
in
stos
or
loope
pusha
jnp
fnstsw
dec
(bad)
ss
pop
dec
inc
push
mov
aam
test
or
mov
in
sub
jns
daa
les
and
popa
and
sbb
aas
xchg
stos
push
cmps
aad
iret
cmps
cld
and
shl
push
add
adc
pushf
cli
aad
mov
ror
xchg
push
sub
jo
and
pushf
sub
(bad)
add
pop
aaa
or
aad
add
pop
stc
loope
ja
push
jge
das
cdq
xor
imul
fstp
or
les
loope
add
iret
repz
movs
xor
or
mov
sub
mov
rcl
jnp
repz
jmp
pop
loopne
mul
dec
lea
mov
xchg
inc
es
sti
hlt
mov
dec
add
mov
outs
push
shl
out
fwait
jno
mov
inc
xchg
call
fidiv
pop
ror
pop
scas
hlt
fimul
int
jg
mov
xchg
call
pop
jmp
push
ins
sub
push
or
mov
xor
ins
push
repnz
or
or
jecxz
ins
xchg
js
fwait
push
mov
cli
test
rol
outs
mov
out
in
jne
imul
movs
stos
or
pop
cmp
xlat
sbb
fild
pop
jbe
adc
je
inc
xchg
add
xchg
retf
test
adc
cdq
stc
mov
lods
mov
dec
je
push
dec
jbe
test
push
pusha
jbe
jbe
xchg
mov
mov
cmp
shr
fcmove
inc
jmp
daa
adc
pushf
into
mov
mov
(bad)
sti
mov
aaa
loop
fld
jecxz
retf
pop
out
call
stc
int3
cmp
data16
xor
out
jae
out
xor
xor
in
mov
scas
js
call
loope
mov
inc
jecxz
hlt
sbb
dec
sbb
ins
pusha
mov
pop
dec
das
in
ror
mov
lods
dec
aad
sbb
lahf
xchg
mov
mov
mov
int3
xchg
leave
rol
push
xchg
(bad)
call
stos
retf
xchg
fild
ja
cs
ds
pop
inc
cld
mov
xor
or
sbb
cmps
mov
inc
jmp
test
add
mov
adc
pop
mov
adc
xchg
fstp
cmp
push
js
out
pushf
iret
out
xor
outs
or
and
mov
pop
mov
mov
stos
lahf
fimul
retf
cmp
mov
movs
sar
les
add
pop
mov
jb
xor
mov
adc
outs
addr16
xor
ins
or
cmc
xchg
xchg
sti
imul
into
sub
call
cmp
and
xchg
bound
and
xchg
cmc
fadd
xor
cmp
mov
adc
sbb
sbb
ret
sub
mov
and
out
xchg
mov
cmc
(bad)
je
ror
push
fsub
fucom
into
mov
and
jp
jle
sbb
inc
popf
stc
push
mov
mov
push
stc
xchg
jae
jp
xor
rol
add
add
stos
mov
aas
bound
ret
push
mov
push
xchg
gs
shl
mov
test
movs
shl
pop
push
jmp
aam
jmp
rsqrtps
mov
push
push
in
jb
pop
add
cmp
push
inc
dec
sub
push
mov
jne
and
scas
push
xor
inc
addr16
mov
push
xor
hlt
push
jae
sbb
cdq
int3
xor
jne
push
dec
retf
or
lea
cwde
pop
enter
(bad)
mov
fiadd
sar
push
jmp
jb
sbb
or
mov
ret
fiadd
pop
retf
sub
repnz
mov
jo
lods
leave
dec
xor
loopne
outs
call
xchg
(bad)
jne
cmp
dec
or
stos
or
xchg
or
ss
into
movs
rcr
nop
inc
jle
popf
mov
movs
aad
mov
rcl
cmc
dec
out
outs
dec
push
mov
push
cmps
aas
ds
shr
mov
add
mov
jl
sahf
cmc
out
jg
cld
xor
mov
sbb
adc
cwde
dec
ins
cmp
push
cwde
mov
or
ss
ss
shr
push
inc
addr16
adc
mov
add
mov
cmps
int3
movs
nop
cmp
cmp
dec
mov
xchg
and
inc
inc
cmc
sar
mov
pusha
pop
add
mov
je
cmp
sbb
dec
mov
xchg
mov
adc
push
bound
faddp
mov
sar
mov
jmp
push
mov
das
scas
or
sti
adc
les
push
repz
mov
mov
enter
int3
sbb
inc
es
adc
pushf
sahf
mov
pop
pop
sub
int3
retf
fucomi
stc
rcr
fdivr
inc
jo
repnz
icebp
fist
xor
xor
mov
pop
pop
in
ja
les
mov
and
pop
or
aam
jno
ins
nop
xor
jo
adc
ret
mov
das
addr16
pop
sub
in
mov
inc
xchg
dec
or
push
xor
lock
(bad)
ss
inc
jnp
test
imul
pop
cli
or
or
pop
adc
cld
xchg
sbb
mov
fwait
mov
pop
or
mov
outs
push
add
int3
in
and
dec
(bad)
es
call
outs
push
xor
arpl
xchg
test
sbb
push
fdiv
gs
xchg
cli
retf
out
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
mov
add
jg
add
les
add
add
inc
add
add
or
add
add
add
out
add
add
add
add
add
add
push
add
scas
add
add
add
jmp
add
pop
or
xor
jne
(bad)
push
je
pop
push
les
cmp
push
movs
jg
and
in
dec
mov
aam
pop
std
and
or
inc
ret
mov
std
mov
div
adc
in
fistp
lea
int
push
xor
loope
add
mov
jmp
adc
mov
sti
push
mov
mov
xchg
mov
(bad)
repz
dec
jge
fdivr
jg
rol
cld
shr
xor
mov
xor
and
pushf
inc
(bad)
mov
inc
jp
adc
es
popf
dec
fadd
cs
stos
and
xchg
cmps
dec
add
les
sbb
ds
out
out
mov
jne
fst
dec
in
mov
fild
push
pop
dec
mov
fnstsw
mov
test
mov
mov
js
mov
mov
push
mov
xchg
dec
pushf
dec
mov
cs
pop
ds
aad
imul
xor
test
mov
push
jo
adc
fisttp
scas
add
and
cmp
fisttp
cld
imul
add
and
ja
mov
sar
stos
xchg
loop
test
sbb
mov
pop
sub
ret
jne
inc
dec
fiadd
sbb
and
jp
aam
loope
inc
ds
(bad)
adc
es
mov
mov
xchg
cld
stc
jnp
(bad)
vunpcklps
pop
jne
inc
xor
jl
fnstenv
sub
push
(bad)
(bad)
cmp
rol
xchg
aad
sbb
cmc
ret
hlt
pop
xchg
sub
push
cmp
adc
mov
and
retf
sar
add
je
mov
mov
or
out
mov
pop
test
aas
addr16
or
lods
dec
fcom
shr
stos
test
retf
dec
jg
or
jb
ins
xchg
cwde
push
mov
aam
bound
out
jns
retf
cli
pop
xchg
retf
or
outs
add
and
data16
mov
mov
mov
repz
mov
sub
xchg
fidivr
sbb
mov
and
mov
das
ficom
mov
sbb
fdivrp
lods
add
(bad)
int
jnp
stos
call
jne
adc
data16
iret
int3
sbb
sahf
es
mov
mov
inc
(bad)
scas
push
clc
frstor
mov
ins
mov
imul
push
addr16
pop
std
(bad)
or
repnz
mov
cli
pmovmskb
mov
xor
sbb
in
retf
mov
jae
and
test
xor
sub
or
iret
sub
xor
(bad)
jl
(bad)
dec
shl
xor
test
mov
sub
push
xor
push
(bad)
ins
or
ftst
push
arpl
bound
cmc
cmp
sbb
int3
call
xor
aas
jbe
aaa
addr16
cmp
pop
jne
inc
mov
mov
sar
icebp
push
or
dec
sub
cmp
jecxz
xor
push
sub
repz
push
sbb
ins
inc
mov
stos
jmp
dec
ret
inc
dec
gs
repnz
fild
xchg
inc
jp
sub
(bad)
jmp
xchg
inc
xchg
call
xchg
sub
xor
loopne
jmp
jae
ins
call
mov
sbb
sbb
test
(bad)
retfw
or
movs
xor
add
dec
mov
mov
jl
inc
and
jae
loopne
dec
mov
jae
(bad)
icebp
retf
je
aaa
dec
clc
push
mov
rcr
repnz
mov
mov
mov
cmp
lods
aam
adc
pop
pop
aad
add
inc
je
fdiv
dec
test
jle
iret
cdq
adc
push
mov
mov
pop
lds
wrmsr
cmp
imul
jl
and
leave
mov
inc
and
rcl
add
scas
xchg
jne
fwait
dec
loop
scas
sbb
jle
or
mov
ror
inc
ja
dec
(bad)
lock
sub
movs
pop
iret
xchg
mov
adc
fistp
and
mov
fisttp
and
pushf
or
xor
add
xchg
jnp
add
(bad)
es
ss
(bad)
mov
cmps
retf
mov
call
push
inc
dec
ficomp
adc
dec
mov
jne
out
mov
cs
nop
in
cdq
lea
fcomp
jno
aad
sub
dec
retf
pushf
dec
cmps
dec
inc
pop
mov
and
pop
inc
ja
jg
sti
pop
push
push
and
nop
(bad)
adc
xchg
jmp
lods
sbb
cs
pusha
daa
sti
jmp
int3
and
call
push
cmp
scas
cdq
xor
cwde
inc
mov
inc
mov
mov
xor
dec
fmul
jns
out
cld
xor
lods
dec
in
inc
in
push
repz
adc
add
sub
pop
(bad)
ds
jge
xchg
pushf
mov
mov
or
cwde
cmps
scas
movs
pop
lock
mov
lock
or
inc
mov
rcr
cmp
scas
stos
push
push
xchg
adc
jb
push
pop
push
dec
call
add
pop
add
mov
sub
aas
mov
lock
add
jle
lock
aaa
das
push
sub
mov
dec
sbb
int
dec
addr16
retf
or
arpl
sub
sub
clc
cmps
jg
and
and
cmp
mov
mov
push
aad
xor
sbb
test
pop
pushf
add
mov
pop
in
sbb
xor
adc
dec
loope
mov
jg
cld
(bad)
repz
scas
(bad)
mul
adc
xchg
xchg
cs
retf
inc
inc
fucomi
xor
sbb
pop
pop
mov
test
jg
fld
pop
dec
sahf
adc
push
mov
adc
pushf
cs
pop
loope
ret
xchg
sub
in
test
push
mov
daa
popa
aad
mov
xchg
cli
push
xor
lods
lods
les
out
jno
mov
dec
inc
out
sub
ret
dec
aaa
ja
or
jg
cld
iret
call
(bad)
fstp
mov
push
sti
ins
daa
rol
fs
inc
(bad)
ffreep
sbb
mov
cmps
mov
test
daa
enter
cmp
int
xchg
out
sbb
loopne
std
inc
enter
add
iret
scas
dec
outs
mov
inc
mov
jge
out
or
mov
mov
adc
mov
fsubr
lods
jo
cmps
xor
jmp
pop
in
pop
arpl
cld
sbb
hlt
cmc
sbb
mov
push
cmp
push
add
(bad)
pop
popf
push
test
xchg
adc
popf
sub
push
inc
daa
or
dec
cmp
or
jecxz
loopne
sar
xor
mov
push
add
in
mov
sbb
pop
mov
xchg
sbb
xor
mov
lock
outs
mov
aam
mov
cmps
imul
sbb
movs
sub
loope
pop
pop
xbegin
sub
xchg
fwait
and
aad
inc
pop
mov
dec
int3
add
push
scas
inc
pop
popa
sub
lock
test
fst
ror
pop
retf
scas
sub
neg
fistp
mov
rol
outs
retf
retf
popa
adc
ret
and
iret
and
lods
cs
jae
js
in
sub
mov
jl
cmp
xchg
mov
push
push
repnz
mov
push
mov
stc
scas
push
movs
jnp
dec
sub
sar
out
sti
xor
rol
popf
enter
inc
mov
push
dec
push
jp
loopne
call
jmp
in
retf
jg
push
xor
pop
ins
mov
sbb
bound
out
imul
(bad)
mov
xor
lods
std
pushf
jecxz
xchg
push
sbb
inc
ja
cwde
clc
(bad)
pusha
stos
xchg
xchg
shl
pop
stos
push
out
div
mov
ins
lods
out
rcr
ins
add
mov
pusha
and
mov
cmc
aaa
xchg
pop
mov
enter
or
dec
mov
test
push
into
dec
jge
and
fild
aaa
pop
retf
out
dec
and
xor
sub
movs
jns
sahf
arpl
xchg
pop
movs
adc
push
or
cli
add
jb
mul
cmps
mov
mov
xor
push
es
bound
leave
call
push
jmp
icebp
stos
call
fldcw
in
adc
mov
inc
and
or
(bad)
mul
aaa
push
out
cmp
mov
dec
mov
xor
and
sub
mov
mov
add
mov
cmps
dec
mov
je
xchg
push
lods
mov
out
(bad)
mov
pop
(bad)
mov
xor
mov
imul
pop
in
ror
mov
rol
fist
mov
cmp
inc
repz
(bad)
repnz
outs
mov
mov
and
xchg
push
jns
sub
push
sar
fdivr
call
clc
js
adc
and
test
sbb
call
add
mov
xor
ss
stc
push
(bad)
jmp
mov
sbb
pop
push
aaa
fstp
loop
repnz
inc
sub
push
inc
mov
sub
lahf
jbe
loopne
sub
mov
ror
loope
inc
xor
mov
hlt
sub
test
dec
or
pop
(bad)
cmp
in
mov
mov
inc
fimul
jl
adc
int3
jle
xchg
les
xchg
aaa
push
adc
pop
movs
hlt
mov
stos
pop
push
xchg
sub
jg
(bad)
fnstsw
dec
xrelease
dec
cmp
movs
aaa
stc
jmp
ja
push
shr
sub
les
jg
add
repnz
sub
cs
mov
int
pop
into
inc
movs
jae
fsubr
xchg
fisub
mov
sbb
mov
iret
mov
lods
mov
mov
sub
add
add
add
add
add
popa
add
mov
out
add
add
add
add
loope
cmp
(bad)
add
add
add
and
leave
push
ret
pop
jp
and
pop
push
std
or
ja
inc
in
push
fistp
fwait
push
out
and
sub
div
movs
test
xlat
push
mov
imul
jae
cdq
push
adc
test
fs
cdq
add
stos
into
(bad)
xor
cmps
mov
push
pop
xor
pushf
sar
scas
loope
daa
or
cmp
mov
aas
aam
mov
std
je
cld
and
lods
pushf
mov
mov
lock
push
dec
movs
aam
xor
adc
sub
inc
lock
ror
or
pop
fnstcw
push
mov
rcl
add
inc
rcl
adc
fld
push
push
push
dec
add
bound
inc
sahf
and
arpl
mov
pop
outs
in
jbe
pop
stc
xor
fcom
and
(bad)
cwde
in
lods
pop
or
jo
mov
mov
pop
mov
and
fs
mov
iret
pushf
mov
inc
jle
arpl
addr16
ficomp
shr
pop
jns
pop
inc
mov
inc
imul
fsub
stos
inc
mov
jo
out
mov
dec
mov
test
and
sub
mov
and
xchg
call
dec
mov
int
sub
arpl
pop
test
repnz
sbb
xor
call
dec
popa
and
test
gs
mov
(bad)
pop
sbb
pushf
leave
pop
dec
(bad)
jl
xchg
movs
dec
ret
lahf
ret
cmp
lock
pop
sbb
mov
leave
dec
mov
xchg
test
add
mov
(bad)
cli
xlat
add
push
ficom
into
jg
(bad)
inc
repnz
nop
iret
in
jb
out
movs
xor
xor
dec
mov
sub
neg
jp
dec
rcl
je
adc
fcomp
or
push
inc
mov
xchg
ficomp
xchg
(bad)
mov
popf
adc
jmp
mov
into
mov
xchg
pop
and
(bad)
in
shl
jnp
js
pop
push
fs
add
jbe
retf
shl
rcr
lahf
push
lods
loop
add
hlt
aas
aad
mov
(bad)
lods
outs
or
adc
aad
mov
cdq
cmps
test
push
sub
push
lea
xor
xlat
outs
dec
dec
jo
push
lods
pusha
dec
push
add
int
(bad)
jl
ret
dec
(bad)
(bad)
clc
cli
add
sub
mov
and
ret
or
popa
xchg
xchg
xchg
push
or
fwait
dec
ss
adc
add
mov
je
pop
adc
in
cmc
xchg
pop
leave
leave
sahf
bound
sbb
sub
pop
sbb
scas
pop
jmp
xchg
inc
add
mov
and
call
xor
inc
shl
imul
add
jmp
scas
imul
pop
jle
and
lahf
add
jle
jle
mov
push
pop
cli
sbb
push
inc
in
inc
movs
fst
adc
mov
jp
mov
mov
fwait
aas
dec
aad
outs
aaa
test
mov
jg
jns
cwde
mov
sub
cmp
in
fidiv
fwait
sbb
pop
sbb
sub
inc
(bad)
not
scas
scas
push
sbb
(bad)
sbb
fs
push
inc
icebp
inc
shr
cdq
adc
inc
sbb
or
lock
jg
pusha
imul
movs
ins
xlat
(bad)
push
ins
cmp
test
mov
mov
push
add
divps
imul
adc
icebp
fmul
into
fscale
xchg
scas
xchg
out
aad
ins
sub
jo
faddp
test
pop
jg
data16
loop
stc
in
frstpm(287
jmp
jo
leave
mov
les
mov
mov
std
sub
int3
pop
jae
arpl
cli
or
and
mov
jb
mov
cwde
das
pusha
iret
sub
into
sub
push
in
test
pop
or
or
adc
pop
scas
mov
mov
cdq
clc
outs
cs
pop
adc
or
aam
push
sub
aam
mov
icebp
pop
movs
add
js
pop
push
gs
movs
dec
dec
sub
sub
mov
mov
daa
and
add
cmp
or
push
shl
cmp
int
ins
(bad)
cmps
icebp
or
test
jb
aaa
jb
push
sub
inc
mov
cdq
or
mov
rcl
dec
aaa
jl
sbb
popa
xor
popf
nop
push
push
(bad)
cmps
js
inc
ja
fdivr
cs
sbb
adc
mov
ror
int3
sub
cdq
inc
xchg
in
lea
and
icebp
out
push
jne
aaa
and
pop
add
rol
mov
jno
hlt
popa
mov
jge
out
in
repnz
push
inc
and
sub
test
xchg
mov
or
xlat
push
js
and
jle
enter
jge
mov
inc
int
into
(bad)
fidiv
xchg
xchg
xchg
test
dec
test
jo
(bad)
iret
in
aad
xlat
lds
push
xchg
jnp
sub
xchg
jge
add
xchg
pushf
cmc
or
add
push
sbb
mov
pop
push
lods
push
xchg
(bad)
inc
je
es
sti
xlat
and
mov
add
jl
sub
icebp
adc
ss
rcl
rol
cmp
jno
repnz
and
(bad)
into
(bad)
jae
mov
lods
xor
lock
push
mov
ja
in
leave
fsubr
add
mov
pop
div
clc
inc
rcr
mov
clc
mov
xor
or
fdiv
mov
push
cmps
push
ins
sbb
dec
(bad)
into
jle
cmp
sbb
pop
lea
and
mov
cmp
cmp
push
add
and
pop
mov
scas
je
adc
nop
mov
xchg
sar
ficom
xchg
(bad)
xchg
lods
call
push
in
imul
cmp
mov
and
mov
xchg
mov
mov
jmp
pop
cmp
into
add
ror
or
add
repz
mov
or
pop
jbe
repz
xchg
and
and
lds
jnp
push
push
inc
pop
mov
movd
pop
adc
jl
ins
test
sub
or
in
loope
mov
mov
call
sub
retf
push
test
retf
dec
lds
aaa
test
popf
jo
adc
cmp
xor
mov
sbb
iret
adc
aaa
jo
and
mov
and
scas
mov
daa
inc
xchg
add
sbb
call
stc
or
xor
cmps
mov
xchg
iret
xchg
or
das
sub
and
ret
ss
cmp
mov
dec
addr16
mov
out
and
jae
hlt
jo
imul
mov
popf
fist
cld
sahf
out
sbb
inc
icebp
rcl
mov
mov
push
pop
movs
jmp
jbe
in
or
xchg
mov
retf
mul
sub
xchg
hlt
push
ds
and
or
fadd
mov
adc
mov
and
jno
mov
xchg
add
push
xchg
fisub
popf
fwait
loopne
push
dec
gs
mov
lds
mov
out
leave
inc
stos
inc
cwde
imul
jle
ror
mov
fwait
xchg
mov
add
pop
in
cmp
push
xchg
jmp
test
cs
dec
ds
retf
call
sti
das
sbb
cwde
inc
sbb
push
cld
dec
rcl
jge
mov
jecxz
mov
je
jae
mov
add
push
add
out
cdq
dec
outs
push
xchg
lahf
push
sbb
cli
aam
push
adc
(bad)
cwde
xchg
sub
xor
outs
push
dec
int
sbb
retf
mov
add
loop
pop
and
mov
pop
push
dec
lods
call
xchg
pusha
nop
in
sbb
xchg
sub
fdivr
cmp
loopne
stc
or
mov
fdivr
and
and
fdiv
jns
jge
(bad)
xor
out
mov
and
mov
mov
mov
mov
adc
mov
cmp
out
sbb
jo
sahf
adc
jno
ins
sti
pop
mov
in
unpcklps
aas
loop
sbb
jl
pop
pop
(bad)
mov
test
repnz
push
pop
call
mov
fcomp
rol
sbb
adc
sahf
out
jb
sub
mov
les
inc
push
lods
sbb
popa
xchg
jns
mov
iret
inc
out
xor
sbb
scas
stc
out
xor
or
hlt
movs
daa
mov
xor
scas
lods
enter
ins
xchg
jmp
mov
jae
cld
mov
pop
sub
adc
fs
jle
scas
adc
rol
or
in
pop
fadd
das
adc
js
aam
xchg
xor
lea
mov
jnp
mov
mov
sub
mov
aam
shr
leave
or
les
or
lea
cmp
nop
mov
add
mov
cmp
in
cmps
xor
mov
or
mov
lea
enter
sub
inc
lahf
int3
pop
jnp
fucomp
inc
push
in
fist
cmp
xor
xor
fistp
inc
out
push
movs
movs
push
cli
xor
jno
pop
mov
inc
addr16
scas
adc
mov
ja
mov
pop
inc
mov
cmp
jbe
mov
test
pop
lock
pop
fsub
dec
xor
pushf
pop
int3
cmp
sub
cmp
sbb
daa
das
push
dec
lods
movs
popf
mov
data16
lea
xchg
in
jo
cmp
mov
mov
dec
xchg
outs
cmc
(bad)
neg
push
sbb
jl
jb
movs
cs
retf
xchg
push
sub
push
mov
movs
mov
xchg
push
and
and
xchg
cmp
add
push
jle
popf
js
fstp
mov
jne
add
add
add
or
int
jne
add
add
add
add
xchg
add
add
add
add
fst
pop
pop
icebp
cdq
movs
mov
cmps
adc
hlt
movs
and
inc
dec
ins
ror
clc
imul
adc
in
lods
xchg
cli
inc
mov
inc
cdq
jg
mov
adc
add
fdivrp
push
cmps
sbb
and
out
mov
sbb
push
push
cmp
xchg
test
out
mov
daa
mov
or
repz
sbb
pop
stos
daa
ins
fcomp
ds
pop
jb
ins
test
ins
and
sbb
sub
into
mov
leave
mov
jnp
add
xor
pusha
fwait
test
mov
xchg
fdiv
or
fbld
xor
xlat
jmp
sbb
imul
cmc
or
jb
mov
rcr
fdivr
sub
inc
pop
arpl
out
in
mov
inc
(bad)
idiv
not
push
and
pushf
aam
or
in
clc
cld
lahf
push
jecxz
sti
push
mov
cmp
(bad)
cdq
pop
mov
mov
clc
test
push
pop
sub
add
jle
inc
push
cmp
pop
jo
push
pop
mov
sbb
ds
add
xlat
enter
jl
or
and
and
dec
cli
aas
cmp
mov
pop
add
movs
pop
sahf
mov
ror
add
in
imul
dec
xor
or
dec
enter
xchg
mov
cld
or
dec
inc
cmp
sbb
data16
aam
fild
popf
inc
mov
shl
and
push
sub
in
pop
mov
inc
xchg
test
test
pop
outs
ins
outs
imul
push
cmp
cmp
cmc
fistp
in
repnz
xor
imul
cmp
sub
push
js
xchg
stos
jno
pop
das
jae
(bad)
js
inc
(bad)
lahf
inc
xor
and
push
pop
clc
sar
mov
mov
(bad)
rcr
pop
sbb
scas
pushf
pop
fisub
fstp
push
mov
aas
cs
push
xchg
mov
stos
movs
inc
scas
in
cli
inc
add
xor
sub
pop
clc
fild
lods
movs
mov
pop
out
inc
jge
scas
scas
push
adc
cld
data16
dec
mov
adc
pushf
jbe
cld
arpl
xchg
or
push
imul
rcl
mov
lea
push
sub
jmp
cmp
xchg
adc
add
jns
add
cmp
mov
popf
jb
das
sahf
test
pop
shl
inc
and
loopne
and
mov
mov
mov
push
xlat
pop
sahf
pop
lea
or
pop
cmp
inc
jne
pushf
stc
bound
and
push
push
movs
xor
cmp
cmp
test
xchg
and
popf
cld
pusha
jecxz
sub
cmps
jmp
add
adc
retf
cdq
clc
push
jge
out
rcr
cmc
fmulp
in
jl
into
xor
jecxz
inc
aaa
add
push
jecxz
dec
cmc
ret
mov
push
and
mov
popf
inc
ret
inc
mov
ret
and
mov
scas
xchg
(bad)
jge
jb
pop
jecxz
pop
rcr
leave
or
inc
call
out
call
test
retf
add
call
xor
sbb
mov
dec
or
sbb
adc
inc
dec
push
loope
lds
leave
or
and
js
dec
push
or
fwait
push
cmp
out
and
lahf
push
pop
out
jmp
mov
add
or
gs
xor
inc
jecxz
push
mov
push
mov
mov
mov
test
jmp
add
mov
xchg
inc
mov
mov
test
pop
jno
or
jns
vpsubd
or
enter
mov
ds
int3
cmp
jg
mov
hlt
das
ss
shl
in
jl
pop
sbb
push
sub
inc
xchg
xchg
mov
sub
arpl
lea
mov
imul
pushf
or
inc
loopne
or
retf
aad
sub
push
sub
test
push
movs
push
repnz
adc
sbb
out
jle
dec
in
adc
xchg
mov
adc
movs
(bad)
jl
pop
stc
mov
leave
and
(bad)
push
addr16
int
sub
or
test
mov
hlt
sar
xchg
out
shl
mov
xchg
std
ficom
sub
jbe
movs
arpl
fldenv
enter
sub
gs
fist
xchg
xor
and
pop
movs
ins
jmp
and
xor
fidiv
or
mov
add
fmul
stc
mov
fsub
adc
ins
movs
outs
fld
je
inc
cwde
adc
xchg
adc
in
jp
sbb
mov
jae
adc
imul
retf
xor
repnz
jp
hlt
data16
cs
adc
pop
loopne
loopne
mov
mov
adc
cs
hlt
push
cwde
push
mov
cwde
mov
sub
adc
cdq
add
loope
adc
or
arpl
mov
cwde
jmp
sub
dec
jle
jmp
jg
repnz
inc
call
scas
xchg
mov
ret
ds
push
push
sbb
scas
in
test
jnp
cmp
popa
add
dec
jp
jbe
out
mov
fmul
cmp
mov
fmul
mov
mov
sub
pop
xchg
mov
add
fbstp
cwde
pop
sub
push
add
xchg
cmp
icebp
pop
pushf
pop
int3
jno
ror
mov
pop
mov
mov
js
test
scas
cmp
sub
hlt
jle
xchg
cli
cmp
es
aam
jmp
mov
sbb
jg
movs
add
jge
stc
pop
xor
push
add
cmp
cld
cmp
jns
in
neg
mov
sbb
or
fst
pop
mov
fcom
push
xlat
lahf
mov
in
xchg
test
xchg
dec
jp
cmp
inc
(bad)
mov
adc
jo
mov
lahf
cmp
push
mov
pop
ficom
bound
lock
jmp
dec
push
mov
push
test
inc
push
movs
mov
iret
xchg
out
ds
cmp
in
sahf
leave
test
cmc
and
pop
cmp
xlat
pop
movs
inc
or
movlps
out
(bad)
cs
push
jmp
out
jmp
fnstcw
cmps
int3
pop
add
mov
iret
or
sahf
add
add
jb
cmps
mov
xchg
out
les
jo
scas
mov
repz
int3
dec
into
sub
aaa
mov
cwde
push
cmp
cmp
stos
cmp
outs
dec
or
and
aad
in
popf
sbb
xor
retf
xor
div
xchg
data16
imul
jns
mov
sub
frstor
scas
jmp
jl
pxor
aad
int3
dec
into
cli
mov
and
dec
js
xor
push
fiadd
mov
js
fistp
cmc
fld
xor
test
(bad)
xchg
mov
hlt
mov
inc
xor
lock
repnz
pop
test
xchg
lods
hlt
stc
sub
enter
inc
dec
ds
xchg
or
mov
xchg
aaa
(bad)
ss
mov
loope
push
ret
retf
push
fadd
pop
sub
ja
addr16
or
leave
mov
fcom
xchg
ror
cmp
dec
popf
push
movs
ret
and
sub
pushf
shl
sub
imul
cmp
push
mov
push
hlt
pop
rcl
add
push
cwde
cwde
les
xor
in
fimul
lods
or
test
cwde
ret
lea
mul
call
inc
push
arpl
mov
mov
push
int3
mov
imul
xor
cli
mov
das
leave
add
push
sub
xor
adc
jmp
sub
in
sbb
adc
les
lds
repz
inc
fisttp
in
inc
repz
mov
or
sub
xchg
movs
int3
push
int3
xlat
cwde
xchg
fdivr
mov
xor
ds
jns
das
inc
mov
pop
test
add
popa
push
pop
push
call
ins
call
mov
fsub
data16
icebp
xchg
xchg
add
or
pop
movs
stc
pop
jbe
in
lds
or
out
ins
pushf
cmp
pop
push
push
out
fnstcw
rcl
iret
rcl
mov
pop
call
cmp
(bad)
daa
arpl
retf
pop
sub
addr16
adc
mov
pop
icebp
into
add
push
xchg
sub
mov
and
jmp
pop
es
test
arpl
pop
arpl
jno
fadd
into
cld
fisttp
rcr
lds
pop
dec
adc
inc
popf
xchg
outs
mov
into
sub
ja
cmp
in
aaa
jmp
adc
fsubr
int
icebp
xor
and
movs
inc
or
sbb
pop
call
mov
clc
sub
xchg
sub
push
jge
js
pop
jb
fst
cmc
xor
nop
xor
call
add
lea
imul
mov
adc
js
in
fsub
aam
imul
cwde
jb
dec
call
scas
test
frstor
(bad)
aad
inc
add
cmp
call
inc
and
mov
fldcw
adc
xor
and
pop
enter
or
jle
test
dec
and
fisub
and
dec
add
sar
jo
ror
stc
jae
mov
(bad)
in
pop
scas
inc
(bad)
inc
adc
bound
icebp
cwde
mov
out
add
xchg
into
sub
(bad)
aad
sbb
iret
sub
pop
fldcw
sahf
jno
sub
neg
push
fcom
sbb
push
(bad)
dec
je
jle
sbb
push
aad
scas
add
cld
ficom
push
adc
sub
int3
je
popa
sbb
fnstenv
int
mov
aad
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
dec
add
mov
pop
add
add
add
add
add
and
add
add
add
mov
add
add
add
movs
add
fadd
add
neg
add
add
add
add
add
jne
and
add
inc
scas
out
add
add
add
add
add
add
mov
aas
add
add
add
add
add
add
imul
inc
inc
add
add
add
add
out
add
add
sbb
aaa
xor
js
add
add
out
add
add
add
add
imul
add
sbb
xor
xchg
add
jne
add
sub
push
ds
push
sbb
sbb
imul
adc
push
adc
xor
xor
fild
pusha
neg
fwait
add
mov
pop
mov
mov
sbb
adc
add
xlat
mov
rcl
jae
in
dec
and
jbe
push
and
sbb
in
mov
stc
jno
xchg
add
test
sbb
cmp
jmp
push
push
add
clc
lea
push
js
cmp
test
and
mov
xchg
pop
sbb
pop
and
int
mov
fisttp
mov
push
arpl
sahf
and
jbe
sahf
sbb
retf
fwait
mov
aam
push
rcl
jno
in
faddp
jmp
jmp
loopne
leave
xchg
fimul
inc
arpl
mov
jecxz
pop
add
mov
xchg
xchg
mov
mov
arpl
mov
bound
adc
and
ret
popf
push
bound
jl
cli
mov
daa
or
stos
fidiv
addr16
dec
mov
sub
jle
sbb
fistp
sbb
out
mov
out
cmp
jle
fwait
inc
xchg
pop
call
daa
(bad)
mov
xchg
mov
jb
arpl
aaa
popf
outs
dec
xchg
dec
scas
mov
xor
movs
fisub
cmps
and
out
mov
xor
push
outs
cmp
ror
dec
mov
jmp
imul
out
xchg
jmp
outs
js
xchg
sub
ins
fs
push
arpl
jecxz
cmp
jp
dec
sub
fstp
pop
(bad)
fild
push
add
xor
jp
lods
inc
mov
nop
(bad)
mov
std
inc
je
cmp
xchg
push
rcr
jle
sbb
xchg
sar
or
mov
jg
mov
ror
add
and
dec
in
cmps
or
outs
ret
add
push
clc
fs
mov
push
sahf
and
fisttp
jp
cmps
in
mov
mov
ror
(bad)
sbb
out
outs
adc
inc
xlat
push
aas
mov
and
ins
add
iret
movs
push
sbb
sbb
inc
jmp
xor
pop
std
into
fst
mov
cmp
les
add
adc
faddp
nop
arpl
dec
pushf
jno
mov
das
cmp
test
outs
adc
ror
mov
pop
es
and
inc
test
jp
inc
mov
dec
pop
dec
xchg
xor
icebp
mov
jne
scas
lock
jb
hlt
leave
rcl
jnp
jae
push
jno
in
dec
dec
push
movs
in
sub
xchg
(bad)
dec
cli
div
or
jmp
adc
mov
cld
and
cmp
or
js
out
add
push
mov
out
es
test
xchg
lea
xor
push
dec
test
inc
arpl
int
mul
inc
retf
(bad)
shl
scas
sub
(bad)
pop
(bad)
out
cs
mov
aad
test
loope
sti
xor
jmp
and
jae
mov
(bad)
jmp
mov
fimul
inc
cmp
mov
pop
ins
cli
inc
fld
add
cdq
(bad)
out
clc
mov
mov
and
xchg
push
mul
aaa
aam
jne
pushf
adc
into
inc
sbb
lock
dec
add
shr
test
fldcw
jne
ins
mov
xor
std
dec
mov
jne
test
jmp
mov
push
mov
movs
sti
hlt
std
mov
or
jbe
popf
stos
cmc
mov
jmp
das
(bad)
aas
sbb
jb
inc
mov
fs
sbb
aas
add
xchg
pop
mov
out
ds
ins
out
cwde
mov
mul
imul
sbb
inc
out
jns
sub
and
dec
scas
fdiv
aaa
fucom
addr16
(bad)
daa
loop
ficom
pop
lahf
add
xchg
mov
xor
fbld
sbb
jb
push
pushf
pop
add
in
push
out
push
icebp
stos
in
leave
clc
push
addr16
pop
cli
stos
in
or
jl
push
pop
jecxz
imul
adc
sbb
xor
or
das
cmp
cmps
stos
pop
mov
mov
mov
in
in
sti
gs
retf
mov
bound
pop
(bad)
fstp
push
data16
fdivr
ins
dec
(bad)
cvtdq2ps
ret
cld
or
das
push
jle
dec
fwait
jge
xchg
popa
jg
movs
pop
inc
bound
into
jecxz
push
ins
outs
and
scas
in
out
jge
fcomp
cmps
icebp
stc
fwait
adc
dec
jp
xor
and
mov
out
popa
iret
inc
sar
aaa
retf
in
icebp
cmp
pop
jecxz
ror
loope
sbb
ret
and
dec
adc
retf
and
call
sti
pop
stos
push
test
sub
test
lahf
cmp
aad
push
xchg
inc
fs
retf
add
mov
mov
sar
mov
cmp
js
ja
mov
sub
aam
inc
retf
pop
mov
imul
and
adc
push
adc
add
fist
jmp
sbb
mov
sbb
sbb
ja
cmps
sub
ds
enter
cmp
inc
iret
sub
pop
sbb
lods
xchg
repnz
cmps
in
imul
push
xlat
scas
dec
xchg
clc
cmp
pop
icebp
dec
daa
cmp
inc
call
add
pop
mov
stos
push
cmps
or
xchg
les
jno
push
out
fcmovnbe
jmp
jg
iret
pop
or
rcr
ins
mov
mov
xor
rol
aaa
mov
cmp
xor
imul
xor
test
add
(bad)
push
retfw
test
and
pop
inc
jns
rcl
add
inc
mov
jmp
jnp
fidivr
retf
mov
jnp
jmp
pmuludq
mov
rcl
aam
dec
(bad)
rcr
cmp
cmp
and
sbb
ror
xor
dec
int
sbb
das
sbb
inc
das
out
adc
stc
push
rol
sbb
ficomp
clc
aaa
cwde
mov
loopne
aaa
lds
out
leave
fcom
mov
pop
scas
fdivr
pusha
repz
popa
push
int
ins
lods
fnsave
inc
fild
dec
or
inc
es
(bad)
cmp
fldcw
ins
sub
je
sbb
ficom
fild
sbb
nop
outs
xor
ins
sbb
sub
push
push
dec
cwde
jmp
aam
push
pusha
mov
and
imul
cmp
js
outs
and
mov
sbb
imul
neg
cmp
xchg
add
xchg
out
(bad)
loopne
bound
repz
push
jne
adc
mov
jg
lahf
(bad)
jbe
xlat
call
out
stc
mov
xor
mov
push
cmp
int3
fidivr
add
test
gs
call
inc
push
sub
dec
retf
call
adc
xchg
imul
ror
push
(bad)
cwde
mov
jmp
mov
mov
mov
xchg
mov
xor
rcr
inc
outs
inc
pop
and
stc
mov
mul
dec
ins
mov
push
and
mov
stc
retf
pop
xlat
or
loope
fistp
retf
pop
sbb
fdivr
sub
pop
pop
outs
xor
push
ss
jae
je
mov
inc
xchg
add
add
out
(bad)
imul
ror
or
and
jmp
xor
sub
loope
xchg
adc
ds
aas
xchg
fldenv
inc
nop
and
add
movs
(bad)
mov
add
hlt
cmp
sub
sub
add
mov
dec
js
and
or
lds
cmp
mov
dec
int3
pop
je
outs
(bad)
sbb
ins
jecxz
sbb
pop
cmps
xchg
sar
fisubr
test
jecxz
loop
cdq
sub
mov
push
jbe
and
mov
ror
aas
test
push
aas
adc
xchg
inc
aad
jb
imul
add
loopne
xor
xor
xchg
pusha
in
and
iret
push
call
in
add
dec
adc
xchg
inc
dec
push
mov
inc
nop
and
(bad)
xchg
cmp
add
xchg
xchg
test
pop
in
or
sub
in
push
mov
mov
cmp
fcmovnbe
je
mov
test
mov
iret
jno
test
add
int
cmps
xor
fsubr
gs
push
dec
mov
sbb
adc
call
out
xchg
cmp
retf
add
sub
je
js
xlat
add
adc
sub
jmp
add
sar
mov
outs
sub
xor
push
push
cmps
cmp
mov
not
es
xchg
mov
mov
jb
int3
push
push
jp
inc
es
data16
nop
sub
cmc
outs
imul
inc
or
mov
clc
loope
test
and
sub
dec
mov
mov
and
js
test
sbb
mov
pop
js
(bad)
out
imul
sub
push
pop
push
or
jmp
mov
mov
enter
inc
cwde
and
mov
jns
sub
add
xchg
push
outs
stc
int3
jbe
movs
arpl
std
scas
out
mov
scas
aam
iret
out
ret
inc
js
mov
add
or
sbb
mov
push
out
mov
test
xchg
jbe
xchg
push
out
repz
sti
cmps
mov
push
mov
mov
mov
xchg
rcr
and
mov
jns
outs
xor
addr16
fcom
lods
outs
loopne
dec
xchg
push
scas
pop
and
shl
mov
int3
test
mov
mov
ss
fsubr
xchg
(bad)
pop
inc
add
mov
mov
inc
sar
int
xor
jmp
int
sar
pop
dec
and
or
(bad)
cmc
out
jno
pop
loop
ins
add
sbb
push
xchg
loope
clc
ins
cwde
or
je
(bad)
fldcw
sbb
sub
pop
out
lahf
push
xor
and
pop
fisubr
fisubr
call
add
add
push
jne
add
add
add
inc
inc
ins
js
test
fs
ss
xor
xor
test
(bad)
mov
scas
pop
test
fwait
xchg
loopne
daa
xor
iret
adc
lods
mov
pop
mov
xor
push
gs
xor
push
dec
hlt
xchg
pop
mov
push
loop
cmp
sbb
sub
out
jne
or
pop
pop
mov
cmp
sbb
icebp
ins
fwait
pushf
xlat
popf
lods
out
cmovns
push
push
movs
xor
sub
ret
(bad)
data16
adc
ret
loope
sbb
mov
scas
out
out
sub
xchg
cld
mov
dec
das
hlt
xchg
mov
mov
and
retf
pop
sub
mov
hlt
into
test
(bad)
and
cmp
out
cmp
pop
lahf
and
dec
xlat
xchg
js
sub
test
loopne
push
cmp
sub
xor
stos
pop
add
inc
mov
test
scas
adc
pop
aas
(bad)
jne
popa
mov
scas
rol
add
pop
adc
cmc
jecxz
dec
test
inc
ins
fwait
call
repnz
lds
addr16
mov
push
ficomp
jno
fcmovu
imul
mov
pop
aaa
aaa
outs
inc
mov
mov
mov
in
shr
cmps
aam
push
sbb
out
fisub
jnp
(bad)
mov
mov
push
into
fwait
push
mov
retf
cmp
push
int3
scas
jno
loopne
fwait
or
push
sub
(bad)
sahf
cmp
es
add
xor
xor
out
add
cs
or
bound
in
push
jle
pusha
sub
dec
fistp
mov
iret
enter
cmp
xchg
pushf
xchg
xchg
ret
movs
lahf
test
mov
push
nop
ja
jno
dec
pop
int3
or
iret
clc
xor
mov
lods
jle
adc
inc
jp
and
push
sbb
pop
dec
jmp
je
das
cwde
sub
shr
xlat
inc
xchg
push
jb
aas
ret
rcl
and
jmp
popa
inc
inc
in
mov
cmps
cli
nop
pop
mov
mov
enter
inc
inc
ret
repnz
push
aam
sub
retf
sub
adc
ret
mov
dec
pushf
cmps
outs
xor
xor
cmp
test
cmp
sub
xchg
stos
sub
out
cmp
xchg
shl
daa
or
enter
rol
cli
sbb
inc
adc
aad
loopne
mov
jnp
pop
popa
adc
cmps
sbb
xor
push
fbld
dec
pop
mov
inc
in
outs
add
mov
fwait
xchg
jg
pop
pusha
loopne
(bad)
xlat
aad
add
mov
xchg
xor
out
shl
repnz
pop
dec
jge
mov
xlat
in
and
cmp
add
(bad)
jmp
xchg
sbb
push
push
cli
sbb
jle
cli
mov
mov
test
sbb
retf
push
ja
or
mov
ja
mov
mov
test
dec
cmp
sub
mov
cmp
enter
sub
xchg
jae
mov
aas
rol
pop
jle
shr
jge
xlat
stc
sub
push
adc
push
ret
out
mov
test
or
lea
leave
frstor
push
sub
test
adc
sbb
sub
cmp
xchg
adc
in
ret
xor
adc
iret
add
cli
mov
add
test
daa
sub
cld
je
mov
push
sbb
add
pop
loope
(bad)
call
jge
clc
dec
xchg
clc
(bad)
seto
sbb
icebp
vpperm
mov
push
outs
stos
xor
adc
(bad)
(bad)
fs
lock
imul
mov
(bad)
fistp
je
mov
mov
add
mov
jne
mov
mov
and
sahf
mov
xor
xor
fld
dec
arpl
int
push
dec
pop
imul
xor
xor
jmp
(bad)
mov
in
call
mov
cmp
stc
jecxz
dec
pop
mov
add
pop
xor
sbb
outs
jge
(bad)
addr16
push
icebp
xchg
call
hlt
aas
ja
stos
push
cmp
scas
pop
sub
adc
mov
fild
int
and
cmp
out
xchg
mov
sub
dec
mov
stos
sub
mov
or
jle
cmp
frstor
xlat
push
(bad)
out
or
mov
aam
adc
fisubr
dec
jg
pop
sti
bound
adc
fndisi(8087
mov
popa
push
arpl
sahf
sub
in
mov
les
aaa
lds
adc
inc
jnp
add
ds
call
xchg
xor
daa
ins
pushf
mov
ss
pop
into
mov
add
ret
adc
lock
xchg
jg
scas
or
fadd
call
outs
mov
mov
dec
ins
dec
iret
pop
fcmovu
sub
pop
sbb
repz
loope
rcr
jmp
mov
mov
repz
test
rcr
or
add
cmp
jecxz
xlat
cmps
mov
fisubr
jge
and
jns
ret
and
inc
add
jle
loopne
xchg
rcr
add
push
mov
jne
ja
test
repnz
cmp
aad
cwde
aad
jns
jg
adc
jge
movs
and
comiss
cld
jge
xor
push
pop
push
cmp
adc
aas
sbb
dec
mov
xor
adc
cmc
(bad)
mov
mov
xor
jle
pop
enter
push
and
dec
cmp
rcr
(bad)
jo
ins
jg
or
or
add
(bad)
xor
dec
sub
out
mov
not
fsubr
mov
xchg
jae
repnz
jle
cdq
sbb
mov
adc
je
ins
mov
dec
adc
xchg
sbb
outs
mov
fmulp
iret
outs
cli
adc
(bad)
push
sub
rol
add
xor
pop
dec
retf
call
cdq
call
clc
mov
test
clc
dec
sbb
or
xor
js
(bad)
ss
shr
jne
push
cld
or
sbb
and
enter
call
pushf
push
jo
jl
test
xor
cmp
lds
add
pop
mov
retf
mov
ins
push
adc
mov
inc
jle
std
push
test
inc
push
loopne
jae
gs
cmps
push
cwde
adc
fs
daa
xchg
push
cs
jo
xor
int
mov
or
dec
xchg
in
scas
jne
test
ins
and
retf
int3
fdiv
pop
xlat
inc
jmp
xor
stos
dec
(bad)
sub
add
bound
das
xor
mov
test
xchg
or
call
imul
adc
sub
cmps
jne
js
add
das
mov
into
(bad)
lock
call
out
pop
mov
sti
js
mov
imul
inc
xchg
sub
daa
nop
xchg
inc
(bad)
add
jg
fyl2xp1
scas
cli
mov
sbb
cdq
or
pushf
fs
test
dec
lods
or
mov
jge
sti
enter
or
cmp
push
mov
inc
xchg
pop
or
inc
mov
push
(bad)
mov
imul
jp
cmp
es
add
add
daa
es
popa
icebp
sub
fnstsw
xor
jmp
push
mov
scas
jno
add
shl
dec
mov
jmp
jl
cmp
cs
jno
adc
and
stos
pop
jge
ja
mov
out
xchg
sub
inc
imul
stc
adc
push
sub
std
inc
push
lods
add
repnz
jge
(bad)
pop
xor
xchg
out
lods
cmp
pop
in
fldcw
sbb
fisttp
pop
and
dec
dec
push
scas
xor
jb
loopne
cmc
popf
psrlw
mov
mov
xchg
out
test
or
fwait
xchg
pushf
es
push
fprem1
out
bound
sub
popa
sar
xor
popf
cld
mov
mov
cmps
or
pusha
sbb
das
inc
jl
scas
cmc
jno
fwait
(bad)
jbe
jg
fnstcw
xchg
(bad)
(bad)
pop
jmp
mov
mov
fs
fimul
adc
retf
add
cmp
mov
jmp
dec
inc
cmps
add
sahf
daa
xchg
dec
popa
enter
sub
jmp
mov
pop
aas
mov
mov
scas
push
sub
leave
imul
or
(bad)
out
retf
push
xor
xchg
cmp
push
sar
call
add
dec
call
inc
repz
cld
sub
sbb
mov
cmp
(bad)
xchg
cli
fs
push
outs
movs
mov
(bad)
in
and
sbb
mov
inc
outs
push
mov
in
(bad)
xchg
imul
int
out
cmp
sbb
imul
pop
repnz
dec
mov
xor
xchg
jmp
pop
(bad)
ror
xchg
cdq
test
or
add
lods
sbb
mov
shr
je
adc
xchg
mov
rcl
xchg
inc
sbb
adc
xchg
mov
imul
test
in
sub
jno
movs
jbe
daa
enter
lahf
jg
nop
jecxz
xor
dec
sub
cmp
xchg
fmul
mov
out
adc
xlat
inc
push
sub
aas
jge
mov
mov
mov
inc
fist
out
jecxz
fcomp
aaa
fild
arpl
jecxz
xchg
shl
cmp
ret
jae
cmp
jns
(bad)
xor
inc
jo
aaa
(bad)
call
sahf
and
pop
mov
jbe
push
xchg
add
in
popa
sub
adc
addr16
jne
sub
inc
sub
sahf
mov
push
dec
mov
pop
jecxz
call
push
(bad)
pushf
retf
jmp
jae
cld
repz
shl
pop
xor
repnz
xchg
in
(bad)
popf
shl
iret
xchg
xor
int
cmp
dec
test
jnp
mov
shl
push
mov
dec
movs
cmc
jb
jge
rol
inc
add
add
add
add
add
add
add
add
cld
add
add
sbb
add
mov
add
in
add
add
cld
clc
mov
add
xchg
enter
add
dec
add
add
add
enter
add
dec
add
add
add
add
add
push
add
add
xchg
pop
add
add
add
add
add
add
add
add
fadd
add
add
add
add
hlt
sbb
fwait
in
mov
xor
daa
(bad)
dec
(bad)
not
lock
ret
mov
outs
xchg
inc
repz
mov
sub
test
xlat
icebp
jo
sub
popa
push
(bad)
inc
add
lock
bnd
jns
jmp
in
pushf
stos
sahf
push
test
fdiv
mov
inc
shl
sti
pop
xchg
mov
(bad)
aad
adc
xchg
pop
loopne
sub
shl
mov
push
gs
mov
sub
inc
mov
out
or
dec
idiv
outs
rol
pop
jmp
dec
daa
dec
sub
add
inc
adc
xchg
or
cdq
adc
(bad)
(bad)
cld
push
mov
fsubr
adc
mov
jb
cwde
loope
(bad)
pop
aad
adc
out
xor
retf
jns
mov
xchg
test
(bad)
lea
sbb
jo
push
and
and
pop
jbe
mov
xchg
jg
scas
fsubp
sbb
std
xchg
and
mov
xor
enter
pop
mov
lods
bnd
sti
scas
jno
mov
std
lahf
imul
adc
ror
push
mov
in
jle
sbb
pop
pop
sub
pop
or
retf
arpl
push
stos
xor
and
adc
sub
jle
jmp
mov
adc
and
mov
inc
add
dec
ds
sub
adc
div
jae
mov
fs
jge
ds
or
ss
shr
pop
pop
clc
inc
je
mov
dec
test
pop
jmp
sti
push
retf
sbb
push
clc
stos
outs
into
fwait
inc
cmps
std
cmps
not
xor
cs
jle
pop
imul
push
jmp
fisttp
cmc
adc
jg
loopne
arpl
cli
push
movs
push
xchg
and
hlt
retf
outs
imul
mov
cli
xor
retf
sub
push
mov
imul
dec
fwait
push
mov
stos
dec
push
sar
sar
xchg
sbb
test
lahf
rcl
gs
add
mov
or
jns
sub
cmp
sti
in
mov
xor
outs
push
mov
adc
push
test
push
gs
push
test
or
mov
mov
loopne
or
mov
jmp
pop
jge
push
jg
pusha
lahf
repnz
mov
push
cmc
fiadd
sbb
jl
ret
cmp
out
(bad)
xchg
jb
sub
gs
inc
pop
jecxz
pusha
push
sbb
adc
loope
ret
jne
jg
pop
push
out
mov
(bad)
(bad)
js
sbb
sub
daa
sbb
push
pop
cdq
pop
lds
push
push
mul
sub
adc
jmp
popf
fsub
loopne
mov
pop
sar
data16
and
mov
and
rol
sub
aas
jbe
ss
sub
jmp
(bad)
jmp
cmp
add
add
sub
push
jecxz
out
jecxz
mov
arpl
sub
rcl
fdivr
xchg
leave
dec
fucomi
ret
cld
jae
fs
cmp
or
push
push
inc
mov
mov
rcr
loopne
scas
dec
out
push
arpl
mov
fstp
mov
bound
add
pop
jl
dec
imul
popa
xchg
(bad)
in
jns
les
xchg
gs
pop
ror
jmp
sbb
sahf
push
inc
jp
add
push
xor
dec
sbb
sub
nop
pop
hlt
or
mov
dec
lds
xor
or
ficomp
jo
pop
or
mov
jb
mov
stos
pop
adc
stos
ret
(bad)
inc
sub
or
mov
or
loopne
or
sbb
add
ds
aas
mov
inc
jbe
dec
neg
adc
xchg
loopne
mov
out
mov
xchg
jmp
cmp
test
rcl
mov
jl
fstp
popf
in
jmp
push
or
cmc
(bad)
cmc
add
aas
pushf
sbb
sahf
add
pushf
cmp
adc
imul
(bad)
push
repz
xchg
dec
dec
inc
nop
sub
sub
outs
aaa
mov
fs
mov
loopne
cmp
or
and
int
clc
arpl
dec
bound
es
xor
cmp
cmps
scas
cld
nop
(bad)
jns
mov
push
cmp
and
lgs
cmps
mov
ss
mov
movd
xor
cmp
pop
mov
add
cmp
mov
push
push
push
in
mov
sahf
cdq
mov
sub
outs
nop
(bad)
dec
cmc
nop
mov
push
xor
je
add
(bad)
jmp
cs
out
test
mov
pop
loopne
test
fcomp
(bad)
int3
add
pop
out
js
xlat
sub
cli
xor
sbb
(bad)
jb
dec
push
inc
neg
mov
enter
jge
dec
xor
sbb
aas
cmp
call
push
out
inc
pop
test
je
cmp
das
ins
adc
je
pop
test
mov
push
fdivr
cdq
jbe
out
mov
add
repnz
aam
or
and
jle
cwde
aaa
je
jg
cmc
push
jb
pusha
not
sar
fisub
jbe
in
mov
movs
jns
fsub
and
cmova
outs
xor
das
mov
hlt
popa
mov
stos
pop
xor
jge
lahf
mov
push
adc
jmp
fs
add
mov
cld
in
push
stos
mov
loope
lahf
sti
call
shr
dec
jbe
mov
pop
or
dec
add
sub
jbe
lds
out
jb
enter
jmp
push
xlat
and
in
les
test
jns
cld
cli
inc
aad
jbe
dec
(bad)
lods
ffree
nop
mov
xchg
push
jl
xchg
inc
imul
data16
dec
dec
iret
call
imul
into
pop
dec
xchg
sbb
aad
lock
dec
mov
jp
movs
sar
xor
pop
push
sbb
addr16
(bad)
jae
outs
and
push
cwde
push
add
mov
gs
fimul
mov
movs
scas
fst
sbb
pop
pop
retf
into
into
inc
loope
push
out
adc
xor
clc
aam
test
jb
ins
ja
mov
push
rcl
cmp
cli
xchg
into
pusha
lea
mov
pushw
sar
out
fwait
pop
adc
fnstsw
jge
pop
stos
into
(bad)
repnz
mov
into
(bad)
shl
out
pop
mov
int
push
inc
pushf
inc
cmp
jnp
mov
(bad)
push
call
pop
ins
mov
call
sbb
mov
cmp
and
pop
out
ja
outs
mov
pop
inc
mov
clc
sar
hlt
jl
xchg
fs
imul
cdq
inc
cmps
ss
mov
add
mov
push
(bad)
into
js
dec
dec
push
clc
imul
retf
mov
mov
test
and
dec
mov
pop
push
push
mov
inc
lods
fimul
mov
mov
sub
popa
xor
rcl
jg
or
sbb
xchg
mov
out
add
sbb
adc
cmp
clc
push
fwait
add
hlt
sub
lahf
and
movs
sub
sub
cmps
fnstcw
mov
mov
xchg
fidivr
sub
pop
into
out
jne
sub
popf
aas
not
div
add
mov
pop
mov
cmp
mov
add
or
sbb
fdiv
xchg
adc
(bad)
imul
mov
add
out
xor
and
ds
adc
push
add
imul
retf
mov
(bad)
xchg
jb
sbb
or
cmp
cli
xor
lahf
and
jnp
or
mov
dec
adc
mov
mov
pop
lds
popa
and
cmp
pop
xor
cmp
pop
add
mov
pop
jb
(bad)
sub
mov
pop
mov
pop
ret
jmp
xor
jno
and
jle
and
pop
pop
(bad)
out
inc
cmp
test
inc
(bad)
idiv
add
add
neg
sbb
inc
xchg
pop
inc
and
mov
adc
mov
test
popa
jecxz
dec
outs
mov
mov
(bad)
push
cmp
sahf
ja
ss
pop
cwde
leave
cld
nop
xor
fwait
cmp
jecxz
mov
mov
popf
sbb
jmp
fsub
mov
sbb
jl
sbb
sub
cs
adc
cmp
mov
mov
sbb
cmc
mov
jecxz
jg
inc
mov
test
popf
aas
xor
adc
shl
arpl
outs
jmp
call
shr
dec
ret
pop
pop
mul
sbb
adc
lds
into
adc
cli
(bad)
xlat
stc
push
fwait
mov
test
stos
xchg
fpatan
dec
cmp
inc
js
xlat
mov
ror
lods
pop
fsub
inc
(bad)
fidiv
pop
xchg
mov
xchg
daa
or
sbb
repz
pusha
mov
bound
popf
adc
std
mov
out
sub
pop
sub
popa
inc
push
mov
je
rcl
add
mov
lock
pop
push
test
scas
out
jmp
mov
(bad)
sub
adc
xchg
dec
inc
cmp
push
xchg
ds
pop
fs
jle
mov
adc
fwait
adc
xchg
in
pop
iret
cmp
mov
loopne
inc
cmps
xchg
mov
xchg
mov
fcmovnb
cli
ret
lods
mov
pop
mov
ret
fs
outs
xchg
retf
and
(bad)
xchg
cld
jl
inc
int
pop
lea
int
push
cli
stos
push
pop
dec
mov
aaa
jo
jbe
lea
stos
jae
push
pushf
nop
mov
test
push
sbb
dec
out
rcr
fidiv
enter
scas
cwde
mov
or
scas
jmp
nop
std
sub
cdq
jecxz
loopne
pusha
mov
fs
dec
adc
popa
adc
sbb
(bad)
jp
dec
add
add
add
rcr
add
fadd
add
add
popa
add
add
add
das
add
add
add
add
lea
xor
add
add
add
add
add
sbb
add
add
add
push
or
add
add
or
cmp
add
add
add
pop
mov
add
add
pushf
retf
add
add
add
add
add
add
push
add
add
add
add
push
add
add
dec
add
add
add
add
sbb
xor
lods
push
loope
popa
adc
cmp
xchg
shl
rcr
gs
aas
push
add
int
retf
add
sub
loope
aaa
inc
mov
repnz
add
(bad)
cmc
scas
iret
mov
mov
fisttp
mov
fs
movs
rcl
cmp
(bad)
adc
je
push
icebp
hlt
push
inc
test
mov
sub
mov
call
cmp
adc
out
adc
leave
aaa
or
mov
sub
test
inc
xchg
ss
pushf
rcr
add
mov
sbb
imul
mov
nop
pop
xor
aas
xchg
test
mov
inc
out
test
in
retf
inc
not
dec
or
les
add
fisttp
push
mov
out
mov
adc
loop
pop
jb
add
sbb
pop
mov
add
sbb
enter
push
or
add
mov
jbe
enter
xchg
inc
push
aam
add
call
lods
dec
jmp
cs
or
lea
jmp
and
mov
cwde
xor
dec
jno
jg
hlt
test
jbe
sub
push
pop
xor
push
push
sti
sti
inc
and
fild
fistp
adc
pop
out
pop
jmp
sub
(bad)
fst
mov
inc
cld
and
aaa
jl
push
rol
leave
hlt
dec
and
mov
pop
adc
jmp
arpl
and
das
shr
jmp
(bad)
push
xor
leave
add
fist
mov
std
pop
out
add
pop
fdivp
ins
and
sar
jbe
fcmovne
xchg
xlat
sub
push
and
and
cmp
pop
loop
in
xor
into
mov
pop
(bad)
mov
inc
sbb
fwait
sub
jg
fs
sub
add
jmp
inc
outs
rcr
and
mov
xor
stos
dec
lods
sbb
fs
cdq
inc
pop
arpl
mov
jbe
imul
jno
cli
and
addr16
cmp
icebp
lahf
call
ss
aas
leave
popf
daa
push
xchg
mov
push
inc
xor
ret
arpl
xor
push
sub
sub
int3
mov
int
cmp
rcr
mov
in
cdq
cmps
shr
in
ins
sti
movs
scas
(bad)
and
mov
add
cmc
fadd
or
mov
cwde
push
mov
test
mov
dec
inc
int
jno
or
dec
(bad)
pop
push
or
(bad)
repz
jb
sub
inc
xchg
pop
out
icebp
imul
dec
in
jae
pop
and
pop
cmp
cli
xor
loope
adc
ds
jbe
xchg
xchg
xor
ret
fistp
mov
call
mul
xor
ins
adc
jg
pushf
xor
(bad)
rcr
or
shl
pop
sbb
cmc
popf
pop
xchg
in
and
cmp
sbb
bound
xchg
xor
js
mov
jne
push
ss
inc
std
dec
pop
jae
push
inc
or
adc
movs
shl
mov
inc
call
pop
cmp
mov
cmc
ficom
sbb
stos
jl
mov
je
pushf
pop
inc
imul
das
rol
ds
outs
repz
or
fst
or
dec
mov
nop
(bad)
jl
inc
pop
sar
sub
pop
rcl
add
cmps
lea
cmp
cmp
xor
adc
pop
adc
and
pop
dec
aaa
ja
bound
outs
jae
mov
test
adc
stc
pop
cmp
sbb
dec
or
(bad)
arpl
add
aas
push
or
push
scas
inc
aam
mov
out
dec
pop
mov
std
mov
(bad)
xchg
fwait
popa
fnstsw
iret
ins
stos
lods
ja
jmp
xchg
dec
inc
sub
jo
push
push
test
loope
add
xchg
cmp
push
fild
retf
lahf
ds
mov
sub
enter
ror
in
mov
push
in
pop
pop
xchg
scas
loopne
xor
sub
stos
or
mov
or
inc
adc
push
jo
sub
add
sbb
xchg
cmp
rol
adc
faddp
xchg
fld
sbb
call
out
test
repnz
in
sbb
pop
mov
xor
cld
mov
into
imul
push
retf
lds
add
add
jb
inc
mov
(bad)
and
or
rcl
cmp
mov
jae
pop
add
iret
lods
dec
sub
jb
mov
js
cmp
cli
adc
mov
lods
jae
mov
push
addr16
mov
imul
mov
inc
push
fdiv
push
mov
retf
jge
mov
pop
(bad)
push
pop
pushf
mov
add
push
xor
inc
sahf
outs
rcl
imul
outs
xchg
jecxz
cmp
test
jb
les
mov
cmp
cmc
push
mov
or
(bad)
xchg
jg
mov
(bad)
pop
in
loop
pop
ss
les
into
scas
loop
jbe
cmp
stos
push
xchg
adc
gs
cmp
ins
lock
in
pop
(bad)
call
movs
add
push
pop
jmp
std
pop
jp
jge
sbb
shr
add
inc
in
lahf
int
por
jg
mov
bound
jmp
push
sub
loope
aam
jo
push
loop
fisubr
mov
xchg
and
dec
pop
inc
mov
jae
xchg
shl
das
cld
mov
fadd
pop
inc
and
push
dec
cmps
clc
out
xor
mov
leave
daa
repnz
dec
call
mov
std
enter
or
sbb
pop
push
xchg
mov
jp
pop
pop
loop
jp
xchg
sub
clc
hlt
call
cs
inc
dec
fcomp
out
sub
or
mov
(bad)
jp
mov
add
clc
test
addr16
jne
mov
xlat
inc
cmp
xor
sti
lds
mov
sub
gs
jp
push
dec
into
je
push
mov
push
daa
mov
repz
aas
arpl
cmp
pop
lods
mov
call
jnp
sti
sub
jl
mov
es
scas
jle
leave
dec
in
mov
inc
pop
jecxz
(bad)
(bad)
mov
test
ret
mov
ffree
pop
xchg
mov
adc
cli
(bad)
lock
mov
stos
cmp
pop
fbstp
inc
iret
pop
mov
push
(bad)
gs
mov
sti
aam
imul
cdq
push
jmp
pop
fistp
movs
xor
mov
sub
push
adc
test
adc
jp
fmul
jbe
sti
mov
sbb
mov
xchg
call
xchg
or
jae
jg
xlat
push
and
retf
arpl
mov
sub
loop
mov
push
pushf
test
sub
cmc
xchg
ret
add
iret
aaa
fucomi
test
test
aad
(bad)
mov
xor
movs
sbb
xchg
or
inc
push
cld
outs
mov
add
loop
inc
test
fisub
cmc
push
cs
push
mov
repnz
add
out
add
mov
cs
aaa
outs
repnz
ins
scas
cmp
and
or
arpl
aad
loope
into
mul
dec
jae
inc
fld
lock
jge
out
cli
inc
cld
int3
pop
cmps
(bad)
adc
loop
imul
out
jbe
fstp
mov
loopne
(bad)
jl
dec
mov
mov
cli
pop
movs
inc
mov
or
ins
xor
mov
int3
add
scas
dec
loop
xor
fisub
sub
push
sbb
cmp
in
call
call
jns
jp
pop
sahf
mov
lods
dec
call
dec
stos
call
aad
mov
ds
inc
dec
pushf
lods
mov
push
sar
lahf
mov
push
stc
xlat
int3
cmp
lods
jmp
cmc
mov
mov
in
sbb
or
in
sbb
fs
pop
xchg
jge
push
aam
inc
std
and
sbb
fsubr
xchg
lock
sar
jne
dec
add
sub
pop
test
fwait
stc
mov
jl
cs
dec
jecxz
pop
xchg
aam
cmp
aam
rol
adc
cs
add
adc
jne
lods
fld
repz
clc
stos
inc
mov
pop
inc
ins
sub
call
fimul
popf
jmp
sbb
xchg
push
xor
fnstcw
sub
add
add
(bad)
or
pop
scas
scas
mov
sbb
lock
jo
rol
pop
mov
lea
sub
imul
and
cmp
mov
and
jno
not
stos
sub
pop
out
adc
mov
adc
repz
push
jl
popf
(bad)
fmul
sbb
jecxz
cmp
mov
mov
jne
push
(bad)
adc
mov
mov
inc
call
cmp
and
arpl
pop
lods
add
stos
add
clc
repnz
xchg
and
bound
sar
inc
mov
jp
les
iret
fdivr
mov
pop
mov
cmps
dec
rol
mov
cmps
es
repnz
mov
xchg
out
outs
out
mov
xchg
jnp
(bad)
es
mov
xchg
jne
sbb
in
push
scas
pop
add
hlt
imul
movs
mov
popa
addr16
mov
cmp
cmp
inc
ins
lahf
cmp
lahf
adc
pop
xor
clc
lods
daa
jae
inc
cwde
mov
xchg
mov
stc
sbb
pop
call
push
inc
pop
clc
sbb
pminsw
cs
xor
inc
ret
xchg
inc
loope
(bad)
cmp
retf
jmp
enter
mov
sahf
(bad)
xchg
pusha
xor
jbe
or
shl
xor
out
fidiv
cs
and
aaa
cs
scas
sub
clc
add
idiv
jmp
mov
jmp
(bad)
xor
mov
and
and
call
jmp
nop
pop
xor
and
stc
mov
mov
cmp
sar
stc
mov
sti
mov
enter
add
xor
add
add
add
add
add
add
and
mov
xchg
fiadd
add
add
scas
add
add
add
add
out
add
add
add
add
add
add
add
pop
xor
sub
mov
(bad)
add
add
jecxz
ret
add
test
add
add
rol
sti
add
add
lods
add
sbb
jle
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
scas
adc
add
jg
push
inc
push
push
cmp
push
or
imul
jmp
pop
cmps
daa
cmp
pop
pop
jno
mov
ds
and
out
lock
jbe
mov
aaa
sbb
cmp
mov
daa
retf
cmp
(bad)
imul
pop
(bad)
pusha
cmc
outs
mov
pop
ja
sbb
inc
out
psubq
arpl
(bad)
outs
push
push
mov
jg
or
(bad)
jle
mov
nop
push
paddsb
xchg
xchg
mov
sbb
fs
fimul
push
mov
xchg
mov
sti
pop
mov
cs
sub
push
or
out
jmp
and
fs
push
mov
cdq
sub
and
cs
and
mov
sbb
jo
dec
push
jecxz
mov
daa
pop
daa
icebp
(bad)
add
mov
push
sbb
sbb
scas
sub
push
xor
enter
lods
pop
mov
fcmovbe
jno
mov
pop
sub
cdq
ret
pop
shr
jmp
xchg
lods
lahf
sub
add
repz
mov
cmps
add
cmps
xor
mov
leave
cmps
mov
in
cmc
std
ss
popf
ror
sbb
stos
test
popa
jbe
sub
neg
mov
sub
pop
cmp
(bad)
rcl
lds
fnsave
out
add
int3
out
pushf
mov
mov
cmp
add
add
xchg
js
mov
cmc
mov
loope
mov
std
movs
(bad)
nop
loop
stc
in
clc
test
idiv
movs
cmps
sbb
test
lods
push
mov
das
cmp
popf
retf
adc
shr
mov
cmp
into
es
ins
mov
psubusb
adc
xchg
or
sti
ins
sbb
ret
outs
adc
cli
daa
call
cmps
cmps
test
jl
(bad)
add
xchg
pop
and
outs
scas
mov
jo
pop
mov
push
fld
and
das
sub
cmps
dec
std
jp
pop
adc
cmp
or
hlt
loop
test
sbb
or
cmp
jge
add
or
test
int3
adc
cmp
shr
mov
jmp
jmp
push
xchg
mov
add
mov
sbb
jg
cld
call
je
ror
ins
movs
movs
lods
xchg
xlat
adc
lock
mov
ins
ror
xor
in
sub
push
mov
aam
pop
xor
mov
or
cs
ja
and
and
jae
push
sbb
cmp
add
rol
loop
xor
aas
mov
mov
call
scas
or
xlat
jecxz
inc
arpl
pop
adc
push
out
xchg
hlt
jl
ins
push
in
jmp
mov
cmps
iret
and
mov
pop
test
adc
dec
lea
mov
movs
mov
adc
and
add
loope
ficomp
xor
ret
mov
mov
into
sbb
add
scas
xor
fist
sbb
mov
or
or
mov
lock
push
cmc
pop
inc
dec
loope
jno
pop
mov
jb
adc
and
dec
xchg
shl
pop
das
xor
add
inc
jno
scas
stos
pop
sub
daa
inc
mov
mov
mov
data16
(bad)
popf
jg
sbb
dec
mov
idiv
or
mov
add
aad
mov
mov
jns
retf
push
cmp
jne
mov
mov
add
(bad)
cmp
mov
gs
les
js
in
or
dec
adc
sbb
fsub
loop
fs
lahf
arpl
adc
leave
dec
cmc
loopne
add
mov
pop
mov
mov
das
dec
aam
cmp
cld
mov
xlat
push
cmp
loope
and
std
hlt
jnp
jo
mov
add
cdq
inc
xchg
inc
sbb
call
mov
vcvttsd2si
sub
mov
inc
lods
int3
adc
mov
cmp
(bad)
and
shl
mov
and
and
cmp
jmp
or
int
shl
shl
dec
std
mov
pop
sbb
xchg
mov
stos
test
mov
shr
pop
push
(bad)
fld
push
cmp
(bad)
dec
popa
int3
mov
stc
lods
sub
(bad)
xor
cli
dec
xor
mov
mov
inc
push
pop
retf
cli
clc
stc
xor
addr16
sub
dec
ret
stos
xchg
pop
popf
imul
add
test
or
or
sub
dec
in
mov
and
pop
mov
push
retfw
sub
cdq
je
inc
lds
sub
lock
mov
scas
pop
xchg
(bad)
mov
mov
push
mov
rcr
sub
adc
std
sbb
mov
adc
cs
xor
mov
scas
dec
icebp
xchg
je
loopne
jns
add
int3
test
(bad)
outs
push
add
int3
scas
and
pop
mov
out
(bad)
data16
imul
mov
ss
and
inc
clc
cdq
les
sti
je
js
sub
cmp
addr16
sub
cmps
(bad)
xor
adc
icebp
add
loopne
frstor
call
and
push
mov
pushw
test
sbb
xor
jge
or
cmc
inc
cdq
jnp
pop
adc
sbb
scas
out
inc
addr16
repz
es
mov
add
push
pusha
pop
sbb
mov
lock
push
or
cmp
push
pop
cmp
sbb
xchg
test
push
stos
or
mov
ja
xchg
bound
data16
add
push
rol
pop
lds
mov
sbb
int
cld
pop
xchg
or
ja
and
ds
das
inc
ins
adc
cmps
adc
cmp
(bad)
clc
adc
ret
mov
inc
mov
adc
jae
xchg
mov
and
and
cdq
sti
mov
xchg
mov
rcl
add
adc
or
dec
popf
inc
outs
call
retf
inc
div
and
mov
(bad)
pop
aaa
aam
mov
jecxz
lods
jae
outs
inc
xchg
ins
int
shr
fsubp
lea
mov
or
in
test
ss
test
std
push
pop
out
fsubr
dec
rcl
and
fisttp
pop
pextrw
sub
in
mov
add
repz
hlt
mov
aaa
sbb
jg
stc
sbb
stos
inc
or
sub
sub
enter
jne
jno
test
mov
in
mov
stos
push
lahf
ds
mov
pop
pop
sahf
sbb
jle
mov
out
das
pop
mov
jp
adc
rol
push
leave
cmp
lahf
xor
push
inc
cmps
xlat
and
xor
sti
push
shl
cld
jg
nop
dec
inc
dec
and
repnz
sbb
out
test
xlat
xchg
mov
daa
sahf
mov
mov
in
mov
jp
mov
imul
pop
sub
in
xchg
int3
sti
nop
rcr
enter
das
mov
into
or
movs
imul
movs
out
int
jne
aas
iret
dec
xchg
scas
cmp
mov
ins
sbb
enter
mov
sbb
stos
jle
pop
inc
and
sub
cs
lds
fucomi
rcr
jge
mov
xor
cmps
call
repnz
inc
loopne
lea
mov
dec
push
fiadd
mov
cmps
(bad)
fsubr
mov
adc
pop
jno
inc
jmp
daa
jmp
dec
(bad)
pop
std
jns
mov
js
jnp
arpl
jmp
mov
mov
mov
add
mov
and
sub
sbb
std
add
pop
hlt
fisub
adc
xor
push
(bad)
push
shr
or
out
or
dec
adc
stos
add
mov
jmp
mov
int3
stos
jg
aam
mov
inc
xchg
icebp
inc
cmp
sbb
in
out
lea
lds
add
neg
lods
imul
in
pushf
scas
sahf
out
jl
test
outs
fisttp
ret
in
(bad)
jg
fist
mov
mov
xor
cs
in
test
outs
add
cmps
mov
mov
push
loop
push
adc
addr16
cmp
(bad)
addr16
cmp
jmp
push
clc
mov
and
inc
leave
jno
xchg
std
jne
hlt
push
mov
pushf
cs
inc
mov
sti
mov
(bad)
sahf
nop
outs
bound
sub
aaa
hlt
scas
dec
aas
sbb
int3
aaa
fdiv
sbb
jb
push
ret
sbb
sub
jp
loop
lock
lahf
or
inc
mov
xor
jp
sbb
mov
sub
cmp
xor
test
sahf
cmp
fldcw
inc
ror
and
jp
mov
sbb
iret
retf
in
sbb
jo
jmp
shl
rcl
sub
(bad)
mov
jmp
shl
sti
dec
push
mov
jmp
loop
push
pop
(bad)
out
mov
xchg
popf
add
fnstcw
pop
push
loopne
(bad)
in
push
ins
pop
fwait
mov
fs
mov
cdq
inc
mov
xor
pushf
fdiv
retf
xor
in
sbb
mov
cmp
sbb
mov
and
mov
jo
sub
add
lds
out
aas
sbb
add
call
sub
sbb
and
imul
ror
cld
mov
bound
cmp
icebp
inc
ret
mov
and
fisub
cmps
int
sub
or
lods
and
mov
add
inc
mov
cs
xchg
lahf
xchg
mov
(bad)
in
fstp
repz
(bad)
add
mov
in
sub
mov
call
inc
jne
mov
daa
adc
ret
das
clc
cmp
movs
scas
jns
pop
inc
pop
mov
shr
jno
daa
popf
and
xchg
mov
int
or
sbb
pop
scas
xlat
aam
mov
shr
rcl
(bad)
xchg
addr16
push
gs
fs
sbb
inc
ss
int
movs
add
add
rol
add
in
add
add
inc
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
out
add
stc
pop
push
push
out
add
add
add
add
add
bound
add
add
add
inc
std
add
add
add
add
add
add
stc
add
xor
add
sub
stos
add
add
add
aad
leave
add
add
add
add
add
mov
fld
add
sbb
add
add
add
add
add
add
add
add
add
add
and
cdq
mov
lahf
add
add
sbb
add
add
mov
test
jns
add
add
add
add
add
add
push
add
add
jmp
add
add
dec
add
or
add
add
int3
add
add
add
add
add
or
mov
add
add
add
add
movs
shl
or
sbb
and
cli
imul
call
sub
imul
ret
mov
add
sub
xor
pop
jno
pop
inc
(bad)
mov
scas
pop
cmp
(bad)
adc
xchg
retf
pop
cmp
iret
sbb
outs
pop
pop
cld
pop
xor
jns
mov
mov
sub
dec
scas
xchg
jp
push
ds
push
js
pop
push
inc
mov
(bad)
xchg
xchg
cmps
rcl
dec
movs
and
es
and
test
jnp
hlt
fcom
loopne
mov
clc
neg
sub
test
pop
cmp
xchg
pushf
aad
fwait
pop
cmps
test
(bad)
fadd
sbb
dec
cmps
add
xchg
push
imul
stc
ret
inc
(bad)
ficom
data16
loope
and
ds
movs
jo
add
ror
mov
into
xor
xor
and
push
inc
add
imul
fsub
mov
aaa
pop
movs
std
ss
ret
loope
ja
ds
mov
(bad)
push
jb
cmps
mov
test
sbb
inc
pop
lods
push
or
out
jnp
jge
les
movs
jge
or
sub
adc
push
xchg
pop
mov
sbb
jno
test
fsubr
je
xchg
add
cld
xor
popa
inc
dec
imul
push
jnp
mov
and
cmp
(bad)
mov
xchg
xchg
xor
add
xchg
ds
scas
jb
stos
mov
xor
inc
dec
xchg
ret
or
dec
jp
push
mov
pushf
stos
(bad)
scas
jg
out
cdq
push
pushf
mov
ds
dec
inc
mov
push
sub
mov
bound
mov
add
in
mov
test
fistp
mov
adc
or
xchg
test
fcom
xor
adc
or
sub
mov
int
sub
push
mov
fisubr
jecxz
clc
xchg
inc
sbb
lds
and
outs
test
jl
or
xor
aas
xchg
cmp
dec
cmp
inc
dec
pop
mov
fwait
pop
dec
sbb
loopne
enter
call
mov
mov
mov
stos
fincstp
jmp
sbb
es
les
movs
mov
fimul
xchg
adc
jno
je
pop
inc
xchg
fsubrp
push
jns
in
push
sti
dec
rol
mov
stos
dec
mov
jbe
sub
call
adc
cld
retf
mov
mov
neg
int3
inc
jnp
je
jecxz
add
(bad)
imul
test
dec
test
push
mov
jne
leave
sub
push
sbb
outs
imul
cmc
stos
imul
inc
retf
jmp
aad
or
mov
dec
leave
mov
xchg
jl
xor
inc
repnz
int
jne
or
leave
rol
sub
scas
stos
mov
retf
in
sub
or
shl
mov
mov
in
in
movs
jno
jo
test
cdq
push
int3
loopne
and
iret
xchg
jb
jmp
xor
xor
aaa
fnstsw
pop
push
scas
jp
mov
mov
add
out
inc
push
sub
rol
ror
mov
out
outs
std
in
ss
and
inc
cmp
bound
(bad)
(bad)
clc
mov
ret
jnp
out
and
lock
or
clc
hlt
jle
call
test
push
sub
js
add
xor
loope
inc
dec
lock
push
lock
out
mov
mov
imul
mov
imul
fcomp
push
xor
sbb
rol
aas
(bad)
sbb
jae
sbb
sub
js
in
mov
sar
nop
mov
or
push
shl
imul
call
adc
aaa
push
jl
jae
rcl
inc
pop
in
lods
mov
xor
rcr
ins
scas
jmp
cmp
hlt
mov
ret
add
call
add
mov
sub
xchg
out
(bad)
in
jo
mov
inc
popf
and
ds
loope
stos
push
pushf
push
inc
mov
dec
ins
add
sbb
mov
or
sub
mov
mov
fldcw
leave
ret
ror
jno
int
repnz
xor
xor
or
push
loope
dec
sub
adc
test
into
jge
test
(bad)
sbb
daa
pop
loope
mov
xor
fisttp
sbb
jbe
mov
rcr
and
mov
(bad)
shl
jl
sbb
xor
dec
jmp
and
and
mov
(bad)
call
stc
sub
dec
iret
ret
fst
pop
push
cmps
je
test
push
aaa
sar
cmp
div
inc
add
adc
arpl
pushf
fldenv
ja
dec
xor
imul
aam
push
mov
js
or
fdivr
dec
mov
mov
and
jnp
sub
jge
xor
and
and
pop
and
mul
sub
loopne
call
or
daa
adc
icebp
mov
iret
mov
pop
mov
xchg
dec
ds
cld
cwde
xlat
dec
loope
adc
popa
je
ds
pop
mov
add
jmp
mov
jg
js
loop
leave
lock
cmps
popf
pop
out
scas
or
xchg
out
out
xor
cmp
jnp
and
xor
mov
mov
cmp
or
cmp
sub
popf
adc
lea
jns
jae
std
inc
fs
jge
outs
movs
fidiv
icebp
jmp
pop
mov
mov
or
movs
sar
dec
push
sbb
das
push
push
xchg
pop
inc
add
ss
jg
cmp
jmp
fadd
cmps
xchg
(bad)
mov
test
push
xor
mov
iret
int3
sar
dec
jp
lds
cli
dec
and
fisubr
es
sbb
daa
ror
pop
xchg
and
dec
(bad)
cmp
jbe
sar
jns
inc
lds
xor
adc
xchg
(bad)
loop
add
cmp
mov
or
push
xchg
pop
data16
mov
popa
lea
add
adc
div
and
push
and
(bad)
xchg
add
xchg
xor
xlat
imul
dec
jmp
sahf
stos
jo
les
aam
sbb
adc
mov
lock
(bad)
dec
jae
xor
mov
or
adc
xor
inc
cmc
xor
pop
and
test
in
lahf
inc
imul
stos
sbb
popf
pop
add
add
icebp
pop
adc
call
cmps
mov
pop
popa
dec
or
out
rol
pop
sar
js
das
cld
xor
adc
pop
mov
xor
imul
adc
retf
cmp
popa
imul
lods
jo
dec
sub
(bad)
cli
push
cmp
outs
je
mov
and
mov
dec
push
pop
pop
ds
int
pop
movs
imul
xor
js
int
outs
cmp
std
popa
leave
cmp
cmp
pusha
xor
imul
out
cmp
or
scas
lods
xchg
outs
call
out
(bad)
cld
sar
push
or
jnp
fsubr
mov
mov
add
sub
pop
cmp
sti
aas
das
jecxz
mov
call
test
dec
cmp
cwde
rol
cmps
inc
push
call
(bad)
inc
aam
xlat
dec
call
jmp
sahf
out
test
loopne
movs
jns
sub
and
mov
xchg
pop
fisubr
push
mov
(bad)
iret
std
sub
ja
loop
inc
or
pop
scas
add
add
ja
sbb
cld
sbb
or
add
out
popa
rcr
fsubrp
mov
pop
dec
cmp
lods
and
out
pop
mov
pop
inc
sbb
adc
xor
add
ins
sar
xchg
pushf
jo
sar
leave
push
aas
mov
mov
cwde
and
(bad)
sbb
iret
retf
(bad)
fnsave
inc
xlat
pop
dec
inc
pop
es
sbb
mov
int
dec
sub
js
pop
lods
or
and
pop
cmps
adc
and
(bad)
xor
mov
push
test
hlt
pop
cmp
rcl
sub
push
bound
mov
ss
lds
push
push
mov
push
add
loop
pop
push
mov
mov
jp
jl
bnd
(bad)
xor
sbb
pushf
imul
sbb
xchg
cdq
push
(bad)
out
and
mov
sbb
(bad)
cmp
mov
sbb
mov
cmps
les
repz
and
mov
xchg
lock
and
imul
xchg
inc
xor
and
div
or
mov
loopne
call
sbb
cmp
or
imul
inc
inc
in
popf
aad
mov
sbb
mov
pop
cld
ror
call
(bad)
push
xchg
push
movs
out
stos
jae
idiv
cmc
sahf
fisttp
adc
pop
fwait
adc
xchg
pop
mov
mov
das
mov
push
rcl
ror
dec
movs
or
int
inc
mov
sub
scas
ret
out
cdq
aas
inc
push
retf
int
xchg
add
fbld
add
push
jne
pop
ins
cmp
mov
mov
and
inc
leave
es
xor
(bad)
lock
and
push
cmc
jo
pop
int
xor
sub
jmp
ins
inc
push
add
shl
sub
pop
pusha
leave
fimul
ins
data16
push
dec
add
repz
idiv
js
dec
cld
repnz
loope
loopne
fild
jnp
test
(bad)
and
lahf
lods
inc
jp
inc
test
outs
(bad)
adc
stos
or
add
dec
call
dec
jmp
(bad)
sti
push
iret
sbb
or
cmps
test
and
push
in
scas
pop
push
jmp
mov
dec
pop
push
repnz
mov
add
mov
mov
jae
xchg
and
lds
xchg
mov
and
inc
xchg
fs
xor
fcomp
(bad)
aas
xchg
outs
imul
lods
rcr
out
add
add
cmp
add
add
mov
add
add
jmp
add
mov
add
add
add
push
add
add
add
add
movs
add
add
int
add
add
add
add
loop
add
add
test
add
fiadd
add
add
add
xchg
or
add
add
add
add
(bad)
aaa
and
add
add
add
add
add
lock
add
add
or
add
add
add
adc
add
add
add
add
add
ds
cmps
retf
pop
push
and
(bad)
sbb
and
retf
cmps
rcr
mov
push
loop
inc
jno
and
push
hlt
pop
mov
and
ds
push
call
mov
rol
icebp
add
call
pushf
fidiv
ss
add
bound
retf
pop
push
jle
std
and
xor
out
cmp
inc
jmp
aas
aas
jmp
pop
(bad)
pop
xchg
jmp
and
adc
mul
inc
push
retf
out
or
inc
bnd
popa
cdq
out
ins
cs
imul
cld
aas
push
xor
jns
pop
fs
jne
xchg
jno
mov
dec
cmps
sbb
push
sbb
nop
push
pop
call
into
push
stos
es
shr
and
add
xor
ja
xchg
int3
pop
jae
lds
pop
(bad)
movs
adc
(bad)
clc
cmps
ror
movs
sub
mov
cdq
mov
push
fist
bound
jl
ja
mov
lods
sbb
cld
cld
adc
enter
mov
call
retf
sbb
rol
push
rol
in
cdq
xchg
movs
imul
or
cli
cmp
sub
mov
into
add
cld
lods
fsubr
sub
mov
sub
dec
movs
test
mov
cmp
in
loope
mov
and
push
arpl
sub
cmp
popf
xor
mov
xor
mov
ror
mov
clc
add
xor
and
mov
xchg
ret
shr
xchg
aam
dec
addr16
test
ror
jecxz
(bad)
adc
xor
xlat
lahf
repnz
cwde
int
repz
sbb
mov
jmp
test
push
or
lds
int3
loope
cmp
out
mov
push
out
mov
(bad)
jnp
mov
sub
pop
push
std
pop
inc
jle
cmp
pop
mov
cmp
aad
(bad)
fstp
push
mov
cmp
mov
mov
ja
ins
inc
sub
push
mov
ret
cmps
mov
pop
mov
dec
cmp
dec
inc
or
cmps
(bad)
out
sub
cmps
sub
stos
mov
dec
jne
retf
pop
retf
in
ret
fadd
xchg
adc
jo
jmp
test
add
pop
loopne
sub
scas
rcr
dec
mov
jne
test
pop
jb
cld
mov
jge
adc
cmp
jne
outs
cli
test
scas
icebp
inc
imul
jle
cli
xor
aaa
adc
rdtsc
rcr
xlat
loopne
and
adc
xchg
not
lods
loop
push
and
mov
pushf
movs
xchg
push
xchg
fild
gs
out
test
inc
in
fmul
xor
jae
pop
repnz
popf
out
sbb
das
xor
xchg
iret
call
leave
jns
mov
push
xchg
add
aam
sar
push
cwde
push
enter
pushf
lods
shr
les
jae
ins
adc
rcl
push
mov
mov
bound
cli
lods
sub
and
rcr
mov
ret
jecxz
pop
sbb
cmps
xchg
aad
fsubrp
movs
(bad)
loopne
into
xchg
xor
(bad)
iret
pinsrw
fs
popf
lods
je
and
mov
jns
mov
imul
jne
xchg
outs
push
mov
mov
mov
and
push
push
int3
sbb
xchg
jo
xor
mov
mov
outs
mov
pop
cmp
jg
jle
dec
sub
pop
adc
pushf
sub
lods
xor
not
rcr
push
cli
dec
add
mov
cwde
pop
out
lahf
es
push
sub
out
mov
movs
xchg
(bad)
mov
mov
xchg
and
add
adc
out
cmp
loop
mov
cmps
std
test
mov
cmp
fs
adc
add
popa
imul
pop
call
xchg
call
mov
ror
push
les
clc
popf
aas
dec
mov
stos
pop
add
icebp
stos
lahf
inc
jne
lea
cli
lds
test
pop
enter
mov
mov
popa
and
cmc
and
rol
es
test
mov
ins
mov
popa
enter
ds
and
mov
(bad)
mov
ds
or
jbe
mov
jno
in
cdq
or
in
out
retf
sub
jmp
fbld
mov
movs
add
inc
add
sub
push
stc
jbe
shl
push
add
inc
mov
out
lock
or
add
ficom
fadd
cmp
inc
in
add
add
jge
(bad)
add
das
cmp
cmp
sub
or
rcr
cmp
enter
mov
cli
scas
scas
repz
cld
out
jp
xor
xrelease
xchg
cld
xchg
pop
jbe
stc
(bad)
mov
add
inc
enter
mov
add
(bad)
mov
push
ret
push
xchg
fstp
fnstsw
es
push
xchg
test
das
cmp
mov
imul
cvtdq2ps
int
adc
xchg
dec
sar
loop
sub
repz
inc
add
jle
gs
out
bound
sub
push
sub
inc
ror
fmul
int3
data16
cmp
push
test
cs
pop
ins
mov
loop
fild
pop
cs
jmp
jmp
ja
add
jl
push
(bad)
sub
les
repz
lods
rcl
sbb
aaa
pusha
arpl
or
lea
in
push
aas
xor
mov
and
push
pop
pop
fisubr
fsubr
js
in
and
lds
bound
ds
mov
pop
repnz
push
jecxz
(bad)
pop
aam
data16
lahf
mov
jae
cmp
pop
xor
jle
xchg
jno
inc
jb
mov
jae
retf
mov
cdq
or
sub
mov
adc
sbb
mov
or
pop
ds
cmp
mov
sub
pop
(bad)
and
mov
test
retf
pop
jmp
jno
jg
loope
push
mov
das
(bad)
sbb
mov
test
(bad)
inc
enter
pop
jbe
nop
test
push
or
xchg
mov
shl
push
mov
mov
xchg
xchg
mov
adc
push
cmp
bound
lahf
sub
stos
daa
xchg
ss
xchg
pop
fcom
in
cdq
(bad)
retf
test
rcr
loope
sub
push
add
cmps
inc
mov
xchg
inc
xor
ins
dec
xchg
test
xchg
int3
or
dec
add
stos
adc
mov
gs
dec
xlat
fdiv
sbb
jno
xor
clc
mov
sub
pop
loope
xchg
fbld
push
pop
push
xchg
dec
lds
iret
sbb
pushf
cmp
pop
arpl
ss
arpl
ss
loope
mov
jbe
push
mov
ins
mov
lahf
mov
jno
loope
mov
adc
(bad)
dec
out
icebp
(bad)
mov
fild
and
add
cli
inc
popf
das
add
stos
add
ret
xlat
push
inc
cs
jmp
dec
jg
and
scas
in
out
push
sbb
jge
sbb
mov
xchg
pop
sub
mov
jb
neg
test
imul
mov
mov
loopne
in
sbb
in
push
push
mov
jno
dec
(bad)
es
je
ja
out
idiv
ds
push
out
xchg
inc
mov
outs
adc
(bad)
mov
and
dec
call
arpl
add
mov
test
jno
inc
frstor
cmp
pop
ret
ret
push
vmwrite
mov
cmp
popf
sti
xchg
mov
loop
adc
xor
cmc
call
dec
pop
add
mov
movs
or
lds
ins
mov
push
sbb
add
mov
aaa
xchg
aad
fs
pop
pop
retf
xor
shr
retf
into
out
jle
push
fisttp
adc
jne
dec
jbe
inc
cmp
adc
adc
xchg
std
les
cdq
xchg
xor
cwde
cmps
dec
pminub
loope
inc
sub
cmp
test
aam
cmp
sbb
(bad)
jae
repz
xchg
rcl
loopne
(bad)
in
out
pushf
retf
dec
adc
mov
in
cmp
int3
jmp
xchg
fild
or
test
retf
ret
int3
(bad)
fdiv
imul
push
pop
mov
cmp
add
test
and
add
lods
dec
pop
cmps
push
lahf
call
inc
sbb
xchg
pop
push
xchg
inc
hlt
fnstcw
jbe
pop
fmul
outs
rcl
dec
addr16
aam
mov
test
(bad)
pop
pop
inc
sar
sub
call
fnsave
add
xor
inc
mov
cdq
mov
sub
les
sbb
pop
popf
ror
inc
push
retf
or
xchg
inc
xchg
ret
jbe
arpl
movs
mov
test
and
ins
lahf
jo
cli
or
cmp
ins
xor
push
xor
addr16
push
adc
out
push
cmp
adc
dec
lods
sub
jp
aam
outs
mov
dec
aad
adc
jne
and
shr
push
mov
cdq
sbb
adc
out
iret
mov
movs
rcl
xor
mov
push
dec
cmp
or
jmp
inc
xchg
inc
push
out
and
xor
imul
movs
sbb
sbb
xchg
xchg
mov
retf
hlt
cmps
adc
push
pop
xchg
adc
popa
and
fsubr
cs
pop
pop
pop
jb
(bad)
push
retf
mov
pop
sbb
dec
xchg
sar
inc
pop
add
cld
idiv
inc
fs
mov
loopne
pushf
xchg
mov
cmp
scas
int3
test
push
dec
mov
es
das
rcr
and
stos
lahf
add
enter
pop
retf
adc
(bad)
sbb
call
xchg
push
sub
mov
leave
xor
jmp
jmp
mov
lea
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
add
add
bound
add
add
add
add
call
add
add
cld
mov
add
add
add
cld
repz
aas
xor
inc
(bad)
mov
loope
mov
jne
pop
movs
or
test
mov
mov
mov
mov
pop
pusha
mov
mov
sahf
js
mov
jb
or
jo
(bad)
inc
scas
push
cmp
call
jbe
mov
movs
pop
ret
mov
mov
push
cmp
or
rol
inc
(bad)
mov
xor
sti
dec
out
mov
dec
movs
aam
cmp
pop
jmp
mov
sub
cmp
ja
das
cmc
sbb
rcr
dec
lahf
pop
js
sub
fmul
mov
(bad)
and
adc
rol
fsubr
sub
cli
repnz
mov
push
jae
fucomip
sub
shr
dec
push
cmp
sub
cmc
(bad)
mov
push
xchg
and
and
sti
cmps
cmp
pop
std
and
(bad)
in
or
or
les
cmp
sub
ss
in
inc
jp
sbb
sar
mov
mov
sbb
ins
inc
add
rcl
push
shl
sbb
and
mov
retf
aaa
xchg
sbb
push
jbe
ret
int
cmp
push
cdq
mov
mov
adc
and
or
or
xor
ja
or
sbb
xchg
ffreep
add
jmp
push
stos
pop
pop
mov
cmp
popf
sbb
fsub
outs
scas
out
int
sub
stos
retf
push
jp
mov
int3
cdq
push
mov
mov
dec
test
mov
mov
pop
inc
cdq
mov
and
movs
or
and
mov
aaa
fcomp
jge
mov
addr16
jp
jbe
cmps
mov
inc
and
cmp
sub
adc
jl
inc
mov
shl
xor
adc
push
inc
(bad)
popa
test
push
inc
pop
dec
ret
sbb
push
and
mov
cmp
scas
jp
sbb
sar
fwait
mov
xor
inc
shl
push
sbb
fisttp
int3
inc
je
setg
add
xor
pop
(bad)
inc
push
jecxz
cmp
outs
aaa
xor
jge
inc
xor
bnd
and
std
mov
cmps
call
outs
ficom
xchg
test
(bad)
loope
xchg
test
pop
gs
int3
or
movs
mov
jo
push
fucomip
(bad)
xchg
jo
loop
shr
jno
div
out
test
add
inc
out
pop
adc
mov
inc
and
fwait
xor
es
fs
push
sbb
jmp
mov
mov
mov
sti
push
dec
daa
(bad)
dec
sti
ins
lds
or
mov
xor
enter
into
in
mov
sub
inc
xor
(bad)
adc
cld
xchg
(bad)
inc
sbb
test
and
push
movs
xchg
fnstsw
test
js
add
mov
mov
xor
mov
cmps
fild
imul
or
(bad)
into
jmp
fistp
pop
mov
xlat
mov
cmp
call
push
cmp
jecxz
pop
bound
test
int
lods
sar
scas
iret
mov
jmp
push
sub
pop
in
pop
lahf
outs
jmp
pop
xchg
mov
rol
cli
and
xor
jle
fisttp
imul
ds
and
mov
inc
jl
pop
cmp
dec
in
sbb
mov
cmp
mov
xchg
adc
shl
dec
(bad)
(bad)
mov
sub
jbe
mov
cmp
imul
sbb
mov
dec
pop
dec
mov
scas
dec
loopne
sbb
outs
les
jb
pop
ror
movs
scas
movs
pop
dec
fs
jb
xor
mov
lods
sbb
out
retf
std
sub
test
(bad)
aam
add
dec
xor
repz
aam
xor
das
cdq
push
out
ret
pop
out
fisubr
cmp
xor
int3
mov
xchg
aam
(bad)
outs
(bad)
fxch
fnsave
mov
xchg
cmp
imul
adc
xchg
pop
xchg
pop
jg
into
bound
sbb
imul
mov
retf
push
xor
iret
or
sbb
in
mov
ror
push
inc
and
addr16
div
xor
lods
(bad)
sbb
(bad)
and
add
cmp
out
(bad)
inc
aam
xor
xchg
dec
cmp
aas
sub
jge
mov
ror
mov
enter
ds
mov
and
pslld
add
(bad)
test
push
daa
xchg
jne
mov
xchg
sub
push
mov
xor
data16
jno
or
xchg
dec
pop
or
jmp
mov
cmps
js
rcl
sahf
sub
imul
sub
mov
jmp
pop
xor
xchg
mov
pop
test
xchg
adc
push
popf
adc
mov
sub
cmp
xor
int3
mov
stc
mov
push
add
sbb
mov
sub
push
sbb
retf
push
jo
sub
dec
sar
into
jb
jp
dec
jno
lea
dec
or
ss
aam
inc
js
movs
(bad)
cmps
ins
mov
test
mov
std
xchg
jne
pop
mov
mov
(bad)
(bad)
loope
popf
dec
(bad)
fs
adc
cmp
mov
pop
sahf
adc
or
jnp
ins
call
sub
push
mov
jg
out
mov
push
sbb
jg
out
adc
xchg
sbb
addr16
cmp
pop
dec
out
rcl
daa
push
int
addr16
sbb
enter
stos
cld
adc
cmps
scas
(bad)
dec
mov
inc
div
cmp
aaa
sar
cwde
retf
icebp
and
cmp
lea
movs
mul
loope
test
sub
xchg
cwde
adc
mov
imul
and
or
xchg
cwde
in
push
aam
xor
fdiv
cmps
push
pop
call
movs
cmp
add
out
aam
jp
call
jno
xlat
popf
xchg
out
push
mov
(bad)
das
jns
and
cmp
pop
cwde
fistp
ss
or
xlat
add
loopne
(bad)
or
outs
sub
sbb
cmps
or
lahf
lock
mov
or
ja
(bad)
and
shr
enter
daa
test
xchg
test
or
sar
sub
stc
mul
frstor
pop
clc
jno
aad
adc
dec
adc
add
mov
jns
dec
iret
pop
repz
mov
push
push
xor
in
xchg
xchg
sbb
push
push
jno
std
(bad)
xor
retf
mov
adc
dec
mov
jae
inc
adc
or
in
inc
jo
dec
ror
pop
movs
popa
scas
push
call
shr
mov
sti
loop
test
push
shr
cmp
jne
iret
push
mov
adc
rcr
fcmovnb
xchg
sub
xchg
jae
mov
jmp
unpckhps
push
xchg
bound
lahf
iret
test
stos
test
stos
sub
inc
jmp
shr
dec
aas
cdq
dec
ss
push
nop
fwait
adc
and
in
dec
ret
clc
cdq
in
(bad)
cmp
or
vaddsubps
cmp
stos
mov
jmp
push
fmulp
les
mov
lods
popf
xor
mov
retf
daa
out
push
dec
mov
shl
(bad)
or
daa
lock
outs
and
pusha
ds
popf
inc
jns
mov
out
cmc
ret
mov
pop
add
jecxz
cmp
sbb
xchg
adc
les
test
sub
mov
stos
cmp
addr16
xor
rcl
into
pop
hlt
push
push
jo
fisubr
ror
stc
and
jb
pushf
fwait
into
cmp
add
xchg
mov
pop
js
ja
sbb
icebp
xlat
and
loopne
out
int
xchg
mov
mov
cmp
rcl
ffree
pusha
cmp
in
pop
and
jb
std
call
cmp
adc
pop
jo
mov
jle
je
push
cmp
iret
dec
cmp
dec
adc
pop
cmp
ds
and
das
jne
push
xlat
and
adc
mov
jg
pxor
pmulhw
mov
lods
lods
or
(bad)
and
ror
push
push
sti
scas
imul
shl
stos
shl
mov
push
imul
xor
lock
xchg
sbb
and
push
cli
pop
in
inc
mov
jno
lock
cmps
cmp
mov
fdiv
cmp
int3
fldenv
mov
pop
sub
in
in
jne
mov
push
test
loop
fistp
cdq
adc
iret
push
loope
xor
or
jle
jl
icebp
jno
ror
fistp
pusha
pusha
fnsave
fidivr
int3
xor
push
jge
mov
or
call
pop
repz
cmp
inc
pusha
outs
sar
cmp
bound
out
or
call
test
mov
lds
into
ss
pop
mov
(bad)
scas
(bad)
(bad)
sub
xchg
sbb
jo
inc
mov
push
mov
imul
data16
(bad)
aaa
mov
scas
movs
mov
xchg
mov
xor
cli
sti
inc
lods
imul
sahf
add
mov
jmp
jge
and
fs
add
dec
xchg
cmp
ins
dec
pop
fild
dec
pop
sub
mov
stc
(bad)
jnp
adc
mov
xor
add
xchg
loop
fist
je
(bad)
jne
test
inc
adc
mov
jg
jnp
or
push
test
call
xor
dec
pop
shl
lods
mov
dec
push
iret
cmp
(bad)
(bad)
scas
push
push
nop
mov
inc
push
int3
cdq
lea
add
xor
xchg
jg
push
dec
sbb
ror
out
bound
pop
jnp
jnp
dec
fisttp
push
popa
movs
sar
in
fldenv
inc
nop
mov
inc
inc
dec
sar
pop
(bad)
sbb
dec
dec
daa
in
(bad)
adc
jle
inc
retf
(bad)
xchg
mov
out
ja
jle
mov
fidivr
adc
adc
add
in
add
add
mov
add
add
add
add
add
push
add
add
add
adc
add
add
add
add
dec
add
add
add
mov
add
add
out
add
add
add
add
out
ja
add
mov
add
add
aad
add
add
add
add
mov
add
lea
push
cmp
call
or
or
sbb
(bad)
pop
sub
into
dec
mov
inc
push
gs
(bad)
and
mov
mov
ds
inc
mov
repnz
(bad)
(bad)
into
fstp
and
xor
jmp
mov
test
int
sbb
xchg
sbb
cmp
aas
call
call
cwd
xchg
pop
es
ror
in
inc
add
mov
mov
fiadd
or
mov
jmp
loop
loopne
jecxz
jmp
push
mov
mov
fucomip
jle
cmp
outs
add
cmp
lods
in
mov
fmul
imul
lds
xchg
je
inc
(bad)
mov
inc
retf
sar
into
cmp
and
adc
xchg
in
pop
stos
(bad)
and
int3
dec
mov
mov
inc
inc
mov
jge
inc
popa
fs
sub
or
cmp
jns
scas
hlt
(bad)
sbb
add
mov
inc
jge
ret
or
jecxz
push
adc
inc
push
daa
pop
jae
inc
push
movs
mov
es
sub
pop
dec
jne
push
sbb
ins
lods
je
sub
adc
fs
mov
cli
icebp
fld
pop
stos
lods
data16
mov
jp
pop
sbb
xchg
sub
(bad)
dec
inc
ret
fild
mov
mov
ret
into
movs
sub
leave
sub
and
out
cmp
push
pop
in
lds
shrd
(bad)
imul
cs
push
fdiv
adc
adc
and
call
cmp
mov
push
test
icebp
xchg
ret
lock
out
jl
push
sti
pop
dec
bound
jge
jo
push
cmp
jo
dec
sbb
out
call
scas
je
cmp
cdq
xchg
pop
inc
sub
xchg
cmp
adc
xor
scas
repnz
in
test
sar
aam
or
icebp
lods
inc
mov
or
cdq
add
inc
jns
gs
mov
mov
and
push
cmps
test
out
aam
add
pshufw
rcl
pop
xchg
ss
push
inc
mov
push
push
scas
sub
dec
mov
mov
mov
cmc
cs
sub
pop
outs
inc
pop
push
xor
call
jmp
aam
aam
and
shr
int
add
mov
ret
xor
rcl
mov
cmp
sub
shl
xchg
jns
sbb
sbb
and
(bad)
sahf
mov
sbb
test
mov
outs
pop
addr16
inc
jmp
pop
sub
inc
aas
stos
and
xor
mov
cmp
(bad)
xchg
test
mov
cwde
icebp
mov
xor
jo
push
rol
stc
movs
jmp
in
jb
(bad)
sbb
mov
(bad)
aaa
mov
mov
mov
in
fisubr
call
mov
cmps
fstp
mov
dec
cmps
jp
sub
sbb
cmp
xchg
cmp
cmp
cli
inc
mov
movs
ds
inc
xchg
pop
scas
mov
dec
fwait
push
xlat
or
add
cmp
and
in
iret
xchg
mov
add
outs
add
dec
mov
cdq
inc
imul
sti
das
(bad)
jbe
inc
imul
bound
mov
adc
sub
in
je
ss
outs
pop
dec
test
les
cmp
add
xchg
and
lods
xchg
mov
retf
loopne
xchg
retf
fist
xor
mov
or
and
ffreep
and
mov
daa
and
shr
retf
pop
push
enter
inc
out
mov
sbb
ss
inc
test
push
je
shl
jp
popf
lea
popf
call
xchg
aas
fbld
mov
and
cwde
movs
imul
pop
inc
and
popa
in
ins
mov
xor
not
dec
inc
adc
pop
mov
xor
jmp
test
pushf
pop
sti
and
push
inc
clc
les
iret
pop
add
xor
push
repz
fcomp
in
dec
mov
stos
test
jns
pop
mov
pop
sbb
xor
ficomp
inc
lock
or
les
hlt
or
dec
xchg
xchg
adc
or
ret
sbb
leave
cmps
mov
sbb
shr
fisubr
pusha
test
add
clc
pop
aad
jae
sub
jae
scas
xor
xchg
fs
call
push
ss
call
mov
or
ret
sar
and
not
cmp
jne
cmp
mov
(bad)
es
bound
scas
sar
mov
out
add
pop
aad
in
mov
push
fwait
sbb
add
inc
sub
sub
xor
push
adc
xchg
dec
cld
pop
int
outs
jbe
mov
cmps
push
sbb
fdiv
(bad)
sub
xor
stos
inc
fucomi
push
adc
push
mov
(bad)
iret
mov
loope
pop
idiv
out
es
adc
outs
adc
sub
mov
icebp
sub
scas
int3
pop
pop
sti
test
mul
popf
hlt
xlat
sub
js
push
xor
dec
ret
dec
push
enter
mov
mov
hlt
ds
ret
retf
push
dec
outs
shr
test
scas
pop
sbb
pop
add
push
push
daa
cwde
cmp
adc
call
shl
out
lods
pop
scas
fmul
inc
daa
sbb
(bad)
mov
test
jno
adc
pop
xchg
jae
sub
jg
and
jns
cmp
fldenv
push
adc
adc
xor
inc
mov
inc
scas
pop
mov
dec
in
push
mov
jecxz
cwde
and
inc
jo
ins
push
fst
jg
push
bound
outs
sub
add
iret
inc
cmps
in
(bad)
test
dec
clc
jle
enter
and
in
outs
push
gs
test
add
or
add
adc
stos
(bad)
xor
pop
dec
mov
inc
imul
pusha
xor
pop
popf
and
xchg
pop
dec
std
push
(bad)
ffree
or
jl
pop
xor
xchg
mov
pusha
inc
push
ror
push
rcl
inc
mov
(bad)
fild
xchg
cmp
repz
push
fnstsw
loop
xchg
cmp
mov
sbb
retf
ds
pop
lock
or
mov
fs
aad
bound
lods
in
cld
leave
stos
aas
ins
mov
lds
and
jae
sahf
xor
arpl
push
inc
mov
popa
jge
dec
retf
shl
pop
ds
(bad)
mov
iret
loop
inc
sti
test
outs
ss
imul
sub
or
nop
add
pop
icebp
pop
out
pop
retf
xchg
sbb
xchg
jmp
icebp
inc
mov
mov
aam
daa
xchg
adc
cmp
cmp
mov
popf
cmps
pop
call
mov
adc
icebp
fiadd
shr
gs
jle
pop
dec
push
jecxz
retf
lods
mov
clc
retf
or
ds
xchg
sbb
xchg
iret
or
test
outs
push
sub
pop
xor
sub
fdivr
cs
test
neg
ins
(bad)
div
push
jle
addr16
dec
lds
ins
(bad)
lods
sub
mov
(bad)
int
retf
mov
and
(bad)
call
js
std
mov
inc
stos
dec
mov
shr
rcr
std
test
fst
sahf
jecxz
and
cmp
xor
mov
mov
in
test
test
inc
test
pop
xor
jae
in
mov
pop
imul
push
jecxz
test
scas
fist
xor
fist
pop
mov
sub
dec
push
std
sub
jl
sub
call
je
push
push
dec
fcmovnu
mov
arpl
jecxz
jbe
inc
lea
imul
sub
jbe
fsub
mov
loopne
push
imul
pushf
(bad)
sti
scas
mov
mov
mov
jmp
cdq
xor
adc
add
inc
clc
jl
ja
arpl
vmovmskps
in
xor
cwde
push
jns
jmp
dec
adc
push
and
sub
(bad)
(bad)
pop
fcomp
repnz
repz
movs
das
sbb
inc
daa
inc
inc
retf
jbe
dec
ins
and
sar
cmp
sub
stc
pop
sbb
outs
lea
pop
out
or
jmp
xchg
xor
cmovo
and
inc
loopne
mov
mov
(bad)
cmp
inc
xor
sub
std
fidivr
sub
jl
jo
(bad)
cmp
idiv
xchg
mov
aas
mov
shl
sbb
pop
or
push
or
les
and
sub
mov
xchg
pop
mov
cmp
push
and
and
dec
ficomp
mov
es
fild
cmp
fcomp
dec
add
(bad)
xor
mov
frstor
dec
mov
pop
fwait
dec
shr
jbe
je
add
daa
clc
retf
cmovp
mov
inc
ss
clc
adc
adc
movs
dec
(bad)
cmp
enter
push
sub
push
adc
or
fwait
jl
sahf
sbb
and
pop
out
cmp
push
fcmovnbe
jge
sahf
jmp
push
push
(bad)
ficom
outs
push
mov
cmp
add
rcr
movs
push
jle
add
jg
jp
dec
push
into
cli
test
shl
ds
ficom
fs
cmp
pop
mov
daa
mov
cdq
aad
call
dec
push
adc
or
adc
adc
fdivr
mov
sub
mov
xor
pop
shl
pop
mov
sbb
pop
push
jmp
jbe
xor
dec
test
ss
mov
stc
mov
scas
pop
dec
push
ins
imul
inc
shl
addr16
push
xlat
push
jle
cmp
nop
aad
outs
xchg
dec
cld
xchg
mov
retf
mov
sbb
xor
in
call
adc
lfs
lahf
mov
out
scas
sbb
sub
clc
and
es
in
test
jl
xor
movs
jo
push
(bad)
data16
test
push
movs
call
add
add
add
cld
mov
add
les
add
push
add
add
add
fadd
add
add
add
add
add
sub
pop
add
out
add
add
retf
add
add
imul
add
add
add
stos
add
cmps
add
add
add
lea
add
add
add
stos
add
js
add
add
je
pop
xchg
inc
xlat
repnz
repnz
pop
xchg
test
lods
mov
inc
int3
mov
mov
stc
retf
movs
stc
ins
jne
mov
add
cmp
jne
jl
inc
add
and
jo
sbb
and
push
pop
inc
mov
push
fistp
cdq
sar
inc
jns
popf
arpl
and
mov
add
sbb
push
mov
mov
mov
mov
xchg
ret
(bad)
sub
and
mov
sub
jmp
lods
daa
jne
stc
icebp
cdq
mov
jl
adc
mov
in
add
call
dec
mov
add
rol
int3
pop
dec
out
les
xchg
add
cmp
test
pop
or
daa
pop
jno
mov
sbb
ret
ja
out
add
sbb
pusha
je
push
mov
call
push
repz
xchg
push
mov
icebp
mov
or
movs
pushf
cmp
in
inc
or
xchg
int
fldcw
xchg
xchg
xor
jne
(bad)
outs
or
add
ficomp
pop
mov
enter
cwde
nop
lahf
xchg
jmp
mov
fdiv
push
push
push
fcmovu
or
push
outs
repz
adc
push
or
dec
cmp
dec
pop
aaa
sahf
cmp
push
rcr
jns
sti
push
punpckhdq
mov
clc
mov
jp
ror
sbb
inc
add
mov
mov
jle
fsub
pop
pop
into
fisubr
aam
push
rcr
(bad)
test
(bad)
je
movs
inc
call
sbb
mov
mov
push
push
in
(bad)
fimul
sar
test
jae
sbb
or
lds
jns
pusha
pop
mov
les
loopne
(bad)
dec
lods
mov
mov
mov
sub
repnz
das
xlat
jno
sahf
add
and
mov
iret
div
call
leave
push
xor
ftst
inc
iret
jecxz
jmp
les
inc
sbb
add
add
mov
in
retf
xor
arpl
icebp
mov
and
icebp
nop
aam
sub
fwait
jmp
jecxz
movs
add
mov
inc
mov
cmp
add
jge
xchg
aaa
pop
call
cmps
movs
or
add
(bad)
fdiv
sub
scas
fwait
aad
xchg
mov
fidiv
mov
mov
mov
cmp
ret
sub
push
inc
out
fld
call
dec
mov
xchg
(bad)
inc
mov
inc
dec
movs
outs
jmp
mov
cmp
mov
das
cmp
je
pop
sti
sbb
or
rcr
mov
sbb
cmp
mov
sub
jbe
inc
push
jmp
loop
jle
dec
popf
inc
pop
(bad)
jnp
sub
xlat
mov
ins
add
fcomp
inc
jne
cli
pushf
xor
fidivr
mov
or
adc
dec
fist
inc
aaa
or
jmp
push
movs
or
pop
jl
xchg
iret
cld
call
pop
mov
stos
scas
frstpm(287
sbb
or
ins
inc
pusha
mov
outs
stc
mov
nop
in
sub
ss
sub
(bad)
mov
jp
xchg
cmps
jge
mov
jecxz
xchg
movs
aaa
cmp
xchg
sub
cmps
sub
mov
in
fstp
xor
stc
mov
ficomp
or
out
aam
and
and
dec
mov
outs
popa
lock
xor
hlt
or
sbb
js
int3
gs
imul
fsub
xchg
lods
sbb
ins
add
xchg
mov
(bad)
push
test
popa
fst
push
sbb
jb
xchg
sub
daa
dec
iret
js
dec
cmp
jmp
shl
xor
add
xchg
jge
cmp
jge
movs
out
mov
mov
and
cli
movs
adc
in
hlt
les
mov
xor
test
and
fadd
adc
cmc
add
sub
xlat
xor
stos
ja
test
mov
out
add
mov
clc
adc
leave
push
pop
xchg
icebp
xor
inc
sbb
fs
and
sbb
inc
ds
rcr
lock
add
and
push
fs
jno
fnstenv
in
inc
cs
arpl
mov
push
scas
test
stos
fwait
adc
mov
or
test
out
mov
test
inc
push
add
sbb
rol
mov
pop
ins
test
les
repz
sub
in
mov
push
clc
addr16
adc
add
lahf
mov
movs
(bad)
cmp
pop
dec
cmps
xchg
popf
loope
or
lahf
mov
push
outs
stos
imul
pop
xor
inc
jmp
outs
retf
jmp
mov
rol
pop
or
inc
add
mov
stos
mov
test
clc
pop
add
sbb
mov
rol
pusha
add
sub
xchg
push
out
or
pusha
cs
int
(bad)
xchg
loope
repnz
dec
fld
sti
and
lods
lods
push
jl
cmc
imul
cmps
add
outs
out
and
(bad)
sbb
loop
add
lahf
dec
mov
xlat
lods
scas
aad
sub
dec
ds
cmp
jo
xor
sbb
ins
pop
jmp
fcmovnu
cld
(bad)
daa
pop
mov
enter
and
push
xchg
adc
fwait
adc
inc
push
mov
gs
fisubr
mov
mov
inc
dec
and
jns
fdiv
scas
xchg
(bad)
mov
mov
mov
scas
pop
das
test
call
sub
inc
dec
add
imul
jne
jbe
cmp
xlat
sti
pushf
imul
and
cmp
cmc
xchg
je
cmp
sti
scas
mov
xchg
addr16
sub
imul
sub
mov
mov
adc
mul
dec
retf
in
xchg
mov
xchg
cld
sub
pop
int3
mov
pop
jnp
xor
cmc
fnstcw
or
fsub
cmc
in
xchg
jbe
in
sbb
fcmovu
cmp
dec
xor
jb
ins
inc
out
sbb
imul
test
fnstsw
mov
retf
pop
mov
jecxz
call
dec
mov
xor
jnp
lea
mov
add
movs
scas
in
scas
ror
cmp
add
rcr
or
sbb
in
ret
sbb
cwde
sub
inc
sar
jns
sbb
push
and
ror
pop
popa
sub
repz
pop
or
mov
pop
mov
int3
adc
jae
in
leave
xor
cwde
mov
repz
and
jmp
arpl
sub
rcr
and
xchg
xchg
clc
sbb
sbb
mov
xchg
or
pop
push
mov
fcomp
mov
repz
rol
cs
cmp
add
das
test
jg
pop
scas
movs
cmp
mov
or
adc
adc
xchg
xor
inc
repz
repnz
cmp
fdivr
push
pop
std
cmp
pop
dec
pop
push
adc
or
push
in
mov
das
jmp
or
cmc
push
xchg
jg
and
jno
ins
mov
dec
xchg
push
rcr
pop
into
xor
enter
popa
cmp
jb
gs
and
mov
out
stc
sbb
retf
loope
fwait
mov
mov
sbb
jmp
mov
outs
sub
out
mov
pop
or
hlt
popa
(bad)
mov
xchg
adc
push
sub
fiadd
das
jecxz
jp
add
cdq
sahf
push
mov
sub
repz
out
push
xor
mov
adc
dec
sbb
adc
aad
scas
jl
fmul
pop
push
xchg
popa
jne
repnz
jo
cli
cmp
out
push
mov
sbb
or
leave
lods
jle
mov
test
loop
and
mov
xor
pop
bound
cmc
or
push
jp
pop
clc
add
push
pop
jmp
lahf
out
push
repnz
(bad)
out
(bad)
pop
stos
fs
push
mov
rol
(bad)
or
loop
inc
inc
call
mov
xchg
inc
push
xor
mov
bound
jmp
mov
ins
mov
outs
fsub
mov
das
push
sti
outs
jns
jnp
dec
and
test
(bad)
movs
mov
mov
adc
or
fwait
mov
jmp
mov
adc
hlt
mov
mov
cli
repnz
jle
iret
and
jp
in
pusha
ins
sub
lods
add
mov
add
push
(bad)
push
cmps
adc
inc
jecxz
cmp
adc
jb
pop
cld
lock
push
add
mov
and
add
mov
aam
mov
inc
jp
sub
imul
mov
test
or
outs
popa
mov
aad
cmp
push
stos
ret
pop
xchg
out
push
dec
rol
cwde
mov
jmp
mov
adc
sar
jnp
popa
int
fnstenv
xor
popa
bnd
mov
daa
push
lahf
cld
lahf
jns
in
mov
pop
jae
lock
inc
lds
hlt
push
mov
in
push
xor
addr16
ins
shl
cmp
jnp
frstor
and
inc
mov
dec
push
and
cmp
add
add
mov
sbb
pushf
lods
popa
mov
mov
mov
leave
mov
lea
inc
test
rcr
stos
int3
imul
aad
gs
pop
fdiv
or
icebp
loope
xchg
int
jle
sub
xchg
add
adc
fsin
lods
mov
std
stc
or
test
pop
mov
mov
test
in
(bad)
jmp
imul
ja
jno
jo
adc
add
outs
add
add
add
rol
dec
add
add
add
dec
add
add
add
jmp
add
mov
add
add
add
add
add
add
add
add
add
das
and
mov
add
add
add
loopne
add
jb
add
add
add
add
add
add
dec
add
add
add
add
test
add
loopne
add
xor
add
add
xchg
enter
mov
mov
xchg
adc
jl
lea
pusha
xor
sub
cmps
sbb
cmc
aaa
sub
jle
cdq
test
cld
xchg
imul
out
jnp
add
xor
mov
(bad)
mov
mov
ss
hlt
nop
lahf
xchg
jg
pop
dec
mov
mov
(bad)
rol
out
outs
popf
inc
mov
test
sti
inc
test
cld
mov
call
cmp
inc
loope
mov
pusha
inc
call
movs
out
mov
pop
pop
add
imul
dec
jmp
test
in
stos
in
in
push
sub
out
bound
push
pop
into
mov
and
lea
push
fdiv
xchg
fstp
or
js
sti
sbb
shl
pop
shl
nop
add
outs
popa
push
xor
dec
and
out
pop
sti
xchg
dec
adc
inc
call
(bad)
cmp
sbb
sahf
pop
mov
push
test
lds
xlat
or
nop
inc
lea
sbb
mov
pop
push
mov
popa
cwde
(bad)
sub
cdq
cli
xchg
xchg
xchg
push
sbb
sub
cmps
inc
fisttp
mov
mov
repz
out
in
mov
(bad)
retf
ins
dec
jo
outs
sbb
cli
push
retf
cmps
movs
jo
or
add
retf
pushf
xor
add
or
push
and
xchg
push
ins
fucom
mov
mov
ror
jle
add
inc
jecxz
fdivr
sub
dec
std
pushf
sbb
xor
push
jmp
pushf
out
mov
imul
stos
jmp
call
shl
dec
out
push
dec
xchg
xor
lds
and
lods
lock
jne
adc
rol
ins
addr16
or
and
sub
mov
and
pop
or
or
jmp
cmp
das
or
mov
dec
sahf
pop
xchg
dec
jnp
mov
lds
pop
push
adc
fisub
adc
push
loop
loopne
es
jo
shl
jnp
stc
mov
mov
inc
int
int
inc
and
or
xchg
jle
xor
or
(bad)
(bad)
lods
jp
out
sbb
xchg
dec
sub
lods
inc
pop
aam
test
adc
inc
mov
rcl
sbb
ins
sbb
sub
mov
imul
jecxz
push
and
repnz
mov
es
popf
and
cmp
outs
pop
and
push
push
add
xchg
cmps
mov
mov
(bad)
push
dec
jo
nop
pop
push
mov
lahf
jmp
pop
xchg
les
jnp
push
or
mov
push
in
mov
xor
mov
mov
outs
cmp
pop
fdivr
mov
push
add
popf
xor
dec
jp
mov
int3
sub
js
sub
dec
sbb
sbb
dec
ffree
cmp
pop
cmp
push
rcl
sub
push
inc
push
add
pop
mov
mov
xor
clc
daa
aam
cmp
aaa
shr
xor
stos
loopne
adc
mov
(bad)
mov
and
and
hlt
xor
call
cmp
lahf
cmp
int3
call
imul
call
push
adc
push
mov
int3
arpl
repz
push
jmp
out
rcl
push
imul
or
pop
dec
repnz
cld
cmp
xchg
sub
out
push
je
popa
push
loop
movs
das
loope
jp
int
sti
int3
jne
fld
inc
inc
sahf
icebp
mov
jne
mov
mov
daa
xor
ror
sbb
shl
mov
pop
xchg
sbb
sbb
sbb
jmp
and
mov
in
lods
pop
inc
loop
ror
fst
(bad)
xor
jno
fadd
bnd
jmp
rol
call
inc
inc
(bad)
xor
xchg
pusha
call
mov
pop
out
cmp
xchg
push
adc
mov
out
sub
and
cmp
div
loop
loopne
jg
in
inc
inc
les
push
fdivr
bound
rcl
add
cmc
xor
and
push
pop
std
cmp
cmp
mov
mov
(bad)
xchg
add
adc
push
repz
add
mov
pop
arpl
ss
xlat
xchg
sbb
in
out
dec
dec
push
fs
push
(bad)
repz
aas
pop
sub
lds
jmp
sbb
sbb
push
push
pop
xchg
sbb
cs
test
ror
mov
call
les
pop
ret
(bad)
jmp
fisttp
fist
push
xchg
scas
not
mov
or
mov
mov
mov
xchg
push
fidiv
sbb
cmc
mov
adc
inc
adc
cmp
sahf
test
nop
dec
jo
jb
sub
pop
mov
mov
push
inc
pop
cmps
out
aas
push
mov
movs
cdq
les
mov
(bad)
test
mov
mov
xor
jae
mov
fidivr
push
pusha
outs
pushf
jnp
hlt
and
inc
arpl
jl
arpl
in
shl
xchg
adc
inc
mov
xchg
xchg
push
pop
(bad)
inc
outs
popa
jp
sub
adc
call
mov
cmp
mov
les
rol
repnz
xor
aas
sbb
mov
enter
cmp
push
(bad)
neg
sbb
(bad)
jmp
mov
mov
xchg
cmp
cs
lods
xor
shr
pop
add
add
out
lods
xchg
stos
popa
jbe
cli
je
pop
aam
aam
xor
push
mov
icebp
mov
xor
cmp
xchg
xchg
or
iret
or
sub
xchg
mov
lock
fdiv
mov
sub
mov
cmp
inc
cwde
les
stos
xchg
fst
jmp
jb
add
add
imul
in
shl
(bad)
das
cdq
mov
or
lods
pop
add
int
push
sub
mov
dec
mov
jle
cmps
cdq
cmp
test
push
mov
sar
xchg
cmp
xchg
mov
sbb
int3
push
add
or
dec
into
(bad)
pop
arpl
add
push
xchg
cmp
mov
mov
mov
sub
inc
dec
scas
(bad)
xchg
sbb
mov
inc
ret
jns
(bad)
mov
out
jns
pop
and
outs
pop
or
retf
jge
pop
dec
xchg
and
inc
xchg
sbb
test
mov
push
hlt
hlt
jbe
mul
and
jmp
and
ror
jns
inc
pop
xlat
dec
je
aas
stos
mov
xor
mov
mov
popaw
rcr
es
pop
fsubr
ins
out
ins
sahf
into
test
nop
ss
push
push
xor
leave
mov
cmc
jecxz
mov
shl
popa
cmp
cmps
xchg
aas
and
sti
mov
je
xor
test
mov
fiadd
mov
in
aam
dec
jge
imul
xor
or
adc
in
push
mov
inc
or
inc
adc
mov
dec
jnp
add
sub
mov
sbb
push
es
sub
cmps
mov
mov
dec
pop
mov
dec
pop
lds
dec
mov
push
mov
dec
jo
adc
pop
lods
xchg
sbb
mov
push
fnsave
aam
mov
jg
out
sbb
and
cmp
jmp
in
icebp
adc
(bad)
into
cmp
or
push
mov
mov
test
push
gs
cli
xchg
pushf
mov
push
ins
xor
jmp
jecxz
(bad)
(bad)
pushf
mov
and
call
adc
push
je
cmp
daa
pop
iret
test
movs
add
mov
call
in
xor
cmc
call
pop
push
xor
jle
add
test
xor
jne
jnp
lea
das
sbb
enter
cmp
add
in
icebp
in
mov
jge
jecxz
repnz
lea
movs
xchg
cdq
pop
lea
cmps
data16
pop
push
cmp
cmp
out
mov
repnz
rcl
sar
retf
add
mov
jnp
mov
jbe
scas
add
lock
(bad)
dec
jb
sub
push
shl
repz
cmp
xlat
lahf
es
sub
lods
fbstp
push
jnp
mov
ss
mov
and
cmp
(bad)
retf
dec
(bad)
int3
fs
add
pop
adc
das
call
dec
inc
movs
sbb
jb
pop
ja
xor
add
mov
int
mov
repz
aam
sub
inc
icebp
inc
in
outs
fcomp
iret
enter
gs
aad
inc
gs
push
mov
ret
mov
movs
lea
mov
mov
pop
fisttp
and
shl
or
and
in
int
outs
dec
in
add
add
sub
mov
xchg
imul
cwde
push
jns
inc
call
sbb
neg
jbe
or
je
sub
loopne
imul
sub
aam
and
frstor
adc
push
fld
inc
sti
gs
mov
je
push
or
inc
test
popa
xchg
mov
xor
lahf
push
push
pop
mov
fsub
nop
js
mov
jecxz
dec
xor
popf
cs
out
sbb
sub
adc
shl
inc
and
int3
icebp
mov
jne
ds
mov
test
nop
dec
mov
push
xchg
xlat
scas
jbe
xchg
mov
mov
adc
out
mov
jnp
jo
(bad)
inc
(bad)
cmps
sub
cli
jo
pop
pusha
fadd
div
xor
hlt
add
pop
push
pop
sbb
out
jle
gs
cmp
stos
add
aad
cmps
add
adc
cwde
lods
jl
mov
inc
mov
icebp
push
mov
xchg
jne
fsub
mov
sbb
into
neg
popa
cli
mov
push
fisttp
neg
les
cmc
inc
scas
test
shl
dec
xlat
mov
icebp
inc
retf
cmps
call
aad
or
ror
xchg
add
add
add
retf
add
jp
adc
add
add
add
add
add
add
add
add
add
add
movs
add
add
cmp
add
mov
add
mov
add
add
fld
mov
add
jg
lock
add
add
add
add
iret
add
add
dec
add
rol
add
pop
fmul
in
sbb
add
rol
cmp
adc
aam
cdq
ret
push
sub
cmc
xor
fisubr
adc
in
mov
retf
fnstenv
add
outs
ret
and
jl
or
push
cdq
or
cmp
test
mov
addr16
jle
mov
and
inc
iret
mov
sbb
push
js
and
into
pushf
pop
dec
mov
or
std
sub
lods
fisttp
ins
dec
fdiv
scas
or
js
mov
lock
ret
inc
sbb
jno
or
aam
ds
(bad)
sbb
movs
div
inc
and
neg
les
div
test
(bad)
pushf
adc
add
adc
or
ret
fldenv
fwait
(bad)
adc
or
test
(bad)
js
xchg
in
js
mov
jg
xor
sbb
inc
lds
mov
cs
and
add
fiadd
movs
mov
(bad)
arpl
stos
(bad)
sub
jp
inc
cmc
jmp
sub
jmp
aad
adc
aas
and
adc
push
popf
sbb
(bad)
push
fst
cmp
fadd
jmp
mov
mov
jg
mov
rcl
stos
xchg
loop
ds
loopne
outs
shl
es
pop
xchg
cld
icebp
pop
cmc
sub
add
sub
rol
fwait
adc
scas
cmp
sub
adc
int3
loope
jmp
mov
clc
add
mov
popf
mov
and
sbb
mov
mov
pop
stos
mov
test
jl
into
adc
test
bound
pop
repz
shl
cs
mov
sub
call
jns
bsf
mov
loope
sub
xchg
stc
sub
xor
div
pushf
sar
dec
jne
inc
pusha
imul
sar
pop
enter
xor
and
aam
shr
adc
xor
jmp
cmpxchg
aaa
out
lds
dec
xor
cwde
mov
xor
jne
data16
fiadd
add
fmul
dec
arpl
mov
add
repz
jb
mov
or
loopne
stos
or
retf
xlat
push
mov
inc
jle
mov
adc
lahf
nop
test
push
mov
leave
add
aaa
call
stc
push
jnp
idiv
es
test
(bad)
push
outs
adc
sbb
mov
cs
ja
xor
hlt
jp
enter
(bad)
sti
out
sbb
add
mov
pop
xor
aaa
ret
sub
fmulp
out
jae
and
int3
xor
clc
mov
mov
dec
addr16
sbb
jb
out
sbb
neg
loopne
popa
pop
int3
mov
xchg
idiv
sbb
std
mov
stos
ja
out
mov
xor
fidiv
popf
jno
mov
pop
inc
inc
push
sbb
out
and
and
popf
bound
sahf
dec
lea
jge
inc
pop
sub
and
(bad)
and
mov
(bad)
(bad)
test
cwde
xor
mov
test
clc
push
jmp
fs
(bad)
inc
dec
stc
push
cmps
pushf
mov
outs
aaa
sti
mov
test
add
adc
ror
xor
push
cmp
fadd
ret
fs
xlat
mov
test
out
push
pop
aad
fwait
pop
jecxz
sti
inc
adc
lods
aad
jmp
xchg
int
or
pop
sbb
hlt
mov
je
mov
push
inc
je
mov
xor
lods
loop
adc
sbb
outs
add
in
les
(bad)
mov
pop
cmp
xchg
retf
xchg
sbb
lahf
xchg
ret
out
stos
dec
aam
sub
cs
shl
retf
lods
mov
xlat
sub
xchg
int3
mov
hlt
arpl
movs
cmp
cs
pop
shr
fwait
lods
mov
mov
inc
arpl
iret
or
jbe
sub
mov
out
lock
sub
pop
enter
jg
or
not
fwait
pop
pop
mov
xchg
les
shl
mov
lea
cmp
aaa
movs
jo
aad
adc
mov
jo
mov
or
and
mov
daa
pop
add
jo
fld
std
xor
and
stos
push
push
ins
jg
add
mov
push
dec
cmp
mov
inc
popf
mov
push
sbb
lods
mov
add
rcr
shl
adc
pusha
jne
repnz
cld
adc
and
inc
xchg
adc
out
jmp
xchg
iret
jg
test
xor
add
lods
inc
push
int3
jmp
(bad)
out
loop
adc
xor
add
shr
outs
adc
ja
and
adc
cld
jno
push
lahf
xlat
leave
cmps
pop
out
mov
and
fist
adc
in
sub
sub
and
(bad)
in
loop
xchg
push
push
sub
mov
xchg
sbb
gs
jg
not
daa
jg
jmp
rcr
jle
scas
add
shl
xchg
mov
cmp
push
ja
pop
cmp
aad
mov
xor
mov
icebp
push
sbb
mov
jmp
xchg
addr16
int
jbe
push
in
stos
push
adc
lods
ja
or
mov
dec
dec
ins
mov
mov
jo
pop
fwait
push
imul
jb
jbe
mov
aaa
add
ret
mov
xchg
arpl
mov
lods
jo
aas
jle
push
xor
les
dec
xor
(bad)
cld
test
inc
pop
cli
out
loope
cs
pop
push
jle
lock
mov
dec
in
xor
jae
adc
jl
adc
leave
inc
jg
pop
mov
mov
(bad)
mov
jno
or
int3
push
mov
sub
data16
pop
ret
aam
dec
add
sahf
lock
add
fcom
test
sub
pop
shr
mov
mov
leave
inc
out
cmp
retf
xlat
jns
mov
push
inc
dec
movs
sub
out
das
jbe
test
jl
cmps
adc
rcl
sub
ret
retf
sbb
or
mov
inc
add
int3
je
mov
fbstp
cwde
pop
in
adc
mov
jns
inc
fild
stos
scas
lods
fidiv
lds
icebp
sar
fild
(bad)
lods
pop
call
adc
(bad)
inc
push
push
(bad)
jmp
mov
(bad)
leave
sub
add
aad
ficom
mov
sbb
sbb
push
mov
loop
jp
daa
push
add
or
mov
cmps
lods
imul
add
pop
adc
push
out
mov
aad
ins
sub
fwait
sub
js
xor
mov
stos
movs
mov
imul
lock
pop
fcmovnbe
(bad)
fistp
xchg
xor
scas
mov
js
xor
outs
or
or
dec
out
(bad)
in
cwde
xchg
mov
mov
xor
fimul
outs
lods
sub
cdq
mov
pop
adc
inc
std
pusha
push
inc
or
push
adc
mov
imul
repz
je
mov
mov
enter
dec
aad
jle
xchg
aas
in
leave
mov
data16
sbb
mov
or
call
cmps
xor
outs
push
imul
mov
ds
test
inc
popfw
xor
ror
sub
fs
ins
jb
(bad)
aad
les
je
cmp
fdivrp
jae
cs
aas
push
dec
cmp
add
ficom
cld
add
dec
mov
pop
cld
rol
mov
or
adc
cli
or
dec
(bad)
in
mov
fucomi
xchg
mov
stos
sub
push
mov
add
retf
fisubr
loopne
outs
cmp
pop
or
mov
mov
pop
test
mov
hlt
push
push
push
stos
outs
lea
mov
mov
dec
mov
sbb
popf
push
pop
daa
mov
push
pushf
leave
or
neg
outs
mov
in
test
je
mov
dec
or
iret
ins
dec
dec
popf
push
inc
mov
inc
jge
mov
jle
(bad)
and
adc
jne
sub
mov
mov
fs
mov
xor
mov
push
jg
jo
xor
jb
lock
(bad)
jmp
hlt
scas
sar
jmp
jmp
or
rol
mov
push
mov
cwde
or
jmp
jmp
jecxz
lods
icebp
sub
mov
adc
outs
(bad)
je
jmp
aam
repnz
sbb
fiadd
ins
mov
hlt
je
mov
jno
xchg
push
daa
dec
les
jnp
or
inc
ja
ds
out
sbb
sbb
lods
ds
pop
icebp
and
and
popa
mov
test
mov
ret
mov
sbb
(bad)
jno
add
outs
rcl
or
sub
xchg
stos
push
and
xchg
fisttp
pop
cmc
sub
adc
scas
fstp
xchg
ss
out
sub
shl
cmp
push
cli
push
fld
arpl
add
or
lds
(bad)
pop
ins
dec
sub
push
pop
daa
test
js
bound
jae
pusha
xchg
out
pop
sub
dec
inc
cmp
inc
arpl
cmps
or
mov
inc
xchg
mov
hlt
sub
das
mov
cmp
cwde
and
(bad)
lea
call
fimul
out
(bad)
in
or
dec
cmc
dec
and
pop
pop
es
push
movs
(bad)
jmp
jae
lea
mov
shl
mov
add
popf
outs
hlt
iret
inc
and
push
jecxz
fistp
js
jmp
or
(bad)
jmp
jb
xchg
daa
inc
adc
mov
fmul
stos
cmc
xchg
fmul
dec
cli
sahf
lods
ja
call
add
adc
mov
xchg
jge
into
pop
pop
add
push
fmul
out
jbe
sbb
ret
mov
cs
sub
or
jns
into
mov
mov
add
and
add
add
add
in
out
add
add
add
sbb
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
scas
add
add
add
add
add
fst
add
add
add
std
into
lods
xchg
adc
ss
mov
(bad)
ins
xlat
push
adc
inc
add
pusha
test
xchg
packsswb
ds
pop
pop
pop
mov
retf
and
sbb
(bad)
mov
fisubr
stos
pushf
(bad)
jmp
inc
and
out
inc
jnp
inc
sub
shl
push
add
xor
out
(bad)
cmp
fs
lods
dec
sub
(bad)
add
and
inc
and
sub
out
lock
call
sahf
and
imul
add
add
xchg
clc
mov
fxch
scas
xchg
cmps
movs
add
ja
(bad)
xchg
or
cli
push
mov
lods
adc
in
les
lods
mov
in
outs
lods
fcom
lahf
stc
(bad)
fbstp
test
sub
cmp
xchg
loop
cli
repnz
push
mov
lahf
icebp
pop
and
daa
es
lds
data16
dec
dec
fstp
and
and
push
ja
sahf
shl
loopne
adc
outs
icebp
ret
test
add
mov
xor
hlt
adc
sub
lods
mov
mov
pop
cli
fcom
push
sub
jne
lock
int
jmp
fadd
enter
repnz
and
pop
adc
jnp
jo
std
bnd
add
pop
pop
or
mov
cmp
mov
hlt
jle
adc
popa
(bad)
mov
mov
bound
jb
xlat
or
loopne
pop
dec
xchg
pop
pop
nop
ss
(bad)
xchg
jno
mov
call
cwde
pop
pop
dec
xchg
push
(bad)
frstor
(bad)
ss
mov
aam
das
mov
xlat
mov
out
cdq
mov
test
lods
mov
clc
adc
push
(bad)
mov
sub
dec
add
inc
jno
cmps
adc
out
inc
imul
add
pushf
inc
push
sbb
call
dec
sub
iret
mov
xchg
xchg
gs
cmc
and
fs
mov
iret
movs
lock
xchg
cmp
adc
retf
punpcklwd
jge
xchg
dec
xor
and
jb
(bad)
jmp
adc
dec
pop
jecxz
lds
mov
xchg
add
mov
and
outs
pop
pop
outs
test
mov
shr
mov
rol
add
sub
ds
dec
es
addr16
and
call
imul
mov
mov
clc
pop
jmp
add
xchg
add
cmc
daa
scas
pop
push
sub
jno
aaa
jle
mov
push
pushf
xchg
idiv
shr
imul
(bad)
scas
mov
out
jmp
sahf
out
mov
sbb
jb
ja
pop
inc
dec
dec
xor
cdq
outs
enter
cmc
addr16
gs
inc
sbb
jp
push
(bad)
lds
mov
jl
call
out
lock
mov
mov
mov
pop
scas
test
in
shr
outs
les
pop
data16
dec
popa
mov
add
inc
scas
fwait
xor
icebp
hlt
imul
push
fnstenv
xor
pusha
xchg
sub
ret
movs
push
rcl
or
mov
mov
repz
pop
cwde
fisttp
fnsave
adc
fwait
xchg
jb
int
jl
lock
mov
or
cmps
jp
sub
sbb
jmp
gs
(bad)
fmul
rol
test
mov
cs
stos
popw
mov
stos
pusha
into
mov
bound
or
mov
sbb
sbb
xlat
arpl
mov
and
das
scas
jp
into
ds
arpl
call
pop
or
jge
jae
add
push
cmc
jnp
push
jnp
sub
mov
push
pop
hlt
mov
and
inc
sahf
(bad)
push
test
je
cmps
adc
xlat
pop
mov
add
jne
out
add
jbe
das
in
js
int
and
sub
cs
enter
(bad)
xor
add
or
mov
inc
sub
leave
movs
add
imul
adc
loopne
call
es
fisubr
dec
cmps
mov
(bad)
push
dec
movs
enter
push
mov
loope
pop
fst
inc
mov
mov
mov
fstp
icebp
ins
inc
dec
cli
push
cmps
mov
pop
mov
ret
pop
jno
inc
adc
cli
pop
jo
xchg
ret
xor
mov
xor
ds
and
inc
xor
cdq
jae
frstor
sub
mov
and
pushf
xor
(bad)
xor
push
nop
dec
(bad)
and
dec
scas
cmps
ret
ins
addr16
bt
and
xchg
dec
movs
push
mov
lods
xor
in
xchg
aad
and
xchg
sbb
inc
inc
add
jg
or
sbb
push
jnp
inc
mov
movs
dec
sub
arpl
scas
xor
jb
gs
xor
fadd
hlt
push
ret
cmp
pop
or
jnp
add
js
or
mov
neg
pop
or
sub
aam
inc
inc
fs
pop
or
mov
outs
jp
loope
rcl
mov
retf
pop
in
jl
add
push
xchg
jg
hlt
es
pushf
mov
xchg
movs
gs
pusha
inc
test
enter
xchg
movs
cs
jo
mov
dec
adc
stos
out
cli
sar
mov
lahf
mov
push
and
add
push
sub
sub
add
test
adc
(bad)
mov
sahf
mul
fcom
ret
cmp
enter
lahf
les
retf
pusha
jbe
scas
sub
adc
cld
xchg
aam
inc
pop
daa
movs
scas
or
and
jecxz
dec
int
(bad)
fcom
xor
je
ss
pop
fwait
mov
data16
adc
mov
fbstp
mov
div
repz
dec
sar
push
scas
xor
cmp
mov
cmp
inc
es
cwde
js
std
iret
mov
mov
pop
popa
pop
aaa
imul
xor
pop
scas
jbe
dec
sub
outs
in
stc
bound
dec
sub
mov
mov
sub
push
gs
ficom
sbb
dec
push
cdq
xchg
pushf
mov
clc
mov
adc
add
or
or
add
data16
repz
pop
in
daa
pop
call
mov
fwait
mov
lock
mov
sbb
inc
fwait
dec
jp
pusha
and
fstp
push
or
fstp
mov
rcr
or
jmp
push
fmul
inc
xor
push
into
std
dec
cmc
dec
xchg
cwde
jne
in
clc
mov
fs
loope
xor
jge
jbe
js
xchg
es
or
aam
pop
cmp
push
ret
dec
inc
and
and
push
or
mov
stos
shl
(bad)
iret
mov
mov
push
(bad)
pop
outs
mov
mov
sbb
lock
in
lods
jmp
pop
out
iret
dec
jmp
pusha
adc
pop
fsubrp
jg
add
xchg
jge
call
lds
mov
mov
mov
mov
lods
pop
cmps
sbb
sub
sbb
gs
inc
imul
not
xor
sub
jbe
xchg
inc
out
je
leave
aad
nop
add
(bad)
cli
stos
fld
imul
in
lods
mov
sub
add
div
loopne
lahf
data16
mov
daa
loop
cmp
ds
int
xchg
add
popa
mov
pop
scas
jmp
xlat
call
jmp
jl
dec
div
test
sub
pop
cmp
sub
retf
rcr
or
iret
dec
xor
(bad)
out
xchg
(bad)
sbb
test
dec
test
cmps
xor
xor
(bad)
and
call
adc
xchg
dec
lahf
xor
lods
das
cmp
cmp
cmps
inc
xchg
dec
jl
jl
ret
idiv
mov
sar
shl
(bad)
stc
rcl
cmps
and
lods
xchg
dec
sub
sbb
xor
test
mov
dec
jno
cmp
into
in
jmp
ret
mov
in
pop
ins
out
push
jbe
mov
mov
scas
jge
adc
inc
add
sbb
push
sbb
enter
pop
rcr
repnz
dec
xchg
jbe
push
xchg
push
neg
stos
movs
lahf
cdq
add
dec
mov
cmp
div
or
retf
in
pop
sub
into
pushf
inc
inc
cmps
icebp
popa
fs
mov
mov
push
pop
inc
call
or
stos
pop
scas
xchg
stc
sbb
pop
push
movs
xchg
into
push
fld
into
mov
sub
fs
scas
movs
enter
gs
test
cs
dec
bound
fadd
int
loop
imul
push
int3
ja
mov
scas
and
adc
jno
arpl
ror
rcr
aad
add
pop
mov
inc
stos
out
or
mov
xor
mov
jle
mov
rep
pop
std
daa
xchg
push
stc
sub
dec
repnz
or
add
movs
xlat
xor
push
jo
push
adc
inc
dec
outs
fsub
xor
imul
push
xor
sahf
xor
stos
call
or
retf
cmc
call
mov
das
mov
mov
pop
lahf
dec
mov
inc
sub
mov
into
inc
outs
in
stos
push
sub
add
cmp
push
aas
pop
and
fmul
ins
pusha
cmp
sub
xchg
push
outs
arpl
and
xchg
xchg
mov
pop
jg
sub
mov
xor
loopne
out
aas
cwde
loop
sahf
bound
mov
jmp
or
in
push
(bad)
(bad)
jecxz
mov
ror
pop
scas
mov
hlt
out
int
cli
push
shr
push
mov
fcom
lock
scas
(bad)
xchg
add
shl
jno
lahf
or
fiadd
dec
cld
inc
dec
cmp
push
out
daa
xchg
sar
dec
jno
cmp
adc
dec
sub
mov
(bad)
loopne
xor
mov
xchg
jge
and
or
xor
in
xor
dec
jmp
add
jle
add
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
rol
add
adc
jae
add
scas
add
add
mov
add
add
add
add
add
cs
add
xor
add
add
add
add
add
add
(bad)
pop
add
add
add
int
add
fadd
add
add
xor
add
add
mov
add
add
add
rol
add
xchg
add
add
add
add
out
add
jns
cmp
add
inc
add
iret
add
add
ins
add
add
xchg
add
add
add
add
add
add
cmps
add
add
cmp
mov
add
add
xchg
add
sbb
add
add
cmp
ins
add
iret
add
add
add
add
add
add
mov
add
or
mov
fsubr
push
add
dec
sti
inc
sub
(bad)
pushf
mov
xor
add
xlat
pop
fsub
ss
sbb
pop
jp
js
ds
pop
mov
xchg
rcr
adc
xchg
cmps
dec
ret
mov
dec
pop
sbb
(bad)
jns
dec
xchg
push
out
push
imul
add
iret
xor
ror
dec
es
cmps
jns
push
and
cmc
mov
cmp
bound
arpl
or
xchg
mov
pop
mov
cmc
movs
cmp
inc
and
mov
lock
add
and
or
sti
dec
sbb
nop
mov
mov
fst
cmp
(bad)
cmp
xlat
fild
pop
outs
shl
shr
dec
or
fisttp
adc
push
(bad)
xchg
add
push
mov
(bad)
in
or
sbb
add
outs
pushf
test
xor
xchg
addr16
cmp
mov
popf
dec
imul
jmp
adc
shl
sub
xchg
(bad)
push
cdq
stc
pop
loope
ss
xchg
nop
fmul
lods
push
jo
jno
add
mov
stos
cmc
das
int
int
repnz
cmp
jg
hlt
sub
les
stc
pop
movs
push
jo
mov
idiv
mov
and
mov
sbb
jo
xor
xchg
shl
sub
jae
bound
jbe
or
pop
add
jp
aaa
push
or
mov
shl
push
adc
aaa
inc
call
pop
cld
and
inc
or
mov
dec
add
int
leave
sar
aaa
mov
sahf
or
dec
call
je
imul
pusha
sub
add
cmc
push
sub
or
mov
cmps
xchg
xchg
arpl
rcl
clc
aas
cmp
call
inc
test
jl
push
cmp
mov
fwait
es
mov
sub
jge
(bad)
movs
push
rol
and
es
lock
mov
mov
xor
std
xlat
mov
or
jno
cdq
pop
jne
cmp
int3
pop
adc
out
pop
inc
and
push
push
adc
inc
popf
cmp
push
sahf
inc
jnp
mov
dec
imul
fdiv
mov
mov
mov
or
sub
call
cwde
mov
sbb
push
add
das
adc
mov
aam
retf
mov
adc
cmp
cmp
jno
fidivr
loope
(bad)
popa
jmp
in
sbb
mov
cmp
jns
pop
jne
mov
dec
out
and
int3
or
enter
add
syscall
frstor
pushf
pushf
lahf
inc
cwde
fwait
imul
or
cmp
arpl
mov
int3
inc
adc
or
sbb
push
push
mov
dec
sub
or
xlat
inc
fldenv
mov
jmp
es
out
stc
adc
dec
push
neg
push
inc
cmp
setno
inc
movs
xchg
inc
jae
dec
and
jle
rcr
xchg
xchg
fsub
push
sub
js
sub
dec
ss
mov
adc
into
pusha
xor
inc
js
shr
cmp
push
mov
(bad)
adc
dec
pop
popf
sbb
jns
adc
push
hlt
sbb
push
mov
(bad)
cmp
xor
mov
adc
xor
sbb
cs
and
inc
(bad)
and
push
jae
adc
mov
mov
in
sbb
push
lahf
movs
jae
pop
jne
push
and
pop
cwde
pop
xor
jo
loop
fcmovne
sti
push
xchg
sbb
dec
xor
cmp
shl
cld
aaa
adc
(bad)
pop
dec
push
push
or
and
mov
outs
fadd
test
mov
or
mov
imul
mov
les
adc
mov
mov
cs
dec
jge
repz
test
popa
mov
push
ins
jbe
scas
dec
inc
mov
(bad)
adc
mov
mov
imul
add
fnstcw
push
jb
sbb
lds
inc
xor
mov
jns
inc
mov
mov
cmps
pop
(bad)
mov
jb
cmp
sti
cld
cmp
mov
mul
cmp
bound
call
ja
clc
add
neg
aas
std
mov
mov
adc
repz
stc
push
sbb
sbb
push
xchg
shr
sbb
bound
xchg
jbe
mov
xor
fsubp
dec
movs
mov
ficomp
inc
(bad)
inc
repz
or
mov
sub
pop
push
call
inc
retf
pop
xchg
and
ds
outs
(bad)
adc
jecxz
push
mov
sub
dec
leave
mov
jle
jnp
stc
and
dec
clc
jbe
xor
mov
mov
(bad)
movs
popf
call
cld
push
imul
xchg
push
mov
cmp
ds
popa
loope
into
mov
fsubr
(bad)
inc
imul
in
in
hlt
stos
push
fdivr
add
fstp
or
hlt
outs
push
inc
cmp
push
jb
and
cmp
pop
jb
test
pop
pop
dec
mov
scas
push
aaa
and
jecxz
mov
jnp
sub
repnz
shr
not
adc
lods
sahf
push
jmp
loop
(bad)
loope
inc
jecxz
sbb
pusha
stc
cwde
cmp
shr
mov
pop
or
sbb
mov
in
mul
fstp
shl
sbb
enter
inc
outs
shr
jno
hlt
pop
mov
out
and
fsub
ins
iret
jne
pusha
fdiv
pop
xchg
repnz
jg
inc
cli
icebp
inc
jne
dec
mov
jge
push
das
ja
retf
daa
scas
jmp
dec
shr
push
mov
dec
hlt
(bad)
ins
jmp
mov
ins
xor
xchg
push
call
add
outs
(bad)
ds
cmc
mov
cld
out
clc
es
xor
int
jnp
mov
pop
xchg
add
stos
mov
adc
pusha
xor
mov
ja
out
sahf
dec
jp
imul
cmp
sbb
push
jg
xchg
ja
aam
int
jmp
inc
shr
and
call
sti
sbb
test
adc
(bad)
outs
xor
push
sar
mov
inc
enter
xchg
rol
sub
xor
cld
push
ficom
std
(bad)
pop
mov
int3
repnz
push
lock
mov
adc
sub
outs
sbb
pop
lock
push
into
daa
ins
inc
dec
add
or
pusha
push
adc
cmp
inc
pop
inc
es
dec
sbb
stos
add
icebp
in
mov
push
pushf
jecxz
pop
push
(bad)
jns
and
loop
push
bound
dec
cmc
sub
cwde
ror
shr
push
outs
fwait
jnp
pop
jae
mov
int3
fsubr
fimul
mov
push
das
pop
mov
add
xor
cli
and
ret
push
mov
int
dec
xchg
push
js
repnz
mov
jo
cdq
and
out
leave
mov
inc
fidiv
xchg
popf
mov
aas
bound
push
jno
push
addr16
movs
sub
xchg
(bad)
outs
adc
mov
pop
inc
lds
mov
dec
in
arpl
and
jmp
mov
add
mov
and
mov
test
jp
push
push
mov
stos
cdq
loop
test
cmp
repz
jg
inc
or
inc
xchg
sbb
es
mov
mov
xor
mov
sbb
push
mov
call
div
sbb
and
sub
cs
xor
jl
push
xlat
in
xor
test
jmp
out
rcr
call
add
sbb
push
xchg
bound
xor
fidiv
jle
fidiv
iret
push
sub
and
shl
sub
neg
sbb
and
or
pop
mov
jo
mov
push
jecxz
cmc
and
lds
push
cmps
jnp
lock
add
jnp
or
outs
fidivr
pop
retf
push
in
lds
test
pop
cmps
pop
(bad)
cli
(bad)
jmp
dec
xor
jp
ins
jecxz
jg
cmp
inc
ds
mov
movs
dec
sub
in
sahf
adc
cmp
mov
fnstcw
sub
fisubr
movs
pop
sahf
xor
push
or
fild
inc
mov
sti
jmp
hlt
retf
movs
loop
(bad)
sub
pop
ss
and
xchg
aas
cmp
repz
ds
cs
xor
lahf
fstp
mov
sub
out
leave
xor
mov
movs
and
adc
test
xor
leave
ficom
jns
bound
and
sub
fs
xchg
add
scas
mov
pushf
gs
pop
inc
push
mov
fwait
enter
jle
popf
lahf
inc
jb
outs
inc
jp
ins
add
push
loopne
xchg
clc
cmps
mov
or
fild
arpl
and
and
cmp
arpl
mov
xchg
xchg
retf
pop
jns
sbb
xchg
clc
xchg
push
push
repz
dec
sti
or
pop
dec
jmp
push
mov
in
dec
or
mov
mov
fsub
aam
(bad)
lahf
mov
sahf
push
movs
jecxz
cmp
outs
imul
dec
jmp
ss
adc
test
inc
fld
mov
test
fstp
pop
push
fmul
nop
jno
inc
(bad)
hlt
ss
jno
pop
xor
outs
pushf
fsub
jle
aad
mov
out
push
mov
mov
repnz
in
inc
xchg
addr16
movs
mov
pop
jl
mov
push
xchg
pop
icebp
into
xor
mov
push
add
adc
je
stos
not
cmc
cs
xor
ja
xchg
ficomp
inc
sub
dec
data16
(bad)
jl
icebp
push
sub
mov
loopne
and
sahf
mov
inc
loope
xor
fs
into
ret
std
cmps
mov
dec
sti
fnsave
mov
mov
inc
pop
sahf
sbb
shl
pop
les
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
push
add
add
add
add
hlt
fild
add
(bad)
pop
sti
xchg
add
mov
add
add
jo
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
mov
in
and
stc
mov
ins
sti
jmp
sub
ficom
push
ja
jne
cli
pop
dec
aaa
or
(bad)
mov
cmp
ins
shl
xchg
loopne
dec
jbe
push
(bad)
mov
adc
fisttp
jns
or
pop
lds
xor
or
sbb
inc
inc
(bad)
mov
dec
sub
leave
jne
xlat
inc
ins
icebp
jge
into
pop
bound
test
lds
mov
inc
cmps
add
mov
inc
cmp
push
cmp
stos
mov
loopne
push
jo
fdivr
std
mov
mov
push
cmps
xchg
dec
push
data16
cmp
xor
fiadd
sbb
sbb
mov
mov
or
add
sbb
mov
enter
fs
arpl
mov
and
movs
and
xor
jle
(bad)
in
stos
adc
xchg
jle
retf
mov
xchg
push
inc
fidiv
jmp
clc
inc
sahf
push
sub
sbb
adc
sbb
mov
cli
xchg
pop
xlat
mov
icebp
inc
ins
dec
movs
mov
push
add
test
mov
rcl
lahf
or
cmp
stos
lods
pop
mov
xchg
cmp
pop
sbb
(bad)
and
dec
inc
test
hlt
mov
mov
xor
fistp
mov
popa
pop
push
sbb
or
(bad)
jmp
mov
(bad)
push
addr16
mov
loopne
rol
pushf
push
mov
in
pop
xor
inc
lds
bound
push
imul
push
and
in
cmps
jl
mov
sbb
mov
shl
and
jmp
aad
and
jmp
dec
pushf
jo
xchg
mov
mov
mov
xchg
mov
icebp
lods
sbb
mov
add
cli
mov
jnp
add
repz
pop
jbe
jnp
rcl
dec
add
in
xchg
(bad)
cdq
adc
sub
mov
ret
jae
xor
std
pusha
push
pop
test
int
cmp
les
test
loope
(bad)
cld
mov
mov
aad
mov
sub
mov
jbe
repnz
inc
push
pop
mov
jo
sbb
arpl
dec
in
pop
add
adc
or
in
cld
in
mov
pop
xor
loop
shl
lahf
das
(bad)
ffree
xlat
test
gs
add
or
or
jno
add
repnz
loopne
add
mov
gs
mov
stos
scas
shl
adc
jae
or
fist
sbb
pop
sbb
dec
stc
add
xor
add
mov
je
cmps
pop
push
aaa
shl
aas
pop
cs
sar
(bad)
fsubr
ja
jmp
cmc
inc
mov
(bad)
call
cs
stos
aaa
add
mov
ins
mov
(bad)
mov
iret
jnp
jb
call
dec
fidivr
push
pop
test
fistp
call
xor
retf
mov
mov
xor
(bad)
cli
sub
jmp
push
dec
push
xchg
sbb
sbb
stos
mul
cmp
idiv
jb
out
push
dec
dec
repnz
fisub
scas
fdivp
loopne
ror
mov
int3
inc
pushf
fwait
lods
mov
xchg
or
call
adc
inc
aam
cmp
rcr
and
and
jmp
dec
inc
icebp
dec
mul
rcl
xchg
pop
push
inc
mov
mov
test
dec
jnp
sub
mov
movs
and
jg
adc
and
pop
xor
or
shl
movs
jns
inc
pop
popf
inc
outs
lds
push
inc
cmps
sub
mov
dec
imul
and
and
fdivr
loopne
movs
push
adc
repnz
jg
enter
xor
aad
xlat
or
je
loope
add
pop
dec
mov
cmp
ja
test
mov
dec
pop
and
out
dec
xchg
mov
jbe
inc
xchg
fnstsw
je
xchg
cdq
or
mov
in
adc
mov
js
pop
jb
push
je
xchg
add
inc
sbb
neg
fisub
jnp
push
daa
lds
aaa
dec
js
push
mov
pop
nop
test
cmp
mov
jmp
lods
addr16
mov
nop
jne
sbb
jecxz
aad
and
mov
imul
sub
or
int3
repz
xchg
loop
jge
(bad)
inc
mov
xchg
dec
rcl
cmp
mov
inc
dec
scas
push
xor
fmul
(bad)
and
lahf
retf
add
mov
dec
and
ret
cmc
adc
leave
int
stos
dec
shr
or
dec
xor
mov
xchg
push
das
adc
pusha
inc
rcl
test
xchg
sub
dec
jbe
test
(bad)
fmul
push
push
(bad)
push
inc
test
mov
fnstsw
mov
jmp
xchg
sub
test
mov
pop
fucomi
cli
pushf
cmp
xor
mov
add
sub
push
rcr
lahf
xchg
cdq
mov
gs
sbb
imul
xchg
add
dec
fidiv
jns
jg
ins
clc
test
cmovs
xchg
stos
cwde
popf
aaa
xchg
pop
or
loop
push
ds
fimul
mov
aad
iret
out
(bad)
mov
fnstcw
pop
cmps
mov
sub
mov
sub
rcl
shl
in
push
pusha
sub
shr
mov
push
out
cmc
ftst
mov
or
fldcw
sahf
push
push
pop
mov
sahf
xchg
jmp
pop
xchg
mov
push
jecxz
or
call
gs
rol
cwde
mov
scas
fld
cmp
push
movlps
jae
fucom
dec
or
cwde
movs
jmp
fwait
cmp
push
in
mov
popa
pushf
rcr
(bad)
pop
test
sbb
push
mov
cld
shl
xor
(bad)
hlt
push
out
push
xchg
(bad)
popf
mov
dec
ins
pop
jnp
pushf
jmp
out
cmp
retf
fdiv
xor
mov
mov
sub
jmp
aam
out
ja
adc
pop
gs
shl
add
int3
(bad)
test
inc
pop
push
fbld
nop
sub
push
cmp
test
fistp
cmp
jo
sub
clc
call
jo
arpl
cmp
jmp
mov
pusha
cmp
je
and
add
neg
sti
sbb
test
cmc
xchg
push
out
movs
push
movs
sbb
imul
dec
push
xor
call
or
lods
mov
movs
je
call
mov
push
xchg
lahf
xlat
loopne
or
push
mov
rol
inc
push
vrcpss
push
cdq
or
dec
add
dec
test
cld
aaa
ja
xor
imul
(bad)
and
repz
ja
or
add
mov
xlat
hlt
retf
dec
sbb
addr16
cmc
pop
daa
retf
xchg
pop
mov
mov
nop
loopne
mov
or
ror
out
push
push
push
adc
in
stos
jmp
ins
xchg
into
add
lods
stos
and
jo
cmp
enter
xchg
cmc
and
sub
icebp
dec
lods
je
lahf
cwde
push
stc
in
mov
rcl
out
mov
jbe
lods
mov
sub
mov
jmp
fucomi
push
mov
popa
pop
les
xchg
lea
lds
loop
sahf
sar
les
mov
jmp
aas
xchg
iret
retf
or
fld
inc
sbb
xor
sti
enter
or
sbb
add
(bad)
push
shr
enter
jne
mov
ret
and
mov
add
(bad)
cmp
imul
inc
ds
xchg
cmps
imul
hlt
fisub
inc
push
nop
adc
ja
or
jecxz
std
sub
mov
or
jge
outs
fimul
sti
xchg
mov
sub
(bad)
sbb
xor
dec
xchg
shl
sub
fdiv
leave
stc
loopne
sti
mov
adc
(bad)
fs
cmc
pop
jne
or
pop
jge
(bad)
cmp
(bad)
int
lods
nop
retf
test
push
test
or
xchg
adc
stc
xor
ror
(bad)
jns
sbb
or
lock
and
sub
fadd
mov
arpl
xor
cmps
outs
cmp
into
push
jl
out
in
(bad)
and
call
arpl
mov
inc
ror
add
mov
retf
sbb
aas
or
and
shl
pop
jp
pop
inc
out
sub
cli
scas
bound
add
sub
(bad)
sbb
jg
mov
xchg
jne
aas
psubq
cmps
cli
jmp
push
pop
or
icebp
ss
jmp
outs
xor
cmps
pusha
in
test
lock
test
sbb
inc
mov
adc
nop
loope
ficomp
sbb
xor
(bad)
push
push
and
adc
mov
int
push
(bad)
loopne
pop
pushf
push
xchg
sbb
xchg
outs
push
push
outs
mov
aas
cmp
retf
adc
test
fs
pop
ret
and
or
jb
sbb
ss
js
dec
js
out
das
loop
repz
pop
cdq
jecxz
dec
cmp
nop
imul
pop
dec
xchg
ins
cmp
pop
sbb
pop
cmps
jbe
mov
les
jge
sbb
lock
jl
sub
iret
ins
dec
enter
pop
inc
cld
and
fst
movs
mov
and
mov
cmp
xor
stc
add
aam
jno
gs
xchg
inc
clc
test
ss
sub
das
out
inc
fstp
mov
sub
fldenv
les
outs
xchg
push
addr16
jae
movs
adc
lock
pop
pop
jecxz
sti
call
out
mov
jle
and
sub
fistp
call
in
imul
cmp
js
sbb
sbb
movs
lahf
pop
push
adc
xor
inc
imul
es
xchg
fnsave
sbb
cmp
adc
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
add
add
mov
push
stos
add
cmp
or
add
add
add
add
xchg
mov
add
int
add
add
add
add
add
add
add
add
add
adc
arpl
adc
dec
sbb
inc
loopne
and
pop
fimul
adc
mov
outs
jecxz
inc
or
mov
(bad)
sbb
jns
stc
iret
mov
test
ret
rcl
jge
or
stc
xchg
mov
pop
cmp
pop
loop
pusha
ins
mov
mov
pop
mov
retf
ret
dec
(bad)
(bad)
fmulp
je
cli
jl
push
push
mov
call
(bad)
loope
stos
js
fimul
mov
mov
lods
ds
xor
imul
mov
jno
dec
rol
int3
movs
fdivr
clc
rcr
in
and
or
out
jmp
mov
mov
cli
fs
cmp
push
fsubr
and
pop
sbb
xor
dec
jge
sbb
adc
mov
push
imul
ins
adc
(bad)
mov
or
cdq
(bad)
cmp
test
dec
mov
cli
mov
xor
inc
lods
ror
adc
rcl
adc
sbb
in
inc
sub
push
aam
jbe
mov
sbb
inc
sbb
repnz
dec
sub
jno
mov
adc
call
call
add
add
pop
movs
dec
fdivr
sbb
xchg
fwait
hlt
dec
lds
leave
icebp
jecxz
mov
sub
mov
adc
sub
and
je
sub
and
xor
push
clc
jno
dec
xor
call
cdq
retf
lods
dec
fsubr
pop
push
mov
in
sub
push
(bad)
xchg
(bad)
loopne
pop
jo
inc
add
xchg
iret
dec
jmp
mov
cld
xchg
push
fldcw
jle
mov
mov
xor
xchg
daa
call
sbb
xor
sbb
sti
jmp
cwde
shr
jle
sbb
mov
out
shl
cmp
mov
div
cmps
pop
test
inc
movs
mov
hlt
es
and
aam
xor
inc
int
dec
nop
int
jg
and
stos
or
cmp
sub
add
cs
sar
jo
pop
rol
ficomp
pop
xor
push
dec
xchg
cmps
jmp
rcl
mov
xor
(bad)
push
std
aas
(bad)
sahf
out
sub
stos
jmp
repz
push
mov
(bad)
or
lods
add
dec
sbb
test
retf
sar
cmp
(bad)
out
mov
and
inc
push
pop
mov
movs
xchg
xor
lock
dec
(bad)
add
aaa
loopne
mov
aas
sub
es
adc
call
out
jno
jge
pusha
jl
xchg
loope
cwde
hlt
movs
adc
lock
gs
dec
push
mov
call
fdivr
fprem1
jmp
push
inc
fsubr
mov
xlat
sbb
pop
or
ds
pop
lock
pop
mov
cmps
outs
cs
(bad)
push
pop
shl
pop
int
test
dec
jne
(bad)
xor
imul
cmp
loop
dec
inc
inc
sbb
(bad)
mov
jge
push
in
sbb
(bad)
xchg
sahf
cs
inc
mov
mov
pushaw
xchg
repnz
push
shl
lock
push
push
outs
(bad)
pop
ror
retf
std
cwde
or
pop
in
xor
adc
adc
dec
call
pop
cmps
es
retf
cmp
push
gs
je
imul
mov
cmp
mov
arpl
(bad)
arpl
pop
mov
ds
out
sub
jle
mov
ins
push
outs
push
jbe
outs
mov
lea
and
std
fcom
ret
test
push
xchg
test
mov
retf
call
dec
and
add
test
push
mov
js
cmp
enter
jge
sbb
pushf
xchg
push
nop
pop
add
hlt
mov
cld
sbb
js
adc
cmp
pop
(bad)
repnz
pusha
das
bound
adc
adc
(bad)
repz
adc
dec
pop
sub
mov
fs
push
pop
and
push
call
pop
int3
pop
xchg
pop
pop
aam
push
jmp
shl
adc
add
pop
ins
xor
mov
cmps
fwait
xchg
movs
push
das
push
ret
xor
mov
push
sbb
pushf
cmp
aam
stos
sbb
ds
or
int3
arpl
add
mov
sbb
ins
scas
int3
sbb
out
call
mov
(bad)
movs
jge
push
mov
mov
inc
fsubr
pop
les
repnz
rcl
adc
js
sbb
jne
xor
xchg
gs
xchg
mov
jnp
inc
sub
js
jnp
push
arpl
dec
fistp
cs
call
sar
mov
dec
pop
or
rol
xchg
(bad)
mov
imul
push
or
push
mov
dec
or
ins
push
and
scas
leave
and
mov
icebp
ror
or
retf
out
fist
or
out
xchg
xor
push
cli
mov
mov
mov
xchg
shl
lea
ret
cld
stc
mov
xor
push
lods
in
or
ror
xchg
inc
sbb
dec
or
(bad)
stc
in
dec
pop
pop
pop
test
xor
out
cmp
call
xchg
add
repz
iret
sar
pop
push
push
ja
or
cmp
int3
pop
ret
pop
sbb
jae
adc
aaa
sub
leave
xchg
icebp
jge
movs
cdq
sti
mov
ret
sbb
(bad)
dec
sub
cmps
or
push
loope
(bad)
sti
xor
cmp
call
inc
add
mov
dec
not
aaa
and
xchg
inc
lea
cmps
iret
mov
ror
ins
xchg
xor
fistp
test
es
out
repnz
mov
mov
pop
add
dec
pop
loope
and
fnstsw
xchg
inc
push
hlt
mov
sub
dec
mov
sbb
mov
lahf
jns
push
mov
cdq
addr16
inc
adc
cdq
mov
cmps
xchg
pop
iret
dec
out
and
cmp
hlt
lahf
mov
repz
sbb
iret
mov
mov
sub
or
jmp
ja
adc
fld
inc
in
fmul
pop
fdiv
inc
xor
xor
leave
jp
arpl
xchg
test
fdiv
repnz
cli
jb
punpcklwd
sbb
mov
cs
dec
fcomp
dec
cmp
push
inc
in
ret
sub
and
and
pop
mov
pop
in
ror
pop
xor
imul
enter
mov
xlat
ficomp
mov
ret
stc
clc
gs
push
sub
pop
inc
ds
mov
jnp
sti
inc
jge
loope
ret
xor
xchg
int
js
(bad)
dec
sti
adc
inc
push
enter
out
jg
mov
push
mov
cmps
ss
ret
dec
adc
jae
push
cmp
fs
push
and
mov
imul
cwde
aaa
jb
push
test
jb
inc
scas
add
lahf
mov
push
push
ss
jmp
sub
dec
adc
or
inc
jecxz
arpl
mov
jns
test
(bad)
push
adc
or
(bad)
movs
int
fld
movs
stc
gs
fist
mov
dec
(bad)
aaa
stos
icebp
mov
adc
and
jne
dec
imul
ret
or
ds
scas
push
test
nop
cwde
mov
sbb
adc
push
inc
xor
mov
xchg
push
call
(bad)
mov
ins
ds
nop
mul
fnstcw
mov
xchg
and
adc
and
mov
mov
mov
mov
mov
xchg
rcr
cld
shl
mov
addr16
daa
jne
lds
rol
push
(bad)
xchg
(bad)
dec
push
adc
push
adc
dec
loop
jne
ja
cld
hlt
test
xchg
out
dec
ds
mov
rcr
nop
push
mov
rcl
and
xchg
xchg
push
or
push
neg
mov
inc
call
mov
mov
mov
rol
nop
into
mov
and
sbb
mov
repz
adc
mov
out
push
aam
ins
xor
sub
enter
cmps
jp
push
loope
adc
pop
mov
in
jne
cwde
dec
push
or
push
xor
pop
stos
and
jle
cmp
lds
lahf
lods
mov
mov
xor
add
xchg
jne
fcmove
imul
jmp
mov
jns
adc
xchg
lock
mov
jo
jg
add
icebp
adc
push
mov
imul
push
jno
pop
sbb
fs
inc
cmp
jnp
retf
(bad)
pop
inc
mov
push
push
in
sbb
bnd
pop
enter
lds
in
mov
aas
push
iret
xor
xchg
(bad)
rcl
add
or
inc
ror
inc
mov
sub
sbb
stos
in
std
and
mov
mov
lds
xor
pop
in
or
(bad)
jnp
sbb
lahf
popf
in
rol
into
pop
pop
movs
xchg
imul
mov
mov
(bad)
pop
ror
mov
cdq
xchg
and
cdq
mov
xor
push
pop
mov
mov
mov
mov
addr16
xor
cmp
ret
es
leave
mov
scas
lock
inc
movs
stos
add
dec
jmp
and
inc
jmp
pop
es
loope
fisubr
not
push
or
das
int3
ja
lods
adc
sub
and
ret
(bad)
(bad)
hlt
xchg
ss
mov
xchg
sar
stos
push
and
push
call
fwait
dec
or
adc
(bad)
jg
cmps
cmp
adc
mov
xchg
fidiv
neg
aaa
fcomip
ss
add
cmp
and
ret
ret
test
mov
mov
mov
jmp
or
xor
cwde
push
cmp
mov
inc
mov
add
mov
test
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
out
ret
movs
add
add
add
iret
add
add
add
add
add
add
ficom
add
add
add
add
inc
add
add
in
add
add
add
daa
aaa
add
pop
add
pop
add
add
ret
add
add
out
add
add
add
add
add
cmp
add
add
add
add
ja
add
add
enter
pop
add
add
inc
add
mov
add
dec
add
add
add
add
add
add
add
add
out
add
sbb
add
add
add
mov
mov
add
imul
add
icebp
add
push
add
add
add
add
add
sub
add
add
add
add
add
add
daa
sbb
add
mov
add
add
add
add
add
add
aas
add
jb
add
add
lods
dec
add
add
fiadd
add
add
add
add
add
add
add
add
add
xor
popf
pushf
retf
sti
imul
xor
outs
test
addr16
or
mov
mov
aas
add
inc
sbb
outs
ja
jae
outs
lds
dec
xor
test
jle
not
mov
out
or
push
pop
push
dec
ds
gs
in
lea
clc
mov
repz
sbb
fwait
xchg
mov
clc
adc
ror
sub
(bad)
jecxz
push
leave
inc
sbb
shl
pop
lea
cs
scas
out
and
not
pop
clc
fdiv
fwait
js
add
jge
sub
mov
cmps
nop
idiv
lods
xchg
cmp
call
push
fsub
cmc
ss
ret
fadd
cmp
xlat
adc
sbb
ss
cli
(bad)
or
je
icebp
aas
xor
mov
in
and
movs
sahf
pop
mov
cwde
inc
cwde
inc
stos
sub
aaa
(bad)
fcom
jmp
push
movaps
pop
pop
fadd
push
retf
pop
add
out
ins
sbb
std
inc
aad
rcl
add
push
out
(bad)
call
js
repnz
mov
jb
in
inc
in
and
daa
lods
push
aas
rsm
stos
mov
jnp
lock
ja
and
pop
xchg
or
daa
out
push
ror
ins
jl
ror
sub
inc
adc
in
repnz
(bad)
dec
xlat
inc
out
sbb
pop
and
add
pop
sub
cmp
cwde
xchg
xlat
shl
and
scas
scas
cmc
popf
mov
mov
stc
int3
mov
lock
aas
imul
(bad)
out
push
pop
cdq
push
dec
call
mov
xchg
jae
rol
cmp
xchg
xchg
es
add
call
pop
cmp
je
or
push
repz
rol
(bad)
mov
sbb
mov
adc
sub
aad
push
sti
sub
mov
mov
adc
repz
dec
hlt
jle
imul
outs
mov
mov
out
test
call
push
adc
jb
(bad)
in
(bad)
test
and
(bad)
test
or
inc
add
xchg
jo
mov
cs
popf
call
loopne
pop
push
dec
ins
push
mov
inc
inc
popa
ds
test
pop
add
dec
and
in
cwde
pop
rol
shl
mov
adc
loop
xchg
xor
mov
sub
out
neg
ss
int3
xchg
xchg
mov
pop
mov
fs
cmp
rol
sti
test
add
rcr
jne
push
cwde
in
pop
sub
mov
push
aaa
dec
in
inc
or
pop
or
bound
cdq
jl
dec
push
mov
cmp
jae
dec
arpl
xlat
sub
or
xor
xor
ins
xchg
lods
cmp
out
addr16
jge
outs
pop
jg
xchg
repz
pop
sti
adc
cs
mov
inc
and
mov
mov
(bad)
xor
jmp
pop
lods
rcl
fsubr
fwait
jo
inc
xor
pop
xchg
fisttp
ins
sub
xchg
lahf
xchg
jns
daa
dec
cmp
ret
les
ja
jge
jmp
mov
cmp
data16
jmp
xchg
dec
jl
adc
fs
mov
inc
mul
nop
pop
cmp
mov
mov
adc
mov
cmc
mov
cmp
or
lods
leave
cmp
mov
(bad)
pop
push
ds
add
sub
sbb
call
pop
xor
mov
stc
enter
jbe
arpl
imul
leave
jge
rcr
in
mov
mov
xchg
outs
out
aam
push
pop
lock
call
test
std
cmp
dec
pop
es
xor
pop
add
in
fld
js
xor
mov
pop
xor
xor
lock
cdq
dec
push
sub
movs
pop
or
repz
cmps
add
(bad)
std
in
jle
test
xor
out
rcl
pop
ss
jge
sub
xor
lods
and
adc
xor
push
adc
inc
je
leave
xor
inc
push
adc
out
jmp
mov
(bad)
mov
jmp
idiv
ret
cdq
mov
dec
mov
mov
and
pop
cmp
sub
xor
cmp
call
cmp
add
ret
cmp
adc
cmp
fwait
cmc
sti
push
scas
fmul
adc
push
fs
mov
in
fs
xchg
push
out
mov
mov
gs
or
imul
or
jb
cdq
das
fisubr
ss
cmp
iret
movs
mov
(bad)
sbb
fistp
jns
mov
ficom
or
or
stos
lock
(bad)
enter
pop
or
arpl
cmp
or
dec
cdq
ret
pop
mov
mov
je
cs
sbb
jmp
shr
xor
mov
(bad)
jg
mov
ret
xor
jbe
outs
or
retf
lods
aas
aas
and
les
sbb
xchg
nop
loope
mov
(bad)
ins
cmp
jnp
sub
mov
stc
sub
xor
inc
jmp
into
(bad)
pop
add
(bad)
mov
ror
in
cmps
mov
pop
imul
adc
rcr
sbb
adc
xor
dec
sbb
(bad)
outs
jmp
xor
mov
mov
lea
retf
dec
movs
sbb
test
dec
and
xchg
(bad)
jmp
mov
xor
dec
mov
inc
pop
add
lods
and
pop
push
jb
(bad)
jge
adc
add
mov
(bad)
pop
pop
call
push
popa
popf
jne
not
test
fistp
mov
mov
ror
sbb
pop
stos
mov
mov
adc
jmp
push
cs
jne
shr
fidivr
cdq
rcl
fs
xor
hlt
xor
lock
mov
xchg
xchg
adc
xor
iret
das
mov
jo
lods
cmp
inc
outs
push
cmp
jnp
cli
inc
repz
jns
jmp
(bad)
imul
xor
stos
inc
pop
mov
push
outs
imul
dec
sar
jg
test
fnstcw
loop
pop
cmp
xchg
mov
sub
sar
jmp
ja
mov
pop
stos
cmp
push
dec
add
ret
jae
add
pop
mov
xchg
mov
repz
add
dec
cmp
mov
repnz
ds
jnp
in
enter
les
es
aam
(bad)
repz
jb
push
jne
aam
pushf
sbb
in
push
test
or
mov
push
mov
push
xor
mov
sahf
test
mov
xor
(bad)
jb
fs
mov
pop
mov
retf
fmul
jmp
shr
push
sbb
dec
test
outs
lock
sbb
out
fs
sub
xor
inc
(bad)
into
pushf
retf
mov
imul
jmp
push
aam
pop
ds
push
mov
das
jmp
loope
loopne
pop
cmp
inc
shr
mov
cli
pop
mov
bound
mov
push
dec
mov
sbb
bound
fild
mov
loopne
adc
pop
mov
adc
mov
sbb
dec
xor
mov
cmp
cdq
dec
leave
jno
int3
push
mov
daa
xlat
sub
jecxz
xor
mov
mov
cmp
xchg
loop
ret
ret
mov
jmp
adc
push
sub
cdq
setle
sub
cmp
int
out
dec
jmp
mov
xchg
test
jecxz
jg
mov
imul
sbb
std
fild
lds
push
jecxz
cmp
aam
sti
xchg
mov
sub
out
adc
rcr
sub
fadd
dec
mov
imul
repz
xor
(bad)
jo
push
or
test
lods
stos
mov
pop
jnp
sbb
lea
cli
or
js
and
mov
cmps
cmc
lock
adc
and
and
out
test
loop
int
out
int3
movs
jno
or
rcr
call
aaa
push
inc
fs
lods
test
movs
jmp
cs
jmp
cwde
int3
into
xor
loopne
cdq
ret
mov
adc
in
adc
int
sbb
push
rcl
add
add
out
fadd
cs
out
jg
add
mov
fbstp
out
shl
inc
das
mov
mov
ret
scas
mov
lods
pop
mov
daa
xchg
lea
fldl2t
push
xchg
aaa
mov
inc
xchg
mov
ins
es
aam
(bad)
in
out
inc
mov
adc
repz
mov
push
xchg
fnsave
add
dec
cld
call
xor
jns
mov
ret
iret
adc
pop
int
mov
dec
xchg
std
inc
jg
pusha
arpl
cli
inc
mov
(bad)
gs
mov
push
and
ins
pop
cmp
movs
lods
push
pop
add
dec
imul
xor
mov
pop
add
test
adc
cmp
ins
pusha
jns
adc
add
ret
das
cmp
xor
push
mov
push
push
into
lock
lock
sbb
outs
lds
cwde
jbe
out
jnp
cdq
push
fldenv
imul
xchg
loop
jl
push
rcl
adc
mov
das
pop
fs
mov
pop
movs
sub
loop
xchg
sbb
fstp
cmc
pop
dec
mov
dec
test
out
mov
xor
(bad)
in
xchg
and
dec
mov
xchg
xor
(bad)
sahf
mov
cmc
xchg
fdiv
lods
jae
xchg
xor
cmps
mov
retf
adc
jnp
stc
xor
xlat
push
push
lock
push
xor
add
scas
jle
xchg
mov
clc
xlat
xchg
fcomp
mov
push
arpl
pop
sub
cs
ror
push
add
cmp
sub
mov
sub
adc
xchg
cmp
imul
mov
pop
scas
pop
add
(bad)
push
add
jecxz
test
push
add
stos
xchg
add
test
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
ret
mov
add
add
add
or
inc
add
add
sub
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fidiv
sahf
mov
or
sbb
jg
mov
movs
into
add
jge
sbb
fimul
fcomp
(bad)
xor
mov
dec
xchg
mov
pop
shl
cli
xlat
das
pop
xchg
in
cmp
fucom
popf
iret
dec
(bad)
mov
stos
arpl
fdivr
lds
inc
or
bound
push
xchg
mov
xchg
adc
cdq
imul
push
cmp
test
ror
int3
out
les
mov
jecxz
or
loope
mov
das
ins
xor
and
retf
rcr
mov
jl
(bad)
ror
jg
in
xor
sar
xchg
stos
inc
jno
mov
push
std
xchg
jne
pop
sbb
es
out
sub
(bad)
fdivr
lahf
push
scas
jle
push
aam
jmp
rcl
add
mov
mov
lock
arpl
push
xor
pop
lock
fidiv
sub
push
movs
add
mov
scas
ins
aas
jae
mov
pop
loopne
gs
sti
or
adc
popf
cmp
push
jmp
ins
lods
jge
add
pushf
ins
mov
add
stc
js
bound
sar
js
mov
cmc
shl
cli
inc
out
aaa
jge
retf
inc
mov
in
fidivr
or
jns
stc
lahf
ret
in
mov
xor
jnp
ret
pop
mov
xchg
mov
ret
cwde
mov
mov
mov
stc
xchg
or
sub
repz
jmp
cmp
out
inc
jp
dec
and
aam
fdivr
hlt
loope
xor
ss
inc
loopne
mov
jo
movs
scas
inc
xor
add
test
je
ror
out
test
ret
pop
lds
adc
jle
loope
xchg
test
dec
pop
jmp
jp
stc
(bad)
push
mov
sub
cmps
aad
jae
aas
lea
loop
jl
pop
popa
cdq
pop
push
or
cmp
lods
fst
cdq
cmps
adc
not
xchg
mov
sbb
inc
int
cs
adc
xchg
xchg
mov
loop
or
and
sbb
xchg
stos
add
imul
mov
fimul
sbb
pop
jecxz
not
xchg
rcl
icebp
es
adc
pop
inc
mov
jecxz
repz
xchg
popa
or
or
cmp
dec
push
xor
inc
adc
mov
or
xchg
xchg
adc
sti
and
leave
adc
dec
sbb
lods
sbb
stos
outs
in
and
or
dec
pop
das
lahf
sub
ins
jge
js
mov
xor
fldlg2
jge
mov
adc
das
dec
dec
mov
xlat
scas
inc
mov
sbb
outs
sar
xchg
add
cmp
sti
pop
es
dec
jbe
ins
inc
loope
daa
sub
sub
scas
aas
push
jno
push
outs
shl
(bad)
jle
test
xchg
add
iret
loop
(bad)
(bad)
leave
or
push
mov
sbb
loope
fwait
shl
inc
jmp
neg
pop
dec
push
cdq
js
ror
imul
mov
xchg
ins
addr16
int3
dec
in
xchg
xor
retf
ins
lea
mov
cmp
cs
pop
mov
xchg
je
fbstp
das
mov
or
jns
inc
js
mov
in
add
in
fiadd
and
lods
dec
int3
mov
ficomp
or
push
ret
jb
and
popa
repnz
push
stc
ret
jle
mov
test
cmp
push
mov
test
add
cmp
mov
jle
mov
and
inc
mov
imul
xchg
or
das
dec
(bad)
jge
lea
xor
mov
sub
fwait
bound
pop
call
hlt
movs
ja
popa
xor
arpl
jb
mov
add
mov
add
jl
or
fld
btr
adc
add
stos
cmp
sahf
aas
sub
dec
sar
cmps
cmc
into
les
mov
sbb
jg
cmp
xor
ins
push
int
enter
fadd
push
mov
mov
imul
fld
jecxz
pop
mov
jmp
sub
jle
mov
out
jmp
shl
dec
mov
shl
adc
mov
stc
adc
stc
mov
cmps
les
sub
aad
jle
inc
push
dec
mov
sbb
popf
fucom
hlt
pusha
adc
mov
sub
retf
or
shl
mov
jp
imul
pop
jmp
jp
pushf
in
pushf
dec
add
loope
jge
mov
or
stos
sti
mov
xchg
je
mov
cs
sub
div
xchg
cmps
and
xchg
es
pushf
sub
dec
clc
test
cmp
cwde
leave
sti
ja
dec
mov
pop
cdq
retf
fwait
pop
xchg
rcr
(bad)
and
out
adc
ror
and
fptan
and
out
push
psubsw
test
pop
gs
cmps
ret
adc
dec
mov
add
stc
repnz
sbb
fisubr
mov
adc
ret
into
adc
dec
sbb
pop
mov
push
and
mov
xchg
lods
xchg
mov
cmp
arpl
(bad)
std
pushf
pop
mov
into
test
pop
icebp
ficomp
and
scas
test
pop
aam
aad
retf
jecxz
xchg
leave
xlat
pop
mov
mov
scas
test
into
pop
popf
shl
sub
mov
dec
popa
arpl
and
iret
addr16
pop
jns
pop
pop
test
(bad)
jge
adc
retf
add
into
daa
mov
icebp
adc
mov
sbb
test
cld
in
lahf
sbb
sub
cmp
gs
push
add
push
movs
in
fwait
popf
adc
mov
test
outs
fisub
mul
cdq
int3
adc
in
jmp
add
inc
std
aas
(bad)
pop
mov
mov
xchg
adc
loope
and
cmp
jo
inc
jmp
sti
out
inc
fild
fcmove
sti
fild
ret
add
sub
retf
fldcw
idiv
cmp
pop
mov
or
xor
and
mov
hlt
rol
sub
push
xlat
iret
push
mov
pop
call
fwait
dec
add
js
xor
mov
push
pop
jo
ss
stos
jne
jae
add
cli
or
movs
push
fidivr
scas
(bad)
jp
fstp
jge
imul
ret
or
push
out
enter
and
sbb
fs
pop
mov
ds
test
cmp
ins
cmp
std
scas
rol
dec
movs
jge
or
pusha
and
jl
pop
int3
add
pop
jl
xor
ficomp
in
mov
push
test
jle
int3
push
jl
stos
sbb
mul
xchg
sub
sbb
ds
xchg
scas
jb
mov
or
jmp
in
pop
loopne
jmp
push
mov
dec
jecxz
dec
aaa
or
xor
lock
pop
js
dec
pusha
stos
mov
inc
pop
into
cmp
and
aad
mov
shl
loop
inc
and
pop
push
inc
imul
sbb
pop
mov
inc
movs
out
mov
retf
mov
lock
(bad)
(bad)
js
cli
js
mov
gs
inc
scas
jmp
lea
hlt
aas
(bad)
adc
pop
fwait
into
pop
cdq
mov
dec
shl
sub
int3
ins
sti
xor
jbe
(bad)
daa
lods
mov
movs
ins
sahf
inc
cmp
add
jmp
(bad)
daa
cmp
push
mov
aad
xchg
enter
inc
sahf
mov
int
in
and
out
cmc
xor
sbb
pop
and
jmp
inc
inc
retf
adc
push
push
(bad)
neg
inc
xor
les
cdq
repz
add
push
xor
add
push
outs
neg
daa
dec
xchg
xchg
or
ds
adc
pop
or
jbe
iret
mov
or
mov
(bad)
and
push
popa
aad
push
jnp
dec
jecxz
and
adc
test
out
les
fstp
popf
(bad)
in
lahf
mov
ror
or
mov
or
ja
pop
test
rcr
xchg
ret
ficom
cmc
inc
(bad)
(bad)
push
sbb
es
mov
inc
rcr
and
add
(bad)
mov
xchg
and
sub
push
dec
das
adc
sub
mov
mov
mov
fs
push
call
int3
int
jnp
lea
adc
jns
mov
add
and
call
call
and
jb
out
ror
jbe
imul
lahf
mov
outs
lods
mov
cli
xlat
cmp
(bad)
test
mov
(bad)
mov
mov
add
inc
mov
xchg
dec
mov
pop
ds
mov
and
les
lock
retf
and
sbb
push
movs
shr
retf
fs
ret
sub
xchg
bound
adc
sahf
fs
cmps
scas
adc
mov
enter
xchg
mov
pop
add
test
sub
sub
add
pop
push
sbb
jmp
push
fisttp
jnp
dec
cwde
xlat
paddb
push
cmp
jo
fwait
jp
les
jne
inc
fwait
jbe
mov
jg
xchg
(bad)
dec
mov
(bad)
xchg
daa
test
push
pop
sbb
or
and
dec
fmul
or
dec
sar
(bad)
xchg
push
xchg
lds
push
dec
xchg
inc
es
xchg
jge
lock
icebp
lods
mov
mov
daa
and
mov
in
pop
xchg
adc
ds
pop
jcxz
cmp
ins
xor
ins
inc
add
or
lahf
pop
cmp
in
movs
pop
lds
cld
rol
dec
ins
test
xchg
pusha
sub
jb
lods
pusha
test
cmp
cmp
aam
in
mov
mov
push
mov
lock
inc
mov
mov
icebp
or
jp
xor
fild
lock
xchg
fadd
out
adc
sti
push
inc
test
clc
push
add
cmp
add
jg
add
add
add
add
je
ins
or
add
add
add
add
add
mov
add
add
scas
pop
add
add
frndint
and
sbb
call
mov
xchg
xor
xor
or
mov
or
repz
dec
push
cdq
or
into
inc
or
mov
or
(bad)
sbb
dec
in
adc
out
xchg
stc
and
lahf
jp
xor
cmc
or
mov
fnstsw
jo
jne
or
out
dec
push
outs
adc
sbb
out
xor
enter
push
fidiv
xor
sub
xchg
out
push
mov
and
inc
sub
ja
test
mov
sbb
arpl
outs
ins
pusha
je
out
nop
and
inc
rcr
xor
sbb
cld
neg
mov
jne
pop
add
or
xlat
addr16
cmp
inc
dec
jne
bound
jb
data16
jle
retf
mov
jb
xchg
mov
aaa
push
in
inc
inc
lahf
xchg
leave
mov
jne
icebp
iret
mov
xchg
inc
pop
fsubr
inc
mov
lods
mov
es
div
lahf
(bad)
test
ret
cmp
or
jmp
inc
(bad)
mov
mov
daa
repz
repz
sub
in
(bad)
sub
adc
dec
out
popa
call
ins
mov
dec
aad
into
mov
ror
lods
rcr
lea
imul
ins
repz
int
(bad)
mov
gs
aas
sub
fsubr
xchg
cdq
push
adc
dec
shr
xchg
sahf
push
ins
jl
xor
retf
mov
aad
or
rcl
fld
xchg
xchg
cwde
pop
xor
mov
xchg
sbb
lds
mov
rcl
xor
add
sahf
mov
fild
mov
xor
dec
mov
dec
pop
jmp
data16
inc
xchg
pop
add
sub
repnz
fs
mov
shl
push
mov
ss
scas
enter
inc
not
sahf
lods
pop
scas
loope
inc
das
and
jae
adc
pop
adc
int3
loopne
xor
pusha
lods
and
jg
push
jo
inc
cli
sbb
pop
dec
js
fisub
aad
cmp
or
popf
shl
mov
pop
out
shl
scas
and
scas
push
les
in
mov
iret
pop
jo
into
outs
int
daa
jmp
enter
jg
adc
repnz
mov
jnp
jb
adc
sub
lock
stos
fs
and
iret
sub
add
cli
cld
mov
add
push
(bad)
idiv
sub
mov
add
stos
je
aaa
xchg
into
mov
in
pop
push
mov
dec
aas
aaa
mov
mov
and
out
add
outs
jne
mov
pop
mov
add
add
sbb
scas
in
mov
or
popf
inc
jo
push
inc
fsubr
mov
inc
pop
jb
mov
popa
es
jle
and
jo
xor
pop
hlt
mov
inc
shr
or
icebp
aas
cwde
out
leave
gs
push
leave
inc
push
into
in
mov
ja
ds
and
aad
call
inc
loop
les
mov
in
adc
fs
xchg
retf
and
jmp
cld
out
inc
out
repnz
shr
dec
ffreep
jecxz
test
ret
jns
sbb
rcr
arpl
retf
sbb
sti
test
(bad)
ds
cdq
pushf
mov
aaa
stos
inc
call
xchg
inc
in
mov
sub
xchg
(bad)
repz
or
fcom
dec
or
retf
push
jmp
(bad)
xor
cmc
dec
mov
out
lock
or
loop
fistp
push
(bad)
sbb
push
loope
inc
push
dec
(bad)
das
lds
sub
inc
outs
pop
lmsw
addr16
retf
fwait
xor
cmp
pop
adc
xor
and
adc
xor
cmps
pop
aas
push
(bad)
in
push
jl
das
pop
scas
add
pop
dec
or
and
pop
repz
add
cld
mov
(bad)
sub
fnsave
jg
adc
sub
fs
cmps
leave
xchg
mov
or
sub
popa
cld
cld
(bad)
fdiv
jmpw
mov
xor
add
ins
add
into
add
std
inc
mov
mov
mov
retf
mov
cmp
cli
hlt
icebp
add
mov
sub
cld
movs
(bad)
sbb
push
addr16
scas
mov
bnd
dec
leave
sbb
sahf
pop
rcr
mov
push
and
cmp
or
lods
int
adc
lea
div
rcr
pop
scas
ror
mov
adc
push
jmp
and
xchg
dec
cmp
sub
inc
mov
pop
les
in
retf
retf
outs
sahf
mov
pop
push
inc
cs
cmps
inc
ja
dec
repnz
or
out
sbb
xor
cmp
xchg
push
test
out
ret
(bad)
out
mov
test
jns
jmp
enter
pop
xor
or
push
test
jbe
setbe
push
inc
out
test
mov
push
in
mov
push
xchg
pop
mov
aam
in
shl
jns
cwde
xor
repnz
jecxz
lods
sub
xchg
push
xlat
mov
js
mov
outs
or
push
or
xor
vpmuludq
xor
cli
and
jmp
icebp
fsub
dec
cmc
jle
std
(bad)
hlt
jne
shl
or
shl
or
shr
outs
ds
nop
mov
push
jne
stc
neg
(bad)
js
(bad)
imul
push
xor
push
ret
xchg
int
sbb
aaa
outs
cmc
pop
mov
clc
jnp
push
xor
pusha
pusha
and
adc
int
shl
xchg
movs
add
pop
aas
adc
adc
movs
cmps
adc
in
pop
mov
outs
imul
test
dec
xor
mov
cld
and
cdq
cs
fstp
movs
pop
inc
xchg
ret
not
adc
mov
loopne
push
(bad)
xor
cli
jle
fiadd
dec
lds
fwait
lods
(bad)
out
pop
test
sbb
sti
stc
leave
inc
dec
sbb
fnsave
mov
fstp
data16
bound
mov
inc
mov
movs
stc
clc
scas
push
dec
fst
sti
scas
and
pop
jg
add
mov
rol
je
push
jmp
sbb
std
sbb
or
mov
aam
fidivr
mov
test
and
in
jb
in
pop
fwait
in
mov
mov
test
adc
push
cmps
cmp
pop
das
add
sub
pop
mov
sbb
fsub
xchg
pop
in
loope
dec
jb
fbstp
mov
sbb
and
jns
adc
ror
jbe
cld
jne
loope
test
cmp
jb
cmps
push
xor
popa
loop
nop
int3
arpl
push
retf
xchg
cmps
pop
push
inc
push
pop
loopne
sbb
scas
test
xchg
cmps
mov
jns
mov
xchg
sahf
cmp
cmp
loopne
sub
ret
mov
push
xor
lods
arpl
nop
jp
mov
mov
jle
push
retf
pop
fnstenv
scas
sub
dec
inc
jb
(bad)
push
and
jmp
mov
and
out
adc
fs
test
retf
in
cmp
in
push
outs
test
sub
call
cmps
hlt
inc
mov
call
xor
mov
mul
inc
fiadd
loope
mov
jno
and
imul
lock
lock
cs
data16
ds
push
in
push
(bad)
pop
add
sbb
pusha
into
lods
mov
adc
sahf
aaa
mov
jg
ss
pop
cdq
das
xchg
and
outs
xor
cmp
inc
xor
inc
jb
inc
add
push
add
leave
push
cmp
xchg
ret
jnp
rcr
leave
imul
hlt
(bad)
iret
dec
rcl
push
shl
shl
in
das
xor
mov
jnp
je
lods
ret
cmps
ds
mov
push
imul
or
push
ins
and
test
mov
les
stos
test
icebp
xor
inc
jo
sbb
cmps
nop
and
fldpi
fisubr
inc
push
or
inc
int
ret
mov
jnp
sahf
icebp
or
push
mov
nop
push
push
inc
les
data16
jmp
mov
(bad)
imul
pop
leave
or
aad
mov
outs
lea
inc
push
fcomp
and
jmp
ja
mov
xlat
repnz
push
data16
imul
inc
mov
out
dec
cmps
jecxz
cld
dec
lock
sbb
adc
(bad)
dec
push
jae
loope
adc
(bad)
dec
sub
xor
mov
cdq
lods
sahf
out
iret
enter
push
inc
pop
fist
fs
sub
dec
sub
iret
mov
mov
mov
mov
rcl
or
adc
fisub
aad
inc
std
das
cwde
rcr
or
mov
into
in
cmc
or
sub
mov
jmp
test
test
add
test
aas
push
sbb
jmp
jle
mov
dec
pop
fdiv
ret
ins
lods
hlt
test
shl
push
and
add
inc
mov
jl
add
std
imul
scas
push
lds
mov
sbb
imul
aad
adc
jecxz
loop
hlt
pushf
cmp
ss
cmp
sti
mov
add
pushf
xor
jmp
test
test
jmp
and
or
dec
fist
or
mov
mov
mov
out
call
pop
and
or
and
cmp
cld
xlat
jle
inc
or
rcr
outs
xor
pop
xor
popf
jne
sbb
inc
pop
cmps
xchg
cmp
sub
jb
inc
fcom
pop
mov
cwde
mov
in
movs
xor
scas
cli
cld
or
pop
cli
aaa
enter
lods
loope
mov
into
sub
mov
ins
fxch
add
and
mov
adc
mov
icebp
pavgw
sti
cmps
pop
jp
retf
rol
dec
sar
pop
clc
cmp
or
mov
mov
fnstcw
test
sbb
mov
loopne
in
jns
jg
pop
repnz
into
xor
inc
iret
sbb
cmp
add
sub
add
add
add
add
add
add
fisttp
add
add
les
add
data16
add
add
add
out
add
add
add
add
add
add
imul
jbe
arpl
add
add
add
add
add
add
add
add
and
int
mov
add
add
add
add
add
add
add
addr16
add
add
pop
cmp
cmc
stos
jp
jnp
xchg
imul
addr16
sbb
xchg
fistp
in
xor
addr16
test
xchg
in
dec
and
add
ror
scas
into
aad
fcmovnu
aaa
push
les
sar
cli
test
add
add
lods
mov
jnp
ds
lock
and
or
inc
cmp
test
mov
leave
inc
jb
icebp
call
aam
add
jne
shl
retf
ins
imul
pusha
pop
stos
fdiv
jmp
mov
ror
adc
nop
cmps
jb
adc
cmps
jl
push
pop
inc
test
or
adc
dec
sub
pop
in
sti
cmp
out
sbb
and
test
ins
cmp
push
sahf
push
mov
xchg
(bad)
jge
mov
(bad)
mov
jno
fsubr
lea
das
sub
mov
push
popf
cdq
inc
ja
(bad)
fadd
sbb
call
inc
data16
repz
cmp
inc
jmp
jp
xchg
std
mov
pop
mov
or
jns
out
jecxz
xor
test
or
repz
fs
dec
mov
mov
stc
jns
mov
ins
add
inc
xchg
jne
pop
mov
mov
sbb
pop
xchg
popa
or
pop
int3
add
retf
and
movs
pop
sbb
nop
sbb
rcr
nop
push
cmp
cmp
daa
mov
xchg
add
ror
push
(bad)
pop
popa
xchg
jle
imul
adc
sti
add
and
(bad)
push
pushf
jo
sub
es
mov
cmps
add
pop
add
fild
aaa
mov
out
and
mov
cmp
test
inc
xor
mov
mov
pop
cli
in
loope
lds
mov
or
adc
pop
in
sub
out
cdq
and
das
pusha
xchg
jl
loopne
push
push
(bad)
sbb
xchg
stos
xchg
or
xor
xchg
neg
xor
scas
or
xchg
out
repz
add
data16
ret
mov
or
rcr
mov
stos
sub
sbb
imul
push
cld
sub
cwde
adc
enter
lods
pop
mov
mov
mov
retf
push
(bad)
mov
retf
sbb
xlat
stc
inc
sbb
push
sbb
and
pusha
jmp
scas
(bad)
adc
repnz
mov
fmul
or
aam
repz
(bad)
push
outs
xchg
test
pushf
sub
pop
cmps
es
mov
setno
outs
xchg
mov
jno
call
dec
sub
cmc
imul
adc
jae
sub
mov
push
jae
cmp
xor
in
mov
dec
fcom
pop
push
xor
cmc
(bad)
push
aad
dec
jbe
ja
mov
neg
ja
jge
mov
and
jbe
mov
and
inc
xor
lods
sti
sub
jb
aad
mov
jbe
dec
mov
sbb
mov
(bad)
jae
xchg
cdq
mov
fcomp
xlat
and
je
adc
(bad)
adc
xchg
pop
mov
fprem1
(bad)
mov
xchg
xchg
jl
stc
in
loope
cdq
sahf
rcr
mov
sub
in
jae
stc
ins
inc
adc
mov
cmc
ja
out
retf
and
add
scas
push
mov
(bad)
out
fadd
icebp
loope
jmp
lock
aaa
sbb
and
out
bound
sbb
jle
jmp
add
dec
ficom
add
out
fucomi
sar
fcmovnbe
and
fsub
(bad)
das
push
aas
jmp
push
push
sub
cmc
pop
xor
mov
pop
push
arpl
mov
dec
jecxz
jecxz
push
out
div
add
enter
push
rcl
pop
clc
pop
mov
jle
mov
add
gs
loopne
jge
jo
jecxz
test
mov
cwde
hlt
adc
pop
test
imul
loop
cmp
cmp
sbb
mov
outs
shr
aam
pop
rol
gs
or
mov
and
mov
aad
inc
push
jno
cmc
cld
out
xor
inc
loope
aad
mov
adc
mov
add
inc
sub
test
stos
xchg
mul
ja
or
stos
jl
(bad)
mov
inc
aas
fsub
mov
or
mov
dec
and
jg
mul
pop
test
mov
hlt
aas
mov
adc
add
jge
add
loopne
fsubr
push
test
movs
outs
xchg
mov
add
mov
mov
ins
adc
push
cmp
xchg
dec
jp
inc
repnz
jp
iret
dec
pslld
jno
es
in
pop
push
leave
retf
push
shr
movs
jne
xchg
dec
retf
out
mov
and
and
sbb
stc
cld
(bad)
icebp
pop
and
ins
int
out
mov
and
pop
cwde
jb
and
pop
sti
inc
fiadd
sbb
fimul
push
out
inc
rcl
in
aad
and
dec
push
(bad)
push
push
or
fcom
(bad)
dec
pop
pop
mov
sub
lock
mov
add
scas
cmp
sti
std
jb
in
and
mov
add
lahf
and
call
xchg
imul
sbb
daa
cs
cmp
pop
movs
out
ret
sti
fwait
(bad)
sub
in
scas
jbe
ficom
ins
jae
or
imul
aad
stos
sbb
jmp
fild
pop
mov
dec
ins
out
lods
jmp
mov
push
imul
push
fidivr
fdivp
outs
test
fisub
clc
pop
gs
aaa
lahf
jecxz
shr
xor
dec
jp
ins
dec
adc
aaa
pop
jnp
inc
pop
sub
ds
xor
adc
cmp
push
mov
aad
mov
push
mov
jmp
loopne
test
sub
aad
push
shr
loop
mov
mov
xchg
shl
pop
pop
cmp
mov
inc
jns
add
ror
push
outs
mov
jmp
mov
outs
fsubrp
nop
push
pop
sub
push
push
push
add
rol
or
jmp
(bad)
(bad)
and
dec
and
dec
inc
cmp
popf
adc
(bad)
in
pushf
inc
(bad)
dec
xor
popa
in
jbe
inc
add
retf
push
add
neg
push
imul
lea
repnz
popf
xor
sbb
in
push
aaa
and
mov
neg
push
sub
ins
ins
ds
adc
cwde
mov
ret
stos
daa
and
or
cmp
xchg
sbb
cwde
pop
mov
adc
lea
mov
sub
pop
dec
fcmovu
push
sbb
gs
pop
shr
cs
fnsave
loopne
or
push
xor
addr16
jl
xchg
mov
ror
outs
dec
(bad)
mov
xchg
xor
arpl
push
push
dec
stc
mov
call
in
jns
cdq
push
movs
gs
in
aas
dec
add
aaa
mov
mov
fcom
(bad)
cmp
stos
in
xchg
mov
push
dec
shl
mov
enter
sbb
xchg
xor
mov
pusha
cmp
push
sbb
fidivr
or
mov
fdivr
jecxz
mov
fwait
mov
shl
loopne
outs
fs
xchg
dec
out
sub
out
inc
test
les
loop
enter
xor
into
add
xchg
sti
outs
dec
push
cmp
adc
test
ins
sub
cmp
push
(bad)
repz
push
inc
cmps
les
and
xchg
call
loope
add
popa
cmp
sbb
sub
and
icebp
leave
int3
add
xchg
push
sbb
jbe
arpl
in
jecxz
fcom
aaa
in
aaa
or
repz
fmul
(bad)
int
aaa
inc
les
add
xchg
cmps
stc
mov
fdivr
push
sar
pop
mov
inc
lods
push
add
jl
push
inc
cli
or
mov
dec
aaa
mov
movs
mov
outs
std
adc
mov
dec
add
scas
fadd
cmp
movs
jmp
sar
out
push
adc
imul
outs
and
out
xor
hlt
enter
jae
ret
mov
pop
or
jo
dec
jmp
hlt
and
inc
fcom
jmp
sub
add
popa
push
das
shr
adc
mov
mov
or
push
push
push
push
test
out
cdq
jg
add
sub
or
(bad)
pop
fwait
mov
loopne
mov
call
sahf
and
pop
pop
mov
xchg
das
arpl
pop
jno
pop
outs
ds
adc
mov
inc
mov
loope
push
or
movs
fist
pause
neg
cmps
in
ret
pop
cdq
or
jmp
mov
push
add
std
in
sub
mov
inc
mov
adc
dec
lds
fwait
imul
mov
xor
jg
xchg
ins
sub
jb
movs
outs
cmp
call
out
lea
out
push
push
xor
loopne
adc
push
dec
cmp
pop
nop
add
cli
into
les
mov
jecxz
cld
loope
pop
fild
arpl
movs
popf
sti
xor
out
imul
pop
cmc
ret
sub
int
cli
xor
inc
push
sbb
test
or
clc
or
mov
pop
jl
and
cwde
dec
addr16
repnz
sub
and
fucomip
out
inc
in
xchg
scas
(bad)
dec
xor
sbb
lods
scas
mov
pop
jle
in
les
and
pop
jmp
ins
pop
pop
inc
xchg
rcr
jge
arpl
aad
add
in
rcl
iret
ss
in
daa
pop
icebp
mov
jmp
inc
clc
stos
and
add
pop
mov
imul
rcr
xor
push
div
add
or
and
mov
ja
sub
fbld
rcr
pop
outs
aaa
or
pop
dec
lds
aam
xchg
in
add
jb
shr
sub
jo
outs
arpl
add
jp
rol
add
add
add
add
xor
add
add
add
add
add
add
inc
add
add
add
add
add
push
add
les
add
add
test
add
add
add
add
cmps
add
add
add
add
push
add
or
sahf
add
add
add
add
add
es
cmc
adc
or
xor
and
mov
adc
jl
mov
pop
fcomp
sub
xor
mov
mov
dec
test
jge
rcl
jb
loop
inc
mov
loopne
mov
imul
cmp
cmp
mov
lds
mov
push
cmp
dec
xchg
clc
jbe
add
mov
mov
scas
je
stos
and
and
push
punpckhdq
in
xor
add
test
push
mov
mov
or
xor
push
loope
xchg
and
inc
(bad)
pushf
(bad)
sti
nop
test
(bad)
jb
add
aam
jmp
adc
xchg
dec
push
(bad)
neg
sbb
cmps
outs
xor
cli
stc
push
sti
inc
xchg
mov
adc
iret
dec
dec
add
dec
mov
mov
test
fistp
push
ds
push
xchg
sbb
push
pop
sbb
shl
lock
mov
mov
or
push
mov
or
push
test
adc
inc
sub
(bad)
out
jb
jge
ret
pusha
lds
je
or
addr16
sar
sub
or
cwde
cmps
jmp
jbe
bound
cmps
hlt
in
add
cs
jae
mov
push
and
arpl
pop
cmp
mov
xor
jp
xor
xchg
stos
cmps
popa
fs
xor
sub
and
adc
retf
add
dec
js
mov
inc
mov
in
shl
jecxz
ja
daa
xchg
mov
pop
and
(bad)
ffreep
retf
aas
pop
pop
scas
js
cmps
stos
pop
dec
sar
xor
add
and
(bad)
cld
inc
push
mov
jl
orps
cmp
xchg
daa
div
int
in
sbb
dec
sahf
and
jmp
and
sbb
mov
inc
call
stos
mov
xchg
ja
lahf
inc
loop
frstor
add
mov
ror
cmp
add
cdq
pop
or
pop
dec
mov
mov
out
push
clc
mov
shl
retf
and
ja
fstp
(bad)
sub
cli
enter
popa
cmp
stos
retf
pop
inc
adc
das
mov
cli
stos
rcr
mov
arpl
jnp
aaa
jg
mov
push
push
add
jbe
or
mov
dec
ins
jne
mov
popf
repz
out
add
xor
dec
push
loope
daa
and
ins
cmps
(bad)
movs
cli
cwde
push
test
dec
retf
test
jb
fldenv
cmps
clc
inc
mov
test
leave
pop
lea
ret
fcmovbe
dec
repz
add
in
inc
pop
add
and
pop
xchg
push
repnz
jmp
jp
nop
mov
std
cld
fs
mov
adc
and
(bad)
cmp
(bad)
xor
or
mov
call
and
sub
jl
in
add
mov
push
outs
es
jae
add
mov
dec
xor
jmp
sti
mov
repnz
loop
jmp
push
push
ret
icebp
jb
into
xor
dec
test
lods
cmp
and
mov
push
mov
xchg
mov
and
inc
jmp
cmp
adc
stos
mov
jbe
in
lock
pop
xor
rol
outs
lock
retf
fild
xor
gs
shl
lahf
loop
lea
xor
in
sub
xchg
mov
adc
jnp
icebp
sbb
lods
fdiv
inc
sbb
iret
mov
fs
inc
fcmovnb
ss
sbb
xchg
dec
ja
jg
and
jo
cld
push
xor
sub
outs
out
cdq
scas
ret
test
sahf
aam
sub
or
mov
jnp
loope
mov
cli
xchg
xor
xchg
mov
int3
mov
fdiv
ret
shl
cld
mov
dec
jmp
dec
mov
cs
les
xchg
xor
pusha
mov
mov
and
xchg
aam
fstp
or
sub
push
push
mov
sbb
shr
adc
aad
xlat
jle
pop
aad
lods
jb
adc
cmp
daa
or
adc
ja
sub
fisub
pop
pushf
std
and
std
pusha
push
jp
mov
rol
or
shl
and
fadd
mov
inc
rcr
push
jle
stos
sub
dec
call
xor
xchg
enter
adc
xor
dec
cmp
sub
mov
out
in
jle
fst
sub
mov
xor
iret
fcom
lock
shl
leave
push
add
sub
xor
gs
into
jo
mov
add
jne
lea
cdq
fldcw
(bad)
mov
and
shl
cmpxchg8b
(bad)
inc
imul
mov
sbb
mov
cld
dec
mov
xor
or
popa
or
mov
sbb
xchg
iret
sbb
sub
xor
fbstp
and
repnz
pop
and
xlat
jne
bound
push
push
cmc
icebp
cmp
dec
(bad)
xor
inc
xor
sti
xor
xchg
pop
das
mov
xchg
loope
mov
pusha
fs
lock
jb
add
mul
jp
xchg
(bad)
xchg
mov
scas
(bad)
lock
sbb
dec
je
icebp
test
mov
pop
in
and
fstp
call
(bad)
cmp
or
out
iret
pop
pop
or
jl
(bad)
in
dec
sbb
fldenv
inc
add
push
movs
jo
xchg
push
mov
inc
adc
xor
stos
cmp
es
ret
not
repz
lds
sbb
push
js
call
stc
addr16
sbb
dec
call
hlt
loop
fwait
cmp
add
cdq
mov
sbb
add
fistp
out
ins
arpl
sbb
jecxz
pop
and
popa
hlt
lahf
ds
push
and
sbb
int3
adc
jne
stos
sbb
aam
outs
inc
pushf
adc
lods
or
popa
sub
enter
sbb
mov
mov
into
mov
xchg
out
jmp
movs
or
sbb
add
fsubr
mov
inc
and
xor
sar
(bad)
cmp
mov
pushf
loop
mov
stc
fcomi
aas
sbb
ins
ins
sbb
fwait
shl
push
bound
mov
jo
in
ins
push
add
ds
sbb
xor
push
adc
mov
sbb
xor
add
pop
movs
pop
mov
mov
inc
retf
inc
pop
push
sub
jmp
xchg
sbb
inc
xor
add
fwait
push
cmp
out
gs
mov
add
push
sbb
mov
mov
not
cmp
cmp
jae
addr16
out
nop
and
xlat
repnz
cmp
push
int3
push
pop
stos
inc
xchg
scas
call
mov
dec
mov
jle
pusha
lahf
js
fisub
lahf
dec
fist
add
gs
and
pop
xor
clc
pop
push
jle
out
stos
inc
call
sub
mov
xor
fisttp
inc
xlat
jne
jmp
push
sbb
test
aad
jge
mul
pop
sub
sahf
jae
pop
ins
mov
mov
stc
aas
imul
lock
fwait
and
sbb
jl
jge
ret
xlat
push
loope
mov
lods
in
cmc
imul
add
sbb
add
xchg
fiadd
xlat
mov
in
pop
xor
fwait
int
jp
mov
mov
add
out
inc
and
out
loope
mov
leave
add
mov
lahf
pop
les
pop
mov
aad
pop
sbb
and
jge
stos
ret
repz
mov
lds
add
ret
jg
dec
out
xchg
lock
or
push
xchg
or
je
adc
sti
cwde
inc
retf
mov
aad
cli
popa
mov
sbb
cmc
mov
mov
mov
(bad)
lock
aas
(bad)
neg
or
and
rcl
sbb
cmp
mov
fs
and
mov
sub
scas
out
dec
cmp
enter
ror
inc
call
push
lea
test
cld
adc
xor
fs
pop
bound
rcr
shl
shl
or
shr
icebp
pop
xor
or
lods
jp
cmp
jmp
mov
inc
pop
mov
test
popf
aam
arpl
inc
cmp
bound
pop
out
enter
(bad)
cmps
mov
sub
retf
iret
jmp
sub
(bad)
stos
pop
out
stos
push
sub
mov
mov
and
pop
cmp
in
mov
(bad)
dec
es
js
fld
pop
lock
cld
jo
mov
outs
dec
fwait
add
sub
or
ss
cld
js
adc
js
push
add
mov
scas
mov
mov
mov
adc
or
mov
pop
mov
lahf
jle
push
in
sbb
call
fsubr
lods
or
add
stos
stos
xchg
adc
xchg
sub
cmp
mov
cmp
movs
iret
in
dec
shr
retf
pop
and
leave
pop
(bad)
int
clc
call
stos
mul
inc
add
pushf
paddsb
aaa
bound
repz
bound
scas
mov
and
sbb
dec
inc
stos
out
and
sbb
mov
loop
mov
lds
jmp
dec
int
add
add
and
mov
and
jg
adc
aas
aad
daa
es
xor
pop
mov
adc
into
out
or
jbe
aaa
je
ret
dec
push
mov
enter
mov
repnz
popf
imul
outs
repz
mov
cmp
call
and
add
mov
or
fidiv
inc
stos
sbb
aam
js
mov
add
add
add
xchg
dec
add
add
add
add
add
add
add
add
retf
add
add
add
push
add
add
add
add
add
add
add
rol
add
add
add
mov
add
inc
add
add
add
add
pminsw
cwde
add
add
add
retf
add
add
add
add
add
mov
add
add
add
add
dec
add
add
add
adc
inc
add
add
add
add
add
jge
test
add
out
mov
jmp
add
add
cmp
add
add
push
rol
add
add
add
add
add
add
add
out
push
fadd
add
and
retf
loope
add
dec
add
add
add
mov
add
add
std
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
pop
add
add
add
mov
add
add
dec
add
add
add
add
add
add
add
inc
add
add
add
add
add
cwde
or
add
retf
popa
add
add
cmc
add
add
add
add
adc
cwde
xor
lds
loopne
adc
not
movs
sbb
add
aam
dec
adc
stos
stc
movs
mov
leave
sbb
dec
jmp
jge
cmps
call
jmp
jb
xor
js
into
ror
dec
push
ja
mov
xor
dec
sbb
sbb
jns
push
lock
lahf
add
cmc
jle
mov
scas
das
outs
dec
jns
loop
in
pop
outs
lock
xchg
lods
adc
retf
adc
sbb
mov
push
or
jns
mov
mov
xchg
movs
mov
sub
sub
inc
pop
sub
(bad)
xchg
add
push
push
test
pushf
(bad)
jne
lea
(bad)
and
sub
mov
cmc
retf
jp
(bad)
lea
(bad)
loope
pop
xor
out
cwde
iret
pop
cmps
fimul
loopne
outs
mov
pop
retf
call
neg
fcomp
arpl
out
sub
cmps
inc
int
ror
push
pushf
mov
dec
ins
inc
and
aas
push
mov
xor
inc
jmp
or
je
retf
push
mov
imul
sbb
adc
push
inc
dec
enter
in
and
inc
ins
xchg
(bad)
xor
cli
aam
push
push
repz
xor
lock
push
and
idiv
gs
xor
mov
mov
lods
sub
xchg
ss
div
stos
into
cmp
mov
(bad)
and
out
cmps
fwait
xor
stos
jnp
and
jbe
sbb
je
retf
jae
push
shl
idiv
sub
fwait
jecxz
sbb
mov
jo
imul
lods
imul
pop
jmp
push
dec
push
jae
(bad)
scas
inc
push
mov
adc
iret
test
cwde
inc
push
push
add
shl
es
xor
dec
mov
dec
jmp
inc
imul
adc
jae
jl
sub
and
loop
mov
push
dec
int
movs
cmp
and
std
and
add
add
sbb
push
test
stc
push
mov
adc
push
push
sbb
add
dec
mov
scas
mov
sub
ror
sbb
out
jnp
mov
les
int3
pushf
or
pop
pop
cs
and
les
jle
ficom
fs
lock
movs
mov
(bad)
push
fs
jno
shl
or
clc
xlat
or
outs
add
add
add
cmps
cmp
sub
push
sub
pop
fst
adc
lds
cmp
movs
pushf
dec
jecxz
repz
and
sahf
jmp
lahf
inc
cmp
push
clc
mov
fistp
adc
mov
inc
push
hlt
jnp
gs
push
push
push
pop
jmp
movs
xchg
es
call
arpl
adc
pop
mov
sub
(bad)
call
ss
leave
and
in
mov
jbe
inc
xchg
add
shl
push
xchg
jmp
call
rol
dec
sub
(bad)
cli
add
in
push
clc
in
or
mov
stos
or
jge
inc
jmp
inc
cdq
sbb
xor
sub
xchg
jmp
fbstp
inc
test
gs
jo
mov
mov
sbb
les
ret
cmp
popa
fistp
cmp
test
ss
pop
enter
cwde
pop
sub
sbb
sahf
out
mov
add
inc
mov
fisubr
xchg
scas
jnp
out
movs
bound
test
(bad)
cmc
inc
mov
repnz
mov
imul
push
fisttp
jmp
(bad)
xor
out
xchg
sub
adc
adc
loop
add
test
add
mov
mov
sbb
outs
ins
pop
or
call
dec
les
dec
(bad)
fldlg2
rcl
mov
into
int3
out
repnz
push
cli
jp
adc
fbld
movs
es
(bad)
(bad)
(bad)
sbb
inc
enter
mov
push
aas
lea
sub
xor
call
push
inc
adc
xor
test
xchg
(bad)
icebp
cmp
cmps
jp
or
xchg
mov
dec
jo
mov
addr16
cmc
icebp
push
mov
sub
cwde
and
call
test
mov
pop
repnz
(bad)
xor
sbb
adc
dec
popw
ret
push
xchg
imul
retf
mov
mov
mov
cli
movs
iret
retf
rol
jge
mov
out
retf
clc
jmp
push
sub
(bad)
pop
test
dec
loope
dec
scas
sbb
repnz
cmp
rol
in
lds
out
jae
mov
sub
mov
out
js
cmp
ret
inc
pop
xchg
mov
jge
outs
mov
xchg
jb
jns
adc
cmp
fnstsw
test
push
add
shl
lds
cmp
aam
in
adc
lds
cld
inc
in
ds
je
repnz
in
jp
stos
pushf
ret
xchg
lea
(bad)
jp
pop
xor
push
add
es
pop
or
(bad)
or
popa
mov
in
jne
data16
add
push
dec
push
push
sbb
jno
sbb
movs
sahf
add
call
test
jecxz
(bad)
outs
add
add
push
cmp
imul
imul
fwait
hlt
xchg
inc
mov
cs
cmps
add
out
pop
ficomp
shl
int
or
push
(bad)
in
mov
push
gs
lea
popa
outs
push
test
adc
jmp
scas
fmul
jge
mov
scas
in
and
and
popa
lods
push
test
ins
lds
test
push
lods
push
mov
jecxz
inc
mov
push
cmc
rcl
xchg
bound
lock
call
push
retf
sbb
jnp
aaa
data16
inc
retf
in
mov
ror
mov
js
add
mov
pop
dec
not
inc
mov
leave
cmp
push
jle
retf
jmp
test
mov
xchg
push
(bad)
std
lea
fsub
inc
xchg
cmp
in
jne
pop
jno
fsubr
add
dec
push
es
pop
ins
add
cmp
pusha
jmp
(bad)
fdivr
ins
cmp
imul
cli
sahf
mov
xchg
gs
test
(bad)
(bad)
repnz
adc
add
jmp
retf
ins
(bad)
adc
repnz
ss
gs
xchg
sub
dec
call
in
dec
xchg
mov
in
push
jecxz
stos
cmp
imul
popf
jmp
sub
dec
xchg
dec
xlat
mov
shr
int
js
(bad)
mov
mov
mov
in
(bad)
and
sbb
ret
push
mov
lds
xchg
sub
aas
jg
pop
std
mov
repz
push
mov
div
aad
dec
mov
cmp
dec
sbb
out
sub
jne
es
call
mov
xor
pop
nop
loopne
and
add
or
es
inc
mov
in
push
(bad)
xchg
aam
(bad)
not
in
pop
outs
scas
mov
push
mov
(bad)
out
cmp
xchg
cmp
push
mov
bnd
enter
adc
mov
and
sbb
popa
mov
mov
mov
sahf
pop
mov
in
pop
jl
mov
dec
xchg
jbe
fisttp
data16
retf
js
cs
stc
add
out
mov
jns
inc
and
scas
call
sar
adc
dec
jae
push
push
aas
pop
pop
jo
push
pop
add
arpl
xchg
ins
hlt
jmp
pushf
scas
icebp
retf
and
xchg
ret
cmps
adc
jecxz
add
cmp
fistp
inc
push
inc
mov
aam
sbb
xor
sti
test
sbb
adc
outs
sub
adc
dec
sbb
jne
cmc
pop
test
sahf
mul
mov
jnp
lods
dec
sub
movs
xchg
aas
push
pop
mov
call
pop
pushf
jb
ins
mov
cmp
dec
out
rcl
mov
xchg
dec
jmp
out
cdq
ja
xor
popf
mov
xchg
mov
outs
sub
mov
xchg
enter
and
xor
(bad)
sbb
frstor
std
mov
out
sbb
and
mov
sti
lock
xchg
push
mov
bound
out
inc
xchg
ja
mov
xchg
pop
pop
xor
xchg
jg
jbe
shr
fcomi
dec
and
adc
lods
xchg
jmp
mov
lods
mov
jno
fmul
sbb
lods
cli
dec
xchg
ins
std
lea
adc
bnd
ret
scas
pushf
cmp
int
pop
inc
xor
add
cwde
cdq
pop
dec
sbb
cmps
sbb
mov
shr
test
sti
jbe
retf
ss
(bad)
lods
cmp
or
(bad)
out
inc
pusha
xchg
mov
push
inc
out
pop
fild
push
dec
clc
dec
test
imul
(bad)
pop
adc
or
fcomip
or
sub
jns
lock
mov
arpl
cld
xchg
pop
js
cmp
std
xchg
rcpps
or
imul
popf
push
cwde
mov
aam
jle
dec
mov
jg
cmp
ret
mov
xchg
pop
jmp
and
shr
mov
mov
imul
adc
ret
jmp
pop
and
ins
mov
mov
popf
push
(bad)
cmps
dec
dec
xchg
xlat
cli
jl
nop
stc
jbe
test
jbe
xchg
add
lea
jne
imul
mov
mov
out
inc
pop
sbb
fisub
xor
dec
(bad)
mov
sbb
fst
repnz
sub
push
push
aaa
arpl
mov
push
ins
pop
dec
popf
or
add
in
clc
leave
mov
arpl
push
and
and
inc
stc
xlat
das
ins
icebp
mov
push
ds
xchg
and
jmp
test
add
sub
in
xchg
mov
sub
call
sub
mov
aaa
adc
test
add
add
out
jns
out
mov
mov
call
lods
sub
cmp
ins
add
es
fcmovnb
fdivr
icebp
mov
sub
enter
into
xor
lods
hlt
fbstp
add
jle
push
mov
out
int3
mov
dec
in
jle
mov
inc
sbb
daa
push
pop
je
stc
add
prefetch
js
dec
sub
cs
jb
lea
(bad)
mov
mov
fdivr
leave
mov
push
int3
push
or
fld
inc
aad
imul
and
hlt
push
add
push
and
mov
mov
fistp
pop
dec
ja
movs
sti
and
add
mov
push
pop
cmp
ds
jmp
(bad)
lods
push
add
stos
loope
das
dec
xchg
out
sub
lock
sbb
and
and
fxch
mov
movs
dec
ret
popa
int
mov
aam
dec
arpl
call
mov
popf
cmps
inc
imul
fld
cdq
test
mov
mov
iret
nop
ficomp
call
mov
imul
inc
daa
pop
push
test
jmp
(bad)
cs
imul
in
imul
hlt
fisubr
arpl
outs
sbb
inc
cld
int3
mov
or
fdiv
(bad)
nop
cmp
mov
rcr
int
fmul
out
stc
push
(bad)
data16
pop
xchg
fst
outs
and
push
scas
and
add
cmp
int
and
scas
add
mov
and
inc
add
pushf
cmc
pop
das
jmp
fnstenv
push
icebp
sbb
sub
xor
retf
mov
in
dec
mov
mov
fidiv
ret
das
pop
sar
or
or
jmp
bound
sti
push
sbb
push
cld
and
lahf
pop
fnstcw
mov
push
adc
(bad)
out
sahf
mov
mov
xchg
xchg
stos
and
jno
push
adc
xchg
retf
and
push
mov
cmp
ret
fwait
xchg
stos
push
cmp
arpl
iret
dec
or
hlt
and
xchg
mov
in
daa
sar
push
xor
mov
add
(bad)
mov
xor
out
sbb
mov
xor
jge
inc
ins
jecxz
fstp
mov
pop
test
loope
inc
xor
sub
jle
jmp
daa
push
inc
inc
sub
mov
lods
jne
or
aam
stc
fist
sar
fldcw
sbb
adc
inc
addr16
(bad)
into
out
test
fmul
mov
inc
test
cmp
add
test
sub
rcl
lea
mov
loope
dec
push
outs
cmp
mov
loop
loop
jmp
inc
jno
push
repnz
mov
ins
ins
test
out
fisttp
xchg
outs
into
pop
in
jmp
jo
mov
movs
xchg
das
gs
cs
mov
in
aad
jp
sub
mov
or
mov
add
in
add
or
les
inc
cdq
aad
dec
add
adc
push
xor
inc
inc
jbe
test
mov
dec
pusha
int3
push
loope
and
daa
int3
gs
jle
mov
aad
xchg
push
in
pop
fild
jno
stos
pop
sbb
(bad)
pop
cmc
mov
xor
dec
cmp
stc
ror
movs
int
push
inc
rol
cld
mov
jp
and
inc
or
dec
ins
mov
lds
das
cs
loopne
call
mov
inc
imul
inc
fscale
hlt
mov
outs
in
outs
fs
imul
sub
add
imul
add
add
loop
jns
lds
retf
mov
inc
or
dec
push
out
imul
imul
jns
clc
mov
mov
fwait
out
mov
or
and
js
cld
sbb
pop
add
xchg
dec
inc
push
daa
mov
in
add
push
or
ror
psubw
stc
mov
dec
or
jmp
push
cli
or
push
es
dec
jnp
clc
add
adc
or
mov
mov
cli
(bad)
int
ins
aaa
dec
(bad)
push
aas
lahf
sbb
mov
pop
xor
sbb
loopne
arpl
inc
imul
and
int3
jbe
aam
ins
retf
jecxz
and
inc
cld
mov
pop
out
loop
fcmovbe
and
hlt
pop
dec
mov
(bad)
mov
jno
int
xchg
in
stc
dec
mov
push
inc
clc
das
sar
xor
bound
(bad)
das
test
lds
adc
dec
inc
cld
fist
inc
in
push
push
enter
sbb
mov
add
outs
mov
xor
mov
cmp
xor
popa
fsubr
xchg
pusha
icebp
inc
sub
add
dec
div
lds
loope
jb
dec
sub
jno
sub
rcl
xor
arpl
cli
add
dec
loopne
sbb
sub
jb
popa
jg
cmp
sbb
xor
retfw
loopne
adc
push
cmp
xor
xchg
out
or
jne
or
pop
sub
sbb
popf
scas
shl
jnp
stc
cmp
mov
adc
movs
sub
mov
and
mov
sahf
xor
adc
int
sbb
mov
imul
add
and
in
or
sub
or
dec
mov
jne
lock
add
pop
mov
or
dec
arpl
fld
movs
cmp
xor
adc
and
stos
scas
les
sub
ds
dec
xchg
or
or
push
paddusw
leave
cdq
jge
stos
pop
adc
mov
retf
in
mov
sub
dec
out
xor
dec
ficom
or
jbe
dec
ins
pop
popa
fwait
cmp
test
and
jns
cmps
ins
(bad)
fbld
into
or
out
(bad)
arpl
dec
mov
pop
int3
or
test
push
and
and
pop
cmp
aam
cld
or
mov
rep
jne
xchg
cs
test
mov
sub
sbb
hlt
push
pop
mov
mov
imul
xlat
pop
cmps
xchg
neg
jmp
jl
adc
pop
mov
xchg
ds
push
and
scas
rol
inc
call
pop
scas
or
jmp
or
fstp
inc
jp
sbb
and
ficom
jp
add
and
(bad)
mov
call
mov
xor
jno
fcomp
xchg
mov
xchg
push
and
push
push
ja
fbstp
addr16
push
shr
bound
push
pushf
cdq
sub
push
aas
rcl
int
xlat
sbb
retf
or
fwait
scas
shl
sti
sbb
rcl
pop
scas
ss
stos
xchg
in
xor
adc
xchg
dec
imul
adc
repnz
mov
or
lahf
xchg
mov
mov
hlt
xor
js
dec
cld
cmp
dec
pop
cmc
xchg
xor
sti
pop
xor
pusha
pop
not
mov
or
adc
cdq
cld
cmp
inc
xchg
loope
pop
dec
(bad)
push
pop
sbb
ret
dec
ins
(bad)
cld
jmp
push
mov
mov
retf
ret
push
(bad)
movs
mov
test
cwde
pop
mov
fnstsw
and
shl
xchg
jecxz
movs
mov
sub
pop
js
sbb
pop
sti
scas
inc
push
lods
sbb
int
mov
mov
and
jmp
(bad)
mov
add
ret
lds
clc
xor
pop
inc
xlat
cs
jns
sahf
xchg
in
mov
stos
xor
jmp
jae
jge
push
ins
adc
xlat
mov
stos
das
sub
mov
shl
(bad)
cmp
add
fisub
pop
call
and
mov
xchg
or
or
into
es
cmc
jbe
jno
test
lea
mov
cld
dec
mov
jle
push
xchg
mov
mov
push
ficomp
fisttp
call
push
sahf
jp
imul
mov
test
fwait
out
mov
sbb
inc
repnz
inc
xchg
ss
xor
mov
xchg
addr16
adc
lahf
daa
mov
pop
adc
or
mov
iret
imul
dec
mov
add
sbb
xchg
rol
ins
ins
mov
sub
scas
call
stos
mov
sbb
push
jne
adc
xchg
mov
test
push
test
push
mov
adc
and
xor
cmp
jmp
scas
pop
or
xor
pop
or
push
ror
mov
sub
hlt
in
retf
shr
jo
lds
lea
fstp
adc
stos
and
fsqrt
data16
pop
pop
xchg
aas
ins
ror
cwde
pop
ins
lds
mov
xchg
in
aaa
mov
(bad)
sbb
push
test
add
jge
cmp
popa
sbb
jl
repnz
dec
ins
cmp
loope
in
xchg
or
mov
data16
jp
push
(bad)
fdivr
fsubrp
and
or
nop
add
cli
sub
gs
and
pop
fwait
fwait
and
add
push
sub
adc
mov
test
pop
dec
inc
push
loope
loopne
pop
mov
retf
dec
pop
test
add
push
lods
nop
or
push
dec
ret
mov
dec
fsubr
sahf
push
shl
in
shl
or
pop
inc
add
dec
lea
into
push
rol
mov
cwde
clc
sahf
test
mov
push
and
and
dec
add
daa
mov
cmp
adc
xchg
ins
dec
fwait
(bad)
lods
push
repnz
(bad)
aam
xchg
jge
push
lods
stos
mov
fsub
add
loop
ror
in
(bad)
or
pop
call
cmp
xor
std
pop
ss
ja
cmp
rcl
movs
pop
pop
mov
or
xchg
test
mov
js
pusha
loop
inc
outs
xor
jne
pop
mov
pop
cmp
jbe
push
jbe
test
and
pop
push
popf
outs
sbb
leave
call
push
hlt
psrlq
icebp
pop
mov
lds
add
add
in
add
add
add
add
add
add
add
add
and
loope
add
popa
add
add
popf
add
add
gs
pop
out
add
xchg
add
add
add
add
add
rol
add
add
add
mov
add
add
scas
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
xor
ss
sbb
or
xor
sbb
ror
jo
movs
sbb
sub
retf
fwait
enter
mov
sub
in
jno
xor
mov
out
add
adc
out
clc
mov
jne
out
inc
sahf
xor
js
sbb
sti
enter
mov
ror
sub
ror
sub
in
inc
int3
cmp
nop
cmps
into
jbe
aas
jl
jecxz
mov
pop
add
aad
jmp
or
jp
jmp
and
mov
stos
xchg
pusha
movs
jne
push
mov
lds
push
int3
sub
dec
ins
push
mov
fst
mov
mov
xor
fbstp
stos
mov
je
xor
jge
push
shl
rcl
hlt
cmps
adc
xor
fisttp
sahf
or
cmp
cmp
sbb
test
push
aaa
sbb
not
xor
lea
pop
ss
pop
jb
imul
test
nop
and
xor
and
retf
inc
call
aaa
pop
add
adc
and
push
mov
arpl
bound
imul
jb
aad
int3
sbb
ds
neg
(bad)
inc
jmp
popa
jnp
retf
es
cmps
sahf
(bad)
cmp
push
inc
call
enter
daa
rol
mov
mov
mov
sahf
cmp
xor
and
mov
or
push
imul
bound
mov
pop
lahf
ins
arpl
fidivr
cmp
mov
mov
push
sub
ret
or
in
(bad)
pop
lods
rcr
dec
cmovno
and
arpl
push
xchg
nop
mov
icebp
movs
push
dec
adc
mov
retf
imul
loop
jbe
std
jp
dec
imul
pop
stos
pop
ret
cli
jp
inc
ret
aas
nop
cmp
push
mov
inc
aad
imul
ja
and
mov
jp
sub
inc
das
cld
add
movs
sub
mov
mov
rol
jae
mov
mov
xor
add
nop
aam
ss
and
mov
jle
fs
aas
add
push
fcmovnbe
in
adc
imul
dec
call
loope
and
dec
scas
xor
mov
jb
inc
mov
rcl
adc
imul
data16
dec
jle
movlps
mov
nop
jge
rcr
aad
int
in
xor
out
inc
out
inc
aaa
or
xchg
cld
in
add
sub
test
or
hlt
adc
rcl
mov
mov
jae
cmp
push
jmp
jns
add
push
stos
aam
sub
jecxz
outs
in
test
add
push
jmp
add
das
xchg
pop
inc
sbb
adc
retf
in
or
dec
outs
jmp
xor
out
jb
inc
and
fcmovbe
pop
push
(bad)
jae
cli
xchg
test
xchg
push
and
ins
dec
enter
push
inc
jae
pop
repnz
aaa
retf
cwde
push
out
cld
or
cmc
push
dec
adc
into
in
gs
(bad)
add
mov
popf
daa
clc
xchg
jae
popa
fnsave
nop
bound
pop
movs
mov
cmp
add
pop
imul
(bad)
jmp
sahf
inc
ins
and
push
mov
inc
in
iret
dec
dec
xchg
aam
call
arpl
inc
adc
jo
out
mov
fwait
dec
jle
lahf
bound
mov
inc
sub
xor
pop
aam
add
xchg
std
sti
repz
sahf
xchg
and
add
sub
mov
xor
outs
pop
and
mov
cmp
lock
jg
fcomi
sub
jle
in
and
push
mov
jmp
pushf
sahf
mov
fidivr
leave
sub
pop
test
or
sbb
xchg
dec
ds
dec
lahf
in
pop
or
mov
ss
jb
cmp
and
cmps
dec
pop
jae
ror
inc
aaa
mov
xchg
enter
sbb
xor
and
daa
pop
xchg
pop
jg
mov
sbb
pop
call
cmp
sbb
ins
pop
imul
cmps
push
imul
clc
mov
adc
sbb
push
pop
fisttp
call
clc
idiv
repnz
js
jbe
sti
stos
dec
add
dec
mov
daa
and
mov
mov
cli
cwde
mov
clc
loop
movs
pop
cmp
xlat
adc
jmp
xchg
mov
push
dec
rcr
shl
(bad)
clc
jb
mov
and
adc
pusha
ds
in
cld
mov
das
jmp
ret
cmps
rol
arpl
inc
dec
imul
push
dec
je
retf
inc
call
add
push
leave
test
dec
imul
iret
pop
lahf
jb
or
xchg
mov
mov
or
sti
push
repz
stc
cmc
clc
pop
cmp
out
or
int
cld
ss
hlt
mov
xor
imul
mov
xor
jns
jo
add
xchg
aam
fidivr
and
pop
fs
ror
jne
loopne
jge
stos
dec
and
or
repz
push
jae
ss
pop
dec
fsubp
jle
cmp
sub
xor
mov
ds
dec
push
int
fdiv
mov
cdq
shl
hlt
js
adc
dec
aaa
into
pop
pop
sar
fidivr
jo
cdq
out
mov
pop
fmul
pushf
xor
in
out
in
div
cmp
iret
sub
mov
pop
dec
sbb
nop
cld
inc
je
into
sbb
fisttp
retf
inc
(bad)
fst
ret
dec
push
fs
and
xchg
mov
mov
imul
push
sub
dec
xor
mov
cmp
stos
inc
fprem
jb
in
out
add
data16
mov
rol
adc
mov
enter
xchg
gs
stc
sbb
(bad)
mov
cmp
pop
pop
daa
popf
arpl
adc
(bad)
std
mov
clc
jecxz
sbb
mov
rcr
out
adc
inc
dec
es
xlat
cmp
or
xchg
iret
inc
retf
push
fst
movs
sbb
cs
xor
mov
pop
xor
bound
dec
add
out
jo
imul
add
mov
adc
jl
imul
xchg
mov
data16
lock
or
mov
fldcw
xchg
sbb
popa
pop
mov
pop
lea
cdq
jmp
std
adc
mov
add
mov
sti
psraw
fild
sbb
xlat
jge
xchg
sub
cmp
mov
js
lods
repnz
cwde
mov
out
mov
adc
and
cmp
rcl
es
xor
xlat
push
fwait
mov
imul
xchg
loop
inc
daa
cli
out
cmp
ror
xchg
mov
push
icebp
adc
(bad)
jle
sub
imul
(bad)
mov
rcr
and
sbb
scas
cmp
int
add
inc
lock
les
add
pop
or
jle
aad
fsub
repz
sahf
rcl
pop
imul
jecxz
mov
sbb
fdiv
xchg
sbb
adc
jns
(bad)
test
cdq
cld
ds
fs
gs
or
iret
xor
pop
jp
retf
sbb
in
fist
je
add
sbb
pop
dec
sub
aad
sahf
ss
adc
mov
mov
mov
mov
xchg
xrstor
fsubr
jmp
les
loop
xchg
inc
sbb
arpl
mov
mov
scas
ss
mov
adc
cmp
or
adc
mov
jb
popa
cld
scas
ds
call
out
or
sub
pop
(bad)
or
jnp
sbb
mov
cmp
fsubp
mov
jo
ins
or
out
xchg
adc
clc
fmulp
pop
pop
pushf
dec
push
pop
cmp
mov
and
and
pop
push
mov
pop
mul
sub
xchg
mov
mov
mov
aas
cdq
rol
movs
sbb
ja
int3
xor
xlat
jno
into
int
inc
cmpps
pushf
adc
lahf
arpl
and
mov
mov
fidivr
sar
ins
imul
jne
ja
in
mov
arpl
xor
dec
or
or
mov
dec
jmp
cwde
shl
fwait
mov
add
sub
ss
xor
sub
sbb
enter
dec
sub
jmp
cs
and
add
push
jnp
push
adc
pop
or
jmp
mov
movs
pop
mov
xchg
adc
(bad)
mov
out
stos
out
mov
icebp
and
pusha
add
cmp
add
pop
pusha
add
sbb
dec
cwde
dec
inc
imul
sar
pop
inc
enter
std
movs
int
in
nop
jns
(bad)
data16
stc
jl
pop
xor
mov
int3
int3
gs
sub
adc
adc
push
dec
jmp
movs
mov
(bad)
mov
inc
sbb
call
dec
pop
(bad)
in
std
xor
dec
and
mov
push
loopne
pop
sub
out
add
ins
fcom
mov
mov
in
jb
movs
lods
or
imul
cdq
loopne
lock
and
xor
lods
push
in
cmps
jmp
and
push
jns
add
imul
mov
cli
jb
(bad)
sbb
psrlq
push
xchg
inc
dec
in
dec
push
dec
fidiv
pushf
clc
xor
stos
or
mov
cmp
adc
push
out
xchg
adc
inc
pop
popa
push
mov
ret
inc
mov
jne
add
loope
ret
shr
outs
in
repnz
push
outs
mov
mov
cli
sti
(bad)
xchg
sub
(bad)
retf
adc
test
and
adc
retf
jb
mov
pushf
inc
out
(bad)
push
(bad)
sbb
or
sbb
std
stos
inc
mov
push
repz
jl
rol
ficom
push
jb
add
add
add
add
add
add
add
xlat
add
jbe
mov
add
add
add
and
add
add
add
add
mov
add
add
add
add
add
mov
cmc
add
ror
add
xor
movs
push
add
add
test
add
add
popf
add
add
add
add
add
out
add
sbb
adc
cmc
add
add
add
inc
add
add
les
mov
add
add
ja
and
add
fild
add
add
and
add
add
add
iret
add
add
add
add
outs
add
add
ret
mov
add
add
add
push
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pxor
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
rol
add
add
(bad)
add
add
add
mov
mov
add
cmp
into
push
add
add
add
add
add
add
test
add
add
jns
add
aad
add
js
add
cmps
nop
mov
add
xlat
hlt
add
add
test
add
mov
jne
or
add
and
add
add
add
add
add
add
sahf
add
add
add
pop
add
dec
add
add
add
in
add
mov
add
mov
add
add
add
add
push
add
add
add
adc
add
imul
add
add
add
add
add
cli
add
pop
add
lock
repz
add
add
add
inc
imul
adc
sub
adc
xchg
gs
icebp
jno
gs
mov
inc
dec
loope
sbb
mov
mov
cmps
stc
sub
loope
into
les
pop
and
add
and
jo
sbb
add
xlat
xchg
outs
jecxz
stos
loope
cmp
or
scas
test
icebp
push
ins
mov
aas
in
in
pop
push
cdq
cs
mov
adc
iret
mov
and
lods
mov
mov
push
fld
movs
ins
mov
pop
test
(bad)
inc
jmp
sbb
scas
ss
scas
pop
outs
mov
mov
into
add
ins
cmp
fld
pop
retf
mov
lea
mov
fs
dec
sbb
rcl
mov
mov
jne
stc
sahf
leave
sbb
test
fxch
mov
pop
icebp
sub
call
inc
test
push
dec
xor
int3
(bad)
movs
sub
jns
in
xchg
frstor
or
(bad)
mov
sub
test
call
cmps
pop
mov
jmp
xchg
or
push
div
xchg
out
fcmovu
js
nop
fnstcw
mov
je
lock
fwait
cmps
retf
jmp
add
pop
inc
sub
(bad)
aam
or
ss
sub
shl
lea
inc
dec
mov
xchg
sub
inc
jmp
lds
mov
mov
push
mov
mov
mov
cdq
fwait
and
mov
mov
fstp
fucomi
enter
cli
xor
adc
pop
add
xchg
pop
and
(bad)
ror
xchg
mov
arpl
(bad)
out
mov
int
out
push
lahf
inc
pop
add
add
push
adc
push
ror
iret
movs
or
imul
mov
lds
xchg
adc
lds
js
jl
sub
movs
xchg
push
add
sub
shl
fdivr
mov
fs
xchg
adc
fnstcw
sbb
aaa
adc
pusha
jmp
fdivr
loope
sbb
in
mov
out
jge
(bad)
in
nop
sub
push
push
movs
repz
mov
xor
gs
rol
lock
dec
rcl
mov
repz
dec
mov
mov
inc
ja
mov
in
pop
sbb
test
jne
or
mov
xchg
fdiv
les
retf
mov
add
lds
test
fucomi
es
ins
test
outs
(bad)
dec
or
or
arpl
loop
movs
ins
or
je
stc
xor
mov
rcr
movs
push
or
arpl
into
xchg
inc
xchg
vmovmskps
scas
pop
sahf
dec
ret
rol
xor
sbb
xor
cld
iret
pop
pop
cmp
xlat
sub
sbb
push
lds
add
and
mov
push
clc
mov
xchg
jle
rol
lods
mov
and
out
lock
xchg
mov
stos
add
aad
ins
outs
jecxz
push
aas
ret
sub
xchg
(bad)
lahf
add
rol
jle
and
xchg
pop
je
jb
or
jmp
mov
std
pop
sbb
mov
(bad)
jp
nop
sbb
out
stos
rcr
push
dec
outs
push
push
test
sahf
test
mov
aam
aaa
pusha
and
ins
bound
push
movs
inc
inc
and
sub
mov
frstor
push
out
dec
test
sub
pop
and
test
and
xchg
cmp
(bad)
rcr
ss
imul
pusha
jp
stc
jno
xor
repnz
loope
rol
mov
int
cmps
aad
leave
inc
pop
inc
jo
xchg
cmps
sar
dec
and
iret
es
push
inc
xchg
gs
loop
mov
leave
rcr
mov
adc
sub
inc
xchg
out
mov
sbb
imul
popf
mov
sahf
pushf
out
bound
sub
adc
xor
sti
in
jge
lds
aas
arpl
jbe
jmp
sbb
mov
xor
pop
mov
xchg
push
mov
dec
or
jmp
int
dec
cmp
mov
jge
mov
jbe
enter
dec
sahf
and
jmp
push
icebp
jmp
pop
xor
js
push
mov
(bad)
sub
std
add
dec
mov
call
xchg
dec
xchg
(bad)
xor
aas
mov
rcl
into
or
cld
adc
(bad)
xor
div
push
cdq
push
xchg
dec
dec
and
retf
pop
xor
cli
mov
push
jmp
xlat
mov
shl
(bad)
pop
sub
movs
xor
rol
ins
or
xchg
lods
dec
sbb
sahf
mov
push
mov
pop
inc
push
cmps
(bad)
lock
fstp
cli
jb
in
loopne
sub
push
sahf
xchg
mov
sub
sub
or
and
jne
jle
and
(bad)
pop
cld
aas
or
add
push
das
stos
out
push
jne
sbb
mov
push
dec
gs
(bad)
fnsave
repnz
les
pop
fdiv
mov
fidivr
mov
xor
(bad)
jbe
test
ss
inc
aaa
int
mov
xchg
pusha
(bad)
scas
pop
push
push
sub
xor
xlat
jle
cmp
mov
pushf
inc
test
imul
rol
out
or
mov
mov
adc
and
xchg
jae
xor
mov
sar
loopne
jbe
jno
sti
push
imul
das
cdq
jne
mov
nop
out
scas
jnp
push
or
xor
cmps
sbb
xchg
push
mov
ret
pusha
dec
push
fcmovbe
sbb
adc
iret
push
adc
hlt
cmp
retf
push
iret
out
inc
rcl
hlt
sub
sbb
in
shr
hlt
mov
mov
fidivr
test
push
jg
jl
inc
fwait
leave
cmp
rcr
inc
lods
xchg
xor
stos
lahf
stos
jmp
sub
inc
adc
cmp
rcl
loope
imul
sub
mov
add
repnz
jp
lods
sbb
mul
clc
dec
sbb
ror
idiv
sub
adc
(bad)
push
mov
popf
add
adc
pop
and
popf
jl
mov
mov
test
(bad)
mov
jne
popf
xchg
pop
push
push
in
mov
nop
(bad)
and
pop
push
ret
dec
int
out
in
inc
pop
stc
push
pop
sub
mov
mov
repnz
je
fistp
popa
or
(bad)
(bad)
add
xchg
sub
les
(bad)
sbb
dec
xor
pop
call
dec
cdq
hlt
fwait
sub
mov
push
addr16
mov
add
test
out
das
xor
scas
mov
jg
push
jg
push
pop
jno
outs
ins
mov
icebp
fs
ja
movs
adc
jecxz
icebp
repz
(bad)
dec
or
test
fld
dec
xor
aad
inc
or
and
or
repnz
leave
xchg
mov
push
sbb
mov
xchg
popf
mov
push
adc
jl
pop
sbb
sbb
jmp
mov
out
sub
adc
ja
add
(bad)
pusha
dec
xor
push
pop
jge
test
fcomp
or
scas
sbb
shr
pusha
and
inc
mov
sbb
cmp
cmps
cmp
in
jbe
pop
jae
scas
mov
imul
jo
call
xlat
das
aam
movs
xchg
mov
sbb
(bad)
jo
scas
es
mov
(bad)
sbb
or
dec
pop
dec
mov
es
mov
push
jb
cmp
cld
and
stc
scas
xchg
jg
fisubr
ins
arpl
retf
lock
xchg
pop
xor
cli
xor
sub
into
fmul
mul
cmp
jp
xor
out
lea
push
mov
lods
jo
mov
out
sub
loop
sbb
aad
adc
sbb
add
mov
and
loopne
or
inc
outs
mov
inc
in
sbb
out
sahf
inc
into
push
repz
cmc
cmp
int
test
push
cmp
and
in
ins
jbe
mov
rcr
mov
adc
pop
addr16
cmc
push
inc
sub
adc
(bad)
mov
not
hlt
xchg
inc
push
int
mov
les
(bad)
mov
dec
add
aad
and
in
cld
aam
das
in
push
dec
pop
adc
cmp
je
mov
sar
sti
loope
sbb
mov
push
imul
jae
push
adc
dec
mov
or
imul
(bad)
je
mov
push
push
mov
xor
cmp
bound
dec
clc
mov
xchg
jo
dec
ja
xchg
fld
iret
(bad)
lahf
and
sbb
fld
clc
fisttp
mov
scas
ret
call
ror
out
inc
or
jnp
loopne
xor
je
loope
push
stc
retf
imul
push
imul
jno
fcomp
push
lock
cmp
js
outs
xchg
or
int3
mov
ror
stos
fimul
jmp
jmp
stos
stc
xchg
outs
jmp
cmps
int3
fwait
adc
sti
leave
sub
adc
mov
sbb
and
add
out
call
xor
and
shl
xchg
out
mov
das
sub
lods
pop
fldcw
test
sub
cdq
cs
add
enter
cld
xchg
int
cmc
daa
push
jmp
in
pusha
js
movs
sub
ja
movs
cmps
cwde
sbb
bound
dec
pop
dec
fnsave
mov
xchg
in
test
and
push
sbb
stos
push
das
pop
int
fisttp
jecxz
dec
mov
call
arpl
xchg
fbstp
xor
mov
je
xchg
sar
add
(bad)
repz
or
jle
sbb
mov
sub
movs
dec
std
ds
pop
mov
dec
add
rcl
sub
or
test
jle
xchg
xchg
repz
mov
dec
sub
ins
sub
sub
sub
mov
add
add
adc
add
add
add
add
add
sub
add
mov
add
add
push
add
add
sub
add
add
clc
add
add
cmp
add
loopne
add
add
inc
add
add
mov
add
fs
sldt
add
add
xchg
add
add
add
adc
add
add
add
rol
add
add
js
add
test
add
add
mov
add
out
add
add
add
ret
add
add
add
mov
add
sbb
and
cwde
cld
push
fisub
pusha
cli
jno
call
ds
pop
(bad)
out
pop
fisub
arpl
xor
(bad)
mov
and
imul
xchg
lea
mov
(bad)
out
xor
and
xor
sbb
push
lea
dec
enter
mov
jb
add
pop
pop
cmc
out
hlt
mov
hlt
xchg
js
jg
adc
pop
sbb
arpl
scas
dec
dec
or
out
dec
iret
arpl
or
xchg
inc
xor
pushf
gs
adc
sahf
call
dec
adc
into
aad
push
fistp
test
fstp
dec
dec
leave
dec
xor
cmp
pop
cmovnp
arpl
aas
jo
add
push
int
cmc
cmp
shl
dec
aad
and
or
(bad)
jmp
fist
retf
or
mov
push
adc
int
push
pop
shr
and
ins
out
or
cmp
addr16
test
jp
pop
mov
push
xchg
sub
dec
adc
out
ret
push
test
mov
pop
cmp
sbb
outs
push
loope
and
out
mov
pop
inc
adc
ror
(bad)
xchg
inc
mov
test
leave
in
add
xor
call
int
xchg
std
and
inc
movs
dec
mov
or
enter
clc
pop
(bad)
ins
add
xor
sub
mov
push
iret
js
ret
ret
test
ins
movs
dec
cmp
pusha
cmp
jmp
fs
jmp
and
arpl
inc
or
push
xchg
inc
add
push
int
loope
push
xor
lods
or
inc
jmp
ret
inc
mov
jo
pop
jb
and
mov
loop
cmc
sub
sbb
nop
pop
movs
cld
pusha
push
dec
pusha
jae
les
scas
mov
(bad)
cmp
ins
in
or
mov
and
fdivr
mov
sti
int3
or
fdiv
xchg
dec
push
jae
add
out
je
in
push
lea
fnsave
icebp
sar
fsub
retf
pop
pop
imul
in
call
mov
addr16
repz
xor
jnp
fcomp
scas
jmp
xchg
jmp
and
add
(bad)
ret
xor
stos
ins
pop
out
add
pop
in
adc
push
add
jecxz
addr16
aam
enter
push
test
int3
jno
cli
mov
jo
cmp
mov
mov
arpl
and
xchg
in
movs
aas
mov
test
adc
inc
(bad)
jg
ins
or
(bad)
lahf
jbe
popf
inc
xchg
add
push
arpl
sbb
dec
pop
fild
pop
lea
in
lods
popa
stos
mov
lea
bound
lock
sub
addr16
and
inc
mov
push
js
hlt
mov
push
addr16
test
xor
jnp
sar
and
test
retf
dec
mov
xchg
cmc
push
fsubr
adc
sbb
push
push
scas
push
mov
or
push
js
test
mov
xchg
adc
out
rol
xchg
mov
data16
fcom
aad
and
mov
pop
outs
and
mov
adc
adc
pop
stos
mul
mov
sub
fnstenv
mov
xchg
push
push
movs
into
push
into
xchg
jae
jg
add
cmp
std
mov
jmp
push
rol
les
xor
bound
dec
cmp
pop
sbb
jmp
ror
push
inc
fbld
add
rol
jae
call
jns
mov
xlat
loope
in
push
mov
stos
shr
jno
xchg
xor
sub
dec
mov
div
lock
idiv
sbb
fwait
int
inc
mov
push
sbb
loop
lock
jl
mov
or
movs
xor
xor
push
and
sbb
(bad)
push
imul
sbb
(bad)
addr16
sub
and
cdq
or
mov
fdivr
sbb
aam
movs
mov
and
hlt
mov
or
mov
xchg
rol
pop
inc
sbb
retf
lahf
push
dec
fwait
mov
mov
inc
jle
ds
inc
(bad)
lds
les
inc
stos
mov
fwait
dec
and
ja
test
xor
movs
nop
not
fdiv
xchg
lea
add
call
call
jnp
push
addr16
daa
sub
ins
loope
mov
fsub
pop
inc
cli
in
cmp
shl
scas
cmps
(bad)
cmc
push
(bad)
mov
ficomp
(bad)
int3
dec
div
outs
push
cmp
cld
jp
jecxz
in
stos
push
mov
push
pop
popf
stos
dec
cmp
clc
xchg
arpl
fist
std
mov
mov
sar
xor
fwait
xchg
xor
pop
cmp
ds
jb
sti
dec
popf
das
mov
stc
or
or
mov
push
cmps
fs
mov
lahf
inc
and
jp
sbb
mov
fist
dec
loope
mov
bound
mov
test
xchg
repz
jge
jmp
adc
addr16
cmp
loop
mov
loopne
sahf
loop
out
xchg
mov
hlt
fidiv
and
gs
dec
scas
in
mov
xchg
(bad)
lods
fcmovnu
push
cld
push
outs
sub
cmc
xchg
or
push
das
mov
jg
add
sbb
or
cli
inc
(bad)
cdq
and
mov
stc
std
mov
test
jge
cmp
(bad)
jnp
leave
std
dec
dec
cmp
add
push
mov
(bad)
mov
ins
sbb
jmp
(bad)
push
sub
or
stc
or
imul
(bad)
dec
int3
xor
js
or
jle
sbb
adc
mov
cld
xchg
push
and
and
push
push
add
cmp
and
xchg
xchg
data16
leave
movs
lea
loope
mov
pop
dec
gs
mov
test
jae
dec
cs
aad
scas
aas
xchg
aaa
outs
xchg
mov
inc
inc
aas
xchg
leave
fmul
cmc
sbb
cmp
inc
repz
push
jbe
popf
xchg
sub
xchg
fnstsw
scas
mov
jmp
mov
xchg
loopne
xor
jbe
mov
jne
jmp
(bad)
push
xchg
cdq
fmul
rol
mov
mov
push
(bad)
and
clc
inc
push
scas
push
aas
sub
or
mov
or
imul
pop
ficom
mov
cmp
jg
jp
(bad)
mov
imul
sbb
pop
adc
mov
mov
lods
dec
or
pop
jb
pop
gs
imul
xchg
inc
data16
pop
mov
and
jge
loop
ins
mov
jbe
inc
jb
lock
call
mov
jmp
sub
xlat
lahf
adc
fild
jo
fistp
dec
mov
dec
ins
jbe
fidiv
loop
std
xor
xchg
fistp
sbb
sahf
push
cmp
les
push
sbb
dec
pop
push
loopne
mov
scas
das
in
adc
sub
mov
(bad)
cmc
xchg
inc
retf
jo
and
add
lods
mov
mov
xor
retf
ds
gs
scas
mov
inc
in
gs
outs
jl
xor
mov
cdq
xchg
push
sbb
(bad)
mov
int3
sbb
mov
sbb
add
mov
add
cmp
sahf
jbe
mov
stos
rcl
rcr
jo
out
inc
mov
inc
fwait
jmp
mov
mov
lods
fst
stos
cld
jecxz
out
retf
enter
xor
mov
push
cdq
add
mov
das
cmps
cli
pop
mov
fistp
cmps
sub
sbb
or
cmp
sub
and
mov
sub
out
sar
ins
not
adc
(bad)
cmp
cmp
daa
jo
aaa
jge
and
shr
inc
pushw
push
fst
shr
xor
sub
mov
inc
in
rcr
inc
and
cmp
cmp
sub
lahf
leave
sbb
cmp
inc
js
cs
jge
clc
addr16
ret
dec
adc
mov
dec
int3
dec
pop
mov
enter
adc
mov
push
mov
sbb
mov
lea
pop
icebp
mov
mul
stos
sub
push
mov
xor
out
cmp
inc
sub
(bad)
or
pusha
xchg
cs
xchg
test
outs
fisttp
xor
stc
jne
push
mov
add
push
inc
dec
(bad)
sub
or
rcr
xor
mov
mov
cmps
cmp
dec
pop
ficom
pop
mov
std
push
retf
loopne
rol
adc
mov
ret
sbb
mov
rcl
fnstcw
(bad)
jbe
(bad)
sti
mov
sub
std
pop
bound
sbb
xchg
and
mov
nop
outs
cmp
jmp
add
out
mov
push
mov
inc
mov
sub
ins
lea
cdq
or
std
stos
cmp
sub
cmp
ja
mov
mul
out
jo
sbb
adc
xchg
fist
test
pop
dec
fwait
ret
retf
aam
adc
(bad)
dec
xor
mov
and
je
mov
pop
retf
mov
or
(bad)
imul
and
or
jmp
xor
dec
fisubr
dec
out
sbb
sub
cmps
lea
adc
push
and
pusha
pop
aad
sbb
mov
pop
push
shl
inc
loope
sbb
arpl
pop
pop
dec
mov
shl
sub
icebp
jg
fidiv
sti
dec
mov
push
adc
mov
mov
adc
data16
outs
das
rcr
mov
bound
dec
aas
daa
xchg
and
push
jle
add
enter
jo
out
dec
sbb
push
arpl
cs
in
pusha
sub
xchg
lahf
mov
sahf
pop
sbb
xchg
and
std
jg
pop
add
jmp
xchg
and
xchg
add
das
pop
vmovaps
jecxz
jns
jns
lahf
retf
or
lds
aam
scas
call
jnp
(bad)
mov
or
inc
ds
addr16
outs
mov
push
pop
sbb
add
add
add
add
add
add
add
add
add
pop
add
add
outs
add
add
inc
loope
mov
fld
add
add
add
add
add
fild
add
add
adc
add
add
add
ja
add
jnp
add
add
add
inc
in
add
add
add
add
sub
inc
add
add
add
add
push
add
stos
add
add
add
add
int3
add
add
sbb
push
mov
add
add
add
sub
je
dec
and
cmps
cmp
push
enter
imul
das
xchg
push
aas
xchg
loopne
retf
(bad)
int
out
sub
jns
mov
(bad)
mov
sbb
sbb
and
inc
test
and
cmps
lods
retf
(bad)
xchg
outs
in
loopne
cmp
push
daa
xor
push
fist
ficom
mov
out
fistp
rol
mov
jmp
xchg
dec
call
test
js
mul
and
gs
lock
call
call
popf
sbb
das
and
mov
jne
sbb
jle
pop
cmps
imul
mov
jne
test
cmp
pop
je
fnsave
jmp
push
ins
into
inc
mov
jmp
imul
je
mov
into
inc
and
or
adc
ja
stos
in
ret
in
shl
xor
fsub
cli
jp
inc
sub
adc
jnp
int3
jmp
xchg
cs
dec
cmc
jecxz
inc
sub
pop
push
shr
pushf
mov
push
int
mov
out
repnz
arpl
(bad)
sbb
mov
cmp
fldenv
inc
lock
dec
gs
shl
hlt
push
cdq
dec
mov
stc
in
or
movs
cmp
outs
push
cmp
sar
xor
xchg
sbb
retf
mov
xor
xchg
jno
sub
push
cli
imul
adc
idiv
popf
rol
push
jge
ja
ds
movs
mov
fs
mov
mov
arpl
sub
xor
fidiv
hlt
aaa
fwait
dec
out
imul
pop
xchg
pop
imul
es
pop
mov
aad
pop
mov
lock
sbb
(bad)
jae
mov
fbld
cmc
push
test
cld
xor
cmp
mov
mov
fwait
call
pop
fwait
push
push
fidiv
jmp
adc
out
(bad)
cmps
pop
mov
xchg
aas
fnstsw
add
movs
and
xchg
shl
inc
cmp
sbb
adc
pusha
adc
inc
enter
repz
loopne
rcl
out
cli
mov
xchg
push
mov
xor
pop
js
xchg
mov
xor
xchg
iret
(bad)
rol
jb
cmp
jle
pushf
sbb
mov
mov
jge
fmul
enter
jmp
sub
aad
imul
sub
pop
shl
(bad)
jbe
sub
lock
mov
cld
(bad)
ror
xchg
and
daa
pop
in
mov
xchg
pop
shl
inc
ins
sub
jno
into
neg
icebp
cld
pop
pop
sub
mov
mov
fidivr
push
bound
xchg
jne
enter
add
or
jbe
pop
shl
movs
or
scas
cmc
pop
inc
bound
ret
dec
outs
mov
and
mov
scas
pop
ja
aam
es
push
sbb
dec
(bad)
in
fist
jnp
inc
push
in
xchg
mov
add
std
ror
add
add
rcr
cmc
rcl
mov
or
bnd
adc
jae
sti
mov
data16
(bad)
shl
cld
addr16
push
das
fwait
daa
shl
in
jno
arpl
mov
xchg
jg
jmp
or
js
rol
popa
fist
movs
inc
sub
fbstp
pop
out
jo
outs
adc
sub
and
das
lods
cmps
(bad)
leave
dec
add
ss
dec
(bad)
popa
jl
jl
and
adc
sub
add
xchg
jae
push
pop
ins
pop
and
ss
mov
imul
fdivr
xchg
pusha
xchg
hlt
dec
or
iret
fldcw
mov
push
leave
call
stos
setns
mov
mov
or
into
or
int3
inc
rcr
push
jmp
retf
push
mov
cli
xlat
fcmovnbe
arpl
fs
popa
sbb
mov
xchg
mov
adc
fild
jmp
sub
xor
stos
push
or
mov
pushf
adc
(bad)
movs
add
fstp
int
xlat
mov
mov
cmps
repnz
pop
push
mov
mov
sahf
clc
fisubr
push
push
sub
js
retf
mov
add
mov
clc
push
(bad)
fdivr
pop
jge
inc
pushf
popf
shr
pushf
push
mov
call
xor
out
fsub
cld
and
mov
sub
scas
fs
or
mov
daa
push
scas
dec
mov
iret
jmp
andnps
repnz
loopne
and
mov
repz
in
gs
pushf
xor
into
icebp
sbb
push
setae
inc
cli
popa
pop
ja
jnp
test
fwait
adc
ss
mov
jle
adc
iret
push
push
ja
nop
test
arpl
jmp
call
add
mov
enter
jo
mov
rcl
xor
(bad)
pop
jp
repnz
mov
fmul
cdq
fisub
dec
(bad)
clc
imul
cmp
lods
inc
add
xor
mov
stos
jge
or
push
cmc
stos
lea
retf
pop
mov
dec
aaa
pop
(bad)
mov
mov
add
xchg
aad
dec
dec
mov
pop
daa
movs
pusha
pushf
jmp
xlat
jmp
(bad)
push
adc
xchg
push
xchg
in
sqrtps
mov
xor
jo
push
sub
addr16
ret
adc
aad
pop
xchg
ins
rcl
jo
mov
(bad)
(bad)
(bad)
fnsave
outs
out
les
je
pop
ret
inc
sub
ins
loope
xor
dec
push
and
xchg
mov
mov
pop
push
cmp
dec
jp
ins
cmp
je
pop
enter
adc
mov
mov
mov
inc
aas
xchg
sti
retf
mov
sub
mov
in
mov
push
or
pop
fld
stc
ror
jp
pop
or
or
push
mov
fnstcw
jns
mov
idiv
pop
popa
mov
test
jo
cli
dec
scas
in
inc
in
loopne
and
hlt
lods
mov
sub
mov
std
lds
jb
push
push
cli
mov
dec
adc
call
cli
xor
dec
cdq
ss
icebp
add
dec
mov
(bad)
data16
repz
jne
fcom
es
(bad)
cld
inc
xor
loope
xchg
cli
jp
mov
cdq
and
cwde
js
pop
in
adc
mov
std
fdiv
push
xchg
cmc
xor
out
or
ss
fadd
out
mov
and
rol
dec
mov
in
lock
mov
jmp
cld
xlat
push
(bad)
xchg
lds
pop
and
push
inc
test
pop
xchg
jmp
into
cmp
hlt
hlt
jo
inc
cmp
and
or
dec
inc
ja
stos
fwait
int3
icebp
outs
sub
clc
mov
(bad)
sti
cmp
sti
cmps
add
mov
test
call
shl
mov
out
pop
test
or
and
imul
lods
sbb
xor
mov
retf
dec
nop
mov
sbb
inc
icebp
sub
sub
mov
mov
xchg
fisub
loopne
push
loop
icebp
mov
int3
push
cmps
mov
and
xchg
and
jl
fdiv
push
ret
push
not
jle
lds
test
pop
xor
add
cmp
jg
cmp
mov
dec
sub
imul
jmp
dec
in
mov
iret
cmp
mov
jae
mov
mov
dec
xchg
inc
(bad)
dec
jecxz
shr
ins
inc
sub
lahf
stos
mov
ret
inc
mov
scas
push
int3
int
and
(bad)
nop
ror
sub
std
das
inc
scas
retf
sbb
xchg
pushf
mov
sti
push
mov
add
sar
adc
lea
pop
dec
fs
fisub
into
mov
arpl
outs
and
sbb
pop
xchg
test
sbb
out
fcmovb
xor
inc
sbb
cmp
in
and
cmps
out
pop
add
pop
jmp
xchg
(bad)
mov
add
sbb
ret
les
adc
cmps
test
push
inc
dec
mov
sub
cmp
jne
sahf
lahf
cmp
or
clc
ror
pop
pushf
dec
adc
dec
push
mov
xchg
dec
fisttp
or
jo
(bad)
pop
fisttp
shr
out
cwde
push
out
cmp
mov
call
xchg
enter
add
cmp
mov
mov
(bad)
jmp
rcl
pop
pop
jg
int3
lock
jb
dec
sub
adc
sub
xor
jnp
jg
inc
lds
aaa
out
inc
mov
test
lock
pop
out
jne
out
out
fnstsw
adc
sbb
pop
(bad)
inc
je
add
fcomip
data16
mov
pop
popf
push
out
inc
jl
xchg
repnz
xchg
jae
mov
mov
fiadd
in
xor
push
or
mov
pop
sbb
cmp
and
mov
movs
add
jl
xchg
(bad)
jmp
push
stc
sahf
push
sbb
pop
xor
mov
mov
je
mov
lods
xchg
or
ja
dec
mov
pop
xchg
icebp
lahf
cmps
dec
(bad)
movs
out
das
cmp
cwde
add
jns
jp
in
(bad)
int3
test
pop
int
push
inc
xchg
xchg
pop
sub
mov
mov
xor
rol
hlt
dec
es
jb
and
push
adc
xor
out
outs
stos
fwait
jo
fld
or
mov
xchg
rcr
data16
mov
rcr
mov
pop
push
not
xor
sub
ds
or
sbb
daa
xchg
pop
cwde
adc
in
inc
pusha
ds
xchg
ja
or
inc
mov
mov
lea
push
test
push
aas
pop
outs
test
pusha
out
mov
xor
push
sub
and
jmp
sub
imul
test
out
push
lahf
dec
sti
imul
sub
loopne
mov
pop
inc
xlat
test
cmp
loope
sbb
jo
mov
shl
push
outs
and
mov
retf
lock
xchg
add
add
xor
add
add
add
add
sub
add
add
add
add
add
add
cmp
add
add
shl
add
add
add
cmc
add
mov
add
add
add
add
add
add
add
in
add
add
mov
add
add
add
add
add
adc
adc
in
add
add
add
mov
add
add
add
add
rol
mov
add
add
push
add
add
add
add
add
add
add
imul
add
add
add
add
adc
add
rol
lods
add
add
mov
add
add
add
add
add
add
add
add
add
add
ins
mov
add
add
imul
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
cmps
add
add
add
les
add
add
add
push
add
add
add
add
pusha
mov
jmp
arpl
(bad)
pop
fwait
dec
push
sbb
lods
sbb
mov
mov
dec
fild
jp
cmp
test
popa
adc
ret
push
int
or
cs
test
leave
cmps
addr16
mov
push
fwait
cld
ret
mov
or
push
aad
add
out
sbb
stc
adc
or
inc
push
mov
sbb
lea
xor
jmp
lods
es
les
push
int3
add
retf
jnp
icebp
sub
leave
xlat
adc
mov
pop
lds
retf
repz
pop
shl
or
push
in
hlt
jp
or
mov
pmulhuw
fistp
sub
xor
cld
cmp
dec
jmp
fild
jne
addr16
pop
xchg
out
les
aad
xor
repnz
in
sbb
loop
js
mov
or
sbb
adc
lods
dec
cld
shl
and
cmps
test
push
test
shl
std
add
(bad)
aaa
jo
lock
sbb
pop
jl
outs
inc
aam
fdivp
loope
or
push
lea
lods
pop
xor
bound
mov
cwde
sub
xchg
adc
sub
sbb
jb
adc
sub
imul
stc
iret
or
addr16
fwait
pop
sar
imul
pop
imul
xchg
ret
test
pop
sbb
mov
fwait
cs
mov
sub
pushf
pushf
sbb
inc
retf
(bad)
pusha
in
mov
and
xchg
sbb
push
cdq
cs
cmovl
stos
inc
fcom
cmp
test
aaa
mov
mov
mov
test
jno
in
ror
add
hlt
clc
dec
add
cmc
pop
xchg
mov
test
ret
mov
ja
or
lahf
sbb
mov
pop
or
xchg
xchg
add
outs
fstp
jnp
bound
and
mov
cmp
out
dec
xlat
push
addr16
adc
mov
lock
inc
test
lods
adc
sub
sub
or
adc
xchg
xor
cmc
pop
(bad)
js
push
shr
popf
push
pop
dec
push
pmuludq
dec
inc
cld
inc
loope
enter
dec
aas
int
in
(bad)
jmp
adc
lds
fldenv
out
jmp
xchg
push
push
test
iret
mov
aam
jb
adc
cli
jnp
retf
xchg
xchg
xchg
mov
push
mov
leave
jnp
xlat
mov
jle
mov
ret
push
jno
mov
(bad)
sbb
das
xchg
stc
push
in
xchg
sbb
mov
(bad)
fistp
mov
fild
jmp
or
cmp
test
jmp
xchg
mov
mov
mov
inc
div
out
(bad)
sbb
push
out
out
mov
stos
push
int
mov
and
jp
call
test
or
mov
stc
pop
or
in
outs
iret
add
mov
push
cmp
jmp
mov
(bad)
add
dec
inc
cmps
mov
jne
xor
mov
inc
pop
inc
mov
std
inc
cmc
xchg
xor
int3
sbb
sbb
sbb
in
call
xchg
and
sar
ret
push
cmp
lahf
fnstcw
out
mov
aas
outs
retf
mov
push
ret
aad
not
aad
das
xlat
xchg
loope
or
push
and
icebp
sbb
dec
push
push
cmp
xchg
xchg
mov
adc
std
cmp
pop
jge
iret
cli
ret
(bad)
cld
scas
ins
aad
sti
jecxz
dec
pop
add
inc
cmp
push
std
cdq
(bad)
push
xchg
mov
sbb
or
add
xchg
sbb
xchg
inc
out
arpl
sbb
push
mov
mov
jle
jecxz
inc
dec
add
adc
jecxz
pop
sahf
sbb
dec
out
rcr
out
mov
jle
mov
loopne
rcl
sbb
cli
nop
add
sbb
and
js
inc
cs
cmc
xlat
jae
add
xor
jnp
loopne
dec
out
jp
or
inc
test
mov
and
or
cmp
in
test
cdq
mov
cmp
jne
hlt
dec
or
mov
out
adc
add
hlt
jg
addr16
in
stc
sub
lahf
jp
xor
es
cmc
shl
aad
test
or
push
jne
fwait
in
in
pop
aam
pop
popa
push
jb
mov
pop
out
and
mov
push
or
popf
jns
ficomp
fiadd
mov
fmul
in
fist
jmp
ret
or
sar
iret
dec
add
pop
sub
lods
ror
adc
sub
push
mov
lds
xchg
mov
or
xlat
xor
inc
add
stos
retf
mov
jmp
das
cmp
ficom
or
adc
jo
xchg
and
test
fdivr
loopne
add
xlat
cmp
jge
pop
hlt
ins
lock
repz
pop
imul
data16
imul
daa
lds
(bad)
sbb
add
push
stc
push
add
push
xchg
mov
test
mov
mov
cmp
push
in
scas
cli
lods
jmp
in
popf
inc
mov
(bad)
stc
mov
in
mov
stc
das
scas
push
cmp
repnz
jl
add
sub
cmc
xchg
xor
out
bound
sbb
pop
mov
inc
movs
mov
icebp
xor
jae
cmps
push
retf
add
adc
clc
mov
mov
(bad)
ins
test
mov
pop
dec
jmp
in
(bad)
sahf
mov
shl
rcl
dec
fmul
and
sub
psubb
pop
retf
mov
mov
iret
jl
mov
fsubr
shr
adc
sbb
sub
or
fisttp
aad
aaa
jmp
add
inc
jo
out
inc
clc
add
popf
sub
or
or
dec
mov
cli
test
loope
inc
(bad)
dec
xchg
push
mov
daa
sti
addr16
fadd
pop
pushf
aaa
jnp
push
sub
add
jmp
out
pop
jge
mov
outs
or
or
mov
repnz
das
fiadd
mov
sbb
fnstcw
jl
sbb
xchg
cmc
stos
mov
fwait
iret
test
sbb
loop
out
sbb
das
sub
loop
call
push
out
mov
sbb
jl
dec
js
add
outs
lock
inc
leave
and
enter
lods
mov
test
dec
jne
dec
sahf
movs
jle
sbb
and
sub
add
adc
sbb
iret
fidivr
mov
xor
lods
push
cmp
cmps
pop
xchg
leave
mov
(bad)
fadd
mov
mov
pop
lods
int3
pop
scas
adc
test
mov
mov
cmp
loopne
clc
cmp
or
in
or
clc
lods
jmp
lock
jbe
cmp
adc
iret
je
mov
(bad)
setle
(bad)
icebp
jns
push
out
push
sbb
int3
sub
call
es
stos
add
js
lock
ds
mov
hlt
nop
xor
push
sbb
and
lock
mul
inc
mov
lea
je
ja
xor
sbb
lods
sbb
imul
sbb
adc
push
mov
sti
xchg
out
inc
enter
rcr
test
pop
dec
fist
jns
test
stos
in
dec
push
push
jecxz
ror
or
cwde
addr16
mov
jmp
push
xchg
imul
adc
cld
dec
sub
(bad)
out
push
addr16
ds
jb
int3
and
and
(bad)
pop
mov
ja
psllq
push
sar
fucompp
xchg
popf
xor
cli
std
in
les
data16
(bad)
fwait
out
sar
mov
inc
mov
cs
sub
pop
inc
int
shr
(bad)
leave
out
mov
icebp
mov
cmps
shl
pushf
fsubr
int3
jle
aas
jg
and
repnz
movs
fnsave
mov
(bad)
outs
xlat
cmp
into
setns
pushf
mov
(bad)
inc
dec
clc
sahf
or
or
and
movs
je
push
adc
rcl
adc
(bad)
in
xor
cld
ins
jo
test
aas
push
dec
mov
cmp
retf
jo
mov
push
jne
call
push
or
jecxz
sbb
jbe
cmp
pop
dec
xor
mov
lock
je
scas
lahf
repnz
adc
xchg
and
scas
scas
popf
sub
iret
sub
aad
int
xchg
mov
pusha
jecxz
arpl
test
aaa
cmp
jle
scas
icebp
jb
outs
or
xor
fisttp
push
and
jg
in
pop
pop
jbe
inc
adc
in
fwait
cmp
scas
(bad)
jno
out
addr16
add
cmp
pushf
test
adc
mov
call
mov
fcomp
pop
mov
(bad)
in
pop
pop
mul
and
xor
dec
fmul
mov
jecxz
repnz
sub
sub
xor
cmps
ss
dec
ficomp
fsubr
clc
loope
ret
mov
xor
mov
xor
cmp
pop
fisubr
call
sub
iret
imul
retf
aad
stos
(bad)
xor
iret
pop
push
popa
lock
jecxz
cli
loopne
std
dec
sbb
push
(bad)
mov
sti
sbb
jmp
jl
clc
std
sbb
icebp
push
je
sar
dec
jle
in
add
rcl
loope
jmp
in
icebp
or
and
aas
sbb
shl
stc
mov
imul
fst
push
or
jne
cmp
mov
push
xor
push
aam
or
clc
and
(bad)
int
xor
cs
or
stc
sbb
mov
rol
mov
fisttp
or
jno
mov
ret
enter
mov
(bad)
pusha
cmp
call
sahf
cli
add
inc
add
leave
arpl
dec
fsubr
sbb
push
mov
sahf
and
in
xchg
lds
dec
dec
xlat
test
xor
jbe
dec
mov
inc
in
test
and
inc
retf
mov
loopne
sbb
loope
retf
sub
stc
(bad)
dec
push
int
ss
inc
je
xor
add
mov
sahf
out
xchg
test
call
jae
sbb
and
sbb
mov
das
dec
inc
or
mov
popf
mov
adc
inc
and
mov
add
test
shl
push
jecxz
add
mov
and
dec
push
pop
call
es
sar
adc
shl
mov
ds
dec
dec
mov
sbb
es
das
push
sti
(bad)
mov
pop
sbb
jbe
popa
in
lock
jns
test
jl
call
pop
add
xchg
jp
lahf
mov
aaa
cmc
push
cli
jg
mov
adc
push
fcomp
in
imul
icebp
out
repz
out
xor
or
scas
jne
pop
sti
cmp
nop
iret
pop
xchg
mov
push
xor
push
mov
inc
cmp
sub
add
aas
je
lods
mov
repnz
repz
(bad)
shr
xchg
cmps
cmp
add
in
dec
lock
rcl
test
iret
or
mov
ss
retf
pop
jno
mov
push
lds
scas
loop
gs
cmp
and
jbe
outs
sbb
mov
jne
sti
fidiv
pop
inc
sub
xchg
xor
inc
dec
xchg
outs
(bad)
cmp
lahf
sbb
jecxz
cli
sub
jge
in
cs
mov
scas
and
adc
enter
inc
mov
mov
or
imul
dec
jp
jl
adc
xchg
pop
iret
mov
fdiv
mov
das
sub
clc
std
dec
dec
mov
sub
leave
loopne
dec
jg
xchg
or
mov
cld
ins
(bad)
cld
pop
in
jne
sbb
dec
movs
stos
test
(bad)
jge
xchg
or
pusha
fisubr
push
mov
adc
xchg
xlat
test
xchg
push
scas
out
mov
push
sub
push
out
xor
in
cmps
jecxz
dec
(bad)
mov
stos
mov
shl
jo
imul
adc
xlat
scas
cmovbe
push
aam
xchg
pusha
push
or
ja
(bad)
cdq
jle
jne
dec
retf
jb
pop
jbe
dec
jle
xchg
fisttp
idiv
pop
xor
xor
jecxz
lea
mov
xlat
inc
inc
aad
cmp
push
jg
mov
ja
xor
pop
pop
lea
mov
adc
cmc
pop
mov
xor
add
sub
and
das
leave
imul
push
sahf
popa
dec
push
dec
cmp
xchg
or
push
lahf
sub
cld
sub
pop
xlat
daa
jno
mov
inc
lods
ret
inc
(bad)
dec
ja
adc
add
arpl
ja
fucomi
(bad)
xor
inc
push
mov
xor
das
cs
xor
ins
pop
and
jmp
stos
push
xchg
xor
xor
mov
idiv
pop
inc
fisub
dec
sbb
sbb
push
push
jle
mov
cmp
push
fdivr
shl
cmp
jle
lock
push
call
add
xor
mov
std
mov
sbb
je
pop
mov
mov
pop
mov
retf
mov
mov
adc
cmps
lea
inc
xchg
and
(bad)
js
fisub
lea
adc
inc
ss
out
sbb
das
arpl
popf
data16
das
jmp
test
sub
cwde
mov
cli
mov
aaa
jmp
(bad)
mov
js
cmps
inc
xchg
adc
cmp
je
mov
es
jnp
ret
icebp
mov
add
mov
cmps
(bad)
aam
xchg
and
pop
in
movs
not
test
(bad)
popa
cmp
test
cs
aaa
mov
retf
fcom
pushw
(bad)
mov
inc
jb
inc
not
imul
loop
outs
xor
das
dec
mov
mov
movs
jmp
shl
out
in
aaa
adc
neg
int3
push
out
ins
push
xchg
dec
mov
pop
dec
or
sub
lds
loopne
aam
add
fwait
jns
inc
jecxz
xchg
out
or
loope
mov
mov
pop
pop
mov
je
mov
cmp
mov
mov
popa
xor
fstp
rcl
jle
pop
rol
jle
mov
fisub
xor
or
adc
sbb
les
mov
sbb
ja
popw
dec
cwde
loop
inc
ins
push
call
xor
add
pusha
adc
sub
inc
outs
outs
jo
jmp
ret
push
xchg
in
ficomp
jmp
outs
call
mov
cmp
jb
fimul
into
jmp
out
cmp
pushw
adc
mov
and
sbb
jae
dec
mov
imul
pop
test
adc
push
imul
dec
dec
jmp
std
add
pushf
xor
xchg
gs
jo
jp
sub
(bad)
mov
ss
pop
out
fmul
jbe
mov
rcl
ds
mov
push
lea
sar
mov
shr
jmp
mov
dec
cmps
or
or
fild
pusha
xchg
retf
retf
mov
jp
inc
inc
jge
sbb
push
sti
mov
hlt
ficom
outs
iret
mov
in
add
pop
mov
pop
add
jp
adc
out
nop
mul
int
adc
addr16
mov
idiv
xchg
ja
enter
idiv
fwait
jb
arpl
stos
or
scas
fld
xchg
out
push
cld
cli
pop
cs
inc
or
outs
in
(bad)
mov
dec
cwde
cmps
jle
pushf
pop
(bad)
ror
push
cld
addr16
les
into
fsub
inc
repnz
(bad)
cld
sar
stos
sbb
int3
sbb
gs
xor
push
or
mov
dec
adc
or
add
sub
in
(bad)
(bad)
sar
dec
and
push
data16
pop
imul
xchg
lods
les
stc
mov
popf
xor
les
addr16
pop
sub
inc
jg
std
(bad)
aam
jmp
push
fidiv
sub
cdq
xor
std
cld
sahf
xchg
mov
ins
pop
rol
jbe
shl
adc
jno
bound
and
add
cwde
sbb
in
push
test
cld
jnp
xchg
movs
or
mov
xor
div
std
xchg
xlat
dec
out
sbb
sub
outs
outs
and
ret
xchg
mov
inc
inc
aam
fsubr
inc
sbb
mul
dec
add
es
dec
rcr
lods
mov
popf
shr
popa
pop
jbe
jg
mov
adc
clc
mov
retf
imul
jo
pop
fdivr
loopne
mov
das
pushf
jmp
(bad)
sahf
pop
test
mov
add
pop
stc
cdq
loopne
push
jnp
xchg
std
repnz
or
mov
lods
ins
test
aad
pop
scas
adc
and
add
jae
mov
adc
xor
xchg
mov
mov
sbb
aas
out
icebp
add
sbb
adc
mov
jne
into
mov
xor
ret
and
sbb
pop
ja
mov
jno
cmp
or
adc
(bad)
aam
shl
scas
popf
push
call
leave
ja
je
inc
loope
sub
imul
sbb
push
mov
jno
test
xchg
ret
in
add
cmp
push
add
pop
inc
mov
aad
fsub
jge
push
add
enter
and
and
xchg
icebp
ret
out
mov
xchg
jbe
imul
pop
jmp
cld
xor
scas
fmul
lock
push
rcr
into
std
add
mov
mov
xor
push
in
pop
inc
jp
dec
daa
cwde
js
and
addr16
push
sub
adc
cwde
xor
push
aaa
jne
mov
add
jne
dec
xor
fs
mov
add
test
pop
xor
push
mov
jnp
add
push
push
outs
fdiv
je
xor
fneni(8087
dec
sub
or
scas
dec
sub
popf
pushf
sahf
jo
add
(bad)
or
jmp
pop
pop
js
mov
add
jnp
inc
int3
mov
daa
call
push
cdq
data16
inc
ds
pop
(bad)
jbe
push
jge
dec
adc
adc
cmps
inc
shl
cmp
adc
push
and
add
xchg
pop
gs
add
jne
faddp
inc
push
ins
test
inc
outs
sbb
ins
jecxz
mov
inc
mov
fisubr
sbb
int
movs
xchg
mov
ss
dec
pop
addr16
in
das
sahf
pop
mov
daa
ins
outs
xlat
jle
jmp
jb
adc
mov
aaa
pop
sub
mov
repnz
lds
aad
call
xor
aam
jmp
dec
mov
dec
jne
std
das
sub
retf
test
mov
in
cmp
imul
or
add
fstp
xchg
pop
mov
lea
nop
dec
add
(bad)
mov
(bad)
in
adc
push
inc
clc
clc
mov
cs
fwait
sti
movs
or
shr
icebp
dec
retf
popfw
inc
jns
sar
sub
adc
xor
jecxz
lea
lock
les
push
stos
add
sub
pop
daa
add
inc
cld
add
mov
(bad)
shr
sub
leave
pop
stos
push
shl
iret
mov
(bad)
loopne
add
push
mov
adc
lds
sbb
imul
inc
inc
jnp
xor
fld
sub
push
dec
mov
jno
sub
sub
sti
in
inc
dec
push
jecxz
stos
xor
call
rcr
jl
sahf
add
(bad)
hlt
pop
arpl
cld
lds
jbe
jmp
(bad)
and
(bad)
stc
jb
sldt
add
jno
add
cmp
mov
pop
add
add
add
fiadd
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
pop
add
add
add
add
loop
add
add
add
jbe
out
add
sbb
add
add
lods
add
loop
add
jecxz
adc
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
fld
add
add
add
add
add
add
repnz
add
pop
add
adc
add
add
popf
add
add
sahf
push
and
xor
sbb
push
jg
scas
xchg
(bad)
retf
movs
js
mov
inc
fucom
push
or
xor
outs
dec
outs
movs
movs
stos
retf
pop
lahf
in
loop
dec
in
ss
dec
stos
mov
out
push
inc
inc
fld
xor
sub
add
and
adc
and
mov
add
iret
(bad)
leave
aad
pop
leave
int
mov
stc
(bad)
and
dec
not
popa
xchg
sub
mov
in
jl
adc
dec
xor
pop
call
mov
adc
sub
push
xchg
mov
cmp
icebp
jne
add
out
adc
and
jmp
xchg
and
jbe
xor
test
cmps
sbb
push
xor
hlt
(bad)
fild
and
mov
in
nop
xor
fisttp
and
adc
cld
scas
test
sub
jp
mov
jnp
bnd
cmp
(bad)
rol
(bad)
sub
(bad)
xor
pop
vcvtdq2ps
cmp
sti
push
cwde
push
mov
idiv
popf
sub
cwde
push
mov
movs
jb
adc
bt
test
push
push
jmp
mov
cmps
cmp
clc
and
gs
ret
rol
movs
loopne
mov
mov
rcl
and
mov
jmp
or
cmp
(bad)
nop
jmp
sub
sub
sbb
movs
(bad)
fcomp
mov
mov
test
lds
xor
mov
mov
push
inc
icebp
inc
mov
test
or
imul
and
sti
jae
mov
lock
paddw
shr
imul
add
jecxz
loope
jmp
mov
pop
leave
addr16
ins
pop
mov
popf
pop
add
xchg
and
sbb
xchg
fbld
mov
sbb
push
mov
xchg
call
jb
jg
or
fisubr
bound
mov
in
fist
jb
call
mov
mov
jle
lds
or
dec
dec
xor
mov
ss
and
pop
cdq
sub
das
or
xchg
mov
or
push
adc
xchg
mov
add
imul
inc
push
cmp
sbb
out
and
xor
jnp
fisubr
loopne
add
jne
inc
pop
mov
dec
mov
or
ret
nop
push
dec
int3
addr16
aam
cs
cmp
xlat
not
push
adc
jbe
das
and
jp
cmp
add
push
stc
lahf
mov
cs
cmp
test
lea
(bad)
jge
dec
dec
adc
out
sar
pop
lods
les
sar
hlt
in
test
sbb
push
pop
pop
out
dec
aad
xor
xchg
mov
xchg
mov
mov
iret
addr16
push
stos
sbb
and
imul
jge
push
jbe
ret
std
std
push
pop
in
inc
push
fstp
xor
ret
jmp
inc
jne
retf
push
(bad)
loope
and
or
(bad)
sar
icebp
or
fcmovu
inc
ins
sahf
or
sbb
inc
or
mov
call
stos
xor
sbb
icebp
test
sub
out
fimul
dec
and
sub
aas
adc
and
outs
xchg
dec
mov
pusha
or
in
mov
cmp
(bad)
mov
sahf
jg
xor
or
fiadd
pop
mov
outs
imul
cmp
mov
dec
mov
movs
mov
sub
sbb
aam
xchg
pop
mov
ret
iret
arpl
cmp
repnz
lods
nop
xchg
ins
cmps
adc
fdivp
cdq
xor
jnp
push
cwde
lock
imul
push
mov
sti
push
dec
(bad)
fiadd
jnp
adc
mov
xchg
and
call
add
add
shl
mov
and
in
pop
add
loop
sbb
dec
push
in
xor
fyl2xp1
aaa
xchg
lahf
int
pop
sahf
sbb
add
push
pop
cmp
in
mov
(bad)
mov
jg
push
push
push
nop
fwait
xor
cld
cmp
or
cmp
dec
inc
in
and
dec
jno
push
jns
frstor
inc
les
arpl
jmp
rcr
clc
mov
adc
hlt
fbld
clc
sbb
(bad)
xchg
loope
imul
mov
int3
cli
and
adc
pusha
add
rcr
call
pop
inc
mov
dec
fisttp
pusha
push
add
jge
pusha
xlat
push
call
fcom
js
mov
in
xchg
call
lods
sbb
mov
xor
test
mov
sub
bound
les
retf
retf
scas
mov
(bad)
fwait
or
mov
mov
call
or
cli
not
sar
mov
dec
xor
pushf
mov
dec
dec
rol
jbe
rcr
in
call
cmp
cmps
test
adc
sub
ds
(bad)
mov
adc
bound
mov
push
xchg
(bad)
mov
sbb
das
hlt
cmps
sbb
in
xchg
outs
or
es
pop
js
jns
(bad)
pop
jge
hlt
(bad)
sbb
out
in
push
and
out
ss
fnstsw
adc
sub
jl
dec
movs
lods
adc
ror
xor
dec
sub
jo
daa
sbb
jg
push
mov
adc
sub
je
xor
sar
sti
mov
add
pop
push
pop
dec
mov
stc
and
or
and
and
shl
(bad)
in
xchg
lock
int3
xchg
cmc
cs
lea
ins
mov
mov
dec
test
xchg
repnz
and
sub
jnp
fldcw
fcomi
push
fsub
push
mov
daa
mov
pop
push
jg
jnp
dec
retf
mov
rcr
and
mov
or
mov
sbb
cmps
clc
xor
push
sbb
out
xchg
jmp
mov
pusha
inc
sub
xor
adc
mov
fild
cmp
dec
mov
aaa
out
(bad)
into
mov
(bad)
mov
hlt
sub
pop
sub
xchg
mov
push
sbb
fdiv
sti
pop
mov
inc
push
and
sub
loope
mov
fs
inc
xchg
enter
mov
test
xchg
dec
pop
xor
jae
pop
jbe
and
and
shl
jmp
sbb
inc
in
jecxz
jmp
xor
shl
xor
(bad)
mov
les
scas
lock
and
repz
sub
inc
dec
push
sti
adc
mov
sub
push
scas
inc
jge
and
cmp
push
(bad)
outs
mov
xlat
mov
add
data16
repnz
mov
inc
mov
xor
sti
mov
inc
pop
loop
xlat
mov
or
stc
imul
adc
pop
cmp
fdivr
neg
in
in
cmp
jae
cs
data16
jge
mov
sbb
xchg
cmp
add
add
sbb
movs
jecxz
aaa
cmp
movs
sar
sub
popa
aam
repz
lods
stos
mov
sub
sti
sub
sbb
aas
popf
movs
clc
cmp
mov
mov
mov
xchg
sub
shr
mov
mov
adc
test
test
into
dec
jmp
addr16
repz
inc
sahf
sub
arpl
movs
das
push
movs
cmc
push
push
dec
(bad)
jmp
loopne
cmp
ror
mov
mov
ror
xchg
lahf
sub
sub
mov
ret
inc
add
or
jno
dec
jg
pop
mov
jo
xchg
jmp
jbe
jnp
mov
push
ffree
retf
js
leave
mov
inc
adc
in
sbb
or
and
inc
pop
jmp
mov
push
and
sub
mov
inc
pop
push
jmp
mov
add
mov
jns
call
xchg
iret
adc
movs
sahf
xor
stos
fst
retf
gs
jmp
ins
jbe
pop
fnsave
sahf
xchg
pop
xchg
lahf
aad
push
mov
cs
test
inc
jnp
popf
pop
dec
dec
outs
out
test
adc
pop
adc
rcl
fistp
scas
xor
and
sub
push
jbe
mov
dec
sbb
lods
out
in
mov
and
data16
mov
rol
mov
and
stos
test
fst
cmp
js
dec
jecxz
jmp
(bad)
movs
cmp
mov
xor
or
(bad)
push
call
mov
js
mov
adc
jns
aad
test
push
mov
(bad)
pop
mov
cs
(bad)
out
icebp
shrd
fisub
adc
cld
leave
daa
vmovshdup
xchg
mov
and
jo
scas
inc
fistp
adc
cmp
test
sahf
aaa
iret
xchg
stos
std
mov
outs
sub
xor
(bad)
ins
fbld
jecxz
mov
nop
ffreep
cmp
mov
cld
mov
bound
push
int3
xor
jmp
jae
sub
push
pop
mov
rol
and
and
jmp
adc
pop
dec
cld
ret
lahf
in
hlt
inc
cmp
cmp
pop
jbe
sar
pop
mov
xchg
mov
jns
dec
mov
inc
aas
(bad)
cmp
rcl
adc
arpl
lods
mov
mov
xor
inc
xchg
inc
or
scas
js
jbe
or
mov
and
xor
push
xchg
mov
push
jae
pop
add
jge
in
or
cmp
and
inc
sahf
add
daa
mov
sbb
push
xchg
jbe
dec
sub
mov
es
fwait
pop
lods
adc
ja
test
dec
mov
jnp
repz
lea
pop
cmp
xchg
rol
aas
mov
movs
clc
test
cld
pusha
les
xor
add
push
fsub
sub
cwde
mov
leave
dec
gs
std
cld
mov
sub
or
ret
pop
cmps
mov
sub
xlat
ficom
into
cdq
bound
pop
xchg
mov
leave
sahf
jl
or
pop
loop
add
(bad)
aas
add
jae
add
add
add
add
add
sbb
test
add
add
add
pop
add
ins
add
add
add
add
lock
add
add
and
add
add
add
add
add
xor
add
test
or
add
jb
add
(bad)
inc
rol
add
add
add
in
jecxz
add
add
add
or
nop
clc
dec
pop
and
xor
rcr
(bad)
pop
adc
pop
gs
jge
mov
push
mov
cmp
jno
and
iret
loopne
jne
aas
scas
mov
hlt
pop
mov
adc
dec
push
pushf
xchg
add
mov
cmps
cli
lahf
sbb
mov
mov
stos
es
outs
and
rcr
push
jo
test
xchg
pop
retf
les
lods
in
push
aas
or
inc
mov
les
das
lock
call
mov
dec
sbb
in
push
sar
push
inc
cli
cmps
add
jmp
cdq
into
ins
sahf
push
call
mov
scas
mov
retf
dec
mov
push
leave
jl
into
je
jnp
mov
and
push
inc
adc
mov
cli
in
movs
loope
das
sub
jnp
es
cmp
(bad)
dec
xchg
cmp
out
iret
mov
sub
(bad)
test
(bad)
pushf
adc
ret
dec
fs
sub
call
scas
fcmove
mov
sub
dec
les
ret
xor
xchg
xor
jl
sbb
lods
shr
jmp
and
xchg
mov
mov
outs
push
and
jnp
iret
fidivr
cmc
mov
test
cmp
test
cld
mov
clc
or
adc
cdq
add
xor
sub
retfw
movs
ret
imul
mov
addr16
or
(bad)
or
out
cmp
scas
enter
out
sub
cmp
mov
nop
into
frstor
ss
ins
lea
mov
xor
mov
(bad)
or
outs
mov
fisub
mov
or
popa
jg
pop
fwait
int
sub
int
setns
mov
inc
adc
xor
loop
inc
sti
retf
mov
scas
jg
sub
call
mov
mov
xchg
jne
jmp
and
mov
jge
das
xor
adc
out
outs
and
lahf
es
jmp
jo
scas
(bad)
imul
sbb
(bad)
push
xchg
push
in
mov
mov
xor
add
movs
mov
in
cwde
mov
jmp
js
adc
movs
xchg
std
cmps
pop
adc
gs
sbb
outs
in
ret
sub
add
and
adc
dec
xchg
xor
push
enter
addr16
xchg
add
call
mov
fwait
lds
dec
add
and
enter
xchg
or
fidivr
stos
cmp
and
sti
inc
addr16
sbb
stos
push
or
mov
pop
and
or
and
mov
imul
es
sub
push
(bad)
mov
in
retf
pop
or
out
mov
fwait
icebp
pop
mov
push
out
retf
dec
mov
test
push
add
push
adc
xchg
cmp
mov
lahf
cmp
fidiv
ss
cdq
and
cmps
fdivr
imul
ss
in
jecxz
xor
cmp
push
repz
leave
inc
test
das
stc
and
js
aam
in
(bad)
stos
test
and
mov
lahf
and
pop
jns
xor
mov
pop
movs
and
loop
lds
cmps
rsm
sbb
popf
cdq
ficomp
rcl
or
hlt
add
xchg
mov
lds
in
mov
pop
ss
jo
adc
test
sub
(bad)
adc
neg
or
or
sub
adc
pop
idiv
fnstcw
lods
jle
mov
mov
mov
outs
sahf
scas
sbb
jnp
out
inc
cmc
sub
in
sbb
push
int
mov
adc
xor
loope
cmp
pop
jp
cmp
cmps
stos
fadd
xor
scas
rcl
push
icebp
mov
jne
pop
fisttp
xchg
jnp
jle
xor
lahf
retf
(bad)
jbe
push
fidiv
jbe
icebp
add
icebp
xchg
ret
sub
mov
aam
fnsave
or
push
inc
imul
rol
ss
(bad)
out
bound
sub
adc
pop
and
mov
call
fld
fisttp
imul
jg
fidiv
mov
sbb
push
xor
jae
push
and
sbb
hlt
clc
ja
inc
push
ret
rep
pop
xor
xlat
and
outs
adc
and
cmps
jb
sub
push
adc
mov
daa
inc
adc
pop
xor
mov
or
enter
clts
popf
jns
cmp
inc
out
jb
cs
enter
gs
lock
std
mov
sub
xor
push
push
rcl
clc
cld
inc
(bad)
inc
adc
xchg
push
rol
jle
pop
sahf
out
jmp
aas
je
or
loopne
pop
bound
xor
into
aas
fisubr
fs
add
clc
(bad)
xor
(bad)
cmp
rcr
mov
aaa
lahf
rcl
mov
sub
dec
inc
in
mov
jmp
sub
jmp
pop
push
cmp
call
icebp
xor
mov
ss
mov
sti
ret
add
test
sub
sahf
jp
mov
or
fsubrp
cld
xchg
push
and
into
(bad)
movs
cmp
scas
sub
push
dec
pop
ins
sbb
les
in
imul
cmp
aam
cmp
inc
xchg
xchg
ret
stos
inc
dec
lock
scas
cs
test
add
lods
mov
mov
shr
sahf
xchg
aad
pushf
dec
push
in
pop
ds
cld
int
cmc
adc
jne
mov
jl
adc
and
int3
leave
outs
adc
shr
push
jecxz
aaa
cmp
jmp
adc
fstp
jge
xor
ror
je
mov
add
lahf
outs
js
es
popf
ins
out
es
sti
out
(bad)
xchg
mov
and
call
push
push
lock
xchg
push
push
push
pop
mov
fwait
xchg
cmp
push
mov
out
mov
jb
add
mov
cmc
inc
add
add
mov
push
test
and
xor
jmp
mov
in
arpl
lea
jb
fnstsw
sub
or
mov
call
and
imul
inc
cmc
xchg
jmp
sbb
adc
fistp
add
cmps
dec
dec
push
(bad)
cmps
add
jle
stc
jecxz
loop
fdiv
mov
mov
add
aaa
das
push
daa
lock
pop
fs
or
stos
cli
cs
icebp
retf
lods
cmp
lahf
lds
btc
movs
sub
mov
pop
and
and
fdiv
popf
outs
inc
sub
pop
fimul
dec
pop
ins
imul
xchg
xchg
or
and
ins
sbb
daa
sbb
add
xor
dec
mov
hlt
mov
mov
out
cmp
fimul
pop
popf
and
lds
push
ds
nop
ret
addr16
push
mov
enter
xor
or
jne
xchg
or
iret
outs
jns
arpl
cmp
ins
pop
jb
repnz
push
pushf
test
lea
dec
jbe
loope
fsubr
loop
pop
add
inc
ins
or
xchg
into
pop
leave
xor
inc
jmp
popa
or
jp
pop
sbb
jns
loop
stc
mov
sbb
pusha
pop
sub
sbb
arpl
push
out
lods
mov
stc
mov
ss
mov
and
retf
out
clc
xchg
xor
push
inc
popf
jmp
pop
xor
clc
inc
cs
ror
in
cmp
jecxz
cli
cdq
and
scas
in
push
cmps
out
sbb
push
stc
add
add
or
xchg
mov
repz
mov
ror
mov
inc
sti
shr
cli
ret
retf
sar
dec
arpl
out
fdivr
aad
ja
fdivp
packsswb
pop
pushf
jno
in
fisubr
sbb
(bad)
cmps
adc
scas
mov
ss
test
jns
mov
cmp
daa
popa
pop
imul
call
mov
cli
outs
ins
inc
sub
mov
or
fwait
popf
sub
clc
cmp
cmp
sar
push
xchg
and
ins
push
arpl
out
aaa
cs
pusha
(bad)
push
mov
mov
sub
icebp
mov
js
and
jae
out
dec
jge
xchg
fisttp
pop
int
pop
or
and
jbe
ficom
push
xor
add
mov
test
xor
gs
mov
(bad)
in
stos
loopne
je
dec
inc
pop
sub
(bad)
data16
push
pop
call
add
icebp
ja
adc
xchg
xchg
ror
sbb
popf
ja
lds
adc
inc
jl
popa
popf
mov
jmp
ins
mov
xchg
(bad)
mov
out
pop
adc
bound
daa
or
xor
stos
setae
sub
addr16
fcomp
add
mov
push
add
jns
test
jns
scas
inc
pop
cmps
or
dec
clc
stc
xchg
lods
hlt
aam
xchg
mov
jb
jbe
sbb
addr16
dec
in
sbb
mov
ret
(bad)
repnz
stc
(bad)
dec
and
add
inc
lock
add
pop
push
jns
daa
fnstcw
mov
mov
pop
xor
popa
jae
out
mov
push
xchg
ret
call
jl
push
fld
cdq
popa
mov
loope
cmps
out
mov
or
bound
imul
mov
sbb
icebp
mov
push
scas
cli
push
xor
movs
bnd
sbb
xchg
sbb
lods
aaa
mov
sub
push
mov
cmps
push
lods
push
push
xor
jo
cmps
ss
ins
sub
out
je
and
jne
jl
jnp
xchg
sub
adc
mov
(bad)
or
xlat
sbb
mov
push
popf
adc
sub
inc
pop
js
xchg
inc
popf
add
push
dec
sbb
stos
xor
push
jnp
mov
stos
sub
jns
add
add
int
mov
push
xchg
xchg
cdq
(bad)
in
sar
stos
ins
push
sbb
mov
pop
xchg
sti
mov
mov
pop
inc
and
cmp
mov
loope
mov
pushf
jno
mov
xor
popf
or
mov
dec
ror
cdq
push
xchg
dec
mov
xchg
loopne
movs
xlat
jge
addr16
inc
push
mov
push
aad
and
mov
(bad)
stos
(bad)
lea
adc
push
mov
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
and
loopne
add
add
add
sbb
add
add
add
add
add
add
add
add
add
popf
aas
add
add
add
xlat
add
cmc
add
add
add
add
je
lahf
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
and
add
add
popa
rol
inc
add
add
add
fadd
add
add
xchg
add
add
add
add
and
add
add
add
add
add
add
add
add
test
add
add
add
enter
add
mov
add
add
add
sbb
add
test
cld
add
add
add
sub
add
jmp
add
add
add
add
add
add
add
ds
add
sbb
add
add
add
add
jae
add
add
dec
inc
adc
test
xchg
dec
mov
out
retf
sub
inc
inc
and
pop
cli
cld
outs
jle
ins
sbb
or
or
repz
jb
cli
push
jne
push
xchg
ret
cmp
xor
inc
xor
pop
push
sbb
gs
cmp
pushf
adc
popa
je
neg
jmp
and
pushf
cmp
jg
(bad)
and
popf
call
push
push
pop
push
mov
test
hlt
popf
adc
and
dec
cwde
repz
dec
xor
lock
hlt
(bad)
cmp
xchg
ret
mov
mov
pop
das
mov
pop
es
test
clc
fisttp
loopne
jp
stos
adc
push
xor
rcr
lahf
push
mov
xor
movs
adc
and
sbb
pop
stos
xchg
dec
and
outs
sub
push
sub
sub
outs
or
cmp
cdq
fisttp
sbb
mov
push
add
scas
ficomp
xchg
movs
fwait
lock
leave
pop
mov
mov
out
cmp
in
adc
test
xchg
nop
ja
or
ret
mov
sub
out
(bad)
mov
repz
mov
stos
leave
shl
push
mov
pusha
ins
push
fcom
sbb
repnz
add
mov
dec
pop
push
rol
imul
mov
test
push
cmp
or
into
cmp
add
add
mov
adc
cmp
fcomip
std
sbb
lock
xor
adc
push
mov
cmp
cs
and
jp
sti
mov
pop
jb
ds
out
mov
repnz
test
(bad)
shl
in
mov
mov
jg
bound
dec
adc
jecxz
daa
cmp
out
gs
(bad)
cli
hlt
loop
rcl
aaa
sbb
stc
mov
fidivr
xor
or
and
(bad)
arpl
(bad)
lea
xor
data16
cli
call
loopne
(bad)
ins
adc
(bad)
stos
add
lds
in
jno
in
push
adc
sub
sar
mov
jo
fst
mov
pop
xor
jl
push
jae
lods
pop
or
lds
add
int
pop
lods
push
fild
xor
adc
fisub
jecxz
cli
sub
push
jmp
rcr
rol
fwait
jbe
jl
shl
pushf
and
cmp
and
inc
stc
and
retf
ror
not
add
pop
adc
test
jae
arpl
in
punpckldq
aaa
jne
mov
xchg
push
jbe
shl
push
cmps
fcmovb
add
add
out
arpl
test
add
imul
repz
sar
int
jbe
mov
es
fidivr
test
push
mov
sahf
shl
int3
pop
sub
push
fs
sbb
imul
(bad)
and
add
adc
or
loope
mov
ja
mov
sbb
popf
add
test
pop
jle
inc
xchg
fwait
pop
jg
jecxz
and
neg
cmp
add
loope
mov
ins
mov
mov
push
pop
add
ins
xor
fidiv
movs
dec
mov
scas
sub
std
xor
mov
xlat
cmp
adc
and
hlt
loope
loopne
add
icebp
shr
and
mov
or
dec
(bad)
loop
push
and
or
push
or
or
or
std
push
fstp
pop
push
retf
add
das
and
daa
add
jmp
push
stos
daa
outs
fs
xchg
popa
ins
arpl
adc
aad
cmp
dec
aas
imul
fst
cmp
ffreep
fwait
xor
fist
jmp
shr
sbb
push
gs
outs
in
lea
mov
popa
lahf
push
mov
into
fcomp
sub
lahf
xor
test
jl
or
lods
and
out
test
mov
jno
bound
addr16
lahf
cdq
call
sbb
sahf
mov
and
int
les
test
rcl
mov
pop
mov
shl
or
cmps
mov
pusha
scas
xor
lock
sub
jmp
add
dec
jb
xchg
pushf
inc
xor
sub
aaa
jbe
mov
fnsave
adc
add
or
jp
adc
loopne
fbstp
js
push
pop
fild
jb
mov
and
jne
pushf
movs
cmc
outs
lds
fcom
mov
cwde
xor
mov
sub
cmp
mov
pop
dec
js
sub
stc
push
loop
mov
or
int3
cwde
and
pop
cmp
or
sub
pop
jae
fidivr
loop
sbb
pop
add
mov
bound
(bad)
aam
dec
xor
pop
loopne
test
daa
mov
pushf
push
and
mov
movs
repnz
addr16
mov
xor
inc
mov
add
enter
jo
(bad)
pusha
and
into
hlt
lahf
cmp
push
inc
cdq
rcl
outs
mov
jmp
int3
fstp
(bad)
cmps
les
or
test
rol
mov
adc
cwde
mov
inc
mov
push
or
fwait
popa
inc
fwait
xchg
cdq
ret
xlat
mov
int
push
daa
push
aas
adc
out
jmp
aam
dec
aam
jmp
fld
and
scas
xlat
sbb
dec
stos
and
popf
div
outs
das
dec
push
lahf
sbb
xchg
mov
sub
retf
inc
ret
sub
cmc
mov
cs
push
repnz
jae
jge
jbe
fdivr
data16
lea
(bad)
(bad)
das
mov
mov
icebp
outs
gs
and
ja
loop
repz
cmps
loope
pmuludq
(bad)
aad
add
adc
xor
sbb
pop
pushf
xchg
rol
call
xor
dec
mov
and
pop
aas
push
aas
push
cmp
fsub
jp
jb
into
jne
dec
cmp
rcr
stos
std
and
cmps
xchg
mov
scas
fsubr
inc
dec
fistp
lods
clc
cmp
lods
call
sub
push
jl
jmp
das
dec
sbb
push
and
sub
in
add
cmps
call
test
(bad)
leave
push
int
fwait
mov
sub
cmp
shl
push
and
into
pop
(bad)
enter
mov
xchg
cli
xchg
sub
fst
pop
iret
inc
popf
out
and
hlt
call
mov
xor
jae
or
popf
sub
pop
repz
pop
imul
lock
jae
nop
inc
pop
push
enter
mov
aaa
sbb
iret
jle
push
push
fnstsw
stos
call
add
movs
pop
pushf
popa
jp
pusha
lds
pop
fwait
outs
cmovg
or
and
or
mov
mov
das
push
js
rol
push
jns
test
sub
xlat
or
pop
mov
push
jnp
xor
in
push
(bad)
pop
xchg
sbb
(bad)
add
aad
xchg
outs
jge
lahf
or
mov
iret
in
inc
lahf
add
stos
idiv
aad
daa
cmc
cwde
inc
mov
mov
bound
jge
dec
inc
hlt
outs
pop
mov
jns
addr16
jae
lahf
mov
pop
pop
rcl
pop
addr16
les
repnz
adc
inc
shl
(bad)
mov
mov
mov
or
push
enter
xchg
pop
pop
mov
icebp
ss
xchg
fs
leave
daa
jmp
das
push
sbb
nop
mov
(bad)
xchg
xchg
adc
cmp
xor
dec
xlat
xor
push
xchg
stc
mov
dec
pop
sub
jne
mov
arpl
mov
or
stos
cmp
or
sbb
retf
cmp
jp
mov
loopne
or
jae
push
clc
add
push
fcomp
pop
bound
(bad)
aas
sbb
xchg
popf
sub
jle
(bad)
inc
(bad)
mov
ins
adc
mov
jb
jns
mov
hlt
scas
out
mov
es
dec
cld
lahf
cmp
dec
add
fst
lds
loope
pusha
jns
ds
mov
test
xchg
push
data16
push
add
out
cmp
sbb
icebp
push
mov
bound
and
mov
xchg
and
retf
fcmovbe
mov
(bad)
rcl
mov
sub
mov
fwait
cmps
out
push
and
movs
rol
mov
sub
add
jo
jae
mov
push
jge
jle
pusha
imul
bound
pop
out
pop
inc
or
cdq
xor
cld
push
push
inc
lods
add
jp
push
push
dec
push
call
xchg
mov
adc
sbb
cli
and
fnstcw
xchg
fild
push
xor
shl
jle
popa
xchg
cmp
or
shl
mov
sbb
add
iret
mov
push
sbb
(bad)
fsubr
and
stc
mov
icebp
mov
inc
in
daa
in
xchg
fstp
retf
add
lock
test
push
sub
push
dec
daa
les
cmp
adc
and
and
loope
ss
jo
push
push
enter
or
push
xor
ret
stos
mov
out
stos
cli
bound
ins
sub
pop
mov
or
cli
sbb
and
aaa
jb
cmp
add
sbb
adc
mov
out
sub
loopne
pop
jg
fisub
sub
out
retf
pop
mov
dec
push
out
and
push
outs
fs
or
in
shr
lods
ins
sub
out
pop
sbb
js
lea
clc
stos
xor
push
sub
aad
mov
iret
imul
sub
daa
dec
sub
jmp
sub
jb
daa
jmp
js
mov
out
fmul
popaw
sub
dec
call
cmps
sbb
cmp
cmp
pop
sbb
pop
jmp
sub
loope
div
out
fisubr
pop
je
lods
dec
dec
mov
nop
jae
inc
dec
sbb
add
in
mov
xor
fist
rdtsc
les
add
jo
add
add
add
add
add
add
add
adc
add
add
cmp
add
add
add
add
stos
add
push
and
scas
add
add
add
adc
cmp
add
add
add
add
dec
add
add
cmps
enter
outs
cld
add
add
nop
add
dec
add
data16
sub
push
cli
sbb
push
push
int3
retf
adc
cmp
shl
fld
movs
jmp
mov
(bad)
push
lock
mov
mov
cmp
sbb
push
fwait
and
mov
in
mul
lea
enter
stos
cmc
lods
dec
cmp
nop
out
int
es
pop
enter
mov
js
aas
push
repz
cwde
add
cmp
jp
xchg
fwait
iret
push
fistp
cmp
mov
addr16
ret
xor
jb
xor
mov
fbstp
sub
jno
test
push
sbb
mov
repnz
xor
call
xchg
cld
push
jo
mov
dec
mov
repnz
test
iret
cmp
cwde
xchg
sbb
outs
hlt
out
dec
inc
dec
xchg
jno
(bad)
xor
enter
ds
ins
fcom
pop
ins
dec
inc
add
sti
mov
(bad)
addr16
retf
js
ror
or
sbb
dec
shl
push
cmps
add
mov
mov
mov
pop
test
mov
mov
lods
push
in
dec
iret
lods
push
push
mov
cmp
bound
push
pop
pop
dec
cmp
test
cli
add
jge
or
pop
out
icebp
imul
push
cmps
mov
pushf
sub
imul
es
mov
das
xor
loope
outs
sbb
jge
jb
push
ins
mov
ret
push
adc
or
and
out
cmp
out
lods
mov
hlt
mov
push
cmps
in
loope
sub
xchg
xor
and
rcr
xlat
mov
cdq
popf
imul
xor
fdivr
pusha
popf
ret
call
adc
pop
out
and
add
sub
inc
mov
pushf
push
aad
int3
fnstenv
pop
ins
dec
push
mov
sbb
gs
addr16
inc
pop
ds
not
and
dec
shl
pop
pop
or
xor
mov
mov
add
test
hlt
add
or
leave
inc
aas
ins
icebp
fmul
mov
cmc
data16
sahf
dec
adc
push
shl
(bad)
popa
cmp
cwde
push
das
jbe
lods
mov
adc
sbb
jne
test
jge
pop
mov
mov
fbld
retf
mov
sub
movs
fsubrp
xchg
imul
pop
imul
mov
xor
sbb
xor
mov
or
add
js
fild
popa
push
mov
arpl
inc
aad
stos
dec
jne
mov
fistp
in
mov
sub
cmps
rcl
scas
mov
xchg
pop
cmc
(bad)
sub
in
mov
mov
sbb
in
or
xor
push
pop
xor
xor
aam
out
aas
(bad)
retf
push
pop
sbb
add
hlt
pop
inc
push
mov
das
cmp
xchg
fcom
inc
sub
pop
mov
out
xchg
js
xchg
adc
aas
js
adc
movs
iret
(bad)
fisubr
add
das
xchg
jmp
shl
pop
call
lods
xchg
pop
xchg
jmp
jnp
push
test
out
outs
xor
push
fistp
or
jns
(bad)
int3
cdq
sbb
push
scas
pop
std
out
jge
jns
pop
cwde
pop
clc
enter
pop
pop
das
xor
pop
jno
ds
sar
scas
js
or
inc
test
movnti
imul
cli
push
(bad)
inc
pop
aas
cmc
ret
sbb
adc
adc
in
push
cld
jle
rol
mov
sub
dec
fisub
out
in
push
pushf
ins
push
or
cmp
xor
adc
aaa
outs
adc
lea
repz
pop
lods
xlat
fs
sub
mov
mov
and
cmp
in
ficomp
mov
sbb
jecxz
fwait
pop
pop
sbb
jb
lods
xchg
or
int3
ins
xchg
jne
push
jmp
inc
dec
xchg
cmc
pop
mov
fld
into
mov
lds
pop
mov
lock
es
sub
(bad)
jmp
mov
cdq
(bad)
movs
and
popf
into
shr
(bad)
push
ss
add
fist
pop
mov
stos
fsubr
xor
sbb
xchg
sbb
add
add
rcl
xor
dec
jae
out
aas
fistp
mov
or
rcr
lock
mov
ss
cmps
inc
sub
sub
mov
loopne
mov
rcr
mov
pop
das
out
adc
push
jnp
adc
sbb
xchg
push
adc
sub
xchg
jmp
neg
cwde
or
das
mov
jbe
(bad)
mov
ss
mov
js
je
and
(bad)
jns
pmuludq
push
and
dec
ins
mov
nop
inc
cmp
sub
pop
frstor
je
pop
pop
and
xchg
jmp
push
arpl
in
gs
xchg
sbb
mov
xchg
fwait
mov
mov
cld
in
mov
xlat
mov
(bad)
pop
mov
adc
aad
int3
movs
rcr
and
sub
out
sub
in
dec
and
push
cmp
mov
or
fild
loopne
sub
cmp
or
iret
int3
jecxz
pop
rol
das
mov
movs
outs
or
(bad)
into
loop
push
ror
xchg
shl
test
adc
inc
dec
ins
mov
jge
xchg
push
mov
test
sbb
push
add
shl
mov
add
push
cld
dec
mov
xchg
or
call
ror
fmul
mov
jo
dec
pop
sub
jge
jmp
pop
cmp
sbb
push
mov
xchg
in
jns
test
shl
push
jb
jge
cli
sti
loope
jmp
fist
shl
jno
dec
dec
call
cdq
test
leave
add
hlt
lods
les
mov
test
in
push
ss
adc
pop
xchg
cmp
popf
jmp
mov
inc
inc
mov
sbb
jne
push
rcl
fsub
adc
movs
das
jo
imul
push
dec
inc
faddp
aas
sbb
or
sub
sub
mov
push
xlat
gs
mov
or
or
in
call
cmp
xchg
xor
pusha
dec
js
stos
xchg
mov
inc
push
push
push
data16
pop
int
lahf
mov
test
mov
clc
jp
jecxz
adc
ret
cmps
ss
inc
popf
mov
inc
push
mov
mov
leave
pop
mov
fcomp
jge
add
scas
int
fs
mov
lea
retf
push
cmp
cdq
ja
cli
enter
mov
cld
ins
sbb
jae
bound
xor
rol
out
pop
es
fs
pop
lock
cs
sbb
in
mov
(bad)
cmp
or
sub
push
cmp
stos
test
xchg
xchg
xor
dec
(bad)
cmps
cmc
inc
xchg
jge
dec
and
arpl
out
in
pop
and
pop
shl
outs
sahf
inc
sbb
lods
cmp
(bad)
in
pop
ror
pop
push
push
mov
icebp
or
cdq
push
push
ret
sti
retf
add
inc
das
gs
cwde
scas
mov
jmp
in
or
out
shr
and
jmp
add
imul
inc
retf
pusha
imul
(bad)
jns
cmp
daa
cmp
pusha
dec
mov
pop
loope
jmp
or
popf
idiv
jnp
outs
iret
jnp
(bad)
clc
jns
stos
xchg
inc
or
xor
into
inc
loopne
stos
sub
repz
jo
movs
pusha
cmp
pop
xchg
aam
xchg
dec
add
jnp
sbb
inc
int3
add
dec
addr16
sub
cli
jle
sub
pushf
out
(bad)
shl
pop
sub
mov
fisub
mov
adc
cmps
xchg
(bad)
cld
(bad)
fucom
scas
push
std
cmp
pop
shl
mov
fsub
xor
dec
dec
(bad)
mov
pop
ret
clc
jp
arpl
push
jmp
xchg
movs
(bad)
jb
lods
out
mov
leave
push
and
sbb
pop
inc
add
sub
test
mov
jmp
aam
push
cmp
sub
cmps
mov
xor
fsub
out
leave
loopne
xchg
pop
and
push
pop
sub
and
jne
out
xchg
stos
and
popf
out
lods
movs
jnp
in
and
les
xor
addr16
sahf
(bad)
push
push
mov
clc
inc
dec
hlt
xchg
les
movs
sbb
out
jbe
cld
cwde
std
addr16
xchg
lea
lock
dec
loop
imul
jg
cwde
mov
fst
loope
xchg
xchg
outs
jle
cmps
movs
mov
or
fimul
lods
add
jbe
inc
cmps
daa
jne
xor
in
push
fist
dec
push
dec
push
stc
dec
clc
cli
push
push
out
pop
pop
adc
cs
cdq
daa
mov
mov
pop
rcr
lods
jge
and
mov
loopne
rcl
xor
ffreep
lahf
add
xchg
mov
xlat
xchg
cmp
dec
neg
scas
push
(bad)
push
mov
call
into
movs
ror
mov
cmps
push
(bad)
shr
pop
neg
cli
out
mov
push
xlat
push
and
mov
jmp
xchg
test
movs
add
and
sti
cdq
jg
lea
out
add
xor
cmp
xchg
push
pop
and
add
sbb
xchg
mov
int3
push
out
jnp
push
jnp
popf
fistp
mov
dec
mov
fwait
es
out
jl
pop
int
xor
mov
es
or
pushf
and
shl
xchg
pop
or
sbb
cmp
dec
(bad)
and
sub
lods
dec
push
and
xchg
mov
mov
adc
jbe
jle
fs
mov
xor
jge
hlt
pop
mov
mov
or
cmp
pop
cmp
mov
pop
inc
fisub
lahf
outs
mov
enter
add
add
cmp
sub
add
add
add
add
add
add
add
add
pop
add
add
add
add
jecxz
add
pop
add
inc
add
add
out
add
iret
out
adc
out
mov
je
sbb
dec
push
sahf
and
sbb
and
cmps
dec
iret
push
shr
imul
loope
mov
test
data16
leave
mov
(bad)
out
push
mov
fstp
aas
ss
in
xor
test
or
int
test
clc
or
gs
xor
xor
fnstsw
push
fmulp
sub
rcl
inc
or
arpl
into
in
cmps
(bad)
add
scas
ss
jg
mov
mov
scas
and
je
sub
outs
cmp
ds
int3
jmp
test
xchg
sub
pop
popf
fmul
mov
dec
retf
lea
dec
repnz
fwait
mov
push
jnp
adc
mov
push
test
out
call
inc
xchg
and
sbb
push
mov
(bad)
movs
repz
outs
xor
inc
xchg
ret
aaa
xor
push
dec
mov
or
and
jmp
jl
fsubr
inc
nop
adc
out
jmp
xchg
pop
je
mov
test
cli
jl
inc
or
retf
scas
test
xchg
test
hlt
retf
test
loope
adc
pop
and
mov
jecxz
retf
pop
push
sbb
mov
mov
add
in
jno
xor
enter
iret
aad
daa
(bad)
cmc
ror
fsubr
data16
push
daa
pop
xor
daa
push
das
aam
inc
jg
pop
in
adc
adc
mov
fdiv
sbb
xchg
cmp
jl
mov
add
dec
adc
jp
aaa
adc
pop
xchg
les
fimul
pop
mov
xchg
pop
hlt
jbe
lods
jmp
adc
or
push
dec
cli
icebp
xor
cld
inc
push
sahf
jnp
mov
lahf
push
addr16
xchg
pop
xchg
shl
jns
push
call
data16
mov
fstp
xor
lea
pushw
pop
sub
sub
mov
mov
mov
push
dec
mov
pop
lock
cs
inc
lods
pop
xchg
pop
test
rcr
inc
and
jge
shl
je
xor
lods
jno
icebp
(bad)
test
cmp
adc
(bad)
movs
aaa
mov
jp
test
xchg
cmp
loop
inc
ins
mov
cmps
push
sbb
fwait
jmp
add
int
jb
shl
int3
(bad)
jg
in
out
ins
std
retf
sub
call
int
pushf
or
sub
cwde
xchg
and
sub
ins
inc
lods
aam
mov
paddsw
int3
jl
push
adc
sbb
ret
je
push
fucomp
out
add
xchg
lods
js
loop
mov
mov
pop
xor
out
mov
(bad)
add
enter
xor
dec
sub
jle
int3
and
xlat
push
dec
push
push
mov
or
mov
jge
mov
in
mov
mov
mov
push
out
ja
arpl
or
jae
jns
lods
inc
cmps
add
sub
xor
fist
ins
and
das
fsubr
jp
and
sub
and
mov
jp
(bad)
imul
sub
push
rcr
(bad)
and
test
jne
inc
jno
push
push
adc
mov
cwde
int3
aam
cmp
xchg
add
imul
add
in
pop
jb
cmps
pop
ret
(bad)
mov
cs
inc
add
mov
or
fist
mov
outs
sub
rol
or
and
aam
sub
or
sbb
in
fsub
div
fdivr
popf
pushf
jmp
mov
and
test
mov
clc
ss
xlat
pop
call
cwde
repz
mov
sbb
jge
std
xor
mov
out
in
or
and
mov
jmp
pop
nop
mov
and
xor
mov
fcmovne
push
in
xchg
fadd
test
stos
out
pop
test
cld
into
adc
cmp
mov
fdiv
add
mov
push
sar
xor
dec
adc
and
in
dec
pop
jp
dec
pop
cmp
lods
test
xchg
and
sbb
jns
movs
imul
test
and
dec
repnz
fbld
bound
adc
jb
(bad)
adc
ja
mov
(bad)
(bad)
xor
aad
sbb
lds
mul
push
mov
inc
sub
pop
outs
mov
lods
lods
mov
pop
(bad)
data16
cmps
cwde
aas
or
ret
cmp
sub
into
fist
add
(bad)
js
stc
ds
ret
inc
adc
or
inc
push
inc
dec
addr16
jle
adc
mov
pop
hlt
call
cmp
or
stos
and
in
test
retf
repnz
int3
inc
scas
inc
ss
push
les
lea
jecxz
(bad)
ins
sub
and
xor
mov
dec
bswap
mov
jb
adc
jecxz
lods
xor
ja
or
cli
jle
(bad)
repnz
or
neg
cmp
push
es
std
push
mov
retf
mov
lds
(bad)
cli
clc
cwde
ficom
mov
je
inc
retf
and
push
push
(bad)
aam
(bad)
pop
inc
jge
sbb
cmp
add
fdiv
sbb
mov
retf
push
and
mov
mov
push
dec
in
mov
sub
dec
stos
fidivr
pushf
nop
pop
loope
mov
call
inc
cmp
lahf
enter
jg
inc
mov
int3
mov
das
rol
xlat
aaa
push
sti
loopne
push
jmp
dec
mov
scas
mov
outs
adc
add
push
jl
(bad)
loopne
pextrw
push
leave
pop
xor
jns
mov
repnz
mov
mov
cdq
fldcw
sar
outs
mov
jl
imul
mov
xor
outs
mov
push
adc
(bad)
(bad)
mov
mov
stc
and
cs
cmp
rol
xor
adc
or
loopne
pop
push
icebp
inc
sub
data16
sbb
lahf
mov
jno
sbb
into
test
mov
int
dec
js
xor
add
sbb
(bad)
xor
jp
dec
das
mov
popf
nop
call
clc
addr16
cdq
repz
or
jbe
loop
into
xchg
or
out
add
out
scas
iret
arpl
push
cmp
pop
xchg
and
cld
sahf
xchg
jo
hlt
jno
mov
(bad)
adc
and
imul
dec
lds
lods
(bad)
sbb
sbb
lahf
(bad)
adc
or
pop
push
dec
mov
cmp
das
dec
cmp
inc
je
pop
aaa
fwait
cmc
jae
ret
into
mov
repz
and
test
mov
mov
mov
mov
rol
pop
sbb
xlat
js
xor
in
sar
mov
jbe
add
inc
rcr
stos
sub
xor
dec
sub
or
add
pusha
and
mov
pop
or
popa
adc
adc
and
jb
push
ds
leave
cli
nop
int3
or
dec
fdiv
mov
ins
add
sub
scas
out
cs
cmovno
jno
in
loopne
push
mov
xchg
jg
jns
jns
pop
(bad)
(bad)
in
mov
rcr
pusha
fld
cmp
sub
jle
bnd
or
xor
std
ror
cld
push
in
lds
fadd
push
add
movs
push
adc
inc
ret
outs
jne
inc
aaa
arpl
inc
adc
jmp
ins
mov
xor
icebp
jbe
mov
mov
retf
(bad)
aas
rol
adc
fdivr
ret
rcr
iret
and
cdq
xchg
xchg
pushf
aad
enter
scas
inc
retf
xor
dec
pop
mov
mov
xor
ins
sar
in
fstp
dec
pop
mov
out
add
je
push
mov
jp
cs
sbb
jge
jmp
mov
repnz
movd
(bad)
fisubr
and
jl
call
cmc
xchg
cmps
es
loop
push
(bad)
and
mov
mov
dec
push
mov
repz
popa
mov
(bad)
pop
xor
or
aad
imul
fld
mov
movs
loop
or
jmp
popa
sbb
xchg
jp
add
dec
cmp
push
and
fwait
dec
add
test
loop
scas
leave
aam
out
neg
(bad)
cmp
xchg
call
outs
test
shr
sbb
or
cmps
inc
clc
aad
dec
pop
mov
lds
out
mov
(bad)
outs
xchg
xchg
or
adc
jl
inc
xlat
shr
cmp
add
mov
jb
shl
push
add
outs
inc
clc
sub
jb
loopne
leave
cmp
xor
jb
ss
out
jb
mov
push
gs
push
daa
cwde
pop
sub
ret
mov
pop
cmps
xchg
mov
sbb
pusha
jle
int3
into
test
jo
(bad)
or
xchg
add
and
push
dec
jbe
pop
pusha
in
and
lahf
and
fstp
and
sbb
fstp
mov
in
xchg
lahf
pushf
adc
inc
mov
icebp
cli
xchg
and
imul
xchg
std
inc
add
ss
mov
(bad)
daa
int3
mov
cmp
push
xchg
push
mov
lods
push
mov
xchg
inc
loope
lods
gs
push
leave
push
loop
int3
mov
rcr
stos
add
dec
ins
mov
inc
pop
sbb
pop
fild
fst
xor
push
and
add
loop
adc
xchg
fnstsw
arpl
and
jl
mov
and
movs
jbe
mov
mov
xchg
iret
or
out
cld
xor
jmp
aad
daa
xchg
sub
call
adc
ror
movs
lods
inc
ins
neg
xor
or
and
add
add
add
add
dec
add
push
add
add
mov
add
dec
add
mov
add
add
(bad)
add
add
add
add
add
add
scas
add
jg
add
add
add
xor
add
add
add
add
add
sbb
add
add
add
add
arpl
add
xchg
add
rol
add
add
dec
adc
mov
add
add
add
xchg
arpl
add
add
add
add
pop
add
add
add
add
add
add
mov
add
add
add
add
add
rol
add
and
add
add
add
pop
rol
add
lds
add
add
add
add
aas
popa
add
jle
add
xchg
add
inc
add
add
xchg
add
retf
add
inc
add
add
add
add
add
add
call
enter
scas
add
add
add
add
add
(bad)
das
xor
test
and
mov
icebp
and
xchg
clc
jnp
ja
retf
add
popf
push
dec
dec
stos
sbb
mov
daa
in
mov
xchg
and
sub
stos
test
dec
pop
push
cmc
xor
push
xchg
mov
add
fst
fs
hlt
aam
and
out
cmp
nop
adc
cmp
adc
sti
xchg
scas
jmp
ins
rcr
jae
dec
fild
movs
ins
or
jnp
fadd
popf
mov
mov
fsubr
mov
clc
mov
stos
(bad)
cli
xor
adc
push
and
fiadd
xchg
push
inc
mov
sbb
movs
js
push
shl
stos
outs
(bad)
ror
push
inc
not
js
mov
mov
rol
ja
cmp
push
inc
xchg
dec
push
aam
div
scas
call
jecxz
cli
jl
jg
mov
mov
adc
xchg
outs
or
cdq
gs
pusha
add
adc
jnp
les
pop
pop
out
call
iret
outs
popf
and
bsf
and
mov
loopne
sub
imul
stos
sub
fnstsw
inc
mov
add
push
mov
dec
sbb
inc
xchg
retf
shl
xchg
sbb
idiv
sub
mov
mov
test
adc
ins
pushf
inc
adc
jl
out
cmp
pop
fiadd
js
sub
cmp
inc
jmp
sar
arpl
push
and
call
xchg
xchg
test
test
rcl
ror
mov
and
in
pop
or
mov
jmp
scas
cmp
cmp
xor
jp
es
fldenv
aam
or
jne
sahf
mov
rcl
daa
push
retf
push
sub
add
dec
mov
cmp
loop
add
jo
pop
mov
push
sahf
imul
sar
call
loopne
retf
cmp
jae
call
mov
inc
sbb
loopne
xor
mov
clc
jle
scas
movhps
(bad)
or
xchg
(bad)
inc
inc
in
adc
aam
xlat
adc
test
jmp
or
mov
enter
push
out
in
xchg
or
cwd
pop
fimul
ret
cmp
test
mov
mov
fisubr
mov
sbb
jecxz
repz
test
or
or
out
call
cli
imul
push
or
in
or
loop
push
das
ins
stos
xchg
movs
sub
mov
mov
xchg
enter
std
adc
xchg
xchg
sub
in
popf
sub
push
movs
ja
sub
xchg
ret
add
adc
dec
sub
cmp
jecxz
loop
cwde
(bad)
and
sbb
lods
mov
test
cmps
dec
xchg
push
or
push
sub
fld
sbb
out
(bad)
in
dec
sbb
xchg
cmp
xchg
adc
and
ja
xchg
out
cmp
jb
cmps
mov
cwde
jge
adc
jns
mov
out
retf
call
inc
aas
or
test
into
jecxz
not
imul
jb
je
pop
adc
jnp
(bad)
xrelease
(bad)
scas
pop
mov
mov
lahf
cmp
pop
inc
mov
push
cmps
dec
or
xor
repnz
pop
sbb
mov
jmp
scas
je
push
shl
or
jae
mov
dec
js
dec
mov
ror
sbb
inc
pop
cmps
out
jb
mov
test
jmp
aam
push
pop
aam
fwait
(bad)
mov
adc
rcr
mov
xchg
pop
out
jmp
fs
cmps
fsubr
push
test
popf
sar
jl
dec
xor
mov
sub
cmp
(bad)
(bad)
sar
xchg
lahf
fwait
dec
sbb
outs
nop
(bad)
jmp
jb
mov
fwait
bound
loope
in
xor
std
push
xlat
fdivp
adc
lahf
jge
iret
add
(bad)
mov
xchg
mov
mov
nop
mov
jae
arpl
pop
inc
add
and
pop
xor
outs
sahf
sbb
scas
mov
or
mov
push
dec
ja
and
mov
mov
push
das
jl
mov
call
or
stos
call
jmp
cmp
mov
in
mov
push
adc
popa
cmp
mov
mov
aas
icebp
aaa
cmp
mov
vmread
push
jge
pop
jmp
pushf
jge
push
out
xchg
lods
shl
jle
add
xor
pop
and
cld
in
xchg
popa
jnp
jo
icebp
outs
inc
mov
push
adc
sub
push
jmp
mov
sbb
sbb
cld
mov
mov
pop
cmp
sbb
dec
int3
xchg
xchg
dec
test
sbb
in
dec
mov
je
mov
outs
adc
push
mov
xchg
fsin
sub
push
std
mov
and
std
imul
adc
and
nop
les
sub
bound
and
sub
push
pop
mov
pop
mov
in
retf
or
mov
stc
dec
test
sahf
popa
or
jmp
adc
ins
mov
push
repnz
add
call
push
dec
lahf
xor
mov
mov
bound
jne
sbb
sar
jnp
fdivr
jp
icebp
cmp
retf
pop
fisttp
lods
pusha
xchg
int3
mov
pop
mov
mov
xchg
test
add
aaa
pop
jbe
jbe
add
iret
cmp
sbb
push
add
lock
aad
xlat
xor
mov
and
ret
movs
pop
cmp
ss
xchg
movs
cmp
aad
call
cwde
dec
fisubr
or
mov
mov
jg
inc
mov
sbb
add
xor
adc
cld
int
and
enter
sbb
jns
(bad)
sbb
(bad)
and
pop
movs
cmps
fnsetpm(287
stos
inc
scas
stos
(bad)
popf
dec
push
(bad)
stc
pop
lods
fs
test
jb
mov
adc
repnz
cmp
repnz
sub
xor
sbb
fs
lock
pop
xor
jns
scas
es
les
outs
js
xor
shr
inc
(bad)
dec
ins
inc
mov
adc
or
call
dec
int3
jns
jb
pop
xchg
xor
xor
pushf
jo
xor
shr
pop
xor
push
fadd
inc
jp
sbb
retf
nop
inc
shl
mov
pop
pop
pop
out
retf
mov
(bad)
out
cs
push
mov
int
inc
outs
sub
loopne
rol
mov
sub
pushf
sbb
loop
cs
in
popf
jmp
fwait
jl
loop
cmp
outs
popf
or
xor
mov
shr
jmp
push
jo
or
dec
push
repnz
out
loop
dec
push
adc
sub
mov
jp
loopne
sub
rcr
je
xlat
push
test
ja
ja
fimul
out
xchg
div
idiv
jnp
outs
(bad)
jge
push
and
nop
push
fisttp
and
pop
cmp
push
cli
inc
adc
pop
mov
add
xchg
add
xchg
das
(bad)
and
loopne
(bad)
aaa
adc
into
dec
pop
or
mov
xchg
mov
iret
inc
mov
inc
aaa
mov
jge
retf
in
sub
test
push
xor
dec
ja
ja
xlat
xor
rol
rol
loop
stos
add
dec
push
push
push
push
repz
jbe
sbb
sti
adc
in
aas
imul
xchg
push
fucomp
mov
lods
inc
and
nop
sub
loop
xor
mov
js
test
das
sahf
jnp
popf
out
cmovs
test
xlat
push
or
mov
mov
adc
mov
cmp
dec
call
test
add
mov
mov
(bad)
(bad)
push
xor
sbb
in
dec
aad
sbb
mov
enter
pop
dec
push
rol
or
fwait
sbb
(bad)
or
push
mov
fisub
dec
mov
mov
ins
bound
sbb
in
mov
sub
pop
xchg
mov
inc
sub
out
pop
fistp
add
hlt
cmps
mov
mov
pusha
lods
cmp
xor
fst
leave
or
and
gs
retf
add
mov
dec
sbb
ror
bound
aad
or
ret
jg
fistp
inc
in
cmp
shl
xchg
or
push
and
icebp
or
out
stos
mov
hlt
dec
push
inc
sub
push
rcr
pop
adc
(bad)
cld
xor
popf
(bad)
jb
hlt
aam
jo
mov
push
jnp
in
mov
(bad)
inc
addr16
retf
xor
jg
xlat
and
push
cmp
jne
in
addr16
xor
popa
jb
jne
cmp
or
test
push
and
dec
fs
popa
xchg
inc
mov
mov
sbb
jl
retf
sub
jecxz
in
std
mov
sbb
and
push
and
xchg
fs
sub
mov
leave
nop
mov
sbb
fadd
sbb
retf
icebp
(bad)
dec
dec
test
in
mov
mov
mov
inc
sub
jno
push
sbb
out
scas
clc
pop
mov
stc
sub
add
repnz
xchg
fmul
xor
movs
push
and
jne
les
inc
loopne
push
mov
push
xchg
fcom
cmp
cmp
sbb
pusha
shr
add
imul
mov
(bad)
fcmovnbe
scas
ret
leave
cmps
pusha
xor
fadd
test
les
popf
cmp
lds
adc
imul
lock
cmp
fidiv
mov
inc
shl
add
push
adc
movs
mov
jge
dec
xlat
pop
enter
jge
test
add
pop
fld
push
cli
ins
xor
push
fild
xlat
rcr
test
jae
fild
ss
pushf
mov
int
push
stos
into
retf
mov
ror
jle
dec
sub
add
add
add
add
jmp
add
and
add
add
add
add
add
add
adc
add
add
pusha
add
add
add
add
add
add
add
fucomip
add
add
add
add
add
add
add
add
mov
jmp
add
add
pop
imul
jmp
add
add
add
retf
ins
stos
xchg
add
add
add
add
add
add
add
add
add
add
add
int
add
mov
ins
add
add
add
add
add
add
add
add
add
add
pop
add
add
cli
add
mov
add
je
add
add
add
add
add
add
add
add
adc
hlt
add
fadd
add
test
add
add
add
add
add
rol
add
cmp
adc
dec
ds
cli
xchg
or
sti
mov
xchg
pop
mov
cmp
mov
into
xchg
xor
xchg
test
retf
jp
fsub
(bad)
(bad)
push
pushf
cmp
add
mov
out
and
mov
sbb
hlt
aad
mov
push
outs
mov
fstp
out
push
jbe
xchg
mov
imul
push
pop
lahf
jbe
ret
ret
movs
push
or
mov
aas
in
les
test
hlt
scas
das
sub
leave
xchg
and
mov
jno
adc
inc
and
movs
xor
pop
sub
aaa
pop
in
adc
lea
or
inc
cmp
jl
inc
lock
retf
lock
push
push
cli
movs
inc
push
ror
cmp
ficomp
push
or
in
or
neg
jmp
retf
call
(bad)
xor
or
push
je
ss
mov
dec
in
mov
es
bound
mov
das
fiadd
in
pop
mov
clc
loope
cmps
pop
mov
cld
repz
push
ins
out
mov
loopne
push
popa
add
push
inc
sbb
push
mov
loop
ret
loope
add
imul
test
pop
fcmovbe
adc
leave
xor
mov
or
in
or
test
je
test
pusha
fwait
xchg
stos
dec
or
jo
loopne
ins
scas
pop
and
sbb
ret
movs
push
leave
loope
mov
retf
stc
xchg
iret
rcl
jb
push
inc
jp
out
cmp
dec
add
(bad)
jg
je
adc
fild
fmul
mov
jae
inc
add
jbe
mov
push
xor
scas
dec
loopne
pop
pusha
fisttp
cmp
xchg
pop
div
inc
xchg
movs
xchg
jns
cmp
retf
mov
pushf
rdmsr
pop
sti
pop
das
stos
jae
adc
enter
adc
ret
jge
test
push
mov
jge
jmp
dec
pushf
mov
sub
push
mov
mov
jge
cmp
inc
nop
pop
pushf
adc
fcomp
repnz
leave
fidiv
loope
or
xchg
icebp
push
adc
movs
shr
shl
pop
cmp
jno
arpl
pop
jecxz
inc
outs
js
xor
sub
iret
loop
out
cmc
ins
pop
dec
jmp
add
jg
inc
fbld
loopne
addr16
adc
out
lahf
inc
ja
aad
xchg
xchg
test
outs
loop
inc
movs
mov
inc
jle
inc
pop
ret
fiadd
mov
dec
xchg
dec
sbb
fisub
out
push
(bad)
mov
test
aam
std
jp
mov
dec
or
dec
pop
in
pop
loopne
outs
in
push
add
shl
jl
xor
sub
cmp
and
jnp
cmp
pop
push
out
mov
push
les
pushf
stos
scas
cmc
add
ror
inc
push
loopne
xor
or
add
xchg
psubsb
xchg
jecxz
and
pextrw
xchg
iret
add
cmp
push
mov
ss
mov
pop
pop
stos
mov
clc
fpatan
and
test
pushf
leave
mov
test
pop
movs
mov
call
iret
out
dec
pop
bound
xor
and
add
pop
das
cmps
ja
inc
mov
sbb
xchg
push
aad
xchg
jmp
sar
xchg
xchg
aam
jae
xor
push
loope
aaa
pushf
and
repnz
ficomp
jno
cmp
mov
fsubp
fcomp
and
mov
sub
lds
rcr
push
mov
test
cmp
xor
add
les
and
sbb
jg
push
mov
test
inc
sub
or
cli
mov
shl
bound
jmp
dec
sbb
cld
stos
out
xor
mov
dec
xor
mov
call
fsub
mov
rol
jp
add
(bad)
pusha
or
dec
mov
std
push
mov
mov
mov
loopne
sub
loop
xchg
and
ret
jge
in
push
push
push
fucom
mov
cli
out
(bad)
xchg
shl
sahf
ret
pop
sbb
sahf
add
add
push
pop
push
div
(bad)
push
xchg
mov
pusha
mov
xchg
dec
icebp
pushf
mov
inc
pop
inc
(bad)
ds
jle
xchg
inc
repnz
test
lods
sar
(bad)
xor
pop
adc
es
or
inc
pop
ja
std
pop
cmp
rcr
cmps
scas
into
sub
sbb
xor
cli
test
pop
sub
dec
out
int3
mov
or
push
daa
ror
sub
movs
cmp
jno
jo
jmp
jbe
(bad)
mov
push
add
rcl
movs
mov
cld
test
pushf
adc
adc
ud0
push
leave
adc
ss
shr
test
xor
repz
retf
mov
test
jmp
pop
fs
test
scas
fwait
ds
mov
mov
addr16
mov
mov
(bad)
jmp
mov
(bad)
cmp
cld
xor
aam
enter
fabs
popa
cli
or
sbb
mov
pop
push
in
ror
jae
popf
jge
lods
push
je
test
adc
test
push
xchg
outs
fcom
inc
sahf
repz
sbb
push
outs
xor
aaa
rcl
pop
imul
mov
loopne
or
push
xchg
dec
(bad)
xchg
aam
stos
js
in
jno
icebp
or
xor
sub
fdivr
adc
sahf
test
xchg
pop
mov
mov
test
mov
(bad)
aad
pop
push
dec
inc
pusha
leave
jle
sub
scas
ret
dec
cmp
dec
aaa
sahf
in
fwait
(bad)
into
mov
sbb
sbb
cmps
xchg
push
inc
sub
int
xchg
jg
add
(bad)
jmp
push
aaa
cmp
adc
aam
pushf
test
cmps
xchg
pushf
bound
mov
repnz
cwde
and
repz
lahf
or
cmc
cwde
xchg
push
mov
or
mov
test
enter
sar
rol
jg
inc
push
mov
ret
jl
aad
mov
aad
xchg
enter
aam
pusha
popa
xchg
xchg
add
aam
jle
dec
sti
or
xor
mov
sbb
sar
adc
jge
sbb
sti
mov
or
aad
aad
xor
push
add
je
aad
and
push
adc
or
stos
leave
add
pop
test
push
xchg
hlt
ja
inc
out
dec
and
add
jle
inc
xchg
sub
lods
mov
fisub
push
in
xor
(bad)
loopne
xchg
mov
push
inc
out
cmp
cwde
lds
shl
jns
cmp
sbb
pop
je
scas
test
lods
push
pushf
push
enter
xchg
pop
inc
sub
int
jg
fsubr
xor
add
pop
xchg
sti
push
pop
repz
mul
loope
ins
xor
fnstenv
and
cmps
cmp
mov
out
dec
into
adc
push
xlat
pop
cs
es
dec
add
xlat
das
(bad)
mov
and
jne
fnstenv
cmp
jg
add
stc
out
mov
push
test
pop
loope
adc
xchg
inc
rol
(bad)
mov
sbb
or
arpl
cwde
pop
outs
(bad)
pop
cmps
pop
loopne
jne
dec
xchg
fdiv
icebp
xchg
aam
out
jg
sti
into
mov
jl
adc
jmp
xchg
(bad)
mov
movs
fstp
aaa
jmp
lea
dec
or
call
cmps
or
xchg
mov
xor
push
ficom
scas
cmps
stc
adc
inc
enter
fmulp
aad
add
cwde
xchg
les
(bad)
jp
or
mov
push
sub
pop
push
icebp
jno
push
pop
imul
sbb
ins
imul
mov
mov
loope
or
cmp
inc
shl
add
or
pushf
and
rcl
xchg
adc
add
jno
pusha
inc
push
lods
and
mov
or
aam
xchg
adc
pop
test
jecxz
cmc
mov
adc
outs
call
sub
lock
adc
push
sbb
js
mov
clc
mov
or
lds
mov
mov
cmp
cli
jne
xchg
sbb
bound
jmp
and
sbb
mov
shl
mov
outs
mov
mov
dec
dec
mov
mov
xchg
scas
push
sub
inc
sti
adc
mov
js
inc
mov
cwde
sub
out
les
mov
cli
and
mov
xchg
xlat
jb
mov
mov
xchg
pop
mov
nop
mov
out
mov
repz
in
or
fs
je
stos
add
lock
jbe
adc
add
push
aaa
mov
out
aad
shl
jnp
xchg
shr
sahf
pop
sub
cmps
iret
ror
xor
jmp
cld
inc
mov
mov
dec
xchg
inc
push
xor
sub
clc
ins
dec
pop
ret
cmp
(bad)
dec
mov
jno
mov
(bad)
cmp
push
xor
in
adc
pusha
outs
test
popa
ret
jmp
mov
cmp
mov
ins
sbb
daa
(bad)
out
leave
adc
ins
outs
and
push
stos
icebp
es
mov
push
sub
mov
xor
mov
cs
mov
retf
in
mov
call
sub
leave
mov
add
push
push
out
mov
mov
out
push
sub
outs
cmp
lea
mul
leave
pop
in
stos
cmp
int3
fs
sbb
mov
jae
mov
inc
std
mov
mov
sub
xor
iret
jge
leave
setae
retf
loop
xor
outs
inc
fidiv
int
add
and
shl
add
jl
ja
cmp
mov
pusha
mov
mov
inc
lock
mov
xor
in
and
and
std
jmp
adc
adc
adc
outs
mov
aaa
daa
gs
sbb
or
add
mov
jne
add
dec
add
add
add
pusha
add
add
mov
add
inc
loopne
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
into
inc
add
add
add
in
add
mov
rol
add
aas
add
add
add
add
arpl
add
add
add
add
xchg
add
add
add
add
add
call
add
add
add
in
pop
add
mov
cmp
add
add
add
add
add
add
add
add
stc
add
add
test
add
or
xor
sbb
cmp
es
pop
push
xchg
push
mov
in
xor
xlat
mov
ror
and
push
mov
loopne
pop
mov
fwait
cmp
dec
fcomp
movs
popa
sub
inc
push
aas
pop
xchg
ss
jle
and
mov
lea
pop
loop
pop
xor
mov
pop
mov
jo
fisub
dec
and
outs
inc
push
icebp
add
xchg
xchg
gs
pop
sahf
nop
movs
mov
in
fsub
popf
iret
mov
push
mov
xor
push
call
clc
and
pop
jae
pop
or
call
mov
loope
je
outs
fidivr
stos
mov
jnp
repz
mov
sub
push
rcl
adc
fnstcw
je
mov
aam
mov
retf
fnsave
std
out
adc
cmp
into
mov
xor
(bad)
cmc
clc
sub
jp
xchg
lock
add
ins
sub
shl
push
mov
xchg
jge
xor
and
and
loopne
push
(bad)
in
aad
push
fcmovnbe
les
pop
xchg
scas
sbb
movs
gs
xlat
sti
mov
inc
sti
sbb
iret
cli
cmp
icebp
pop
adc
lock
aaa
jle
add
fst
nop
ror
mov
(bad)
pop
std
jg
inc
cmp
out
aam
ja
(bad)
out
cmps
lahf
xor
(bad)
sub
or
mov
and
mov
ret
mov
addr16
xlat
inc
adc
pop
stos
jns
movs
popa
dec
cmp
inc
dec
mov
das
cmp
jo
outs
mov
cmc
xlat
push
test
and
jg
in
dec
lods
sub
push
add
sbb
fwait
inc
adc
mov
mul
inc
jl
out
ds
je
loop
das
push
xor
sub
mov
cmp
pop
(bad)
cmp
ss
out
jg
out
jge
les
les
fstp
ret
in
pop
pop
movs
sub
sub
sar
cmps
inc
dec
mov
gs
ss
aas
das
add
aam
or
arpl
sbb
pop
std
mov
enter
jo
mov
adc
push
xor
mov
inc
mov
cmps
daa
cmp
cmp
test
lahf
loopne
jo
imul
icebp
push
xor
inc
dec
movs
dec
adc
aaa
int
aaa
inc
pop
push
addr16
out
inc
clc
inc
mov
cmp
in
mov
xor
add
fdivr
jmp
shl
xor
jge
jl
pop
push
test
ins
inc
out
repnz
cs
(bad)
(bad)
in
xchg
or
pushf
sbb
mov
inc
cmp
icebp
fist
mov
mov
data16
ret
out
jl
inc
ret
scas
cwde
lods
std
xor
das
fisub
int
jp
not
scas
mov
leave
idiv
test
xchg
call
in
dec
push
dec
lods
stc
pop
inc
adc
mov
jg
ja
ins
or
sti
adc
dec
movs
ins
mov
fidiv
je
cmc
and
int3
xor
jne
popf
lea
movs
cs
adc
repnz
cmp
dec
xor
std
call
inc
call
and
mov
(bad)
test
test
mov
out
mov
inc
lea
mov
mov
mov
cmp
aaa
jae
pusha
pusha
push
sbb
sub
aam
xchg
es
retf
into
add
xchg
mov
pop
popf
xchg
adc
ins
icebp
fwait
sub
(bad)
sti
and
cmps
js
sub
ins
stc
jne
cdq
mov
push
pop
in
inc
sub
xchg
add
test
pcmpgtb
shl
cmp
mov
inc
cmp
sub
fs
xor
adc
into
int3
pop
mov
ja
cmp
or
jle
add
ror
push
and
(bad)
lds
out
push
enter
shr
pushf
jmp
pop
cmp
and
(bad)
jecxz
ret
outs
xor
imul
fstp
cmp
jmp
out
adc
jno
cli
add
jo
sbb
pop
inc
(bad)
cwde
push
sar
dec
fs
ror
mov
or
adc
lods
ret
sbb
je
add
or
scas
push
adc
lahf
test
dec
std
sti
pop
mov
push
out
cmps
call
xor
jnp
ins
push
sti
or
call
jg
fnstsw
scas
push
pushf
je
movs
dec
and
xchg
jae
(bad)
pushf
mov
cmp
(bad)
mov
call
xchg
mov
outs
xchg
mov
call
sub
sbb
mov
cs
ret
ror
jo
cmp
pop
mov
mov
push
xchg
jo
mov
sub
and
mov
call
pusha
jns
sbb
sub
xor
hlt
test
inc
enter
xor
add
inc
or
adc
stc
dec
push
adc
ret
inc
test
es
ins
lahf
mov
jne
and
xor
sub
dec
ins
mov
fidiv
cmc
inc
xlat
sub
jg
fldpi
pop
mov
cli
fxtract
inc
jns
inc
jecxz
inc
xor
and
retf
sbb
sbb
(bad)
repz
push
leave
jecxz
js
mov
dec
jne
in
lds
jnp
mov
pop
adc
(bad)
mov
push
les
jnp
push
push
(bad)
push
ins
and
pop
jmp
cmps
inc
ins
mov
mov
ror
push
bound
cmp
outs
out
xor
mov
arpl
clc
inc
jnp
push
nop
and
shr
in
pop
mov
sub
pop
xchg
cmp
xchg
lds
sbb
stc
pop
sub
cwde
out
jno
dec
out
(bad)
push
pop
add
aas
clc
retf
repz
cmp
cdq
lds
cmp
ss
cld
stc
ror
xchg
inc
xchg
es
(bad)
jl
xor
push
outs
push
outs
popf
pushf
jno
xor
add
xor
(bad)
or
and
mov
adc
lock
xchg
lods
lods
adc
(bad)
iret
mov
imul
and
mov
mov
pop
jae
sbb
mov
adc
jae
retf
jmp
rcr
sub
fstp
cmp
push
push
push
inc
in
(bad)
dec
cmp
jmp
adc
sub
mov
jnp
mov
adc
fimul
scas
cs
dec
push
(bad)
in
push
in
mov
mov
cld
and
adc
fisub
mov
outs
(bad)
fld
rol
or
fmul
mov
aaa
add
inc
adc
adc
xor
ins
jmp
(bad)
popa
jns
in
sbb
lock
leave
mov
or
sbb
ret
test
shl
and
jbe
icebp
dec
mov
jmp
enter
pop
lds
js
or
mov
xchg
stos
cmp
ja
dec
push
das
imul
(bad)
lods
movs
pop
push
dec
sbb
pop
sub
lds
inc
xor
jae
xor
xchg
inc
adc
push
aad
cmp
aad
push
mov
mov
inc
jne
sbb
sub
lods
std
inc
mov
dec
push
push
js
int
repz
xchg
retf
das
jmp
push
int
cdq
into
jp
pop
push
mov
out
test
ror
sub
sub
dec
loope
mov
cmps
daa
add
cmp
add
in
jmp
dec
or
fsubp
(bad)
mov
jmp
outs
lock
mov
sub
jno
and
mov
pop
mov
cmps
mov
inc
addr16
lock
pusha
jb
das
stc
in
or
push
cmp
dec
test
jnp
pop
push
sub
jo
adc
popa
dec
jecxz
inc
jmp
xchg
inc
iret
jb
xlat
mov
pop
jno
addr16
into
inc
sbb
jne
cmp
fldenv
bound
sahf
jl
push
push
pop
push
movs
jbe
ja
or
loop
pop
dec
test
je
push
jl
repnz
daa
std
mov
jg
push
test
in
shr
(bad)
jecxz
adc
xchg
push
enter
rcl
or
pop
sbb
cmp
or
lds
cmps
retf
inc
daa
sbb
cmc
push
popf
mov
pop
ins
int3
or
jb
push
and
mov
lea
pop
cmp
jmp
adc
or
sub
mov
mov
test
add
ja
lods
fdivr
jmp
repz
loope
adc
mov
cmp
(bad)
cli
mov
lods
dec
cwde
mov
cmp
push
adc
push
cdq
call
jbe
stc
adc
clc
fbstp
sbb
fisub
paddw
iret
or
retf
das
adc
lods
jns
sbb
into
sbb
xor
mov
push
in
test
jmp
dec
or
cmp
stc
cmps
adc
push
sub
repz
(bad)
push
xor
loop
in
les
iret
inc
mov
cmp
and
add
sub
mov
pop
loopne
gs
inc
push
es
fist
fwait
popf
jl
dec
je
sahf
out
push
daa
pop
push
push
mov
movs
jp
sti
adc
jo
daa
and
sub
mov
scas
xor
dec
xchg
dec
jmp
jecxz
mov
xchg
call
inc
dec
dec
in
repz
sahf
cmps
push
and
call
jnp
inc
ret
jbe
shr
xchg
dec
adc
sbb
scas
inc
(bad)
call
mov
es
xchg
mov
jbe
cmp
cmp
test
add
inc
cmc
mov
lahf
add
movsx
mov
lods
mov
jns
cwde
aas
in
push
or
xor
dec
shl
rcr
mov
dec
mov
inc
dec
addr16
enter
enter
dec
mov
or
jb
and
clc
mov
pop
ror
add
add
add
add
arpl
mov
add
test
pusha
add
add
add
add
add
add
data16
lock
add
add
add
jnp
add
add
add
add
add
add
add
rol
add
mov
add
add
add
add
hlt
add
call
add
add
add
add
add
sbb
cld
add
add
add
mov
cmp
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
sti
add
add
pop
add
add
add
add
add
out
add
add
ins
mov
cdq
in
mov
and
stos
out
(bad)
out
gs
jmp
push
mov
xor
pop
std
adc
xor
clc
fistp
xchg
outs
push
enter
mov
sti
push
cmp
mov
pop
ds
inc
or
out
jl
sbb
leave
push
inc
int3
cmp
or
mov
xchg
xchg
bound
enter
sbb
sbb
mov
fcom
add
nop
xor
adc
out
scas
pop
xchg
xchg
ret
rcl
cli
arpl
xchg
es
test
sbb
jmp
push
jne
xor
cmps
mov
add
in
cld
and
mov
dec
jge
(bad)
mov
mul
shl
lock
jge
push
adc
push
mov
push
pop
xchg
or
jecxz
push
hlt
fst
push
cmp
ret
int
jne
(bad)
int3
mov
imul
dec
push
xor
cmp
jne
lahf
retf
pop
lods
xchg
mov
retf
push
ret
or
adc
cmc
mov
or
mov
scas
test
adc
xor
pop
xlat
push
mov
jmp
popa
lods
or
movs
jns
femms
hlt
scas
dec
jno
jno
xchg
aad
xchg
retf
test
push
sub
cs
lods
fist
adc
xlat
dec
add
jle
in
adc
in
push
inc
push
fcom
mov
xchg
push
call
cs
xor
hlt
jle
dec
scas
fdivp
push
mov
dec
push
mov
mov
pop
es
cld
mov
mov
cs
or
daa
dec
cs
cs
xchg
mov
das
inc
pushf
mov
xlat
outs
push
sbb
or
cli
add
repz
sub
jecxz
mov
fistp
mov
aas
int3
pop
cli
adc
add
shr
retf
xor
pop
adc
test
mov
adc
add
movs
rol
sbb
ret
inc
leave
jne
aaa
sahf
sbb
cmc
ds
jp
xlat
retf
push
or
pop
mov
dec
and
outs
dec
cwde
mov
cs
pusha
call
pop
mov
dec
inc
loop
pop
add
xchg
pop
jmp
pop
xor
mov
cwde
inc
xor
jae
jmp
xor
or
dec
and
mov
jne
push
jp
jnp
pop
test
ss
ds
dec
xor
adc
mov
fbstp
mov
xor
mov
cmp
push
cmp
jne
dec
push
xor
push
or
rcl
push
ret
jg
mov
pop
inc
jne
inc
xor
jo
cmp
std
sbb
repnz
mov
push
scas
cmp
adc
xchg
jl
ds
inc
popf
aaa
js
retf
sub
jne
mov
adc
mov
xor
popa
clc
cld
jmp
jnp
add
jnp
jg
into
jmp
dec
pop
fsub
pop
movs
and
in
jl
mov
cdq
mov
inc
jle
fcmove
ficomp
pop
push
sti
inc
dec
lds
pop
stos
cmp
jnp
xchg
xor
imul
scas
mov
inc
jp
and
pop
in
pushf
les
xor
nop
push
aaa
dec
mov
dec
push
add
popa
shl
lods
retf
mov
mov
cmp
pop
cld
inc
or
imul
mov
out
jmp
xchg
jl
xchg
in
lods
inc
jl
shl
mov
enter
sbb
lea
pop
and
pop
xlat
fld
test
repz
or
or
test
sbb
aas
aas
sahf
pop
pop
ins
(bad)
aam
push
iret
cmp
adc
mov
and
out
hlt
into
mov
xchg
xchg
push
in
cmp
inc
lahf
ins
xchg
rcr
shl
dec
sbb
lea
data16
outs
cmp
movs
jmp
jmp
push
out
aam
jmp
(bad)
test
imul
das
jno
mov
xor
repnz
movs
sub
pop
jmp
in
push
add
iret
pop
jge
shl
inc
cmp
(bad)
add
push
fidiv
dec
fdiv
jae
js
mov
(bad)
inc
xor
jge
loopne
mov
loopne
mov
mov
inc
or
out
mov
enter
jle
loop
cmp
mov
inc
pop
movs
and
jecxz
sti
iret
xchg
sub
aas
xor
mov
jo
xchg
ja
xchg
icebp
or
outs
sti
adc
add
pusha
(bad)
call
adc
cs
and
and
add
mov
repz
mov
mov
push
pop
lahf
sahf
jne
mov
or
dec
and
add
je
iret
xor
test
pop
fcom
or
test
(bad)
sub
push
dec
icebp
arpl
cmc
ret
jno
(bad)
mov
pop
inc
adc
inc
pop
inc
jge
jecxz
inc
jns
push
xor
mov
and
and
jo
cld
inc
xor
shl
jno
pop
add
adc
sar
adc
jle
inc
mov
fld
jbe
pushf
call
push
jbe
jecxz
test
xor
cli
scas
jb
les
sbb
inc
cmp
test
cmp
push
dec
(bad)
sbb
add
mov
xchg
add
cli
and
sbb
or
cmp
nop
mov
int3
mov
cdq
je
jno
adc
sub
and
push
jbe
push
lahf
jnp
dec
scas
inc
shr
push
jecxz
lods
and
dec
lds
out
pop
mov
adc
push
retf
fdivr
imul
or
adc
lds
aam
leave
inc
(bad)
sub
pushf
mov
ret
fwait
mov
in
xor
sbb
mov
xchg
mov
and
and
cs
(bad)
adc
push
(bad)
pop
retf
repnz
push
(bad)
jle
pop
mov
inc
out
jae
int3
jmp
ret
or
mov
retf
pushf
cmps
lahf
xor
xor
call
retf
fdivr
or
(bad)
rol
cs
sahf
shr
lods
cmp
jl
rcr
jns
xchg
mov
ja
lds
idiv
sbb
jmp
pushf
bound
outs
shl
and
sbb
pop
pushf
test
pop
mov
cmp
mov
adc
adc
mov
daa
sar
xor
inc
dec
retf
fcomp
sar
sahf
fstp
add
jns
inc
imul
inc
mov
xchg
sub
imul
xor
cli
stos
xchg
push
arpl
sub
add
sbb
cmp
sbb
xlat
aaa
shr
cmp
sub
pop
es
das
shl
ret
sbb
leave
aam
jecxz
push
xor
xchg
iret
push
mov
jae
retf
mov
pop
imul
mov
mov
mov
xchg
jg
retf
jne
jp
jo
sbb
repnz
loope
rcr
std
cs
sbb
mov
push
setns
adc
icebp
je
push
mov
scas
mov
or
lock
lods
(bad)
aam
xchg
retf
movs
iret
adc
out
push
ja
jge
jecxz
sub
sbb
mov
into
adc
(bad)
mov
pop
sbb
cmps
imul
rcl
jecxz
adc
jp
adc
mov
lock
or
data16
sub
adc
(bad)
mov
cmp
ins
cmps
dec
sub
(bad)
out
mov
lock
xchg
sbb
pop
cli
adc
cmps
inc
push
sbb
mov
or
xor
test
jno
dec
jle
(bad)
xchg
dec
repz
out
sahf
shl
pushf
repz
cmp
jecxz
out
cwde
push
loope
or
cli
ret
push
add
rcl
mov
xchg
pop
pop
arpl
pop
pop
xchg
dec
pop
xchg
pusha
jmp
les
adc
ss
sbb
iret
rcr
mov
push
xchg
loope
rep
mov
ss
sub
sub
jg
dec
bound
(bad)
jmp
push
and
ss
cdq
repz
nop
dec
xor
cmp
cmp
or
out
mov
cmp
bswap
mov
cld
mov
jmp
mov
cmc
push
ret
movs
sub
(bad)
push
(bad)
xadd
adc
jl
mov
pop
dec
jne
cmova
cmp
ss
imul
add
or
lahf
mov
xor
rcr
(bad)
jae
mov
mov
pop
lock
stos
scas
or
repz
jge
inc
cmp
adc
mov
popf
xor
icebp
mov
mov
cmp
ficomp
iret
test
cmp
mov
aad
or
rcl
sbb
sbb
test
pop
movs
iret
and
outs
test
out
jg
stos
(bad)
push
inc
cli
xlat
cs
stos
pop
iret
pushf
adc
rcr
cmp
push
or
jno
inc
push
pop
mov
inc
dec
inc
jge
pop
pop
xor
(bad)
mov
adc
test
(bad)
pop
push
cmp
(bad)
push
adc
enter
pop
(bad)
mov
push
cmp
lea
or
rcr
jge
push
je
bound
mov
retf
push
and
sbb
leave
mov
ror
lods
idiv
inc
mov
mov
add
mov
mov
sbb
inc
imul
mov
push
or
mov
or
sbb
adc
popf
or
and
aas
pop
xor
pop
or
inc
push
jecxz
mov
loopne
add
cmp
loop
mov
and
fs
js
mov
pop
sbb
lock
(bad)
mov
or
inc
daa
sub
cld
leave
or
sahf
adc
ins
sbb
sub
test
mov
push
mov
pop
mov
test
cdq
ins
dec
in
rol
hlt
in
adc
pop
out
cmps
leave
mov
jge
cmps
xchg
daa
xor
mov
jl
mov
cmp
out
lods
dec
mov
add
inc
sub
pop
cmp
add
xchg
mov
fcom
jle
or
cmp
xchg
add
add
add
add
add
add
inc
add
lea
add
(bad)
add
push
add
add
add
cmp
cld
add
add
add
add
add
add
add
add
hlt
das
add
add
in
add
rol
add
xor
add
adc
add
add
add
add
add
add
add
add
push
add
jns
cli
les
div
push
lea
adc
mov
mov
push
adc
std
fdivr
jno
scas
cli
xor
cwde
sub
cld
jmp
push
xchg
sahf
popa
sub
iret
shl
fld
jb
rol
mov
mov
pop
sar
sub
dec
fwait
loop
dec
dec
adc
in
not
sub
xor
(bad)
fdiv
(bad)
jg
push
cwde
push
mov
sbb
imul
xor
jl
in
sub
add
pop
pop
jnp
call
add
jae
jnp
cmps
(bad)
sub
dec
(bad)
ficomp
test
retf
jo
cld
lods
in
aam
push
pop
inc
jl
xchg
push
ror
sub
int3
mov
imul
mov
mov
test
in
(bad)
cmc
mov
sub
in
xchg
inc
push
iret
test
mov
out
mov
bnd
xchg
ret
adc
(bad)
sar
add
xchg
les
add
lds
sbb
and
add
ror
int3
int3
ds
in
dec
retf
push
mov
out
stos
shr
jl
or
ja
cld
das
mov
test
in
cmps
in
arpl
push
pushf
xchg
jl
in
enter
sbb
pop
fadd
mov
cdq
pop
jmp
(bad)
jp
adc
test
push
int3
fimul
add
mov
retf
dec
push
jmp
fidivr
and
aas
inc
and
cmp
vpmaddwd
paddusb
into
ins
out
leave
cdq
movs
mov
mov
ins
and
mov
pop
inc
jg
pop
push
mov
and
fsubr
pusha
pop
stc
xor
cmp
cmps
aas
cli
mov
into
js
cmp
mov
xor
retf
ror
pop
jg
and
in
inc
(bad)
jp
or
gs
movs
retf
xchg
and
inc
and
pushf
and
out
dec
dec
(bad)
movs
xchg
cwde
sub
shr
mov
ins
jmp
xor
pop
rcl
fiadd
inc
test
inc
call
sub
mov
inc
ins
scas
inc
push
jno
nop
dec
and
cwde
or
xor
dec
out
push
and
push
cmp
jbe
(bad)
mov
fsubr
cmp
(bad)
mov
movs
mov
sub
pop
rcr
lock
push
sbb
mov
push
ret
(bad)
sbb
pop
lahf
pushf
xlat
cmps
jnp
xchg
(bad)
inc
addr16
daa
scas
jo
out
xor
add
fnstcw
sub
scas
rcr
icebp
enter
inc
dec
mov
clc
mov
lds
fld
inc
mov
jmp
shl
cs
push
add
and
mov
mov
cmp
cmp
arpl
jmp
xchg
js
cmps
lea
bound
or
adc
inc
cli
xchg
nop
(bad)
(bad)
std
mov
stos
dec
jle
lods
mov
movs
or
retf
inc
fisttp
cmp
popf
xchg
jmp
sar
lods
dec
jecxz
mov
adc
clc
repz
mov
adc
test
xchg
inc
out
imul
stos
into
add
inc
inc
div
outs
fisttp
ror
imul
ss
cld
mov
pop
and
repz
xor
adc
aas
jmp
arpl
inc
xchg
add
ins
in
pop
fadd
loop
inc
xchg
fsub
inc
mov
iret
adc
ret
mov
sub
xor
cmp
loope
rcl
call
repz
pop
les
nop
arpl
mov
push
es
mov
mov
int
call
inc
or
or
loop
shr
mov
add
cmc
mov
pop
xchg
dec
sti
scas
xchg
mov
add
ret
icebp
adc
adc
aaa
add
mov
in
adc
jno
aad
inc
outs
int
jno
push
sub
inc
jns
cld
pop
cmp
and
out
xor
in
ins
sub
or
xor
ret
pop
mov
cld
xor
xor
leave
adc
mov
inc
stos
fs
sub
mov
add
dec
and
or
jo
jecxz
mov
push
mov
ins
mov
cmp
push
jb
xchg
add
leave
cld
fmul
xchg
scas
inc
test
cdq
fs
mov
push
loopne
enter
jmp
xchg
or
adc
jg
lods
add
sbb
pop
out
icebp
movs
push
loopne
push
imul
or
push
dec
fnstsw
stos
mov
dec
shl
(bad)
jae
xchg
call
test
jl
or
jbe
push
adc
mov
adc
inc
add
or
pop
lea
mov
je
inc
fstp
out
rcl
xchg
dec
add
hlt
xchg
(bad)
dec
inc
nop
dec
ret
(bad)
stos
mov
bound
outs
in
fild
cli
stos
push
push
aad
jecxz
out
out
pop
sub
pop
out
gs
xlat
(bad)
sbb
jge
pop
repnz
daa
cmp
mov
sbb
dec
(bad)
pusha
fwait
test
sahf
shl
cmp
inc
in
call
fcomip
mov
adc
and
cld
lahf
mov
pop
clc
mov
aas
xor
scas
repnz
popa
(bad)
sbb
aaa
xchg
in
add
lods
ficom
rcr
clc
xchg
nop
loopne
pop
test
push
push
pop
ror
ret
pop
jmp
ins
out
iret
cmp
aas
xor
sbb
push
jle
fstp
jecxz
cdq
inc
int
clc
popf
ins
jmp
sub
push
in
in
hlt
idiv
stos
das
aad
jp
push
aam
xchg
mov
sti
mov
rol
scas
jecxz
cmp
test
sbb
or
int
sbb
cwde
retf
pop
sub
pop
call
xor
mov
inc
sub
popa
out
mov
mov
jbe
sub
sbb
dec
das
xchg
sbb
(bad)
adc
pop
imul
xor
out
ret
out
stos
dec
scas
xlat
pop
hlt
out
cld
and
xchg
push
gs
mov
int3
adc
pop
imul
neg
pop
ret
call
inc
loop
ja
mov
add
add
cmp
sbb
add
in
pop
in
or
mov
xchg
mov
das
mov
(bad)
jbe
mov
popf
test
fadd
mov
jp
(bad)
push
adc
mov
push
(bad)
addr16
cmp
movs
or
pop
in
and
ja
pop
dec
jecxz
xchg
scas
dec
das
les
arpl
sar
pop
mov
ret
inc
test
xchg
add
sbb
jp
xchg
mov
into
inc
icebp
cmp
call
stos
mov
out
adc
mov
cmp
rcl
ds
mov
add
push
sub
call
sbb
add
add
and
push
jecxz
icebp
cmp
fld
xlat
sti
data16
int
leave
rcr
loope
jae
jmp
data16
inc
jmp
push
lock
cmp
pop
out
jg
addr16
leave
addr16
pop
mov
and
cmp
dec
xchg
out
test
aaa
movs
test
xchg
push
in
inc
add
fisttp
adc
push
in
sbb
jno
ds
mov
dec
push
(bad)
and
mov
push
sahf
sub
es
ret
(bad)
cmp
jecxz
ja
test
mov
dec
and
mov
sbb
xor
or
and
xchg
jno
fs
xor
test
or
test
nop
jno
mov
adc
sbb
mov
call
mov
jl
or
xor
std
ss
push
mov
and
adc
push
mov
call
add
adc
dec
and
pop
xchg
jmp
das
add
test
repnz
imul
cs
ret
push
sahf
add
xor
inc
cmp
adc
(bad)
cmp
push
fdiv
push
dec
ss
das
(bad)
pop
push
pop
add
and
mov
lods
sub
mov
repz
adc
mov
hlt
mov
xchg
nop
sbb
cdq
pushf
push
mov
stos
adc
icebp
dec
push
ret
icebp
stos
jecxz
aam
inc
div
inc
pop
sbb
mov
pop
outs
mov
shl
dec
push
adc
xor
xor
jmp
push
movs
not
sbb
push
mov
in
in
xor
mov
lea
cmps
jp
cmp
jae
scas
std
mov
test
mov
or
mov
push
int
cmp
(bad)
lods
jle
and
pop
jge
push
js
xor
sbb
mov
and
sbb
mov
rcl
mov
lds
(bad)
outs
jmp
aad
mov
lods
aad
or
mov
pop
aaa
sbb
hlt
cwde
lahf
and
jo
or
int
pop
mov
int3
xor
jne
ret
adc
jb
inc
adc
sub
arpl
push
dec
xor
lock
int3
call
bound
add
sbb
push
or
pop
mov
mov
(bad)
int3
ret
push
(bad)
pop
jb
ficomp
mov
jb
xchg
dec
mov
out
iret
jecxz
js
mov
adc
fild
and
mov
mov
in
jb
jbe
dec
movs
popf
aaa
ins
test
test
sahf
fs
fsub
jne
xchg
mov
dec
or
cmp
and
xchg
(bad)
aas
mov
mov
fmul
push
mov
les
les
shl
mov
daa
add
(bad)
(bad)
xor
push
fisttp
push
bound
or
mov
add
xor
inc
mov
mov
jg
sbb
lea
int3
push
hlt
push
lds
pop
sbb
iret
aaa
fwait
ss
mov
xchg
sub
fstp
xor
pop
cli
sar
add
outs
cmp
mov
pop
cdq
add
popf
inc
ss
cdq
das
bound
mov
cwde
cmp
repnz
popf
push
push
call
add
add
add
sbb
add
add
add
push
add
add
add
mov
or
jl
add
add
add
add
add
inc
repz
add
popa
add
xchg
add
add
add
add
add
add
add
add
mov
inc
add
cmp
add
add
add
dec
add
add
inc
mov
add
add
add
dec
xor
ror
aaa
mov
mov
xor
iret
imul
scas
call
push
mov
pop
pop
mov
(bad)
gs
scas
mov
in
pop
mov
outs
or
jge
cmp
mov
add
mul
and
test
mov
sub
sbb
pop
jb
add
addr16
int
add
cdq
nop
mov
adc
mov
loope
mov
and
test
in
mov
xchg
daa
lock
loop
and
xchg
inc
(bad)
lea
sub
icebp
inc
nop
jle
inc
push
test
hlt
loope
jge
cmps
or
pusha
pop
sbb
pop
aas
js
pop
out
(bad)
repnz
pop
test
mov
add
cs
cmp
sub
add
mov
cmp
std
inc
or
(bad)
ss
cld
or
mov
or
scas
out
add
cmp
xlat
int
outs
cmp
or
jg
pop
imul
cmp
js
test
sub
jb
cmp
push
or
xchg
arpl
xchg
push
mov
jge
inc
in
dec
pop
dec
push
je
adc
jno
mov
test
pop
fimul
cmp
cmp
mov
icebp
js
neg
lds
jmp
add
aas
xor
cli
and
test
cmp
jno
js
in
test
mov
sbb
sbb
pop
or
dec
aad
lock
mov
out
das
add
xchg
xor
mov
int3
and
xchg
movs
push
loope
ror
sub
sbb
push
out
jge
neg
dec
adc
push
fs
mov
mov
pop
pop
lock
sbb
pop
shr
es
stc
add
pop
ret
mov
mov
mov
enter
cs
scas
add
nop
inc
xor
push
mov
int
jb
xor
ror
push
repnz
cmps
cmps
mov
loop
cmp
xchg
fsubr
adc
sub
mov
mov
or
or
int
into
pop
pusha
loop
push
mov
cmp
stos
pop
js
outs
sub
out
mov
mov
scas
test
or
sbb
ins
ret
cmp
ins
push
aas
retf
mov
adc
add
jmp
fsubr
(bad)
(bad)
mov
push
adc
adc
retf
cmp
ss
das
fisttp
or
sbb
adc
pop
and
adc
repz
cmp
add
fwait
jmp
out
cmp
mov
shl
push
scas
pop
sar
ins
dec
mov
in
sbb
pop
ret
stos
push
inc
mov
in
or
or
mov
aas
out
mov
jmp
push
movs
pop
cmps
scas
adc
mov
xor
jmp
test
sbb
fdivr
adc
push
sbb
sbb
xor
xor
sub
fadd
in
cld
pop
pop
dec
scas
into
stc
ds
push
aad
gs
sub
push
out
clc
cmps
mov
fnstcw
push
cs
loop
call
movs
mov
test
aam
jnp
push
mov
sbb
jbe
lahf
xchg
dec
popf
ret
sbb
or
icebp
mov
pop
enter
inc
es
enter
mov
shr
cmp
ds
test
xchg
retf
pusha
shr
int
dec
xchg
sub
mov
or
jg
stc
lods
stc
cmp
mov
xchg
mov
(bad)
push
addr16
lods
xchg
aam
jbe
nop
or
cld
sub
jae
mov
jbe
sbb
sti
pop
xor
fcmovnbe
inc
daa
xchg
xor
es
mov
das
or
sub
jle
push
sbb
leave
sub
push
shr
mov
dec
sti
sub
dec
cmp
psllw
mov
out
mov
repnz
and
fcomp
inc
test
inc
and
mov
call
fucomi
(bad)
adc
nop
xlat
cmp
inc
loop
mov
sub
xchg
pop
loopne
add
jno
adc
test
daa
(bad)
(bad)
call
mov
movs
mov
inc
mov
sbb
cmp
inc
movs
aas
scas
push
lods
dec
jmp
out
jp
xchg
sbb
cmp
push
not
pop
sbb
bound
les
cmp
or
lods
dec
out
and
ret
daa
ror
retf
cmp
or
adc
scas
or
push
inc
sub
xchg
(bad)
rol
(bad)
jbe
jo
adc
ss
and
sub
mov
add
addr16
push
push
vcvtpd2ps
shl
sub
xor
rep
dec
es
retf
cdq
mov
sbb
xchg
retf
loop
cmp
mov
xchg
mov
ror
add
sti
jae
nop
or
mov
add
aas
xor
or
leave
inc
push
cmps
cwde
div
inc
rcl
test
or
idiv
call
popf
test
adc
cmp
or
add
push
add
out
jmp
in
xor
dec
cmp
xor
(bad)
out
std
call
rcr
(bad)
jg
ret
sub
les
mov
pop
and
xchg
jp
pop
ss
retf
and
cwde
(bad)
stos
ins
scas
pop
test
cmp
push
(bad)
cmps
aas
mov
add
or
mov
sub
call
arpl
mov
xchg
xor
or
ds
inc
lahf
(bad)
inc
add
cmp
movs
in
mov
dec
pop
hlt
outs
mov
fwait
addr16
add
mov
cmp
inc
push
add
mov
je
ja
sar
mov
aad
divps
hlt
ds
inc
in
call
mov
imul
leave
adc
sbb
aaa
fst
xchg
add
xchg
jp
or
ficomp
fs
cmp
dec
mov
test
pop
jl
jnp
test
movs
repz
cmc
rcr
rol
jne
inc
mov
xchg
dec
js
sbb
in
inc
sub
outs
dec
xchg
sub
dec
test
je
sub
fcomp
sub
call
add
retf
push
or
pop
sub
daa
outs
in
cli
test
dec
inc
inc
or
in
cmp
mov
sub
pop
and
xchg
aam
jb
dec
shl
retf
add
repnz
int
hlt
mov
mov
imul
jp
bound
mov
bound
push
jo
cmp
call
or
fbld
mov
rcl
jp
cmp
scas
test
ret
retf
int3
jns
out
dec
(bad)
movs
aaa
int3
sti
inc
into
mov
rcr
outs
je
lods
icebp
cli
push
test
pushf
in
cdq
lods
push
test
out
pop
lahf
cmc
mov
div
stc
lea
popf
cmp
fisttp
pop
addr16
(bad)
mov
mov
shl
or
idiv
fs
add
inc
int
or
pop
push
sub
inc
dec
ficomp
inc
js
int
jle
inc
jo
ret
cli
in
or
sbb
inc
dec
sbb
mov
es
pop
dec
pop
int3
xchg
xchg
sub
mov
adc
ror
dec
hlt
mov
sbb
jae
lds
cwde
dec
cmp
call
xchg
shl
popa
sub
jecxz
inc
pop
mov
push
push
pop
clc
pop
jae
dec
cmp
mov
jne
push
(bad)
rcr
aam
data16
pop
je
push
paddd
bound
mov
imul
pop
adc
cs
pop
loopne
out
repnz
jbe
call
sub
push
shl
in
mov
retf
push
dec
push
shl
popa
int
movs
sub
xchg
and
mov
hlt
pop
xchg
imul
outs
and
xor
dec
pop
fdiv
in
cmp
sar
pop
fdivp
mov
das
ret
jae
dec
sar
mov
slwpcb
popa
addr16
mov
(bad)
fcom
xor
push
jmp
mov
mov
cld
test
adc
xor
jmp
push
mov
add
dec
(bad)
cmp
jbe
push
and
nop
stos
popf
into
pop
popa
sbb
int3
jecxz
das
(bad)
je
out
or
fwait
sahf
dec
ffree
dec
aas
int
xchg
add
movs
pop
addr16
inc
call
sub
fs
xor
pop
(bad)
push
fisttp
and
std
mov
push
dec
add
push
mov
inc
inc
inc
iret
repnz
iret
mov
dec
addr16
retf
xchg
in
cmp
bound
pop
loopne
add
sbb
fcomip
call
push
push
arpl
cmp
retf
(bad)
adc
loope
sbb
xchg
mov
jno
xchg
cmp
push
into
mov
mov
mov
xchg
rol
push
jnp
daa
xor
mov
hlt
mov
mov
pop
popa
xchg
push
imul
xor
mov
mov
jb
pop
data16
pop
add
and
push
jns
fucomp
adc
(bad)
and
jmp
mov
ret
stos
fstp
xor
xchg
lea
push
outs
and
cld
std
mov
(bad)
pop
cmovno
(bad)
addr16
ja
rcr
sti
and
pop
jmp
add
stos
jno
leave
rcl
add
xchg
test
mov
sti
xor
jb
(bad)
cmps
scas
fsubr
push
test
int3
(bad)
and
outs
cld
mov
fild
(bad)
dec
rcl
add
sbb
and
inc
lock
xor
fst
sahf
pop
ss
sbb
inc
das
inc
mov
cld
sub
addr16
mov
(bad)
fmul
retf
push
(bad)
mov
xchg
cs
adc
xchg
lahf
retf
mov
popf
icebp
les
xor
mov
mov
pop
jmp
out
add
add
and
popa
add
add
pop
outs
add
in
add
inc
add
(bad)
add
test
add
add
add
add
add
add
add
add
add
inc
and
add
add
add
jbe
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
push
jl
add
add
add
sahf
add
add
add
add
add
add
push
add
add
add
add
push
cdq
add
add
add
add
or
add
add
add
add
add
add
out
add
add
add
add
add
aam
add
add
rol
add
add
mov
add
add
fdivp
add
add
add
add
add
add
add
add
add
add
add
and
add
push
add
add
js
mov
pop
es
mov
ins
ds
dec
and
or
in
iret
push
xor
mov
sbb
clc
pop
cmp
sete
cs
sti
outs
mov
out
lock
enter
jne
dec
in
arpl
repnz
fiadd
jb
cmc
inc
pop
fstp
adc
ret
shr
bswap
sbb
pop
bound
xor
cmp
outs
ret
pop
jmp
mov
push
mov
jb
aaa
aas
out
adc
mov
or
fld
inc
push
xchg
dec
sub
mov
popa
add
in
xchg
(bad)
retf
inc
dec
mov
and
jmp
pop
or
jb
fcomp
es
dec
and
mov
leave
sbb
mov
ret
mov
sar
popa
(bad)
sub
pop
add
push
enter
pop
and
pop
sbb
jg
cmps
push
jmp
popa
cmp
pop
imul
or
jmp
push
ss
mov
push
retf
and
push
cmp
or
xor
push
dec
and
lds
add
into
mov
stc
mov
jnp
cmps
sub
sti
add
clc
jmp
mov
cmp
push
clc
inc
in
pop
(bad)
adc
hlt
iret
int
pushf
enter
sar
pop
fidiv
adc
xor
and
fimul
lods
es
repnz
mov
stos
add
rcr
adc
or
push
xor
test
fadd
and
shr
(bad)
cmp
push
cmc
fstp
(bad)
xor
outs
stos
outs
stos
jns
adc
mov
es
sub
rcl
sti
sar
call
jg
add
(bad)
ret
and
out
mov
mov
dec
out
add
sub
adc
inc
mov
int
test
cmp
lds
int3
imul
cmc
inc
dec
pop
out
mov
dec
mov
imul
mov
xor
or
jb
in
repnz
and
adc
add
imul
inc
and
jl
dec
adc
test
xchg
dec
mov
repz
ror
nop
enter
rol
inc
sub
push
lods
dec
add
pop
int3
icebp
test
pusha
and
ficomp
push
ficomp
add
jno
sbb
call
lds
hlt
test
dec
xchg
jmp
ret
dec
push
inc
xor
jp
repnz
add
push
leave
outs
(bad)
dec
xchg
in
iret
rcl
stos
pop
mov
and
fstp
xor
test
call
mov
outs
cmp
movs
xchg
fidiv
cld
scas
neg
cmp
fisttp
dec
(bad)
push
and
push
jl
and
pop
jmp
mov
popa
mov
mov
sub
stos
mov
xor
daa
sbb
hlt
scas
xchg
(bad)
in
sbb
lods
or
shl
nop
mov
lods
dec
cmps
js
icebp
imul
or
push
jns
adc
inc
fdiv
inc
pop
mov
push
in
jge
mov
xchg
ds
or
cmps
int
setne
and
mov
in
loopne
mov
jae
retf
dec
retf
mov
xchg
dec
pop
aas
mov
loopne
inc
out
mov
inc
shr
fisubr
std
mov
(bad)
test
test
cmp
mov
shl
mov
xchg
sbb
dec
or
scas
ja
retf
jo
mov
inc
and
enter
lock
lods
cmc
inc
fld
sbb
in
xchg
pop
and
xchg
popf
scas
lahf
push
les
ror
retf
lock
stc
mov
pop
xchg
jae
dec
bnd
stos
cmp
jg
lds
loopne
jp
test
push
add
mov
xchg
add
std
int3
repz
loop
mov
push
push
pop
cmc
jo
into
mov
sub
bound
jb
popf
sbb
or
fdivrp
jbe
add
in
sbb
mov
(bad)
iret
lods
sub
lock
repz
ja
pushf
jmp
out
fist
and
pusha
in
in
mov
xchg
cmp
aad
adc
stc
ins
push
neg
inc
cmp
cmp
int
push
mov
sar
retf
dec
or
or
push
lock
daa
adc
xlat
loope
mov
repz
dec
inc
fsubr
mov
or
fnsave
mov
cmp
sbb
pop
in
jbe
jnp
adc
adc
pop
add
cmp
cli
fdiv
bound
jecxz
and
push
push
aaa
lea
or
xchg
int3
dec
out
mov
sub
pop
in
pop
test
rcl
jb
jmp
stc
and
mov
clc
movs
inc
xchg
push
sahf
add
push
add
jl
add
add
adc
jmp
neg
cmp
shl
mov
sub
xchg
pop
jl
jle
and
jle
dec
pop
aam
jno
cld
ja
aad
mov
gs
push
cdq
je
outs
test
sub
int
mul
popa
sbb
fsubr
add
gs
outs
out
mov
add
pusha
lock
das
out
xchg
xor
repnz
not
mov
call
xor
cli
pushf
das
dec
pop
loope
jbe
mov
in
vshufps
jle
(bad)
stc
dec
and
fwait
pop
sub
shl
in
lea
jge
jbe
ds
fisttp
adc
push
jnp
test
aad
push
adc
outs
ficomp
fldcw
mov
mov
add
imul
repz
push
movs
and
xchg
sub
adc
jp
lea
cdq
jl
xchg
pop
shr
xchg
ror
sahf
push
sub
push
sbb
inc
nop
sub
dec
test
cli
adc
jo
sbb
jo
ds
into
inc
and
mov
lds
dec
ins
loop
test
ss
dec
in
lds
or
xor
das
mov
push
sub
lods
mov
repz
mov
je
repnz
and
dec
or
jl
dec
and
pop
sbb
xchg
add
xchg
push
xor
arpl
lea
and
fcmove
call
out
mov
cld
pop
sub
pusha
sti
mov
dec
pop
arpl
addr16
xor
push
lock
(bad)
iret
jl
sub
(bad)
fnstenv
add
and
push
sahf
fcom
imul
cli
add
jno
or
les
ins
push
cmp
push
add
aad
(bad)
add
mov
inc
cmp
jg
iret
dec
out
push
shl
add
xor
popa
mov
xchg
cmps
(bad)
and
mov
and
mov
nop
add
stc
xchg
or
je
stos
das
push
dec
cs
ja
pop
imul
fsub
sbb
mov
gs
push
hlt
mov
jnp
jl
or
idiv
push
into
ins
mov
jmp
sub
pop
jmp
retf
es
popf
in
xlat
inc
inc
xor
popf
popa
pop
lods
add
add
and
aas
dec
mov
(bad)
adc
je
(bad)
jne
add
add
nop
ffreep
test
or
mov
popf
outs
and
call
jae
mov
adc
pop
xchg
dec
xor
movs
add
lock
and
add
mov
pop
jecxz
mov
imul
retf
lock
inc
and
pop
cmc
popa
sar
stc
xchg
push
ins
push
shl
ds
sbb
cwde
and
sahf
xor
push
pop
imul
add
imul
repnz
sbb
mov
ds
jecxz
sub
(bad)
inc
clc
ret
push
dec
and
jo
cmp
enter
repnz
dec
adc
out
repnz
xor
sub
jl
mov
dec
dec
shl
cdq
outs
pop
rol
mov
fucom
out
xchg
pop
outs
scas
bound
mov
sbb
push
dec
gs
rcl
test
pop
adc
ja
jmp
push
xor
leave
pop
in
imul
js
xchg
ins
xor
fdivr
pop
pop
pop
std
pop
lods
int
mov
sar
and
and
or
adc
ficomp
mov
sub
sahf
sbb
jae
addr16
pushf
(bad)
pop
cmp
aad
or
xchg
mov
cmc
(bad)
(bad)
loopne
fwait
cli
out
cmp
addr16
push
mov
sub
mov
lahf
cmp
out
or
int3
popf
jbe
mov
mov
and
retf
pop
adc
jbe
call
nop
add
xor
pop
mov
and
aas
(bad)
test
xlat
and
lahf
fwait
pop
dec
neg
fmul
xlat
push
and
push
jns
mov
jge
test
and
xor
sti
popf
daa
loope
test
dec
mov
daa
(bad)
(bad)
pop
push
sbb
ds
push
xor
mov
rcr
ss
out
cmp
mov
inc
in
pop
(bad)
mov
(bad)
and
add
or
pushf
push
test
xor
aam
jnp
test
(bad)
jb
cmc
dec
xor
gs
test
add
jl
rcr
dec
pop
jp
dec
xchg
dec
cld
pop
dec
dec
xor
out
sub
fmul
cmc
pop
jns
call
adc
in
inc
not
test
ja
jmp
xor
in
movs
cmp
fidivr
pop
add
(bad)
cmc
jl
(bad)
jno
sub
(bad)
fcmovnu
mov
sub
jg
pop
sub
ja
pop
leave
into
lock
and
movs
cmp
div
push
ds
fstp
push
and
xchg
aad
adc
imul
sub
test
jnp
mov
add
es
mov
imul
push
inc
shl
or
ins
scas
icebp
adc
pop
dec
cmp
mov
mov
scas
mov
test
add
pop
inc
push
aad
or
xchg
push
dec
arpl
lock
aas
dec
adc
xor
dec
popa
ins
fdivr
in
(bad)
push
xchg
std
repz
test
pop
sub
jb
adc
into
jle
shr
add
jb
add
add
retf
add
add
add
add
add
add
add
leave
in
add
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
pop
add
add
add
add
add
add
push
mov
add
add
add
test
jb
mov
add
mov
add
add
add
add
add
fsubp
sbb
jnp
or
paddq
dec
dec
fiadd
mov
fnstenv
jnp
repnz
enter
call
adc
xor
pop
jae
test
mov
sti
cmp
fdiv
std
aam
mov
sbb
nop
push
imul
arpl
mov
cmps
jmp
mov
loope
and
scas
mov
and
repz
jl
dec
out
mov
int3
xchg
jnp
(bad)
inc
push
add
jmp
sbb
test
int3
mov
fmul
jnp
dec
dec
(bad)
cld
ds
xchg
adc
or
inc
push
fcom
mov
push
jp
inc
cmp
ror
repz
xchg
call
repnz
daa
mov
sbb
jmp
xor
jp
jp
mov
mov
out
sbb
push
jnp
call
dec
bound
jns
int
jo
push
pop
jae
push
lds
mov
pop
add
xchg
out
and
pusha
fsub
aaa
ds
add
(bad)
sbb
sub
add
mov
pushf
add
bound
arpl
dec
lock
inc
or
sub
push
ins
sbb
jge
or
adc
dec
sub
adc
or
pusha
mov
out
shr
mov
xchg
mov
cld
jmp
fidiv
jo
test
sbb
mov
dec
mov
pop
test
loope
out
shr
adc
imul
fs
ror
mov
popa
adc
aam
jns
cdq
xor
aam
std
or
fwait
dec
daa
inc
rcl
iret
sti
les
nop
(bad)
jnp
cwde
add
aaa
loopne
sbb
test
mov
aaa
dec
add
mov
cld
cdq
pop
xchg
call
js
mov
mov
jae
dec
push
pop
jp
or
mov
push
adc
pop
dec
mov
dec
(bad)
(bad)
xchg
push
imul
jmp
movs
fistp
cmp
lds
push
(bad)
mov
lock
push
repz
sub
mov
mov
pop
xchg
add
lods
pop
cmp
mov
push
test
push
(bad)
mov
loopne
cmp
xor
pop
cmp
rcr
cld
xchg
mov
jmp
sub
cmps
xor
push
ds
out
sbb
adc
outs
lock
outs
std
jae
dec
sub
and
arpl
fstp
push
adc
lahf
sub
ds
push
xchg
add
out
repz
inc
add
ret
push
fsub
sub
jp
mov
pop
mov
test
mul
(bad)
mov
mov
xchg
push
into
inc
aad
pop
movs
pop
test
sti
repz
shl
mov
stos
jo
stc
fidiv
dec
mov
ss
lods
or
fwait
shl
mov
gs
imul
js
leave
sbb
femms
cwde
out
sub
sbb
imul
call
mov
repz
stos
xchg
enter
mov
les
cmp
xor
jle
imul
or
jns
sbb
das
jne
in
mov
push
stc
retf
gs
stos
test
dec
lahf
dec
dec
inc
xchg
inc
dec
cld
mov
cmp
dec
dec
sbb
mov
aaa
mov
sahf
mov
push
inc
or
fcos
pop
cdq
call
push
pushf
push
inc
push
test
test
inc
fsub
sbb
sub
ins
push
retf
(bad)
aas
or
arpl
adc
daa
outs
sub
sub
repnz
cs
sub
outs
push
in
mov
jno
xor
mov
xor
repnz
mov
ror
retf
sub
shr
(bad)
imul
mov
test
rcl
fsub
push
lods
cmc
out
jne
std
out
sbb
sub
ret
fwait
in
enter
js
(bad)
mov
(bad)
jbe
lahf
push
loop
stos
lahf
add
inc
inc
(bad)
xchg
xor
and
in
sar
sub
inc
mov
icebp
jne
int3
or
jg
int3
aad
out
dec
push
cmp
movs
nop
sbb
sbb
adc
pop
xor
sbb
jl
pop
mov
dec
xor
xor
in
jmp
sub
enter
or
fldenv
xchg
mov
jl
pop
iret
xor
ror
jbe
xchg
lock
into
jge
imul
add
inc
(bad)
and
pop
popa
mov
pop
or
jmp
push
push
out
sbb
ret
cmps
mov
mov
retf
mov
xchg
xchg
and
push
out
or
mov
ins
sbb
mov
jbe
enter
mov
mov
mov
stos
imul
xchg
outs
pop
adc
cmp
call
stc
fadd
adc
leave
push
sub
movs
iret
and
repnz
or
inc
push
mov
cmp
das
cmp
loop
xchg
push
jge
mov
jne
cmp
(bad)
cmc
scas
sahf
xor
dec
(bad)
call
test
mov
jne
imul
cmp
mov
push
mov
test
pop
rcl
and
sub
jno
sbb
arpl
or
jl
pusha
cmp
jb
(bad)
mov
fbstp
je
xchg
hlt
pop
daa
scas
cmc
stos
push
push
bound
mov
scas
mov
outs
add
adc
sbb
push
(bad)
mov
cmc
pop
fst
bound
push
adc
loop
pop
repz
fisttp
lods
pop
or
scas
jl
mov
sub
ret
mov
mov
push
xor
cs
ja
sbb
or
in
pop
mov
imul
fwait
neg
rcl
pop
inc
sub
popa
mov
jo
retf
daa
jb
inc
sbb
(bad)
jle
ds
dec
in
rcr
add
cmp
or
xor
xor
test
sar
rcpps
movs
or
retf
push
xor
mov
and
lods
pop
and
or
jmp
or
xchg
sub
cmp
std
mov
and
mov
or
push
inc
xor
jg
mov
(bad)
lods
or
push
push
cmp
repnz
and
pop
sub
and
and
or
sub
cmp
jns
sti
xchg
sub
jbe
inc
mov
out
lock
sub
or
pop
jmp
imul
jmp
inc
pop
jmp
lods
mov
jno
ins
mov
inc
and
sbb
mov
add
retf
idiv
stos
xchg
cmp
js
mov
xchg
inc
or
outs
std
mov
fbstp
lock
test
pop
shr
mov
mov
mov
mov
adc
and
add
retf
pop
js
outs
xchg
aas
cs
pop
mov
arpl
sbb
adc
stc
cmps
cli
jb
mov
out
push
cwde
mov
retf
sbb
jmp
int
stc
mov
scas
pop
mov
ins
popa
xchg
xor
add
adc
iret
dec
arpl
xlat
fidiv
xchg
push
mov
push
aam
sbb
pushf
mov
out
xor
mov
xor
jbe
push
sahf
je
cs
mov
push
adc
aas
shufps
ins
mov
sub
jg
sti
jle
xor
push
pop
mov
in
jg
test
jp
add
aad
pusha
addr16
popa
mov
sub
loopne
mov
les
test
or
sub
popf
jae
push
cmp
inc
fwait
jno
cmp
push
stc
sti
dec
mov
(bad)
xchg
psubd
and
(bad)
das
adc
pop
mov
aam
fs
pop
push
pop
and
xchg
cli
inc
mov
mov
das
popf
mov
push
inc
add
sbb
inc
pop
add
mov
jbe
inc
cmp
or
mov
pop
mov
xchg
inc
hlt
add
sub
or
mov
inc
popf
sub
mov
sbb
cmp
and
in
add
mov
shr
test
add
fldenv
cmp
fucomp
pop
jmp
mov
or
jns
push
std
popa
out
leave
or
mov
push
push
sahf
push
jmp
movs
pop
sub
imul
jecxz
das
and
add
in
das
push
jae
mov
or
add
inc
outs
gs
and
stc
pop
jns
dec
inc
sbb
ret
sub
in
call
push
loope
or
dec
in
jle
mov
cwde
not
call
ins
inc
push
aam
mov
fs
adc
dec
bound
test
or
jecxz
or
xchg
jl
xor
inc
jns
add
pop
lds
outs
mov
frstor
xchg
pop
cwde
add
cs
loope
arpl
(bad)
data16
mov
sbb
pop
gs
ins
mov
daa
repz
mov
cdq
mov
nop
retf
mov
jo
push
xor
dec
jge
or
jo
push
fst
cdq
sub
not
xchg
mov
call
repnz
push
push
jecxz
inc
pop
lea
movs
push
xor
inc
loopne
fadd
int3
out
sub
pop
adc
enter
rol
dec
and
jp
(bad)
into
and
in
jge
jmp
ret
jbe
inc
mov
aam
leave
cmp
fcomp
jg
leave
loope
fisubr
sub
test
pop
mov
pop
xchg
(bad)
jb
in
xchg
test
push
repz
pop
jmp
fst
out
fwait
(bad)
(bad)
jmp
icebp
ret
push
add
inc
sub
sahf
popa
ds
test
mov
pop
cld
dec
call
retf
jecxz
push
js
(bad)
fild
fidiv
rcl
daa
fist
lahf
test
adc
adc
mov
call
fidiv
sbb
mov
dec
mov
ins
jne
aas
or
movs
and
xor
jne
pop
arpl
push
sbb
and
mov
mov
pusha
push
pushf
es
rcr
pop
std
push
pop
and
(bad)
sti
inc
stos
es
jns
(bad)
cmp
sbb
add
add
add
add
add
add
add
add
adc
add
add
mov
add
xor
outs
and
lds
add
add
test
add
add
inc
lea
add
add
loope
add
add
add
xlat
add
inc
imul
rol
add
add
rol
fmul
add
add
add
add
add
pop
add
add
add
inc
xchg
add
add
add
mov
mov
add
add
add
cmc
mov
lock
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
push
add
into
lahf
mov
xchg
adc
add
fld
add
inc
add
and
jb
push
loope
mov
mov
stos
mov
lock
arpl
in
movs
rcr
dec
std
jge
je
mov
xchg
xlat
cwde
int
je
mov
es
cs
mov
dec
adc
adc
push
xor
or
push
jle
sub
inc
into
ror
inc
bound
stc
xor
mov
leave
dec
jp
pop
push
adc
and
inc
sub
and
out
hlt
or
cmc
jno
xor
and
(bad)
in
cdq
ins
imul
jmp
add
pop
dec
jmp
mov
daa
popa
ds
push
or
loope
or
sbb
sbb
mov
push
call
movs
ret
pop
fistp
sbb
pop
call
out
rol
cli
xchg
cmps
cmp
inc
xor
(bad)
int3
xor
retf
add
and
das
sbb
adc
xchg
loope
mov
cmp
cmps
leave
std
clc
sti
add
imul
jecxz
int
loop
lods
push
add
push
xor
inc
pop
hlt
daa
pop
(bad)
or
cmps
pop
mov
jmp
repz
mov
push
retf
sbb
mov
icebp
aas
xor
outs
jg
arpl
icebp
xlat
xor
fisub
dec
pop
cmp
retf
fnstcw
idiv
stc
mov
mov
(bad)
dec
push
ja
xchg
lea
es
cmp
neg
xchg
movs
mov
jle
rol
sar
push
adc
add
js
clc
sbb
out
sbb
xchg
ret
mov
imul
mov
pop
inc
jg
pop
lods
xor
or
cmps
int
push
imul
dec
mov
mov
lahf
dec
call
imul
nop
aas
inc
adc
nop
cmp
popa
mov
sti
neg
push
jl
jne
sahf
popa
add
in
scas
jo
jmp
pop
adc
js
xor
push
fwait
sbb
out
mov
sbb
ss
mov
mov
push
xchg
cmp
mov
adc
dec
shl
jge
xor
stos
pop
std
dec
mov
xchg
scas
outs
adc
cmp
mov
aad
cmp
dec
pop
mov
mov
stc
adc
jmp
cmc
dec
xor
test
push
cwde
add
nop
push
jo
push
jns
test
(bad)
cmc
pop
arpl
add
(bad)
fsubr
sub
and
daa
or
xchg
jmp
data16
lea
retf
int
mov
mov
outs
adc
or
mov
arpl
mov
in
nop
xor
ss
jmp
sub
icebp
cmp
add
cmp
push
xor
cmp
repnz
(bad)
adc
or
dec
mov
push
sbb
add
bound
mov
(bad)
sbb
aaa
xor
mov
add
pop
test
fistp
jl
or
dec
xor
shl
xchg
xor
xor
dec
nop
icebp
cmps
dec
imul
dec
mov
lahf
jne
adc
cmps
in
mov
mov
mov
add
mov
pop
ins
jb
ins
(bad)
sub
stos
loope
arpl
arpl
sahf
dec
mov
jmp
mov
pop
lahf
xchg
push
inc
mov
imul
(bad)
fisttp
jmp
sub
or
pop
ds
aad
xchg
mov
jl
ins
pop
xchg
dec
imul
cli
sub
scas
mov
sbb
push
(bad)
pop
(bad)
cmp
mov
mov
sub
or
pop
dec
(bad)
mov
or
pop
or
xor
dec
xor
fwait
in
pop
push
jmp
call
push
out
sbb
sub
sbb
pop
xor
push
inc
add
(bad)
fsubr
jb
and
imul
sahf
mov
icebp
and
sbb
xlat
push
jb
inc
xchg
xchg
mov
mov
pop
add
pushf
jbe
movs
(bad)
loope
mul
xchg
lods
push
mov
add
dec
cmp
retf
and
jns
cmp
jle
mov
xor
(bad)
mov
xor
xor
dec
sub
das
je
jns
das
pop
cmp
mov
ror
fadd
out
mov
push
sub
out
jmp
test
or
fwait
mov
jle
aaa
adc
test
adc
pop
retf
mul
(bad)
test
push
aaa
ins
xchg
test
adc
ja
ror
mov
add
lahf
fucom
xchg
shl
mov
xchg
das
fidiv
mov
add
imul
add
ret
mov
in
sub
imul
clc
jo
test
imul
jecxz
pop
add
ins
push
xlat
lds
(bad)
cmp
lahf
jmp
xor
add
inc
sbb
mov
pop
sub
fs
clc
test
push
in
ud2
mov
enter
shl
jg
clc
xor
pop
int3
js
sbb
(bad)
nop
xor
sbb
lock
aam
ret
cmp
push
clc
retf
sub
xor
pop
mov
push
jmp
int
mov
(bad)
mov
pop
fld
daa
mov
mov
cmp
cmp
mov
and
(bad)
jb
inc
dec
mov
pop
mov
cs
xor
mov
inc
sub
fsubr
jo
mov
scas
rcr
call
stc
fadd
inc
mov
inc
dec
cmp
jecxz
xor
pop
(bad)
jno
adc
call
cmp
mov
cld
(bad)
xchg
pushf
fwait
leave
xchg
retfw
retf
int3
dec
xchg
(bad)
addr16
imul
call
test
ins
jno
sub
leave
addr16
les
ss
imul
in
mov
or
addr16
push
push
stos
pop
jbe
or
or
and
mov
lds
adc
mov
sbb
das
jecxz
out
xor
lods
fisttp
daa
iret
fnstcw
jns
aam
inc
(bad)
mov
call
xor
imul
lds
inc
cmc
je
out
in
push
adc
and
push
push
cmps
mov
fucomp
arpl
adc
cmp
pop
pop
mov
xor
call
out
inc
push
daa
dec
pop
mov
neg
lods
pop
mov
imul
ret
sbb
int3
loopne
ss
gs
xor
cld
cmp
es
sub
or
sub
or
sbb
call
fld
shl
xor
ins
pop
rcr
pop
jg
push
retf
sub
sbb
or
jne
mov
lds
movs
jns
cmp
xor
mov
nop
pop
xlat
sti
or
mov
fsub
cmp
xor
ins
mov
scas
push
sahf
inc
scas
test
cdq
add
push
adc
add
push
mov
ins
adc
jno
sub
xor
mov
call
das
jae
ins
sub
push
sub
xor
push
dec
(bad)
lods
jle
jb
fidivr
sbb
out
dec
xchg
fld
mov
popa
aad
or
in
sub
xor
int3
mov
imul
mov
and
sbb
xchg
jge
jb
jg
jnp
push
in
ss
xor
xchg
sbb
jmp
aad
popa
into
lds
pop
sbb
cmp
add
imul
cmp
dec
mov
shl
mov
fs
ss
inc
mov
das
pop
mov
sbb
in
ins
ret
and
sti
fist
xor
cld
repz
jne
out
or
leave
jae
aas
add
and
cs
mov
nop
jecxz
movs
ins
outs
es
mov
pushf
icebp
outs
push
jb
pop
popf
sbb
jge
stc
push
pop
push
retf
dec
das
mov
jge
jo
(bad)
ficomp
nop
out
inc
not
popf
jbe
inc
mov
inc
shr
scas
adc
adc
jg
sub
ret
iret
lock
cmc
pop
loopne
and
push
fcmovnb
sbb
ins
pop
js
xor
and
mov
js
xor
ins
jecxz
mov
sbb
rcr
xchg
out
sub
repnz
xchg
jecxz
and
inc
cs
stos
and
sar
(bad)
test
adc
aam
je
cdq
push
dec
push
sbb
cmp
scas
mov
test
out
outs
and
inc
int3
in
sub
xor
sbb
push
jb
xchg
sbb
sar
xor
or
hlt
xor
ja
(bad)
in
or
clc
xchg
icebp
imul
repz
inc
inc
rcl
or
nop
das
pop
ret
in
les
(bad)
imul
retf
cwde
or
aas
retf
(bad)
ret
(bad)
ffreep
jmp
stc
jne
ficom
pop
lahf
and
dec
mov
mov
lea
jno
(bad)
gs
or
xchg
mov
xchg
hlt
dec
mov
es
fcmovu
dec
fdiv
ret
rsm
pop
loope
sbb
inc
aas
fisub
pop
mov
sahf
test
cmps
mov
bound
loop
ret
daa
jo
sbb
pop
out
fst
inc
test
sbb
mov
fs
jmp
cld
icebp
jmp
lods
cli
push
jne
fs
cdq
sub
rcr
cmps
inc
mov
add
and
jb
xchg
into
vpaddw
push
es
fdivrp
sbb
int
shl
and
xor
pop
enter
sbb
popf
push
ror
call
jecxz
mov
mov
jbe
popa
mov
ss
das
mov
std
mov
push
nop
jmp
lods
add
and
pop
test
jno
add
sub
lods
leave
dec
dec
je
sbb
jmp
cmc
push
pop
jmp
je
mov
xchg
mov
int
mov
or
popf
in
push
clc
push
dec
xchg
push
retf
lods
add
movs
lds
mov
pop
out
scas
rol
sbb
xchg
mov
inc
pop
inc
sbb
jae
lods
imul
push
mov
shl
mov
push
(bad)
jecxz
(bad)
repz
mov
fwait
mov
ins
sub
mov
rol
add
add
add
add
add
add
add
add
add
add
add
sub
add
ins
xor
add
add
add
add
add
add
add
push
sbb
add
daa
add
cmp
add
add
add
add
adc
xchg
cmp
inc
xchg
(bad)
mov
cmp
(bad)
dec
int
loope
xchg
arpl
or
std
call
jl
pop
fsqrt
jle
out
outs
mov
mov
pop
stos
aad
inc
mov
loop
imul
adc
mov
adc
je
pop
les
mov
xchg
pusha
sbb
inc
es
push
jmp
aam
pop
mov
sbb
in
cmp
mov
rcr
xchg
sub
(bad)
cli
sahf
inc
push
inc
cmp
xchg
push
je
mov
retf
cld
mov
jmp
loope
adc
mov
xor
dec
push
push
aad
mov
push
sti
jp
ja
pop
ds
sbb
dec
or
(bad)
and
push
(bad)
or
jecxz
dec
in
xchg
out
mov
push
jge
ret
sub
call
add
or
mov
outs
adc
xor
daa
inc
inc
aaa
sub
clc
out
data16
mov
xor
out
push
sub
cwde
in
ss
arpl
test
mov
sub
scas
scas
cmp
ss
(bad)
fdivp
mov
jne
sub
jb
hlt
mov
stos
test
lea
sbb
mov
ffreep
cmc
(bad)
dec
dec
dec
inc
or
(bad)
mov
aaa
mov
arpl
sbb
pop
aaa
les
jl
and
aas
cld
push
iret
dec
jecxz
cmps
cmp
or
fsubr
inc
mov
fbld
adc
hlt
test
cmp
ret
sbb
fsub
and
aad
arpl
cmp
out
lahf
xor
sar
mov
xchg
pop
out
shl
mov
inc
mov
and
sub
pop
and
inc
fidivr
xor
sub
and
xchg
enter
stos
sbb
fwait
bound
popa
pushf
mov
ret
loop
ret
or
or
fwait
xchg
push
pop
and
xchg
sbb
push
fwait
std
mov
rol
push
imul
adc
in
icebp
retf
in
je
mov
mov
stos
inc
xchg
outs
push
and
and
mov
cs
das
cmp
pop
(bad)
and
cmp
outs
icebp
js
push
and
jmp
jge
cld
arpl
push
stos
loopne
or
jo
pop
shl
lds
pop
(bad)
aaa
imul
sar
mov
push
les
and
push
push
in
les
rcl
add
test
push
mov
dec
mov
sbb
mov
xor
sbb
add
outs
jmp
inc
pop
dec
mov
lea
movs
ins
je
imul
cmp
mov
push
cmp
(bad)
cld
mov
adc
push
loop
mov
cmc
aam
pop
mov
in
sub
rdtsc
mov
cs
dec
leave
lods
fimul
xchg
sbb
aas
mov
push
mov
fwait
pop
mov
in
xchg
xchg
adc
mov
test
cwde
jge
jp
retf
jno
mov
gs
mov
scas
loope
mov
lock
ins
sbb
dec
cmp
jae
imul
sub
mov
daa
jmp
std
mov
or
mov
mov
imul
out
push
sub
stc
sbb
cmps
dec
jnp
bound
sub
fdivr
je
loop
cli
fistp
cli
call
jne
mov
or
mov
cmp
sti
aas
fisttp
pop
inc
movs
jl
mov
sbb
pop
add
push
stc
push
add
ror
in
jmp
dec
fs
and
es
in
test
mov
dec
mov
xor
pop
fcmovbe
mov
fwait
push
aad
cmp
adc
mul
inc
inc
imul
jmp
shr
repnz
leave
out
daa
pop
(bad)
dec
mov
ja
mov
bound
dec
mov
fwait
test
out
xchg
sub
movs
pop
pop
das
jns
mov
call
test
cmps
and
daa
lahf
rol
fwait
or
movs
test
adc
ret
call
(bad)
adc
int3
hlt
mov
adc
xor
rcr
fwait
dec
sub
sub
sbb
xchg
add
jmp
and
ds
ror
and
xor
fcmovu
ins
fld
mov
fmul
inc
loopne
sbb
sbb
mov
pop
jmp
cmps
pop
into
cli
jmp
shr
push
fiadd
mov
mov
dec
mov
dec
(bad)
or
lds
sbb
xchg
stos
mov
inc
popf
sbb
pop
xchg
and
jle
gs
retf
movs
loopne
mov
sahf
mov
lds
lds
xchg
adc
xor
xor
aad
call
adc
xchg
push
sar
fwait
ds
movs
call
xchg
fisubr
mov
sbb
aaa
(bad)
jle
cmp
rcl
jmp
scas
ret
and
pushf
push
and
stos
inc
sbb
sti
scas
pop
xchg
call
and
(bad)
fcom
arpl
and
int
fcom
scas
mov
mov
jb
pop
mov
jns
cld
retf
cwde
(bad)
xchg
sub
sbb
mov
sahf
jmp
loop
adc
fadd
or
xchg
pop
xchg
add
jo
or
adc
fnstsw
jno
mov
xor
jns
(bad)
ins
test
mov
and
sub
(bad)
ja
push
xor
stc
jg
sbb
jbe
mov
rcr
push
(bad)
aaa
ja
jp
sub
and
imul
in
pop
xchg
pop
loop
push
(bad)
ins
lods
add
dec
xchg
or
mov
retf
sbb
xor
pop
push
or
std
(bad)
pop
mov
mov
push
cmc
mov
xor
mov
cmp
outs
out
push
add
pusha
cmp
mov
add
jecxz
out
adc
out
pop
sti
ss
xchg
ds
or
ficom
aam
jg
mov
adc
sub
retf
jecxz
ret
sahf
jg
push
repz
lods
test
add
lods
scas
cmp
(bad)
fisubr
rcl
inc
push
push
pop
(bad)
ror
ja
icebp
mov
in
push
xchg
pop
enter
xchg
jmp
test
cmp
imul
lods
out
sahf
sub
xor
add
jbe
sbb
call
iret
and
(bad)
addr16
or
fnstsw
cld
fdiv
clc
mov
xlat
or
shl
mov
je
push
or
fcomp
push
jnp
out
mov
js
xchg
lahf
fstp
das
loop
mov
xchg
push
xchg
stos
mov
repnz
mov
jle
les
pop
xor
in
bound
sub
cmps
and
jnp
adc
push
mov
dec
adc
stos
pop
push
push
xor
lock
mov
pop
sub
test
repnz
lods
adc
iret
jbe
adc
add
jmp
(bad)
cmc
cwde
inc
call
pop
mov
sub
mov
pop
lds
jo
fs
sbb
cmp
loope
inc
cmc
lock
mov
mov
mov
xlat
mov
jecxz
lds
or
mov
adc
add
mov
pop
stc
xchg
pop
daa
xchg
cmp
fisttp
pushf
ficom
mov
cmps
add
fs
jecxz
mov
jge
mov
xor
jo
xor
enter
cdq
test
mov
das
out
cmp
sbb
inc
sub
std
mov
out
mov
shl
imul
adc
addr16
int3
ror
mov
adc
pop
in
call
inc
pop
mov
fnstenv
inc
jae
xchg
xor
int
fimul
adc
imul
sub
push
rcr
fmul
hlt
arpl
jecxz
pcmpeqw
jmp
dec
jg
add
mov
add
cmps
jle
stos
int
sub
sar
ds
mov
sti
scas
arpl
and
or
sbb
sbb
js
xchg
gs
xor
mov
pop
call
loope
mov
dec
nop
push
pop
mov
ins
leave
xchg
je
(bad)
cs
cwde
dec
into
adc
popf
iret
mov
movs
popf
imul
xchg
outs
push
bound
fninit
sub
mov
sub
jmp
fidiv
xchg
or
test
sub
inc
lock
push
arpl
das
jmp
pop
lods
sub
test
jg
mov
addr16
scas
outs
xchg
sbb
push
aaa
mov
enter
push
lahf
sbb
or
int3
mov
in
stos
loopne
inc
push
mov
dec
and
popa
push
push
clc
cmc
and
inc
pop
out
pop
inc
sbb
retf
lods
mov
jb
pop
ds
(bad)
ins
aas
enter
sub
fbstp
sub
sub
pop
ret
lock
sub
and
push
xor
outs
icebp
adc
push
ds
repnz
ja
(bad)
lods
pop
mov
mov
cmp
lods
stos
je
jno
in
imul
movs
arpl
dec
mov
stos
push
dec
push
stos
or
xor
add
mov
xor
xor
push
mov
xor
push
leave
in
out
shl
test
dec
in
cmp
sub
mov
xchg
cmp
cmps
push
mov
cmp
inc
nop
call
and
ret
out
rcr
jb
jmp
dec
cs
mov
jecxz
sub
ror
(bad)
arpl
cli
sbb
ds
xchg
pop
je
jbe
mov
out
cmps
xlat
push
je
mov
xchg
loopne
xchg
mov
test
movs
mov
xor
jo
inc
aas
push
fsub
out
push
mov
test
push
retf
and
sbb
xor
cmp
inc
add
test
xor
test
sub
push
and
cli
in
loopne
retf
cmp
les
push
fucomip
mov
gs
or
sub
jne
call
xor
fwait
rol
rcl
add
add
add
add
add
push
xchg
add
sbb
add
add
add
add
aas
add
add
add
add
add
add
inc
jle
push
add
add
add
add
stc
add
add
test
xor
add
add
add
pop
jne
add
dec
add
add
add
add
add
add
add
add
in
xchg
add
add
add
sub
add
add
clc
add
rol
add
add
idiv
mov
arpl
sub
dec
imul
xchg
cdq
lods
jle
mov
jb
mov
sbb
call
dec
nop
test
and
cmp
popf
int3
jmp
jge
shl
in
jnp
dec
add
and
sub
rcr
xor
push
add
add
sub
sub
fmul
xchg
jne
int3
out
hlt
xor
push
fbld
cwde
stc
stos
xor
xor
rcl
mov
dec
xchg
sbb
cmp
shr
adc
test
mov
push
inc
jecxz
sub
out
mov
(bad)
mov
xchg
inc
inc
jle
mov
xchg
and
(bad)
(bad)
into
mov
lds
sub
push
adc
lds
add
test
xchg
adc
leave
cmc
and
clc
ins
add
and
nop
fmul
or
sbb
dec
(bad)
icebp
and
push
loop
pop
sub
stc
test
shl
or
jbe
or
mov
push
in
gs
push
mov
into
add
mov
jle
push
data16
sub
jns
xchg
sbb
sbb
cmp
rol
pop
leave
out
movs
ror
leave
retf
pop
adc
ss
cmps
es
mov
ror
adc
dec
imul
ss
jae
add
or
sbb
out
psubd
xor
mov
out
dec
call
paddw
jecxz
xor
push
xor
adc
jle
mov
push
mov
sbb
movs
xchg
cwde
(bad)
and
xor
xor
sub
jmp
mov
push
inc
mov
xor
aam
data16
out
xchg
inc
scas
in
popa
add
ins
lods
inc
jb
sbb
lods
push
pop
lods
idiv
jnp
test
jne
cmp
xchg
xchg
jo
cmp
xor
data16
push
jecxz
or
sbb
test
scas
xchg
jnp
mov
dec
or
stos
xor
push
cmps
aaa
sub
dec
(bad)
jp
xor
sahf
mov
mov
cld
jp
adc
out
xor
mov
mov
test
sti
out
nop
fldcw
jbe
fwait
(bad)
aaa
leave
pop
xchg
fild
or
jmp
mov
popa
out
lock
shr
ds
add
sub
push
(bad)
fst
inc
sbb
mov
imul
add
(bad)
and
push
data16
dec
push
push
(bad)
mov
adc
fwait
icebp
fld
push
lods
pusha
outs
adc
mov
xor
mov
mov
into
aam
imul
jmp
or
sti
in
sbb
xchg
cmps
movs
push
in
fs
stos
inc
iret
inc
push
aas
mov
test
ins
movs
imul
jb
add
mov
(bad)
and
mov
jp
stos
mov
sar
cli
loop
repnz
dec
mul
and
das
xlat
xchg
in
ins
(bad)
fiadd
xchg
pop
jp
out
jle
aad
fistp
stos
mov
jae
push
fisub
in
frstor
loope
jle
popf
push
adc
xor
mov
jb
sub
sbb
sbb
push
push
nop
leave
repz
xchg
dec
mov
mov
sar
and
aad
jno
mov
adc
in
out
gs
retf
mov
pop
imul
repnz
adc
clc
sti
or
lahf
pop
data16
fldenv
cmp
xchg
jp
jmp
or
into
pop
sti
pop
mov
(bad)
popf
out
rol
push
mov
xor
js
mov
call
movs
imul
adc
in
adc
ss
mov
int
ja
stos
iret
adc
and
push
add
sbb
int3
mov
sub
or
hlt
not
loopne
xor
sbb
mov
push
std
daa
fcom
movs
cld
aas
call
push
icebp
inc
jnp
imul
and
mov
movs
jb
jmp
xchg
sbb
movs
hlt
jmp
scas
mov
dec
dec
(bad)
outs
or
std
and
out
into
xor
cli
out
jmp
xor
mov
cmp
fadd
mov
cmp
adc
sub
ins
mov
xchg
adc
push
movs
xchg
mov
cdq
dec
add
iret
mov
ins
jb
or
dec
mov
mov
push
xor
mov
push
inc
ret
inc
test
inc
fwait
hlt
(bad)
jp
cmp
enter
(bad)
sti
lea
imul
arpl
es
popa
bound
daa
and
add
test
add
mov
jns
mov
lods
fdivrp
jecxz
in
pop
inc
ret
dec
repz
aaa
and
aam
stos
lea
and
sbb
rcr
sub
imul
clc
daa
sbb
add
loop
mov
sti
mov
mov
in
ret
outs
xor
add
int
jnp
xchg
cmps
rcr
mov
cdq
push
addr16
aas
jp
stos
mov
dec
pop
call
sub
pop
dec
push
mov
adc
push
cs
bound
aaa
jb
js
outs
lods
and
std
dec
xor
aad
jmp
cld
xor
mov
idiv
ins
enter
xchg
adc
mov
gs
dec
mov
clc
(bad)
push
cli
out
inc
and
mov
(bad)
and
pop
lods
movs
sbb
inc
add
and
fnstenv
xchg
(bad)
jl
mov
lods
ins
movs
lds
jo
int3
inc
mov
add
mov
ja
rol
sub
jle
or
mov
addr16
ret
xchg
sub
stos
fisubr
out
mov
xor
push
sbb
jmp
fcmovnu
inc
push
mov
pop
cmps
push
cmp
adc
cwde
imul
pop
repz
icebp
sti
inc
and
sub
add
inc
xchg
aam
cld
xor
arpl
lods
pop
cmp
cmp
rcl
mov
cmc
jecxz
repnz
mov
push
in
out
and
mov
fnsetpm(287
sub
jmp
inc
inc
push
repz
call
xchg
imul
into
pushf
(bad)
xor
inc
cdq
fcom
repz
or
sub
push
or
inc
sti
cdq
pop
jg
ins
aaa
sti
xchg
in
out
sbb
sbb
std
mov
daa
inc
or
mov
mov
dec
cli
jp
jl
jmp
lahf
xor
ins
dec
mov
adc
cmps
mov
call
and
add
adc
inc
int
jg
pop
jg
cs
(bad)
pop
sahf
fcomp
out
bound
mov
sub
push
mov
mov
(bad)
add
mov
fsubr
js
fidiv
aad
xor
mov
dec
mov
and
dec
xor
xor
push
sahf
jl
pushf
add
xchg
dec
lea
std
xchg
xchg
scas
retf
sbb
ins
mov
(bad)
bound
jge
int3
jle
(bad)
add
sbb
xor
sbb
sub
push
nop
test
adc
adc
pop
mov
xor
icebp
jle
push
pop
std
or
daa
cmp
sub
sbb
xor
adc
and
xchg
cmps
add
std
loope
pop
and
inc
jmp
cwde
and
les
mov
jnp
mov
push
sub
lea
cmc
xchg
hlt
les
mov
add
adc
stc
jbe
jp
mov
div
into
mov
jle
push
out
dec
cdq
outs
xor
enter
das
add
dec
mov
js
jae
inc
xchg
js
jge
call
das
les
dec
push
mov
pushf
xor
inc
inc
pop
mov
in
sbb
xchg
data16
repz
ss
retf
retf
lds
mov
aad
jnp
sbb
jp
add
(bad)
cs
test
aaa
stos
cwde
push
idiv
xlat
call
mov
mov
jbe
pop
and
aaa
test
repnz
mov
push
sub
mov
pop
fsubr
out
inc
mov
sbb
jmp
mov
xor
cdq
push
adc
jecxz
mov
fisubr
shl
push
xchg
sub
dec
jb
mov
mov
icebp
retf
fnstenv
cmps
pop
inc
mov
jbe
mov
loope
fidivr
fcom
arpl
into
sub
out
aam
jmp
ins
popf
and
mov
cli
shr
xor
repz
jmp
loopne
lea
vsubpd
sbb
fst
loopne
mov
mov
lea
lahf
adc
or
mov
pushf
out
cmp
sub
in
ja
and
jno
arpl
mov
add
in
mov
xchg
push
std
mov
cmc
jmp
cli
add
out
outs
stos
cld
mov
pop
push
xor
bound
pop
cdq
idiv
and
mov
sti
cdq
hlt
cmp
add
push
xchg
outs
cmps
add
push
repnz
bound
jl
pop
cli
mov
jg
inc
push
sti
or
adc
sub
pop
cmp
mov
aaa
out
cmps
stc
xlat
ds
sbb
xor
mov
xchg
in
mov
jecxz
ret
fist
das
pop
pushf
arpl
push
popf
mov
out
jp
fimul
icebp
xchg
ins
push
mov
pop
dec
adc
addr16
cmps
shl
sar
call
mov
stos
sahf
cld
add
ret
pop
and
out
ror
mov
push
jo
test
cli
mov
or
add
or
fmul
loope
neg
out
pop
mov
cmp
js
sub
dec
sub
mov
mov
call
dec
dec
(bad)
push
retf
push
and
icebp
and
cmp
pop
sti
pop
lods
and
inc
mov
loopne
push
sar
lahf
ds
inc
pop
ds
and
and
cmp
cmp
aas
int3
or
sub
mov
rcl
movs
movs
mov
mov
add
and
retf
pop
cmps
imul
jmp
add
xor
out
repnz
add
add
sub
add
add
add
add
xchg
add
add
add
add
add
add
fistp
add
xchg
add
add
add
sub
add
add
sub
add
add
add
cdq
add
add
add
add
add
push
add
add
add
xor
bt
jecxz
int3
sub
popa
mov
sub
mov
out
daa
data16
sub
sub
daa
push
je
jmp
enter
ins
mov
xor
fcmove
sub
sub
mov
fwait
test
ret
push
std
or
and
push
push
jge
mov
cmps
push
push
mov
in
dec
mov
or
push
lods
in
popa
mov
sbb
and
inc
jb
sar
test
sbb
jbe
dec
xchg
dec
imul
in
aam
shr
in
pop
and
(bad)
lods
and
jmp
sub
cmp
jbe
or
jp
lea
inc
xor
inc
mov
cmp
ins
popa
jecxz
pop
hlt
add
inc
fmul
int3
outs
pop
push
add
mov
(bad)
sub
iret
pop
mov
movs
(bad)
out
in
(bad)
adc
mov
push
les
loopne
cmps
add
pop
dec
jno
or
mov
cdq
mov
shr
pop
sbb
jle
xor
ins
(bad)
adc
or
dec
(bad)
(bad)
xor
sub
mov
push
in
push
retf
sbb
or
pop
sbb
jae
jg
call
adc
rcr
mov
lea
hlt
data16
jmp
add
sar
xlat
or
mov
js
ins
pop
pop
jle
sub
arpl
(bad)
scas
shl
fwait
leave
or
mov
dec
xchg
jo
(bad)
movs
fist
(bad)
sti
pop
jo
xchg
fidivr
xchg
pop
pop
or
jg
inc
mov
sub
push
aas
test
jno
in
aas
cli
cli
sbb
mov
pusha
xlat
dec
pop
(bad)
or
sbb
inc
out
in
daa
jno
mov
cmc
mov
loop
push
jmp
push
ja
fld
outs
adc
cwde
sbb
jns
(bad)
adc
jo
scas
ja
sbb
pop
ror
add
mul
rcr
add
test
jo
aad
sahf
inc
and
ret
pop
jo
fnsave
pop
scas
add
adc
fld
retf
cdq
jmp
pop
xor
jmp
xlat
fistp
test
les
dec
pop
xchg
push
and
test
scas
mov
xchg
mul
jns
jns
xor
fist
mov
push
cmp
dec
repz
es
push
and
add
jp
bound
pop
add
jmp
push
sub
call
mov
sub
mov
and
aad
and
xchg
test
pushf
mov
jp
ret
gs
pop
xor
mov
mov
inc
adc
pop
fcmove
mov
mov
jb
add
imul
inc
mov
aam
add
clc
fidiv
jo
bound
and
pop
cmp
sbb
xor
xor
hlt
mov
lock
sub
sub
leave
aas
sti
cs
scas
push
push
sti
rcr
out
or
sbb
lahf
dec
mov
cmps
jecxz
ja
retf
aas
imul
addr16
push
xor
sub
(bad)
imul
jecxz
icebp
add
and
pusha
push
xchg
int3
xor
cmps
pop
inc
xchg
inc
in
dec
(bad)
cmps
mov
adc
push
dec
jbe
cwde
ss
cmp
adc
ins
jmp
mov
adc
cs
out
add
pop
jb
into
movs
sbb
call
test
repz
fcom
push
pop
stc
xchg
or
in
push
sbb
xchg
movs
sahf
and
cmc
cmp
or
fwait
sub
dec
(bad)
sar
mov
pop
shr
scas
sbb
maxps
pop
sub
mov
rol
mov
cmp
mov
push
retf
and
enter
push
mov
fwait
cmp
and
pop
stc
push
mov
ret
es
xor
xchg
leave
(bad)
and
push
push
fld
cmp
jecxz
push
inc
pop
lahf
pop
add
fsub
shr
jb
cs
ret
arpl
rcl
mov
cld
jae
movs
cmp
lahf
stos
add
push
mov
outs
daa
ret
out
call
inc
xchg
scas
sub
cmp
in
mov
dec
iret
out
mov
hlt
loopne
in
out
xchg
(bad)
les
jne
xchg
das
push
into
pop
arpl
jno
cmp
xor
push
jne
retf
jns
and
pop
and
dec
retf
add
sub
xor
fcmove
loope
(bad)
adc
loopne
mov
push
jg
xor
popf
xlat
mov
adc
(bad)
repz
stos
(bad)
fsub
mov
scas
adc
mov
mov
sbb
adc
inc
dec
adc
xchg
lahf
sub
in
enter
dec
dec
xor
mov
shl
mov
call
repnz
es
aas
mov
shl
cld
cmp
loop
out
cmc
xor
jo
push
jmp
std
sub
hlt
mov
or
call
xor
addr16
pop
loope
(bad)
dec
mov
add
les
jle
or
inc
sbb
lods
push
mov
test
pop
inc
mov
or
pop
lock
nop
sbb
repz
cmp
or
ja
sbb
daa
lods
mov
test
je
(bad)
lock
sbb
leave
push
jae
xor
cdq
adc
fwait
in
jmp
js
cmps
arpl
stc
jl
movlps
movs
dec
aad
sbb
pop
(bad)
push
gs
outs
cs
fldcw
dec
mov
jge
jp
pushf
out
ss
shr
mov
js
push
sahf
dec
out
mov
or
xor
push
sbb
jl
jb
stos
mov
mov
xor
div
cmp
fisubr
xchg
les
test
xchg
jle
jb
ins
dec
pop
jae
jb
sahf
sub
push
and
cmp
add
or
leave
jne
push
retf
ins
test
jb
ins
mov
(bad)
sbb
sti
ins
sub
push
int
loope
cmp
stc
aaa
jo
cs
dec
inc
mov
or
out
rcl
mov
int3
jbe
mov
inc
mov
std
mov
das
retf
stos
jnp
sahf
fldenv
sbb
retf
fwait
js
jae
and
clc
into
xlat
jno
cmp
mov
into
push
cmp
jnp
and
out
jg
xchg
xor
sub
sbb
mov
mov
adc
cmp
jle
inc
inc
cmc
out
bound
fist
push
xchg
imul
cdq
outs
fld
std
or
pop
sahf
add
and
mov
scas
outs
inc
push
data16
loopne
inc
movs
je
mov
add
(bad)
adc
cmps
in
jne
push
sbb
and
push
out
jmp
adc
sbb
push
stc
xor
mov
imul
xor
(bad)
cmc
sbb
jns
adc
xor
mov
addr16
mov
cmp
xchg
jmp
xlat
stos
imul
mov
push
pushf
arpl
mov
dec
mov
lods
mov
xchg
cmp
jo
sbb
stos
cmps
leave
push
imul
mov
mov
nop
int
out
(bad)
into
shr
hlt
imul
sub
sbb
sub
enter
aas
jne
ins
mov
and
test
cwde
fcmovnbe
gs
dec
rcr
out
push
jo
jge
push
add
imul
sbb
cli
cmc
pop
mov
cld
das
test
out
or
xchg
int3
test
pop
xchg
mov
jns
mov
stc
add
xchg
mov
or
retf
inc
in
or
mov
mov
dec
lods
shr
sahf
mov
ds
pop
push
sub
daa
and
ins
dec
jp
es
sahf
mov
aad
dec
ret
fld
daa
adc
(bad)
jp
stc
pop
sbb
mov
xor
gs
xchg
ins
mov
adc
pop
xchg
inc
aad
stos
adc
jne
jb
nop
jmp
xlat
or
ss
dec
data16
fcomi
fadd
ffree
sub
xor
add
je
(bad)
mov
xor
icebp
jmp
in
hlt
leave
dec
dec
and
xchg
fs
jge
out
jns
dec
adc
into
pop
stc
loope
cmp
add
dec
or
cmp
out
push
pop
adc
mov
mov
aad
lods
retf
push
(bad)
stc
xor
xchg
push
cwde
loope
and
outs
out
push
lods
faddp
jecxz
xor
mov
rol
jmp
xlat
add
lahf
arpl
fwait
test
cmps
gs
mov
test
test
jmp
mov
imul
cmps
pusha
icebp
sbb
pop
sar
sbb
sub
call
popf
cmp
jne
scas
sbb
xor
inc
fcomp
push
mov
test
call
fs
jle
pushf
lods
jbe
jo
push
aaa
cmp
dec
push
xor
sbb
in
xchg
or
sbb
cmp
call
mov
add
or
lods
(bad)
mov
inc
jmp
test
lods
mov
out
call
xchg
sub
cmp
lods
je
arpl
lds
mov
cmps
xchg
daa
cmp
fs
jb
imul
push
adc
push
push
xchg
lahf
add
imul
call
sub
ins
mov
imul
xlat
test
loope
sbb
pop
mov
and
and
aaa
dec
mov
in
(bad)
xchg
pusha
add
pushf
inc
pusha
push
add
imul
enter
cdq
leave
dec
stos
and
fadd
jmp
or
adc
pop
sub
mov
jl
jb
outs
xlat
call
inc
addr16
add
iret
mov
pop
into
(bad)
cmp
pop
push
adc
das
add
in
xor
data16
or
dec
pop
out
ins
in
out
pop
mov
out
iret
add
add
add
add
add
add
add
add
add
add
push
add
pushf
add
addr16
add
add
ret
add
add
pushf
cmps
fiadd
pop
add
add
add
add
add
add
add
add
add
push
jb
jg
add
push
add
repnz
add
add
add
add
cmp
add
add
add
mov
add
add
add
add
add
add
add
add
icebp
add
add
add
imul
mov
aam
shl
sub
je
mov
cdq
shl
or
(bad)
call
lods
pop
mov
or
ss
fnstsw
(bad)
call
js
fs
dec
dec
minps
(bad)
not
test
or
cld
cmp
sbb
sbb
nop
or
aam
movs
push
outs
scas
cmp
add
mov
cmp
xchg
xchg
call
or
movs
lds
pop
dec
adc
jl
jne
mov
fisttp
dec
mov
inc
mov
aas
aas
xor
dec
lods
bound
xor
shl
and
(bad)
mov
das
sbb
dec
je
and
in
movs
imul
jns
bound
inc
dec
into
ins
retf
mov
rcr
xor
mov
cmps
lock
pusha
stc
cs
int3
adc
ss
add
ins
pusha
(bad)
xor
fild
mov
ja
outs
sar
dec
shl
jno
(bad)
pop
(bad)
xor
xchg
ja
mov
sbb
mov
pop
in
jg
sbb
jmp
shl
shr
lock
push
cmp
and
dec
je
fwait
pop
not
jo
hlt
inc
imul
mov
dec
mov
dec
test
and
xor
stos
int
in
das
sub
out
fs
pop
inc
lock
ds
fcmove
retf
lea
ror
mov
mov
outs
sbb
les
popf
xor
add
push
leave
adc
cmp
icebp
jnp
jno
adc
call
inc
cmps
push
dec
xor
mov
loope
xchg
add
enter
(bad)
push
fisttp
dec
mov
cs
bound
loope
pop
xchg
mov
xchg
xchg
mov
(bad)
adc
mov
or
mov
add
jae
icebp
pusha
xchg
imul
xchg
xchg
adc
(bad)
fistp
mov
and
jg
inc
push
sub
loope
movs
push
inc
clc
cmc
scas
adc
and
ja
arpl
movs
dec
xchg
movs
dec
sub
rcr
out
(bad)
popa
xor
cmp
jp
or
jae
ins
cmp
lods
mov
dec
add
je
push
xlat
int3
fcmovnbe
mov
loope
pop
mov
sub
inc
cmp
push
fisub
clc
lea
iret
add
cwde
rcl
cs
mov
mov
repz
aad
cmp
je
loop
jb
in
adc
sub
adc
lods
in
adc
mov
pop
stc
iret
mov
mov
mov
fwait
(bad)
popa
inc
inc
jmp
jae
adc
das
sub
out
ficomp
inc
mov
jmp
adc
xor
jmp
and
(bad)
hlt
push
adc
movs
mov
sbb
inc
rcl
mov
xchg
xchg
inc
push
aam
and
leave
adc
add
mov
inc
push
ficomp
sub
mov
jno
in
and
inc
dec
pushf
xchg
lods
in
adc
cmp
mov
or
in
nop
das
pop
ins
fs
cmp
sbb
and
dec
mov
inc
jo
sbb
jmp
rol
fild
xchg
push
xor
jne
sub
mov
mov
mov
gs
jge
mov
lods
std
daa
push
or
repz
ds
pop
and
dec
sbb
cli
jmp
add
push
xor
rcr
pop
loope
lds
imul
fdiv
mov
pop
or
inc
ret
in
push
mov
das
fcomp
add
adc
popf
dec
cmp
rcr
push
or
xor
jg
aas
lahf
cdq
ret
loopne
xchg
out
dec
in
js
jge
int3
mov
xor
ins
xor
push
int
aad
int
xchg
or
jb
std
into
mov
push
sub
(bad)
outs
je
mov
jno
or
jno
cmp
cli
scas
xor
mov
out
mov
xchg
dec
mov
mov
cwde
mov
lds
cmp
push
cmp
std
pop
inc
(bad)
repz
ins
push
mov
jno
pop
or
xchg
cmp
xchg
mov
call
mov
stos
pop
lahf
jecxz
test
test
xor
outs
lahf
fstp
test
fisub
add
test
mov
dec
and
les
mov
cmp
sbb
mov
mov
lahf
jp
adc
jecxz
(bad)
xor
cmp
loopne
dec
fs
jnp
pop
fxch
add
jns
push
mov
mov
inc
and
push
aam
data16
popa
inc
fdiv
mov
xor
shr
mov
jae
scas
add
xor
sbb
and
cld
fadd
test
aam
xor
adc
hlt
push
jl
push
pop
add
and
and
stos
mov
and
pop
jecxz
mov
cmp
mov
imul
movs
popa
rol
and
std
repnz
je
xor
aad
mov
push
test
shl
xor
or
sub
rcr
pop
(bad)
jp
ja
dec
test
je
push
hlt
into
data16
add
adc
cmp
cmp
mov
sbb
push
call
inc
or
jno
mov
out
pop
pop
rol
fmul
loope
out
lock
push
imul
bswap
push
xchg
pop
push
lods
rcl
pop
xchg
push
push
cli
mov
call
and
stc
movs
dec
cmp
jecxz
xchg
mov
mov
mov
jb
stos
(bad)
pop
pop
lahf
inc
pop
push
mov
push
mul
(bad)
fdiv
cmp
pop
in
out
punpckhdq
add
movs
ins
das
or
sub
cmp
xchg
pop
add
and
pop
jmp
add
dec
xchg
cld
cdq
xor
jmp
add
cmp
mov
xchg
lods
gs
cmc
cli
frndint
mov
inc
iret
ja
pop
hlt
xor
adc
or
test
(bad)
sti
popf
mov
or
mov
pop
pop
jmp
mov
push
inc
mov
xchg
mov
leave
aam
ret
mov
adc
adc
xchg
fldenv
inc
(bad)
xchg
sub
add
mov
inc
push
icebp
cmc
mov
push
push
pop
xchg
(bad)
enter
jne
pop
imul
sub
mov
fcomp
lea
fild
test
imul
loop
icebp
js
fdivr
inc
push
sub
test
xchg
sar
mov
jnp
inc
mov
sub
pop
push
lods
mov
cdq
fs
pop
add
rcl
mov
sbb
in
or
out
shl
sti
xor
cmp
push
(bad)
int3
mov
loop
jns
rcl
adc
scas
xor
and
ja
test
fld
fbld
inc
mov
pop
lea
daa
add
in
mul
xor
push
ja
scas
inc
push
pop
xor
lock
imul
cmc
pop
shl
imul
not
jmp
jbe
mov
or
xor
sar
jae
ror
imul
(bad)
(bad)
cdq
test
and
jmp
push
push
clc
pop
shr
and
inc
pop
ins
stos
cdq
mov
in
mov
mov
sub
iret
add
mov
and
fwait
jns
cmc
movs
inc
or
xchg
clc
jo
rcr
dec
xor
or
inc
cmp
and
inc
(bad)
mov
xchg
jae
dec
sub
icebp
inc
fstp
leave
loope
mov
(bad)
test
sbb
and
add
cmc
push
jbe
ins
xchg
dec
pop
rol
movs
cmps
in
jnp
imul
cmp
mov
cwde
sub
push
pop
xchg
sbb
inc
imul
cs
sbb
test
aam
mov
mov
mov
mov
in
aad
sbb
call
mov
and
push
xor
pop
push
loop
cs
ret
or
sub
xchg
sub
mov
and
imul
adc
dec
pop
cmp
and
iret
sub
das
push
pop
les
(bad)
aas
pop
mov
hlt
and
dec
mov
xchg
push
adc
into
mov
in
stos
pop
loope
add
push
movs
sub
jno
addr16
cmc
ins
push
inc
xchg
or
mov
in
inc
addr16
pop
pushf
aaa
rcl
mov
pop
pop
cmps
je
sub
mov
pop
mov
push
(bad)
jno
sub
mov
int
push
pop
inc
mov
aaa
aas
retf
stos
(bad)
int
dec
cdq
scas
xchg
inc
xchg
xor
nop
stos
or
cwde
cld
cmp
retf
in
jg
out
stos
enter
push
sahf
hlt
leave
pusha
popa
jge
add
sar
out
icebp
in
sbb
cli
lahf
loope
fcomp
pop
inc
sub
mov
stos
test
push
mov
push
pop
xor
out
hlt
or
pop
jb
xchg
aam
and
daa
rcr
in
bound
mov
cwde
imul
gs
push
mov
bound
jne
push
jo
movs
push
lea
pop
adc
mov
popa
adc
aam
fnstcw
mul
scas
cmps
sahf
imul
sbb
ffree
das
mov
dec
add
mov
je
mov
lods
and
out
hlt
cmp
inc
daa
sbb
imul
push
push
xchg
out
(bad)
cwde
fst
popa
add
mov
inc
js
and
jg
ins
xchg
adc
call
adc
lahf
mov
jne
lds
jecxz
and
clc
int
jo
iret
inc
adc
addr16
xor
(bad)
jmp
ret
inc
mov
mov
pop
stos
adc
jno
(bad)
add
or
in
pop
stc
in
jae
cmp
push
cmp
fucomi
sbb
sti
popa
add
jmp
jmp
and
jnp
test
jno
rcr
jecxz
ins
pop
add
add
mov
add
jae
add
leave
add
push
add
add
add
add
retf
add
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
icebp
add
pop
add
std
add
add
add
fild
add
add
add
add
add
add
aad
add
mov
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
inc
add
add
add
add
jnp
in
js
movs
xchg
adc
mov
sbb
mov
addr16
fs
push
loope
int3
sub
nop
retf
(bad)
or
cmp
outs
pop
mov
or
push
arpl
sahf
cmp
xor
sbb
nop
jle
push
and
adc
dec
sub
shr
xor
sbb
movs
push
add
in
(bad)
jbe
mov
out
(bad)
fstp
inc
ret
jnp
push
int
inc
scas
push
sbb
push
sbb
mov
clc
call
adc
rol
mov
pop
leave
leave
test
push
cmp
sub
mov
sub
cmp
mov
aas
jp
out
loope
loopne
inc
test
sub
(bad)
sub
sbb
sbb
das
test
xchg
inc
shl
push
movs
test
pop
mov
call
cmp
ret
nop
test
xor
popa
pop
push
cdq
ds
punpcklwd
sbb
div
les
into
xchg
push
xor
sub
in
sub
sub
mov
adc
int
and
je
daa
inc
xchg
pop
pop
mov
aam
and
dec
cld
or
mov
mov
aaa
out
dec
stc
xchg
nop
inc
dec
call
mov
test
mov
dec
ins
cmc
mov
adc
cmp
mov
lea
adc
jne
xchg
cmp
out
jnp
in
call
test
aaa
sbb
test
or
imul
mov
cli
leave
ror
ror
adc
(bad)
cmc
cdq
adc
fisub
adc
inc
js
jbe
ins
ins
sbb
and
fwait
dec
pusha
jp
xor
mov
ss
jae
add
push
mov
ss
lea
mov
inc
mov
xchg
sub
push
mov
fidiv
sar
xor
mov
jmp
mov
popf
push
shl
xchg
fs
inc
push
lods
dec
and
fs
cmp
out
aaa
dec
mov
lahf
cmp
sbb
scas
inc
jno
sahf
sbb
std
inc
(bad)
dec
mov
push
xchg
pushf
dec
in
xor
enter
xor
jne
mul
xchg
or
inc
sbb
push
imul
iret
or
mov
and
in
push
jno
jge
add
push
in
cmp
xchg
push
je
sbb
or
push
sbb
fstp
data16
dec
jns
shr
xor
and
call
movs
pop
aam
das
and
jnp
je
add
xchg
or
xlat
mov
retf
sub
nop
lea
popa
pop
inc
aaa
jp
dec
sbb
xchg
arpl
movs
clc
ret
mov
(bad)
aas
mov
les
or
sub
cmc
and
xchg
leave
sbb
rol
and
jno
les
mov
xor
xlat
movs
inc
mov
clc
adc
lods
and
shl
mov
test
les
adc
neg
inc
inc
inc
dec
psubsw
iret
xchg
jne
shl
dec
push
ja
aaa
adc
call
hlt
inc
and
pop
jl
imul
loopne
mov
lea
xor
xchg
fisub
cmp
jl
lea
mov
pop
fmul
cdq
adc
retf
jb
sub
fist
inc
ret
fistp
pushf
dec
pop
pop
xchg
jns
popa
je
mov
mov
push
sub
mov
ins
mov
test
jg
and
in
mov
(bad)
out
clc
push
jnp
add
call
pop
pushf
inc
lods
adc
jmp
aas
add
mov
loopne
xor
jge
cmp
ror
movs
cmp
pop
push
repz
mov
adc
and
in
or
sub
mov
sahf
add
sub
fidiv
mov
pop
jae
ficom
push
out
mov
mov
dec
inc
add
push
sub
out
(bad)
out
sub
shl
cmps
cmc
in
dec
addr16
daa
outs
mov
(bad)
add
gs
jb
fwait
in
add
das
retf
cmp
(bad)
(bad)
(bad)
js
ins
or
arpl
jmp
(bad)
rcr
cwde
xor
pop
sahf
pop
inc
pop
loop
push
pushf
mov
shr
sahf
pop
in
xor
inc
mov
inc
fdiv
pusha
xlat
mov
sub
ds
xchg
popa
gs
pushf
aad
cmp
call
push
xor
pushf
dec
dec
outs
iret
repnz
(bad)
adc
clc
add
cmp
iret
sbb
movs
nop
and
out
jo
test
add
mov
push
add
aaa
add
xor
jp
outs
xchg
push
xor
jno
in
jle
xchg
out
xchg
xor
cdq
loope
shr
and
push
sub
retf
mov
xchg
in
not
popa
add
fmul
xchg
loope
cwde
test
lds
push
cmps
fwait
dec
adc
hlt
ror
mov
mov
adc
push
fsubr
sub
imul
out
jl
mov
or
adc
ficom
add
aaa
int
ror
int3
or
pop
dec
push
dec
xchg
movs
in
in
mov
loop
push
movs
sar
cmps
jb
mov
lods
test
test
adc
aas
pop
mov
fcom
outs
pop
sbb
sti
movs
push
test
mov
fadd
xchg
lock
xchg
pop
fidiv
call
inc
sub
scas
fsubp
push
mov
imul
adc
fmul
jp
dec
add
mov
and
pop
dec
dec
fsqrt
mov
xchg
aam
inc
xchg
(bad)
add
lds
add
mov
mov
repnz
(bad)
jge
mov
call
neg
jno
inc
lock
dec
push
(bad)
inc
fild
out
xchg
cmp
js
jno
call
pushf
sub
pop
pop
sbb
fsubp
aad
in
xchg
pusha
or
loope
in
mov
iret
repnz
imul
cmp
sub
inc
stos
cli
mov
mov
pop
xor
inc
add
ret
mov
sbb
jmp
add
(bad)
(bad)
xchg
addr16
loop
push
inc
sti
xor
neg
dec
jb
xchg
inc
es
(bad)
dec
add
mov
lock
push
jbe
ins
pop
cmps
mov
adc
frstor
sahf
and
mov
cld
jno
fistp
imul
out
sub
mov
sub
ret
and
xchg
inc
movs
dec
popa
dec
(bad)
sbb
hlt
int3
int3
leave
pop
jae
add
imul
mov
(bad)
sub
sti
jb
pop
adc
(bad)
pop
retf
test
adc
hlt
jne
push
mov
jo
outs
ja
jp
mov
das
mov
js
repz
cld
outs
xchg
xchg
in
adc
test
adc
mul
jecxz
mov
(bad)
cmp
push
stc
jge
push
outs
xlat
aad
dec
std
or
jp
int3
pop
in
xchg
outs
add
sub
cwde
add
enter
inc
adc
push
xor
push
enter
sub
or
sub
pusha
add
int3
jno
outs
mov
push
aad
and
gs
ss
xchg
movs
mov
push
mov
pushf
mov
and
xchg
mov
fs
ins
jmp
out
xor
mov
daa
scas
sub
push
xor
(bad)
mov
dec
add
xlat
cmp
jo
sbb
fcomp
lods
shl
je
xor
cmps
sbb
jle
and
sub
pop
jo
ss
push
mov
stos
adc
mov
aaa
push
retf
out
jmp
mov
sub
sbb
inc
movs
data16
ret
loop
int
add
jmp
add
add
and
and
mov
scas
add
mov
add
stc
pop
dec
imul
xchg
jecxz
dec
or
ret
call
mov
cmps
sbb
imul
add
(bad)
xor
add
xor
and
add
mov
xor
aas
iret
sar
xchg
dec
sbb
inc
push
int
push
cmc
dec
ins
cli
outs
push
into
fadd
js
jp
dec
lahf
(bad)
pusha
stos
mul
ror
inc
out
mov
imul
xchg
jge
mov
pushf
into
shl
test
outs
in
push
pop
inc
iret
add
in
pop
(bad)
mov
fistp
cmps
add
jg
cmp
sbb
xrelease
push
mov
jne
xchg
bound
into
push
and
xor
add
cmp
mov
(bad)
sbb
add
(bad)
in
test
(bad)
cs
cmp
cmp
push
stc
adc
sar
sbb
ret
jno
inc
ins
sub
loop
call
sub
and
ds
sub
fldpi
scas
cmp
add
test
pop
xchg
movs
cs
and
xor
icebp
test
cmp
call
sbb
push
js
dec
xor
cmp
xor
add
add
cmc
pop
mov
pop
or
push
push
loopne
popa
ss
scas
lods
mov
cmp
test
fild
pushf
cmp
fmulp
dec
test
popa
jo
pop
int
or
pop
inc
or
aam
adc
sub
mov
mov
movs
mov
add
nop
cmp
mov
jle
adc
mov
lods
adc
xchg
arpl
mov
mov
xor
(bad)
mov
sti
pop
xor
std
dec
cmp
mov
ficomp
das
xchg
lock
lds
rcr
mov
fdiv
and
rcr
xchg
cmp
mov
(bad)
mov
div
cmp
out
sti
fsub
js
les
stc
pop
dec
dec
sbb
sbb
sub
mov
hlt
or
mov
cli
fisub
dec
push
std
cmps
das
addr16
ja
stos
repz
div
add
or
add
add
add
add
add
add
add
mov
inc
dec
fld
add
add
add
fiadd
stc
lods
add
out
xchg
add
jae
add
add
jno
jns
cmp
ins
add
add
cmp
add
je
add
add
dec
mov
add
add
add
push
add
add
add
add
add
add
mov
add
add
cmps
add
sub
add
add
add
in
add
mov
add
(bad)
add
adc
in
cmp
add
add
add
add
in
popf
add
add
add
jnp
adc
add
add
add
add
add
add
test
repz
add
inc
add
add
or
add
add
xor
mov
pushf
mov
pop
push
nop
sub
inc
enter
jl
push
pop
mov
add
mov
mov
mov
adc
pop
pop
push
jne
cmps
dec
out
lahf
xor
inc
sbb
or
scas
sbb
or
xchg
dec
movs
outs
fld
repz
mov
adc
in
or
cdq
rcl
into
call
lock
shl
or
out
jle
mov
in
dec
or
inc
(bad)
push
add
push
ficomp
sar
mov
cmc
pusha
sbb
lds
xchg
jns
sahf
inc
repz
aas
xchg
mul
dec
call
inc
dec
ret
push
fstp
cmp
jbe
(bad)
ds
sub
int3
mov
and
dec
aam
xlat
mov
daa
add
cli
cli
or
stos
les
inc
daa
pop
cmp
ror
cmp
fs
inc
ins
jb
jecxz
push
mov
or
stos
pusha
add
lods
jle
mov
test
stc
jmp
loope
pop
dec
xor
movs
popa
sbb
aam
jne
ins
out
mov
pushf
push
idiv
push
bound
mov
ror
inc
sahf
bound
call
arpl
in
mov
out
lds
(bad)
dec
stos
into
icebp
or
jbe
mov
mov
or
into
(bad)
aas
popf
or
shr
lahf
fsubr
sbb
loopne
enter
jne
mov
add
aaa
adc
stc
je
dec
jbe
cmp
mov
mov
inc
push
push
fs
icebp
cmp
jp
jmp
ins
rcr
add
push
add
(bad)
test
popf
test
jnp
jl
pusha
icebp
js
or
data16
mov
cmp
stos
ret
frstor
sahf
iret
lahf
pop
int3
push
sbb
pop
mov
frstor
sbb
xor
mov
in
das
js
hlt
mov
pop
stos
inc
jmp
or
xor
and
in
mov
mov
jle
into
cmp
pop
mov
xchg
arpl
push
push
fimul
jae
cs
clc
pop
sub
mov
aaa
neg
scas
push
ins
lahf
sub
ins
enter
add
(bad)
xchg
xchg
sbb
js
sbb
jae
dec
rol
mov
xchg
pop
nop
xchg
call
sub
push
stos
int3
retf
lock
rcr
mul
fstp
enter
hlt
sahf
inc
adc
and
ja
(bad)
mov
jo
jnp
gs
dec
pop
add
push
mov
leave
cld
ror
test
sbb
or
dec
repnz
cld
in
push
je
inc
mov
fdivr
mov
inc
and
fsubp
cmps
mov
retf
je
adc
ds
mov
fwait
(bad)
sbb
add
pusha
out
fist
pop
call
push
out
test
out
or
enter
test
lahf
and
mov
jmp
je
pop
mov
adc
pop
mov
loop
jo
adc
sub
repz
sub
sbb
push
movs
ins
hlt
shl
mov
sub
xchg
outs
jb
das
pop
mov
jo
jnp
push
xor
dec
or
clc
push
pop
mov
out
pop
in
mov
mov
jmp
add
movs
push
cdq
hlt
add
mov
jle
cmps
mov
jbe
int3
add
fadd
dec
popf
jecxz
push
add
cli
cmp
dec
push
mov
in
int
sti
(bad)
lock
sub
popf
sub
lock
jg
fcom
mov
std
leave
dec
movs
das
adc
cmps
gs
adc
cld
mov
test
or
push
fldenv
test
aad
mov
xor
icebp
(bad)
(bad)
out
jns
sbb
fs
pushf
js
dec
jae
jne
loope
xchg
mov
cmps
push
inc
dec
cs
mul
ins
mov
xchg
leave
cmpxchg
pop
xor
or
imul
pusha
mov
jne
pusha
or
mov
inc
test
adc
not
sub
sub
xchg
xor
jg
lods
imul
cmp
xor
cli
adc
ret
and
enter
or
mov
ins
xchg
sbb
fimul
(bad)
jae
shl
es
aaa
dec
loop
pop
(bad)
sub
sbb
cdq
xor
sets
inc
adc
movs
fisubr
sbb
movs
psubd
inc
bound
rcr
and
and
fnstsw
pop
dec
and
out
and
leave
(bad)
ror
dec
dec
sbb
and
dec
shl
std
xor
add
out
fcmovnb
sub
imul
or
imul
ins
stc
cwde
(bad)
sbb
xor
sbb
mov
fidivr
mov
cmp
mov
pop
imul
mov
jae
(bad)
pushf
fs
stos
and
mov
bound
inc
and
or
xchg
popf
dec
out
stos
mov
in
jl
xor
out
retf
mov
sub
cmps
jecxz
fwait
mov
mov
call
mov
out
ret
dec
in
and
add
xor
push
ja
mov
jb
push
mov
lods
pusha
dec
sti
loop
sbb
mov
inc
or
inc
adc
ja
mov
dec
sub
ret
loope
and
out
in
push
stos
int
add
pop
ret
jb
scas
xor
push
test
push
test
mov
out
pusha
popf
push
xlat
add
mov
fmul
jae
xchg
test
in
or
sub
mov
fwait
jmp
mul
sbb
sub
call
std
pushf
shl
out
adc
pusha
aaa
jmp
shr
daa
jle
push
and
xor
fld
test
(bad)
movs
(bad)
imul
inc
mov
(bad)
or
out
stos
daa
imul
hlt
imul
std
mov
dec
into
xchg
push
pop
adc
and
mov
(bad)
out
mov
repz
and
cwde
movs
ds
jecxz
call
or
lea
sub
ror
xchg
push
pusha
cmp
or
mov
ins
lods
lahf
inc
fld
pop
jle
pop
cvtsd2ss
mov
data16
ficom
leave
pop
dec
mov
fucomi
ja
push
pop
lea
cmp
push
hlt
cs
mov
mov
xchg
xor
fisub
sub
dec
add
repnz
mov
in
gs
xor
cmp
loopne
shl
loop
or
leave
push
xchg
adc
jp
xchg
or
xchg
add
dec
rcl
(bad)
xchg
lods
faddp
or
push
sub
mov
jp
clc
dec
pushf
push
or
xor
stos
daa
pop
rcr
mov
push
push
shr
inc
arpl
mov
add
jbe
cmp
sti
aaa
adc
into
xor
outs
jae
push
add
rcr
pop
dec
(bad)
int3
mov
pop
mov
enter
enter
int
(bad)
pop
sub
aam
adc
sub
movs
arpl
mov
and
fstp
mov
jle
and
loopne
mov
mov
in
popf
pop
cwde
js
xlat
pop
mov
adc
in
and
retf
iret
mov
aas
rcr
fcomp
mov
mov
lods
dec
lods
mov
jb
(bad)
and
cmp
adc
or
imul
test
mov
outs
pop
xor
ror
push
mov
jge
jmp
ror
and
mov
out
pop
fs
into
dec
and
outs
jne
hlt
aam
xchg
mov
dec
movs
sar
ins
jmp
xchg
clc
in
in
xchg
icebp
adc
cmp
xor
xor
retf
mov
(bad)
xor
out
jmp
dec
inc
cmps
(bad)
es
imul
lock
and
jne
add
loope
xlat
xchg
push
xchg
mov
inc
mov
xchg
mov
pop
pop
sbb
jnp
jbe
scas
mov
push
fstp
into
rol
or
dec
mov
pop
in
inc
adc
or
repz
outs
mov
jecxz
cmp
fwait
cmp
xchg
push
mov
sub
rcr
call
jp
cli
jmp
fisttp
adc
jmp
xchg
mov
jo
inc
jmp
popa
mov
rcl
adc
in
into
(bad)
out
sbb
cmc
push
fs
into
rcl
test
mov
call
enter
(bad)
xchg
fs
cli
xchg
sar
lods
mov
call
in
pop
mov
jmp
ss
rcr
test
xchg
mov
imul
or
sub
inc
rol
pop
int3
aas
dec
movs
or
fisubr
pop
fs
js
outs
in
dec
imul
mov
es
sub
push
lods
inc
and
cmp
in
cwde
xchg
push
cld
xchg
cmp
cmp
xlat
fnsave
mov
out
add
daa
scas
shr
fdiv
repz
pop
ins
test
jmp
mov
pop
pushf
push
sti
adc
jl
cdq
js
adc
sar
ss
fist
push
clc
pop
inc
xchg
adc
xchg
out
or
and
ja
sbb
inc
jne
and
jl
mov
pop
xor
leave
(bad)
mov
add
jb
sti
dec
sbb
test
je
add
mov
std
bound
cmp
addr16
jmp
pop
fld
jp
cmp
push
sbb
cmc
inc
daa
(bad)
push
mov
cmovb
pop
loop
aad
push
sbb
inc
push
ds
adc
out
into
jl
enter
dec
aaa
outs
mov
mov
sub
or
jbe
mov
xchg
mov
inc
mov
pop
sbb
aam
inc
lods
sbb
push
adc
aam
or
ror
mov
or
fst
fisttp
ss
push
mov
xor
out
push
fcom
push
sub
xchg
or
out
aad
ror
call
adc
ret
jmp
scas
add
mov
add
add
add
add
ins
add
add
add
add
and
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
cli
iret
sbb
add
add
add
sbb
add
add
add
jno
add
add
add
add
pop
add
add
add
add
fild
add
add
add
add
add
xlat
add
add
inc
pop
stos
jno
jp
add
add
add
add
imul
in
add
add
jae
add
retf
add
add
add
add
icebp
rol
add
arpl
add
mov
add
test
add
add
add
cmps
add
sub
add
add
and
div
bound
sbb
or
(bad)
movs
cmps
gs
stos
lock
dec
sub
(bad)
sub
or
adc
sub
add
andps
push
lods
dec
repnz
icebp
cwde
movs
sub
aaa
cmp
jne
int
scas
xchg
cmp
add
sar
and
bound
movs
ins
sbb
in
cwde
pop
dec
adc
sub
sub
mov
xchg
pop
adc
std
cmp
stos
sub
push
xchg
pop
mov
add
sbb
mov
lock
mov
loop
mov
fwait
and
test
mov
push
xchg
cmps
pushf
gs
out
inc
mov
jbe
(bad)
sub
pop
inc
adc
outs
aas
or
test
pop
jl
and
fucomip
sub
xor
fcomp
cdq
ror
int3
mov
jle
fdiv
aam
xlat
jl
inc
repnz
shl
dec
sub
test
sub
xchg
in
pop
pushf
push
mov
fwait
test
sub
push
sbb
mov
movs
or
push
push
cmp
sub
sbb
retf
jns
mov
pop
pop
cbw
movs
je
mov
push
fyl2x
push
into
pop
andnps
xlat
cmp
ja
mov
mov
cwde
and
cmp
xchg
xchg
ffree
pop
mov
ror
push
ins
xchg
stc
lods
in
rol
icebp
pushf
fld
out
(bad)
mov
and
cs
inc
call
ins
mov
in
enter
mov
mov
arpl
mov
add
add
outs
cs
movs
xor
fidiv
cld
add
sti
push
add
jge
sub
cmp
jae
mov
stos
mov
imul
pop
jge
test
into
cmp
sbb
sbb
bnd
fld
cmp
mov
push
stos
push
sub
adc
cmp
jmp
pop
gs
(bad)
push
out
or
mov
adc
push
push
mov
in
scas
jne
outs
and
(bad)
cld
outs
pop
adc
jg
lea
inc
movs
xchg
jp
dec
call
ficom
loopne
cwde
inc
cmp
into
stc
retf
xchg
sar
or
gs
sbb
sbb
test
sub
cmp
dec
jmp
(bad)
xchg
adc
lock
loope
repnz
data16
jmp
cdq
xchg
push
or
js
pop
outs
inc
enter
cli
jle
dec
enter
mov
in
xor
xor
jg
sbb
mov
mov
mov
stos
xchg
mov
add
xchg
nop
ss
nop
stos
or
adc
pop
or
cs
ret
bound
jmp
mov
cld
repnz
repz
mov
mov
pop
movnti
ret
xlat
inc
jge
cmps
call
jae
add
or
es
xchg
adc
addr16
xor
ja
fnsave
mov
and
and
pop
lock
test
mov
loope
cs
cli
mov
and
into
xchg
push
jne
loopne
push
sbb
xchg
xor
inc
out
add
sub
out
sbb
(bad)
jl
call
and
dec
stos
rcr
adc
push
sahf
jl
xchg
add
paddw
adc
lock
jae
xor
sbb
pushf
scas
jecxz
fcmovu
test
sbb
ds
add
jmp
mov
mov
sub
les
mov
and
mov
mov
cdq
sub
test
cmp
ins
imul
mov
(bad)
ins
les
div
in
in
cmp
icebp
jae
push
mov
sub
fadd
jo
dec
outs
xchg
sub
cmps
mov
push
in
adc
(bad)
fisubr
mov
clc
pop
fidivr
inc
mov
mov
leave
cmp
out
fist
mov
daa
retf
jno
push
cmps
jmp
sub
nop
mov
test
dec
fldcw
sbb
loop
xor
popf
cmp
das
mov
mov
ret
dec
jae
addr16
inc
jno
rcr
arpl
mov
ins
mov
fadd
sbb
mov
mov
dec
rol
std
pop
add
repz
inc
push
std
dec
add
xchg
push
jb
pop
cwde
test
push
cmp
ja
cmp
fisttp
jg
lock
add
bound
push
sub
xchg
es
jmp
pop
sar
jecxz
idiv
inc
and
mov
movs
or
xchg
push
adc
mov
jmp
mov
pop
cdq
adc
hlt
into
dec
mov
mov
fisub
cs
retf
retf
fcom
imul
das
mov
pop
fidivr
mov
mov
out
fistp
std
das
pop
pushf
and
imul
in
ds
ret
mov
sahf
daa
adc
mov
addr16
pop
mov
and
sub
fld
cs
add
sub
jnp
mov
fisub
and
scas
push
push
cmp
(bad)
cmp
inc
mov
pop
mov
add
dec
mov
imul
rol
je
sub
push
out
pop
xor
fld
jb
mov
rcl
mov
inc
ror
loop
adc
xchg
lods
and
dec
setno
fisub
sub
cmc
in
inc
sub
xor
adc
stc
lds
mov
xor
dec
mov
stos
jl
sbb
test
push
mov
sub
movs
scas
mov
rcl
aaa
out
pop
int3
xchg
lahf
push
movs
jg
les
test
jns
dec
movs
mov
inc
cmps
aad
adc
rol
sti
dec
pop
imul
mov
mov
mov
xchg
pop
xchg
pop
push
mov
mov
sti
gs
adc
js
fsub
or
ficom
jle
rdmsr
push
ss
push
adc
jno
sub
pop
mov
dec
jb
cmps
xor
outs
pop
cmp
sub
mov
std
fild
cmp
push
sub
push
cmp
xor
lds
inc
popf
mov
outs
xchg
push
inc
loope
pop
pop
push
cmp
inc
mov
mov
lock
xor
and
mov
cmps
add
fmul
cmp
stc
into
icebp
retf
add
scas
xchg
push
frstor
mov
pop
push
ss
cwde
mov
cli
or
imul
sbb
pop
dec
sbb
push
fwait
mov
and
dec
dec
adc
test
retf
ret
outs
imul
mov
scas
mov
ret
push
mov
in
xor
mov
push
pusha
adc
push
sbb
sbb
movs
fbstp
inc
mov
pusha
pop
ret
add
sbb
out
mov
or
add
test
retf
call
xchg
jp
adc
cmps
je
mov
or
mov
adc
mov
cmp
mov
adc
mov
loopne
and
push
std
lods
je
lods
mov
fdivr
xlat
jb
xor
jns
ret
xor
jae
leave
sub
dec
ja
fdiv
mov
or
push
xlat
sub
pop
dec
and
call
push
fs
shr
inc
pop
push
mov
mov
hlt
shr
adc
lahf
ror
mov
add
jns
into
mov
popa
dec
rcl
jp
dec
cdq
pusha
mov
loopne
pop
(bad)
inc
cmp
fadd
fstp
fisubr
dec
pop
push
scas
add
int3
adc
sbb
pop
cmp
add
mov
and
jne
inc
adc
scas
dec
scas
sbb
sbb
dec
jl
cld
sub
sub
mov
jnp
xchg
int
xchg
sbb
jle
daa
pop
jge
frstor
jnp
adc
fcom
mov
(bad)
add
popa
and
sbb
add
ins
mov
inc
inc
lahf
add
dec
cld
cs
or
sbb
pop
or
xchg
into
jp
pop
mov
add
test
jae
xor
pop
cs
push
jb
add
cmp
sbb
cmp
or
sbb
lahf
dec
(bad)
sub
stc
mov
ja
pop
(bad)
scas
setne
movs
pop
outs
dec
add
sbb
xchg
shl
lods
add
test
or
gs
in
imul
or
fdiv
pusha
cld
push
std
mov
iret
dec
out
xor
or
and
mov
daa
(bad)
iret
in
jmp
xchg
push
enter
repnz
loopne
xchg
xchg
pushf
inc
cmp
fdiv
jae
jo
(bad)
jno
xor
mul
pop
data16
shl
ins
test
and
mov
sbb
retf
neg
jmp
shl
sub
es
cmp
out
mov
adc
sub
or
in
jno
xlat
sbb
int
bound
inc
loope
aam
add
les
outs
inc
or
stc
ja
push
in
lods
jmp
pop
mov
sbb
mov
mov
or
mov
pop
push
mov
(bad)
sub
jg
jae
add
inc
pushf
pushf
rcl
xchg
mov
mov
and
in
test
add
aas
dec
mov
jmp
cmp
lock
push
inc
call
outs
outs
repnz
jnp
push
fisttp
mov
add
popa
pop
js
in
fcomp
out
lods
xchg
cmp
movs
inc
mov
ja
push
sub
mov
scas
ret
loope
leave
inc
xchg
jb
and
mov
je
mov
shr
inc
stos
ret
es
xchg
movs
mov
test
mov
jo
jl
js
cmp
mov
movs
sbb
cwde
retf
(bad)
push
and
popf
mov
imul
sbb
repnz
arpl
rcl
pop
and
jbe
pop
loope
xchg
cdq
push
enter
dec
sbb
add
add
add
add
add
test
add
add
inc
add
add
add
add
add
push
add
add
add
add
push
icebp
add
add
add
add
add
ud1
add
add
add
add
add
add
dec
add
rol
add
sub
add
add
add
add
lods
add
add
add
popf
add
add
cmc
add
add
mov
add
pop
and
add
add
add
add
inc
add
add
mov
add
push
xor
add
add
push
imul
add
(bad)
mov
jns
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
adc
add
add
mov
add
add
add
add
mov
sbb
pop
rol
sub
mov
or
jge
dec
pusha
mov
icebp
xor
bound
cmp
mov
stos
int
call
gs
nop
je
not
loop
call
sub
mov
movs
into
div
push
xor
out
std
sub
dec
cmc
mov
call
popf
leave
fld
sbb
dec
cmp
sub
jle
jl
mov
gs
dec
fcom
aad
dec
ins
push
frstpm(287
sbb
dec
cwde
ds
leave
(bad)
push
xchg
push
dec
(bad)
or
jmp
adc
mov
call
jmp
push
out
and
sub
(bad)
and
stos
fadd
scas
scas
lock
or
repz
pop
arpl
int3
loop
rcl
imul
cmp
mov
jg
stos
pop
call
pop
mov
add
dec
ds
and
and
pop
addr16
stos
stos
(bad)
mov
jb
sti
outs
ffreep
cs
sahf
icebp
mov
adc
mov
jnp
adc
pop
in
lahf
inc
sti
dec
jle
stos
ds
cmps
cmp
mov
jle
mov
std
pop
and
mov
and
add
stos
ss
(bad)
jb
dec
dec
mov
sahf
iret
or
(bad)
sbb
test
(bad)
(bad)
aaa
enter
test
lock
ss
mov
pop
ffreep
in
sub
(bad)
in
sbb
mov
mov
adc
loop
push
sub
outs
imul
ficomp
xor
test
adc
jb
out
mov
adc
nop
int3
out
out
mov
xchg
jle
mov
pushf
inc
(bad)
xor
sub
cmp
stos
pop
xor
sub
js
lods
fcom
mov
cli
and
ins
xchg
adc
sbb
cmp
outs
rol
pop
out
imul
push
jmp
rol
inc
cdq
hlt
scas
cmps
add
add
xor
call
push
mov
sbb
push
clc
cs
push
jecxz
pop
nop
(bad)
test
stos
mov
in
cli
fwait
in
aam
retf
scas
mov
push
cmp
jmp
pushf
stos
add
test
test
sti
sti
pop
and
test
inc
sahf
jecxz
mov
out
inc
loopne
rcr
(bad)
ja
xchg
sub
xor
mov
loopne
pop
push
lods
ins
ins
xor
add
sbb
scas
pop
mov
test
dec
and
(bad)
jb
inc
adc
pop
push
das
pop
iret
cdq
call
stos
aad
xchg
mov
push
nop
pop
xor
in
xchg
add
pop
lods
in
jge
xor
xor
stc
fcmovu
mov
pop
cli
mov
(bad)
jmp
pop
adc
dec
mov
jmp
cmp
in
sbb
or
jae
mov
jmp
push
dec
jl
jb
jmp
xor
enter
mov
dec
mov
jne
xor
pop
lock
dec
dec
leave
push
adc
iret
fsub
push
icebp
aam
cmps
xor
xchg
adc
ja
in
in
cmps
out
repz
out
inc
or
adc
cli
adc
stos
xchg
jp
adc
test
add
jne
stos
loope
and
xchg
dec
jle
fiadd
and
mov
sbb
jg
fbstp
call
push
adc
push
xchg
jmp
xor
jo
rcl
mov
sub
xor
lods
test
out
xor
adc
call
dec
push
lock
xchg
mov
mov
and
retf
adc
cwde
hlt
fwait
push
pop
inc
data16
in
sub
or
inc
sbb
pop
pushf
jl
push
jnp
push
and
ss
repz
sub
sbb
popf
lea
addr16
jmp
cs
xor
aam
sub
push
xchg
rcr
cld
fadd
mov
sbb
mov
dec
mov
xor
mov
mov
lods
jnp
mov
or
and
inc
or
aam
outs
add
(bad)
pop
jnp
push
jmp
fwait
mov
(bad)
out
xchg
cs
xchg
daa
lock
add
stc
mov
and
movs
mov
push
cmp
(bad)
push
dec
xor
add
xchg
mov
sub
or
gs
retf
imul
adc
retf
int3
xor
dec
arpl
jmp
cmp
xchg
sub
dec
xlat
sbb
sar
inc
pop
add
pop
and
sbb
sti
sahf
and
aas
or
inc
pop
arpl
mov
add
imul
js
and
dec
movs
dec
call
push
fstp
mov
mov
sahf
xor
mov
jmp
pop
fsubrp
push
into
cmp
aaa
repz
sub
iret
dec
sub
jle
les
push
push
ss
adc
test
add
les
dec
xchg
stc
mov
daa
pop
fld
in
mov
jg
pusha
mov
sub
jg
bnd
mov
inc
ret
adc
nop
cmp
xor
cmp
outs
adc
test
int
sub
cwde
pop
mov
fidiv
inc
fiadd
pop
sahf
call
lock
jb
push
fimul
leave
add
movaps
leave
dec
lods
bound
mov
repz
mov
lods
and
jg
fild
fwait
push
mov
mov
dec
add
push
aaa
cwde
mov
push
and
sub
push
push
mov
std
mov
icebp
sbb
dec
test
mov
popf
dec
push
imul
fst
add
jo
int3
inc
add
aaa
dec
cmp
ss
mov
iret
dec
out
popf
mov
xor
(bad)
xchg
jge
mov
pop
add
xchg
stos
lods
sub
rcr
shl
mov
xchg
sub
xor
stos
dec
mov
xor
mov
lea
test
js
les
add
sbb
jmp
mov
test
and
fcom
scas
mov
test
or
sahf
sub
aas
jne
test
mov
das
jno
cmps
add
out
xchg
cmp
loopne
cmp
pushf
stc
fdivr
cmp
and
cmp
dec
dec
inc
outs
clc
arpl
lahf
ins
xchg
mov
sub
xor
sbb
push
(bad)
jmp
fisttp
jle
xor
loope
pop
xchg
clc
cmp
pop
inc
jp
xchg
dec
sbb
xchg
movs
xchg
sub
mov
push
ror
push
dec
outs
xchg
jle
fstp
lahf
stc
das
sub
retf
enter
imul
push
dec
and
mov
fbstp
inc
mov
pop
sub
dec
int3
std
mul
lds
retf
retf
leave
or
pop
jmp
loop
cmp
pop
(bad)
iret
jl
add
pop
out
dec
adc
jecxz
cli
lods
mov
loop
jmp
arpl
sub
dec
and
jne
pop
cwde
fwait
push
out
push
pop
test
sbb
jb
mov
clc
push
fndisi(8087
dec
push
inc
(bad)
mov
nop
mov
pusha
addr16
loopne
dec
jno
jmp
jo
jae
inc
ret
jmp
adc
push
cmp
jne
aas
out
pushf
jbe
cmp
jl
xchg
pop
ins
lahf
dec
jno
ror
sub
inc
ret
sbb
mov
pop
test
inc
(bad)
fcomp
js
not
xchg
(bad)
jnp
or
ret
(bad)
scas
lods
adc
popf
jae
sbb
pop
movs
sti
cdq
push
sbb
(bad)
fwait
(bad)
frstor
out
lea
popa
mov
inc
jge
adc
icebp
in
push
hlt
sbb
outs
dec
pop
mov
dec
cmp
and
cmps
adc
std
shl
lods
in
shl
add
dec
add
push
ja
jle
int
shl
iret
mov
jno
loope
dec
in
imul
imul
mov
xchg
pop
ret
out
popf
add
and
loope
imul
fwait
or
lea
and
jmp
jle
cs
jp
ficom
xchg
mov
jns
std
sbb
sub
cwde
fstp
out
and
cwde
push
and
mov
movs
in
mov
mov
push
lods
sbb
push
xchg
dec
aam
xchg
inc
lahf
sbb
lods
fidiv
cmp
xor
mov
push
add
sbb
inc
or
aas
jmp
fldcw
scas
movs
push
fisub
cmps
or
idiv
xor
or
xlat
push
mov
pop
test
scas
and
mov
and
cld
mov
hlt
jns
das
and
scas
sbb
stos
and
jo
xchg
in
stc
push
scas
fild
sub
(bad)
movs
(bad)
(bad)
cmps
cld
loope
scas
outs
movs
pop
rol
fs
std
pop
dec
xor
dec
sbb
xchg
test
ja
sub
and
jo
ds
mov
adc
and
lahf
cli
es
jno
movs
inc
push
(bad)
sti
push
add
and
xchg
or
pop
cmp
mov
cmp
das
(bad)
mov
gs
fwait
js
js
mov
shl
inc
xchg
pop
jne
in
xchg
test
cmp
mov
add
jnp
adc
popa
mov
add
js
cmp
fadd
int
xor
sbb
or
aas
add
test
add
sar
data16
in
dec
enter
and
xlat
ror
mov
pop
mov
mov
bound
and
xor
and
mov
(bad)
ja
rol
add
cdq
and
daa
xor
or
cli
inc
adc
inc
lahf
mov
lods
xchg
out
push
jmp
jl
iret
ret
jge
cmp
je
jecxz
pop
out
popa
jp
aam
sub
push
and
loop
gs
mov
clc
repz
rcl
push
rol
mov
inc
ss
shl
mov
(bad)
mov
or
push
ins
mov
mov
enter
enter
push
add
cs
ss
inc
and
push
adc
adc
jl
into
sbb
aas
dec
jmp
fisubr
push
out
dec
or
mov
and
outs
push
mov
add
add
add
add
add
add
add
add
adc
or
add
cdq
add
jmp
add
add
mov
add
add
add
add
add
xchg
add
stc
add
add
cmp
add
add
add
mov
cmp
cmp
inc
xchg
cwde
ret
jl
ret
push
push
pavgb
lahf
aad
jnp
mov
pop
test
cmp
(bad)
push
call
mov
pop
shl
push
cli
inc
sbb
mov
pusha
mov
in
adc
cmp
cmc
mov
pop
cmp
xor
jmp
enter
ss
ficom
aam
in
push
stc
imul
mov
std
scas
mov
in
or
xchg
add
ins
pop
fisttp
stos
inc
bound
imul
loop
and
add
jb
test
dec
dec
fsubr
popa
sub
jmp
(bad)
jecxz
ficom
scas
xchg
mov
repnz
sub
cmp
push
cmp
inc
cdq
sbb
lods
daa
mov
add
and
adc
ret
jmp
out
or
or
sbb
xor
shl
movs
fistp
addr16
int
movs
aad
dec
add
loop
scas
push
xchg
bound
jmp
mov
inc
test
(bad)
push
sbb
gs
pop
adc
push
sub
mov
jg
inc
push
rol
mov
bound
push
adc
xor
pop
jns
or
ja
add
cmp
mov
imul
mov
cmps
mov
lods
cmp
push
pop
dec
cmp
not
cli
push
push
mov
xchg
jo
pop
add
xchg
mov
xchg
jg
outs
or
fist
dec
xchg
pop
das
ins
cmps
or
stos
iret
push
pop
pop
(bad)
(bad)
out
jp
in
xchg
and
aad
pop
mov
sbb
mov
sbb
pop
sbb
jno
mov
lahf
leave
test
jmp
out
mov
sbb
out
push
out
cmp
adc
mov
xchg
inc
rcl
stos
xchg
cli
ret
xor
cmp
adc
icebp
(bad)
(bad)
arpl
or
push
xor
sahf
and
and
mov
fidiv
or
mov
outs
push
jne
add
(bad)
call
xchg
ins
and
adc
out
sbb
mov
fnstsw
mov
push
lds
pop
inc
jnp
jmp
push
inc
mov
push
scas
cli
shl
and
arpl
push
cs
in
cwde
repz
movs
cmp
dec
sub
bound
pushf
fnstenv
stc
clc
out
movs
ret
into
adc
push
rol
sub
pop
les
dec
push
jne
add
dec
sub
dec
or
xchg
sbb
sub
add
icebp
out
repz
cli
rcl
cmp
sbb
in
push
in
je
sbb
mov
sbb
mov
popa
lods
pop
mov
pushf
sub
dec
retf
mov
hlt
mov
cmps
add
add
cdq
test
dec
repz
xor
fwait
mov
push
repnz
ins
cmp
inc
scas
fnstcw
mov
in
mov
jne
fs
pop
hlt
mov
outs
ins
jge
pop
and
test
(bad)
xchg
cvtps2pi
dec
or
mov
jg
jno
mov
icebp
int3
fucom
jp
rcr
or
sub
rcl
adc
or
(bad)
in
out
cmp
mov
cs
aaa
cmp
in
dec
mov
in
sbb
add
out
dec
adc
pop
pop
arpl
popf
rcl
loope
jge
mov
movs
es
and
cli
fstp
add
push
pop
dec
cmps
ins
outs
call
(bad)
pop
jg
stos
cmp
push
inc
mov
and
push
dec
add
dec
sti
loop
mov
mov
cmp
lods
dec
push
inc
das
dec
(bad)
xor
mov
dec
pop
or
outs
pop
pop
aas
call
jmp
and
pop
int3
xchg
imul
pop
das
add
or
or
aam
sub
pop
movs
sbb
pop
cdq
shl
mov
add
or
inc
out
cwde
mov
jle
jmp
pop
jp
leave
dec
sbb
mov
loope
call
push
cmp
int3
(bad)
lea
(bad)
fistp
pop
aaa
jne
dec
xchg
stos
ins
cmc
mov
cwde
pop
xchg
(bad)
and
sub
bound
shl
sub
aas
push
movs
addr16
sub
push
mov
and
jecxz
movs
sbb
sar
jle
fs
shl
add
dec
xchg
fisttp
addr16
xor
out
pusha
out
push
xchg
xor
inc
lock
(bad)
sar
add
adc
or
sub
xor
sub
jle
call
fs
vandnps
mov
fisubr
mov
jnp
push
inc
lahf
cmp
cmc
jo
imul
imul
leave
push
(bad)
mov
dec
pop
xchg
cs
arpl
xchg
or
test
xchg
pop
fiadd
into
adc
rcl
ror
xchg
lods
sbb
mov
cdq
xchg
fsubr
push
xchg
test
scas
and
adc
popa
inc
mov
jbe
inc
dec
pop
rcl
push
fucomi
call
lea
cmp
mov
and
lahf
in
dec
adc
adc
or
push
mov
clc
aam
rcr
lss
xchg
leave
arpl
mov
fsub
pop
sti
emms
mov
lods
mov
fldenv
int
cmp
mov
shr
cld
mov
pop
inc
sti
mov
cmps
jmp
shl
cmc
pop
sbb
inc
rol
(bad)
nop
jle
sbb
fdivrp
mov
lods
div
xlat
mov
pop
out
enter
jnp
inc
shl
cmp
out
aad
inc
mov
pushf
rcl
inc
dec
jmp
cmp
fimul
out
push
mov
jne
mov
add
sub
cmp
push
sub
fcom
addr16
mov
xchg
mov
push
sbb
and
push
imul
cmp
push
stos
sbb
cli
jecxz
in
cmp
sti
shr
dec
aam
call
xor
into
repnz
mov
or
jp
scas
shr
jecxz
inc
adc
pop
jmp
cld
inc
in
pop
jnp
jnp
pushf
fisttp
mov
rcr
ja
cmc
mov
test
push
xor
dec
dec
push
cmp
test
ja
(bad)
outs
imul
fld
cli
ins
mov
pop
fidiv
inc
pop
ds
sub
xchg
loopne
mov
ins
sti
ret
pop
test
shl
sbb
outs
jmp
jecxz
fstp
jbe
dec
push
add
or
les
adc
sub
je
inc
sub
movs
mov
(bad)
scas
fs
push
push
fld
sbb
push
clc
outs
sub
and
inc
into
or
cmp
mov
or
lds
sub
les
pop
mov
test
sahf
popf
mov
push
pop
shr
pushf
lods
pushf
and
(bad)
(bad)
loop
ins
icebp
int
lea
nop
push
pop
mov
(bad)
adc
aam
call
mov
cmp
mov
stos
adc
cli
mov
sub
gs
cmps
ret
add
rol
mov
(bad)
ins
in
(bad)
into
ja
mov
pop
test
mov
scas
xor
dec
out
sahf
lods
xchg
cmc
push
jb
push
ds
jo
jbe
jo
nop
push
sahf
push
push
xchg
sete
mov
ds
fisttp
add
jbe
sti
rol
test
mov
adc
mov
dec
mov
cmp
mov
mov
call
out
movs
pop
mov
jbe
and
ss
dec
arpl
pop
loop
loop
cmp
ds
xchg
int3
aas
sub
cs
cwde
shl
mov
cdq
mov
loope
es
jne
call
add
call
out
aas
jb
push
add
clc
out
jne
shr
(bad)
mov
iret
sub
jns
dec
scas
add
idiv
cmp
out
mov
push
mov
sbb
(bad)
mov
or
pop
mov
test
sbb
and
repz
(bad)
es
test
(bad)
jb
pop
arpl
xchg
mov
dec
sbb
(bad)
repz
frstor
jmp
inc
popf
(bad)
aaa
popf
std
or
cmc
sbb
nop
cmp
call
sub
ret
dec
int
aad
adc
(bad)
jmp
mov
sub
adc
and
stos
repnz
inc
sub
iret
fstp
jmp
or
ds
push
sub
mov
mov
loope
add
fucomp
mov
xchg
xor
loop
push
js
jno
ret
sti
or
dec
inc
push
pushf
arpl
in
inc
dec
xor
mov
pop
jae
rcl
repz
ins
mov
cmp
sbb
mov
add
les
and
scas
jecxz
mov
call
(bad)
xor
push
sbb
mov
shl
out
dec
mov
mov
in
adc
in
test
sahf
pop
popf
sub
out
mov
cwde
lods
pop
xor
mov
mov
fdivr
rcr
cmp
inc
out
inc
pusha
(bad)
jp
call
cmp
sub
int3
mov
mov
es
repz
je
and
push
mov
jns
sbb
mov
fldcw
fnstenv
rcl
inc
pop
sar
mov
shl
clc
mul
cmp
ficom
mov
mov
fsubr
out
jne
aaa
or
jbe
dec
enter
sti
pop
in
int
enter
push
mov
lods
lahf
and
sub
jmp
ja
pushf
or
jl
sti
stc
call
shl
adc
fwait
dec
jno
jae
and
aas
ds
mov
popf
inc
stos
or
daa
int3
sbb
test
out
rol
add
add
add
pop
add
scas
add
add
add
add
add
pop
add
add
add
add
popa
fdiv
in
add
add
add
add
jge
add
add
cmps
add
loope
add
add
inc
add
push
add
add
add
add
add
add
das
add
or
add
add
or
add
add
add
sbb
add
add
add
add
add
add
(bad)
fsub
add
int3
add
jns
add
add
jb
add
daa
add
add
add
aam
add
add
add
cmc
out
mov
adc
jmp
sub
push
add
pop
addr16
js
jae
sti
fild
sub
mov
push
cwde
mov
mov
scas
dec
pop
or
xor
mov
std
push
jb
repz
loop
dec
or
dec
enter
xchg
into
(bad)
lods
ror
fcmovu
xor
sbb
xchg
test
pusha
je
cmp
mov
(bad)
ss
pop
cmp
dec
pop
mov
adc
pop
mov
or
cmp
sbb
jae
dec
xchg
dec
in
mov
imul
xor
popa
xchg
cli
dec
mov
inc
cmp
push
mov
sub
sub
loop
sub
in
hlt
fs
sbb
pop
lock
xchg
shl
arpl
pop
call
adc
mov
mov
jge
mov
mov
mov
or
pop
xor
sbb
and
jecxz
xor
icebp
fiadd
jecxz
aam
mov
jle
retf
ss
sbb
arpl
mov
jo
inc
jl
sub
xor
stc
cwde
jg
jmp
outs
jge
mov
adc
jo
rol
ds
jb
sub
xchg
inc
or
cli
pusha
sub
imul
mov
pop
mov
sbb
cdq
push
dec
test
es
imul
push
adc
xor
out
adc
push
dec
mov
cs
push
mov
mov
addr16
cld
add
cmps
call
cmps
pop
fbstp
mov
xor
pop
and
aad
sti
cmp
fwait
ins
outs
add
xchg
cdq
icebp
or
sub
call
fisubr
and
std
xchg
loope
xchg
xor
push
das
arpl
xchg
sbb
inc
and
call
int
push
stos
cmp
add
push
(bad)
jge
xor
mov
data16
push
mov
(bad)
outs
in
dec
jmp
mov
mov
cwde
sbb
jae
jecxz
jne
jo
sbb
iret
icebp
add
xchg
enter
push
jbe
mul
call
mov
dec
lea
shl
pop
(bad)
mov
sbb
inc
push
(bad)
scas
pop
adc
jmp
in
push
mov
clc
dec
xchg
or
xor
movs
push
dec
sub
movs
or
inc
shr
or
xor
mov
dec
adc
aas
jnp
popf
imul
int
xor
fdivr
gs
pop
inc
bound
(bad)
xchg
out
sub
dec
movs
in
sahf
scas
pop
lds
sahf
add
xor
sub
jg
sub
sub
jl
enter
ja
xchg
jne
dec
sub
jl
ret
inc
mov
mov
js
(bad)
cmp
in
xor
xor
mov
test
cmp
fcom
xchg
int
retf
xor
iret
inc
mov
inc
into
jbe
xchg
pop
and
mov
fidivr
das
xlat
(bad)
jo
ja
mov
and
test
test
fdiv
out
sub
xor
pop
push
pop
sahf
sub
pop
mov
dec
sub
pop
into
mov
fadd
js
cmp
xor
sub
cmp
daa
pop
icebp
into
xor
pop
pop
dec
out
and
inc
into
aas
rol
sahf
push
xchg
sub
xchg
ins
(bad)
out
(bad)
push
ins
inc
test
stos
shl
jo
jnp
ins
repz
daa
xor
arpl
adc
xor
inc
xchg
iret
aas
out
icebp
inc
das
bound
or
scas
sub
std
popf
inc
jle
and
mov
and
stos
mov
pop
adc
jb
sub
sahf
dec
push
sbb
jae
inc
nop
sbb
mov
retf
(bad)
out
jae
mov
repnz
or
stos
push
sub
gs
mov
das
pop
xchg
es
es
push
jmp
aad
pop
arpl
cmp
out
int
sub
loopne
(bad)
adc
leave
mov
jae
retf
cmp
mov
fnstcw
loope
jecxz
cmp
xchg
mov
jmp
push
cmp
add
test
jecxz
fistp
push
fs
jae
sub
push
xchg
ficom
and
xchg
imul
sbb
xchg
add
icebp
(bad)
hlt
out
adc
neg
enter
stos
icebp
sbb
mov
inc
std
clc
xchg
std
das
jo
xchg
clc
test
sub
(bad)
push
mov
pushf
clc
imul
push
(bad)
mov
std
push
and
popa
xchg
cmps
call
jnp
loop
xchg
dec
or
test
and
inc
add
imul
xchg
ds
mov
jl
cmc
outs
mov
call
and
sbb
pop
in
(bad)
pop
xchg
jmp
into
sub
and
in
jnp
shl
into
movs
(bad)
shl
or
sub
sub
mov
mov
xchg
jns
stos
inc
pop
call
adc
lock
cmp
in
sahf
push
pop
movs
stos
test
fcom
cmp
ret
imul
pop
dec
add
loop
xchg
les
cwde
icebp
mov
and
mov
mov
push
retf
cli
ss
scas
xor
sbb
and
sbb
inc
mov
pop
jmp
jb
push
retf
xor
mov
retf
sbb
jl
mov
inc
aas
push
dec
mov
xor
jmp
dec
stos
dec
xchg
inc
mov
xor
stc
icebp
xchg
adc
scas
xlat
jecxz
pop
push
daa
std
jns
xor
es
pushf
movs
cmp
les
jmp
jmp
ds
xor
jg
js
sub
rol
call
lahf
inc
mov
gs
and
jb
or
adc
shr
sbb
loope
push
inc
add
mov
jae
rcl
mov
js
push
ret
scas
repnz
fcomp
cmp
mov
std
sbb
loope
es
inc
push
mov
loopne
cmc
out
and
dec
es
mov
mov
out
(bad)
lahf
xchg
push
adc
neg
mov
or
or
pop
or
push
imul
mov
sub
je
push
std
and
out
adc
arpl
outs
sar
stos
add
fcmovne
int3
xor
pop
in
loopne
cmp
cmp
xor
adc
js
sub
or
fidivr
inc
push
je
fild
push
sbb
das
hlt
inc
push
in
mov
sahf
popf
or
sar
and
fidiv
daa
xor
rol
stos
sti
test
stos
push
std
xchg
jmp
jle
mov
xlat
lds
rol
sub
outs
mov
retf
or
mov
xchg
push
out
inc
xor
fwait
outs
into
icebp
xchg
pop
ins
push
ja
retf
aaa
xchg
sbb
dec
imul
dec
ret
aad
fwait
loop
and
(bad)
mov
sub
pop
pop
ror
pop
scas
cmc
push
xor
or
inc
cli
cwde
xchg
xchg
(bad)
fwait
sbb
or
popa
mov
cmpps
and
shl
out
and
imul
ja
mov
mov
or
pushf
mov
inc
into
jmp
ss
cmp
(bad)
jmp
cmp
(bad)
pop
push
out
bound
push
or
cmp
jbe
in
bound
sub
cmp
fdivr
aam
leave
xchg
adc
adc
js
mov
mov
push
in
adc
dec
xchg
and
out
mov
mov
xchg
rcr
loopne
loop
dec
sub
(bad)
push
test
jle
xchg
adc
sti
mov
sub
mov
retf
jmp
bound
out
bound
sub
sub
clc
leave
xchg
mov
fwait
push
int
ds
fcmovnu
pop
pause
xchg
xchg
xor
das
in
push
(bad)
xchg
add
xor
or
sub
inc
hlt
repz
fxch
xlat
lock
push
loop
sub
ret
xchg
cli
inc
loope
jmp
(bad)
xor
xchg
lds
je
mov
dec
in
mov
and
pusha
cmps
adc
sub
ins
cmp
mov
loopne
rcl
out
or
sbb
sbb
ror
into
shr
lods
stos
push
fwait
cs
dec
sub
sub
jl
jg
ret
pushf
mov
add
and
ror
popf
pushf
int3
dec
sbb
inc
lods
lahf
mov
mov
mov
addr16
jmp
in
retf
inc
push
and
stos
pop
jae
scas
cwde
into
mov
ja
or
movs
adc
data16
clc
jno
in
dec
mov
test
pusha
xchg
pop
imul
repz
inc
popf
mov
hlt
dec
ins
mov
adc
sub
mov
cmp
sbb
cdq
les
fwait
cmp
jecxz
call
jno
aas
leave
inc
daa
aam
cli
push
push
int3
mov
inc
jno
add
jmp
mov
cmp
push
ins
pop
push
test
lahf
std
push
fidiv
in
adc
sub
jo
in
dec
(bad)
xor
shl
fdiv
lea
daa
mov
mov
std
outs
icebp
and
sub
std
lds
or
xchg
push
pop
cdq
call
sub
mov
out
es
xor
mul
call
and
(bad)
push
int3
sahf
in
lock
mov
jne
mov
cld
inc
fwait
sar
jae
enter
cmp
mov
xor
je
pusha
sbb
xlat
scas
pop
fwait
leave
mov
and
(bad)
call
cmp
out
lock
mov
shr
cdq
cmp
jmp
pop
test
push
and
js
mov
lea
xchg
sbb
lahf
in
out
xchg
jb
mov
aam
shr
sbb
aad
push
xlat
cmp
(bad)
setae
jmp
call
xchg
jbe
div
in
fs
or
cmps
ins
mov
sub
call
push
nop
xchg
add
cmp
jns
or
outs
cli
(bad)
cld
mov
fisttp
xchg
mov
sbb
cld
pop
mov
leave
retf
(bad)
aad
cmc
pop
xchg
sub
cmp
(bad)
mov
in
outs
or
adc
add
add
add
enter
add
fcmovne
add
add
add
dec
add
mov
add
add
fadd
add
add
add
add
xor
add
add
add
add
add
mov
add
leave
in
add
add
add
cmp
add
jg
add
sbb
add
add
add
add
add
add
rol
add
add
add
test
dec
add
add
add
add
and
cld
sub
sub
xor
aas
pusha
div
jnp
push
push
mov
ins
sub
loopne
pop
push
(bad)
retf
mov
ss
sbb
imul
push
cmps
js
adc
retw
int
xchg
dec
or
pop
jae
test
dec
xor
out
pop
push
gs
add
ror
dec
mov
pop
arpl
jl
push
ret
fstp
mov
sbb
retf
sar
pop
mov
int3
dec
cmps
cmp
push
jmp
rcr
jno
imul
popf
mov
pop
dec
jo
std
pop
jmp
cmp
loopne
cmps
iret
jb
clc
xchg
cld
xlat
fs
sbb
xchg
cli
imul
mov
arpl
(bad)
push
out
dec
iret
(bad)
mov
call
mov
(bad)
ins
sub
in
js
xchg
dec
adc
xchg
mov
stc
dec
cmp
xor
push
sub
cmp
sahf
cld
leave
in
(bad)
cmp
mov
in
jecxz
ficom
jo
ins
fs
fwait
mov
(bad)
inc
ret
xchg
push
out
xor
(bad)
fsubr
int
pop
xlat
aaa
mov
inc
jns
cmc
push
fnstsw
cmps
adc
fidivr
dec
ins
dec
add
clc
jg
push
add
push
into
popf
pop
xor
cdq
dec
aaa
es
mov
xchg
bound
shl
mov
sub
std
inc
aas
fist
dec
xchg
mov
fs
(bad)
mov
(bad)
les
cmp
aas
pop
fidivr
loope
rcr
fst
mov
int
cmp
pop
mov
pop
adc
push
sar
xchg
das
repnz
cmp
sbb
mov
and
and
mov
(bad)
pop
push
ffree
push
les
push
mov
lahf
mov
pop
js
jnp
lock
push
fild
cmp
aas
adc
push
sub
xor
and
das
sbb
pop
inc
push
mov
adc
sbb
push
cmp
repz
retf
cmp
popa
ror
aam
xlat
inc
mov
add
push
loope
cli
sbb
mov
lea
mov
(bad)
jo
cmp
sbb
pop
stos
scas
mov
sbb
pusha
xchg
int3
push
inc
sub
test
popa
and
cmps
test
mov
(bad)
pop
mov
movs
jno
ja
imul
movs
in
xchg
push
xor
scas
mov
fdiv
retf
mov
push
jb
push
(bad)
js
out
bound
add
dec
mul
sbb
or
icebp
(bad)
leave
sub
scas
pop
mov
pushf
(bad)
or
xor
dec
pusha
dec
outs
shl
loop
push
adc
lock
mov
nop
jp
dec
outs
jb
adc
xchg
xchg
fiadd
stc
xchg
inc
nop
(bad)
fisub
sbb
jae
imul
stc
out
inc
loopne
in
out
int
pop
mov
and
dec
fst
jge
add
push
cmp
stos
or
repz
inc
sbb
push
sub
xor
mov
fadd
or
in
sub
xchg
mov
lds
sub
push
jno
cmp
mov
call
movs
cwde
enter
das
das
(bad)
neg
adc
mov
xor
mov
mov
mov
mov
(bad)
iret
(bad)
mov
pop
in
xor
dec
test
and
adc
ret
retf
enter
int3
and
cmp
out
xchg
repz
fwait
jno
xchg
pop
and
mov
xor
call
scas
jne
test
mov
sub
mov
jo
clc
and
or
jne
add
pop
sar
sub
retf
push
or
in
add
push
push
jne
ja
jl
pop
cli
pop
ins
sbb
mov
cmps
and
pop
aad
sbb
jne
jmp
call
xlat
mov
mov
mov
adc
jl
inc
mov
pop
out
mov
test
jns
pusha
mov
add
pop
add
sub
nop
arpl
push
push
cdq
or
lods
das
inc
enter
sbb
mov
add
push
pop
dec
fcomip
mov
es
mov
sbb
out
lea
xor
lock
and
push
dec
leave
leave
sub
sbb
mov
nop
mov
or
out
pop
std
(bad)
ds
shr
xor
movs
fndisi(8087
push
jno
repnz
sahf
mov
arpl
inc
mov
les
lea
jbe
fisttp
push
inc
shl
sub
rcl
jno
jo
xor
dec
cwde
xchg
jp
jmp
mov
mov
retf
aaa
xor
(bad)
mov
xor
(bad)
call
cwde
ins
push
bound
retf
loopne
push
push
out
sbb
into
add
fnsave
jmp
jnp
xchg
xor
pop
xchg
add
bnd
popf
jae
mov
clc
retf
das
hlt
aas
test
stos
jo
je
sub
nop
loopne
lods
fistp
sti
leave
sar
pop
xor
inc
ficom
xlat
add
dec
add
dec
sub
cdq
lods
inc
jmp
dec
jnp
les
call
or
pop
cmp
fbstp
aas
sahf
and
xlat
out
sahf
test
and
daa
(bad)
fld
add
mov
cdq
out
and
mov
gs
push
pop
pop
nop
fisub
data16
xor
cmp
add
lahf
sub
stos
add
out
je
xor
lea
icebp
inc
out
cmps
cmp
pop
pop
add
(bad)
repz
mov
pop
adc
xor
xchg
mov
adc
(bad)
push
pop
ret
push
and
pop
stos
inc
aam
push
ret
adc
inc
test
test
je
fadd
adc
movs
or
iret
adc
loopne
mov
add
jl
pop
lods
sub
(bad)
push
mov
push
or
pop
sbb
(bad)
ja
ja
stos
push
and
jp
clc
out
add
dec
or
stc
or
bound
inc
fnstcw
xchg
sub
cmp
gs
xchg
cmp
or
inc
fist
ins
adc
push
fld
or
dec
(bad)
enter
(bad)
int
jl
in
add
out
mov
cmp
nop
and
xor
ss
jmp
inc
ss
cld
in
enter
lock
jb
and
mov
sahf
aad
fsubr
pop
adc
sbb
sub
or
jae
pop
mov
les
aad
pop
xchg
cmp
into
(bad)
jnp
cmc
sbb
out
xchg
or
mov
or
hlt
sahf
push
lods
jno
in
sub
pop
cmps
jmp
out
ja
iret
mov
call
cli
xlat
mov
scas
mov
or
mov
or
and
movs
xchg
out
adc
shl
scas
jmp
mov
ja
sbb
ins
mov
clc
loopne
pop
ret
mov
fiadd
pop
mov
xor
push
sbb
add
fcom
sbb
sub
cmp
lock
xchg
xchg
mov
cmp
sub
cmps
cmp
mov
sbb
imul
cld
adc
adc
and
ja
data16
jne
je
xor
pop
stc
test
push
repz
push
in
pop
xlat
cmps
in
call
in
xor
int
sbb
and
fwait
mov
scas
aaa
stos
stc
fwait
rol
lock
pushf
dec
xor
add
jae
xor
test
cmp
stos
sbb
outs
cld
sbb
test
movs
loopne
arpl
pop
pop
das
fmul
out
fs
cli
retf
ss
cmp
sub
repz
jns
adc
mov
mov
push
lock
push
mov
push
shl
iret
mov
iret
lods
aaa
sub
push
(bad)
push
adc
arpl
scas
xor
cmc
cmp
add
(bad)
call
shl
mov
jmp
push
mov
fsub
fwait
mov
ins
ins
push
loope
or
arpl
sbb
push
xor
jns
ins
push
jne
mov
les
pop
pop
repnz
or
push
loop
movs
push
daa
retf
jecxz
sbb
inc
iret
jns
or
mov
mov
push
pusha
add
sbb
gs
sbb
fldenv
jbe
adc
adc
mov
xchg
les
not
(bad)
xchg
sbb
jl
sahf
stc
adc
xchg
dec
test
jne
out
xor
and
ins
enter
loope
daa
retf
jmp
sbb
call
mov
out
xrelease
xchg
test
stc
pop
out
mov
adc
xchg
xchg
and
cli
xchg
adc
xchg
stos
iret
das
jmp
xchg
mov
test
or
cld
jmp
mov
pop
stos
imul
pop
movs
imul
arpl
cmc
das
pop
and
cwde
dec
imul
mov
add
ret
cli
(bad)
in
adc
gs
ss
pushf
int3
lds
cmp
dec
imul
xor
xchg
and
dec
cdq
leave
xor
and
iret
cld
into
cmp
outs
not
push
push
xor
iret
dec
icebp
mov
sub
mov
jecxz
sbb
sar
dec
adc
iret
loop
ret
mov
fidiv
jl
inc
retf
pushf
sub
ret
cmp
push
or
out
mov
push
or
sub
pop
shl
outs
stc
dec
(bad)
xor
inc
in
push
clc
mov
pop
xchg
push
(bad)
mov
pop
lock
fild
inc
mov
mov
cli
aaa
add
xchg
movs
sbb
das
mov
lods
pop
mov
and
rcr
aas
pop
and
retf
or
call
mov
ss
push
mov
inc
repz
in
fst
out
arpl
sbb
aas
or
movs
cli
adc
ret
mov
fld1
clc
jnp
fild
inc
mov
outs
mov
cmp
movs
retf
adc
ins
and
bound
jl
push
int3
sub
(bad)
imul
neg
mov
or
jle
test
repz
add
arpl
loop
xor
les
fcmovbe
or
fsub
ins
add
and
mov
xor
jle
(bad)
rcl
icebp
cmp
cs
aaa
inc
mov
add
add
add
add
mov
add
add
add
push
movs
add
retf
mov
les
scas
add
add
add
add
add
add
add
in
repz
add
add
in
add
add
add
add
add
add
add
jle
add
add
add
add
add
add
rol
add
cmp
add
add
add
add
add
add
shl
sbb
ins
ins
add
fild
inc
add
jne
add
nop
add
add
xor
mov
retf
add
add
mov
sbb
in
retf
int
push
sub
add
add
les
add
add
add
les
js
in
mov
mov
fwait
inc
sub
stc
leave
jle
cmps
jg
dec
add
adc
dec
mov
repnz
sub
sbb
jmp
xchg
lods
mov
jge
xlat
push
mov
scas
push
pop
retf
shl
gs
div
lahf
rol
in
int3
in
fs
je
inc
mov
stc
cs
fnsave
call
outs
lea
or
or
lock
jno
xchg
inc
stos
jp
call
add
retf
vpmulhuw
mov
mov
sti
pop
inc
(bad)
lods
ins
mov
ficomp
aam
enter
int3
jmp
int3
dec
sbb
add
inc
lods
jp
sub
(bad)
push
ret
shl
sub
fbstp
lods
aas
add
cmc
mov
or
or
sbb
mov
into
out
jmp
repz
cwde
lods
shr
dec
sbb
test
test
dec
mov
out
jne
icebp
push
call
jp
idiv
cs
jmp
ins
in
sub
test
addr16
sub
dec
jge
mov
lahf
jns
int3
or
cmp
sub
in
push
out
pop
fldcw
pop
and
setae
or
pop
mov
jecxz
in
push
sbb
mov
ret
pop
or
aas
retf
pop
js
dec
sub
ror
and
ja
mov
or
call
and
jns
push
jmp
lahf
lahf
jne
arpl
int3
jo
push
push
xor
xchg
dec
loope
add
push
sbb
push
sbb
(bad)
or
xchg
and
std
push
adc
push
fcom
cmp
pop
cdq
mov
or
sub
mov
sbb
(bad)
iret
xchg
cdq
scas
lds
sbb
mov
cmp
movs
sbb
outs
ficomp
mov
mov
inc
or
sbb
enter
ins
mov
lea
les
dec
push
jmp
mov
lahf
or
stos
out
jbe
scas
test
je
cmp
and
mov
mov
mov
idiv
fiadd
cmps
mov
loopne
or
(bad)
arpl
push
mov
in
pop
or
mov
hlt
adc
adc
cli
mul
aas
retf
jae
xchg
fidivr
fcom
in
into
jo
call
inc
push
shr
dec
push
add
mov
fsub
test
shr
in
iret
jge
cmp
and
push
movs
mov
stc
adc
jmp
call
jb
icebp
bound
jle
in
jae
popw
sub
out
(bad)
push
popa
jo
xlat
repnz
mov
pop
sbb
inc
stc
call
out
dec
dec
cmp
addr16
mov
jo
inc
pop
retf
xchg
leave
shl
je
mov
imul
div
mov
dec
inc
xor
mov
mov
lds
sub
out
(bad)
xor
sar
into
jno
mov
pop
mov
mov
jle
(bad)
neg
shl
fidiv
mov
sbb
mov
or
dec
sar
xchg
jo
cmc
adc
push
push
out
iret
push
jb
int
push
fcom
mov
jae
stc
lods
push
mov
cmp
ins
les
cmp
push
cmp
sbb
add
dec
(bad)
ins
pop
pop
inc
iret
aas
movs
mov
mov
imul
push
adc
and
sub
aaa
frstor
cmp
das
repz
out
aad
in
cmp
jb
fwait
aas
jno
jne
dec
lods
gs
mov
sar
push
mov
ret
std
or
or
je
mov
inc
sbb
lock
dec
mov
mov
push
mov
mov
mov
cmp
inc
mov
(bad)
sti
stos
dec
mov
out
ins
cmp
and
test
jmp
int3
push
sti
sbb
add
inc
(bad)
arpl
mov
shr
pop
jnp
call
aaa
dec
bound
stos
jle
jnp
ret
mov
xchg
and
inc
pop
xchg
fcomp
inc
pop
push
mov
(bad)
pusha
jl
mov
sbb
inc
sub
xchg
inc
in
mov
jecxz
aas
ror
fild
add
dec
jne
cs
jns
ficom
jo
add
fcom
cmp
jl
ins
mov
inc
xor
inc
push
adc
push
cmps
test
adc
push
pop
cld
push
add
fnstcw
adc
sar
scas
mov
int3
loopne
or
mov
jns
call
pop
das
ja
xchg
pushw
jl
pop
mov
push
in
jecxz
sub
pop
les
lea
sub
pusha
sbb
add
push
mov
cmps
adc
clc
push
mov
repnz
or
fnstsw
(bad)
jle
mov
pop
rcl
jb
(bad)
pop
lea
sub
outs
jle
mov
test
pop
xchg
pop
jo
xor
lea
mov
je
mov
shr
ret
push
(bad)
js
scas
prefetch
or
cdq
adc
addr16
addr16
or
push
cmps
arpl
pushf
and
pop
push
dec
cmps
adc
stos
push
movs
or
mov
call
push
outs
jle
shr
ins
mov
jmp
add
outs
ret
sub
adc
lahf
cmp
pop
inc
xchg
stos
daa
xchg
dec
test
and
cmp
fsubr
(bad)
call
fs
(bad)
(bad)
push
xor
inc
xchg
jns
ins
gs
nop
mov
push
mov
push
jnp
or
push
retf
pop
int3
xchg
push
xchg
jmp
outs
(bad)
(bad)
cld
iret
sub
(bad)
ds
jmp
mov
in
movs
ss
add
adc
fwait
mov
sahf
jb
ret
xor
sar
rcl
adc
adc
or
or
push
mov
scas
jge
xchg
push
test
lds
push
xor
std
loope
dec
inc
and
test
and
fs
fimul
push
push
ret
dec
jno
pop
lea
call
mov
icebp
mov
enter
jle
add
cmp
ins
dec
call
pxor
(bad)
cmc
stos
sbb
jae
cmc
idiv
(bad)
(bad)
add
(bad)
pop
push
nop
sahf
cld
not
sbb
jae
or
out
pop
fmul
out
mov
adc
push
xor
movs
jae
cmp
xlat
shl
mov
jno
ss
sub
imul
adc
(bad)
push
jne
mov
and
push
(bad)
imul
add
call
adc
inc
rcl
icebp
fcmovnu
add
push
loopne
add
out
std
cmp
sbb
mov
gs
cmc
stos
jl
jne
mov
xor
sbb
and
call
in
inc
test
and
mov
mov
cmps
add
ins
cmp
sub
pop
jle
pop
sbb
push
cmps
pop
adc
push
mov
mov
mov
lock
mov
fs
imul
fnsave
cdq
mov
cmp
shr
adc
mov
test
mov
push
jmp
mov
push
cdq
or
xchg
es
mov
(bad)
hlt
data16
pushf
in
sub
jo
int3
js
mov
sbb
or
push
add
nop
loopne
fisubr
mov
addr16
push
mov
push
in
inc
dec
test
xor
int3
rol
clc
in
clc
iret
cdq
pop
xchg
add
leave
xor
test
in
cwde
inc
inc
jae
mov
std
in
int3
jno
jb
rcl
movs
test
fist
inc
inc
les
jecxz
hlt
push
xor
adc
bound
push
loopne
es
ds
mov
cmp
or
call
leave
pop
push
mov
mov
jecxz
add
out
push
(bad)
or
and
out
call
push
pop
and
aaa
inc
adc
out
popf
xor
push
rcl
test
cmc
repz
mov
cwde
es
ins
shl
movs
sub
jmp
test
in
and
mov
leave
dec
mov
push
or
lahf
dec
mov
jbe
sbb
xor
aam
maxps
fld
loop
mov
pusha
adc
repnz
in
mov
aas
pop
call
fcomi
not
mov
je
cmp
and
sub
mov
cmp
lods
in
sbb
sub
sbb
and
lock
(bad)
(bad)
clc
pusha
test
(bad)
daa
mov
pop
pusha
movs
in
loop
(bad)
ins
cli
out
popf
xchg
mov
mov
or
into
xchg
mov
sub
loope
popa
movs
and
sub
cs
outs
cmp
lods
xchg
mov
fisubr
shr
xchg
pop
fcomp
mov
xchg
cmps
fist
repz
dec
outs
jae
xchg
pop
sub
imul
mov
cmp
cmp
shr
mov
inc
int3
outs
fstp
faddp
icebp
mov
and
cmp
mov
or
jp
mov
jmp
aaa
int
add
loop
sub
inc
jle
call
(bad)
retf
cmp
es
(bad)
not
cmps
xchg
int
jae
inc
xchg
test
sahf
mov
xor
enter
arpl
xlat
adc
jne
das
into
inc
bound
ficom
(bad)
(bad)
shr
fadd
les
idiv
fucomip
aaa
std
sub
and
lods
cmps
pop
push
push
outs
and
sbb
adc
bound
jns
(bad)
ins
mov
add
outs
int3
xchg
fstp
iret
cmp
inc
enter
aad
cmp
out
or
sub
adc
xor
xor
ret
sar
push
cmp
repnz
xor
arpl
in
pop
push
test
or
repz
mov
inc
pusha
xchg
xor
lods
out
lahf
fistp
mov
mov
outs
jmp
into
push
add
add
add
add
inc
add
fild
add
add
add
aad
add
add
add
and
cs
add
add
add
add
add
add
dec
add
and
add
mov
add
repnz
add
cwde
add
add
add
add
cmp
add
add
add
add
add
add
add
add
nop
push
add
add
rol
add
aad
add
add
jmp
add
ins
add
jg
adc
sbb
add
test
sub
dec
rol
cmp
pop
sub
stc
scas
movs
jae
mov
adc
inc
ret
lods
enter
or
addr16
(bad)
xlat
jg
outs
std
neg
dec
and
scas
das
mov
adc
or
xor
cmp
inc
cmp
cdq
push
arpl
out
in
xor
and
ret
push
fbstp
fisttp
cdq
or
adc
xchg
test
sub
mov
dec
cmp
out
scas
adc
jae
outs
push
fdiv
cli
ja
adc
int
sub
and
push
sbb
or
or
cwde
retf
jle
ins
jb
and
mov
dec
aas
dec
dec
popf
or
inc
ins
add
push
cmp
test
adc
push
into
xchg
sub
xchg
mov
jbe
shr
or
out
add
scas
outs
mov
adc
sar
pop
(bad)
imul
jg
out
add
push
sub
test
mov
inc
out
iret
mov
add
and
sar
pop
cmp
cmp
push
mov
enter
mov
(bad)
test
mov
or
cmps
aas
pushaw
mov
dec
fwait
out
ss
xchg
sahf
inc
inc
mov
sbb
push
jae
and
les
cmps
xchg
jecxz
xchg
aas
add
pop
xor
or
in
int3
cmps
std
pop
add
dec
jl
jmp
inc
rcr
gs
out
xor
inc
imul
jecxz
dec
add
fwait
cs
outs
jnp
and
sub
mov
scas
test
and
jg
mov
dec
or
push
aas
je
inc
sub
into
xor
stos
ja
fcmovnb
(bad)
xchg
add
test
scas
push
cli
sub
ror
ret
arpl
push
stc
ins
pop
pop
and
xchg
call
mov
cs
in
pop
xchg
inc
mov
aad
add
leave
xor
and
in
pop
fcomi
xchg
fcmovu
xor
pushf
or
jmp
adc
pop
enter
out
inc
sbb
pop
lahf
popf
mov
fst
imul
cwde
shr
xchg
inc
push
es
scas
rol
lods
loop
in
das
push
iret
xchg
out
(bad)
sbb
and
in
loope
lahf
add
loopne
push
aas
sti
(bad)
int
sub
and
pushf
pop
jle
sub
mov
adc
push
sub
mov
imul
cmps
les
mov
dec
mov
jo
sti
out
pop
inc
mov
(bad)
movs
je
icebp
hlt
and
loopne
std
pop
stos
mov
or
jg
jecxz
stos
pop
cmp
xor
mov
mov
mov
inc
sbb
hlt
xchg
in
mov
mov
sar
adc
push
lods
pushf
psubq
pop
mov
ss
sbb
pop
popa
push
jmp
or
inc
or
ror
aad
fcomp
mov
cmp
or
aas
pop
addr16
fmul
push
xchg
xchg
xchg
dec
fwait
daa
in
stc
lods
ss
adc
xlat
mov
mov
fidivr
fs
in
push
cmp
lahf
dec
enter
cdq
test
cmp
mov
push
ja
(bad)
sar
ret
data16
psadbw
repz
(bad)
dec
push
in
(bad)
jle
sub
addr16
in
int
and
cmp
jg
lods
hlt
ss
jmp
leave
dec
mov
nop
cmp
jae
adc
inc
cmp
cmp
mov
je
or
jne
enter
daa
es
adc
js
add
addr16
sbb
into
es
(bad)
jp
dec
mov
sahf
inc
inc
mov
cmp
cmp
or
inc
retf
and
fs
cmp
jb
clc
loopne
xor
xchg
push
pushf
js
ds
xchg
mov
mov
pushf
rol
add
dec
ins
and
or
push
adc
push
lods
addr16
adc
stc
inc
adc
cmovno
fs
adc
push
loopne
or
jmp
sbb
xor
push
(bad)
ins
mov
in
xlat
cmp
pop
fild
xor
push
xlat
inc
je
(bad)
out
pop
push
push
jg
iret
add
(bad)
sbb
push
test
xchg
fistp
sub
cli
cli
and
(bad)
in
mov
sti
ss
ficomp
loope
fcmovbe
or
pop
jmp
inc
cmp
into
cmc
bound
pop
xor
js
jae
xchg
fmulp
or
mov
or
pop
inc
ins
not
xor
ret
xchg
(bad)
dec
sub
cwde
sub
aad
cmps
inc
xor
mov
retf
das
loope
xor
sub
and
sbb
and
inc
inc
std
leave
add
xchg
loopne
mov
popf
push
jp
pop
jo
adc
icebp
mov
not
jbe
scas
dec
imul
inc
mov
hlt
pop
cmps
push
add
ret
sti
xchg
clc
mov
dec
fnstcw
sbb
das
aam
cmp
jbe
mov
cs
mov
xchg
or
scas
iret
push
scas
and
cmp
cs
or
(bad)
push
mov
sub
inc
or
cmps
je
inc
retf
popa
or
cmp
dec
out
addr16
aaa
(bad)
shl
out
sub
loopne
jno
or
pop
cmp
jb
(bad)
push
out
and
mov
bound
repz
jl
pop
sbb
outs
push
cwde
or
xchg
leave
mov
mov
out
push
in
and
mov
cmps
movs
mov
dec
movs
imul
mov
lahf
mov
mov
stos
mov
rol
call
sti
fs
push
pop
imul
sbb
(bad)
in
xchg
or
xchg
mov
cmp
and
xor
xlat
sbb
or
pop
dec
repnz
retf
test
jae
xor
cli
mov
rcl
clc
out
sub
ret
rcl
xchg
ss
retf
nop
in
lods
call
cdq
addr16
cmp
jmp
cmc
mov
and
fisub
push
push
mov
jmp
xchg
jmp
jmp
and
movs
mov
mov
vpmacsdqh
jae
lods
push
and
loope
or
push
lea
dec
dec
scas
xchg
pop
stc
stc
jl
sbb
mov
repz
jno
lods
shl
mov
lahf
cmp
les
mov
pusha
(bad)
mov
pop
inc
cmp
ret
mov
pop
shl
mov
ss
push
shl
xchg
xor
aam
jg
sub
adc
loopne
push
inc
xchg
sub
push
pop
inc
lods
push
movs
xchg
mov
cli
push
ret
jbe
cmps
xchg
aam
cdq
push
mov
and
xchg
cmp
mov
scas
icebp
sbb
cmps
cmp
icebp
jle
popa
outs
outs
jl
pop
inc
paddusb
dec
push
push
mov
(bad)
outs
arpl
push
jbe
int
push
xor
jbe
aaa
xchg
mov
add
jmp
xchg
fistp
fcom
outs
push
xchg
sbb
icebp
scas
mov
or
scas
sahf
mov
nop
dec
or
bound
sub
ins
aad
fwait
or
xor
std
dec
ror
mov
cmps
es
mov
jmp
dec
add
and
lock
or
adc
lods
out
fstp
mov
add
dec
cmp
jb
mov
loope
xor
repz
or
pushf
cmps
test
pop
fsub
xor
retf
mov
sbb
fadd
shl
fist
add
adc
bound
mov
popf
shl
inc
mov
stos
adc
movs
into
jae
pop
dec
push
leave
fsubr
ins
or
out
imul
jbe
cmp
xchg
loop
xchg
add
int3
or
sbb
mov
dec
test
add
mov
loopne
pop
push
(bad)
mov
mov
es
xchg
xchg
inc
js
in
jle
ficom
xor
fcmovnb
icebp
leave
fsubr
stos
ds
xor
add
add
inc
scas
xchg
sbb
sub
stos
test
sbb
and
lods
xchg
mov
cmps
sbb
fcmovbe
jle
cmp
pop
retf
mov
pusha
cs
fs
ins
fld
sbb
jae
das
enter
ret
cmp
push
add
jp
popf
aad
or
cli
dec
sar
les
test
adc
lock
arpl
or
sub
pop
pop
clc
jmp
inc
mul
call
xor
(bad)
xchg
mov
nop
cld
dec
lods
push
inc
aam
mov
push
ror
and
mov
sub
(bad)
repz
and
inc
fistp
pop
repnz
add
push
add
ds
pop
jo
jb
mov
or
cmp
mov
and
std
push
pop
inc
gs
jecxz
sbb
add
pop
cmp
popa
mov
bound
push
mov
adc
cwde
xchg
or
pop
cwde
adc
test
push
or
ja
cli
push
jle
dec
xchg
cld
aad
pop
shl
adc
dec
mov
xor
es
pushf
cdq
(bad)
fistp
push
loop
mov
in
and
sub
outs
aas
das
imul
shl
dec
xor
js
pop
into
or
xlat
jle
mov
fisttp
xchg
add
pop
iret
(bad)
std
mov
pushf
mov
push
das
pop
cmp
enter
fdiv
add
adc
and
xor
movs
ret
sub
adc
pushf
jmp
and
call
mov
pop
pop
lods
jle
mov
shrd
jnp
das
neg
mov
dec
cmp
sub
jae
adc
mov
inc
call
jle
lea
cmp
push
mov
sub
rol
jmp
xlat
add
cmp
in
(bad)
fnstcw
xchg
push
out
aaa
jbe
enter
sbb
fdiv
out
mov
(bad)
shr
nop
ins
pop
cdq
mov
popf
lods
popa
fstp
int
add
add
add
add
dec
add
add
add
add
add
leave
add
add
add
xor
in
mov
add
add
add
add
add
add
add
add
add
fisttp
add
dec
pop
add
add
pop
cmp
add
add
out
add
add
add
add
add
add
add
out
add
add
add
add
add
or
data16
add
add
add
add
add
add
push
jmp
add
add
add
add
add
add
add
adc
cmp
add
bound
into
jae
pusha
out
xchg
jnp
frstor
cmc
lds
in
push
lea
aas
adc
loope
sbb
xor
not
jo
cmps
xchg
lods
jecxz
mul
xchg
xor
push
and
mov
hlt
push
and
mov
out
imul
repz
mov
cmp
fwait
adc
outs
test
add
cmp
popf
pop
push
call
(bad)
rcl
test
or
inc
and
std
jle
push
ins
ins
pop
scas
out
inc
repnz
leave
mov
cmps
xor
adc
or
sub
pop
mov
enter
rcr
dec
xchg
mov
sbb
test
mov
cld
pusha
sub
das
hlt
pusha
push
pop
push
(bad)
ins
add
popa
xor
out
fnstenv
push
jp
das
add
mov
xchg
jmp
or
ss
retf
push
and
jecxz
xchg
mov
xor
mov
mov
adc
ja
out
or
or
xchg
dec
xchg
sbb
and
movs
push
cmp
rcr
daa
pop
js
rcl
jmp
pop
mov
dec
call
mov
inc
mov
pusha
pop
ficom
out
mov
sub
imul
jno
in
inc
mov
sub
cmp
jo
scas
mov
xor
xor
popf
cwde
in
jnp
shl
shl
test
and
stos
xchg
(bad)
mov
push
pusha
sahf
inc
mov
sbb
arpl
ret
out
mov
ret
push
xchg
lods
addr16
xor
xor
sub
ficomp
push
jmp
in
dec
sahf
jb
add
sub
add
sbb
jmp
enter
sbb
adc
xchg
int
mov
shl
jp
pop
mov
lods
ja
out
dec
add
jno
xchg
out
cmps
xchg
add
pop
in
xchg
jmp
sub
jmp
xor
cmp
mov
out
daa
pop
mov
jnp
pusha
mov
fwait
in
push
ret
je
pop
add
stc
mov
xchg
xor
fwait
adc
jno
fs
mov
push
lea
imul
cmps
js
cmp
and
jno
imul
adc
je
jmp
dec
push
ror
and
mov
xchg
xchg
fst
add
mov
or
in
mov
jmp
sahf
pop
xor
xchg
adc
add
std
lods
cmp
push
pop
pusha
test
out
jb
ficomp
mov
lock
fcmove
add
cdq
shr
out
mov
mov
clc
stos
mov
loop
int3
adc
call
xchg
dec
call
or
in
lods
sar
scas
into
push
fistp
xchg
fadd
jne
mov
xchg
xchg
cwde
stos
ja
push
mov
mov
mov
adc
dec
add
leave
fwait
gs
or
jge
adc
mov
lock
xor
and
mov
loop
dec
test
test
jnp
push
inc
add
ja
jl
and
mov
mov
sbb
enterw
jge
bnd
mov
pop
mov
cmc
test
add
and
icebp
mov
(bad)
int3
cmp
or
(bad)
fs
jecxz
in
mov
stos
ret
sbb
pushf
jnp
cld
add
cmps
(bad)
dec
ret
mov
movs
or
jle
lods
cld
sbb
push
fs
sub
cmps
mov
mov
leave
jbe
test
pop
dec
xor
iret
inc
mov
cdq
xchg
dec
aad
ret
mov
loop
cmp
addr16
leave
push
sbb
call
je
fsubr
dec
lahf
push
je
(bad)
dec
sbb
aas
push
ins
fldenv
mov
sbb
adc
arpl
ror
repnz
push
cmc
ins
adc
mov
retf
add
(bad)
fiadd
push
push
push
or
or
mov
dec
xor
addr16
mov
(bad)
push
test
cs
xor
sbb
idiv
mov
jge
test
mov
xor
pop
sub
mov
ret
or
sub
sub
and
jg
nop
mov
(bad)
mov
out
sub
shl
sub
sahf
mov
or
mov
dec
ror
dec
lods
push
(bad)
pop
inc
cmp
push
push
fstp
inc
out
sub
mov
mov
xor
clc
pop
int3
fcmovnb
cmp
inc
xchg
pop
pop
sbb
movs
mov
mov
rol
push
data16
push
(bad)
cmp
aaa
enter
out
ins
mov
add
pop
mov
repnz
jmp
fisub
neg
movs
dec
xchg
add
in
push
gs
inc
test
pop
xchg
jno
add
cli
sbb
and
loop
leave
adc
mov
mov
lock
enter
test
add
adc
inc
add
sbb
xor
xchg
push
adc
jmp
and
xor
ins
jnp
cs
test
mov
retf
sbb
or
cli
cmp
xchg
outs
xchg
mov
(bad)
sahf
cmp
dec
jge
dec
test
fiadd
sar
jl
jg
and
push
jae
jb
jp
add
push
pusha
lods
jl
and
add
scas
(bad)
and
ja
call
lock
test
(bad)
es
test
or
aaa
jb
mov
xchg
add
js
jmp
out
fistp
mov
daa
and
and
cmps
ret
lock
js
imul
sahf
call
xor
push
xchg
mov
aaa
push
xor
addr16
push
(bad)
push
fwait
xchg
and
enter
pop
in
test
xchg
jecxz
sub
imul
int3
xor
xor
fs
xchg
sub
shl
fist
sbb
mov
jbe
and
jb
sub
jp
pusha
enter
add
stos
mov
test
hlt
je
das
(bad)
fcomp
lods
and
je
fsubr
sub
dec
or
aam
gs
push
(bad)
dec
fisttp
adc
mov
sti
and
push
hlt
hlt
adc
mov
cwde
scas
mov
dec
or
imul
mov
pop
and
cmps
loopne
jbe
lock
pop
imul
jecxz
fnsave
jecxz
or
arpl
inc
ja
retf
add
js
and
and
add
shl
inc
nop
jle
call
in
sbb
mov
pop
inc
(bad)
add
ss
inc
pop
das
out
cmps
pop
jl
adc
xchg
mov
leave
mov
iret
lods
jmp
(bad)
cmp
and
xchg
int3
jl
loop
std
push
mov
ins
and
das
pop
and
(bad)
loopne
imul
adc
mov
test
jns
repz
aaa
rol
xor
retf
mov
add
fidivr
fild
or
dec
int3
pop
mov
or
cmp
leave
mov
imul
popf
inc
mov
inc
test
jne
aaa
mov
mov
addr16
(bad)
call
sub
fisttp
icebp
xchg
or
cmc
add
mov
cld
mov
sub
femms
shl
adc
push
loop
adc
es
popf
and
lahf
jg
xchg
sti
popf
or
mov
(bad)
mov
jmp
inc
adc
inc
pop
or
push
dec
or
adc
or
add
addr16
ret
mov
mov
push
call
shr
pop
mov
sbb
sub
call
ins
das
pop
xor
fwait
add
push
adc
sbb
pop
jne
inc
push
mov
stc
pop
cmp
jmp
mov
mov
xor
mov
pop
pop
and
dec
inc
or
bound
add
and
cmc
in
jecxz
and
jl
pop
cwde
rcr
sbb
push
js
addr16
pop
fsubr
inc
aam
ds
arpl
es
push
pop
pusha
mov
rcl
push
mov
or
lods
xor
mov
mov
inc
cli
outs
sahf
mov
pusha
sub
mov
jp
sti
iret
mov
lea
pop
clc
(bad)
hlt
adc
dec
or
mov
adc
fs
cmp
push
fs
pop
iret
dec
add
add
jg
stos
repnz
cmp
(bad)
mov
dec
repz
mov
test
push
fwait
jnp
aas
push
xor
mov
movs
xchg
rol
shl
rcl
fimul
push
rcl
ins
and
push
rol
dec
jns
xchg
jae
push
ss
movs
cs
adc
inc
rcr
ins
mov
int3
movs
shr
or
jnp
inc
rcr
bt
push
shl
mov
fldcw
mov
mov
ret
cmps
pop
xor
pop
cmp
scas
(bad)
and
and
inc
fld
pop
(bad)
pop
push
into
push
clc
mov
movs
inc
scas
int3
fistp
add
add
in
lea
inc
test
iret
dec
xchg
xchg
fldcw
cmp
jmp
repnz
dec
hlt
ja
jae
cmp
jecxz
out
fcom
test
cmp
sar
ret
push
ja
mov
icebp
jb
dec
dec
jle
leave
mov
dec
sub
add
addr16
push
outs
bound
xor
add
sub
push
adc
inc
pop
frstor
sahf
ds
pop
add
cmp
adc
add
add
xor
leave
mov
cmp
adc
ds
push
retf
in
movs
pop
push
rol
punpcklwd
or
dec
push
outs
cmp
(bad)
cs
leave
loope
add
adc
add
add
add
add
add
pop
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
and
add
add
lea
std
add
add
push
add
test
cmp
add
add
add
add
add
add
add
pop
sbb
add
add
add
add
push
add
add
xchg
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
jno
add
popa
add
xor
add
add
jl
add
add
add
enter
add
add
add
add
add
add
add
add
add
out
iret
add
sbb
add
add
add
imul
add
add
inc
add
add
out
add
add
jb
add
add
add
mov
add
out
data16
add
add
pop
add
cmp
inc
or
dec
and
push
test
in
imul
je
lds
sub
sti
sub
outs
mov
dec
cmps
add
adc
cmc
adc
jb
jge
mov
adc
add
retf
pop
xchg
repz
cmp
mov
frstor
inc
in
cmc
das
xor
adc
enter
and
aaa
mov
mov
ins
in
stos
cmovge
les
and
fimul
xor
mov
mov
sub
mov
rcr
pop
cld
ror
or
lds
xchg
xor
(bad)
pop
cmc
adc
aad
(bad)
and
in
outs
sahf
rol
cmp
xchg
test
int
je
mov
push
adc
cmp
aam
mov
repz
or
xchg
jmp
mov
sub
fcmovnu
or
adc
addr16
dec
cmps
in
rol
jne
sub
cmp
pop
into
loop
ds
jo
mov
fidiv
psrad
jno
and
mov
jns
push
repz
and
inc
or
push
xchg
aas
inc
cmp
mov
pop
in
call
mov
lahf
jecxz
enter
daa
cmp
push
daa
xchg
jne
adc
jl
mov
push
callw
aam
fnstsw
cmp
rcr
mov
or
pop
lock
push
shr
mov
dec
xor
cmp
pop
retf
outs
(bad)
inc
xchg
cmp
dec
popa
jecxz
push
lods
push
pop
rep
push
cwde
movs
cmp
mov
lea
jo
sub
cmps
adc
jne
mov
push
jmp
arpl
xor
mov
jmp
(bad)
mov
push
jl
jle
loopne
enter
clc
mov
mov
mov
cmps
cmp
cli
or
loop
dec
and
add
jmp
repz
cmc
push
sub
fucomip
test
jmp
push
xchg
int3
xchg
ds
add
pop
out
imul
hlt
push
in
and
mov
ins
fsubr
dec
and
inc
in
mov
xchg
test
data16
adc
fmulp
mov
arpl
xchg
or
lahf
adc
mov
jne
imul
in
jmp
xchg
push
mov
mov
push
and
mov
icebp
dec
je
ret
xor
fst
cmp
gs
cmp
dec
cmc
pop
push
and
nop
adc
jno
iret
jnp
cmp
shr
push
pop
dec
or
mov
jmp
mov
in
popa
jp
inc
sub
call
jecxz
ror
aas
mov
add
popf
and
xchg
or
jbe
ins
int
and
(bad)
add
mov
add
mov
into
sbb
stos
cmp
or
mov
jmp
arpl
push
mov
in
push
fwait
inc
mov
xor
aaa
popf
cdq
xor
cld
pop
ins
cmp
call
mov
sbb
aaa
out
test
mov
imul
iret
xadd
aam
mov
jns
das
xchg
mov
and
mov
outs
and
fsub
sbb
imul
push
stos
shl
push
sub
mov
add
mov
rcl
add
inc
lods
les
push
or
cwde
add
inc
adc
mov
fist
push
aaa
sub
cmp
or
dec
dec
adc
pop
repz
inc
(bad)
(bad)
xchg
idiv
mov
fld
ret
or
out
and
int3
inc
outs
dec
pop
and
mov
jmp
pusha
jns
xchg
jnp
(bad)
or
ret
mov
mov
cmp
test
ss
xchg
(bad)
mov
mov
adc
mov
(bad)
jge
sbb
(bad)
mov
and
sub
ret
sbb
repz
sbb
mov
xor
add
fsub
in
mov
cmp
sahf
jo
sub
sbb
pop
xor
scas
movs
sti
and
std
jo
test
clc
sbb
add
dec
fstp
pop
inc
mov
mov
sahf
hlt
data16
into
and
push
and
daa
inc
jns
pop
pop
cld
add
adc
pop
adc
(bad)
ss
test
out
(bad)
test
sub
icebp
pop
xchg
mov
popa
pop
lds
mov
shl
ds
and
adc
push
fimul
xchg
jnp
xchg
shl
fdivr
xchg
push
xchg
sub
xor
scas
inc
vpcmpgtw
imul
sbb
push
iret
xchg
or
jl
ins
cmp
(bad)
mov
fsubr
je
pop
les
pop
or
jge
push
ret
clc
daa
sbb
inc
sub
dec
hlt
nop
fisubr
std
icebp
adc
inc
cld
mov
cld
cmps
call
fcmovne
ins
jge
bound
push
and
iret
push
inc
cld
push
ret
mov
(bad)
cmp
pushf
(bad)
mov
cmps
and
outs
pop
push
mov
xchg
xchg
jae
add
push
inc
xchg
push
mov
push
mov
pop
leave
cld
scas
push
dec
jp
add
xor
ds
out
pushf
jecxz
sub
cmp
jmp
fs
and
pop
pop
aaa
and
in
ins
dec
sbb
pop
mov
inc
cdq
imul
mov
dec
pop
push
mov
dec
in
jge
cmps
fmulp
into
inc
cmp
jmp
mov
sbb
mov
cmc
rol
xchg
repnz
or
add
push
data16
jecxz
jg
sub
or
pop
retf
data16
mov
cli
push
popf
aam
xchg
fdivr
push
mov
shl
cmp
adc
js
cs
push
clc
retf
pop
out
mov
add
es
int3
pop
lock
fidivr
jbe
repnz
repnz
retf
movs
push
push
xchg
imul
(bad)
frstor
cdq
inc
leave
int
dec
add
inc
push
jge
cld
fld
xchg
sahf
test
ja
imul
mov
repz
jnp
xchg
(bad)
fidiv
dec
mov
sysenter
push
jb
pop
stc
dec
cdq
lock
(bad)
cli
mov
cmc
fnstsw
jp
mov
leave
add
pop
in
sbb
in
push
mov
movs
neg
or
ss
add
lods
cmp
inc
pminub
inc
and
fcmovb
je
and
or
ss
shr
mov
sbb
jnp
pop
dec
dec
aas
out
or
mov
leave
push
jl
pop
outs
shl
lahf
fistp
call
adc
loope
fadd
sti
cmps
aad
popf
inc
ja
mov
sbb
ins
in
jae
dec
adc
mov
test
ja
xor
cwde
jae
xor
and
pop
out
dec
(bad)
leave
hlt
les
sbb
std
pop
inc
rcl
push
mov
sar
dec
fcom
jae
stc
mov
jno
mov
cld
stos
jmp
cli
lahf
push
int3
imul
pop
in
(bad)
lea
fild
aad
fst
in
jb
imul
js
(bad)
stc
cmps
fwait
(bad)
ror
or
push
inc
pop
mov
aaa
add
xor
mov
jnp
jb
cmps
test
fidiv
jae
imul
frstor
aam
mov
push
push
dec
adc
test
dec
add
inc
xor
fldcw
std
xchg
ficom
and
sub
sub
push
and
lods
jecxz
test
jmp
movs
xchg
xor
stos
mov
add
out
xor
aas
imul
sub
mov
or
pusha
push
sbb
pop
adc
sub
mov
hlt
hlt
xor
sbb
fsubr
jo
test
add
cmp
aam
jl
(bad)
mov
xor
mov
enter
mov
or
adc
jbe
ror
cmp
cwde
ss
(bad)
data16
dec
lea
mov
sub
jmp
aas
test
xchg
add
jecxz
popa
in
mov
das
arpl
cmp
xor
fcomp
pushf
(bad)
mov
out
lock
push
sub
xor
jno
das
fs
jecxz
and
mov
jns
addr16
fdiv
push
mov
inc
add
sti
(bad)
ins
push
int
fs
int
mov
aas
dec
es
jmp
stos
scas
popf
dec
mov
(bad)
push
es
and
int3
sahf
retf
lods
pop
and
mov
shl
mov
dec
inc
mov
mov
out
pop
push
jbe
cmp
mov
inc
pop
repnz
in
(bad)
les
popa
sbb
sub
dec
sub
(bad)
mov
xchg
lea
mov
adc
mov
test
jmp
add
or
clc
sar
jmp
xchg
xlat
leave
xlat
mov
mov
pop
push
fcomp
daa
xchg
inc
imul
mov
pop
sub
enter
xor
push
fcom
add
int
nop
sub
dec
push
hlt
fwait
out
add
push
xchg
(bad)
aam
in
out
mov
mov
xor
in
outs
sahf
xor
push
mov
push
lahf
les
(bad)
jno
mov
mov
inc
mov
jmp
sbb
push
retf
pop
jno
xchg
xor
movs
mov
idiv
mov
(bad)
xchg
aas
fst
cmc
leave
pop
push
icebp
cmc
cmp
dec
mov
or
pop
jb
cdq
mov
std
pop
std
loop
fnstenv
fwait
cmp
push
lock
inc
sbb
inc
retf
pop
push
nop
adc
mov
sbb
test
or
cmp
xchg
es
xor
fiadd
aam
das
bound
ins
iret
stc
popf
call
mov
dec
mov
(bad)
mov
mov
dec
stos
in
icebp
mov
push
fwait
lods
sahf
call
mov
pop
test
gs
sbb
xchg
cmp
mov
stos
xor
xor
and
sub
xchg
ins
jle
push
test
jo
repnz
mov
pop
sahf
mov
cmp
and
lods
out
cmp
pop
mov
sub
lods
lds
into
mov
out
mov
cmp
mov
test
jmp
ror
mov
add
inc
xor
add
add
pop
add
add
add
add
mov
add
add
add
add
ret
add
add
add
add
add
add
xor
add
add
add
add
fild
add
and
add
add
add
add
cmp
mov
rol
xchg
jmp
das
jmp
push
mov
push
les
adc
and
popf
test
adc
push
xlat
fcom
outs
arpl
xchg
out
(bad)
push
and
lock
jb
jbe
movs
jno
mov
neg
pop
lock
lea
inc
shr
stos
sbb
mov
cdq
mov
shr
int3
jle
test
adc
int
aam
mov
or
out
or
ja
mov
and
inc
pop
push
jns
fild
inc
cmp
fs
fbld
mov
inc
inc
clc
or
sbb
call
or
or
inc
lds
ret
inc
scas
or
stc
pop
jmp
rol
in
shl
pusha
xor
(bad)
cmp
dec
mov
jge
and
or
arpl
outs
or
aad
ins
arpl
data16
mov
rcr
fldenv
fs
cmps
icebp
sub
(bad)
aam
add
xor
xor
push
inc
scas
pop
lods
jmp
nop
pop
(bad)
movs
adc
dec
jbe
lds
arpl
xor
les
leave
ins
jmp
add
js
xchg
mov
mov
rcr
jmp
inc
push
out
xchg
repz
ror
(bad)
and
hlt
push
daa
mov
lds
movs
fstp
push
mov
cmp
push
aaa
mov
or
pop
jge
outs
mov
popa
or
jns
mov
out
and
and
or
xor
dec
jb
sub
(bad)
sub
jnp
add
out
sub
xchg
pop
sbb
out
mov
shl
test
mov
sub
cmp
lds
icebp
retf
outs
out
outs
outs
mov
popf
cli
sub
cmp
mov
xchg
cmps
shl
cs
out
rcr
ja
call
rcr
xor
xchg
adc
stos
aad
enter
sbb
lea
(bad)
inc
mov
sbb
neg
out
xchg
retf
dec
shr
retf
sbb
xchg
jo
dec
jmp
(bad)
fidivr
(bad)
pop
push
aas
call
je
repnz
sub
cmp
xor
mov
and
or
movs
or
inc
inc
mov
pop
ds
push
sbb
out
mov
lahf
sahf
and
add
fild
in
or
or
popa
xchg
add
cmp
mov
out
inc
xchg
hlt
(bad)
pop
jg
xchg
pop
mov
add
int
add
xlat
ror
pop
fcmovne
test
imul
retf
and
mov
outs
cmp
loop
xor
adc
shl
outs
bound
xor
xchg
xchg
lds
enter
xchg
mov
push
inc
add
mov
and
arpl
sub
jmp
test
push
gs
jne
mov
(bad)
retf
dec
jp
nop
sti
in
fs
sbb
and
fcmove
shl
pop
mov
cmp
inc
(bad)
and
inc
inc
cmp
add
push
adc
push
out
mov
cmp
xor
lods
dec
(bad)
xchg
ins
test
pandn
mov
mov
pop
in
inc
mov
push
pop
inc
mov
mov
jno
stos
in
sub
push
inc
rcr
nop
mov
mov
or
mov
daa
ret
xchg
shl
std
in
lods
adc
cmps
push
mov
adc
pushf
pushf
jl
test
rcr
mov
and
les
in
xchg
inc
imul
mov
outs
in
data16
sbb
cmp
adc
dec
pushf
dec
jmp
xor
xchg
fwait
cmp
adc
retf
or
mov
dec
mov
jo
adc
iret
mov
or
shl
repnz
xor
aas
cmp
in
pop
leave
inc
lock
or
adc
sbb
mov
sub
mov
cli
dec
(bad)
lds
xlat
lea
jbe
and
pop
and
stos
shr
sbb
sbb
and
fcmovne
dec
ret
add
xchg
mov
xchg
ins
xlat
sub
gs
in
pop
xor
test
push
gs
rol
add
xor
out
inc
mov
aaa
mov
pop
retf
bound
fwait
pop
adc
mov
push
cmp
and
cli
sub
inc
in
adc
and
outs
sahf
pop
loopne
(bad)
icebp
aaa
jne
xchg
pop
jg
addr16
push
push
pop
jg
mov
int3
xchg
xchg
mov
or
movs
mov
addr16
jne
mov
aam
mov
ins
adc
push
xchg
pushf
popa
mov
or
adc
and
out
mov
stos
or
into
xchg
xchg
cmp
mov
push
inc
mov
jmp
sub
jae
xchg
aas
ss
aam
test
push
popf
sbb
jbe
mov
adc
jmp
mov
outs
data16
pop
dec
xchg
lods
data16
test
shl
hlt
das
inc
cmc
jnp
loop
inc
(bad)
(bad)
inc
cdq
daa
pop
adc
fld
out
jge
pop
icebp
imul
stc
dec
jle
push
jnp
mov
enter
adc
mov
sahf
sbb
ficomp
call
sahf
enter
jbe
push
out
out
sub
mov
jecxz
pusha
(bad)
enter
mov
mov
ss
inc
or
loop
and
mov
jbe
(bad)
or
addr16
and
mov
movs
push
inc
test
je
lea
mov
or
addr16
bound
jb
outs
lods
sbb
mov
add
xchg
dec
aad
dec
or
sbb
xchg
in
xchg
(bad)
mov
xchg
xor
movs
xchg
imul
adc
fcom
popf
adc
xor
pop
sub
add
cmp
jmp
push
push
sub
stos
cdq
lods
pop
mov
jne
push
cmps
shl
pop
pop
cwde
mov
xchg
dec
add
jbe
pushf
xlat
fldcw
mov
jno
aaa
mov
dec
test
or
loop
pusha
and
ror
(bad)
sar
sub
fnstsw
cs
mov
imul
push
test
mov
pop
or
mov
stos
add
xchg
cmp
shl
jne
inc
cdq
stos
scas
bound
sahf
sub
cmps
loopne
add
jbe
mov
push
push
adc
mov
mov
or
mov
mov
mov
cmp
inc
xor
test
je
push
jp
cmp
test
add
dec
fwait
or
sub
xchg
test
cmp
bound
jecxz
push
fidiv
xchg
jbe
retf
dec
ss
into
repnz
mov
stos
std
or
cmp
iret
pop
inc
mov
and
jb
call
(bad)
mov
adc
cvtdq2ps
inc
test
les
sbb
sub
pop
adc
shl
jbe
std
push
mov
xchg
ins
mov
sbb
pusha
inc
sub
mov
sahf
fisub
push
std
mov
retf
xchg
les
and
xchg
ret
inc
xchg
jo
inc
and
les
xchg
(bad)
loop
call
dec
pop
(bad)
xchg
xchg
fcmove
dec
out
push
ja
dec
mov
cmps
mov
sub
sti
adc
arpl
aas
test
pop
pusha
add
xor
fwait
mov
rcl
into
pop
aaa
ror
mov
push
push
xor
mov
xchg
icebp
lfs
hlt
mov
inc
push
ja
sub
pop
mov
test
in
out
hlt
xchg
test
stos
test
mov
dec
in
xchg
add
loop
out
(bad)
rol
loope
mov
dec
dec
psllw
sahf
xor
mov
cmp
rcl
xchg
popf
cdq
push
pop
in
xor
pop
adc
mov
push
test
jmp
adc
adc
jmp
clts
sbb
inc
xor
ret
lds
cmps
push
movs
dec
mov
mov
cmp
std
inc
aam
scas
retf
les
mov
(bad)
js
dec
jae
adc
adc
adc
pushf
shl
xchg
cmp
ins
cld
push
cmp
dec
sbb
or
test
sbb
push
rol
rcl
mov
or
ror
mov
retf
or
cmps
in
mov
imul
dec
xchg
sub
(bad)
js
cmps
inc
lea
mov
and
xchg
daa
aaa
loop
popa
jno
pusha
test
jmp
sti
jmp
enter
cdq
mov
ss
bound
mov
mov
shl
mov
addr16
push
retf
(bad)
(bad)
fild
das
xor
adc
fisttp
and
aaa
sar
sub
and
in
push
or
xchg
mov
ja
cmp
sub
fcmove
(bad)
sbb
nop
mov
lahf
mov
dec
mov
cmp
test
nop
nop
sub
pop
pop
ret
pop
jmp
pop
pop
imul
mov
js
jo
mov
stos
lods
test
and
sub
fld
loope
and
scas
push
cld
imul
out
loope
je
jp
cmps
bound
icebp
sub
or
cmp
pop
(bad)
test
jmp
cmc
jp
sar
push
cmp
stc
outs
mov
mov
nop
mov
dec
dec
sub
cmovae
inc
push
or
cmp
push
in
mov
ret
xchg
popf
jl
push
imul
sbb
popa
and
cmps
jp
test
push
fbstp
xlat
pop
push
and
sbb
jbe
cmp
cli
cmc
push
jmp
daa
cmp
push
std
jmp
inc
sbb
mov
jmp
int
rol
retf
repz
js
pop
mov
das
pop
and
fstp
cdq
call
mov
int3
xchg
or
int3
es
add
je
pop
push
dec
adc
dec
mov
iret
cld
add
mov
add
add
add
xor
outs
test
add
dec
pusha
add
add
add
add
cmp
add
add
(bad)
add
add
mov
pop
add
add
cmp
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
add
add
add
pop
sub
bound
scas
ds
jo
into
sub
rcr
popa
movs
xchg
les
pop
daa
aaa
jo
mov
idiv
jle
js
call
stos
push
inc
mov
bound
cmps
add
cmp
cmc
xor
hlt
push
jnp
ja
jmp
pop
xlat
or
clc
jo
push
mov
mov
das
out
jne
add
xor
jle
clc
jo
add
clc
xlat
mov
fmul
sbb
pop
enter
ja
retf
pop
mov
(bad)
inc
mov
int
call
xor
push
and
mov
jle
push
aas
popf
fmul
cmp
mov
cld
mov
fnstsw
jg
aaa
loopne
dec
xchg
inc
lock
push
in
sub
cmp
cmp
loop
fimul
jbe
sub
int3
add
pushf
xchg
push
sub
jmp
add
xor
sub
daa
arpl
in
jmp
fs
mov
mov
sbb
push
shr
jb
push
cs
and
push
cmps
pop
fxtract
dec
cs
test
mov
out
rol
imul
and
jae
push
fsub
add
or
(bad)
mov
test
mov
mov
outs
(bad)
jg
push
mov
ins
mov
pmaxsw
popf
cmp
cmp
jge
xchg
pop
fs
push
pop
cdq
das
cmp
leave
jecxz
dec
out
pop
jl
fld
xchg
imul
add
xor
adc
mov
xlat
jnp
fild
psrlq
cdq
jge
xor
mov
or
imul
xlat
sbb
cmp
fsub
ins
outs
push
ds
sub
push
xchg
mov
nop
lock
or
lsl
push
repz
cvtps2pi
sbb
movs
push
cmps
sbb
or
and
pop
sbb
aad
retf
hlt
test
mov
stos
pop
pop
fstp
jb
lods
and
test
test
ficom
nop
scas
dec
lods
dec
adc
inc
(bad)
adc
fs
mov
arpl
sub
xchg
div
jmp
not
loope
pop
lea
xchg
js
lds
pop
mov
push
push
ficom
sahf
mov
sub
sub
popa
adc
call
ja
in
(bad)
dec
mov
and
sti
popa
out
jo
jno
inc
mov
push
enter
test
rcr
jl
mov
sbb
jae
loopne
sub
retf
push
in
fmul
pop
int3
and
push
ficomp
dec
sar
dec
call
push
jnp
lods
lahf
xchg
mov
inc
dec
mov
inc
mov
sub
pop
aad
aas
and
loopne
add
adc
je
or
xlat
mov
or
dec
sar
call
(bad)
xchg
cmp
outs
mov
aam
push
daa
mov
pop
jnp
mov
and
add
inc
push
shl
push
sbb
idiv
mov
sbb
push
aam
aam
out
adc
in
mov
sbb
sti
arpl
push
or
xchg
(bad)
leave
stos
mov
mov
ror
lock
shl
push
add
(bad)
mul
mov
fisubr
sbb
cmp
rcr
pop
sub
push
test
sti
or
dec
gs
xchg
xlat
jno
sahf
dec
and
dec
mov
js
iret
out
movs
inc
xchg
mov
icebp
clc
(bad)
cld
jle
retf
test
push
cmp
fimul
scas
or
mov
or
sbb
jno
cmp
xor
cdq
jl
adc
addr16
push
gs
ret
loopne
push
or
pop
ret
dec
popa
pop
test
movs
dec
arpl
sahf
mov
mov
repz
sbb
xchg
mov
dec
jnp
xchg
push
and
mov
dec
fadd
aad
push
mov
xchg
dec
adc
(bad)
mov
and
(bad)
xor
stos
and
sahf
push
rcl
lods
ret
pop
inc
bnd
sub
sahf
sahf
stos
adc
sub
dec
ret
sbb
push
jo
add
cmp
inc
popf
cs
hlt
adc
xchg
mov
cmp
xor
cld
movs
in
dec
push
popf
mov
jae
std
inc
daa
push
shl
lahf
or
ins
mov
cmps
iret
jbe
sbb
mov
popa
repz
xor
mov
ins
aas
or
clc
out
xlat
jns
(bad)
fistp
aam
rol
hlt
lds
ret
pusha
jnp
bound
lds
xchg
and
cmp
mov
inc
mov
inc
int3
aaa
mov
add
and
sub
adc
test
jno
lods
lock
loope
push
inc
xchg
clc
mov
xchg
or
(bad)
and
xor
cmp
or
ja
add
lahf
clc
fdivr
mov
sub
xchg
popf
repz
mov
push
adc
loop
xchg
adc
xor
push
in
xchg
or
cmp
jl
fcomp
mov
pop
dec
jns
sbb
shr
sbb
iret
lea
out
call
push
fmul
xor
or
stc
aam
sbb
sti
dec
(bad)
cmp
icebp
mov
push
ds
sub
push
mov
div
mov
push
xor
xor
sbb
sbb
sbb
stos
stos
test
dec
loop
mov
dec
sbb
mov
mov
push
push
push
fild
shl
fs
aas
pop
ss
push
shl
mov
dec
mov
lods
jnp
sar
jns
add
fcom
fldcw
jnp
cmps
xchg
lahf
data16
mov
or
pop
push
je
mov
out
xchg
add
stc
arpl
retf
push
fcomp
sub
loopne
in
mov
inc
aad
sub
das
cmps
dec
stc
cld
(bad)
fisttp
imul
add
daa
lahf
mov
pop
push
dec
test
xchg
leave
pop
mov
lock
jmp
stos
dec
adc
pop
(bad)
pop
sbb
(bad)
xor
arpl
xchg
and
imul
inc
fst
jmp
retfw
call
pop
jp
add
xor
test
in
cmp
push
xchg
add
or
push
xchg
dec
pop
inc
add
push
xor
sub
aaa
sub
(bad)
out
leave
mov
or
add
sub
shl
repz
scas
or
test
mov
(bad)
into
je
rcr
push
pop
dec
imul
mov
pop
fdiv
lea
ret
and
fnsave
push
push
mov
sub
das
xchg
pop
cmp
mov
test
enter
mov
ja
popf
mov
push
and
sbb
push
and
xlat
mov
in
rcl
jmp
sbb
sbb
jbe
jl
pushf
sbb
mov
dec
ja
pop
push
aas
inc
mov
clc
xlat
ins
cmc
mov
int3
fs
pop
je
cli
adc
cwde
mov
mov
leave
mov
imul
rol
mov
dec
push
xor
mov
rcl
inc
int3
(bad)
and
xor
xchg
add
daa
add
cmps
(bad)
prefetch
or
adc
xor
popa
hlt
adc
leave
mov
rcr
push
ss
mov
jl
addr16
jo
pop
adc
imul
ins
out
and
out
sub
arpl
adc
push
and
int3
cmp
jno
or
mov
and
div
inc
pop
aam
aaa
jne
fbld
push
mov
mov
sbb
ret
jecxz
out
jae
fldcw
(bad)
out
mov
stos
mov
mov
ret
in
sbb
mov
std
div
and
bnd
test
adc
mov
push
push
and
rcr
movs
jnp
fcmovu
mov
xchg
add
les
call
lds
iret
add
or
mov
cmps
stc
xor
ror
mov
dec
ret
cmp
es
push
dec
xor
adc
in
and
fstp
test
retf
cmp
dec
xor
ret
cmps
and
cmp
call
clc
dec
jp
jmp
fistp
inc
movs
(bad)
jo
xchg
mov
imul
sub
cdq
rcl
repz
mov
mov
ds
push
pop
jmp
shl
movs
jmp
inc
cld
add
push
pop
add
fstp
aam
(bad)
mov
xor
lods
jnp
out
push
push
xor
lds
dec
cmp
or
push
mov
pop
add
bound
and
jle
pop
xchg
sub
ins
pop
xchg
adc
mov
push
and
sbb
push
mov
sahf
loop
mov
push
cmp
cld
dec
es
mov
test
imul
ins
ror
jb
inc
enter
push
inc
and
add
shl
psrlq
cmp
cmp
jae
cmp
jge
inc
pop
jnp
lods
pop
outs
pop
repnz
xchg
or
mov
xchg
test
mov
mov
pop
push
clc
fs
sub
adc
sub
mov
or
jb
jp
fucomip
xchg
inc
push
adc
jl
mov
stos
mov
pop
(bad)
stc
(bad)
(bad)
dec
repnz
ins
or
xor
fld
add
(bad)
xor
xchg
lea
fwait
push
(bad)
and
dec
jbe
sub
sbb
sub
xlat
jb
dec
loopne
das
mov
fs
test
adc
push
pop
mov
push
iret
mov
add
mov
pop
pop
mov
rcl
lea
mov
ret
scas
push
fmul
inc
pop
mov
lahf
and
adc
mov
inc
and
call
fadd
cmp
jl
pop
jl
loopne
cmps
jns
cmp
mov
aad
or
xor
cli
push
test
movq
je
pop
dec
jge
ss
fiadd
add
add
mov
add
add
xchg
add
add
add
add
bound
add
aas
add
add
add
add
add
add
add
add
or
jae
or
cmp
fidiv
outs
dec
(bad)
or
ror
and
ins
adc
or
adc
and
and
sbb
mov
mov
jl
sbb
(bad)
sar
out
daa
xchg
fidiv
ficom
adc
push
xor
sub
retf
cmp
mov
sti
sub
push
dec
sub
push
xor
jle
loop
je
aaa
scas
adc
stos
mov
sbb
ins
sub
lods
out
dec
add
sub
je
add
scas
adc
inc
lea
mov
lahf
adc
fidiv
xchg
jmp
pusha
call
add
nop
push
popa
(bad)
jmp
add
shr
jnp
sbb
stos
add
in
cmp
cmp
in
cmc
dec
adc
popa
jge
push
mov
jb
mov
lods
popa
movs
dec
or
xchg
lods
mov
popf
dec
out
stc
retf
cwde
in
stos
mov
mov
jp
or
mov
outs
fsub
dec
ins
add
mov
jle
push
push
xchg
inc
cmp
or
mov
stos
cmps
jbe
dec
add
ins
cmp
inc
sbb
jne
inc
jne
jge
bound
icebp
add
push
or
pop
dec
add
(bad)
popf
popa
nop
stos
mov
cmp
push
sub
push
xlat
fs
sahf
ss
in
es
mov
mov
imul
inc
mov
add
lea
ja
sbb
stos
lods
adc
lods
call
cmps
push
lods
jmp
and
idiv
mov
jnp
jl
jg
adc
ins
ds
scas
and
xor
pushf
or
out
add
push
add
push
pop
aas
pop
xor
xor
adc
data16
pop
and
cli
shr
push
pop
js
sti
inc
je
je
cmps
movs
jb
out
mov
test
cmps
mov
fnstenv
out
or
lock
xor
xchg
sahf
jbe
imul
pop
xchg
adc
ror
pop
sbb
adc
ret
mov
lea
retf
out
lods
mov
jo
fld
daa
fistp
(bad)
out
ss
inc
std
scas
ja
sbb
retf
mov
inc
push
dec
retf
fcmovu
ficomp
dec
jmp
adc
rcl
imul
or
mov
rol
dec
pop
loope
fs
jnp
stos
mov
pop
js
inc
call
std
daa
mov
pop
mov
jle
(bad)
cli
adc
outs
xor
pmaddwd
(bad)
sbb
mov
push
push
xor
shl
fbld
ret
(bad)
movs
imul
add
lahf
push
add
xchg
cdq
lods
xchg
push
fnstcw
xchg
jnp
dec
ret
jmp
or
sar
mov
dec
dec
jbe
or
sbb
cmps
and
push
mov
rcr
hlt
fcomp
xor
out
icebp
stc
dec
cwde
add
adc
pusha
sub
shl
test
mov
jmp
test
or
(bad)
popf
pusha
je
sbb
outs
scas
mov
or
mov
in
repz
test
test
shr
xchg
aad
out
adc
int3
(bad)
adc
and
pop
add
mov
mov
mov
xchg
xchg
push
cwde
neg
pop
hlt
xchg
mov
cwde
mov
mov
ret
mov
stos
out
mov
xchg
jl
xlat
mov
jnp
daa
mov
sub
das
add
push
ret
add
xor
inc
push
lods
popa
jns
mov
(bad)
pop
fs
aaa
shl
push
jbe
jno
enter
imul
cmc
shl
movs
add
(bad)
ror
pop
xchg
je
mov
aas
push
jb
pop
xor
(bad)
imul
pop
repz
out
pop
fadd
push
sar
fs
mov
pop
jns
iret
leave
xchg
(bad)
(bad)
fdivp
or
(bad)
xchg
nop
jbe
sub
push
adc
ds
aad
mov
ins
push
stos
test
and
cmps
push
arpl
cmp
xor
cmp
into
imul
clc
cli
scas
inc
nop
cmp
scas
aam
push
mulps
shr
loopne
ins
aam
inc
pop
stos
pop
cwde
in
add
mov
leave
pop
cmp
je
arpl
jge
loop
xchg
jne
popf
int
cmp
mov
popf
leave
js
bound
sbb
les
jg
test
aaa
mov
imul
xor
sub
gs
xor
neg
xor
jns
sub
shl
xor
test
pop
cmp
and
aas
mov
sbb
pop
jmp
mov
add
push
dec
in
pop
mov
pop
mov
sbb
push
mov
fwait
ret
mov
movs
dec
adc
call
dec
ret
jl
push
sti
stc
cmp
cmps
ds
sar
lods
in
cmc
and
dec
addr16
in
test
stos
stc
sub
icebp
in
hlt
mov
push
shl
ins
in
(bad)
sar
jae
adc
or
in
jecxz
scas
scas
daa
aam
in
out
sahf
pop
mov
js
push
ret
test
mov
push
mov
mov
das
push
fistp
jb
add
xor
call
push
xchg
jb
loop
add
aam
adc
ja
jns
cmp
mov
scas
in
pop
rcl
stc
(bad)
popf
sub
xor
retf
aad
icebp
mov
mov
pop
fisttp
sub
loope
jb
out
js
xor
mov
popf
push
leave
stos
test
(bad)
shl
pop
dec
xchg
pop
inc
mov
mov
stc
stos
test
repnz
js
add
mov
jno
mov
jg
jmp
inc
push
movs
int
shl
dec
pop
je
push
adc
loope
fldcw
pushf
sub
neg
retf
or
ins
dec
fwait
sbb
mov
and
shr
inc
(bad)
jo
pusha
pop
mov
sbb
pop
push
imul
or
inc
(bad)
fmul
fcom
jle
sub
jp
push
xor
dec
jo
push
lods
ds
nop
sub
push
jle
mov
movs
fs
aaa
pusha
in
test
adc
sbb
imul
out
in
jae
ret
(bad)
pop
inc
push
push
cmps
cmp
ficomp
jg
shl
pop
outs
pop
jne
daa
and
nop
fwait
int
lock
aas
inc
hlt
ret
xchg
shl
test
popf
sar
and
push
jnp
pop
mov
fcom
jecxz
mov
call
mov
jp
vminpd
imul
scas
adc
dec
sbb
mov
sbb
dec
jecxz
mov
xor
retf
inc
mov
xlat
jecxz
(bad)
add
clc
push
mov
and
sub
test
sub
lds
ds
out
cmp
fstp
xor
movs
add
mov
rcl
mul
xchg
int3
mov
int
inc
mov
ja
and
imul
mov
lods
pop
popf
iret
out
jmp
cdq
sub
sub
es
push
call
pop
ret
in
xchg
ja
adc
jmp
fcmove
aam
leave
mov
xchg
(bad)
xchg
mov
ds
adc
(bad)
call
xchg
xchg
jge
push
adc
(bad)
mov
jmp
lahf
and
cmp
push
pop
shl
in
or
or
inc
jno
and
rcr
ins
jmp
sbb
xchg
mov
in
bound
pop
cdq
dec
retf
dec
call
and
test
dec
mov
push
add
jae
push
fiadd
popf
cld
mov
pop
dec
jae
jecxz
es
sub
shr
inc
xor
outs
jmp
xchg
add
dec
xchg
jmp
ins
pop
retf
cmp
inc
popf
pop
jmp
xor
or
stos
cmp
mov
fst
rcr
(bad)
mov
cmps
mov
push
xchg
out
gs
cmc
int3
push
(bad)
sub
jmp
and
xchg
aad
outs
fs
jecxz
inc
pop
lea
mov
dec
or
aas
hlt
ss
adc
imul
std
jne
mov
ret
jmp
xor
jne
cmp
push
xchg
add
scas
xchg
push
mov
dec
bound
pop
sub
fwait
mov
(bad)
aad
inc
add
push
mov
sbb
fidiv
cmp
pop
in
push
push
push
fdivr
bnd
cmp
(bad)
int
sbb
enter
mov
mov
xor
out
mov
lock
aam
xchg
test
add
loop
loop
mov
fcmovnbe
cdq
mov
mov
push
sub
movs
test
sbb
popf
mov
mov
fsubr
dec
push
mov
jge
sbb
add
bound
add
popa
lea
adc
xor
stos
mov
push
aaa
dec
cmp
xor
lods
or
cld
sbb
loopne
mov
test
push
mov
mov
adc
movs
push
inc
inc
push
inc
data16
cmp
pushf
adc
dec
xchg
(bad)
in
xchg
mov
xor
mov
enter
(bad)
mov
imul
fs
dec
pop
push
inc
fbstp
out
pop
shr
call
stos
aaa
daa
xor
mov
pushf
inc
or
push
div
fcom
sub
or
fimul
and
aaa
xchg
dec
dec
adc
or
dec
dec
push
xor
dec
push
test
cwde
int
outs
leave
pop
mov
jp
xor
adc
push
add
cmp
mov
call
cld
adc
ins
jne
sbb
sbb
out
rol
fmul
dec
out
data16
or
hlt
pop
adc
push
aam
push
pop
pop
ret
cwde
js
add
cmp
pop
sub
pop
push
aaa
fbld
jnp
sbb
(bad)
shl
xchg
cmp
mov
ds
mov
push
xchg
(bad)
int
dec
repnz
and
jl
sbb
lahf
cwde
adc
add
in
and
add
add
add
add
add
add
add
int3
add
add
add
add
cmp
add
add
or
xor
add
jns
add
add
(bad)
scas
add
imul
add
test
add
add
add
add
add
test
add
add
lahf
sub
mov
pop
outs
mov
call
int3
mov
int
xchg
mov
mov
pusha
mov
dec
arpl
pop
cmp
js
jl
mov
retf
jg
dec
outs
sti
cmova
push
wrmsr
or
push
(bad)
cdq
xchg
pop
jbe
or
push
(bad)
fmulp
jecxz
lds
out
and
or
in
mov
test
xchg
jne
jb
test
ins
leave
outs
jbe
mov
jecxz
sbb
movs
pusha
das
xchg
cdq
movs
pop
lds
dec
xchg
push
push
mov
sub
loop
loop
icebp
sub
loope
clc
mov
mov
stc
iret
adc
cmp
(bad)
pop
jns
outs
dec
add
scas
(bad)
push
push
rol
dec
retf
out
adc
and
mov
mov
cmps
add
xor
jno
ins
xchg
rcr
xchg
int3
jbe
jb
out
popa
ins
inc
xchg
push
ficomp
sahf
push
inc
fdivp
and
outs
push
out
call
jno
sub
dec
xor
test
push
mov
and
pop
gs
sqrtps
add
repz
cwde
popa
(bad)
or
dec
mov
ror
mov
into
mov
mov
or
rcl
fcomp
fcom
xchg
xchg
sahf
fcomp
movs
scas
pop
das
and
or
icebp
ret
pop
xor
jmp
pop
in
aas
jb
test
dec
es
icebp
xor
jecxz
xor
inc
push
imul
pop
cmp
xor
and
inc
sub
test
adc
test
mov
inc
out
fst
or
jns
mov
push
lods
lods
push
cmps
shl
cmp
fisub
jne
fisubr
add
outs
sub
das
(bad)
aam
out
jmp
inc
mov
call
sub
lds
and
mov
cdq
loopne
lahf
ja
xchg
xlat
cmp
pop
and
or
ja
movs
test
xchg
int3
ds
(bad)
stos
leave
sbb
cwde
add
mov
mov
(bad)
sbb
push
stos
fbld
lds
fs
leave
sub
fadd
mov
xor
fild
mov
mov
mov
pop
jecxz
mov
(bad)
push
pop
xchg
cli
js
hlt
pop
gs
jbe
inc
mov
push
sbb
cs
fcmovnb
pop
test
adc
mov
(bad)
retf
cs
loopne
or
call
cmps
rcr
xchg
inc
in
push
mov
sbb
retf
jmp
inc
jo
xchg
aaa
push
imul
cli
mov
add
clc
retf
adc
aad
ror
(bad)
call
popa
ins
cmps
pop
add
add
sbb
push
xor
jg
mov
(bad)
ficomp
jne
jmp
mov
inc
cmp
lock
cmp
popf
cmp
dec
mov
inc
sar
pop
dec
ror
rcl
pop
stc
rcr
imul
call
push
mov
and
cdq
and
cwde
add
jmp
scas
inc
jne
push
lods
jle
cmp
add
mov
add
je
ficomp
mov
data16
popa
in
scas
add
push
cmps
fs
sbb
fdivr
dec
mov
int3
fs
stos
xchg
mov
ret
test
dec
xchg
ror
inc
out
inc
sub
mov
ins
pushf
ja
sub
add
outs
lods
lods
aas
pop
pop
jns
jmp
stc
fsubr
adc
test
jbe
lds
adc
pop
lock
xchg
push
pop
cmc
mov
shl
cmp
inc
cli
in
test
pusha
ror
ja
aad
sub
imul
int3
test
call
std
or
inc
bound
pop
adc
add
adc
cli
mov
mov
(bad)
jmp
rol
retf
push
pop
dec
loopne
push
mov
ss
pushf
inc
fcomp
jmp
test
retf
cmp
fsub
fdivr
ins
jae
or
and
pop
mov
enter
sub
dec
push
xchg
fsubr
dec
jno
mov
loopne
sub
imul
loop
and
repz
jnp
stos
mov
sub
push
xchg
lidtd
imul
push
dec
jae
lods
retf
pop
push
(bad)
scas
call
call
fcom
(bad)
inc
xor
lock
(bad)
call
retf
jmp
xor
jae
cmc
or
mov
push
push
movs
pop
pop
push
sub
jecxz
xchg
jae
(bad)
adc
adc
and
add
sbb
mov
outs
je
jmp
sbb
mov
test
popa
mov
sub
mov
jb
sbb
adc
ss
xchg
cli
fisubr
pop
aaa
icebp
or
pop
push
or
push
xor
les
mov
cmp
out
loopne
dec
cmps
mov
stos
scas
in
lods
mov
outs
cmp
js
mov
xchg
pop
dec
add
mov
in
dec
bnd
add
push
fdiv
icebp
rep
popf
sub
and
aam
inc
in
cmc
sub
mov
sar
xchg
ss
lea
adc
jmp
push
dec
js
(bad)
js
mov
call
mov
mov
and
mov
ficomp
mul
push
jb
nop
cmp
(bad)
fisubr
sbb
call
lds
cli
push
xchg
mov
jb
out
inc
adc
mov
add
or
dec
xor
ret
cli
repz
mov
sbb
mov
fiadd
enter
push
adc
sub
cdq
cmp
or
cli
or
mov
in
mov
push
imul
test
mov
pop
fistp
jmp
mov
mov
jl
sbb
movs
nop
mov
inc
xchg
pop
nop
sti
mov
pop
xor
shl
xchg
(bad)
dec
xchg
lods
sub
sbb
dec
sub
movs
dec
push
pop
jne
or
cld
mov
mov
cmp
push
icebp
sbb
xchg
mov
sub
mov
adc
jmp
dec
pop
retf
mov
xchg
data16
das
adc
pushf
fcmovne
xchg
cld
pop
fild
mov
jae
in
loope
arpl
add
cmp
push
frstor
pushf
mov
mov
mov
ins
add
cmp
ins
jmp
mov
cmc
push
dec
mov
(bad)
cmps
iret
push
mov
adc
push
inc
mov
repnz
mov
in
and
adc
jbe
sub
push
pop
lods
sbb
dec
ja
(bad)
enter
sub
cmps
push
adc
and
mov
shl
call
je
movs
and
cmps
pop
xchg
clc
(bad)
cmp
ror
pop
sub
enter
pop
push
sti
sub
dec
es
test
or
ja
jmp
bound
mov
push
adc
sub
cmps
aas
cwde
mov
mov
inc
cmp
ret
popf
pop
(bad)
in
sub
imul
cli
(bad)
arpl
fwait
pushf
ins
lods
ins
test
adc
retf
xchg
rep
jo
cmps
or
sub
imul
js
lock
xchg
or
mov
(bad)
push
(bad)
mov
repz
xor
jae
pop
xor
adc
mov
cmp
loop
add
mov
fmul
les
retf
or
ret
out
imul
xchg
cdq
sar
scas
jl
sbb
bound
js
call
inc
mov
pusha
sub
fbld
adc
cmps
sub
mov
popf
mov
cmp
pop
jnp
loop
daa
pop
ret
loope
fild
xlat
in
push
loopne
pop
xor
jmp
ss
mov
cs
push
pop
xchg
inc
call
mov
(bad)
shr
add
addr16
pop
ds
or
(bad)
je
add
cmps
xchg
inc
jmp
jnp
je
jne
mov
sub
push
or
jo
shr
xlat
pop
mov
(bad)
sbb
dec
addr16
lods
shr
mov
mov
or
out
mov
imul
jbe
add
fldcw
mov
pop
mov
sub
lds
popa
cmps
in
out
xor
addr16
lahf
mov
in
or
jo
aam
or
mov
nop
inc
push
cmp
stc
inc
mov
pop
fcmovu
es
pop
in
xchg
xchg
add
cmps
fild
imul
jns
fwait
popa
ret
add
sbb
scas
inc
push
jne
dec
dec
xchg
inc
out
xchg
push
mov
sub
scas
mov
add
(bad)
jae
mov
xlat
stc
test
icebp
test
push
mov
jmp
test
stos
lock
cmp
ja
push
stc
ins
and
scas
and
iret
pop
imul
repz
or
aas
in
fnstsw
mov
loopne
xchg
pop
xchg
sub
xor
(bad)
int
stos
sub
xchg
jnp
adc
xchg
pop
mov
outs
push
mov
xchg
lea
adc
adc
mov
sub
scas
pop
lock
fcmovnb
iret
cmp
arpl
mov
out
cwde
in
iret
jmp
mov
in
loope
call
test
stos
iret
inc
cmc
push
scas
dec
or
retf
jle
jmp
in
ret
inc
mov
outs
jns
sahf
cld
dec
add
xor
dec
fld
xchg
sbb
and
pop
pop
mov
das
push
in
fld
inc
lods
sbb
xchg
add
adc
xchg
inc
lods
fprem1
cmp
jo
das
mov
pop
mov
call
add
or
repnz
sbb
mov
lds
cld
push
push
jg
jmp
mov
ds
push
sbb
mov
fcomp
xchg
mov
adc
push
lahf
movq
jo
and
aas
sti
xor
xchg
xor
cdq
dec
(bad)
stos
cmp
rcl
test
fild
mov
repnz
div
test
push
add
add
mov
add
add
add
and
add
sub
add
add
add
add
fild
add
add
add
and
add
xor
add
add
add
add
sbb
or
pop
add
adc
and
xor
jae
pushf
and
fs
and
jecxz
dec
repnz
ret
cmp
adc
shl
dec
sbb
popf
repnz
sub
adc
xor
lea
cmps
in
jbe
dec
and
or
push
imul
or
dec
mov
test
and
pop
push
cmc
fidiv
inc
jnp
push
gs
mov
inc
push
sub
stos
jns
inc
dec
cmp
mov
cwde
les
pop
in
add
cs
out
jbe
add
clc
test
neg
cmp
pop
xor
sar
jl
xchg
(bad)
and
push
mov
cmc
test
inc
arpl
enter
daa
shr
and
fwait
inc
pop
dec
and
pop
lock
mul
pop
lahf
shl
test
push
daa
xchg
mov
push
data16
les
(bad)
cmps
or
sbb
adc
add
pop
in
xor
mov
jno
pushf
das
imul
rol
fmul
test
cmp
in
popa
dec
(bad)
push
sbb
cs
pusha
mov
in
je
sub
or
stc
mov
add
out
retf
and
shl
mov
or
cwde
lods
jb
js
or
dec
cmp
call
cdq
loope
mov
(bad)
imul
push
add
cwde
push
movs
sar
int3
inc
inc
enter
shl
mov
mov
sbb
xlat
dec
sahf
dec
xchg
stc
or
cli
aad
or
into
xchg
cmp
dec
cmps
test
repz
mov
jno
in
lods
inc
mov
inc
aam
std
pop
ret
(bad)
and
jmp
inc
push
add
fcmovnbe
xlat
fwait
sbb
mov
xor
sub
pop
mov
inc
pop
sahf
xor
sub
stc
fs
mov
pushf
or
jp
or
psubsb
add
fs
cmp
mov
sub
aas
js
xor
int3
mov
imul
fwait
cld
retf
mov
and
call
cmp
or
icebp
call
js
adc
cmp
imul
mov
and
push
jb
test
mov
push
jg
mov
cwde
mov
stc
outs
data16
sub
cmp
sub
adc
(bad)
fdiv
inc
dec
dec
mul
iret
repz
out
push
cmc
inc
xor
sub
loopne
cld
sbb
jg
sbb
xor
add
ret
jmp
mov
ins
mov
aad
adc
jbe
sbb
push
add
lahf
pmaxub
gs
sub
jp
mov
test
push
loopne
ss
xchg
aaa
push
mov
hlt
test
cs
and
xor
mov
retf
push
cmp
mov
adc
inc
cmp
outs
jecxz
bound
adc
pop
ror
jno
or
mov
pop
cmp
push
scas
xchg
add
ret
aam
adc
lods
gs
pop
imul
js
in
out
fisubr
jb
add
and
mov
push
add
sub
cwde
and
jmp
push
dec
ja
mov
mov
inc
aam
test
out
or
(bad)
loope
mov
call
gs
sahf
xchg
dec
enter
mov
mov
adc
fidivr
pop
jecxz
cmps
xchg
xchg
mov
mov
push
jp
mov
push
mov
xchg
outs
in
lods
clc
in
fmul
icebp
dec
push
(bad)
cli
dec
push
push
mov
ret
cmps
test
jnp
adc
adc
or
cmp
xor
dec
sahf
addr16
hlt
pop
push
xchg
cmp
in
arpl
sbb
lahf
xor
dec
xor
lock
(bad)
pop
loope
push
dec
mov
cmps
ret
sbb
movs
or
out
push
imul
aaa
fnstsw
mov
repz
call
xor
in
mov
push
iret
ds
mov
div
dec
and
xchg
aam
mov
mov
sbb
outs
fild
mov
fisub
pop
jae
push
adc
adc
mov
and
sub
dec
in
mov
lock
je
push
mov
outs
not
les
mov
jns
pusha
stos
ins
push
repnz
jno
ret
xlat
bound
pop
and
add
dec
leave
push
retf
xchg
xor
ss
sahf
shr
sub
pop
sbb
inc
hlt
mov
aaa
adc
js
mov
out
loop
rcl
out
xor
inc
test
shr
sub
ins
sub
test
call
or
bt
inc
out
dec
mov
dec
dec
sar
mov
movs
and
std
push
pop
leave
jbe
mov
outs
xchg
mov
inc
add
xchg
pop
mov
test
push
xor
dec
inc
mov
(bad)
xbegin
sub
mov
xchg
xor
jg
adc
add
jmp
fdivr
sbb
fnsave
ror
popa
push
aas
adc
call
pop
jle
fsubp
sbb
and
or
mov
pop
mov
adc
sbb
cmp
mov
scas
(bad)
nop
mov
clc
jecxz
je
movs
jp
jle
addr16
jecxz
int
inc
popf
sbb
mov
jl
jp
push
jnp
shl
cwde
loope
xor
(bad)
in
jns
icebp
and
mov
jo
mov
cmps
mov
cmps
adc
call
js
mov
jae
fild
lea
outs
scas
mov
sahf
pop
arpl
cdq
outs
sbb
les
sbb
sbb
pop
daa
retf
lea
inc
aaa
stc
(bad)
mov
test
(bad)
inc
es
cdq
sub
dec
jo
sti
push
dec
inc
jmp
and
lar
sar
loope
sahf
ror
pusha
adc
jmp
enter
jmp
mov
or
sbb
pop
rol
push
aaa
popa
push
and
jp
sbb
iret
shl
aam
shl
or
pop
push
mov
cs
inc
shl
sbb
dec
or
push
and
push
fimul
bound
sahf
cdq
cmp
inc
(bad)
div
pop
dec
lods
cwde
mov
fwait
dec
xchg
push
push
and
pop
mov
push
push
fimul
adc
sti
jmp
jg
test
test
adc
xchg
sbb
std
sbb
test
jmp
enter
push
call
leave
data16
xor
cmps
test
cmp
inc
dec
sub
ss
add
or
fdiv
pop
ins
xchg
cmp
adc
in
icebp
sbb
jno
pushf
mov
jmp
sbb
dec
push
cmp
sub
test
xor
movs
lods
out
inc
push
cmps
pop
(bad)
int
and
push
outs
inc
cmps
out
pop
dec
stos
mov
jae
sub
mov
fwait
pop
stc
push
cmp
push
mov
pop
jg
std
lea
or
mov
(bad)
popa
leave
mov
sbb
retf
jle
mov
mov
bound
mov
je
inc
inc
cmp
fnstenv
or
jle
and
fdiv
mov
call
and
jns
test
movq
adc
cmp
push
pop
pop
mul
adc
fistp
mov
dec
repnz
adc
inc
mov
adc
out
mov
mov
pop
cmps
in
dec
jbe
in
dec
(bad)
cmp
push
lods
or
inc
or
das
mov
xchg
add
mov
cmp
movs
sub
jp
scas
ror
sahf
adc
aas
scas
adc
xchg
es
jecxz
loop
mov
push
xor
mov
cmp
xor
ja
stos
push
pushf
xchg
mov
into
repnz
leave
inc
cwde
adc
cwde
lock
out
cmp
push
lock
imul
ret
iret
in
ficom
test
xchg
push
push
in
sub
add
adc
adc
push
xchg
xor
cmc
mov
add
sbb
(bad)
icebp
jle
shr
mov
and
es
push
jbe
mov
xor
icebp
pop
xchg
mov
cmp
sahf
lods
xor
ret
gs
std
pop
hlt
mov
mov
popa
push
cmp
repz
loope
or
push
mov
cmp
xchg
int3
xchg
inc
adc
data16
push
out
push
mov
repz
jl
sti
mov
xor
test
mov
stc
dec
clc
and
in
sub
fisttp
mov
pop
rcl
xor
cdq
mov
pushf
call
icebp
jle
push
pusha
jecxz
pusha
inc
and
push
(bad)
mov
cs
mov
fldcw
stos
test
xor
fcom
or
inc
mov
push
loop
es
ss
rcr
mov
js
imul
xchg
push
dec
call
xor
shl
repnz
dec
add
xor
xlat
pusha
xchg
or
lea
xchg
xchg
cmp
pop
out
add
test
pop
cmp
into
neg
fidiv
retf
and
(bad)
pushf
sbb
lods
iret
mov
cld
(bad)
mov
jmp
(bad)
lods
dec
push
push
push
fiadd
push
mov
bound
iret
es
movs
pop
dec
pop
iret
pop
push
or
dec
push
sub
or
push
lea
std
pop
rol
mov
mov
dec
mov
repnz
push
and
sub
mov
dec
jne
iret
iret
sub
jbe
jno
or
or
fcmovnbe
inc
mov
outs
fwait
dec
jmp
call
add
jne
mov
xchg
xchg
mov
jmp
test
inc
xor
push
dec
fmul
imul
je
cdq
sub
neg
js
xchg
fsubr
or
shl
and
sti
fidivr
arpl
inc
repz
dec
test
shl
in
cwde
test
mov
push
retf
inc
lds
pop
mov
jne
fld
stos
and
inc
lock
movs
xor
mov
dec
jno
test
pop
(bad)
mov
jmp
jecxz
mov
xchg
hlt
add
data16
ds
(bad)
std
ret
add
mov
cli
xchg
sbb
jmp
cdq
sbb
add
add
add
add
add
scas
add
add
add
add
add
cmp
add
sub
add
add
add
add
mov
xchg
push
mov
add
loope
fiadd
add
add
add
add
add
add
sbb
add
add
add
test
jecxz
add
add
mov
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
push
add
add
outs
ret
add
add
mov
add
and
add
fs
add
sbb
add
add
add
add
add
add
add
add
scas
push
add
lods
add
add
add
add
movs
xchg
add
add
add
or
jmp
xor
push
and
xor
dec
lea
sub
push
add
cmp
and
xchg
call
hlt
pop
cmps
cli
leave
add
test
rcl
dec
add
push
js
fst
xor
in
test
imul
int
arpl
cmp
cli
and
clc
sub
les
stc
nop
popf
pop
xchg
int
mov
(bad)
pop
addr16
jb
sahf
jmp
ror
loop
shr
jb
fisubr
(bad)
cs
stos
enter
push
mov
les
push
cmp
ins
loopne
push
dec
push
mov
adc
test
repnz
and
test
iret
repz
jb
pop
adc
lea
mov
icebp
ret
das
idiv
(bad)
xchg
push
push
pop
adc
xchg
jp
xchg
mov
in
mov
mov
fsubrp
mov
xor
lods
mov
or
fwait
xchg
test
std
mov
jbe
and
test
xchg
scas
les
mov
push
jne
mov
push
or
sub
gs
aaa
mov
(bad)
jns
add
test
aad
sti
and
adc
inc
dec
xchg
inc
push
cmp
or
or
addr16
cdq
xor
popa
ds
sub
imul
add
mov
or
cli
jb
fs
or
int3
pop
xor
xor
add
enter
in
(bad)
out
mov
dec
repz
test
pop
mov
not
fcmovnbe
lods
and
mov
mov
xchg
loop
movs
out
sub
retf
scas
(bad)
mov
cmp
pop
jb
(bad)
push
shufps
xchg
mov
lods
in
add
xchg
mov
sbb
cmps
sub
pop
xchg
sbb
xor
std
in
xchg
scas
into
imul
jp
mov
mov
imul
sbb
mov
adc
lea
les
and
cli
ret
movs
mov
lock
test
mov
mov
xor
inc
int3
jbe
xlat
push
mov
adc
push
mov
test
test
inc
outs
push
enter
dec
push
and
add
sbb
repz
sub
mov
xchg
into
lods
sub
test
xor
mov
ror
xchg
cld
xchg
jle
and
sub
pop
xchg
clc
xchg
(bad)
das
jnp
in
jge
sub
push
add
inc
sub
and
repz
and
cmps
cmp
push
(bad)
adc
jmp
jo
dec
pusha
fcomp
mov
lea
cdq
sbb
retf
jae
es
sti
cmc
dec
shr
add
test
xchg
retf
sub
lahf
inc
retf
lds
pop
retf
mov
xchg
or
int
adc
mov
sbb
jg
outs
shl
scas
(bad)
sub
sbb
or
xchg
sbb
jg
inc
xor
cmp
and
or
jecxz
and
adc
mov
enter
adc
jp
mov
ret
push
dec
inc
jbe
je
add
mul
push
div
mov
stos
popf
aaa
mov
fidivr
in
pop
inc
loop
add
and
pop
inc
mov
or
mov
cdq
mov
xor
xlat
push
and
in
clc
dec
sub
inc
pop
inc
mov
sub
sbb
js
xor
dec
fisub
mov
sub
(bad)
rol
sbb
int
mov
push
cmps
outs
mov
cs
(bad)
popa
xchg
ror
test
and
std
jo
cwde
jb
jmp
movs
in
jg
fild
mov
fs
push
fiadd
cdq
xlat
iret
cmp
inc
jp
pop
dec
mov
push
fs
addr16
xchg
popa
pop
xchg
cmc
out
mov
adc
sub
jmp
sbb
push
push
sub
adc
mov
fs
and
sahf
mov
push
sub
or
cmc
repnz
xchg
mov
jno
jb
in
pop
loopne
xor
mov
lds
daa
add
mov
inc
jbe
mov
mov
in
jmp
mov
adc
into
adc
mov
fwait
ror
jns
jle
xchg
dec
jmp
inc
outs
int
push
lea
mov
jne
dec
and
mov
sub
mov
addr16
mov
gs
or
test
in
xchg
sar
ins
mov
cmps
int3
adc
jnp
in
mov
jb
and
loopne
mov
inc
inc
jns
and
sub
jecxz
imul
inc
stos
(bad)
cmp
loop
mov
mov
xchg
sub
mov
cwde
pop
lea
xor
pop
nop
mov
adc
ds
dec
xor
cs
sti
mov
and
mov
jmp
or
(bad)
cmp
lahf
ret
mov
mov
jb
sub
or
imul
push
outs
(bad)
fs
xchg
mov
inc
and
xor
xor
adc
pop
out
sti
pop
mov
xlat
jecxz
sbb
movntps
cmps
test
cmc
(bad)
push
mov
cmp
fucom
nop
or
imul
dec
dec
push
bound
mov
ror
inc
sub
xor
or
inc
xor
sub
xchg
dec
das
push
and
xchg
pop
(bad)
xchg
repnz
out
fsubr
repnz
fbld
aam
loop
xor
cmp
hlt
and
cld
mov
push
mul
mov
sub
add
fcmovb
jbe
dec
jmp
inc
cmp
mov
mov
and
test
sbb
mov
nop
add
xor
movs
sti
jo
push
dec
cmp
fwait
jo
add
pop
push
fisubr
xor
adc
push
mov
add
fisttp
lods
push
cmp
jmp
in
daa
icebp
sar
js
mov
aad
in
stos
dec
loopne
and
pop
(bad)
sub
fcomip
xor
or
inc
imul
mov
mov
dec
ror
and
ret
add
or
pop
push
push
jno
(bad)
sar
pop
lock
adc
jg
lods
pop
mov
movs
stc
xlat
inc
cmp
jmp
mov
lea
push
cmp
dec
mov
inc
push
sar
int3
(bad)
mov
call
addr16
loopne
lock
and
adc
int3
inc
xchg
add
inc
lea
sbb
xchg
jo
sub
lock
fldz
addr16
push
push
mov
cmp
retf
ret
jle
int3
cmp
call
push
cmp
rcl
push
aad
xchg
dec
ins
ja
into
mov
cli
(bad)
adc
inc
push
mov
out
ds
aad
jne
push
dec
xor
pop
dec
fcomp
dec
mov
dec
and
loope
sbb
xchg
or
mov
pop
mov
mov
dec
cld
mov
lahf
and
shr
jle
push
sbb
mov
les
outs
jecxz
push
sbb
push
icebp
inc
ja
xor
pop
(bad)
out
jmp
dec
mov
and
add
add
test
cmp
inc
or
mov
mov
sbb
and
mov
mov
and
sbb
dec
(bad)
shl
or
fmul
xchg
cmps
test
push
in
xor
xor
mov
adc
ins
es
jle
inc
aas
pusha
pop
rcr
pop
xchg
test
sub
leave
pop
into
xchg
test
dec
and
test
push
mov
clc
ins
jmp
adc
mov
mov
and
jl
add
fs
push
inc
out
dec
jmp
fldcw
stos
fdivr
test
out
and
iret
xor
pushf
push
nop
in
cmp
repnz
fbstp
dec
jg
in
push
(bad)
(bad)
outs
mov
adc
mov
jle
or
in
les
fistp
xchg
pusha
mov
sub
sbb
xchg
inc
aas
pushf
or
cdq
jle
sti
pop
add
cmps
rcr
(bad)
(bad)
add
into
pop
cmp
sub
retf
push
pusha
pusha
or
add
mov
pop
add
fldenv
lahf
aas
jmp
addr16
mov
retf
or
sub
sbb
xchg
and
add
mov
dec
xchg
dec
aas
sbb
test
adc
dec
or
(bad)
fsub
push
xchg
jge
adc
sub
cli
mov
dec
jle
xchg
push
sub
mov
cmp
inc
or
iret
pop
push
push
test
mov
push
jecxz
enter
jp
fisttp
jmp
stos
gs
jbe
xor
fisttp
aas
dec
jbe
xchg
adc
add
sbb
sbb
gs
retf
xchg
mov
jne
jno
rcl
inc
fcomp
hlt
cwde
sbb
pop
and
(bad)
sbb
jmp
leave
sub
cwde
add
jecxz
sbb
mov
sbb
or
pop
iret
mov
scas
sbb
(bad)
cmp
cmp
lods
sbb
or
inc
push
sub
call
jecxz
pop
pop
mov
fidivr
dec
fisub
pushf
dec
jno
dec
outs
test
mov
(bad)
fs
sub
mov
rol
sub
out
popf
push
ins
dec
push
repnz
loop
push
jp
xchg
sahf
retf
pop
jmp
out
and
push
fwait
test
not
or
sar
dec
enter
mov
adc
xlat
push
cdq
jno
push
adc
inc
jmp
jns
imul
lock
xor
or
xchg
push
xlat
mov
sub
je
or
sbb
cmps
fs
ins
sbb
aaa
and
xchg
jo
dec
mov
dec
jno
xor
test
clc
add
push
pop
lds
and
(bad)
cli
data16
stc
sbb
inc
push
not
push
leave
dec
add
add
(bad)
leave
inc
xchg
xor
fnstenv
pop
adc
lock
push
ins
das
and
sub
cmp
imul
sub
add
cmp
dec
xchg
mov
cmp
cmp
jl
mov
aam
inc
mov
(bad)
jge
adc
jno
aad
test
add
icebp
mov
repnz
popa
ins
ret
dec
xor
fist
xlat
mov
xchg
add
fld
call
xor
cli
call
jns
adc
daa
pop
test
add
addr16
pop
out
mov
div
pop
xor
int3
aas
pop
sub
cmp
int3
xor
xchg
dec
je
pop
pop
cmp
jmp
(bad)
mov
jecxz
jecxz
int
dec
sbb
cmps
mov
and
mov
iret
in
(bad)
mov
inc
cmp
in
dec
pushf
aad
in
retf
cdq
cdq
inc
sar
out
ret
clc
sbb
pop
cmc
je
mov
push
push
mov
pop
sub
out
inc
push
retf
jmp
call
imul
push
and
je
jnp
(bad)
add
jne
sbb
pop
jl
cmp
mov
pop
inc
dec
pop
test
test
gs
aam
mov
dec
sub
xor
lock
pop
fiadd
loopne
in
push
int
mov
cmc
aad
adc
and
pop
xor
or
test
ss
dec
sub
push
sbb
sbb
jmp
iret
ret
inc
mov
neg
dec
mov
call
mov
repz
push
adc
jecxz
xchg
sti
or
jo
retf
inc
mov
jae
jns
imul
aaa
inc
lds
cdq
aaa
push
push
js
movaps
in
jmp
lds
or
and
rcl
aas
or
sub
mov
mov
cmp
movs
adc
jb
and
xchg
mov
not
inc
adc
cmp
and
pop
stc
inc
ins
fldcw
sbb
jno
jns
sbb
push
imul
(bad)
jg
mov
inc
add
in
ret
xor
jns
mov
pop
jecxz
xchg
mov
shl
out
sub
mov
jge
fs
call
out
mov
fist
leave
cli
pushf
jae
clc
push
add
shl
retf
adc
sub
push
lds
ret
and
xlat
adc
push
ja
adc
xor
cmp
dec
data16
in
arpl
sbb
or
jp
loopne
jl
fistp
popa
in
mov
bound
xor
aas
ror
xor
popf
cli
addr16
ins
mov
out
fisttp
push
das
cmp
lea
test
shl
or
pop
ret
fisub
jns
out
int3
ret
and
repnz
sub
mov
setp
ds
dec
xchg
dec
lahf
dec
ins
jmp
jmp
movs
push
cld
sub
lock
sbb
(bad)
fimul
and
lods
inc
push
pop
adc
lahf
or
sub
frstor
adc
enter
sbb
sub
dec
inc
inc
cmc
pop
(bad)
adc
dec
adc
aaa
or
test
sti
bound
sahf
ret
fcos
ds
mov
dec
xor
xchg
pop
clc
fcomi
push
fimul
pop
xchg
(bad)
mov
ficomp
xor
push
or
mov
pop
and
push
add
pop
(bad)
adc
(bad)
dec
dec
in
lods
jnp
bound
lahf
mov
ins
ss
and
(bad)
retf
pop
movs
test
xor
cmp
ds
inc
mov
fmul
minps
inc
fisttp
jne
pop
push
aaa
jecxz
test
and
xchg
popf
pushf
test
and
jns
and
adc
and
pop
add
(bad)
movs
cmp
addr16
push
cwde
in
cmps
int
addr16
pop
lods
sahf
rcr
mov
and
sbb
or
out
push
jae
sub
outs
retf
sbb
pop
aam
popf
not
(bad)
cmpps
mov
sub
cmc
stos
jmp
mov
popf
in
and
inc
test
inc
mov
xchg
adc
in
into
push
or
call
jg
or
cmc
fiadd
inc
adc
xlat
retf
arpl
and
push
dec
and
scas
sti
jmp
mov
dec
std
or
div
push
inc
loope
dec
fcmovnb
ins
pop
popa
xor
aaa
aam
fcmovnbe
xlat
(bad)
scas
(bad)
arpl
out
xlat
mov
aaa
dec
sbb
fmul
fsub
repnz
jns
leave
xor
push
les
or
xchg
and
xchg
scas
mov
inc
dec
loop
cdq
and
sbb
cmp
ret
mov
sbb
pop
cwde
or
dec
add
push
rcl
adc
sub
push
add
jbe
addr16
mov
(bad)
test
xchg
daa
idiv
or
pushf
adc
jmp
outs
dec
mov
arpl
sub
push
and
push
imul
fisubr
mov
ins
pop
jg
xor
adc
jae
adc
std
mov
jmp
cmps
fnsave
sbb
popf
int
aam
xor
out
ja
dec
adc
sbb
xor
js
push
push
pop
cmp
mov
hlt
add
icebp
mov
sbb
call
data16
(bad)
lea
xor
xchg
ror
and
popf
jle
fwait
push
mov
push
ficom
push
pop
add
repz
repnz
test
dec
or
in
cmp
sahf
push
ds
retf
retf
mov
mov
mov
inc
mov
mov
cld
xlat
mov
jge
sbb
into
bnd
or
(bad)
jp
push
and
das
outs
test
(bad)
mov
in
sbb
dec
pop
sahf
adc
xor
cmps
ret
add
cmp
call
lds
sahf
sub
push
or
push
mov
add
les
jo
jecxz
cmp
pop
inc
or
dec
xor
jo
and
xchg
into
loop
or
inc
inc
retf
stos
add
mov
dec
mov
inc
xchg
jle
pop
mov
hlt
inc
imul
inc
dec
test
test
out
xor
pop
push
call
fldcw
fbld
adc
(bad)
and
and
rcr
adc
mov
loop
sub
cmps
retf
dec
leave
stos
adc
enter
xlat
hlt
cmp
fdivrp
xchg
das
mov
and
mov
jle
sbb
(bad)
outs
push
pop
jmp
inc
adc
(bad)
push
loop
std
into
cs
fild
pop
jne
rcr
xor
add
push
adc
or
cmp
add
sbb
sub
mov
sub
pop
dec
push
push
add
ret
cmp
loope
pop
daa
stos
and
and
mov
ins
inc
stos
std
and
jg
(bad)
hlt
mov
repnz
jecxz
rcl
pop
mov
pop
fmul
push
jo
sub
jmp
cmp
sbb
fild
xchg
mov
adc
cmc
stos
push
lock
into
loopne
loope
outs
add
test
jg
test
lods
stc
or
and
pop
mov
test
and
pop
pushw
lock
cli
test
xchg
icebp
push
mov
jnp
sub
imul
les
loope
push
sub
xchg
pop
dec
ret
ret
inc
adc
je
and
jl
pop
cmps
repz
dec
es
cmps
popf
sar
mov
jp
aaa
jb
dec
cmp
pushf
sub
fisub
jmp
rol
inc
cmp
xchg
das
inc
inc
icebp
jb
sbb
kmovb
movs
and
pop
fmul
repnz
cmp
sub
dec
xchg
mov
out
dec
into
leave
dec
sub
xchg
imul
(bad)
xchg
jge
xlat
push
(bad)
dec
fnstenv
js
xchg
aam
(bad)
jmp
dec
ffreep
(bad)
loope
test
pushf
xchg
inc
push
and
pop
dec
mov
arpl
xchg
xchg
popa
das
cmp
mov
push
dec
out
fild
imul
xor
hlt
mov
dec
fs
xchg
je
xor
mov
loope
add
les
push
mov
mov
in
or
sub
ret
push
pop
aad
and
movs
sub
xor
lods
sti
div
inc
pushf
add
mov
push
mov
shl
sub
inc
add
sar
jmp
fst
inc
test
movs
jb
jmp
xchg
retf
push
rcl
inc
(bad)
out
sbb
clc
xchg
das
mov
inc
shl
push
leave
xchg
js
mov
int
xchg
xor
sbb
cld
jmp
popf
xor
rcl
stos
pop
add
fdiv
mov
sub
daa
std
scas
nop
push
dec
ja
mov
fdivr
jp
fiadd
fdiv
cwde
jne
mov
push
jp
mov
mov
nop
jge
cmp
mov
jl
sub
fwait
adc
test
js
jp
sahf
mov
fstp
pop
jl
or
inc
xchg
xor
inc
adc
ins
cmc
ret
ret
pop
push
push
js
jae
lahf
or
jb
mov
pop
mov
sar
cmps
sbb
dec
fisttp
push
xchg
cmp
jmp
ffree
xchg
outs
dec
out
lods
test
test
jle
mov
push
int3
xchg
push
lods
mov
out
sar
pop
mov
scas
retf
push
pop
pushf
pop
pop
mov
xlat
aas
test
test
jmp
lea
(bad)
scas
jp
ror
cmps
inc
mov
mov
(bad)
pop
cmps
in
nop
in
fsubr
pop
dec
sahf
call
push
mov
ss
sbb
in
jmp
cli
jo
mov
sub
dec
jo
xlat
movs
push
(bad)
add
mov
leave
or
in
nop
dec
shr
fstp
sub
sub
inc
call
in
sub
mov
add
daa
sbb
loope
andnps
mov
xchg
dec
out
stc
aam
mov
cmp
jle
ret
xchg
out
add
ds
add
add
add
add
add
sahf
add
popf
add
add
add
add
fld
add
add
add
mov
hlt
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
and
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
outs
add
add
add
jle
pop
add
add
add
push
add
pop
es
xor
stos
fmul
push
sub
div
xchg
out
jnp
js
(bad)
call
sbb
loope
dec
mov
repnz
(bad)
jg
mov
sub
adc
jae
cli
out
jb
xor
pop
jnp
out
cwde
loope
repz
add
jl
sub
clc
movs
popa
ret
add
repz
push
cmc
xchg
aaa
add
pop
adc
outs
add
dec
adc
push
xor
sbb
(bad)
cmp
add
inc
daa
sbb
adc
inc
pop
test
daa
mov
dec
push
clc
pop
aam
fst
clc
inc
(bad)
cmps
xchg
sub
mov
stos
inc
mov
cs
cld
arpl
fimul
push
sbb
mov
inc
jne
push
jo
and
push
mov
mov
or
fwait
aas
pop
add
and
stos
rcl
fild
mov
mov
shr
or
and
add
int3
dec
adc
es
jb
test
ins
and
dec
jl
into
cmc
ja
pop
inc
fnstcw
jge
dec
popa
(bad)
fs
inc
fstp
mov
mov
test
xchg
ret
ins
jae
(bad)
cmp
push
mov
fwait
loop
sti
dec
retf
outs
cmp
scas
in
ds
mov
add
mov
lods
or
lods
ja
inc
push
pushf
popf
cmp
(bad)
nop
jmp
push
xor
xor
out
sbb
mov
or
or
and
bound
retf
or
add
mov
(bad)
push
pop
dec
push
mov
lahf
lods
out
test
out
sti
dec
xor
jnp
adc
mov
add
xor
pop
dec
std
in
xchg
and
call
movs
sbb
mov
inc
outs
adc
in
ja
iret
dec
add
shr
push
out
cld
jmp
xor
js
lods
sub
inc
fisubr
in
stos
cmps
aad
or
fidivr
adc
and
dec
rcr
mov
pop
or
imul
mov
or
lock
and
outs
push
mov
mov
lea
dec
clts
cld
xor
nop
or
in
add
in
mov
cmc
retf
sub
push
mov
pop
or
data16
add
push
imul
dec
jb
shl
cmc
push
inc
lock
je
mov
push
pand
scas
shl
mov
out
call
mov
ins
push
sbb
dec
imul
mov
mov
jbe
nop
movs
adc
or
pop
out
test
aad
ja
mov
scas
sub
test
sub
mov
adc
mov
ds
mov
jmp
(bad)
cmp
in
fs
push
movs
mov
push
pushf
fstp
pop
nop
test
add
dec
(bad)
cmc
cli
ret
repz
call
mov
cmps
mov
pop
xchg
outs
mov
xchg
mov
sbb
out
sbb
push
shl
adc
lds
pop
push
sbb
or
aad
mov
nop
(bad)
in
(bad)
test
nop
add
add
xor
jp
add
(bad)
cli
test
repz
mov
cmp
(bad)
ds
fcom
mov
lahf
imul
outs
xchg
shl
mov
test
push
pop
es
push
ret
pushf
mov
push
jbe
mov
ins
and
or
mov
pop
loop
cmp
int
and
xchg
bound
movd
mov
aaa
pop
popa
rol
or
popf
pop
jp
or
mov
pop
cs
sub
leave
test
sbb
int3
aam
mov
(bad)
(bad)
out
arpl
hlt
adc
addr16
loopne
arpl
ds
pusha
cs
aas
scas
sbb
in
ins
mov
js
mov
sub
push
sbb
sahf
fmul
adc
pop
outs
and
sub
inc
mov
dec
mov
xor
mov
outs
and
add
sub
inc
adc
add
rol
fimul
and
fsub
fadd
dec
sbb
inc
int3
adc
pop
inc
or
(bad)
pop
stc
mov
cmp
xor
clc
(bad)
jmp
mov
clc
xchg
mov
test
jno
lea
dec
lahf
and
adc
stos
mov
inc
out
cmps
push
sbb
jmp
mov
xchg
stos
lea
mov
dec
push
imul
icebp
push
dec
mov
cmp
fmul
mov
in
ffreep
jo
jno
xchg
cmp
std
fisub
xlat
pop
mov
push
inc
in
dec
jmp
inc
cmps
movs
dec
jo
and
outs
xchg
rsm
push
sbb
mov
push
sahf
int3
dec
xchg
xor
mov
dec
sbb
jne
xchg
pop
pop
jmp
xor
out
xchg
xor
cmps
retf
stos
fld
push
sub
mov
call
mov
rol
(bad)
mov
add
in
cs
mov
ins
jns
jns
dec
jb
stc
dec
fild
aaa
pop
mov
adc
mov
jecxz
aas
mov
mov
lods
loop
mov
xor
je
and
xor
cmp
je
ret
cmp
jne
and
aam
add
(bad)
(bad)
mov
out
out
into
add
push
or
push
and
pop
adc
dec
xor
mov
pop
pop
xlat
nop
mov
fistp
out
xor
das
push
adc
and
popa
sub
mov
xchg
imul
cmp
test
pushf
push
inc
(bad)
push
sbb
sbb
xchg
sub
push
pop
cmps
dec
mov
mov
pop
lea
stos
pop
mov
jnp
mov
pop
cld
ja
push
xor
ins
(bad)
fdiv
cwde
aaa
adc
mov
add
pop
pop
xor
dec
js
cmp
sbb
call
mov
rcl
lods
jle
lods
out
retf
mov
dec
pushf
jg
dec
out
sbb
das
cmp
or
iret
fcmovnu
sbb
fwait
pop
xor
scas
pushf
cmp
add
ficom
and
fs
(bad)
cmp
dec
pop
and
adc
or
jecxz
xor
jae
dec
fst
scas
scas
mov
fwait
pop
mov
ficomp
xchg
dec
lods
jae
int
jno
imul
fld
xor
repnz
mov
outs
pusha
sub
or
cmp
lock
pop
cs
mov
dec
iret
jmp
sub
imul
sub
(bad)
adc
test
push
mov
xor
inc
std
add
into
test
xor
and
out
loop
hlt
push
data16
jecxz
adc
outs
sbb
cmp
icebp
popf
add
sbb
call
jecxz
pop
cmp
sub
sbb
gs
mov
sub
enter
and
in
test
push
test
sbb
xor
pusha
call
mov
xor
push
mov
push
in
pop
out
pushf
xor
mov
fdivr
(bad)
in
test
enter
add
adc
mov
daa
pop
sbb
pop
mov
mov
cmp
iret
ds
xor
jo
inc
rcr
jne
das
push
push
std
jmp
sahf
pop
mov
push
aaa
repnz
ret
jbe
sub
pop
or
retf
cld
lods
and
inc
xchg
loop
ss
(bad)
faddp
sti
iret
inc
daa
add
pop
push
pop
aas
out
mov
xchg
sti
ja
sbb
mov
fwait
xor
leave
cmp
mov
in
push
jae
call
or
fwait
dec
jg
mov
ror
or
rcl
jmp
xchg
dec
iret
ror
iret
in
stc
clc
ffreep
loop
add
mov
daa
in
mov
xor
inc
outs
mov
jb
push
inc
mov
xchg
bound
div
add
mov
add
scas
cmc
sub
push
sub
into
bound
outs
lea
adc
jmp
sub
in
or
lds
ror
pop
out
adc
jae
xchg
movs
inc
jmp
pushf
jge
mov
jno
jo
cs
test
fild
pop
and
lock
js
sbb
fcmovne
pop
mov
add
add
or
rcl
imul
call
aad
(bad)
hlt
ror
(bad)
jb
fwait
popa
sub
jae
adc
sbb
push
mov
cmp
inc
aam
int3
jg
aam
adc
leave
test
jp
jne
leave
jmp
arpl
iret
out
mov
mov
retf
and
cdq
retf
cld
xchg
push
or
dec
aaa
aam
jae
cwde
sbb
cmp
cmps
and
and
int
mov
or
jge
pop
inc
push
retf
inc
loop
xchg
pop
int
pop
jo
inc
pop
cli
ja
add
mov
mov
sub
jo
es
fwait
cli
pop
inc
cmps
fwait
out
fmul
push
cld
fisttp
sub
test
lods
movs
dec
dec
xchg
dec
add
xor
adc
mov
addr16
jmp
and
ror
mov
jmp
ds
adc
(bad)
imul
mov
bts
dec
mov
jae
jnp
mov
daa
pushf
mov
pop
imul
jecxz
push
leave
sti
cwde
jmp
cmp
mov
shr
imul
mov
pop
mov
dec
ret
mov
aad
adc
fisubr
dec
sti
cmp
pop
ds
or
mov
jbe
sbb
(bad)
mov
cmp
cmc
push
lea
xchg
ins
or
cmps
mov
jo
int
hlt
les
sbb
mov
(bad)
or
gs
push
dec
mov
push
lock
mov
sub
dec
push
cmp
xchg
inc
add
mov
xor
push
stc
inc
fisubr
dec
xor
xchg
daa
push
jmp
pop
sub
push
dec
rcl
aas
cmc
das
lahf
jae
mov
aas
xchg
push
in
outs
pop
arpl
out
mov
sahf
rcr
and
dec
dec
test
pop
gs
ja
repnz
add
add
add
add
add
add
dec
add
add
add
add
xchg
add
add
sbb
loopne
jnp
add
add
add
add
scas
shl
add
add
add
add
add
sub
add
jecxz
add
add
add
sbb
lahf
adc
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
cmps
add
dec
add
add
clc
add
add
add
add
cmp
add
add
add
add
add
add
add
add
mov
add
add
add
add
jge
aas
or
add
fidivr
add
xor
add
pop
mov
add
add
add
add
out
add
rol
in
add
add
add
add
add
add
add
add
add
add
sub
mov
add
add
in
dec
sbb
add
inc
add
add
fadd
add
add
xor
add
add
add
add
add
adc
add
add
add
pusha
add
add
add
xchg
jge
enter
add
add
add
add
add
jmp
adc
add
add
add
add
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
add
pop
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
lea
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
call
lea
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
sub
add
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
add
movzx
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
imul
and
cmp
sete
and
mov
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
add
movzx
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
mov
push
mov
mov
mov
cmp
sete
and
movzx
add
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
call
mov
mov
add
add
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
mov
call
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
add
pop
pop
pop
pop
ret
mov
mov
call
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
mov
mov
call
add
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
mov
mov
call
add
mov
mov
sub
mov
mov
mov
call
mov
jmp
data16
push
mov
push
push
push
sub
mov
lea
mov
mov
mov
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
or
mov
and
add
cmp
add
(bad)
jmp
push
add
xchg
push
test
add
add
add
outs
mov
add
mov
mov
mov
xchg
add
and
clc
(bad)
mov
mov
mov
mov
fiadd
mov
call
jecxz
and
add
add
add
lock
cld
jne
add
xchg
and
add
add
test
rol
add
loopne
cdq
mov
into
mov
rol
ins
add
(bad)
and
add
jmp
mov
sub
mov
add
psllw
and
add
add
sub
mov
and
add
add
or
add
add
mov
and
add
push
sub
mov
pminsw
in
add
or
cmp
xchg
test
rol
cmp
(bad)
mov
inc
add
add
aam
add
push
scas
xor
add
push
and
add
loope
and
add
add
mov
jg
clc
push
add
add
add
sub
mov
jg
jmp
dec
test
add
add
dec
js
mov
pmulhw
add
add
gs
aam
add
sub
mov
psubd
add
adc
test
cld
pop
or
xor
add
cmovnp
inc
add
add
ins
das
mov
and
push
add
mov
setle
add
add
add
push
add
add
sub
mov
jg
jmp
mov
arpl
ins
das
push
mov
test
pushf
xor
scas
add
add
add
add
test
adc
cmp
mov
pop
add
test
enter
ins
mov
add
test
add
add
mov
jbe
push
add
add
push
add
ror
add
out
pop
lods
mov
and
add
add
jno
pop
add
jmp
int3
test
aam
add
sub
mov
jg
jmp
xor
add
mov
add
cmp
and
add
mov
and
add
sub
mov
mov
push
add
loope
add
add
add
xor
aam
add
xchg
mov
mov
add
ror
(bad)
add
jle
and
add
les
mov
xor
add
push
add
xor
sub
imul
add
mov
rol
mov
and
add
add
mov
movs
add
inc
jmp
mov
and
add
sub
mov
mov
je
jmp
mov
add
pop
scas
out
out
enter
ins
movsx
add
test
add
add
inc
add
mov
inc
and
je
xchg
add
add
add
sub
mov
std
xor
add
add
add
sub
mov
pusha
je
push
sti
add
add
add
sub
in
and
pmovmskb
add
add
repnz
add
add
fcmovb
or
inc
and
dec
test
mov
add
mov
sub
mov
je
jmp
loope
and
add
add
or
fistp
mov
add
mov
mov
add
daa
enter
inc
and
(bad)
add
test
mov
sub
mov
dec
cmps
cmp
outs
add
add
add
test
sub
mov
xchg
dec
test
mov
add
add
add
sub
mov
je
jmp
mov
and
add
xor
ja
xor
add
shr
mov
sub
mov
je
mov
xchg
add
mov
mov
mov
push
cmp
cmovne
jl
and
les
add
push
add
and
add
ret
add
dec
call
mov
add
add
add
mov
jne
xor
xchg
add
popf
and
mov
mov
jb
gs
inc
sahf
cs
dec
dec
retf
and
das
add
arpl
add
mov
iret
adc
cmp
mov
mov
sub
mov
add
imul
shl
add
add
mov
add
mov
mov
mov
xor
or
inc
shl
and
out
add
add
mov
mov
push
add
add
sub
aas
shr
add
mov
cmp
dec
xchg
repz
cmp
sete
sub
pushf
ret
icebp
test
and
mov
push
in
and
rol
and
or
or
xor
mov
add
xlat
pop
push
je
xor
inc
icebp
mov
jmp
mov
jmp
stc
pop
xchg
xchg
les
aas
add
ins
mov
mov
sub
mov
add
xadd
and
xor
setp
cmp
setl
xor
jmp
inc
lods
cmps
test
add
jmp
mov
mov
mov
mov
mov
jne
lods
and
push
add
mov
mov
mov
out
inc
mov
loopne
mov
add
cvtpi2ps
and
cmp
sete
cmp
psadbw
mov
out
sbb
mov
mov
add
and
sub
mov
mov
and
mov
mov
and
push
div
(bad)
xor
or
retf
adc
mov
or
push
icebp
mov
dec
in
out
add
sti
add
mov
out
add
cmp
pop
push
fnstcw
cmp
add
inc
add
jg
mov
and
add
add
(bad)
push
add
mov
mov
mov
mov
or
sbb
(bad)
out
add
add
mov
and
clc
add
pmaxsw
add
inc
add
add
and
pushf
ror
test
pushf
add
and
mov
sbb
add
inc
and
and
or
mov
xor
xor
or
push
mov
cmp
and
(bad)
out
cmp
je
or
inc
mov
add
xchg
add
in
add
add
push
add
mov
mov
mov
retf
jge
add
add
scas
xchg
inc
adc
scas
ret
add
repz
adc
or
add
(bad)
ret
mov
cmp
mov
pop
cdq
mov
xor
mov
add
mov
and
sbb
xor
mov
(bad)
(bad)
out
test
xlat
jno
cld
les
(bad)
je
sbb
inc
icebp
mov
jmp
(bad)
push
and
add
sub
mov
mov
mov
mov
mov
shr
movs
frstor
sub
out
(bad)
movs
cmps
push
xor
fwait
add
or
cli
add
add
jne
rol
add
pushf
xchg
push
or
test
mov
sti
mov
jmp
mov
mov
mov
rol
add
add
mov
sar
push
jp
jge
add
push
mov
sub
jmp
xor
dec
push
imul
and
clc
hlt
add
add
psraw
cmp
xor
xor
mov
xor
(bad)
repnz
dec
(bad)
cmps
pop
mov
and
into
out
hlt
jno
xor
or
xor
or
and
or
and
in
and
add
add
sub
add
and
add
or
cwde
nop
js
add
call
pop
gs
pop
jecxz
test
add
in
stos
sbb
sar
das
push
add
test
add
mov
mov
jmp
mov
mov
call
mov
jmp
mov
(bad)
xlat
mov
add
add
cwde
cs
and
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
add
mov
or
mov
mov
mov
(bad)
aad
loopne
inc
add
adc
push
add
add
push
rol
pushf
sbb
mov
(bad)
or
dec
mov
(bad)
adc
xchg
push
ret
fmul
mov
aad
and
sbb
sbb
push
add
mov
sub
mov
and
ror
add
jle
cmp
push
(bad)
je
and
scas
ret
dec
mov
jg
jmp
test
cmp
(bad)
mov
add
jmp
mov
sub
mov
jg
jmp
mov
sub
fdivr
inc
add
jmp
mov
and
adc
inc
and
xadd
inc
add
add
add
mov
sub
stc
inc
and
call
add
fild
add
xor
sub
mov
fcmovb
lea
add
add
add
inc
mov
imul
clc
in
inc
icebp
dec
movaps
outs
add
add
sbb
mov
xor
add
jmp
mov
int3
aas
push
xchg
shl
dec
add
add
and
stos
xlat
mov
lock
add
add
xor
add
sar
and
ror
sbb
jo
mov
rcr
mov
je
mov
jmp
jle
outs
fmul
mov
mov
add
jl
mov
and
jmp
mov
lods
inc
add
mov
mov
stc
loop
inc
add
ins
push
and
inc
rol
and
and
sub
and
pop
sbb
add
mov
mov
mov
xor
jge
add
dec
or
add
mov
scas
rol
xlat
test
call
or
add
fidiv
xor
pop
xor
add
inc
ror
add
add
mov
cmp
setne
and
mov
mov
jge
add
add
int
fild
loope
sbb
int
fisttp
scas
repz
(bad)
inc
add
packssdw
add
cmc
add
add
repz
scas
push
shl
ret
add
or
mov
and
jmp
mov
sub
fldenv
jae
ret
inc
rcl
pusha
xchg
data16
add
out
loope
add
call
inc
in
add
mov
dec
mov
inc
and
cmp
add
lods
lea
pop
pop
pop
dec
ret
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
push
add
add
mov
add
add
mov
addr16
add
or
add
mov
mov
and
mov
sub
mov
mov
jo
xchg
add
add
adc
add
mov
mov
mov
stos
popf
add
sub
dec
imul
mov
test
add
xor
xchg
dec
and
sub
xchg
nop
add
add
mov
xchg
mov
inc
and
je
push
add
mov
sub
xchg
and
jg
lock
or
mov
sub
mov
pop
bsf
add
add
inc
and
sub
mov
add
dec
jmp
jne
and
sub
add
push
paddw
inc
and
sub
mov
jg
jmp
or
sub
mov
jge
add
(bad)
xor
outs
xchg
dec
cmp
enter
push
and
jg
jmp
xor
je
dec
fdiv
ror
mov
add
add
sahf
add
dec
aas
mov
mov
and
setp
add
add
sub
lods
inc
and
je
jmp
mov
and
in
(bad)
enter
inc
and
je
jmp
mov
ins
and
mov
jnp
ficom
inc
and
sub
retf
in
je
jmp
sbb
test
push
sub
test
add
add
pusha
add
add
pop
and
and
popf
inc
and
je
jmp
mov
in
mov
pushf
sbb
mov
je
jmp
mov
je
out
imul
je
jmp
sbb
cmp
pusha
mov
sbb
cmp
jmp
jmp
mov
mov
aas
xchg
and
(bad)
xor
adc
sub
adc
add
mov
mov
and
mov
pinsrw
inc
and
jmp
mov
mov
jmp
mov
mov
mov
mov
test
push
add
add
and
add
add
xchg
ret
xor
repz
cmp
xlat
pop
mov
add
push
setl
mov
xor
(bad)
lock
mov
retf
shr
cmp
fstp
and
or
or
xor
mov
mov
xor
mov
and
or
test
mov
cmovne
mov
jmp
mov
add
mov
mov
mov
xchg
popf
add
mov
mov
mov
add
test
mov
add
add
xchg
ret
and
mov
loop
jge
add
movs
jge
add
mov
xor
add
fisttp
mov
sub
cmp
jo
add
mov
fsub
pop
test
cmovne
mov
lahf
add
cmc
js
loope
mov
xchg
xchg
sub
add
push
test
cmovne
mov
jmp
mov
(bad)
std
and
push
mov
jmp
mov
adc
xor
inc
or
add
mov
mov
add
add
outs
add
inc
and
inc
inc
xor
xchg
mov
mov
mov
xor
movs
jge
add
adc
inc
out
add
add
mov
mov
dec
js
scas
xlat
(bad)
loop
add
dec
xor
xor
xchg
ret
cmp
jne
cli
xor
sbb
test
ror
add
cld
retf
daa
aam
adc
dec
mov
ja
and
add
add
sub
jge
add
add
push
(bad)
mov
adc
mov
pop
jp
jp
add
add
add
xchg
(bad)
pop
dec
add
dec
setl
mov
xor
cmp
fdiv
sub
xchg
cld
(bad)
in
and
mov
mov
jg
or
or
add
xor
or
xor
or
xchg
leave
cld
cld
pop
add
inc
icebp
mov
jmp
mov
jecxz
hlt
pop
pop
pop
push
ret
mov
add
mov
mov
xor
call
scas
mov
inc
mov
(bad)
xor
test
jne
push
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
or
dec
adc
mov
mov
mov
mov
in
test
mov
add
add
dec
add
test
add
test
(bad)
(bad)
inc
push
and
add
add
sbb
test
add
sahf
lock
std
movs
sub
add
mov
cdq
fcmovu
shr
mov
or
add
jg
jmp
mov
cli
lock
mov
test
test
add
sbb
add
add
add
sub
mov
mov
jg
jmp
mov
add
sub
and
add
call
test
push
add
sub
jmp
add
mov
jmp
mov
sub
mov
jg
jmp
and
sub
ret
mov
and
add
jmp
xchg
test
sbb
push
adc
test
add
xor
(bad)
cmp
xor
movs
add
add
mov
sub
mov
add
dec
pop
add
push
add
xchg
(bad)
jmp
and
xchg
(bad)
and
add
jmp
mov
add
scas
push
mov
je
rcr
int
ret
movs
add
add
mov
add
(bad)
push
add
jmp
adc
jbe
add
inc
jmp
mov
jo
leave
push
cmp
add
out
or
sub
jae
dec
add
mov
jg
jmp
mov
add
cmps
inc
and
mov
add
add
add
add
add
(bad)
div
sub
add
add
out
add
or
push
xchg
inc
mov
add
add
scas
xor
sbb
add
sub
mov
jg
jmp
mov
loopne
xchg
addps
add
dec
xchg
xor
inc
and
jg
jmp
and
and
add
add
les
outs
add
add
int
or
mov
sub
ret
dec
je
pop
add
add
mov
sub
mov
je
jmp
mov
(bad)
sub
or
add
jmp
mov
sub
test
je
jmp
mov
add
xchg
ja
jge
test
add
jmp
mov
sub
mov
add
or
cmp
pop
stos
(bad)
pop
mov
pop
mov
dec
add
test
add
add
dec
test
rol
in
inc
and
je
jmp
mov
and
add
add
mov
je
lahf
xor
mov
movs
inc
add
sub
mov
je
jmp
jmp
outs
jae
rcl
mov
xchg
(bad)
and
add
add
add
jmp
mov
add
jmp
mov
hlt
inc
iret
in
cmp
and
retf
and
add
add
sbb
add
mov
les
mov
xchg
ins
xor
add
sub
cmp
repz
cmp
setg
add
xor
mov
xor
push
test
daa
cld
adc
and
mov
pop
add
ror
mov
mov
or
xor
mov
add
je
and
push
cld
sub
and
push
add
jmp
mov
mov
mov
mov
mov
mov
sar
(bad)
or
mov
add
imul
add
add
cmp
sete
mov
add
add
sbb
hlt
push
hlt
add
sbb
daa
rol
mov
bndstx
inc
and
or
repz
(bad)
xor
inc
fmul
add
aam
adc
mov
cmovne
ret
xor
add
push
xor
mov
jmp
mov
mov
and
outs
dec
or
mov
dec
mov
pop
(bad)
stos
movs
xchg
sub
or
add
mov
add
add
add
ja
mov
jmp
mov
jmp
mov
mov
mov
mov
pop
call
mov
mov
adc
add
add
and
add
add
mov
int
push
push
add
mov
ror
pop
push
ins
mov
mov
mov
mov
or
inc
and
mov
lahf
lock
and
adc
xchg
(bad)
mov
dec
cmp
add
ror
ret
xor
xor
mov
or
(bad)
mov
mov
add
xchg
pop
mov
(bad)
(bad)
xor
cmp
mov
add
retf
out
or
imul
add
inc
cli
mov
mov
add
mov
sbb
mov
mov
mov
mov
les
xchg
cmp
mov
or
add
sub
imul
and
cmp
add
add
setl
mov
jbe
pop
xchg
inc
mov
add
and
push
(bad)
mov
adc
and
or
cmp
jge
mov
xor
or
and
or
test
mov
icebp
mov
jmp
mov
idiv
add
fistp
pop
mov
cmp
(bad)
ror
add
push
add
add
test
inc
add
mov
and
sbb
scas
jmp
(bad)
sub
add
add
add
pop
ret
mov
jmp
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
inc
cld
mov
mov
mov
mov
jnp
inc
dec
mov
and
xchg
mov
mov
mov
mov
adc
adc
push
xchg
inc
and
call
mov
mov
adc
push
and
mov
and
mov
and
call
jmp
hlt
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
mov
mov
retf
xor
add
in
add
mov
add
sbb
int
dec
add
and
mov
lea
pop
push
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
out
dec
and
mov
and
mov
mov
and
mov
(bad)
sub
push
cs
and
retf
xchg
dec
jmp
mov
mov
jg
jmp
mov
sub
mov
and
je
jmp
mov
fwait
int
mov
pmulhuw
add
add
and
mov
movaps
popf
add
add
dec
push
sub
mov
and
jg
jmp
inc
and
mov
rdtsc
mov
pushf
add
mov
mov
jecxz
mov
je
jmp
loopne
data16
mov
sbb
inc
add
xor
mov
imul
add
jmp
mov
mov
imul
mov
and
cmovo
add
mov
add
inc
and
sub
das
inc
and
aam
mov
add
mov
sub
push
iret
or
test
add
add
cmp
and
lahf
add
add
mov
sub
adc
test
dec
add
fild
inc
and
sub
mov
je
jmp
mov
sub
mov
je
add
mov
add
add
cdq
fwait
mov
scas
je
jmp
mov
add
add
mov
mov
xor
inc
ror
mov
mov
or
lds
add
cmove
mov
jmp
sbb
and
(bad)
(bad)
(bad)
jmp
jno
jmp
ins
into
jecxz
mov
mov
mov
jo
push
add
add
popa
mov
inc
ror
scas
repz
fild
invd
movs
out
dec
xchg
add
pop
(bad)
mov
or
xor
push
inc
ror
add
add
or
add
dec
and
mov
mov
call
mov
add
mov
(bad)
push
call
mov
and
cmp
aam
ret
and
add
mov
cmps
xor
in
or
lds
jmp
add
sub
imul
inc
add
inc
add
sete
(bad)
lods
fistp
fdivr
jae
sti
or
test
and
mov
jmp
mov
mov
mov
test
cmovne
jmp
mov
mov
jmp
mov
add
dec
test
mov
and
mov
add
inc
and
mov
dec
dec
inc
and
inc
add
add
add
lods
sbb
or
outs
add
push
pop
addr16
push
add
(bad)
das
and
retf
jno
jmp
add
add
and
aaa
loope
pop
ret
sub
or
out
or
mov
test
mov
add
dec
and
outs
sub
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
dec
mov
jecxz
add
test
add
popa
mov
add
popf
pushf
or
add
add
add
test
add
push
rdpmc
add
xor
add
xchg
sti
inc
dec
test
add
jge
test
add
mov
rol
mov
mov
loopne
aaa
jl
ins
dec
clc
add
test
jg
jg
lock
test
push
add
sub
mov
hlt
add
imul
and
add
jmp
xor
push
add
jge
add
lock
add
(bad)
add
pop
push
add
add
cmps
pusha
test
add
add
(bad)
call
add
mov
sub
mov
out
popf
mov
mov
add
mov
sub
mov
cmp
and
jmp
and
add
add
mov
psubq
scas
add
add
add
icebp
(bad)
shl
add
add
mov
jmp
mov
cld
imul
sub
and
loop
add
test
pop
add
jmp
mov
xor
(bad)
lds
into
and
add
add
jmp
mov
sub
mov
add
test
leave
add
or
add
jg
test
add
add
imul
add
add
jnp
mov
les
aas
lds
add
pcmpgtd
add
mov
and
sbb
add
rol
cmp
and
add
jmp
mov
sub
dec
test
rol
add
test
or
add
mov
add
add
sub
xor
mov
and
add
add
pop
push
mov
mov
ficomp
ror
add
test
add
add
mov
add
mov
add
cmc
or
mov
add
add
add
str
add
sub
outs
test
add
add
test
add
add
dec
add
add
test
ret
sub
test
(bad)
and
loopne
jmp
mov
xor
mov
mov
je
jmp
mov
sub
mov
jg
jmp
hlt
in
cld
mov
sub
jl
add
je
jmp
mov
xor
mov
fs
daa
add
mov
add
add
push
xor
test
add
mov
sbb
add
add
sub
mov
jg
jmp
mov
jge
xchg
sahf
stos
mov
add
je
mov
mov
and
rdpmc
add
mov
and
add
add
ss
add
xchg
add
jg
jmp
xor
shr
add
add
test
and
add
bound
sub
mov
jg
jmp
xor
sub
ret
test
add
je
jmp
mov
les
sbb
jg
xchg
add
popa
mov
add
add
rol
je
jmp
mov
add
sub
xor
jg
jmp
mov
and
popa
add
xchg
push
jecxz
or
je
mov
push
add
mov
add
(bad)
std
add
mov
and
jg
jmp
mov
and
sub
nop
cld
and
je
jmp
mov
sub
mov
jg
jmp
idiv
and
add
popa
sub
mov
pcmpgtb
mov
dec
add
test
push
add
sub
mov
bsf
add
add
mov
iret
cmp
mov
loope
test
add
jmp
mov
cld
add
dec
sub
xchg
in
imul
test
cld
loop
jg
push
test
mov
jg
lock
test
add
add
mov
je
jmp
ins
test
jmp
jns
lods
mov
pop
dec
outs
cmp
jmp
imul
sub
cmp
out
lahf
add
sub
loop
test
push
fs
jno
inc
and
je
mov
push
(bad)
mov
add
sub
mov
or
sbb
add
dec
test
cld
jge
add
imul
mov
add
add
mov
or
shr
add
add
add
inc
js
test
add
add
jmp
mov
mov
mov
mov
mov
sbb
sub
sub
imul
sub
add
add
add
out
pushf
lods
mov
and
xor
or
test
cmovne
imul
popa
push
mov
sbb
mov
mov
mov
cmp
sete
and
mov
mov
mov
fs
add
jg
inc
and
mov
mov
cmp
add
dec
add
call
add
sete
or
setl
mov
xor
outs
sub
add
(bad)
cmc
inc
and
mov
and
mov
mov
and
adc
xor
jl
pop
(bad)
xor
or
pop
add
or
test
bound
cmovno
mov
ret
loop
mov
add
mov
mov
xchg
sub
jp
push
add
icebp
add
hlt
shr
add
add
jmp
mov
mov
mov
mov
mov
adc
imul
sbb
inc
add
add
xchg
nop
cmp
setae
mov
adc
shl
ret
add
lods
ror
add
xor
add
mov
pop
std
std
je
mov
xor
push
and
jp
add
mov
out
js
jmp
add
xor
jmp
ror
js
scas
repz
adc
inc
enter
jo
ret
mov
xor
imul
dec
sub
add
test
push
and
cmp
mov
inc
and
or
imul
les
mov
jb
mov
mov
mov
dec
add
add
add
shr
xchg
add
push
test
mov
mov
mov
call
mov
mov
xor
cmp
cmove
imul
add
jmp
push
sbb
add
ins
cmp
mov
sub
lea
dec
clc
add
jb
clc
and
cmp
pmaxub
mov
setl
mov
xor
outs
ret
sbb
sbb
mov
and
mov
and
jmp
inc
cmp
test
(bad)
xor
mov
or
and
retf
mov
cmovne
mov
jmp
mov
pop
push
jns
dec
mov
mov
mov
jp
add
add
add
dec
add
imul
add
test
add
(bad)
cld
sti
or
add
pushf
ror
ret
retf
and
add
sbb
and
mov
mov
loop
or
push
(bad)
push
dec
or
pusha
hlt
sbb
or
je
adc
inc
ret
and
add
add
sbb
test
out
add
pop
sub
or
and
add
add
(bad)
or
add
or
mov
call
mov
pop
push
pop
les
cmp
sub
mov
call
mov
and
add
ret
sub
xchg
lds
jg
(bad)
in
add
add
add
add
mov
jmp
mov
mov
mov
mov
cmp
outs
ds
sub
sub
add
add
cmp
sete
cwde
dec
add
add
pushf
(bad)
mov
mov
mov
add
dec
ror
add
dec
jmp
imul
popa
cmp
jne
add
cmp
setne
cmp
mov
mov
jp
add
sub
mov
and
mov
add
imul
and
inc
inc
add
add
xchg
mov
jb
mov
loope
ret
cmp
add
shr
add
mov
mov
and
jecxz
and
mov
and
or
mov
jne
xor
add
call
mov
push
inc
icebp
mov
jmp
mov
mov
dec
call
add
add
inc
add
add
xchg
pop
pusha
add
mov
nop
add
call
mov
jmp
mov
push
sbb
cdq
add
add
mul
add
sub
sub
cmp
pop
add
add
popa
cli
add
sbb
mov
ret
and
fisub
cli
xor
or
adc
add
inc
ror
add
inc
add
or
inc
test
and
add
and
add
mov
mov
jp
add
repz
or
jmp
out
add
or
scas
dec
inc
out
add
loop
(bad)
jg
add
cvtps2pi
sbb
push
pushf
ret
mov
xor
mov
mov
xor
xor
mov
mov
out
aas
jecxz
and
and
and
ss
jbe
mov
cld
test
mov
cmovne
mov
add
add
inc
mov
and
add
add
pop
bswap
hlt
xor
add
les
add
jl
add
(bad)
add
dec
add
add
add
add
test
(bad)
mov
jmp
lods
test
add
add
xchg
pop
repz
dec
pop
inc
add
in
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
int
mov
or
sbb
jne
mov
and
mov
arpl
fimul
and
psraw
adc
inc
and
mov
and
mov
mov
and
push
push
add
dec
and
mov
and
call
mov
add
mov
mov
call
call
lea
pop
dec
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
add
add
and
pop
add
lods
jno
pop
add
add
out
arpl
test
pop
dec
mov
add
dec
test
add
mov
imul
and
add
add
add
add
test
mov
add
add
add
mov
jp
add
add
nop
add
add
jge
add
add
arpl
inc
inc
inc
mov
add
inc
add
inc
outs
add
add
add
mov
mov
mov
and
or
add
aaa
add
add
imul
add
rol
mov
mov
jg
das
add
mov
mov
and
add
add
loopne
sahf
pop
jae
jl
test
add
add
loopne
in
add
out
and
arpl
mov
outs
jmp
mov
and
xor
add
mov
sub
add
add
retf
add
jl
out
and
add
add
dec
inc
ret
jo
in
and
add
add
dec
add
add
ins
and
inc
and
push
test
add
mov
xchg
add
add
add
sub
mov
push
add
jmp
mov
call
and
jg
jmp
mov
and
add
add
cmc
inc
and
jg
jmp
mov
sub
jmp
add
add
add
mov
test
add
add
mov
mov
jg
jmp
mov
inc
jp
loopne
outs
inc
and
paddsb
add
add
lds
add
sub
mov
pop
mov
add
imul
or
and
add
add
mov
and
je
jmp
mov
and
add
or
je
jmp
mov
add
mov
je
jmp
mov
retf
jmp
test
add
arpl
test
add
mov
or
inc
and
(bad)
jmp
mov
add
out
dec
out
push
mov
and
je
jmp
mov
jge
add
add
ds
and
jge
jmp
mov
and
add
sub
mov
je
jmp
jmp
mov
mov
mov
add
add
inc
shl
and
pop
add
cld
les
out
test
add
arpl
(bad)
jmp
add
dec
mov
add
add
add
xor
add
ror
pop
pushf
pop
imul
push
sub
mov
add
mov
mov
sub
add
mov
mov
mov
mov
ds
mov
add
inc
jle
mov
call
dec
mov
dec
ins
mov
mov
jge
xor
add
add
mov
mov
imul
mov
mov
out
mov
mov
or
inc
add
add
call
sbb
pop
(bad)
out
mov
cmp
aas
inc
retf
and
add
add
sbb
mov
out
and
add
or
(bad)
(bad)
inc
test
aaa
add
aaa
mov
add
add
mov
mov
mov
push
add
add
jns
jmp
mov
sub
add
imul
and
cmp
sete
cmp
cmpps
test
xor
xor
mov
and
and
add
mov
xor
dec
inc
and
or
or
add
cld
idiv
sub
sbb
add
add
ins
test
mov
mov
and
add
mov
xchg
and
add
add
test
nop
add
mov
add
mov
shr
in
jmp
sub
mov
mov
mov
add
mov
fild
add
mov
mov
sub
mov
stc
retf
jge
add
add
mov
sub
add
mov
mov
mov
lea
add
je
mov
adc
(bad)
fldenv
ret
adc
pushf
add
mov
mov
add
test
xor
add
mov
mov
jge
add
add
(bad)
push
sar
sub
add
inc
sbb
add
into
add
add
leave
and
add
pushf
rcr
add
pop
xor
mov
dec
loopne
add
mov
mov
gs
into
and
mov
fmul
dec
and
or
pop
jl
and
inc
rcr
enter
and
imul
ss
mov
or
add
fmul
mov
retf
and
(bad)
mov
jmp
(bad)
push
and
add
add
mov
jl
mov
mov
mov
mov
rcr
cmps
jp
out
mov
add
sub
(bad)
xlat
fsub
xor
mov
xchg
add
add
(bad)
add
add
pushf
lods
jge
and
xor
out
mov
inc
ror
add
add
inc
xlat
sub
out
fs
mov
mov
mov
loop
sub
mov
mov
sub
mov
mov
jge
push
scas
clc
jmp
mov
add
mov
xchg
xchg
pop
setl
dec
inc
sbb
aad
repnz
out
out
and
(bad)
inc
and
mov
dec
add
test
and
or
mov
or
add
retf
aam
out
sahf
add
repnz
add
call
test
add
add
pop
pop
ret
js
out
arpl
add
mov
gs
add
add
(bad)
mov
mov
cwde
add
add
and
add
add
xor
add
adc
mov
mov
retf
dec
mov
ret
mov
push
mov
jge
add
test
aaa
add
mov
adc
rol
mov
ret
push
mov
inc
imul
add
lea
mov
ror
jmp
sub
mov
mov
and
imul
mov
into
test
aaa
jl
pop
imul
mov
jmp
mov
xchg
scas
rol
xor
jnp
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
setne
mov
xor
and
mov
xor
and
xor
and
and
or
or
xor
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
sub
add
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
lea
lea
mov
mov
mov
add
add
movzx
add
sub
sub
add
mov
mov
add
movzx
sub
sub
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
call
call
call
mov
mov
mov
cmp
setl
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
call
mov
mov
cmp
setl
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
call
call
call
mov
mov
jmp
call
mov
mov
jmp
mov
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
add
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
add
sub
sub
sub
add
mov
sub
add
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
sub
add
add
add
mov
add
add
sub
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
xchg
push
mov
push
push
push
sub
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
movzx
mov
mov
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
call
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
inc
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
imul
mov
call
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
add
sub
sub
mov
mov
mov
mov
call
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
add
sub
sub
mov
sub
add
mov
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
sub
sub
add
mov
mov
shl
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
call
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
neg
sub
mov
mov
mov
mov
call
and
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
inc
mov
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
lea
mov
xor
mov
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
movzx
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
add
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
call
mov
xor
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
neg
mov
mov
sub
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
and
mov
mov
call
mov
mov
mov
mov
call
mov
neg
mov
mov
sub
mov
mov
mov
mov
call
mov
xor
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
mov
xor
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
lea
mov
mov
xor
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
add
sub
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
jmp
nop
push
mov
sub
mov
mov
mov
mov
call
add
pop
ret
nop
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
shl
mov
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
sub
add
add
mov
add
add
sub
mov
sub
mov
sub
add
sub
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
add
sub
add
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
jmp
mov
mov
jmp
nop
push
mov
push
push
push
and
mov
call
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jecxz
and
add
add
lea
add
xchg
add
add
lea
int
call
mov
add
jno
mov
mov
mov
and
fild
fcomp
and
add
ret
jmp
test
add
fadd
add
nop
test
add
inc
lea
add
add
adc
add
test
jmp
add
div
and
test
add
add
add
mov
adc
add
inc
add
sbb
data16
adc
add
and
inc
dec
sbb
add
add
stc
cld
or
fiadd
add
add
mov
mov
mov
mov
add
or
mov
add
jge
add
mov
mov
add
add
add
inc
and
or
push
mov
add
add
test
and
inc
mov
std
add
ret
and
or
outs
add
aas
cmps
add
mov
cmp
add
add
add
inc
pusha
or
add
add
and
and
add
jno
add
mov
lods
pop
sub
or
cmps
add
push
and
and
and
add
add
and
add
add
loop
add
mov
inc
add
mov
add
mov
mov
call
mov
mov
(bad)
movs
and
add
add
(bad)
shl
call
mov
xchg
mov
and
inc
cmp
inc
mov
dec
test
cmp
mov
jmp
mov
add
(bad)
mov
mov
add
xchg
and
add
or
inc
and
rol
add
mov
pop
add
imul
and
or
add
push
mov
add
rcr
fimul
add
add
and
ins
xor
cmp
mov
call
mov
lea
mov
mov
mov
call
lea
mov
mov
or
inc
add
xor
add
test
sub
add
test
adc
add
add
add
add
or
add
mov
jl
cmp
add
add
add
movd
push
add
jge
add
add
loop
add
outs
sub
or
and
or
inc
push
push
popa
add
add
add
add
add
pop
popf
dec
imul
add
addps
adc
add
mov
and
inc
add
mov
jg
jmp
mov
add
mov
adc
add
add
aam
add
test
add
mov
dec
push
add
jg
jmp
mov
sub
sbb
setge
cwde
test
jno
test
add
xor
add
fild
add
(bad)
and
add
jmp
stos
adc
add
add
out
and
mov
add
add
lahf
add
jmp
mov
sub
int
and
add
add
push
and
mov
add
add
mov
sub
mov
jp
jmp
push
and
inc
add
mov
mov
xchg
jmp
xchg
test
add
add
sar
and
add
add
int3
and
imul
mov
add
add
or
imul
sub
add
(bad)
adc
add
add
xchg
add
mov
je
pop
test
movs
add
add
sub
mov
add
xor
add
loope
add
add
stos
test
xchg
std
add
dec
inc
and
ins
xor
add
add
or
sub
mov
jg
jmp
mov
sub
mov
test
add
add
xor
add
fadd
int3
aad
add
je
and
add
outs
ds
jmp
mov
sub
mov
je
cwde
hlt
pusha
add
xchg
mov
int3
imul
and
xchg
std
add
(bad)
and
add
jmp
mov
adc
test
add
enter
dec
xor
jmp
mov
xor
ss
test
add
add
(bad)
and
add
jmp
push
and
inc
add
xor
lods
mov
test
je
lods
rol
cmp
inc
cmp
jge
test
mov
(bad)
and
add
jmp
mov
sub
mov
int
leave
sldt
jmp
push
test
add
xchg
int
and
add
add
(bad)
and
inc
mov
add
add
test
es
and
mov
jle
add
enter
std
mov
sub
mov
add
jg
jmp
iret
test
add
add
mov
add
test
enter
test
sub
mov
bndstx
add
std
jmp
mov
sub
or
and
add
sbb
or
mov
sub
mov
rdmsr
and
fadd
jmp
mov
sub
dec
test
les
add
jmp
or
add
mov
sub
add
(bad)
and
add
stos
mov
add
mov
sub
mov
je
jmp
mov
sub
mov
(bad)
and
add
jmp
in
and
mov
test
mov
push
test
fcom
inc
add
test
sub
mov
jg
jmp
ss
and
loop
add
mov
inc
add
(bad)
push
popf
add
jmp
add
fmul
add
cvtpi2ps
jno
pop
out
add
add
test
fcmovnu
add
sbb
(bad)
outs
test
pusha
mov
and
add
add
mov
mov
movs
jmp
mov
sub
mov
test
fxch
add
mov
sub
mov
jg
jmp
mov
and
mov
sub
mov
and
add
add
sbb
mov
add
fadd
sub
sbb
add
jg
xchg
add
add
add
add
xchg
sub
mov
je
jmp
mov
sub
mov
jg
or
add
add
xchg
std
sub
mov
je
jmp
cmp
and
add
xchg
sub
int
and
fld
mov
movs
cwde
add
imul
test
add
add
mov
and
fiadd
fmul
gs
xchg
adc
or
add
add
sub
mov
add
mov
add
or
and
add
inc
pushf
and
mov
pop
add
test
add
jmp
mov
and
add
add
fdiv
or
mov
leave
(bad)
dec
add
add
xor
add
add
add
mov
je
xor
push
dec
sbb
mov
add
add
jg
jmp
mov
jmp
test
out
xchg
cmp
add
inc
add
pop
pop
inc
add
add
pop
fcmovnu
cdq
or
mov
ret
add
xchg
add
std
mov
out
data16
jg
dec
test
xor
add
add
inc
pop
add
cmp
sub
mov
jg
jmp
mov
add
mov
adc
into
pop
add
test
xor
aaa
adc
test
jg
jmp
mov
pop
iret
dec
ret
add
loope
je
enter
add
ret
add
xor
mov
sbb
test
or
lods
add
sbb
push
test
add
mov
clc
rcl
sbb
test
add
add
test
mov
add
push
and
add
xchg
sub
mov
popa
(bad)
adc
mov
jmp
mov
sbb
mov
je
jmp
mov
and
add
add
mov
add
add
add
add
mov
sub
mov
or
add
je
jmp
mov
sub
mov
jg
jmp
mov
and
push
and
sub
mov
adc
add
(bad)
fsub
stos
test
xchg
std
ret
jle
or
inc
jg
jmp
mov
mov
or
das
loop
cmp
add
add
mov
test
fsubr
mov
test
mov
fbstp
mov
xor
add
(bad)
xchg
add
test
add
xchg
add
add
sub
mov
and
add
jno
test
add
jmp
xchg
mov
add
add
mov
jg
jmp
mov
dec
add
add
or
mov
or
test
adc
add
push
add
jb
add
xchg
mov
add
loope
add
add
out
add
jmp
sub
mov
test
je
js
add
add
add
sub
push
test
add
add
test
push
mov
add
fsubr
mov
repnz
adc
add
mov
add
mov
lahf
outs
loop
cmp
add
nop
add
add
add
inc
add
inc
add
mov
push
shr
add
mov
mov
add
and
add
sub
mov
int3
(bad)
outs
xor
add
add
inc
xchg
test
add
add
mov
je
jmp
mov
add
push
gs
add
add
(bad)
and
add
jmp
mov
shl
call
mov
lmsw
xchg
add
cld
add
add
fild
rcr
mov
and
add
add
(bad)
and
add
out
add
fmul
loope
or
cwde
movs
inc
je
out
add
add
mov
shl
and
add
inc
mov
add
(bad)
and
jmp
mov
pushf
ret
inc
mov
je
jmp
push
test
and
add
or
fisub
mov
int
jmp
add
xor
mov
sub
sbb
jg
jmp
mov
xor
and
mov
mov
add
jmp
mov
sub
mov
mov
cmp
jmp
mov
inc
sub
push
test
inc
mov
paddd
pop
out
add
fmul
add
sub
mov
cmovns
add
jmp
mov
sub
mov
cmp
je
jmp
cli
out
and
or
mov
push
mov
mov
add
(bad)
jmp
mov
adc
test
call
and
fiadd
inc
mov
jno
sbb
test
and
push
add
mov
leave
loope
add
add
add
add
jne
push
mov
maxps
add
dec
add
pop
and
dec
dec
pop
mov
xlat
(bad)
inc
add
or
and
add
add
loop
adc
test
add
xor
ss
adc
add
add
mov
outs
jg
mov
adc
add
seto
add
add
add
and
loop
add
mov
cmovb
adc
add
mov
test
cmps
mov
jo
inc
add
xchg
and
add
xor
inc
add
add
jno
iret
add
(bad)
loope
movs
jmp
add
mov
sub
mov
ds
xchg
add
add
mov
sub
mov
je
jmp
mov
cmc
xor
pop
mov
repnz
and
add
jmp
mov
and
add
add
mov
and
nop
add
add
add
push
fiadd
inc
cmp
sub
mov
je
jmp
mov
and
add
add
mov
fwait
jns
or
add
mov
add
add
sub
mov
setge
mov
add
xor
add
sub
inc
add
adc
add
xchg
add
add
add
mov
lgs
js
xchg
or
inc
sbb
and
and
add
jno
out
mov
add
jmp
test
sub
mov
movups
push
add
jmp
mov
sub
mov
je
jmp
mov
neg
or
and
add
add
mov
add
add
add
je
add
mov
imul
and
adc
add
add
inc
ror
outs
jmp
mov
mov
mov
mov
mov
push
sbb
adc
add
add
mov
int
add
aam
clc
and
cmp
in
add
add
pushf
shl
and
add
and
mov
mov
dec
xor
add
add
or
ror
mov
lods
push
add
add
xor
or
adc
retf
mov
add
push
add
clc
icebp
push
mov
pop
loop
add
movs
adc
cwde
test
cmp
cmp
mov
dec
repz
cmp
out
fild
mov
add
stc
add
dec
scas
repz
pop
inc
add
add
(bad)
ret
or
add
setl
shl
cwde
das
repnz
clc
ret
add
clc
ror
add
stos
adc
and
xchg
std
ret
mov
mov
mov
push
mov
test
add
loop
or
inc
dec
call
repnz
or
mov
mov
cmp
shl
add
ret
adc
add
sbb
int3
aaa
cmp
cmovne
mov
jmp
jbe
push
pop
add
add
mov
pop
loop
stos
mov
xchg
xchg
mov
jbe
fs
add
pop
jge
and
sbb
imul
and
sbb
xchg
mov
setb
xor
mov
mov
mov
jne
and
loop
mov
sub
add
and
jno
fdiv
les
add
dec
ficomp
add
retf
xlat
or
mul
cli
fistp
and
add
mov
pop
loop
add
and
and
add
add
dec
push
and
or
xor
and
add
pusha
or
add
add
inc
mov
mov
push
and
jmp
lea
mov
push
pop
and
or
xchg
mov
mov
and
(bad)
mul
add
add
mov
add
add
mov
call
(bad)
into
and
sldt
mov
mov
call
enter
add
add
lea
and
mov
mov
mov
dec
inc
and
out
and
add
mov
cld
sub
call
and
push
add
push
adc
dec
mov
mov
add
add
adc
ret
add
add
mov
sub
dec
add
and
add
xchg
mov
mov
mov
mov
and
sbb
fild
lock
add
add
mov
fild
add
add
or
and
mov
and
add
add
lea
cmp
inc
inc
cdq
add
add
int
adc
add
add
inc
add
add
mov
call
xor
adc
mov
mov
jmp
add
add
add
and
adc
fmul
add
add
mov
push
sub
xor
sbb
(bad)
repz
add
add
cmp
sete
pop
dec
add
cvtps2pi
ret
and
xor
push
inc
les
and
add
loope
adc
add
xchg
push
inc
mov
test
paddq
add
hlt
retf
mov
mov
mov
mov
mov
mov
lock
popa
loope
pop
sub
cmp
sar
adc
add
add
push
test
dec
add
mov
sbb
sbb
(bad)
neg
push
(bad)
and
movs
add
mov
inc
add
and
and
mov
and
and
or
or
call
add
add
or
adc
sbb
adc
(bad)
mov
cmovne
cmp
jmp
mov
mov
popa
add
inc
mov
xor
mov
sub
mov
add
imul
sbb
(bad)
loope
and
fwait
imul
add
pslld
cmp
repz
shl
ret
add
dec
ror
add
mov
pop
and
add
add
scas
adc
jns
add
sbb
jne
xchg
xchg
add
lea
in
xchg
add
add
mov
add
push
pusha
adc
je
mov
dec
lock
xor
iret
jns
inc
cmp
cmovl
test
mov
add
add
xchg
(bad)
add
mov
mov
mov
pop
mov
add
cmp
sbb
mov
inc
add
add
inc
add
or
and
jmp
call
add
pushf
ror
ret
sub
xor
imul
sub
mov
fcom
cli
add
xchg
add
ror
test
xchg
idiv
sbb
aam
push
test
stos
and
add
ret
lahf
mov
add
js
add
mov
hlt
cdq
or
pop
mov
mov
mov
mov
outs
dec
sub
add
adc
fadd
add
add
and
test
ret
mov
xor
mov
test
clc
add
and
add
mov
jo
shl
or
xor
test
or
xor
or
cld
xlat
jmp
pop
dec
out
add
add
inc
aaa
mov
jmp
mov
js
sldt
lea
leave
or
mov
sub
ins
add
add
or
jmp
cdq
dec
add
mov
dec
mov
mov
mov
push
and
sbb
movs
mov
repnz
add
add
mov
lock
add
add
test
mov
and
jl
fmul
mov
sub
cs
(bad)
inc
add
add
add
add
mov
leave
mov
repnz
sbb
fild
lea
sub
and
jl
add
inc
sub
(bad)
stc
and
inc
add
add
cwde
and
loope
add
(bad)
gs
add
add
mov
mov
mov
call
mov
mov
cmp
add
and
add
xor
add
mov
jmp
mov
mov
mov
mov
mov
xchg
ret
(bad)
sbb
add
add
neg
add
add
inc
inc
outs
add
sete
mov
or
add
mov
xor
mov
push
fdiv
xor
mov
xchg
push
fmul
add
and
and
or
or
shl
push
jns
ffreep
mov
test
mov
or
mov
sbb
mov
stos
inc
and
and
add
add
or
fadd
pop
inc
add
add
lea
jecxz
adc
mov
push
inc
and
add
add
cmp
xlat
inc
add
add
add
add
pop
push
mov
xchg
add
dec
dec
and
outs
add
mov
or
call
std
add
hlt
fnstsw
push
add
setl
or
add
jns
jp
add
add
lds
and
out
add
ret
mov
inc
and
lods
or
add
dec
xchg
fiadd
add
and
and
add
add
xor
mov
mov
and
and
push
test
int
add
stos
test
add
add
int3
add
mov
add
pop
add
add
add
or
mov
mov
mov
or
loope
sub
add
in
sbb
xchg
add
cld
xor
inc
movs
xor
fmul
loopne
add
inc
retf
and
add
add
cmp
sub
imul
mov
mul
fs
fimul
push
add
sbb
add
test
add
inc
or
or
add
mov
mov
je
add
call
mov
out
dec
sbb
jg
add
or
(bad)
ror
add
stos
ror
add
(bad)
xor
add
or
add
mov
popa
or
add
lea
test
mov
inc
fld
add
add
mov
mov
or
rol
fucomi
icebp
sbb
(bad)
sti
mov
movs
add
adc
mov
add
retf
fmul
and
add
add
mov
out
and
push
add
std
dec
test
add
add
dec
mov
mov
xor
and
dec
mov
ltr
mov
mov
call
enter
pop
adc
mov
call
push
or
add
mov
add
std
add
mov
dec
inc
dec
or
mov
mov
fwait
and
(bad)
mov
mov
add
sbb
fild
lea
lea
mov
and
add
pop
lea
add
clc
push
inc
add
into
xchg
add
test
add
add
inc
xchg
adc
add
add
add
mov
mov
call
mov
mov
cmp
cmovl
loop
cmp
add
jmp
(bad)
pop
lds
xchg
std
cmps
and
sub
mov
inc
test
cmc
sbb
add
cmp
and
or
movs
clc
loope
push
cmp
dec
add
rol
and
add
add
mov
movzx
mov
and
add
add
add
out
sub
cmp
sub
imul
lock
sub
cdq
dec
add
ins
adc
retf
xchg
and
add
add
xor
add
add
add
add
sar
add
add
push
xor
dec
add
xchg
mov
mov
out
and
mov
mov
push
mov
mov
cwde
add
add
mov
clc
(bad)
mov
mov
mov
xor
mov
add
and
ret
add
jl
or
inc
and
repnz
add
mov
inc
add
inc
and
sbb
add
retf
xor
add
add
mov
push
mov
imul
add
(bad)
jmp
mov
in
add
loope
dec
retf
and
inc
add
sbb
add
add
and
add
xor
rcl
jecxz
dec
sbb
test
add
push
fadd
mov
jmp
(bad)
xlat
imul
push
mov
cmp
mov
push
pop
add
jmp
jge
jge
add
mov
adc
add
loope
in
add
test
add
ror
add
js
or
add
sti
movs
cld
jns
mov
push
add
add
enter
ins
outs
adc
es
ins
movq
add
add
cmp
int
lods
cmp
setl
or
sti
or
ret
inc
ror
and
add
add
cmp
xchg
mov
and
mov
add
push
add
setne
cmp
mov
mov
push
cmp
mov
sub
sub
out
ret
rdtsc
shl
out
xchg
or
cmp
jge
add
fisttp
(bad)
mov
xor
arpl
clc
ret
add
and
xchg
add
jmp
jle
loopne
movs
or
shl
(bad)
add
test
cmovne
test
add
add
mov
iret
imul
add
add
mov
xchg
sbb
(bad)
push
add
fcomp
mov
mov
add
imul
and
inc
cmp
add
add
cli
mov
sahf
xchg
ror
ret
xor
sub
mov
and
sti
(bad)
mov
and
add
add
fadd
mov
and
jmp
inc
add
add
(bad)
pop
idiv
fadd
nop
and
or
test
mov
cmovne
mov
and
fadd
pop
stc
push
add
mov
and
adc
loop
xchg
add
call
sub
mov
mov
mov
push
push
sbb
sub
mov
add
imul
out
out
add
add
add
or
xchg
add
cmp
xor
or
neg
add
inc
retf
and
add
jmp
mov
jmp
mov
mov
cmp
fwait
inc
ror
ret
rol
mov
adc
mov
mov
xor
dec
add
rol
pop
add
add
cli
sahf
sub
dec
js
sub
add
mov
fld
fimul
pop
mov
(bad)
outs
xor
mov
cmovne
mov
js
push
add
mov
std
cld
fst
cmps
xchg
into
push
test
add
arpl
add
mov
mov
imul
and
cmp
sete
cmp
setl
out
and
xor
mov
cmovne
sbb
jmp
mov
xchg
add
add
sub
mov
rcl
dec
add
shr
repz
pop
cmp
jae
add
add
add
or
jnp
add
add
sub
mov
lock
add
inc
sbb
add
or
imul
pushf
rol
pushf
clc
jae
loopne
rcl
es
add
fistp
inc
and
mov
cs
mov
mov
and
mov
xchg
jno
clc
das
or
sub
inc
and
or
mov
xor
push
jl
jb
cld
popa
hlt
and
or
test
cmovne
add
inc
mov
dec
mov
stos
cli
add
mov
mov
jbe
fs
add
in
push
inc
out
add
outs
add
ror
xlat
and
(bad)
add
sete
cmp
setl
mov
cli
xor
(bad)
ret
inc
stos
xchg
test
add
add
outs
add
add
test
ltr
mov
mov
mov
call
sub
pop
movs
data16
mov
add
add
add
psubq
mov
add
pushf
and
adc
add
add
cmp
mov
sub
add
add
jle
repz
inc
add
mov
call
add
add
pushf
(bad)
mov
push
xor
or
test
cmovne
mov
jmp
mov
or
inc
loop
sbb
sub
ror
add
mov
dec
add
add
add
call
adc
inc
imul
mov
mov
test
adc
xchg
sub
add
sahf
scas
xlat
and
xor
push
dec
ret
cmp
and
sti
aam
mul
add
inc
loopne
test
add
add
lds
add
mov
add
mov
mov
mov
add
sub
sub
push
add
add
pop
add
xchg
mov
setl
mov
xor
mov
fs
xor
xor
mov
inc
in
and
mov
shl
movs
inc
or
or
xor
mov
and
adc
mov
xor
and
push
je
push
inc
icebp
mov
jmp
lea
ret
(bad)
movs
and
add
add
cmp
(bad)
outs
mov
mov
lea
nop
adc
mov
mov
clc
das
and
mov
neg
adc
(bad)
mov
(bad)
int
pop
push
add
add
and
inc
and
or
add
and
inc
and
push
add
cmp
mov
int
and
sbb
add
mov
cmp
mov
call
lea
mov
sub
xchg
add
add
add
lea
add
add
adc
add
inc
and
mov
call
xchg
mov
mov
sub
dec
add
mov
mov
xchg
rol
add
mov
and
add
xor
sub
test
movzx
push
xchg
and
add
fmul
and
pop
enter
add
and
add
mov
add
add
mov
cdq
dec
add
inc
add
add
mov
sbb
int
and
push
jl
or
push
adc
idiv
idiv
add
cmp
mov
xchg
je
or
add
add
add
add
xor
mov
sub
push
jge
add
add
add
test
add
inc
and
outs
add
add
test
add
add
popf
jb
xlat
add
fadd
test
jo
je
inc
add
mov
mov
mov
lea
lea
add
and
inc
add
add
inc
mov
add
das
and
add
add
jp
cld
enter
add
dec
and
dec
push
loop
xchg
(bad)
inc
test
xor
add
inc
or
mov
jmp
mov
stos
xchg
mov
mov
and
js
add
adc
dec
add
rol
cld
pop
(bad)
add
rol
outs
je
out
das
pop
add
add
mov
mov
or
call
sub
(bad)
popf
call
add
mov
aaa
jmp
xor
cs
add
add
call
sub
mov
mov
mov
add
sbb
pop
add
add
push
es
jmp
mov
mov
repz
clc
pop
sub
fldcw
mov
xchg
or
jnp
dec
jnp
aas
inc
mov
sub
inc
sbb
out
je
stc
inc
aas
sub
(bad)
xor
das
cmp
sub
xchg
pop
and
sub
push
repz
bound
jns
mov
add
mov
xchg
xchg
js
xor
push
xchg
sbb
push
sbb
xchg
call
repz
cmp
repnz
iret
(bad)
pop
cld
xchg
cmp
les
(bad)
push
jmp
push
test
loope
and
xor
sbb
inc
add
scas
inc
popa
add
(bad)
pushf
mov
das
inc
mov
mov
mov
ret
cdq
and
mov
and
ins
shr
jge
mov
stos
mov
loop
aas
rcr
(bad)
jae
cmp
leave
jbe
xlat
mov
pop
cmps
mov
bound
xchg
mov
(bad)
jno
enter
and
jb
movs
data16
icebp
repz
loopne
clc
dec
stos
jmp
xlat
int3
clc
pop
dec
lods
and
test
sub
je
pusha
xor
adc
mov
push
adc
int
rcl
in
push
or
outs
stos
retf
lods
mov
add
call
retf
cwde
mov
je
aad
call
lods
xchg
pop
sub
xchg
aad
push
xor
cwde
sbb
cmp
bnd
cmp
jae
xor
pusha
xchg
scas
adc
jmp
mov
popa
imul
inc
mov
mov
hlt
aaa
sub
dec
ins
xor
jns
clc
or
faddp
pop
fbstp
rcl
sub
jae
mov
jle
xchg
sahf
mov
lods
es
mov
dec
mov
sahf
int
mov
(bad)
aam
jl
pop
daa
sahf
ss
adc
fsubr
mov
and
dec
lahf
bound
jae
sub
push
adc
jecxz
and
add
sub
cmp
sub
out
inc
or
sbb
add
ret
es
dec
pop
and
popa
xchg
ret
movs
mov
ret
hlt
dec
stos
and
pusha
out
sbb
shl
cmc
jns
or
mov
mov
inc
ret
sub
mov
sub
cmp
add
sub
mov
(bad)
jbe
rcl
cmp
xchg
xor
lea
jb
es
daa
ds
call
leave
call
dec
setp
cmp
xchg
cli
not
mov
jg
out
call
mov
addr16
out
cmp
movs
push
dec
lods
inc
push
into
icebp
fisub
xor
fst
xchg
mov
nop
cmp
out
mov
jecxz
fdivr
and
sbb
xchg
push
mov
shl
mov
push
(bad)
out
js
retf
not
mov
call
mov
or
fwait
push
pop
pop
gs
adc
push
fbstp
xchg
jae
xor
push
dec
pop
xchg
rcl
push
in
mov
cmp
sub
lahf
(bad)
ds
sbb
push
leave
dec
or
add
add
push
sahf
xchg
ror
cmps
xor
pop
les
push
pop
sub
mov
aas
add
push
cld
xor
jno
std
push
or
add
inc
mov
cmp
mov
push
scas
adc
push
push
or
xchg
aaa
inc
mov
cdq
xchg
add
pop
jecxz
jmp
pop
push
mov
sub
xchg
push
xchg
shl
imul
cmp
push
fs
cmps
test
pusha
cld
xor
ins
cmps
ret
mov
cmp
pushf
dec
call
jge
popa
push
or
pop
sub
gs
test
inc
(bad)
push
stc
and
int3
fcom
fld
dec
addr16
stos
imul
jl
jno
adc
enter
fnstsw
sbb
aas
(bad)
push
lds
pusha
fidivr
aad
cld
mov
jmp
out
mov
add
sbb
pushf
push
js
scas
ficomp
(bad)
and
xor
pop
(bad)
jbe
ins
lods
cs
(bad)
jmp
leave
dec
adc
pop
mov
xor
xor
leave
stos
mov
add
add
push
pop
xor
das
test
pop
pop
retf
mov
icebp
shl
jo
adc
cld
out
jge
pop
out
mov
mov
(bad)
scas
imul
pop
mov
pop
jcxz
sub
sub
adc
std
jne
sub
push
leave
mov
retf
push
jge
mov
fistp
addr16
(bad)
adc
data16
leave
call
jmp
push
dec
test
jmp
mov
sub
inc
push
sti
fadd
sub
clc
xchg
js
mov
test
mov
(bad)
adc
cmp
mov
and
sbb
and
ins
nop
dec
dec
xor
pushf
ja
(bad)
fisub
sti
pinsrw
mov
dec
clc
mov
mov
repz
push
fcomi
test
cwde
cs
mov
dec
add
(bad)
lods
xchg
sub
fs
dec
ja
mov
or
mov
aad
pop
(bad)
mov
je
ficom
cwde
aas
fcom
jecxz
mov
jne
imul
push
push
or
adc
mov
sahf
rol
add
test
jbe
movs
int3
pop
inc
ins
movs
adc
dec
scas
std
into
clc
ins
loope
call
(bad)
(bad)
shl
sub
sbb
dec
add
and
fst
in
mov
popf
adc
jmp
call
ret
icebp
xor
aad
loopne
mov
add
sbb
cwde
push
lods
retf
dec
and
stos
loop
add
dec
cmps
pop
into
pop
out
gs
add
cdq
scas
fadd
mov
les
mov
popa
xchg
int
fisub
xchg
push
in
xor
jb
hlt
xchg
mov
cs
hlt
imul
push
ret
mov
out
out
xchg
hlt
imul
inc
repnz
cld
pop
leave
jg
dec
pop
push
mov
xor
or
leave
emms
jns
mov
jns
xchg
cwde
jbe
mov
aas
repnz
xchg
cmc
rol
les
push
vmovq
inc
(bad)
pop
add
(bad)
and
push
push
push
hlt
fmul
in
call
in
ret
mov
dec
pop
push
mov
adc
or
mov
jecxz
pop
retf
popf
mov
das
mov
sahf
fmul
inc
or
ja
mov
ror
arpl
rcl
mov
in
inc
(bad)
mov
mov
ins
and
sbb
mov
ss
cwde
pop
popf
das
loope
rcl
inc
(bad)
addr16
jo
enter
xchg
arpl
popf
fstp
retf
xor
cmp
and
sub
xchg
jmp
shl
xor
aaa
rcr
sahf
dec
push
scas
jl
call
push
popa
dec
dec
fstp
in
cmp
push
add
fmul
cmp
jle
push
nop
mov
movs
pop
jge
popa
mov
or
arpl
idiv
push
push
leave
pop
das
jno
in
jl
xor
(bad)
adc
addr16
push
xor
popa
or
pop
push
sub
(bad)
pop
arpl
pop
test
loopne
xchg
int3
jmp
push
(bad)
sti
(bad)
ja
mov
pop
sbb
xchg
cld
hlt
mov
xchg
pusha
loop
repnz
mov
xchg
sti
jne
int3
cmp
pop
xchg
xchg
pop
jbe
cmp
push
and
pop
push
pop
jmp
repz
test
(bad)
mov
pop
into
(bad)
pop
inc
mov
hlt
xor
sbb
mov
shl
dec
sahf
xchg
mov
pop
(bad)
repz
xor
jge
pop
pop
sbb
pop
outs
addr16
scas
iret
enter
xchg
out
mov
fsubr
pop
xchg
sub
in
enter
stos
push
test
cmp
mov
mov
stos
mov
sti
jmp
cmp
sbb
add
or
popa
jecxz
xchg
daa
callw
or
mov
stos
xchg
sahf
imul
and
and
gs
inc
test
and
or
inc
and
and
mov
daa
rcl
mov
cmp
add
push
cmp
in
or
call
jb
adc
int3
movs
out
mov
xchg
xor
es
mov
(bad)
pop
add
add
bound
data16
or
pop
lea
pushf
lahf
add
(bad)
pop
mov
je
(bad)
shr
outs
cmp
push
gs
pop
mov
(bad)
cmp
sbb
inc
jmp
scas
imul
sbb
iret
out
inc
add
(bad)
jo
and
imul
sub
mov
inc
add
call
cmp
add
jns
xor
sbb
call
cmp
call
popa
repnz
dec
cmp
and
lods
cs
jl
adc
in
adc
adc
ror
lea
cli
jae
push
out
call
or
and
pusha
cdq
imul
jp
adc
es
dec
les
adc
or
mov
int3
xor
cmp
sar
leave
xchg
add
mov
and
mov
fist
ds
xor
sbb
lahf
lds
mov
jne
and
push
mov
mov
jns
jae
fimul
aaa
add
mov
pop
aam
jmp
xor
push
and
pop
jb
(bad)
icebp
cmp
dec
mov
(bad)
mov
adc
jbe
test
add
movs
outs
test
arpl
mov
jnp
not
daa
xor
pop
add
pushf
pop
inc
xor
loopne
mov
cmp
enter
cmp
adc
fs
rol
mov
mov
push
loopne
and
sub
test
jnp
push
mov
(bad)
jne
sbb
pop
popf
pop
bound
xchg
ss
bound
out
mov
xchg
ins
ror
jno
jb
mov
sti
jbe
xchg
fldcw
popa
dec
cwde
cmp
and
test
ja
neg
xchg
xchg
or
ret
icebp
xchg
call
std
imul
dec
mov
fsubr
mov
daa
lods
and
pop
cmovb
fwait
sub
in
aam
mov
push
pop
loop
aad
cmps
in
mov
sub
or
scas
and
(bad)
push
(bad)
jnp
adc
jmp
add
dec
pushf
sub
mov
pusha
jbe
lock
popf
sub
dec
call
push
mov
stos
rcr
(bad)
lock
in
inc
or
data16
sub
inc
push
dec
les
add
or
mov
sub
sub
mov
aaa
dec
(bad)
jl
xor
mov
mov
popa
stc
xchg
mov
mov
into
fstp
xor
and
sub
push
and
sub
daa
push
(bad)
adc
sub
imul
test
out
sbb
fnsave
std
inc
lea
mov
jns
lods
movs
add
mov
inc
lock
test
into
xor
iret
cli
jnp
jle
or
dec
push
mov
jmp
out
ss
popa
retf
pop
push
(bad)
std
loope
imul
xlat
loopne
ret
cmp
repnz
add
cld
mov
retf
cmps
dec
xor
push
push
and
scas
out
call
das
adc
push
pop
sbb
retf
jle
sbb
adc
pop
leave
sub
push
pop
sbb
cdq
lods
int3
pop
rol
xchg
push
pop
mov
sbb
or
mov
mov
jns
push
push
add
sub
xchg
imul
push
aaa
in
xor
clc
rcl
sbb
idiv
shr
jl
(bad)
scas
call
add
out
adc
dec
in
imul
or
xchg
dec
sbb
push
ja
int
xchg
adc
outs
fidiv
int3
mov
inc
pop
cmc
repz
jle
aam
mov
ret
dec
push
or
mov
cmp
fisttp
sbb
xor
sbb
adc
dec
mov
ins
and
xchg
popa
paddsw
pop
mov
dec
push
call
fwait
(bad)
aaa
cmp
mov
rcr
mov
repz
leave
test
js
ficom
mov
jmp
push
cmp
mov
add
xchg
out
jne
sbb
mov
cdq
enter
xchg
or
out
dec
(bad)
mov
adc
push
mov
sbb
jle
daa
xchg
push
cs
retf
xor
mov
inc
push
test
stc
fndisi(8087
test
cld
cli
mov
xchg
es
(bad)
jbe
mov
adc
cwde
icebp
(bad)
mov
push
rcl
jae
loope
ret
xchg
(bad)
movs
out
jnp
adc
inc
fwait
sub
call
jl
shl
mov
jae
enter
mul
sar
neg
adc
out
sbb
cmp
mov
ret
addr16
(bad)
arpl
mov
add
add
stc
gs
adc
push
(bad)
pop
xchg
lahf
dec
or
xchg
push
push
add
sbb
jnp
push
in
(bad)
mov
mov
mov
clc
imul
adc
fsub
fs
xchg
fs
in
test
ret
push
cmc
stos
gs
pop
push
inc
into
cmp
jle
mov
outs
inc
cli
lods
xchg
cld
in
jnp
ins
sar
cld
mov
pop
lock
pushf
test
repz
sub
or
(bad)
leave
and
sub
ds
fcmovnbe
mov
xor
sub
mov
fs
enter
and
out
sbb
bound
and
add
shl
xchg
(bad)
cmc
xor
inc
lock
retf
aas
adc
sub
ftst
and
jmp
push
dec
jb
ret
push
retf
jmp
test
(bad)
or
lahf
sub
or
push
mov
pop
clc
or
addr16
imul
cld
das
jge
jo
and
push
rcr
lea
test
pop
push
adc
mov
xor
fs
retf
dec
pop
inc
repz
stos
and
(bad)
hlt
mov
adc
gs
(bad)
in
dec
inc
daa
mov
gs
inc
or
sahf
int
xchg
popf
repnz
sti
inc
push
sbb
push
repz
mov
call
adc
outs
mov
sub
(bad)
pop
fadd
mov
dec
call
push
add
ins
and
stos
pop
aam
addr16
leave
icebp
push
inc
pop
sub
dec
sbb
pop
in
ja
jp
push
sbb
in
ficomp
aaa
mul
add
icebp
loop
test
int3
lahf
xchg
mov
cmp
mov
popa
xchg
add
pop
jl
lahf
sbb
cmp
test
sub
lea
mov
cs
imul
repz
mov
and
scas
and
cmps
in
in
push
jge
fild
push
pusha
ror
and
leave
mov
jmp
in
or
clc
xor
retf
adc
and
mov
push
adc
xor
pop
shr
pop
mov
fsub
enter
in
dec
fucompp
test
jne
jg
popa
pop
fnstsw
jp
sub
mov
mov
xchg
adc
not
sub
jae
mov
lods
mov
pop
shr
(bad)
xor
mov
iret
test
pop
outs
and
aas
xchg
popa
pusha
cmp
in
jmp
scas
aad
adc
lds
pop
ds
jne
cmp
cdq
mov
mov
pop
or
cmps
pop
sbb
push
imul
cmp
mov
adc
add
jmp
sbb
iret
inc
mul
iret
adc
jmp
add
mov
cli
or
adc
xchg
xchg
and
hlt
adc
outs
push
push
or
and
or
(bad)
leave
jmp
out
imul
push
mov
inc
jnp
sub
dec
lods
jmp
fadd
jg
add
lods
stos
jnp
jo
test
fnsave
mov
pop
adc
nop
inc
std
cs
xlat
fsub
pop
push
xor
or
or
pop
add
pop
pop
jnp
xor
(bad)
dec
test
adc
mov
fsubr
adc
ficom
frstpm(287
iret
mov
test
mov
or
push
jle
push
mov
inc
sti
xor
jecxz
rol
adc
fst
imul
retf
cmp
and
jae
cs
movs
mov
jnp
sbb
or
aam
call
jns
shl
dec
pop
or
jmp
sub
push
xchg
pop
stos
xchg
ficom
loop
lea
push
mov
xor
out
inc
sar
cli
mov
jmp
mov
inc
repz
pop
inc
push
cmp
xor
lds
push
out
ins
pop
push
push
ror
dec
cld
mov
int
adc
pop
sub
push
inc
inc
fdivr
pop
adc
push
pop
mov
add
sti
pop
xor
mov
(bad)
fmul
mov
es
xchg
sub
into
or
hlt
pop
pop
jge
inc
and
push
cmc
adc
or
cwde
cmp
lods
lds
mov
js
rcr
fsubrp
push
xor
adc
jnp
leave
adc
mov
cmp
jmp
arpl
dec
mov
or
pop
mov
lock
(bad)
(bad)
mov
xchg
cmp
cmc
cdq
dec
pop
fistp
cwde
jno
inc
out
mul
xor
xchg
cmps
cmp
stos
movs
add
cmps
cmp
iret
movs
adc
xor
call
in
push
sar
inc
push
jae
push
push
ret
inc
mov
icebp
dec
iret
or
add
in
sbb
mov
icebp
xor
xchg
jmp
ret
mov
jne
enter
or
movs
mov
xchg
int3
and
imul
inc
mov
test
sub
test
mov
mov
dec
ret
xor
cmp
leave
mov
(bad)
fidiv
jmp
stos
mov
(bad)
out
xor
xor
call
outs
mov
scas
out
cmp
sahf
jl
cmp
jecxz
xchg
xchg
pop
inc
mov
inc
in
sub
das
scas
mov
push
ret
ret
inc
mov
retf
and
dec
rcr
xor
retf
and
jne
test
cli
xchg
out
imul
or
inc
daa
or
add
inc
sbb
or
push
jbe
icebp
jmp
lods
popf
test
daa
and
mov
ficomp
xor
or
out
nop
retf
mov
adc
cmp
add
ins
fsubr
(bad)
jge
and
enter
jge
shr
jne
cwde
mov
inc
gs
inc
pop
inc
inc
mov
add
out
xchg
jbe
fadd
fidivr
jl
sub
jge
inc
shl
pop
fs
dec
jle
dec
xchg
cmp
mov
sub
cmps
idiv
jns
daa
rcr
push
pop
pop
mov
add
nop
mov
fistp
(bad)
shr
sub
out
pop
mov
jg
mov
ins
in
xchg
cli
jmp
ficomp
cmp
jns
push
jg
ret
ficomp
das
loop
in
pop
xchg
xlat
ds
ss
dec
ins
sahf
test
(bad)
(bad)
jmp
or
aad
int3
xor
inc
pushf
pop
push
cli
add
icebp
rcr
mov
mov
sahf
push
inc
or
push
je
add
jmp
push
mov
cmp
pop
ror
and
add
test
push
popf
in
mov
nop
sti
shl
out
dec
out
lahf
mov
jmp
cmps
(bad)
adc
pop
jnp
pop
sar
cmp
mov
sub
leave
add
xlat
pop
fisubr
in
xchg
stos
adc
sbb
shl
lock
or
add
inc
xchg
into
data16
jge
and
shl
fisttp
xor
mov
push
inc
icebp
scas
mov
in
cmps
xor
scas
push
dec
or
lea
jmp
shl
test
popf
jb
sub
sub
jo
dec
retf
xchg
mov
aad
ins
mov
dec
fisttp
sahf
push
xlat
dec
inc
cld
jg
dec
loopne
cld
or
ret
inc
adc
jno
mov
mov
jae
loop
or
into
jno
test
pop
leave
and
mov
ror
popf
sar
es
push
add
movs
sbb
div
jbe
or
xor
ins
jnp
call
or
xchg
pop
movs
div
sub
xor
mov
inc
inc
mov
dec
sub
enter
sub
mov
dec
out
push
xchg
xchg
dec
ins
xchg
lods
jge
push
dec
mov
cdq
in
xor
dec
mov
or
jmp
stc
cs
loopne
and
adc
xlat
addr16
pop
or
shr
sbb
jo
jne
mov
loope
iret
fdivp
mov
int
inc
push
sub
test
into
cli
jp
pop
or
xor
sahf
pop
cld
arpl
out
js
and
add
daa
bound
xor
cdq
mov
or
pop
call
iret
movs
sti
data16
fdiv
test
ficomp
and
test
sub
jnp
int3
rcr
(bad)
pop
dec
jns
mov
aad
daa
mov
scas
sbb
and
ficom
in
cmps
and
and
addr16
inc
add
xchg
mov
repz
loope
es
mov
inc
out
sti
inc
(bad)
mov
aas
sub
pusha
dec
push
add
mov
jmp
mov
dec
mov
ror
adc
fcmovne
xchg
dec
shr
xor
pop
cli
cmp
repz
bound
pop
outs
or
jb
rcr
mov
test
sbb
out
int3
push
in
sbb
int
push
out
pop
cmp
loope
xchg
vmread
adc
adc
pop
push
xchg
mov
cli
xor
mov
cmp
lods
mov
pop
pop
idiv
xchg
daa
(bad)
int3
(bad)
fisttp
not
jbe
pop
or
nop
cdq
and
lods
mov
mov
xchg
retf
inc
mov
sbb
rol
gs
imul
jmp
jl
jmp
fimul
mov
(bad)
dec
mov
xchg
stos
xchg
pop
or
repz
push
inc
mov
dec
cmp
leave
fninit
jbe
lods
xchg
mov
pop
mov
imul
and
addr16
and
repnz
dec
adc
inc
fdivr
adc
jmp
mov
movs
mov
stos
ficom
(bad)
retf
ret
add
mov
aad
push
dec
pop
xchg
push
dec
loop
icebp
sti
stos
(bad)
cmps
mov
mov
out
adc
cli
in
jmp
xor
xor
or
ja
pop
mov
jmp
and
xchg
loop
mov
into
aad
and
mov
or
and
scas
repz
push
retf
test
out
mov
sar
mov
adc
and
and
jbe
daa
lahf
xchg
jg
and
jns
cmp
es
push
rcl
out
in
or
lds
inc
leave
and
aad
adc
mov
inc
xchg
ficom
inc
sbb
test
leave
ins
adc
retf
pop
add
push
jns
ret
aam
xor
(bad)
jg
jae
fst
cmp
pop
add
and
test
mov
jnp
push
sub
sahf
xor
add
(bad)
jge
adc
shl
lea
ins
ins
jae
test
cmp
movs
jmp
jle
and
cmc
mov
mov
jae
and
ret
mov
xor
add
pop
rol
bound
inc
pop
adc
cmps
or
jmp
mov
jp
imul
mov
dec
ins
xchg
int
retf
and
xchg
aad
hlt
nop
or
(bad)
xlat
push
jp
jl
cmp
jp
fdiv
sbb
xor
jecxz
into
daa
pop
inc
pop
sar
inc
or
jp
jns
fst
add
sbb
mov
mov
cld
mov
test
int
xor
outs
or
xchg
lock
ins
or
fdivr
mov
stos
shl
and
mov
jno
pop
ins
popf
xchg
adc
rol
js
add
test
mov
ins
into
(bad)
bound
ja
lock
mov
and
out
out
mov
mov
fsub
cmps
(bad)
jle
movs
cmp
and
mov
leave
xor
jb
inc
mov
lds
adc
and
sub
pop
and
xor
lods
push
inc
mov
stc
fsubrp
sbb
cmp
gs
push
add
lods
add
pop
mov
inc
or
cmp
add
adc
scas
leave
sub
cmp
pop
xchg
cmp
push
and
outs
js
stc
loope
add
out
sti
aad
fcomp
add
jge
and
mov
repz
sahf
dec
jne
dec
add
adc
leave
sti
cmc
adc
and
dec
cs
mov
mov
jle
pop
push
inc
or
cs
ret
ret
mov
mov
dec
dec
mov
mov
mov
out
repz
mov
mov
sbb
cwde
mov
je
call
push
stc
iret
in
pop
rcl
sub
xor
jne
sbb
sbb
cmp
aaa
pop
jb
sbb
fild
mov
andnps
and
ja
fld
neg
(bad)
xchg
imul
enter
sub
scas
lods
rcr
xchg
scas
(bad)
out
xlat
shl
add
aas
or
shl
mov
and
dec
das
xchg
adc
movs
mov
retf
lock
sbb
(bad)
mov
dec
retf
into
fs
aam
inc
mov
dec
inc
jbe
and
test
leave
jl
cld
jecxz
jbe
out
or
ja
std
cmp
push
push
adc
hlt
mov
sbb
js
dec
mov
bound
and
ror
imul
in
xor
cmp
cmc
outs
mov
mov
sahf
retf
xchg
adc
dec
cmp
lahf
call
enter
retf
ror
dec
movs
(bad)
aam
add
std
daa
scas
jg
les
mov
sub
(bad)
shr
sbb
aam
dec
lds
aad
cmps
or
or
mov
hlt
cdq
xchg
scas
ret
outs
mov
sub
mov
jle
pop
(bad)
ins
test
xchg
(bad)
sbb
aaa
mov
lods
pop
jle
shl
push
cdq
sti
cli
sub
sbb
push
or
sub
adc
out
xchg
call
pusha
in
out
push
cmp
repz
and
mov
ins
pop
(bad)
div
imul
sub
push
repnz
sub
push
push
and
sub
mov
popa
jns
push
ja
loope
popf
retf
jns
add
(bad)
push
test
xchg
hlt
iret
push
pusha
ins
enter
stc
and
push
int3
(bad)
adc
push
cmp
mov
aaa
jge
cmp
outs
ins
push
jp
frstor
inc
loopne
dec
pop
fwait
mov
mov
sub
cdq
adc
loop
int
jnp
push
sbb
cmp
call
shl
cmp
mov
sbb
int3
int
in
sar
lods
mov
or
jecxz
xchg
mov
and
or
out
push
aam
movs
fstp
nop
cmc
lahf
mov
in
inc
mov
lods
mov
jle
add
out
mov
test
dec
call
clc
sahf
or
jl
inc
mov
(bad)
shl
clc
push
dec
stc
addr16
mov
and
sbb
pop
aas
or
add
adc
adc
push
pop
xor
movs
call
ins
ds
adc
(bad)
mov
jnp
cmp
in
out
int3
or
hlt
mov
shr
jbe
arpl
push
xchg
and
and
fisttp
mov
or
pop
aaa
and
cmp
in
push
lods
xchg
inc
test
test
pop
dec
call
dec
imul
cld
or
sub
sub
ret
stos
bnd
and
movs
int3
es
push
cli
fcomp
pop
enter
sbb
mov
dec
ret
das
lods
nop
jb
jne
or
cmp
fs
call
dec
or
je
adc
adc
in
and
out
frstor
push
int
out
cmp
mov
out
retf
and
dec
push
push
bound
adc
sub
inc
push
jge
pop
loopne
xchg
inc
sbb
test
lds
dec
add
cmp
cs
dec
mov
jo
jp
mov
jp
popf
inc
dec
ss
bswap
or
dec
not
mov
sbb
jg
cmp
mov
scas
or
push
idiv
les
adc
out
xchg
int
pop
cmc
(bad)
dec
sub
fwait
inc
xchg
mov
ds
sub
xor
xor
imul
xor
out
or
sbb
adc
retf
fist
(bad)
push
fimul
pop
out
movs
out
jle
push
xor
mov
fbld
and
ret
iret
add
xor
and
pop
pushf
sar
fisubr
aam
jmp
imul
idiv
push
dec
mov
std
or
in
push
or
bound
or
jp
dec
shl
cmp
sub
mov
push
jg
mov
mov
rol
cmps
xor
(bad)
lods
aam
mov
xchg
jmp
(bad)
mov
inc
adc
mov
push
xchg
push
retf
mov
mov
test
jae
stc
push
sub
stos
xchg
mov
jo
push
jno
push
push
pop
dec
push
pop
not
and
out
lods
repnz
retf
arpl
shl
mov
add
pop
cmps
(bad)
leave
sub
aas
mov
out
lahf
or
inc
jbe
out
clc
repnz
aad
pop
int3
sub
adc
mov
lock
dec
dec
add
std
imul
or
leave
sub
loop
xor
mov
aas
ret
shl
iret
sub
lods
inc
adc
outs
in
mov
repnz
and
inc
sti
fbstp
mov
icebp
sub
aaa
and
pushf
jno
inc
mov
cdq
inc
icebp
mov
(bad)
mov
and
rcl
xchg
repz
into
jo
mov
aaa
outs
jns
(bad)
hlt
aas
xchg
pop
jg
xchg
xor
in
aaa
in
sub
xor
dec
aad
push
jmp
pusha
adc
xchg
jle
push
sahf
lods
retf
outs
jp
in
pop
mov
and
jno
je
push
pop
mov
jg
mov
adc
cmp
mov
imul
mov
fisttp
sbb
xor
adc
data16
or
push
sbb
outs
fwait
test
push
mov
cmc
push
outs
inc
sbb
test
add
pop
test
pop
out
test
jb
scas
in
iret
nop
pushf
outs
(bad)
sub
js
mov
test
sets
xor
(bad)
pop
fbstp
xchg
xchg
inc
mov
dec
addr16
arpl
jb
stos
out
(bad)
sahf
dec
call
jnp
dec
jmp
push
sbb
cmp
and
adc
pop
sbb
xchg
into
movs
cmp
imul
enter
sahf
jmp
xchg
div
cmps
stc
shl
xor
das
pushf
dec
push
xchg
dec
mov
jo
mov
pop
adc
sahf
adc
outs
mov
dec
les
out
dec
mov
lds
pop
sub
jb
xchg
call
jmp
push
or
jne
xchg
pusha
mov
ret
add
lds
neg
dec
(bad)
jbe
and
push
pushf
sbb
xchg
(bad)
jo
fidivr
push
fs
jbe
inc
fnsave
js
dec
lock
loope
inc
mov
cmp
dec
sbb
jmp
push
aam
jecxz
test
push
fwait
mov
pop
jns
mov
aam
sbb
cwde
or
mov
leave
jl
inc
push
popf
ins
je
enter
call
xor
popf
sub
not
fidiv
into
pop
jp
fxtract
outs
out
mul
add
test
push
stos
repz
repnz
mov
(bad)
(bad)
aas
call
repz
outs
jo
pop
fbld
mov
gs
adc
(bad)
sub
push
dec
data16
xor
inc
scas
cli
and
ret
or
aaa
jo
jle
out
mov
aas
xchg
in
cwde
push
or
xchg
out
test
lods
sub
fadd
mov
jle
sbb
mov
mov
lock
sbb
adc
jno
je
sbb
sbb
mov
add
push
ror
fistp
lods
loop
pop
adc
or
fadd
cmps
jmp
and
mov
pop
sbb
cmp
in
fucomip
into
outs
arpl
cmps
cmp
adc
push
fisub
ror
mov
xor
arpl
in
call
xchg
pop
scas
push
dec
fsub
call
fld
mov
mov
packssdw
leave
das
(bad)
mov
xor
jo
js
xor
mov
retf
dec
(bad)
push
fst
mov
call
jbe
sub
and
dec
xor
scas
sbb
add
mov
arpl
rcl
sbb
push
mov
imul
mov
repz
xor
mov
cmp
out
fcom
or
push
add
pop
bound
add
sub
ret
lods
jecxz
cmps
icebp
call
pop
fpatan
jmp
inc
in
adc
aaa
mov
retf
jecxz
cmp
int
dec
xor
or
jle
call
gs
(bad)
lea
outs
mov
push
push
cdq
sbb
test
cld
mov
sub
and
stos
mov
pusha
mov
(bad)
lds
hlt
paddsb
sti
push
push
jb
sub
xchg
mov
stos
or
rsm
inc
stos
or
pop
frstor
push
add
push
test
(bad)
mov
push
mov
mov
lds
enter
shl
ins
cmc
daa
sub
call
fcomp
shr
fs
std
jnp
mov
nop
add
dec
(bad)
cli
push
inc
jg
gs
inc
dec
mov
sbb
popf
mov
shl
xchg
mov
mov
push
imul
sub
lahf
cmps
dec
mov
lds
adc
xor
sysret
mov
lea
(bad)
or
sub
addr16
test
out
mov
or
xor
inc
aam
mov
ds
lods
scas
mov
je
mov
imul
cdq
out
les
pop
mov
inc
sub
dec
movnti
stc
rol
xchg
int
sbb
in
sub
xor
push
call
ja
pushf
mov
cmp
sub
inc
in
mov
mov
inc
xchg
and
add
push
mov
xchg
cmp
dec
add
lods
sbb
jnp
push
neg
mov
popa
jge
jo
jbe
cmp
outs
cdq
sbb
imul
ror
dec
jnp
nop
push
or
mov
ss
sbb
jecxz
jne
pop
or
arpl
cs
fisttp
xchg
out
xor
(bad)
loope
fwait
ret
or
aad
nop
push
popf
inc
cmp
push
mov
imul
adc
dec
push
sbb
pop
cmps
or
and
xchg
mov
dec
cmp
mov
sub
and
scas
scas
xor
fisttp
(bad)
jmp
hlt
bound
(bad)
pop
pop
fst
sub
das
js
xor
xchg
inc
cvtps2pi
int
or
adc
pop
adc
push
icebp
pop
push
sub
pop
adc
pop
ret
fst
lods
rcl
jb
hlt
(bad)
scas
out
aam
push
sub
or
out
sub
xor
movs
mov
adc
gs
xchg
or
add
push
test
rcl
mov
jle
jl
imul
fsub
ins
pop
push
xchg
scas
cmp
int3
call
les
jae
jecxz
adc
push
push
or
and
push
mov
add
mov
pmullw
xchg
add
retf
lods
cmp
stc
cdq
jne
lods
int3
sbb
dec
repnz
push
fistp
sti
mov
lahf
repz
mov
pop
int
add
add
leave
out
lock
sahf
sub
dec
and
fimul
pop
movs
fs
mov
add
cs
or
les
lods
jno
sahf
enter
jl
test
pop
pop
dec
add
popf
xchg
push
daa
cmp
mov
mov
or
ins
enter
sbb
cld
jb
xor
mov
sbb
je
out
xchg
cmps
xchg
dec
xchg
das
test
pop
jno
xchg
ror
and
xor
in
xchg
call
add
sahf
imul
hlt
sahf
pop
sbb
stos
into
jb
mov
stos
cli
imul
fild
enter
inc
test
jns
jno
jae
in
inc
or
mov
add
pop
jo
mov
idiv
xchg
add
fst
cmps
sub
sbb
mov
ret
daa
cmp
pop
pop
jb
add
mov
push
js
fld
repz
add
outs
jae
movs
cmp
js
inc
mov
mov
shr
fidivr
arpl
push
lock
and
jnp
pop
xor
sub
push
adc
inc
and
rol
mov
mov
out
bound
xor
les
sbb
or
daa
or
mov
outs
sbb
scas
cdq
fisub
inc
js
fwait
cmp
adc
movs
fistp
sti
(bad)
sbb
mov
aaa
loope
es
je
sub
mov
aas
xchg
into
mov
mov
frstor
pop
je
sbb
movs
not
jo
mov
imul
ins
iret
pop
xlat
jno
sub
sub
xor
out
pop
(bad)
pop
popf
ds
dec
push
mov
cmp
cwde
add
mov
xor
xchg
add
mov
mov
mov
pop
scas
(bad)
out
and
mov
loopne
in
jo
imul
xchg
loope
out
dec
inc
(bad)
stos
fwait
inc
push
cdq
xor
and
fcomp
sub
test
jmp
pop
in
pop
test
mov
jmp
inc
sub
inc
jmp
test
data16
cmps
dec
lods
xchg
out
mov
xchg
imul
sbb
leave
dec
pop
shr
mov
mul
push
sbb
outs
xor
das
mov
push
xor
push
mov
pop
inc
and
jmp
pop
mov
lods
int
pushf
jbe
xchg
(bad)
jo
mov
jnp
cmp
sahf
mov
call
bound
jae
push
fcomp
in
sub
xchg
xchg
imul
push
adc
ret
dec
and
xchg
add
lea
popa
xchg
jno
inc
or
addr16
dec
push
and
sbb
sub
cmp
ficomp
imul
gs
(bad)
in
(bad)
xchg
push
data16
ss
xchg
lock
dec
outs
push
rcr
scas
js
jp
hlt
dec
push
and
sub
stos
xor
sub
std
cwde
inc
cmp
or
and
jmp
sbb
and
jne
and
or
test
aam
lods
sub
jns
inc
jo
jbe
stos
inc
jnp
rcr
je
fwait
mov
pop
test
or
jl
push
sub
dec
cmp
and
lods
xchg
push
inc
and
or
jb
lock
mov
dec
push
shl
mov
ins
jle
sub
or
or
enter
sub
xor
jge
aas
(bad)
xor
les
cmp
std
sbb
pop
(bad)
pushf
sbb
mul
xchg
cmp
ja
cdq
enter
mov
and
jle
adc
inc
cmp
jb
scas
hlt
outs
shl
cmp
sbb
fmul
mov
and
call
mov
data16
jp
and
(bad)
out
and
mov
mov
xlat
int
aad
pop
pop
adc
in
ret
dec
jmp
xchg
add
fidivr
xor
push
(bad)
popf
cmp
inc
sahf
ss
sahf
fcomp
adc
test
rcl
nop
push
dec
or
cld
vmread
push
inc
pop
in
aaa
shl
addr16
test
sahf
jo
retf
add
adc
push
pop
mov
and
imul
imul
push
cmc
inc
mov
adc
inc
clc
aaa
adc
rol
iret
mov
retf
mov
and
stc
sti
cmps
shr
stos
arpl
in
imul
cs
cmp
xor
(bad)
sbb
cmc
inc
je
cmp
push
test
cld
xor
leave
jmp
fild
sub
les
sub
pop
aas
jmp
push
loope
in
clc
mov
in
mov
loopne
xor
popa
jmp
adc
es
mul
pop
dec
cmp
xor
dec
sub
cmp
jnp
ror
push
xor
jp
xchg
lods
adc
jno
fild
int3
adc
dec
test
js
pop
lods
jmp
fs
out
add
push
iret
mov
out
stc
repz
inc
jg
adc
xor
lods
cli
jp
pop
adc
div
mov
xor
scas
clc
sti
scas
call
lods
movs
ds
inc
add
jle
ss
shr
ret
mov
dec
mov
nop
push
test
daa
stos
arpl
push
cmps
rcr
int
and
das
and
scas
cmp
fucomi
test
sub
add
sub
int
xlat
(bad)
xor
loope
pop
push
scas
std
push
mov
test
push
push
cmp
cs
push
stos
fdivr
xchg
int
cld
sbb
sub
lock
and
cmp
ins
mov
sbb
dec
pop
jmp
(bad)
les
push
and
or
aad
inc
gs
jle
pop
jo
adc
sbb
push
addr16
jecxz
and
mov
add
xor
int
cmp
das
sub
sub
repz
jo
sbb
or
push
adc
test
(bad)
out
xchg
mov
sbb
jmp
push
retf
and
push
bound
jp
or
pop
inc
je
adc
mov
push
mov
dec
cmc
jno
(bad)
dec
in
or
pop
pop
xchg
pop
dec
imul
mov
jmp
sbb
mov
add
and
mov
jbe
ds
fst
stos
add
call
xor
imul
aad
les
test
dec
mov
sbb
push
in
call
stos
mov
mov
test
xor
mov
add
inc
movs
push
outs
mov
(bad)
cmp
loop
int
movs
sbb
popa
pop
sahf
adc
xchg
inc
(bad)
daa
push
sbb
mov
xchg
loop
pop
mov
push
jg
lock
sub
retf
xor
daa
and
jbe
add
into
cli
std
js
loopne
push
clc
mov
or
gs
xor
push
push
push
sbb
inc
sub
lods
jp
sub
xlat
dec
gs
or
idiv
push
pop
xor
das
jle
js
pop
std
clc
mov
into
or
xor
xor
push
arpl
mov
push
adc
mov
sbb
jnp
enter
push
int3
and
pusha
dec
push
stc
lahf
test
ror
mov
call
lods
jecxz
or
xor
fs
push
call
loop
mov
xchg
xor
mov
(bad)
jo
xor
int
xchg
jne
fcom
jmp
sbb
cmc
lods
scas
sahf
xor
enter
inc
inc
xchg
xchg
fadd
adc
mov
sub
icebp
cmps
(bad)
aaa
in
lahf
and
pop
mov
dec
test
ret
(bad)
(bad)
movs
cmp
inc
jo
cmp
inc
sub
mov
xor
pop
and
xor
js
mov
pop
arpl
jb
or
sbb
lea
arpl
rcl
jno
aas
clc
add
out
cwde
sbb
daa
mov
jle
push
test
xchg
cmps
push
mov
adc
jg
dec
hlt
mov
push
lahf
(bad)
scas
movs
jp
jmp
stos
loop
push
jle
add
pop
ror
rcl
push
adc
stos
or
fild
(bad)
xchg
xchg
push
daa
scas
xchg
fidivr
cwde
sub
fstp
push
sbb
ss
sub
test
inc
loopne
stc
pusha
add
jb
fxch
mov
lea
shr
or
in
popf
ficom
out
in
ss
push
jbe
fwait
mov
sti
jno
int
pop
lods
psadbw
leave
ins
add
cmp
test
cmc
arpl
into
out
ins
popf
loopne
mov
pop
lds
sub
inc
mov
xchg
clc
push
arpl
les
add
mov
lock
rcr
out
pop
shr
shl
aad
repz
or
std
setns
test
mov
xlat
dec
dec
jno
pop
aam
cmp
enter
pop
push
and
dec
mov
je
retf
cmp
add
cmps
mov
ret
int
jo
outs
(bad)
cmc
out
ss
fdivr
jmp
push
cmp
and
into
ins
dec
pop
call
mov
shl
dec
jecxz
mov
fdiv
sub
push
or
cmp
inc
or
out
push
push
mov
test
(bad)
pusha
int3
enter
dec
(bad)
cmp
cmp
shr
pop
ret
data16
jle
sti
xchg
scas
xor
pop
pop
dec
pop
ins
dec
imul
sub
cmps
jle
xchg
lods
or
xor
mov
dec
aaa
jae
out
inc
(bad)
jmp
pop
(bad)
xor
dec
cmp
sbb
dec
fstp
mov
dec
bound
add
xor
sub
and
fimul
pop
es
loop
(bad)
xchg
inc
pushf
jge
xlat
rol
xor
(bad)
mov
or
jb
hlt
scas
mov
xor
mov
push
rol
xor
ss
and
pop
or
scas
push
imul
pushw
xchg
(bad)
aad
rol
ins
pushf
leave
enter
jge
jnp
push
mov
xchg
cmp
fisttp
pushf
adc
iret
out
movs
sbb
dec
movs
pop
leave
inc
xchg
ins
sbb
or
pop
and
cwde
dec
shr
imul
push
pop
push
mov
push
cmp
and
mov
rcr
push
mov
ret
push
mov
out
sub
stos
adc
hlt
leave
(bad)
sbb
retf
ret
stos
push
adc
push
pop
jg
mov
sti
ins
ret
dec
fs
fs
mov
mov
pop
add
ret
shl
ret
and
jo
adc
movs
out
(bad)
into
imul
dec
cmps
cmp
jo
arpl
mov
ds
push
(bad)
fcom
fidivr
enter
(bad)
ret
cmps
dec
aaa
adc
mov
cmp
(bad)
loopne
jne
pop
xchg
sbb
clc
(bad)
std
add
loope
lahf
adc
dec
imul
lahf
inc
js
cmp
dec
mov
sbb
(bad)
das
shl
jns
ret
js
dec
sbb
xlat
jne
int3
adc
mov
add
loop
fbld
push
loope
(bad)
mov
mov
sbb
pop
pop
inc
sbb
cmp
int
sti
outs
pop
cmp
mov
das
jle
cmps
mov
sahf
push
data16
fstp
dec
push
xchg
sub
sub
lea
addr16
mov
sub
popf
adc
or
mov
rcr
xchg
mov
icebp
xchg
mov
jg
mov
imul
(bad)
or
inc
jae
mov
sub
cmps
dec
rcl
inc
inc
imul
test
xor
and
shl
test
lea
leave
lar
rcl
(bad)
jmp
lahf
jmp
lods
ds
gs
mov
enter
mov
scas
add
dec
inc
push
fld
loop
dec
leave
add
ins
ret
fidiv
pop
loop
in
sbb
or
jne
dec
scas
push
mov
cmp
inc
cdq
js
out
pop
call
or
ficomp
pop
add
jp
lods
je
inc
xor
and
mov
rol
xor
dec
(bad)
std
int
cmp
or
or
mov
adc
in
jmp
xor
push
adc
jns
pop
adc
cli
xor
sbb
pop
jmp
or
mov
and
jae
pop
enter
jne
cmps
cmp
loop
icebp
in
div
jae
mov
jbe
(bad)
pusha
fsub
adc
sbb
push
and
push
dec
pop
cmp
in
out
ins
add
lea
inc
movs
ins
inc
sbb
mov
sbb
fld
push
mov
adc
test
call
cwde
call
adc
fmul
out
jno
cld
sub
cmp
nop
cmps
in
shl
mov
cmp
adc
dec
xchg
adc
stc
(bad)
jo
push
add
cmp
loope
leave
xor
in
shl
push
(bad)
cld
js
jbe
ins
fwait
push
jecxz
pusha
and
cmp
(bad)
mov
or
je
call
mov
loopne
(bad)
xchg
fwait
mov
repnz
dec
ds
sub
adc
cmp
cmps
fiadd
sbb
ds
mov
xchg
mov
mov
jb
icebp
in
pushf
sub
jecxz
(bad)
stos
cmps
and
jbe
mov
mov
jl
cdq
push
in
fwait
(bad)
aaa
cmc
or
bound
js
mov
xchg
inc
lahf
sbb
cmps
pushf
push
pop
(bad)
rcr
ins
mov
fs
cs
ret
scas
mov
ins
cs
jecxz
sub
lds
ret
mov
mov
dec
push
jge
inc
inc
xlat
ret
fist
mov
out
loope
pop
inc
adc
fcom
and
cmps
dec
pop
jl
xchg
aad
sti
adc
lods
pop
dec
movs
pop
nop
and
nop
dec
daa
mov
popa
mov
cdq
jle
div
retf
aas
xor
mov
in
fldl2e
sub
or
in
mov
dec
ret
or
rcr
(bad)
xchg
mov
add
mov
(bad)
ins
sbb
mov
icebp
enter
and
fimul
inc
sub
mov
mov
and
test
jg
std
push
movs
rol
dec
mov
ss
sub
icebp
mov
lds
adc
mov
bndldx
(bad)
dec
mov
retf
xchg
jmp
fcomi
xor
mov
pop
(bad)
jle
cdq
ins
je
pop
sub
dec
fwait
test
fisub
cmp
jae
mov
cmp
shl
es
push
(bad)
sbb
out
rcr
adc
aam
dec
outs
movs
push
jp
xor
scas
mov
dec
sub
popf
inc
das
xchg
pop
pop
mov
retf
jp
outs
imul
fcmovnbe
mov
imul
pusha
xchg
push
int3
ins
or
test
cmp
clc
test
fwait
daa
cdq
jnp
cmps
in
push
std
(bad)
loope
fst
add
leave
inc
sbb
cmp
stos
jmp
sbb
test
inc
aad
mov
mov
mov
fwait
sub
lea
dec
rol
(bad)
sbb
pop
fdivrp
and
jb
sbb
cs
sub
pop
(bad)
cwde
idiv
adc
jmp
ins
jbe
push
arpl
movs
push
aas
das
xchg
(bad)
sbb
(bad)
xor
jo
xor
iret
es
mov
inc
stos
pop
xlat
xor
loopne
or
add
ror
icebp
add
sbb
mov
jnp
popa
mov
jae
jge
stos
cdq
nop
fdivr
sbb
mov
inc
mov
test
(bad)
sbb
retf
je
push
pop
and
pop
fiadd
clc
inc
jnp
sahf
jno
call
pop
icebp
(bad)
call
cdq
add
imul
dec
les
bound
sbb
xchg
and
fwait
jecxz
mov
cmp
cmp
xchg
mov
lea
rcr
inc
jo
xor
and
mov
lods
call
inc
add
xchg
jmp
fwait
pop
into
sub
xchg
dec
test
dec
out
in
jnp
jnp
sbb
or
push
pushf
sti
in
aaa
adc
outs
inc
fwait
das
pop
fcmovb
arpl
jge
icebp
jo
dec
jo
mov
lods
inc
les
or
cmp
xlat
ror
shr
stos
ret
in
xlat
mov
popa
sub
mov
mov
mov
cdq
dec
cs
jg
jmp
neg
loopne
and
add
dec
std
pop
sbb
(bad)
pmaxub
mov
sbb
push
pop
push
sbb
scas
call
mov
xor
shl
ins
mov
xor
jl
(bad)
test
lock
(bad)
sahf
mov
div
and
pop
push
mov
icebp
pop
pop
jecxz
stos
and
adc
shl
in
mov
xlat
(bad)
dec
stc
test
test
(bad)
sti
or
retf
leave
shr
ret
mov
mov
add
mov
and
mov
cli
lods
ins
repz
or
mov
dec
shl
jne
pushf
shl
hlt
adc
add
scas
hlt
test
push
clc
loope
test
mov
inc
inc
mov
inc
rcr
iret
(bad)
pusha
mov
aad
push
sub
dec
frstor
jbe
jbe
push
(bad)
les
mov
out
add
int3
test
xchg
gs
sub
icebp
mov
cmp
fld
sbb
adc
push
cwde
pop
adc
xchg
jmp
enter
sbb
loope
call
test
and
fwait
pop
pop
int
add
jno
sub
dec
jge
bound
fidiv
cwde
inc
cwde
dec
add
shr
rol
aad
fisub
cli
call
sbb
jne
jmp
cmps
bound
inc
adc
in
xor
inc
lods
mov
xchg
out
loope
ins
(bad)
loope
repnz
loopne
lea
add
add
dec
stc
sub
es
repnz
lock
or
aas
retf
adc
out
jne
in
pop
shl
adc
and
mov
jg
and
inc
xor
hlt
daa
mov
sbb
add
test
mov
adc
frstor
in
out
retf
int
mov
test
dec
cmp
rcr
(bad)
jecxz
sti
cmp
out
dec
leave
ins
jae
mov
and
sub
test
xor
xor
jge
sub
dec
push
pop
jl
xchg
cwde
cmp
mov
jb
add
jne
mov
rcl
lahf
sti
fstp
ds
mov
or
pop
neg
add
or
push
adc
ret
push
jns
js
inc
(bad)
cmps
adc
aas
inc
pop
push
mov
adc
xrelease
xchg
sar
out
addr16
inc
sub
jecxz
(bad)
icebp
jmp
sub
mov
mov
aaa
jmp
sub
les
jmp
sub
ret
into
lock
cmc
xchg
pop
adc
lock
mov
mov
jecxz
pop
or
jle
movs
out
repnz
xor
sbb
and
mov
dec
fistp
jge
xchg
xlat
daa
jnp
add
hlt
out
adc
dec
lods
jae
fcmovbe
push
imul
daa
or
gs
mov
ins
pushf
imul
call
push
push
out
or
add
icebp
mov
fistp
pop
cs
push
pop
cmp
xor
pop
xchg
(bad)
retf
push
inc
inc
cli
sub
icebp
out
in
outs
ror
push
leave
xchg
adc
fdiv
mov
in
call
mov
dec
dec
mov
mov
mov
ins
push
je
cs
add
add
test
pop
(bad)
dec
std
or
imul
stos
dec
aas
scas
dec
cmp
mov
(bad)
js
fist
out
int3
mov
jl
mov
or
test
gs
leave
jne
imul
out
sbb
aam
or
jge
add
ins
pop
les
pop
inc
jmp
cmps
inc
dec
cdq
sbb
xchg
ins
int
loope
pop
sbb
outs
and
xor
jbe
repz
push
fild
pop
xor
push
std
(bad)
daa
dec
jecxz
popa
das
xchg
mov
pop
(bad)
mov
mov
pop
fstp
or
es
pop
and
(bad)
lahf
mov
(bad)
aaa
loopne
mov
add
imul
xchg
les
push
push
sub
mov
fcom
jecxz
dec
es
repnz
rcl
mov
gs
xchg
add
and
icebp
add
inc
pop
aam
sti
mov
(bad)
dec
xchg
into
pusha
sub
ss
mov
jne
ror
sbb
mov
xchg
call
fidivr
add
loopne
scas
sub
xor
sub
and
les
mov
adc
adc
iret
sbb
dec
xchg
out
lahf
mov
imul
cld
(bad)
jae
inc
cs
shl
push
xor
cmp
and
and
mov
ins
dec
lock
retf
cmp
bound
sub
enter
cmps
ja
int
shl
adc
mov
fs
push
pop
pop
cmp
arpl
xchg
dec
inc
jmp
push
nop
into
clc
mov
or
sub
shl
aas
pop
enter
cmc
xor
mov
mov
cmp
jecxz
pop
mov
push
pop
mov
add
sub
cmp
xor
adc
ins
sbb
cmps
add
push
jnp
and
std
int3
or
ds
lds
mov
bound
or
jmp
fiadd
adc
(bad)
(bad)
cmp
push
stos
xor
outs
pusha
add
in
and
mov
add
mov
movs
imul
jge
xor
xchg
(bad)
dec
stos
add
sub
xor
test
push
out
aam
out
sbb
xchg
stos
ins
cmp
icebp
cmc
mov
xlat
movs
jmp
mov
imul
xlat
xchg
cmps
xchg
into
xchg
call
mov
mov
dec
cld
test
jo
mov
outs
fld
fucomip
movs
xor
add
or
mov
jge
cli
push
xchg
push
sbb
adc
add
stos
stc
repnz
in
je
sbb
or
outs
stos
mov
in
jg
add
sti
jg
and
loope
retf
cs
stc
push
stos
movs
fwait
outs
jne
fxch
mov
adc
and
xor
xchg
xchg
sub
lds
adc
jp
out
aaa
sbb
jecxz
push
and
pushf
sub
push
pop
dec
js
adc
dec
jmp
inc
lds
fs
loopne
sub
clc
nop
inc
mov
aaa
jl
test
outs
imul
gs
aaa
xchg
scas
sub
fdivr
pop
out
mov
or
jnp
inc
push
cmp
lods
add
xor
add
mov
iret
jbe
cmp
sbb
jns
sub
push
repnz
push
lock
cdq
and
cmps
mov
xchg
retf
push
pop
or
gs
fs
mov
and
inc
je
xchg
pop
mov
and
(bad)
adc
mov
test
popf
jno
jmp
sub
mov
xchg
mov
retf
xor
push
js
stos
test
jae
cmp
adc
xchg
pop
scas
pmulhw
mov
push
add
sub
mov
jo
loope
push
xchg
cmp
in
xor
test
sbb
icebp
sub
in
mov
pop
or
in
in
push
stos
xor
loope
mov
mov
out
test
mov
xchg
stos
mov
inc
push
cmps
std
xor
aas
xor
hlt
mov
ror
daa
inc
jmp
fwait
lock
cmp
dec
and
icebp
ja
push
add
sbb
adc
sbb
and
xchg
cli
mov
pop
inc
xchg
pop
stos
clc
(bad)
sti
fucomp
mov
ficom
in
ficomp
lods
dec
data16
mov
int3
mov
rcl
sub
jb
xchg
bound
mov
xchg
jecxz
add
leave
aaa
nop
retf
inc
inc
imul
mov
xor
movs
jnp
outs
jne
jmp
fs
mov
dec
jl
sub
(bad)
sub
push
mov
std
push
fcmovu
fiadd
retf
ss
add
adc
mov
mov
cmp
retf
mov
push
jmp
enter
loope
clc
mov
mov
inc
ss
jmp
xchg
bound
dec
dec
or
rcl
shr
ret
xchg
call
(bad)
mov
push
mov
pushf
stc
add
xor
and
cmp
shl
mov
or
loop
(bad)
mov
cmc
aaa
dec
adc
outs
cwde
iret
jecxz
inc
daa
call
add
int3
or
fadd
addr16
sub
(bad)
pop
stc
cmp
fdiv
repnz
cs
inc
mov
jne
test
push
icebp
push
les
sbb
pop
push
(bad)
icebp
xor
popa
xchg
lods
mov
ror
adc
add
dec
stc
icebp
jg
aam
cmp
push
in
pop
dec
push
rol
pop
xor
sub
(bad)
lods
out
jmp
mov
(bad)
(bad)
in
cmps
retf
js
rcr
adc
in
mov
push
lahf
cdq
outs
ins
push
mov
sub
scas
movs
inc
dec
adc
sahf
les
inc
es
pop
iret
mov
enter
and
cs
xor
icebp
pop
(bad)
mov
cs
inc
jge
cs
in
pusha
sbb
mov
mov
dec
fcomp
add
std
ret
sub
movs
pop
in
movs
(bad)
push
add
xchg
pop
pop
loopne
into
or
jmp
jmp
adc
jbe
cmp
daa
leave
cmp
hlt
shr
cmp
out
cmp
dec
inc
dec
ja
mov
xchg
mov
popa
aas
inc
jmp
outs
pop
mov
lods
adc
jmp
fldenv
fadd
rcr
pop
pop
add
iret
push
xor
sbb
sbb
sar
add
or
mov
clc
fisttp
inc
sub
lock
mov
popf
dec
add
rcl
jmp
push
pushf
pop
mov
arpl
pop
cmc
dec
push
ficomp
les
in
add
xchg
pop
daa
inc
cmps
pop
xlat
cld
cmc
(bad)
sbb
imul
mov
jmp
into
xchg
and
outs
je
sub
ins
inc
jl
inc
jae
sti
aas
xor
sub
cmp
jo
mov
pop
enterw
cmp
cld
add
dec
imul
add
xlat
fidiv
shr
and
popa
ins
or
mov
in
std
int3
jnp
xlat
pop
mov
or
xor
mov
xchg
fs
mov
in
inc
leave
mov
ins
(bad)
xor
jae
xlat
cmp
jg
sbb
pop
arpl
es
fnstenv
nop
hlt
push
dec
out
mov
pop
dec
fisubr
pop
call
cs
mov
mov
iret
and
es
xchg
test
adc
push
push
mov
cmp
sub
mov
xchg
and
cmps
retf
mov
data16
lea
dec
fcom
adc
(bad)
jp
adc
call
mov
and
and
repnz
push
lods
jns
popa
fisubr
int
scas
xor
sbb
repnz
fcmovnb
sbb
out
inc
sub
sbb
pop
test
fcmovu
xchg
data16
cmp
push
pop
not
dec
dec
movs
or
push
aam
out
and
aam
(bad)
cld
xchg
ins
add
xchg
hlt
in
jp
sbb
sub
scas
outs
or
cmps
mov
in
aas
movs
stos
dec
ja
xchg
repz
cdq
pop
in
(bad)
mov
xlat
or
fild
add
sahf
push
xchg
xor
pop
cld
xor
dec
push
in
fsubr
inc
xchg
test
in
add
mov
mov
movs
popa
sahf
neg
js
inc
arpl
mov
inc
cdq
pop
out
enter
ss
pop
and
out
aas
cmp
retf
aas
or
pop
fsub
imul
xchg
push
hlt
sbb
test
(bad)
clc
mov
push
cmps
movs
fsub
or
ror
ds
adc
mov
or
test
lock
and
jl
push
sahf
jns
ja
in
push
inc
fldenv
movs
ret
jmp
sbb
mov
fistp
adc
(bad)
mov
mov
xchg
cdq
inc
sbb
retf
jbe
popa
aad
xor
rol
(bad)
and
or
xchg
pop
(bad)
popf
movs
das
pop
adc
jo
(bad)
call
daa
pop
xor
cmp
dec
push
lods
sbb
movs
adc
fdiv
loopne
shl
sub
outs
add
adc
push
not
push
daa
adc
sbb
call
jns
xchg
adc
ja
imul
fisttp
fstp
inc
ror
adc
daa
mov
sbb
mov
data16
rcr
neg
out
aam
adc
jne
cwde
enter
mov
stc
xor
sub
pop
mov
pop
and
adc
mov
clc
dec
pop
lds
call
ja
frstor
adc
loopne
in
(bad)
fcomi
inc
movs
sbb
fwait
and
hlt
pop
mov
sub
jmp
jmp
scas
sub
cli
int
xor
addr16
jecxz
popf
mov
xchg
int3
cld
xchg
test
and
adc
(bad)
jecxz
jns
fwait
popf
jge
shl
pop
jb
mov
push
sar
jmp
out
cwd
cmp
cs
mov
nop
in
push
std
cwde
mov
daa
push
inc
(bad)
icebp
xchg
sbb
cmp
cld
movs
(bad)
sbb
adc
xchg
cmp
or
dec
cmp
es
movs
scas
cmp
mov
(bad)
(bad)
push
adc
(bad)
sbb
das
(bad)
in
enter
imul
and
icebp
lock
(bad)
shl
in
add
rol
and
add
mov
sbb
sbb
push
imul
mov
mov
stos
in
scas
pushf
frstor
(bad)
lds
mov
push
mov
stc
and
arpl
ins
frstor
or
push
inc
xor
mov
ins
call
jne
(bad)
jge
jg
push
je
bound
es
jl
test
and
rdmsr
or
out
aaa
cmp
sbb
push
(bad)
dec
inc
cmp
in
xchg
mov
adc
ins
loopne
sub
dec
lds
rcr
bound
je
fcomp
xchg
adc
and
lods
adc
jb
cmp
aaa
pop
(bad)
jle
and
or
nop
mov
fwait
leave
ins
mov
iret
pop
imul
sub
call
sbb
pop
lods
shl
(bad)
call
jne
sahf
movq
inc
dec
mov
int
xor
test
repz
xor
or
xchg
sub
inc
mov
rcr
mov
leave
dec
loope
dec
add
dec
add
(bad)
jb
inc
fs
or
ja
call
xchg
stc
mov
stos
call
xchg
and
push
pop
xor
lods
sbb
push
push
xchg
sub
xchg
and
lods
mov
cwde
data16
inc
pushw
sar
fs
cmp
into
int3
jns
aam
clc
stc
sbb
ds
iret
cld
sbb
loope
inc
lea
loopne
mov
and
or
inc
loop
jne
push
xchg
sub
(bad)
call
push
jne
push
or
pop
repz
fcomp
sbb
pop
scas
mov
push
sub
das
imul
mov
fucomp
cmps
xchg
mov
xchg
push
outs
xchg
jb
xchg
out
mov
pop
repz
mov
adc
mov
xchg
sbb
(bad)
xor
je
and
push
(bad)
cmps
daa
scas
xchg
(bad)
outs
and
stos
and
clc
ret
add
inc
mov
sub
(bad)
lods
daa
outs
stos
cld
imul
push
repz
aas
aad
and
mov
or
dec
jl
shl
inc
test
imul
(bad)
call
xchg
fbld
sbb
push
outs
jno
sti
pop
cmc
sub
retf
cld
or
cs
xchg
(bad)
xchg
inc
adc
sub
outs
test
inc
ret
clc
xchg
daa
lock
jl
lds
jnp
stos
inc
push
and
xchg
jae
mov
addr16
hlt
add
movs
aas
jbe
test
and
lds
mov
push
push
sahf
loop
inc
fs
mov
aam
fiadd
pop
mov
outs
push
cli
mov
data16
dec
ja
cmp
lahf
sbb
cmp
mov
dec
mov
shl
pop
aad
movs
adc
xchg
jbe
pop
(bad)
lock
lods
sbb
mov
out
push
jnp
pop
push
mov
adc
(bad)
jecxz
sub
cli
out
or
pop
into
pop
sub
inc
jle
stos
test
ficomp
js
das
je
jmp
dec
sub
and
sbb
hlt
inc
cmp
mov
add
ja
inc
fisubr
in
movs
and
arpl
jecxz
nop
mov
clc
sbb
sbb
mov
bound
and
imul
or
(bad)
jecxz
add
jp
adc
cmc
test
je
inc
mov
pop
cmp
fcmovnbe
xor
cwde
xor
mov
mov
adc
jle
cwde
mov
mov
mov
fadd
cmp
mov
or
cmc
hlt
adc
(bad)
call
xchg
jmp
ficom
inc
inc
sub
adc
nop
mov
mov
sbb
push
ds
test
test
or
sub
jge
clc
cmp
les
imul
out
test
pop
mov
ficomp
sub
mov
addr16
pop
cmps
adc
into
pop
scas
and
add
std
mov
or
in
mul
bound
mov
and
arpl
lahf
int3
rcr
xchg
call
(bad)
xor
add
push
jg
and
js
mov
imul
test
dec
or
in
icebp
xchg
out
mov
or
add
jp
push
fcom
xchg
mov
jge
aas
nop
adc
cdq
xor
jmp
loope
xor
and
mov
push
(bad)
ss
xchg
or
pop
or
cmp
jle
jne
or
ins
cmp
xchg
(bad)
or
mov
sbb
and
mov
and
jmp
mov
in
mov
and
push
aaa
and
jge
inc
sub
aaa
enter
mov
push
imul
push
cmp
stos
sti
push
dec
xor
push
and
lods
in
xor
xor
push
das
idiv
stos
cdq
in
xlat
inc
sub
call
int3
cmp
into
xchg
sub
jecxz
sub
jle
test
sti
retf
outs
adc
pop
add
and
cli
aas
dec
(bad)
shl
mov
inc
lea
out
xchg
movs
mov
xchg
fwait
lods
ins
sub
outs
sbb
cmp
fidiv
stc
int
outs
fld
ins
sbb
frstor
cli
bound
in
adc
jmp
dec
sbb
dec
imul
(bad)
daa
mov
ret
outs
jbe
hlt
xchg
and
pop
cmc
cmp
jg
es
call
popf
adc
jle
inc
into
cmp
push
stc
pop
xor
call
pop
mov
mov
(bad)
jge
mov
sahf
and
jb
out
dec
or
mov
ret
adc
mov
push
ja
movs
dec
pop
ins
out
hlt
jl
push
idiv
rcl
(bad)
hlt
int3
pushf
jecxz
bound
cmp
mov
call
mov
adc
in
cmp
mov
ficom
test
loop
(bad)
pop
or
push
mov
push
mov
xor
xchg
cmp
mov
cmp
cdq
and
cmps
add
xor
adc
fwait
adc
or
ins
loopne
sbb
jmp
scas
or
dec
pop
inc
sub
stos
lds
aaa
rol
nop
push
mov
stos
push
or
sahf
rol
cdq
(bad)
push
xor
shl
fs
inc
inc
data16
rol
mov
pushf
inc
mov
lahf
xchg
test
retf
jo
cli
xor
dec
std
jbe
mov
sub
fwait
cmp
inc
imul
sahf
mov
out
cld
icebp
ins
push
in
inc
inc
jne
and
fwait
inc
repnz
or
in
adc
add
sbb
hlt
dec
or
out
fnstsw
sti
inc
and
mov
jo
inc
mov
iret
pop
add
(bad)
mov
imul
pop
push
sti
loopne
(bad)
fldenv
xchg
scas
dec
cmp
(bad)
jle
push
test
inc
gs
xor
pop
test
sbb
jb
push
dec
stos
enter
sub
out
sbb
mov
dec
fistp
nop
add
ss
aas
mov
xor
add
mov
fdiv
cli
in
sub
add
int
cmp
gs
es
dec
cwde
dec
popa
jo
or
frstor
repnz
pop
dec
cwde
inc
mov
jge
add
mov
adc
stos
mov
je
int
loop
sub
add
sbb
repz
xchg
dec
and
xor
fcmovnu
cmp
or
push
inc
push
stos
rcr
lods
mov
push
imul
sbb
(bad)
pop
dec
sti
mov
cs
hlt
imul
bound
adc
loop
test
cwde
mov
int
mov
iret
push
add
jle
mov
lods
jecxz
add
sub
repnz
pop
jno
jmp
mov
sbb
cmp
ficom
sbb
sub
xchg
ins
adc
(bad)
jl
jne
inc
push
mov
movs
out
sbb
mov
adc
add
movs
mov
pop
icebp
dec
xchg
addr16
rcr
pusha
push
test
mov
mov
sub
inc
cmp
adc
aad
js
int3
sbb
xor
xchg
aaa
fstp
(bad)
in
dec
cs
movs
shr
xchg
aaa
xchg
inc
and
repnz
out
and
leave
dec
das
movaps
pop
push
pop
gs
or
sub
jl
sub
rcl
inc
and
xor
sbb
fdivr
mov
hlt
adc
add
push
jne
fwait
sub
ret
and
or
mov
sar
inc
jp
inc
outs
push
dec
test
xchg
and
mov
sbb
jmp
test
jmp
repnz
xchg
dec
gs
mov
in
adc
test
stos
fcmove
inc
add
cmp
or
out
cs
mov
call
push
dec
retf
inc
cdq
mov
push
push
(bad)
pushf
pop
mov
inc
ds
les
xor
xlat
fcomp
pop
mov
fmul
jmp
push
adc
in
sub
or
cdq
retf
out
mov
add
jb
addr16
inc
ins
push
inc
add
dec
mov
test
jmp
sbb
adc
stos
or
cmc
scas
std
ret
push
push
adc
mov
sbb
pushf
sub
aam
icebp
mov
scas
inc
mov
(bad)
fild
sbb
cmp
jg
sub
jmp
cmp
lods
adc
sub
mov
dec
int3
loopne
jbe
and
push
out
ins
inc
shl
(bad)
xchg
xchg
cli
sbb
xchg
loope
push
xlat
push
in
inc
lea
cmc
sub
aam
movs
mov
mov
fadd
add
push
cmp
adc
sub
std
cwde
pop
mov
sbb
mov
mov
test
or
mov
shr
or
clc
fs
mov
out
out
xchg
cdq
dec
and
in
mov
add
xchg
mov
sub
repnz
mov
add
lock
xchg
imul
mov
test
fwait
(bad)
lods
sub
int3
dec
imul
stos
xchg
into
xchg
mov
and
int3
pcmpeqb
out
adc
or
das
sbb
xchg
cld
outs
ret
lds
std
mov
daa
(bad)
rcr
call
dec
and
retf
jnp
arpl
mov
pushf
mov
sbb
inc
mov
and
lods
sbb
test
fild
jae
xor
dec
cmp
sub
or
imul
mov
dec
shl
xor
sub
jmp
sub
test
popa
and
xchg
mov
mov
push
adc
adc
in
cmp
ficom
cmp
sub
fnstsw
sub
adc
sbb
fwait
mov
addr16
push
fnsave
lods
das
ins
add
jae
sbb
out
mov
loope
sub
mov
mul
retf
dec
xchg
fld
mov
test
xor
sbb
(bad)
movs
data16
push
pop
adc
call
test
sub
adc
push
imul
mov
push
mov
jge
inc
test
and
or
in
lods
and
inc
gs
mov
xchg
out
int
mov
(bad)
xor
xchg
ror
out
dec
mov
sbb
fld
xchg
ror
jmp
xor
and
loop
test
jne
and
call
jbe
mov
xchg
or
fdiv
data16
popa
in
cdq
jp
xchg
in
or
out
test
cmp
pop
clc
ins
and
into
sub
loop
ins
fcomp
xor
mov
hlt
or
add
xchg
jnp
push
lods
or
or
cdq
aam
jmp
das
outs
sub
push
int
dec
jge
jbe
sub
dec
jl
mov
ins
test
sbb
imul
pusha
mov
cdq
mov
jmp
out
sub
sbb
cld
xlat
dec
mov
loop
clc
stos
adc
sbb
rol
add
stos
cmp
dec
popa
xchg
aam
(bad)
sbb
dec
not
fiadd
lds
repnz
xchg
jno
(bad)
mov
iret
inc
push
stos
cwde
je
and
sbb
push
mov
pop
add
jp
fist
jb
sahf
mov
xor
cmp
pusha
dec
xchg
aaa
mov
cli
fisub
push
xchg
xor
mov
mov
cmc
jge
xor
add
sahf
adc
das
mov
xchg
mov
cmp
adc
pop
dec
and
int
xlat
xlat
ret
jg
mov
adc
sahf
xlat
inc
inc
test
jnp
psrad
shl
jle
inc
push
jnp
mov
inc
jmp
test
in
inc
pushf
mov
sub
pop
jge
(bad)
in
and
gs
call
cmp
pop
sbb
or
mov
je
addr16
inc
and
fmul
cmp
movs
scas
mov
mov
out
jne
jmp
stc
or
mov
inc
cmp
mov
or
adc
xchg
movs
leave
inc
xchg
out
cmp
shr
dec
xor
enter
jge
mov
jmp
outs
test
pop
xor
dec
rol
adc
pop
je
sub
jno
loop
pop
inc
inc
test
nop
inc
or
inc
(bad)
mov
daa
test
mov
mov
cmp
cmps
xchg
icebp
std
sbb
jbe
stc
cmp
outs
mov
mov
dec
inc
mov
and
call
repz
mov
jge
or
xchg
add
mov
dec
cwde
daa
int3
pop
xlat
or
push
xor
mov
or
int
adc
retf
add
push
hlt
les
xchg
inc
arpl
pop
int3
movs
mov
jb
jb
ret
or
pushf
sbb
mov
imul
lods
inc
gs
popa
dec
mov
or
mov
pushf
or
sbb
mov
call
cmp
frstor
repnz
add
fld
arpl
mov
add
in
shl
push
pop
xor
repz
or
dec
xchg
inc
xchg
dec
std
mov
push
popa
rcl
inc
rcl
add
cs
cmp
jl
push
push
mov
inc
xchg
cs
(bad)
std
(bad)
jp
sub
mov
push
ror
daa
inc
and
push
imul
pop
cmp
repnz
(bad)
aas
test
xchg
cwde
repnz
cs
adc
fld
test
loope
adc
movs
imul
pop
mov
out
aaa
sbb
or
cmp
mov
cmp
in
loopne
jecxz
shl
push
jne
scas
stos
imul
test
mov
jecxz
or
aam
int
aam
add
ins
bound
sub
stos
sub
ret
ja
or
xchg
mov
adc
lods
stc
adc
jg
jge
mov
fcom
cmp
and
popa
push
pusha
arpl
hlt
loopne
loope
inc
inc
pop
aas
sbb
mov
jecxz
dec
int
loopne
retf
and
int3
es
dec
sbb
test
or
data16
je
ror
dec
jp
fdiv
mov
sbb
cmp
push
cmp
sbb
mov
cdq
retf
popf
sbb
inc
xchg
push
into
pop
popa
out
pop
xor
cwde
pop
cmp
ror
aad
push
cmp
xor
mov
int
loope
in
sub
push
xchg
mov
sbb
mov
cli
sbb
js
call
shl
xor
or
adc
fild
test
shl
sti
xchg
icebp
jbe
aam
sahf
out
ret
nop
dec
mov
xor
jnp
add
outs
fnstcw
clc
nop
sbb
stos
cmps
push
mov
lds
cmp
test
ret
push
dec
data16
inc
jae
mov
pop
(bad)
pop
and
mov
inc
dec
retf
or
mov
xor
fwait
dec
xor
jecxz
push
mov
shl
jbe
(bad)
loop
gs
push
into
fidiv
push
sub
xlat
mov
iret
outs
popf
push
movs
push
imul
icebp
xor
cdq
lods
inc
popa
test
jp
adc
xor
aas
test
jg
retf
imul
mov
cmps
fs
test
cli
or
xchg
pop
xor
mov
adc
xchg
or
lds
lock
int3
sbb
jge
cs
les
jl
test
fs
shl
adc
scas
cmps
ret
iret
cmc
out
retf
clc
mov
pop
movs
sahf
mov
dec
int3
jbe
ffreep
lds
fnsave
fwait
rep
jp
popa
js
pop
fwait
adc
xchg
cmps
jno
pop
ins
ret
mov
jo
rcr
aad
loope
dec
cmp
adc
movs
or
and
inc
repz
loopne
xchg
push
jb
jecxz
sbb
shl
sbb
cmp
adc
pop
add
loope
out
fsubr
xor
xlat
addr16
and
out
xchg
movs
sar
rcl
xchg
dec
or
sub
cmp
test
jle
stos
test
int3
add
lods
sbb
sbb
jl
mov
data16
push
in
adc
mov
jge
movs
das
rol
iret
pop
arpl
movs
jae
push
movs
das
adc
jnp
retf
adc
sbb
or
int3
retf
imul
cs
xchg
cmps
cmc
xor
fdivr
mov
xchg
aas
add
xor
repz
pop
cwde
mov
sbb
add
or
mov
outs
arpl
leave
or
mov
jns
mov
xor
mov
jns
jle
cld
inc
jno
and
sar
jmp
fsub
outs
ror
push
xchg
inc
fld
inc
and
mov
test
aaa
push
jbe
retf
adc
mov
add
inc
jmp
mov
dec
fscale
pop
sub
or
jmp
in
jg
repnz
test
clc
and
movq
call
adc
adc
mov
xor
cmp
xor
jl
gs
pop
inc
adc
mov
add
or
retf
xchg
mov
rcr
rcr
jae
push
ja
test
fadd
fucomi
ds
pop
mov
icebp
imul
leave
inc
push
xor
mov
dec
cld
dec
push
and
repnz
jmp
cmp
fisubr
and
call
cs
addr16
jmp
and
pop
xchg
aam
retf
sub
repz
(bad)
and
xor
mov
out
fcmovb
dec
dec
mov
push
test
sub
in
jno
ror
adc
sysexit
xchg
cmp
addr16
pop
ins
adc
add
daa
fstcw
aaa
and
loop
cmp
lods
sbb
(bad)
enter
add
cmp
sbb
in
cmp
in
jmp
call
dec
nop
adc
mov
dec
xor
push
or
dec
ret
sar
xchg
rcl
outs
xchg
lods
popa
leave
arpl
push
icebp
pop
xor
sub
add
mov
add
xchg
nop
nop
repz
sub
push
jbe
dec
jb
sub
loop
jo
sub
int
out
push
out
cmp
int
addr16
or
imul
(bad)
scas
jae
mov
ins
adc
in
pop
jg
mov
mov
hlt
scas
jnp
jb
pushf
fist
adc
xchg
test
cmp
inc
mov
push
(bad)
jmp
push
sbb
sub
mov
loope
dec
pop
lahf
movs
mov
inc
inc
ins
ficomp
(bad)
jmp
jge
fist
push
jmp
fs
clc
enter
mov
fiadd
push
addr16
mov
pop
outs
and
lods
test
mov
mov
or
pop
add
cld
inc
pop
je
and
aaa
rol
push
fsub
mov
push
lock
je
inc
pop
or
imul
sti
xchg
push
mov
ret
push
jo
outs
(bad)
or
popa
add
scas
fdivr
stos
pop
ins
hlt
push
arpl
outs
(bad)
or
gs
push
adc
add
xor
push
popa
jbe
mov
jmp
(bad)
mov
hlt
fwait
repnz
movs
mov
scas
jl
int3
cwde
cwde
ficom
data16
xchg
fwait
mov
mov
cmp
hlt
arpl
into
stc
fs
mov
jno
mov
jb
or
mov
push
aad
fmul
push
popa
cmp
inc
std
ds
push
in
adc
rol
das
fdiv
dec
sub
lds
or
dec
xlat
daa
in
cli
mov
dec
sub
leave
inc
xchg
pop
jmp
idiv
jne
sti
cmp
push
loop
sahf
sbb
outs
sub
fsubr
push
sti
dec
add
outs
(bad)
jl
mov
retf
ja
jo
or
push
mov
mov
xor
cmp
xor
outs
push
pop
cmp
dec
cmp
daa
clc
sbb
fstp
dec
adc
frstor
jae
movzx
pop
iret
clc
ja
push
jmp
(bad)
daa
push
add
pop
cmp
or
cmps
fnstcw
mov
xlat
sbb
add
rcr
test
icebp
lea
repnz
retf
test
imul
into
ja
add
arpl
(bad)
cmp
jno
mov
daa
adc
test
(bad)
sti
int3
out
pop
cwde
dec
sbb
jnp
cmp
push
xchg
push
lahf
push
cmp
adc
ret
idiv
jp
loopne
lea
(bad)
out
mov
add
pop
mov
cmp
lods
ins
(bad)
out
jns
or
hlt
sbb
mov
mov
jmp
dec
pop
int
push
inc
dec
js
mov
xor
retf
jb
ret
add
cmp
mov
push
jl
pop
pop
inc
mov
adc
ss
out
mov
mov
out
jecxz
enter
mov
pop
icebp
pop
sti
int
lods
and
xor
out
lods
cmps
mov
push
xchg
mov
xchg
cmc
sbb
fstp
cdq
jl
pop
cwde
jmp
(bad)
or
ret
int
out
lods
pop
retf
fst
hlt
ja
call
push
xchg
pop
dec
or
push
dec
jmp
push
pop
mov
cs
outs
jmp
cmc
stos
iret
dec
rcr
jbe
imul
repnz
popf
adc
jle
sbb
jae
xchg
xor
push
ins
xchg
xchg
pop
mov
mov
xor
clc
in
add
cmp
inc
fwait
cmp
fistp
test
out
mov
jmp
test
in
mov
mov
mov
ja
fistp
dec
add
xor
cmp
js
in
mov
dec
xchg
mov
jns
loope
xor
(bad)
fwait
int3
ss
jle
adc
push
jle
mov
mov
ss
inc
push
push
ins
aad
and
cmp
lock
add
test
aad
les
jge
mov
cs
xchg
mov
xor
sbb
dec
or
push
sbb
pop
repz
sbb
push
data16
pusha
jl
mov
ret
mov
and
add
int
or
adc
shl
mov
jle
ret
bnd
sbb
imul
scas
in
xchg
test
fidivr
loop
push
dec
daa
daa
dec
mul
ss
(bad)
retfw
sub
inc
test
loop
mov
imul
jae
les
pop
call
add
jae
ss
(bad)
adc
lahf
jae
test
retf
lgs
push
cmp
cdq
push
jb
or
test
outs
jg
or
or
pop
into
loop
mov
leave
enter
hlt
xchg
ficom
inc
fidiv
adc
daa
sbb
add
cwde
imul
dec
daa
lods
ds
dec
loope
and
xchg
jno
inc
rcr
jg
cmps
jbe
xchg
push
cmps
xchg
sub
(bad)
repnz
or
out
push
xor
sti
dec
leave
jp
out
jle
pusha
adc
aaa
adc
(bad)
jle
add
pop
lds
sub
sub
xor
or
push
or
jp
adc
inc
adc
fwait
lahf
fwait
call
inc
fdiv
retf
lock
std
mov
out
mov
xlat
or
test
outs
mov
jp
adc
fisubr
dec
lods
cmp
or
(bad)
int
mov
scas
retf
sbb
test
stc
xchg
jmp
sub
jmp
mov
pop
jne
stc
lahf
nop
loopne
jb
movs
jne
pop
int
popf
jecxz
cld
popf
fst
xchg
fbstp
or
aaa
mov
dec
sbb
dec
cmc
les
xor
and
mov
(bad)
movs
mov
mov
jl
ds
dec
bound
dec
push
cmps
pop
out
nop
adc
mov
dec
sub
sbb
dec
pop
xchg
mov
cmp
sub
mov
hlt
cld
cmp
xor
mov
repnz
enter
sub
push
xchg
pushf
sti
mov
ret
lds
jno
jmp
push
adc
shr
sbb
add
js
lock
push
loopne
icebp
cmps
aad
loop
fldcw
xchg
jae
ret
fimul
dec
or
or
out
sar
inc
push
in
xchg
dec
dec
cdq
loopne
int3
push
add
pushf
mov
xor
scas
sbb
sub
sub
mov
or
mov
mov
jle
sahf
add
daa
sub
int3
aas
mov
ja
psubsw
dec
aas
pusha
sbb
popf
pushf
div
dec
push
into
add
mov
rcr
add
test
dec
mov
and
aas
pop
ins
in
sub
xchg
mov
sbb
mov
mov
xor
out
leave
pop
xor
push
mov
fnsetpm(287
fld
mov
cmp
inc
sub
je
and
add
mov
addr16
popf
or
ja
jnp
cmps
pop
pop
popf
shr
icebp
sub
pop
or
(bad)
stc
dec
enter
push
jge
ss
mov
stc
dec
push
jl
jbe
bound
xchg
mov
sub
jno
loop
jge
lea
and
sub
in
sbb
pop
or
mov
das
int
test
sub
jo
out
loope
fwait
loope
retf
and
jle
fsubr
(bad)
stos
cdq
xchg
jg
mov
add
test
xor
retf
fcom
sbb
pop
xor
(bad)
or
cmps
loopne
adc
add
mul
or
dec
inc
nop
(bad)
enter
movs
adc
pop
and
adc
iret
jle
push
jg
aad
mov
dec
ins
dec
ficom
outs
add
fadd
out
jmp
dec
popa
add
dec
in
scas
dec
and
cmp
cmp
or
adc
pop
lods
loopne
dec
ins
(bad)
int
mov
into
fiadd
jmp
sbb
xor
jp
adc
mov
cdq
xor
ds
mov
xor
jecxz
push
shr
pop
movs
icebp
ins
pop
enter
sbb
cmps
test
into
imul
je
pop
cmp
jle
faddp
pushf
jb
pop
in
pop
mov
and
dec
scas
(bad)
ds
jecxz
mov
pop
push
mov
mov
(bad)
cld
lahf
mov
dec
push
adc
das
test
ret
sub
daa
jns
movs
and
sti
add
adc
inc
mov
enter
dec
sub
sub
pop
das
int
ret
sub
fs
sar
inc
jmp
xor
rcl
adc
fmul
sbb
mov
add
cmp
mov
test
sahf
push
xchg
sahf
clc
sbb
mov
ret
aam
arpl
out
dec
adc
xchg
xor
aad
push
jmp
icebp
iret
repz
xchg
fst
cs
jmp
and
aam
sbb
or
inc
jbe
inc
ss
xchg
jbe
and
jle
pop
icebp
pop
rol
shl
mov
scas
inc
fdivrp
xchg
cdq
or
test
inc
xchg
dec
in
inc
mov
dec
and
les
mov
pop
xchg
arpl
or
icebp
add
out
(bad)
fmul
stc
jp
dec
mov
mov
stos
xchg
loopne
sbb
xchg
sti
dec
ds
mov
leave
mov
mov
into
or
stos
jmp
ficom
rol
test
sbb
and
mov
out
adc
cmc
shl
push
aam
or
and
enter
das
mov
loope
dec
jmp
cmp
mov
push
add
xchg
lock
push
inc
inc
push
inc
call
les
push
add
popf
jae
xchg
retf
(bad)
mov
icebp
sub
jno
push
fdiv
pop
int
cmps
cmp
mov
(bad)
pop
aad
jnp
test
mov
inc
in
popa
or
scas
jb
loope
leave
mov
dec
jle
mov
jno
mul
repnz
stc
cld
push
mov
jo
dec
mov
data16
jge
jo
call
adc
mov
call
mov
pop
rcr
cmp
push
jmp
or
mov
sub
arpl
gs
sbb
mov
sub
jmp
push
mov
outs
mov
dec
push
adc
(bad)
jmp
mov
dec
addr16
mov
cmc
sub
dec
pop
fwait
cld
push
inc
rcl
sub
push
sub
pop
and
mov
dec
mov
imul
test
mov
pop
push
pop
dec
retf
mov
je
and
pop
fs
push
mov
mov
loopne
test
sbb
add
lock
pop
pop
shl
and
pop
push
mov
sbb
sub
ds
xor
pop
daa
or
test
add
mov
xchg
(bad)
fcmovnb
cmp
xchg
pop
add
dec
pop
jae
pop
inc
dec
adc
(bad)
ja
lahf
xor
mov
mov
(bad)
jmp
pop
add
pop
mov
dec
pop
sahf
ja
xor
jmp
cmp
fdivr
mov
add
fidivr
adc
mov
dec
adc
jb
mov
loope
fwait
inc
adc
lods
xchg
neg
sub
mov
dec
arpl
cmp
retf
data16
data16
push
pop
in
push
mov
test
bound
mov
and
fild
inc
mov
mov
dec
mov
lea
in
jns
xor
jns
stc
push
cmp
(bad)
dec
and
xchg
push
movs
and
inc
test
loop
mov
jge
cmp
xchg
sbb
mov
inc
sbb
lahf
pop
dec
dec
call
call
pushf
aas
mov
jp
mov
jmp
leave
xchg
lahf
jl
jmp
sahf
and
fs
and
repz
cmp
sub
inc
mov
lea
dec
jae
pop
nop
pop
add
xchg
scas
push
cli
enter
jns
into
stc
mov
mov
aam
ins
or
sar
pop
(bad)
push
cmp
test
fldenv
popa
les
jle
cmp
or
mov
pusha
pop
xor
pop
shl
cmp
mov
xlat
cmc
stc
xchg
and
shl
shr
(bad)
add
fnstsw
in
paddq
out
adc
into
test
icebp
scas
inc
mov
lds
sbb
jl
fild
pushf
pushf
loop
adc
fsub
mov
xchg
cmp
(bad)
fst
mov
or
ret
neg
push
xchg
sub
or
ss
ret
jns
inc
push
dec
mov
mov
and
repz
arpl
adc
lahf
push
ror
ins
or
inc
xor
sbb
xor
xor
imul
out
cmp
xchg
mov
push
imul
xchg
and
aaa
push
dec
bound
(bad)
aad
cmp
inc
stc
mov
into
or
das
call
mov
jo
or
sub
imul
aad
inc
outs
aam
enter
imul
push
inc
mov
loop
mov
sub
mov
daa
and
movs
scas
pop
in
xchg
cmp
mov
clc
adc
enter
pushf
xchg
es
mov
adc
pop
enter
out
xchg
rcl
iret
xor
hlt
jb
std
or
and
aas
push
call
ja
mov
sub
(bad)
cs
paddsw
leave
inc
jg
mov
cwde
push
inc
out
aam
xor
push
jb
scas
push
cli
mov
clc
jp
ret
fbstp
jp
cld
out
sbb
fucom
or
call
sbb
pop
push
pop
pop
push
inc
mov
xchg
dec
jns
xor
cli
pop
jmp
pop
loop
lods
push
stc
shl
pop
inc
sbb
mov
and
ins
sub
mov
mov
push
adc
data16
(bad)
ret
cmp
(bad)
push
jne
xor
mov
fmul
dec
cdq
mov
jmp
jmp
push
xchg
mov
push
adc
jg
pop
sbb
sub
mov
mov
loope
pop
out
adc
daa
adc
jae
aaa
test
push
inc
jns
sub
retf
cmp
hlt
test
frstor
mov
jecxz
leave
int
jg
aam
add
out
or
dec
xchg
outs
push
ret
dec
push
cmp
mov
xor
mov
mov
push
std
dec
adc
mov
add
test
stos
mov
es
lods
call
xchg
inc
add
cmp
pop
jns
ret
jno
mov
or
jmp
adc
xchg
xor
mov
mov
jo
adc
sbb
dec
jns
dec
sbb
inc
cmps
pop
stos
(bad)
add
les
int
xchg
mov
mov
div
mov
xchg
mov
int3
cdq
(bad)
jle
dec
(bad)
retf
sub
aaa
mov
fldl2e
test
rcl
mov
faddp
or
icebp
jp
mov
cmps
(bad)
or
fdivr
outs
je
add
(bad)
lods
imul
mov
hlt
or
cmp
leave
int
pop
inc
and
mov
xchg
dec
cdq
pop
sbb
ja
test
lds
sahf
aam
jne
ficom
xchg
std
mov
inc
cmps
jmp
mov
aaa
fcomp
js
sahf
cmps
cmc
stc
jae
dec
pop
test
daa
jnp
jmp
in
int3
cdq
xor
xchg
xor
jl
les
rcl
popf
cwde
sahf
pop
clc
int3
jno
mov
lods
jbe
cmp
bnd
fisubr
pop
jb
adc
jae
jne
mov
in
jmp
and
rcl
mov
repnz
inc
sbb
test
mov
push
rcr
inc
inc
mov
nop
mov
rcl
movs
xor
outs
sub
pop
or
xchg
lods
mov
add
cmp
add
adc
xlat
push
and
jne
adc
sbb
jbe
neg
(bad)
add
bound
xchg
loop
imul
pop
ss
icebp
out
adc
adc
jmp
jmp
lea
jne
fiadd
test
movs
daa
pop
in
mov
add
dec
mov
sbb
dec
adc
mov
push
call
test
push
add
push
outs
jo
push
bnd
push
add
pop
(bad)
cmps
mov
pop
sar
push
pop
dec
add
xor
scas
adc
adc
mov
rol
push
das
dec
pop
pusha
pop
gs
aam
or
pop
test
jo
sub
sbb
mov
jmp
fwait
push
jge
mov
lods
xor
int3
ins
push
sbb
sub
mov
cmp
sbb
mov
les
inc
pop
(bad)
imul
aas
cmp
aam
shl
outs
ins
add
cmp
scas
mov
mov
enter
mov
lock
mul
push
(bad)
jno
popf
rcr
sbb
mov
mov
sbb
mov
loope
pop
xchg
sbb
xchg
retf
pop
(bad)
adc
pop
cld
fisttp
popf
xchg
ds
inc
ins
xlat
xor
adc
cmps
add
icebp
and
jbe
inc
leave
mov
mov
pop
(bad)
and
cmp
call
pushf
arpl
and
mov
mov
leave
test
mov
mov
cmp
xchg
push
xchg
iret
pop
xor
pop
xchg
sbb
and
les
jno
cmc
jne
in
xlat
or
jbe
jmp
stc
nop
(bad)
cmps
aas
jecxz
imul
outs
fidiv
jmp
icebp
and
and
sbb
jns
fsubr
lahf
shl
pop
es
clc
adc
xor
repz
cli
sbb
loopne
stos
loop
jmp
cmp
ins
stos
pop
add
cwde
lahf
and
ret
cld
retf
fidivr
enter
xor
int
push
sub
sbb
push
outs
ds
mov
outs
cmps
fdivr
hlt
mov
shr
nop
cld
clc
or
jecxz
push
mov
imul
fldcw
push
mov
mov
inc
push
or
fiadd
and
addr16
gs
fidiv
ins
outs
dec
aaa
xor
shr
leave
cld
or
or
sub
mov
dec
fdivr
lods
into
call
call
popf
mov
pop
ds
inc
arpl
push
mov
test
cmp
loopne
sub
mov
sub
and
sbb
call
pop
fisttp
jecxz
into
popf
stos
out
les
xchg
imul
ffree
mov
ret
jp
sti
xor
dec
das
sub
add
adc
aaa
fstp
test
xor
sbb
jle
arpl
pop
popf
inc
sbb
xchg
pop
loop
loop
(bad)
cwde
jne
sar
std
xor
pop
fst
ins
cmp
shl
jl
iret
and
(bad)
push
cmp
cmp
and
mov
xchg
jbe
mov
ins
dec
mov
bound
add
fidiv
adc
inc
cdq
pop
scas
inc
dec
pop
mov
jg
sbb
xchg
jmp
inc
test
add
dec
sub
mov
cwde
cs
fst
lds
and
dec
wrmsr
jmp
fmul
xor
scas
mov
push
sub
stc
aam
ins
aam
aam
push
lock
xchg
in
xor
inc
sbb
or
xor
fisub
inc
sbb
das
shl
(bad)
popf
outs
and
add
push
sub
sti
and
imul
into
dec
or
out
test
pop
cmp
or
push
aas
jge
pop
dec
and
cli
sub
jbe
sub
in
nop
(bad)
test
pop
out
cmps
add
push
and
arpl
inc
cmp
mov
and
movs
sbb
and
out
inc
clc
stos
cmps
sahf
(bad)
icebp
loopne
fnstcw
fidiv
sub
daa
cmp
dec
cmp
lods
add
and
rcl
inc
ins
in
fmul
pop
inc
jae
xchg
mov
or
and
dec
mul
das
jmp
aad
inc
dec
adc
inc
push
fwait
jbe
in
(bad)
shl
sub
movs
aaa
xchg
cmps
jnp
xor
hlt
cmp
push
pop
out
dec
aad
(bad)
je
jb
daa
je
push
cli
shl
inc
sub
adc
imul
and
cmp
dec
jp
les
push
cmps
mov
mov
mov
jmp
cdq
jno
mov
jnp
or
dec
popa
out
dec
stc
sub
cmp
std
sbb
mov
cmp
jne
out
inc
int3
repz
sahf
mov
push
mov
gs
mov
or
in
dec
call
inc
jne
push
adc
dec
dec
in
sbb
and
in
rol
cs
lahf
rcl
mov
jp
movs
ror
pop
retf
sbb
mov
cld
ins
mov
ret
aas
ret
mov
int3
push
sbb
lds
test
mov
sbb
les
xchg
add
pop
lahf
inc
ret
jb
shl
inc
cmp
or
outs
pop
cmp
mov
hlt
pop
pop
nop
ret
pusha
dec
iret
dec
ss
mov
sbb
mov
mov
jns
loop
pop
jo
adc
inc
leave
inc
dec
retf
loop
mov
out
repnz
stc
sbb
cmps
jle
mov
adc
jne
and
movs
sub
(bad)
fstp
or
jge
les
jp
(bad)
pop
mov
pushf
(bad)
sub
ss
lods
xchg
iret
test
mov
push
cdq
shr
mov
pushf
clc
dec
loope
push
aas
mov
mov
or
cmc
test
push
inc
mov
pushf
lds
les
test
adc
pop
(bad)
mov
daa
sbb
push
int3
mov
cld
int
out
retf
aas
adc
cmp
dec
sbb
out
jge
mov
fwait
ins
add
push
pop
or
mov
sub
ss
cs
mov
sub
imul
popa
mov
sub
mov
js
mov
xor
pusha
add
push
scas
popf
push
xor
jns
jecxz
push
inc
push
fisttp
movs
add
mov
in
sbb
or
stos
or
inc
inc
push
and
xlat
js
stos
out
xchg
push
mov
popw
ds
xchg
push
cmp
cmp
add
fnsave
cmp
mov
fldcw
lods
jle
jb
outs
xor
dec
inc
cmp
or
and
inc
add
or
cmc
mov
frstor
popf
pop
loop
add
mov
xor
fsub
and
xchg
push
into
mov
jo
add
xor
cmp
cmc
inc
shl
aaa
jbe
out
in
and
mov
add
fidiv
sub
fistp
sbb
xlat
mov
xor
psubusw
mov
xchg
loop
and
mov
je
and
imul
in
dec
clc
cwde
fistp
call
out
loop
jg
icebp
and
cmc
icebp
ins
jo
aaa
xlat
sub
mov
(bad)
push
lea
(bad)
add
sahf
and
sbb
je
test
std
adc
push
inc
loope
(bad)
xchg
mov
mov
push
mov
or
bound
or
fsub
imul
or
nop
cmp
dec
xor
jne
sub
xchg
outs
sahf
sub
lods
inc
(bad)
out
jecxz
push
mov
or
add
in
aaa
bound
push
dec
loop
sbb
ret
sub
mov
test
(bad)
push
scas
jo
imul
sbb
bound
dec
or
sub
cs
inc
jg
add
pop
pop
retf
hlt
mov
add
nop
scas
shl
cmc
inc
mov
inc
inc
mul
lods
add
lock
mov
loope
pop
xchg
sub
jmp
das
jecxz
add
pop
(bad)
adc
cmp
scas
xchg
pop
mov
pop
mov
dec
inc
mov
dec
ss
ss
pop
mov
test
mov
aas
xchg
pop
scas
mov
fbstp
xchg
push
lahf
sbb
mov
push
mov
adc
ret
xor
ds
mov
mov
dec
fadd
xchg
cld
fpatan
aaa
sbb
sbb
je
test
ficom
adc
fcomp
loope
jmp
fdivr
mov
mov
addr16
jae
or
arpl
pop
xchg
das
outs
jmp
lock
mov
push
(bad)
mov
adc
or
mov
fmul
int
push
fcomp
(bad)
jge
push
retf
sbb
pop
fsincos
shr
retf
(bad)
dec
sbb
jmp
push
cmp
mov
in
xor
or
xchg
es
into
stos
sti
mov
xchg
mov
pop
push
mov
pop
mov
mov
mov
sub
add
mov
loop
jae
inc
aas
out
jo
cmps
shl
sub
xor
mov
nop
mov
mov
lahf
jne
sub
leave
ins
push
dec
and
mov
call
xchg
rcl
sbb
retf
push
push
std
mov
adc
loopne
daa
out
and
je
sbb
loope
lods
outs
int
imul
jmp
jmp
dec
cs
jno
stc
cmp
mov
lds
mov
shl
sbb
or
stos
sbb
cmp
push
bound
push
or
sub
dec
movs
xchg
inc
ret
daa
add
repnz
jne
outs
push
push
js
push
mov
jbe
fcmovb
jl
mov
sbb
int
addr16
sub
push
js
bound
mov
and
mov
push
cmp
xor
xchg
push
push
fbstp
ins
ja
int
jecxz
cmp
mov
xor
cdq
fld
adc
sbb
adc
mov
adc
mov
leave
mov
push
xchg
sbb
cmp
jo
mov
xchg
not
retf
bound
and
out
mov
push
lods
cmp
fisubr
imul
cli
js
add
test
xchg
cs
mov
loopne
aad
dec
mov
cmp
movs
and
pop
movs
add
adc
sub
xchg
jns
cmps
(bad)
in
pop
jno
lahf
daa
(bad)
mov
shl
xor
push
mov
imul
fistp
call
iret
mov
mov
bound
sub
ds
mov
gs
xchg
dec
ror
jecxz
dec
mov
aam
jecxz
lods
test
cmc
in
ss
les
and
fisttp
jbe
cmps
xor
xchg
cmps
lds
into
mov
or
nop
mov
(bad)
jl
int
clc
sbb
je
rcl
jo
mov
sbb
std
not
add
dec
jmp
aad
mov
dec
sbb
mov
cmp
jo
add
mov
mov
adc
(bad)
into
pop
cmp
call
add
cmp
outs
ret
add
scas
aaa
dec
or
mov
cmp
ja
cmp
(bad)
and
mov
mov
ja
jno
add
retfw
sbb
adc
shl
and
ins
add
adc
cli
loop
cmps
int3
data16
add
fwait
leave
add
inc
inc
out
adc
shl
(bad)
in
clc
mov
adc
cwde
cdq
mov
push
mov
jne
test
dec
push
push
enter
push
dec
(bad)
fs
ins
sahf
or
or
pmaddwd
fmul
gs
mov
js
ins
bnd
jg
xor
inc
in
aaa
jno
sub
neg
loop
jmp
adc
mov
cld
clc
mov
lods
mov
(bad)
out
lods
mov
mov
xchg
sub
ret
or
pop
rcr
mov
(bad)
cmc
sbb
and
sti
leave
xchg
dec
mov
(bad)
std
nop
or
jge
in
xor
mov
push
jb
xchg
movs
sub
hlt
scas
loope
hlt
lock
push
ror
dec
ds
jecxz
cmp
adc
jb
shr
ss
(bad)
xor
inc
fcomp
and
jbe
sbb
aad
lds
xor
ret
jne
ret
pop
cmp
(bad)
pusha
sub
xchg
add
pop
sub
mov
sub
out
enter
into
xor
repnz
ins
xchg
jnp
fadd
retf
pop
ja
or
js
mov
cld
add
loop
rcl
jle
das
push
xor
neg
mov
adc
push
cwde
dec
jo
loopne
(bad)
adc
jae
out
pop
sbb
sbb
je
imul
iret
and
sub
dec
add
retf
sbb
dec
ds
jne
repnz
(bad)
fiadd
stos
add
out
mov
inc
mov
jecxz
rcl
inc
inc
pop
inc
scas
xchg
aam
adc
dec
xchg
inc
retf
xlat
stc
mov
sbb
jne
stos
pop
and
adc
aas
enter
imul
mul
lds
leave
push
dec
adc
dec
cmp
xor
pop
xchg
jmp
cli
das
and
inc
cmp
sbb
push
cmp
rol
in
xchg
ja
idiv
test
xchg
or
lods
lock
int3
adc
fmul
mov
mov
cmp
jg
push
xor
xor
mov
inc
lods
call
add
or
and
push
xchg
xor
mul
jle
xchg
icebp
push
sub
test
mov
cmp
nop
rcl
jb
mov
mov
in
out
in
ror
sub
push
dec
aaa
in
pop
push
out
retf
cld
imul
ja
unpckhps
(bad)
mov
idiv
and
call
(bad)
std
sub
inc
push
aam
xchg
lea
sub
lods
inc
hlt
lock
xchg
xor
mov
adc
into
add
cs
fadd
jb
mov
and
add
ret
dec
xchg
push
xor
cmp
pop
xor
cmp
ret
or
inc
dec
mov
(bad)
call
pop
fldcw
mov
adc
mov
mov
out
sbb
pop
dec
int
mov
bound
jp
shl
sub
add
xor
scas
xor
push
sbb
mov
push
mov
rcl
shr
mov
xchg
(bad)
pop
inc
push
adc
sahf
mov
jl
pop
addr16
push
fcmovu
push
cmp
(bad)
dec
test
rol
dec
leave
or
mov
jl
out
mov
xchg
popa
pop
inc
mov
xor
into
mov
popa
aas
adc
push
fmul
lahf
cwde
adc
push
rcr
adc
jns
mov
leave
out
ins
jae
sub
pop
jge
sub
lods
mov
ficom
ret
inc
inc
and
sbb
in
movs
jb
push
retf
shr
xchg
in
nop
push
fstp
xchg
push
xor
xor
out
cs
xor
imul
sti
mov
mov
sub
mov
sbb
xchg
std
aaa
dec
adc
data16
sbb
icebp
add
push
mov
sub
sub
jns
lods
ja
fnsave
fsub
clc
push
inc
fadd
push
lods
lods
call
call
jne
cmp
cmp
inc
pop
movs
addr16
stos
mov
jmp
inc
cmp
test
nop
push
out
or
inc
ret
ret
and
or
fdivr
cmp
stos
push
xchg
xlat
pusha
mov
pop
mov
mov
dec
dec
mov
rol
movs
mov
pop
fucomp
mov
lods
jbe
lods
jb
add
jno
(bad)
call
dec
and
cmp
adc
arpl
push
je
imul
retf
jbe
sub
or
fisub
dec
dec
pop
test
mov
call
lods
fadd
pusha
xchg
popa
mov
push
xor
mov
xor
mov
jle
ret
sub
stos
movs
pushf
mov
mov
pop
fwait
cwde
(bad)
dec
sub
mov
mov
fmul
sbb
xchg
loopne
jmp
pop
inc
and
mov
fdiv
sub
nop
std
popf
je
pop
inc
or
cmps
dec
rcr
out
mov
dec
cdq
dec
(bad)
sbb
shl
inc
js
sbb
dec
jns
jnp
cmp
fld
rol
retf
jnp
add
cmps
les
mov
sbb
shufps
jg
mov
mov
nop
xchg
daa
inc
mov
jle
xchg
rcr
mov
ja
inc
fsub
lea
jb
pop
rol
test
sub
mov
xchg
jnp
popa
icebp
adc
icebp
sbb
xchg
repnz
and
cmp
mov
cli
xchg
cdq
lock
pop
call
add
hlt
add
and
and
xor
add
mov
dec
push
jo
shl
sti
sbb
xchg
pop
movs
jo
hlt
dec
jge
add
and
adc
lds
mov
jmp
mov
cmp
dec
enter
loopne
cmp
cmp
ins
aas
(bad)
aaa
(bad)
push
push
pop
cmps
ror
stos
mov
adc
sar
mov
scas
scas
aaa
aad
retf
mov
bound
(bad)
retf
mov
out
dec
fcomp
pop
mov
mov
fadd
fstp
or
repz
inc
hlt
hlt
dec
adc
adc
xchg
test
ins
mov
push
scas
addr16
imul
adc
int3
fimul
jns
sbb
pop
int
mov
in
mov
pop
cmp
(bad)
or
pop
fimul
(bad)
imul
sub
dec
mov
pop
sub
hlt
dec
ins
fsubr
es
adc
mov
inc
pop
xor
inc
mov
in
or
sub
cmp
pop
aad
pop
and
fs
popf
mov
mov
int3
lock
pop
aaa
jmp
imul
out
mov
add
pop
and
sub
cmc
sti
dec
xchg
imul
inc
jl
cmps
xlat
vshufps
or
xchg
cli
enter
(bad)
and
pop
loopne
inc
push
xor
loope
nop
xchg
mov
and
xchg
mov
push
sbb
je
sub
mov
push
in
add
inc
sbb
(bad)
push
in
dec
call
sub
pop
jl
pop
cmps
bound
(bad)
pop
xor
ja
sar
(bad)
mov
enter
inc
mov
stos
test
imul
jns
jo
in
aad
retf
je
jmp
mov
cld
ss
inc
push
cmp
jp
mov
jl
dec
loopne
mov
and
std
aad
in
loop
lock
neg
sub
movs
cdq
mov
push
mov
dec
arpl
xchg
adc
jne
retf
dec
dec
sub
test
(bad)
repz
icebp
int
push
ja
add
mov
inc
push
out
call
and
jp
arpl
cmps
add
xchg
inc
out
jmp
ret
stc
test
mov
int3
or
into
sti
dec
push
les
call
mov
sbb
push
jns
xor
rcr
xchg
xchg
and
out
jmp
pop
inc
push
dec
std
and
and
in
gs
add
sti
popa
adc
dec
ins
inc
mov
cmp
add
mov
xor
stos
in
mov
scas
jb
shl
fdivr
or
pop
fcmovnu
pop
leave
div
cmp
inc
imul
ja
icebp
out
das
sub
mov
in
lods
jge
test
cmps
mov
xchg
pop
adc
push
xor
jp
xlat
xor
push
lods
inc
arpl
pop
test
imul
loope
or
js
(bad)
fisub
hlt
add
mov
enter
loopne
push
sar
pusha
mov
outs
pop
arpl
add
stos
jns
push
outs
and
mov
les
iret
int
frstor
xor
sbb
jge
ss
in
xor
in
xchg
mov
cld
add
loope
jmp
inc
jle
or
and
jmp
mov
inc
and
jle
mov
mov
jns
sbb
outs
stos
test
mov
xor
int
shl
retf
cmp
cdq
sti
xor
push
les
cmc
push
jns
add
pop
cwde
(bad)
push
mov
fcomp
push
shr
fisttp
dec
lahf
cmp
adc
mov
xchg
pop
pop
push
out
inc
dec
lods
arpl
inc
or
(bad)
push
dec
mov
iret
test
xor
mov
dec
test
cld
pop
icebp
add
call
mov
lods
fwait
dec
mov
sbb
daa
inc
sbb
gs
add
bound
dec
out
shr
xor
jno
sub
ss
xor
out
fs
aad
mov
int
jle
jnp
cli
fsub
not
je
add
iret
mov
fcom
and
sbb
push
cmp
push
fmulp
pop
xchg
dec
(bad)
int
into
adc
jle
add
adc
mov
push
lods
cmp
mov
retf
push
adc
inc
dec
int
and
add
push
mov
aaa
mov
(bad)
sub
out
add
das
xlat
mov
dec
pop
xchg
xchg
sub
call
jmp
(bad)
dec
xchg
xchg
xchg
jle
sysret
cmp
das
mov
inc
cdq
es
(bad)
out
push
hlt
fistp
lock
lock
fst
sar
scas
lods
sar
or
xor
test
and
pop
repz
sahf
je
sub
adc
je
scas
push
push
rcr
ss
scas
cmc
or
or
mov
clc
imul
cmp
out
ins
cmp
jmp
push
xchg
stos
test
ror
sub
jo
mov
dec
popa
repnz
add
inc
loopne
enter
loope
jnp
adc
xchg
(bad)
daa
or
sbb
mov
xor
xor
cli
mov
xchg
idiv
rol
xchg
popa
scas
sar
mov
mov
and
push
call
addr16
(bad)
lods
pop
jno
ret
scas
lods
adc
mov
arpl
imul
ret
inc
inc
adc
cmps
pop
add
sub
ret
in
push
lods
rcr
jle
add
call
popa
cld
dec
xor
jmp
sbb
outs
push
mov
ror
pop
mov
sar
mov
sub
scas
lock
mov
adc
cmp
fstp
jge
ja
mov
dec
pop
sub
int
dec
out
pop
loope
xor
jge
or
addr16
xchg
adc
jg
fwait
or
imul
ss
out
retf
jbe
test
out
fisub
mov
scas
and
sbb
test
push
ds
pop
int
(bad)
cwde
mov
daa
cmps
and
mov
lock
xchg
or
outs
push
mov
mov
lods
jge
fnstsw
(bad)
aad
es
inc
in
test
sti
push
jl
sub
sbb
sbb
repnz
aad
cmps
sub
ja
pop
(bad)
and
dec
out
pop
mov
sub
or
call
dec
std
pop
(bad)
aam
retf
push
movs
sub
fsub
(bad)
push
sub
ret
out
test
mov
rcl
fsubr
in
sbb
in
adc
lock
mov
(bad)
and
sub
dec
shl
test
inc
cld
mov
add
sub
push
adc
mov
pop
sti
fisubr
add
loop
scas
(bad)
xor
cmp
jb
pop
pushf
int
inc
lods
mul
(bad)
sar
mov
jne
push
div
mov
push
pop
xor
movs
xor
fisubr
mov
neg
and
test
ds
scas
pop
pop
push
sub
bound
push
or
pop
push
enter
and
je
(bad)
jne
loop
mov
imul
sub
jne
rsqrtps
rcr
mov
lock
mov
test
js
cmp
ret
mov
ficom
test
js
cli
xlat
jb
cdq
mov
jae
mov
jno
xchg
imul
nop
pusha
sbb
in
sub
mov
xchg
(bad)
xor
pushf
mov
ficom
aam
in
dec
pop
adc
adc
jo
cmps
sahf
jp
sar
cmp
mov
aaa
ins
xchg
pop
das
jmp
pop
pop
mov
mov
(bad)
push
call
mov
je
clc
push
lods
lea
or
rcr
xchg
cmps
pusha
mov
shl
aas
pop
cmp
hlt
(bad)
sbb
mov
stc
xchg
lock
and
imul
mov
mov
ja
adc
retf
xor
push
les
loop
pop
(bad)
outs
mov
push
leave
lods
addr16
push
mov
ss
cs
outs
xor
adc
xor
push
(bad)
sbb
in
ret
not
xor
mov
(bad)
fs
push
lock
cmp
inc
fist
push
(bad)
js
retf
pusha
scas
movs
sub
mov
xchg
outs
and
mov
std
push
ins
mov
or
icebp
pop
movs
dec
mov
add
jno
mov
mov
mov
adc
and
out
inc
aaa
mov
pusha
out
cwde
or
pop
inc
dec
movs
imul
loopne
(bad)
sbb
test
idiv
cmp
nop
adc
cwde
sar
(bad)
or
mov
(bad)
(bad)
jns
mov
ror
mov
or
neg
add
xlat
les
jne
retf
mov
inc
xchg
jbe
vcomiss
rcr
test
dec
cmp
sub
pop
data16
popa
xor
mov
bswap
cmp
sbb
sti
popa
stos
dec
jl
pop
cmovnp
mov
(bad)
dec
fwait
jmp
in
xor
repz
dec
jae
jae
cmps
cwde
ins
call
jle
xor
popa
sub
sub
repz
ror
gs
call
push
aad
sbb
pop
shl
inc
and
rcr
es
movs
mov
mov
or
inc
jmp
mov
add
add
push
ss
sub
iret
adc
xor
push
adc
jno
dec
sbb
out
push
cmps
sub
lahf
aam
mov
gs
in
mov
shl
jne
js
popa
jb
add
mov
data16
ror
push
pusha
dec
cwde
dec
into
inc
in
xor
(bad)
shl
push
in
call
pop
pop
push
push
inc
clc
cs
cmp
vmulps
into
jmp
add
xchg
ror
les
fidivr
mov
adc
pop
mov
out
repz
mov
sub
or
and
add
not
call
adc
push
(bad)
ror
scas
push
outs
fsubr
dec
leave
imul
dec
mov
xor
ins
push
mov
ret
cmp
xor
add
(bad)
mov
daa
dec
jae
mov
add
and
jmp
mov
lods
in
xor
idiv
(bad)
sahf
sub
cmp
jno
test
enter
adc
mov
cmps
sar
stos
mov
sar
in
sbb
call
mov
add
(bad)
sub
add
and
mov
hlt
and
jmp
inc
xor
out
sbb
loopne
mov
outs
test
jbe
cmps
push
clc
(bad)
in
test
iret
or
pop
lods
std
jnp
xchg
fnstsw
in
and
movs
adc
jns
inc
xchg
sbb
or
dec
mov
mov
xor
jns
mov
ds
xor
mov
hlt
pop
add
test
iret
mov
cmps
or
sbb
sbb
rcr
ret
sub
mov
mov
icebp
(bad)
mov
mov
mov
aas
xor
jbe
ror
push
jmp
rcl
loope
inc
mov
daa
loop
mov
jb
xor
sbb
test
loope
call
fistp
push
add
mov
jmp
call
addr16
jge
aaa
retf
push
inc
retf
cs
ds
mov
cdq
daa
call
and
test
enter
je
sar
mov
push
iret
pop
jecxz
mov
dec
sub
fmul
push
(bad)
xchg
lea
mov
dec
popa
ja
in
cmp
xor
dec
ja
test
es
adc
push
ins
mov
add
outs
pop
pop
pop
mov
pop
or
push
mov
aas
push
mov
adc
test
sbb
mov
xchg
nop
add
test
into
or
xchg
jmp
aas
add
(bad)
cli
cli
and
cmps
sbb
sub
shl
and
test
lods
or
cld
mov
jbe
loopne
pop
xchg
xchg
pop
les
and
dec
dec
mov
mov
sub
aam
pop
add
outs
out
mov
icebp
jge
adc
retf
jno
jmp
in
pop
movs
in
lds
push
or
push
imul
loope
dec
cmp
(bad)
or
ret
jo
(bad)
gs
jno
cli
cmp
mov
iret
outs
inc
adc
inc
xor
xchg
stos
in
nop
call
sar
mov
test
xlat
push
ret
add
jo
lods
cwde
fst
sbb
mov
dec
retf
adc
inc
xchg
stos
xchg
push
mov
push
test
pop
lds
fidiv
mov
jp
test
mov
ficom
addr16
and
js
sbb
adc
mov
stos
retf
divps
mov
sbb
add
popa
adc
adc
add
xchg
pop
and
mov
fwait
mov
and
jno
clc
adc
xchg
gs
scas
xchg
mov
popf
push
jl
xor
mov
out
retf
push
(bad)
adc
outs
iret
cld
es
(bad)
fwait
cmp
nop
(bad)
pop
inc
add
test
jo
add
out
pop
(bad)
mov
leave
scas
in
jle
gs
push
sub
sub
movs
in
sar
xor
pop
push
scas
int
push
lock
iret
and
push
daa
jne
push
cmp
bound
fdivr
pop
mov
enter
mov
and
pop
inc
lea
adc
add
jmp
adc
arpl
mov
or
loopne
inc
inc
out
repz
mov
int
dec
mov
add
gs
sub
int
sahf
daa
mov
mov
out
stc
or
addps
add
ins
inc
ins
mov
add
or
xlat
xor
ins
test
jg
call
cmps
pop
pop
scas
dec
rcr
add
mov
out
mov
adc
cmp
imul
cmp
push
xchg
out
and
fwait
mov
and
push
dec
fidivr
out
jl
in
in
cdq
and
xor
in
mov
jbe
xchg
adc
lock
adc
into
call
cwde
ja
mov
mov
push
or
pop
pop
cmp
jp
ds
pop
hlt
dec
fcmovne
cmp
inc
data16
fimul
xor
fisubr
inc
stos
pushf
test
inc
(bad)
std
outs
mov
sbb
fist
jae
dec
mov
fst
xchg
dec
xor
dec
jb
or
pop
xchg
jle
or
jmp
out
fcom
or
out
test
pop
push
not
cmp
int3
xchg
xor
in
mov
je
push
push
repz
or
jno
or
movs
sbb
stos
xor
mov
sbb
mov
imul
push
add
add
dec
cmps
xor
adc
jmp
(bad)
neg
repz
ja
jecxz
add
pop
mov
lds
mov
lock
data16
add
or
xchg
jg
cmp
loope
xchg
out
and
fcomp
fwait
dec
out
xchg
(bad)
jp
mov
in
xchg
add
mov
push
jne
ins
mov
push
jb
jge
into
fistp
sbb
or
jp
mov
cmc
retf
mov
jbe
jp
jns
jb
call
fs
cmps
push
or
cmp
cmp
fucomip
test
inc
xchg
ins
xchg
push
add
xor
adc
push
sbb
stc
(bad)
ins
jle
imul
dec
adc
ss
sbb
and
bound
sub
fstp
mov
xchg
(bad)
ins
cmp
cmp
stos
ror
mov
xchg
(bad)
push
in
rcl
push
std
or
int3
and
sub
call
cwde
add
mov
stos
xor
pop
ret
pop
push
stos
mov
xchg
add
in
lahf
jecxz
pop
add
es
mov
dec
fist
pop
imul
xor
xchg
xor
int
dec
jl
das
dec
jno
aad
pop
or
addr16
iret
jg
xor
inc
dec
loope
pop
out
jg
cmp
or
xor
pop
aaa
sub
not
pushf
int
or
sahf
and
and
jl
jo
push
pop
jp
cmp
es
ds
jns
imul
sub
sti
daa
ja
xlat
adc
inc
daa
sbb
call
mov
pop
leave
(bad)
(bad)
mov
sub
add
icebp
pop
adc
icebp
pop
push
aad
std
cli
test
cli
nop
cmp
mov
ds
je
das
jecxz
js
test
scas
inc
or
(bad)
cli
jle
retf
es
ins
xchg
mov
sbb
inc
mov
push
fadd
mov
fld
mov
mov
mov
sbb
sbb
(bad)
pop
push
sub
adc
sbb
mov
popf
test
fst
fdiv
addr16
mov
mov
mov
ror
jl
into
imul
cmp
int
icebp
cmps
pushf
(bad)
jl
pop
mov
lods
cmc
and
or
je
ret
sbb
jl
mov
js
sahf
mov
mov
daa
jge
push
xlat
inc
push
jnp
mov
add
sbb
ret
add
shl
(bad)
mov
sahf
int
xor
jmp
jns
sbb
xor
jmp
lds
aam
and
dec
addr16
call
loop
xchg
jno
(bad)
adc
or
lods
test
int
adc
add
mov
js
xchg
xchg
neg
or
xor
add
arpl
push
adc
int3
sub
lock
ror
dec
mov
mov
and
cmp
xchg
shl
das
inc
sbb
or
repz
nop
mov
int
shr
ror
test
xor
sbb
jb
rcr
push
movs
in
pop
and
dec
ins
sbb
in
pushf
adc
mov
adc
mov
xchg
or
lock
mov
(bad)
into
push
pop
popf
std
inc
imul
(bad)
and
sbb
adc
and
pop
jecxz
pop
jecxz
(bad)
mov
mov
cli
pop
adc
dec
call
push
jno
int
call
sub
stc
idiv
je
ins
in
cmp
lock
ret
imul
movs
jecxz
mov
jns
je
push
push
jae
clc
fbld
jne
and
fidiv
gs
mov
outs
push
sbb
jns
mov
pop
xchg
fadd
ja
out
sti
cld
or
(bad)
mov
xor
xchg
lds
sub
jle
or
mov
outs
dec
or
jmp
js
aas
jmp
(bad)
je
rcl
push
lock
sub
sar
jno
ret
dec
mov
sub
ss
or
mov
sbb
ss
jbe
or
pop
dec
push
push
jbe
sahf
mov
dec
adc
add
inc
or
and
push
bound
and
out
mov
lea
nop
icebp
mov
mov
in
cmps
leave
mov
pop
(bad)
sbb
test
aad
adc
dec
imul
call
mov
iret
mov
ror
mov
xchg
cmc
mov
or
test
lahf
mov
sar
retf
out
adc
popf
jnp
rol
ret
imul
in
pop
das
les
mov
mov
or
stos
jb
pop
rol
or
mov
retf
(bad)
arpl
add
(bad)
cmp
xchg
jno
hlt
xchg
leave
sub
adc
add
mov
and
adc
jmp
inc
sbb
pop
add
(bad)
and
xchg
test
aad
mov
loope
xor
add
fist
(bad)
push
and
xchg
inc
push
or
xor
ins
retf
pop
jmp
inc
pop
test
lds
push
sbb
and
sbb
xchg
aas
xchg
jnp
add
lahf
ror
cmps
retf
(bad)
and
jne
retf
mov
jecxz
mov
ret
aaa
ret
inc
je
stc
popa
fcom
(bad)
sti
arpl
rol
fbld
test
mov
scas
movs
lock
xchg
retf
(bad)
jl
push
xlat
loopne
jae
stc
xor
sbb
mov
mov
daa
cmp
cmp
jmp
in
xor
push
mov
fimul
pusha
adc
fcmovnb
rcr
inc
enter
cmp
imul
fstp
rep
lea
push
or
outs
push
in
xchg
pop
sahf
push
mov
cmps
add
xchg
test
sub
int3
aaa
dec
fstp
in
or
cwde
xchg
sahf
adc
inc
and
ds
js
push
cmp
mov
shl
and
pusha
in
outs
inc
bound
lahf
ficomp
dec
mov
jb
jle
arpl
xchg
add
loop
sbb
ja
xor
sub
retf
sbb
aad
sahf
outs
add
mov
mov
(bad)
pop
sbb
adc
test
pop
icebp
mov
cmps
or
int3
xchg
push
ins
mov
or
and
xlat
xchg
dec
pop
cmp
push
clc
fsubr
push
xor
and
xchg
mov
or
mov
lds
xor
xchg
imul
fsub
lock
cld
xchg
fidivr
jg
ja
push
clc
imul
cwde
out
push
or
imul
mov
pop
jle
cld
nop
jl
cli
inc
push
inc
sbb
sti
ss
xor
add
inc
or
shl
lea
or
adc
aas
mov
aad
adc
mov
mov
fwait
mov
and
add
adc
loope
and
call
mov
mov
add
inc
mov
jecxz
ss
push
sbb
jmp
and
in
xor
inc
int3
dec
(bad)
pop
sahf
push
mov
ss
jo
jno
push
mov
jecxz
mov
stos
pop
xor
in
xchg
push
cmps
xor
adc
xchg
mov
xor
inc
sub
inc
sub
mov
dec
mov
cmp
pop
repz
mov
add
sbb
mov
xchg
repz
(bad)
comiss
add
sbb
and
repz
repnz
aaa
retf
pop
inc
stos
sbb
ds
mov
mov
cld
mov
mov
sbb
push
jne
mov
mov
aas
xor
sbb
cmp
push
or
pop
jne
cmp
gs
sub
mov
stc
xor
xchg
(bad)
jno
inc
push
or
scas
out
clc
rcl
pop
(bad)
or
test
inc
lea
fbld
pop
xchg
hlt
adc
dec
test
jmp
sbb
nop
ds
mov
stos
push
aas
enter
and
lea
lock
idiv
inc
and
dec
inc
popf
inc
adc
rcl
push
pop
push
loopne
mov
dec
xchg
call
push
(bad)
mov
dec
addr16
or
lods
mov
ss
push
push
pop
ja
ins
xor
ret
in
push
std
mov
lods
pushf
es
push
test
int3
les
mov
in
jns
dec
das
cdq
ja
loopne
repnz
lea
push
out
push
push
xchg
jp
pop
fsubr
addr16
sbb
addr16
push
adc
arpl
cmps
and
sub
inc
jmp
dec
mov
pop
push
cld
or
mul
pop
shl
pop
loop
or
jno
push
or
pop
ficom
jle
xchg
mov
sahf
cs
mov
out
or
daa
fcom
mov
jmp
out
xchg
mov
inc
pop
add
ret
gs
and
lods
add
stos
mov
mov
retf
dec
sub
and
xor
xor
jae
dec
fcmovnb
lock
test
push
bound
jae
cmp
arpl
mov
jg
cmps
or
std
jo
popa
xchg
aam
sbb
add
ror
inc
mov
dec
sbb
or
leave
or
cwde
cmp
push
jp
jmp
inc
sub
push
je
cdq
lea
ret
mov
ja
int
mov
mul
lea
cmp
movs
std
dec
jmp
pushf
mov
mov
cmp
lods
popa
push
jecxz
jl
jne
mov
movups
add
dec
inc
xchg
and
dec
xor
test
outs
jmp
or
jmp
cmp
adc
pop
stc
gs
ds
mov
adc
mov
dec
pop
clc
jecxz
outs
ret
popa
dec
test
pop
and
in
mov
out
sbb
jns
icebp
xlat
xchg
stos
or
xchg
xchg
ret
mov
int
call
mov
clc
and
inc
sub
pop
sbb
push
add
ds
pusha
sti
xor
cdq
into
cmp
outs
sub
enter
repnz
call
mov
pushf
call
push
movs
shl
mov
pusha
jo
int3
shl
mov
aas
mov
and
out
jecxz
xor
mov
fs
shl
adc
into
and
jnp
aaa
push
nop
mov
or
jg
ret
fcmovnu
stos
in
ds
mul
or
(bad)
push
mov
ins
loope
pop
inc
pop
sbb
and
fs
and
fisub
sbb
mov
xor
cmp
mov
pop
fistp
test
jbe
(bad)
fdivr
sub
cmp
repz
fwait
push
sbb
inc
cwde
popa
push
or
jbe
xchg
int3
(bad)
mov
cmp
xor
gs
inc
dec
imul
(bad)
in
ss
sti
nop
repz
add
sub
je
repnz
fmul
(bad)
in
or
stos
mov
xchg
popf
fstp
ss
push
fsubrp
int3
rol
inc
test
loopne
xor
mov
push
mov
mov
arpl
adc
(bad)
adc
xchg
lods
cs
dec
sub
cs
push
bound
ss
inc
inc
mov
sbb
jl
je
clc
xlat
xor
loop
stos
rcl
add
and
(bad)
cmc
mov
adc
ficom
xchg
rcr
dec
xor
xor
adc
or
jge
or
xor
cmp
and
clc
stos
ret
mov
dec
ror
div
xchg
xchg
loope
movs
loop
inc
jmp
aam
jno
(bad)
enter
xchg
shl
movs
pop
outs
jle
in
shr
jns
xor
les
cmps
nop
adc
mov
or
push
test
push
xchg
(bad)
sahf
or
xchg
loopne
jo
jl
inc
aaa
out
pop
sbb
fnsave
or
mov
(bad)
ins
adc
sbb
sbb
xchg
cs
daa
rcr
fs
pop
xchg
and
adc
xchg
int
xchg
popa
jmp
stc
adc
add
fsubr
(bad)
jno
xchg
jecxz
call
xchg
ss
cli
pop
mov
xlat
dec
jnp
jle
jmp
nop
daa
test
stos
nop
mov
inc
lods
pop
stc
jecxz
or
ins
(bad)
es
inc
rcr
test
adc
jmp
or
mov
cmp
mov
mov
repz
jle
mov
arpl
fsubrp
add
popa
shl
inc
aad
pop
les
daa
into
sbb
shl
dec
test
aaa
jne
mov
and
jmp
cmps
cmps
add
xor
push
and
and
or
fisttp
jl
out
push
xchg
icebp
cdq
in
inc
mov
daa
ja
xor
arpl
hlt
push
add
xchg
inc
arpl
inc
jp
test
fistp
push
out
xchg
mov
div
mov
enter
test
or
mov
int
ss
adc
push
popf
mov
lahf
jp
in
jle
stc
lea
repnz
aaa
mov
ss
xlat
mov
mov
push
lods
hlt
xchg
and
cli
and
mov
inc
int
mov
pop
lods
nop
inc
dec
(bad)
rcr
or
stos
loopne
jle
add
jne
jmp
dec
pop
ret
add
lahf
cmc
push
mov
fsub
mov
out
push
and
add
dec
into
test
pop
sbb
push
xor
add
jns
inc
rol
movs
adc
fcmovne
movs
add
jl
es
adc
jp
and
sub
push
xchg
fxch
shl
stos
adc
fldenv
lods
cld
jb
jle
xchg
in
inc
retf
es
sbb
xchg
adc
repz
es
or
pop
pop
inc
and
pop
lods
dec
xchg
sbb
mov
pop
pop
sar
push
fstp
cmp
sbb
retf
je
mov
pop
and
inc
out
add
(bad)
xor
inc
mov
xor
xchg
cmc
(bad)
stc
push
xor
shl
cmp
jge
push
(bad)
aad
imul
add
shr
out
cdq
lods
xchg
mov
jp
test
add
pop
sbb
xchg
ss
cmp
or
and
enter
pop
mov
pop
pop
aaa
dec
sbb
xchg
(bad)
xor
push
(bad)
lea
cmp
imul
xor
mov
cmp
xchg
xchg
je
jecxz
push
in
sbb
mov
push
dec
in
xchg
adc
mov
and
mov
xchg
enter
pop
adc
fisub
adc
enter
inc
sub
or
dec
dec
push
nop
imul
jns
dec
fwait
xchg
pushf
dec
sub
mov
mov
cmp
fistp
xchg
adc
out
sbb
ficomp
xor
xchg
ret
ror
and
jg
or
int
js
mov
xlat
xchg
jmp
out
add
push
in
out
sub
daa
inc
adc
lock
stos
in
xor
xor
mov
(bad)
and
(bad)
pop
mov
xchg
jmp
fmulp
imul
push
xor
scas
imul
fst
fidiv
dec
add
out
mov
dec
adc
mov
ja
ficom
jae
or
sbb
add
xor
or
mov
inc
retf
movs
mov
jmp
test
jecxz
(bad)
or
loope
pop
cmp
add
and
push
xchg
sbb
aam
fimul
add
ins
cld
(bad)
int3
jns
xor
mov
xchg
mov
mov
dec
fwait
movs
mov
inc
dec
xlat
add
mov
push
mov
xchg
jge
add
jg
je
sbb
pop
loopne
leave
jno
dec
push
pusha
or
inc
inc
cmp
ss
outs
push
pop
cli
aas
sbb
cwde
sub
inc
arpl
inc
outs
push
mov
jnp
jae
mov
outs
push
xor
stos
mov
fsubrp
xchg
and
hlt
push
push
mov
sub
jge
daa
mov
in
adc
dec
jle
das
and
push
fld
cs
adc
(bad)
loopne
push
in
cmp
push
shl
fld
gs
shr
out
test
lods
jl
pop
jecxz
push
repnz
lods
mov
pop
sub
ja
mov
push
lock
(bad)
fst
jno
test
dec
(bad)
mov
(bad)
fstp
dec
daa
ss
and
test
sub
xchg
dec
out
mov
addr16
ret
popa
xchg
dec
jnp
lods
retf
mov
mov
sub
push
sbb
sbb
dec
mov
je
add
add
pop
sbb
push
outs
repnz
fdiv
mov
push
and
or
pop
or
sbb
sub
xor
jae
rcl
cmps
mov
or
ja
pop
adc
inc
fnstsw
mov
ins
jae
inc
add
jb
jae
outs
push
pop
je
or
push
inc
addr16
add
xchg
inc
lahf
sub
sub
cwde
cmp
add
push
jmp
fmul
xchg
xchg
jp
add
cs
push
mov
push
or
addr16
in
xchg
aam
xchg
mov
pop
mov
xchg
push
cs
fwait
(bad)
shl
cmp
daa
cmc
das
popa
cdq
dec
ins
aam
add
jmp
sub
test
push
ret
inc
jl
pop
jle
retf
fisubr
int3
mov
add
not
rcl
neg
pop
adc
int3
pop
dec
pop
int
mov
cmp
jne
js
outs
ret
jl
pop
dec
jmp
push
jle
xchg
lahf
push
ja
add
(bad)
pushf
(bad)
call
pushf
bound
stc
adc
jl
shl
xor
mov
xor
push
shr
sbb
mov
sub
jbe
bound
and
pop
shr
mov
pop
mov
push
or
pop
pop
mov
ss
call
test
in
lock
es
pop
jo
ja
cmp
iret
adc
out
mov
fwait
pop
hlt
xchg
cmc
cmp
cli
in
cmps
xchg
movs
jo
cwde
mov
sahf
xchg
pusha
cmp
push
(bad)
cld
loopne
repnz
inc
dec
mov
scas
dec
ret
popf
sbb
rcr
stos
sbb
(bad)
pop
sar
rol
sbb
popa
lahf
mov
xchg
fist
inc
sbb
add
imul
(bad)
jg
jne
dec
in
cmp
mov
push
addr16
xchg
ret
fwait
adc
mov
cli
cmp
aaa
repnz
movs
cmps
dec
sar
inc
jmp
cmps
ss
jge
cdq
push
fimul
dec
cmp
aaa
xlat
ret
mov
jns
je
(bad)
movs
fcomp
fisubr
jmp
push
mov
icebp
cmc
fadd
lea
inc
mov
jmp
adc
pop
fst
add
daa
dec
shl
std
jmp
add
jle
mov
sahf
mov
call
adc
loop
mov
sbb
mov
mov
push
jecxz
sub
int
(bad)
(bad)
jns
inc
pop
out
cwde
cmps
xchg
rcl
pop
sbb
loop
mov
inc
sbb
pop
inc
(bad)
out
and
dec
and
mov
push
test
or
mov
das
out
add
xor
std
pop
and
inc
mov
inc
sbb
fwait
mov
jl
jmp
imul
cmps
outs
pop
sub
adc
mov
mov
es
arpl
retf
jmp
mov
add
push
pop
(bad)
xchg
push
jg
xchg
xor
shl
add
cli
jbe
jmp
xor
ss
xor
shl
or
jle
(bad)
aas
push
retf
add
inc
je
pop
xchg
xchg
push
fld
enter
xor
push
add
sub
jle
mov
sbb
and
sbb
add
mov
scas
mov
test
xchg
mov
gs
add
(bad)
repnz
mov
out
stc
xor
or
ror
test
jmp
or
dec
stc
mov
push
pushf
push
cld
stos
push
dec
mov
test
adc
push
call
mov
cmp
cdq
mov
(bad)
and
fmul
or
hlt
(bad)
mov
inc
ins
xchg
push
xor
je
mov
outs
cmp
xor
pop
mov
pop
add
mov
fnsave
iret
sub
aam
shl
and
dec
mov
sbb
adc
adc
out
mov
push
cmps
adc
je
sbb
jb
ss
adc
ja
dec
test
mov
cmc
add
mov
ret
fs
enter
in
je
mov
sub
and
adc
(bad)
pop
in
stos
data16
ja
push
dec
das
cmp
retf
ds
cmp
mov
or
stos
push
in
mov
push
bound
push
push
mov
sbb
in
push
and
pop
test
cmp
mov
sti
jge
aam
pop
ins
stc
mov
out
in
fstp
xchg
mov
pusha
xor
pop
lods
outs
pusha
bound
arpl
lods
lds
int
add
cmp
arpl
and
adc
jmp
jge
jo
scas
jmp
mov
jmp
pop
adc
fnsave
int
test
jns
test
xchg
stos
xchg
imul
or
js
jmp
or
sub
jge
xor
shl
inc
mov
adc
movs
lods
mov
mov
inc
and
and
adc
cmps
dec
dec
icebp
ins
push
cmp
jg
repz
aad
icebp
sar
jmp
cmp
fwait
movs
cmp
cmc
mov
or
and
lds
mov
adc
xor
cmps
inc
aad
dec
sahf
mov
sti
in
add
xchg
mov
(bad)
fsubr
pop
cmp
inc
mov
xchg
mov
jnp
sbb
repz
adc
mov
lea
jb
and
out
xchg
ds
mov
imul
inc
mov
and
sub
sub
nop
test
rcr
sti
fwait
add
jne
push
xor
fld
clc
jmp
inc
lds
adc
sub
out
test
ja
cmp
cmp
bound
loop
jnp
cmp
or
dec
push
ins
add
cmps
add
mov
jmp
push
aas
jo
icebp
dec
jmp
sahf
ror
(bad)
pusha
in
ins
stos
add
icebp
inc
jmp
inc
cmp
add
(bad)
jmp
inc
inc
(bad)
adc
into
push
es
out
pop
mov
adc
adc
clc
inc
dec
imul
pop
sub
push
fcomp
sub
push
mov
jge
push
mov
arpl
movs
dec
cmps
push
fucomi
xchg
inc
ret
cld
xor
lods
dec
repz
repz
cdq
and
cmp
dec
push
push
xlat
les
outs
int3
push
xor
mov
fdivr
mov
or
dec
(bad)
les
aam
ds
fwait
adc
repnz
sbb
pop
push
jle
mov
into
das
idiv
repnz
sar
in
mov
or
sti
jne
iret
das
mov
ins
mov
in
sub
pop
mov
repnz
mov
repz
mov
inc
or
pop
push
cmp
(bad)
adc
sbb
mov
daa
pop
test
aad
inc
adc
mov
inc
mov
outs
xchg
jnp
xor
(bad)
lea
mov
mov
jmp
stos
outs
es
iret
leave
xor
test
ret
xor
ins
(bad)
test
mov
(bad)
cwde
push
mov
adc
xor
dec
push
test
popf
xor
jo
cdq
cmp
push
lds
jge
pop
xchg
inc
cmps
je
add
dec
sub
mov
test
aad
sahf
(bad)
lds
loopne
test
add
or
lds
sbb
aas
sub
loop
sub
imul
jnp
fisubr
add
lds
lods
mov
es
mov
int3
sbb
fild
rcl
popa
out
retf
and
xchg
lods
dec
jecxz
out
inc
shl
pop
xchg
int3
loopne
dec
icebp
das
ins
iret
test
icebp
cmc
rcl
xchg
add
mov
pop
das
sub
outs
mov
test
and
add
aad
cmp
xor
mov
ja
pop
inc
(bad)
outs
xor
or
xchg
outs
popa
loop
ret
icebp
cdq
pop
fwait
das
shr
inc
cmp
xchg
jmp
sar
icebp
push
mov
mov
sahf
inc
jecxz
lea
add
xchg
icebp
(bad)
ficomp
cmps
leave
or
sub
cmp
or
pop
adc
and
in
in
xor
jecxz
adc
aam
push
xchg
nop
idiv
mov
cmc
adc
outs
add
push
retf
adc
mov
ror
mov
pop
push
ret
js
stos
rcr
nop
jo
test
cmps
or
mov
jnp
imul
inc
push
in
lods
push
pop
jmp
cmp
dec
out
dec
or
sub
(bad)
movs
sub
hlt
sub
push
fcomp
add
call
dec
adc
popf
leave
data16
dec
ja
add
dec
das
mov
and
jb
sub
in
mov
adc
xchg
lds
ror
xor
and
mul
add
lahf
addr16
ds
pop
js
mov
mov
pop
in
aam
dec
movs
sti
adc
mov
test
retf
adc
cmp
(bad)
retf
fstp
jb
repnz
pop
mov
retf
add
shl
stos
dec
jecxz
movs
test
loop
inc
pop
mov
add
retf
dec
scas
inc
rol
test
rcl
sub
mov
xor
and
push
push
out
data16
test
ss
imul
dec
out
mov
push
xchg
and
add
cmp
aad
data16
and
popa
push
dec
scas
inc
xchg
cld
cmp
ficomp
push
add
sar
xor
xor
aas
(bad)
loop
and
xor
fbld
cs
cmp
ret
mov
add
dec
xor
out
(bad)
repnz
retf
pusha
mov
lods
sub
enter
iret
cmp
int
sti
mov
jae
jnp
(bad)
jecxz
xchg
push
mov
in
and
dec
outs
push
mov
iret
and
push
pop
popf
mov
add
pop
fcomp
sub
cli
out
adc
pusha
ds
or
cmps
mov
rcr
arpl
cmp
retf
push
neg
je
fnsave
movs
inc
lock
outs
lods
mov
push
(bad)
cmp
mov
xlat
aaa
shl
sub
inc
shl
mov
inc
xor
fwait
outs
adc
imul
and
shl
push
add
jmp
ret
cmp
cmp
or
arpl
addr16
and
aas
fsub
popa
adc
xchg
mov
stc
fdivr
aas
xor
cld
jge
repnz
ss
neg
add
mov
or
repnz
repnz
mov
fld
inc
addr16
aas
aaa
push
add
push
sti
fbld
in
ja
adc
(bad)
das
je
inc
in
mov
or
and
ror
jns
lea
rcr
ins
data16
mov
cdq
loopne
inc
push
fwait
xacquire
push
cdq
call
repnz
push
fs
ins
push
add
pusha
or
mov
sbb
push
in
sbb
and
mov
imul
in
(bad)
cmp
sar
inc
mov
sbb
call
push
sbb
lock
stc
jmp
push
cli
xor
xlat
or
lods
cmc
lea
test
xor
add
cmp
jecxz
pushf
jb
push
arpl
in
sub
mov
lods
mov
out
push
fcom
(bad)
adc
(bad)
pop
push
imul
fwait
pop
mov
mov
bound
push
add
hlt
sbb
jmp
jmp
lods
cld
cmp
imul
sbb
pop
std
into
jl
sub
fwait
test
in
fs
js
vmovhpd
outs
add
and
movs
jbe
mov
out
add
ror
pop
fild
xor
mov
leave
and
stos
pop
push
outs
xchg
adc
sbb
sar
sbb
and
inc
shr
es
js
inc
call
xlat
outs
repz
iret
out
jns
daa
clc
ret
push
sub
ss
idiv
inc
icebp
dec
mov
mov
(bad)
fld
mov
jmp
cmp
cld
push
adc
jno
repz
inc
mov
arpl
fnstenv
pop
iret
cdq
in
push
aaa
mov
retf
imul
jg
lods
imul
mov
mov
sbb
mov
repz
lods
ja
enter
push
data16
aam
ja
mov
call
push
retf
jae
or
fidiv
push
mov
pop
popa
mov
jne
fmul
adc
or
loop
xor
jg
jg
push
add
cmps
mov
(bad)
pop
or
test
js
push
push
setns
inc
mov
test
fucomi
pop
jecxz
movs
sbb
ror
(bad)
sbb
aad
xor
adc
(bad)
inc
cmc
jmp
imul
ret
ja
sbb
dec
js
push
scas
mov
xor
(bad)
imul
pop
lea
scas
pop
mov
shr
sub
test
scas
jp
popf
pop
jmp
imul
add
repz
popa
add
adc
push
or
js
xor
push
rcr
ins
out
cmp
test
xor
mov
add
cmp
or
add
mov
mov
hlt
ret
lahf
nop
mov
fcmovb
movs
pop
cmps
imul
fnstsw
inc
mov
jp
push
dec
inc
dec
and
cdq
mov
sbb
shl
stc
std
jno
addr16
jmp
aad
sbb
jbe
mov
dec
or
sub
jle
push
adc
jb
mov
ss
or
push
pop
adc
fdiv
std
cmps
or
jg
into
push
mov
clc
repnz
sub
or
sbb
push
mov
xchg
dec
div
jle
rcl
cmp
mov
cmps
adc
push
mov
sbb
das
popa
repz
fdiv
xlat
and
mov
sub
pop
and
pop
pop
packsswb
add
dec
push
sbb
push
rol
movs
pop
stc
call
dec
shl
cdq
clc
shr
test
mov
call
mov
scas
fcomp
xchg
jmp
fst
push
fs
js
inc
lds
(bad)
lods
test
xor
pop
sub
mov
mov
push
ins
sub
xor
inc
mov
mov
sbb
xor
sbb
ja
out
push
xor
cld
add
pop
test
mov
daa
out
cwde
adc
or
fs
retf
add
push
mov
push
add
sbb
(bad)
xlat
add
sbb
les
mov
cmp
mov
or
scas
xchg
and
in
pop
dec
mov
std
jo
popa
test
cmp
jl
cmp
call
popf
(bad)
adc
pusha
add
mov
out
push
push
jo
js
cmp
(bad)
pop
cmp
(bad)
jnp
aam
out
hlt
in
ror
adc
mov
into
pop
jb
loopne
enter
in
mov
add
call
in
mov
push
mov
inc
push
into
sbb
adc
push
xor
xchg
retf
int
jp
leave
push
mov
adc
jecxz
cwde
adc
out
adc
cmp
pop
sbb
pop
int
mov
or
add
sar
dec
test
push
sahf
outs
xor
aaa
jno
mov
loopne
mov
sbb
in
sbb
getsec
mov
icebp
jns
and
push
test
lds
fdivr
cli
jecxz
addr16
lods
scas
push
mov
cmp
sbb
retf
sbb
dec
xor
clc
sub
(bad)
(bad)
retf
and
add
out
xchg
pop
jnp
or
sar
imul
bound
bound
(bad)
xlat
into
stos
sbb
jbe
adc
addr16
inc
and
and
xchg
fmul
je
jb
sub
xchg
add
push
inc
fidiv
push
cmp
inc
add
inc
xchg
pop
(bad)
xor
inc
mov
xor
sub
imul
and
mov
cmc
mov
inc
or
xchg
sti
or
inc
ror
pop
shl
shl
shr
pop
jne
pop
shl
sub
add
outs
dec
lock
add
mov
jp
ds
(bad)
outs
retf
jnp
outs
xchg
(bad)
xor
ret
in
xchg
xchg
(bad)
mov
sub
mov
mov
or
and
pop
int
hlt
fnsave
xor
pop
btc
gs
and
cmp
shr
dec
push
mov
std
loop
mov
pop
(bad)
push
and
fild
fdivr
lock
fiadd
pop
push
jl
out
cmp
pop
imul
sbb
or
sbb
cs
jmp
retf
in
mov
pop
xor
cmp
dec
mov
sub
xchg
retf
rol
pop
sbb
add
add
shl
push
xor
out
outs
(bad)
jmp
mov
test
mov
xchg
and
ins
xchg
adc
retf
sahf
test
or
ret
xchg
and
add
mov
ja
imul
ficom
(bad)
in
shl
jb
mov
push
adc
push
es
movs
mov
add
jp
cmp
stos
cmc
jl
adc
loopne
das
pop
aam
lods
(bad)
aad
cmp
mov
mul
adc
xchg
je
fsubr
ds
scas
push
(bad)
inc
xor
pop
mov
or
mov
inc
pop
jbe
fldln2
iret
adc
aas
sbb
sub
jmp
push
jge
jl
xor
loope
xchg
pop
and
cmc
enter
xchg
aad
lods
or
movs
mov
jle
test
inc
popf
ret
imul
mov
or
jmp
jno
mov
xor
fadd
dec
pushf
sbb
xchg
pop
pop
or
push
enter
xlat
das
sub
shl
loop
cdq
or
mov
jo
pop
stos
std
sbb
pop
imul
aas
ins
jmp
cmps
mov
inc
out
fnstsw
or
or
nop
xlat
adc
enter
lahf
inc
add
out
xor
or
sub
ret
leave
(bad)
xchg
push
sahf
cmc
int
add
xchg
fsub
outs
mov
jp
xor
adc
ins
ja
jne
or
(bad)
stc
shl
mov
pop
outs
push
and
cmp
mov
mov
push
cwde
jmp
test
jns
push
movs
cli
ss
lds
or
test
push
call
test
(bad)
sbb
mov
inc
and
mov
sub
cmps
push
dec
stos
xor
loope
xchg
aad
dec
mov
and
push
aad
addr16
out
ja
pop
loope
fsincos
(bad)
movs
sub
ss
push
xlat
std
pop
and
fcomp
stc
xor
retf
out
enter
shl
(bad)
test
pop
dec
jne
adc
out
faddp
inc
sbb
(bad)
pop
in
xlat
jge
div
cdq
or
ror
nop
inc
inc
inc
(bad)
pop
mov
and
shl
sahf
inc
aad
fcmove
fucomi
hlt
adc
into
mov
hlt
add
in
cmp
pop
or
lahf
sbb
add
sti
inc
dec
(bad)
or
dec
sbb
inc
xor
fistp
repz
mov
and
test
or
dec
xor
push
lahf
leave
imul
retf
movs
and
test
xchg
sub
pop
xchg
data16
xchg
and
outs
and
mov
add
mov
mov
rol
mov
ja
aam
fbld
out
add
(bad)
outs
or
cmc
inc
and
neg
lock
(bad)
pop
hlt
xor
mov
xchg
jns
add
inc
mov
hlt
scas
imul
loope
test
ds
jne
xor
cmps
sub
mov
xchg
dec
mov
popf
adc
ror
jg
movs
hlt
cdq
mov
arpl
nop
inc
mov
out
jb
and
mov
pop
xor
push
inc
ds
pop
xor
xor
repz
jmp
outs
call
cmp
adc
into
fsubr
pusha
jo
fld
adc
mov
mov
loope
or
and
mov
mov
mov
aaa
outs
sbb
mov
shr
inc
popa
mov
pop
inc
call
gs
or
mov
jne
cs
inc
mov
cld
or
jmp
in
icebp
cmp
dec
mov
and
outs
ftst
cmp
arpl
xadd
sbb
jl
lds
mov
rol
jle
push
push
loope
or
xor
(bad)
fsub
stos
xchg
(bad)
fwait
int3
test
test
mov
test
xchg
pop
popa
dec
loope
and
cmp
in
mov
in
dec
mov
loop
xchg
rol
call
(bad)
push
mov
add
mov
mov
mov
out
outs
adc
mov
sbb
jmp
pusha
call
sub
add
inc
xchg
mov
mov
test
fxch
pop
push
movs
mov
shr
mov
mov
sbb
fstp
push
pusha
or
push
nop
in
stos
push
call
jg
movs
nop
inc
mov
mov
inc
ja
dec
mov
pushf
out
neg
cdq
inc
xchg
pop
pop
loope
jno
add
sbb
push
mov
sub
jnp
adc
jo
test
pop
lahf
enter
lods
mov
jecxz
fisubr
pop
imul
pop
adc
fisttp
push
mov
fiadd
add
jge
pop
mov
loopne
stc
gs
or
les
icebp
xchg
je
das
and
fwait
adc
sbb
mov
pop
out
aam
movs
xchg
adc
xchg
inc
and
push
nop
(bad)
ret
sub
pop
popa
jo
sub
fdiv
rcr
pop
test
ins
xor
test
add
(bad)
(bad)
(bad)
std
out
fimul
and
mov
mov
scas
lds
sub
and
push
adc
arpl
cwde
cmps
daa
rcl
add
inc
js
mov
cmp
enter
xchg
enter
pop
ss
pop
and
add
pushf
jae
imul
inc
aaa
and
cmp
in
je
inc
jo
push
lock
iret
or
mov
sub
enter
xor
mov
xlat
out
mov
cs
mov
sub
lods
add
sbb
in
fnstsw
ret
or
xor
add
push
xor
inc
cmps
cwde
and
sub
pop
jmp
popf
pusha
and
add
jbe
inc
test
mov
clc
jecxz
hlt
(bad)
clc
or
pop
dec
es
dec
cmp
call
jp
leave
imul
push
fidivr
mov
or
int3
stc
dec
js
adc
or
fcom
or
out
or
jge
inc
call
xchg
add
ficom
sbb
dec
push
ins
mov
cmc
pop
out
in
sbb
mov
ret
shl
cli
adc
call
cs
call
sub
push
cli
push
(bad)
scas
push
sbb
pushf
test
and
in
(bad)
ins
pop
inc
mov
xchg
sbb
dec
shr
je
push
loop
cmp
pop
mov
push
(bad)
and
xchg
mov
fisttp
cmps
dec
xchg
mov
pop
adc
inc
arpl
(bad)
xchg
cmps
mov
rol
jmp
std
or
stos
add
jbe
mov
and
icebp
dec
cld
and
std
pushf
add
test
pop
(bad)
fmul
out
es
repnz
inc
pop
cmc
lods
push
mov
dec
jmp
dec
mov
or
fild
stc
add
loope
jbe
fidiv
and
jne
pop
mov
xchg
mov
inc
pop
jmp
outs
leave
sub
imul
jl
popa
hlt
fs
fisttp
mov
pusha
cmc
or
jecxz
push
arpl
adc
adc
pop
loopne
xchg
mov
jb
and
push
call
call
mov
pushw
into
cli
inc
add
adc
sbb
mov
adc
xchg
bound
adc
sub
push
sub
jp
mov
cmc
mov
shl
repnz
call
mov
(bad)
icebp
cmp
dec
cs
or
add
and
mov
repnz
inc
push
jmp
ja
addr16
xor
es
inc
in
outs
loop
into
ret
adc
popa
in
dec
and
sub
js
mov
and
es
dec
xor
mov
js
mov
jl
std
lods
pop
mov
mov
adc
pop
jns
adc
and
and
ds
ror
sub
jo
dec
mov
mov
cld
fsubr
pop
mov
nop
jns
cmp
cmps
pop
xchg
mov
cmp
jb
cmp
pop
lahf
mov
push
or
loopne
(bad)
fwait
out
jmp
pusha
fldenv
imul
add
sbb
fistp
(bad)
adc
lahf
sub
aaa
inc
repz
inc
push
inc
jmp
jnp
push
dec
fstp
aam
sub
jge
push
jge
clc
ja
adc
push
inc
cld
adc
in
sbb
(bad)
hlt
cmp
ins
shl
retf
aas
sub
les
cmps
cmp
(bad)
cs
mov
in
push
add
xor
fstp
mov
retf
outs
cmp
xchg
(bad)
dec
retf
and
cmps
jne
xor
shl
call
fs
and
inc
jo
stos
add
bound
sub
jmp
popf
cmp
sar
sub
inc
or
in
es
cmp
push
jl
mov
inc
lods
adc
repnz
scas
ret
les
pop
dec
dec
loope
ins
cmps
sub
sti
leave
push
jle
mov
out
sbb
(bad)
sub
fldenv
inc
imul
pop
or
mov
jb
mov
jnp
jp
mov
mov
stos
(bad)
leave
data16
xchg
mov
or
inc
out
jbe
or
xor
movs
dec
int
int3
adc
rol
mov
data16
xchg
sub
jg
out
call
mov
sbb
lock
sub
push
or
xchg
int
push
push
mov
pop
in
jle
rcr
inc
xor
scas
mov
and
sub
pop
xlat
cld
mov
cmp
jae
sbb
jb
mov
push
mov
jp
fsub
inc
mov
inc
sub
mov
jbe
sahf
mov
fadd
mov
mov
mov
arpl
(bad)
push
inc
push
mov
ror
xchg
adc
xor
jnp
mov
or
pop
mov
or
mov
xor
jl
cs
xchg
leave
pop
pop
test
hlt
repnz
xchg
fnstcw
iret
ret
sti
inc
in
fnstcw
dec
push
push
adc
sub
scas
and
jl
popf
in
sbb
mov
pop
mov
loope
sbb
enter
xor
std
push
xchg
aam
sub
popa
mov
adc
and
xor
aaa
inc
jmp
mov
jb
test
jge
pop
xor
out
aaa
mov
dec
pop
sbb
adc
mov
fs
mov
jmp
das
repz
data16
cs
jecxz
ja
cld
(bad)
not
xchg
out
mov
cmp
imul
je
into
shl
loope
ret
adc
mov
sar
add
scas
push
cmp
xchg
or
pop
and
jnp
(bad)
ins
ror
fldenv
ficomp
in
push
pop
les
pop
ins
jle
fnstsw
data16
ins
pop
ror
mov
retf
mov
stos
push
inc
es
lods
push
ds
std
(bad)
(bad)
fild
dec
fmul
pushf
push
in
mov
into
fistp
in
ror
fst
mov
push
aad
int3
cli
leave
cli
jg
mov
aad
aad
pop
push
xchg
sbb
sahf
sbb
xrelease
rcl
xchg
sbb
mov
mov
pop
ins
int3
outs
push
retf
imul
shr
jmp
xchg
and
mov
sbb
or
out
into
pop
ret
xor
adc
popf
scas
pop
push
and
sahf
fmul
imul
cmp
ins
mov
(bad)
sub
mov
ror
push
push
bound
bound
inc
xor
jno
inc
cs
jae
sub
sbb
loop
cmps
fisttp
push
or
in
sbb
dec
inc
imul
popf
test
cwde
inc
and
inc
ins
jno
aaa
imul
jle
jle
mov
daa
dec
mov
aam
movs
rcr
sbb
pop
pop
clc
jbe
mov
adc
mov
add
ins
cwde
stos
inc
aaa
xlat
call
je
mov
cld
adc
movs
dec
rcl
or
(bad)
(bad)
sub
es
nop
scas
mov
push
mov
jbe
retf
xchg
or
sbb
sbb
cs
sar
push
frstor
cmps
mov
rcr
dec
add
mov
test
dec
pop
xchg
retf
push
das
aad
and
mov
jb
jecxz
or
sub
lods
pusha
adc
jl
sbb
aaa
dec
fdivr
or
scas
cmp
dec
sbb
inc
push
jge
push
enter
push
pop
inc
cwde
mov
mov
shl
sahf
mov
and
das
adc
pop
mov
rcr
push
cmp
in
pop
sub
rol
xor
(bad)
inc
xchg
and
jecxz
loop
jge
mov
stos
adc
push
stc
mov
int3
jp
mov
lea
cli
inc
adc
push
xchg
sbb
mov
add
cdq
push
fistp
push
jae
outs
cdq
jmp
push
pop
cmp
lea
cmc
shr
cli
aas
fcmovnb
inc
mov
jb
mov
pop
mov
popa
jnp
xchg
ja
cmp
mov
out
test
pushf
sub
push
aas
add
fldcw
loop
mov
movs
les
jle
iret
dec
mov
push
cmps
lods
fcom
push
dec
cmc
fwait
pop
push
loope
retf
inc
dec
push
sbb
shr
std
mov
sub
nop
push
mov
out
push
sbb
push
mov
int
rcr
adc
mov
loopne
add
inc
jbe
leave
dec
(bad)
jge
add
pop
repnz
lods
arpl
xchg
xchg
test
jmp
mov
aad
sahf
pop
push
out
test
sub
or
ins
fadd
jae
outs
jle
ja
cmp
test
test
push
cmp
add
mov
loop
cdq
pop
out
loope
mov
ins
or
jmp
aas
inc
sub
mov
add
and
lds
jg
inc
pop
(bad)
sub
jle
cmp
mov
or
pop
mov
adc
in
sbb
in
test
fnsave
jb
sbb
imul
mov
repz
loopne
jo
cmps
push
mov
sub
aam
lds
mov
mov
mov
ret
mov
(bad)
dec
shl
pop
dec
xchg
jno
inc
dec
call
lock
adc
push
pop
adc
hlt
addr16
cmp
xchg
jb
add
sub
dec
int3
stc
rol
add
mov
hlt
push
xchg
inc
jae
or
movs
inc
test
push
imul
ins
rol
imul
mov
es
pop
ds
out
jns
test
inc
adc
dec
jno
fistp
add
test
xor
jmp
sub
ins
scas
(bad)
aam
icebp
pop
cmp
in
mov
fidiv
push
unpckhps
rcr
cmp
(bad)
(bad)
jne
(bad)
(bad)
add
mov
cmp
inc
or
mov
inc
jmp
repnz
jbe
ror
into
std
jecxz
push
push
cs
push
adc
xchg
mov
stc
scas
push
cmps
icebp
xchg
cmp
mov
ds
jl
loope
out
retf
icebp
mov
int
mov
cmps
inc
mov
adc
shr
jl
sbb
push
addr16
push
rcl
outs
iret
mov
mov
(bad)
fcmovnu
addr16
mov
or
nop
stos
movs
lahf
lahf
fmul
cmp
push
inc
sub
pop
(bad)
(bad)
or
push
nop
mov
jg
jno
scas
mov
xchg
popf
sub
or
js
imul
scas
mov
loopne
sbb
dec
inc
pop
pinsrw
fadd
mov
setbe
sub
jo
arpl
jns
inc
fistp
jo
dec
test
div
mov
mov
popa
outs
repz
xchg
cli
xor
mov
adc
adc
jae
jecxz
in
adc
rcl
push
and
sbb
out
dec
dec
add
xor
mov
inc
call
les
fstp
mov
arpl
je
aaa
xchg
popf
aad
idiv
cli
jnp
jb
popf
(bad)
out
adc
mov
pop
jbe
adc
inc
xor
mov
mov
xchg
ins
retf
(bad)
retf
inc
cdq
inc
adc
xchg
sahf
inc
and
pushf
out
push
push
add
xor
or
mov
xor
daa
jecxz
mov
xchg
repz
int3
pop
in
or
cli
sbb
fs
adc
fdiv
ins
xor
vsubps
in
push
jmp
fbld
inc
xor
aad
std
dec
and
or
pop
es
outs
mov
jmp
inc
mov
pop
leave
ja
mov
fiadd
dec
sbb
shr
xor
sub
es
mov
movs
inc
lea
add
je
dec
adc
clc
pop
(bad)
xor
xchg
sub
imul
pop
fld
inc
daa
popf
leave
pop
cmp
push
add
in
lock
es
push
out
push
jbe
js
pop
mov
test
scas
cmp
xchg
xor
jl
pusha
add
and
fdiv
push
arpl
pop
sbb
sub
outs
or
and
je
nop
mov
fnstenv
mov
sbb
mov
inc
mul
sbb
adc
mov
jne
(bad)
mov
outs
or
inc
cli
sbb
inc
dec
loope
(bad)
cmps
cmps
mov
mov
jo
test
loopne
jnp
aaa
jmp
inc
data16
loop
cmp
and
pop
iret
push
jle
push
push
and
xlat
adc
popa
adc
pushf
clc
or
nop
rol
js
mov
stos
inc
jae
push
jg
sub
mov
ror
inc
push
fistp
popf
mov
(bad)
int3
(bad)
jge
(bad)
dec
mov
xor
jl
pop
je
cmp
sub
fsub
mov
popa
in
int3
adc
inc
fist
or
xor
xchg
dec
cmps
mov
mov
in
std
add
sbb
stos
fnstsw
cmc
test
dec
ja
stos
xchg
pop
push
popf
clc
sub
call
push
and
xlat
sbb
push
(bad)
mov
lock
or
sub
mov
ret
or
mov
pop
mov
fwait
push
inc
inc
jl
sub
push
jo
mov
inc
mov
add
jmp
ins
stos
mov
jns
clc
les
add
add
loopne
int
out
div
out
add
cmp
cs
push
lea
cmp
or
mov
out
inc
xchg
out
je
pop
mov
add
int
hlt
scas
cmps
pusha
or
and
test
add
xor
jmp
push
fwait
add
xchg
popa
mov
add
cmp
xchg
mov
std
(bad)
aam
sar
daa
jecxz
in
and
je
push
jl
inc
loop
add
pusha
add
cwde
push
mov
inc
jmp
mov
pop
push
inc
lahf
jae
xor
or
mov
pop
pop
loope
cmp
pop
stc
std
mov
ror
jl
adc
xor
mov
add
ins
push
sbb
ins
pop
push
out
js
(bad)
and
mov
dec
add
inc
xor
cmp
hlt
inc
jae
shr
mov
ret
or
clc
and
ja
sub
mov
jno
pop
call
mov
sub
mov
ds
pop
add
data16
xchg
sar
jmp
neg
sub
imul
jl
mov
dec
pop
or
movs
jnp
leave
sub
sbb
sub
fsub
test
adc
(bad)
jnp
iret
jl
leave
mov
iret
xchg
cmovb
test
mov
jp
xchg
je
rol
(bad)
xchg
push
mul
push
mov
out
shl
pop
mov
test
mov
mov
sbb
es
mov
and
outs
lock
push
sbb
push
mov
add
push
out
inc
jmp
or
push
in
mov
(bad)
mov
dec
pop
in
ds
inc
cdq
out
inc
shl
test
pop
mov
xor
cdq
cdq
ds
aaa
int
cmp
add
cwde
sub
je
push
cmc
fmul
xor
mov
mov
aad
sbb
ins
cld
lahf
aad
je
lahf
(bad)
lods
pusha
xor
lea
sbb
pusha
jecxz
dec
stos
movs
mov
push
inc
add
stos
inc
dec
push
mov
xchg
pop
(bad)
xchg
nop
(bad)
and
icebp
ja
test
popf
sbb
enter
pushf
jge
ret
movs
add
repnz
fxch
push
repz
out
lahf
ss
repz
pop
div
rol
(bad)
or
cmp
mov
fimul
sub
ret
sbb
fcmove
jmp
inc
push
and
mov
sbb
leave
mov
push
add
cli
add
mov
xchg
jmp
xor
xchg
pop
adc
rcl
add
icebp
out
jo
push
bound
jae
aam
pop
push
pop
inc
ss
xchg
(bad)
repnz
cmp
call
sbb
int
adc
mov
jg
loope
dec
cmps
mov
and
mov
ds
icebp
dec
fld
mov
les
adc
sbb
push
pop
fwait
xchg
inc
mov
mov
enter
cmp
ins
stos
push
les
in
mov
cmps
pop
imul
fsub
pop
mov
call
mov
loop
xchg
stc
div
sar
push
hlt
addr16
test
mov
sub
(bad)
rol
out
add
jmp
mov
cwde
xchg
xor
aam
test
xchg
inc
dec
pop
add
mov
mov
(bad)
enter
inc
retf
dec
push
pop
pop
sbb
std
xchg
push
movs
jmp
in
outs
out
cmp
popa
stc
loop
sbb
test
imul
or
in
loope
and
addr16
cmps
jb
cmp
dec
dec
rdtsc
test
jl
not
pop
mov
(bad)
pop
frstor
mov
adc
or
xor
cdq
jge
mov
stc
pop
aaa
pop
mov
xor
add
mov
sar
mov
shl
(bad)
retf
jb
mov
sub
es
jne
jae
movs
mov
fld
lods
jnp
ja
xchg
mov
xchg
pushf
popa
stos
outs
addr16
cmps
jb
push
stos
int
psllq
dec
and
(bad)
mov
aad
das
leave
and
jge
adc
mov
mov
mov
repz
xchg
or
mov
add
jmp
cmp
push
xlat
xor
fdiv
mov
not
mov
dec
les
out
pop
jo
mov
movs
loope
inc
in
mov
jns
mov
mov
push
(bad)
and
call
mov
mov
lock
xor
xor
ss
pop
inc
sub
ds
pop
inc
pop
(bad)
sti
cli
shr
retf
or
test
repnz
xor
sbb
ret
fsub
jg
sbb
pop
jae
ins
fsub
(bad)
sub
pushfw
mov
or
inc
popf
mov
pushf
cmp
ins
push
cdq
or
out
pop
mov
mov
push
push
clc
ja
mov
pop
mov
or
mov
push
cli
dec
xchg
or
inc
inc
xchg
or
or
sbb
inc
pop
fcomp
rol
arpl
jne
scas
adc
test
pop
jae
add
arpl
fcom
pop
xchg
dec
leave
(bad)
hlt
fxch
mov
in
sbb
xor
sub
cld
dec
xchg
push
arpl
js
movs
(bad)
repnz
aaa
fwait
retf
xor
cld
dec
add
push
mov
imul
in
mov
lds
adc
jp
outs
ret
lods
jge
xchg
call
mov
inc
mov
test
mov
pushf
shl
in
sbb
add
mov
imul
clc
jmp
ja
out
xor
adc
dec
(bad)
sub
mov
mov
retf
push
pusha
dec
test
xchg
xor
f2xm1
scas
push
gs
mov
mov
pop
mov
jp
xchg
loopne
(bad)
into
mul
sbb
out
pop
femms
and
jbe
stc
mov
aad
mov
call
sub
mov
adc
int3
pop
ins
jl
retf
fidivr
and
sub
mov
(bad)
or
jo
iret
lods
cmp
cmp
cmps
xchg
fsubr
push
mul
in
mov
jmp
lock
(bad)
ja
jno
add
xor
loop
aam
out
bound
pop
mov
stos
fldenv
or
push
jno
jg
push
adc
int
(bad)
push
dec
popa
pop
jl
add
jne
aam
and
fcmove
push
test
mov
imul
lahf
fcomp
not
cmp
sbb
test
stos
inc
mov
adc
cdq
popf
popf
jmp
ins
jns
shl
(bad)
std
addr16
enter
mov
scas
sbb
aam
(bad)
ja
loope
mov
fdivr
mov
sbb
aad
xchg
jmp
push
int
mov
call
mov
icebp
idiv
out
mov
add
jbe
mov
and
jmp
jp
pusha
movhps
and
stos
and
in
call
xchg
jo
das
hlt
sub
xor
jmp
leave
(bad)
mov
cmps
arpl
nop
pop
jle
pop
and
ja
popf
in
push
jp
movs
jle
push
xchg
mov
lock
pop
retf
sub
xchg
(bad)
movs
sti
mov
xchg
in
jl
aam
stos
and
(bad)
xor
cmp
xor
xlat
xchg
test
imul
(bad)
into
mov
pop
stos
arpl
mov
stc
adc
adc
adc
inc
cmp
sbb
inc
int
mov
jnp
xlat
jnp
pop
inc
fld
sti
push
popa
xchg
dec
popaw
dec
or
int3
push
mov
das
jge
sbb
xchg
dec
push
push
icebp
sti
pop
adc
xchg
add
xchg
mov
mov
push
push
inc
repz
fbld
data16
shr
or
jno
(bad)
cmp
stc
sub
dec
mov
jae
add
xchg
mov
jns
cli
clc
adc
mov
aad
inc
aas
shr
out
or
inc
add
push
xchg
mov
fnstcw
je
dec
xor
rcr
add
jb
popf
mov
aam
rcl
cmp
push
aad
or
push
movs
int
dec
adc
mov
jae
retf
pop
cmp
imul
jo
xchg
ds
in
jbe
hlt
sbb
mov
cmp
test
imul
gs
arpl
cmp
fistp
or
imul
outs
push
and
dec
dec
gs
and
jmp
sbb
pop
inc
ins
jg
push
ja
mov
inc
pop
mov
or
dec
fistp
fsub
in
pop
cmps
or
les
(bad)
jmp
mov
xor
xchg
cli
(bad)
sub
aam
push
test
pop
and
ret
movs
retf
jns
push
(bad)
jno
sti
mov
dec
mov
dec
pusha
js
les
aaa
and
enter
xchg
jmp
movs
push
inc
xchg
jns
xchg
mov
and
pop
pop
and
out
inc
jle
pop
fwait
lahf
sub
loope
jmp
into
movs
mov
xchg
add
pop
mov
inc
sub
push
outs
mov
push
daa
pop
ds
adc
pop
lea
fsubr
aad
mov
sti
jae
cmc
enter
fwait
scas
sbb
and
retf
pop
sbb
loope
(bad)
aaa
add
adc
fcom
xor
adc
repz
mov
movs
dec
jl
push
int
jp
add
sti
xor
jb
jne
push
gs
fld
mov
xor
leave
and
ins
mov
lods
ins
in
sbb
pop
ja
jmp
outs
inc
lea
sub
movs
(bad)
ds
es
and
ret
mov
mov
or
xchg
mov
jno
fwait
cmp
or
bound
jbe
call
retf
sub
jl
or
jle
stos
add
cmps
add
enter
adc
xchg
adc
inc
sbb
or
ja
sub
add
pop
add
int
dec
xchg
xchg
int
aas
cmp
push
adc
jns
and
or
ret
(bad)
jns
mov
inc
jmp
mov
push
mov
cmp
xor
fbstp
xchg
inc
add
and
mov
xchg
mov
popf
push
pop
aam
sbb
dec
aam
outs
mov
(bad)
lods
mov
push
in
jl
icebp
(bad)
aam
inc
or
outs
sub
jmp
push
cmps
scas
jno
cmps
inc
sbb
sbb
xor
pop
xor
test
sub
and
daa
push
and
out
push
and
nop
mov
push
xor
dec
scas
enter
mov
nop
sti
add
xor
sbb
daa
lock
cmp
pop
hlt
cmps
and
add
fwait
ja
mov
inc
or
add
push
ds
xor
jne
xchg
stos
or
out
xchg
fdivrp
test
add
popf
pop
bound
push
(bad)
xor
push
push
mov
hlt
daa
and
add
repnz
aad
shr
push
mov
fcmovu
push
lods
imul
push
mov
cmps
cmp
adc
into
xchg
out
cmp
mov
mov
xchg
jmp
ret
aas
inc
mov
cmps
movs
jecxz
inc
dec
inc
sub
sub
movs
pop
push
xor
pop
adc
adc
mov
jbe
or
lods
ror
repnz
cld
daa
ins
loop
mov
ds
into
ret
sbb
and
inc
push
shl
repnz
mov
fs
dec
sbb
pop
mov
adc
or
repnz
call
aad
push
xlat
and
das
out
jmp
add
idiv
mov
add
inc
mov
mov
mov
fstp
cld
ins
jae
loopne
cs
mov
repnz
mov
lods
pushf
lods
rcr
jnp
pop
inc
(bad)
and
movs
jecxz
pop
xchg
or
jb
jp
or
push
adc
inc
pop
inc
les
add
das
mul
popa
sub
rol
push
retf
dec
xchg
clc
jmp
aam
cs
adc
add
dec
dec
movs
fwait
push
fs
add
and
out
icebp
arpl
pop
ret
jle
sti
pop
sub
sar
and
sbb
bound
jg
ss
xchg
adc
jno
stos
and
pop
xchg
jb
sbb
pop
pushf
pop
fnsave
shl
and
out
push
out
std
ins
lds
dec
fcmovb
jge
in
int3
lea
fdiv
shr
in
leave
jbe
jae
mov
jb
and
enter
dec
dec
(bad)
push
sub
aaa
sub
je
push
dec
adc
add
sub
outs
mov
and
mov
(bad)
retf
call
cmp
das
dec
mov
pop
mov
mov
mov
and
add
cmps
xchg
jbe
lods
jge
and
jl
jle
mov
sub
out
or
pop
rcl
dec
aam
movs
ins
dec
mov
sub
gs
push
push
jne
jg
pop
mov
mov
loope
mov
cmps
sbb
aaa
push
dec
out
and
xor
dec
mov
xor
je
pop
push
jns
daa
add
imul
addr16
xchg
cmp
div
cli
cli
xor
push
(bad)
fimul
iret
mov
out
inc
ds
mov
mov
or
nop
dec
stc
sbb
retf
fistp
clc
js
div
xchg
test
inc
and
mov
xchg
push
pop
out
jne
xchg
jle
fcmovb
in
int
repnz
or
enter
push
cmp
movs
mov
pop
and
lods
test
mov
test
sbb
jp
test
cmps
mov
ins
jle
in
rol
(bad)
loopne
mov
cmp
jne
pop
(bad)
ds
dec
pop
mov
inc
jp
sbb
sbb
push
cmps
inc
lds
mov
or
fbld
jl
out
fldcw
pop
loop
cmp
adc
mov
call
add
repnz
lods
test
mov
mov
add
cmp
mov
ins
add
addr16
into
or
mov
lock
sub
cli
in
push
sbb
dec
imul
mov
dec
cmp
inc
mov
not
gs
mov
mov
pop
js
in
sub
bound
cmc
sbb
sbb
or
inc
gs
lgs
mov
xchg
xchg
mov
sbb
imul
sub
js
push
xchg
popa
add
push
sbb
test
jmp
ror
outs
pop
stos
hlt
mov
mov
cmp
jo
retf
mov
(bad)
mov
out
jecxz
jle
daa
push
xchg
cli
loop
aaa
dec
adc
sub
inc
ins
sub
jo
add
jnp
and
repnz
or
lods
enter
xor
rol
sub
mov
push
stos
in
movs
add
jp
cmp
cmp
iret
dec
and
daa
pop
shl
hlt
add
add
and
adc
push
and
stc
mov
inc
ja
test
inc
or
jge
imul
rol
data16
dec
(bad)
jb
xchg
jne
jbe
mov
enter
cmp
movs
xor
jl
popa
das
jge
in
mov
lods
fiadd
scas
outs
or
sub
in
add
xchg
push
and
nop
mov
fistp
jnp
popf
xlat
jne
ror
aad
cmps
dec
xchg
stos
pop
daa
je
inc
fld
dec
test
hlt
jne
xchg
(bad)
and
nop
out
mov
test
shl
call
add
ret
adc
push
dec
mov
call
lds
sbb
add
(bad)
pop
xor
nop
adc
stos
pop
mov
mov
ins
or
xchg
test
lods
test
(bad)
mov
cmps
ins
iret
push
mov
push
es
xchg
pop
jno
dec
js
add
dec
lahf
mov
and
xlat
dec
jns
jge
arpl
stc
cmc
aaa
data16
scas
mov
int3
mov
sbb
arpl
ror
xchg
dec
cs
mov
pop
or
lods
xchg
std
jmp
or
in
jno
dec
ins
stos
xor
pop
xchg
push
ja
mov
jo
addr16
movs
(bad)
xchg
jne
cli
or
ss
sub
loopne
mov
fnstsw
mov
sub
dec
clc
pop
pop
aam
pop
ret
retf
add
adc
in
mov
and
or
mov
mov
je
loop
ror
push
or
mov
shl
mov
retfw
mul
adc
je
std
mov
mov
aad
mov
sub
dec
ss
xchg
jne
int
lock
fld
(bad)
push
and
arpl
les
neg
fiadd
mov
mov
mov
cmp
dec
sahf
cmp
push
xor
pushf
cmp
sbb
adc
fst
and
aam
xor
retf
inc
xchg
fcmovu
mov
call
push
leave
es
out
test
and
aas
mov
add
gs
shr
inc
jmp
lahf
test
jnp
iret
inc
data16
xor
data16
push
fidivr
hlt
inc
pushf
mov
sbb
pop
xor
popf
pop
stos
xor
pop
add
sub
push
(bad)
pop
daa
loop
mov
and
loop
pop
mov
or
jmp
cmp
mov
push
pop
inc
into
hlt
sub
sti
retf
cmp
daa
stos
cmps
xor
test
mul
popf
ins
(bad)
jge
imul
scas
sahf
popf
into
ja
mov
arpl
inc
xor
xchg
cmp
and
dec
mov
mov
xchg
pop
aas
push
pop
hlt
popf
outs
mov
and
cmp
sbb
aaa
frstor
push
mov
scas
pop
mov
pop
test
cwde
pushf
movs
fdivrp
mov
sub
mov
push
movs
mov
fsubrp
test
clc
inc
xchg
in
xchg
pop
fnsave
mov
mov
sar
dec
cvtps2pi
leave
imul
iret
aam
xor
in
int
dec
cmp
retf
pop
jb
push
hlt
in
out
cmp
lods
jo
jecxz
rol
enter
mov
fimul
adc
out
inc
jae
push
xchg
into
sti
and
mov
out
sbb
push
iret
xchg
mov
cld
inc
pop
fwait
call
cdq
loopne
dec
push
inc
fsub
and
int
mov
cmp
cmps
jbe
test
sar
movs
sbb
or
jbe
lds
dec
push
xor
fisubr
cmp
jg
dec
mov
mov
fdiv
(bad)
repnz
scas
push
mov
inc
mov
xchg
stos
mov
jp
(bad)
clc
das
mov
hlt
add
cdq
xor
push
or
adc
jecxz
loope
jmp
ins
imul
js
cdq
mov
mov
(bad)
scas
scas
xor
(bad)
and
es
sbb
movs
add
inc
les
gs
xchg
xchg
push
sub
repz
jge
call
outs
xchg
inc
pop
push
pushf
dec
mov
xchg
cmovne
mov
xlat
sub
jle
adc
cmp
pop
pop
mov
in
and
repz
daa
(bad)
sub
nop
cmp
(bad)
inc
ret
inc
xor
lahf
loop
cs
lds
test
retf
or
sbb
scas
or
mov
fld
repnz
jae
dec
nop
out
retf
fadd
xor
mov
pop
or
jo
adc
xor
das
dec
cmp
rol
dec
mov
cmp
outs
es
push
mov
dec
cwde
cmc
mov
mov
lods
test
je
int3
aas
sub
iret
xchg
mov
push
test
mov
fbld
adc
out
adc
out
dec
push
pop
in
call
lods
iret
or
jl
in
popf
adc
dec
and
repnz
fidiv
inc
adc
rol
or
push
stos
stos
retf
sbb
and
js
daa
pop
xchg
shl
and
mov
xor
pop
add
jmp
popf
inc
lock
jae
jge
or
popa
ja
pusha
pop
stc
dec
xchg
inc
js
pop
mov
and
mov
repz
xchg
aad
(bad)
(bad)
repz
add
and
xchg
push
inc
mov
out
call
je
in
inc
popa
or
js
push
shl
add
pusha
sbb
mov
xchg
jnp
addr16
sbb
xor
fcmovb
inc
mov
aam
mov
call
(bad)
ror
or
mov
sbb
fisttp
or
addr16
push
pop
jne
mov
pushf
add
xor
shl
pop
fdiv
in
sar
imul
test
or
(bad)
fwait
mov
in
stos
add
sbb
dec
lds
sub
or
loopne
mov
stos
ss
mov
or
test
sub
idiv
repz
and
test
test
ret
jp
mov
adc
inc
mov
jb
out
jge
xor
sbb
sbb
cmp
sar
cmp
mov
adc
xchg
pop
mov
sub
into
loopne
stc
in
ret
mov
stos
sbb
cmps
cmp
popa
sbb
scas
add
xchg
mov
adc
sub
xor
repnz
test
inc
icebp
lods
jge
or
aad
pop
adc
fs
push
nop
mov
arpl
fnstsw
xlat
lods
outs
(bad)
iret
cmp
ret
aam
cmp
mov
pop
imul
cli
adc
adc
xlat
cmp
out
sub
test
call
and
repnz
mov
add
add
pop
sbb
cld
(bad)
sbb
push
lods
and
imul
fstp
mov
jno
loopne
jg
repnz
xor
sub
or
mov
cmp
pop
adc
jb
es
setg
pushf
sbb
imul
xchg
mov
pop
inc
in
jne
mov
iret
jp
push
sub
ins
and
ret
sbb
or
aam
bound
adc
(bad)
into
adc
repz
bound
addr16
and
pop
push
add
in
xor
mov
xchg
jo
push
jmp
mov
test
mov
xchg
std
call
(bad)
out
push
fmul
mov
int
sub
mov
aam
pop
mov
push
mov
cli
add
fs
mov
(bad)
shl
aas
inc
cmc
cmc
scas
xor
scas
jp
inc
les
les
inc
mov
aas
xchg
pop
mov
dec
sub
ins
pop
pop
movs
mov
cmps
push
mov
shr
leave
inc
out
data16
mov
out
adc
lods
jmp
and
retf
out
movs
push
mov
sub
sbb
xor
xchg
mov
mov
sub
xor
mov
mov
bound
sub
pop
ror
sbb
mov
mov
retf
pop
jg
gs
call
icebp
xchg
stos
mov
sbb
and
dec
jno
mov
inc
pop
lods
sub
loope
jl
cwde
cmp
mov
pusha
ja
push
sub
jb
adc
dec
cmps
cs
fild
pop
xchg
cld
out
and
or
xlat
bound
rcl
mov
and
fdiv
mov
or
mov
bound
shl
icebp
xchg
test
push
pop
arpl
loope
inc
outs
ins
jmp
push
call
push
cwde
(bad)
mov
pop
(bad)
pop
jbe
mov
fcomp
je
out
pusha
stos
movs
mov
mov
push
push
jecxz
jmp
(bad)
loope
out
jl
(bad)
cdq
test
and
enter
xlat
or
test
shl
(bad)
and
fistp
cwde
pushf
mov
jmp
dec
or
sbb
add
loope
sub
fisub
pop
cmc
es
rol
test
fistp
enter
pusha
xor
test
add
add
shr
inc
xchg
push
add
jbe
push
or
out
rol
fmul
xchg
mov
sbb
fst
movs
xor
fst
fwait
xor
inc
mov
int
push
out
stc
ins
ds
inc
adc
imul
stos
outs
mov
leave
xor
mov
gs
pushf
add
xchg
xor
stos
adc
loop
or
xchg
movhlps
je
cmc
mov
mov
xlat
dec
mov
dec
cld
inc
inc
push
aaa
lods
adc
inc
dec
mov
pop
sub
push
jne
in
ret
mov
cmps
jbe
and
loopne
fcomp
imul
jb
push
xor
in
mov
or
sti
add
pop
jno
cmp
daa
push
int3
aas
popf
add
sti
pop
jmp
mov
arpl
sub
inc
fisttp
add
mov
sub
cmp
jl
outs
inc
cs
std
dec
xchg
and
mov
pop
cmp
cmp
xor
jb
mov
fmul
mov
out
mov
cmp
aas
xchg
sbb
sbb
scas
jmp
mov
push
ins
in
retf
pop
ss
and
push
(bad)
jmp
xchg
test
adc
jg
(bad)
call
in
stos
jecxz
lds
jl
bound
xchg
jmp
xlat
mov
arpl
call
inc
out
xor
push
mov
jb
mov
jae
and
push
stc
leave
mov
inc
movs
movs
dec
push
sbb
bound
test
scas
idiv
ss
xchg
sar
cmp
lods
les
call
pop
pop
aam
aas
mov
dec
and
or
mov
push
jg
int
and
xchg
in
out
mov
test
ds
ficomp
dec
jbe
(bad)
aam
or
xor
dec
dec
cmp
sbb
test
sbb
pop
jp
shr
inc
adc
jo
mov
adc
(bad)
jmp
push
and
and
cs
(bad)
push
push
ins
and
or
xchg
add
mov
ja
pop
and
inc
mov
sbb
or
pop
xor
push
cmp
fdivp
jmp
xchg
sbb
das
and
xor
xchg
mov
test
je
jb
sbb
retf
(bad)
pop
mov
cmp
push
cs
mov
clc
pushf
(bad)
pop
ins
pushf
imul
cmp
bound
pop
test
lea
dec
sub
test
ss
aad
out
cld
fistp
dec
out
test
xor
inc
pop
xchg
mov
jmp
cdq
cmp
ins
icebp
and
push
sbb
pushf
clc
fisttp
retf
ret
stos
mov
xchg
xchg
mov
sub
push
mov
sbb
adc
jp
mov
mov
ret
mov
jmp
xor
les
(bad)
or
push
mov
jne
es
mov
add
add
inc
push
sbb
imul
enter
into
ret
push
ds
adc
mov
fsubr
push
xor
loope
(bad)
pop
cli
das
cvtps2pd
xor
mov
jmp
xchg
aad
and
inc
cmc
lahf
add
fidiv
or
rol
aaa
mov
sub
mov
xchg
sahf
xor
adc
popf
in
je
enter
and
sbb
dec
sti
ficomp
int
pop
adc
pop
sub
or
daa
hlt
push
popa
mov
ja
(bad)
dec
neg
jl
les
sbb
add
jecxz
dec
and
dec
inc
mov
mov
inc
inc
cmp
retf
inc
outs
cmps
xlat
popa
push
sahf
cli
lds
push
pop
jnp
cld
mov
in
test
push
(bad)
cmp
cmc
mov
mov
arpl
lea
test
add
jg
add
iret
push
and
pusha
sub
mov
xchg
cmp
and
jno
add
jbe
xchg
movs
push
pop
ins
or
dec
jae
mov
cmp
sbb
repz
xchg
dec
cdq
sbb
or
repz
shl
xor
dec
ret
stc
or
pop
or
stos
push
xchg
dec
cdq
mov
punpckhdq
cmp
xor
jmp
cmp
fild
sub
mov
mov
push
cmps
mov
int
ret
mov
push
xor
mov
add
push
popa
inc
sbb
xchg
leave
clc
and
push
div
shr
push
mov
fld
sub
test
into
outs
stos
mov
jns
aas
call
int
cmps
mov
nop
enter
inc
and
addr16
cs
sub
mov
push
mov
adc
arpl
(bad)
pop
push
test
or
mov
add
jo
push
int3
ds
and
pop
fdivp
lea
jecxz
movs
(bad)
xchg
inc
outs
repnz
(bad)
lahf
fs
and
sar
mov
sbb
sub
enter
sub
pop
lahf
in
loopne
push
imul
dec
inc
mov
enter
adc
jno
push
mov
add
sbb
jo
mov
iret
in
neg
shufps
fwait
aas
cmp
lods
xor
stc
mov
stos
sbb
loop
sbb
pop
cmps
or
dec
mov
sub
mov
int
cmps
ins
leave
dec
loopne
ja
and
test
ss
xor
dec
movs
(bad)
(bad)
push
ret
(bad)
jnp
add
cmp
ror
lds
rep
clc
daa
jecxz
xchg
and
cmps
hlt
add
jnp
cmp
out
lea
std
jb
mov
repnz
(bad)
fcmovnbe
sbb
dec
pop
pop
jno
or
rcr
push
inc
hlt
into
mov
fisubr
mov
pop
sbb
mov
outs
popa
je
xchg
sub
inc
fimul
and
mov
fisub
and
or
push
lea
fcomp
jno
push
sub
sbb
pop
int3
sbb
mov
and
xor
pop
mov
call
xor
fisub
cmp
push
dec
mov
iret
sub
and
rcl
jo
inc
lock
addr16
mov
pop
loopne
cmc
adc
into
mov
addr16
mov
fs
sti
mov
mov
adc
addr16
int
jl
retf
mov
mov
daa
adc
fst
or
push
cwde
aaa
adc
add
(bad)
and
lods
mov
mov
mov
dec
dec
jl
sub
fst
popa
ins
xchg
push
xchg
jecxz
inc
dec
sahf
sbb
jl
xchg
or
nop
aaa
in
call
and
std
addr16
cld
iret
stos
sbb
nop
fisubr
mov
test
cmp
mov
jbe
aam
mov
sbb
fidivr
xchg
pop
das
inc
les
sub
popf
fsubr
arpl
add
jle
or
dec
cmp
jmp
push
test
mov
daa
icebp
cmp
xor
gs
pop
str
cmp
mov
dec
jnp
add
popf
jmp
gs
jmp
inc
in
xchg
das
add
out
inc
sbb
inc
push
test
cmp
sbb
dec
enter
mov
dec
pop
inc
xor
mov
hlt
inc
xor
mov
and
icebp
fidivr
shl
dec
add
dec
and
cmp
pop
jle
(bad)
and
cmps
sub
inc
out
mov
lods
jnp
pavgw
sbb
jp
sub
sbb
fwait
or
aaa
push
xchg
xor
pusha
ror
movhps
jle
xor
jle
jecxz
mov
push
cmp
(bad)
or
jp
and
and
and
push
or
ror
push
imul
add
shl
mov
or
xor
xchg
pusha
rol
jmp
push
xchg
ret
sub
mov
out
popf
cmp
daa
dec
jmp
leave
xchg
aad
add
mov
movs
movs
inc
(bad)
cmp
scas
cmp
xor
xchg
xchg
nop
addr16
push
mov
pusha
fcomp
inc
nop
jmp
mov
les
sub
xchg
cmps
xchg
movs
js
retf
cmp
mov
cmp
inc
stc
ja
(bad)
out
fwait
xor
sbb
jmp
jns
jl
in
das
out
adc
dec
ds
dec
popf
gs
mov
dec
jnp
clc
push
mov
ja
push
pop
and
popa
jl
xchg
sbb
bound
icebp
lahf
aas
test
push
rcr
hlt
mov
xor
inc
cmp
adc
mov
and
sub
inc
cmps
je
xor
sahf
ret
dec
push
cli
shl
movs
scas
xor
and
jl
jl
or
jbe
jne
push
and
cwde
aad
in
fisub
xor
adc
popa
jne
test
loope
pop
pop
adc
sbb
mov
or
test
fldcw
pop
iret
sbb
cmc
xchg
fdivr
and
out
add
jmp
fisub
(bad)
pop
(bad)
psraw
xchg
sub
add
fdiv
cmp
cmp
push
jmp
popa
mov
cmp
fistp
mov
jbe
jmp
popa
cld
dec
adc
aaa
dec
xor
pop
outs
dec
jns
int3
xlat
push
dec
hlt
push
jp
je
popf
enter
push
push
xor
or
(bad)
jmp
xchg
jbe
xor
and
lds
or
xor
enter
sahf
lock
or
xchg
xchg
adc
test
or
dec
pop
sbb
(bad)
arpl
mov
test
inc
xor
or
aas
cld
sub
retf
and
push
stc
adc
xchg
adc
jecxz
xor
mov
xor
push
or
xchg
xor
int
add
xchg
xchg
push
or
cdq
ret
xor
std
jmp
inc
mov
push
cmp
icebp
in
outs
in
daa
call
mov
loopne
cmp
adc
sub
inc
das
test
and
cdq
xor
fdiv
call
xchg
mov
mov
(bad)
pop
cmp
jo
retf
(bad)
fisttp
jg
lock
lahf
in
out
sbb
out
enter
mov
adc
and
jge
loope
aad
cmp
sbb
cdq
cmc
pop
std
push
data16
into
mov
fidivr
push
imul
out
jnp
in
push
dec
sbb
call
jns
cmp
dec
adc
jbe
nop
mov
mov
xchg
int3
jle
loope
dec
data16
jbe
in
adc
mov
sbb
dec
shl
push
mov
xchg
adc
sbb
or
and
inc
aad
out
and
cs
xchg
xor
arpl
mov
jo
aas
adc
jae
call
in
xchg
out
je
aas
add
lods
mov
pop
jge
jecxz
frstor
pop
cmp
inc
or
sbb
repnz
cmp
push
call
cmp
mov
inc
popa
pop
cmp
or
mov
je
jmp
jnp
cmp
imul
sub
inc
cmp
and
call
pop
ins
inc
lods
pop
pop
and
inc
push
mov
aas
movs
adc
inc
or
gs
inc
xchg
(bad)
movs
and
or
push
cld
repz
inc
mov
es
and
dec
mov
lahf
cdq
inc
mov
sub
retf
pop
movs
mul
lods
pop
stos
test
fist
inc
mov
jmp
or
jnp
repnz
and
scas
lahf
je
fwait
dec
jecxz
fistp
inc
inc
mov
imul
push
fs
mov
popf
mov
sub
xchg
jbe
(bad)
sub
mov
(bad)
fistp
dec
push
fndisi(8087
add
or
xlat
inc
(bad)
mov
push
sub
mov
add
mov
inc
jle
jmp
cmp
js
scas
mov
push
push
cdq
out
data16
mov
pusha
or
fimul
adc
fisttp
sub
popa
inc
leave
pop
aaa
ins
enter
popf
test
inc
shl
pop
dec
dec
rcl
or
and
lods
cmp
test
push
jnp
sub
fs
bound
popa
push
inc
les
das
sbb
or
push
cmp
jbe
and
add
fbld
mov
pop
shl
(bad)
jge
mov
in
xchg
mov
jl
cmp
pop
push
cmps
mov
pop
ret
push
ins
cmp
dec
rcr
and
or
xchg
cmp
pop
call
mov
inc
lahf
xchg
(bad)
leave
inc
and
xchg
jecxz
add
call
fwait
dec
adc
pop
cmp
sbb
(bad)
addr16
xchg
cmp
gs
ror
xchg
(bad)
xor
add
icebp
jo
in
mov
movs
icebp
jmp
jo
mov
sub
lahf
add
and
arpl
lds
push
cdq
mov
pushf
popf
(bad)
imul
in
fs
adc
jl
movs
popa
or
sub
ss
adc
jle
jmp
sbb
push
jl
sbb
in
pop
push
mov
sahf
xchg
inc
inc
test
inc
into
xor
cmc
sbb
icebp
ds
stc
lods
outs
pop
std
and
cmp
loop
jl
imul
mov
xchg
mov
pop
cmc
inc
adc
and
fdivrp
jle
out
cmp
imul
call
nop
xor
pop
stc
ret
lods
imul
add
pop
mov
cmps
hlt
xor
pop
sub
outs
lahf
sub
loop
ror
cmps
nop
push
fmul
sub
test
daa
arpl
xchg
push
sub
push
test
push
les
cdq
mov
jecxz
cli
int
mov
stos
add
es
mov
mov
jp
data16
pop
lods
sub
push
xchg
stos
aad
je
sub
or
sbb
aad
leave
mov
stc
sbb
(bad)
xor
mov
mov
in
ror
out
sub
(bad)
movs
pushf
xlat
adc
xchg
hlt
fmul
pop
cmp
jge
lds
jb
sbb
not
fisttp
pop
(bad)
jno
les
and
fcomp
fild
xor
mov
xor
cdq
repz
repnz
into
mov
out
sbb
call
or
sti
sub
outs
push
mov
cmps
lea
rcr
cld
test
push
xchg
mov
sub
ins
test
loopne
cmp
xor
mov
fnstsw
dec
xchg
fs
hlt
pop
xchg
dec
jae
xlat
aaa
imul
push
and
ror
inc
cmp
inc
popf
pop
aam
xchg
mov
dec
jge
loopne
ficomp
nop
out
test
add
and
inc
fist
outs
mov
push
inc
arpl
mov
mov
adc
push
sbb
inc
xor
fldenv
rol
out
mov
mov
gs
xchg
pop
inc
xchg
push
fild
sar
push
je
jg
loope
rcr
div
ffree
das
jno
inc
cld
icebp
icebp
add
pop
loop
jbe
xor
xor
push
cli
aas
cmc
fcmovb
mov
sub
or
lahf
xchg
mov
xchg
sbb
mov
neg
gs
or
push
clc
aam
inc
dec
dec
dec
je
daa
les
or
aaa
sub
xor
lds
enter
sub
mov
in
icebp
sub
call
int
dec
lock
les
jp
es
ror
sbb
ins
les
cmp
cli
jg
xchg
push
or
add
sbb
fsubr
mov
pop
mov
test
add
retf
jne
les
fnsave
enter
repnz
xlat
cmp
jns
popf
fmul
cmps
mov
cmp
(bad)
call
inc
jo
and
int
aad
push
push
mov
dec
int
mov
scas
mov
xchg
lds
xchg
push
jge
test
lods
cmp
ds
pop
and
xor
and
stc
jg
mov
cli
xchg
jge
sub
pushf
test
sub
xor
push
or
fs
cmp
clc
sbb
xchg
add
pop
gs
movs
cli
imul
jne
mov
sub
mov
popa
in
inc
imul
mov
cmp
popf
pop
pop
jl
gs
cwde
xchg
jp
or
jns
dec
adc
inc
cmp
test
push
loop
mov
cmp
js
sbb
(bad)
repnz
jge
ret
lods
sbb
add
and
lods
add
in
push
test
out
cmc
pop
jp
xchg
clc
mov
cmp
pop
xchg
popa
sub
mov
repnz
sub
adc
xchg
sbb
pop
aad
adc
out
pop
rol
add
push
addr16
aam
push
popf
and
or
imul
movs
push
pop
lods
js
push
dec
fwait
aam
push
pop
in
pusha
sar
jno
repz
mov
sub
lods
adc
jmp
xchg
aad
sbb
sbb
outs
xchg
mov
movs
xor
push
(bad)
or
mov
adc
mov
xor
add
lahf
cdq
outs
adc
ins
sbb
pop
pop
outs
add
mov
sar
repz
or
or
add
rcl
fistp
sub
ins
inc
loope
pop
jnp
cmp
xchg
(bad)
pusha
pop
push
adc
lods
lods
aas
(bad)
sar
hlt
push
lds
sub
fsubr
sub
inc
add
cdq
xchg
xor
rcr
stos
sar
outs
cmp
jecxz
push
sbb
adc
inc
movs
and
stc
pop
pop
aam
dec
(bad)
push
jnp
jne
pop
icebp
pusha
mov
imul
and
rol
loope
out
sbb
jge
cmp
jns
mov
jmp
pop
or
loop
mov
ins
aam
or
adc
xor
sub
sar
data16
pop
pop
inc
mov
ficomp
push
mov
fld
addr16
dec
pusha
cmp
add
stos
std
(bad)
adc
in
pop
rcr
adc
cmc
and
mov
ins
xor
bound
fnstenv
jb
ds
mov
mov
sbb
xlat
push
fidiv
ins
xor
fild
mov
cmc
shr
xchg
fsub
mov
push
ror
pop
mov
sbb
mov
js
and
or
jnp
ja
addr16
add
dec
cmp
repnz
push
cmps
push
ins
xchg
aad
xor
mov
sbb
sbb
add
lea
ds
jmp
jp
push
test
mov
sub
cmp
sbb
mov
daa
fisttp
fs
popf
jl
repz
sti
or
adc
iret
pop
xchg
dec
movs
mov
mov
mov
sbb
lds
xchg
(bad)
or
jbe
icebp
or
jmp
inc
in
mov
lods
add
scas
retf
adc
mov
jns
add
inc
mov
in
xlat
scas
iret
sub
jl
and
call
cmp
das
pop
fisub
aam
(bad)
mov
jecxz
xchg
pushf
loope
ror
into
int
xchg
cmp
sbb
shl
mov
(bad)
fistp
mov
and
popa
(bad)
inc
push
rcl
(bad)
sahf
fild
jno
mov
bound
or
add
mov
imul
push
and
in
xor
cdq
(bad)
lods
xlat
dec
rol
mov
iret
ins
inc
cld
clc
fidiv
jnp
cli
mov
adc
cmp
push
loopne
adc
xchg
ret
int3
icebp
mov
(bad)
sar
mov
xor
mul
push
clc
inc
pop
mov
fisub
dec
adc
cld
cli
in
xchg
jmp
iret
jp
push
out
xlat
sub
fs
ret
adc
out
cwd
test
shr
mov
cmp
outs
lea
pusha
outs
mov
dec
and
sbb
test
mov
sbb
dec
not
clc
cmps
jecxz
inc
jb
adc
adc
test
mov
pop
push
imul
shl
rcr
(bad)
into
sbb
scas
popf
add
outs
mov
rcl
ja
pop
(bad)
aas
push
fld
fimul
mov
sub
cmc
lock
sbb
cmps
dec
aaa
adc
inc
sti
lahf
leave
imul
pop
dec
cmp
std
mov
mov
pusha
test
mov
dec
cmp
jmp
cdq
cld
(bad)
push
jge
xchg
push
add
jle
movs
jecxz
jne
iret
mov
and
in
pop
cmp
cmp
pop
loopne
mov
or
jno
mov
test
call
or
mov
out
cmp
out
pop
pop
retf
test
clc
outs
cmps
btc
ds
sub
cmp
jo
loope
test
pop
shl
scas
test
fadd
inc
or
loopne
leave
mov
ins
jnp
retf
and
cmc
adc
daa
mov
cmp
ins
aad
inc
cmp
push
mov
les
sub
loopne
jne
cmp
jnp
dec
cli
dec
push
imul
pop
fs
std
or
sar
es
and
(bad)
aam
or
ja
or
int
lock
popa
stc
xchg
dec
cmp
aas
dec
and
dec
sbb
in
test
ret
stos
dec
dec
into
hlt
popa
pop
sbb
mov
inc
cs
mov
inc
daa
inc
shl
ins
bound
add
test
xchg
xchg
jne
xchg
sbb
je
rol
es
out
xchg
push
mov
and
in
ret
arpl
push
pop
pop
loopne
cs
push
int3
shl
inc
jb
sahf
pop
pop
cmp
jb
pop
jne
inc
mov
idiv
out
pop
add
mov
fs
mov
mov
ret
mov
dec
lods
repz
or
addr16
push
add
mov
cmp
pop
pushf
jns
mov
fwait
ins
dec
push
push
clc
mov
in
cmp
out
call
call
mov
push
cmp
jb
xor
jecxz
and
popf
sbb
out
sub
icebp
popa
clc
xor
mov
sub
pop
adc
scas
mov
dec
jmp
cmps
popf
push
mov
dec
pop
dec
inc
dec
mov
dec
xor
jns
push
int3
mov
xor
sbb
push
mov
inc
test
les
add
cdq
push
jo
aas
in
ficomp
add
cwde
test
sbb
sub
scas
jg
ins
xor
xor
shr
sub
call
(bad)
jno
out
fstp
inc
ins
cld
pop
nop
pushf
in
adc
lock
int3
pop
ror
push
scas
(bad)
(bad)
lea
mov
fmul
mov
dec
push
jb
shl
dec
rol
fdiv
mov
push
adc
fstp
adc
out
add
shr
imul
iret
fs
and
pop
je
and
and
into
push
and
mov
mul
jns
add
imul
cmps
mov
(bad)
pop
pusha
ss
in
cmp
jno
es
cmc
mov
aaa
sub
(bad)
fwait
iret
(bad)
fs
mov
adc
sbb
mov
sub
arpl
pusha
sbb
cmp
adc
out
push
in
(bad)
cwde
xchg
popa
(bad)
jb
mov
jmp
dec
data16
inc
rcr
dec
push
dec
aas
jno
sub
adc
mov
lahf
mov
push
popa
push
and
dec
in
add
pusha
(bad)
mov
jns
sbb
addr16
clc
lahf
jno
popf
ins
cmc
pop
(bad)
mov
and
in
add
iret
lea
mov
inc
fnstsw
fwait
inc
jo
xlat
test
sbb
neg
enter
out
add
enter
test
mov
and
mov
addr16
mov
aad
dec
ret
mov
sbb
push
pop
add
inc
sahf
nop
sub
pop
rol
mov
loope
loope
add
dec
xor
xor
mov
xor
movs
lea
arpl
fsub
mov
or
pop
shl
les
pusha
movs
retf
pop
out
dec
das
aas
and
jle
xchg
mov
mov
jmp
jmp
shl
sub
mov
loopne
imul
scas
(bad)
mov
test
(bad)
call
into
mov
add
jecxz
xchg
add
xchg
sbb
cmp
cld
sti
fnstsw
cmc
addr16
popf
div
or
mov
or
jl
jg
sbb
test
adc
cs
jbe
pop
call
lahf
pop
push
daa
or
jbe
idiv
retf
outs
test
fistp
jmp
cmp
(bad)
push
pop
or
push
add
add
add
add
out
pop
outs
lds
sbb
jmp
sub
pop
mov
lock
sbb
sub
int
inc
or
pop
das
cdq
xor
pushf
add
jne
mov
movs
sbb
repz
je
in
call
pop
fcmovnb
fs
mov
xchg
mov
pop
call
bound
add
add
aas
xchg
stc
and
(bad)
mov
cld
dec
jmp
pop
push
cld
je
xchg
pop
sbb
add
push
cmp
arpl
lock
mov
mov
sub
(bad)
cli
inc
ins
mov
jl
clc
mov
sbb
gs
jecxz
mov
mov
lock
pop
fiadd
loope
inc
mov
inc
pop
pusha
(bad)
sbb
push
arpl
sbb
jp
pop
jbe
mov
gs
stc
mov
mov
out
mov
adc
xchg
xchg
jg
inc
sbb
(bad)
mov
push
mov
popa
outs
or
pop
sub
test
les
inc
in
mov
enter
pop
or
test
shl
aas
pop
xchg
out
inc
cld
pop
push
mov
imul
push
test
int
lds
sti
sbb
push
xor
push
push
mov
jmp
dec
adc
xor
pop
push
pop
das
test
ja
clc
adc
hlt
jle
fstp
bound
out
fld
mov
fistp
inc
jg
shr
add
sti
pop
aam
out
lods
shl
and
mov
loope
ins
(bad)
xchg
mov
gs
xchg
repz
sbb
sbb
cmp
in
or
dec
fstp
mov
add
dec
adc
hlt
pushf
mov
push
cmp
cmp
fdivr
mov
rol
push
nop
dec
stc
dec
icebp
inc
jecxz
call
or
mov
cmp
out
test
retf
or
sub
or
and
ja
sysret
jae
mov
shr
fild
mov
mov
ror
cmps
aad
js
jmp
es
call
fucomp
lock
mov
jns
mov
pop
push
cmp
xchg
rol
push
cwde
sub
jb
mov
ins
inc
clc
das
xchg
push
pop
aaa
imul
rcl
xor
dec
imul
outs
inc
wbinvd
popa
lock
cs
outs
or
dec
dec
fistp
frstor
push
push
and
lahf
push
inc
or
(bad)
xchg
mov
add
out
in
pop
shr
fwait
mov
lds
push
lahf
or
jno
cmps
imul
push
adc
stc
data16
pushf
xor
mov
out
sub
arpl
add
pop
sbb
aam
cmps
rcr
sar
lods
pop
dec
jg
stc
dec
jno
in
jnp
push
(bad)
cmovp
sub
and
(bad)
sbb
rol
int
mov
mov
addr16
lea
ss
ss
pop
adc
pop
jne
iret
aas
dec
scas
push
sahf
in
or
inc
lds
ret
pop
mov
inc
jecxz
int3
cmp
and
ds
(bad)
cmc
popf
(bad)
push
sbb
lods
rcr
call
iret
mov
mov
or
adc
lea
fisttp
cmp
out
adc
or
loopne
test
ds
shl
cmps
stos
or
addr16
data16
aas
jns
in
pop
push
pop
jbe
movs
ds
pop
mov
out
ror
sub
(bad)
sar
mov
lea
and
sbb
inc
and
int
test
jge
add
dec
sub
clc
and
sub
pop
jl
inc
and
mov
or
cmp
popa
jmp
or
inc
and
jl
ret
call
or
adc
mov
shr
into
icebp
mov
adc
dec
mov
jo
bound
sti
(bad)
push
call
mov
sub
sbb
icebp
push
xor
xchg
sbb
xchg
pop
pop
fcomp
cld
push
sbb
in
and
sub
shr
push
jmp
inc
jae
bound
sub
xchg
js
xchg
jecxz
mov
lods
inc
inc
mov
call
or
mov
cmp
loop
adc
push
mov
pop
inc
push
cdq
push
push
pop
dec
dec
pop
(bad)
lahf
ret
xchg
push
test
jnp
test
daa
xor
test
xchg
push
mov
mov
push
mov
and
cmp
(bad)
mov
jns
adc
xchg
dec
add
std
in
mov
loopne
aam
mov
push
cwde
ret
add
stos
xchg
out
fcom
fcomp
jle
daa
fbld
sub
shl
in
aam
fadd
jne
stc
cld
sahf
pop
jne
in
dec
shl
pushf
jno
ss
je
leave
fsubr
out
in
jmp
xor
xor
out
sbb
and
mov
lods
push
and
test
cs
jno
int
test
mov
sub
sub
cmp
push
mov
or
fldenv
(bad)
inc
mov
pop
inc
dec
clc
pop
jl
lods
dec
mov
test
stc
xchg
les
inc
or
inc
cmc
xchg
mov
jbe
or
hlt
sbb
adc
mov
ds
xor
loope
in
inc
mov
and
cs
sbb
clc
rcl
pop
adc
mov
hlt
(bad)
repz
or
je
add
cmps
adc
xchg
ds
dec
or
inc
stos
pop
jne
pop
mov
arpl
jmp
pop
nop
test
fsubr
aam
cpuid
scas
mov
pop
mov
daa
aam
and
sahf
mov
mov
sub
add
push
inc
and
int
call
xor
rol
loope
lea
and
dec
imul
popf
push
int3
ror
leave
scas
loopne
mov
repnz
mov
dec
dec
add
aas
ret
jne
leave
push
push
jo
fiadd
inc
inc
popa
test
int
loop
push
dec
fadd
push
jno
sub
sbb
ja
mov
inc
inc
scas
inc
sbb
jbe
pop
cmps
push
jo
fnsave
xor
cs
push
mov
add
mov
retf
sub
int3
sti
enter
mov
push
dec
pop
or
jo
jmp
jmp
ss
cdq
xchg
cmp
adc
neg
repnz
cdq
jnp
imul
in
push
shl
das
mov
(bad)
jbe
and
pop
gs
jne
adc
ror
and
mov
cwde
jecxz
add
loope
aas
in
lods
add
xor
jmp
mov
mov
dec
scas
cmp
cmp
out
xchg
movs
cmps
xchg
movs
(bad)
sbb
sub
div
mov
cmp
pop
inc
or
push
std
cmps
out
jmp
test
jo
push
cld
(bad)
xchg
fs
shl
mov
push
xchg
test
out
test
inc
lods
retf
mov
mov
dec
push
and
stos
or
test
nop
test
repz
add
nop
or
mov
jge
sbb
mov
stc
out
lds
repnz
jle
sbb
fld
inc
adc
mov
retf
dec
or
ret
nop
pop
dec
(bad)
loopne
push
pop
loopne
mov
(bad)
push
push
push
(bad)
in
mov
daa
dec
dec
xor
and
rcl
mov
or
movs
dec
mov
fldenv
xchg
sub
mov
call
inc
xchg
sub
(bad)
into
ficomp
push
in
pusha
mov
mov
or
or
mov
xor
mov
pop
add
and
ins
mov
nop
cmp
rcr
mov
pop
add
xor
pop
jmp
mov
xlat
aaa
data16
mov
mov
adc
bound
push
mov
jae
dec
inc
xlat
cs
push
es
push
jl
mov
sbb
or
dec
cwde
rcl
data16
pop
fst
fnsave
sbb
rcr
dec
or
int
mov
imul
pop
outs
frstor
add
js
mov
mov
dec
test
mov
fcmovnu
xlat
xor
jbe
outs
push
aad
dec
cmps
std
sbb
fldcw
pop
movs
test
inc
push
and
mov
and
jno
hlt
fs
ins
ss
lods
sub
jge
xchg
fst
scas
dec
lea
inc
sbb
push
into
add
jbe
mov
(bad)
sub
sbb
mov
loop
add
dec
xchg
ficom
movs
icebp
nop
pop
sub
cmp
movs
ins
xchg
(bad)
cmp
bound
icebp
pop
out
mov
idiv
fwait
sub
jge
out
xor
outs
push
dec
cmps
mov
ds
inc
cmp
outs
pop
and
loop
pop
in
stc
push
(bad)
sub
sub
adc
jnp
int3
jo
inc
into
aad
cld
popa
sbb
movs
xor
mov
bound
out
adc
mov
xchg
jg
cwde
int3
sbb
retf
(bad)
push
loop
test
push
cmp
fdivp
xlat
sub
jnp
not
xor
inc
push
cdq
imul
adc
mov
cli
(bad)
jle
xchg
stos
mov
mov
push
mov
cmps
pushf
add
nop
fsub
imul
(bad)
aas
cli
mov
lods
fiadd
shl
or
shl
das
enter
inc
inc
mov
loopne
and
das
out
retf
cmps
xor
(bad)
adc
mov
inc
inc
push
movs
lods
dec
pop
out
xchg
mov
(bad)
sahf
test
test
mov
or
imul
in
lds
cmp
sbb
pop
lods
jmp
rcr
mov
ss
in
cmps
bound
or
or
jl
push
xor
xor
repz
mov
or
loope
adc
pop
int3
movs
xor
aad
stos
lea
in
lock
es
xor
mov
icebp
xor
mov
dec
out
jne
pop
lods
lahf
scas
or
sub
repz
ds
fistp
push
sbb
xor
ins
repz
adc
gs
(bad)
sub
out
sub
fistp
and
pop
orps
push
cli
fisubr
push
aad
lods
je
mov
dec
mov
fwait
xchg
add
inc
cld
pop
fcmovnb
inc
and
lahf
cmps
repz
sub
mov
aam
sbb
out
leave
call
adc
push
or
jnp
popa
ins
sub
xor
sbb
jg
sub
das
mov
mov
mov
mov
jl
push
in
lea
sub
push
or
pop
sahf
mov
sbb
repz
jno
push
or
rcl
mov
clc
sbb
mov
cmp
cmps
das
adc
and
in
jge
xor
mov
xchg
mov
push
dec
mov
adc
xchg
out
mov
sbb
fdiv
adc
jecxz
sbb
and
push
scas
sub
(bad)
cli
push
add
popa
adc
cli
rcl
adc
mov
enter
movs
ja
mov
ins
sub
pop
inc
mov
sbb
xlat
inc
iret
mov
adc
dec
addr16
push
add
dec
xchg
or
mov
test
cmp
popf
sbb
fld
lock
sub
pusha
int
test
sub
dec
pop
imul
sbb
mov
mov
fsubr
repnz
retf
jo
and
retf
sub
xchg
cmp
lock
jge
pop
dec
push
pop
xor
sbb
cs
push
mov
jg
in
mov
push
out
ror
shl
(bad)
ins
stc
iret
xor
in
mov
inc
or
dec
adc
movs
ja
or
fnstenv
inc
pop
jae
iret
jmp
add
cmp
(bad)
cld
lds
call
fnstsw
je
ror
push
fstp
or
fisttp
call
lea
or
aaa
daa
and
push
cmp
cld
dec
repnz
(bad)
dec
out
xor
ror
lds
aad
sar
xchg
lods
mov
xor
mov
popa
and
mov
mov
cmp
test
lock
jmp
pop
stos
in
aad
aas
sbb
sbb
js
jge
push
mov
out
icebp
loop
sti
out
sbb
jle
mov
outs
xor
test
push
ret
loopne
jg
or
add
mov
loop
pushf
push
jb
ds
or
ret
aad
or
sti
shr
dec
shl
jnp
fld
and
(bad)
and
add
jmp
push
mov
rcl
mov
in
dec
xchg
into
nop
add
xor
mov
retf
push
jl
cdq
mov
mov
dec
mov
xor
lods
dec
mov
pop
in
push
nop
(bad)
addr16
jb
pop
pop
pop
add
cmp
fisubr
fadd
cmp
jp
push
icebp
mov
sub
cdq
js
cmc
(bad)
in
xchg
mov
push
fmul
dec
popa
mov
and
retf
fist
mov
inc
push
inc
(bad)
cmp
ins
test
jns
inc
xchg
stos
cwde
ins
add
mov
fld
sbb
jp
and
(bad)
adc
and
ja
cmp
cmp
shr
pop
test
pop
aaa
dec
push
rcr
fdiv
das
lods
sbb
bound
(bad)
pop
lahf
test
adc
scas
dec
cmp
inc
inc
cld
loop
push
xor
test
fnstenv
push
xchg
in
fistp
add
xchg
dec
test
or
pop
jmp
and
pop
sbb
(bad)
adc
addr16
lods
test
push
adc
popa
sbb
ds
bound
fdiv
add
push
or
add
push
pop
lds
jge
mov
enter
mov
or
jg
dec
shl
outs
scas
fistp
int3
jae
inc
(bad)
xchg
out
jle
add
adc
adc
inc
test
sbb
xor
outs
mov
inc
xchg
mov
sub
and
sbb
sub
sub
repnz
sub
call
lods
or
mov
loopne
push
xchg
cmp
fnsave
pop
jl
adc
add
inc
ret
leave
ficomp
xor
retf
inc
or
jge
and
repz
into
adc
xchg
imul
fmul
(bad)
fwait
mov
je
xchg
xor
mov
pop
xor
loop
sub
mov
call
push
cmps
or
(bad)
cmp
sar
cmp
push
cmps
lock
ret
lea
gs
jae
retf
icebp
add
sub
shl
fild
xchg
ja
(bad)
jle
icebp
mov
push
jmp
bound
fsubr
dec
test
mov
jg
mov
push
sti
stos
popa
movs
adc
test
xor
and
pop
mov
mov
sub
add
arpl
jnp
dec
daa
movs
sub
sub
clc
sub
std
xor
pop
mov
es
xor
bound
jbe
loopne
xor
fisubr
or
xchg
cli
mov
into
arpl
out
xchg
mov
dec
retf
out
in
pop
out
add
ss
inc
sti
and
push
dec
inc
fnstsw
test
pop
cs
ret
je
mov
lds
les
mov
movs
xor
or
xor
pop
outs
adc
xchg
sub
jnp
mov
mov
push
repz
imul
shl
fcom
mov
sub
pop
jmp
xchg
cmp
pusha
leave
dec
icebp
call
sbb
mov
sub
add
fild
sbb
sub
add
ret
hlt
xor
jecxz
sbb
and
mov
stos
cmp
fidiv
popf
loope
mov
push
mov
in
loopne
jns
ret
shr
xchg
outs
jmp
bound
inc
adc
mov
mov
xor
cmp
xchg
(bad)
ret
add
aaa
push
das
movs
test
std
push
gs
push
adc
stos
fdivr
leave
sbb
xor
sub
xor
fdivr
in
pusha
mov
jle
xor
aam
xchg
jno
jae
jne
je
pop
(bad)
xchg
shr
rcl
clc
mov
scas
push
cmps
inc
xchg
lea
push
jb
aas
jge
cld
leave
std
push
aad
test
(bad)
mov
jmp
mov
adc
xor
push
pop
test
sbb
loop
cmp
sub
aam
mov
test
leave
inc
pop
loope
fdivr
and
xor
inc
push
mov
push
scas
mov
out
and
push
sti
sbb
sbb
outs
(bad)
or
sbb
in
loopne
div
ja
jp
or
jns
jns
or
cli
push
jns
mov
jb
xor
xlat
pop
xchg
ins
sub
jno
mov
jge
add
pop
cmps
daa
fiadd
xor
int
stos
inc
or
xchg
xchg
cdq
int3
xchg
rcr
scas
pop
sar
addr16
std
in
adc
dec
xchg
cld
ins
test
popf
cmps
pop
es
xchg
sahf
jo
push
adc
mov
(bad)
adc
sbb
add
ds
push
xchg
sub
test
and
jne
dec
mov
aam
or
sbb
push
dec
mov
lahf
push
imul
scas
in
jne
pop
or
(bad)
scas
ins
loopne
add
std
or
xchg
sahf
fwait
cmp
mov
add
rcl
test
sub
daa
inc
fcomp
xchg
mov
(bad)
push
call
loop
cmp
ja
rol
xchg
and
retf
cdq
sbb
cdq
mov
leave
sbb
stos
loop
iret
hlt
xchg
add
lds
cli
cld
ret
outs
dec
sbb
dec
(bad)
loope
dec
cwde
js
in
loopne
into
sub
stc
shl
(bad)
sbb
mov
mov
jg
cs
mov
xchg
cmp
adc
dec
dec
retf
(bad)
in
mov
ret
pop
or
cmp
inc
cmc
mov
cwde
movs
sbb
js
xor
not
retf
ret
fild
pushf
aas
pop
xchg
popa
push
arpl
inc
nop
js
or
pushf
and
fdivr
fnstcw
icebp
xchg
mov
rol
mov
(bad)
jmp
sub
xchg
call
or
pop
aam
pop
inc
(bad)
fnstcw
xchg
test
mov
test
mov
shl
xor
test
mov
push
or
popf
nop
push
mov
repnz
in
dec
push
fcos
lea
int3
push
inc
daa
xlat
aas
jl
inc
jle
adc
mov
inc
std
jne
add
maskmovq
neg
inc
outs
call
outs
lahf
mov
xchg
mov
sbb
ins
ror
hlt
data16
mov
rcr
dec
lock
cmp
test
outs
xchg
test
xlat
fstp
scas
repnz
out
mov
inc
jne
xchg
push
leave
in
mov
ins
pushf
push
adc
push
xchg
mov
mov
sub
fcomp
inc
xor
cmp
cmp
jns
sbb
loop
shl
xchg
sbb
dec
xor
push
and
movs
cmps
adc
dec
mov
(bad)
shl
and
test
pop
(bad)
cmp
cmp
adc
mov
call
les
neg
shr
movs
mov
fld
in
ss
scas
and
fdiv
dec
cmc
cmps
shl
out
jo
lods
and
mov
int3
mov
and
cmp
xchg
callw
xor
xchg
cli
cmps
or
push
sbb
inc
xchg
inc
sub
xchg
fs
and
les
imul
not
and
cdq
fld
inc
or
pop
push
(bad)
mov
in
out
or
imul
pop
ss
cwde
stos
fild
in
xor
in
loop
jb
ret
xor
xor
mov
cdq
jg
test
mov
jmp
pop
or
retf
mov
xchg
(bad)
and
xchg
es
push
push
inc
or
inc
aas
inc
push
cmp
jbe
jae
retf
sub
rol
jo
sete
call
ss
mov
xor
pop
pop
cmp
xor
adc
mov
add
dec
mov
pop
scas
cmp
add
loop
mov
ss
loop
pop
xchg
pop
shr
loop
cmp
xchg
sbb
push
push
js
mov
pop
stos
cmp
jmp
sbb
stos
xchg
ins
fsub
pop
xchg
xchg
nop
push
xchg
jg
(bad)
lds
pop
lods
cld
out
fisub
data16
pop
push
push
ret
es
or
jle
rol
sti
retf
lock
stos
mov
aad
loope
(bad)
mov
sub
cmps
fadd
and
popa
aaa
hlt
pop
dec
add
jns
and
sub
xor
cdq
push
scas
je
bound
shl
ficomp
dec
and
dec
mov
mov
or
aaa
movs
ret
addr16
jbe
aas
fwait
mov
mov
pop
sar
adc
movs
cmps
retf
(bad)
mov
lods
leave
mov
jmp
test
push
idiv
ds
cmp
xlat
fdivr
push
in
or
out
and
xor
jae
sub
jmp
xchg
and
out
fldcw
add
hlt
arpl
mov
cmp
cld
mov
xchg
fs
imul
je
add
scas
inc
adc
imul
fist
(bad)
stos
xlat
xchg
dec
xchg
jb
test
sbb
sbb
sar
adc
hlt
ds
sub
pop
sub
xchg
and
cmp
adc
sbb
cmp
add
mov
pop
movs
test
cmp
cli
pextrw
ja
dec
mov
or
arpl
dec
lsl
loopne
pop
fsub
outs
dec
dec
cmp
rcl
dec
sbb
fwait
stos
and
int3
clc
test
xchg
dec
out
xor
mov
dec
rcr
push
inc
and
adc
or
pop
or
dec
hlt
sub
icebp
movs
imul
sahf
iret
jb
rol
gs
stos
iret
push
(bad)
into
je
sub
lods
mov
lahf
jnp
scas
mov
push
out
xor
or
mov
xor
sbb
div
cs
xor
int
sub
sub
jecxz
sahf
imul
pop
mov
rcr
fisubr
pop
mov
jg
aaa
ror
(bad)
jo
or
dec
jbe
mov
movs
stc
sar
fldln2
inc
daa
popa
adc
int
cmp
aaa
jp
scas
xchg
adc
pop
pop
int
dec
inc
repz
jl
jno
scas
xor
test
gs
popa
or
push
mov
inc
les
cmps
fnstsw
mov
mov
shl
add
jo
mov
repz
clc
pop
sub
mov
in
dec
les
daa
cmps
daa
sbb
add
add
add
mov
xor
loope
cld
or
mov
rcr
in
or
xchg
xor
or
lahf
cmp
es
test
dec
dec
cmp
xchg
idiv
xor
fcomp
pop
in
pushf
dec
xchg
mov
test
cld
jl
pop
pushf
push
adc
pop
into
cmc
ins
retf
pop
pop
retf
sti
(bad)
jmp
jmp
cmp
dec
shl
movs
sub
add
adc
jae
xlat
iret
loope
mov
mov
push
fisubr
pop
or
mov
cmp
rcl
stos
imul
pop
pop
push
enter
sbb
popf
iret
outs
push
fwait
repz
mov
pop
pop
mov
test
daa
dec
sub
pop
sub
lods
icebp
fcom
xchg
std
push
push
loope
or
pop
cmp
and
mov
mov
ds
int
sub
jb
mov
enter
call
mov
xchg
mov
xchg
add
gs
sub
aas
inc
nop
js
add
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
lea
add
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
setl
and
mov
mov
mov
sub
mov
add
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
lea
mov
imul
add
mov
mov
cmp
sete
and
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
mov
shl
add
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
shl
add
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
lea
add
mov
lea
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
cmp
setl
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
lea
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
setl
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
lea
mov
imul
add
mov
mov
cmp
sete
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
add
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
shl
mov
mov
add
shl
add
mov
mov
mov
mov
mov
shl
mov
mov
mov
shl
add
add
sub
mov
mov
add
shl
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
add
sub
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
cmp
setb
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
add
add
sub
mov
mov
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
add
mov
lea
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
lea
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
cmp
setl
and
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
mov
mov
and
mov
mov
or
mov
mov
mov
or
mov
xor
mov
or
xor
or
and
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
lea
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
and
mov
cmp
setl
and
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
mov
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
add
pop
pop
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fiadd
mov
mov
mov
mov
repnz
and
loopne
add
and
pusha
shl
jns
and
add
push
add
test
add
add
add
add
add
mov
add
add
test
add
add
test
add
shl
add
add
mov
mov
mov
push
add
add
test
add
add
add
sahf
mov
and
add
mov
mov
pop
test
add
add
popf
in
loopne
test
mov
add
shl
and
add
add
add
cwde
test
nop
add
add
aas
and
mov
add
je
jmp
mov
and
add
add
adc
add
sete
add
add
add
add
mov
sub
mov
ins
dec
ins
adc
out
add
add
rol
xor
adc
jo
ja
add
add
add
sub
mov
add
add
add
jnp
mov
sub
mov
jg
jmp
sar
sub
fadd
xchg
imul
into
shr
add
add
add
test
jne
sub
(bad)
out
mov
mov
add
add
add
in
lds
and
sbb
shl
add
cmp
add
fimul
add
fmul
iret
add
pushf
jmp
mov
sub
imul
add
sub
add
bound
add
sub
mov
adc
add
jmp
mov
mov
xchg
fcomp
cmovno
add
add
test
add
add
and
in
fwait
mov
add
add
sbb
add
test
jmp
jnp
push
mov
jg
out
add
sahf
repnz
add
shr
inc
and
(bad)
hlt
add
add
add
add
add
mov
es
iret
(bad)
and
add
add
add
add
div
add
mov
je
jmp
mov
mov
inc
dec
leave
fadd
jg
jmp
mov
sub
adc
lahf
outs
add
jnp
jp
add
add
shr
inc
pop
sub
test
in
dec
jmp
mov
sub
pop
inc
pop
xor
aad
add
into
sub
push
pushf
test
test
jmp
add
sub
mov
cmove
sub
add
ins
test
add
sub
mov
add
push
add
add
push
add
inc
xor
sub
sub
add
add
mov
loopne
mov
sub
mov
sub
add
mov
mov
nop
sahf
jns
sub
inc
test
add
jmp
mov
dec
adc
sub
test
add
out
jmp
test
add
add
mov
inc
jno
je
sub
mov
sub
fmul
rcl
add
add
mov
add
and
mov
iret
std
add
add
add
add
sub
mov
pop
test
cmp
les
mov
jl
out
aad
dec
inc
jno
xchg
test
add
sbb
sbb
jnp
mov
cwde
jge
icebp
mov
iret
std
pop
add
out
dec
add
add
mov
add
mov
mov
mov
cmp
cmove
rol
jmp
mov
mov
mov
mov
in
add
add
xchg
les
add
mov
mov
add
inc
ror
add
call
dec
in
add
or
add
mov
mov
mov
add
add
add
dec
push
mov
mov
cmp
(bad)
nop
inc
inc
and
push
pushf
add
fiadd
add
adc
mov
inc
dec
leave
mov
and
mov
shr
sbb
out
inc
ror
add
mov
push
add
test
add
add
adc
jmp
inc
inc
and
push
add
add
add
mov
mov
jmp
mov
mov
lsl
dec
test
sahf
add
test
add
add
and
add
add
pushf
add
add
add
xchg
test
add
add
add
bound
add
inc
sbb
test
add
jns
test
add
out
add
add
test
add
add
add
add
mov
mov
sti
xchg
jno
add
add
aas
xchg
jnp
add
add
mov
dec
cmc
aaa
cwde
out
add
add
add
mov
fimul
movs
push
add
mov
idiv
mov
mov
repnz
add
mov
in
pushf
(bad)
sar
ret
int3
dec
add
inc
retf
jno
add
add
test
add
mov
mov
mov
movntps
mov
add
in
mov
and
rol
mov
jmp
(bad)
iret
and
cmp
fcmovnb
mov
sbb
outs
push
les
adc
add
lds
jmp
add
outs
xlat
jmp
cwde
add
add
inc
xchg
add
add
or
jmp
pop
test
add
push
and
js
sbb
dec
add
push
imul
push
add
add
sbb
iret
cmp
sbb
paddq
and
cmp
sete
cmp
setl
mov
or
mov
shl
jne
into
rol
retf
add
mov
fadd
add
sar
add
add
popf
or
retf
cmp
add
test
xlat
and
cmp
(bad)
ret
cmp
setl
(bad)
and
xor
or
test
cmovne
mov
mov
mov
jmp
mov
in
add
add
movs
hlt
pop
pop
and
mov
mov
push
imul
(bad)
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
or
mov
mov
or
ins
inc
test
add
add
or
add
add
and
cmp
add
add
add
jp
test
clc
add
loopne
dec
add
test
stos
add
xchg
add
out
dec
es
pop
add
add
add
test
add
les
jno
add
test
call
jp
add
les
dec
add
mov
mov
and
add
adc
add
mov
cmp
and
add
add
mov
movs
mov
and
add
add
mov
add
push
(bad)
pop
add
add
add
loopne
mov
sub
sub
mov
jmp
or
adc
xchg
add
sub
mov
gs
add
add
add
add
sub
mov
cmovno
add
inc
test
add
hlt
sub
mov
int3
(bad)
and
pop
jmp
mov
and
add
add
xchg
bound
mov
and
or
add
and
jmp
dec
add
popf
test
add
scas
cmp
push
add
push
jg
or
add
repnz
xor
sub
add
inc
(bad)
popa
add
add
add
add
jno
out
sub
and
pop
add
jg
movs
add
add
test
sub
mov
pminsw
into
add
jmp
mov
stos
cmp
and
add
add
test
ja
add
mov
test
add
add
mov
jg
jmp
and
sub
mov
or
add
dec
push
add
add
add
scas
cmp
movs
add
add
(bad)
push
add
mov
add
add
add
add
adc
add
(bad)
add
add
stos
xor
add
add
push
mov
add
(bad)
in
xchg
jmp
mov
sub
mov
and
add
pop
jg
or
add
dec
mov
sub
add
add
mov
jg
jmp
mov
fst
cmp
mov
and
ret
push
psrlw
add
jmp
imul
fcom
and
add
add
pop
add
daa
add
add
xchg
and
add
and
add
pmaddwd
add
loopne
dec
add
sub
out
add
xchg
mov
pextrw
pop
add
jmp
jg
and
add
cmp
jecxz
and
add
pop
jg
or
add
mov
sub
mov
je
jmp
mov
and
into
add
sub
push
inc
and
je
sub
mov
sub
mov
and
cmovg
add
add
add
add
mov
add
add
mov
and
rol
lock
fdivr
add
pop
jmp
ins
je
or
add
mov
sub
stos
xor
sub
mov
je
push
add
add
add
sub
mov
int3
test
push
add
pop
loope
dec
mov
sub
inc
inc
outs
pusha
je
jmp
mov
fnstenv
loope
clc
mov
je
jmp
mov
push
sub
add
test
or
jmp
mov
add
sub
mov
jmp
add
sub
add
mov
cmp
pop
mov
push
sti
test
add
loope
and
retf
add
pusha
ins
cmp
adc
test
repz
xchg
add
lahf
inc
and
je
jmp
dec
test
push
pop
sub
mov
out
test
dec
jns
jmp
mov
add
mov
je
sbb
mov
pop
mov
inc
pop
test
add
add
mov
sub
add
add
mov
test
add
jmp
mov
pop
xchg
das
xchg
and
pminub
mov
add
test
add
nop
pop
mov
jp
test
ret
cmp
test
add
add
mov
je
jmp
imul
fimul
je
inc
and
je
jmp
jmp
fnstsw
mov
imul
fisub
pop
add
cmp
cmove
mov
and
add
add
xor
xor
sar
add
int3
jl
add
cmp
mov
add
sub
sub
movs
scas
repz
sbb
dec
add
add
sbb
mov
xor
mov
and
fdiv
add
repnz
mov
sbb
and
and
rcl
mov
repz
and
cmp
test
xlat
or
hlt
les
mov
sbb
mov
shl
les
jno
mov
gs
sar
mov
imul
mov
test
add
mov
push
ss
setne
retf
mov
mov
int3
jl
add
add
xor
push
sub
add
pmullw
sub
or
call
aad
test
xor
xor
stc
aas
or
and
imul
or
test
or
inc
sbb
cld
hlt
les
mov
cmovne
lahf
mov
loopne
les
shl
add
add
mov
aam
and
retf
test
out
inc
ror
stos
jmp
mov
add
sbb
add
add
mov
jg
and
les
cmp
ja
xchg
add
pop
add
mov
inc
xchg
(bad)
clc
add
add
jns
inc
leave
and
xchg
adc
add
mov
mov
mov
(bad)
push
and
add
inc
ror
add
xor
add
mov
mov
mov
and
mov
shl
xchg
add
xor
add
add
cmp
jne
or
dec
jbe
ins
mov
sti
(bad)
(bad)
ror
inc
jge
and
add
add
in
add
mov
mov
mov
mov
xlat
xlat
sti
(bad)
sub
out
add
add
sub
psrad
add
cmp
sete
cmp
psubw
mov
and
xor
or
mov
xor
add
add
lea
add
mov
and
add
add
sbb
add
add
add
(bad)
cmc
and
add
add
and
add
add
add
cmp
dec
movs
jmp
mov
mov
mov
jg
int3
jl
add
enter
mov
lock
aaa
add
push
add
sti
jmp
add
mov
scas
repz
xor
sete
cmp
sahf
ret
ret
test
mov
add
mov
mov
jp
and
and
jb
ret
cmp
les
mov
cld
jno
mov
cmovne
mov
jmp
repnz
je
fdiv
scas
adc
and
hlt
les
mov
sbb
(bad)
mov
ins
pop
add
repnz
dec
jecxz
push
add
mov
sbb
xlat
add
sub
sub
scas
xlat
and
xor
dec
hlt
add
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jb
and
lea
or
inc
movs
mov
loopne
add
jmp
add
loopne
jno
inc
fsubrp
sbb
adc
add
add
mov
jecxz
and
std
and
add
add
add
add
add
cli
add
xchg
and
add
add
mov
and
add
add
pop
jp
push
or
repnz
and
xor
add
or
add
mov
outs
movs
add
add
test
or
add
add
jno
mov
(bad)
cmp
(bad)
js
add
mov
xor
jl
add
add
lods
xor
sub
sub
mov
hlt
add
cmp
jle
mov
xorps
mov
cmp
mov
xor
xor
mov
and
sbb
add
ror
hlt
or
xor
mov
or
add
inc
retf
xlat
or
xchg
add
inc
scas
mov
and
add
retf
jmp
mov
aam
retf
fstp
mov
push
dec
push
xchg
add
dec
xor
mov
enter
clc
repz
ret
lock
test
jmp
add
loopne
jmp
mov
and
repz
push
(bad)
gs
add
sete
xor
pushf
ret
mov
xor
push
inc
and
mov
add
inc
in
dec
(bad)
mov
and
jle
ret
adc
xchg
dec
les
mov
cld
test
out
je
add
inc
aas
mov
jmp
mov
lea
pop
pop
dec
fcmovb
mov
in
add
mov
and
ret
push
mov
add
xchg
or
add
add
xor
xchg
das
push
dec
jmp
mov
add
mov
or
add
mov
add
pop
pop
pop
sbb
data16
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
inc
or
xchg
or
push
add
add
mov
and
add
add
add
stos
mov
mov
jge
add
add
xchg
int3
sbb
fisubr
mov
movzx
push
and
mov
and
rol
add
add
sub
xchg
or
movzx
mov
add
add
mov
iret
xchg
and
add
push
add
xor
add
sbb
mov
and
(bad)
and
test
sbb
mov
ins
call
mov
mov
mov
mov
cmp
cmp
out
add
add
mov
add
add
sbb
add
add
test
mov
enter
inc
add
add
test
push
add
add
add
add
and
add
ror
jp
dec
add
add
add
mov
sub
sub
loope
adc
add
add
add
add
mov
int3
add
and
mov
mov
(bad)
and
add
jge
or
mov
int3
xor
mov
lock
pavgw
ss
and
add
and
mov
psubusw
jge
jmp
sub
add
add
mov
cmp
cli
add
mov
xchg
cmp
mov
jg
jmp
mov
xchg
(bad)
movs
add
je
jmp
mov
add
rol
sub
(bad)
and
add
sbb
and
or
jmp
mov
sub
mov
je
jmp
or
and
dec
add
sub
hlt
test
cmovae
add
add
sbb
fisubr
jecxz
mov
and
retf
mov
shld
add
xchg
add
sub
mov
add
(bad)
and
add
jmp
mov
push
add
sub
int3
cmp
mov
adc
xchg
jmp
xchg
test
add
jge
xchg
call
mov
int3
add
(bad)
and
add
jmp
push
test
add
push
cwde
mov
test
and
movs
test
add
mov
sub
mov
setbe
add
add
add
add
test
int3
add
mov
mov
jl
test
add
mov
mov
sub
mov
js
(bad)
and
int3
add
sbb
add
mov
sbb
ins
add
(bad)
and
je
push
pop
add
and
add
or
mov
outs
add
sbb
lea
in
add
sub
push
inc
dec
pop
je
jmp
mov
sub
mov
jg
jmp
mov
sub
fisttp
cmp
add
add
pop
add
add
and
add
add
shl
test
push
add
jnp
add
int3
add
add
mov
das
test
push
add
outs
jmp
add
mov
and
add
jge
and
pop
xor
or
cmp
add
jmp
mov
and
add
add
mov
mov
(bad)
push
and
add
ror
add
hlt
inc
sub
add
add
mov
neg
sub
mov
cmp
add
add
test
add
add
mov
dec
movs
test
add
int3
push
add
arpl
sti
sar
inc
and
push
push
jmp
mov
sub
mov
and
je
jmp
jmp
adc
cmp
cmp
mov
xor
cmovne
mov
jmp
mov
mov
into
adc
mov
mov
sub
sub
rol
add
xchg
and
xchg
imul
sub
add
xchg
ret
cwde
dec
add
add
pushf
(bad)
mov
cli
cli
xor
or
imul
mov
jmp
mov
test
and
add
and
(bad)
or
loope
add
add
add
xchg
and
add
add
or
jmp
add
ds
mov
cmp
setne
and
mov
and
aaa
add
in
xor
mov
mov
mov
sub
sub
add
sub
lock
xlat
inc
dec
add
push
xchg
(bad)
cld
dec
or
in
setl
mov
xor
mov
xor
xor
mov
mov
dec
add
fisttp
(bad)
and
popa
add
inc
and
cwde
fsubr
adc
or
mov
and
mov
inc
and
or
mov
mov
mov
xchg
or
and
or
test
cmovne
int3
mov
mov
xchg
and
xor
push
dec
add
ret
cmp
mov
jmp
ins
push
jge
add
add
xchg
and
data16
loop
or
sub
test
and
add
add
adc
add
pop
mov
icebp
fiadd
add
add
ins
push
add
xchg
inc
mov
jmp
or
and
push
add
mov
add
mov
add
add
mov
fldcw
test
add
inc
(bad)
cmp
jp
rol
add
retf
mov
mov
mov
mov
add
sbb
lahf
shl
and
add
jmp
std
mov
enter
mov
cwde
mov
stos
jne
hlt
xchg
add
add
cdq
hlt
idiv
xlat
and
cmp
cmovne
nop
pop
and
push
add
mov
stos
mov
add
or
test
lock
add
add
fiadd
jecxz
and
add
mov
xor
or
add
rol
and
xchg
xchg
test
or
in
add
mov
call
jne
mov
xor
and
test
add
inc
mov
cmp
cmove
mov
and
add
jmp
lea
mov
and
add
in
les
jbe
xor
icebp
test
add
xchg
aas
push
data16
push
add
adc
jmp
xor
mov
nop
repz
sub
mov
adc
arpl
and
and
xchg
(bad)
out
or
add
mov
test
and
adc
xor
mov
inc
arpl
jbe
mov
and
cmp
or
or
dec
int
test
das
or
xor
or
cmp
or
test
mov
cmovne
mov
jmp
mov
into
mov
add
add
or
push
fild
ror
mov
bswap
(bad)
mov
add
mov
mov
call
and
arpl
ja
sbb
and
mov
mov
add
add
mov
or
dec
inc
and
push
mov
jl
sub
scas
loope
out
add
ins
inc
int3
sbb
paddb
cmp
popf
pushf
test
mov
add
xor
pop
movs
add
loopne
add
ffreep
pop
and
mov
and
and
mov
mov
mov
mov
adc
mov
adc
in
(bad)
popa
and
jg
out
and
xor
dec
sti
jb
or
cmp
fmul
loopne
add
inc
retf
(bad)
rol
push
add
mov
inc
add
push
inc
fucomp
inc
add
add
lea
or
and
push
dec
add
and
mov
mov
lock
mov
add
nop
push
and
add
mov
add
xor
mov
mov
cmps
fstp
add
test
add
add
add
add
inc
popf
and
add
push
add
add
mov
jmp
lea
out
js
ret
mov
or
and
dec
sbb
add
and
in
add
add
lea
add
or
leave
rol
and
mov
out
cwde
mov
outs
pusha
add
idiv
(bad)
(bad)
dec
add
mov
sbb
cld
dec
add
adc
or
add
and
hlt
int3
into
movzx
scas
and
and
add
mov
add
or
inc
test
push
add
aam
add
fidivr
out
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fst
mov
add
mov
mov
and
add
mov
or
inc
mov
and
add
add
push
rcl
xchg
and
add
mov
and
add
add
(bad)
cmp
add
ja
test
jg
add
fisttp
pop
sbb
pop
dec
add
push
mov
sub
mov
(bad)
pop
add
(bad)
mov
add
mov
sub
mov
seta
add
add
test
adc
jmp
xor
pop
or
add
scas
(bad)
and
add
jmp
mov
sub
mov
dec
pop
dec
mov
fild
jmp
loop
daa
ret
add
stos
test
add
add
add
adc
mov
and
xor
stos
test
add
push
je
jmp
mov
add
mov
jg
jmp
mov
and
add
add
fisttp
cmp
add
test
add
jmp
and
and
adc
add
mov
hlt
push
add
scas
(bad)
mov
loope
add
rol
sub
or
and
iret
add
jg
jmp
mov
sub
or
loop
jg
jmp
mov
xor
sub
mov
and
(bad)
repz
add
add
add
xor
add
ror
add
pop
add
imul
add
add
daa
and
adc
add
add
mov
mov
mov
scas
mov
test
outs
add
mov
sub
inc
pop
into
test
add
jg
jmp
loop
and
add
loop
mov
pop
mov
test
add
and
test
add
jmp
mov
pop
leave
xor
mov
push
xor
jg
or
add
mov
sub
mov
dec
imul
add
sub
add
mov
and
add
sub
mov
add
add
add
(bad)
mov
add
add
mov
je
mov
add
add
sub
sub
mov
ror
add
add
add
iret
xor
xlat
test
add
pop
sub
or
adc
lds
xor
add
sub
mov
inc
(bad)
and
sub
jmp
mov
sub
mov
in
and
add
inc
add
test
add
sub
mov
setle
add
add
inc
add
xor
sub
mov
test
add
dec
add
sub
add
sub
mov
data16
cmps
add
add
add
add
mov
add
mov
and
add
push
add
retf
add
add
add
icebp
mov
and
add
add
jmp
mov
sub
aam
and
add
imul
add
mov
sub
inc
jg
jmp
mov
mov
fsub
sbb
dec
and
adc
add
jmp
mov
sub
push
test
add
pop
paddsw
add
mov
sub
mov
psllq
adc
add
add
add
mov
sub
mov
(bad)
cmp
stc
add
add
add
mov
scas
and
add
or
add
fild
add
mov
(bad)
jmp
add
mov
cmp
and
pushf
lock
ja
adc
push
xor
mov
jl
out
or
add
jmp
mov
sub
inc
inc
sti
js
test
xchg
add
test
add
add
jno
sbb
je
pushf
pop
pop
add
add
adc
sub
mov
scas
test
push
add
add
sub
or
inc
add
add
add
jmp
mov
in
test
add
add
sbb
and
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
mov
mov
mov
cmp
imul
or
add
add
ror
mov
cld
test
push
or
add
loopne
push
fdivr
and
dec
add
icebp
or
add
mov
pop
jmp
and
add
into
add
add
setp
mov
mov
popa
add
add
add
add
mov
add
or
shr
lock
inc
push
add
data16
and
add
dec
add
and
call
sbb
inc
add
add
add
add
dec
ror
add
je
add
mov
mov
je
and
add
add
add
push
repnz
or
add
cmp
xchg
and
add
iret
cmp
cmove
arpl
dec
and
add
jmp
sbb
add
mov
and
add
adc
add
xchg
mov
add
or
or
mov
mov
and
add
add
add
mov
add
aaa
mov
mov
test
iret
xor
mov
mov
sar
data16
sub
ds
and
add
add
jbe
inc
jmp
mov
leave
add
add
add
mov
and
sbb
dec
sub
mov
add
pop
cmp
pop
into
bound
repz
mov
data16
or
xor
data16
mov
stos
add
mov
mov
mov
push
xor
jl
add
add
and
pop
mov
ja
fild
jmp
and
add
add
mov
xor
and
mov
je
je
sahf
xor
add
sub
data16
dec
and
xor
data16
and
mov
mov
data16
and
(bad)
mov
mov
shl
push
dec
and
sbb
mov
xor
sbb
mov
sub
push
xlat
add
push
(bad)
jne
jbe
and
add
push
mov
add
mov
pop
sbb
mov
and
add
data16
je
push
test
idiv
pcmpgtd
and
in
repz
cwde
mov
add
inc
and
add
cmp
mov
call
(bad)
cmps
and
add
add
mov
retf
and
clc
inc
push
add
inc
mov
test
leave
sbb
add
add
add
add
add
div
fwait
test
xor
inc
add
add
pushf
sub
ror
xor
or
ret
add
inc
ror
add
retf
ja
add
add
mov
lea
pop
add
loope
mov
rcr
mov
mov
add
or
mov
das
and
inc
sti
inc
mov
pushw
or
inc
mov
pop
xor
inc
and
mov
mov
cmp
mov
data16
mov
pop
ds
leave
retf
and
in
and
psubb
mov
add
mov
cmp
mov
xor
and
cmp
sub
sub
daa
sub
add
mov
and
add
and
add
adc
xor
(bad)
mov
pushaw
popf
(bad)
jmp
je
cmp
sub
dec
(bad)
data16
les
dec
leave
lea
sub
iret
minps
add
aam
and
push
and
scas
inc
and
xchg
add
rcr
cmp
(bad)
mov
cdq
jns
ins
cmp
jge
add
cmp
mov
cmp
xor
mov
adc
and
fsin
add
sbb
xchg
lds
add
pushf
inc
mov
xor
mov
xor
xor
mov
mov
and
and
inc
inc
sti
(bad)
sub
mov
mov
and
mov
xchg
inc
and
or
mov
fwait
mov
fadd
xor
mov
xlat
or
xchg
and
mov
rol
and
add
add
fcomp
imul
add
retf
mov
add
cmps
and
sbb
ins
jmp
mov
mov
mov
mov
mov
add
add
xchg
out
scas
xlat
stos
loop
add
add
rcr
(bad)
aad
add
setl
xor
popa
pop
test
cmovne
mov
pop
and
add
je
add
mov
mov
mov
sub
mov
sub
pusha
add
ret
(bad)
ficom
mov
adc
iret
xor
cmovnp
dec
add
imul
data16
mov
xor
cwde
repnz
push
(bad)
mov
sahf
add
ror
hlt
or
and
or
adc
or
and
add
or
mov
ss
add
mov
rcl
and
add
shr
mov
jno
cmps
push
loopne
lea
cmp
mov
jge
add
out
add
add
xchg
inc
imul
add
mov
clc
and
dec
inc
add
into
rcl
add
(bad)
hlt
cmp
xor
stos
out
out
and
mov
mov
and
mov
and
mov
and
test
fadd
add
aam
out
mov
cmovne
jecxz
and
add
add
jns
add
mov
mov
mov
or
and
into
add
dec
mov
add
arpl
dec
xor
test
mov
add
out
(bad)
inc
inc
inc
out
mov
pop
mov
mov
push
add
add
stos
sub
add
add
pop
inc
mov
iret
into
add
jmp
cmp
loop
add
pushf
ret
mov
mov
mov
fdiv
mul
add
and
and
mov
jbe
and
or
fdiv
les
mov
xchg
test
mov
push
inc
icebp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
(bad)
retf
cmc
mov
sub
add
sub
and
(bad)
repz
(bad)
mov
or
push
mov
pop
pop
pop
mov
pop
add
in
lea
mov
mov
mov
add
mov
mov
xor
mov
dec
icebp
and
mov
cmp
dec
and
xor
mov
mov
data16
test
or
cmp
and
mov
retf
movzx
mov
adc
mov
jmp
jmp
clc
rcl
into
clc
rcr
daa
enter
out
xor
mul
dec
mov
dec
ss
or
mov
stc
add
enter
sub
add
and
je
jbe
add
add
cmp
mov
add
outs
jl
xor
xor
out
repz
and
mov
add
mov
mov
and
add
test
push
ss
mov
mov
jmp
mov
jmp
fnstenv
and
rcr
or
cmps
sbb
add
add
imul
sub
push
add
add
sbb
inc
lods
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jnp
or
fwait
adc
and
add
mov
mov
je
dec
add
add
add
add
in
pushf
test
rol
leave
(bad)
jnp
mov
and
add
add
mov
and
das
add
mov
and
xchg
jns
ror
jmp
mov
sub
cmp
add
in
in
loopne
pop
sub
add
mov
adc
mov
rol
sar
fldenv
add
add
push
test
add
fs
mov
and
add
jns
test
or
add
lock
(bad)
in
mov
test
mov
and
add
add
add
push
add
mov
sub
mov
je
jmp
mov
cmp
add
or
add
add
jg
nop
add
add
push
test
in
add
push
outs
add
adc
add
je
jmp
mov
sub
dec
jns
sbb
add
(bad)
and
add
fiadd
add
push
test
add
push
test
add
add
push
(bad)
out
add
cmp
add
mov
cmp
add
sub
mov
add
(bad)
and
add
add
add
sub
mov
vmwrite
or
push
jmp
push
add
cmp
add
dec
cmp
std
and
add
(bad)
(bad)
and
add
jmp
mov
and
jmp
mov
add
add
test
in
jmp
dec
test
cld
push
add
mov
cli
add
add
add
xchg
add
mov
sub
jns
and
add
add
imul
mov
sub
mov
jg
jmp
mov
repz
xchg
cmp
or
and
add
je
jmp
data16
add
(bad)
out
lock
lock
mov
in
push
add
add
add
sub
push
add
jg
add
add
push
test
cmp
add
sub
mov
cwde
(bad)
fild
lock
(bad)
add
add
sub
mov
in
ins
push
loopne
jmp
mov
sub
mov
(bad)
bound
add
add
add
push
test
add
cs
mov
add
add
add
fild
pop
test
cmp
add
mov
repnz
mov
jne
or
add
mov
test
add
add
mov
push
(bad)
loope
sar
add
pop
mov
sub
in
test
movq
add
jmp
push
test
cmp
add
sub
mov
scas
(bad)
pop
add
add
add
sub
mov
paddq
jecxz
std
mov
mov
sub
cmps
test
xchg
add
(bad)
movs
add
add
add
fild
pop
imul
and
xor
mov
gs
or
add
add
add
mov
and
loopne
shr
test
add
add
(bad)
in
add
add
add
add
add
add
mov
jbe
cli
add
add
add
add
mov
sti
pop
mov
mov
(bad)
rol
add
add
add
mov
sub
cmp
dec
mov
add
jg
jmp
mov
jnp
stos
xor
mov
and
dec
xchg
jns
ss
add
mov
sub
mov
add
add
add
push
test
add
in
xchg
push
mov
into
add
fimul
(bad)
xlat
add
add
add
and
add
add
mov
jg
ss
add
mov
sub
mov
pushf
add
jmp
(bad)
pop
add
add
loopne
add
cmp
and
ins
add
mov
and
add
ror
mov
add
add
test
fild
test
mov
add
test
add
add
mov
aam
add
add
or
js
test
add
add
test
add
jmp
mov
sub
mov
jl
jmp
mov
sub
mov
test
add
jmp
sbb
and
add
(bad)
jmp
add
in
psubq
add
add
mov
add
in
sbb
test
pop
loope
out
add
mov
push
add
sub
mov
ss
fs
retf
add
cmp
jns
repnz
xrelease
test
test
mov
test
add
gs
pop
lds
add
xchg
add
add
add
sub
push
ror
je
jmp
mov
sub
mov
xlat
mov
jmp
push
loope
push
mov
add
dec
mov
xchg
add
add
add
and
xchg
jns
sub
mov
jo
jb
add
jecxz
add
mov
test
imul
sub
ins
pop
and
je
jmp
mov
sub
in
inc
and
pop
xchg
jns
repz
add
cmp
add
push
jns
push
(bad)
pop
movq
fsubr
mov
jbe
movs
push
mov
cvtps2pd
add
jmp
mov
and
add
lock
mov
leave
push
je
jmp
pusha
mov
add
add
icebp
in
dec
or
je
jmp
mov
sub
mov
pavgb
add
fisttp
add
in
sbb
outs
mov
pcmpgtb
imul
jmp
add
inc
add
inc
je
(bad)
push
add
add
add
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jne
ficomp
fist
inc
add
add
dec
or
in
inc
ror
add
fmul
add
cmps
mov
mov
jnp
and
xlat
add
mov
mov
jmp
std
rcl
and
xor
add
push
cmovne
in
and
add
add
leave
push
add
mov
mov
mov
mov
outs
data16
jge
add
add
pop
sub
xlat
or
fild
add
sete
cmp
setl
fimul
fcomp
add
and
mov
(bad)
and
or
fdiv
les
mov
add
xchg
add
je
xor
inc
icebp
push
xor
add
add
push
pop
xchg
jns
nop
mov
mov
ins
add
and
add
mov
and
popa
div
sti
sbb
push
add
movs
jge
add
xchg
test
add
mov
enter
add
inc
add
add
xchg
push
clc
dec
add
add
ins
ret
mov
xor
mov
mov
mov
cld
and
retf
(bad)
add
add
fdivr
and
pop
jge
push
or
dec
xlat
or
test
push
icebp
and
imul
and
add
add
mov
aas
xchg
add
iret
pop
loope
add
sbb
add
add
test
add
in
pop
push
pusha
jmp
pop
retf
arpl
mov
mov
jl
add
push
dec
inc
mov
lea
add
jno
aam
add
outs
repnz
and
add
add
(bad)
loop
ror
add
jecxz
add
mov
mov
mov
cmp
(bad)
shr
mov
loop
add
rcl
out
mov
mov
scas
cli
bound
add
cmove
mov
jmp
mov
mov
mov
and
add
add
mov
and
or
add
xchg
mov
add
inc
in
pop
pusha
mov
mov
cmp
cmovl
mov
cld
push
add
jo
push
mov
xchg
popf
mov
and
add
fs
push
dec
push
mov
jmp
sbb
into
jge
xor
pop
add
add
or
inc
sar
dec
inc
add
add
test
add
in
pop
add
mov
adc
add
add
mov
add
add
mov
sbb
movs
jge
add
jmp
add
fldcw
add
add
jmp
sahf
ret
or
add
ucomiss
repnz
adc
add
mov
inc
cld
push
push
jno
add
mov
mov
and
dec
add
add
fild
mov
mov
movs
jge
add
ret
outs
mov
xchg
xor
add
xchg
imul
out
add
add
add
clc
mov
or
add
push
pushf
ret
imul
inc
in
jne
xor
(bad)
repnz
(bad)
mov
mov
and
or
jno
rol
inc
and
xlat
adc
add
test
cld
test
mov
cmovne
mov
inc
add
add
repnz
add
ss
inc
ins
add
iret
dec
sbb
xlat
add
or
mov
mov
mov
add
rol
(bad)
add
add
add
lods
test
fild
add
dec
sbb
(bad)
int3
add
add
test
add
add
pusha
mov
sub
add
mov
add
add
mov
(bad)
ss
imul
mov
xchg
add
in
dec
jge
add
add
mov
mov
dec
fild
push
add
add
ja
mov
push
dec
or
fild
pop
mov
mov
jmp
add
sahf
xchg
push
add
add
inc
retf
sub
in
pop
jmp
pop
test
pop
add
add
test
or
add
dec
adc
(bad)
jmp
jnp
sti
push
xlat
in
jg
or
mov
add
add
dec
in
test
(bad)
jmp
add
push
add
add
mov
mov
mov
mov
mov
jl
mov
jmp
fiadd
add
jge
scas
repnz
cmp
sete
cmp
cmovp
mov
sbb
mov
test
fdiv
imul
mov
sub
rcl
inc
xchg
jno
add
or
shl
and
inc
and
enter
add
or
je
sbb
inc
icebp
mov
jle
add
add
mov
mov
mov
xor
scas
add
add
mov
mov
jge
add
add
mov
sbb
or
ins
jg
imul
and
cmp
gs
mov
add
fs
mov
xor
push
inc
pop
adc
fadd
add
xlat
mov
jmp
mov
and
and
xchg
mov
cmp
mov
or
popa
test
xlat
cmc
stos
imul
retf
je
mov
inc
add
add
mov
add
(bad)
loopne
inc
add
add
(bad)
in
jecxz
out
add
add
test
add
add
(bad)
add
(bad)
imul
adc
jl
add
add
pop
pop
arpl
outs
test
pop
add
mov
pop
add
push
pusha
xor
or
or
or
test
inc
add
sbb
stc
nop
inc
lock
(bad)
pop
and
add
add
(bad)
in
add
mov
push
jecxz
add
mov
ins
or
outs
xlat
lds
std
sub
sub
jecxz
and
fild
test
stos
inc
inc
add
xchg
ret
mov
icebp
(bad)
dec
pop
inc
add
in
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
aas
mov
mov
add
mov
mov
enter
mov
dec
mov
inc
and
add
add
add
pop
mov
test
add
add
test
add
add
aaa
add
(bad)
jno
inc
add
add
mov
fadd
add
mov
mov
mov
mov
mov
add
mov
jecxz
in
adc
add
mov
mov
jae
cmc
inc
add
push
inc
jo
cmps
mov
sub
mov
sub
mov
jg
jmp
repnz
xchg
cmp
xor
(bad)
adc
mov
mov
(bad)
jg
add
push
add
and
add
add
mov
cmp
mov
and
rol
lods
out
int
xchg
mov
retf
add
xor
add
add
mov
paddsw
cmc
sub
add
test
data16
or
add
fsubr
icebp
pop
les
and
int
nop
jg
jmp
mov
cmp
jns
sub
cmp
and
xor
add
mov
jmp
mov
sub
aas
test
test
or
jno
or
add
mov
sub
mov
add
cmp
add
add
nop
add
ror
add
(bad)
aas
mov
movzx
cmp
add
repnz
nop
cmp
add
cld
clc
dec
rcr
add
and
add
jp
lock
sub
adc
add
sub
cmp
into
test
or
add
adc
add
mov
sub
mov
or
lds
xor
jmp
mov
sub
xor
push
add
lock
add
pop
add
and
add
shr
test
add
add
dec
xchg
add
add
add
add
mov
mov
xchg
jno
cdq
mov
je
cwde
in
add
and
add
add
mov
cmp
add
sub
add
add
cmp
sub
mov
and
mov
add
test
shl
add
mov
sub
mov
jg
jp
add
jno
test
add
add
test
and
cmc
sub
nop
shr
add
test
inc
add
add
adc
jno
mov
add
shr
add
add
and
icebp
cmps
gs
mov
add
test
add
jmp
mov
cmp
add
sub
inc
test
add
add
(bad)
and
and
xor
add
add
mov
and
mov
adc
add
sub
add
sub
and
add
add
mov
jg
ret
add
cmp
sub
sbb
je
jmp
mov
cld
jge
(bad)
loopne
cmp
add
(bad)
and
xchg
add
mov
inc
cmp
aaa
cmc
sub
mov
and
nop
add
je
jmp
mov
sub
mov
jg
fidiv
add
add
add
sub
cmp
rcr
lods
or
add
jnp
and
add
push
mov
jg
jmp
mov
and
add
add
mov
mov
add
pop
add
and
lds
mov
and
add
add
xchg
jne
xor
add
add
lock
cmps
mov
sbb
scas
and
add
mov
test
push
add
jmp
sbb
cmp
add
lock
and
mov
add
add
add
jmp
pop
test
mov
jne
ret
and
cmps
gs
cli
test
les
add
rol
sub
mov
psadbw
add
mov
add
xor
mov
sub
mov
je
jmp
mov
inc
cmp
add
fcom
imul
add
add
add
and
add
add
lock
and
add
add
mov
or
and
dec
add
mov
test
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
nop
add
retf
xor
xor
add
and
mov
fwait
enter
mov
mov
cmp
jno
jmp
mov
add
add
es
in
test
add
add
(bad)
out
add
add
nop
add
add
add
mov
movzx
mov
test
sub
mov
pushf
(bad)
and
add
sbb
cmps
add
mov
sub
mov
and
inc
or
add
mov
xor
in
jbe
inc
and
jbe
clc
lds
add
add
mov
cdq
fidivr
outs
jbe
inc
and
jg
jmp
cli
je
cmp
add
sub
and
cmp
add
add
add
add
mov
add
mov
cmovle
add
jmp
xchg
test
retf
add
test
and
je
fadd
add
rol
add
mov
pmaddwd
add
jmp
mov
add
jle
jl
mov
and
je
jns
add
adc
lds
mov
xsha256
cmps
xlat
or
rcr
popf
scas
jo
cmps
dec
ffreep
retf
or
ja
add
jmp
ds
mov
add
xor
lock
jbe
inc
and
retf
xor
mov
add
add
sub
aad
mov
jle
or
add
dec
add
add
add
sub
mov
test
mov
add
mov
cmp
add
sub
mov
jbe
mov
add
add
jmp
mov
mov
(bad)
mov
cmp
add
cmp
cmovne
mov
push
sbb
cmc
aam
fs
cmc
ins
cmp
jmp
je
les
loopne
jmp
jo
mov
les
mov
mov
sub
dec
out
add
lds
mov
push
cld
sub
add
add
pop
cvtps2pi
push
lods
add
cmp
cld
imul
test
into
(bad)
std
loope
add
xor
mov
rdtsc
aam
leave
mov
xor
mov
mov
lock
xor
outs
sub
in
xor
leave
imul
and
cmp
sete
adc
mov
add
adc
mov
int
test
cmp
ror
add
cmp
push
fsub
add
mov
jmp
dec
scas
cs
fsubr
out
mov
xchg
xchg
dec
add
add
add
cmp
or
test
add
add
mov
jae
xor
les
mov
mov
xor
sub
sub
imul
xor
sub
mov
setl
hlt
mov
fdiv
xor
mov
and
mov
mov
and
and
or
sub
mov
add
or
adc
les
mov
icebp
mov
jmp
mov
mov
sub
and
add
add
add
and
add
add
add
add
mov
adc
mov
mov
sbb
push
cdq
imul
mov
lahf
mov
and
xor
add
mov
mov
pop
add
sbb
sub
les
out
cmp
mov
mov
imul
add
add
sub
nop
and
cmp
sete
xor
or
add
setl
mov
cmp
fadd
clc
xor
cmp
icebp
retf
and
pop
add
jmp
push
cmc
and
add
add
into
inc
jmp
dec
jne
mov
mov
xor
mov
dec
jae
ret
call
test
cs
scas
repz
or
sete
and
test
xor
xor
mov
adc
aad
mov
xchg
mov
rol
hlt
or
mov
aaa
or
retf
xlat
mov
mov
cmp
inc
icebp
stos
and
push
push
add
imul
sti
inc
retf
dec
add
and
add
add
div
pop
add
nop
add
sti
sub
mov
dec
add
sbb
inc
jl
add
cmp
mov
sub
sub
xor
sti
inc
lds
scas
repz
add
add
mov
mov
add
cmovne
cmp
setl
mov
not
mov
les
daa
repnz
cld
and
and
mov
xchg
ror
hlt
or
xor
sbb
adc
stc
test
xlat
or
test
mov
and
cmovne
mov
add
imul
pop
stc
test
cwde
pop
cmc
cmps
add
mov
add
cmp
mov
mov
mov
mov
call
mov
mov
mov
mov
movzx
(bad)
dec
add
mov
dec
add
fild
icebp
xor
and
cmp
mov
and
rol
mov
jmp
mov
or
mov
js
adc
mov
mov
sbb
push
sub
xor
jno
add
jno
cli
lock
add
push
ret
cmp
setl
mov
and
test
or
test
pmullw
dec
test
add
retf
test
xor
add
add
add
mov
and
add
mov
inc
aam
call
pop
inc
(bad)
cmp
jle
iret
pop
lea
cmc
sub
push
add
sar
jp
add
ror
cmp
and
add
add
xor
and
sete
cmp
setl
mov
repz
or
stos
jp
cmovne
test
jo
add
add
aaa
mov
jmp
mov
mov
mov
mov
and
add
add
mov
xor
or
xor
popf
cmp
inc
push
sub
mov
(bad)
(bad)
jmp
(bad)
mov
add
add
and
add
xchg
nop
jno
dec
cmps
add
mov
mov
mov
push
add
sub
add
add
inc
mov
inc
and
add
call
dec
mov
add
add
add
dec
and
cmp
inc
sar
push
and
add
add
sub
mov
pop
jo
add
cmps
gs
cmp
add
mov
add
retf
loope
jg
add
inc
and
call
mov
mov
cmp
cmovl
mov
jmp
(bad)
pop
and
add
add
leave
add
cmc
mov
mov
inc
test
xchg
add
mov
jmp
mov
mov
mov
and
xor
add
add
add
inc
sar
and
add
mov
lock
mov
cmp
mov
mov
xor
fild
sub
add
btr
and
add
int
and
add
pushf
repnz
and
xor
fiadd
add
sbb
xor
push
mov
add
add
out
mov
sub
loop
inc
enter
add
or
ret
add
call
sub
jl
(bad)
mov
cwde
xchg
inc
mov
mov
pop
imul
scas
sar
inc
and
mov
frstor
idiv
add
imul
stos
out
mov
add
add
xchg
mov
mov
xor
mov
dec
add
and
cmp
fisttp
inc
push
push
adc
mov
mov
mov
or
mov
and
mov
or
mov
xor
mov
or
stos
hlt
add
mov
inc
retf
mov
add
add
push
add
add
add
inc
add
add
inc
add
add
test
xor
and
xor
and
pop
mov
int
add
aaa
jle
and
mov
int3
sbb
xchg
pop
ret
mov
mov
add
jmp
push
ja
enter
mov
pop
inc
add
mov
or
xchg
and
add
add
mov
push
jo
add
push
add
adc
mov
adc
outs
and
call
mov
and
add
add
add
and
add
add
and
sbb
and
add
add
cli
mov
cmp
pop
adc
cmps
add
add
add
add
add
sub
mov
mov
jns
add
add
add
add
add
add
xor
mov
stos
inc
adc
std
(bad)
(bad)
inc
xor
pop
add
jmp
mov
jnp
sub
add
mov
mov
jl
(bad)
icebp
mov
outs
rol
and
rol
push
popf
xchg
and
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
mov
imul
and
cmp
sete
and
mov
mov
cmp
setl
and
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
and
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
shl
mov
sub
mov
sub
shl
sub
mov
call
add
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
shl
sub
mov
call
add
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
mov
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
sub
mov
call
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
cmovne
mov
jmp
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
sub
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
cmovne
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
sub
mov
call
add
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
and
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
shl
sub
mov
call
add
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
mov
and
xor
or
test
mov
mov
jne
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setl
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
movzx
cmp
jl
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
movzx
cmp
jl
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
mov
mov
movzx
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
jl
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
sub
sub
add
mov
mov
jmp
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
add
mov
mov
movzx
mov
shl
mov
shl
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
jmp
jmp
jmp
mov
mov
mov
jmp
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jne
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
seta
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
add
add
sub
mov
mov
sub
sub
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
add
add
sub
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
sub
add
add
mov
jmp
mov
jmp
mov
cmp
mov
je
mov
cmp
setb
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
add
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
add
sub
sub
mov
mov
mov
jmp
mov
add
sub
sub
mov
mov
mov
jmp
mov
mov
mov
add
sub
add
mov
mov
mov
sub
sub
add
cmp
jge
mov
mov
mov
sub
add
mov
cmp
jge
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
add
add
sub
mov
jmp
mov
add
mov
mov
cmp
mov
jbe
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
sub
sub
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
add
add
sub
mov
xor
mov
xor
and
mov
mov
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
add
mov
mov
mov
sub
sub
mov
xor
mov
xor
and
mov
mov
mov
shl
movzx
mov
mov
sub
sub
add
sar
mov
sub
mov
sub
add
sub
imul
shl
add
mov
cmp
jl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
add
sub
sub
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
movzx
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
xor
mov
xor
xor
or
or
xor
and
mov
mov
add
mov
shl
add
mov
shl
add
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
sub
add
add
mov
sub
mov
sub
add
sub
mov
cmp
jne
jmp
jmp
jmp
cmp
jl
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
cmp
jge
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
add
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
sub
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
sete
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
cmp
jge
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sub
add
mov
jmp
mov
mov
sub
add
mov
jmp
jmp
mov
mov
mov
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
shl
add
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
add
mov
shl
shl
add
mov
shl
add
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
cmp
sete
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
jmp
mov
cmp
jae
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
sub
add
mov
mov
cmp
jb
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
cmp
jne
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
sub
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
cmovl
mov
mov
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
add
add
sub
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
mov
cmp
setne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
shl
mov
sub
sub
add
mov
mov
mov
sub
add
add
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
mov
mov
add
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
add
add
sub
sub
add
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
add
sub
sub
mov
cmp
jl
mov
mov
sar
add
sub
sub
mov
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
xor
mov
and
mov
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
cmp
jge
mov
mov
mov
shl
mov
mov
add
mov
shl
add
mov
sub
add
shl
add
add
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
mov
shl
mov
mov
cmp
jb
mov
mov
mov
add
sub
sub
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
jmp
mov
mov
sub
sub
mov
cmp
jne
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
add
mov
mov
shl
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shl
add
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
sub
add
add
add
add
sub
mov
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
shl
mov
mov
add
add
sub
mov
cmp
jne
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
mov
cmp
jne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
sub
sub
mov
mov
cmp
jbe
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
sub
sub
add
cmp
jbe
mov
mov
mov
sub
sub
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
add
sub
sub
mov
mov
cmp
jb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
cmp
mov
je
mov
cmp
setb
mov
mov
test
jne
jmp
jmp
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
add
sub
sub
mov
add
sub
sub
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
lea
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
jmp
mov
mov
mov
sub
add
mov
jmp
jmp
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
add
sub
sub
mov
jmp
mov
mov
add
add
sub
mov
jmp
mov
mov
shl
mov
mov
xor
mov
xor
xor
or
or
xor
and
mov
mov
add
mov
shl
add
mov
shl
add
mov
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
jmp
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
jmp
jmp
jmp
jmp
mov
mov
shl
add
mov
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
add
mov
shl
add
mov
jmp
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
shl
add
mov
jmp
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
jmp
mov
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
cmovl
mov
mov
add
mov
jmp
mov
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
sub
add
add
mov
jmp
mov
mov
shl
mov
add
sub
sub
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
add
sub
sub
add
add
mov
jmp
jmp
mov
sub
add
add
mov
jmp
mov
mov
sub
add
mov
jmp
mov
add
mov
mov
shl
mov
mov
jmp
mov
mov
shl
add
mov
jmp
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
sub
add
add
sub
add
add
mov
mov
mov
mov
and
xor
or
mov
jmp
jmp
mov
jmp
mov
jmp
jmp
mov
mov
mov
sub
sub
mov
jmp
mov
jmp
mov
mov
add
add
sub
sub
mov
sub
sub
add
mov
jmp
jmp
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
and
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
in
fs
add
gs
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
gs
add
dec
add
dec
add
dec
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsub
add
gs
add
gs
add
dec
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
dec
add
dec
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
add
addr16
add
addr16
add
addr16
add
addr16
add
dec
add
dec
add
dec
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
je
dec
add
add
dec
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
