sbb
loop
cmp
imul
dec
fwait
jns
sbb
push
push
mov
loop
cmp
imul
push
fneni(8087
xchg
push
mov
dec
xchg
xchg
out
cmp
jmp
fwait
dec
mov
fidivr
push
fwait
popa
cmp
jmp
inc
cmp
xlat
xchg
mov
jmp
jmp
je
add
push
inc
sbb
test
in
inc
ss
fld
cmp
cmp
mov
xchg
loop
cmp
retf
std
imul
push
dec
sub
adc
aad
push
mov
sub
xchg
cli
xchg
adc
cli
xchg
cmp
loop
adc
mov
call
lds
retf
adc
dec
xor
mov
push
xor
adc
movntps
sbb
pop
add
icebp
sbb
add
in
push
jge
push
mov
sub
pop
mov
push
add
mov
movntps
dec
xor
inc
xor
mov
mov
enter
cdq
loope
xchg
xor
mov
cmp
inc
xchg
dec
popf
jnp
ds
loop
xchg
xor
mov
xchg
les
adc
loop
xchg
push
or
pop
jae
into
cmp
jne
add
cld
dec
loope
jmp
scas
fyl2x
push
mov
mov
aad
pop
dec
ret
imul
push
js
mov
push
mov
push
iret
push
mov
test
mov
mov
xchg
(bad)
xor
xchg
xchg
movntps
push
cmp
mov
pop
mov
imul
push
mov
xor
repnz
xor
xchg
fyl2x
push
mov
imul
je
xchg
push
inc
pop
push
fs
imul
add
sub
push
out
or
mov
cmp
mov
jnp
cmp
fwait
rdmsr
adc
dec
xor
mov
add
cmp
sub
push
push
jl
push
mov
sub
pop
mov
sub
pop
mov
imul
xchg
repnz
jecxz
movs
adc
mov
jl
out
pop
shl
popa
leave
imul
xchg
inc
pop
dec
xchg
js
mov
mov
add
sahf
xlat
dec
and
sbb
cmp
dec
imul
dec
jmp
or
dec
xchg
js
mov
cmp
fist
repz
add
inc
cmp
idiv
mov
in
adc
aad
fisttp
cmp
inc
xchg
jecxz
mov
lods
mov
push
retf
ins
sbb
sub
dec
mov
fwait
push
fimul
ss
xor
scas
push
push
jmp
jae
loope
jp
jmp
dec
add
mov
loopne
pop
inc
loopne
xchg
cli
xchg
jecxz
cli
xchg
jecxz
mov
imul
push
inc
sbb
loope
popa
pop
test
imul
pop
dec
sbb
repnz
jno
imul
dec
imul
retf
loopne
loope
xchg
pop
imul
sbb
stos
popf
ret
imul
pop
adc
xchg
inc
stc
ss
xchg
js
jae
loopne
jp
jmp
pop
int
mov
pop
inc
cmp
pop
mov
xchg
(bad)
adc
mov
push
ss
mov
ficom
imul
scas
je
xchg
(bad)
push
inc
sbb
neg
scas
dec
imul
addr16
ins
sbb
bound
xchg
inc
pop
dec
xchg
js
in
xlat
jl
cmp
cmp
mov
imul
cmp
mov
(bad)
stos
std
imul
jnp
imul
ss
(bad)
ss
dec
sbb
(bad)
push
mov
dec
pop
inc
loop
push
mov
mov
mov
cmps
and
sub
xchg
dec
jmp
mov
xchg
(bad)
push
inc
sub
xchg
cli
jns
pop
dec
sbb
xchg
cli
xchg
pop
sub
mov
std
ss
xchg
jl
cmp
cmp
dec
pop
aas
push
mov
retf
fxch
(bad)
dec
pop
inc
loop
push
ss
(bad)
inc
sub
and
sub
ins
cmp
dec
loope
imul
dec
mov
sbb
sbb
in
retf
inc
scas
scas
ss
xchg
dec
jno
sbb
xchg
cmp
jno
jge
es
xchg
dec
loope
sbb
not
ss
(bad)
inc
sub
and
scas
lds
jns
mov
inc
xchg
mov
mov
inc
cmc
lods
loopne
aaa
dec
loop
push
xor
ins
mov
inc
xchg
hlt
daa
pusha
adc
dec
loopne
loopne
aaa
jge
es
xchg
dec
xchg
addr16
inc
fdivr
ins
mov
inc
xchg
mov
cmp
loope
ss
inc
jbe
out
pop
cmp
dec
call
jecxz
jns
loopne
jmp
ss
sub
dec
pop
push
(bad)
imul
dec
ss
hlt
jle
mov
inc
jbe
aam
mov
jno
aaa
jge
pop
xchg
mov
inc
loope
jp
jmp
dec
xor
mov
cmp
pop
or
jecxz
mov
ficom
mul
mov
les
mov
mov
cmp
dec
xor
test
add
loopne
popf
jge
cmp
mov
mov
ret
mov
icebp
push
xor
mov
xchg
cli
xchg
cmp
xchg
stos
cmp
ss
inc
jbe
out
pop
cmp
dec
call
xor
fsqrt
xchg
cmp
xor
sub
push
sub
xchg
cli
popa
mov
in
fwait
cmp
or
push
arpl
pop
jae
push
js
daa
pusha
adc
cmp
mov
jae
loope
jp
jmp
imul
cmp
mov
ins
(bad)
stos
std
imul
imul
loope
sub
xchg
ret
dec
xlat
aaa
push
pop
mov
xchg
dec
dec
xor
dec
pop
call
xchg
dec
popf
jnp
in
inc
jbe
out
pop
cmp
dec
xor
mov
inc
ss
call
sbb
fcom
imul
push
mov
popa
fstp
aad
pop
add
imul
sub
loope
out
fucomp
loopne
dec
out
cmp
dec
xor
mov
sub
(bad)
mov
xchg
cmp
cmp
das
mov
mov
das
mov
cmps
xchg
loopne
xor
mov
leave
ins
cmp
inc
cmp
push
dec
mov
pop
inc
loopne
xchg
mov
xchg
loopne
push
js
push
mov
stos
out
pop
jmp
retf
xchg
mov
mov
push
mov
movzx
aad
pop
(bad)
mov
cli
cdq
jecxz
scas
mov
push
push
test
push
mov
sub
cmp
loopne
das
jg
push
pop
push
pusha
jae
jmp
sub
xchg
cli
cdq
jecxz
cmp
mov
ss
sbb
mov
cmp
cli
mov
(bad)
sub
mov
sub
xchg
scas
xchg
cmps
or
stos
xor
repnz
mov
mov
jae
cli
mov
fdivrp
cmp
xor
jmp
mov
jo
mov
cs
sbb
movs
leave
bound
ss
xor
ret
(bad)
push
inc
xchg
mov
retf
outs
xor
(bad)
(bad)
push
mov
imul
xchg
cli
adc
sub
xchg
cmp
jo
xor
pop
mov
cmc
adc
cmp
inc
aas
mov
xchg
jl
xchg
sbb
push
xlat
xchg
dec
push
mov
xchg
dec
dec
inc
sbb
div
mov
aad
fucomi
pop
sub
loopne
cmp
inc
xchg
dec
popf
jnp
mov
inc
imul
push
push
cmp
imul
loopne
lahf
jl
lahf
push
mov
loop
push
xor
mov
xor
dec
dec
mov
adc
push
mov
cwde
pop
mov
imul
ds
iret
stos
std
imul
stos
loopne
mov
(bad)
push
xor
inc
daa
mov
pop
mov
call
bound
sub
(bad)
xchg
mov
fst
imul
ss
(bad)
ss
aad
cli
mov
xchg
cli
adc
xchg
cli
cdq
jecxz
retf
repnz
loopne
cmps
mov
int3
cmp
loop
sbb
loop
loope
dec
cmp
call
mov
jg
out
and
icebp
push
xlat
test
imul
out
loop
loope
push
mov
mov
pusha
jae
mov
pop
imul
mov
cmp
adc
xor
dec
mov
imul
fnstcw
xchg
dec
push
mov
in
outs
loope
xchg
(bad)
pop
pop
push
movs
push
mov
mov
jo
xor
pop
mov
cmc
adc
cmp
inc
aas
mov
pop
dec
push
mul
mov
popf
loope
xchg
xor
and
icebp
push
mov
loopne
into
inc
xchg
dec
xchg
jl
in
inc
jbe
out
pop
jmp
out
cmp
xchg
mov
ss
sub
call
cmp
dec
push
xor
mov
adc
jecxz
push
mov
scas
mul
mov
call
push
sbb
out
xchg
mov
popf
inc
jns
jge
sub
xchg
sti
push
and
sbb
mov
cli
popa
ds
mov
retf
icebp
push
push
cmp
push
mov
sahf
mov
sbb
retf
icebp
push
mov
xchg
mov
jnp
imul
fnstcw
dec
push
retf
cmp
dec
pop
sub
push
push
sub
out
mov
pop
inc
loopne
popf
ficom
scas
pop
fs
mov
lods
loop
push
xor
push
mov
(bad)
adc
popf
ficom
dec
xchg
js
cmp
jmp
ss
inc
xchg
dec
popf
ficom
mov
mov
(bad)
push
xlat
pop
sub
cmp
out
scas
fstp
aad
fstp
aad
fstp
xlat
imul
inc
shr
xchg
cli
xchg
fstp
add
pop
mov
jb
ja
repz
sub
inc
loopne
je
in
jmp
(bad)
out
rcr
push
mov
popf
jecxz
mov
imul
imul
push
inc
sbb
test
call
sti
pop
shl
mov
shr
daa
pop
and
(bad)
mov
ss
(bad)
ss
jne
inc
xchg
dec
loope
add
std
imul
cmp
fiadd
dec
dec
push
call
mov
push
mov
mov
fst
imul
or
mov
ss
jg
inc
xchg
cmp
xchg
mov
fld
jg
inc
xchg
ds
jnp
dec
loope
xor
sbb
push
retf
mov
mov
xor
push
loope
xchg
jecxz
and
icebp
push
out
loop
loope
and
pop
inc
pusha
jae
adc
pop
aaa
mov
mov
cmp
fstp
sub
loopne
cmp
es
jge
push
mov
xchg
mov
push
mov
mov
fnsave
in
jae
inc
xchg
jecxz
and
icebp
push
out
loop
loope
adc
pop
inc
pusha
jae
cmp
push
mov
imul
je
loope
jmp
add
rol
dec
mov
sub
mov
xchg
dec
loope
enter
imul
bound
sub
pop
jg
mov
cmp
or
adc
cld
mov
mov
xchg
dec
push
mov
adc
mov
aaa
push
pop
mov
xchg
dec
dec
push
jge
loope
jmp
add
dec
loopne
shl
std
ss
pop
loope
xchg
cmp
mov
lods
inc
xchg
dec
and
mov
mov
test
imul
cmp
dec
pop
sub
push
cmp
mov
loope
xchg
jne
mov
imul
loope
jmp
mov
jne
mov
mov
fst
push
mov
out
leave
repnz
push
stc
inc
loope
jmp
mov
add
std
imul
loope
add
fidiv
imul
loope
xchg
mov
mov
test
pop
mov
imul
jnp
mov
inc
imul
push
xor
dec
loope
xchg
in
mov
mov
push
retf
arpl
xchg
dec
loope
imul
jbe
leave
repnz
push
gs
loope
jmp
mov
add
(bad)
std
imul
loope
sbb
push
dec
loope
imul
loope
xchg
mov
mov
retf
mov
imul
jnp
mov
inc
imul
push
xor
dec
loope
xchg
in
adc
and
mov
retf
arpl
xchg
dec
loope
imul
jbe
leave
repnz
push
loope
loope
jmp
mov
fisttp
push
daa
jle
imul
xchg
cmp
aad
fistp
out
leave
repnz
push
cmp
ja
adc
fnstcw
fisttp
push
mov
(bad)
mov
push
xlat
cmp
pop
mov
xchg
xor
mov
dec
loope
imul
cmps
pop
sub
loopne
ds
or
xchg
dec
popf
jnp
mov
inc
imul
push
xor
dec
loope
xchg
in
dec
popf
dec
loope
lods
mov
push
retf
arpl
xchg
dec
loope
imul
imul
mov
xor
dec
loope
xchg
jecxz
jns
dec
loope
and
mov
sub
push
ds
or
fwait
inc
xchg
dec
loope
sub
dec
mov
fwait
or
ds
addr16
dec
loope
loop
ret
dec
dec
xor
dec
dec
jecxz
mul
mov
mov
push
xor
or
inc
xchg
jecxz
cmp
cmp
inc
ds
xchg
cli
xchg
cmp
mov
adc
push
mov
or
mov
mov
loopne
popf
sbb
xor
mov
imul
fwait
pop
xchg
dec
loope
imul
imul
xchg
cmp
dec
loopne
cmp
fwait
addr16
dec
loope
loop
loope
jne
cmc
imul
loope
xchg
jecxz
das
mov
push
xor
sub
inc
xchg
jecxz
xchg
mov
ss
pop
jg
and
mov
cmp
out
loop
loope
mov
mul
ds
(bad)
ja
imul
fwait
push
xchg
dec
loope
loop
into
inc
xchg
dec
dec
xor
dec
dec
xchg
mul
mov
(bad)
xor
mov
xchg
dec
dec
xor
outs
loope
xchg
jecxz
xchg
dec
xchg
addr16
into
loop
ss
mov
call
inc
xchg
dec
dec
xor
pop
loope
xchg
jecxz
xchg
dec
pop
jg
ss
imul
out
inc
xchg
dec
push
inc
fmul
inc
xchg
fisttp
sub
loopne
cmp
shr
popf
jnp
xor
mov
imul
push
mov
imul
xchg
cmp
inc
fcomp
inc
xchg
ds
inc
xchg
dec
loope
add
(bad)
std
imul
loope
sub
fisubr
xchg
dec
loope
imul
loope
in
sub
inc
xchg
ds
sbb
push
mov
dec
popf
push
jns
stc
push
ins
mov
mov
stc
dec
loopne
jmp
mov
loop
test
dec
xor
dec
dec
xchg
loopne
loop
mov
(bad)
ss
xor
imul
inc
xchg
mov
cmp
dec
loopne
cmp
sahf
pop
sub
loopne
cmp
es
jge
push
mov
xchg
xor
test
push
mov
mov
push
xor
sbb
inc
xchg
jecxz
cmp
dec
loopne
cmp
es
fist
mov
dec
push
mov
dec
pop
mov
xchg
dec
loope
adc
imul
push
mov
push
mov
fldcw
dec
sbb
loop
scas
inc
xchg
dec
xchg
cmp
dec
loopne
in
call
ret
loope
xchg
xor
scas
loopne
cmps
mov
int3
ds
iret
xchg
dec
loope
test
push
mov
aam
loope
xchg
in
adc
xchg
addr16
imul
data16
imul
fwait
aaa
xchg
dec
loope
add
(bad)
std
imul
loope
loop
loope
push
mov
mov
pusha
jae
cmp
push
mov
xchg
dec
push
mov
mov
fist
mov
or
ss
inc
xchg
dec
dec
xor
dec
dec
lahf
loopne
loop
mov
(bad)
ss
xor
imul
inc
xchg
dec
push
mov
pusha
push
mov
xchg
dec
loope
data16
fdivr
or
cmp
xchg
dec
loope
les
inc
jmp
add
imul
loopne
inc
inc
xchg
dec
xchg
jl
push
jg
xchg
dec
push
mov
cmp
mov
xchg
dec
loope
imul
loope
in
dec
loope
xchg
jecxz
loop
icebp
push
xor
dec
loope
xchg
jecxz
cmp
lods
cmps
xchg
addr16
ds
xchg
dec
popf
ja
repz
sub
inc
loopne
out
xchg
dec
loope
xor
ss
xchg
dec
dec
xor
dec
loope
xchg
ds
pop
in
imul
loope
xchg
jecxz
out
icebp
push
xor
dec
loope
xchg
jecxz
cdq
add
xchg
addr16
imul
xchg
dec
push
retf
imul
jmp
inc
xchg
dec
xchg
jl
ss
dec
dec
mov
ss
inc
xchg
dec
xchg
cmp
dec
loopne
push
ss
inc
xchg
dec
adc
loop
mov
xchg
dec
dec
xor
dec
dec
mov
ss
xor
dec
dec
mov
inc
enter
loope
test
loop
cli
inc
xchg
dec
daa
cmp
xor
inc
xchg
dec
popf
add
(bad)
sbb
dec
loope
xchg
mov
cmp
cmp
inc
aas
mov
loopne
imul
loope
xchg
jecxz
(bad)
xchg
in
pop
out
push
mov
(bad)
loopne
popf
add
(bad)
adc
addr16
xchg
jecxz
(bad)
xchg
in
xor
imul
xchg
jecxz
(bad)
xchg
in
xor
outs
loope
xchg
jecxz
(bad)
xchg
in
ds
jecxz
mov
xchg
dec
loope
loop
loope
popa
pop
das
dec
xchg
dec
inc
loope
jp
jmp
stos
std
imul
jp
imul
push
mov
aas
in
fiadd
out
or
loop
cli
ss
mov
ss
fsqrt
xchg
mov
mov
imul
cmps
repz
mov
dec
or
xchg
cli
mov
arpl
into
cli
push
adc
inc
jmp
retf
xor
dec
loope
xchg
dec
cmc
call
push
xor
push
fnsave
pop
fsqrt
mov
add
add
in
mov
xchg
dec
loope
xchg
in
inc
in
cmp
or
mov
jbe
mov
call
jl
out
xchg
cmp
xlat
jmp
mov
mov
imul
mov
js
pop
sub
imul
dec
jmp
push
ret
dec
jg
imul
xchg
mov
or
mov
popa
jmp
ds
movsx
cmp
jmp
cmp
mov
fnstcw
ins
mov
mov
loopne
fnstcw
ins
mov
mov
imul
adc
ins
repz
imul
loope
imul
fwait
das
(bad)
push
aas
fs
cmp
imul
std
imul
popf
pop
ins
repz
cli
popf
mov
xchg
repnz
push
push
mov
mov
sub
adc
inc
mov
mov
sub
repnz
mov
mov
xor
mov
loopne
div
ins
mov
mov
sbb
mov
and
mov
retf
outs
sbb
push
mov
mov
imul
pop
sub
push
push
pop
dec
loope
lahf
mov
and
mov
retf
outs
sbb
js
push
mov
imul
jmp
mov
push
gs
loope
lahf
mov
and
mov
retf
outs
sbb
xor
shr
mov
sub
mov
sub
push
push
mov
inc
lahf
mov
and
mov
retf
outs
sbb
aam
push
mov
loopne
sahf
mov
sub
mov
hlt
repnz
mov
fisttp
inc
lahf
mov
and
mov
retf
outs
sbb
clc
mov
mov
imul
sbb
lock
mov
loope
loope
xchg
mov
or
mov
mov
call
mov
mov
sub
mov
imul
cmp
mov
stos
cmp
imul
sbb
ins
mov
mov
lock
mov
imul
push
hlt
repnz
mov
imul
mov
jmp
push
div
das
ja
jb
mov
push
xchg
mov
sub
imul
push
lahf
call
mov
dec
das
cmp
sbb
add
leave
icebp
push
mov
iret
dec
cmp
mov
fwait
das
shl
push
sub
push
mov
imul
pop
mov
sub
sbb
(bad)
push
push
pop
adc
and
mov
mov
adc
mov
imul
push
mov
mov
ja
push
xchg
cli
cmp
stos
std
imul
jmp
fistp
das
cmp
sbb
loopne
das
ja
jb
or
std
imul
test
sbb
pop
mov
sub
adc
sub
and
mov
mov
xor
arpl
(bad)
sbb
mov
(bad)
dec
mov
pop
dec
loopne
adc
sub
and
imul
pop
mov
jmp
retf
arpl
(bad)
push
aas
adc
sbb
das
xor
mov
repz
mov
lahf
mov
fwait
jmp
mov
mov
cmp
stc
jecxz
mov
mov
mov
and
mov
pop
outs
cmp
jmp
mov
imul
mov
cmp
mov
cmc
cmps
loopne
pop
xor
mov
push
aaa
ins
cmps
es
pop
mov
imul
out
outs
jge
push
cmp
mov
cmc
cmps
loopne
pop
xor
mov
push
aaa
ins
cmps
mov
sub
pop
mov
imul
sbb
(bad)
push
ss
call
pop
jae
push
or
pop
loopne
jmp
out
pop
cmp
dec
add
mov
xchg
imul
movs
std
imul
jns
mov
idiv
mov
sbb
adc
dec
jmp
ss
(bad)
add
shr
mov
imul
dec
push
lock
push
mov
imul
dec
push
loopne
push
mov
imul
dec
push
adc
push
mov
imul
fchs
aaa
jp
jmp
dec
call
ins
xor
scas
cmp
stos
std
imul
xchg
cli
shl
stos
xor
div
cmps
imul
jnp
imul
out
js
inc
pop
mov
xchg
mov
push
sbb
loop
xchg
mov
or
mov
fidivr
mov
retf
test
imul
xchg
mov
loopne
inc
(bad)
stos
std
imul
loopne
das
addr16
fsqrt
fnsave
jnp
imul
into
push
ins
mov
mov
and
push
xor
dec
inc
jl
cmp
cmp
mov
das
dec
aad
ds
sbb
fstp
aad
fstp
aad
dec
imul
jg
imul
imul
imul
dec
or
stos
std
imul
je
add
loope
lea
fisubr
lahf
push
inc
(bad)
push
mov
sub
push
mov
sub
loope
fnstcw
pop
pop
cmp
hlt
repnz
xor
push
cmc
mov
sbb
mov
sub
xchg
jl
in
inc
jbe
out
pop
jmp
fwait
cmp
cmp
xchg
stos
cmp
loop
adc
sub
xchg
bnd
push
inc
jmp
jmp
je
add
xchg
cli
and
push
xor
dec
aad
dec
imul
mov
cli
popf
pop
adc
sub
xchg
jge
jno
jmp
dec
add
and
loopne
loope
sbb
(bad)
push
aad
dec
or
xor
dec
mov
repnz
in
xor
mov
sbb
(bad)
push
mov
mov
mov
add
push
mov
xchg
add
imul
mov
push
loope
imul
loope
imul
push
xor
lea
inc
imul
std
imul
mov
add
push
jno
cmp
mov
mov
imul
adc
in
xor
jge
fst
mov
mov
add
adc
sub
jne
data16
cmp
jecxz
mov
or
jne
jge
or
cmp
test
mov
ss
popf
ja
cmp
in
or
push
ins
call
ins
cmp
loop
push
xor
xor
mov
jge
pop
mov
add
add
aas
push
mov
add
mov
retf
xor
push
dec
loope
sbb
(bad)
and
and
and
xchg
xor
mov
sbb
xchg
inc
jmp
retf
out
xor
and
imul
sahf
sub
test
jns
dec
xchg
mov
ins
cmps
pop
mov
push
mov
(bad)
dec
push
aas
push
mov
retf
out
xor
popf
push
push
and
xchg
xor
mov
push
pop
push
mov
xor
ja
cmp
in
or
push
ins
call
loopne
out
sub
xchg
sti
push
pop
inc
jmp
stos
ins
mov
mov
push
sti
sahf
sub
mul
dec
popf
push
imul
mov
xchg
xor
mov
sbb
xchg
inc
jmp
adc
xchg
mov
mov
imul
xchg
jmp
in
xor
mov
imul
inc
loope
jp
jmp
dec
call
sub
add
push
lea
retf
lahf
inc
xor
push
mov
sub
xor
mov
xchg
mov
mov
ins
(bad)
stos
std
imul
lahf
clc
repz
mov
jecxz
sub
mov
or
mov
or
and
mov
retf
dec
mov
mov
jmp
addr16
loop
jge
xchg
stos
outs
dec
pop
inc
enter
imul
add
ins
lods
xchg
sti
jbe
xchg
mov
fwait
mov
xchg
mov
mov
ss
xchg
sti
ja
xchg
jmp
mov
imul
popf
ja
cmp
mov
xchg
mov
mov
loopne
out
ins
xor
sub
dec
xchg
scas
xchg
mov
or
mov
ja
call
mov
mul
jns
pop
xchg
mov
imul
push
jle
mov
mov
std
imul
jnp
in
inc
in
jo
mov
inc
call
push
in
aas
in
mov
in
push
rol
mul
imul
loope
push
dec
loope
jmp
aas
aam
rol
imul
dec
loope
push
mov
add
mov
retf
jae
mov
mov
in
inc
icebp
inc
xchg
xor
mov
imul
push
aaa
mov
loope
loopne
mov
xchg
dec
jne
data16
cmp
in
mov
sub
ins
loope
loopne
mov
lock
mov
es
push
xchg
dec
jne
ja
adc
cmp
mov
xchg
dec
loope
jl
xchg
imul
sub
ins
loope
loopne
or
in
inc
icebp
inc
xchg
mov
or
inc
icebp
inc
xchg
fcomp
mov
shl
push
mov
xchg
dec
fdivr
call
sub
push
sbb
push
cmps
ds
sbb
call
xor
cmps
dec
sub
loope
xchg
mov
or
mov
add
mov
push
push
or
inc
loopne
(bad)
pusha
xchg
dec
loope
sbb
es
dec
xchg
ins
test
or
movs
xchg
ins
mov
jmp
fwait
dec
xchg
xchg
pop
aas
xlat
imul
xchg
jns
inc
pop
jle
mov
or
dec
icebp
inc
xchg
hlt
lahf
jl
mov
jmp
ss
jmp
mov
sub
loope
imul
inc
xchg
mov
inc
fcomp
inc
xchg
dec
stos
addr16
loope
dec
dec
loope
jmp
jg
rcr
inc
imul
loope
sub
hlt
mov
cmp
xchg
mov
xor
mov
xchg
pusha
hlt
lahf
inc
imul
push
mov
ins
mov
mov
mov
loope
daa
xor
mov
xchg
mov
mov
sbb
mul
call
dec
push
mov
in
loope
inc
dec
loope
imul
loope
xchg
dec
sbb
(bad)
push
inc
fsubr
inc
xchg
pop
test
imul
in
push
xchg
dec
fistp
cmp
stos
dec
and
loopne
jmp
pop
loope
imul
loope
mov
sbb
mov
adc
mov
loope
cld
inc
icebp
inc
xchg
jb
mov
imul
push
loop
mov
ss
pop
loope
imul
pop
mov
xchg
dec
push
retf
inc
add
mov
mov
mov
ss
adc
inc
xchg
cmp
mov
imul
mov
fwait
daa
mov
loope
in
adc
inc
xchg
cmp
cmp
scas
sbb
popa
xchg
dec
xchg
cmp
ins
loope
loop
mov
dec
sbb
popa
xchg
dec
xchg
cmp
ins
loope
loop
retf
dec
xchg
cmp
scas
xchg
cmp
ins
loope
cmp
mov
loope
lods
in
mov
xchg
dec
daa
cmp
ins
loope
sbb
xchg
cmp
ss
pusha
xchg
dec
pop
cmp
push
std
pusha
xchg
dec
push
retf
push
mov
loop
stos
pusha
xchg
dec
fist
loope
sub
ins
loope
test
adc
add
mov
mov
loope
repnz
sbb
(bad)
push
mov
es
push
xchg
dec
fistp
cmp
xchg
in
rol
adc
add
xchg
mov
(bad)
jmp
mov
dec
loope
imul
xchg
cmp
ins
loope
pusha
jae
cmp
mov
mov
data16
and
imul
push
add
sahf
ret
adc
push
mov
mov
imul
loope
jge
pop
mov
xchg
ds
mov
mov
loope
in
adc
inc
xchg
mov
adc
cmp
ss
sti
sahf
xchg
ss
xor
mov
ja
out
cmp
mov
xchg
or
cdq
xor
mov
arpl
out
cmp
mov
xchg
pop
icebp
cmp
sbb
add
loope
mov
les
xor
mov
xor
mov
imul
cs
xchg
dec
cmc
cmp
loop
jmp
inc
xchg
test
mov
rol
idiv
les
rol
adc
cld
adc
inc
xchg
jb
mov
mov
loope
outs
mov
adc
imul
push
mov
push
mov
mov
jmp
mov
mov
push
mov
mov
cs
(bad)
mov
ss
jg
push
sahf
ret
push
add
xchg
xchg
push
ret
dec
loope
mov
(bad)
xchg
xor
mov
push
std
pusha
xchg
dec
push
retf
sub
mov
mov
xchg
dec
fistp
cmp
jle
mov
pop
imul
push
mov
loope
ins
mov
loope
call
dec
push
mov
xchg
mov
or
mov
xchg
xchg
dec
loope
in
inc
icebp
inc
xchg
mov
or
inc
icebp
inc
xchg
fcomp
mov
shl
push
mov
xchg
dec
inc
loope
jp
jmp
dec
call
sub
fsub
xchg
mov
pop
inc
push
xchg
sub
push
dec
int
jae
jo
push
mov
pop
mov
mov
in
shl
pop
daa
mov
mov
jmp
lock
cli
xchg
das
je
imul
pop
dec
imul
jmp
sbb
sub
sbb
pop
dec
push
sar
inc
stos
push
mov
sub
xchg
cli
xchg
jne
dec
imul
mov
push
test
mov
xchg
mov
or
mov
jg
mov
ret
pop
inc
loopne
pop
jge
out
mov
lock
call
pop
retf
pop
inc
push
cmp
cmp
mov
inc
ins
(bad)
adc
xchg
mov
mov
dec
pop
ret
pop
inc
push
inc
pop
mov
mov
aas
sub
sbb
call
push
mov
sub
sbb
dec
xchg
jge
jno
jmp
push
mov
sub
pop
inc
ins
xor
push
mov
loope
sub
push
push
jg
sbb
test
xor
push
inc
pop
aas
adc
sbb
lea
pop
inc
loopne
pop
jge
out
mov
mov
cmp
mov
retf
pop
inc
push
in
inc
in
jo
ss
dec
in
aas
in
retf
(bad)
cwde
cmps
out
or
push
dec
mov
pop
inc
loopne
jbe
imul
push
ss
xor
inc
sub
and
scas
pop
adc
push
lea
outs
jne
mov
cmc
mov
push
pop
xchg
addr16
push
xchg
cli
xchg
cmp
loopne
call
sti
pop
ins
xchg
push
mov
imul
mov
mov
xor
push
dec
mov
fwait
inc
mov
loope
scas
imul
ss
pop
xchg
dec
dec
push
add
push
mov
xchg
dec
dec
push
data16
mov
lahf
cmp
xchg
xchg
cmp
loopne
jp
jmp
ins
xchg
call
mov
mov
popa
fstp
push
cwde
loopne
mov
loopne
popf
push
jns
dec
call
pop
xor
fisub
mov
aad
fistp
mov
add
imul
cmp
cmp
dec
imul
mov
cli
xor
mov
loopne
jmp
ss
fstp
jmp
imul
dec
aad
pop
or
imul
jmp
ss
fstp
cmp
mov
pop
mov
imul
push
outs
ds
inc
loopne
out
inc
sbb
dec
inc
sbb
dec
push
jl
push
mov
imul
ja
imul
dec
mov
repnz
in
add
fild
loopne
je
add
push
mov
imul
push
jg
(bad)
push
push
lods
loop
mov
xchg
(bad)
sbb
adc
push
mov
xchg
cmp
aad
fstp
aad
in
jns
mov
xor
mov
loope
jmp
dec
xchg
jl
mov
jmp
dec
push
js
push
mov
xchg
jecxz
mov
imul
push
jmp
imul
pop
dec
loop
jmp
mov
loope
jp
jmp
mov
ss
and
scas
fstp
xlat
jmp
mov
mov
imul
push
ss
xor
inc
sbb
das
jg
mov
cli
xchg
cmp
aad
fstp
aad
in
xchg
cmp
pop
inc
cmp
xchg
(bad)
adc
xor
neg
test
dec
das
inc
loopne
inc
loope
jo
ss
dec
jmp
scas
mul
xor
mov
mov
fs
cmc
mov
push
mov
loop
stos
mov
ss
dec
inc
sbb
jbe
mov
push
push
fsub
push
mov
imul
jnp
add
jp
test
ja
jbe
mov
push
push
cld
loopne
mov
push
out
adc
add
sbb
lea
clc
push
into
adc
cdq
cmp
loopne
pop
jge
out
jmp
imul
jnp
in
inc
in
jo
ss
dec
jmp
loop
adc
dec
cmc
stc
rcr
push
mov
sub
push
out
dec
cmc
lods
add
cmp
sub
mov
popf
cmp
pop
xchg
push
pop
mov
imul
fcom
ss
inc
jbe
out
pop
jmp
xor
inc
or
mov
(bad)
ss
aad
cli
mov
push
cmp
pop
push
cmp
push
push
xor
xchg
mov
push
pop
mov
imul
ss
xor
push
idiv
cmps
imul
pop
mov
inc
or
loopne
ret
mov
test
ins
inc
popf
jg
mov
push
jmp
mov
rol
cwde
push
mov
jmp
js
cli
gs
pop
inc
adc
mov
add
cwde
xor
mov
adc
sbb
ins
xor
imul
inc
push
(bad)
leave
ss
(bad)
ss
cmp
data16
xor
mov
into
(bad)
test
mov
mov
push
pop
xchg
ja
div
mov
(bad)
cld
dec
mov
pop
arpl
cli
xor
mov
xchg
jmp
into
mov
out
mov
jno
cli
lea
in
aaa
addr16
xor
mov
xchg
jmp
into
mov
(bad)
in
inc
in
jo
das
stc
and
jmp
movs
jmp
repz
das
sar
fwait
jg
and
das
stc
and
mov
and
das
stc
and
stc
and
das
stc
and
stc
and
das
stc
and
stc
and
std
imul
push
das
rcr
or
fwait
jg
and
das
stc
and
mov
and
das
stc
and
addr16
and
das
stc
and
stc
and
scas
xchg
dec
fstp
stc
and
mov
stc
and
sub
mov
stc
cmp
das
stc
and
das
stc
cmp
stc
and
das
stc
xor
mov
mov
iret
repnz
stc
and
das
stc
xor
mov
mov
ror
fadd
mov
jmp
nop
jmp
push
push
mov
std
imul
or
jle
stc
and
jmp
je
stc
and
das
stc
and
das
sbb
and
das
loopne
mov
stc
and
jle
and
das
stc
and
stc
and
das
stc
and
dec
stc
and
das
stc
and
stc
and
inc
push
and
(bad)
stc
and
das
stc
and
dec
stc
and
std
imul
mov
sbb
and
das
loopne
mov
stc
and
jle
and
das
stc
and
stc
and
das
stc
and
dec
stc
and
das
stc
and
stc
and
or
das
(bad)
stc
and
das
stc
and
dec
stc
and
das
stc
and
push
mov
dec
mov
repnz
in
xor
mov
xchg
cli
gs
inc
pop
lds
loopne
mul
ss
xchg
cli
add
sub
das
dec
loopne
(bad)
ss
jmp
addr16
loop
scas
imul
mov
imul
xchg
cli
mov
imul
cmp
dec
xchg
dec
inc
ss
cmp
jmp
mov
cli
xchg
mov
xchg
xor
pop
outs
ror
imul
or
xchg
inc
inc
bound
xor
arpl
aaa
cmp
xchg
mov
jge
popa
enter
mov
jns
test
xchg
call
ja
cld
mov
loopne
pop
dec
sub
inc
inc
jns
scas
loop
loop
stos
sbb
cmp
je
add
push
mov
cmp
icebp
imul
out
out
in
in
mov
out
mov
daa
mov
aad
ds
dec
cmp
(bad)
mov
daa
mov
cmp
xchg
cmps
loopne
mov
dec
or
xchg
cli
movs
cmp
jmp
mov
not
not
adc
ss
inc
jbe
out
pop
jmp
add
sti
imul
scas
pop
xor
imul
fild
jb
mov
xor
fdiv
cmp
popf
sub
sbb
imul
xchg
dec
popf
jnp
cmp
mov
mov
push
mov
into
icebp
jle
mov
stos
push
pop
mov
add
pop
mov
adc
dec
mov
into
icebp
jle
mov
mov
std
imul
mov
dec
and
push
aad
fstp
ss
sbb
icebp
push
mov
cmp
mov
mov
mul
push
jle
fadd
mov
pop
inc
loop
into
add
mov
scas
jmp
std
imul
ins
enterw
imul
xchg
addr16
out
jl
mov
cmp
dec
sbb
mov
mov
add
mov
cli
xchg
rol
sar
mov
enter
loop
ret
dec
xchg
jge
add
jle
mov
into
add
mov
cmp
push
ss
test
mov
xor
imul
xchg
cmp
mov
popa
fistp
mov
mov
push
push
mov
aad
(bad)
addr16
fiadd
sub
push
mov
mov
imul
push
jle
fsubr
push
mov
ss
pop
dec
loop
into
add
mov
scas
jmp
std
imul
ins
enterw
imul
xchg
dec
push
imul
aam
push
mov
pop
dec
ins
adc
add
mov
mov
push
imul
int
cmp
mov
imul
add
mov
mov
push
pop
mov
mov
and
icebp
push
mov
out
outs
mov
or
lea
pop
mov
sub
arpl
(bad)
sbb
pop
push
ss
inc
clc
ss
xchg
jns
add
push
cmp
(bad)
mov
imul
loope
lods
mov
je
add
push
mov
or
xchg
cli
and
loope
lea
imul
xchg
dec
sahf
push
xchg
cli
mov
push
div
and
push
mov
ss
inc
jbe
out
pop
call
mov
jmp
loopne
xchg
dec
sahf
push
xchg
cmp
jne
mov
ret
mov
mov
sub
push
dec
(bad)
cmp
ss
pop
jmp
ins
and
push
out
loopne
jmp
jle
lods
aaa
jne
arpl
scas
xor
(bad)
loopne
xchg
sub
inc
cmp
cli
xchg
mov
xchg
xor
ret
int
or
hlt
jle
mov
inc
jbe
aam
mov
jno
aaa
std
mov
inc
xchg
dec
sahf
cli
xchg
mov
cli
xchg
(bad)
push
leave
mov
dec
loope
cmp
fmul
mov
mov
sbb
dec
sub
inc
xchg
adc
push
sub
push
xor
dec
jecxz
xchg
jecxz
shl
mov
ss
call
imul
push
xlat
imul
dec
push
ins
sti
push
mov
xchg
dec
xchg
dec
inc
inc
xchg
jns
(bad)
push
pop
loope
pop
mov
imul
dec
xlat
push
dec
mov
dec
xchg
dec
loope
xor
push
mov
xchg
dec
test
push
inc
ins
(bad)
stos
std
imul
push
xor
dec
loopne
xchg
jecxz
dec
and
push
mov
xchg
dec
loope
add
std
imul
loope
add
and
sbb
jo
std
imul
xchg
cmp
fistp
mov
imul
arpl
mov
mov
popa
mov
mov
aaa
call
sti
out
cmp
dec
call
dec
stc
mov
inc
loopne
loope
sbb
je
out
mov
ficom
jecxz
cli
xchg
jecxz
mov
imul
push
inc
sbb
loope
popa
pop
jns
imul
pop
mov
xchg
cmp
mov
sbb
dec
aad
fstp
inc
sbb
loope
xchg
pop
jno
imul
inc
loope
jp
jmp
pushf
ret
pop
inc
loopne
loope
jge
dec
clc
imul
push
inc
sbb
loope
popa
pop
das
mov
jno
inc
jl
cmp
call
sbb
out
xchg
cmp
aad
fstp
xor
dec
inc
sbb
loope
gs
imul
xor
cmps
ss
fucomp
loopne
dec
out
ds
xchg
in
lahf
js
mov
out
in
loop
add
push
aad
fstp
aad
dec
imul
sti
push
mov
pop
jae
mov
cmps
loope
jne
push
inc
sbb
loope
xchg
pop
test
jg
mov
cdq
imul
das
jg
mov
push
mov
sbb
push
mov
mov
xor
stos
aas
in
retf
pop
cmps
(bad)
cmps
(bad)
inc
pop
lds
xor
mov
ins
cmps
push
mov
cdq
cmp
jns
mov
cli
xchg
jecxz
cmps
imul
push
push
push
sti
push
mov
pop
jae
and
push
out
aas
fstp
aad
dec
imul
sti
push
mov
xchg
(bad)
loop
ins
sti
push
mov
rcr
stc
ss
xchg
js
(bad)
loop
test
push
mov
ss
xlat
jl
cmp
out
cmp
dec
add
mov
aaa
inc
loopne
popf
adc
cmp
mov
imul
daa
cli
xchg
(bad)
xor
xchg
mov
ss
sbb
or
mov
imul
pop
mov
imul
pop
jg
mov
jg
cmps
xchg
inc
push
xchg
push
mov
xor
mov
ss
inc
loope
jo
shr
js
mov
cmp
ins
ds
mov
push
cmp
dec
out
cmp
dec
xor
mov
pop
inc
and
clc
xchg
loop
loop
stos
call
add
xchg
loopne
aaa
cmp
out
mov
jns
mov
jnp
cmp
xchg
mov
dec
scas
scas
mov
mov
and
fidivr
push
lea
retf
(bad)
xor
sub
sahf
sub
cmps
loop
push
jns
mov
jno
mov
dec
or
xchg
cli
xchg
cmp
loopne
pop
push
push
cmp
mov
sub
xor
and
mov
cmp
xor
inc
loopne
das
jge
out
ss
out
bound
pop
inc
retf
mov
stos
out
pop
jmp
loop
or
xchg
dec
pop
inc
xchg
jns
pop
(bad)
sti
imul
fnstenv
test
push
mov
xchg
dec
mov
jg
test
pop
xor
into
pusha
jae
mov
add
outs
aaa
ins
sbb
dec
ins
pop
pcmpeqb
imul
and
mov
es
dec
xchg
imul
dec
cmps
movs
imul
fist
cmp
loopne
popf
js
in
ret
jbe
mov
push
call
imul
pop
inc
data16
inc
push
mul
int
cmp
ss
inc
jbe
out
pop
sar
push
mov
imul
lahf
dec
fadd
jmp
pop
loope
xchg
mov
dec
inc
inc
xchg
jns
ss
xchg
dec
dec
inc
sbb
idiv
cdq
dec
loope
lods
mov
imul
mov
cmp
dec
loope
xchg
mov
mov
pop
stc
std
imul
imul
cmp
pop
jo
push
mov
xchg
dec
xchg
cmp
push
mov
jne
mov
jecxz
pop
cmp
xor
mov
mov
sub
std
imul
push
mov
in
arpl
inc
xchg
cmp
inc
sbb
jbe
push
repnz
mov
loopne
xchg
cli
popa
cmp
ss
(bad)
inc
sub
and
scas
fst
xor
jg
inc
xchg
mov
in
or
fidiv
imul
imul
sar
dec
stos
inc
xchg
dec
loope
in
push
mov
add
push
mov
imul
sbb
jp
out
pop
sub
loopne
cmp
fidiv
imul
xchg
xor
mov
sub
push
push
or
out
loop
loop
xchg
dec
dec
xlat
push
ins
pop
mov
imul
jmp
inc
xchg
dec
xchg
jns
mov
mov
imul
jbe
mov
push
inc
fmul
inc
xchg
pop
cmp
jnp
fld
pusha
sub
loopne
and
pop
mov
imul
jbe
mov
push
inc
fmul
inc
xchg
pop
cmc
sti
imul
fwait
jnp
dec
loope
scas
pop
test
imul
popf
inc
ins
into
cmp
mov
imul
mov
call
imul
push
cmp
mov
or
sub
loopne
cmp
aas
pusha
sub
push
mov
and
push
mov
imul
sbb
jp
out
pop
sub
loopne
sbb
fidiv
imul
cmp
push
mov
cdq
call
imul
popf
inc
ins
into
or
mov
xchg
dec
not
lods
mov
push
inc
fmul
inc
xchg
pop
or
imul
cmps
mov
mov
es
dec
popf
inc
ins
into
cmp
mov
imul
mov
call
imul
push
cmp
mov
push
mov
imul
xchg
loope
inc
mov
push
xor
ins
loope
xchg
in
sub
mov
xor
ins
loope
xchg
jecxz
retf
fwait
inc
xchg
dec
loope
add
std
imul
push
cmp
xchg
mul
sub
push
mov
xchg
mov
pushf
cmp
jge
imul
loopne
(bad)
pusha
sub
push
mov
dec
lock
mov
imul
sbb
jp
out
pop
sub
loopne
xor
fidiv
imul
push
mov
xchg
mov
lods
add
std
imul
jo
push
mov
mov
mov
jmp
ret
out
pop
sub
loopne
add
mov
and
std
imul
xchg
dec
dec
xlat
rep
pop
mov
imul
cmps
mov
mov
es
dec
popf
inc
ins
into
or
mov
xchg
dec
test
mov
push
dec
(bad)
cmp
ss
pop
inc
std
imul
popf
inc
ins
into
or
mov
xchg
dec
test
mov
cmp
mov
push
push
arpl
out
xchg
mov
pushf
sbb
xchg
loope
add
(bad)
pusha
sub
push
mov
adc
push
mov
(bad)
pop
mov
xchg
dec
loope
xor
mov
imul
imul
push
inc
xchg
mov
pop
xchg
dec
loope
in
dec
loope
xchg
shr
loope
xchg
mov
pop
xchg
dec
loope
fisttp
add
imul
out
jae
push
mov
daa
inc
cld
jle
mov
sub
dec
jecxz
loopne
popf
js
in
add
loope
fild
mov
add
loope
ds
xchg
(bad)
imul
fadd
or
inc
xchg
xor
aas
imul
stos
dec
xchg
dec
loope
sbb
xchg
cmp
loope
cmp
fwait
inc
xchg
dec
loope
add
sar
jecxz
icebp
sub
not
arpl
out
xchg
mov
lods
add
sar
dec
stos
inc
xchg
dec
loope
and
push
mov
cdq
call
imul
popf
inc
ins
into
or
mov
xchg
dec
neg
lods
mov
push
push
arpl
out
xchg
mov
lods
add
std
imul
xchg
repz
mov
in
psraw
xor
mov
xchg
dec
loope
in
dec
loope
xchg
mov
mov
sbb
inc
xchg
cmp
ss
mov
ss
pop
xchg
mov
jne
fwait
inc
xchg
dec
loope
xor
push
mov
in
clc
pop
mov
cdq
cmp
xor
scas
sbb
in
dec
loope
xchg
mov
push
xor
dec
loope
xchg
cmp
inc
sbb
jbe
mov
push
xor
inc
loope
xchg
jecxz
icebp
sub
xchg
xor
jnp
(bad)
jmp
dec
xchg
js
cmp
ds
mov
fwait
mov
data16
add
mov
inc
xchg
dec
dec
push
xor
jmp
dec
loope
jmp
inc
xchg
dec
stos
dec
xchg
dec
loope
sbb
loope
cdq
dec
jecxz
loop
loop
xchg
dec
dec
xlat
or
pop
lds
jno
cli
jmp
jmp
inc
xchg
dec
xchg
cmp
dec
jecxz
loopne
neg
push
mov
push
arpl
out
xchg
mov
lods
add
sar
dec
stos
inc
xchg
dec
loope
lods
mov
mov
call
mov
jmp
ret
aad
sub
loopne
adc
fidiv
imul
xchg
xor
mov
mov
push
inc
fmul
inc
xchg
pop
sub
jnp
dec
stos
dec
xchg
dec
loope
or
loopne
mov
cmp
ss
mov
fmul
inc
xchg
loopne
mov
lods
mov
loopne
pusha
jae
cmp
dec
loope
add
stos
inc
xchg
dec
loope
inc
mov
mov
or
mov
jmp
popa
sub
loopne
cmp
and
imul
jbe
mov
push
inc
fmul
inc
xchg
pop
std
sub
out
xchg
cdq
cmp
push
lock
mov
imul
sbb
jp
out
pop
sub
loopne
or
fidiv
imul
int3
lea
mov
or
push
mov
jmp
sub
push
es
dec
dec
xor
dec
loope
xchg
in
xor
xor
scas
sbb
xchg
xor
mov
mov
push
inc
fmul
inc
xchg
pop
push
sub
lock
lea
mov
imul
sbb
jp
aad
sub
loopne
adc
and
imul
jbe
mov
push
inc
fmul
inc
xchg
pop
in
imul
cmps
mov
mov
es
dec
popf
inc
ins
into
cmp
mov
imul
mov
call
imul
push
cmp
mov
push
inc
fmul
inc
xchg
pop
lods
sub
jnp
cmp
dec
(bad)
cmp
ss
pop
jge
imul
popf
inc
ins
into
or
mov
xchg
dec
idiv
lods
mov
push
inc
fmul
inc
xchg
pop
jno
imul
cmps
mov
mov
es
dec
popf
inc
ins
into
or
mov
xchg
dec
div
push
mov
cmp
mov
push
inc
fmul
inc
xchg
pop
sub
popa
cmp
xchg
cdq
cmp
push
test
push
mov
jmp
pop
sub
loopne
cmp
rol
dec
xor
dec
loope
xchg
jecxz
mov
cmp
scas
sbb
adc
imul
jbe
mov
push
inc
fmul
inc
xchg
pop
aad
imul
fcom
imul
inc
xchg
dec
test
mov
push
push
arpl
out
xchg
mov
lods
add
std
imul
in
push
mov
and
sbb
inc
loopne
lahf
js
xchg
push
mov
xchg
dec
loope
add
std
imul
push
cmp
mov
push
push
arpl
out
xchg
mov
lods
add
std
imul
push
(bad)
push
mov
mov
pop
mov
xchg
dec
not
lods
mov
xchg
jns
push
and
mov
nop
xor
mov
mov
push
inc
fmul
inc
xchg
pop
loope
imul
cmps
mov
mov
es
dec
popf
inc
ins
into
cmp
mov
imul
mov
call
imul
push
cmp
mov
push
inc
fmul
inc
xchg
pop
test
jnp
fstp
aad
fstp
imul
push
mov
xchg
dec
lahf
jns
mov
mov
xchg
dec
test
mov
aad
mov
call
xchg
dec
loope
fcomp
inc
xchg
pop
xchg
xchg
loope
or
imul
mov
inc
jmp
inc
xchg
dec
xchg
jns
pop
mov
cmp
in
inc
jbe
out
pop
call
mov
add
das
inc
loopne
fdivr
xchg
mov
test
je
(bad)
imul
pop
mov
xchg
dec
dec
push
mov
push
mov
mov
push
xor
dec
loopne
xchg
jecxz
mov
mov
inc
jmp
xor
sbb
ret
std
imul
jbe
imul
ret
fcmovnb
arpl
mov
push
mov
push
xlat
push
push
aas
add
ficomp
loopne
inc
jbe
out
pop
call
mov
jmp
inc
mov
dec
mov
fwait
aas
xchg
dec
loope
scas
xor
mov
push
mov
sub
mov
dec
xchg
cli
popa
cmp
mov
loopne
xchg
inc
xchg
dec
xchg
inc
inc
dec
xchg
js
push
fdivr
mov
push
sbb
xor
es
push
xor
push
mov
xchg
dec
loope
leave
dec
loope
cmp
dec
mov
ds
xchg
dec
xchg
jmp
mov
jmp
mov
ss
sub
inc
xchg
cmp
xchg
xchg
cmp
jmp
imul
loope
fcom
jecxz
xchg
pop
or
sbb
inc
xchg
push
xchg
dec
idiv
cmp
xchg
xor
out
mov
xchg
dec
xchg
jmp
mov
jmp
mov
ss
cmp
inc
xchg
fistp
imul
mov
ss
daa
jecxz
xchg
(bad)
aad
ds
sbb
daa
mov
xchg
cmp
push
call
pop
jne
imul
jecxz
xchg
jecxz
adc
outs
pop
mov
jmp
dec
popf
jnp
mov
imul
mov
mov
mov
lods
xchg
dec
loope
ins
mov
mov
xchg
dec
dec
xor
pop
jecxz
xchg
jecxz
xor
push
inc
fsub
jecxz
xchg
dec
stos
das
xchg
dec
loope
fdivr
jecxz
xchg
dec
stos
aaa
xchg
dec
loope
fsubr
jecxz
xchg
dec
stos
pop
xchg
dec
loope
in
stos
inc
xchg
dec
dec
push
push
inc
loope
jmp
inc
xchg
mov
not
pop
mov
mov
mov
pop
mov
push
xor
dec
loopne
xchg
jecxz
imul
out
scas
ds
or
loop
xchg
dec
dec
push
aam
push
mov
xchg
cmp
ds
mov
mov
imul
loope
or
cmps
inc
xchg
dec
pop
mov
cmp
push
dec
mov
fwait
rcl
fwait
pop
xchg
dec
loope
imul
push
mov
xchg
dec
push
retf
jne
fnstcw
or
push
push
fistp
mov
xchg
dec
dec
push
mov
xor
fwait
sbb
cmps
inc
xchg
dec
dec
aad
fstp
aad
fstp
aad
fstp
xor
dec
loopne
xchg
jecxz
mov
imul
stos
pop
xchg
dec
loope
mov
pop
xchg
std
dec
loope
add
arpl
mov
cmp
pop
(bad)
jns
fwait
aam
dec
loope
sbb
js
ss
xchg
dec
dec
xlat
sbb
pop
mov
imul
add
mov
imul
loope
jecxz
jne
xchg
dec
and
sbb
mov
push
add
mov
dec
push
retf
arpl
push
dec
imul
push
mov
or
je
mov
in
dec
loopne
xchg
jecxz
push
lods
xchg
mov
mov
push
xor
dec
loopne
xchg
jecxz
(bad)
aam
loope
lods
mov
push
retf
mov
mov
loopne
cmc
test
xchg
dec
push
ds
xor
int3
das
jecxz
xchg
mov
cmp
dec
loope
cmp
mov
lahf
push
or
push
mov
imul
mul
mov
inc
fcom
jecxz
xchg
pop
movs
lea
xchg
cmp
dec
loope
xor
js
in
inc
jbe
mov
jmp
dec
call
dec
mov
cmps
loopne
jmp
ss
and
scas
dec
imul
cmp
fchs
out
inc
sbb
mul
mov
ss
aad
jmp
sub
fchs
out
in
xor
fchs
out
xchg
sub
cli
xchg
mov
into
mov
out
mov
popf
ds
scas
inc
jecxz
mov
imul
arpl
loopne
repnz
outs
cmp
mov
ds
cmps
cmp
out
(bad)
cmp
mov
popf
jnp
dec
imul
jecxz
in
pop
mov
inc
sbb
adc
sub
xchg
sti
outs
mov
out
xor
imul
neg
mov
in
push
mov
imul
test
mov
xchg
mov
mov
out
xor
mov
mov
cmp
push
jmp
imul
or
jns
dec
das
inc
loopne
je
aas
pop
movs
lea
xchg
cli
xchg
jecxz
push
and
ins
mov
xchg
cli
xchg
in
inc
in
jo
mov
push
mov
pop
mov
in
aas
in
loop
or
mov
adc
scas
mov
mov
dec
push
mov
xchg
dec
dec
xor
jae
inc
xchg
jecxz
fnstenv
pushf
push
mov
data16
xchg
pop
dec
xchg
js
dec
stos
jnp
dec
loope
fadd
push
mov
(bad)
cmp
fdivr
inc
xchg
dec
imul
or
pop
loopne
cmps
pop
xchg
dec
xchg
js
jae
push
aaa
je
add
mov
xor
paddd
jecxz
cmp
in
xor
push
mov
(bad)
and
sahf
test
mov
lods
push
loope
and
fidiv
xchg
push
(bad)
pop
xchg
dec
loope
gs
in
nop
imul
loope
loopne
das
jg
pop
sbb
fsubp
aaa
call
sti
pop
jne
push
mov
imul
push
add
xchg
pop
cdq
shl
mov
in
inc
rol
fcom
add
jne
imul
pop
mov
add
dec
push
psraw
ja
xlat
cmp
pop
mov
imul
jmp
pusha
xchg
dec
xchg
cmp
jne
dec
pop
inc
xchg
jns
std
sar
ds
mov
xor
sub
mov
nop
xor
mov
mov
push
xor
mov
inc
xchg
jecxz
mov
lods
mov
push
mov
imul
xchg
xor
mov
pop
mov
push
or
out
in
push
pop
xchg
dec
dec
xlat
xor
mov
xchg
dec
dec
push
hlt
sbb
jmp
mov
imul
sbb
jge
out
pop
sub
loope
cmp
mov
popf
jnp
fld
pusha
sub
loope
cmp
mov
popf
jnp
cmp
dec
(bad)
cmp
ss
pop
sub
mov
es
dec
popf
inc
ins
into
or
cdq
push
pop
mov
xchg
dec
dec
push
cmp
push
mov
js
push
mov
imul
sbb
inc
pop
loope
imul
dec
xor
mov
inc
xchg
in
out
icebp
push
xor
mov
inc
xchg
in
dec
pop
mov
cmp
mov
or
sub
loope
cmp
aas
pusha
sub
loope
cmp
lea
popf
jnp
pop
lods
lea
cmps
mov
mov
es
dec
popf
inc
ins
into
or
cdq
push
pop
mov
xchg
dec
dec
push
mov
ja
xlat
arpl
in
push
pop
xchg
dec
dec
push
aam
push
mov
lahf
mov
mov
imul
popf
inc
ins
into
or
cdq
push
pop
mov
xchg
dec
dec
push
clc
sbb
xlat
push
pop
mov
xchg
dec
dec
push
adc
push
mov
push
sbb
mov
jmp
lea
cmps
fsubr
push
es
dec
dec
xor
mov
inc
xchg
in
out
icebp
push
xor
mov
inc
xchg
in
mov
lods
mov
push
xor
mov
inc
xchg
jecxz
xchg
pop
mov
cmp
mov
push
push
arpl
out
xchg
mov
stos
add
std
imul
loope
cmp
aaa
dec
loopne
jbe
mov
push
xor
mov
inc
xchg
jecxz
push
pop
mov
cmp
mov
push
push
arpl
out
xchg
mov
stos
add
std
imul
loope
cmp
mov
test
fwait
mov
add
fidiv
imul
xchg
xor
mov
mov
push
xor
mov
inc
xchg
jecxz
xor
push
cmp
mov
push
mov
in
mov
inc
xchg
jecxz
xchg
mov
push
xor
mov
inc
xchg
jecxz
stc
pop
mov
cmp
mov
push
push
arpl
out
xchg
mov
stos
add
std
imul
loope
xor
fidiv
imul
loope
add
add
ss
pop
rol
fcom
sbb
sar
jmp
ret
out
pop
sub
loope
cmp
(bad)
jnp
pop
test
push
push
push
es
dec
xchg
push
imul
jbe
mov
push
xor
mov
inc
xchg
in
sbb
push
cmp
mov
push
push
arpl
out
xchg
mov
stos
add
std
imul
loope
adc
fidiv
imul
loope
and
fidiv
imul
push
mov
xchg
mov
stos
add
std
imul
loope
adc
fidiv
imul
xchg
xor
mov
pop
mov
push
or
out
in
push
pop
xchg
dec
dec
xlat
xor
mov
xchg
dec
dec
push
ins
sbb
jmp
mov
xchg
dec
dec
push
jl
push
mov
imul
push
aad
fistp
mov
clc
lahf
push
mov
xchg
dec
lahf
jns
leave
push
mov
xchg
dec
dec
push
jl
push
mov
xchg
ins
loope
ds
add
loope
ds
stos
inc
mov
loope
test
loop
xchg
dec
idiv
inc
mov
mov
inc
jmp
pusha
xchg
dec
xchg
jns
in
inc
jbe
out
pop
call
mov
jmp
idiv
xchg
js
push
add
push
mov
mov
xor
mov
push
mov
cmp
daa
jecxz
xchg
or
imul
xchg
js
jecxz
mov
inc
mov
push
jl
loope
add
popf
xchg
imul
je
in
mov
push
movs
popf
push
mov
imul
loope
add
std
imul
jbe
imul
cmp
imul
mov
xchg
dec
dec
xor
pop
jecxz
xchg
jecxz
stc
inc
mov
pop
inc
loope
mov
jmp
je
or
dec
loope
cmp
fwait
or
in
xchg
xor
mov
jae
cmp
mov
mov
imul
loope
sbb
fwait
or
loop
xchg
dec
dec
push
lock
push
mov
xchg
cmp
ss
call
imul
loope
sub
aaa
inc
loopne
fnstcw
ror
inc
sub
ss
inc
xchg
dec
pop
mov
icebp
dec
loope
imul
test
pop
mov
loopne
xchg
cmp
dec
loope
cmp
pop
xchg
dec
inc
xor
pop
jecxz
xchg
jecxz
cmp
dec
loope
cmp
push
aad
fnstcw
aad
fstp
aad
ds
inc
xchg
dec
loope
add
push
mov
mov
push
inc
fcomp
jecxz
xchg
pop
fst
push
mov
dec
mov
fwait
(bad)
xchg
dec
loope
scas
dec
stos
pop
xchg
dec
loope
jnp
pop
mov
imul
loope
sbb
fisubr
xchg
dec
push
push
inc
xor
mov
mov
xor
dec
loopne
xchg
jecxz
retf
push
push
dec
cwde
push
mov
sbb
jbe
push
push
push
add
push
mov
xchg
dec
pop
xor
xchg
(bad)
sbb
mov
mov
push
dec
imul
push
mov
xchg
dec
dec
jmp
imul
(bad)
push
mov
cmp
dec
loope
cmp
or
dec
popf
jnp
mov
inc
imul
xchg
inc
xchg
dec
dec
in
and
fidiv
fnsave
loope
std
dec
loope
in
xchg
inc
xchg
dec
dec
push
and
add
dec
inc
fsub
jecxz
xchg
pop
out
xchg
dec
xchg
jns
inc
cmps
xchg
imul
xor
imul
imul
add
test
push
cmp
cmps
pop
jg
call
nop
call
xchg
dec
popf
push
push
loopne
jl
inc
dec
inc
fsub
jecxz
xchg
pop
out
push
gs
cmp
das
jecxz
xchg
xor
mov
in
or
dec
loope
and
mov
dec
jmp
inc
xchg
dec
xchg
js
pop
in
imul
push
mov
xchg
dec
dec
push
aam
push
mov
int
loope
or
fld
pop
jecxz
xchg
pop
or
cmp
dec
loope
ss
inc
jbe
mov
jmp
dec
call
dec
pop
test
dec
jmp
ss
loopne
icebp
inc
mov
ss
loope
gs
pop
xchg
imul
je
add
fsubr
aas
pop
add
ss
dec
mov
pop
dec
loopne
dec
push
jo
push
mov
cmp
mov
mov
dec
mov
xor
dec
aad
in
ret
aaa
repz
aad
fstp
push
pusha
call
pop
dec
xchg
js
dec
dec
push
fcomp
loop
aas
pop
and
add
push
outs
cmp
xchg
xchg
cmp
loopne
call
sti
pop
ins
mov
cmp
lahf
mov
in
shl
stc
ss
dec
icebp
inc
xchg
cmp
aad
dec
imul
cmp
ss
mov
ss
mov
ficom
loope
imul
imul
mov
aad
dec
imul
dec
dec
push
and
loope
jmp
mov
and
mov
lock
push
mov
ss
xlat
jl
cmp
cmp
mov
push
mov
sub
pop
mov
push
add
inc
cmp
sbb
mov
cli
popf
jecxz
or
push
xor
dec
aad
fistp
imul
aaa
mov
xchg
xor
mov
sub
div
lods
stos
xchg
cli
popf
jecxz
mov
imul
mov
pop
mov
mov
inc
sub
adc
sub
popf
inc
fs
xchg
loopne
jo
call
jo
out
xchg
cmp
aad
fstp
ins
fstp
aad
fstp
aad
fisttp
mov
add
push
ss
fstp
jmp
in
adc
aas
ss
add
je
xchg
xchg
and
mov
leave
inc
mov
aad
in
(bad)
xchg
xchg
fld
push
aad
in
(bad)
xchg
xchg
and
mov
jmp
push
xchg
sub
mov
stc
inc
mov
ss
and
scas
fstp
jmp
inc
sub
mov
imul
loope
dec
sub
mov
imul
loope
stc
adc
mov
pop
jmp
sbb
mov
mov
xchg
cmp
aad
in
(bad)
xchg
xchg
sub
push
aad
in
(bad)
xchg
xchg
and
mov
gs
mov
aad
in
(bad)
xchg
xchg
jne
mov
aad
in
(bad)
xchg
xchg
add
xchg
mov
ss
in
inc
jl
cmp
out
ds
out
cmps
xchg
inc
sahf
push
xchg
cli
xchg
cmp
aad
dec
sub
repnz
push
push
xchg
push
mov
imul
je
xchg
xchg
and
mov
lea
push
aad
dec
sub
enter
jo
push
mov
imul
je
xchg
xchg
mov
mov
ss
and
scas
(bad)
inc
pop
lahf
cmp
imul
pop
mov
inc
sub
mov
imul
mov
imul
mov
mov
pop
mov
jne
pop
mov
imul
cmp
imul
pop
mov
inc
sub
mov
imul
cmp
imul
pop
mov
dec
sub
mov
imul
(bad)
xchg
dec
sub
enter
xor
cmp
sub
call
mov
loopne
jo
mov
repnz
aas
in
push
xor
jle
scas
pop
or
sub
mov
dec
xchg
jns
pop
vpunpckhwd
idiv
xchg
dec
loope
lods
mov
push
ds
sbb
sbb
pop
dec
cmp
neg
dec
mov
ss
call
pop
xchg
jmp
sub
dec
xor
dec
xor
mov
imul
pop
mov
imul
not
sub
mov
mov
pop
mov
push
cmp
inc
imul
cmp
xlat
dec
aad
(bad)
xlat
imul
les
je
or
and
mov
mov
sub
pop
pop
sub
push
xor
dec
xor
fstp
(bad)
jge
pop
mov
mov
push
xlat
mov
pop
mov
dec
mov
sbb
adc
mov
mov
add
je
add
push
aad
fstp
aad
(bad)
push
xchg
xchg
push
mov
mov
mov
aad
dec
sub
cmp
push
mov
pop
sub
mov
sub
mov
push
aad
fnstenv
xlat
imul
les
je
cmp
bound
sub
sub
sub
pop
pop
sub
sbb
imul
push
mov
mov
push
xlat
mov
pop
mov
dec
mov
sbb
adc
mov
mov
pop
mov
sub
mov
push
xlat
leave
mov
mov
imul
vpunpckhwd
push
push
mov
push
mov
imul
push
aad
dec
sub
imul
jns
mov
jbe
imul
jbe
mov
push
xlat
mov
pop
mov
dec
mov
sbb
sub
mov
pop
sub
mov
or
pop
mov
add
push
mov
push
sahf
out
add
std
imul
je
adc
mul
sub
push
aad
fistp
imul
(bad)
std
imul
push
mov
sub
push
aad
dec
sub
imul
inc
mov
mov
imul
jbe
mov
push
xlat
in
imul
mov
sbb
adc
dec
pop
inc
loopne
je
xchg
xchg
and
mov
mov
sub
push
aad
(bad)
imul
sar
fistp
mov
imul
test
dec
sub
imul
jns
and
mov
imul
jbe
mov
push
xlat
mov
pop
mov
dec
mov
sbb
adc
inc
out
sahf
imul
je
xchg
xchg
sub
push
mov
imul
push
out
add
(bad)
std
imul
je
xor
push
sub
sub
sub
pop
pop
sub
jbe
push
mov
mov
cmp
pop
sub
push
aad
pop
sbb
repnz
aad
dec
sub
imul
jns
jecxz
imul
push
mov
mov
push
xlat
mov
pop
mov
dec
mov
sbb
cs
mov
loopne
je
xchg
xchg
and
mov
mov
sub
jbe
push
mov
mov
cmp
sbb
mov
gs
push
aad
pop
xchg
popf
imul
sub
imul
jno
xor
imul
jbe
mov
push
xlat
push
mov
mov
imul
sub
imul
jno
pushf
mov
imul
jbe
retf
icebp
push
xlat
push
mov
mov
imul
out
scas
fstp
inc
pop
xchg
inc
pop
sar
aad
fcmovnb
mov
add
ret
mov
mov
imul
and
mov
mov
sub
jle
sub
jbe
imul
jbe
mov
push
xlat
push
mov
mov
imul
sub
imul
jle
test
push
fistp
mov
mov
push
xlat
xchg
push
mov
dec
mov
sbb
adc
(bad)
inc
xchg
or
pop
loopne
repnz
pop
push
loope
jo
mov
repnz
aas
in
push
dec
ja
ds
push
mov
sub
cmp
xchg
dec
xchg
jns
pop
vpunpckhwd
imul
lods
mov
push
ss
call
pop
mov
in
lahf
imul
push
mov
imul
je
aas
cmp
inc
imul
out
loop
out
sub
dec
aad
fstp
xlat
imul
jmp
jbe
imul
mov
imul
cmp
add
pop
dec
jmp
stos
add
xlat
sub
push
aad
pop
popf
lahf
imul
daa
mov
pop
xchg
inc
pop
idiv
mov
xchg
cwde
pop
dec
jmp
stos
add
ret
mov
gs
push
aad
pop
and
leave
icebp
push
aad
fstp
ins
fstp
aad
fstp
aad
(bad)
mov
add
push
ss
fstp
jmp
ins
sub
mov
imul
cmp
pop
sar
aad
(bad)
aad
fistp
arpl
imul
mov
sbb
cs
mov
loopne
jbe
mov
push
aad
fistp
imul
add
sub
pop
mov
hlt
repnz
push
adc
sbb
jg
push
aad
fist
imul
add
imul
push
mov
sub
push
aad
dec
sub
imul
inc
mov
mov
add
jbe
imul
pop
mov
imul
push
mov
imul
push
aad
dec
sub
imul
inc
mov
mov
add
sbb
arpl
imul
mov
sbb
sub
mov
xchg
fstp
inc
pop
xchg
inc
pop
idiv
xlat
call
fnsave
push
mov
out
add
(bad)
std
imul
je
or
push
sub
xchg
js
mov
mov
pop
mov
sub
mov
push
mov
imul
pop
mov
imul
push
mov
imul
cmp
pop
idiv
xlat
xchg
mov
mov
imul
push
out
add
les
je
xor
out
and
mov
mov
sub
pop
pop
sub
jbe
imul
push
mov
sub
push
aad
pop
adc
sub
icebp
push
aad
dec
sub
imul
jns
cli
mov
imul
jbe
mov
push
xlat
mov
pop
mov
je
push
sbb
adc
mov
mov
pop
mov
sub
mov
push
xlat
xchg
mov
mov
imul
vpunpckhwd
push
push
lock
push
mov
imul
cmp
pop
sar
xlat
jmp
push
mov
add
mov
mov
push
xlat
imul
add
sub
push
mov
pop
sub
mov
or
pop
mov
add
je
add
ret
mov
mov
imul
and
mov
mov
sub
jle
sub
je
add
dec
xlat
mov
pop
mov
imul
not
mov
sbb
sub
mov
pop
sub
mov
sub
movs
jbe
imul
jbe
imul
pop
mov
imul
push
mov
imul
inc
inc
dec
xchg
js
js
inc
xchg
in
inc
jbe
out
pop
jmp
pop
sbb
adc
xlat
jmp
mov
mov
imul
push
ss
xor
inc
data16
mov
aas
pop
xchg
cmps
imul
dec
push
enter
jmp
mov
sub
dec
xor
dec
xor
dec
inc
sbb
jbe
(bad)
push
xlat
push
sar
cmps
push
out
loop
and
push
inc
sbb
jbe
mov
push
xlat
cmp
(bad)
adc
mov
loope
lods
stos
xchg
cli
xchg
mov
sbb
ins
ds
inc
cmp
add
pop
mov
retf
dec
loope
lods
stos
cmps
cmp
mov
dec
mov
pop
push
loopne
inc
loope
jp
jmp
push
mov
jbe
add
scas
sbb
mov
sub
loope
cmp
cmps
imul
add
imul
sahf
ret
imul
ds
mov
adc
(bad)
mov
pop
mov
xchg
dec
dec
push
fs
push
mov
sbb
jbe
fyl2x
push
xor
mov
inc
xchg
jecxz
dec
jle
push
ds
add
ins
(bad)
(bad)
jge
pop
mov
xchg
dec
dec
push
mov
push
mov
sbb
jbe
fdiv
push
xor
mov
inc
xchg
jecxz
jge
mov
aas
adc
sbb
js
push
push
sub
loope
cmp
test
mov
ret
imul
ds
mov
and
out
dec
(bad)
cmp
ss
xor
popa
(bad)
pmovmskb
add
ss
inc
xchg
dec
dec
push
sbb
mov
mov
push
xor
mov
inc
xchg
jecxz
in
mov
aas
adc
adc
js
ror
mov
cmp
loope
cmp
test
mov
ret
imul
ds
mov
sbb
fdivr
adc
adc
js
aas
or
imul
imul
lods
std
imul
loope
or
inc
addr16
(bad)
cmp
pop
mov
xchg
dec
dec
push
mov
je
add
(bad)
std
imul
xchg
cmp
loope
cmp
push
and
mov
jg
dec
loope
push
push
mov
imul
neg
xchg
dec
loope
test
push
add
imul
jmp
inc
xchg
dec
xchg
jns
lahf
loopne
xchg
in
inc
jbe
mov
jmp
imul
cmp
xchg
xchg
cmp
ss
in
lds
push
xor
pop
pop
push
xchg
dec
popf
jnp
mov
push
call
imul
sbb
test
dec
call
pop
cmp
mov
les
mov
lea
loopne
jbe
fcomi
push
xor
pop
jmp
test
fsubr
push
mov
loope
in
inc
xchg
dec
sahf
add
(bad)
pmovmskb
add
ss
xchg
dec
dec
push
and
inc
xchg
dec
sbb
js
fmul
test
cmp
stos
imul
in
inc
xchg
dec
sbb
or
test
cmp
stos
imul
(bad)
push
ss
xchg
dec
dec
push
cld
cmps
push
mov
xchg
dec
sbb
js
pop
or
mov
cmp
gs
imul
in
inc
xchg
dec
sbb
js
sub
mov
cmp
inc
stos
imul
(bad)
add
ss
xchg
dec
dec
push
sub
in
inc
xchg
dec
push
retf
jb
sub
loope
cmp
stos
imul
in
inc
xchg
dec
pop
retf
xchg
or
mov
cmp
sbb
call
xlat
ret
add
ss
xchg
dec
dec
push
test
in
inc
xchg
dec
adc
or
mov
cmp
int
imul
loope
loopne
sahf
add
(bad)
(bad)
add
repz
xchg
dec
dec
push
les
in
inc
xchg
dec
adc
js
sbb
cmp
lea
call
xlat
dec
pop
pop
mov
xchg
dec
dec
push
adc
mov
push
sahf
dec
loope
xor
fwait
arpl
fld
sub
push
push
sbb
jmp
inc
xchg
xor
lea
inc
loope
imul
ss
xor
fidiv
push
mov
adc
push
fadd
xor
mov
ss
xchg
dec
pop
jg
sar
mov
aas
aam
loop
xchg
mov
cmp
push
loop
xchg
dec
and
in
mov
mov
xchg
dec
loope
ss
mov
cmp
ds
inc
xchg
dec
loope
add
fwait
inc
xchg
dec
loope
cmp
fidiv
imul
xchg
cmp
cmp
dec
out
xchg
mov
xchg
or
dec
ss
hlt
jle
mov
inc
jbe
aam
mov
mov
mov
cld
sbb
imul
push
mov
enter
inc
push
mov
xchg
dec
dec
push
fs
push
mov
imul
pop
mov
xchg
dec
dec
push
cwde
movs
push
mov
and
push
mov
xchg
dec
loope
cmp
stos
imul
loope
loopne
xchg
cmp
fisttp
sub
loope
cmp
test
mov
mov
in
dec
out
xchg
jecxz
jne
mov
cmp
cmps
xchg
cmp
pop
adc
xchg
dec
loope
jmp
inc
xchg
dec
dec
xlat
xchg
imul
loop
xchg
dec
dec
push
sbb
push
mov
imul
loope
adc
pop
xlat
popf
imul
loop
xchg
dec
dec
push
in
loope
jmp
(bad)
push
dec
loop
xchg
xor
mov
imul
xchg
lods
imul
xchg
jns
push
out
xchg
dec
adc
out
test
mov
xchg
dec
loope
stc
adc
push
(bad)
std
imul
loope
or
scas
add
std
imul
loope
sbb
loope
sbb
loope
dec
cmp
aas
aad
loop
xchg
dec
xor
jns
fwait
addr16
dec
loope
in
mov
inc
xchg
dec
push
push
dec
xchg
addr16
dec
loope
aam
jmp
outs
call
mov
or
ss
xchg
dec
dec
xlat
mov
ss
xchg
dec
dec
push
adc
push
mov
in
dec
out
xchg
jecxz
jge
mov
ss
arpl
inc
xchg
mov
call
imul
loope
adc
repz
mov
ss
inc
out
xchg
or
pop
loopne
ror
dec
xchg
jns
ss
xchg
dec
dec
inc
fadd
inc
xchg
pop
jne
imul
jne
imul
mov
xor
sti
movsx
fwait
inc
xchg
dec
loope
add
loope
add
push
aad
pop
push
lods
imul
loop
xchg
dec
dec
in
xchg
push
repnz
xchg
dec
neg
movs
dec
loope
lods
mov
adc
outs
dec
loope
xchg
push
repnz
xchg
dec
imul
jnp
push
ds
ror
imul
not
sbb
in
jno
mov
or
push
mov
rol
cmc
mov
std
add
mov
mov
jl
push
mov
xchg
dec
pop
jg
cmps
dec
push
sub
push
mov
jge
push
out
imul
loopne
xchg
cli
popa
adc
and
mov
mov
std
mov
mov
imul
push
mov
imul
mul
pop
mov
add
addr16
imul
imul
loope
xchg
(bad)
push
push
mov
mov
das
enter
in
add
inc
xchg
jecxz
mov
lods
mov
push
mov
lods
pop
mov
(bad)
push
mov
xchg
push
sub
pop
mov
imul
jl
cmp
fisttp
jb
mov
mov
je
js
cmp
aaa
cld
adc
inc
xchg
jne
or
not
jge
push
mov
push
test
ins
and
push
out
loopne
jmp
jle
lods
aaa
jne
arpl
scas
xor
fsubp
inc
xchg
sub
inc
xchg
xor
mov
xchg
dec
and
sub
mov
xchg
dec
push
push
dec
cmps
push
mov
push
push
repz
xchg
sbb
(bad)
pop
loope
pop
ds
sbb
mov
sub
retf
inc
cmp
stos
imul
dec
xor
add
inc
xchg
jecxz
cmc
jns
push
xor
adc
inc
xchg
jecxz
test
call
sbb
fld
xor
cmps
add
loope
cmp
scas
imul
not
aam
pop
mov
imul
jbe
div
push
push
hlt
mov
das
addr16
xchg
add
pop
loope
in
sbb
mov
sahf
imul
push
xlat
stc
adc
jne
std
imul
not
jp
push
xor
fwait
lock
xchg
ds
mov
mov
mov
ret
mov
imul
jbe
stc
repz
push
push
mov
das
addr16
xchg
add
xchg
pushf
imul
push
xlat
stc
adc
jne
std
imul
div
lods
repz
add
pop
loope
in
fsubr
mov
mov
mov
dec
int3
cmp
mov
fstp
aad
fstp
aad
fistp
mov
div
push
push
in
push
mov
imul
aad
jecxz
sbb
sub
loope
imul
loope
cmp
mov
mov
xor
pop
loope
jmp
mov
in
cmps
jmp
xchg
xchg
(bad)
stos
push
mov
mov
cli
shl
je
add
std
imul
imul
in
cmps
out
in
stos
push
xchg
dec
dec
push
add
push
mov
xchg
dec
popf
ja
repz
sub
inc
add
dec
xor
push
icebp
inc
xchg
in
retf
popa
mov
mov
mov
add
push
inc
sbb
not
data16
pop
lods
fcomp
mov
fstp
inc
loop
stos
push
xchg
dec
xchg
jl
(bad)
stos
push
cwde
mov
jmp
xchg
cli
mov
(bad)
mov
pop
sub
mov
ins
inc
arpl
imul
popa
mov
fdivr
ss
(bad)
ss
fistp
mov
imul
ret
mov
aad
pop
cdq
scas
imul
jmp
push
xchg
dec
xchg
cmp
pop
loope
loopne
fsqrt
aad
push
mov
imul
push
ss
(bad)
ss
ds
add
pop
ins
mov
mov
mov
sub
je
add
jbe
imul
mov
imul
push
mov
imul
push
xlat
std
add
mov
mov
imul
loope
jmp
mov
jmp
imul
adc
sub
push
mov
xchg
dec
lahf
jl
rcr
sub
pop
out
xchg
es
xchg
dec
fnstcw
lds
inc
ins
mov
mov
loopne
xchg
cmp
pop
loope
cmp
fwait
adc
fild
sub
(bad)
push
xlat
push
cmp
fisub
jmp
js
fild
mov
xchg
dec
lahf
dec
jno
push
mov
xchg
dec
dec
aad
fstp
xlat
cmps
ret
pop
mov
sbb
frstor
push
xor
sbb
inc
xchg
jecxz
mov
sbb
push
aad
fstp
push
mov
pop
pop
mov
mov
mov
imul
cmp
imul
adc
mov
fnsave
sub
dec
push
clc
mov
je
add
not
test
call
dec
mov
repnz
in
aas
in
jge
bound
xor
push
xchg
cli
xchg
cmp
xor
mov
call
xor
mov
imul
push
mov
imul
movsx
adc
push
mov
pop
mov
push
mov
jbe
sub
push
mov
sub
pop
mov
xchg
cmp
ss
mov
ss
fcomi
sub
loope
xor
cli
inc
xchg
dec
xchg
cmp
dec
stos
pop
xchg
dec
loope
mov
adc
in
mov
mov
xchg
dec
dec
inc
pop
idiv
mov
mov
jg
fcom
inc
inc
ss
dec
popf
push
ins
cmp
xchg
cld
ja
inc
xchg
mov
retf
fwait
pop
xchg
dec
loope
in
imul
xchg
xor
mov
xchg
dec
xor
inc
push
arpl
add
loope
inc
mov
dec
xor
outs
jecxz
xchg
cwde
fwait
imul
mov
sub
push
ss
call
(bad)
push
mov
imul
pop
mov
loopne
popf
call
and
(bad)
push
mov
add
pop
mov
xchg
jmp
push
mov
inc
pop
fld
pop
xchg
dec
inc
push
and
inc
loopne
mov
xchg
adc
pop
mov
mov
gs
push
inc
mov
mov
imul
std
mov
mov
inc
sahf
push
xchg
cmp
je
mov
sub
xchg
cmp
je
xchg
imul
and
mov
pop
sub
sbb
cs
mov
std
adc
xchg
and
mov
leave
adc
cmps
and
mov
jge
pop
mov
imul
push
mov
xchg
dec
and
mov
leave
adc
mov
pop
mov
jns
push
inc
sbb
div
xchg
dec
loope
xchg
(bad)
push
push
sbb
mov
mov
sbb
xor
mov
xchg
dec
dec
push
add
cli
inc
xchg
dec
test
scas
fndisi(8087
mov
xchg
dec
loope
cmp
hlt
repnz
push
movs
mov
jecxz
xchg
dec
push
retf
push
aad
fisttp
sub
adc
push
hlt
repnz
push
mov
sbb
xchg
dec
loope
in
inc
jecxz
xchg
jne
dec
xchg
dec
loope
jmp
mov
mov
sub
mov
imul
sub
enter
add
push
mov
xchg
dec
popf
ja
repz
sub
inc
jmp
xlat
aaa
push
pop
mov
xchg
dec
dec
push
xchg
and
inc
jmp
mov
add
push
aad
pop
mov
imul
adc
imul
les
push
dec
mov
fwait
pop
xchg
dec
loope
scas
ds
inc
xchg
dec
loope
in
out
inc
xchg
dec
dec
xlat
inc
imul
out
inc
xchg
dec
dec
push
add
push
xlat
xchg
mov
mov
xchg
dec
dec
inc
pop
scas
mov
imul
add
ds
fstp
xlat
imul
mov
and
mov
imul
pop
ins
mov
xor
dec
loopne
xchg
xor
inc
sub
and
xchg
mov
je
add
imul
push
mov
sub
push
push
(bad)
mov
mov
xchg
dec
push
push
push
mov
loope
jecxz
sbb
dec
loope
pop
iret
sbb
imul
pop
mov
pusha
mov
inc
pop
scas
mov
imul
iret
ins
mov
aas
in
dec
loopne
xchg
mov
cmp
mov
push
cmps
imul
fwait
dec
xchg
dec
loope
add
fwait
dec
xchg
dec
loope
or
fisubr
imul
loope
xchg
xchg
pop
popa
mov
aas
aam
loopne
xchg
mov
lahf
add
leave
std
imul
push
mov
sub
push
push
sahf
mov
mov
xchg
dec
dec
xor
inc
jecxz
xchg
jecxz
xchg
mov
push
xor
inc
jecxz
xchg
jecxz
movs
bound
jbe
imul
loope
inc
sub
mov
imul
loope
sbb
je
add
push
aad
pop
icebp
mov
mov
mov
pop
mov
imul
dec
stos
xchg
push
mov
xchg
dec
dec
xor
inc
jecxz
xchg
jecxz
sbb
in
inc
jecxz
xchg
jecxz
or
lods
mov
push
xor
dec
loopne
xchg
jecxz
mov
pop
mov
imul
loope
sbb
je
add
push
aad
pop
cdq
mov
mov
mov
pop
mov
imul
xor
loope
jmp
dec
popf
inc
push
ds
fstp
xlat
inc
fs
mov
popa
mov
inc
pop
fwait
cmp
imul
loopne
xchg
mov
and
inc
xchg
dec
loope
in
mov
inc
xchg
dec
and
pop
xchg
je
add
push
aad
pop
or
mov
pop
mov
imul
cmp
cmp
sub
ds
dec
xor
xchg
dec
loope
in
out
inc
xchg
dec
dec
xlat
inc
imul
out
inc
xchg
dec
dec
push
lods
mov
push
xlat
xchg
mov
mov
xchg
dec
dec
inc
pop
xchg
cmp
imul
ds
fstp
xlat
js
pop
mov
outs
mov
inc
pop
xchg
cmp
imul
loopne
xchg
mov
and
inc
xchg
dec
loope
in
mov
inc
xchg
dec
and
pop
xchg
je
add
push
aad
pop
inc
mov
dec
sub
mov
imul
cmp
ds
inc
xchg
dec
loope
mov
mov
retf
test
xchg
dec
loope
push
jno
pop
call
mov
cmp
fwait
dec
xchg
dec
loope
add
fwait
dec
xchg
dec
loope
or
scas
rcr
mov
in
push
jecxz
xchg
cmp
ss
fstp
aad
fstp
aad
fstp
xlat
imul
popf
mov
cdq
dec
loope
add
loope
cdq
dec
loope
and
and
(bad)
push
mov
pop
sub
jmp
mov
add
loope
cmp
jbe
lock
inc
fadd
inc
xchg
pop
fnstcw
in
repnz
xchg
dec
dec
aad
fucomi
pop
sub
loope
sbb
xchg
dec
xchg
dec
loope
mov
mov
retf
push
xor
pop
jecxz
xchg
loope
xor
inc
jecxz
xchg
loopne
or
xor
mov
in
pop
jecxz
xchg
jecxz
mov
imul
or
push
mov
xchg
dec
test
push
inc
pop
idiv
mov
add
je
add
ds
sub
push
ss
inc
loopne
xchg
cmp
mov
fstp
aad
dec
stos
dec
xchg
dec
loope
les
mov
xchg
repz
sub
inc
loopne
je
in
repnz
xchg
dec
dec
in
add
mov
dec
xchg
dec
loope
test
xchg
cmp
fstp
xlat
test
mov
xchg
dec
imul
mov
ss
and
scas
dec
stos
dec
xchg
dec
loope
or
push
mov
sub
je
add
push
xlat
adc
mov
imul
neg
in
loope
lods
stos
je
xchg
xchg
and
mov
jno
mov
ss
and
scas
pop
cmovo
loope
jns
imul
mov
mov
stos
mov
popf
push
gs
call
lods
(bad)
in
loopne
pop
inc
loopne
xchg
cli
mov
mov
mov
into
push
mov
fnstcw
in
adc
mov
pop
mov
imul
push
test
(bad)
imul
mov
mov
jmp
mov
pop
mov
imul
sub
or
add
sub
and
mov
icebp
ins
mov
ss
inc
stc
ss
xchg
js
xchg
and
mov
mov
xchg
and
mov
lea
push
test
(bad)
imul
stos
std
imul
imul
pop
xchg
cmp
push
ret
stos
std
imul
test
push
push
or
pop
loopne
jmp
pop
cmp
(bad)
sbb
xchg
mov
imul
add
xchg
call
div
push
retf
add
pop
scas
mov
imul
mov
imul
add
enter
pop
xchg
cmp
je
xchg
imul
add
mov
or
sbb
loope
jns
imul
mov
push
outs
cmp
xchg
xchg
cmp
loopne
call
push
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
cmp
test
mov
ss
xor
popf
sbb
je
loopne
pop
out
and
fidiv
test
hlt
cmc
mov
sbb
mov
push
jmp
clc
or
test
xchg
push
add
push
aad
in
mov
xchg
dec
inc
jbe
jmp
inc
mov
mov
push
mov
mov
lods
sbb
imul
fiadd
xchg
dec
loope
out
dec
in
adc
cmp
popa
and
in
sbb
xor
xor
xchg
sbb
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
mov
popf
icebp
push
das
stc
mov
.byte
.byte
