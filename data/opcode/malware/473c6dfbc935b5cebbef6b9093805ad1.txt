add
pop
push
add
add
add
add
push
add
push
add
add
add
add
add
pop
add
add
add
add
add
pop
add
pop
push
add
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
add
add
add
add
add
add
pop
add
add
push
add
add
push
add
pop
add
add
add
push
add
pop
add
push
add
add
add
add
add
pop
push
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
ins
hlt
(bad)
fistp
fsqrt
sahf
pop
xor
cmp
pop
iret
pushf
out
dec
out
mov
jle
ficom
sti
inc
mov
jne
loopne
mov
pop
push
inc
or
(bad)
sub
xor
mov
mov
hlt
jmp
mov
(bad)
jmp
into
add
xor
jmp
sbb
xchg
pop
fdiv
xchg
add
cmps
sub
adc
cmp
fs
dec
xchg
fsubr
push
xor
aas
cdq
pop
cmp
faddp
ror
arpl
aad
push
inc
mov
mov
xchg
push
in
inc
adc
or
sub
push
out
div
ins
mul
jmp
sti
aaa
pop
out
jnp
xor
sub
fldl2e
push
ds
or
jecxz
(bad)
push
jnp
repnz
mov
popa
shl
shl
push
outs
test
mov
xchg
xchg
push
cmps
push
mov
mov
jp
and
add
add
add
pop
add
add
add
add
pop
add
add
push
add
pop
add
add
add
add
add
push
push
push
add
push
add
pop
push
add
pop
add
add
push
pop
pop
add
add
push
add
add
add
add
add
add
pop
pop
add
pop
push
pop
add
add
add
add
pop
push
add
add
push
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
pop
add
add
push
add
push
add
push
add
add
add
add
add
push
add
push
pop
add
add
pop
push
add
push
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
dec
jnp
enter
sub
mov
(bad)
sub
cmp
ds
mov
push
out
mov
stc
jo
shr
shl
dec
adc
xor
je
sbb
jnp
xchg
outs
cmp
scas
enter
inc
loope
out
dec
push
jbe
loopne
xchg
cmp
sub
push
fnsave
aad
je
(bad)
xchg
pop
cmp
and
imul
jae
test
cmp
test
sub
fisttp
cwde
bound
push
cli
add
cmps
xchg
fimul
call
js
aas
repnz
jle
adc
xchg
adc
into
cmp
jmp
test
xchg
loope
fadd
push
repnz
ins
(bad)
jns
xchg
out
sub
mov
jae
aad
and
(bad)
jnp
sbb
or
aas
xchg
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
push
push
push
add
add
pop
add
add
add
add
push
push
push
add
add
pop
add
add
add
push
push
pop
add
add
push
push
add
add
add
add
push
add
add
pop
push
add
add
add
pop
add
add
push
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
push
add
add
pop
add
add
add
add
add
add
add
push
push
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
pop
push
add
add
add
add
add
add
pop
add
add
push
add
jb
push
scas
or
cmp
xor
sbb
sub
add
pusha
jle
ss
dec
or
sub
xchg
data16
bound
dec
jl
xor
js
mov
push
pop
xchg
inc
mov
add
and
idiv
cmps
mov
sti
adc
jnp
or
jne
mov
sar
movs
fsub
push
xchg
ficomp
push
gs
push
xchg
add
xlat
cdq
push
adc
sbb
push
adc
mov
ja
in
rcr
(bad)
int3
or
int
imul
push
shl
add
ins
call
lahf
mov
mov
mov
push
pop
jge
mov
jl
js
mov
mov
or
mov
push
fbld
mov
mov
retf
(bad)
loope
pop
outs
repnz
sbb
hlt
imul
ins
int3
gs
jl
fs
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
pop
push
add
add
add
push
add
pop
add
add
push
add
add
add
add
add
pop
add
add
add
push
add
pop
add
add
add
add
push
add
push
pop
add
add
pop
add
pop
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
rcl
adc
sbb
jo
dec
push
cmc
(bad)
jmp
mov
daa
sti
mov
push
fcomi
cmp
test
aaa
pop
arpl
ss
xchg
(bad)
pop
in
popf
gs
fist
push
in
dec
(bad)
push
cmps
push
shr
push
jl
in
mov
dec
jl
inc
cdq
inc
xchg
cwde
xchg
mov
ja
aad
mov
xchg
dec
int
scas
es
cli
addr16
(bad)
push
rol
and
mov
add
repz
cld
add
inc
or
outs
mov
mov
add
jg
mov
mov
fwait
dec
js
shl
enter
xor
sbb
cdq
hlt
loop
test
mov
sub
adc
(bad)
popfw
mov
fnstcw
pop
call
mov
push
pop
jecxz
lods
xor
add
and
sub
cmp
xor
push
push
adc
pop
and
es
xor
adc
add
sbb
or
add
add
cmp
adc
adc
adc
add
add
sub
xor
push
ds
daa
push
sub
or
cmp
adc
push
or
add
es
sbb
sub
or
pop
and
sbb
or
adc
sbb
sbb
sub
sub
pop
adc
cmp
or
adc
xor
cs
and
cmp
and
aas
movups
ds
cmp
or
or
and
push
add
add
pop
push
adc
cs
aaa
daa
push
cmp
ds
xor
adc
cmp
add
and
and
sbb
adc
adc
sub
sbb
push
cs
sbb
and
ss
add
adc
adc
xor
add
aaa
adc
or
test
test
test
add
add
add
test
add
add
add
add
test
add
test
add
add
test
test
add
test
add
add
test
add
add
test
add
add
test
add
test
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
test
add
add
add
add
add
add
add
test
add
add
add
test
test
add
add
test
test
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
test
add
add
add
test
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
test
test
add
test
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
test
test
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
test
add
add
add
add
add
test
add
add
add
add
add
add
add
add
test
add
add
add
test
add
add
test
add
add
test
test
add
test
add
add
add
add
add
test
test
add
add
add
add
add
add
test
test
add
add
test
test
test
test
add
test
test
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
test
test
add
add
add
add
add
add
add
test
add
add
add
add
add
add
test
add
add
add
add
test
add
test
test
test
add
add
add
add
add
test
add
add
test
add
test
add
add
add
add
add
add
test
test
add
add
add
add
add
add
add
add
add
add
test
add
test
add
test
add
add
test
test
add
add
add
add
add
add
test
add
test
test
test
add
test
add
add
add
add
add
add
add
add
test
add
add
add
test
add
add
add
add
add
add
add
test
add
add
add
add
add
add
test
add
add
add
add
test
test
test
add
add
add
add
add
add
add
add
add
test
add
add
test
add
add
add
test
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
test
test
add
add
add
add
test
add
add
add
add
test
add
add
add
test
test
test
add
add
test
add
test
test
add
add
test
add
add
add
add
add
add
add
add
add
add
test
test
add
add
test
add
add
add
add
test
add
add
add
add
test
test
add
add
add
test
test
test
add
add
add
add
add
add
add
test
add
add
test
test
add
add
add
add
add
test
add
add
add
add
add
add
add
test
add
test
test
test
add
test
test
add
add
add
add
add
test
add
test
add
add
add
test
add
test
test
add
add
add
test
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
test
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
test
add
add
add
test
test
test
add
test
add
add
add
test
add
add
add
add
test
add
add
add
add
add
add
add
add
test
add
add
add
test
add
add
add
test
add
add
add
add
add
test
add
test
add
test
test
add
add
add
add
add
add
add
add
add
test
add
add
test
add
test
test
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
test
add
add
test
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
test
add
add
add
test
add
add
add
add
add
add
test
add
test
add
add
add
add
add
add
add
test
add
add
add
add
test
add
add
add
add
test
add
add
test
add
add
add
add
add
add
test
add
add
add
add
add
add
test
add
test
add
add
add
add
test
add
add
add
test
add
add
test
test
add
add
add
add
add
add
add
add
test
add
add
add
test
add
test
add
add
add
add
add
add
add
test
add
add
add
test
add
add
add
test
add
add
test
add
add
add
add
test
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
and
or
push
xchg
inc
mov
test
mov
movs
or
add
add
push
adc
cmp
add
push
adc
or
or
inc
test
arpl
add
sahf
les
push
call
and
pop
add
inc
or
or
inc
add
add
test
add
loope
call
mov
pop
add
add
call
sbb
inc
xor
adc
dec
add
push
add
push
cdq
inc
add
js
adc
inc
and
add
test
inc
and
inc
nop
xchg
adc
inc
or
cmp
add
adc
nop
inc
add
lea
add
mov
add
push
add
inc
mov
test
rcl
and
push
push
adc
sub
add
cmp
add
pop
ss
adc
add
inc
mov
push
adc
xor
push
inc
nop
add
nop
inc
add
inc
inc
mov
inc
xchg
inc
push
cmp
sub
add
add
inc
jo
movs
add
add
add
mov
adc
mov
rol
inc
add
hlt
add
or
dec
push
sub
add
ror
add
sub
or
pop
add
and
or
les
add
inc
adc
add
add
jbe
les
daa
cld
inc
add
inc
adc
rol
xchg
and
or
sub
or
adc
adc
sub
sbb
fdiv
mov
or
and
mov
and
inc
and
inc
cmps
test
add
es
add
xor
adc
dec
dec
add
adc
pusha
sbb
add
nop
or
add
inc
dec
add
and
stos
dec
or
inc
test
add
inc
add
adc
inc
sub
sub
bound
dec
or
adc
add
pusha
mov
add
sbb
mov
mov
adc
add
or
mov
push
test
add
inc
or
xor
movs
and
pop
inc
and
and
and
xor
adc
push
test
dec
add
call
and
jno
adc
adc
add
inc
or
mov
inc
or
add
popa
adc
or
add
add
add
or
add
adc
add
inc
pusha
add
xor
call
adc
adc
add
add
sub
add
add
adc
jo
push
and
add
adc
rol
or
push
add
dec
dec
push
test
add
and
sub
pusha
sbb
adc
cmp
mov
add
add
test
popa
and
clc
inc
lock
add
and
inc
inc
add
mov
or
test
add
and
inc
or
add
mov
mov
or
pusha
add
clc
add
dec
dec
add
or
pop
and
rol
adc
inc
mov
ret
add
adc
enter
or
sbb
sbb
pusha
or
test
or
cwde
nop
sbb
shl
in
dec
add
push
push
and
add
xor
in
and
push
test
inc
and
or
add
or
or
test
inc
push
add
adc
inc
inc
add
dec
or
adc
pop
add
les
imul
inc
push
cwde
add
add
add
add
add
dec
(bad)
or
xor
add
inc
inc
adc
push
popa
adc
sbb
popa
aam
cmp
xchg
mov
sbb
push
pusha
add
push
daa
sub
and
inc
mov
add
mov
sub
inc
add
loopne
test
mov
scas
push
add
test
inc
imul
push
sbb
inc
add
inc
pusha
add
adc
inc
adc
inc
adc
cmp
push
or
xchg
push
inc
and
add
adc
ins
xor
ss
or
rol
test
(bad)
adc
add
add
call
add
adc
add
push
je
add
gs
add
sub
inc
and
adc
add
or
test
xor
and
add
sub
pusha
add
in
mov
pusha
push
inc
adc
add
or
mov
mov
movs
add
add
mov
add
adc
push
pop
add
add
inc
add
mov
or
or
add
inc
inc
sbb
jo
add
ja
or
sub
add
xchg
push
mov
add
add
adc
add
add
add
push
dec
add
mov
and
test
add
mov
inc
inc
sbb
add
mov
inc
or
xor
inc
add
inc
adc
mov
push
mov
fs
dec
xor
push
add
jecxz
push
call
mov
add
xor
add
pop
test
or
add
add
cwde
add
and
push
sub
adc
add
sbb
das
and
add
and
push
or
test
and
or
les
loope
inc
push
add
and
pop
adc
sub
les
adc
pop
call
shl
or
adc
inc
ret
and
inc
sub
add
or
add
adc
add
adc
dec
sub
add
push
cwde
mov
stos
inc
add
add
add
or
xchg
gs
add
loop
or
or
adc
pop
pop
or
enter
call
push
mov
or
mov
and
add
sbb
rol
dec
and
xchg
ror
or
lea
test
add
rol
test
add
add
add
and
add
pop
test
popa
push
inc
or
or
xchg
add
cwde
sub
sub
add
add
or
loopne
or
add
pop
nop
inc
adc
inc
add
and
and
jmp
dec
arpl
inc
sub
inc
sbb
adc
inc
inc
pusha
inc
or
add
add
xchg
jno
sub
lahf
mov
inc
add
or
mov
add
adc
adc
inc
test
mov
add
in
pusha
cmp
adc
lahf
cmps
inc
mov
test
and
add
or
mov
and
adc
add
add
mov
and
inc
add
mov
adc
mov
adc
or
add
adc
xchg
jo
and
mov
add
or
loope
mov
mov
jmp
sub
push
inc
adc
and
adc
inc
pusha
add
dec
or
push
dec
mov
push
inc
push
sub
cmp
jl
inc
add
and
add
add
and
(bad)
mov
arpl
xor
cmp
mov
add
add
inc
ret
add
add
and
and
inc
cmp
add
add
push
mov
adc
and
adc
add
dec
add
test
ret
add
pop
add
and
mov
mov
inc
or
or
inc
nop
or
and
adc
sbb
mov
loopne
add
add
adc
or
sbb
mov
adc
nop
add
add
sbb
and
mov
push
inc
test
add
or
push
inc
inc
adc
dec
sub
and
mov
rol
hlt
sbb
bound
rcl
ret
add
and
and
or
sbb
and
adc
inc
test
test
rol
adc
or
test
add
add
add
and
push
push
adc
push
add
les
and
and
add
mov
les
add
inc
xor
push
jae
add
inc
or
add
rol
xor
and
inc
in
add
dec
add
and
adc
inc
add
or
sub
and
add
test
movs
pop
mov
or
rol
or
test
inc
or
add
or
and
or
push
sub
dec
add
dec
or
add
shl
sub
sbb
data16
inc
add
mov
xor
adc
sub
mov
add
sub
mov
add
add
shl
inc
lock
cdq
inc
dec
and
ret
add
add
add
add
or
xchg
add
add
inc
adc
bound
sub
add
mov
pusha
inc
and
and
movs
rol
add
adc
inc
inc
adc
rcr
add
add
add
add
add
sub
push
add
add
adc
inc
add
add
test
or
add
dec
add
adc
jo
dec
and
and
nop
push
or
or
mov
add
dec
inc
add
mov
inc
jb
xchg
and
push
add
push
add
sbb
add
add
adc
adc
inc
dec
or
adc
add
add
add
xchg
mov
mov
sub
or
and
dec
js
or
add
adc
adc
xchg
pop
sbb
add
add
or
push
adc
add
test
push
add
mov
xchg
mov
dec
add
mov
adc
adc
inc
mov
dec
and
jno
enter
pop
inc
adc
adc
push
and
or
xor
add
inc
shl
rol
inc
or
dec
dec
inc
add
aam
and
adc
ret
xchg
add
inc
and
and
adc
inc
ror
add
mov
xchg
xor
shl
add
or
fsub
add
pushf
shl
xchg
inc
add
add
es
add
rol
and
and
adc
pop
ins
add
push
lea
xchg
mov
or
adc
or
add
inc
add
or
movs
inc
add
and
adc
call
inc
add
add
dec
popa
test
dec
xchg
push
inc
movs
push
add
add
inc
and
add
adc
add
xor
shl
sub
adc
inc
dec
and
sub
add
adc
movs
or
dec
cmp
inc
or
xor
bound
and
and
inc
inc
pusha
add
or
enter
or
test
fidiv
sbb
inc
or
call
call
loopne
shl
add
pop
or
add
and
add
add
ror
or
add
add
add
xchg
add
out
and
add
mov
add
add
and
sub
add
pusha
xchg
nop
dec
add
add
scas
add
xchg
mov
or
add
add
rol
add
adc
add
add
les
or
push
adc
jmp
es
rol
pop
add
add
shl
add
adc
and
inc
mov
and
or
add
add
or
mov
or
add
mov
and
adc
nop
pop
and
add
add
adc
adc
adc
call
add
push
inc
mov
and
push
xor
add
adc
in
add
add
dec
arpl
sub
mov
add
mov
dec
adc
sbb
add
dec
fisub
or
adc
or
and
bound
inc
adc
add
or
push
rcl
dec
mov
add
repz
and
inc
add
xor
fs
sbb
xchg
adc
or
nop
add
mov
add
dec
xor
add
sbb
add
sbb
or
test
add
or
adc
and
sbb
or
add
add
adc
add
and
or
mov
inc
xor
inc
test
adc
add
test
or
sub
and
sbb
adc
inc
add
and
add
dec
add
ret
es
push
adc
inc
int3
add
add
add
add
xchg
les
mov
xchg
cwde
xchg
add
inc
rcl
mov
xor
call
push
add
arpl
and
cwde
add
adc
or
pop
or
or
dec
inc
adc
and
lds
add
add
add
inc
xchg
sbb
and
sbb
push
popa
adc
adc
sub
mov
or
jmp
and
push
adc
inc
and
add
push
test
add
or
and
les
inc
jl
inc
adc
and
add
inc
adc
movs
add
inc
mov
or
add
imul
add
jle
loope
sub
inc
add
xchg
mov
inc
add
add
or
add
or
test
add
add
sbb
add
push
sub
into
test
adc
inc
add
add
xchg
add
adc
add
add
dec
shr
add
push
or
add
dec
add
add
or
add
and
or
or
cmp
aam
test
and
adc
add
xor
inc
or
inc
and
and
inc
add
jmp
add
or
rol
les
adc
es
call
add
enter
shr
add
test
inc
bound
add
or
add
add
les
shr
add
bound
or
adc
inc
and
rol
and
jp
out
add
nop
hlt
add
sub
and
or
and
mov
add
and
and
and
inc
sbb
cmp
push
add
push
inc
or
shr
movs
mov
inc
sub
inc
add
adc
dec
add
sbb
inc
xchg
inc
add
mov
inc
add
adc
inc
or
or
xor
lods
mov
int3
inc
add
add
xchg
pop
push
add
cmps
adc
add
fs
dec
pusha
mov
xchg
add
add
sar
dec
loopne
and
add
cmps
dec
add
adc
nop
inc
sbb
inc
or
xchg
movs
add
push
add
inc
and
dec
shl
add
add
sbb
cmps
test
xor
or
les
add
popa
push
call
inc
pop
mov
and
adc
or
test
ins
pusha
mov
and
add
test
add
xchg
add
adc
and
or
test
cmp
xor
and
dec
xor
add
inc
and
add
add
test
add
test
push
daa
add
add
or
dec
push
sbb
inc
add
add
inc
mov
or
add
and
or
inc
or
add
and
push
adc
stos
daa
add
jecxz
adc
add
inc
imul
or
sbb
xchg
add
sbb
or
sbb
or
inc
mov
inc
sub
inc
add
test
inc
pop
dec
adc
inc
(bad)
les
movs
and
add
adc
adc
add
or
add
xchg
add
add
push
adc
or
inc
test
and
add
or
mov
scas
movs
pushf
dec
adc
pushf
xchg
and
add
add
mov
inc
xchg
and
adc
mov
inc
add
pop
adc
popa
adc
adc
inc
adc
bound
sub
add
adc
sbb
add
dec
nop
add
dec
adc
or
add
adc
xor
adc
rol
add
inc
add
xor
and
add
adc
adc
or
inc
inc
push
add
add
adc
or
xchg
xchg
or
mov
push
sbb
add
mov
loopne
push
add
add
add
int
mov
dec
or
dec
inc
ins
cwde
arpl
xchg
adc
add
add
dec
dec
or
adc
add
adc
adc
and
and
cmps
add
test
add
add
add
ins
and
pop
add
or
push
inc
mov
sbb
or
and
and
add
sbb
or
ret
or
add
add
push
or
adc
adc
and
or
xchg
nop
inc
sbb
ror
add
nop
dec
sbb
or
adc
push
add
or
sbb
add
add
and
add
add
adc
add
popa
add
add
add
or
push
add
add
add
add
push
add
pop
rol
add
int3
inc
xchg
mov
add
inc
add
or
or
enter
inc
pop
add
or
push
add
inc
call
and
push
inc
add
rol
imul
add
rol
inc
or
mov
les
add
sub
pusha
jo
add
add
adc
adc
and
or
sbb
inc
js
add
add
inc
add
inc
call
add
inc
and
or
pop
add
inc
or
add
pushf
jo
push
pusha
inc
mov
adc
inc
add
add
pusha
lds
dec
sub
push
adc
sub
add
pop
cmp
inc
mov
test
lock
ss
test
inc
add
inc
sub
test
push
add
add
add
and
enter
sub
ret
mov
adc
inc
add
push
mov
mov
and
add
add
sub
test
rcl
dec
jb
push
les
add
and
fcom
call
add
adc
and
push
xor
and
clc
inc
adc
push
popa
je
inc
sbb
enter
or
or
lods
enter
inc
and
and
adc
add
add
test
(bad)
int3
add
mov
or
inc
add
popa
and
inc
and
adc
or
rol
add
or
call
add
or
or
inc
add
inc
inc
movs
loopne
call
rol
add
inc
je
adc
adc
and
or
mov
push
shl
inc
and
pusha
adc
add
and
mov
loopne
or
adc
mov
add
sub
inc
or
lock
call
add
mov
add
movs
add
mov
add
add
cmps
js
add
add
add
xor
add
ins
mov
pusha
inc
add
sub
mov
add
and
jb
test
or
and
adc
add
inc
add
xor
cmp
lds
add
add
add
add
sub
or
or
add
xchg
inc
adc
es
adc
call
push
add
add
add
test
sub
mov
or
add
dec
add
pushf
xor
add
add
mov
pusha
dec
stos
add
mov
add
mov
xor
add
xchg
and
or
pop
add
inc
pop
mov
inc
rol
add
mov
push
and
add
and
sbb
jmp
or
lea
adc
or
or
inc
mov
or
xchg
inc
and
and
and
sbb
dec
rol
adc
or
test
xor
add
jmp
mov
or
call
and
jb
sbb
add
dec
xor
or
add
test
add
loop
add
add
lods
add
inc
push
and
sbb
push
adc
adc
add
xchg
add
add
test
enter
inc
add
add
adc
add
add
in
push
movs
es
and
sub
ret
sub
add
sbb
sbb
sbb
adc
or
add
inc
dec
loopne
add
sub
and
test
sahf
add
dec
add
dec
add
add
dec
pop
mov
push
and
inc
dec
inc
adc
adc
add
inc
xor
test
push
or
inc
add
adc
mov
add
adc
inc
and
adc
push
add
add
nop
or
inc
xor
inc
or
add
add
mov
(bad)
jmp
inc
push
dec
add
add
push
rcl
add
xor
or
or
add
adc
mov
pop
or
inc
and
adc
mov
push
loope
inc
pop
inc
rcr
rol
or
adc
xor
adc
and
or
or
call
xor
or
test
add
add
rcl
test
push
add
xchg
ja
ret
add
call
add
and
popa
push
xor
das
add
inc
or
xchg
push
or
inc
add
sub
mov
inc
and
cmp
or
or
and
add
enter
add
mov
push
mov
add
add
xchg
add
loop
sub
movs
xor
test
or
sub
and
or
add
adc
sbb
add
inc
and
add
add
or
inc
inc
add
inc
add
fsub
nop
nop
or
and
shl
adc
bound
nop
dec
pop
test
sub
add
xor
inc
xor
add
add
or
and
sbb
push
sbb
adc
inc
xchg
add
push
add
xchg
add
cmps
and
add
xchg
and
xor
pusha
push
sub
add
push
add
add
pusha
inc
mov
add
add
add
dec
or
sbb
push
and
adc
sub
dec
xchg
sbb
bound
or
or
inc
inc
add
add
or
inc
mov
add
or
or
or
inc
and
mov
aam
or
mov
popa
add
adc
sbb
adc
shl
sub
push
push
jnp
jmp
add
ret
add
adc
add
adc
outs
push
cmp
inc
or
add
sub
adc
test
adc
or
add
add
pusha
or
and
and
and
add
ret
rol
add
add
xchg
sbb
pop
or
pop
and
xor
out
push
push
nop
sbb
loopne
and
ret
and
inc
add
popa
mov
call
add
adc
or
or
shl
add
add
push
adc
add
xchg
arpl
pop
mov
and
bound
or
xchg
rcl
test
sbb
retf
inc
or
add
push
imul
add
add
or
retf
and
sbb
add
or
push
inc
add
or
imul
enter
add
add
fcom
pop
add
sbb
add
or
and
dec
push
add
and
daa
add
or
lea
add
mov
xor
and
inc
add
adc
adc
sbb
inc
mov
add
(bad)
and
push
or
push
mov
adc
test
lods
and
add
or
add
inc
inc
repnz
les
adc
adc
ret
add
add
add
sub
test
add
sub
adc
add
xchg
or
sbb
rol
cs
add
add
popa
xor
push
or
inc
dec
pop
pop
inc
adc
add
fs
lods
and
or
jl
add
rcr
adc
or
popa
add
sbb
jno
cld
loopne
loop
inc
or
dec
jo
sbb
add
inc
xchg
add
and
inc
push
or
or
add
add
ja
call
and
iret
add
adc
add
or
mov
adc
add
pusha
push
push
or
add
or
inc
add
push
rol
mov
sub
adc
add
push
add
test
add
adc
add
sub
push
dec
or
add
dec
inc
movs
test
adc
and
add
sub
inc
or
push
push
cmps
inc
add
sbb
and
popa
add
shr
add
add
adc
sub
inc
dec
and
test
and
mov
add
dec
push
adc
add
lock
add
add
add
ret
or
and
adc
sub
inc
call
adc
adc
adc
inc
add
rol
inc
and
add
add
inc
adc
add
add
dec
add
sbb
add
add
pop
inc
sub
xchg
sbb
nop
add
push
add
dec
add
add
adc
mov
pusha
add
sub
and
or
js
add
add
pop
sbb
adc
add
add
or
adc
adc
push
sub
xor
and
add
add
xor
mov
dec
jo
dec
popa
adc
add
pusha
push
add
add
add
and
adc
je
mov
xchg
adc
sbb
bound
push
and
add
push
adc
xchg
cmp
pop
and
xor
sbb
add
nop
sbb
test
sbb
inc
inc
nop
and
sub
inc
inc
add
inc
add
adc
and
mov
sub
popa
add
inc
push
or
add
test
add
dec
add
dec
and
xchg
inc
sub
rol
adc
add
add
mov
add
and
adc
add
dec
(bad)
call
dec
test
mov
and
add
inc
xchg
cmp
adc
add
popa
add
or
adc
dec
xchg
xchg
add
sub
add
rol
push
xor
or
add
shl
adc
adc
add
or
mov
bound
ins
nop
adc
sub
xor
add
lods
push
and
and
add
add
push
push
add
xor
nop
add
add
and
and
adc
add
inc
jo
add
fiadd
push
or
add
rcl
mov
stc
bound
add
add
repnz
or
or
ror
inc
test
es
nop
xor
push
add
or
add
add
add
pusha
add
mov
or
add
add
adc
sbb
or
add
and
gs
or
inc
add
inc
inc
xchg
add
add
adc
inc
add
add
mov
mov
adc
add
or
sub
inc
inc
add
pop
or
mov
add
mov
adc
test
add
add
push
xchg
adc
add
push
push
jo
sbb
jb
and
and
sub
xor
add
add
push
add
add
add
movs
or
rol
and
or
or
add
push
fs
push
xchg
test
lock
add
or
dec
inc
mov
add
xor
add
add
add
and
add
sbb
push
xor
adc
add
add
xchg
adc
jo
ins
dec
sub
adc
add
add
int
shl
or
jo
add
mov
xor
(bad)
add
int3
and
inc
loope
or
add
add
add
dec
inc
rol
add
push
or
rol
inc
push
add
call
das
add
and
mov
pusha
pop
inc
dec
inc
mov
(bad)
test
push
dec
test
add
add
adc
add
daa
adc
sbb
aaa
or
xchg
pop
xchg
push
add
call
mov
or
or
add
push
sbb
mov
mov
inc
in
add
pusha
call
and
movs
add
add
inc
push
sbb
add
and
and
ror
mov
add
bound
mov
adc
adc
bound
and
bound
leave
stos
and
push
or
add
push
adc
xor
add
enter
inc
add
inc
bound
and
add
inc
inc
test
jbe
pop
js
add
add
push
inc
add
dec
movs
sbb
add
add
add
push
adc
add
mov
add
inc
add
mov
add
gs
inc
add
rol
dec
sbb
pop
add
add
add
inc
add
add
adc
sub
ins
add
and
mov
and
add
add
mov
(bad)
lock
sub
sub
adc
les
add
and
adc
mov
add
les
push
nop
popa
dec
adc
add
movs
inc
add
or
add
inc
adc
movs
inc
or
inc
mov
adc
cmp
enter
or
add
mov
add
inc
les
mov
add
inc
test
mov
inc
adc
add
add
add
add
rcl
pop
ret
pusha
sbb
add
add
inc
or
add
mov
mov
inc
mov
add
and
push
or
add
inc
add
push
iret
sbb
add
adc
add
xor
adc
nop
popf
sbb
cmp
and
inc
inc
inc
xlat
and
add
or
add
sub
add
sbb
mov
inc
adc
inc
adc
xchg
adc
mov
lock
pop
inc
and
test
call
add
inc
loopne
cmp
jo
add
inc
call
or
add
add
adc
or
add
xor
test
mov
inc
add
adc
add
pusha
and
xor
adc
rcr
inc
adc
adc
or
inc
add
mov
xor
or
inc
add
popa
and
inc
add
mov
test
add
sbb
ins
lds
or
or
in
test
lods
or
add
adc
rcl
dec
and
inc
push
pop
lds
rol
or
push
or
mov
sbb
adc
mov
or
inc
and
xchg
sbb
jb
and
mov
add
or
push
or
js
add
rol
add
mov
adc
or
add
sbb
test
loop
sub
add
xor
and
adc
adc
push
adc
ror
add
and
ss
add
dec
push
add
adc
fsub
or
adc
add
adc
and
and
adc
adc
pop
jno
add
and
add
stc
add
add
add
mov
(bad)
and
push
and
and
adc
add
and
or
pop
pusha
adc
add
or
add
sub
push
or
pusha
nop
sbb
mov
add
test
add
cwde
dec
lods
test
add
add
and
dec
add
nop
adc
adc
push
mov
jo
adc
fs
add
or
add
or
pop
inc
or
or
mov
inc
adc
mov
sub
add
sbb
dec
xor
push
or
or
sub
push
aas
and
sub
enter
push
or
or
test
xchg
add
add
cmp
enter
inc
pop
mov
and
add
sbb
or
inc
and
push
cwde
add
inc
and
adc
push
mov
movs
xchg
add
rol
mov
inc
add
and
lods
adc
add
add
add
inc
mov
sbb
pop
arpl
and
push
mov
or
add
add
add
cmp
or
jo
add
inc
pusha
test
add
inc
adc
or
add
adc
add
or
nop
nop
or
ror
dec
movs
dec
mov
add
adc
lea
jo
adc
inc
adc
loop
sub
mov
dec
add
and
adc
and
ret
and
push
add
add
sbb
lds
inc
add
xor
and
add
pop
mov
and
nop
and
test
and
add
or
add
inc
add
xchg
xchg
add
or
add
add
loopne
data16
add
inc
adc
pusha
inc
add
push
or
nop
add
add
and
and
and
push
mov
movs
add
dec
add
and
or
add
or
add
or
add
sub
mov
int3
or
sub
add
adc
add
add
adc
pop
and
add
add
add
test
and
mov
sbb
pop
sbb
rol
dec
add
inc
retf
and
add
mov
sub
rol
cmp
add
add
inc
add
mov
popa
cmp
and
or
cwde
dec
push
rol
or
sbb
fs
add
push
or
xchg
add
sub
inc
adc
dec
or
add
inc
inc
and
and
dec
adc
dec
add
pop
and
adc
and
adc
add
add
inc
xchg
add
inc
loopne
inc
adc
adc
adc
sub
inc
js
add
add
mov
inc
and
add
rol
inc
or
js
mov
xor
add
test
add
add
add
mov
fadd
add
rol
lock
dec
or
add
inc
add
sbb
xchg
push
add
mov
mov
and
and
sub
add
and
pop
xor
adc
or
add
sub
inc
mov
add
inc
push
inc
add
movs
inc
xchg
add
inc
lds
add
add
add
xchg
sub
push
add
and
add
and
mov
add
add
es
mov
xchg
xor
dec
mov
pop
push
or
or
push
or
aam
lds
add
dec
adc
add
cmp
mov
push
inc
add
mov
cmp
int3
or
inc
add
add
add
sbb
push
movs
and
inc
mov
pusha
add
adc
inc
dec
adc
or
test
or
inc
or
cli
add
lea
and
or
or
and
add
fcom
inc
inc
add
inc
add
adc
mov
inc
rol
add
test
and
push
jo
sbb
add
stos
add
or
or
sbb
test
xor
popa
dec
and
inc
inc
mov
sub
test
add
inc
enter
and
push
mov
add
push
push
and
xor
adc
add
arpl
inc
sub
dec
add
sub
add
mov
push
sbb
int3
mov
add
add
and
fs
mov
adc
sub
and
dec
adc
and
or
and
push
dec
sti
and
add
and
inc
loopne
jo
or
add
add
or
mov
inc
push
pop
pusha
or
or
xor
add
jno
adc
inc
in
mov
pop
inc
int3
mov
je
add
inc
push
or
adc
add
lock
fs
loopne
add
dec
or
add
or
inc
and
cmp
les
add
and
inc
push
sub
inc
inc
add
add
push
add
or
push
or
adc
or
sbb
mov
adc
inc
inc
and
je
adc
add
sbb
add
push
inc
inc
adc
inc
add
push
add
adc
loopne
test
xchg
inc
inc
xor
add
inc
push
add
add
dec
sbb
add
add
call
add
add
and
inc
call
add
add
xor
mov
add
dec
add
add
add
shl
and
arpl
rol
mov
add
or
test
jecxz
shl
or
add
add
test
add
sub
adc
es
sbb
adc
add
sbb
inc
movs
dec
adc
add
pusha
add
add
or
test
inc
or
inc
inc
mov
xchg
add
pusha
or
les
test
add
add
add
add
add
xchg
mov
add
or
xor
or
mov
mov
cmp
add
add
ror
xor
dec
and
pusha
add
sub
push
add
test
pusha
dec
rol
sub
xor
xor
pusha
sub
lahf
inc
ror
xchg
pop
and
test
push
add
or
add
add
adc
dec
adc
add
push
or
scas
imul
add
test
or
test
adc
cmp
or
or
add
add
inc
or
xchg
test
add
adc
add
popa
and
sbb
add
and
add
xor
xor
add
push
inc
or
add
and
daa
adc
add
sbb
lea
push
adc
adc
and
or
add
add
mov
adc
add
inc
test
mov
test
add
add
add
or
dec
push
inc
add
mov
add
or
or
and
add
and
sub
add
dec
add
add
add
or
fld
add
mov
sbb
or
and
add
add
mov
inc
adc
nop
and
or
add
mov
push
adc
or
push
adc
add
add
add
lods
and
inc
push
rcl
dec
or
test
sub
and
rol
adc
ret
sub
xchg
dec
shl
adc
xchg
add
test
test
add
and
mov
nop
nop
adc
adc
add
add
add
or
or
push
bound
xor
or
inc
cwde
push
adc
mov
and
inc
rol
xchg
or
add
test
add
add
add
adc
add
adc
and
fs
add
and
and
or
add
or
lock
add
nop
and
add
push
sub
add
add
adc
add
add
sub
fisttp
pusha
and
and
add
enter
xchg
add
and
sub
sub
add
adc
sub
and
int3
inc
or
xchg
inc
add
adc
sbb
xor
or
add
ror
add
js
or
inc
sub
and
add
adc
ins
pusha
xchg
adc
push
or
inc
or
mov
test
ret
movs
add
sub
mov
and
or
add
add
test
sbb
nop
adc
xchg
or
add
adc
or
inc
inc
add
add
inc
add
mov
rcl
mov
add
inc
adc
sbb
or
test
add
sbb
add
fiadd
add
and
inc
rol
movs
sahf
add
movs
sub
or
sbb
add
add
enter
add
adc
add
or
xor
dec
and
jns
inc
adc
les
push
pop
add
dec
pop
add
dec
mov
add
enter
call
pop
add
xor
add
add
inc
pop
add
mov
pop
add
xchg
add
pop
add
jle
add
(bad)
pop
add
pop
pop
add
mov
add
add
add
adc
add
add
cmp
mov
add
pop
pop
add
jo
add
mov
add
stos
pop
add
dec
pop
add
cwde
pop
add
lods
pop
add
ret
add
pop
add
push
pop
add
add
add
pop
add
and
add
and
in
pop
add
add
add
push
pop
add
pop
pop
add
hlt
pop
add
call
add
add
add
pop
add
and
add
pop
add
pop
pop
add
out
pop
add
add
add
add
int3
pop
add
(bad)
pop
add
in
add
fs
add
ss
add
(bad)
pop
add
mov
add
pop
add
or
add
movs
pop
add
je
add
add
add
inc
pop
add
push
pop
add
cmp
add
add
add
inc
push
xor
cs
ins
add
add
inc
gs
popa
jb
outs
je
add
inc
outs
fs
imul
add
imul
outs
outs
ja
gs
popa
addr16
add
add
inc
gs
ins
addr16
je
ins
dec
outs
je
add
push
gs
ins
addr16
je
ins
dec
outs
je
add
dec
jae
imul
add
inc
gs
jns
je
ins
dec
gs
imul
push
imul
add
add
push
outs
fs
ins
addr16
je
ins
dec
gs
popa
addr16
add
add
je
outs
jb
addr16
jne
fs
imul
add
popa
bound
imul
add
push
imul
popa
jae
push
add
add
push
outs
fs
gs
popa
addr16
add
add
push
gs
imul
add
ins
outs
addr16
outs
js
popa
jb
ins
push
add
add
ins
ins
push
imul
inc
jb
popa
je
push
imul
push
add
add
outs
fs
imul
add
inc
gs
inc
add
add
push
imul
outs
arpl
add
add
imul
jae
addr16
add
add
inc
gs
gs
popa
addr16
add
add
je
jne
jae
jb
add
push
outs
jae
dec
gs
popa
addr16
add
add
push
gs
gs
jae
inc
inc
add
add
je
outs
jb
addr16
jne
fs
imul
add
je
jne
jae
jb
outs
jae
add
add
jae
push
jne
je
gs
popa
add
add
popa
jb
gs
push
add
add
jae
gs
push
popa
jb
ins
gs
jb
dec
outs
outs
push
add
add
je
ins
imul
je
add
push
gs
arpl
ins
ins
push
popa
outs
add
add
inc
imul
dec
gs
popa
addr16
add
add
dec
outs
popa
fs
je
imul
dec
outs
popa
fs
arpl
push
add
add
outs
jae
popa
je
dec
gs
popa
add
add
inc
gs
ins
addr16
je
ins
add
add
push
gs
arpl
ins
ins
push
outs
jae
add
add
jo
imul
inc
push
dec
inc
dec
xor
cs
ins
add
add
inc
gs
jns
je
ins
push
outs
ja
jb
je
je
jae
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
gs
imul
add
inc
gs
imul
je
add
add
ins
outs
jbe
inc
imul
jns
add
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
inc
jb
gs
imul
add
inc
gs
push
dec
outs
outs
add
add
fs
imul
add
add
inc
gs
jns
je
ins
push
imul
ins
gs
imul
gs
jne
jb
outs
je
jb
arpl
jae
add
add
imul
je
push
jb
imul
imul
add
je
inc
push
add
add
inc
gs
jb
jbe
je
push
jb
imul
push
add
add
gs
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
add
inc
ins
outs
bound
inc
ins
ins
outs
arpl
add
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
gs
jb
arpl
fs
jae
add
inc
inc
dec
xor
cs
ins
add
add
je
ins
je
add
add
je
je
arpl
bound
arpl
add
inc
gs
ins
imul
jns
movs
imul
or
cmps
(bad)
jbe
add
aaa
xchg
lock
xor
jbe
xchg
test
icebp
xchg
sbb
stos
and
mov
in
push
jbe
icebp
je
pop
sub
mov
stos
push
cmp
cmp
jge
bound
loope
in
movs
xchg
test
in
push
or
cdq
sbb
loopne
cmps
pop
sti
(bad)
ss
sbb
gs
je
jbe
out
jne
add
jge
or
mov
or
stc
gs
icebp
cmp
inc
push
syscall
mov
mov
mov
cwde
mov
jno
fs
pushf
jae
icebp
jl
jae
jne
inc
push
pop
and
mov
pop
mov
and
jge
or
mov
mov
mov
jmp
arpl
sbb
push
pusha
pop
xchg
call
mov
lock
out
lahf
ins
cmp
(bad)
adc
js
jl
jno
push
sti
pusha
sahf
adc
out
xlat
lock
jno
repnz
imul
(bad)
inc
push
lea
je
fs
inc
mov
mov
or
mov
je
jbe
out
adc
lods
cld
lods
sbb
pusha
pop
loope
rol
jae
mov
mov
pushf
lods
xchg
jb
sbb
rcl
not
cmps
aaa
or
mov
jnp
sahf
mov
xor
shl
div
mov
hlt
jo
test
jb
stos
lock
cld
lods
jecxz
test
cld
rep
icebp
out
gs
fild
sbb
mov
dec
data16
cmp
stos
sub
xor
mov
mov
lock
mov
push
sub
push
movs
gs
or
mov
sbb
inc
push
movs
gs
add
mov
fwait
in
inc
push
movs
gs
sbb
push
mov
js
inc
stos
push
jo
push
or
pop
mul
scas
pop
aam
inc
sub
lahf
jbe
fwait
cmps
push
pop
or
jle
jnp
popf
add
inc
outs
je
and
addr16
cwde
add
pusha
sub
inc
out
sahf
sti
outs
in
pop
adc
add
sub
retf
lahf
mov
rol
push
popf
sbb
mov
xchg
(bad)
sbb
push
pushf
mov
aad
imul
mov
inc
push
icebp
in
clc
mov
stos
sub
push
jmp
arpl
inc
adc
mov
icebp
scas
call
movs
nop
test
hlt
jbe
mov
jae
xchg
adc
cwde
jno
cwde
push
(bad)
xchg
mov
mov
shl
repz
test
(bad)
in
enter
xor
ins
test
jbe
mov
icebp
je
mov
idiv
push
cmc
test
xchg
out
adc
adc
add
xchg
jae
sbb
xchg
jge
sar
xchg
push
cmc
ins
sub
mov
mov
pop
adc
repnz
mov
dec
jbe
out
jno
adc
jbe
push
aas
mov
push
xlat
out
xlat
(bad)
repz
icebp
adc
push
jbe
mov
(bad)
push
mov
jp
cmps
mov
test
test
jno
shl
cmps
pop
or
mov
std
xchg
jbe
out
sub
outs
in
dec
and
cmps
mov
and
je
inc
sbb
cmps
pop
or
ins
fist
(bad)
idiv
mov
cmps
test
fnstenv
mov
jne
(bad)
jno
mov
jmp
inc
push
movs
add
out
sub
mov
fidiv
and
hlt
mov
or
stc
or
popa
cmp
pushf
cmp
dec
pop
je
dec
or
mov
cmp
pop
jl
cmc
push
sbb
je
inc
push
movs
add
out
sub
push
loope
lea
jbe
icebp
or
into
adc
jno
stos
or
call
(bad)
stc
nop
out
sahf
mov
pop
or
inc
adc
sub
movs
mov
push
and
movs
(bad)
stos
or
jmp
ins
bound
pop
or
stos
dec
xchg
jo
mov
std
push
pop
fldcw
add
aam
or
jo
jmp
arpl
sub
repnz
sbb
hlt
in
pop
cmps
adc
pushf
out
outs
stos
sbb
jo
sbb
lods
pop
jae
add
cmp
popf
push
and
popf
pop
and
popa
mov
bound
es
mov
dec
je
pop
jmp
bound
push
movs
popa
cmp
mov
ins
jmp
cmc
ret
(bad)
setbe
lahf
mov
mov
dec
rcl
adc
push
lahf
pushf
lods
div
out
mov
adc
neg
push
hlt
cmps
inc
into
shl
inc
sbb
or
mov
data16
dec
fidiv
mov
sbb
mov
mov
mov
je
stos
sbb
mov
loope
jmp
mul
push
and
sub
mov
je
mov
xor
mov
jbe
div
icebp
jb
pop
adc
popa
stos
js
jbe
aaa
jne
push
loope
(bad)
dec
push
movs
popa
(bad)
jbe
div
sbb
pusha
push
sbb
jno
ins
jl
pushf
mov
inc
push
lahf
mov
mov
jmp
arpl
pop
in
sbb
fs
lock
out
sbb
mov
mov
leave
fs
mov
addr16
pop
jne
mov
jp
jbe
icebp
push
clc
xor
icebp
dec
mov
je
jbe
icebp
jl
xchg
shl
dec
push
movs
in
pop
inc
mov
xor
dec
add
lock
lods
imul
xchg
mov
repz
test
enter
mov
push
es
inc
hlt
cmp
cld
ins
ins
mov
repz
xchg
adc
repz
in
lock
mov
test
pushf
hlt
aam
sbb
push
pop
mov
mov
dec
mov
mov
dec
test
pop
int3
cmp
mov
cmp
nop
ret
inc
rcl
imul
jno
xchg
pop
arpl
xor
gs
daa
dec
enter
das
jb
test
pop
dec
lahf
std
int3
es
aas
and
pop
icebp
adc
dec
push
movs
mov
inc
xor
js
cmps
scas
add
push
jmp
push
add
mov
add
mov
ins
push
mov
addr16
push
hlt
fidivr
sub
push
mov
push
mov
push
cmp
add
(bad)
imul
lods
pop
pop
lods
(bad)
movs
pop
add
pop
push
push
fidivr
push
int3
stc
icebp
or
cdq
xor
mov
jno
data16
data16
shl
int
and
jmp
mov
jo
or
aad
mov
and
sub
cmp
in
test
popf
mov
mov
and
and
in
mov
imul
aam
(bad)
imul
jge
scas
sbb
adc
retf
retf
bound
out
inc
inc
adc
push
push
pop
stc
pop
shl
jbe
(bad)
lock
xor
xor
and
mov
ja
cmp
popa
pop
sbb
test
sbb
cmp
icebp
(bad)
push
pushf
mov
inc
lods
mov
push
pop
adc
and
cwde
sub
sti
movs
rol
cmp
jmp
movs
pop
retf
fdivr
loop
cs
and
pop
addr16
cwde
pop
xor
nop
jne
and
call
scas
sub
popf
jp
int
ret
mov
jl
stos
sbb
cli
icebp
mov
sbb
addr16
add
rol
not
mov
(bad)
adc
scas
pop
xlat
mov
sub
mov
ret
icebp
cwde
jecxz
cwde
jbe
inc
jmp
shr
popf
mov
inc
call
lods
mov
ja
and
dec
pop
les
cmp
cmp
jl
xor
mov
jb
gs
lds
or
fadd
mov
enter
jns
fnstcw
and
xchg
mov
mov
clc
addps
movs
retf
movs
add
cli
imul
push
push
add
pop
xchg
int3
mov
push
jge
sub
retf
mov
div
xchg
sar
sbb
in
ja
int
push
fnstcw
movs
(bad)
jmp
fdiv
mov
jne
mov
lock
cwde
out
fcmovbe
xor
dec
cmps
leave
data16
aam
fdiv
mov
cmc
je
ss
dec
outs
pop
mov
xor
sub
lods
mov
mov
adc
call
out
jno
or
lds
jmp
jcxz
les
dec
jne
jge
mov
sub
adc
je
or
jns
bound
jbe
xor
adc
out
push
fsubr
push
call
push
pop
mov
sbb
and
icebp
bound
rcl
mov
call
fnsave
jne
(bad)
ins
test
movs
je
pusha
movs
or
in
inc
test
sbb
jnp
into
nop
ja
es
inc
std
das
adc
cmp
jnp
pushf
jge
sahf
jle
and
push
es
sub
inc
scas
je
adc
lods
jbe
ds
xlat
jno
outs
mov
mov
sahf
int3
in
bound
sub
xor
mov
mov
not
sar
sbb
jbe
or
shr
push
jmp
mov
(bad)
and
and
jg
sbb
mov
and
and
mov
or
popa
mov
mov
(bad)
fst
fwait
jb
and
ins
xchg
lods
jge
lock
ret
ja
push
stos
inc
mov
xor
in
arpl
(bad)
sbb
addr16
xor
jl
dec
xor
cmp
cwde
pop
mov
sub
fdivrp
test
dec
inc
and
loop
in
fnstenv
test
mov
sbb
das
aam
and
out
mov
push
lea
leave
mov
inc
push
jg
outs
ret
ja
test
out
and
adc
enter
xor
cmc
pop
add
sbb
mov
jge
pop
and
push
pop
mov
fsubr
dec
imul
gs
cmp
cmp
adc
and
dec
icebp
adc
inc
xor
mov
pusha
aam
push
icebp
pop
or
jge
xchg
retf
aad
loop
pop
xchg
lods
sbb
icebp
adc
inc
cld
xor
pop
sub
jnp
popf
inc
cmps
jne
lock
push
mov
sub
imul
push
push
mov
jmp
mov
or
repz
ja
iret
and
daa
and
jae
aas
(bad)
out
mov
push
(bad)
rol
sbb
or
pop
lds
jb
cmp
push
mov
pop
ins
scas
dec
adc
fnstcw
clc
xchg
mov
sub
popf
cwde
mov
mov
shr
movs
xchg
sbb
idiv
rcl
lea
cdq
mov
in
scas
push
cmp
scas
and
loopne
stos
test
pop
mov
mov
mov
and
xchg
inc
adc
dec
out
not
je
fdiv
into
inc
in
lods
sub
shl
cli
or
xchg
cmp
inc
je
mov
rcl
cmps
inc
jae
cmp
add
push
jmp
cli
lahf
cmp
loop
mov
sahf
jmp
xor
je
jns
les
stos
push
or
mov
pusha
lds
pop
je
and
jge
je
jmp
mov
fdiv
dec
ja
jg
sbb
test
dec
pop
cld
jge
dec
sub
jbe
mov
inc
mov
lods
add
xchg
aas
push
rcr
lock
pop
sahf
je
fmul
outs
call
adc
int
hlt
push
inc
bound
mov
in
fistp
add
int3
loop
jne
mov
inc
jge
jns
sti
cdq
jo
ret
lds
jle
sbb
je
les
xchg
neg
(bad)
mov
mov
and
loop
scas
inc
adc
mov
pop
mov
(bad)
out
sahf
sbb
imul
jae
and
in
imul
sti
mul
arpl
jns
div
mov
push
bound
mov
aad
ss
jbe
add
mov
test
mov
push
and
test
pop
(bad)
mov
jne
adc
je
fidiv
mov
adc
ja
add
scas
popf
ss
push
adc
mov
icebp
mov
sti
jecxz
int3
xor
mov
out
pusha
(bad)
sbb
mov
sbb
mov
es
pop
fs
pop
fmul
jne
or
call
ja
mov
add
outs
fnstenv
mov
stc
inc
push
pushf
jg
cs
and
push
lock
mov
dec
xor
repz
dec
xor
add
lods
adc
data16
sub
lock
xchg
push
mov
je
aam
cmps
ja
push
mov
addr16
cmps
js
cmp
sub
(bad)
jmp
test
fs
pop
pop
loope
ficom
fmul
sbb
or
xor
and
mov
loope
pop
mov
out
mov
(bad)
ret
ror
(bad)
out
jp
seta
mov
lock
fnstsw
add
fdivr
mov
xchg
jae
lahf
shr
lock
call
pop
fnsave
jb
je
shl
jbe
jecxz
adc
pop
mov
fnstenv
push
scas
jmp
jp
push
jne
fsubr
ja
pop
or
or
or
ror
lea
pop
adc
push
int3
int3
xchg
test
fistp
jle
dec
mov
es
mov
mov
push
pop
pop
es
and
sti
jle
cmc
jbe
mov
add
ret
mov
sbb
mov
cmp
cmp
inc
movs
outs
imul
add
push
(bad)
jp
jnp
and
jne
cmp
shr
and
jbe
fwait
sbb
shr
cmp
retf
jg
mov
cmp
test
mov
fiadd
pop
pop
jmp
mov
pop
stos
push
pop
jmp
add
jbe
popa
outs
mov
xchg
arpl
arpl
imul
add
cmp
enter
xor
dec
out
xor
cmp
ror
xchg
jp
jge
aaa
(bad)
(bad)
and
mov
fnstenv
or
cmc
call
sbb
xor
add
lods
or
jp
push
mov
ja
dec
cmp
jnp
and
je
je
in
pushf
out
mov
inc
jns
jb
int
shl
mov
nop
pop
mov
icebp
or
sbb
retf
pop
iret
sub
mov
(bad)
icebp
mov
popa
push
push
dec
nop
adc
mov
outs
add
add
mov
add
cdq
je
xchg
dec
cmps
hlt
pop
test
mov
call
ret
iret
mov
in
int
pop
pop
jne
leave
int3
jo
push
mov
inc
mov
fst
cmps
test
lock
mov
and
movs
out
js
fwait
arpl
rcl
mov
nop
push
je
cmp
ja
cmp
xor
mov
lock
inc
and
xor
mov
mov
jmp
(bad)
into
sti
dec
enter
jle
dec
cdq
(bad)
inc
adc
ja
dec
xor
cmp
mov
mov
aad
fcom
jmp
mov
(bad)
div
retf
mov
lods
call
adc
in
cmp
inc
cmps
push
fwait
cmps
shl
mov
jo
jmp
in
jb
mov
xchg
aad
imul
mov
pop
jmp
dec
mov
cwde
movs
add
mov
or
adc
nop
adc
dec
das
arpl
lds
mov
lock
mov
sbb
data16
inc
je
sbb
jo
adc
xchg
addr16
xor
in
(bad)
or
into
fldcw
call
xchg
sbb
or
mov
mov
jmp
js
dec
jmp
pop
hlt
xor
lock
jo
sub
loopne
pushf
je
or
popa
ja
cdq
sbb
(bad)
pop
lahf
lods
mov
sbb
or
dec
sub
mov
cmps
sub
mov
pusha
arpl
lock
repz
je
pop
in
jle
shl
mov
out
push
cmp
mov
jnp
icebp
in
xor
sbb
xchg
(bad)
call
in
sbb
add
xchg
or
mov
jns
jne
sahf
icebp
cmc
dec
test
mov
cli
xchg
push
mov
je
int
dec
push
jo
mov
int3
adc
sub
mov
cmps
ja
adc
xor
jae
std
sub
push
fisubr
out
mov
int3
sbb
imul
mov
jbe
icebp
jle
fdivr
ror
fdiv
push
movs
or
ds
dec
mov
push
mov
(bad)
rcl
pop
xchg
xor
mov
hlt
add
cmp
test
mov
inc
sub
jbe
mov
adc
dec
sub
int
jns
and
stos
cmp
mov
or
cmps
xlat
jecxz
mov
out
fs
aam
cmp
xchg
cmc
icebp
xchg
jl
mov
mov
push
jne
adc
sub
mov
xor
push
stc
lods
add
out
(bad)
xchg
cmc
sub
pop
xchg
pop
mov
push
in
mov
shl
mov
pop
xchg
ret
adc
xchg
int3
push
lock
fidiv
sar
ja
cmovs
push
or
jb
mov
jmp
(bad)
cs
sbb
cld
cmp
repz
pop
inc
jns
sub
cs
ja
sti
in
std
or
push
sti
aaa
je
into
sub
ja
jne
das
cmps
and
or
mov
shl
cwde
(bad)
xor
xchg
dec
mov
ret
aas
icebp
mov
pop
shl
das
div
(bad)
je
xor
sbb
sub
mov
add
and
jae
sti
push
mov
adc
jne
in
imul
dec
jmp
cmp
test
sbb
xor
mov
fcomp
int
push
adc
xchg
retf
push
cmp
xor
pop
arpl
jno
add
gs
dec
mov
in
add
lods
and
mov
lock
imul
shl
mov
push
pushaw
out
adc
lock
leave
or
loopne
and
and
pushf
(bad)
stc
sbb
out
and
outs
pop
test
cdq
adc
scas
mov
dec
adc
jae
jne
and
(bad)
loope
mov
mov
enter
mov
mov
dec
and
mov
mov
push
push
sbb
xchg
imul
sahf
jbe
push
mov
imul
lds
fidiv
lds
inc
mov
mov
in
lock
test
mov
mov
jbe
dec
ja
sbb
enter
ins
inc
pop
in
push
sbb
jo
cdq
jno
mov
lods
sbb
sbb
xchg
jne
mov
sbb
pop
sbb
neg
mov
cs
or
sahf
int
mov
hlt
movs
sbb
mov
inc
aad
mov
xor
mov
jle
jge
adc
mov
pop
in
jnp
xchg
mov
mov
or
lds
repnz
sbb
(bad)
cwde
sbb
add
jns
aam
cmp
repnz
mov
sub
(bad)
jae
adc
in
ja
out
daa
addr16
jbe
shl
mov
add
cmp
(bad)
cmc
fcmovnu
push
stos
je
stc
and
push
into
enter
daa
push
jne
arpl
or
aaa
in
call
je
mov
pop
cli
cwde
add
push
jne
nop
bnd
cld
add
fs
xor
retf
test
retf
add
adc
sbb
nop
mov
outs
fwait
inc
ja
stc
test
sbb
or
mov
outs
mov
inc
icebp
add
lahf
in
lods
out
push
test
mov
jmp
jbe
jl
push
xchg
mov
std
fimul
je
jno
call
jbe
xor
mov
rcr
or
(bad)
adc
outs
mov
shl
ins
dec
sar
jbe
mov
jle
xchg
push
in
retw
dec
lods
lea
xchg
fnsave
test
ss
sub
jnp
int
movs
push
jne
add
out
jbe
sbb
add
std
sbb
icebp
lock
cmp
mov
xlat
shr
je
test
aam
jne
mov
xor
and
jne
neg
xor
enter
add
lods
add
movs
or
dec
jo
xor
dec
in
out
push
ret
sub
in
sbb
imul
pusha
jae
mov
js
imul
sbb
pop
imul
pop
inc
mov
pop
sub
sbb
in
sub
dec
sbb
ss
jne
and
ss
xor
push
imul
and
jo
pop
aas
ja
pushf
sti
jae
(bad)
outs
pop
xchg
or
ins
pop
je
mov
xchg
(bad)
pushf
(bad)
cmp
and
fistp
mov
icebp
lahf
sub
loopne
imul
test
dec
fucomip
sbb
pop
jne
test
inc
push
ds
push
repz
pop
aas
mov
cmps
mov
shr
adc
mov
mov
call
mov
push
push
scas
and
mov
mov
or
(bad)
popf
or
stos
scas
fdivr
pop
dec
leave
jbe
lods
adc
mov
adc
pop
outs
push
sub
sar
stc
dec
stc
cmp
test
out
xchg
out
or
mov
ror
ret
(bad)
fs
and
and
daa
xor
xchg
and
dec
shl
push
mov
and
jbe
inc
push
inc
movs
push
dec
adc
fist
mov
ss
scas
cmp
xor
sub
dec
dec
fisttp
bound
les
lods
lahf
mov
jae
mul
and
(bad)
mov
jbe
(bad)
(bad)
icebp
test
xor
pop
mov
test
add
dec
mov
add
sub
int3
jbe
popa
push
sbb
cwde
xor
jge
faddp
dec
je
test
(bad)
shl
lods
fnstcw
fs
mov
xchg
sub
pop
aad
and
and
xor
adc
sbb
adc
jmp
mov
jge
xchg
icebp
mov
add
retf
loope
dec
mov
ss
aaa
and
xlat
fadd
sbb
out
push
outs
pop
retf
lock
add
dec
and
xchg
test
(bad)
mov
cmp
in
(bad)
clc
pop
retf
stos
je
popf
test
or
(bad)
mov
test
sahf
cmp
stos
ds
idiv
in
and
lock
cli
jmp
scas
jo
and
in
sahf
adc
push
dec
xor
cmp
xchg
(bad)
and
js
push
imul
mov
pop
jo
fsubrp
push
jmp
sub
fnstenv
add
out
jle
stc
lods
jmp
jae
enter
shl
aaa
das
ret
sub
(bad)
mov
bound
stos
fcmovnbe
ja
mov
mov
push
cmps
mov
mov
xor
mov
ja
xchg
retf
loope
inc
repz
shr
jns
xchg
lods
ins
in
mov
mov
(bad)
frstor
pop
xor
push
cmp
lods
xor
retf
test
addr16
stos
std
jne
das
jns
jbe
icebp
sbb
and
inc
cs
adc
out
inc
pop
or
dec
(bad)
mov
lock
and
inc
out
rol
or
and
rol
lock
je
movs
adc
lea
stos
xor
je
frstorw
mov
fcmovnu
popa
das
pop
imul
jne
daa
add
or
and
add
clc
adc
sub
pusha
ja
sahf
cmp
movs
shl
sti
popf
and
and
pop
xor
dec
enter
cmp
test
jno
and
div
lahf
xchg
fisubr
adc
lods
or
add
mov
movs
sbb
pop
mov
cdq
data16
retf
sub
arpl
lea
mov
std
add
jle
jne
push
xor
jbe
mov
mov
pusha
shl
dec
xchg
stos
sub
inc
sbb
xor
pusha
sub
push
dec
ret
jl
mov
ja
or
inc
mov
pop
in
(bad)
cmp
adc
sbb
not
add
xor
cmp
adc
add
cvttps2pi
shl
shld
xchg
pop
mov
sub
ja
loopne
scas
pop
or
stos
jp
fild
and
jbe
add
(bad)
jno
out
das
inc
jmp
aas
test
repnz
stos
ret
mov
clc
ss
pop
mov
mov
pop
sub
mov
arpl
or
jo
jp
add
(bad)
stos
mov
ja
sar
leave
cdq
and
imul
test
data16
out
xchg
cmps
push
xor
add
adc
push
mov
and
jmp
div
or
jb
aaa
adc
popf
repnz
mov
jmp
into
adc
scas
(bad)
lock
sbb
das
mov
mov
je
and
mov
jmp
hlt
add
xchg
inc
push
dec
scas
add
hlt
pop
cs
dec
loopne
fs
jb
mov
test
mov
adc
inc
pop
ja
sbb
xchg
std
rcl
dec
daa
lock
jbe
out
les
push
das
in
add
sbb
push
loop
jne
ss
jo
std
pushf
cwde
sbb
xor
int
movs
ja
push
test
iret
dec
jmp
icebp
ja
and
mov
push
movs
bound
or
pop
xchg
mov
inc
mov
add
cli
ror
mov
jne
loopne
mov
lock
rcl
jbe
add
pop
(bad)
jp
pop
push
imul
repz
fcmovnb
adc
and
popa
jns
rol
pop
test
push
lea
and
outs
jmp
mov
cdq
repnz
call
sbb
mov
dec
push
rol
and
mov
mov
inc
pop
mov
xchg
fucomi
xor
sbb
or
push
ja
in
(bad)
outs
into
cwde
add
js
fiadd
xchg
mov
cli
push
movs
xor
jo
ja
pop
sbb
mov
mov
mov
lea
hlt
icebp
and
adc
aam
hlt
mov
or
xchg
imul
mov
xchg
and
or
dec
push
mov
std
mov
pop
sbb
mov
ret
jno
fstp
outs
mov
icebp
data16
or
cmp
je
retf
jo
test
or
adc
push
jge
jne
es
mov
(bad)
js
or
pop
or
mov
out
sbb
pop
ficomp
mov
ror
pushf
aaa
fdiv
add
cmps
call
mov
push
sbb
adc
jns
movs
ret
fsub
jns
push
ins
mov
(bad)
push
sub
add
xchg
push
sub
mov
xchg
or
(bad)
add
add
mov
cld
sbb
push
xchg
aam
mov
push
outs
jbe
scas
xor
jnp
mov
mov
int3
xchg
movs
repnz
daa
outs
jne
out
mov
pop
xor
icebp
popf
mov
add
cmp
hlt
xchg
lock
pop
into
cdq
xchg
fucomp
leave
lods
mov
rcr
mov
mov
push
imul
inc
pop
cld
mov
cs
adc
daa
add
mov
dec
xchg
mov
jge
jns
dec
sub
xor
push
mov
jbe
popf
sub
mov
pop
inc
jne
sub
mov
dec
add
mov
pop
loop
scas
es
xchg
outs
lock
jp
jecxz
jge
out
inc
xchg
je
mov
test
cmp
aam
sar
inc
dec
adc
push
lock
xor
rol
xchg
jo
ins
cmp
xchg
loopne
mov
(bad)
(bad)
cmp
sbb
push
ins
ret
test
and
stos
push
gs
lahf
addr16
aas
push
jbe
jns
rcl
mov
xchg
push
mov
enter
(bad)
pop
push
push
je
and
je
lock
xlat
mov
enter
outs
or
imul
pop
cmps
dec
scas
aaa
push
ins
lods
cs
or
pop
ret
lock
adc
pop
dec
fs
jbe
mov
push
xor
inc
push
fwait
adc
mov
sbb
cmp
mul
aam
xor
mov
into
xchg
repz
ss
jbe
and
arpl
adc
mov
loop
into
push
loope
nop
xchg
mov
ret
mov
push
xchg
shl
push
push
jg
ret
mov
in
mov
jge
jp
jbe
rcr
xchg
loope
mov
push
xchg
and
out
lods
mov
pop
mov
(bad)
loopne
cwde
retf
sahf
shl
icebp
std
stc
xor
jp
sub
xchg
jne
cmps
push
(bad)
cmps
mov
imul
sbb
ret
retf
or
popa
sub
mov
cwde
imul
pop
daa
dec
cmps
call
sbb
sbb
xor
lods
lea
inc
int
push
pop
addr16
add
sub
lds
out
add
mov
pop
pushf
je
sbb
outs
int3
(bad)
iret
(bad)
mov
mov
fs
outs
jbe
daa
test
mov
cmp
or
ss
fcomp
fs
js
stos
das
ds
sbb
pop
ja
repnz
jmp
mov
daa
xchg
repz
shl
jbe
inc
mov
lock
stc
clc
sub
loopne
fiadd
or
jmp
bound
(bad)
ds
push
xor
pop
je
cdq
pop
xor
add
leave
mov
mov
mov
loope
jbe
add
sub
sub
inc
dec
cmps
dec
repz
iret
xchg
and
fisttp
stos
icebp
ficomp
sub
and
pop
(bad)
scas
aad
lods
pop
pop
lock
or
push
xor
out
(bad)
or
xor
mov
mov
mov
mov
xchg
push
out
pop
sub
int3
repnz
loopne
test
stc
cmp
mov
xchg
adc
and
push
lock
inc
test
retf
adc
cmp
scas
gs
mov
popa
mov
mov
iret
add
mov
ja
outs
shr
ja
or
lock
movs
jecxz
scas
jns
cmp
inc
enter
call
mov
nop
lods
inc
sub
dec
inc
lods
je
adc
call
shl
add
lock
out
mov
test
pop
or
fcomp
inc
daa
push
jecxz
mov
mov
adc
int
push
xor
jnp
mov
fistp
push
xor
mov
cli
cmp
jbe
push
adc
jbe
ja
retf
fnsave
les
mov
enter
retf
push
in
out
(bad)
icebp
xor
je
cmp
es
ja
fs
or
out
enter
xlat
sub
or
adc
jbe
cwde
adc
sahf
xor
(bad)
jbe
lds
mov
ret
and
shl
sub
sub
or
ja
and
mov
mov
out
mov
pusha
dec
mov
mov
repnz
jg
fnstenv
jns
ret
jle
xchg
icebp
inc
add
sbb
std
mov
je
pop
sahf
add
imul
(bad)
les
pop
cmp
xchg
idiv
adc
es
push
jbe
je
cmp
push
xchg
cli
mov
sbb
xlat
jbe
dec
xor
xchg
js
mov
test
xchg
loop
mov
mov
pop
mov
gs
jmp
hlt
and
or
sub
cmp
mov
fcomip
xchg
mov
xchg
mov
xchg
sbb
sbb
(bad)
in
dec
sbb
mov
mov
jne
mov
cmp
jns
push
pop
mov
leave
ins
pop
xchg
je
cmp
mov
outs
push
cmps
mov
daa
popa
push
out
jbe
fnsave
adc
in
inc
mov
mov
xor
xchg
and
hlt
adc
test
shl
push
scas
mov
scas
call
jne
imul
or
add
adc
adc
nop
hlt
adc
jne
push
dec
push
ja
ret
aas
mov
mov
jg
jae
add
das
jne
fwait
loope
jecxz
fld
mov
fisttp
aad
inc
push
ret
mov
aas
adc
icebp
test
push
inc
xor
(bad)
xor
jbe
fld
scas
sub
pushf
and
jmp
call
addr16
int3
add
or
cmp
mov
ret
pop
inc
gs
inc
inc
in
out
dec
jno
lahf
xchg
out
jne
jbe
movs
ja
(bad)
dec
xor
jge
xchg
jne
(bad)
stos
lods
aaa
mov
ja
sbb
and
pop
pop
(bad)
arpl
jbe
xor
outs
test
test
mov
cmp
push
pcmpgtb
sbb
jp
(bad)
and
mov
aam
les
pop
push
int3
nop
jno
sub
pop
(bad)
mov
enter
xlat
and
ja
adc
inc
and
cld
xor
jne
push
psubusb
and
cwde
scas
mov
and
cmp
xchg
mov
xor
arpl
shl
test
sub
mov
xor
mov
inc
sahf
or
jmp
adc
pop
jo
and
jmp
jle
rol
jp
icebp
mov
ret
stc
mov
pop
jl
or
cli
xchg
bound
hlt
inc
xchg
sub
sbb
cli
ss
sub
pusha
lock
cli
retf
jmp
push
pusha
xchg
pop
aam
mov
aas
jbe
sahf
imul
or
mov
loopne
sub
xchg
dec
iret
in
icebp
loopne
jbe
repz
test
xchg
bnd
icebp
mov
das
mov
pop
jmp
adc
into
mov
sti
movs
push
test
fst
mov
pusha
push
fldcw
lock
adc
test
loope
je
adc
adc
xchg
xor
xor
jno
sub
jne
sub
cwde
cmp
mov
xchg
into
inc
mov
loop
out
jo
mov
add
cmps
xlat
cmp
push
into
pop
sti
outs
add
or
icebp
push
addr16
aas
fs
(bad)
jo
icebp
add
div
push
inc
cwde
cmp
push
jae
sbb
data16
out
mov
push
dec
sub
dec
cmc
ja
or
inc
xor
arpl
stos
inc
mov
dec
aaa
jno
sbb
shl
add
inc
adc
je
nop
pop
mov
out
loope
pop
sub
or
mov
ins
rcr
xchg
jl
inc
sbb
outs
test
jno
dec
pop
xchg
data16
mov
stos
inc
sub
repz
jne
stos
mov
scas
in
cmps
xchg
cmps
je
rol
cdq
push
jns
adc
std
mov
loop
fstp
inc
dec
out
clc
or
ret
xlat
rol
push
ret
lods
mov
arpl
aam
or
push
cmp
test
dec
adc
push
call
mov
mov
mov
xchg
jo
fadd
je
cdq
cmp
jbe
push
test
push
add
ds
data16
adc
and
mov
sar
dec
jno
ret
pop
xor
dec
jne
js
mov
jle
or
xor
add
mov
(bad)
rcr
xor
aaa
inc
loop
adc
xor
inc
push
push
cmc
jbe
xchg
retf
dec
gs
(bad)
in
lds
and
icebp
mov
int
xlat
in
adc
cmp
dec
pop
test
xchg
jmp
hlt
loope
cli
xchg
inc
outs
ffree
mov
xor
mov
shl
inc
pop
sbb
mov
dec
in
mov
setge
lea
ja
adc
ret
lock
rcl
outs
xor
je
inc
jl
jbe
cmp
push
push
sar
xchg
pop
mov
hlt
sbb
shl
or
sbb
das
rcl
jbe
mov
mov
mov
push
push
fcmovnu
inc
mov
mov
pop
icebp
inc
imul
cmp
inc
push
jne
mov
lods
sbb
push
inc
push
lods
adc
mov
and
repz
xor
cmps
mov
pusha
pushf
icebp
adc
sti
loopne
xchg
jmp
sbb
stc
jbe
sbb
mov
cmp
fmul
stos
sbb
xchg
mov
call
ins
pop
test
jbe
cld
pop
jp
dec
pop
cmp
inc
inc
fdiv
outs
in
jbe
out
in
adc
fidiv
nop
lods
mov
mov
sbb
in
lock
retf
mov
mov
lock
out
ret
mov
int3
or
cmp
icebp
mov
pop
pop
std
aas
in
addr16
pop
cmp
sub
cmc
jbe
bound
xor
stos
jbe
mov
lods
xchg
imul
push
lods
mov
aaa
js
das
lock
movs
ds
mov
add
pop
mov
xchg
lds
ret
(bad)
xchg
mov
int
lods
repz
push
sub
div
mov
rol
ja
xchg
or
mov
in
xor
sub
mov
pusha
mov
mov
lahf
add
jb
sbb
mov
aas
sbb
imul
jecxz
fisttp
lods
jbe
sbb
sub
data16
pop
sahf
sub
js
fucom
in
mov
jmp
or
push
pop
xchg
push
pop
call
clc
bound
adc
cwde
mov
in
call
add
jo
cmp
js
cld
in
icebp
fadd
jne
mov
jp
mov
jg
cmc
and
iret
dec
repz
fld
fstp
mov
iret
sbb
sbb
out
push
cmps
imul
lds
movs
int3
mov
out
movs
int
imul
mov
jg
cld
jle
mov
sar
(bad)
sbb
mov
add
or
test
inc
mov
loop
fistp
cdq
sbb
xor
push
sti
xchg
je
sbb
(bad)
lock
mov
shr
xor
mov
push
movs
aaa
push
jne
(bad)
push
jnp
js
xchg
shl
cli
pop
je
ror
jne
push
mov
mov
pop
or
popf
std
push
sub
jmp
adc
or
jmp
jle
icebp
jae
dec
in
and
pop
mov
imul
cwde
jbe
and
in
call
cmps
in
std
jns
repnz
ret
jb
add
xor
cmp
mov
and
cmp
sbb
sub
div
or
test
ss
iret
push
aad
xchg
add
daa
inc
int
adc
sbb
aaa
and
aaa
test
(bad)
jno
jmp
test
fidiv
sbb
jbe
daa
mov
fs
jge
stos
sahf
lock
xor
into
iret
mov
imul
inc
arpl
mov
adc
mov
xchg
or
mov
lds
inc
jns
mov
mov
or
int
mov
mov
xor
mov
scas
xchg
loope
pop
iret
mov
mov
or
mov
(bad)
out
and
pop
leave
push
inc
or
lods
pop
retf
jb
fwait
imul
movs
inc
not
(bad)
mov
(bad)
mov
push
ja
inc
pushf
fwait
pop
ja
jmp
pop
(bad)
xchg
ins
(bad)
mov
xchg
add
mov
mov
add
mov
ja
dec
fisub
xor
and
cmp
pop
inc
pop
push
jmp
clc
jbe
and
inc
ret
xchg
test
mov
add
(bad)
jbe
jp
pop
cmp
dec
inc
aaa
jl
addr16
icebp
cs
or
in
mov
pop
pop
nop
mov
shl
pop
hlt
leave
or
xchg
mov
jo
and
in
lock
cs
cmp
inc
fnstsw
je
jmp
push
mov
in
test
xlat
outs
je
sar
jb
dec
dec
jg
mov
adc
add
retf
add
out
mov
retf
xchg
fld
cmp
loop
inc
mov
inc
sahf
fisttp
(bad)
mov
jb
nop
stos
cmp
push
jge
cmp
inc
mov
ss
adc
ja
in
aam
in
inc
bsf
out
xchg
sub
pop
lock
sub
pop
mov
je
dec
dec
ja
fstp
mov
jmp
push
jae
push
jne
xor
mov
lods
push
inc
push
je
jmp
jns
inc
push
and
cmp
xchg
ds
add
je
and
mov
imul
and
je
jne
mov
fwait
pop
aam
xchg
and
inc
out
cmc
mov
cmp
test
loope
dec
mov
sbb
imul
add
nop
cmp
icebp
or
add
xchg
or
push
adc
mov
lods
inc
mov
bound
xor
les
lds
jp
fadd
cdq
dec
cmc
mov
mov
das
hlt
dec
pop
je
jp
mov
sbb
jmp
push
ins
cmp
and
add
jbe
xchg
add
mov
inc
call
sti
jg
sbb
fldenv
add
enter
push
cmp
lock
cmp
out
inc
jmp
sbb
inc
add
cmc
mov
lock
cmp
mov
adc
stc
out
or
loopne
jno
sbb
mov
sti
fsubrp
and
hlt
cmp
pusha
fldcw
dec
call
xchg
mov
push
pushf
push
(bad)
fstp
popa
sub
cmp
adc
dec
and
or
lahf
ja
cmp
shr
loopne
jmp
pop
les
stos
es
jbe
cmps
xor
xchg
pop
mov
in
bound
iret
lock
cmp
jb
rol
xchg
in
repz
or
ja
jbe
(bad)
xchg
or
and
lods
xchg
nop
jne
inc
xor
ja
pop
sbb
jns
cmp
jbe
mov
pop
movs
sahf
cmp
ds
(bad)
fnstsw
(bad)
data16
push
adc
repz
add
jo
cwde
mov
shl
mov
fwait
sbb
fdiv
jo
jne
mov
mov
aad
out
mov
jne
push
mov
cmp
mov
std
fisubr
xchg
jecxz
jne
js
mov
(bad)
xor
mov
or
repz
bound
cmps
jns
out
mov
dec
movs
inc
jo
cmp
add
cld
sti
jno
mov
inc
mov
sub
adc
fdiv
sub
mov
dec
jg
cmp
sbb
lock
pop
xor
rcl
dec
sti
mov
cmc
fwait
scas
lock
js
dec
sub
mov
imul
xchg
lock
adc
div
aaa
fcomi
je
cmp
mov
mov
or
cmp
fnstsw
push
xchg
jg
jnp
jae
mov
enter
xchg
test
popa
or
mov
call
hlt
imul
inc
sbb
in
xor
push
sub
ds
pusha
push
push
push
fbld
dec
sub
mov
std
xor
adc
aas
add
ins
jbe
ins
inc
pushf
test
rcr
dec
mov
hlt
(bad)
cmp
cmps
fs
dec
ja
push
stc
sar
pop
dec
mov
jp
xchg
fbstp
aas
movs
loopne
fwait
pushf
push
mov
cmp
cmp
(bad)
jne
or
dec
jns
test
mov
cmc
lock
aam
sar
fbld
loop
inc
jne
arpl
ja
arpl
push
mov
(bad)
lock
lock
nop
sahf
iret
mov
stos
ds
sar
mov
jae
jb
xchg
xor
mov
bnd
push
xor
xchg
adc
mov
movs
xor
push
and
cld
inc
pop
lock
mov
mov
int3
ficom
adc
mov
pop
mov
pop
xlat
fstp
add
adc
stc
xor
out
push
xchg
(bad)
push
imul
add
jnp
add
jb
jne
push
cmp
fisub
sahf
mov
jns
cs
lock
loope
mov
pop
inc
jne
inc
into
mov
add
dec
xchg
mov
je
ret
cmps
dec
icebp
jmp
loop
pop
gs
je
jmp
dec
mov
leave
xchg
mov
(bad)
imul
lock
sub
pop
push
adc
je
pop
sub
int
push
mov
adc
xchg
nop
(bad)
mov
(bad)
or
pop
sbb
mov
dec
inc
xchg
sub
or
mov
xor
jne
sbb
jo
lds
std
mov
adc
ins
pop
je
pop
mov
mov
mov
ret
mov
adc
xchg
test
inc
mov
cli
stos
cmc
or
lock
add
clc
push
les
mov
inc
movs
fnstcw
jno
fwait
loopne
hlt
lods
retf
xchg
adc
call
mov
jne
xchg
sub
xlat
jmp
arpl
ds
enter
and
outs
test
mov
mov
call
bound
xchg
jmp
outs
mov
mov
aam
scas
mov
jb
js
ss
jp
pop
mov
pop
xlat
es
scas
and
pop
fwait
mov
jbe
adc
jne
mov
imul
mov
dec
jl
fiadd
and
ss
mov
jl
mov
mov
mov
xor
mov
fidivr
dec
outs
ja
and
push
xchg
mov
sub
mov
pop
sbb
rcl
je
or
jmp
mov
in
ror
xchg
out
push
cli
dec
xor
jmp
cmc
popf
pop
test
arpl
je
gs
or
in
xor
dec
xlat
sbb
jb
fidivr
push
pop
or
imul
mov
add
fwait
jmp
dec
leave
gs
or
xchg
repnz
fcomp
fnstcw
adc
mov
xchg
mov
test
or
ja
int3
test
or
push
stc
adc
out
shl
sbb
adc
adc
mov
test
sbb
cmp
xchg
pop
(bad)
add
fdiv
je
cmps
adc
dec
sbb
leave
lea
aaa
test
adc
call
cmp
inc
and
imul
inc
pop
or
adc
test
xchg
xchg
mov
dec
and
out
jne
mov
and
les
popf
push
adc
cmp
pop
dec
sbb
pop
icebp
mov
mov
addr16
inc
mov
(bad)
jno
mov
push
ret
mov
leave
jge
movs
xchg
int
dec
stos
jno
inc
(bad)
(bad)
sahf
mov
iret
or
and
xor
add
pop
repnz
icebp
jl
push
loope
cdq
mov
mov
sub
mov
xor
icebp
ret
movs
popf
movs
data16
mov
not
(bad)
aam
mov
sbb
jecxz
bound
ja
push
cmps
pop
add
ins
mov
test
iret
or
inc
ret
xor
mov
mov
and
jbe
out
add
stos
mov
mov
mov
scas
(bad)
mov
(bad)
mov
lds
test
popf
dec
call
jno
pop
mov
mov
mov
and
(bad)
shl
repnz
sub
sar
lods
mov
ds
lock
pop
lahf
jg
fimul
jo
out
repz
movs
ss
cmp
push
int
mov
jp
push
mov
sbb
pushf
add
jbe
jns
xor
ficomp
sbb
idiv
idiv
fxch
sti
xor
and
xchg
jne
stc
aam
mov
icebp
imul
adc
add
jne
cmc
xchg
jbe
test
and
mov
sub
xor
hlt
and
add
cmp
xor
inc
enter
imul
cmp
pusha
adc
add
aad
cmp
dec
mov
push
ja
sub
into
(bad)
mov
push
test
icebp
push
scas
sbb
ret
ss
pop
push
mov
xor
cmc
mov
and
addr16
mov
call
sahf
adc
dec
bound
adc
cmp
je
fwait
repnz
cmp
xchg
fistp
shl
xchg
mov
jae
mov
push
ss
fprem
and
inc
dec
test
sub
mov
fstp
xchg
mov
xchg
cmp
mov
mov
cmp
xchg
inc
mov
outs
fldenv
mov
inc
test
shr
dec
fs
ror
imul
mov
adc
lea
jbe
hlt
sbb
sahf
jb
outs
adc
ret
fmul
ret
lea
mov
outs
sbb
ror
inc
mov
sbb
dec
mov
sar
imul
add
inc
mov
fiadd
loope
cwde
scas
or
pusha
fmul
std
xchg
xor
loop
ret
inc
sbb
lea
pop
adc
mov
lock
cmp
mov
cmc
jp
or
test
jge
imul
or
push
cwde
adc
mov
push
jmp
int
sbb
out
mov
fsub
mov
popa
jmp
fimul
aas
jl
inc
test
adc
mov
stos
adc
mov
movs
movs
pusha
ficomp
cmc
jmp
cmp
add
lods
lock
(bad)
sbb
ds
fdiv
xchg
ja
cmps
mov
popa
fist
mov
(bad)
jmp
xor
test
rol
sub
test
adc
in
les
and
cdq
and
js
lods
movs
sub
test
push
xchg
sub
cld
lods
(bad)
iret
jo
mov
add
jecxz
inc
dec
mov
jbe
(bad)
sti
dec
stos
and
push
mov
pop
mov
fsub
dec
shl
cs
jae
dec
mov
loop
aas
mov
cdq
jbe
stc
cmps
out
or
fs
mov
repnz
bound
outs
nop
jo
fidivr
(bad)
repnz
fwait
dec
sub
sub
outs
(bad)
pop
and
jle
sub
xlat
lahf
cli
neg
rol
jbe
sub
mov
push
out
add
fnstsw
cmp
jecxz
inc
xor
pop
cwde
push
add
dec
cmp
xlat
iret
call
fs
pop
(bad)
imul
mov
adc
lahf
push
xor
push
call
pop
cmp
call
icebp
aas
into
sub
cmc
lods
xchg
inc
lock
aam
frstor
inc
and
and
iret
add
inc
fidivr
push
jg
jle
popf
jne
sbb
lds
xor
in
in
fnsave
aad
push
and
push
jecxz
iret
sub
cld
icebp
sbb
rcr
cmps
push
test
xor
ins
pop
mov
add
mov
jmp
lods
or
jl
fsubr
call
cmc
in
sti
je
cdq
hlt
fs
retf
inc
push
dec
icebp
fdiv
aad
call
fidivr
das
lahf
shl
andnps
jno
adc
xchg
sbb
mov
je
jae
stos
jbe
shl
inc
jp
xor
adc
mov
aaa
xchg
ja
ins
leave
or
and
js
(bad)
sbb
pop
inc
leave
xchg
in
in
icebp
dec
jno
bound
nop
shl
push
pop
sbb
jbe
xor
xchg
sub
push
(bad)
pop
mov
and
mov
adc
ja
cmp
(bad)
mov
jmp
ja
push
call
dec
sub
mov
sbb
mov
lea
jnp
ror
push
inc
or
adc
pop
or
jno
dec
push
inc
repnz
dec
sbb
repz
sub
(bad)
ja
fs
pop
pop
inc
dec
cmp
int3
xor
cmp
mov
nop
pop
fs
sub
adc
jmp
(bad)
lods
in
sub
aaa
pop
sbb
in
mov
data16
sbb
sub
jbe
leave
mov
sbb
add
sbb
in
imul
cmp
in
push
mov
mov
ja
(bad)
cmps
test
pop
sbb
inc
mov
out
icebp
loopne
jnp
or
add
ja
xor
lahf
push
sbb
mov
jle
sbb
xchg
ins
jbe
ja
mov
mov
mov
mov
mov
cli
mov
and
hlt
xchg
idiv
xor
jbe
fldcw
int3
or
cld
jno
test
loop
push
je
xlat
out
jbe
out
cdq
xor
pop
inc
inc
cli
cdq
jae
sbb
addr16
cmps
sub
inc
mov
mov
cld
rcl
into
push
pop
and
mov
cmp
cmps
in
inc
mov
dec
repz
popf
or
jb
adc
test
jb
or
fst
mov
(bad)
out
mov
test
stos
mov
adc
cmp
loop
je
(bad)
sbb
sbb
enter
int3
mov
aas
xor
scas
mov
retf
fadd
lods
adc
mov
mov
lea
shr
mul
mov
sub
(bad)
pop
add
call
mov
xor
inc
or
mov
in
pushf
scas
adc
xlat
aam
and
sub
ins
jno
leave
ja
jae
or
fs
mov
imul
(bad)
stc
stos
push
mov
mov
add
xchg
out
xor
aas
dec
inc
push
xlat
out
jecxz
jl
mov
xor
pop
and
or
jne
lahf
jle
mov
jno
jmp
daa
aas
out
mov
or
xor
mov
test
aam
push
and
cmps
ret
sub
xchg
test
fxch
sub
cs
sub
hlt
jb
or
and
inc
mov
int3
bound
mov
enter
mov
leave
mov
in
ds
adc
inc
sahf
out
mov
mov
push
mov
pop
or
sub
clc
mov
or
fild
in
dec
dec
mov
xor
js
imul
inc
(bad)
cmps
jne
mov
push
ja
(bad)
and
and
xchg
sbb
sar
xchg
sbb
(bad)
or
push
dec
clc
jbe
mov
jg
mov
xchg
retf
cmc
cmps
jns
or
data16
dec
dec
icebp
fisubr
retf
out
mov
mov
mov
pop
ins
xchg
mov
movs
int
mov
jb
pop
popa
icebp
or
xchg
out
outs
dec
adc
icebp
(bad)
inc
jb
cs
xor
adc
movs
inc
popa
jmp
mov
nop
scas
xlat
test
int3
adc
call
xor
mov
stos
retf
mov
fcom
adc
pop
mov
leave
sbb
inc
jo
mov
addr16
mov
mov
mov
xchg
cwde
xchg
push
cmc
dec
mov
xchg
ret
or
mov
push
push
sub
int
push
addr16
mov
xlat
push
stc
repnz
pop
push
lods
out
sub
retf
sbb
leave
icebp
pop
call
adc
adc
jno
and
pop
pop
jne
ja
adc
fdiv
(bad)
clc
mov
push
sub
push
sbb
jmp
mov
push
pop
xor
daa
add
cld
fs
(bad)
push
movs
mov
or
mov
icebp
cmp
cmp
iret
enter
test
pop
pop
arpl
and
mov
mov
mov
icebp
push
aam
jmp
aas
add
pop
cld
xchg
das
mov
mov
inc
xchg
fwait
xlat
lock
pop
retf
add
jo
fidiv
out
push
and
adc
cwde
mov
cmc
(bad)
push
sbb
mov
jmp
mov
cmp
lea
fist
inc
or
int
mov
mov
retf
arpl
push
xor
inc
out
push
mov
inc
push
inc
out
dec
push
ja
aaa
adc
ins
icebp
adc
cmp
jge
sbb
sub
fnsave
call
sti
mov
scas
mov
dec
int
outs
test
icebp
mov
push
jo
clc
stos
mov
push
loopne
xchg
popf
pop
cmp
mov
movs
xor
sub
mov
imul
jne
pop
dec
xor
fld
les
pop
xor
pop
dec
push
in
arpl
adc
idiv
push
in
adc
clc
push
or
mov
dec
sub
aas
pop
pusha
adc
outs
sbb
mov
ja
and
test
cs
jb
inc
(bad)
lods
cmp
mov
ja
jb
fcomp
add
sbb
sbb
enter
add
loop
push
xlat
div
test
sti
test
push
sbb
mov
dec
dec
inc
mov
retf
jns
mov
dec
out
shl
lock
adc
out
in
dec
xor
not
jl
sbb
mov
out
xor
dec
lock
(bad)
popf
add
jae
inc
enter
and
sub
ret
addr16
fdiv
xchg
cmp
ja
mov
mov
addr16
repz
lock
jo
pusha
(bad)
sub
fisubr
shl
shr
lea
jno
mov
adc
imul
adc
loope
int3
adc
out
retf
xor
les
dec
and
cmc
pop
inc
not
mov
xchg
jo
stc
or
out
sbb
dec
pop
sub
add
movs
jecxz
and
lock
iret
add
add
lea
je
pop
pushf
jl
sti
xchg
aaa
dec
add
push
jle
jno
movs
arpl
cmp
stos
add
sbb
sub
push
sbb
outs
xor
sub
ret
push
add
jne
xchg
dec
fs
lods
mov
sub
xchg
aas
sbb
icebp
xchg
clc
inc
bound
and
jne
push
gs
ja
lahf
push
xor
test
icebp
inc
hlt
icebp
mov
neg
pushf
cmovo
inc
lds
stc
jmp
idiv
mov
mov
aas
(bad)
adc
cmp
mov
leave
xchg
or
iret
jecxz
cmp
mov
sbb
xor
fld
rol
jmp
mov
add
(bad)
mov
sar
das
mov
icebp
mov
sbb
dec
test
mov
and
xchg
dec
aad
es
iret
mov
and
mov
xchg
adc
out
cmp
arpl
je
jle
fdivr
or
sbb
push
lock
jns
ffree
mov
and
push
sub
jle
cld
enter
cmp
rol
jne
push
aam
addr16
push
fs
sbb
call
add
(bad)
ja
adc
xor
push
push
mov
mov
repnz
cmp
jp
dec
outs
pop
js
pusha
mov
or
pop
push
dec
push
jo
push
push
mov
sbb
into
jl
mul
mov
fadd
sbb
adc
and
pusha
pusha
mov
pop
adc
icebp
push
mov
movaps
xlat
ret
mov
shl
(bad)
out
aaa
push
pop
sbb
mov
hlt
fwait
add
mov
div
mov
sbb
aad
ja
mov
sbb
mov
push
shl
xchg
lahf
mov
xor
push
pop
jmp
xor
jg
xchg
rcr
stc
xchg
pop
mov
cmp
aaa
lods
movs
or
iret
add
test
sub
jae
mov
xor
inc
jmp
mov
cmp
sub
retf
push
jno
ret
mov
mov
int
fadd
sbb
int
jmp
loopne
jne
add
ja
loopne
imul
pop
lahf
pop
nop
jecxz
aaa
inc
lods
sub
jp
pop
sbb
fld
loop
gs
xor
imul
ret
test
adc
call
movs
sub
nop
xchg
jle
cmp
sub
mov
in
adc
rcr
icebp
dec
enter
sub
(bad)
jne
pop
xor
or
jae
popa
rol
(bad)
outs
adc
jne
push
pusha
ss
stc
out
add
sub
sub
push
ficom
adc
dec
ficomp
outs
jno
jbe
cmp
add
jns
retf
ret
push
xor
add
test
ret
arpl
retf
jno
xchg
fild
loopne
in
aam
xor
mov
pushf
ret
mov
mov
(bad)
shl
mov
jbe
adc
imul
call
fldenv
cmps
stos
pop
sbb
lods
mov
sbb
cdq
loope
push
sar
or
sbb
out
lds
mov
aaa
add
and
retf
and
pop
adc
out
cmp
int3
fisttp
(bad)
inc
dec
loop
aaa
je
mov
xchg
push
iret
fcmovu
mov
mov
dec
xchg
mov
test
add
out
mov
cmp
dec
sar
xor
movs
stc
pop
dec
dec
cmp
xlat
fdiv
adc
leave
mov
push
inc
test
enter
jl
in
push
clc
adc
xor
outs
mov
aas
mov
push
inc
cdq
imul
mov
push
xor
je
(bad)
sbb
(bad)
(bad)
nop
sbb
adc
xchg
cmp
mov
jbe
adc
out
xor
out
mov
mov
outs
mov
jp
push
cs
scas
cmp
jbe
dec
out
mov
mov
retf
loop
into
mov
mov
(bad)
(bad)
inc
(bad)
sti
imul
pop
(bad)
lds
mov
cmp
imul
mov
jecxz
or
ins
mov
inc
mov
jne
and
xchg
push
leave
dec
loop
hlt
inc
and
inc
inc
loopne
push
jbe
fstp
mov
ror
push
or
cmp
mov
push
aam
dec
mov
pop
fs
call
loope
jo
add
mov
xchg
fild
ins
scas
xchg
cmc
adc
and
scas
jle
sub
repnz
mov
into
out
and
in
js
xor
xor
and
out
lea
jecxz
popf
xchg
out
inc
sbb
xchg
pop
(bad)
jge
lock
div
inc
nop
rcl
cmp
cmp
arpl
pop
add
inc
jne
or
lock
lds
inc
mov
dec
je
cld
outs
shl
jo
push
or
scas
retf
adc
in
and
retf
fdiv
mov
les
ret
push
adc
pusha
pop
mov
jmp
adc
jg
mov
out
cwde
jge
jmp
and
int
pop
ja
sahf
inc
std
jb
mov
ss
sub
addr16
or
sub
hlt
lahf
clc
out
js
add
fild
outs
push
pop
jne
test
data16
scas
jnp
cmps
xlat
adc
mov
shl
xor
scas
adc
xchg
(bad)
je
xchg
cli
mov
test
test
outs
adc
mov
adc
mov
test
adc
and
mov
add
iret
sub
push
fdivr
dec
mov
and
mov
sahf
xchg
das
jg
jmp
jmp
xor
or
loopne
and
pop
adc
jg
jne
xor
ficomp
dec
cmc
dec
retf
lea
or
imul
ror
cld
idiv
mov
scas
adc
bound
jge
jne
and
cld
(bad)
test
sbb
std
hlt
je
xor
cli
lahf
pop
div
pop
dec
mov
test
movs
stos
aas
push
test
(bad)
xchg
xchg
movs
es
in
xor
(bad)
outs
aad
mov
xor
push
cmp
fwait
add
pop
lock
mov
or
inc
aaa
mov
sahf
or
mov
enter
fisttp
dec
das
mov
sub
pop
cmc
cld
cwde
inc
lock
gs
add
cmc
sti
bound
outs
cmp
push
lahf
mov
mov
push
cwde
pusha
mov
adc
shr
sbb
lods
std
inc
fs
xor
in
pushf
mov
push
imul
mov
lahf
loop
in
mov
xchg
ss
lock
cmp
push
sahf
cld
jp
sub
mov
adc
inc
ja
data16
ins
repnz
stos
fwait
adc
sbb
loop
cld
push
adc
in
retf
push
mov
push
jne
mov
adc
scas
jp
jge
fistp
pushf
adc
push
mov
mov
adc
mov
mov
jle
dec
cs
jmp
mov
xchg
lods
in
aad
adc
icebp
push
pop
push
sbb
stos
mov
jp
(bad)
mov
das
lods
retf
mov
jmp
pop
not
dec
sub
lea
mov
mov
xor
aam
scas
and
loopne
xor
sbb
js
pop
ins
inc
or
sahf
xor
mul
mov
je
inc
mov
ja
xor
pushf
dec
mov
in
mov
sbb
pop
sbb
jp
xchg
je
js
stc
jbe
outs
pop
mov
push
jecxz
mov
mov
mov
xor
xchg
fild
je
sub
pop
push
das
dec
(bad)
(bad)
out
hlt
retf
imul
ja
(bad)
jg
mov
xchg
sub
fsubp
mov
add
sub
push
fnstsw
dec
stos
cmp
es
fsubr
loop
je
fwait
dec
test
jns
icebp
push
jae
les
pop
aaa
fnstsw
adc
inc
pop
xor
ja
mov
pop
mov
jecxz
pop
mov
scas
es
movs
pop
and
cmp
in
mov
fadd
xchg
repnz
mov
je
pop
push
pop
dec
int3
sub
add
xor
or
aad
icebp
fs
cmps
lahf
sbb
lods
jne
scas
ja
int3
je
dec
jae
jmp
into
mov
xor
fisttp
das
neg
jp
outs
mov
movs
add
je
push
lods
pop
adc
mov
test
nop
cmp
inc
jmp
into
xor
pop
or
sbb
in
or
gs
jbe
sub
push
and
jns
fisubr
pop
icebp
arpl
ins
mov
dec
or
idiv
push
and
mov
fdivr
mov
sbb
test
mov
mov
mov
cs
call
xlat
mov
pop
je
inc
shr
dec
icebp
data16
or
xor
sbb
loopne
push
leave
or
cmp
xor
xor
and
mov
mov
bound
push
leave
jecxz
or
inc
je
push
out
pop
push
cmps
inc
(bad)
test
xchg
idiv
add
imul
ins
(bad)
cli
jp
mov
outs
ret
mov
repnz
mov
lahf
test
leave
and
cmps
mov
fisub
dec
(bad)
ja
mov
mov
push
in
inc
aad
addr16
jne
adc
mov
push
xchg
dec
jg
mov
xchg
fldcw
test
jo
icebp
ror
ret
call
pop
push
out
inc
fdiv
adc
ror
push
mov
cmp
in
pop
sbb
div
or
(bad)
xchg
out
push
repnz
icebp
data16
sti
push
hlt
fcomi
jmp
jo
sbb
mov
arpl
pushf
mov
add
fst
ins
inc
pmaxub
loope
mov
or
xchg
jns
sub
ret
and
push
es
sbb
icebp
adc
adc
xchg
lds
mov
jno
pop
inc
inc
xchg
ja
popa
(bad)
cli
sahf
xchg
in
pop
push
dec
outs
and
jbe
mov
out
jns
and
loop
push
stos
lock
jo
aam
cmp
ins
arpl
xchg
dec
lods
and
leave
cmp
mov
je
(bad)
mov
mov
imul
in
int3
dec
sti
retf
cmp
out
into
jecxz
and
sub
sbb
dec
inc
imul
mov
or
into
sub
jae
jl
jge
jmp
xor
adc
mul
mov
hlt
jp
icebp
rcl
fwait
xchg
and
ret
adc
push
bound
adc
cmps
push
shl
popf
adc
sub
sub
jbe
push
(bad)
xor
js
push
jp
call
dec
es
int3
jp
std
inc
jns
inc
icebp
sub
push
push
or
cs
jbe
jp
mov
add
int
pop
ds
mov
mov
add
mov
pop
xchg
retf
cmp
in
and
mov
sbb
mov
pusha
fdivr
or
add
xor
push
(bad)
(bad)
int
inc
enter
jno
imul
add
add
gs
sbb
fwait
mov
icebp
jmp
jo
jg
inc
out
fnsave
ins
setns
iret
mov
(bad)
mov
xor
(bad)
sbb
adc
inc
shl
push
push
dec
lock
dec
ins
popa
ret
jne
mov
push
loope
cmp
jge
mov
add
or
pop
and
jle
sub
ret
mov
cmp
mov
mov
cwde
lods
ja
pcmpeqb
pop
test
mov
sbb
imul
pushf
icebp
cli
jno
mov
outs
arpl
repz
jae
mov
mov
add
push
add
dec
in
push
mov
mov
loop
push
fs
test
sub
in
mov
sbb
or
cmps
sub
ror
shl
push
pop
sub
imul
jl
mov
enter
aam
mov
sar
cmp
push
(bad)
sub
retf
mov
setg
int
dec
jg
cld
pop
adc
sub
ficomp
cld
mov
xchg
shl
test
icebp
enter
mov
fst
jge
mov
mov
jmp
mov
xchg
pop
xchg
stos
nop
mov
add
fdiv
pop
dec
test
add
push
add
lahf
lods
push
jbe
fld
cmps
cmp
jmp
xchg
adc
dec
adc
jno
pop
shr
movs
cmp
pop
jne
imul
fdivr
sub
test
and
or
xchg
pop
ret
inc
dec
xlat
and
popa
mov
add
xchg
lock
inc
hlt
pop
into
ins
mov
and
push
jle
mov
ja
pop
(bad)
loopne
in
cdq
mov
push
and
inc
(bad)
fild
test
pop
in
pop
xchg
test
dec
jecxz
pop
add
or
data16
mov
test
cwde
jb
and
jl
ret
push
lock
xchg
lea
sahf
push
xor
cmps
lock
push
out
pop
mov
out
nop
out
ins
pop
xchg
jo
fldcw
inc
icebp
pop
aad
into
sbb
push
dec
dec
bound
add
xchg
int
pop
lods
inc
add
out
or
cmp
mov
cmp
adc
mov
mov
imul
je
sbb
loopne
out
sub
inc
sub
jo
dec
xchg
out
fnstcw
xchg
jbe
lock
gs
adc
mov
mov
pushf
jbe
das
mov
mov
pop
mov
fadd
rol
sti
adc
dec
in
jl
(bad)
imul
lock
push
mov
xor
dec
jne
fcomi
adc
jg
iret
sub
xor
je
jle
emms
push
lea
push
jno
stos
inc
xchg
test
ds
push
repz
icebp
fsubr
sahf
addr16
stos
movs
xchg
stos
xchg
popa
dec
or
xor
xor
popf
rcr
dec
pop
test
mov
hlt
push
mov
icebp
mov
aad
lahf
xchg
retf
xlat
and
mov
jne
jbe
jnp
(bad)
loop
xchg
sub
cmp
inc
add
pop
cmp
mov
daa
cmc
lock
loop
outs
sub
fisubr
mov
jbe
push
add
xor
je
xchg
mov
ins
add
retf
dec
ins
loop
adc
inc
push
cmp
dec
xor
xor
cmc
inc
mov
pop
xchg
add
xchg
lods
and
inc
dec
inc
jl
jmp
add
popf
mov
jns
mov
mov
jge
push
scas
xchg
shr
push
repz
pusha
mov
ficomp
xchg
and
mov
fsub
daa
xchg
inc
popf
lock
and
cmp
inc
xor
pop
mov
je
in
pushf
(bad)
loop
mov
mov
jne
sub
cmp
(bad)
push
cmp
jmp
pop
inc
je
mov
popf
jbe
jl
fcomi
fwait
xor
movs
inc
mov
mov
mov
lock
ja
sti
mov
aad
lea
cmp
enter
in
movs
fdiv
in
inc
push
je
add
and
sub
jo
cs
pop
dec
mov
cmps
jae
in
xchg
(bad)
fs
test
mov
retf
or
jae
xchg
mov
cs
cmps
xor
outs
push
fdivp
xor
and
lods
test
outs
and
cmp
sbb
(bad)
out
in
retf
fst
call
fnstenv
icebp
fsub
lds
imul
mov
je
xor
xlat
mov
or
sbb
lods
xor
dec
adc
lea
enter
cld
mov
or
mov
fidivr
mov
add
outs
push
lods
or
inc
ret
xor
mov
push
push
icebp
repnz
loop
imul
dec
add
and
adc
push
imul
xor
mov
jne
xchg
icebp
into
addr16
sub
popf
mov
imul
mov
pop
sbb
dec
jae
je
je
imul
test
xor
mov
nop
jecxz
fdivr
test
sbb
push
ret
pusha
movs
pop
add
fisub
jmp
mov
out
mov
das
neg
iret
add
or
(bad)
sbb
mov
inc
icebp
mov
idiv
outs
js
push
push
popf
das
and
ror
je
test
push
test
vcmpps
aas
out
mov
int
inc
mov
and
daa
pop
cmps
cli
push
cli
imul
xor
fsubr
repnz
sbb
enter
push
jge
loope
cwde
push
lock
jbe
push
stc
xor
pop
cdq
sub
sbb
fldenv
pop
adc
mov
and
cld
(bad)
in
add
in
jmp
mov
(bad)
sti
or
int3
das
sbb
not
fimul
cmp
leave
jns
test
(bad)
hlt
pop
cmps
icebp
movs
loop
adc
push
and
dec
mov
jne
jnp
ss
sahf
pop
aam
pop
fst
mov
lock
leave
mov
aaa
test
cmp
jbe
outs
lock
adc
sub
fsubr
sbb
icebp
pop
les
lds
xor
fidiv
cmp
test
cmp
mov
xor
mov
xor
and
pushf
and
and
out
inc
fs
loop
xchg
(bad)
div
and
in
outs
cld
adc
out
cmp
je
add
(bad)
dec
sbb
test
stos
es
inc
jbe
inc
enter
lock
push
inc
aaa
rol
lahf
dec
dec
and
fs
(bad)
push
jge
inc
pop
jne
(bad)
mov
nop
sti
cmp
pop
mov
out
jo
lahf
sbb
loopne
cmc
xchg
mov
cmps
pop
push
jge
push
js
mov
scas
xchg
mov
jbe
popa
(bad)
cmps
jmp
fidiv
sbb
cwde
aad
bound
inc
mov
mov
mov
mul
push
je
icebp
rcl
and
jae
mov
add
sub
jp
pop
jno
adc
sub
cdq
mov
mov
ror
call
mov
jle
fidiv
data16
aad
and
mov
or
icebp
add
cmp
jo
les
pushf
fs
add
mov
pop
xchg
sub
or
mov
mov
gs
ja
or
loop
test
mov
aas
mov
mov
jecxz
mov
repnz
pusha
(bad)
hlt
pop
sbb
xchg
jb
push
loope
bound
sbb
clc
lods
data16
mov
inc
adc
in
icebp
fadd
mov
pop
mov
aad
lock
das
(bad)
jp
in
test
adc
test
mov
add
out
mov
or
(bad)
icebp
test
in
add
dec
test
or
dec
mov
mov
jg
push
fs
mov
push
enter
jmp
xchg
sbb
pop
mov
push
jbe
aad
cwde
cmp
test
xor
jg
imul
gs
pop
xor
add
icebp
cmps
xchg
xchg
jne
xor
je
enter
sub
shl
mov
lds
data16
xor
out
inc
sti
jno
mov
add
jbe
stos
repnz
dec
jg
pop
cmp
pop
push
xor
ins
push
dec
push
mov
mov
xchg
lods
idiv
and
outs
fdiv
xchg
xchg
daa
mov
loop
jne
iret
mov
mov
inc
mov
std
in
iret
or
push
jbe
lods
dec
pushf
into
stc
not
cmp
daa
xlat
mov
ret
in
dec
scas
pop
sbb
out
jecxz
jne
or
pop
jbe
dec
cmp
add
jmp
stos
add
out
call
lea
pop
xchg
jecxz
jecxz
jne
mov
mov
ins
mov
lock
and
mov
dec
pop
ja
lea
(bad)
cli
mov
jo
cmps
adc
adc
aas
mov
mov
xor
xor
jbe
shr
pop
pop
mov
leave
std
xchg
stos
aam
cmp
retf
icebp
rol
cwde
push
add
fcomp
inc
(bad)
je
mov
xor
add
sahf
push
imul
mov
inc
sub
ror
pop
je
js
stos
imul
dec
dec
mov
lods
cli
std
sub
jb
sti
out
retf
int3
mov
test
add
jo
loope
sahf
pop
nop
adc
shl
push
lock
cwde
ja
cmp
dec
xchg
daa
dec
xchg
mov
xchg
(bad)
jns
lods
inc
shl
mov
inc
mov
cdq
add
ja
sub
scas
addr16
push
or
stos
mov
sbb
jge
adc
xor
call
mov
dec
push
dec
(bad)
xchg
xor
enter
push
push
and
rcl
sub
adc
jl
jb
adc
pop
rcr
int
cdq
xchg
test
mov
xchg
mul
iret
mov
aaa
jge
cmp
jmp
or
and
ficomp
mov
dec
dec
leave
xchg
inc
xor
leave
mov
cmp
push
scas
lods
repnz
wrmsr
add
imul
mov
adc
sub
stc
loop
jmp
jne
dec
xchg
cmp
rcl
fimul
mov
jl
push
inc
icebp
out
test
je
or
cmps
ja
sub
fwait
ja
or
push
sub
push
mov
je
or
test
call
push
adc
and
dec
out
jge
push
and
movs
shr
adc
mov
cld
inc
ret
xlat
je
lods
inc
pop
dec
jne
movs
icebp
and
daa
dec
pop
scas
sbb
xchg
add
cwde
or
cld
iret
cli
ja
jp
(bad)
fnstsw
push
pop
mov
jle
and
sahf
ins
fs
std
add
cmp
mov
in
mov
lock
and
aad
jne
(bad)
pop
dec
scas
dec
fnstsw
in
idiv
pop
mov
mov
mov
sbb
adc
into
xor
mov
clc
push
(bad)
xchg
mov
jae
ret
push
and
call
push
stos
test
mov
pop
movs
dec
push
mov
dec
ja
fucom
daa
(bad)
sbb
ja
lea
(bad)
es
clc
rcl
mov
rcr
mov
pop
repz
add
fwait
in
xor
jne
repnz
(bad)
jbe
pop
rcl
test
mov
aad
bound
pop
and
mov
jmp
xor
mov
sub
push
sbb
stos
push
sar
mov
loop
cli
mov
mov
xor
push
and
inc
out
jne
data16
ja
retf
push
xchg
or
ret
jbe
push
aam
int
mov
(bad)
fidiv
xchg
pop
int
dec
sar
xchg
mov
scas
daa
or
je
inc
jmp
mov
adc
xor
jmp
mov
js
pushf
aad
fcom
js
pop
jne
and
icebp
mov
jne
xlat
daa
cmps
(bad)
push
ins
jb
xor
(bad)
cli
mov
outs
dec
test
cmp
ja
push
add
lea
and
pusha
pop
repz
(bad)
push
or
in
shl
sub
jne
xor
shl
sar
(bad)
jmp
mov
xor
or
pop
push
xor
je
jb
sti
movs
add
icebp
sub
xchg
cmc
push
xchg
sbb
cmp
mov
push
xor
scas
bound
retf
aas
call
mov
mov
test
stos
ja
cld
mov
mov
lods
aaa
(bad)
sbb
fimul
lock
repz
push
cdq
retf
das
jbe
out
jp
fld
sbb
fadd
pop
jecxz
mov
fwait
addr16
hlt
jo
out
mov
pop
mov
jno
pop
mov
sub
adc
(bad)
mov
jecxz
(bad)
pop
cmc
out
mov
mov
imul
jnp
test
xchg
jle
lods
loopne
mov
f2xm1
jbe
mov
cli
pop
xchg
aas
adc
mov
jp
pop
jl
mov
dec
in
inc
push
inc
or
js
jne
shl
jbe
xor
icebp
sbb
imul
icebp
outs
cmps
mov
lods
in
jne
dec
mov
ja
dec
and
fcomp
fadd
inc
mov
sub
xchg
push
push
jae
and
fist
xchg
mov
sbb
dec
test
inc
(bad)
sahf
jae
out
bound
sti
pop
or
xchg
lahf
aaa
sub
inc
mov
stc
pop
dec
dec
lock
addr16
jne
jno
jne
pop
mov
jmp
push
cmp
push
loop
or
sub
not
pop
rol
jne
sub
es
test
fistp
xor
inc
rcr
add
pusha
sbb
bound
xchg
inc
jl
je
sbb
out
dec
loopne
and
int3
vminpd
mov
sub
mov
lock
xchg
out
(bad)
imul
push
dec
mov
xchg
scas
test
push
(bad)
in
or
cmp
leave
out
pop
jno
loopne
push
hlt
pop
mov
push
rcr
lods
jae
(bad)
jecxz
retf
int3
in
xchg
xchg
jne
push
in
js
xor
shl
jecxz
pop
inc
pop
cmps
jne
bound
ja
ins
fs
xchg
xor
(bad)
and
mov
movs
cld
xor
cmp
push
push
mov
stos
mov
mov
idiv
scas
pop
imul
or
xchg
(bad)
pop
or
xchg
lds
sub
push
sar
js
movs
cmp
clc
push
adc
outs
and
out
xchg
lods
xor
or
fimul
les
xor
mov
arpl
mov
dec
inc
sub
out
push
cmp
ja
in
adc
mov
call
mov
es
xchg
xchg
icebp
sbb
lahf
cmps
pushf
outs
sub
push
add
cmps
(bad)
sbb
shr
mov
jae
add
loopne
adc
adc
data16
jno
push
lods
inc
mov
lock
daa
xchg
mov
inc
(bad)
in
imul
or
sub
rol
xchg
cmp
aam
jne
fmul
jbe
pop
xchg
mov
repz
dec
adc
jne
popf
push
imul
push
enter
(bad)
in
jno
pop
xor
and
mov
adc
or
imul
inc
popa
ja
xlat
cld
lods
in
popf
pop
mov
arpl
(bad)
(bad)
jp
jl
rcl
mov
mov
int
mov
test
in
out
push
inc
cs
call
push
add
xor
adc
inc
push
call
call
xchg
pop
test
retf
jno
sub
mov
jp
bnd
inc
inc
into
jne
and
(bad)
aaa
mov
(bad)
fwait
dec
cmp
mov
je
fst
loope
dec
icebp
out
mov
xchg
mov
jo
cld
mov
imul
mov
or
ret
xchg
cmps
cli
ja
shr
fdiv
xchg
mov
dec
std
and
mov
add
or
mov
ret
fdivr
jbe
ins
imul
daa
sbb
in
add
inc
test
pop
sub
cli
rcl
pop
ret
(bad)
(bad)
mov
or
mov
jmp
mov
fisub
pop
pop
icebp
push
fwait
pushf
sti
xchg
pop
fld
jo
pop
xor
fyl2x
je
jp
cli
sub
pop
xchg
je
xchg
nop
xor
mov
jp
push
adc
xchg
ja
ss
or
retf
scas
call
lods
std
(bad)
div
test
pop
add
loop
pop
mov
mov
lea
jne
ja
jmp
mov
cmp
jmp
mov
movs
mov
sub
pop
inc
lock
pushf
das
hlt
aaa
loopne
and
or
sahf
mov
into
xchg
xchg
dec
and
sbb
or
rcl
out
fidivr
mov
mov
in
mov
jl
cmps
or
dec
adc
ins
pop
jmp
call
push
icebp
rcl
push
stc
xchg
mov
xchg
je
scas
cwde
mov
pushf
jb
inc
xor
mov
ins
pop
iret
test
daa
out
sbb
adc
std
outs
push
add
fs
outs
mov
aaa
aam
pop
not
xor
mov
mov
ret
ss
xchg
pop
xchg
fisub
add
xor
outs
push
retf
test
repnz
xchg
je
add
mov
stc
jge
or
mov
pop
adc
jmp
ins
retf
sub
(bad)
lds
add
or
push
push
push
daa
mov
adc
add
lods
dec
adc
pop
jbe
fwait
rol
icebp
cmps
retf
mov
arpl
or
push
test
push
imul
(bad)
aas
out
loopne
pop
mov
sbb
hlt
or
cmp
xchg
(bad)
(bad)
ja
retf
iret
mov
mov
and
(bad)
mov
push
movs
jne
adc
jle
or
in
mov
jno
cmp
mov
cmp
call
xor
cmp
xor
xchg
cmp
shl
add
ss
shl
sbb
and
push
cdq
inc
mov
dec
pop
lock
lods
adc
pop
mov
push
repz
mov
adc
fs
pop
jecxz
rcr
test
test
cmp
or
add
cmp
fist
xor
fisttp
imul
cmp
xchg
test
cwde
push
and
iret
jl
sub
lds
js
idiv
jo
je
retf
or
xor
nop
pop
dec
lock
jne
jo
sbb
imul
enter
mov
mov
or
jbe
adc
fisttp
ret
or
cmp
fadd
stos
xor
mov
pop
xlat
inc
ror
xor
popf
scas
cmc
je
dec
jmp
xchg
cmp
xchg
popa
mov
fdivr
inc
cmp
mov
push
jnp
mov
sbb
(bad)
mov
je
add
pop
pop
lahf
rol
pop
cmp
dec
into
punpckhbw
mov
inc
and
sbb
(bad)
pushf
pop
fmul
jbe
xchg
mov
aaa
mov
mov
out
and
sbb
jecxz
adc
ret
xor
es
(bad)
call
ins
xchg
cli
dec
ins
pop
test
lea
(bad)
cli
jo
enter
adc
hlt
fld
mov
mov
or
push
cmp
ror
(bad)
in
push
addr16
mov
ja
pop
je
fwait
scas
aad
mov
out
xor
call
fidivr
jl
add
dec
mov
cmp
call
jecxz
cwde
shl
xor
jne
push
xchg
and
stc
nop
in
mov
add
adc
mov
loopne
mov
mov
push
push
adc
sbb
push
or
push
add
sbb
adc
adc
sbb
or
sbb
or
or
add
add
adc
push
sbb
or
str
pop
push
or
adc
movups
adc
adc
sbb
add
adc
or
adc
pop
or
or
adc
sbb
or
pop
sbb
add
or
add
push
pop
or
or
pop
adc
pop
or
add
pop
pop
adc
add
pop
or
adc
add
sbb
sbb
add
or
or
sbb
adc
pop
adc
adc
add
sbb
or
add
add
adc
pop
pop
or
add
push
push
push
or
pop
sbb
adc
add
add
sbb
adc
pop
sbb
add
sbb
adc
push
adc
or
push
or
or
sbb
sbb
nop
or
adc
pop
bndldx
in
sub
jmp
sub
mov
push
push
push
call
add
push
mov
push
mov
cmp
je
jmp
jmp
sub
mov
push
push
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
je
mov
mov
mov
cmp
jne
and
cmp
je
xor
push
call
add
call
xor
test
je
xor
cmp
je
add
cmp
je
mov
add
cmp
jne
mov
mov
mov
cmp
je
add
jmp
add
mov
mov
push
push
push
push
call
add
jmp
cmp
je
cmp
je
push
push
call
add
mov
sub
mov
mov
jmp
xor
mov
test
jne
xor
mov
mov
jmp
mov
jmp
xor
push
call
add
mov
and
jmp
or
cmp
je
add
jmp
mov
add
mov
jmp
mov
mov
sub
and
mov
mov
cmp
jne
add
mov
push
push
call
add
mov
push
push
push
call
add
cmp
jne
mov
add
mov
push
call
add
mov
cmp
jne
mov
xor
cmp
jne
cmp
je
sub
mov
cmp
je
add
cmp
jne
jmp
sub
push
push
push
call
add
mov
mov
mov
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
add
mov
mov
mov
test
je
and
mov
mov
cmp
je
and
mov
sub
xor
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
push
call
add
mov
push
push
push
push
call
add
cmp
jne
mov
mov
cmp
jne
and
mov
jmp
add
jmp
sub
mov
push
push
push
push
call
add
jmp
push
push
push
call
add
lea
push
push
call
jmp
jmp
sub
mov
mov
jmp
mov
cmp
jne
cmp
je
add
cmp
je
add
mov
push
push
call
xor
mov
cmp
jne
xor
mov
mov
jmp
cmp
je
mov
mov
jmp
mov
push
call
add
jmp
jmp
xor
push
push
call
add
mov
push
push
push
push
push
call
add
cmp
jne
xor
mov
mov
mov
mov
mov
push
call
add
xor
cmp
jne
xor
mov
mov
cmp
je
mov
cmp
jne
mov
add
jmp
mov
mov
mov
mov
push
call
add
cmp
je
sub
jmp
add
mov
cmp
jne
sub
mov
push
push
push
call
add
cmp
je
and
cmp
je
jmp
test
je
add
mov
push
push
push
call
add
cmp
jne
sub
push
push
call
add
cmp
je
mov
jmp
or
mov
mov
cmp
je
mov
push
push
push
call
add
sub
mov
mov
test
je
and
mov
push
call
add
push
push
push
call
add
xor
mov
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
sub
push
push
push
push
push
call
add
add
push
call
add
mov
mov
xor
jmp
push
push
push
push
push
call
add
add
cmp
jne
mov
mov
jmp
xor
cmp
jne
cmp
jne
mov
or
cmp
jne
mov
mov
or
push
push
push
call
add
cmp
je
mov
push
push
push
push
call
add
cmp
jne
mov
lea
add
mov
mov
jmp
add
cmp
jne
mov
sub
cmp
je
sub
mov
push
push
push
push
call
add
cmp
je
mov
mov
cmp
je
mov
jmp
cmp
jne
mov
mov
jmp
mov
sub
mov
push
mov
add
mov
push
mov
jmp
mov
call
mov
cmp
jne
cmp
je
mov
xor
jmp
mov
xor
cmp
je
sub
mov
cmp
jne
cmp
je
mov
add
push
push
call
add
mov
mov
mov
mov
shr
add
mov
jmp
mov
cmp
je
and
mov
mov
jmp
jmp
mov
add
mov
mov
cmp
jne
add
mov
cmp
jne
sub
mov
mov
mov
cmp
jne
add
mov
mov
push
push
push
push
push
call
add
push
or
cmp
jne
mov
push
mov
push
add
mov
mov
jmp
add
mov
call
cmp
jne
add
push
push
push
push
push
call
add
push
push
push
call
add
mov
push
cmp
je
cmp
jne
xor
cmp
je
mov
or
mov
test
jne
add
mov
test
je
and
mov
jmp
cmp
jne
jmp
sub
mov
mov
xor
mov
jmp
push
call
add
sub
mov
add
jmp
and
mov
call
mov
cmp
je
cmp
jne
mov
mov
push
call
add
mov
mov
add
mov
sub
or
mov
mov
test
jne
mov
mov
push
and
mov
test
je
push
push
push
push
push
call
add
push
mov
add
jmp
sub
mov
push
call
add
mov
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
add
test
jne
xor
mov
push
push
push
call
add
mov
mov
and
cmp
jne
add
mov
jmp
mov
mov
push
call
mov
add
sub
mov
mov
sub
mov
mov
mov
call
or
cmp
jne
cmp
je
mov
and
jmp
push
call
add
mov
mov
mov
push
push
push
push
call
add
cmp
jne
mov
sub
cmp
jne
xor
cmp
jne
sub
mov
mov
mov
mov
mov
add
mov
cmp
je
xor
mov
cmp
jne
mov
mov
xor
mov
mov
pop
xor
push
push
push
call
add
pop
mov
or
mov
pop
cmp
je
add
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
sub
push
push
push
push
push
call
add
push
add
mov
push
push
call
add
mov
push
mov
push
push
push
call
add
mov
mov
cmp
je
mov
mov
add
cmp
je
mov
call
xor
mov
cmp
je
add
mov
cmp
jne
xor
mov
jmp
test
je
jmp
mov
mov
mov
add
jmp
push
push
push
push
call
add
call
cmp
je
mov
cmp
jne
mov
jmp
mov
sub
push
push
push
push
push
call
add
mov
mov
mov
call
jmp
add
cmp
je
mov
jmp
test
jne
sub
cmp
jne
mov
cmp
jne
mov
mov
mov
sub
call
call
and
jmp
mov
mov
mov
cmp
jne
mov
jmp
add
mov
mov
mov
and
mov
mov
mov
mov
add
jmp
mov
and
jmp
mov
mov
add
mov
mov
mov
cmp
je
mov
push
call
mov
jmp
xor
mov
or
jne
cmp
jne
add
jmp
mov
push
call
mov
mov
mov
jmp
mov
add
jmp
cmp
jne
xor
push
push
call
add
or
je
test
jne
cmp
jne
mov
mov
add
add
jmp
sub
push
push
push
push
call
add
mov
lea
xor
mov
cmp
jne
sub
mov
inc
mov
mov
mov
sub
mov
mov
mov
test
je
sub
mov
cmp
je
add
mov
mov
jmp
jmp
mov
cmp
je
jmp
xor
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
cmp
je
and
mov
mov
mov
call
push
push
push
push
call
add
cmp
je
mov
push
push
push
push
call
add
xor
test
jne
sub
mov
cmp
je
xor
jmp
xor
mov
call
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
jmp
mov
sub
call
mov
sub
mov
mov
mov
add
mov
mov
push
push
push
push
call
add
mov
mov
jmp
add
push
push
push
push
push
call
add
mov
add
push
push
push
push
push
call
add
cmp
jne
cmp
jne
test
jne
cmp
jne
sub
mov
jmp
mov
xor
test
je
xor
mov
jmp
test
je
mov
cmp
jne
mov
mov
push
push
push
push
call
add
jmp
xor
cmp
je
xor
cmp
je
mov
sub
push
call
add
push
push
push
call
add
cmp
jne
add
cmp
je
mov
pop
sub
mov
jmp
jmp
push
push
push
push
call
add
pop
jmp
push
push
push
call
add
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
mov
mov
push
xor
cmp
jne
sub
test
je
sub
mov
jmp
mov
push
mov
cmp
jne
mov
call
xor
mov
mov
jmp
mov
or
cmp
je
mov
cmp
jne
xor
mov
mov
mov
jmp
or
mov
jmp
cmp
jne
mov
xor
call
mov
mov
rdtsc
or
mov
mov
mov
mov
or
push
push
push
push
push
call
add
jmp
mov
mov
jmp
sub
jmp
mov
jmp
xor
cmp
jne
mov
add
mov
mov
mov
cmp
jne
cmp
jne
sub
mov
mov
test
je
mov
jmp
or
mov
xor
mov
mov
sub
jmp
xor
mov
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
mov
add
mov
rdtsc
add
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
mov
cmp
je
mov
and
test
jne
sub
mov
mov
mov
cmp
je
mov
xor
mov
jmp
xor
cmp
jne
or
mov
mov
jmp
push
push
push
push
push
call
add
mov
mov
sub
mov
mov
xor
mov
mov
pop
cmp
jne
or
mov
pop
sub
cmp
jne
sub
mov
jmp
add
mov
cmp
je
or
cmp
je
cmp
je
mov
xor
jmp
test
jne
add
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
mov
mov
push
call
add
push
add
mov
push
push
push
push
push
call
add
push
xor
test
je
cmp
je
mov
add
mov
push
push
push
push
push
call
add
mov
mov
add
mov
mov
add
cmp
je
mov
jmp
cmp
jne
cmp
je
and
mov
mov
mov
cmp
je
mov
sub
mov
jmp
mov
add
cmp
jne
jmp
cmp
jne
add
jmp
xor
mov
mov
jmp
sub
mov
dec
mov
mov
mov
mov
xor
mov
rol
test
jne
add
jmp
mov
cmp
je
xor
cmp
je
push
push
call
add
xor
mov
test
je
mov
add
mov
jmp
and
jmp
add
mov
push
push
push
push
push
call
add
mov
sub
mov
add
cmp
jne
xor
mov
jmp
xor
cmp
jne
mov
add
push
push
call
add
mov
sub
mov
push
push
push
push
call
add
cmp
je
mov
push
call
add
xor
cmp
jne
mov
mov
mov
mov
pop
cmp
je
or
mov
mov
pop
cmp
jne
mov
push
call
add
pop
mov
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
xor
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
cmp
jne
mov
movzx
test
je
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
push
push
push
push
lea
call
mov
mov
mov
cmp
jae
mov
imul
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
mov
imul
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
je
mov
movzx
mov
movzx
cmp
jle
mov
mov
mov
cmp
je
mov
test
je
mov
mov
mov
mov
not
imul
mov
lea
mov
mov
mov
mov
movzx
add
mov
mov
add
mov
mov
movsx
xor
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
mov
movzx
sub
mov
movzx
add
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
mov
movzx
sub
mov
movzx
movzx
cmp
je
jmp
movzx
test
jne
mov
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
cmp
je
cmp
jbe
mov
movsx
test
je
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsx
mov
movsx
cmp
jne
mov
movsx
test
jne
mov
mov
movzx
mov
mov
add
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
cmp
je
cmp
je
mov
mov
add
movsx
add
mov
add
mov
mov
add
movsx
test
jne
jmp
mov
add
mov
mov
test
jne
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
call
add
push
test
jne
mov
push
call
add
push
mov
add
jmp
cmp
jne
cmp
je
cmp
jne
push
push
push
push
call
add
push
cmp
jne
test
jne
add
mov
mov
cmp
je
mov
and
call
add
mov
push
call
add
jmp
mov
xor
mov
cmp
je
push
call
add
xor
cmp
je
jmp
add
mov
cmp
jne
sub
mov
mov
sub
mov
mov
cmp
jne
sub
cmp
jne
sub
mov
jmp
xor
mov
push
push
push
push
call
add
cmp
je
mov
sub
cmp
je
sub
mov
jmp
mov
mov
test
jne
cmp
jne
mov
mov
push
push
push
push
call
add
pop
add
mov
cmp
je
xor
mov
cmp
jne
add
cmp
je
mov
mov
sub
push
push
push
call
add
push
push
push
push
push
call
add
test
jne
mov
add
mov
mov
cmp
je
mov
sub
cmp
jne
sub
mov
cmp
jne
mov
push
push
push
push
push
call
add
pop
xor
mov
mov
mov
pop
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
jmp
sub
cmp
je
mov
push
mov
mov
mov
mov
mov
xor
mov
cmp
jne
sub
mov
mov
pop
push
push
call
add
pop
xor
cmp
jne
xor
mov
mov
push
push
push
push
push
call
add
pop
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
push
push
push
call
add
push
mov
push
mov
push
push
push
push
push
call
add
call
jmp
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
jmp
mov
xor
jmp
cmp
je
mov
mov
xor
mov
pop
mov
push
push
call
add
pop
xor
cmp
jne
mov
add
push
push
push
push
call
add
pop
and
mov
jmp
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
push
call
add
push
push
push
push
call
add
push
sub
cmp
je
mov
xor
push
push
push
call
add
mov
jmp
xor
mov
jmp
mov
pop
push
push
push
push
call
add
pop
mov
sub
cmp
jne
add
jmp
and
cmp
jne
jmp
mov
jmp
add
mov
cmp
je
mov
sub
mov
push
push
push
push
call
add
mov
pop
sub
jmp
test
jne
sub
mov
cmp
je
add
mov
cmp
je
add
push
call
add
push
push
call
add
mov
cmp
je
or
mov
mov
cmp
je
xor
cmp
jne
jmp
test
jne
and
mov
mov
cmp
jne
mov
cmp
je
jmp
cmp
je
add
mov
test
jne
sub
mov
push
push
push
push
call
add
mov
call
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
jmp
cmp
jne
mov
push
jmp
mov
cmp
je
xor
cmp
jne
mov
cmp
jne
sub
mov
push
mov
push
cmp
je
mov
jmp
xor
call
add
mov
jmp
sub
jmp
add
mov
mov
push
push
call
add
mov
pop
cmp
je
mov
pop
mov
mov
add
cmp
je
add
mov
pop
and
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
jmp
xor
mov
mov
push
sub
mov
cmp
je
xor
mov
mov
push
test
jne
xor
mov
mov
mov
sub
mov
test
je
xor
mov
jmp
mov
add
cmp
jne
sub
mov
mov
mov
mov
add
mov
cmp
jne
sub
mov
mov
mov
mov
mov
or
mov
mov
pop
jmp
mov
mov
pop
mov
or
jmp
sub
mov
mov
cmp
je
sub
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
jmp
mov
sub
cmp
jne
test
je
sub
test
jne
jmp
mov
and
mov
push
mov
cmp
je
mov
cmp
je
cmp
je
and
mov
cmp
je
sub
mov
push
jmp
mov
and
mov
mov
or
mov
mov
mov
xor
mov
mov
jmp
add
mov
jmp
add
mov
mov
jmp
sub
test
je
jmp
mov
mov
mov
mov
mov
pop
sub
jmp
cmp
jne
mov
mov
pop
mov
pop
mov
cmp
jne
mov
add
test
jne
mov
test
jne
and
mov
cmp
je
cmp
je
sub
test
jne
cmp
je
sub
mov
jmp
mov
add
test
je
mov
add
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
jmp
add
cmp
je
and
cmp
je
mov
jmp
xor
cmp
jne
mov
sub
cmp
je
sub
mov
cmp
jne
add
mov
mov
mov
mov
push
add
cmp
je
mov
xor
jmp
mov
or
mov
push
cmp
je
cmp
je
mov
xor
cmp
jne
mov
and
cmp
jne
mov
add
cmp
je
mov
add
cmp
jne
add
mov
cmp
jne
add
mov
cmp
je
xor
mov
mov
mov
test
jne
jmp
add
mov
cmp
jne
add
mov
mov
jmp
mov
mov
mov
mov
add
jmp
xor
jmp
jmp
add
cmp
jne
mov
mov
test
je
add
cmp
jne
xor
mov
mov
cmp
jne
jmp
mov
mov
xor
mov
mov
mov
mov
pop
and
cmp
je
mov
pop
mov
mov
mov
pop
xor
mov
cmp
je
mov
or
cmp
je
sub
jmp
xor
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
jmp
xor
mov
mov
mov
cmp
je
add
mov
mov
jmp
xor
test
je
add
mov
jmp
xor
mov
push
test
je
mov
push
cmp
jne
add
test
je
sub
mov
push
mov
cmp
jne
mov
xor
jmp
mov
mov
mov
mov
mov
mov
mov
pop
add
mov
jmp
add
cmp
jne
xor
test
jne
mov
pop
xor
mov
jmp
sub
mov
mov
cmp
je
jmp
cmp
jne
sub
mov
pop
mov
cmp
je
sub
mov
cmp
je
add
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
add
jmp
cmp
je
mov
push
mov
cmp
jne
cmp
jne
mov
push
mov
test
jne
add
mov
mov
mov
jmp
mov
xor
mov
test
jne
mov
pop
mov
pop
jmp
test
je
xor
mov
pop
cmp
je
mov
leave
ret
add
jo
ret
jecxz
stos
movs
hlt
mov
sti
fwait
jne
loop
xor
js
test
mov
add
(bad)
sub
jl
aas
ds
arpl
test
cmps
add
enter
pop
push
mov
jbe
xchg
xchg
sub
ret
mov
stos
pop
push
mov
mov
les
add
mov
iret
push
movs
daa
add
jbe
pop
cli
test
test
shr
icebp
fdivp
adc
in
dec
pop
mov
pop
or
dec
adc
call
sar
cmp
sahf
pop
pushf
leave
test
fld
mov
fdivp
ret
pushf
pop
shr
mov
cmp
cmp
cld
imul
repnz
pushf
je
dec
xchg
sbb
imul
lea
arpl
dec
jbe
or
(bad)
mov
fist
sar
out
lods
hlt
mov
clc
fisttp
test
lods
ss
adc
sub
mov
cmp
test
add
fucomip
jne
es
xor
mov
aad
into
pop
ja
lods
sub
xchg
inc
(bad)
out
mov
aas
cwde
mov
jae
inc
inc
jb
fnstcw
aas
sbb
je
(bad)
les
les
mov
ret
inc
mov
call
sti
jbe
loope
push
sbb
xchg
cmp
repz
test
jl
mov
lods
and
fwait
icebp
jmp
bound
mov
adc
(bad)
xor
cmp
pop
ja
sub
jge
inc
adc
xlat
(bad)
div
dec
xchg
and
jbe
mov
inc
imul
or
jb
xchg
movs
movs
aas
dec
in
mov
mov
cmp
dec
fs
icebp
sti
mov
inc
in
push
xchg
movs
mov
push
cld
in
mov
jg
gs
fild
lock
aas
pop
xor
xchg
mov
sub
jb
sub
mov
into
inc
and
mov
test
pop
cs
pop
lods
mov
sbb
mov
les
xchg
lock
int
mov
and
loopne
mov
mov
add
les
je
adc
inc
jne
sbb
out
mov
jl
fisttp
je
lahf
inc
push
pop
inc
icebp
data16
push
sbb
mov
in
shl
and
mov
add
dec
cs
push
icebp
or
es
lock
adc
cli
ss
add
cld
retf
stos
dec
ja
(bad)
or
das
fdivr
sub
xchg
js
jo
mov
mov
cwde
mov
sar
or
pop
add
icebp
xor
(bad)
enter
mov
pop
mov
aad
adc
in
cmp
int3
lods
mov
dec
sub
mov
mov
enter
icebp
push
loop
ss
or
jg
cmp
jmp
push
icebp
xchg
xor
jns
mov
ja
repnz
int
lds
aam
movs
add
jle
sbb
out
out
retf
mov
cmc
jbe
inc
hlt
xor
inc
dec
dec
hlt
or
jmp
pushf
jge
jg
pop
icebp
adc
rcl
dec
sti
and
cmp
pop
jne
sub
mov
xor
cwde
stos
jno
ins
enter
lea
ja
addr16
call
pop
sbb
cwde
cmp
xor
mov
scas
pop
xor
jno
pop
mov
test
dec
cmp
int3
xchg
data16
popf
jle
ja
out
push
push
and
fcmovnu
mov
add
xor
ins
jo
imul
mov
clc
in
arpl
add
cld
or
dec
xchg
mov
(bad)
xor
pminub
(bad)
sub
ja
jo
sub
push
add
icebp
jae
lods
adc
sub
stos
mov
sbb
mov
push
adc
cmp
test
mov
sbb
aad
out
bound
(bad)
jbe
sbb
dec
gs
in
adc
pcmpgtb
enter
lds
adc
add
call
in
(bad)
push
push
test
jl
or
mov
cmp
xchg
call
pop
int3
jbe
jns
xchg
call
aad
ins
js
mov
jle
dec
dec
ja
stos
xchg
sub
addr16
jle
or
iret
loopne
test
jo
add
fs
stc
adc
std
jbe
jecxz
rol
ins
add
lock
lea
test
cmps
lods
je
pushf
mov
(bad)
in
or
add
fstp
mov
mov
movs
fs
shr
fidivr
xor
xchg
inc
retf
pop
icebp
mov
cs
mov
push
bound
lock
ins
out
pop
cs
and
cmp
xchg
pop
stc
pop
icebp
push
sub
fdivr
stos
dec
mov
je
inc
mov
xlat
jl
in
add
jbe
or
adc
mul
aaa
stos
test
sbb
jp
sub
(bad)
and
rol
bswap
je
cmp
(bad)
pop
repz
movs
addr16
(bad)
jmp
mov
ss
xchg
xchg
les
dec
add
mov
mov
mov
mov
lock
loopne
lds
mov
push
mov
mov
mov
mov
fisttp
jl
mov
psubq
je
push
mov
jl
fidiv
out
push
mov
ins
xlat
mov
int
adc
push
popa
in
into
inc
add
inc
push
or
adc
aas
mov
push
cdq
int
ins
dec
popa
or
dec
push
inc
inc
js
inc
sti
hlt
inc
adc
lods
cmps
test
dec
or
movs
pop
cli
jg
dec
(bad)
dec
jo
jl
cs
fs
je
inc
mov
inc
rcr
mov
cmp
imul
xlat
icebp
add
les
movs
test
popa
sbb
inc
stos
clc
mov
jmp
popf
and
mov
push
jmp
icebp
mov
(bad)
sti
mov
sbb
or
ja
dec
sub
aad
(bad)
outs
in
addr16
aaa
cli
aaa
in
into
pop
in
push
out
push
ins
and
or
and
or
(bad)
and
dec
scas
in
cwde
mov
cmp
outs
xor
xchg
bound
sahf
rol
dec
pushf
sbb
cmp
inc
adc
pop
and
mov
jne
scas
or
ja
rcl
popf
dec
scas
enter
and
or
fnstcw
pop
ja
adc
mov
repz
in
lods
stos
xchg
add
dec
jnp
lods
fwait
nop
cld
test
lock
ins
xchg
cdq
je
push
mov
into
(bad)
jne
mov
call
repz
cdq
sbb
jno
int
stos
xor
add
mov
or
xchg
xor
aad
jbe
call
pop
sti
mov
aas
mov
or
ja
(bad)
jl
inc
ds
jo
sub
jge
mov
jmp
cmp
mov
inc
inc
or
mov
inc
push
and
in
mov
cli
add
jne
leave
stc
sbb
adc
mov
iret
ins
jle
and
jle
lock
popa
pop
lock
loop
jbe
mov
pop
loop
mov
jae
lds
ror
xor
hlt
mov
bound
inc
cmp
mov
xchg
jecxz
ja
out
hlt
add
ss
les
pop
or
in
adc
rep
adc
cs
popf
mov
test
pop
mov
or
ja
jecxz
imul
movs
mov
in
jmp
mov
test
in
mov
call
sub
clc
add
cdq
push
test
nop
fwait
in
inc
jmp
frstor
jns
lods
sub
fs
sbb
xchg
lahf
or
nop
stos
jno
push
(bad)
ins
pop
adc
ja
test
push
icebp
xor
sti
test
cld
xor
add
add
fdiv
scas
aam
arpl
adc
inc
sar
lock
lea
xchg
hlt
push
test
xchg
addr16
je
sbb
retf
js
test
ret
or
xor
dec
add
test
mov
mov
inc
fiadd
jno
movs
xor
retf
jb
outs
xor
pop
sti
mov
mov
mov
dec
repz
jno
pop
aas
iret
lock
fld
fdivp
icebp
loop
dec
mov
pusha
fadd
in
shr
jmp
pop
repnz
xchg
xor
(bad)
mov
das
(bad)
repz
cld
icebp
mov
sti
ins
in
hlt
ret
and
sbb
cmp
xchg
mov
shl
frstor
pusha
icebp
in
jae
mov
popf
int3
(bad)
mov
jle
loopne
(bad)
pop
push
cmp
dec
and
dec
int3
je
imul
add
mov
mov
dec
and
idiv
(bad)
push
out
push
add
mov
sub
mov
inc
xor
mov
push
iret
jbe
pusha
fbstp
arpl
jbe
jecxz
jl
rcr
mov
add
or
push
dec
bound
inc
mov
mov
jg
fimul
es
mov
sub
outs
mov
adc
sub
imul
icebp
out
cmc
sub
jae
scas
hlt
stc
je
out
jne
inc
adc
jbe
inc
lea
(bad)
out
imul
push
je
mov
ja
movs
mov
xor
and
dec
in
neg
and
lahf
gs
fcomp
or
inc
je
cmp
push
shld
inc
lock
pop
or
dec
xchg
je
xor
xchg
cmc
push
repz
xchg
inc
pop
loopne
jecxz
(bad)
cdq
adc
aaa
test
add
jne
arpl
jno
(bad)
retf
jbe
dec
and
mov
xchg
mov
aaa
xor
jp
mov
fwait
jo
pop
stos
lock
out
movs
stos
ds
or
mov
sahf
and
and
inc
jbe
cli
xor
push
xor
in
push
sub
adc
div
(bad)
fcmove
stc
loop
jl
push
adc
lea
je
iret
test
ja
xchg
(bad)
rol
not
xor
mov
in
cmp
cld
xchg
lock
ret
push
jb
xor
sbb
lock
and
add
mov
cmp
es
repz
stc
iret
cmp
popa
fdiv
test
xchg
je
pop
push
and
add
push
movs
jne
ds
dec
dec
lahf
shl
jecxz
pop
add
repz
lods
imul
ret
inc
pop
push
mov
pop
ret
xchg
ss
dec
out
call
pushf
dec
jne
xor
or
jle
lahf
pop
mov
add
retf
(bad)
in
test
test
nop
test
inc
out
dec
ret
lock
pusha
mov
lock
arpl
adc
mov
pop
mov
lahf
ja
push
stos
div
fs
and
and
lock
dec
xchg
cdq
repnz
cmp
daa
cmp
bound
clc
add
(bad)
ins
dec
std
sub
xor
dec
mov
pop
mov
fmul
jo
push
icebp
aaa
inc
jno
cli
js
das
xchg
sub
sub
jmp
mov
hlt
retf
in
jbe
(bad)
rol
mov
ret
and
cmp
sahf
lods
sub
pop
pop
ret
(bad)
stos
mov
(bad)
jmp
xor
ja
out
ins
into
push
in
sub
mov
jp
mov
mov
sti
dec
mov
jb
add
lock
sub
lods
std
daa
retf
les
shl
xchg
jne
sub
mov
or
and
adc
sbb
jne
jl
enter
mov
movs
sbb
cdq
cmp
inc
push
mov
shl
xchg
lock
leave
ds
dec
icebp
loop
mov
pop
lock
in
xchg
add
xor
fcomp
push
mov
out
mov
clc
cmps
dec
sbb
pop
jae
jne
inc
jbe
jbe
cmps
mov
jnp
fld
lock
pop
add
add
mov
iret
xchg
and
jg
push
je
lds
mov
mov
inc
or
jge
fisub
in
movs
jmp
mov
iret
sub
mov
shl
xchg
sub
cmc
rcl
or
scas
test
mov
mov
jae
jmp
push
xor
mov
scas
mov
inc
sub
ins
mov
ret
icebp
enter
push
and
sbb
jne
add
push
ja
pusha
sbb
xor
inc
mov
out
inc
clc
mov
push
pusha
cmp
inc
jmp
mov
lds
enter
pop
or
in
cmc
cld
jne
neg
jle
arpl
inc
adc
(bad)
retf
mov
add
lahf
jle
dec
xor
clc
xor
daa
je
je
mov
xchg
cmp
repz
loopne
(bad)
out
jnp
dec
gs
and
in
inc
data16
push
and
pop
xchg
mov
test
enter
mov
shr
xor
jle
dec
hlt
bound
inc
dec
jmp
jmp
jbe
loop
dec
addr16
mov
mov
aad
in
mov
icebp
pop
mov
mov
cwde
push
mov
cmc
mov
pop
jae
xchg
push
mov
shl
sbb
push
xchg
mov
stc
pop
inc
test
mov
jmp
pop
xchg
lods
test
inc
retf
mov
int3
cwde
mov
cwde
pushf
mov
jle
out
xor
push
jne
or
jge
fnstenv
ret
xor
ja
mov
icebp
add
mov
int
xor
mov
loop
mov
jmp
test
in
mov
mov
jge
xor
call
lods
jle
mov
xlat
mov
shr
stos
jl
sub
cmp
hlt
rcr
jbe
mov
xchg
loope
dec
xor
sub
jne
ja
pop
imul
jecxz
jmp
mov
cwde
adc
dec
repz
icebp
push
add
dec
push
ja
in
mov
mov
xchg
jo
jl
mov
add
jb
cmp
inc
mov
and
cwde
jge
and
adc
loopne
cwde
lds
mov
and
out
mov
gs
ins
push
data16
xchg
int3
mov
sbb
add
icebp
into
sbb
hlt
add
push
into
xor
lock
mov
jae
aad
mov
jp
fdiv
dec
jbe
push
xchg
push
and
int
push
cwde
mov
aas
add
jbe
mov
iret
mov
mov
mov
dec
out
mov
sbb
out
cmp
pop
jmp
loopne
and
cs
or
jns
ja
xchg
mov
sub
ret
dec
jne
adc
mov
jmp
mov
jno
jecxz
xor
ja
ficomp
or
lods
pop
or
or
icebp
or
pop
jmp
jmp
xlat
lock
stos
push
add
pmulhuw
lods
shr
add
hlt
je
or
push
push
and
jns
je
mov
fadd
xchg
jb
adc
test
push
dec
outs
mov
xor
lods
outs
(bad)
mov
rcr
aad
lock
into
pushf
xor
jg
pop
hlt
jl
je
sti
cmp
fdiv
mov
hlt
dec
das
fadd
repz
cmc
ja
aam
push
cmp
in
mov
bound
mov
jae
repnz
loopne
cwde
jp
fsub
out
mov
ficom
test
mov
fnstenv
out
mov
mov
and
inc
lock
jl
ficom
lods
mov
jne
or
jmp
nop
sbb
push
xchg
jg
clc
jne
xchg
movs
xor
jp
mov
mov
jbe
mov
xchg
jp
aaa
adc
int3
popf
mov
enter
icebp
or
shl
sbb
pop
sub
mov
xchg
(bad)
idiv
mov
jno
adc
out
je
or
sti
push
mov
int
xchg
hlt
mul
dec
add
adc
jmp
les
jp
std
sbb
popa
adc
bound
rcl
mov
xchg
out
pop
jmp
rcr
mul
sub
dec
push
scas
in
add
jne
lahf
(bad)
ja
(bad)
imul
popf
aas
lahf
xor
(bad)
nop
cmps
sbb
sub
mov
add
or
icebp
fimul
in
and
xor
inc
je
repz
jbe
inc
jbe
jp
into
in
jns
mov
or
outs
icebp
jmp
mov
pushf
dec
dec
daa
popf
adc
lock
clc
inc
and
bnd
je
lock
fadd
xor
shl
shl
inc
cmp
lock
inc
pusha
mov
jne
cli
(bad)
je
xor
aam
into
ret
scas
push
mov
stos
jae
repz
lock
jbe
adc
loopne
popf
aas
fldcw
mov
stos
dec
out
test
adc
je
cmp
mov
std
cmp
ins
ja
mov
jne
mov
push
fcomi
jmp
jge
mov
imul
ja
pop
(bad)
jmp
mov
push
ins
(bad)
stos
jne
faddp
inc
xchg
stos
push
mov
mov
in
jns
outs
rol
dec
mov
test
dec
gs
xchg
sub
add
jne
mov
sbb
push
cmc
or
mov
xor
jo
sbb
fcmovbe
mov
pop
jb
add
out
es
icebp
pop
loop
rcr
shl
add
bnd
idiv
xor
push
mov
mov
sbb
lock
add
shl
shl
push
in
imul
mov
jb
mov
push
jns
jo
sti
je
jmp
cmps
js
rol
and
daa
sar
in
popf
jne
adc
aam
pusha
or
mov
xor
mov
pop
pop
jno
push
mov
inc
icebp
add
add
dec
jg
ja
sbb
mov
and
push
or
mul
jne
xchg
xor
jbe
retf
mov
add
sub
ja
nop
or
loopne
out
popf
push
addr16
mov
add
mov
push
es
jnp
mov
jns
mov
imul
mov
and
add
inc
sbb
cli
jl
sbb
in
das
xchg
pop
imul
add
sbb
cmp
loope
xor
out
fild
xchg
lock
pushf
std
sbb
and
gs
enter
(bad)
dec
mov
pop
out
xor
fsub
std
jge
mov
push
data16
mov
inc
dec
iret
imul
pop
inc
repz
stc
gs
inc
push
xchg
fld
es
push
adc
clc
int3
ss
xor
icebp
(bad)
cmp
jmp
xor
dec
xor
nop
jnp
fist
and
div
in
push
or
mov
fdivr
jbe
push
or
icebp
mov
add
dec
jns
or
xchg
ja
in
xchg
ja
pushf
or
pop
int
sbb
out
sar
retf
mul
out
pop
push
test
push
movs
and
mov
cmp
inc
lock
(bad)
call
stos
inc
ins
and
movs
out
jne
cmp
jmp
gs
fwait
or
lods
push
es
sahf
jbe
mov
mov
addr16
and
push
outs
dec
fdiv
call
push
ins
in
xor
in
jb
xor
or
push
int
mov
je
inc
arpl
dec
xchg
out
and
iret
pop
mov
ret
into
mov
js
test
pop
lea
gs
out
jnp
popf
xchg
int3
mov
xchg
mov
xor
stos
or
pop
jne
daa
cmp
push
pushf
inc
ins
push
fistp
jb
jnp
push
adc
dec
scas
xchg
cmp
xor
jle
dec
div
dec
mov
jns
xor
(bad)
dec
mov
add
push
(bad)
jp
sbb
inc
mov
test
mov
addr16
mov
pop
psubw
pop
sar
scas
push
dec
sahf
in
xchg
mov
pop
sub
jmp
ja
mov
movs
sub
pop
call
adc
inc
mov
mov
push
xor
cmps
push
xor
dec
cwde
sub
inc
clc
into
fldcw
rcl
bound
mov
xor
jns
pop
mov
cmps
lea
push
sbb
jne
pushf
mov
in
mov
mul
imul
jb
jmp
and
test
xor
jp
clc
retf
jne
pushw
out
movntq
inc
test
in
dec
aaa
xchg
ret
jne
mov
add
aam
add
mov
loopne
jae
icebp
out
imul
jecxz
(bad)
cmp
mov
fist
and
inc
fdivr
mov
push
fwait
mov
idiv
inc
mov
mov
xchg
cmp
aaa
ret
iret
xchg
icebp
jo
pop
rcl
and
pop
jne
push
and
jbe
xchg
test
mov
dec
pusha
cmps
adc
push
div
sub
jo
iret
jnp
popf
in
jge
push
lock
(bad)
out
fs
daa
inc
cmp
je
jbe
lea
test
jne
test
jbe
xchg
pop
mov
mov
jo
mov
mov
scas
int
xor
and
ret
jne
mov
xchg
xchg
mov
sahf
push
lock
movs
mov
aaa
push
ja
mov
mov
mov
push
je
sbb
pop
jbe
mov
add
inc
mov
and
jmp
sbb
icebp
sbb
fcmovb
pop
cmp
jmp
mov
mov
mov
iret
sub
mov
jle
mov
mov
icebp
mov
sahf
test
pop
push
movs
retf
push
push
mov
shl
mov
mov
or
jmp
xor
jnp
cmp
xchg
jmp
mov
mov
sub
cmp
inc
inc
add
jns
xchg
adc
pop
jle
pop
inc
adc
xor
cld
mov
aas
push
cmps
and
sbb
dec
std
mov
out
mov
enter
enter
imul
shr
and
or
jp
sbb
(bad)
repnz
cmp
out
pop
clc
mov
xor
fwait
pop
add
push
iret
call
dec
mov
inc
xor
(bad)
mov
test
(bad)
(bad)
push
mov
xchg
in
lods
cdq
icebp
lods
lea
mov
sbb
aas
ja
sbb
or
and
sub
lock
mov
shr
cli
push
mov
cmp
mov
gs
rcl
lock
rcr
stos
and
stos
cmps
jbe
xchg
retf
cmp
fbld
arpl
add
fist
xchg
cdq
mov
fiadd
js
cmps
jle
mov
pop
out
es
movs
fdecstp
xor
push
outs
psraw
jns
pushf
push
mov
xchg
cmp
js
xor
ins
and
in
push
ins
mov
push
push
push
jno
shl
mov
xor
jp
and
movs
aad
or
inc
jge
ins
push
push
mov
adc
scas
inc
and
test
fcmove
adc
xor
test
clc
pusha
pop
movs
iret
jne
pop
movs
lea
mov
lea
ja
popf
loope
icebp
jo
cmc
push
dec
es
test
xchg
inc
xchg
push
mov
test
xor
aam
mov
cmps
rcl
sub
hlt
lock
fbstp
fwait
lds
(bad)
(bad)
xchg
lock
sti
into
shr
jae
cmp
scas
mov
dec
mov
pop
ror
call
inc
mov
jo
in
les
jmp
hlt
fs
push
(bad)
ror
lock
xchg
imul
adc
cmp
lods
mov
lds
push
xchg
dec
test
xor
push
sar
inc
fstp
mov
mov
(bad)
shl
ja
xchg
dec
mov
sbb
leave
mov
ja
loop
xchg
lock
fsub
push
jae
sbb
mov
mov
jno
pop
cmc
push
push
mov
push
xor
mov
lds
pop
sbb
je
ret
push
jmp
push
push
cli
and
jl
pop
hlt
pop
mov
sub
xor
iret
ja
das
test
cmp
aad
xchg
fadd
dec
out
push
pop
lock
std
cdq
sbb
jo
add
out
jae
adc
cmp
out
sar
gs
pusha
mov
mov
cli
xchg
inc
push
aas
call
jne
sbb
sub
jne
jne
popf
xchg
mov
xor
aad
ins
sub
dec
es
cmp
mov
cmp
mov
hlt
mov
pop
loop
out
mov
or
jle
inc
add
je
mov
cmp
adc
mov
add
mov
jne
dec
retf
dec
or
mov
mov
mov
in
in
repz
xchg
xchg
inc
mov
adc
xchg
xor
cmp
retf
add
mov
bound
lock
lods
lds
push
sti
jmp
add
xchg
hlt
xlat
dec
cmp
pop
or
std
loop
das
cmps
jl
sahf
js
mov
xchg
or
jecxz
out
mov
or
mov
jae
or
retf
xor
sahf
push
adc
xchg
jns
jecxz
int
xchg
jbe
out
mov
push
out
ja
into
rcr
mov
lock
lods
imul
call
je
lds
aas
cmps
clc
test
outs
test
mov
inc
loope
sub
cmp
sbb
aam
mov
lds
int
iret
cmp
shl
sub
popa
inc
mov
in
mov
mov
sar
xchg
call
xor
out
or
retf
and
test
mov
mov
stc
adc
sar
pop
cmps
lahf
mov
stos
ins
inc
jge
and
jb
mov
scas
stc
lock
in
(bad)
pop
mov
das
mov
(bad)
jbe
mov
cmc
cmp
cmp
mov
push
jecxz
add
and
stos
mov
ins
add
imul
cmps
jno
adc
clc
lds
and
mov
push
mov
mov
jmp
cs
test
cwde
add
loopne
adc
mov
or
pop
mov
aaa
mov
dec
in
push
lahf
jno
bound
xor
sti
and
xchg
lock
ja
jecxz
nop
push
out
xor
mov
mov
retf
(bad)
xor
mov
or
pop
inc
lahf
aas
mov
addr16
xor
xchg
ror
ins
stos
fist
xchg
lea
(bad)
idiv
xor
popa
stos
std
xchg
fdivr
aaa
mov
sbb
adc
shr
lods
test
lock
loope
xlat
sub
inc
pop
xlat
xchg
inc
or
jg
push
ja
nop
mov
cmps
mov
das
sub
icebp
and
jmp
cmps
rol
mov
push
mov
dec
adc
leave
adc
ja
aas
adc
lods
cli
mov
push
xchg
arpl
test
leave
out
das
xchg
sub
adc
add
push
mov
mov
fisub
outs
inc
push
mov
leave
mov
xchg
loopne
dec
lods
mov
push
push
xor
inc
mov
pop
daa
xchg
sbb
mov
popa
sti
(bad)
mov
imul
ret
dec
mov
mov
mov
repnz
or
mov
sbb
or
mov
rcr
fidiv
adc
sbb
cdq
int3
sbb
and
ds
mov
fmul
push
(bad)
xchg
mov
out
adc
adc
mov
or
ja
ins
iret
xchg
retf
dec
xchg
lods
cmp
jo
ja
sbb
xchg
sub
imul
add
cmp
push
sub
rcl
icebp
repz
dec
btr
jno
loopne
add
add
rol
icebp
add
adc
mov
inc
ss
mov
popa
into
inc
movs
pop
adc
inc
(bad)
pop
je
pop
push
xchg
push
xor
fadd
xor
ss
(bad)
cmps
jnp
pop
inc
jl
pop
mov
rcl
shl
jmp
data16
jg
adc
pop
dec
retf
jne
jmp
jnp
adc
cmp
aam
xor
(bad)
imul
lock
cmps
jecxz
mov
xor
sbb
mov
ss
int3
cwde
ins
or
call
add
cmp
inc
lahf
mov
xor
jmp
repnz
fucomip
jnp
mov
mov
test
pop
dec
cmp
add
ja
rcl
mov
mov
adc
cmp
ficomp
mov
leave
movs
or
jo
mov
out
mov
mov
mov
push
mov
fild
test
sub
push
sbb
scas
mov
push
or
xchg
aad
sahf
push
arpl
mov
data16
sahf
les
inc
leave
dec
hlt
lods
jne
arpl
adc
adc
pop
in
mov
jo
adc
add
clc
ror
add
mov
call
sub
xchg
pusha
hlt
inc
mov
push
repnz
fisttp
xlat
sti
pop
pop
adc
lahf
jae
pop
cmp
mov
lods
sbb
dec
xor
je
imul
dec
xlat
inc
mov
mov
dec
leave
cmps
jmp
add
inc
mov
mov
imul
sbb
jo
daa
dec
shr
and
jbe
dec
pop
lods
and
adc
inc
jno
mov
idiv
xor
fidivr
(bad)
and
mov
rcr
das
fs
loopne
mov
xchg
stc
add
adc
jecxz
nop
xor
and
dec
out
mov
push
cmps
mov
adc
mov
lock
cmps
dec
fwait
imul
dec
je
lods
adc
out
repnz
pop
add
push
retf
fs
jae
in
mov
repnz
icebp
loop
push
imul
or
pop
mov
movs
sub
lods
sbb
sahf
sar
or
jns
jbe
shl
mov
retf
jnp
data16
not
stos
lods
int
jo
jno
xchg
mov
cmc
jge
rcl
aas
stos
hlt
mov
mov
pop
sti
pop
mov
push
cwde
inc
aaa
lock
and
iret
aas
mov
je
sti
jl
ja
ficomp
std
rol
call
sbb
fs
nop
mov
inc
inc
sub
inc
imul
cdq
pop
jmp
inc
mov
int
jbe
or
jo
push
fldenv
scas
and
ja
(bad)
sbb
and
call
push
push
clc
sub
lods
jo
inc
icebp
rcl
cld
lods
jb
mov
sar
pop
lock
es
or
adc
movs
mov
jnp
leave
enter
leave
mov
dec
in
add
es
mov
sbb
scas
xchg
mov
(bad)
mov
fs
add
inc
mov
jne
jnp
push
ja
test
or
retf
fidivr
lock
cld
push
repnz
dec
mov
push
cmp
mov
push
cs
and
jbe
add
or
cwde
out
jle
loop
pusha
mov
adc
xchg
cmps
je
pop
push
das
mov
or
adc
sar
loopne
mov
push
push
xor
enter
lock
fwait
dec
pop
fidiv
clc
xor
jl
cmp
loope
enter
fsub
jae
je
adc
sub
jl
mov
inc
mov
jnp
pop
cld
mov
jbe
in
shl
jmp
lds
jbe
out
inc
je
call
inc
push
mov
xchg
lock
ss
and
cmp
test
addr16
ret
xchg
gs
dec
push
pop
sub
or
mov
movs
jae
mov
jne
push
adc
mov
push
add
mov
xor
add
cmp
lock
sub
sub
out
push
scas
(bad)
push
movs
fdivp
outs
jne
xchg
adc
adc
aad
add
push
sar
shl
sub
mov
cmp
movs
xchg
xor
ja
sub
jmp
or
shl
cmp
mov
fidiv
je
rol
xchg
mov
(bad)
mov
leave
adc
and
push
in
clc
jecxz
sbb
xchg
std
je
shl
or
add
icebp
jno
cmp
stc
ja
call
adc
pop
inc
popa
call
mov
daa
ja
pop
sub
xchg
ret
loop
pop
lock
push
sbb
adc
into
mov
je
fs
adc
mov
and
test
ja
cmp
pop
(bad)
jb
lods
mov
push
jecxz
sti
out
jle
push
outs
lahf
shl
mov
mov
ins
add
mov
loope
mov
js
adc
sbb
mov
and
adc
dec
out
sub
add
or
xor
icebp
(bad)
xchg
sbb
ins
ret
lock
pop
jg
sub
mov
xchg
loopne
fild
adc
jg
inc
shl
(bad)
loope
dec
dec
xor
mov
inc
mov
add
ja
and
jecxz
out
mov
and
adc
push
lea
add
ja
sub
cli
adc
or
dec
mov
push
ja
dec
pop
mov
dec
sub
sbb
add
ror
xor
xor
sub
xor
mov
call
cmp
lds
cld
icebp
jo
sub
fsubr
scas
icebp
sbb
aaa
dec
pushf
pop
les
mov
push
jne
jne
or
in
add
fst
call
fmul
or
jbe
jecxz
sahf
cmp
xor
jne
(bad)
jle
inc
push
ins
mov
jbe
(bad)
mov
cmps
mov
mov
adc
lahf
mov
add
lods
pop
nop
push
jne
fwait
cs
jbe
popa
sbb
pop
xchg
fwait
imul
mov
fbstp
pop
dec
icebp
ds
rcr
pusha
retf
mov
cwde
sub
mov
sub
mov
iret
hlt
pop
adc
lods
mov
pop
aam
stos
aam
je
nop
xchg
xor
rcl
and
movs
jmp
add
fistp
jmp
leave
(bad)
or
and
mov
out
lock
sahf
pop
jne
pop
xchg
add
mov
jae
and
mov
jns
and
push
cmp
push
into
pop
js
inc
add
dec
ds
je
add
jge
sub
sbb
sbb
ja
jmp
sub
mov
mov
sbb
cwde
int
mov
loop
fwait
out
jns
in
das
(bad)
mul
icebp
loop
xor
in
xor
push
mov
inc
stos
xchg
push
aaa
pop
xor
or
outs
mov
ds
mov
mov
xchg
retf
pushf
lea
or
lahf
add
cmps
fistp
cmp
arpl
pop
ins
lea
mov
fidivr
pop
lock
in
jg
dec
ja
stos
xor
jne
je
xchg
mov
mov
jge
sub
add
and
dec
pop
addr16
dec
cld
push
jle
jbe
add
and
xchg
xor
daa
ja
or
mov
dec
test
or
xor
sub
mov
sbb
adc
inc
pop
out
xor
jg
pop
add
add
iret
imul
adc
icebp
mov
inc
or
sub
inc
dec
jne
or
outs
jbe
(bad)
push
sar
add
inc
mov
imul
fcomp
pop
mov
dec
mov
mov
add
retf
imul
out
inc
mov
pop
mov
and
dec
sbb
cmp
je
ror
stc
inc
mov
inc
jp
push
mov
xabort
ja
add
jg
icebp
(bad)
push
sar
(bad)
dec
in
mov
sahf
imul
mov
push
add
mov
movs
mov
mov
xchg
inc
ror
lds
xor
xor
outs
arpl
rol
xchg
cmps
mov
cdq
scas
ja
bound
loopne
mov
js
idiv
iret
mov
(bad)
cmps
shl
add
loopne
fidiv
pop
jae
in
pop
jg
mov
jnp
lods
rol
js
mov
adc
xchg
mov
or
popf
fidivr
movs
mov
test
add
out
jbe
rol
or
sbb
sbb
inc
hlt
mov
xor
out
jbe
ins
jmp
sahf
jmp
sbb
lsl
in
sub
enter
and
mul
sub
imul
jl
and
out
mov
jbe
jne
jle
out
sbb
or
mov
aaa
sti
cld
ins
retf
ja
mov
add
cld
shl
cdq
repz
sub
or
mov
xor
mov
sub
dec
inc
mov
or
inc
rcl
pop
jne
xor
mov
dec
xchg
mov
xchg
ror
add
inc
je
enter
hlt
dec
int
cmps
mov
cmp
fwait
lea
jmp
mov
add
and
cmp
adc
jno
mov
lock
icebp
add
add
push
(bad)
push
movs
inc
icebp
inc
(bad)
scas
adc
add
retf
lock
pop
or
call
cmp
test
push
dec
mov
push
lock
mov
pop
pop
je
in
fcomp
push
ja
test
sbb
dec
ficom
mov
retf
icebp
in
inc
fs
push
pop
mov
scas
push
mov
scas
and
arpl
in
ins
push
ss
rcr
push
loop
mov
sub
and
jae
mov
push
pop
mov
leave
inc
lds
aas
inc
pop
pop
dec
mov
inc
ja
adc
call
pop
adc
cmp
icebp
push
and
(bad)
clc
pushf
test
inc
adc
dec
test
cmp
aas
cmp
jne
iret
add
jne
push
es
push
out
jns
(bad)
out
add
je
movs
xchg
jnp
loopne
movs
dec
cld
iret
jle
clc
ja
cmp
cld
or
xchg
pop
call
pop
or
mov
gs
sub
dec
push
xchg
xor
push
jne
jp
mov
movs
jp
dec
outs
push
idiv
out
lods
in
sbb
aas
mov
mov
repnz
xor
push
mov
pushf
cmp
pop
inc
xchg
gs
xor
jne
int
jb
in
(bad)
pusha
dec
xchg
ins
push
mov
dec
aaa
call
push
pop
adc
cmp
push
pushf
mov
and
xor
jl
mov
stos
mov
sub
mov
push
pushf
sbb
ja
lods
in
cli
and
pop
dec
jmp
ds
arpl
lahf
cmp
jns
fist
pop
leave
dec
add
sbb
ret
aad
cmp
iret
mov
lock
mov
push
test
lea
popf
xlat
test
jbe
ss
ret
adc
mov
cmp
pop
aam
nop
movs
xchg
call
mov
icebp
outs
mov
dec
push
adc
mov
push
sbb
imul
jne
xor
repnz
and
mov
adc
jns
ret
aaa
cmp
mov
call
movs
cdq
test
and
pop
inc
jo
loopne
shr
push
mov
fsubr
or
dec
mov
mov
je
jne
mov
sub
clc
cdq
sbb
adc
dec
mov
nop
retf
inc
out
sbb
imul
mov
jg
pop
inc
pop
or
ja
mov
out
repz
test
aad
test
stos
add
mov
pop
out
shl
mov
or
mov
ja
jbe
movs
sahf
xchg
fwait
stc
jnp
xchg
sbb
xchg
icebp
and
push
scas
mov
mov
sub
or
(bad)
retf
sar
mov
dec
test
lock
ja
dec
sbb
les
cmp
scas
xchg
imul
leave
lods
neg
repz
pop
or
adc
xchg
lock
mov
pop
cmps
xor
or
outs
out
and
jecxz
dec
xor
jp
mov
je
mov
mov
xchg
cmps
(bad)
js
add
jp
cmp
sub
into
das
lock
stos
adc
mov
inc
(bad)
data16
fs
jns
fwait
movs
fld
and
out
inc
mov
xchg
xor
(bad)
jno
adc
sbb
loopne
add
xchg
xor
stos
clc
imul
cwde
popf
add
jg
mov
out
test
aaa
cmp
mov
leave
outs
pop
shl
fadd
es
dec
(bad)
xor
test
(bad)
outs
push
mov
mov
out
push
jmp
fwait
and
inc
xlat
and
xchg
mov
add
scas
push
mov
and
push
mov
xor
ret
inc
fisubr
pop
mov
jg
xchg
(bad)
jmp
push
in
xchg
lock
add
imul
add
xor
popa
mov
das
xor
fdivr
sbb
cmp
ja
je
out
mov
aaa
cwde
mov
dec
xor
(bad)
adc
xor
add
mov
rol
cmp
xchg
sbb
idiv
inc
hlt
add
push
pop
out
iret
cmp
lds
movs
pop
xchg
cdq
jno
inc
pop
mov
repnz
inc
jmp
or
mov
into
repz
mov
in
dec
sahf
popf
inc
sub
je
push
nop
dec
loopne
fimul
fwait
pop
dec
cmp
fmul
mov
(bad)
and
mov
daa
int3
test
(bad)
push
inc
mov
jbe
xor
mov
mov
sti
ja
jmp
mov
sbb
out
add
mul
popf
jo
push
xchg
sub
xor
jbe
dec
mov
sbb
or
ja
adc
into
ja
fild
mov
mov
out
pop
jbe
cmp
jbe
in
jmp
jl
das
push
inc
jne
fcmovnb
jne
leave
mov
pop
enter
mov
(bad)
test
lock
or
jg
cmp
stos
lea
fidiv
mov
pop
xchg
xor
add
mov
into
or
test
or
into
push
jbe
movs
dec
mov
mov
cmps
inc
xchg
cmps
int3
jp
shl
add
loope
inc
pusha
mov
mov
mov
mov
push
xor
movs
jbe
repz
ja
(bad)
leave
jge
neg
jo
lods
push
call
inc
repnz
scas
icebp
or
mov
idiv
push
dec
je
mov
mov
data16
test
icebp
test
(bad)
in
fcmovb
in
movs
jp
int3
jne
aaa
mov
jbe
or
in
mov
scas
push
xlat
(bad)
or
lock
js
pop
mov
aaa
sub
mov
js
xchg
or
mov
mov
(bad)
pop
mov
pusha
imul
(bad)
jl
clc
push
mov
push
sub
test
and
lock
addr16
mov
shl
add
pop
ret
mov
xchg
fsubr
jne
inc
pop
lods
jbe
or
out
mov
xor
test
xor
scas
je
add
cmp
fstp
scas
ret
and
xchg
cmp
inc
jns
mov
jae
push
push
xor
sbb
sar
adc
push
aaa
lods
inc
cmp
jp
mov
sbb
mov
test
enter
cli
mul
out
outs
fisttp
hlt
into
mov
sub
jne
icebp
cmp
xchg
mov
mov
mov
jbe
repnz
and
pop
mov
cld
jne
lds
mov
and
push
rcr
les
push
pop
xchg
push
cmp
icebp
(bad)
jno
mov
inc
fistp
push
cld
daa
ds
enter
popf
xor
sub
sub
ja
sar
popa
imul
jne
in
call
rol
push
gs
adc
mov
mov
sub
adc
fadd
mov
enter
loopne
fisub
jne
pop
std
clc
ja
xor
mov
push
pop
mov
sbb
sub
jge
loop
fs
mov
xchg
or
or
sahf
adc
cld
hlt
stos
xchg
and
cmp
fdiv
jmp
mov
push
pop
dec
repz
xchg
sbb
repz
sub
mov
cs
mov
jns
enter
xor
pop
int
xchg
inc
xchg
ret
je
sub
mov
mov
pop
cmp
gs
std
nop
repnz
dec
jmp
or
add
icebp
fs
ja
ja
xchg
mov
mov
std
lock
mov
inc
ror
int
mov
xor
daa
mov
and
jne
jbe
iret
js
cmp
into
adc
dec
gs
jae
add
je
scas
movs
jmp
mov
inc
xor
mov
sbb
shl
pusha
scas
inc
movs
cmp
dec
fcom
jl
dec
lock
xchg
xchg
inc
lods
push
mov
jbe
add
cwde
add
lahf
jmp
scas
icebp
or
test
xor
test
aas
pop
sbb
inc
jne
stos
push
jno
sbb
fidiv
dec
add
es
push
push
out
push
sub
icebp
mov
sbb
mov
pop
mov
dec
jo
ror
loope
ja
out
aaa
jo
xor
sub
dec
adc
dec
(bad)
std
dec
push
cmp
(bad)
je
xor
in
repz
cli
push
clc
mov
iret
xchg
or
ss
pop
ja
imul
mov
out
pop
stc
icebp
pop
aaa
popf
jb
sbb
add
jne
adc
icebp
dec
clc
xchg
arpl
stc
push
mov
cmp
dec
mov
jge
and
mov
pop
cmc
shl
call
dec
mov
(bad)
sti
push
pop
fimul
out
mov
ret
(bad)
mov
jmp
mov
out
test
jmp
dec
inc
(bad)
idiv
cmp
jae
pop
adc
sar
ja
sub
out
lods
cld
mov
repz
repz
icebp
dec
hlt
sbb
jno
popf
and
pop
jne
mov
dec
dec
pop
cmps
inc
dec
xchg
clc
cmp
je
in
pusha
sub
movs
loope
inc
pop
push
xor
xchg
push
and
jg
aad
dec
xchg
daa
icebp
jp
neg
pop
in
or
(bad)
dec
cmp
mov
sub
or
popf
jl
test
mov
mov
and
pusha
mov
mov
jb
jle
pop
or
shr
sahf
repz
mov
add
mov
and
inc
adc
lods
data16
cmps
je
sbb
jbe
xor
loop
push
mov
mov
in
aam
ins
inc
push
ja
movs
inc
mov
mov
(bad)
lea
inc
mov
ja
and
sti
dec
or
jno
inc
inc
jmp
je
test
ins
jae
xor
xchg
nop
je
hlt
fs
fidiv
mov
mov
fidiv
repnz
dec
ret
int
mov
push
fyl2xp1
ret
or
add
gs
out
pop
je
add
shl
sti
push
cdq
xchg
add
icebp
stos
jge
in
data16
jno
xchg
mov
xor
or
add
jnp
into
icebp
mov
xchg
dec
cmp
data16
retf
psrad
pop
fcom
rep
dec
xor
(bad)
pushf
ja
pop
mov
dec
jl
scas
mov
test
jle
jmp
repz
add
movsx
(bad)
int
pushf
js
lock
xor
cmp
xor
and
aaa
push
jne
mov
xchg
xlat
mov
mov
inc
jne
repz
fldcw
int3
mov
or
or
nop
fild
cwde
push
cmc
jno
cmp
div
jmp
mov
push
mov
sub
mov
inc
add
icebp
fcom
adc
jb
adc
imul
fistp
lahf
mov
sbb
call
fdivr
lahf
ja
fdivr
cld
in
sub
fist
xlat
jecxz
sbb
mov
shl
adc
loop
mov
iret
xchg
jl
xchg
test
aas
sbb
test
dec
push
push
xchg
mov
pop
add
(bad)
(bad)
adc
gs
lea
cmp
cmp
xlat
xlat
xchg
or
shr
lahf
lea
cwde
mov
outs
(bad)
aam
icebp
add
dec
sbb
mov
add
add
leave
out
jb
lock
jno
das
pop
test
and
or
cmp
scas
fwait
push
jns
ficomp
sub
pop
ins
mov
test
mov
movs
push
mov
outs
xchg
push
jbe
dec
clc
mov
aas
push
jns
adc
cmps
cmp
sub
in
dec
xor
add
cmp
pop
mov
sti
std
dec
pop
ret
sub
inc
(bad)
arpl
mov
jp
pop
or
add
jnp
dec
loopne
or
(bad)
sbb
ja
stos
add
mov
ins
int3
shr
jge
inc
arpl
push
mov
data16
(bad)
ror
test
cmps
cld
lock
sub
add
imul
cmc
ss
lock
push
dec
jno
and
test
leave
dec
jae
push
outs
jl
outs
jne
mov
or
cld
mov
jbe
cmp
xchg
ficomp
out
xor
cmp
xchg
sub
cmp
cmp
mov
jne
cmp
push
sub
lods
lock
inc
mov
repnz
mov
sub
daa
mov
lock
xor
jae
mov
arpl
adc
jecxz
icebp
(bad)
movs
ficomp
test
xor
pop
mov
or
jge
imul
adc
shl
sahf
sbb
xchg
mov
push
stc
mov
pop
cmp
sbb
mov
xor
retf
cmp
jp
or
(bad)
out
jmp
mov
sbb
(bad)
ffreep
and
jnp
pop
xchg
mov
js
in
push
aaa
xchg
jbe
cmp
iret
sbb
sub
mov
ficomp
add
jmp
mov
jp
push
push
jne
xor
sbb
in
popa
pop
inc
jne
aas
sbb
sub
test
hlt
cmp
shl
dec
sbb
xlat
jo
leave
push
jmp
lea
pop
ror
xor
mov
call
sbb
stos
test
mov
(bad)
push
bound
fcom
mov
xor
dec
sti
mov
mov
call
enter
sbb
xchg
pushf
sub
ja
mov
mov
dec
sbb
outs
jmp
mov
and
or
dec
push
jbe
sahf
jmp
push
xchg
(bad)
(bad)
mov
cmc
cli
lds
icebp
fsub
mov
and
ja
loopne
ja
fcmove
(bad)
inc
push
mov
popa
loope
cmp
or
pop
inc
scas
dec
ret
mov
ficom
sub
jbe
ss
push
cld
push
xchg
(bad)
push
idiv
dec
aad
push
mov
jo
push
sub
pushf
fld
dec
div
pop
popa
dec
out
stos
div
rol
mov
and
jne
pushf
sub
jbe
test
fs
mov
std
add
cs
jl
mov
mul
cmc
mov
dec
adc
and
out
icebp
adc
sar
enter
dec
pop
in
je
mov
repz
jle
jbe
mov
hlt
lods
or
cmp
xor
dec
icebp
mov
cwde
jo
pop
sbb
repnz
jno
push
pop
inc
mov
dec
mov
pop
mov
dec
xor
(bad)
hlt
data16
inc
xlat
stos
fld
aaa
add
repz
inc
ror
cmp
mov
sbb
es
out
and
out
leave
pop
out
call
dec
repnz
cmc
mov
mov
jmp
mov
sub
pop
or
(bad)
das
int3
movs
jae
pushf
pop
dec
mov
rcr
and
xchg
inc
pop
xchg
int
aad
sub
xchg
loopne
push
lock
cmp
jnp
push
pop
ffree
test
push
mov
and
loop
cmp
es
mov
movups
jl
sub
popf
mov
imul
ds
mov
fisub
push
cli
(bad)
aaa
inc
mov
dec
push
ss
jmp
push
or
mov
mov
cmp
pop
sbb
int3
(bad)
jo
dec
jg
ins
push
std
sbb
lea
icebp
or
jnp
enter
sub
fild
push
shr
icebp
lods
push
loopne
sbb
cmp
in
or
(bad)
cdq
loop
xor
test
pop
test
dec
mov
or
dec
jno
adc
mov
sub
jae
or
cdq
inc
out
mov
loopne
jno
mov
dec
data16
or
pop
lock
pop
pop
iret
or
in
test
cmp
inc
fwait
jmp
icebp
mov
fdivr
into
jnp
jl
imul
icebp
stos
add
bound
jl
je
popf
dec
push
cs
mov
or
push
jmp
shl
dec
shl
not
jmp
adc
test
ror
cmps
outs
popf
xchg
pop
add
idiv
cmp
dec
sub
ds
pop
sub
jne
inc
int
ja
sub
lds
(bad)
jge
mov
xor
ret
mov
mov
cmp
in
jae
shr
jmp
mov
and
mov
jno
jbe
or
out
push
pop
mov
pushf
push
out
ret
out
jg
add
callw
push
das
lock
movd
out
cmp
(bad)
sub
add
je
add
cmp
and
xchg
mov
jp
sbb
inc
idiv
(bad)
sub
sbb
xchg
xor
cmps
xchg
ja
(bad)
test
movs
mov
frstor
adc
mov
je
lock
leave
imul
push
mov
loopne
fst
lock
out
xchg
xchg
(bad)
call
xchg
cld
cmp
xchg
jmp
mov
arpl
stos
inc
add
jbe
aas
ret
ficom
pushf
push
and
mov
sub
jecxz
dec
xor
mov
sub
xor
popa
ins
sub
aam
mov
aad
jp
imul
dec
mov
xchg
mov
jmp
ret
cmp
fidivr
scas
les
shl
inc
sar
lods
ror
xor
pusha
push
lods
out
shr
dec
jnp
jne
cmp
push
imul
jnp
pop
into
jns
iret
push
mov
movs
enter
adc
xchg
icebp
fs
mov
cmp
mov
sub
pop
cmps
cmp
cmp
test
je
(bad)
jg
jl
add
outs
repz
pop
sbb
mov
sahf
pop
mov
je
rcl
jbe
mov
movs
or
mov
sti
pop
ja
pop
push
cmp
mov
aaa
(bad)
jl
lock
mov
jmp
in
aaa
dec
xor
fnsave
imul
ja
push
cmp
jmp
mov
cmps
aad
fadd
mov
sbb
call
js
cmc
not
lock
gs
popf
out
std
daa
mov
iret
je
xor
leave
ja
add
and
fs
mov
mov
jne
xor
out
shl
jmp
jl
dec
mov
in
enter
or
jbe
retf
mov
lea
sbb
push
das
mov
mov
mov
icebp
fld
popf
cmp
pmaxub
vpxor
dec
into
stos
mov
push
inc
cmp
cmp
jp
sbb
sub
mov
add
pop
fisub
pop
fdiv
shr
cmp
mov
add
je
(bad)
int
sub
out
mov
inc
int3
or
dec
lock
mov
push
mov
mov
pop
aaa
push
and
out
cld
iret
or
xor
pop
cmp
ficom
lea
xor
sub
fst
push
cld
je
pop
push
jne
add
ror
ret
lock
cld
call
add
mov
xor
adc
jbe
(bad)
cli
into
enter
enter
mov
and
sbb
sub
mov
or
fldenv
jbe
adc
je
int3
push
mov
add
jle
sbb
aas
jle
sub
ins
retf
pop
mov
das
inc
and
ret
add
mov
fcomp
cmps
imul
cmp
and
je
push
(bad)
es
dec
addr16
mov
dec
or
aam
scas
mov
ds
add
stos
ins
ja
in
mov
add
push
test
or
out
dec
pop
push
xchg
retf
inc
add
xor
retf
fdiv
mov
sub
xchg
out
fld
lock
or
sub
inc
cmps
or
pop
je
or
jno
pop
mov
xor
mov
scas
lea
aam
mov
mov
or
inc
test
fdivr
jge
rcr
lods
cs
pop
enter
mov
(bad)
or
(bad)
cwde
popf
xchg
pop
iret
in
movs
adc
(bad)
shl
mov
adc
push
and
je
jo
test
enter
scas
mov
mov
mov
test
cmp
or
mov
outs
je
out
pop
jbe
(bad)
mov
sti
mov
xchg
imul
mov
les
push
test
out
pusha
call
lea
pop
imul
mov
out
sub
loope
mov
mov
jge
adc
add
je
pop
add
adc
idiv
fs
dec
lea
clc
mov
ret
mov
push
int
retf
jnp
mov
xchg
sbb
hlt
je
inc
jg
jne
pusha
(bad)
leave
ds
push
pop
fild
ds
mov
out
clc
mov
add
stos
mov
adc
jnp
xchg
cld
mov
and
data16
adc
aaa
jle
push
mov
push
mov
test
pop
jle
sar
jl
push
(bad)
icebp
out
inc
jmp
adc
xchg
jo
pop
adc
mov
in
cmps
lock
xor
or
cmp
(bad)
and
data16
mov
and
ins
jns
in
aam
jb
fstp
jne
mov
ins
fwait
cmp
and
scas
dec
cmps
mov
fbld
xchg
fistp
icebp
mov
cld
pop
sbb
mov
into
jp
cmp
icebp
fsubr
xor
pop
repnz
inc
es
je
xchg
(bad)
xchg
mov
and
xchg
rol
pop
cmp
push
jle
retf
xchg
int3
mov
jge
ror
add
jo
cs
lea
in
pop
scas
mov
js
sub
movs
jne
fisubr
outs
lods
imul
adc
xchg
inc
icebp
jmp
mov
mov
ret
mov
sbb
inc
enter
jne
push
push
imul
mov
cmps
jne
pop
retf
fiadd
sbb
mov
dec
std
rep
shl
xor
or
leave
(bad)
jmp
das
clc
xor
xor
movs
sti
push
mov
dec
popf
daa
sub
jns
inc
mov
push
out
adc
cmp
lahf
inc
xchg
mov
les
add
and
jbe
(bad)
test
das
ja
fs
cmp
and
fwait
in
mul
lahf
nop
js
retf
pop
aaa
xor
xchg
adc
xor
pop
scas
inc
gs
jbe
fiadd
retf
aas
bound
adc
push
(bad)
fnsave
js
test
je
pop
mov
fcomp
mov
xor
sub
lock
fldenv
pop
fdiv
jmp
je
xlat
ds
out
dec
xchg
xor
mov
neg
nop
rcr
push
adc
dec
and
bound
mov
call
pop
mov
mov
cs
sti
jne
in
movs
mov
or
mov
loope
cli
int3
daa
jne
jge
bound
adc
jmp
xchg
mov
gs
adc
test
sahf
inc
test
hlt
sub
test
push
out
xor
call
xor
js
inc
test
jb
mov
mov
and
mov
or
loopne
sub
mov
loope
inc
mov
fidiv
int3
icebp
sub
and
jne
sub
jbe
jns
mov
mov
aas
inc
(bad)
ds
mov
je
fwait
rcl
lock
push
or
das
sub
lods
push
mov
cmc
mov
add
jge
mov
test
and
xchg
pop
pop
test
cmp
dec
adc
jl
dec
mov
fbstp
jl
cwde
dec
cmp
jno
hlt
push
push
dec
cwde
daa
gs
mov
retf
cmp
xchg
mov
test
jno
cmp
cmp
and
je
out
jge
or
addr16
push
mov
rol
inc
sub
ja
push
dec
inc
jbe
adc
mov
mov
dec
or
cmp
mov
push
sahf
mov
dec
out
sahf
shl
cwde
push
mov
mov
sub
call
add
lock
push
and
les
popa
cmps
inc
mov
xor
ja
inc
push
addr16
xchg
scas
mov
sbb
dec
add
pusha
push
test
and
push
fwait
push
or
icebp
xchg
in
push
fisub
push
sub
mov
push
xchg
clc
ja
cdq
mov
in
xor
movs
jbe
out
mov
out
and
or
dec
out
in
cwde
int3
clc
add
iret
pop
call
rcl
(bad)
cli
(bad)
in
out
ja
pop
mov
sbb
dec
mov
push
add
cmp
or
retf
xor
in
cmp
popf
mov
sti
sub
push
inc
adc
cmps
sub
arpl
in
or
ss
out
stos
jge
mov
sub
and
push
push
xor
pcmpeqd
dec
xchg
jno
(bad)
mov
mov
xor
and
or
cdq
iret
or
pop
stc
adc
add
jno
in
pop
or
pop
leave
ret
(bad)
xchg
addr16
add
out
pop
mov
mov
push
pop
lock
xor
stos
shl
mov
adc
xor
sar
dec
and
add
out
xchg
fcomp
int3
push
je
sub
push
and
sub
dec
sub
sub
int3
jns
add
(bad)
pop
aaa
outs
dec
xchg
mov
movs
call
lock
jmp
fcmovbe
mov
ret
xchg
test
add
mov
aas
imul
shl
aaa
adc
int
xchg
ja
jp
or
or
dec
test
mov
data16
mov
rol
mov
xchg
jmp
mov
ror
rol
shr
fnstcw
sbb
push
mov
lea
xchg
in
xor
sahf
jae
stos
loope
and
int
inc
xor
xlat
ds
sbb
das
and
mov
data16
sub
xor
sub
nop
xlat
out
jo
fnstenv
xchg
sub
jg
jmp
icebp
imul
inc
xor
jmp
jns
gs
jns
jmp
pop
push
shl
mov
jge
dec
retf
jbe
push
mov
ds
stos
aam
pop
jno
push
ret
pop
nop
cmp
jae
into
sbb
push
repnz
jbe
aad
sub
push
inc
sahf
xor
push
clc
jne
(bad)
pusha
ja
mov
mov
test
cmp
inc
pop
imul
mov
call
jne
or
test
xor
jno
add
cld
cmps
mov
cmp
mov
mov
(bad)
adc
jbe
out
movs
retf
sub
pop
movs
test
jge
add
sbb
mov
lock
inc
adc
js
sbb
pop
shl
jae
add
sbb
mov
jl
cmc
inc
icebp
push
and
out
pop
cmps
jne
adc
inc
push
cmp
repnz
lahf
retf
add
ja
fistp
fnstcw
(bad)
cmc
icebp
aas
repz
pushf
cmc
fnstsw
bound
inc
aaa
in
xchg
call
cld
or
mov
and
mov
icebp
stos
mov
sbb
inc
loope
lock
shr
add
inc
jb
push
push
outs
and
cmc
mov
cli
mov
test
add
bound
out
jnp
add
mov
jo
jl
pop
push
push
int3
das
push
sahf
je
scas
es
iret
sbb
push
adc
jp
mov
loope
jbe
iret
cdq
add
imul
shl
push
sub
adc
std
xor
addr16
or
sbb
jbe
pop
mov
aas
stos
mov
idiv
std
and
jbe
mov
nop
out
(bad)
sbb
dec
imul
inc
retf
jne
mov
aas
adc
imul
cmps
xchg
jbe
in
cmp
jge
jo
pop
or
jmp
mov
dec
sbb
mov
jmp
jmp
mov
and
scas
leave
icebp
mov
add
push
ret
mov
push
add
lock
mov
gs
nop
dec
add
mov
je
imul
repnz
test
cmps
ins
out
inc
fs
pop
retf
test
cmp
sub
(bad)
(bad)
push
mov
lods
outs
pop
shl
dec
lods
pushf
ins
jne
adc
cli
pop
mov
outs
jbe
int
and
sub
push
das
rcr
push
repnz
(bad)
push
pop
ss
jae
jne
cmps
push
jns
jb
in
test
add
std
outs
ss
xchg
pop
sub
jae
and
mov
sbb
and
sub
test
movs
dec
js
cmp
mov
mul
xlat
pop
inc
retf
outs
cmp
pop
add
ja
lahf
mov
sbb
stos
add
icebp
hlt
jnp
dec
and
add
nop
dec
cwde
idiv
push
loop
cmp
jge
stos
in
xchg
test
mov
mov
leave
lock
int3
push
(bad)
mov
(bad)
jge
mov
jg
pop
jecxz
fs
test
jp
pop
dec
(bad)
lea
and
adc
(bad)
(bad)
xchg
mov
fiadd
xchg
je
mov
mov
mov
fcom
std
movs
mov
jmp
lahf
(bad)
jmp
jp
and
call
mov
sub
sahf
aam
mov
outs
add
jno
sub
add
mov
pop
movs
mov
call
inc
call
inc
jnp
and
cmps
jns
xor
xor
xor
or
ret
je
shl
mov
icebp
pusha
mov
xchg
fwait
inc
jl
mov
push
jb
mov
push
ja
call
mov
push
sti
or
iret
in
(bad)
jne
(bad)
xchg
loopne
lods
pop
jp
cld
test
jo
in
mov
pop
and
mov
mov
pop
gs
addr16
pop
push
inc
cmps
outs
mov
je
pop
js
mov
popa
pop
sbb
stos
push
je
cmps
dec
out
je
inc
ins
dec
and
and
mov
imul
aad
xor
mov
jl
je
mov
test
adc
sar
popa
jb
dec
lock
idiv
push
mov
add
(bad)
fdivr
aaa
repz
pusha
dec
sub
sub
test
and
shl
mov
es
xchg
inc
mov
retf
(bad)
icebp
or
stos
pop
lock
shl
in
clc
ja
neg
into
jecxz
sub
mov
and
jbe
mov
cmc
push
idiv
and
stos
jl
xor
sbb
add
out
(bad)
mov
xor
mov
inc
xor
sbb
mov
jae
(bad)
lods
jbe
test
jmp
test
ss
mov
mov
lock
inc
cmc
dec
into
mov
(bad)
sbb
adc
clc
dec
icebp
pop
call
jl
mov
jne
cmp
cmp
aam
sbb
test
sub
sub
sub
xchg
out
xor
jbe
jge
jb
jge
adc
pop
xor
xchg
inc
sbb
mov
mul
ror
fistp
imul
(bad)
jo
aad
cmps
ja
out
push
jno
mov
scas
movs
lahf
lds
xchg
adc
push
in
(bad)
std
movs
hlt
fstp
push
mov
mov
cld
push
fisttp
mov
fidivr
lahf
xchg
pusha
aas
loop
jge
fs
test
daa
addr16
xchg
sub
dec
xchg
aam
mov
push
dec
(bad)
xchg
ins
mov
lahf
pop
sbb
sbb
mov
std
cs
xor
shl
dec
nop
pop
mov
dec
movs
ja
sub
out
jnp
ror
ja
xor
mov
sub
xor
lods
or
xlat
xchg
jbe
mov
mov
mov
dec
test
call
cmp
cmps
mov
je
xor
inc
je
test
and
fld
clc
jb
dec
xor
mov
and
ret
pop
mov
pop
push
sbb
mov
cmp
mov
jmp
mov
out
lock
jle
xchg
movd
test
loope
(bad)
in
in
call
clc
shl
mov
add
cwde
(bad)
cmp
push
sbb
mov
out
js
stc
xlat
and
iret
int3
adc
sbb
or
popa
jmp
push
out
push
aaa
mov
add
or
and
jg
jbe
and
cmp
push
push
movs
push
dec
add
ja
add
popa
sbb
sub
call
mov
test
adc
jmp
xor
pop
mov
add
scas
xor
in
add
xor
sbb
jne
xor
pop
ja
nop
xlat
enter
dec
fld
mov
push
inc
pop
je
fxch
sub
movs
pop
adc
mov
xor
in
mov
jle
ja
mov
xchg
jmp
sub
rcl
cmp
cmp
fdivr
icebp
ds
mov
shr
(bad)
(bad)
dec
dec
popf
data16
dec
test
fs
inc
jmp
sti
pop
push
jno
pop
mov
push
dec
xchg
lock
call
cwde
rcr
imul
icebp
push
xchg
or
push
sar
mov
clc
inc
mov
pop
push
retf
je
push
fadd
mov
pushf
je
sub
push
dec
popa
pop
lock
test
sbb
lock
xchg
shl
and
or
inc
lock
mov
loopne
sub
jne
stos
inc
adc
iret
into
xor
aaa
or
scas
mov
movs
sub
mov
ss
into
je
jae
pop
xchg
aas
lock
in
fmul
std
dec
push
ror
out
push
mov
mov
sbb
outs
data16
cmps
jbe
mov
lock
pushf
inc
mov
or
xor
ret
loopne
mov
(bad)
rol
clc
dec
out
cmp
test
inc
ret
jns
pop
shr
pop
jecxz
inc
test
test
mov
es
xor
dec
idiv
loope
xchg
xchg
jge
mov
dec
cli
sbb
cmp
xchg
je
inc
adc
repnz
ror
in
nop
iret
xor
stc
clc
jne
out
lock
iret
dec
sbb
dec
aas
jbe
movs
popf
jnp
inc
mov
pop
pushf
push
fld
arpl
mov
sar
bound
push
lock
sbb
mov
je
js
sub
aas
and
ja
mov
sti
cld
adc
xor
pop
jno
jle
and
mov
or
retf
jno
cmp
sbb
pop
mov
cmp
sub
adc
mov
loopne
mov
in
retf
retf
mov
lods
push
fdiv
inc
test
jae
loop
scas
mov
xor
pop
mov
push
cs
je
jmp
xor
fdiv
ja
add
and
mov
fisttp
clc
lock
pop
jecxz
jle
mov
pop
jne
xchg
or
or
mov
jne
pop
mov
or
(bad)
icebp
in
aaa
aam
(bad)
lea
lock
into
jmp
ror
mov
mov
test
js
fs
outs
push
push
leave
popa
daa
dec
lea
es
test
xchg
adc
ss
and
jae
jle
mov
pop
or
fcmovu
data16
(bad)
mov
cmc
cwde
pop
fs
sub
ja
(bad)
cmp
movs
in
hlt
aam
adc
jbe
push
jl
push
mov
retf
lds
add
mov
jae
dec
out
adc
mov
xor
adc
mov
js
inc
fwait
push
or
jmp
(bad)
and
mov
sahf
fist
data16
mov
cmp
pop
adc
iret
movs
add
jb
jge
scas
sub
pushf
inc
test
jns
pop
cmp
jbe
mov
aaa
lahf
lods
enter
cmp
js
mov
fimul
xchg
rcr
mov
xor
repz
mov
lods
mov
inc
repz
repnz
jne
jle
(bad)
ja
out
xchg
call
hlt
aad
dec
pop
bound
repz
scas
adc
addr16
lods
jne
jecxz
dec
lea
stos
pop
dec
adc
mov
mov
clc
xor
xchg
shl
cld
mov
cmp
arpl
sub
push
push
fnstcw
ja
jo
inc
out
shr
ins
sub
pop
add
adc
repz
pop
jge
lock
mov
inc
xchg
fbld
ror
retf
fadd
outs
push
cmp
xchg
je
fwait
test
add
leave
mul
test
dec
ja
or
addr16
daa
mov
jbe
dec
mov
jle
sub
mov
fs
jbe
shl
dec
xchg
pop
out
ror
and
dec
mov
adc
inc
mov
jnp
inc
adc
shr
add
xlat
neg
lock
fs
jl
mov
mov
mov
xchg
lock
add
and
mov
mov
into
mov
test
fmul
pop
fwait
mov
out
imul
cmp
ja
pop
jne
jbe
and
repnz
lea
add
lock
adc
dec
or
mov
sbb
loop
jge
les
pop
pushf
je
dec
mov
addr16
xor
inc
sbb
add
scas
addr16
jmp
mov
xor
cmp
pop
inc
aaa
jo
(bad)
into
(bad)
inc
add
mov
jbe
sti
in
jns
iret
loopne
mov
in
cmp
pop
push
cdq
rcl
push
stos
sub
je
scas
sti
cmp
pop
enter
cmc
repz
sbb
ins
sub
or
jo
or
in
jne
scas
fyl2x
test
sub
fsub
inc
ja
rsqrtps
fild
ins
(bad)
fistp
pop
ja
shr
or
stos
lahf
in
sub
xor
stos
xchg
popf
test
cld
out
(bad)
lock
xchg
int3
fdivr
pop
out
icebp
mov
pop
pop
add
mov
or
call
movs
dec
loopne
mov
xor
mov
push
test
pop
sbb
ja
xlat
adc
(bad)
clc
mov
pop
fcmovu
popa
xchg
mov
push
mov
and
cmp
inc
fistp
mov
mov
lock
jne
jg
test
mov
popa
mov
out
fwait
mov
cmp
in
aas
jno
mov
sbb
int
nop
lea
retf
push
mov
push
jl
xor
mov
adc
dec
in
je
cmp
xor
jo
jge
xchg
and
cmps
dec
ja
jns
push
mov
ja
shl
cmp
lods
jbe
push
inc
jl
or
loopne
(bad)
pusha
inc
je
pop
movs
call
xor
ja
mov
mov
push
jmp
push
shr
adc
jne
pop
lock
mov
jle
inc
inc
loop
call
test
cdq
or
push
out
jl
inc
mov
lock
imul
cwde
loope
out
jp
dec
imul
out
ja
jmp
scas
fld
dec
push
mov
(bad)
aaa
dec
int
imul
cmc
daa
lods
lahf
loope
rcl
xor
pop
jmp
lea
cmp
push
stos
pop
push
pop
fnsave
jmp
jmp
bound
jmp
cli
aam
add
ja
pop
mov
imul
jge
mov
push
aad
dec
mov
cs
icebp
add
cwde
push
mov
ret
push
xchg
xchg
movs
icebp
jae
fld
mov
lock
xchg
shr
jno
aam
popa
xchg
lock
jmp
es
cmp
push
lock
fisubr
mov
pop
dec
aam
sbb
fild
repnz
call
push
sbb
jmp
retf
repnz
fst
aas
inc
xor
jbe
sbb
mov
das
jle
sbb
aam
mov
ror
fidivr
xor
mov
add
sub
es
lock
cs
cmp
push
je
aad
mov
mov
lock
repnz
dec
lods
int
mov
je
lahf
pop
ja
jbe
pop
pop
lea
adc
movs
loop
xor
call
jnp
fdivrp
fisubr
or
sbb
(bad)
mov
popf
mov
add
jmp
pusha
push
mov
je
sub
or
inc
and
mov
fwait
stc
or
test
jg
xor
dec
gs
pushf
mov
xor
test
mov
jne
and
sub
jo
sahf
sahf
or
test
push
idiv
adc
rcl
adc
div
or
mov
iret
outs
push
outs
clc
in
push
stos
lahf
imul
jmp
test
icebp
mov
cmps
(bad)
adc
je
mov
jns
fwait
cmp
xchg
in
push
push
mov
push
out
(bad)
fdiv
jle
fdivr
ror
mov
icebp
xchg
cmps
repnz
cmc
xor
ret
jne
aaa
je
mov
dec
scas
jo
and
push
jge
pop
add
stos
jne
jne
sub
pushf
syscall
jg
lods
mov
mov
fdiv
icebp
cld
pop
mov
fidiv
into
data16
rol
enter
mov
push
test
loopne
ds
add
cmp
jmp
mov
mov
mov
xchg
dec
sub
icebp
mov
test
and
sti
mov
call
inc
xor
mov
sar
icebp
mov
in
lock
stos
cmp
ss
in
or
jbe
emms
mov
dec
and
addr16
inc
imul
adc
and
pop
les
outs
je
push
or
inc
push
outs
adc
in
jge
leave
xor
icebp
xchg
sub
sub
popf
jbe
fisub
cld
in
xchg
adc
inc
dec
pop
icebp
cmp
pop
pop
xchg
sub
and
adc
(bad)
lds
(bad)
mov
cmp
ds
stos
ja
jmp
mov
aaa
stc
xor
add
int
into
xchg
jb
dec
fs
mov
repz
adc
fidivr
fdiv
(bad)
cmp
push
jmp
adc
push
jp
adc
xchg
push
sbb
jbe
add
cdq
mov
add
adc
test
add
inc
cmp
in
mov
add
jns
icebp
shr
sbb
xor
mov
sub
sbb
cmc
stos
loopne
ret
jne
mov
inc
push
dec
icebp
icebp
sub
mov
mov
cmps
inc
pop
scas
aaa
and
mov
popa
push
lahf
adc
retf
je
fcomp
sti
mov
sbb
bound
and
dec
sbb
mov
add
adc
retf
xchg
call
mov
xor
fidivr
std
std
test
mov
jbe
sub
pusha
in
popa
jo
jno
mov
and
xor
sub
imul
call
adc
repz
nop
fst
cmp
mov
adc
push
aad
shl
ds
dec
mov
das
pop
je
mov
mov
pop
cli
and
repnz
aaa
inc
jmp
sbb
div
xchg
cmp
por
xchg
es
arpl
inc
mov
(bad)
iret
movs
inc
mov
cmp
jno
ins
retf
and
mov
jo
cmp
sahf
pop
inc
mov
pop
cmp
ret
test
in
add
cdq
dec
lahf
mov
fisub
fnstsw
repnz
adc
xor
push
inc
push
in
icebp
or
cmp
out
dec
out
ins
jmp
int
sub
or
sbb
(bad)
mov
jne
push
or
jl
fst
cmovl
lock
and
popa
xchg
test
push
pop
fidiv
and
jl
std
dec
and
sub
add
clc
fnstenv
jbe
dec
and
mov
inc
fisubr
fst
jb
pop
sahf
jnp
jle
add
cld
fdiv
shr
xchg
ror
mov
sub
mov
push
sub
mov
test
jle
loop
add
mov
pop
sbb
lock
sub
stos
ror
cmp
inc
inc
ins
push
mov
fild
jns
mov
aas
adc
icebp
cmp
mov
lods
cwde
mov
and
je
stos
imul
xor
fbstp
push
ja
lods
pop
enter
stos
push
xor
icebp
dec
and
xor
mov
(bad)
push
cmp
mul
fcmovnu
mov
lods
and
je
test
sbb
inc
imul
idiv
fidiv
cmp
loope
inc
out
dec
stos
mov
fmul
test
mov
jp
adc
call
xchg
rcl
cmp
mov
in
jl
or
lods
cdq
and
mov
in
push
bound
jl
mov
adc
aas
aaa
sub
jp
jne
xchg
mov
jle
pop
push
je
xchg
pushf
lds
xchg
sbb
aas
pop
push
pop
dec
pop
inc
mov
imul
scas
icebp
int3
and
inc
mov
das
jge
dec
push
mov
or
or
outs
sbb
push
out
(bad)
in
jnp
dec
dec
jne
addr16
jbe
xchg
cmps
pop
repz
mov
(bad)
retf
xor
dec
pop
(bad)
pop
fild
fistp
pop
jo
xor
sar
js
je
cmp
add
leave
adc
into
mov
mov
jnp
add
clc
hlt
aas
jne
push
retf
dec
jbe
lods
jb
repnz
jmp
mov
stc
daa
pop
mov
outs
pop
inc
icebp
inc
in
xor
push
pop
(bad)
mov
sbb
xchg
imul
push
sar
fmul
mov
outs
and
into
jbe
jnp
sbb
std
(bad)
add
fmul
fldcw
in
pop
ret
jbe
dec
iret
gs
adc
mov
imul
movs
aam
gs
sub
ins
jbe
jg
jbe
cmp
mov
mov
test
fs
imul
sbb
and
enter
mov
pop
pop
mov
jmp
cld
iret
mov
adc
ror
bound
not
dec
and
xchg
push
call
pop
jae
jmp
in
add
fldenv
mov
or
and
xor
push
xor
into
sti
mov
inc
clc
in
movs
adc
icebp
pushf
xchg
xchg
cmp
test
imul
mov
das
dec
pop
pop
sbb
push
sub
add
fs
xor
imul
sbb
add
mov
ret
ds
xchg
enter
imul
cwde
js
inc
les
xlat
shr
fistp
(bad)
movs
mov
add
sub
adc
mov
nop
add
mov
ja
dec
sbb
pop
pop
sahf
mov
stos
ja
or
sub
retf
dec
push
add
adc
mov
sahf
sub
add
jbe
fucomi
mov
mov
lahf
in
lock
data16
pushf
xor
clc
jbe
pop
push
addr16
mov
in
mov
cmp
pop
stos
lds
pop
mov
mov
xor
and
icebp
cmp
xchg
xlat
push
mov
ret
mov
fimul
adc
out
adc
mov
lock
icebp
push
push
jg
cmps
inc
adc
mov
je
test
adc
jecxz
jne
popf
stc
(bad)
jmp
mov
xor
cmc
adc
fsubr
xor
scas
sub
inc
push
cmp
pop
add
shl
mov
push
into
test
jle
cmp
fisub
adc
scas
mov
jbe
pop
into
int3
mov
hlt
ins
jle
mov
cmp
fabs
cmp
jbe
push
dec
push
pop
test
rcl
popa
int
retf
call
mov
pop
shl
jmp
fst
in
adc
inc
loopne
push
jbe
bound
jno
xchg
mov
mov
add
ss
mov
ror
xor
and
cwde
mov
loop
pop
(bad)
hlt
(bad)
stos
in
fcomp
mov
xchg
rol
mov
je
jge
movs
jb
call
clc
es
scas
aas
jge
cmp
jmp
xor
mov
jns
jmp
(bad)
mov
repz
pop
sbb
rcl
mov
mov
not
imul
sub
cmp
mov
lds
or
jp
(bad)
lock
pop
test
div
xor
push
and
rol
dec
or
outs
jne
push
fs
mov
aaa
lds
mov
add
mov
je
and
ret
pop
sub
loopne
xchg
cmp
out
movs
adc
cmp
mov
mov
cli
icebp
and
mov
push
xlat
cmp
shr
sbb
push
jno
pop
pop
test
cdq
sub
ficomp
fild
repz
cmps
or
je
and
and
lahf
xor
dec
inc
push
mov
lods
mov
(bad)
repz
out
(bad)
or
lock
lods
ficom
mov
mov
ins
pusha
or
xchg
fstp
jbe
sub
clc
stos
sti
out
mov
mov
dec
xchg
cmp
or
sbb
div
pop
lahf
in
je
cdq
pop
data16
xlat
cld
out
pop
inc
or
jbe
cli
pop
sbb
scas
or
push
and
cmp
jmp
mov
mov
popa
jbe
mov
xchg
and
(bad)
fidivr
sbb
outs
cmps
lds
inc
loop
jns
sti
mov
xacquire
pushf
(bad)
cmp
push
lods
jne
pop
stos
nop
jbe
adc
scas
pop
repnz
mov
add
sub
xor
mov
mov
push
or
xchg
lds
sub
push
leave
bound
nop
iret
jnp
adc
adc
mov
or
push
xor
xor
in
xor
push
add
pushf
(bad)
stos
pop
dec
aaa
out
sub
fisubr
(bad)
aas
jne
pushf
cli
mov
mov
push
cwde
jp
pop
sub
mov
sbb
jge
jmp
mov
out
mov
aam
inc
xor
iret
inc
inc
out
mov
pop
cmp
mov
or
sub
push
cmps
daa
dec
je
fsubr
push
dec
push
shl
and
inc
xchg
mov
jbe
adc
mov
sbb
mov
cmp
inc
xchg
icebp
or
icebp
sub
daa
sub
push
sbb
jae
inc
mov
mov
stos
jecxz
push
dec
mov
test
addr16
and
nop
mov
fwait
mov
movs
push
retf
sub
mov
popa
das
ret
pushf
inc
dec
cmp
xchg
xor
push
dec
icebp
into
fcmovnb
xor
dec
shl
dec
icebp
aam
jbe
xor
add
pusha
dec
mov
in
jbe
not
in
mov
dec
mov
push
push
retf
mov
and
leave
out
ret
dec
es
fbld
cmp
int
jbe
sub
or
mov
dec
aaa
jne
popa
pop
bnd
mov
jg
in
mov
lods
in
inc
pop
add
fistp
enter
xchg
aas
mov
cld
popf
icebp
ds
movs
fcomp
dec
jnp
add
(bad)
and
ja
int3
mov
test
retf
dec
xchg
cli
dec
xchg
into
in
mov
mov
pop
mov
lock
jbe
dec
xor
pop
mov
es
dec
pop
jmp
mov
pusha
call
mov
into
add
xchg
int
enter
or
out
inc
aaa
cmc
sub
ja
jmp
push
pop
mov
fwait
push
or
cwde
pop
jne
xchg
push
mov
data16
mov
outs
cmp
xchg
icebp
cs
pop
mov
imul
xchg
je
xchg
xor
inc
inc
or
xchg
adc
mov
fild
in
mov
and
fadd
test
xchg
mov
push
bound
lods
ret
pop
fs
xor
dec
add
test
fwait
xchg
pop
cmp
inc
adc
and
sbb
into
xor
push
data16
adc
inc
lahf
lock
jne
or
xchg
cmp
rcr
dec
adc
fsubr
jbe
mov
shl
pop
out
sub
repnz
stc
mov
mov
popf
lock
xchg
dec
cmps
pop
xchg
xchg
jnp
fldcw
mov
rcr
stos
daa
lock
dec
cmc
mov
or
adc
(bad)
push
daa
shl
xchg
mov
cwde
inc
outs
push
out
retf
xchg
mov
sbb
scas
xor
shl
jbe
xchg
mov
xor
xchg
mov
lods
call
stc
xchg
data16
push
pusha
out
fcomi
cmp
(bad)
push
xchg
dec
je
or
outs
jbe
scas
xlat
dec
mov
sub
loope
jg
pop
dec
jns
ret
cmp
rol
sbb
sbb
jne
lea
xchg
jmp
adc
sahf
jnp
std
adc
push
push
pop
aaa
repz
in
idiv
cdq
push
sbb
add
ins
imul
pop
je
call
add
sar
push
cmp
jnp
ret
pop
or
mov
add
into
inc
jmp
pop
test
jb
add
cwde
push
sbb
test
loopne
pop
pop
call
pop
je
sub
mov
enter
push
jnp
push
jge
rol
les
or
hlt
and
(bad)
cs
in
or
iret
fsub
inc
loop
test
push
mov
mov
test
dec
push
xlat
div
xchg
and
ret
outs
xor
pushf
loope
stos
gs
sti
adc
je
push
push
das
jbe
sbb
push
jno
mov
pop
mov
inc
xor
ins
inc
sub
push
mov
test
jle
jae
and
inc
in
mul
enter
jmp
dec
xor
pop
jbe
inc
addr16
jae
ins
pop
mov
or
rol
out
sub
(bad)
(bad)
mov
xchg
mov
push
and
ins
icebp
inc
cmp
push
push
jns
add
test
or
mov
rol
je
or
ja
retf
cmp
lods
pop
push
gs
ins
mov
icebp
out
cs
add
arpl
jl
je
cmp
xchg
jbe
xor
or
mov
jmp
call
imul
mov
ss
jae
jae
dec
popa
lahf
lock
jmp
xchg
(bad)
sbb
push
test
movs
je
or
jbe
test
add
xchg
stos
mov
mov
jb
push
jmp
jp
adc
xor
inc
(bad)
push
jae
pop
inc
loopne
aad
pop
push
arpl
dec
mov
mov
icebp
and
sub
fwait
lahf
jns
mov
xor
xor
mov
lock
arpl
fxch
xchg
jle
and
xchg
test
or
jns
push
sbb
(bad)
std
lods
mov
jns
mov
xchg
inc
cmp
(bad)
sahf
push
(bad)
js
hlt
pusha
sti
(bad)
mov
(bad)
mov
ss
mov
and
and
add
ror
aad
push
rol
cmp
adc
jns
stos
add
jns
fcom
jne
inc
sahf
jp
push
or
jl
add
dec
xor
(bad)
jns
push
jmp
sbb
fistp
sbb
jmp
lock
mov
cmp
dec
mov
stos
popf
sbb
jge
cs
sub
push
in
add
jmp
hlt
xor
dec
ret
cmp
icebp
adc
lea
daa
pop
cwde
ror
bound
je
sub
sub
or
cmps
dec
(bad)
sub
(bad)
rcl
mov
sbb
xlat
mov
or
dec
push
pop
xchg
add
dec
push
lods
pop
mov
pop
mov
add
mov
int3
or
jno
xchg
ror
jne
mov
or
mov
xor
stos
mov
iret
xchg
push
sub
add
fdiv
mov
ja
push
fdiv
xor
jbe
sub
shl
ins
sbb
pusha
xchg
lods
int3
xor
test
jne
ja
js
pop
lock
inc
xor
(bad)
sbb
dec
or
inc
jge
retf
je
nop
icebp
stos
dec
loopne
push
sbb
sbb
aad
je
xchg
jle
js
dec
shl
push
sub
pop
or
mov
dec
adc
jns
mov
sub
adc
jbe
pop
stos
cmp
jne
push
mov
pop
xchg
mov
push
pusha
cmp
mov
cmp
dec
imul
cmps
rcl
mov
lods
xor
je
mov
aam
jmp
dec
js
shl
mov
jno
xchg
mov
shl
std
sbb
ja
popa
std
daa
sahf
shr
je
repz
jp
xchg
xchg
add
xor
jb
movs
std
sub
inc
lds
xchg
mov
dec
test
xor
push
push
or
sbb
sbb
or
jge
push
js
cdq
in
adc
sub
jnp
ror
push
pusha
mov
or
or
frstor
adc
enter
iret
pop
mov
sbb
sub
or
add
aad
pop
or
adc
cmc
jne
(bad)
cdq
pop
jbe
pop
xchg
repz
mov
inc
mov
out
es
cmp
jbe
mov
call
push
cmc
loopne
shl
cdq
movs
je
repnz
or
push
sar
jne
sbb
loopne
inc
outs
jno
pop
inc
xchg
cmp
push
in
push
push
stos
pusha
stos
adc
mov
popa
mov
movmskps
bound
mov
mov
jno
mov
add
adc
movs
push
ss
or
xchg
test
jne
pop
popf
pop
ja
pusha
les
sub
lods
es
retf
lds
test
inc
mov
lea
jecxz
push
or
xchg
je
outs
fcomp
nop
imul
sub
les
scas
jb
or
jo
xchg
std
out
sub
or
cli
inc
pop
jne
mov
dec
add
dec
fnstsw
movs
icebp
adc
mov
jnp
aas
push
data16
call
(bad)
nop
lea
mov
js
mov
lods
iret
fisub
cmp
sar
mov
out
inc
sub
repnz
mov
movs
push
sub
mov
loop
enter
ja
nop
cmp
mov
repz
mov
push
dec
(bad)
and
test
mov
xor
nop
retf
inc
fstp
fsub
jp
cmp
retf
cli
rol
mov
mov
lahf
jmp
fiadd
shl
pop
rol
xor
leave
outs
xchg
pop
ja
lahf
in
lds
mov
xchg
push
push
fsub
xchg
adc
pop
cs
sbb
push
ja
mov
sub
inc
int
jbe
cwde
repz
aaa
dec
call
lds
sbb
ret
iret
jmp
pusha
jg
icebp
mov
out
xchg
xor
imul
std
retf
jne
test
mov
aad
pusha
sub
pop
add
icebp
xchg
jne
cli
mov
in
sahf
jno
rcl
add
push
outs
pop
jb
int3
fsub
lea
jmp
xchg
mov
jno
sub
lock
les
mov
mov
mov
xchg
mov
jbe
or
leave
xchg
xchg
xchg
sub
sbb
test
xor
sub
icebp
pop
jbe
hlt
enter
pusha
mov
cdq
(bad)
jno
xchg
jae
test
nop
icebp
lods
retf
sar
jae
rol
fsubr
or
mov
repnz
pop
test
imul
mov
sub
sub
cli
arpl
or
sbb
pop
pushf
cld
xchg
push
cld
dec
jbe
ins
loop
inc
call
in
pop
rcr
stos
je
xor
pop
xor
(bad)
adc
push
jmp
add
cmp
sbb
clc
call
stos
sub
mov
imul
cmc
out
icebp
sub
je
inc
jmp
loopne
cmp
sbb
xor
cmps
cdq
xor
xor
mov
adc
or
jno
call
cld
xchg
mov
fisttp
test
icebp
in
shl
inc
cmps
div
jge
(bad)
mov
adc
adc
ret
cli
xor
sub
and
rcl
xchg
sbb
mov
outs
push
or
sbb
loop
jle
in
sub
inc
lock
jns
ret
retf
or
lock
(bad)
mov
sub
outs
jo
mov
xchg
and
jnp
cmp
ror
push
jno
xor
ins
in
lods
mov
daa
fucomp
push
(bad)
mov
and
cs
jne
sub
pushf
jo
cdq
repz
div
(bad)
bsr
xlat
sub
or
rcr
mov
test
sbb
sbb
jno
adc
push
vunpcklps
notrack
fidiv
jne
add
scas
mov
call
in
sub
fidivr
ins
fisub
inc
cld
jbe
xor
dec
cmp
mov
mov
jbe
mov
xchg
mov
in
pop
cli
pop
icebp
mov
fsubrp
or
scas
adc
fwait
mov
xor
pop
jge
test
cmp
(bad)
aam
repnz
jmp
mov
ret
in
push
sbb
ja
jecxz
xchg
cmp
mov
or
jecxz
repz
xchg
cmp
inc
xlat
pusha
js
cmp
retf
retf
test
jp
sub
or
adc
and
test
inc
mov
adc
loop
retf
std
cli
out
jbe
pop
pop
jne
add
sub
xor
mov
in
out
iret
mov
mov
add
ja
push
retf
pop
lea
rcl
imul
adc
xchg
imul
inc
je
int3
mov
mov
mov
push
aad
xchg
lock
inc
mov
sbb
pop
xor
pop
dec
stc
xor
test
sub
and
inc
mov
jb
retf
imul
imul
or
xchg
movs
dec
dec
jae
hlt
cmp
jb
popa
repnz
ret
pop
call
push
cdq
sti
push
das
pusha
mov
and
xchg
pop
sbb
mov
mov
clc
jmp
and
xor
idiv
push
pop
push
mov
mov
mov
jne
jg
push
jns
ins
cmp
sahf
adc
mov
and
fs
push
xchg
retf
mov
lea
movs
popa
adc
xor
pop
pop
jl
ror
xchg
aas
mov
jae
(bad)
in
arpl
bound
jae
jg
fidivr
adc
push
lock
pop
mov
shl
jbe
(bad)
stos
push
sub
lock
xlat
jecxz
adc
xchg
mov
(bad)
sub
icebp
cli
icebp
sub
and
pop
je
xchg
sbb
js
jbe
xor
xor
fiadd
and
mov
dec
scas
popf
call
scas
mov
mov
mov
enter
inc
aas
dec
jge
out
cli
inc
adc
out
fsub
add
outs
mov
lods
pop
nop
movs
push
push
push
repnz
cmc
lea
pop
cwde
leave
jae
je
popf
jecxz
mov
sub
test
ins
cmp
mov
dec
push
sub
pop
pushf
mov
mov
mov
adc
inc
inc
adc
xchg
ins
xchg
div
pop
and
inc
adc
test
stos
imul
inc
sub
cld
and
idiv
and
test
xor
mov
jbe
lock
clc
out
sub
and
in
stos
lock
mov
fisttp
jbe
add
cwde
cmp
mov
cmp
cdq
cld
lock
pop
addr16
pop
cmps
pop
jne
stos
add
out
or
(bad)
idiv
and
jno
test
icebp
jns
jbe
std
cmp
popa
(bad)
test
adc
aas
stos
jbe
call
inc
or
in
(bad)
out
je
aam
emms
xchg
jnp
mov
jle
jne
div
out
lea
mov
mov
jb
jno
icebp
mov
outs
test
inc
test
mov
push
lock
jno
mov
xor
jmp
fbld
je
out
out
clc
jne
mov
jb
pusha
pop
xchg
sbb
and
clc
jae
iret
xchg
jno
and
dec
stc
mov
lds
dec
mov
pop
adc
pop
or
push
inc
addr16
imul
movs
jb
xor
ss
mov
or
inc
je
(bad)
jmp
push
icebp
push
je
shl
push
pop
scas
mov
nop
fiadd
cwde
mov
mov
push
fwait
repz
push
pop
sti
pusha
xchg
pop
jb
cmp
sub
cmp
pushf
cmc
in
mov
leave
cld
repnz
lea
mov
inc
pop
sbb
dec
das
mov
lock
fcom
push
push
mov
jno
jo
adc
das
icebp
cwde
inc
xor
lea
push
mov
jne
out
les
int
dec
es
cli
pop
into
ins
cwde
ja
test
xchg
sub
xchg
lods
fdiv
(bad)
test
pop
je
xor
inc
cmps
cli
pop
pop
mov
scas
mov
xchg
sahf
sbb
retf
jne
push
imul
xchg
adc
shl
out
mov
pop
jb
imul
sahf
mov
xchg
push
and
scas
jns
xchg
or
jo
xor
icebp
hlt
or
into
xchg
cmp
push
and
test
imul
jmp
js
xchg
jne
aaa
mov
mov
or
xor
fisttp
lock
fldenv
adc
xchg
push
in
repz
cmp
sub
cwde
outs
dec
je
(bad)
out
jbe
jne
in
pop
in
push
mov
mov
add
icebp
xor
pop
sbb
and
sbb
cmp
cmp
lods
sbb
je
addr16
jle
jmp
cli
mov
mov
shl
and
pop
adc
js
xchg
adc
dec
cld
xchg
out
xchg
jne
push
mov
pop
jbe
or
or
je
add
inc
jbe
jb
ja
or
cmp
stos
jmp
icebp
push
sti
cwde
outs
sbb
mov
dec
(bad)
and
adc
jo
nop
loope
sub
scas
ficomp
je
mov
icebp
ret
lea
jle
loope
or
add
ja
(bad)
push
cld
movs
in
ret
sub
pop
sub
push
call
loopne
jae
stc
shl
or
inc
mov
jnp
scas
pop
sbb
ja
(bad)
data16
xchg
mov
push
and
icebp
add
xor
jecxz
cld
nop
in
xchg
inc
add
mov
inc
lahf
js
mov
lea
imul
mov
cmps
mov
pop
jne
cmp
mov
shr
inc
std
cmp
fnsave
cdq
xchg
repz
lock
rcl
retf
or
jns
in
or
push
imul
mov
ja
aaa
cmp
dec
jae
push
and
sahf
or
lock
jae
call
data16
test
js
clc
rcl
jne
inc
pop
xchg
mov
clc
mov
imul
add
jbe
mov
repnz
mov
shl
ja
loop
and
into
(bad)
pop
push
xlat
or
fnstcw
pop
mov
iret
(bad)
lock
rol
in
jae
push
setae
inc
push
mov
sub
push
sbb
cdq
mov
xor
mov
lock
test
jo
es
les
pop
int
jne
pop
push
nop
xchg
mov
ret
test
movs
iret
aas
out
loope
dec
adc
jno
aad
jne
ja
adc
call
adc
jo
dec
xchg
je
xor
sub
cdq
add
inc
test
fidiv
(bad)
outs
shr
out
sbb
inc
(bad)
push
cld
jl
jae
iret
inc
outs
repz
push
stc
mov
fcom
add
jne
(bad)
push
inc
and
and
mov
mov
fs
sbb
pop
sub
icebp
int3
mov
nop
sbb
je
mov
scas
jno
and
sub
jae
jbe
retf
div
mov
mov
push
iret
test
clc
sbb
ja
and
je
mov
fidiv
inc
iret
lahf
pushf
test
out
leave
(bad)
or
or
pop
aad
outs
xor
jmp
add
mov
lods
(bad)
mov
jo
lods
mov
push
mov
aad
idiv
test
int3
xor
mov
pop
inc
push
into
out
add
fsubrp
and
mov
push
loope
imul
jle
jns
fcomi
inc
ss
aam
adc
push
leave
xor
xor
fbstp
pop
sub
(bad)
sbb
and
cmc
rep
dec
cld
int3
xchg
je
lods
dec
(bad)
ja
add
push
aad
in
or
stos
cmp
sahf
pop
imul
mov
dec
pop
inc
xor
dec
in
xchg
(bad)
jbe
sbb
or
or
add
cwde
add
dec
leave
push
or
rol
cld
dec
test
imul
xor
xor
xchg
pop
xor
repnz
push
dec
inc
or
clc
add
loop
loop
jo
mov
movs
mov
sub
or
jne
div
ret
push
fstp
test
mov
pop
inc
mov
movs
pop
xor
movs
inc
mov
(bad)
cmp
nop
lock
loope
mov
int
sbb
xor
lahf
mov
fsubr
push
mov
cmc
outs
sti
mov
inc
jmp
test
jo
das
icebp
pop
dec
imul
mov
pop
fidivr
mov
scas
sti
mov
daa
es
lea
daa
lahf
idiv
mov
sahf
xchg
mov
ins
call
daa
xor
mov
scas
fs
adc
cmps
jbe
lods
shl
or
cmps
add
add
ins
jecxz
dec
push
(bad)
fsubr
leave
jne
fcom
jo
mov
std
adc
mov
jns
cdq
repnz
jns
imul
push
aaa
mov
neg
lahf
jnp
std
jbe
push
dec
sub
ror
addr16
out
movs
icebp
pop
mov
pushf
sti
mov
fld
retf
and
add
cmp
les
scas
sbb
fwait
pop
je
jbe
cmp
test
bound
mov
mov
mov
lods
in
pop
stos
sub
scas
adc
jne
aas
dec
or
sti
repnz
lds
pop
cmps
test
mov
call
sub
xchg
sbb
mov
adc
out
add
sub
jl
adc
mov
pop
mov
and
rcr
or
hlt
int3
sahf
ret
ds
dec
fucomp
outs
jp
leave
jecxz
ja
fsqrt
mov
pop
cmps
jbe
jb
xor
push
mov
lock
mov
ins
inc
push
fwait
or
scas
pushf
jne
cmp
jbe
mov
icebp
or
in
jl
mov
jbe
cmp
add
loop
adc
(bad)
fcmovbe
test
mov
jns
add
fidivr
lock
stc
push
scas
mov
aad
cli
lods
call
adc
in
pop
neg
xor
pop
xchg
xchg
pop
cmps
ja
jg
popf
inc
into
int
mov
call
movs
pop
and
jl
mov
(bad)
out
test
je
pop
or
inc
pop
xchg
or
lds
(bad)
jno
repnz
pushf
xchg
add
daa
push
jno
and
pop
movs
mov
add
add
sahf
lods
imul
ja
jne
mov
adc
jmp
dec
je
das
cmp
jno
stc
ror
daa
inc
mov
mov
mov
shl
ss
mov
add
xor
into
test
pop
add
je
jno
cmp
jge
test
test
jno
(bad)
pop
sbb
and
adc
mov
or
jmp
inc
movs
add
or
push
das
ss
dec
jne
in
pop
arpl
and
clc
imul
cmps
popa
xlat
mov
(bad)
cmp
push
icebp
ds
push
mov
push
lahf
sbb
mov
inc
jb
icebp
dec
adc
mov
mov
in
ja
mov
es
test
xor
call
repz
ret
ins
push
jo
ja
push
add
jg
jmp
mov
dec
stos
std
jns
and
aad
aam
mov
push
xor
jp
dec
push
ja
or
mov
cmp
imul
dec
mov
sahf
push
and
jo
mov
cmps
xchg
sbb
xchg
inc
and
or
je
popf
pop
cs
pusha
sbb
mov
add
mov
and
push
clc
mov
xchg
ss
mov
int3
xor
(bad)
jbe
sar
icebp
lea
xor
mov
xchg
dec
mov
dec
cmp
jne
out
or
mov
movzx
int3
loope
cwde
jl
das
push
mov
xchg
je
or
jp
fcom
call
sbb
or
in
xchg
cmp
xchg
cli
pop
es
movzx
popf
mov
and
icebp
(bad)
sbb
js
imul
rol
lock
punpckhbw
out
jbe
jne
xlat
es
ror
movs
mov
cmps
dec
adc
mov
cdq
or
retf
pop
jecxz
mov
add
add
jmp
ja
jae
mov
mov
stos
(bad)
loop
int3
jle
and
(bad)
or
in
ret
pop
jl
and
dec
xor
xor
and
aas
sahf
shl
jne
mov
xor
mov
mov
fldcw
pop
in
add
cmp
cld
add
mov
xchg
sub
lock
lods
pop
pop
arpl
add
mov
sbb
xor
push
xlat
add
shl
sub
dec
xchg
adc
repnz
arpl
jne
xchg
out
ja
mov
push
adc
xor
test
push
push
xchg
loope
mul
push
jno
push
mov
ret
(bad)
je
dec
jnp
add
push
outs
ins
push
cmp
jns
enter
cmp
mov
mov
cmp
adc
lock
lock
jnp
pop
loopne
mov
mov
lock
loop
mov
lahf
cwde
mov
nop
dec
test
or
pop
(bad)
mul
ins
mov
mov
mov
push
pop
sbb
sub
sbb
jb
mov
(bad)
xchg
cmp
call
and
jno
sti
sbb
inc
mov
int
push
clc
movs
and
sub
arpl
daa
push
repz
repz
pop
scas
(bad)
jmp
mov
adc
imul
sbb
imul
pop
int
ret
jbe
stos
mov
cmp
xor
scas
cmp
push
ret
jnp
mov
ins
push
jecxz
or
pop
dec
jbe
in
push
enter
mov
lahf
jo
jb
push
and
xchg
add
leave
test
pusha
repz
(bad)
aaa
or
out
mov
movs
sbb
cmp
inc
xor
jne
push
cmp
call
sbb
ds
mov
scas
or
daa
adc
in
cli
jge
(bad)
cmp
mov
add
inc
icebp
sbb
fisub
xchg
mov
ss
push
or
push
dec
addr16
neg
dec
and
int3
jp
or
adc
sahf
sub
inc
mov
jae
pop
inc
xlat
dec
ss
icebp
fidiv
push
jbe
dec
add
adc
popf
rol
rol
sbb
or
in
mov
iret
mov
push
addr16
dec
sub
adc
(bad)
aaa
pop
xor
je
pop
xchg
sub
mov
shl
pop
xchg
(bad)
xchg
xchg
fwait
xchg
cmp
add
jae
mov
mov
sbb
std
or
push
outs
xchg
mov
pop
cmp
movs
cwde
mov
dec
xchg
mov
out
jbe
adc
lods
mov
mov
jo
and
shl
xor
out
sbb
inc
movs
adc
popf
lock
xchg
dec
stc
icebp
mov
call
ret
jne
ss
ja
push
xor
rcr
out
lock
fs
fdiv
sti
add
pcmpeqb
add
je
jns
inc
je
or
aam
sbb
std
adc
aad
(bad)
push
mov
mov
mov
jmp
add
mov
mov
adc
addr16
mov
inc
ja
ja
enter
inc
mov
or
mov
cs
push
sub
ss
stc
sar
fcomip
(bad)
push
retf
pop
loop
adc
sub
pop
adc
xchg
mov
idiv
mov
lahf
adc
jne
out
inc
lods
dec
pop
sahf
sar
sbb
stos
jne
pop
lock
cmp
xor
cmp
psubw
fnstsw
pusha
ja
cmps
push
shl
(bad)
jns
lock
push
add
lods
test
or
ja
shl
pop
mov
mov
ja
js
popa
add
cmp
mov
es
out
adc
arpl
rcr
push
loop
cmp
mov
sub
add
cmp
imul
mov
jmp
adc
jg
unpcklps
(bad)
adc
lahf
or
sub
imul
push
jns
push
push
dec
cld
cmp
hlt
fmul
mov
sbb
jmp
mov
mov
sub
jbe
sbb
cdq
jl
cmp
lods
inc
jle
lock
or
adc
retf
jno
mov
lea
push
es
jnp
jne
sahf
fs
push
push
test
mov
inc
and
scas
(bad)
jo
icebp
xor
out
stc
rcr
xor
sub
jbe
dec
rcl
cmp
leave
jmp
dec
add
mov
fdivr
mov
mov
addr16
pop
push
std
mov
add
inc
xor
mov
mov
cs
inc
jg
xor
out
js
test
mov
pop
mov
ret
push
inc
mov
(bad)
jns
ds
jne
popa
xor
fstp
mov
inc
test
nop
pop
js
mov
xchg
inc
in
jne
dec
mov
ja
cmp
adc
hlt
pop
mov
xrelease
imul
inc
fwait
xchg
mov
mov
mov
xchg
cmp
jb
stos
out
lock
loope
sub
inc
dec
mov
jne
xchg
push
cmp
cwde
hlt
repz
adc
adc
mov
jmp
movs
lock
rcr
dec
or
dec
std
xchg
(bad)
aaa
jmp
pusha
jbe
scas
dec
dec
mov
mov
in
xlat
jno
ret
lock
jl
je
in
nop
mov
xchg
not
es
test
jae
jb
shl
jbe
(bad)
mov
inc
lea
lock
mov
or
lock
cmp
cs
(bad)
pop
mov
es
push
inc
add
jno
in
mov
shl
jbe
sub
xchg
in
aad
ret
adc
leave
dec
imul
hlt
push
scas
cmp
fnsave
dec
or
cdq
push
je
gs
fdiv
xchg
xchg
das
test
add
mov
xchg
das
mov
jecxz
or
mov
adc
cld
ja
lock
or
xchg
xchg
add
stc
je
sub
mov
dec
fsubr
inc
push
fdiv
les
in
jne
dec
push
push
xor
mov
faddp
or
push
adc
hlt
jmp
inc
ret
(bad)
jbe
int
sub
gs
mov
std
hlt
mov
(bad)
xor
inc
jne
push
mov
and
adc
adc
stc
std
sbb
int3
adc
mov
sti
xchg
gs
mov
push
push
mov
lock
pop
xor
xchg
add
jb
push
mov
xor
push
movs
mov
xor
xor
and
mov
iret
and
sbb
jl
stc
add
icebp
adc
mov
and
sub
jbe
lahf
mov
xchg
mov
pop
loopne
mov
jo
xchg
cmp
pop
outs
mov
scas
inc
movs
push
jmp
push
sub
arpl
jmp
and
sub
in
popa
pop
add
ficom
lock
dec
mul
sub
add
mov
neg
retf
xchg
pop
test
pop
add
mov
icebp
mov
fsubr
inc
jno
inc
sahf
in
pop
(bad)
idiv
aam
jne
pop
cmps
shr
inc
xchg
ins
sub
jb
adc
jnp
push
in
xchg
inc
fistp
push
push
adc
xchg
popf
dec
cmp
xchg
jmp
jbe
imul
jl
jae
cs
mov
aas
es
cmp
ret
push
pop
xchg
sbb
jae
jo
mov
leave
jp
mov
inc
xchg
jp
jle
xor
sar
push
mov
imul
sbb
jne
adc
outs
lods
or
cld
call
je
(bad)
(bad)
jno
in
neg
fcom
jge
stc
inc
xor
mov
pop
test
ja
dec
hlt
lods
adc
mov
into
add
mov
and
pop
in
loopne
or
popf
xchg
or
cmp
xchg
(bad)
mov
mov
and
std
or
xor
lds
cmp
(bad)
mov
and
rcl
ret
sub
cmps
fisub
mov
xchg
push
or
add
ins
mov
repnz
(bad)
std
movs
popa
jbe
adc
aam
xor
pop
ret
mov
adc
neg
sub
sahf
jl
retf
push
ja
mov
cmp
mov
cmp
jns
lock
add
gs
dec
mov
aam
xor
cmp
out
lods
mov
mov
cmps
sbb
retf
sub
gs
add
jne
sbb
pop
jbe
and
mov
mov
add
mov
xor
sub
repz
dec
adc
lahf
push
sar
mov
sahf
jae
jbe
push
dec
shl
sub
jle
jne
je
push
test
jb
sar
dec
xor
ins
mov
dec
(bad)
(bad)
out
ficomp
call
inc
mov
jns
jle
retf
ds
cmp
shl
sub
push
aaa
icebp
sbb
sbb
dec
data16
and
mov
pusha
and
ja
sbb
mov
push
call
fcomp
mov
xor
das
inc
adc
outs
ins
sub
pop
(bad)
fnsave
shr
push
leave
and
push
xchg
out
xchg
add
jo
in
push
fmul
mov
inc
test
jbe
mov
cmp
jnp
adc
sbb
int
out
je
sbb
out
xor
ds
call
mul
movs
add
xchg
(bad)
out
push
push
dec
mov
dec
jne
pop
sub
inc
mov
add
push
jbe
jno
lds
and
pop
js
ret
ret
push
dec
sar
jmp
fild
mov
cli
or
pop
mov
mov
int3
mov
xor
adc
sahf
or
in
(bad)
leave
(bad)
and
push
gs
sbb
ja
jg
outs
fwait
cmp
sar
imul
call
outs
iret
mov
jnp
cld
mov
xchg
leave
dec
push
sysexit
jne
je
mov
inc
ret
xor
and
jbe
stos
xor
mov
jo
xchg
(bad)
fistp
js
(bad)
push
inc
mov
push
js
lea
push
mov
mov
outs
sub
xor
test
mov
sahf
push
gs
push
push
push
(bad)
je
out
div
sahf
fwait
out
jmp
cmp
ins
popf
test
int3
bnd
pusha
lock
push
adc
jp
les
popa
(bad)
icebp
loop
adc
adc
out
mov
imul
sbb
jbe
dec
xchg
icebp
in
jecxz
inc
xor
les
jo
sbb
movzx
loop
dec
mov
pop
cmp
call
sbb
jbe
test
xlat
jmp
dec
xor
dec
outs
enter
inc
add
xchg
sbb
cmp
shr
pop
outs
push
mov
mov
stc
mov
outs
aas
and
or
fs
jne
cmps
adc
jecxz
jnp
add
pop
xor
push
in
adc
pop
je
mov
test
inc
leave
pop
(bad)
jp
sbb
inc
gs
and
int
adc
aas
or
mov
jbe
fidivr
or
ret
ins
dec
push
add
push
daa
xchg
loopne
jbe
std
cwde
and
xor
les
aas
inc
outs
or
lods
sub
push
or
dec
(bad)
popf
jmp
dec
sbb
inc
test
xchg
sbb
jne
mov
icebp
pushf
inc
das
pop
mov
test
cmp
mov
push
inc
jbe
inc
fldcw
ins
or
jecxz
dec
icebp
pop
jp
popa
mov
sub
arpl
mov
arpl
pop
jae
pop
pop
shl
lods
icebp
mov
loop
add
jno
je
retf
xor
sbb
jl
xchg
mov
outs
pusha
outs
addr16
out
jp
xchg
ret
je
adc
les
xchg
rdmsr
mov
je
jg
push
dec
mov
and
mov
test
inc
outs
call
push
jbe
out
or
ins
adc
jmp
pop
jp
dec
ja
mov
lock
inc
xor
or
sbb
out
pop
pop
jb
add
mov
in
mov
or
ror
jne
sub
mov
bound
dec
mov
js
cmp
outs
jae
lea
stc
lods
pop
lock
adc
(bad)
dec
or
stc
(bad)
pop
cmp
inc
adc
inc
scas
jp
cmp
cmp
xor
mov
aas
adc
mov
shl
js
cmc
(bad)
popf
cmps
pop
sub
mov
jp
mov
icebp
mov
cmp
stos
sub
mov
jne
sub
int
int
aaa
pop
mov
add
and
jbe
pop
pop
gs
add
fimul
ja
inc
xchg
inc
ds
ffreep
dec
jae
stos
mov
jl
gs
dec
test
push
mov
stc
bound
sbb
stos
clc
(bad)
jp
pop
add
pop
lds
xlat
and
icebp
stos
mov
jne
pop
adc
xor
loope
sti
out
jecxz
stos
dec
ret
idiv
fidiv
xor
fs
jae
mov
cmp
adc
inc
ins
aam
sahf
lods
pop
scas
pop
xor
ins
jne
fwait
jecxz
ja
sub
lods
mov
imul
cmp
adc
ja
jno
mov
inc
call
pop
enter
inc
adc
add
out
enter
cmpxchg
(bad)
jno
push
cld
inc
fstp
add
and
shr
mov
loop
push
adc
push
or
stos
jo
imul
cmp
mov
cmp
inc
dec
push
loope
push
inc
outs
fs
or
push
pusha
push
jbe
enter
mov
iret
mov
adc
bound
fistp
push
xor
imul
mov
push
es
lock
adc
jbe
and
int3
iret
daa
pop
cmps
shl
test
pushf
ins
shl
wbinvd
sub
dec
push
cmp
repz
fcom
sub
add
inc
hlt
js
imul
jecxz
shl
stos
add
icebp
xor
in
rcr
add
nop
jbe
je
ins
mov
push
mov
test
dec
mov
push
push
push
setb
and
hlt
ins
add
shr
cmps
push
jb
shl
pop
xor
push
jno
imul
xchg
(bad)
mov
sbb
jle
jp
or
mov
jmp
aam
fistp
repnz
jno
arpl
cdq
mov
xchg
adc
dec
jo
arpl
and
lods
cmp
sbb
cwde
sahf
push
out
mov
es
(bad)
out
jmp
mov
lock
call
outs
je
mov
xchg
pop
jg
icebp
icebp
cmp
or
push
ret
and
popa
int3
jne
dec
lods
inc
(bad)
ins
add
lods
mov
push
js
(bad)
jg
mov
and
sbb
or
lea
mov
out
xor
jb
scas
enter
jmp
sahf
je
add
adc
adc
mov
push
repz
lock
jl
js
push
movs
repz
xchg
mov
jbe
pusha
bswap
sub
aam
jo
mov
scas
scas
xor
adc
icebp
fs
jns
std
jmp
je
ret
jbe
movs
fild
hlt
jmp
xchg
jg
idiv
fs
sbb
jnp
and
pop
popf
(bad)
mov
inc
add
(bad)
mov
sbb
adc
xchg
je
lock
repnz
fcos
int3
inc
adc
je
ss
sti
ja
in
(bad)
inc
push
cmp
ror
adc
icebp
int3
out
in
add
imul
pusha
xor
addr16
adc
retf
jne
ret
ins
xchg
ja
and
imul
adc
jmp
sbb
inc
push
aad
jbe
xchg
adc
lods
mov
je
ja
mov
pop
jle
enter
jnp
inc
sti
lahf
xor
outs
imul
stc
push
xor
xor
jo
test
test
mov
addr16
and
dec
xchg
or
scas
lock
das
repz
daa
stos
ins
(bad)
push
lods
push
imul
(bad)
mov
jae
add
cmc
or
xchg
push
gs
mov
and
jne
or
jo
les
xor
ins
mov
je
cdq
fld
pop
pop
out
test
adc
cmp
shl
out
pop
dec
aaa
push
mov
jnp
push
test
cmp
push
out
out
mov
shl
push
(bad)
pop
ins
cs
push
dec
cwde
push
call
ficomp
mov
cmp
icebp
mov
stos
adc
pop
xor
mov
mov
cld
mov
fwait
inc
rol
sub
pop
push
jle
adc
push
cmc
jbe
jl
mov
mov
mov
cmps
ja
xor
sbb
into
test
add
adc
and
fld
ins
(bad)
mov
rol
push
mov
outs
jbe
je
push
test
aam
je
js
aas
mov
movs
mov
fdiv
ja
xor
sbb
(bad)
pop
jbe
or
xor
cmp
not
(bad)
popf
mov
fdivr
stos
jecxz
and
lea
xchg
fsubr
inc
xchg
test
lods
pop
je
lahf
rcl
loop
lahf
or
sub
sub
mov
bound
daa
mov
mov
imul
lods
adc
fdiv
imul
gs
ficom
push
cmp
je
leave
shl
adc
dec
jmp
jae
lea
push
fsub
xchg
push
push
cmp
iret
sbb
cmp
in
pop
data16
jnp
jbe
dec
dec
(bad)
pop
xor
mov
(bad)
cs
(bad)
icebp
loop
pop
or
(bad)
outs
jmp
jbe
or
pop
mov
daa
pop
add
clc
and
cs
jns
sbb
in
ja
ins
mov
jae
icebp
js
out
pushf
jo
dec
dec
loopne
sub
cmp
mov
mov
ret
stc
ret
scas
xlat
jbe
js
xor
mov
nop
mov
push
test
and
or
adc
mov
retf
ja
adc
movs
jo
fadd
or
lock
jmp
das
(bad)
sbb
cli
mov
sbb
fimul
pusha
je
dec
icebp
mov
movs
mov
add
adc
jne
jmp
cld
cs
xchg
push
sti
je
sbb
push
jmp
icebp
mov
mov
repnz
sub
repz
push
dec
jp
mov
sub
inc
dec
jno
dec
xor
pop
je
aad
imul
dec
add
xor
jl
cmp
jb
std
retf
cmp
xchg
cmp
(bad)
xor
cmp
jl
or
fisubr
push
in
jmp
das
jmp
ds
fcmovbe
cmp
aaa
aaa
fdiv
push
movs
push
xor
dec
mov
test
stc
xchg
aaa
push
dec
test
je
mov
and
clc
mov
xchg
repz
jmp
mov
addr16
jbe
xchg
add
add
adc
ins
pop
jl
adc
fisub
xchg
xor
mov
fidivr
test
pop
call
inc
adc
(bad)
mov
pop
retf
lock
mov
and
imul
in
loop
lock
jge
mov
test
fldenv
jno
cwde
or
imul
movs
je
xchg
fs
jbe
fcom
ficom
mov
cmps
stc
(bad)
out
or
fnstsw
inc
or
add
lea
sbb
pop
ja
fwait
mov
daa
jmp
arpl
repnz
fwait
jle
mov
icebp
push
jo
sbb
jl
shr
test
idiv
ds
inc
movs
pop
xor
jnp
fst
sub
icebp
in
cmp
aaa
iret
push
jo
mov
jmp
xchg
sub
mov
pusha
pop
js
inc
fsqrt
and
jecxz
icebp
repnz
push
in
das
jg
adc
mov
pop
mov
loop
call
stos
or
xor
adc
fst
sbb
idiv
push
test
fisttp
inc
ja
pop
or
push
in
or
mov
(bad)
jl
mov
inc
adc
outs
call
push
cmp
scas
je
ficom
ja
mov
lods
call
jae
mov
lock
jecxz
ucomiss
sahf
and
jne
add
call
add
inc
xchg
add
div
mov
push
bnd
xor
dec
pop
sbb
dec
jne
or
mov
icebp
cmp
ins
add
ret
icebp
outs
sub
sub
pop
lock
xor
stc
imul
xchg
mov
stos
xor
xor
nop
pop
clc
cmp
ss
mov
aas
adc
adc
inc
stc
jo
ret
push
lods
pushf
mov
jne
or
test
xchg
push
hlt
pop
mov
and
fwait
jne
nop
shl
dec
inc
xchg
mov
fadd
mov
ds
xlat
mov
push
loope
test
nop
scas
jbe
je
clc
call
cmp
mov
pop
or
ja
sbb
xor
dec
sar
rcr
icebp
mov
push
mov
sub
ret
into
push
xchg
mov
push
cmp
push
pusha
dec
lock
icebp
add
into
movs
cs
jne
xlat
dec
outs
leave
fnstenv
inc
and
ja
out
mov
popa
mov
mov
movs
mov
fsubr
push
jno
pop
popa
pop
mov
ins
mov
shr
nop
les
dec
mov
ins
jnp
int
adc
adc
sub
jbe
add
add
jae
jne
arpl
xlat
xor
in
mov
xchg
fsubrp
jb
outs
fwait
leave
sbb
test
inc
mov
inc
mov
pop
add
icebp
dec
ins
dec
cmp
cld
ss
jmp
push
jbe
retf
dec
push
repnz
icebp
adc
push
int3
retf
cmp
retf
xchg
iret
cmp
adc
les
arpl
int
jne
mov
aaa
ja
stos
jg
loop
lea
mov
push
int
pop
jbe
ja
dec
outs
mov
jg
sbb
jne
mov
and
xor
test
push
push
icebp
cmp
mov
(bad)
pop
cmp
mov
in
sub
aaa
cs
test
int3
sub
out
sbb
fidiv
je
and
or
les
mov
mov
push
loope
cmp
add
stc
push
mov
push
test
jmp
retf
js
inc
inc
sbb
xor
adc
es
mov
dec
js
cmps
mov
into
jecxz
stos
sbb
out
nop
jle
push
mov
jl
lods
ja
inc
sub
xor
mov
mov
in
adc
xchg
jbe
inc
sub
cmp
inc
mov
jge
cld
mov
push
sub
bound
dec
inc
jl
jmp
cdq
stos
js
push
xchg
das
ror
scas
(bad)
jb
xchg
jg
jne
sbb
shl
call
pop
jge
push
dec
mov
pop
sbb
adc
retf
add
add
icebp
mov
outs
call
pop
jne
xchg
jp
jp
mov
in
iret
sub
push
mov
lea
jbe
in
sbb
adc
retf
test
or
inc
inc
dec
xchg
or
in
das
(bad)
je
jae
cmp
nop
push
inc
sahf
push
xchg
sbb
jae
jbe
jg
addr16
xor
scas
pop
jle
mov
fmulp
test
or
ja
mov
mov
(bad)
int3
or
push
dec
sbb
mov
pop
call
in
inc
or
dec
in
push
xor
cmp
movs
jnp
sbb
xchg
ds
icebp
pushw
mov
aad
test
(bad)
shr
popf
jo
jnp
mov
xchg
loop
xor
mov
cmp
sbb
js
aas
jae
aaa
adc
out
add
mov
sbb
scas
sahf
jne
inc
or
push
dec
ss
push
xor
std
jl
and
jp
push
add
inc
push
in
mov
jge
cld
cmp
jge
imul
push
mov
push
les
sar
jns
jp
jmp
shl
repnz
dec
clc
mov
fld
mov
mov
pop
(bad)
cmp
push
xchg
jbe
and
jp
jne
rcl
imul
or
test
mov
sbb
mov
mov
pop
xor
push
lea
push
loope
sbb
jp
mov
lahf
mov
pushf
jne
test
sub
mov
int
mov
into
pop
jmp
icebp
push
inc
xor
sbb
inc
push
out
ret
mov
jne
sub
repz
push
dec
mov
sti
pop
mov
mov
xor
xchg
push
ins
imul
cmp
out
jbe
mov
cmp
stos
pop
je
mov
xor
ja
jge
inc
(bad)
(bad)
jnp
sti
es
gs
cmp
or
lock
jae
and
je
divps
ja
js
mov
add
xchg
dec
or
pop
scas
aam
fsub
repz
push
retf
pop
jle
pushf
mov
or
add
or
cli
into
adc
bound
icebp
call
ja
inc
adc
in
jecxz
cmps
mov
icebp
cld
cmp
pop
cld
mov
jecxz
je
sbb
hlt
jo
idiv
sti
stos
leave
inc
enter
cmp
(bad)
xor
cwde
pop
push
mov
inc
dec
dec
pop
cld
cwde
cld
add
jmp
mov
repnz
sbb
ret
je
jae
xchg
cwde
xor
imul
scas
ins
mov
invd
push
icebp
ds
push
xchg
test
pop
into
loope
aam
xchg
cmp
push
add
movs
stos
or
jae
aaa
dec
pop
lahf
jns
or
ins
jb
fsubr
cmp
add
int3
nop
mov
jns
sub
out
cs
out
cmp
fcomip
adc
xor
cld
xchg
sbb
xchg
mov
(bad)
cmp
dec
cld
pop
add
or
frstor
(bad)
lods
imul
jnp
inc
icebp
pop
xor
and
mov
push
mov
jne
fld
ja
dec
pop
adc
(bad)
jmp
cli
test
xchg
cmp
adc
cmp
add
add
mov
stc
inc
fdiv
ja
shr
pop
inc
(bad)
in
mov
cmp
sub
loope
sti
or
sub
cmp
fcom
dec
push
int3
retf
cmp
int
mov
add
xor
out
in
cmps
scas
(bad)
pop
in
out
sub
jbe
lahf
mov
ja
push
mov
mov
push
mov
das
xor
je
sahf
push
cmps
jbe
mov
test
ins
ins
mov
sbb
das
test
add
push
adc
arpl
je
jle
retf
jbe
pop
push
imul
cmp
out
xchg
je
movs
adc
xchg
mov
lds
sub
sbb
jb
mov
imul
in
mov
xor
add
push
cmp
test
enter
repnz
outs
mov
xor
cmc
sbb
add
xor
lds
mov
popf
jbe
jg
jne
rcl
in
int3
xor
mov
movs
clc
iret
lahf
add
lds
cdq
xchg
div
adc
jne
in
mov
cmps
retf
ds
mov
ins
out
adc
pop
test
fs
mov
xchg
mov
les
js
adc
mov
test
lods
les
and
jnp
movs
sub
jne
mov
outs
imul
icebp
mov
shl
fs
ins
and
sbb
cli
pop
xchg
lea
jnp
sar
mov
mov
mov
out
out
mov
xchg
in
aas
sub
outs
pop
xchg
pop
gs
cmp
inc
mov
test
cli
and
jne
mov
popa
int3
push
or
shl
jg
pop
cs
out
jne
js
data16
call
mov
vcmpps
shl
fstp
imul
loopne
push
sbb
movs
je
mov
and
scas
and
cmp
int
or
add
repz
je
mov
and
mov
rcr
pop
push
cmc
js
adc
or
shr
lahf
inc
out
icebp
ins
add
xlat
sub
jnp
mov
repz
leave
adc
dec
in
inc
popf
jne
mov
xchg
cmp
jge
or
sub
pop
pop
adc
test
pop
shl
mov
addr16
pop
ds
and
jns
shl
xor
retf
pop
mov
jnp
jne
mov
adc
jge
pusha
jne
bound
loopne
mov
mov
div
xchg
ins
leave
out
jmp
push
adc
or
sub
sbb
mov
ret
mov
xor
std
ja
sbb
fdivr
ret
(bad)
mov
push
push
movs
(bad)
leave
dec
int
jle
cmps
sub
shl
jne
push
lea
mov
jno
mov
or
mov
mov
leave
je
push
jbe
jmp
mov
or
movs
(bad)
icebp
pop
xor
stc
xchg
inc
rcr
hlt
or
push
jp
jae
cmps
cmp
push
cmp
bound
mov
in
or
jne
(bad)
or
js
adc
enter
mov
cwde
xor
loop
outs
inc
ja
mov
jnp
cwde
and
inc
out
leave
adc
adc
aam
arpl
jnp
cld
cli
bound
movs
jle
inc
cwde
int
sub
adc
js
addr16
sbb
push
xor
xchg
or
or
jae
inc
cmp
pop
lock
daa
inc
outs
dec
rcr
dec
or
icebp
xor
aad
fisttp
mov
mov
jns
add
imul
out
sub
dec
dec
imul
mov
jp
in
nop
icebp
mov
ret
push
(bad)
out
jne
mov
icebp
dec
xchg
jne
fcomp
or
ja
sbb
adc
mov
addr16
jmp
in
(bad)
sbb
mov
call
or
loopne
push
inc
enter
inc
in
mov
jle
or
dec
jae
stos
add
xor
stos
pop
lock
in
inc
adc
ja
jbe
inc
call
stos
mul
cmp
adc
sbb
sti
loope
data16
imul
dec
jns
xlat
sahf
(bad)
jae
jno
xor
push
ja
popf
in
(bad)
mov
mov
ja
shl
mov
xor
fsubrp
(bad)
repnz
mov
shl
fs
add
mov
cmps
jno
in
mov
dec
mov
fnstenv
inc
fcom
ret
ins
sbb
ja
fst
call
inc
dec
push
sti
ds
dec
data16
outs
mov
sbb
inc
and
je
push
pop
pop
mov
mov
mov
mov
jb
pop
nop
push
in
push
lock
sbb
fidivr
movs
jno
std
xor
push
mov
add
mov
mov
mov
ret
call
mov
in
(bad)
or
or
sbb
ret
out
lahf
jge
mov
mov
scas
xchg
movs
and
sub
mov
and
dec
jae
pop
(bad)
shl
mov
push
lock
cmps
lods
call
mov
jo
lods
lahf
pop
rcl
sbb
(bad)
mov
cmc
xchg
cmc
stos
in
xchg
hlt
enter
fdivr
shl
inc
leave
outs
dec
jmp
fcomp
pusha
in
jae
cli
mov
out
fnstsw
es
shl
jne
and
in
dec
stos
mov
mov
push
in
retf
jge
pop
test
mov
idiv
dec
mov
leave
mov
jo
xchg
mov
mov
adc
and
sub
call
test
mov
fmul
cmp
push
ins
and
or
mov
mov
(bad)
or
or
pop
sar
addr16
sub
push
icebp
adc
inc
cmps
ds
jge
pop
repnz
je
xchg
pop
or
dec
mov
mov
retf
fimul
clc
movs
je
pushf
add
xchg
repz
or
fdiv
les
lods
dec
les
jmp
fbld
pushf
(bad)
jmp
mov
xchg
dec
sub
xchg
mov
ret
jne
movs
mov
dec
into
ret
mov
xchg
outs
or
(bad)
mov
test
scas
mov
sub
and
jp
sbb
xchg
add
jo
mov
loopne
pop
jbe
test
repz
lahf
sahf
add
dec
icebp
cld
les
sbb
or
xor
pop
aam
push
cmp
aad
hlt
pop
add
icebp
push
push
loopne
adc
add
(bad)
mov
cli
jno
(bad)
or
pop
arpl
in
cli
into
stc
mov
fs
lds
test
pop
cmps
je
mov
xor
out
mov
jg
shr
enter
xor
add
stos
mov
lock
call
inc
out
jmp
xchg
dec
xor
fisub
push
(bad)
jne
inc
cmp
jbe
ret
in
cmp
add
cmps
frstor
cdq
clc
neg
popa
loopne
dec
test
xor
mov
idiv
jns
(bad)
push
mov
jne
jne
push
jecxz
ret
inc
push
fdivr
lea
xor
(bad)
mov
pop
(bad)
stos
test
xor
icebp
nop
mov
sbb
mov
pop
pop
mov
addr16
daa
jae
mov
mov
les
jne
dec
(bad)
js
xor
sbb
push
mov
mov
dec
(bad)
lds
lock
jb
scas
movs
mov
or
jno
sub
movs
das
sbb
push
cmp
nop
jne
mov
icebp
and
pop
mov
jp
dec
mov
imul
sub
or
sub
pop
jbe
sub
js
sub
xchg
hlt
lock
mul
adc
adc
pop
fs
dec
jne
jecxz
or
jecxz
mov
shr
sbb
pop
inc
sub
(bad)
jbe
es
ins
(bad)
push
je
jb
inc
loopne
out
dec
nop
add
jbe
mov
sbb
jne
aas
sub
inc
push
(bad)
xor
jne
pop
jo
pop
push
(bad)
je
and
push
in
push
aas
adc
sub
adc
dec
sbb
ja
xchg
and
inc
jo
sbb
adc
fisttp
mov
mov
jbe
sahf
ror
ja
dec
mov
add
mov
mov
das
cmp
popf
or
jl
shl
cmp
outs
mov
scas
fs
and
lock
(bad)
mov
xchg
sbb
pop
cmp
jmp
jne
and
jmp
push
xor
xor
ja
push
cmp
push
and
sub
ja
cwde
adc
push
ret
mov
push
dec
pop
xchg
xor
pop
retf
aam
pop
call
jne
bound
mov
mov
push
xchg
movlps
data16
test
mov
mov
inc
inc
in
sbb
shl
ret
adc
out
mov
jnp
jl
ja
push
mov
jb
xchg
pop
inc
or
aam
dec
int3
sbb
ins
or
jge
cmp
mov
stos
pop
icebp
sub
or
mov
xor
push
je
dec
test
sbb
dec
stos
(bad)
hlt
push
push
pop
jne
scas
push
push
push
jbe
inc
mov
je
cmp
not
cmc
dec
test
sbb
retf
mov
ror
mov
out
mov
retf
push
adc
push
je
mov
pusha
adc
rcl
pop
push
mov
inc
cmp
out
dec
jmp
add
jl
xor
ss
push
add
repz
sbb
mov
arpl
in
pop
leave
push
ss
xor
add
jmp
cs
in
mov
int3
popa
aaa
fadd
ins
jl
ret
rcr
les
and
(bad)
ficom
push
str
imul
data16
jmp
popf
cmp
ins
mov
mov
je
cwde
cmp
jae
repnz
(bad)
retf
cs
ss
int3
cmc
ret
ja
lods
repz
in
test
and
mov
test
nop
pinsrw
sbb
cmps
inc
cmc
mov
rcl
dec
lock
daa
mov
mov
mov
adc
add
rcl
stc
jnp
mul
mov
sub
push
xlat
push
(bad)
lock
addr16
pushf
mov
xor
cmp
arpl
jl
test
out
mov
inc
mov
pop
sub
movs
push
or
or
jo
les
imul
ins
shr
les
push
icebp
pop
dec
popw
xor
mov
addr16
retf
dec
push
ins
and
jbe
rcl
xchg
jae
adc
jmp
in
xchg
mov
jno
inc
ins
icebp
call
out
mov
(bad)
dec
into
int
je
or
out
or
mov
push
(bad)
dec
cli
sar
(bad)
pop
imul
sub
push
ret
sub
lock
je
fidivr
inc
call
es
loop
jbe
in
jne
mov
ja
jo
pop
mov
inc
sub
jle
cmp
jbe
pop
retf
xor
jbe
sbb
in
mov
pusha
jo
ror
mov
retf
jbe
out
mov
rol
mov
sub
push
mov
int
imul
jbe
call
adc
mov
jbe
loop
jg
icebp
mov
jb
adc
mov
ins
cmc
out
cdq
dec
or
dec
ret
idiv
xchg
dec
and
inc
jl
in
jne
pop
call
ins
inc
mov
mov
pop
mov
arpl
lock
jne
sub
movs
jae
ss
cli
xchg
sbb
std
mov
(bad)
fwait
jge
test
xlat
or
xor
fs
daa
lock
cmps
popa
sbb
cmps
or
call
jbe
or
stc
icebp
ret
mov
cmp
mov
cmps
push
rcl
mov
fstp
aam
icebp
push
sti
jmp
inc
cmps
lock
shl
ins
jmp
push
mov
mov
mov
push
jbe
aas
stos
mov
xchg
int
mov
not
pop
imul
jge
adc
push
pop
xor
inc
inc
icebp
adc
test
mov
stos
out
jne
shl
cli
jns
xlat
mov
test
dec
mov
push
mov
daa
push
mov
std
dec
lods
add
aam
jnp
and
bound
sub
fcomip
adc
mov
xchg
lea
jp
je
xchg
inc
sbb
out
iret
rcl
and
add
or
xor
cmc
scas
push
lock
leave
dec
adc
in
push
das
test
push
xor
sahf
xchg
cs
sub
fbld
dec
je
push
not
push
mov
out
xchg
or
mov
fistp
jo
adc
outs
adc
sahf
jno
in
jo
out
push
loop
push
push
and
add
inc
add
test
cmps
mov
mov
push
ret
adc
or
idiv
pop
fsubr
jmp
into
in
adc
js
inc
fisub
push
push
int
xor
dec
sbb
xchg
lods
mov
aad
rcl
icebp
loopne
mov
pop
retf
vmovlps
repnz
jne
mov
fst
pop
mov
(bad)
mov
xchg
push
pop
or
adc
test
hlt
cmp
fst
add
lock
repnz
movs
in
imul
and
shr
mov
ds
mov
or
or
ins
gs
dec
test
nop
lfs
mov
sbb
std
ja
sahf
shl
and
imul
lock
and
arpl
and
inc
push
xor
jbe
jne
imul
xchg
sbb
add
push
adc
sub
sar
and
jno
icebp
mov
and
int3
leave
and
adc
in
and
pop
loopne
aaa
fisttp
loope
jae
cmp
fdiv
jle
nop
jmp
repz
loope
mov
cdq
(bad)
lock
out
aas
div
fs
ret
ror
and
fwait
pop
dec
fnstcw
mov
mov
stos
mov
sti
dec
ins
or
inc
cld
dec
icebp
in
hlt
mov
aaa
mov
xlat
js
ret
pop
jbe
jno
pop
ja
stos
inc
sbb
jae
pop
jo
pop
scas
repz
push
jge
aad
ret
adc
(bad)
or
sub
lea
aas
and
hlt
int3
xor
or
inc
mov
out
sub
dec
ror
call
add
jae
cmp
fistp
or
into
ror
data16
jne
adc
test
push
push
pushf
xchg
scas
fld
(bad)
bound
ds
out
retf
jnp
icebp
in
and
add
jge
jecxz
cli
mov
shl
out
loop
cdq
xor
xor
shl
mov
mov
xchg
mov
pop
mov
call
adc
inc
fnsave
lea
in
test
enter
les
cli
les
(bad)
imul
mov
clc
sti
pop
xchg
dec
icebp
adc
push
lahf
sub
pushf
fidiv
xchg
push
imul
pop
pop
aaa
cmp
jne
sbb
mov
pop
(bad)
cmp
pop
pop
and
test
inc
lahf
ja
sub
fdivr
movs
(bad)
inc
or
outs
icebp
mov
pop
push
les
fnsave
je
and
ja
and
mov
mov
push
addr16
stc
popaw
lods
dec
sub
push
ins
jmp
dec
(bad)
outs
and
fmul
ja
mov
mov
inc
(bad)
sar
psllw
mov
in
cdq
sbb
sub
sbb
jb
push
cld
add
mov
mov
jae
ss
pop
dec
ins
sbb
push
jl
adc
dec
mov
imul
cld
movs
imul
or
push
rcr
jb
sub
and
cmps
mov
or
aam
sub
add
jbe
add
dec
out
sub
mov
les
lods
lock
mov
jecxz
xor
sub
push
stos
jne
cmps
mov
sbb
pop
push
lea
xchg
lds
icebp
push
das
ins
or
cmp
mov
mov
daa
mov
repz
sbb
push
add
out
xchg
sub
sahf
xchg
push
fadd
add
movs
push
mov
ror
repz
test
xchg
sbb
adc
xchg
cwde
repnz
mov
add
ja
dec
mov
xchg
cwde
add
bound
add
mov
sbb
jbe
adc
fwait
jecxz
mov
mov
mov
repnz
mov
and
(bad)
jecxz
cmps
ror
je
aas
loope
jbe
int
(bad)
int
sar
mov
shr
icebp
mov
fsubr
and
div
and
jge
adc
mov
adc
fld
repz
icebp
adc
lds
or
push
or
add
(bad)
mul
test
mov
stc
add
in
inc
inc
data16
push
into
mov
xchg
mov
repnz
mov
cmp
stos
leave
(bad)
icebp
out
ficom
ret
je
(bad)
stc
inc
inc
push
(bad)
push
hlt
arpl
add
add
jb
cmc
retf
mov
aas
lods
xchg
sub
mov
mov
ds
mov
sbb
in
sar
or
fnstenv
les
stos
int3
xchg
push
(bad)
test
(bad)
dec
shl
je
bound
xor
pusha
inc
push
xchg
xchg
cld
(bad)
push
out
push
cld
mov
jnp
sbb
or
fimul
icebp
or
outs
icebp
xor
mov
retf
aad
pop
ret
je
call
fdiv
jno
cmp
and
icebp
add
call
lahf
add
pop
adc
jns
scas
push
test
jne
inc
xchg
add
inc
stc
jo
(bad)
ss
mov
xor
ds
cs
cmp
fist
pop
pushf
rcr
inc
jmp
mov
enter
retf
jbe
sub
icebp
jecxz
sub
mov
inc
cmp
add
push
cdq
sub
icebp
mov
adc
movs
dec
in
pushf
scas
(bad)
pop
mov
ret
jmp
lea
ret
shl
mov
pop
mov
lock
int
jp
and
ds
dec
call
and
cmp
movs
lock
add
cmp
es
into
jecxz
dec
cmp
mov
test
test
and
or
adc
fidivr
or
push
rol
ja
in
in
iret
repnz
jnp
sbb
icebp
and
push
xor
adc
or
ss
mov
nop
shl
out
lods
jne
ins
xchg
cmp
int
sahf
out
fs
xlat
fdiv
push
mov
pusha
retf
sbb
mov
test
mov
jg
rol
dec
xor
call
cmps
popf
cmp
or
je
mov
push
das
frstor
ret
ja
mov
mov
mov
imul
mov
mov
(bad)
pop
es
and
sub
leave
adc
xchg
icebp
js
push
sub
mov
cmp
fmul
ins
mov
inc
xchg
das
xchg
ss
pop
ror
add
jb
mov
fidiv
iret
enter
cmps
(bad)
fidiv
in
scas
pop
sbb
(bad)
aad
sbb
in
sub
pop
jnp
dec
fidiv
mov
ins
outs
or
int
loop
hlt
push
js
cdq
jne
mov
test
add
pop
addr16
add
xor
jns
dec
jns
mov
ret
test
imul
loope
rcl
fdiv
cmp
pop
and
ja
sbb
in
and
cmp
mov
xchg
mov
in
xor
rol
push
add
add
sbb
sub
fist
dec
pop
push
sbb
pushf
mov
mov
mov
int3
mov
push
dec
arpl
mov
cmp
fmul
mov
pushf
cmps
fnstsw
xor
mov
lock
stos
jl
xchg
and
mov
iret
jbe
inc
jg
xchg
fs
rol
xchg
or
rcl
neg
pop
cmp
iret
cli
and
xor
sub
lds
scas
jne
mov
ficom
mov
arpl
outs
mov
mov
xchg
mov
pop
lock
ja
dec
sub
or
jg
movs
push
mov
jbe
mov
les
int
inc
ja
retf
enter
mov
ret
xchg
stos
pop
add
cs
into
xchg
js
pop
add
dec
dec
leave
mov
imul
icebp
adc
sub
pop
push
xor
xor
je
xor
out
loopne
or
(bad)
mov
push
mov
aad
popf
fiadd
xor
scas
cmps
(bad)
sub
mov
xchg
xor
mov
cdq
retf
popf
in
cwde
jbe
pop
ja
pop
xchg
sar
jge
xor
push
int3
enter
and
inc
jne
inc
nop
out
xor
popf
mov
je
enter
xchg
stos
adc
mov
pop
jb
fs
ja
daa
inc
pop
stc
aad
inc
mov
push
cmp
adc
xor
cmp
pop
sti
dec
mov
lock
pop
data16
fucomip
(bad)
xor
cs
jne
cdq
or
inc
jl
in
mov
les
jne
shl
inc
push
hlt
inc
mov
push
dec
sub
pop
mov
cld
aam
in
arpl
add
mov
shr
push
mov
mov
outs
loopne
scas
leave
into
jbe
jne
pop
retf
mov
push
ret
lock
sbb
fidivr
popf
scas
dec
push
mov
pop
call
loopne
repz
jp
pop
pop
inc
clc
mov
adc
adc
sub
mov
mov
adc
clc
imul
mov
cmp
dec
popf
out
stc
push
jne
jo
sbb
pop
mov
mov
(bad)
and
inc
lods
mov
xor
or
hlt
or
test
test
jne
or
xor
sub
test
int3
jae
icebp
xchg
sub
in
dec
add
test
call
inc
cmp
iret
mov
(bad)
imul
lea
je
pop
sti
mov
inc
cwde
cwde
dec
and
out
cdq
outs
retf
xlat
sbb
mov
push
mov
lock
push
je
xor
add
aad
or
sti
stc
clc
add
cld
loopne
xor
lods
(bad)
pushf
bound
call
clc
mov
lfs
or
je
movs
in
lock
xchg
add
and
push
mov
add
emms
mov
push
in
pop
jb
mov
mov
sbb
lock
inc
xor
jne
ins
call
data16
inc
xor
pop
rcl
(bad)
jne
ds
push
(bad)
jae
xor
stc
(bad)
je
fs
scas
xor
fmul
addr16
imul
pushf
sub
mov
sub
ror
cwde
jbe
inc
fimul
imul
imul
mov
out
cmp
(bad)
test
addr16
mov
cmp
push
out
jl
push
scas
test
mov
fild
(bad)
movs
sub
aas
xchg
(bad)
jmp
push
add
mov
add
jecxz
idiv
ror
or
mov
mov
jno
jb
pop
data16
cmc
es
mov
test
popf
stos
or
cmps
or
lock
mov
jne
cmps
(bad)
aaa
jne
stc
xchg
loope
cli
push
sahf
mov
in
sahf
fist
lods
into
dec
ja
mov
int3
jecxz
jbe
push
mov
jno
stos
sbb
mov
fs
mov
push
je
adc
xchg
inc
rol
and
mov
jg
ins
fld
lods
inc
dec
je
ret
mov
jne
inc
lahf
iret
je
jmp
pushf
mov
mov
xor
aad
push
cmp
push
push
xchg
mov
aaa
mov
stc
daa
and
hlt
cmps
jne
jge
stos
cmps
mov
and
push
xchg
xchg
(bad)
cmps
pop
imul
mov
shl
xor
cdq
mov
adc
scas
jb
stos
shl
mov
pop
cwde
jmp
(bad)
ror
sbb
jno
xchg
xor
sub
popf
inc
jne
aam
sub
push
inc
dec
jns
jne
pop
sbb
jbe
push
push
fild
stc
fdiv
mov
dec
push
data16
push
mov
dec
adc
mov
les
call
dec
mov
icebp
mov
jg
cmp
out
loop
ret
jne
fild
retf
add
push
xor
cmp
push
stos
punpckhwd
enter
into
test
push
xchg
dec
push
xchg
mov
jp
xchg
mov
xor
sbb
clc
sub
pop
xchg
sbb
fist
and
push
pop
rdpmc
cmp
push
and
aaa
xchg
xchg
cmps
and
les
inc
adc
imul
xchg
xor
dec
mov
mov
adc
jno
js
dec
lods
out
pop
inc
jbe
test
test
mov
je
sbb
mov
arpl
sti
in
das
pushf
in
aam
in
nop
inc
rcl
hlt
jnp
mov
test
mov
xchg
mov
push
add
lock
xor
adc
xor
add
rcr
jne
push
push
ins
imul
pop
jl
mov
out
xor
cmp
dec
mov
mov
call
test
sbb
neg
push
pop
jne
sahf
cmp
mov
int
adc
mov
sbb
add
jne
sub
add
out
dec
inc
mov
jne
out
push
rcr
xchg
push
jmp
push
mov
ret
pusha
repnz
fs
and
sub
cmp
xor
push
and
xor
lock
adc
pusha
ja
les
jl
add
repz
jmp
mov
mov
in
xlat
jbe
test
in
jmp
adc
call
enter
jle
sub
sbb
jne
dec
hlt
push
push
fst
sti
jge
ret
sub
retf
fisttp
or
jp
mov
push
cwde
jge
and
shr
je
adc
sbb
jae
xor
into
cdq
pop
xchg
in
shr
mov
cmc
div
mov
hlt
inc
(bad)
adc
dec
add
mov
push
pushf
call
enter
jecxz
sbb
stos
(bad)
retf
jne
outs
xor
(bad)
outs
test
adc
ja
enter
mov
repz
popa
out
loopne
sub
clc
iret
cmps
xor
xchg
pop
and
out
adc
es
push
int3
(bad)
cmp
sub
push
jp
pop
sub
sbb
fist
add
imul
cmp
xor
je
sub
imul
mov
fidivr
push
push
push
xchg
popa
jg
mov
scas
cmps
jmp
sti
push
mov
ret
icebp
into
push
sub
inc
nop
or
je
and
in
push
push
and
and
cld
(bad)
rep
addr16
clc
icebp
shl
push
adc
sbb
call
aaa
(bad)
gs
jbe
dec
mov
jae
mov
adc
je
xchg
adc
fsub
fidiv
or
leave
mov
(bad)
jl
cwde
fild
int
push
dec
jno
or
add
or
hlt
out
ss
mov
mov
imul
and
pusha
mov
popf
cmps
cmp
xor
ficomp
bound
mov
lahf
inc
jns
ss
je
std
aam
dec
sbb
cmc
jbe
test
and
push
ss
push
mov
inc
ja
jle
sbb
xchg
pop
movs
mov
xchg
test
ja
test
xlat
mov
adc
xchg
jbe
stos
mov
lea
jo
fadd
mov
jnp
xor
ds
stos
je
jmp
cli
dec
in
pusha
je
dec
adc
push
mov
fidivr
inc
fisub
les
xor
jno
test
jne
fst
mov
rcl
xor
jmp
xlat
cli
call
xchg
cmp
jge
in
adc
mov
das
add
jns
in
push
test
fcmovnu
pop
loope
mov
ja
add
jns
jecxz
sbb
sub
(bad)
push
aaa
imul
jg
ja
movs
iret
sub
ins
jno
cmp
dec
mov
xor
sub
mov
loop
and
sti
mov
lock
adc
sbb
ffree
xchg
add
inc
mov
xacquire
sub
icebp
out
push
mov
pop
inc
mov
mov
shl
mov
or
bound
mov
push
push
stos
add
sbb
dec
inc
mov
not
or
or
mov
jmp
cdq
push
je
cld
out
xchg
into
je
movs
cmps
mov
std
push
cs
sbb
in
jbe
sub
dec
dec
stos
or
mov
mov
adc
loop
icebp
shr
pop
aas
in
retfw
enter
push
cdq
mov
sbb
dec
enter
in
rcl
pop
jne
idiv
popa
mov
xor
mov
dec
fcom
mov
sbb
cwde
retf
jno
sahf
cdq
je
pop
cld
je
mov
ja
hlt
and
mov
repnz
into
and
xchg
or
jno
pop
xor
in
inc
cmp
mov
or
mov
ss
sbb
mov
in
pop
arpl
out
ins
pop
push
mov
push
jne
or
adc
mov
outs
pop
mov
and
adc
stc
pop
jae
sbb
lods
fidiv
test
jns
cs
dec
mov
add
mov
pop
lods
repz
or
and
jmp
adc
xor
ss
xchg
mov
(bad)
fistp
add
cmps
outs
mov
daa
jmp
inc
cwde
add
inc
aad
cmp
stc
stc
mov
icebp
popa
or
in
out
imul
lea
loopne
(bad)
mov
push
icebp
add
not
jbe
pop
jne
scas
mov
jbe
jo
lock
or
mov
aaa
push
add
icebp
add
cmp
lods
jge
xor
(bad)
jne
xlat
jg
jbe
out
repnz
shl
xchg
int
fs
mov
xor
or
adc
xchg
add
mov
xor
imul
out
inc
adc
jne
cmp
shl
shl
inc
mov
inc
sbb
icebp
dec
inc
push
mov
(bad)
hlt
and
les
fs
call
retf
popf
es
shl
dec
int
outs
xchg
retf
sti
or
call
cmc
mov
in
sar
push
push
inc
adc
cmp
icebp
(bad)
push
mov
(bad)
xor
je
cmp
imul
les
jbe
(bad)
clc
cmp
push
out
push
jne
pop
or
inc
cmp
mov
mov
jne
fsub
mov
cmps
mov
jmp
inc
dec
cmc
mov
xchg
jl
xor
(bad)
test
xor
in
jns
push
jne
cmps
ficom
scas
adc
mov
cld
rcr
mov
mov
je
hlt
mov
jbe
mov
mov
cmp
(bad)
jmp
push
clc
sbb
add
and
enter
push
ja
arpl
jb
cmp
in
inc
popf
ins
xlat
into
(bad)
maskmovq
neg
mov
jne
ins
ss
stos
mov
leave
js
and
pmaddwd
es
mov
cmp
sti
push
lock
mov
xchg
out
cmps
loopne
cmp
aas
mov
sbb
jle
cli
nop
add
or
in
jg
out
das
fdivr
movs
rcr
fs
or
call
cmp
sub
jo
jno
add
aas
mov
mov
cmp
mov
ds
daa
adc
push
int
in
xchg
popa
sar
outs
repz
mov
inc
test
fiadd
pushf
mov
xchg
daa
adc
jmp
ja
and
mov
lock
adc
mov
test
cmp
lods
je
xor
sbb
pusha
test
(bad)
mov
mov
stc
lods
dec
sbb
xchg
pushf
arpl
or
test
dec
jl
loopne
into
xchg
and
jne
(bad)
call
lock
lahf
or
add
xchg
ret
pop
sti
scas
jbe
mov
out
cwde
sbb
mov
ja
ja
jg
sbb
push
popa
pop
xchg
in
cmp
popa
repnz
pop
mov
pop
xor
int3
or
test
call
sbb
ret
fnstenv
(bad)
push
push
push
adc
jbe
sar
dec
mov
icebp
or
(bad)
shl
and
stos
addr16
inc
mov
(bad)
jnp
test
sti
push
jnp
jno
das
test
dec
dec
jns
jne
mov
shr
pop
test
pop
and
mov
or
iret
repnz
or
push
or
xor
pop
cmps
jne
fbstp
jbe
push
loopne
mov
mov
sub
pop
adc
stos
push
sbb
jmp
jp
sbb
mov
and
je
push
cmp
mov
add
jmp
ins
icebp
out
adc
fild
pop
jne
push
mov
dec
cld
fs
push
jns
cmp
jne
dec
push
jmp
mov
cmp
and
push
enter
lea
cmp
popf
jns
movs
push
aas
repnz
sub
sbb
scas
(bad)
push
iret
mov
and
psrad
out
mov
ja
add
sub
xchg
cmp
add
retf
push
cmp
add
pop
push
pop
push
mov
inc
xor
iret
add
push
mov
sbb
jno
jae
sub
push
cli
mov
or
dec
lock
or
cmps
call
lods
inc
jb
outs
jns
inc
cmps
xchg
and
fidiv
mov
test
imul
xor
test
xchg
xchg
lds
loopne
je
stos
lock
mov
and
out
sbb
add
scas
lds
fld
cmp
xchg
sub
pop
jbe
in
lods
mov
outs
leave
jmp
and
fisub
xchg
data16
add
fdiv
into
sub
pusha
arpl
or
jb
(bad)
and
(bad)
mov
pop
addr16
mov
out
(bad)
cli
into
fisubr
out
mov
icebp
aam
dec
sahf
cmp
xchg
out
sub
fadd
jnp
sbb
and
dec
(bad)
pusha
jo
mov
xchg
outs
retf
(bad)
xor
aad
pop
mov
mov
outs
adc
cwde
lahf
imul
mov
test
in
inc
add
xchg
(bad)
jbe
ins
sub
shl
(bad)
pushf
or
jne
push
enter
imul
int3
cld
sub
pop
mov
shl
adc
xlat
popf
push
retf
mul
lock
xor
sbb
add
xchg
xor
and
icebp
jns
mov
mov
data16
inc
push
mov
add
outs
mov
icebp
mov
into
adc
js
fstp
mov
dec
push
jbe
shl
dec
mov
imul
into
lock
lock
test
sub
sbb
dec
jb
mov
jo
pusha
shl
or
and
jb
stos
cli
out
cmp
jecxz
je
pop
icebp
jle
(bad)
mov
xlat
mov
loope
sar
mov
lock
xchg
cmps
mov
mov
and
add
ins
and
dec
or
(bad)
inc
hlt
xchg
je
push
xchg
jg
adc
test
mov
sub
dec
retf
lock
outs
repnz
jns
je
(bad)
cmp
clc
ins
push
das
enter
repz
xchg
aam
dec
jne
dec
push
mov
sahf
push
xchg
mov
pop
ror
adc
add
dec
fbstp
mov
pusha
leave
mov
addr16
(bad)
mov
in
dec
out
inc
inc
cdq
mov
ins
add
jecxz
leave
cmp
xlat
icebp
and
imul
push
push
or
xor
mul
cmp
popf
je
push
fcomp
jnp
mov
add
cmc
push
xchg
imul
xchg
icebp
cmp
cwde
dec
fwait
mov
cmps
std
icebp
pop
xchg
or
push
add
jns
jns
push
sub
jbe
popa
and
mov
add
xchg
adc
add
jge
mov
mov
dec
jmp
cmps
sti
cs
test
jnp
in
cmps
dec
add
in
add
jns
lds
jmp
call
and
out
push
call
dec
lods
fidivr
adc
pop
pop
fdiv
les
retf
jno
xchg
retf
fisub
stos
bound
lock
fwait
lahf
pop
add
mov
xchg
hlt
dec
mov
mov
sbb
mov
(bad)
push
(bad)
mov
idiv
push
cmp
retf
aam
xchg
jmp
and
add
jne
inc
push
imul
pop
nop
ja
rcl
jns
inc
popa
iret
mov
adc
ffreep
add
not
repnz
push
sub
adc
pop
call
xchg
pcmpeqb
inc
jecxz
ja
mov
and
pushf
lods
mov
ffree
cli
sti
icebp
jl
dec
ins
xor
ficomp
fadd
mov
xor
mov
sub
movs
pop
xchg
loop
push
enter
popa
cmps
mov
pusha
mov
mov
xor
(bad)
xchg
mov
in
test
icebp
stos
mov
pop
sub
sub
in
mov
mov
call
push
mov
outs
xchg
push
mov
hlt
ins
push
mov
mov
jmp
add
ja
sahf
fadd
add
cmp
lock
js
push
and
nop
jbe
js
retf
xor
jp
sbb
js
imul
push
pop
xchg
mov
jbe
sub
push
jp
icebp
push
mov
repz
push
(bad)
mov
mov
mov
jne
xchg
pop
int
scas
jne
xlat
icebp
push
(bad)
jl
pop
cmp
xchg
jne
xchg
adc
fwait
cli
lock
in
mov
jmp
add
mov
inc
addr16
pop
dec
adc
lods
cmp
frstor
repz
pop
push
outs
inc
cmp
retf
pop
lock
sub
(bad)
xchg
pop
mov
cmp
jns
lock
inc
xlat
icebp
sub
sbb
std
xchg
adc
mov
push
test
sti
call
cmp
cdq
(bad)
mov
leave
dec
aam
fwait
in
sbb
jmp
sub
aas
jo
sub
jmp
ss
(bad)
cmc
shl
and
jmp
jl
mov
cmp
stc
and
inc
outs
or
dec
(bad)
xchg
in
sub
dec
ins
je
sahf
mov
out
cdq
imul
popa
inc
je
rcr
outs
mov
add
aaa
dec
jnp
pop
adc
aad
jbe
dec
push
jmp
rcl
sbb
jb
push
xchg
movs
cmp
xchg
jne
mov
sti
ja
jno
pop
or
sbb
or
dec
(bad)
jne
pop
add
hlt
in
xchg
aaa
xor
lds
data16
add
mov
fnstsw
cmps
jle
jns
mov
xchg
mov
retf
mov
cmp
in
ret
je
inc
retf
call
mov
dec
mov
je
dec
test
jbe
stc
gs
out
jb
xchg
out
push
mov
and
jmp
lock
xchg
mov
outs
fbstp
icebp
sub
aad
or
scas
out
dec
fsub
aaa
imul
repz
in
adc
outs
push
push
sbb
cwde
pop
inc
jne
or
rol
push
inc
in
in
scas
(bad)
pop
mov
fnstenv
(bad)
sbb
xchg
inc
and
inc
cmp
add
or
xchg
icebp
xchg
xchg
xlat
sub
mov
and
je
push
jbe
scas
clc
xor
pop
adc
inc
jbe
xor
and
xchg
sbb
sti
fisub
xchg
adc
lds
pop
fadd
cmp
lea
dec
push
in
mov
dec
hlt
sbb
les
neg
jo
or
jp
sub
js
push
cmp
jne
adc
enter
add
mov
pushf
dec
pop
lock
test
push
out
or
fs
(bad)
(bad)
cmp
je
cmps
test
jb
push
in
lock
add
dec
ret
cmps
retf
repnz
out
ret
in
fstp
xchg
or
ret
out
je
jne
mov
mov
out
or
cld
mov
pop
fadd
cli
pushf
test
inc
jno
inc
xrelease
aas
rcl
leave
jbe
mov
ret
xchg
mov
mov
loopne
aad
test
iret
xchg
loop
mov
fdivrp
jl
and
xchg
pop
cdq
mov
add
retf
pop
hlt
pop
inc
mov
jbe
sbb
or
fstp
push
ss
enter
or
shr
retf
fs
sub
sbb
inc
imul
mov
div
shl
xchg
inc
lock
mov
xchg
ss
je
jmp
xor
pop
mov
lock
add
ja
int3
shl
push
inc
jbe
sub
mov
jb
add
jbe
ja
mov
mov
fistp
idiv
sti
into
cmp
lea
xlat
fld
mov
push
pop
sbb
repz
pop
mov
ss
and
sbb
xchg
icebp
mov
out
retf
inc
push
lock
mov
mov
arpl
jle
push
and
push
ret
je
jge
int
in
jns
dec
pop
and
scas
loop
cmp
sbb
add
push
mov
push
mov
call
aaa
add
data16
jne
outs
pop
inc
jbe
jmp
dec
aad
mov
iret
jnp
shl
jmp
aas
jg
shr
push
ret
fisttp
pop
imul
sub
(bad)
xor
jne
adc
sub
test
fbld
hlt
jmp
pop
data16
call
or
dec
xchg
int
jmp
mov
fcom
or
std
mov
add
stos
and
or
int
sbb
xchg
push
scas
jo
into
pop
pop
jb
jle
(bad)
ret
mov
ja
or
loop
call
jge
sti
cmc
dec
and
out
xchg
cwde
jp
pop
adc
out
lock
lods
and
and
or
cmp
mov
retf
ja
adc
fiadd
and
pop
dec
adc
bnd
adc
sbb
sbb
mov
ret
dec
or
stc
cmp
sub
adc
sbb
mov
jp
jnp
retf
imul
fdiv
jb
leave
push
cmc
shl
sbb
sub
adc
jge
xor
ds
movs
xchg
scas
sub
xchg
dec
jbe
mov
icebp
aam
aad
out
repz
inc
cmp
mov
or
ja
cld
inc
pop
bsr
shl
out
out
int
dec
xchg
pop
(bad)
mov
iret
aaa
data16
push
sahf
and
das
aad
test
(bad)
mov
adc
dec
mov
push
outs
into
xchg
and
push
mov
mov
jl
loopne
jne
ret
pop
clc
ja
popa
into
jp
cdq
(bad)
int
int
fidivr
push
cld
fbld
mov
mov
loop
shl
xchg
aam
mov
adc
jl
cmp
xchg
lods
ret
or
adc
lock
daa
in
mov
arpl
scas
sbb
cwde
jo
retf
add
mov
cld
rcr
mov
jl
inc
js
jmp
pushf
jne
daa
xchg
aam
sbb
xlat
jo
pusha
xchg
aaa
mov
cmc
push
dec
or
stos
test
cmps
pop
adc
pop
mov
std
out
mov
je
mov
inc
ja
jbe
push
out
in
inc
mov
mov
fst
and
jl
push
cmp
mov
xor
fist
nop
inc
outs
jl
leave
test
in
xor
inc
icebp
mov
pushf
xchg
stos
out
stos
dec
jmp
push
pop
(bad)
lock
retf
loope
ror
jne
mov
fidiv
(bad)
call
sub
sub
ret
push
pushf
push
dec
push
ret
sti
fdivr
test
push
xor
sti
mov
xor
and
mov
mov
sub
lds
pop
mov
stos
arpl
pop
or
mov
mov
push
push
xchg
fyl2x
les
jae
pop
adc
push
cmp
imul
inc
or
icebp
cli
repnz
add
cmp
in
call
out
xchg
mov
shl
test
aas
jae
mov
pop
int
icebp
test
push
out
rcr
pop
xor
or
cdq
and
jecxz
jecxz
jl
jmp
ja
jne
cmp
into
ja
mov
imul
(bad)
sub
ins
fld
repnz
or
or
pop
(bad)
xchg
(bad)
adc
cwde
test
inc
fidivr
loopne
xor
and
nop
int
xchg
gs
dec
mov
dec
pop
pop
pop
push
xor
push
mov
das
iret
out
mov
lahf
mov
adc
loop
nop
stos
nop
and
mov
popa
fs
xchg
adc
sbb
cmp
loope
js
sbb
inc
popa
add
inc
stos
lock
sub
xor
fwait
dec
xchg
je
and
retf
push
xchg
xchg
ds
sbb
or
sub
hlt
ja
mov
int
fdivr
or
and
(bad)
xlat
and
cmc
pop
mov
mov
adc
scas
inc
sbb
hlt
scas
(bad)
lock
movlps
test
jle
cmp
inc
ins
fwait
icebp
xchg
or
mov
cmp
nop
push
mov
xchg
xchg
sub
out
call
and
cmps
xchg
mov
in
mov
icebp
jno
xor
(bad)
xor
or
or
(bad)
jl
std
int
push
into
jo
sub
adc
je
push
vpmullw
add
lds
jecxz
sar
push
sub
dec
into
and
xchg
je
mov
retf
xchg
lods
repnz
loope
cmps
lock
enter
hlt
mov
pop
pushf
dec
xchg
je
retf
ja
loope
xor
fdivrp
or
arpl
repnz
dec
jns
sahf
call
pusha
inc
das
mov
fldcw
sbb
cmp
movs
pushf
xlat
jmp
ret
icebp
stos
pop
aaa
xor
int3
clc
imul
add
mov
push
sti
mov
lds
sbb
int3
pop
add
jp
mov
jne
fwait
jnp
ja
mov
outs
sub
mov
dec
ror
jle
push
lods
enter
pop
vzeroall
xchg
pop
cmps
push
cmps
in
mov
jno
push
cwde
lock
sub
mov
add
jno
out
fcom
mov
ins
sbb
sar
nop
jne
dec
mov
js
mov
xlat
mov
imul
xchg
push
and
out
push
jbe
dec
jnp
adc
fisttp
xor
mov
mov
jae
mov
aam
mov
imul
add
(bad)
aaa
pop
cmp
cs
rcr
ins
mov
movs
sub
out
call
mov
sub
xchg
inc
pop
stos
in
and
je
aaa
sub
fs
sub
test
jg
in
xor
hlt
or
pop
movs
sahf
sub
and
repz
push
out
(bad)
xor
cmp
or
inc
xor
fs
dec
sbb
movs
and
dec
inc
scas
jbe
dec
jg
bound
call
push
or
lock
sbb
lock
adc
adc
jne
push
lock
inc
in
jmp
sar
jmp
or
test
cdq
jne
pop
ins
sbb
stos
retf
test
jmp
mov
shl
stc
ins
loop
ss
and
sub
mov
add
pusha
jbe
pop
pushf
fcomp
or
push
mov
int3
mov
mov
hlt
dec
inc
cmc
fstp
retf
or
cmp
push
jb
pop
loope
push
cmps
out
push
and
adc
mov
bound
retf
mov
jle
pop
stos
scas
mov
jne
stc
lods
xor
jg
inc
inc
nop
fidivr
mov
pop
sbb
mov
nop
test
ins
aad
add
shl
or
fst
fmul
out
pop
push
jo
jg
es
ins
and
dec
outs
xor
dec
fcmovnbe
push
enter
and
leave
and
iret
(bad)
aad
iret
mov
js
icebp
mov
les
gs
or
leave
push
mov
mov
ror
lock
pushf
xor
jae
hlt
sub
xor
icebp
cld
and
loope
push
push
push
daa
jne
iret
jecxz
(bad)
mov
xchg
adc
lea
sbb
je
test
dec
ja
stos
jne
pop
das
fnsave
jmp
add
push
mov
call
hlt
push
lods
pop
mov
xchg
dec
and
repz
cld
lock
inc
adc
sbb
xor
mov
lods
test
out
cmp
cmp
xchg
into
mov
data16
jle
push
mov
imul
retf
(bad)
jo
lea
sar
stos
adc
jl
or
sbb
les
jnp
and
xor
push
dec
ins
je
adc
add
mov
mov
out
mov
xlat
jecxz
pop
push
test
outs
push
jb
daa
push
jbe
xchg
out
into
sbb
mov
jne
mov
add
test
mov
pop
jecxz
add
add
mov
xchg
ja
and
add
js
js
out
cdq
bound
cmp
mov
mov
push
fs
pop
js
ja
jbe
pop
ret
idiv
leave
mov
stos
mov
jo
cs
and
adc
ins
icebp
add
xchg
pop
cmp
xor
jle
sub
or
rcl
std
jae
xchg
push
jae
ja
and
jae
cmp
pushf
dec
xor
mov
daa
test
sub
cmp
sub
retf
mov
out
(bad)
adc
pop
movs
mov
mov
je
aaa
sbb
cs
ret
jbe
cmp
pop
cs
movs
jbe
add
fs
clc
mov
push
daa
sti
ins
addr16
or
cs
outs
bound
add
or
icebp
jg
icebp
xor
cdq
(bad)
(bad)
(bad)
repz
ret
or
sbb
icebp
aam
and
je
pop
push
xor
call
into
cmp
fisttp
sbb
retf
dec
jo
out
stos
or
fnstenv
jo
and
(bad)
fs
sbb
ins
jne
cli
jno
(bad)
in
add
test
inc
mov
xlat
repz
jbe
cmps
mov
stos
mov
in
xor
pop
fist
inc
hlt
add
dec
dec
mov
add
bound
ds
mov
idiv
and
icebp
or
leave
(bad)
jns
(bad)
xor
inc
mov
cmc
push
jo
jno
inc
dec
sub
push
fild
data16
pop
mov
xor
adc
push
mov
hlt
xchg
xchg
js
pop
xor
jmp
lds
sahf
int
adc
xchg
push
adc
retf
pop
mov
test
cmp
(bad)
push
je
ja
movntq
ror
or
das
in
fwait
movs
xchg
jmp
aas
jbe
add
(bad)
jmp
fs
xchg
mov
inc
call
adc
inc
xchg
pop
ret
cmp
and
jmp
and
imul
mov
mov
mov
jle
lock
arpl
fnstcw
fisub
sbb
aam
hlt
lea
jnp
push
fimul
fst
mov
and
adc
mov
xor
jmp
(bad)
fsub
int3
lea
mov
mov
sti
dec
cmps
fs
data16
and
les
sub
xor
xor
and
mov
jo
sub
or
cli
jbe
jl
mov
dec
xchg
dec
mov
imul
clc
dec
sahf
push
cmp
mov
jmp
sbb
cmp
xchg
or
sub
jle
int
shl
movs
sbb
push
stc
je
cmp
push
jne
or
les
xor
push
jo
in
jae
ds
xchg
sbb
jo
out
jno
call
jp
ins
inc
std
mov
fsubr
clc
xor
mov
cli
adc
pop
icebp
loop
inc
aas
xor
cmp
loope
ja
pop
arpl
icebp
test
push
(bad)
pop
sbb
add
call
cmp
mov
xchg
(bad)
dec
push
aaa
lock
(bad)
daa
xor
out
pop
jne
mov
jbe
adc
fmul
stos
adc
ret
jne
sahf
cld
shl
test
mov
outs
mov
mov
pusha
clc
lock
mov
push
push
fld
mov
sbb
frstorw
int
cmp
lods
add
mov
inc
jnp
lds
out
xor
mov
add
pop
mov
jo
mov
push
rcr
enter
movs
push
repz
and
lock
sahf
out
jb
aam
sbb
xor
mov
cmp
bound
ret
push
cmp
pop
mov
ds
int
xchg
retf
cdq
movs
cmp
(bad)
jae
add
daa
or
sahf
cmps
mov
mov
sti
xchg
push
test
jne
imul
inc
loope
xlat
adc
sbb
je
std
and
loopne
push
sbb
mov
and
lods
adc
ins
int
xor
mov
cmp
dec
and
mov
mov
mov
movs
sub
cwde
push
push
sti
cmps
cmps
bnd
icebp
out
popf
jp
ins
je
cmp
ja
sbb
dec
in
(bad)
test
stos
mov
std
mov
or
jl
stc
adc
push
aad
enter
movs
sub
jbe
adc
jo
nop
add
mov
mov
xchg
mov
rcl
rol
mul
mov
push
bound
loope
jne
mov
out
and
jne
aad
test
fnsave
repz
seta
loopne
xor
lock
push
lock
xchg
imul
dec
lea
sbb
imul
dec
jo
jne
pop
shl
jbe
aas
cmp
mov
pop
mov
lds
mov
call
ins
je
rol
xchg
ja
lods
add
dec
mov
mov
sar
add
jg
mov
jnp
push
fiadd
jl
clc
xchg
add
sbb
push
cmc
cmps
and
inc
lahf
icebp
(bad)
pusha
push
fimul
pop
or
add
cld
dec
jbe
xor
(bad)
std
jns
pop
ret
ja
mov
adc
ins
dec
jbe
cmp
or
cmp
cmp
nop
into
rcl
pop
and
and
jbe
dec
xchg
push
test
jbe
cmp
loop
ja
sub
and
add
jmp
adc
dec
or
xchg
outs
jns
sub
je
shl
or
xlat
push
sbb
ret
cmp
leave
pop
inc
aam
mov
pusha
imul
jge
aad
mov
sub
pop
sbb
in
fist
jno
add
adc
(bad)
fsubr
jp
outs
icebp
mov
ja
fidiv
lahf
outs
mov
sub
ss
mov
enter
icebp
popa
xchg
fneni(8087
cmp
jg
dec
jmp
jbe
xlat
push
add
dec
mov
in
and
movs
repnz
xlat
gs
sub
icebp
mov
push
push
cli
imul
dec
or
out
adc
or
mov
mov
fcomi
push
adc
push
jae
bound
and
mov
or
dec
jmp
mov
mov
mov
aad
pop
mov
(bad)
ja
repnz
jo
mov
mov
sar
lock
cmp
push
aam
nop
ins
mov
and
(bad)
in
stc
add
mov
adc
icebp
stos
stc
pop
mov
cld
fimul
ret
data16
mov
rol
je
in
inc
mov
test
jp
fadd
jo
adc
mov
ja
fcomp
in
les
xor
ss
stc
adc
fs
or
mov
mov
cmp
cmc
bound
enter
fidivr
icebp
data16
pop
pop
push
icebp
pop
dec
xchg
fistp
push
scas
jne
addr16
jo
cwde
mov
call
test
(bad)
into
or
mov
mov
and
loopne
imul
fidiv
ror
test
in
or
lock
inc
or
sbb
add
gs
int3
push
int3
mov
inc
ins
mov
adc
push
mov
in
jno
mov
mov
int
add
js
add
repnz
inc
loopne
xor
add
mov
pushf
mov
sub
repz
shl
sub
mov
jp
xor
cmp
cmps
and
sbb
xchg
cmp
jnp
inc
retf
and
adc
and
or
pop
push
and
jge
ins
pop
imul
je
mov
jmp
inc
xor
shl
sahf
mov
mov
icebp
mov
cld
sar
sub
je
xlat
add
je
(bad)
cs
push
pextrw
scas
fwait
jmp
out
fwait
xlat
dec
rcr
in
aas
pop
jle
sti
sbb
fild
mov
cdq
bnd
dec
pop
pusha
jns
push
adc
mov
sbb
imul
jmp
call
lods
call
lock
(bad)
dec
imul
aaa
xchg
mov
sub
ror
mov
into
or
and
(bad)
iret
test
pop
inc
lahf
and
push
xor
or
jbe
in
das
call
lods
mov
adc
imul
repnz
add
push
mov
cwde
ret
lea
cmp
mov
add
data16
jmp
jo
mov
in
(bad)
cld
fsub
cmp
cmp
mov
shl
fdiv
hlt
push
fs
and
in
add
jb
ins
jp
jns
test
jb
jne
dec
xor
ja
test
mov
mov
and
adc
and
cmp
mov
shl
pusha
or
scas
jbe
sbb
mov
out
cmp
mov
test
mov
ins
shl
jo
lahf
jbe
xchg
ret
mov
jle
xchg
jg
cdq
xchg
xchg
sub
in
mov
arpl
in
sti
(bad)
xor
xchg
rol
leave
push
and
sar
int
pop
jbe
mov
movs
jbe
add
jne
out
mov
mov
pop
sbb
imul
addr16
and
mov
push
aam
fisub
push
sub
cmp
dec
adc
inc
cmp
mov
aaa
pusha
ins
xchg
(bad)
adc
popa
daa
in
sbb
inc
jno
setnp
stos
rol
out
mov
and
inc
aad
sbb
fld
(bad)
cmps
sbb
retf
scas
mov
sub
call
mov
icebp
sbb
(bad)
inc
clc
mov
sbb
cmps
pop
icebp
aam
retf
test
mov
add
repnz
stos
rcr
sub
dec
hlt
dec
lea
repnz
fdivr
jbe
psubsw
mov
xchg
mov
push
stc
inc
inc
adc
cmp
lods
mov
ss
in
repnz
loop
push
add
pop
jne
imul
jo
cmp
ret
pushf
adc
mov
xchg
and
push
xor
int
rcl
push
xchg
cmps
data16
xchg
cmp
xchg
inc
outs
adc
pop
scas
mov
sub
js
icebp
sbb
push
push
inc
inc
shl
xchg
mov
sbb
js
cmp
sbb
fdivr
jl
mov
mov
mov
(bad)
mov
inc
push
lock
imul
jb
aam
and
xor
xchg
xor
in
ret
sar
(bad)
lods
rcr
add
pusha
repnz
cwde
jmp
jno
add
in
jno
rcl
pop
ja
sbb
dec
jb
push
clc
sub
(bad)
and
mov
mov
aaa
pop
mov
mov
dec
jmp
push
cmps
imul
xchg
out
ja
call
or
lods
hlt
ins
sbb
pop
pushf
jo
into
cmp
leave
call
mov
jecxz
jmp
or
jne
aad
loop
sbb
in
cmc
sar
sbb
mov
pusha
mov
xor
sub
adc
inc
dec
test
dec
movs
pop
scas
mul
or
into
stos
sbb
mov
mov
pop
test
lock
mov
xchg
mov
cmc
jp
fs
jnp
pop
cld
sbb
enter
jno
push
aam
ror
pop
mov
data16
inc
neg
out
div
loope
push
(bad)
and
mov
int3
jns
cmp
(bad)
jbe
mov
mov
sub
jmp
sbb
shr
mov
mov
(bad)
stos
add
inc
mov
pop
stc
cmp
(bad)
movs
into
(bad)
mov
test
mov
retf
add
sub
sub
push
test
mov
movs
jmp
mov
and
adc
loope
cmp
ja
mov
dec
pop
inc
movs
sub
push
pop
xchg
or
sub
dec
and
jns
je
in
(bad)
in
ja
popa
and
nop
cs
(bad)
mov
std
mov
push
repnz
xor
sahf
xchg
jne
mov
(bad)
movs
xchg
adc
sub
das
std
mov
sub
mul
cwde
adc
(bad)
cmc
sub
mov
mov
cli
leave
cmp
mov
mov
pop
ins
jbe
fwait
mov
jo
mov
mov
retf
inc
lock
mov
add
fld
cmp
inc
pop
ja
ins
jae
call
and
mov
pop
retf
sbb
add
out
lds
add
imul
popa
mov
sbb
jns
xchg
cmc
hlt
xchg
cmp
push
nop
jl
in
retf
mov
sub
leave
lock
jmp
add
movs
jne
fwait
cmp
neg
cmp
mov
loop
sar
ja
daa
aad
and
and
and
xor
nop
stos
loop
sti
test
daa
jecxz
mov
push
int3
cdq
adc
xor
(bad)
push
sbb
dec
mov
jmp
or
aad
into
cld
pop
cwde
lock
and
(bad)
pop
cld
jbe
leave
ds
mov
mov
xchg
test
mov
(bad)
jl
lods
fidivr
pop
or
xor
dec
mov
inc
jp
repnz
fnstcw
jge
movs
push
and
cmp
cdq
dec
mov
fbld
ret
test
mov
arpl
(bad)
sbb
and
jbe
sub
jne
int
hlt
imul
mov
xlat
das
test
jae
jl
stc
sbb
jmp
pop
sub
cld
lock
xchg
icebp
scas
fs
adc
movs
nop
sbb
jne
mov
push
mov
inc
cdq
dec
mov
sti
and
xor
pop
int3
cli
pop
dec
stc
fimul
leave
mov
cmc
addr16
icebp
xchg
cmp
pop
cmp
neg
rcr
fwait
dec
inc
jno
les
scas
xlat
mov
stos
and
lock
mov
je
stos
mov
into
shl
mov
sar
adc
sbb
jne
shr
ja
das
lds
inc
inc
rcr
retf
lock
mov
push
dec
jmp
jbe
bound
mov
add
push
push
imul
mov
les
jb
adc
imul
xor
mov
sub
ja
jge
leave
xchg
fs
arpl
pop
call
sub
jo
push
jg
mov
sub
fld
icebp
cwde
jmp
mov
xor
ror
or
push
push
into
and
popf
jle
lea
jle
and
daa
(bad)
push
jne
fcomp
ss
dec
sub
je
cld
push
add
dec
pop
fadd
nop
push
dec
adc
push
cli
cmps
sbb
jle
cmp
jmp
in
sbb
adc
test
pop
sub
jnp
cld
pusha
push
aad
lock
add
je
or
pop
lahf
fldln2
sbb
inc
arpl
jge
mov
push
outs
std
cmc
dec
mov
stc
cmp
add
fnstenv
pop
inc
or
xor
jns
shl
xchg
(bad)
xor
test
shr
(bad)
cmp
ins
xor
fwait
jo
cmps
add
jle
dec
jge
mov
call
lds
ins
ja
or
pushf
sahf
and
lods
mov
fstp
adc
int
sbb
icebp
jno
mov
addr16
push
arpl
pop
and
jbe
ins
adc
ss
stos
mov
pop
push
hlt
ret
mov
jge
fdivr
sub
mov
mov
fisttp
cmp
aaa
add
pop
inc
mov
cmp
je
mov
dec
ds
mov
mov
jbe
lds
repnz
pop
add
ds
pop
jmp
cmp
sbb
xor
shr
loopne
add
jecxz
mov
inc
push
cdq
jg
mov
push
stc
ja
cs
popa
dec
dec
pop
cmp
add
xchg
les
mov
cmp
(bad)
loop
in
or
jo
hlt
lock
pop
cld
cld
and
ds
call
ret
dec
and
xchg
pop
shr
fadd
mov
and
jno
pop
into
sub
or
xchg
mov
jl
mov
not
in
call
ror
pushf
or
pop
pop
xchg
and
test
out
jb
push
loopne
sahf
jmp
pop
sub
fcom
loopne
retf
fist
mov
push
int3
xchg
aaa
mov
mov
in
jp
xor
pop
out
repnz
aam
out
inc
jae
lock
cmp
xor
fs
adc
pop
push
(bad)
fdiv
jle
das
lods
iret
clc
push
xor
cs
push
inc
cmp
jmp
xchg
pushf
adc
cmp
or
or
outs
and
pop
scas
in
mov
fdiv
cdq
cmp
test
test
pusha
(bad)
push
(bad)
ins
icebp
add
mov
mov
nop
push
pop
mov
xor
adc
repnz
add
mov
add
xor
and
jbe
xchg
cmp
gs
cwde
jno
in
mov
and
pusha
pop
loop
leave
out
jnp
add
sahf
mov
loope
dec
add
mov
jmp
pop
and
das
stos
add
cmp
jno
addr16
or
mov
cmp
xchg
fbld
pusha
lods
dec
mov
div
mov
dec
mov
rcr
and
mov
push
sar
xor
sub
adc
test
imul
lea
cld
lea
mov
or
mov
nop
sar
fldcw
mov
mov
hlt
add
hlt
sar
push
hlt
and
xor
mov
jmp
retf
call
adc
jge
fidivr
xchg
pop
xlat
mov
dec
dec
jae
shl
mov
sbb
ja
push
movs
pop
mov
shl
mov
pop
ds
pop
sbb
neg
push
push
mov
cwde
pusha
retf
sub
xor
fnstcw
outs
sub
inc
fdiv
mov
int3
icebp
aaa
sub
push
sbb
das
scas
dec
cdq
jnp
sbb
je
push
add
je
ja
sbb
inc
jp
or
mov
ja
pop
mov
(bad)
idiv
loopne
pushf
adc
and
fsub
into
fwait
lock
pop
imul
and
cli
cmp
je
and
movs
add
jl
cmp
mov
jl
icebp
or
cmc
mov
mov
call
loop
enter
mov
mov
sub
pusha
sub
xchg
lahf
mov
mov
inc
lea
xor
int3
ret
xchg
mov
mov
aad
ins
push
push
outs
jns
sub
popa
push
jb
ret
ficom
clc
retf
loopne
imul
add
and
mov
jbe
lods
or
dec
cmp
test
push
jp
ja
cmovo
mov
imul
inc
stos
cmc
aad
jg
je
sbb
xchg
xor
test
mov
or
push
lods
jb
fsubp
dec
fsub
inc
mov
ja
pop
mov
(bad)
into
sub
pop
lea
pop
ja
mov
inc
test
jne
and
xchg
ret
dec
lods
movs
mov
lea
in
icebp
cmp
ins
cdq
jno
test
pop
dec
je
cld
jne
jle
adc
inc
sbb
xchg
imul
jmp
inc
jo
inc
cld
ja
adc
loopne
repz
jb
jo
aaa
jno
loopne
jge
jno
adc
push
js
fcmovne
(bad)
push
jne
or
jb
jns
adc
and
jmp
jp
movs
mov
mov
jne
push
jbe
push
rcl
mov
adc
xor
hlt
xor
mov
enter
test
repnz
ja
call
adc
pop
sbb
xor
xchg
add
nop
mov
fld
mov
inc
adc
(bad)
in
pop
mov
xor
call
add
dec
call
in
adc
push
push
(bad)
mov
je
pop
jns
jbe
sbb
movs
xchg
mov
jne
push
adc
sub
push
shr
xchg
jo
neg
or
add
lahf
lock
xchg
sbb
or
cmps
aas
je
pop
add
and
push
jnp
xchg
hlt
std
jae
xor
inc
ja
pop
dec
pop
jb
pop
hlt
push
adc
je
pop
test
jo
adc
push
jl
sub
frstor
shl
xchg
test
mov
(bad)
aam
push
push
mov
out
or
icebp
pop
pop
mov
lds
pop
rcl
ja
out
movs
adc
mov
rcl
inc
retf
sub
mov
mov
jne
xor
xchg
add
ins
sub
xchg
add
push
adc
sbb
jb
stos
sar
jno
xchg
in
call
imul
mov
mov
sbb
cmp
cmp
cmp
jbe
inc
dec
xor
aad
hlt
cmp
xchg
aas
arpl
and
pop
aas
jbe
imul
sub
cwde
icebp
mov
inc
popa
cdq
(bad)
in
push
or
and
xor
dec
in
dec
xchg
stos
ja
dec
ret
add
lock
add
add
add
popa
push
sub
xor
mov
in
movs
mov
pop
mov
nop
push
push
in
mov
lea
test
push
xchg
cmp
cmp
cmp
jne
mov
sub
pop
adc
sub
jno
loop
dec
and
mov
scas
jmp
lock
repnz
or
pcmpgtd
icebp
dec
ins
int3
arpl
add
pop
mov
inc
mov
mov
enter
jns
sbb
test
mov
fidivr
and
jne
xlat
icebp
dec
pop
popa
mov
ror
jo
inc
cmp
or
sbb
xor
cs
mov
mov
imul
popf
inc
nop
xor
idiv
scas
add
(bad)
rcl
ret
jle
inc
rcl
jb
in
cwde
addr16
enter
and
push
mov
xor
fnstcw
dec
js
das
fisubr
js
dec
push
nop
inc
jne
inc
mov
pusha
dec
cmps
pop
push
mov
mov
sbb
or
neg
clc
sbb
hlt
xchg
cmp
or
jo
test
test
shl
sub
mov
mov
jmp
jl
mov
mov
out
jb
(bad)
jb
mov
sub
arpl
cli
mov
mov
test
push
mov
mov
or
cmp
jne
(bad)
sbb
sbb
mov
into
les
ja
jo
imul
(bad)
mov
adc
push
xabort
dec
es
imul
mov
mov
sub
xor
shl
xchg
je
sti
out
jbe
outs
not
inc
and
lods
mov
cmp
adc
lock
ret
mov
mov
data16
xchg
stc
retf
push
or
and
jmp
cmps
clc
jmp
mov
pop
(bad)
fnstsw
in
pushf
mov
and
loope
xor
loop
cmc
je
test
jbe
pop
sbb
jo
ss
mov
ins
adc
rcl
ja
pop
jae
mov
add
dec
sbb
test
pop
(bad)
sub
mov
cdq
les
push
movs
repz
lods
pop
test
jbe
mov
push
pop
stos
dec
jg
lea
pop
mov
(bad)
cmps
je
(bad)
xlat
sub
sbb
(bad)
mov
adc
je
call
ret
jne
and
ret
cli
mov
cmp
jp
fcomp
jbe
mov
aam
iret
inc
pop
jbe
sbb
and
xchg
push
pop
pop
cli
repnz
xchg
xor
pop
icebp
mov
jg
dec
add
fsub
adc
(bad)
std
jns
mov
call
push
xor
dec
mov
scas
jnp
jo
pop
test
sbb
sbb
mov
sub
mov
jne
xor
(bad)
mov
aad
(bad)
retf
call
cmp
and
push
jne
cmps
test
clc
or
xor
mov
mov
js
ss
sub
jle
in
(bad)
mov
add
push
jae
outs
add
outs
mov
js
xchg
inc
and
or
mov
add
jbe
out
sbb
mov
repnz
jnp
jne
push
fsubr
sbb
hlt
stos
fdivr
imul
aas
je
sti
jp
js
test
cwde
(bad)
xor
jg
mov
cmp
mov
pop
cmp
xor
dec
and
mov
inc
inc
(bad)
ret
jbe
cmc
cmps
out
adc
icebp
mov
add
int3
lahf
ss
jne
loope
scas
add
fwait
retf
push
mov
add
sub
jge
arpl
ffree
pop
xchg
ja
push
dec
cld
rcr
aam
pop
das
jbe
enter
add
scas
mov
jne
inc
xor
mov
pop
das
or
mov
ror
and
mov
cld
(bad)
gs
out
mov
in
add
dec
bound
sbb
adc
mov
sahf
or
xchg
cmp
sub
mov
sub
mov
retf
arpl
lods
mov
into
jb
cli
push
les
test
(bad)
jne
pop
sbb
jmp
adc
je
(bad)
jbe
push
sub
rcr
fcmovne
popf
cmp
test
mov
ss
in
mov
js
and
lock
xchg
into
push
fadd
fadd
mov
mov
test
pop
rol
lock
adc
repnz
into
sub
sub
jb
outs
pusha
inc
test
shl
hlt
fstp
adc
cmps
adc
push
icebp
or
sbb
outs
(bad)
(bad)
fsubr
add
mov
pusha
dec
loope
xor
repz
fwait
enter
mov
mov
xor
je
xchg
xor
jae
shl
ss
push
cld
in
pop
sub
adc
sbb
je
pop
arpl
mov
bound
inc
xor
imul
aaa
mov
lock
test
test
bound
daa
je
hlt
and
xchg
push
sub
test
popf
xchg
and
shl
neg
mul
test
push
dec
aas
mov
mov
daa
xchg
arpl
cmp
mov
je
cmc
dec
lock
aad
es
inc
inc
xchg
push
xchg
dec
jne
dec
mov
ja
mov
mov
cmps
aas
retf
mov
ja
clc
retw
cmc
outs
mov
sub
adc
out
pop
jl
mov
lock
lock
sub
std
mov
scas
sub
test
jae
pop
mov
jg
or
mov
rcr
ja
push
mov
in
fcom
js
add
jne
test
into
and
pop
lea
cdq
test
xor
gs
xor
pop
in
sub
adc
mov
jne
sar
mov
mov
mov
jmp
inc
jne
ss
div
hlt
popa
mov
out
aam
cmp
cld
daa
push
scas
inc
das
dec
adc
jne
stc
lahf
xor
fwait
neg
je
idiv
fs
clc
xchg
ret
jo
pop
mov
les
pop
mov
out
jge
mov
mov
loopne
and
pop
pop
imul
dec
scas
mov
jmp
imul
shl
cmp
push
xor
test
test
je
xor
ja
sub
(bad)
sub
cdq
ja
lock
xor
in
test
cmc
retf
and
(bad)
cmps
push
or
icebp
scas
dec
fild
loop
sbb
cmp
lods
pop
(bad)
repz
repz
mov
shl
dec
test
loope
sbb
or
mov
mov
es
cmps
dec
dec
jbe
dec
lock
xor
jo
(bad)
jo
mov
pop
mov
std
pop
lock
clc
stos
sahf
jnp
(bad)
sti
in
pop
int3
push
clc
jbe
inc
adc
ss
cs
inc
mov
inc
pop
loopne
into
fbld
push
sar
les
scas
xchg
pop
cld
and
test
mov
rcr
ret
jmp
clc
lods
dec
sub
ins
out
pop
mov
jecxz
cmps
movs
leave
lods
pop
jecxz
xor
cs
jecxz
sbb
jbe
mov
daa
inc
add
dec
scas
adc
cmc
dec
arpl
fwait
xchg
mov
aam
pop
cmps
jb
push
jae
sbb
jne
xor
aam
loopne
mov
outs
mov
ret
xchg
mov
jecxz
add
bound
test
mov
mov
cli
cmp
push
icebp
xchg
or
jnp
mov
cmc
loope
xchg
or
xor
mov
rcr
jmp
fldenv
add
inc
cmp
movs
mov
jne
pop
mov
ja
mov
sub
mov
outs
jecxz
lods
leave
xchg
fdiv
dec
or
pop
xor
push
jbe
dec
xchg
pop
in
lahf
icebp
xor
(bad)
gs
mov
inc
xchg
pop
(bad)
jae
pop
mov
fwait
xchg
icebp
push
pop
and
lods
cmp
sbb
nop
jge
sbb
xlat
push
out
test
mov
or
push
jne
inc
mov
add
ss
(bad)
lock
jle
mov
dec
mov
jbe
scas
loop
dec
adc
dec
add
out
mov
dec
jb
or
xchg
aam
jecxz
lock
pop
add
retf
cwde
xor
pop
js
enter
clc
je
shl
imul
pcmpeqb
jb
dec
dec
push
pop
or
sbb
adc
mov
jo
in
mov
jmp
add
ja
in
dec
dec
icebp
fisub
aaa
ror
loopne
xchg
add
movs
popa
das
int3
push
ja
cmp
add
shl
mov
jbe
(bad)
lea
xor
adc
test
retf
xchg
pop
cmc
sbb
mov
aam
sar
adc
mov
mov
cmps
sub
(bad)
adc
push
jb
(bad)
dec
xchg
into
rol
sbb
mov
mov
xchg
mov
jle
shr
(bad)
sti
and
mov
mov
add
mov
in
mov
lock
aaa
lds
xchg
mov
jno
inc
pop
mov
ja
out
pop
or
and
shl
add
xchg
mov
push
mov
mov
mov
les
scas
and
ins
mov
sbb
shl
add
and
jne
dec
stos
popf
or
icebp
dec
les
mov
pushf
mov
mov
fcomip
add
iret
pop
jae
or
xor
shl
mov
dec
clc
jp
test
retf
mov
fs
dec
xchg
fdiv
je
in
sub
dec
out
add
repnz
or
mov
hlt
outs
jb
dec
mov
push
scas
xchg
mov
inc
jmp
test
(bad)
and
out
xor
ja
jb
(bad)
imul
cs
movs
xchg
inc
xor
dec
push
icebp
mov
xchg
push
pop
mov
jg
das
jg
dec
shl
or
ja
jno
mov
mov
jno
(bad)
xchg
mov
cmp
sbb
push
mov
inc
sub
ja
ret
leave
cld
js
mov
cmc
clc
jle
lods
test
cmp
in
mov
daa
retf
bnd
in
or
jae
pop
and
lea
mov
mov
or
cmp
cli
cld
out
push
jne
out
aam
xchg
sbb
clc
cli
adc
lods
rol
scas
sbb
stos
shr
outs
jae
dec
add
in
daa
pop
jl
and
icebp
push
jno
pop
call
jbe
lods
cmp
mov
dec
jle
loope
ss
std
mov
sbb
into
mov
stc
mov
icebp
xor
mov
in
mov
fwait
je
jle
test
and
es
mov
inc
jne
test
je
ret
jne
gs
mov
or
or
mul
mov
sub
and
neg
retf
cmc
add
mov
inc
pop
scas
push
(bad)
cld
mov
cmps
push
cmp
icebp
out
and
leave
mov
mov
mov
out
xor
xchg
mov
jecxz
fst
(bad)
loopne
xor
xchg
and
es
div
inc
test
dec
lea
push
je
rcl
ja
mov
loop
mov
xor
xor
xor
xor
nop
ret
mov
dec
jge
ss
jmp
mov
sub
icebp
add
lahf
call
jo
push
or
cmp
adc
lods
xor
jnp
loope
imul
xchg
mov
pop
push
cmps
(bad)
mov
das
mov
jge
adc
xchg
das
push
outs
ja
mov
dec
cdq
jne
lods
out
push
ret
icebp
sahf
retf
mov
cmp
pop
jne
sbb
ins
lock
xor
mov
lods
mov
adc
icebp
repnz
mov
retf
or
mov
push
dec
aaa
sub
jecxz
mov
je
pusha
pop
jge
dec
out
stos
or
je
pop
cmp
mov
mov
mov
jecxz
icebp
cmp
cmc
xor
inc
push
inc
je
popa
mov
stc
in
cdq
(bad)
mov
ficom
sub
jmp
add
jmp
xchg
mov
pop
scas
jne
dec
dec
mov
jno
jl
push
sahf
das
(bad)
cmc
mov
mov
fst
test
dec
ja
(bad)
ret
pop
and
scas
mov
sahf
les
int3
jbe
push
leave
cmps
xchg
lock
xor
dec
loope
mov
jno
in
shl
mov
in
hlt
ja
int3
lods
jge
shl
call
shl
mov
stos
xor
jne
retf
push
cmp
(bad)
mov
and
loop
dec
sbb
and
sbb
test
iret
cs
add
cdq
push
or
add
lea
xor
inc
sub
stos
inc
test
mov
sub
test
fs
and
(bad)
mov
cld
mov
adc
or
adc
inc
mov
cmp
icebp
jne
pop
add
or
and
stc
dec
je
sbb
push
or
pop
cli
jle
je
cmp
lahf
push
jl
jne
and
ror
ret
call
push
jl
xchg
push
cmp
std
pop
jbe
adc
sbb
mov
lods
mov
sub
addr16
jae
xlat
jne
hlt
call
or
sub
add
je
adc
clc
push
loop
mov
clc
mov
push
add
ja
mov
mov
bound
jbe
pop
mov
rcr
jmp
pop
retf
or
fadd
and
pcmpeqd
sub
xchg
jno
hlt
push
sbb
sbb
ret
in
inc
push
push
cmp
icebp
(bad)
lock
mov
xor
inc
in
ja
stos
dec
(bad)
adc
add
arpl
mov
cwde
sub
scas
mov
mov
lock
aas
jmp
out
pop
aam
inc
mov
packsswb
dec
mov
movs
lahf
pop
jo
push
jne
xchg
cmps
jbe
stos
neg
stos
(bad)
cli
mov
push
add
mov
xor
retf
cmp
sub
ds
push
push
ja
mov
daa
shr
sbb
xchg
adc
stc
jbe
sub
mov
cmp
cmc
icebp
movs
into
adc
xchg
std
pop
stos
jmp
push
aad
icebp
cvtps2pd
xchg
jle
jns
add
add
mov
and
mov
add
loopne
xchg
mov
div
jp
sbb
and
retf
es
popf
in
adc
dec
xchg
iret
cmps
pop
mov
ja
les
(bad)
lahf
or
mov
xchg
cwde
mov
(bad)
loope
data16
push
cmp
rcr
lock
jne
repz
jo
call
test
cli
dec
adc
cld
sbb
pushf
jbe
xchg
fimul
adc
mov
out
xchg
xchg
jne
adc
rol
lods
jne
mov
jns
ror
add
push
sub
mov
aas
je
shr
jecxz
stc
push
test
ja
jae
xor
out
aaa
jecxz
fst
add
test
popa
out
mov
dec
cld
aad
jb
retf
je
vmread
retf
inc
add
mov
mov
fmul
ret
sbb
dec
inc
inc
xchg
fstp
adc
das
xlat
dec
and
mov
inc
inc
int3
mov
mov
scas
and
xchg
mov
add
xor
dec
xor
enter
jb
outs
aaa
jnp
add
mov
cmp
dec
mov
retf
fbld
fisttp
ds
cmp
pop
push
cmp
test
mov
movs
pop
mov
sbb
push
xchg
add
pushf
pop
iret
adc
(bad)
mov
jae
jae
loop
icebp
movs
lahf
test
jmp
bound
je
inc
icebp
inc
dec
or
dec
pop
and
fs
or
cmp
loopne
jo
xor
jp
in
mov
inc
jl
sub
cdq
in
inc
icebp
dec
pop
fcomp
sub
sub
(bad)
shr
ja
stos
mov
and
cmp
and
mul
(bad)
pop
push
mov
sbb
sub
adc
fisttp
loopne
aas
or
mov
repnz
sar
and
and
jns
idiv
sbb
inc
inc
sbb
fdiv
mov
(bad)
icebp
xor
mov
std
cmp
push
popa
jmp
push
test
bound
lock
ret
rol
adc
xor
dec
push
rcl
adc
in
push
(bad)
retf
inc
sub
add
jo
fs
repz
inc
push
cmp
fst
ins
mov
or
(bad)
sti
data16
push
pop
xchg
adc
pop
into
cld
or
into
pop
popa
in
out
mov
leave
push
in
push
icebp
mov
pushf
push
inc
rol
je
mov
pop
xor
pop
retf
mov
jbe
test
pushf
xchg
or
cmp
std
or
in
xchg
mov
xlat
xchg
add
cwde
push
lods
or
xchg
xchg
loop
mov
fidiv
xchg
or
pop
mov
mov
movs
in
sbb
fldcw
leave
dec
mov
in
xor
adc
mov
imul
push
hlt
int
icebp
and
xchg
idiv
push
ins
(bad)
je
pop
mov
in
push
rol
and
jne
ror
xor
icebp
sahf
sahf
sub
mov
std
jp
shl
mul
mov
aad
mov
add
clc
enter
mov
adc
aam
or
jecxz
stos
movs
mov
and
xlat
sbb
repz
xor
daa
mov
imul
lock
movs
sub
neg
jl
mov
cmp
mov
adc
fstp
cmps
jle
ins
ins
rcr
loopne
fild
cdq
stos
iret
lods
ja
mov
jnp
mul
or
(bad)
push
js
jp
dec
sub
out
dec
push
fcmovbe
mov
or
mov
fmul
or
test
mov
pop
mov
repz
loope
push
ds
mov
pop
shl
stc
sub
jbe
inc
seta
stos
shl
sbb
ficom
out
cmp
and
adc
dec
fsubr
xchg
mov
push
lock
pop
popf
push
loope
ja
out
fs
pusha
arpl
cmp
mov
retf
fcomp
pop
in
cmp
ins
aas
ja
xchg
mov
or
xor
ret
(bad)
icebp
mov
push
xchg
jecxz
aad
arpl
pop
call
add
push
in
fnsave
std
and
ins
xor
xchg
inc
jb
jbe
rcr
(bad)
loope
xchg
mov
(bad)
pop
inc
and
mov
popa
in
in
ret
je
bound
push
out
js
lahf
adc
pusha
cmp
test
add
mov
arpl
inc
push
sbb
and
jbe
cmp
pop
ja
jns
pop
sub
mov
mov
loope
stos
inc
xlat
cmc
or
fmul
cmp
and
mov
xor
lock
jmp
or
cmp
sbb
and
out
adc
retf
add
push
lock
call
daa
retf
and
xor
mov
aaa
xor
xchg
push
icebp
jp
or
mov
xor
add
ja
push
add
jle
lock
dec
inc
out
cli
cmp
mov
cwde
ret
mov
xlat
xchg
inc
mov
out
and
pop
xor
mov
cmc
xchg
inc
scas
mov
rol
js
jg
cmp
jne
add
inc
ja
div
(bad)
ror
mov
mov
test
ss
icebp
imul
stos
and
fistp
out
mov
mov
add
pop
xchg
int3
or
mov
and
cmps
cmp
mov
(bad)
call
retf
jp
fwait
jne
sbb
sub
mov
pop
sub
pusha
adc
(bad)
xor
fidivr
inc
shl
ins
mov
xchg
leave
out
cmp
lahf
pop
mov
hlt
cmp
and
sub
xor
call
add
icebp
add
cmps
ja
out
lock
jae
xchg
pop
ret
in
add
ja
pop
imul
sub
jg
add
jecxz
lods
outs
aam
imul
mov
mov
std
stos
xor
and
pushf
daa
add
pop
push
je
jb
xor
xchg
mov
sar
(bad)
test
gs
or
sbb
or
dec
cmp
mov
aaa
rcr
movs
jecxz
add
dec
jp
sbb
scas
shl
retf
ins
add
and
adc
movs
gs
ja
bnd
dec
loop
pop
mov
pushf
je
adc
inc
adc
adc
and
xor
sub
mov
mov
sbb
inc
sahf
repnz
mov
fsubr
jmp
mov
in
push
sub
mov
bound
jo
mov
push
shr
sub
push
pop
and
adc
sahf
push
lock
mov
xor
addr16
ja
cli
sbb
mov
ds
adc
ret
add
inc
or
adc
cmps
loope
out
and
pop
stc
lock
cmp
push
sbb
loope
mov
ja
jecxz
jns
(bad)
ss
or
jns
pop
icebp
mov
repnz
and
fdiv
sub
inc
cli
pop
dec
ja
sub
dec
jne
not
popf
cmps
test
test
mov
cmps
pusha
inc
shl
shl
push
push
jb
fiadd
jecxz
mov
stc
jnp
inc
cmp
sti
addr16
mov
cmp
mov
bound
stos
icebp
ror
js
pop
rcr
jle
mov
jmp
jmp
jne
(bad)
jmp
sbb
add
call
push
leave
mov
mov
mov
repz
mov
xor
in
cmp
jbe
out
aam
push
test
jnp
inc
out
dec
(bad)
sub
xor
repnz
cmp
sbb
retf
inc
lock
adc
(bad)
shl
jo
adc
inc
push
test
add
addr16
mov
daa
ja
adc
(bad)
mov
fmul
fs
mov
push
ja
out
push
sbb
arpl
push
repz
je
mov
test
cs
push
mov
fisttp
jg
out
push
arpl
fisub
jmp
and
pop
ds
ret
xchg
xchg
jne
jmp
gs
pop
fs
sub
jle
and
xor
cmp
test
push
mov
xor
mov
xchg
mov
dec
mov
je
jno
or
xchg
jbe
lea
or
mov
mov
xor
mov
add
inc
dec
popa
cwde
jmp
mov
in
in
mov
and
cmps
sub
repnz
ja
sahf
imul
ins
shl
add
adc
ss
or
shl
mov
dec
mov
not
inc
inc
sub
cmp
jl
jb
dec
xchg
dec
sub
cld
dec
xchg
dec
jbe
cmps
push
cmp
enter
jmp
sar
jns
dec
and
or
es
call
in
lahf
fild
ja
(bad)
sub
jmp
stos
mov
cs
jne
mov
aad
sahf
iret
jecxz
nop
dec
push
inc
bound
cwde
jmp
jbe
bound
enter
adc
xor
sub
les
mov
sub
mov
out
inc
test
lock
xor
push
ja
jmp
add
add
sbb
mov
xchg
icebp
cli
popa
bsf
add
sub
imul
ret
xchg
ror
retf
(bad)
mov
hlt
jns
sbb
xor
sub
pushf
cmp
fadd
mov
cmp
hlt
dec
je
or
aam
add
push
push
mov
arpl
lock
mov
jne
arpl
jns
dec
(bad)
add
call
sbb
mov
je
(bad)
jne
popa
xor
pop
adc
je
jb
ins
or
cdq
in
xchg
je
mov
and
jecxz
push
push
test
sbb
shl
out
stos
imul
popa
dec
mov
inc
and
push
test
adc
test
sub
imul
loopne
jmp
ja
arpl
(bad)
aaa
in
adc
(bad)
clc
hlt
pusha
pop
idiv
and
xchg
mov
nop
ins
pop
pop
mov
jbe
adc
push
sub
jns
add
xor
adc
nop
adc
push
dec
jp
retf
sti
mov
adc
ss
xchg
mov
retf
mov
inc
push
mov
mov
add
xchg
ds
lock
aas
xchg
pop
das
or
je
push
fwait
sar
rcr
sahf
cmp
je
push
fistp
dec
in
mov
jbe
cli
mov
sar
pop
sub
sti
mov
(bad)
inc
mov
mov
call
or
mov
push
pop
jne
aam
fnstenv
jmp
mov
xor
pop
inc
icebp
(bad)
cmp
sub
adc
jne
mov
bound
int
je
cmp
push
sub
mov
lahf
stc
or
mov
int3
mov
mov
ror
cmp
icebp
push
mov
fnstsw
sahf
mov
mov
(bad)
xchg
mov
xor
icebp
int3
das
mov
icebp
push
pusha
mov
imul
push
loopne
push
push
lock
stos
shr
in
in
mov
clc
es
mov
dec
repnz
aam
mov
das
leave
pop
fistp
add
in
push
mov
jmp
adc
lods
inc
lods
popf
repz
popa
mov
movs
in
fdivr
fs
outs
adc
lahf
test
cmp
xchg
je
xchg
mov
fiadd
or
test
ins
jbe
jl
shl
mov
sub
or
push
push
stos
mov
(bad)
outs
sub
and
mov
inc
cdq
outs
adc
and
adc
imul
mov
or
push
lds
nop
lea
js
pop
add
sbb
nop
movs
sbb
jae
stos
mov
push
out
xor
pushf
data16
xchg
sti
jne
adc
(bad)
mov
xor
mov
ins
mov
mov
int3
jle
jbe
(bad)
jmp
movs
pop
ins
push
mov
cwde
or
cmps
mov
aam
lds
call
and
push
test
ja
shr
or
jge
mov
mov
push
jbe
daa
and
mov
test
pop
leave
or
cli
inc
ins
inc
ins
(bad)
dec
dec
aas
push
mov
xchg
(bad)
pop
mov
adc
mov
jmp
jg
lds
push
adc
les
mov
xor
rcl
mov
ins
mov
iret
sbb
icebp
mov
lahf
xor
retf
mov
jl
retf
dec
icebp
shl
jo
repz
fdiv
dec
nop
scas
popa
test
inc
mov
je
fcomi
icebp
int3
pop
out
jl
xchg
shr
mov
cmp
xchg
mov
gs
xor
js
out
xchg
pop
ja
or
and
jae
ja
cmp
dec
dec
ret
mov
xchg
lods
mov
push
sbb
in
mov
mov
je
inc
cmps
ja
jnp
adc
jbe
adc
addr16
jne
and
repnz
ret
mov
mov
push
mov
add
ss
jge
mov
adc
mov
std
jbe
sbb
mov
in
je
push
or
ja
mov
fnop
movs
out
jnp
pop
lea
inc
daa
(bad)
adc
xchg
adc
sub
cmc
jne
ins
ror
lea
pop
lea
out
jle
cld
je
push
add
test
or
pop
out
fiadd
xchg
rcl
ja
outs
jg
inc
pop
test
test
rcr
mov
mov
mov
jge
dec
iret
jg
inc
dec
leave
call
shr
jnp
push
fs
or
push
dec
pop
rcl
lds
pop
xor
or
in
(bad)
or
ja
mov
ss
fwait
xor
dec
mov
dec
fisub
mov
in
jle
(bad)
mov
jno
and
jb
call
sbb
pop
mov
jmp
adc
out
aam
imul
dec
jbe
adc
sbb
add
xchg
aad
rol
je
add
ja
aam
pop
ss
or
mov
dec
dec
hlt
ins
sub
scas
test
mov
push
push
adc
xor
std
pushf
jbe
dec
sub
jne
inc
mov
dec
push
cmp
jbe
dec
push
mov
and
pop
outs
add
jbe
pop
into
sub
out
(bad)
mov
in
dec
retf
and
retf
pop
pusha
ja
xor
jmp
mov
mov
rol
mov
sbb
fidiv
xor
cmc
(bad)
push
fidiv
mov
xlat
ins
dec
loop
push
je
(bad)
jmp
dec
mov
rcl
push
scas
lods
mov
xor
pop
mov
jno
add
sub
sti
rcr
push
jecxz
inc
mov
imul
test
or
dec
(bad)
rol
cmp
std
jbe
jge
jae
cmps
inc
add
ss
enter
sbb
lock
cmp
loopne
(bad)
mov
test
imul
jge
mov
lahf
hlt
mov
icebp
jp
std
mov
sub
sub
mov
call
lahf
movs
mov
loope
fimul
pop
test
lock
xchg
xor
cwde
loope
pushf
or
xor
xchg
pushf
addr16
add
fbstp
cli
in
sbb
arpl
js
cld
mov
hlt
aas
xor
ds
pushf
pop
push
cdq
or
int3
cmp
movs
jg
outs
sub
cmps
xchg
fadd
(bad)
arpl
adc
cmp
pop
fs
(bad)
lock
in
pop
inc
or
fisttp
enter
and
repz
cwde
inc
pop
cmp
or
inc
scas
fidivr
fcomp
lock
mov
in
sahf
adc
cwde
push
addr16
ds
(bad)
fidiv
push
or
into
daa
lahf
ins
lock
mov
or
in
hlt
mov
mov
stos
jg
cmp
(bad)
inc
shr
pop
(bad)
lods
test
jo
xor
leave
lock
lods
mov
pop
fcmovnu
jg
lock
imul
jl
jb
(bad)
jb
nop
nop
lea
jo
fs
pop
inc
ja
add
jle
or
mov
ja
sbb
repz
push
out
fldcw
test
jecxz
movs
xchg
cmp
shl
cmc
or
int
ss
aaa
mov
xchg
rep
leave
sti
pusha
pushf
lock
ja
in
iret
popf
outs
or
or
jbe
jge
das
test
(bad)
jb
dec
push
(bad)
pop
mov
xchg
call
das
sahf
in
mov
je
shr
or
mov
jns
xor
mov
sub
fldz
fsubr
gs
rcr
xchg
aas
inc
cmp
mov
add
xadd
mov
jecxz
push
xchg
lds
jbe
pusha
inc
mov
ins
out
adc
and
mov
stc
mov
or
fadd
cmp
out
sti
jns
mov
sbb
jmp
jmp
test
nop
loopne
movs
test
mov
mov
(bad)
jne
jmp
xchg
jae
mov
push
add
cmp
outs
xor
add
icebp
data16
adc
pop
ja
(bad)
je
fidivr
push
mov
ins
xor
aam
xchg
in
jne
push
xor
scas
test
dec
add
dec
push
bnd
lea
mov
repz
push
fs
jmp
je
in
les
pop
push
popf
loop
dec
clc
fidivr
in
add
cmp
(bad)
lock
xchg
mov
xor
inc
pop
sbb
les
mov
jb
sti
mov
mov
shl
dec
(bad)
pop
push
lods
hlt
cmps
ins
dec
aam
lods
jbe
push
in
xchg
leave
cmp
fisttp
rol
xchg
mov
push
jnp
repnz
xlat
jbe
jb
stos
mov
ja
mov
or
scas
push
out
aas
aas
repnz
je
mov
mov
outs
cwde
sti
jbe
repnz
cmp
jo
jne
mov
movs
push
xor
lahf
jbe
fist
mov
jmp
pop
ret
rol
sar
nop
loopne
inc
xchg
stc
jnp
jmp
jne
mov
jno
xlat
clc
(bad)
inc
and
cmp
inc
ja
sub
or
inc
(bad)
fsubr
inc
push
cmc
je
adc
or
fsubr
xchg
cwde
jnp
(bad)
loopne
or
xchg
add
jne
jg
stos
ja
push
mov
mov
push
out
scas
jbe
fmul
jbe
fwait
xchg
stos
dec
jle
jnp
dec
mov
sub
xchg
mov
ret
pop
bound
pop
xchg
imul
mov
sub
push
inc
mov
cmp
add
mov
cmps
push
fnsave
loopne
outs
fld
pushf
lea
in
outs
int
shl
jne
or
inc
ja
inc
mov
jnp
inc
clc
xor
mov
in
adc
fs
ds
push
sbb
push
jbe
mov
mov
fnstcw
fwait
es
cs
xlat
mov
xchg
mov
jne
mov
mov
in
sub
xchg
mov
outs
or
test
loop
cmc
cmp
mov
mov
sub
jbe
rcl
adc
push
xor
into
outs
mov
cdq
adc
icebp
test
xor
inc
cmps
cmps
lock
in
push
int3
out
or
js
mov
jge
dec
shl
cmps
jbe
cmps
push
les
cmp
imul
push
icebp
xchg
dec
ss
js
imul
outs
dec
(bad)
push
add
push
mov
push
test
ret
jo
add
lea
mov
(bad)
pop
mov
inc
out
jge
icebp
cwde
repnz
sub
in
ds
dec
js
add
stos
lock
cwde
jns
movs
cmpxchg
je
jns
xor
in
call
stos
cld
cmps
jmp
sbb
push
js
(bad)
(bad)
(bad)
ds
int3
jae
push
aaa
je
mov
dec
push
div
loop
mov
pusha
ja
jne
icebp
mov
pop
add
adc
ss
shl
inc
jecxz
aaa
dec
call
lahf
nop
add
fs
cmps
inc
movs
jne
fdivp
and
dec
inc
mov
add
mov
push
std
inc
dec
out
jbe
pop
xor
lds
push
mov
mov
je
push
(bad)
mov
cdq
or
sub
ds
lock
lds
shr
idiv
out
or
das
jbe
xchg
push
xchg
and
xor
cwde
into
jb
dec
add
or
inc
push
mov
adc
dec
call
sbb
sub
push
test
(bad)
cmps
cmc
push
in
icebp
sbb
mov
mov
or
mov
in
jno
adc
dec
adc
dec
out
stc
shr
(bad)
addr16
add
adc
xchg
outs
xor
or
sbb
lods
sahf
xchg
adc
fbstp
mov
sahf
dec
xchg
jae
add
pop
and
adc
mov
dec
lods
sbb
xchg
mov
fs
pop
jbe
jle
push
push
lods
daa
cmp
sti
pop
xchg
push
mov
fisub
mov
push
jmp
dec
jne
outs
pop
pop
out
jecxz
scas
mov
jae
fstp
ret
dec
mov
xchg
push
push
std
iret
mov
pop
or
es
shl
jle
pop
push
ret
jle
cmp
(bad)
pushf
call
xchg
pop
shr
or
xchg
retf
mov
stos
pop
loop
test
push
pusha
push
in
dec
popf
mov
pop
xchg
or
cmps
ret
retf
push
nop
(bad)
xchg
jne
jg
vmwrite
mov
dec
pop
push
js
fsub
cmp
not
adc
aad
pop
and
adc
scas
repz
cmp
sub
mov
jl
dec
dec
mov
ins
cmc
enter
or
call
mov
jne
add
or
mov
jae
sbb
retf
ins
push
jo
cs
mov
loop
push
xor
jmp
cmc
bsr
int3
pop
sub
aad
add
jbe
jl
mov
outs
mov
retf
lahf
and
std
mov
xchg
jle
cmp
jne
mul
fs
out
inc
cdq
dec
dec
punpckhbw
add
jne
lock
ja
xlat
leave
xchg
mov
scas
(bad)
mov
mov
jl
sub
or
imul
adc
mov
pop
gs
fsub
fldcw
lds
adc
inc
pop
dec
jbe
mov
push
add
js
mov
inc
outs
adc
jge
jns
popw
je
pop
pop
xchg
pop
mov
popa
push
cmp
shl
imul
(bad)
clc
dec
outs
pushf
adc
add
(bad)
out
dec
pushf
pop
icebp
mov
repz
push
mov
ret
fwait
ja
popf
ja
lods
mov
xor
xor
adc
adc
push
sbb
mov
inc
shl
clc
sbb
mov
mov
call
pop
scas
xchg
ficomp
shl
out
clc
je
scas
cmp
dec
add
jbe
cmp
and
xor
mov
cwde
stos
cmp
lock
push
xchg
popf
sub
loopne
je
xor
inc
add
jb
mov
dec
cmp
call
repnz
inc
xchg
xchg
xchg
ficom
pop
je
lock
(bad)
pop
mov
dec
shr
and
adc
xchg
test
jl
mov
das
jmp
jae
mov
or
inc
mov
mov
mov
push
add
xchg
add
mov
leave
out
out
aaa
inc
jg
jne
adc
sub
xchg
loop
mov
icebp
cli
je
and
xchg
mov
out
div
inc
push
cmc
je
movs
mov
inc
std
ror
sub
add
movs
repnz
jne
mov
dec
add
test
test
or
call
lods
cmp
xchg
ins
mov
arpl
jmp
arpl
ja
xchg
imul
jbe
(bad)
stos
test
je
jp
push
jbe
mov
pusha
movs
inc
sbb
pop
out
dec
ins
sub
hlt
cmc
sub
cmc
out
out
(bad)
xchg
dec
mov
out
dec
cmp
hlt
or
cdq
je
sti
enter
in
mov
call
les
jnp
into
scas
lock
(bad)
in
repz
int3
loopne
(bad)
icebp
fdivr
int3
(bad)
pushf
jb
fwait
push
je
jne
and
cwde
daa
add
pop
mov
mov
pusha
sub
lods
mov
jle
stc
iret
jne
popa
inc
push
jbe
idiv
stc
mov
lds
inc
ss
(bad)
(bad)
(bad)
sbb
adc
retf
mov
sub
repz
loop
adc
push
mov
les
sbb
cmp
out
push
adc
nop
(bad)
call
sbb
cmp
push
add
or
pushf
mov
pop
dec
je
dec
mov
add
xchg
mov
xchg
imul
push
xchg
icebp
test
inc
in
sbb
fistp
(bad)
outs
sbb
or
add
mov
inc
adc
stos
rcr
push
jbe
dec
mov
cmp
xor
icebp
clc
mov
mov
(bad)
scas
js
out
(bad)
in
sbb
mov
es
arpl
mov
adc
(bad)
mov
rdmsr
lea
scas
movs
das
xchg
aam
inc
test
pop
mov
xchg
mov
mov
call
jg
imul
adc
sbb
ins
adc
mov
mov
into
icebp
imul
push
pop
aad
push
cmps
xor
leave
cli
je
popf
mov
loopne
xchg
aam
iret
mov
push
or
pop
into
mov
icebp
test
(bad)
aam
and
adc
pop
stos
pop
dec
inc
je
mov
jne
clc
jp
or
ins
lock
push
mov
(bad)
xchg
mov
jne
mov
or
(bad)
pop
loop
pop
out
jne
mov
nop
test
push
je
sbb
push
(bad)
adc
add
push
and
or
dec
icebp
es
pop
movs
mov
mov
pusha
dec
ss
cld
mov
xchg
jno
xchg
ret
into
fimul
push
mov
push
jmp
add
xchg
add
mov
jecxz
cmp
push
ins
sub
fldenv
rcl
cmp
stc
pop
xchg
int3
aaa
std
sub
xor
retf
push
sub
sbb
mov
lock
jl
mov
pop
je
pop
out
jno
nop
adc
xchg
shl
mul
mov
xchg
sub
mov
dec
imul
jne
loop
sbb
inc
cmp
add
mov
fisub
call
cmp
mov
leave
fisubr
icebp
inc
call
out
add
imul
push
mov
mov
arpl
mov
inc
lock
or
mov
push
fbld
inc
xor
xor
shl
pop
xchg
mov
fstp
mov
icebp
(bad)
sub
inc
inc
push
je
stc
and
push
inc
imul
sbb
mul
stc
pusha
in
aam
fisubr
ins
jno
add
shl
jnp
jbe
hlt
and
mov
pop
cmp
sbb
call
fs
in
jle
push
loope
je
iret
cwde
pop
jbe
xor
mov
inc
ds
add
ja
xor
int
lock
mov
mov
jbe
ins
jne
std
and
jbe
mov
cmc
inc
out
add
and
mov
cmc
pushf
cmps
jb
sar
push
retf
dec
xchg
stos
mov
(bad)
sub
std
and
cs
aam
imul
push
fdivr
clc
add
arpl
jnp
sar
dec
je
mov
and
or
lock
mov
retf
into
inc
fisub
jne
or
dec
cmp
inc
ret
jo
je
scas
mov
fnstsw
pop
fmulp
mov
in
cmps
cmc
loopne
mov
(bad)
mov
ds
xchg
adc
scas
idiv
retf
arpl
call
xchg
sar
jge
in
mov
mov
(bad)
int3
nop
mov
cdq
sub
add
adc
inc
xchg
jne
pop
xchg
pop
jbe
jne
mov
xor
mov
movs
inc
sub
jbe
stos
gs
sbb
pop
stc
imul
push
adc
(bad)
adc
lods
(bad)
lods
movs
cmps
(bad)
sbb
ins
mov
xchg
aad
es
or
push
xchg
gs
push
ror
jnp
repz
hlt
xor
icebp
pop
shl
or
lock
test
cmp
test
ja
and
inc
outs
mov
pop
mov
shl
loop
cmc
js
int3
aas
stos
(bad)
mov
out
es
jmp
jge
je
pop
pop
or
fbstp
jo
sbb
cmc
call
lock
icebp
adc
mov
lods
es
mov
test
adc
ds
pop
or
dec
pop
lods
lock
int3
mov
and
cmc
sub
mov
mov
fmul
xchg
add
mov
jl
sub
in
inc
mov
aad
sub
xor
in
imul
and
fadd
mov
mov
(bad)
outs
sti
sbb
es
(bad)
xchg
add
jbe
iret
sub
and
jp
jbe
pop
nop
stos
sub
cdq
jge
pop
mov
inc
inc
mov
sub
jp
pop
jbe
or
add
push
xchg
or
jbe
adc
call
pushf
ds
pop
ret
(bad)
mov
or
lods
cwde
push
xchg
test
cmp
pop
xor
in
jmp
(bad)
push
jae
jg
inc
nop
aam
push
mov
jne
out
test
xchg
leave
jbe
icebp
push
mov
push
pushf
je
pop
inc
adc
outs
mov
pop
jnp
out
inc
wrmsr
pusha
frstor
mov
push
dec
push
jge
sbb
test
adc
je
mov
pop
jmp
sub
out
fild
mov
cli
test
cmp
jmp
sahf
out
fadd
retf
lds
sub
dec
inc
cmps
(bad)
mul
gs
jle
ja
bound
mov
daa
jbe
xor
xor
push
repz
je
dec
cmp
push
jmp
ins
pop
sub
aas
(bad)
popf
push
inc
fs
add
int
test
xchg
cmc
sub
icebp
es
ret
dec
sub
add
xor
mov
sahf
inc
cdq
jne
push
(bad)
or
mov
stc
icebp
(bad)
mov
mov
ss
jmp
js
lods
sbb
pop
sbb
or
sub
xor
push
mov
mov
and
xor
shl
mov
lds
mov
jns
cs
lock
add
cmp
into
nop
cmp
and
out
sub
aad
ss
pusha
pop
aad
loop
push
rol
mov
fsub
cs
test
inc
fdiv
adc
inc
retf
mov
outs
sub
dec
retf
jo
loopne
out
out
test
xor
mov
ja
sahf
cmp
cmp
push
and
mov
sar
dec
or
ds
jl
lahf
je
js
ror
ret
repz
dec
jne
and
push
mov
loope
stc
in
and
and
mov
cmp
sub
popa
ja
mov
mov
mov
mov
pop
pop
or
jns
(bad)
dec
popf
jp
out
retf
xor
mov
adc
ja
mov
pop
cmp
dec
mov
inc
inc
sahf
and
or
call
aam
xor
add
loop
movs
sbb
cmp
js
ins
mov
mov
ss
mov
add
into
(bad)
out
jp
(bad)
inc
retf
or
out
add
mov
arpl
aam
pusha
or
and
pushf
inc
jo
push
dec
jns
sub
mov
xlat
pop
or
out
push
or
add
xchg
push
push
cmc
xchg
mov
jns
clc
fdiv
lods
dec
into
int
mov
push
sbb
pop
stc
jne
mov
mov
movs
push
push
out
in
aas
pop
adc
push
imul
push
jb
popf
aad
jg
scas
(bad)
imul
pop
pop
pop
mov
push
je
ret
or
outs
stos
div
push
int
mov
mov
push
lahf
mov
hlt
pushf
mov
xor
mov
das
retf
xor
mov
ds
fidiv
int
jns
inc
test
test
shl
sbb
push
movs
cmc
lock
jp
inc
jbe
xchg
fucomip
gs
sub
jb
ret
push
inc
dec
das
jno
ins
das
push
jle
jge
xchg
mov
push
add
lahf
sub
frstor
stos
adc
mov
xchg
and
adc
mov
rcl
mov
add
das
sbb
shl
(bad)
jne
test
push
mov
jmp
add
je
lods
sbb
mov
enter
push
mov
jb
cmps
or
ss
and
mov
push
stc
mov
mov
add
pop
cmp
xor
dec
inc
mov
fisttp
cdq
lock
xchg
int
ins
jns
sbb
sbb
push
push
push
jne
push
icebp
jo
cdq
in
jno
cs
(bad)
out
fidiv
imul
cmp
stc
push
push
shr
xchg
jg
mov
lock
pop
add
retf
jne
xchg
fbstp
ss
lock
pop
cld
stos
dec
cmp
int3
cmp
pusha
cdq
and
pop
je
dec
icebp
or
sub
out
jg
lea
xchg
sub
fsubr
out
inc
mov
push
ins
retf
mov
and
add
(bad)
mov
ja
addr16
jp
inc
ficomp
(bad)
inc
out
lock
movs
les
xlat
aad
pop
ss
addr16
add
and
inc
sub
jno
xor
sbb
lahf
mov
dec
mov
fimul
mov
dec
or
es
pop
jg
lds
sub
adc
stc
imul
icebp
xchg
(bad)
gs
inc
dec
xchg
out
fst
inc
xor
mov
mov
jl
cmp
repz
enter
lock
adc
adc
imul
ror
or
ret
jp
xchg
jne
nop
and
pop
or
xchg
xor
clc
push
cwde
mov
test
je
scas
stc
push
int3
jecxz
lock
iret
push
pusha
sub
xchg
sbb
call
push
xchg
dec
push
jne
jmp
jbe
pop
dec
(bad)
out
repnz
stos
or
nop
cwde
lock
std
mov
xchg
int3
sbb
mov
movs
lock
sub
jmp
(bad)
and
pop
xchg
je
xor
xchg
jbe
jns
jl
pop
fnstenv
jne
mov
aam
xchg
jno
cmp
xchg
ja
test
int3
xchg
call
jns
cs
shl
cmp
ins
sub
or
mov
jge
pop
shl
push
pop
ja
aas
jl
mov
and
mov
jno
push
dec
sbb
cmp
mov
push
adc
mov
ja
adc
fadd
fdiv
mov
xor
add
dec
movs
jbe
scas
movs
enter
xor
xchg
dec
es
push
xchg
mov
sbb
jns
ja
jo
mov
lock
rcl
mov
sbb
pop
pop
or
xor
jb
cmc
lods
(bad)
sub
je
imul
je
fs
in
mov
cdq
out
icebp
test
out
enter
mov
ja
and
jbe
and
and
xchg
addr16
bound
jge
jle
ds
add
cmc
fwait
std
xchg
mov
add
sub
int3
lock
dec
or
daa
repnz
lds
in
xchg
dec
loope
or
jge
mov
jne
cld
mov
jbe
daa
xor
mov
push
stos
out
jne
jb
add
dec
retf
jne
push
shl
or
sbb
push
pop
dec
ret
sbb
adc
mov
sub
push
dec
xor
or
inc
jne
call
icebp
sbb
stc
push
sub
mov
jne
mov
icebp
push
adc
mov
mov
pop
or
mov
ror
push
aam
aaa
mov
iret
or
retf
shl
les
sub
pop
xor
nop
inc
ja
and
sbb
enter
icebp
shr
push
fld
retf
mov
sbb
int
out
js
imul
xchg
xlat
dec
cmp
retf
test
(bad)
loop
xchg
aad
fimul
(bad)
cmp
mov
mov
scas
gs
push
lock
mov
repz
leave
push
sub
jg
es
or
or
pushfw
ja
mov
aad
mov
xchg
shl
out
inc
mov
push
mov
jle
cmp
lock
xor
mov
jbe
ins
inc
dec
and
ds
movs
cmp
add
mov
mov
es
cmp
mov
test
fsub
push
xor
dec
lods
inc
jne
sub
push
inc
mov
out
call
jmp
shr
icebp
nop
repnz
sbb
and
lods
stos
lods
ja
sbb
jmp
in
lods
movs
aaa
out
add
dec
pop
jmp
xor
jecxz
ss
jmp
icebp
int3
arpl
xor
inc
dec
pop
sub
jne
jns
add
mul
shl
enter
mov
xor
ja
test
and
mov
sahf
cld
les
fmul
pop
(bad)
mov
mov
(bad)
adc
xor
ss
adc
shl
inc
lods
adc
and
cmp
mov
add
add
iret
sub
(bad)
jbe
jp
or
into
retf
jne
sub
dec
add
mov
jle
inc
cmp
cmp
xor
cld
pushf
data16
mov
push
or
icebp
cs
into
jmp
pop
out
xchg
cmp
arpl
add
div
jle
icebp
mov
xchg
(bad)
mov
dec
out
push
lahf
icebp
test
lds
add
sti
sti
je
mov
dec
pavgw
add
fs
add
js
inc
(bad)
sub
mov
hlt
ss
addr16
sbb
sub
xor
(bad)
fimul
mov
xor
pop
and
rcl
imul
cmp
enter
or
lock
aaa
ja
adc
mov
shl
mov
xchg
pop
cmps
xchg
and
call
push
jle
sbb
xchg
sub
mov
mov
adc
lds
call
shr
in
mov
jmp
das
imul
mov
sbb
outs
mov
xchg
test
pop
icebp
inc
jecxz
clc
inc
lea
and
imul
mov
fld
je
xchg
push
pop
ja
(bad)
and
adc
std
les
stc
mov
cmp
das
cmc
icebp
push
push
adc
cli
mov
clc
cmc
mov
sub
jmp
ja
out
hlt
mov
cmp
xchg
jp
push
into
pop
jbe
sub
movs
cli
in
pop
mov
xchg
pop
xor
xchg
daa
in
fidivr
pop
pop
arpl
retf
sbb
adc
xchg
push
stos
push
std
ja
xor
mov
fstp
cld
sub
js
push
cmp
lahf
mov
paddb
push
repnz
addr16
aad
jge
cmp
ins
jne
and
fstp
and
sbb
fcomp
mov
pcmpeqb
adc
push
ins
outs
imul
test
mov
mov
shl
xchg
(bad)
scas
jp
pop
jg
cmp
icebp
bound
xchg
mov
inc
jmp
(bad)
cmps
jle
mov
imul
mov
adc
xchg
ja
jno
mov
cmp
(bad)
mov
daa
outs
dec
inc
adc
ja
fsub
mov
test
adc
(bad)
daa
ss
fs
sbb
ret
cmp
and
mov
pop
popa
add
cdq
iret
je
push
out
call
sub
lds
sbb
repz
hlt
ss
jo
xchg
mov
in
sbb
or
and
push
je
add
pop
inc
(bad)
call
aas
imul
mov
das
(bad)
sbb
jno
outs
mov
lods
dec
and
imul
add
inc
pop
xor
mov
hlt
sbb
jne
sbb
push
dec
test
mov
ret
mov
es
fst
icebp
ins
retf
(bad)
pop
mov
sbb
jl
cmp
(bad)
pop
pushf
mov
test
sub
or
arpl
data16
push
xchg
xor
outs
ss
sti
sub
sbb
cli
mov
(bad)
adc
sti
outs
xlat
test
mov
neg
call
jmp
add
cmp
xchg
(bad)
lods
(bad)
mov
sub
pop
xchg
fadd
daa
ss
mov
mov
mov
add
daa
retf
mov
pop
ficomp
lock
mov
das
lods
stc
(bad)
push
jle
stc
pop
(bad)
ja
pop
mov
lods
mov
fsubr
(bad)
cmps
jae
fidivr
fwait
or
retf
je
xchg
pop
xchg
cwde
inc
adc
into
push
jl
rol
hlt
loopne
mov
cs
in
jmp
lock
cmps
xor
mov
mul
push
mov
fild
retf
ja
adc
fs
ins
popa
mov
lock
mov
lock
pop
xchg
lds
sub
ja
stos
pop
push
or
nop
push
sbb
jbe
in
aad
lds
es
lods
push
jbe
(bad)
loope
xchg
lock
scas
fnstsw
cmp
popa
add
ja
mov
adc
jbe
jne
popf
mov
cld
dec
test
nop
mov
xchg
call
je
dec
jbe
ja
in
enter
pop
cmp
(bad)
out
or
jno
and
addr16
dec
sub
mov
sbb
cmp
sub
(bad)
je
(bad)
icebp
push
push
push
mov
or
je
lahf
sbb
jae
jne
retf
arpl
(bad)
sar
lock
call
push
icebp
bound
push
or
call
cmp
je
push
fstp
cmp
pop
push
int3
xchg
into
cmp
std
add
jp
shl
jnp
mov
mov
sti
je
mov
mov
mov
lods
lds
mov
dec
jo
es
sbb
lock
std
in
clc
lea
cmp
jmp
fs
outs
lock
xchg
xor
ja
push
mov
lock
xor
push
bnd
adc
jne
out
int
fwait
sub
outs
xchg
adc
mov
and
sub
loope
adc
sbb
popa
mov
dec
out
mov
mov
(bad)
and
adc
jae
xchg
push
arpl
mov
xlat
jmp
xor
cmp
push
dec
jmp
pop
sar
fnstcw
cmp
or
rol
idiv
sub
adc
retf
imul
mov
ds
inc
xchg
daa
or
cmc
mov
je
int3
out
ja
rcr
mov
ins
and
dec
adc
xchg
pop
inc
jbe
test
pusha
jl
jge
mov
sub
mov
pop
push
jbe
add
(bad)
jns
mov
imul
dec
xor
mov
jl
into
jge
push
add
dec
push
mov
hlt
aam
icebp
int3
into
and
out
xor
cmp
cld
pop
ds
or
cmp
je
retf
push
mov
retf
je
mov
mov
mov
mov
movs
ret
pusha
je
jp
ficom
js
clc
or
jmp
jmp
ja
dec
out
inc
test
mov
mov
(bad)
fistp
jecxz
enter
(bad)
nop
fsubr
fst
inc
xor
icebp
xchg
outs
clc
dec
dec
sub
sub
lock
and
or
pop
mov
mov
mov
mov
cwde
and
xor
rol
es
repnz
mov
stc
push
jbe
dec
inc
arpl
jl
test
mov
jg
add
sti
sub
ja
jo
addr16
xchg
test
jl
test
jno
xor
leave
or
inc
adc
in
mov
mov
jecxz
retf
mov
jne
and
cmp
pop
mov
leave
push
retf
xchg
jmp
jbe
(bad)
jns
pop
js
ja
xchg
aam
das
add
mov
cld
ds
ins
mov
push
scas
test
test
popf
cmc
jno
inc
mov
cmp
pushf
fisubr
lds
xor
mov
pop
fcomp
jmp
imul
rcl
sub
add
mov
mov
les
mov
inc
xchg
gs
repnz
pop
mov
push
test
mov
xor
les
in
push
xchg
add
jbe
inc
fnstsw
mov
loop
pushf
fwait
icebp
push
pop
(bad)
adc
xor
shl
add
mov
enter
data16
dec
add
daa
add
out
dec
hlt
push
mov
jbe
xor
cmp
jbe
mov
lds
outs
adc
jbe
jnp
shl
add
sub
mov
adc
pop
xchg
mov
and
stc
test
hlt
ins
fwait
dec
test
add
jae
push
mov
fisubr
stos
push
sub
std
push
pop
leave
jne
jae
jbe
sub
dec
xchg
stc
call
cmps
jbe
test
mov
mov
enter
lock
imul
loop
dec
ja
xchg
lods
in
fisttp
pop
mov
jl
sub
jp
adc
cmc
xor
and
and
call
xchg
test
or
mov
sub
cld
popa
add
test
jle
and
jb
shl
leave
or
or
pop
dec
mov
mov
jg
hlt
jecxz
inc
mov
test
stos
mov
(bad)
es
push
or
hlt
inc
pop
or
push
ret
addr16
lock
bound
dec
(bad)
cdq
mov
xor
xor
push
mov
out
xchg
jne
mov
xchg
mov
push
in
jle
or
outs
fdivr
retf
push
mov
jbe
or
mov
test
sub
icebp
mov
and
inc
mov
arpl
inc
jp
mov
cs
ja
fiadd
ret
cmp
sar
cmps
push
push
fldpi
cmc
sub
lahf
and
push
jbe
in
shl
xlat
inc
sbb
hlt
test
inc
push
add
pop
push
imul
call
(bad)
rol
daa
and
and
inc
adc
les
gs
sbb
ja
fwait
add
jbe
iret
fimul
mov
add
xchg
ror
stos
ficom
mov
dec
jbe
stc
cvtdq2ps
les
ja
xchg
cmp
retf
pop
(bad)
aad
mov
movs
inc
test
lods
xor
push
or
lods
test
xchg
dec
es
loop
mov
xor
aad
jo
or
fwait
mov
inc
push
ja
mov
sub
mov
inc
rcr
push
mov
jae
in
out
push
ss
jno
push
fcom
sbb
fnsave
dec
pusha
mov
ja
mov
jmp
stos
xor
gs
int3
ins
lock
ds
(bad)
ss
push
xchg
mov
pop
mov
scas
icebp
push
outs
icebp
push
add
xchg
inc
je
push
or
(bad)
pushf
push
mov
(bad)
(bad)
xor
add
mov
jne
sub
fist
or
test
mov
inc
loopne
mov
loopne
sbb
and
xchg
popa
out
ret
pop
mov
test
lods
jp
inc
repz
(bad)
cwde
xchg
(bad)
mov
movs
jg
push
loop
lods
fisubr
dec
shl
push
xchg
mov
jae
clc
hlt
test
sbb
je
xor
retf
cmp
(bad)
jne
ror
push
jo
or
mov
leave
push
adc
lock
ins
adc
xchg
xor
(bad)
ins
jbe
or
and
xchg
pop
mov
lock
push
inc
xchg
mov
test
std
fs
call
fisttp
add
dec
stc
mov
lods
addr16
mov
pop
adc
push
pop
neg
into
movs
inc
and
xchg
xor
in
dec
sbb
lea
push
inc
in
adc
sbb
pop
lods
push
add
das
popf
mov
inc
mov
mov
enter
pop
imul
lea
push
ds
stos
dec
mov
dec
xor
nop
sub
add
call
(bad)
aam
mov
xchg
dec
int3
pop
rcr
jbe
sar
pop
and
(bad)
cmps
jp
fnstsw
les
and
ja
jle
inc
cmp
out
xchg
push
in
mov
arpl
mov
jb
xor
aaa
jns
pop
popf
mov
outs
add
shr
xor
cs
inc
sahf
into
iret
adc
inc
dec
cld
mov
call
daa
mov
inc
xchg
or
std
xor
cs
mov
pusha
ret
add
sbb
test
div
fisub
sar
ret
hlt
sar
mov
fcomp
iret
inc
jae
xor
add
jmp
sub
jmp
ja
xchg
ret
mov
loopne
fcomp
sti
jbe
dec
sahf
mov
sbb
clc
mov
add
sub
fs
je
enter
out
aaa
jo
pushf
xor
stc
or
or
js
leave
rcr
or
je
lds
out
(bad)
in
jne
jne
stos
ja
(bad)
adc
mov
push
mov
fistp
sub
and
daa
out
xchg
in
icebp
or
xchg
xchg
dec
and
sbb
pop
push
test
repz
xchg
cmps
neg
add
mov
clc
dec
js
sbb
loop
inc
in
retf
je
out
mov
mov
or
mov
cli
add
sahf
dec
lea
das
jns
ret
mov
cmp
push
jno
(bad)
mov
cmp
pop
jle
fdiv
xchg
mov
je
mov
hlt
push
sbb
pop
add
jg
cmp
ret
in
add
cmp
jmp
jae
call
or
jo
jo
mov
cmp
loop
loope
movs
(bad)
pop
ss
outs
repnz
inc
daa
inc
inc
movs
(bad)
retf
out
lock
cli
push
hlt
stos
test
adc
lock
dec
xchg
mov
and
jge
and
jb
and
outs
push
enter
ja
mov
icebp
mov
test
jne
bound
aas
jg
and
mov
movs
scas
fstp
lock
clc
xchg
dec
sub
push
sub
jno
stc
sub
cld
fs
mov
cmc
test
xchg
into
in
jp
mov
test
lock
jo
push
pusha
hlt
jo
pop
cmp
vmwrite
pop
jbe
(bad)
jbe
push
mov
into
mov
jbe
je
rol
mov
call
movs
cmc
xor
leave
sub
jbe
pop
jns
fiadd
cli
dec
mov
mov
cld
jbe
fmul
cwde
mov
arpl
loop
or
lock
popa
mov
xchg
clc
dec
mov
pop
hlt
dec
loope
dec
(bad)
sbb
or
pop
mov
mov
jae
jmp
mov
push
adc
js
xchg
cmc
adc
ja
xor
push
inc
ja
mov
bound
aas
push
lock
out
je
ja
adc
xor
icebp
or
and
jl
fs
or
add
ret
add
cmp
clc
sahf
ja
out
hlt
int3
sbb
cmp
pop
outs
xchg
movs
dec
jbe
cwde
das
and
aas
popf
loop
icebp
cmp
jecxz
jmp
mov
mov
loop
outs
pop
ja
push
pop
lds
and
adc
enter
adc
outs
out
mov
cli
out
xchg
mov
or
adc
out
xor
je
sub
jle
(bad)
sub
or
sbb
or
popa
xor
xlat
cli
mov
in
je
cmps
fsubr
jbe
std
in
pop
sub
or
into
popf
xchg
sub
jne
mov
jbe
mov
dec
mov
dec
lds
pop
xchg
addr16
lock
sbb
inc
dec
or
add
cdq
jne
push
xchg
mov
cmps
mov
dec
addr16
adc
fnstsw
inc
lahf
or
hlt
js
stc
rol
jl
shr
cs
popf
add
outs
mov
or
push
fild
cwde
ss
out
iret
sar
mov
dec
icebp
hlt
(bad)
mov
cmp
xlat
pop
adc
rol
cld
call
add
sub
push
addr16
xor
outs
pop
or
in
mov
adc
jnp
arpl
clc
cdq
movs
fwait
add
nop
enter
xor
loopne
je
popa
sub
or
cli
mov
and
xor
call
xor
mov
inc
push
jbe
aam
push
xor
imul
ins
leave
lock
in
add
nop
jle
mov
dec
(bad)
pop
mov
sub
and
cdq
imul
xlat
lahf
mov
pop
outs
je
icebp
hlt
and
cmc
ror
push
cmp
sub
cdq
xor
jo
mov
mov
mov
and
cmp
iret
aas
lock
add
dec
test
push
adc
jne
test
icebp
jb
sbb
scas
jae
sbb
jne
jmp
scas
jbe
and
push
outs
jno
and
mov
data16
in
(bad)
add
outs
icebp
retf
jne
dec
and
xor
out
scas
push
jp
mov
sbb
out
dec
iret
(bad)
in
and
dec
ja
xlat
clc
jno
mov
int3
mov
outs
int3
add
dec
jae
jl
scas
inc
les
sbb
push
mov
dec
test
mov
inc
add
lock
gs
inc
mov
lock
xchg
or
push
and
icebp
mov
and
imul
frstor
mov
mov
call
jb
adc
xor
ret
mov
mov
inc
mov
leave
push
jmp
scas
pusha
lea
sbb
int3
sub
(bad)
clc
scas
ss
popf
jbe
dec
pusha
sub
(bad)
mov
xchg
call
jne
rcr
fbstp
popa
cmp
inc
sti
push
dec
mov
xor
pop
fdivr
fdivr
cmp
adc
and
cld
jge
(bad)
clc
shl
inc
mov
inc
shl
cmp
bound
cs
repz
jbe
add
and
cmp
iret
ja
loopne
div
jnp
and
js
jo
std
jne
shl
push
mov
mov
jne
mov
cmp
hlt
dec
fsub
rcl
mov
mov
nop
jns
or
(bad)
push
inc
mov
repnz
in
imul
xor
inc
xchg
idiv
dec
pop
pop
jg
jne
mov
jl
and
in
rcl
inc
inc
inc
inc
dec
jp
and
mov
xor
cdq
ins
xchg
mul
mov
data16
dec
jmp
(bad)
and
es
xor
inc
gs
adc
dec
or
icebp
xchg
jno
dec
cwde
aaa
jne
adc
rcr
sub
hlt
add
cmp
mov
stc
lock
jmp
cmp
pop
js
mov
xchg
jp
sub
mov
test
jno
and
adc
imul
and
sub
je
xor
neg
ror
icebp
xchg
sbb
sbb
mov
ins
sbb
mov
mov
sbb
icebp
mov
shl
pop
pop
mov
jl
in
arpl
(bad)
ficom
test
icebp
ret
test
or
dec
inc
push
mov
sahf
xchg
mov
push
je
(bad)
lds
ss
ss
or
cdq
daa
pop
loop
ja
add
mov
mov
retf
leave
ret
hlt
jbe
mov
dec
adc
or
fsubr
inc
mov
cli
adc
enter
add
jae
aam
ds
pop
retf
push
mov
fs
cmc
std
popa
aam
mov
lods
aas
mov
mov
repnz
push
(bad)
lock
pop
ror
or
clc
jne
sbb
xchg
mov
adc
sahf
lea
je
add
sbb
mov
inc
mov
nop
call
add
push
(bad)
jge
outs
xor
add
push
cmp
fmul
out
sbb
mov
outs
lods
sti
lods
xlat
push
int
icebp
mov
sbb
pop
mov
sar
jae
je
test
aas
js
pop
or
xchg
shr
(bad)
cwde
retf
jne
sbb
icebp
pushf
imul
retf
mov
mov
add
sbb
arpl
jae
bsf
mov
div
bound
cmp
mov
inc
data16
mov
mov
pop
jp
imul
jl
movs
inc
data16
xchg
ja
push
dec
push
push
push
loop
cmp
and
cmp
inc
outs
xchg
mov
aad
inc
vpunpckhwd
es
cli
jnp
fstp
imul
icebp
enter
(bad)
out
lds
lahf
movs
mov
fwait
jne
sahf
sbb
into
xchg
xchg
inc
cld
xchg
adc
loop
pushf
sti
mov
leave
mov
aas
cmp
cmc
jae
(bad)
leave
pusha
xchg
lods
std
scas
mov
mov
(bad)
repnz
iret
pusha
shr
movs
xchg
or
jecxz
xor
std
ins
add
add
cmps
xlat
mov
clc
out
mov
push
mov
jb
mov
cmps
ror
js
xlat
je
stos
call
loopne
mov
fbstp
dec
dec
mov
lock
xchg
icebp
ins
jl
adc
xchg
rcr
pop
mov
push
(bad)
xchg
in
aaa
lds
mov
xchg
int
scas
les
sub
mov
out
mov
jb
in
jbe
sub
ret
pop
jbe
loope
into
call
loop
cmp
sub
sub
and
jmp
add
and
xor
icebp
mov
test
sbb
dec
xchg
cdq
fild
mov
mov
jno
jg
(bad)
or
mov
ficomp
xor
jp
in
data16
pop
adc
xor
inc
mov
sti
paddb
icebp
adc
sub
jb
cdq
je
lods
jle
mov
in
add
jo
fwait
je
push
hlt
cmp
ret
jg
arpl
sub
les
call
mov
push
sub
xor
pop
ja
scas
adc
inc
or
adc
ja
inc
mov
enter
xor
enter
cld
test
das
mov
sub
fwait
gs
(bad)
pop
push
mov
jnp
push
repz
imul
fsubr
es
xchg
pop
aad
or
jo
push
leave
adc
xchg
popf
fbstp
jno
div
fwait
lods
icebp
mul
xchg
cli
ds
je
jbe
cs
xchg
iret
aam
add
pop
mov
imul
jo
xchg
mov
sbb
xchg
loope
rcr
fwait
cmp
mov
icebp
inc
sti
in
aam
cdq
jo
cdq
dec
fdivr
jne
inc
daa
adc
mov
je
in
es
jae
mov
mov
fwait
hlt
push
dec
adc
sub
mov
jne
mul
sub
call
imul
stc
fstp
jecxz
xchg
lock
sub
das
test
outs
push
enter
retf
sbb
scas
icebp
(bad)
mov
mov
mov
push
icebp
mov
fwait
mov
hlt
mov
movs
add
sbb
mov
(bad)
ins
mov
in
add
enter
mov
push
adc
icebp
cld
clc
push
fimul
mov
sub
movs
lock
leave
xchg
rcr
xchg
repz
dec
movs
ds
xchg
ins
jle
mov
inc
push
into
dec
retf
or
mov
or
in
xchg
and
push
test
mov
mov
fisttp
outs
sbb
movzx
mov
mov
and
imul
adc
call
(bad)
daa
sbb
push
jb
int
fisub
mov
not
jne
icebp
cmps
xchg
pop
imul
or
xchg
dec
mov
aad
outs
outs
gs
aam
jne
sbb
outs
ret
in
icebp
fisttp
sbb
adc
lock
pop
add
aaa
or
xchg
mov
test
test
(bad)
or
sbb
jne
ins
or
mov
test
pop
shl
cwde
mov
(bad)
aad
inc
icebp
adc
(bad)
faddp
mov
push
mov
ror
sbb
cld
mov
mov
ins
fwait
daa
mov
cmp
push
icebp
xchg
pop
daa
mov
inc
sbb
int3
jne
xchg
bound
jno
js
ret
push
imul
shr
jno
loop
inc
(bad)
jno
into
xchg
repnz
loop
xor
retf
dec
ins
(bad)
stc
cmp
int3
dec
(bad)
jne
push
fcmovnbe
push
cmp
add
inc
lock
aad
fwait
mov
cld
add
xor
dec
inc
ds
sub
lock
mov
out
mov
xchg
push
loope
sar
ret
mov
push
jnp
pop
popf
test
ja
mov
daa
xor
shr
aaa
lock
jg
add
jb
shr
in
push
cmps
outs
aaa
jae
and
test
mov
xor
loop
ja
add
ret
cmps
sar
call
fcom
(bad)
pop
mov
(bad)
jmp
pop
push
test
pop
push
lock
inc
add
jbe
or
jnp
cmp
or
push
jno
je
stos
(bad)
addr16
imul
xor
sub
fist
leave
mov
jbe
mov
fwait
mov
movs
add
lods
icebp
call
or
or
jp
cld
jle
push
mov
dec
ret
jp
xchg
inc
jne
call
rcl
mov
add
ja
jns
out
mov
jne
pop
ja
sbb
test
jg
add
jne
add
cmovl
mov
pop
cmps
cmc
mov
jbe
add
sbb
call
mul
pop
mov
sbb
jp
jmp
mov
out
mov
mov
pop
sbb
scas
cmp
es
sub
fs
aaa
push
adc
mov
sbb
pop
mov
enter
call
jne
pop
jecxz
sar
loope
pop
push
faddp
jbe
(bad)
call
mov
add
cmps
and
jecxz
xchg
or
(bad)
gs
shl
repz
scas
stos
pop
jne
into
dec
jp
mov
adc
push
mov
and
jne
jg
loop
add
push
xor
add
fisttp
shl
fdivr
inc
test
shl
jge
scas
mov
test
mov
inc
xchg
xchg
xchg
in
or
inc
imul
cmp
ror
jge
into
cmc
hlt
jb
in
retf
push
jno
aaa
rcl
ret
mov
add
repnz
jae
scas
cmp
or
or
mov
daa
out
jbe
(bad)
pop
sub
loop
mov
dec
mov
adc
lock
mov
setle
and
sbb
shl
xor
dec
add
mov
fs
shl
inc
popa
lock
xchg
mov
call
test
cmp
shl
or
jp
mov
dec
mov
ds
(bad)
outs
sbb
inc
xchg
mov
mov
ja
arpl
jnp
add
xor
dec
mov
dec
add
cmp
in
push
sbb
cmp
adc
push
movs
repnz
inc
adc
mov
pop
movs
xchg
mov
addr16
std
(bad)
rcr
mov
ret
in
sub
dec
icebp
iret
jae
xchg
jo
and
sar
(bad)
repnz
push
cwde
cmps
mov
push
and
loopne
pop
xor
sti
je
int3
mov
in
xor
ficomp
addr16
imul
pushf
push
ja
xor
cld
jmp
ret
icebp
add
xchg
mov
call
icebp
in
shl
outs
retf
cmp
fcomp
jp
loopne
les
inc
sub
push
popf
js
leave
daa
mov
aam
jo
mov
inc
jbe
xor
out
mov
adc
jle
(bad)
push
jmp
jge
xchg
pop
or
or
jne
mov
jno
nop
add
pop
fbstp
adc
adc
test
jbe
xchg
or
(bad)
push
pop
inc
and
call
movs
sub
ja
call
mov
rcl
inc
mov
hlt
retf
cmp
ror
inc
fs
popa
pop
icebp
inc
ror
enter
mov
sub
shl
repnz
frstor
fisttp
adc
sbb
jo
lds
ret
retf
jbe
in
dec
mov
jnp
push
jns
xchg
and
push
xor
or
sub
(bad)
mov
xchg
hlt
fucom
sub
jb
mov
bound
test
dec
rcr
stos
pop
inc
inc
xor
lea
and
movs
stc
jo
push
xor
add
xor
sbb
jbe
cmp
mov
add
fnstsw
loopne
xchg
and
cwde
jbe
rcr
(bad)
pop
stos
lods
cmp
ds
pop
dec
cld
ja
imul
pop
imul
ja
retf
adc
sbb
lock
cli
mov
mov
jne
xor
pop
je
push
sub
ret
or
retfw
icebp
or
push
mov
je
popa
ficomp
jbe
les
sar
(bad)
xchg
lahf
mov
jle
sbb
or
mov
jne
(bad)
hlt
fisttp
fwait
stc
dec
into
jno
push
sbb
add
jbe
(bad)
fadd
jge
adc
push
adc
iret
push
mov
cmc
in
icebp
dec
pop
pop
sbb
rcr
nop
(bad)
mov
mov
or
adc
test
and
pushf
xchg
aam
lods
or
add
add
test
jecxz
xor
pop
in
mov
mov
fwait
mov
cli
push
mov
push
dec
add
jp
idiv
leave
and
push
xchg
mov
pop
pop
jne
cmp
shl
shl
jbe
nop
adc
cmp
dec
sub
int3
fnstcw
jecxz
sbb
or
jbe
aaa
cmp
cmp
sub
ds
jmp
jge
mov
in
ja
aas
add
ins
lea
mov
mov
sti
jno
js
dec
inc
lods
xchg
stc
dec
movs
les
sub
dec
jnp
or
xor
jmp
mov
xchg
xchg
xor
test
add
inc
mov
mov
push
xchg
push
adc
cmp
lds
push
fadd
mov
cmp
pop
add
jo
in
dec
jge
sahf
xor
mov
xlat
xchg
fnstenv
sbb
jbe
(bad)
push
jge
mov
and
mov
mov
add
ucomiss
xor
ins
cmp
jne
pop
push
sbb
mov
fs
pop
add
sub
lods
ret
xor
fwait
shl
jbe
inc
mov
jecxz
xor
sub
int
mov
push
push
sub
call
outs
pusha
std
push
jl
imul
add
mov
lock
fld
cmp
jae
mov
push
paddsb
or
aas
mov
mov
jmp
or
jmp
mov
push
pop
jne
call
in
ret
outs
out
fs
fwait
or
loopne
sbb
cmp
jl
mov
hlt
push
ss
jbe
sahf
fwait
and
loopne
inc
sbb
iret
adc
xchg
mov
lock
outs
out
mov
movs
push
xor
sub
data16
cwde
aad
fild
mov
mov
xor
hlt
iret
mov
js
dec
stc
adc
adc
retf
stos
jle
pop
push
xor
repnz
mov
ret
xor
mov
adc
mov
movs
ds
xor
clc
pop
loopne
dec
icebp
lods
sub
xlat
sub
xor
call
retf
(bad)
and
jge
je
mov
add
aam
dec
pop
es
dec
jg
jecxz
or
loopne
mov
sbb
xchg
lds
inc
loop
mov
mov
sub
inc
xor
or
lods
je
jle
jle
fldenv
dec
idiv
sub
les
outs
and
sbb
xchg
lods
out
js
scas
mov
lahf
daa
into
(bad)
mov
mov
adc
test
inc
sub
lods
mov
daa
mov
push
retf
and
ja
cmp
xor
jbe
shl
dec
fsubr
int
test
add
push
pop
mov
jns
div
jbe
cdq
dec
jmp
or
je
cld
push
dec
out
mov
sbb
push
dec
sub
shr
or
add
mov
pop
push
add
test
push
mov
cmp
ins
lock
arpl
nop
jge
mov
xchg
dec
add
jp
mov
sbb
jne
jge
or
and
fisttp
jne
xchg
or
jnp
lock
loop
pop
sbb
and
test
imul
jge
loopne
and
xor
jne
xchg
es
aad
outs
bound
sar
out
jbe
lds
mov
leave
rcr
add
clc
pop
push
inc
mov
mov
adc
(bad)
lods
xchg
adc
push
jge
call
div
mov
(bad)
int3
cmp
jb
inc
sbb
mov
ret
enter
hlt
dec
dec
adc
nop
hlt
xor
icebp
bound
and
scas
push
fbstp
or
add
mov
dec
adc
sbb
lock
sub
pop
and
jne
iret
inc
jnp
dec
fst
mov
push
std
mov
aad
gs
cs
test
retf
lods
nop
fstp
mov
adc
mov
fs
and
iret
nop
hlt
pop
repz
sbb
je
lds
test
lods
stos
sub
pushf
xchg
jnp
out
push
lock
pop
adc
jg
into
lock
gs
sahf
mov
cmps
ins
je
arpl
mov
add
jo
mov
and
xchg
jg
aas
fst
fneni(8087
lock
mov
ss
adc
and
dec
ss
(bad)
jne
and
cld
add
inc
or
mov
jne
xlat
shl
and
mov
sbb
push
add
xchg
lock
aas
push
ret
iret
xchg
lock
mov
mov
in
aam
in
and
ror
out
cld
pop
aad
div
int3
xchg
cmp
jo
cmp
das
xchg
jb
idiv
pop
push
bound
test
outs
mov
sbb
mov
test
jge
lods
out
int3
xchg
xor
pushf
add
jbe
enter
jne
cmp
jbe
pop
cmps
sub
in
retf
dec
jae
es
sbb
jle
pop
mov
fidivr
popf
test
sti
mov
ja
or
inc
enter
mov
shl
loop
lock
mov
xor
sbb
or
mov
mov
jne
sub
cmps
xchg
icebp
push
cmps
pop
mov
out
jl
jae
sub
data16
cmps
int
adc
xchg
addr16
mov
sbb
lock
div
mov
or
pop
mov
mov
cmp
sub
jne
add
jp
cmps
push
std
jbe
xor
leave
mov
(bad)
fisub
lods
in
cld
imul
push
(bad)
cmp
cmp
mul
enter
sub
pop
dec
addr16
(bad)
mov
jb
jnp
jbe
add
aam
pop
fild
stos
lahf
popf
and
arpl
jne
(bad)
idiv
pop
sub
mov
sub
cmps
dec
icebp
adc
inc
int
pop
(bad)
imul
pop
pop
inc
addr16
xchg
icebp
es
cld
adc
cmps
mov
test
push
out
iret
cmc
es
icebp
dec
test
jmp
or
cdq
mov
(bad)
es
(bad)
call
fidivr
pop
je
cwde
inc
xor
inc
aam
sbb
jbe
ins
mov
dec
ds
aaa
mov
jp
data16
test
jmp
stc
jg
in
movs
mov
loope
imul
int
mov
push
das
pop
adc
arpl
jmp
sub
loope
jl
add
sti
sub
call
xlat
jmp
push
ja
test
xor
xchg
mov
and
xchg
add
bound
hlt
nop
jne
sub
xchg
ja
dec
inc
sub
push
test
jbe
mov
jne
inc
clc
outs
push
and
ja
inc
jae
je
cli
fstp
fdivr
jmp
hlt
push
sbb
and
dec
aam
mov
xchg
in
aad
dec
add
(bad)
cmp
int3
mov
push
out
sar
enter
cmp
or
mov
lods
adc
xor
dec
jo
int3
push
mov
fwait
leave
je
imul
push
retf
mov
in
sub
scas
xchg
ret
repz
pop
inc
xor
rol
cmp
popa
jmp
adc
fidivr
int3
jmp
cmp
push
jnp
sbb
cmps
and
je
mov
fimul
div
bound
aas
lahf
(bad)
mov
js
adc
ror
out
test
xor
inc
jns
cmp
or
lock
dec
xchg
scas
cmp
sbb
or
cli
ja
mov
push
call
cmp
adc
int3
inc
xor
fwait
and
mov
retf
int
(bad)
mul
movs
cmp
pop
icebp
rol
mov
je
inc
cmp
je
ins
xor
push
and
out
enter
mov
mov
add
icebp
xor
into
cld
popf
icebp
mov
or
lahf
cmp
jmp
mov
fimul
fwait
mov
ins
cmp
push
push
jp
jmp
xor
jge
adc
je
mov
and
push
mov
pop
mov
jns
sbb
cmovnp
imul
imul
(bad)
lock
mov
fdiv
or
inc
adc
icebp
xchg
xchg
fdiv
inc
sbb
mov
and
jne
add
mov
sbb
push
ds
sub
inc
je
cld
adc
jg
call
mov
lock
adc
mov
std
pop
rcl
sbb
and
(bad)
fsub
mov
(bad)
fnstsw
and
inc
fild
push
dec
imul
sbb
int3
mov
pop
push
or
aaa
out
cmp
repz
call
sbb
xchg
jp
das
scas
mov
sbb
cmp
push
loop
rcr
jb
pop
mov
jg
(bad)
cmp
mov
shl
clc
imul
xor
fmul
adc
inc
test
ins
pop
or
mov
add
ins
or
shr
sub
loope
mov
dec
arpl
or
push
adc
push
(bad)
push
mov
in
scas
or
push
jno
clc
out
jne
and
int
jne
test
jbe
lods
cmp
inc
mov
mov
mov
ins
xor
aad
mov
aaa
xchg
add
xlat
icebp
xor
mov
out
je
jl
shl
or
push
iret
inc
dec
jne
je
shl
dec
lock
mov
ins
fistp
mov
sbb
and
(bad)
int
(bad)
dec
mov
test
leave
jbe
test
(bad)
fwait
sbb
pop
xor
lds
and
and
call
push
and
push
pusha
(bad)
imul
xchg
fnsave
push
and
ins
mov
daa
leave
adc
lock
xchg
pop
push
(bad)
mov
popa
fldenv
push
lds
(bad)
ja
and
dec
shl
ss
cmp
into
inc
in
into
sbb
or
out
ins
test
dec
loope
lock
add
mov
(bad)
icebp
or
inc
lock
mov
mov
xor
fsub
jne
xor
js
fcom
imul
cmp
mov
add
jbe
jbe
pushf
les
xchg
mov
sahf
in
(bad)
arpl
sub
xchg
rcr
add
ja
xchg
(bad)
mov
mov
mov
push
fs
and
cmp
and
mov
test
rcr
(bad)
mov
ror
aam
mov
jne
mov
cmp
mov
push
mov
lock
iret
ins
dec
and
shl
dec
pop
cdq
pop
loop
dec
icebp
push
add
xchg
pop
loopne
jo
(bad)
sahf
loop
in
push
inc
rcr
jne
jmp
sbb
shl
dec
shr
xor
or
dec
into
je
xchg
sti
cmp
sbb
pop
inc
retf
les
inc
(bad)
les
sub
cmp
scas
cmp
ins
fadd
cld
retf
mov
aas
(bad)
mov
lock
(bad)
jae
stos
icebp
(bad)
pop
xor
mov
movs
add
inc
add
sub
cmp
adc
iret
xchg
xor
addr16
loop
jb
repz
retf
push
loopne
mov
inc
lock
cmc
mov
loop
push
adc
pusha
inc
adc
dec
aam
sbb
mov
imul
pop
cmp
ja
jnp
aam
xchg
sbb
ja
pop
mov
in
jae
inc
call
icebp
push
mov
jno
je
cdq
retf
outs
(bad)
jnp
add
xchg
mov
pusha
dec
cmp
lods
sbb
div
nop
pusha
cwde
dec
arpl
pop
out
sub
fidiv
jb
pop
mov
sbb
pop
mov
je
movs
nop
(bad)
jbe
sub
lock
daa
loope
inc
sbb
movs
sub
clc
pop
test
loope
xchg
pushf
xchg
jnp
cld
sub
fnstcw
xchg
int3
jl
add
mov
add
icebp
cmp
mov
pop
xchg
mov
cmp
stos
and
push
or
mov
sub
sahf
sub
imul
xlat
arpl
pop
jne
pop
mov
push
or
mov
inc
mov
sub
shr
and
mov
jno
cmp
mov
jae
cmp
fldlg2
into
cmp
add
loopne
jae
fisttp
adc
popf
inc
mov
mov
mov
int3
push
jne
push
sub
or
mov
imul
mov
icebp
jbe
fimul
mov
pop
inc
mov
push
sub
std
jp
mov
popf
jbe
push
adc
ja
sahf
inc
outs
int3
int
leave
mov
cmc
push
mov
ds
add
cmc
out
popf
outs
mov
and
cwde
movs
mov
mov
mov
icebp
push
mov
aas
or
xor
daa
xchg
dec
mov
mov
(bad)
cmp
and
cli
jae
out
jle
das
sbb
mov
cdq
shl
or
sub
outs
pop
and
pop
les
push
(bad)
pop
aad
and
scas
ret
inc
push
mov
push
fst
in
cmp
push
jl
sub
adc
add
addr16
idiv
pop
mov
in
mov
rcr
hlt
bound
sub
mov
movs
enter
dec
jmp
jns
push
(bad)
xor
sub
mov
sub
icebp
nop
out
aam
jo
adc
dec
stos
fdivrp
hlt
sub
sbb
lods
dec
nop
hlt
or
jbe
ja
mov
mov
or
mov
inc
dec
sahf
mov
stos
ret
gs
jmp
mov
loopne
push
jne
sub
repz
rcr
xlat
sub
fdivr
pop
sub
xor
mov
mov
(bad)
pop
rol
pop
mov
cmps
xor
mov
daa
xor
rol
or
sub
mov
inc
fmul
loope
ja
lods
pop
rcr
mov
jle
lds
cmp
lock
cmc
test
sar
nop
loopne
cmp
add
or
mov
pop
cld
ins
mov
icebp
add
aas
mov
pop
sar
fwait
jne
fisttp
jbe
sub
das
test
stos
push
dec
cs
mov
lock
cvttps2pi
jle
stos
cmp
mov
xor
jae
fist
not
icebp
or
fcom
jno
popf
test
loop
jne
scas
retf
fdiv
in
adc
cmp
mov
sub
mov
mov
int
stc
push
mov
das
mov
fstp
int3
daa
(bad)
jne
xchg
mul
dec
cwde
xor
xchg
aas
stos
xor
inc
mov
test
and
push
jo
icebp
stos
xchg
shl
ret
mov
push
imul
ror
jo
in
adc
(bad)
fwait
push
add
push
mov
test
xchg
xor
(bad)
xlat
inc
lock
jne
xchg
sub
je
fmul
jne
pop
pop
pushf
je
rol
pop
inc
jnp
iret
in
(bad)
mov
imul
movs
dec
and
in
lea
sbb
push
jae
fdivr
add
push
push
int3
es
lock
sub
jmp
jmp
push
out
(bad)
mov
les
loopne
pop
adc
gs
jne
jp
daa
jbe
ins
xchg
retf
mov
(bad)
loopne
je
sub
push
jbe
pop
xchg
ins
mov
icebp
pop
cs
xor
jl
mov
adc
cmp
or
push
mov
inc
icebp
dec
rcl
pop
mov
or
retf
int
jp
ja
ja
inc
dec
loope
lahf
iret
jbe
jb
ins
mov
xchg
xor
loopne
ret
jno
in
pop
jle
(bad)
mov
sbb
je
(bad)
rcl
sbb
xchg
pop
mov
mov
jmp
imul
lods
sub
cmps
call
lock
add
cmp
mov
cmps
push
push
cmps
lock
mov
in
adc
je
pop
imul
test
into
popf
jl
xor
push
test
hlt
push
mov
mov
je
and
add
rol
mov
cmp
jb
mov
sub
arpl
enter
movs
adc
and
or
sbb
fs
mov
nop
iret
test
pop
push
outs
xlat
stos
not
jl
je
jge
out
mov
xchg
pop
bound
pop
int
xchg
push
cmp
ins
nop
or
je
sub
jbe
in
test
sbb
xchg
rep
dec
mov
push
test
out
jbe
mov
cli
and
test
rcl
call
in
push
fwait
cmc
mov
mov
add
pop
adc
scas
test
mov
pop
sbb
nop
rol
xor
jb
lea
stos
lea
idiv
or
pop
test
nop
push
aad
push
movs
jb
push
dec
lock
jmp
or
inc
push
movs
or
stc
pushf
xchg
dec
fisub
ja
es
mov
in
jle
f2xm1
popf
xchg
xchg
jmp
adc
cs
sub
cmp
mov
aas
sbb
jmp
ret
add
add
cdq
cmp
stos
add
dec
mov
push
mov
cmp
mov
aad
icebp
stos
add
pusha
in
mov
and
int3
sbb
dec
(bad)
add
sar
outs
xor
int3
or
xchg
dec
or
lahf
data16
call
dec
xor
ja
clc
repz
inc
jmp
pop
ror
rol
pushf
pop
or
jecxz
xchg
rcl
push
ret
lock
jmp
pop
dec
and
mov
xchg
xor
jbe
xchg
xor
cmps
xor
add
test
push
pop
mov
cmp
pusha
push
mov
ret
scas
sub
pusha
mov
mov
pop
push
mov
push
loopne
push
jno
jb
je
imul
push
inc
xchg
push
sbb
add
test
mov
popa
mov
push
dec
inc
pop
hlt
jno
lods
mov
pmullw
cmp
ins
enter
ja
pop
and
xchg
ss
and
dec
add
outs
lds
dec
jle
jecxz
ins
and
or
mov
out
cmps
pusha
lock
sub
dec
cmp
jne
fsubr
mov
push
pop
popa
stos
lea
jge
mov
xor
and
mov
mov
inc
mov
mov
pushf
retf
xor
xchg
and
sbb
adc
out
push
(bad)
add
cmp
sbb
inc
hlt
adc
(bad)
shl
test
scas
jg
jle
dec
sub
xor
or
sbb
ins
je
pushf
hlt
cmp
jae
xor
and
mov
dec
aaa
cmpps
mov
mov
mov
addr16
icebp
push
sub
mov
lahf
repz
mov
push
lock
pop
ret
mov
daa
and
inc
sub
mov
add
pop
movd
push
dec
sub
jl
xor
pop
ret
popa
jbe
pusha
mov
nop
push
mov
arpl
sub
mov
sbb
cmc
dec
adc
imul
mov
push
add
sub
jne
ror
mov
mov
jns
retf
push
dec
loopne
dec
jne
dec
mov
retf
cmp
xor
shl
fcomp
dec
scas
lock
mov
mov
jae
pop
icebp
xchg
and
fsubr
fiadd
fiadd
ret
jns
cmp
mov
pop
pusha
pop
jns
sbb
retf
int
cmp
(bad)
xchg
dec
sahf
es
jp
sub
jns
div
jo
cmc
das
pop
outs
loop
and
out
hlt
inc
ja
(bad)
cmp
pop
xor
or
pop
(bad)
mov
cmps
add
div
or
rol
mov
inc
icebp
cli
hlt
mov
fisubr
pop
xor
jne
mov
ja
leave
jbe
in
es
popa
mov
(bad)
sub
mov
adc
pop
mov
out
pop
call
je
push
(bad)
xchg
xchg
dec
fcom
enter
mov
jnp
(bad)
call
mov
sub
jne
dec
adc
jne
fisubr
ja
(bad)
aaa
(bad)
cwde
push
or
mov
sbb
(bad)
xor
iret
shrd
movs
pop
xchg
xchg
popf
imul
mov
sub
ins
pop
sub
loop
(bad)
jmp
jl
cmp
mov
loopne
into
ins
adc
dec
mov
xlat
sar
cmp
mov
and
jmp
mov
dec
movs
aas
jg
fld
shl
cli
cmp
push
dec
cmps
or
mov
pop
div
ja
dec
mov
pop
ret
test
sbb
lods
jae
push
shl
repz
ins
sbb
mov
sub
mov
mov
je
mov
lds
jns
fwait
dec
pop
add
push
scas
pushw
psubsw
lock
retf
popa
fld
mov
js
push
add
cmps
cmc
jbe
fadd
gs
popa
(bad)
out
cmps
jo
jmp
pop
jge
lock
repz
mov
out
cmps
(bad)
jb
push
add
xor
shl
or
cmps
mov
jno
mov
jge
fld
ss
add
icebp
(bad)
add
mov
xor
jb
popw
xor
inc
dec
and
mov
repnz
mov
sar
(bad)
in
jp
pop
jnp
jmp
sbb
loopne
jp
mov
mov
out
cdq
cmp
fsubr
sar
dec
ja
inc
push
stos
mov
mov
movs
out
and
ja
leave
sti
inc
add
mov
dec
sar
shl
in
adc
cmp
ja
fucomip
stc
fcom
xchg
xor
jne
(bad)
out
push
mov
iret
jecxz
fsub
mov
or
jbe
cmps
mov
sbb
hlt
mov
pop
ja
int3
xchg
bnd
(bad)
push
xchg
inc
call
and
xchg
push
clc
and
mov
gs
sbb
push
push
mov
add
dec
shl
sti
leave
mov
jmp
xor
and
icebp
and
cmp
mov
fsubr
repz
je
mov
or
jp
mov
cmps
mov
dec
data16
ins
aas
mov
fsubr
shl
mov
mov
pop
pop
xor
lds
and
outs
stc
push
inc
stos
jecxz
and
(bad)
push
mov
mov
sub
xor
pushf
loope
pop
into
jge
mov
pop
jmp
dec
div
std
add
es
les
jbe
pop
sahf
outs
pop
imul
movs
jl
xor
cli
sbb
and
xor
and
mov
ins
sub
imul
cmps
icebp
call
jns
shr
mov
mov
cmp
mov
inc
mov
jne
xchg
out
cmps
scas
shl
add
rcr
push
mov
jbe
inc
imul
mov
mov
push
mov
pop
icebp
dec
sub
popa
movs
js
xor
repz
push
and
xor
pop
ret
or
mov
ja
popa
pop
mov
out
and
ja
jb
mov
mov
scas
pop
(bad)
hlt
jno
into
lock
shr
rol
loope
jae
mov
push
or
mov
jne
fsub
ja
enter
cdq
(bad)
pop
sbb
pop
imul
rcr
inc
test
adc
mov
mov
mov
dec
stos
mov
cld
xchg
xor
pop
in
fsubp
in
dec
mov
push
call
mov
in
loope
xor
mov
fimul
je
xchg
scas
out
les
or
popf
inc
test
mov
jno
inc
add
sar
in
inc
mov
movs
and
hlt
icebp
xchg
sub
jne
mov
mov
imul
icebp
sahf
and
add
ja
jp
xchg
inc
aas
cs
xchg
jbe
pop
sub
mov
das
enter
lock
dec
sbb
jo
and
xchg
stos
adc
or
jge
push
and
neg
mov
les
xor
adc
test
iret
mov
jbe
dec
neg
mov
or
mov
jbe
adc
stos
mov
mov
xor
lods
and
cmp
fmulp
repnz
jbe
push
ret
mov
aaa
xchg
cmc
cmps
scas
inc
loop
jne
clc
cmc
cld
cmp
mov
enter
inc
mov
pop
xchg
js
retf
lock
les
xchg
icebp
xor
outs
and
sar
mov
push
in
ja
sub
loope
add
mov
in
aam
sti
mov
fwait
mov
add
ret
ret
icebp
xor
jb
adc
rol
adc
fwait
mov
add
mov
adc
jne
xchg
push
call
into
pop
sub
lock
fisub
in
mov
ffree
sub
pop
jne
mov
cwde
bsf
into
or
lods
lea
jbe
retf
in
cmps
lock
mov
mov
std
mov
in
inc
inc
adc
es
jo
data16
movs
cmp
es
mov
sub
mov
jge
jo
icebp
xchg
dec
inc
cmp
cwde
je
sub
mov
push
pushf
mov
es
retf
cmp
xor
add
xor
sub
mov
mov
lds
inc
jl
xor
dec
sub
out
xchg
jne
mov
or
adc
je
loopne
jmp
push
cmp
(bad)
pusha
mov
xor
jne
adc
and
fsubrp
push
cmp
jecxz
arpl
xor
js
jae
test
clc
inc
pusha
lock
pop
mov
mov
xor
inc
clc
jmp
ss
out
mov
lock
sub
xchg
aad
mov
test
int3
adc
shr
arpl
in
mov
pop
fnstenv
pop
repnz
dec
and
cwde
clc
push
jae
dec
loope
daa
sbb
adc
push
add
sub
and
mov
push
retf
stos
push
lahf
dec
dec
push
inc
push
xor
mov
inc
loop
pop
je
int
or
pusha
cdq
adc
mov
ja
and
lock
pop
imul
mov
retf
fbld
cmp
ret
sbb
fstp
aam
push
aas
int
xor
xchg
mov
mov
mov
test
dec
sar
outs
mov
je
add
test
mov
xor
and
and
dec
jb
sub
lock
adc
push
adc
ja
push
es
adc
adc
cmps
or
enter
in
rcr
ret
xchg
mov
in
fdivr
in
(bad)
xor
and
lods
mov
retf
cli
icebp
xlat
or
mov
jmp
pushf
cli
mov
dec
sbb
or
add
loopne
mov
cmc
mov
sbb
and
test
jno
fld
loope
(bad)
push
mov
lods
fidiv
inc
mov
les
mov
dec
out
mov
mov
mov
out
mov
inc
pop
jbe
pop
mov
xor
mov
jl
cwde
dec
mov
jo
push
cmp
fnstcw
dec
mov
xchg
jne
and
ja
sti
mov
cli
mov
(bad)
cwde
int
jbe
inc
(bad)
push
fistp
data16
mov
mov
dec
repnz
jb
dec
pop
lock
stos
jecxz
fild
inc
jle
sub
mov
int3
xchg
mov
fmulp
call
(bad)
xchg
div
jp
addr16
dec
mov
(bad)
mov
cmp
outs
(bad)
sbb
movs
mov
inc
mov
fist
jmp
sub
jg
inc
xchg
mov
mov
ja
fsubr
inc
inc
popf
shr
adc
movs
ret
xchg
mov
imul
jbe
jg
gs
mov
inc
dec
add
push
jle
inc
ja
mov
fistp
cmc
mov
sahf
jo
jne
je
xchg
sbb
and
mov
ja
stos
dec
in
int
out
jne
(bad)
or
add
adc
outs
add
push
jnp
jp
mov
scas
ss
cwde
mov
ins
movs
cmp
icebp
ret
xor
xchg
jo
mov
daa
pop
jnp
fwait
pushf
jmp
jno
shl
mov
adc
jl
mov
dec
mov
jp
(bad)
cli
push
cmp
movs
xor
fiadd
gs
fldcw
xchg
ja
adc
mov
jge
je
cs
mov
rcr
lds
je
out
or
sti
dec
aaa
sbb
mov
cwde
cmp
ss
jecxz
push
outs
and
jmp
dec
mov
mov
lock
mov
jne
dec
inc
ja
imul
icebp
ss
jecxz
cmc
dec
retf
fdiv
je
ret
jbe
imul
cs
out
outs
cmp
aad
fdiv
into
add
jmp
mov
into
mov
loopne
dec
mov
jno
push
sub
je
(bad)
push
xchg
cmps
add
hlt
jae
push
add
js
cmp
pop
rcr
cs
add
fs
pop
in
push
shl
adc
les
adc
ja
mov
push
mov
imul
fcom
test
int
mov
mov
addr16
and
push
test
test
lock
mov
sub
or
and
or
les
mov
jne
call
popf
lock
test
test
jns
jne
ja
lahf
jbe
inc
mov
sub
mov
inc
lock
sub
fiadd
cmp
je
or
ret
ja
push
lods
outs
mov
inc
mov
mov
(bad)
pusha
sahf
pop
outs
out
or
sub
sub
cmp
jns
mov
mov
mov
push
ja
in
int
jno
je
jne
xor
test
je
or
cli
movs
sub
mov
inc
sbb
lock
loopne
pop
mov
cli
pop
shl
dec
jns
daa
cmp
not
sub
xchg
jp
je
lock
jmp
adc
(bad)
pop
loopne
fmul
es
ds
adc
daa
sahf
cwde
mov
outs
rcl
ret
icebp
jl
add
pop
pop
mov
lahf
cmp
in
iret
xor
push
rol
mov
mov
in
mov
sahf
je
xor
add
jnp
fist
loop
scas
fcomp
dec
xchg
mov
test
dec
mov
cld
or
and
push
pop
scas
ror
mov
out
cmps
imul
test
fld
push
or
int
jg
fwait
inc
outs
sub
cmc
push
imul
aas
or
clc
stos
mov
fwait
shl
or
mov
(bad)
push
leave
dec
mov
xchg
cmp
jmp
mov
jno
add
outs
out
jns
loope
mov
jbe
jo
xor
xchg
lock
and
or
daa
mov
sub
sub
pushf
adc
sbb
pop
lahf
shr
mov
and
sbb
ds
jl
mov
sub
sbb
mov
scas
adc
fimul
je
mul
or
add
sbb
scas
and
dec
mov
push
sahf
and
out
in
aad
in
aas
ror
clc
mov
mov
and
mov
pop
dec
popf
or
jmp
mov
mov
lods
inc
and
fild
add
sar
mov
mov
jno
mov
shl
jecxz
mov
mov
cmc
sbb
add
fcomp
lds
mov
cmp
and
jno
test
movs
(bad)
ss
mov
not
jae
adc
je
fwait
add
and
retf
dec
test
mov
cmp
sbb
pmaddwd
jne
mov
inc
ficomp
lods
xchg
inc
adc
add
mov
dec
push
nop
xchg
and
xchg
mov
or
call
sar
jo
push
and
push
(bad)
mov
fcomp
ja
mov
mov
aaa
js
sbb
push
mov
loopne
enter
xor
pop
jle
dec
mov
cmp
inc
je
dec
pop
jp
push
nop
mov
ret
add
enter
jbe
int
outs
cs
retf
outs
imul
mov
jno
dec
mov
ror
xlat
lods
push
mov
lock
call
div
bound
mov
je
je
ss
out
mov
outs
outs
jbe
(bad)
sbb
xor
adc
jne
mov
cwde
mov
fwait
ins
jne
xchg
les
mov
inc
sub
xchg
data16
jle
call
or
or
in
gs
or
ja
cs
sub
sbb
jbe
cwde
stc
ret
or
mov
jno
cmc
inc
icebp
add
fisttp
or
fwait
int
and
jbe
test
imul
dec
test
or
ror
inc
neg
aam
dec
lock
push
mov
sub
cmp
mov
stos
pmaddwd
pop
bound
adc
leave
xor
cmp
loope
xchg
aam
xor
scas
fwait
(bad)
call
mov
inc
mov
jbe
cmps
fisttp
ret
ja
test
or
popf
cdq
xlat
sub
jne
inc
jo
and
mov
pushf
jle
call
or
je
ss
jbe
xchg
div
xchg
test
mov
outs
enter
cmc
push
add
call
fiadd
sbb
imul
scas
jmp
jno
aas
push
mul
jmp
loopne
cmp
(bad)
add
fist
cmps
sbb
xlat
push
push
jnp
adc
and
out
xor
jle
cmp
add
hlt
je
push
data16
xchg
jle
mov
mov
(bad)
inc
mov
jbe
(bad)
iret
push
arpl
mov
outs
xor
xchg
sub
cld
repz
mov
add
add
daa
in
dec
aam
inc
jle
cmps
imul
cld
rol
call
push
call
push
dec
xchg
sahf
pop
inc
sub
cmps
loop
jne
rep
mov
popf
stc
ret
adc
jge
int3
pop
or
xor
push
sub
and
(bad)
mov
popa
and
ins
test
or
mov
xor
retf
xchg
nop
mov
cmps
sbb
pop
pop
push
fist
jl
or
fadd
sub
lods
in
je
fcmovne
push
pop
cmp
pop
jmp
and
mov
sub
mov
dec
mov
cmp
shr
cld
sar
int3
fwait
push
lock
push
adc
rol
mov
cmc
imul
cwde
jl
stc
mov
bound
jp
xor
popa
push
dec
mov
into
dec
mov
push
in
imul
je
adc
loopne
in
xchg
adc
mov
mov
es
je
sbb
call
scas
ds
xchg
xor
(bad)
cmps
xchg
push
es
loop
and
add
test
in
sub
pop
js
sub
add
das
hlt
ret
mov
scas
add
fstp
repnz
dec
mov
mov
scas
jae
sub
jbe
push
xchg
call
stos
rcr
cmp
mov
sti
sbb
mov
or
jne
test
scas
lahf
outs
cmc
jp
repz
xchg
in
adc
int
daa
add
movs
or
push
lock
or
dec
aaa
icebp
mov
pop
int
sbb
gs
dec
loop
mov
jae
xchg
das
jmp
dec
lea
mov
jo
icebp
fsubrp
xor
and
dec
inc
out
mov
rcl
xchg
dec
cs
mov
or
jl
cmp
lods
stc
xor
cmp
mov
mov
sbb
and
xchg
js
mov
retf
jmp
xor
dec
push
mov
inc
cwde
shl
jbe
dec
aaa
mov
sbb
push
test
enter
inc
push
adc
mov
stos
push
mov
aas
and
add
xchg
ror
cmp
mov
ja
mov
lock
std
imul
jle
ds
int
and
icebp
loop
add
sbb
xor
imul
jbe
xchg
sub
retf
lods
add
enter
mov
std
inc
lock
sub
aad
fbld
xor
je
ret
inc
jbe
xchg
xchg
jne
(bad)
(bad)
jae
sub
or
retf
dec
xchg
imul
adc
loopne
push
je
repz
lahf
lahf
fdivp
dec
xchg
jmp
xchg
sub
std
mov
out
out
push
pop
outs
in
jne
stc
mov
icebp
js
les
cmp
jl
fist
mov
fistp
jbe
scas
(bad)
jnp
sub
out
icebp
jb
add
jb
mov
push
dec
call
sub
jbe
dec
stc
sbb
es
mov
in
cmp
mov
mov
ret
jbe
pop
fsub
(bad)
xchg
mov
aad
inc
mov
xchg
xlat
add
jbe
pop
test
push
mov
dec
add
jg
and
ret
ins
or
xor
mov
add
jle
adc
mov
xchg
add
retf
inc
add
mov
fild
xor
push
sbb
add
daa
clc
mov
inc
mov
ja
movs
scas
retf
fidivr
fld
mov
mov
retf
mov
out
mov
imul
std
mov
mov
ret
or
or
bound
(bad)
call
mov
mov
popa
fs
jne
movs
mov
push
int
ja
loop
rcr
retf
cmps
xchg
pop
out
pop
sub
xchg
outs
aad
jns
pop
inc
mov
adc
jne
out
jp
test
cmp
clc
or
out
stos
xchg
ds
out
inc
mov
mov
mov
(bad)
jno
push
xor
(bad)
mov
adc
les
ror
add
mul
jne
or
imul
cld
push
jae
mov
push
mov
push
sub
cld
push
mov
jae
movs
shl
out
mov
and
bound
int3
icebp
out
xchg
jno
jns
add
rcl
aam
pop
mov
int
pop
jo
cmp
and
mov
(bad)
lods
pop
mov
mov
pop
shl
popf
int3
mov
jb
mov
add
sahf
inc
mul
loopne
pop
adc
stos
retf
push
cs
imul
push
loop
not
fwait
(bad)
jmp
dec
jle
dec
ret
lods
fbstp
(bad)
es
pop
push
mov
jp
pop
lock
push
outs
inc
xor
cmps
dec
sar
icebp
xor
xchg
pop
ret
imul
fist
fdiv
in
add
out
in
pop
stos
jne
inc
(bad)
stos
ins
mov
pop
push
jbe
xor
push
je
fs
inc
jbe
and
inc
push
sbb
call
shl
fld
sahf
mov
mov
push
inc
test
push
cwde
icebp
xchg
imul
mov
sti
cli
fucom
lock
adc
ins
cdq
scas
jbe
push
sti
dec
aad
icebp
mov
movs
pop
adc
mov
(bad)
retf
fisttp
(bad)
jo
mov
pushf
sti
stos
pop
movs
mov
jne
stos
mov
loop
xchg
mov
outs
xchg
inc
out
xchg
inc
(bad)
and
fwait
mov
push
mov
xor
xor
jmp
scas
test
stc
(bad)
fbld
add
(bad)
lock
cmp
dec
fstp
les
jb
cmp
loop
dec
xchg
xchg
lock
(bad)
into
cmp
movs
pop
hlt
fsubr
iret
mov
in
cmp
pusha
adc
pop
add
lods
je
xor
inc
scas
inc
pop
repnz
dec
popa
enter
jae
pop
sub
cs
repz
mov
mov
ficomp
(bad)
(bad)
cld
mov
sub
movs
enter
jbe
dec
fcmovnbe
or
jg
fwait
je
sub
addr16
jg
adc
int3
mov
or
mov
and
adc
pop
mov
dec
cmp
sbb
mov
push
loopne
add
scas
mov
push
scas
stc
cld
mov
jb
mov
inc
aad
(bad)
pop
adc
das
test
jnp
icebp
sahf
aad
pop
mov
mul
jo
cli
pop
adc
mov
mov
mov
add
push
loopne
mov
ins
jl
vpshufhw
retf
xchg
test
dec
gs
sub
pushf
mov
cmps
inc
sahf
jne
xchg
jbe
nop
jle
test
mov
push
jmp
ja
ret
sbb
fbld
mov
mul
je
jo
push
inc
lock
mov
mov
(bad)
jp
mov
and
jo
dec
or
xchg
pusha
and
cmp
je
mov
inc
dec
mov
xchg
jne
je
push
cmp
ret
pop
pop
movs
cmp
and
es
sbb
fdiv
sub
mov
cli
cmps
ret
add
jbe
sub
xchg
sub
pop
push
pop
jne
lods
idiv
lock
int
aas
mov
mov
push
data16
test
cmp
cld
ja
int3
test
sbb
movs
stos
sbb
xor
repnz
int
sub
add
mov
jmp
push
rol
ja
pop
ins
ret
dec
and
pop
mov
shl
ja
sbb
mov
xchg
cmp
push
jno
jno
jmp
ret
jbe
pop
scas
fimul
pop
push
pop
icebp
sahf
pop
sub
mov
(bad)
lds
xchg
je
push
and
xchg
adc
jo
in
out
ins
retf
ror
cdq
sub
mov
push
aas
jo
and
adc
popa
mov
jbe
or
ficom
mov
je
stos
mov
jbe
enter
push
adc
cmp
mov
xor
sahf
adc
jbe
add
jns
adc
mov
test
pop
outs
(bad)
test
je
mov
fcom
mov
icebp
mov
pushf
cmp
je
adc
pop
ja
sub
or
cli
mov
adc
inc
pop
lock
sub
lahf
mov
dec
xor
ficomp
xchg
jbe
xor
mov
cmp
scas
out
sar
icebp
jl
sub
inc
mov
sbb
push
adc
retf
call
clc
iret
xchg
pop
imul
mov
mov
jbe
dec
out
dec
adc
loopne
mov
adc
jg
push
dec
movs
or
lods
inc
mov
add
or
xchg
icebp
test
xor
(bad)
(bad)
aam
xchg
je
and
ret
ja
retf
sub
mov
and
mov
mov
and
mov
test
ins
sub
add
mov
mov
mov
aad
adc
mov
pop
add
cmp
bound
or
add
mov
lock
or
(bad)
aas
(bad)
xor
cmps
xchg
(bad)
cmc
push
mov
je
ss
ja
ret
mov
mov
call
sub
pop
sbb
test
push
mov
sub
mov
(bad)
mov
fist
fiadd
imul
cs
rcr
jnp
cmp
ret
push
(bad)
push
xchg
icebp
cmp
in
mov
arpl
ja
cmc
in
std
fsubr
bound
mov
sbb
in
mov
(bad)
rcl
aaa
mov
xchg
xor
dec
sbb
ja
pop
inc
adc
fs
mov
xchg
jo
and
and
xlat
fmul
stc
stc
cmps
adc
dec
jnp
mov
rep
mov
or
sbb
in
pop
sub
inc
xlat
and
xor
retf
out
adc
fidivr
and
aas
das
cld
cmp
es
dec
jne
or
jbe
(bad)
out
fadd
loope
dec
mov
cwde
xchg
adc
mov
je
xor
inc
inc
or
inc
sbb
xchg
cld
js
sub
fcomp
retf
dec
jbe
mov
mov
sub
mov
leave
and
xrelease
pop
cwde
leave
adc
push
sti
pop
inc
pop
lds
unpcklps
fwait
icebp
outs
xchg
xor
adc
repz
dec
mov
add
mov
push
ja
repnz
cwde
push
xchg
or
ja
sub
test
or
mov
xor
push
pop
dec
sbb
mov
mov
in
test
icebp
fisttp
scas
adc
hlt
dec
test
adc
cmp
cmp
fcmovne
hlt
ret
xchg
or
push
jl
test
rol
je
xchg
xchg
jns
add
push
test
and
xchg
add
mov
jne
es
pop
fisubr
cmp
ret
imul
mov
fwait
jbe
je
lahf
cmp
test
mov
call
ret
fcom
enter
scas
test
cli
cwde
sbb
push
(bad)
loopne
mov
loop
mov
mov
and
lock
push
push
cmp
cmps
mov
adc
es
push
push
cdq
push
pop
dec
fwait
daa
mov
xchg
adc
js
leave
dec
inc
les
jne
add
fwait
jbe
add
push
jno
pop
xor
cmp
push
jae
je
pop
mov
jo
xor
or
mov
hlt
cmp
jb
adc
fistp
xor
call
sub
clc
bound
mov
pop
adc
mov
int3
out
mov
xor
das
je
loope
(bad)
into
movs
push
cmps
pop
ja
adc
jae
push
test
jbe
inc
cmps
(bad)
mov
cmp
inc
jmp
xchg
pop
pop
sub
test
mov
xchg
lock
cld
push
mov
pop
sub
add
ja
std
int
shl
(bad)
mov
or
xchg
test
cmp
ins
mov
hlt
in
pop
lods
push
add
(bad)
xlat
mov
fbld
aam
mov
adc
ins
mov
xchg
fisttp
push
jecxz
out
sub
pop
cli
dec
std
cmp
jae
xchg
inc
std
rcr
push
clc
dec
pop
(bad)
(bad)
xlat
jnp
enter
push
mov
sub
or
mov
cmps
sub
sbb
enter
je
sbb
addr16
jp
sbb
dec
xchg
loope
imul
mov
pushf
(bad)
and
jo
ficomp
mov
cli
xor
call
in
jns
dec
das
push
stos
lock
jne
bound
inc
mov
loop
cmp
and
aas
ja
loopne
enter
popf
mov
mov
xchg
adc
pop
pop
aam
call
stos
push
in
scas
xchg
push
movs
mov
cmp
fiadd
pop
daa
je
push
fs
jb
(bad)
ins
rcl
push
lea
jne
mov
mov
sbb
frstpm(287
shr
into
xchg
push
sbb
stos
pop
push
bound
hlt
adc
or
loope
(bad)
icebp
clc
rcl
mov
fstp
push
jbe
dec
xor
js
scas
mov
clc
cmp
dec
jle
leave
call
hlt
mov
mov
retf
dec
ret
jle
push
lock
int
cmps
ja
inc
ins
popf
push
aad
ja
stos
std
or
aaa
cmp
jle
mov
add
outs
jno
xchg
lock
mov
cli
mov
xchg
xchg
push
imul
outs
push
sub
jecxz
retf
hlt
sbb
xchg
sub
inc
jbe
in
cmps
lods
stos
mov
in
outs
(bad)
and
enter
push
imul
shr
sub
inc
lock
adc
ret
mov
pop
mov
jbe
lea
jns
inc
mov
dec
mov
xchg
cmp
xor
.byte
cmp
