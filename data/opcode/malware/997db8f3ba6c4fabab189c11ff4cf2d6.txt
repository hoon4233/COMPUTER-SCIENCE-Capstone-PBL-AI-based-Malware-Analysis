pop
xchg
rep
repz
out
out
pop
pop
inc
(bad)
sub
add
std
adc
sub
add
sub
xchg
sub
xchg
push
jecxz
jbe
ja
cmp
cmps
arpl
test
xlat
xchg
push
out
push
jecxz
shl
xlat
xchg
push
call
xor
xchg
push
retf
xchg
push
jecxz
shl
xlat
xchg
nop
addr16
out
out
(bad)
sub
add
adc
sub
add
std
adc
sub
jne
inc
xchg
push
iret
xchg
push
iret
jne
inc
xchg
push
iret
xchg
push
iret
(bad)
sub
push
out
out
out
(bad)
sub
sub
out
out
xchg
push
jecxz
shl
xlat
xchg
push
iret
xchg
push
jecxz
shl
xlat
xchg
push
iret
(bad)
sub
pop
in
out
out
(bad)
sub
cmp
out
out
(bad)
sub
out
out
out
nop
mov
nop
mov
not
push
ret
js
out
push
(bad)
js
out
push
fstp
(bad)
sub
adc
out
out
xchg
sub
cmp
xor
repz
sub
push
xchg
out
cmp
ret
dec
mov
out
out
out
xchg
sub
push
xchg
das
adc
nop
push
xchg
xchg
xchg
(bad)
in
out
out
xchg
sub
nop
nop
jnp
out
out
xchg
xchg
mov
out
out
xchg
sub
out
js
nop
push
imul
aam
out
out
xchg
push
jecxz
shl
shl
xlat
push
imul
pop
xchg
outs
fwait
in
out
out
xchg
pop
xchg
sub
xchg
outs
fwait
in
out
out
xchg
out
jmp
xchg
fucomi
out
out
nop
cwde
jg
out
out
pop
xchg
pop
pop
xchg
popf
xchg
in
out
out
xchg
sbb
out
out
jne
out
mov
pop
out
pop
add
js
xchg
pusha
pop
xchg
sub
xchg
lahf
cmps
in
out
out
(bad)
sub
(bad)
sub
dec
(bad)
sub
mov
xor
push
pusha
xor
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
idiv
ss
out
pop
xchg
sub
xchg
outs
mov
out
out
out
aas
imul
scas
js
xchg
sub
xchg
outs
fucomi
out
out
xchg
pusha
pop
push
jmp
sub
xchg
sub
xchg
lahf
cmps
in
out
out
imul
ss
out
pop
xchg
sub
out
pop
push
sub
xchg
outs
fucomi
out
out
xchg
pusha
pop
push
pop
xchg
sub
xchg
sub
xchg
lahf
cmps
in
out
out
neg
or
out
pop
xchg
sub
out
pop
xchg
sub
xchg
push
(bad)
cmp
push
imul
xchg
sub
cmp
jmp
lods
push
xchg
inc
in
out
out
(bad)
sub
out
out
out
out
out
js
xchg
pusha
pop
xchg
sub
xchg
lahf
mov
xchg
or
out
pop
xchg
sub
xchg
outs
mov
out
out
out
aas
test
push
pop
xchg
xchg
sub
out
xchg
in
xchg
sub
xchg
cmps
fucomi
out
out
xchg
js
cmp
lahf
or
out
pop
xchg
sub
xchg
outs
sub
out
out
aas
out
inc
pop
xchg
sub
xchg
sub
xchg
cmps
fucomi
out
out
xchg
js
cmp
ja
out
out
pop
xchg
sub
xchg
outs
sub
out
out
aas
out
inc
pop
push
fucomi
xchg
sub
push
push
push
cmp
out
pop
iret
push
sub
repnz
xchg
sub
xchg
cmps
fucomi
out
out
xchg
js
cmp
xor
out
out
pop
xchg
sub
xchg
outs
xchg
out
out
out
aas
out
inc
pop
xchg
sub
out
sub
push
fistp
jge
xchg
sub
xchg
js
cmp
addr16
nop
cwde
pop
out
out
out
idiv
or
out
pop
xchg
sub
xchg
js
cmp
aas
out
out
out
test
out
pop
rcl
xor
and
js
(bad)
sub
in
out
out
out
xchg
sub
xchg
push
repz
or
xchg
sub
xchg
sub
push
sub
xchg
push
ret
cmp
or
xchg
sub
xchg
sub
cmp
(bad)
xchg
sub
and
push
imul
xchg
sub
xchg
push
repz
js
out
js
nop
sub
pop
test
sub
repnz
sti
cmp
xor
cmp
xchg
sub
xchg
push
out
stos
xor
xchg
jmp
push
(bad)
cmp
push
imul
out
xchg
push
jecxz
shl
shl
or
lods
xchg
sub
jne
xchg
lods
cmp
dec
out
xchg
sub
aaa
pop
xchg
sub
cmp
or
xchg
sub
and
jge
xchg
sub
xchg
sub
xchg
push
out
sbb
out
sub
xchg
push
xchg
xchg
outs
fucomi
out
out
cmp
xor
pop
xchg
push
retf
cmp
xor
pop
xchg
push
jecxz
rol
rcr
sbb
xor
xchg
sub
and
push
imul
out
out
inc
pop
out
js
xchg
inc
out
jno
out
out
xchg
sub
xchg
js
xchg
outs
fucomi
out
out
movs
jbe
ja
cmp
movs
arpl
test
cld
pop
xchg
js
cmp
xor
pop
out
js
out
pop
pop
xchg
sub
xchg
sub
xchg
pusha
call
push
dec
repz
xchg
push
push
push
repz
xor
inc
and
popw
xchg
sub
xor
repz
xor
js
xchg
aad
push
repz
lods
lods
imul
xchg
les
jmp
int3
jmp
out
adc
out
sub
repnz
cmp
xchg
js
xor
jne
xor
inc
and
pushw
xchg
sub
xor
adc
aaa
adc
sub
ret
xchg
sub
push
das
and
jge
mov
mov
xchg
sub
cmp
push
sub
xchg
jmp
xchg
pop
out
cdq
xor
adc
and
jge
xchg
sub
xchg
sub
xchg
sub
xchg
push
jecxz
stos
xor
dec
push
xor
sub
push
xor
xchg
pop
ret
xchg
in
loop
xchg
and
dec
xchg
push
mov
dec
xchg
outs
cld
cdq
outs
hlt
fs
mov
pop
xchg
push
sti
cmp
nop
xchg
and
or
cmp
ins
in
(bad)
std
adc
repnz
xchg
sub
cmp
jecxz
shl
shl
xlat
push
imul
out
xchg
sub
xchg
das
pop
(bad)
sub
add
std
adc
sub
xchg
xor
adc
sub
add
std
adc
sub
idiv
std
adc
xchg
push
idiv
shl
rcr
rcl
out
cmp
xor
pop
xchg
push
retf
cmp
xor
pop
xchg
push
sti
cmp
xor
pop
out
pop
sbb
xchg
push
not
out
cmp
xor
pop
xchg
push
sar
shl
rcr
sti
out
js
cmp
xor
pop
out
pop
sbb
xor
xchg
sub
and
push
imul
sti
cmp
xor
and
push
imul
out
out
(bad)
sub
pop
(bad)
std
adc
sub
xchg
push
retf
outs
cld
jbe
hlt
arpl
outs
cld
jbe
hlt
arpl
xchg
outs
cld
jbe
hlt
arpl
outs
out
push
arpl
out
out
out
nop
nop
arpl
out
out
pop
out
js
pop
nop
sub
xchg
sub
out
jg
xchg
sub
push
pop
pop
inc
imul
in
out
out
xchg
sub
xchg
sub
xchg
push
fist
out
cmp
xor
pop
xchg
push
sti
cmp
xor
pop
inc
out
pop
pop
xchg
sub
call
cmp
adc
fucomi
out
out
xchg
push
fistp
cmp
xor
pop
xchg
push
sti
cmp
xor
pop
out
js
out
pop
pop
xchg
sub
xchg
sub
xchg
sub
xchg
sub
repnz
shl
rcr
sti
cmp
xor
pop
out
js
out
pop
pop
out
js
xchg
sub
out
mov
nop
push
pop
xchg
sub
xchg
outs
stos
in
out
out
out
aas
xchg
sub
xchg
outs
scas
in
out
out
out
aas
out
js
out
js
not
out
out
xchg
sub
xchg
sub
xchg
push
out
stos
xor
xchg
sub
xchg
push
fist
out
cmp
xor
pop
xchg
push
jecxz
shl
rcr
out
pop
pop
dec
inc
inc
aam
jmp
pop
xchg
repz
pop
nop
sub
xchg
sub
pop
xchg
js
cmps
cwde
aad
adc
inc
pop
test
sub
adc
jl
stos
pop
xchg
repz
pop
nop
sub
xchg
sub
xchg
pop
jecxz
mov
in
xchg
pop
out
fistp
xchg
sub
test
das
push
cmp
test
lods
jmp
pop
xchg
repz
pop
nop
sub
xchg
sub
xchg
pop
jecxz
cwde
xor
xchg
pop
out
fistp
test
sub
test
das
adc
aam
jmp
pop
xchg
repz
pop
nop
sub
xchg
sub
pop
xchg
js
cmps
dec
dec
push
adc
inc
adc
dec
(bad)
sub
push
popa
test
pop
xchg
repz
pop
nop
sub
xchg
sub
xchg
pop
jecxz
dec
dec
rcl
xchg
in
xchg
pop
out
fistp
xchg
sub
test
das
in
jnp
sub
dec
aam
jmp
pop
xchg
fdivp
aam
out
out
xchg
(bad)
xchg
shr
out
out
out
pop
xchg
fisubr
pop
out
out
out
pop
test
pop
out
out
out
test
fxtract
shl
out
inc
pop
pop
pop
xchg
repz
sub
in
sub
pop
jecxz
js
in
js
pop
xchg
js
mov
pop
xchg
push
loope
xlat
out
fcmove
out
pop
xchg
shr
out
fcmove
out
pop
in
aad
loope
repz
scas
das
pop
pop
pop
pop
pop
inc
xor
pop
push
out
cmps
out
jmp
cmp
out
out
cmps
out
jmp
jmp
hlt
cli
mov
call
out
out
int
nop
cmp
xchg
sub
xor
or
xchg
sub
mov
out
out
push
push
xchg
push
sti
or
(bad)
outs
hlt
pop
stc
(bad)
(bad)
inc
jmp
not
and
inc
nop
xchg
popa
jae
out
out
pop
pop
mov
pop
mov
pusha
jecxz
pusha
ret
push
mov
fdiv
xchg
ror
out
rcl
mov
xlat
lods
icebp
pop
push
in
and
mov
js
and
xchg
jo
neg
push
in
push
in
and
push
call
push
sub
mov
jmp
push
loope
xor
pop
repnz
mov
pop
in
out
out
js
inc
dec
inc
inc
inc
inc
out
cmp
pop
pop
movs
dec
jmp
bnd
shl
xlat
idiv
in
out
out
js
mov
sbb
out
out
js
inc
and
mov
adc
js
xor
and
push
ins
fsubr
out
out
mov
pusha
jecxz
hlt
xchg
in
out
out
mov
out
out
xchg
js
jnp
mov
out
out
xchg
js
jnp
xchg
js
xchg
push
fist
xchg
push
fist
(bad)
xchg
js
inc
dec
inc
movs
ja
out
out
mov
inc
and
xchg
lods
jge
jmp
pop
xchg
jo
mul
sbb
shr
pop
inc
nop
arpl
repnz
in
test
xchg
pusha
shr
jne
inc
nop
mov
out
repnz
scas
jmp
out
out
jmp
out
in
out
out
xchg
push
retf
xor
ja
out
out
xchg
xlat
xor
jge
in
push
retf
push
stos
jmp
push
out
out
out
push
stos
push
xchg
push
retf
push
jmp
jmp
lods
int3
jmp
das
inc
nop
mov
out
xchg
(bad)
div
in
out
out
xchg
xlat
xor
jge
xchg
push
not
jge
xchg
cld
push
ret
in
fdiv
push
ret
in
push
push
adc
cmps
mov
lods
xchg
rcr
dec
ret
jmp
xlat
xchg
sub
repnz
jmp
mov
out
out
fdiv
fmul
and
iret
jge
out
sub
xor
iret
push
js
cmps
sub
out
out
jmp
dec
ret
jmp
jmp
xor
push
xchg
(bad)
xchg
jo
idiv
in
jnp
adc
ret
fdiv
push
js
repnz
out
sub
xchg
push
retf
push
in
xchg
pusha
jecxz
(bad)
xor
or
ret
push
xchg
out
js
xchg
pop
aaa
mov
and
jp
push
js
xchg
pusha
jecxz
mov
push
ins
inc
loopne
out
div
scas
nop
jae
and
out
js
xchg
cmp
pusha
jecxz
pusha
or
lods
add
inc
inc
xor
loop
out
out
in
jge
stos
lods
retf
xchg
js
and
jp
xchg
sub
lods
iret
pop
mov
sub
xchg
js
inc
stos
xchg
push
stos
push
mov
jmp
push
mov
xchg
jo
nop
jae
out
xor
ins
loop
out
out
in
jp
xchg
push
or
lods
dec
or
pop
and
inc
jp
xchg
sbb
sub
daa
lods
retf
pop
or
xchg
rcr
cmps
pop
out
lods
hlt
adc
mov
(bad)
push
xchg
les
aad
hlt
call
jmp
lods
cmc
call
xor
dec
xor
out
jmp
or
stos
pop
xchg
repz
xchg
xchg
fwait
in
out
out
pop
xchg
js
xchg
cmp
out
out
xchg
adc
mov
xchg
adc
out
xchg
pop
xchg
push
and
pop
(bad)
sub
add
std
adc
push
sbb
jbe
ja
xor
test
push
ins
xlat
in
out
out
(bad)
out
add
lods
jmp
pop
xchg
repz
xor
iret
out
(bad)
sub
add
std
adc
sub
ret
adc
sub
idiv
std
adc
sub
add
std
adc
sub
add
adc
fwait
in
out
out
xchg
sub
xchg
sub
pop
pop
xchg
mov
xchg
sub
xchg
outs
xchg
in
out
out
xchg
sub
xchg
out
inc
xchg
js
push
js
xchg
pop
maskmovq
imul
out
out
out
xchg
jmp
and
out
adc
jbe
ja
cmp
addr16
and
out
xchg
sub
xchg
out
xchg
sub
xchg
sub
cmp
sub
cmp
jp
xchg
sub
cmp
jne
pop
xchg
sub
call
pop
xchg
sub
xchg
outs
xchg
out
out
out
aas
xchg
sub
out
fist
xchg
pop
out
adc
in
nop
push
iret
pop
xchg
push
ret
cmp
xchg
sub
xor
pop
out
jp
pop
xchg
sub
cmp
pop
xchg
sub
call
pop
xchg
sub
xchg
outs
xchg
out
out
out
aas
xchg
sub
out
fild
das
push
dec
adc
push
pop
out
jns
xchg
sub
xchg
push
push
xlat
xchg
sbb
out
sub
xchg
pop
xchg
pop
adc
and
jge
xchg
pop
add
xchg
ins
(bad)
out
out
out
xchg
lds
inc
(bad)
jmp
aaa
jmp
not
sub
out
out
out
out
repnz
out
cmc
xchg
pop
retf
jnp
nop
pop
pop
xchg
pop
jecxz
pop
retf
xchg
pop
retf
xchg
pop
jecxz
cmps
sbb
int
push
out
out
xchg
pop
repz
pop
(bad)
lods
cmc
adc
(bad)
cmp
ins
in
(bad)
std
adc
xchg
pop
jmp
and
push
adc
adc
repz
adc
inc
imul
jecxz
out
push
retf
js
xchg
pop
sti
in
pop
out
pop
out
pushf
mov
out
out
jp
jmp
pop
sti
push
out
out
out
nop
sub
pop
xchg
sub
cmp
jl
xchg
sub
out
js
cmp
pop
xchg
sub
call
pop
xchg
sub
xchg
outs
xchg
out
out
out
aas
xchg
sub
out
fist
outs
in
out
out
jmp
pop
xchg
sub
xchg
outs
imul
out
xchg
out
xchg
out
push
pmaxsw
test
out
js
out
js
out
ficom
seto
xchg
sub
xchg
sub
xchg
sub
xchg
lahf
lahf
in
out
out
xchg
sub
xchg
outs
xchg
in
out
out
xchg
aas
and
jge
xchg
cmp
and
daa
jmp
aas
xchg
in
xchg
sbb
xchg
sbb
sub
repnz
js
neg
(bad)
out
out
xchg
sub
xchg
outs
xlat
in
out
out
xchg
out
cmp
vmread
xchg
push
setb
cmp
outs
fucomi
out
out
out
pop
aaa
repnz
out
xchg
pop
nop
sub
in
pop
cmp
lods
add
pop
xchg
rep
repz
out
out
out
pop
pop
inc
xchg
stos
pushf
(bad)
sub
add
std
adc
sub
add
sub
xchg
sub
mov
cmps
dec
loopne
out
dec
xchg
push
xchg
test
out
out
out
push
mov
out
out
out
nop
sub
dec
xchg
push
cmps
jbe
out
out
dec
xchg
push
nop
sub
dec
xchg
push
push
ror
push
nop
sub
dec
xchg
push
push
cmps
dec
xchg
push
nop
sub
xchg
push
xchg
test
out
out
out
push
adc
push
cmps
imul
cmps
push
xchg
push
cmps
cwde
(bad)
out
out
dec
xchg
push
cmps
fwait
mov
push
nop
sub
out
out
out
test
sub
push
test
sub
and
test
sub
addr16
sub
push
test
sub
and
test
sub
gs
sub
jp
sub
dec
test
sub
outs
movs
cdq
out
out
out
test
sub
(bad)
cmp
nop
sub
nop
arpl
repz
mov
(bad)
sub
jmp
nop
arpl
retf
push
mov
(bad)
sub
push
jge
cmp
nop
arpl
ret
push
mov
(bad)
sub
pop
jge
nop
sub
push
jecxz
mov
in
xchg
push
scas
and
js
(bad)
sub
(bad)
sub
xchg
sub
xchg
xchg
xchg
in
out
out
cmp
mov
out
out
xchg
push
add
out
xchg
in
xchg
push
add
out
xchg
in
cmps
addr16
out
dec
xchg
sub
xchg
sub
out
dec
xchg
sub
xchg
sub
out
dec
xchg
sub
xchg
sub
out
dec
xchg
sub
sub
(bad)
jne
dec
mov
sub
out
out
dec
cmp
scas
pop
in
out
out
dec
jmp
in
push
js
nop
sub
scas
jbe
ja
cmp
jne
mov
xor
call
pop
xchg
sub
xchg
outs
xchg
out
out
out
aas
xchg
sub
out
fist
xor
push
sbb
add
mov
mov
cwde
add
(bad)
hlt
sbb
dec
jecxz
jne
inc
dec
xchg
push
dec
xchg
push
dec
xchg
push
jne
inc
xchg
js
dec
xchg
push
jne
inc
dec
xchg
push
jne
inc
dec
xchg
push
jne
inc
dec
xchg
push
cmp
xchg
push
nop
pusha
mov
scas
nop
pop
xlat
(bad)
sub
dec
push
bound
sub
inc
push
jg
(bad)
sub
fs
xor
sub
push
jl
gs
(bad)
sub
xor
idiv
sbb
out
pop
xchg
sub
out
js
mov
cmp
pop
xchg
sub
push
sub
sub
xchg
outs
xchg
out
out
out
aas
xchg
sub
out
fist
pop
jne
nop
push
mov
nop
nop
push
out
out
out
pop
pop
pop
xchg
sub
cmp
pop
nop
push
pop
xchg
sub
xchg
outs
xchg
out
out
out
aas
xchg
sub
out
fild
push
nop
sub
pusha
mov
push
out
sub
ins
pusha
jecxz
in
out
out
push
ins
in
out
out
xchg
loope
shl
out
out
movs
dec
loopne
out
xchg
lods
dec
xchg
sub
out
xchg
fisttp
pop
mov
pop
sbb
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
mov
xchg
pop
cmps
dec
xchg
push
movs
xchg
ror
push
mov
fmul
cwde
arpl
out
out
xchg
fisttp
cwde
popa
out
out
out
push
out
xchg
pop
outs
dec
xchg
sub
scas
loope
xchg
sub
test
out
out
dec
xchg
sub
sub
dec
xchg
sub
dec
xchg
js
xchg
sub
push
cmps
nop
arpl
out
out
cmp
xor
push
xchg
sub
push
cmps
push
mov
(bad)
xor
sub
sub
xchg
sub
out
js
out
js
out
js
out
js
out
js
out
js
out
js
div
sub
xchg
sub
xchg
sub
xchg
cmps
lahf
in
out
out
xchg
sub
xchg
outs
xchg
in
out
out
xchg
aas
nop
push
jmp
sbb
fnstcw
xchg
push
xchg
and
pop
jmp
test
dec
inc
inc
aam
pop
out
pop
xchg
repz
add
call
out
push
out
push
imul
push
imul
out
out
push
out
out
out
xchg
imul
out
out
out
push
xchg
out
out
out
pop
push
imul
out
out
and
cmp
imul
out
out
xchg
mov
push
(bad)
out
xchg
aad
adc
lods
push
cmps
pop
adc
adc
aad
imul
sbb
push
mul
inc
push
sbb
dec
sti
out
or
jmp
cmps
inc
adc
loop
je
push
sbb
sub
adc
dec
out
or
jmp
cmps
inc
adc
loop
xor
jecxz
pusha
jecxz
cs
inc
retf
in
add
push
cmps
adc
cmps
inc
adc
sub
push
jecxz
jmp
push
cmps
adc
cmps
inc
adc
sti
push
pop
jmp
sti
jge
xchg
push
neg
cmps
pop
adc
cmps
addr16
sub
push
pop
jmp
call
ins
dec
out
out
out
dec
inc
cmp
scas
inc
aam
pop
xchg
repz
xchg
lahf
in
out
out
xchg
sub
push
pop
pop
cmp
pop
inc
and
push
imul
out
and
addr16
cmp
das
addr16
pop
or
pop
jmp
js
and
jmp
inc
out
inc
jecxz
fsub
inc
sbb
push
cmps
cmp
in
xchg
cli
nop
cmp
xor
pusha
pop
xchg
pusha
jmp
out
pop
xchg
inc
adc
and
jp
xchg
cmp
pop
xor
xchg
and
jnp
xchg
inc
out
xchg
inc
out
inc
jecxz
cmps
repnz
cmp
lods
pop
out
pop
xchg
repz
xor
xchg
pop
jecxz
sub
add
sub
xchg
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
xchg
inc
pop
pop
mov
(bad)
sub
cwde
call
jecxz
sbb
arpl
test
sar
test
xchg
sub
and
push
imul
out
xchg
inc
jecxz
push
adc
shl
and
push
imul
xchg
inc
jecxz
xchg
outs
out
out
out
cmp
xor
and
push
imul
out
jmp
lds
shl
xchg
inc
call
jnp
xchg
pop
call
sbb
shl
and
adc
call
sbb
shl
and
adc
in
out
out
xchg
sub
xchg
inc
jecxz
sub
jb
sbb
lods
xchg
push
pop
jmp
retf
xchg
push
jecxz
pop
jecxz
shl
fidivr
fst
(bad)
xor
and
jnp
jmp
push
jecxz
shr
push
adc
in
imul
xchg
xchg
sub
(bad)
sub
leave
(bad)
std
adc
adc
out
out
pop
xchg
push
jecxz
shl
ficom
sbb
js
xchg
outs
fucomi
out
out
out
pop
adc
popf
pop
jae
(bad)
sub
in
repnz
adc
xor
and
sti
js
xchg
sub
xchg
push
iret
cmp
jmp
pop
xchg
outs
fucomi
out
out
xor
push
mov
or
xor
and
sti
js
xchg
sub
cmp
push
imul
jecxz
test
sti
js
xchg
sub
xchg
push
idiv
test
or
xchg
sub
hlt
(bad)
out
out
out
(bad)
sub
call
cwde
push
push
out
inc
jecxz
shl
hlt
lods
out
out
out
xchg
sub
cmp
repz
sub
cmp
adc
ret
cmp
xor
and
jnp
xchg
jmp
xchg
sub
xchg
sub
xchg
jmp
xchg
sub
xchg
sub
xchg
push
repz
jnp
xchg
sub
xchg
push
repz
push
and
xchg
sub
xchg
outs
fucomi
out
out
push
cmps
aam
out
js
out
pop
pop
repnz
sub
jmp
xchg
fucomi
out
out
push
in
pop
out
js
out
pop
pop
xchg
sub
xchg
sub
xchg
push
adc
test
xchg
sub
js
xchg
push
idiv
test
or
xchg
sub
repnz
xchg
push
adc
test
lods
xchg
push
retf
xchg
jmp
xchg
sub
cmp
or
xchg
sub
xchg
push
retf
cmp
test
push
xchg
pop
call
fld
lds
test
out
out
xchg
push
jecxz
shl
fisub
lods
xchg
sub
js
xchg
sub
repnz
(bad)
dec
inc
inc
aam
adc
pop
xchg
repz
aaa
(bad)
sub
add
std
adc
sub
add
sub
xchg
sub
pop
xchg
scas
xchg
sub
xchg
js
movs
jbe
ja
cmp
xor
or
out
out
xchg
sub
xchg
js
jmp
(bad)
sub
leave
(bad)
std
adc
jecxz
pusha
adc
cld
cmp
xchg
xor
push
imul
out
out
xchg
js
xchg
sub
jmp
js
xchg
pusha
adc
cmp
xor
xchg
js
and
push
imul
out
out
xchg
js
cmp
xor
xchg
js
pop
(bad)
sub
pop
(bad)
std
adc
test
out
out
xchg
js
cmp
nop
(bad)
out
std
fdivr
and
jp
xor
nop
inc
jg
xchg
pusha
neg
cmps
cmp
push
out
out
xchg
js
xchg
pusha
repz
aas
nop
mov
addr16
xchg
js
push
cmps
cmp
xchg
js
xchg
pusha
pop
cmp
nop
mov
xchg
xchg
js
xchg
js
xchg
pusha
repz
xor
and
js
xchg
js
xchg
pusha
repz
xor
and
js
xchg
js
xchg
pusha
ret
in
and
in
out
push
idiv
xchg
inc
sti
in
inc
out
js
xchg
pusha
out
inc
adc
cld
and
and
jmp
inc
jmp
cld
xor
xchg
inc
sti
and
push
push
inc
xchg
sub
dec
repnz
lods
inc
aam
pop
out
pop
xchg
repz
pop
(bad)
sub
add
std
adc
sub
add
sub
pop
pop
mov
cmp
xor
not
xor
xchg
pusha
setb
call
xchg
sub
ins
sub
add
std
adc
out
lods
xchg
sub
ins
sub
ret
adc
sti
cmp
sti
idiv
std
adc
repz
repz
adc
dec
xchg
sub
xchg
sub
push
jmp
scas
push
imul
out
out
xchg
sub
push
jmp
movs
jbe
out
out
dec
cmp
dec
jmp
in
push
push
xchg
sub
xchg
push
pop
xchg
sub
jmp
das
pop
push
jmp
(bad)
lods
adc
xor
sub
xchg
xchg
lahf
in
out
out
xchg
pop
xchg
push
and
pop
xchg
sub
xchg
xchg
xchg
in
out
out
xchg
pop
xchg
push
retf
xchg
pop
mov
js
xchg
xchg
fucomi
out
out
nop
pop
neg
pop
out
fnstenv
ficomp
jl
out
js
out
pop
add
pop
xchg
push
pop
xor
jmp
adc
out
xchg
pop
setb
xchg
pop
xchg
sub
out
jg
out
js
pop
not
push
out
out
xchg
push
setb
jmp
push
in
pop
xchg
push
pop
xchg
push
jecxz
cmps
pop
jmp
xchg
sub
and
push
imul
jecxz
shl
rcl
push
cmps
pop
jmp
jmp
xchg
out
out
out
xchg
pop
pop
push
pop
xchg
pop
pop
repnz
nop
push
out
xchg
sub
xchg
in
push
fmul
lods
jmp
jmp
out
out
xchg
pop
jecxz
sub
xchg
push
pop
cmp
xor
and
jnp
pop
xchg
push
pop
jmp
sub
pop
pop
div
push
out
out
xchg
sub
xchg
push
ret
xchg
pop
iret
push
aaa
cmp
nop
xchg
adc
xchg
pop
adc
push
cmps
pop
jmp
xchg
sub
jmp
jns
xchg
push
jecxz
xchg
shl
rcl
and
fucomi
out
out
nop
pop
neg
pop
sti
cmp
xor
pop
xchg
pop
retf
out
jge
pop
out
pop
add
push
imul
out
out
xchg
sub
xchg
sahf
xlat
in
out
out
xchg
adc
shl
rcr
imul
(bad)
out
cmps
pusha
loopne
out
dec
xchg
sub
xchg
sub
out
dec
xchg
sub
push
pop
push
pop
out
xchg
xlat
dec
xchg
sub
cmps
shl
out
out
dec
xchg
push
aad
xchg
sub
xchg
sub
nop
sub
stos
movs
jbe
out
out
dec
cmp
movs
pop
in
out
out
dec
jmp
pop
jmp
rcl
mov
push
pusha
xor
sub
(bad)
sub
(bad)
sub
(bad)
sub
dec
(bad)
sub
lods
(bad)
cmp
nop
sub
mov
pop
outs
std
cdq
outs
cmc
fs
pop
push
push
jge
xchg
xchg
fucomi
out
out
nop
push
stos
pop
out
pop
jmp
sahf
fucomi
out
out
nop
pop
mov
pop
out
pop
pop
nop
push
(bad)
pop
xchg
sahf
xchg
in
out
out
out
cmp
fist
jnp
xchg
sub
repnz
(bad)
and
pop
jnp
xchg
pop
pop
xchg
sahf
xchg
in
out
out
and
hlt
xchg
pop
pop
xchg
sahf
xchg
in
out
out
and
sbb
pop
retf
xchg
sahf
lahf
in
out
out
xchg
pop
aaa
jmp
adc
out
js
test
scas
push
imul
adc
test
push
imul
adc
test
scas
push
imul
js
imul
scas
push
imul
xchg
in
out
out
xchg
pop
mov
js
xchg
xchg
fucomi
out
out
nop
push
neg
not
pop
pop
out
pop
add
xlat
in
out
out
xchg
out
cmp
xchg
push
adc
pop
add
std
adc
sbb
cmp
out
out
js
ins
test
dec
adc
sbb
lods
pop
out
(bad)
xchg
fucomip
out
out
add
adc
aaa
jmp
sub
xchg
sub
xchg
push
add
out
out
out
push
pop
out
js
push
pxor
cmp
lods
add
pop
xchg
repz
cmps
pop
jmp
pop
inc
cmp
nop
sub
pop
push
push
adc
pop
jge
xchg
inc
pop
jmp
jge
push
aaa
push
and
jge
cmp
jmp
pop
xchg
repz
aaa
(bad)
sub
add
std
adc
sub
add
sub
add
std
adc
dec
xchg
sub
cmps
xchg
loope
out
dec
xchg
sub
cmps
sub
out
out
dec
xchg
sub
push
cmovns
xchg
sub
xchg
sub
xchg
sub
xchg
sub
pop
movs
jbe
ja
cmp
arpl
test
lods
inc
and
push
imul
out
out
xchg
sub
xchg
js
cmp
imul
out
out
xchg
sub
cmp
xchg
sub
cmp
push
cmps
js
push
cmps
pusha
sti
cmps
jbe
out
out
dec
cmp
mov
dec
cmp
cmps
pop
in
out
out
dec
jmp
dec
xchg
pusha
sti
xchg
js
xchg
pusha
repz
xchg
cmp
xchg
js
xchg
js
xchg
pusha
test
js
mov
hlt
pop
in
out
out
xchg
pusha
dec
inc
adc
cmp
out
jmp
add
pusha
call
xor
and
dec
xchg
pusha
adc
inc
pop
push
imul
into
push
imul
pusha
jecxz
jbe
out
out
dec
cmp
dec
xchg
inc
pop
dec
jmp
dec
xchg
pusha
out
jbe
out
out
dec
cmp
dec
xchg
inc
pop
dec
jmp
push
cmps
pusha
pop
push
cmps
inc
sti
jmp
xchg
pusha
jecxz
jbe
out
out
dec
cmp
dec
xchg
inc
adc
out
and
jge
dec
xchg
pusha
out
jbe
out
out
dec
cmp
dec
xchg
inc
adc
out
and
adc
cmps
pusha
adc
cmps
inc
sti
jmp
xchg
pusha
adc
inc
pop
dec
and
push
push
xchg
pusha
(bad)
xchg
inc
repz
nop
mov
xchg
xchg
pusha
repz
pusha
(bad)
xchg
inc
idiv
in
mov
xchg
xchg
pusha
not
repz
xchg
and
xchg
pusha
pop
xchg
pusha
ret
xchg
inc
test
pusha
adc
inc
pop
ins
out
cmp
out
jmp
iret
loope
out
xchg
js
cmp
xchg
push
push
std
push
mov
repnz
fcom
adc
xchg
push
retf
xchg
pop
iret
xchg
js
dec
xchg
cmp
xlat
dec
xor
movs
jbe
out
out
dec
cmp
movs
shl
out
out
dec
and
js
xchg
js
xchg
pusha
test
dec
std
dec
and
js
cmp
das
repnz
xchg
sub
cmp
aam
adc
pop
xchg
repz
dec
xchg
pop
pop
mov
dec
xor
mov
dec
cmp
mov
(bad)
sub
add
std
adc
dec
and
jnp
pop
inc
push
cmps
aam
arpl
test
jbe
ja
mov
dec
and
js
xchg
pop
jecxz
inc
in
cmp
xchg
in
loope
xchg
xchg
addr16
push
aad
mov
dec
xor
mov
dec
cmp
mov
dec
and
js
xchg
push
jecxz
inc
ins
in
(bad)
std
adc
cmp
nop
imul
aad
inc
aam
pop
xchg
repz
pop
inc
(bad)
sub
add
std
adc
test
xchg
push
jmp
cmp
xchg
(bad)
movs
arpl
test
jbe
ja
pop
dec
xchg
out
mov
dec
xor
out
dec
cmp
out
dec
and
jecxz
jge
cmp
xchg
fnstcw
fcom
aad
xchg
pop
outs
stos
outs
cli
cdq
outs
loop
js
xchg
sub
inc
and
(bad)
std
adc
cmp
push
pop
push
aad
xchg
(bad)
dec
inc
aam
pop
xchg
repz
pop
(bad)
sub
add
std
adc
neg
loope
out
dec
xchg
pop
movs
pop
in
out
out
dec
xor
movs
jbe
out
out
dec
cmp
movs
shl
out
out
dec
and
jnp
pop
inc
push
cmps
aam
arpl
test
jbe
ja
mov
dec
and
js
xchg
js
nop
jge
cmp
xchg
fnstcw
(bad)
dec
xchg
xchg
pop
pop
push
aad
mov
dec
xor
mov
dec
cmp
mov
dec
and
js
ins
pusha
jecxz
(bad)
std
adc
jnp
cmp
scas
inc
aam
pop
xchg
repz
xchg
sub
push
cmps
pop
pop
nop
ins
mov
out
out
mov
inc
cmp
out
xchg
pop
jecxz
and
jnp
xchg
sub
xor
jmp
push
in
push
cmps
and
xchg
fisubr
loopne
out
cmp
cmps
shl
out
out
dec
and
js
cmp
xchg
sub
inc
aam
jmp
pop
xchg
repz
pop
(bad)
sub
add
std
adc
sub
add
sub
cmp
ja
xor
test
sub
(bad)
sub
retf
adc
sub
idiv
std
adc
sub
add
std
adc
cmp
xchg
push
out
imul
or
xchg
push
imul
cmp
ins
hlt
arpl
test
pop
pop
push
mov
push
out
out
out
xchg
sub
xchg
push
out
lods
xchg
push
jmp
cmp
ins
hlt
arpl
test
lods
jns
xchg
sub
jmp
push
out
sbb
pop
xchg
push
jmp
push
jmp
sub
cmp
ja
xchg
push
out
imul
or
xchg
sub
hlt
sub
out
xchg
sub
xchg
push
out
lods
xchg
push
sti
ins
cld
jbe
ja
ins
hlt
arpl
test
lods
jns
xchg
sub
jmp
push
out
adc
pop
xchg
sub
cmp
ja
xchg
push
out
imul
or
xchg
sub
repnz
xchg
sub
xchg
push
out
lods
xchg
push
jecxz
cld
jbe
ja
ins
hlt
arpl
test
lods
jns
xchg
sub
jmp
push
out
xchg
adc
xchg
pop
xchg
sub
cmp
ja
xchg
push
out
imul
or
xchg
sub
repnz
xchg
sub
jmp
push
out
adc
pop
xchg
sub
das
xchg
sub
hlt
retf
loope
out
aam
adc
pop
xchg
repz
pop
(bad)
sub
add
std
adc
sub
add
scas
das
jnp
xchg
sub
cmp
ja
xor
test
sub
js
repnz
cmp
xor
test
push
adc
xlat
xchg
push
adc
cmp
xor
test
push
pop
jmp
aam
pop
out
pop
xchg
rep
repz
out
out
(bad)
sub
add
std
adc
sub
add
sub
xchg
sub
xchg
push
pop
pop
inc
scas
jbe
ja
cmp
mov
xor
jecxz
adc
(bad)
xor
out
xchg
push
adc
(bad)
xor
xchg
sub
repnz
out
xchg
sub
xchg
sub
xchg
sub
xchg
sub
cmp
xor
sub
pop
div
jecxz
out
xchg
(bad)
xchg
sub
xchg
das
sbb
inc
xchg
sub
push
pop
xchg
sub
xchg
sub
xchg
das
aaa
idiv
sub
out
js
xchg
pop
out
push
loopne
out
xchg
sub
cmp
xor
xchg
sub
test
xor
out
js
neg
in
out
xchg
push
jecxz
fidiv
shl
lods
jnp
xchg
sub
xchg
out
xchg
sub
xchg
sub
xchg
push
adc
sbb
xlat
js
xchg
sub
cmp
xor
lods
adc
xchg
sub
xchg
das
pop
repnz
pop
xchg
repz
sub
push
pop
push
pop
out
pop
pop
inc
push
imul
push
imul
das
setb
xchg
sub
cmp
or
out
jbe
out
out
cmp
ins
lods
pop
in
out
out
xchg
push
sti
push
jecxz
cmp
jne
dec
dec
and
jp
nop
mov
cmp
push
cmps
push
jecxz
inc
adc
jl
js
push
cmps
adc
shl
out
out
dec
and
js
xchg
inc
pop
push
cmps
in
and
out
jnp
xchg
inc
pop
push
cmps
in
push
mov
in
out
out
dec
xor
dec
cmp
dec
and
jnp
jne
dec
out
sub
dec
xchg
push
sti
dec
and
jecxz
mov
jmp
repz
xchg
js
push
cmps
aad
and
jnp
sub
push
cmp
lods
pop
out
xchg
push
out
lods
mov
out
out
dec
cmp
cmp
push
fwait
scas
repnz
xchg
repz
pop
inc
xchg
out
xchg
mov
out
out
push
out
js
cmp
out
jne
out
js
test
out
nop
push
or
push
sub
xchg
sub
out
out
xchg
sub
out
out
xchg
sub
out
out
xchg
sub
nop
xchg
icebp
out
out
out
xchg
sub
nop
xchg
pop
in
out
out
xchg
sub
nop
xchg
cmp
sub
nop
xchg
pop
in
out
out
inc
xchg
pusha
mov
in
out
out
pop
xchg
xchg
mov
out
out
out
aas
not
sub
push
out
out
out
xchg
push
and
xchg
jnp
addr16
add
pop
jmp
sbb
xlat
jmp
retf
xchg
pusha
out
loop
jmp
inc
mul
out
jno
jmp
push
cmps
and
inc
pop
jp
and
jp
xchg
add
and
mov
xor
(bad)
sub
adc
out
out
xchg
pop
ret
xchg
pop
jecxz
and
sub
out
cmp
pop
idiv
loopne
out
xchg
push
sti
push
sub
xchg
daa
xchg
sub
push
jecxz
out
push
repz
xchg
inc
imul
xchg
inc
mul
inc
out
fwait
inc
inc
dec
aam
jmp
pop
xchg
repz
sub
pop
out
mov
nop
mov
xchg
sub
neg
adc
and
inc
push
cwde
lods
xchg
lods
inc
lods
jmp
xchg
sahf
xchg
in
out
out
pop
repnz
jbe
out
out
call
dec
xchg
in
push
in
push
in
push
cmps
in
mov
dec
and
dec
xchg
in
xchg
xchg
xchg
in
out
out
inc
stos
inc
xchg
out
imul
repnz
hlt
fs
pop
das
sub
(bad)
js
test
xchg
in
out
out
jmp
push
daa
pop
mov
xchg
inc
jecxz
push
out
xchg
push
ret
xchg
sub
xchg
pop
pop
pop
mov
cmp
test
(bad)
and
xchg
sub
push
imul
out
xchg
pop
adc
test
push
imul
out
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
(bad)
sub
jbe
std
adc
std
adc
xchg
push
adc
sub
add
std
adc
xchg
(bad)
xor
jmp
sub
hlt
out
out
out
xchg
sub
xchg
push
adc
test
pop
pop
push
aad
xchg
sub
cmp
out
xchg
sub
xchg
push
adc
test
and
push
push
xchg
sub
jmp
call
cmp
xor
xor
and
lds
xchg
inc
jecxz
shr
sub
push
push
add
loop
or
jns
ins
in
xchg
jnp
adc
jmp
inc
out
push
out
shr
out
sub
xor
and
std
adc
js
outs
std
cdq
outs
cmc
repnz
mov
fcom
jbe
hlt
arpl
aad
sub
jmp
pop
xchg
push
(bad)
jmp
or
sub
xchg
push
adc
test
jmp
xchg
sub
cmp
jmp
adc
test
jmp
sub
and
out
out
xchg
sub
repnz
(bad)
dec
inc
inc
aam
adc
pop
xchg
repz
sbb
sub
add
std
adc
sub
add
jmp
retf
adc
(bad)
sub
loop
and
xchg
pusha
jecxz
push
jmp
cmp
movs
arpl
test
xlat
xor
xor
push
mov
push
out
js
cmp
cmp
xor
xor
push
xchg
push
jecxz
sbb
xlat
cmp
xor
xor
(bad)
xchg
push
repz
xor
cmp
repnz
xor
xor
(bad)
xchg
js
xchg
push
jecxz
xlat
nop
mov
xchg
xchg
push
sti
xchg
js
cmp
cmp
xor
and
jns
xchg
sub
dec
xchg
jmp
pop
xchg
rep
repz
out
out
(bad)
sub
add
std
adc
sub
add
sub
add
std
adc
sub
add
std
adc
jbe
ja
inc
cmp
addr16
xchg
sub
(bad)
sub
retf
adc
sub
loop
and
(bad)
sub
pop
out
out
out
xchg
aam
sub
xchg
push
repz
xor
push
mov
sub
jmp
nop
inc
out
iret
loope
out
xchg
sub
xchg
sub
xchg
push
jecxz
imul
sub
xchg
push
jecxz
test
or
xchg
sub
xchg
sub
xchg
push
sti
cmp
cmp
jecxz
xlat
jns
xchg
sub
cmp
out
sub
add
std
adc
push
iret
xchg
sub
cmp
xor
(bad)
xchg
sub
xchg
sub
xchg
pop
xchg
push
adc
out
mov
push
pop
xchg
push
not
xor
or
xchg
xchg
nop
iret
loop
out
xchg
pop
jecxz
aad
push
out
push
sti
cmp
nop
imul
or
xchg
sub
xchg
sub
cmp
jmp
sub
xchg
push
(bad)
cmp
js
xchg
sub
xchg
push
out
test
cmp
pop
xchg
repz
sub
xchg
push
pop
xchg
pop
pop
xchg
outs
lahf
in
out
out
xchg
out
push
dec
pop
pop
inc
scas
jbe
ja
cmp
mov
xor
and
js
ins
adc
test
call
jmp
out
xchg
push
pop
xchg
js
xchg
sbb
fidiv
shl
fcomp
imul
add
xchg
push
pop
xchg
jmp
sub
add
std
adc
xchg
pop
out
sub
xchg
sub
xchg
sub
xchg
outs
lahf
in
out
out
xchg
out
xchg
push
ret
xchg
push
add
out
xchg
adc
push
and
cmp
xor
sub
cmp
xor
sub
xchg
das
pop
push
adc
xchg
das
daa
xchg
push
pop
push
push
pop
jnp
xchg
das
daa
xchg
push
pop
xchg
push
pop
push
out
or
xchg
sub
xchg
das
daa
jmp
xchg
sub
xchg
sub
cmp
xor
sub
cmp
xor
sub
xchg
push
ret
cmp
xor
pop
(bad)
sub
add
std
adc
sub
pop
(bad)
std
adc
sub
idiv
std
adc
add
(bad)
xor
push
pop
xchg
pop
(bad)
cmp
nop
xchg
sbb
or
and
out
xchg
sub
cmp
xor
sub
jmp
js
xchg
js
xchg
push
pop
div
(bad)
out
out
xchg
sub
(bad)
sub
retf
adc
xor
pop
test
sub
push
sub
cmp
xor
nop
sub
out
out
xchg
sub
xchg
sub
xchg
sub
xchg
push
retf
xor
adc
pop
jmp
xlat
jge
xchg
sub
xchg
das
adc
pop
xchg
push
div
lods
hlt
icebp
in
out
out
jne
out
js
nop
sub
out
out
cmps
add
std
adc
add
sub
add
std
adc
sub
pop
(bad)
std
adc
sti
nop
push
fist
xchg
push
adc
repz
push
pop
cmp
xor
xchg
push
div
out
out
out
and
std
adc
imul
out
out
xchg
push
out
ficom
push
pop
xchg
sub
cmp
nop
imul
or
xchg
sub
xchg
sub
xchg
push
idiv
(bad)
xor
xchg
sub
cmp
xor
sub
out
out
xchg
sub
xchg
out
cmp
xchg
imul
or
xchg
push
pop
cmp
push
mov
lods
push
imul
out
xchg
sub
xchg
out
cmp
xchg
imul
or
xchg
push
pop
cmp
push
mov
lods
push
imul
out
xchg
sub
xchg
out
cmp
xchg
imul
or
xchg
push
pop
cmp
push
mov
lods
push
imul
out
out
xchg
sub
xchg
out
cmp
xchg
imul
or
xchg
push
pop
cmp
push
mov
lods
push
imul
out
out
xchg
sub
xchg
out
cmp
xchg
imul
or
xchg
push
sti
xchg
adc
ficom
dec
xchg
cmp
xchg
adc
ficom
dec
xchg
adc
xchg
adc
ficom
dec
xchg
and
out
out
out
xchg
sub
xchg
out
cmp
xchg
imul
or
xchg
push
call
xchg
adc
or
cmp
xchg
adc
ficom
dec
xchg
adc
xchg
adc
ficom
dec
xchg
and
out
out
out
xchg
sub
xchg
out
cmp
xchg
imul
or
xchg
push
adc
xchg
adc
or
cmp
xchg
adc
ficom
dec
xchg
adc
xchg
adc
ficom
dec
xchg
and
sub
xchg
out
cmp
xchg
imul
or
xchg
push
sti
xchg
adc
ficom
dec
xchg
cmp
xchg
adc
ficom
dec
xchg
adc
xchg
adc
ficom
dec
xchg
and
sub
out
out
xchg
push
mov
xchg
sub
cmp
xor
sub
cmp
nop
imul
or
cmp
xchg
push
pop
xchg
pop
pop
cmp
xor
and
push
imul
out
out
xchg
sub
xchg
push
pop
cmp
xor
xchg
sub
xchg
push
add
(bad)
nop
imul
or
bnd
out
js
nop
sub
out
out
xchg
sub
xchg
push
idiv
(bad)
xor
xchg
sub
cmp
xor
sub
out
out
xchg
sub
push
pop
xchg
sub
out
js
out
js
xchg
sub
div
out
out
xchg
sub
xchg
push
idiv
(bad)
xor
jne
out
js
xchg
sub
imul
sub
xchg
push
mov
mov
sub
xchg
sub
xchg
push
add
(bad)
xor
push
pop
xchg
pop
(bad)
cmp
nop
xchg
sbb
or
and
out
xchg
js
xchg
sub
xchg
jmp
pop
xchg
pop
adc
fidivr
(bad)
xor
xor
and
js
mov
jne
je
mov
imul
repnz
push
pop
cmp
xor
and
pop
sar
dec
inc
jne
repnz
xchg
les
jne
dec
inc
inc
aam
pop
out
pop
xchg
repz
out
sub
push
sbb
inc
sbb
and
(bad)
std
adc
ja
(bad)
std
adc
cmp
sub
and
adc
adc
add
out
out
xchg
sub
and
std
adc
ja
(bad)
std
adc
adc
sub
and
(bad)
std
adc
ja
(bad)
std
adc
stc
out
out
out
xchg
push
xcrypt-ecb
cmps
retf
(bad)
std
adc
xlat
push
push
xchg
sub
xchg
sub
adc
or
xchg
sub
xchg
sub
pop
xchg
sub
xchg
sub
pop
xchg
sub
pop
xchg
push
or
scas
jbe
ja
cmp
mov
xor
or
xchg
outs
fwait
in
out
out
xchg
pop
xchg
sub
adc
out
xchg
out
jmp
xchg
xchg
fucomi
out
out
xchg
push
sbb
ja
aas
out
out
out
jg
jne
out
fcom
out
jnp
adc
(bad)
xor
nop
sub
maxps
jnp
pmaxsw
aaa
out
jnp
or
scas
in
out
xchg
sub
pop
xchg
adc
(bad)
xor
xchg
sub
pop
xchg
push
or
cmp
xor
add
(bad)
in
(bad)
std
adc
ja
(bad)
std
adc
add
leave
(bad)
std
adc
ja
(bad)
std
adc
adc
enter
js
pop
out
js
out
js
pop
out
js
out
js
out
js
neg
jmp
enter
out
pop
xchg
repz
adc
xchg
sub
(bad)
sub
add
push
out
cld
jbe
ja
ins
hlt
arpl
test
push
jecxz
push
adc
push
adc
js
nop
sub
out
js
pop
out
js
out
js
out
js
imul
loope
out
xchg
sub
xchg
sub
aam
pop
out
pop
xchg
rep
repz
out
out
out
pop
cmp
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
pop
pop
inc
dec
(bad)
sub
inc
inc
inc
inc
(bad)
sub
inc
inc
sub
sub
sub
push
push
(bad)
sub
push
push
push
push
(bad)
sub
jns
jnp
(bad)
sub
jge
jg
(bad)
sub
popa
outs
arpl
sub
bound
(bad)
sub
dec
jbe
dec
(bad)
sub
and
and
daa
and
(bad)
sub
or
mov
cld
cdq
out
out
out
ins
lods
xchg
out
out
out
xchg
push
out
xchg
push
out
push
mov
daa
out
out
out
das
push
das
jge
cmp
and
pop
push
imul
js
cmp
scas
push
mov
out
out
sub
sbb
in
js
push
cmps
out
repnz
mov
sbb
out
out
out
xchg
pop
cmps
sub
sbb
in
js
cmp
repnz
mov
sbb
out
out
out
sub
sbb
in
js
cmp
repnz
mov
sbb
out
out
out
lods
iret
jmp
lods
iret
jmp
jmp
pop
jp
xchg
pusha
adc
xchg
sbb
sub
js
jp
xchg
fild
sub
js
jp
xchg
(bad)
xchg
jmp
sub
push
pop
push
ins
inc
out
out
out
dec
inc
aam
adc
cmp
outs
arpl
out
and
sub
and
sub
scas
jmp
sub
cmp
lea
mov
mov
mov
mov
mov
mov
jne
push
push
push
sbb
lea
and
push
call
mov
test
mov
jle
mov
mov
mov
cmp
jne
xor
call
jmp
not
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
push
mov
push
mov
mov
mov
jne
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
mov
mov
xor
sub
cmp
jne
push
push
push
call
cmp
jne
mov
xor
sub
mov
pop
pop
mov
leave
ret
mov
push
mov
sub
sbb
mov
mov
and
mov
inc
mov
cmp
jne
cmp
jb
mov
xor
sub
adc
mov
dec
push
call
cmp
mov
jb
mov
xor
mov
jmp
sub
push
mov
push
mov
or
push
sbb
call
push
pop
cmp
mov
jbe
sbb
xor
mov
inc
jmp
push
sub
mov
push
push
add
call
test
mov
jne
push
adc
call
mov
cmp
ja
add
push
xor
push
inc
call
inc
test
jne
push
call
cmp
mov
ja
push
and
push
call
or
test
mov
jne
xor
push
sub
call
cmp
ja
and
push
sbb
push
mov
call
test
mov
jne
add
push
call
mov
cmp
mov
ja
push
push
and
call
test
mov
jne
or
push
xor
call
mov
cmp
mov
ja
push
sbb
push
mov
call
or
test
mov
jne
sbb
push
call
mov
cmp
jbe
and
xor
mov
inc
jmp
push
push
sbb
call
and
test
jne
xor
push
xor
push
or
push
xor
push
and
call
cmp
mov
je
mov
xor
jmp
mov
cmp
jne
mov
lea
mov
lea
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
sub
mov
sub
xor
mov
and
mov
inc
mov
cmp
jne
cmp
jne
mov
inc
mov
cmp
jb
or
mov
add
mov
push
and
jmp
xor
xor
inc
mov
cmp
jae
cmp
jne
jmp
mov
sbb
push
and
jmp
xor
add
inc
mov
cmp
jae
cmp
jne
cmp
jne
mov
inc
mov
jmp
xor
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
mov
inc
mov
cmp
jne
cmp
jne
mov
inc
mov
cmp
jb
mov
or
xor
mov
sub
mov
cmp
jne
sbb
push
sbb
call
sbb
mov
mov
mov
mov
adc
xor
or
sub
mov
cmp
je
adc
push
push
sub
call
mov
mov
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
and
mov
xor
and
sub
mov
cmp
mov
je
mov
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
mov
and
mov
and
xor
xor
inc
mov
cmp
jne
cmp
jb
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
sub
mov
mov
add
and
mov
inc
mov
cmp
jne
cmp
jb
and
xor
add
inc
mov
cmp
jne
cmp
jb
or
mov
mov
cmp
je
cmp
jne
cmp
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
inc
mov
cmp
jne
cmp
jne
xor
or
inc
mov
cmp
jb
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
je
jmp
mov
mov
xor
sub
cmp
je
mov
test
je
lea
push
push
push
call
mov
mov
xor
sub
cmp
je
mov
movzx
mov
mov
mov
jmp
inc
jmp
mov
xor
sub
jmp
mov
add
mov
mov
test
je
push
mov
call
cmp
jl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
sub
mov
mov
mov
cmp
je
lea
mov
mov
add
mov
mov
mov
mov
xor
lea
mov
mov
mov
cmp
jne
mov
xor
sub
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
and
mov
sub
mov
mov
mov
sbb
mov
add
push
or
mov
push
adc
xor
mov
adc
sub
mov
cmp
mov
je
sbb
mov
and
mov
mov
mov
mov
mov
and
jmp
xor
or
inc
mov
cmp
jae
cmp
jne
jmp
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
mov
mov
sbb
xor
add
xor
add
adc
sub
cmp
mov
je
mov
mov
mov
mov
push
mov
push
add
mov
mov
push
call
mov
mov
mov
xor
sub
mov
mov
xor
sub
mov
mov
jmp
mov
xor
sub
pop
pop
leave
ret
sldt
mov
sldt
mov
mov
ret
push
mov
sub
mov
mov
xor
mov
add
sub
movzx
and
mov
mov
cmp
je
cmp
jne
mov
dec
mov
jmp
mov
lea
xor
xor
xor
mov
and
mov
mov
xor
sub
adc
mov
inc
mov
xor
push
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
cmp
jne
xor
add
inc
mov
jmp
mov
xor
mov
and
xor
add
inc
mov
cmp
jne
cmp
jb
mov
and
mov
push
mov
mov
adc
mov
or
xor
sbb
mov
push
and
sub
jmp
mov
mov
mov
inc
cmp
mov
jb
mov
sbb
xor
sub
mov
jmp
neg
mov
and
mov
inc
mov
cmp
jne
cmp
jne
mov
inc
mov
cmp
jb
xor
mov
xor
inc
mov
dec
add
movzx
or
mov
xor
xor
add
mov
neg
movzx
xor
and
add
mov
mov
mov
inc
mov
cmp
mov
jne
mov
or
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
sbb
xor
sub
mov
mov
xor
or
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
and
mov
sbb
xor
adc
xor
or
sub
add
xor
or
mov
mov
adc
mov
mov
mov
and
lea
mov
mov
and
jmp
xor
or
inc
mov
cmp
jae
cmp
jne
cmp
jne
xor
or
inc
mov
jmp
mov
sbb
lea
mov
and
jmp
xor
or
inc
mov
cmp
jae
cmp
jne
cmp
jne
mov
inc
mov
jmp
mov
xor
xor
adc
mov
mov
lea
mov
sbb
mov
mov
mov
add
mov
mov
lea
mov
cmp
je
cmp
jne
cmp
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
mov
and
mov
mov
sub
lea
mov
mov
adc
mov
and
lea
sub
mov
and
mov
or
xor
sub
mov
jne
jmp
xor
mov
mov
sbb
xor
and
xor
sub
add
sub
xor
mov
mov
mov
mov
mov
mov
mov
jmp
mov
and
mov
inc
mov
cmp
jne
cmp
jne
xor
add
inc
mov
cmp
jb
and
xor
add
inc
mov
cmp
jne
cmp
jb
mov
xor
xor
sub
add
xor
mov
mov
mov
imul
xor
sub
lea
mov
add
mov
mov
xor
sub
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsx
xor
sub
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
add
xor
mov
mov
mov
xor
imul
sub
lea
mov
add
mov
mov
xor
sub
jne
mov
mov
xor
xor
sub
sub
cmp
jae
lea
mov
mov
mov
lea
mov
mov
add
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
inc
sub
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
add
xor
mov
mov
mov
imul
xor
sub
lea
mov
add
mov
mov
xor
sub
jne
mov
mov
jmp
mov
mov
xor
xor
sub
add
xor
mov
mov
mov
imul
xor
sub
lea
mov
add
mov
mov
xor
sub
jne
mov
mov
xor
lea
mov
inc
mov
xor
sub
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
add
xor
mov
mov
mov
imul
xor
sub
lea
mov
add
mov
mov
xor
sub
jne
jmp
mov
mov
xor
xor
sub
add
xor
mov
mov
mov
xor
imul
sub
lea
mov
add
mov
mov
xor
sub
jne
mov
xor
mov
sub
mov
pop
pop
pop
leave
ret
push
mov
sub
sub
mov
mov
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
cmp
jne
mov
inc
mov
jmp
sub
push
mov
mov
sub
mov
xor
mov
mov
mov
movzx
or
mov
mov
add
push
mov
and
push
mov
cmp
je
cmp
jne
cmp
jne
mov
dec
mov
xor
xor
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
xor
mov
neg
sub
sbb
xor
mov
mov
mov
mov
mov
cmp
jne
mov
mov
xor
sub
sub
mov
movzx
sbb
mov
and
sub
je
sub
mov
je
sbb
sub
jne
mov
mov
mov
mov
mov
cmp
mov
je
mov
cmp
mov
je
lea
push
mov
xor
sub
or
push
push
mov
push
add
push
push
push
and
push
sbb
call
adc
add
not
test
mov
je
mov
mov
mov
jmp
adc
mov
mov
cmp
je
cmp
jne
cmp
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
sub
xor
add
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
dec
mov
mov
dec
mov
jmp
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
cmp
jne
mov
inc
mov
jmp
not
mov
mov
and
mov
inc
mov
cmp
jne
cmp
jne
xor
xor
inc
mov
cmp
jb
and
mov
inc
mov
cmp
jne
cmp
jne
mov
inc
mov
cmp
jb
sub
mov
xor
mov
xor
mov
or
mov
and
mov
neg
mov
mov
xor
and
sub
je
mov
xor
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
sub
add
mov
mov
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
sub
sub
cmp
jae
lea
mov
mov
xor
sub
lea
mov
mov
cmp
jbe
add
jmp
add
mov
xor
inc
inc
sub
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
mov
add
mov
mov
mov
add
xor
cmp
jne
mov
mov
xor
xor
sub
add
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
mov
xor
xor
lea
jmp
mov
cmp
jne
push
push
jmp
mov
cmp
jne
push
push
jmp
mov
cmp
jne
push
push
add
xor
push
call
mov
xor
lea
xor
mov
xor
lea
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
mov
add
and
mov
sbb
mov
sub
sub
cmp
mov
jne
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
xor
mov
adc
mov
lea
sub
mov
lea
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
jmp
sbb
push
movzx
adc
mov
mov
adc
lea
sbb
push
mov
sub
mov
mov
mov
or
push
mov
mov
and
xor
dec
sub
mov
xor
xor
sbb
mov
adc
mov
and
xor
xor
inc
mov
cmp
jne
cmp
jne
mov
inc
mov
cmp
jb
mov
sbb
mov
and
xor
mov
cmp
je
cmp
jne
cmp
jne
mov
dec
mov
mov
dec
mov
jmp
dec
sub
sbb
mov
sbb
mov
mov
xor
mov
sbb
mov
add
add
mov
sbb
mov
mov
or
mov
add
mov
mov
sbb
mov
and
mov
or
dec
sub
not
or
and
sbb
mov
mov
mov
mov
sub
and
mov
dec
mov
not
mov
sbb
movzx
neg
mov
sub
add
xor
mov
mov
mov
jmp
neg
mov
mov
cmp
je
cmp
jne
mov
dec
mov
jmp
movzx
adc
mov
or
sub
movzx
sub
mov
inc
mov
mov
mov
mov
adc
mov
mov
cmp
je
cmp
jne
cmp
jne
xor
add
dec
mov
xor
or
dec
mov
jmp
and
mov
inc
mov
cmp
jne
cmp
jb
movzx
mov
sub
xor
mov
mov
not
mov
mov
cmp
jne
add
dec
cmp
jae
dec
mov
mov
mov
mov
mov
mov
xor
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
sub
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
sub
sub
cmp
jae
lea
mov
mov
mov
xor
imul
mov
xor
add
mov
lea
mov
mov
xor
inc
inc
sub
cmp
jb
mov
add
xor
cmp
je
mov
mov
xor
xor
sub
sub
cmp
jae
lea
mov
mov
mov
xor
imul
mov
xor
add
mov
lea
mov
mov
xor
inc
inc
sub
cmp
jb
mov
mov
xor
sub
cmp
mov
jae
xor
mov
sub
add
mov
jmp
mov
xor
lea
mov
mov
mov
and
jmp
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
and
imul
mov
mov
add
and
mov
mov
adc
mov
push
call
mov
mov
mov
xor
sub
mov
cmp
jne
and
mov
inc
mov
cmp
jne
cmp
jb
mov
mov
adc
xor
sub
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
cmp
jne
mov
inc
mov
jmp
mov
adc
mov
and
mov
inc
mov
cmp
jne
cmp
jb
and
jmp
mov
inc
mov
cmp
jae
cmp
jne
cmp
jne
xor
or
inc
mov
jmp
sbb
xor
add
mov
and
mov
inc
mov
cmp
jne
cmp
jb
mov
mov
mov
mov
mov
mov
mov
xor
xor
sub
add
xor
mov
mov
xor
sub
jne
push
push
call
mov
mov
add
xor
mov
mov
mov
cmp
jne
mov
mov
push
and
or
push
mov
mov
push
push
push
mov
push
call
lea
mov
mov
mov
add
mov
mov
mov
mov
or
jmp
mov
mov
xor
sub
mov
pop
pop
leave
ret
or
jmp
push
mov
push
not
mov
adc
mov
mov
and
add
xor
xor
mov
cmp
mov
jne
xor
mov
mov
and
mov
inc
mov
cmp
jne
cmp
jb
not
add
or
mov
add
mov
xor
mov
xor
push
mov
mov
sub
cmp
pop
je
mov
jmp
mov
xor
sub
jmp
mov
xor
sub
leave
ret
push
mov
push
or
push
mov
mov
cmp
je
cmp
jne
mov
dec
mov
jmp
mov
add
mov
mov
mov
xor
or
sub
imul
mov
mov
dec
push
mov
mov
xor
xor
mov
sub
sub
add
imul
mov
mov
cmp
mov
jne
mov
xor
xor
sub
sub
imul
jmp
xor
sub
mov
imul
add
mov
mov
pop
leave
ret
