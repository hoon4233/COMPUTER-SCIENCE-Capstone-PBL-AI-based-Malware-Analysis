sahf
sbb
sub
clc
fisubr
add
(bad)
inc
dec
(bad)
jg
pop
int
(bad)
jecxz
fs
cdq
movs
int3
push
jnp
sub
mov
adc
lods
ins
cmp
pextrw
jno
add
pusha
or
add
fcmovb
call
jnp
mov
test
test
inc
sub
fdiv
enter
jo
das
inc
mov
sub
lahf
sbb
les
shl
cmp
popa
mov
jge
ret
xor
das
stc
mov
cmp
xor
fist
stc
cmp
lds
mov
into
iret
or
fist
popf
imul
push
fild
jae
jns
add
add
and
inc
pop
bound
add
sub
mov
pop
mov
mov
es
aam
adc
sbb
mov
push
int3
daa
push
inc
mov
loop
jecxz
dec
iret
data16
dec
mov
sbb
xor
pop
fisttp
test
cmp
sahf
fmul
mov
ins
retf
and
mov
pop
add
sar
pop
imul
adc
out
push
push
idiv
std
xchg
shr
cli
and
add
gs
movs
xor
stos
jo
xor
test
gs
daa
sub
sbb
fdivr
lods
mov
movs
les
add
arpl
dec
push
adc
sbb
pop
mov
shr
retf
and
gs
push
sub
sbb
xchg
fld
add
mov
mov
xor
dec
lea
push
adc
adc
sbb
popf
retf
shr
fimul
pop
push
push
stc
fdivr
fld1
jne
xchg
js
pusha
inc
push
jno
xchg
sbb
mul
sub
dec
cmp
jbe
je
call
add
push
mov
(bad)
les
lock
xor
std
mov
div
mov
dec
in
dec
jge
adc
pop
jmp
inc
(bad)
imul
jbe
je
lea
mov
fldcw
icebp
ins
xor
xchg
jb
sbb
sub
sub
movs
repnz
hlt
pop
in
inc
aaa
xor
cli
sub
call
and
dec
push
ja
ins
sahf
stc
js
sub
jne
aad
cli
pop
sbb
in
inc
xchg
fs
push
imul
rol
cmp
(bad)
cmc
les
sub
and
xchg
jbe
test
repnz
xchg
push
scas
adc
(bad)
out
sbb
scas
ret
shl
(bad)
fstp
sub
mov
ficom
jge
sub
ja
add
xchg
fsub
jno
daa
jmp
inc
icebp
mov
pop
retf
cmc
xor
cmp
sbb
(bad)
fcom
mov
or
push
fmul
jmp
stc
sbb
adc
mov
push
xor
jmp
mov
clc
inc
xchg
cs
out
inc
mov
xchg
cdq
cld
inc
stos
mov
add
pop
mov
push
test
out
fwait
add
ss
pusha
mov
stos
cs
add
jp
popf
xor
fimul
cs
(bad)
call
dec
popf
mov
xchg
aaa
jae
loope
aas
sbb
pushf
mov
movs
enter
stos
add
jecxz
jae
jb
mov
daa
mov
out
pusha
dec
aam
ins
call
cli
aam
int
ja
ret
(bad)
sub
pop
out
add
and
mov
test
jnp
into
cmp
add
leave
dec
in
push
call
iret
mov
push
sbb
adc
loope
or
out
pop
mov
mov
lods
movs
and
jo
rol
xor
mov
out
cmps
dec
and
pop
dec
xchg
out
push
mov
(bad)
out
xchg
repz
push
mov
dec
sub
push
popa
sbb
cmp
push
retf
test
inc
push
nop
ret
push
sub
test
inc
xchg
push
inc
inc
adc
and
xor
sar
inc
enter
mov
mov
(bad)
mov
or
sbb
out
sub
pusha
clc
push
sub
in
leave
mov
(bad)
jmp
mov
movs
repz
aam
fmul
push
stos
addr16
jl
dec
push
mov
imul
mov
pop
scas
mov
arpl
scas
xor
test
mov
aaa
lods
(bad)
mov
push
cmp
aam
mov
out
(bad)
in
mov
mov
les
imul
mov
sbb
(bad)
jecxz
add
iret
int3
push
das
bound
add
mov
add
jmp
int3
(bad)
adc
adc
iret
push
mov
xchg
ds
and
jno
outs
pop
jmp
pop
scas
mov
pop
xchg
sbb
or
jge
fbld
pop
into
dec
jmp
jno
aas
iret
add
in
mov
jecxz
imul
and
mov
loop
es
cmps
push
dec
mov
enter
push
or
and
jb
repz
bound
pop
fld
jns
sub
add
cli
pop
outs
inc
add
mov
jl
pop
or
mov
sti
or
sbb
in
xchg
pushf
hlt
and
popf
imul
mov
leave
xlat
xchg
cmp
push
xor
jne
add
(bad)
enterw
sub
inc
xchg
rcr
sti
adc
push
mov
mov
mov
adc
arpl
dec
lods
fmul
gs
pop
cmp
cwde
jmp
hlt
cmp
cmp
xchg
mov
mov
mov
pop
jecxz
ins
gs
pop
xchg
sbb
cli
dec
or
pop
ret
inc
loop
adc
or
aad
jbe
imul
stos
test
ror
xchg
ret
loop
sahf
or
mov
das
iret
jne
enter
lods
cmp
push
popa
sbb
xchg
gs
neg
fsubr
jp
mov
repz
pop
jno
addr16
outs
mov
sub
pop
push
jne
xchg
mov
or
mov
(bad)
xchg
sar
test
lock
arpl
adc
jnp
es
cdq
test
fsubr
xchg
ror
pop
xor
jno
and
mov
ds
add
(bad)
jmp
aaa
xor
(bad)
add
push
sub
xchg
out
mul
xchg
out
jmp
add
xchg
jge
rol
mov
aas
and
jmp
mov
jmp
mov
iret
(bad)
cmp
adc
test
push
mov
mov
(bad)
in
into
stos
sub
push
pop
pushf
in
sahf
xchg
mov
dec
pop
mov
aaa
adc
aaa
idiv
xchg
popa
es
mul
not
mul
dec
jge
jecxz
imul
sbb
mov
scas
call
or
dec
and
and
sbb
test
pop
mov
cmp
leave
xchg
or
loop
fidiv
mov
pop
lock
inc
dec
mov
in
int3
push
loope
les
(bad)
fnsave
das
cmc
xchg
(bad)
cmps
cmps
pop
cmps
xor
(bad)
les
cmp
clc
add
fcomp
mov
fmul
mov
or
ja
pop
lea
stos
nop
mov
pop
movs
pop
inc
aam
cmp
sub
out
out
popa
sar
sbb
inc
inc
adc
cmp
jle
or
bound
jg
push
cmp
(bad)
pop
dec
sbb
mov
and
retf
mov
in
and
sub
push
pop
xchg
jle
and
gs
sub
xchg
hlt
fadd
pop
and
lods
xor
cli
cmp
xchg
lods
jge
outs
push
sbb
lahf
pop
xchg
pop
data16
sar
adc
cmp
mov
add
popa
(bad)
cli
retf
or
mov
test
inc
jne
ror
sub
mov
imul
test
rol
stc
jmp
iret
jb
fst
shl
mov
stos
pop
push
rcl
addr16
scas
mov
pop
(bad)
jmp
or
out
push
mov
lea
(bad)
dec
cmp
push
fbld
cmc
sbb
mov
xlat
xor
daa
cmp
push
cmp
loop
xchg
cli
dec
inc
jae
push
ja
and
inc
sub
ins
cs
cmp
mov
pop
es
gs
pop
lahf
adc
sub
inc
xor
and
jns
xchg
ret
pop
cmp
cmps
mov
out
mov
xchg
and
test
mov
mov
push
js
mov
dec
mov
jnp
out
fs
scas
or
aaa
push
mov
test
dec
push
cmps
inc
push
stos
cmp
repz
xchg
cmc
aaa
movs
xchg
adc
je
mov
pop
inc
aad
fs
pop
add
dec
adc
cmp
lods
add
mov
es
test
push
lods
add
xor
mov
std
pop
cdq
push
data16
and
sub
inc
sbb
mov
fldenv
jl
js
sbb
push
data16
and
out
out
pop
mov
stos
loop
push
dec
in
add
ror
aam
push
push
fwait
push
mov
and
mov
cdq
rcr
in
xor
xchg
shl
pop
push
push
ins
jb
(bad)
mov
repz
inc
jnp
sahf
pop
stos
repz
and
dec
out
push
hlt
add
cmc
cwde
mov
pop
cmp
cmps
jmp
adc
pop
rol
sub
mov
mov
fs
daa
pop
lds
in
mov
sbb
xor
push
inc
out
xor
es
add
icebp
lahf
sub
and
dec
mov
xor
jmp
leave
inc
repnz
fstp
je
mov
pop
popa
add
fld
retf
pop
fwait
push
cmp
mov
loopne
push
mov
call
stos
je
mov
imul
cdq
ja
add
or
fbld
sub
pop
fwait
std
enter
adc
mov
les
mov
mov
stos
push
pusha
mov
jmp
pop
ja
cmp
lahf
pop
(bad)
jno
xchg
inc
mov
cmps
and
cmp
add
outs
dec
jo
cdq
test
mov
ins
jmp
jnp
lahf
push
test
inc
mov
test
gs
ret
icebp
mov
jle
xor
xlat
cmp
sbb
add
xor
js
dec
lahf
mov
mov
mov
push
mov
mov
inc
scas
jle
inc
dec
cmp
outs
add
imul
fcomp
aad
adc
pop
inc
or
cmp
or
push
hlt
xchg
sbb
je
cmp
rol
xor
sub
jp
inc
mov
sti
es
pushf
dec
ret
inc
cmp
push
xor
fisub
inc
mov
pop
inc
movs
(bad)
jo
arpl
les
inc
addr16
jbe
sub
pusha
and
out
fcmovb
add
scas
out
out
inc
adc
fwait
pop
shl
sbb
cmp
fldcw
cmp
imul
jmp
mov
push
adc
mov
leave
and
gs
jae
dec
ins
sbb
adc
and
or
jmp
neg
push
arpl
sub
sbb
repz
out
(bad)
jecxz
mov
xor
sub
mov
movs
mov
scas
outs
and
push
mov
enter
lods
push
and
lods
js
cwde
add
test
pop
mov
jle
sbb
push
call
mov
sbb
js
jbe
test
dec
push
pop
push
sub
shr
rol
lahf
xor
sub
lahf
xor
cmp
sub
aam
pop
outs
mov
or
mov
jmp
icebp
cwde
adc
scas
or
mov
or
lahf
stc
cmp
not
test
iret
ins
int
sbb
outs
push
push
leave
xchg
(bad)
movs
inc
mov
mov
cld
inc
push
mov
pop
jle
fcmovne
outs
sbb
add
adc
xor
jp
push
(bad)
addr16
(bad)
rcr
add
in
loop
inc
xor
xchg
(bad)
in
jecxz
inc
and
and
repz
mov
xor
imul
cmp
iret
add
mov
cmp
div
imul
int3
jae
xchg
retf
mov
adc
imul
xchg
add
inc
mov
xchg
jns
and
lock
call
sti
dec
mov
pop
mov
(bad)
or
daa
les
repnz
add
push
xchg
stc
xor
pushf
cmp
cld
push
(bad)
aaa
jnp
sbb
jecxz
cs
cmp
stc
out
sti
std
mov
dec
push
pop
lods
jmp
sahf
movs
add
jns
neg
ins
(bad)
pop
mov
xor
lahf
jg
ins
xlat
push
push
sbb
fild
mov
aam
test
and
and
push
push
sbb
aas
sbb
mov
in
aas
push
push
dec
sbb
cld
push
(bad)
xor
jmp
iret
jno
push
scas
js
fs
aad
cmp
lahf
outs
imul
xchg
in
inc
pop
out
jp
xor
jecxz
movs
xor
sub
inc
pop
mov
cmp
fisub
xchg
adc
mov
(bad)
(bad)
repz
test
bound
cdq
bound
cmp
mov
pop
aad
scas
mov
inc
movs
(bad)
into
jb
push
pop
sbb
out
fwait
cmc
ss
inc
shl
pop
cmp
xor
pop
adc
imul
push
inc
scas
mov
cmp
cmp
xchg
xchg
xchg
add
mov
jecxz
pusha
ins
stc
idiv
cmp
mul
adc
cld
sbb
and
cli
sahf
mov
and
in
xchg
imul
nop
and
daa
stos
or
iret
cmc
cmp
gs
std
in
retf
icebp
xchg
inc
push
movs
mov
sbb
js
cs
retf
mov
pop
jmp
mov
push
shl
xlat
test
pop
hlt
out
mov
movs
pop
mov
lds
mov
sbb
xchg
lahf
popf
leave
call
inc
movs
push
leave
xor
push
or
mov
xor
or
mov
sub
push
jbe
mov
movs
test
aad
stos
imul
hlt
ds
hlt
test
pop
loop
call
call
mov
mov
pop
lea
in
mov
and
lods
sbb
pushf
jp
sub
mov
call
data16
mov
aas
xor
into
mov
push
ret
jl
mov
mov
mov
shr
sub
push
and
mov
(bad)
retf
jne
pop
and
and
rol
ds
sub
das
loopne
jb
mov
mov
das
inc
int3
clc
das
jge
add
daa
add
inc
mov
(bad)
sbb
movs
test
xor
add
lds
lea
(bad)
es
mov
or
push
sub
xlat
mov
mov
sahf
js
rcr
adc
sub
mov
arpl
(bad)
pand
enter
ins
pop
leave
mov
jmp
std
cmp
adc
jp
xor
mov
inc
inc
and
in
adc
add
mov
sbb
cmc
pop
sbb
stc
pop
(bad)
lds
inc
lock
fwait
mov
gs
xchg
adc
fidiv
jmp
push
mov
add
dec
ins
xor
stos
fsub
or
xor
xchg
dec
and
sar
mov
ret
scas
cld
mov
lahf
outs
sub
add
push
fwait
cwd
aaa
xor
sbb
icebp
pusha
shl
inc
in
ss
(bad)
(bad)
arpl
sbb
mov
div
push
pop
dec
out
add
adc
test
xor
pop
frstor
fsub
fdivr
xchg
leave
sti
jmp
push
cmc
cdq
mov
xor
inc
mov
fcom
xor
fstp
cli
mov
dec
mov
inc
adc
dec
imul
ss
cmp
pop
in
(bad)
fwait
daa
(bad)
(bad)
addr16
call
rol
lea
jmp
push
loopne
cld
sahf
push
iret
dec
jl
dec
and
push
mov
int3
shl
xchg
mov
(bad)
sub
ss
adc
xchg
push
cmc
pop
and
push
adc
addr16
mov
mov
jp
mov
add
inc
iret
daa
or
pop
xchg
pushf
ins
xor
pop
outs
add
(bad)
aas
adc
mov
lods
xchg
mov
les
shr
mov
xchg
push
lds
jo
stos
ror
sbb
push
int3
dec
xor
out
xchg
jno
push
mov
mov
enter
ficomp
into
ja
add
imul
mov
movs
adc
jo
clc
add
sbb
sub
push
out
mov
into
pop
push
imul
jl
sbb
sahf
push
es
pop
(bad)
jg
fidiv
aas
sbb
sbb
enter
ficom
das
pop
neg
(bad)
pop
inc
cmp
dec
push
fwait
xchg
inc
call
mov
clc
push
nop
clc
bound
fdivr
jle
xor
xor
outs
mov
add
fwait
ins
retf
sahf
fstp
dec
ret
jb
cld
movs
cmp
outs
inc
xchg
popf
gs
call
dec
and
pop
sub
div
sti
out
stc
addr16
xor
jp
sub
ins
cmps
and
pushf
gs
aaa
clc
aas
mov
js
cmp
xor
daa
pop
jae
aad
jns
sti
fistp
or
pop
pop
test
enter
mov
stos
xchg
sub
lahf
fsub
jmp
inc
pop
jns
push
jnp
outs
mov
cmp
xlat
mov
es
dec
mov
rcr
or
mov
jmp
xchg
mov
(bad)
pop
add
fisttp
push
out
aaa
je
or
div
hlt
dec
jle
xor
sub
jno
loope
sbb
jmp
jg
sbb
in
add
test
fisubr
in
scas
xchg
cld
ret
push
ds
inc
movs
cmp
jae
pop
fmul
adc
sub
dec
push
ins
mov
sub
cli
dec
adc
lea
jl
popf
retf
inc
pop
xor
mov
in
aad
inc
xchg
cmp
cmp
dec
pop
cmp
pop
dec
lods
sti
inc
mov
jp
sub
dec
sbb
or
sub
fwait
lods
(bad)
sbb
ins
fwait
out
and
or
xchg
aaa
add
jns
ds
addr16
mov
sub
add
les
sbb
mov
mov
sbb
jp
dec
pop
loope
pop
mov
pop
pop
cmc
test
movs
xchg
jmp
jns
call
out
add
cmp
sbb
fnstcw
leave
pop
repz
add
dec
xchg
mul
dec
int3
cs
(bad)
push
fiadd
mov
add
(bad)
xchg
mov
inc
xchg
call
mov
js
inc
pop
lods
stos
inc
xchg
and
cmp
dec
jnp
retf
jbe
push
out
sbb
dec
pop
pop
fwait
xchg
or
rcl
pop
mov
and
in
sub
lods
mov
hlt
dec
ds
dec
aam
inc
adc
call
movs
cmc
das
pop
test
pop
pusha
scas
jecxz
pop
js
mov
jle
cmp
pop
sub
leave
sbb
neg
mov
xchg
mov
lock
les
repz
int3
mov
push
cmps
aas
cmp
pop
mov
fst
cmp
inc
stc
sub
dec
neg
adc
out
outs
gs
or
sbb
jb
adc
scas
ja
inc
xchg
push
outs
or
stc
mov
daa
mov
enter
(bad)
jb
imul
push
jne
into
xchg
mov
mov
mov
sub
fcomp
out
mov
inc
jb
xor
ss
push
sti
xor
xchg
jle
and
outs
mov
in
push
out
add
mov
aad
repnz
xchg
xchg
(bad)
mov
in
adc
xchg
fs
xchg
inc
cmps
cmp
into
adc
in
inc
popa
ins
popf
jecxz
cmp
jp
in
cwde
pop
mov
ja
or
mov
mov
pop
test
js
ja
xchg
sar
xchg
js
jbe
sub
movlps
mov
movs
xchg
add
mov
cmp
or
outs
mov
(bad)
std
test
pushf
aaa
add
call
push
inc
sub
imul
(bad)
ins
inc
dec
and
dec
fcmove
ret
jmp
adc
jbe
pop
inc
xchg
xlat
mov
(bad)
fsubr
sbb
test
std
movs
jo
xchg
lods
aam
or
dec
pop
xor
xor
push
mov
fcom
push
dec
retf
cmp
rol
dec
iret
hlt
lahf
sbb
in
outs
scas
xor
dec
lahf
imul
mov
ficom
repz
and
in
std
in
xor
imul
cmp
mov
jnp
aas
jns
inc
xor
cmp
int
xchg
mov
arpl
pop
movs
inc
pop
das
or
dec
cmps
jmp
out
xchg
js
test
push
repz
sbb
xchg
js
and
xchg
popa
dec
inc
sbb
mov
(bad)
in
aad
jle
push
dec
sub
jo
xchg
daa
outs
cli
retf
ss
fsubr
push
jp
test
sbb
mov
jno
cli
mov
adc
popf
or
(bad)
jle
inc
cmp
push
add
and
(bad)
shr
lock
(bad)
sub
cmp
cmps
mov
fwait
imul
mov
jns
(bad)
(bad)
pop
popa
out
cld
mov
loop
xchg
or
add
popf
std
test
mov
mov
mov
push
fcom
mov
ins
mov
retf
jmp
shr
fcmovnbe
jo
push
sti
jp
mov
scas
xchg
cwde
repz
jge
push
aad
push
movs
loope
jg
or
ja
inc
push
mov
pop
fs
jge
xchg
dec
inc
scas
mov
jp
mov
vmread
ss
icebp
xor
xor
jnp
movs
(bad)
cmp
js
(bad)
and
fidiv
in
stos
cmp
cmp
fldcw
push
sbb
mov
push
push
pop
pop
sub
ret
imul
lods
inc
popf
pop
cdq
jmp
stc
dec
call
jl
push
jae
aad
sahf
std
mov
inc
inc
fldcw
std
sbb
repz
popa
push
mov
sti
jne
jae
test
mov
imul
in
fsubr
popf
movs
cmp
shl
lahf
inc
push
mov
out
cmp
lea
fs
stos
in
stos
stos
inc
rcl
data16
es
xchg
cwde
cmp
es
cs
lods
loop
rcr
shl
sbb
sbb
cdq
inc
push
mov
neg
lods
fs
xchg
jo
scas
in
sub
sub
inc
add
test
xchg
adc
scas
jnp
ins
jmp
fdivr
xor
pop
xor
mov
setp
jmp
out
push
xchg
jb
lock
ret
movs
gs
aas
xchg
imul
int3
dec
(bad)
xchg
or
sub
push
mov
das
sahf
les
adc
push
data16
cmp
outs
out
push
adc
mov
sti
adc
xchg
(bad)
repz
aad
pusha
lods
or
cs
das
mov
add
jl
dec
and
add
and
pop
je
shl
das
xor
and
cli
scas
mov
mov
into
scas
shl
cmp
or
imul
ret
pop
or
out
xchg
ins
sbb
shr
(bad)
retf
dec
xor
int
xchg
mov
movs
sbb
xchg
xlat
xor
inc
ins
(bad)
into
and
movs
arpl
lea
mov
mov
jmp
gs
dec
inc
dec
xor
push
pushf
arpl
xor
test
push
jae
mov
or
mov
sbb
xchg
pop
pop
push
iret
dec
dec
call
jmp
data16
fnstsw
cmp
xor
das
mov
jmp
xor
gs
repnz
mov
adc
sbb
mov
adc
test
in
icebp
sti
sbb
stc
enter
push
mov
stc
stos
out
loope
inc
es
adc
imul
test
iret
pop
mov
or
xchg
add
popf
adc
mov
adc
or
add
test
adc
cmps
sbb
sbb
mul
adc
adc
es
push
out
call
dec
(bad)
adc
arpl
push
sub
xor
cmc
cli
in
mov
(bad)
xor
not
ins
popf
fcomi
cmp
jp
call
xchg
and
sub
sub
xor
fld
push
movs
mov
mov
jbe
cmc
aad
xchg
inc
fcmovne
addr16
mov
sbb
mov
inc
sbb
xlat
mov
in
and
sub
ins
sub
push
pop
add
mov
dec
xor
pusha
add
ds
jns
sbb
(bad)
fcomp
ja
add
add
push
dec
fnsave
call
mov
and
cmp
jmp
add
loope
mov
int
sbb
xchg
pop
mov
pop
aam
mov
retf
mov
scas
popa
mov
iret
ror
outs
xchg
test
je
cmp
cmp
int3
sbb
or
movs
repz
push
outs
jne
pop
mov
mov
pop
xchg
jo
std
xchg
or
retf
ins
lock
cmp
and
(bad)
ins
mov
or
inc
inc
jb
xchg
or
mov
call
fadd
repnz
lods
add
imul
shl
mov
pop
jle
adc
dec
leave
jmp
cmp
cmp
pusha
xor
push
call
fwait
out
lock
and
xor
int
sub
sub
ins
lock
push
das
fidiv
or
add
jnp
jmp
js
inc
iret
inc
cmp
jmp
push
add
cmp
std
and
dec
clc
aaa
mov
jae
xor
cmp
mov
cs
cld
adc
and
fsubr
int3
jo
mov
and
mov
std
push
mov
adc
lods
push
sbb
das
out
fcmovne
push
mov
sub
rcr
cmp
jo
data16
dec
ins
adc
int3
sub
sub
pop
sahf
push
pop
inc
inc
(bad)
pop
in
xlat
xlat
stc
fmul
in
das
jmp
pop
pop
sub
cmps
dec
mov
fmul
aas
clc
mov
xchg
push
cld
popa
lods
iret
xor
mov
sub
pop
xchg
add
jnp
sbb
cs
fisub
xor
xor
lock
or
fnsave
jne
cmp
add
jmp
ja
popf
les
and
jno
push
sahf
xchg
cmps
sbb
cmc
pushf
dec
sbb
lahf
xchg
ins
and
pop
inc
loopne
repnz
xchg
mov
mov
daa
lock
int
nop
and
int3
test
loopne
or
lds
pop
sub
jmp
mov
aad
aad
or
loope
daa
sub
rcr
sub
pop
mov
sub
adc
xchg
out
cdq
inc
push
mov
pop
add
xchg
repz
out
pusha
loope
add
mov
and
(bad)
push
jmp
add
inc
mov
ss
adc
daa
lock
inc
(bad)
mov
xor
ss
std
enter
test
pminsw
xlat
int
xchg
inc
dec
neg
pop
sahf
mov
cmps
jecxz
mov
(bad)
imul
aad
xlat
inc
dec
int3
je
push
in
sbb
and
cmp
xor
jl
ss
fcomp
(bad)
enter
add
fucomip
adc
ja
(bad)
out
pop
xlat
scas
add
xor
or
in
(bad)
arpl
cmp
outs
xchg
jl
push
pop
movs
nop
ja
inc
js
dec
loope
fdiv
int3
mov
add
sar
jae
dec
cmp
aaa
push
scas
jnp
imul
repz
add
test
sbb
scas
push
jno
shr
dec
mov
or
jle
mov
or
push
add
mov
je
loopne
mov
movs
ins
retf
sbb
mov
add
icebp
je
sub
xchg
test
add
stc
pop
sbb
mov
xor
cwde
cmp
and
aas
cmp
nop
or
aas
es
enter
xlat
test
(bad)
pop
sub
shl
push
sbb
icebp
jle
scas
xor
or
inc
fldenv
gs
aam
add
xchg
dec
repz
mov
sbb
out
mov
bound
dec
mov
mov
jns
jg
sub
xor
xchg
or
mov
xor
jbe
xor
out
ret
inc
or
cli
mov
inc
enter
movs
mov
(bad)
(bad)
jl
push
(bad)
cld
pop
pushf
idiv
in
gs
(bad)
mov
mov
jp
and
mov
loope
xchg
or
sbb
cwde
mov
pop
jne
scas
jae
push
mov
data16
scas
and
pop
cld
call
cmc
adc
cs
inc
sbb
aaa
in
and
pop
pushf
mov
ret
cmp
scas
lea
sub
or
pop
sub
iret
push
les
sub
es
add
lods
jns
es
addr16
sbb
add
or
push
inc
dec
enter
xor
movs
inc
faddp
cld
xor
int
mov
test
xchg
pop
in
or
and
pop
inc
nop
stc
iret
jns
mov
outs
mov
iret
jno
inc
mov
jns
push
test
std
out
out
stc
scas
push
add
pop
jp
lock
addr16
cmps
lods
pop
cmp
inc
adc
shr
loope
enter
loop
jo
inc
push
fstp
inc
adc
adc
dec
dec
xchg
popf
pop
cwde
jo
xor
lea
adc
cmp
jns
idiv
cmps
fsubp
xchg
inc
mov
sbb
shr
push
xchg
(bad)
ficomp
sahf
push
aaa
jne
dec
mov
or
mov
mov
xchg
jo
in
mov
mov
adc
push
xor
inc
adc
push
cmp
pop
mov
xchg
or
or
xlat
scas
dec
push
cmps
xor
adc
ror
out
ins
mov
sbb
pop
adc
pop
data16
or
push
bnd
fnstenv
les
cmps
sub
or
cdq
adc
sbb
pop
sahf
mov
rol
or
ficomp
mov
or
push
std
jmp
pop
iret
daa
jle
sbb
cwde
call
mov
pusha
fisttp
and
frstor
mov
xor
mov
jl
adc
xchg
sub
xchg
adc
inc
cld
push
dec
jb
test
xchg
cmps
xchg
bound
mov
jne
movs
jns
nop
and
or
sub
neg
cld
cs
add
cmp
add
push
(bad)
div
jecxz
arpl
fadd
sti
sbb
push
rcr
add
cmps
fsub
test
push
outs
imul
retf
mov
add
and
leave
push
pop
dec
xchg
shl
jmp
pop
fldcw
mov
push
cmp
lock
sub
lods
vucomisd
in
ret
dec
pushfw
push
pushf
and
outs
push
jne
xchg
mov
cwde
xchg
push
div
cld
xor
mov
push
psubusb
aas
push
dec
nop
or
xchg
daa
pop
les
mov
pop
lods
mov
add
(bad)
add
jp
mov
stc
jnp
ja
dec
xchg
popf
dec
ror
inc
shl
out
mov
jno
inc
daa
ja
mov
stos
xor
and
leave
jmp
aas
out
cld
ret
mov
xor
jp
rcr
mov
mov
cmp
iret
sub
js
icebp
mov
adc
stos
sbb
xchg
gs
jp
sti
push
sbb
repnz
mov
push
aad
fild
clc
stmxcsr
mov
ja
repz
scas
jbe
xor
scas
cmps
mov
mov
arpl
bound
aad
cwde
sub
adc
sub
loope
aam
xchg
nop
cld
sbb
pop
addr16
ins
fwait
mov
mov
scas
mov
jbe
push
out
imul
jmp
and
movs
push
dec
mov
dec
mov
out
cmp
loop
or
cld
gs
push
rcr
jne
cwde
ss
xchg
jno
inc
(bad)
mov
fbld
mov
in
pop
adc
mov
dec
mov
(bad)
jmp
or
sub
cmp
pop
push
stc
adc
rcr
cmp
aaa
jae
push
jecxz
and
int3
and
jg
dec
sub
pop
mov
xchg
dec
ss
and
inc
mov
scas
push
mov
(bad)
pop
sbb
pop
xor
xor
leave
mov
push
es
or
dec
adc
xor
cs
lods
adc
in
inc
addr16
outs
jae
add
cmp
xchg
and
adc
jae
dec
std
adc
adc
popf
pop
cwde
add
scas
pop
jl
arpl
lods
popf
mov
xor
push
mov
xor
sbb
adc
adc
cmp
xor
dec
or
mov
gs
fnsave
test
stc
in
push
mov
cmps
scas
ins
(bad)
mov
pop
and
mov
jmp
daa
mov
fcmovbe
ins
cld
lea
jmp
push
lock
push
idiv
inc
bound
inc
shl
or
fisttp
adc
sub
push
push
dec
or
or
xor
cmp
xchg
inc
pop
ficom
outs
jge
xchg
xchg
outs
js
pusha
out
mov
dec
cmp
sbb
xchg
mov
cdq
mov
nop
lahf
add
cmp
popa
aam
xor
clc
cmps
xchg
add
es
psubusw
sub
mov
inc
dec
mov
mov
sbb
jno
cmps
lahf
out
iret
sar
scas
or
fimul
add
rcpps
xor
mov
and
jb
mov
pop
pop
adc
cmp
push
shl
and
jo
in
(bad)
pushf
imul
cmp
(bad)
jae
sar
nop
repz
loopne
pop
jae
fisub
cli
js
jo
sub
push
lods
jmp
shl
jb
cs
dec
rol
xchg
(bad)
jb
fwait
sti
shl
(bad)
cli
stos
sbb
rcr
inc
aas
(bad)
dec
mov
and
leave
mov
(bad)
mov
bound
repnz
aad
jmp
jg
and
cmp
jno
xor
push
inc
icebp
mov
dec
xchg
shr
and
cli
inc
ffree
xchg
sub
cmp
pop
mov
pushf
retf
push
lahf
sub
push
bound
xor
call
adc
cmovae
mov
int
sti
pop
shl
pop
test
out
mov
test
add
popf
lea
sbb
arpl
test
leave
imul
int
mov
mov
jns
call
push
cdq
out
dec
addr16
mov
fadd
and
call
fadd
pop
stos
and
(bad)
clc
mov
nop
push
sub
mov
add
in
ficom
fidivr
mov
in
fcomp
mov
aaa
or
pop
clc
jge
mov
push
cmp
push
cmc
das
inc
sti
test
jb
jecxz
je
jbe
stos
dec
add
icebp
das
mov
mov
(bad)
xchg
mov
(bad)
cmp
dec
push
and
xchg
pop
lds
ret
cmp
dec
push
cwde
aas
lds
sbb
fdiv
(bad)
sbb
cmps
call
sar
sbb
shr
sbb
in
xchg
cmps
pop
xchg
(bad)
xchg
cmp
xchg
xlat
adc
add
push
inc
iret
sbb
pop
mov
bnd
mov
stos
sub
clc
repz
mov
js
movs
add
sti
clc
movs
adc
cmp
xor
jge
fisttp
jge
mov
push
je
sub
inc
scas
fisttp
cwde
xlat
(bad)
outs
inc
push
test
bound
jo
push
pop
sub
aas
add
mov
and
fcmovbe
mul
loopne
cmp
aam
clc
call
test
hlt
ret
sub
call
xlat
adc
cld
test
addr16
test
adc
add
dec
pop
inc
aad
ret
mov
loop
ins
into
mov
int
jbe
in
inc
test
sbb
je
cwde
hlt
hlt
and
popa
and
adc
jp
sbb
pusha
loopne
les
xchg
or
xchg
ds
std
dec
hlt
lds
sbb
lahf
adc
cmp
stc
pop
ins
adc
call
add
fstp
add
mov
sub
nop
shl
out
or
popf
das
sbb
fsubr
xor
int3
lods
cmps
add
loopne
sar
test
(bad)
mov
push
sub
inc
cmp
xor
mov
lea
mov
scas
std
lahf
sub
inc
push
movs
es
aam
nop
mov
add
loop
neg
jo
sar
ret
cdq
cmp
pop
mov
mov
arpl
mov
js
lock
and
lock
test
add
ins
sub
jp
stc
call
jle
(bad)
and
xor
retf
jns
sub
xchg
es
dec
inc
mov
call
not
test
cld
cmps
sub
sub
in
in
fcmovu
imul
pop
inc
(bad)
push
cdq
aaa
les
in
adc
sbb
mov
mov
or
mov
and
sub
xor
jg
aaa
sbb
leave
fisubr
adc
sub
pop
bnd
inc
(bad)
jmp
loope
imul
dec
sub
and
aaa
inc
stc
das
ficom
jge
iret
int3
jg
fstp
pop
stc
les
mov
fstp
fwait
shr
xchg
into
xchg
das
xor
aas
inc
fwait
iret
sub
or
xchg
fisubr
ss
jmp
pop
xor
sub
(bad)
fcomip
(bad)
in
jmp
mov
mov
in
lods
jmp
clc
pop
inc
leave
sub
aad
clc
gs
mov
mov
ins
push
dec
ret
pop
mov
loope
rdpmc
add
push
mov
cmp
cmps
jge
sbb
inc
jae
test
dec
outs
push
out
cmps
adc
fidivr
loope
jl
mov
cmp
ret
adc
pop
outs
lods
lock
call
mov
and
ds
loope
add
and
addr16
jg
(bad)
pop
fs
stos
inc
out
jns
int3
push
ja
rcl
inc
adc
retf
and
adc
ror
pop
inc
mov
xor
aad
fs
test
div
mov
cld
imul
mov
sahf
add
hlt
lahf
mov
and
pop
mov
or
jmp
pop
leave
pop
out
pop
fcomi
in
test
arpl
sub
mov
and
pop
popa
adc
push
js
adc
movs
xchg
bswap
cmp
push
inc
dec
inc
inc
cli
push
push
mov
sub
(bad)
pop
jecxz
(bad)
fild
or
mov
aaa
fstp
push
repnz
mov
mov
test
int3
ja
repnz
ja
lahf
adc
adc
inc
pop
mov
adc
out
and
inc
jle
and
ins
gs
push
cmps
dec
jl
imul
add
mov
dec
xchg
scas
mov
(bad)
mov
inc
xor
iret
stos
mov
hlt
data16
sbb
jmp
mov
cli
out
inc
mov
jg
int
sbb
push
in
test
outs
adc
push
sub
cmp
aad
inc
(bad)
mov
out
add
sbb
or
ins
dec
cli
retf
fcomp
fs
enter
call
and
inc
xor
pop
fs
outs
scas
push
leave
jne
repz
cmp
inc
xchg
shr
push
sbb
stos
or
mov
jbe
add
and
mov
xchg
and
jmp
dec
mov
mov
prefetchw
rol
mov
in
cmp
jnp
xor
inc
dec
les
fst
mov
imul
xchg
fsub
xchg
fistp
test
ror
mov
scas
loope
(bad)
mov
adc
sar
daa
mov
xchg
inc
add
inc
jnp
addr16
int
inc
add
xor
pop
xor
cmp
or
mov
mov
mov
out
test
daa
jmp
jbe
aam
sub
jb
sub
out
pushf
(bad)
dec
paddsw
or
sub
or
test
test
mov
add
adc
es
std
sbb
das
mov
lods
xlat
add
dec
imul
fcomp
das
push
pop
jle
pop
cwde
jo
push
scas
fcomp
in
cdq
inc
lods
sar
jecxz
pop
call
loop
sbb
lahf
pop
xchg
ja
mov
cwde
and
add
push
and
sahf
adc
jne
and
and
(bad)
int
jnp
push
mov
xchg
(bad)
call
ret
sbb
xchg
add
pop
(bad)
sbb
scas
add
pmaxsw
mov
jmp
inc
or
dec
jae
push
cmps
sub
inc
inc
rcl
push
mov
jno
cwde
push
jb
mov
inc
add
unpcklps
or
lahf
stos
mov
adc
sbb
push
loopne
ja
fs
stos
mov
data16
adc
add
cmp
repz
jo
jp
fwait
xchg
hlt
sub
outs
fiadd
cmc
pop
dec
xchg
cli
jo
les
(bad)
jmp
cmps
mov
sub
popa
cmp
outs
fisttp
cmp
ror
jl
movs
fwait
jnp
in
movs
pop
fwait
ins
add
sti
loop
pop
mov
add
nop
clc
xlat
sbb
in
push
pop
adc
dec
ret
xchg
add
sbb
xchg
pop
mov
cwde
not
test
mov
ins
fsubr
movs
aas
jb
mov
cmp
and
sub
sbb
and
test
jnp
cmp
stc
stos
push
rcr
mov
dec
les
xchg
adc
xor
enter
mov
pop
pop
lock
mov
mov
iret
jbe
call
xchg
push
mov
cdq
scas
arpl
aaa
mov
int
fs
test
fwait
jmp
mov
xchg
(bad)
dec
sbb
sub
loop
or
fs
jp
jnp
dec
mov
rol
mov
loopne
mov
sahf
sbb
loopne
add
cmp
xchg
jmp
mov
retf
pop
mov
dec
or
inc
sub
xor
xchg
and
jae
xor
scas
mov
mov
out
out
add
sahf
js
push
dec
push
pushf
sbb
gs
xor
sbb
xchg
lods
dec
pop
cmova
adc
push
lods
je
outs
jl
loope
(bad)
mov
mov
ds
mov
ins
dec
mov
scas
dec
mov
stos
dec
jne
repz
or
adc
sti
or
mov
fild
pop
movs
jmp
fs
add
mov
mov
jl
cmp
cmp
call
lods
lahf
xchg
fcmove
out
in
mov
hlt
sbb
fstp
pop
lahf
dec
and
lods
cmp
fisub
retf
bound
fld
cmp
inc
cli
dec
enter
push
pop
mov
adc
cmp
jge
cmp
sbb
cmps
or
cs
push
in
mov
test
aad
cmp
jb
mov
xor
and
mov
push
lock
add
xor
bound
push
lock
sahf
jb
inc
ret
mov
mov
cmp
repnz
mov
shr
cmp
mov
loope
retf
retf
movs
(bad)
out
clc
imul
or
add
dec
scas
(bad)
(bad)
cwde
and
xchg
ror
jecxz
pop
sub
dec
mov
or
or
mov
fs
retf
add
retf
aaa
jns
jge
fdivr
and
fild
stos
in
popa
rol
push
dec
aaa
push
ficom
add
(bad)
test
hlt
adc
ror
mov
inc
cmp
int3
sub
mov
and
imul
push
and
stc
xchg
and
shl
sbb
jge
jae
rol
dec
mov
xor
(bad)
test
jle
jp
dec
jno
inc
dec
jno
gs
push
repz
jl
sahf
mov
xchg
out
ret
or
xchg
xlat
out
mov
mov
jno
(bad)
push
and
pop
dec
hlt
cwde
push
or
dec
inc
mov
adc
adc
(bad)
jl
ror
jmp
shl
xor
scas
loop
xor
sbb
push
ins
jne
add
cmps
xchg
push
int
push
je
lock
adc
(bad)
cmp
jl
sub
dec
rcr
mov
fidivr
xchg
cwde
cmps
sub
mov
ins
cmp
jne
stc
in
push
cmp
push
jle
mul
inc
inc
loopne
and
xchg
dec
pop
into
sbb
mov
mov
mov
ficom
mov
xchg
jp
sub
mov
jg
retf
and
jmp
add
add
out
sub
xchg
(bad)
pop
mov
mov
jmp
retf
mov
push
fsubr
out
cmp
bound
xor
adc
push
lds
add
nop
jb
jb
jg
pop
jae
xor
jl
fisttp
test
xchg
arpl
cmp
out
test
pop
iret
cdq
aaa
(bad)
repnz
pusha
push
cmps
(bad)
cmps
rdmsr
xlat
mov
and
cmc
retf
fidivr
or
loop
jae
pushf
mov
or
push
out
mov
fimul
jns
mov
shl
add
pop
pop
test
push
(bad)
cmps
jbe
or
fcom
fnstcw
hlt
mov
ror
stc
adc
mov
mov
in
add
aad
mov
ja
jg
xor
xchg
fcmovnu
stc
mov
push
mov
and
setg
or
rcr
test
int
push
sbb
(bad)
ins
cmp
adc
mov
push
push
hlt
das
sub
sti
outs
movs
scas
popa
sbb
or
xor
test
inc
dec
jmp
xchg
push
fwait
and
mov
or
cmc
(bad)
loopne
dec
shl
pushf
stos
push
mov
push
shl
call
scas
jns
push
ins
imul
fcomp
mov
in
xor
pop
and
mov
jp
out
aam
fwait
ins
xor
jmp
fsubr
mov
jbe
(bad)
push
jo
test
push
outs
mov
pop
inc
and
lds
xor
out
dec
int
(bad)
loopne
fld
mov
cmp
loopne
xor
inc
add
aaa
ja
sbb
in
inc
and
push
inc
sub
(bad)
imul
fbstp
shl
jns
cmps
inc
sub
push
cmp
mov
movs
popf
out
(bad)
ficom
jg
mov
add
xor
in
xchg
dec
jae
push
sub
xchg
push
add
scas
dec
sbb
pop
fnstenv
pusha
push
test
or
add
mov
stc
loope
stos
jp
xor
js
push
xor
sahf
cdq
mov
aam
pusha
cdq
jg
pusha
and
fdivr
push
outs
cmp
fcmovne
shl
shl
in
out
inc
mul
out
adc
cmp
xchg
leave
fstp
mov
inc
shl
lock
shl
or
pop
mov
mov
jno
xchg
xchg
cmp
rol
sbb
cmp
test
dec
dec
stos
and
cmps
(bad)
es
sub
xor
pop
push
data16
lods
inc
sbb
std
dec
nop
xchg
inc
sub
sbb
jae
pushw
pop
stos
pop
test
stc
mov
mov
xchg
push
cld
mov
push
jnp
mov
dec
cmp
sub
rcl
popa
mov
stos
sar
pop
js
jle
dec
fcom
adc
enter
sbb
mov
das
xchg
sti
push
xlat
cmp
mov
ins
outs
sti
in
and
outs
jo
in
mov
mov
cmp
or
mov
pop
in
mov
inc
outs
cli
mov
pop
fidivr
sbb
mov
popa
sti
into
push
mov
aam
mov
add
push
into
cmc
dec
xchg
mov
and
xchg
rol
sbb
mov
test
xchg
cmp
lock
rcl
mov
push
push
sub
sbb
mov
cmp
xor
or
test
xchg
lods
jae
cwde
mov
pushf
add
xor
mov
ins
add
out
leave
add
xor
rol
dec
adc
pop
dec
jne
push
mov
std
repz
test
push
dec
jecxz
sbb
lea
push
das
outs
ret
dec
sub
(bad)
sub
push
sbb
pop
inc
adc
xchg
inc
sahf
jl
xor
ins
adc
lea
mov
jmp
cld
loopne
pop
push
clc
stc
xor
mov
dec
inc
mov
cld
or
xchg
mov
xchg
mov
push
test
loope
je
rcl
jb
fiadd
ins
xchg
bound
xchg
xchg
add
inc
movs
(bad)
iret
fild
jns
mov
jmp
dec
jo
pop
cwde
pop
test
div
out
loop
pop
inc
mov
(bad)
imul
jecxz
loopne
jns
test
retf
inc
pop
add
out
mov
mov
je
mov
inc
rol
adc
jge
int
push
adc
(bad)
out
stos
aad
hlt
test
aad
dec
adc
sbb
or
addr16
in
jbe
test
add
mov
add
pop
xchg
retf
mov
xor
loop
retf
movs
cmps
je
cmp
push
js
lock
mov
xlat
mov
arpl
xor
inc
fild
sti
sahf
jb
dec
and
pop
outs
lods
cmp
mov
xchg
(bad)
fidiv
push
mov
xor
(bad)
add
fmul
sub
inc
daa
jae
test
out
mov
or
(bad)
mov
ja
sti
jge
xchg
(bad)
retf
add
adc
pop
test
cli
imul
rcl
daa
push
retf
test
jg
call
repz
jae
sbb
xchg
cld
add
repnz
or
xchg
dec
daa
inc
mov
(bad)
aas
(bad)
ss
jo
pop
xchg
cmp
mov
xchg
inc
out
ins
imul
and
out
pop
mov
lea
add
xchg
push
jo
jno
mov
mov
into
inc
jl
int
jb
test
test
adc
jge
cmc
jg
xchg
xor
and
pop
or
inc
repnz
inc
pop
sbb
push
inc
movs
inc
aas
repnz
popa
(bad)
jae
adc
pop
cs
out
push
test
adc
and
mov
push
add
outs
addps
inc
das
pop
iret
jno
xor
stos
cdq
rol
sbb
out
xchg
test
fild
retf
je
inc
das
jb
bound
adc
jecxz
add
xlat
xchg
iret
imul
jne
imul
icebp
out
rcl
and
xlat
sbb
leave
cmps
int
sub
fisttp
das
push
xor
jb
gs
mov
std
int3
sbb
iret
xchg
shl
mov
out
xor
add
rcr
addr16
mov
fcom
jo
fnstsw
jmp
adc
in
rcl
rcl
arpl
dec
xor
mov
cli
adc
pop
int
sbb
mov
repz
jmp
xor
pusha
xchg
cmp
div
imul
std
jl
push
pop
and
fs
movs
ins
push
jnp
push
int
add
adc
inc
std
test
ret
scas
scas
jmp
shl
push
push
cmp
ja
push
movs
lock
jb
xchg
pop
mov
pop
pop
dec
pop
daa
lods
mov
cmp
mov
loop
jne
inc
int3
test
sbb
mov
push
adc
int
xchg
push
sbb
adc
inc
shl
push
out
sbb
into
jbe
xor
mov
(bad)
sbb
jmp
out
ds
pop
pop
cmps
pop
pop
pop
add
push
cs
mov
data16
xchg
adc
sbb
add
xchg
ficomp
xchg
outs
mov
pop
mov
out
stos
dec
in
fcmovnbe
fmulp
outs
std
jecxz
cmp
icebp
stos
push
(bad)
aad
shr
dec
das
lds
adc
je
jmp
addr16
push
(bad)
neg
jmp
pop
jp
leave
inc
xchg
mov
xor
shr
shl
retf
popa
repz
arpl
dec
cmp
push
cwde
pop
mov
adc
std
jmp
mov
cmc
xor
mov
xchg
push
ret
ins
rcl
dec
push
enter
fnsave
mov
stc
in
jge
dec
test
(bad)
sti
and
mov
xor
sar
ins
adc
adc
add
push
xor
dec
in
outs
sahf
loopne
jl
jle
ins
or
data16
mov
pop
dec
pop
sub
dec
shl
(bad)
js
cmp
jl
adc
leave
mov
shl
sub
and
(bad)
adc
and
xchg
bound
jno
icebp
cdq
add
inc
add
mov
xor
push
push
pop
push
pop
cmp
cmp
and
int
loop
inc
test
adc
add
mov
mov
stos
in
dec
jae
in
lods
popf
mov
arpl
mov
(bad)
call
ficom
fs
or
ins
adc
add
inc
mov
pop
ins
movs
sub
(bad)
cmp
shl
add
and
fwait
xor
cli
ret
mov
jne
repz
bound
fisubr
clc
add
mov
in
dec
sub
(bad)
push
adc
das
into
mov
xchg
stc
mov
xor
and
dec
pop
je
mov
sub
xchg
cld
int
jns
fs
cmc
cmp
(bad)
mov
push
sbb
sar
(bad)
inc
mov
push
retfw
push
loopne
xor
in
fnsave
mov
xchg
arpl
sub
mov
jle
adc
in
mov
xor
cmp
cmc
mov
inc
ja
sti
jp
enter
gs
in
jp
idiv
xor
test
xor
loopne
jmp
rcl
push
lods
test
sbb
fcom
call
ds
mov
sub
add
xchg
mov
add
ins
popa
push
imul
push
stc
add
add
jge
leave
dec
push
call
inc
jg
inc
mov
xor
or
jecxz
adc
mov
cmp
pop
lods
xor
add
repz
sbb
ud1
and
add
repz
dec
mov
mov
or
mov
(bad)
popf
cwde
or
jno
sub
mov
mov
es
jp
ins
stc
jg
iret
iret
in
push
pusha
lock
test
xchg
pop
and
and
stos
int
mov
lods
or
bound
pop
push
sub
ins
sbb
ins
pop
jno
into
xchg
xor
jae
shr
jmp
or
std
loope
in
or
sbb
hlt
aam
add
(bad)
jp
out
cmp
push
test
mov
arpl
jl
mov
mov
or
push
mov
mov
pop
jp
test
mov
outs
mov
xor
mov
pop
ss
outs
sbb
mov
jno
rcr
repz
push
jle
retf
loopne
and
mov
jb
lahf
or
inc
aaa
mov
(bad)
push
push
sbb
cmp
retf
adc
adc
call
iret
or
adc
pop
pop
push
add
mov
aaa
imul
test
enter
sub
push
xchg
mov
xor
ss
mov
add
mov
call
call
jmp
int3
mov
mov
out
push
cmp
sar
push
adc
das
pop
sub
int3
adc
pop
mov
xor
js
push
in
inc
ins
jg
mov
scas
dec
ds
xor
call
adc
mov
gs
xchg
pop
arpl
rcl
fistp
out
lahf
push
push
mov
mov
(bad)
mov
loope
(bad)
(bad)
cmps
adc
fnstenv
sbb
jmp
dec
repz
lock
mov
pop
and
pushf
xor
mov
popf
mov
sar
xchg
add
(bad)
fist
mov
mov
mov
in
inc
dec
xchg
scas
enter
fdivr
in
iret
or
jnp
mov
pop
cmp
xor
out
xor
ret
loope
and
xor
ror
ins
stc
nop
pop
pop
repz
in
cmp
int
das
repnz
dec
icebp
mov
mov
outs
or
sti
scas
xchg
dec
fwait
ds
adc
and
push
mov
dec
fwait
mov
(bad)
fldcw
dec
push
leave
dec
and
pop
pop
in
loope
jmp
loopne
cwde
cmp
push
out
movs
or
mov
enter
lods
cmp
test
sahf
jg
mov
mov
xor
add
popf
pop
mov
stos
mov
cmc
add
rol
iret
or
adc
cmp
push
jnp
test
xor
and
sub
ins
jmp
inc
ret
ins
push
lea
dec
add
nop
jbe
xor
pop
out
test
arpl
inc
lds
into
push
cmp
xchg
adc
aaa
leave
xchg
sub
addr16
xor
mov
push
iret
les
push
or
shr
clc
mov
push
pop
push
(bad)
inc
pop
in
mov
shr
or
fs
jbe
jg
(bad)
popa
outs
adc
dec
add
push
cmps
stos
mov
sbb
ret
rcr
dec
mov
push
(bad)
shr
je
mov
rol
call
sub
adc
fbld
xchg
dec
mov
sbb
aad
xor
movs
arpl
mov
je
outs
test
fnstenv
push
fimul
inc
int3
add
jno
push
sub
xor
call
xor
sub
das
pop
xchg
sub
xor
xlat
sub
or
push
inc
add
sahf
in
sbb
mov
or
fsub
and
and
vsubss
ins
gs
cmp
loop
enter
push
sbb
cmp
jle
js
mov
sahf
mov
jmp
fs
(bad)
cmp
lock
aaa
mov
loope
pop
pop
test
dec
mov
repnz
shl
ret
and
std
aad
push
or
jge
jmp
jmp
jbe
mov
movs
xchg
cmp
arpl
jae
fnstenv
mov
movs
mov
ret
lea
das
fcmovb
cs
push
loope
fisub
xchg
sub
jmp
shl
outs
adc
push
cmc
push
movs
cmps
xor
into
pop
inc
sbb
mov
lds
ss
cmp
jge
jg
cmps
das
outs
and
popa
mov
cld
sahf
pop
xchg
rol
pop
pusha
pop
das
and
sbb
push
mov
imul
adc
add
lods
adc
dec
hlt
mov
xor
mov
mov
outs
mov
pop
into
lds
sbb
add
pop
ja
rcr
jle
(bad)
fmul
pushf
ja
and
push
pop
in
jns
ins
dec
pop
mov
fstp
jecxz
jne
out
push
mov
ror
popa
and
icebp
sub
ins
push
fs
mov
outs
xor
or
movs
call
scas
and
shr
sub
cmp
pushf
inc
add
fnstenv
outs
push
mov
inc
cli
jno
out
not
or
add
ins
cdq
push
xor
jns
pop
push
fbstp
(bad)
mov
enter
ret
out
lods
stos
or
sub
push
lea
dec
or
fnstenv
add
and
enter
xchg
in
jecxz
movs
inc
mov
stc
mov
ja
pop
sbb
fxch
sbb
add
inc
push
or
repz
or
arpl
aas
out
icebp
nop
repz
pop
xchg
out
inc
mov
sbb
xchg
retf
pop
cmc
jnp
retf
fwait
add
pop
jg
pop
inc
push
xor
pop
repnz
cmp
mov
and
sbb
cmp
push
aas
arpl
adc
pop
jno
lea
ret
jp
test
dec
leave
xor
mov
or
push
xchg
iret
shr
dec
xchg
clc
push
inc
dec
mov
ins
add
sub
cmps
test
inc
or
je
jle
(bad)
and
mov
fist
popf
lahf
retf
push
mov
iret
out
push
rcr
arpl
jecxz
xchg
mov
ret
pop
push
adc
aam
call
and
jne
lds
ss
movs
ins
into
(bad)
mov
mov
cs
push
mov
and
mov
push
sub
int
or
mov
adc
cld
mov
inc
fwait
jecxz
push
test
repnz
jecxz
inc
call
stc
jno
xlat
das
dec
arpl
dec
pushf
sbb
dec
addr16
pop
fwait
sbb
fiadd
aam
pop
in
cmps
cmp
mov
push
(bad)
mov
jno
(bad)
sbb
pop
and
cmp
ins
stc
popa
mov
xchg
out
fst
cmp
or
icebp
lea
call
lods
stos
sti
fdiv
jg
jae
jnp
mov
jg
repnz
lds
dec
test
jo
test
mov
fstp
mov
mov
lods
jp
daa
out
xor
cdq
xchg
repz
sub
sbb
add
popa
pop
pop
nop
mov
pop
test
cmp
data16
dec
lods
inc
sub
daa
fiadd
fucomip
in
sub
cmp
pop
jmp
shl
iret
(bad)
pop
push
pop
xor
int
iret
vorps
nop
test
adc
gs
or
icebp
test
pop
loope
or
pushf
test
add
ret
xchg
in
stos
lods
push
rol
inc
test
test
adc
mov
pop
xor
jmp
aam
xor
pop
pop
mov
fidivr
xor
lock
imul
and
pop
xchg
outs
cli
jge
nop
inc
dec
in
int
hlt
jmp
xchg
movs
(bad)
fcom
lock
rol
js
dec
xor
arpl
dec
mov
push
out
ins
xchg
push
dec
call
xor
popf
or
push
ja
sbb
(bad)
cli
pop
fadd
popa
xor
sbb
dec
pop
mov
in
lock
push
lea
repnz
jmp
sbb
cdq
mov
sbb
lock
test
aas
ret
(bad)
in
mov
mov
loope
push
mov
stos
or
adc
lods
dec
xchg
adc
sbb
ss
shl
push
repz
jmp
les
std
aad
adc
int3
mov
jne
pop
ins
mov
(bad)
or
sbb
jl
add
cld
pusha
fnsave
xchg
loop
sti
in
pop
inc
out
inc
jnp
pop
push
pop
add
arpl
test
and
adc
rcl
int
jl
xchg
mov
icebp
scas
jae
cmps
fisub
imul
or
xchg
movs
inc
sbb
add
or
and
add
push
outs
js
sbb
popa
jne
lds
scas
sbb
mov
inc
std
push
or
pop
test
jne
(bad)
sbb
xor
imul
cmp
cmp
pop
(bad)
fidiv
adc
movs
mov
das
daa
adc
stc
std
xchg
sbb
xor
mov
into
pop
xor
stos
mov
data16
jnp
mov
dec
adc
inc
adc
push
jecxz
sbb
sahf
or
pop
sbb
xchg
popf
sbb
sub
sar
test
and
add
pop
jmp
repz
ror
add
mov
jmp
xlat
mov
and
(bad)
adc
iret
mov
mov
cmp
scas
push
cwde
sub
sub
add
cmp
xchg
cmps
jmp
xor
mov
movs
and
gs
iret
cdq
xor
ss
sub
sub
shl
add
ja
mov
xor
add
xor
pop
pop
stos
inc
neg
loop
xchg
test
(bad)
xor
cmp
sub
sbb
push
xchg
in
cwde
imul
inc
xchg
jl
mov
push
push
or
mov
movs
add
or
mov
mov
jo
xchg
or
pusha
bound
div
sub
fistp
retf
or
lock
div
dec
test
and
adc
in
jns
mov
ds
xor
int
or
js
inc
fdivr
xchg
adc
aad
imul
push
retf
arpl
dec
adc
mov
cmps
scas
xor
(bad)
mov
(bad)
ins
sbb
mov
fdivr
mov
std
xor
jo
mov
mov
lea
cmp
and
or
adc
loopne
sub
xchg
test
retf
lea
dec
adc
loop
(bad)
aam
jle
jl
out
mov
cmp
iret
outs
inc
fist
cmp
push
mov
pushf
(bad)
add
dec
lahf
lods
jp
rcr
iret
push
mov
xor
shl
iret
jmp
mov
mov
ss
es
add
loopne
or
push
int3
push
mov
scas
mov
int
test
gs
add
test
mov
and
out
je
xchg
and
adc
mov
inc
inc
lock
push
or
push
xor
inc
xchg
jl
int3
push
lods
push
sub
call
pusha
adc
hlt
inc
jne
das
jnp
cmp
dec
(bad)
pushf
inc
and
in
pop
cmp
jecxz
cdq
push
(bad)
push
mov
test
mov
in
fnsave
jg
cld
fdiv
sti
mov
mov
(bad)
pop
scas
sub
retf
push
xor
push
les
sar
fnstsw
setle
inc
mov
push
adc
xchg
jb
iret
jnp
cli
leave
mov
ja
fwait
pop
push
push
jmp
dec
adc
sbb
(bad)
xlat
jb
jmp
inc
sbb
in
ret
inc
dec
mov
fldcw
cmps
in
out
inc
mov
mov
sub
movs
xor
adc
push
mov
xor
shl
(bad)
call
and
inc
sub
mov
in
ret
gs
mov
add
inc
mov
xchg
rcr
(bad)
jmp
stos
push
out
jp
movs
jbe
sbb
call
pop
aam
pcmpgtw
dec
mov
adc
inc
or
test
push
cli
push
in
jge
int3
fs
add
xchg
cmps
mov
loope
sbb
fs
in
cmp
jmp
leave
in
icebp
dec
adc
jge
and
retf
movs
dec
jl
lahf
pop
out
inc
rol
inc
sbb
dec
sbb
add
and
stos
in
cli
out
dec
dec
cmc
jns
sbb
cmp
leave
cmps
mov
retf
mov
stc
add
aad
dec
inc
mov
mov
fild
sbb
leave
popa
mov
mov
or
(bad)
xchg
and
jmp
loop
shl
sub
xchg
mov
jecxz
arpl
call
push
stos
or
add
es
jl
mov
fistp
cmp
int3
and
pop
cmp
(bad)
pusha
adc
(bad)
aad
inc
mov
push
inc
into
ins
repnz
(bad)
movs
inc
xchg
inc
inc
dec
push
enter
outs
and
in
ins
sahf
dec
das
mov
arpl
cs
cs
out
wbinvd
es
into
adc
jmp
jne
pop
in
dec
sahf
int3
aam
rcr
jns
sbb
push
vmovntps
jo
cmp
ds
or
push
and
arpl
and
and
stc
xchg
adc
mov
pusha
sbb
test
dec
dec
or
or
dec
sbb
and
jns
int3
or
test
lods
mov
and
mov
adc
int3
pushf
cmp
lods
push
pop
jmp
xchg
jp
outs
cmp
dec
je
xor
or
out
adc
adc
and
shr
jg
enter
pop
cwde
fisttp
or
fistp
stos
adc
inc
ret
in
ret
ds
cmp
(bad)
(bad)
neg
add
test
add
cmp
popa
add
not
ins
std
fild
jg
inc
retf
cs
push
pop
and
jae
pop
in
inc
imul
push
rcr
jl
xor
mov
popf
loop
pushf
je
loope
xor
jecxz
jae
xor
jg
(bad)
mov
jle
pusha
div
rcr
pushf
ds
jge
pop
xchg
xchg
sbb
sub
imul
or
cmp
popf
test
adc
inc
pusha
inc
jmp
lock
mov
mov
test
or
xor
jge
aaa
pop
sbb
pop
jbe
das
xchg
mov
out
in
std
xchg
jg
push
test
fst
and
in
scas
jg
add
mov
stos
fadd
cmps
push
ds
mov
aad
cmp
aas
or
(bad)
sbb
jmp
shl
retf
call
call
stc
pop
jg
sub
out
movs
add
shr
push
push
sub
gs
pop
not
test
push
pop
outs
dec
iret
jne
pop
and
dec
inc
jl
pusha
inc
sub
(bad)
hlt
outs
sbb
pop
xor
xlat
mov
fwait
push
jecxz
std
mov
std
retf
or
jae
or
mov
mov
xchg
mov
fld
jbe
xchg
mov
jl
jge
je
push
in
mov
out
stos
mov
jae
je
sbb
fxch
mov
into
xchg
frstor
mov
xchg
fstp
xor
jg
mov
js
xor
add
mov
int
cmp
mov
xor
mov
jecxz
push
adc
inc
jp
mov
push
imul
or
icebp
pop
push
or
movs
mov
or
mov
(bad)
fadd
loope
repnz
xchg
jecxz
nop
fld
or
ja
fwait
mov
add
movs
fwait
ja
jle
call
or
les
mov
cmp
pop
mov
imul
adc
lahf
dec
aaa
or
idiv
sub
add
out
push
scas
add
inc
jnp
mov
dec
ret
in
shr
ss
push
push
call
movs
mov
ja
mov
push
int3
cmp
mov
jno
sub
ret
xor
(bad)
adc
inc
push
add
aaa
mov
loop
and
push
xor
stos
jo
iret
mov
sti
cmp
dec
cmp
pop
xchg
pop
add
aas
mov
or
fstp
lock
mov
xor
xchg
xchg
push
test
(bad)
mov
test
mov
stos
dec
aaa
xor
adc
xchg
sub
cmp
adc
cld
xchg
mov
fild
cmc
inc
mov
dec
lahf
scas
or
lods
mov
loop
inc
xor
outs
xchg
cmp
arpl
(bad)
sub
stos
pushw
jo
retf
outs
and
rcr
and
icebp
xchg
fidiv
lahf
ss
push
sub
inc
loopne
mov
clc
mov
xchg
test
mov
pop
outs
sub
icebp
sub
add
cmps
pop
ret
add
sbb
jo
stos
dec
cmp
out
lods
imul
jge
sbb
stc
fist
mov
mov
inc
xor
cli
ret
ror
mov
sbb
inc
cmps
fsubr
xor
movs
(bad)
inc
jno
out
jnp
loope
cs
(bad)
mov
jbe
stc
sbb
push
and
ins
movs
inc
std
push
aam
lea
xchg
into
je
pusha
mov
push
jg
call
retf
mov
loope
and
stc
jno
adc
jp
sub
or
mov
xor
hlt
and
test
(bad)
push
je
addr16
push
movs
add
jp
xchg
xor
scas
pop
stc
cmc
xor
cmp
into
sbb
adc
cs
push
push
xchg
sti
pop
fst
shl
sbb
sub
dec
data16
inc
mov
lds
stc
cmp
xchg
outs
dec
(bad)
add
sbb
mov
mov
in
jmp
pop
sub
out
xchg
and
mov
cmp
cmp
(bad)
sahf
ss
and
dec
or
dec
outs
cdq
pop
ins
xor
ret
mov
ret
imul
mov
inc
call
pop
sub
fcmovnb
sub
cmp
jo
aam
sbb
je
or
pop
out
or
mov
push
or
pop
test
movs
xchg
xlat
cmp
jmp
fisttp
imul
xor
arpl
stc
inc
jge
imul
xchg
fmul
push
sbb
add
adc
cmp
sub
(bad)
xlat
xor
retf
cmps
movs
mov
and
mov
jbe
dec
push
rol
cmp
popf
push
push
cld
int3
movs
push
or
das
(bad)
repz
pop
sbb
movs
push
sub
mov
loope
ret
adc
mov
adc
popf
and
cmp
jl
outs
je
sbb
or
iret
xor
pop
repz
scas
test
nop
pop
add
sub
dec
jno
xchg
aam
adc
nop
clc
(bad)
icebp
cli
inc
and
mov
sub
popa
fmul
and
je
call
xor
inc
ss
jo
jmp
push
mov
pop
ss
mov
dec
bnd
mov
jb
clc
pop
xor
mov
std
movs
add
lds
dec
push
sub
call
aad
push
push
jnp
stc
in
addr16
(bad)
push
enter
(bad)
and
jecxz
push
mov
xchg
jecxz
rol
jecxz
xchg
inc
xor
cli
out
mov
fidiv
dec
std
jg
enter
retf
mov
xor
ins
in
cmp
shl
cmp
loop
repnz
and
sbb
adc
xchg
int3
shl
lods
sub
sbb
pop
xchg
xlat
dec
sbb
imul
and
mov
mov
lahf
(bad)
and
out
add
in
stos
sub
mov
shl
cwde
sub
scas
adc
adc
ins
pop
jp
ins
jmp
std
sbb
or
bound
xor
sbb
and
(bad)
enter
aas
mov
iret
icebp
dec
pop
hlt
push
jnp
lea
in
cmp
repnz
xchg
inc
std
dec
fwait
in
inc
inc
movs
pop
leave
repnz
mov
movs
loope
cmps
push
out
leave
jb
xor
cmp
pop
mov
arpl
or
xchg
call
sbb
jecxz
mov
rcl
into
dec
ret
mov
ds
pop
test
mov
add
sub
lock
