jmp
mov
ror
rol
jb
inc
out
add
xchg
add
stos
outs
mov
mov
ror
fstp
mov
ins
(bad)
jg
movs
jb
lods
movs
add
mov
jb
inc
in
ds
jl
xchg
ds
mov
aas
mov
jb
inc
and
and
call
aas
sub
cmps
aas
mov
cld
mov
into
retf
int3
mul
sub
jns
aas
cmp
mul
sub
jns
aas
cmp
cmps
rcl
fiadd
ret
mov
xor
test
jo
inc
inc
add
mov
jecxz
cwde
mov
cli
enter
inc
call
ds
out
mov
call
sbb
jno
inc
inc
out
add
outs
xor
js
lock
pop
out
add
fwait
inc
rcl
std
ds
push
dec
outs
dec
test
and
jb
or
jl
mov
add
cmp
test
dec
(bad)
test
dec
add
mov
push
test
arpl
push
xchg
aas
xchg
fwait
xchg
test
mov
adc
jg
retf
dec
inc
mov
add
ins
inc
cmp
fisttp
rcl
mov
cmps
add
jg
bswap
mov
push
add
out
xor
lods
or
addr16
aas
mov
dec
retf
mov
daa
mov
std
cmp
add
mov
test
xchg
pop
cwde
aas
xchg
sub
es
loop
outs
in
ds
mov
ds
in
mov
call
aad
adc
jmp
cmp
sub
idiv
mov
ds
ret
sub
test
mov
add
mov
push
ds
add
mov
push
les
add
dec
dec
inc
aas
push
dec
add
mov
mov
es
std
cmp
sbb
in
push
daa
push
out
cmp
aas
xchg
jecxz
aas
mov
std
jns
pusha
or
sahf
xor
aas
mov
ret
les
inc
mov
cmp
data16
cmps
or
aas
inc
inc
cli
ds
jecxz
inc
mov
std
es
cmp
push
aas
push
out
ds
(bad)
cmps
mov
std
ds
call
dec
sti
fild
shl
sub
mov
out
ds
scas
push
mul
in
mov
or
pushf
scas
imul
cld
mov
call
pop
aas
mov
call
inc
mov
push
ds
(bad)
ds
mov
mov
std
stc
out
inc
aas
sahf
jg
aas
mov
ret
in
cmps
mov
in
inc
mov
std
cmps
mov
std
mov
mov
std
cmps
mov
in
ds
cs
cli
jecxz
test
jecxz
sar
and
cmps
push
retf
jmp
xchg
aas
xchg
jecxz
inc
mov
std
jns
pusha
or
sahf
sub
aas
mov
ret
les
inc
mov
cmp
inc
cli
ds
jecxz
inc
mov
std
es
cmp
push
aas
push
out
ds
(bad)
cmps
mov
std
ds
call
dec
sti
fild
shl
sub
mov
out
ds
scas
push
mul
in
mov
std
sar
pushf
scas
imul
add
call
inc
aas
sahf
psubd
mov
(bad)
ds
cmp
xor
gs
mov
std
outs
in
cmp
add
aas
inc
cli
cmp
in
cmps
bound
aas
inc
inc
cli
ds
jecxz
inc
mov
std
es
std
cmp
push
aas
push
out
ds
(bad)
cmps
mov
std
ds
call
dec
sti
fild
shl
sub
mov
out
ds
scas
push
mul
in
mov
std
sar
pushf
scas
imul
ins
mov
std
sar
mov
push
inc
mov
dec
into
inc
mov
gs
mov
std
idiv
adc
xor
add
retf
(bad)
ds
add
ror
std
ds
(bad)
cmps
mov
std
ds
in
aas
ss
(bad)
cmps
mov
out
ds
(bad)
ds
mov
es
std
cmp
shl
movs
(bad)
ds
ret
cwde
aas
xchg
dec
inc
aas
arpl
sbb
imul
inc
xchg
pop
pop
xchg
sahf
jnp
ds
ret
add
retf
rol
jb
inc
out
add
xchg
add
stos
outs
mov
repz
out
jmp
out
push
(bad)
sahf
inc
(bad)
ds
ret
rol
jae
sahf
xor
ds
ret
pushf
add
mov
in
mov
std
cmp
jecxz
cmps
fwait
clc
cmp
ds
and
mov
add
dec
(bad)
ds
out
mov
std
sar
inc
mov
std
jno
cmps
std
fs
dec
inc
aas
mov
pop
cmps
cld
jecxz
fs
dec
inc
aas
mov
dec
cmps
cld
jecxz
dec
aas
mov
cmps
cld
jecxz
fs
inc
aas
mov
cmps
cld
jecxz
or
rcl
inc
pop
and
mov
xor
inc
pusha
and
vphadduwd
(bad)
ds
mov
ds
mov
mov
std
sub
outs
inc
push
cmp
add
ret
push
lds
data16
mov
mov
std
leave
or
inc
dec
lea
(bad)
or
mov
sub
mov
pop
add
xchg
pop
pop
movs
jge
and
cmp
add
sub
aas
mov
fcmovbe
pop
jbe
fiadd
movs
add
inc
sub
inc
inc
cli
mov
and
addr16
and
addr16
and
addr16
or
cmp
mov
mov
dec
cmp
inc
and
dec
ds
pop
push
test
or
cmps
sahf
out
ds
jecxz
inc
or
dec
or
or
jmp
push
test
sub
inc
push
jecxz
retf
pop
enter
ret
ror
or
adc
add
mov
std
sar
iret
inc
je
iret
inc
je
iret
or
out
push
mov
retf
lock
mov
repz
(bad)
mov
cmp
icebp
push
jmp
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
ins
dec
inc
mov
ret
stos
pop
add
in
mov
jecxz
in
jecxz
into
inc
je
iret
inc
sub
dec
cmp
sbb
(bad)
not
into
cmp
lods
jae
jge
and
inc
inc
aas
mov
ins
dec
arpl
outs
inc
pop
cmp
and
jecxz
mov
push
rol
jbe
cdq
add
pop
into
enter
retf
(bad)
ds
pusha
and
mov
retf
(bad)
ds
cmc
adc
ins
jb
out
outs
out
add
push
daa
out
std
ds
lds
cld
jecxz
int
in
ds
sub
dec
cmp
ds
jae
or
jle
mov
cmp
cmps
jp
inc
pusha
and
mov
xor
mov
in
sbb
or
stos
dec
(bad)
sahf
shld
mov
ret
xor
push
push
int3
fadd
mov
(bad)
add
mov
push
arpl
outs
shl
repz
mov
pop
bswap
add
or
ficomp
inc
mov
xor
ja
xor
ja
sub
mov
sbb
stos
ficomp
jnp
ss
mov
outs
dec
arpl
push
out
pop
in
sar
mov
sti
dec
daa
cs
and
rol
add
xor
std
add
mov
dec
arpl
movs
out
aas
sub
retf
sub
and
and
jp
hlt
sbb
mov
pop
repz
scas
and
add
cs
cli
pop
push
(bad)
sub
inc
mov
dec
arpl
retf
sbb
jecxz
popf
adc
add
lahf
and
mov
mov
inc
je
iret
inc
je
iret
inc
sub
inc
push
int3
ror
jecxz
iret
inc
sub
inc
or
outs
push
or
xor
jecxz
das
or
sub
jecxz
mov
add
jo
(bad)
mov
jae
iret
inc
je
iret
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
cmp
inc
mov
ret
stos
pop
add
jecxz
pop
retf
mov
mov
(bad)
enter
ds
xchg
(bad)
xchg
inc
aas
jge
and
jecxz
ds
cmp
arpl
jecxz
cmp
mov
and
data16
retf
mov
mov
(bad)
enter
ds
xchg
(bad)
xchg
inc
aas
jge
and
jecxz
ds
clc
mov
arpl
jecxz
cmp
mov
and
dec
retf
sub
mov
mov
(bad)
enter
ds
push
retf
jb
mov
sub
retf
add
lds
mov
les
pop
inc
aas
sahf
stos
add
mov
dec
xchg
jge
and
jecxz
ds
dec
mov
jecxz
lock
or
popf
sbb
aas
mov
std
sar
iret
or
out
daa
dec
jecxz
lods
sub
inc
mov
pop
xchg
sahf
cmp
inc
mov
ret
stos
pop
add
out
std
ds
adc
mov
(bad)
iret
inc
je
iret
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
push
sbb
retf
shr
inc
je
iret
outs
fdivr
xchg
jecxz
iret
inc
je
iret
inc
sub
inc
cmp
dec
inc
mov
add
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
int3
dec
inc
mov
ret
stos
pop
add
in
mov
jecxz
jmp
mov
inc
movs
xor
jge
dec
mov
jecxz
jg
sbb
mov
inc
inc
aas
sub
enter
iret
inc
je
iret
or
mov
or
movs
jb
inc
sub
dec
push
int3
mov
popf
adc
and
jecxz
inc
adc
cmps
add
push
je
xchg
jecxz
add
xor
mov
std
ds
data16
xor
push
test
shl
leave
add
add
imul
outs
dec
inc
inc
cmc
aas
enter
inc
ja
pop
enter
test
jecxz
ds
inc
dec
sbb
test
jecxz
fstp
pop
or
retf
not
mov
call
in
or
mov
jecxz
(bad)
aas
sub
mov
ins
inc
dec
aas
sub
sahf
adc
rol
jl
aas
inc
or
mov
mov
inc
je
iret
or
mov
mov
retf
cld
aas
mov
pop
pushf
jmp
jecxz
cmp
mov
sahf
jmp
ds
pop
call
mov
(bad)
fs
jns
push
add
mov
das
or
pusha
push
ret
jno
loope
jg
mov
std
ds
inc
pop
call
inc
aas
cmp
xchg
cld
jecxz
fstp
in
popf
inc
jno
aas
mov
dec
test
into
ss
aas
cmp
ret
sub
std
ds
das
push
jp
popa
add
sub
or
movs
out
test
lds
xor
dec
inc
pop
outs
leave
daa
push
in
ds
sub
push
inc
jno
aas
mov
pop
enter
enter
mov
inc
pop
add
jo
mov
or
mov
jecxz
inc
adc
xchg
adc
inc
inc
adc
rol
mov
or
out
retf
dec
daa
retf
ds
ins
inc
dec
aas
sub
popf
jns
mov
inc
je
iret
or
mov
sub
mov
icebp
(bad)
inc
jp
push
push
mov
adc
dec
xchg
rcr
mov
and
std
leave
mul
pop
ds
add
mov
mov
push
or
(bad)
loope
out
aas
or
stc
or
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
inc
and
sub
cmp
add
or
mov
jmp
inc
adc
aas
dec
js
std
retf
cli
pop
add
mov
jecxz
iret
inc
je
iret
inc
je
iret
inc
and
cmp
xor
mov
(bad)
test
outs
aas
dec
idiv
xchg
inc
sub
inc
and
dec
daa
jmp
into
inc
and
sub
cmp
add
or
jb
mov
and
pop
enter
inc
mov
inc
arpl
jecxz
aas
mov
add
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
inc
xor
add
daa
call
dec
inc
inc
xor
mov
inc
xor
mov
inc
xor
xchg
mov
mov
inc
je
iret
or
mov
scas
outs
inc
push
lods
mov
inc
sub
mov
inc
inc
push
ret
cmp
sub
mov
mov
push
arpl
dec
inc
aas
cmp
retf
cmp
dec
dec
retf
dec
retf
out
mov
cmps
add
inc
mov
push
cld
pop
mov
icebp
mov
dec
loope
mov
sahf
mov
inc
mov
inc
arpl
cmp
push
jl
or
daa
into
(bad)
cmp
xchg
push
outs
int3
daa
inc
lahf
add
adc
jecxz
aas
and
in
jne
std
popf
adc
rol
mov
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
and
inc
xor
enter
pushf
mov
jecxz
test
jo
(bad)
sub
inc
sahf
les
mov
inc
inc
and
addr16
inc
xor
retf
inc
cmp
jmp
or
push
in
ds
pop
or
mov
jae
inc
xor
daa
jae
add
inc
aam
xor
or
cmp
pop
push
pop
into
daa
jp
add
inc
fdivr
cmp
or
mov
retf
into
(bad)
mov
jecxz
ds
dec
(bad)
mov
xor
mov
mov
pop
popf
adc
pushf
js
std
leave
or
mov
retf
call
jecxz
ds
sbb
inc
xor
mov
mov
pop
popf
adc
pushf
js
std
retf
add
scas
push
jmp
dec
daa
outs
stc
sbb
and
pop
sub
cli
ds
std
daa
xchg
xor
aas
inc
scas
out
mov
std
retf
pop
popf
cmp
ds
pop
retf
rol
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
mov
inc
xor
enter
mov
lock
mov
les
data16
ds
cli
mov
push
out
mov
add
std
leave
add
mov
dec
(bad)
pop
jg
inc
cmp
movs
push
sar
aas
mov
dec
int3
add
std
jns
pop
dec
les
cmp
call
mov
add
std
retf
add
std
retf
add
jbe
mov
jecxz
ds
test
aas
icebp
std
ds
pop
popf
adc
pushf
js
std
retf
add
dec
mov
jecxz
ds
retf
lea
inc
pop
jb
dec
xchg
std
adc
pushf
js
std
leave
or
mov
xlat
and
(bad)
or
ror
je
iret
inc
je
iret
or
mov
mov
pushf
(bad)
ds
pop
add
jecxz
mov
outs
pop
arpl
push
fdiv
cmp
sub
std
ds
pop
add
jecxz
add
test
daa
(bad)
(bad)
cmp
add
jecxz
jp
jno
push
xor
sub
inc
lock
or
jecxz
sar
sbb
push
les
adc
or
jecxz
add
fwait
(bad)
ds
pop
popf
adc
ror
out
mov
in
mov
mov
std
popf
adc
pop
add
jecxz
iret
inc
je
iret
inc
je
iret
or
mov
xor
mov
push
int3
test
mov
cmp
jmp
std
leave
add
or
imul
(bad)
sahf
and
aas
mov
ret
in
ds
pop
add
out
cmp
std
ds
rol
mov
inc
je
iret
inc
je
iret
inc
je
iret
pop
outs
push
arpl
repz
xchg
or
xor
dec
cmp
std
ds
mov
std
ds
push
and
shl
or
out
mov
std
popf
adc
pop
cwde
js
std
leave
jge
sar
add
mov
sar
inc
arpl
popa
aaa
push
out
xchg
sahf
jmp
ds
out
les
pop
cwde
js
std
leave
or
push
retf
and
imul
ins
push
xor
std
sar
add
retf
push
inc
test
jmp
mov
push
out
xchg
or
push
add
outs
dec
arpl
push
stc
inc
mov
out
scas
jecxz
retf
hlt
mov
inc
pop
pushf
adc
jno
into
outs
inc
arpl
cmp
xchg
sahf
sbb
ds
ret
in
ds
pop
pushf
adc
out
mov
std
sar
inc
mov
std
popf
adc
pop
cwde
js
std
leave
cli
pop
and
push
ss
mov
std
sahf
adc
pop
cwde
js
std
into
inc
je
iret
inc
je
iret
or
push
retf
push
ret
mov
sub
dec
arpl
push
mov
mov
outs
retf
daa
loop
std
ds
mov
mov
std
cdq
js
std
leave
or
adc
mov
popf
adc
add
push
inc
dec
icebp
sar
or
lods
sub
loope
mov
loope
dec
int3
mov
addr16
ds
ret
out
sbb
push
sahf
icebp
cmps
jae
inc
mov
or
jecxz
popf
adc
add
outs
retf
daa
pop
(bad)
lods
mov
pop
mov
xor
adc
mov
inc
sub
dec
inc
xor
inc
inc
cmp
inc
push
xor
std
cmp
mov
inc
je
iret
inc
sub
inc
cmp
mov
push
mov
ds
mov
inc
je
iret
inc
je
iret
inc
sub
dec
cmp
mov
outs
inc
arpl
ins
push
mov
pop
or
retf
add
shl
retf
push
retf
add
mov
xor
inc
push
outs
inc
arpl
xor
(bad)
cmp
aas
cmp
mov
inc
je
iret
inc
je
iret
inc
xor
inc
cmp
push
mov
test
out
push
mov
std
add
fld
mov
outs
push
arpl
jecxz
add
push
retf
push
jb
movs
out
test
lds
xor
ror
je
iret
or
data16
ds
mov
sahf
inc
movs
add
mov
inc
je
iret
inc
je
iret
or
data16
ds
mov
sahf
inc
movs
ror
je
iret
inc
je
iret
inc
je
iret
or
nop
inc
sub
xchg
cmp
ds
sub
inc
inc
sub
jns
pop
add
and
cmps
push
pop
outs
inc
dec
inc
xor
nop
inc
popa
push
cmp
and
add
sub
cwde
push
inc
mov
cmps
mov
inc
je
iret
or
nop
inc
sub
xchg
cmp
ds
sub
inc
inc
sub
jp
pop
add
and
cmps
push
pop
outs
inc
dec
inc
xor
nop
inc
popa
push
cmp
and
add
sub
cwde
push
inc
mov
cmps
mov
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
repz
ds
out
aas
mov
dec
arpl
retf
retf
btc
addr16
push
in
aas
mov
inc
arpl
dec
dec
jge
and
mov
std
ds
std
es
cli
mov
test
std
ds
push
inc
cmp
push
ficomp
out
imul
push
daa
xor
aas
inc
xor
inc
inc
fsub
stos
xchg
std
leave
cmps
cmp
push
(bad)
ss
aas
and
push
xchg
mov
add
ret
fidiv
ds
mov
int3
add
cmp
mov
std
fcom
and
push
std
cmp
sub
sub
outs
and
std
cmp
ds
mov
fisub
ds
in
push
or
push
cmp
cmp
jecxz
ds
out
xchg
std
jno
outs
dec
arpl
inc
(bad)
enter
ds
ret
jecxz
add
test
ds
addr16
je
test
jecxz
ds
jmp
outs
add
(bad)
outs
stos
arpl
in
ds
or
ds
mov
std
ret
mov
mov
mov
std
cmps
mov
std
ds
xor
dec
sahf
cwde
mov
mov
(bad)
xchg
or
arpl
stos
and
std
ds
std
ds
int3
mov
mov
(bad)
cmps
mov
std
ds
xor
push
and
dec
int3
add
inc
daa
sbb
add
inc
cli
mov
test
std
ds
push
inc
inc
xor
jae
aam
ret
fisub
ds
in
push
or
push
cmp
jle
mov
cld
ds
out
outs
jmp
pop
pushf
inc
xor
stos
sbb
aas
mov
std
sar
inc
mov
dec
arpl
inc
pop
div
dec
xchg
std
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
sub
inc
repz
ds
push
test
or
inc
inc
je
iret
inc
je
iret
inc
je
iret
cmp
cmp
cmp
test
outs
retf
daa
cmp
and
mov
jp
ret
arpl
(bad)
mov
data16
inc
arpl
jecxz
sbb
inc
pop
sub
sub
push
loop
ja
sub
mov
out
arpl
std
popf
adc
add
or
mov
(bad)
push
retf
hlt
(bad)
(bad)
(bad)
jp
pop
cmp
or
mov
sub
ret
mov
mov
xchg
add
inc
sub
enter
arpl
movs
add
mov
dec
arpl
mov
mov
pop
call
add
inc
sub
retf
mov
ret
push
mov
inc
push
int3
mov
mov
outs
ss
cmp
sub
mov
sahf
loop
inc
mov
dec
retf
push
lock
scas
out
sti
call
ror
sub
inc
cmp
inc
push
int3
sub
mov
or
sub
and
aas
inc
je
iret
inc
sub
dec
or
mov
mov
outs
int
std
repz
ds
in
scas
jecxz
retf
push
les
cmp
jmp
or
mov
jge
repnz
inc
retf
dec
xchg
sahf
jg
ds
ret
movs
jb
cmp
jae
inc
xor
dec
and
push
test
or
adc
or
(bad)
popf
adc
mov
mov
xor
std
push
xchg
cmp
inc
shr
sub
test
xor
outs
inc
sub
nop
mov
fst
je
iret
inc
sub
dec
or
jbe
repnz
inc
retf
mov
sahf
or
ds
ret
movs
jb
cmp
jae
inc
xor
inc
and
push
test
or
adc
or
(bad)
pushf
jns
dec
arpl
in
retf
push
sbb
sub
pushf
jns
(bad)
retf
pop
dec
test
jmp
add
mul
addr16
push
outs
inc
arpl
dec
cs
dec
ds
mov
ror
je
iret
or
arpl
cmp
xchg
repz
mov
(bad)
cmps
lahf
out
ds
cmps
aam
mov
push
arpl
jo
arpl
dec
dec
out
(bad)
ds
push
cli
pop
adc
retf
shl
jb
inc
repnz
pop
dec
call
les
sub
div
std
ds
stos
push
xchg
sahf
and
ds
in
xchg
sahf
sbb
ds
in
ret
mov
xor
dec
out
ds
cmps
jb
std
into
cmps
int3
cld
aas
pop
popf
adc
pop
add
mov
or
mov
mov
sub
ds
std
leave
adc
push
xchg
sahf
pop
idiv
mov
ret
fdivr
dec
cmp
(bad)
test
dec
out
mov
in
mov
std
leave
or
adc
add
sbb
jle
je
mov
xor
pop
jns
mov
inc
arpl
dec
(bad)
xchg
inc
sub
daa
push
gs
ds
aam
xor
(bad)
push
ret
mov
adc
mov
push
jmp
aas
push
dec
call
in
mov
std
ret
jbe
xor
div
std
ds
stos
push
xchg
sahf
dec
idiv
mov
in
xchg
sahf
inc
idiv
mov
in
ret
sub
jb
inc
xor
enter
test
inc
pop
pushf
adc
mov
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
arpl
cmp
sahf
aaa
idiv
mov
ret
fdivr
dec
cmp
ds
(bad)
test
dec
out
mov
in
mov
std
leave
or
push
int3
add
adc
jle
movs
les
pop
outs
jb
outs
inc
arpl
dec
(bad)
xchg
inc
sub
daa
inc
fs
ds
aam
xor
(bad)
push
ret
mov
adc
mov
push
jmp
aas
push
dec
call
sbb
in
ret
jbe
daa
ss
std
ds
stos
push
xchg
sahf
jnp
ds
in
xchg
sahf
jae
ds
or
test
inc
cmps
outs
aas
adc
xor
adc
mov
inc
je
iret
or
out
retf
mov
icebp
movs
je
inc
mov
mov
std
leave
add
mov
inc
sub
ret
xchg
js
std
into
or
out
retf
mov
icebp
mov
dec
loope
mov
sahf
jbe
inc
mov
inc
arpl
and
in
xchg
sub
ret
xchg
js
std
into
inc
je
iret
inc
je
iret
inc
sub
inc
inc
xor
ret
jge
mov
add
mov
push
div
call
mov
inc
and
std
push
data16
je
iret
inc
and
std
push
data16
je
iret
sbb
addr16
mov
test
jecxz
ds
jmp
and
inc
mov
in
ss
xor
cld
pop
mov
xor
push
bound
inc
aas
cmp
ds
sub
clc
mov
std
ds
movs
or
ds
icebp
dec
inc
(bad)
jecxz
mov
out
(bad)
bnd
arpl
pop
(bad)
ds
in
push
jmp
or
add
push
pop
outs
int3
daa
cld
or
aas
inc
cmp
inc
or
hlt
test
addr16
ds
ret
xor
adc
add
push
xchg
movs
mov
icebp
movs
jl
mov
jmp
jp
pusha
add
cli
pop
or
or
sub
push
sub
nop
mov
add
bnd
sub
add
ret
mov
repnz
sbb
or
(bad)
test
dec
dec
add
jecxz
(bad)
mov
mov
mov
mov
mov
dec
mov
jnp
mov
inc
mov
dec
arpl
stos
and
std
ds
std
ds
mov
inc
mov
and
std
ds
jecxz
ds
dec
arpl
dec
xchg
std
cmp
mov
cmp
(bad)
ds
xchg
out
mov
std
mov
or
retf
cmp
jecxz
xchg
(bad)
xchg
inc
xor
ss
mov
std
ret
mov
call
pop
cld
xchg
test
mov
les
mov
xchg
mov
std
leave
cmp
cmp
jecxz
push
mov
std
ds
dec
arpl
dec
xchg
std
cmp
mov
fisub
ds
lds
jecxz
ds
xor
stos
sbb
aas
mov
std
sar
inc
mov
xchg
arpl
in
ds
xor
scas
adc
add
mov
std
mov
mov
add
cmps
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
adc
cli
pop
push
retf
add
mov
mov
add
outs
out
daa
scas
int
lods
sub
inc
mov
pop
xchg
sahf
fdiv
inc
inc
stos
pop
add
outs
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
mov
ret
stos
pop
add
jecxz
pop
retf
sub
mov
mov
(bad)
enter
ds
xchg
(bad)
xchg
inc
aas
jge
and
jecxz
ds
mov
dec
arpl
jecxz
cmp
mov
or
out
daa
push
lahf
add
lods
sub
inc
mov
pop
xchg
sahf
pop
xor
inc
inc
stos
pop
add
cmp
aas
mov
mov
clc
outs
inc
arpl
push
mov
add
pop
cmp
dec
adc
xchg
lock
jae
cmp
adc
shl
mov
mov
jae
inc
mov
dec
mov
mov
(bad)
iret
inc
je
iret
cmp
push
xchg
inc
aad
test
imul
mov
jmp
inc
pop
outs
int
push
xor
lds
std
cmp
pop
add
or
or
or
(bad)
popf
outs
in
ds
add
inc
mov
aam
jmp
push
add
je
iret
inc
je
iret
sbb
addr16
int3
adc
fninit
std
ds
jmp
dec
cmp
push
push
xchg
inc
xor
imul
dec
pop
inc
sub
push
push
xor
(bad)
ds
cld
push
mov
sub
int3
or
push
xchg
push
jecxz
das
or
dec
add
push
nop
inc
mov
sub
jmp
or
add
push
retf
push
test
fcmovbe
ss
xor
xchg
mov
mov
fimul
dec
daa
mov
add
inc
sub
dec
inc
xor
inc
lods
mov
mov
lea
out
jecxz
popf
cmp
pop
and
cmp
inc
or
aas
and
addr16
push
imul
daa
fwait
add
inc
xor
arpl
and
jecxz
ds
or
popf
inc
xor
jae
ins
or
mov
std
sar
inc
mov
int3
daa
ds
and
mov
std
ds
add
movs
push
aas
cmp
push
xchg
inc
aad
test
imul
inc
push
xor
inc
aas
inc
cmp
inc
inc
mov
daa
or
pop
inc
xor
push
push
jno
arpl
out
push
test
fwait
adc
mov
pop
ret
mov
daa
(bad)
xor
aas
adc
ret
in
std
into
inc
je
iret
sbb
addr16
in
adc
fninit
std
ds
jmp
xlat
dec
inc
mov
inc
stos
cmp
ds
sub
test
out
std
push
xchg
cmp
int3
shl
jecxz
aaa
cmp
jb
or
dec
arpl
retf
push
loopne
jecxz
int3
add
adc
cli
pop
cs
mov
std
sar
inc
cmp
push
inc
xor
inc
pop
dec
jmp
or
ds
push
dec
test
mul
es
jmp
ss
cli
pop
sub
mov
std
retf
mov
sub
or
jge
add
add
scas
out
retf
dec
inc
mov
jo
arpl
retf
and
mov
pop
pop
popf
sbb
aas
mov
std
sar
inc
mov
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
test
add
and
mov
jb
std
ds
dec
rol
inc
ror
je
iret
inc
je
iret
pop
outs
(bad)
xlat
mov
std
retf
cli
pop
dec
mov
dec
(bad)
sahf
jnp
ds
inc
arpl
retw
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
std
mov
scas
aas
mov
dec
daa
push
(bad)
cmp
(bad)
ds
out
mov
std
leave
test
adc
mov
mov
mov
ror
je
iret
inc
je
iret
or
out
xchg
inc
jb
aas
mov
in
retf
in
leave
or
xor
cmp
dec
movs
cmp
fnsave
inc
lods
out
mov
std
ret
jbe
add
mov
std
ds
cmp
test
mov
std
nop
mov
fst
je
iret
inc
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
outs
out
enter
int3
inc
mov
inc
arpl
jecxz
ds
js
mov
jecxz
addr16
push
aas
mov
mov
push
int3
movs
dec
mov
pop
adc
add
push
nop
push
outs
int
stos
(bad)
ds
outs
int
adc
(bad)
ds
cmp
inc
inc
mov
push
cmp
(bad)
ds
std
ds
jae
mov
outs
cmp
or
(bad)
test
dec
(bad)
cmps
addr16
ds
jecxz
retf
push
div
mov
(bad)
lds
jecxz
ds
and
jecxz
ds
xor
dec
arpl
inc
pop
mov
mov
add
cmps
mov
inc
je
iret
inc
jne
aas
mov
xor
cmp
sub
pop
xor
inc
xchg
(bad)
ds
xchg
mov
std
(bad)
or
dec
or
dec
mov
xchg
(bad)
xchg
ficom
xchg
and
sar
iret
inc
je
iret
inc
je
iret
or
mov
sahf
cmovl
mov
ret
mov
sub
std
inc
push
and
addr16
and
addr16
or
int
fcomp
aas
and
addr16
and
addr16
and
push
retf
adc
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
mov
or
outs
dec
xchg
dec
retf
dec
outs
inc
cmp
aad
out
test
std
ret
mov
push
jecxz
imul
aas
mov
pop
popf
adc
mov
movs
push
aas
inc
and
add
cmp
inc
cmp
push
mov
outs
aas
mov
fadd
mov
data16
xor
scas
in
jnp
cmp
add
sub
xor
pop
and
mov
jb
cmp
sub
shl
outs
sub
cmp
ret
cmp
push
or
mov
jo
cmp
aaa
mov
retf
dec
mov
jae
iret
cmp
cmp
or
jp
inc
mov
inc
mov
movs
stc
ret
or
in
std
ds
or
and
leave
mov
out
sar
ds
std
mov
sahf
pop
cmp
mov
ret
movs
jnp
jmp
jecxz
leave
mov
out
sar
ds
std
mov
mov
out
mov
std
leave
mov
out
sar
pop
mov
std
leave
mov
out
sar
ds
outs
add
sahf
pop
cmp
mov
ret
jecxz
ds
add
mov
int3
or
jecxz
add
jecxz
inc
outs
jecxz
aas
mov
or
mov
out
sar
xchg
(bad)
dec
(bad)
sahf
jg
inc
mov
ret
or
ds
add
sahf
ret
mov
ret
mov
jo
jmp
ds
jge
fisubr
(bad)
sahf
stos
cmp
retw
fdivrp
mov
mov
std
mov
mov
jge
cli
pop
or
mov
std
sub
outs
add
sahf
cmp
mov
ret
mov
push
xor
jecxz
mov
fwait
std
ds
lds
mov
call
daa
sub
test
enter
int3
add
push
nop
push
int3
adc
mov
jecxz
inc
inc
cmp
dec
and
dec
(bad)
sahf
xor
inc
mov
ret
xor
xchg
sti
out
sar
mov
add
add
pop
mov
and
push
xor
std
sar
popf
inc
jmp
sahf
or
inc
mov
fistp
retf
add
mov
add
into
inc
retf
dec
arpl
sub
cmp
sub
pop
push
sbb
adc
mov
fidiv
inc
sub
dec
inc
xor
inc
inc
cmp
dec
or
daa
sahf
sub
cmp
inc
arpl
jecxz
mov
inc
cmp
dec
push
loopne
xchg
out
sar
jmp
call
mov
jno
arpl
xor
hlt
repz
sar
jmp
std
mov
test
cld
jno
jecxz
div
addr16
call
pop
ret
rol
inc
aas
or
sbb
aas
ret
sbb
aas
dec
sbb
aas
push
ds
mov
ds
movs
sbb
aas
inc
je
iret
inc
je
iret
and
xchg
sub
mov
mov
(bad)
enter
ds
jmp
ss
retf
inc
arpl
push
fst
fisubr
out
mov
std
ret
jb
inc
xor
int3
or
push
xchg
inc
and
xchg
cld
jecxz
sbb
dec
(bad)
push
xchg
(bad)
ds
std
push
inc
cmp
dec
inc
mov
daa
mov
add
inc
sub
dec
push
xor
test
dec
scas
aas
mov
dec
lea
pop
or
data16
mov
(bad)
ds
mov
mov
std
retf
or
adc
mov
xchg
fiadd
lds
mov
xchg
fisub
xchg
jge
std
retf
add
push
push
cli
pop
inc
ds
std
daa
ins
adc
aas
inc
xor
jg
aas
(bad)
enter
ds
ret
je
iret
cmp
sub
aaa
xchg
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
lds
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
inc
sub
into
aas
mov
pop
les
sbb
idiv
cmp
clc
mov
mov
mov
inc
push
int3
shl
mov
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
add
out
mov
std
pushf
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
loop
add
inc
mov
xor
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
ret
aas
inc
jb
aas
mov
pop
les
bswap
idiv
cmp
out
mov
push
push
add
js
std
into
inc
je
iret
inc
je
iret
cmp
push
xchg
or
mov
or
jecxz
ret
mov
jecxz
leave
sti
inc
aas
mov
mov
or
dec
jmp
aas
inc
fadd
int
in
ds
jecxz
(bad)
sahf
sbb
mov
mov
pop
inc
xor
jp
pop
adc
dec
sar
ds
push
ds
mov
test
call
mov
mov
in
xchg
cld
jecxz
xchg
(bad)
mov
or
sub
mov
sti
mov
(bad)
mov
cmp
arpl
dec
jmp
cmp
aas
xor
pop
pop
outs
retf
daa
(bad)
push
add
adc
test
add
mov
inc
je
iret
inc
sub
inc
or
out
pop
and
int3
or
mov
push
int3
daa
mov
cmps
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
or
out
retf
or
cli
pop
or
sahf
aas
leave
inc
mov
ret
movs
jb
inc
sub
dec
adc
push
aas
inc
mov
or
call
std
into
inc
sub
inc
or
out
test
pop
int3
sub
mov
push
int3
daa
pop
sub
aas
adc
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
sahf
(bad)
ds
mov
iret
inc
je
iret
sbb
addr16
push
adc
mov
(bad)
enter
ds
jmp
fs
ds
mov
ds
inc
mov
movs
or
ds
sub
jbe
adc
inc
xor
pop
sahf
in
inc
mov
inc
arpl
jo
arpl
xor
sbb
(bad)
ds
in
dec
jmp
or
cld
jecxz
jmp
sub
call
jp
mov
jns
add
cmp
retf
push
pop
and
xor
inc
aas
jge
and
xchg
inc
aas
inc
xor
inc
jl
and
mov
inc
sbb
std
ds
out
dec
jmp
and
mov
std
sar
retf
test
mov
push
pop
mov
mov
add
cmps
mov
inc
je
iret
inc
gs
mov
cmp
out
cmp
and
sbb
shl
ds
jecxz
sbb
sub
add
mov
inc
je
iret
cmp
sub
aaa
jo
ds
xchg
mov
std
xchg
jmp
out
xchg
push
mov
inc
arpl
ins
dec
arpl
ins
jb
into
ins
jb
shr
jmp
add
sbb
imul
into
inc
je
iret
inc
je
iret
cmp
sub
aaa
jo
ds
xchg
mov
std
retf
or
(bad)
test
xor
std
(bad)
cli
pop
or
add
push
push
cli
pop
adc
jecxz
add
mov
std
add
mov
std
add
mov
std
es
cmps
(bad)
cmp
arpl
pop
les
push
retf
xor
mov
std
ds
ret
in
std
leave
add
xor
mov
std
ds
ret
in
std
into
inc
je
iret
pop
cmp
aas
mov
cmp
push
dec
ds
mov
test
jb
ds
inc
pop
inc
jb
aas
mov
addr16
push
dec
lock
dec
ds
mov
push
add
in
aas
push
int
aas
mov
sub
mov
mov
inc
in
ds
cmp
inc
and
dec
nop
inc
lods
out
sub
std
shr
and
jp
aas
mov
addr16
and
dec
int3
(bad)
mul
cmp
std
ret
jbe
cs
push
inc
cmp
inc
pop
dec
dec
xchg
pop
(bad)
ds
shl
in
retf
push
int3
(bad)
mul
add
in
pushf
xcrypt-ecb
cmps
mov
cmp
sub
or
push
retf
(bad)
ds
mov
mov
std
leave
xor
push
inc
mov
xchg
(bad)
les
mov
les
mov
les
mov
les
mov
in
js
std
xchg
mov
int
cld
jecxz
jmp
std
mov
mov
inc
arpl
inc
pop
push
mov
std
ds
ret
in
std
leave
add
cmp
mov
std
sar
inc
mov
mov
inc
je
iret
inc
je
iret
or
mov
inc
fwait
stos
aas
mov
mov
clc
outs
inc
arpl
push
mov
add
pop
cmp
dec
adc
xchg
lock
jae
cmp
adc
shl
mov
mov
jae
inc
mov
cld
mov
std
popf
jmp
jecxz
iret
inc
je
iret
cmp
sub
aaa
cwde
(bad)
ds
xchg
mov
std
leave
or
cs
int3
add
inc
cli
pop
dec
cli
pop
xor
mov
pop
adc
mov
std
add
mov
std
add
mov
std
add
mov
std
(bad)
or
sbb
cli
pop
push
daa
movs
(bad)
cmp
arpl
movs
jb
inc
sub
cmp
mov
test
add
je
iret
inc
je
iret
pop
outs
(bad)
jmp
jecxz
retf
cli
pop
dec
mov
dec
(bad)
sahf
fucomi
ds
inc
arpl
retw
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
std
mov
mov
mov
dec
daa
jle
std
cmp
(bad)
ds
out
jl
std
leave
test
add
mov
pop
add
jecxz
(bad)
int3
sub
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
outs
out
enter
int3
inc
test
ds
inc
arpl
jecxz
ds
cmp
jecxz
aaa
cmp
jb
inc
push
aas
mov
mov
push
int3
fs
mov
pop
adc
add
push
nop
push
outs
int
push
(bad)
ds
outs
int
inc
sar
ds
cmp
inc
inc
sub
xchg
push
int3
pop
daa
mov
mov
mov
adc
mov
push
pop
and
addr16
or
adc
or
dec
add
push
push
cli
pop
adc
mov
std
daa
jmp
xor
dec
adc
jecxz
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
and
dec
sub
mov
mov
(bad)
enter
ds
jmp
mov
and
sub
ja
sub
xchg
sub
mov
sub
jg
sub
add
inc
jecxz
sbb
dec
nop
inc
xor
stos
pop
int3
jo
mov
xor
repnz
jecxz
leave
or
pop
xchg
or
arpl
cmp
sti
jecxz
pushf
mov
xor
push
bswap
ret
xchg
ficom
aaa
lds
inc
mov
inc
dec
cmp
(bad)
ds
or
ds
sub
mov
dec
add
imul
cmp
aas
push
and
aas
sub
mov
inc
shr
aas
inc
and
xadd
scas
out
retf
jbe
xchg
retf
rcr
movs
mov
mov
push
mov
icebp
into
jge
out
das
and
ficom
sbb
aad
xchg
sub
mov
cmp
push
xchg
sub
mov
aad
(bad)
ficom
xchg
cmp
dec
xchg
(bad)
hlt
add
rol
mov
js
mov
sti
aad
inc
int3
out
loop
std
leave
jle
shr
dec
arpl
jge
pop
loope
iret
aaa
mov
push
sub
dec
xadd
scas
out
retf
jp
(bad)
jecxz
aas
push
cmp
or
pop
int3
mov
fcmovnu
addr16
ds
(bad)
mov
inc
arpl
jecxz
ds
inc
arpl
pop
mov
arpl
out
inc
mov
std
ds
push
xchg
or
sub
mov
and
cdq
xchg
inc
mov
push
retf
inc
inc
sub
dec
and
hlt
pop
shl
dec
ds
retf
dec
test
sub
arpl
out
ds
dec
arpl
int3
dec
inc
mov
add
gs
ds
xor
pop
mov
push
clc
dec
inc
imul
mov
inc
arpl
out
inc
jl
dec
xchg
inc
xor
or
inc
aas
inc
js
mov
cli
pop
ss
inc
xor
pop
push
xor
inc
aas
inc
sub
pop
inc
cmp
push
inc
xor
pop
aas
sub
imul
and
cmp
arpl
and
xor
outs
push
ins
push
arpl
loop
sbb
sub
ret
jbe
adc
and
push
arpl
cmp
outs
cmp
inc
sub
leave
add
dec
inc
scas
jno
push
icebp
fisttp
ds
cmp
xchg
inc
pusha
and
mov
xrelease
or
or
mov
mov
out
mov
std
cmps
(bad)
jecxz
aas
and
push
arpl
cmp
sbb
and
mov
std
jno
pop
(bad)
mov
ins
inc
arpl
stos
inc
arpl
pop
mov
arpl
outs
push
arpl
ins
inc
arpl
jno
jo
lock
pop
cmp
retf
(bad)
dec
test
mul
sahf
dec
jmp
adc
add
mov
lods
mov
dec
nop
pop
jecxz
daa
push
sub
add
imul
inc
mov
std
retf
add
push
daa
aaa
jbe
aas
inc
sub
xchg
int3
inc
loope
jecxz
popf
adc
mov
ret
jecxz
ds
ret
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
cld
and
ret
stos
pop
add
jecxz
pop
int3
sub
mov
mov
(bad)
enter
ds
xchg
(bad)
xchg
inc
aas
jge
and
jecxz
ds
clc
pop
dec
arpl
jecxz
cmp
mov
and
lods
int
(bad)
mov
mov
(bad)
enter
ds
jmp
cmp
mov
inc
out
inc
jmp
dec
jb
xor
mov
inc
xchg
fidivr
(bad)
ds
xlat
retf
mov
retf
mov
test
jnp
mov
mov
loop
dec
ds
out
test
xor
test
push
lods
add
mov
jecxz
leave
cld
xor
ds
ds
pop
enter
(bad)
mov
std
ds
sub
mov
std
cmp
jb
inc
retf
cmp
mov
cld
mov
ins
inc
sti
shr
cmp
mov
std
retf
inc
or
sub
in
leave
cld
das
pop
mov
(bad)
test
jo
arpl
ins
inc
arpl
ins
inc
arpl
cmp
int3
cli
pop
pop
xchg
push
jno
arpl
cmp
xchg
inc
jo
adc
or
mov
(bad)
es
jne
ds
push
inc
cmp
imul
sbb
jecxz
ror
sub
add
mov
ins
mov
jecxz
retf
fimul
(bad)
ds
and
std
ds
in
ds
fwait
aam
mov
mov
in
ds
and
aas
and
mov
std
es
mov
and
sub
push
repnz
inc
aas
inc
sub
imul
mov
jno
arpl
xor
bound
jecxz
ds
jg
test
outs
dec
arpl
outs
push
arpl
xor
sbb
dec
xchg
push
jecxz
and
sub
mov
and
fisttp
arpl
xor
mov
inc
out
inc
jmp
(bad)
ds
retf
mov
sbb
std
mov
outs
test
mov
std
retf
xor
cmp
call
mov
or
ds
test
lds
std
ds
mov
sahf
out
ds
push
arpl
jo
arpl
ss
jb
std
ds
xor
outs
push
xor
std
ds
sub
cmps
or
daa
loop
std
cmp
std
ds
xchg
mov
mov
or
mov
std
ds
push
aas
mov
xor
repz
ds
pop
enter
(bad)
mov
std
ds
push
aas
mov
cmp
mov
cld
mov
ins
inc
sti
shr
mov
push
in
ds
ds
add
cli
lahf
sbb
inc
je
ds
mov
in
ds
or
mov
test
mov
std
cmps
(bad)
jecxz
aas
inc
cmp
pop
or
cmp
or
cmp
or
retf
fisubr
and
std
ds
jecxz
aaa
mov
pop
int3
add
adc
jmp
add
jge
and
mov
std
scas
sub
dec
inc
or
inc
mov
ret
ret
fidivr
(bad)
ds
xchg
fimul
(bad)
ds
or
mov
mov
(bad)
(bad)
ds
and
std
ds
in
ds
xlat
sar
mov
dec
arpl
sahf
inc
repnz
jecxz
or
cmp
stos
(bad)
jno
inc
cmp
sahf
sti
fnstsw
mov
ret
xor
add
das
into
mov
call
mov
into
jo
arpl
fcmovbe
pop
jbe
and
push
outs
inc
arpl
xor
push
xchg
xor
aas
aas
inc
and
jl
and
sahf
je
inc
mov
or
add
push
int3
or
push
retf
(bad)
(bad)
ds
in
sti
call
push
js
fdiv
inc
xor
dec
jl
and
sahf
sahf
pop
inc
mov
pop
arpl
test
std
ds
jecxz
stos
fisub
lds
cld
jecxz
mov
inc
push
arpl
in
ds
sub
mov
outs
out
cld
dec
xor
jbe
add
iret
add
cld
inc
mov
sahf
inc
fnstsw
mov
ret
movs
jb
inc
sub
jnp
xor
fwait
push
int3
out
mov
cmc
mov
cmp
std
leave
cmp
(bad)
ds
(bad)
aas
mov
xor
pop
add
mov
pop
add
mov
mov
(bad)
mov
data16
mov
in
ds
push
mov
pop
add
test
inc
cmp
dec
arpl
int3
pop
ret
mov
data16
data16
dec
add
pop
daa
mov
sub
dec
inc
cmp
imul
dec
retf
push
add
push
push
dec
push
outs
and
dec
ds
mov
mov
cmps
aas
mov
xor
pop
dec
cmps
mov
std
aas
inc
xor
lahf
sahf
movs
add
arpl
outs
push
arpl
outs
dec
arpl
ins
inc
arpl
ins
push
arpl
outs
push
arpl
dec
dec
cli
pop
push
test
ficom
xchg
pop
cmp
sub
dec
or
outs
inc
aaa
mov
pop
push
test
push
int3
jb
mov
adc
sbb
xchg
(bad)
mov
inc
cmp
pop
and
dec
enter
enter
ds
mov
mov
inc
arpl
cmp
xchg
sub
stos
inc
xor
stos
mov
retfw
dec
int3
add
pop
daa
aam
add
inc
sub
dec
inc
cmp
imul
dec
retf
push
add
push
push
dec
push
int3
add
pop
daa
sbb
add
aas
inc
and
xor
jnp
push
std
dec
sahf
cmp
arpl
test
std
ds
jecxz
(bad)
ret
ret
fidivr
(bad)
ds
mov
inc
jmp
pop
push
cmp
push
inc
mov
cld
ds
out
inc
jmp
dec
inc
mov
pop
popf
adc
(bad)
enter
ds
ret
jecxz
add
jecxz
iret
int
(bad)
mov
mov
(bad)
enter
ds
jmp
ins
pop
arpl
stos
add
inc
sub
leave
imul
std
jp
ins
jp
rcl
retf
xchg
stos
xchg
aas
bound
mov
xor
push
push
cmp
bound
retf
cmp
sub
dec
daa
and
add
cmp
push
daa
pop
add
aas
cmp
(bad)
ds
dec
arpl
stos
inc
cli
pop
sbb
pop
mov
leave
push
cli
pop
sbb
mov
std
daa
out
mov
and
inc
pop
mov
mov
add
cmps
mov
inc
je
iret
or
out
daa
(bad)
loop
lods
sub
inc
mov
pop
xchg
sahf
in
sbb
ret
stos
pop
add
cmp
inc
mov
mov
clc
outs
inc
arpl
push
mov
add
pop
cmp
dec
adc
xchg
lock
jae
cmp
adc
shl
mov
mov
jae
inc
mov
pushf
mov
std
popf
jmp
jecxz
iret
inc
je
iret
or
out
daa
lds
add
and
mov
mul
std
ds
(bad)
mov
iret
inc
je
iret
inc
je
iret
pop
outs
(bad)
imul
dec
mov
dec
(bad)
sahf
mov
inc
arpl
retw
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
std
mov
xor
jecxz
daa
pop
ret
cmp
(bad)
ds
out
jo
std
leave
test
add
mov
pop
add
jecxz
out
sub
mov
mov
(bad)
enter
ds
jmp
fnsave
sub
xor
push
aas
push
and
push
and
adc
inc
mov
lea
jecxz
(bad)
and
pop
daa
(bad)
loopne
ds
aam
xor
and
(bad)
out
std
ds
mov
daa
repnz
ds
std
mov
dec
dec
xchg
in
mov
and
outs
int3
daa
ss
(bad)
cmp
dec
pop
jno
arpl
retf
lods
cmp
(bad)
mov
(bad)
mov
(bad)
in
or
or
dec
push
daa
xchg
mov
repnz
mov
cmp
and
jp
ins
ins
inc
aas
push
push
enter
dec
push
jecxz
fisttp
sub
(bad)
and
mov
ret
mov
call
xchg
shr
std
sar
out
stos
in
ds
das
push
retf
(bad)
ds
retf
mov
push
fldcw
mov
aaa
mov
sahf
jg
inc
mov
dec
arpl
stos
inc
arpl
jecxz
ds
js
mov
mov
adc
(bad)
enter
ds
ret
je
iret
inc
je
iret
and
pop
into
sub
mov
mov
(bad)
enter
ds
jmp
mov
and
mov
inc
arpl
push
jmp
inc
xor
xchg
aas
nop
and
mov
std
es
add
inc
xor
add
adc
or
inc
scas
in
push
xor
xchg
jge
and
mov
std
cmp
dec
imul
adc
mov
ficom
xchg
std
ds
test
aas
mov
ror
or
inc
sbb
cld
jecxz
test
push
int3
and
mov
sub
inc
push
jecxz
(bad)
sahf
hlt
test
inc
arpl
outs
inc
mov
test
inc
je
std
ds
das
ret
jb
je
std
ds
and
scas
out
inc
je
std
ds
pop
ret
jb
je
std
ds
or
test
mov
xor
dec
inc
mov
data16
mov
mov
std
outs
or
test
ins
inc
arpl
ins
push
out
inc
arpl
outs
inc
pop
inc
cmp
dec
or
ret
fidiv
cld
push
mov
daa
inc
jp
pop
pop
retf
mov
push
cmc
sbb
lods
and
pop
cmp
push
mov
aas
push
jno
arpl
retf
jp
mov
fdivr
mov
outs
cmp
push
sub
cmps
mov
std
aas
or
std
push
push
jno
arpl
retf
pop
(bad)
mov
outs
cmp
push
sub
xchg
or
std
push
push
jno
arpl
retf
inc
(bad)
mov
jecxz
xchg
or
aad
inc
xor
outs
sahf
adc
inc
cmp
add
lds
inc
sub
cld
sbb
call
dec
mov
and
aaa
ds
sahf
xchg
ds
ret
xor
jg
int3
mov
sbb
mov
cmp
retf
jecxz
daa
hlt
pusha
add
inc
sub
xchg
inc
cmp
pop
and
loope
sub
mov
dec
retf
push
or
std
push
xchg
xor
aas
inc
pop
and
xor
dec
inc
pusha
and
push
and
daa
inc
push
psubq
scas
in
dec
cmp
add
sub
cmp
loope
xchg
push
mov
inc
jle
dec
arpl
jo
dec
aas
cmp
push
mov
stos
sub
scas
out
enter
int3
mov
push
sub
sub
jae
xchg
inc
aas
aas
push
and
in
mov
inc
(bad)
(bad)
ds
in
xor
std
(bad)
and
push
retf
push
test
push
inc
xchg
movs
or
ds
sub
imul
dec
arpl
int3
outs
mov
fiadd
push
repz
ds
and
(bad)
cld
jecxz
int3
add
ss
mov
add
inc
xor
jae
jno
arpl
int3
ds
inc
sub
arpl
xor
lahf
sahf
aad
inc
mov
inc
cmp
add
ds
and
xor
ds
inc
cmp
pop
inc
sub
push
inc
xor
push
or
arpl
xor
xchg
push
jecxz
fwait
pop
sub
test
jno
arpl
dec
std
nop
mov
out
mov
std
leave
or
sbb
cli
pop
push
retf
adc
push
outs
inc
arpl
xor
push
nop
cld
jecxz
ds
xor
push
and
dec
ds
mov
mov
mov
sbb
fs
mov
retf
out
mov
dec
fs
in
adc
add
cmovno
and
outs
push
arpl
xor
mov
pop
dec
retf
sbb
push
xor
dec
test
pop
adc
mov
test
aas
mov
dec
pop
and
mov
dec
arpl
outs
push
arpl
xor
int3
add
bound
xor
mov
and
push
mov
(bad)
dec
int3
dec
or
xchg
inc
xor
cmps
sahf
bnd
mov
inc
arpl
outs
dec
arpl
xor
add
bound
std
arpl
aas
mov
and
sub
pop
mul
inc
aas
sub
pop
lds
cmp
ficomp
mov
pushf
pop
add
inc
sub
xchg
and
mov
sub
(bad)
sub
xor
add
xor
mov
add
ja
add
aas
pop
and
xor
jg
push
std
inc
sahf
nop
add
arpl
jo
arpl
test
std
ds
jecxz
mov
pop
mov
fisubr
in
cmp
std
retf
add
pop
push
cmp
(bad)
aas
mov
cld
ds
out
cmp
std
leave
inc
or
popf
adc
(bad)
enter
ds
ret
jecxz
add
ds
push
ds
cdq
xor
aas
cdq
xor
aas
enter
enter
sbb
ds
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
int3
adc
ret
stos
pop
add
jecxz
ja
sub
mov
mov
(bad)
enter
ds
xchg
(bad)
xchg
inc
aas
jge
and
jecxz
ds
enter
outs
dec
arpl
jecxz
cmp
mov
or
out
daa
hlt
jp
aas
lods
sub
inc
mov
pop
xchg
sahf
ins
adc
ret
stos
pop
add
cmp
arpl
outs
dec
xchg
dec
retf
dec
outs
inc
cmp
aad
out
mov
std
ret
mov
push
jecxz
imul
sahf
adc
cmp
out
inc
mov
ds
js
std
into
inc
je
iret
cmp
push
xchg
or
pop
xor
push
dec
pop
inc
sub
inc
push
xor
inc
aas
cmp
jb
inc
pop
add
cli
pop
sbb
or
push
xchg
or
inc
pop
jecxz
pop
or
dec
test
int3
outs
mov
test
add
outs
out
int3
add
in
jg
std
cmps
mov
xor
push
cld
sti
std
ds
in
int
std
div
xor
enter
test
retf
in
pop
mov
pop
add
mov
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
or
or
fisttp
inc
repnz
inc
inc
sti
cld
push
inc
xor
daa
dec
inc
aas
inc
sub
push
sti
(bad)
ds
sbb
test
dec
xchg
(bad)
ds
inc
arpl
es
push
call
sub
jno
std
ds
ror
xor
imul
std
sub
jecxz
test
outs
push
ret
cmp
ins
inc
arpl
push
inc
mov
mov
icebp
mov
dec
loope
mov
mov
add
inc
sub
retf
dec
push
inc
sub
retf
add
aas
sub
int3
push
call
sub
inc
mov
add
int3
rol
mov
outs
push
enter
test
outs
dec
addr16
jo
inc
icebp
mov
dec
loope
mov
imul
inc
sub
retf
dec
arpl
and
int
aas
mov
mov
cmp
add
(bad)
mov
stos
(bad)
aas
mov
std
leave
or
mov
inc
cmps
xchg
cmp
retf
jecxz
mov
ins
pop
retf
mov
inc
cmps
xchg
cmp
retf
mov
xchg
fisubr
or
mov
inc
cmps
xchg
cmp
retf
fwait
lds
ins
push
retf
cmp
mov
cmps
(bad)
ds
mov
mov
add
cmps
mov
cmp
std
ds
out
shr
std
div
xor
mov
mov
pop
popf
adc
pushf
js
std
leave
add
mov
or
mov
(bad)
ds
out
shr
std
leave
add
pop
popf
jmp
jecxz
ds
mov
cmps
add
inc
je
iret
inc
je
iret
inc
je
iret
and
mov
(bad)
mov
mov
(bad)
enter
ds
jmp
in
ds
xor
inc
mov
ret
sub
dec
jmp
push
and
out
mov
sahf
xchg
add
mov
out
sub
stos
inc
arpl
loop
ds
sbb
retf
xor
sahf
mov
mov
test
or
pop
pushf
jmp
or
mov
mov
add
movs
ss
inc
sub
fwait
inc
xor
lahf
inc
inc
and
sub
cld
aaa
xchg
sub
or
outs
inc
fwait
icebp
test
inc
ss
sub
data16
jge
mov
out
test
pop
ret
mov
arpl
inc
mov
pop
add
ss
retf
cmp
jecxz
pop
icebp
mov
inc
jmp
xor
pop
int3
sbb
mov
cmp
push
aas
mov
or
dec
in
or
arpl
retf
(bad)
mov
ds
ds
jp
aas
mov
dec
int3
add
adc
mov
xor
pop
sbb
dec
ins
(bad)
ds
add
scas
out
dec
cmp
add
mov
into
dec
xchg
inc
mov
cmp
sbb
xchg
ins
sub
inc
aas
push
push
enter
dec
push
jecxz
fisttp
sub
(bad)
and
push
ret
mov
xor
gs
call
xchg
(bad)
call
xchg
ds
ds
retf
lods
mov
fisub
mov
inc
xor
lahf
inc
sub
inc
cmp
lahf
pop
outs
dec
arpl
mov
and
xchg
pop
xor
aas
push
sub
xchg
inc
mov
(bad)
call
or
dec
loop
ds
cmp
cmp
(bad)
ds
dec
xchg
sahf
jmp
ds
ret
cmps
ds
outs
mov
mov
std
leave
or
dec
test
mov
dec
ds
mov
les
(bad)
popa
enter
ds
ret
sbb
xor
fs
inc
push
aas
mov
mov
lods
in
ds
jecxz
sbb
sub
leave
add
and
jl
pop
call
std
sar
ja
jae
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
mov
icebp
(bad)
jae
adc
mov
leave
cli
pop
push
jp
pop
add
into
outs
inc
arpl
data16
inc
mov
cld
arpl
fcom
mov
inc
arpl
jo
jg
xor
retf
dec
enter
cwde
jg
std
cli
mov
std
ds
rcr
pop
adc
mov
test
cmp
xor
xor
mov
popa
add
mov
std
ds
repnz
add
sbb
mov
int3
enter
add
or
push
push
mov
inc
aas
inc
cmps
pop
call
adc
mov
mov
ds
sti
add
outs
int3
xchg
sahf
ficom
mov
mov
adc
ror
inc
arpl
outs
inc
scas
out
dec
icebp
cmps
jnp
jmp
fadd
mov
mov
cmp
aas
sub
mov
jecxz
dec
(bad)
fcmovbe
pop
jbe
inc
out
and
dec
cmps
mov
std
ds
mov
test
jmp
push
push
mov
inc
aas
inc
cmps
pop
call
adc
mov
icebp
cmp
xor
xor
mov
popa
add
mov
cmps
xchg
mov
std
mov
(bad)
mov
ds
dec
xor
aas
mov
int3
daa
lahf
add
inc
sub
test
retf
jecxz
test
cmps
push
aas
inc
xor
push
inc
cmp
inc
push
aas
mov
dec
(bad)
or
pusha
push
mov
add
adc
ds
imul
aas
xlat
cmp
aas
xor
ds
inc
sub
inc
cmp
ds
xor
inc
cmp
add
test
ds
and
xchg
ds
inc
sub
les
adc
or
or
ins
or
div
xchg
mov
mov
arpl
outs
inc
xchg
out
mov
ins
inc
inc
outs
in
ds
or
inc
cmp
dec
inc
sub
div
out
mov
arpl
outs
ds
aas
in
inc
mov
std
add
jecxz
(bad)
adc
arpl
ins
push
div
lock
leave
or
or
inc
inc
mov
std
mov
sub
les
add
iret
add
dec
xchg
(bad)
xchg
and
enter
inc
mov
std
add
jecxz
(bad)
js
std
into
out
ds
sbb
ds
sub
ds
cmp
ds
dec
ds
pop
ds
inc
je
iret
inc
je
iret
inc
xor
inc
cmp
rol
jne
mov
loope
xor
js
std
into
inc
sub
inc
cmp
test
jo
jnp
mov
add
inc
je
iret
inc
je
iret
and
out
sub
mov
mov
(bad)
enter
ds
jmp
or
push
cli
pop
or
inc
sub
sub
add
jmp
(bad)
mov
lds
cld
jecxz
fidivr
mov
fidiv
(bad)
ds
mov
mov
and
add
iret
xor
sub
(bad)
retf
es
pop
xchg
and
dec
lea
arpl
pop
jae
inc
xor
jnp
addr16
lea
mov
and
retf
dec
mov
jecxz
mov
pop
lds
mov
xchg
jbe
std
int3
add
es
sahf
and
mov
dec
arpl
stos
inc
arpl
jecxz
ds
jp
(bad)
retf
(bad)
push
sub
mov
mov
add
movs
push
aas
and
adc
(bad)
mov
mov
(bad)
enter
ds
push
retf
jb
mov
sub
dec
mov
std
ds
dec
mov
jecxz
mov
add
les
mov
add
inc
xor
push
cli
pop
push
ds
std
push
mov
jae
mov
pop
push
jmp
mov
mov
add
cmps
mov
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
push
mul
mov
inc
sub
mov
push
and
add
pop
push
test
call
jb
outs
hlt
push
jg
movs
add
cmp
pop
mov
fwait
cs
mov
ja
jg
cmps
ds
inc
movs
rol
mov
inc
je
iret
or
out
daa
mov
jmp
imul
inc
aas
sahf
cmps
mov
inc
(bad)
jecxz
lea
ins
inc
xchg
sahf
xchg
mov
push
cld
pop
push
int
jecxz
lds
in
ds
jle
mov
(bad)
int3
cld
jecxz
lds
std
ds
push
aas
mov
xchg
push
in
ds
push
aas
mov
xchg
dec
in
ds
push
aas
mov
xchg
ds
ds
pop
int
jecxz
add
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
cld
pop
inc
mov
ret
stos
pop
add
jecxz
push
iret
sub
mov
mov
(bad)
enter
ds
jmp
ins
jp
ret
lahf
inc
sub
jno
ins
pop
arpl
sbb
(bad)
mov
std
mov
jno
retf
mov
std
mov
outs
mov
mov
std
jns
pop
ss
xchg
cmps
xchg
aas
inc
adc
push
cmp
inc
or
cld
repz
sub
dec
daa
dec
in
add
cmp
push
daa
inc
in
add
cmp
(bad)
ds
dec
arpl
stos
inc
cli
pop
sbb
mov
mov
jne
aas
pop
and
xor
add
jge
dec
mov
jecxz
enter
int3
add
les
xchg
out
add
inc
xor
(bad)
adc
sbb
mov
jae
mov
push
push
jge
and
jecxz
ds
mov
inc
mov
dec
arpl
inc
pop
call
std
sar
iret
inc
je
iret
inc
je
iret
outs
sbb
test
je
iret
inc
je
iret
cmp
sub
neg
mov
ins
inc
arpl
or
mov
dec
(bad)
inc
mov
xchg
(bad)
xchg
ficom
xchg
pop
in
sar
iret
inc
je
iret
inc
je
iret
or
out
daa
pop
add
aas
inc
sub
add
dec
nop
push
mov
aas
mov
push
loope
jecxz
xor
and
mov
jns
mov
inc
je
iret
cmp
sub
(bad)
std
leave
cld
pop
mov
mov
or
(bad)
inc
mov
xchg
(bad)
cmc
ds
xchg
ficom
xchg
pop
in
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
cmp
sub
(bad)
std
leave
cld
pop
mov
mov
or
(bad)
inc
mov
xchg
(bad)
idiv
mov
xchg
ficom
xchg
push
in
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
cmp
cs
inc
inc
and
cmp
mov
mov
lds
aas
mov
mov
inc
sub
dec
inc
xor
add
push
(bad)
or
dec
or
push
jb
addr16
inc
sub
push
inc
arpl
outs
out
sub
outs
lock
push
jne
mov
iret
adc
sub
dec
mov
sbb
xchg
sub
mov
sub
add
inc
mov
adc
call
cmp
icebp
pop
dec
mov
outs
inc
pop
and
push
test
push
jecxz
iret
or
dec
add
jno
arpl
cmp
mov
std
ds
xor
pop
aas
cmp
arpl
push
and
push
and
push
and
sahf
mov
pop
pushf
adc
outs
js
std
into
mov
ds
mov
inc
ds
ret
aas
int3
inc
ds
mov
aas
scas
inc
ds
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
fsubr
std
leave
cld
cmp
arpl
or
(bad)
inc
mov
xchg
(bad)
idiv
mov
xchg
ficom
xchg
push
in
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
cmp
cs
inc
inc
and
cmp
mov
mov
lds
aas
mov
mov
inc
sub
dec
inc
xor
add
push
(bad)
or
dec
or
push
jb
addr16
inc
sub
mov
inc
arpl
outs
out
sub
outs
lock
push
jne
mov
iret
adc
sub
dec
mov
sbb
xchg
sub
mov
sub
add
inc
mov
adc
call
cmp
icebp
pop
dec
mov
outs
inc
pop
and
push
test
push
jecxz
iret
or
dec
add
jno
arpl
cmp
mov
std
ds
xor
pop
aas
cmp
arpl
push
and
push
and
push
and
sahf
imul
adc
outs
js
std
into
add
aas
or
aas
or
inc
ds
sbb
ds
pop
inc
ds
test
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
xlat
call
mov
mov
or
(bad)
inc
mov
xchg
(bad)
cmc
ds
xchg
ficom
xchg
push
in
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
sub
scas
in
push
retf
inc
retf
push
jb
cmp
mov
std
ds
jecxz
sbb
sub
leave
add
mov
inc
sub
inc
or
jecxz
mov
or
enter
enter
enter
enter
daa
bound
add
inc
je
iret
cmp
sub
(bad)
call
mov
mov
or
(bad)
inc
mov
xchg
(bad)
cmc
ds
xchg
ficom
xchg
push
in
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
cmp
sub
(bad)
call
mov
mov
or
(bad)
inc
mov
xchg
(bad)
idiv
mov
xchg
ficom
xchg
push
in
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
cmp
inc
sub
gs
sahf
xor
inc
mov
ret
int
pop
mov
je
iret
or
mov
inc
fwait
jle
mov
mov
clc
outs
inc
arpl
push
mov
add
pop
cmp
dec
adc
xchg
lock
jae
cmp
adc
shl
mov
mov
jae
inc
mov
pushf
mov
std
popf
jmp
jecxz
iret
inc
je
iret
or
out
daa
cmc
or
aas
and
mov
push
in
ds
mov
ror
je
iret
inc
je
iret
pop
outs
(bad)
mov
cli
pop
dec
mov
dec
(bad)
sahf
jmp
ds
inc
arpl
retw
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
std
mov
xchg
mov
dec
daa
mov
or
inc
cmp
mov
out
pop
out
leave
test
adc
mov
mov
mov
ror
je
iret
inc
je
iret
or
out
xchg
inc
jb
aas
mov
in
fwait
in
jno
imul
cmp
ds
mov
dec
dec
movs
dec
daa
inc
sub
ror
je
iret
inc
je
iret
and
addr16
sub
mov
mov
(bad)
enter
ds
jmp
cmp
scas
ins
inc
arpl
jecxz
add
mov
std
es
enter
aam
xor
cmp
std
ds
mov
daa
fcmovb
(bad)
ds
std
mov
jo
arpl
int3
jo
mov
dec
retf
fadd
mov
mov
scas
imul
arpl
xor
(bad)
cmp
adc
cli
pop
or
or
push
cli
pop
sbb
mov
std
retf
cli
pop
adc
shl
retf
pushf
scas
out
mov
out
mov
std
retf
add
push
push
cmp
jecxz
ds
inc
arpl
loop
ds
retf
inc
mov
add
sbb
aas
mov
std
sar
iret
inc
je
iret
inc
je
iret
cmp
sub
cld
jecxz
xchg
inc
aad
adc
call
xor
pop
push
loopne
out
aas
jmp
cs
mov
std
retf
or
or
pop
out
aas
inc
jb
aas
mov
xchg
pop
in
ds
push
aas
mov
push
xchg
push
mov
inc
arpl
ins
dec
arpl
ins
jp
(bad)
ins
jp
fisubr
repnz
jp
test
fidiv
out
aas
mov
pop
loop
out
aas
adc
mov
add
je
iret
inc
je
iret
inc
je
iret
inc
and
(bad)
cmps
dec
fs
ds
jecxz
or
sub
leave
add
push
push
mov
std
ds
push
aas
cmp
sub
aaa
ins
(bad)
ds
xchg
mov
std
retf
or
(bad)
test
xor
std
(bad)
cli
pop
or
add
push
push
cli
pop
adc
mov
std
push
cli
pop
push
aas
mov
std
add
mov
std
add
mov
std
mov
ds
sub
jae
in
ds
add
movs
push
aas
inc
je
iret
inc
je
iret
cmp
sub
aaa
ins
(bad)
ds
xchg
mov
std
retf
or
(bad)
test
xor
std
(bad)
cli
pop
or
add
push
push
cli
pop
adc
mov
std
push
cli
pop
push
aas
mov
std
add
mov
std
add
mov
std
es
ds
sub
jae
in
ds
add
movs
push
aas
inc
je
iret
inc
je
iret
cmp
sub
aaa
pushf
(bad)
ds
xchg
mov
std
xchg
jmp
out
xchg
push
mov
inc
arpl
ins
dec
arpl
ins
jb
into
ins
jb
shr
jmp
fnstenv
sbb
imul
into
inc
je
iret
inc
je
iret
or
out
retf
mov
icebp
mov
dec
loope
mov
sub
std
leave
cld
pop
mov
ds
mov
fisubr
popf
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
sbb
sub
inc
mov
pop
xchg
sahf
in
std
inc
mov
ret
stos
pop
add
cmp
arpl
outs
dec
xchg
dec
retf
dec
outs
inc
cmp
aad
out
jbe
std
ret
mov
push
jecxz
imul
sahf
adc
cmp
out
inc
mov
ds
js
std
into
inc
je
iret
cmp
sub
neg
mov
ins
inc
arpl
or
mov
dec
(bad)
inc
mov
xchg
(bad)
cmc
ds
xchg
ficom
xchg
dec
in
sar
iret
inc
je
iret
cmp
sub
neg
mov
ins
inc
arpl
or
mov
dec
(bad)
inc
mov
xchg
(bad)
idiv
mov
xchg
ficom
xchg
dec
in
sar
iret
inc
je
iret
cmp
sub
xchg
cmp
popf
sbb
retf
mov
inc
aas
or
data16
mov
add
adc
jmp
xchg
push
dec
dec
inc
mov
dec
lea
inc
cmp
cld
pop
mov
push
mov
push
arpl
ins
inc
arpl
ins
pop
arpl
ins
pop
arpl
ins
pop
arpl
ins
pop
arpl
retf
test
mov
pop
popf
adc
imul
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
not
mov
jno
arpl
mov
inc
arpl
ins
dec
arpl
stos
inc
arpl
(bad)
ds
inc
arpl
jecxz
ds
inc
arpl
jecxz
ds
inc
arpl
jecxz
ds
sub
mov
mov
mov
std
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
not
mov
jno
arpl
mov
inc
arpl
ins
dec
arpl
stos
inc
arpl
fdivr
ds
inc
arpl
jecxz
ds
inc
arpl
jecxz
ds
inc
arpl
jecxz
ds
int3
(bad)
mov
mov
mov
std
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
mov
or
outs
inc
xchg
dec
daa
adc
add
test
cmps
adc
pop
add
mov
movs
push
aas
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
outs
out
add
push
int3
sti
and
(bad)
add
inc
xor
inc
jge
and
mov
std
ds
std
leave
neg
cmp
and
xchg
(bad)
addr16
or
arpl
retf
rcr
mov
movs
pop
xchg
out
sar
mov
repz
js
daa
test
mov
pop
xchg
retf
outs
inc
mov
sub
retf
add
or
sbb
add
inc
xor
inc
inc
sub
xchg
xor
inc
aas
cmp
std
enter
mov
jo
arpl
in
ds
mov
inc
mov
leave
aas
mov
push
retf
call
mov
and
mov
repz
push
mov
jno
arpl
dec
adc
std
jecxz
daa
adc
add
cmp
push
int3
cli
pop
jp
mov
dec
mov
push
inc
pop
inc
cmp
pop
or
retf
inc
or
aas
(bad)
jecxz
mov
pop
and
sub
outs
mov
sub
mov
sub
(bad)
mov
std
ds
xor
cmp
and
mov
mov
mov
std
xchg
cld
jecxz
inc
push
mov
retf
xor
mov
dec
pop
or
add
pop
jecxz
int3
add
push
push
cmp
xchg
inc
mov
cld
ds
out
mov
std
popf
adc
mov
in
adc
(bad)
enter
ds
ret
jecxz
add
je
iret
inc
je
iret
inc
je
iret
and
data16
iret
sub
mov
mov
(bad)
enter
ds
jmp
ss
xchg
or
pop
push
retf
pop
int3
add
pop
xchg
pop
outs
int
cli
pop
pop
aas
mov
std
es
add
inc
cmp
retf
push
test
in
dec
(bad)
jecxz
nop
ds
and
cmp
or
ds
sub
push
or
mov
sahf
cmp
inc
mov
mov
fidivr
add
(bad)
loop
aas
inc
xor
push
ds
and
mov
dec
arpl
dec
mov
xchg
fiadd
dec
xchg
sahf
aas
inc
jo
arpl
jno
arpl
xor
xchg
jl
and
mov
or
cli
pop
push
inc
sahf
mov
dec
arpl
test
in
mov
std
retf
add
sbb
adc
push
daa
mov
add
inc
sub
xchg
and
gs
(bad)
jecxz
mov
fimul
ds
xor
fwait
pop
jno
jg
jg
inc
mov
dec
arpl
stos
inc
arpl
in
fbstp
or
push
cli
pop
push
ds
std
daa
inc
loope
aas
inc
sub
or
pop
xor
inc
xor
pop
push
xor
std
(bad)
or
sub
cli
pop
xor
cli
pop
ss
enter
daa
xor
ds
xor
mov
ins
or
mov
std
sar
inc
mov
mov
inc
je
iret
or
push
retf
push
retf
out
sahf
call
fs
push
retf
push
test
hlt
std
ds
jecxz
retf
fnstenv
sahf
sbb
inc
mov
mov
pop
or
cmps
shl
ds
jecxz
les
push
retf
dec
test
mov
dec
lea
pop
or
cmps
shl
ds
jecxz
les
fmulp
add
push
test
mov
dec
lea
call
pop
arpl
outs
cmp
or
dec
cld
call
mov
jecxz
lea
mov
outs
dec
pop
push
dec
(bad)
cmps
mov
std
ds
jecxz
retf
push
test
mov
dec
lea
mov
outs
inc
pop
or
cmps
shl
ds
jecxz
les
push
retf
dec
test
mov
dec
lea
pop
or
cmps
shl
ds
aad
jbe
ficomp
mov
mov
inc
je
iret
cmp
push
xchg
inc
add
xchg
cld
jecxz
retf
push
test
mov
dec
mov
test
sahf
lock
mov
push
mov
cmp
inc
mov
mov
pop
or
hlt
std
ds
jecxz
les
ss
or
push
int3
add
or
sahf
jge
inc
mov
inc
arpl
push
jp
(bad)
in
push
inc
sub
pop
cmp
aas
mov
std
adc
inc
js
std
xchg
inc
mov
mov
jecxz
sub
dec
(bad)
test
dec
(bad)
test
dec
add
inc
mov
aaa
pushf
call
out
mov
std
xchg
inc
mov
sbb
jecxz
xchg
inc
mov
fs
std
retf
sbb
jbe
add
mov
std
ds
pop
call
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
test
dec
and
addr16
sahf
out
cld
ds
int3
daa
ds
add
adc
or
cmp
sub
aaa
mov
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
pop
nop
aas
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
mov
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
mov
aas
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
mov
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
addr16
aas
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
mov
or
outs
dec
mov
test
dec
outs
inc
jp
aas
mov
mov
int3
or
mov
add
mov
sub
cmp
(bad)
ds
pop
call
std
leave
mul
mov
iret
inc
je
iret
inc
je
iret
inc
je
iret
and
out
sub
mov
mov
(bad)
enter
ds
jmp
cmp
daa
sbb
add
inc
sub
retf
push
test
dec
mov
jecxz
mov
(bad)
pop
adc
test
jl
mov
outs
retf
add
(bad)
push
dec
mov
and
push
cmps
cmp
jecxz
les
sub
cli
pop
push
retf
push
daa
mov
add
inc
out
mov
ret
mov
sahf
loop
inc
mov
push
arpl
outs
leave
xchg
sahf
adc
inc
mov
inc
arpl
sub
aaa
xor
les
mov
out
scas
call
sbb
cld
call
ins
(bad)
ds
std
adc
fdivr
mov
ss
retf
mov
int
in
ds
jp
aas
mov
mov
push
mov
dec
arpl
ins
push
arpl
ins
jp
loop
jp
out
jp
(bad)
ins
jp
add
adc
mov
mov
adc
(bad)
enter
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
sub
inc
xor
jnp
xor
mov
outs
test
pop
xor
icebp
cmps
jae
inc
mov
add
out
(bad)
cld
dec
mov
inc
xor
dec
or
std
(bad)
or
push
enter
enter
enter
enter
enter
daa
dec
jae
ds
stos
pop
popf
adc
imul
into
inc
je
iret
inc
je
iret
cmp
sub
(bad)
call
mov
mov
or
(bad)
inc
mov
xchg
(bad)
cmc
ds
xchg
ficom
xchg
inc
in
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
cmp
sub
(bad)
call
mov
mov
or
(bad)
inc
mov
xchg
(bad)
idiv
mov
xchg
ficom
xchg
inc
in
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
or
out
test
mov
xor
ins
test
mov
std
mov
outs
inc
pop
and
addr16
push
jecxz
aas
or
(bad)
pushf
js
std
into
inc
je
iret
inc
je
iret
cmp
push
div
outs
out
js
fs
ds
push
sbb
dec
nop
mov
add
add
int3
add
push
pop
jecxz
dec
or
inc
jbe
pop
enter
ds
adc
or
push
ds
jecxz
test
movs
or
inc
pop
sbb
retf
arpl
mov
les
cmp
inc
aas
push
int3
cmc
dec
mov
hlt
mov
mov
cld
jmp
and
dec
ds
jecxz
test
jecxz
ret
or
dec
mov
add
inc
je
iret
inc
je
iret
inc
xor
inc
inc
cmp
inc
aaa
ror
inc
mov
mov
and
addr16
pop
ss
push
mov
inc
aas
inc
aam
xor
(bad)
mov
(bad)
dec
nop
or
lds
mov
cld
push
(bad)
xor
jo
pop
mov
std
retf
cli
pop
or
or
dec
or
add
cld
jecxz
add
mov
std
add
jecxz
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
out
aas
or
mov
aas
sub
inc
inc
sub
cmp
sbb
jecxz
ds
cmp
push
mov
inc
and
sbb
add
push
push
cmp
sbb
jecxz
ds
out
lods
call
inc
inc
mov
gs
push
sub
retf
add
or
repnz
aas
or
dec
arpl
retf
mov
mov
jmp
xchg
inc
nop
and
jecxz
xchg
and
addr16
pop
dec
dec
fdivr
jecxz
aas
mov
xchg
xchg
cld
jecxz
das
cmp
push
dec
cmp
jo
arpl
outs
int
push
sub
xchg
arpl
adc
add
xlat
push
test
dec
xor
std
jecxz
mov
arpl
jo
arpl
xor
cmps
mov
std
mov
mov
std
les
adc
jecxz
retf
cli
pop
adc
push
int3
mov
jecxz
das
cmp
pop
int3
add
adc
pop
int3
lock
mov
test
les
adc
cld
jecxz
mov
imul
jbe
cmp
add
push
xchg
sahf
push
inc
mov
inc
arpl
lods
or
ds
xor
inc
jge
and
jecxz
cmp
rcr
aas
jmp
jmp
or
ror
cli
pop
push
(bad)
or
ror
add
adc
sub
leave
cmps
pop
rol
mov
or
arpl
outs
lock
cmp
and
jecxz
ds
out
stos
call
pop
retf
adc
jecxz
popf
sbb
aas
mov
std
mov
mov
add
inc
je
iret
inc
je
iret
and
pop
shr
(bad)
mov
mov
(bad)
enter
ds
jmp
aad
int3
add
sub
cmp
aas
inc
sub
push
inc
xor
addr16
stos
and
std
ds
std
ds
(bad)
pop
inc
mov
dec
arpl
xor
push
xchg
cmp
fdivr
mov
jo
arpl
stos
and
std
ds
std
ds
fwait
pop
inc
mov
mov
fisubr
ds
xchg
std
ds
test
aas
mov
ror
inc
push
xchg
or
clc
lock
add
into
xor
push
pop
jmp
push
int3
add
cs
jl
and
mov
std
aas
sahf
jns
inc
mov
push
arpl
outs
dec
arpl
outs
push
(bad)
outs
test
pop
sub
xadd
push
xor
push
xchg
pop
jecxz
sbb
sub
xchg
inc
xor
jae
inc
push
inc
mov
adc
or
or
cli
pop
or
test
ret
fiadd
in
int
std
leave
add
or
neg
cmp
sti
mov
cld
sub
inc
sub
inc
xor
dec
sahf
push
repnz
mov
(bad)
ds
mov
movs
cmp
aas
out
mov
jb
inc
sub
(bad)
sbb
ret
mov
std
mov
outs
inc
xchg
mov
xor
mov
pop
out
or
or
test
push
xor
ins
sahf
mov
sub
push
mov
std
ds
and
jno
aas
inc
sub
cmp
call
and
cmp
inc
inc
sub
inc
sub
push
push
int3
add
mov
add
(bad)
jo
arpl
xor
mov
pop
out
or
std
sub
dec
bswap
add
xor
clc
cmp
aas
inc
sub
int3
dec
or
(bad)
mov
add
out
mov
fisub
ds
and
jecxz
retf
dec
pop
and
xor
jg
xor
xchg
inc
xor
jae
and
inc
repnz
jecxz
mov
repz
fidivr
ds
in
adc
or
add
mov
(bad)
es
add
aas
pop
and
xor
push
jl
and
mov
std
inc
sahf
call
dec
arpl
stos
and
std
ds
std
ds
scas
pop
inc
mov
mov
in
ds
icebp
std
ds
jle
dec
in
ds
mov
inc
je
iret
cmp
sub
imul
mov
mov
inc
arpl
ins
dec
arpl
repz
cmp
mov
mov
jmp
ds
and
jecxz
ds
and
jecxz
ds
and
jecxz
ds
and
jecxz
ds
cmp
pop
sahf
fild
arpl
stos
add
mov
std
sar
inc
mov
mov
inc
je
iret
cmp
sub
shr
leave
cld
daa
mov
mov
or
(bad)
inc
mov
xchg
(bad)
xchg
ficom
xchg
ds
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
(bad)
out
add
cmp
std
mov
out
mov
leave
cld
and
lea
imul
mov
sbb
push
jecxz
mov
sub
add
mov
xor
adc
add
cmp
inc
sub
sub
or
retw
int
dec
mov
je
iret
or
out
daa
movs
cmc
add
cmp
inc
sub
mov
mov
dec
ds
push
push
test
jecxz
ds
mov
inc
je
iret
inc
je
iret
cmp
(bad)
mov
dec
add
jecxz
daa
add
(bad)
cmp
pop
inc
mov
mov
lahf
xor
inc
mov
mov
inc
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
push
retf
jb
mov
jecxz
add
mov
std
es
add
inc
mov
sbb
cld
ds
out
mov
std
leave
add
push
popf
sbb
aas
mov
std
sar
iret
or
mov
inc
fwait
mov
mov
mov
clc
outs
inc
arpl
push
mov
add
pop
cmp
dec
adc
xchg
lock
jae
cmp
adc
shl
mov
mov
jae
inc
mov
pushf
mov
std
popf
jmp
jecxz
iret
inc
je
iret
or
out
daa
xchg
hlt
add
and
mov
jle
std
ds
pop
mov
inc
ror
je
iret
inc
je
iret
pop
outs
(bad)
retf
mov
std
retf
cli
pop
dec
mov
dec
(bad)
sahf
mov
arpl
retw
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
std
mov
mov
daa
cs
std
cmp
(bad)
ds
out
inc
out
leave
test
adc
mov
mov
mov
ror
je
iret
inc
je
iret
or
out
xchg
inc
jb
aas
mov
in
test
std
jno
imul
cmp
ds
mov
dec
dec
movs
dec
daa
in
add
adc
je
iret
inc
je
iret
and
xchg
shr
(bad)
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
outs
test
inc
lods
(bad)
ds
inc
arpl
jecxz
ds
cwde
or
cmp
jb
inc
imul
push
int3
les
mov
xor
pop
adc
add
push
nop
push
outs
int3
daa
retf
ds
outs
int3
daa
xor
and
int3
mov
add
dec
(bad)
xor
ror
aas
mov
dec
ds
mov
dec
arpl
loop
ds
xchg
sub
(bad)
pop
popf
sbb
aas
mov
std
sar
iret
inc
je
iret
cmp
sub
mov
mov
ds
mov
mov
std
(bad)
cli
pop
add
jno
arpl
jmp
ds
xor
push
jge
and
jecxz
ds
sub
pop
aas
sub
jae
sub
ja
aas
cmp
inc
add
inc
je
iret
or
mov
or
outs
dec
stos
inc
jmp
retf
dec
outs
inc
cmp
aad
out
popa
jecxz
ret
mov
push
jecxz
imul
aas
mov
pop
popf
adc
mov
movs
push
aas
inc
and
add
jne
aas
mov
xor
cmp
sub
pop
xor
inc
cmp
mov
xchg
mov
std
(bad)
or
dec
or
dec
mov
xchg
(bad)
xchg
ficom
xchg
cmp
std
sar
iret
inc
je
iret
inc
je
iret
cmp
sub
jbe
std
ds
std
ds
mov
inc
mov
mov
mov
std
leave
dec
test
ds
mov
enter
ds
inc
arpl
ins
inc
arpl
ins
inc
arpl
xor
cmps
mov
std
ds
cmp
push
jge
and
jecxz
ds
dec
cmp
inc
add
inc
je
iret
cmp
sub
jbe
std
ds
std
ds
push
add
mov
mov
mov
std
leave
dec
test
ds
mov
enter
ds
inc
arpl
ins
inc
arpl
ins
inc
arpl
xor
cmps
mov
std
ds
cmp
push
jge
and
jecxz
ds
out
cmp
loop
add
inc
je
iret
or
mov
or
outs
dec
stos
inc
jmp
retf
dec
outs
inc
cmp
aad
out
pusha
jecxz
ret
mov
push
jecxz
imul
aas
mov
pop
popf
adc
mov
movs
push
aas
inc
and
add
cmp
aas
mov
mov
clc
outs
inc
arpl
push
mov
add
pop
cmp
dec
adc
xchg
lock
jae
cmp
adc
shl
mov
mov
jae
inc
mov
pushf
mov
std
popf
jmp
jecxz
iret
inc
je
iret
or
out
daa
aad
add
and
mov
call
inc
mov
ror
je
iret
inc
je
iret
pop
outs
(bad)
jecxz
jecxz
retf
cli
pop
dec
mov
dec
(bad)
sahf
retf
stos
ds
inc
arpl
retw
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
std
mov
mov
daa
outs
nop
std
cmp
(bad)
ds
out
ds
leave
test
adc
mov
mov
mov
ror
je
iret
inc
je
iret
or
out
xchg
inc
jb
aas
mov
in
and
mov
daa
call
inc
jne
std
ds
mov
dec
dec
movs
dec
daa
and
inc
ror
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
outs
out
enter
int3
inc
enter
stos
inc
arpl
jecxz
ds
fmul
mov
mov
cmp
jb
inc
push
aas
mov
mov
push
int3
add
mov
xor
pop
adc
add
push
nop
push
outs
int
or
int
jb
(bad)
ds
sub
push
cmp
(bad)
ds
std
ds
test
mov
or
retf
ins
mov
dec
(bad)
ds
push
ds
std
push
xchg
cmp
jns
xchg
shr
sbb
sub
(bad)
and
data16
mov
or
mov
mov
mov
dec
lea
arpl
jecxz
ds
std
add
mov
std
daa
dec
into
add
inc
xor
dec
adc
jecxz
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
movs
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
aaa
jg
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
movs
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
out
aas
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
movs
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
xchg
jle
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
movs
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
inc
jle
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
movs
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
idiv
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
inc
jne
aas
mov
xor
cmp
sub
pop
ss
(bad)
ds
xchg
mov
std
(bad)
or
dec
or
dec
mov
xchg
(bad)
(bad)
ds
xchg
ficom
xchg
xor
adc
iret
inc
je
iret
inc
gs
aas
mov
cmp
test
out
jecxz
ds
scas
push
test
jne
aas
mov
xor
cmp
sub
pop
xor
inc
movs
(bad)
ds
xchg
mov
std
(bad)
or
dec
or
dec
mov
xchg
(bad)
xchg
ficom
xchg
xor
adc
iret
inc
je
iret
inc
je
iret
or
mov
or
outs
dec
fwait
inc
jmp
retf
dec
outs
inc
cmp
aad
out
pop
jecxz
ret
mov
push
jecxz
imul
aas
mov
pop
popf
adc
mov
movs
push
aas
inc
and
add
ror
xchg
or
and
imul
std
ds
jb
inc
sub
les
sub
add
jmp
nop
mov
add
out
mov
outs
inc
arpl
jo
arpl
out
ds
mov
int
mov
add
adc
movs
add
inc
je
iret
inc
je
iret
or
mov
inc
fwait
call
imul
mov
mov
add
pop
cmp
dec
adc
xchg
lock
jae
cmp
adc
shl
mov
mov
jae
inc
mov
pushf
mov
std
popf
jmp
jecxz
iret
inc
je
iret
or
out
daa
mov
add
and
mov
jp
std
ds
jg
inc
mov
ror
je
iret
inc
je
iret
pop
outs
(bad)
(bad)
pop
dec
mov
dec
(bad)
sahf
stos
movs
ds
inc
arpl
retw
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
std
mov
mov
mov
dec
daa
dec
mov
cmp
(bad)
ds
out
cmp
std
leave
test
adc
mov
mov
mov
ror
je
iret
inc
je
iret
or
out
xchg
inc
jb
aas
mov
in
jl
std
jno
imul
cmp
ds
mov
dec
dec
movs
dec
daa
add
inc
ror
je
iret
inc
je
iret
and
data16
shr
(bad)
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
outs
out
enter
int3
inc
test
ds
inc
arpl
jecxz
ds
mov
aaa
cmp
jb
inc
push
aas
mov
mov
push
int3
in
mov
xor
pop
adc
add
push
nop
push
outs
int
jmp
daa
push
(bad)
(bad)
ds
cmp
inc
inc
sub
retf
push
test
jo
ds
(bad)
in
ds
std
ds
xor
add
push
inc
mov
dec
lea
arpl
jecxz
ds
std
add
mov
std
daa
push
leave
add
inc
xor
dec
adc
jecxz
ds
ret
je
iret
inc
je
iret
inc
je
iret
or
mov
or
outs
dec
pop
dec
retf
dec
outs
inc
cmp
aad
out
pop
jecxz
ret
mov
push
jecxz
imul
aas
mov
pop
popf
adc
mov
movs
push
aas
inc
and
add
jne
aas
mov
xor
cmp
sub
pop
xor
inc
pushf
(bad)
ds
xchg
mov
std
(bad)
or
dec
or
dec
mov
xchg
(bad)
xchg
ficom
xchg
xor
std
sar
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
pushf
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
mov
aas
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
pushf
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
addr16
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
aaa
pushf
(bad)
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
pop
jns
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
cmp
inc
mov
ret
stos
pop
add
jecxz
not
sub
mov
mov
(bad)
enter
ds
xchg
(bad)
xchg
inc
aas
jge
and
jecxz
ds
cmp
mov
dec
arpl
jecxz
cmp
mov
cmp
sub
aaa
mov
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
aas
sub
push
aas
sub
push
aas
sub
outs
aas
sub
jae
imul
retw
je
iret
cmp
sub
aaa
mov
ds
xchg
mov
std
(bad)
cli
pop
(bad)
jno
jno
arpl
jmp
ds
xor
dec
jge
and
jecxz
ds
sub
push
aas
sub
outs
aas
sub
jae
daa
js
mov
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
push
retf
inc
xchg
jge
ret
jecxz
ds
xor
std
jmp
and
gs
std
mov
jecxz
pop
cmp
std
mov
push
hlt
les
mov
sbb
jmp
jno
cld
push
icebp
mov
jns
mov
mov
std
popf
adc
ror
je
iret
inc
je
iret
or
mov
or
repnz
jecxz
shl
mov
or
ds
sub
test
inc
in
ds
jecxz
sbb
sub
leave
scas
addr16
lds
aas
mov
xor
cmp
jl
or
daa
sub
aas
cmp
push
xor
jmp
outs
inc
push
aas
mov
xor
cmp
mov
pusha
or
imul
pop
out
sbb
std
popf
adc
shl
pushf
add
mov
mov
test
inc
jp
pusha
in
adc
sar
sub
cmp
(bad)
ds
rol
jbe
cdq
add
jno
fnstenv
xor
cmp
pop
and
dec
retf
imul
inc
je
iret
and
popw
shr
(bad)
mov
mov
(bad)
enter
ds
jmp
cmp
mov
std
retf
mov
inc
aas
jmp
outs
(bad)
ds
xchg
fidiv
ds
ror
mov
sub
sbb
sti
push
retf
test
add
adc
xchg
js
ds
push
stc
mov
test
push
cmp
fidiv
ds
xchg
arpl
std
ds
push
std
(bad)
or
mov
int3
daa
inc
loop
ds
xor
xchg
or
jecxz
mov
(bad)
mov
addr16
lds
aas
mov
mov
(bad)
hlt
push
shl
xor
fadd
aas
mov
push
retf
or
mov
sti
inc
jp
pop
add
sub
repz
dec
jecxz
retf
(bad)
ds
mov
mov
std
(bad)
cli
pop
and
ins
inc
arpl
ins
inc
arpl
ins
inc
arpl
xor
sbb
xchg
ficom
(bad)
ds
dec
sub
jo
arpl
retf
dec
shl
in
ds
call
fidiv
push
enter
enter
push
cli
pop
pop
inc
mov
std
(bad)
xor
pop
enter
enter
nop
push
mov
xchg
mov
jecxz
mov
repz
(bad)
ds
std
ds
inc
arpl
xor
mov
clc
shl
pop
pop
popf
adc
(bad)
enter
ds
ret
lock
into
inc
je
iret
and
data16
shr
(bad)
mov
mov
(bad)
enter
ds
jmp
cmp
clc
inc
jecxz
retf
mov
inc
aas
jmp
outs
(bad)
ds
xchg
fidiv
ds
ror
mov
sub
sbb
sti
push
retf
hlt
mov
add
adc
push
ja
ds
push
stc
mov
test
sar
jecxz
retf
fidiv
ds
xchg
arpl
std
ds
push
std
(bad)
or
mov
int3
daa
mov
std
ds
xor
xchg
or
jecxz
mov
(bad)
mov
addr16
lds
aas
mov
mov
(bad)
hlt
push
shl
xor
fadd
aas
mov
push
retf
jl
mov
sti
inc
jp
pop
add
sub
repz
inc
jecxz
retf
(bad)
ds
mov
mov
std
(bad)
cli
pop
and
ins
inc
arpl
ins
inc
arpl
ins
inc
arpl
xor
sbb
xchg
ficom
(bad)
ds
dec
sub
jo
arpl
retf
mov
lds
std
ds
call
fidiv
push
enter
enter
push
cli
pop
pop
inc
mov
std
(bad)
xor
pop
enter
enter
nop
push
mov
add
mov
mov
fisub
ds
std
ds
inc
arpl
xor
mov
push
mov
pop
pop
popf
adc
(bad)
enter
ds
ret
lock
into
inc
je
iret
and
push
shr
(bad)
mov
mov
(bad)
enter
ds
jmp
cmp
push
cld
dec
aas
jmp
outs
(bad)
ds
xchg
fidiv
ds
ror
mov
sub
sbb
sti
push
retf
mov
add
adc
jbe
std
ds
push
stc
mov
test
xor
mov
mov
fidiv
ds
xchg
arpl
std
ds
push
std
(bad)
or
mov
int3
daa
and
std
ds
xor
xchg
or
jecxz
mov
(bad)
mov
addr16
lds
aas
mov
mov
(bad)
hlt
push
shl
xor
fadd
aas
mov
push
retf
in
lahf
mov
sti
inc
jp
pop
add
sub
repz
inc
jecxz
retf
(bad)
ds
mov
mov
std
(bad)
cli
pop
and
ins
inc
arpl
ins
inc
arpl
ins
inc
arpl
xor
sbb
xchg
ficom
(bad)
ds
dec
sub
jo
arpl
retf
sub
mov
mov
pop
in
ds
call
fidiv
push
enter
enter
push
cli
pop
pop
inc
mov
std
(bad)
xor
pop
enter
enter
nop
push
mov
je
mov
mov
fisub
ds
std
ds
inc
arpl
xor
mov
fmul
mov
mov
adc
(bad)
enter
ds
ret
lock
into
inc
je
iret
lahf
out
std
ds
mov
inc
je
iret
inc
je
iret
push
pop
mov
mov
arpl
ds
sbb
inc
sub
movs
aas
add
retf
std
jecxz
pop
outs
inc
aas
pop
cwde
mov
jo
inc
aas
sbb
adc
aas
stc
(bad)
std
jecxz
enter
xchg
jo
aas
sbb
adc
sub
movs
aas
stc
das
int3
std
jecxz
cmp
sub
jno
sahf
add
scas
jo
aas
pop
mov
mov
add
(bad)
loope
jo
aas
sbb
add
inc
sub
daa
mov
sub
loope
jo
aas
pop
mov
or
inc
sub
movs
jge
(bad)
std
jecxz
inc
aas
icebp
loope
std
jecxz
daa
inc
sub
loope
jo
aas
pop
aam
xchg
jecxz
aas
inc
sub
mov
dec
lds
inc
aas
lods
out
dec
ret
aas
pop
hlt
mov
std
jecxz
dec
into
jo
aas
sbb
add
sub
xor
ins
or
sub
loope
jo
aas
pop
or
xchg
sub
movs
jge
sub
inc
aas
icebp
xor
std
jecxz
ja
sub
loope
jo
aas
aas
icebp
cmp
push
mov
fadd
movs
jge
inc
int3
std
jecxz
mov
std
jecxz
mov
(bad)
loope
jno
aas
pop
cmp
inc
push
jno
aas
lahf
out
enter
xchg
sub
loope
jno
aas
pop
dec
mov
std
jecxz
push
mov
int3
add
std
jecxz
dec
es
aas
adc
sub
stos
call
(bad)
ds
mov
mov
std
(bad)
cli
pop
add
jno
arpl
jmp
ds
xor
push
jge
and
jecxz
ds
sub
pop
aas
sub
jae
sub
ja
aas
jo
mov
add
inc
je
iret
sbb
addr16
cmp
test
jecxz
ds
jmp
daa
push
retf
std
push
xchg
cmp
fdivr
dec
cmp
xchg
cmp
std
ds
imul
sub
mov
cmp
inc
inc
daa
push
nop
push
int3
mov
mov
cmp
imul
inc
scas
out
inc
jecxz
retf
(bad)
ds
mov
ds
inc
arpl
jecxz
ds
inc
arpl
pop
mov
dec
inc
xor
retf
mov
xor
and
mov
loope
cld
jecxz
int3
add
push
daa
jl
add
inc
inc
and
push
outs
leave
daa
in
and
aas
inc
cmp
int3
add
and
or
dec
dec
xchg
(bad)
ds
inc
arpl
xor
arpl
cmp
or
jo
jecxz
int3
add
and
jp
or
sub
test
pop
push
les
dec
retf
push
daa
mov
std
cmp
sbb
mov
mov
sub
cmp
dec
inc
sub
dec
lods
mov
ror
stc
fisttp
(bad)
mov
ficomp
jmp
xor
add
aas
pop
and
sub
jnp
jecxz
ds
xor
dec
mov
xor
loopne
jecxz
ret
mov
jno
add
inc
pusha
and
or
push
cli
pop
ds
mov
std
es
add
inc
xor
retf
(bad)
retf
mov
test
pop
aas
cmps
in
retf
push
nop
or
aas
or
daa
les
add
jge
and
xchg
inc
aas
jge
and
jecxz
ds
xor
push
sahf
fadd
mov
dec
arpl
inc
pop
call
std
sar
inc
mov
mov
and
data16
mov
mov
(bad)
enter
ds
jmp
cmp
mov
push
out
cli
call
push
jb
xor
mov
push
xchg
fcmovbe
(bad)
ds
mov
mov
jo
arpl
std
ds
ss
push
mov
push
std
retf
add
push
pop
and
ss
push
push
cmp
xor
dec
inc
cmp
push
inc
push
aas
mov
xchg
jbe
std
ds
xor
push
aas
xor
retf
sbb
(bad)
jmp
pop
jo
arpl
xor
push
xchg
cmp
fdivr
dec
cmp
(bad)
ds
mov
jns
repz
call
std
ds
jp
aas
mov
mov
fidiv
push
adc
sub
retf
add
push
daa
ins
sbb
aas
inc
pop
and
lods
mov
and
mov
std
aas
fldcw
dec
test
pop
out
out
call
add
iret
add
xor
pop
push
(bad)
sahf
push
cmp
mov
in
ds
js
pop
mov
std
leave
sahf
ins
dec
arpl
jo
arpl
ins
push
arpl
jo
arpl
xor
xchg
aas
inc
and
inc
and
stc
cdq
xchg
cld
jecxz
sbb
dec
ds
mov
mov
arpl
outs
jb
retf
arpl
outs
jp
(bad)
jo
arpl
push
int3
push
dec
push
aas
and
pop
shl
sub
fisub
ds
push
xchg
pop
jecxz
pop
sub
jns
pop
add
iret
add
and
mov
sahf
ret
mov
dec
arpl
imul
sahf
out
ss
mov
aam
mov
mov
fimul
nop
inc
mov
jl
jecxz
retf
(bad)
ds
dec
mov
mov
xchg
fimul
sbb
dec
xchg
aas
xor
push
std
ds
push
aas
mov
in
scas
in
leave
add
jp
jp
mov
push
xor
inc
aas
inc
push
aas
mov
mov
pop
in
ds
cmp
dec
aas
sub
add
push
inc
bound
enter
int3
cli
pop
ds
retf
push
enter
retf
sbb
mov
xchg
ficom
ficom
sbb
add
mov
xchg
fimul
sub
in
xchg
mov
int
cld
jecxz
jmp
cli
mov
push
std
ds
cmp
outs
in
ds
xor
stos
jge
and
mov
std
cmp
(bad)
and
and
mov
std
popf
adc
pop
mov
mov
jle
call
iret
inc
je
iret
inc
je
iret
or
out
daa
(bad)
add
jmp
mov
lds
std
ds
push
aas
mov
in
mov
std
pushf
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
cmp
or
(bad)
in
cmp
ds
addr16
push
int
aas
mov
cmp
mov
mov
pop
in
ds
xor
inc
and
dec
xchg
inc
lods
out
shl
std
shr
std
ds
imul
(bad)
addr16
and
dec
ret
in
iret
jecxz
ret
jbe
sbb
inc
push
push
xchg
sahf
stos
mov
mov
in
xchg
sahf
mov
push
inc
shl
inc
shr
iret
mov
jo
inc
mov
jecxz
leave
add
ret
repz
stc
pop
xchg
cld
jecxz
mov
outs
into
add
out
mov
mov
(bad)
ds
xor
cld
push
push
cmp
cmp
dec
inc
sub
inc
inc
xor
test
mov
popa
xchg
cld
jecxz
xchg
pop
and
retf
jmp
test
call
add
pop
mov
jecxz
popf
cmp
mov
sahf
arpl
inc
mov
add
inc
je
iret
sbb
addr16
les
test
jecxz
ds
jmp
loop
std
(bad)
in
lds
inc
mov
cmp
out
ds
xor
xchg
inc
sub
jg
xor
ds
out
test
outs
push
arpl
push
sar
jecxz
ds
(bad)
mov
and
dec
retf
inc
push
addr16
inc
xor
mov
xchg
inc
xor
xchg
sahf
cmp
mov
ds
pusha
and
sub
pop
fisub
xchg
or
push
add
mov
(bad)
cmp
mov
mov
imul
std
retf
add
xor
test
add
inc
cmp
xchg
inc
sub
xchg
lods
mov
and
mov
std
inc
fldenv
dec
test
sbb
sahf
jmp
std
leave
or
push
int3
cli
pop
sbb
mov
mov
sbb
dec
daa
cmp
sub
dec
inc
sub
jge
sub
xchg
(bad)
ds
daa
retf
mov
mov
outs
dec
inc
push
xor
std
ret
jbe
test
mov
std
mov
outs
int
push
push
ds
push
aas
mov
cmp
addr16
aas
mov
les
mov
les
cld
jecxz
xchg
and
addr16
jl
and
mov
std
inc
mov
loope
cld
jecxz
int3
add
push
daa
shl
aas
inc
xor
push
pop
jno
arpl
retf
jnp
mov
in
xchg
fidiv
push
xlat
or
dec
cli
pop
adc
add
inc
pop
scas
aas
mov
mov
inc
cmp
add
pop
ss
pusha
jecxz
int3
cli
pop
sub
jp
cmp
inc
mov
sub
mov
inc
jecxz
ret
mov
adc
aas
cmp
inc
inc
sub
retf
push
retf
ss
cli
pop
adc
fldcw
fisttp
fiadd
inc
repnz
jecxz
mov
pop
(bad)
(bad)
ds
in
cmc
call
adc
cmp
xchg
mov
add
add
adc
sbb
add
aam
mov
add
retf
das
cmc
call
adc
mov
add
sahf
push
xor
push
arpl
dec
pop
aas
cmps
in
xchg
and
addr16
or
ds
mov
mov
jmp
std
add
imul
xchg
mov
add
add
adc
out
and
aas
inc
mov
xor
icebp
fcmovnb
ret
fisubr
ds
or
mov
sub
dec
cmp
(bad)
ds
and
std
lds
aas
mov
test
pop
or
xor
add
sar
mov
mov
mov
std
(bad)
cli
pop
outs
enter
int3
cli
pop
data16
and
dec
ds
mov
test
imul
arpl
imul
arpl
retf
outs
jno
jecxz
mov
cmp
pop
shl
(bad)
ds
and
pop
sub
mov
and
in
inc
mov
std
mov
push
mov
inc
inc
cmp
addr16
ss
jmp
arpl
pop
(bad)
mov
cli
pop
outs
jp
bound
retf
dec
arpl
jo
arpl
fcmovbe
pop
jbe
push
aas
and
add
in
aas
push
outs
inc
arpl
cmp
mov
dec
cld
jecxz
xor
mov
cmp
xchg
pop
add
inc
xor
arpl
(bad)
mov
std
inc
sahf
jmp
inc
mov
int
iret
and
aas
inc
sub
dec
adc
call
push
arpl
xor
popa
pop
add
inc
xor
push
sahf
mov
inc
mov
mov
sahf
jge
inc
mov
dec
arpl
test
std
ds
les
jecxz
sbb
inc
repnz
jecxz
mov
test
ds
in
repz
dec
push
cmp
jle
mov
cld
ds
out
icebp
call
jbe
adc
xchg
std
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
lahf
out
std
ds
mov
inc
je
iret
inc
je
iret
push
pop
mov
mov
dec
xchg
inc
aas
sbb
sbb
inc
sub
leave
rcr
xchg
jecxz
xchg
movs
aas
and
std
jecxz
pop
inc
jb
aas
sbb
cmp
inc
sub
movs
aas
and
aas
ss
div
int
aas
mov
(bad)
cli
mov
iret
add
mov
xchg
inc
aas
pop
xor
xchg
jecxz
xchg
inc
sub
loope
jb
aas
sbb
xor
aas
stc
pop
int
jecxz
dec
sbb
aas
pop
dec
mov
std
jecxz
dec
es
aas
sbb
adc
ret
pop
mov
std
jecxz
mov
cmp
aas
sbb
adc
inc
sub
loope
jb
aas
pop
js
xchg
sub
movs
aas
stc
fwait
int
jecxz
dec
push
jb
aas
pop
mov
std
jecxz
dec
bound
aas
sbb
adc
inc
sub
mov
xchg
sti
inc
sub
mov
dec
lds
inc
aas
lods
out
enter
xchg
sub
loope
jb
aas
pop
mov
xchg
sub
movs
jge
aad
std
jecxz
inc
sbb
sbb
inc
sub
mov
xchg
int
jecxz
and
loope
jb
aas
sbb
add
inc
sub
sub
jb
aas
aas
icebp
in
int
jecxz
xor
loope
jb
aas
pop
loopne
xchg
jb
aas
sbb
adc
sub
mov
xchg
into
std
jecxz
dec
inc
sub
loope
jb
aas
sbb
cmp
sub
movs
aas
stc
adc
std
jecxz
dec
into
jb
aas
pop
add
into
std
jecxz
arpl
(bad)
movs
aas
sbb
into
std
jecxz
enter
xchg
jb
aas
sbb
adc
aas
stc
arpl
std
jecxz
enter
xchg
jae
aas
sbb
adc
inc
sub
movs
aas
stc
(bad)
into
std
jecxz
inc
ss
mov
xchg
into
std
jecxz
jae
sub
loope
jb
aas
sbb
xor
sub
mov
xchg
std
jecxz
xchg
(bad)
loope
jae
aas
sbb
xor
ret
aaa
lea
std
jecxz
fwait
inc
sub
loope
jae
aas
sbb
xor
ret
dec
lea
std
jecxz
scas
inc
sub
loope
jae
aas
sbb
xor
aas
add
std
jecxz
dec
xor
aas
pop
lea
std
jecxz
mov
mov
std
jecxz
dec
inc
jae
aas
pop
js
xchg
jecxz
fild
(bad)
movs
aas
sbb
dec
pop
jae
aas
pop
mov
into
std
jecxz
out
inc
sub
movs
aas
sbb
dec
outs
jae
aas
pop
mov
mov
add
(bad)
movs
aas
sbb
into
std
jecxz
dec
xor
pop
mov
xchg
jecxz
pop
inc
sub
movs
aas
sbb
into
std
jecxz
enter
xchg
sub
loope
jae
aas
pop
int3
lea
std
jecxz
enter
xchg
jae
aas
aas
icebp
icebp
into
std
jecxz
aaa
inc
sub
loope
jae
aas
pop
in
xchg
jae
aas
sbb
adc
sub
mov
xchg
iret
std
jecxz
dec
inc
sub
loope
jae
aas
sbb
xor
sub
movs
aas
stc
pop
iret
std
jecxz
dec
shl
aas
pop
add
xchg
jecxz
addr16
sub
movs
aas
and
iret
std
jecxz
enter
xchg
sub
popf
adc
ror
je
iret
inc
je
iret
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
cmp
xor
or
xor
aas
mov
sbb
inc
mov
ds
test
icebp
stos
xchg
pop
in
ds
mov
xchg
mul
std
lds
aas
mov
mov
add
std
ds
jecxz
mov
sub
ret
jbe
mov
mov
std
leave
test
movs
inc
mov
(bad)
lds
out
ds
std
ds
jb
inc
mov
dec
ds
pop
dec
test
ins
mov
ja
fdivr
ds
cmp
mov
in
sbb
std
leave
cmp
(bad)
ds
push
arpl
mov
push
int3
add
push
nop
inc
jb
inc
mov
in
(bad)
leave
dec
xor
ds
std
push
scas
cmp
pushf
(bad)
ds
pop
ret
ror
xor
aas
mov
std
push
repnz
aas
jmp
out
cmp
jp
pop
mov
test
pushf
inc
mov
mov
adc
cmps
mov
inc
je
iret
or
(bad)
test
dec
loopne
mov
in
sbb
std
leave
sub
push
retf
add
mov
mov
popf
jns
inc
jg
jb
inc
mov
dec
nop
sahf
add
aas
mov
push
arpl
retw
mov
daa
xchg
in
ds
push
inc
mov
cmp
adc
ds
jecxz
mov
sub
ret
jbe
or
test
sub
mov
xor
adc
mov
mov
(bad)
ds
in
mov
std
div
cmps
mov
inc
xor
inc
lahf
stos
add
mov
mov
inc
je
iret
inc
sub
inc
cmp
inc
mov
adc
sbb
ds
xor
retf
(bad)
ds
dec
inc
inc
ins
dec
inc
mov
xchg
and
dec
push
and
add
mul
les
repz
jecxz
inc
mov
mov
iret
cmp
(bad)
mov
dec
or
jecxz
daa
(bad)
int3
(bad)
cmp
loop
mov
mov
inc
and
add
mov
dec
daa
test
cmp
mov
inc
je
iret
inc
je
iret
or
out
retf
add
mov
mov
ds
push
retf
dec
test
out
ds
jb
inc
xor
les
and
mov
add
iret
add
adc
jecxz
jp
pop
sbb
inc
mov
in
jecxz
std
sub
outs
test
inc
sub
aas
mov
add
std
push
out
ds
jb
inc
sub
les
les
iret
add
adc
out
ds
dec
mov
shl
in
ds
in
sub
bswap
dec
sub
aas
mov
mov
mov
push
arpl
outs
inc
mov
cmp
pop
mov
loop
std
mov
push
fldcw
mov
push
inc
mov
addr16
push
jecxz
jp
pop
and
dec
sub
aas
mov
mov
mov
es
outs
test
inc
sub
aas
mov
(bad)
push
or
mov
outs
jl
mov
outs
mov
mov
test
push
sub
mov
(bad)
in
ds
jb
inc
mov
push
or
mov
mov
inc
retf
add
mov
std
push
data16
aas
cmp
add
inc
sub
aas
mov
sub
mov
push
out
ds
jecxz
repz
sub
leave
or
cmp
sub
mov
(bad)
in
ds
jb
inc
mov
dec
sub
outs
mov
mov
lods
(bad)
cld
jecxz
aaa
mov
or
mov
adc
aas
inc
jp
inc
mov
dec
ds
xchg
dec
test
in
push
inc
push
inc
mov
mov
(bad)
in
ds
jecxz
ds
dec
imul
inc
mov
dec
ds
fwait
dec
test
push
mov
int
in
ds
loope
inc
mov
xchg
(bad)
mov
stc
mov
aaa
sahf
addr16
aas
jb
sahf
pop
jmp
in
ds
jecxz
inc
mov
test
mov
mov
aaa
mov
jo
xchg
adc
aas
adc
add
inc
je
iret
inc
je
iret
inc
gs
inc
mov
cmp
or
ds
scas
xchg
outs
int3
ds
or
or
mov
jecxz
arpl
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
xchg
jmp
out
sub
std
ds
mov
xor
ins
mov
mov
outs
test
mov
cmp
adc
std
ds
mov
shl
add
mov
std
push
div
aas
inc
jb
inc
mov
in
fucomip
std
ja
fdivr
ds
adc
je
(bad)
ds
int
jmp
push
mov
push
retf
in
mov
pop
popf
jns
mov
or
out
daa
cs
ds
mov
daa
sahf
call
mov
inc
je
iret
inc
je
iret
inc
je
iret
cmp
inc
sub
gs
jecxz
(bad)
sahf
inc
jecxz
mov
ret
int
and
je
iret
cmp
inc
sub
gs
jecxz
(bad)
sahf
and
aas
mov
ret
int
pop
mov
je
iret
cmp
(bad)
mov
dec
cmp
jecxz
daa
ror
(bad)
cmp
fiadd
jae
iret
cmp
(bad)
mov
dec
cmp
jecxz
daa
mov
(bad)
cmp
fiadd
jae
iret
and
data16
shr
(bad)
mov
mov
(bad)
enter
ds
jmp
retf
push
jno
jecxz
sbb
mov
cli
pop
jbe
mov
std
es
xor
inc
pop
jecxz
sbb
sub
ret
jbe
inc
cmps
mov
std
cmp
mov
ret
xor
aas
push
int3
pop
jae
jecxz
jmp
out
jg
xor
xchg
(bad)
dec
(bad)
mov
aad
cld
jecxz
sbb
inc
repnz
jecxz
mov
jecxz
sbb
jmp
cmp
add
inc
xor
push
jge
and
sahf
xor
inc
mov
dec
arpl
dec
xchg
std
cmp
mov
and
push
shr
(bad)
mov
mov
(bad)
enter
ds
jmp
int3
and
jecxz
sbb
pop
xchg
sahf
pop
test
ins
pop
arpl
ins
pop
arpl
ins
pop
arpl
stos
inc
arpl
call
inc
scas
and
dec
int3
add
adc
adc
sub
and
outs
retf
mov
mov
out
in
scas
and
xor
push
jb
pop
stc
mov
ret
dec
data16
enter
inc
jp
pusha
in
retf
or
sub
dec
daa
inc
cmps
add
cmp
push
mov
mov
add
cmps
mov
or
out
retf
dec
retf
dec
daa
jbe
std
cmp
dec
daa
cmp
ds
mov
inc
sub
inc
or
mov
jb
inc
rol
push
xchg
inc
mov
add
jecxz
test
lahf
out
ds
retf
pop
aas
mov
push
pop
and
in
xchg
inc
lods
out
ret
jecxz
shr
std
ds
sub
add
adc
cmp
std
cmp
ds
cmp
push
push
jno
push
inc
adc
or
mov
cmp
mov
mov
dec
mov
inc
aas
jmp
mul
or
fild
les
adc
jle
std
cmp
xchg
sahf
movd
mov
in
xchg
sahf
pop
jle
mov
in
ret
mov
fidiv
inc
cmp
xchg
mov
int
cld
jecxz
jmp
repnz
push
push
jle
mov
std
adc
into
popf
sahf
adc
xor
adc
push
aas
cmp
(bad)
ds
std
into
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
ins
inc
arpl
jo
arpl
inc
lds
mov
in
cmp
std
retf
add
sbb
(bad)
in
push
call
(bad)
ds
mov
cmp
mov
inc
pusha
and
int
xor
enter
lock
xor
pop
sahf
(bad)
inc
mov
dec
arpl
loop
ds
imul
jecxz
mov
out
pop
jb
inc
(bad)
enter
ds
ret
in
std
into
inc
je
iret
or
mov
cmp
jae
inc
sub
add
dec
nop
inc
xor
retf
ds
cmp
dec
inc
mov
xchg
sahf
mov
aas
mov
pop
add
pop
push
inc
sub
gs
jecxz
(bad)
sahf
jae
aas
mov
ret
int
sbb
jecxz
iret
inc
je
iret
cmp
sub
xchg
call
add
mov
mov
cli
pop
add
jno
arpl
jmp
ds
xor
push
jge
and
jecxz
ds
sub
pop
aas
sub
jae
sub
ja
mov
add
inc
je
iret
cmp
sub
xchg
call
add
mov
mov
cli
pop
add
jno
arpl
jmp
ds
xor
push
jge
and
jecxz
ds
sub
pop
aas
sub
jae
sub
ja
outs
pop
aas
mov
add
inc
je
iret
inc
sub
inc
or
pop
cmp
mov
ins
sbb
xchg
leave
mov
shl
inc
inc
inc
inc
dec
xchg
leave
mov
mov
stos
add
mov
jb
iret
add
addr16
ds
cmp
jmp
push
sahf
pop
(bad)
ds
mov
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
xchg
mov
or
mov
ror
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
push
inc
mov
dec
daa
pop
addr16
cmp
out
addr16
pushf
jns
mov
inc
je
iret
inc
je
iret
sbb
addr16
dec
sbb
fninit
std
ds
jmp
push
or
movs
in
ds
aaa
scas
inc
mov
mov
ds
mov
jecxz
std
retf
cli
pop
or
add
sbb
mov
std
ds
cli
es
mov
dec
arpl
xor
push
xchg
cmp
movs
or
ds
cmp
int3
add
add
mov
mov
inc
inc
xor
pop
push
jno
arpl
xor
retf
mov
inc
arpl
jo
arpl
in
in
in
std
test
jo
arpl
test
in
fucomi
std
test
jo
arpl
retf
and
jecxz
stos
push
sub
retf
add
push
daa
or
mov
ficomp
retf
dec
(bad)
and
addr16
inc
xor
imul
add
sahf
mov
dec
arpl
stos
inc
arpl
jecxz
ds
and
mov
or
aas
icebp
std
ds
add
cmps
mov
mov
dec
arpl
inc
(bad)
enter
ds
ret
je
iret
pop
outs
inc
arpl
movs
xchg
jmp
in
std
xchg
or
push
sub
cmp
ds
cmp
int3
add
push
test
jle
in
mov
xor
repnz
jecxz
leave
cld
and
aas
and
dec
ret
in
mov
repz
or
push
pop
adc
or
cld
xchg
retf
ret
mov
mov
inc
dec
cmp
ds
fxch
cli
pop
push
test
retf
inc
mov
mov
cmp
jb
inc
repnz
pop
dec
call
cmp
pop
popa
ss
std
ds
stos
push
xchg
sahf
xchg
jns
mov
in
xchg
sahf
(bad)
jns
mov
ret
ror
test
ins
push
leave
sbb
mov
addr16
mov
ins
dec
inc
inc
scas
cmp
jbe
add
addr16
mov
pop
mov
ret
cmp
hlt
mov
cli
xor
lea
int3
add
and
inc
pop
jb
inc
push
add
outs
out
daa
cmc
les
aas
inc
sub
add
dec
nop
sahf
outs
jle
mov
ret
movs
pop
mov
dec
dec
jle
enter
ror
je
iret
inc
je
iret
cmp
inc
sub
gs
sahf
sbb
mov
ret
int
sbb
je
iret
cmp
inc
sub
gs
mov
std
(bad)
sahf
arpl
aas
mov
ret
int
sbb
je
iret
cmp
inc
sub
gs
sahf
inc
fstp
mov
ret
int
sbb
je
iret
or
arpl
cmp
inc
adc
mov
xchg
inc
pusha
and
jmp
leave
cld
das
mov
ror
fdivr
jecxz
cmps
mov
pop
(bad)
cmp
xchg
or
inc
xor
adc
mov
inc
je
iret
or
arpl
outs
leave
xchg
inc
push
and
outs
iret
xchg
jmp
int
xor
enter
inc
aas
cmp
add
pusha
popf
inc
jmp
in
sub
std
ret
jbe
inc
test
xchg
les
inc
aas
outs
dec
add
mov
mov
jmp
not
xchg
mov
cs
(bad)
or
cmp
mov
dec
mov
std
jecxz
cmps
mov
pop
(bad)
cmp
sahf
adc
xor
adc
mov
inc
je
iret
inc
je
iret
and
iretw
shr
(bad)
mov
mov
(bad)
enter
ds
jmp
pop
push
retf
dec
nop
mov
add
or
daa
jl
add
and
mov
ficomp
ds
in
fsubr
std
cmps
mov
std
ds
xor
pop
sahf
mov
inc
mov
mov
mov
jmp
cmp
cli
pop
add
or
push
cmps
jmp
std
or
aaa
jl
and
cli
pop
es
add
es
dec
mov
ficom
es
xor
push
jge
and
sahf
stos
daa
inc
mov
dec
arpl
inc
(bad)
enter
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
fninit
std
cmps
cmps
mov
inc
je
iret
inc
sub
inc
fninit
std
lds
mov
inc
sub
inc
fnclex
std
ds
mov
inc
je
iret
or
jb
mov
jecxz
ret
cmp
clc
push
daa
jle
std
cmp
add
ds
xor
adc
mov
inc
je
iret
or
out
retf
dec
inc
inc
sub
inc
inc
sub
enter
lea
jecxz
ds
dec
push
cmp
push
(bad)
sahf
push
jae
mov
add
inc
and
xchg
push
int3
fs
jecxz
inc
mov
mov
inc
sub
inc
inc
xor
push
retf
cmp
ins
outs
cmp
adc
push
loopne
nop
retf
push
aas
xor
(bad)
sahf
sub
mov
rol
mov
inc
xor
and
aad
jno
and
add
iret
add
div
mov
in
ds
adc
call
dec
arpl
out
les
add
(bad)
ins
cmpps
add
cmps
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
inc
xor
push
retf
adc
in
xor
inc
call
mov
js
std
jno
cmps
add
inc
je
iret
inc
je
iret
or
arpl
aaa
out
mov
std
ret
cmp
jmp
inc
sub
les
add
iret
add
cld
xrelease
mov
aas
ror
push
int3
bnd
ds
cmp
inc
sbb
inc
test
retf
jb
iret
sbb
inc
cs
ret
xor
pop
push
sahf
adc
mov
leave
ret
push
mov
sti
adc
out
inc
inc
sub
push
cmp
dec
adc
ror
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
and
addr16
or
cmp
call
mov
sub
push
inc
pop
and
lock
mov
mov
ins
inc
arpl
jo
pop
sub
mov
stos
inc
arpl
jecxz
ds
jp
fisubr
xchg
loope
dec
outs
push
arpl
outs
dec
arpl
xor
add
xor
push
sub
std
retf
cmp
call
mov
push
cld
jg
xor
mov
push
nop
sahf
inc
aam
mov
ret
inc
pop
call
mov
cmp
push
xchg
or
out
xchg
inc
xor
daa
xchg
and
ds
inc
and
xor
dec
jns
push
arpl
ins
inc
arpl
outs
inc
inc
inc
bound
test
mov
std
or
leave
add
sti
dec
retf
pushf
mov
jecxz
mov
repz
cmp
int
inc
push
std
ds
inc
and
mov
daa
cmps
push
std
cmp
and
mov
sahf
repz
mov
inc
inc
adc
outs
inc
arpl
in
mov
iret
inc
je
iret
inc
je
iret
pop
aaa
push
retf
mov
inc
sub
retf
mov
jnp
std
ds
leave
add
test
mov
mov
cmp
int
(bad)
push
std
ds
inc
and
mov
daa
sub
cmp
and
mov
sahf
ja
ds
inc
inc
adc
inc
pop
cwde
js
std
into
inc
je
iret
pop
aaa
push
retf
push
retf
jmp
ret
arpl
jecxz
ds
push
(bad)
outs
inc
inc
icebp
retf
jp
inc
sub
pop
inc
xor
push
inc
cmp
push
push
xor
pop
ds
pop
call
xchg
(bad)
addr16
inc
lock
aas
mov
std
retf
sub
dec
nop
inc
mov
les
jecxz
retf
mov
popf
out
jmp
call
mov
inc
sub
dec
and
dec
xchg
inc
mov
xchg
(bad)
in
daa
jecxz
retf
mov
fiadd
push
(bad)
or
daa
not
inc
xor
arpl
and
addr16
inc
or
mov
mov
inc
dec
cmp
inc
inc
pop
push
retf
mov
fiadd
sub
movs
add
mov
mov
or
js
std
into
inc
je
iret
or
mov
inc
xor
daa
stos
pop
(bad)
ds
cmp
push
inc
xor
dec
inc
aam
sbb
or
inc
cmp
dec
push
xor
out
mov
std
retf
pop
add
jecxz
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
sub
ret
cmp
and
retf
mov
icebp
mov
dec
loope
mov
sahf
xchg
sub
inc
arpl
push
enter
test
mov
xor
enter
xchg
and
std
sahf
adc
add
inc
cmp
retf
add
mov
outs
int3
daa
mov
add
inc
sub
int3
add
sub
call
and
(bad)
push
std
ds
jae
iret
inc
je
iret
inc
je
iret
inc
and
jae
jmp
push
push
retf
mov
jb
inc
rol
dec
arpl
xor
daa
cli
push
std
cmp
jae
jmp
jecxz
inc
cmp
rol
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
and
add
sahf
out
rdpmc
pop
push
retf
xor
iret
add
push
add
inc
call
push
enter
ds
mov
add
je
iret
inc
je
iret
or
arpl
aaa
out
mov
std
ret
cmp
jmp
inc
sub
les
add
iret
add
xor
mov
sub
pop
popf
jmp
jecxz
pop
sub
mov
sub
mov
ins
push
retf
push
les
inc
sahf
jge
std
ds
pop
div
cmps
or
or
push
daa
sub
cmp
jae
adc
cmps
or
inc
xor
push
cmp
mov
sub
add
mov
adc
and
pop
fst
addr16
aas
mov
ss
jp
aas
inc
and
pop
and
push
and
sub
add
arpl
mov
cli
pop
push
retf
sar
inc
pusha
and
int3
add
ins
inc
arpl
popa
add
cli
pop
adc
cld
jno
inc
inc
push
int3
das
in
mov
dec
in
ds
add
or
adc
mov
std
ds
mov
sahf
push
ins
ds
inc
arpl
cmp
xchg
outs
inc
arpl
movs
out
mov
outs
dec
arpl
out
xchg
mov
les
(bad)
sahf
daa
ins
ds
pop
pushf
adc
mov
inc
je
iret
inc
je
iret
inc
sub
inc
inc
xor
add
xor
inc
push
int3
and
mov
rol
mov
or
mov
inc
sub
ret
cmp
jmp
push
xchg
inc
xor
daa
xchg
dec
std
ds
jae
iret
inc
je
iret
inc
je
iret
or
jb
mov
jecxz
ret
cmp
mov
add
jecxz
ret
cmp
mov
sbb
ds
pop
add
mov
and
int3
cmp
jecxz
cmp
(bad)
iret
inc
je
iret
inc
je
iret
or
jb
mov
loopne
daa
(bad)
jecxz
ds
xor
push
loope
add
jg
add
out
push
mov
inc
add
push
aas
inc
sub
inc
or
outs
push
or
adc
or
or
mov
dec
cmp
mov
cmps
push
std
ds
xor
inc
sub
cmp
push
popf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
cmp
and
cli
pop
es
or
cmp
ins
dec
arpl
repnz
cld
push
daa
push
std
ds
push
std
ds
mov
fcmovne
jmp
call
inc
pop
push
jecxz
ud2
sub
ret
jbe
xor
add
dec
ds
cmps
push
test
call
adc
cli
pop
ds
jecxz
mov
ror
test
dec
or
jecxz
ds
mov
(bad)
retf
cmp
jg
mov
cmps
sbb
rol
xchg
lds
aas
mov
cmp
jno
aas
mov
mov
movs
or
ds
or
ds
xor
dec
and
addr16
push
int3
cmp
mov
mov
cmp
ins
ds
in
xchg
sahf
fld
mov
in
ret
mov
mov
sub
sub
fisub
std
ds
jb
inc
sub
int3
or
and
or
dec
add
and
sahf
mov
inc
arpl
jo
arpl
dec
call
mov
std
xchg
cld
jecxz
aas
inc
mov
popf
scas
call
add
xor
ds
add
mov
jecxz
enter
les
jecxz
ds
inc
arpl
loop
ds
jecxz
sub
outs
add
jbe
sbb
or
test
sahf
pop
cmc
ds
out
xor
mov
or
cmp
or
xor
mov
ror
mov
into
add
mov
push
arpl
retf
inc
mov
fimul
ds
sub
jnp
movs
jb
inc
sub
xor
pop
in
ds
rcl
cmps
push
std
ds
push
std
ds
xor
pop
inc
sub
pop
inc
cmp
inc
inc
push
add
int3
int3
lods
mov
mov
ret
inc
sub
mov
inc
mov
mov
call
push
into
data16
repnz
xchg
inc
mov
enter
shr
adc
mov
std
mov
cmp
int3
and
std
inc
scas
cmp
les
std
retf
sbb
cli
jmp
cli
imul
xor
add
mov
inc
ja
outs
dec
arpl
retw
movs
jnp
aas
push
and
sub
pop
inc
sub
ja
cmps
add
ficomp
or
ds
jne
ds
std
dec
inc
ins
(bad)
ds
add
jbe
ja
add
push
test
sahf
xor
ds
out
ret
push
daa
retf
ds
push
std
ds
outs
xor
test
push
xor
jecxz
aas
mov
or
arpl
loop
ds
add
nop
mov
in
xchg
cld
jecxz
stos
(bad)
mov
or
pop
mov
jo
arpl
dec
dec
or
(bad)
test
outs
int3
daa
sub
add
cmp
jne
mov
mov
sub
jle
fisub
std
ds
jae
sahf
mov
pop
pushf
adc
arpl
std
into
inc
je
iret
inc
je
iret
or
push
jb
outs
xlat
ret
push
daa
rcr
std
cmp
daa
cmps
(bad)
ds
push
sub
mov
mov
jae
cld
into
shl
addr16
ds
sub
inc
stos
mov
sub
xchg
inc
pop
add
je
iret
inc
je
iret
inc
je
iret
and
data16
(bad)
mov
mov
(bad)
enter
ds
jmp
fld
inc
jmp
enter
daa
sbb
mov
xchg
aas
inc
and
aaa
mov
sahf
addr16
out
jp
repz
inc
mov
nop
mov
std
ret
jb
stc
into
xlat
int3
adc
mov
or
lods
stos
mov
add
or
movs
stos
mov
mov
out
ret
cmp
cmp
and
test
push
inc
imul
mov
cmp
icebp
dec
ds
aaa
push
test
jecxz
leave
test
jecxz
inc
cmps
cmp
test
jecxz
int3
sub
ret
mov
test
dec
push
jecxz
pop
or
inc
in
push
retf
enter
inc
and
mov
mov
add
cli
pop
push
retf
push
jg
sub
dec
inc
mov
std
push
mov
jo
inc
jge
and
jecxz
ds
mov
scas
mov
jecxz
or
mov
std
ds
dec
mov
jecxz
in
sbb
std
retf
sbb
aas
icebp
std
ds
add
cmps
mov
inc
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
push
enter
push
mov
mov
daa
in
xchg
cli
pop
push
daa
adc
ds
mov
sbb
cld
ds
lds
pop
inc
aas
sahf
sub
mov
dec
arpl
jecxz
ds
ret
je
iret
inc
je
iret
jge
add
mov
std
shl
pusha
sbb
std
iret
outs
loopne
xchg
je
iret
inc
je
iret
or
out
daa
cs
lods
sub
inc
mov
pop
xchg
sahf
lods
stos
inc
mov
ret
stos
pop
add
sub
dec
inc
cmp
inc
ret
jecxz
ds
jmp
(bad)
sahf
imul
mov
or
inc
je
iret
inc
sub
dec
inc
cmp
dec
ret
jecxz
ds
out
dec
retf
or
mov
ror
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
iret
inc
je
iret
or
out
daa
outs
loope
lods
sub
inc
mov
pop
xchg
sahf
sub
inc
mov
ret
stos
pop
add
rol
xchg
or
arpl
cmp
sbb
std
ds
xchg
and
push
retf
dec
xor
jecxz
mov
rcr
std
cmp
xchg
sahf
arpl
mov
in
xchg
sahf
pop
push
ret
mov
fidiv
inc
pop
sbb
pop
les
dec
mov
add
stc
hlt
jg
jecxz
pop
mov
or
sub
ret
jbe
cmp
and
cmp
add
retf
cmps
push
test
pop
adc
cli
pop
push
jg
fdivr
(bad)
cli
pop
push
dec
inc
dec
std
ds
pop
pushf
cmp
add
rcr
inc
cmps
pop
call
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
sub
ret
cmp
cmp
addr16
xor
jp
pop
or
outs
int3
ret
dec
daa
fld
aas
inc
sub
retf
dec
inc
inc
sub
retf
cmp
inc
xor
jp
pop
or
outs
int3
ret
dec
daa
mov
add
inc
sub
retf
dec
inc
inc
sub
ret
xchg
or
mov
or
inc
icebp
mov
inc
inc
mov
xchg
(bad)
call
xchg
cmp
retf
add
or
mov
icebp
movs
je
inc
mov
outs
(bad)
call
xchg
sub
ret
pop
enter
xchg
ret
daa
dec
push
std
ds
sub
xchg
push
int3
mov
retf
push
cmp
pop
popf
js
std
into
inc
je
iret
inc
je
iret
inc
sub
inc
or
mov
cmp
pop
or
dec
cmps
imul
pop
xchg
cmp
outs
sub
mov
mov
sahf
repz
ds
idiv
sub
push
int3
add
jecxz
retf
sub
sub
cmp
xor
and
addr16
push
aam
ds
std
adc
movs
jb
and
addr16
push
aad
ds
std
adc
out
mov
les
pop
add
je
iret
pop
aaa
push
xchg
inc
mov
and
stos
dec
pop
inc
daa
jle
std
cmp
dec
cmp
out
mov
std
xchg
sahf
mov
ret
mov
mov
jecxz
popf
adc
mov
inc
je
iret
inc
je
iret
and
inc
shr
(bad)
mov
mov
(bad)
enter
ds
push
retf
jb
mov
sub
dec
mov
mov
ds
dec
push
jl
and
retf
les
mov
mov
(bad)
jecxz
sub
std
retf
add
les
mov
out
(bad)
call
push
popf
sbb
aas
mov
std
sar
iret
inc
je
iret
inc
je
iret
pop
aaa
push
retf
push
xchg
or
mov
ds
inc
push
inc
das
push
add
call
mov
inc
xor
ret
jge
mov
or
jecxz
ret
jbe
mov
mov
std
leave
movs
ins
inc
arpl
dec
push
daa
outs
lea
aas
inc
aam
add
outs
adc
xor
xchg
(bad)
jecxz
(bad)
shr
sahf
rcr
mov
dec
jnp
bound
push
cld
sti
std
ds
les
mov
aam
mov
xor
aas
bound
cld
sbb
test
pop
lea
cld
jmp
inc
jmp
sti
dec
retf
and
xrelease
ins
inc
arpl
pop
test
js
std
ret
jbe
push
retf
or
sahf
(bad)
ds
les
pop
lock
adc
pop
cwde
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
inc
sub
inc
or
push
daa
(bad)
(bad)
std
ds
push
mov
jo
push
sahf
das
in
ds
mov
push
or
mov
or
test
cmp
hlt
mov
outs
dec
pop
pop
jecxz
ud2
sub
ret
jbe
add
jl
rol
mov
into
or
jb
mov
arpl
sub
or
fs
mov
outs
xlat
int3
stc
in
cmps
sahf
jmp
ds
inc
inc
aas
mov
leave
retf
iret
add
scas
and
mov
inc
shl
ror
je
iret
or
arpl
push
mov
int3
stc
in
aas
push
dec
out
mov
in
clc
jecxz
leave
sub
push
retf
iret
retf
out
test
lds
xor
les
jecxz
call
jb
ret
mov
push
mov
test
int3
add
xor
add
sub
or
xchg
inc
jge
(bad)
ds
mov
retf
fild
mov
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
outs
adc
test
je
iret
inc
je
iret
or
nop
or
mov
or
push
aas
mov
dec
nop
sahf
or
aas
mov
ret
jb
inc
mov
gs
(bad)
and
cmps
mov
cmp
jg
retf
push
daa
or
std
ds
sub
mov
adc
mov
cmps
mov
inc
je
iret
and
popw
aam
(bad)
mov
mov
(bad)
enter
ds
push
xchg
or
cmp
pushf
cld
call
inc
aas
aas
pusha
and
push
aas
mov
mov
inc
aas
aas
jb
aas
mov
mov
inc
aas
aas
jp
aas
mov
mov
xchg
in
ds
and
retf
mov
mov
in
ds
and
retf
movs
fnstcw
in
ds
cmp
mov
mov
add
mov
mov
mov
std
leave
or
lds
pop
inc
aas
inc
xor
mov
mov
sahf
or
mov
add
push
sub
ds
leave
daa
retf
ds
push
mov
jecxz
fst
in
ds
scas
out
adc
std
push
mov
jo
scas
mov
std
leave
or
lds
pop
inc
aas
inc
add
sahf
mov
add
push
jl
ds
leave
daa
jle
std
ds
push
mov
jecxz
frstor
std
ds
scas
out
pavgw
push
mov
jo
push
pop
push
dec
sahf
enter
test
(bad)
jecxz
lds
icebp
dec
inc
(bad)
jecxz
int
in
ds
xor
mov
mov
sahf
pop
push
ds
add
push
lock
ds
leave
daa
push
cmp
push
mov
jecxz
fst
in
ds
scas
out
pavgw
push
mov
jo
ja
jecxz
leave
or
lds
pop
inc
aas
inc
jb
inc
mov
in
pavgw
int3
inc
inc
add
mov
and
mov
mov
sub
std
ds
call
mov
mov
mov
cmp
ds
jb
inc
mov
ret
sbb
push
daa
inc
and
ds
jb
inc
mov
ret
sbb
pop
daa
neg
(bad)
ds
mov
mov
pusha
add
mov
mov
(bad)
je
add
mov
pushf
iret
mov
js
aas
mov
mov
(bad)
je
add
mov
mov
mov
pop
push
pop
sahf
fbld
mov
mov
mov
pop
push
pop
sahf
fs
inc
mov
pushf
add
lods
add
mov
mov
(bad)
je
add
mov
pushf
adc
pop
push
pop
inc
scas
out
jae
std
add
mov
add
inc
sub
(bad)
ins
in
(bad)
ds
mov
(bad)
je
add
mov
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
cmps
push
icebp
inc
aas
aas
mov
xchg
inc
out
ds
mov
xchg
dec
out
ds
mov
xchg
(bad)
out
ds
mov
xchg
retf
ds
mov
xchg
shl
std
ds
mov
xchg
jle
std
ds
mov
xchg
jmp
inc
mov
xchg
mov
std
ds
in
xchg
cld
jecxz
mov
xrelease
aas
icebp
std
ds
add
cmps
mov
inc
je
iret
inc
je
iret
and
inc
aad
(bad)
mov
mov
(bad)
enter
ds
push
retf
jb
mov
sub
add
mov
std
es
(bad)
ds
lods
iret
cld
jecxz
add
(bad)
in
ds
int3
daa
push
cmp
lds
mov
lds
pop
inc
aas
sahf
daa
push
ds
dec
arpl
jecxz
ds
ret
je
iret
and
pop
aad
(bad)
mov
mov
(bad)
enter
ds
push
enter
push
mov
mov
jge
and
jecxz
ds
mov
cmp
jecxz
retf
inc
arpl
loop
ds
add
sub
(bad)
es
cmp
ds
xor
inc
adc
xchg
std
cmp
mov
inc
je
iret
cmp
std
ds
je
iret
inc
je
iret
or
out
daa
ds
lods
sub
inc
mov
pop
xchg
sahf
pop
mov
inc
inc
stos
pop
add
outs
out
daa
scas
loop
lods
sub
inc
mov
pop
xchg
sahf
cmp
inc
mov
ret
stos
pop
add
and
mov
mov
lods
jb
mov
ror
je
iret
inc
je
iret
or
out
retf
les
je
aas
cmp
les
add
xchg
inc
arpl
int3
add
add
call
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
int3
mov
inc
inc
stos
pop
add
in
into
cld
jecxz
(bad)
call
mov
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
pushf
mov
inc
inc
stos
pop
add
jecxz
pop
xlat
sub
mov
mov
(bad)
enter
ds
jmp
pop
and
jmp
jge
and
jecxz
ds
fbstp
dec
jmp
cld
push
mov
jb
inc
mov
ret
sbb
sbb
test
jecxz
lds
std
ds
mov
cli
pop
push
pop
aas
mov
jb
inc
push
inc
mov
cmp
out
cmovae
inc
mov
ret
sbb
sbb
and
aas
inc
jb
inc
mov
ret
sbb
sbb
mov
ds
push
inc
mov
ret
sbb
sbb
jbe
mov
mov
outs
test
mov
pop
add
xchg
mov
cli
pop
push
pop
cmp
ds
mov
ds
cmp
int
out
ds
and
retf
nop
ss
mov
data16
ds
and
retf
xor
jecxz
int
out
ds
and
stos
dec
cmp
ds
jb
inc
mov
ret
sbb
adc
mov
jae
mov
mov
mov
mov
push
out
ds
and
stos
dec
push
cmp
ds
jb
inc
mov
ret
sbb
adc
mov
jae
mov
mov
out
in
ds
and
stos
dec
sub
std
ds
jb
inc
mov
ret
sbb
adc
mov
jae
mov
pop
xchg
mov
mov
ret
ds
and
stos
dec
(bad)
cmp
ds
jb
inc
mov
ret
sbb
push
push
mov
jae
mov
xor
xchg
in
ds
and
retf
and
jecxz
int
in
ds
and
retf
jae
mov
in
ds
and
retf
js
mov
in
ds
and
stos
dec
mov
jb
inc
mov
ret
sbb
or
mov
jae
mov
aam
mov
mov
cmp
std
ds
and
stos
dec
jbe
std
ds
jb
inc
mov
ret
sbb
pop
push
mov
jae
mov
test
mov
mov
adc
std
ds
and
stos
dec
dec
cmp
ds
jb
inc
mov
ret
sbb
add
test
jecxz
int
in
ds
and
stos
dec
push
cmp
ds
jb
inc
mov
ret
sbb
add
mov
jae
mov
push
xchg
mov
mov
mov
pusha
and
jmp
iret
cld
jecxz
push
jl
and
retf
adc
mov
lds
je
aas
cmp
push
bound
out
or
std
retf
inc
arpl
call
inc
aas
sahf
repz
ds
mov
mov
std
add
pop
push
inc
sahf
pop
xchg
inc
mov
mov
mov
std
add
pop
push
inc
sahf
dec
xchg
inc
mov
mov
mov
std
add
pop
push
inc
sahf
mov
adc
pop
push
inc
sahf
push
mov
movzx
std
add
pop
push
aas
sahf
push
mov
push
cli
pop
push
ds
std
daa
and
aas
inc
xor
dec
adc
jecxz
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
mov
mov
ror
je
iret
inc
je
iret
inc
je
iret
pop
aaa
push
retf
push
xchg
cmp
push
retf
or
mov
int
cld
jecxz
jmp
bound
mov
mov
mov
pop
outs
dec
arpl
xor
stos
int3
std
cmp
xchg
(bad)
mov
and
dec
int3
add
inc
daa
rol
std
ds
aam
xor
(bad)
mov
retf
sub
mov
out
adc
std
inc
cmps
cmp
adc
std
inc
cmps
addr16
sbb
lods
rcr
sahf
adc
mov
mov
std
cdq
montmul
cmps
add
adc
aas
push
add
je
iret
inc
je
iret
sbb
addr16
es
test
jecxz
ds
jmp
or
mov
aas
mov
mov
lds
inc
mov
or
(bad)
in
ds
imul
aaa
(bad)
repnz
fisubr
adc
jecxz
sbb
mov
mov
out
ret
leave
cli
pop
xor
(bad)
out
pop
out
jmp
out
std
ds
push
inc
mov
out
ret
leave
or
xor
sahf
mov
push
dec
mov
mov
ficom
dec
nop
sahf
ja
inc
mov
add
jecxz
inc
mov
std
daa
mov
std
ds
sub
jae
repnz
xchg
std
sub
push
arpl
test
or
mov
mov
sar
jmp
fmul
mov
mov
fild
mov
in
shl
mov
mov
mov
mov
pop
push
nop
sahf
inc
mov
ret
xor
test
cmc
adc
fmul
mov
mov
fild
mov
sub
std
daa
push
out
std
ds
stos
into
aas
mov
call
sub
retf
cli
pop
adc
mov
lods
std
jb
(bad)
lods
xchg
test
xor
add
scas
and
add
push
daa
pop
add
lahf
pop
or
mov
jp
jmp
push
shl
test
retf
int3
fstp
ins
inc
arpl
push
(bad)
enter
mov
outs
(bad)
daa
fcomp
push
retf
inc
arpl
loop
ds
cmp
jecxz
add
mov
dec
arpl
push
or
mov
jmp
lahf
stos
or
mov
dec
arpl
push
or
mov
mov
mov
jecxz
leave
cli
pop
xor
jbe
and
idiv
out
shl
leave
sub
xor
lods
repz
sahf
out
mov
mov
mov
aas
mov
dec
arpl
push
or
mov
aas
pop
cmp
ds
add
mov
jecxz
daa
adc
std
ds
sub
jae
movs
or
ds
sub
retf
mov
pop
ss
retf
dec
pop
mov
out
shl
leave
add
xor
aam
std
daa
fsubrp
std
ds
push
inc
mov
cmp
push
mov
ficom
push
int
in
ds
add
ds
test
clc
dec
mov
mov
sub
sbb
push
daa
push
(bad)
icebp
(bad)
inc
xor
jae
in
aas
or
dec
fistp
mov
mov
aas
mov
jbe
inc
fist
cmp
ds
cmp
ds
pop
cs
cmp
mov
push
mov
inc
aas
jge
std
ds
mov
or
cld
xchg
mov
add
or
hlt
xchg
mov
add
mov
std
ds
pop
pop
aas
mov
inc
arpl
jo
jae
sub
xchg
sahf
cmp
ds
inc
arpl
outs
dec
jae
sub
ds
frstor
push
(bad)
lds
jecxz
ds
daa
pop
aas
mov
sub
std
ret
or
ds
add
dec
cli
pop
xor
test
int3
or
std
daa
aam
std
ds
sub
jae
movs
or
ds
xor
jae
in
pop
add
jecxz
pop
fwait
jecxz
les
jl
adc
ss
mov
push
retf
cmp
add
in
xchg
jecxz
retf
inc
arpl
dec
dec
(bad)
mul
jl
jecxz
retf
or
xchg
cmp
std
ds
fadd
daa
ss
cmp
jno
cmp
push
ds
cmc
xchg
sahf
jmp
ds
cmc
ret
mov
jecxz
push
inc
cmp
xchg
mov
int
cld
jecxz
jmp
jmp
push
lahf
popa
push
aas
mov
sti
push
mov
push
push
aas
mov
(bad)
cmps
xchg
add
fucom
std
daa
adc
std
ds
push
aas
mov
out
mov
mov
inc
inc
mov
mov
lds
inc
mov
mov
sub
jae
in
nop
inc
jb
inc
mov
in
call
ins
mov
std
leave
stc
out
jmp
out
jg
outs
push
inc
push
outs
inc
arpl
xor
dec
daa
jb
std
cmp
ds
xor
jae
in
aas
cmp
std
ds
fadd
mov
cmp
or
sbb
xor
sbb
add
int3
cli
jp
int3
xor
add
mov
dec
ja
retw
movs
dec
pop
test
sahf
jg
aas
mov
cwde
inc
mov
mov
mov
test
mov
std
daa
ds
ds
mov
sub
jecxz
leave
cmp
(bad)
ds
mov
aas
mov
xchg
xchg
in
ds
dec
add
arpl
outs
int3
(bad)
sahf
mov
push
inc
mov
mov
test
je
mov
out
mov
sub
aas
mov
mov
jg
jecxz
ret
jg
aas
retf
xor
sahf
out
pop
int3
sbb
mov
add
sub
mov
adc
std
cmp
xor
inc
lock
ja
add
jecxz
cmc
or
std
ds
outs
mov
cmp
ds
push
inc
mov
mov
out
in
cmp
les
adc
pop
int3
mov
add
data16
lds
inc
mov
push
retf
enter
mov
add
std
ds
mov
mov
sub
aas
mov
pushf
ja
jecxz
ret
jbe
add
add
or
addr16
mov
mov
mov
dec
push
ds
test
lock
repz
jecxz
inc
push
outs
leave
daa
into
aaa
std
ds
push
int3
inc
xor
aas
mov
or
mov
std
daa
in
jmp
out
mov
jmp
and
movs
or
ds
sub
retf
mov
pop
ss
retf
add
mov
xor
repnz
std
daa
mov
std
ds
mov
mov
in
inc
mov
mov
lds
inc
mov
mov
cmps
in
cmp
ds
in
aad
in
ds
xor
std
ds
movs
add
mov
dec
arpl
jo
arpl
dec
dec
mov
std
es
std
ds
dec
add
mov
inc
arpl
dec
inc
jbe
(bad)
mov
outs
push
arpl
jo
push
sahf
xchg
ds
or
inc
sub
daa
retf
cmp
ds
in
stos
mov
int3
int3
pop
mov
out
mov
push
add
mov
jp
jmp
ret
jbe
sbb
add
or
sti
mov
nop
sahf
pop
push
ds
ret
fdivr
dec
cmp
add
mov
mov
mov
sbb
mov
mov
icebp
fimul
ds
push
inc
mov
jle
push
out
ds
cmps
or
ds
xor
jp
repz
sahf
out
pop
int3
loopne
mov
add
lds
inc
mov
mov
in
ds
add
or
std
retf
xchg
cmps
xchg
aas
inc
adc
push
cmp
inc
or
std
repz
sub
dec
daa
aas
jp
aas
cmp
push
daa
xor
aas
cmp
std
ds
push
inc
mov
cmp
addr16
mov
mov
push
out
ds
or
ds
cmp
jae
int3
add
or
std
ret
xor
repz
xor
aas
mov
inc
arpl
dec
dec
(bad)
std
daa
out
out
ds
inc
and
mov
std
ds
sub
jae
loop
ds
and
aas
mov
jb
repz
sub
shl
cmp
std
mov
cmp
cmp
test
test
in
sar
mov
aaa
out
pop
in
sar
sbb
pop
les
adc
add
xor
mov
ret
movs
add
mov
push
arpl
xor
std
sar
out
mov
pop
xor
mov
ret
jg
aas
mov
dec
arpl
outs
push
arpl
xor
daa
dec
push
sub
std
ds
sub
jae
int3
adc
mov
add
int3
jo
mov
mov
pop
outs
int3
daa
(bad)
pop
(bad)
cmp
ds
and
out
push
or
mov
xor
aas
mov
ds
cmp
add
mov
(bad)
ds
out
mov
test
ds
cs
mov
mov
shl
std
ds
add
fsub
std
ds
cmp
jae
jb
inc
mov
dec
daa
jb
std
ds
aam
xor
mov
mov
xchg
inc
aas
cmp
ds
sub
sub
and
int3
pop
xor
int3
fiadd
jecxz
xchg
ficom
push
daa
ret
cmp
std
ds
pusha
and
jecxz
aas
mov
jb
inc
pusha
and
ins
stos
test
sub
leave
retf
jae
test
sub
(bad)
mov
jecxz
mov
pop
or
inc
out
ds
ret
mov
sbb
addr16
mov
push
daa
sub
add
scas
out
les
out
ds
push
inc
mov
jle
mov
(bad)
add
or
ds
jb
inc
mov
jle
mov
(bad)
ds
movs
or
ds
pop
push
dec
inc
pop
add
mov
push
arpl
xor
dec
mov
or
aas
mov
dec
arpl
jo
arpl
dec
dec
mov
std
es
std
cmp
ds
cmp
jae
in
aas
inc
adc
(bad)
mov
add
pop
jecxz
inc
scas
cmp
mov
jecxz
int3
xor
sbb
mov
jo
(bad)
mov
cmp
je
jecxz
retf
add
cli
sbb
ret
or
ins
push
retf
xor
mov
push
jmp
mov
dec
mov
in
xchg
jecxz
les
or
cli
pop
ss
mov
(bad)
xor
or
push
sahf
inc
loope
mov
(bad)
dec
(bad)
ds
(bad)
dec
inc
inc
(bad)
ds
jb
retf
arpl
out
test
retf
pop
mov
mov
cmp
dec
ds
in
xchg
sahf
mov
mov
cmp
rol
inc
inc
xor
jae
cli
add
jecxz
leave
mov
mov
pop
mov
xchg
(bad)
in
ds
fcom
sbb
(bad)
ds
in
call
inc
cmp
jb
push
rcr
out
retf
repz
mov
or
daa
mov
xor
push
push
fdivrp
ds
mov
sub
std
leave
mov
(bad)
ds
fdiv
jmp
fmul
retf
clc
add
lods
and
add
push
daa
sar
aas
inc
xor
ja
addr16
ds
dec
arpl
ins
add
std
add
mov
std
daa
lods
js
aas
outs
in
ds
jno
cli
pop
xor
or
xor
inc
call
je
mov
cmp
cmp
xchg
ficom
push
int3
add
in
(bad)
jecxz
les
cmp
and
dec
retf
ds
(bad)
mul
add
jecxz
sub
outs
push
arpl
jo
arpl
dec
dec
mov
std
es
std
cmp
pop
push
outs
int3
daa
repnz
(bad)
ds
add
adc
(bad)
enter
ds
ret
lock
into
and
ds
inc
lods
ds
push
lods
ds
repnz
ds
jb
ds
inc
scas
ds
mov
ds
mov
scas
ds
push
scas
ds
xor
ds
cmp
mov
ds
sbb
ds
dec
mov
aas
dec
mov
aas
add
ds
loop
ds
and
mov
aas
shl
ds
inc
mov
aas
outs
mov
aas
jl
ds
add
aas
dec
mov
aas
fidiv
aas
xor
ds
mov
mov
aas
pop
mov
aas
out
ds
clc
mov
aas
xor
ds
cmp
ds
dec
mov
aas
jle
ds
nop
mov
aas
mov
mov
aas
mov
mov
ds
inc
je
iret
inc
je
iret
cmp
or
or
push
xchg
or
mov
inc
sub
dec
and
dec
int3
inc
call
xchg
nop
jecxz
les
or
cli
pop
or
(bad)
mul
and
jecxz
retf
les
int3
sub
or
and
mov
in
cmp
addr16
inc
mov
mov
cli
pop
adc
cs
ds
xor
or
dec
lds
inc
mov
mov
outs
in
cmp
pop
cmp
ds
mov
sahf
js
inc
mov
pop
call
mov
jb
std
or
inc
jge
mov
mov
std
ds
or
imul
sbb
cld
jecxz
daa
inc
nop
add
cmp
ds
dec
sbb
mov
jecxz
xchg
mov
cmp
cmp
jecxz
sbb
and
cmps
push
pop
and
jo
inc
mov
std
mov
jb
inc
xor
dec
and
addr16
cmp
std
ds
aam
add
add
std
inc
cmps
cmp
add
std
inc
cmps
addr16
sbb
jmp
push
ret
mov
addr16
aas
sub
addr16
and
addr16
and
addr16
and
push
ds
ret
push
test
jecxz
aas
mov
std
leave
adc
adc
cli
pop
and
sub
dec
inc
xor
pop
and
dec
nop
inc
scas
out
mov
mov
jb
inc
cmp
pop
inc
xchg
jmp
scas
xchg
mov
arpl
aas
mov
mov
mov
std
popf
adc
add
or
out
int3
inc
add
mov
push
xor
std
ds
sub
mov
mov
aas
mov
test
mov
ins
add
mov
test
mov
je
iret
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
sub
inc
lahf
inc
inc
mov
xchg
pop
mov
mov
icebp
stos
or
ds
outs
ds
mov
mov
jno
(bad)
pop
fisub
ja
add
inc
cli
les
outs
int3
add
or
jmp
enter
arpl
inc
out
xor
mov
jecxz
ds
scas
xchg
inc
mov
dec
pop
sahf
push
inc
cmp
sub
inc
cmp
jb
inc
cli
addr16
inc
mov
xchg
mov
mov
gs
jecxz
retf
mov
jecxz
ds
outs
xchg
inc
mov
inc
sub
ins
inc
sub
jno
ja
jecxz
mul
std
ds
outs
dec
inc
mov
in
stc
loop
retf
pop
popf
sbb
aas
mov
std
cdq
inc
leave
pop
add
mov
or
mov
mov
outs
pop
arpl
push
push
daa
mov
test
les
adc
or
fs
add
push
pop
jb
aas
ror
test
mov
or
aam
mov
inc
pop
call
out
dec
in
retf
ins
add
mov
push
retf
in
mov
mov
mov
pop
add
iret
add
sub
jle
data16
ds
dec
xchg
inc
mov
pusha
fsubp
std
shr
dec
arpl
xor
push
sahf
mov
inc
mov
pop
div
cmps
or
inc
je
iret
cmp
sub
repnz
mov
pop
push
and
mov
sahf
cmp
ds
out
ret
push
daa
push
cs
ds
cs
ds
lock
addr16
lods
or
ds
sub
xchg
movs
or
ds
add
mov
ja
cmp
ret
jb
sahf
jecxz
aas
mov
adc
pop
shl
mov
test
mov
mov
test
jecxz
inc
or
dec
cmps
imul
mov
cmp
retf
(bad)
push
test
dec
(bad)
xchg
inc
mov
xchg
xchg
jecxz
les
dec
pop
out
mov
std
retf
ds
jb
jno
arpl
xor
mov
std
ds
xor
pop
jge
and
jecxz
ds
sub
addr16
sub
jg
sub
sbb
pop
pushf
adc
imul
jno
iret
mov
mov
jecxz
popf
adc
add
inc
je
iret
inc
je
iret
aaa
rcl
aas
mov
push
xchg
or
hlt
xchg
or
data16
pop
mov
sub
and
jb
(bad)
ds
int3
push
retf
jmp
or
xor
mov
aas
pusha
and
add
ds
les
xor
mov
mov
and
out
jmp
std
inc
cmps
cmp
mov
loop
inc
cmps
addr16
sbb
test
xor
push
xchg
inc
aas
cmp
inc
mov
cmp
add
aas
and
mov
mov
hlt
ret
repnz
mov
(bad)
mov
ins
mov
scas
in
mov
xor
push
cli
aaa
inc
aas
cmp
or
mov
pop
pushf
outs
in
ds
jg
mov
std
ds
std
leave
or
push
ds
cmps
push
test
call
mov
mov
std
cdq
aaa
test
aas
mov
mov
arpl
test
adc
or
inc
jbe
or
or
xlat
inc
mov
in
(bad)
std
retf
add
push
enter
daa
xor
daa
pop
mov
xchg
sbb
std
ds
push
std
leave
test
repz
jb
retf
sbb
pop
and
or
ds
dec
arpl
cmp
and
dec
xchg
or
daa
mov
int3
adc
mov
add
ins
inc
arpl
jo
arpl
int3
aam
mov
mov
retf
add
jp
sub
push
daa
jp
std
ds
xor
cmps
aas
pop
and
mov
dec
arpl
ins
jb
push
int3
test
mov
mov
sub
les
mov
mov
outs
dec
arpl
push
cld
test
mov
stc
xchg
sahf
arpl
ds
out
mov
jecxz
leave
add
adc
mov
test
dec
enter
sub
out
ds
sub
test
xor
mov
pop
(bad)
ds
mov
mov
jecxz
and
mov
aas
mov
(bad)
cmp
cli
pop
and
push
add
mov
jae
or
ins
xchg
int3
xchg
jo
arpl
std
ds
push
and
pop
and
mov
jecxz
retf
and
std
ds
sbb
ds
push
push
inc
xor
cmps
ja
push
ret
xchg
ficom
out
cmc
loop
retf
dec
inc
inc
cmp
enter
aas
mov
mov
aas
jo
jecxz
jecxz
(bad)
cmp
stos
aas
mov
mov
js
fbstp
outs
push
int
jo
int
jo
dec
mov
loop
retf
mov
mov
fs
fidivr
ds
or
pop
cmp
retf
jmp
cmc
cmp
icebp
addr16
inc
xor
ja
add
arpl
xor
push
cmc
loop
xor
mov
push
mov
repz
fidivr
ds
jno
aaa
mov
ds
cmp
push
mov
fcmovbe
(bad)
ds
dec
arpl
outs
xchg
arpl
std
ds
cmp
ds
jmp
mov
ds
dec
retf
mov
mov
dec
retf
cmps
aas
mov
dec
retf
push
inc
mov
dec
retf
stos
aas
mov
dec
retf
(bad)
aas
mov
push
test
or
push
arpl
outs
out
jb
pop
repz
mov
repnz
aas
push
std
dec
cmp
ds
std
push
xchg
inc
aas
cmp
ds
push
std
(bad)
and
push
enter
ds
pop
retf
scas
aas
mov
mov
fimul
and
std
ds
mov
or
xchg
(bad)
ds
mov
fimul
mov
inc
sub
retf
scas
aas
mov
mov
fisubr
(bad)
xchg
pop
cmp
mov
and
cmps
ins
pop
arpl
push
(bad)
ds
dec
arpl
cmp
xchg
sahf
fistp
ds
mov
fisub
ds
in
jl
jecxz
sbb
mov
cli
pop
sbb
mov
dec
inc
es
ds
inc
arpl
outs
jb
es
pop
jbe
dec
arpl
pop
(bad)
retf
cmp
jecxz
sbb
mov
inc
cmp
jnp
ret
sbb
inc
pop
and
fmul
ds
xlat
pop
jg
leave
cli
mov
std
ds
xor
pop
inc
xor
sub
and
lods
mov
arpl
ins
inc
arpl
dec
(bad)
xchg
inc
mov
lods
and
retf
jmp
cmp
mov
mov
test
ret
jecxz
enter
sub
push
ret
mov
xor
push
or
inc
aas
icebp
shl
jecxz
daa
or
dec
add
push
retf
push
inc
mov
or
ds
aaa
push
test
push
std
push
sahf
cmp
xor
pop
inc
in
(bad)
mov
jecxz
mov
pop
xchg
icebp
loop
int3
add
enterw
daa
xchg
pop
std
ds
xor
mov
sahf
mov
ds
dec
arpl
ins
jb
or
les
jecxz
popf
adc
mov
aas
mov
mov
arpl
push
std
push
or
inc
aas
inc
sub
dec
cmp
daa
or
dec
add
push
retf
push
inc
mov
xrelease
xchg
dec
arpl
xor
daa
or
std
ds
cmp
imul
mov
outs
add
or
inc
arpl
retf
lods
xor
movs
xor
add
outs
add
jbe
push
retf
sbb
cli
loop
retf
sub
jp
mov
iret
add
cli
pop
push
les
add
idiv
dec
retf
xor
(bad)
dec
retf
mov
test
call
inc
ret
(bad)
mov
outs
inc
inc
cmp
cmp
sbb
jge
push
or
jbe
icebp
sub
push
pop
arpl
outs
out
mov
xor
xchg
sahf
xchg
inc
ds
ret
call
add
xrelease
cli
pop
push
retf
xor
inc
mov
std
(bad)
adc
push
test
sahf
jg
ds
test
repz
inc
mov
test
jecxz
ret
jb
stc
into
(bad)
ret
push
daa
jle
std
ds
es
ds
cmp
push
inc
lock
inc
jge
rol
in
xor
ins
dec
arpl
jo
xor
int3
daa
(bad)
lods
std
or
retf
sbb
mov
cmp
inc
sar
std
inc
scas
cmp
mov
scas
addr16
push
push
mov
cmp
cli
pop
sub
mov
inc
pop
and
addr16
and
dec
ds
ret
push
test
and
pop
lahf
cs
ds
stc
inc
xor
int3
daa
xchg
lods
std
cmp
xchg
sahf
pop
inc
ds
cmc
xchg
sahf
(bad)
aas
ds
cmc
ret
mov
jecxz
add
and
sub
test
pop
add
and
addr16
push
ss
(bad)
mov
sub
std
retf
std
mov
jno
ds
scas
push
daa
sbb
mov
jno
push
inc
fist
jp
std
ds
and
add
pop
inc
fist
and
pop
and
push
daa
push
and
ss
inc
sub
sar
push
push
daa
mov
test
enter
push
mov
into
or
mov
mov
inc
push
push
outs
dec
arpl
outs
rcl
std
ds
fdivr
cmp
xor
push
daa
mov
jae
cmp
aas
ds
cmc
xchg
sahf
pop
aas
ds
cmc
ret
mov
loopne
pop
inc
sub
(bad)
mov
int
cld
jecxz
jmp
cmc
mov
and
jecxz
sbb
sub
jns
popa
pushf
sub
or
xchg
or
mov
mov
xchg
cmp
in
ds
jb
rcr
cmc
mov
(bad)
outs
push
fidiv
inc
inc
clc
sub
shl
xor
cwde
fadd
mov
cmp
fbstp
outs
inc
arpl
outs
jle
mov
std
jns
pop
add
xchg
cld
jecxz
xchg
(bad)
mov
push
mov
mov
mov
std
es
(bad)
or
arpl
retf
js
mov
mov
inc
push
std
leave
sub
dec
xchg
push
dec
(bad)
inc
mov
xchg
fisub
mov
ds
nop
and
mov
std
(bad)
bound
into
aas
mov
xchg
fcmove
(bad)
ds
stos
arpl
dec
sbb
mov
call
jecxz
ud2
sub
ret
jbe
adc
mov
push
nop
push
mov
mov
jp
std
ds
mov
std
add
mov
add
mov
xchg
fidiv
stos
arpl
nop
and
mov
std
es
(bad)
std
ds
adc
or
inc
jbe
add
or
xchg
push
mov
mov
jp
std
ds
mov
std
add
mov
add
mov
xchg
fidiv
stos
arpl
nop
and
mov
std
es
std
ds
adc
or
inc
jbe
xor
cli
pop
inc
retf
cmp
mov
mov
aas
sub
mov
fcmove
(bad)
ds
mov
in
ds
xor
inc
aas
sahf
ja
ds
std
push
xchg
inc
aas
cmp
ds
jo
xor
jecxz
ds
stos
or
ds
cmp
push
jmp
in
ds
xor
outs
inc
stos
dec
retf
push
(bad)
cld
retf
or
jecxz
inc
mov
mov
mov
fcmove
(bad)
ds
mov
int3
(bad)
mul
loopne
jecxz
retf
lds
int3
in
mov
add
or
jecxz
aaa
cmp
sti
mov
outs
push
pop
or
adc
or
inc
jbe
lahf
retf
dec
ds
cmps
push
test
call
mov
add
push
retf
push
int3
dec
movs
(bad)
ds
leave
daa
add
std
ds
mov
mov
inc
scas
out
in
loop
xchg
inc
mov
(bad)
jge
std
daa
adc
std
ds
add
das
inc
push
std
(bad)
sub
dec
retf
dec
mov
jno
inc
inc
xor
push
inc
cmps
push
mov
xor
inc
jl
std
retf
sti
mov
outs
dec
arpl
cmp
adc
jecxz
les
cmp
jge
push
daa
out
and
ds
and
ds
outs
cmp
retf
dec
ds
mov
test
outs
push
pop
or
data16
in
nop
mov
fst
or
sub
push
ds
mov
test
loop
inc
or
(bad)
jns
pop
add
xchg
cld
jecxz
sbb
les
mov
std
ds
jae
mov
dec
arpl
ins
jb
jmp
mov
dec
xchg
jmp
std
int3
add
jp
sub
jp
or
std
ds
xor
xchg
aas
pop
and
mov
pop
pushf
outs
in
ds
jg
mov
std
ds
std
into
inc
je
iret
pop
test
cmp
mov
leave
cmps
pop
and
xchg
jge
mov
adc
sub
es
ds
mov
jg
retf
jg
mov
outs
push
retf
scas
or
inc
mov
lahf
cwde
xchg
loop
loop
out
aas
jge
or
ds
cmp
aas
mov
pop
xchg
inc
mov
fidivr
std
popf
pop
mov
mov
mov
std
fwait
montmul
cmps
add
cmp
add
jecxz
adc
std
push
inc
mov
mov
inc
aas
inc
mov
add
pop
sti
enter
mov
mov
std
(bad)
sub
push
retf
push
xchg
sahf
jecxz
ds
out
les
inc
aas
inc
xor
les
sbb
retf
jmp
xchg
movs
out
pop
xor
daa
fisub
std
cmp
jae
or
daa
pop
push
cmp
clc
mov
inc
aas
push
int3
and
mov
jmp
push
mov
std
ds
push
in
mov
into
ds
popf
adc
mov
inc
je
iret
inc
je
iret
jge
std
cmp
dec
mov
jecxz
aas
clc
sub
daa
mov
je
iret
inc
je
iret
inc
je
iret
pop
aaa
push
retf
push
test
jno
inc
mov
std
retf
add
push
retf
dec
retf
out
jle
std
les
inc
retf
push
test
add
in
jns
std
retf
les
int3
in
jp
jecxz
das
or
in
mov
add
cmp
hlt
mov
outs
inc
pop
push
jecxz
les
mov
adc
mov
mov
std
cdq
xcrypt-ctr
cmps
pop
popf
adc
mov
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
retf
push
int3
cli
pop
push
test
inc
call
inc
pop
mov
cmp
cli
mov
and
addr16
and
dec
daa
xchg
std
cmp
inc
push
sub
leave
test
jl
mov
pop
add
je
iret
inc
je
iret
or
arpl
fld
ds
mov
test
outs
test
jecxz
retf
ins
fdivr
ds
mov
inc
cmp
add
icebp
loop
ret
xor
pop
sub
and
push
les
mov
cld
jmp
jae
inc
mov
in
jmp
pop
sbb
inc
add
aas
mov
out
jmp
inc
pop
add
jecxz
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
or
xchg
inc
mov
push
inc
mov
mov
scas
in
cmp
les
inc
add
int3
inc
jp
jecxz
add
data16
sub
push
int3
jmp
inc
or
int
scas
sbb
ds
push
int3
inc
lock
ds
call
inc
or
mov
jecxz
es
sbb
ds
pop
add
je
iret
or
out
int3
inc
fdivr
ds
adc
jecxz
int
in
ds
jmp
ds
mov
jecxz
es
std
ds
mov
inc
je
iret
inc
je
iret
cmp
push
xchg
or
xor
or
pop
push
inc
mov
std
(bad)
adc
adc
or
dec
cmp
ins
outs
or
push
xchg
or
adc
sub
ret
jbe
and
jecxz
leave
cmp
movs
out
(bad)
pop
data16
jmp
xchg
mov
test
mov
adc
retf
mov
test
dec
add
mov
in
out
loop
test
ret
ds
pop
ss
add
mov
in
out
loop
sub
outs
test
jecxz
leave
dec
clc
(bad)
ds
or
jecxz
jno
test
ret
dec
mov
pop
fxch
add
adc
int
mov
push
push
outs
int
or
sub
xchg
(bad)
(bad)
mov
sbb
sub
sbb
add
sbb
mov
jb
cmp
push
sub
mov
mov
(bad)
adc
mov
data16
inc
sub
fisub
adc
xchg
inc
mov
xchg
sbb
mov
stos
inc
arpl
in
ds
pop
arpl
ss
xchg
or
std
push
div
inc
aas
cmp
ds
pop
pushf
adc
inc
js
std
into
cmp
sbb
cli
pop
(bad)
xchg
inc
sbb
xchg
cld
jecxz
aas
and
addr16
and
dec
mov
mov
data16
mov
bswap
inc
mov
push
retf
push
fwait
and
addr16
and
mov
push
jecxz
les
fcomp
inc
je
iret
inc
je
iret
inc
gs
jecxz
enter
ds
mov
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
cmp
pusha
and
retf
xchg
inc
mov
fimul
xchg
jbe
std
retf
mov
sahf
cmp
aas
and
dec
retf
inc
arpl
retf
xchg
dec
mov
mov
aas
inc
and
daa
adc
(bad)
repnz
std
call
data16
ins
inc
arpl
retf
and
jecxz
daa
or
sbb
jecxz
mov
jecxz
daa
cmp
push
test
call
add
cli
pop
push
sub
cmp
dec
inc
xor
dec
inc
cmp
jb
pop
iret
dec
dec
movs
push
jnp
aaa
sub
loop
push
imul
retf
fxch
adc
adc
outs
add
mov
inc
pop
inc
cmp
jnp
xor
push
cmps
cmp
xor
retf
push
test
int3
(bad)
aad
jecxz
xchg
ficomp
mov
or
mov
mov
sub
push
mov
std
ds
push
mov
mov
stos
inc
arpl
jecxz
ds
jecxz
(bad)
sahf
inc
xchg
inc
mov
mov
sub
xor
arpl
and
cmp
scas
and
addr16
pop
outs
dec
arpl
mov
pop
outs
dec
arpl
bswap
xchg
push
xor
out
jne
std
mov
and
xor
ds
(bad)
push
test
daa
push
test
inc
mov
cmp
or
ds
xor
nop
mov
int
cld
jecxz
inc
addr16
mov
mov
retf
ret
ds
ds
xor
mov
stos
inc
arpl
cmp
mov
inc
pop
jge
and
cmp
pop
or
dec
mov
mov
mov
in
std
test
push
cmp
mov
mov
shl
arpl
outs
(bad)
mov
outs
inc
arpl
outs
push
arpl
mov
xor
inc
aas
add
int3
add
dec
push
cli
pop
data16
std
push
cli
pop
dec
(bad)
sub
(bad)
es
adc
ds
cmp
mov
sub
mov
xor
pop
or
mov
mov
mov
or
(bad)
test
dec
(bad)
cmps
and
jecxz
retf
push
mov
in
nop
mov
mov
retf
dec
mov
sbb
ds
cmps
push
test
call
push
inc
ss
nop
mov
mov
mov
mov
cld
jecxz
aas
mov
or
retf
movs
std
mov
btc
jecxz
jns
pop
xor
add
push
dec
leave
jecxz
(bad)
mov
mov
push
lock
mov
std
adc
and
xor
jae
jecxz
ds
mov
pop
arpl
outs
int3
enter
ds
adc
or
sbb
(bad)
in
ds
std
ds
test
dec
inc
mov
out
call
jb
(bad)
push
std
push
xchg
inc
aas
cmp
xchg
cld
jecxz
daa
push
aas
cmp
jp
pop
add
xchg
cld
jecxz
(bad)
push
ds
sub
mov
std
push
sahf
ss
aas
inc
xor
lahf
adc
ins
or
mov
std
sar
dec
mov
mov
inc
sub
inc
or
mov
inc
mov
dec
jb
std
retf
les
int3
clc
jae
jecxz
das
or
lock
jecxz
mov
add
nop
or
retf
ins
aas
mov
xor
pop
inc
test
sahf
arpl
mov
jno
push
or
jecxz
aaa
or
jecxz
aaa
cmp
std
mov
outs
push
pop
inc
sub
test
mov
(bad)
test
xor
push
test
cmps
push
aas
inc
xor
test
mov
(bad)
test
dec
dec
cld
jecxz
popf
adc
rol
mov
inc
sub
inc
or
push
retf
adc
mov
mov
sahf
jmp
ds
mov
push
or
jecxz
aaa
or
jecxz
stos
mov
out
lea
loop
mov
inc
scas
out
jno
std
xchg
inc
scas
mov
sahf
xchg
sar
imul
jae
jecxz
aaa
or
jecxz
aaa
cmp
jno
add
cld
inc
xor
(bad)
adc
pop
popf
adc
rol
mov
inc
je
iret
jge
rol
jecxz
ds
jle
mov
std
ds
dec
jbe
mov
mov
inc
je
iret
inc
je
iret
sbb
addr16
xchg
pop
test
jecxz
ds
jmp
outs
test
mov
std
ret
jbe
adc
ins
mov
inc
aaa
cmp
inc
mov
mov
ds
sub
mov
cmp
std
sar
ds
std
sub
imul
mov
dec
ds
inc
push
test
pop
xor
push
sub
xchg
in
sar
aas
or
push
aas
inc
and
pop
add
mov
dec
arpl
stos
inc
arpl
loop
ds
sub
sahf
pop
std
ds
mov
adc
mov
ret
jecxz
ds
ret
call
sub
dec
jo
ds
add
cmp
ds
imul
jecxz
inc
dec
ins
inc
arpl
arpl
bound
repz
inc
mov
ret
loop
aas
mov
lea
aas
sub
dec
inc
sbb
jae
ret
das
ds
ret
movs
or
and
push
daa
adc
aas
inc
adc
xchg
cld
jecxz
add
test
xchg
sbb
sar
mov
dec
aaa
cmp
mov
jle
add
inc
in
mov
arpl
outs
out
daa
and
fimul
ds
pop
and
jae
aas
mov
call
sub
retf
or
push
nop
or
xchg
mov
inc
sub
pop
jge
and
jecxz
ds
int3
cmp
jecxz
int3
add
push
retf
daa
mov
jecxz
mov
inc
sbb
std
ds
out
sub
pop
inc
retf
(bad)
ds
test
mov
std
leave
pop
fadd
xchg
ficom
push
pop
and
int3
cmp
push
jecxz
int3
add
sbb
cmps
int3
fbstp
sub
mov
mov
les
std
leave
add
push
nop
or
adc
xchg
pusha
jno
dec
js
ds
call
movs
inc
jae
inc
mov
xchg
iret
pop
cld
jbe
inc
aas
inc
cmp
nop
mov
and
cmp
jb
inc
sub
dec
push
cmp
push
sbb
inc
aas
cmp
xchg
inc
mov
mov
mov
mov
std
(bad)
mov
in
cmp
xchg
aas
sub
push
ds
add
mov
hlt
ret
jle
mov
aas
xor
std
adc
fdiv
jecxz
ret
lods
pop
add
xchg
cld
jecxz
mov
andps
not
std
cmp
push
retf
push
int3
cli
pop
sub
std
jecxz
daa
stos
jne
cmp
dec
fimul
add
mov
in
mov
std
retf
add
sub
cli
pop
and
mov
std
daa
xchg
pop
add
adc
outs
dec
arpl
inc
xchg
std
cmp
mov
(bad)
dec
cmps
inc
mov
add
outs
(bad)
test
xor
imul
(bad)
ds
dec
arpl
stos
inc
arpl
loop
ds
mov
mov
push
mov
mov
add
movs
add
cmp
jle
mov
mov
mov
mov
std
(bad)
jmp
ds
call
sbb
ret
jecxz
ds
ret
call
mov
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
(bad)
int3
add
dec
mov
std
push
mov
test
int3
or
(bad)
test
jecxz
cmp
jmp
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
xor
inc
aad
retf
mov
xchg
in
ds
push
aas
mov
les
mov
mov
std
mov
test
jmp
push
push
xchg
jge
test
ds
cld
aad
in
lods
mov
test
ds
cmp
ret
dec
in
ds
mov
sahf
fdiv
mov
std
push
sti
(bad)
ds
jno
inc
sub
shl
dec
dec
push
sbb
jecxz
mov
mov
jecxz
rcl
retf
add
in
sub
inc
sub
mov
ret
movs
jae
push
ins
pushf
xchg
mov
mov
jecxz
mov
sub
retf
add
in
sub
lock
daa
loop
(bad)
cmp
les
int3
sti
mov
jecxz
std
jp
std
ds
out
pop
and
vpsrld
std
ds
std
ds
fistp
mov
dec
xor
test
mov
mov
pop
popf
adc
pushf
js
std
into
inc
je
iret
or
push
retf
adc
mov
xlat
mov
stos
add
leave
sub
push
xchg
sahf
pop
cmp
cmp
add
jecxz
leave
jl
out
(bad)
movs
out
icebp
movs
jnp
inc
ja
inc
mov
cmp
call
add
aas
mov
cmp
(bad)
cmp
push
cmp
dec
stos
in
ds
int3
sahf
adc
mov
cmps
push
aas
adc
cmps
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
(bad)
add
and
sar
inc
mov
cmp
cmp
jmp
or
bound
push
inc
mov
and
std
ds
jb
ss
mov
push
fldcw
mov
jecxz
ret
fiadd
ds
cs
jb
cmp
jb
inc
xor
dec
pop
cmp
push
mov
inc
aas
inc
fsubr
ins
cmp
jb
or
adc
or
push
xchg
or
sub
leave
cmps
addr16
ds
xor
jne
std
ds
(bad)
ds
cmp
sbb
sbb
sub
cmp
sbb
sbb
lods
mov
mov
fidiv
(bad)
ds
xchg
ret
jae
inc
sub
dec
lods
mov
daa
mov
les
mov
in
push
ds
xor
mov
hlt
retf
pop
inc
mov
cmp
inc
xchg
inc
pop
mov
jo
arpl
xor
adc
ret
jle
mul
std
ds
mov
ds
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
arpl
cmp
jmp
jecxz
daa
or
cmp
lea
jecxz
ds
mov
movs
add
stos
dec
mov
rep
sbb
sub
sub
push
daa
bound
ds
mov
aaa
inc
mov
add
mov
xor
add
inc
sub
dec
inc
xor
dec
inc
cmp
inc
push
outs
inc
arpl
mov
mov
iret
inc
sub
push
inc
xor
push
inc
cmp
dec
push
outs
inc
arpl
xor
mov
repz
retf
push
pop
ss
mov
repnz
ds
mov
inc
je
iret
or
jb
mov
test
or
inc
sub
dec
lock
inc
inc
xor
jae
ss
(bad)
imul
jl
pop
add
mov
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
sub
inc
addr16
jecxz
pushf
sahf
test
mov
jecxz
test
arpl
aas
lds
inc
mov
mov
loop
jmp
outs
mov
cmp
outs
cld
ret
xor
inc
mov
sub
inc
movs
mov
inc
fidivr
retf
fild
mov
bound
int3
cmp
mov
mov
pop
push
ds
out
int3
sti
(bad)
dec
test
shl
std
cmp
xor
movs
jb
repnz
or
ds
outs
(bad)
aas
mov
mov
mov
std
ds
and
xchg
cld
jecxz
nop
scas
imul
dec
or
test
call
std
push
inc
xor
retf
aas
scas
mov
xor
retf
std
ds
movs
pop
xchg
ss
sub
std
leave
add
mov
sub
aas
mov
std
adc
aas
inc
in
lea
pop
inc
aam
inc
es
lds
int3
repz
mov
addr16
mov
mov
add
jmp
dec
or
inc
jbe
or
cld
jecxz
xchg
mov
std
cmp
(bad)
ss
aas
inc
sub
les
sub
or
mov
call
aas
mov
dec
(bad)
sahf
inc
pusha
inc
mov
push
dec
inc
idiv
mov
mov
cmps
in
or
test
call
std
ds
repz
ds
inc
dec
cmp
ds
xor
xchg
add
xchg
cld
jecxz
xor
mov
std
add
mov
xchg
outs
dec
daa
inc
jne
aas
mov
mov
mov
std
ds
cs
repz
add
mov
push
outs
inc
mov
mov
retf
add
mov
stos
inc
cmp
jecxz
jle
sub
ret
dec
mov
outs
dec
daa
inc
cmp
shl
ds
push
daa
out
push
add
push
jno
das
jl
cli
inc
sahf
mov
inc
mov
dec
pop
jl
cli
inc
sahf
mov
push
int3
add
out
es
cmp
fdiv
push
jecxz
retf
mov
mov
(bad)
in
cmp
std
leave
jp
push
(bad)
sahf
jbe
inc
mov
jae
inc
xor
nop
push
jecxz
retf
or
inc
jbe
cmp
sti
iret
(bad)
ds
inc
ret
xchg
jecxz
int3
add
lds
int3
outs
lods
mov
xor
int3
sbb
std
ds
pop
call
mov
outs
inc
das
cmp
mov
test
xor
jbe
and
sahf
pop
add
ret
xor
push
sub
std
leave
or
push
push
ds
inc
aas
cmp
retf
std
nop
mov
xor
xchg
mov
sub
ds
std
daa
mov
add
inc
inc
out
out
loope
ds
mov
ins
or
inc
dec
sahf
xor
dec
cmp
enter
sar
pop
mov
jecxz
inc
jmp
jecxz
or
dec
cmps
sub
inc
fcmovu
out
aaa
out
leave
jp
push
(bad)
sahf
jb
inc
mov
dec
pop
pop
xor
push
data16
movs
or
ds
cmp
test
cs
sar
mov
mov
stc
adc
scas
loop
ds
je
iret
or
out
xchg
inc
push
inc
mov
mov
(bad)
out
cmp
inc
mov
dec
xchg
push
les
retf
inc
push
test
in
sar
xchg
(bad)
mov
ins
or
add
or
cmp
add
mov
xchg
in
std
into
inc
je
iret
or
nop
or
mov
or
jb
inc
mov
mov
jmp
enter
ds
push
ds
mov
test
jecxz
mov
outs
test
mov
in
cmp
add
ds
mov
test
outs
test
mov
cmp
cmp
std
mov
jecxz
(bad)
std
cmp
ds
sub
popf
adc
mov
cmps
add
inc
mov
(bad)
std
ds
std
ds
out
ds
xchg
inc
mov
std
retf
inc
call
push
inc
inc
push
inc
mov
cmp
push
sahf
jae
sub
out
pop
adc
test
cmp
out
ds
adc
xchg
and
dec
cmp
(bad)
out
ds
std
ds
sub
mov
xor
ja
add
xchg
bound
retf
(bad)
ds
add
cmp
inc
mov
addr16
inc
clc
mov
and
cld
(bad)
sub
cmp
ror
sahf
jg
ds
mov
jecxz
es
add
ds
cmp
jecxz
sub
pop
std
les
pop
(bad)
ds
add
cmp
pop
or
inc
inc
jb
inc
mov
in
aam
std
int3
inc
push
dec
pop
mov
mov
(bad)
in
ds
daa
sbb
mov
mov
out
add
ds
cmp
mov
push
std
les
cwde
(bad)
ds
adc
or
adc
sub
test
fidivr
inc
jb
inc
mov
in
aam
std
test
inc
movs
(bad)
ds
int3
fwait
mov
inc
lock
mov
mov
std
mov
aas
inc
jb
inc
mov
in
shl
std
retf
add
mov
fnstcw
pop
or
cld
jecxz
fst
out
ds
push
inc
mov
cmp
sub
dec
ds
adc
ins
pushf
arpl
aam
aas
mov
shl
cmp
movs
jb
or
push
ret
mov
repz
mov
std
ds
jb
inc
mov
cld
(bad)
push
ins
pushf
das
mov
int3
dec
sbb
out
ds
sub
mov
mov
pushf
cmp
sub
mov
in
push
inc
sub
xchg
fstp
and
push
int3
inc
xchg
add
mov
cmps
popf
mov
mov
ins
(bad)
jecxz
ja
push
add
mov
add
iret
add
inc
dec
add
mov
test
sahf
out
add
xchg
sbb
mov
jns
pop
inc
aas
inc
push
enter
dec
push
jecxz
fisttp
sub
(bad)
adc
push
shl
call
xchg
sbb
call
inc
cmp
movs
add
sti
fbstp
inc
jb
inc
mov
in
shl
std
ret
add
mov
jb
mov
ins
xchg
cld
jecxz
frstor
std
ds
xor
mov
xor
cmp
repnz
mov
mov
xchg
in
ds
mov
outs
add
pop
xor
or
mov
cmp
xor
push
int
in
ds
pop
pop
inc
mov
std
test
mov
std
fidivr
add
inc
push
inc
mov
cmp
hlt
cld
push
pop
cmp
push
inc
mov
std
ds
pop
popf
adc
pushf
js
std
into
inc
je
iret
inc
je
iret
or
mov
cmp
ds
push
daa
(bad)
pushf
add
cmp
div
cmps
add
sahf
jg
inc
mov
mov
retf
push
mov
movs
jae
jge
and
jecxz
mov
ins
inc
arpl
outs
jae
cmp
jb
inc
add
xchg
cld
jecxz
jl
cmp
int3
and
mov
repnz
(bad)
push
out
aas
mov
std
push
cmp
retf
nop
iret
mov
std
ret
jbe
xchg
jp
or
mov
cmp
adc
xor
pop
mov
into
inc
je
iret
push
xchg
add
retf
arpl
outs
push
arpl
jmp
nop
mov
ror
mov
iret
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
dec
inc
xor
inc
inc
cmp
inc
push
xor
inc
aas
sahf
pop
lds
mov
or
inc
je
iret
inc
sub
inc
or
hlt
xchg
fmul
dec
cmp
push
(bad)
leave
ds
xor
ds
inc
cmp
dec
inc
stos
xchg
inc
aas
adc
or
inc
xor
dec
inc
cmp
dec
or
cmp
mov
ror
pop
inc
mov
in
sbb
std
sar
jmp
stc
mov
(bad)
dec
xchg
inc
lods
out
inc
in
pushf
js
std
jno
inc
ror
dec
arpl
push
jmp
inc
stos
pop
add
jecxz
mov
xrelease
inc
fiadd
xor
mov
ss
dec
in
sar
add
mov
inc
arpl
push
dec
inc
inc
sub
xchg
inc
hlt
dec
xchg
outs
mov
inc
push
mov
xor
js
std
rol
aas
jbe
ds
xchg
ds
fwait
in
aas
(bad)
in
aas
fsub
ds
add
ds
sub
ds
mov
add
jmp
add
jae
iret
inc
je
iret
inc
je
iret
and
push
fsubr
(bad)
mov
mov
(bad)
enter
ds
jmp
ror
sbb
push
pop
jno
inc
mov
std
(bad)
xor
adc
and
push
enter
daa
xchg
xchg
std
cmp
fdivrp
jecxz
push
sahf
adc
ds
inc
arpl
outs
push
arpl
inc
pop
retf
mov
mov
add
movs
push
aas
inc
cmp
xchg
outs
pop
arpl
cmp
or
push
sahf
add
arpl
outs
out
daa
dec
sti
cld
or
arpl
int3
cmp
mov
add
sub
push
or
enter
add
or
shl
mov
mov
sub
lds
inc
mov
cld
arpl
add
mov
mov
cli
mov
add
retf
inc
mov
mov
ja
add
xchg
in
sbb
out
mov
mov
ret
xchg
mov
fcmove
ret
xchg
mov
cmp
test
movs
xor
cmp
retf
mov
outs
cmc
int3
mov
pop
pop
daa
out
add
ds
add
ds
outs
xor
lods
pop
adc
add
dec
ds
mov
test
fwait
(bad)
ds
call
cmp
jecxz
shl
std
ds
fwait
dec
mov
in
xchg
inc
sub
int3
or
sbb
or
dec
add
dec
ds
cmps
push
test
call
std
mov
outs
int3
daa
ror
std
ds
or
or
sbb
test
out
sub
leave
cli
pop
sbb
xchg
pop
add
cli
pop
push
enter
sub
in
ds
jecxz
aaa
or
jecxz
add
sub
(bad)
mov
pop
adc
shl
std
ds
push
inc
sub
pop
push
xor
inc
aas
cmp
add
outs
dec
arpl
push
mov
sub
and
xor
pop
loope
xchg
mov
std
xchg
sahf
adc
ds
cmc
xchg
sahf
or
ds
ret
fild
int3
cli
jmp
inc
in
sbb
out
mov
std
xchg
sahf
jmp
ds
cmc
xchg
sahf
jecxz
ds
push
inc
shl
inc
shr
iret
mov
jo
inc
mov
jecxz
ret
xchg
mov
std
shr
sbb
cld
jecxz
or
movs
or
enter
sub
mov
mov
add
or
jecxz
xchg
mov
dec
add
mov
out
daa
inc
add
ds
sub
inc
cmp
xchg
mov
std
shr
out
pop
call
mov
push
lahf
in
(bad)
ds
out
aad
std
inc
scas
cmp
xchg
aad
std
retf
sbb
cli
jmp
cli
jae
int3
sub
add
mov
inc
outs
mov
int3
sbb
retf
aas
mov
push
daa
(bad)
add
ds
add
ds
cmp
pop
cmp
add
cli
jae
ret
outs
cmp
jnp
jecxz
ds
in
cmp
xor
int3
add
xor
jle
cld
ds
pop
and
sub
jae
ret
(bad)
mov
int3
and
mov
xchg
sub
jg
cmp
xor
jecxz
ret
xchg
cmp
div
ins
inc
arpl
into
dec
les
or
(bad)
push
aam
xchg
jecxz
inc
mov
sub
or
sbb
shl
ins
dec
arpl
ss
enter
xchg
arpl
jno
arpl
jo
arpl
xor
retf
push
xchg
push
int3
or
mov
mov
(bad)
mov
jge
and
jge
and
pop
inc
aas
sahf
iret
adc
mov
dec
arpl
outs
les
adc
dec
mov
std
cmp
mov
das
out
aas
inc
out
aas
push
out
aas
gs
aas
loope
ds
loope
ds
(bad)
call
ds
leave
call
ds
pop
jmp
ds
cmp
push
xchg
or
mov
dec
aas
sub
dec
push
outs
inc
arpl
outs
out
(bad)
sahf
pop
in
ds
jp
fisubr
addr16
mov
jno
leave
mov
sub
jno
arpl
ins
dec
arpl
xor
mov
mov
mov
(bad)
mov
pop
aaa
mov
mov
inc
arpl
outs
push
arpl
inc
pop
call
(bad)
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
cmp
cmp
sahf
mov
ds
mov
ds
int3
mov
sbb
daa
mov
mov
xchg
(bad)
or
cld
out
add
jecxz
ret
or
in
std
ds
out
ds
mov
mov
dec
or
xchg
(bad)
out
mov
or
or
cmps
or
pop
aas
xor
dec
lahf
fld
aas
mov
and
std
ds
js
enter
sub
and
mov
std
leave
cmp
mov
mov
xchg
(bad)
out
mov
or
mov
repz
mov
or
add
icebp
les
(bad)
jecxz
fidivr
pop
push
sub
std
ds
jo
(bad)
mov
std
jns
pop
or
adc
push
enter
sub
out
ds
and
adc
mov
call
push
pop
jno
arpl
retf
and
mov
mov
fiadd
cmc
sbb
inc
cli
dec
daa
popaw
(bad)
ds
jmp
(bad)
int3
xor
jecxz
add
int3
es
mov
mov
fisub
ds
stc
lds
inc
mov
addr16
mov
sub
or
jp
add
push
nop
or
movs
jb
cmp
push
repnz
bswap
sub
push
clc
(bad)
ds
pusha
and
mov
push
inc
sub
imul
cmp
pop
sub
mov
jecxz
cmp
std
cmp
mul
mov
fisubr
ds
push
dec
mov
xchg
ss
imul
enter
enter
sub
std
ds
js
(bad)
mov
std
xor
cwde
mov
push
arpl
int3
outs
inc
mov
mov
fisubr
ds
mov
sbb
out
mov
std
leave
cmp
xchg
mov
cmp
js
mov
in
ds
push
std
ret
jbe
xchg
add
cmp
sbb
and
std
ds
jg
mov
and
stos
dec
xchg
sahf
das
cmp
lahf
repnz
ds
xchg
arpl
in
cmp
aas
xchg
jecxz
jmp
push
neg
jmp
dec
mov
(bad)
ds
sub
in
lods
mov
cmp
mov
inc
(bad)
sti
mov
std
leave
dec
or
adc
addr16
aas
mov
mov
mov
std
jno
jno
arpl
jo
inc
test
out
sbb
lods
add
out
outs
add
xor
jle
jb
std
cmp
inc
aas
xor
jnp
jecxz
lea
repnz
(bad)
cmp
inc
les
inc
inc
lds
ret
xor
cmp
mov
and
add
jno
arpl
xor
mov
jl
add
outs
xor
lods
pop
adc
sahf
pop
sbb
mov
ret
fcomp
mov
(bad)
outs
cld
sub
mov
or
pop
mov
push
outs
cmc
retf
clc
add
lods
and
jb
jle
mov
mov
(bad)
les
mov
addr16
mov
sub
add
jp
or
push
test
mov
mov
ficom
ds
lds
cld
jecxz
mov
loop
retf
data16
adc
pop
mov
mov
add
cmps
push
aas
leave
jmp
aas
or
ds
repz
aas
xor
jmp
aas
push
in
ds
shr
aas
and
jecxz
inc
mov
add
call
add
mov
out
inc
mov
in
ds
inc
in
ds
pusha
in
ds
jne
ds
mov
ds
lahf
in
ds
ret
in
ds
inc
je
iret
sbb
addr16
cmp
test
repz
enter
ds
jmp
sti
stc
ds
xor
dec
out
ds
pop
and
les
leave
add
outs
retf
jb
adc
bswap
(bad)
outs
dec
arpl
dec
xchg
std
cmp
mov
adc
fdivr
leave
cli
pop
push
dec
movs
xchg
xor
(bad)
sbb
aas
mov
std
sar
dec
mov
inc
arpl
outs
dec
arpl
inc
pop
retf
bswap
mul
xchg
push
dec
xchg
std
cmp
mov
or
pop
inc
mov
mov
push
int
inc
mov
cmp
xor
inc
sahf
pop
or
mov
push
inc
inc
jmp
jge
and
sahf
das
adc
mov
jb
into
outs
jp
(bad)
fcmovu
pop
lods
pop
cmc
retf
out
xor
std
(bad)
mov
xor
std
ds
jo
mov
jp
les
mov
lds
cld
jecxz
inc
inc
xor
inc
sahf
mov
ds
pop
retf
dec
mov
mov
add
cmps
push
aas
inc
cmp
retf
dec
daa
jmp
sub
sub
scas
inc
sbb
ds
xor
cmp
pop
or
test
pop
sub
mov
jecxz
mov
fimul
ret
or
repz
ds
or
(bad)
test
retf
xchg
test
jecxz
mov
pop
mov
jmp
outs
push
dec
aas
cli
mov
aaa
fnstsw
fdiv
add
or
push
mov
aas
xacquire
jmp
js
enter
push
cmp
(bad)
dec
dec
movs
xchg
stos
add
jbe
(bad)
cmp
out
data16
ret
xchg
add
dec
mov
mov
add
cmps
push
aas
inc
cmp
mov
xor
sahf
adc
or
add
dec
mov
mov
add
cmps
push
aas
inc
xor
jb
gs
mov
movs
out
mov
std
enter
adc
movs
mov
dec
cmps
xchg
outs
dec
arpl
dec
xchg
std
cmp
xchg
sub
(bad)
sahf
cmp
popf
inc
xor
(bad)
sbb
aas
mov
std
sar
dec
mov
dec
push
jmp
js
sub
cmp
push
sub
std
leave
or
jbe
jp
pop
enter
mov
xor
ret
jecxz
ds
ret
hlt
std
sar
daa
out
std
cmp
jb
mov
dec
arpl
inc
pop
mov
mov
add
cmps
push
aas
shr
aas
shr
aas
pop
lock
loopne
ds
pop
lock
sub
ds
shr
aas
sub
ds
sub
ds
(bad)
lock
(bad)
lock
inc
lock
(bad)
lock
(bad)
ds
shr
aas
shr
aas
cmp
ds
shr
aas
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
(bad)
lock
(bad)
lock
sbb
ds
call
aas
leave
icebp
ds
in
icebp
ds
pslld
aas
sbb
ds
cmp
aaa
mov
or
mov
xchg
in
ds
jbe
ds
dec
arpl
jo
arpl
dec
dec
mov
std
sub
jae
push
dec
pop
fdivrp
jecxz
or
inc
pop
pushf
jmp
hlt
std
leave
and
sbb
mov
or
xchg
inc
adc
jbe
std
mov
sti
mov
mov
mov
cmp
jae
push
dec
inc
fdivrp
jecxz
or
inc
pop
pushf
jmp
hlt
std
leave
hlt
outs
(bad)
retf
cmp
add
aas
and
dec
ret
in
push
jecxz
les
push
js
pop
add
cmps
iret
fisubr
sahf
addr16
mov
mov
ds
ds
cli
repnz
mov
std
aas
mov
and
jl
push
daa
xabort
ds
clc
cld
ds
pop
add
or
cld
push
mov
add
in
into
pop
ret
push
daa
mov
rcl
clc
cld
ds
cmp
inc
sub
inc
xor
inc
inc
pop
inc
int3
enter
mov
out
add
mov
mov
or
mov
sub
cmp
and
pop
popf
adc
mov
aas
inc
push
add
lods
pop
dec
retf
push
les
jecxz
mov
outs
ret
sahf
aas
addr16
mov
mov
js
std
leave
cli
pop
push
test
sahf
dec
call
jecxz
leave
jl
pop
pushf
adc
(bad)
cmps
loop
inc
aas
inc
scas
out
call
call
cmp
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
push
xchg
or
mov
mov
leave
daa
jle
std
ds
push
push
retf
out
retf
inc
scas
cmp
inc
retf
retf
sbb
cli
jmp
cli
imul
xor
add
mov
jp
mov
in
sahf
mov
in
xchg
sahf
mov
ds
in
ret
mov
fimul
ds
sub
(bad)
mov
int
cld
jecxz
jmp
popa
mov
retf
sbb
mov
push
arpl
outs
leave
xchg
aas
sub
push
jmp
jecxz
les
push
shl
retf
push
int3
add
sbb
push
cmp
or
dec
daa
or
push
retf
test
mov
std
ret
jbe
add
xchg
cld
jecxz
(bad)
shr
arpl
cmp
cmp
(bad)
ds
adc
sub
leave
cli
pop
adc
jecxz
daa
or
(bad)
popf
adc
add
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
outs
mov
in
ds
dec
dec
mov
std
(bad)
and
es
pop
cmp
cmp
fdivrp
jecxz
or
xlat
loopne
mov
das
dec
mov
mov
fidivr
ds
push
arpl
xor
inc
push
sahf
xlat
cwde
ds
(bad)
xchg
aas
inc
and
sti
sahf
ds
ret
movs
or
ds
push
push
xchg
sahf
xchg
ds
in
xchg
sahf
jg
ds
jb
mov
in
cmp
or
(bad)
out
std
ds
or
and
leave
jb
cmps
aas
mov
cmp
jmp
inc
jl
push
xchg
sahf
cmp
mov
ret
movs
or
ds
jecxz
add
sub
ds
dec
arpl
outs
push
arpl
retw
(bad)
dec
xchg
pop
jno
push
sahf
jecxz
ds
inc
arpl
outs
retf
(bad)
sahf
xlat
sti
ds
outs
dec
mov
mov
fimul
add
jg
into
les
into
add
cwde
in
or
addr16
dec
mov
cmp
pop
adc
outs
retf
enter
arpl
xor
clc
mov
std
sub
out
std
ds
mov
jmp
pop
loope
ds
push
or
mov
call
jmp
lds
adc
lods
or
ds
push
sub
cli
pop
adc
mov
out
mov
and
mov
inc
inc
sub
push
push
int3
push
cmp
jecxz
adc
jecxz
leave
mov
in
ds
mov
mov
or
addr16
mov
or
stc
or
mov
inc
inc
sub
push
push
int3
sbb
mov
out
shl
bound
inc
arpl
xor
dec
mov
std
sub
out
addr16
pop
outs
dec
arpl
retf
je
mov
mov
fiadd
jno
aas
sub
arpl
es
retf
cmp
sahf
jmp
ds
cmc
xchg
sahf
jecxz
ds
cmc
ret
mov
jecxz
mov
inc
xor
nop
mov
int
cld
jecxz
(bad)
jge
and
jecxz
ds
les
mov
mov
mov
or
ret
fidiv
ds
std
ds
test
in
mov
xor
repnz
mov
jecxz
aam
add
aas
inc
nop
and
mov
std
mov
mov
or
ds
or
inc
fs
mov
in
xchg
sahf
push
push
ds
in
xchg
sahf
dec
push
ds
mov
in
ds
pop
add
outs
in
ds
ret
stos
jae
cmp
push
enter
dec
cmp
aas
mov
jp
(bad)
jo
arpl
xor
push
cmps
cmp
cmp
xchg
mov
rcl
add
inc
aam
xor
sahf
push
xchg
inc
mov
(bad)
ds
jae
inc
sub
addr16
mov
daa
(bad)
mov
and
xor
outs
inc
pusha
and
inc
and
mov
xor
mov
and
mov
std
ds
mov
lock
adc
es
sub
outs
sti
int3
mov
ja
push
and
sub
push
xor
push
xchg
sahf
les
inc
mov
mov
fimul
stc
mov
in
mov
mov
sahf
jno
mov
push
daa
ds
ds
repz
ds
jo
out
jecxz
sar
cmp
pop
add
jbe
xchg
sub
push
cmp
dec
jbe
aas
mov
jb
(bad)
jo
arpl
xor
xchg
shl
inc
aas
inc
push
std
test
data16
mov
ficom
sub
inc
mov
xchg
and
addr16
and
in
dec
call
std
ds
xor
jae
cmovp
xor
aas
and
addr16
inc
mov
mov
call
std
ds
mov
std
ret
mov
add
mov
inc
aas
or
call
das
or
loopne
mov
mov
mov
jp
int3
cli
jns
int3
sub
add
jle
cld
cmp
out
(bad)
or
sub
jp
sub
push
outs
inc
arpl
cmp
(bad)
mul
mov
jecxz
sub
js
out
jecxz
jno
imul
sub
sti
inc
sub
out
(bad)
cmps
cmp
mov
or
sbb
sub
sbb
add
int3
cli
jns
int3
sub
add
mov
dec
outs
mov
retw
lods
jmp
jmp
dec
dec
mov
add
or
inc
dec
mov
mov
mov
call
mov
loop
cld
ds
xor
inc
inc
sub
inc
cmp
xchg
sub
push
cmp
dec
sub
mov
outs
dec
arpl
cmp
add
daa
jmp
cwde
and
mov
std
ret
lods
repz
mov
dec
push
sahf
ret
xchg
ds
out
dec
cmp
ds
add
add
sbb
xchg
jecxz
les
xor
(bad)
div
add
repz
jecxz
sti
mov
std
ds
and
jecxz
ds
xor
pop
and
mov
imul
(bad)
outs
dec
arpl
xor
aam
jecxz
inc
addr16
aas
mov
jle
retf
jecxz
sub
icebp
xchg
sahf
push
or
mov
in
xchg
sahf
dec
or
mov
xchg
arpl
std
ds
add
inc
or
out
ret
loop
ret
xor
pop
lahf
xchg
sahf
daa
or
mov
aad
sahf
pop
or
mov
aad
jp
mov
mov
std
ds
daa
sbb
cld
jecxz
inc
mov
mov
mov
sahf
mov
ds
mov
sub
or
ds
and
mov
std
leave
test
jmp
mov
mov
les
pop
or
pop
call
adc
aad
inc
jne
std
ds
mov
sub
std
les
jecxz
les
std
retf
mov
ds
and
std
ds
dec
ret
xor
jecxz
cld
mov
std
ds
retf
cld
ds
sti
inc
lds
inc
mov
mov
sahf
and
inc
mov
mov
fidivr
ds
dec
sahf
xlat
mov
inc
mov
mov
fimul
fld
jg
xchg
add
(bad)
xchg
sub
out
ret
inc
cmps
cmp
jl
loop
retf
sbb
sub
sbb
add
int3
cli
jns
int3
sub
add
mov
dec
outs
mov
retw
lods
add
jmp
or
mov
add
or
add
mov
mov
mov
call
mov
mov
xor
inc
inc
sub
inc
cmp
xchg
sub
push
cmp
dec
jmp
(bad)
push
rol
xchg
repz
add
int3
mov
das
mov
or
sbb
call
add
mov
outs
jns
cmp
add
add
ds
cli
pop
dec
aas
mov
std
es
cld
ds
inc
and
lods
mov
mov
int3
in
stos
mov
add
ins
add
movs
cmp
mov
sahf
cmp
cwde
shl
inc
sahf
addr16
sub
les
add
xchg
cld
jecxz
ds
xor
mov
fwait
outs
aas
mov
ret
ins
inc
push
sahf
wbinvd
ds
in
xchg
sahf
pop
or
mov
dec
inc
shl
inc
shl
inc
inc
sub
inc
aas
sbb
mov
fimul
sub
pop
addr16
arpl
xor
rcl
jecxz
mov
cmp
add
mov
dec
arpl
xor
push
sahf
cmp
cmp
imul
or
std
push
jle
inc
aas
lahf
loop
aas
mov
inc
arpl
push
pop
arpl
dec
(bad)
cmps
cmps
add
scas
out
nop
jecxz
sub
dec
mov
or
enter
dec
jne
jg
into
(bad)
ds
push
dec
cmp
push
ror
inc
les
mov
and
jbe
aas
aas
inc
push
std
(bad)
cli
pop
es
out
ds
push
std
jno
imul
arpl
int3
stc
inc
mov
mov
fimul
mov
aas
xor
addr16
enter
outs
xchg
arpl
std
ds
push
std
(bad)
or
es
sub
std
ds
jo
out
jecxz
mov
out
ds
push
std
ret
jbe
mov
cli
pop
es
sub
daa
push
out
ds
js
out
jecxz
jno
pop
aam
ret
ins
jb
fisubr
loop
test
jecxz
mov
ins
dec
arpl
pop
cmp
scas
call
push
nop
or
arpl
ins
jb
push
int3
xchg
inc
mov
mov
fisub
cmc
sbb
inc
cli
dec
daa
(bad)
dec
(bad)
ds
jmp
fmulp
cmp
add
int3
xor
jecxz
fcmovnu
xchg
ds
cmp
mov
cmp
repz
mov
js
fbstp
or
ret
dec
xchg
or
pop
adc
mov
outs
jb
ficomp
mov
mov
das
dec
xchg
and
cld
push
jmp
adc
sub
shl
std
ds
fwait
cmp
and
leave
cmp
cmps
aas
mov
mov
(bad)
lods
fld
adc
cmp
xchg
aas
cmp
xchg
lahf
jo
ds
xchg
arpl
std
lods
mov
mov
xchg
fidivr
out
mov
std
leave
cmp
cmps
aas
mov
cmp
js
(bad)
cli
pop
pop
sub
in
ds
push
std
ret
jbe
xchg
add
xor
mov
mov
and
std
cmp
arpl
int
inc
mov
mov
fimul
mov
push
arpl
pop
(bad)
nop
or
lods
scas
mov
add
int3
or
rcr
mov
ds
shl
jecxz
cmp
lods
std
jb
(bad)
lods
xchg
cmp
pop
add
fiadd
or
adc
xor
push
outs
cmc
retf
stc
sub
std
ds
cwde
and
mov
std
ret
lods
repz
(bad)
ds
das
add
lods
mov
add
cli
pop
push
enter
retf
jl
aaa
lds
inc
js
ret
xchg
inc
xor
(bad)
or
pop
dec
dec
movs
add
cld
out
aam
les
mov
inc
jg
mov
xor
mov
cli
pop
dec
(bad)
sahf
ret
ins
aas
mov
les
test
retf
hlt
mov
cmp
fdivr
call
push
int3
or
retfw
pop
int3
or
data16
fiadd
std
jb
(bad)
lods
xchg
test
mov
out
test
lds
xor
jp
(bad)
jo
arpl
ins
dec
arpl
ins
push
loop
pop
arpl
outs
push
arpl
dec
add
or
mov
fiadd
jne
inc
xor
addr16
add
xor
xor
mov
int
cld
jecxz
jmp
cmp
addr16
or
push
(bad)
sub
pop
xor
mov
sahf
jmp
ds
sbb
add
adc
dec
or
enter
ds
inc
arpl
xor
inc
scas
out
test
std
retf
fmul
in
cmp
pop
mov
std
retf
add
ss
cmp
mov
mov
cld
ds
lds
cld
jecxz
pushf
mov
std
retf
xchg
mov
pop
popf
adc
(bad)
enter
ds
ret
jecxz
add
jecxz
ds
idiv
aas
mov
idiv
aas
push
idiv
aas
cmp
ds
cmp
ds
sub
ds
sub
ds
(bad)
stc
ds
ss
ds
js
ds
sbb
(bad)
ds
lahf
(bad)
ds
mov
ds
retf
aas
outs
(bad)
ds
loop
ds
push
(bad)
ds
mov
jecxz
inc
mov
add
call
add
mov
out
inc
mov
(bad)
ds
jecxz
ds
std
(bad)
ds
adc
aas
aas
daa
add
aas
cmp
aas
aas
pusha
add
aas
inc
je
iret
inc
je
iret
inc
cmp
inc
inc
es
jl
out
mov
repz
ds
pop
jl
in
mov
mov
outs
add
mov
movs
add
jmp
call
std
mov
mov
dec
(bad)
cmps
add
mov
mov
inc
sahf
pop
dec
inc
mov
add
(bad)
out
jo
out
add
je
iret
or
out
retf
add
mov
mov
fdivrp
jecxz
int
out
ds
xlat
std
aas
mov
mov
retf
mov
mov
add
jecxz
ds
std
pushf
jns
mov
inc
je
iret
or
out
daa
outs
jecxz
ds
mov
adc
in
leave
cli
pop
push
(bad)
sahf
mov
inc
mov
ret
cmps
add
inc
jne
inc
mov
mov
pop
in
ds
add
jbe
add
iret
add
aaa
test
ds
(bad)
xchg
cmp
and
adc
icebp
push
add
neg
enter
mov
leave
mul
pop
add
je
iret
inc
je
iret
outs
xor
test
je
iret
inc
je
iret
inc
sub
inc
push
int3
hlt
xchg
mov
add
push
mov
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
mov
or
and
(bad)
ds
mov
mov
inc
and
cld
out
std
ds
out
mov
std
jb
jno
jnp
bound
enter
popf
out
pop
jae
inc
ss
rcr
cld
ds
xor
xor
xchg
sahf
out
stc
cmp
mov
std
(bad)
xor
xchg
aas
mov
xchg
cmp
std
ds
mov
xchg
inc
in
ds
mov
inc
mov
pop
call
mov
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
adc
or
fisttp
inc
repnz
inc
inc
sti
cld
push
inc
xor
daa
aas
xor
aas
inc
sub
push
sti
(bad)
ds
sbb
test
dec
push
(bad)
ds
inc
arpl
es
push
call
sub
jno
std
ds
ror
xor
pop
jno
std
sub
jecxz
test
outs
push
ret
cmp
ins
dec
sub
sub
dec
cmp
jo
inc
inc
mov
daa
cli
out
cld
ds
xor
nop
inc
lods
out
shl
retf
inc
arpl
es
push
call
sub
inc
mov
add
int3
retf
stc
mov
jo
or
enter
(bad)
(bad)
enter
mov
mov
dec
imul
(bad)
daa
scas
out
cld
ds
cmp
retf
out
shl
int3
add
int3
loopne
mov
mov
sahf
mov
dec
mov
sub
ds
cmp
jle
out
shl
int3
add
int3
mov
mov
mov
sahf
(bad)
jno
mov
outs
(bad)
daa
push
out
cld
cmp
inc
sub
mov
outs
int3
daa
inc
out
cld
mov
data16
mov
fs
ds
int3
(bad)
sahf
push
or
mov
(bad)
ret
mov
std
pop
out
shl
js
shl
inc
jnp
aas
mov
mov
mov
cmp
jecxz
or
mov
cmp
jae
aas
mov
push
nop
sahf
mov
ret
mov
push
arpl
es
mov
mov
cvttps2pi
mov
mov
inc
arpl
lds
mov
cmp
inc
mov
arpl
push
(bad)
sahf
lahf
pop
ds
dec
arpl
outs
(bad)
daa
in
cld
ds
xor
retf
dec
sub
and
cld
or
adc
mov
inc
inc
mov
aaa
outs
call
mov
or
adc
xchg
push
int3
js
mov
mov
or
mov
mov
jmp
or
mov
dec
arpl
jmp
mov
xchg
fisubr
outs
inc
cmps
xchg
movs
add
pop
add
idiv
outs
inc
sub
out
xchg
(bad)
ror
or
mov
add
mov
icebp
movs
je
inc
mov
scas
outs
call
mov
or
adc
cmp
retf
mov
aas
xor
retf
cmp
mov
fwait
add
inc
cmp
retf
xchg
cmp
inc
mov
arpl
(bad)
retf
dec
sub
es
cmp
sub
mov
mov
push
arpl
jmp
mov
xchg
fisubr
cmps
inc
cmps
xchg
movs
add
pop
add
idiv
outs
inc
sub
out
xchg
(bad)
ror
or
mov
add
mov
icebp
movs
je
inc
mov
or
std
leave
or
mov
or
adc
cmp
retf
mov
aas
xor
retf
cmp
mov
fwait
add
inc
cmp
retf
xchg
cmp
inc
mov
arpl
jbe
js
dec
sub
es
cmp
sub
mov
mov
push
arpl
jmp
mov
xchg
fisubr
mov
mov
movs
add
pop
add
idiv
outs
inc
sub
out
xchg
(bad)
ror
or
mov
ss
ds
cmps
xchg
movs
add
pop
add
idiv
outs
inc
sub
out
xchg
(bad)
ror
or
mov
cmp
std
ds
cmps
xchg
movs
add
pop
add
cmc
mov
outs
inc
sub
out
xchg
(bad)
ror
or
mov
ds
ds
cmps
xchg
movs
add
pop
add
cmc
mov
outs
inc
sub
out
xchg
(bad)
ror
or
mov
inc
in
ds
cmps
xchg
movs
add
pop
add
cmc
mov
outs
inc
sub
push
enter
arpl
mov
mov
add
pop
xchg
mov
mov
jno
dec
sahf
xchg
idiv
repnz
movs
aaa
mov
push
int3
add
loop
int3
std
out
(bad)
sahf
mov
ds
ret
stos
jb
or
jecxz
add
jecxz
ds
push
dec
inc
mov
(bad)
ds
mov
jecxz
ds
inc
rol
dec
daa
outs
loope
xor
inc
cmp
fiadd
mov
dec
xor
ins
or
mov
std
cdq
inc
leave
pop
add
outs
pop
arpl
mov
mov
(bad)
pop
inc
retf
mov
sub
std
xchg
or
jl
mov
add
data16
addr16
sahf
adc
mov
ret
inc
pop
add
in
sar
aaa
mov
or
inc
aam
ds
ins
sbb
cmps
mov
inc
je
iret
inc
je
iret
or
push
retf
push
xchg
inc
push
aas
mov
cmp
push
mov
push
in
cmp
std
ds
push
aas
mov
cmp
jmp
js
cmp
(bad)
ds
mov
sub
std
xchg
or
jecxz
add
add
ds
ja
(bad)
adc
in
sar
popf
adc
rcl
jecxz
add
jnp
ds
push
xchg
inc
mov
jl
in
shr
sahf
aas
mov
xor
cmp
mov
(bad)
fstp
mov
pop
pushf
adc
mov
inc
je
iret
inc
je
iret
cmp
or
into
cmp
cmp
inc
inc
cmp
jecxz
std
ds
ds
push
xchg
sahf
daa
pop
aas
mov
(bad)
xchg
or
arpl
retf
xor
mov
add
ins
inc
arpl
push
std
sub
sbb
cmp
and
sbb
and
xor
daa
mov
mov
and
xor
dec
cmp
push
inc
xor
dec
inc
cmp
pop
pop
ss
mov
mov
xchg
(bad)
mov
shr
sbb
sub
mov
in
mov
mov
mov
shl
(bad)
ds
std
push
inc
push
inc
mov
mov
inc
aas
cmp
retf
(bad)
ds
mov
push
cmp
push
shr
arpl
ins
mov
mov
std
(bad)
dec
mov
ds
pop
call
cmps
inc
mov
std
ds
(bad)
lds
std
ds
std
ds
lock
je
iret
inc
je
iret
cmp
es
or
out
(bad)
call
ss
xor
icebp
(bad)
jb
out
add
je
mov
arpl
xor
stc
sub
jmp
inc
push
cmps
mov
(bad)
ds
adc
or
(bad)
test
outs
idiv
retf
pop
dec
test
sub
retf
or
push
xchg
jge
and
jecxz
ds
xor
push
aas
inc
and
inc
and
push
and
inc
and
pusha
and
sub
outs
aas
inc
and
pop
and
fwait
fs
mov
mov
shl
jl
pop
call
mov
inc
je
iret
and
data16
fsubr
(bad)
mov
mov
(bad)
enter
ds
jmp
enter
retf
cmp
mov
ins
inc
arpl
push
jmp
jnp
push
loop
or
jle
inc
push
mov
mov
mov
fadd
sbb
std
ds
jae
jmp
jecxz
leave
cli
pop
ss
xor
sahf
mov
cmp
(bad)
outs
adc
mov
int3
ds
xor
lahf
fild
aas
mov
push
arpl
outs
inc
arpl
outs
dec
arpl
ins
xchg
movzx
std
leave
or
cmp
cmp
(bad)
ds
inc
xor
(bad)
ds
cmp
jb
aas
mov
xchg
ficomp
jb
inc
xor
retf
cmp
in
ds
add
push
jae
inc
xor
jnp
lods
(bad)
ds
xchg
and
enter
dec
arpl
jecxz
inc
mov
dec
arpl
pop
retf
mov
fs
arpl
jecxz
jle
into
or
sub
sahf
(bad)
ds
inc
ret
je
mov
sbb
and
mov
mov
std
sub
fs
arpl
jecxz
inc
mov
inc
arpl
out
jge
lds
repnz
inc
mov
inc
arpl
arpl
inc
aas
sub
ja
cmp
mov
jecxz
aas
mov
push
cmps
sub
jle
ficomp
(bad)
ds
das
mov
inc
push
and
es
gs
push
pop
xchg
sub
sbb
cmps
aas
mov
std
mov
lock
ds
xchg
aaa
xor
jnp
jecxz
pop
mov
cmp
in
adc
test
inc
dec
xadd
scas
mov
mov
arpl
outs
dec
arpl
xadd
loope
mov
xchg
mov
cmp
mov
mov
std
mov
outs
push
arpl
push
push
arpl
fs
mov
cmp
ds
push
retf
cmp
cwde
jecxz
cmp
jecxz
enter
retf
ds
add
mov
xchg
cmp
std
mov
push
adc
mov
pop
or
retf
stos
add
mov
push
arpl
outs
push
arpl
test
inc
mov
std
ds
jno
inc
cmp
xchg
in
(bad)
div
sub
loope
push
(bad)
aas
sub
cmps
inc
sub
mov
aaa
push
pop
retf
jecxz
(bad)
sahf
sar
ds
dec
arpl
addr16
xor
pop
inc
mov
mov
arpl
push
std
push
sahf
cmp
mov
std
leave
test
or
mov
mov
retf
ds
rcl
mov
dec
arpl
outs
push
arpl
push
enter
adc
or
push
retf
push
retf
push
push
pop
into
mov
outs
inc
arpl
dec
dec
test
pop
sar
std
ds
push
aas
mov
add
push
int3
daa
cli
stc
std
ds
cld
push
jmp
jmp
sub
mov
outs
dec
pop
and
dec
test
xchg
cmp
mov
(bad)
mov
outs
push
pop
and
addr16
and
addr16
and
addr16
adc
or
dec
cld
push
cmp
or
mov
jecxz
daa
jmp
movs
jb
inc
sub
test
mov
dec
ds
rsqrtps
mov
std
ret
mov
adc
ins
or
mov
std
sar
ja
jo
aas
(bad)
aas
aas
jecxz
aas
aas
jmp
aas
aas
repz
aas
aas
inc
je
iret
inc
je
iret
or
out
xchg
jmp
fwait
(bad)
ds
or
or
aaa
cmp
push
enter
jne
std
(bad)
mov
(bad)
mov
fs
mov
std
mov
mov
inc
mov
mov
(bad)
ds
sub
mov
in
leave
test
popa
mov
mov
(bad)
jns
pop
or
test
cmp
cmp
push
xchg
or
jb
rcl
jmp
stos
pop
or
jp
mov
arpl
push
ret
mov
ins
es
push
xchg
cmp
adc
inc
mov
cld
arpl
pop
xor
loop
dec
jg
jmp
daa
scas
and
aas
inc
repz
retf
mov
sahf
sbb
ds
pop
popf
jmp
hlt
mov
arpl
outs
add
scas
jmp
jmp
fadd
mov
xor
jmp
sub
mov
jecxz
ret
je
mov
adc
and
mov
mov
push
rol
jle
mov
call
ds
jecxz
test
xor
sar
fidivr
or
jecxz
or
mov
int3
daa
vprolvq
pop
jb
inc
add
inc
sub
imul
push
enter
or
mov
pop
popf
jmp
hlt
mov
arpl
jo
mov
add
mov
dec
enter
in
test
sar
ds
sti
mov
outs
inc
dec
aas
adc
add
push
add
and
push
or
cld
jecxz
scas
ret
dec
icebp
test
dec
push
int3
adc
add
int3
or
jecxz
add
jecxz
xchg
inc
mov
or
jecxz
popf
adc
call
addr16
hlt
std
leave
or
sub
mov
icebp
cmp
call
xor
popa
add
mov
sub
cld
aas
cmp
jecxz
retf
mov
adc
mov
add
jecxz
daa
loop
std
ds
sub
outs
cmp
(bad)
ds
dec
inc
inc
in
(bad)
aas
dec
push
daa
cmps
(bad)
cld
ds
js
mov
add
adc
ret
mov
xor
jecxz
retf
cs
mov
cmp
add
rcl
mov
aas
mov
in
lods
jecxz
ret
xor
adc
test
add
jecxz
aaa
mov
jecxz
ds
test
mov
std
es
(bad)
cmp
pop
popf
adc
dec
js
std
leave
add
sub
(bad)
outs
int3
enter
jo
jecxz
sahf
adc
call
addr16
hlt
std
leave
cli
pop
sub
mov
mov
push
mov
std
sahf
adc
call
addr16
hlt
std
leave
or
sub
test
enter
cmp
inc
xor
adc
dec
js
std
leave
add
sub
mov
test
cmp
call
xor
popa
add
mov
cmp
enter
ds
(bad)
push
test
dec
add
mov
inc
scas
cmp
add
cmp
aas
mov
and
cmps
pop
aas
aas
and
mov
mov
pop
popf
jmp
hlt
mov
pop
push
jecxz
or
inc
jbe
or
add
dec
ds
pop
push
test
dec
pop
retf
lea
jo
arpl
xor
push
test
outs
sub
or
dec
cli
pop
push
test
mov
arpl
push
(bad)
or
test
loope
mov
xchg
std
adc
cmps
mov
js
idiv
pop
or
pop
adc
test
aas
mov
adc
or
int3
fidivr
adc
mov
add
jecxz
inc
inc
mov
push
xor
std
popf
adc
call
addr16
hlt
std
leave
test
loopne
mov
pop
call
push
add
jecxz
mov
jns
test
pop
xor
or
push
xchg
mov
and
daa
dec
jo
aas
icebp
test
ret
(bad)
std
ds
and
xchg
push
hlt
in
aas
mov
std
push
loop
inc
aas
adc
inc
add
inc
xor
test
fidiv
inc
aas
push
int3
pop
retf
mov
pop
mov
add
jecxz
sbb
mov
inc
in
(bad)
aas
dec
push
daa
push
aam
ds
call
add
inc
pop
ret
mov
arpl
inc
pop
retf
test
mov
std
pushf
jmp
hlt
mov
arpl
inc
pop
jb
outs
bswap
dec
mov
ds
pop
ret
mov
arpl
inc
pop
retf
mov
ds
pop
ret
mov
arpl
jo
out
mov
std
leave
mov
out
popf
adc
call
addr16
hlt
std
leave
add
sub
(bad)
ins
xchg
repz
std
pushf
adc
dec
js
std
leave
cli
pop
sub
jbe
mov
mov
std
pushf
adc
dec
js
std
leave
or
sub
cmp
(bad)
ds
xor
adc
dec
js
std
leave
add
sub
mov
neg
cmp
push
inc
xchg
jbe
std
ds
repz
popf
jmp
hlt
mov
pop
xor
mov
mov
std
leave
test
push
repz
ds
inc
add
inc
sub
imul
retf
push
test
cmp
ds
in
xchg
lods
mov
push
pop
jecxz
js
test
ds
add
dec
(bad)
cmps
lahf
out
ds
or
mov
jmp
cli
pop
sub
add
sub
or
and
jnp
dec
test
imul
arpl
dec
(bad)
test
jo
push
sahf
shl
mov
test
cld
push
daa
jmp
daa
loop
cld
ds
outs
cmp
retf
mov
fs
push
xchg
inc
aas
cmp
aas
mov
cmp
jge
(bad)
outs
in
cmp
test
mov
(bad)
test
dec
std
nop
mov
out
mov
std
retf
sub
cmp
(bad)
ds
xor
adc
dec
js
std
leave
add
sub
(bad)
jo
or
jmp
inc
mov
pop
popf
jmp
hlt
mov
aas
pop
adc
aas
dec
adc
aas
(bad)
adc
aas
repz
aas
adc
aas
movs
adc
aas
fist
aas
aas
xor
adc
aas
ins
adc
aas
mov
aas
aas
mov
adc
aas
aas
inc
adc
aas
aas
jae
aas
aas
xchg
adc
aas
aas
rcl
aas
es
aas
aas
cmc
push
aas
aas
or
adc
aas
movs
adc
aas
lea
aas
aas
xchg
adc
aas
call
aas
into
adc
aas
jecxz
aas
aas
js
aas
aas
lea
aas
or
jb
mov
jg
aas
mov
inc
arpl
data16
push
inc
mov
cld
arpl
xchg
xor
mov
dec
arpl
outs
inc
jg
ins
push
mov
std
ds
std
leave
cli
pop
push
retf
pop
enter
ds
mov
arpl
outs
dec
xchg
std
ds
xchg
lock
leave
cld
aas
cmp
sti
mov
aas
in
test
ins
aas
inc
outs
in
ds
ror
dec
arpl
outs
inc
xchg
aas
in
test
ins
aas
inc
outs
in
ds
ror
push
arpl
outs
dec
lahf
outs
in
ds
xchg
lock
leave
cmp
(bad)
ds
mov
arpl
push
mov
(bad)
out
inc
mov
std
pushf
js
std
leave
add
push
retf
(bad)
ds
dec
cmp
(bad)
ds
aas
inc
outs
in
ds
ror
push
arpl
outs
mov
mov
std
div
ins
or
ret
mov
xrelease
outs
in
ds
or
inc
sub
dec
inc
cmp
aas
hlt
mov
mov
std
add
jecxz
xchg
(bad)
mov
mov
pop
enter
aas
inc
sub
(bad)
mov
inc
xchg
cld
jecxz
jmp
test
pushf
jge
(bad)
ds
mov
pop
or
adc
sub
xor
mov
cmp
add
mov
(bad)
ds
mov
arpl
outs
push
mov
ins
push
div
lock
leave
cmp
(bad)
ds
mov
arpl
push
mov
(bad)
mov
std
mov
jecxz
pushf
js
std
leave
add
push
retf
(bad)
ds
dec
dec
ins
(bad)
ds
dec
inc
outs
in
ds
ror
dec
arpl
outs
test
mov
std
pushf
aas
in
inc
mov
std
add
jecxz
sbb
mov
pop
in
ds
push
div
lock
leave
or
push
retf
(bad)
ds
(bad)
ds
pop
enter
aas
inc
xor
dec
inc
push
aas
mov
pop
enter
ds
mov
arpl
outs
xchg
repz
std
pushf
aas
hlt
mov
mov
std
add
jecxz
xchg
(bad)
mov
outs
in
outs
in
ds
xchg
lock
leave
add
push
retf
(bad)
ds
xchg
in
ds
or
inc
sub
dec
inc
jp
aas
mov
pop
enter
ds
mov
arpl
outs
mov
mov
std
div
ins
or
ret
mov
repz
jle
std
ds
push
mov
std
ds
std
leave
cli
pop
push
retf
(bad)
ds
xchg
in
ds
or
jmp
jecxz
xlat
pop
aas
aas
jmp
pop
aas
aas
or
sbb
aas
push
sbb
aas
xchg
sbb
aas
lods
sbb
aas
mov
sbb
aas
loop
aas
aas
and
aas
aas
xor
sbb
aas
mov
aas
aas
mov
sbb
aas
retf
sbb
aas
loopne
aas
aas
cmc
sbb
aas
or
aas
aas
pop
sbb
aas
xor
aas
aas
dec
sbb
aas
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
rcl
aas
mov
sahf
(bad)
mov
cmp
fwait
mov
std
mov
std
ds
mov
sti
(bad)
ds
in
cdq
loop
int3
add
mov
in
cdq
loop
int3
add
in
cdq
loop
loopne
out
aas
jge
pop
ds
push
sar
jecxz
test
xor
retf
dec
xchg
inc
jno
ds
lds
retf
jl
mov
cmp
addr16
test
mov
ds
mov
mov
out
gs
(bad)
jecxz
cmps
mov
jno
ds
xchg
jecxz
mov
jae
inc
movs
dec
ss
mov
ds
les
sahf
repz
mov
mov
jecxz
daa
fistp
add
inc
jno
ds
mov
sahf
lds
xchg
mov
inc
xchg
cld
jecxz
inc
or
ss
aas
inc
jno
ds
xchg
jecxz
test
out
retf
add
lds
retf
out
mov
stos
inc
cmp
retf
(bad)
jecxz
(bad)
sub
dec
add
xchg
jecxz
mov
inc
cmp
ins
jnp
sahf
cmp
cmp
mov
std
add
jae
std
ds
inc
and
std
ds
cli
ds
std
daa
dec
adc
mov
jecxz
ds
inc
rol
inc
dec
aas
imul
out
and
add
cli
inc
mov
std
es
xor
push
sti
fist
mov
in
out
std
retf
add
xchg
out
std
push
pop
inc
aas
inc
xor
enter
adc
jl
test
int3
shl
jecxz
test
xor
push
sti
fild
aas
mov
in
out
std
retf
add
inc
out
std
std
push
pop
inc
aas
inc
xor
enter
int3
cdq
loop
int3
add
mov
xchg
jecxz
test
jecxz
ds
mov
out
cdq
loop
int3
inc
inc
std
ds
inc
cmp
sahf
cs
mov
dec
xor
ins
or
mov
std
cdq
inc
leave
pop
add
jecxz
fldcw
(bad)
mov
mov
(bad)
enter
ds
push
retf
jb
mov
jecxz
add
mov
std
sub
aas
inc
xor
cli
pop
push
inc
sahf
dec
cs
mov
dec
(bad)
jl
and
stos
dec
cmps
(bad)
cld
ds
xor
add
jge
dec
mov
jecxz
sbb
loop
int3
add
ret
sbb
std
add
mov
enter
mov
(bad)
loop
ds
sbb
jecxz
mov
jmp
mov
mov
add
cmps
mov
inc
je
iret
inc
je
iret
and
xchg
fisubr
(bad)
mov
mov
(bad)
enter
ds
jmp
out
aas
or
push
push
cli
pop
or
inc
sub
(bad)
cli
pop
push
int3
add
sbb
cmp
cmps
aas
mov
std
ds
in
xchg
loop
int3
add
inc
add
mov
(bad)
es
cld
ds
xor
fwait
jl
and
mov
std
inc
sahf
pop
fidivr
(bad)
jecxz
sbb
add
ret
fisub
ds
and
std
ds
and
mov
std
leave
dec
or
ret
fimul
std
ds
or
retf
sub
xor
ficomp
inc
arpl
outs
mov
ds
dec
mov
mov
in
ds
jecxz
xchg
and
mov
fiadd
std
push
or
arpl
retf
in
mov
mov
inc
jo
(bad)
or
aas
mov
in
in
std
retf
inc
or
mov
ret
ret
fimul
in
in
std
std
push
pop
inc
aas
inc
xor
fwait
jl
and
mov
std
inc
aas
pusha
and
mov
dec
arpl
test
std
ds
retf
pop
and
ret
ret
fimul
xchg
xchg
loop
int3
add
push
push
cmp
cmps
aas
mov
cld
ds
out
in
std
leave
inc
or
add
aas
icebp
std
ds
jle
push
in
ds
std
into
inc
je
iret
inc
sub
inc
cmp
push
mul
mov
inc
sub
mov
jecxz
inc
mov
pop
push
test
call
jb
outs
in
xor
add
jbe
jecxz
inc
mov
mov
ja
jg
out
aas
aas
inc
movs
rol
mov
inc
je
iret
and
mov
(bad)
mov
mov
(bad)
enter
ds
and
push
add
cmp
inc
jbe
inc
arpl
jecxz
ds
adc
jle
xor
mov
mov
ret
jecxz
ds
ret
outs
dec
arpl
icebp
std
ds
add
cmps
mov
inc
je
iret
outs
movs
mov
inc
je
iret
inc
je
iret
and
adc
sub
mov
mov
(bad)
enter
ds
jmp
ins
jb
ret
cmp
std
enter
enter
push
mov
test
(bad)
jecxz
cmp
and
retf
lock
jecxz
mov
test
in
xchg
loop
int3
add
sbb
add
mov
cld
ds
icebp
dec
inc
(bad)
jecxz
mov
outs
adc
dec
je
ds
add
sub
retf
inc
aam
ds
inc
arpl
out
jl
in
retf
inc
movs
(bad)
ds
inc
arpl
call
std
retf
adc
je
(bad)
ds
test
mov
std
jp
sub
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
(bad)
je
(bad)
ds
mov
add
mov
les
ret
jecxz
ds
ret
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
pushf
daa
inc
mov
ret
stos
pop
add
jecxz
fld
(bad)
mov
mov
(bad)
enter
ds
jmp
fld
inc
(bad)
jbe
aas
inc
fwait
jmp
cmp
mov
add
mov
cmp
sub
xor
sbb
jp
ins
pop
inc
aas
inc
push
enter
inc
push
jecxz
enter
test
push
shl
out
sar
popf
(bad)
cmp
jne
out
sar
daa
retfw
std
ds
imul
mov
xor
adc
imul
sub
dec
mov
adc
or
push
mov
mov
mov
inc
arpl
call
std
retf
inc
movs
(bad)
ds
inc
arpl
in
inc
push
pop
inc
aas
sahf
neg
cmp
mov
std
add
pop
push
inc
sahf
aaa
mov
jnp
pop
and
jb
aas
mov
ret
sbb
or
add
xor
cli
pop
push
dec
sahf
sub
jo
(bad)
jl
and
stos
dec
add
ds
xor
add
jge
dec
mov
jecxz
clc
xchg
loop
int3
add
ret
sbb
add
mov
jae
mov
movs
sbb
jecxz
lea
retf
sti
imul
jecxz
ds
cmp
mov
dec
arpl
inc
pop
pushf
adc
dec
mov
std
cmp
mov
inc
je
iret
outs
mov
mov
inc
je
iret
inc
je
iret
inc
sub
dec
inc
cmp
inc
push
outs
inc
arpl
lahf
lds
retw
lock
into
inc
je
iret
inc
sub
dec
or
out
(bad)
sahf
pop
enter
ret
movs
jae
inc
mov
or
out
pushf
js
std
into
cmp
or
cli
pop
adc
or
mov
or
call
or
cli
pop
sbb
js
std
leave
cli
pop
push
les
add
cli
pop
or
mov
xor
dec
sahf
inc
mov
ja
xor
int3
cli
pop
push
shl
push
aas
mov
xchg
xchg
cmp
movs
xchg
inc
mov
nop
stc
out
popf
adc
ret
lock
into
inc
je
iret
inc
sub
inc
or
mov
ret
(bad)
ds
jb
or
retf
mov
cmps
cmp
std
ds
mov
(bad)
push
in
ds
outs
int3
daa
ret
aas
adc
add
inc
je
iret
cmp
sub
or
cs
inc
aad
sbb
fidivr
mov
mov
xchg
in
ds
sub
inc
aas
xor
inc
shl
and
sub
addr16
sub
imul
inc
arpl
dec
(bad)
inc
mov
xchg
jbe
std
retf
mov
mov
adc
inc
mov
mov
inc
je
iret
inc
je
iret
or
out
retf
(bad)
ds
mov
repz
std
ds
std
es
out
std
ds
jmp
js
std
into
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
sub
std
ds
mov
mov
std
sub
and
inc
mov
jb
outs
out
ds
(bad)
mov
jmp
inc
idiv
jne
aas
mov
mov
xchg
in
ds
xor
inc
aas
cmp
aas
jmp
jecxz
xchg
push
mov
inc
arpl
in
std
ds
dec
arpl
ins
dec
arpl
stos
inc
arpl
in
ds
inc
arpl
retf
fdivr
mov
add
inc
je
iret
cmp
push
xchg
inc
aad
clc
int3
jecxz
ds
jmp
jmp
push
xchg
mov
std
(bad)
cli
pop
or
cli
pop
les
inc
arpl
inc
(bad)
ds
push
test
fidiv
dec
daa
inc
and
aas
cmp
(bad)
ds
jp
sbb
mov
push
push
arpl
dec
sbb
add
mov
dec
enter
push
cli
pop
sbb
mov
adc
or
dec
inc
nop
(bad)
ds
std
push
push
cmp
mov
pop
popf
cmp
cmp
add
les
mov
dec
test
fisubr
jle
mov
adc
or
inc
je
(bad)
ds
pop
ret
rol
mov
and
data16
fld
(bad)
mov
mov
(bad)
enter
ds
jmp
mov
fnsave
std
sub
call
or
dec
inc
mov
cmp
call
or
mov
std
sar
retf
push
int3
add
es
pop
ss
push
cmps
cmp
pusha
and
xor
imul
ja
sub
outs
jo
mov
push
ins
pop
arpl
ins
push
arpl
outs
test
mov
std
(bad)
adc
push
retf
or
ds
or
lds
aas
mov
cmp
mov
cmp
xor
fs
les
idiv
mov
or
mov
jecxz
xor
pop
loope
cli
pop
push
int3
add
cmp
mov
dec
arpl
test
dec
ds
jnp
test
sub
jno
dec
mov
mov
push
xchg
mov
dec
jb
dec
mov
jecxz
aas
mov
dec
mov
arpl
xor
add
inc
daa
add
stos
add
sub
xor
push
jecxz
aas
mov
mov
mov
call
add
mov
(bad)
ds
jno
arpl
retf
addr16
jecxz
add
mov
jae
inc
xor
jg
jecxz
fild
sub
leave
or
ds
mov
popf
(bad)
cld
jecxz
int3
add
push
daa
fs
aas
inc
xor
jnp
sub
xchg
mov
push
mov
repz
mov
std
(bad)
adc
push
enter
retf
dec
test
stos
inc
arpl
in
adc
into
retf
jb
mov
addr16
mov
stos
xchg
ret
add
ja
add
scas
out
sub
fist
pop
xor
adc
(bad)
retf
inc
sar
add
xchg
(bad)
mov
shl
cmc
sbb
lods
dec
bound
retf
dec
test
sub
arpl
test
in
dec
call
push
add
mov
dec
fs
movs
out
mov
dec
fs
in
adc
add
psllw
nop
or
push
xchg
mov
movs
(bad)
cld
jecxz
dec
or
push
xchg
mov
mov
int3
add
push
daa
ins
jne
aas
inc
push
and
xor
int3
cli
pop
adc
jbe
ret
pop
jecxz
xchg
or
(bad)
mov
mov
int3
daa
fwait
jne
aas
inc
xor
push
sahf
xchg
pop
xor
inc
mov
inc
arpl
sub
arpl
stos
inc
arpl
call
mov
mov
xor
adc
(bad)
enter
ds
ret
je
iret
inc
je
iret
outs
in
ds
add
inc
je
iret
inc
je
iret
pop
aaa
mov
or
sar
mov
lds
or
inc
aas
aas
lahf
fiadd
jecxz
xchg
push
int
aas
mov
in
mov
mov
xchg
in
ds
xor
inc
or
int3
push
stos
mov
xor
inc
adc
xchg
cld
jecxz
retf
dec
std
jo
push
sahf
pop
gs
out
les
push
int3
add
clc
in
and
std
les
rol
jl
push
daa
push
ret
cld
ds
ret
cld
ds
pop
cs
cmp
mov
adc
jmp
adc
mov
xchg
in
ds
dec
cmps
xchg
std
ds
aas
mov
inc
jmp
in
pop
jecxz
les
cmpps
add
and
cld
push
(bad)
aaa
inc
aas
inc
scas
out
in
out
ret
xchg
pop
pop
retf
dec
and
push
add
mov
and
inc
fsubr
(bad)
mov
mov
(bad)
enter
ds
jmp
mov
and
mov
std
(bad)
adc
sub
nop
jb
aas
inc
sub
xchg
jmp
or
repz
(bad)
ds
outs
leave
mov
aaa
dec
ds
mov
test
mov
fisub
ds
and
std
ds
std
ds
out
mov
inc
pop
retf
into
aas
mov
popa
enter
ds
ret
jecxz
add
stos
inc
arpl
pop
mov
arpl
outs
inc
arpl
outs
dec
arpl
mov
or
std
ds
adc
push
sub
mov
and
ins
lea
outs
inc
fwait
icebp
test
std
ds
xchg
jmp
lods
cmp
mov
xor
daa
scas
jl
ds
addr16
in
ds
pop
and
test
xchg
fisub
xchg
ficomp
or
ds
xor
outs
inc
js
(bad)
mov
std
pop
ss
dec
in
shr
std
ds
das
sbb
cli
pop
xchg
push
xor
inc
aas
inc
sub
mov
cmp
scas
inc
xor
mov
pusha
and
push
bswap
jb
addr16
inc
aas
xor
pop
aas
sub
dec
lds
inc
mov
cld
arpl
dec
xor
addr16
push
int3
or
inc
xchg
or
mov
mov
xchg
fiadd
cmp
cld
jecxz
sbb
mov
or
(bad)
(bad)
ds
cld
push
call
arpl
retf
xchg
int
jecxz
mov
fiadd
mov
(bad)
hlt
pop
shl
cmc
sbb
lods
dec
bound
retf
dec
test
sub
arpl
test
std
ds
jecxz
ret
fcmove
(bad)
ds
out
mov
repz
jecxz
leave
sar
test
sub
leave
or
cmp
imul
ds
inc
arpl
jo
jns
test
mov
in
ds
cmp
fwait
inc
sub
mov
fidiv
dec
mov
arpl
outs
push
arpl
outs
dec
arpl
ins
inc
arpl
ins
push
arpl
outs
push
arpl
jo
arpl
ins
dec
arpl
xor
xchg
fidivr
std
push
xchg
cmp
movs
jae
push
add
or
cmp
nop
sahf
arpl
arpl
outs
inc
arpl
out
jp
pusha
test
jle
inc
arpl
out
arpl
push
out
dec
inc
dec
std
ds
pop
arpl
push
hlt
sub
in
ds
addr16
ins
push
(bad)
outs
dec
inc
icebp
int3
xchg
xor
push
and
test
or
xadd
mov
adc
push
into
mov
loope
mov
aas
cmp
dec
xchg
cmp
xor
repz
xchg
sub
pop
xchg
sub
pop
mov
fld
fisubr
fld
xchg
inc
and
mov
fstp
lods
test
mov
rcl
cli
pop
push
sbb
(bad)
daa
cli
or
aas
xchg
sub
mov
sbb
inc
mov
(bad)
retf
sbb
jge
pop
loope
iret
aaa
mov
repz
dec
xadd
scas
out
cmps
(bad)
jecxz
aas
or
push
int3
cli
pop
inc
xchg
push
int3
mov
mov
les
mov
les
cld
jecxz
sbb
or
(bad)
(bad)
ds
cld
push
call
arpl
retf
xchg
retf
mov
pop
mov
(bad)
mov
shl
cmc
sbb
lods
dec
bound
retf
dec
test
sub
arpl
test
std
ds
jecxz
ficom
(bad)
(bad)
ds
xor
mov
dec
fisub
push
nop
sahf
fist
arpl
retf
or
ficom
push
daa
(bad)
jg
adc
arpl
push
jb
retf
retf
dec
daa
push
sar
cmp
sbb
mov
les
inc
pusha
and
js
retf
mov
std
retf
cli
pop
push
xchg
lods
mov
dec
xchg
mov
fisttp
(bad)
inc
repnz
jecxz
mov
inc
ret
fcmovb
(bad)
ds
in
inc
call
push
xchg
dec
add
push
add
mov
add
mov
add
inc
jo
(bad)
mov
std
add
mov
cld
ds
out
inc
call
fidivr
mov
pop
popf
adc
dec
mov
std
ds
test
aas
mov
ror
sub
aas
jmp
sub
aas
call
je
iret
inc
je
iret
inc
je
iret
cmp
sub
or
les
div
addr16
in
std
movs
aaa
loop
(bad)
lds
aas
mov
push
jb
aaa
push
cmps
lahf
out
ds
(bad)
sbb
or
xchg
pop
mov
sahf
inc
fs
test
mov
fisub
jg
mov
(bad)
ds
addr16
lea
jecxz
jp
popa
aas
retf
ds
cmp
jne
(bad)
ds
rcl
sub
ds
xor
dec
or
std
(bad)
xor
push
enter
enter
enter
enter
enter
daa
xor
mov
mov
std
pushf
cmp
mov
or
jecxz
add
inc
pop
ret
rol
mov
inc
je
iret
inc
sub
dec
inc
cmp
dec
push
outs
inc
arpl
xor
dec
xchg
sahf
fsub
mov
push
aas
inc
je
iret
inc
and
xchg
inc
mov
or
inc
je
iret
cmp
sub
out
sbb
aas
cmp
add
cmps
mov
xchg
in
ds
jb
aas
mov
push
retf
mov
or
mov
xchg
(bad)
les
mov
les
mov
les
mov
les
mov
in
push
std
xchg
inc
mov
inc
aas
cmp
mov
outs
mov
mov
std
div
stos
jb
out
imul
push
inc
sub
imul
jb
inc
sub
outs
cmp
call
(bad)
ds
pop
ret
ror
je
iret
or
ret
(bad)
ds
jb
inc
imul
les
jae
jmp
cdq
mov
mov
xchg
std
ds
ret
icebp
(bad)
jno
or
stc
int
cld
jecxz
jmp
out
mov
retf
xchg
push
test
(bad)
jo
adc
imul
adc
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sub
inc
cmp
dec
and
mov
xchg
in
ds
jb
aas
mov
mov
mov
pop
push
enter
push
cli
pop
push
inc
mov
std
add
mov
std
add
mov
std
add
mov
std
es
std
ds
mov
test
push
test
mov
std
ret
jbe
pop
retf
(bad)
ds
mov
arpl
in
inc
inc
sub
jae
movs
jb
inc
mov
inc
mov
std
retf
nop
je
jecxz
popf
adc
imul
iret
inc
je
iret
cmp
cs
or
push
retf
pop
jl
jecxz
(bad)
mov
std
ds
pop
push
xchg
push
int
aas
mov
cmp
mov
mov
xchg
in
ds
xor
dec
or
movs
mov
mov
push
jb
outs
inc
arpl
cmp
(bad)
mul
rcl
std
retf
repz
outs
or
pop
dec
call
cmp
jecxz
jp
pop
sub
div
std
ds
stos
push
xchg
sahf
fwait
aam
mov
in
xchg
sahf
xchg
aam
mov
or
rol
fwait
sahf
ret
fidivr
mov
jmp
aas
mov
mov
xchg
in
ds
pop
sbb
add
adc
jecxz
xchg
fiadd
xchg
fimul
add
mov
xchg
fisub
xchg
push
stc
int
cld
jecxz
jmp
sub
(bad)
call
retf
push
test
retf
push
push
test
jecxz
leave
std
dec
retf
sbb
mov
dec
pop
or
cmp
sub
push
ds
retf
push
test
int3
ins
xor
aas
add
inc
je
iret
pop
cmp
cmps
jecxz
inc
or
dec
mov
test
repz
std
dec
ds
(bad)
push
test
jge
ds
(bad)
test
dec
out
mov
in
jcxz
retf
(bad)
ds
push
arpl
outs
(bad)
daa
adc
ds
push
inc
xor
inc
push
ss
and
std
ret
jb
and
dec
retf
push
int3
(bad)
mul
je
jecxz
retf
dec
les
sub
xchg
std
cmp
out
mov
std
inc
cmps
cmp
mov
cmps
addr16
jecxz
jne
add
xor
mov
sub
jbe
adc
or
push
xchg
or
into
ret
jb
adc
jecxz
jb
inc
push
add
je
iret
inc
je
iret
inc
je
iret
or
mov
inc
aas
or
mov
cmp
or
ds
sub
retf
dec
nop
mov
loope
cld
jecxz
inc
lods
aas
mov
addr16
and
sub
xchg
std
ds
outs
fidivr
mov
mov
or
pop
ds
mov
ds
push
pop
inc
xor
push
and
dec
daa
scas
dec
std
ds
std
mov
dec
dec
inc
sub
daa
or
ds
aam
aas
inc
repnz
cmps
mov
cmps
scas
ds
mov
push
aaa
(bad)
ds
(bad)
jecxz
cmp
jecxz
aas
sub
add
cmps
cmp
lods
mov
std
inc
cmps
addr16
sbb
test
dec
(bad)
test
dec
repz
mov
ds
pop
pushf
adc
pop
jb
aas
rol
mov
inc
je
iret
inc
je
iret
cmp
push
xchg
inc
aad
push
mov
int3
or
jecxz
retf
hlt
cmp
lds
inc
mov
mov
cmp
inc
or
cld
jecxz
ds
push
(bad)
ds
inc
arpl
xor
dec
dec
cmp
ds
sub
push
sbb
mov
ds
dec
arpl
push
(bad)
ds
std
ds
push
xchg
or
les
mov
xor
arpl
and
test
rcl
not
shl
inc
aas
jmp
movs
jl
inc
cmp
imul
jg
mov
repnz
add
data16
xor
push
inc
mov
(bad)
xor
inc
cmc
and
pop
shl
dec
mov
mov
movs
add
cmps
pusha
fldcw
mov
jecxz
daa
ja
add
inc
sub
push
cmp
pop
call
mov
xor
xchg
(bad)
outs
inc
arpl
ss
div
addr16
call
add
mov
push
mov
add
cmp
xor
jecxz
ret
inc
in
ds
sub
xchg
push
jecxz
and
sub
ret
jbe
jnp
mov
(bad)
cmps
lahf
out
ds
out
ds
xchg
sbb
or
test
jle
ins
sahf
mov
cmp
cmp
aas
or
jecxz
aaa
mov
inc
test
inc
sub
push
inc
sub
daa
(bad)
cmp
dec
cmps
mov
lahf
lods
ds
mov
push
lods
test
push
arpl
dec
(bad)
test
xor
sbb
mov
pop
div
cmps
push
aas
adc
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
and
data16
(bad)
mov
mov
(bad)
enter
ds
jmp
cmp
ds
out
les
repnz
call
stc
loope
cld
jecxz
inc
addr16
mov
addr16
and
sub
xchg
std
ds
jp
aas
mov
mov
pop
mov
sahf
jnp
ds
mov
aas
mov
dec
arpl
dec
call
mov
out
mov
xchg
and
std
ds
sub
dec
and
addr16
or
push
sahf
inc
push
ds
push
nop
push
into
add
mov
aam
mov
mov
cmp
or
or
push
aaa
(bad)
(bad)
sahf
mov
push
ss
(bad)
fdiv
xchg
ins
pop
arpl
loop
add
sub
leave
or
push
jb
cmp
add
xchg
pavgw
retf
repz
push
add
xor
sbb
fisubr
arpl
xor
add
jecxz
dec
inc
pop
push
inc
or
inc
adc
add
ins
inc
arpl
jo
arpl
retf
loopne
mov
mov
(bad)
sub
cs
add
push
enter
aas
mov
in
jl
std
enter
int3
add
inc
add
mov
(bad)
es
cld
ds
pop
and
jl
and
mov
std
inc
inc
push
push
(bad)
icebp
fiadd
int
in
ds
cmp
dec
and
push
int3
add
in
push
jecxz
retf
inc
arpl
cmp
sahf
mov
xor
aas
pop
and
outs
(bad)
ds
dec
aas
and
dec
cmps
mov
mov
jae
inc
mov
cld
ds
mov
ds
cmp
push
cmp
dec
push
or
daa
mul
mov
sub
inc
cmp
push
arpl
repnz
sbb
dec
ds
mov
test
out
(bad)
ds
dec
pop
pop
jecxz
jmp
sub
shr
std
ds
mov
push
psubsb
shr
std
ds
aas
adc
jns
jge
mov
sbb
jecxz
xor
pop
adc
addr16
aas
mov
mov
ficom
mov
inc
lds
aas
mov
mov
jp
inc
aas
icebp
daa
and
push
mov
ficom
mov
pop
pop
xor
push
call
ret
ds
ds
cmp
dec
or
push
sahf
pop
sar
in
add
mov
pop
ja
outs
inc
arpl
movs
out
cmp
mov
cmp
sub
stos
outs
dec
arpl
and
inc
inc
and
mov
jno
arpl
int3
movs
or
addr16
push
cmp
mov
add
rol
or
test
add
cmp
adc
push
daa
xor
and
inc
and
ins
inc
arpl
outs
out
les
std
retf
and
cli
pop
push
retf
in
inc
cmp
or
ds
push
imul
arpl
outs
mov
in
lods
mov
cmp
sub
xor
(bad)
in
ds
cmp
pop
inc
in
cmp
lds
aas
mov
inc
ret
cmp
xor
out
mov
std
retf
sub
outs
and
jecxz
inc
outs
dec
arpl
outs
push
jp
pusha
pop
lea
int3
add
lods
popa
in
sub
xor
mov
fcmovnbe
pop
jbe
and
inc
mov
cld
ds
aam
add
data16
ds
push
xchg
or
lock
mov
mov
cmp
or
cmp
std
aas
sub
imul
test
fidiv
jmp
pop
add
sub
repz
or
pop
retf
cmps
aas
mov
mov
outs
pop
pop
icebp
mov
std
cmp
std
aas
sub
retf
cmps
push
test
xor
pop
sbb
std
retf
addr16
and
xor
stc
fst
jns
clc
xchg
in
ds
call
push
(bad)
cmp
std
ds
sub
scas
jmp
dec
dec
xchg
push
mov
jp
cs
and
std
ds
push
std
(bad)
cmp
call
cmp
mov
loopne
mov
push
ds
mov
test
outs
retf
daa
cmp
aas
je
jae
mov
dec
arpl
test
std
ds
jb
cli
retf
xor
mov
mov
fiadd
xchg
jnp
std
int3
add
cs
cmp
sahf
aas
mov
cld
ds
xchg
jnp
std
call
std
popf
adc
(bad)
enter
ds
ret
jecxz
add
jecxz
sti
fimul
or
(bad)
loop
ds
jecxz
iret
inc
je
iret
inc
je
iret
cmp
ds
or
mov
sahf
dec
sub
outs
test
mov
std
leave
inc
(bad)
(bad)
ds
jl
jmp
add
push
mov
inc
arpl
ins
dec
arpl
stos
inc
arpl
fdivr
ds
pop
arpl
ins
pop
arpl
ins
pop
arpl
int3
add
mov
push
retf
push
test
repz
cmp
(bad)
ds
shl
movs
jb
inc
push
inc
mov
mov
retf
(bad)
push
test
outs
xchg
fbstp
stc
inc
xchg
cld
jecxz
fst
std
ds
and
inc
mov
push
cmps
lahf
out
ds
sbb
pop
jecxz
retf
(bad)
ds
dec
arpl
ss
xchg
inc
lods
out
pavgw
les
or
adc
push
push
cli
pop
adc
mov
jge
cs
dec
jp
ins
jp
ret
imul
and
cmp
xchg
mov
mov
cmps
jno
push
sahf
mov
mov
test
dec
enter
sub
jmp
mov
sub
mov
mov
stos
cmp
sub
loop
inc
cmps
cmp
and
loop
inc
cmps
outs
sti
xchg
inc
sbb
sbb
cmp
adc
jmp
int3
cli
jmp
cli
imul
xor
add
mov
inc
ja
retw
mov
jb
cmp
jb
inc
xor
nop
mov
int
cld
jecxz
jmp
dec
mov
bound
inc
aas
cmp
push
push
cmp
aas
cmp
push
mov
(bad)
sub
hlt
sbb
add
and
out
and
sbb
cli
or
retf
add
cli
imul
xor
add
mov
inc
ja
outs
dec
arpl
retw
movs
jnp
aas
pop
and
sub
push
inc
sub
dec
(bad)
push
fxch
cli
pop
push
retf
stc
dec
inc
(bad)
cld
ds
dec
arpl
inc
cmp
sub
in
or
std
popf
adc
add
cmp
sub
(bad)
std
leave
cmp
(bad)
ds
mov
mov
std
(bad)
cli
pop
add
jno
arpl
jmp
ds
xor
push
jge
and
jecxz
ds
sub
pop
aas
sub
jae
sub
ja
iret
movs
ds
add
inc
je
iret
cmp
bound
scas
int3
hlt
addr16
sub
cld
mov
std
ds
test
std
ds
sub
mov
inc
sbb
pop
ret
dec
cmp
ds
lods
adc
clc
(bad)
ds
lods
pop
mov
std
dec
cmp
(bad)
ds
std
push
jp
inc
aas
push
int3
inc
push
lds
aas
mov
neg
push
mov
sahf
or
mov
mov
ds
sub
mov
mov
ds
push
cmps
lahf
out
ds
xor
retf
sub
outs
mov
dec
inc
xor
push
pop
outs
dec
arpl
xor
lods
or
std
les
adc
or
push
xchg
or
push
sahf
jnp
ds
out
ret
push
daa
xchg
lods
cld
ds
lods
cld
ds
outs
xor
stos
pop
mov
cld
dec
retf
mov
test
outs
inc
pop
icebp
cmps
jb
cmp
(bad)
mov
xor
push
jp
inc
aas
push
int3
mov
jecxz
jmp
mov
std
push
bound
inc
aas
cmp
ds
mov
test
call
and
retf
cmps
push
test
out
popf
adc
pop
ret
ror
xor
or
(bad)
xchg
mov
cmp
addr16
aas
mov
mov
scas
cmp
jecxz
les
sub
and
jbe
or
std
mov
outs
lea
mov
std
leave
dec
(bad)
(bad)
ds
inc
arpl
cmp
mov
std
ds
out
mov
(bad)
ds
xchg
fimul
lds
mov
xchg
fisubr
xchg
pop
jecxz
xchg
mov
cmp
mov
mov
mov
xchg
in
ds
jnp
aas
mov
xchg
shl
push
ret
dec
cmps
mov
std
ds
cmp
xchg
aas
sub
fwait
aas
push
and
aas
push
and
jmp
(bad)
ds
in
pop
jecxz
xchg
aas
adc
inc
jmp
cld
adc
out
xchg
sar
mov
jb
out
dec
and
mov
aam
xor
add
ds
mov
test
outs
push
pop
or
std
push
call
inc
aas
fwait
sahf
inc
mov
pop
popf
adc
add
inc
je
iret
cmp
cs
xor
mov
cmp
sbb
xor
dec
ds
out
jp
repz
int3
ss
cmps
mov
sbb
jp
repz
sti
div
add
jecxz
sar
sahf
stos
cld
ds
stos
cld
ds
outs
xor
test
dec
retf
mov
test
outs
int3
daa
pop
xor
aas
cmp
xchg
loop
shl
movs
jb
inc
xor
dec
inc
cmp
xchg
outs
scas
sbb
int3
xchg
mov
sti
mov
push
mov
jb
(bad)
ins
pop
arpl
ins
pop
arpl
ins
pop
arpl
ins
pop
arpl
retf
pushf
loop
jecxz
popf
adc
ret
rol
pop
pushf
jmp
adc
inc
mov
mov
sbb
addr16
inc
and
mov
(bad)
enter
ds
jmp
mov
std
leave
lahf
outs
inc
inc
repz
ds
push
jl
in
ds
jecxz
dec
or
inc
jbe
sbb
jecxz
mov
and
inc
inc
repz
daa
test
add
or
adc
aas
cmp
push
mov
mov
mov
outs
push
jmp
ds
and
cmp
(bad)
ds
mov
pop
or
not
mov
mov
ds
out
shl
leave
inc
mov
inc
pop
cmp
or
ds
repz
sub
dec
(bad)
mov
loope
cld
jecxz
inc
ror
addr16
and
sub
xchg
ds
xrelease
inc
sub
enter
jp
pop
pusha
retf
(bad)
ds
mov
sub
jo
arpl
outs
rcl
xchg
push
ds
mov
arpl
dec
(bad)
test
jo
push
sahf
mov
out
ret
push
daa
(bad)
test
push
daa
into
test
add
lods
pop
add
sub
cmp
xchg
xor
lahf
aaa
or
mov
mov
mov
std
retf
cli
pop
push
test
test
cwde
xchg
mov
xor
mov
std
jno
iret
add
aas
mov
mov
and
dec
int3
add
inc
daa
sub
std
ds
aam
xor
(bad)
mov
retf
xchg
mov
xor
int3
dec
(bad)
nop
push
into
add
mov
enter
cmp
movs
hlt
jg
add
and
cld
(bad)
loop
test
pop
cmps
ret
push
daa
xor
push
daa
sub
mov
fidivr
ds
ret
sbb
mov
cmp
gs
mov
std
daa
pop
out
std
ds
sub
retf
push
jl
in
ds
cmp
jecxz
mov
and
inc
mov
outs
sahf
repz
(bad)
ds
push
ds
jmp
test
out
mov
out
movs
jecxz
les
ds
push
arpl
xor
dec
xor
mov
inc
in
cld
nop
retf
mov
outs
inc
arpl
xor
div
sbb
aas
mov
inc
arpl
xor
retf
(bad)
ds
leave
ds
dec
cmp
mov
jge
mov
std
lds
aas
mov
mov
dec
(bad)
mov
dec
add
push
jecxz
or
sub
jno
int
dec
mov
mov
xchg
in
ds
cmp
push
or
or
mov
test
mov
in
retf
push
daa
push
std
ds
cmps
jb
inc
cmp
dec
and
addr16
push
jno
push
sahf
repz
ds
dec
mov
sbb
jecxz
jmp
or
jg
jecxz
ds
add
and
gs
jecxz
(bad)
mov
leave
xchg
cld
jecxz
inc
mov
std
daa
xor
std
ds
jecxz
add
add
mov
aaa
(bad)
mov
cmp
repnz
jecxz
shr
std
ds
pop
dec
cmp
dec
sub
cmp
repnz
std
mov
out
mov
repz
std
shl
ds
or
mov
std
ds
cmp
test
(bad)
xor
inc
aas
outs
in
ds
add
jecxz
retf
movs
sub
jecxz
inc
push
xchg
cmp
pop
push
jecxz
and
sub
ret
jbe
inc
retf
(bad)
ds
dec
arpl
dec
dec
(bad)
xor
ds
push
add
push
test
push
jecxz
jp
pop
adc
pop
outs
retf
daa
ret
ds
push
mov
cmp
in
ds
sbb
int
(bad)
test
dec
call
cmps
jecxz
div
push
push
aas
mov
inc
arpl
push
mov
mov
std
retf
cli
pop
push
test
test
mov
mov
xor
or
push
std
mov
std
ds
ds
jp
bound
retf
push
xchg
push
outs
retf
daa
push
fdivrp
ds
dec
ins
add
mov
cmp
xor
mov
fidiv
ds
inc
inc
repz
ds
xor
std
sub
cmp
jecxz
mov
and
inc
mov
jno
repz
ds
pop
jl
in
ds
cmp
jecxz
mov
and
inc
mov
or
xchg
std
ds
jno
aas
mov
xor
inc
sub
dec
or
retf
sub
fidiv
std
ds
std
ds
les
pop
retf
cmp
lds
inc
mov
xor
lahf
push
add
mov
mov
das
jmp
pop
std
ds
or
pop
out
movs
jecxz
div
arpl
data16
or
mov
fwait
(bad)
ds
mov
mov
out
in
ds
test
xor
nop
mov
push
or
ds
fld
jg
jecxz
ret
sti
out
ds
mov
and
fdivrp
mov
mov
(bad)
mov
ret
sbb
dec
(bad)
addr16
outs
xor
cmp
popa
sbb
mov
or
ds
pop
dec
inc
(bad)
cld
ds
leave
mov
fiadd
dec
retf
cwde
sub
repnz
mov
inc
arpl
dec
dec
loop
sub
lds
cmp
mov
pop
sbb
cmp
mov
mov
(bad)
ds
xchg
(bad)
addr16
xor
pop
jl
and
mov
std
inc
sahf
jmp
mov
shl
enter
ret
jbe
pop
test
ror
out
mov
pop
mov
cwde
in
add
jmp
in
retf
push
add
daa
push
std
ds
aam
xor
mov
mov
mov
mov
mov
xor
mov
into
add
mov
add
mov
add
mov
in
xchg
sahf
cmps
mov
ret
cmp
sbb
cmp
jb
inc
xor
nop
mov
int
cld
jecxz
jmp
je
xchg
shl
inc
aas
cmp
push
cs
dec
push
std
ds
inc
push
lods
test
dec
cmp
ds
ret
addr16
ds
mov
push
int3
sbb
jecxz
mov
dec
add
push
daa
fld
add
cmp
std
mov
ins
inc
arpl
addr16
ds
push
arpl
jo
arpl
xor
std
shr
std
ds
arpl
enter
ss
sbb
mov
adc
jge
or
retf
mov
inc
aas
jmp
aam
ds
std
push
cmp
call
shl
data16
mov
sbb
mov
dec
ds
iret
xor
jge
add
mov
sub
cld
dec
retf
cmps
push
test
xor
add
std
retf
xor
or
cmps
cmps
in
ds
jecxz
sbb
sub
sub
or
daa
hlt
out
aas
inc
xor
push
sahf
sbb
inc
mov
dec
arpl
retf
sub
jecxz
xchg
fiadd
mov
xchg
in
add
mov
mov
mov
push
mov
jb
sbb
arpl
ins
pop
arpl
ins
pop
arpl
ins
call
and
mov
std
es
mov
add
ds
mov
mov
call
sar
push
retf
shr
mov
mov
fisubr
ds
in
mov
or
add
mov
(bad)
es
out
aas
inc
xor
pop
jge
and
mov
std
cmp
mov
add
outs
in
ds
xor
mov
mov
fiadd
(bad)
(bad)
ds
in
mov
or
add
mov
(bad)
es
add
inc
xor
pop
jge
and
mov
std
cmp
jno
add
lahf
mov
ds
mov
jg
ds
mov
ds
dec
pop
dec
retf
xor
mov
mov
mov
std
daa
xchg
std
ds
outs
retf
daa
sub
std
cmp
ds
imul
jns
repz
jecxz
int3
inc
xchg
(bad)
ds
mov
mov
std
leave
or
adc
cmp
mov
mov
std
ds
mov
in
(bad)
test
dec
rol
jecxz
xchg
push
jecxz
les
sbb
sahf
dec
add
jo
arpl
dec
pop
fdivr
jecxz
daa
scas
cmc
std
cmp
adc
(bad)
fild
daa
jmp
jp
pop
inc
retf
(bad)
ds
mov
mov
std
ret
jbe
or
add
adc
or
dec
test
shr
push
outs
inc
arpl
cmp
mov
ins
xchg
cld
jecxz
mov
test
inc
mov
fild
aas
mov
dec
arpl
ins
call
mov
inc
mov
lds
mov
mov
sub
mov
mov
daa
es
ds
dec
nop
clc
ds
les
jecxz
inc
mov
std
mov
and
inc
mov
or
dec
fdivrp
ds
int3
std
ds
dec
push
(bad)
ds
out
mov
or
xchg
push
int3
js
mov
xor
mov
or
pop
adc
fisubr
std
ds
jno
aas
mov
xchg
mov
and
inc
mov
mov
mov
std
enter
enter
enter
dec
cmp
repnz
loop
ds
add
or
aas
mov
and
inc
dec
aas
aas
outs
fdivrp
ds
out
or
retf
mov
(bad)
test
rcr
add
mov
jge
aad
dec
arpl
fld
pop
aas
cmp
jnp
inc
and
call
hlt
add
push
add
or
xor
inc
sub
jg
out
sbb
mov
push
mov
test
mov
cmp
addr16
mov
ss
xor
ds
aas
and
mov
mov
mov
dec
inc
inc
cmp
imul
popw
mov
pop
ds
jecxz
enter
enter
daa
sbb
cmp
ds
push
and
mov
mov
sub
mov
mov
inc
inc
lahf
xor
ds
cld
cmp
jecxz
aaa
mov
jecxz
cmp
mul
mov
mov
std
xor
aas
retf
push
test
pop
mov
(bad)
dec
mov
repnz
ds
out
aas
sub
jg
xor
cmp
and
jbe
or
cli
pop
inc
dec
mov
inc
arpl
dec
push
mov
push
out
mov
aas
sub
and
cld
adc
shr
cli
out
add
cli
pop
inc
int3
or
sub
mov
in
dec
jecxz
les
xor
add
dec
div
stos
or
ds
aas
and
mov
out
mov
std
leave
std
jmp
je
aaa
inc
aas
ja
push
dec
jne
mov
ds
xchg
mov
int
adc
cmc
mov
push
cli
pop
xor
add
adc
push
and
cmp
jg
inc
and
jbe
or
cli
pop
ds
mov
inc
arpl
dec
push
mov
push
call
push
les
or
cli
pop
ds
mov
jo
arpl
ss
cmps
mov
std
ds
out
ds
mov
arpl
pushf
(bad)
ds
cmp
sub
fidiv
jb
inc
sub
addr16
jecxz
ud2
sub
xor
inc
jo
ret
mov
std
popf
adc
pop
mov
mov
jle
ss
ds
std
into
cli
dec
aas
aas
dec
aas
jg
aas
aas
sbb
aas
cli
dec
aas
aas
dec
aas
loopne
aas
aas
in
aas
aas
out
aas
aas
out
aas
aas
call
dec
aas
aas
sbb
aas
sbb
aas
sbb
aas
test
aas
or
out
retf
(bad)
ds
mov
arpl
outs
ds
push
int3
and
mov
xor
pop
add
test
je
mov
jecxz
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
outs
out
les
jecxz
leave
cld
(bad)
cmp
sub
push
(bad)
mov
loope
cld
jecxz
inc
addr16
aas
mov
cmp
cli
pop
push
(bad)
mov
in
cld
jecxz
xchg
shl
arpl
xor
ds
out
test
outs
int3
(bad)
sahf
sti
fs
mov
dec
arpl
outs
push
arpl
test
cld
jecxz
inc
cmp
and
sub
jns
ds
jp
aas
mov
mov
pop
mov
sahf
cmove
mov
mov
pop
sub
xor
mov
pop
push
lea
pop
inc
test
fimul
mov
mov
mov
cmp
mov
mov
in
xchg
sahf
pop
mov
mov
in
ret
mov
retf
push
xchg
inc
aas
adc
jecxz
ret
mov
call
ret
call
sub
int
std
leave
cmp
(bad)
ds
mov
mov
std
(bad)
cli
pop
add
jno
arpl
jmp
ds
xor
push
jge
and
jecxz
ds
sub
pop
aas
sub
jae
sub
ja
fist
add
movs
push
aas
inc
je
iret
jge
fiadd
jecxz
ds
in
mov
std
jno
cmps
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
and
mov
(bad)
mov
mov
(bad)
enter
ds
jmp
mov
fcom
cmovno
xchg
inc
xor
jnp
sti
stos
cmp
cld
jecxz
mov
pop
mov
fidivr
out
fs
enter
xchg
or
mov
ret
sbb
jmp
and
ds
jns
aas
mov
mov
or
daa
mov
std
ds
dec
mov
ds
cmp
or
dec
cli
pop
adc
retf
jle
jecxz
das
cmp
or
ds
repnz
pop
dec
call
pusha
dec
jecxz
les
outs
ss
std
ds
jecxz
cmps
cmp
mov
mov
in
xchg
sahf
mov
cmp
jp
mov
fidiv
inc
cmp
xchg
mov
int
cld
jecxz
jmp
and
test
dec
add
lea
daa
mov
add
cmp
add
scas
in
dec
or
dec
arpl
retf
inc
out
mov
inc
sub
jecxz
ds
add
(bad)
ins
data16
sbb
pop
arpl
pop
hlt
add
outs
dec
arpl
jo
arpl
xor
inc
pop
push
jecxz
das
or
dec
add
push
nop
inc
xor
push
sahf
dec
bound
outs
jp
fisubr
arpl
push
idiv
pop
and
or
push
int3
mov
pop
sub
cli
pop
push
retf
into
enter
xchg
or
out
cmc
out
inc
lods
das
ja
inc
push
and
xor
int3
cli
pop
push
pop
jecxz
inc
or
dec
adc
ss
and
mov
outs
push
arpl
jo
arpl
xor
pop
pop
jecxz
das
or
dec
add
push
int3
or
push
xchg
sahf
iret
popa
inc
mov
inc
arpl
outs
push
arpl
outs
out
push
pop
div
(bad)
outs
lds
outs
int
jle
dec
loope
xchg
pop
outs
retf
enter
daa
jnp
add
loope
dec
mov
cld
jecxz
mov
or
sbb
inc
sub
es
ficom
and
sub
xchg
mov
std
ds
pop
and
imul
retf
inc
pushf
adc
dec
mov
std
cmp
sub
retf
leave
cmp
(bad)
ds
mov
daa
sbb
out
mov
std
retf
(bad)
ds
mov
mov
std
retf
or
add
mov
pop
push
enter
push
cli
pop
push
inc
mov
std
add
mov
std
add
mov
std
add
mov
std
es
jne
ds
ret
lock
into
cmp
sub
aaa
sar
mov
xchg
mov
std
leave
or
cs
retf
cli
pop
(bad)
test
xor
mov
or
push
cli
pop
adc
jecxz
add
mov
std
add
mov
std
add
mov
std
(bad)
or
sbb
jbe
std
cmp
arpl
pop
les
or
mov
std
cmp
xor
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
out
daa
arpl
add
pop
in
inc
mov
or
daa
mov
aas
add
shl
std
push
cli
aaa
inc
aas
cmp
nop
mov
and
sub
addr16
inc
mov
sbb
out
leave
adc
push
int3
or
or
cmps
cmp
and
xchg
cld
jecxz
aas
mov
push
push
inc
xor
dec
cmp
and
lods
jae
out
dec
and
jmp
and
dec
xchg
and
addr16
inc
mov
cmp
mov
int
cld
jecxz
pushf
cmp
ds
out
push
test
hlt
ror
rcr
xchg
inc
inc
and
outs
sub
or
(bad)
xchg
or
mov
inc
xor
nop
mov
lds
fimul
ds
adc
or
inc
jbe
or
mov
cmp
add
mov
or
jmp
inc
aas
sub
dec
inc
cs
add
adc
clc
jmp
sbb
mov
(bad)
ins
dec
arpl
xor
pop
inc
mov
inc
arpl
xor
test
inc
lods
out
pop
call
push
nop
or
adc
sub
retf
or
push
int3
cli
pop
push
xchg
inc
xor
push
push
xor
inc
aas
inc
cmp
dec
or
adc
or
inc
jbe
pop
pop
and
cmp
adc
out
ds
xor
mov
out
les
std
sahf
adc
pop
ret
rol
mov
inc
je
iret
inc
je
iret
or
daa
mov
idiv
ds
ror
outs
jmp
addr16
ds
ror
outs
jmp
cmps
adc
retw
cmps
retf
mov
or
mov
or
outs
jmp
daa
push
ds
ror
outs
jmp
fild
ds
aaa
retf
(bad)
out
ds
cmp
ret
add
mov
jno
mov
addr16
mov
mul
inc
xor
retf
add
mov
std
push
cs
inc
aas
inc
sub
ret
add
mov
jno
inc
xor
retf
add
mov
std
push
mov
sub
push
ss
aas
mov
std
ds
dec
cmp
mov
clc
(bad)
out
ds
xchg
add
mov
dec
inc
xor
shl
aas
mov
test
mov
mov
jecxz
and
cmps
retf
mov
or
mov
or
outs
jmp
push
rol
ror
or
or
mov
or
outs
jmp
out
aas
sahf
mov
ds
ror
mov
or
mov
or
int3
fdivr
mov
add
xor
inc
cmp
or
jge
and
jecxz
ds
and
jecxz
ds
and
jecxz
ds
cmp
inc
or
ror
cli
pop
or
or
push
retf
adc
jp
ror
mov
or
and
ror
(bad)
mov
and
mov
xchg
(bad)
mov
mov
arpl
outs
push
arpl
outs
dec
arpl
retw
mov
or
mov
or
outs
jmp
ins
dec
daa
inc
sub
retf
dec
retf
mov
mov
outs
inc
inc
inc
in
dec
retf
out
push
jecxz
enter
mov
jmp
cmp
dec
cmp
inc
sti
iret
jmp
ret
xchg
pop
adc
or
mov
ins
dec
das
mov
out
sub
inc
xchg
cmp
push
cmp
(bad)
ds
std
ds
jnp
mov
adc
sti
jmp
jg
in
ds
dec
inc
inc
cmp
enter
inc
mov
std
popf
adc
mov
cmps
add
xor
ret
push
xchg
or
sub
retf
dec
retf
mov
mov
outs
inc
inc
inc
in
dec
retf
out
push
jecxz
enter
mov
jmp
jecxz
xchg
or
es
sahf
in
test
enter
ins
dec
and
popa
loop
lds
inc
mov
mov
sub
int3
add
or
test
outs
push
pop
inc
es
xchg
in
jmp
icebp
mov
(bad)
out
mov
std
leave
sti
mov
fild
lods
jae
inc
cmp
shl
add
mov
jb
jge
out
mov
std
leave
sti
mov
dec
xor
xchg
movs
add
sti
xlat
mov
shl
das
mov
std
leave
sti
mov
dec
adc
push
enter
mov
ss
daa
shl
inc
arpl
aaa
popa
mov
jge
(bad)
fs
mov
and
jle
(bad)
ds
sbb
pop
in
ds
popa
mov
jge
fisub
mov
std
mov
mov
std
leave
sti
mov
or
xchg
jecxz
xchg
mov
mov
sub
inc
daa
mov
std
ds
xor
shr
inc
arpl
inc
cmp
enter
jns
sub
shr
inc
jae
inc
xor
enter
pop
inc
cmp
shl
add
inc
inc
sub
enter
inc
inc
xor
enter
xchg
jb
push
inc
mov
mov
dec
xor
repnz
inc
pop
inc
xor
ret
xchg
out
test
mov
faddp
xor
(bad)
mov
loop
sub
loop
ds
cli
sahf
adc
pop
das
aas
sub
enter
test
jecxz
ds
std
shl
(bad)
mov
outs
dec
inc
jge
into
aas
mov
(bad)
ds
mov
jecxz
(bad)
or
aaa
aas
in
mov
cmp
retf
mov
jecxz
ds
inc
rol
retf
mov
or
outs
jmp
in
mov
je
xchg
sub
es
(bad)
std
adc
jmp
hlt
dec
retf
dec
retf
dec
clc
mov
inc
aas
sahf
aaa
mov
mov
ror
outs
jmp
cld
dec
retf
dec
retf
dec
retf
dec
retf
dec
clc
mov
inc
aas
sahf
dec
cdq
ds
ror
mov
or
outs
jmp
in
ds
(bad)
inc
jmp
in
sub
std
ret
jb
and
mov
mov
push
std
adc
retf
outs
jmp
out
aas
sahf
xor
inc
ror
mov
or
mov
or
outs
jmp
outs
or
mov
stc
adc
add
mov
or
outs
jmp
in
dec
cmps
jmp
or
inc
sti
fild
dec
inc
cmp
xchg
sahf
mov
ret
sub
retf
ror
mov
or
mov
or
outs
jmp
sub
fwait
jns
retf
outs
jmp
out
aas
sahf
mov
dec
inc
pop
jecxz
pop
or
(bad)
fwait
jns
retf
outs
jmp
popa
push
aas
sub
mov
jecxz
ret
out
mov
std
leave
add
dec
clc
mov
inc
aas
sahf
aaa
cmps
ds
inc
cmp
popa
cli
aas
sub
mov
icebp
in
inc
jmp
dec
ds
repz
test
popa
push
aas
sub
mov
jecxz
ret
mov
out
dec
daa
(bad)
loop
cmp
mov
xor
mov
aas
cmp
sub
sub
enter
mov
popa
test
movs
out
test
lds
xor
inc
aaa
adc
cmps
retf
mov
or
mov
or
outs
jmp
outs
inc
inc
push
popf
(bad)
inc
jmp
in
pop
jecxz
les
adc
add
dec
test
mov
stc
or
inc
xor
inc
aaa
sar
inc
mov
mov
mov
dec
xchg
cld
jecxz
aaa
mov
adc
cld
jecxz
inc
mov
std
mov
mov
xor
aaa
test
inc
mov
ror
je
iret
inc
je
iret
inc
sub
inc
inc
xor
inc
push
dec
neg
std
jecxz
ds
out
test
je
iret
inc
je
iret
or
push
retf
push
xchg
inc
loop
or
fcmovne
mov
mov
retf
rol
mov
and
leave
rcl
jle
scas
fs
inc
xor
inc
clc
addr16
mov
into
add
mov
retf
cmp
xor
pop
retf
pop
call
(bad)
ds
addr16
jl
test
jecxz
ds
mov
adc
(bad)
sahf
outs
std
ds
test
dec
sub
sahf
arpl
ds
ret
fdivr
mov
push
lds
(bad)
dec
retf
pop
or
test
std
ds
mov
mov
sti
les
mov
out
cmps
out
cmps
retf
aas
inc
mov
jnp
out
leave
add
sbb
stos
out
leave
add
push
sahf
sbb
aas
mov
std
pushf
cmp
mov
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
ds
cmp
mov
jge
mov
jecxz
jb
and
ds
or
inc
inc
movs
ror
je
iret
inc
xor
inc
inc
and
std
ds
cmp
mov
std
mov
dec
xor
jns
out
mov
std
sar
iret
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
mov
inc
aas
inc
sub
rcl
out
movs
cmp
pop
mov
dec
cmp
mov
cmp
cmp
pop
mov
arpl
mov
jno
and
cld
push
sbb
mov
aas
mul
std
movs
cmp
adc
lea
push
jmp
sbb
les
mov
jae
je
(bad)
ds
mov
cmp
ins
mov
mov
call
scas
sub
(bad)
mov
std
sub
mov
inc
je
iret
inc
je
iret
or
jb
mov
fsub
leave
and
inc
outs
repz
mov
or
scas
dec
jnp
outs
dec
(bad)
ds
push
arpl
ins
add
mov
cmc
xor
popa
add
mov
pusha
add
mov
std
ds
pusha
and
out
inc
cmp
(bad)
mov
xor
mov
mov
std
sub
data16
mov
mov
std
leave
add
push
enter
shr
jnp
jmp
fcom
aas
mov
xchg
xor
pop
inc
in
aaa
icebp
bound
les
add
iret
or
scas
pop
jl
outs
pop
(bad)
ds
dec
add
push
retf
idiv
icebp
cmp
call
xor
popa
add
icebp
jecxz
ds
in
inc
cmp
add
ret
in
jecxz
je
sbb
ds
add
sub
mov
mov
std
xor
sub
mov
mov
cmc
cmp
outs
add
ds
add
enter
add
jmp
popf
jns
mov
cmp
inc
ret
retf
add
ss
inc
mov
pop
and
out
pop
ss
push
xchg
sub
jge
mov
pop
or
shr
inc
outs
in
ds
xor
jns
mov
inc
je
iret
inc
je
iret
lahf
out
std
ds
mov
inc
je
iret
inc
je
iret
(bad)
rcr
inc
jle
inc
aas
(bad)
aad
pop
out
jmp
inc
je
iret
inc
je
iret
inc
je
iret
or
ret
push
xchg
sbb
inc
dec
sbb
fidivr
xchg
ins
pop
cmp
sbb
xor
pop
inc
aas
inc
aam
jb
xadd
sti
(bad)
test
jecxz
pushf
scas
mov
xlat
and
fnstenv
(bad)
push
(bad)
pop
inc
aas
xchg
(bad)
hlt
add
fcmovnu
dec
(bad)
pop
inc
aas
cld
rcr
icebp
in
sar
jecxz
addr16
stc
xor
pop
lods
test
mov
rol
icebp
inc
mov
jecxz
sbb
(bad)
dec
sahf
ja
aas
mov
ja
aas
xchg
inc
out
retf
mov
xor
add
xchg
add
mov
jecxz
test
(bad)
hlt
add
sbb
mov
inc
inc
mov
(bad)
sar
jecxz
xor
xor
fiadd
out
pop
xchg
icebp
int
cld
jecxz
or
pop
add
in
inc
pop
fimul
inc
aas
xchg
fisttp
iret
inc
je
iret
inc
je
iret
and
neg
sub
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
ins
inc
arpl
stos
inc
arpl
jecxz
ds
out
mov
std
nop
inc
cmp
dec
xchg
add
cmps
dec
mov
or
leave
or
jecxz
mov
mov
mov
in
lods
mov
cmp
and
jecxz
ds
movs
mov
inc
pusha
and
int
xor
mov
out
jecxz
xor
inc
sahf
cmp
inc
mov
dec
arpl
inc
pop
mov
mov
add
cmps
mov
and
popw
fsubr
(bad)
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
ins
inc
arpl
outs
push
arpl
xor
int3
cli
pop
push
cmps
push
mov
push
stos
inc
arpl
jecxz
ds
cmp
mov
mov
mov
in
lods
mov
cmp
and
jecxz
ds
mov
ss
pusha
and
int
xor
enter
lock
xor
inc
sahf
scas
jmp
arpl
inc
pop
mov
mov
add
cmps
mov
inc
je
iret
xchg
jmp
fstp
lods
test
mov
rol
sub
(bad)
sbb
or
push
xchg
fcmovb
sub
mov
(bad)
xor
movs
mov
(bad)
std
ds
mov
sahf
jns
inc
mov
mov
(bad)
cmp
xchg
(bad)
les
mov
mov
sahf
push
fild
cmps
mov
(bad)
mov
aas
xor
dec
inc
xor
inc
or
sbb
in
xchg
out
add
mov
inc
je
iret
cmp
inc
retf
dec
retf
inc
xchg
or
push
pop
and
lds
mov
les
mov
les
mov
in
mov
std
ret
mov
xchg
out
retf
add
adc
sahf
int3
sub
mov
test
retf
add
adc
cli
pop
push
daa
push
les
aas
inc
xor
push
inc
aam
(bad)
xchg
out
retf
add
adc
mov
movs
pop
mov
xrelease
inc
sub
xchg
push
xor
push
push
inc
inc
aas
or
adc
sub
sar
ds
push
xchg
or
push
arpl
dec
scas
mov
retf
out
test
pop
sbb
sti
push
xchg
inc
sub
addr16
xchg
movs
xchg
cmp
test
sub
push
mov
pop
sub
mov
jecxz
add
jo
arpl
data16
ds
mov
cmp
mov
inc
loope
or
xor
retf
fild
mov
adc
add
inc
je
iret
or
push
(bad)
ds
add
dec
or
xchg
sub
stos
(bad)
xchg
ins
mov
arpl
and
hlt
ins
add
nop
jmp
pop
mov
dec
cmps
cmp
fdivr
call
sub
cmp
push
cmp
out
push
retf
int3
(bad)
and
iret
or
mov
add
dec
inc
cmp
push
or
daa
cmps
cmp
ss
mov
dec
dec
or
pop
pushf
adc
iret
inc
je
iret
inc
je
iret
inc
je
iret
and
data16
fsubr
(bad)
mov
mov
(bad)
enter
ds
jmp
xor
ja
mov
dec
arpl
pop
hlt
int3
cli
pop
ss
push
xor
out
mov
std
retf
push
ret
cmp
mov
mov
lds
inc
mov
jge
mov
and
pop
fxch
xor
sbb
adc
push
enter
jb
outs
push
ret
jg
dec
arpl
pop
and
scas
adc
pusha
fnsave
mov
jo
inc
and
mov
cmp
(bad)
fiadd
enter
mov
jg
es
(bad)
mov
arpl
jns
cld
jge
in
adc
outs
out
leave
push
in
shl
mov
jb
outs
push
ret
jg
dec
arpl
pop
and
scas
adc
pusha
fnsave
mov
jo
fiadd
and
mov
cmp
(bad)
fdivrp
(bad)
adc
push
mov
jg
sub
(bad)
mov
arpl
jns
(bad)
jge
in
adc
outs
out
leave
push
in
shl
mov
dec
not
shr
mov
ins
push
ret
jg
dec
arpl
pop
and
scas
adc
pusha
fnsave
mov
jo
cmc
inc
pop
and
mov
cmp
(bad)
fdivrp
mov
outs
push
ret
jg
xor
(bad)
mov
arpl
jns
or
(bad)
push
push
mov
jmp
xor
movs
aaa
(bad)
pop
sub
xor
sub
adc
iret
or
adc
pop
and
call
xchg
lods
xchg
(bad)
mov
arpl
js
add
arpl
gs
mov
std
jle
jo
lea
xor
push
xor
mov
lods
jb
(bad)
ins
sub
jle
lock
push
mov
jmp
xor
movs
aaa
fisubr
(bad)
mov
shl
adc
push
and
in
or
sub
jle
out
and
inc
pop
and
aaa
retf
mov
cmp
(bad)
fdivrp
(bad)
and
push
mov
jg
es
(bad)
mov
arpl
jns
cld
jge
in
adc
outs
out
leave
push
in
shl
mov
jb
pop
ror
sub
and
mov
or
fsub
outs
sub
sbb
ret
mov
aas
jg
mov
std
mul
cmp
fisub
leave
mov
push
ror
cmps
outs
dec
inc
sbb
clc
sub
cmp
jecxz
leave
cli
pop
push
retf
adc
cli
pop
pop
int3
or
and
add
es
cli
pop
push
xchg
inc
xor
push
push
jno
arpl
xor
sbb
push
int3
add
sub
mov
mov
into
push
div
pop
je
xor
push
retf
pop
jp
pop
push
retf
es
pop
pop
retf
push
jp
pop
push
retf
and
pop
dec
nop
or
arpl
ss
xchg
push
jno
arpl
retf
push
sbb
jecxz
sbb
mov
ficomp
lds
mov
lds
cld
jecxz
push
sahf
jnp
cmp
outs
in
ds
mov
ret
jecxz
ds
ret
jno
arpl
stos
inc
arpl
jecxz
ds
inc
arpl
xor
mov
xlat
mov
mov
adc
mov
aas
mov
std
sar
iret
cmp
adc
add
(bad)
xchg
and
in
add
pop
or
sub
and
dec
inc
retf
xor
loope
dec
ds
dec
push
test
outs
out
daa
xor
aas
inc
stos
pop
ret
ror
je
iret
inc
je
iret
inc
je
iret
or
retf
push
les
sub
sti
out
cmp
or
pop
xor
test
outs
dec
dec
inc
inc
push
retf
cmp
push
or
pop
add
rol
in
xchg
(bad)
pop
call
mov
sbb
dec
arpl
test
jmp
lahf
mov
xchg
push
add
shl
repnz
pushw
sar
xor
jno
cmp
jge
call
je
iret
or
retf
push
les
and
sti
out
cmp
add
push
outs
inc
dec
inc
xor
retf
cmp
push
push
inc
mov
into
icebp
xchg
(bad)
pop
pushf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
nop
inc
xor
ret
or
ins
inc
cmp
dec
xchg
pop
mov
lods
mov
sbb
mov
test
pop
cwde
adc
test
cmps
mov
or
jb
ret
aas
sub
push
retf
push
test
repz
retf
push
test
mov
dec
mov
ret
xor
test
cmc
adc
ins
inc
dec
mov
jb
mov
mov
call
mov
inc
je
iret
inc
je
iret
and
data16
(bad)
(bad)
mov
mov
(bad)
enter
ds
jmp
cmp
sbb
std
ds
xchg
fiadd
mov
inc
xor
dec
jge
and
jecxz
ds
mov
jb
shl
arpl
pop
fild
stos
inc
arpl
jo
arpl
jecxz
out
out
leave
add
or
jl
(bad)
enter
ds
ret
je
iret
inc
sub
inc
cmp
in
jecxz
inc
inc
call
inc
inc
je
iret
inc
je
iret
sbb
addr16
sub
test
jecxz
ds
jmp
cmp
mov
fisttp
xchg
(bad)
ds
jb
(bad)
push
cmc
dec
inc
mov
ds
inc
jecxz
mov
repz
adc
std
xchg
or
mov
fisubr
out
adc
std
leave
cli
pop
dec
int3
add
or
mov
mov
icebp
fidiv
inc
inc
or
xor
mov
jge
jl
aas
bound
enter
dec
push
jecxz
fisttp
sub
(bad)
xor
mov
ret
test
call
out
xchg
out
sar
mov
out
les
mov
out
adc
std
popf
inc
cmps
pop
call
or
mov
std
sar
int3
add
or
cli
pop
cmp
mov
std
daa
les
and
inc
xor
adc
dec
mov
std
cmp
data16
(bad)
(bad)
mov
mov
(bad)
enter
ds
jmp
and
mov
std
xchg
or
xor
call
sub
add
dec
(bad)
jge
and
mov
std
ds
std
es
xor
imul
adc
or
inc
scas
in
ret
mov
std
ds
cld
push
jbe
inc
aas
push
jno
arpl
retf
pop
mov
test
aas
mov
(bad)
es
sub
aas
inc
cmp
outs
inc
xor
jae
pusha
and
aam
sbb
sub
loope
pushaw
mov
dec
pop
ss
(bad)
mov
(bad)
add
dec
daa
sbb
add
inc
aaa
sbb
add
cmp
or
dec
add
or
jbe
std
ds
and
movs
inc
aas
imul
(bad)
ds
jmp
retf
fisubr
ds
aaa
(bad)
mov
dec
(bad)
mov
imul
js
add
cmp
test
jo
arpl
test
std
ds
jecxz
mov
test
ds
out
mov
std
leave
cli
pop
push
int3
dec
or
xchg
and
dec
ds
mov
test
retf
jnp
mov
aaa
mov
shl
(bad)
ds
and
pop
sub
mov
and
icebp
aas
inc
mov
jp
retf
arpl
jo
arpl
fcmovbe
pop
jbe
lds
mov
daa
mov
inc
sub
mov
and
mov
std
imul
std
ds
pop
mov
(bad)
xlat
loope
mov
(bad)
repz
add
dec
(bad)
popa
xchg
arpl
outs
clc
retf
inc
push
dec
(bad)
imul
std
ds
test
dec
bound
fcmovbe
pop
jbe
inc
arpl
xor
xchg
or
xor
mov
hlt
pushf
sub
mov
(bad)
cmp
imul
and
and
mov
std
es
and
mov
mov
jb
ret
arpl
test
std
ds
jecxz
mov
test
ds
mov
add
std
retf
add
dec
push
cmp
mov
ds
out
add
std
leave
inc
or
popf
adc
dec
mov
std
ds
test
aas
mov
ror
je
iret
inc
je
iret
inc
je
iret
inc
movs
lds
(bad)
xchg
inc
aas
jge
add
mov
std
add
and
hlt
call
mov
in
push
call
iret
inc
je
iret
inc
je
iret
inc
stc
xchg
in
jecxz
dec
jb
mov
pushf
push
in
jecxz
jo
out
cmp
add
fmul
iret
inc
je
iret
inc
je
iret
or
push
retf
adc
mov
mov
mov
std
shl
and
mov
jmp
dec
inc
pop
cmp
or
in
sar
jmp
inc
mov
inc
aas
cmp
xor
jmp
jae
cmp
xchg
fs
enter
mov
retf
jne
mov
dec
push
inc
mov
dec
ds
scas
push
test
addr16
sub
xor
cmp
movs
xchg
and
mov
adc
rcl
cmp
inc
pop
add
jecxz
sub
in
sar
popf
adc
and
rol
ret
push
retf
push
mov
loop
les
jo
aas
inc
xor
dec
and
mov
xor
popf
cmp
addr16
mov
out
or
shr
test
mov
jecxz
jae
in
mov
jmp
mov
jecxz
jae
cmp
int3
add
add
push
sub
leave
cli
pop
push
retf
add
int3
ins
inc
arpl
sub
inc
pop
xor
or
or
mov
mov
lea
(bad)
cmp
in
mov
sub
mov
in
mov
jmp
aas
pop
outs
int3
ds
sbb
test
xor
dec
test
push
inc
arpl
dec
dec
add
push
test
sahf
call
mov
outs
aas
aas
outs
aas
aas
inc
outs
aas
aas
dec
outs
aas
aas
push
outs
aas
aas
pusha
outs
aas
aas
inc
je
iret
inc
je
iret
inc
je
iret
or
inc
or
(bad)
xchg
inc
pop
and
outs
jp
(bad)
dec
(bad)
test
dec
push
test
mov
arpl
dec
(bad)
test
dec
push
test
mov
ror
or
sbb
jns
mov
inc
je
iret
inc
sub
inc
inc
and
ret
jno
cmp
or
outs
in
ds
mov
inc
je
iret
mov
ins
xchg
cld
jecxz
adc
std
ds
out
inc
xchg
std
push
repnz
aas
jns
mov
inc
je
iret
aaa
rol
inc
mov
mov
(bad)
(bad)
ds
inc
arpl
jecxz
nop
jl
and
loop
pop
or
dec
or
(bad)
test
ss
mov
std
sar
jmp
call
mov
(bad)
(bad)
ds
inc
arpl
out
mov
mov
mov
inc
je
iret
inc
je
iret
inc
je
iret
cmp
adc
add
(bad)
test
retf
jb
mov
jmp
cdq
push
jecxz
mov
sub
test
xor
jb
xadd
cld
jecxz
mov
sti
hlt
pop
aas
in
mov
jecxz
hlt
cld
out
sar
iret
inc
je
iret
inc
je
iret
inc
je
iret
aaa
rcl
sbb
dec
test
retf
out
test
outs
inc
arpl
test
std
ds
add
mov
test
aas
mov
ror
je
iret
inc
je
iret
inc
je
iret
inc
sub
dec
cmp
dec
cli
pop
add
cmp
mov
mov
ds
dec
arpl
repz
(bad)
push
or
fst
retf
pop
xor
sbb
data16
jnp
pop
add
loopne
cmp
jmp
repnz
inc
outs
clc
std
ds
cmp
jmp
repnz
jb
outs
out
std
ds
cmp
jmp
repnz
inc
outs
or
ds
cmp
jmp
fisttp
mov
pop
xor
aas
mov
sar
std
jb
outs
push
(bad)
ds
and
mov
std
add
jecxz
pop
(bad)
(bad)
mov
mov
(bad)
enter
ds
push
retf
jb
mov
jecxz
sbb
mov
inc
mov
sbb
std
ds
les
pop
inc
aas
sahf
add
ds
dec
arpl
ins
or
mov
std
sar
inc
mov
mov
inc
je
iret
inc
je
iret
pop
outs
inc
arpl
outs
iret
jb
aaa
cmp
jg
mov
pop
(bad)
xchg
inc
dec
xor
mul
std
ds
(bad)
fs
std
ds
(bad)
cmp
ds
ds
mov
xor
aas
pusha
and
(bad)
fs
mov
mov
std
jno
outs
clc
enter
xor
fldl2t
sub
cmp
mov
(bad)
ds
fcmovne
mov
push
xchg
sahf
pop
(bad)
ds
push
xchg
sahf
pop
add
mov
jp
jmp
in
outs
jp
ficomp
xor
test
xor
mov
cwde
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
leave
cld
test
mov
jmp
nop
inc
mov
les
in
std
xchg
or
mov
mov
push
arpl
outs
push
retf
retf
(bad)
daa
sbb
add
inc
fadd
inc
or
int3
mov
push
adc
in
std
into
inc
je
iret
inc
je
iret
and
data16
(bad)
(bad)
mov
mov
(bad)
enter
ds
jmp
jecxz
ret
jbe
dec
arpl
pop
cs
sub
mov
or
mov
mov
add
movs
push
aas
inc
inc
and
mov
push
int3
add
adc
sbb
or
arpl
stos
inc
arpl
jecxz
ds
jo
mov
mov
inc
int3
mov
inc
loope
aas
ja
add
pop
outs
(bad)
xchg
cmp
add
dec
inc
mov
mov
mov
push
retf
shl
mov
test
ds
lds
cld
jecxz
inc
inc
loop
sahf
adc
mov
aas
icebp
std
ds
add
movs
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
pop
test
adc
movs
jae
jmp
jmp
aas
mul
(bad)
aas
mov
jns
jge
lea
jecxz
ds
mov
adc
adc
mov
mov
leave
mov
mov
aas
mov
std
(bad)
dec
in
ds
data16
cmp
or
and
push
and
call
(bad)
ds
ror
retf
daa
aaa
leave
std
aas
mov
add
mov
in
mov
jg
cld
ds
xchg
(bad)
jle
mov
std
ds
clc
push
(bad)
retf
inc
iret
jo
inc
dec
fstp
shr
jg
mov
std
ds
pop
xor
push
add
mov
or
ret
push
xchg
or
popa
test
in
ds
lea
jecxz
(bad)
sti
repnz
repz
inc
cmp
retf
mov
loope
leave
mov
call
inc
mov
ins
pop
dec
ds
leave
or
xchg
jecxz
(bad)
cmp
inc
pop
call
mov
inc
je
iret
inc
je
iret
or
ret
mov
ins
(bad)
aas
mov
xchg
mov
std
ds
sub
mov
pop
fxch
adc
xor
inc
cmp
retf
mov
lock
std
sti
add
sbb
push
push
ds
xchg
adc
(bad)
adc
xchg
xor
leave
or
pop
popf
ds
(bad)
aas
mov
test
mov
std
adc
pushf
jns
mov
inc
je
iret
inc
je
iret
or
shl
inc
push
or
push
les
push
int3
daa
clc
mov
addr16
ds
(bad)
xchg
mov
std
leave
push
mov
imul
mov
loope
cmp
popa
push
dec
inc
cmp
inc
inc
sub
clc
mov
popa
fidiv
pop
popf
ds
mov
mov
inc
mov
xchg
xor
loopne
(bad)
inc
js
(bad)
int3
cmp
stc
dec
push
jno
fdiv
dec
mov
ds
sub
ret
xchg
rcr
mov
jnp
in
std
ds
(bad)
clc
cmp
pop
cli
daa
mov
add
inc
mov
xor
xor
inc
loop
sub
fild
mov
ds
scas
dec
nop
or
mov
mov
aaa
retf
std
dec
mov
ja
add
jecxz
xchg
jecxz
mov
cli
mov
mov
std
ds
cmp
retf
mov
xor
add
mov
std
ds
xor
pop
int3
in
mov
mov
(bad)
jecxz
sar
push
inc
popa
push
jp
ins
inc
push
xor
xchg
mov
dec
retf
dec
daa
loop
std
ds
sub
retf
add
out
push
ins
push
dec
lds
aas
mov
call
retf
adc
jecxz
enter
push
push
jno
pop
jmp
ins
push
cmp
les
mov
xchg
adc
out
mov
std
ret
jle
mov
std
ds
mov
jecxz
(bad)
push
in
aas
mov
out
mov
std
retf
add
fs
mov
mov
dec
dec
mov
jo
adc
out
mov
std
ret
mov
jle
std
ds
inc
ror
mov
inc
je
iret
inc
sub
inc
inc
xor
inc
or
mov
pop
int3
js
mov
add
push
mov
leave
or
enter
push
out
dec
outs
mov
xor
jbe
dec
pop
inc
std
xchg
imul
ds
cmp
mov
inc
je
iret
inc
sub
inc
cmp
push
mov
outs
dec
jnp
fiadd
mov
data16
xor
scas
sbb
std
shl
sub
sub
xor
push
or
scas
sbb
in
inc
mov
or
inc
je
iret
inc
je
iret
inc
je
iret
pop
outs
(bad)
mov
aaa
cmp
ds
rcl
sub
mov
hlt
ss
sbb
std
ds
or
push
test
jecxz
les
or
cld
out
xchg
mov
lods
xchg
cld
jecxz
add
fwait
outs
inc
arpl
inc
pop
retf
xor
mov
pop
popf
xcrypt-ecb
cmps
mov
or
out
daa
dec
jecxz
ds
mov
add
out
pushf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
ret
push
inc
sub
pop
jecxz
das
or
dec
or
or
add
push
int3
cld
and
(bad)
outs
push
pop
or
inc
mov
std
xchg
cld
jecxz
test
xor
push
cmp
inc
aas
push
int3
or
sahf
dec
jmp
mov
ror
mov
cmp
push
xchg
inc
aad
push
cmp
int3
jmp
add
mov
mov
mov
outs
dec
inc
aas
cmp
dec
inc
sub
enter
retf
mov
jmp
ds
jecxz
test
xor
jae
inc
and
movs
mov
or
(bad)
imul
xor
mov
jp
inc
aas
push
int3
jge
mov
out
mov
pop
outs
leave
daa
pop
pop
add
inc
daa
sbb
or
sbb
or
dec
cli
pop
or
add
sbb
bound
ja
(bad)
xor
(bad)
xor
lea
arpl
outs
inc
arpl
push
(bad)
mov
mov
push
arpl
xor
lea
arpl
outs
inc
arpl
outs
dec
arpl
push
mov
mov
sbb
addr16
push
jecxz
retf
push
retf
adc
or
push
retf
es
popa
push
push
xor
addr16
pop
jecxz
retf
push
retf
push
retf
adc
add
or
dec
jmp
ss
pop
outs
int3
daa
retf
stc
add
adc
adc
inc
mov
add
inc
je
iret
or
out
ds
arpl
mov
out
mov
pop
add
retf
pop
push
test
iret
add
adc
or
inc
je
iret
inc
je
iret
inc
je
iret
and
push
fisubr
(bad)
mov
mov
(bad)
enter
ds
jmp
aad
(bad)
in
mov
pop
push
retf
(bad)
ds
test
pop
fadd
mov
add
push
daa
mov
std
ds
pop
arpl
jecxz
ds
(bad)
test
dec
mov
retf
push
inc
mov
stos
inc
arpl
loop
ds
pop
int3
add
or
in
add
inc
mov
dec
test
or
popf
adc
dec
mov
std
cmp
mov
or
out
retf
push
daa
sar
aas
inc
xor
inc
sub
inc
inc
in
xchg
push
bswap
push
add
and
dec
enter
push
mov
inc
aas
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
mov
inc
aas
aas
xor
dec
inc
ins
sahf
aas
mov
mov
pop
jecxz
retf
data16
or
and
mov
mov
ficomp
mov
ficom
mov
ficom
xchg
icebp
stos
mov
aas
inc
and
xor
add
aas
sub
imul
jg
xor
ja
movs
sub
icebp
fstp
cmps
xchg
ficom
mov
add
push
pop
jecxz
fisttp
sub
leave
cli
pop
push
retf
sbb
or
adc
cli
pop
inc
enter
int3
cli
pop
and
or
inc
retf
push
int3
add
inc
pop
ins
push
arpl
jecxz
xor
sub
ret
jbe
and
std
leave
xor
push
int3
or
adc
mov
dec
mov
arpl
outs
inc
arpl
push
out
mov
(bad)
outs
dec
arpl
outs
inc
arpl
push
(bad)
mov
cmps
outs
push
arpl
outs
inc
arpl
push
into
mov
(bad)
outs
dec
arpl
outs
inc
arpl
push
(bad)
mov
xchg
arpl
outs
pop
arpl
outs
(bad)
push
out
retf
adc
(bad)
pinsrw
jb
fisubr
out
sub
inc
mov
enter
and
mov
xlat
pop
and
ss
adc
inc
xor
jae
movs
jl
loope
push
int3
cli
pop
sbb
(bad)
mov
xor
sub
and
mov
mov
mov
ficomp
cmp
xor
sub
inc
cmp
push
lods
mov
std
adc
inc
sub
jg
stos
jnp
loope
dec
int3
cli
pop
push
test
inc
xor
push
pop
jno
ret
mov
std
es
sbb
aas
inc
cmp
pop
inc
sub
push
inc
xor
push
loope
push
arpl
push
iret
xchg
push
xor
std
ds
lock
inc
pop
pushf
adc
xchg
js
std
into
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
or
retf
dec
daa
fbstp
call
arpl
in
ds
xor
mov
in
cmp
inc
jmp
push
inc
mov
xor
or
data16
inc
aas
inc
xor
inc
sahf
out
rol
outs
dec
cmps
inc
gs
jecxz
push
push
mov
sbb
std
ds
movs
jnp
div
int3
or
adc
or
adc
sub
sar
pop
inc
push
inc
mov
mov
dec
into
inc
aas
pop
jecxz
inc
or
inc
jp
mov
inc
xor
dec
sahf
xchg
rol
outs
test
je
(bad)
ds
inc
aaa
cmp
call
arpl
retf
(bad)
adc
or
daa
jns
add
inc
icebp
dec
inc
(bad)
jecxz
mov
out
mov
or
in
test
std
leave
cli
pop
push
retf
or
mov
push
mov
or
xchg
push
mov
jmp
sbb
(bad)
es
mov
aas
inc
xor
inc
jge
and
sahf
jle
inc
mov
dec
arpl
inc
(bad)
enter
ds
ret
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
rcl
inc
mov
push
xchg
or
aam
mov
mov
std
aas
lds
inc
mov
mov
push
in
ds
addr16
mov
mov
jecxz
into
push
in
ds
pop
cli
jp
ins
jae
sub
xor
mov
in
ds
xor
mov
fadd
mov
aaa
not
in
ds
xchg
cmp
ds
inc
adc
mov
dec
push
out
aas
lods
mov
jmp
jae
inc
mov
xor
icebp
mov
test
ins
inc
pop
lds
inc
mov
mov
shl
std
ds
cmp
repnz
mov
sub
push
xchg
mov
popa
loop
std
aam
aas
inc
sub
xchg
fadd
dec
cmp
loop
les
aas
aas
inc
sub
(bad)
sahf
pop
(bad)
inc
mov
ret
loop
ds
pop
retf
dec
daa
fidivr
add
jbe
pop
jb
ins
add
gs
ds
cmp
xchg
sahf
repz
mov
ret
loop
ds
or
mov
std
ds
iret
mov
std
leave
sti
iret
dec
daa
cmps
mov
add
mov
jecxz
mov
out
sar
ds
outs
push
sub
int3
enter
add
and
mov
outs
in
ds
xchg
cs
ds
inc
sub
int3
test
mov
and
mov
outs
jecxz
aas
mov
xchg
push
(bad)
ds
dec
sub
int3
mov
mov
dec
xchg
cli
(bad)
ds
push
sub
int3
jg
mov
push
add
mov
mov
out
sar
cmp
and
ds
jno
outs
in
ds
inc
(bad)
jecxz
ds
out
movzx
std
leave
add
dec
daa
icebp
mov
add
mov
mov
mov
je
outs
jecxz
ds
jecxz
ds
out
jecxz
jecxz
leave
or
push
daa
lds
add
or
ds
inc
sub
int3
not
cmp
call
nop
sahf
fst
inc
mov
sbb
jp
call
xchg
sahf
int
inc
mov
sbb
jp
call
xchg
push
int3
mov
add
add
sahf
ja
cmp
inc
xor
ret
mov
mov
outs
stc
add
scas
and
xor
jmp
test
cmps
in
ds
jecxz
sbb
sub
shr
or
sti
retf
cmp
cmp
dec
sub
mov
cmp
or
xchg
xchg
aas
outs
in
ds
sbb
mov
stc
mov
mov
std
sub
push
(bad)
sub
pushf
add
mov
call
retf
mov
cld
add
jmp
jmp
test
outs
jnp
inc
sub
jg
jae
inc
mov
xchg
pop
sti
ds
inc
daa
cmp
retf
(bad)
ds
mov
ja
mov
xchg
imul
jg
jecxz
test
xor
daa
out
cld
cmp
idiv
lds
retf
mov
cmp
jmp
xor
ds
lds
retf
ins
mov
mov
std
leave
add
(bad)
enter
ds
pop
call
inc
mov
in
and
leave
add
in
cmp
ds
lea
jecxz
inc
push
int3
or
mov
mov
cmp
cmp
test
dec
xchg
std
leave
std
dec
push
cmp
jecxz
leave
(bad)
dec
es
mov
jbe
std
ds
xor
inc
test
bswap
sub
mov
mov
les
out
add
(bad)
daa
into
out
ds
sub
lods
(bad)
ds
mov
jecxz
(bad)
(bad)
in
ds
sub
inc
sub
xchg
and
ds
inc
daa
aas
cmp
retf
(bad)
ds
push
pop
icebp
mov
int3
inc
in
ds
jae
inc
mov
mov
ins
inc
inc
adc
scas
lock
cmp
or
push
(bad)
mov
outs
test
jecxz
leave
or
mov
outs
outs
dec
cmp
jae
jmp
cmp
ret
jb
and
push
xchg
sahf
mov
ret
fdivr
mov
outs
out
retf
mov
movs
dec
retf
push
xchg
inc
xor
daa
or
(bad)
cmp
retf
mov
inc
fiadd
aas
sub
sbb
jo
or
inc
sahf
mul
inc
mov
inc
cmp
jecxz
test
jecxz
leave
inc
sub
ds
mov
jb
iret
add
cmp
xor
daa
jp
cld
ds
pop
ret
mov
retf
dec
std
dec
mov
inc
dec
xchg
inc
mov
xchg
out
outs
xor
imul
into
push
in
lds
(bad)
aas
jnp
inc
mov
in
xor
std
int3
inc
pop
std
ds
je
mov
mov
retf
push
or
inc
aas
xor
retf
cmp
xchg
std
lds
inc
mov
mov
movs
loopne
loope
xor
aas
xor
rol
(bad)
ds
mov
test
outs
jae
inc
ds
jp
repz
mov
std
leave
sti
(bad)
mov
inc
clc
mov
(bad)
jb
std
ds
sub
push
cmp
or
shl
sub
sub
fisubr
jecxz
jecxz
inc
mov
std
sub
mov
call
ds
or
lods
iret
or
mov
out
or
inc
das
push
inc
xchg
push
int3
inc
pop
std
ds
call
test
movs
push
pop
mov
mov
ds
sub
retf
mov
outs
inc
(bad)
lahf
inc
std
ds
push
dec
icebp
movs
jae
icebp
lods
jae
inc
cmp
sbb
lods
and
inc
cmp
mov
mov
and
cmps
mov
inc
sub
nop
inc
jo
adc
jno
cmp
jecxz
movs
(bad)
std
leave
or
jmp
leave
jp
std
ds
cmp
jle
lods
xchg
mov
mov
(bad)
loopne
ds
aam
test
in
ret
lods
pop
push
retf
xchg
outs
(bad)
sub
std
ds
(bad)
mov
std
retf
ds
pop
lahf
xchg
ds
dec
mov
jecxz
mov
inc
cmp
shl
mov
mov
sti
fild
enter
ds
fdivr
sub
pusha
mov
les
retf
repz
outs
pop
sbb
test
jg
mov
std
mov
push
out
iret
in
sar
into
push
in
ds
int3
xor
mov
out
hlt
ds
mov
sbb
ja
retf
inc
cmp
jecxz
mov
inc
cmp
sub
es
pop
cld
ds
xor
retf
pop
mov
mov
pop
retf
ror
push
std
ds
xchg
jecxz
test
out
xor
std
ds
fidivr
mov
std
enter
inc
pop
and
aas
aas
mov
cmp
aas
mov
cmp
aas
fiadd
aas
aas
jmp
cmp
pop
cmp
outs
cmp
cmp
outs
cmp
cmp
push
cmp
cmp
outs
cmp
imul
aas
outs
cmp
xchg
test
aas
fwait
test
aas
lods
test
aas
mov
test
aas
mov
test
aas
mov
test
aas
test
test
aas
lods
test
aas
inc
je
iret
sbb
addr16
(bad)
test
jecxz
ds
jmp
cmp
ds
std
inc
inc
mov
std
ds
sahf
push
inc
mov
or
and
ds
sbb
jecxz
retf
mov
sub
cmp
jecxz
test
jo
arpl
retf
pop
inc
mov
mov
es
ds
and
mov
std
ds
std
out
ins
jb
es
or
cmp
mov
mov
cld
ds
sbb
aas
push
std
not
jmp
dec
sahf
imul
mov
and
std
ds
push
or
aas
sub
mov
mov
xor
scas
sahf
sahf
mov
hlt
les
popa
push
retf
(bad)
ds
dec
div
xor
push
add
scas
out
jb
cld
mov
pop
call
retf
(bad)
ds
xor
inc
adc
aas
mov
mov
outs
dec
inc
push
xor
(bad)
ds
mov
mov
mul
mov
scas
in
sahf
lods
outs
inc
mov
(bad)
mov
outs
inc
dec
inc
jo
(bad)
mov
std
jns
pop
and
push
jle
mov
mov
lods
ret
sbb
fabs
cmp
call
mov
pop
es
push
int3
add
jbe
inc
mov
pushf
cs
retf
(bad)
ds
mov
sub
std
add
adc
retf
inc
or
inc
mov
(bad)
(bad)
ds
std
ds
cmp
mov
mov
fidiv
and
std
ds
jecxz
retf
fidiv
ds
and
std
ds
jecxz
mov
pop
(bad)
(bad)
ds
les
cld
jecxz
in
sub
std
int3
add
outs
add
mov
(bad)
es
add
inc
xor
push
jge
and
mov
std
cmp
xor
mov
in
ds
icebp
std
ds
jle
jbe
std
ds
std
into
inc
je
iret
inc
je
iret
inc
je
iret
and
imul
mov
mov
(bad)
enter
ds
push
retf
jb
mov
jecxz
add
mov
std
es
mov
sbb
add
mov
jb
aas
mov
ret
sbb
jmp
lods
sub
aas
inc
xor
cli
pop
push
inc
jge
dec
mov
jecxz
cmp
loop
int3
add
les
or
lds
mov
out
xchg
std
leave
add
push
popf
sbb
aas
mov
std
sar
iret
or
out
daa
mov
sub
inc
mov
pop
xchg
sahf
ins
mov
inc
inc
stos
pop
add
outs
out
xchg
inc
xor
jmp
test
cmps
jecxz
popf
jns
mov
inc
je
iret
and
xchg
sub
mov
mov
(bad)
enter
ds
jmp
mov
inc
daa
outs
aam
ds
xor
xchg
jo
arpl
xor
in
mov
inc
jg
data16
jg
mov
cld
arpl
sbb
arpl
out
sar
ds
std
mov
mov
out
sar
push
jmp
call
outs
dec
arpl
out
sar
ds
std
mov
mov
out
mov
std
leave
or
push
xchg
sahf
jecxz
inc
mov
ret
stos
(bad)
ds
push
arpl
out
sar
ds
outs
inc
arpl
out
sar
aas
ss
mov
mov
out
mov
std
leave
add
push
nop
sahf
lahf
retf
retw
loop
aas
mov
cmps
div
pop
mov
popa
mov
aas
cmp
xor
mov
jne
inc
sub
inc
push
int3
(bad)
or
data16
ds
jecxz
ds
or
mov
mov
std
mov
jmp
daa
sbb
test
jp
pusha
adc
mov
je
outs
jecxz
ds
into
bswap
or
push
xchg
sahf
es
retw
cmp
push
inc
xor
push
pop
xor
sbb
jecxz
ret
out
mov
std
leave
cli
pop
push
int3
or
push
test
int
add
cmp
sbb
add
int3
cmp
(bad)
dec
daa
les
and
sub
dec
inc
cmp
pop
or
xchg
mov
std
ret
call
inc
inc
xor
push
pop
ss
and
(bad)
xchg
add
daa
jle
std
cmp
dec
arpl
xor
dec
mov
push
les
sub
pop
push
sbb
adc
mov
fidiv
inc
sub
push
inc
xor
dec
inc
cmp
push
or
daa
pop
mov
or
mov
data16
mov
or
cmps
mov
inc
aas
or
mov
mov
push
pop
arpl
outs
inc
arpl
xor
sub
push
les
retfw
push
retf
push
test
cmp
(bad)
push
xchg
(bad)
ds
std
adc
cmp
pop
inc
mov
daa
cmc
out
aas
inc
sub
dec
inc
pusha
and
lods
std
retf
xor
test
cmc
adc
push
enter
adc
ja
add
cli
pop
push
pop
outs
dec
pop
push
xchg
(bad)
ds
std
adc
cmp
xchg
or
mov
dec
mov
int3
add
push
push
cli
pop
push
ds
std
daa
leave
mov
and
ret
jecxz
ds
ret
jno
aas
dec
mov
aas
cmps
mov
aas
hlt
mov
aas
or
aas
lds
aas
aas
hlt
mov
aas
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
push
mov
outs
dec
jnp
fdivrp
mov
data16
inc
sub
xor
push
and
scas
adc
gs
aaa
mov
movs
or
cmp
add
repz
push
or
scas
adc
dec
cmp
aaa
mov
retf
int3
pop
mov
jae
iret
inc
je
iret
or
out
daa
jb
add
inc
xor
xchg
sahf
sub
mov
dec
jnp
in
daa
or
std
ds
add
or
out
daa
push
mov
cmp
mov
call
mov
inc
je
iret
or
out
retf
cmp
push
mov
mov
std
aas
sub
mov
xchg
cmp
in
aas
push
aam
ds
std
push
jmp
movs
mov
or
mov
dec
lea
add
out
mov
std
leave
add
dec
daa
mov
std
ds
mov
inc
je
iret
inc
je
iret
and
cmps
fild
(bad)
mov
mov
(bad)
enter
ds
jmp
xor
inc
sahf
test
inc
jnp
xor
inc
cmp
aas
mov
std
mov
dec
dec
add
push
daa
enter
inc
xor
mov
(bad)
mov
jg
mov
cld
aas
pop
jno
arpl
jecxz
mov
outs
push
arpl
outs
inc
aaa
push
cmp
and
cld
xchg
adc
int3
add
push
daa
jo
add
inc
xor
inc
jge
and
sahf
cmps
daa
inc
mov
dec
arpl
inc
(bad)
enter
ds
ret
je
iret
inc
je
iret
and
data16
fild
(bad)
mov
mov
(bad)
enter
ds
mov
inc
aad
cmps
aam
std
ds
pop
and
jmp
or
cli
pop
adc
mov
std
mov
inc
arpl
in
les
std
int3
je
(bad)
ds
inc
arpl
in
push
sahf
imul
xor
retf
je
(bad)
ds
inc
arpl
out
push
sahf
push
rol
stos
add
retf
inc
in
ds
inc
arpl
out
adc
in
leave
add
or
mov
stos
test
mov
std
ds
std
add
mov
mov
ret
jecxz
ds
ret
call
mov
inc
je
iret
or
out
daa
pop
(bad)
lods
sub
inc
mov
pop
xchg
sahf
lods
mov
inc
inc
stos
pop
add
outs
out
xchg
inc
pusha
and
push
aas
mov
dec
cmps
mov
int3
add
jecxz
add
or
out
mov
push
daa
cmps
push
add
adc
jae
iret
inc
je
iret
inc
je
iret
inc
je
iret
outs
adc
test
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
cmp
retf
xor
ret
les
imul
jno
xor
xlat
mov
std
daa
adc
sub
inc
fdivr
ds
out
mov
std
daa
add
std
ds
jb
aas
mov
gs
sub
es
sbb
ds
inc
mov
sub
(bad)
ds
mov
mov
std
ret
jg
adc
push
cmp
repnz
or
mov
jecxz
daa
mov
sub
push
int3
cmp
mov
out
mov
std
mov
mov
or
cli
pop
or
and
or
cld
push
push
jp
pop
add
iret
add
xor
mov
and
std
jp
ins
call
xor
jbe
add
arpl
dec
call
out
test
xor
inc
sub
hlt
mov
(bad)
dec
xchg
sahf
xchg
jno
mov
(bad)
add
push
daa
not
ds
sub
dec
stc
push
(bad)
mov
cld
push
pop
jp
popa
and
ds
xor
pop
sahf
ret
ins
cmp
mov
mov
and
std
test
ror
add
mov
push
pop
sahf
fild
outs
inc
arpl
outs
push
arpl
outs
mov
mov
std
xor
js
out
mov
std
retf
add
push
push
cmp
call
jecxz
sbb
dec
mov
jecxz
xor
loop
retf
mov
sub
cmp
cli
mov
cmp
jmp
leave
or
cld
ret
mov
xchg
jno
arpl
dec
jmp
out
test
xor
lahf
inc
cmp
cli
pop
push
nop
or
xchg
jae
std
leave
ret
xor
xchg
jecxz
fcmovnu
jg
ds
dec
arpl
jo
arpl
outs
int3
xchg
jl
and
mov
std
inc
sahf
push
inc
mov
inc
arpl
outs
dec
arpl
xor
push
add
cmp
or
or
push
retf
out
mov
std
retf
add
adc
push
or
out
jo
std
retf
add
push
push
cmp
call
jecxz
(bad)
std
leave
inc
or
pushf
adc
dec
mov
std
ds
test
aas
mov
ror
test
ds
addr16
out
daa
test
jecxz
ds
jmp
aad
fld
pop
xor
icebp
stos
jb
aas
bound
add
mov
sar
test
mov
jle
(bad)
cmp
ds
pop
mov
sahf
cmps
leave
ds
ret
fdivr
mov
cmp
fidiv
push
ret
jb
jge
jp
mov
std
stc
mov
std
ds
inc
jbe
jmp
(bad)
test
outs
int3
daa
adc
lods
out
mov
std
test
dec
add
test
dec
cmp
scas
sti
inc
mov
(bad)
xchg
inc
mov
jnp
out
leave
jle
mov
mov
test
mov
inc
mov
add
inc
fs
ds
test
idiv
mov
jb
and
out
mov
pop
mov
inc
aas
icebp
cmps
or
ds
call
shl
jecxz
aaa
cmp
push
les
in
ds
sub
test
xor
jge
idiv
mov
xor
(bad)
mov
std
ds
cdq
int3
cld
jecxz
(bad)
stos
in
ds
cmp
mov
call
std
mov
std
ds
jecxz
ds
inc
arpl
jecxz
ds
lds
mov
std
cmp
mov
mov
sahf
inc
and
outs
test
mov
std
retf
add
cmp
mov
cld
ds
mov
mov
std
ds
ror
cli
pop
cmp
test
cmp
out
leave
inc
loopne
ds
(bad)
cmps
pop
call
and
push
in
mov
mov
add
retf
pop
dec
test
in
test
loop
or
sub
mov
in
or
(bad)
ds
std
xchg
or
mov
dec
push
cmps
jbe
inc
aas
push
in
xchg
int3
add
jge
jp
mov
std
leave
inc
loopne
ds
add
scas
pop
(bad)
ds
sub
sahf
in
ret
push
in
ds
add
push
(bad)
ds
add
test
(bad)
cmp
jo
arpl
xor
enter
mov
aaa
mov
std
retf
cli
pop
sbb
mov
mov
out
push
arpl
jo
arpl
xor
mov
ror
cli
pop
es
push
push
dec
inc
cli
pop
sub
outs
(bad)
ds
iret
push
test
jl
add
and
fadd
dec
mov
push
(bad)
nop
inc
xor
arpl
mov
pop
outs
int3
daa
mov
add
lods
ret
mov
mov
std
(bad)
xor
adc
cli
pop
cmp
std
(bad)
cli
pop
ds
cli
pop
inc
inc
mov
std
add
mov
std
add
mov
std
add
mov
std
add
mov
std
retf
xor
cmp
cli
pop
push
retf
int3
xchg
sahf
loop
inc
mov
dec
pop
inc
xor
imul
std
adc
sub
imul
daa
add
aas
inc
xor
push
inc
cmp
imul
(bad)
nop
mov
movs
xchg
cld
jecxz
retf
retf
aaa
mov
sbb
ficom
sub
and
dec
retf
xor
aaa
dec
xchg
inc
lods
out
mov
std
leave
cli
pop
push
ret
inc
enter
mov
dec
push
test
dec
fadd
aas
inc
lods
out
mov
std
leave
xor
push
test
ja
add
inc
mov
push
inc
jb
aas
mov
addr16
sahf
xchg
clc
inc
mov
mov
mov
std
es
fiadd
aas
inc
mov
sub
jecxz
retf
push
sahf
adc
xor
adc
dec
mov
std
cmp
mov
inc
je
iret
and
mov
sub
mov
mov
(bad)
enter
ds
jmp
out
aas
or
push
retf
inc
arpl
outs
inc
lahf
jae
std
ds
ret
push
cmp
adc
jecxz
ds
jb
push
jl
xchg
retf
shl
jecxz
jns
sub
scas
in
push
sahf
push
cmp
mov
repz
ins
out
sub
data16
gs
sub
retf
add
push
daa
dec
fwait
add
push
or
xchg
retf
xlat
clc
mov
(bad)
(bad)
ds
dec
arpl
outs
aad
add
xor
aaa
mov
mov
mov
mov
outs
push
lahf
icebp
mov
mov
xchg
jnp
aas
inc
xor
push
jl
and
jecxz
aas
sahf
das
xchg
inc
mov
test
adc
jecxz
mov
repz
int3
add
push
daa
lds
aas
inc
cmp
dec
jl
and
jecxz
inc
inc
es
repz
mov
jb
inc
mov
mov
xor
mov
push
outs
int
xor
ds
std
dec
cmp
inc
lahf
inc
xor
jnp
cmp
jg
cmp
std
repz
call
mov
push
int3
lods
scas
mov
add
sub
addr16
inc
mov
sbb
loop
retf
fs
mov
jmp
(bad)
sahf
iret
fs
or
std
mov
pop
cmp
test
fs
mov
mov
inc
bound
jbe
add
iret
add
std
jmp
aas
pop
xor
cwde
es
ret
xor
pop
add
cld
push
push
push
push
xor
addr16
inc
cmp
push
and
push
int3
add
out
and
std
les
adc
std
jecxz
push
mov
int3
cld
and
repz
ret
(bad)
(bad)
ds
in
push
std
retf
inc
or
ret
(bad)
(bad)
ds
in
push
std
retf
add
adc
mov
std
jmp
and
push
std
cmp
pop
cwde
add
inc
jo
dec
mov
inc
(bad)
enter
ds
ret
jecxz
add
je
iret
cmp
inc
sub
addr16
sahf
xchg
ds
mov
and
in
mov
std
add
mov
inc
je
iret
or
push
retf
cmp
cmp
inc
lds
aas
mov
mov
cmp
ds
rol
pop
add
iret
add
xor
push
xchg
sahf
stos
ret
ds
ret
fdivr
mov
dec
(bad)
xchg
or
jecxz
add
dec
jmp
sub
lods
out
lods
out
popf
adc
pop
add
cmp
inc
add
std
sar
aaa
mov
pop
int3
fs
ds
(bad)
xchg
or
das
(bad)
ds
push
or
lea
hlt
call
cmps
jp
inc
aas
inc
mov
or
out
popf
adc
pop
add
mov
or
xchg
cmp
dec
sub
mov
inc
pop
jb
mov
push
retf
cmp
call
mov
fisubr
push
ret
jb
and
in
sub
std
sar
pop
or
in
sar
aaa
mov
or
inc
in
ds
adc
mov
addr16
and
mov
sahf
sahf
repnz
mov
(bad)
daa
in
fiadd
aas
adc
pop
add
out
ret
push
rcr
cld
pop
xor
inc
loopne
ds
(bad)
mov
outs
dec
pop
cmp
cmp
push
cld
push
(bad)
ds
in
lods
jecxz
popf
jns
test
mov
mov
int3
push
cld
push
(bad)
ds
in
stos
jecxz
popf
jns
mov
inc
je
iret
and
cmps
loopne
(bad)
mov
mov
(bad)
enter
ds
push
retf
jl
ret
loopne
out
aas
or
jo
arpl
jecxz
ds
mov
scas
in
ds
sub
inc
mov
inc
arpl
imul
addr16
xor
or
jecxz
ds
xor
mov
dec
arpl
loop
ds
outs
icebp
mov
or
popf
sbb
aas
mov
std
sar
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
ret
push
mov
mov
mov
ror
je
iret
inc
je
iret
sbb
addr16
ins
sub
fninit
std
ds
jmp
push
add
leave
cli
pop
xor
scas
jecxz
je
xor
ja
mov
inc
arpl
jo
arpl
xor
pop
jno
arpl
xor
ins
inc
mov
add
inc
mov
ret
jecxz
ds
ret
aaa
push
xchg
inc
xor
push
jge
aad
jmp
sbb
xchg
sbb
std
push
cli
pop
adc
lods
stos
inc
arpl
jecxz
ds
std
mov
jo
arpl
loop
sub
sub
leave
sahf
imul
mov
outs
inc
arpl
push
ds
add
arpl
cmp
or
inc
cmp
add
push
daa
stos
in
ds
sub
xchg
cmp
loopne
xor
inc
les
jecxz
leave
xor
and
movs
out
ds
mov
mov
(bad)
sahf
pop
lods
inc
mov
(bad)
retf
add
push
hlt
sub
rol
mov
stos
add
mov
clc
or
dec
mov
jecxz
or
outs
dec
inc
sbb
shld
pop
add
sub
inc
ret
dec
mov
imul
ds
rcl
mov
dec
arpl
ins
call
mov
push
retf
inc
inc
xor
push
jge
and
jecxz
ds
and
pop
inc
aas
sahf
das
popa
cmp
fisubr
popf
adc
pop
mov
mov
add
cmps
mov
inc
je
iret
inc
sub
inc
cmp
mov
outs
add
mov
inc
aas
jns
mov
iret
inc
je
iret
and
out
sub
mov
mov
(bad)
enter
ds
jmp
pusha
and
into
outs
ror
xor
jo
loop
retf
aad
jns
sbb
cmp
jle
mov
inc
inc
xor
int3
es
pop
mov
xor
addr16
cmp
pop
aas
pop
and
sub
outs
aas
sbb
xor
loop
retf
push
push
addr16
inc
xchg
enter
enter
mov
outs
dec
arpl
push
mov
push
jge
std
ds
mov
cmps
adc
aad
pop
arpl
outs
adc
mov
inc
aas
imul
mov
xor
xchg
push
ss
mov
std
dec
cmp
ds
inc
arpl
push
(bad)
ds
inc
arpl
in
mov
or
ret
push
daa
and
ds
dec
cld
ds
cmp
arpl
sbb
inc
xor
add
cli
jmp
les
mov
std
cmp
mov
test
pop
mov
push
dec
arpl
stos
inc
arpl
loop
ds
and
mov
pop
mov
pop
sbb
aas
mov
std
sar
les
repz
ds
or
inc
sub
les
mov
cld
push
xchg
aaa
inc
aas
cmp
xchg
inc
xor
push
aas
in
jp
repnz
in
les
int3
mov
das
or
mov
mov
mov
out
ret
add
jo
arpl
ins
push
loop
adc
cld
out
add
fisub
inc
aas
sub
push
or
aam
mov
loope
ds
int3
add
into
dec
fcmovu
std
jecxz
mov
sub
dec
push
xor
xchg
cmp
cwde
pop
loop
retf
dec
ret
or
push
add
sub
mov
sub
xchg
jecxz
ds
mov
test
xchg
inc
pop
push
xchg
sahf
add
mov
in
xchg
sahf
sti
cmp
dec
arpl
addr16
ror
ret
mov
(bad)
cmp
lds
inc
mov
cmp
bound
retf
dec
xchg
push
xor
push
xchg
pop
int3
je
mov
add
mov
cmp
push
or
lds
aas
mov
mov
cmps
sub
nop
sahf
xchg
inc
cmp
xchg
push
mov
iret
ss
dec
bound
ss
mov
std
ds
outs
inc
arpl
gs
pop
jecxz
and
sub
sub
outs
inc
arpl
push
hlt
out
push
add
mov
xor
mov
lods
jae
pop
out
inc
cmp
inc
retf
push
mov
xor
xchg
or
adc
or
dec
cli
pop
push
les
adc
mov
inc
aas
aaa
mov
aas
mov
dec
(bad)
or
push
ds
retf
push
test
imul
arpl
push
(bad)
inc
jmp
mov
mov
push
retf
lods
lahf
mov
mov
inc
out
inc
enter
inc
jmp
cmp
aas
cmp
dec
(bad)
sti
ds
jb
(bad)
outs
inc
arpl
outs
jp
idiv
mov
or
sub
leave
cli
pop
push
les
or
add
and
adc
inc
nop
aaa
mov
aas
mov
push
xchg
or
std
push
sahf
aaa
inc
aas
mov
and
mov
daa
lds
mov
out
(bad)
out
leave
cli
pop
inc
sahf
adc
pop
retf
push
mov
mov
add
cmps
mov
fisubr
mov
or
std
push
call
xchg
cmp
ds
cmp
arpl
and
gs
aas
mov
std
xchg
or
dec
ds
retf
push
test
jecxz
fisubr
cmp
push
mov
ficomp
std
ds
out
(bad)
out
leave
add
cs
adc
rcr
std
cmp
mov
inc
je
iret
inc
je
iret
sbb
addr16
lods
sub
fninit
std
ds
jmp
cmp
cmp
sbb
mov
ss
repnz
and
jp
mov
or
mov
push
std
jns
pop
add
cmp
mov
xor
inc
das
add
cli
pop
es
and
dec
ds
mov
test
outs
inc
arpl
cmp
sbb
es
mov
xchg
fisubr
fs
cli
pop
dec
inc
mov
lds
aas
push
and
aas
pop
and
aas
pop
and
sahf
rcl
inc
mov
pop
arpl
cmp
repz
mov
std
push
or
arpl
in
ds
or
div
inc
aas
inc
int3
cmp
fisub
ds
dec
xchg
mov
out
mov
std
xchg
mov
inc
xchg
cld
jecxz
xchg
fisubr
push
push
outs
out
std
ds
jb
cli
outs
test
jecxz
xor
inc
inc
and
dec
test
retf
imul
outs
jb
(bad)
pushf
or
mov
mov
inc
pop
and
inc
sub
(bad)
fnclex
std
aas
mov
lods
sbb
cmp
cmp
add
retf
jp
mov
or
sub
inc
les
add
xor
ss
aas
or
aad
cld
or
push
cmp
push
mov
aam
xor
retf
daa
push
test
outs
push
arpl
dec
dec
cmp
cmp
jecxz
test
pop
aaa
std
push
ds
aas
inc
js
mov
mov
push
retf
adc
mov
sub
push
ds
retf
push
test
or
push
cli
pop
outs
ds
std
daa
fdivp
add
inc
stos
pop
popf
adc
mov
ret
jecxz
ds
ret
cmp
push
sahf
ss
aas
inc
push
std
test
xor
retf
arpl
mov
dec
arpl
stos
inc
arpl
jecxz
ds
call
mov
dec
pop
popf
adc
mov
aas
mov
std
sar
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
sbb
or
aam
ret
ins
in
ds
xor
daa
xlat
xchg
add
jge
cli
aas
mov
std
xchg
jl
cli
inc
mov
inc
xchg
cld
jecxz
aaa
je
std
ds
dec
dec
mov
jg
mov
std
ds
xor
mov
dec
ds
(bad)
push
test
cmp
enter
call
inc
pop
inc
jmp
dec
or
out
les
inc
aas
xor
retf
cld
lahf
mov
push
ds
(bad)
push
test
int3
in
lahf
mov
push
ds
sub
mov
inc
cmp
ret
mov
(bad)
ds
mov
jecxz
ds
inc
ror
out
xchg
jecxz
push
sti
(bad)
ds
out
fs
leave
add
pop
popf
jmp
jecxz
ds
mov
cmps
mov
inc
je
iret
inc
je
iret
sbb
addr16
and
test
jecxz
ds
jmp
pusha
and
lds
inc
mov
mov
cmp
dec
arpl
xor
adc
push
sub
leave
push
or
je
aaa
inc
aas
icebp
shl
inc
and
xor
hlt
sbb
fisttp
mov
mov
mov
or
std
adc
fisub
ds
ret
mov
outs
jb
push
iret
sbb
out
jp
outs
out
std
ds
bound
push
jecxz
retf
repz
inc
and
fisttp
sbb
mov
(bad)
out
(bad)
and
jb
and
adc
cli
pop
push
xlat
dec
sub
leave
add
inc
test
ficomp
cmp
mov
ret
aaa
inc
mov
mov
aas
inc
int3
mov
mov
sub
ds
(bad)
mov
inc
or
mov
addr16
push
jecxz
mov
sub
xchg
sbb
inc
inc
mov
jne
cld
jecxz
int3
add
adc
xchg
test
jecxz
jecxz
add
pop
and
or
shl
arpl
xor
or
jecxz
add
outs
out
cli
(bad)
xchg
inc
aas
lahf
dec
(bad)
ds
inc
arpl
jecxz
ds
inc
arpl
pop
mov
arpl
ss
nop
jl
and
mov
ror
or
daa
xor
add
inc
xor
outs
sahf
bound
arpl
jo
arpl
fcmovbe
pop
jbe
inc
arpl
out
add
adc
cld
jecxz
mov
mov
pop
out
mov
call
push
(bad)
sahf
es
inc
mov
dec
arpl
outs
mul
cmc
jmp
inc
sub
jg
mov
and
mov
dec
int3
add
and
mov
add
inc
xor
pop
inc
sub
push
lods
mov
mov
sahf
loop
inc
mov
out
shr
dec
arpl
retf
movs
dec
mov
pop
mov
ficom
pop
mov
(bad)
xor
fldenv
xchg
fimul
dec
test
or
push
ds
pop
dec
test
outs
jge
inc
sub
jae
xor
out
out
ret
mov
call
push
nop
sahf
jp
inc
mov
push
arpl
jo
arpl
xor
cmp
mov
add
(bad)
outs
out
add
sahf
xchg
add
arpl
test
in
mov
xchg
inc
aas
aas
inc
and
xor
push
jl
and
mov
push
inc
lods
pop
ss
int3
add
push
add
sahf
ins
adc
jo
arpl
stos
inc
arpl
jecxz
ds
call
popf
adc
mov
fwait
sbb
aas
mov
std
sar
retf
jle
mov
push
nop
sahf
xlat
stc
ds
ret
fcom
retf
push
test
jo
arpl
test
in
enter
add
ds
cli
pop
jb
mov
std
daa
dec
repz
inc
xor
stos
inc
stos
pop
popf
adc
(bad)
enter
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
pushf
mov
inc
inc
stos
pop
add
jecxz
xchg
loope
(bad)
mov
mov
(bad)
enter
ds
xchg
(bad)
xchg
inc
aas
jge
and
jecxz
ds
cwde
cmovae
inc
xchg
std
cmp
mov
sbb
addr16
je
test
jecxz
ds
inc
arpl
jmp
xchg
jmp
or
jecxz
mov
(bad)
and
cld
jecxz
int3
add
adc
xor
ss
mov
xor
push
sahf
aaa
push
cmp
(bad)
push
int3
add
push
pop
stos
inc
arpl
in
sbb
jecxz
ret
mov
sahf
jmp
cmp
ds
inc
arpl
push
(bad)
repz
mov
std
mov
out
push
div
inc
aas
inc
int3
cmp
sub
mov
or
sbb
cmps
jecxz
or
dec
sub
sub
fild
mov
push
(bad)
ss
aas
inc
xor
push
jl
and
stos
inc
arpl
xor
mov
les
(bad)
inc
repnz
jecxz
mov
repz
mov
in
(bad)
out
popf
inc
test
dec
arpl
inc
xchg
std
cmp
and
sub
jae
stos
inc
arpl
xor
mov
adc
repz
repnz
jecxz
mov
repz
mov
in
(bad)
out
leave
add
sub
adc
dec
mov
std
cmp
mov
and
data16
loope
(bad)
mov
mov
(bad)
enter
ds
push
retf
xchg
push
int3
sub
cs
inc
arpl
jecxz
ds
sbb
mov
sub
pop
mov
add
sub
(bad)
es
or
test
cmp
mov
dec
lds
jge
adc
stos
inc
push
mov
std
ds
arpl
mov
dec
xchg
and
dec
daa
mov
cmp
sbb
mov
mov
adc
jecxz
ds
ret
je
iret
inc
je
iret
or
out
int3
add
out
or
std
int3
add
out
or
std
push
cld
dec
(bad)
ds
pop
add
mov
sbb
addr16
lods
sub
fninit
std
ds
jmp
or
xchg
inc
mov
into
out
repnz
add
mov
icebp
stos
je
inc
mov
iret
retf
leave
or
mov
add
arpl
cmps
add
or
mov
sbb
std
retf
cmp
addr16
inc
mov
mov
inc
in
ds
xchg
mov
mov
dec
cmp
add
mov
push
arpl
es
mov
inc
mov
into
mov
outs
int3
daa
in
test
enter
arpl
es
mov
enter
mov
icebp
movs
je
inc
mov
push
retf
leave
add
xchg
sub
inc
jnp
int3
enter
ret
std
ds
int3
xchg
mov
inc
in
ds
fadd
xchg
outs
dec
addr16
jmp
push
sahf
mov
dec
arpl
and
cmc
mov
or
in
ds
cmps
xchg
fisub
inc
icebp
movs
je
inc
mov
jmp
out
leave
or
pop
xchg
cmp
inc
mov
arpl
xchg
aas
mov
mov
aas
xor
jae
xor
ret
cmp
sub
mov
sahf
bound
inc
mov
push
arpl
and
out
xchg
(bad)
ror
or
in
ds
cmps
xchg
fisub
inc
icebp
movs
je
inc
mov
(bad)
leave
or
pop
xchg
xor
inc
sub
inc
xchg
mov
cmp
call
mov
ss
ds
outs
mov
mov
mov
retf
xchg
jecxz
dec
mov
int3
sbb
fisubr
addr16
xor
jp
pop
or
outs
int3
ret
dec
daa
and
sub
movs
inc
in
cmp
dec
jg
clc
sub
or
mov
jmp
leave
clc
add
lahf
stos
(bad)
ds
inc
arpl
outs
int3
(bad)
sahf
ja
cmp
jmp
ds
inc
arpl
es
mov
xor
jp
pop
or
outs
int3
inc
jnp
out
leave
out
leave
cld
pop
mov
das
outs
retf
mov
cld
pop
mov
ret
retf
ret
(bad)
adc
outs
inc
arpl
mov
inc
in
ds
das
jb
or
add
outs
int3
enter
fs
std
retf
inc
arpl
es
push
call
sub
inc
mov
add
int3
mov
mov
outs
push
enter
ds
inc
arpl
es
jnp
inc
arpl
add
pop
or
outs
int
jnp
out
enter
std
pop
mov
outs
xchg
aas
mov
mov
mov
jo
inc
icebp
mov
dec
loope
mov
mov
test
inc
sub
retf
mov
mov
std
leave
std
pop
mov
std
pop
mov
ret
retf
ret
and
inc
mov
inc
arpl
xchg
push
in
ds
sub
inc
jnp
dec
arpl
ins
inc
arpl
outs
xchg
retf
mov
std
retf
add
push
add
pop
cs
mov
std
es
xor
cmp
int3
mov
std
test
imul
mov
inc
in
ds
push
and
mov
add
xor
mov
mov
add
rol
std
ds
outs
mov
mov
hlt
pop
shl
and
repnz
xchg
inc
scas
out
mov
std
retf
add
push
push
cli
pop
sub
mov
std
push
cli
pop
push
(bad)
sub
(bad)
es
cld
ds
xor
arpl
ins
or
mov
std
sar
inc
mov
mov
inc
sub
inc
cmp
push
ret
push
xchg
or
mov
xor
aaa
mov
or
inc
xor
sbb
jecxz
retf
es
sub
mov
bound
xor
les
jecxz
inc
jge
std
ds
mov
mov
jecxz
ds
push
push
mov
out
xor
mov
inc
push
push
retf
dec
dec
inc
cmp
push
bswap
les
ins
dec
arpl
popa
add
jg
adc
adc
dec
js
std
(bad)
and
push
enter
int3
mov
jecxz
popf
push
ins
inc
arpl
repnz
add
outs
leave
enter
daa
shl
cld
cmp
retf
or
call
mov
xchg
cmp
ds
sub
jnp
test
enter
ds
pop
mov
les
pop
xchg
add
std
les
mov
add
es
and
or
sub
add
xchg
inc
daa
push
les
add
iret
add
adc
mov
ficom
dec
nop
or
sub
ret
iret
mov
std
ret
mov
or
or
(bad)
sub
outs
push
mov
xor
pop
dec
(bad)
test
xor
push
dec
cmp
sub
jbe
or
cli
pop
and
mov
std
sub
cmp
arpl
xchg
aas
mov
mov
push
in
ds
mov
inc
sub
imul
xchg
ficom
mov
mov
jecxz
cmp
mul
mov
cmp
int
call
stos
aas
mov
std
leave
ja
(bad)
enter
retf
ss
push
jecxz
sbb
or
int3
stc
in
xchg
sub
mov
cmp
(bad)
ds
add
inc
mov
daa
push
std
ds
out
sub
out
mov
fcomip
jmp
and
sub
ja
out
jp
ins
jp
jmp
inc
mov
std
cdq
cmp
mov
cmp
int
out
ds
inc
and
daa
add
or
push
int3
(bad)
loop
pop
and
jno
inc
pop
outs
int3
daa
push
call
sub
mov
fcomip
jmp
stos
aas
mov
std
test
sbb
aaa
aas
pusha
and
mov
(bad)
ds
pop
ret
mov
push
cli
pop
xor
mov
std
dec
inc
mov
push
arpl
jo
in
mov
std
ds
pop
std
dec
fadd
mov
es
inc
or
loop
pop
mov
mov
dec
retf
inc
retf
mov
aas
mov
push
arpl
outs
or
int3
mov
jecxz
dec
loope
dec
mov
outs
inc
arpl
lds
push
ret
enter
mov
outs
in
ds
add
cmp
lds
mov
or
or
xor
arpl
and
pusha
or
inc
sub
retf
push
retf
inc
ds
outs
dec
arpl
xor
add
xor
or
mov
inc
arpl
outs
or
retf
add
mov
std
ds
out
sub
add
retf
xor
movs
call
inc
arpl
pop
mov
adc
mov
mov
std
cdq
cmp
mov
icebp
movs
xchg
aas
xor
jae
sub
jae
movs
out
push
out
leave
dec
js
ds
inc
arpl
outs
inc
arpl
ins
push
arpl
jo
cmp
std
ds
cmp
push
inc
cmps
cmc
pop
aas
sub
addr16
movs
or
arpl
out
cmp
and
xor
ja
mov
xor
cmp
add
jecxz
leave
or
xor
add
push
nop
inc
xor
ja
movs
push
inc
jge
dec
retf
cwde
inc
mov
mov
jnp
add
push
idiv
fisubr
arpl
outs
dec
arpl
outs
inc
arpl
out
cmp
pop
arpl
ins
dec
arpl
ins
inc
arpl
pop
popf
sahf
adc
mov
mov
std
cdq
cmp
mov
icebp
movs
xchg
aas
xor
jae
sub
jae
movs
out
push
out
(bad)
cli
pop
xor
cli
pop
les
mov
mov
std
leave
add
cs
adc
ins
inc
arpl
ins
dec
arpl
outs
dec
arpl
jo
push
mov
push
arpl
push
pop
arpl
outs
jp
fisubr
out
push
arpl
jo
ds
jno
inc
or
mov
sub
pop
cmp
add
sub
mov
arpl
std
ds
int
cli
pop
es
push
arpl
ins
dec
arpl
ins
inc
arpl
pop
movs
sahf
adc
mov
mov
std
cdq
cmp
mov
icebp
mov
jp
aas
sub
jae
sub
jae
movs
out
push
out
leave
inc
js
ds
inc
arpl
outs
inc
arpl
push
fld
icebp
in
ds
clc
stos
aas
mov
std
leave
scas
rep
cmp
fisttp
sbb
adc
arpl
ins
dec
arpl
ins
push
arpl
ins
inc
arpl
push
pop
arpl
outs
jp
fisubr
out
push
arpl
jo
ds
jno
inc
or
mov
pop
mov
std
leave
cli
pop
cmp
add
sub
mov
ficomp
mov
clc
sub
xchg
ficomp
xchg
adc
jecxz
adc
dec
js
std
leave
cld
push
mov
cli
pop
xor
jmp
daa
outs
add
ja
sub
jae
push
aas
mov
or
pop
mov
fimul
add
aas
sub
ja
sub
arpl
sub
arpl
and
pusha
and
movs
mov
xor
mov
mov
outs
push
arpl
jo
or
int3
daa
and
std
ds
sub
outs
stc
retw
inc
cmp
and
mov
mov
ficomp
mov
retf
es
push
arpl
ins
dec
arpl
ins
inc
arpl
pop
fwait
sahf
adc
mov
mov
std
cdq
cmp
mov
je
aas
aas
pop
mov
aas
push
mov
aas
shl
aas
aas
fidiv
aas
aas
cdq
mov
aas
inc
je
iret
pop
outs
inc
arpl
ss
inc
in
or
mov
sub
push
ss
out
les
add
iret
add
cmp
mov
idiv
mov
std
ret
jbe
add
iret
add
aas
fs
ds
inc
fdiv
push
rcr
fiadd
mov
adc
bswap
or
push
add
ds
add
jecxz
xor
mov
aas
mov
(bad)
enter
sbb
pop
sbb
sub
push
pop
retf
xchg
xor
xchg
mov
inc
aas
inc
xchg
mov
cmp
call
mov
ss
ds
jne
aas
mov
mov
imul
mov
push
(bad)
sub
std
leave
adc
std
ds
scas
jg
mov
std
ds
xchg
(bad)
aad
sahf
jmp
inc
mov
dec
arpl
ins
into
retf
sbb
ins
(bad)
mov
daa
mov
sub
push
aaa
(bad)
std
aas
mov
and
mov
std
imul
mov
add
inc
cmp
push
inc
xor
arpl
sub
pop
ja
push
add
pop
jg
mov
std
ds
(bad)
ds
(bad)
enter
sbb
pop
push
pop
jg
cwde
fidivr
pop
mov
ja
pop
sbb
ins
add
inc
je
iret
inc
je
iret
inc
je
iret
inc
and
add
iret
add
pop
inc
mov
sub
ror
ds
xchg
mov
mov
sub
inc
gs
in
ds
cmp
das
adc
sub
ds
xchg
mov
mov
sub
out
aas
inc
inc
gs
in
ds
xchg
inc
and
dec
xchg
and
dec
retf
sbb
pop
call
dec
test
push
mov
into
inc
je
iret
sbb
addr16
int3
sub
fninit
std
ds
jmp
cmp
cmps
aaa
out
mov
std
retf
std
mov
inc
pop
call
or
mov
std
sar
dec
mov
dec
arpl
retf
addr16
jge
and
jecxz
ds
mov
or
dec
arpl
retf
(bad)
xor
sub
push
ds
dec
dec
test
stos
inc
arpl
loop
ds
pusha
ss
mov
push
mov
mov
add
movs
push
aas
inc
sub
dec
inc
add
(bad)
cld
jecxz
xchg
push
jecxz
retf
(bad)
ds
xchg
shl
outs
test
mov
std
imul
or
push
jno
arpl
fcmovbe
pop
jbe
(bad)
retf
cmp
push
outs
inc
arpl
xor
mov
das
push
retf
dec
nop
inc
sub
xchg
pop
jecxz
pop
sub
leave
or
adc
stc
imul
fimul
std
ds
out
lods
out
leave
add
push
pushf
adc
jecxz
cdq
sbb
aas
mov
std
sar
dec
mov
mov
inc
je
iret
inc
je
iret
cmp
retfw
jbe
or
test
dec
arpl
repnz
jecxz
shr
std
cmp
std
inc
lds
inc
mov
mov
inc
pop
add
(bad)
jmp
mov
dec
sub
add
jp
jg
pop
arpl
repz
xchg
imul
dec
inc
movs
(bad)
ds
and
std
cmp
xchg
fisub
mov
(bad)
outs
dec
inc
aas
cmp
mov
or
cli
pop
dec
jb
cmp
pop
mov
std
ds
cmp
push
lds
inc
mov
mov
inc
aas
inc
cmps
lds
mov
sub
cmp
xor
(bad)
push
mov
ins
mov
std
leave
adc
push
inc
nop
ins
pop
arpl
push
mov
push
jl
outs
push
(bad)
ds
sbb
xor
pop
pop
aaa
push
int3
or
xor
or
(bad)
xchg
inc
sub
imul
adc
push
std
ret
jbe
adc
add
inc
int3
or
es
inc
sub
imul
std
push
push
cmp
xor
addr16
jecxz
sbb
sub
ret
jbe
sub
jecxz
leave
cli
pop
sub
or
es
cs
enter
retf
xor
add
ds
int3
enter
ss
xlat
pop
and
ss
adc
cmp
jg
sub
ja
xor
jnp
cmp
lahf
inc
cmp
xchg
aas
sub
xchg
inc
sub
or
xchg
arpl
std
ds
xor
lahf
inc
xor
mov
sub
cmps
inc
sub
mov
outs
xchg
arpl
std
ds
sub
fimul
dec
retf
call
fdivr
ds
push
dec
in
ds
cmp
imul
addr16
outs
mov
in
or
retf
es
sahf
loopne
ds
jo
mov
or
adc
jns
mov
ds
pop
arpl
out
arpl
push
ror
or
adc
jecxz
sbb
std
ds
mov
movs
jecxz
retf
sbb
dec
rcr
pop
jb
aas
add
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
outs
stos
arpl
std
ds
sti
inc
or
repnz
mov
std
leave
inc
or
js
repnz
mov
std
leave
mul
cmp
jno
inc
mov
mov
fadd
ds
jb
inc
push
std
leave
test
nop
inc
xor
arpl
xchg
mov
outs
pop
inc
aas
inc
and
ss
or
inc
retf
push
arpl
outs
dec
inc
aas
cmp
addr16
xor
retf
xchg
ficom
mov
dec
cmp
pop
mov
fimul
out
or
xchg
mov
outs
inc
inc
aas
sub
addr16
mov
push
and
fdivr
das
xor
mov
inc
test
rcl
pop
idiv
(bad)
outs
aas
inc
aas
cmp
jae
xor
ss
xchg
inc
mov
cmc
sbb
pop
ss
push
jecxz
ror
sub
leave
bound
mov
xor
mov
cmp
jno
aas
mov
mov
fisub
ror
fiadd
and
and
addr16
cmp
rol
and
mov
std
mov
stos
inc
arpl
in
ds
or
cli
pop
adc
mov
std
mov
arpl
pushf
sbb
sub
add
js
push
(bad)
movs
out
mov
retf
push
mov
dec
arpl
jo
arpl
int3
loopne
mov
mov
fidivr
(bad)
cmp
mov
std
ds
xor
mov
std
ds
loopne
mov
mov
cmp
jae
inc
xor
xchg
jge
and
mov
std
cmp
cli
pop
push
(bad)
sub
(bad)
es
daa
cld
ds
jnp
ds
pop
pushf
adc
dec
mov
std
ds
test
aas
mov
mov
movs
sbb
mov
fisub
jmp
add
sbb
inc
sub
mov
jmp
and
std
ds
mov
inc
inc
mov
int3
add
iret
mov
pop
icebp
sub
outs
and
std
ds
clc
mov
mov
std
nop
push
cmp
or
loop
ret
cmp
add
(bad)
ds
dec
cmp
mov
cmp
inc
add
retf
and
push
or
aas
mov
mov
fiadd
mov
ficom
mov
ds
sub
xchg
and
xor
mov
aaa
push
test
or
arpl
outs
push
arpl
cmp
add
inc
xchg
aas
cmp
stos
sahf
(bad)
ds
mov
ds
push
arpl
outs
dec
arpl
outs
inc
arpl
ins
push
arpl
outs
push
arpl
ss
retf
ss
xchg
or
arpl
cmp
sahf
cmps
clc
ds
mov
ds
(bad)
test
dec
(bad)
test
loop
and
sub
leave
add
sub
pop
mov
pop
(bad)
cld
jecxz
das
inc
sub
pop
inc
cmp
imul
ja
push
std
(bad)
cli
pop
jb
cli
pop
push
cli
pop
xor
mov
std
(bad)
cli
pop
jp
cli
pop
and
xchg
ins
and
std
ds
sub
scas
inc
sub
jg
cmp
mov
fld
ds
xchg
fisubr
ds
inc
arpl
jecxz
ds
inc
arpl
pop
mov
int3
or
outs
test
fimul
cld
push
sbb
aas
push
jno
arpl
retf
jle
mov
sti
addr16
push
outs
int
data16
aas
inc
xor
pop
inc
cmp
jae
sub
arpl
xor
add
imul
and
aas
sub
xchg
and
mov
std
xchg
aas
xor
xchg
inc
jo
div
xor
xchg
fidiv
dec
retf
inc
xchg
or
jecxz
jmp
add
sbb
inc
repnz
jecxz
mov
sti
ret
ret
fiadd
in
mov
std
daa
pop
loope
ds
sub
jnp
xor
imul
arpl
push
std
(bad)
cli
pop
jb
cli
pop
push
cli
pop
es
xchg
fisub
ds
inc
arpl
outs
inc
arpl
ins
mov
in
ds
push
std
(bad)
cli
pop
outs
retf
ds
aas
mov
xchg
inc
sub
push
inc
xor
pop
jecxz
cmps
push
sub
sub
int3
sbb
jecxz
mov
sti
in
mov
std
test
jo
arpl
dec
add
cld
jecxz
int3
add
sbb
xor
add
inc
sub
push
and
dec
retf
test
mov
pop
mov
(bad)
xchg
fidiv
push
enter
retf
mov
mov
dec
xchg
pop
outs
dec
arpl
jo
arpl
ss
xchg
sahf
mov
ds
mov
arpl
sub
arpl
test
std
ds
jecxz
lock
std
ret
jb
inc
xor
push
inc
cmp
nop
or
adc
mov
int3
ja
mov
test
mov
inc
arpl
sub
arpl
test
std
ds
jecxz
mov
cmp
ret
fiadd
std
ds
inc
arpl
xor
test
jecxz
inc
mov
std
daa
sbb
std
ds
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
out
xchg
inc
xor
enter
or
std
leave
or
mov
mov
(bad)
ds
dec
add
push
sbb
ds
std
daa
xchg
jbe
aas
inc
stos
mov
jecxz
ds
inc
rol
inc
sub
sub
idiv
sar
jns
inc
cmp
xchg
nop
inc
mov
dec
xor
ins
or
mov
std
cdq
inc
leave
pop
add
je
iret
inc
je
iret
or
arpl
push
mov
arpl
push
push
xchg
inc
pusha
and
mov
ds
mov
fisttp
(bad)
into
imul
movs
add
xor
les
adc
add
mov
inc
je
iret
cmp
or
(bad)
xor
inc
xor
adc
dec
jns
pop
arpl
ss
aas
out
leave
sahf
addr16
rol
inc
adc
test
add
int3
je
mov
test
les
pop
adc
retw
mov
add
fimul
xor
div
mov
ins
jb
fisubr
arpl
outs
leave
retf
out
lahf
out
in
movs
mov
data16
xchg
shl
outs
dec
arpl
outs
jp
(bad)
out
retf
out
add
mov
and
or
retf
and
and
and
lds
xor
leave
retf
mov
inc
test
sub
push
cmp
add
fiadd
add
icebp
mov
mov
pop
jo
inc
pusha
and
int3
jmp
daa
fwait
ins
add
cmp
std
ds
test
add
mov
inc
je
iret
inc
sub
inc
or
push
les
add
adc
mov
arpl
outs
jp
into
jo
mov
add
pop
mov
std
jmp
outs
leave
dec
gs
daa
es
add
cmp
push
les
add
ret
ds
xor
push
sub
mov
sahf
ins
jp
retf
retf
sti
inc
mov
mov
push
cmp
add
pop
outs
dec
arpl
out
xchg
sub
push
sub
pop
retf
sbb
jg
add
iret
inc
pop
call
mov
inc
je
iret
inc
je
iret
or
jb
mov
dec
mov
jbe
lods
xchg
std
daa
xchg
std
ds
data16
std
arpl
rcr
xor
std
leave
scas
inc
pop
add
out
std
ds
fcomp
js
std
test
cmp
lock
scas
inc
pop
add
cmc
std
ds
fcomp
js
std
xchg
sahf
cmp
aas
mov
test
inc
pop
add
inc
rol
inc
aas
push
ret
aas
aas
pusha
ret
aas
aas
ins
ret
aas
aas
ins
ret
aas
aas
jl
aas
aas
mov
aas
aas
mov
aas
aas
inc
je
iret
inc
je
iret
cmp
es
inc
inc
and
mov
(bad)
ds
jp
out
push
(bad)
ds
data16
mov
or
daa
fwait
in
aas
and
push
xchg
inc
xor
push
sahf
or
inc
mov
inc
arpl
push
hlt
(bad)
sahf
aas
or
mov
xor
fisubr
pop
mul
mov
retf
mov
out
dec
daa
into
out
std
mov
out
addr16
push
int3
dec
dec
mov
call
dec
pop
int3
cld
dec
mov
call
je
jecxz
sar
das
inc
xor
dec
sahf
in
inc
mov
les
fisub
mov
add
les
aas
and
aas
aas
xor
aas
aas
xor
aas
aas
les
aas
dec
les
aas
dec
les
aas
inc
je
iret
cmp
es
or
push
retf
ds
pop
sti
dec
cmp
add
mov
sub
aas
mov
inc
arpl
push
ret
dec
cmp
add
mov
push
inc
icebp
ror
inc
pop
and
and
xchg
aas
push
or
aam
add
mov
cmp
enter
inc
cmp
add
mov
ds
test
ret
jecxz
aaa
mov
jecxz
leave
xor
imul
mov
dec
test
retf
push
dec
test
test
inc
adc
cld
jecxz
mov
mov
mov
mov
or
sub
leave
or
xchg
mov
stc
ror
xor
aas
push
cmp
adc
or
or
gs
mov
(bad)
test
dec
(bad)
xchg
pop
ss
enter
ds
xor
mov
inc
arpl
xor
mov
mov
inc
aas
mov
mov
mov
push
lea
push
or
adc
mov
and
push
jmp
inc
or
add
movs
or
cmp
add
dec
inc
cmp
retf
dec
test
push
jecxz
or
sub
(bad)
cld
test
pushf
adc
xchg
(bad)
cmp
xor
pop
sub
xor
jae
inc
mov
dec
test
retf
push
dec
test
xor
jb
inc
cmp
inc
pop
dec
dec
movs
add
inc
cmp
retf
mov
pop
int3
inc
cmp
push
ret
enter
dec
cmp
ds
push
inc
inc
xor
enter
int3
or
push
xchg
or
sbb
addr16
push
aaa
lds
mov
xchg
cli
pop
xor
dec
lds
aas
push
and
push
and
push
and
push
and
aas
push
and
cld
jecxz
test
outs
dec
arpl
xor
loope
out
sar
(bad)
retf
sahf
icebp
mov
pushf
lds
call
mov
mov
mov
std
adc
addr16
std
popf
adc
xor
adc
addr16
std
into
inc
je
iret
inc
je
iret
inc
je
iret
cmp
dec
xchg
or
push
retf
(bad)
retf
dec
jmp
mov
pop
(bad)
cld
jecxz
xchg
test
xor
repnz
adc
jbe
jns
std
ds
ficomp
fstp
clc
mov
or
jecxz
aaa
inc
jmp
test
dec
imul
aas
inc
mov
sbb
cld
xchg
out
dec
arpl
ins
inc
arpl
retf
ret
and
ficomp
out
pushf
out
ret
lods
pop
add
iret
add
cld
out
pop
or
ror
sahf
cmp
inc
mov
hlt
mov
push
mov
inc
push
jecxz
pop
and
and
inc
mov
std
mov
push
mov
inc
push
outs
inc
arpl
xor
cmps
sahf
out
retf
add
inc
push
cli
pop
and
mov
std
add
ja
dec
or
xor
cld
push
mov
aas
inc
inc
and
and
addr16
and
push
xchg
mov
leave
(bad)
cld
jecxz
int3
add
and
fcom
add
inc
sub
pop
inc
cmp
arpl
movs
dec
retf
ds
sahf
out
in
mov
dec
arpl
ins
inc
arpl
xor
mov
(bad)
aaa
sahf
out
leave
and
sub
cli
pop
es
arpl
dec
push
aas
and
jmp
in
add
in
xchg
or
xor
inc
aas
inc
push
and
mov
outs
inc
cmp
mov
pop
or
add
(bad)
retf
xchg
fimul
mov
push
sub
movs
mov
dec
arpl
(bad)
mov
retf
jb
mov
dec
mov
std
mov
add
pop
dec
test
dec
les
ds
mov
and
pop
shl
mov
fisub
ds
(bad)
test
xor
ds
mov
pop
jecxz
mov
cli
pop
cmps
cld
jecxz
aas
inc
cmp
outs
inc
xor
stos
lods
mov
and
inc
js
mov
mov
dec
mov
std
nop
inc
cmp
xchg
push
xor
dec
test
push
ds
push
outs
inc
arpl
xor
sub
adc
jbe
add
mul
mov
sahf
mov
adc
test
arpl
xor
xchg
loop
adc
test
arpl
xor
xchg
out
dec
arpl
stos
inc
arpl
sub
xor
sbb
and
or
daa
mov
add
adc
test
add
jecxz
ds
aaa
dec
test
aam
xchg
mov
int
cld
jecxz
mov
push
xchg
mov
add
add
push
xor
std
jmp
xchg
ret
retf
dec
test
pop
outs
mov
in
ds
outs
and
std
ds
xor
dec
test
ss
ds
mov
test
xor
aas
adc
test
add
jecxz
mov
push
cmp
add
push
xor
std
jmp
xchg
fimul
inc
and
addr16
pop
outs
dec
arpl
xor
xchg
xor
or
adc
or
(bad)
popf
adc
pop
ret
rcl
mov
or
jb
mov
fidiv
inc
sub
jp
pop
add
(bad)
cld
jecxz
mov
xor
xchg
aas
bound
sahf
adc
add
cmp
push
retf
sbb
or
push
jb
ins
inc
arpl
ins
inc
arpl
ins
inc
arpl
ins
inc
arpl
jo
arpl
ret
idiv
mov
test
mov
fimul
mov
mov
dec
pop
mov
sahf
sti
stc
ds
push
arpl
jecxz
ret
mov
iret
inc
je
iret
cmp
inc
xchg
inc
inc
and
fidivr
push
xchg
or
push
daa
jmp
lock
popf
adc
mov
add
xor
mov
out
jp
pop
or
adc
cmp
xchg
inc
xor
imul
and
aas
pusha
and
aas
pusha
and
jmp
out
retf
cli
pop
cmp
add
es
or
out
scas
jecxz
ret
or
mov
loope
mov
data16
inc
sub
mov
fidiv
out
mov
std
retf
add
push
daa
pop
mov
inc
cmp
imul
lods
mov
dec
ds
aaa
dec
test
jmp
jp
out
(bad)
xor
adc
cli
pop
push
arpl
dec
or
inc
retf
inc
retf
sub
jp
inc
aas
push
jno
arpl
retf
dec
sub
(bad)
mov
(bad)
hlt
pop
shl
out
call
aas
mov
mov
fisubr
mov
or
mov
push
aas
and
ds
sub
arpl
jecxz
int3
add
dec
xchg
pop
ins
inc
arpl
int3
sar
jecxz
push
sub
xor
mov
outs
push
arpl
ss
daa
popf
mov
dec
sahf
out
jmp
mov
dec
arpl
outs
(bad)
push
cli
pop
push
xchg
(bad)
xlat
rol
aas
inc
xor
push
sahf
jecxz
inc
mov
inc
arpl
xor
sbb
jecxz
retf
xchg
stos
xchg
aas
bound
mov
xor
push
push
cmp
bound
retf
cmp
sub
dec
daa
bound
aas
cmp
push
daa
pop
bound
aas
cmp
es
test
aas
adc
aas
add
cmp
push
int3
add
(bad)
es
sub
push
and
gs
ss
mov
and
out
inc
mov
mov
arpl
jecxz
(bad)
cmp
mov
sahf
adc
ds
dec
arpl
push
aas
inc
stos
pop
ret
mov
iret
inc
je
iret
inc
je
iret
inc
sub
inc
push
int3
clc
mov
mov
rol
retf
or
into
stos
inc
arpl
ret
xchg
test
retf
aam
mov
test
jp
pop
adc
fisubr
aas
dec
push
enter
cmps
(bad)
ins
push
inc
aam
inc
jmp
jo
inc
push
push
out
mov
mov
sahf
jg
inc
mov
ret
test
test
pop
inc
jp
pop
xor
cld
out
xchg
test
push
adc
(bad)
mov
popf
xchg
cld
jecxz
lods
ret
dec
icebp
test
dec
push
int3
xchg
mov
mov
int3
test
inc
pop
pushf
jmp
in
mov
retf
dec
(bad)
sahf
and
ds
add
int
dec
dec
or
jg
xor
std
retf
ret
xchg
sbb
ds
(bad)
int3
retf
enter
pushf
adc
inc
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
cld
jp
mov
ret
stos
pop
add
in
(bad)
cld
jecxz
iret
inc
je
iret
inc
je
iret
jmp
jae
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
out
out
stos
add
dec
sub
mov
cmp
adc
jp
mov
cmp
push
int3
add
(bad)
es
push
and
in
pop
ss
mov
and
test
push
dec
arpl
jecxz
(bad)
cmp
mov
sahf
arpl
ds
dec
arpl
imul
ret
mov
iret
inc
je
iret
inc
je
iret
cmp
push
int3
add
(bad)
es
push
and
in
pop
ss
mov
and
mov
(bad)
jo
arpl
jecxz
(bad)
cmp
mov
sahf
jae
aas
mov
dec
arpl
push
pop
ret
mov
iret
inc
je
iret
inc
je
iret
or
push
xchg
and
in
xor
std
jno
addr16
test
push
aas
or
cmps
mov
dec
or
push
hlt
xchg
mov
pop
adc
xor
mov
sahf
cmps
pop
inc
mov
ret
test
test
pop
inc
jp
pop
xor
cld
out
xchg
test
push
adc
(bad)
mov
popf
xchg
cld
jecxz
lods
ret
dec
icebp
test
dec
push
int3
cdq
mov
mov
int3
lea
mov
mov
mov
test
mov
mov
cmp
pop
mov
xor
daa
ds
ds
and
jp
jmp
xor
outs
les
mov
mov
inc
je
iret
inc
je
iret
cmp
push
int3
add
(bad)
imul
inc
sub
push
and
gs
ss
mov
and
xchg
add
mov
arpl
jecxz
(bad)
cmp
mov
sahf
repz
ds
dec
arpl
add
inc
stos
pop
ret
mov
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
inc
lds
aas
mov
mov
fiadd
lds
inc
add
idiv
cmps
push
aas
ss
mov
arpl
mov
div
cmps
push
aas
sbb
push
cli
mov
std
ds
(bad)
mov
dec
aaa
xchg
mov
sub
mov
fwait
add
mov
pop
add
pop
adc
cmp
sub
arpl
out
dec
outs
call
rol
clc
xchg
adc
mov
jae
ss
add
mov
sub
mov
fnsave
mov
arpl
pop
pop
pop
idiv
cmps
push
aas
fimul
mov
arpl
mov
out
dec
ss
add
in
mov
mov
std
cdq
js
std
mov
ss
inc
div
ja
out
dec
outs
jmp
ds
rol
mov
into
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
mov
sar
mov
jae
inc
xor
test
jge
cli
aas
mov
std
leave
test
dec
jae
cli
xor
dec
(bad)
test
outs
int3
mov
loop
addr16
sub
test
mov
std
retf
inc
cmp
retf
mov
(bad)
retf
(bad)
enter
ds
pop
call
cld
xchg
fisubr
std
ds
cmps
jg
mov
dec
xor
ins
or
mov
std
cdq
inc
leave
pop
add
ins
inc
pop
outs
sbb
xor
mov
inc
je
iret
inc
je
iret
cmp
push
int3
add
(bad)
es
add
inc
sub
push
and
gs
ss
mov
and
xchg
mov
jo
arpl
jecxz
(bad)
cmp
mov
or
add
mov
mov
sahf
cdq
jg
mov
les
mov
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
cs
or
xor
inc
xor
enter
pushf
mov
jecxz
mov
jo
sbb
jmp
inc
mov
test
data16
nop
inc
mov
arpl
ror
sbb
dec
sbb
sub
arpl
scas
out
les
in
ds
sub
movs
icebp
cmps
or
ds
in
sar
std
ds
xchg
jno
inc
mov
xor
icebp
pusha
push
mov
test
add
pop
outs
int3
ds
or
push
inc
sub
test
mov
xor
scas
hlt
or
(bad)
in
ds
les
add
dec
inc
xor
jb
neg
in
xchg
hlt
or
jbe
shl
retf
xchg
jne
mov
test
call
jmp
outs
inc
cmovno
push
pop
std
xchg
fisubr
or
dec
xchg
inc
mov
xchg
jmp
sub
std
ds
in
sub
call
xchg
cmp
enter
xchg
ret
dec
aas
cmp
retf
add
outs
dec
inc
or
inc
inc
sub
fsub
movs
mov
xchg
dec
enter
test
out
test
xor
retf
mov
test
out
jb
sbb
jge
(bad)
push
adc
add
std
test
xor
ds
mov
inc
dec
or
jecxz
test
retw
cmps
jae
icebp
(bad)
jb
inc
sub
enter
enter
popf
mov
out
dec
ds
adc
ins
pop
dec
inc
sub
jp
pop
or
mov
ret
inc
push
xchg
sahf
aam
inc
mov
ret
sub
ds
std
daa
std
bound
aas
mov
pop
rol
scas
in
test
repz
add
cmps
add
int3
retf
daa
mov
inc
xor
mov
mov
pop
popf
adc
pushf
js
std
leave
sti
mov
push
sti
(bad)
ds
out
xor
std
leave
sti
iret
cmp
in
dec
daa
aas
pop
add
cmp
pop
popf
jmp
jecxz
ds
mov
cmps
push
aas
inc
je
iret
cmp
push
int3
add
(bad)
es
bound
aas
inc
sub
push
and
gs
ss
mov
and
(bad)
jge
mov
mov
arpl
jecxz
(bad)
cmp
mov
sahf
add
ds
dec
arpl
bound
aas
inc
stos
pop
ret
mov
iret
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
rol
inc
mov
push
xchg
or
les
sub
outs
pop
inc
aas
pop
cli
retf
inc
cmp
adc
aaa
or
jecxz
das
cmp
jae
sub
les
int3
bsr
jecxz
leave
leave
cmp
jecxz
jae
stos
jb
or
xchg
mov
jecxz
add
jecxz
ds
into
jnp
mov
cli
aas
mov
mov
mov
mov
push
int3
inc
sar
ds
inc
cmp
jecxz
ds
and
mov
mov
sahf
cmp
mov
ret
fld
sub
arpl
ds
xchg
and
mov
jae
sub
push
sahf
jmp
inc
mov
ret
test
xchg
aas
push
or
es
xchg
sti
mov
xchg
aas
xor
retf
xchg
inc
jno
cmp
retf
inc
mov
std
mov
sub
ds
std
daa
stc
pusha
add
inc
stos
mov
jecxz
ds
inc
rol
mov
mov
std
add
jb
(bad)
ds
cli
ds
std
daa
leave
pusha
add
mov
pushf
cld
xor
jecxz
mov
jecxz
ds
idiv
mov
xor
lds
out
sar
mov
dec
xchg
std
adc
pushf
js
std
into
outs
clc
out
xchg
je
iret
inc
je
iret
outs
mov
iret
inc
je
iret
inc
je
iret
and
popw
loop
(bad)
mov
mov
(bad)
enter
ds
jmp
cmp
mov
aaa
out
xchg
out
leave
cmp
(bad)
ds
(bad)
ds
xor
icebp
test
sti
fimul
push
retf
(bad)
ds
lds
mov
std
mov
ss
sub
mov
ficomp
dec
int3
or
ss
inc
sub
or
mov
mov
inc
arpl
outs
dec
arpl
jo
inc
inc
xor
jnp
outs
push
arpl
out
xchg
push
xor
out
xchg
out
leave
add
mov
aas
mov
cld
push
mov
pusha
and
inc
cmp
and
mov
scas
in
ds
xchg
aas
inc
and
and
mov
xor
fimul
or
add
push
cmps
xlat
jecxz
aas
inc
int3
mov
or
ds
mov
mov
mov
std
sti
mov
std
ds
push
aas
mov
cmp
sub
push
lds
inc
mov
ss
mov
std
ds
xor
bswap
or
dec
retf
out
iret
in
daa
movs
in
ds
call
cmp
add
and
push
dec
cmp
outs
inc
inc
sub
jp
ins
jb
loop
dec
arpl
bound
retf
cld
push
ins
jp
into
jl
add
mov
icebp
scas
jge
inc
cmps
mov
loope
xchg
js
test
pop
push
retf
adc
arpl
jp
bound
cli
pop
sub
cli
pop
push
pop
cmps
mov
push
arpl
mov
out
sbb
or
sbb
rcl
ret
jp
jb
xchg
mov
xlat
or
out
sbb
pop
sub
jg
out
daa
cmp
aas
inc
lods
mov
loope
xchg
sbb
xadd
scas
out
retf
mov
xchg
(bad)
into
aaa
mov
test
inc
inc
fisttp
or
pop
outs
dec
arpl
cmp
or
pop
xchg
or
nop
cmps
jecxz
int3
add
dec
push
cmp
stos
aas
mov
cld
ds
out
xchg
out
leave
inc
or
popf
adc
(bad)
enter
ds
ret
jecxz
add
mov
or
out
retf
(bad)
ds
mov
inc
sub
mov
mov
hlt
mov
outs
add
mov
int3
ds
call
mov
inc
je
iret
cmp
push
xchg
inc
aad
retf
(bad)
ds
mov
ds
ss
sub
mov
mov
pop
ret
rol
repz
out
jecxz
mov
cli
pop
push
pop
jecxz
inc
or
dec
cmp
(bad)
ds
push
arpl
outs
jp
mov
mov
mov
(bad)
sub
inc
pop
push
jp
pop
inc
retf
dec
nop
and
mov
pop
jecxz
xlat
or
dec
int3
jo
arpl
mov
xchg
push
outs
dec
arpl
outs
jp
ret
arpl
outs
inc
arpl
push
into
nop
or
test
dec
dec
test
(bad)
cmc
mov
test
add
mov
inc
je
iret
or
push
retf
test
jecxz
repnz
in
ds
and
jp
ins
jl
aas
bound
enter
dec
push
jecxz
fisttp
sub
(bad)
xor
mov
ret
std
es
sar
mov
es
sar
cli
stos
in
ds
je
iret
inc
je
iret
or
out
daa
dec
jecxz
ds
sub
test
mov
std
xchg
cld
jecxz
add
mov
inc
je
iret
sbb
addr16
int3
sub
fninit
std
ds
jmp
and
loop
cs
aad
ret
and
std
ds
inc
and
sbb
std
ds
daa
std
ds
inc
jecxz
mov
mul
cmc
lahf
out
xchg
or
mov
fisubr
out
lahf
out
retf
cli
pop
push
(bad)
sahf
pmuludq
mov
push
arpl
cmp
add
push
enter
or
sbb
inc
ret
or
xchg
in
ds
sbb
and
push
nop
sahf
scas
out
ds
mov
sbb
dec
daa
adc
ds
in
cmp
sub
std
ds
cmp
dec
and
dec
daa
mov
lods
xchg
stos
in
cmp
sub
std
cmp
(bad)
mov
aaa
push
retf
fs
jecxz
aaa
cmp
push
adc
aas
jmp
push
mov
enter
xchg
sub
enter
lds
in
aas
mov
call
lds
in
aas
mov
call
dec
or
xor
mov
xor
aas
push
aas
mov
cmp
js
retf
pop
xchg
or
pop
inc
mov
add
push
ror
cmp
(bad)
ds
mov
cmp
mov
add
jecxz
div
add
and
dec
ds
jecxz
test
stos
inc
arpl
loop
ds
repnz
mov
lock
mov
(bad)
ds
mov
adc
(bad)
enter
ds
ret
in
std
into
popa
fstp
aas
jo
aas
aas
mov
aas
aas
mov
aas
aas
scas
fstp
aas
and
aas
aas
and
aas
aas
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
mov
aam
inc
mov
cs
out
and
std
leave
mov
inc
inc
xor
enter
shr
leave
int
lds
mov
jl
cli
inc
mov
xor
pop
sub
mov
ret
sub
ds
std
daa
dec
pop
add
jmp
dec
xchg
std
ds
inc
rol
inc
cmp
push
je
mov
push
daa
out
jecxz
or
daa
mov
add
inc
xor
ret
mov
mov
std
popf
adc
mov
cmps
add
inc
xor
retf
dec
enter
adc
jp
mov
scas
and
and
shl
cmp
in
or
push
xchg
lds
inc
mov
mov
ficomp
push
aas
mov
mov
ss
and
repnz
jecxz
mov
lds
inc
mov
jge
ficomp
dec
inc
pop
add
mov
mov
(bad)
cli
pop
ds
jne
and
lds
xlat
jg
push
ret
enter
enter
dec
inc
xor
aas
mov
fisttp
sub
aas
mov
inc
arpl
pop
push
das
pop
sbb
mov
std
nop
sahf
daa
add
mov
ret
inc
pop
call
sar
adc
dec
jne
and
das
rep
aaa
and
push
enter
daa
push
jno
aas
cmp
inc
arpl
popa
push
add
call
inc
arpl
outs
test
dec
push
dec
xlat
out
and
std
sar
add
std
mov
aas
or
cmps
mov
dec
or
push
hlt
xchg
fmulp
add
and
es
dec
arpl
jo
addr16
jmp
aas
mov
xchg
aas
sub
daa
and
aas
inc
cmp
arpl
fs
je
and
stos
add
mov
std
(bad)
or
xchg
ret
arpl
dec
lds
and
xchg
aas
push
sbb
and
xchg
cmp
add
mov
jle
mov
xchg
aas
push
and
pusha
and
jno
aas
mov
xchg
add
js
jbe
(bad)
enter
dec
inc
jns
ds
mov
in
ds
sub
jbe
std
ds
pusha
and
inc
mov
fs
mov
sub
add
push
xchg
movs
xchg
inc
sub
imul
fs
std
ds
scas
mov
inc
int
cmp
mov
add
and
int
xor
retf
retf
push
ret
add
test
xrelease
(bad)
add
mov
add
ds
sub
repnz
add
sub
dec
lds
ds
mov
xor
sub
inc
and
enter
retf
mov
jmp
test
xor
adc
js
in
and
push
retf
sbb
lds
ds
mov
ficomp
mov
ret
inc
jge
les
in
ds
push
jg
cmp
sar
imul
cmp
cmp
test
inc
arpl
inc
pop
pushf
adc
out
jecxz
add
aas
jg
pop
in
ds
mov
inc
je
iret
inc
je
iret
cmp
push
retf
sbb
jmp
in
arpl
(bad)
out
sub
mov
retf
arpl
push
jmp
xchg
sub
xor
pop
and
jno
inc
mov
cmp
lds
inc
mov
mov
mov
outs
les
mov
and
jecxz
enter
mov
scas
and
inc
std
ins
jp
(bad)
outs
int
xchg
in
ds
add
sub
inc
enter
test
mov
push
shl
call
push
dec
aas
cmp
enter
pop
inc
stos
xchg
jnp
lds
jecxz
ds
push
add
and
xchg
mov
outs
test
pop
mov
mov
test
lds
xor
inc
arpl
push
(bad)
ds
mov
mov
std
jno
ins
push
(bad)
ins
inc
arpl
outs
imul
xor
imul
jl
inc
out
jmp
and
mov
std
imul
ds
outs
out
enter
ret
jnp
jmp
out
adc
mov
fisttp
movs
fimul
outs
ror
or
add
scas
mov
mov
outs
inc
arpl
jo
das
inc
pop
and
xacquire
pop
and
sub
sub
mov
push
int3
enter
mov
shr
arpl
outs
dec
arpl
out
mov
sub
pop
aas
xor
pop
lds
ds
pop
popf
inc
cmps
pop
call
xor
adc
push
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
push
les
push
xchg
lds
aas
mov
mov
int3
repnz
jecxz
movs
cmp
dec
cmp
xor
sbb
jbe
mov
sub
jecxz
enter
cmps
les
scas
ror
ret
arpl
ins
inc
inc
xor
dec
inc
sub
jp
ins
push
into
repnz
mov
std
sar
sub
add
or
arpl
retf
xchg
cmps
mov
add
mov
(bad)
ds
push
rcr
dec
mov
jb
fisubr
enter
inc
inc
sub
push
ja
add
pop
outs
enter
and
or
aas
mov
lock
xor
push
and
jle
mov
std
ds
xor
std
test
cmp
retf
mov
test
inc
inc
mov
ret
stos
pop
sahf
adc
add
jmp
in
ror
je
iret
inc
je
iret
inc
je
iret
and
data16
(bad)
mov
mov
(bad)
enter
ds
jmp
cmp
mov
out
test
aas
bound
xor
mov
(bad)
test
aas
bound
xor
mov
ss
ds
je
(bad)
ds
mov
leave
test
les
jnp
aas
sahf
xor
ds
push
xchg
or
sub
leave
add
push
enter
add
ret
jecxz
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
ins
gs
mov
ret
stos
pop
add
jecxz
mov
sub
mov
mov
(bad)
enter
ds
push
retf
xchg
cmps
jnp
aas
inc
sub
jb
pop
lds
cli
pop
adc
jecxz
mov
cmp
je
jecxz
ja
cmp
mov
or
ds
out
sbb
call
lds
mov
push
aas
mov
dec
enter
daa
ret
dec
add
aas
mov
xchg
cmp
std
ds
mov
mov
(bad)
in
sbb
std
(bad)
xor
xchg
inc
sub
aas
sub
push
sahf
mov
dec
arpl
retw
bound
xor
xchg
aas
icebp
std
ds
add
cmps
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
test
mov
mov
push
in
cmp
aas
mov
dec
daa
inc
dec
add
cmp
add
mov
pop
add
mov
pop
aaa
mov
jmp
call
push
dec
aas
cmp
enter
xchg
into
ins
push
pop
aas
cmp
enter
xchg
fisubr
aas
cmp
push
not
bound
mov
xchg
aas
cmp
push
mul
std
ds
xchg
aas
cmp
enter
(bad)
sbb
lahf
or
rcl
sub
mov
mov
std
leave
test
sti
ret
lock
xor
dec
cmp
in
inc
cmps
sbb
mov
xor
enter
retf
int3
mov
outs
aaa
ret
xchg
cmps
add
pop
lock
xchg
mov
std
leave
pop
fs
ds
dec
arpl
push
ror
or
push
mov
pushf
adc
mov
mov
inc
loope
add
xlat
mov
ret
cmp
sub
mov
cmp
std
ds
mov
xlat
inc
in
ds
jl
aas
mov
xchg
dec
in
ds
jl
aas
mov
xchg
push
in
ds
jecxz
popf
adc
xchg
cmp
inc
adc
inc
aas
sub
enter
add
mov
inc
je
iret
cmp
inc
mov
pop
add
out
xor
sbb
div
pop
mov
iret
cmp
push
xchg
or
mov
jmp
in
jno
sahf
pop
cld
ds
inc
arpl
outs
jp
jmp
cmp
or
adc
pop
js
std
leave
std
out
push
mov
fistp
mov
(bad)
jmp
mov
and
or
cmp
ja
push
add
fld
ret
pushf
jmp
add
dec
mov
lds
push
pop
retf
lds
inc
and
inc
and
in
fiadd
xchg
mov
std
movs
inc
xor
out
aas
cmp
push
ja
push
dec
jle
inc
arpl
or
ds
xor
inc
aam
(bad)
ret
inc
shl
ds
std
jno
outs
out
or
mov
enter
enter
mov
xor
enter
add
sahf
sbb
mov
push
inc
cmp
retf
xchg
or
pusha
pop
mov
xchg
inc
push
les
add
iret
adc
add
sub
outs
(bad)
(bad)
add
int3
sbb
mov
outs
dec
inc
inc
cmp
push
aas
xor
dec
or
daa
(bad)
std
ds
mov
inc
mov
test
jecxz
sub
outs
retf
daa
ret
ds
mov
push
retf
mov
xor
mov
pop
adc
mov
inc
dec
jmp
imul
xchg
sub
les
std
ds
sub
ret
mov
inc
lods
jg
mov
cld
aas
cmp
or
inc
lods
mov
cmp
inc
sub
mov
out
into
enter
retf
xchg
push
ins
jp
mov
xor
inc
mov
jmp
inc
xor
dec
inc
clc
and
daa
mov
movs
or
ds
sub
cmp
push
jp
repz
mov
std
retf
ss
xor
or
cmp
add
mov
aas
cmp
pop
in
mov
js
or
into
mov
add
mov
outs
aas
inc
aas
pop
push
retf
xchg
jge
and
in
ds
mov
jge
test
push
mov
push
mov
inc
loope
mov
arpl
xor
std
imul
jecxz
sub
pop
pop
retf
lds
movs
jb
inc
cld
cmp
ins
sbb
add
(bad)
mov
aas
cmp
jae
mov
and
inc
pop
pop
jbe
cmc
pop
adc
pop
js
std
into
or
out
retf
cmp
repnz
mov
std
div
cmps
add
inc
sub
les
pop
test
(bad)
jecxz
ds
sub
push
cld
xor
ds
cmp
jmp
test
in
ds
inc
pop
push
jecxz
push
or
inc
jbe
or
int3
xor
jb
inc
rol
inc
arpl
jecxz
ds
sub
div
cmps
add
or
mov
jmp
in
ds
inc
push
mov
sbb
(bad)
test
ins
pop
mov
stos
xchg
loop
std
ds
les
mov
inc
pop
push
jecxz
pop
or
(bad)
jns
pop
push
retf
mov
adc
mov
leave
cld
dec
retf
not
mov
shl
mov
xchg
mov
aas
rol
inc
xchg
push
mov
aas
mov
std
push
cs
inc
aas
repz
ds
add
xor
aaa
mov
test
(bad)
sahf
lahf
or
mov
inc
arpl
outs
jl
icebp
cmps
xchg
test
mov
mov
cmp
add
cmp
not
aaa
push
test
outs
adc
inc
mov
xchg
mov
aas
rol
pop
arpl
hlt
mov
mov
pop
pop
aas
adc
sub
push
ds
aaa
push
test
outs
adc
inc
mov
xchg
mov
jecxz
adc
mov
inc
je
iret
inc
je
iret
or
out
retf
cmp
pop
mov
shr
inc
cmp
les
or
mov
adc
test
in
ds
mov
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
push
xchg
inc
fnsave
sbb
inc
push
mov
inc
pop
pushf
jmp
sub
jb
pop
shl
inc
add
(bad)
out
mov
retf
lahf
aas
inc
add
inc
xor
shl
mov
mov
jmp
push
inc
(bad)
out
xchg
push
outs
int
retf
cmp
test
stos
push
jp
push
mov
adc
pushf
(bad)
ds
pop
add
mov
inc
je
iret
inc
sub
inc
or
push
retf
fxch
add
adc
(bad)
push
es
dec
test
ds
mov
fisttp
std
ds
out
cmp
je
ds
pushf
retf
mov
std
leave
cmp
(bad)
ds
push
sub
mov
mov
pop
pop
aas
adc
mov
std
popf
adc
mov
mov
std
call
or
mov
std
call
add
cmps
call
std
ds
push
aas
mov
cmp
sub
jge
pop
in
ds
inc
nop
inc
jb
aas
mov
dec
retf
mov
jecxz
add
cmp
retf
(bad)
ds
or
push
aas
mov
pop
pushf
jmp
jecxz
aaa
dec
pop
xor
cmp
mov
add
out
sbb
aas
mov
dec
daa
test
aas
mov
add
sub
ds
in
ds
xchg
aas
mov
cld
ds
xor
sub
jns
dec
retf
sub
outs
(bad)
(bad)
add
int3
sbb
mov
outs
dec
lahf
inc
call
(bad)
ds
(bad)
aas
sub
mov
outs
mov
mov
std
jns
push
adc
dec
jo
ds
test
mov
std
(bad)
dec
je
ds
add
je
ds
shl
jecxz
leave
test
dec
daa
data16
cmp
aas
mov
cld
mov
arpl
lds
ds
mov
inc
mov
enter
jns
repz
loop
ds
xchg
mov
int3
cmp
mov
mov
dec
in
ds
js
ds
pop
jb
aas
rol
test
mov
std
popf
ret
lds
std
ds
mov
mov
std
call
(bad)
ds
sbb
dec
nop
(bad)
ds
out
adc
std
leave
cmp
(bad)
ds
ret
ins
test
mov
std
popf
adc
mov
mov
std
cdq
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
pop
aaa
push
xchg
or
outs
out
test
mov
enter
enter
inc
aas
and
xchg
in
dec
adc
aas
push
add
outs
pop
inc
inc
sub
retf
sar
repz
and
mov
adc
lods
jae
adc
aas
push
add
ins
mov
inc
repnz
std
ds
and
xchg
sbb
cld
out
mov
inc
lods
sub
icebp
lods
or
ds
hlt
test
imul
inc
sub
jg
sub
sub
std
ds
lods
jle
cmps
imul
sub
xchg
sub
mov
arpl
movq
std
ds
add
mov
std
ds
and
mov
inc
mov
adc
add
repz
mov
inc
inc
inc
sub
jg
fld
enter
les
push
retf
mov
loope
cmp
lds
inc
mov
xchg
cmp
cld
out
cmp
jp
jecxz
jp
repz
lods
repz
mov
cmp
std
(bad)
std
out
test
outs
pop
inc
inc
cmp
retf
leave
jp
repz
jo
inc
cmp
retf
cmp
enter
xor
push
sahf
adc
pop
cwde
js
std
leave
mov
xor
mov
out
sar
xchg
push
pop
pushf
adc
xchg
(bad)
es
push
in
ds
out
or
adc
lods
ret
inc
inc
mov
or
add
repz
or
imul
inc
push
or
out
cmp
sub
jge
mov
jmp
inc
inc
push
retf
push
(bad)
std
out
hlt
mov
std
ret
jbe
push
sahf
adc
pop
cwde
js
std
leave
leave
xor
std
sar
xchg
push
pop
pushf
adc
xchg
(bad)
es
push
in
ds
out
or
adc
inc
inc
mov
or
add
pop
xor
mov
push
or
out
cmp
sub
xchg
(bad)
ins
adc
mov
jo
arpl
outs
retf
(bad)
or
xor
mov
cmp
out
pop
popf
adc
mov
aas
inc
xor
pop
inc
sub
inc
ja
inc
dec
adc
jecxz
adc
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
or
push
xor
adc
cmps
push
aas
inc
pop
push
retf
xor
jle
int
sbb
mov
ins
mov
and
ja
jae
inc
xor
push
adc
jecxz
jo
inc
rol
mov
or
mov
cmps
pop
ror
sti
sub
aas
mov
movs
push
mov
outs
inc
addr16
sub
cld
or
imul
cmp
sub
ss
push
pop
or
popf
adc
add
in
ds
pop
arpl
outs
add
scas
(bad)
addr16
sub
js
sbb
nop
aas
cmp
retf
sub
lock
popf
adc
add
push
xor
(bad)
ins
dec
inc
inc
sub
jb
gs
retf
mov
movs
fiadd
pop
xor
std
aas
aas
gs
ds
mov
cmp
mov
inc
repnz
inc
sub
sub
add
ret
pushf
outs
jl
ds
rol
dec
inc
jmp
push
add
or
xor
inc
daa
add
cwde
in
or
aas
xor
jge
cmps
fs
out
sub
jge
mov
sub
cmp
ret
pop
enter
jb
aas
rol
cmp
repz
jmp
xchg
(bad)
outs
inc
dec
push
int3
rcr
in
cmp
call
pushf
xchg
ds
pop
add
push
inc
xchg
fmul
mov
sbb
(bad)
outs
dec
dec
pop
int3
mov
push
in
cmp
call
pushf
xchg
ds
pop
add
xor
xor
jmp
cmp
leave
std
in
pop
mov
ins
aas
inc
aas
sub
retf
mov
jno
mov
sub
xor
ret
jecxz
ds
aas
inc
inc
sub
int3
mov
jno
mov
mov
fidiv
sub
retf
(bad)
ds
mov
dec
push
int3
add
lds
std
cmp
call
inc
cmp
inc
call
cmps
push
aas
out
jns
aas
mov
jno
inc
das
or
mov
test
mov
std
sar
enter
ds
pop
pushf
jmp
jecxz
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
pop
xchg
or
mov
inc
xor
jb
jno
pop
icebp
scas
push
enter
mov
dec
(bad)
ds
clc
aas
aas
inc
xor
mov
dec
ds
xor
push
shl
mov
xchg
mov
mov
sar
jecxz
ds
inc
fiadd
fiadd
fimul
fimul
jmp
mov
cmp
std
ds
bound
push
xor
loopne
jecxz
sar
daa
inc
sub
retf
push
daa
div
std
ds
push
push
retf
cmp
sub
mov
stos
mov
ret
ss
movs
clc
inc
inc
scas
mov
ret
jo
inc
push
push
int3
or
sbb
shl
idiv
stos
dec
xchg
inc
mov
in
shl
sub
outs
int
sub
std
ds
add
inc
cmp
inc
pop
in
or
push
sahf
jg
aas
mov
inc
pop
inc
xor
int3
or
adc
or
aas
mov
xchg
out
cmp
cmps
jb
inc
cli
dec
retf
push
inc
adc
aas
add
(bad)
mov
xchg
mov
mov
and
ds
mov
ds
add
push
jg
sahf
or
mov
push
jg
test
int3
ret
ds
sub
inc
clc
inc
retf
(bad)
ds
add
inc
xor
int3
mov
jecxz
add
cmp
ds
or
inc
call
mov
push
and
(bad)
imul
mov
mov
jecxz
add
cmp
retf
mov
in
ds
mov
ds
add
inc
jg
inc
xor
int3
mov
jecxz
add
cmp
ds
pop
iret
push
outs
dec
jg
jp
aas
mov
mov
in
ds
mov
push
inc
outs
int3
xchg
or
jecxz
add
cmc
xor
repz
std
push
cli
pop
push
inc
mov
std
leave
add
mov
in
ds
mov
ds
add
cmp
inc
call
mov
jecxz
dec
jg
jp
aas
mov
addr16
call
std
imul
jg
or
dec
xchg
mov
xor
lds
cmp
imul
mov
div
or
jecxz
ds
mov
jo
rol
nop
or
adc
sub
jns
pop
sub
jb
pop
shl
mov
aaa
mov
jecxz
div
inc
ds
popf
adc
add
push
outs
int3
ds
mov
mov
std
(bad)
adc
xchg
adc
lahf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
xchg
inc
sub
les
aaa
xchg
inc
add
cld
jecxz
ds
push
aas
mov
mov
div
dec
mov
mov
outs
adc
inc
mov
xchg
mov
jecxz
aas
mov
jns
jge
cmp
mov
std
cdq
jmp
in
ds
call
adc
sahf
dec
push
inc
mov
mov
jp
les
jecxz
ds
lds
mov
jns
adc
je
iret
inc
je
iret
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
clc
jle
std
ds
movs
or
ds
cmp
repz
mov
push
xchg
or
retf
std
mov
out
test
std
retf
dec
ds
stos
push
test
jecxz
aaa
sbb
ret
or
sbb
std
ds
xor
add
dec
ds
stos
push
test
jecxz
(bad)
imul
pop
inc
call
std
imul
std
retf
mov
outs
dec
inc
mov
cld
xchg
test
sbb
repz
fs
ds
jp
imul
jg
call
std
imul
std
retf
mov
sub
inc
mov
mov
mov
std
ds
mov
outs
test
xor
add
mov
ss
ds
call
std
imul
mov
mov
jecxz
add
jle
mov
mov
ins
jp
push
outs
dec
jg
jp
aas
mov
mov
in
ds
mov
dec
cmp
mov
push
sub
xor
pop
jns
cld
xor
inc
mov
pop
popf
js
std
leave
add
push
aas
mov
std
imul
jle
mov
mov
inc
ins
inc
inc
inc
xor
retf
(bad)
ds
add
jecxz
ds
mov
jo
rol
nop
or
adc
sub
jns
pop
or
int3
xor
sahf
adc
add
inc
sub
jg
in
ds
add
aas
sub
retf
inc
enter
popf
js
std
into
inc
je
iret
or
arpl
cmp
sub
mov
inc
stos
and
mov
std
jp
repz
jecxz
leave
test
aas
mov
std
mov
mov
or
jecxz
leave
jl
in
ja
push
ret
mov
jno
mov
mov
lds
or
cmp
lahf
jmp
cmp
jmp
xor
push
xchg
inc
aas
cmp
add
jno
mov
(bad)
jmp
inc
ja
add
xchg
bswap
leave
stc
jmp
sub
movs
out
aaa
(bad)
mov
mov
nop
inc
xor
push
sti
add
mov
dec
pop
or
adc
or
(bad)
popf
adc
rol
mov
inc
je
iret
inc
je
iret
inc
je
iret
push
push
add
mov
ss
aas
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
mov
test
std
arpl
pusha
adc
ret
ds
mov
arpl
outs
(bad)
cmp
mov
dec
arpl
outs
inc
arpl
xor
add
jecxz
sbb
mov
inc
push
sbb
out
outs
cmovb
clc
pop
popf
js
std
into
jmp
aas
aas
idiv
aas
aas
add
aas
aas
adc
aas
aas
inc
je
iret
pop
cmp
(bad)
aas
sub
inc
sahf
loopne
inc
mov
ret
mov
inc
inc
aas
sub
popf
xcrypt-ecb
cmps
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
and
inc
inc
sub
test
sub
add
js
out
mov
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
push
retf
test
stos
fiadd
xchg
mov
scas
cmc
sub
add
js
out
mov
bound
jecxz
mov
push
leave
mul
test
loope
cmc
sub
add
and
sub
jo
inc
mov
xor
mov
(bad)
fucompp
add
int3
sbb
dec
cmp
inc
jmp
movs
fild
int3
clc
(bad)
mov
add
cmovno
add
jp
cmp
sub
adc
repz
mov
std
leave
cmps
outs
clc
xor
jp
(bad)
mov
cmps
push
jp
pop
loope
mov
outs
fcmovnb
jbe
bswap
sub
and
mov
fdiv
in
pusha
and
movs
push
mov
leave
mov
shl
lods
mov
jb
fisub
pop
(bad)
push
sub
jns
mov
push
out
les
jecxz
ds
aam
cmp
xrelease
into
rcl
jae
inc
sub
(bad)
aas
sub
pop
sahf
pusha
dec
inc
mov
inc
arpl
outs
jb
into
retw
clc
cmp
xchg
outs
inc
inc
cmp
mov
out
int3
or
retf
mov
inc
pop
pushf
adc
inc
js
std
leave
add
push
(bad)
mul
test
lods
int
cmp
add
adc
in
inc
mov
inc
adc
test
add
jecxz
mov
dec
jmp
clc
inc
inc
scas
mov
jp
repz
jecxz
retf
add
call
xor
pop
inc
call
into
push
imul
xor
icebp
in
pop
and
pusha
and
cmps
push
ret
cmp
sub
mov
pusha
push
mov
loope
cmc
sub
add
js
out
mov
test
jb
cmp
std
ds
repz
mov
retf
push
ret
inc
mov
outs
push
inc
inc
stos
cmp
sub
mov
cmp
ds
fnstcw
add
pusha
and
xor
pop
inc
sub
inc
ja
inc
inc
adc
test
add
jecxz
sub
imul
add
add
outs
sar
pop
pop
les
jecxz
ds
aam
cmp
dec
dec
data16
jae
inc
cmp
retf
ret
jp
pop
sbb
sub
pushf
add
mov
mov
inc
fdivp
in
xor
pop
icebp
movs
jae
inc
pusha
and
aad
push
in
les
pop
sbb
adc
and
scas
addr16
ds
icebp
jp
xlat
mov
arpl
in
inc
adc
test
add
jecxz
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
inc
movs
push
retf
push
xchg
inc
dec
push
jp
pop
pop
xchg
or
rcl
std
ds
rcl
icebp
in
iret
pop
popf
inc
sub
enter
sbb
pop
enter
call
push
xchg
or
push
retf
push
retf
jp
(bad)
outs
inc
inc
inc
xor
push
movs
test
in
ds
cmp
les
bswap
add
out
or
mov
inc
jmp
movs
mov
les
inc
arpl
pusha
add
jno
les
int3
in
mov
add
pop
inc
sub
ret
cmp
sub
or
call
cmp
mov
cmps
jae
cmp
mov
sub
mov
cmp
ja
pusha
and
movs
add
mov
jecxz
ds
ret
les
retf
les
out
les
ins
or
jbe
add
push
lds
outs
inc
inc
push
ins
inc
arpl
retf
lea
pop
mov
mov
xor
retf
or
sti
xor
aas
cmp
retf
mov
ins
inc
inc
adc
pop
ret
mov
inc
aas
cmp
push
inc
mov
int3
mov
inc
pop
call
mov
loope
mov
mov
jno
in
mov
std
ds
mov
jae
push
sbb
test
leave
les
cmp
xor
push
ret
add
outs
inc
inc
inc
pop
and
lods
sub
ja
add
pop
or
jbe
add
les
jbe
dec
mov
outs
dec
inc
inc
cmps
cmp
sub
mov
hlt
cmp
push
mov
inc
mov
inc
pop
pushf
adc
inc
js
std
ret
mov
out
pop
inc
aam
or
stos
jb
cmp
jb
inc
std
xchg
movs
add
jl
cmp
sub
mov
jnp
into
mov
outs
outs
cmp
int3
add
lahf
call
jae
inc
lock
retf
iret
mov
outs
push
arpl
outs
xor
out
mov
xor
push
push
sahf
adc
pop
ret
mov
iret
inc
je
iret
inc
and
inc
inc
sub
das
dec
jns
cmc
sub
add
js
out
mov
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
mov
outs
adc
push
shr
inc
inc
xor
push
cmp
sub
add
js
jb
(bad)
movs
out
mov
data16
inc
mov
mov
shr
mul
out
shr
cmc
sub
add
and
sub
jo
inc
mov
ds
xor
mov
adc
jmp
add
sbb
les
dec
arpl
pusha
add
jno
or
jecxz
ds
mov
movs
fild
int3
jo
mov
add
cmovno
add
jp
cmp
sub
adc
repz
mov
std
leave
cmps
outs
clc
xor
jb
(bad)
mov
cmps
push
jp
pop
loope
mov
outs
fcmovnb
jbe
bswap
sub
and
retf
jecxz
ds
fdiv
in
pop
and
movs
push
mov
leave
mov
mov
std
ds
xchg
imul
arpl
movs
fild
stos
mov
push
sub
jns
mov
push
out
les
jecxz
ds
aam
cmp
xrelease
or
xchg
icebp
stos
jae
inc
sub
(bad)
aas
sub
pop
sahf
ror
mov
dec
arpl
outs
jp
into
retw
call
std
imul
xchg
enter
test
push
shr
int3
outs
dec
inc
loope
mov
ret
ss
movs
clc
inc
inc
scas
mov
inc
mov
call
std
imul
xchg
sahf
aas
sub
popf
adc
add
inc
pusha
and
scas
sub
outs
adc
out
mov
mov
ja
sbb
dec
cmp
add
jecxz
ds
mov
movs
fild
fiadd
push
out
push
and
js
mov
clc
retf
jecxz
ds
aam
cmp
dec
dec
rcl
push
inc
inc
push
mul
out
shr
sub
lods
int
cmp
add
psraw
mov
push
and
add
push
mov
std
leave
stos
outs
stc
xor
jp
shr
arpl
rcl
in
mov
icebp
fnsave
inc
fadd
aas
mov
mov
movs
icebp
in
ror
mov
add
sahf
aas
sub
popf
adc
add
cmp
or
ds
call
std
leave
mov
ret
int3
loop
mov
ja
add
pop
shl
pushf
adc
mov
mov
inc
fdivp
in
pusha
and
pop
and
movs
push
ret
cmp
sub
mov
jnp
div
cmp
push
clc
retf
jecxz
ds
aam
cmp
(bad)
cmp
sub
mov
inc
clc
sub
jge
clc
mov
outs
pop
arpl
outs
test
cmp
leave
test
pop
in
retf
push
inc
and
pop
popf
adc
add
inc
cmp
inc
inc
movs
push
retf
push
xchg
inc
dec
push
jp
pop
pop
xchg
or
rcl
ds
rcl
iret
pop
popf
inc
sub
enter
sbb
pop
enter
call
std
into
inc
je
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
or
arpl
push
shl
(bad)
cmp
test
test
cld
mov
mov
std
shl
adc
inc
pop
add
and
cmps
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
or
arpl
push
shl
(bad)
cmp
test
test
cmp
shl
adc
inc
pop
add
and
cmps
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
retf
cmp
in
mov
mov
or
les
pop
retf
or
jbe
bswap
cld
jmp
sbb
xchg
adc
or
jge
add
mov
std
add
mov
les
mov
ror
mov
or
out
retf
cmp
idiv
(bad)
movs
jae
aas
sub
enter
test
outs
je
cmp
jae
jmp
jecxz
sbb
dec
mov
inc
adc
add
inc
je
iret
inc
je
iret
inc
and
and
in
aas
push
cmp
push
cmp
jecxz
mov
sub
pushf
js
std
into
sbb
addr16
ins
sub
fninit
std
ds
jmp
and
fnsave
or
nop
push
arpl
xor
push
cmp
movs
or
ds
xor
inc
outs
in
ds
(bad)
mov
mov
retf
je
mov
mov
(bad)
dec
push
cli
pop
es
mov
std
es
ds
xor
inc
inc
cmp
test
mov
dec
xchg
mov
jns
cld
jecxz
aaa
mov
inc
arpl
bound
pop
and
pop
stc
cmp
outs
add
add
push
nop
inc
mov
iret
jbe
std
ds
xor
inc
jge
and
jecxz
ds
and
pop
inc
aas
sahf
out
stc
cmp
outs
dec
arpl
push
mov
aas
mov
std
sar
inc
mov
mov
inc
je
iret
sbb
addr16
xchg
sub
fninit
std
ds
jmp
and
mov
push
mov
sbb
aas
mov
std
sar
inc
mov
cmp
mov
retf
ds
test
ds
xlat
aas
mov
mov
fisub
dec
cmps
xor
jecxz
mov
jbe
cmp
jecxz
shl
inc
inc
xor
les
mov
push
int3
add
push
daa
and
sti
ds
xor
dec
jge
and
jecxz
ds
aas
idiv
sub
leave
cli
pop
inc
add
and
dec
pop
and
adc
cmp
xor
mov
sub
push
mov
(bad)
hlt
sbb
lods
dec
bound
or
mov
out
ds
sub
xchg
adc
xchg
mov
inc
arpl
xor
aas
mov
mov
retf
add
or
aas
pop
and
ret
clc
cmp
jno
arpl
stos
inc
arpl
loop
ds
jb
(bad)
retf
enter
pop
retf
cs
jmp
icebp
std
ds
add
movs
push
aas
inc
je
iret
aaa
rcl
mov
push
retf
cmp
aaa
test
inc
mov
mov
arpl
out
outs
clc
std
ds
mov
xor
inc
arpl
xor
jge
and
in
ds
mov
cmp
std
mov
inc
xor
adc
ret
jecxz
add
ss
aas
mov
push
push
cli
pop
sbb
jecxz
cmp
mov
idiv
sub
mov
out
mov
or
sub
shr
and
jecxz
stos
or
dec
mov
mov
cmp
cmp
cmc
mov
mov
(bad)
ds
aaa
popw
cmps
sub
nop
mov
add
sbb
fwait
cmp
outs
(bad)
js
jecxz
inc
inc
xor
scas
pop
outs
int3
ds
test
ds
pop
jb
inc
jg
push
out
ds
std
xchg
inc
mov
cld
mov
std
call
push
inc
mov
mov
iret
inc
je
iret
inc
je
iret
inc
je
iret
sbb
addr16
mov
(bad)
enter
ds
jmp
scas
std
js
and
push
adc
xor
sbb
aas
mov
std
sar
inc
mov
cmp
mov
std
leave
std
cmp
daa
mov
bound
add
stc
inc
ret
cmp
xor
push
retf
xor
mov
out
mov
std
retf
rcr
addr16
or
xchg
outs
inc
lahf
inc
xor
mov
daa
add
and
push
int3
add
sub
ds
in
out
out
leave
cli
pop
dec
retf
mov
mov
(bad)
aas
mov
mov
fisub
std
ds
out
cld
out
xchg
inc
mov
adc
in
ds
push
and
pop
dec
jge
mov
arpl
push
(bad)
ds
inc
arpl
mov
cmp
fisubr
mov
lods
loope
int3
add
push
enter
daa
cs
ds
sbb
sbb
les
mov
dec
int3
add
sbb
add
sti
ds
cmp
adc
cmp
pop
inc
cmp
push
lods
mov
enter
and
dec
sti
cmp
pushf
inc
jecxz
sbb
jmp
jae
movs
jb
inc
sub
jg
out
cmp
js
push
or
jle
repnz
outs
push
lahf
inc
jmp
dec
inc
xor
dec
retf
mov
mov
std
cld
push
pop
inc
aas
inc
xor
dec
jl
and
ins
jb
(bad)
retf
fdiv
mov
mov
fisub
xchg
lods
loope
retf
ss
adc
call
dec
xchg
std
cmp
(bad)
iret
inc
movs
xor
jge
in
cld
jecxz
xchg
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
sub
inc
mov
ret
stos
pop
add
outs
out
retf
les
jl
aas
cmp
pop
or
dec
cld
out
ret
jb
mov
outs
xchg
cld
jecxz
iret
inc
je
iret
inc
je
iret
or
nop
aas
xor
test
add
jg
dec
in
ds
jge
inc
mov
std
test
aaa
movs
stos
aas
mov
in
out
out
leave
fwait
inc
ror
outs
jmp
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
ds
ds
xor
ds
inc
test
cld
xchg
ret
test
mov
jecxz
test
jo
sbb
test
push
div
cmps
xchg
aas
mov
dec
int3
add
leave
sti
fwait
add
mov
std
mov
fisub
aad
add
inc
xor
ds
xor
ds
push
test
cld
(bad)
pop
aas
xor
push
sti
mov
call
ret
xchg
sub
dec
inc
std
(bad)
ds
dec
add
(bad)
retf
xchg
int
inc
mov
xchg
repnz
mov
std
leave
or
and
leave
sti
fwait
mov
xor
ds
sar
jecxz
inc
inc
sub
div
jecxz
in
mov
std
test
outs
inc
test
nop
div
in
ds
mov
pushf
std
shr
std
ds
push
pop
retf
mov
xor
ds
jo
mov
hlt
mov
jecxz
sub
dec
add
sti
fwait
mov
xor
ds
dec
test
inc
hlt
mov
jecxz
sub
dec
or
sti
fwait
mov
xor
ds
sub
inc
hlt
mov
jecxz
sub
outs
inc
pop
inc
xor
leave
retf
retf
mov
xor
ds
inc
das
push
jecxz
ud2
sub
ret
jbe
add
mov
jecxz
test
std
ds
inc
cmp
push
xor
mov
inc
cmp
xor
aas
inc
sub
enter
ds
jecxz
js
std
out
and
(bad)
fsub
(bad)
pop
frstor
(bad)
cmps
frstor
(bad)
adc
and
inc
xor
or
and
ror
xchg
or
pop
lds
adc
ds
out
mov
std
shr
std
or
dec
or
jno
aas
pop
and
push
(bad)
jns
pop
sub
pop
or
mov
ret
pop
push
retf
mov
into
ins
jns
aas
clc
scas
popf
adc
ret
mov
mov
jo
in
mov
std
ds
int3
add
jecxz
xchg
fiadd
mov
cmp
xchg
aas
clc
scas
popf
adc
ret
mov
push
icebp
int3
jge
inc
das
push
retf
push
enter
push
addr16
pop
sahf
adc
dec
js
std
leave
stc
(bad)
cmp
sub
mov
mov
data16
mov
mov
std
sub
and
inc
mov
jnp
outs
in
aas
mov
mov
arpl
pop
add
and
push
retf
push
int3
retf
ds
dec
daa
xor
add
inc
das
adc
sub
mov
arpl
outs
test
movs
out
test
lds
xor
dec
dec
pop
int3
jge
mov
dec
mov
add
retf
es
xchg
aas
clc
scas
popf
adc
ret
mov
iret
inc
je
iret
inc
sub
inc
or
mov
(bad)
sahf
adc
ds
idiv
sub
mov
sub
mov
pop
jno
sar
out
push
out
sar
(bad)
retf
inc
mov
mov
inc
xor
adc
test
mov
and
mov
adc
add
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
dec
in
ds
sub
inc
inc
cli
addr16
and
addr16
and
mov
mov
std
(bad)
cld
out
cld
xchg
mov
jae
iret
inc
je
iret
inc
sub
jb
inc
pop
and
fidivr
inc
in
(bad)
mov
fwait
(bad)
ds
pop
add
cmps
add
inc
je
iret
inc
je
iret
inc
sub
jb
inc
pop
and
fidivr
inc
in
pop
push
out
mov
mov
pop
add
cmps
add
inc
je
iret
inc
je
iret
inc
sub
inc
or
out
(bad)
sahf
ja
ds
mov
arpl
xor
or
mov
mov
ds
pop
add
cmps
push
aas
inc
sub
inc
retf
dec
inc
inc
xor
inc
cmp
jnp
or
jb
ret
retf
into
jp
pusha
add
xchg
mov
mov
jecxz
add
out
add
jmp
js
std
jno
cmps
push
aas
inc
sub
inc
retf
dec
dec
inc
xor
inc
cmp
jnp
or
jb
ret
retf
into
jp
pusha
add
xchg
mov
mov
jecxz
add
out
add
jmp
js
std
jno
cmps
push
aas
inc
sub
inc
or
out
pop
and
outs
int3
daa
add
std
cmp
push
inc
sub
dec
or
or
mov
mov
ds
pop
add
jecxz
call
push
aas
inc
je
iret
or
out
retf
cmp
cld
in
mov
pop
or
test
dec
(bad)
test
outs
int3
ds
call
mov
inc
je
iret
inc
je
iret
inc
sub
add
mov
pop
inc
jmp
cmp
xor
jecxz
jmp
repnz
mov
or
adc
call
mov
inc
je
iret
inc
sub
add
mov
pop
dec
jmp
cmp
xor
jecxz
jmp
repnz
mov
adc
adc
call
mov
inc
je
iret
or
mov
or
jecxz
jmp
test
retf
dec
mov
mov
dec
arpl
retf
jle
mov
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
add
mov
pop
push
jmp
sub
add
mov
pop
pop
jmp
outs
pop
arpl
cmp
xor
push
retf
push
daa
and
cmp
pop
inc
xor
xchg
inc
cmp
push
inc
in
xchg
or
dec
pop
adc
jecxz
popf
jmp
jecxz
iret
inc
je
iret
and
push
in
(bad)
mov
mov
(bad)
enter
ds
jmp
or
daa
ret
ds
sub
xchg
inc
xor
(bad)
and
dec
int3
or
or
cli
pop
push
aas
mov
std
es
std
cmp
inc
sahf
mov
dec
arpl
pop
inc
ds
std
daa
mov
std
ds
stos
pop
retf
cmp
mov
add
movs
push
aas
inc
xor
inc
jge
and
sahf
mov
dec
arpl
push
mov
aas
mov
std
sar
inc
mov
mov
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
or
daa
and
std
ds
sub
xchg
inc
xor
(bad)
and
dec
int3
or
or
cli
pop
push
aas
mov
std
es
loop
cmp
arpl
jno
arpl
jecxz
sub
int3
or
jecxz
mov
jecxz
sbb
std
ds
out
shl
std
leave
add
cmp
mov
add
movs
or
inc
je
iret
inc
je
iret
inc
je
iret
and
xchg
in
(bad)
mov
mov
(bad)
enter
ds
jmp
or
daa
xchg
(bad)
std
ds
sub
xchg
inc
xor
(bad)
and
dec
int3
or
or
cli
pop
push
aas
mov
std
es
std
cmp
arpl
jno
arpl
jecxz
sub
int3
jp
mov
jecxz
sbb
std
ds
out
shl
std
leave
add
cmp
mov
add
movs
or
inc
je
iret
inc
je
iret
inc
je
iret
inc
and
mov
inc
je
iret
inc
je
iret
inc
and
ror
je
iret
inc
je
iret
inc
and
mov
inc
je
iret
inc
je
iret
or
mov
(bad)
dec
retf
out
mov
std
ret
jb
inc
sub
dec
cmp
xchg
inc
inc
and
cmc
push
(bad)
or
jmp
and
mov
adc
jae
iret
inc
je
iret
inc
je
iret
or
mov
(bad)
dec
retf
out
mov
std
ret
jb
inc
sub
dec
cmp
xchg
inc
inc
and
cmc
push
(bad)
or
jmp
and
mov
adc
jae
iret
inc
je
iret
inc
je
iret
cmp
push
retf
sbb
cli
pop
adc
or
push
retf
push
enter
leave
cli
pop
push
enter
int3
or
(bad)
test
ins
inc
arpl
out
addr16
mov
add
jp
mov
iret
inc
je
iret
or
arpl
or
retf
push
daa
jb
std
cmp
retf
push
xchg
or
xor
ret
jb
push
xor
xchg
inc
mov
enter
sahf
adc
(bad)
ds
pop
add
jecxz
popf
jmp
jecxz
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
cmp
sbb
out
ds
xor
dec
sahf
add
arpl
outs
dec
arpl
outs
push
arpl
xor
xchg
inc
xor
push
push
xor
and
sahf
pop
add
mov
mov
arpl
loop
ds
lock
jb
aas
mov
ret
jecxz
ds
ret
clc
std
xchg
inc
xor
dec
sahf
mov
inc
mov
test
bound
int3
add
or
ficom
xchg
inc
scas
out
cmps
loope
xchg
sahf
mov
inc
mov
ret
xor
dec
jge
and
jecxz
ds
stc
scas
inc
mov
dec
arpl
inc
pop
div
dec
xchg
std
cmp
(bad)
iret
sbb
addr16
jl
test
jecxz
ds
jmp
daa
mov
cmp
jae
adc
xor
sbb
aas
mov
std
sar
arpl
jecxz
mov
out
in
out
leave
cli
pop
ds
add
adc
cli
pop
inc
aas
mov
std
adc
lahf
inc
cmp
fwait
inc
sub
xchg
pop
outs
dec
arpl
mov
cli
pop
push
nop
inc
xor
xchg
or
xchg
fiadd
dec
xchg
inc
mov
jo
jecxz
retf
add
push
retf
inc
arpl
loop
ds
push
out
mov
adc
enter
ds
ret
or
into
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
xchg
or
out
xchg
aas
dec
out
retf
or
addr16
aas
mov
mov
jbe
ds
(bad)
cmp
lds
aas
mov
mov
outs
dec
dec
inc
cmc
cld
xchg
(bad)
push
idiv
sahf
fdivr
inc
mov
inc
inc
and
gs
(bad)
jecxz
test
stos
inc
cmp
jno
retf
jl
cli
inc
sahf
cmc
movs
inc
mov
inc
out
inc
xor
int3
push
call
sub
inc
xor
daa
xor
sub
inc
aaa
fst
or
xchg
jo
test
out
add
mov
out
repz
jno
outs
dec
xor
ins
or
mov
std
popf
adc
mov
cmps
push
aas
inc
mov
dec
scas
jecxz
retf
mov
xor
retf
mov
inc
cmc
cld
xchg
(bad)
outs
(bad)
retf
mov
jo
inc
pop
outs
dec
dec
or
dec
push
xor
inc
retf
or
mov
jecxz
leave
sti
sti
cmp
jmp
push
retf
cmp
jmp
push
retf
mov
xor
jp
pop
inc
retf
mov
ss
jp
pop
ss
mov
sub
retf
push
int3
sti
mov
xchg
mov
(bad)
aas
xor
test
test
push
inc
inc
sub
les
sub
mov
std
ds
and
int3
dec
(bad)
test
dec
(bad)
test
outs
int3
push
cld
jmp
ds
cld
xchg
mov
movs
jb
jge
(bad)
ds
mov
retf
mov
mov
jecxz
ds
iret
jnp
jecxz
mov
jecxz
sbb
aas
mov
std
cdq
inc
leave
pop
add
jecxz
test
adc
xor
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
dec
xchg
inc
inc
or
inc
aad
test
ins
arpl
push
jno
push
or
int3
test
mov
cmp
scas
aas
mov
mov
jecxz
xchg
mov
repz
ds
les
xor
inc
cmp
jecxz
test
dec
or
movs
add
ja
push
int3
add
std
leave
add
xchg
inc
xor
retf
mov
ins
dec
pop
push
cmp
retf
in
shl
std
retf
add
in
pop
out
add
mov
out
icebp
out
div
xor
mov
mov
pop
popf
adc
pushf
js
std
leave
or
mov
jmp
push
sti
(bad)
ds
out
icebp
out
leave
add
pop
popf
jmp
jecxz
ds
mov
cmps
adc
inc
je
iret
inc
je
iret
or
retf
cmp
addr16
aas
mov
push
retf
or
mov
outs
inc
inc
or
sti
cmc
ds
(bad)
ds
xor
xchg
pop
outs
leave
daa
mov
in
pop
mov
or
jp
(bad)
shr
mov
out
test
push
jl
xor
mov
icebp
fstp
inc
cli
mov
or
out
lods
jecxz
call
sub
mov
or
jecxz
aas
mov
std
mov
outs
inc
dec
std
push
idiv
(bad)
into
add
cld
jmp
mov
mov
std
sahf
adc
rol
mov
inc
je
iret
sbb
addr16
jmp
test
jecxz
ds
jmp
aad
(bad)
ret
dec
cmp
call
mov
dec
arpl
outs
mul
sub
(bad)
ds
(bad)
daa
add
mov
std
ds
or
mov
idiv
ds
xor
inc
sahf
dec
inc
inc
mov
test
or
and
jecxz
ret
fisub
add
mov
std
ds
movs
fs
cmps
add
mov
and
std
ds
retf
or
jecxz
retf
fisubr
aas
mov
and
std
ds
jmp
mov
das
add
mov
and
std
ds
retf
xlat
hlt
mov
repz
mov
and
std
ds
retf
push
repz
mov
aas
mov
and
std
ds
repz
jnp
aas
mov
and
std
ds
retf
sub
mov
aas
add
mov
and
std
ds
mov
add
aas
mov
and
std
ds
retf
add
mov
mov
arpl
jmp
pop
hlt
mov
mov
aas
mov
and
std
ds
hlt
mov
dec
add
mov
and
std
ds
retf
aaa
hlt
mov
adc
aas
mov
and
std
ds
retf
and
mov
xlat
add
mov
and
std
ds
hlt
mov
fwait
add
mov
and
std
ds
repz
pop
add
mov
and
std
ds
repz
and
aas
mov
and
std
ds
jecxz
retf
(bad)
(bad)
ds
and
std
ds
jecxz
ret
fisub
add
mov
mov
fisubr
stos
repz
outs
(bad)
ds
and
std
ds
jecxz
retf
fidiv
(bad)
ds
and
std
ds
jecxz
retf
(bad)
(bad)
ds
and
std
ds
jecxz
retf
fidivr
and
std
ds
jecxz
retf
fidivr
ds
and
std
ds
jecxz
mov
inc
(bad)
add
mov
in
push
or
push
cmp
ds
mov
cld
ds
out
mul
std
daa
adc
std
ds
xor
int3
cmp
ret
jecxz
retf
push
lahf
cmp
dec
adc
adc
mov
(bad)
test
xor
int3
inc
or
inc
mov
(bad)
add
mov
(bad)
ds
jo
mov
cmps
add
mov
and
std
ds
aam
mov
mov
fisubr
aas
mov
and
std
ds
mov
mov
das
add
mov
and
std
ds
mov
retf
(bad)
add
mov
and
std
ds
push
icebp
mov
mov
aas
mov
and
std
ds
or
mov
jnp
aas
mov
and
std
ds
div
mov
aas
add
mov
and
std
ds
mov
mov
add
aas
mov
and
std
ds
into
lock
mov
arpl
jmp
sub
mov
mov
aas
mov
and
std
ds
pop
repnz
dec
add
mov
and
std
ds
add
mov
adc
aas
mov
and
std
ds
out
icebp
mov
xlat
add
mov
and
std
ds
fcomi
mov
fwait
add
mov
and
std
ds
(bad)
icebp
mov
pop
add
mov
and
std
ds
jmp
mov
and
mov
mov
fisub
add
mov
lahf
icebp
mov
out
ds
and
std
xlat
retf
ret
lock
stos
(bad)
ds
and
std
ds
retf
ja
mov
outs
(bad)
ds
and
std
ds
arpl
mov
xor
ds
and
std
ds
fsubrp
mov
idiv
ds
and
std
ds
xchg
out
mov
mov
and
std
ds
jle
mov
jg
ds
and
std
ds
mov
mov
inc
(bad)
add
mov
in
out
retf
add
add
cmp
ds
mov
cld
ds
out
repz
div
outs
mov
jmp
or
mov
std
mov
mov
mov
fisub
add
mov
std
ds
sbb
mov
mov
ficomp
add
mov
mov
aas
mov
std
mov
mov
mov
and
data16
call
in
ds
(bad)
enter
ds
push
retf
jb
mov
jecxz
add
mov
std
es
jb
inc
mov
ret
sbb
adc
es
ds
jb
inc
mov
ret
sbb
adc
or
jb
inc
mov
ret
sbb
adc
std
xchg
add
inc
jb
inc
mov
ret
sbb
adc
jl
add
inc
jb
inc
mov
ret
sbb
adc
ins
xchg
add
inc
jb
inc
mov
ret
sbb
(bad)
pop
xchg
add
inc
jb
inc
mov
ret
sbb
push
daa
cmc
xchg
add
inc
jb
inc
mov
ret
sbb
or
aas
inc
jb
inc
mov
ret
sbb
or
popf
xchg
add
inc
jb
inc
mov
ret
sbb
or
lea
inc
mov
ret
sbb
or
jge
add
inc
jb
inc
mov
ret
sbb
or
ins
xchg
add
inc
jb
inc
mov
ret
sbb
or
pop
xchg
add
inc
jb
inc
mov
ret
sbb
pop
daa
dec
xchg
add
inc
jb
inc
mov
ret
sbb
push
daa
jne
add
inc
jb
inc
mov
ret
sbb
add
aas
jl
and
jo
aas
mov
xchg
add
inc
jb
inc
mov
ret
sbb
add
or
jb
inc
mov
ret
sbb
add
std
xchg
add
inc
jb
inc
mov
ret
sbb
add
jl
add
inc
jb
inc
mov
ret
sbb
add
xor
add
inc
jb
aas
mov
ret
sbb
jmp
and
add
inc
jb
aas
mov
ret
sbb
(bad)
es
xchg
add
inc
xor
cli
pop
push
aas
sahf
ins
lods
inc
mov
int3
push
cli
pop
push
ds
std
daa
scas
pop
add
inc
xor
inc
adc
xchg
std
cmp
mov
inc
sub
add
cmps
mov
inc
pop
iret
and
(bad)
loopne
jecxz
ds
mov
test
jecxz
mov
mov
in
clc
in
xchg
or
mov
or
movs
jae
jmp
jecxz
retf
add
jbe
(bad)
std
ds
xor
push
cmp
cs
mov
std
ds
mov
xor
les
or
sahf
ja
aas
mov
sbb
or
dec
inc
or
inc
mov
xor
in
out
xchg
jecxz
aaa
cmps
sub
cmp
jmp
xchg
out
sar
sbb
mov
fimul
add
mov
dec
jecxz
cmps
mov
inc
aas
and
gs
cmps
sub
cmp
mov
jecxz
repz
add
mov
inc
arpl
ins
inc
arpl
ins
dec
arpl
jo
arpl
test
std
ds
inc
pop
mov
xor
ret
ficom
adc
mov
in
aam
std
retf
add
cmp
mov
add
xlat
add
aas
jl
and
jecxz
inc
inc
loop
or
fcmovne
mov
xor
arpl
fidivr
mov
mov
fidivr
(bad)
aas
mov
dec
cmps
mov
dec
out
xor
jecxz
adc
and
mov
std
cmps
dec
inc
inc
aas
push
int3
push
mov
test
les
jecxz
cmps
dec
inc
inc
aas
and
in
add
std
leave
sahf
addr16
shl
push
int3
out
xchg
out
sar
jmp
dec
mov
inc
xor
outs
inc
mov
std
leave
add
push
xchg
pop
jno
arpl
int3
pop
pop
mov
daa
push
xchg
inc
xor
sbb
inc
arpl
push
push
daa
(bad)
nop
add
cmp
add
adc
push
retf
mov
mov
mov
enter
mov
add
cmp
add
adc
sbb
cli
pop
and
rcl
jb
mov
or
mov
mov
mov
or
cli
pop
push
retf
cmc
sbb
mov
and
push
xlat
mov
repnz
std
ds
jecxz
mov
xor
ret
ficom
adc
mov
in
shl
std
retf
add
es
mov
(bad)
es
xor
dec
jl
and
jecxz
ds
(bad)
sub
jo
arpl
stos
and
std
ds
std
ds
aas
push
aas
mov
mov
ds
cmp
imul
dec
inc
call
sub
outs
push
arpl
push
hlt
int3
add
adc
shl
std
shr
std
ds
xor
dec
inc
cmp
push
or
and
std
ds
dec
xchg
or
pop
pop
mov
inc
mov
sahf
neg
cmp
cmp
ret
ficom
adc
mov
in
xchg
loope
retf
and
std
ds
stos
jae
inc
cwde
and
mov
std
leave
test
(bad)
pop
jbe
sti
bound
retf
out
test
lds
xor
sbb
add
push
retf
adc
pop
ss
inc
mov
inc
addr16
test
dec
mov
fisubr
fs
retf
sar
mov
arpl
add
mov
fidivr
mov
outs
push
arpl
outs
sbb
push
ss
ds
stos
dec
test
pop
adc
mov
dec
arpl
stos
and
std
ds
xor
test
jecxz
mov
pop
(bad)
adc
mov
in
shl
std
retf
add
dec
add
mov
jmp
inc
aas
inc
xor
addr16
and
jecxz
aas
sahf
sbb
mov
dec
arpl
test
std
ds
ja
mov
pop
(bad)
adc
aas
mov
std
ds
lock
mov
mov
retf
popf
adc
pop
mov
mov
jle
(bad)
std
ds
mov
inc
je
iret
sbb
addr16
int3
xor
fninit
std
ds
jmp
or
mov
(bad)
es
das
or
jg
sbb
mov
push
xchg
mov
push
retf
xchg
mov
push
retf
std
jb
ins
push
into
push
dec
dec
or
(bad)
cmp
cld
push
repz
push
int3
inc
inc
mov
mov
inc
sub
xchg
cmp
std
mov
idiv
xor
push
test
push
aaa
inc
aas
inc
lods
cmp
sbb
std
ds
sub
fwait
inc
call
mov
cmp
or
(bad)
outs
out
and
pop
ds
mov
jmp
clc
mov
mov
or
sub
ss
xchg
fiadd
mov
inc
and
cmp
inc
and
or
cli
pop
push
xchg
sub
push
mov
repz
xor
mov
(bad)
ins
inc
arpl
into
or
add
push
retf
xchg
ficom
out
(bad)
loope
push
cli
pop
xor
mov
sbb
call
cli
pop
adc
sub
sbb
repz
mov
std
(bad)
sub
push
retf
push
arpl
outs
inc
xchg
cmp
xchg
inc
in
pop
out
retf
push
jb
imul
sub
add
mov
outs
inc
arpl
sub
das
xor
call
push
xor
inc
sub
dec
arpl
jno
inc
inc
and
ds
or
adc
arpl
movs
out
(bad)
pop
adc
or
cmp
add
push
js
gs
imul
push
iret
add
add
push
jp
or
mov
ficomp
out
xchg
loope
retf
push
jb
iret
push
jp
or
mov
shr
push
pop
(bad)
mov
ficomp
out
xchg
loope
enter
jp
or
dec
inc
and
ds
push
arpl
outs
jb
push
movs
call
mov
fdivr
(bad)
or
push
mov
outs
inc
jae
lods
inc
les
cdq
add
push
mov
or
inc
jp
pusha
push
enter
sub
pop
retf
mov
inc
fdivr
add
pusha
and
mov
mov
mov
std
imul
inc
arpl
ins
jb
fisubr
cmp
inc
add
enter
mov
mov
adc
dec
inc
sub
push
aas
sub
outs
inc
int3
mov
loop
mov
inc
sub
mov
addr16
mov
data16
sub
jecxz
inc
out
mov
dec
cmp
ds
push
arpl
outs
jo
inc
out
mov
sti
mov
fsubr
mov
xor
or
add
retw
mov
jge
std
ds
xor
aas
es
enter
add
pop
push
int3
retf
and
out
leave
add
retw
xchg
cmp
out
mov
std
leave
add
cmp
xor
int3
lea
mov
mov
fldcw
fdivr
mov
cmp
add
jecxz
dec
repz
aas
mov
add
mov
std
ds
int3
jp
inc
iret
mov
mov
out
leave
or
enterw
retf
dec
inc
inc
push
mov
movs
fild
movs
mov
retf
fild
mov
arpl
dec
mov
fiadd
mov
add
arpl
retw
in
xchg
sbb
int3
mov
add
arpl
outs
dec
arpl
ins
add
add
mov
mov
outs
inc
arpl
sub
aaa
aas
pusha
and
mov
mov
fidiv
std
ds
lds
cld
jecxz
adc
loope
sahf
adc
mov
aas
icebp
std
ds
add
movs
push
aas
and
inc
jmp
in
ds
(bad)
enter
ds
push
xchg
inc
mov
mov
cmp
push
ficomp
in
dec
cmp
jnp
mov
adc
mov
dec
dec
inc
aam
test
or
mov
enter
out
std
sar
mov
pop
les
xor
xchg
push
cmc
enter
mov
inc
sub
arpl
cmp
retf
and
stos
outs
push
leave
sbb
mov
addr16
mov
ins
dec
inc
inc
scas
cmp
jbe
add
pop
mov
ret
cmp
push
mov
scas
pusha
mov
add
and
cli
pop
sbb
mov
std
daa
add
lods
std
retf
adc
aas
icebp
std
ds
add
movs
add
inc
xor
arpl
and
jecxz
ds
or
inc
mov
lds
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
xor
sub
xchg
(bad)
outs
add
pop
cmc
mov
push
lds
fsub
std
sar
jp
pop
push
enter
popf
adc
jae
inc
call
dec
daa
ret
aas
cmp
xchg
adc
rol
dec
inc
icebp
aam
dec
aas
push
add
mov
inc
dec
icebp
stos
jae
inc
daa
add
cmp
add
inc
cmp
add
jecxz
dec
repz
aas
mov
add
mov
std
ds
outs
out
mov
push
(bad)
call
add
add
jmp
pop
sbb
ret
and
out
in
scas
and
mov
out
leave
add
push
retf
sbb
jp
xchg
or
pop
sahf
adc
rol
mov
or
mov
sub
dec
test
dec
mov
mov
aas
cmp
push
ret
jle
out
inc
aas
xor
pop
jb
inc
rcr
inc
ror
je
iret
inc
je
iret
and
data16
(bad)
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
aad
mov
out
test
outs
or
cli
pop
push
aas
mov
std
mov
inc
arpl
in
jl
loope
retf
inc
arpl
in
shl
push
retf
(bad)
enter
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
and
movs
jmp
in
ds
(bad)
enter
ds
push
retf
jb
mov
sub
dec
mov
std
ds
dec
mov
jecxz
sbb
loope
int3
add
les
jmp
xor
push
cli
pop
push
ds
std
daa
fld
add
inc
xor
inc
adc
xchg
std
cmp
push
cmps
pushf
in
ds
retf
mov
out
cmps
pushf
in
ds
retf
mov
std
push
dec
cmp
loop
inc
mov
std
retf
add
xchg
aas
bound
enter
mov
mov
ins
jl
aas
bound
enter
popf
jmp
inc
mov
dec
jg
aaa
sar
ins
jl
sbb
pop
xchg
jge
pop
mov
adc
ror
je
iret
inc
je
iret
inc
je
iret
inc
and
jp
repz
add
mov
add
sahf
out
ds
idiv
mov
std
add
movs
jae
outs
dec
(bad)
ds
jl
cmp
adc
jecxz
iret
inc
je
iret
inc
je
iret
or
jb
mov
fimul
ds
stos
mov
cmc
mov
inc
xor
enter
jg
ins
aas
dec
inc
xor
enter
xchg
retf
push
inc
sub
enter
(bad)
into
ins
dec
push
inc
cmp
int3
cld
add
xchg
ror
in
popa
mov
ins
dec
arpl
es
test
ins
inc
outs
inc
xor
enter
xchg
out
jo
jnp
xor
(bad)
aas
cmp
daa
jp
add
jge
dec
aas
mov
std
leave
add
mov
cmp
inc
inc
sub
push
jno
jg
xlat
cmp
dec
mov
or
xchg
or
xchg
aas
sub
add
xchg
mov
outs
out
retf
mov
icebp
mov
dec
loope
mov
sahf
mov
inc
mov
inc
arpl
and
outs
push
movs
aas
out
mov
aas
sub
retf
rol
mov
inc
je
iret
inc
movs
xor
jge
(bad)
ds
xchg
mov
std
cmp
jge
sub
dec
lds
in
std
(bad)
(bad)
adc
ja
je
iret
lahf
out
std
ds
mov
inc
je
iret
inc
je
iret
or
xchg
or
loop
push
sub
dec
daa
pop
add
aas
cmp
mov
icebp
fidiv
inc
sub
enter
enter
mov
sub
dec
ds
adc
ins
jl
inc
sub
jp
pop
or
mov
ret
bound
xchg
sahf
or
mov
ret
pop
ss
adc
ror
je
iret
inc
je
iret
inc
je
iret
inc
in
aas
mov
std
mov
fwait
add
mov
shl
out
ds
mov
inc
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
in
iret
inc
je
iret
inc
je
iret
inc
je
iret
inc
and
mov
inc
je
iret
inc
je
iret
inc
xor
or
fs
mov
add
xor
inc
or
ins
pusha
mov
jae
iret
inc
je
iret
inc
je
iret
lds
mov
inc
je
iret
inc
je
iret
lds
mov
inc
je
iret
inc
je
iret
or
mov
sahf
cmp
ds
push
outs
jmp
pop
xor
scas
out
inc
cmp
add
cmp
inc
mov
(bad)
ds
mov
pop
jns
mov
addr16
ds
mov
sahf
sub
dec
daa
cmps
js
ds
sub
js
sbb
gs
in
shl
std
sar
add
test
xchg
ret
dec
aas
cmp
sub
sbb
mov
sbb
mov
push
mov
iret
and
data16
sub
mov
mov
(bad)
enter
ds
mov
(bad)
(bad)
mov
inc
pop
les
jecxz
lods
pop
in
ds
jecxz
jmp
xor
imul
stc
inc
mov
dec
arpl
xor
sbb
std
ds
in
(bad)
out
retf
add
add
cli
pop
push
ds
std
daa
mov
outs
dec
arpl
jecxz
cmp
mov
fiadd
add
adc
inc
xchg
std
cmp
mov
aam
std
leave
add
push
sahf
sbb
aas
mov
std
sar
inc
mov
mov
inc
je
iret
inc
je
iret
lods
in
mov
inc
and
adc
inc
xor
inc
push
int3
rcr
jecxz
inc
mov
dec
arpl
jecxz
inc
mov
mov
lods
in
mov
inc
sub
inc
jge
std
ds
xor
js
std
leave
cli
pop
add
pop
sbb
add
je
iret
inc
je
iret
inc
sub
inc
aas
in
inc
mov
mov
inc
je
iret
or
push
retf
push
xchg
inc
mov
or
ftst
std
ds
sti
cli
ds
inc
arpl
es
push
call
sub
jne
std
ds
(bad)
retf
out
inc
out
sub
jecxz
test
outs
push
enter
arpl
es
jge
inc
arpl
add
pop
or
outs
int3
inc
jge
out
inc
out
leave
cld
pop
mov
das
add
cld
pop
mov
cld
pop
mov
ret
retf
les
mov
inc
arpl
sub
mov
mov
(bad)
fisubr
daa
ret
ds
das
sub
inc
lods
out
mov
std
int3
and
mov
mov
std
jno
outs
sti
xor
inc
arpl
es
push
call
sub
inc
mov
(bad)
mov
out
leave
cld
pop
mov
movs
add
cld
pop
out
inc
out
leave
cld
pop
mov
icebp
mov
dec
loope
mov
sahf
jle
inc
mov
inc
arpl
cmp
cld
pop
or
ds
jecxz
add
adc
daa
or
aas
adc
call
mov
mov
test
add
mov
mov
dec
arpl
sbb
dec
addr16
cmp
retf
cmp
push
mov
daa
gs
aas
inc
cmp
enter
arpl
es
mov
enter
mov
icebp
movs
je
inc
mov
retf
inc
out
leave
cld
pop
xchg
cmp
retf
add
cmps
xchg
loop
mov
inc
inc
mov
cmps
inc
out
leave
add
mov
movs
aas
sbb
dec
addr16
cmp
movs
inc
pop
sub
jnp
mov
daa
cmc
jno
aas
inc
cmp
jb
dec
xchg
xor
inc
xor
aas
xor
retf
sti
ret
lock
inc
sub
ret
hlt
adc
push
into
retf
add
int
jecxz
test
ins
ss
add
add
jl
or
inc
mov
outs
dec
arpl
es
add
mov
jno
aas
inc
cmp
enter
arpl
cmps
add
or
mov
ret
and
mov
mov
pop
pushf
adc
data16
jmp
in
ds
(bad)
enter
ds
jmp
or
daa
adc
std
ds
xor
xchg
inc
cmp
pop
addr16
pop
jno
arpl
xor
inc
arpl
in
ds
dec
pop
cmp
inc
sahf
repz
ds
dec
arpl
pop
inc
ds
std
daa
add
std
ds
stos
pop
retf
cmp
mov
add
movs
push
aas
inc
xor
inc
jge
and
sahf
or
ds
dec
arpl
push
mov
aas
mov
std
sar
inc
mov
mov
sbb
addr16
pushf
xor
fninit
std
ds
jmp
or
inc
fisttp
addr16
xor
jp
pop
or
outs
int3
ret
dec
daa
or
aas
inc
sub
retf
mov
movs
add
and
push
enter
(bad)
mov
push
mov
inc
push
int3
sub
mov
outs
push
ret
xchg
sub
enter
mov
ins
es
jbe
jbe
add
into
push
(bad)
ds
(bad)
ss
ds
add
inc
inc
sti
mov
inc
int3
std
xchg
(bad)
outs
dec
arpl
outs
push
arpl
ins
inc
arpl
jno
dec
inc
xor
stos
mov
push
or
stc
cmp
icebp
addr16
and
in
inc
out
leave
cli
pop
jb
stos
bound
retf
repz
or
or
sub
dec
test
mov
push
cmp
xor
mov
mov
std
xchg
xor
mov
xor
sahf
and
into
retf
les
mov
mov
icebp
movs
xchg
ficom
int
in
ds
push
and
aas
xor
cmps
icebp
movs
jl
inc
inc
and
sahf
idiv
ds
out
retf
bound
sahf
ja
ds
dec
arpl
retf
pop
cmp
loop
add
pop
dec
jno
arpl
xor
mov
cli
pop
jp
jbe
push
ss
std
ds
jo
arpl
xor
inc
mov
xchg
loop
mov
arpl
outs
dec
arpl
and
ja
inc
arpl
pusha
(bad)
jb
outs
inc
arpl
outs
push
arpl
and
js
inc
arpl
xrelease
mov
retf
ja
mov
sti
les
mov
out
scas
jecxz
retf
push
sahf
adc
pop
mov
mov
add
cmps
sbb
inc
je
iret
sbb
addr16
mov
(bad)
enter
ds
jmp
pusha
and
mov
std
leave
std
pop
mov
ja
add
leave
mov
outs
push
push
ins
daa
retf
mov
js
push
arpl
movs
add
pop
add
leave
mov
outs
inc
arpl
jno
arpl
ins
add
or
cmp
daa
push
(bad)
ds
sub
xchg
aas
sub
fwait
xor
mov
cmp
and
cli
pop
(bad)
retf
dec
ret
sbb
dec
xchg
push
outs
leave
or
jmp
out
dec
test
mov
jno
arpl
retf
sub
mov
mov
cmps
pusha
(bad)
retf
retfw
pop
jg
test
sbb
jp
inc
xor
dec
jge
and
sahf
add
ds
dec
arpl
inc
pop
pushf
adc
dec
mov
std
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
inc
in
retf
push
xchg
mov
add
mov
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
xor
sub
xchg
(bad)
outs
add
pop
in
mov
push
les
retf
out
sar
jb
push
push
enter
pushf
adc
jae
inc
call
std
mov
retw
dec
push
enter
inc
adc
pop
add
push
out
mov
inc
pop
add
push
les
addr16
mov
data16
mov
mov
std
sub
and
inc
mov
jnp
outs
in
aas
mov
mov
arpl
pop
add
and
adc
add
adc
mov
std
nop
sahf
jae
inc
mov
dec
inc
inc
pop
mov
arpl
outs
test
movs
out
test
lds
xor
or
mov
push
arpl
outs
inc
arpl
retw
dec
add
leave
ins
inc
inc
adc
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
lahf
out
std
ds
mov
inc
je
iret
inc
je
iret
push
and
xchg
sub
movs
pop
les
mov
je
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
inc
movs
mov
inc
aas
aas
in
xchg
inc
aas
js
std
into
inc
je
iret
inc
je
iret
inc
in
aas
ret
sub
add
mov
inc
je
iret
sbb
addr16
fdiv
test
jecxz
ds
jmp
jmp
jae
adc
dec
arpl
inc
xchg
std
cmp
mov
jle
int3
push
mov
mov
inc
aas
jge
and
jecxz
cmp
jno
inc
cmp
inc
or
or
mov
lock
aas
inc
sub
inc
push
int3
gs
and
mov
xor
inc
mov
(bad)
dec
(bad)
jge
and
jecxz
ds
imul
mov
ret
xor
inc
pop
jno
arpl
retf
les
(bad)
mov
xlat
bound
aas
inc
xor
dec
jge
and
jecxz
ds
iret
jge
mov
dec
arpl
outs
inc
arpl
jecxz
ds
ret
call
(bad)
ds
addr16
cld
xor
fninit
std
ds
jmp
call
jae
adc
dec
arpl
inc
xchg
std
cmp
mov
jle
sub
mov
mov
inc
aas
aas
sub
inc
cmp
std
ds
jno
inc
cmp
inc
or
sub
mov
lock
aas
inc
sub
inc
push
int3
test
and
mov
xor
std
leave
add
mov
(bad)
dec
(bad)
jge
and
jecxz
ds
mov
inc
mov
ret
xor
inc
pop
jno
arpl
retf
in
mov
out
mov
out
dec
daa
mul
aas
inc
xor
dec
jge
and
jecxz
ds
out
jl
mov
dec
arpl
outs
inc
arpl
jecxz
ds
ret
call
(bad)
ds
addr16
sbb
test
jecxz
ds
jmp
daa
add
push
(bad)
jb
ins
push
sub
std
ds
xor
cld
inc
xchg
mov
inc
aas
cmp
jno
inc
cmp
inc
or
pop
mov
mov
inc
aas
inc
sub
inc
push
int3
mov
mov
in
mov
repz
xor
std
leave
add
mov
(bad)
dec
(bad)
jge
and
jecxz
ds
mov
ret
xor
inc
pop
jno
arpl
retf
adc
mov
out
mov
out
dec
daa
daa
popa
add
inc
xor
dec
jge
and
jecxz
ds
pop
jl
mov
inc
arpl
outs
dec
arpl
ins
push
retf
push
enter
mov
mov
add
movs
add
inc
je
iret
sbb
addr16
cmp
test
jecxz
ds
jmp
jecxz
mov
mov
cmps
inc
sub
mov
and
ins
inc
arpl
ins
jp
(bad)
retf
nop
mov
fidiv
mov
ret
jecxz
mov
ins
jp
(bad)
retf
je
mov
sti
mov
mov
inc
aas
inc
sub
inc
mov
or
daa
ja
add
inc
sub
inc
adc
pop
(bad)
enter
ds
ret
in
std
xchg
inc
xor
imul
dec
fwait
inc
cmp
inc
sub
imul
xchg
enter
add
push
ret
mov
(bad)
dec
int3
add
sub
xor
push
daa
mov
sub
pop
and
jno
arpl
ins
inc
arpl
ins
jp
fmulp
call
xchg
fiadd
mov
(bad)
add
push
jno
arpl
ins
jb
retf
mov
(bad)
mov
fisub
std
ds
out
xor
std
leave
add
cmp
jl
pop
mov
mov
add
movs
push
aas
inc
je
iret
sbb
addr16
pop
xor
fninit
std
ds
jmp
jecxz
mov
mov
cmps
inc
sub
mov
and
ins
jp
ret
arpl
retf
pusha
mov
fidiv
mov
ret
jecxz
mov
ins
inc
arpl
retf
inc
mov
(bad)
mov
mov
inc
aas
inc
sub
inc
mov
or
daa
inc
pop
add
inc
sub
dec
adc
pop
(bad)
enter
ds
ret
in
std
xchg
inc
xor
imul
dec
fwait
inc
cmp
inc
sub
imul
xchg
(bad)
in
leave
add
push
ret
mov
(bad)
dec
int3
add
sub
xor
adc
mov
aas
inc
sub
pop
and
jno
arpl
ins
jp
fisubr
fmulp
mov
xchg
fiadd
mov
(bad)
add
push
jno
arpl
ins
jb
into
retf
add
mov
test
ds
out
xor
std
leave
add
cmp
jl
pop
mov
mov
add
movs
push
aas
inc
je
iret
inc
and
mov
inc
je
iret
inc
je
iret
inc
sub
inc
aas
and
(bad)
iret
inc
je
iret
or
out
xchg
jmp
pop
lds
xchg
inc
aas
cmp
dec
or
pop
adc
inc
ss
mov
jecxz
mov
mov
dec
push
nop
mov
fst
inc
pop
add
movs
es
mov
out
cmps
jecxz
iret
inc
je
iret
inc
sub
inc
or
out
pop
es
mov
in
arpl
std
test
outs
int3
daa
or
std
ds
addr16
and
addr16
and
mov
mov
dec
pop
and
addr16
pop
jecxz
aas
or
(bad)
pushf
js
std
into
cmp
cmp
mov
xor
inc
pusha
and
cmp
arpl
sub
sar
in
lods
mov
cmp
pop
mov
mov
add
ja
add
test
lds
xor
dec
arpl
or
ds
std
push
out
xor
aas
inc
xor
xchg
int3
(bad)
mov
cmp
(bad)
iret
inc
je
iret
inc
sub
inc
or
or
cmps
pop
add
jbe
ror
mov
enter
xchg
lods
int
adc
add
js
out
mov
imul
ds
dec
arpl
jo
arpl
xor
test
movs
and
out
shl
std
test
outs
int3
push
cmp
add
mov
std
ds
mov
inc
mov
(bad)
retf
or
pop
mov
leave
test
pusha
cmp
and
stos
jl
inc
movs
jmp
or
mov
into
retf
or
pop
sar
int3
xor
mov
in
test
add
(bad)
ds
sub
(bad)
mov
cmc
xchg
cld
jecxz
or
mov
test
mov
std
popf
outs
in
ds
ror
mov
inc
je
iret
or
pop
cmp
cmp
jae
adc
add
or
mov
ds
pusha
and
fstp
inc
mov
or
fstp
adc
jecxz
add
inc
rol
mov
or
sbb
cmp
jae
adc
add
or
mov
ds
pusha
and
fstp
inc
mov
or
fstp
adc
jecxz
add
inc
rol
mov
or
out
daa
mov
std
cmp
retf
out
mov
std
ret
jb
inc
xor
inc
mov
cwde
mov
std
ret
jb
inc
cmp
test
out
mov
std
ret
jb
inc
sub
test
mov
scas
in
inc
adc
xor
adc
mov
inc
je
iret
inc
je
iret
inc
je
iret
pop
aaa
push
xchg
or
retf
and
push
(bad)
ds
int3
daa
push
loope
ds
mov
push
retf
adc
jecxz
inc
or
push
inc
mul
std
popf
adc
pop
cwde
js
std
test
outs
int3
daa
and
aas
inc
scas
mov
sahf
imul
mov
leave
retf
in
push
mov
sub
(bad)
pop
add
iret
sbb
or
mov
inc
fsub
adc
jecxz
enter
retf
inc
arpl
push
test
dec
dec
test
lods
jle
jecxz
mov
mov
into
sbb
outs
lds
jbe
add
iret
add
popa
push
jp
pop
or
inc
mov
fs
out
test
outs
int3
daa
add
add
inc
scas
mov
sahf
fcmovne
ds
leave
retf
sub
mov
sub
(bad)
pop
add
iret
adc
push
mov
mov
inc
fsub
push
test
std
retf
imul
xor
or
outs
int3
daa
jmp
push
mov
adc
mov
int3
daa
jle
add
adc
cmps
add
icebp
loopne
push
xor
mov
movs
jnp
jmp
loopne
dec
icebp
loopne
dec
and
push
test
push
and
aas
adc
cmps
add
inc
je
iret
inc
je
iret
or
out
daa
inc
or
aas
cmp
std
mov
out
mov
test
outs
int3
daa
cmp
std
ds
addr16
and
addr16
and
mov
mov
mov
into
inc
je
iret
inc
je
iret
inc
je
iret
and
pushw
jmp
(bad)
mov
mov
(bad)
enter
ds
jmp
outs
out
xchg
or
mov
in
ds
shl
mov
and
std
ds
or
jmp
add
mov
jg
mov
jae
ds
idiv
ins
jp
add
sub
test
or
lds
push
mov
mov
sahf
pop
int3
ds
mov
aas
mov
lods
mov
outs
int3
daa
push
std
or
daa
xchg
fdivrp
or
enter
inc
mov
in
mov
std
retf
mov
fisub
dec
daa
mov
(bad)
cmp
mov
int3
inc
or
mov
jecxz
retf
mov
mov
mov
ficomp
xchg
arpl
std
ds
and
cld
jecxz
sbb
xchg
fisub
inc
arpl
ins
push
arpl
outs
xchg
arpl
std
ds
dec
nop
jl
and
mov
js
retf
mov
std
cmp
inc
js
xlat
mov
std
nop
push
jecxz
inc
or
dec
dec
or
aas
mov
mov
fidivr
ds
add
cmp
xchg
aas
mov
mov
fidivr
ds
xchg
arpl
std
ds
mov
std
(bad)
cmp
push
inc
mov
xchg
fimul
(bad)
ds
and
std
ds
jo
pop
mov
std
mov
dec
retf
xchg
arpl
in
ds
mov
std
(bad)
dec
or
inc
mov
xchg
ficomp
(bad)
ds
call
ja
jo
xlat
mov
std
inc
test
arpl
std
ds
cmp
retf
call
jnp
ds
ror
or
cmp
call
or
(bad)
mov
cdq
xchg
cld
jecxz
retf
fidivr
ds
xchg
arpl
std
ds
xor
push
inc
push
std
leave
inc
or
xchg
(bad)
xchg
fisub
push
arpl
dec
add
loop
adc
bound
dec
inc
mov
(bad)
(bad)
ds
mov
arpl
test
std
ds
xor
aas
push
jno
arpl
in
ds
in
inc
mov
and
std
ds
cmp
mov
stos
push
enter
inc
mov
mov
(bad)
(bad)
ds
mov
in
ds
xor
inc
aas
inc
push
std
leave
inc
or
inc
mov
mov
(bad)
(bad)
ds
inc
arpl
ins
dec
arpl
outs
mov
in
ds
sub
push
aas
cmp
push
inc
js
arpl
xor
or
sub
retf
inc
dec
test
in
ds
and
ja
dec
repz
mov
push
arpl
xor
add
mov
cld
push
push
jno
arpl
in
ds
inc
je
mov
xchg
arpl
in
ds
sub
mov
mov
retf
fimul
(bad)
ds
xchg
arpl
in
ds
jno
arpl
in
ds
ss
push
push
cmp
jo
imul
cs
mov
mov
fimul
(bad)
ds
dec
arpl
ins
push
arpl
outs
xchg
arpl
std
ds
xor
push
aas
sub
push
inc
push
std
test
xor
enter
ds
inc
dec
test
in
ds
mov
arpl
in
ds
sub
push
jl
and
mov
jecxz
pop
and
jl
add
aas
push
and
aas
push
and
inc
jo
repz
std
add
or
nop
mov
dec
int3
add
push
push
pop
add
inc
js
add
dec
dec
test
mov
add
aas
push
std
leave
cmp
ret
jecxz
inc
push
jecxz
(bad)
sahf
cmp
mov
mov
in
ds
dec
enter
inc
mov
cld
push
push
int3
cmp
jo
push
or
stos
and
std
leave
cld
daa
mov
cmp
dec
test
arpl
in
ds
sbb
ds
int
cli
pop
bound
mov
mov
and
mov
int
cli
pop
inc
daa
call
inc
inc
mov
mov
lock
inc
jns
mov
sahf
out
inc
mov
xchg
arpl
std
ds
ins
inc
arpl
retf
mov
inc
aas
xor
jnp
xor
enter
aas
mov
xchg
fidiv
ds
mov
inc
in
ds
mov
add
mov
add
ds
cld
push
jbe
inc
aas
push
jno
arpl
in
ds
and
mov
std
ds
push
xchg
inc
jo
xor
mov
jecxz
daa
mov
aas
push
fs
mov
push
int3
inc
or
inc
mov
ret
ret
fidiv
aas
mov
in
sub
std
xchg
or
mov
fidiv
and
std
ds
mov
jecxz
inc
mov
std
(bad)
bound
bound
jecxz
jmp
dec
(bad)
ds
stos
arpl
in
ds
push
std
(bad)
bound
jp
mov
xchg
fisub
ds
stos
arpl
in
ds
push
std
retf
inc
or
inc
mov
ret
ret
fisub
aas
mov
in
pushf
jecxz
retf
add
data16
ds
and
mov
sub
xchg
mov
std
ds
pusha
and
cmp
ds
dec
inc
or
add
out
leave
or
mov
ficom
out
sub
std
jns
pop
add
iret
add
(bad)
out
xchg
fimul
sbb
cmc
pop
shl
mov
fisubr
std
push
xchg
xor
aas
jge
and
mov
std
xchg
dec
inc
or
ret
fisub
aas
mov
in
sub
std
leave
add
mov
fisub
dec
add
mov
or
cmp
inc
inc
mov
dec
movs
add
arpl
outs
inc
arpl
push
(bad)
dec
inc
stos
add
mov
std
inc
lds
inc
mov
mov
jmp
add
test
in
das
mov
dec
xchg
inc
mov
in
jecxz
retf
inc
arpl
cmp
xor
mov
fisub
cmp
xor
push
retf
les
mov
dec
xchg
inc
mov
mov
scas
outs
inc
arpl
cmp
xor
mov
fisub
add
inc
xor
mov
sub
pop
inc
cmp
push
pop
jno
arpl
xor
push
enter
enter
ds
jg
test
xor
push
xchg
cmp
movs
or
ds
push
std
retf
or
adc
retf
inc
dec
test
xor
push
push
xor
aas
push
jno
arpl
int3
dec
mov
jecxz
mov
fisubr
mov
fimul
pop
shl
cmc
sbb
lods
dec
bound
retf
dec
test
retf
jne
mov
cmps
(bad)
ds
push
arpl
dec
add
pop
sub
retf
inc
or
mov
dec
int3
inc
or
mov
out
leave
cli
pop
push
retf
push
retf
sbb
xor
adc
bswap
cmps
xlat
jecxz
aas
push
xor
into
aas
mov
push
xchg
mov
(bad)
mov
pop
push
retf
ss
inc
push
pop
fxch
cli
pop
sub
cs
cmp
pusha
and
jo
inc
mov
call
imul
and
mov
cmp
lds
inc
mov
mov
inc
pusha
and
out
mov
inc
sub
ja
fadd
aaa
or
or
daa
push
sar
ds
aaa
mov
mov
inc
arpl
outs
inc
arpl
jo
arpl
ins
inc
arpl
jo
arpl
xor
ret
fidiv
dec
enter
ds
jg
test
in
ds
jo
or
or
inc
mov
xchg
fcmovb
(bad)
ds
mov
in
ds
jo
pop
mov
std
retf
dec
or
inc
mov
xchg
fcmovb
(bad)
ds
xchg
fcmove
(bad)
ds
adc
or
inc
jbe
imul
cmp
scas
aas
mov
dec
xchg
sahf
push
les
mov
mov
in
cmp
and
mov
std
jns
pop
or
aas
mov
dec
xchg
mov
int
cld
jecxz
int3
inc
or
rcr
out
leave
cmp
scas
aas
mov
mov
mov
sub
nop
push
outs
and
std
ds
jo
or
dec
mov
(bad)
(bad)
ds
mov
fisub
mov
xchg
fimul
mov
cmp
(bad)
ds
inc
arpl
outs
dec
arpl
pop
mov
ds
xchg
arpl
std
outs
in
ds
dec
arpl
xor
aas
sub
jnp
sub
jg
stc
popa
nop
cld
jecxz
ret
ficomp
(bad)
ds
mov
in
ds
int3
push
mov
and
int3
dec
or
inc
mov
dec
xchg
inc
jo
pop
mov
std
es
dec
add
inc
sub
jae
xor
outs
push
xor
(bad)
ds
jae
mov
pop
mov
inc
jo
add
dec
add
inc
jo
dec
mov
std
pop
and
mov
std
les
aas
or
arpl
in
or
mov
fisubr
out
mov
jo
add
dec
add
inc
sub
jnp
xor
retf
fisub
adc
ficomp
push
nop
inc
jo
add
dec
add
or
mov
fisub
repz
ficomp
out
mov
std
leave
add
push
retf
idiv
or
inc
ja
mov
mov
push
retf
in
sub
inc
sub
mov
fisttp
ds
push
std
retf
or
cs
adc
cmp
and
ds
inc
dec
test
outs
xchg
arpl
std
test
int3
add
xor
pop
sub
retf
cmp
ss
mov
mov
ficomp
out
sbb
std
leave
add
ds
cs
inc
push
std
nop
push
jno
arpl
std
ds
out
inc
mov
dec
arpl
cmp
inc
or
aas
mov
in
and
std
retf
dec
or
inc
mov
mov
ficomp
out
sbb
std
xchg
or
in
ds
(bad)
addr16
mov
inc
arpl
jo
arpl
std
ds
cmp
inc
and
std
leave
add
ds
or
arpl
std
ds
fisub
mov
(bad)
xor
and
cli
pop
inc
xchg
fild
retf
(bad)
loopne
ds
cmp
mov
sub
jnp
mov
into
xchg
std
ds
inc
and
xor
xchg
inc
sub
mov
loope
cmp
aas
inc
and
jo
inc
mov
call
arpl
sar
sti
fisub
ds
mov
mov
pop
es
popa
push
push
outs
inc
arpl
out
xchg
inc
mov
dec
mov
outs
int3
daa
xchg
std
ds
int3
mov
lds
inc
mov
mov
(bad)
std
ds
xchg
fidiv
xor
into
ins
push
(bad)
repnz
or
or
adc
or
aas
inc
xor
push
pop
jecxz
sbb
sub
ret
jbe
add
std
retf
dec
or
mov
mov
ficomp
out
sbb
std
leave
cli
pop
push
retf
push
retf
sbb
xor
adc
bswap
cmps
xlat
jecxz
aas
push
outs
and
std
ds
ss
(bad)
mov
(bad)
fisub
dec
arpl
dec
add
pop
sub
retf
cli
pop
adc
cld
jecxz
int3
add
dec
daa
fcom
aas
inc
pusha
and
inc
cmp
stos
inc
xor
cmps
lods
mov
and
lods
mov
enter
adc
push
sub
retf
add
inc
daa
add
aas
lahf
dec
(bad)
ds
xchg
arpl
std
ds
xor
outs
and
dec
xchg
jge
and
jecxz
ds
pusha
and
stc
pop
nop
cld
jecxz
sbb
mov
fisub
push
ja
sub
jae
xor
inc
aas
inc
js
ja
jecxz
retf
inc
or
daa
test
add
inc
sub
jae
jo
outs
mov
in
int3
inc
or
aas
mov
in
sbb
or
retf
cmp
jp
std
ds
loop
inc
mov
mov
in
ds
jno
arpl
std
ds
xchg
pusha
inc
mov
push
arpl
cmp
inc
or
aas
mov
in
sbb
in
retf
fisub
(bad)
cmps
mov
jo
arpl
std
ds
sahf
gs
mov
mov
fisubr
add
mov
data16
push
sub
mov
jecxz
retf
fidivr
ds
ret
lods
jb
inc
push
std
ret
jbe
or
aas
mov
dec
xchg
mov
int
cld
jecxz
aas
inc
jo
push
inc
add
inc
push
std
retf
inc
or
mov
dec
daa
cmps
jecxz
aas
inc
push
std
retf
or
adc
or
aaa
jl
and
mov
xor
ret
fisubr
mov
in
ds
data16
inc
or
mov
ret
ret
fisub
aas
mov
in
mov
std
leave
cli
pop
and
add
bound
loope
add
sub
arpl
outs
push
cmp
jecxz
sub
inc
and
pop
(bad)
ds
std
inc
lds
inc
mov
cmp
mov
ds
push
push
repz
jecxz
ja
or
dec
inc
jp
ds
pop
arpl
outs
dec
arpl
outs
inc
arpl
push
xlat
jp
ins
push
loop
stos
arpl
std
xor
sbb
mov
icebp
mov
mov
mov
int3
clc
daa
mov
mov
fimul
mov
or
pusha
ja
std
pop
and
js
jmp
jecxz
test
xor
and
cmp
ds
dec
retf
cwde
bound
mov
ds
int3
xchg
or
jecxz
sbb
mov
mov
ret
jb
lds
aas
mov
ss
ficomp
or
ds
dec
and
jno
aas
mov
mov
fidivr
mov
icebp
mov
xchg
fimul
ja
cli
pop
es
(bad)
mov
cli
pop
push
push
out
xchg
inc
mov
movs
popf
jecxz
retf
dec
enter
aas
mov
mov
or
jecxz
xchg
(bad)
dec
int3
inc
or
inc
inc
es
nop
push
cmp
ret
fidiv
push
pop
out
fsub
std
leave
inc
or
xchg
inc
mov
and
jecxz
enter
retf
bound
jmp
jno
arpl
in
ds
and
mov
std
es
leave
std
ds
push
int3
inc
or
rcr
es
push
retf
bound
pop
test
or
dec
inc
pop
add
mov
add
pop
call
jb
inc
mov
mov
icebp
fstp
loope
mov
or
enter
daa
dec
retf
push
aaa
mov
mov
(bad)
retf
jbe
jle
mov
in
lds
inc
mov
mov
(bad)
mov
fisubr
ds
push
arpl
push
sar
inc
arpl
repnz
mov
or
sub
outs
dec
arpl
outs
push
adc
arpl
push
mov
arpl
push
mov
arpl
ins
inc
arpl
pop
call
mov
sub
sbb
cmp
push
inc
mov
call
ret
fimul
(bad)
ds
add
aas
mov
mov
xor
retf
pop
retf
pop
enter
inc
mov
mov
ds
ds
jo
fbstp
ins
xchg
arpl
std
ds
xor
retf
mov
mov
push
int3
inc
or
inc
mov
push
nop
inc
xor
lahf
aas
js
repz
std
(bad)
cmp
xchg
aas
mov
in
je
std
int3
inc
or
inc
mov
in
xchg
jecxz
call
lds
inc
mov
mov
fcmove
(bad)
ds
mov
aas
mov
std
mov
outs
push
arpl
outs
dec
arpl
xor
or
in
or
mov
xchg
inc
mov
sbb
aas
mov
hlt
pop
push
xor
in
mov
mov
in
ds
push
std
and
std
inc
mov
mov
inc
or
inc
mov
in
xchg
jecxz
call
sub
mov
mov
mov
fcmovbe
(bad)
ds
push
daa
mov
outs
int3
daa
mov
mov
out
sahf
jecxz
int3
inc
or
inc
mov
mov
sahf
(bad)
fdivr
mov
(bad)
ds
js
cmps
mov
std
add
mov
std
ds
adc
and
ds
mov
in
ds
xchg
inc
xor
scas
out
ud0
cmp
ds
mov
in
cmp
retf
fisub
(bad)
ds
xlat
ret
jb
aas
cmp
scas
clc
dec
std
xchg
inc
jo
stos
mov
std
es
(bad)
std
ds
push
std
leave
add
outs
test
inc
push
std
(bad)
cli
pop
jb
push
jno
arpl
in
ds
shl
ds
xchg
arpl
in
ds
sub
scas
aas
and
inc
sub
mov
fidivr
cmp
xor
xchg
(bad)
mov
icebp
lods
or
retf
fidiv
(bad)
ds
mov
mov
xrelease
inc
push
std
mov
(bad)
in
ds
jno
arpl
std
ds
ss
inc
mov
sti
lds
aas
mov
cmp
xchg
(bad)
ds
xchg
arpl
in
ds
sub
push
inc
jo
xlat
mov
std
mov
dec
push
xchg
or
mov
fidiv
dec
retf
sub
jecxz
retf
fidivr
ds
push
arpl
xor
sbb
dec
(bad)
mov
cdq
xchg
cld
jecxz
mov
test
mov
mov
ds
and
std
ds
cmp
push
and
dec
(bad)
mov
pop
nop
cld
jecxz
mov
test
mov
mov
sbb
std
leave
and
dec
int3
cli
pop
inc
retf
push
add
ss
mov
ss
inc
(bad)
fldcw
in
cld
jecxz
mov
sub
movs
sbb
std
sub
outs
and
std
ds
js
xlat
mov
std
test
xor
push
int3
inc
or
aas
mov
dec
nop
inc
mov
mov
xor
push
inc
sub
mov
fisub
(bad)
ds
dec
arpl
sub
rcr
jnp
ds
(bad)
pop
jbe
inc
xchg
jmp
jbe
dec
retf
xchg
aas
mov
dec
retf
call
js
adc
outs
int3
daa
out
std
ds
sub
lahf
inc
mov
daa
cmp
std
ds
jo
retf
mov
std
mov
outs
int3
daa
jmp
cmp
and
mov
std
leave
cli
pop
sub
movs
xchg
(bad)
std
ds
pusha
and
jo
jmp
jecxz
leave
cli
pop
bound
aas
and
mov
std
(bad)
xor
and
jb
ds
jmp
inc
jo
push
inc
add
inc
sub
xchg
mul
inc
aas
sub
xchg
lds
xor
call
ret
mov
outs
int3
daa
cmps
out
or
arpl
std
ds
bound
mov
xchg
arpl
std
ds
jo
div
and
mov
and
std
ds
jo
div
or
mov
in
ds
jno
arpl
std
ds
stc
pop
inc
mov
xchg
arpl
in
ds
mov
daa
mov
std
ds
jo
jmp
jecxz
add
or
mov
or
or
jo
daa
mov
std
add
or
mov
or
(bad)
mov
and
jnp
pop
(bad)
sahf
xor
mov
ret
push
std
jns
pop
pop
(bad)
sahf
ins
repz
mov
ret
sub
test
in
ds
jo
push
or
mov
adc
dec
dec
add
aas
cwde
and
jecxz
retf
inc
or
inc
mov
ret
ret
fisub
aas
mov
in
sbb
std
(bad)
push
xor
jecxz
retf
ficom
(bad)
ds
and
std
ds
retf
popa
mov
ficom
ds
mov
in
ds
and
sahf
sub
inc
mov
mov
inc
in
ds
jo
retf
mov
std
add
or
mov
adc
jecxz
add
aas
pop
and
jl
and
sahf
cld
popa
inc
mov
jb
sbb
arpl
stos
and
std
ds
retf
add
fidivr
(bad)
ds
mov
in
ds
and
sahf
int3
popa
inc
mov
mov
add
std
ds
jo
mov
or
mov
sbb
add
aas
cwde
and
inc
or
mov
ret
ret
fisub
aas
mov
in
sbb
std
retf
inc
or
xchg
xchg
jecxz
sub
outs
inc
jg
jo
out
mov
std
mov
push
ret
mov
push
mov
inc
inc
js
sti
mov
std
retf
inc
or
nop
or
adc
or
inc
mov
inc
repnz
jecxz
retf
ficom
and
std
ds
push
mov
ficomp
and
std
ds
std
ds
sti
pop
inc
mov
mov
out
ds
icebp
std
ds
jle
cs
ds
mov
cmp
or
cli
enter
fadd
inc
sub
mov
jmp
ins
dec
inc
adc
ret
call
and
xor
or
mov
es
xchg
sahf
cmp
jb
imul
or
mov
push
arpl
xor
test
dec
and
pop
push
jp
pusha
loopne
add
push
daa
out
fwait
std
ds
mov
jl
or
ret
std
ds
cmp
ds
mov
icebp
fidivr
inc
sub
pop
inc
xor
push
aas
or
call
ret
call
(bad)
ds
addr16
in
xor
fninit
std
ds
jmp
aad
fcomp
cmp
cld
aaa
mov
and
xchg
retf
inc
(bad)
add
bound
cmp
test
ds
pusha
add
lea
xchg
dec
jp
pusha
add
xchg
xor
and
sahf
mov
aas
mov
dec
arpl
xor
retf
dec
push
test
xor
inc
aas
cmp
ds
dec
arpl
int3
(bad)
popf
mov
outs
dec
xchg
push
jno
arpl
pop
jmp
or
arpl
in
ds
jg
aas
mov
dec
pop
cmp
pop
jecxz
inc
or
dec
cli
pop
pop
int3
or
ss
retf
inc
dec
test
xor
or
mov
cs
ss
cmp
rol
test
sub
lahf
mov
cmp
jnp
cmp
jnp
mov
(bad)
aas
xor
xchg
test
add
jecxz
mov
sbb
sbb
dec
cld
jecxz
int3
add
adc
cwde
inc
add
inc
cmp
dec
inc
xor
xchg
or
ins
xchg
mov
pop
sub
or
dec
or
pop
int3
add
es
mov
arpl
outs
dec
arpl
and
sub
adc
arpl
retf
mov
mov
jecxz
test
cmp
aaa
push
out
retf
cli
pop
push
int3
add
push
(bad)
jl
and
mov
xor
fwait
inc
aam
ret
std
test
jo
arpl
int3
jmp
pop
mov
fimul
dec
retf
sub
push
xor
dec
test
aas
out
or
std
xchg
inc
xor
fwait
sahf
xchg
pop
inc
mov
inc
repnz
jecxz
mov
sti
mov
ficom
daa
and
aas
pop
and
xor
dec
jl
and
mov
cmp
sbb
std
ds
out
adc
std
leave
add
push
adc
pop
mov
mov
add
cmps
mov
inc
je
iret
inc
sub
inc
cmp
cs
or
push
xchg
inc
aad
mov
sbb
pop
mov
mov
cmp
inc
sub
dec
push
jecxz
retf
push
ret
jb
inc
xor
dec
inc
cmp
push
loope
aas
nop
inc
xor
dec
loope
inc
xchg
push
jno
arpl
xor
retf
sub
mov
mov
mov
mov
into
dec
(bad)
nop
push
jecxz
aas
or
(bad)
popf
adc
ret
in
std
into
inc
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
cmp
stos
or
out
retf
jb
push
outs
inc
arpl
xor
adc
cli
out
std
ds
cmp
push
push
ss
push
push
cmp
sub
push
jmp
stos
or
adc
stos
mov
aas
xor
push
lds
mov
mov
sbb
dec
enter
ds
mov
mov
arpl
aaa
mov
jmp
fld
enter
mov
inc
xor
xchg
sbb
aas
mov
std
sar
push
mov
dec
arpl
mov
into
retf
dec
inc
pop
xor
sbb
dec
ds
mov
mov
mov
adc
std
leave
add
mov
fisubr
push
(bad)
aas
pusha
and
mov
push
arpl
addr16
xor
push
and
dec
xchg
mov
pop
nop
cld
jecxz
(bad)
shl
arpl
xor
retf
out
test
jo
arpl
xor
dec
nop
mov
cdq
xchg
cld
jecxz
mov
dec
mov
fimul
mov
mov
std
ds
out
sbb
xchg
jmp
int3
add
inc
daa
xchg
add
inc
xor
fwait
inc
stos
pop
popf
sbb
aas
mov
std
sar
push
mov
mov
inc
je
iret
cmp
inc
xchg
or
push
retf
pusha
pop
mov
mov
cmp
or
ds
mov
loopne
jecxz
retf
push
jp
bound
retf
nop
repnz
mov
mov
mov
add
jecxz
xchg
cmp
out
in
push
das
jmp
ds
sar
xchg
std
ds
mov
mov
mov
push
adc
ret
mov
adc
mov
sahf
cmps
mov
mov
mov
icebp
test
inc
sahf
fwait
mov
mov
jmp
ds
inc
arpl
bound
retf
xor
mov
xchg
mov
and
xor
pop
lds
inc
mov
mov
push
jno
arpl
xor
retf
aam
mov
mov
inc
aas
push
jno
arpl
xor
adc
pusha
and
repz
or
or
mov
mov
mov
mov
arpl
loop
ret
(bad)
in
ds
sub
outs
inc
xor
jg
movs
mov
xor
sub
imul
jnp
movs
jl
inc
mov
mov
or
pop
xor
mov
inc
sub
jae
daa
and
call
xchg
(bad)
dec
retf
inc
arpl
ins
push
arpl
ins
push
fcmove
cmp
jecxz
test
push
(bad)
mov
into
outs
push
(bad)
ins
push
arpl
iret
or
add
push
retf
push
enter
retf
mov
xor
mov
(bad)
xchg
inc
cmp
pop
inc
inc
and
cmp
fwait
icebp
daa
and
fidivr
jae
out
push
dec
mov
sbb
xchg
lds
aas
mov
mov
sub
mov
mov
test
mov
std
test
outs
int3
daa
loop
add
and
mov
sahf
add
inc
mov
inc
arpl
jno
arpl
jno
arpl
xor
or
daa
shr
std
ds
cmp
lahf
jmp
js
pop
and
xor
or
mov
dec
arpl
outs
push
arpl
imul
xchg
add
(bad)
aas
inc
push
mov
outs
inc
pop
push
jecxz
aaa
or
dec
test
mov
mov
(bad)
call
std
ds
test
add
jecxz
iret
inc
je
iret
inc
sub
inc
or
out
test
ret
test
xor
test
and
mov
mov
(bad)
addr16
or
or
mov
ror
mov
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
push
retf
rcr
or
ds
inc
and
mov
std
ds
push
and
ror
cmp
jnp
pop
sbb
cld
daa
push
imul
(bad)
or
out
mov
std
sahf
adc
pop
ret
rcl
int
jp
std
ds
cmps
jl
inc
mov
clc
data16
enter
sub
outs
int
sahf
xchg
std
ds
xor
jae
push
mov
daa
mov
dec
sub
retf
mov
mov
cmp
xor
mov
sahf
scas
ds
(bad)
retf
mov
mov
cmp
icebp
mov
sahf
arpl
arpl
into
add
and
xor
test
fsubr
mov
mov
ja
int
ror
out
mov
mov
add
adc
or
dec
inc
mov
mov
std
retf
(bad)
scas
(bad)
ds
jmp
inc
cmps
(bad)
ds
mov
inc
mov
cmp
jecxz
retf
or
push
(bad)
cmps
or
dec
cli
pop
push
ret
or
ds
xor
or
adc
pop
sbb
das
jae
inc
cmp
add
sbb
pop
or
add
mov
sub
mov
sub
mov
mov
std
ds
in
lods
jecxz
retf
push
retf
inc
les
pop
retf
adc
imul
(bad)
daa
push
out
ds
sub
dec
inc
xor
push
inc
cmp
pop
aas
sub
cli
pop
push
les
cmp
cld
aaa
jb
inc
xor
nop
mov
cmc
xchg
cld
jecxz
or
mov
test
mov
std
popf
adc
pop
ret
rcl
mov
inc
je
iret
inc
je
iret
and
data16
in
sub
mov
mov
(bad)
enter
ds
jmp
int3
fcomp
mov
mov
cmp
jb
inc
sub
cmps
jmp
mov
xor
aas
aaa
add
sub
xchg
inc
xor
mov
ins
or
mov
std
sar
dec
mov
mov
sahf
jecxz
ds
push
outs
test
leave
enter
daa
xchg
xchg
std
ds
cmp
mov
mov
add
sub
imul
pop
push
int3
and
mov
mov
cmp
ja
outs
inc
inc
inc
sub
(bad)
aas
xor
arpl
jecxz
aas
inc
xor
mov
outs
dec
fwait
inc
cmp
inc
sub
mov
xor
sbb
(bad)
ds
in
mov
lock
add
push
daa
ds
and
and
dec
(bad)
jl
and
pop
sub
leave
or
mov
inc
stos
cmp
xor
push
retf
push
xchg
inc
mov
pusha
mov
std
jp
pop
ds
icebp
fidivr
inc
cmps
jmp
inc
inc
cmps
jmp
xchg
push
mov
arpl
into
or
pusha
add
mov
xchg
(bad)
mov
arpl
std
retf
inc
arpl
push
ret
retf
sub
inc
mov
push
or
daa
cmps
mov
and
mov
sti
mov
loop
retf
sub
push
sti
mov
loop
retf
sub
int
icebp
movs
jl
inc
lods
jmp
inc
inc
loope
mov
outs
jp
fisubr
enter
inc
inc
sub
outs
aas
es
enter
mov
mul
hlt
mov
std
int3
add
inc
push
cli
pop
bound
mov
std
daa
push
cmp
aas
inc
xor
fwait
adc
sahf
adc
(bad)
enter
ds
ret
lock
into
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
push
int3
or
push
xchg
inc
aad
mov
or
or
daa
retf
ds
jno
arpl
cmp
pusha
and
pop
jb
mov
int3
daa
sbb
add
and
mov
sahf
cmp
inc
mov
dec
arpl
ins
inc
arpl
outs
inc
arpl
jo
arpl
xor
mov
test
add
std
ds
sub
inc
inc
xor
dec
icebp
stos
mov
out
das
and
test
xchg
pop
xor
or
mov
inc
arpl
outs
dec
arpl
outs
push
arpl
xor
inc
mov
pop
xlat
jecxz
pushf
cmp
(bad)
iret
inc
je
iret
sbb
addr16
fs
mov
(bad)
enter
ds
jmp
aad
ins
(bad)
jecxz
retf
std
dec
cmp
int
and
mov
aas
inc
and
push
stos
ds
mov
ds
sub
push
icebp
fimul
ds
nop
and
mov
std
jns
xrelease
push
or
retf
fidiv
ds
add
(bad)
xor
pop
out
mov
std
int3
add
push
pop
jecxz
cmps
or
(bad)
jns
or
dec
inc
mov
ds
inc
arpl
push
idiv
(bad)
pop
or
or
dec
inc
add
aas
mov
test
(bad)
ds
inc
pop
inc
cmp
outs
or
aas
and
mov
or
std
leave
add
mov
fidiv
push
(bad)
jge
and
mov
std
ds
std
es
int3
(bad)
cmp
dec
nop
inc
jo
retf
mov
std
bound
and
and
dec
(bad)
jl
and
mov
std
aas
mov
popa
nop
cld
jecxz
ficomp
mov
inc
xor
push
pop
outs
int3
daa
adc
ds
xor
retf
fcom
mov
mov
inc
ret
push
retf
nop
adc
cmp
ds
out
mov
pop
push
mov
mov
sub
mov
outs
int
mov
pop
push
jp
bound
retf
add
mov
add
mov
test
or
retf
fisubr
ds
ss
loop
std
ds
xor
(bad)
jge
and
mov
std
daa
xchg
add
inc
nop
and
mov
std
jns
or
mov
retf
arpl
std
ds
xchg
fsin
ds
push
fdivp
mov
mov
std
leave
cld
dec
(bad)
mov
add
xor
cmps
sahf
or
mov
dec
fwait
inc
cmp
inc
sub
cmps
or
ds
std
ds
in
mov
add
jo
arpl
xor
(bad)
ds
adc
jecxz
sbb
mov
or
ret
fisubr
ds
cld
push
sbb
and
outs
int3
daa
(bad)
aad
ds
pusha
and
inc
in
sub
loope
mov
outs
int3
daa
or
dec
xchg
inc
mov
dec
mov
std
retf
std
mov
retf
pop
xor
jmp
retf
add
jns
dec
arpl
push
(bad)
mov
mov
outs
fcmovne
dec
or
sbb
and
mov
std
(bad)
ror
adc
mov
mov
fisub
ds
std
ds
les
ficomp
popf
adc
(bad)
enter
ds
ret
hlt
std
into
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sbb
cmps
int3
push
adc
inc
scas
out
pop
jecxz
retf
leave
enter
daa
ret
ds
loop
sbb
sub
push
aas
xor
pop
lds
inc
mov
mov
lds
inc
mov
ss
cmp
std
ds
test
int3
xor
std
ds
sub
push
inc
push
and
retf
or
ds
mov
mov
leave
retf
xor
mov
push
aaa
sahf
pop
push
inc
mov
leave
retf
xor
mov
add
inc
sub
jae
mov
xchg
(bad)
dec
retf
inc
(bad)
jecxz
pop
push
aaa
mov
mov
(bad)
retf
push
jg
stos
xchg
mov
fstp
or
mov
ds
aaa
mov
mov
(bad)
retf
xor
inc
sub
jae
cmp
ja
loop
adc
adc
xchg
(bad)
mov
mov
cmc
pop
push
cmp
ds
test
pop
push
jg
test
sbb
jns
mov
int
arpl
outs
int3
daa
push
mov
ds
cmp
ds
test
pop
ss
retf
jp
inc
cmp
ja
sub
jae
xor
jnp
push
and
stos
xchg
aas
inc
and
push
and
call
mov
icebp
movs
jnp
or
daa
sub
mov
mov
(bad)
retf
xor
cmp
ja
sub
jg
xor
push
mov
pop
cmp
xor
xchg
ficom
mov
icebp
mov
pop
or
daa
retf
ds
cmp
ds
test
pop
xor
cmp
pop
inc
scas
mov
aas
cli
mov
mov
ins
dec
dec
adc
pop
ret
rcl
mov
inc
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
ss
xchg
or
pop
push
retf
jp
add
push
nop
inc
mov
sbb
(bad)
ds
in
jnp
std
clc
(bad)
ds
adc
jmp
std
add
jl
and
(bad)
jmp
inc
movs
mov
inc
fidivr
retf
fild
mov
ds
ret
in
les
mov
repz
push
add
lods
test
mov
test
repz
push
add
inc
push
std
ret
jbe
or
or
add
adc
sahf
and
mov
add
std
leave
add
xchg
push
xor
push
(bad)
jl
and
sahf
pop
loop
mov
ret
mov
mov
add
adc
cli
pop
adc
mov
std
pop
and
sub
pop
sahf
xor
mov
push
arpl
jo
arpl
ins
push
arpl
test
in
add
std
retf
cli
pop
cs
mov
xor
retf
fisub
ds
out
push
out
retf
add
push
push
cli
pop
jb
mov
std
daa
stc
mov
stos
adc
ins
or
mov
std
sar
dec
mov
mov
inc
je
iret
inc
je
iret
and
push
in
sub
mov
mov
(bad)
enter
ds
jmp
cmp
arpl
retf
les
mov
cmp
sub
push
lds
inc
mov
mov
fcmovbe
(bad)
ds
mov
mov
lods
mov
fcmove
(bad)
ds
fistp
mov
rol
pop
es
or
repnz
cmp
aaa
mov
std
ret
jbe
sub
mov
leave
xchg
cld
jecxz
fdivr
or
cmp
retf
push
test
fidivr
ds
push
push
cmp
loop
mov
std
ds
in
pop
jecxz
ret
push
mov
outs
retf
daa
pop
mov
ds
pop
and
outs
mov
ds
sub
arpl
xor
inc
mov
in
jecxz
leave
jle
dec
jmp
xchg
fiadd
mov
fidiv
ds
mov
aaa
inc
jo
iret
mov
std
(bad)
cli
pop
inc
ret
in
jns
std
retf
loop
mov
mov
fiadd
xchg
shr
arpl
int3
mov
fcmovu
(bad)
ds
(bad)
retf
mov
enter
enter
enter
mov
ins
push
enter
xchg
jo
iret
mov
std
es
std
ds
int3
jg
mov
std
cmp
(bad)
mov
retf
stos
cmp
and
mov
clc
pop
jecxz
js
or
aas
mov
jns
inc
mov
clc
pop
jecxz
js
or
aas
mov
jp
and
cld
push
jbe
inc
aas
mov
jno
arpl
in
ds
push
dec
inc
mov
and
std
ds
cwde
and
mov
std
out
test
std
ds
pop
retf
xor
add
sub
or
cs
retf
repnz
mov
xchg
ficomp
xchg
aas
xor
xchg
sub
dec
int3
or
dec
int3
cli
pop
dec
xchg
push
jecxz
fisttp
sub
leave
inc
or
ret
fisub
ds
push
inc
lods
mov
mov
or
adc
or
(bad)
xor
or
aas
mov
dec
pop
add
mov
mov
in
ds
pop
mov
dec
cmp
inc
arpl
fld
inc
lds
inc
mov
mov
inc
sub
nop
inc
sub
ret
mov
js
and
sahf
ss
inc
mov
inc
arpl
outs
int3
(bad)
jl
and
mov
std
inc
sahf
or
mov
stos
arpl
jno
arpl
cmp
test
arpl
retf
sti
xchg
daa
hlt
add
or
retf
push
inc
mov
jmp
sub
arpl
outs
push
arpl
out
inc
mov
adc
fiadd
push
inc
jnp
dec
arpl
xor
test
mov
mov
pop
add
or
jmp
arpl
xchg
push
mov
inc
jns
mov
push
int3
fild
add
ds
pop
outs
int3
daa
cmp
aas
inc
cmp
arpl
and
mov
fsub
movs
iret
aaa
mov
int3
mov
mov
sti
mov
mov
das
inc
repnz
jecxz
mov
das
(bad)
(bad)
ds
in
add
std
sub
in
ds
sub
addr16
xor
imul
adc
or
dec
retf
xor
xchg
jo
arpl
jo
arpl
std
ds
stos
and
std
ds
jecxz
mov
xrelease
cmp
(bad)
ds
inc
arpl
jecxz
ds
inc
arpl
jae
test
jo
arpl
dec
dec
cmp
xchg
aas
mov
dec
(bad)
jl
and
mov
std
inc
sahf
mov
ds
adc
cli
pop
cmp
fisub
inc
aas
sub
push
jae
add
ret
jno
cmp
push
mov
data16
inc
sub
cmp
push
add
mov
jb
jae
add
cld
mov
std
ds
add
sub
cmp
push
adc
mov
jno
cmp
push
mov
data16
dec
sub
or
add
sub
dec
inc
xor
push
sahf
sub
inc
mov
idiv
sub
mov
fisubr
push
retf
dec
pop
push
(bad)
mov
ins
nop
cld
jecxz
mov
pop
mov
fisubr
sub
icebp
movs
jnp
cmp
retf
dec
inc
sub
push
lods
and
inc
sub
mov
mov
jecxz
leave
hlt
jo
arpl
std
ds
out
mov
or
mov
int3
daa
mov
add
inc
sub
dec
inc
cli
mov
(bad)
fist
push
outs
int3
or
(bad)
mov
outs
int3
ds
or
sbb
inc
repnz
jecxz
mov
pop
(bad)
(bad)
ds
in
add
std
leave
bound
fidivr
mov
mov
fidiv
in
xchg
out
daa
push
out
ds
push
lds
inc
mov
mov
fidiv
ds
call
(bad)
aas
sub
push
lds
inc
mov
mov
fimul
cmc
pop
push
xor
ds
ja
test
sub
imul
dec
nop
mov
pop
nop
cld
jecxz
push
inc
mov
xchg
shr
test
push
sbb
and
addr16
and
cld
push
call
retf
dec
enter
aas
mov
cld
push
push
xor
aas
inc
int3
lds
mov
dec
push
cli
pop
dec
jnp
sub
xor
aas
push
and
cmp
push
jl
and
mov
std
inc
lods
es
inc
sub
mov
inc
sub
les
and
add
sub
cld
jecxz
int3
add
dec
daa
cmp
add
inc
cmp
mov
in
retf
mov
mov
sti
xor
aas
sub
cmps
aas
sub
mov
aas
sub
mov
sub
stos
aas
sub
scas
inc
sub
mov
push
std
ds
dec
and
aas
mov
push
loop
inc
arpl
outs
pop
arpl
outs
dec
arpl
push
fld
addr16
dec
aas
push
and
aas
inc
and
xor
addr16
gs
mov
dec
inc
sub
mov
xor
and
jecxz
shl
std
ds
or
cmp
std
dec
lds
aas
mov
cmp
repnz
mov
jno
cmp
add
sub
cmp
push
or
mov
jno
cmp
pop
mov
push
pop
arpl
out
enter
sub
outs
push
arpl
outs
shr
sub
xchg
add
sub
xchg
jecxz
mov
data16
inc
sub
cmp
mov
jno
cmp
push
mov
data16
dec
sub
mov
mov
repz
scas
inc
movs
mov
dec
xadd
scas
out
enter
retf
push
retf
inc
cmps
(bad)
jecxz
aas
and
push
arpl
ss
sub
in
ds
xor
scas
inc
push
and
add
pop
mov
mov
push
arpl
mov
inc
arpl
rcl
mov
out
sbb
or
mov
push
arpl
ret
fidiv
xchg
mov
cmp
mov
mov
ret
in
ficom
xchg
jmp
fiadd
sahf
sti
fiadd
rol
mov
or
mov
ficom
aas
sub
fwait
cmp
or
sub
fimul
lds
mov
cmp
jno
aas
mov
mov
cmp
and
movs
xchg
fidivr
mov
ficomp
pop
mov
dec
int
dec
arpl
xor
daa
out
cmp
ds
mov
mov
fimul
add
icebp
movs
xchg
mov
aas
mov
ficom
sub
dec
xadd
xchg
dec
inc
jge
dec
retf
ret
fsub
movs
mov
mov
push
dec
xchg
sahf
(bad)
push
ds
inc
arpl
xor
js
jecxz
retf
mov
mov
mov
mov
or
add
push
nop
mov
gs
cld
jecxz
dec
and
mov
mov
std
push
and
aas
inc
cli
addr16
mov
xchg
(bad)
stos
inc
arpl
sub
test
stos
and
std
ds
jecxz
fcmovnu
(bad)
(bad)
ds
and
std
ds
stos
arpl
sub
add
das
mov
std
mov
and
mov
std
retf
or
and
mov
std
nop
push
xor
push
xchg
or
push
aas
mov
(bad)
(bad)
ds
mov
mov
mov
in
ds
and
mov
std
inc
sahf
pushf
inc
inc
mov
mov
in
ds
and
mov
std
cmp
xchg
popf
std
ds
jo
or
inc
pop
mov
mov
jle
jle
std
ds
dec
inc
je
iret
sbb
addr16
and
test
or
fninit
std
ds
jmp
repz
or
out
jg
std
retf
leave
daa
push
nop
std
ds
jecxz
jns
pop
or
push
or
mov
repz
sub
xchg
and
ret
mov
ins
push
cmp
and
cmps
add
push
(bad)
retf
xor
ja
and
add
cs
or
jbe
aas
push
and
mov
inc
arpl
pusha
adc
or
mov
outs
movs
mov
div
fs
push
cmp
add
cs
xchg
sub
aas
inc
pop
and
fisubr
dec
cld
jmp
ds
dec
dec
test
out
leave
and
pop
retf
dec
enter
retf
dec
xchg
inc
mov
xor
std
retf
inc
inc
inc
push
and
sahf
repz
mov
push
inc
inc
xor
pop
and
dec
xchg
aas
sub
xchg
aas
inc
and
sub
imul
mov
fiadd
aas
jg
sub
pop
aas
xor
pop
inc
xor
int3
cli
pop
sbb
retf
inc
dec
test
out
cmps
inc
sub
fwait
inc
cmp
cmps
cmp
ds
xor
dec
inc
cmps
sbb
scas
in
push
cmp
push
mov
dec
ret
jno
cmp
inc
inc
sub
imul
int3
daa
test
add
inc
cmp
(bad)
or
arpl
xor
iret
jg
jecxz
mov
add
xchg
inc
mov
dec
mul
std
leave
add
push
retf
data16
fld
sbb
jno
inc
sub
jbe
push
retf
push
les
pop
ss
std
inc
mov
push
retf
ficomp
lock
push
adc
xor
adc
and
cmp
jno
arpl
push
add
cli
pop
sub
icebp
out
leave
cli
pop
dec
xchg
inc
xor
ja
xor
ds
mov
push
arpl
cmp
test
xchg
jg
jecxz
mov
xrelease
fiadd
mov
fcmovnb
aas
mov
std
mov
outs
rol
and
dec
cmp
push
retf
jnp
(bad)
mov
push
and
loop
mov
mov
mov
inc
mov
aaa
cmc
out
leave
add
push
nop
or
daa
in
and
aas
inc
xor
dec
inc
cmp
cmps
lods
sub
mov
js
std
pop
mov
dec
retf
jle
mov
jb
cmp
push
retf
jnp
(bad)
mov
push
and
loop
mov
mov
jp
add
arpl
cmp
pop
out
cmc
out
leave
add
sbb
test
add
inc
cmp
push
inc
mov
daa
cmp
add
je
mov
mov
jb
fidiv
arpl
test
in
cli
out
(bad)
sub
sub
add
sub
cli
pop
inc
inc
mov
std
adc
add
adc
pop
retf
cs
sbb
aas
mov
std
sar
pop
mov
mov
inc
je
iret
inc
sub
dec
cmp
push
int3
or
push
xchg
or
mov
inc
xor
jae
xor
xchg
inc
mov
shl
and
jecxz
cmps
or
dec
xor
push
jb
pop
fld
mov
jb
icebp
pop
and
add
test
cwde
add
mov
nop
jns
std
retf
inc
arpl
sub
aaa
xor
mov
(bad)
cmp
xor
int3
nop
push
mov
cwde
jp
std
retf
inc
arpl
sub
aaa
xor
mov
aas
or
xchg
mov
add
dec
mov
mov
inc
je
iret
inc
je
iret
sbb
addr16
cmp
test
jecxz
ds
jmp
test
sbb
adc
or
and
or
aas
out
xchg
aas
pop
or
fisubr
(bad)
enter
ds
ret
lock
retf
add
sbb
push
cdq
std
ds
pusha
and
and
push
int3
cli
pop
and
cli
pop
outs
aas
mov
std
es
std
cmp
cmps
cmp
cmp
xchg
sub
lahf
mov
std
ds
das
add
add
sbb
or
xchg
mov
mov
adc
or
aas
icebp
std
ds
add
cmps
or
inc
xor
pop
sahf
mov
(bad)
ds
dec
(bad)
xchg
inc
xor
arpl
xchg
ds
dec
arpl
retf
pushf
hlt
mov
cmps
aas
mov
std
mov
jno
arpl
retf
mov
mov
cmps
aas
mov
std
mov
xor
or
cmp
or
mov
imul
call
sub
push
int3
add
push
retf
jp
(bad)
retf
push
hlt
mov
cmps
aas
mov
std
mov
sub
or
cmp
or
mov
imul
call
sub
mov
imul
call
sub
mov
inc
scas
out
dec
jecxz
int3
add
push
daa
mov
in
pop
mov
(bad)
adc
push
cli
pop
push
retf
dec
arpl
stos
inc
arpl
jecxz
ds
add
and
xchg
sahf
or
arpl
inc
pop
retf
pop
mov
mov
add
cmps
or
inc
sub
inc
inc
cmp
inc
push
ss
jns
std
retf
cwde
(bad)
mov
and
mov
std
xor
js
std
into
inc
je
iret
inc
je
iret
inc
je
iret
or
mov
and
in
mov
outs
inc
arpl
data16
arpl
cwde
xchg
xor
jmp
add
mov
dec
dec
test
inc
add
rcr
ds
mov
dec
push
movs
inc
test
test
ds
std
ds
adc
aas
mov
dec
pop
pop
jecxz
aaa
or
dec
test
mov
lds
call
std
ds
jo
aas
add
aas
push
jns
aas
or
aas
push
jns
aas
adc
aas
adc
aas
inc
je
iret
or
mov
and
in
mov
outs
inc
arpl
data16
arpl
cmp
std
into
or
movs
out
call
sub
dec
dec
test
movs
add
xor
ds
mov
dec
push
movs
inc
retf
lds
cmp
add
mov
std
ds
push
aas
mov
dec
pop
pop
jecxz
aaa
or
dec
test
sbb
mov
(bad)
call
std
ds
jo
aas
mov
jns
aas
test
jns
aas
mov
inc
aas
mov
inc
aas
inc
je
iret
or
out
daa
mov
add
inc
sub
inc
cmp
add
out
pushf
js
std
into
inc
je
iret
sbb
addr16
fs
enter
ds
jmp
aad
mov
std
retf
(bad)
push
(bad)
ds
leave
daa
cmp
inc
fmul
push
sahf
jecxz
ds
std
enter
dec
cmp
(bad)
ds
mov
ds
dec
test
lods
inc
mov
fsub
cwde
dec
jecxz
test
scas
int3
cwde
inc
mov
int3
out
dec
jecxz
jb
jno
arpl
add
sahf
popf
cmp
outs
inc
fwait
inc
xor
inc
cmp
outs
pop
xchg
mov
std
sar
sbb
mov
(bad)
lahf
std
ds
sub
(bad)
and
ret
sbb
dec
mov
xor
pop
inc
xor
ja
sub
pop
aas
cmp
arpl
xor
inc
aas
inc
cmp
arpl
push
daa
repnz
and
lods
mov
mov
sbb
mov
ror
mov
arpl
pop
xor
pusha
sub
xor
adc
iret
mov
retf
mov
mov
mov
xor
cmp
xor
mov
inc
sub
push
std
push
idiv
(bad)
retf
mov
mov
mov
fisubr
std
ds
out
repnz
jno
outs
dec
arpl
inc
pop
pushf
adc
dec
mov
std
cmp
cmp
inc
cmp
xchg
inc
sub
push
inc
rol
xor
pop
sti
mov
dec
xchg
inc
mov
push
je
std
retf
sbb
pusha
add
pusha
or
scas
outs
inc
arpl
cmp
xor
xchg
inc
xor
dec
aas
cld
in
jno
std
int3
add
sub
cli
pop
inc
ds
std
daa
mov
in
ds
or
shr
xchg
or
push
retf
nop
push
jecxz
ret
lock
ds
add
xchg
cld
jecxz
dec
mov
xor
and
arpl
jbe
cdq
add
xor
push
mov
mov
sbb
mov
add
loope
enter
mov
addr16
data16
cmp
or
mov
loope
mov
data16
bound
and
cmp
mov
jb
cmp
inc
mov
push
pop
pushf
adc
imul
shl
jae
adc
test
add
jecxz
cmp
repnz
jecxz
ret
jbe
sub
test
inc
shl
sub
jg
pop
nop
ds
(bad)
retf
out
dec
jecxz
retf
inc
arpl
retf
movs
shl
outs
test
sub
ds
xor
cmp
add
mov
inc
pop
jno
arpl
ins
mov
or
mov
push
inc
mov
in
scas
jecxz
pop
and
jecxz
cmps
or
dec
sti
ret
jmp
test
mov
std
jno
outs
xchg
push
es
cmp
clc
jecxz
mov
cmp
inc
xor
std
test
outs
int3
daa
loop
std
ds
mov
ds
jp
(bad)
in
les
out
retf
jecxz
popf
adc
pop
ret
ror
jp
(bad)
in
les
in
or
mov
pop
pushf
adc
imul
shl
push
inc
sub
addr16
and
addr16
inc
mov
js
jecxz
sub
in
ds
sub
pop
inc
cmp
push
inc
xor
pop
and
addr16
(bad)
xor
(bad)
ds
jp
(bad)
in
push
and
addr16
and
mov
mov
push
inc
mov
mov
(bad)
mov
and
cmp
aas
mov
std
shl
push
inc
sub
addr16
and
addr16
inc
mov
mov
jecxz
sub
and
xor
pop
inc
sub
pop
and
addr16
or
(bad)
ds
jp
(bad)
in
push
and
addr16
and
mov
mov
mov
xchg
(bad)
mov
(bad)
addr16
and
dec
add
out
mov
std
leave
cli
pop
push
les
inc
arpl
pop
add
cli
pop
push
retf
adc
add
push
test
pop
xor
mov
cmp
pop
inc
cmp
push
and
addr16
or
jmp
dec
cmp
push
inc
cmp
pop
inc
sub
jg
in
inc
pop
ss
sub
outs
inc
arpl
outs
dec
arpl
mov
stos
jl
inc
movs
mov
(bad)
addr16
and
dec
xchg
push
iret
and
cli
pop
push
les
or
cli
pop
es
cmp
xor
mov
inc
xor
push
inc
cmp
pop
and
addr16
pop
ss
retf
loopne
mov
mov
repnz
ds
xor
ja
bswap
inc
and
aas
mov
inc
mov
stos
jae
jmp
in
ds
xchg
cmp
cmp
sub
mov
(bad)
out
ds
cmp
sbb
mov
add
mov
std
ds
push
test
nop
div
in
dec
inc
jmp
mov
pop
popf
adc
add
call
aas
cmp
popa
jle
aas
cdq
jge
aas
std
jge
aas
retf
jge
aas
das
jle
aas
cmp
inc
aas
pop
jge
aas
jnp
inc
aas
add
inc
aas
mov
inc
call
or
out
or
out
or
out
or
out
or
out
or
out
push
dec
shr
dec
shr
dec
shr
dec
shr
dec
shr
iret
inc
je
iret
inc
je
iret
inc
je
iret
sbb
addr16
test
enter
ds
jmp
aad
ss
out
retf
cli
pop
sub
add
adc
pop
jno
arpl
ss
retf
xor
jecxz
sbb
mov
mov
or
jecxz
shr
std
ds
mov
mov
jecxz
retf
std
dec
cmp
ds
inc
sbb
ret
or
std
ds
in
ret
add
std
ds
mov
sbb
jecxz
retf
inc
arpl
retf
adc
mov
mov
aas
sub
pop
sahf
imul
test
arpl
retf
mov
mov
mov
and
mov
sahf
fwait
cld
inc
mov
out
mov
int3
inc
mov
jecxz
pop
and
mov
sahf
mov
inc
mov
dec
fwait
inc
cmp
inc
sub
mov
xor
sbb
(bad)
ds
in
and
sar
mov
sub
add
adc
jmp
scas
inc
sub
mov
cmp
outs
inc
cmp
pop
and
in
xchg
jl
and
mul
adc
cli
pop
ds
out
ins
jecxz
retf
cs
inc
cli
pop
ss
outs
inc
inc
inc
sub
jae
xor
jnp
jo
aas
mov
cmp
xor
addr16
inc
mov
test
jecxz
daa
push
in
ds
xor
arpl
and
shr
icebp
mov
mov
xor
mov
mov
int3
fdiv
mov
mov
inc
mov
fsubr
std
retf
xor
cli
pop
cmp
repz
mov
std
leave
cli
pop
push
xor
jp
inc
xor
dec
sahf
jg
ds
dec
arpl
stos
inc
arpl
jecxz
ds
dec
jne
jecxz
sbb
mov
or
jb
or
daa
cmp
std
ds
dec
sub
ds
inc
xchg
dec
retf
xchg
repnz
ds
sub
mov
push
enter
aas
mov
xchg
cmp
add
mov
mov
cmp
mov
cmp
in
inc
lds
aas
mov
mov
fiadd
push
or
mov
ret
jecxz
sbb
addr16
(bad)
cmp
mov
jo
ds
mov
loope
cmp
lds
ds
cmp
inc
loope
inc
inc
sub
addr16
add
or
cdq
std
ds
xor
ja
xor
mov
mov
dec
arpl
ins
inc
arpl
push
(bad)
mov
shr
cmp
xor
retf
push
xchg
and
inc
xchg
or
daa
(bad)
mov
and
jnp
ds
dec
arpl
stos
inc
arpl
jecxz
ds
dec
je
jecxz
mov
inc
xor
pop
or
int3
and
mov
mov
mov
pop
adc
int
out
ds
movs
jae
jge
ss
mov
(bad)
ds
mov
mov
stc
adc
mov
(bad)
nop
push
jno
arpl
xor
or
mov
dec
arpl
inc
pop
pushf
adc
dec
mov
std
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
inc
aad
push
cmp
int3
jns
mov
push
cld
push
xor
inc
aas
cmp
(bad)
mov
outs
test
jecxz
ret
jbe
push
test
dec
idiv
ds
ret
lock
retf
cli
pop
add
add
push
pop
and
mov
mov
test
mov
mov
repz
nop
inc
mov
jl
jecxz
retf
add
mov
inc
xchg
mov
push
inc
push
inc
mov
mov
mov
fwait
(bad)
ds
mov
cli
out
ds
cmp
cmp
push
inc
jp
inc
mov
mov
mov
mov
xor
pop
or
mov
pushf
(bad)
ds
std
inc
adc
outs
int3
ds
mov
add
cmp
push
xchg
inc
aad
push
cmp
int3
cdq
and
push
mov
(bad)
dec
int3
or
push
nop
or
push
cmp
add
mov
std
ds
clc
xor
jecxz
aaa
mov
adc
add
push
(bad)
and
dec
retf
push
pop
outs
int3
daa
ss
ret
lock
into
inc
je
iret
inc
je
iret
and
data16
in
sub
mov
mov
(bad)
enter
ds
jmp
outs
out
xchg
sahf
scas
mov
mov
int3
daa
retf
ds
int3
cmp
aas
push
and
rol
jecxz
xchg
inc
xor
xchg
outs
inc
fwait
inc
xor
inc
cmp
xchg
xchg
jle
std
sar
sbb
mov
jmp
add
aas
pusha
and
pusha
and
aas
clc
inc
mov
pop
arpl
outs
test
jecxz
ret
(bad)
in
ds
xor
dec
inc
cmp
push
pop
ss
shl
pop
push
jp
outs
(bad)
mov
or
adc
bound
retf
add
jns
add
mov
fnsave
imul
ds
adc
int3
ret
sub
xor
pop
aas
push
and
fimul
sub
jp
inc
fnstsw
mov
cmp
std
ds
xchg
std
ds
outs
inc
arpl
xor
ds
dec
arpl
sub
cmp
sub
imul
mov
xor
hlt
pop
aas
sub
imul
push
and
push
test
fld
aas
and
mov
mov
pop
arpl
outs
test
jecxz
ret
fs
ds
xor
dec
inc
cmp
push
pop
ss
imul
std
leave
cli
pop
push
jp
outs
(bad)
mov
or
adc
bound
retf
or
cli
pop
sub
push
pop
sar
jno
cli
pop
outs
les
pop
retf
lock
imul
or
int3
xchg
fimul
inc
aas
xor
cmps
icebp
int3
mov
out
cmp
pop
and
mov
push
retf
add
mov
dec
retf
xor
push
std
retf
data16
fadd
sbb
icebp
int3
jnp
lods
mov
push
leave
test
test
mov
push
sbb
jcxz
mov
mov
sub
mov
lds
aas
mov
mov
add
inc
daa
(bad)
adc
aas
inc
cmp
push
inc
mov
daa
push
std
ds
lods
mov
mov
inc
inc
aas
sub
arpl
xor
addr16
xor
xchg
outs
dec
pop
inc
sub
jae
xor
inc
aas
inc
sub
imul
jb
inc
cmp
jae
xor
pop
inc
fiadd
adc
lods
xchg
inc
scas
aas
enter
test
or
cmp
div
mov
mov
jp
jmp
mov
outs
inc
arpl
outs
jp
out
out
les
jp
out
push
add
sbb
push
xchg
ficomp
push
jg
xor
test
or
add
cmp
add
jecxz
aaa
or
dec
add
es
jp
std
ds
xor
cmp
lahf
mov
std
ds
pop
cs
mov
mov
adc
dec
mov
std
cmp
mov
mov
std
iret
inc
je
iret
inc
sub
inc
cmp
push
xchg
inc
aad
add
mov
cmp
addr16
ds
inc
arpl
cmp
cmp
int3
add
add
or
dec
cli
pop
adc
retf
xchg
(bad)
dec
xchg
inc
mov
mov
add
push
ret
cmp
sub
les
loop
or
sub
mov
jecxz
inc
mov
std
pushf
cmp
ss
jno
push
push
(bad)
cmp
mov
std
push
xchg
inc
aas
outs
in
ds
add
inc
mov
sbb
out
pushf
cmp
(bad)
iret
sbb
addr16
les
sbb
popa
enter
ds
jmp
jecxz
retf
dec
arpl
cmp
inc
mov
std
ds
mov
push
scas
imul
ds
int3
daa
into
xchg
std
ds
lods
out
aas
jecxz
ret
or
stos
in
or
mov
sahf
jae
ds
int
cli
pop
adc
jp
std
ds
mov
sbb
in
cmp
outs
int
and
push
daa
repnz
ds
fsubr
inc
mov
mov
lods
out
leave
mov
leave
test
fisub
adc
add
inc
int3
push
xchg
out
leave
or
mov
fisubr
dec
nop
jge
and
sahf
sub
aas
mov
ret
cmp
add
pop
or
in
mov
mov
mov
std
retf
add
inc
enter
enter
int3
cli
pop
xor
push
int3
int
mov
dec
push
(bad)
mov
outs
dec
arpl
jno
arpl
ins
push
arpl
xor
retf
inc
dec
test
outs
int3
xchg
sahf
imul
mov
mov
sbb
xchg
lods
sub
sub
sbb
jnp
inc
xor
dec
inc
sub
push
inc
iret
sub
icebp
retf
or
ds
into
mov
in
mov
mov
int3
jl
mov
mov
inc
mov
and
retf
ss
iret
js
or
mov
fsubp
lds
bound
enter
retf
adc
ins
(bad)
ds
dec
arpl
imul
leave
cli
pop
push
out
into
je
jg
jo
cld
daa
ds
sbb
fs
push
retf
fnstsw
popa
pop
jp
outs
stc
mov
ror
sti
inc
scas
cmp
ds
dec
arpl
xor
test
xchg
out
mov
mov
loope
aaa
xchg
fiadd
jp
inc
cmp
arpl
xrelease
(bad)
inc
jp
pusha
mov
(bad)
outs
dec
arpl
imul
leave
or
outs
enter
arpl
retf
movs
jmp
jecxz
mov
daa
lds
mov
out
jecxz
std
fwait
adc
arpl
inc
pop
mov
mov
add
cmps
push
aas
sbb
addr16
cld
xor
enter
ds
jmp
aad
push
cmp
movs
or
ds
mov
or
jecxz
enter
retf
dec
ds
addr16
test
out
xchg
inc
xor
outs
sahf
sub
outs
dec
fwait
inc
cmp
inc
sub
outs
or
ds
in
js
std
sar
mov
test
mov
mov
inc
out
mov
jo
arpl
ins
dec
arpl
xor
test
out
test
jo
arpl
retf
in
gs
xor
outs
sahf
cmp
dec
add
cs
test
add
push
jecxz
ds
(bad)
test
jo
arpl
retf
sbb
jecxz
mov
pop
les
inc
xor
outs
sahf
aad
inc
mov
push
sub
arpl
outs
jp
and
mov
(bad)
push
xchg
inc
sub
ja
xor
or
mov
adc
sahf
in
inc
mov
les
iret
(bad)
ds
(bad)
test
jo
arpl
dec
dec
cld
jecxz
inc
addr16
mov
mov
mov
std
mov
data16
(bad)
dec
jb
std
mov
jecxz
dec
cmp
push
arpl
outs
dec
pop
icebp
mov
dec
inc
sub
jg
jecxz
pop
or
(bad)
daa
ss
ds
(bad)
ds
adc
sahf
out
dec
inc
xor
jg
jecxz
pop
or
(bad)
sub
add
inc
sub
ja
xor
or
mov
stc
ds
mov
mov
std
ds
xor
sub
data16
ds
mov
mov
ins
adc
(bad)
mov
pop
xchg
cld
jecxz
mov
mov
or
dec
in
or
arpl
ss
int3
or
ss
or
daa
retf
ds
jge
cld
jecxz
daa
retf
mov
or
or
arpl
ss
int3
or
ss
or
daa
mov
stc
jns
cld
jecxz
sbb
mov
pop
pop
add
jge
and
xchg
inc
aas
jl
and
fcmove
xchg
ins
mov
pextrw
sbb
std
ds
out
loopne
std
leave
add
pop
sahf
adc
pop
mov
mov
add
cmps
push
aas
inc
sub
xchg
int3
adc
iret
mov
jns
cld
jecxz
mov
test
add
add
inc
cmp
cld
cmp
add
pop
int3
sbb
mov
add
jo
arpl
jo
arpl
ss
pop
jecxz
retf
xor
cli
pop
outs
inc
mov
popa
nop
cld
jecxz
cmp
jecxz
leave
and
jbe
std
out
daa
lds
inc
mov
push
retf
mov
mov
mov
cs
xchg
pop
outs
int3
daa
sub
and
sahf
dec
stos
ds
not
jmp
push
mov
std
sub
outs
inc
inc
or
or
mov
dec
arpl
xor
retf
inc
in
mov
cmp
push
std
ds
xor
dec
push
dec
call
mov
push
pop
and
addr16
or
adc
or
dec
mov
je
aas
mov
out
mov
std
shl
std
ds
inc
and
sub
retf
add
mov
mov
sub
mov
mov
out
popa
jecxz
retf
jbe
or
daa
pop
(bad)
std
ds
adc
jecxz
push
inc
jmp
pop
out
popa
jecxz
retf
jbe
pop
outs
int3
daa
ss
std
ds
daa
and
(bad)
dec
test
cmp
std
retf
push
ds
jecxz
test
mov
iret
jle
std
ds
xor
mov
jg
ds
inc
arpl
sub
arpl
out
jge
jecxz
iret
inc
je
iret
inc
je
iret
inc
xor
dec
cmp
push
ret
push
jp
cmp
inc
pop
and
pusha
and
xor
inc
inc
sub
(bad)
and
dec
retf
xchg
gs
dec
inc
pop
outs
int
test
add
adc
movs
adc
out
daa
and
jns
mov
inc
sub
dec
inc
cli
mov
or
fsub
std
leave
add
sbb
mov
mov
(bad)
sahf
jp
inc
mov
pop
ret
mov
iret
cmp
push
int3
cli
pop
(bad)
xchg
or
mov
push
int3
mov
ja
xor
push
pop
outs
int3
retf
in
mov
std
leave
xchg
retf
mov
outs
inc
arpl
out
sahf
adc
push
enter
ret
mov
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
mov
sahf
pop
stos
ds
div
pop
sti
mov
outs
inc
arpl
push
(bad)
jb
inc
xchg
ins
dec
inc
adc
push
js
std
xchg
inc
mov
int3
xor
ins
inc
arpl
retf
sar
sub
dec
sahf
sbb
mov
(bad)
retf
pop
arpl
retf
cmp
inc
mov
aaa
sahf
dec
in
inc
mov
rcl
in
movs
out
leave
mov
arpl
out
enter
les
mov
pop
pop
jecxz
pop
and
outs
int3
daa
or
arpl
push
in
mov
(bad)
push
fnstsw
xlat
movs
ds
dec
arpl
xor
test
movs
call
cli
pop
push
jp
pusha
loopne
adc
adc
imul
or
mov
push
arpl
xor
test
lods
jmp
cli
pop
and
pusha
loopne
xor
push
retf
sbb
popa
sbb
inc
mov
add
pop
and
outs
int3
daa
cmp
inc
arpl
push
stc
mov
loop
dec
arpl
outs
push
arpl
ds
enter
(bad)
mov
movs
add
sbb
addr16
and
test
jecxz
ds
jmp
sub
mov
std
mov
sub
mov
sahf
stos
test
daa
mul
cmp
ds
jb
inc
sub
(bad)
mov
int
cld
jecxz
inc
sar
jecxz
int3
add
or
cs
ds
pop
and
(bad)
les
mov
mov
push
xor
in
mov
cmp
pop
lahf
(bad)
mov
pop
push
int3
add
push
add
pop
jno
arpl
retf
aam
mov
mov
push
xor
daa
adc
les
ss
mov
push
xor
lods
shl
dec
dec
push
xor
(bad)
ds
inc
dec
inc
xor
retf
jmp
test
nop
push
or
cli
pop
dec
aas
sahf
adc
arpl
jno
arpl
stos
inc
arpl
jecxz
ds
add
mov
std
cmps
jle
ds
dec
arpl
inc
pop
mov
mov
add
movs
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
and
xchg
out
sub
mov
mov
(bad)
enter
ds
push
retf
push
xchg
fistp
retf
jg
mov
std
xor
fs
push
call
mov
inc
ret
sub
pushf
adc
arpl
jecxz
cmp
jle
mov
(bad)
ds
std
aas
mov
loope
sar
aas
mov
std
ds
sub
jbe
cmp
mov
int
cld
jecxz
inc
lods
aas
mov
mov
mov
std
leave
cmps
imul
ds
or
aas
xor
dec
inc
cmp
dec
inc
mov
push
cli
pop
sbb
mov
std
es
ret
inc
sub
dec
inc
xor
retf
push
test
fisttp
addr16
ds
jecxz
retf
push
div
mov
pop
arpl
push
or
mov
add
sbb
(bad)
sub
jecxz
(bad)
shl
arpl
xor
push
cmps
(bad)
ds
std
push
inc
xor
dec
jge
and
jecxz
ds
mov
pop
call
or
mov
std
sar
dec
mov
sar
repnz
arpl
test
call
pop
mov
push
arpl
outs
int3
xchg
sahf
fwait
add
mov
dec
arpl
inc
pop
mov
mov
add
movs
or
inc
je
iret
inc
and
addr16
test
test
jl
retf
aas
(bad)
add
aad
jb
cmp
retf
inc
jg
mov
mov
icebp
sar
rcl
out
mov
std
popf
adc
pop
add
mov
inc
je
iret
sbb
addr16
pop
test
jecxz
ds
jmp
int3
fsub
mov
cmp
fdivr
mov
mov
and
std
retf
cmp
add
ss
xor
pop
mov
inc
mov
sbb
(bad)
ds
in
pop
jecxz
retf
ins
mov
lds
aas
mov
mov
inc
int3
jb
push
dec
inc
ds
and
mov
(bad)
les
or
retf
adc
xchg
cmp
lods
pop
lock
daa
push
test
outs
iret
add
scas
and
add
push
daa
ror
ds
adc
mov
adc
or
inc
jbe
jae
or
adc
or
(bad)
sub
loop
das
or
(bad)
fist
or
ds
dec
ds
xlat
push
test
sub
retf
add
or
cli
pop
es
std
push
cli
pop
or
jle
sti
ds
xor
pop
adc
pop
mov
mov
add
movs
push
aas
inc
je
iret
inc
and
push
jp
outs
out
mov
imul
mov
mov
or
xchg
or
out
mov
std
pushf
js
std
into
inc
je
iret
cmp
or
scas
int3
mov
inc
xlat
aas
mov
mov
sahf
ja
ds
(bad)
daa
ret
cmp
ds
jecxz
aaa
or
inc
jbe
xor
xchg
lock
aas
fnclex
std
aas
mov
std
push
mov
inc
aas
inc
aam
xor
mov
inc
aas
adc
test
add
jecxz
mov
xrelease
pop
outs
dec
add
pop
ja
add
cli
pop
push
xchg
inc
cmp
imul
dec
mov
loope
cld
jecxz
xchg
mov
inc
xchg
cld
jecxz
retf
adc
mov
mov
sahf
lahf
jl
mov
mov
mov
inc
xchg
cld
jecxz
push
mov
inc
aas
inc
xor
outs
in
ds
(bad)
mov
push
(bad)
mov
sbb
arpl
pop
or
mov
mov
ds
inc
arpl
outs
dec
arpl
outs
adc
arpl
cmp
test
nop
push
inc
pop
ret
mov
iret
inc
je
iret
sbb
addr16
sahf
test
jecxz
ds
jmp
aad
int3
pop
jecxz
retf
jmp
cmp
add
mov
int3
daa
xor
out
xor
std
les
adc
std
leave
xor
mov
mov
into
add
cli
pop
push
retf
inc
mov
push
jp
popa
add
mov
mov
mov
mov
ds
mov
mov
mov
ds
dec
arpl
retf
add
mov
push
arpl
cmp
sub
ds
std
ds
pop
ja
mov
dec
arpl
retf
mov
aas
mov
add
ds
jmp
or
stos
std
ds
icebp
dec
inc
(bad)
jecxz
sbb
std
ds
xchg
fisubr
ds
and
std
ds
mov
arpl
jo
arpl
xor
std
retf
adc
cmp
mov
mov
call
push
mov
std
ds
sub
add
sub
inc
bound
inc
lods
mov
sub
loope
aas
fsubr
movs
sub
inc
cmp
icebp
mov
mov
icebp
int
inc
inc
into
dec
(bad)
or
cmp
test
je
mov
mov
mov
gs
cld
jecxz
sbb
dec
ds
mov
mov
ds
dec
arpl
retf
pushf
mov
aaa
loope
ds
jae
inc
push
ds
cli
pop
and
mov
std
add
inc
sub
retf
add
push
test
cli
xor
retf
and
std
ds
jecxz
stos
sahf
inc
mov
mov
test
call
cmp
push
std
inc
sub
push
int3
add
inc
daa
push
jns
ds
xor
pop
inc
js
iret
mov
std
mov
and
outs
inc
arpl
xor
xchg
push
jno
arpl
dec
push
nop
or
int
cs
jae
jmp
and
enter
sbb
inc
repnz
jecxz
mov
add
ret
fisub
ds
in
fsub
std
retf
add
adc
mov
std
es
cdq
add
inc
xor
jg
push
std
cmp
and
ds
xor
mov
sbb
aas
mov
std
sar
inc
mov
mov
inc
je
iret
sahf
imul
aas
inc
je
iret
inc
je
iret
or
mov
sahf
or
les
inc
and
mov
out
jne
std
push
cmp
add
mov
std
ds
(bad)
ds
call
test
test
mov
mov
mov
sahf
pop
je
mov
mov
aas
sub
pop
std
ds
outs
int
cld
das
out
sub
ins
inc
(bad)
sahf
pcmpeqw
mov
fxch
cld
aaa
pop
mov
outs
inc
pop
push
jecxz
aaa
or
dec
test
adc
mov
(bad)
call
std
ds
jae
iret
sbb
addr16
les
test
jecxz
ds
jmp
outs
(bad)
ds
fnstcw
repz
cmp
mov
mov
push
xchg
push
jno
arpl
dec
inc
xor
jecxz
ds
out
test
jecxz
inc
and
popa
mov
or
(bad)
lods
xchg
test
ja
cmc
retf
inc
arpl
test
ret
sbb
add
enter
ret
les
cld
jecxz
jecxz
sub
jg
jecxz
ds
xor
jg
and
mov
std
(bad)
mov
xor
int3
add
adc
sbb
aas
inc
cwde
and
mov
std
retf
cli
pop
push
pop
mov
ss
aas
mov
mov
mov
mov
int3
or
push
mov
xor
inc
arpl
xor
retf
push
dec
test
and
cmp
push
cmp
mov
jno
cmp
add
inc
in
ds
sub
push
inc
cmp
es
mov
mov
mov
inc
and
rcr
movs
mov
xchg
add
mov
jae
ds
pop
ret
jno
cmp
add
sub
mov
mov
outs
dec
arpl
push
out
mov
mov
sbb
out
leave
int3
dec
dec
test
push
outs
aas
push
std
retf
xor
push
ret
xor
test
mov
sub
pop
lods
mov
nop
push
cmp
test
push
fwait
inc
push
std
leave
int3
xor
retf
xchg
aas
mov
mov
outs
int3
or
repnz
jecxz
mov
repz
(bad)
ds
std
ds
cdq
pop
mov
xor
mov
aas
(bad)
enter
ds
ret
hlt
std
into
inc
je
iret
and
data16
out
sub
mov
mov
(bad)
enter
ds
jmp
cmp
cmp
add
push
enter
daa
xchg
jg
ds
sub
sub
xor
icebp
test
(bad)
xchg
aas
xor
add
mov
cmps
pop
repz
dec
cmp
(bad)
ds
int3
daa
push
pop
std
ds
mov
sbb
in
sub
std
retf
cmp
scas
outs
inc
arpl
ins
jb
repnz
push
arpl
outs
inc
arpl
cmp
and
push
xchg
or
or
out
retf
push
test
retf
jp
inc
sub
sub
cmp
push
mov
ficomp
push
test
inc
xor
jnp
in
xchg
push
xor
(bad)
ds
in
retf
inc
test
retf
jp
inc
pop
and
sub
add
jnp
in
ds
fdivr
repz
mov
std
leave
cli
pop
push
les
ds
ss
mov
ins
inc
arpl
xor
xchg
push
outs
leave
daa
push
std
ds
xor
xchg
and
aas
xor
xchg
lods
inc
enter
jp
pusha
mov
les
addr16
ss
retf
inc
jp
pusha
push
retf
inc
jb
imul
retf
cmp
nop
dec
retf
xor
cwde
loop
aas
cmp
enter
dec
xchg
or
out
and
retf
sbb
mov
aad
icebp
fidivr
inc
sub
pop
inc
xor
xchg
stos
xchg
inc
xor
push
sahf
arpl
arpl
inc
pop
pushf
adc
dec
mov
std
cmp
(bad)
iret
inc
je
iret
inc
je
iret
pop
aaa
push
xchg
or
cmp
inc
xor
addr16
push
and
sub
dec
outs
in
ds
(bad)
mov
outs
inc
arpl
push
hlt
les
mov
jecxz
leave
xor
sbb
cli
pop
push
retf
push
test
(bad)
cmp
or
xchg
ds
dec
arpl
cmp
test
jecxz
inc
scas
outs
inc
arpl
sub
das
xor
push
daa
retf
ds
cmps
sbb
inc
xor
imul
addr16
jecxz
ds
stos
jae
jge
and
jecxz
ds
sub
outs
jmp
inc
mov
fiadd
mov
and
addr16
or
push
xchg
push
outs
leave
daa
repnz
std
ds
mov
xchg
fimul
cmc
sbb
lods
mov
mov
inc
ja
addr16
shr
xchg
or
push
pop
out
and
retf
push
xchg
sahf
mov
cmc
retf
cs
sar
inc
xor
dec
or
xor
aas
push
add
jecxz
iret
inc
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
outs
out
daa
repnz
or
push
jecxz
test
ret
add
(bad)
(bad)
ds
and
std
ds
jo
and
or
push
cmp
repnz
mov
std
ds
xchg
fidivr
and
std
ds
sub
or
mov
mov
in
ds
icebp
mov
fcmovb
(bad)
ds
out
data16
retf
inc
or
aas
mov
(bad)
(bad)
ds
std
ds
push
out
mov
jnp
ds
and
std
ds
jecxz
mov
aas
(bad)
(bad)
ds
in
in
std
retf
add
inc
mov
cld
ds
out
jb
std
leave
inc
or
aas
mov
popa
enter
ds
ret
jecxz
add
jecxz
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
push
retf
jb
mov
jecxz
add
mov
std
mov
xchg
aas
mov
ret
sbb
(bad)
mov
xor
cli
pop
push
aas
sahf
jne
inc
mov
int3
push
cli
pop
push
ds
std
daa
out
lahf
add
inc
xor
inc
adc
xchg
std
cmp
mov
sahf
out
std
ds
adc
mov
(bad)
iret
inc
je
iret
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
push
mov
xor
je
iret
outs
in
or
mov
(bad)
iret
inc
je
iret
lahf
jg
inc
mov
mov
inc
je
iret
inc
je
iret
or
jb
mov
sub
les
pop
or
lds
push
ds
sub
test
outs
adc
push
mov
inc
pop
add
movs
jb
push
int3
add
mov
add
mov
std
ds
je
iret
inc
je
iret
inc
cmp
inc
jmp
sub
ja
push
cmpps
jl
fadd
xor
mov
mov
inc
inc
call
inc
inc
je
iret
inc
je
iret
inc
sub
inc
inc
and
les
inc
cmp
push
jns
test
mov
mov
std
add
fadd
mov
fwait
cli
ds
rol
call
std
ds
xor
mov
std
ds
test
mov
mov
std
add
fadd
ds
rol
in
jb
outs
(bad)
ds
xor
lods
jecxz
ds
test
mov
mov
std
add
fmul
mov
fwait
repnz
rol
lock
outs
xlat
std
ds
xor
test
std
ds
out
lods
mov
or
jbe
ror
je
iret
inc
je
iret
or
out
xchg
inc
bound
retf
mov
inc
or
aas
jge
xchg
frndint
jecxz
test
outs
les
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
sbb
inc
mov
ret
stos
pop
add
jecxz
retf
(bad)
mov
mov
(bad)
enter
ds
push
retf
jb
mov
sub
add
mov
std
es
std
ds
xor
push
cli
pop
push
ds
std
push
mov
jae
mov
sbb
(bad)
pop
mov
mov
add
cmps
mov
inc
je
iret
inc
je
iret
or
push
retf
(bad)
ds
mov
add
std
xrelease
imul
test
icebp
(bad)
jl
inc
xor
push
std
out
ds
out
adc
std
sahf
adc
ror
je
iret
inc
sub
inc
push
int3
xchg
or
mov
push
lahf
jg
sub
ret
jbe
pop
ret
jb
mov
ins
xchg
cld
jecxz
xchg
(bad)
mov
inc
aas
loope
cmp
sub
jecxz
add
mov
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
sbb
inc
mov
ret
stos
pop
add
jecxz
out
sub
mov
mov
(bad)
enter
ds
xchg
xor
push
push
cli
pop
or
mov
std
es
pop
aas
inc
xor
inc
sbb
aas
mov
std
sar
iret
inc
and
push
neg
in
std
leave
cli
pop
add
jbe
or
xchg
movs
loop
mov
jmp
retf
or
push
out
ds
push
aas
sbb
addr16
lods
aaa
test
jecxz
ds
jmp
cmp
mov
fwait
jecxz
mov
out
mov
add
inc
mov
mov
lods
xchg
jmp
repz
enter
retf
jae
inc
xor
push
ja
add
cs
sti
ds
fcmovb
sbb
(bad)
ds
mov
xor
cmp
or
ja
cmp
sub
jecxz
(bad)
cmp
or
ds
inc
and
repz
sub
add
and
add
mov
std
leave
cli
pop
ds
mov
aas
sub
sub
cmp
inc
lahf
jge
ds
stc
sub
adc
repnz
lahf
(bad)
ds
ret
pop
and
xor
push
loope
push
add
inc
sti
ds
dec
(bad)
ds
pop
arpl
jo
arpl
lds
mov
in
adc
std
retf
es
mov
lods
ret
sbb
and
push
bound
jecxz
add
outs
add
pop
and
dec
retf
dec
daa
or
std
cmp
or
sahf
xchg
pop
cmp
lds
pop
aam
mov
inc
and
sub
jg
movs
jae
inc
xor
push
jge
and
jecxz
ds
and
pop
inc
aas
sahf
aaa
pop
cmp
pushf
loope
mov
out
mov
std
ret
mov
xor
jecxz
shl
and
fidivr
ret
inc
cmp
test
call
ret
dec
mov
outs
pop
arpl
outs
inc
pop
and
push
(bad)
sahf
scas
(bad)
ds
test
lock
pusha
and
push
cmp
adc
adc
add
push
xchg
jge
and
jecxz
ds
pop
pop
cmp
outs
jp
fisubr
arpl
fcmovu
pop
mov
test
lds
pop
and
dec
xchg
sahf
addr16
ds
ret
movs
jae
and
push
retf
loopne
mov
add
inc
pusha
and
xor
push
jge
and
jecxz
ds
and
pop
inc
aas
sahf
jae
cmp
outs
lds
out
jb
retf
or
mov
dec
test
je
mov
mov
ficom
std
ds
lds
cld
jecxz
pushf
adc
std
jb
outs
dec
arpl
inc
pop
pushf
adc
dec
mov
std
cmp
(bad)
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
sbb
cmps
jecxz
scas
or
inc
sti
iret
or
mov
inc
dec
jo
std
ds
inc
cmp
test
and
sti
xrelease
outs
jmp
and
cld
(bad)
repnz
and
(bad)
dec
std
ds
push
sub
outs
dec
dec
or
enter
dec
retf
add
or
cmp
enter
and
std
jno
outs
dec
xor
ins
or
mov
std
popf
adc
mov
cmps
mov
movs
xchg
iret
dec
xchg
sahf
stos
stc
ds
ret
movs
jb
sahf
pop
enter
pop
add
jecxz
ret
xchg
jecxz
xchg
mov
std
xchg
sahf
jecxz
ds
inc
inc
cmp
inc
aas
jns
inc
cmp
pop
stos
inc
mov
inc
inc
inc
xor
mov
mov
pop
popf
adc
pushf
jns
dec
and
rol
stos
inc
cmp
dec
std
ds
inc
dec
inc
cmp
xchg
cmp
ss
mov
test
jecxz
push
sti
(bad)
ds
out
arpl
std
leave
add
mov
icebp
std
ds
pop
retf
ror
outs
pop
arpl
cmp
mov
push
(bad)
sub
pop
and
int3
add
pop
loope
ret
xor
pop
add
inc
sub
dec
or
int3
pusha
cmp
cmp
push
xchg
inc
scas
out
adc
std
retf
pop
call
mov
inc
je
iret
or
arpl
cmp
stc
repz
call
mov
retf
inc
or
inc
sti
ds
aam
add
data16
sub
mov
or
jecxz
ret
cmp
test
nop
inc
scas
out
adc
inc
pop
call
mov
pop
outs
dec
arpl
ss
jb
outs
aas
dec
or
mov
sub
cmp
pop
ja
add
outs
(bad)
les
pusha
and
inc
and
jmp
mov
jecxz
add
push
out
cli
pop
push
xchg
sub
dec
sub
mov
cli
pop
sbb
jbe
or
jb
sti
ds
test
rol
bound
ds
dec
test
mov
mov
inc
pop
cwde
jns
mov
inc
je
iret
inc
je
iret
or
arpl
repz
xchg
and
push
xchg
sahf
pop
sti
ds
out
ret
xor
dec
mov
cmp
mov
jl
pop
pushf
adc
dec
mov
loopne
ds
aam
add
push
sub
add
in
xchg
sahf
xlat
cli
ds
ret
stos
pop
popf
adc
ror
je
iret
inc
je
iret
inc
movs
mov
push
jle
aas
aas
sub
add
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
pushf
mov
inc
inc
stos
pop
add
in
frndint
jecxz
iret
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
shl
mov
mov
mov
mov
inc
jge
std
ds
mov
cmp
aas
mov
jbe
mov
cmp
aas
pop
jmp
in
std
ds
mov
mov
xlat
test
sar
mov
sti
daa
push
push
sti
fwait
(bad)
ds
xchg
and
inc
mov
jae
jl
cli
inc
inc
sub
les
mov
mov
std
ret
lods
repz
jecxz
leave
sti
mov
xchg
push
int3
fdivr
mov
add
cmp
ds
das
add
mov
std
ds
cmc
cld
xchg
fisubr
inc
inc
cmp
inc
mov
xor
scas
add
dec
jge
jmp
jmp
mov
bound
sti
scas
mov
mov
bswap
xor
std
xchg
fisubr
inc
inc
cmp
test
mov
xor
scas
lock
jge
jmp
call
fcmove
sti
scas
mov
iret
adc
sti
cmps
mov
imul
aas
sub
sub
mov
mov
aas
sub
xchg
aaa
add
lods
jno
fbstp
pop
nop
or
out
mov
std
ret
xchg
int3
add
mov
inc
dec
cmp
test
mov
es
mov
cmc
cld
xchg
jmp
test
int
inc
mov
mov
pop
out
lods
pop
cmp
or
xchg
iret
mov
std
test
pushf
in
push
ds
or
mov
jecxz
cmps
mov
std
ds
outs
(bad)
or
xchg
mov
cmp
adc
std
cmp
jle
stos
in
ds
mov
mov
std
leave
sti
jmp
jmp
pop
mov
inc
aam
add
xchg
cmp
jecxz
sub
pop
mov
jecxz
fdivr
ds
mov
ds
mov
ja
add
popa
outs
int3
ret
lock
lds
inc
xchg
cmp
jecxz
jmp
mov
js
ds
push
adc
sub
enter
ds
or
jecxz
aas
mov
std
(bad)
or
mov
lahf
out
ds
std
mov
outs
dec
inc
and
mov
xchg
mov
es
mov
inc
loope
ds
in
ds
mov
ss
std
leave
sti
mov
test
xor
add
jecxz
ret
xchg
jo
aas
mov
dec
inc
push
xor
test
outs
(bad)
or
mov
add
retf
dec
jae
fcomp
mov
stos
inc
sub
std
ds
inc
add
mov
jae
outs
fs
ds
mov
ds
shl
popa
outs
dec
inc
inc
sub
mov
ins
push
daa
aas
cmp
enter
mov
jp
mov
jg
add
test
jp
pop
add
ds
mov
sti
cmp
sahf
mov
ret
sub
les
sub
call
mov
ss
mov
inc
loope
ds
dec
retf
dec
jae
fmul
mov
stos
inc
sub
std
ds
movs
add
mov
inc
dec
aas
mov
cmp
sub
xchg
inc
loope
ds
mov
or
ds
sub
push
sti
idiv
ds
cmp
imul
add
sub
inc
mov
std
ret
xchg
push
add
mov
dec
inc
push
cmp
retf
mov
in
(bad)
dec
sub
les
int
inc
mov
mov
sub
test
mov
es
mov
in
(bad)
out
outs
dec
inc
inc
sub
inc
mov
std
ret
mov
inc
cmc
cld
xchg
fisubr
inc
inc
jns
cmp
jecxz
aas
mov
in
(bad)
out
outs
inc
dec
inc
pop
push
jg
sub
retf
sti
ds
inc
inc
lahf
xchg
cld
ds
inc
dec
inc
popa
(bad)
retf
mov
xor
xchg
jecxz
test
fdivr
dec
cmp
mov
inc
add
ins
inc
inc
inc
popa
push
les
jecxz
leave
or
mov
inc
xor
xchg
or
cmp
ins
inc
sub
movs
or
ds
das
add
mov
es
mov
cmc
cld
xchg
jmp
test
int
aas
mov
mov
lods
(bad)
ds
inc
pop
inc
xor
retf
mov
ins
jnp
sub
xor
aas
pop
retf
push
dec
inc
and
mov
retf
std
xchg
fisubr
inc
inc
cmp
test
mov
xor
scas
lock
inc
das
add
sub
push
cmp
mov
lock
retf
push
ja
popa
push
les
addr16
ja
pop
retf
std
xchg
fisubr
inc
inc
cmp
test
mov
xor
scas
lock
inc
das
add
xor
cmp
mov
lock
retf
push
ja
xor
retf
inc
les
dec
inc
lds
cmp
sti
stos
out
mov
std
retf
les
outs
push
inc
inc
xor
daa
jb
std
ds
sub
ret
inc
jp
pop
or
mov
inc
in
ds
adc
mov
addr16
mov
dec
retf
addr16
and
mov
ss
mov
in
(bad)
out
into
sub
sti
jae
enter
ins
cmps
jecxz
enter
add
jecxz
retf
lds
ins
inc
xlat
outs
inc
leave
xor
jecxz
ds
jbe
inc
mov
jnp
mov
push
retf
addr16
and
dec
daa
ret
cmp
mov
int3
sbb
mov
add
jge
cli
ds
std
push
sti
or
jecxz
pusha
pop
loope
retf
mov
jecxz
ds
inc
ror
dec
xor
jecxz
mov
mov
pop
retf
ror
mov
or
out
xchg
outs
cmp
push
pushf
(bad)
ds
xor
aas
xor
enter
mov
aas
jb
aas
mov
mov
out
in
ds
push
aas
mov
xchg
mov
mov
in
add
std
retf
or
add
push
enter
inc
aas
bound
enter
std
mov
std
ds
xor
retf
pop
add
je
iret
inc
je
iret
inc
je
iret
and
ins
lock
mov
mov
(bad)
enter
ds
push
retf
jb
mov
sub
dec
mov
std
cmp
aas
and
dec
daa
mov
test
retf
cmp
cli
mov
ret
fnstcw
retw
movs
jae
inc
jb
inc
mov
les
mov
lds
pop
inc
aas
sahf
repz
cmp
outs
dec
arpl
jecxz
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
sbb
jmp
jb
inc
mov
xchg
sub
dec
inc
lods
(bad)
ds
dec
pop
sahf
mov
xchg
loopne
push
jl
cli
inc
sub
xor
mov
in
ds
inc
jmp
push
std
ret
sub
or
mov
je
(bad)
ds
or
mov
lods
cdq
mov
xor
retf
mov
inc
jmp
aaa
std
(bad)
out
outs
inc
inc
inc
sub
inc
(bad)
sub
int3
inc
int3
(bad)
ds
cmp
dec
sar
mov
push
daa
jmp
inc
mov
addr16
inc
jb
inc
mov
dec
nop
sahf
add
inc
cmp
add
mov
inc
inc
inc
call
in
or
std
ret
(bad)
ds
lds
int3
and
mov
outs
dec
xor
jecxz
ds
mov
cmps
mov
int3
jo
mov
xchg
mov
xor
jecxz
ds
xor
test
outs
jmp
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
out
xchg
inc
popa
push
enter
lds
movs
jl
or
in
ds
int3
rcl
data16
sub
mov
(bad)
in
cmp
jmp
inc
mov
mov
inc
sub
lods
das
mov
int
xor
enter
xor
test
dec
xchg
std
ds
inc
rol
dec
and
outs
push
inc
inc
repnz
jge
cli
aas
mov
std
leave
or
mov
xchg
aad
jl
cli
inc
mov
es
mov
ss
retf
mov
outs
dec
inc
icebp
and
mov
stos
inc
cmp
out
sahf
inc
mov
retf
jecxz
mov
jecxz
ds
inc
rol
int3
daa
jle
std
ds
mov
mov
mov
std
ds
mov
std
leave
cmp
(bad)
ds
call
xor
retf
mov
mov
int3
mov
mov
std
lds
adc
test
jecxz
test
retw
gs
mov
mov
jecxz
ds
xor
div
mov
aas
jns
pop
dec
jge
cli
ds
std
daa
sub
sahf
inc
cmps
pop
mov
mov
pop
retf
rol
mov
inc
je
iret
inc
je
iret
or
arpl
outs
test
mov
std
ret
jbe
push
xchg
push
jno
sbb
inc
push
cmp
addr16
fdivr
mov
test
std
ds
mov
jg
add
iret
add
dec
and
aas
mov
dec
inc
inc
pop
and
sub
lods
aaa
mov
int
xor
enter
xor
test
cmps
push
aas
inc
mov
cld
mov
std
retf
std
mov
outs
test
mov
std
(bad)
push
push
inc
mov
mov
mov
std
ds
or
mov
cmp
retf
adc
clc
jmp
nop
inc
jb
inc
mov
in
pop
loope
ds
(bad)
ds
lds
mov
mov
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
out
xchg
inc
xor
enter
je
loope
retf
les
push
inc
inc
inc
sub
nop
inc
xor
daa
out
sub
mov
add
fmul
xchg
(bad)
ds
inc
jae
movs
jl
inc
sub
xchg
push
outs
int3
daa
cli
loopne
cmp
enter
(bad)
out
cmp
test
mov
(bad)
aas
sub
mov
jo
adc
cli
ds
std
push
sti
mov
mov
jecxz
add
loope
retf
mov
jecxz
ds
inc
rol
mov
inc
mov
xchg
sti
xchg
aas
sub
retf
mov
cmp
or
mov
add
or
push
cmp
cmp
or
ds
sub
enter
enter
sbb
(bad)
(bad)
adc
or
jae
std
ds
ja
ds
mov
les
jecxz
lods
jmp
dec
cmp
inc
inc
cmp
retf
mov
sti
iret
jae
jmp
into
xor
xchg
pop
das
xchg
or
daa
push
loopne
cmp
gs
std
retf
push
xchg
inc
mov
xchg
mov
jecxz
(bad)
aas
sub
dec
cmp
cld
ds
inc
sub
movs
jb
or
pop
cli
ds
mov
les
sub
xchg
push
outs
int3
enter
fdiv
imul
ds
push
inc
inc
sub
mov
movs
xchg
sub
retf
xor
outs
(bad)
dec
inc
daa
std
ds
mov
add
sar
mov
inc
inc
inc
in
mov
adc
pushf
pop
mov
std
imul
in
ds
inc
inc
or
(bad)
ds
js
fs
push
std
nop
push
int3
cmp
mov
mov
inc
and
add
mov
or
adc
loope
retf
(bad)
ds
xchg
mov
std
ds
sub
mov
int3
add
mov
inc
inc
xor
mov
jecxz
test
fild
retf
mov
xchg
inc
outs
push
jecxz
imul
jmp
push
sti
(bad)
ds
lds
retf
int3
mov
xor
mov
mov
pop
popf
adc
pushf
js
std
leave
sti
jmp
enter
mov
out
add
fwait
inc
adc
jecxz
retf
les
ins
dec
sub
rol
ret
cmp
xchg
call
sub
ds
std
push
sti
mov
mov
jecxz
test
loopne
retf
mov
adc
jecxz
ds
mov
cmps
push
aas
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
inc
mov
push
enter
push
in
ds
int3
fsubr
push
dec
inc
inc
daa
push
cmp
xchg
sti
jmp
jmp
sbb
aas
mov
mov
test
in
outs
sbb
ds
out
xor
inc
dec
mov
std
ds
dec
xchg
std
ds
inc
rol
dec
and
outs
or
mov
std
ds
mov
sub
inc
mov
es
jno
push
(bad)
(bad)
ds
mov
xor
jl
in
sub
lds
int3
mov
mov
jecxz
retf
(bad)
enter
ds
pop
call
mov
scas
in
outs
sbb
ds
mov
ds
les
int3
jg
mov
jecxz
retf
dec
enter
sbb
jecxz
enter
add
jecxz
push
sti
(bad)
ds
out
push
out
leave
add
mov
icebp
std
ds
pop
retf
rol
dec
sub
rol
jns
push
mov
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
and
inc
das
push
jb
test
enter
repz
jecxz
retf
jno
(bad)
ds
jno
outs
sbb
ds
shl
pop
pop
js
add
leave
ror
sti
(bad)
ds
addr16
inc
in
test
outs
or
sub
gs
mov
std
xchg
inc
cmc
cld
xchg
out
pushf
ss
mov
mov
scas
in
ds
sub
(bad)
aas
sub
daa
mov
std
ds
sub
ret
mov
mov
inc
inc
sub
push
sti
iret
retf
jecxz
test
jecxz
retf
lds
int3
pop
fnstcw
outs
dec
inc
cmp
dec
(bad)
mov
adc
add
(bad)
enter
ds
pop
call
into
daa
stos
jge
aas
inc
addr16
inc
mov
les
push
add
outs
mov
(bad)
xor
xor
mov
jp
inc
push
std
ret
sub
stc
out
sti
imul
or
mov
ss
mov
popa
out
imul
mov
cmp
xchg
out
outs
push
inc
inc
cs
inc
scas
sub
retf
dec
enter
fs
jecxz
enter
add
jecxz
retf
lds
ins
dec
adc
aam
mov
mov
jecxz
ds
outs
xchg
inc
mov
add
sahf
out
call
inc
cmp
push
retf
mov
icebp
std
ds
pop
retf
ror
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
outs
aas
dec
cmp
enter
inc
mov
(bad)
stc
mov
std
ds
and
adc
jle
mov
lods
gs
xor
ins
outs
inc
aas
repnz
add
pop
add
mov
ret
fidiv
adc
add
inc
je
iret
inc
je
iret
inc
and
cmp
mov
lock
aas
push
xchg
es
xchg
adc
push
inc
mov
ret
test
add
out
outs
dec
aas
push
or
es
pop
add
mov
mov
inc
je
iret
inc
and
push
retf
add
mov
std
sar
inc
mov
mov
inc
je
iret
or
ret
sub
jmp
sub
xchg
icebp
lods
xchg
(bad)
or
push
pop
or
xor
cmp
ins
inc
arpl
into
add
outs
dec
(bad)
loop
cmp
jecxz
cmp
clc
jecxz
inc
inc
repnz
add
push
inc
mov
or
inc
in
ds
sub
xchg
mov
std
movs
inc
jmp
retf
cmp
lds
inc
mov
or
sub
std
cmp
out
mov
std
leave
mov
repz
inc
cmp
ds
lds
stos
add
int3
in
ds
sub
retf
mov
add
add
jb
inc
mov
jns
icebp
mov
(bad)
ftst
std
ds
movs
or
ds
sbb
jecxz
push
mov
sar
mov
add
xor
lods
in
ds
jmp
pop
xchg
(bad)
hlt
add
jecxz
sar
add
mov
fiadd
add
pop
lods
test
dec
cmp
add
xor
and
push
ret
out
mov
std
enter
mov
arpl
lds
aas
mov
cmp
mov
and
jecxz
test
into
imul
pop
push
int3
add
and
or
(bad)
aas
cmp
outs
aas
cmp
arpl
push
dec
arpl
xor
mov
or
cli
cmp
pop
retw
add
outs
or
ja
dec
mov
lds
stos
add
iret
fcmovbe
retf
push
xchg
sahf
sbb
dec
cmp
cmp
out
mov
(bad)
ds
cmp
aas
xor
dec
aas
sub
dec
lds
cmp
adc
inc
shl
jecxz
ds
inc
rcr
outs
jecxz
jns
inc
aas
cmp
aas
mov
mov
inc
aas
cmp
aas
cmp
iret
inc
and
push
retf
add
mov
std
sar
inc
mov
mov
inc
je
iret
cmp
adc
or
jb
fisubr
std
ds
cmc
repz
sub
arpl
clc
ror
cld
xor
cmp
cmp
mov
aas
xor
cmp
add
xlat
mov
adc
push
jns
mov
(bad)
xchg
cmp
ds
data16
std
arpl
dec
fiadd
mov
mov
or
out
std
loopne
inc
movs
int
inc
mov
mov
leave
cmp
sti
ds
jecxz
cld
mov
scas
push
xchg
sahf
ja
cmp
out
sub
std
ds
cmp
sar
std
inc
movs
int
inc
mov
mov
leave
cmp
sti
ds
jecxz
rol
cwde
std
loopne
inc
movs
int
inc
mov
mov
mov
xchg
and
in
std
loopne
retf
cmp
call
mov
mov
inc
and
dec
inc
mov
xchg
sub
lds
inc
mov
mov
mov
std
cmp
addr16
loopne
icebp
cmp
sub
xor
dec
mov
std
xor
in
dec
repnz
jo
repnz
jne
mov
or
mov
data16
inc
lds
aas
mov
xchg
lds
scas
fs
ds
into
or
ds
cmp
xor
xchg
pop
in
repnz
ds
ds
clc
cmp
mov
mov
mov
std
ds
add
cdq
call
and
(bad)
mov
mov
dec
mov
jp
xchg
lock
cld
imul
pop
xadd
jo
call
inc
aas
cmp
add
ss
push
pop
sbb
outs
inc
arpl
dec
dec
test
daa
scas
xchg
cld
cmp
test
or
sar
ds
xchg
inc
and
stos
add
shr
test
cli
inc
sub
imul
sub
mov
sub
xchg
push
jmp
ds
jmp
retf
push
retf
sbb
jl
inc
enter
enter
dec
cmp
inc
dec
adc
mov
inc
pop
jb
aas
add
mov
test
add
mov
inc
aas
cmp
inc
aas
adc
mov
inc
aas
jmp
inc
aas
adc
mov
inc
aas
cmp
inc
aas
cmp
inc
aas
inc
je
iret
inc
je
iret
inc
je
iret
inc
and
add
(bad)
out
add
repnz
mov
jmp
add
mov
iret
inc
je
iret
inc
sub
inc
inc
cmp
inc
push
ss
mov
std
ret
mov
iret
inc
je
iret
inc
je
iret
inc
sub
inc
inc
cmp
inc
push
ss
mov
std
retf
push
aas
inc
je
iret
inc
je
iret
inc
je
iret
or
arpl
or
retf
push
daa
ret
cmp
xor
or
enter
inc
outs
or
jg
add
dec
aas
in
mov
cmp
push
inc
pop
call
(bad)
ds
addr16
int3
cmp
fninit
std
ds
inc
arpl
jmp
arpl
cmp
or
xchg
cmp
std
ds
ffree
aas
mov
std
lds
aas
mov
cmp
mov
std
ret
xchg
pop
add
adc
repz
repz
retf
ds
cli
pop
sub
mov
std
ret
mov
call
dec
arpl
xor
std
retf
ror
or
xchg
pop
cmp
test
and
mov
mov
cmp
(bad)
aas
sub
or
push
hlt
mov
sub
nop
or
daa
call
stos
ficom
mov
inc
cmp
nop
sahf
xchg
ds
add
mov
std
retf
add
push
push
sti
jecxz
ds
les
mov
lds
cld
jecxz
fdiv
loopne
retf
sub
in
jo
arpl
stos
inc
arpl
loop
ds
inc
dec
(bad)
ins
inc
dec
jge
and
pop
inc
aas
sahf
pop
cmp
mov
mov
ds
mov
adc
(bad)
enter
ds
ret
hlt
std
into
inc
je
iret
inc
je
iret
sbb
addr16
in
cmp
fninit
std
ds
jmp
adc
cmp
dec
inc
sub
mov
movs
jnp
imul
lahf
idiv
ds
inc
jnp
xor
jp
pop
or
jge
std
ds
in
ds
xor
or
mov
mov
shl
test
xrelease
rcr
push
mov
std
leave
cld
out
ds
stos
jb
push
outs
leave
daa
pop
(bad)
ds
bound
enter
(bad)
(bad)
and
(bad)
(bad)
jo
arpl
retf
mov
mov
xchg
ficomp
cmp
test
inc
xor
dec
or
mov
mov
mov
inc
sub
xchg
push
outs
leave
daa
mov
std
cmp
pop
inc
xor
dec
jge
and
jecxz
ds
and
pop
inc
aas
sahf
dec
cmp
into
pop
retf
dec
xchg
inc
scas
out
mov
std
leave
int
loopne
ss
mov
outs
dec
arpl
cmp
push
outs
leave
daa
and
std
ds
aam
xor
mov
push
retf
inc
dec
sahf
sbb
ds
or
cmp
or
push
cli
pop
sub
mov
std
push
cli
pop
push
(bad)
sub
(bad)
es
mov
pop
popf
adc
(bad)
enter
ds
ret
lock
retf
add
push
push
cli
pop
sub
mov
std
push
cli
pop
push
(bad)
sub
(bad)
mov
sti
ds
stos
jmp
addr16
sub
mov
mov
(bad)
enter
ds
jmp
jno
arpl
retf
test
mov
mov
fimul
(bad)
ds
sbb
cmp
inc
pop
jno
arpl
retf
test
mov
mov
or
mov
scas
jmp
mov
out
les
or
cli
pop
es
std
push
cli
pop
or
adc
sti
ds
stos
pop
pushf
adc
arpl
inc
xchg
std
cmp
mov
jne
add
mov
xor
retf
ss
lock
add
ins
jp
div
inc
lds
or
inc
or
in
sar
mov
mov
inc
mov
sub
fild
mov
inc
inc
xor
inc
enter
xchg
ficomp
fs
mov
daa
add
movs
jecxz
int3
add
push
retf
inc
arpl
loop
ds
inc
arpl
xor
mov
test
mov
mov
adc
ins
or
mov
std
sar
dec
mov
mov
and
xchg
sub
mov
mov
(bad)
enter
ds
jmp
jno
arpl
retf
push
fisub
lds
mov
sbb
cmp
inc
pop
jno
arpl
retf
push
xchg
ficom
mov
or
mov
outs
jmp
pop
sub
push
cli
pop
es
std
push
cli
pop
or
rcr
sti
ds
stos
pop
pushf
adc
arpl
inc
xchg
std
cmp
mov
jne
add
jp
std
ds
xor
retf
ss
lock
mov
cmp
jl
or
inc
ja
cmp
xchg
cmp
ds
cmp
lds
inc
cmp
or
ja
out
test
lds
xor
dec
arpl
dec
lds
jecxz
ds
in
retf
je
mov
mov
jge
and
jecxz
ds
and
pop
inc
aas
sahf
pop
cmp
outs
les
aas
icebp
std
ds
add
movs
adc
inc
je
iret
or
out
xchg
inc
sub
les
sub
retf
push
(bad)
sahf
jnp
ds
mov
arpl
outs
dec
ja
out
mov
inc
sub
xchg
mov
mov
out
or
cld
adc
enter
call
jae
iret
inc
je
iret
inc
je
iret
inc
je
iret
pop
aaa
push
retf
adc
or
cmp
arpl
retf
mov
mov
mov
cli
pop
push
retf
sub
cmps
cmp
repz
int3
cli
sbb
xchg
push
int3
mov
add
outs
dec
arpl
outs
jb
fisubr
or
add
outs
dec
dec
inc
movs
mov
retf
fild
mov
push
inc
scas
push
xchg
sahf
aas
idiv
mov
dec
inc
inc
push
and
aam
nop
retf
dec
loope
add
fimul
or
int3
xor
mov
or
mov
push
fild
mov
xchg
mul
std
retf
add
outs
ds
loope
and
retf
arpl
xor
daa
jmp
sub
outs
push
ror
test
call
arpl
sti
in
sbb
arpl
mov
call
mov
test
mov
mov
or
scas
jecxz
retf
out
retf
push
retf
mov
test
lds
xor
dec
xor
les
adc
or
push
retf
sub
mov
jecxz
sahf
adc
pop
cwde
js
std
into
inc
je
iret
inc
je
iret
pop
outs
inc
arpl
or
retf
mov
xor
out
mov
mov
ds
mov
arpl
cmp
inc
scas
xchg
scas
jecxz
retf
inc
inc
cmp
mov
inc
xor
cmp
repz
int3
cli
or
xchg
push
int3
inc
aam
jecxz
add
outs
dec
inc
inc
sub
pop
inc
loope
mov
jo
inc
inc
mov
sub
fild
mov
inc
inc
xor
mov
(bad)
outs
push
arpl
outs
inc
push
inc
pop
or
push
and
retf
cmc
ds
int
cmps
outs
inc
arpl
outs
iret
int3
cs
mov
retf
push
arpl
data16
mov
push
div
retf
cwde
ss
mov
fisubr
push
inc
sub
mov
inc
lds
mov
inc
mov
adc
add
pop
outs
enter
lock
das
add
(bad)
out
sub
inc
clc
es
push
int3
mov
jecxz
cmp
push
push
addr16
cmp
addr16
jno
ins
mov
loopne
ret
call
addr16
xor
arpl
and
dec
lds
jecxz
xchg
mov
dec
xchg
retf
inc
mov
mov
loope
adc
inc
jmp
daa
mov
movs
pop
mov
outs
dec
inc
or
mov
sahf
(bad)
ds
pop
call
cmps
icebp
sub
mov
mov
(bad)
enter
ds
jmp
cmp
outs
or
push
retf
dec
arpl
stos
(bad)
cmp
jge
std
ds
mov
mov
std
ds
scas
xor
stos
inc
arpl
jecxz
ds
jmp
int3
outs
inc
inc
inc
sub
nop
inc
xor
push
sahf
scas
xor
outs
out
or
xchg
inc
push
and
inc
sub
jg
xor
dec
or
nop
inc
mov
lock
jecxz
retf
std
dec
cmp
ds
inc
aas
inc
jmp
dec
cmp
ds
push
dec
inc
mov
xchg
or
dec
xor
cli
pop
cmp
cmps
jecxz
les
adc
stc
out
mov
(bad)
retf
dec
xor
(bad)
call
jb
imul
inc
pop
mov
mov
mov
inc
sti
outs
inc
dec
inc
daa
or
jno
dec
mov
jecxz
ds
dec
push
retf
push
arpl
int3
push
ds
mov
ficom
std
ds
lds
cld
jecxz
sbb
loopne
retf
push
retf
xor
movs
jl
inc
sub
ja
xor
pop
outs
int3
daa
add
std
cmp
test
or
xor
add
stc
out
cmp
xor
mov
aas
out
xchg
retf
arpl
loop
ds
inc
arpl
xor
mov
jl
mov
xor
inc
xor
addr16
ins
or
mov
std
sar
push
mov
mov
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
outs
out
or
retf
xor
mov
mov
in
ds
std
ds
sub
retf
mov
(bad)
dec
daa
jmp
push
mov
std
leave
inc
or
inc
mov
mov
inc
push
std
xchg
or
push
arpl
xor
pop
out
mov
std
retf
std
mov
jo
arpl
stos
and
std
ds
std
ds
and
pop
inc
aas
sahf
scas
xor
out
ds
sub
outs
cmp
std
dec
cmp
ds
mov
in
ds
stos
or
ds
(bad)
(bad)
ds
std
ds
inc
arpl
xor
mov
jmp
mov
mov
(bad)
(bad)
ds
push
nop
inc
mov
ins
lods
jecxz
retf
std
push
sub
cmp
outs
mov
mov
add
fdivr
ds
jo
dec
mov
std
(bad)
cli
pop
cs
pop
lods
retf
dec
dec
inc
mov
xchg
sahf
sbb
ds
mov
(bad)
(bad)
ds
mov
stos
in
ds
mov
arpl
in
ds
sub
outs
icebp
stos
jp
mov
and
retf
push
inc
inc
sub
retf
cmp
xor
mov
(bad)
(bad)
ds
mov
in
or
mov
pop
ss
retf
pop
aaa
mov
mov
jge
and
mov
std
cmp
cli
pop
sbb
xchg
sti
ds
stos
out
mov
or
daa
jbe
sti
ds
sub
add
mov
dec
(bad)
out
mov
mov
xor
add
loopne
retf
test
pop
dec
xchg
inc
xor
xchg
fidiv
out
scas
jecxz
les
inc
arpl
push
cmp
push
pop
inc
aas
inc
xor
jae
push
std
ds
pop
and
inc
xor
stos
and
std
ds
std
ds
pop
and
das
xor
int3
stos
inc
mov
mov
(bad)
(bad)
ds
add
dec
or
inc
mov
push
nop
inc
sub
xchg
pop
jno
arpl
aaa
push
retf
sbb
mov
mov
cmp
or
ds
repnz
fiadd
inc
arpl
outs
das
les
mov
xor
mov
retf
inc
aas
repz
pop
out
scas
jecxz
les
inc
arpl
repnz
or
retf
push
retf
dec
xchg
or
cmp
sub
push
lds
ds
mov
stos
mov
(bad)
xor
fimul
ds
xor
push
or
idiv
mov
test
pop
pusha
retf
mov
sub
sti
ds
sub
push
sbb
add
dec
lds
xor
mov
push
push
enter
xchg
mov
cs
ja
mov
retf
inc
arpl
data16
mov
dec
inc
sub
enter
retf
push
xchg
inc
mov
inc
fwait
jecxz
retf
std
mov
mov
mov
(bad)
(bad)
ds
xchg
call
or
push
cmp
(bad)
aas
mov
cld
ds
xchg
out
std
retf
push
retf
adc
sti
pop
jmp
dec
inc
cmp
retf
addr16
pop
ss
retf
clc
xor
sub
retf
add
xor
mov
std
(bad)
sub
xor
adc
jge
and
mov
std
cmp
sub
sbb
add
sbb
dec
adc
mov
fcmovu
(bad)
ds
pop
pushf
adc
dec
mov
std
ds
test
aas
mov
mov
iret
inc
je
iret
inc
je
iret
sbb
addr16
mov
test
repz
enter
ds
jmp
imul
ret
cmps
in
ds
das
push
retf
cmp
xor
mov
mov
(bad)
ds
dec
arpl
retf
and
mov
mov
stos
inc
arpl
jecxz
ds
inc
inc
push
int3
sub
mov
mov
pop
outs
retf
enter
daa
add
std
ds
fadd
mov
test
ds
lds
cld
jecxz
sbb
loopne
retf
cmp
jecxz
xchg
(bad)
outs
retf
xchg
or
mov
mov
outs
out
jb
outs
inc
dec
aas
xor
ja
mov
inc
xor
ja
pop
and
fmul
xor
mov
out
jecxz
xor
dec
inc
aaa
push
nop
or
daa
and
std
ds
xor
push
inc
aam
sbb
std
ds
lds
cld
jecxz
mov
loopne
retf
sbb
add
adc
cli
pop
cs
std
push
cli
pop
adc
or
ds
or
adc
(bad)
enter
ds
ret
in
std
into
inc
je
iret
inc
je
iret
inc
je
iret
sbb
addr16
mov
test
jecxz
ds
jmp
pusha
and
mov
out
js
lock
cmp
std
ds
sub
retf
dec
(bad)
cs
mov
inc
xor
sub
jo
inc
lds
bswap
or
add
inc
in
sar
push
loope
mov
mov
std
les
cmp
jecxz
leave
std
out
inc
enter
ds
mov
inc
sub
ret
dec
xchg
or
daa
sbb
std
ds
int3
mov
jecxz
xchg
mov
(bad)
sahf
inc
loopne
mov
mov
xchg
movs
jae
inc
xor
retf
dec
retf
dec
xchg
sahf
inc
xor
inc
sbb
add
mov
inc
inc
inc
mov
(bad)
sahf
pavgb
mov
mov
mov
mov
or
sbb
pop
jns
add
and
loop
sti
ds
xor
dec
jge
and
jecxz
ds
jmp
cmp
outs
dec
inc
ds
and
xor
push
xchg
sahf
or
cmp
xor
test
jno
arpl
retf
adc
mov
mov
cmp
test
dec
aas
mov
mov
retf
add
push
retf
inc
arpl
jecxz
mov
in
std
int3
add
and
cli
pop
ds
std
enter
daa
jb
sti
ds
stos
mov
adc
(bad)
enter
ds
ret
in
std
into
inc
je
iret
cmp
and
xor
ss
std
mov
inc
pop
pushf
jmp
or
dec
mov
jb
cli
outs
inc
inc
or
mov
sahf
cmps
fnstsw
mov
mov
aas
mov
dec
dec
cmp
dec
loope
ds
inc
dec
icebp
movs
jnp
push
cmp
ds
dec
inc
inc
push
push
retf
mov
inc
dec
add
mov
add
jo
inc
mov
or
dec
inc
cmp
retf
inc
retf
push
dec
icebp
stos
jl
aas
sub
movs
mov
add
stc
out
xchg
ret
dec
cmp
mov
sahf
stos
jmp
mov
mov
je
jecxz
xchg
scas
push
(bad)
sahf
mov
out
mov
inc
pop
ret
ror
dec
dec
inc
sub
jp
pop
push
retf
push
int3
cli
pop
push
xchg
inc
xor
push
push
xor
in
ds
out
mov
or
retf
xchg
mov
push
retf
sub
dec
xchg
inc
scas
out
mov
std
retf
inc
arpl
outs
inc
inc
aas
in
xchg
(bad)
dec
retf
dec
es
pop
retf
pop
call
mov
icebp
movs
jae
inc
sub
jb
imul
xchg
mov
pop
mov
or
pop
popf
adc
add
inc
xor
retf
mov
les
xchg
inc
cmp
ds
jb
repnz
dec
inc
or
mov
aas
sub
addr16
xor
ds
mov
aas
mov
inc
dec
inc
push
and
movs
or
ds
outs
leave
(bad)
or
in
sub
scas
xchg
xchg
jecxz
les
adc
jecxz
dec
jne
add
add
sbb
cmp
lds
inc
mov
mov
cli
pop
push
xchg
inc
xor
push
push
xor
jmp
mov
mov
aas
mov
push
arpl
outs
leave
xchg
or
pop
sub
out
aaa
inc
daa
add
jge
inc
retf
dec
xchg
inc
scas
xchg
ficom
out
mov
or
retf
enter
mov
retf
inc
arpl
data16
mov
dec
inc
xor
addr16
call
inc
movs
mov
add
xchg
jecxz
retf
hlt
dec
cmp
inc
arpl
cmp
or
outs
out
les
std
leave
or
push
retf
out
fwait
jecxz
retf
cmp
cli
pop
ds
inc
xor
push
push
jno
arpl
xor
retf
sub
push
mov
(bad)
sub
(bad)
(bad)
outs
inc
arpl
ins
cs
jne
add
sahf
xchg
jmp
arpl
xor
or
mov
(bad)
outs
inc
arpl
stos
(bad)
ds
std
leave
add
push
nop
inc
scas
out
fwait
jecxz
retf
inc
retf
push
xchg
or
in
mov
pop
popf
adc
add
inc
sub
dec
inc
scas
dec
daa
push
leave
std
ds
stos
pop
popf
adc
add
inc
xor
push
inc
and
cmp
lds
inc
mov
cmp
daa
push
iret
std
or
or
sub
xchg
imul
mov
jo
aas
mov
mov
repnz
push
inc
or
inc
arpl
xor
dec
nop
inc
scas
out
mov
repz
std
dec
jne
add
sahf
(bad)
call
retf
push
pop
out
call
arpl
dec
dec
mov
outs
inc
inc
inc
popa
add
(bad)
out
mov
mov
out
xchg
push
int3
mov
mov
mov
inc
sub
imul
or
(bad)
out
mov
or
mov
cmp
add
pop
outs
dec
arpl
ins
inc
inc
sbb
inc
inc
pop
outs
leave
daa
sbb
std
cmp
ds
cmp
ja
outs
leave
retf
dec
daa
ret
cmp
ds
xor
add
jnp
sub
push
pop
cmp
inc
scas
out
mov
std
sahf
adc
pop
ret
ror
dec
arpl
outs
aas
dec
cmp
ds
outs
leave
(bad)
or
cmp
mov
mov
or
mov
aas
pusha
and
mov
mov
aas
mov
mov
or
push
nop
or
daa
ss
std
cmp
lds
leave
(bad)
or
fsubr
mov
mov
fimul
dec
retf
mov
xchg
mov
repnz
push
inc
pop
add
outs
leave
enter
jg
cmp
les
call
mov
inc
xor
inc
ret
or
xchg
inc
inc
scas
xchg
ja
add
pop
outs
(bad)
retf
and
xchg
out
add
outs
jb
loop
test
out
mov
ja
add
pop
outs
enter
lock
das
add
pop
lock
mov
sub
sbb
push
inc
cmp
ja
ins
inc
inc
push
outs
inc
inc
inc
scas
dec
daa
sar
or
ds
dec
arpl
dec
xchg
xor
addr16
es
retf
mov
adc
pop
or
std
retf
inc
ret
mov
or
out
xchg
jecxz
les
add
std
leave
xor
cmp
cli
pop
adc
into
xor
or
cmp
push
mov
(bad)
mov
aas
push
mov
(bad)
repnz
xchg
sahf
(bad)
out
mov
dec
arpl
xor
or
std
test
outs
push
arpl
outs
leave
push
mov
outs
inc
arpl
xor
mov
jecxz
sahf
adc
xor
adc
arpl
std
jns
out
or
cmp
std
imul
(bad)
or
test
mov
push
pop
xchg
(bad)
jecxz
les
sub
repz
inc
mov
fisub
push
int3
add
push
pop
and
mov
aas
sub
daa
jb
std
cmp
lds
add
ret
enter
daa
ret
ds
cmp
outs
inc
aam
or
stos
push
retf
out
test
lds
xor
dec
arpl
xor
or
outs
inc
inc
inc
pop
add
cmp
retf
mov
push
iret
mov
cmp
pop
inc
xor
dec
gs
mov
mov
jo
dec
mov
out
in
lods
mov
mov
das
add
xor
cmp
or
inc
push
int3
jl
mov
cmp
push
mov
fisubr
dec
mov
push
int3
int3
sti
out
sub
ss
daa
sub
ds
sub
cmp
or
xchg
sahf
adc
ds
mov
outs
mov
mov
mov
int3
and
mov
cmp
xor
mov
sti
dec
int3
cli
pop
push
xchg
push
outs
leave
daa
pop
retf
std
cmp
dec
inc
cmp
push
aas
cmc
mov
lds
push
daa
mov
std
ds
xor
push
push
xor
repz
dec
cmp
mov
std
sahf
adc
pop
ret
ror
mov
inc
je
iret
inc
je
iret
sbb
addr16
int3
cmp
fninit
std
ds
jmp
retf
ins
sbb
jecxz
inc
push
mov
(bad)
std
retf
ss
cli
pop
es
mov
std
shr
and
sub
dec
push
xor
loope
mov
add
cli
pop
cs
or
push
xchg
or
arpl
jo
arpl
xor
pop
out
cmps
jecxz
retf
inc
arpl
and
ds
int3
daa
push
ret
cmp
jae
inc
fmul
sbb
std
ds
lds
cld
jecxz
js
loopne
retf
mov
aas
icebp
std
ds
add
movs
or
inc
je
iret
sbb
addr16
hlt
cmp
fninit
std
ds
jmp
retf
lods
sbb
push
push
xchg
or
retf
call
sbb
mov
jns
stos
inc
arpl
in
ds
adc
add
push
int3
cli
pop
pop
outs
int3
daa
dec
(bad)
std
ds
sub
xchg
inc
xor
pop
sahf
fwait
and
xor
pop
ds
and
sahf
cmps
and
or
xchg
inc
cmp
pop
pop
outs
dec
arpl
jno
arpl
xor
out
movs
jecxz
retf
std
dec
cmp
ds
inc
arpl
outs
pop
arpl
idiv
cmp
xor
xchg
(bad)
push
int3
cli
pop
sbb
mov
fadd
mov
xrelease
or
xor
pop
push
pop
out
xchg
jecxz
les
sbb
retf
mov
fwait
jecxz
jp
ins
inc
arpl
pusha
push
sub
std
push
sub
std
sub
push
shl
jecxz
dec
inc
sub
dec
or
or
mov
test
or
nop
inc
mov
add
jecxz
retf
in
sbb
out
aaa
je
jae
mov
dec
arpl
test
xchg
(bad)
std
int3
add
cs
cli
pop
dec
ds
std
enter
daa
bound
sti
ds
stos
pop
pushf
adc
arpl
inc
(bad)
enter
ds
ret
lock
into
inc
je
iret
sbb
addr16
adc
test
jecxz
ds
jmp
or
xchg
inc
int
xchg
inc
sub
retf
dec
retf
inc
dec
test
mov
std
retf
add
and
add
sti
ds
xor
dec
jge
and
jecxz
ds
pop
and
outs
retf
(bad)
arpl
in
cmp
or
add
push
nop
or
retf
retf
in
mov
mov
inc
sub
xchg
mov
jb
icebp
loope
add
retf
mov
in
adc
retf
add
push
(bad)
cli
pop
ds
daa
xchg
pop
sti
ds
xor
arpl
and
jecxz
ds
pusha
and
scas
and
outs
jp
add
leave
or
sbb
fidiv
inc
pop
and
or
cmp
jecxz
aas
or
mov
lahf
cli
ds
retf
retf
mov
xor
jne
jae
mov
dec
arpl
test
xchg
fchs
std
int3
add
and
cli
pop
ds
std
enter
daa
push
pop
sti
ds
stos
mov
adc
(bad)
enter
ds
ret
lock
into
inc
je
iret
inc
je
iret
cmp
push
int3
cli
pop
(bad)
xchg
inc
aad
retf
dec
ds
out
test
outs
inc
arpl
xor
dec
nop
mov
or
sub
mov
mov
mov
jnp
movs
jae
and
mov
mov
je
mov
jge
cld
jecxz
add
retf
addr16
test
out
pushf
cmp
(bad)
iret
inc
je
iret
cmp
push
xchg
inc
aad
push
xor
inc
aas
inc
xor
int3
cli
pop
add
or
dec
or
push
retf
sbb
push
xor
inc
aas
cmp
or
out
ret
jbe
cmp
xor
push
jmp
ja
xchg
inc
mov
js
jecxz
leave
mov
pushf
(bad)
ds
add
and
mov
mov
add
test
mov
mov
std
pushf
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
cmp
inc
sub
mov
imul
cmc
pop
shl
add
mov
add
cmp
push
xchg
inc
aad
ret
dec
movs
(bad)
ds
inc
repnz
addr16
mov
mov
mov
out
test
outs
inc
arpl
xor
dec
nop
mov
or
inc
sub
int3
or
push
xchg
push
jecxz
aas
or
dec
add
and
or
push
nop
or
adc
or
(bad)
jns
push
cmp
pop
lods
sub
pop
mov
add
retf
pop
push
test
int3
cwde
inc
mov
pop
popf
cmp
mov
or
(bad)
jns
pop
or
cld
jecxz
daa
imul
sub
pop
mov
pop
mov
out
ds
movs
or
and
mov
mov
pop
ret
mov
mov
adc
ret
lock
into
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
cmp
mov
aas
out
(bad)
out
leave
add
mov
push
xor
(bad)
ds
adc
sub
leave
sub
ss
cs
cmp
cli
pop
xor
psadbw
adc
adc
cli
pop
push
arpl
dec
or
pop
xchg
or
(bad)
(bad)
ds
cld
push
jp
inc
aas
push
jno
arpl
retf
sbb
sti
in
test
std
leave
or
pop
int3
cli
pop
push
ss
mov
aas
mov
jmp
xor
push
or
dec
arpl
retf
test
test
add
outs
inc
arpl
xor
pop
xchg
std
leave
add
sbb
or
std
push
xchg
xor
aas
inc
mov
cmp
imul
arpl
xor
adc
push
sub
leave
cli
pop
pop
(bad)
mov
push
nop
cld
jecxz
daa
or
clts
sub
xchg
mov
mov
fisub
pop
mov
(bad)
test
dec
(bad)
xchg
pop
ins
inc
arpl
outs
inc
arpl
xor
dec
ds
xor
mov
dec
arpl
xor
mov
std
push
cli
xor
aas
inc
xor
pop
inc
sub
push
lods
mov
pop
mov
(bad)
pop
jbe
(bad)
popa
ja
dec
and
dec
ds
xor
mov
inc
arpl
inc
pop
pushf
cmp
inc
push
outs
inc
arpl
xor
lahf
test
std
retf
add
push
add
mov
(bad)
es
mov
aas
jge
and
(bad)
xchg
inc
aas
inc
xor
aas
jl
and
mov
std
inc
sahf
jo
inc
mov
dec
arpl
stos
and
std
ds
std
ds
aaa
(bad)
inc
mov
mov
in
sbb
aas
mov
std
mov
mov
mov
or
mov
jmp
sub
dec
(bad)
pop
adc
jmp
icebp
call
les
add
iret
add
es
scas
inc
mov
mov
fwait
cmp
les
add
jbe
add
cmps
imul
cmp
jae
adc
out
popf
jns
les
inc
sub
inc
or
out
js
inc
jb
aas
sub
mov
mov
dec
pop
pop
jecxz
aaa
or
(bad)
pushf
js
std
into
inc
je
iret
inc
je
iret
or
out
daa
and
aas
inc
jmp
mov
mov
scas
cmp
cmps
add
and
data16
sub
mov
mov
(bad)
enter
ds
push
xchg
or
out
xchg
aas
pop
and
cmp
jae
(bad)
fild
out
aas
inc
bound
cli
pop
sbb
mov
std
(bad)
mov
sub
retf
and
xchg
sub
test
test
les
jg
aas
mov
dec
retf
clc
inc
mov
addr16
mov
dec
retf
sbb
mov
xor
push
add
enter
test
out
ds
inc
jnp
cmps
push
mov
sar
std
jecxz
or
fwait
push
mov
dec
arpl
outs
les
aas
icebp
std
ds
add
cmps
mov
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
pushf
inc
mov
ret
stos
pop
add
jecxz
add
sub
mov
mov
(bad)
enter
ds
push
retf
jb
mov
sub
retf
add
lds
mov
in
and
std
retf
add
les
mov
mov
sbb
cld
ds
out
mov
or
popf
sbb
aas
mov
std
sar
iret
and
sbb
sub
mov
mov
(bad)
enter
ds
push
inc
mov
ret
sub
aas
cmp
ds
jno
inc
lods
out
mov
std
retf
add
mov
add
cmps
mov
sbb
aas
mov
std
sar
iret
inc
je
iret
inc
je
iret
outs
cmp
test
je
iret
inc
je
iret
outs
push
cdq
test
je
iret
inc
je
iret
inc
movs
rol
mov
inc
je
iret
inc
je
iret
or
arpl
cmp
cld
pop
(bad)
ds
in
mov
dec
retf
cmps
push
test
out
leave
jecxz
push
test
pop
es
sbb
mov
xor
mov
jecxz
retf
push
in
mov
xor
mov
jecxz
retf
or
mov
cmp
sub
cmp
clc
mov
mov
mov
cmp
std
mov
pushf
(bad)
ds
pop
add
je
iret
or
arpl
aaa
lds
mov
fadd
jecxz
test
xor
push
jp
inc
aas
push
int3
jne
mov
jecxz
jp
outs
int3
daa
dec
nop
add
inc
xor
retf
push
test
addr16
ds
jecxz
retf
jbe
mov
xor
mov
jecxz
pushf
adc
jecxz
cdq
js
std
popf
adc
(bad)
ds
pop
add
je
iret
inc
je
iret
inc
je
iret
or
arpl
outs
inc
jg
movs
jb
or
pop
inc
mov
mov
jp
inc
aas
push
int3
cmc
sar
jb
inc
mov
push
(bad)
out
leave
add
int
aas
mov
std
push
xchg
cmp
inc
mov
mov
std
cdq
js
std
into
or
out
daa
loop
add
cmp
std
mov
out
mov
leave
test
test
jecxz
call
add
and
cmp
sub
mov
mov
(bad)
enter
ds
jmp
jno
arpl
cmp
push
cld
pop
(bad)
ds
cld
push
cmps
cmp
lock
ds
aam
mov
test
enter
les
jecxz
ds
and
cld
inc
mov
retf
arpl
xor
inc
mov
les
cmp
aas
mov
push
pop
jge
and
jecxz
ds
adc
or
dec
mov
test
pop
pop
retf
cmp
mov
mov
std
xchg
push
outs
inc
pop
push
into
cmp
xchg
cmp
xor
arpl
ins
or
mov
std
sar
dec
mov
mov
inc
je
iret
and
outs
repz
mov
mov
(bad)
enter
ds
jmp
cmp
sti
push
retf
out
jle
std
retf
add
mov
inc
aam
push
push
cmp
daa
push
retf
add
(bad)
ins
dec
arpl
dec
std
ds
mov
fidiv
(bad)
ds
in
mov
std
ret
jbe
add
mul
dec
retf
mov
mov
aad
cld
jecxz
sbb
inc
repnz
jecxz
mov
add
sbb
jmp
(bad)
mov
aas
inc
adc
xchg
cld
jecxz
ins
jl
and
jecxz
(bad)
mov
retf
cmp
push
and
out
mov
aas
sub
dec
inc
sub
outs
inc
xor
addr16
sub
jg
test
scas
push
ins
inc
arpl
push
ret
retf
add
xor
ja
sub
ja
sub
dec
inc
cmp
jae
xor
imul
pop
mov
jecxz
loope
mov
inc
and
xchg
cld
out
xchg
ficomp
push
push
push
inc
aas
inc
cmp
test
loop
or
or
dec
add
adc
stc
in
add
fcmovbe
ss
xor
xchg
mov
xchg
xchg
cld
jecxz
xchg
outs
push
xchg
inc
xor
outs
inc
add
add
xor
outs
sub
addr16
mov
jmp
jl
jecxz
cmp
mov
dec
sahf
rol
jo
arpl
test
dec
retf
push
or
jmp
or
mov
and
cli
pop
xor
add
cs
sub
pop
outs
dec
inc
or
ds
aas
dec
test
outs
int3
xchg
sahf
mov
inc
mov
jge
mov
std
cmp
push
jno
arpl
xor
dec
sbb
jo
arpl
xor
xchg
outs
push
arpl
outs
inc
aaa
cmp
ds
jmp
fimul
leave
test
data16
xor
aas
and
mov
pop
jecxz
retf
adc
mov
or
cli
pop
push
retf
push
fimul
retf
push
nop
push
outs
int3
or
inc
sub
imul
dec
lea
test
inc
mov
xchg
out
push
retf
mov
stos
mov
mov
(bad)
pop
jbe
lds
cli
pop
push
retf
jp
fimul
retf
push
nop
push
outs
int3
or
(bad)
or
int3
cli
pop
sub
dec
cmp
cmp
int3
add
es
or
adc
or
inc
imul
push
add
sahf
mov
dec
arpl
stos
inc
arpl
jecxz
ds
and
sub
adc
(bad)
enter
ds
ret
call
mov
inc
je
iret
inc
je
iret
or
(bad)
test
outs
out
test
mov
sub
int3
daa
dec
in
ds
mov
cmp
inc
sub
mov
cli
cmps
mov
cmp
inc
sub
mov
mul
std
ds
std
leave
or
add
mov
add
inc
sub
inc
or
out
retf
xchg
xchg
inc
aas
cmp
cmps
mov
in
aas
or
adc
or
(bad)
pushf
js
std
into
inc
sub
inc
or
out
retf
xchg
xchg
inc
aas
cmp
cmps
mov
in
aas
or
adc
or
(bad)
pushf
js
std
into
cmp
adc
mov
outs
imul
jecxz
out
mov
retf
aam
ret
add
addr16
mov
xchg
aas
xor
dec
and
cld
adc
icebp
movs
jl
and
cld
adc
inc
xor
dec
icebp
stos
xchg
aas
sub
dec
inc
xor
retf
push
test
xor
mov
pop
or
adc
or
dec
mov
mov
arpl
xor
pop
sahf
mov
inc
pop
inc
cmp
push
or
push
pop
outs
int
jbe
add
inc
cmp
pop
inc
sub
pop
inc
pop
and
mov
sbb
jle
les
out
nop
loope
push
ret
dec
xchg
mov
xchg
xchg
cld
jecxz
popf
adc
add
inc
je
iret
inc
je
iret
inc
je
iret
or
out
xchg
inc
pusha
and
xor
jp
pop
pop
les
add
sahf
pop
and
mov
std
enter
inc
or
int
into
add
ds
jae
iret
or
(bad)
es
pusha
add
cmp
mov
jmp
xchg
out
ret
jbe
adc
mov
push
ds
mov
mov
retf
or
dec
out
pushf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
push
retf
and
in
std
push
stos
aaa
inc
aas
inc
pop
push
enter
daa
movs
fld
aas
inc
inc
and
fs
mov
cmp
adc
mov
mov
std
cdq
cmp
and
cmp
test
jecxz
ret
cmp
icebp
pop
popf
adc
ret
ror
or
retf
in
mov
std
retf
add
push
enter
retf
and
mov
dec
aas
pusha
and
xor
sahf
adc
pop
ret
ror
shr
xchg
inc
inc
and
outs
push
out
cmp
xor
inc
retf
mov
aas
sub
jg
retf
mov
mov
mov
imul
pushf
jmp
adc
int3
add
push
daa
retf
jae
aas
inc
cmp
retf
cli
pop
push
test
or
retf
enter
ds
mov
lds
inc
mov
xor
inc
sub
jg
jecxz
ud2
sub
ret
jbe
add
in
aas
and
push
xchg
inc
mov
xchg
ret
pushf
adc
imul
xor
in
ds
sub
jp
repz
mov
out
mov
std
ret
cmp
push
push
daa
pop
pop
add
cmp
ds
sub
mov
jecxz
add
add
or
retf
sub
mov
jecxz
lahf
mov
pop
(bad)
cmp
or
jg
adc
retf
aaa
or
adc
add
cmp
push
icebp
inc
aas
sahf
jle
inc
mov
push
arpl
cmp
(bad)
in
ds
sub
leave
retf
cmp
mov
bound
retf
or
enter
mov
inc
pop
retf
pop
ret
rcl
jecxz
mov
adc
rcr
hlt
dec
cmp
cld
ds
pop
pushf
jmp
adc
sahf
adc
mov
mov
std
cdq
cmp
mov
outs
xor
mov
jecxz
iret
inc
je
iret
or
jb
ret
inc
sub
mov
push
std
ret
jbe
es
mov
mov
or
mov
std
ds
mov
sahf
xor
ds
ret
movs
jb
outs
in
ds
shl
ror
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
outs
inc
pop
and
addr16
push
out
aas
mov
std
push
xchg
cmp
movs
jb
inc
aam
aas
inc
mov
call
jbe
add
ds
xor
adc
mov
inc
je
iret
and
xchg
sub
mov
mov
(bad)
enter
ds
push
retf
jb
mov
jecxz
inc
mov
std
jno
ins
mov
mov
std
mov
enter
push
mov
ins
test
mov
std
add
mov
std
ds
test
mov
std
(bad)
cmp
(bad)
ds
test
mov
std
(bad)
cmp
(bad)
ds
adc
jecxz
mov
jmp
add
mov
std
cmp
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
in
pop
inc
mov
ret
stos
pop
add
jecxz
cmps
repz
mov
mov
(bad)
enter
ds
push
retf
jb
mov
sub
add
mov
std
es
std
ds
push
aas
mov
cmp
jmp
ds
dec
dec
test
jecxz
ret
jbe
pop
(bad)
sahf
nop
pop
inc
mov
ret
push
aas
mov
cmp
in
dec
daa
dec
inc
add
cmp
inc
arpl
loop
ds
cmp
jmp
mov
mov
add
cmps
mov
inc
je
iret
inc
je
iret
or
out
daa
mov
std
ds
push
aas
mov
cmp
jmp
ds
dec
dec
test
jecxz
ret
jbe
pop
(bad)
sahf
sub
mov
ret
push
aas
mov
cmp
in
dec
daa
out
add
cmp
or
mov
pop
add
mov
inc
je
iret
jmp
in
ds
std
aas
aas
and
xchg
aas
mov
mov
xchg
dec
in
ds
mov
ror
sar
mov
xchg
pop
in
ds
gs
aas
mov
xchg
mov
std
(bad)
aaa
ins
(bad)
ds
jg
mov
std
(bad)
aaa
mov
jg
mov
std
jo
jecxz
(bad)
aaa
movs
(bad)
ds
jg
mov
std
(bad)
aaa
lods
(bad)
ds
jg
mov
std
add
call
je
iret
inc
je
iret
and
data16
repz
mov
mov
(bad)
enter
ds
jmp
xor
inc
sahf
jmp
inc
arpl
sub
mov
sahf
fwait
(bad)
ds
dec
arpl
jecxz
ds
push
or
cmp
icebp
std
ds
add
cmps
mov
inc
je
iret
cmp
push
retf
sbb
fidivr
mov
jge
(bad)
ds
std
add
mov
push
pop
inc
xor
push
or
out
test
outs
pop
arpl
outs
push
arpl
outs
test
mov
std
imul
out
mov
(bad)
or
mov
std
ds
xor
jae
push
aas
mov
xchg
sub
ja
jp
aas
mov
xchg
jb
aas
mov
cmp
xor
mov
loope
mov
js
test
outs
mov
(bad)
xor
cs
(bad)
ds
leave
enter
mov
ja
sub
xchg
xchg
jecxz
leave
(bad)
ins
dec
arpl
ins
pop
arpl
outs
test
mov
std
jns
ins
inc
arpl
bound
jp
repz
mov
std
sbb
pop
push
sbb
pop
cs
cmps
mov
jb
retf
arpl
mov
fidiv
xchg
mov
(bad)
or
in
leave
or
xor
mov
jecxz
push
jg
xor
ficomp
mov
aas
in
push
loope
xchg
push
outs
into
retf
sub
mov
cs
test
cs
ror
in
push
adc
mov
inc
jle
dec
aas
adc
add
cmp
jae
xor
ja
sbb
popf
aas
std
pop
call
mov
mov
std
ds
hlt
mov
mov
std
ds
out
pop
popf
adc
add
sbb
addr16
pushf
cmp
fninit
std
ds
jmp
cmp
sub
pop
fist
aas
push
and
mov
outs
push
pop
inc
xor
outs
pop
ss
push
mov
jb
aas
mov
mov
jns
repz
jecxz
leave
cmp
(bad)
ds
ret
dec
cmp
mov
mov
outs
test
mov
std
(bad)
je
(bad)
ds
ret
mov
outs
test
mov
std
retf
add
push
(bad)
sahf
mov
inc
mov
ret
mov
push
mov
inc
inc
aaa
add
add
pop
ss
push
mov
inc
aas
jge
and
xchg
inc
aas
inc
xor
pop
aas
push
and
mov
inc
arpl
loop
ds
int3
daa
mov
std
ds
xchg
(bad)
ds
ret
mov
sbb
std
mov
sbb
std
dec
cmp
ds
test
mov
std
retf
add
push
(bad)
sahf
and
inc
mov
ret
mov
push
mov
inc
inc
aaa
add
add
pop
ss
push
mov
inc
aas
jge
and
xchg
inc
aas
inc
xor
pop
aas
pusha
and
mov
dec
inc
mov
ss
jbe
std
lds
inc
mov
cmp
clc
mov
jp
std
ds
test
dec
inc
push
aas
mov
cmp
fiadd
ds
push
aas
mov
cmp
xor
ds
xor
addr16
int3
ret
push
mov
call
mov
outs
push
inc
inc
xor
outs
push
xor
push
test
sub
arpl
stos
inc
arpl
in
ds
sub
mov
sub
ds
mov
retf
aaa
dec
test
jecxz
leave
shl
not
sahf
jno
arpl
jo
arpl
xor
dec
int3
or
sbb
ds
ds
push
aas
mov
cmp
cs
xor
std
pop
and
push
sub
leave
inc
mov
xchg
adc
pop
push
cmps
(bad)
jecxz
aas
pop
outs
dec
arpl
xor
addr16
and
push
pop
and
outs
dec
arpl
ss
nop
mov
jns
cld
jecxz
ins
inc
jp
aas
mov
mov
mov
std
ds
xor
dec
push
add
or
cmp
or
pop
and
retf
xor
mov
push
mov
std
ds
std
xchg
mov
inc
nop
cld
jecxz
mov
and
adc
(bad)
enter
ds
ret
call
mov
inc
je
iret
inc
je
iret
pop
addr16
mov
std
aas
sub
mov
add
jecxz
ret
jbe
inc
xchg
jo
std
ds
scas
sti
mov
std
jns
inc
jb
aas
gs
mov
(bad)
ror
ds
std
ds
jne
aas
mov
mov
mov
data16
es
test
dec
(bad)
cmp
mov
std
push
mov
cmps
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
gs
aaa
mov
mov
std
ds
add
mov
mov
jb
std
ds
mov
dec
inc
jne
aas
mov
cmp
sub
ror
xor
inc
sahf
jmp
ds
mov
iret
and
popw
repz
mov
mov
(bad)
enter
ds
jmp
cmp
push
mov
inc
aas
inc
fadd
pop
xor
std
(bad)
or
sub
leave
jecxz
dec
test
outs
(bad)
mov
enter
ds
push
(bad)
stos
inc
arpl
jecxz
ds
test
mov
std
ret
jbe
or
cmp
(bad)
ds
mov
add
jecxz
leave
cmp
(bad)
ds
mov
ds
mov
mov
std
leave
dec
mov
push
xchg
mov
ror
adc
(bad)
cld
jecxz
lds
std
ds
xchg
xchg
in
ds
jno
arpl
int3
and
jecxz
xchg
fidiv
mov
fisubr
cmc
pop
shl
std
adc
jp
aas
mov
mov
fimul
mov
mov
std
ds
add
dec
test
mov
(bad)
fimul
mov
mov
mov
(bad)
dec
xchg
mov
lds
cld
jecxz
mov
das
lds
mov
in
jp
std
add
mov
std
sub
inc
mov
std
ds
test
mov
std
inc
mov
std
leave
cmp
(bad)
ds
test
in
mov
cld
push
es
inc
aas
aas
sub
xchg
sub
imul
aas
mov
cmp
out
mov
jp
std
cmp
aas
mov
(bad)
ds
mov
jbe
std
ds
xor
dec
push
xor
and
push
aas
mov
xor
push
add
scas
lock
inc
cmp
push
or
std
adc
xor
or
pop
mov
inc
cli
pop
push
retf
push
pop
pop
nop
inc
xor
or
dec
ds
xor
mov
push
arpl
xor
inc
arpl
xor
push
and
aas
jge
and
jecxz
ds
mov
lds
in
ds
std
ds
mov
aas
mov
mov
dec
cmp
(bad)
ds
mov
mov
std
shr
or
cmp
or
std
push
jp
inc
aas
push
aaa
xchg
inc
xor
or
push
enter
retf
pop
mov
dec
inc
xor
push
xor
push
ds
xor
mov
push
arpl
xor
inc
arpl
xor
mov
arpl
outs
test
mov
std
ret
jbe
sbb
cld
jecxz
retf
adc
add
mov
inc
sub
mov
jmp
retf
scas
dec
test
in
sbb
mov
mov
dec
ds
scas
dec
test
ins
inc
arpl
xor
ds
mov
test
ins
inc
arpl
xor
dec
test
outs
test
mov
std
mov
jecxz
xchg
push
sub
leave
add
mov
and
aas
and
push
nop
or
test
cmp
push
push
xor
and
aaa
std
push
or
aas
inc
xor
or
inc
mov
(bad)
test
dec
(bad)
xchg
pop
ss
ds
xor
mov
inc
xchg
inc
xor
or
add
(bad)
test
dec
(bad)
xchg
push
outs
inc
lahf
pop
outs
dec
arpl
xor
dec
nop
cld
jecxz
xchg
push
outs
inc
xchg
push
stos
inc
mov
(bad)
test
cmp
and
addr16
or
adc
add
mov
push
push
sub
dec
(bad)
test
ss
retf
push
retf
pop
ss
push
push
xor
and
cmp
push
xchg
aas
push
jecxz
stos
push
sub
leave
add
ss
or
sub
mov
jecxz
retf
dec
test
mov
mov
inc
aas
mov
outs
inc
xchg
inc
xor
(bad)
jecxz
aas
and
addr16
or
mov
fimul
dec
xchg
push
jecxz
pop
sub
leave
add
adc
or
push
xchg
mov
imul
xchg
inc
aas
cmp
ds
xor
jg
cmp
add
inc
arpl
xor
dec
nop
inc
mov
adc
(bad)
ds
push
aas
and
jmp
sbb
ds
push
aas
mov
mov
or
inc
pop
and
pop
outs
dec
arpl
xor
dec
nop
or
std
push
xor
aas
mov
test
aas
mov
addr16
and
dec
retf
xor
or
xchg
mov
dec
nop
cld
jecxz
xchg
(bad)
mov
mov
(bad)
in
ds
std
ds
push
aas
mov
cmp
out
mov
mov
enter
sub
outs
mov
mov
std
mov
mov
test
jmp
pop
inc
sub
imul
xchg
movs
cmp
sub
push
xchg
cld
jecxz
push
es
inc
aas
aas
sub
imul
aas
mov
xor
pop
iret
retf
(bad)
ds
test
cmp
sti
cmp
jmp
ds
dec
dec
test
xor
aas
mov
mov
mov
pop
or
cmp
push
aas
mov
(bad)
ds
mov
adc
mov
mov
add
cmps
mov
inc
je
iret
inc
je
iret
or
push
xchg
inc
mov
std
retf
(bad)
ds
std
jp
pop
pop
(bad)
sahf
test
mov
ret
scas
aas
mov
cmp
sub
dec
daa
inc
xor
aas
cmp
(bad)
ds
lds
and
aas
aas
lahf
mov
mov
sti
xchg
data16
ds
or
jno
(bad)
ds
mov
(bad)
jno
(bad)
ds
jns
lds
aas
mov
mov
mov
or
ds
inc
mov
jge
mov
in
ds
add
push
xchg
pop
aaa
mov
fs
pop
pop
outs
jb
pop
(bad)
movs
inc
sub
mov
adc
xor
enter
ds
push
dec
aas
aaa
outs
leave
add
repz
pop
jne
xchg
jmp
inc
mov
std
jg
les
ds
call
dec
inc
mov
mov
jp
xchg
pop
in
ds
lock
int3
pop
icebp
cmp
xor
xor
aas
cmp
(bad)
ds
mov
popf
adc
xor
adc
mov
inc
pop
or
lahf
out
in
lods
and
cmp
mov
jb
into
jo
addr16
push
aas
dec
mov
outs
cmp
inc
sub
(bad)
aas
daa
jb
loop
add
inc
das
jb
cmp
repz
std
leave
scas
outs
mov
inc
test
test
ret
lock
addr16
mov
xor
and
sub
shl
aas
inc
scas
xchg
pop
in
ds
pop
(bad)
ds
xchg
jecxz
jecxz
(bad)
cmp
pop
or
aas
inc
das
jb
dec
js
ds
xor
icebp
mov
repnz
in
lds
or
fild
push
pop
or
cld
jecxz
bnd
std
ds
ja
aas
mov
xchg
dec
in
ds
ja
aas
mov
pop
popf
adc
add
je
iret
inc
je
iret
inc
je
iret
inc
gs
aas
mov
(bad)
ror
ds
std
ds
gs
mov
out
mov
std
into
inc
je
iret
pop
outs
jg
mov
std
xchg
jmp
cmps
push
dec
cmp
add
mov
jg
mov
std
leave
pop
pop
cmp
jecxz
scas
mov
jg
mov
std
jno
ins
scas
shl
and
aas
mov
cmp
repnz
mov
std
jno
outs
xchg
rcl
es
cmp
stc
jecxz
jb
ins
scas
shl
outs
clc
jg
ins
jg
mov
std
mov
mov
test
mov
std
jno
outs
xchg
and
es
cmp
stc
jecxz
enter
ds
push
ret
xchg
cmp
std
ds
hlt
and
and
ds
in
ds
push
enter
ds
mov
shr
ds
hlt
cmp
rol
std
ds
gs
mov
xchg
dec
in
ds
out
(bad)
ds
(bad)
js
ins
inc
arpl
repnz
cli
pop
push
retf
(bad)
ds
scas
shl
in
ds
xor
inc
mov
add
aas
popf
mov
mov
mov
aas
xchg
xchg
aas
mov
or
shl
std
ds
div
adc
cmp
dec
sub
std
shl
add
mov
std
(bad)
addr16
ds
(bad)
js
ins
inc
arpl
repnz
cli
pop
push
retf
(bad)
ds
scas
shl
in
ds
xor
inc
mov
add
aas
popf
mov
mov
mov
aas
xchg
xchg
aas
mov
or
ins
in
ds
div
adc
cmp
dec
sub
or
jl
xchg
push
std
ds
xchg
xchg
aas
mov
xchg
lock
xchg
inc
sub
dec
inc
popf
mov
mov
mov
dec
in
ds
(bad)
ds
dec
inc
mov
ins
mov
mov
std
leave
jl
aad
jnp
scas
shl
outs
adc
ins
push
arpl
pop
ret
retf
(bad)
ds
(bad)
shl
outs
ror
cwde
(bad)
ds
ret
enter
ds
xor
enter
mov
std
(bad)
dec
js
ds
jg
mov
std
leave
aaa
js
ds
ret
dec
inc
(bad)
ds
jg
mov
std
(bad)
dec
js
ds
jg
mov
std
popf
adc
xor
adc
std
ds
cmps
mov
repz
inc
std
inc
aas
sub
inc
mov
add
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
inc
jo
inc
aas
(bad)
std
inc
aas
jp
inc
aas
and
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
out
inc
mov
je
iret
inc
je
iret
inc
je
iret
cmp
xor
jmp
push
aas
mov
mov
dec
in
ds
outs
push
ret
xchg
mov
std
movs
inc
hlt
cmp
push
(bad)
enter
lds
std
ds
push
retf
mov
xchg
cmp
(bad)
ds
mov
jno
ins
dec
stos
sbb
dec
cmp
cmp
(bad)
ds
push
jg
push
aas
mov
mov
aas
push
aas
mov
add
in
mov
cmp
enter
ds
lock
in
ds
fadd
arpl
jo
addr16
ins
inc
jecxz
int
in
ds
adc
dec
mov
xor
sbb
push
inc
sbb
pop
ret
inc
mov
stos
add
leave
add
xchg
lods
mov
std
(bad)
or
out
(bad)
ds
inc
dec
mov
ins
pop
push
aas
inc
push
enter
mov
ins
dec
arpl
cmp
push
in
ds
add
div
(bad)
ds
sub
inc
jo
ds
xchg
repz
std
retf
ret
imul
(bad)
jb
outs
imul
dec
add
mov
enter
ds
xchg
shl
bound
adc
fiadd
lds
aas
mov
mov
push
std
cmp
cmp
mov
aas
retf
xchg
repz
std
enter
cmp
jb
aas
mov
ds
ds
pop
(bad)
(bad)
fisttp
ds
xor
ds
std
aas
sub
aas
mov
mov
pop
in
ds
scas
jb
inc
xchg
mov
mov
xor
inc
clc
ins
inc
mov
out
xchg
mov
dec
inc
ja
push
dec
sub
mov
std
leave
dec
fs
ds
(bad)
jp
bound
leave
int
xchg
inc
sti
inc
mov
and
aas
ds
retf
(bad)
ds
aas
jp
pusha
fcmove
cmp
(bad)
ds
(bad)
stc
mov
std
ds
in
cmp
ds
test
mov
std
jle
xor
enter
ds
rcl
ins
dec
cmp
inc
add
adc
xchg
cmp
sbb
xchg
aas
sub
jg
sub
jg
xor
cld
and
cmps
inc
sub
add
cmp
sub
call
cdq
outs
enter
(bad)
ds
leave
rcr
xlat
leave
add
shr
inc
xor
retf
push
out
push
mov
repnz
std
leave
xor
mov
test
jnp
into
jo
inc
jb
aas
mov
xor
inc
adc
jge
dec
aas
mov
std
(bad)
or
mov
inc
xor
(bad)
dec
cwde
(bad)
ds
(bad)
enter
ds
leave
jp
pop
jl
loope
inc
mov
dec
in
ds
addr16
ds
inc
mov
jp
aas
mov
jge
mov
mov
mov
std
(bad)
or
es
outs
dec
mov
ins
dec
mov
mov
mov
xchg
imul
ins
mov
mov
std
leave
add
xchg
scas
in
je
inc
xor
leave
adc
sub
imul
and
xor
addr16
(bad)
mov
sti
or
(bad)
std
aas
mov
and
inc
lods
shl
inc
xor
push
mov
add
aas
push
and
cmp
retf
sub
cmp
ds
cmp
addr16
lods
jg
mov
std
ds
mov
test
retf
(bad)
ds
pushf
shl
outs
bswap
das
in
xchg
push
ins
mov
retf
add
les
mov
(bad)
enter
ds
leave
jp
pop
jl
loope
les
aas
jb
aas
mov
call
push
add
in
ds
jb
aas
mov
ret
sbb
std
sub
outs
dec
mov
ins
dec
mov
mov
mov
xchg
imul
ins
mov
mov
std
enter
(bad)
dec
call
and
and
(bad)
mov
sti
or
(bad)
std
aas
mov
and
inc
sub
adc
or
adc
or
(bad)
or
mov
jbe
mov
sub
cli
pop
rcl
(bad)
dec
cmp
aas
mov
cmp
lds
inc
mov
mov
inc
cmp
push
icebp
movs
xchg
into
push
es
or
mov
mov
mov
aaa
retf
std
aas
mov
iret
sub
std
ds
sub
cmp
enter
ja
jecxz
leave
add
mov
sub
sub
push
std
ds
xchg
xchg
aas
mov
xor
inc
sti
inc
enter
std
push
std
ds
inc
mov
add
aas
xchg
xchg
aas
mov
mov
xor
enter
aas
jb
aas
mov
jge
mov
dec
arpl
into
xor
mov
mov
ins
mov
mov
std
mov
push
std
ds
pop
mov
outs
xchg
repz
std
jg
ins
dec
mov
std
mov
cwde
(bad)
ds
push
jg
xor
push
addr16
inc
sub
ins
push
xchg
lods
mov
mov
xchg
(bad)
jle
mov
std
ds
jg
mov
std
fnstenv
mov
test
inc
cmp
pop
mov
xchg
loope
cmp
mov
dec
aas
mov
shl
inc
mov
sbb
ins
push
jg
xor
xchg
repnz
inc
in
or
inc
adc
fistp
mov
std
cmp
or
aas
mov
and
inc
xor
adc
outs
inc
arpl
mov
push
and
push
(bad)
imul
inc
retf
adc
mov
ds
std
(bad)
adc
push
jp
repz
mov
and
mov
outs
inc
mov
xor
ja
inc
retf
lds
mov
test
add
pop
add
cld
dec
push
ret
jb
cmp
inc
cmp
add
outs
dec
cmps
inc
cmp
and
(bad)
in
dec
mov
std
adc
cmp
cld
dec
mov
push
outs
mov
mov
std
inc
js
sbb
xor
fisubr
mov
sub
xchg
retf
lds
mov
xchg
inc
xor
sub
ja
xchg
mov
std
jns
repz
mov
std
retf
(bad)
ds
sbb
xchg
stc
ds
dec
arpl
repnz
jecxz
leave
or
adc
outs
fcmovne
and
cs
pusha
xor
and
retf
retf
mov
in
enter
add
push
inc
sbb
(bad)
dec
cmp
push
arpl
outs
leave
rcl
enter
inc
jl
push
push
lea
pop
iret
mov
outs
dec
mov
mov
std
shr
inc
cmp
add
test
test
call
add
cld
dec
add
or
mov
les
dec
mov
std
adc
cmp
add
mov
push
outs
xchg
jmp
jecxz
inc
test
inc
cmp
fisubr
mov
cmp
sbb
add
lds
mov
xchg
inc
cmp
xor
and
xchg
outs
xchg
xlat
mov
std
jns
arpl
retf
(bad)
ds
sbb
imul
ds
mov
ins
push
test
fld
push
push
test
pop
(bad)
mov
outs
inc
mov
mov
std
shr
inc
cmp
add
data16
add
pop
add
cld
dec
add
add
cmp
(bad)
in
dec
mov
std
adc
sub
cld
dec
mov
push
out
retf
(bad)
ds
adc
xor
fisubr
mov
xor
ja
or
cld
pop
lds
mov
xchg
inc
xor
sub
ja
xchg
mov
std
jns
arpl
retf
(bad)
ds
adc
outs
inc
inc
sbb
mov
ds
push
arpl
dec
mov
or
xchg
sti
jecxz
push
sbb
inc
inc
inc
xor
div
les
(bad)
call
mov
mov
cmp
sub
xchg
out
ins
dec
arpl
int3
pushf
cmp
add
stos
ficom
mov
aaa
(bad)
mov
xor
icebp
lods
xchg
inc
lock
int3
add
(bad)
movs
aas
and
add
jns
dec
arpl
dec
cmp
lds
inc
mov
mov
mov
(bad)
ds
lods
jnp
lods
sub
jg
pop
mov
icebp
mov
mov
bound
cld
pop
(bad)
ds
cmp
mov
jb
mov
retw
jb
mov
retw
jb
cmp
inc
cmp
add
outs
push
cmps
icebp
cmp
retf
and
dec
mov
std
adc
cmp
mov
jecxz
lea
outs
push
mov
xchg
dec
cmps
mov
in
ds
retf
inc
enter
ins
inc
xor
or
cmp
sub
mov
mov
std
imul
inc
xor
or
or
or
ins
push
mov
in
std
ds
mov
mov
std
mov
mov
std
(bad)
shr
arpl
jbe
cmp
jg
std
ds
mov
ins
pop
test
fld
outs
inc
mov
inc
cmp
cld
inc
xchg
sub
(bad)
mov
sub
(bad)
mov
sub
add
pop
add
cld
dec
add
add
cmp
(bad)
in
dec
mov
std
adc
sub
cld
dec
mov
push
out
retf
(bad)
ds
sbb
xor
rcr
inc
xchg
sub
mov
imul
inc
sub
add
or
add
ins
dec
mov
jb
aas
mov
cmp
xor
in
ds
movs
inc
add
dec
cmp
lds
ds
mov
rep
push
mov
and
test
pop
bound
pop
inc
retf
lds
mov
test
(bad)
mov
sub
(bad)
mov
sub
add
pop
add
cld
dec
add
add
mov
(bad)
jo
inc
jo
std
ds
clc
enter
xchg
push
outs
inc
stos
inc
cmp
sub
inc
nop
(bad)
ds
mov
lea
iret
sbb
xchg
retf
lds
mov
xchg
inc
xor
sub
ja
xchg
mov
std
jns
arpl
retf
(bad)
ds
sbb
cmp
push
sbb
dec
arpl
jo
xchg
clc
ins
push
arpl
jo
test
sub
retf
mov
mov
std
adc
and
(bad)
imul
jg
lock
ds
(bad)
dec
cmp
sti
ds
dec
arpl
ins
inc
jg
xor
pop
lahf
ret
hlt
ds
push
arpl
xor
std
sar
call
test
add
and
int3
cmc
jge
jecxz
add
inc
pop
ret
ror
or
nop
sahf
les
mov
ret
mov
add
sahf
in
ds
and
ds
push
arpl
call
xor
aas
push
aas
mov
mov
aas
jp
aas
mov
pop
popf
adc
add
fiadd
mov
(bad)
in
ds
jp
aas
mov
addr16
or
std
push
es
aas
inc
xchg
mov
mov
mov
dec
in
ds
and
lods
repz
std
(bad)
dec
js
ds
popa
jge
jecxz
add
inc
pop
ret
ror
je
iret
inc
je
iret
or
out
daa
outs
retf
std
ds
jb
inc
jmp
mov
je
iret
inc
je
iret
inc
sub
inc
or
out
pop
and
outs
int3
daa
adc
std
cmp
aas
inc
push
aas
mov
cmp
out
(bad)
lds
std
ds
std
outs
in
ds
rol
mov
inc
je
iret
or
mov
cmp
jb
cmp
push
sub
cmp
pop
pop
ret
jb
inc
push
aas
mov
xor
pop
sbb
test
sub
mov
mov
mov
iret
outs
in
ds
mov
in
pushf
jecxz
sub
outs
adc
test
nop
div
mov
ds
sbb
cld
jmp
and
dec
enter
ds
adc
or
dec
add
dec
ds
fist
mov
pop
add
je
iret
cmp
push
xchg
inc
aad
lds
std
cmp
ds
xor
int3
cli
pop
add
or
dec
or
or
add
add
cmp
(bad)
ds
iret
jp
pop
adc
add
push
retf
push
push
outs
xchg
pop
mov
std
jns
pop
dec
retf
(bad)
ds
dec
test
(bad)
dec
dec
cld
jecxz
push
inc
sub
inc
and
dec
retf
push
lahf
inc
xor
dec
inc
sub
inc
inc
cmp
dec
loope
push
arpl
push
iret
retf
push
aas
sahf
mov
inc
mov
add
inc
je
iret
inc
and
cmp
or
pop
retf
(bad)
ds
rcl
mov
xchg
push
inc
pop
xor
lock
std
ds
inc
mov
add
aas
popf
xchg
aas
mov
mov
inc
pop
jb
jge
jl
loope
pop
xchg
gs
aas
mov
or
jns
shl
cwde
(bad)
ds
jg
mov
std
dec
mov
ror
das
mov
push
std
mul
inc
ds
jne
aas
mov
pop
add
int3
and
mov
(bad)
iret
inc
je
iret
pop
outs
inc
arpl
jecxz
call
or
jmp
mov
xchg
jns
mov
push
je
xor
push
add
mov
pop
test
enter
daa
mov
add
jmp
sub
loope
icebp
inc
aas
pop
jo
mov
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
repz
push
dec
push
ds
not
mov
std
push
into
ss
aas
cmp
retf
into
add
jecxz
dec
inc
scas
xchg
jl
mov
sahf
inc
cmps
pop
add
mov
inc
je
iret
inc
sub
inc
push
dec
(bad)
cmp
mov
std
push
ret
aas
jns
mov
inc
je
iret
inc
je
iret
mov
inc
xchg
cld
jecxz
jmp
call
mov
(bad)
mov
mov
std
mov
and
ss
xchg
(bad)
xor
mov
ror
je
iret
inc
je
iret
inc
sub
inc
push
jecxz
jg
sub
xor
mov
ror
je
iret
inc
je
iret
inc
je
iret
sbb
addr16
fdivr
test
repz
enter
ds
jmp
pop
adc
jle
std
adc
arpl
inc
xchg
std
cmp
and
cmp
(bad)
xchg
(bad)
cmps
ret
sub
(bad)
adc
es
mov
mov
hlt
loopne
icebp
inc
aas
icebp
cmps
jb
inc
icebp
test
sub
ja
add
push
sbb
retf
sbb
add
jo
arpl
xor
adc
mov
inc
sub
cld
push
bound
inc
aas
sahf
xor
ds
cmp
lods
outs
inc
arpl
push
shl
push
mov
out
xor
out
mov
dec
std
xchg
mov
inc
sub
in
leave
add
push
ret
popa
enter
ds
pop
call
mov
inc
je
iret
inc
je
iret
or
cmps
ret
sub
cmp
mov
cmp
or
(bad)
jno
test
jmp
dec
aas
loope
mov
mov
outs
adc
inc
sub
xchg
dec
dec
jmp
cld
push
bound
inc
aas
adc
jecxz
add
mov
inc
sub
inc
cmp
push
ret
push
xchg
or
or
ds
cli
xchg
mov
out
in
lods
mov
nop
push
fdivr
xchg
in
sar
inc
push
mov
std
jecxz
sbb
or
pop
mov
in
lods
mov
nop
push
aam
xchg
in
sar
inc
push
mov
jmp
pop
or
xor
push
retf
addr16
push
int3
cli
xchg
or
mov
in
sar
jmp
in
xor
into
sbb
cmp
jecxz
daa
out
(bad)
cmp
or
and
sbb
sub
add
xchg
(bad)
mov
(bad)
mov
loope
cmp
sub
xor
sbb
sahf
fwait
ss
mov
inc
arpl
ins
inc
inc
cmp
arpl
push
(bad)
sahf
dec
push
inc
mov
dec
arpl
retw
in
sbb
mov
jecxz
push
push
int3
mov
mov
inc
pop
pushf
jmp
in
ror
dec
adc
xchg
mov
mov
retf
fild
mov
mov
ja
arpl
stos
inc
pop
mov
std
ds
jnp
ds
dec
arpl
retw
in
aas
and
addr16
aas
and
push
test
dec
(bad)
test
dec
adc
mov
cdq
xchg
cld
jecxz
mov
add
arpl
stos
inc
push
mov
std
ds
sub
pop
jge
push
push
mov
std
leave
add
push
ret
dec
ds
rcl
mov
inc
arpl
dec
(bad)
jb
jecxz
ret
push
(bad)
sahf
jg
ds
inc
arpl
retw
call
dec
arpl
cmp
adc
and
addr16
mov
xor
fiadd
cmps
ret
sub
(bad)
test
inc
aas
push
ins
or
ret
sub
imul
repnz
jecxz
leave
retf
or
shl
and
mov
outs
(bad)
push
movs
test
jecxz
ret
mov
jb
iret
add
movs
test
cmp
sub
pop
xor
xor
inc
clc
cmp
jecxz
nop
sahf
sub
ret
ret
sub
sar
daa
icebp
loope
sbb
clc
push
xchg
sahf
pop
add
mov
lds
test
ret
cmp
fiadd
dec
xchg
sahf
inc
add
mov
cmp
ret
sub
sar
add
cmp
add
std
cmp
add
push
cmc
mov
outs
or
ret
sub
leave
retf
or
push
clc
ss
inc
aas
sahf
or
cmp
jmp
dec
daa
scas
sbb
aas
inc
xor
pop
cmp
(bad)
div
icebp
inc
aas
aas
stc
mov
in
mov
push
or
jmp
out
mov
std
leave
jle
int3
add
push
dec
int3
or
mov
ret
sub
nop
push
cmp
mov
jecxz
retf
cli
pop
push
stc
mov
std
ds
test
pop
loope
mov
clc
ss
inc
aas
or
mov
ret
imul
mov
les
pop
dec
retf
push
enter
jp
pop
repnz
xor
jbe
mov
ret
sub
mov
test
pop
cmp
push
bswap
jp
outs
push
enter
int3
cld
out
das
sub
mov
mov
fdivr
jnp
icebp
inc
aas
push
dec
or
or
dec
or
push
retf
dec
ds
adc
outs
dec
arpl
dec
(bad)
test
outs
dec
addr16
adc
or
(bad)
popf
adc
mov
mov
std
cdq
cmp
mov
inc
je
iret
or
mov
push
pushf
and
mov
inc
addr16
dec
test
or
inc
sahf
in
push
(bad)
repnz
in
lds
inc
mov
call
xchg
mov
movs
xchg
cld
jecxz
mov
cmp
push
bound
inc
aas
cmp
jl
inc
inc
adc
add
mov
xor
ret
outs
inc
inc
and
(bad)
mov
and
shr
inc
loope
cmp
repnz
mov
mov
call
cmps
inc
popa
dec
jle
iret
inc
lods
outs
cmp
test
fild
mov
pop
mov
xor
addr16
dec
add
addr16
or
inc
aas
inc
pop
cs
mov
movs
xchg
cld
jecxz
mov
xor
cld
push
bound
inc
aas
inc
sub
clc
retf
idiv
aas
cmp
sub
loop
cmp
push
retf
dec
mov
std
retf
xor
or
sub
leave
sti
or
enter
test
idiv
ds
or
retf
xchg
mov
std
push
bound
inc
aas
lahf
mov
ds
push
inc
or
adc
sub
leave
sti
out
ds
pop
push
test
lock
ins
dec
dec
(bad)
fnstcw
xchg
mov
jecxz
arpl
inc
jl
jg
ss
xor
or
fidivr
dec
mov
call
std
push
fidivr
inc
aas
cmp
add
mov
(bad)
mov
movs
xchg
cld
jecxz
je
icebp
inc
aas
inc
icebp
or
jb
inc
mov
add
push
xor
fs
test
int3
retf
or
ja
adc
outs
cs
(bad)
mov
outs
xor
ret
sub
retf
cld
fild
mov
icebp
inc
aas
mov
test
test
jecxz
retf
dec
daa
inc
xor
ds
cmp
xchg
sahf
sub
ds
inc
pop
inc
sbb
xchg
cld
jecxz
add
xor
adc
mov
mov
sub
(bad)
mov
jmp
daa
pop
pop
add
cmp
pop
pushf
adc
and
and
outs
inc
pop
and
jno
outs
or
sub
leave
or
push
cmp
(bad)
push
test
imul
test
cmp
push
pop
ss
aas
adc
adc
inc
xor
add
cmps
mov
scas
out
iret
inc
je
iret
inc
je
iret
inc
je
iret
inc
xor
inc
inc
cmp
inc
icebp
lods
jb
inc
sub
dec
or
mov
enter
inc
cmp
popf
js
std
leave
cli
pop
or
ret
iret
inc
sub
inc
cmp
dec
inc
lods
mov
jbe
add
call
call
ror
mov
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
inc
inc
cmc
xchg
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
shr
xchg
or
aam
pushf
mov
sub
(bad)
cmp
add
mov
mov
ret
std
ds
icebp
rcl
out
ds
outs
(bad)
aas
mov
mov
inc
aas
clc
push
(bad)
ds
adc
or
inc
mov
std
ds
add
in
ds
dec
(bad)
cmp
mov
mov
adc
std
leave
scas
addr16
jecxz
pop
inc
xchg
into
aas
mov
mov
(bad)
loope
or
add
jmp
std
test
mov
ds
int3
daa
int3
pop
add
inc
imul
inc
mov
mov
mov
jecxz
xchg
or
(bad)
cmps
mov
in
jg
dec
dec
jecxz
retf
std
ds
push
out
mov
add
jecxz
aas
(bad)
and
cmps
mov
cmp
inc
mov
in
lahf
loop
cmps
mov
in
jg
dec
dec
jecxz
retf
std
ds
and
cmp
mov
addr16
mov
leave
xchg
cld
jecxz
aas
and
addr16
and
addr16
and
addr16
and
gs
sub
test
dec
add
cmps
jecxz
jae
sub
mov
(bad)
es
dec
jle
mov
mov
mov
std
ds
hlt
push
inc
mov
adc
or
inc
cmp
add
mov
rcl
sub
mov
inc
aas
inc
xchg
xchg
inc
mov
dec
retf
dec
es
mov
inc
aas
push
mov
test
xor
js
loopne
retf
push
test
test
ds
jnp
inc
sbb
xchg
and
mov
es
ds
daa
jmp
aas
inc
jae
inc
mov
in
mov
sub
ds
push
mov
rcl
inc
(bad)
ds
(bad)
es
ds
push
mov
inc
aas
cmp
retf
mov
mov
aas
lock
icebp
cmps
jp
jmp
jns
aas
cmp
retf
jg
adc
std
ds
push
push
add
mov
neg
sar
sub
jno
pop
int
push
pop
hlt
jp
bound
loopne
cmp
call
adc
push
sub
push
cmps
ss
aas
and
cld
cmovno
fst
cmps
pusha
(bad)
retf
mov
inc
aas
ja
add
mov
std
es
into
cli
ds
les
jo
les
cmp
ds
xor
cmp
sub
dec
cmp
add
mov
dec
pop
sahf
out
loopne
mov
push
sub
mov
(bad)
or
jnp
sahf
int3
xor
inc
mov
mov
retf
xor
mov
sub
leave
ret
mov
dec
repnz
ins
pop
cmp
cmp
(bad)
jecxz
retf
or
or
mov
test
aas
inc
imul
jbe
les
loope
int3
inc
xor
ds
es
jecxz
int3
add
std
ds
cli
daa
dec
test
aas
inc
xor
daa
or
cli
daa
pop
sbb
aas
inc
icebp
leave
xchg
cld
jecxz
test
xor
retf
out
lods
mov
cmp
inc
call
(bad)
ds
inc
sbb
xor
retf
fxch
(bad)
sti
or
xor
dec
inc
popf
(bad)
ds
jbe
and
push
retf
and
mov
push
retf
out
daa
mov
sti
ds
push
or
pop
sub
int3
push
sub
out
push
daa
add
cli
ds
outs
add
scas
jecxz
dec
inc
cmp
inc
js
add
pop
stos
add
mov
std
sub
les
int3
and
mov
add
or
sbb
mov
mov
mov
call
mov
mov
xor
dec
inc
sub
dec
cmp
or
add
mov
outs
jae
mov
jmp
cmp
test
outs
dec
ds
mov
movs
add
add
or
ds
xor
int3
sti
mov
(bad)
ds
mov
mov
mov
jecxz
test
mov
jge
cli
inc
mov
std
es
ds
mov
add
mov
call
retf
push
xchg
push
mov
js
jecxz
add
jmp
sub
retf
add
ds
enter
lds
stos
inc
cmp
xor
daa
mov
cli
ds
xor
push
sti
(bad)
ds
lds
retf
mov
mov
icebp
std
ds
pop
retf
ror
je
iret
inc
je
iret
inc
je
iret
and
cmps
hlt
sub
mov
mov
(bad)
enter
ds
jmp
ret
or
mov
inc
arpl
outs
dec
arpl
xor
int3
add
push
push
cli
pop
push
mov
std
es
out
std
ds
cmp
mov
xor
aas
or
inc
dec
mov
mov
ret
jecxz
ds
ret
je
iret
inc
je
iret
jge
rcr
cld
jecxz
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
out
out
stos
add
push
sub
mov
cmp
and
jp
mov
or
arpl
push
dec
arpl
cmp
(bad)
mov
std
ds
and
(bad)
jb
outs
inc
inc
xor
leave
mov
lds
dec
adc
leave
push
fiadd
inc
shr
inc
icebp
mov
adc
inc
pop
add
jecxz
iret
cmp
dec
xchg
or
mov
or
xor
xchg
or
mov
xor
push
inc
xor
cmps
aas
cmp
pop
aas
sub
push
inc
sub
or
and
cli
pop
es
cs
ds
pusha
and
inc
and
cmp
pop
inc
stos
cmc
cmovno
mov
shl
inc
xor
dec
inc
jo
mov
dec
aad
ja
out
ja
add
retf
out
xchg
leave
dec
sub
(bad)
retf
out
push
idiv
mov
ja
adc
cwde
lock
mov
int
adc
mov
mov
inc
int
fcmovne
mov
rol
mov
out
rol
outs
fsub
fcmovnbe
bound
or
inc
xchg
jno
pop
movs
mov
add
mov
dec
rcr
cmp
pusha
and
push
and
mov
and
push
and
fiadd
cmp
inc
and
iret
mov
out
xchg
or
add
out
cmc
inc
mov
lds
fcmovne
bound
ret
or
inc
jnp
mov
test
mov
dec
shl
lods
mov
or
ror
or
push
and
mov
daa
inc
js
push
cld
adc
dec
ja
cmovp
pop
out
mov
aad
mov
arpl
out
int3
push
idiv
sar
loopne
adc
adc
mov
mov
and
push
and
mov
psubusw
mov
mov
test
retf
call
dec
(bad)
out
retf
call
dec
mov
push
cli
out
int3
cmp
aaa
ja
adc
xchg
lock
mov
shl
psubusw
mov
inc
ror
ds
mov
and
out
mov
bound
out
retf
or
xor
je
pop
enter
and
movs
jmp
pop
mov
test
sbb
push
and
inc
push
and
ror
and
add
out
mov
fcmovnbe
bound
or
mov
push
dec
push
xchg
cmp
mov
in
sar
adc
and
into
and
shl
stos
fidivr
add
push
movs
retf
in
dec
ja
cmovp
fcmovne
retf
inc
arpl
pop
in
bound
ret
or
jnp
push
retf
int3
bound
inc
push
mov
les
mov
into
add
fxch
or
push
and
ror
fild
hlt
retf
jmp
dec
(bad)
outs
dec
arpl
out
bound
jmp
arpl
out
int3
dec
out
cmp
or
adc
or
add
lods
mov
sub
mov
daa
sar
adc
mov
and
lea
or
lea
inc
xchg
aad
mov
out
cli
retf
push
inc
mov
out
cmp
push
ins
int
aaa
ja
adc
sahf
lock
inc
movs
add
lods
mov
add
ror
add
push
and
test
fstp
outs
rol
(bad)
mov
inc
jge
inc
arpl
outs
push
(bad)
outs
ror
fcmovne
bound
fcmovne
and
inc
dec
jns
ret
or
int3
inc
in
push
cli
in
add
adc
add
add
lods
mov
daa
fldcw
mov
inc
push
and
mov
rol
fs
mov
(bad)
retf
out
ja
or
and
retf
ror
and
cs
nop
out
int3
jb
(bad)
cmp
mov
in
dec
sar
push
(bad)
and
rcr
fisub
add
inc
inc
and
cmp
add
retf
in
pop
ja
add
outs
xlat
inc
mov
jp
(bad)
outs
push
(bad)
outs
mul
outs
push
push
fcmovnbe
bound
or
inc
mov
xor
xor
inc
fdivr
dec
rcr
add
cmps
mov
fxch
or
push
and
test
stos
(bad)
hlt
adc
inc
ret
mov
mov
and
out
mov
bound
out
(bad)
inc
xchg
jno
pop
mov
ret
mov
ja
adc
mov
mov
and
fnstcw
xchg
mov
repz
leave
call
rol
mov
out
ror
mov
into
enter
retf
push
retf
fcmovne
and
es
iret
dec
mov
arpl
out
int3
jb
cmc
loop
loopne
push
ja
adc
push
inc
fld
adc
fisub
sub
loopne
stos
ficomp
add
push
and
mov
ret
out
mov
fmul
scas
movs
in
push
ja
or
scas
out
retf
ret
retf
dec
dec
mov
fcmove
inc
std
xchg
ja
adc
adc
xor
and
add
scas
add
jmp
scas
mov
shl
add
out
enter
lds
pop
xlat
inc
xchg
outs
push
add
pop
aaa
fisubr
inc
mov
loopne
sar
psubsw
xchg
inc
js
popa
pop
sub
ja
push
dec
mov
rol
pop
aad
or
bound
out
retf
and
cmp
or
loope
emms
(bad)
adc
cmovno
and
mov
adc
std
pop
outs
mov
and
out
jb
pop
mov
call
iret
mov
dec
ror
ficomp
add
inc
mov
or
stos
add
inc
mov
hlt
retf
jmp
dec
xchg
out
retf
stc
retf
mov
inc
int3
dec
out
ins
sti
jne
mov
ja
adc
or
and
mov
test
jp
(bad)
outs
rol
add
retf
mov
inc
lea
imul
movs
jecxz
shl
stos
fimul
add
inc
mov
add
js
(bad)
out
ror
nop
movs
jmp
dec
nop
outs
aad
xchg
pop
ror
mov
or
int3
bound
mov
lds
or
push
and
mov
xor
adc
add
retf
into
jb
pop
rol
push
adc
inc
fwait
jge
and
retf
movs
fimul
fild
cmp
xor
jmp
push
sbb
dec
ja
push
retf
es
mov
fmul
jge
shl
movs
push
stos
fimul
mov
mov
push
jmp
outs
mov
sub
out
ss
(bad)
pop
sbb
out
retf
inc
int3
dec
out
inc
popa
(bad)
mov
ja
sbb
cwde
jmp
lods
mov
adc
xor
push
jmp
mov
sti
int
std
imul
cli
mov
retf
pop
inc
xchg
mov
jb
out
int3
cmp
movs
bound
mov
ja
lldt
sub
jnp
out
nop
or
arpl
cmp
test
arpl
retf
adc
mov
mov
(bad)
mov
(bad)
arpl
fiadd
dec
nop
inc
sub
arpl
xor
or
mov
dec
arpl
dec
nop
or
jb
dec
inc
cmp
pop
inc
sub
pop
pop
outs
dec
arpl
xor
cs
or
daa
jle
std
ds
sub
xchg
and
cmp
dec
push
popa
repnz
or
addr16
mov
inc
mov
loopne
jecxz
leave
or
and
cli
pop
push
retf
sbb
and
dec
retf
and
fidiv
js
mov
mov
(bad)
mov
xor
ins
test
fiadd
push
pop
and
mov
mov
inc
arpl
outs
dec
arpl
outs
push
arpl
dec
fisub
push
outs
inc
arpl
xor
int3
add
pop
outs
int3
daa
loop
std
ds
cmp
ja
sub
push
inc
xor
dec
push
clc
inc
inc
pop
dec
or
addr16
xor
push
pop
out
mov
std
leave
add
push
retf
push
retf
sbb
and
dec
retf
and
fidiv
retf
fdivr
mov
mov
(bad)
mov
xor
cmc
test
fiadd
dec
xchg
inc
xor
arpl
xor
(bad)
ds
push
arpl
outs
inc
arpl
outs
dec
arpl
dec
xor
lock
push
arpl
xor
cli
pop
cs
push
outs
int3
daa
inc
in
ds
xor
addr16
cmp
push
inc
sub
dec
push
lahf
rcl
loopne
or
or
mov
inc
mov
test
jecxz
leave
cli
pop
inc
retf
push
retf
sbb
and
dec
retf
and
fidiv
dec
retf
inc
aas
mov
mov
add
arpl
outs
jl
inc
xor
push
mov
out
enter
mov
cld
cmp
arpl
inc
add
aas
sub
adc
add
inc
je
iret
inc
je
iret
inc
sub
dec
or
arpl
outs
push
arpl
cmp
xadd
push
jb
out
retf
and
outs
push
arpl
outs
or
ins
or
ja
push
aas
mov
mov
loope
shr
inc
mov
adc
inc
xchg
cmps
sbb
inc
je
iret
inc
mov
clc
(bad)
jecxz
ds
stos
add
push
sub
xor
inc
xchg
es
push
clc
das
jmp
dec
lds
movs
stos
inc
xchg
mov
mov
mov
push
push
retf
ror
je
iret
or
push
push
arpl
cmp
inc
loope
mov
movs
add
push
jecxz
nop
mov
call
nop
mov
call
leave
pop
loopne
sub
imul
movs
add
retf
push
sub
std
into
inc
je
iret
cmp
and
cli
pop
(bad)
xchg
or
mov
or
sub
sahf
jnp
ds
add
ds
add
xchg
and
clc
cs
ds
dec
cmps
into
loopne
aas
inc
mov
lock
std
retf
add
push
test
sahf
xchg
ds
push
mov
hlt
mov
inc
mov
nop
mov
std
retf
ss
push
test
jecxz
ds
add
inc
xor
ja
sub
arpl
movs
jae
jne
sti
xchg
pop
or
std
ds
dec
pop
cmp
jecxz
dec
fnclex
(bad)
ds
xchg
mov
dec
cli
pop
push
(bad)
mov
add
into
data16
ds
mov
cmp
mov
inc
fild
retf
mov
retf
ss
fild
data16
and
mov
adc
test
add
outs
xlat
retf
or
cmps
mov
in
ds
out
inc
clc
mov
or
out
cmp
jns
inc
mov
jg
jecxz
jmp
fnstsw
or
pop
inc
mov
outs
jb
retf
int3
xor
add
ja
out
test
lds
xor
dec
inc
pop
outs
leave
daa
mov
std
ds
loope
mov
outs
push
into
push
repz
outs
push
arpl
outs
leave
int3
cli
adc
icebp
ds
les
stos
ds
push
in
add
push
jb
iret
add
outs
push
arpl
push
int
jmp
add
add
pop
outs
mov
out
jecxz
inc
pop
call
mov
inc
je
iret
inc
sub
dec
inc
xor
dec
inc
cmp
inc
push
outs
inc
arpl
jmp
ds
ret
je
iret
or
shl
inc
dec
inc
xor
xchg
or
xchg
stos
mov
std
xchg
jge
std
ds
dec
push
mov
std
ds
aam
mov
xchg
out
std
ds
imul
aas
push
stos
sub
es
es
and
or
jbe
push
int3
inc
adc
ds
out
pmulhuw
sar
call
inc
shl
jns
cmp
or
and
mov
mov
jecxz
pop
int3
xor
mov
mov
out
std
ds
dec
daa
outs
cmp
cs
xchg
inc
(bad)
ds
imul
ds
or
jecxz
push
inc
fadd
mov
jo
outs
mov
std
xchg
sahf
push
push
aas
mov
ret
mov
jecxz
jns
pop
dec
inc
jno
cmp
(bad)
outs
and
jecxz
enter
(bad)
mov
jecxz
dec
movs
mov
jmp
outs
mov
std
test
mov
jecxz
retf
and
jecxz
ret
cmp
sub
inc
inc
imul
(bad)
sahf
jecxz
aas
mov
and
jecxz
ret
xor
pop
adc
inc
mov
adc
mov
xor
mov
iret
data16
mov
jb
std
ds
test
aas
mov
add
outs
mov
mov
std
retf
cld
ds
(bad)
mov
jno
outs
mov
std
xchg
sahf
daa
pop
aas
mov
sub
std
(bad)
sahf
mov
mov
ret
stos
pop
popf
adc
pushf
jns
mov
inc
je
iret
inc
je
iret
inc
sub
inc
and
mov
movs
cmp
jecxz
daa
xchg
and
ds
je
iret
inc
je
iret
inc
je
iret
or
jb
ret
dec
sub
push
cmp
mov
popa
xor
or
push
retf
push
xchg
cmp
enter
ds
and
cmp
(bad)
psrad
arpl
mov
cmc
add
xor
adc
iret
inc
je
iret
inc
je
iret
or
jb
ret
jb
rep
sbb
xor
outs
dec
arpl
cmp
cmp
xchg
ds
cmp
push
aam
mov
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
mov
nop
and
outs
push
dec
inc
xor
xchg
inc
cmp
retf
inc
cmp
stos
inc
cmp
aam
test
int3
mov
add
aas
icebp
std
ds
pop
popf
adc
pushf
jns
inc
sub
sub
not
cs
aas
jns
inc
cmp
jp
inc
mov
dec
xor
dec
xchg
std
adc
pushf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
test
cld
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
pushf
mov
jecxz
mov
sti
out
mov
in
ds
mov
jns
ds
push
inc
mov
std
ds
jmp
loop
cmp
or
ds
inc
mov
arpl
mov
push
mov
outs
test
jne
cmp
xchg
push
ins
dec
pop
inc
xor
ds
xchg
retf
inc
jmp
call
pop
mov
pop
or
mov
std
ds
scas
rcr
aas
sub
rcr
inc
daa
mov
std
ds
daa
std
ret
or
ds
xor
mov
xchg
xlat
add
(bad)
mov
in
ds
out
shl
std
leave
add
add
sti
mov
test
jecxz
ds
ds
test
jecxz
test
mul
std
cmp
jb
inc
sub
leave
inc
(bad)
std
ds
mov
retf
xchg
mov
std
mov
jecxz
(bad)
(bad)
loop
mov
ins
inc
sbb
loop
jle
dec
pop
xor
inc
pop
icebp
stos
jl
inc
sub
les
or
cmp
xchg
lahf
sbb
aas
mov
ss
add
std
leave
sti
jmp
mov
(bad)
ds
mov
sub
push
outs
dec
inc
push
stos
inc
cmp
sub
ds
std
daa
ins
pop
add
inc
sub
retf
xchg
push
xchg
stos
or
jg
int3
or
jecxz
sub
xchg
(bad)
sti
repz
push
mov
enter
test
pop
(bad)
les
std
retf
ret
out
cmps
dec
mov
sub
std
ds
not
addr16
ret
or
ds
jno
ds
mov
mov
mov
rcl
cdq
ins
dec
or
cmp
enter
les
jecxz
leave
add
mov
xor
outs
inc
adc
mov
imul
in
ds
dec
jecxz
nop
sahf
iret
cli
ds
ret
sub
les
inc
dec
mov
std
lds
aas
mov
mov
jecxz
retf
mov
and
test
outs
inc
sub
imul
sub
retf
add
mov
std
enter
retf
and
inc
lock
add
mov
imul
out
cli
fs
cld
fisttp
push
aas
sub
dec
inc
dec
std
ds
push
retf
mov
movs
jb
push
int3
or
add
jecxz
push
sti
(bad)
ds
out
fsub
std
jno
outs
dec
xor
ins
or
mov
std
popf
adc
mov
cmps
mov
in
leave
sti
retf
add
cmp
ds
jp
or
mov
out
xchg
or
add
mov
jecxz
cmps
mov
std
ds
ss
mov
std
ret
xchg
out
std
ds
jnp
inc
inc
or
sti
iret
mov
lock
pop
mov
sti
mov
xchg
pop
(bad)
sub
loop
ds
sub
(bad)
sahf
inc
pop
inc
mov
ret
sub
les
pop
(bad)
sahf
xor
inc
mov
ret
mov
xchg
std
ds
inc
rol
pop
or
mov
ret
sub
retf
push
pop
int3
ins
cmp
push
shl
int3
or
jecxz
test
xor
inc
iret
in
sar
jecxz
xor
les
sbb
int3
add
sub
cmp
push
or
mov
out
test
push
jecxz
pop
les
retf
ds
sub
fcmove
sub
mov
shl
adc
sti
fild
aas
mov
ret
test
outs
les
mov
mov
outs
dec
inc
and
addr16
inc
cmc
cld
xchg
fisubr
xchg
enter
xor
jne
mov
xor
std
leave
sti
retf
add
mov
in
sar
(bad)
add
inc
jge
cli
ds
std
daa
gs
aas
inc
sub
xchg
sub
retf
mov
jecxz
jmp
in
dec
daa
jecxz
(bad)
cmp
cmp
in
dec
daa
sar
(bad)
cmp
mov
icebp
std
ds
pop
retf
ror
das
inc
aas
test
inc
aas
or
inc
aas
mov
(bad)
ds
in
inc
mov
in
inc
mov
in
inc
mov
je
iret
inc
je
iret
inc
je
iret
and
push
imul
(bad)
mov
mov
(bad)
enter
ds
mov
inc
aad
cmps
repnz
ds
pop
and
sbb
inc
mov
jl
jge
and
jecxz
ds
mov
adc
in
add
mov
mov
add
pop
adc
mov
cli
in
std
add
mov
mov
add
pop
adc
mov
loop
in
add
mov
mov
add
pop
adc
mov
retf
std
add
mov
mov
add
pop
adc
mov
mov
in
add
mov
mov
add
pop
adc
out
in
std
add
mov
mov
add
pop
adc
mov
and
std
add
mov
mov
add
pop
adc
mov
push
in
add
mov
mov
add
pop
adc
mov
push
in
std
add
mov
mov
add
pop
adc
mov
cmp
in
add
mov
mov
add
pop
adc
mov
and
in
add
mov
mov
add
pop
adc
mov
or
in
add
mov
mov
add
pop
adc
mov
repnz
std
add
mov
mov
add
pop
adc
out
in
std
add
mov
mov
add
pop
adc
mov
ret
std
add
mov
mov
add
pop
adc
mov
stos
in
std
add
mov
mov
add
pop
adc
mov
xchg
in
std
add
mov
mov
add
pop
adc
mov
jp
in
add
mov
mov
add
pop
adc
mov
(bad)
in
std
add
mov
mov
add
pop
adc
mov
dec
in
std
add
mov
mov
add
pop
adc
mov
xor
in
add
mov
mov
add
pop
adc
out
jecxz
std
add
mov
mov
add
pop
adc
mov
add
in
add
mov
mov
mov
pop
adc
push
cmp
mov
pop
adc
mov
inc
mov
dec
arpl
stos
add
push
sub
leave
jl
pop
mov
mov
add
movs
add
or
out
daa
pop
retf
cld
lods
sub
inc
mov
pop
xchg
sahf
or
inc
mov
ret
stos
pop
add
outs
out
xchg
inc
pusha
and
sub
push
sub
aas
mov
out
dec
out
retf
inc
jl
ds
xor
cmp
adc
and
aas
mov
out
dec
out
retf
cmp
(bad)
ds
data16
jecxz
xchg
sahf
adc
inc
mov
mov
push
cmp
aas
mov
out
dec
out
retf
dec
ins
(bad)
ds
xchg
mov
lock
inc
mov
test
mov
std
mov
xor
out
dec
out
retf
inc
in
ds
data16
int3
xchg
inc
mov
xchg
jnp
jecxz
nop
push
cmp
aas
mov
out
dec
out
retf
cmp
add
mov
xchg
mov
test
inc
mov
mov
mov
das
add
mov
out
dec
out
retf
dec
aam
aas
mov
data16
test
imul
add
mov
out
dec
out
retf
inc
dec
add
mov
data16
pusha
xchg
inc
mov
xchg
jecxz
jecxz
nop
push
daa
add
mov
out
dec
out
retf
cmp
add
mov
cmp
inc
mov
mov
jecxz
(bad)
push
and
out
dec
out
retf
dec
cmp
aas
mov
data16
jecxz
xchg
sahf
sbb
sar
xor
aas
mov
out
dec
out
retf
inc
mov
aas
mov
data16
hlt
xchg
inc
mov
xchg
dec
mov
xor
aas
mov
out
dec
out
retf
cmp
add
mov
cbw
mov
rcl
ret
mov
inc
add
mov
out
dec
out
popf
adc
add
inc
je
iret
inc
je
iret
outs
mov
mov
inc
je
iret
inc
je
iret
sbb
addr16
adc
test
jecxz
ds
jmp
fst
imul
mov
std
mov
jecxz
aaa
mov
sbb
mov
adc
inc
xor
inc
or
sbb
jecxz
mov
jmp
sbb
push
pop
ins
jb
out
retf
outs
inc
mov
cmp
adc
dec
bound
out
retf
add
push
push
cli
pop
sub
mov
std
daa
and
inc
mov
ret
jecxz
ds
ret
outs
push
arpl
ss
xchg
or
push
(bad)
or
and
jecxz
mov
sti
mov
sahf
mov
mov
ficomp
jmp
mov
mov
std
ds
stos
jae
icebp
test
push
inc
mov
mov
inc
fisttp
xor
enter
lock
add
mov
mul
or
dec
nop
or
enter
mov
stc
or
clc
add
mov
or
aas
aaa
sub
inc
imul
(bad)
mov
shl
push
nop
or
aam
in
shr
dec
ins
inc
sub
push
sbb
mov
jecxz
movs
inc
aaa
sub
mov
arpl
dec
cli
add
mov
ins
pop
mov
mov
adc
(bad)
ds
xor
push
jl
and
stos
inc
arpl
xor
mov
or
mov
mov
ficom
std
ds
out
retf
popf
adc
arpl
inc
pop
mov
mov
add
cmps
mov
inc
je
iret
inc
je
iret
lahf
mov
mov
inc
je
iret
inc
je
iret
and
data16
push
in
ds
(bad)
enter
ds
jmp
aad
cmps
cli
inc
inc
aas
push
jmp
std
jecxz
jg
sub
test
jo
arpl
retf
loop
mov
mov
(bad)
(bad)
ds
std
ds
and
std
ds
aas
sahf
or
inc
mov
test
mov
inc
xor
dec
sahf
shl
inc
mov
(bad)
mov
mov
mov
mov
push
inc
mov
dec
arpl
in
ds
xchg
push
mov
outs
cmp
or
(bad)
test
dec
(bad)
cmps
addr16
ds
jecxz
retf
push
div
mov
push
inc
mov
mov
ficom
and
std
ds
cmp
inc
mov
dec
arpl
in
ds
std
ds
mov
mov
in
ds
xchg
std
ds
test
inc
mov
ror
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
ss
xchg
aas
sub
dec
inc
pop
and
pop
outs
int3
push
cli
pop
dec
aas
mov
std
es
sbb
aas
inc
cmp
dec
inc
pusha
and
mov
mov
jmp
aas
adc
cmp
pop
xor
mov
mov
out
dec
daa
sbb
(bad)
ds
cmp
ret
xor
cmp
and
inc
xor
xchg
icebp
stos
jl
inc
movs
jmp
dec
or
cmp
mov
jmp
cmp
pop
xor
mov
mov
out
dec
daa
retf
ds
inc
push
ret
xor
cmp
and
push
jno
arpl
dec
neg
std
jecxz
ds
out
test
sub
dec
inc
mov
daa
mov
xor
retf
push
test
dec
scas
aas
mov
dec
lea
pop
and
addr16
push
fwait
(bad)
ds
std
push
inc
mov
push
or
std
retf
add
or
cli
pop
dec
ds
std
daa
movs
cmc
(bad)
ds
xor
adc
std
ds
add
cmps
mov
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
mov
cmps
mov
std
mov
dec
loop
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
inc
mov
dec
cmps
mov
std
mov
push
loop
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
sub
jecxz
cmps
mov
std
mov
out
loope
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
out
inc
mov
dec
cmps
mov
std
mov
mov
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
mov
mov
dec
cmps
mov
std
mov
mov
std
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
cmp
jecxz
cmps
mov
std
mov
pop
loope
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
ret
jecxz
cmps
mov
std
mov
cs
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
xchg
jecxz
cmps
mov
std
mov
(bad)
loopne
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
add
cmps
sahf
out
ds
dec
daa
into
loopne
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
inc
sub
inc
aaa
movs
inc
inc
mov
dec
cmps
mov
std
mov
sahf
loopne
ds
xor
push
cmp
std
ds
push
aas
inc
je
iret
inc
je
iret
outs
mov
in
mov
push
xchg
or
mov
sahf
cld
and
jo
aas
mov
loope
aas
push
int3
push
int
out
ds
jl
xchg
loope
retf
push
test
cmp
addr16
fdivr
ds
inc
test
(bad)
cmps
mov
inc
aas
push
fsubr
xchg
pop
cmps
dec
inc
inc
aas
push
int3
mov
mov
mov
inc
aas
cmp
inc
arpl
repnz
mov
gs
(bad)
jecxz
(bad)
push
loopne
xchg
aad
aas
mov
add
call
push
aas
sub
dec
inc
fild
xor
mov
xor
pop
lds
aas
mov
mov
(bad)
(bad)
ds
(bad)
aas
mov
dec
cmps
mov
dec
out
xor
jecxz
push
ss
aas
inc
push
std
cmps
dec
inc
inc
aas
push
int3
sub
add
push
(bad)
ds
xchg
mov
sahf
stc
sub
retw
sub
pop
cmp
ds
int3
out
xchg
in
sar
jmp
pusha
mov
fsubrp
std
ds
jb
inc
mov
push
xchg
sahf
pop
inc
outs
dec
arpl
xor
daa
(bad)
jb
cmp
add
xor
adc
cmp
add
mov
inc
aaa
cmp
out
inc
in
sar
jmp
call
mov
inc
sub
pop
push
sbb
mov
out
loopne
std
retf
xchg
mov
jecxz
sar
test
mov
dec
mov
arpl
retf
dec
dec
mov
dec
cmp
push
ret
jae
inc
xor
push
inc
movs
ds
mov
mov
jecxz
test
xor
mov
std
(bad)
mov
mov
jbe
std
ds
cmp
or
mov
mov
dec
arpl
xor
int
out
ds
mov
inc
mov
test
mov
or
xchg
push
outs
int3
daa
(bad)
out
ds
xor
addr16
jno
cmps
mov
xor
aas
inc
push
inc
mov
mov
inc
mov
sub
jecxz
retf
add
es
inc
jb
inc
mov
in
push
out
leave
cmp
add
mov
push
arpl
xor
enter
mov
inc
adc
aas
mov
addr16
mov
jmp
xchg
inc
mov
addr16
or
mov
dec
mov
adc
out
test
pcmpgtd
push
sub
nop
mov
add
fidiv
jecxz
jecxz
mov
outs
mov
jecxz
retf
or
es
push
fcomp
adc
test
int3
cli
pop
es
inc
sub
aas
mov
out
push
out
leave
inc
mov
push
arpl
xor
aaa
push
sub
nop
mov
add
fidiv
jnp
jecxz
mov
outs
test
mov
jecxz
ds
stos
jae
inc
jb
inc
mov
addr16
or
jecxz
mov
pop
mov
les
aas
mov
out
add
enter
pop
bswap
cmp
(bad)
ds
(bad)
xchg
push
aad
ds
std
adc
mov
jb
inc
xor
mov
data16
mov
std
ds
push
inc
mov
addr16
or
mov
dec
mov
das
mov
in
addr16
push
adc
fsubrp
std
ds
push
cmps
cmps
in
ds
iret
push
retf
add
mov
(bad)
xchg
push
aad
ds
jmp
inc
mov
addr16
or
jecxz
mov
xor
or
nop
push
fcomp
adc
test
int3
cli
pop
es
inc
test
ds
out
add
std
leave
cmp
add
mov
mov
mov
pcmpgtd
push
sub
(bad)
mov
add
fidiv
(bad)
mov
std
nop
sahf
mov
inc
mov
bswap
cmp
(bad)
ds
(bad)
xchg
push
aad
ds
std
adc
jb
inc
mov
in
lahf
loop
retf
std
ds
mov
mov
outs
(bad)
loop
pop
shl
pop
inc
mov
dec
retf
pop
mov
dec
(bad)
test
dec
out
aas
mov
dec
mov
mov
fimul
data16
push
sub
nop
mov
add
fidiv
ret
mov
cmp
outs
int3
daa
(bad)
jecxz
ds
jecxz
adc
adc
jecxz
add
outs
sbb
or
(bad)
xchg
inc
aad
test
mov
dec
out
aas
mov
dec
mov
int3
inc
les
aas
mov
cmc
push
shl
inc
xchg
sahf
push
dec
inc
mov
cmp
(bad)
mov
repnz
inc
mov
mov
mov
dec
(bad)
cmps
cmps
in
ds
jecxz
ret
jno
inc
jp
inc
mov
addr16
and
gs
mov
std
nop
mov
xor
mov
add
mov
std
ds
jecxz
xor
push
inc
mov
mov
mov
(bad)
daa
ins
xor
aas
or
jecxz
es
xor
aas
cmp
push
mov
std
test
dec
(bad)
cmps
cmps
in
ds
jecxz
les
add
mov
jb
inc
mov
in
add
std
xchg
push
cmp
aas
mov
int3
daa
movs
das
add
inc
lods
out
add
std
leave
inc
or
aas
mov
(bad)
test
dec
out
aas
mov
dec
mov
inc
outs
clc
sti
xchg
loope
aas
push
jno
dec
mov
std
es
add
inc
jp
inc
mov
addr16
and
gs
mov
std
nop
mov
xor
std
jecxz
inc
outs
aam
xchg
in
ds
loop
inc
mov
pop
inc
mov
mov
mov
ds
and
addr16
push
aam
ds
std
adc
mov
cmp
std
ds
sub
cdq
xor
aas
or
jecxz
or
mov
(bad)
daa
test
add
adc
je
iret
inc
je
iret
or
jb
mov
outs
(bad)
neg
lods
sub
lods
int
cmp
add
cmovno
std
ds
cmc
cmp
and
fidivr
jl
sub
mov
push
or
jecxz
ds
out
test
inc
rol
push
cmps
(bad)
loope
aas
push
jecxz
inc
or
inc
jp
pop
popf
js
std
into
inc
je
iret
inc
je
iret
and
data16
imul
(bad)
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
outs
out
enter
int3
add
push
push
cli
pop
adc
mov
std
pop
out
inc
mov
in
loop
std
leave
or
push
xchg
sahf
aad
inc
mov
or
jp
fstp
inc
aas
xchg
(bad)
hlt
add
adc
mov
adc
cli
pop
push
(bad)
sahf
lods
adc
mov
inc
jp
in
ret
in
retf
add
push
enter
aas
mov
mov
push
out
ds
pop
sub
outs
push
arpl
in
sbb
sub
mov
ret
add
mov
jecxz
pop
lods
test
mov
rol
sub
(bad)
sub
outs
inc
arpl
in
sbb
sub
mov
ret
sti
or
jo
arpl
jecxz
pop
mov
mov
in
loop
std
leave
or
push
xchg
sahf
sub
inc
mov
or
jp
fstp
inc
aas
xchg
(bad)
hlt
add
adc
mov
adc
cli
pop
push
(bad)
sahf
add
inc
mov
or
jp
in
ret
retf
add
push
enter
aas
mov
mov
loop
std
ds
scas
sub
outs
push
arpl
in
sbb
sub
mov
ret
add
mov
jecxz
pop
lods
test
mov
rol
sub
(bad)
sub
outs
inc
arpl
in
sbb
sub
mov
ret
dec
or
outs
cmp
or
inc
cmp
add
mov
mov
mov
dec
(bad)
cmps
std
in
ds
jecxz
les
add
iret
adc
dec
js
aas
mov
(bad)
test
dec
inc
inc
mov
dec
lea
btc
std
retf
cli
pop
push
pop
mov
jnp
in
leave
add
push
nop
sahf
daa
adc
retw
fdivr
mov
mov
call
inc
or
sub
jecxz
add
jecxz
retf
cli
pop
push
pop
inc
inc
mov
in
loope
std
leave
add
push
nop
sahf
jmp
inc
mov
ret
movs
jnp
jmp
cmp
inc
or
lock
mov
add
ins
test
jecxz
retf
cli
pop
push
pop
cmp
jecxz
pop
loopne
std
leave
add
push
nop
sahf
mov
inc
mov
ret
fdivr
mov
mov
call
inc
or
mov
mov
add
ins
test
mov
sbb
aas
mov
(bad)
test
dec
out
aas
mov
dec
lea
mov
ja
xchg
pop
mov
rol
mov
mov
xchg
out
ds
dec
sub
outs
test
mov
std
test
dec
(bad)
cmps
cmps
in
ds
jecxz
jb
test
mov
aas
mov
push
mov
in
aas
push
aam
ds
std
push
jmp
repnz
add
jb
inc
mov
mov
shl
std
ds
addr16
push
sub
ds
std
push
cmp
push
inc
push
inc
mov
addr16
and
xchg
mov
std
ds
jb
inc
mov
addr16
and
gs
mov
std
(bad)
mov
xor
cmp
add
mov
sub
dec
or
aas
mov
(bad)
test
dec
out
aas
mov
dec
lea
inc
sub
(bad)
lds
jecxz
mov
jmp
std
ds
sub
inc
inc
jb
inc
mov
dec
daa
push
or
and
int3
movs
dec
mov
add
data16
mov
mov
std
sub
outs
push
arpl
in
sar
lds
push
inc
mov
addr16
and
gs
mov
std
mov
push
inc
int3
add
push
nop
inc
jb
inc
mov
in
(bad)
std
leave
or
push
xchg
sahf
aaa
push
inc
mov
ret
fdivr
mov
mov
xchg
scas
jmp
mov
jmp
enter
aas
mov
or
cmp
add
mov
std
ds
mov
mov
(bad)
cmps
std
in
ds
jecxz
ret
jb
inc
jp
inc
mov
mov
mov
std
ds
call
add
mov
or
inc
loopne
aas
mov
mov
pushf
mov
int3
pop
ror
test
dec
out
aas
mov
dec
lea
inc
sub
(bad)
(bad)
std
ds
std
mov
jecxz
leave
test
arpl
ror
test
dec
out
aas
mov
dec
lea
inc
sub
(bad)
(bad)
std
ds
std
mov
jmp
int
jmp
imul
mov
sub
(bad)
cmp
add
mov
test
jecxz
es
(bad)
aas
push
inc
mov
mov
mov
dec
arpl
loop
ds
mov
jecxz
mov
out
pop
popf
sbb
aas
mov
std
sar
iret
inc
je
iret
inc
je
iret
pop
rol
retf
in
inc
mov
mov
aas
xor
aas
xchg
sub
aas
xchg
push
and
add
mov
jecxz
pop
lods
test
retf
mul
jno
inc
movs
push
add
mov
pop
rol
retf
mov
pop
aas
xor
aas
xchg
sub
aas
xchg
push
and
add
pop
lods
test
retf
mul
jno
inc
movs
push
add
mov
inc
xor
dec
inc
sub
dec
icebp
stos
jae
xchg
sub
inc
jns
add
sub
xchg
fld
dec
cmp
loop
int3
push
dec
inc
aas
(bad)
data16
adc
jecxz
arpl
pusha
xor
add
ret
mov
pop
xchg
sub
inc
xchg
icebp
or
sbb
rol
mov
inc
xchg
mov
(bad)
inc
aas
jns
mov
dec
cmp
loop
les
inc
aas
xchg
mov
(bad)
inc
aas
jns
(bad)
sbb
pop
add
ret
fistp
pop
xchg
sub
inc
xchg
icebp
in
(bad)
jecxz
xchg
fadd
dec
cmp
loop
les
inc
aas
xchg
mov
(bad)
inc
aas
jns
(bad)
sbb
pop
add
ret
retf
sahf
test
sub
inc
xchg
icebp
fstp
cld
jecxz
xchg
fadd
mov
jecxz
les
inc
aas
xchg
mov
(bad)
inc
aas
jns
(bad)
sbb
pop
add
ret
mov
test
sub
inc
xchg
icebp
(bad)
jecxz
xchg
fadd
mov
loop
les
inc
aas
xchg
mov
(bad)
inc
aas
jns
(bad)
sbb
pop
add
ret
fwait
sahf
test
sub
inc
xchg
icebp
lods
(bad)
jecxz
iret
inc
dec
inc
aas
jge
inc
aas
mov
inc
aas
jmp
dec
inc
aas
cmovp
sbb
inc
aas
sub
aas
ss
inc
aas
cmovp
arpl
aas
jo
inc
aas
push
dec
inc
aas
push
dec
inc
aas
sbb
inc
aas
fwait
dec
inc
aas
test
inc
aas
mov
aas
iret
dec
inc
aas
ret
aas
sbb
inc
aas
fmul
aas
ret
aas
add
aas
test
adc
aas
sbb
inc
aas
test
inc
je
iret
inc
je
iret
or
ret
sub
sub
push
retf
dec
test
mov
inc
arpl
loop
sbb
pop
push
test
fiadd
fistp
aas
sub
dec
and
sbb
push
sbb
or
sbb
or
sbb
pop
and
or
lea
arpl
dec
outs
sbb
pop
push
xchg
xchg
pop
and
inc
and
mov
addr16
sub
pop
or
jb
faddp
pop
arpl
loop
enter
test
(bad)
cmp
mov
sti
ficomp
aas
sub
pop
and
fadd
sub
es
or
lea
arpl
outs
inc
arpl
mov
dec
arpl
dec
add
(bad)
dec
sbb
or
sbb
or
sbb
or
daa
es
ds
inc
and
test
daa
mov
pop
or
or
xor
mov
xor
std
ds
inc
and
test
daa
xchg
loopne
ds
xor
mov
push
retf
inc
test
or
daa
fsubp
std
ds
inc
and
test
daa
mov
inc
sbb
add
ss
mov
xor
mov
inc
and
test
daa
jle
std
ds
sub
jg
dec
and
jp
fldenv
and
sub
ins
add
pop
out
mov
std
sbb
or
ret
in
mov
std
retf
mov
and
xchg
sub
outs
or
lock
std
sbb
or
ret
in
mov
std
retf
add
int3
outs
add
outs
inc
arpl
mov
outs
inc
pop
inc
sti
pop
retf
dec
add
sub
(bad)
mov
cmps
mov
cmp
push
xchg
inc
pop
and
out
or
jmp
or
mov
mov
outs
dec
test
outs
dec
arpl
pop
push
mov
sbb
dec
pop
std
xchg
(bad)
outs
adc
mov
inc
arpl
mov
xchg
out
dec
dec
add
push
test
sahf
retf
mov
inc
arpl
outs
dec
arpl
outs
adc
push
int3
add
mov
mov
mov
mov
xchg
add
add
je
iret
inc
in
lahf
push
je
iret
inc
je
iret
inc
je
iret
and
popw
imul
(bad)
mov
mov
(bad)
enter
ds
jmp
or
daa
jl
add
inc
sub
dec
inc
xor
pop
push
stos
and
std
ds
std
ds
inc
fs
mov
or
test
out
in
and
std
retf
add
push
add
pop
jno
arpl
retf
sbb
(bad)
mov
(bad)
mov
inc
sub
pop
loope
sub
push
add
dec
xchg
inc
cmp
jae
ss
push
xchg
xor
aas
or
dec
arpl
retf
out
mov
jmp
repnz
jecxz
mov
jmp
sbb
add
mov
aas
inc
xor
pop
jge
and
sahf
sub
outs
dec
arpl
inc
pop
mov
mov
add
cmps
mov
cmp
push
xchg
inc
aad
mov
in
cmps
adc
std
ds
mov
cmps
mul
std
ret
jbe
push
retf
mov
mov
in
xchg
cld
jecxz
sbb
mov
mov
jo
arpl
out
test
outs
dec
arpl
outs
push
arpl
mov
stos
push
arpl
push
iret
enter
xchg
push
xor
std
ds
movs
aas
inc
mov
add
inc
je
iret
inc
je
iret
or
out
retf
add
mov
push
sub
jecxz
jmp
or
pop
sahf
dec
(bad)
cmp
sub
mov
xchg
std
ds
sbb
aas
mov
mov
jecxz
test
dec
jmp
mov
mov
xchg
std
ds
dec
inc
inc
mov
ror
je
iret
inc
je
iret
or
out
retf
add
mov
add
jecxz
jmp
sti
mov
sahf
sti
(bad)
cmp
sub
mov
xchg
std
ds
retf
add
mov
mov
mov
and
mov
inc
je
iret
inc
je
iret
or
scas
(bad)
jecxz
add
mov
std
ds
(bad)
aas
mov
mov
mov
int3
daa
lods
and
mov
inc
je
iret
inc
je
iret
or
scas
(bad)
jecxz
add
mov
std
ds
ss
mov
mov
int3
daa
jl
add
adc
mov
inc
je
iret
inc
je
iret
or
scas
(bad)
jecxz
add
mov
std
ds
(bad)
test
outs
int3
daa
call
(bad)
mul
std
pushf
jns
mov
inc
je
iret
inc
je
iret
or
scas
(bad)
jecxz
add
mov
std
ds
jmp
push
std
ds
mov
cmps
mul
std
pushf
jns
mov
inc
je
iret
inc
je
iret
or
scas
(bad)
jecxz
leave
test
inc
dec
mov
mov
mov
ror
je
iret
inc
je
iret
or
scas
(bad)
jecxz
leave
test
xor
jecxz
or
mov
ror
je
iret
inc
je
iret
and
inc
imul
(bad)
mov
mov
(bad)
enter
ds
jmp
aad
aas
inc
xor
inc
sahf
fwait
cmp
mov
les
mov
or
aas
mov
std
ds
mov
mov
std
aas
mov
std
es
std
ds
xor
inc
aas
push
std
es
(bad)
ds
push
xchg
in
ds
mov
(bad)
sahf
mov
int3
daa
pop
and
aas
inc
jo
(bad)
or
aas
mov
(bad)
ds
in
xor
std
retf
add
pop
add
mov
(bad)
es
popa
add
inc
xor
inc
jge
and
mov
std
cmp
xchg
in
(bad)
ds
jo
and
ins
or
mov
std
mov
mov
mov
inc
je
iret
and
data16
imul
(bad)
mov
mov
(bad)
enter
ds
push
retf
jb
mov
jecxz
add
mov
std
es
pop
add
inc
xor
cli
pop
push
aas
sahf
pop
jnp
mov
int3
push
cli
pop
push
ds
std
daa
das
in
(bad)
ds
xor
inc
adc
xchg
std
cmp
mov
cmp
xor
je
add
mov
int
jb
std
ds
outs
int
pop
out
std
div
mov
mov
dec
cld
jecxz
add
jo
arpl
retf
outs
jge
jecxz
popf
cmp
mov
inc
je
iret
inc
je
iret
or
out
daa
jb
(bad)
ds
std
mov
out
mov
leave
test
xor
mov
xor
adc
add
or
out
daa
push
clc
(bad)
ds
sub
jbe
or
test
movs
inc
mov
mov
mov
ror
mov
inc
je
iret
inc
je
iret
cmp
push
xchg
inc
aad
retf
out
lahf
loop
retf
std
enter
dec
cmp
(bad)
ds
push
retf
mov
inc
data16
xor
cmp
or
push
mov
mov
sahf
(bad)
imul
pop
push
push
cld
sub
inc
mov
les
mov
add
jecxz
add
mov
inc
mov
cld
aas
xchg
add
mov
add
mov
pop
jno
(bad)
lea
aaa
mov
sahf
and
ds
inc
arpl
retw
jecxz
add
dec
mov
inc
dec
or
sub
inc
repz
inc
inc
push
xor
mov
std
imul
xor
mov
add
cmp
(bad)
ds
or
mov
mov
mov
dec
jg
dec
cld
ds
inc
pop
and
addr16
push
jecxz
aas
or
(bad)
fwait
adc
ret
ror
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
jmp
pop
or
add
dec
nop
mov
add
xor
pop
sahf
jno
inc
mov
test
mov
std
retf
or
sbb
fisub
(bad)
ds
in
scas
jecxz
retf
mov
cmp
xchg
(bad)
xchg
add
push
daa
xor
aas
inc
xor
inc
inc
sub
push
inc
cmp
dec
loope
add
outs
ins
xchg
ds
inc
xchg
push
int
int3
cli
in
(bad)
jno
imul
(bad)
and
addr16
sahf
out
inc
mov
dec
arpl
outs
inc
arpl
outs
push
arpl
pushf
xchg
ds
cmc
sub
fiadd
retf
(bad)
call
in
inc
jg
mov
movs
mov
mov
les
jecxz
inc
and
addr16
inc
mov
mov
mov
(bad)
test
outs
int3
daa
or
add
inc
xor
pop
jge
and
jecxz
ds
jmp
mov
dec
arpl
inc
(bad)
enter
ds
ret
je
iret
inc
je
iret
or
out
retf
push
retf
(bad)
ds
mov
ds
cmp
shl
mov
mov
call
ds
add
jle
std
ds
mov
lds
ja
ds
push
pop
and
addr16
or
adc
or
(bad)
pushf
js
std
into
and
xchg
imul
(bad)
mov
mov
(bad)
enter
ds
jmp
jo
arpl
retf
sbb
mov
pop
push
cmps
sahf
out
ds
stos
inc
arpl
jecxz
ds
fdiv
mov
mov
cmp
xchg
(bad)
add
mov
std
pop
and
sub
dec
sahf
jmp
inc
mov
inc
pop
inc
cmp
dec
or
aas
inc
sub
push
inc
cmp
dec
loope
mov
jno
mov
xchg
out
xor
push
retf
or
jle
inc
arpl
push
ror
arpl
mov
lods
pusha
and
pusha
and
xor
ds
sub
cmp
xor
mov
rep
(bad)
ds
add
jle
std
ds
mov
lds
xchg
ds
dec
pop
and
addr16
pop
jecxz
aas
or
dec
add
sbb
cli
pop
ss
std
daa
outs
inc
add
inc
xor
outs
adc
xchg
std
cmp
(bad)
iret
cmp
push
xchg
or
mov
and
in
fsubp
std
leave
cmps
jno
arpl
jo
arpl
xor
mov
int
xchg
int3
das
push
(bad)
mov
mov
push
mov
mov
out
mov
mov
sub
dec
cmp
add
mov
call
mov
inc
lods
jp
inc
mov
adc
mov
mov
out
das
icebp
shl
in
test
dec
add
inc
cmp
test
mov
std
xchg
cld
jecxz
popf
adc
inc
js
std
into
pushf
push
inc
aas
lahf
push
inc
aas
mov
push
inc
aas
lods
push
inc
aas
lods
push
inc
aas
nop
push
inc
aas
xchg
push
inc
aas
inc
je
iret
cmp
push
xchg
or
mov
and
in
fsubp
std
leave
cmps
jno
arpl
jo
arpl
xor
mov
int
xchg
int3
outs
addr16
sti
mov
mov
push
mov
mov
out
mov
mov
sub
dec
cmp
add
mov
call
mov
inc
lods
jp
inc
mov
adc
mov
mov
out
das
icebp
shl
in
test
or
aas
inc
cmp
test
mov
std
xchg
cld
jecxz
popf
adc
inc
js
std
into
pop
push
inc
aas
pop
push
inc
aas
bound
aas
addr16
inc
aas
ins
push
inc
aas
ins
push
inc
aas
push
push
inc
aas
push
push
inc
aas
inc
je
iret
sbb
addr16
mov
test
jecxz
ds
jmp
outs
out
xchg
inc
xor
daa
outs
enter
int3
xor
icebp
ror
or
mov
fisubr
ds
(bad)
lahf
mov
in
ds
mov
std
mov
jno
arpl
std
ds
int3
xor
outs
retf
daa
(bad)
call
(bad)
sbb
sti
push
retf
inc
div
add
std
push
stc
enter
mov
inc
mov
sub
loop
retf
idiv
sub
cmp
pop
sub
add
push
retf
(bad)
ds
(bad)
mov
(bad)
outs
test
mov
std
nop
and
ds
dec
push
test
loop
inc
outs
dec
(bad)
ds
test
mov
std
test
jo
mov
xchg
out
ss
rep
int
in
ds
sub
cmps
outs
add
add
int
inc
xchg
enter
daa
sub
add
inc
fsubr
ja
add
outs
int3
ss
mov
daa
push
or
aas
inc
lods
mov
mov
mov
and
mov
std
(bad)
xor
bound
mov
xor
int3
cli
pop
jb
pop
jecxz
inc
or
dec
cmp
mov
mov
mov
or
aas
inc
xor
cli
pop
jp
or
jb
ja
rcr
movs
iret
aaa
cmp
xor
jecxz
xchg
fiadd
pop
aas
xor
pop
inc
xor
ja
xchg
fidivr
xchg
add
push
pop
stos
inc
arpl
adc
adc
or
(bad)
test
jo
arpl
in
ds
xchg
push
inc
mov
dec
inc
or
loop
out
leave
or
push
retf
sbb
add
push
xchg
inc
cmp
push
push
outs
and
std
ds
ss
ds
aas
dec
test
or
daa
rol
inc
sub
pop
inc
xor
push
inc
cmp
pop
aas
sub
addr16
pusha
and
movs
sbb
cli
pop
cs
cli
pop
xor
ja
add
jbe
dec
arpl
outs
mov
in
fldcw
inc
aas
push
jno
arpl
ins
push
arpl
xor
lea
arpl
outs
push
arpl
ins
inc
arpl
mov
sub
imul
pop
cmp
sbb
mov
aas
cmp
addr16
cmp
ja
mov
and
inc
js
(bad)
mov
std
mov
ss
push
inc
push
aas
mov
cmp
outs
sbb
jecxz
int
in
call
mov
ds
adc
push
aas
mov
mov
inc
lock
retf
xchg
fiadd
mov
outs
inc
xchg
mov
or
retf
mov
inc
push
outs
inc
and
xchg
(bad)
xchg
inc
push
push
and
xchg
fidivr
xchg
fidiv
ds
retf
pop
mov
sbb
dec
enter
push
ins
dec
arpl
ins
pop
arpl
ins
pop
arpl
outs
sbb
mov
arpl
xor
inc
aas
cmp
ds
cmp
xchg
inc
xor
xchg
outs
out
ds
inc
arpl
jecxz
ds
int
jle
push
arpl
ins
dec
arpl
stos
inc
arpl
pop
mov
arpl
stos
and
std
ds
xor
aas
push
jno
arpl
retf
into
popf
mov
pop
mov
fisub
ds
out
(bad)
std
leave
add
and
or
es
retf
mov
mov
mov
push
xor
std
adc
and
js
ret
mov
std
mov
ss
cmps
jecxz
retf
xchg
aas
mov
add
jo
arpl
dec
dec
pop
sub
leave
add
out
xchg
loop
retf
push
les
sar
mov
test
mov
std
mov
movs
jae
cmp
(bad)
mov
outs
test
mov
std
ret
jbe
add
cli
pop
bound
mov
sub
scas
inc
xor
xchg
fild
dec
or
pop
and
repnz
std
retf
(bad)
ds
dec
int3
cmp
mov
mov
dec
daa
out
std
cmp
cmp
jecxz
aas
sahf
dec
push
inc
mov
dec
arpl
outs
push
mov
jno
arpl
xor
(bad)
ds
dec
retf
out
repnz
retf
push
daa
sahf
ret
cld
ds
and
xchg
inc
aas
inc
xor
jnp
push
std
inc
sahf
in
inc
mov
inc
arpl
sub
arpl
test
std
ds
jecxz
retf
fisub
ds
and
std
ds
std
ds
(bad)
pop
inc
mov
mov
fidiv
pop
pushf
sbb
aas
mov
std
mov
mov
mov
inc
je
iret
inc
sar
mov
ror
je
iret
inc
je
iret
inc
fidivr
mov
ror
je
iret
inc
je
iret
inc
sar
mov
inc
(bad)
sahf
idiv
ds
mov
inc
sar
mov
cmp
ds
mov
inc
sub
inc
or
out
jb
imul
sbb
stos
jnp
inc
movs
cmp
and
lds
sbb
adc
fdivr
ds
addr16
and
mov
mov
jmp
test
mov
xchg
ror
test
xor
inc
aas
adc
add
inc
je
iret
inc
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
push
xchg
inc
aad
enter
daa
movs
jmp
bound
cli
pop
push
aas
mov
std
add
mov
les
xchg
inc
aas
inc
sub
imul
arpl
and
sub
retf
add
pop
sub
mov
std
ds
push
int3
or
les
shr
aas
cs
(bad)
jmp
mov
xor
jg
es
cli
pop
inc
(bad)
aas
xor
cld
inc
std
push
mov
outs
int
enter
inc
cmp
addr16
sub
pop
or
cmps
cli
jecxz
pop
out
daa
out
ret
jbe
addr16
cmp
sar
add
inc
xor
retf
push
test
adc
enter
adc
pusha
and
jecxz
inc
or
push
add
inc
mov
fdiv
or
inc
sub
or
outs
push
pop
and
cmc
adc
xor
lock
std
nop
mov
mov
mov
mov
mov
dec
mov
daa
adc
add
inc
xor
dec
inc
stos
pop
popf
adc
dec
mov
std
cmp
(bad)
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
into
jecxz
lods
sub
inc
mov
pop
xchg
sahf
pop
jmp
stos
pop
add
jecxz
pop
imul
(bad)
mov
mov
(bad)
enter
ds
jmp
or
push
mov
outs
inc
xchg
jge
and
jecxz
ds
jecxz
stos
push
sub
retf
add
xchg
(bad)
xchg
inc
aas
jl
and
retf
push
call
and
jecxz
ds
push
outs
inc
mov
dec
arpl
inc
(bad)
enter
ds
ret
je
iret
outs
in
mov
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
neg
aad
dec
inc
sub
push
cld
daa
(bad)
ds
dec
sub
data16
push
mov
adc
les
sbb
add
dec
ds
cmps
push
test
in
leave
jle
push
jno
jecxz
add
jecxz
or
mov
ror
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
adc
(bad)
cmp
inc
in
add
aas
mov
pop
add
jecxz
iret
inc
je
iret
or
out
daa
repnz
mov
call
mov
inc
je
iret
inc
je
iret
and
data16
clc
sub
mov
mov
(bad)
enter
ds
jmp
jno
arpl
cmp
inc
or
dec
or
mov
inc
aas
or
ror
mov
dec
pop
inc
xor
ja
ss
push
inc
sub
xchg
dec
daa
mov
add
inc
xor
nop
mov
dec
daa
por
ds
cmp
xchg
push
daa
cmp
aas
or
dec
arpl
int3
push
xchg
mov
dec
(bad)
test
dec
das
(bad)
jge
and
mov
std
ds
std
cmp
mov
out
(bad)
std
mov
and
mov
push
arpl
jno
arpl
mov
dec
xchg
push
adc
xchg
stc
ins
nop
cld
jecxz
int3
add
pop
daa
push
xor
pop
aas
push
and
call
inc
arpl
push
ror
or
push
jge
cmp
test
inc
aas
sub
push
push
xor
xchg
jo
arpl
test
dec
retf
jnp
mov
push
or
xor
aas
xor
dec
aas
push
and
sti
jge
ret
pop
add
rcr
or
adc
cli
pop
push
xchg
push
mov
mov
(bad)
push
(bad)
retf
mov
mov
arpl
pop
sub
mov
js
jb
std
and
stos
(bad)
inc
add
retf
mov
fld
mov
sti
jns
mov
sub
pop
ficomp
mov
push
(bad)
push
sbb
add
cli
pop
push
push
iret
adc
or
mov
(bad)
ins
add
mov
sub
adc
in
cld
sbb
out
mov
std
retf
push
retf
push
arpl
movs
jp
inc
movs
mov
sub
pop
lds
push
xchg
movs
add
nop
addr16
jp
movs
mov
fisubr
inc
icebp
mov
stos
fimul
mov
out
pop
dec
aas
inc
and
out
add
dec
retf
add
aas
sub
outs
icebp
mov
mov
ficom
cmp
std
mov
push
and
mov
aas
mov
std
inc
mov
xchg
(bad)
inc
(bad)
pop
es
inc
jp
bound
retf
inc
arpl
push
iret
retf
sub
pushf
(bad)
ds
or
jbe
and
aas
sub
imul
xchg
and
ss
push
stos
cmp
movs
jae
inc
xor
jae
sub
imul
outs
loope
push
arpl
push
iret
xchg
push
xor
sub
mov
dec
arpl
test
in
mov
or
cli
pop
jb
mov
std
daa
out
add
inc
xor
stos
adc
ins
or
mov
std
sar
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
test
jb
cmp
sbb
sub
in
mov
int3
cld
cmp
jecxz
iret
inc
je
iret
inc
je
iret
or
jb
mov
jecxz
ds
push
jl
in
ds
cmp
jecxz
mov
cmp
lods
ret
in
pushf
js
std
xchg
mov
test
ds
stos
push
test
jecxz
add
out
std
ds
mov
inc
je
iret
inc
je
iret
sbb
addr16
cld
aas
test
jecxz
ds
jmp
sub
xchg
inc
aad
test
push
(bad)
ds
dec
inc
(bad)
jecxz
sbb
mov
fimul
(bad)
ds
dec
retf
fisttp
xor
out
call
enter
xchg
inc
mov
(bad)
add
mov
(bad)
mov
shr
pop
cmp
ds
xchg
fiadd
jae
inc
sub
(bad)
mov
rcl
(bad)
ds
fadd
or
mov
push
pop
inc
xor
dec
pop
xor
lea
jecxz
int3
add
or
cli
pop
cs
std
daa
jno
(bad)
ds
in
aas
and
dec
mov
arpl
inc
pop
mov
mov
add
cmps
mov
inc
je
iret
inc
je
iret
or
out
xchg
inc
pusha
and
xor
mov
xor
retf
mov
outs
int
or
test
inc
cmp
pop
add
mov
movs
push
aas
sahf
add
mov
add
inc
je
iret
inc
je
iret
and
data16
(bad)
mov
mov
(bad)
enter
ds
mov
inc
aad
cmps
and
std
ds
pop
and
or
inc
mov
jl
jge
and
jecxz
ds
mov
add
mov
xlat
mov
std
add
pop
adc
mov
jmp
ret
outs
or
inc
(bad)
(bad)
ds
dec
arpl
stos
add
pop
sub
leave
jl
pop
mov
mov
add
movs
add
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
outs
sbb
and
push
pop
xchg
sahf
cld
jecxz
mov
ret
stos
pop
add
outs
out
xchg
inc
pusha
and
sub
push
dec
add
mov
out
sbb
std
mov
mov
data16
mov
sub
inc
pop
add
ins
mov
iret
inc
je
iret
inc
je
iret
sbb
addr16
jbe
test
jecxz
ds
jmp
cmp
cmps
int3
jne
mov
xor
adc
lds
fdivr
mov
dec
add
test
int
mov
in
ds
in
mov
mov
stc
fst
in
ds
mov
(bad)
popf
in
leave
inc
mov
mov
retf
fiadd
(bad)
daa
mov
cld
ds
scas
xchg
fimul
(bad)
ds
cmp
jecxz
add
icebp
dec
int3
inc
or
mov
loop
retf
(bad)
ds
(bad)
enter
jp
ins
dec
arpl
stos
inc
arpl
clc
std
ds
dec
arpl
stos
inc
arpl
inc
std
xchg
ins
dec
arpl
pop
add
cli
pop
pop
retf
add
(bad)
outs
and
std
ds
and
jecxz
aas
cmp
push
jp
std
ds
dec
div
jecxz
movs
aas
sub
lahf
inc
push
std
mov
and
sbb
xchg
in
mov
and
push
std
inc
sahf
add
inc
mov
dec
arpl
test
std
ds
pop
es
call
xchg
ins
push
sbb
dec
daa
mov
mov
sahf
cmps
mov
mov
ret
enter
mov
dec
sbb
std
jecxz
push
sahf
adc
inc
mov
std
retf
sti
aaa
mov
out
mov
or
add
push
pop
jno
arpl
std
ds
jo
(bad)
mov
std
nop
pop
jno
arpl
in
ds
jo
jmp
jecxz
nop
pop
jno
arpl
std
ds
jo
iret
mov
std
nop
pop
xor
nop
call
aas
mov
mov
fidiv
mov
ds
js
adc
or
aas
mov
sub
loope
mov
fidiv
ds
clc
jb
addr16
fadd
sbb
xchg
fisubr
add
mov
mov
fiadd
dec
xchg
or
add
mov
add
scas
lahf
cld
ds
scas
out
pop
loop
jb
ins
inc
arpl
push
mov
enter
mov
into
xor
or
outs
dec
arpl
out
retf
push
enter
retf
push
jg
movs
xchg
inc
jo
jecxz
jecxz
adc
cmp
scas
loop
pop
out
dec
and
stc
mov
sbb
std
push
push
aaa
inc
aas
inc
lods
cmp
sbb
std
ds
and
pop
mov
lock
xchg
ins
dec
arpl
jo
arpl
ins
and
std
ds
rol
mov
inc
arpl
jo
arpl
xor
ret
ficom
(bad)
ds
in
cld
in
cmps
sahf
out
ds
xor
imul
ds
out
mov
dec
enter
daa
sahf
enter
sub
ja
test
int3
or
push
xchg
push
jecxz
xchg
sub
shr
cld
xchg
jecxz
es
and
mov
mov
dec
arpl
test
std
ds
jecxz
sbb
cmp
in
dec
daa
cmp
(bad)
cmp
push
add
mov
std
es
jo
jecxz
jecxz
add
mov
cld
ds
out
ja
std
retf
jmp
mov
mov
fiadd
push
arpl
outs
call
sub
stos
inc
nop
and
mov
std
mov
mov
fisub
ds
ror
push
or
adc
and
fimul
retf
enter
aas
mov
mov
aas
push
std
imul
or
xchg
(bad)
mov
ficomp
(bad)
(bad)
ds
xchg
ficomp
(bad)
ds
mov
cmp
(bad)
ds
mov
mov
or
jb
pop
lds
mov
aas
mov
dec
arpl
ins
jp
repnz
dec
arpl
outs
push
arpl
outs
dec
arpl
and
and
or
pop
dec
push
enter
xor
std
leave
cli
pop
ss
mov
fsub
std
leave
add
mov
inc
aas
pop
jecxz
retf
sahf
aas
mov
mov
sbb
aas
inc
jb
aas
mov
addr16
push
dec
add
jecxz
ds
mov
xchg
repz
std
nop
mov
lahf
inc
sub
stc
mov
std
ds
cmps
or
ds
sub
imul
adc
jbe
mov
mov
out
ds
xor
imul
add
mov
out
cwde
jecxz
ret
mov
fisubr
ds
std
push
xchg
cmp
mov
and
std
lds
aas
mov
mov
fisubr
ds
mov
in
ds
(bad)
inc
mov
xchg
fidiv
jb
inc
sub
outs
inc
cmp
(bad)
and
dec
(bad)
mov
pop
nop
cld
jecxz
int3
add
sub
mov
mov
ret
arpl
dec
call
pop
sub
leave
add
ds
cmp
outs
sbb
add
mov
cli
sub
cmp
mov
jb
inc
js
cmp
arpl
retf
cmp
jecxz
inc
jmp
and
xchg
fimul
dec
retf
pop
nop
inc
xor
fwait
push
xor
std
ds
les
jecxz
mov
mov
jno
push
int3
add
mov
inc
arpl
dec
out
mov
dec
daa
mov
test
retf
mov
mov
push
int3
dec
or
retf
(bad)
ds
inc
arpl
xor
std
ds
std
ds
dec
arpl
xor
push
repnz
aas
cmp
ds
and
xchg
cld
jecxz
aas
and
addr16
inc
js
push
mov
std
test
xor
jb
and
addr16
inc
push
std
test
xor
push
jp
inc
aas
inc
jo
inc
mov
std
(bad)
mov
test
rcr
jmp
ds
std
push
jle
inc
aas
out
add
ret
daa
in
ds
addr16
and
mov
(bad)
(bad)
ds
dec
sub
mov
(bad)
mov
mov
fild
mov
pop
or
mov
sub
retf
inc
(bad)
(bad)
ds
call
mov
cmovg
retf
and
mov
std
retf
stos
xor
test
xchg
jo
div
ins
push
arpl
ins
jp
(bad)
mov
jecxz
retf
sub
cld
jecxz
aas
inc
mov
scas
test
or
add
mov
add
add
(bad)
ds
xor
addr16
and
jecxz
inc
sahf
mov
inc
arpl
push
out
xchg
in
sar
mov
repz
ret
fimul
(bad)
ds
in
xchg
in
retf
inc
or
ret
fimul
(bad)
ds
std
ds
mov
mov
mov
mov
std
leave
inc
or
inc
mov
pop
popf
adc
(bad)
enter
ds
ret
jecxz
add
and
jecxz
jg
sub
retf
add
sbb
mov
add
jge
(bad)
ds
xor
addr16
and
jecxz
inc
sahf
pop
inc
inc
mov
inc
arpl
push
pop
cmps
mov
inc
aas
inc
jb
aas
mov
in
xchg
in
leave
cli
pop
sub
cld
jecxz
ds
mov
fld
outs
dec
arpl
xor
push
div
aas
inc
xor
pop
jl
and
jecxz
inc
sahf
dec
fiadd
jo
arpl
test
std
ds
jecxz
sbb
cmp
in
dec
daa
imul
cmp
push
add
mov
std
es
ret
(bad)
ds
jo
jecxz
jecxz
add
mov
cld
ds
out
jb
std
retf
sbb
mov
mov
inc
je
iret
jge
mov
ds
out
mov
std
into
jge
mov
ds
out
test
in
jmp
jmp
daa
pop
sar
xcrypt-ecb
cmps
mov
or
out
daa
mov
sub
inc
mov
pop
xchg
sahf
sbb
inc
mov
ret
stos
pop
add
outs
out
daa
out
in
lods
sub
inc
mov
pop
xchg
sahf
cld
fiadd
retw
stos
pop
add
jecxz
daa
clc
sub
mov
mov
(bad)
enter
ds
push
xchg
or
out
xchg
aas
pop
and
adc
inc
mov
dec
inc
(bad)
jecxz
mov
adc
sbb
mov
sub
retf
and
xchg
jecxz
add
mov
mov
mov
std
add
mov
xchg
test
jecxz
add
pop
sbb
xlat
retf
outs
int3
add
jge
test
cld
jecxz
int3
mov
std
leave
cli
pop
sub
cmp
(bad)
ds
test
mov
std
leave
cli
pop
cs
pop
add
iret
add
idiv
mov
mov
std
cmp
mov
imul
dec
xchg
in
leave
xor
les
fwait
cli
cmp
dec
retf
or
mov
mov
fimul
mov
or
arpl
xor
inc
mov
sub
jecxz
leave
add
adc
jl
pop
pushf
adc
dec
mov
std
cmp
(bad)
iret
inc
je
iret
aaa
shr
inc
mov
push
xchg
inc
aad
jb
dec
sub
cld
pop
push
aas
mov
xchg
mov
inc
ds
test
cmc
std
ds
adc
or
dec
or
or
aas
xor
add
inc
cld
das
sub
aas
cmp
mov
cmp
ins
pushf
fbstp
mov
ds
pushf
inc
mov
std
mov
mov
jo
jecxz
jecxz
xchg
pop
dec
push
inc
mov
addr16
mov
std
xchg
mov
std
cmp
mov
xchg
arpl
std
ds
adc
sub
mov
mov
mov
in
add
std
leave
xor
fs
cmp
sbb
inc
arpl
jecxz
movs
aas
sub
dec
xor
mov
mov
dec
cli
pop
bswap
(bad)
mov
xor
jb
outs
dec
cmp
hlt
mov
ds
(bad)
push
out
(bad)
mov
sub
dec
push
jecxz
mov
sub
mov
xchg
aas
mov
in
jmp
std
popf
adc
jg
mov
je
iret
inc
je
iret
inc
je
iret
and
xchg
stc
sub
mov
mov
(bad)
enter
ds
jmp
ins
jb
ret
(bad)
pop
sub
retf
je
(bad)
ds
inc
arpl
call
int
fwait
sub
xchg
aas
mov
mov
sahf
mov
mov
mov
std
add
pop
sbb
jns
inc
mov
leave
enter
push
mov
mov
mov
inc
arpl
jmp
std
leave
test
arpl
stos
inc
cli
pop
sbb
add
jo
fwait
jl
and
retf
out
sbb
stos
inc
arpl
jecxz
and
stos
inc
arpl
loop
ds
cmp
jecxz
mov
neg
dec
xchg
std
cmp
(bad)
ds
addr16
pop
inc
test
jecxz
ds
push
xchg
inc
pusha
and
aad
ds
xor
mov
outs
pop
arpl
dec
(bad)
test
dec
(bad)
cmps
stc
jmp
ds
push
aas
mov
xchg
push
in
ds
and
mov
xor
imul
std
push
cli
pop
adc
mov
std
mov
outs
jge
inc
sub
pop
inc
xor
pop
inc
cmp
addr16
addr16
or
xor
cmps
mov
std
into
push
loopne
xchg
mov
movs
mov
std
ret
jbe
and
push
cli
pop
adc
mov
std
daa
sar
mov
ret
jecxz
ds
pop
call
mov
sub
dec
int3
add
out
xchg
in
leave
cli
pop
sub
jbe
pop
pop
push
daa
(bad)
sar
inc
mov
sub
int3
mov
retf
cwde
inc
mov
mov
cmp
inc
aas
push
int3
xchg
xor
jecxz
mov
or
sbb
cld
ds
out
xchg
in
leave
add
or
mov
popa
enter
ds
add
outs
je
test
je
iret
inc
je
iret
cmp
sbb
loop
push
fidivr
mov
or
jo
out
jecxz
ret
jbe
push
retf
or
das
xor
repz
enter
enter
enter
enter
ds
push
push
test
ins
inc
arpl
xor
push
sahf
cmp
push
aas
mov
mov
mov
add
ds
mov
push
xchg
inc
mov
cmp
pop
ret
ror
mov
inc
je
iret
inc
je
iret
or
push
retf
inc
pop
int3
adc
mov
inc
mov
xchg
mov
outs
inc
arpl
data16
dec
cmp
mov
jae
inc
cmp
clc
fild
inc
mov
mov
retf
mov
outs
int
push
call
or
ds
sub
(bad)
fild
cmp
test
jecxz
mov
outs
aas
aaa
cmp
ds
std
ds
icebp
sub
fsub
sub
cld
cmp
dec
aaa
cmp
ds
std
ds
icebp
sub
in
ds
cld
mov
outs
push
jnp
mov
xchg
sahf
aas
add
mov
out
retf
inc
(bad)
lahf
and
ds
hlt
mov
mov
std
leave
add
imul
xor
outs
push
fwait
inc
es
repz
mov
std
ds
xlat
out
mov
std
shr
sti
mov
push
fnstenv
iret
and
mov
jae
inc
cmp
clc
fild
cmp
jecxz
retf
or
std
and
mov
and
push
retf
fs
mov
xor
repz
jecxz
leave
add
imul
xor
outs
push
xchg
inc
es
pop
or
mov
std
ds
xlat
out
mov
std
jno
pop
hlt
sub
std
ds
and
mov
ds
cld
cmp
test
call
icebp
sub
cld
cmp
repnz
int
push
int3
fs
mov
mov
pop
iret
dec
les
xor
sahf
div
dec
sub
outs
push
xchg
inc
es
pop
pop
cli
mov
std
ds
xlat
jmp
retf
or
in
mov
retf
sbb
add
mov
pop
mov
and
push
sahf
aas
add
mov
(bad)
xchg
or
int
inc
out
ds
outs
int
mov
mov
inc
test
std
popf
adc
ror
neg
add
ds
rol
enter
ds
int3
inc
mov
pop
popf
adc
or
sub
mov
sahf
scas
out
inc
mov
pop
call
(bad)
ds
mov
in
jecxz
popf
adc
ror
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
ins
into
(bad)
ds
jb
inc
jmp
mov
je
iret
inc
je
iret
and
data16
stc
sub
mov
mov
(bad)
enter
ds
jmp
xor
push
sahf
or
mov
inc
xchg
jge
and
inc
sub
les
or
add
adc
sahf
sysret
aas
mov
inc
jnp
pop
std
les
adc
or
push
xchg
or
daa
retf
ds
sub
xchg
fstp
inc
sub
inc
sub
les
or
add
adc
sahf
xlat
push
aas
mov
inc
pop
inc
cmp
inc
or
aas
inc
cmp
push
and
mov
pop
ss
push
outs
aaa
inc
aas
inc
xor
push
jge
and
sahf
out
inc
inc
mov
dec
arpl
inc
(bad)
enter
ds
ret
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
arpl
cmp
cmp
ins
ret
aas
inc
sub
mov
test
aas
mov
leave
cmp
mov
mov
fwait
cld
ds
jmp
retf
cmp
not
push
push
(bad)
mov
cmp
jmp
cmp
jecxz
sub
outs
dec
xchg
inc
and
or
or
mov
mov
dec
xchg
xchg
ss
xor
push
dec
fcomi
retf
out
mov
std
ret
jbe
adc
pop
jnp
icebp
sub
mov
inc
aas
mov
int3
daa
into
sar
ds
lock
into
inc
je
iret
inc
je
iret
inc
je
iret
or
out
daa
mov
(bad)
ds
add
jecxz
ds
pop
add
jecxz
iret
inc
je
iret
inc
je
iret
or
out
daa
xchg
sar
cmp
(bad)
mov
stos
test
jecxz
ds
std
cmp
mov
mov
hlt
jle
mov
(bad)
ds
jno
mov
push
jecxz
dec
or
inc
jbe
push
cmps
mov
mov
les
std
cmps
mov
mov
mov
jecxz
pushf
js
std
into
inc
cmp
inc
or
jb
ret
cmp
mov
jae
inc
and
cmp
out
pop
div
push
aas
cmp
sti
mov
data16
cmp
clc
mov
cmp
jb
adc
jecxz
add
add
nop
cli
pusha
adc
mul
cmp
xor
or
js
dec
jnp
test
add
inc
pop
add
sub
inc
cmp
cld
mov
outs
aas
fwait
inc
sub
les
sub
ds
std
shr
push
retf
cmp
cld
mov
mov
std
add
lock
lods
pop
add
cmps
add
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
cld
mov
outs
aas
fwait
inc
sub
les
das
div
std
shr
push
retf
cmp
(bad)
mov
mov
std
add
repnz
lods
pop
ds
add
cmp
iret
inc
je
iret
or
mov
mov
push
shl
adc
idiv
mov
ret
push
div
sti
ds
rol
dec
jnp
mov
mov
ja
push
sbb
cmp
repnz
mov
retf
push
div
cld
ds
rol
pop
enter
inc
mov
pop
push
div
std
ds
rol
mov
or
arpl
outs
out
mov
outs
inc
stos
inc
xor
or
dec
retf
dec
xchg
mov
pop
and
lea
outs
push
mov
outs
inc
scas
pop
mov
(bad)
xor
inc
aas
adc
(bad)
ds
pop
add
pop
cmp
or
daa
call
xchg
dec
retf
adc
aaa
mov
in
or
mov
lods
test
outs
push
mov
es
cld
cmp
mov
outs
dec
mov
mov
lods
mov
xchg
inc
inc
jmp
popf
(bad)
outs
push
inc
mov
inc
inc
and
inc
mov
inc
pop
div
cmps
push
aas
adc
mov
into
sbb
addr16
pushf
inc
test
jecxz
ds
jmp
cmp
aaa
cmp
retf
cmp
addr16
mov
push
int3
add
xor
or
add
inc
jp
aas
mov
mov
cli
pop
dec
aas
mov
std
es
sbb
aas
inc
adc
cld
jecxz
sbb
mov
mov
inc
aaa
cmp
test
or
xchg
pop
xor
sbb
dec
mov
arpl
outs
jp
shr
xchg
inc
and
and
arpl
xor
dec
retf
inc
(bad)
mov
mov
xor
mov
inc
sub
pop
icebp
stos
jl
inc
fmul
int3
add
xor
jl
add
inc
sub
cli
pop
dec
ds
std
int3
ret
cmp
adc
xchg
(bad)
in
repz
sub
outs
dec
jnp
ja
mov
out
xchg
std
ds
add
js
out
mov
fidiv
xlat
lods
fld
mov
sub
pop
inc
cmp
pop
or
aas
inc
sub
or
mov
lds
and
mov
into
and
xor
pop
mov
xor
add
xor
push
test
and
push
retf
mov
mov
sbb
mov
mov
in
ds
sub
adc
push
outs
int3
ret
sbb
and
mov
or
xor
xchg
mov
xchg
xchg
cld
jecxz
xchg
add
inc
inc
xor
adc
jo
ds
into
inc
js
test
mov
std
leave
cld
aas
mov
pop
outs
dec
inc
inc
sti
sub
icebp
mov
xchg
ds
ds
sub
and
jno
aas
inc
mov
mov
push
enter
sub
push
and
mov
pop
mov
xor
rcl
retf
jnp
test
dec
add
or
mov
inc
in
ds
sub
movs
add
aas
jb
aas
mov
mov
inc
aas
and
cld
adc
in
pop
mov
mov
ds
ds
adc
pop
xor
sub
and
dec
xchg
mov
mov
movs
jnp
lods
mov
std
adc
push
aas
mov
cmp
xor
sub
or
xchg
mov
mov
inc
repz
and
dec
retf
sub
or
retf
ins
push
mov
daa
pop
popf
adc
(bad)
enter
ds
ret
je
iret
inc
je
iret
inc
je
iret
cmp
adc
in
int3
fs
ds
retf
daa
out
(bad)
cmp
jb
imul
retf
add
push
int3
cli
pop
adc
cli
pop
push
daa
out
std
cmp
xchg
(bad)
addr16
or
retf
mov
test
sub
mov
adc
push
jns
mov
inc
je
iret
and
popw
stc
sub
mov
mov
(bad)
enter
ds
jmp
jno
arpl
retf
cmp
jecxz
(bad)
repnz
jp
loop
test
mov
std
mov
mov
mov
mov
data16
mov
adc
push
outs
int3
push
cld
xor
ds
out
mov
std
retf
add
push
xchg
pop
outs
int3
enter
mov
cmp
(bad)
ds
mov
(bad)
cmp
cld
mov
outs
xchg
fbstp
xor
sti
mov
dec
inc
mov
std
ds
(bad)
ds
jmp
stos
mov
(bad)
test
ins
mov
mov
std
(bad)
push
int
aas
mov
std
push
xchg
cmp
xor
inc
jge
and
jecxz
ds
fbstp
inc
mov
dec
arpl
inc
pop
mov
mov
add
movs
add
inc
je
iret
sbb
addr16
fild
mov
(bad)
enter
ds
jmp
outs
out
ds
pop
push
test
in
ds
jecxz
ret
jno
cmp
cmp
push
in
ds
(bad)
aas
mov
dec
int3
add
adc
mov
(bad)
ds
xor
inc
jge
and
mov
std
ds
std
add
mov
std
ds
xchg
mov
xor
pop
or
add
outs
enter
ds
add
mov
xor
inc
jge
push
inc
mov
std
ds
(bad)
(bad)
ds
std
ds
rcr
jecxz
mov
lock
push
in
ds
jp
aas
mov
mov
mov
std
ds
jecxz
ud2
sub
ret
jbe
adc
ds
xchg
aas
mov
std
test
xor
xchg
mov
fst
mov
(bad)
push
outs
mov
in
ds
jecxz
ds
ret
jecxz
add
test
ds
addr16
and
test
jecxz
ds
jmp
outs
pop
arpl
cmp
aaa
cmp
ds
cld
dec
cmp
ds
jl
and
mov
inc
cmc
xchg
mov
cmp
ja
cmp
(bad)
out
mov
ins
dec
arpl
ins
inc
arpl
loop
dec
sub
leave
adc
push
add
sub
arpl
add
inc
push
push
retf
push
mov
hlt
sub
aas
cmp
scas
mov
mov
xchg
sbb
sbb
push
aas
mov
std
imul
scas
push
daa
push
add
inc
push
push
retf
out
cld
das
push
scas
mov
mov
xchg
sbb
sbb
push
aas
mov
std
imul
xor
pop
inc
mov
std
int3
cli
pop
cs
dec
cmp
sub
mov
std
ds
stos
jae
out
popa
dec
mov
dec
adc
retf
mov
dec
arpl
xor
les
ds
mov
push
arpl
xor
or
ss
add
addr16
inc
sub
outs
and
dec
nop
mov
pop
adc
stc
out
dec
inc
cmp
outs
and
dec
(bad)
mov
mov
cld
jecxz
push
inc
push
aas
mov
dec
retf
push
addr16
mov
inc
fsub
push
out
std
leave
sub
mov
sub
imul
mov
inc
scas
std
xchg
push
outs
adc
fmulp
add
mov
cmp
std
ds
sti
dec
cmp
ds
sub
or
(bad)
test
jo
scas
mov
mov
inc
mov
popf
(bad)
std
leave
or
mov
daa
push
enter
enter
retf
mov
inc
aas
and
mov
or
arpl
ins
dec
arpl
loop
retf
mov
mov
std
jp
pop
vmread
xor
and
cld
adc
jno
arpl
xor
dec
and
cld
adc
xor
imul
mov
sahf
call
inc
arpl
outs
dec
arpl
outs
push
arpl
ins
inc
arpl
outs
inc
mov
xor
xchg
xchg
xchg
ficomp
mov
aas
cmp
xchg
lods
mov
push
arpl
xor
mov
mov
inc
and
mov
out
in
retf
cli
pop
and
test
ds
in
in
std
leave
int
add
test
or
mov
fidiv
mov
cli
pop
dec
nop
inc
xor
xchg
push
xor
inc
aas
or
daa
js
add
inc
xor
mov
std
ds
stos
jae
inc
sub
test
out
add
cld
aaa
jae
inc
cmp
test
out
add
or
dec
mov
jecxz
pop
std
(bad)
fimul
leave
test
daa
or
add
inc
pop
push
retf
dec
arpl
dec
and
cld
fisttp
or
int
or
or
or
repnz
jecxz
sbb
(bad)
ds
mov
mov
std
retf
add
push
int3
cli
pop
cmp
cli
pop
push
daa
sbb
cmp
ds
pusha
and
ficom
ds
mov
sub
push
mov
std
test
xor
inc
mov
dec
inc
aas
sub
scas
pop
jecxz
ret
push
sub
ja
cmp
out
inc
dec
mov
outs
sub
or
(bad)
test
loop
int3
or
cmp
jecxz
push
test
xor
sbb
dec
retf
imul
or
xor
jg
call
ss
or
retf
addr16
inc
sub
jg
out
nop
mov
mov
cld
jecxz
inc
xchg
push
std
xchg
outs
retf
hlt
jle
mov
std
ds
(bad)
mov
jge
mov
jecxz
and
or
add
int3
mov
mov
inc
add
mov
les
mov
les
cld
jecxz
dec
jl
and
and
addr16
mov
aad
cld
jecxz
int3
add
push
daa
jl
add
inc
cmp
pop
inc
mov
daa
les
add
inc
mov
dec
retf
(bad)
imul
out
or
cmp
cld
in
pop
lods
mov
push
ds
ja
test
outs
dec
arpl
outs
push
arpl
xor
retf
dec
pop
jecxz
fwait
pop
sub
xchg
inc
mov
(bad)
loop
std
xchg
inc
mov
mul
in
retf
add
sbb
sbb
aas
inc
xor
push
sahf
mov
mov
jb
es
inc
and
push
ds
push
dec
test
out
addr16
or
int
ret
adc
aas
je
mov
mov
jb
retf
arpl
test
in
in
in
(bad)
sub
sbb
cli
pop
bound
std
retf
add
sbb
bndldx
aas
inc
xor
fwait
adc
ins
or
mov
std
sar
inc
mov
mov
or
out
test
cld
dec
retf
jecxz
test
(bad)
(bad)
ds
mov
inc
je
iret
or
out
daa
jb
(bad)
ds
sub
inc
cmp
inc
inc
sub
les
add
cld
(bad)
cmp
sub
mov
mov
std
push
mov
inc
aas
adc
add
inc
je
iret
inc
je
iret
sahf
arpl
inc
mov
adc
mov
outs
out
daa
and
(bad)
ds
sub
inc
cmp
inc
mov
cmp
lock
in
leave
test
cmp
mov
pop
add
je
iret
inc
sub
inc
or
mov
cmp
cmp
adc
jno
inc
jmp
aaa
pusha
and
in
ds
mov
jecxz
ret
mov
popf
jb
mov
xor
inc
loop
xor
adc
cld
out
(bad)
ds
in
fninit
std
sar
adc
inc
push
enter
aad
in
ds
push
aas
mov
xchg
pop
in
outs
call
xchg
jmp
jecxz
popf
aas
jp
aas
mov
xchg
jbe
inc
mov
cmp
adc
jecxz
xchg
sahf
xor
aas
mov
ret
sub
pop
mov
std
pushf
adc
and
int3
and
mov
push
add
mov
or
jb
mov
stos
(bad)
ds
or
ds
mov
jecxz
ret
push
daa
repnz
ds
lods
add
call
retf
or
jbe
push
retf
std
push
cmp
cs
mov
ret
out
ds
shl
jecxz
ds
mov
inc
je
iret
inc
je
iret
or
jb
mov
sub
inc
out
loop
ds
or
les
int3
add
inc
mov
push
ds
mov
mov
sub
or
xchg
(bad)
ds
std
push
inc
fadd
inc
sub
push
daa
push
in
cmp
inc
dec
and
ds
in
ds
ror
xchg
(bad)
ds
std
push
cmp
mov
jecxz
ret
mov
adc
xchg
xor
xchg
xchg
je
inc
aas
mov
inc
out
inc
mov
je
iret
or
push
retf
push
xchg
jae
std
ds
inc
pop
jno
std
ds
or
ds
add
aas
inc
and
adc
out
mov
std
leave
cmp
(bad)
ds
add
mov
cmp
sub
xor
inc
push
inc
mov
sub
sub
and
mov
xor
ret
les
mov
jl
lahf
mov
jl
aas
bound
sub
std
ds
adc
push
jge
and
jecxz
add
mov
out
mov
std
ja
or
ds
sub
outs
test
jecxz
imul
mov
jecxz
ds
call
inc
arpl
sub
inc
mov
std
sub
test
mov
std
std
mov
in
mov
mov
std
jns
pop
cmpps
jae
aas
bound
enter
jp
fst
shl
xchg
stc
xor
pop
push
push
cld
pop
add
mov
les
mov
sbb
int3
cmp
call
jl
jge
es
mov
std
sub
es
lods
loop
ins
outs
jge
cmp
mov
cmp
popf
cli
ins
pop
xchg
push
dec
enter
popf
or
std
ds
push
pop
push
cld
inc
(bad)
aas
mov
xchg
ds
ds
inc
(bad)
enter
popf
and
pushf
adc
jb
mov
mov
ds
add
sub
mov
loope
test
mov
std
leave
add
cmp
sub
mov
jecxz
ret
mov
push
in
ds
push
inc
cmp
iret
aas
mov
call
ds
pop
push
cld
repz
aas
mov
call
ds
push
retf
std
dec
cmp
(bad)
ds
inc
push
cmp
push
ret
cmp
or
ds
sub
les
out
add
push
ds
cld
push
daa
mov
(bad)
cmp
std
ds
xor
adc
mov
inc
je
iret
inc
je
iret
or
jb
mov
in
sub
push
daa
mov
sub
ret
cmp
repnz
mov
(bad)
ds
pop
add
push
or
repz
mov
std
mov
outs
test
mov
std
leave
(bad)
repz
cmp
test
cmp
dec
cmp
(bad)
ds
std
push
cmp
xor
jne
xor
les
aad
scas
out
inc
cmp
push
imul
inc
sub
retf
mov
outs
outs
xchg
jnp
jecxz
inc
xchg
inc
mov
cmps
mov
inc
in
ds
test
mov
std
es
std
cmp
retf
jecxz
inc
inc
repnz
ds
retw
int3
adc
mov
add
inc
ror
je
iret
inc
je
iret
inc
je
iret
or
mov
and
ds
popa
push
mov
outs
test
mov
std
xchg
mov
add
stos
test
mov
std
ds
std
(bad)
xor
mov
push
in
ds
and
jno
je
(bad)
ds
add
add
pop
mov
retf
ins
aas
inc
inc
cmp
retf
push
enter
lea
call
std
ds
add
or
ss
mov
cmps
jb
icebp
sub
jnp
test
mov
std
xchg
mov
add
inc
test
ds
std
push
inc
jp
inc
mov
les
jecxz
cmp
cmp
ja
xchg
cli
push
mov
(bad)
mov
inc
xchg
mov
std
cdq
jns
pop
jb
aas
ror
je
iret
or
jb
mov
in
ds
mov
jecxz
ret
mov
inc
in
ds
sub
jle
or
xchg
mov
add
jp
xor
adc
mov
retf
ins
inc
inc
inc
cmp
retf
push
enter
lea
call
mov
pop
in
ds
outs
inc
arpl
jo
arpl
stos
inc
arpl
jecxz
ds
dec
xchg
mov
add
cli
pop
push
retf
(bad)
ds
ret
stos
xchg
inc
in
ds
mov
inc
je
iret
inc
je
iret
or
jb
mov
movs
jae
inc
sub
xchg
and
aas
or
push
retf
gs
(bad)
jecxz
leave
scas
dec
(bad)
xchg
aas
bound
ds
retw
sub
sahf
inc
sub
retf
or
pop
daa
inc
stc
jecxz
jg
and
push
push
xchg
inc
aas
jge
push
mov
push
add
jg
jecxz
ds
(bad)
ds
std
add
mov
inc
sub
inc
inc
sub
push
test
ror
cmp
aas
(bad)
jecxz
leave
sub
outs
push
pop
or
cmp
sub
push
add
add
cmp
nop
mov
test
add
(bad)
test
add
mov
mov
aas
repnz
mov
mov
mov
std
pushf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
arpl
repz
retf
xor
push
out
mov
sahf
push
std
ds
inc
inc
cmp
in
retf
inc
inc
mov
xrelease
jns
mov
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
jmp
mov
jge
add
imul
jge
stc
jecxz
jg
arpl
dec
cmps
mov
aas
sub
enter
xchg
stos
ds
test
enter
xchg
ins
xchg
inc
je
iret
inc
je
iret
inc
sub
inc
push
int3
adc
mov
push
add
mov
inc
sub
inc
jmp
cs
mov
inc
push
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
and
data16
push
in
ds
(bad)
enter
ds
mov
inc
aad
cmps
sbb
std
ds
pop
and
fxch
inc
mov
jl
jge
and
jecxz
ds
mov
ror
mov
xlat
mov
std
add
pop
adc
mov
mov
add
or
mov
stos
add
pop
sub
leave
jl
pop
mov
mov
add
movs
add
inc
je
iret
inc
je
iret
or
out
daa
push
test
lods
sub
inc
mov
pop
xchg
sahf
fdivr
inc
inc
stos
pop
add
outs
out
xchg
inc
pusha
and
sub
push
int
aas
mov
out
hlt
in
mov
mov
cmps
mov
or
mov
pop
add
sub
test
je
iret
inc
je
iret
cmp
bound
mov
std
leave
cmp
(bad)
ds
mov
mov
std
mov
jno
arpl
dec
jle
(bad)
jecxz
ds
out
test
sub
inc
inc
jb
aas
mov
dec
daa
cdq
out
outs
in
ds
add
inc
je
iret
inc
je
iret
and
data16
sub
mov
mov
(bad)
enter
ds
lahf
(bad)
mov
outs
out
enter
int3
add
push
push
cli
pop
adc
mov
std
pop
pop
daa
adc
cmp
inc
inc
mov
dec
daa
push
scas
(bad)
cmp
add
jge
or
cli
pop
push
(bad)
sahf
das
enter
ret
jb
aas
mov
cmp
xor
mov
mov
jmp
std
mov
std
ds
int3
sub
mov
add
push
idiv
outs
push
arpl
in
sar
or
mov
in
mov
std
retf
add
push
push
cli
pop
adc
mov
std
daa
cmc
mov
and
inc
(bad)
enter
ds
ret
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
outs
inc
inc
or
push
ret
xchg
in
ds
fucomp
stc
jecxz
jg
xor
inc
push
pop
jge
or
arpl
inc
mov
les
jecxz
ds
ds
mov
std
ds
mov
inc
je
iret
or
jb
mov
jecxz
xchg
sahf
xchg
(bad)
ds
test
mov
std
xchg
mov
mov
pop
in
ds
bswap
dec
mov
ds
test
mov
std
sar
mov
je
iret
inc
je
iret
pop
aaa
push
retf
push
cli
mov
std
ds
jecxz
jns
pop
push
retf
(bad)
ds
aas
pop
aas
push
inc
mov
mov
mov
std
leave
test
aas
jg
and
cmc
enter
cwde
out
ins
push
jnp
cmp
add
lea
xchg
sbb
jecxz
lds
in
ds
std
ds
pop
std
jp
bound
ret
jnp
inc
repnz
ds
retw
jp
inc
mov
mov
or
inc
in
std
leave
inc
sbb
ds
push
pop
ja
add
mov
std
es
adc
ds
push
inc
mov
mov
cli
in
cmp
mov
(bad)
xor
adc
xchg
(bad)
ds
test
aas
sub
dec
inc
xor
dec
inc
in
mov
lds
xchg
pop
lock
ss
rol
aas
dec
ss
adc
out
push
inc
and
xor
lods
fld
adc
xor
(bad)
ds
rol
out
jnp
inc
repnz
ds
retw
mov
les
in
int
in
ds
cmp
push
aas
js
mov
dec
inc
(bad)
ds
inc
enter
ds
(bad)
cli
pop
push
retf
push
retf
(bad)
ds
add
cli
pop
push
enter
dec
inc
aas
std
ds
pop
popf
adc
mov
(bad)
std
ds
mov
cli
in
cmp
xchg
ins
inc
arpl
outs
dec
arpl
outs
daa
retf
cmp
mov
data16
inc
xor
mov
imul
adc
mov
push
call
imul
mov
cmp
inc
mov
and
cmp
push
inc
outs
inc
inc
mov
cmp
add
sub
dec
aas
cmp
push
xor
popf
adc
push
add
mov
inc
je
iret
inc
sub
inc
inc
ins
scas
inc
mov
les
xchg
inc
aas
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
in
ds
sub
les
push
sahf
outs
out
ds
ror
cwde
(bad)
ds
push
ds
call
(bad)
xchg
sub
mov
outs
inc
push
jge
adc
jecxz
ret
jbe
sbb
inc
cwde
(bad)
ds
aas
xchg
cmp
ds
inc
cmps
pop
sahf
adc
mov
inc
in
ds
jb
aas
mov
cmp
xor
xchg
dec
in
ds
cmps
pop
sahf
adc
mov
int3
cmp
jl
jecxz
sar
add
push
aas
mov
std
cdq
adc
repz
in
mov
jecxz
ret
push
daa
mov
std
cmp
pop
popf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
jecxz
test
bound
js
sti
jnp
inc
jmp
cmp
add
xchg
mov
add
data16
shl
int3
cmp
push
cmp
push
div
mov
std
ds
push
inc
mov
mov
mov
std
ds
jno
dec
inc
sub
les
push
ret
jl
inc
jmp
push
xor
popa
push
retf
std
dec
cmp
(bad)
ds
dec
cmp
movs
jge
inc
movs
xchg
out
std
ds
push
inc
mov
mov
movs
jge
inc
movs
xchg
jmp
cmp
push
jp
pusha
stos
retf
mov
mov
std
ds
in
ds
lods
or
ds
pop
sbb
or
jmp
ds
lods
xchg
into
outs
mov
jecxz
call
sub
mov
dec
das
aas
jmp
out
add
mov
jmp
pop
int3
test
jecxz
xchg
xchg
inc
push
inc
jp
inc
mov
dec
(bad)
sahf
push
sub
mov
push
das
aas
sub
dec
cmp
retf
(bad)
ds
push
daa
push
push
(bad)
cmp
les
mov
inc
outs
mov
std
ds
sub
cmp
push
jp
xrelease
cmp
(bad)
ds
dec
pop
ja
add
mov
mov
cli
in
cmp
(bad)
ds
inc
pop
adc
std
mov
xchg
in
cmp
inc
mov
pop
push
div
std
ds
ror
xchg
(bad)
ds
lds
mov
mov
or
jb
mov
in
ds
fucomp
stc
jecxz
jg
jecxz
ds
ds
mov
std
ds
push
inc
mov
std
leave
mov
jb
inc
mov
push
ds
retw
push
aas
mov
std
ds
pop
add
mov
inc
je
iret
inc
je
iret
or
mov
and
mov
jecxz
xchg
mov
add
adc
push
ret
jle
jbe
std
ds
mov
sub
gs
movzx
std
mov
mov
std
mov
cmp
add
ds
out
mov
jo
inc
cmp
add
ds
lock
jo
ds
add
ds
shl
inc
das
cld
ret
jle
xchg
std
ds
aam
jmp
mov
add
mov
cmp
test
cmp
xchg
mov
pop
sub
in
jp
mov
push
daa
out
jecxz
cmp
or
imul
ds
pop
popf
adc
mov
(bad)
jecxz
popf
adc
mov
mov
std
cdq
jns
mov
inc
je
iret
inc
je
iret
or
mov
inc
inc
adc
icebp
outs
jno
cmp
jae
or
push
dec
cmp
adc
icebp
outs
jno
jmp
sub
ds
std
mov
outs
xor
jecxz
leave
(bad)
aas
aas
enter
jp
fiadd
xchg
mov
or
jp
cmp
inc
mov
push
add
xor
aas
mov
jb
mov
test
add
outs
cmp
sub
xor
add
add
cmp
in
sub
mov
test
ds
sub
ret
xchg
sub
out
mov
std
sahf
adc
xor
adc
mov
push
std
ds
cs
les
sbb
mov
xor
sbb
jp
mov
push
std
ds
pop
aas
mov
std
leave
js
cmps
(bad)
ins
jno
adc
jecxz
adc
mov
inc
je
iret
inc
je
iret
or
jb
mov
outs
inc
inc
or
push
enter
ds
(bad)
pop
jge
dec
inc
cwde
(bad)
ds
ret
and
dec
dec
cwde
(bad)
ds
inc
inc
push
stos
inc
aas
inc
push
inc
mov
les
and
mov
mov
push
std
cmp
xor
jns
inc
jp
inc
mov
push
push
clc
repz
lds
std
ds
inc
aas
imul
es
idiv
cmp
mov
inc
je
iret
inc
je
iret
cmp
push
xchg
inc
inc
and
cmp
mov
outs
jnp
cmp
jae
or
push
dec
cmp
or
in
mov
push
mov
les
adc
jp
cmp
addr16
mov
mov
sub
imul
mov
out
xchg
int3
add
scas
xacquire
repz
ds
repz
lock
push
jnp
inc
pop
add
cli
pop
push
leave
int
xchg
cmp
or
cli
pop
push
mov
loop
inc
arpl
out
repnz
or
ds
xor
push
data16
pop
lds
aas
mov
jge
(bad)
inc
dec
cmp
inc
arpl
repnz
jecxz
enter
ret
jbe
cmp
jecxz
mov
sub
mov
jecxz
ds
call
pop
jb
aas
add
(bad)
push
ss
nop
mov
repz
(bad)
arpl
xor
pop
inc
cmp
pop
and
mov
pop
mov
std
inc
ja
or
retf
xchg
aam
std
ds
mov
fiadd
mov
xchg
jge
push
inc
mov
(bad)
ds
arpl
dec
add
ds
dec
inc
inc
xor
cmp
mov
into
mov
outs
add
mov
retw
sub
pusha
aaa
(bad)
mov
and
mov
std
dec
movs
mov
outs
inc
arpl
push
mov
test
mov
dec
call
mov
ss
nop
mov
sub
imul
inc
jbe
jae
xor
mov
or
add
inc
pop
pushf
outs
in
ds
add
inc
je
iret
inc
sub
inc
cmp
push
xchg
inc
cmp
xchg
or
jno
or
pop
adc
jp
cmp
sar
jecxz
jp
push
add
xor
retf
push
retf
and
jp
cmp
addr16
aas
mov
mov
push
add
xor
ret
cmp
push
(bad)
repnz
mov
std
jno
imul
arpl
xor
xchg
ret
inc
cmp
mov
ins
or
push
std
sub
retf
push
leave
cli
pop
adc
lahf
lock
sub
mov
jmp
arpl
push
jae
ss
and
pop
cmp
sub
mov
or
aas
mov
add
cli
pop
and
ds
std
ds
and
std
leave
and
push
ret
call
jb
aas
add
fiadd
push
ds
call
add
into
or
test
mov
add
jp
sub
xchg
cli
pop
and
xor
pop
popf
adc
ret
ror
je
iret
or
mov
inc
pop
adc
xor
mov
jecxz
dec
or
push
dec
cmp
pop
retf
jl
jmp
cmp
sub
push
sub
push
ds
add
push
sbb
xor
mov
mov
(bad)
test
mov
(bad)
cld
xchg
mov
es
ret
xchg
bound
retf
dec
xchg
mov
push
ret
mov
mov
std
popf
adc
pop
add
aas
ror
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
mov
jb
inc
push
inc
mov
push
js
xor
push
sahf
add
inc
cmp
mov
jecxz
ret
cmp
addr16
inc
mov
mov
push
in
ds
sub
shr
test
jecxz
jno
outs
(bad)
das
outs
daa
(bad)
cmp
stc
jecxz
daa
outs
out
cmp
push
sub
cmp
inc
and
push
sub
cmp
jl
jecxz
sar
inc
addr16
inc
mov
xchg
push
in
ds
push
std
ds
add
mov
add
ins
mov
daa
adc
std
ds
cmp
mov
add
push
(bad)
ds
mov
daa
mul
std
ds
jo
mov
add
push
(bad)
ds
mov
daa
(bad)
std
ds
test
jecxz
add
(bad)
(bad)
ds
mov
daa
mov
int3
pop
dec
mov
add
push
(bad)
ds
mov
daa
mov
jb
inc
mov
push
ds
mov
mov
add
cmp
(bad)
loop
ds
jp
inc
mov
push
ds
add
push
(bad)
ds
mov
daa
pop
loop
ds
jmp
cmp
(bad)
ds
nop
cmp
stos
loope
cmp
push
enter
ds
js
mov
mov
jecxz
ret
xchg
push
in
ds
dec
cld
ds
out
mov
call
xchg
push
in
ds
jecxz
add
addr16
or
push
inc
cmp
(bad)
ds
add
mov
pop
popf
jns
xor
adc
mov
out
inc
aas
repz
pop
fwait
inc
aas
dec
fwait
inc
aas
cli
call
xor
inc
aas
inc
pushf
inc
aas
daa
pushf
inc
aas
push
inc
aas
cld
fwait
inc
aas
xchg
inc
aas
(bad)
fwait
inc
aas
adc
inc
aas
mov
or
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
dec
(bad)
repz
inc
mov
add
out
inc
mov
out
aas
mov
std
ds
std
inc
mov
repz
dec
(bad)
icebp
or
icebp
or
icebp
or
repz
dec
(bad)
repz
iret
or
push
retf
push
test
mov
add
inc
cwde
(bad)
ds
fld
jp
ss
push
pop
push
retf
std
push
cmp
std
ds
push
aas
mov
sub
cmps
stos
(bad)
aas
ds
jg
adc
shl
mov
mov
xchg
retf
ds
inc
and
push
adc
ds
pushf
push
mov
std
(bad)
push
add
ds
vpaddq
std
ds
arpl
cmp
(bad)
ds
std
(bad)
push
or
ds
pushf
addr16
std
pushf
jge
dec
inc
mov
std
fwait
outs
in
ds
ror
je
iret
inc
je
iret
or
arpl
outs
dec
arpl
cmp
retf
mov
sar
mov
mov
mov
std
mov
ss
xchg
ret
inc
cmp
ds
popa
dec
sub
xor
add
xor
xchg
(bad)
jb
or
push
dec
cmp
and
mov
push
mov
pop
std
push
adc
retw
movs
or
ds
popa
dec
sub
xor
add
or
retf
std
ds
push
ds
add
push
(bad)
ds
jnp
inc
pop
add
xor
enter
push
or
push
dec
cmp
xor
xor
mov
mov
lds
rcr
xchg
mov
or
jp
cmp
addr16
jecxz
mov
jmp
sub
mov
ss
xchg
ret
inc
cmp
ds
popa
dec
sub
mov
int
add
std
push
jb
or
push
dec
cmp
add
xor
mov
push
mov
inc
aas
xor
push
inc
out
addr16
add
xchg
mov
jecxz
sar
or
outs
add
mov
movs
je
inc
daa
push
les
add
push
jecxz
ret
mov
inc
sub
push
icebp
movs
jb
inc
out
ds
retw
addr16
aas
mov
cmp
or
inc
inc
call
std
imul
add
enter
aas
addr16
aas
mov
mov
mov
std
ret
jbe
inc
arpl
jecxz
ds
dec
arpl
repnz
mov
std
sub
outs
push
arpl
push
jb
or
push
dec
cmp
sub
xor
mov
push
mov
les
std
xchg
ret
inc
cmp
ds
popa
dec
sub
mov
add
add
pop
lds
enter
xor
retf
ss
xchg
ret
inc
cmp
leave
sub
mov
and
xchg
ins
aas
dec
inc
out
push
xchg
pop
push
retf
sbb
add
add
pop
mov
enter
dec
inc
xor
ds
xchg
repz
std
div
es
enter
mov
inc
pop
pushf
adc
mov
iret
inc
je
iret
inc
je
iret
cmp
adc
fiadd
push
retf
(bad)
ds
jl
aas
pusha
and
sub
retf
ins
inc
cmp
push
ds
retw
shl
or
push
dec
cmp
or
outs
ins
inc
jmp
sub
and
clc
push
ds
push
(bad)
ds
sbb
mov
or
inc
dec
inc
jle
sub
and
clc
push
ds
push
(bad)
ds
sbb
xchg
fimul
xor
inc
out
cmp
and
xor
inc
icebp
mov
dec
cmp
(bad)
mov
xor
mov
jecxz
ret
mov
in
ds
call
add
push
(bad)
ds
inc
arpl
jecxz
ds
mov
mov
std
retf
inc
sub
ds
dec
arpl
push
std
xchg
ret
inc
cmp
ds
add
mov
inc
les
pop
adc
jp
cmp
addr16
pop
inc
push
add
or
mov
mov
std
ds
xor
aas
sub
pop
cmp
and
cli
jno
inc
cmp
cmp
push
jp
pusha
jmp
mov
sub
arpl
test
retf
es
clc
inc
cmp
or
js
cmp
enter
inc
and
push
ds
call
mov
(bad)
mov
mov
push
mov
enter
dec
inc
sub
ds
jmp
retf
xchg
ret
inc
cmp
ds
add
mov
inc
les
jecxz
mov
cmp
xchg
ret
inc
cmp
scas
mov
out
les
jecxz
mov
cmp
xchg
ret
inc
cmp
scas
mov
ins
add
xchg
repz
dec
or
mov
mov
std
(bad)
cmp
(bad)
ds
push
inc
inc
push
inc
mov
add
stos
ds
mov
std
ds
push
aas
mov
cmp
iret
mov
std
(bad)
aad
ins
inc
adc
jecxz
adc
push
jns
pop
pushf
jmp
clc
ror
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
push
retf
sbb
adc
test
xchg
mov
or
jp
cmp
addr16
mov
mov
cli
pop
sbb
sub
ins
cld
push
sbb
jp
cmp
addr16
mov
mov
or
sbb
js
mov
cmp
xchg
je
std
cmp
dec
cmp
cmp
or
mov
cmp
pop
inc
cmps
xor
(bad)
ins
or
cmp
ds
add
push
(bad)
ds
push
inc
inc
pop
xchg
inc
cmp
dec
(bad)
ins
inc
arpl
outs
add
inc
inc
add
or
sti
cld
(bad)
mov
sar
cmp
push
mov
mov
add
data16
dec
xor
test
in
(bad)
ds
and
dec
ja
add
dec
adc
aas
mov
test
in
(bad)
ds
call
in
mov
jecxz
ret
mov
(bad)
cmp
sub
pop
lds
ds
xchg
inc
xchg
mov
std
cdq
cmp
pop
jb
aas
add
inc
je
iret
aaa
shl
inc
mov
push
xchg
or
mov
out
in
ds
pusha
and
inc
add
in
fnstenv
retw
movs
or
ds
adc
mov
inc
(bad)
jb
or
push
dec
cmp
add
in
pop
inc
inc
sub
dec
jmp
in
add
data16
cmp
int
in
mov
pop
(bad)
ds
fnstenv
retw
movs
or
ds
adc
jb
outs
inc
aas
and
dec
xchg
aas
sub
addr16
loop
inc
cmp
and
jge
and
jecxz
ds
std
ds
fnstenv
in
ds
jecxz
dec
cmp
cmp
outs
pop
inc
inc
xor
leave
cli
pop
adc
das
mov
xor
arpl
out
test
sub
push
cmp
push
mov
repnz
ds
cmp
dec
cmp
pop
mov
cmp
push
mov
add
les
xchg
mov
add
add
and
jp
jle
mov
std
ds
repz
inc
cli
push
ds
into
retw
mov
and
push
sbb
add
lock
push
(bad)
ds
sub
sbb
mov
mov
xchg
icebp
movs
xchg
inc
cmp
dec
inc
sub
pop
loope
cmps
dec
aas
cmp
dec
sub
and
jo
lds
std
mov
cwde
(bad)
ds
mov
inc
xor
mov
jecxz
ret
cmp
or
mov
ret
jmp
dec
inc
cmp
arpl
and
pop
and
cmc
mov
mov
ins
dec
inc
inc
cmp
jae
and
push
mov
stos
psubb
jecxz
ds
sti
cmp
jb
cmp
aas
inc
add
mov
std
cdq
aaa
test
inc
mov
rcr
gs
jecxz
add
mov
inc
je
iret
inc
je
iret
inc
sub
inc
cmp
push
xchg
or
push
or
mov
jecxz
push
push
jecxz
dec
cmp
xor
sub
mov
and
pop
pop
retf
and
jp
cmp
mov
jecxz
mov
outs
jnp
jmp
out
test
iret
add
xchg
ins
pop
arpl
repnz
mov
pop
retf
and
jp
cmp
addr16
inc
mov
mov
mov
dec
retf
mov
arpl
outs
inc
arpl
xor
ds
call
stc
inc
xor
mov
(bad)
loop
ret
mov
dec
mov
ds
(bad)
mov
xor
push
(bad)
leave
add
es
xchg
dec
mov
ds
mov
aas
mov
les
cld
jecxz
xchg
(bad)
mov
sub
cmp
std
dec
ds
add
push
(bad)
ds
jae
inc
popa
add
cli
pop
and
xor
mov
xor
xchg
ret
inc
cmp
ds
pop
dec
xor
xor
add
iret
sbb
mov
adc
jp
cmp
mov
mov
mov
pop
fxch
aam
inc
arpl
outs
push
arpl
sub
enter
jl
mov
sub
arpl
outs
ds
mov
pop
inc
xor
mov
sub
outs
push
test
mov
pop
in
retf
push
retf
push
ret
cmp
xor
dec
sub
mov
cmp
ds
retf
push
les
mov
mov
std
enter
mov
inc
pop
pushf
outs
in
ds
add
adc
mov
add
mov
inc
je
iret
inc
je
iret
or
mov
inc
pop
adc
xor
mov
jecxz
push
or
push
dec
cmp
and
aam
jl
jmp
cmp
sub
push
sub
push
ds
add
push
(bad)
ds
sbb
xor
mov
add
daa
xor
or
push
ds
cmp
jae
or
push
dec
cmp
push
retf
jl
jmp
cmp
sub
push
sub
push
ds
add
push
sbb
xor
mov
mov
(bad)
test
mov
(bad)
cld
xchg
mov
retw
xor
ds
bound
enter
pushf
outs
in
ds
rcr
cmps
mov
inc
je
iret
inc
je
iret
inc
je
iret
pop
aaa
push
retf
push
xchg
or
bound
retf
std
mov
cmp
xchg
ret
inc
cmp
mov
inc
out
les
pop
push
xchg
mov
or
jp
cmp
sub
retf
push
jb
outs
or
mov
mov
sub
jle
mov
std
ds
mov
(bad)
loop
ret
mov
push
in
ds
bound
enter
pushf
outs
in
ds
push
add
aas
push
add
mov
or
jb
mov
jecxz
ret
jbe
or
ds
ret
movs
jae
adc
mov
push
std
ds
jp
inc
mov
mov
jno
movzx
std
jns
pop
sub
int3
dec
add
jp
(bad)
lds
std
ds
std
ds
call
mov
std
leave
or
inc
ret
xchg
add
dec
xchg
mov
adc
jp
cmp
mov
mov
inc
je
iret
inc
je
iret
inc
sub
inc
jmp
in
ds
ins
(bad)
aas
mov
xchg
inc
in
ds
ins
call
outs
mov
mov
std
mov
in
ds
sub
add
mov
inc
je
iret
inc
je
iret
pop
aaa
push
xchg
inc
pusha
and
mov
in
leave
jecxz
test
cmp
ror
std
leave
cmps
addr16
(bad)
jae
or
jecxz
inc
or
in
les
lods
inc
aas
jge
add
jg
inc
stc
jecxz
test
ror
xor
inc
aas
jge
adc
and
add
stc
jecxz
test
ror
xor
inc
aas
jge
and
xchg
inc
stc
jecxz
mov
out
xchg
outs
out
ds
push
aaa
aas
cld
and
sub
xor
inc
ds
test
xor
ds
mov
mov
retf
jp
mov
add
push
shl
jo
arpl
xor
inc
aas
push
stos
inc
arpl
pop
out
js
std
sar
push
mov
sub
cmp
out
pop
int3
mov
jno
mov
mov
jno
mov
or
pop
call
mov
jno
mov
cwde
out
xchg
loop
pop
call
mov
inc
je
iret
or
mov
inc
pusha
and
sub
shl
inc
arpl
pop
or
das
in
sar
push
cmp
add
aas
mov
sub
mov
dec
xor
mov
in
ds
inc
sub
push
jmp
adc
jmp
sti
ss
push
or
mov
ret
jbe
icebp
sub
jne
ds
lds
mov
mov
pop
sub
sub
mov
aam
aas
mov
lds
pop
add
cmps
jno
jge
cmp
or
jecxz
sar
jmp
pop
iret
sub
ror
sahf
jmp
aas
mov
ret
clc
cmp
mov
add
push
dec
arpl
jo
jge
pop
inc
inc
mov
push
arpl
out
enter
sbb
std
ds
les
jecxz
ds
outs
inc
sub
mov
inc
adc
inc
aas
out
mov
mov
out
enter
xchg
ins
inc
inc
adc
call
mov
inc
je
iret
inc
je
iret
or
push
retf
push
xchg
inc
pusha
and
inc
add
mov
std
aas
mov
or
cs
sar
push
cmp
add
aas
mov
sub
mov
sti
sub
cmp
push
retf
std
push
cmp
dec
xchg
sahf
ror
aas
mov
out
ret
xor
mul
pop
int3
sub
mov
cmp
inc
js
inc
xchg
test
mov
mov
std
ds
pop
test
sahf
adc
pop
add
outs
pop
arpl
fidivr
mov
xor
lods
xlat
mov
or
aam
xor
pop
jecxz
ret
mov
xor
mov
cmp
push
inc
sub
push
inc
lock
aas
mov
std
(bad)
sub
int3
hlt
cmp
jecxz
add
push
std
les
pop
inc
retf
lds
push
add
cmps
outs
int3
retf
push
dec
gs
mov
push
int3
clc
cmp
ret
mov
outs
dec
arpl
outs
aam
ret
cmp
mov
fidivr
cmp
movs
mov
adc
ror
outs
pop
arpl
movs
loope
outs
(bad)
std
aas
mov
shl
test
cmp
pop
add
cmps
imul
(bad)
mov
add
outs
push
(bad)
push
repz
or
push
retf
adc
ret
ds
xchg
sahf
aaa
sti
ds
ret
loop
sub
sub
pop
sub
mov
stos
cmp
sub
mov
inc
mov
xchg
(bad)
or
add
sbb
cli
pop
adc
xchg
jmp
xchg
push
int3
push
cmp
ret
mov
outs
dec
arpl
outs
aam
ret
cmp
mov
fidivr
cmp
mov
pop
popf
adc
ror
je
iret
inc
je
iret
or
arpl
cmp
xor
push
ret
mov
mov
test
cmps
ss
or
out
mov
std
retf
sub
or
es
mov
adc
arpl
stos
(bad)
ds
std
(bad)
(bad)
out
xchg
mov
std
ds
xor
ret
xchg
adc
outs
pop
arpl
cmp
xor
push
ret
mov
mov
test
cmps
ss
or
out
mov
std
retf
sub
or
es
mov
adc
arpl
stos
(bad)
ds
std
(bad)
(bad)
out
xchg
mov
std
ds
xor
jp
xchg
adc
outs
pop
arpl
call
std
retf
cmp
add
retf
mov
mov
repnz
adc
push
inc
cmp
jb
cmp
mov
outs
inc
inc
inc
xor
dec
gs
and
call
loopne
mov
push
hlt
dec
inc
idiv
ds
inc
xchg
cmp
das
or
mov
ret
stos
jp
jne
(bad)
fyl2x
into
or
lods
loop
aaa
cmp
jge
jne
std
ds
jae
cmp
jb
cmp
(bad)
mov
outs
inc
inc
jmp
lock
retf
xchg
cld
jmp
xchg
ret
test
xor
pop
aaa
xchg
mov
add
stos
inc
addr16
std
ds
cmp
retf
dec
(bad)
and
push
daa
mov
test
enter
mov
mov
inc
push
aas
sub
enter
mov
push
jae
cmp
jb
cmp
(bad)
mov
outs
inc
inc
jmp
lock
retf
xchg
add
mov
mov
lds
xchg
or
dec
sahf
outs
or
mov
ret
sub
inc
mov
std
leave
cld
xrelease
mov
out
mov
std
ret
xchg
cmp
jbe
push
push
aas
sub
enter
test
outs
je
cmp
jae
adc
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
dec
or
mov
sub
adc
ror
push
jp
call
or
sub
mov
mov
call
and
sub
jp
push
pop
retf
add
icebp
mov
les
push
retf
std
push
cmp
cmp
mul
or
out
mov
std
sar
test
jecxz
ds
ins
push
sub
xchg
add
mov
loope
ja
jmp
dec
(bad)
xchg
or
jecxz
add
outs
jl
icebp
fidiv
icebp
loopne
stos
fiadd
jno
cmp
jb
inc
sub
push
push
outs
push
ds
retw
pusha
and
shl
aas
inc
sbb
cld
add
test
outs
ins
inc
loope
sub
icebp
fidiv
inc
cli
push
retf
dec
daa
retf
cmp
jo
inc
push
and
sub
arpl
movs
jb
mov
add
retf
bswap
and
push
retf
mov
test
push
inc
pop
int3
mov
outs
push
shr
std
ds
sub
retf
out
adc
add
adc
ror
cmp
or
xchg
jmp
outs
ins
push
inc
sub
dec
gs
cmp
inc
and
pop
jmp
push
inc
xor
push
pop
(bad)
mov
add
mov
xchg
sar
call
jp
inc
cmps
cmp
sub
retf
sbb
jbe
adc
mov
adc
dec
outs
outs
inc
arpl
xor
(bad)
mov
xor
leave
outs
or
inc
sub
xchg
inc
clc
mov
add
sbb
inc
cmp
retf
add
cmp
idiv
adc
mov
inc
sub
dec
or
arpl
cmp
or
int3
loop
push
jp
call
or
sub
mov
mov
call
and
sub
jp
push
pop
retf
add
icebp
int3
je
inc
sub
les
push
retf
std
push
cmp
cmp
mul
or
out
mov
std
sar
test
jecxz
ds
pop
push
sub
xchg
add
mov
movs
ja
jmp
dec
(bad)
xchg
or
jecxz
add
outs
jl
icebp
loopne
xchg
icebp
fimul
push
cmp
and
outs
push
ds
retw
pusha
and
mov
sbb
cld
add
test
outs
pop
inc
loope
sub
ja
add
retf
mov
xor
add
std
sar
jp
push
jmp
pop
and
jbe
cs
push
inc
arpl
xor
fiadd
mov
jp
sub
adc
inc
pop
add
and
sub
inc
mov
std
leave
cld
sti
mov
mov
add
adc
mov
inc
je
iret
inc
je
iret
or
push
retf
adc
mov
mov
lods
into
push
add
adc
push
retf
sub
icebp
stos
jnp
inc
movs
mov
sub
loope
cmp
xor
mov
inc
cmp
push
pop
sar
bound
cmps
mov
inc
sub
pop
cmp
xchg
inc
cmp
retf
mov
push
jecxz
jae
test
clc
inc
xor
pop
or
ds
outs
push
push
inc
sub
inc
mov
ret
into
cmp
xor
popf
adc
ror
cmp
xchg
inc
pusha
and
pop
add
pop
stc
mov
xor
mov
test
ret
jb
inc
bound
jp
pop
sbb
or
dec
inc
xor
enter
xchg
mov
ss
mov
pushf
outs
jl
aas
inc
ds
pop
sbb
or
dec
inc
cmp
enter
xchg
mov
ss
mov
pushf
outs
jp
into
ins
pop
add
ja
inc
mov
push
sub
retf
mov
inc
cmovg
xor
daa
xchg
in
std
ds
cmp
jp
sub
inc
stos
cmp
cmp
xchg
outs
jp
into
push
fxch
cli
mov
cs
pop
and
(bad)
jmp
(bad)
mov
cmc
or
in
jecxz
leave
or
add
jge
std
enter
sbb
je
iret
inc
je
iret
inc
je
iret
inc
je
iret
or
mov
mov
std
xchg
or
jecxz
add
sub
test
adc
std
ds
jecxz
ds
and
cmp
inc
ror
je
iret
inc
je
iret
or
jb
mov
sub
ds
or
inc
lods
mov
(bad)
(bad)
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
sub
jp
pop
add
ret
xchg
adc
sub
inc
push
push
dec
(bad)
retw
fs
mov
std
ds
ror
sub
inc
push
cld
(bad)
ds
dec
(bad)
retw
adc
jecxz
ds
ror
cmp
mov
mov
push
retf
std
dec
cmp
mov
mov
mov
in
ds
iret
mov
outs
inc
push
and
dec
daa
dec
jmp
mov
int3
mov
jecxz
add
ins
inc
mov
xchg
ss
mov
call
aas
mov
std
jns
pop
sub
cld
sti
addr16
push
int3
fs
mov
mov
aas
sub
push
jmp
cld
push
vpmaxsw
std
ds
sub
push
mov
iret
mov
outs
inc
push
and
dec
daa
jmp
test
es
and
mov
add
ins
inc
mov
push
inc
mov
add
mov
call
retf
xchg
jge
ss
mov
add
test
outs
mov
mov
std
xchg
or
pop
adc
mov
std
mov
inc
jp
inc
mov
mov
cmp
push
mov
mov
std
dec
fimul
pop
xchg
cmp
xor
xor
mov
or
sahf
rep
sbb
jmp
(bad)
cmp
push
mov
inc
sub
push
inc
cmp
jg
movs
push
jp
ins
inc
arpl
pop
stos
cld
mov
std
ds
sub
retf
(bad)
ds
fld
jbe
dec
ret
mov
mov
std
dec
gs
or
or
mov
daa
push
jmp
out
std
out
out
(bad)
(bad)
shr
jae
jecxz
call
daa
add
mov
ret
sub
retf
inc
ret
cmp
xor
call
and
sbb
jbe
into
stos
inc
mov
jecxz
mov
call
add
or
xchg
cmp
test
cmp
aas
mov
add
push
test
jecxz
(bad)
cmp
(bad)
ds
pop
add
xchg
jle
mov
pop
pushf
jns
inc
aas
(bad)
mov
inc
aas
retf
mov
inc
aas
aam
inc
aas
inc
je
iret
inc
je
iret
inc
cmp
inc
or
movs
jae
inc
data16
jecxz
jmp
dec
mov
mov
cmp
sub
adc
or
mov
sbb
mov
mov
std
cmp
inc
sub
(bad)
ds
cmp
sub
aaa
shl
sub
cmp
fcomp
repz
std
mov
outs
nop
ja
jecxz
leave
das
or
cmp
icebp
ss
cs
push
js
mov
ds
add
inc
ror
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
outs
inc
inc
or
push
enter
ds
lds
push
mov
add
nop
daa
inc
mov
in
mov
std
sar
add
mov
inc
je
iret
inc
je
iret
or
push
retf
push
xchg
or
pushf
fbstp
loopne
ds
mov
mov
xor
or
jns
sahf
out
cld
ds
inc
dec
aas
pop
adc
xor
mov
icebp
stos
jb
out
popa
ds
ins
jl
aas
bound
xor
cmp
jae
std
ds
outs
js
sub
inc
jmp
cmp
inc
sub
xchg
aas
bound
je
(bad)
ds
sbb
ins
(bad)
ds
add
and
jmp
mov
ins
ins
stos
mov
sbb
push
daa
ds
(bad)
ds
jb
inc
mov
add
ins
dec
push
out
popa
push
mov
not
inc
das
(bad)
ds
jp
inc
mov
add
ins
push
push
out
popa
inc
mov
outs
inc
dec
or
lds
mov
add
into
or
jp
(bad)
ds
dec
ja
jecxz
add
cmp
xor
jecxz
sar
daa
push
push
(bad)
ds
push
aas
mov
add
push
lds
mov
call
aas
mov
push
jp
pop
add
mov
jecxz
leave
dec
xchg
(bad)
ds
ret
pop
push
mov
sbb
jg
call
mov
cmp
in
shl
leave
cld
daa
add
sar
daa
(bad)
out
cmp
push
ds
cld
mov
in
ds
dec
inc
inc
xor
ret
cmp
sub
aaa
mov
dec
xchg
(bad)
ds
js
sub
mov
xchg
in
ds
stos
mov
cli
and
enter
int
in
lds
xchg
jmp
outs
ins
stos
inc
cmp
jp
repz
add
movs
add
add
mov
ret
pushf
adc
mov
or
jb
mov
jecxz
leave
cld
out
inc
or
push
retf
ret
cmps
(bad)
aas
mov
mov
mov
std
jno
ins
xchg
jg
jecxz
retf
jo
cld
ds
test
jl
in
ds
jg
ss
outs
inc
(bad)
ds
(bad)
ds
sahf
jle
mov
lock
mov
ds
test
ds
mov
not
jecxz
ds
je
iret
inc
je
iret
or
jb
mov
in
ds
sub
les
cs
std
jmp
ds
mov
jle
std
ds
push
ds
outs
mov
mov
std
test
cmp
push
inc
jp
inc
mov
addr16
or
adc
jp
out
mov
std
leave
cld
aaa
cmp
sub
cmp
les
pop
retf
cmp
test
mov
std
add
mov
call
les
or
add
in
mov
jecxz
ret
mov
jb
std
ds
push
retf
(bad)
ds
std
nop
mov
test
les
push
retf
cmp
lock
jp
std
ds
adc
jp
mov
jbe
std
ds
push
retf
add
(bad)
outs
push
inc
inc
jb
inc
mov
dec
xchg
mov
add
outs
dec
inc
inc
push
inc
mov
hlt
sbb
lods
and
(bad)
outs
xchg
jecxz
jecxz
test
cmp
push
cmp
cmp
sub
enter
mov
lods
mov
clc
out
enter
test
push
mov
mov
std
leave
div
cmp
cli
mov
jmp
push
inc
inc
sub
adc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
inc
xchg
inc
xchg
sahf
inc
mov
or
icebp
mov
jle
std
ds
jecxz
inc
cmp
cmp
add
mov
inc
je
iret
inc
xor
inc
inc
sub
inc
inc
sub
ds
fcomi
add
and
outs
jb
ret
outs
mov
mov
add
rol
je
iret
inc
je
iret
inc
sub
inc
inc
xor
inc
inc
cmp
dec
or
arpl
jo
rol
dec
cmp
and
or
sub
add
pop
outs
retf
ret
add
data16
xlat
mov
pushf
adc
mov
inc
je
iret
inc
xor
dec
or
jb
mov
repz
add
lods
and
adc
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
xor
inc
or
outs
iret
jb
movs
out
test
lds
xor
ror
je
iret
inc
sub
inc
push
int3
sub
mov
add
cmps
mov
inc
sub
inc
push
int3
xor
mov
push
add
mov
inc
sub
dec
jns
mov
inc
je
iret
inc
je
iret
inc
sub
inc
push
outs
push
ds
cmp
iret
inc
je
iret
jmp
je
iret
inc
je
iret
inc
je
iret
or
push
retf
push
test
cld
out
ds
outs
(bad)
retf
push
ret
xchg
pop
in
cmp
aas
sub
mov
jecxz
ret
mov
jbe
std
ds
es
les
daa
ret
(bad)
ds
jp
inc
jmp
or
js
mov
mov
out
in
cmp
xchg
inc
jb
inc
mov
xchg
(bad)
outs
test
mov
std
jno
imul
mov
rol
mov
dec
fstp
or
or
cli
pop
adc
movs
dec
test
mov
out
test
sub
xchg
icebp
retf
jp
adc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
mov
add
mov
pop
in
ds
sub
retf
(bad)
ds
fild
dec
call
hlt
xchg
cmp
add
aas
sub
retf
mov
mov
std
cmp
add
and
sbb
push
lock
repnz
test
in
ds
xor
dec
fadd
push
mov
std
ds
push
retf
sbb
jp
inc
ret
mov
outs
dec
arpl
outs
dec
ja
sub
int3
mov
loopne
test
push
(bad)
mov
adc
inc
jns
mov
inc
sub
inc
inc
xor
inc
or
mov
pop
in
ds
inc
retf
std
push
cmp
lds
mov
pop
add
mov
mov
jge
add
daa
(bad)
es
std
cmp
xchg
aas
bound
enter
popf
jns
jl
aas
bound
push
cld
out
sbb
jns
mov
cmp
push
xchg
or
jb
loop
jmp
and
push
retf
(bad)
ds
push
pop
inc
jb
inc
mov
xchg
mov
std
ds
xor
pop
cmp
std
ds
xor
int3
imul
push
xchg
aas
cmp
push
aas
sub
push
mov
or
xchg
(bad)
mov
dec
fstp
pop
sbb
mov
outs
sbb
inc
cmp
push
inc
lock
enter
retf
push
arpl
jo
inc
lds
xor
movs
outs
iret
push
pmovmskb
adc
sub
sub
sbb
ror
xchg
add
sub
sbb
js
dec
enter
mov
outs
pop
arpl
outs
push
(bad)
jo
aas
cmp
and
aam
out
test
sar
jno
lock
mov
bswap
int3
repnz
imul
les
adc
retf
ins
cmp
cmps
add
fiadd
mov
xor
xor
inc
sbb
leave
xchg
retf
(bad)
inc
enter
xor
and
pop
and
cmp
push
sti
outs
inc
pop
cmp
cmp
aas
push
and
pop
and
cmp
push
lds
ds
pop
call
mov
inc
je
iret
inc
je
iret
or
push
retf
push
retf
(bad)
ds
inc
outs
cmp
inc
mov
mov
push
lock
push
inc
outs
mov
std
ds
sub
pop
inc
xor
push
inc
jnp
inc
mov
push
retf
(bad)
ds
mov
adc
dec
xchg
inc
xor
xchg
pop
cmp
xchg
mov
add
add
push
or
cld
adc
ds
les
jecxz
ds
je
iret
inc
je
iret
inc
je
iret
or
push
xchg
inc
pusha
and
fwait
mov
test
push
dec
jg
imul
inc
sbb
xchg
mov
or
jp
cmp
or
jecxz
test
stos
inc
outs
mov
std
imul
inc
sub
and
push
ret
jno
(bad)
push
jnp
lds
aas
mov
mov
(bad)
mov
(bad)
in
or
mov
pop
outs
dec
aad
ss
xchg
mov
add
leave
outs
inc
xchg
test
jp
repz
mov
std
leave
cli
pop
sbb
cld
daa
(bad)
ds
lds
aas
mov
mov
mov
std
ds
jae
inc
mov
inc
enter
(bad)
repnz
ds
mov
dec
or
jecxz
add
jecxz
ds
xor
pop
inc
cmp
push
inc
imul
inc
xor
inc
cmp
int3
adc
dec
retf
ss
pop
cmp
(bad)
mov
sub
mov
outs
inc
mov
std
ds
ret
mov
cmp
xor
mov
mov
std
ds
outs
test
jecxz
jle
out
into
out
in
cmp
add
mov
xchg
adc
mov
inc
je
iret
inc
je
iret
cmp
push
xchg
or
mov
inc
imul
mov
mov
pop
in
ds
xchg
(bad)
aas
mov
xchg
(bad)
ins
jb
(bad)
push
push
dec
inc
mov
ds
ret
dec
or
arpl
into
add
sub
and
sti
sti
or
sti
jecxz
ss
(bad)
ds
push
ja
add
fimul
mov
imul
les
lods
xchg
fimul
xchg
mov
repnz
cmovae
mov
int3
bnd
adc
mov
and
push
and
movs
sub
adc
ret
xchg
outs
pop
arpl
outs
mov
cmp
add
retf
adc
mov
rol
add
adc
adc
and
stc
retf
inc
cmp
and
ins
inc
arpl
pop
mov
add
sbb
xor
xor
and
push
retf
aas
ret
cmp
aas
xor
pop
aas
push
and
outs
aaa
ds
pop
sahf
adc
add
pop
aaa
push
xchg
inc
pop
and
ror
ds
adc
mov
xchg
(bad)
push
add
sub
push
retf
or
shr
lods
mov
xor
inc
fmul
retf
hlt
mov
outs
out
les
loop
ss
(bad)
retf
push
cmp
inc
sub
outs
dec
jg
sub
les
hlt
mov
outs
mov
outs
cmp
mov
sti
inc
ret
cmp
adc
pop
cwde
jns
mov
inc
je
iret
inc
cmp
dec
inc
sub
inc
or
arpl
outs
xchg
mov
std
nop
inc
cmp
dec
or
test
dec
dec
jp
ror
je
iret
inc
je
iret
pop
aaa
push
xchg
inc
pop
and
pop
push
xchg
mov
mov
inc
sub
arpl
rol
out
jecxz
jns
ins
pop
arpl
stos
add
stc
jmp
and
jecxz
stos
es
cld
add
je
(bad)
ds
ret
enter
mov
cmp
(bad)
ds
add
mov
jo
mov
add
pop
int3
mov
mov
mov
push
outs
inc
dec
or
mov
jp
dec
test
mov
adc
mov
outs
dec
pop
cmp
add
jge
cmp
aas
sub
push
xor
mov
stc
out
and
ret
xor
push
add
add
and
push
ds
add
jo
pop
jo
std
ds
inc
ja
add
sub
xchg
mov
stos
inc
dec
(bad)
mov
inc
je
iret
inc
je
iret
inc
sub
inc
push
stos
jle
mov
std
ds
std
es
ds
cmps
mov
inc
je
iret
inc
je
iret
inc
xor
inc
or
(bad)
ds
mov
cli
in
ds
cmps
inc
mov
cmp
xor
in
ds
xchg
xchg
aas
mov
mov
(bad)
in
add
lock
outs
dec
dec
jmp
ins
inc
push
aas
sub
popf
jns
dec
xchg
lods
xchg
aas
sub
popf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
in
ds
sub
les
sub
jmp
add
std
cmp
adc
std
out
lea
stc
jecxz
lds
std
ds
std
ds
out
lods
daa
stc
jecxz
lds
std
ds
std
ds
shl
xchg
inc
inc
and
cmp
ds
cmp
jecxz
retf
(bad)
ds
inc
retf
xchg
into
ins
jp
out
push
ror
or
enter
dec
inc
popf
(bad)
ds
ins
push
icebp
int3
xchg
dec
in
ds
addr16
inc
mov
mov
ja
add
xor
outs
in
ds
std
xchg
mov
movs
or
ds
addr16
inc
mov
xor
icebp
movs
xchg
ficom
or
ds
sub
pop
inc
inc
mov
xchg
(bad)
call
push
inc
sub
pop
inc
adc
test
push
dec
jnp
xor
push
lahf
mov
ds
push
inc
inc
addr16
xchg
inc
call
cmp
aas
cmp
jg
in
mov
fmulp
add
xchg
fimul
mov
lds
lods
mov
fiadd
xchg
inc
adc
(bad)
cmp
jl
inc
cmp
jnp
jbe
aas
mov
outs
dec
inc
cmp
dec
mov
pusha
inc
retf
les
pop
ss
int3
adc
shr
add
push
nop
or
std
xchg
fidiv
mov
mul
push
mov
sub
sbb
and
inc
inc
and
inc
cmp
inc
sub
imul
into
jo
aam
outs
push
ja
movs
xchg
inc
pusha
and
pop
and
sub
jae
call
test
jecxz
jle
movs
xchg
(bad)
xchg
call
ja
push
and
sub
arpl
push
out
and
adc
push
cld
ds
(bad)
retf
push
retf
ds
stos
inc
push
mov
std
ds
sub
dec
lds
cmp
push
in
ds
ja
aas
mov
mov
repnz
ds
and
std
ds
cmps
xchg
dec
in
ds
movs
jno
or
sub
mov
add
mov
pop
popf
adc
add
(bad)
xchg
adc
aas
add
in
ds
dec
dec
cmp
std
ds
test
add
mov
mov
inc
je
iret
inc
je
iret
cmp
cs
or
mov
xchg
outs
test
je
(bad)
ds
mov
mov
out
mov
cli
pop
push
enter
retf
push
retf
(bad)
ds
dec
mov
sub
retf
or
lahf
xor
push
nop
or
push
pop
inc
xor
imul
arpl
test
cmp
mov
cli
in
cmp
cmp
aas
push
and
xor
push
xor
dec
pop
icebp
movs
xchg
fsubp
std
ds
push
adc
inc
cmp
ds
out
and
es
cmp
(bad)
ds
test
xchg
pop
ror
or
dec
inc
mov
push
arpl
jo
xchg
or
enter
retf
adc
cli
pop
sbb
mov
std
leave
out
outs
dec
jae
cmp
retf
lods
add
mov
cwde
inc
cmp
push
ja
add
retf
push
arpl
jo
iret
inc
sub
leave
or
sub
pop
rol
jg
sbb
int3
sub
enter
jae
les
arpl
ds
cmp
xor
mov
(bad)
mov
mov
pop
sbb
fisubr
arpl
outs
push
arpl
outs
inc
arpl
pushf
add
mov
add
mov
in
neg
mov
enter
enter
dec
inc
ds
ds
jp
fisubr
div
add
mov
add
jp
cmp
inc
mov
push
in
ds
push
out
and
es
cmp
cld
ds
inc
arpl
outs
dec
pop
neg
mov
ds
xchg
mov
std
ds
jp
aas
mov
mov
repnz
ds
outs
ror
js
ds
mov
dec
mov
std
ret
mov
mov
std
popf
adc
pop
ret
ror
or
enter
mov
inc
pop
pushf
jmp
adc
retf
(bad)
ds
std
xchg
ret
inc
outs
call
pop
pushf
adc
outs
jns
mov
inc
je
iret
inc
je
iret
cmp
push
xchg
inc
inc
and
outs
cmp
mov
ds
xchg
inc
in
ds
outs
xchg
aas
mov
cmp
xor
jb
inc
addr16
aas
mov
mov
push
in
ds
movs
jne
inc
outs
scas
inc
mov
push
ds
retw
movs
or
mov
cmp
ds
and
jecxz
cmp
ds
fwait
add
mov
add
(bad)
or
enter
enter
retf
cmp
addr16
aas
mov
mov
mov
std
dec
lods
mov
inc
sub
pop
aaa
std
xchg
(bad)
outs
dec
arpl
outs
out
cmp
ret
movs
jno
inc
cmp
sub
outs
dec
dec
inc
sub
jb
fucomi
les
outs
cmp
add
es
ja
ror
ret
inc
aas
xor
imul
and
dec
xchg
(bad)
mov
jmp
pusha
and
jns
nop
or
push
or
ds
mov
cli
pop
dec
ret
jle
ss
neg
mov
mov
outs
push
arpl
and
push
and
lock
retf
adc
jnp
inc
enter
enter
enter
mov
outs
jp
(bad)
outs
inc
arpl
outs
push
shr
pop
mul
inc
cmp
cmp
aas
sub
push
aas
push
and
pusha
and
outs
(bad)
cmp
imul
std
test
xchg
push
in
ds
movs
pop
pop
jbe
cmp
(bad)
cmps
pop
jb
aas
add
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
push
retf
sbb
ins
pop
arpl
outs
test
mov
std
leave
ins
mov
ds
ror
(bad)
ds
popf
fbstp
(bad)
mov
pop
scas
sub
mov
inc
clc
cmp
test
cmp
mov
inc
imul
mov
cmp
lds
aas
mov
cmp
ins
pop
arpl
ins
inc
arpl
outs
inc
jbe
sbb
cmp
dec
cmp
ds
xor
sbb
jbe
mov
jge
cmp
sub
cs
mov
dec
xor
mov
mov
cmp
aam
mul
sub
outs
jmp
es
addr16
jb
jge
and
jecxz
cmp
stos
(bad)
mov
(bad)
les
fs
aas
mov
std
shl
sbb
push
and
sub
dec
lds
ds
mov
adc
add
adc
mov
add
mov
aaa
rol
inc
mov
push
xchg
or
mov
(bad)
(bad)
ds
test
jecxz
leave
inc
jl
ds
mov
mov
std
xchg
push
std
leave
cmp
push
mov
aas
mov
jl
inc
jnp
inc
mov
mov
neg
mov
retf
mov
std
leave
push
cmp
mov
(bad)
shl
imul
add
stos
jne
or
call
jle
mov
mov
inc
in
ds
jae
aas
mov
cmp
xor
mov
mov
std
jno
ins
push
loop
(bad)
enter
dec
inc
add
arpl
in
ds
sub
xchg
outs
mov
pop
xchg
test
xchg
fisubr
ds
inc
outs
cmp
ds
fwait
call
imul
mov
dec
dec
icebp
shl
inc
movs
lds
mov
xchg
mov
pop
mov
inc
mov
ror
add
adc
cmp
dec
sub
xchg
inc
cmps
lds
mov
xor
rep
xor
add
or
push
or
mov
retw
sub
mov
jecxz
ds
sbb
sub
outs
push
inc
and
dec
retf
dec
cmp
dec
push
cli
pop
jbe
mov
std
leave
cmps
outs
mov
in
ds
jnp
inc
mov
mov
or
mov
arpl
outs
inc
mov
push
enter
jb
dec
mov
and
(bad)
movs
inc
sub
enter
jb
dec
mov
sub
(bad)
movs
inc
sub
enter
aas
mov
xor
sbb
inc
inc
inc
push
std
mov
mov
inc
call
dec
arpl
ins
and
std
ds
daa
or
sub
outs
lds
inc
mov
call
outs
inc
pop
and
inc
clc
add
ins
push
arpl
push
add
jbe
enter
dec
lds
imul
arpl
xor
push
sub
mov
mov
call
push
pop
aas
pop
and
mov
inc
inc
ss
ds
movs
jle
mov
xchg
(bad)
xchg
fisub
xchg
ficom
(bad)
ds
xchg
ficomp
(bad)
ds
xchg
fidiv
mov
fidivr
ds
dec
mov
mov
fisubr
add
xlat
outs
inc
arpl
outs
push
arpl
repnz
xchg
xor
ja
mov
std
dec
jne
xchg
(bad)
mov
and
cmp
mov
jb
inc
sub
xchg
inc
push
and
cli
pop
push
int3
retf
add
mov
aad
fiadd
movs
xchg
add
lods
jl
jo
std
ds
loopne
js
and
clc
loop
pop
ja
add
and
(bad)
les
or
mov
std
ds
cmp
xor
mov
and
sub
mov
std
leave
cli
pop
adc
(bad)
jmp
or
push
fs
cmps
aas
mov
std
mov
outs
inc
arpl
outs
push
arpl
push
ror
or
sub
push
inc
clc
mov
inc
add
fdiv
push
ss
(bad)
mov
mov
shl
icebp
movs
jp
inc
es
sub
movs
fiadd
movs
xchg
add
lods
jl
jo
std
ds
loopne
js
add
clc
loop
pop
inc
push
and
ins
and
std
ds
xor
push
inc
sub
jp
cmp
std
sub
xchg
fimul
mov
enter
cli
pop
push
push
outs
push
arpl
out
dec
sub
push
inc
clc
mov
mov
mov
in
hlt
cmp
lods
jl
jo
std
ds
loopne
js
and
clc
loop
pop
ja
add
and
(bad)
les
or
mov
std
ds
cmp
xor
mov
and
sub
mov
std
leave
cli
pop
adc
(bad)
repz
pop
fs
test
mov
std
mov
outs
inc
arpl
push
ror
or
push
out
retf
cmp
jecxz
out
cli
pop
push
int3
retf
push
cmp
add
es
bound
ds
cmp
xor
mov
xchg
jmp
add
in
lods
jecxz
or
mov
mov
std
adc
jo
lods
mov
test
mov
mov
retf
mov
dec
cmp
mov
jb
inc
cmp
addr16
mov
std
retf
mov
stos
sub
inc
cmp
xchg
mov
pop
push
int3
retf
push
cmp
add
es
bound
ds
cmp
xor
mov
xchg
jmp
add
in
lods
jecxz
or
mov
mov
std
adc
jo
lods
mov
call
pop
mov
cmp
push
inc
mov
mov
fidivr
ds
push
xchg
push
jecxz
arpl
std
ds
xor
mov
and
inc
inc
and
cmp
jnp
xor
outs
inc
xor
ja
sub
jae
fs
ds
push
arpl
outs
push
arpl
out
enter
retf
pop
inc
jle
int
cli
pop
inc
enter
retf
add
add
(bad)
enter
retf
cmp
pop
and
movs
xchg
ficomp
or
ds
cmp
retf
inc
int3
ret
sbb
xchg
(bad)
cmp
arpl
repnz
std
retf
outs
retf
sbb
jecxz
sbb
mov
fidivr
mov
into
rol
add
jnp
cmp
aas
sub
cmps
aas
cmp
xchg
aas
inc
and
aas
push
and
outs
test
mov
mov
push
in
ds
jnp
inc
mov
inc
retf
mov
mov
std
jns
inc
sbb
adc
cmp
mov
je
iret
inc
je
iret
aaa
rcr
inc
mov
push
xchg
or
mov
jmp
aas
sub
mov
ficom
add
mov
rol
addr16
push
outs
inc
inc
mov
add
ins
add
hlt
outs
call
mov
xchg
xchg
std
ds
sub
dec
jo
std
ds
(bad)
leave
ret
xor
loop
mov
fisubr
leave
mov
leave
mov
rol
hlt
arpl
jns
call
int
xor
retf
ret
lock
inc
pusha
and
test
aas
ret
jnp
jl
add
ins
push
arpl
push
(bad)
jb
push
jb
lds
aam
int
xchg
ret
fsubp
std
lds
xchg
cmps
add
inc
cmp
arpl
pop
shl
popf
(bad)
ds
mov
mov
sbb
inc
mov
xchg
jmp
out
retf
and
jecxz
dec
mov
jecxz
mul
inc
cmp
push
mov
mov
std
cmp
jbe
(bad)
aas
mov
jle
mov
std
ds
jecxz
(bad)
cli
pop
push
cld
mov
std
ds
xor
pop
inc
clc
sub
cli
pop
push
inc
mov
std
mov
cmp
std
ds
js
jae
jecxz
stc
mov
std
ds
mov
cmp
ds
inc
arpl
outs
push
arpl
outs
add
xchg
imul
arpl
outs
icebp
int3
dec
in
rol
jecxz
ret
aaa
mov
es
lds
ret
aas
lea
xlat
mov
(bad)
mov
(bad)
inc
ret
aas
enter
retf
xor
xchg
inc
clc
and
mov
sti
jnp
inc
mov
inc
mov
xor
pop
lds
mov
pop
popf
adc
jg
shr
std
ds
mov
inc
je
iret
or
mov
sub
push
xchg
cmp
pop
retf
pop
inc
lds
aas
mov
mov
and
mov
outs
inc
push
push
outs
inc
push
mov
or
jp
cmp
stos
aas
mov
mov
inc
sbb
xchg
mov
jmp
jl
in
sub
sbb
add
xchg
loop
dec
cmp
jge
or
mov
push
call
add
ds
rol
jbe
add
mov
push
push
(bad)
pusha
cmp
cld
sti
xor
adc
ds
outs
push
ds
call
ret
out
ds
xor
inc
xor
push
cmp
or
cmp
pop
enter
dec
inc
xor
ds
push
arpl
ins
cmp
adc
xchg
adc
jecxz
adc
mov
iret
inc
sub
dec
or
arpl
pusha
and
stos
xchg
or
add
sahf
iret
cld
ds
ret
movs
jae
adc
jecxz
add
or
stc
repz
push
loope
mov
inc
lods
mov
adc
dec
arpl
jo
clc
cli
xor
xor
adc
xor
and
and
int
dec
mov
std
ret
cmp
xchg
mov
(bad)
outs
call
inc
mov
mov
mov
repnz
and
repz
xor
add
arpl
data16
or
and
push
retf
dec
inc
cmp
pop
pushf
adc
(bad)
ds
cmp
inc
gs
aas
mov
sub
mov
outs
inc
jno
inc
pop
call
mov
inc
je
iret
or
jb
mov
outs
inc
inc
or
push
ret
xchg
outs
in
ds
or
jg
adc
xor
std
ds
rcr
(bad)
mov
pop
repz
mov
cmp
push
xchg
or
jb
retf
ds
push
inc
mov
mov
outs
in
ds
stos
jae
cmp
cmp
(bad)
sbb
shl
sbb
xlat
mov
std
mov
outs
add
mov
std
(bad)
mov
push
inc
mov
xchg
lds
aas
mov
mov
jecxz
xchg
aas
xor
push
aas
cmp
pop
inc
sub
pop
inc
in
mov
outs
push
push
cmp
jp
cmp
add
in
cmp
ds
retw
mov
add
in
cmp
ds
inc
jo
repz
std
retf
cli
mov
out
mov
std
retf
ret
jecxz
xchg
push
sbb
(bad)
or
and
mov
mov
fimul
mov
into
stos
(bad)
ds
std
shl
mov
test
inc
icebp
movs
xchg
(bad)
or
push
jecxz
ds
lock
jb
inc
mov
pop
enter
pushf
cmp
inc
xchg
or
mov
cmp
(bad)
ds
pushf
div
ins
pop
arpl
push
sbb
stc
pop
cmp
sti
push
daa
(bad)
std
cmp
or
adc
cmp
push
aas
pop
and
mov
std
ds
in
xchg
mov
jecxz
(bad)
or
cmp
cli
pop
ds
mov
aas
xor
pop
adc
or
xchg
mov
outs
dec
inc
aas
cmp
outs
inc
sub
xor
inc
inc
(bad)
ds
(bad)
dec
inc
inc
add
mov
push
arpl
jno
mov
or
push
enter
retf
push
ret
mov
cmp
push
aas
xor
push
inc
out
xchg
inc
sub
ds
dec
push
inc
cmp
retf
es
ss
mov
inc
sub
jg
xor
adc
hlt
cmp
addr16
ds
mov
fisub
xor
mov
std
mov
outs
aad
mov
loopne
mov
std
leave
inc
jp
aas
mov
or
repz
jmp
mov
aas
mov
out
sub
pushf
pop
aas
mov
dec
xchg
push
jno
arpl
cmp
push
loopne
ds
aam
add
push
cld
ds
jp
cli
outs
inc
arpl
push
les
pop
ds
push
int3
dec
cmp
push
cld
ds
jp
cli
outs
inc
arpl
popf
(bad)
ds
mov
mov
mov
mov
mov
ins
cmps
test
mov
dec
inc
sbb
inc
test
add
test
pop
arpl
outs
dec
outs
cmp
std
ds
xor
arpl
mov
xor
xchg
(bad)
xchg
ins
xor
add
cmp
mov
std
sti
mov
std
ds
push
mov
inc
sub
jg
xor
add
jecxz
ret
cmp
sub
mov
mov
fisub
xor
mov
std
mov
outs
aad
mov
loopne
mov
std
leave
inc
ja
aas
mov
or
repz
jmp
mov
aas
mov
out
sub
pushf
pop
aas
mov
dec
xchg
push
jno
arpl
cmp
adc
std
ds
aam
add
push
sti
ds
jp
cli
outs
inc
arpl
outs
int3
add
push
gs
lahf
pop
les
pop
ds
push
int3
cmp
mov
add
cmp
jp
cli
outs
inc
arpl
popf
(bad)
ds
mov
mov
mov
mov
mov
ins
cmps
test
mov
dec
inc
sbb
inc
test
add
test
or
dec
and
inc
and
mov
repnz
repz
ret
or
ds
mov
ds
(bad)
ds
xor
pusha
sub
fisub
push
(bad)
sahf
xchg
idiv
mov
ret
movs
or
ds
sub
xchg
and
mov
jecxz
imul
retf
clc
rcr
mov
mov
std
cmp
xor
inc
jo
adc
iret
es
mov
aaa
dec
int3
or
inc
xchg
or
dec
cmp
test
les
std
retf
inc
retf
inc
retf
test
out
jp
popa
push
xchg
push
jno
arpl
cmp
(bad)
std
cmp
or
xor
inc
retf
inc
push
iret
push
ret
jb
cmp
ds
inc
sbb
push
(bad)
outs
pop
arpl
outs
dec
arpl
popf
add
mov
add
mov
cmp
enter
retf
push
retf
(bad)
ds
dec
arpl
push
int3
enter
retf
mov
mov
std
retf
mov
inc
xor
retf
cmp
pop
call
mov
push
in
ds
xor
outs
aas
daa
or
cli
pop
sub
or
mov
into
outs
inc
arpl
pop
push
xchg
ins
push
pop
aas
daa
and
add
or
jb
mov
pushf
(bad)
ds
mov
mov
std
leave
std
out
xchg
ret
add
inc
xor
add
aas
xor
std
ds
mov
push
std
ds
push
ret
cmp
out
popf
jns
mov
jbe
(bad)
mov
jge
std
ds
mov
cli
in
mul
inc
icebp
movs
jp
inc
jb
inc
mov
les
mov
dec
arpl
jecxz
add
mov
or
mov
and
push
retf
cld
dec
aas
push
inc
mov
les
es
aas
cmp
enter
xchg
sub
retf
mov
inc
or
adc
cmp
(bad)
ds
into
retf
add
jbe
sbb
mov
(bad)
ds
fidivr
mov
std
ds
cmp
xor
pop
popf
adc
or
(bad)
xor
mov
std
ds
jecxz
jns
repz
add
lods
cmp
pusha
and
inc
and
out
ss
inc
in
sub
jmp
inc
mov
cmp
xor
pop
add
mov
std
cmp
(bad)
mov
pushf
(bad)
ds
mov
dec
in
ds
test
dec
inc
jp
inc
mov
inc
jp
pop
add
mov
std
cmp
or
mov
hlt
add
outs
test
and
push
jp
repz
mov
std
retf
fs
ds
dec
aas
inc
pop
add
inc
test
ds
in
mov
hlt
cmp
or
int3
dec
std
xchg
mov
add
jp
mov
inc
in
ds
push
inc
mov
cmp
xor
outs
add
dec
push
movs
inc
bound
mov
mov
std
jns
pop
or
int3
dec
std
xchg
mov
add
jp
mov
dec
in
ds
ins
add
ds
lds
mov
and
jb
inc
mov
mov
jnp
cmp
aas
sub
pop
lds
ds
mov
out
xchg
xchg
inc
mov
jb
icebp
shl
sub
pop
mov
(bad)
sub
stos
inc
inc
in
aas
mov
in
les
mov
add
inc
cli
jecxz
(bad)
std
ds
push
and
test
int
in
cmp
(bad)
ds
jp
into
outs
dec
arpl
outs
inc
aas
cmp
xchg
inc
mov
or
popa
mov
(bad)
data16
inc
xor
mov
je
(bad)
ds
mov
xchg
mov
add
outs
push
arpl
outs
mov
push
std
ds
sub
daa
jbe
std
cmp
jbe
cmp
jp
cmp
add
in
cmp
ds
inc
sub
dec
inc
jo
add
pushf
sub
test
pop
sbb
leave
retw
xor
retf
push
retf
push
jg
test
std
ds
mov
push
inc
jb
inc
mov
cmp
aas
sub
pop
lds
ds
mov
aas
push
or
and
ins
ins
push
inc
jb
inc
mov
xchg
adc
dec
jns
mov
inc
je
iret
inc
je
iret
cmp
inc
xchg
or
arpl
cmp
cmp
mov
xchg
div
pop
sbb
cmp
(bad)
ds
mov
mov
outs
inc
cmp
or
or
jecxz
add
inc
pop
pushf
jmp
sub
retf
push
retf
xchg
retf
arpl
outs
push
push
cli
pop
adc
mov
std
mov
cmp
mov
ds
aas
xor
jg
sub
jnp
ds
retf
mov
push
popf
add
mov
lock
jno
inc
mov
or
jno
inc
mov
mov
fidivr
mov
sbb
std
ds
xor
fwait
inc
xor
xchg
cmp
push
retf
dec
arpl
outs
dec
arpl
outs
pop
enter
retf
inc
inc
mov
mov
loop
sub
fisub
push
xchg
sahf
adc
ds
ret
movs
or
ds
sub
xchg
and
mov
jecxz
imul
retf
clc
rcr
mov
mov
std
cmp
xor
inc
jo
adc
iret
es
mov
cmp
or
inc
xchg
or
les
mov
mov
cmp
mov
adc
inc
retf
inc
les
push
xchg
push
jno
arpl
ss
daa
(bad)
xlat
std
cmp
or
cli
pop
inc
stc
mov
std
ds
mov
add
inc
lods
sar
inc
lock
pusha
sub
mov
mov
mov
sub
test
outs
lock
push
retf
push
retf
es
add
inc
test
push
arpl
ins
das
retf
sbb
pushf
outs
dec
arpl
and
mov
mul
call
sahf
add
mov
add
mov
in
ds
pusha
and
(bad)
xchg
outs
loop
ds
xor
retf
ss
xor
xchg
xor
retf
cmp
daa
call
xchg
push
in
outs
jmp
jb
fisubr
inc
es
in
inc
pop
enter
div
addr16
je
iret
inc
je
iret
or
jb
mov
pushf
(bad)
ds
mov
mov
std
leave
std
out
xchg
ret
add
inc
xor
add
aas
xor
std
ds
mov
push
std
ds
push
ret
cmp
out
popf
jns
mov
jbe
(bad)
mov
jge
std
ds
mov
cli
in
mul
inc
icebp
movs
jp
jge
adc
mov
std
leave
inc
clc
(bad)
ds
dec
addr16
push
aas
mov
std
popf
outs
in
ds
ror
je
iret
inc
je
iret
inc
je
iret
cmp
cs
or
mov
cmp
(bad)
ds
pushf
div
jl
ds
inc
arpl
outs
test
jecxz
(bad)
adc
push
les
dec
arpl
push
sbb
stc
or
daa
out
std
cmp
push
sahf
adc
pop
ret
ror
clc
or
xor
dec
sub
inc
sub
sub
enter
retf
push
arpl
outs
xchg
(bad)
out
xchg
fimul
xchg
mov
aaa
push
enter
retf
inc
retf
mov
cmp
pop
inc
jp
inc
mov
xchg
(bad)
ss
fisubr
or
ds
push
mov
inc
sub
imul
std
ret
cmp
addr16
inc
mov
mov
ficom
xor
mov
std
mov
outs
aad
mov
loopne
mov
std
leave
inc
jns
aas
mov
or
repz
jmp
mov
aas
mov
out
sub
pushf
pop
aas
mov
dec
xchg
push
jno
arpl
cmp
retf
ds
aam
add
push
(bad)
ds
jp
out
inc
arpl
outs
fadd
mov
and
or
mov
(bad)
enter
mov
cli
pop
sub
mov
add
cmp
ds
jp
out
inc
arpl
popf
(bad)
ds
mov
mov
mov
mov
mov
in
cmps
test
mov
dec
inc
sbb
inc
test
add
test
dec
arpl
mov
retf
inc
retf
inc
out
jecxz
mov
add
xor
dec
cmp
or
arpl
outs
dec
arpl
outs
push
arpl
and
or
xor
xchg
jno
cmp
je
std
ds
leave
adc
xor
xchg
push
jno
arpl
cmp
push
aam
cmp
or
adc
outs
jns
jp
out
inc
arpl
push
ror
outs
(bad)
adc
int
enter
retf
push
retf
push
retf
inc
retf
mov
inc
cmp
retf
es
xchg
fimul
xchg
push
in
ds
pop
push
enter
sbb
inc
popf
aas
das
adc
stc
or
mov
std
adc
outs
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
cmp
push
xchg
or
mov
mov
std
xchg
inc
jb
inc
mov
mov
outs
in
ds
xchg
retf
cmp
les
adc
ds
ret
movs
jae
adc
aas
add
retf
arpl
push
fxch
mov
outs
dec
inc
inc
push
inc
mov
xchg
(bad)
mov
inc
cmp
enter
retf
(bad)
ds
sar
out
ins
push
arpl
outs
push
arpl
test
pop
and
dec
pop
and
int3
sub
mov
add
dec
outs
inc
arpl
outs
dec
arpl
sub
jns
push
pop
movs
inc
cmp
dec
sbb
push
aas
inc
push
and
jp
inc
mov
inc
ret
cmp
aas
push
and
xchg
mov
retf
retf
mov
mov
ins
xchg
(bad)
jmp
xchg
ins
dec
dec
(bad)
ins
inc
addr16
jecxz
adc
pop
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
aaa
ror
mov
push
xchg
or
mov
fiadd
ds
test
mov
std
leave
inc
jl
ds
inc
arpl
fwait
(bad)
ds
rcr
inc
xchg
mov
mov
xchg
fimul
add
cli
pop
sub
cmp
push
inc
cmp
or
jecxz
add
inc
pop
pushf
adc
mov
sub
enter
push
cli
pop
cs
mov
std
leave
mov
outs
dec
inc
inc
imul
ficomp
mov
fiadd
ds
inc
arpl
outs
pop
inc
inc
pop
or
add
xchg
inc
sub
retf
xchg
inc
in
cmp
xchg
fidiv
xchg
sub
std
ds
das
and
jb
inc
mov
mov
fidivr
cmp
fisub
push
nop
sahf
cmps
jmp
mov
ret
movs
or
ds
pop
and
cmp
push
mov
mov
call
xchg
inc
xor
retf
mul
std
ds
jo
adc
pop
or
leave
dec
sbb
inc
mov
mov
mov
jecxz
mov
and
fisub
push
nop
sahf
aaa
in
ds
out
jp
sub
mov
fisubr
mov
fld
ret
xchg
cmp
push
push
in
ds
dec
retf
push
inc
cmp
jp
and
push
int3
cli
pop
ds
push
int3
adc
mov
add
cmp
aas
mov
pop
arpl
outs
jb
(bad)
xor
cmp
push
arpl
outs
push
fisubr
arpl
jo
aam
mov
sub
jae
sbb
stos
fimul
mov
dec
sub
test
into
sbb
scas
repz
cmps
in
ds
cmp
push
inc
call
inc
cli
pop
xor
mov
outs
inc
arpl
outs
jp
fisubr
movs
cmp
inc
aas
inc
and
or
add
dec
arpl
ss
daa
ss
cmp
xor
adc
inc
retf
inc
lea
mov
mov
sub
fimul
or
mov
dec
cmp
jmp
add
dec
arpl
out
movs
aas
jmp
inc
jmp
(bad)
pop
push
retf
adc
add
xor
cli
pop
sbb
xchg
arpl
ins
dec
arpl
repnz
mov
js
out
jecxz
mov
pop
mov
loop
mov
mov
mov
outs
aas
xor
xchg
inc
sub
pop
clc
push
into
enter
dec
inc
jmp
push
(bad)
outs
mov
ds
jmp
mov
shl
cmp
jno
icebp
aam
pop
pop
cmp
xchg
sahf
(bad)
addr16
movs
or
ds
inc
and
inc
sub
pop
loope
mov
inc
mov
aaa
inc
xor
push
add
ins
dec
arpl
outs
push
(bad)
outs
mov
ds
sub
push
cmp
ds
sub
push
inc
xor
pop
icebp
movs
or
ds
lock
or
retf
push
retf
and
mov
jecxz
jnp
push
dec
ret
jp
and
push
int3
or
ds
or
and
mov
add
cmp
ds
pop
arpl
outs
jb
(bad)
xor
aaa
pop
in
pop
sbb
add
dec
jne
adc
repnz
jbe
add
add
sub
dec
xchg
sub
push
inc
cmp
dec
inc
xor
pop
mul
inc
icebp
movs
xchg
(bad)
jnp
inc
mov
std
cmp
std
test
retf
cmp
clc
out
mov
and
into
push
in
ds
sub
enter
sahf
aas
inc
push
enter
test
inc
pop
div
gs
jecxz
add
and
lods
jl
inc
sub
retf
and
sahf
call
push
aas
mov
jmp
adc
xor
adc
mov
je
iret
inc
je
iret
or
mov
and
push
retf
cld
dec
aas
push
inc
mov
les
(bad)
in
inc
aas
inc
cmp
retf
(bad)
ds
ret
mov
add
add
adc
push
adc
aas
mov
addr16
or
bswap
or
push
retf
ds
mov
xor
aas
push
add
sti
jecxz
ds
mov
mov
mov
jns
adc
je
iret
inc
je
iret
cmp
push
xchg
inc
inc
and
pop
std
retf
mov
jb
std
ds
outs
(bad)
aas
mov
cmp
aas
pusha
and
pusha
and
pusha
and
jno
inc
mov
push
xchg
inc
push
dec
int3
push
adc
stos
(bad)
mov
mov
jecxz
cmp
cli
jecxz
ds
and
cmp
aas
pusha
and
push
xor
jge
and
cmp
aas
pusha
and
inc
xor
jge
and
xor
and
aaa
mov
sub
inc
mov
sub
inc
out
ds
into
cmp
mov
sub
dec
xor
aas
pusha
and
bsr
jecxz
add
(bad)
daa
inc
xor
adc
into
push
std
push
cli
pop
push
lahf
clc
daa
inc
xor
adc
mov
cmc
add
outs
push
arpl
ins
push
pop
inc
sub
les
sbb
xor
or
xchg
std
ds
cmp
les
jecxz
leave
jge
jnp
cmp
dec
cmp
movs
(bad)
push
or
mov
test
sub
std
ds
and
test
lds
in
test
mov
ror
cmp
cmp
and
js
fadd
popa
sub
sbb
fcmovnu
dec
(bad)
ds
mov
aaa
loop
jmp
and
pusha
and
inc
and
xor
test
or
sbb
movs
add
jbe
or
xchg
sar
jecxz
push
and
jmp
and
dec
jg
jecxz
jno
addr16
ret
xchg
inc
sub
push
inc
push
and
das
push
jg
test
cmp
aas
sub
push
aas
push
and
pop
and
outs
push
cmp
adc
cmps
mov
sub
inc
aas
cmp
inc
aas
mov
out
inc
aas
mov
out
inc
aas
mov
out
inc
aas
or
jb
mov
sub
test
inc
fadd
jmp
jecxz
add
mov
inc
inc
mov
std
ds
or
mov
std
leave
cld
aaa
cmp
cmp
(bad)
std
cmp
sub
add
push
retf
dec
pop
int3
mov
xchg
cs
xchg
push
scas
push
ss
ds
add
ins
inc
inc
adc
add
jbe
add
or
or
dec
xchg
and
push
ds
in
add
ins
inc
dec
adc
sub
inc
inc
xor
inc
or
out
inc
xchg
stos
inc
mov
jno
cmp
add
inc
in
dec
ds
retw
sub
aas
mov
std
add
mov
pop
add
push
les
push
retf
std
push
cmp
sbb
test
jecxz
ds
inc
push
mov
std
ds
mov
mov
cmc
add
stos
inc
inc
xchg
inc
aas
jge
push
aas
mov
std
add
mov
pop
add
push
les
xor
test
push
dec
dec
inc
xor
test
mov
jecxz
pop
cmp
les
mov
inc
push
mov
std
ds
mov
jbe
std
ds
es
cld
out
test
jecxz
ds
inc
push
mov
std
ds
mov
inc
je
iret
inc
sub
pop
or
arpl
cmp
retf
mov
imul
je
inc
movs
mov
jbe
std
ds
cmp
dec
jge
and
jecxz
ds
outs
inc
dec
or
arpl
xor
retf
and
mov
outs
adc
cmp
(bad)
ds
mov
inc
outs
dec
dec
or
mov
cmp
add
inc
je
iret
or
push
retf
push
retf
(bad)
ds
inc
push
inc
inc
push
les
sbb
add
mov
and
dec
retf
dec
nop
or
test
enter
test
outs
dec
dec
inc
jnp
inc
mov
push
retf
mov
inc
xor
addr16
outs
inc
arpl
xor
xchg
mov
add
mov
test
inc
cmp
retf
(bad)
ds
ret
enter
pop
cmps
test
pop
call
mov
(bad)
in
retf
mov
stos
pop
mov
outs
dec
push
jge
std
ds
add
aas
xor
sahf
adc
ror
je
iret
inc
je
iret
inc
je
iret
or
arpl
nop
(bad)
ds
mov
shr
dec
inc
cmp
retf
addr16
pop
outs
dec
inc
or
add
inc
bound
retf
mov
inc
push
and
xor
imul
test
push
mov
scas
pop
add
scas
outs
inc
arpl
outs
xchg
pop
mov
std
xchg
inc
lock
cld
sti
dec
retf
mov
xor
ds
mov
stos
xchg
sub
inc
xchg
outs
leave
enter
pop
sub
mov
mov
std
ds
inc
pop
pushf
adc
mov
inc
je
iret
cmp
adc
fiadd
push
cld
mov
std
ds
sub
cmps
push
in
or
std
dec
inc
mov
mov
add
stos
add
stc
out
push
cli
jecxz
mov
mov
std
jns
ins
pop
arpl
push
push
retf
std
push
cmp
jb
inc
push
inc
mov
xchg
xor
or
pop
mov
std
jns
ins
jp
into
repnz
jnp
add
inc
sub
dec
movs
mov
out
in
ds
(bad)
enter
retf
or
ds
jp
inc
mov
xchg
inc
push
inc
mov
xchg
cmp
xchg
jge
popf
push
cli
jecxz
xor
jecxz
leave
xor
sbb
pop
or
push
mov
int3
fdivr
mov
add
icebp
(bad)
icebp
lods
jae
inc
sub
cmp
cmp
inc
sub
les
clc
inc
aas
lahf
jne
ds
add
leave
daa
(bad)
daa
cmp
std
ds
(bad)
inc
pusha
and
clc
push
jp
pop
daa
retf
les
pop
ret
push
stos
add
retf
daa
inc
mov
call
push
cli
jecxz
lea
and
(bad)
les
pop
push
fsubr
adc
sbb
lds
test
(bad)
retf
push
retf
adc
cmp
mov
mov
mov
scas
outs
dec
arpl
imul
mov
jecxz
ret
mov
jmp
inc
mov
mov
push
xor
std
cmp
push
ds
ins
inc
pop
inc
sub
push
inc
xor
jg
cmps
add
jnp
cmp
aas
sub
push
lds
cmp
adc
add
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
inc
ins
mov
iret
jmp
retf
xchg
inc
je
iret
pop
aaa
push
xchg
or
outs
popf
push
sbb
ds
inc
fwait
icebp
movs
jp
inc
sub
retf
(bad)
ds
mov
aas
mov
std
mov
outs
push
shl
dec
inc
sub
pop
inc
cmp
add
push
dec
gs
mov
inc
ss
xchg
mov
es
push
retf
es
add
mov
cmps
push
jp
ins
inc
arpl
ins
push
arpl
pop
mov
ds
mov
jmp
retf
sub
icebp
shl
aam
stos
fimul
mov
mov
(bad)
jp
pop
add
cmps
outs
push
arpl
outs
lea
mov
std
xchg
inc
call
dec
int3
stc
out
dec
(bad)
or
sub
sar
add
or
adc
aam
test
lahf
aas
das
pop
retf
(bad)
ds
xlat
sahf
adc
cmp
adc
retf
push
ds
ror
je
iret
inc
je
iret
inc
sub
dec
inc
xor
dec
aas
in
ror
je
iret
inc
sub
dec
jge
std
ds
ror
je
iret
cmp
push
retf
push
retf
push
xchg
inc
inc
and
outs
das
retf
(bad)
ds
dec
inc
mov
in
ds
jo
ds
jb
into
outs
clc
jb
outs
mov
mov
std
jno
imul
enter
enter
dec
inc
mov
dec
arpl
cmp
mov
adc
stos
outs
dec
arpl
outs
xor
mov
push
inc
leave
mov
cmp
xor
imul
pop
inc
mov
cmp
mov
inc
loop
pop
(bad)
dec
mov
inc
inc
and
int
xor
enter
adc
xchg
out
jmp
inc
xor
imul
mov
mov
pop
retf
dec
nop
inc
xor
pop
or
inc
or
les
mov
push
arpl
outs
inc
arpl
retw
xor
outs
inc
pop
and
movs
add
ins
dec
arpl
jo
aam
jecxz
ds
in
ds
movs
xchg
(bad)
or
or
std
adc
call
mov
inc
je
iret
inc
je
iret
inc
sub
dec
or
arpl
sub
push
mov
std
ds
xor
jecxz
push
push
retf
push
xchg
loope
mov
das
outs
retf
add
icebp
movs
jno
inc
cli
inc
mov
push
mov
arpl
outs
mov
jecxz
jle
stos
add
ins
inc
arpl
pop
int
adc
add
mov
inc
sub
dec
or
arpl
outs
xor
imul
stos
(bad)
xchg
(bad)
mov
(bad)
outs
dec
lock
jp
push
or
int
xchg
imul
icebp
movs
jo
inc
das
outs
int3
or
dec
test
or
aam
mov
mov
fimul
mov
jmp
ret
add
mov
rol
mov
idiv
adc
je
iret
inc
je
iret
inc
je
iret
inc
sub
dec
inc
xor
inc
or
jecxz
ds
ss
(bad)
ds
mov
ds
push
xchg
inc
pop
and
fiadd
dec
hlt
outs
add
leave
(bad)
and
dec
imul
int3
retf
xchg
shl
mov
retf
push
jg
ss
jno
inc
into
xor
inc
cmc
ds
jmp
int3
or
(bad)
push
mov
push
div
jno
movs
clc
inc
ds
cmp
mov
push
adc
mov
std
ret
mov
jno
dec
mov
test
outs
push
arpl
outs
inc
arpl
and
ds
sub
pop
icebp
movs
or
ds
pop
sahf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
cmp
adc
cli
pop
and
or
push
xchg
jmp
mov
mov
jmp
sbb
xchg
xlat
in
or
push
retf
cs
sbb
ins
dec
arpl
jo
shl
mov
imul
div
fwait
add
mov
mov
ins
inc
arpl
push
mov
mov
xrelease
jmp
mov
xor
jmp
call
adc
mov
fiadd
retf
sub
(bad)
jo
scas
std
sub
int3
or
add
mov
test
aas
add
sub
ins
pop
arpl
push
mov
aas
inc
add
int3
rcr
test
adc
inc
and
fiadd
mov
jo
inc
mov
cmc
mov
mov
aas
inc
and
stos
mov
ficom
jmp
jae
pusha
and
clc
aas
int3
or
add
aas
mov
mov
inc
ds
test
into
and
cmp
repnz
jecxz
retf
es
push
test
xor
jecxz
mov
pop
cmp
lds
cmp
adc
add
cmps
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
sub
test
inc
fadd
add
arpl
arpl
data16
std
arpl
dec
push
xor
sub
(bad)
data16
mov
cmp
push
mov
out
push
inc
jmp
xor
(bad)
mov
mov
add
outs
dec
addr16
movs
inc
dec
cmp
jb
cmp
add
lds
aas
mov
mov
jge
add
jge
std
ds
sub
push
cld
pop
add
mov
xor
pop
adc
shl
(bad)
es
sub
std
ds
add
inc
lahf
jbe
ds
or
mov
add
int3
cmp
jecxz
test
stos
inc
mov
jecxz
ds
add
and
xor
add
into
(bad)
dec
jge
add
or
adc
mov
add
into
dec
retf
mov
mov
std
jns
ins
dec
mov
repz
push
or
mov
test
sub
stos
inc
inc
mov
inc
aas
inc
cmp
jp
outs
mov
aas
mov
mov
mov
std
imul
std
ds
push
pop
cmp
in
cld
aaa
cmp
out
les
mov
pop
add
jbe
aas
sub
jns
inc
aas
xlat
cli
inc
aas
(bad)
inc
aas
(bad)
inc
aas
in
cli
inc
aas
in
cli
inc
aas
inc
je
iret
inc
je
iret
or
push
xchg
inc
pusha
and
in
aas
mov
call
ins
test
ds
push
enter
mov
jecxz
inc
or
out
mov
mov
addr16
or
xrelease
mov
addr16
or
adc
test
push
mov
aas
pop
aas
(bad)
std
mov
sbb
jo
or
jecxz
lods
mov
hlt
xchg
outs
ins
dec
inc
ret
jg
lahf
dec
(bad)
ds
push
enter
lods
(bad)
outs
pop
arpl
fs
in
(bad)
ror
mov
ins
in
mov
cmp
cmp
adc
pusha
mov
adc
pop
add
mov
cmp
push
retf
and
pop
push
mov
jp
std
ds
cmp
aas
inc
jne
inc
mov
mov
retf
arpl
xor
push
inc
sub
retf
xchg
(bad)
mov
ds
(bad)
ds
dec
arpl
ss
xchg
inc
pop
and
cmp
ds
inc
arpl
outs
add
add
mov
out
outs
add
xor
ret
xchg
out
lds
xor
jae
das
cli
retf
push
enter
les
jecxz
leave
stos
outs
push
jmp
arpl
ins
push
retf
arpl
into
push
retf
cmp
and
adc
addr16
retf
fxch
into
outs
stc
jb
outs
sbb
iret
mov
popa
out
leave
retf
nop
mov
push
arpl
outs
sbb
inc
cmp
pop
mov
or
add
add
(bad)
psrad
jnp
out
retf
xor
outs
sbb
pop
and
cmp
jb
out
outs
jp
loop
inc
arpl
sub
(bad)
jmp
std
ds
test
add
outs
inc
arpl
outs
jbe
inc
sub
pop
aas
pusha
and
pop
imul
or
xchg
ja
add
cmp
sbb
xor
inc
push
and
sub
leave
add
push
retf
mov
mov
xacquire
imul
js
jae
inc
pusha
and
retw
inc
icebp
aad
adc
and
xor
arpl
and
stos
add
ja
inc
enter
enter
enter
mov
inc
pop
call
mov
inc
je
iret
inc
sub
inc
inc
cmp
push
inc
sub
retf
push
nop
inc
xor
dec
or
arpl
dec
dec
sahf
pop
mov
push
jns
mov
inc
je
iret
cmp
and
add
es
mov
jp
std
ds
cmp
aas
inc
jne
inc
mov
mov
into
ins
dec
arpl
outs
inc
dec
aas
xor
pop
inc
sub
retf
xchg
(bad)
mov
ds
(bad)
ds
dec
arpl
ss
xchg
idiv
mov
inc
in
ds
inc
arpl
outs
add
fisub
mov
outs
add
xor
ret
xchg
out
les
xor
ja
xor
enter
retf
stc
enter
retf
mov
lds
aas
mov
mov
inc
push
and
shr
daa
loope
xchg
(bad)
xchg
ficomp
jmp
push
inc
push
and
mov
sbb
xlat
xor
inc
cld
mov
jmp
outs
jmp
push
mov
adc
mov
test
(bad)
outs
sbb
inc
cmp
arpl
or
retf
stc
dec
loope
sub
mov
mov
mov
fsubr
mov
jb
mul
mov
mov
std
ds
cld
retf
ss
pavgw
or
dec
cmp
ds
jp
repnz
jb
out
inc
arpl
sub
les
inc
pop
call
mov
inc
je
iret
inc
je
iret
or
mov
and
push
retf
cld
dec
inc
aam
(bad)
aas
fwait
mov
add
stos
add
shl
inc
cld
jmp
mov
rep
mov
ins
dec
addr16
jae
inc
mov
cmp
pop
sub
cld
or
test
stos
inc
dec
ss
aas
inc
cmp
(bad)
and
push
ds
add
ins
inc
pop
or
jecxz
add
stos
inc
inc
xchg
add
jge
or
daa
inc
cld
add
push
mov
std
sar
popf
jns
mov
inc
je
iret
inc
je
iret
or
push
xchg
inc
pusha
and
in
aas
mov
call
ins
movs
(bad)
ds
push
enter
mov
jecxz
inc
or
test
inc
or
sti
mov
mov
addr16
or
adc
test
push
mov
aas
pop
aas
(bad)
std
mov
sbb
jo
or
jecxz
lods
(bad)
outs
fadd
mov
xchg
outs
ins
push
inc
ret
jg
lahf
dec
(bad)
ds
push
enter
lods
into
outs
pop
arpl
fs
in
(bad)
ror
mov
ins
in
mov
cmp
cmp
adc
pusha
mov
adc
pop
add
mov
inc
xor
inc
inc
gs
jg
jecxz
ds
inc
mov
sub
add
mov
inc
je
iret
inc
cmp
inc
cmp
push
xchg
or
arpl
cmp
ds
movs
jb
inc
inc
and
sub
retf
sub
and
mov
jno
pop
push
dec
dec
mov
ret
in
ds
inc
arpl
inc
mov
mov
cmp
sub
mov
inc
inc
and
xor
jae
out
pop
icebp
fdiv
fisttp
ds
sub
aas
push
and
out
mov
(bad)
call
enter
push
cld
pop
(bad)
ds
mov
(bad)
dec
retf
and
add
dec
(bad)
dec
cmp
aam
leave
outs
dec
imul
push
imul
popf
adc
pop
ret
ror
outs
jb
sar
mov
inc
sub
dec
inc
clc
xchg
retf
adc
movs
(bad)
ds
mov
outs
push
arpl
xor
mov
test
cmp
mov
ins
add
iret
inc
je
iret
cmp
adc
(bad)
cmp
cmp
jg
jecxz
leave
push
hlt
xchg
retf
arpl
outs
dec
push
inc
and
enter
retf
sub
cli
pop
adc
cli
pop
cs
cmp
inc
push
add
or
mov
outs
sbb
inc
sub
jae
cmp
mov
call
ds
push
arpl
push
rol
jbe
xchg
outs
call
enter
retf
push
cmp
and
inc
and
sbb
ficom
mov
fs
rol
and
mov
cmps
retf
pop
arpl
out
add
xchg
mov
imul
add
(bad)
push
loopne
sbb
inc
retf
pop
arpl
out
inc
stos
out
leave
shr
test
ds
leave
retf
ficom
mov
mov
push
arpl
sub
or
ds
push
and
sub
sub
xor
inc
cli
mov
jmp
inc
and
sbb
(bad)
mov
pop
fxch
aad
stc
retf
push
add
aam
retf
dec
inc
clc
xor
mov
adc
xor
enter
xchg
addr16
je
iret
inc
je
iret
inc
je
iret
cmp
sbb
or
mov
jbe
std
ds
jecxz
leave
pop
hlt
xchg
retf
arpl
outs
dec
push
inc
sub
and
or
ss
retf
xor
out
cmp
xor
xor
sub
xchg
mov
and
ficomp
mov
push
add
or
lds
inc
mov
xchg
inc
pusha
and
push
and
mov
mov
or
retf
sbb
and
push
enter
retf
mov
mov
and
ret
add
outs
push
arpl
outs
pop
arpl
movs
std
dec
inc
clc
xchg
retf
xor
or
cmp
outs
adc
inc
add
leave
shl
test
inc
add
(bad)
pandn
adc
and
clc
inc
pop
loopne
adc
inc
enter
int3
ror
push
cmp
add
leave
shl
test
repnz
retf
ss
retf
nop
mov
ror
leave
xchg
loopne
sbb
inc
sti
int3
rcr
pop
cmp
mov
sbb
ds
ins
pop
arpl
out
int3
ror
sbb
shr
mov
mov
aam
retf
xchg
mov
les
ins
push
arpl
repnz
std
retf
cs
adc
and
push
xor
sub
outs
adc
mov
fiadd
mov
ins
jp
out
jp
(bad)
outs
cmp
mov
inc
and
push
and
clc
nop
jb
outs
pop
aas
inc
iret
mov
ja
push
leave
shl
test
add
inc
ds
xchg
out
push
(bad)
leave
shr
out
(bad)
inc
scas
out
leave
shl
test
add
inc
mov
inc
inc
adc
test
add
jb
mov
sub
test
inc
fadd
pop
mov
std
add
mov
inc
dec
push
sbb
jge
push
aas
mov
std
add
mov
cmp
repnz
ds
retw
cmp
xchg
push
fs
ds
call
ins
inc
push
jmp
dec
dec
jecxz
inc
or
dec
inc
inc
xor
ret
add
fs
mov
cli
cld
stc
mov
mov
std
ds
sub
jbe
xor
cmp
cmp
push
cmp
(bad)
ds
push
retf
std
dec
cmp
addr16
or
xchg
mov
push
ret
xchg
mov
jecxz
ds
inc
xchg
outs
out
ds
mov
lea
sbb
mov
mov
mov
(bad)
and
push
ds
push
enter
push
mov
std
sar
popf
jns
mov
inc
je
iret
inc
je
iret
inc
je
iret
inc
sub
inc
or
push
retf
mov
jle
std
ds
jecxz
inc
push
jecxz
inc
mov
std
ds
std
ds
ret
sub
jb
pop
fxch
cmps
outs
test
ins
or
aad
les
rol
add
jae
inc
push
ds
movs
mov
aas
repnz
sbb
ins
sbb
inc
lods
mov
and
scas
cmp
mov
(bad)
ds
and
jmp
sbb
push
(bad)
std
mov
std
ds
xchg
cld
add
data16
add
icebp
sahf
adc
pop
add
mov
inc
je
iret
or
mov
je
(bad)
ds
inc
push
aas
sub
dec
inc
sub
jbe
add
aas
mov
mov
sub
les
mov
inc
inc
mov
inc
aas
jge
sbb
jecxz
daa
inc
in
cmp
inc
sub
les
mov
add
fs
jecxz
xchg
outs
pushf
ret
mov
std
shl
push
ds
retw
(bad)
aas
mov
jnp
inc
cli
push
ds
cmp
inc
sub
mov
inc
add
retf
iret
and
movs
jae
inc
sub
xchg
and
push
ds
call
inc
pop
inc
xor
xchg
pop
int3
call
xchg
retw
movs
jae
or
cwde
cmp
mov
jecxz
ds
sub
les
and
sub
push
cli
(bad)
jecxz
ds
cli
gs
(bad)
jecxz
nop
sahf
xchg
mov
mov
ret
stos
add
shl
std
ds
pop
call
mov
inc
je
iret
inc
je
iret
inc
sub
inc
or
mov
jle
std
ds
dec
outs
retf
push
retf
cmp
ds
retf
adc
inc
out
sub
mov
mov
inc
dec
mul
mov
inc
ja
add
pop
mov
inc
inc
call
dec
int3
mov
dec
adc
call
add
xor
inc
sub
push
cmp
and
xchg
pop
call
mov
inc
je
iret
cmp
or
cli
pop
push
xchg
inc
pop
and
ins
mov
xor
or
retf
xchg
push
in
ds
sub
pop
inc
xor
push
or
(bad)
xchg
or
ins
dec
arpl
ins
jb
fisubr
inc
inc
or
adc
xchg
jmp
xor
call
or
add
sub
adc
mov
into
add
popf
jmp
cmp
pop
push
xchg
pop
xor
sbb
dec
daa
cli
jecxz
cmp
inc
arpl
loope
mov
sub
imul
mov
fimul
mov
fiadd
cmp
fimul
xchg
adc
test
add
mov
inc
je
iret
aaa
rol
ret
fisubr
ds
mov
fidivr
ds
mov
fidiv
ds
xchg
mov
std
xchg
or
in
ds
xor
mov
inc
aas
and
mov
std
(bad)
jb
sahf
inc
mov
mov
jo
shl
jmp
in
cmp
dec
ret
push
xchg
or
xchg
mov
std
retf
or
es
inc
or
retf
scas
inc
mov
dec
(bad)
xchg
sahf
ja
aas
mov
mov
in
ds
push
std
sar
xchg
(bad)
mov
inc
ja
add
cmp
mov
sbb
xchg
fiadd
inc
arpl
out
ds
sub
inc
jo
fbstp
or
and
jecxz
ds
mov
jecxz
add
mov
stc
dec
xchg
movs
add
ja
dec
mov
outs
inc
arpl
retw
inc
(bad)
ins
inc
arpl
pop
mov
adc
pop
sar
ds
mov
inc
je
iret
aaa
shr
inc
mov
push
xchg
inc
push
std
xchg
or
out
ds
ins
cmp
jecxz
sbb
cld
ds
mov
shr
arpl
out
ds
inc
and
clc
sub
cli
pop
push
aas
mov
std
cmpxchg
arpl
outs
xchg
arpl
call
pop
push
inc
cmp
push
xchg
iret
cmp
mov
xchg
or
std
ds
xchg
mov
mov
(bad)
mov
cmp
pop
inc
xor
retf
xchg
fiadd
jmp
cmp
es
push
retf
push
jb
outs
add
movs
jnp
inc
mov
adc
addr16
mov
sbb
or
sbb
xchg
rep
push
mov
ins
inc
aad
ss
sbb
rep
sbb
mov
push
sar
mov
dec
gs
add
mov
add
mov
das
mov
loope
mov
outs
fmul
ret
loope
mov
outs
pop
arpl
outs
out
dec
gs
add
jmp
outs
call
scas
jnp
inc
aad
xor
or
arpl
call
add
out
mov
int3
sub
cmp
xor
mov
loope
mov
push
dec
inc
mov
add
loope
jmp
jae
call
sub
inc
aad
out
cmps
outs
dec
arpl
out
enter
arpl
push
mov
arpl
outs
inc
arpl
outs
push
arpl
outs
pop
arpl
and
enter
enter
dec
inc
mov
ds
mov
mov
push
call
and
pusha
and
push
cmp
xor
and
ret
cmp
xor
pop
popf
adc
jg
loop
std
ds
mov
inc
je
iret
inc
je
iret
aaa
rcr
inc
mov
push
clc
ss
outs
jecxz
ds
(bad)
test
inc
mov
xor
cmp
or
loopne
std
or
push
retf
inc
inc
mov
xor
jmp
repz
mov
xchg
outs
and
std
ds
pushf
xchg
mov
xor
inc
xrelease
outs
(bad)
retf
ss
mov
sub
inc
xor
adc
jo
jnp
jecxz
imul
ins
sbb
jo
jg
jecxz
imul
xchg
test
mov
add
mov
fimul
aas
mov
jb
out
jecxz
ja
add
xchg
jmp
xchg
fiadd
jmp
addr16
stos
xchg
(bad)
les
mov
mov
mov
std
jns
pusha
add
mov
gs
sar
sub
mov
fiadd
add
aaa
movs
push
inc
mov
xchg
(bad)
inc
enter
enter
mov
outs
inc
arpl
out
inc
mov
std
ds
sub
arpl
and
ins
inc
arpl
pop
mov
cli
pop
push
retf
inc
inc
mov
cmp
arpl
repnz
mov
std
popf
adc
pop
sar
aas
mov
mov
cmp
push
retf
pop
xchg
inc
xchg
mov
mov
mul
std
ds
cmp
push
aas
pop
and
xor
retf
xchg
outs
jle
mov
std
(bad)
or
add
add
push
retf
push
arpl
outs
dec
inc
inc
and
enter
enter
retf
push
mov
ror
add
mov
push
retf
push
inc
pusha
and
inc
ret
sub
aas
inc
and
push
and
fisub
mov
outs
cmp
adc
xchg
aas
pusha
and
jge
and
jecxz
ds
and
aas
cmp
int3
cli
sub
enter
int3
cli
repnz
retf
xchg
jmp
mov
outs
inc
arpl
iret
adc
inc
mov
std
(bad)
xor
cs
cli
pop
jbe
mov
std
(bad)
xor
xchg
fimul
xchg
jmp
fnstcw
or
pop
and
pop
and
pop
and
imul
inc
inc
sub
mov
xor
mov
mov
dec
jno
outs
jb
(bad)
movs
test
lock
sub
push
inc
adc
leave
retf
mov
pop
mov
lds
dec
jns
outs
jp
(bad)
movs
test
outs
cmp
inc
xor
pop
mov
clc
or
mov
push
arpl
repz
xchg
shr
xor
inc
cmp
retf
push
add
outs
les
pop
fld
scas
out
pop
shr
scas
out
adc
xor
(bad)
ja
add
xchg
jmp
add
inc
cmp
xchg
jg
cmp
dec
aas
inc
lock
enter
mov
outs
dec
arpl
outs
push
arpl
xor
and
mov
mov
(bad)
push
mov
inc
inc
xor
scas
(bad)
imul
add
push
leave
retf
mov
aas
sub
jmp
outs
dec
arpl
psubb
outs
adc
call
push
arpl
outs
int3
inc
cmps
out
inc
cmps
dec
xchg
out
inc
cmps
ins
dec
arpl
jo
jle
cmp
push
inc
cmp
push
inc
mov
aaa
mov
ins
push
inc
inc
cmp
addr16
xor
addr16
call
push
retf
sbb
and
aad
aas
cmp
retf
sub
ins
dec
arpl
outs
dec
arpl
out
retf
jbe
or
sbb
or
outs
inc
jle
dec
arpl
outs
dec
arpl
jo
test
out
xchg
cmp
scas
aas
sub
jae
push
mov
ficomp
xor
mov
sbb
pop
adc
adc
cmp
inc
sub
push
sbb
inc
inc
sbb
inc
arpl
dec
xchg
rol
pop
arpl
ins
inc
arpl
repnz
jecxz
sahf
adc
pop
ret
ror
sub
inc
or
scas
pop
mov
std
leave
add
xchg
ds
ds
cmp
xchg
push
int3
adc
mov
add
stos
inc
pop
mov
std
ds
mov
inc
je
iret
or
mov
cmp
mov
mov
dec
call
jmp
jecxz
xchg
or
out
popf
mov
jecxz
ds
inc
push
enter
xor
push
xchg
sahf
imul
mov
out
jp
cmp
xor
push
xchg
or
jecxz
add
add
mov
xchg
cmp
std
ds
add
jp
pop
popf
adc
ror
je
iret
cmp
push
retf
and
jle
std
ds
sub
jae
outs
dec
push
inc
sub
retf
mov
inc
cmp
enter
retf
iret
enter
enter
enter
enter
enter
enter
dec
inc
idiv
ds
push
arpl
repnz
mov
std
leave
cli
pop
and
mov
(bad)
ss
jns
retf
retf
sub
sub
mov
mov
imul
add
mov
js
cmp
xor
mov
(bad)
mov
fiadd
ds
retf
sub
jbe
xchg
fiadd
cmp
xor
jmp
ja
sub
pop
inc
pusha
and
pop
and
in
mov
test
mov
aas
xor
pop
inc
lock
add
sub
arpl
retf
aam
cwde
jmp
dec
jp
outs
enter
adc
mov
pop
ds
(bad)
out
retf
push
test
cmps
ds
(bad)
fcmove
or
push
retf
xor
cli
pop
push
retf
sub
js
inc
arpl
ins
dec
arpl
pusha
stos
sub
outs
dec
arpl
outs
inc
arpl
outs
jp
into
outs
jb
jmp
inc
icebp
fimul
ds
pop
and
pop
mov
adc
inc
arpl
push
idiv
fisubr
int3
retf
inc
inc
mov
stos
(bad)
add
sbb
es
arpl
mov
scas
jl
inc
sub
push
inc
push
and
data16
jl
inc
sub
pop
inc
xor
push
mul
jg
movs
xchg
mov
sbb
stos
(bad)
xchg
mov
outs
jb
jmp
enter
add
mov
(bad)
cmp
xor
pop
mov
inc
clc
jg
shr
ja
retf
js
or
mov
cmp
push
push
leave
mov
retf
arpl
sub
mov
(bad)
outs
dec
arpl
sub
enter
mov
add
ss
push
retf
sbb
cli
pop
push
enter
sub
jo
aas
mov
mov
sub
pop
xor
xrelease
xor
pop
mov
mov
pop
and
test
mov
xor
jae
movs
cmp
xor
jecxz
mul
jg
scas
jl
inc
sub
push
std
les
fstp
inc
and
sub
pop
neg
ror
pop
push
mov
or
ss
push
retf
es
enter
sbb
pop
mov
aas
sub
pop
inc
pusha
and
xor
push
icebp
fdivr
inc
cmp
jae
inc
and
mov
xchg
arpl
outs
int
cwde
jno
mov
mov
xor
jecxz
mul
jg
scas
jl
inc
sub
push
std
les
fstp
inc
and
sub
pop
(bad)
push
ret
enter
mov
or
ss
push
enter
enter
xchg
(bad)
mov
ficom
sub
inc
pusha
and
shr
inc
cmps
mov
in
ds
or
mov
aad
pop
mov
lods
add
cli
pop
ss
lahf
outs
dec
arpl
ins
push
inc
sub
dec
jmp
jb
aas
mov
mov
(bad)
aas
int3
mov
add
sbb
mov
xor
movsx
mov
jno
add
and
add
es
out
mov
sbb
ss
sub
inc
ret
inc
mov
outs
inc
arpl
data16
inc
arpl
pop
(bad)
retf
sub
cli
pop
push
ret
inc
enter
enter
mov
outs
dec
arpl
inc
pop
enter
call
and
inc
xchg
jp
ror
je
iret
inc
je
iret
inc
je
iret
pop
outs
inc
arpl
ss
xchg
or
push
test
(bad)
ds
or
mov
mov
mov
into
add
add
sbb
or
push
xchg
icebp
mov
mov
mov
call
ds
mov
in
or
fdivr
mov
mov
aas
sub
retf
xchg
and
mov
test
enter
cmp
mov
das
lock
dec
push
push
mov
mov
mov
cwde
out
push
xor
mov
jmp
jmp
std
shl
pop
mov
and
push
mov
mov
enter
enter
addr16
and
add
xadd
scas
ins
aas
dec
imul
mov
dec
add
jge
add
and
push
pop
cmp
in
mov
std
xchg
or
jecxz
mov
fiadd
mov
(bad)
sub
pop
icebp
fild
(bad)
or
mov
std
ds
stos
pop
popf
adc
push
add
mov
inc
je
iret
inc
cmp
inc
or
hlt
jb
imul
arpl
add
adc
mov
fnstcw
inc
(bad)
add
adc
je
iret
inc
je
iret
inc
je
iret
inc
cmp
inc
or
hlt
jb
imul
arpl
outs
clc
retf
aam
mov
(bad)
add
adc
je
iret
cmp
cs
inc
inc
and
cmp
ds
sti
mov
fimul
xchg
ret
inc
inc
push
push
retf
xchg
retf
(bad)
xor
push
jp
ins
jp
shr
repnz
push
jmp
xor
test
aas
mov
sub
aas
cmp
dec
inc
cmp
imul
adc
aas
xor
imul
and
icebp
ror
ds
inc
and
mov
pinsrw
cwde
add
mov
mov
and
fiadd
xchg
fiadd
jge
inc
pop
and
lock
sub
call
add
jns
cmp
inc
and
sbb
mov
mov
call
pop
aas
push
and
push
and
into
mov
lds
inc
arpl
out
retf
ss
retf
xor
cli
pop
sbb
ja
dec
mov
outs
inc
arpl
outs
jb
repnz
pop
arpl
data16
xchg
inc
and
sub
sub
fisub
mov
(bad)
mov
mov
ins
push
arpl
ins
dec
arpl
ins
inc
arpl
repnz
std
retf
adc
test
dec
int3
mov
outs
xchg
(bad)
mov
std
leave
enter
inc
sub
push
mov
outs
xchg
(bad)
mov
std
leave
or
test
outs
inc
arpl
out
retf
(bad)
ds
cmc
ds
xor
das
popf
adc
add
inc
je
iret
inc
je
iret
inc
sub
inc
inc
ins
mov
les
mov
mov
inc
je
iret
inc
je
iret
inc
je
iret
or
jb
mov
outs
inc
inc
or
push
jb
ins
test
mov
std
add
mov
ds
mov
jge
or
(bad)
daa
xchg
cmp
jnp
inc
repnz
ds
retw
bound
mov
std
mov
mov
add
cmp
fs
std
xchg
sahf
push
add
mov
inc
xchg
cmp
jb
or
mov
add
je
iret
inc
je
iret
cmp
push
xchg
inc
inc
and
cmp
jno
(bad)
ds
jp
loop
ins
pop
or
out
mov
std
leave
cmps
outs
inc
mov
test
ret
xchg
inc
out
inc
or
dec
inc
mov
in
ds
call
push
inc
cmp
call
jle
inc
mov
test
enter
les
jb
retf
arpl
jecxz
ds
mov
mov
std
leave
scas
ins
push
shr
arpl
outs
inc
arpl
stos
inc
arpl
jecxz
ds
sub
lods
loope
sub
push
and
aam
mov
(bad)
mov
mov
mov
or
jl
mov
mov
(bad)
push
xlat
retf
and
imul
inc
lahf
and
daa
mov
fisubr
arpl
out
retf
push
jp
pusha
fcmove
cli
pop
push
inc
xchg
and
add
sub
dec
xor
ficom
mov
(bad)
mov
mov
movs
xchg
(bad)
xchg
pavgw
ds
sub
imul
mov
retf
add
cmps
xchg
adc
test
add
mov
inc
je
iret
inc
je
iret
cmp
push
xchg
or
push
retf
and
mov
std
ds
pop
jbe
or
test
add
lods
add
pop
clc
jp
(bad)
jmp
mov
mov
add
push
std
ds
mov
inc
cmps
mov
mov
call
xor
icebp
(bad)
xchg
jge
and
pop
xor
arpl
pop
es
sub
mov
mov
sub
addr16
and
ds
xor
leave
or
sbb
movs
cmp
xor
or
push
stc
ins
or
inc
xor
dec
cmp
inc
arpl
in
ds
dec
arpl
pop
stos
sub
inc
arpl
push
mov
inc
pop
ret
ror
je
iret
inc
sub
dec
inc
xor
dec
or
out
add
xchg
push
mov
inc
jl
xchg
ss
cmps
mov
cmp
adc
(bad)
fwait
(bad)
ds
push
retf
mov
jle
std
ds
stos
xchg
jge
and
in
ds
daa
sbb
mov
or
enter
xchg
outs
dec
inc
or
arpl
sar
jecxz
nop
push
cmp
nop
mov
xor
stc
test
adc
add
enter
sub
outs
inc
arpl
outs
pop
arpl
outs
jb
fisubr
arpl
outs
sub
lods
loope
sbb
mov
sub
mov
inc
call
(bad)
ds
push
retf
xor
add
clc
or
push
xchg
aas
cmp
imul
ret
lods
xor
inc
sub
addr16
cmp
push
int3
jo
mov
mov
cmp
out
cli
pop
push
retf
sbb
cld
fs
ds
std
mov
(bad)
push
enter
std
ds
push
std
leave
(bad)
and
aas
mov
test
mov
(bad)
ds
cmp
mov
std
mov
fisubr
arpl
sub
mov
cmp
push
icebp
fmul
adc
call
mov
inc
sub
dec
inc
xor
dec
inc
mov
and
xor
add
dec
fcomi
add
mov
or
mov
mov
dec
scas
inc
push
inc
mov
mov
cs
xchg
cli
outs
push
inc
or
xchg
mov
add
jp
xchg
sub
cmp
in
adc
cmp
or
xchg
jmp
in
ds
sub
enter
ds
inc
xchg
inc
xor
push
ins
mov
mov
std
dec
cmp
mov
jb
(bad)
push
or
int3
cmp
push
cmp
pop
add
inc
int3
adc
sub
mov
and
int3
fs
add
jmp
out
test
imul
fidiv
addr16
rol
jp
adc
addr16
mov
out
jle
jecxz
inc
jge
add
daa
dec
std
inc
mov
cmp
lock
std
ret
ss
jmp
ds
ret
inc
pop
call
or
std
out
jl
jecxz
popf
adc
rol
out
jnp
jecxz
popf
adc
ror
je
iret
inc
je
iret
inc
je
iret
or
arpl
pop
mov
jle
std
ds
and
xor
mov
lods
bound
int3
add
push
sub
cmp
add
inc
sub
dec
or
out
mov
std
sar
inc
inc
daa
jbe
cmp
lds
inc
je
iret
inc
je
iret
inc
sub
inc
or
push
retf
push
cmps
mov
std
ds
dec
ds
outs
pop
arpl
outs
out
cdq
in
add
fs
std
dec
xor
jmp
ins
add
mov
and
loope
ds
sub
dec
(bad)
cmp
push
enter
sbb
stos
push
shl
int
inc
test
mov
inc
je
iret
inc
je
iret
cmp
push
retf
adc
jecxz
leave
push
push
mov
fisubr
push
aas
push
and
movs
xchg
(bad)
or
cmp
std
ds
xor
arpl
outs
pop
arpl
outs
iret
push
cmp
(bad)
xchg
inc
sbb
les
pop
dec
enter
jb
imul
arpl
outs
push
jb
outs
adc
jbe
mov
jmp
out
test
or
retf
and
mov
pop
mov
cli
pop
cs
outs
pop
arpl
outs
push
arpl
outs
push
shr
arpl
data16
push
arpl
ins
inc
arpl
pop
xchg
popf
adc
ret
ror
je
iret
cmp
push
retf
adc
mov
mov
(bad)
outs
ds
inc
hlt
xchg
mov
cmp
inc
aas
sub
dec
inc
sub
arpl
movs
jl
inc
xor
pop
inc
cmp
pop
or
iret
xchg
or
dec
arpl
ins
push
arpl
ins
inc
arpl
outs
add
adc
mov
inc
in
mov
jmp
std
xor
inc
hlt
xor
inc
add
retf
push
inc
and
dec
inc
add
inc
and
or
and
xor
arpl
and
sub
outs
cmp
and
sub
outs
sub
add
inc
je
iret
inc
je
iret
inc
je
iret
cmp
sbb
cli
pop
push
xchg
inc
pushf
mov
mov
inc
sub
outs
cmp
mov
out
xchg
fiadd
or
ds
xor
or
arpl
cmp
or
dec
arpl
ins
inc
arpl
outs
inc
arpl
outs
or
mov
mov
out
ret
mov
(bad)
aas
pop
and
cmp
jae
jno
aas
mov
mov
jae
pop
and
sub
jnp
in
mov
(bad)
mov
fisubr
(bad)
inc
pusha
and
call
cmp
jb
sbb
ss
cs
retf
xor
inc
hlt
add
inc
clc
sub
iret
in
retf
ss
iret
outs
pop
arpl
out
cmp
in
add
arpl
pop
(bad)
retf
xor
adc
push
retf
cmp
cli
pop
push
cmp
ins
push
arpl
ins
dec
arpl
pop
test
xor
adc
sub
es
sbb
jns
inc
enter
(bad)
xchg
(bad)
std
ds
pop
sahf
cmp
mov
inc
je
iret
inc
je
iret
cmp
and
add
es
inc
jne
inc
mov
mov
mov
outs
inc
push
aas
cmp
pop
cmp
and
push
add
imul
xchg
(bad)
or
fwait
in
ds
sub
outs
or
arpl
cmp
add
ins
inc
arpl
ins
dec
arpl
into
add
cli
pop
push
retf
mov
pop
xor
and
mov
adc
arpl
outs
jo
ja
add
cmps
out
inc
lahf
outs
dec
arpl
ins
jb
ficom
hlt
les
push
into
pop
ins
enter
sub
outs
sbb
jmp
lods
add
inc
cmp
pop
imul
push
inc
inc
mov
inc
push
and
mov
dec
mov
clc
sub
adc
and
and
es
sub
not
ror
(bad)
out
jb
outs
adc
lods
mov
shr
cli
and
inc
enter
enter
mov
outs
push
arpl
outs
pop
arpl
outs
inc
arpl
rol
pop
arpl
data16
es
cmp
lds
ds
pop
pushf
adc
add
cmps
mov
inc
je
iret
inc
je
iret
cmp
cs
xor
mov
std
leave
es
mov
mov
std
leave
cli
pop
inc
enter
les
jb
mov
ins
push
arpl
repnz
mov
std
leave
add
ds
or
bswap
enter
enter
enter
retf
inc
retf
dec
daa
mov
test
jb
imul
dec
inc
adc
ds
inc
cmp
and
inc
daa
push
retf
or
lods
cmp
xor
mov
adc
retf
in
gs
push
inc
stos
mov
mov
(bad)
enter
retf
dec
enter
retf
jb
mov
pop
dec
enter
(bad)
mov
std
ds
adc
or
add
aas
sub
ja
daa
push
jb
outs
add
aas
inc
and
jmp
daa
xchg
cmp
std
ds
cmp
cmp
and
mov
and
sub
inc
jmp
xor
jae
fadd
inc
jle
mov
xchg
ficomp
xor
inc
lock
(bad)
cmp
jno
outs
adc
inc
and
inc
mov
dec
mov
mov
movs
aas
add
pop
aas
cmp
push
inc
cmp
pop
mov
das
xchg
inc
cmp
pop
add
arpl
jno
mov
sub
xchg
fiadd
mov
(bad)
mov
ja
arpl
aam
pop
arpl
push
into
enter
enter
retf
mov
mov
std
retf
xor
cmp
inc
xchg
inc
sub
imul
add
aas
sub
imul
(bad)
cmp
adc
add
inc
je
iret
inc
je
iret
inc
sub
inc
push
outs
push
ds
cmp
iret
inc
je
iret
aaa
shl
inc
mov
mov
ficomp
(bad)
ds
mov
in
or
arpl
in
ds
xor
ds
mov
push
sar
ds
xchg
fimul
mov
ficom
push
aas
mov
arpl
sub
retf
arpl
sub
adc
aas
pop
and
outs
jno
sbb
jb
fimul
mov
dec
mov
jmp
dec
mov
jb
(bad)
sti
retf
adc
sbb
inc
lahf
shl
mov
repz
shl
les
out
out
mov
cmps
add
mov
aas
pop
aas
and
xchg
ss
ds
gs
aas
mov
xchg
jbe
std
ds
fidivr
mov
add
ins
pop
arpl
mov
dec
add
mov
mov
jg
mov
(bad)
jbe
lods
cmp
mov
jno
jg
retf
cmps
jno
mov
sbb
das
lds
mov
mov
retf
mov
retf
out
jne
mov
movs
in
mov
push
test
popa
mov
ss
lds
inc
arpl
repnz
cmp
gs
jae
push
(bad)
or
add
sbb
fiadd
jae
push
ret
retf
(bad)
ds
inc
arpl
ins
jb
repnz
icebp
xchg
in
ds
inc
and
mov
lods
das
lds
mov
out
scas
outs
inc
lahf
lds
xchg
xchg
ins
pop
arpl
jo
pop
mov
dec
arpl
jo
inc
aas
inc
and
ror
ja
add
jns
add
mov
or
test
pop
loope
mov
mov
sbb
mov
lods
mov
rol
out
add
push
push
mov
push
repz
and
push
jmp
sub
add
repz
test
xchg
aas
aas
mov
jmp
push
ins
pop
arpl
repnz
(bad)
lods
jno
call
mov
movs
jecxz
loope
mov
mov
or
enter
inc
mov
mov
sbb
inc
(bad)
ds
repz
fild
pop
mov
pop
push
retf
push
enter
int3
shl
add
ja
pop
inc
mov
xlat
inc
sub
pop
inc
inc
pop
aas
mov
pop
mov
into
jecxz
aas
mov
ror
or
inc
mov
std
ds
or
aaa
(bad)
(bad)
ds
inc
arpl
movs
sti
dec
aas
or
add
mov
rol
ds
or
aaa
movs
(bad)
ds
inc
arpl
movs
sti
dec
inc
xor
mov
add
cmp
push
(bad)
or
mov
std
ds
cmp
xchg
push
in
ds
sub
jg
inc
and
cmps
add
jb
inc
jecxz
add
mov
rol
or
scas
out
xchg
mov
std
(bad)
adc
sub
ja
mov
cli
pop
cs
cmp
cli
ds
mov
in
ds
pop
and
aas
xor
arpl
and
jecxz
ds
cmp
arpl
adc
cli
pop
sub
cld
out
mov
js
fwait
mov
std
inc
sub
aas
cmp
outs
inc
cmp
enter
retf
xchg
inc
sub
dec
inc
bound
retf
or
inc
sub
outs
shl
xadd
mov
cmps
push
add
out
ds
call
aas
inc
ds
test
ds
out
mov
jmp
push
lds
mov
int3
retf
push
inc
movs
loopne
mov
outs
call
jnp
movs
in
loope
mov
movs
in
mov
jmp
cs
and
add
retf
add
scas
outs
add
repnz
mov
(bad)
push
rol
icebp
mov
jge
fimul
retf
sub
cli
pop
ss
adc
ins
inc
arpl
outs
inc
arpl
out
enter
int3
loop
mov
(bad)
add
aas
sub
pop
mov
jno
fidiv
add
jns
add
mov
or
test
pop
loope
mov
mov
sbb
mov
lods
mov
rol
out
add
push
push
mov
push
repz
and
push
jmp
sub
add
jno
jmp
sub
inc
and
mov
sub
fwait
jmp
and
leave
add
outs
push
shr
(bad)
outs
pop
arpl
repnz
int
jecxz
inc
xchg
outs
push
(bad)
out
retf
push
enter
retf
push
dec
jne
adc
mov
fcmove
and
push
inc
mov
arpl
outs
pop
arpl
repnz
xchg
sbb
std
inc
xchg
outs
push
(bad)
out
retf
push
enter
dec
jne
add
jno
jg
mov
xlat
inc
sub
inc
inc
and
push
and
mov
push
into
add
idiv
mov
(bad)
ds
(bad)
std
inc
mov
mov
push
(bad)
std
inc
mov
test
clc
daa
mov
jecxz
inc
mov
test
idiv
mov
(bad)
ds
(bad)
std
inc
mov
mov
imul
jecxz
nop
mov
add
pusha
and
and
ss
dec
sbb
ds
ficom
rcr
std
ds
ins
adc
xor
std
ds
call
mov
mov
push
out
add
jecxz
ds
(bad)
std
inc
mov
mov
imul
jecxz
nop
mov
pop
and
and
and
cli
pop
xor
jl
add
(bad)
xchg
ficom
or
ds
test
inc
mov
ror
shr
inc
mov
mov
ficom
(bad)
ds
mov
in
ds
js
jnp
jecxz
xchg
inc
sub
scas
jg
jecxz
mov
mov
xchg
(bad)
mov
(bad)
add
retf
fs
arpl
xor
sbb
aas
pusha
and
outs
js
sbb
jp
(bad)
dec
mov
fiadd
fs
xchg
ficom
or
inc
pusha
and
outs
pop
lahf
rcl
mov
inc
pusha
and
ror
sub
shl
pop
cmp
push
or
inc
aas
sbb
mov
ins
jbe
aas
pop
pop
enter
ds
mov
mov
std
(bad)
outs
movs
(bad)
ds
mov
mov
std
shl
xchg
(bad)
cmp
int3
je
mov
or
xor
cs
or
dec
fisttp
lds
or
sub
mov
out
xchg
jno
push
loope
mov
push
icebp
int3
rcr
xor
inc
add
inc
loope
sub
aas
inc
and
push
and
and
mov
mov
(bad)
adc
sub
or
xor
pop
add
(bad)
and
sbb
mov
and
xor
cmp
das
inc
or
fbstp
xlat
mov
xchg
in
lds
sub
aas
push
and
adc
push
outs
clc
retf
sbb
ins
push
arpl
jo
jbe
mov
fadd
cdq
out
sbb
fmul
retf
ds
sub
mov
arpl
fcmovu
add
ins
pop
arpl
movs
clc
inc
loope
mov
mov
jno
in
mov
loope
inc
sbb
int3
sub
cld
inc
loope
sub
inc
add
and
sub
repnz
mov
loopne
stos
(bad)
add
mov
push
and
rol
inc
inc
and
adc
push
outs
push
arpl
ins
xchg
push
add
pop
int3
push
aam
inc
test
ds
push
arpl
ins
push
jg
sbb
lahf
inc
cmp
dec
cmp
(bad)
ds
jb
out
ins
push
arpl
mov
pusha
and
ins
jp
into
repnz
jecxz
retf
dec
inc
mov
mov
fiadd
xchg
ficom
push
aas
mov
mov
fidiv
(bad)
ds
ja
inc
cmp
dec
pop
aas
cmp
push
inc
xor
addr16
aas
cmp
dec
inc
xor
es
movs
ins
push
arpl
outs
dec
dec
ror
ficomp
mov
ror
(bad)
or
inc
inc
and
into
jae
inc
cmc
mov
ds
adc
inc
push
out
(bad)
mov
xor
mov
int3
xchg
jecxz
dec
inc
adc
push
outs
iret
retf
push
int3
shl
sub
inc
lock
dec
inc
jno
push
lds
push
jno
push
loope
mov
ficom
mov
ficomp
mov
push
iret
retf
es
retf
adc
ins
pop
arpl
outs
pop
arpl
push
leave
retf
sbb
add
es
push
inc
sub
arpl
out
retf
loope
loope
mov
int3
sar
ds
enter
sub
inc
cmp
push
lods
mov
or
ja
push
push
outs
push
arpl
out
retf
sbb
jno
rol
fxch
retf
fimul
iret
and
push
push
ins
push
arpl
jo
call
adc
adc
sub
mov
sub
inc
inc
and
mov
(bad)
add
ja
add
cdq
jecxz
aas
mov
sbb
cld
mov
ja
add
popf
jecxz
aas
mov
sbb
pusha
and
cmp
int3
rcr
cmp
add
cdq
jecxz
aas
mov
std
inc
inc
add
rcr
push
inc
inc
lock
xor
push
(bad)
(bad)
jmp
add
ja
add
popf
jecxz
aas
mov
sbb
cmp
retf
push
push
movs
test
xchg
imul
lock
add
(bad)
mov
mov
jo
leave
std
inc
mov
test
fisubr
ins
ds
retf
push
retf
cs
add
fiadd
xchg
ficom
or
ds
test
inc
mov
ror
je
iret
inc
je
iret
aaa
shl
inc
mov
mov
fimul
(bad)
ds
mov
in
ds
js
outs
mov
std
xchg
inc
jl
inc
mov
mov
aaa
cmps
jle
mov
mov
fiadd
push
aas
mov
arpl
xor
retf
or
sbb
js
rcl
retf
fs
or
sbb
js
rcl
retf
or
rcl
les
push
xchg
(bad)
aad
(bad)
hlt
(bad)
(bad)
(bad)
mov
pop
sbb
(bad)
ds
mov
mov
std
pop
inc
movs
(bad)
ds
xchg
pop
mov
std
daa
jno
std
lds
push
sbb
pop
push
dec
jne
push
pop
mov
push
and
sub
dec
lds
xchg
mov
pop
arpl
mov
std
sbb
pop
push
enter
sbb
mov
std
sbb
pop
push
sbb
(bad)
mov
jp
(bad)
mov
mov
arpl
mov
(bad)
sbb
mov
inc
arpl
mov
bound
mov
(bad)
push
xchg
mov
mov
sbb
or
sbb
pop
push
pop
xchg
mov
(bad)
sbb
pop
adc
ja
pop
arpl
mov
aas
pop
xchg
sub
dec
aas
pusha
and
mov
xlat
adc
inc
arpl
ins
jp
mov
sbb
test
ds
inc
arpl
rol
aaa
(bad)
(bad)
ds
mov
dec
xchg
sub
dec
xchg
lods
xlat
(bad)
(bad)
dec
repz
pop
push
xchg
mov
aad
pop
push
mov
pop
(bad)
mov
and
inc
and
movs
(bad)
sbb
aad
adc
and
icebp
push
jmp
jecxz
sub
inc
and
sub
push
mov
dec
mov
pop
jmp
jecxz
mov
(bad)
(bad)
or
jecxz
and
inc
and
mov
aad
ficom
xlat
push
(bad)
mov
pop
(bad)
jl
aas
mov
(bad)
sbb
(bad)
sbb
xlat
xchg
(bad)
mov
bound
mov
std
pop
cli
pop
adc
ja
push
jg
dec
and
jl
aas
mov
(bad)
sbb
aad
fiadd
xlat
xlat
ss
ds
mov
push
(bad)
cmp
retf
and
js
add
mov
ins
jb
(bad)
or
jecxz
retf
inc
inc
mov
mov
fimul
push
aas
mov
(bad)
test
sub
pop
sbb
mov
in
ds
pop
xlat
test
mov
fs
mov
pop
jmp
jecxz
and
movs
(bad)
add
lods
(bad)
and
sub
push
mov
and
sub
arpl
inc
and
sub
pop
cld
out
test
mov
adc
cld
(bad)
(bad)
(bad)
test
inc
and
sub
push
mov
(bad)
sbb
(bad)
add
jecxz
(bad)
aad
push
nop
inc
aas
mov
dec
mov
pop
pop
imul
(bad)
dec
push
nop
inc
aas
mov
imul
xlat
sbb
(bad)
dec
or
and
sub
push
pop
push
(bad)
mov
and
iret
sbb
mov
inc
arpl
mov
mov
fs
std
ds
clc
adc
pop
mov
cmp
movs
test
add
mov
add
sub
pop
ja
mov
mov
aad
fimul
cmp
fnclex
add
mov
or
xor
es
add
ds
mov
and
movs
add
scas
out
ds
sti
test
mov
(bad)
sbb
(bad)
mov
mov
loop
aas
mov
add
sub
daa
adc
(bad)
ds
cmp
ds
outs
or
xor
daa
test
mov
push
cmp
ds
sti
test
mov
cmp
les
fadd
fs
std
cmp
test
fisubr
xchg
lock
ds
test
inc
mov
ror
je
iret
inc
je
iret
inc
je
iret
aaa
rcr
ret
fiadd
mov
in
or
mov
mul
std
ds
push
std
xchg
or
test
mov
cmp
aas
mov
xchg
fiadd
mov
fimul
xchg
mov
jecxz
movs
inc
cmp
movs
inc
hlt
arpl
adc
sbb
aas
inc
and
outs
push
out
sbb
pop
arpl
outs
pop
arpl
ins
push
arpl
out
xlat
retf
adc
nop
outs
push
arpl
out
xlat
movs
inc
xor
dec
nop
out
(bad)
lds
adc
nop
xchg
ins
bswap
pop
add
nop
test
inc
mov
mov
jbe
std
lds
mov
fild
inc
dec
gs
and
jmp
xor
dec
lds
jecxz
loope
mov
adc
leave
add
outs
ins
pop
ja
or
xor
sbb
or
jl
mov
mov
std
dec
jne
or
fbstp
cmp
pop
lds
or
xchg
(bad)
or
mov
mov
xchg
lds
mov
loope
addr16
sub
ds
mov
pop
mov
mov
int3
jmp
retf
jecxz
mov
push
out
loop
add
pop
and
pop
and
adc
sar
call
pop
and
leave
sub
adc
imul
inc
loope
mov
push
hlt
std
ds
sub
mov
inc
aas
outs
push
loop
add
ja
push
inc
ja
or
fiadd
mov
leave
jecxz
aas
mov
fadd
scas
lock
(bad)
sar
jecxz
retf
dec
adc
inc
mov
sub
mov
stc
dec
ja
or
scas
lock
fisubr
aas
cmc
mov
mov
movs
add
cmp
xchg
fsub
std
ds
jo
push
pop
cs
enter
push
cli
pop
push
inc
mov
std
leave
or
push
retf
ret
jecxz
mov
outs
push
pop
inc
push
mov
es
xchg
mov
or
retf
and
out
out
retf
or
aas
xor
addr16
pusha
inc
hlt
add
movs
clc
inc
aaa
(bad)
std
inc
mov
xchg
imul
pop
in
nop
mov
adc
ds
mov
dec
jne
push
int3
retf
and
jmp
mov
out
pop
xchg
mov
movs
fild
mov
dec
jne
mov
push
out
dec
jne
and
mov
adc
mov
sub
lds
jmp
sti
jecxz
call
add
ds
mov
jno
xlat
loope
mov
ja
add
movs
jecxz
loope
mov
out
enter
retf
adc
loop
mov
mov
or
adc
mov
sub
ja
add
outs
inc
arpl
dec
mov
setnp
sti
retf
sub
jno
enter
add
lock
scas
outs
(bad)
or
int3
inc
out
ds
fst
rcl
sar
out
push
fs
mov
ins
adc
push
std
imul
in
inc
mov
std
inc
mov
mov
addr16
sub
pop
aaa
retf
mov
test
cmp
retf
push
retf
push
ret
add
(bad)
xchg
fiadd
or
ds
test
aas
mov
ror
je
iret
cmp
inc
retf
inc
retf
dec
retf
dec
xchg
inc
fs
mov
mov
mov
push
enter
xchg
outs
in
std
ds
pop
arpl
cmp
mov
scas
jmp
cmp
add
mov
ds
test
enter
arpl
and
add
retf
mov
aad
das
sbb
add
xchg
repnz
mov
fiadd
call
std
ds
xchg
sahf
aas
mov
or
mov
lods
xor
mov
loopne
mov
jo
xchg
inc
clc
iret
int3
retf
xor
fidivr
mov
or
mov
mov
fwait
inc
adc
test
jno
xor
sub
pop
adc
sti
or
mov
mov
addr16
mov
inc
cmp
dec
gs
or
adc
jecxz
ds
mov
movs
jecxz
loope
mov
jno
inc
mov
std
ds
mov
dec
mov
xchg
movs
test
pop
inc
sub
xchg
cmp
inc
les
inc
arpl
repz
jecxz
retf
(bad)
int3
add
adc
cli
pop
push
push
cli
pop
pop
inc
mov
std
leave
or
push
retf
mov
inc
pusha
and
shr
ror
cli
dec
js
pop
retf
inc
arpl
data16
add
cwde
jecxz
aas
mov
add
jmp
mov
inc
in
stos
(bad)
mov
in
ds
lock
repz
inc
loope
mov
mov
xchg
inc
clc
iret
int3
retf
jae
repz
rol
fmul
sar
loopne
test
mov
stc
fsubp
std
imul
test
std
ds
out
ds
adc
retf
ds
ins
add
cmp
xchg
ds
leave
cli
pop
pop
ret
add
fidivr
xchg
loope
std
ds
test
add
and
cmp
dec
inc
sub
movs
inc
out
xchg
(bad)
mov
xchg
(bad)
retf
(bad)
ds
push
arpl
mov
idiv
ds
in
aas
mov
mov
shl
dec
aaa
rcl
xchg
ss
retf
(bad)
mov
outs
inc
dec
cmp
std
ds
add
addr16
inc
lds
aas
mov
cmp
jecxz
es
std
cmp
ds
add
mov
or
jbe
dec
daa
cs
ds
jo
fbstp
ins
(bad)
mov
mov
cmp
mov
mov
int3
or
or
popa
lds
mov
cld
push
loop
inc
aas
inc
sub
pop
adc
mov
cmp
jbe
cld
inc
lds
xchg
les
les
dec
dec
cld
jecxz
retf
fiadd
pop
enter
shl
js
fbstp
stos
add
mov
std
mov
mov
mov
inc
je
iret
inc
je
iret
aaa
shl
clc
fninit
std
ds
sti
lock
and
in
ds
jecxz
imul
dec
cli
pop
es
cmp
add
xor
addr16
xchg
xchg
cld
jecxz
ds
dec
mov
mov
out
jecxz
add
and
dec
mov
addr16
mov
adc
mov
jecxz
aas
and
mov
push
dec
dec
mov
std
ds
and
jecxz
ds
adc
jb
inc
aas
cmp
add
std
ds
(bad)
ds
jle
pop
in
ds
mov
inc
je
iret
inc
xor
inc
jmp
data16
ds
std
leave
add
push
enter
mov
je
iret
inc
sub
dec
inc
xor
inc
inc
cmp
inc
push
xor
std
ds
std
into
inc
je
iret
inc
je
iret
inc
sub
dec
inc
xor
inc
inc
cmp
inc
push
xor
std
ds
std
into
inc
je
iret
inc
je
iret
or
arpl
cmp
icebp
jecxz
lea
outs
xchg
cld
jecxz
push
inc
aam
inc
mov
in
and
in
ds
addr16
push
mov
mov
cld
push
icebp
test
addr16
push
mov
mov
addr16
and
and
jecxz
mov
cmps
mov
inc
xor
inc
jmp
out
sub
add
cmps
or
inc
xor
inc
aas
icebp
or
dec
mov
mov
inc
je
iret
inc
je
iret
inc
je
iret
push
hlt
jnp
mov
mov
arpl
outs
push
arpl
jmp
nop
mov
mov
add
jecxz
inc
out
inc
aas
mov
std
ds
jae
iret
inc
je
iret
inc
je
iret
inc
je
iret
mov
xchg
xchg
cld
jecxz
adc
inc
aas
mov
pop
xchg
cld
jecxz
sbb
inc
aas
or
nop
sbb
jnp
lds
push
xchg
or
jecxz
movs
inc
popa
or
mov
jg
mov
std
movs
cmp
or
jmp
ds
inc
inc
mov
xor
retf
(bad)
fcom
(bad)
les
popf
mov
jecxz
ss
imul
mov
mov
or
cmp
add
data16
mov
mov
dec
cmp
mov
inc
and
dec
ins
cmp
int3
ret
inc
(bad)
jecxz
push
aas
cmp
inc
mov
into
dec
inc
jg
ds
cmp
addr16
icebp
repnz
mov
std
movs
cmp
jp
bound
add
mov
cmc
cmp
push
inc
jle
les
mov
(bad)
jge
ss
mov
add
sbb
jnp
mov
loopne
mov
sub
idiv
test
repnz
rcr
mov
ror
jnp
movs
xchg
sub
les
or
sub
mov
sti
xrelease
rcl
xchg
mov
pop
popf
adc
mov
cmp
push
sbb
jmp
pop
ficomp
aas
xchg
les
mov
inc
inc
xchg
add
mov
jecxz
pop
push
repz
mov
std
sbb
jmp
pop
out
inc
aas
jge
test
std
sbb
xchg
jmp
call
in
cld
jecxz
test
movs
out
enter
pop
outs
out
sbb
pop
jg
jge
or
sahf
sub
aas
mov
push
inc
xchg
add
daa
shl
std
ds
push
push
cwde
xadd
lahf
sub
(bad)
es
cmc
std
ds
sub
int3
cld
loop
inc
jne
cmp
jl
retf
test
clc
ins
dec
push
dec
(bad)
enter
add
bound
ds
ret
inc
sub
enter
ss
mov
mov
sub
fsubr
jecxz
leave
xchg
ins
push
dec
inc
pop
dec
jge
cmc
cmp
movs
xchg
fisttp
inc
mov
xchg
retf
cld
retf
inc
dec
dec
(bad)
retf
push
das
inc
sub
(bad)
idiv
mov
xor
and
sbb
and
push
aaa
sub
cmp
mov
les
mov
pop
retf
mov
mov
xchg
retf
stc
enter
push
jne
(bad)
ds
cmc
cmp
inc
sub
enter
ss
(bad)
les
repz
inc
add
mov
aas
and
inc
(bad)
jecxz
inc
mov
push
retf
call
push
push
xchg
sub
xchg
xor
call
retf
cmc
cmp
xchg
ins
psubusb
(bad)
retf
dec
inc
dec
(bad)
enter
inc
push
inc
pop
call
or
or
out
retf
ds
or
mov
inc
mov
inc
arpl
and
in
cld
test
outs
les
inc
aad
test
and
jp
or
xchg
jnp
mov
inc
arpl
dec
arpl
sub
inc
inc
stos
pop
add
out
push
out
inc
aas
xchg
les
rol
out
out
jecxz
sbb
pop
or
xchg
cmp
push
aas
or
nop
and
in
out
jecxz
(bad)
sti
fist
add
mov
jecxz
leave
sti
jmp
add
addr16
in
jb
xchg
in
test
add
daa
sub
std
cmp
movs
inc
xor
test
sbb
dec
sub
repnz
inc
inc
sbb
dec
daa
sbb
inc
inc
sbb
dec
and
dec
pop
sbb
inc
dec
sbb
dec
sbb
les
or
out
retf
mov
icebp
mov
dec
loope
mov
sahf
sub
mov
inc
arpl
and
in
inc
cmp
and
stos
pop
add
addr16
std
fiadd
sub
pop
xor
fnstcw
mov
cmp
jmp
rol
jecxz
add
outs
jmp
jecxz
pop
xchg
in
test
add
daa
addr16
cmp
or
(bad)
ds
push
retf
jmp
std
fiadd
sub
pop
xor
test
mov
cmp
jmp
rol
jecxz
add
outs
jmp
jecxz
pop
xchg
in
test
add
daa
adc
std
cmp
or
(bad)
ds
push
retf
jmp
std
fiadd
sub
pop
xor
xor
mov
cmp
jmp
rol
jecxz
add
outs
jmp
jecxz
pop
xchg
in
test
add
daa
mov
movs
jb
inc
sub
or
(bad)
ds
fild
xchg
cld
sbb
cmp
inc
sahf
aad
aas
mov
mov
retf
dec
movs
inc
sub
nop
sbb
inc
inc
pop
dec
mov
(bad)
repz
div
arpl
pop
xor
mov
jecxz
ss
mov
sub
jecxz
ds
stos
pop
add
xor
dec
sbb
pop
out
mov
std
retf
dec
sbb
(bad)
aas
pop
rcr
sahf
cmp
aaa
xchg
les
mov
cmps
add
or
nop
pop
sar
pop
rcr
sahf
pop
sti
ds
inc
inc
pop
rcr
in
sbb
pop
out
mov
std
sbb
(bad)
pop
push
push
add
jmp
jecxz
retf
mov
or
jae
mov
push
ds
cld
mov
loop
dec
mov
push
daa
mov
std
lods
mov
inc
inc
adc
rcl
mov
mov
and
(bad)
inc
mov
inc
arpl
fs
mov
fs
mov
test
mov
std
add
mov
les
inc
aad
push
mov
std
xor
pop
push
inc
sub
push
daa
ret
jmp
les
mov
stos
test
jecxz
arpl
jecxz
sbb
and
jecxz
lds
std
ds
in
cld
jecxz
add
or
out
daa
retf
lods
sub
inc
mov
add
inc
mov
mov
jge
in
cld
jecxz
xchg
inc
aad
mov
jmp
call
or
sbb
std
rcr
(bad)
cmp
(bad)
ds
add
imul
rol
mov
sahf
clc
std
ds
inc
arpl
int3
jno
mov
push
retf
rol
call
imul
out
sub
push
daa
(bad)
lock
ds
sub
dec
cmp
aas
cmp
aas
aas
push
aas
mov
les
xchg
inc
aas
inc
stos
pop
add
int3
adc
mov
repz
(bad)
mov
cmp
gs
stos
pop
add
xchg
inc
aas
jns
jb
mov
loop
inc
mov
inc
(bad)
cld
jecxz
inc
mov
jb
mov
stc
inc
(bad)
cld
jecxz
inc
mov
jb
(bad)
loop
arpl
loop
arpl
loop
arpl
loop
inc
mov
cmp
dec
mov
mov
mov
push
sub
std
mov
loop
push
mov
push
ds
cld
mov
loop
inc
mov
cmp
shl
push
retf
jae
mov
push
sub
std
mov
loop
push
mov
push
ds
cld
mov
loop
arpl
sub
leave
add
or
xchg
mov
push
inc
movs
pop
add
jecxz
mov
repz
mov
repz
mov
repz
mov
repz
mov
loop
or
inc
(bad)
jecxz
retf
inc
inc
cmp
sub
std
mov
loop
pop
mov
push
ds
cld
mov
loop
dec
push
jecxz
inc
mov
sub
jecxz
mov
repz
mov
repz
mov
repz
mov
repz
mov
loop
ja
sub
add
jecxz
and
in
ret
jbe
push
retf
(bad)
or
jb
cmps
mov
test
aas
mov
mov
test
aas
mov
push
jb
sbb
(bad)
xchg
or
sbb
dec
movs
out
mov
std
cmps
call
xchg
cld
jecxz
aaa
icebp
fidiv
inc
sbb
cld
jecxz
movq
(bad)
xchg
mov
cmp
pop
mov
mov
popf
inc
aas
or
xchg
stc
jmp
jno
push
nop
mov
mov
std
adc
jo
(bad)
mov
dec
xchg
clc
cld
jecxz
mov
shl
sahf
inc
aas
sub
retw
outs
sub
xchg
mov
cmp
pop
enter
push
sbb
or
xchg
stc
jmp
jno
and
push
loop
sahf
inc
aas
mov
sahf
inc
aas
aas
add
stc
jmp
xchg
inc
aas
aas
add
stc
jmp
xchg
inc
aas
aas
add
stc
jmp
les
inc
aas
mov
std
ds
cmps
push
xchg
sahf
add
mov
arpl
loop
arpl
loop
pop
jo
(bad)
sub
fld
(bad)
out
imul
aaa
test
out
jnp
inc
and
xchg
cld
jecxz
lea
(bad)
cmp
xor
xor
mov
pop
adc
or
ret
out
mov
std
les
or
sub
cld
mov
loop
adc
(bad)
sub
fiadd
mov
jecxz
push
mov
loop
or
inc
jbe
or
ds
cld
push
cli
cmp
icebp
mov
loop
das
or
inc
jbe
or
sub
mov
jecxz
sub
in
std
xchg
inc
rol
daa
adc
std
cmp
ds
cld
push
xchg
sahf
inc
aas
mov
and
popa
retf
xor
cmp
es
jno
das
or
push
test
or
inc
jbe
inc
xchg
aas
push
add
sub
push
retf
push
test
ins
inc
dec
mov
mov
pop
mov
inc
pop
inc
xchg
adc
or
mov
mov
stc
xchg
cld
jecxz
add
adc
mov
(bad)
push
outs
pop
mov
rcl
(bad)
ds
mov
mov
mov
mov
rcl
in
dec
ins
xor
inc
inc
and
nop
push
jecxz
stos
or
dec
es
pushf
js
std
test
dec
(bad)
test
loop
pop
mov
fst
push
(bad)
ds
mov
sahf
clc
std
ds
inc
arpl
int3
dec
inc
mov
push
retf
rol
mov
jecxz
std
(bad)
aas
xor
push
mov
ret
test
mov
mov
dec
xor
ins
or
mov
std
pop
jns
mov
cmp
push
xchg
or
outs
dec
inc
adc
ja
mov
or
daa
fcomp
std
cmp
test
repz
ds
sbb
retf
mov
pop
or
std
xchg
inc
aad
push
mov
std
xor
pop
push
inc
sub
push
daa
jg
(bad)
ds
popf
js
std
mul
cs
aas
sahf
ret
sub
mov
xchg
sub
rcr
(bad)
es
(bad)
ds
xor
mov
mov
mov
sub
inc
or
out
ret
std
rcr
(bad)
mov
ins
inc
inc
inc
sub
(bad)
mov
in
xchg
cld
jecxz
add
or
out
daa
ret
cmp
jmp
add
out
xchg
inc
bound
xchg
mov
movs
xchg
cld
jecxz
lea
jecxz
movs
mov
jecxz
ds
(bad)
push
test
in
test
jecxz
sub
ss
retf
xchg
inc
push
xchg
mov
movs
xchg
cld
jecxz
mov
mov
and
int3
mov
lea
xchg
adc
jg
inc
inc
mov
cmp
enter
dec
loope
inc
mov
outs
jl
or
enter
push
bound
inc
aas
inc
xor
retf
pop
mov
mov
pop
or
inc
sub
movs
push
(bad)
mov
test
aas
and
in
in
std
xchg
or
outs
out
les
inc
push
xchg
mov
movs
xchg
cld
jecxz
test
xchg
bound
ds
(bad)
push
test
call
out
mov
std
xor
pop
push
inc
sub
push
daa
sbb
(bad)
ds
popf
js
std
not
xor
pop
sub
mov
push
retf
jae
jge
popa
or
jecxz
test
retf
fstp
mov
mov
mov
or
test
mov
mov
jecxz
ds
rcl
retf
test
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
xchg
sub
jno
outs
ror
retf
cmp
jecxz
ds
or
je
(bad)
call
icebp
xchg
std
jmp
mov
std
jmp
addr16
sahf
add
cmp
in
addr16
sahf
cmps
(bad)
ds
out
cld
jecxz
ret
jbe
push
test
mov
push
jb
ins
jae
sahf
fiadd
mov
adc
pop
mov
inc
aas
mov
pop
std
jmp
in
mul
std
es
and
ds
scas
das
aas
mov
jae
inc
sub
nop
cld
jecxz
jae
jecxz
(bad)
sti
jg
test
call
push
xor
mov
cmp
inc
push
test
in
(bad)
sti
or
adc
jmp
jl
nop
sahf
bound
mov
push
add
out
sub
out
std
shl
mov
inc
sahf
mov
mov
jb
mov
jecxz
ds
std
cmp
mov
push
add
and
jmp
(bad)
mov
retf
or
out
icebp
jmp
std
xchg
push
jecxz
ds
adc
or
inc
sahf
idiv
ds
cmp
mov
mov
es
add
mov
mov
add
enter
imul
loope
test
jmp
push
cmc
cli
jecxz
inc
pop
test
cwde
inc
aas
jge
movs
push
(bad)
jecxz
hlt
cli
jecxz
jmp
sub
add
mov
or
ror
sbb
sbb
cmp
inc
inc
sub
dec
sahf
icebp
std
ds
ret
jno
arpl
retf
mov
pop
push
jg
jnp
dec
jg
fisub
mov
retf
pop
xchg
mov
jle
mov
in
mov
aaa
(bad)
cmps
arpl
ds
pop
push
aas
mov
or
mov
in
mov
mov
xchg
repz
int3
or
mov
add
xchg
cmp
(bad)
lds
xchg
mov
mov
inc
aas
jo
(bad)
ds
int
mov
cmp
aas
mov
xor
sti
or
mov
in
or
std
cwde
jns
push
arpl
jecxz
sbb
add
jb
movs
mov
mov
std
sub
inc
arpl
jmp
das
xchg
movs
mov
mov
std
sub
(bad)
sub
push
(bad)
fs
or
dec
sub
in
or
std
leave
cli
pop
or
xchg
(bad)
cmps
arpl
mov
or
cs
or
mov
imul
mov
mov
ret
ficomp
rcr
jle
mov
retf
rcl
(bad)
cmp
mov
jp
cmp
addr16
xchg
mov
mov
mov
std
daa
clc
loop
ds
sub
dec
fnclex
std
dec
mov
inc
arpl
jecxz
sbb
outs
inc
arpl
mov
cmps
arpl
sahf
pop
(bad)
ds
push
lds
and
in
ds
fsubr
inc
aas
cmp
mov
mov
std
daa
lods
loop
ds
rol
xchg
mov
(bad)
pop
lahf
dec
push
aas
mov
(bad)
fs
or
dec
sub
(bad)
daa
lahf
cmp
mov
in
sub
(bad)
ds
movs
out
mov
std
pop
xchg
push
cld
ds
(bad)
sbb
mov
(bad)
div
mov
ds
mov
lock
fstp
push
pop
adc
xchg
mov
fstp
push
pop
add
jns
mov
pop
xor
(bad)
test
retf
pushf
fwait
mov
mov
leave
mov
std
je
out
inc
aas
sahf
outs
pop
aas
mov
inc
dec
cmp
jge
repz
cmp
add
sub
leave
xor
dec
nop
xchg
add
test
or
mov
cmp
bound
scas
out
popa
cmp
add
xor
push
nop
xchg
add
test
mov
add
int3
popf
aas
mov
fiadd
rol
add
nop
pop
mov
out
mov
std
sbb
fcom
repz
aas
mov
ret
pop
fild
sub
xchg
pop
xor
inc
aaa
xchg
add
test
sub
nop
pop
rcr
and
push
aas
mov
ret
sub
test
sub
sbb
jmp
pop
push
pop
or
sti
repz
sub
sub
xor
sbb
pop
out
or
std
sbb
(bad)
test
cmp
push
sbb
(bad)
pushf
scas
cmp
dec
aas
(bad)
ds
fild
cmps
retf
add
xchg
jecxz
pop
shr
daa
mov
(bad)
ds
lods
cmp
add
scas
iret
add
sbb
push
ret
(bad)
push
pop
in
(bad)
cmps
retf
mov
or
mov
or
outs
jmp
(bad)
and
(bad)
outs
jnp
inc
(bad)
jmp
scas
mov
pop
outs
inc
ds
pop
add
xchg
call
jmp
jecxz
ds
xor
mov
(bad)
ds
sub
cwde
inc
mov
dec
movs
fcmovnbe
jge
sbb
out
mov
or
movs
cwde
mov
push
les
jl
cmp
add
sub
fild
add
test
mov
add
into
outs
xchg
or
mov
mov
fiadd
rol
jmp
push
nop
pop
rcr
xchg
sub
nop
pop
rcr
and
addr16
mov
in
sbb
(bad)
test
cmp
or
or
jo
mov
fiadd
fld
pop
sub
fild
add
sbb
jmp
nop
xchg
add
test
cmp
test
popf
adc
jmp
loop
movs
inc
sub
mov
sti
(bad)
lods
mov
jnp
(bad)
push
cld
retf
mov
ror
inc
sub
enter
test
push
inc
dec
fnclex
std
ds
sub
sbb
fcmovnb
add
outs
jmp
in
leave
xchg
iret
movs
icebp
mov
imul
sbb
xchg
mov
inc
cwde
sub
inc
mov
sub
and
push
pushf
jns
add
scas
dec
add
stos
pushf
inc
jecxz
add
jecxz
aas
mov
adc
lods
jae
lods
sub
ds
std
mov
data16
mov
or
pop
jbe
mov
std
adc
sbb
sub
sbb
sub
hlt
pop
shl
ds
jns
(bad)
pop
jbe
push
inc
mov
std
adc
or
(bad)
in
mov
std
test
outs
out
daa
cmovle
cmp
rol
imul
mov
push
xchg
inc
sbb
mov
imul
div
mov
int3
sub
data16
jb
inc
inc
and
mov
sbb
mov
push
retf
add
jbe
sub
aas
mov
lds
and
jl
repz
xchg
push
int3
add
ret
mov
les
mov
inc
inc
sub
inc
mov
inc
pop
add
outs
jmp
out
cmp
ins
inc
cmp
outs
sbb
mov
std
leave
mov
jecxz
leave
sti
jmp
pushf
ret
cmp
cli
ds
inc
pop
call
test
loop
xchg
packssdw
arpl
xor
(bad)
loopne
jecxz
ds
sub
push
sti
fistp
aas
mov
or
sub
std
mov
retf
adc
outs
ds
(bad)
mov
test
ds
mov
add
ds
pop
popf
adc
mov
cmp
add
sti
fbstp
inc
xor
ds
std
mov
loop
dec
mov
or
sub
in
and
std
sar
test
inc
pop
call
rcl
inc
dec
cmp
aas
inc
xor
enter
test
stos
inc
das
add
aas
imul
aas
sub
mov
mov
inc
sub
jmp
jecxz
ds
push
nop
mov
push
daa
call
test
jecxz
leave
ja
rcl
addr16
push
jecxz
dec
mov
push
test
mov
or
sub
in
and
std
sar
add
outs
jmp
arpl
mov
inc
sbb
push
inc
aas
inc
sub
enter
test
ins
inc
and
sbb
sti
retf
mov
dec
out
aas
cmp
aas
cmp
aas
cmp
aas
jge
out
aaa
daa
sub
(bad)
sbb
xchg
jecxz
(bad)
sti
mov
std
sbb
les
outs
inc
inc
aas
sub
retf
xchg
outs
inc
inc
mov
out
hlt
jecxz
cmp
cmp
aas
cmp
aas
sub
popa
retf
std
ds
add
adc
aas
mov
std
sub
xchg
ds
mov
cmps
push
retf
push
xchg
mov
inc
inc
inc
and
ret
cmp
xrelease
jecxz
ds
push
sub
dec
dec
sti
out
cld
scas
retf
dec
mov
push
retf
cld
scas
mov
hlt
mov
pop
push
daa
inc
dec
(bad)
cmp
xor
pop
push
ds
in
mov
std
retf
mov
mov
push
test
adc
xchg
inc
ror
or
jnp
mov
mov
inc
push
retf
jae
aas
sub
mov
sub
in
sub
std
leave
add
dec
int3
mov
call
add
jmp
inc
cmp
std
mov
outs
inc
inc
mov
or
sti
fild
dec
mov
enter
mov
xor
enter
dec
sub
jmp
std
retf
mov
call
retf
outs
jmp
dec
(bad)
cmps
out
inc
aas
mov
push
daa
xchg
pop
call
and
and
std
div
xrelease
(bad)
xchg
out
ds
push
xchg
or
xor
push
sbb
xor
std
sbb
aas
mov
std
leave
cli
pop
push
retf
mov
sub
cmp
inc
sbb
xchg
xchg
ret
repnz
in
ds
inc
repnz
jecxz
xchg
imul
add
mov
std
sar
popf
adc
or
mov
std
mov
cli
jecxz
dec
inc
xor
ss
mov
jecxz
ds
dec
cli
sub
inc
aas
mov
pop
or
aas
das
push
enter
stos
ret
add
addr16
and
mov
and
dec
daa
xor
(bad)
ds
jmp
retf
adc
mov
add
jbe
add
and
push
daa
jle
(bad)
ds
mov
push
(bad)
ds
and
ret
pop
or
push
xchg
or
cmp
into
sub
aas
xor
or
mov
or
push
sub
repnz
inc
icebp
xchg
push
(bad)
jecxz
inc
mul
inc
cmp
dec
ins
sbb
mov
mov
loope
add
sbb
xchg
addr16
into
sub
aas
xor
addr16
or
out
mov
push
cwde
mov
sub
enter
pop
mov
jo
fiadd
inc
pextrw
cdq
xor
cmp
outs
shl
pop
add
push
std
ds
rcl
pusha
and
and
mov
and
dec
daa
dec
push
(bad)
ds
jmp
retf
adc
mov
add
jbe
add
in
sub
arpl
push
add
mov
jae
lds
xor
and
mov
sahf
xor
mov
push
sub
test
inc
fiadd
movs
jb
inc
sub
test
and
push
enter
xchg
inc
(bad)
out
mov
std
leave
add
push
inc
jle
out
retf
in
dec
ins
sbb
imul
add
out
hlt
pop
inc
mov
fsubr
mov
inc
pop
cwde
jns
cmp
into
sub
aas
xor
addr16
mov
and
lds
mov
push
add
and
icebp
xchg
push
(bad)
jecxz
inc
mul
inc
jns
retf
mov
or
sub
inc
inc
xor
dec
shr
dec
inc
sub
inc
lods
(bad)
mov
cmc
and
mov
(bad)
add
inc
sub
inc
lods
lds
adc
cmps
push
aas
or
ret
ror
pop
adc
sub
cld
mov
retf
lock
jecxz
cwde
lahf
ins
(bad)
ds
pop
daa
push
inc
(bad)
ds
pop
or
xor
push
movs
lds
inc
enter
mov
mov
addr16
dec
mov
or
sub
xchg
ret
cmc
aam
mov
cld
fnstcw
jp
inc
test
dec
jmp
outs
(bad)
retf
aaa
pushf
ret
movs
cmp
aas
sub
call
popf
sbb
std
movs
icebp
inc
or
mov
std
in
sbb
std
xchg
jmp
inc
rcl
cmp
or
push
mov
loop
dec
mov
push
daa
cmps
push
(bad)
ds
out
mov
std
test
retf
mov
mov
mov
sahf
inc
jecxz
test
and
fs
ins
in
cmc
xchg
add
sub
push
mov
fs
aas
sub
xor
mov
sub
ds
ror
out
mov
aaa
std
je
test
outs
aas
mov
ret
fdivr
mov
dec
or
push
cmp
add
scas
(bad)
ds
or
dec
ins
sub
add
sub
ds
fucomi
pop
lds
ret
arpl
dec
fisttp
mov
dec
or
mov
dec
or
pop
cld
loop
xor
add
sub
jno
ss
mov
push
hlt
sub
dec
dec
sti
(bad)
je
cmps
inc
aas
and
dec
test
or
xor
jnp
(bad)
mov
cmp
jb
sbb
mov
mov
adc
scas
out
sbb
mov
dec
or
and
sti
out
cld
test
aam
lds
test
aas
(bad)
cmp
in
arpl
call
mov
sbb
ins
inc
pop
or
add
out
mov
std
test
mov
push
div
add
sahf
lods
pop
aas
mov
cmp
ud0
sub
dec
pop
daa
imul
movhps
add
mov
or
outs
inc
arpl
out
mov
xchg
(bad)
hlt
pop
lods
mov
inc
arpl
ins
push
arpl
outs
inc
arpl
out
mov
xchg
(bad)
hlt
pop
lods
mov
inc
arpl
ins
push
arpl
out
mov
arpl
outs
inc
arpl
push
shl
cmps
outs
(bad)
retf
push
cmps
outs
shr
imul
retf
push
retf
adc
cli
pop
push
adc
mov
dec
xchg
pop
repnz
outs
out
sbb
sbb
jle
inc
arpl
(bad)
inc
xchg
jp
or
mov
push
add
mov
xor
adc
dec
mov
fcmovu
mov
aas
adc
add
jecxz
or
cmp
ds
sub
dec
shl
arpl
fcmovbe
ss
addr16
aas
aas
sub
dec
aas
cmp
dec
inc
sub
push
shl
push
lods
mov
inc
cli
pop
push
enter
dec
jbe
sbb
add
adc
cli
pop
push
jb
fucomi
retf
or
cmps
outs
shl
ja
mov
xor
push
inc
cmp
dec
inc
sub
dec
xchg
iret
sbb
mov
mov
lods
dec
and
(bad)
retf
mov
push
push
arpl
pop
push
mov
push
inc
arpl
pop
push
push
pop
adc
or
push
pop
or
or
mov
jmp
sbb
inc
pop
add
jecxz
or
mov
or
outs
jmp
xor
retf
mov
inc
mov
add
icebp
fisttp
lods
stos
add
mov
jb
ja
add
cwde
out
cmp
jecxz
aam
pop
inc
aas
inc
stos
mov
rcr
add
jecxz
(bad)
out
inc
aas
mov
mov
sub
into
mov
mov
xor
dec
neg
aas
and
aas
inc
pop
inc
aas
fnstenv
test
sub
add
les
stos
add
scas
in
outs
or
cld
js
mov
inc
aas
fnstenv
test
sub
sar
mov
mov
in
or
into
fnstenv
add
in
outs
retf
test
cld
js
mov
inc
aas
lds
aas
mov
inc
aas
stos
pop
inc
aas
mov
pop
inc
aas
xchg
pop
inc
aas
mov
aas
sbb
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
call
std
inc
cmps
out
fidivr
mov
ficomp
aas
out
inc
aas
repnz
inc
aas
push
pop
inc
aas
inc
sub
popf
adc
jmp
adc
jmp
std
in
test
jno
aas
inc
jmp
std
in
test
sub
popf
adc
pop
das
cmp
aaa
cmp
jecxz
arpl
add
cwde
out
cmp
mov
fidivr
mov
lods
mov
jp
mov
inc
aas
inc
stos
mov
shr
add
jecxz
les
inc
aas
mov
mov
xor
dec
jle
inc
aas
sahf
pop
inc
aas
(bad)
pop
inc
aas
inc
sub
bound
movs
out
add
call
dec
xchg
jp
mov
inc
aas
inc
sub
bound
sub
add
data16
inc
cmp
add
scas
in
outs
retf
mov
mov
out
xor
dec
inc
sub
bound
sub
(bad)
std
in
test
sub
shl
inc
lds
ds
sti
xor
std
arpl
jp
mov
inc
aas
sbb
aas
and
aas
sub
aas
xor
aas
cmp
aas
inc
pusha
inc
aas
dec
pusha
inc
aas
pop
pusha
inc
aas
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
call
std
inc
cmps
out
fidivr
mov
jbe
inc
aas
jle
inc
aas
mov
aas
mov
sub
popf
adc
sub
(bad)
std
out
test
jno
aas
inc
sub
(bad)
std
out
test
sub
popf
adc
sub
(bad)
std
out
test
sub
(bad)
std
in
test
cmp
mov
out
sub
mov
sti
jmp
inc
and
push
(bad)
mov
adc
sub
cld
mov
loop
inc
sahf
jmp
inc
dec
adc
jnp
mov
push
retf
push
mov
outs
pop
inc
inc
popa
or
xchg
addr16
lods
ret
jmp
retf
xchg
pop
adc
mov
xchg
pop
adc
mov
mov
inc
sub
ret
mov
sub
add
ds
mov
fs
add
inc
dec
inc
xacquire
cli
test
and
add
mov
cmps
adc
xor
mov
arpl
pop
sub
or
xchg
xor
lds
(bad)
jmp
aad
pop
jge
jne
cld
jecxz
hlt
adc
std
leave
sub
push
les
add
mov
push
aas
mov
pop
add
out
daa
test
std
lods
sub
inc
mov
add
aas
mov
mov
xor
or
and
dec
mov
mov
aaa
int
dec
mov
sub
(bad)
jecxz
ret
mov
dec
jecxz
sub
stos
mov
cmp
mov
inc
in
mov
xor
xchg
inc
rcl
xchg
sbb
or
ds
add
jmp
jb
mov
push
ds
cld
mov
retf
sub
mov
add
mov
addr16
sahf
repz
aas
mov
dec
dec
inc
pop
or
xor
push
movs
lds
inc
enter
mov
mov
hlt
jb
lds
repz
mov
iret
inc
leave
mov
ins
pop
dec
mov
ins
out
leave
xchg
dec
sbb
mov
lds
jg
jmp
add
mov
pop
leave
mov
movs
jae
jmp
lods
inc
leave
mov
dec
aaa
pushf
ret
movs
cmp
aas
sub
mov
movs
jb
jmp
jecxz
test
mov
arpl
lock
pop
jbe
fiadd
into
or
mov
push
jb
inc
pop
call
and
imul
retf
jb
retf
inc
mov
std
leave
xor
push
mov
movs
out
sub
pusha
inc
jmp
(bad)
mov
fcmovb
inc
mov
std
mov
outs
xlat
add
mov
test
jmp
ret
jbe
sub
sbb
pop
popf
adc
jecxz
ds
test
sub
ret
inc
in
lods
stos
add
mov
jb
inc
mov
push
mov
aas
pop
retf
push
sahf
jns
adc
mov
sahf
std
cmp
mov
pop
ror
les
in
aas
aaa
pop
fadd
mov
ret
lods
pop
sbb
js
std
cmp
js
std
ds
(bad)
enter
rcr
adc
ds
std
(bad)
int
add
ins
adc
(bad)
call
jb
ins
add
mov
addr16
sub
sbb
pop
popf
adc
dec
std
cmps
ss
aas
push
push
mov
mov
lahf
aas
mov
std
mov
ins
and
mov
std
shl
jae
cmp
or
ds
inc
ror
pop
push
aas
mov
and
ins
inc
and
movs
jb
or
out
and
std
xchg
packuswb
mov
add
mov
cmp
in
pmulhuw
xchg
jns
test
push
aas
mov
lds
jo
pop
push
jno
pop
push
cmp
test
in
sar
test
xor
mov
jecxz
pop
sahf
push
aas
mov
ret
xor
ds
out
std
ds
jnp
mov
sbb
sub
call
sub
jns
push
add
jecxz
push
ret
aas
inc
xor
mov
mov
pop
popf
adc
mov
arpl
jecxz
cwde
jns
jp
mov
pop
and
add
ds
mov
sbb
jno
mov
and
adc
mov
mov
(bad)
jns
mov
and
data16
sub
cmps
and
(bad)
ds
dec
mov
mov
sub
ss
xchg
push
inc
ror
daa
mov
sub
(bad)
ds
pop
daa
mov
arpl
mov
out
and
std
xchg
aas
sub
ret
std
daa
ret
ds
sub
les
imul
in
ds
in
push
in
xchg
jns
test
mov
jo
dec
cmp
out
sub
pop
push
jp
mov
xchg
retf
xchg
xchg
mov
push
push
sti
(bad)
ds
mov
sahf
xchg
mov
xchg
int3
or
mov
mov
cmp
pop
inc
pop
push
test
mov
push
add
push
les
add
lds
out
(bad)
and
cld
je
cmps
inc
aas
mov
adc
mov
jecxz
ds
test
test
sub
mov
mov
push
les
mov
dec
daa
cmp
ds
cmp
pop
pop
test
push
mov
cmp
cmp
xlat
jnp
inc
jbe
jae
and
in
pushf
jecxz
cwde
jmp
sub
leave
retf
jnp
mov
movs
push
ret
cmp
sub
mov
jbe
inc
aas
inc
aad
add
add
xchg
add
mov
call
jb
cmp
ret
aas
shl
iret
popf
jns
inc
lds
mov
add
loop
(bad)
ds
inc
arpl
jecxz
add
sti
cmp
sub
mov
push
mov
call
xor
xchg
or
std
xchg
jns
mov
out
sub
add
and
fcom
mov
push
int3
xor
mov
push
add
and
movs
push
(bad)
mov
movs
xchg
cld
jecxz
retf
add
out
inc
aas
icebp
movs
jo
repz
ja
test
(bad)
sahf
dec
push
aas
mov
rol
add
ds
(bad)
push
test
out
aaa
retf
ret
dec
daa
sti
cmp
ds
cmps
mov
(bad)
xor
push
bound
inc
aas
jns
out
into
jecxz
cmp
mov
pushf
pop
mov
mov
inc
aas
movq
iret
jnp
dec
cmps
(bad)
ret
cmp
ss
std
cmp
add
jecxz
sbb
lock
call
mov
inc
aas
loope
xchg
add
jecxz
sar
(bad)
jmp
ins
or
jnp
dec
cli
pop
push
enter
iret
jnp
inc
aam
in
int
std
leave
jl
sar
or
daa
das
jecxz
lods
mov
(bad)
xchg
jle
mov
in
mov
std
les
mov
mov
dec
push
daa
leave
enter
js
mov
test
iret
jnp
inc
or
fnstcw
jg
mov
pop
push
ret
jp
cmp
js
or
pop
adc
inc
aas
or
xor
xor
jmp
mov
inc
aas
sub
push
lea
daa
xchg
(bad)
ds
cdq
mov
and
add
ds
fstp
sub
addr16
sahf
clc
push
aas
mov
jmp
retf
push
sahf
adc
rcl
mov
mov
outs
inc
inc
cmp
pop
dec
inc
xchg
(bad)
ds
idiv
mov
and
int3
pushf
aas
mov
mov
jecxz
mov
into
sub
aas
xor
addr16
or
pop
mov
mov
sub
enter
pop
mov
outs
shr
outs
adc
int3
sub
leave
jns
test
(bad)
xor
sub
jge
shl
test
out
dec
ss
pop
aas
ds
push
test
mov
jmp
push
jno
inc
push
dec
inc
jecxz
je
movs
inc
aas
sahf
fbld
mov
ret
movs
jb
cmp
push
mov
or
sub
dec
ins
xor
add
lods
ror
mov
or
and
aaa
push
leave
(bad)
outs
jp
(bad)
shl
outs
inc
cmp
jb
inc
fisttp
inc
cld
sbb
mov
addr16
test
mov
dec
cmp
jb
cmps
mov
sbb
mov
jno
ds
inc
add
call
inc
out
ret
jae
inc
and
push
leave
sbb
add
xchg
iret
scas
jb
inc
pop
sahf
inc
cmps
out
mov
std
retf
std
loop
call
pop
add
outs
jmp
cmps
inc
aas
or
jae
mov
or
sub
in
mov
std
cwde
bswap
push
ds
mov
jecxz
cmp
inc
repnz
ds
out
cwde
out
add
icebp
fidiv
out
add
retf
into
leave
mov
sbb
inc
sub
cmp
cs
sti
jno
or
and
jecxz
retf
retf
retf
add
inc
pop
call
retf
mov
or
std
call
std
ds
dec
and
jmp
jmp
retf
fiadd
cmp
inc
lods
cmps
add
mov
jno
inc
out
aas
ja
pop
iret
ret
jg
dec
ss
std
ds
jmp
mov
mov
ja
push
xchg
sar
cmp
lods
pop
leave
inc
cmps
out
ret
sub
jl
rol
(bad)
aas
mov
jae
fninit
(bad)
aas
aaa
pop
shl
(bad)
aas
sub
jle
mov
std
mov
adc
mov
ja
pop
xor
jbe
in
ja
pop
and
add
stc
cmp
sub
and
adc
mov
clc
loope
sahf
adc
pop
call
pop
add
outs
jmp
addr16
ds
aas
ss
xor
in
std
sbb
sub
lods
rcl
xor
(bad)
dec
mov
push
daa
jbe
std
ds
jmp
daa
outs
xor
dec
inc
inc
cmc
or
js
mov
lods
imul
jecxz
mov
ins
dec
inc
mul
mov
repnz
ja
push
dec
jge
inc
dec
sub
mov
lods
iret
add
out
jb
inc
aad
ret
mov
test
mov
push
retf
pop
pushf
jns
mov
inc
sub
fsubr
outs
inc
inc
dec
fstp
cmp
aas
xor
adc
call
mov
adc
jmp
cmp
cli
fucom
std
test
ins
inc
dec
movhps
inc
test
xchg
dec
scas
mov
fnstenv
loope
cli
call
adc
leave
mov
outs
inc
dec
inc
xor
leave
mov
aam
or
cdq
movs
in
inc
inc
xor
pop
cmp
jb
clc
into
fmulp
nop
outs
add
jbe
sbb
ins
aam
or
push
mov
add
add
out
sub
outs
inc
dec
adc
outs
shr
(bad)
pop
jbe
rcr
mov
or
mov
or
and
imul
leave
adc
or
js
std
ds
adc
shl
mov
fcmovb
inc
mov
std
mov
addr16
sub
push
retf
loope
mov
(bad)
push
inc
xchg
iret
adc
mov
ins
or
(bad)
pop
hlt
call
mov
scas
mov
inc
scas
addr16
ds
fistp
mov
jle
xchg
outs
dec
cmp
scas
jb
call
int
jno
pop
or
pop
add
jle
mov
clc
loope
call
ror
fistp
jns
retf
cmp
inc
aas
push
xchg
aas
push
or
sbb
mov
ins
inc
push
jge
push
outs
call
pop
(bad)
ds
popa
loopne
jecxz
ds
es
ret
jae
jge
sbb
mov
std
sub
outs
dec
arpl
outs
inc
arpl
ins
inc
arpl
pop
push
retf
xchg
cli
pop
push
enter
mov
cmp
sub
sbb
xor
cmp
std
ds
mov
and
jns
je
jecxz
ds
push
daa
or
cmp
jno
inc
daa
push
(bad)
sahf
js
aas
mov
mov
pop
repz
or
retf
or
sub
push
ds
or
stc
dec
sahf
mov
ret
in
or
pop
sub
ds
xor
mov
mov
mov
leave
sbb
add
loop
push
jns
mov
cmp
push
retf
les
xor
pop
sahf
sub
aas
mov
inc
and
push
pop
fidivr
sub
dec
daa
xor
cmp
mov
test
hlt
test
and
cmp
aas
mov
(bad)
ds
push
aas
mov
push
retf
jae
mov
add
adc
push
retf
push
xchg
cmp
xor
in
xchg
inc
fsub
test
in
inc
in
sar
push
jmp
adc
cld
inc
daa
mov
std
cmp
aas
packuswb
outs
lds
mov
sub
xchg
aas
sub
enter
test
stos
inc
sub
jecxz
ds
jno
pop
mov
or
sti
(bad)
std
ds
dec
daa
ficom
cmp
mov
cs
mov
icebp
mov
arpl
retf
mov
sar
mov
pop
push
ret
jp
cmp
pop
mov
adc
inc
aas
or
xor
xor
jmp
mov
inc
aas
sub
push
lea
daa
xor
ds
cdq
mov
and
add
ds
fstp
sub
addr16
sahf
fmul
mov
jmp
retf
push
sahf
adc
rcl
mov
xchg
or
jmp
aaa
div
mov
mov
std
shr
std
cmp
ds
inc
push
(bad)
mov
std
ds
cmp
adc
and
adc
mov
or
mov
push
cwde
mov
sub
enter
add
inc
cmps
jmp
push
(bad)
jecxz
add
push
dec
ins
lods
hlt
add
jge
lds
dec
mov
add
sti
jmp
pushf
mov
dec
pop
aas
ds
push
retf
push
test
sti
jmp
xchg
mov
call
in
sar
jmp
xchg
cmp
sti
fucomip
dec
lds
dec
cmp
push
dec
ja
pop
call
std
cmps
data16
aas
push
push
mov
mov
lahf
aas
mov
std
mov
ins
and
mov
std
shl
pop
inc
jmp
repnz
mov
retf
pop
xor
out
ds
pop
or
pop
or
mov
out
mov
cmps
inc
aas
cmp
add
sbb
jnp
cmp
fimul
aad
ds
pop
daa
add
(bad)
ds
jnp
or
imul
lds
aas
mov
cmp
inc
aas
sub
int3
push
cmps
mov
add
push
pop
sbb
inc
(bad)
ds
inc
sbb
stos
jb
inc
daa
cli
xchg
sub
jp
push
add
jl
push
ds
out
mov
cld
pop
aas
mov
inc
pop
or
js
in
sar
mov
lods
pop
add
mov
xchg
retf
sub
push
xchg
mov
push
add
jecxz
push
into
ss
aas
aas
sub
jp
pop
and
stc
fild
sti
ret
cmp
push
aaa
std
mov
int3
push
sub
sar
mov
jecxz
ja
mov
jae
and
pop
ret
and
aaa
push
ds
ror
sub
(bad)
sti
mov
lds
mov
cmp
cmp
out
es
xchg
cmp
ds
jg
ds
jae
inc
inc
push
jb
dec
pop
daa
aas
das
(bad)
ds
cmps
xor
mov
std
shl
inc
cmp
jmp
enter
mov
lds
aas
mov
addr16
sahf
xlat
dec
aas
mov
lds
jo
adc
jno
pop
push
aaa
out
and
std
sar
aaa
aas
popa
into
les
jecxz
jns
mov
xchg
movs
jmp
mov
jecxz
pop
sahf
jecxz
aas
mov
ret
movs
jb
inc
sub
enter
ja
int3
mov
enter
jmp
push
or
inc
aas
sub
jp
push
add
jl
std
mov
loop
sbb
cmp
mov
jecxz
pop
sahf
imul
inc
inc
push
ret
(bad)
mov
cmp
mov
push
add
jecxz
push
into
ss
aas
aas
sub
les
cmp
jmp
pop
mov
test
dec
xchg
mov
fisub
mov
std
ds
pop
(bad)
daa
mov
test
sub
cmp
mov
xor
retf
repz
test
xor
ds
or
ds
inc
sbb
stos
jae
out
and
jmp
jno
or
in
mov
push
les
and
jecxz
sub
outs
jae
inc
inc
push
test
mov
push
jb
cmps
xor
cmp
fidiv
mov
stos
or
xchg
or
sub
push
test
sbb
mov
sub
out
and
std
xchg
cmp
mov
jecxz
ds
cmp
retf
push
ds
xchg
sub
ds
les
stos
inc
and
int3
ins
lods
mov
add
loop
and
jbe
inc
sub
mov
inc
sub
(bad)
and
in
inc
in
xchg
movq
popf
jg
retf
mov
or
outs
jmp
xor
retf
mov
inc
mov
add
icebp
fisttp
lods
stos
add
mov
jb
ja
add
cwde
out
cmp
jecxz
aam
jne
aas
inc
stos
mov
rcr
add
jecxz
les
or
into
mov
mov
xchg
je
aas
ret
aas
out
inc
aas
fnstenv
test
sub
add
les
stos
add
scas
in
outs
or
pushf
pop
fnstenv
test
sub
sar
mov
mov
in
or
into
fnstenv
add
in
outs
retf
test
pushf
pop
gs
aas
push
jne
aas
dec
jne
aas
inc
jne
aas
cmp
aas
xor
aas
sub
aas
and
aas
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
call
std
inc
cmps
out
fidivr
sar
jecxz
ds
inc
aas
xchg
aas
xchg
jne
aas
cmps
jne
aas
inc
sub
popf
adc
jmp
adc
jmp
std
in
test
jno
aas
inc
jmp
std
in
test
sub
popf
adc
pop
das
cmp
aaa
cmp
jecxz
arpl
add
cwde
out
cmp
mov
fidivr
sar
jecxz
lods
mov
nop
xor
mov
shr
add
jecxz
les
jbe
aas
mov
mov
push
jbe
aas
ds
aas
data16
aas
inc
sub
bound
movs
out
add
call
dec
xor
xor
add
ins
inc
inc
inc
sub
add
data16
inc
cmp
add
scas
in
outs
retf
mov
mov
(bad)
into
inc
sub
bound
sub
(bad)
std
in
test
sub
shl
inc
lds
ds
sti
xor
std
arpl
xchg
xor
inc
aas
ret
aas
retf
aas
shl
aas
fidiv
aas
loop
inc
aas
jmp
aas
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
call
std
inc
cmps
out
fidivr
sar
jecxz
ds
ja
aas
push
ja
aas
cs
aas
inc
ja
aas
inc
sub
popf
adc
sub
(bad)
std
out
test
jno
aas
inc
sub
(bad)
std
out
test
sub
popf
adc
sub
(bad)
std
out
test
sub
(bad)
std
in
test
outs
dec
arpl
jo
inc
sub
arpl
(bad)
and
movs
cmp
iret
aaa
(bad)
cmps
retf
jecxz
mov
mov
mov
fninit
std
ds
push
ret
arpl
xor
xchg
inc
rol
aas
mov
push
mov
loop
dec
mov
push
daa
call
mov
std
in
sti
jecxz
leave
sub
push
movs
lds
jb
lds
ret
out
pop
inc
sub
test
movs
jb
lds
mov
js
lock
mov
sbb
inc
sub
daa
outs
sub
movhps
daa
arpl
(bad)
ds
inc
mov
test
mov
inc
dec
psllq
shl
pop
call
retf
cmp
dec
inc
xor
inc
cmp
mov
scas
addr16
inc
sub
cmc
sbb
lds
mov
push
iret
(bad)
mov
outs
mov
in
add
inc
lods
mov
retf
loopne
ja
add
mov
(bad)
mov
outs
inc
arpl
pop
add
inc
sub
inc
lds
ret
arpl
inc
mul
mov
and
retf
add
lods
fs
jmp
add
jns
retf
mov
or
xor
inc
lods
movs
add
mov
jno
inc
in
ret
jbe
ds
std
ds
out
inc
mov
std
ds
in
ds
jl
xchg
ds
mov
aas
mov
jb
inc
and
xor
call
aas
sub
cmps
aas
mov
cld
mov
into
retf
int3
mul
mov
jns
aas
cmp
loope
ror
loopne
mov
out
add
aas
cmp
and
movs
rcl
jle
mov
std
ds
fs
(bad)
xchg
jmp
dec
test
dec
ja
push
ret
ror
inc
jae
jmp
in
test
sub
ror
dec
add
aas
in
sar
jmp
mov
(bad)
mov
fiadd
mov
cmp
add
and
mov
sahf
jge
aas
mov
push
or
xchg
push
(bad)
jecxz
inc
(bad)
data16
cmps
retf
mov
or
and
movs
jb
inc
cmp
inc
or
mov
inc
pusha
and
mov
xor
mov
std
ds
xchg
bnd
cld
sub
shr
leave
int
iret
mov
ins
dec
inc
inc
cmp
jbe
pop
cmp
jge
add
(bad)
pop
popf
jns
mov
out
sub
pop
and
xchg
mov
iret
mov
sbb
mov
movs
out
ja
push
ja
pop
add
pushf
(bad)
ds
sbb
adc
cmps
cmp
test
push
inc
repz
mov
sbb
mov
sub
push
aaa
(bad)
mov
jle
mov
cld
aas
icebp
mov
or
inc
pop
add
outs
jmp
cmp
mov
sub
retf
xor
icebp
in
sub
retf
xchg
jecxz
das
mov
loop
sub
std
push
push
xor
mov
mov
jecxz
aas
mov
push
cmps
cmc
idiv
ds
ret
das
aas
mov
test
icebp
arpl
push
movs
repz
sub
test
pop
out
out
std
xchg
(bad)
cmp
mov
push
aaa
sbb
jmp
xchg
sub
inc
aas
pop
xor
inc
inc
pop
xor
adc
mov
add
into
dec
nop
pop
rcr
and
in
(bad)
std
sar
jp
cmp
mov
sti
jmp
sbb
cmp
test
jecxz
sbb
jmp
cwde
mov
cmp
ds
jge
aas
sub
retf
xchg
jecxz
test
lods
rcl
mov
xchg
mov
xor
jecxz
push
sti
jmp
retf
inc
dec
sysexit
fs
arpl
repz
rol
jae
sahf
mov
aas
mov
cmp
bound
ret
jnp
cmp
add
xor
push
aas
mov
ret
push
push
xchg
sahf
ret
cs
mov
inc
inc
(bad)
jmp
sbb
ss
nop
xchg
add
sbb
jmp
nop
xchg
add
test
repz
mov
jecxz
pushf
scas
rol
inc
push
cwde
(bad)
(bad)
sub
push
xchg
sahf
sub
mov
inc
aaa
(bad)
jmp
mov
rol
xor
fild
pop
push
repz
std
sar
call
jmp
ror
retf
jae
test
jecxz
rol
sub
movs
inc
sub
movs
icebp
call
jb
sbb
inc
daa
sbb
add
je
(bad)
mov
dec
mov
mov
fs
fs
gs
movs
inc
sub
movs
icebp
call
jb
push
pop
mov
int3
cmp
std
ds
std
push
dec
xor
std
mov
data16
arpl
xor
jnp
mov
add
jmp
lods
std
xchg
or
fs
in
inc
mov
pushf
push
repz
mov
or
dec
ins
sub
pop
call
test
or
daa
sub
ds
xor
ret
or
out
inc
jg
push
retf
mov
jmp
call
retf
or
inc
repz
inc
mov
push
jl
out
stc
mov
mov
inc
aas
aas
sub
int3
sti
jmp
daa
pop
in
std
cmp
add
jecxz
xchg
inc
aam
ret
(bad)
in
ds
mov
mov
cmp
repz
mov
sub
int3
sti
jmp
daa
out
std
ds
aam
push
cld
add
ds
out
mov
std
xchg
sahf
add
aas
mov
out
xchg
sahf
cmp
inc
push
mov
push
add
sub
imul
sub
cwde
dec
outs
div
mov
ror
int3
pusha
add
push
mov
jecxz
test
(bad)
sahf
cmp
pop
ret
xchg
inc
sub
test
movntq
aas
sub
fsubr
cmp
mov
or
mov
cld
xchg
cwde
lods
fisttp
mov
sti
addr16
mov
fld
inc
mov
or
sti
jmp
test
outs
les
inc
sub
test
mov
ins
push
push
inc
sub
inc
cld
out
mov
mov
pop
mov
adc
cld
out
les
mov
inc
dec
shl
mov
out
push
out
pop
jns
mov
sub
push
daa
out
std
div
out
pushf
jecxz
cwde
cmp
daa
shl
pop
add
mov
or
mov
inc
inc
aas
push
mov
mov
jmp
sub
cmps
mov
inc
aas
sahf
sar
mov
ret
dec
(bad)
test
loop
arpl
retf
adc
mov
add
cmps
push
mov
out
in
mov
std
sar
xchg
sahf
cmp
mov
call
jmp
jb
mov
and
stc
xchg
xchg
cld
jecxz
ds
outs
dec
test
jecxz
retf
adc
repz
mov
pop
je
(bad)
mov
test
jmp
push
mov
inc
aas
or
outs
cmp
shl
inc
jmp
cmp
add
ja
mov
mov
xchg
jecxz
xor
(bad)
lahf
std
jecxz
movhps
(bad)
es
cmp
add
ds
jmp
jl
mov
fst
and
in
repz
xchg
jns
or
mov
cmps
push
retf
push
jp
or
mov
outs
add
jbe
add
xchg
inc
mov
outs
jmp
jecxz
stos
push
in
ds
(bad)
enter
ds
jmp
lock
int
inc
mov
sahf
fwait
js
inc
scas
out
sahf
and
in
repz
xchg
cmp
aas
inc
popa
push
xchg
sahf
inc
dec
aas
mov
xchg
data16
mov
xor
enter
sahf
xor
mov
ret
movs
jb
aas
popa
loop
add
std
daa
enter
cmp
aas
lds
aas
mov
out
mov
std
leave
sub
addr16
sahf
xor
aas
mov
rol
out
les
std
ds
jae
and
pop
ret
and
in
in
repnz
xchg
jge
cli
inc
mov
std
retf
sti
mov
dec
retf
push
daa
out
inc
(bad)
cmp
cmp
sbb
je
sbb
aas
sub
cmp
sub
std
mov
int3
fcomp
(bad)
push
jnp
and
mov
jecxz
cwde
bswap
cmp
daa
shl
cmp
aas
sub
pop
inc
pop
or
mov
push
add
fidiv
and
pop
ret
and
dec
push
ds
ror
sub
(bad)
sti
(bad)
mov
ins
or
mov
std
popf
adc
mov
mov
es
cld
jecxz
stos
push
in
ds
(bad)
enter
ds
jmp
cmps
inc
aas
cmp
add
pop
(bad)
packuswb
mov
jae
or
or
sti
mov
dec
aas
pop
fisubr
mov
xor
ds
in
std
ds
jnp
mov
push
retf
push
aas
mov
rol
out
test
in
in
icebp
jecxz
xchg
jge
cli
inc
mov
std
retf
sti
mov
dec
ds
in
adc
std
sar
test
repnz
ja
add
sub
jmp
ret
std
daa
jecxz
std
cmp
aas
sub
cld
mov
dec
(bad)
cmp
mov
adc
pop
sub
leave
cmps
outs
(bad)
retf
(bad)
enter
ds
pop
call
pop
daa
dec
pop
(bad)
ds
cmps
push
dec
mov
and
pop
and
call
ret
cmp
xchg
cmp
aas
or
mov
in
mov
addr16
into
sub
aas
xor
or
jns
push
(bad)
sahf
aad
aas
mov
push
sub
outs
or
int3
sub
dec
ins
cmps
mov
data16
movs
jb
inc
add
fs
ins
aas
pop
cli
mov
dec
push
mov
(bad)
inc
inc
add
loopne
test
push
(bad)
ds
test
jle
mov
xor
repnz
(bad)
push
jle
out
pop
push
sti
repz
aas
mov
call
mov
icebp
cmp
(bad)
jmp
ds
sbb
mov
pop
adc
push
inc
jmp
sub
xchg
sub
add
sub
mov
(bad)
sti
xlat
cmp
mov
xor
addr16
or
xor
mov
sub
enter
pop
mov
repnz
sub
cmp
into
sub
aas
xor
push
xchg
sahf
in
inc
aas
mov
push
sub
test
retf
and
cmp
(bad)
sahf
mov
mov
cmp
xor
jne
pop
test
clc
add
push
sub
add
pop
shl
sub
cmp
sub
or
jae
mov
outs
inc
cmp
int3
bound
mov
mov
inc
or
mov
pop
add
sti
jmp
test
into
dec
out
mov
jae
pop
in
jge
les
mov
fs
mov
std
mov
sub
aaa
mov
pop
and
lods
sub
inc
jge
pop
aas
mov
jno
cmp
idiv
mov
pop
add
mov
ret
enter
sbb
jmp
add
mov
mov
inc
aaa
mov
push
ss
inc
pop
call
std
ds
xor
inc
jmp
aam
xchg
mov
and
(bad)
jecxz
xor
fst
mov
mul
add
xor
inc
shl
jecxz
ds
lock
sub
pushf
aas
in
rol
mov
adc
scas
scas
(bad)
ds
or
retf
jecxz
ds
add
add
stos
(bad)
push
mov
std
pushf
jns
es
mov
cmp
cmps
out
(bad)
shl
test
mov
jecxz
cwde
jns
mov
or
mov
fld
inc
lods
(bad)
ds
test
inc
mov
jne
cmp
jp
cmp
or
and
xchg
call
(bad)
fcom
cmc
cmp
(bad)
pusha
add
enter
cmp
repnz
mov
std
mov
mov
mov
or
outs
add
sahf
push
inc
aas
sub
cmp
popa
(bad)
jle
xor
(bad)
ds
clc
inc
mov
add
ds
dec
dec
cmp
les
adc
lods
xrelease
jecxz
sub
push
hlt
dec
inc
adc
ds
or
lods
pop
bswap
ja
cmc
cmp
into
repnz
add
jmp
inc
push
mov
jmp
push
cmp
or
mov
in
xor
jecxz
or
lods
pop
bswap
ja
cmc
cmp
repnz
add
jmp
inc
push
mov
jmp
push
cmp
or
mov
in
xor
jecxz
or
lods
pop
bswap
ja
cmc
cmp
repnz
add
jmp
jmp
pusha
mov
lods
mov
ins
push
inc
xor
cmp
repnz
dec
jmp
inc
cmp
or
sub
out
xor
std
fbstp
sub
int3
sti
jmp
daa
fs
cmp
pop
cmp
xor
mov
inc
inc
inc
sub
(bad)
sahf
ins
hlt
ds
jmp
(bad)
sahf
cld
std
ds
mov
dec
inc
aam
test
out
pop
mov
pop
pushf
jns
inc
arpl
adc
sbb
push
add
aas
mov
cmp
or
dec
xchg
jecxz
cwde
aas
sub
les
(bad)
std
jmp
jno
inc
xor
retf
jle
cmp
xchg
ss
into
test
fidivr
retf
aas
mov
mov
jmp
pusha
sbb
cmp
xor
sub
outs
in
and
jmp
add
aas
xor
dec
inc
mov
std
(bad)
push
inc
aas
aas
and
lods
cmp
xchg
pop
add
sahf
push
inc
aas
inc
xor
mov
mov
into
hlt
retf
inc
enter
inc
loope
test
cli
pop
adc
ss
or
mov
cmc
ds
call
(bad)
inc
icebp
std
ds
xor
pop
enter
jmp
ror
enter
push
push
out
ret
inc
out
mov
xchg
inc
rol
xchg
and
in
jmp
std
cmp
mov
std
leave
mov
inc
aas
(bad)
pop
inc
sub
xor
mov
(bad)
cmp
ds
shl
push
hlt
inc
aas
out
sti
jno
cmp
xchg
retf
dec
xchg
mov
test
inc
adc
les
add
ds
ret
mov
mov
ss
xlat
test
add
jecxz
lds
popa
in
aas
lds
aas
mov
mov
repz
ins
and
cmp
lds
aas
mov
jge
aaa
test
aas
mov
dec
cli
aas
and
jb
mov
mov
xlat
test
int3
push
push
push
xchg
scas
jb
inc
xor
and
in
cmc
mov
lds
inc
jbe
dec
(bad)
jecxz
iret
aaa
test
aas
neg
lds
out
jecxz
adc
in
cmp
push
push
mov
in
ds
mov
es
std
ds
call
jns
(bad)
jecxz
cmp
(bad)
jecxz
ss
xor
std
aas
lds
ds
mov
jmp
add
ds
out
xchg
sahf
jns
ds
mov
(bad)
jmp
ror
pop
ror
push
ror
repnz
aas
mov
or
ds
mov
mov
mov
pop
daa
or
(bad)
ds
sahf
adc
mov
cmp
cli
std
jmp
std
shr
stc
std
jmp
(bad)
ds
cld
fs
xor
sti
mov
stos
add
je
(bad)
aas
mov
std
cmp
mov
idiv
sub
sahf
jmp
sub
mov
ds
mov
mov
data16
sub
and
push
or
jns
add
jecxz
test
pushf
add
jecxz
test
cmp
movhps
aas
test
mov
mov
loope
cmps
inc
aas
pop
push
test
retf
jmp
iret
push
(bad)
mov
bound
jmp
cld
push
bound
dec
cli
(bad)
ds
mov
ds
std
jg
test
lock
mov
cmp
sbb
inc
cmp
dec
ins
out
or
jbe
mov
int3
jb
jmp
not
add
pop
inc
mov
test
inc
test
es
ret
jbe
into
sahf
adc
retf
cmp
clc
ds
xor
jnp
(bad)
cmp
mov
mov
mov
xor
inc
sahf
add
dec
cmp
sti
ds
xor
push
jno
sub
std
je
test
aas
aas
mov
dec
cmp
cli
ds
xor
push
jno
sub
inc
jecxz
je
test
aas
aas
mov
ret
mov
std
ds
sysexit
js
jno
ss
jg
jmp
or
cmp
jecxz
iret
cmps
inc
aas
mov
push
push
mov
mov
mov
mov
iret
loope
push
ror
push
les
jbe
(bad)
aas
mov
xor
push
pop
ret
jne
ss
jg
jmp
or
pop
ds
jle
jmp
call
mov
data16
aaa
test
aas
(bad)
ins
(bad)
mov
test
jmp
std
jle
test
rol
outs
ret
mov
loope
push
mov
std
cwde
jge
mov
jecxz
ds
rcl
push
inc
mov
mov
mov
dec
ds
in
mov
std
xchg
cmp
ds
push
inc
cmp
add
jmp
push
aas
and
push
sub
(bad)
dec
cmp
(bad)
ds
dec
xchg
aas
xor
retf
xchg
cmp
push
dec
cmp
adc
(bad)
sub
leave
ret
scas
ja
icebp
mov
inc
lock
add
addr16
cmp
sub
leave
shr
add
icebp
mov
and
push
retf
jl
repz
ds
pop
push
cld
cmp
popf
repz
ds
pop
push
cld
cmp
mov
call
ds
pop
push
cld
cmp
jge
jbe
ds
pop
push
cld
cmp
ins
repz
ds
pop
push
cld
cmp
pop
repz
ds
pop
push
cld
cmp
repz
ds
add
aas
mov
cld
mov
dec
push
mov
pop
sub
xor
adc
outs
inc
cmp
sub
jle
jmp
ds
arpl
mov
pop
or
push
arpl
sub
xchg
inc
pop
and
adc
bswap
repnz
jnp
addr16
inc
out
adc
inc
lock
int3
ret
add
call
xor
adc
outs
ret
mov
inc
cld
ds
mov
inc
aas
inc
jmp
mov
cmp
stc
cmp
jbe
out
xor
std
ret
jbe
jb
cld
into
loope
hlt
add
or
pop
add
and
mov
outs
add
jbe
add
pop
out
jl
rcl
test
jae
sahf
out
ds
xor
mov
add
jns
adc
push
inc
mov
push
int3
sub
(bad)
sub
jecxz
ds
int3
daa
push
mov
mov
nop
enter
mov
retf
imul
jecxz
retf
mov
mov
cmp
xchg
into
std
ds
int3
push
test
and
mov
cmp
xor
xchg
in
addr16
sahf
and
ds
retf
mov
mov
push
ret
push
inc
mov
sbb
je
mov
sar
mov
xchg
inc
aas
aas
add
jge
test
jecxz
ds
pop
add
outs
jmp
add
xchg
sub
in
mov
std
std
mov
inc
aas
push
call
push
ds
mov
mov
je
mov
ss
sub
mov
inc
sub
pop
cli
(bad)
daa
add
std
ds
sub
retf
mov
xor
xchg
mov
std
retf
ret
(bad)
jae
and
in
je
std
cwde
inc
sub
pop
cli
pop
cli
int3
mov
int3
adc
test
ins
xor
je
(bad)
popf
adc
mov
or
mov
inc
xor
retf
push
xchg
cmp
push
retf
les
mov
std
ds
sub
les
lds
popa
or
inc
xor
jle
fisub
mov
shl
mov
lods
data16
jmp
add
lods
pop
add
(bad)
imul
pop
ror
(bad)
imul
fidiv
ss
test
sbb
mov
and
xor
xchg
cli
inc
leave
(bad)
and
sar
inc
sub
cld
inc
cmp
jb
inc
cld
test
and
(bad)
push
pop
ret
mov
mov
cmp
push
les
inc
sbb
std
mov
xchg
in
ds
hlt
jge
(bad)
push
add
test
mov
jle
std
ds
jb
aas
sbb
dec
inc
cmp
ds
jecxz
ds
pop
add
into
cmc
mov
lods
cmps
push
xor
jno
ss
jmp
xor
mov
outs
shr
ins
jnp
inc
popa
or
sbb
ror
cld
into
sub
dec
les
fidiv
jl
pop
test
outs
push
ret
mov
ret
std
mov
arpl
pop
sub
jle
mov
in
std
mov
push
mov
lods
addr16
jmp
add
mul
dec
(bad)
imul
fiadd
inc
sub
cmp
jle
cmp
ds
hlt
mov
arpl
cld
loop
daa
int
std
ds
jb
cmp
dec
sti
neg
jecxz
fwait
jns
dec
loopne
mov
mov
inc
aas
or
xor
jmp
cmps
jae
mov
mov
icebp
(bad)
jb
jge
add
jmp
(bad)
ds
call
xchg
cld
jecxz
aaa
icebp
fimul
ds
add
jmp
(bad)
ds
out
mov
std
shr
std
ds
(bad)
jae
mov
mov
icebp
(bad)
or
ds
sbb
jl
or
test
sub
ds
sbb
(bad)
retf
push
test
and
xchg
push
cmp
aas
sub
jae
mov
jb
or
mov
add
ins
inc
arpl
push
and
sub
and
cmp
dec
sahf
cdq
sar
mov
xchg
(bad)
push
ds
lahf
dec
test
test
cmp
sub
cld
push
jmp
cmp
and
pop
inc
stos
jb
neg
push
mov
and
push
sub
sub
imul
xchg
sahf
sar
mov
out
cwde
icebp
(bad)
jae
jmp
cmp
(bad)
std
cmp
jns
cld
jecxz
add
adc
cmp
sub
push
add
mov
sbb
mov
mov
punpckhwd
mov
dec
sbb
sbb
ins
xor
mov
add
ds
test
cmps
push
sbb
sbb
std
rol
and
js
inc
jl
add
xchg
jno
test
sub
movs
cmp
aas
lds
aas
mov
mov
stos
(bad)
ds
ss
push
call
inc
cmp
add
mov
repz
ror
cmps
inc
aas
push
add
mov
xchg
mov
cmp
pop
cmp
mov
add
inc
mov
cmp
sub
jle
mov
addr16
inc
mov
ds
shr
jbe
jg
ss
add
ins
iret
add
repz
ror
bound
sti
fisttp
mov
ins
add
mov
xor
mov
stc
inc
xchg
cld
jecxz
jmp
pop
mov
mov
lock
mov
outs
dec
cmp
xchg
out
test
mov
pusha
mov
xchg
outs
or
mov
jecxz
jae
pop
dec
les
pop
add
inc
cmps
inc
ss
mov
ds
and
mov
test
jecxz
push
or
sub
ret
jbe
or
std
ds
and
mov
lds
inc
sub
jge
mov
xor
mov
xor
je
cmps
inc
aas
mov
cmp
adc
daa
aas
mov
adc
pop
sub
shr
(bad)
mov
dec
jb
mov
aaa
xchg
mov
mov
punpckhwd
cwde
sub
ja
pop
sub
ret
jbe
push
xchg
sahf
cli
std
ds
std
push
xchg
ss
aas
cmp
add
and
xchg
inc
shl
ror
pop
add
div
dec
push
(bad)
jecxz
jg
in
ds
push
xchg
mov
mov
je
cmc
inc
aas
inc
fdivr
push
jle
inc
aas
inc
aam
xor
and
in
or
std
leave
cmps
cmp
and
mov
cli
push
(bad)
jecxz
push
xchg
jb
or
cmps
ds
push
ds
mov
dec
inc
mov
add
mov
pushf
std
ds
std
push
shl
pop
popf
jns
mov
cmp
(bad)
cmp
mov
jg
add
jae
inc
sub
les
or
outs
inc
pop
xacquire
imul
push
retf
sub
jecxz
movs
and
int3
cmp
mov
dec
push
cmp
mov
(bad)
ds
adc
sub
ret
jbe
sbb
jae
std
ds
jb
cmp
add
lahf
out
ds
adc
jecxz
cmps
inc
hlt
std
ds
dec
push
push
cld
jecxz
push
(bad)
xor
or
ds
sar
ds
adc
mov
jb
inc
in
mov
xor
in
ja
pop
jmp
cmp
adc
push
and
test
jecxz
add
push
adc
jecxz
sub
jo
mov
mov
aaa
std
push
mov
inc
aas
out
and
jecxz
int3
sbb
std
ds
xchg
inc
jp
repnz
jge
loop
xchg
sbb
mov
jno
mov
inc
imul
daa
fidiv
cmp
sub
push
adc
jecxz
jp
cmp
(bad)
ja
push
or
out
push
jae
ds
call
mov
dec
or
mov
add
sub
xor
scas
in
push
inc
sub
(bad)
sahf
jl
ds
jnp
mov
movs
add
and
ss
gs
(bad)
jecxz
dec
dec
movs
dec
ds
xor
mov
mov
aas
sub
out
mov
std
ret
mov
mov
dec
test
in
lock
xchg
mov
pop
push
daa
ss
cmp
add
jecxz
push
add
inc
aas
jmp
cmp
or
xor
daa
outs
or
ret
push
xchg
or
lock
jecxz
lds
aas
mov
xchg
sub
int3
sti
fild
dec
inc
pop
push
ret
jb
inc
lock
xor
aas
sub
push
xchg
inc
dec
push
or
pushf
adc
pop
dec
shl
mov
jbe
std
ret
mov
cmp
int3
ret
inc
inc
sub
ds
add
aas
daa
or
or
retf
mov
outs
xor
mov
jecxz
sub
fwait
(bad)
ds
call
dec
and
push
daa
clc
mov
push
pushf
outs
in
ds
pop
popf
adc
pushf
jns
mov
inc
and
push
(bad)
sahf
add
inc
adc
mov
inc
sub
cmp
push
cmp
pop
cmps
mov
std
ds
cld
std
ds
push
(bad)
jmp
push
les
add
xchg
mov
in
mov
std
xchg
jns
mov
aaa
shl
xchg
mov
cmc
inc
aas
icebp
repz
cmp
xchg
aad
and
enter
cmp
(bad)
ds
data16
jmp
xor
repnz
jbe
or
repz
or
(bad)
in
ds
fdivrp
aas
mov
or
cmps
in
ds
imul
mov
std
mov
in
push
mov
inc
aas
cmp
cmp
mov
dec
mov
push
int3
cmp
ds
dec
int3
jae
cld
ds
hlt
pop
mov
ds
cmp
cmp
mov
std
(bad)
sahf
(bad)
fidivr
mov
test
inc
cld
ds
out
and
add
push
pusha
call
dec
and
mov
push
jecxz
ds
or
test
jecxz
retf
cmp
mov
dec
daa
outs
or
ds
imul
mov
dec
mov
mov
enter
cmp
mov
out
fsubp
std
cmps
mov
ds
imul
xchg
dec
mov
ret
iret
and
sti
jmp
cmc
ret
aas
and
dec
ds
retf
push
pop
mov
push
(bad)
mov
push
xchg
cld
jecxz
ds
xchg
push
test
in
inc
mov
(bad)
ds
in
sub
std
xchg
xcrypt-cbc
cmps
push
retf
jmp
jecxz
pushf
scas
rol
mov
(bad)
sbb
aam
test
xor
sbb
aam
pushf
sahf
rol
add
mov
jecxz
pop
push
pop
add
jmp
push
adc
jbe
adc
push
jecxz
mov
jbe
add
lahf
jge
ds
mov
mov
jecxz
ret
push
mov
sub
aas
mov
or
inc
push
int3
cs
jecxz
cwde
mov
outs
or
int3
sub
enter
pop
mov
outs
or
into
sub
enter
test
test
movs
mov
addr16
mov
inc
ror
pop
add
retf
xchg
xchg
pop
or
pop
push
leave
(bad)
in
ret
jg
repnz
mov
push
mov
lods
jb
frstor
mov
out
sub
sbb
mov
sbb
mov
sub
adc
hlt
jb
jns
inc
arpl
adc
mov
(bad)
sub
addr16
push
cmps
xor
jns
mov
pop
xor
cld
mov
push
sbb
sti
fisttp
test
(bad)
ds
sub
cwde
movq
aas
in
mov
cmps
mov
in
leave
sti
out
push
cwde
inc
xor
enter
xchg
inc
rol
pop
or
mov
xor
sbb
rcr
sahf
bound
mov
jae
inc
sub
pop
or
cld
in
jb
addr16
jecxz
xchg
(bad)
jmp
cmp
sahf
ret
je
mov
inc
das
and
dec
ds
push
ds
in
mov
std
leave
sti
out
add
inc
mov
jmp
cmp
mov
jbe
pop
dec
lds
cmp
stos
dec
daa
sub
std
ds
cmp
test
push
lock
inc
xor
retf
(bad)
in
dec
inc
movs
mov
inc
aas
ds
xor
out
inc
push
cmps
inc
mov
aas
lds
inc
jle
dec
dec
pop
int3
cld
fs
ss
(bad)
cmp
retf
add
ret
ja
push
cmp
adc
dec
mov
mov
aas
ret
jp
inc
cmps
push
cmp
dec
(bad)
retf
cmp
jns
or
adc
cld
aas
mov
rcr
loop
sbb
inc
pop
call
jmp
jno
das
push
outs
inc
inc
pop
xor
and
adc
ds
pop
push
int3
sti
ror
sti
xlat
add
xor
sub
movs
add
in
retf
sti
shr
push
cmp
mov
retf
pop
aas
mov
mov
lods
rcl
push
retf
push
retf
inc
mov
rcr
inc
dec
sub
xor
cmp
sub
movs
add
mov
in
mov
hlt
adc
inc
jecxz
jns
inc
sub
les
push
test
mov
std
xchg
jl
sub
inc
scas
addr16
mov
inc
test
mov
std
ficomp
inc
aas
(bad)
add
cwde
cmp
jnp
ss
adc
sub
hlt
sbb
out
pop
or
mov
or
mov
jae
and
cmp
pop
call
jmp
cmp
sti
ror
sti
jmp
nop
xchg
in
pop
fcmove
pop
mov
jecxz
test
push
std
jb
addr16
jecxz
xchg
(bad)
mov
jno
das
push
aaa
push
daa
jp
(bad)
ds
sub
ret
inc
jp
repz
add
fdivr
mov
fsub
mov
ins
add
cmp
sub
int3
sti
shr
push
aaa
std
mov
retf
jecxz
mov
add
sti
shr
push
jecxz
push
or
jae
sahf
fwait
sti
ds
ret
inc
pop
or
mov
cmp
movs
sub
cmp
idiv
mov
loop
dec
mov
push
daa
add
std
cmp
jae
mov
adc
sub
cld
mov
retf
xor
mov
jmp
ds
cld
mov
loop
inc
sahf
out
ds
ret
cmps
push
retf
or
mov
sbb
or
mov
mov
ds
or
hlt
xchg
sahf
dec
mov
dec
adc
ror
imul
mov
mov
sub
rcl
sub
std
pop
sahf
ret
cmp
ds
jno
(bad)
int3
cmp
add
jecxz
std
lods
cmps
ds
mov
add
xchg
int
inc
mov
in
mov
std
dec
jbe
adc
test
repz
lods
xlat
and
jecxz
daa
hlt
out
ds
mov
scas
push
(bad)
jecxz
les
jecxz
ds
lods
xlat
and
mov
fisubr
aas
mov
mov
outs
ds
add
mov
inc
shr
mov
out
(bad)
mov
mov
add
mov
int
mov
ficom
xchg
mov
(bad)
sub
mov
mov
outs
ds
add
jecxz
adc
sub
or
int
pop
mov
icebp
(bad)
ds
(bad)
sub
std
ds
mov
pop
ds
cdq
xor
mov
jb
xchg
mov
inc
aas
rcl
inc
pop
rol
call
std
sbb
xchg
adc
mov
std
inc
jns
(bad)
mov
rcl
jecxz
adc
pop
fldcw
inc
aas
xchg
mov
std
ds
hlt
les
jecxz
neg
sbb
cli
sbb
jecxz
ds
outs
xchg
mov
jg
fistp
call
ds
xlat
das
jns
mov
ficom
mov
adc
mov
xlat
ficom
fwait
(bad)
ds
shl
jecxz
mov
jecxz
sub
outs
repnz
cmp
push
sbb
pop
sub
push
shl
add
mov
ret
dec
push
sbb
retw
imul
or
mov
or
pop
or
sub
arpl
push
inc
std
ds
int
ss
cld
repnz
into
add
aas
sbb
jecxz
ds
adc
dec
push
std
ds
(bad)
push
jecxz
ds
outs
ds
(bad)
fld
pop
ds
into
and
movs
and
repz
inc
mov
mov
mov
loop
mov
(bad)
dec
mov
adc
std
ds
mov
mov
mul
push
inc
std
ds
stos
popf
mov
std
cli
loop
inc
aas
(bad)
and
std
ds
sar
cmp
mov
(bad)
or
pop
ds
xlat
and
sar
jg
stos
mov
fwait
mov
(bad)
outs
ret
arpl
mov
into
cmp
repnz
call
push
lds
inc
mov
mov
mov
loop
daa
ja
std
ds
lods
fist
jns
mov
mov
call
pop
(bad)
rol
sbb
rcl
sahf
cmps
frndint
sbb
std
ds
xchg
pusha
ds
hlt
les
jecxz
not
add
mov
rol
in
inc
(bad)
inc
aas
jns
(bad)
sbb
std
ds
stos
mov
cmp
ds
jb
jl
outs
ds
add
scas
mov
std
inc
xchg
movs
rcr
inc
std
ds
stos
mov
cmp
ds
jb
(bad)
lods
frndint
sbb
std
ds
xchg
pusha
ds
hlt
les
jecxz
not
add
mov
call
ds
call
cmps
fist
xchg
mov
inc
aas
mov
(bad)
mov
mov
std
inc
shr
xchg
cmps
retf
mov
or
outs
jmp
outs
inc
push
aas
sub
retf
xchg
rol
pop
xchg
inc
test
enter
outs
dec
push
aas
sub
enter
test
xor
(bad)
cmp
shl
jl
sub
(bad)
lods
mov
mov
or
mov
or
(bad)
pop
xlat
das
(bad)
int3
fadd
(bad)
loope
sbb
push
arpl
jecxz
rol
add
and
add
pop
in
inc
mov
add
mov
rol
mov
(bad)
div
outs
inc
inc
fninit
std
cs
arpl
xchg
out
retf
sub
lock
ds
xchg
mov
lods
or
xchg
out
xchg
fidivr
or
mov
std
ds
add
inc
sub
inc
fninit
std
cs
arpl
jns
inc
arpl
pop
jge
sub
(bad)
imul
shl
bound
mov
dec
sbb
xchg
les
add
dec
outs
in
std
ds
out
mov
pop
add
addr16
pop
add
jp
and
mov
jge
retf
inc
xchg
clc
and
cli
pop
add
jp
and
mov
jge
repz
cmps
arpl
sbb
add
and
sub
fs
jae
push
ret
fisub
into
fwait
push
aas
mov
cmp
push
add
adc
std
cdq
jns
sub
cmps
fild
inc
aas
(bad)
lods
xlat
cmp
mov
ficomp
inc
aas
push
ret
(bad)
outs
call
lds
ret
mov
mov
test
rcl
jbe
fistp
rcl
fstp
push
pushf
add
mov
jae
xchg
icebp
rcl
cld
jecxz
aad
outs
jmp
add
mov
jecxz
test
(bad)
pop
push
push
add
xchg
rcr
in
cs
jecxz
test
pop
xor
hlt
jb
xchg
sub
sbb
sbb
mov
(bad)
sub
rcr
sub
(bad)
sbb
xchg
jmp
mov
cld
out
mov
std
ja
clc
jb
out
cmp
mov
rol
add
mov
jecxz
pop
push
pop
inc
sbb
fcmovnu
pop
out
pop
inc
aas
xchg
les
sti
out
jb
out
cmp
dec
cmp
ds
inc
dec
xchg
add
mov
jecxz
pop
push
pop
push
sbb
sti
adc
sti
repz
inc
aas
xchg
les
sbb
aaa
xchg
mov
repz
nop
xchg
add
daa
push
in
ds
sub
sbb
adc
mov
push
retf
(bad)
sub
fiadd
inc
aas
cmp
push
adc
fiadd
repz
inc
aas
xchg
les
sub
fiadd
inc
aas
mov
inc
push
sbb
repz
test
rcl
jl
mov
pop
rol
xor
sub
jecxz
out
cmp
push
nop
pop
rcr
sahf
and
ds
pop
aaa
xchg
sub
sbb
in
push
cwde
xchg
les
xchg
sbb
sar
jecxz
nop
xchg
inc
push
sbb
jmp
pop
fcmove
adc
pushf
mov
xor
out
inc
and
push
or
mov
sub
xor
cli
sbb
(bad)
test
rol
aas
mov
daa
ds
fiadd
pop
dec
nop
(bad)
rcr
pop
fcmovb
inc
dec
pop
xor
jae
and
in
mov
or
sahf
(bad)
fnstsw
mov
std
ds
les
xlat
jecxz
ds
adc
sub
ds
sub
cwde
cmovno
xchg
inc
rol
pop
inc
sub
(bad)
mov
push
daa
in
out
cmp
and
sti
sti
and
dec
int3
sti
add
mov
loop
inc
push
jno
out
int3
pop
aas
mov
add
loop
inc
sahf
aad
aas
mov
cmp
mulps
les
es
test
xor
sbb
pop
dec
nop
(bad)
rcr
pop
fcmovb
inc
dec
pop
xor
jae
push
int3
jmp
add
lods
ror
stos
add
jecxz
ds
push
daa
jmp
cwde
shrd
xchg
inc
ror
xchg
or
aas
inc
inc
xor
xchg
and
xchg
adc
dec
inc
xor
xor
inc
sub
push
sti
repz
mov
pop
xchg
mov
repnz
in
(bad)
cmp
inc
cmp
push
push
sti
repz
mov
add
sti
jmp
test
jno
ds
inc
inc
mov
repnz
in
(bad)
cmp
dec
inc
pop
or
sti
jmp
inc
inc
repnz
and
dec
add
mov
jmp
adc
push
ret
into
and
(bad)
cmc
dec
sub
inc
repnz
in
into
sub
lds
ret
or
aas
sub
retf
inc
inc
lods
mov
(bad)
mov
mov
and
jmp
dec
inc
sub
xchg
inc
ja
add
addr16
shr
inc
mov
add
mov
mov
mov
outs
dec
inc
cmp
jno
inc
xor
ret
add
(bad)
push
add
add
push
mov
mov
cmp
retf
dec
jecxz
add
sbb
aas
mov
and
inc
mov
jno
icebp
movs
jae
inc
sub
ret
call
retf
fistp
inc
sub
retf
fistp
scas
xchg
jmp
inc
jmp
ja
push
jl
in
ds
cmp
sub
mov
dec
ret
or
sti
jmp
inc
cmp
jmp
inc
inc
sub
retf
jle
mov
std
ds
hlt
mov
pop
mov
std
dec
sub
sti
jmp
xchg
(bad)
outs
inc
inc
inc
sub
ret
or
aas
sub
retf
fidivr
inc
sub
sbb
hlt
mov
sub
retf
and
xor
xchg
xchg
jmp
xchg
test
inc
mov
mov
loop
dec
mov
cdq
nop
cld
jecxz
test
push
add
fsub
hlt
jg
jmp
inc
cmp
stc
xor
mov
and
inc
sub
and
push
inc
sub
and
push
stc
mov
std
ds
add
lahf
in
call
mov
in
inc
mov
arpl
into
push
retf
jecxz
ss
sub
fstp
mov
add
retf
out
cmp
add
push
call
mov
cli
push
push
mov
lods
jle
mov
push
enter
xchg
and
sbb
inc
pop
call
jmp
outs
test
add
pop
in
pop
mov
addr16
dec
sub
push
daa
xor
std
ds
ss
scas
(bad)
ds
add
mov
retf
pop
inc
mov
push
ret
out
mov
std
ret
adc
sti
repz
ds
push
daa
cmc
out
ds
dec
mov
mov
ins
(bad)
ds
idiv
mov
idiv
mov
push
(bad)
dec
cmp
mov
dec
dec
xchg
in
pop
out
inc
aas
xchg
jmp
fcomp
push
pop
add
xchg
rcr
sub
sub
dec
dec
xchg
in
pop
out
inc
aas
xchg
les
retf
sub
sub
pop
xchg
rcr
sub
sub
outs
dec
dec
xchg
in
pop
out
inc
aas
xchg
les
retf
sub
sub
pop
xchg
rcr
sub
sub
outs
dec
dec
xchg
in
pop
out
inc
aas
xchg
jmp
fcomp
push
pop
add
xchg
rcr
sub
sbb
in
lahf
mov
add
mov
ds
inc
dec
(bad)
repnz
jmp
out
xor
or
rcr
sub
sbb
adc
mov
(bad)
lds
aas
mov
fiadd
xor
out
mov
fild
xor
(bad)
cmp
(bad)
ds
(bad)
sub
stos
iret
push
sbb
xlat
ficomp
inc
aas
xchg
les
mov
fld
movs
aas
sub
idiv
stos
jnp
loope
sbb
add
test
inc
div
ss
aaa
(bad)
pop
loope
mov
sbb
xlat
xlat
pop
xchg
inc
repnz
xlat
mov
outs
icebp
les
in
mov
retf
sti
xor
(bad)
fld
(bad)
push
or
mov
push
ret
xor
cmp
pop
call
mov
cmp
push
ds
in
mov
std
ret
jbe
xchg
repz
enter
test
ins
inc
sub
push
retf
xchg
jecxz
aas
mov
jae
aas
sub
retf
xchg
sub
enter
push
mov
ret
dec
daa
xchg
dec
(bad)
cmp
add
ds
fild
jecxz
aas
mov
jae
sahf
iret
(bad)
ds
jae
sahf
in
std
ds
inc
pop
cmp
inc
arpl
idiv
cmp
add
mov
lds
fsub
std
ds
mov
aas
xlat
jecxz
ds
(bad)
div
test
hlt
cmp
cmp
xchg
cmps
mov
sub
xchg
out
pop
sub
addr16
mov
call
movs
inc
sub
addr16
mov
call
or
inc
xchg
rcl
push
retf
fiadd
jecxz
rcl
mov
movs
aas
sub
sbb
fcmovnb
add
outs
jmp
jecxz
mov
mov
into
cmp
xor
std
cmps
jecxz
dec
out
cmp
mov
dec
add
loopne
dec
dec
outs
fdivr
mov
(bad)
movs
icebp
stos
jae
and
call
das
xor
out
cld
ds
cmp
mov
dec
add
adc
dec
sbb
jmp
pop
out
inc
aas
or
(bad)
sub
(bad)
sub
scas
int
aas
mov
xor
sbb
inc
dec
cmps
arpl
lods
sub
ds
std
mov
sbb
inc
sub
fild
sub
cld
mov
les
mov
sub
sub
into
movs
ret
dec
ss
add
add
dec
sbb
dec
sub
sar
jp
pop
add
sti
jmp
nop
pop
rcr
sahf
(bad)
ds
pop
aaa
cmp
inc
inc
pop
xor
out
mov
std
retf
add
rcr
int3
add
jne
jg
mov
std
ds
sub
sbb
fild
xchg
inc
ror
xchg
popa
cld
dec
jne
cld
or
mov
pop
sar
(bad)
or
add
outs
jmp
sub
retf
inc
inc
lods
mov
mov
lock
lods
ret
test
ror
inc
xor
xor
xchg
adc
push
(bad)
jecxz
pushf
mov
push
push
ficom
test
push
ret
fidiv
xchg
adc
(bad)
jecxz
pushf
scas
jg
add
mov
(bad)
fisubr
jmp
or
retf
mov
or
outs
jmp
aaa
cdq
sbb
std
ds
cmp
adc
std
aad
ds
cmp
jecxz
daa
push
in
adc
xchg
mov
jg
push
shl
ret
jecxz
xchg
push
mov
std
ret
cmp
sahf
xchg
ds
mov
jecxz
inc
mov
cmp
jecxz
daa
adc
std
adc
std
ds
fist
loopne
ds
jae
mov
push
daa
push
in
cmp
cld
mov
retf
mov
jecxz
add
jecxz
ds
cmp
jecxz
add
mov
in
cmps
jecxz
daa
mov
lods
sar
loop
jl
mov
dec
sbb
adc
ds
sub
pop
sbb
pop
ds
pop
cmp
pop
cs
je
xchg
sub
std
ds
cmp
mov
mov
adc
std
ds
ficomp
stc
cwde
push
xchg
dec
sbb
cmp
ds
std
ds
js
arpl
ds
shl
jecxz
cmps
arpl
pop
push
movs
repz
out
mov
ds
std
ds
add
mov
(bad)
pop
jg
sti
sbb
mov
sbb
mov
(bad)
fst
mov
(bad)
sub
stos
xor
jecxz
sbb
mov
xlat
sbb
fistp
rol
fstp
push
pop
add
ret
mov
push
retf
std
ds
xchg
sub
std
lods
imul
mov
fisttp
mov
pop
fs
mov
push
int3
sub
mov
outs
mov
sub
std
ds
sbb
inc
sub
(bad)
repnz
mov
ret
sbb
ins
out
mov
std
xchg
inc
sar
out
std
ds
jae
mov
push
daa
aam
std
cmp
pop
ds
jle
out
loopne
ds
fsubr
mov
out
mov
std
call
ret
dec
mov
or
mov
sub
rol
cld
retf
mov
ins
inc
cmp
inc
hlt
sbb
fucompp
inc
xchg
sub
call
retf
push
and
push
and
sub
inc
mov
in
ds
std
les
inc
xchg
ffree
add
clc
inc
aas
mov
add
(bad)
and
xor
and
mov
(bad)
pusha
and
sub
pop
ret
and
aas
mov
std
xor
add
stos
fiadd
mov
xor
in
push
mov
ins
push
(bad)
jecxz
or
jecxz
or
ffree
pop
ret
push
adc
ret
push
adc
and
sbb
(bad)
or
xchg
ffree
retf
or
(bad)
ds
xlat
mov
(bad)
or
jecxz
arpl
sub
pop
(bad)
push
and
sub
push
fnclex
jge
mov
(bad)
mov
(bad)
sub
mov
sub
jmp
push
mov
lods
fist
(bad)
movs
(bad)
dec
cs
inc
aas
xchg
pusha
and
push
and
lods
cdq
sbb
or
sub
push
and
ffree
ret
sbb
je
inc
aas
mov
add
loop
add
scas
addr16
addr16
jmp
xchg
fadd
aaa
cmp
add
(bad)
(bad)
call
or
daa
push
loop
ds
push
and
lods
add
loop
add
repnz
fnstcw
mov
std
sbb
or
sbb
ret
addr16
jmp
(bad)
movs
fnstcw
mov
pop
cmp
fiadd
add
fidivr
dec
cmp
loop
fnstcw
fcmove
cmp
(bad)
add
cmps
fnstcw
fcmove
and
mov
add
(bad)
(bad)
or
mov
or
mov
xlat
or
scas
add
loop
add
repnz
xlat
or
sar
ds
(bad)
sbb
or
sbb
addr16
jmp
(bad)
lods
xlat
call
or
daa
jle
std
ds
lods
fldcw
loop
fnstcw
mov
or
data16
ds
lods
add
(bad)
(bad)
or
loope
ds
lods
fldcw
loop
fnstcw
xchg
and
daa
cmp
std
ds
lods
add
(bad)
(bad)
or
mov
push
or
scas
add
loop
add
repnz
xlat
or
das
sti
ds
enter
or
and
imul
and
scas
xlat
call
or
daa
(bad)
std
ds
scas
fldcw
loop
fnstcw
mov
or
ret
ds
scas
add
(bad)
(bad)
or
loopne
ds
scas
fldcw
loop
fnstcw
xchg
and
daa
xchg
loopne
ds
scas
add
(bad)
(bad)
or
mov
les
mov
xlat
or
mov
add
cmps
add
repnz
xlat
or
mov
ds
leave
sbb
or
sbb
addr16
jmp
(bad)
scas
xlat
call
or
daa
ss
ds
scas
fldcw
loop
fnstcw
mov
or
push
loopne
ds
scas
add
(bad)
(bad)
or
loopne
ds
scas
fldcw
loop
fnstcw
xchg
and
daa
repnz
ds
scas
add
(bad)
(bad)
or
mov
and
mov
xlat
or
mov
add
cmps
add
repnz
xlat
or
out
ds
retf
or
sbb
addr16
jmp
(bad)
mov
call
or
daa
xchg
(bad)
ds
mov
stos
fiadd
add
fidivr
daa
jp
std
ds
mov
add
cmps
fnstcw
xchg
and
daa
data16
ds
mov
stos
(bad)
add
cmps
fnstcw
xchg
and
daa
dec
(bad)
ds
mov
add
cmps
fnstcw
(bad)
movs
fnstcw
mov
jl
mov
xlat
or
push
and
mov
add
cmps
add
repnz
xlat
or
pusha
and
inc
stc
ds
retf
sbb
or
sbb
ret
jmp
(bad)
mov
call
or
daa
out
fdivrp
ds
mov
stos
fiadd
add
fidivr
daa
(bad)
fdivrp
ds
mov
add
cmps
fnstcw
xchg
and
daa
ret
ds
mov
stos
(bad)
add
cmps
fnstcw
xchg
and
daa
stos
fdivrp
ds
mov
add
cmps
fnstcw
(bad)
movs
fnstcw
mov
fdivr
mov
xlat
or
(bad)
mov
add
cmps
add
repnz
xlat
or
sahf
lahf
clc
ds
int3
sbb
or
sbb
addr16
jmp
(bad)
mov
call
or
daa
dec
fdivrp
ds
mov
stos
fiadd
add
fidivr
daa
xor
std
ds
mov
add
cmps
fnstcw
xchg
and
daa
push
fdivrp
ds
mov
stos
(bad)
add
cmps
fnstcw
xchg
and
daa
push
fdivrp
ds
mov
add
cmps
sub
xchg
pusha
and
pop
clc
ds
ret
addr16
and
daa
(bad)
std
cmp
inc
arpl
arpl
aas
mov
jge
jmp
sbb
ds
(bad)
sbb
in
mov
std
xchg
js
std
pop
jg
jmp
pop
adc
pop
jecxz
ds
adc
sbb
ret
cmps
add
mov
inc
push
cmps
add
push
outs
inc
arpl
or
cmps
arpl
aas
mov
jge
jmp
sbb
ds
fiadd
mov
std
xchg
js
std
pop
jg
jmp
pop
adc
or
std
ds
adc
sbb
ret
cmps
push
aas
xchg
pop
and
cmps
push
aas
push
ret
fisub
(bad)
ds
fadd
mov
std
xchg
js
std
pop
jg
jmp
pop
adc
shl
std
ds
adc
sbb
ret
cmps
add
push
ret
fisub
(bad)
ds
fadd
mov
std
xchg
js
std
pop
jg
jmp
pop
adc
pushf
loop
ds
adc
sbb
ret
cmps
add
push
outs
inc
arpl
arpl
aas
mov
jge
jmp
sbb
ds
(bad)
sbb
in
mov
std
xchg
js
std
pop
jg
jmp
pop
adc
imul
ds
adc
sbb
ret
cmps
add
mov
inc
push
cmps
add
push
outs
inc
arpl
or
cmps
arpl
aas
mov
jge
jmp
sbb
ds
fiadd
mov
std
xchg
js
std
pop
jg
jmp
pop
adc
pop
loop
ds
adc
sbb
ret
cmps
push
aas
xchg
pusha
and
cmps
push
aas
push
ret
fisub
(bad)
ds
fadd
mov
std
xchg
js
std
pop
jg
jmp
pop
adc
jecxz
std
ds
adc
sbb
ret
cmps
add
push
ret
fisub
(bad)
ds
fadd
mov
std
xchg
js
std
pop
jg
jmp
pop
adc
scas
loope
ds
adc
sbb
ret
cmps
add
push
addr16
or
daa
retf
cmp
sub
ret
arpl
addr16
cmps
dec
xchg
pop
outs
inc
arpl
sbb
inc
mov
cmps
aas
mov
addr16
ds
out
cmp
or
xchg
in
ds
sub
push
fninit
std
cmp
mov
or
ds
sub
ins
fninit
std
cmp
mov
std
jnp
jecxz
mov
mov
mov
lds
inc
mov
mov
lds
inc
mov
mov
xor
and
and
mov
and
loop
aas
mov
mov
outs
aaa
(bad)
std
mov
lds
aas
mov
fsubr
(bad)
mov
mov
(bad)
ds
scas
sub
cmp
add
or
jg
mov
(bad)
shr
stos
(bad)
xchg
(bad)
(bad)
mov
mov
jecxz
ds
fsubr
(bad)
(bad)
mov
ficom
or
jecxz
(bad)
cli
pop
sbb
or
retf
push
fs
(bad)
ds
inc
and
(bad)
std
mov
cmp
cmp
add
pop
push
retf
rcr
(bad)
mov
aas
inc
and
push
and
(bad)
fimul
xlat
and
jecxz
ds
add
xchg
mov
adc
lahf
in
and
and
pusha
and
mov
fsubr
inc
aas
(bad)
(bad)
pop
xchg
push
and
push
and
(bad)
(bad)
mov
pop
jmp
dec
xchg
push
and
fdiv
add
cmp
mov
mov
std
sub
xlat
mov
ficom
or
mov
pop
sbb
or
sbb
jg
xchg
outs
inc
arpl
mov
push
sar
ds
sbb
jmp
sti
mov
push
sbb
(bad)
arpl
retw
aas
push
add
addr16
and
jb
outs
inc
arpl
jb
sahf
sar
mov
ret
cmps
fldcw
mov
add
daa
and
pop
xlat
or
adc
sbb
enter
and
sub
arpl
and
aas
mov
inc
arpl
mov
inc
arpl
or
mov
xor
enterw
xchg
push
(bad)
jecxz
mov
dec
clc
inc
aas
xchg
and
sub
mov
inc
arpl
lock
inc
mov
xchg
fimul
fist
xchg
icebp
xchg
push
(bad)
jecxz
jnp
mov
push
cmp
jecxz
add
cmp
ret
cmps
dec
xchg
pop
outs
inc
arpl
sbb
inc
mov
cmps
aas
mov
addr16
ds
out
cmp
or
xchg
in
ds
sub
push
fninit
std
cmp
mov
or
ds
sub
ins
fninit
std
cmp
mov
std
jnp
jecxz
mov
mov
mov
lds
inc
mov
mov
lds
inc
mov
mov
xor
and
and
mov
and
loop
aas
mov
mov
outs
aaa
(bad)
std
mov
lds
aas
mov
fsubr
(bad)
mov
mov
(bad)
ds
scas
sub
cmp
add
or
jg
mov
(bad)
shr
stos
(bad)
xchg
(bad)
(bad)
mov
mov
jecxz
ds
fsubr
(bad)
(bad)
mov
ficom
or
jecxz
(bad)
cli
pop
sbb
or
retf
push
fs
(bad)
ds
inc
and
(bad)
std
mov
cmp
cmp
add
pop
push
retf
rcr
(bad)
mov
aas
inc
and
push
and
(bad)
fimul
xlat
and
jecxz
ds
add
xchg
mov
adc
lahf
in
and
and
pusha
and
mov
fsubr
inc
aas
(bad)
(bad)
pop
xchg
push
and
push
and
(bad)
(bad)
mov
pop
jmp
dec
xchg
push
and
fprem1
add
cmp
mov
mov
std
sub
xlat
mov
ficom
or
mov
pop
sbb
or
sbb
jg
xchg
outs
inc
arpl
mov
push
sar
ds
sbb
jmp
sti
mov
push
sbb
(bad)
arpl
retw
aas
push
add
addr16
and
stc
mov
std
ds
sub
inc
pop
in
cmp
nop
loope
cmp
sub
push
and
call
add
xor
or
loop
xlat
or
scas
add
xor
and
cli
pop
and
std
ds
sub
addr16
push
and
sub
pop
fnclex
jge
mov
mov
push
cmp
adc
into
mov
(bad)
sbb
pop
jmp
arpl
and
jecxz
aas
mov
inc
arpl
mov
(bad)
sbb
ja
xchg
push
and
xor
ret
cmps
xlat
aaa
cmp
mov
mov
shl
loop
ds
icebp
add
sbb
xchg
cld
jecxz
je
stc
inc
aas
mov
std
je
stc
inc
aas
mov
std
je
stc
inc
aas
mov
std
je
stc
inc
aas
mov
pop
add
outs
jmp
push
std
retf
jmp
jge
dec
push
daa
sub
push
les
retf
mov
test
mov
cmp
loop
das
or
inc
hlt
into
add
adc
std
cmovle
daa
ret
jecxz
ds
jne
stc
movs
xchg
cld
jecxz
pushf
jns
mov
inc
sub
ds
push
bound
inc
aas
adc
jnp
mov
add
inc
sar
inc
ror
pop
or
sub
cld
mov
dec
(bad)
cmp
mov
mov
push
std
ds
pop
add
movs
cld
pushf
jns
push
xchg
or
xor
je
(bad)
xchg
jmp
stos
jb
inc
add
xchg
or
cmp
mov
mov
icebp
shl
or
stos
in
jecxz
push
(bad)
inc
arpl
push
sub
test
and
cld
adc
movs
jb
or
retf
pop
aas
mov
mov
nop
cwde
sub
call
repz
inc
ror
or
push
jb
sbb
push
daa
mov
aam
jp
cmp
ds
in
jno
push
xchg
mov
ja
in
sar
add
je
(bad)
mov
xor
fidiv
xchg
mov
mov
sbb
ss
mov
in
mov
std
les
cmp
jle
pop
popf
adc
or
std
test
retf
repz
jecxz
push
ja
jno
aas
sbb
jl
mov
addr16
sahf
mov
lds
mov
ret
push
jae
inc
and
mov
mov
jecxz
das
punpckhwd
cwde
xor
cmp
pop
xor
jmp
jecxz
jecxz
ret
jno
inc
sub
test
jmp
push
mov
movs
fiadd
jecxz
cmp
cmp
cmp
jmp
inc
inc
aas
call
fnstenv
fcmovu
int3
mov
jecxz
xchg
sahf
in
scas
ds
cmp
repz
in
xchg
addr16
out
mov
sub
std
mov
loop
inc
sahf
jmp
ds
ds
sahf
or
cwde
cmp
push
mov
loop
inc
or
in
aas
mov
mov
movntq
ss
jle
mov
and
or
std
push
push
ss
aas
or
push
jecxz
jecxz
jb
int
cmp
jmp
mov
inc
cmp
dec
or
mul
out
mov
std
ret
cmp
icebp
mov
call
sbb
jbe
sbb
cld
out
add
lea
push
xchg
mov
inc
lods
mov
les
xchg
mov
inc
mov
or
jb
imul
sahf
jns
cmp
mov
outs
push
cmp
add
mov
xchg
or
int3
mov
xor
lahf
pop
jecxz
retf
xor
in
in
inc
jecxz
cwde
inc
jmp
push
cmp
inc
sahf
mov
add
mov
into
out
fsub
mov
inc
pop
sahf
jns
retf
outs
jp
mov
or
ds
mov
inc
xor
inc
or
jecxz
mov
ins
(bad)
jg
movs
jb
lods
movs
add
mov
jb
inc
in
ds
jl
xchg
ds
mov
aas
mov
jb
inc
and
and
call
aas
sub
cmps
aas
mov
cld
mov
into
retf
int3
das
jecxz
dec
inc
pop
cld
sub
out
mov
ret
inc
mov
std
mov
ins
jo
ds
inc
ss
std
ds
in
sub
call
jl
mov
int
cmps
jecxz
add
add
mov
aas
mov
jb
cmp
jb
lods
cmps
(bad)
ds
jno
lods
cmps
(bad)
ds
jb
mov
sub
inc
adc
outs
inc
arpl
inc
shl
jmp
add
sti
mov
or
xchg
inc
pop
push
xchg
jne
add
iret
sbb
mov
retf
mov
mov
mov
pop
sbb
mov
addr16
mov
addr16
retf
dec
sahf
add
aas
mov
ret
cmp
(bad)
aaa
sbb
mov
les
out
pop
adc
inc
sub
sbb
cmp
xchg
mov
push
sub
push
ds
cld
mov
loop
dec
push
jecxz
ret
jmp
sub
std
mov
cmp
mov
loop
dec
mov
or
mov
ret
in
sahf
adc
rcl
inc
dec
ss
jmp
jecxz
test
cld
cmp
ret
jmp
or
mov
les
(bad)
call
or
cmp
inc
sub
mov
xor
(bad)
mov
int3
cmp
mov
xor
sahf
adc
ds
outs
stos
sahf
or
ds
ds
and
push
enter
test
in
xchg
cmp
inc
mov
ss
lds
aas
mov
cmp
popa
adc
pop
add
inc
jmp
ds
add
cmp
inc
lds
aas
mov
ss
mov
std
leave
xor
mov
xor
sub
shl
outs
(bad)
retf
cmp
jecxz
ja
bound
xor
jl
inc
daa
push
enter
add
mov
mov
imul
mov
jbe
inc
aaa
xor
std
mov
loop
ds
in
mov
std
sar
jmp
(bad)
cld
mov
sub
mov
cmp
push
dec
cmp
aas
xor
pop
jmp
ss
jbe
pop
push
ds
cld
mov
loop
dec
mov
or
mov
ret
popa
out
ds
fild
ds
jle
shl
jno
and
push
daa
daa
jmp
pop
popf
adc
(bad)
mov
loop
arpl
aam
mov
loop
push
mov
push
ds
push
daa
shl
cmp
sbb
mov
push
retf
dec
xchg
or
jecxz
mov
in
pusha
mov
and
sub
push
mov
push
ds
cld
mov
retf
hlt
iret
mov
add
sub
pop
inc
sub
pop
cli
(bad)
or
pop
push
daa
mov
test
retf
inc
cmp
sub
mov
pop
cmp
stc
push
jl
xor
outs
dec
dec
ja
add
outs
inc
xor
lods
jb
ss
push
aas
sub
push
sub
std
mov
cmp
push
jecxz
push
mov
adc
sub
cld
mov
loop
inc
sahf
add
ds
ret
sub
ret
call
add
mov
mov
fs
mov
dec
inc
sub
mov
(bad)
mov
ss
mov
movs
push
mov
fld
sub
repz
mov
pop
adc
mov
push
sub
movs
inc
sub
repz
mov
iret
add
jns
mov
and
jns
cmps
and
(bad)
ds
dec
mov
mov
sub
ss
xchg
aas
dec
out
adc
mov
inc
popa
push
jp
clc
jno
cmp
std
mov
xor
in
mov
loopne
leave
std
jmp
and
gs
mov
std
xchg
push
int3
push
mov
pop
jmp
cmps
mov
outs
jnp
inc
inc
push
retf
mov
aas
pop
loop
pop
ins
jno
inc
xor
mov
mov
pop
popf
adc
add
mov
mov
mov
inc
add
mov
mov
cmp
aas
or
pop
or
mov
add
xchg
mov
push
daa
push
in
cmp
(bad)
cmp
or
adc
jb
jecxz
retf
std
jne
pop
push
ds
push
daa
mov
sub
cmps
mov
std
ds
es
sub
ds
cld
mov
loop
dec
or
idiv
ds
ret
movs
jb
or
jecxz
sahf
adc
pop
add
outs
jmp
jecxz
stos
push
in
ds
(bad)
enter
ds
jmp
int3
mov
dec
fidivr
inc
pop
or
cld
fild
or
jecxz
jg
ins
inc
and
outs
ds
aas
sub
daa
or
push
enter
xchg
hlt
xchg
mov
inc
cmp
pop
push
sub
push
ds
push
daa
test
test
enter
movs
mov
or
std
leave
sti
mov
mov
jecxz
ds
jecxz
sub
cmp
retf
and
stc
lea
mov
push
jb
iret
int
sub
mov
sub
daa
test
loop
dec
add
les
mov
fbld
dec
mov
clc
sbb
pop
cmp
aas
sub
cmp
mov
mov
push
daa
cmps
in
ds
ror
pop
add
mov
mov
iret
data16
mov
clc
sbb
dec
cmp
sub
addr16
push
cmps
xor
jns
mov
and
data16
mov
(bad)
cmps
and
(bad)
ds
dec
mov
mov
sub
ss
xchg
aas
dec
out
add
mov
cmp
ds
jbe
mov
sub
lds
inc
mov
mov
data16
mov
inc
sub
cmp
add
std
xchg
punpckhwd
ds
call
mov
push
les
sbb
sti
xchg
xor
ret
dec
(bad)
sahf
jnp
ds
push
enter
inc
mov
mov
mov
cld
in
add
std
xchg
punpckhwd
ds
call
mov
push
les
adc
sub
cld
mov
cmp
ins
dec
jecxz
ret
cmp
in
ds
jmp
inc
addr16
mov
add
bound
aas
inc
inc
push
test
sub
out
add
std
xchg
punpckhwd
ds
call
mov
push
les
jl
sub
add
retf
clc
aas
mov
push
cwde
push
cmp
or
jecxz
ret
call
aas
mov
push
les
push
test
add
std
xchg
punpckhwd
push
sahf
ins
dec
aas
mov
cmp
pop
hlt
inc
mov
jo
inc
push
jecxz
push
sahf
xchg
(bad)
ds
push
(bad)
mov
push
xchg
sahf
add
int3
cld
jmp
ds
in
mov
std
xchg
sysenter
std
mov
cmp
cmp
jecxz
sub
jecxz
mov
dec
xchg
std
ds
dec
call
lahf
ret
(bad)
ds
mov
and
inc
mov
(bad)
cmps
and
(bad)
ds
dec
mov
mov
dec
nop
or
push
enter
test
outs
inc
pop
inc
sub
cmpps
dec
dec
outs
std
cmp
cli
ds
xor
mov
mov
pop
popf
adc
inc
dec
lds
add
out
cs
ds
xor
inc
or
jb
mov
call
jp
inc
sbb
retf
mov
out
inc
ja
ror
mov
or
outs
jmp
sub
ret
xchg
jecxz
dec
inc
xor
retf
out
inc
jecxz
xchg
or
outs
fistp
iret
jg
mov
std
ds
mov
mov
std
(bad)
sahf
mov
mov
push
call
jmp
jecxz
stos
push
in
ds
(bad)
enter
ds
dec
xchg
or
xchg
loopne
into
jg
std
js
inc
jb
jge
cli
inc
mov
std
es
std
ds
pop
enter
dec
and
push
add
out
sbb
inc
add
std
daa
mov
std
ds
loopne
aas
mov
mov
and
outs
mov
(bad)
cmps
and
(bad)
ds
dec
mov
mov
dec
nop
or
push
enter
movs
mov
sahf
iret
int3
sub
ret
jbe
adc
sti
(bad)
ds
cld
pop
jmp
inc
push
cmps
mov
dec
cmp
jecxz
mov
rol
jb
cmp
cmp
mov
jo
cmp
loop
int3
sti
retf
dec
daa
push
das
(bad)
ds
mov
rol
mov
(bad)
sub
xchg
xlat
dec
int3
sti
retf
dec
daa
xor
(bad)
ds
inc
mulps
ret
jb
jne
(bad)
ds
rol
xor
pop
add
test
(bad)
ds
inc
inc
inc
xor
push
lock
cmp
popf
aas
sub
call
mov
(bad)
aas
mov
je
inc
icebp
xchg
push
(bad)
jecxz
idiv
lods
push
retf
adc
mov
test
cmp
mov
sbb
inc
add
xchg
arpl
mov
inc
cmp
in
int3
add
addr16
and
addr16
pop
xor
test
std
xor
mov
ret
movs
jae
jg
or
test
lods
ror
mov
or
cmp
inc
inc
xor
inc
lods
cmps
add
mov
jb
inc
out
inc
sub
or
sub
cmp
call
cmp
vmwrite
out
dec
cmp
pop
and
mov
ds
mov
mov
lods
cmps
(bad)
ds
jno
inc
out
jns
pop
out
shl
aas
mov
jno
sbb
add
js
aaa
inc
sub
cmp
call
retf
or
test
cld
jecxz
stos
push
in
ds
(bad)
enter
ds
jmp
int3
xor
out
and
jmp
jb
or
aaa
mov
in
ds
std
push
push
ss
aas
cmp
(bad)
jmp
call
cmps
(bad)
mov
aas
or
std
push
adc
inc
aas
cmp
ds
ins
(bad)
jmp
(bad)
ds
ss
sub
cld
mov
retf
and
aas
sub
loopne
movs
inc
aas
cmp
add
pop
push
ds
cld
mov
loop
dec
mov
push
ds
aas
push
test
jecxz
aaa
mov
adc
jecxz
ja
add
inc
push
nop
mov
pop
or
loop
dec
inc
sub
ss
mov
(bad)
mov
push
ds
jae
test
enter
addr16
jno
pop
cmp
shl
outs
ret
mov
jmp
add
out
mov
jnp
cmp
cli
ds
inc
loop
xor
jb
or
jae
mov
adc
sub
addr16
mov
push
ds
jae
test
cmp
mov
fidivr
sub
cld
mov
loop
lahf
or
dec
cmps
ins
jae
icebp
fidiv
lods
sub
inc
sub
mov
mov
std
jns
add
mov
sbb
sub
push
ds
std
mov
loop
inc
mov
pop
xchg
cld
jecxz
inc
push
xor
inc
dec
(bad)
retf
(bad)
enter
ds
pop
call
std
ds
add
movs
add
int3
aam
mov
xchg
les
push
and
push
add
out
mov
fld
add
std
retf
cmp
sub
loop
sub
std
mov
loop
inc
mov
pop
xchg
cld
jecxz
jmp
xor
sar
push
mov
cmp
mov
pop
push
xchg
or
mov
cld
mov
loop
retf
or
dec
cmps
pop
cmc
dec
cmp
ds
les
and
std
xor
or
outs
jmp
outs
jnp
inc
jmp
xor
jecxz
shl
leave
(bad)
add
(bad)
sub
lds
inc
ja
lds
std
(bad)
mov
mov
mov
call
loop
std
jbe
jbe
mov
xor
jl
movs
inc
aas
mov
add
mov
xor
push
sahf
inc
in
ds
add
jecxz
outs
jecxz
ds
fxch
shl
leave
aad
ss
sub
dec
xchg
sahf
call
jp
in
push
jecxz
ret
xor
(bad)
cmp
jmp
in
in
ds
sbb
mov
retf
ins
sub
mov
inc
mov
(bad)
or
sub
mov
(bad)
xor
lods
aad
pop
inc
sub
dec
lods
aad
adc
inc
and
cmp
dec
inc
sub
dec
xchg
iret
sbb
lods
jae
lods
xlat
mov
lods
dec
and
lods
mov
mov
aaa
and
in
outs
inc
icebp
daa
and
in
jb
outs
les
xor
or
outs
inc
arpl
out
mov
arpl
outs
inc
arpl
push
shl
cmps
outs
inc
arpl
pop
shr
push
outs
(bad)
retf
push
retf
or
cli
pop
push
adc
mov
dec
jg
repnz
or
shr
mov
dec
icebp
aaa
and
in
outs
dec
icebp
daa
and
in
sub
(bad)
sub
(bad)
hlt
sbb
ror
ds
mov
addr16
mov
push
add
jecxz
push
into
ss
aas
cmp
mov
cmps
mov
(bad)
movs
inc
aas
mov
and
and
mov
mov
stos
add
sub
std
xchg
jns
dec
add
jecxz
dec
test
jmp
mov
pop
mov
arpl
fdivrp
ds
jecxz
inc
cmp
add
outs
jmp
ss
retf
mov
cmp
mov
test
call
mov
in
ds
xor
retf
hlt
add
push
mov
jo
jo
cmp
retf
xchg
cmps
inc
adc
jb
ja
add
mov
das
add
in
jb
cmp
push
mov
sahf
(bad)
ds
mov
mov
mov
xlat
aas
mov
mov
jb
inc
xor
pusha
iret
into
pop
int3
add
mov
adc
fcmovbe
pusha
push
pushf
ret
jecxz
dec
sub
mov
xor
retf
call
retf
mov
aas
ds
or
xchg
ss
enter
adc
add
mov
inc
test
in
pushf
stos
repz
jecxz
imul
movs
stc
inc
and
xchg
pop
add
xchg
out
aaa
inc
mov
mov
pop
aam
mov
pop
popa
retf
mov
sub
cmp
push
sbb
mov
std
mov
lods
mov
cld
mov
xor
pusha
out
sbb
aas
mov
jge
movs
fcmovnbe
pusha
push
ret
jecxz
mov
xor
pusha
daa
call
outs
inc
inc
sub
mov
sub
mov
in
cmp
or
ds
xor
retf
add
ret
popf
mov
push
add
add
xchg
icebp
xor
mov
outs
dec
inc
mov
xor
inc
mov
repz
mov
sahf
(bad)
ds
mov
mov
mov
jecxz
mov
inc
sub
push
sub
mov
mov
shr
inc
xor
dec
psubsb
ds
shr
inc
push
std
inc
(bad)
outs
inc
cmp
jmp
cmps
jecxz
dec
cmp
(bad)
ds
inc
add
jecxz
inc
fidivr
mov
mov
inc
aas
inc
sbb
cld
jecxz
and
out
dec
jno
jge
mov
(bad)
jle
jecxz
nop
mov
mov
inc
aas
push
sub
mov
arpl
sub
movs
inc
aas
inc
icebp
cmp
jg
data16
ds
inc
add
jecxz
jg
loope
adc
mov
pop
inc
aas
sub
sbb
sub
cld
mov
aaa
push
mov
cld
scas
(bad)
dec
(bad)
cmp
mov
adc
sub
fild
cmps
inc
aas
inc
stc
dec
add
jecxz
inc
movs
fiadd
lods
lahf
xchg
(bad)
imul
mov
call
ret
cld
dec
add
inc
add
jecxz
inc
cmp
push
push
xor
mov
jecxz
test
sub
inc
aas
adc
cmp
loopne
cmps
inc
aas
inc
stc
dec
add
jecxz
xchg
inc
call
or
jmp
mov
cmp
out
enter
cmp
pusha
or
test
shr
aas
pop
repnz
mov
lods
std
jb
mov
enter
test
jecxz
pop
icebp
ret
mov
call
mul
out
int3
mov
rcl
cli
enter
es
inc
cli
mov
outs
fdivr
ins
pop
inc
sub
mov
add
and
cmp
(bad)
mov
pop
pop
cmp
cmc
cmp
cmps
adc
adc
call
mov
outs
fdivr
ins
pop
inc
sub
cmp
cmps
adc
movs
pop
(bad)
mov
retf
ss
mov
mov
cmp
adc
mov
mov
stc
repz
add
inc
mov
xchg
inc
aas
inc
daa
push
retf
clc
ds
cmp
mov
outs
mov
jp
std
ds
pusha
mov
mov
int3
mov
outs
mov
mov
std
leave
sub
xchg
scas
pop
jae
cmp
aas
inc
sub
dec
mov
xor
sti
mov
cmp
std
ds
cli
bound
fadd
(bad)
out
out
aam
lahf
outs
push
cmp
xor
pop
lods
add
jecxz
retf
mov
(bad)
ds
dec
xor
mov
inc
jo
add
push
dec
aaa
adc
mov
xchg
outs
push
cmp
aam
xor
xor
add
jl
and
pop
jp
repz
cmp
mov
jnp
jno
std
ds
int
mov
pusha
ss
lods
mov
pushf
mov
ins
pop
(bad)
cli
loope
mov
outs
pop
inc
inc
xor
pusha
ror
int3
add
jecxz
adc
pusha
ss
inc
jo
add
add
pop
sub
out
mov
add
mov
cs
retf
cmp
dec
inc
inc
pop
push
enter
ret
dec
in
ds
xor
retf
add
ret
mov
aas
xor
xchg
icebp
sub
dec
inc
mov
xor
mov
xor
std
mov
add
arpl
jp
in
ds
int3
adc
pop
xchg
ss
or
xor
sub
mov
mov
shr
mov
loopne
sti
ds
ds
dec
pop
je
std
ds
dec
in
outs
dec
aaa
cmp
xchg
inc
xor
retf
add
inc
xor
mov
outs
jae
inc
repnz
pop
inc
hlt
pop
sbb
sub
mov
loopne
dec
mul
and
aas
mov
dec
cmp
in
mov
jg
lahf
mov
dec
ret
pop
ror
pop
mov
enter
inc
push
jecxz
(bad)
js
(bad)
xchg
mov
push
add
jecxz
push
(bad)
ss
aas
icebp
stos
jb
cmp
cmp
jmp
or
aas
push
xor
mov
sub
(bad)
ds
mov
jecxz
xchg
js
dec
jmp
aas
icebp
stos
xchg
mov
jecxz
aas
mov
std
xchg
mov
popa
xchg
cld
jecxz
push
aas
sub
mov
loop
dec
or
sub
push
test
dec
inc
mov
cmp
xor
cld
inc
add
push
ret
mov
inc
ror
add
push
xchg
or
and
mov
and
addr16
mov
jno
outs
cli
in
ds
sub
enter
jg
mov
pop
repnz
add
popf
repz
mov
gs
ss
xchg
mov
popa
xchg
cld
jecxz
jmp
in
add
int
aas
mov
mov
mov
(bad)
ds
fnsave
inc
sub
ret
std
ret
or
(bad)
mov
std
ds
cli
das
(bad)
(bad)
mov
jecxz
enter
mov
cmps
repz
ds
jo
das
icebp
lods
je
inc
sub
int3
add
jecxz
test
inc
xchg
inc
cs
(bad)
jmp
cmp
xchg
push
test
ds
inc
add
add
movs
mov
out
mov
popf
(bad)
ds
mov
mov
cmc
adc
xor
retf
pop
call
jmp
repz
xchg
or
mov
dec
dec
inc
and
mov
test
call
mov
in
ds
xor
retf
inc
jp
ins
dec
dec
inc
inc
aaa
cmp
aaa
cmp
inc
cli
dec
inc
inc
(bad)
ds
rol
dec
inc
mov
add
icebp
(bad)
or
ds
xor
add
and
test
scas
outs
pop
inc
icebp
inc
push
mov
neg
add
adc
xor
inc
lods
mov
fwait
inc
sub
dec
sub
mov
mov
in
ds
retf
mov
xlat
jg
add
pop
add
add
push
cwde
mov
inc
add
psubsb
inc
aas
pop
push
retf
sub
xor
dec
mov
ds
jnp
inc
xor
add
adc
je
and
pop
retf
mov
ins
pop
dec
inc
aas
add
psubsb
inc
aas
das
add
psubsb
inc
icebp
cmp
mov
outs
dec
inc
mov
xor
cmp
mov
idiv
mov
sahf
(bad)
ds
mov
mov
mov
jae
stc
mov
std
mov
ss
adc
sub
mov
mov
shr
inc
xor
dec
psubsb
ds
dec
pop
jo
std
ds
dec
(bad)
outs
push
dec
inc
xor
int3
cli
adc
dec
inc
mov
add
or
mov
aas
sub
aaa
lahf
sub
ds
mov
lds
inc
mov
mov
xor
mov
fisttp
dec
ja
add
mov
je
and
pop
xor
cmp
ds
jae
ja
add
mov
xor
jp
in
jb
cmp
push
mov
sahf
(bad)
ds
mov
mov
aas
mov
inc
xor
pusha
iret
into
pop
int3
add
mov
adc
fcmovbe
pusha
push
je
aas
mov
sti
dec
sub
mov
inc
or
add
ins
outs
inc
inc
xor
retf
xchg
mov
hlt
mov
cmp
cmc
inc
mov
jo
xor
pop
add
add
xchg
aas
cmp
cmp
add
add
mov
xchg
jmp
mov
or
mov
std
mov
inc
xor
dec
out
jo
iret
cli
popf
(bad)
ds
mov
(bad)
dec
inc
xor
(bad)
mov
std
mov
mov
push
std
retf
add
mov
adc
xrelease
sub
cmp
in
sahf
adc
mov
(bad)
jecxz
xchg
or
push
mov
mov
call
aas
mov
(bad)
cmp
mov
adc
sub
leave
cmps
imul
ds
sub
mov
jecxz
aas
mov
(bad)
test
loop
retf
std
dec
cmp
add
mov
(bad)
ds
in
aas
mov
push
mov
dec
cmp
scas
push
(bad)
jecxz
das
sub
cmp
add
data16
inc
aas
cmp
mov
(bad)
jecxz
mov
xchg
push
aas
jmp
cld
out
je
cld
inc
aas
inc
sub
enter
aas
mov
dec
inc
jl
ds
inc
push
inc
sub
enter
mov
jmp
jecxz
jno
addr16
dec
lds
dec
test
hlt
xchg
aaa
loope
inc
mov
jns
or
xchg
sahf
stos
cdq
ds
ret
sub
inc
jns
div
mov
std
cmp
mov
in
ds
stos
dec
jecxz
sbb
jmp
aas
mov
(bad)
xchg
mov
push
xchg
cld
jecxz
cmp
sub
push
test
js
(bad)
cmp
mov
mov
add
jb
mov
jecxz
aas
mov
push
ds
aaa
push
test
sub
mov
outs
inc
inc
pop
mov
xchg
sub
mov
outs
inc
inc
inc
repnz
test
mov
sub
ds
ror
sub
pushf
jns
or
into
sub
cmp
mov
sbb
ret
cld
dec
cmp
ds
arpl
mov
mov
stc
mov
cmp
aas
mov
jb
inc
cmps
data16
mul
std
inc
cld
repz
(bad)
jecxz
mov
jecxz
jmp
add
mov
sub
cmp
call
xchg
mov
push
mov
fs
shl
cmp
data16
mov
and
mov
aas
pop
adc
ds
aas
ret
jle
mov
std
ds
jg
mov
std
ds
dec
daa
mov
std
nop
repz
sub
mov
data16
mov
mov
adc
mov
jo
push
xchg
and
mov
push
aas
push
sub
mov
lods
jb
mov
adc
(bad)
ds
in
(bad)
jns
push
push
retf
or
les
arpl
outs
(bad)
movs
aaa
(bad)
loope
xchg
movs
pop
add
jmp
jb
inc
ror
pop
add
add
push
push
repz
pop
into
outs
dec
arpl
repnz
mov
jge
mov
ss
mov
std
add
mov
jb
mov
jno
jmp
cmp
aas
(bad)
pop
push
test
mov
push
add
outs
jmp
mov
xchg
data16
lds
aas
mov
mov
(bad)
jecxz
leave
jge
(bad)
mov
dec
mov
sub
mov
outs
or
or
(bad)
ss
mov
xor
clc
mov
std
sar
jmp
pop
mov
stos
push
int3
inc
cld
sbb
dec
mov
cmp
aas
sub
mov
iret
add
adc
mov
inc
bound
enter
aaa
aas
xor
mov
outs
add
js
call
std
mov
int3
push
add
push
pop
inc
aaa
sub
aas
(bad)
jecxz
sar
mov
mov
sbb
je
sbb
aas
sub
out
mov
std
enter
xchg
in
out
mov
std
mul
inc
aas
inc
fadd
inc
cmp
aas
sub
mov
fisttp
mov
data16
mov
icebp
retf
cmc
ret
mov
dec
mov
loop
push
cmp
dec
xor
cmp
loop
cmp
sbb
mov
outs
inc
cmp
call
dec
jecxz
xchg
aas
sub
ds
inc
push
test
pushf
(bad)
ds
(bad)
cmp
push
jl
ds
cmp
ret
adc
scas
jl
inc
sub
enter
(bad)
stos
in
ds
dec
inc
aas
xor
stc
cmps
in
ds
hlt
xchg
and
std
inc
mov
std
cmp
jae
aas
and
ja
jecxz
(bad)
into
add
ds
stos
jno
cmp
mov
pop
shl
or
sti
jmp
test
out
test
jo
aas
mov
std
mov
fdivrp
cmp
(bad)
paddsb
pmaxsw
inc
(bad)
popf
out
aas
mov
sub
aas
xor
daa
(bad)
into
jo
aas
mov
std
sub
aas
mov
inc
xor
retf
push
xchg
inc
push
add
scas
in
ds
aad
mov
adc
outs
pusha
inc
call
shl
call
add
inc
and
inc
inc
lahf
mov
ds
hlt
mov
inc
stos
mov
push
icebp
mov
ins
push
ret
xchg
pop
cs
adc
cmp
sub
inc
test
xor
test
call
or
lock
dec
in
ds
popa
cli
retf
add
xlat
add
sub
outs
cld
inc
push
push
jp
push
jl
mov
push
je
mov
dec
dec
adc
push
mov
stc
and
ss
add
jp
in
jo
loope
xchg
push
add
mov
jo
inc
aas
adc
push
sub
push
shl
cmp
mov
outs
icebp
sub
(bad)
mov
add
adc
jo
loope
xchg
and
pop
inc
mov
aas
inc
aas
in
push
inc
sub
stos
jg
mov
sub
aas
mov
inc
cmp
xchg
inc
inc
or
inc
popa
push
ret
dec
jns
inc
dec
ja
or
clc
mov
inc
sub
push
ins
add
stos
inc
inc
cmps
in
mov
sub
int3
jmp
ds
shl
inc
call
or
test
jp
pop
inc
leave
sti
test
das
sub
mov
scas
in
ds
shl
jmp
jmp
cmp
push
test
cmp
aas
inc
daa
push
enter
push
mov
les
outs
inc
cmp
test
jmp
cmp
repz
mov
out
(bad)
movs
push
mov
dec
call
or
shl
push
retf
xor
or
add
ins
dec
sub
xor
enter
ret
add
std
ds
add
inc
mov
call
stc
mov
std
ds
add
sub
jecxz
mov
fbstp
(bad)
repnz
adc
jecxz
pop
(bad)
jb
repz
test
fadd
(bad)
lahf
jmp
mov
addr16
aaa
mov
inc
(bad)
aas
sub
enter
test
sub
sub
std
lds
jb
cmp
add
sub
inc
xchg
test
mov
loopne
sub
std
cmp
cli
inc
lahf
js
aas
mov
dec
cmp
jecxz
mov
jecxz
rol
add
das
jmp
fnstenv
dec
push
int3
inc
inc
mov
cmp
ins
inc
pop
lds
inc
mov
or
(bad)
sub
jmp
je
mov
jno
add
(bad)
daa
out
jmp
sub
int3
add
jecxz
dec
ins
inc
aaa
lds
inc
mov
or
std
leave
sti
fisttp
mov
aas
sub
sub
fild
jecxz
stc
cmps
sub
jle
and
mov
lahf
jmp
cli
sub
xor
dec
lahf
mov
dec
cmp
int3
int
mov
jge
in
pop
adc
les
inc
mov
sub
out
mov
test
leave
ret
ja
xchg
repnz
lods
sub
inc
ss
pop
int3
sti
iret
dec
ds
or
jns
out
mov
retw
ins
jae
inc
sub
(bad)
mov
push
dec
je
dec
daa
fs
or
and
std
lds
or
ds
arpl
jp
ds
not
mov
or
dec
out
ds
inc
dec
cmp
inc
mov
sub
mov
addr16
lds
inc
mov
arpl
sti
fild
inc
sub
push
mov
mov
std
ds
jb
inc
pop
test
repz
daa
call
cmp
jmp
retf
dec
xor
sbb
jecxz
or
in
mov
inc
aas
aas
xor
push
sti
mov
ds
mov
inc
mov
sub
cmp
dec
cmp
(bad)
ds
sub
jecxz
ds
push
ret
ds
dec
jae
sti
ds
jnp
lds
aas
mov
les
int3
add
mov
arpl
sti
fild
inc
sub
push
mov
mov
add
mov
retf
jne
mov
dec
int3
cmp
out
in
jecxz
sar
test
stos
inc
pop
mov
std
mov
pop
xor
sahf
in
jno
(bad)
repnz
out
ds
add
aas
mov
xchg
push
std
ds
out
inc
mov
std
retf
cmp
inc
xor
jo
dec
push
int3
clc
inc
mov
cmp
pop
xor
(bad)
out
or
jae
dec
jne
into
daa
aas
xor
enter
test
int3
call
movs
mov
xchg
mov
(bad)
ja
jecxz
test
jecxz
mov
arpl
cmps
sub
lds
into
xor
fdivr
cmp
shl
mov
arpl
test
ds
int3
retf
mov
(bad)
inc
cvtpi2ps
mov
aas
popa
repnz
in
ds
sub
sub
dec
mov
test
fild
cmp
sub
int3
sti
xchg
push
(bad)
mov
xchg
push
(bad)
jecxz
mov
addr16
retf
mov
jno
cmp
aas
sub
push
ds
xchg
xchg
pop
or
lods
pop
push
xchg
mov
cdq
push
(bad)
jecxz
mov
ss
inc
std
ins
jnp
or
jecxz
sub
in
ds
addr16
cmp
inc
lds
aas
mov
inc
dec
cmp
ds
jb
cmp
add
(bad)
sti
ds
inc
dec
cmp
inc
lds
inc
mov
les
into
cmp
mov
sub
lods
jae
inc
icebp
aad
(bad)
jecxz
mov
xor
ja
push
add
aad
add
stos
inc
aaa
mov
sub
inc
mov
std
xor
fistp
sti
ror
aas
mov
jno
inc
sub
add
pop
stos
inc
sbb
sub
sub
fld
ss
inc
das
mov
push
pop
xchg
mov
xor
sti
repz
daa
(bad)
out
lods
sub
pop
addps
movs
inc
xor
movs
aas
in
call
enter
pop
mov
std
ds
and
aas
mov
dec
cmp
stos
inc
das
shl
lods
sub
mov
(bad)
xor
pop
mov
and
jb
lods
sub
jg
sub
(bad)
xor
jecxz
xchg
lds
out
mov
call
div
dec
push
pop
push
daa
mov
std
ds
fisub
and
ds
shl
shr
mov
jbe
adc
mov
aas
aas
sub
ss
fs
cmp
ins
push
and
ins
push
and
and
jp
jge
test
std
sub
data16
lods
pushf
inc
jecxz
test
fisttp
and
call
mov
sub
ds
cmp
in
mov
and
cmp
push
xchg
mov
loop
sub
out
popf
jecxz
xchg
or
jae
inc
mov
jae
sahf
mov
stc
js
sub
enter
inc
mov
xlat
std
mov
jno
repnz
repnz
xlat
hlt
test
pop
pop
retf
jle
out
add
jbe
or
add
ds
les
ins
inc
das
cmp
aas
lds
aas
mov
mov
or
push
mov
add
sti
int
sub
fld
inc
sub
ret
test
cmps
add
(bad)
stos
inc
sbb
pop
(bad)
push
shr
cmps
fcmovb
dec
sub
mov
cmp
sahf
push
(bad)
ds
ret
sub
pop
call
mov
xor
test
hlt
repz
call
jmp
adc
aaa
mov
std
sar
mov
cmp
aas
xor
mov
pop
std
movs
inc
out
pop
mov
jno
jecxz
les
jl
inc
xor
nop
mov
push
pop
mov
ds
ret
stos
dec
les
into
sub
jo
sub
jecxz
inc
mov
out
ds
out
mov
std
sar
test
sub
(bad)
mov
push
xchg
and
ret
mov
std
sar
mov
mov
into
daa
lock
std
cmp
aas
movq
inc
add
ins
jae
lds
aaa
mov
mov
cmps
gs
sti
jecxz
ds
jecxz
ds
jecxz
ds
jecxz
ds
jecxz
ds
jecxz
aas
sti
jecxz
aas
sti
jecxz
retf
dec
dec
mov
add
sti
jmp
inc
mov
or
jbe
or
push
std
ds
xor
sub
add
sar
inc
rcl
outs
lds
inc
pop
and
jecxz
arpl
loop
arpl
retf
stos
ds
add
sub
mov
add
inc
pop
add
outs
pop
arpl
outs
ror
or
mov
repz
mov
or
(bad)
sahf
pop
std
ds
ret
and
mov
outs
ror
inc
pop
add
and
in
retf
cmp
inc
arpl
in
mov
jns
inc
arpl
in
retf
rcl
rol
cli
jecxz
loopne
jecxz
ds
dec
xchg
std
ds
push
xchg
or
mov
ins
jae
aas
pop
loop
mov
jne
jmp
out
inc
adc
les
retf
sub
call
pushf
xchg
addr16
pop
lds
aas
mov
sahf
fwait
js
inc
scas
out
add
jp
aaa
ror
retf
adc
mov
push
enter
daa
aas
int3
std
ds
inc
pop
cmp
cli
ds
repz
ds
pop
pop
sub
mov
iret
inc
jb
outs
jae
and
in
mov
std
cwde
jns
test
cmp
inc
aas
sub
mov
ds
lds
outs
les
sahf
call
std
ds
inc
pop
cmp
cli
ds
xor
ds
pop
pop
sub
push
xchg
mov
fisub
ss
cmp
jae
or
push
ds
ror
sub
(bad)
sti
ret
aaa
pushf
xchg
pop
and
mov
push
hlt
ds
cmp
push
jmp
mov
dec
pop
daa
ja
std
ds
cmps
mov
ins
or
mov
std
popf
adc
mov
jmp
jecxz
cwde
and
pop
js
adc
mov
pop
xchg
push
jl
mov
out
inc
mov
fnstcw
dec
cmp
(bad)
sahf
cmp
ds
cmp
test
inc
mov
jecxz
sub
sub
fisttp
inc
aas
mov
add
dec
pop
std
ds
jl
mov
jecxz
jp
adc
mov
mov
jno
jecxz
cwde
inc
cmps
pop
call
push
daa
(bad)
std
cmp
ds
hlt
test
and
mov
push
daa
push
adc
lods
mov
shl
rcl
push
fst
jle
fild
fld
mov
dec
cmps
inc
mov
das
retf
mov
fild
(bad)
mov
push
daa
mov
test
jp
pop
or
cld
out
movs
mov
aas
sub
sub
leavew
ds
sub
ret
std
(bad)
mov
aas
shr
jecxz
add
cmp
mov
int3
sub
mov
xor
mov
xchg
add
jecxz
inc
imul
pop
push
(bad)
or
mov
xlat
jnp
(bad)
xchg
movq
out
inc
sub
xor
cmp
dec
mov
or
ds
idiv
addps
and
std
mov
fnstcw
daa
mov
std
ds
std
cwde
sub
or
push
jl
mov
int3
mov
cwde
cld
push
xor
mov
add
mov
pusha
and
cmp
add
out
push
adc
outs
jb
mov
addr16
ds
and
les
std
ds
out
dec
ret
test
int3
scas
aas
mov
or
lea
inc
aas
sub
mov
cmp
daa
in
std
xchg
mov
ins
add
sub
cld
mov
loop
dec
sahf
cdq
or
mov
ret
sub
les
ins
ret
jb
inc
cmp
xor
inc
xor
xchg
cmp
std
mov
outs
test
aad
cmp
push
cmps
inc
aas
inc
lock
int3
bnd
inc
jne
ja
adc
fld
pop
aas
cmp
shl
inc
mov
jb
inc
xor
xor
lods
test
inc
push
mov
std
ds
repnz
enter
cmc
mov
xchg
cmps
cmc
pop
shl
mov
ret
std
sar
add
outs
jmp
out
(bad)
dec
cmp
(bad)
ds
jae
inc
popa
or
mov
data16
mov
dec
div
xchg
pop
cmc
(bad)
jo
aas
inc
or
and
jno
shl
cmp
jmp
out
(bad)
out
mov
add
icebp
inc
mov
pop
(bad)
ja
repz
mov
std
lds
aas
mov
hlt
sbb
sar
inc
out
movs
inc
aas
cmp
xor
jmp
std
mov
iret
sar
dec
out
movs
inc
aas
inc
mov
int3
ds
add
jecxz
ds
scas
xor
jmp
jmp
sar
(bad)
mov
cmp
std
cmp
jae
call
jb
pop
shl
jecxz
inc
lods
mov
pop
das
mov
xor
dec
inc
mov
int3
ds
ret
scas
mov
adc
or
mov
and
data16
mov
(bad)
cmps
and
(bad)
ds
dec
mov
mov
sub
ss
xchg
aas
dec
out
sbb
dec
sti
jmp
aas
and
push
enter
pop
inc
sub
retf
(bad)
jno
and
aas
mov
or
add
out
jbe
dec
cmp
ins
or
mov
std
popf
adc
mov
mov
jecxz
mov
or
jae
jmp
ins
pop
cmp
movs
xchg
jecxz
leave
xor
call
jb
addr16
into
sub
aas
xor
or
jbe
push
(bad)
sahf
in
fdivr
mov
push
sub
outs
or
int3
sub
dec
ins
movs
mov
data16
cmps
jb
mov
cli
xchg
inc
sub
xchg
push
int3
and
jecxz
cwde
push
int3
add
mov
or
cld
in
(bad)
sahf
shl
addr16
movs
jb
lds
out
push
jecxz
cwde
mov
repnz
jecxz
mov
sbb
(bad)
mov
sbb
(bad)
mov
sbb
(bad)
jno
arpl
mov
pop
and
inc
fmulp
adc
les
repz
mov
cmp
or
inc
push
int3
push
mov
push
cwde
mov
cli
inc
aas
lds
sbb
enter
mov
fmulp
mov
mov
test
xor
sub
cmp
push
xor
mov
jb
cmp
inc
mov
data16
mov
sbb
test
in
mov
arpl
jo
inc
sub
std
test
data16
mov
out
sub
loope
xor
pop
adc
dec
cmp
jne
mov
repnz
test
jmp
ss
out
aas
lds
ds
jle
test
xchg
xrelease
sub
retf
xchg
arpl
mov
adc
mov
pop
inc
mov
arpl
mov
add
adc
or
jmp
loop
enter
addr16
popa
mov
data16
mov
mov
int3
mov
mov
push
sub
loop
inc
mov
cli
daa
sub
std
ds
inc
sub
mov
pop
js
xlat
or
ds
ins
dec
inc
inc
add
mov
or
inc
or
ds
bound
fadd
aas
mov
mov
mov
jl
cmp
addr16
data16
lods
lds
inc
mov
jge
test
mov
jecxz
daa
xlat
jmp
adc
cmp
mov
int3
jmp
xor
std
ds
inc
jmp
addr16
ins
sub
test
repnz
ds
cdq
cmp
cmp
sub
xor
ds
fist
test
std
ds
mov
jmp
ret
(bad)
mov
fs
adc
std
ds
les
cmp
into
sub
aas
xor
addr16
or
mov
mov
push
cwde
mov
sub
enter
pop
mov
outs
inc
xor
pop
adc
pop
cld
loop
cmp
jecxz
pop
(bad)
pop
sub
cld
inc
aas
sub
test
movs
jb
mov
cli
xchg
sahf
xor
fistp
inc
aas
ds
repz
mov
jnp
and
push
daa
aam
std
ds
jmp
xchg
les
les
pop
retf
std
mov
loop
and
add
fist
mov
mov
jmp
aas
lds
aas
mov
cmp
pop
pop
ret
or
ds
sub
ds
cmp
pop
les
sub
test
jecxz
leave
mov
pop
sub
jmp
add
mov
jae
inc
sub
ds
cmp
jmp
or
daa
push
jmp
adc
cmp
or
(bad)
jecxz
cwde
bswap
or
dec
cli
inc
aas
inc
call
cmp
test
cmp
(bad)
aam
jmp
xchg
or
jo
mov
cmp
hlt
inc
mov
jge
test
or
add
std
ds
retf
jecxz
(bad)
repnz
ds
repz
adc
xor
push
push
test
test
sub
call
fidiv
sub
inc
mov
std
mov
mov
mov
out
mov
std
leave
jl
out
lds
inc
mov
and
repnz
(bad)
repnz
sahf
out
ret
jns
std
ds
add
icebp
sub
dec
cmp
add
mov
dec
sub
popa
lock
lds
inc
mov
mov
pushf
add
mov
jnp
mov
add
xor
inc
enter
jle
repz
jecxz
leave
jge
jbe
lahf
jge
ds
stc
push
push
std
mov
(bad)
(bad)
mov
test
(bad)
sub
cld
test
jecxz
pop
(bad)
pop
sub
fild
dec
cmp
add
mov
jae
mov
cli
daa
add
std
ds
mov
xchg
cmp
imul
(bad)
(bad)
ds
jno
and
sub
in
ds
push
ds
push
daa
out
call
push
inc
mov
cld
mov
loop
cmp
cmp
pop
aas
inc
jmp
(bad)
mov
mov
out
js
jecxz
mov
sub
in
cmp
std
ret
cmp
pop
mov
xchg
pop
xchg
pop
mov
outs
add
xchg
adc
cmp
jge
adc
xchg
mov
inc
inc
movs
jmp
adc
mov
pusha
lds
sub
cld
outs
enter
fild
in
daa
mov
call
dec
mov
push
shr
push
mov
inc
mov
add
lds
inc
mov
mov
mov
repnz
test
mov
ins
jnp
inc
popa
push
retf
std
mov
ins
jae
sahf
aaa
add
mov
push
ret
(bad)
mov
outs
inc
xor
repz
sti
fist
shl
std
ds
std
cwde
aas
sub
mov
outs
(bad)
test
adc
mov
retf
test
pop
leave
les
(bad)
(bad)
mov
fs
mov
aas
retf
adc
mov
inc
pop
lds
(bad)
mov
mov
out
mov
sub
ds
push
xchg
jno
add
int3
jae
mov
arpl
sti
movs
add
cld
sub
inc
ds
mov
std
ds
mov
fwait
mov
std
ds
push
(bad)
sahf
xchg
aas
mov
push
js
mov
ret
fsubp
std
ds
lock
lds
inc
mov
cld
test
repz
sti
mov
dec
sbb
push
aas
lahf
inc
add
mov
push
aas
lahf
cmp
aas
mov
inc
xor
fild
mov
test
add
mov
jae
mov
repnz
data16
mov
add
sti
aam
sub
loop
inc
mov
cli
daa
shl
std
ds
enter
mov
(bad)
ds
out
aas
lds
aas
mov
cmp
adc
mov
jnp
push
fs
ds
out
mov
std
cwde
bswap
or
dec
cli
inc
aas
inc
call
std
cmp
ds
sub
retf
push
gs
push
enter
xchg
xchg
int3
jnp
mov
mov
(bad)
pop
sub
cld
inc
aas
mov
or
mov
std
cwde
bswap
or
dec
cli
inc
aas
inc
call
cmp
inc
cmp
inc
sub
retf
push
gs
call
dec
mov
fidivr
sub
enter
xchg
xchg
jecxz
and
into
fdiv
rol
mov
repnz
loop
inc
mov
cli
daa
in
in
ds
mov
out
mov
std
ds
cld
mov
jecxz
xchg
pcmpgtb
mov
sbb
sti
mov
(bad)
ret
xchg
shl
mov
std
mov
cmp
cld
mov
and
ret
push
xchg
call
std
ds
jmp
xchg
les
les
je
mov
jae
cmp
ss
mov
mov
sub
cmp
into
sub
aas
xor
gs
sahf
ins
sar
mov
push
sub
test
inc
push
or
mov
cmp
sbb
popf
call
std
leave
mov
inc
and
popa
fidivr
inc
pusha
sbb
mov
in
cld
test
jecxz
pop
(bad)
pop
sub
jecxz
inc
mov
cli
xchg
sahf
aas
(bad)
ds
push
mov
mov
sub
cmp
aas
cmp
aas
lds
aas
mov
jge
test
jb
mov
retf
mov
mov
outs
inc
adc
(bad)
enter
sbb
sub
sub
arpl
mov
inc
adc
call
arpl
out
loope
sub
lock
xchg
sahf
(bad)
mov
(bad)
cwde
lds
xchg
cmp
aas
lds
(bad)
mov
mov
out
mov
std
xchg
lds
xchg
loopne
mov
and
mov
outs
inc
dec
ss
jmp
jmp
mov
jmp
ds
std
mov
iret
add
add
push
xchg
sahf
outs
(bad)
ds
push
sub
loop
cmp
jecxz
cmp
sahf
push
(bad)
ds
ret
popa
jmp
imul
pop
mov
add
sti
scas
pop
popf
adc
push
xchg
outs
jb
mov
cmc
into
ds
push
sub
outs
jb
mov
jecxz
inc
fiadd
movs
jae
cmp
ffree
movs
jmp
add
(bad)
cld
mov
repnz
imul
or
inc
xor
pusha
and
pop
or
sub
push
daa
xchg
pop
(bad)
ds
rcl
jecxz
arpl
loop
daa
je
std
ds
fcom
addr16
std
punpckhwd
push
adc
pop
and
sbb
jmp
jo
inc
mov
add
xchg
add
mov
sub
mov
sbb
mov
push
daa
fsubp
std
ds
mul
mov
test
retf
pop
add
stos
inc
jecxz
es
ins
std
cmp
sar
add
jb
mov
pop
(bad)
ds
std
cwde
sub
cmp
and
in
(bad)
std
test
outs
mul
rol
(bad)
ds
cwde
sub
push
daa
mov
ds
std
push
mov
movs
jae
mov
mov
aaa
mov
int3
jno
mov
mov
scas
jmp
pop
add
jecxz
dec
lods
fs
(bad)
mov
lock
daa
fs
std
ds
mov
inc
rcl
sub
out
pop
sbb
mov
in
in
push
jecxz
movs
aaa
dec
or
mov
mov
test
cmps
push
retf
push
jp
inc
ror
outs
les
scas
jmp
or
push
cmps
inc
aas
inc
call
add
or
sahf
xchg
and
mov
jb
into
loop
arpl
cmp
addr16
std
xchg
inc
fsub
xor
jp
mov
adc
ins
std
ds
push
aas
mov
in
ds
ret
add
inc
rcl
arpl
mov
jnp
mov
mov
repz
sti
jmp
pop
cmp
sbb
jae
outs
add
push
cmps
inc
aas
inc
and
call
add
aas
in
lods
movs
inc
mov
ins
ds
repnz
jno
mov
push
(bad)
mov
in
test
test
mov
jmp
mov
xor
adc
or
inc
jbe
aaa
ds
lahf
push
test
test
test
mov
inc
jecxz
movs
imul
aas
adc
dec
cmp
imul
(bad)
ds
out
cmp
lods
std
sub
in
ds
jmp
xchg
stos
in
aaa
inc
xor
inc
inc
sub
inc
pop
fs
cmp
or
pop
stc
(bad)
mov
inc
dec
inc
xor
enter
pop
icebp
movs
xchg
jecxz
leave
sti
xrelease
repnz
or
fs
ds
ds
ds
repz
mov
std
xchg
xor
mov
outs
inc
dec
mul
dec
sub
add
or
sub
xor
in
ds
repz
jmp
jae
loop
test
pop
or
retf
lahf
push
test
data16
mov
aas
retf
inc
outs
mov
sub
jnp
push
adc
dec
stc
imul
into
daa
jp
lock
ss
std
dec
sub
ret
inc
ror
test
sub
in
mov
std
sar
mov
jl
or
add
or
std
loop
mov
pop
cs
inc
jmp
ds
inc
sub
sub
aas
mov
mov
sub
int3
retf
test
pop
add
jecxz
inc
jbe
inc
sar
out
xlat
jecxz
cmp
sub
push
xchg
sahf
or
ds
mov
sahf
pushf
pop
aas
mov
ret
stos
pop
popf
jns
pop
lds
jecxz
ds
cmp
push
aas
cmp
mov
jmp
xchg
sahf
iret
push
aas
mov
idiv
mulps
daa
out
std
ds
push
aas
mov
call
push
and
cld
mov
sti
dec
ds
repz
test
jecxz
inc
mov
mov
inc
jmp
lock
daa
inc
imul
mov
retf
scas
jmp
mov
mov
call
add
jge
pop
add
outs
jmp
sub
retf
movs
rol
hlt
aas
mov
movs
jg
push
movs
inc
sub
and
fdivr
mov
mov
les
inc
sub
ret
std
rcr
std
bound
lock
cld
out
jb
aaa
loop
dec
(bad)
jecxz
inc
aaa
loop
dec
(bad)
jecxz
dec
or
and
jecxz
dec
pop
add
aas
mov
fs
out
add
retf
mov
fisttp
retf
inc
les
hlt
push
(bad)
aas
mov
add
ins
inc
dec
mov
pop
pop
retf
rol
jmp
or
push
cmps
inc
aas
inc
call
jmp
xchg
push
or
sahf
aaa
cld
ds
ret
sub
leave
add
test
clc
addr16
inc
sub
sahf
or
jecxz
cmp
ss
cmp
or
xrelease
jecxz
inc
ret
test
data16
ds
pop
add
jb
mov
sub
int3
retf
test
pop
add
jecxz
inc
jbe
inc
sar
out
aad
std
cmp
sub
push
xchg
sahf
or
ds
mov
sahf
lods
sbb
push
inc
stos
pop
popf
jns
imul
mov
dec
cmp
addr16
aas
cmp
sub
rcl
inc
mov
push
xchg
or
hlt
xchg
jmp
call
outs
inc
inc
ja
add
shr
add
jecxz
test
sbb
inc
lods
sub
inc
(bad)
push
or
mov
retf
sar
add
fidivr
inc
repz
sti
out
ss
aas
popa
push
dec
cmp
(bad)
ds
sub
jecxz
retf
sub
or
inc
cmp
jge
rcr
sti
rol
aas
ret
and
int3
dec
sar
ds
enter
add
mov
retf
jno
sub
jno
xor
in
int3
cmp
stc
ds
dec
retf
xor
stc
mov
cld
jecxz
jmp
daa
mov
stos
jp
inc
sub
push
out
cmp
outs
inc
aaa
icebp
stos
or
ds
pusha
push
mov
dec
add
add
push
ret
lds
mov
xor
cs
loop
sti
or
inc
sti
jmp
push
inc
xor
xchg
pop
jecxz
dec
mov
or
out
adc
or
inc
jbe
or
sti
xlat
xchg
mov
push
jb
inc
aas
aas
sub
sub
jae
sahf
jne
ds
add
mov
and
inc
sub
mov
pusha
loop
ds
enter
stos
(bad)
pop
mov
std
es
data16
ds
sbb
adc
sub
sahf
adc
mov
jmp
xor
pop
xor
xchg
ret
aas
inc
out
jmp
jmp
dec
popa
call
jae
inc
jmp
pop
call
inc
cmp
retf
mov
or
outs
jmp
mov
or
scas
loop
push
add
lock
jmp
inc
or
aam
add
mov
jmp
xor
pop
xor
xchg
ret
aas
inc
out
jmp
jmp
dec
popa
call
jae
cmp
add
jbe
add
arpl
(bad)
mov
cmp
retf
outs
jmp
xor
pop
xor
xchg
ret
aas
inc
out
jmp
jmp
dec
popa
call
jae
cmp
add
jbe
add
arpl
(bad)
mov
cmp
push
retf
std
cmps
mov
push
mov
mov
lahf
aas
mov
std
mov
ins
and
mov
std
shl
arpl
push
cwde
mov
jp
pop
cmp
sti
(bad)
dec
test
add
adc
jbe
add
jl
sbb
sti
(bad)
dec
xchg
push
sub
test
dec
push
test
mov
ds
add
mov
test
mov
test
mov
loop
dec
mov
or
sub
dec
ds
dec
push
test
jecxz
aaa
mov
adc
jecxz
ja
cld
jb
push
nop
mov
push
or
std
mov
loop
dec
inc
sub
ss
mov
(bad)
mov
push
ds
jae
test
cmps
jb
aas
inc
cli
int3
repnz
push
cmp
popf
mov
xchg
rcl
int3
ins
mov
jecxz
add
into
or
sbb
xor
jmp
jecxz
xor
or
std
mov
loop
dec
and
cld
mov
loop
iret
or
(bad)
jns
pop
push
ds
dec
xchg
mov
push
ds
push
push
test
jno
or
out
mov
mov
pop
popf
adc
and
jmp
sub
xor
pop
adc
jbe
mov
int3
loopne
mov
lahf
div
inc
jbe
adc
mov
mov
ds
fwait
mov
jb
inc
rol
gs
sti
jecxz
push
sub
inc
aas
pop
pushf
mov
je
movs
inc
aas
mov
jno
cld
jecxz
xchg
inc
rol
pushf
mov
jecxz
shl
std
ds
fisttp
into
dec
in
ds
mov
push
inc
aas
mov
out
inc
cmp
add
mov
std
leave
jns
dec
ds
movs
imul
mov
enter
adc
inc
out
inc
js
push
pop
inc
lock
test
lods
cmp
cld
push
aas
lock
lea
popa
push
inc
aas
popa
jmp
gs
mov
(bad)
data16
mov
push
ret
aaa
xchg
sub
(bad)
sahf
mov
aas
mov
mov
out
inc
lock
leave
ja
add
jle
pop
or
cmp
sub
push
ds
cmp
mulps
daa
(bad)
ds
jne
jmp
addr16
sahf
xor
xchg
inc
ror
or
push
test
or
mov
ds
or
lock
cmp
(bad)
jecxz
enter
mov
mov
dec
ds
out
cwde
icebp
(bad)
or
ds
jecxz
inc
fisubr
adc
pop
sub
shr
std
ds
lods
mov
pop
ja
(bad)
test
shl
mov
cwde
pop
in
xchg
sub
out
stos
lods
and
add
mov
aaa
pop
sbb
sahf
scas
ja
(bad)
jns
pop
adc
ins
adc
sub
test
lock
sub
ins
sbb
sub
(bad)
shr
aaa
xchg
sbb
xchg
and
mov
cmp
mov
std
cmps
and
jbe
(bad)
cmp
(bad)
sbb
cmp
out
sahf
retf
lock
mov
mov
jecxz
pop
mov
inc
cmp
aaa
push
jns
jecxz
ds
add
mov
movs
inc
aas
mov
cmp
addr16
inc
mov
ss
mov
add
push
inc
aas
ss
cmp
ds
cmp
lds
inc
mov
sahf
mov
sub
jg
mov
push
les
or
ds
jb
jmp
in
adc
std
xchg
sahf
(bad)
outs
ds
dec
daa
mov
test
jp
xchg
jmp
or
test
std
ds
out
outs
jecxz
xchg
sahf
cwde
mov
mov
add
(bad)
jecxz
xor
jecxz
loopne
push
inc
aas
cmp
jge
mov
pop
push
push
sti
(bad)
ds
inc
xchg
sahf
ror
cmp
addr16
icebp
std
ds
icebp
std
js
jecxz
inc
repnz
jb
lock
jp
repnz
inc
cld
into
in
mov
cld
cmp
in
push
jecxz
stos
jbe
push
retf
aaa
xchg
jecxz
xchg
pusha
add
test
pop
and
mov
push
retf
aaa
xchg
jecxz
xchg
pusha
add
test
in
inc
lods
mov
inc
aas
lds
add
jecxz
pop
and
push
ds
cmp
mov
lahf
iret
lock
sar
lahf
mov
je
xchg
jmp
daa
jg
std
cmovae
cmps
push
test
mov
std
mov
out
in
mov
std
test
outs
out
daa
pop
cdq
std
cmp
rcl
and
jns
jecxz
inc
jmp
jecxz
leave
sub
push
test
retf
xlat
lock
mov
push
add
lock
dec
cmp
(bad)
ds
cmp
jbe
dec
mov
ds
mov
and
inc
aas
pop
dec
aaa
jl
movs
inc
aas
lds
dec
ja
dec
ja
dec
ret
inc
mov
dec
ins
icebp
arpl
jmp
dec
dec
ins
icebp
pop
add
jecxz
slwpcb
ins
icebp
arpl
jmp
dec
xchg
lds
(bad)
xchg
pop
xor
xchg
sahf
repnz
ds
mov
shl
movs
out
and
add
jecxz
dec
ins
jmp
dec
dec
ins
jmp
dec
dec
ins
jmp
dec
mov
repnz
(bad)
movs
inc
aas
or
cmc
mov
idiv
xor
mov
ss
daa
jne
std
cmp
mov
enter
push
cmp
mov
clc
push
sub
out
xchg
or
(bad)
iret
mov
std
xchg
or
cmp
and
cld
mov
ss
daa
xor
std
cmp
cmp
(bad)
jecxz
(bad)
rcr
into
mov
inc
mov
(bad)
dec
inc
fwait
cld
ds
enter
(bad)
mov
adc
sar
hlt
jp
arpl
jp
bound
jp
repz
mov
std
retf
push
inc
and
daa
mov
pop
or
fcomip
sub
dec
push
movs
mov
mov
call
or
ja
in
xchg
inc
rol
retf
push
dec
cmp
ds
inc
push
aas
inc
push
ret
add
cmps
pop
or
pushf
out
lds
inc
aas
mov
outs
test
lock
leave
mov
inc
pop
mov
inc
mov
mov
mov
out
int3
cmp
and
mov
pop
fsubr
inc
cmp
jmp
add
in
sub
dec
mov
test
out
ret
add
pop
push
retf
cmp
ins
int3
cmp
(bad)
out
mov
fld
inc
sub
mov
xchg
cmp
ret
jns
jecxz
mov
data16
mov
sub
sti
pop
xchg
inc
aas
and
pop
dec
push
inc
aas
and
call
sub
loop
push
inc
aas
mov
ins
or
lock
test
fimul
jnp
call
add
jecxz
inc
sti
adc
mov
call
inc
loop
push
inc
aas
mov
or
jp
pusha
or
js
mov
mov
ins
sbb
lock
pushf
adc
test
sub
or
mov
test
add
cdq
inc
arpl
addr16
jp
(bad)
mov
data16
mov
call
fldenv
and
out
(bad)
cmp
xchg
jns
xor
out
add
jmp
push
xchg
sub
data16
mov
(bad)
cmp
mov
idiv
pop
gs
push
test
jecxz
mov
loop
movs
inc
aas
sub
stos
mov
(bad)
xchg
mov
xchg
mov
(bad)
xchg
pop
fs
loop
movs
inc
aas
push
fs
mov
loop
retf
fnstenv
jmp
cmp
jmp
(bad)
sub
push
sub
push
sub
push
xchg
mov
jns
jmp
pop
popf
adc
push
retf
push
fimul
loopne
jns
jecxz
leave
cmps
outs
inc
dec
lods
mov
das
inc
sub
(bad)
sti
out
or
or
mov
mov
push
enter
sbb
lock
cli
pop
push
fs
cmc
ds
jecxz
arpl
jecxz
cwde
jns
mov
or
rol
add
mov
fld
inc
sub
or
cmps
push
mov
out
push
add
inc
ret
add
jecxz
aas
lds
mov
std
mov
std
fnstcw
std
mov
fs
aas
mov
fs
aas
mov
push
aam
shr
sub
arpl
inc
fnstenv
retf
mov
lock
ds
call
inc
mov
pop
xor
mov
jecxz
xchg
inc
inc
and
mov
jno
and
push
xor
ret
add
fld
inc
sub
or
cmps
push
jns
std
inc
mov
add
outs
leave
stc
mov
std
fldcw
std
mov
idiv
mov
std
mov
push
int3
mov
push
enter
retf
in
jge
mov
call
(bad)
ds
(bad)
ds
jb
shr
ss
std
inc
mov
jb
ss
add
and
dec
push
fmul
fcomi
test
cli
pop
push
fsubr
pop
push
push
addr16
cmc
adc
clc
lods
mov
sub
int3
mov
pop
or
cmp
xor
in
popf
jns
mov
arpl
add
(bad)
xchg
cwde
lods
fisttp
push
dec
fcomi
int3
repnz
push
test
push
bswap
adc
sbb
aas
mov
ret
pop
sbb
repnz
cmp
stc
push
test
aam
std
cmp
add
lods
popa
in
adc
rcl
or
mov
push
cwde
cmp
aas
inc
inc
jmp
dec
fcomi
test
jns
cmc
cmp
and
xchg
sub
push
mov
sub
push
daa
retf
punpckhwd
ds
in
mov
std
cwde
aas
sub
cwde
inc
sub
ret
mov
syscall
push
retf
ds
popa
or
or
sub
inc
and
retf
pop
popf
adc
push
retf
add
adc
enter
(bad)
mov
cmps
push
retf
push
jb
(bad)
cmps
mov
cmp
mov
and
(bad)
mov
(bad)
push
(bad)
jns
mov
cmp
or
sti
out
push
xchg
or
in
pop
ret
xchg
retf
inc
cmp
fld
dec
dec
fcomi
ret
std
leave
xor
retf
(bad)
bound
shl
shr
enter
aaa
inc
scas
add
add
xchg
fsubr
adc
test
mov
outs
push
inc
inc
movs
sub
mov
sub
ret
std
mov
int
mov
jg
push
retf
jmp
cmp
sbb
(bad)
mov
xchg
xor
retf
or
mov
jnp
aaa
(bad)
std
mov
mov
(bad)
ds
xor
add
mov
cli
mov
jo
xor
(bad)
mov
movs
push
dec
cmp
inc
xor
int3
out
mov
push
test
mov
std
retf
sti
xlat
dec
int3
sti
retf
dec
daa
ins
loop
ds
push
int3
sti
xlat
dec
daa
aad
std
cmp
inc
jle
dec
inc
icebp
mov
repnz
sahf
(bad)
cld
ds
jmp
jle
cmps
mov
inc
sub
pop
repnz
sahf
pop
cld
ds
inc
xor
out
mov
std
ds
xor
adc
out
cmp
(bad)
sahf
js
ds
ret
(bad)
mov
aad
es
sti
xlat
dec
daa
or
std
ds
or
sti
xlat
dec
daa
and
std
ds
pop
adc
jp
add
in
xchg
mov
std
ds
arpl
xor
out
daa
jmp
std
ds
xor
and
push
push
lock
add
hlt
sbb
lods
jg
mov
std
mov
stos
addr16
jg
icebp
mov
push
add
(bad)
into
or
mov
jae
inc
xor
enter
call
(bad)
cmp
sub
or
cmp
std
cmp
cmp
ret
arpl
retf
push
mov
add
mov
mov
std
mov
jo
dec
push
jno
xor
int3
mov
mov
cld
mov
jo
xor
int3
stos
ds
add
inc
rol
pop
xor
ds
mov
xor
les
in
mov
jecxz
ret
mov
or
push
retf
push
retf
mov
mov
add
cmp
xchg
shl
mov
test
mul
dec
inc
sub
mov
mov
xor
out
pop
add
mov
jge
out
add
clc
out
push
or
jecxz
(bad)
or
jecxz
ret
pop
popf
adc
xchg
inc
rol
test
xlat
dec
daa
std
jecxz
ds
inc
pop
(bad)
jae
push
dec
(bad)
test
jmp
in
mov
sti
(bad)
jecxz
leave
sub
mov
mov
or
sti
mov
inc
sbb
cmp
sbb
jecxz
ret
xchg
adc
rcl
push
xchg
or
mov
mov
fninit
jge
mov
out
fnstenv
inc
inc
inc
test
mov
and
mov
std
ret
xchg
ins
jae
sub
cmp
sub
mov
mov
(bad)
mov
in
sub
push
fnstcw
pop
adc
pop
or
sti
jmp
xchg
mov
cmp
sub
jno
inc
repnz
(bad)
adc
mov
ja
adc
xchg
out
or
inc
sub
dec
add
mov
inc
aas
hlt
or
lods
mov
ja
sbb
push
aas
in
xchg
mov
std
leave
or
or
sbb
inc
inc
adc
dec
add
dec
push
std
ds
cmps
push
retf
jmp
outs
jae
lds
inc
enter
push
push
and
int3
sub
(bad)
sub
(bad)
pop
ins
test
mov
into
pusha
test
(bad)
into
add
mov
mov
sahf
adc
ret
movs
jae
inc
sub
ret
jno
cmp
adc
shl
sub
and
ficomp
repz
rcr
lods
add
add
mov
inc
sub
xchg
push
jno
out
int3
aaa
shl
dec
std
ds
cld
mov
retf
push
fdiv
cmp
mov
cmp
sub
push
daa
enter
cmp
daa
(bad)
std
cmovae
cmps
xor
jns
mov
and
data16
mov
(bad)
cmps
and
(bad)
ds
dec
mov
mov
sub
ss
xchg
aas
dec
out
xchg
sbb
(bad)
test
inc
jae
or
jecxz
xchg
push
aaa
push
ds
pop
push
test
ins
cmp
ja
(bad)
sub
cmp
mov
stc
jne
cld
jecxz
inc
inc
jecxz
inc
movs
inc
aas
mov
pop
adc
bound
xchg
mov
push
daa
mov
std
ds
mov
aas
pop
adc
add
pop
sbb
sub
in
mov
std
xchg
(bad)
inc
pop
push
ins
mov
inc
sub
cld
mov
loop
push
or
jae
mov
or
sub
cld
push
cs
aas
lahf
mov
ds
lds
cmp
pop
sub
sahf
jmp
sub
cmp
sub
ss
shl
adc
jecxz
jns
add
and
push
sub
in
ds
pusha
sbb
and
std
ds
fidivr
inc
sub
(bad)
mov
push
ds
(bad)
dec
test
xor
icebp
mov
mov
lods
ss
sbb
push
in
adc
test
jns
pop
stos
jg
sbb
mov
dec
add
pop
sbb
cmp
scas
jb
inc
xor
js
pop
xchg
retf
xchg
jmp
inc
lock
or
mul
ss
sub
out
mov
std
xchg
or
std
mov
dec
pop
sub
aas
aas
sub
jp
repz
adc
add
cmp
mov
outs
ret
mov
jmp
add
out
xchg
ins
pop
sbb
xor
ds
pop
adc
xchg
repz
sub
std
mov
cmp
mov
cmp
mov
outs
xor
or
(bad)
cmp
das
aaa
push
sub
std
mov
dec
pop
sub
mov
pop
icebp
mov
ins
jnp
inc
call
and
sahf
sub
mov
arpl
inc
loopne
mov
mov
adc
sbb
xor
jmp
jecxz
mov
pop
stc
mov
cmp
sub
std
mov
dec
(bad)
cmp
inc
ss
aas
cmp
mov
jecxz
sbb
in
cld
push
xor
inc
aas
mov
dec
mov
add
(bad)
enter
ds
pop
call
mov
or
dec
ds
jge
mov
push
jg
aad
les
pop
mov
push
inc
arpl
cmp
adc
jb
ret
arpl
loop
mov
jbe
add
outs
les
adc
jb
ret
arpl
loop
cmps
or
inc
jbe
add
outs
les
adc
jb
mov
sub
ret
jbe
add
outs
les
arpl
and
in
mov
dec
add
adc
or
ret
push
xchg
or
sub
xor
mov
xchg
sub
enter
test
sub
enter
test
popa
push
leave
lds
pop
sub
jge
mov
out
jno
fisttp
mov
sub
es
pop
leave
aad
xor
mov
push
jge
out
or
and
out
mov
xchg
xchg
int3
inc
inc
mov
or
jns
out
sub
inc
xchg
repnz
repnz
jecxz
daa
inc
in
ds
les
cmp
out
dec
(bad)
aas
and
push
sub
jo
cmp
mov
xor
cmp
inc
aas
lds
aas
mov
jge
loope
das
mov
fild
mov
fs
add
xchg
jecxz
cmp
popa
adc
xor
std
ds
inc
push
add
mov
add
jle
std
ds
in
ds
mov
lds
ds
cmp
inc
aas
lds
ds
jle
out
xor
jecxz
leave
js
sbb
mov
xchg
sub
mov
or
out
imul
call
dec
cli
inc
aas
lds
and
cmp
pop
sub
mov
iret
cs
xlat
xchg
out
test
fwait
cmp
inc
aas
sub
add
mov
jnp
mov
push
das
aas
cmp
mov
arpl
outs
sub
cld
mov
xlat
aaa
push
push
cld
inc
aas
xor
or
jns
dec
daa
mov
cmp
or
ret
ja
xchg
call
mov
cmp
push
bswap
sti
xlat
std
test
sub
ds
xchg
add
outs
fs
push
or
jle
jecxz
add
loop
ds
clc
popf
push
(bad)
jecxz
xchg
xchg
bound
dec
ins
cmps
push
(bad)
sahf
test
test
inc
icebp
xchg
push
(bad)
jecxz
cmc
jns
add
lds
aas
mov
mov
mov
stc
jo
xor
mov
xor
or
push
pop
inc
xchg
dec
and
mov
std
test
into
arpl
or
jle
out
add
aad
jmp
dec
inc
(bad)
(bad)
ds
stc
js
jb
aas
mov
call
mov
xor
xor
div
adc
and
jno
lds
and
sub
inc
xchg
push
or
xchg
int
cmp
jecxz
dec
add
repnz
and
popa
push
sub
in
ds
fiadd
jecxz
jno
addr16
into
sub
aas
xor
or
jns
add
mov
push
sub
outs
or
int3
sub
dec
ins
cmps
mov
data16
movs
jb
lds
mov
push
clc
std
ds
into
mov
ds
pop
loop
repz
mov
jnp
lds
out
jcxz
cwde
bswap
or
xchg
call
cmp
jmp
into
mov
sub
ret
inc
out
repnz
into
cmp
test
lahf
add
aas
sub
retf
inc
ds
fucomi
inc
inc
sub
ret
dec
mov
ds
jle
mov
push
ds
std
test
mov
std
mov
xor
cwde
mov
(bad)
xor
cmp
jnp
lods
mov
dec
pop
sub
add
out
test
and
mov
jnp
jge
rol
jecxz
leave
adc
mov
cmp
ret
(bad)
mov
pop
fincstp
mov
(bad)
ds
std
ds
rol
sti
iret
add
mov
call
ds
pop
push
sti
mov
ds
call
pop
mov
aas
mov
push
inc
ror
stos
mov
cdq
xor
jmp
mov
xor
jmp
sub
inc
mov
std
sub
data16
mov
or
jb
pop
fld
sti
iret
(bad)
ds
mov
ins
outs
inc
aas
cmp
or
sti
iret
pop
movs
aas
cmc
pop
or
xor
shl
test
pop
xor
add
xor
mov
test
imul
arpl
sub
mov
pop
aad
test
pop
add
jecxz
xor
sbb
cmps
push
retf
push
std
out
movs
inc
aas
or
xor
sub
out
add
add
jecxz
dec
or
aad
leave
retf
pushf
loopne
jecxz
test
ret
inc
sahf
add
ds
xchg
out
addr16
sahf
les
inc
or
aad
sti
out
pop
popf
adc
xchg
inc
ror
mov
inc
rol
jg
mov
outs
dec
dec
sbb
idiv
mov
aaa
test
adc
arpl
xor
aas
mov
sahf
push
(bad)
jecxz
int3
sti
out
addr16
push
dec
push
inc
mov
cld
je
movs
inc
aas
mov
mov
sub
cmp
data16
(bad)
push
jle
pop
add
outs
pop
arpl
sub
jo
jns
test
lahf
js
dec
jns
ficomp
sbb
inc
lods
sub
inc
mov
push
xchg
sahf
add
aas
mov
add
inc
mov
daa
xchg
sahf
scas
add
mov
dec
ds
out
dec
test
loop
sti
or
dec
cmps
iret
add
imul
cmps
mov
xchg
fsub
mov
inc
jecxz
rol
ds
sub
retf
fldenv
mov
lods
std
sahf
adc
sar
push
mov
dec
mov
in
std
loop
cwde
inc
xor
inc
cmp
ret
add
dec
mov
call
inc
inc
and
les
mov
aas
inc
cmp
aas
aas
in
xchg
inc
rcl
je
ror
adc
mov
cmp
sub
jno
sbb
(bad)
mov
cmp
push
and
in
push
jecxz
cwde
and
pop
ds
cld
mov
loop
inc
sahf
add
ds
ret
sub
les
retf
inc
fbstp
cmp
push
inc
sub
sahf
adc
pop
add
outs
jmp
mov
ss
(bad)
push
push
leave
mov
outs
inc
inc
icebp
cmps
jb
sbb
push
jb
inc
pop
pushf
jns
sbb
jbe
(bad)
mov
outs
dec
inc
icebp
scas
jb
sbb
mov
sbb
jmp
inc
icebp
xchg
push
(bad)
jecxz
cmc
jbe
inc
xor
push
xchg
push
aaa
test
pop
sub
inc
lds
nop
mov
push
(bad)
or
pop
ds
mov
iret
or
inc
jbe
sahf
push
(bad)
jecxz
fsubr
sub
mov
sbb
ja
aad
jecxz
push
mov
(bad)
ds
(bad)
mov
inc
push
dec
dec
movs
dec
ds
addr16
or
pop
ds
mov
iret
or
inc
jbe
xor
mov
or
fnstsw
mov
arpl
pop
sub
or
js
fiadd
inc
mov
push
lds
(bad)
jmp
inc
and
(bad)
xchg
sub
mov
mov
mov
mov
data16
mov
add
ds
mov
sub
mov
data16
mov
adc
jmp
mov
mov
sti
jno
imul
jle
pop
call
push
retf
cld
test
ins
inc
dec
inc
cmps
and
mov
std
sub
cmp
dec
push
cmps
inc
aas
or
movs
test
lahf
js
dec
ja
ficomp
sbb
inc
mov
in
jbe
sbb
mov
cmp
shr
aas
sub
xor
loope
jb
call
mov
test
and
jmp
ds
imul
outs
add
jb
iret
adc
sbb
ds
push
aas
mov
in
sbb
std
ret
add
inc
pop
add
and
call
jo
inc
lods
sbb
inc
call
pop
add
jecxz
xor
dec
mov
in
daa
xlat
dec
std
ds
push
aas
mov
in
sbb
std
ret
add
cmps
mov
jle
ficomp
fld
xchg
or
cmps
inc
aas
inc
add
retf
repnz
hlt
ret
std
mov
dec
(bad)
cmp
push
aas
mulps
int3
cld
out
dec
ds
rcl
mov
inc
inc
and
in
push
jecxz
cwde
inc
out
sub
dec
ds
mov
mov
pop
call
mov
add
inc
mov
cli
or
cld
jecxz
xchg
inc
rol
inc
cmp
aas
(bad)
ss
xchg
push
inc
ret
jno
cmp
add
sub
and
sub
add
int
inc
mov
mov
inc
aas
jne
mov
retf
mov
add
jecxz
je
add
add
jecxz
aas
js
(bad)
sub
retf
push
mov
jecxz
das
mov
dec
ds
in
mov
std
leave
scas
cmp
mov
add
aas
jne
mov
add
mov
in
push
jecxz
retf
push
ret
jb
cmp
aas
lds
aas
mov
push
daa
lahf
cmp
bswap
(bad)
aas
mov
xor
icebp
mov
cli
mov
dec
jmp
xchg
add
mov
std
ds
sub
ret
jno
cmp
or
sub
mov
aas
cmp
enter
mov
push
push
cld
cmp
xchg
stos
test
mov
inc
aas
push
mov
xchg
popa
es
mov
outs
push
(bad)
cmp
aas
inc
stc
lds
jecxz
jl
cmc
inc
aas
mul
idiv
pusha
loopne
mov
loopne
mov
dec
jmp
pop
cmp
packuswb
mov
cmp
inc
mov
push
cwde
mov
loop
ret
or
mov
sub
ret
add
inc
inc
sub
enter
call
outs
push
arpl
sub
xchg
inc
pop
and
push
add
inc
and
repnz
cmp
mov
fmul
leave
icebp
movs
jno
out
push
add
adc
mov
sub
or
jno
jno
lods
jo
icebp
mov
inc
and
push
retf
push
popf
aas
out
rcl
outs
jp
(bad)
cmp
jbe
sbb
or
lock
sti
mov
mov
out
mov
std
ret
cmp
out
test
jecxz
inc
mov
out
mov
std
ret
cmp
out
test
jecxz
inc
mov
out
mov
std
ret
pop
popf
jns
inc
arpl
outs
jbe
inc
mov
xor
cmc
movs
out
rcl
xchg
call
fisttp
inc
xchg
cli
pop
add
inc
sub
retf
test
shl
add
into
or
adc
in
pop
add
outs
jmp
mov
cmp
test
ins
adc
or
xchg
aas
sub
retf
jnp
pop
mov
sahf
push
std
ds
out
mov
std
int3
sti
ror
sahf
out
ds
out
mov
std
retf
and
or
mov
inc
das
inc
sub
(bad)
cmp
shl
inc
inc
mov
push
mov
pop
rcr
fisubr
inc
inc
movs
mov
inc
inc
out
das
ja
push
add
les
sar
out
ds
xchg
mov
xor
fdivr
ds
inc
cmp
iret
jmp
popf
sbb
inc
dec
adc
sub
or
pop
or
(bad)
std
mov
(bad)
ds
(bad)
mov
and
jl
loop
jl
jecxz
jl
in
jl
in
jl
out
jl
out
jl
call
or
or
or
cmp
jle
sub
inc
mov
std
leave
xchg
add
mov
outs
jnp
sbb
shl
sbb
inc
sub
arpl
(bad)
ret
cmp
ret
cmp
std
movs
icebp
mov
std
ds
lds
jecxz
aaa
sub
cmp
(bad)
ds
jae
push
lods
rol
cmp
(bad)
ds
jae
cmp
aas
sub
dec
push
div
pop
sbb
inc
daa
add
mov
les
sbb
(bad)
daa
and
std
ds
xchg
rol
push
int3
cmp
mov
push
add
mov
outs
int
cmps
movs
out
pop
movs
push
mov
dec
and
cmp
stos
jg
xchg
sar
add
mov
int3
sti
ror
sbb
std
cmp
clc
ds
push
push
int3
sti
mov
or
push
xor
aas
pop
jb
inc
popa
adc
stos
add
cmp
jge
lahf
aad
ds
jnp
cmp
adc
lds
cld
jle
jecxz
ret
inc
mov
mov
jecxz
add
push
mov
imul
rcr
int3
sti
ror
cmc
loopne
ds
jae
inc
xor
retf
stc
out
or
sub
mov
inc
pop
out
int3
xor
mov
(bad)
pop
int3
jmp
test
jecxz
int3
sti
jmp
int3
sti
ror
sub
sub
(bad)
sahf
mov
ds
inc
cmp
sbb
jp
add
sub
ds
test
call
(bad)
sub
jmp
dec
inc
xor
add
repz
out
pop
add
mov
inc
sub
and
loope
push
stc
out
std
jbe
bound
jecxz
test
cmps
cmp
sub
jge
out
add
sub
ret
cmp
ret
inc
out
popa
inc
mov
call
mov
outs
pop
dec
or
jae
sbb
dec
dec
jmp
iret
xchg
sub
movs
inc
sub
retf
std
mov
fldenv
(bad)
mov
mov
mov
ins
push
inc
lds
inc
mov
arpl
scas
jecxz
dec
cmp
jg
mov
or
ds
clc
(bad)
cmc
pop
add
iret
cmp
mov
jge
into
loop
inc
cmp
push
mov
push
mov
dec
out
jmp
(bad)
ds
mov
pop
mov
push
les
in
jb
out
add
ins
inc
inc
aas
sub
enter
inc
mov
xchg
sub
push
sti
out
add
mov
mov
lock
mov
add
xchg
xor
enter
test
call
ja
dec
cmp
movs
cli
nop
push
jecxz
daa
mov
std
cmp
add
sti
fbld
inc
aaa
mov
loop
daa
sub
test
popa
or
xor
in
aas
mov
cmp
cld
mov
jecxz
sar
cld
ds
push
movs
cmp
aas
xor
in
std
mov
mov
(bad)
ds
jnp
mov
sub
sub
ss
inc
inc
inc
mov
jno
mov
jmp
fdivrp
add
jmp
in
shl
(bad)
mov
xchg
or
ds
cmp
ss
mov
data16
mov
sub
sbb
inc
xor
std
mov
data16
mov
jg
pushf
jecxz
mov
loop
inc
sbb
inc
and
sbb
inc
and
cwde
iret
add
sti
ror
xor
xor
dec
jge
xchg
xor
enter
mov
ins
inc
dec
mov
(bad)
cld
ret
std
mov
ss
ss
ret
xchg
jg
push
retf
jmp
jecxz
or
iret
pop
js
lock
xor
mov
jecxz
pop
aas
sub
ret
aaa
mov
pop
add
sti
jmp
enter
dec
sub
or
jns
mov
pop
mov
jo
jg
gs
mov
mov
push
or
xor
mov
xor
mov
push
daa
sub
std
ds
xor
out
xor
mov
inc
pop
call
sahf
nop
cld
jecxz
fs
cmp
or
fs
cmp
or
mov
repz
mov
repz
mov
repz
mov
repz
cmp
std
add
jecxz
test
std
leave
add
add
jg
inc
push
sub
addr16
mov
push
aas
and
addr16
sahf
movs
mov
or
in
daa
mov
std
ds
in
aas
mov
(bad)
es
std
ds
cmp
mov
retf
jge
jecxz
loope
movs
inc
aas
jns
retf
mov
or
outs
jmp
out
(bad)
dec
cmp
jae
inc
popa
or
mov
data16
mov
inc
div
xchg
pop
cmc
(bad)
jo
aas
inc
or
sub
add
cld
xor
sbb
(bad)
out
mov
add
in
inc
mov
int
aas
mov
mov
mov
std
dec
cmp
ds
xlat
sub
in
cmps
jecxz
ja
sub
ror
in
pop
cmps
jecxz
ja
sub
adc
ds
ds
and
jecxz
leave
adc
inc
aas
inc
jmp
sub
dec
(bad)
test
test
daa
lea
std
cmp
jae
call
sub
jecxz
inc
lods
mov
pop
das
mov
xor
dec
inc
mov
xchg
ds
ret
scas
mov
adc
or
cmps
cmp
push
retf
push
test
in
xor
pop
add
imul
inc
scas
jecxz
inc
cmp
cld
mov
xor
adc
mov
or
inc
or
out
enter
sub
or
mov
inc
arpl
xor
jne
mov
mov
ret
stos
pop
add
out
pop
push
aas
mov
les
(bad)
inc
aas
sahf
cmps
dec
ds
mov
push
ror
mov
dec
aaa
xor
dec
retf
in
(bad)
jecxz
leave
sti
jmp
or
(bad)
mov
lock
dec
call
jno
dec
or
mov
int3
adc
mov
int3
push
pop
mov
jge
mov
mov
mov
aas
mov
inc
inc
adc
dec
xor
ins
or
mov
std
pop
js
std
test
inc
aas
sahf
sub
mov
mov
push
mov
aaa
xor
dec
retf
in
(bad)
jecxz
leave
sti
jmp
jl
stc
dec
inc
(bad)
jecxz
enter
inc
adc
(bad)
test
xor
mov
int3
popf
popa
mov
mov
int3
fcomp
jecxz
movs
mov
mov
and
mov
inc
inc
adc
dec
xor
ins
or
mov
std
pop
js
std
test
loop
arpl
jecxz
inc
mov
mov
inc
xor
dec
inc
jmp
sub
push
inc
ja
out
hlt
loop
cwde
cmp
mov
cmps
push
aas
or
ret
mov
ss
xchg
inc
popa
push
enter
test
addr16
inc
mov
jge
fcomi
sbb
jecxz
xchg
sahf
addr16
ds
neg
lds
inc
mov
xor
mov
aas
jnp
pop
add
sti
fild
sub
pop
sub
outs
inc
dec
inc
and
enter
dec
repnz
repnz
jb
repnz
repnz
or
jecxz
aaa
movd
js
loopne
push
mov
push
enter
inc
cmp
(bad)
sahf
stos
dec
ds
mov
daa
mov
outs
imul
xchg
pop
fnstcw
or
jecxz
aaa
pcmpgtb
test
out
retf
mov
mov
push
retf
arpl
mov
add
or
jecxz
add
push
lds
sub
aas
mov
std
sub
cmp
add
loop
cwde
inc
mov
jb
lds
dec
ds
mov
daa
dec
das
std
ds
sub
int3
inc
mov
data16
sub
inc
xchg
inc
ret
jb
jge
repnz
mov
std
sub
jecxz
ds
jecxz
retf
mov
clc
sbb
(bad)
ds
movs
or
lds
aas
mov
and
repnz
(bad)
cmp
add
test
mov
sub
lds
aas
mov
sub
lds
aas
mov
sub
mov
std
dec
cmp
ds
mov
ds
mov
dec
inc
hlt
(bad)
ds
xor
or
ds
cmovle
pop
(bad)
ds
out
lds
inc
mov
inc
dec
cmp
(bad)
ds
or
ds
repnz
(bad)
in
ds
(bad)
aas
mov
xor
xchg
(bad)
sub
and
sahf
hlt
jno
cmp
push
mov
addr16
dec
mov
and
les
push
(bad)
sahf
inc
inc
ds
jmp
inc
and
pop
sub
inc
dec
mov
and
les
add
push
jecxz
or
dec
cmps
addr16
inc
xor
addr16
adc
hlt
dec
cmp
mov
push
icebp
mov
sub
or
ds
pop
cli
sub
std
ds
addr16
mov
test
fild
daa
ss
std
cmp
or
fmul
ret
fidivr
rcr
or
jae
push
or
test
loop
xchg
sahf
sbb
mov
ret
push
add
data16
sub
inc
mov
sub
cmp
add
sub
call
inc
and
retf
add
icebp
test
jmp
inc
sub
add
pop
imul
sar
(bad)
jmp
std
inc
sti
fist
sahf
add
cmp
cli
ds
jae
mov
test
int3
(bad)
popa
mov
cld
mov
jecxz
inc
mov
out
cli
loop
ret
mov
fsub
std
retf
sbb
pop
popf
adc
dec
arpl
xor
mov
out
in
mov
std
add
out
cmps
ss
ds
sub
push
cld
out
(bad)
ds
dec
ds
js
ds
cwde
mov
jecxz
pop
shl
push
popf
jns
inc
arpl
cmp
inc
cmp
shl
mov
outs
int3
daa
jb
std
cmp
aas
sub
cld
mov
out
mov
(bad)
cld
push
into
xor
mov
mov
inc
dec
adc
or
or
nop
inc
sub
cmps
or
push
stos
inc
cmp
add
cmps
dec
ds
mov
pop
jno
cmp
fsub
xchg
int3
pushf
mov
jecxz
int
sub
es
sub
ds
aaa
push
xchg
jmp
outs
out
enter
daa
test
(bad)
ds
xor
xchg
push
aas
mov
mov
push
stos
inc
cmp
sub
shr
std
ds
sub
ret
xchg
pop
in
ds
mov
hlt
pop
shl
std
ds
imul
ret
xlat
mov
std
leave
sti
test
(bad)
iret
in
or
jecxz
(bad)
push
fdivr
ds
inc
fwait
add
std
ds
bound
cld
pop
add
jecxz
int
in
ds
cmp
jecxz
aas
mov
ss
ficomp
in
out
std
ret
jbe
add
ds
ss
ficomp
jge
dec
in
ds
jecxz
jg
ins
inc
mov
cmp
(bad)
ds
dec
test
in
ds
push
xchg
mov
adc
pushf
into
push
xor
sub
mov
(bad)
in
ds
mov
adc
std
xchg
inc
mov
pop
(bad)
jecxz
test
xor
jecxz
loop
cwde
icebp
cmps
push
mov
imul
xor
sub
push
aas
mov
xchg
inc
stos
pop
popf
adc
dec
mov
std
ds
push
aas
or
out
daa
(bad)
psubw
lods
sub
inc
mov
add
aas
mov
mov
pop
xor
push
ds
std
push
fidiv
inc
aas
inc
xor
loope
add
push
int3
fadd
ret
inc
or
dec
test
arpl
push
std
daa
gs
ds
sub
sbb
(bad)
ds
sub
jecxz
push
test
xor
push
(bad)
aaa
inc
aas
cmp
test
mov
push
daa
sbb
nop
aas
mov
add
enter
inc
or
xlat
jns
jecxz
std
pop
in
ds
inc
fwait
push
pop
add
mov
jecxz
ret
std
(bad)
cli
pop
adc
mov
jb
and
cld
mov
jecxz
sub
or
retf
mov
test
loop
arpl
loop
xchg
sub
leave
test
push
imul
pop
popf
adc
mov
dec
add
push
sub
aas
sahf
aas
inc
ds
dec
ret
(bad)
xchg
lods
gs
aas
mov
add
sub
addr16
mov
mov
cmp
or
add
mov
inc
aas
cmp
aas
push
jecxz
(bad)
sahf
dec
xor
mov
add
jecxz
mov
inc
sbb
cmps
sbb
std
ds
sbb
sar
rol
jbe
or
add
out
shl
std
sub
dec
std
int3
add
out
aad
std
leave
sti
rol
jo
sub
ds
push
push
int3
adc
push
int3
add
mov
sahf
neg
mov
push
cmps
sbb
std
ds
sbb
mov
mov
sahf
test
aas
mov
dec
cmp
out
sbb
mov
dec
sub
in
in
shl
std
leave
add
mov
ins
or
mov
std
pop
js
std
test
jno
das
sahf
cmc
sbb
mov
dec
inc
inc
sub
(bad)
sahf
sub
aas
mov
dec
cmp
stos
sbb
mov
(bad)
jb
cmps
add
js
std
cmp
jp
inc
aas
push
int3
test
jecxz
aas
inc
lods
out
or
std
add
mov
inc
pusha
and
cmp
push
sahf
sbb
mov
mov
ds
inc
inc
repz
ds
sbb
pop
loope
lds
aas
mov
cmp
mov
std
mov
and
jl
mov
ds
sub
std
ds
cmp
mov
std
mov
push
mov
retf
mov
mov
std
sub
outs
add
test
mov
mov
std
sub
outs
add
test
mov
mov
std
sub
outs
add
sub
je
aas
mov
xchg
and
jl
cmp
mov
(bad)
ds
cmc
(bad)
ds
je
mov
cmp
or
push
dec
add
mov
je
mov
jmp
or
mov
call
or
mov
addr16
push
inc
pop
call
push
ds
js
bts
xchg
sub
rcr
idiv
ds
inc
arpl
int3
push
out
mov
mov
jns
push
or
jecxz
imul
repz
ds
push
xchg
mov
push
retf
jae
and
in
(bad)
std
rcr
dec
xor
push
push
mov
retf
mov
add
stos
inc
jnp
push
(bad)
ds
and
mov
in
mov
std
(bad)
cld
dec
mov
push
cmp
or
ror
cmp
inc
inc
sub
push
cld
pop
movs
nop
sti
jecxz
(bad)
aas
sub
mov
outs
dec
xor
pop
popf
sbb
aas
mov
std
pop
js
std
xchg
inc
aad
ins
(bad)
std
xor
sub
push
daa
add
std
ds
popf
js
std
xchg
or
or
ds
sub
cld
aas
dec
daa
(bad)
xlat
std
ds
mov
aaa
sahf
adc
aas
mov
std
mov
outs
lds
mov
inc
shl
xchg
ret
sub
imul
inc
aas
sahf
in
mov
mov
mov
jo
jecxz
dec
mov
outs
or
jecxz
xchg
inc
rcl
or
in
or
or
std
ds
outs
test
in
imul
jl
sub
cld
mov
retf
pop
jno
jecxz
jmp
repnz
mov
outs
dec
push
sahf
xor
jl
inc
popa
or
(bad)
in
ds
fidiv
inc
sbb
cld
jecxz
inc
sub
cmp
cld
jecxz
mov
cmp
cld
jecxz
xchg
cmp
cld
jecxz
xor
mov
cld
jecxz
jg
sub
cmps
or
jecxz
jnp
sub
jae
pop
sbb
mov
jecxz
inc
sahf
fisub
aas
mov
fistp
mov
cmp
inc
aas
outs
cmc
(bad)
ds
cmp
scas
pop
or
mov
jecxz
mov
mov
jg
mov
std
cmp
out
std
leave
cmps
dec
inc
add
jecxz
or
mov
mov
shl
dec
cmp
inc
aas
sub
mov
pop
adc
test
mov
mov
std
sub
pop
cmp
(bad)
arpl
(bad)
ds
mov
jecxz
leave
mov
mov
movs
xor
xor
jl
mov
mov
hlt
dec
dec
ins
xor
nop
inc
mov
mov
loop
pop
mov
std
jno
iret
es
and
mov
mov
ds
adc
mov
dec
ds
cld
push
xchg
cmp
in
sahf
adc
pop
add
jecxz
retf
jmp
leave
xor
cmp
pusha
out
std
pushf
jns
sbb
jecxz
push
out
std
add
addr16
sub
retf
xchg
sub
retf
xchg
outs
out
enter
test
jecxz
test
sub
int3
sti
mov
std
ds
jmp
shl
push
retf
inc
inc
or
out
movs
inc
in
arpl
scas
push
add
aas
mov
lock
mov
xor
dec
dec
ins
xor
xchg
lds
ds
or
mov
jecxz
test
inc
pop
add
addr16
outs
out
ds
cld
push
(bad)
xor
jb
inc
sub
pop
test
jecxz
jmp
jmp
adc
sub
mov
int3
jb
mov
mov
inc
mov
jmp
(bad)
sub
std
ds
sub
sti
out
and
inc
sti
scas
lahf
(bad)
mov
mov
inc
dec
aas
popa
cli
std
ss
ds
cmp
dec
shl
std
(bad)
sti
mov
push
aas
mov
jae
mov
sbb
retf
mov
jae
mov
and
lea
dec
std
int3
add
in
iret
jecxz
leave
add
mov
jecxz
(bad)
xor
jle
mov
mov
jecxz
mov
inc
pop
mov
mov
mov
jecxz
retf
jmp
mov
xchg
dec
(bad)
cmps
ret
ds
sbb
retf
mov
mov
dec
inc
cmp
enter
dec
inc
cmp
enter
dec
mov
mov
cmp
es
and
inc
dec
aas
sub
int3
sti
mov
or
jecxz
test
loop
pop
mov
fst
lods
rol
mov
cmp
es
les
ins
inc
sbb
(bad)
(bad)
and
gs
(bad)
jecxz
cmp
xchg
cmp
sub
or
std
xchg
inc
rol
inc
aas
sub
retf
xchg
sub
retf
xchg
sub
retf
xchg
sub
retf
xchg
dec
(bad)
cmps
ret
hlt
std
ds
sbb
retf
mov
rcr
push
test
or
(bad)
cmp
cmps
dec
push
push
mov
cld
mov
loop
(bad)
sahf
mov
mov
cmp
mov
pop
sbb
lea
add
dec
(bad)
es
std
ds
mov
mov
int3
daa
mov
cmps
push
movs
mov
add
push
xchg
cmp
cmp
inc
inc
lods
mov
or
out
mov
jbe
inc
mov
sub
es
and
ds
cmp
push
mov
data16
mov
fdiv
or
xor
mov
dec
xor
xchg
std
ds
push
xchg
inc
and
xchg
cld
jecxz
aas
inc
aad
aas
push
out
aas
mov
je
mov
dec
daa
(bad)
in
cmp
aas
push
out
aas
mov
je
mov
mov
mov
pop
add
inc
test
jecxz
daa
or
xchg
popa
push
aas
sub
push
cmps
test
inc
aas
sahf
push
push
aas
mov
inc
retf
je
mov
push
retf
dec
inc
cmp
aas
cmp
addr16
push
fadd
test
jecxz
inc
jmp
jecxz
enter
jbe
jecxz
cdq
inc
xor
retf
pop
mov
mov
mov
jecxz
add
inc
add
jge
popf
add
jecxz
xchg
inc
aad
push
mov
std
xor
pop
push
inc
sub
push
daa
repz
ds
popf
js
std
idiv
aaa
cmp
mov
xchg
sub
rcr
(bad)
es
jecxz
ds
xor
mov
mov
mov
outs
out
xchg
inc
bound
les
retf
sub
mov
cmp
out
cld
mov
jo
inc
sahf
js
aas
mov
fs
mov
lds
mov
mov
std
ds
jecxz
arpl
sub
add
in
xor
jecxz
retf
mov
sub
add
ja
in
shl
add
sub
add
dec
test
jecxz
xchg
inc
aad
mov
int3
(bad)
data16
and
cmp
xchg
lock
ds
xor
push
mov
outs
les
mov
std
pop
jns
mov
sahf
dec
(bad)
ds
inc
arpl
int3
pop
dec
mov
push
retf
rol
push
xchg
inc
mov
std
es
pusha
and
fnstcw
cmp
mov
outs
dec
arpl
cmp
in
ds
pop
stos
dec
nop
or
(bad)
or
jecxz
retf
(bad)
jecxz
add
sub
mov
adc
jecxz
push
add
(bad)
rcr
std
ds
cmp
push
mov
stos
inc
cmp
jnp
aas
mov
arpl
mov
dec
jnp
jmp
mov
int3
daa
jns
(bad)
ds
xor
popf
sbb
aas
mov
std
pop
jns
mov
inc
jmp
mov
outs
int3
ds
call
rcl
push
retf
push
retf
or
pop
pop
std
js
fdiv
cmp
sub
aaa
mov
sti
out
mov
mov
mul
xor
std
cmp
retf
mov
mov
xchg
sub
retf
std
mov
int3
jle
mov
mov
xor
nop
inc
scas
std
mov
dec
add
jecxz
iret
push
in
ds
in
std
test
dec
(bad)
cmps
mov
std
ds
sbb
retf
mov
mov
aas
mov
and
in
aas
mov
outs
pop
mov
fst
cmp
test
cmp
mov
sub
nop
aas
xor
ds
adc
or
dec
cmps
imul
push
jp
inc
aas
inc
fadd
inc
or
jecxz
jmp
call
mov
inc
push
test
pop
not
mov
test
pop
or
cld
jecxz
inc
jb
inc
stos
pop
popf
jg
push
aas
or
ret
push
int3
sti
mov
mov
outs
out
ds
dec
daa
in
jecxz
cmp
aas
sub
addr16
inc
sub
ds
dec
daa
out
std
cmp
xchg
dec
(bad)
cmps
mov
pop
sbb
retf
mov
mov
sub
push
xchg
and
daa
ret
ds
sub
pop
cmp
cmp
mov
outs
jbe
inc
sub
push
cmp
add
sub
(bad)
cld
jmp
test
ins
jl
mov
jecxz
mov
adc
outs
mov
dec
jb
inc
(bad)
out
xchg
ins
inc
dec
aas
sub
add
out
daa
retf
lods
sub
inc
mov
add
aas
mov
mov
outs
mov
test
jecxz
enter
inc
(bad)
lahf
inc
aas
mov
add
sbb
(bad)
es
lock
movq
sbb
aas
mov
std
pop
jns
mov
into
js
inc
(bad)
out
xchg
ins
inc
dec
aas
sub
add
out
daa
retf
lods
sub
inc
mov
add
aas
mov
mov
outs
loopne
test
jecxz
xchg
inc
aad
mov
stos
add
js
(bad)
cmp
mov
cld
mov
retf
push
aas
mov
cld
mov
retf
and
mov
ins
or
mov
std
pushf
jg
mov
(bad)
push
mov
mov
jecxz
sbb
add
or
retf
push
xchg
cmp
std
xchg
inc
aad
inc
aas
sub
retf
xor
icebp
fidiv
mov
push
ds
in
mov
std
ds
in
shl
sar
popf
mov
inc
push
sub
add
pop
and
jge
fiadd
int3
js
mov
push
(bad)
aas
sub
daa
ja
std
cmp
xchg
mov
mov
fild
inc
icebp
stos
jnp
inc
mov
jle
push
int3
xchg
aas
mov
call
push
push
jno
clc
push
int3
inc
ds
push
cwde
mov
push
inc
inc
and
xchg
cwde
lods
fld
clc
mov
std
ds
movs
jl
inc
movs
jmp
mov
mov
sub
mov
inc
sub
add
out
std
ds
mov
fiadd
jecxz
inc
or
fdiv
jecxz
test
jno
ret
out
mov
std
cmp
shl
leave
sti
out
add
ins
pop
inc
aas
bound
enter
popf
adc
inc
mov
inc
arpl
lods
jb
or
outs
inc
and
gs
mov
or
daa
inc
pop
std
cmp
and
retw
pop
jecxz
jns
mov
scas
pop
jne
xor
mov
sahf
cmp
mov
inc
inc
mov
and
lock
daa
push
repnz
ds
cmp
inc
or
std
mov
outs
test
inc
pop
push
add
(bad)
sub
retf
ds
lods
cmp
add
test
dec
dec
mov
xor
mov
ds
ret
sub
push
adc
inc
mov
mov
inc
daa
adc
cmps
fcmovne
out
push
and
sub
mov
sahf
mov
std
js
in
jnp
inc
sub
int3
mov
aad
aas
mov
cmp
loope
leave
daa
jge
(bad)
ds
dec
retf
in
mov
xor
out
popa
push
mov
inc
call
xchg
mov
xor
jns
adc
jecxz
add
lods
lds
call
enter
xchg
ins
inc
inc
jns
mov
sahf
clc
std
ds
inc
arpl
int3
lea
jecxz
retf
rol
ds
jecxz
in
loop
nop
aas
xor
push
mov
mov
dec
cli
aas
sahf
dec
pop
aas
mov
mov
jecxz
ds
push
retf
inc
dec
or
xor
sub
xchg
jmp
sti
cld
mov
retf
xor
enter
popf
ret
inc
lahf
ret
(bad)
ds
dec
inc
icebp
scas
jae
inc
ret
mov
sub
jecxz
xchg
and
dec
enter
sub
loop
ret
xchg
lahf
xchg
(bad)
ds
pop
dec
icebp
fidivr
inc
sub
jp
(bad)
call
rcr
std
ds
add
ja
add
outs
sbb
cmp
inc
dec
cmp
test
scas
test
mov
mov
bound
retf
push
ret
jp
and
push
inc
jns
test
out
jns
aas
popa
or
sti
out
mov
movs
mov
outs
inc
inc
ja
add
sahf
xor
ds
inc
inc
inc
lods
or
jle
mov
inc
cmp
dec
mov
je
sahf
cmp
aas
mov
inc
dec
cmp
xchg
adc
in
std
xchg
inc
pop
and
dec
std
ds
mov
sahf
mov
inc
inc
ja
add
sub
loop
ret
pop
popf
js
std
xchg
inc
pop
and
outs
idiv
in
jns
inc
sub
test
xor
loop
jecxz
retf
mov
ret
add
out
retf
mov
mov
pop
sbb
add
mov
inc
lock
rol
add
push
int3
hlt
pop
mov
add
adc
cmp
xor
or
cmps
outs
inc
push
lods
mov
inc
sub
std
mov
outs
int
pop
popa
(bad)
ds
sub
retf
fiadd
jecxz
inc
sahf
push
jns
mov
and
test
arpl
outs
int3
daa
aam
std
ds
sub
retf
fiadd
jecxz
inc
sahf
and
mov
pop
add
lods
lds
mov
inc
aas
aas
sub
enter
xchg
ins
inc
inc
jns
mov
sahf
clc
std
ds
inc
arpl
int3
xor
retf
rol
push
mov
jecxz
mov
loop
nop
aas
xor
push
mov
mov
dec
cli
aas
sahf
hlt
add
mov
mov
jecxz
ds
push
retf
inc
dec
or
xor
sub
xchg
jmp
sti
cld
mov
retf
fld
jecxz
enter
popf
ret
inc
lahf
mov
dec
inc
icebp
scas
jae
inc
add
aas
mov
push
inc
sahf
jnp
ds
ret
bound
enter
out
mov
std
leave
adc
cmp
xor
push
idiv
mov
jecxz
mov
or
mov
addr16
mov
test
push
inc
inc
and
xchg
cwde
lods
fld
clc
mov
std
ds
movs
jl
inc
movs
jmp
mov
mov
sub
mov
inc
sub
inc
jbe
out
mov
outs
inc
inc
xchg
dec
ds
push
daa
mov
std
ds
sub
retf
(bad)
ds
jge
test
add
out
call
call
std
leave
sti
out
add
ins
pop
inc
aas
bound
enter
popf
adc
inc
mov
push
retf
or
cmps
outs
inc
push
lods
mov
inc
sub
std
mov
outs
int
aas
pop
(bad)
ds
sub
retf
fimul
popa
pop
(bad)
mov
cmp
dec
std
pop
out
mov
std
retf
mov
xchg
dec
ds
in
cs
popf
adc
add
or
out
xchg
jmp
ins
jl
aas
bound
enter
mov
mov
xchg
inc
sub
inc
inc
xor
inc
dec
aas
and
enter
rol
aas
inc
or
push
retf
adc
xor
pusha
inc
mov
add
pop
in
std
mov
outs
les
mov
out
cmp
xor
inc
mov
xor
inc
inc
cmc
xchg
in
dec
mov
(bad)
mov
cmp
inc
mov
push
les
ror
pop
(bad)
enter
xchg
ins
inc
dec
aas
sub
retf
add
mov
mov
aas
sub
add
int3
cmp
sbb
(bad)
mov
cmp
or
inc
stos
pop
add
outs
inc
inc
cmp
inc
mov
and
clc
and
jecxz
shl
std
pushf
jns
stos
mov
jecxz
clc
out
std
nop
aas
xor
push
mov
mov
mov
mov
jecxz
ds
push
retf
jl
mov
sub
push
mov
push
(bad)
sahf
add
ds
dec
push
cmp
les
inc
iret
stos
pusha
or
enter
dec
cmp
or
(bad)
outs
push
ds
out
xchg
mov
pop
inc
mov
ror
pop
add
pop
hlt
xchg
sub
jb
sahf
sub
add
or
jb
mov
movs
out
lods
push
push
retf
or
(bad)
outs
inc
inc
cmp
mov
jbe
pop
js
call
call
add
call
and
xor
or
outs
lds
sahf
call
adc
cmp
add
test
out
call
cmp
mov
push
outs
out
xchg
sahf
imul
mov
mov
inc
sub
addr16
inc
mov
mov
retf
sbb
mov
mov
mov
jbe
inc
xor
retf
mov
ins
push
retf
mov
addr16
inc
mov
mov
sub
mov
inc
stos
mov
inc
inc
call
cmp
(bad)
ss
push
add
xchg
sub
push
out
mov
std
test
jmp
call
add
mov
jae
inc
xor
shl
inc
adc
xor
jbe
cmp
sub
mov
jecxz
addr16
sub
xchg
inc
cmp
out
lods
xlat
inc
jp
push
adc
mul
mov
outs
les
movs
add
push
lock
and
sbb
test
or
retf
pop
enter
dec
mov
mov
inc
aas
sub
enter
xchg
outs
dec
arpl
sub
add
mov
xchg
or
out
daa
popa
in
lods
sub
inc
mov
add
aas
mov
mov
or
mov
inc
sub
les
or
mov
fs
mov
cmp
sar
mov
ja
add
mov
push
inc
sahf
out
sub
mov
ret
ins
pop
inc
adc
rol
push
retf
jmp
and
jno
or
fnstcw
in
jae
or
and
int3
add
jecxz
leave
cmc
into
out
xor
push
mov
inc
std
mov
retf
loope
mov
push
enter
retf
xchg
sahf
xchg
cli
ds
ins
push
adc
shl
xor
retf
sub
mov
xchg
sub
rcr
(bad)
es
jecxz
ds
xor
mov
mov
mov
outs
out
xchg
cmp
aas
sub
adc
sub
dec
daa
(bad)
(bad)
ds
xor
ret
mov
ja
add
(bad)
sar
imul
dec
aas
hlt
xchg
call
retf
addr16
push
xor
xchg
out
xchg
push
int3
sbb
mov
and
adc
push
xchg
inc
pusha
and
mov
adc
xlat
repnz
xchg
mov
jmp
mov
outs
inc
arpl
ins
push
retf
cmp
add
mov
outs
inc
inc
or
loop
cwde
cmp
sub
push
mov
aas
or
int3
sti
jmp
ds
in
mov
std
les
or
add
mov
dec
inc
mov
pop
add
jno
inc
push
jecxz
inc
sahf
pop
std
ds
mov
dec
inc
and
test
adc
jmp
xor
mov
outs
mul
or
std
ds
aam
xor
mov
outs
int
sub
jecxz
retf
sar
mov
fisttp
inc
sahf
pop
add
mov
inc
inc
inc
xor
retf
xchg
sub
retf
xchg
jno
dec
adc
jecxz
rcr
cmps
mov
mov
das
add
or
mov
ins
std
cld
ds
aam
les
inc
aas
cmp
les
jae
inc
stos
pop
popf
jns
jb
mov
jecxz
add
out
retf
push
retf
jbe
mov
or
mov
jecxz
outs
or
(bad)
sub
test
(bad)
jecxz
inc
mov
mov
mov
les
mov
repz
ds
ds
jmp
in
mov
std
add
in
test
jecxz
add
pushf
mov
jecxz
inc
mov
std
daa
enter
and
iret
mov
std
test
cld
cmp
push
sub
es
cld
ds
mov
push
sub
cld
ds
jmp
adc
mov
addr16
hlt
(bad)
ds
data16
jecxz
in
mov
std
add
dec
data16
jecxz
add
pushf
mov
jecxz
inc
mov
std
daa
enter
and
dec
mov
add
mov
data16
sub
es
cld
ds
mov
push
sub
cld
or
mov
cmp
jae
push
xor
xchg
cmp
adc
pushf
mov
jmp
in
mov
std
enter
jl
fs
ds
cmc
mov
jmp
call
ds
cmc
mov
jmp
call
ds
cmc
mov
jmp
call
(bad)
sahf
push
cld
ds
xchg
mov
std
mov
aas
push
add
jbe
xchg
inc
pop
add
data16
lock
clc
outs
add
cmps
cld
cmp
mov
std
mov
xor
iret
push
sub
(bad)
aas
mov
jb
pop
popf
data16
jecxz
sbb
jecxz
ds
jae
outs
and
mov
loope
ds
cmps
push
retf
add
(bad)
xlat
cmp
inc
aas
sub
cmp
loop
inc
aas
cmp
sub
retf
mov
mov
lahf
(bad)
mov
inc
rcl
sbb
(bad)
jecxz
push
or
adc
sub
ret
jbe
add
ds
pop
add
pop
idiv
sub
xor
jge
ds
(bad)
jmp
in
mov
std
add
mov
inc
sbb
pop
sahf
popa
std
ds
je
inc
mov
call
cld
fstp
(bad)
or
xor
cmp
push
retf
mov
cmp
xor
bound
ds
push
retf
jo
mov
pop
popf
js
std
xchg
inc
aad
inc
inc
sub
jp
aaa
add
jbe
dec
ds
(bad)
test
outs
or
lahf
lock
mov
std
popf
jns
mov
inc
sub
xchg
inc
inc
or
cmp
retf
add
aam
mov
sti
sti
ds
add
(bad)
mov
out
fnclex
std
ret
pop
sahf
adc
dec
mov
dec
inc
(bad)
jecxz
retf
push
xchg
inc
aad
les
outs
rol
hlt
arpl
jbe
or
cmps
dec
daa
cmps
cmp
mov
or
mov
test
pop
adc
mov
std
xchg
or
xor
ds
cmp
pop
call
jp
ret
xchg
sahf
in
cld
ds
std
mov
idiv
jne
inc
and
mov
add
jp
xchg
ficomp
(bad)
popf
adc
push
aas
or
mov
inc
repnz
stos
jb
cmp
aas
xor
add
pop
or
mov
pusha
or
scas
int3
lahf
ds
jmp
dec
mov
std
retf
add
jbe
dec
ds
adc
mov
les
or
mov
cmp
jae
jmp
jecxz
or
(bad)
xchg
push
outs
int3
daa
sbb
std
ds
stos
pop
popf
js
std
xchg
inc
inc
and
cmp
dec
or
stc
data16
push
sub
jecxz
or
mov
inc
xchg
or
xor
(bad)
std
cmp
std
daa
dec
out
ds
stos
pop
popf
adc
pop
arpl
cmp
xor
push
retf
add
movs
jb
push
int3
lods
cmp
or
ds
retf
jo
mov
mov
jecxz
arpl
out
(bad)
sahf
inc
and
mov
ret
inc
pop
add
jecxz
loop
sub
es
or
ds
xor
inc
sbb
(bad)
xchg
aas
sub
retf
mov
outs
pop
popf
push
ins
jae
mov
not
add
out
mov
std
retf
mov
jecxz
enter
movs
mov
mov
jecxz
mov
dec
xchg
std
ds
or
outs
mov
test
jecxz
nop
push
xor
xchg
cmp
dec
mov
call
push
mov
dec
mov
and
mov
loop
dec
inc
in
dec
nop
mov
test
aam
push
mov
std
retf
mov
jecxz
enter
movs
mov
mov
jecxz
mov
dec
xchg
std
ds
or
outs
fild
mov
enter
dec
nop
push
xor
xchg
cmp
dec
mov
call
push
mov
dec
mov
and
mov
outs
pop
nop
mov
test
aam
mov
xor
loopne
jecxz
retf
mov
jecxz
enter
movs
mov
mov
jecxz
mov
dec
xchg
std
ds
or
or
push
retf
push
les
outs
add
cs
retf
push
fdivr
inc
sub
int3
retf
(bad)
mov
push
xchg
mov
sti
dec
daa
xchg
push
std
ds
jmp
inc
jmp
mov
adc
sub
adc
test
dec
ds
pusha
mov
std
xchg
sahf
ret
mov
pop
call
jp
ret
les
iret
add
xchg
cld
jecxz
pop
out
mov
std
retf
pop
add
out
pop
push
ds
les
cli
pop
add
push
jecxz
aaa
sahf
aaa
std
ds
les
or
out
retf
or
mov
jo
xor
bound
xchg
inc
pop
idiv
popa
add
test
clc
ds
inc
inc
push
jno
dec
push
jecxz
daa
(bad)
add
add
xchg
mov
pop
retf
pop
add
int3
ins
cmp
jmp
aaa
mov
push
ds
loop
or
dec
les
inc
repnz
mov
mov
pusha
and
aad
daa
xor
std
ds
jmp
ficomp
dec
mov
jecxz
aas
mov
and
out
ds
add
or
out
retf
or
mov
clc
add
lds
dec
daa
ror
punpckhwd
pop
mov
add
inc
rol
xor
out
aas
and
outs
jb
ret
jp
pop
add
iret
sbb
sar
push
arpl
aaa
std
push
inc
ss
aas
icebp
cmps
jl
ds
cs
shl
inc
arpl
pop
and
pop
and
ins
add
and
std
mov
sti
dec
(bad)
mov
lea
adc
or
inc
movs
lds
in
ds
mov
inc
xor
inc
aas
sub
add
jecxz
dec
cmp
addr16
mov
add
or
shl
dec
or
push
int3
dec
loopne
ds
inc
jecxz
ds
lock
clc
cld
mov
jno
cmp
in
dec
daa
sahf
pop
(bad)
mov
jecxz
inc
jge
or
in
cmp
mov
out
aas
mov
rol
mov
cmp
aas
sahf
out
std
ds
push
enter
retf
rcl
sub
cmps
inc
fadd
outs
loopne
mov
js
ds
dec
mov
inc
dec
adc
int3
iret
ds
mov
inc
sbb
mov
retf
inc
ds
mov
jmp
popf
jns
mov
xchg
sub
cmp
jge
and
cld
jecxz
xchg
inc
aad
jb
jecxz
xor
pop
push
inc
sub
push
daa
add
std
ds
popf
js
std
leave
ja
or
(bad)
out
mov
mov
xchg
inc
aas
aas
sub
add
sub
es
push
std
ds
cmp
push
mov
data16
mov
inc
cmp
out
cmp
lea
aas
mov
arpl
mov
dec
dec
sahf
idiv
mov
dec
xor
xchg
std
ds
push
retf
push
xchg
inc
mov
hlt
ds
mov
ds
lods
out
mov
std
retf
add
cmp
aas
and
addr16
inc
sub
test
push
jecxz
inc
mov
dec
ds
test
sub
cmp
in
mov
in
push
mov
add
or
dec
mov
inc
cmp
sub
retf
xchg
adc
jg
(bad)
in
or
mov
or
dec
push
aas
cmp
add
inc
inc
or
popf
jecxz
ds
leave
daa
sbb
std
ds
push
int3
cmp
cld
ds
out
mov
aam
ds
leave
(bad)
sahf
fcomi
ds
lds
fiadd
movs
jb
(bad)
push
or
mov
mov
ds
jmp
ds
lds
adc
ret
jno
cmp
push
mov
data16
out
xor
pop
or
and
call
inc
jmp
in
push
lods
mov
sub
xlat
or
mov
hlt
push
mov
std
ds
cmp
mov
fs
(bad)
jecxz
xor
popf
out
xchg
dec
(bad)
cmps
ss
ds
cmp
xchg
or
ds
cld
push
jp
inc
aas
cmp
std
mov
outs
jae
cmp
jb
mov
mov
enter
dec
add
std
cmp
(bad)
ins
inc
inc
sahf
pop
idiv
mov
mov
inc
aas
inc
push
retf
pop
call
jmp
push
mov
dec
and
dec
ds
cld
mov
loop
inc
mov
mov
cld
jecxz
jmp
icebp
dec
ds
lahf
push
test
in
leave
sti
out
pop
add
cmp
xor
mov
cmp
jb
inc
sub
test
sub
cld
mov
loop
repz
inc
jbe
or
push
jb
inc
aas
push
int3
dec
mov
push
or
sub
addr16
in
add
std
popf
adc
rol
std
mov
out
addr16
mov
and
push
add
retf
repz
test
jecxz
dec
and
cld
push
jb
inc
aas
push
int3
push
mov
cmps
push
aas
or
jmp
daa
call
inc
aas
inc
aam
cmp
mov
adc
or
dec
mov
les
cmp
std
mov
xor
push
ret
aas
cmp
sti
or
dec
mov
push
retf
xor
inc
sub
ret
jb
push
jecxz
inc
or
dec
scas
fcmovnu
pop
mov
or
ret
xor
adc
in
push
jb
inc
aas
push
int3
jle
mov
rcl
data16
sub
dec
ds
out
test
jno
dec
sahf
cmc
repz
shr
dec
(bad)
cmp
daa
call
inc
aas
cmp
sti
or
dec
mov
push
aas
and
cld
mov
out
addr16
mov
and
push
add
retf
out
test
xor
push
jb
inc
aas
push
int3
push
mov
cmp
inc
mov
and
xor
ds
cld
push
mov
inc
aas
cmp
push
jb
inc
aas
push
int3
loop
mov
mov
retf
push
inc
mov
es
add
mov
jecxz
addr16
mov
push
retf
dec
addr16
cmps
xor
js
std
not
inc
aas
sahf
aas
sbb
mov
outs
jnp
inc
sub
(bad)
je
(bad)
ds
push
ds
cld
push
shl
inc
aas
cmp
dec
or
sub
jno
int
aas
mov
sahf
(bad)
mov
jmp
test
ins
jae
sahf
pop
(bad)
ds
mov
retf
dec
xchg
or
std
mov
loop
fwait
or
inc
jbe
inc
xor
mov
cmp
sub
inc
sub
mov
pop
loop
ds
jecxz
dec
mov
dec
xchg
cld
jecxz
aaa
mov
adc
xchg
cld
jecxz
les
jecxz
sub
jecxz
inc
adc
dec
cmp
cli
repnz
(bad)
retf
pop
popf
sbb
aas
mov
std
pop
js
std
leave
add
push
xchg
or
add
jecxz
xchg
sahf
mov
fxch
scas
cmp
sahf
pop
sbb
dec
or
jb
retf
push
into
xor
mov
lock
jb
fstp
mov
icebp
xchg
sub
jge
in
or
mov
mov
mov
ds
in
aaa
or
idiv
adc
mov
push
int3
xor
mov
push
sub
xor
push
inc
in
aaa
or
out
jge
adc
mov
out
sti
jno
ds
leave
add
adc
mov
pop
popf
adc
mov
lock
jb
fstp
xchg
imul
mov
std
movd
sub
rol
inc
mov
push
xchg
inc
popa
or
mov
cmc
mov
jo
cmp
add
jecxz
mov
cmp
mov
retf
loop
mov
les
or
sub
push
ds
in
dec
in
sub
push
std
push
fidiv
inc
aas
test
jb
inc
pop
or
std
mov
mov
std
mov
loop
arpl
jecxz
cmps
(bad)
xchg
inc
aas
sahf
lock
aas
mov
cmp
pop
or
(bad)
outs
(bad)
ds
mov
add
inc
jmp
fwait
cs
jecxz
xchg
or
outs
out
xchg
sahf
cmp
mov
mov
daa
adc
movs
jb
cmp
sub
xor
mov
jecxz
ds
pop
retf
xor
push
add
scas
out
mov
aam
jbe
stc
mov
cld
jecxz
inc
sub
(bad)
cmp
mov
cmp
adc
sbb
retf
adc
mov
mov
push
(bad)
aaa
inc
aas
cmp
inc
push
cmc
(bad)
ds
je
mov
fst
iret
push
xchg
inc
mov
push
in
std
popf
adc
add
or
xchg
or
pop
inc
or
popa
or
cmps
jecxz
dec
or
jecxz
ret
jbe
push
les
jecxz
xchg
lods
stos
jle
add
in
mov
loop
pop
mov
rcl
std
cmp
retf
(bad)
ds
push
xchg
mov
or
jbe
sbb
cmps
and
cmp
retf
(bad)
ds
push
xchg
mov
or
jbe
add
jmp
inc
ror
mov
sahf
clc
std
ds
inc
arpl
int3
(bad)
mov
push
retf
rol
mov
cld
jecxz
xor
loop
nop
or
out
enter
inc
rcr
cli
aas
cmp
aas
sub
in
retf
rol
std
retf
mov
mov
jecxz
ds
shl
sub
fwait
sbb
mov
jmp
sbb
xchg
out
in
cmp
jmp
test
retf
dec
(bad)
mov
mov
out
repz
ds
xchg
inc
out
adc
out
out
std
cmps
mov
add
sahf
out
sub
mov
outs
add
add
mov
mov
std
jns
pop
add
inc
mov
cld
mov
outs
add
retf
dec
dec
aas
sub
js
in
jno
push
xor
xchg
sub
add
inc
sub
(bad)
aas
inc
fidivr
sub
in
add
std
sar
or
cmps
or
jp
pop
push
test
or
inc
jbe
add
mov
pop
loop
mul
cld
punpckhwd
xor
(bad)
cmp
mov
std
cwde
cmp
hlt
cld
jecxz
mov
int3
sbb
jecxz
les
jae
sbb
jnp
mov
(bad)
std
mov
jo
call
loop
pop
inc
xor
daa
jb
(bad)
ds
xor
ds
xor
test
in
ja
shl
mov
jmp
ins
inc
inc
cmp
sub
cmp
and
int3
jg
mov
mov
push
mov
pop
or
sti
jecxz
ds
cld
mov
loop
ja
sub
retf
add
xchg
mov
ds
sbb
add
std
retf
add
inc
pop
fcmove
xor
ds
fidiv
inc
jmp
mov
xor
js
int3
jb
inc
jmp
mov
std
es
movs
jae
inc
jmp
mov
ss
sahf
pop
adc
ret
daa
mov
xor
sbb
cld
mov
jecxz
xchg
sub
cmp
sahf
ss
aas
jmp
repz
inc
repnz
adc
xchg
std
adc
inc
arpl
cmp
mov
aad
out
jecxz
retf
xor
push
push
mov
retf
xor
jecxz
sbb
add
ins
inc
pop
and
call
inc
stos
pop
popf
js
std
xchg
or
push
add
jbe
pop
test
test
sub
jbe
add
idiv
mov
cmp
ds
mul
icebp
icebp
std
ds
stos
pop
popf
jns
mov
sahf
pop
or
mov
int3
daa
(bad)
in
std
ds
push
ds
mov
test
dec
(bad)
cmp
data16
dec
push
aas
sahf
nop
cmp
outs
ds
adc
mov
leave
jle
(bad)
shl
sub
mov
ds
jmp
ins
arpl
aas
pop
loop
cld
sub
daa
sahf
pop
cmp
data16
mov
push
dec
sub
out
cmp
std
leave
push
lock
mov
ds
mov
leave
xchg
cld
jecxz
xchg
mov
int
cld
jecxz
aaa
cmp
jb
or
sub
(bad)
sti
retf
cmp
in
ds
mov
push
mov
std
enter
pop
ret
jecxz
jno
sbb
fidiv
mov
or
jmp
cmc
push
ds
std
push
data16
sub
inc
mov
std
xchg
aas
popa
cli
daa
add
std
ds
jmp
xor
mov
outs
int3
daa
adc
stos
jb
lods
sub
dec
sub
addr16
inc
mov
daa
ja
(bad)
lods
test
mov
dec
add
or
(bad)
ds
popa
sbb
mov
push
xchg
or
int3
mov
mov
call
daa
sub
std
ds
sub
ret
std
imul
outs
jae
jmp
jecxz
mov
mov
jae
mov
lods
xchg
cld
jecxz
mov
retf
das
push
test
in
cld
mov
jecxz
add
sub
leave
mov
cmp
or
mov
inc
imul
sahf
adc
xchg
std
adc
hlt
test
sti
jno
inc
jmp
sub
jb
mov
stc
cmp
jecxz
xchg
mov
and
aad
jge
rcl
mov
mov
mov
mov
mov
pop
add
aad
retf
mov
mov
std
es
data16
ds
ins
ss
mov
or
pop
mov
loop
push
mov
mov
dec
inc
sbb
push
pop
mov
jecxz
jg
jecxz
pop
cmp
or
mov
mov
daa
inc
jmp
sub
hlt
test
in
pop
and
addr16
mov
sbb
retf
and
mov
out
mov
pop
pop
retf
cmp
jecxz
ds
stos
pop
popf
js
std
xchg
inc
ror
or
out
cmp
std
jno
sbb
xor
mov
loop
jp
mov
jno
inc
hlt
mov
outs
(bad)
ds
cmp
jmp
adc
fbld
ds
and
int3
add
dec
xchg
inc
hlt
push
xchg
inc
lods
std
xchg
ret
or
mov
inc
sub
jbe
push
(bad)
sahf
and
sub
mov
mov
mov
leave
test
ret
arpl
icebp
addr16
mov
jecxz
jecxz
jb
inc
shl
mov
sub
jecxz
leave
cmps
imul
ds
cmc
pop
shl
add
mov
call
cmps
dec
jmp
xor
movs
jb
and
mov
mov
shr
jecxz
xchg
or
and
leave
sub
push
sbb
sahf
pop
jg
mov
push
dec
and
cld
mov
ss
push
xor
aas
push
aaa
std
push
xchg
inc
aas
adc
mov
xor
push
mov
inc
aas
inc
aam
inc
cmp
push
mov
dec
jg
mov
pop
or
add
arpl
cld
cmc
arpl
sub
call
dec
sbb
je
sbb
mov
movs
cmp
mov
dec
call
adc
or
sub
or
sub
or
mov
(bad)
ds
std
xchg
inc
pop
and
fidiv
inc
and
es
data16
inc
mov
hlt
mov
retf
fnstsw
mov
outs
push
test
mov
xchg
aas
mov
addr16
push
iret
add
inc
rol
aas
jnp
movs
jb
mov
into
add
cmps
push
aas
lahf
in
ds
jmp
cmp
mov
mov
jecxz
daa
ret
jecxz
ds
mov
jo
(bad)
es
in
ds
or
mov
fiadd
retf
jo
(bad)
aas
sub
jge
inc
sahf
inc
aas
mov
mov
jmp
out
shl
add
int3
or
mov
addr16
outs
xor
mov
jecxz
cmps
add
aas
sahf
jmp
mov
in
push
ss
mov
jmp
push
push
sahf
inc
aas
lahf
sbb
aas
mov
out
mov
std
daa
ret
jecxz
ds
mov
jo
(bad)
es
in
ds
xchg
mov
fiadd
retf
jo
inc
cmc
jge
inc
sahf
inc
aas
mov
jecxz
aaa
shl
add
int3
or
mov
addr16
mov
fs
mov
shl
outs
add
mov
shl
jmp
push
ss
mov
jmp
add
aas
lahf
sahf
or
mov
push
retf
aad
mov
addr16
inc
sub
test
mov
adc
ret
stos
pop
add
out
daa
inc
out
std
lods
sub
inc
mov
add
ds
mov
or
mov
sahf
jl
aas
mov
jl
and
aas
or
sub
es
idiv
ds
sub
push
cmp
les
or
ds
cld
mov
loop
test
hlt
hlt
adc
stos
or
push
mov
mov
loop
inc
mov
mov
test
push
(bad)
jp
pop
cmovnp
xor
pop
xor
cld
push
xchg
cmp
in
pushf
js
std
cmp
sub
push
sub
push
test
retf
ds
ror
jb
(bad)
loop
arpl
loop
arpl
dec
jmp
jecxz
ds
std
xchg
inc
pop
and
pop
and
pop
sbb
retf
rcl
mov
int3
daa
inc
paddd
inc
xor
dec
adc
inc
ret
retf
jmp
pop
gs
mov
mov
(bad)
ds
jae
inc
sub
(bad)
mov
sbb
retf
rcl
mov
inc
dec
inc
in
cmp
out
test
loop
pop
mov
dec
xchg
cld
jecxz
daa
and
cmp
cld
loop
std
ret
jbe
adc
ds
nop
(bad)
ds
mov
leave
test
stos
pusha
mov
pop
or
std
xchg
inc
ror
or
mov
loopne
aas
mov
(bad)
ds
jae
inc
mov
(bad)
into
jecxz
leave
xor
mov
inc
mov
or
std
jns
pop
sub
cld
inc
mov
add
cmp
ins
inc
cmp
test
out
ds
sbb
retf
mov
pop
call
jmp
dec
jg
(bad)
in
ds
adc
xor
add
mov
jno
aaa
popa
push
inc
mov
outs
dec
inc
sahf
(bad)
adc
mov
loop
pop
mov
dec
xchg
cld
jecxz
daa
mov
std
ds
aam
xor
pop
aaa
inc
aas
push
int3
in
inc
mov
cmp
sub
mov
mov
mov
pop
mov
jmp
inc
push
iret
add
inc
pop
add
jecxz
daa
cld
sub
es
cld
ds
xor
jo
inc
sbb
leavew
scas
sub
es
data16
ds
mov
jnp
inc
daa
xor
sbb
dec
cmps
ins
pop
sub
outs
jae
inc
popa
push
enter
push
cmp
add
stc
pop
mov
daa
ds
outs
dec
jae
lods
jb
inc
in
aas
mov
pop
ret
std
mov
mov
or
sti
out
dec
int3
sti
mov
sti
ds
jae
inc
jmp
push
mov
adc
mov
jle
(bad)
in
ds
sub
mov
loop
dec
inc
sub
(bad)
or
jecxz
jae
xor
mov
mov
sub
add
xor
pop
mov
push
or
test
in
std
leave
add
in
mov
inc
aas
jns
pop
sub
jmp
test
jno
jmp
inc
pop
mov
mov
pop
or
std
xchg
push
outs
test
in
aaa
in
leave
cmps
jecxz
(bad)
or
inc
cld
daa
std
push
adc
inc
aas
lds
or
jbe
dec
xchg
sub
cld
pop
pop
add
out
cmps
inc
fadd
outs
loopne
mov
jecxz
scas
imul
retf
outs
jnp
push
ss
test
ds
shl
sub
add
ds
out
xor
std
leave
cmps
addr16
mov
inc
ret
std
mov
ss
xchg
sub
es
(bad)
std
and
pop
sahf
mov
ds
mov
aas
xor
ret
inc
jg
push
test
into
cdq
inc
aas
sahf
sbb
aas
mov
add
addr16
cmp
retf
data16
fmul
enter
ds
rol
push
test
mov
mov
mov
and
mov
sahf
mul
std
leave
scas
cmp
aas
mov
lds
and
in
mov
std
retf
mov
sub
add
ja
in
xchg
jecxz
add
or
xchg
inc
aad
sbb
call
push
test
mov
mov
or
pop
inc
xor
daa
xor
std
ds
retf
out
mov
addr16
push
inc
pop
call
push
retf
cmp
(bad)
addr16
sahf
loop
ds
mov
pop
inc
sub
daa
dec
ret
std
cmp
aas
cmp
aas
inc
stos
pop
popf
jns
mov
aaa
popa
or
sub
addr16
push
iret
xor
sub
push
daa
push
jecxz
cmp
mov
loop
push
mov
push
ds
push
(bad)
sahf
cmp
ds
push
ds
cld
mov
loop
dec
or
adc
sub
pushf
adc
add
(bad)
es
ds
ds
or
mov
jecxz
movs
cmps
cmp
retf
aas
push
test
data16
mov
inc
daa
inc
sub
test
adc
sub
sahf
dec
cmp
std
ds
pusha
mov
adc
push
int3
movs
cmp
inc
sub
pop
into
(bad)
or
push
cmp
loop
dec
push
hlt
(bad)
ds
std
mov
jecxz
xchg
or
(bad)
cmp
mov
cmp
xchg
mov
std
retf
mov
icebp
std
ds
pop
or
std
cmp
or
sub
xchg
or
sub
xchg
mov
icebp
nop
cld
jecxz
ds
fisttp
mov
cmp
ds
dec
push
ja
push
nop
lds
out
mov
std
jb
imul
daa
(bad)
loope
ds
loope
ds
jae
push
int3
pop
cmp
ins
std
mov
loop
dec
mov
or
retf
cmp
mov
inc
sub
outs
inc
inc
aas
sub
test
inc
dec
aas
sub
test
sub
jecxz
dec
inc
xor
mov
jecxz
stos
inc
xor
enter
cmp
imul
or
adc
sahf
inc
aas
sahf
add
jnp
inc
aam
test
fs
je
jecxz
mov
fs
jne
jecxz
mov
fs
ja
jecxz
mov
fs
jbe
jecxz
mov
fs
jae
jecxz
mov
loop
inc
push
jno
or
mov
adc
sub
in
shl
std
ret
jbe
add
cld
out
dec
mov
adc
sub
push
ds
in
mov
std
sahf
adc
ror
mov
cmp
push
cmps
inc
fadd
outs
loopne
mov
jecxz
mov
mov
adc
mov
loop
inc
mov
sub
retf
dec
push
test
jecxz
mov
ss
retf
push
retf
push
mov
jecxz
cmc
div
mov
fidiv
lods
sub
jg
push
cmp
push
cmp
aas
mov
dec
test
push
cmp
in
aas
mov
add
or
movs
cmp
out
int3
sti
shr
push
dec
mov
mov
sub
cmps
jbe
inc
aas
push
jecxz
cmp
sub
ret
jbe
or
repz
inc
mov
loop
jecxz
retf
int3
ds
xor
inc
inc
mov
iret
ss
cmp
and
jmp
std
(bad)
sti
out
jb
cmp
aas
sub
mov
inc
aas
cmp
jb
cmp
aas
sub
push
scas
mov
int3
dec
cmp
sub
mov
retf
add
mov
push
inc
mov
mov
cld
jecxz
mov
outs
out
push
in
push
ss
push
test
pop
es
cmp
jecxz
sti
or
(bad)
sub
retf
sar
mov
mov
or
cli
xchg
mov
mov
add
ret
leave
sub
and
retf
fwait
push
test
jmp
mov
pop
xchg
cld
jecxz
inc
outs
sub
xchg
or
aad
jbe
ss
push
xchg
mov
popa
xchg
cld
jecxz
xchg
mov
cmp
stc
in
nop
cld
jecxz
test
fwait
addr16
jb
outs
out
add
adc
or
dec
sub
std
mov
ss
ds
dec
push
test
outs
div
mov
pop
xchg
cld
jecxz
movs
loop
mov
adc
lock
xchg
or
jecxz
cmp
(bad)
rcr
ds
aam
mov
retf
ret
(bad)
mov
loop
sbb
sub
mov
in
and
sub
test
loop
scas
or
inc
jbe
inc
imul
in
js
std
enter
popf
js
std
xchg
push
outs
test
in
xor
std
leave
cmps
int3
inc
mov
jecxz
mov
jecxz
push
inc
sub
les
or
cld
jecxz
movs
loop
cmp
dec
adc
jmp
in
popf
jns
mov
cmp
cs
push
enter
test
ins
inc
aaa
inc
sub
enter
test
ins
inc
das
inc
sub
enter
test
ins
inc
daa
inc
sub
enter
test
ins
inc
pop
inc
sub
enter
test
outs
out
enter
or
imul
mov
sub
enter
inc
pop
outs
int3
ds
inc
cmp
repnz
mov
iret
pop
in
ds
cmp
aaa
mov
std
sub
pop
mov
fidivr
sub
std
mov
jecxz
daa
mov
jmp
jecxz
aaa
mov
cli
ds
push
push
test
loop
cmp
or
mov
xor
cmp
or
or
(bad)
xchg
inc
pop
and
bound
aas
sub
addr16
sahf
add
mov
inc
rcr
and
push
popf
js
std
xchg
inc
ror
dec
iret
add
cs
mov
outs
inc
push
mov
sbb
push
call
jbe
inc
and
push
pinsrw
icebp
std
ds
push
(bad)
mov
or
sub
addr16
sahf
mov
pop
pushf
js
(bad)
not
sub
add
ds
push
retf
jae
jge
add
movs
mov
cmp
loop
stc
jmp
jno
aaa
loop
stc
jmp
jno
aaa
loop
stc
jmp
jno
aaa
loop
clc
jmp
jno
sahf
pop
(bad)
ds
dec
jae
lods
jb
inc
in
inc
mov
add
cld
sbb
scas
ficomp
ret
inc
add
std
retf
iret
data16
mov
jecxz
ds
rcl
push
jmp
cmp
aas
inc
mov
sub
mov
cmp
sub
sahf
adc
aas
mov
div
pop
stc
mov
sbb
pop
sub
out
sub
std
jbe
clc
jb
sahf
add
aas
mov
jbe
sub
in
and
std
ret
jbe
add
sahf
hlt
test
mov
pop
pop
out
pop
push
mov
ins
pop
pop
inc
xor
jp
pop
push
retf
dec
(bad)
aas
inc
cs
push
mov
outs
call
sbb
inc
adc
jb
sahf
xchg
mov
mov
mov
std
ret
mov
cmp
xor
dec
sub
sti
mov
aas
push
int3
mov
mov
mov
aas
sub
enter
test
jecxz
ds
dec
(bad)
cmps
mov
inc
(bad)
ds
cmp
and
cmp
outs
int3
retf
push
cmp
pop
shl
mov
mov
mov
cmp
lahf
push
test
fdivr
ds
jmp
mov
pop
popf
adc
dec
mov
add
push
cmp
fistp
std
ds
out
ret
(bad)
mov
push
mov
test
mov
std
mov
jo
inc
sahf
sub
dec
ja
fadd
mov
loop
jae
sub
sub
xor
ds
mov
out
lods
jecxz
retf
pop
popf
jns
mov
or
out
retf
cmp
push
mov
je
aas
mov
mov
cmp
ds
cld
mov
loop
pop
mov
xor
mov
push
ds
cld
mov
loop
pop
push
jecxz
xchg
or
(bad)
pushf
adc
add
out
daa
aas
push
(bad)
ds
xor
jecxz
jmp
jmp
sub
or
xchg
mov
xchg
sahf
push
outs
aas
mov
out
retf
(bad)
ds
mov
pop
cmp
aas
push
in
aas
mov
std
push
xchg
cmp
pusha
and
outs
mov
mov
std
mov
push
(bad)
cmp
mov
cmp
lock
jecxz
or
mov
pop
add
aaa
push
ds
mov
mov
push
sub
out
pop
in
leave
scas
imul
ds
xlat
push
test
call
sub
cmp
inc
(bad)
(bad)
push
(bad)
mov
std
xchg
aas
sub
enter
push
xchg
cmp
test
mov
fs
inc
mov
sub
popf
mov
inc
pop
pushf
js
std
xchg
inc
aad
(bad)
out
push
je
mov
or
xchg
out
dec
daa
dec
(bad)
std
ds
jecxz
pop
mov
or
jmp
ds
cmp
or
mov
jb
mov
jecxz
pushf
js
std
xchg
inc
pop
and
outs
test
mov
adc
xor
(bad)
cmp
retf
push
dec
mov
pop
adc
sub
std
cmp
pop
stos
jecxz
sahf
adc
push
aas
or
int3
sti
out
push
pop
or
cmps
jecxz
inc
sahf
xor
aas
mov
mov
dec
mov
xlat
repnz
pop
add
jmp
test
es
(bad)
jbe
add
xor
jecxz
retf
mov
inc
xor
les
adc
sti
out
dec
daa
mov
std
cmp
sub
fdivr
ds
ror
push
retf
or
retf
pop
push
test
imul
mov
loop
aaa
or
dec
mov
mov
arpl
xor
or
pop
pop
sub
cmp
mov
loop
mov
sub
jns
pop
adc
xor
pop
add
retf
jl
mov
call
arpl
cmp
mov
dec
mov
sti
jecxz
cmp
(bad)
outs
pop
(bad)
ds
xor
js
xor
mov
push
sub
aaa
inc
aas
push
int3
das
ins
mov
cld
mov
xor
popf
mov
std
les
daa
retf
mov
mov
push
sub
outs
je
and
push
ds
jecxz
ret
jbe
or
scas
lock
cmp
or
jecxz
sahf
adc
push
aas
outs
or
test
jecxz
sub
ss
retf
push
int3
sti
stos
xchg
loop
dec
mov
sub
jmp
aaa
push
ds
arpl
mov
cmp
call
out
and
sbb
push
sub
push
aas
mov
pop
cmp
loop
arpl
repnz
cld
jecxz
mov
cmp
adc
sti
in
pop
(bad)
or
mov
push
aas
mov
call
adc
xchg
std
adc
jmp
leave
gs
ds
arpl
mov
mov
cmp
es
or
out
and
std
leave
cmps
les
ins
aas
mov
pop
dec
inc
pop
push
les
hlt
jb
out
inc
adc
dec
(bad)
stc
cld
jecxz
ds
out
test
(bad)
cld
mov
loop
dec
or
jae
or
jecxz
ds
out
test
sub
(bad)
or
std
push
out
inc
aas
cmp
retf
xchg
jecxz
test
mov
retf
mov
ins
pop
das
aas
xor
enter
cld
mov
std
les
add
aas
sub
ds
stos
pop
popf
adc
mov
cmp
or
sti
jmp
retf
inc
aaa
inc
sub
cmps
inc
fadd
outs
loopne
mov
enter
outs
ds
xor
ins
call
ins
inc
cmp
addr16
and
mov
mov
pop
or
std
div
sub
push
add
mov
push
xchg
inc
aad
gs
std
leave
mul
xchg
jecxz
xchg
jecxz
inc
jmp
inc
cli
ds
xchg
(bad)
ds
mov
retf
mov
mov
std
xchg
inc
and
xchg
cld
jecxz
xchg
and
std
mov
loop
test
or
ds
out
mov
int3
daa
inc
mov
push
retf
push
lea
test
ss
test
sahf
push
pop
aas
mov
adc
jns
add
(bad)
mov
std
mov
outs
inc
das
mov
or
data16
ds
je
mov
ins
xchg
cld
jecxz
call
aaa
inc
cmps
in
es
(bad)
cmp
cli
ds
push
imul
outs
inc
inc
sahf
or
aas
mov
dec
xor
(bad)
enter
ds
rol
pop
cmc
cld
jecxz
xchg
inc
rcl
adc
mov
xor
ret
std
mov
push
add
mov
pop
hlt
jp
in
outs
xor
or
mov
sub
retf
pop
pushf
js
std
xchg
inc
ror
inc
aad
mov
outs
add
mov
push
retf
jae
mov
push
ds
cmp
mov
mov
dec
inc
jmp
sub
cld
iret
push
in
ds
sub
retf
pop
or
std
not
sub
jmp
cmp
cmp
aas
or
inc
or
jg
(bad)
in
ds
fnsave
mov
push
retf
jae
mov
jbe
jbe
adc
fisttp
outs
inc
dec
cmp
dec
cmp
(bad)
ds
adc
(bad)
mov
or
test
push
mov
out
out
ds
pop
(bad)
ds
jae
cmp
add
(bad)
cmp
and
mov
or
mov
stc
pop
sub
mov
lds
test
lds
inc
mov
mov
mov
(bad)
fisubr
inc
aas
sub
retf
std
inc
mov
and
fldcw
out
xor
std
leave
add
mov
pop
or
pop
test
inc
add
leave
sti
iret
jae
icebp
es
mov
outs
pop
inc
and
xchg
jecxz
sbb
addr16
aas
mov
jle
mov
bnd
mov
std
daa
inc
out
cmp
mov
iret
add
sti
iret
mov
jecxz
or
cli
addr16
and
dec
ds
std
les
inc
dec
sub
add
test
push
int3
cmp
aas
sub
mov
into
add
sti
xrelease
out
hlt
or
fsub
std
ds
addr16
cmp
ds
int3
(bad)
mov
cmp
sub
mov
outs
inc
sub
cmp
sub
mov
addr16
inc
mov
add
ds
inc
pop
call
std
pop
js
std
test
ins
inc
inc
sahf
loop
aas
mov
pop
dec
inc
xor
retf
cmp
pop
adc
retf
retf
dec
test
out
(bad)
fcmovbe
cmp
out
test
fisubr
(bad)
sti
jecxz
mov
retf
lea
jecxz
sub
pop
or
test
stos
mov
(bad)
jl
std
mov
retf
push
cs
out
mov
std
xchg
mov
or
call
std
ds
out
ds
dec
sbb
outs
inc
inc
cmp
aas
inc
xor
mov
outs
je
push
stos
inc
cmp
and
ds
mov
jae
movs
jb
mov
mov
test
enter
test
dec
int3
sti
mov
rol
sbb
inc
sbb
dec
add
xor
jecxz
mov
iret
sub
add
out
jmp
std
leave
cld
out
mov
ins
inc
pop
inc
sub
pop
lds
loop
ret
inc
add
std
enter
mov
jecxz
adc
sti
out
mov
daa
aas
sar
mov
movs
out
push
repz
ret
inc
mov
push
retf
shr
pusha
in
ds
repz
dec
retf
mov
idiv
out
dec
retf
shr
inc
in
ds
mov
adc
loop
dec
lahf
in
(bad)
ds
les
sahf
hlt
or
jbe
or
sbb
movs
out
push
repz
lahf
out
(bad)
ds
jae
sahf
cld
jmp
mov
push
daa
(bad)
sar
ds
pop
mov
shl
out
mov
std
cmp
jmp
std
mov
loop
dec
sahf
pop
and
retf
out
push
repz
push
jecxz
dec
sahf
dec
and
ds
call
sub
jecxz
push
inc
stos
mov
idiv
dec
jne
mov
or
ret
sub
jecxz
loopne
jecxz
dec
sahf
test
ds
gs
push
daa
dec
sar
ds
iret
cmp
sti
out
mov
daa
cmp
std
mov
repnz
ret
sbb
or
or
jbe
inc
dec
sub
push
daa
sbb
std
ds
jecxz
dec
mov
push
sub
xor
sub
outs
int
mov
mov
mov
or
jl
in
dec
lds
jne
test
shr
sub
mov
mov
jmp
xchg
ja
push
pop
call
mov
mov
dec
jne
dec
(bad)
mov
or
test
shr
add
mov
mov
or
mov
std
mov
movs
in
dec
or
mov
hlt
dec
dec
ins
sub
(bad)
mov
xchg
jecxz
inc
aas
daa
add
rcr
ds
inc
push
retf
push
ds
mov
mov
xchg
movs
jb
inc
xor
enter
xchg
lahf
sar
mov
xchg
test
xchg
test
pop
xchg
test
xchg
test
adc
mov
xchg
test
mov
test
ret
mov
xchg
test
out
xchg
test
push
xchg
test
daa
xchg
test
inc
xchg
test
pop
xchg
test
ins
xchg
test
in
test
movs
xchg
test
mov
xchg
test
xor
test
jns
test
pop
xchg
test
cmc
xchg
test
mov
xchg
test
sbb
mov
add
jo
inc
mov
mov
(bad)
les
mov
aas
addr16
std
add
addr16
cmp
retf
out
out
inc
or
sti
jmp
jns
fidiv
inc
xor
daa
pop
jecxz
ds
jmp
mov
mov
push
lock
mov
cmp
adc
mov
aaa
mov
mov
or
mov
sub
div
xor
aas
mov
jle
mov
std
jns
push
or
jae
sahf
fadd
aas
mov
mov
xchg
mov
mov
push
retf
jmp
cmp
ds
xlat
push
test
sub
retf
gs
scas
sub
div
sub
daa
scas
dec
(bad)
ds
fs
mov
cmp
sub
push
daa
push
out
cmp
sub
outs
inc
dec
inc
xor
test
add
jle
mov
dec
aas
aas
sub
retf
std
mov
outs
int
sub
std
pop
inc
pop
call
or
pop
mov
loop
cmp
or
dec
dec
into
std
ds
aam
xor
inc
mov
iret
data16
cmp
sub
push
mov
retf
push
xchg
sahf
ja
ds
mov
daa
in
cld
cmp
sub
dec
out
xchg
mov
mov
cld
jecxz
aas
mov
cmp
push
jp
inc
aas
mov
jecxz
(bad)
pushf
js
std
ret
jg
add
jmp
out
(bad)
jns
mov
or
mov
jmp
jmp
lock
sahf
lock
mov
rcl
jmp
jmp
jmp
mov
cmp
in
mov
mov
out
les
and
mov
cmp
jmp
inc
stos
pop
add
and
imul
ds
and
les
add
add
std
mov
repz
sub
push
nop
mov
loope
cld
jecxz
add
jecxz
retf
push
ds
cld
mov
loop
outs
or
dec
rep
push
test
pop
sub
mov
cmp
hlt
cld
mov
loop
dec
or
into
ds
cmp
and
mov
retf
push
sub
pop
out
mov
mov
inc
mov
mov
cmp
jb
mov
push
ds
push
daa
push
jecxz
cmp
ds
xor
mov
fnsave
inc
pop
pushf
js
std
xchg
inc
rcl
pop
push
retf
push
test
imul
pop
mov
sbb
sahf
pop
out
mov
mov
push
mov
push
ds
cld
scas
shl
out
popf
jecxz
sub
loop
push
mov
push
ds
push
ds
mov
jnp
mov
sbb
sub
cld
mov
loop
push
mov
adc
sub
cld
mov
cmp
shl
cmp
push
push
cmp
jge
popf
adc
jmp
outs
add
push
dec
std
mov
push
jno
and
cld
scas
ror
add
sub
cld
mov
loop
iret
or
(bad)
pushf
adc
out
sub
push
retf
dec
cmps
cmp
scas
ror
add
ds
std
push
cmp
inc
aas
adc
add
or
xchg
inc
aad
mov
outs
add
push
dec
std
mov
push
cld
mov
push
add
pop
mov
loop
pop
mov
mov
js
std
xchg
inc
rcl
jecxz
inc
inc
jmp
cmp
test
mov
loop
pop
mov
test
js
std
xchg
inc
aad
mov
xor
or
sub
jge
mov
push
jne
jecxz
mov
stc
test
jecxz
xchg
inc
pusha
and
sbb
daa
xchg
std
cmp
retf
nop
iret
mov
std
ret
jbe
(bad)
sub
or
jp
inc
aas
inc
aam
adc
in
sub
cmps
push
aas
or
out
cmps
inc
fadd
outs
loopne
mov
jecxz
mov
jmp
push
inc
mov
scas
mul
outs
jnp
push
ss
mov
ds
rol
jb
cld
jecxz
cmp
push
xchg
and
in
pushf
jecxz
les
push
xor
mov
sahf
mov
mov
push
jp
inc
aas
push
outs
int3
daa
jl
std
cmp
les
ds
inc
sub
daa
push
aam
xor
add
ds
and
jae
sahf
inc
std
ds
arpl
mov
dec
cmp
aam
xchg
mov
iret
or
jbe
or
sub
mov
sahf
and
ds
dec
xor
jecxz
ds
rol
mov
cmp
aas
or
cmp
sub
mov
push
pop
mov
dec
ds
add
push
xchg
cmp
loop
inc
mov
outs
dec
aaa
loop
inc
mov
je
cmp
les
add
mov
call
retf
dec
mov
or
sub
in
mov
std
pushf
adc
jmp
popf
cmovo
pop
push
clc
data16
mov
mov
xor
pop
outs
ret
jb
cmp
dec
mov
outs
inc
dec
inc
pop
adc
sub
xchg
(bad)
dec
ins
cmps
or
mov
mov
push
mov
out
mov
std
leave
sti
out
xor
ret
jecxz
dec
jae
dec
xchg
sahf
les
aas
mov
mov
push
and
cmp
mov
bound
std
sub
cmp
std
mov
and
inc
mov
jb
mov
adc
(bad)
ds
push
ds
dec
daa
add
std
mov
jecxz
mov
and
inc
mov
je
inc
cmp
inc
test
std
ds
sub
int3
sti
xlat
push
jb
xor
cmps
iret
lahf
(bad)
ds
cmp
daa
int
std
ds
sbb
mov
cmps
push
aas
sbb
jp
mov
pop
push
movs
cmp
inc
mov
loop
arpl
retf
stc
cmp
jecxz
jmp
jmp
or
mov
rol
cmp
mov
repz
neg
test
mov
xor
js
std
xchg
inc
aad
rcl
std
leave
mul
cmp
repz
rcr
clc
jle
inc
aas
sahf
inc
sub
mov
gs
mov
jge
retf
push
xor
aas
mov
mov
push
mov
ss
rcr
cmps
mov
movs
mov
movs
mov
mov
push
into
retf
and
aas
mov
cmp
test
dec
(bad)
test
dec
adc
sub
out
mov
std
retf
add
mov
pop
add
mov
sahf
call
jbe
mov
sub
outs
movs
mov
movs
mov
mov
sahf
mov
mov
push
mov
ss
pop
pop
retf
cmp
out
(bad)
or
test
dec
dec
test
mov
mov
pop
popf
js
std
xchg
inc
aad
icebp
adc
out
jmp
hlt
ss
rcr
sub
push
retf
sub
mov
mov
mov
(bad)
ds
jae
sahf
sub
ds
jmp
mov
push
ds
fistp
mov
pop
add
outs
xlat
daa
adc
std
ds
in
neg
daa
sbb
xor
aaa
inc
aas
and
cld
push
sbb
mov
lea
push
pop
push
les
sbb
mov
gs
mov
std
cmp
xchg
cmp
in
sub
(bad)
std
ds
jecxz
retf
or
mov
cmp
jno
(bad)
fisttp
ds
mov
and
mov
std
jle
(bad)
in
cwde
jecxz
test
es
scas
mov
pop
sbb
icebp
(bad)
ds
mov
clc
cwde
jecxz
popf
js
std
xchg
inc
ror
retf
mov
mov
add
mov
movs
jb
inc
sub
sub
(bad)
std
ds
rol
mov
inc
xor
dec
cmp
in
mov
std
les
add
and
jecxz
retf
jmp
and
mov
pop
inc
mov
addr16
or
mov
xor
push
cmp
(bad)
mov
lds
or
mov
enter
or
ds
pop
call
jmp
jo
dec
push
int3
sub
mov
cmp
jmp
add
and
lock
xchg
inc
rcl
or
mov
mov
sahf
out
ds
mov
dec
mov
sub
div
sahf
inc
aas
sahf
fldenv
mov
std
retf
add
xor
outs
inc
inc
mov
add
sub
push
ds
std
ret
jbe
pop
retf
mov
inc
inc
sub
sahf
adc
pop
add
jecxz
retf
jmp
inc
cmp
in
xchg
cmp
mov
test
dec
ds
in
repnz
ret
jbe
cmp
sti
xlat
dec
test
mov
ror
scas
jecxz
inc
mov
push
(bad)
cld
jecxz
test
data16
sub
addr16
mov
mov
ds
cld
push
shl
aas
and
push
sub
clc
std
div
in
std
div
sub
inc
out
cmp
or
push
retf
arpl
mov
push
int3
add
std
ds
mov
aas
mov
test
in
std
rcr
inc
xor
mov
outs
in
ds
imul
sahf
outs
dec
pop
aas
in
mov
xor
nop
inc
mov
iret
cmp
std
ds
push
inc
mov
std
sub
fdisi(8087
sti
jecxz
retf
inc
cmps
in
test
outs
int3
retf
dec
dec
inc
mov
mov
inc
aas
jns
jnp
inc
sub
retf
xchg
outs
in
ds
sub
sahf
adc
xchg
std
adc
mov
ret
std
(bad)
mov
ins
inc
inc
js
std
xchg
inc
rol
retf
xchg
jecxz
test
movs
jb
inc
pop
sbb
out
fld
not
ds
std
push
jp
inc
aas
mov
pop
sbb
retf
xor
mov
test
pop
adc
mov
(bad)
cmps
and
std
ds
sub
ret
jbe
add
scas
outs
sbb
or
dec
sti
mov
std
adc
mov
mov
cmp
std
addr16
or
sub
out
jecxz
dec
sub
cmps
aas
mov
sbb
les
jecxz
sub
out
jne
std
les
add
idiv
mov
int3
adc
mov
dec
daa
xor
xchg
cld
jecxz
test
mov
sub
(bad)
mov
jmp
(bad)
or
or
cmp
and
std
(bad)
sahf
sub
repz
jno
daa
push
jecxz
cmps
or
(bad)
sub
loop
pop
mov
rcl
inc
aas
inc
mov
push
mov
pop
push
cmp
adc
mov
stc
mov
outs
dec
cmovno
inc
ja
jnp
inc
inc
loop
loope
sub
jge
add
rcl
scas
mov
push
outs
inc
or
outs
out
retf
sub
xchg
iret
aaa
loope
cmp
int3
jmp
inc
scas
pop
idiv
mov
pop
jae
xor
mov
pop
pop
xor
jae
mov
dec
std
test
add
push
aas
mov
pop
call
push
add
cmp
mov
jp
(bad)
outs
xlat
mov
retf
mov
scas
ret
aas
mov
cld
mov
not
retf
scas
push
test
xor
mov
test
push
mov
push
mov
inc
aas
inc
fcom
or
pop
popf
adc
jmp
pop
push
retf
hlt
push
sti
(bad)
ds
or
push
in
ds
sub
movs
inc
repnz
jg
cmp
cld
sub
movs
repz
adc
or
jno
sbb
inc
jmp
mov
out
dec
cmp
pop
add
stc
in
ds
inc
inc
test
sub
inc
mov
std
(bad)
sub
inc
mov
dec
cmp
repz
or
dec
mov
sbb
lea
ds
and
jnp
mov
xor
loopne
popf
sub
xor
push
xor
(bad)
push
dec
add
mov
jno
sahf
out
repnz
inc
cmp
mov
(bad)
mov
mov
outs
inc
repz
ds
or
mov
std
ds
cmp
jecxz
mov
xor
std
sub
jecxz
sub
ss
xchg
or
fiadd
fsubp
pop
retf
pop
arpl
ins
jp
retf
daa
out
jmp
std
ds
ins
pop
arpl
push
add
xor
push
ds
std
push
jp
inc
aas
cmp
and
sub
pop
sahf
repz
aas
mov
sbb
or
dec
sahf
addr16
outs
out
pop
and
pop
push
xchg
or
and
mov
mov
arpl
push
adc
add
std
ds
sbb
mov
arpl
fld
(bad)
jb
out
pop
and
std
ss
mov
sbb
mov
jb
fsubp
adc
or
(bad)
xor
pop
and
add
sbb
dec
xchg
push
dec
add
mov
je
mov
fst
outs
xchg
sahf
addr16
aas
mov
push
retf
push
fwait
cmp
dec
sub
mov
jecxz
inc
repz
ds
adc
jnp
std
ds
sbb
mov
arpl
outs
add
test
dec
scas
cmp
aas
mov
push
xchg
inc
lods
std
xchg
sbb
mov
stos
inc
arpl
in
ds
jp
retf
xchg
or
aaa
inc
aas
cmp
ds
out
and
std
sar
inc
cmp
es
sub
sahf
adc
pop
ret
mov
arpl
les
add
and
and
cmps
dec
sub
and
aas
and
dec
(bad)
mov
sbb
retf
scas
push
test
sub
inc
or
jb
mov
retf
lds
add
adc
imul
mov
inc
aas
pop
xor
push
cmp
cmps
mov
(bad)
ds
jecxz
enter
daa
jle
std
ds
ss
std
(bad)
sahf
inc
aas
or
aaa
inc
aas
or
idiv
retf
pop
push
test
pop
push
cmps
scas
sahf
inc
aas
or
hlt
ds
inc
push
test
outs
inc
arpl
mov
and
icebp
daa
and
or
push
fidiv
inc
aas
inc
fucomi
pop
mov
and
mov
jmp
test
push
fidiv
inc
aas
sbb
int3
push
ss
push
(bad)
ss
aas
inc
stos
pop
popf
adc
jmp
in
(bad)
sti
fisttp
pusha
sti
jmp
inc
and
push
sub
std
or
push
jb
dec
es
sti
scas
push
(bad)
sub
loop
loopne
aaa
inc
aas
cmp
out
or
std
leave
imul
addr16
lods
sub
inc
aas
sub
loopne
lahf
inc
aas
adc
and
inc
repnz
jo
or
retf
jecxz
mov
out
pop
outs
sub
es
std
cmp
xor
shl
or
inc
or
stos
inc
das
push
popf
inc
aas
sahf
fwait
in
mov
mov
pop
lods
sub
inc
sub
jnp
push
stos
inc
das
ficomp
dec
mov
std
es
retf
cmp
xor
(bad)
dec
(bad)
mov
or
jecxz
enter
mov
mov
cmp
out
or
sub
inc
xor
std
retf
sti
scas
mov
dec
mov
std
add
mov
in
mov
std
les
add
fiadd
(bad)
push
sbb
sti
xlat
push
jecxz
mov
idiv
mov
std
es
ds
rcr
cmp
lods
sub
jg
clc
mov
sub
dec
mov
std
es
loope
ds
test
sub
cmps
ss
ds
stos
inc
aaa
mov
add
ds
in
div
sub
mov
xor
pushf
scas
int3
add
outs
in
ds
inc
inc
sub
dec
int3
sti
xlat
dec
push
sti
fistp
aas
mov
in
mov
std
dec
cmps
lahf
inc
jecxz
pushf
mov
xlat
push
(bad)
jge
test
std
es
std
ds
aas
mov
in
jno
inc
sub
xchg
push
stos
inc
aaa
mul
std
ds
nop
sti
ds
in
div
sub
mov
xor
test
retf
lea
in
aas
mov
inc
inc
sub
dec
int3
sti
xlat
dec
push
sti
fstp
mov
in
mov
std
dec
cmps
pushf
(bad)
jle
jecxz
test
sub
(bad)
aas
popa
mul
psraw
ds
aas
ss
ret
sti
jmp
dec
push
jno
xor
ins
pop
aaa
sahf
and
ds
in
div
sub
mov
xor
test
retf
and
in
inc
mov
inc
inc
sub
dec
int3
sti
xlat
dec
push
sti
(bad)
aas
mov
in
mov
std
dec
cmps
outs
dec
cmp
cmp
push
inc
and
clc
jp
pop
push
dec
(bad)
data16
dec
aas
and
and
jmp
pop
shl
std
leave
aaa
je
ds
mov
pop
mov
jno
repz
aas
mov
add
jbe
push
retf
jb
mov
jecxz
jmp
adc
pop
outs
add
test
mov
cmps
int3
movs
sbb
jecxz
arpl
loop
sti
or
inc
hlt
jecxz
inc
aas
jmp
mov
jb
mov
jecxz
scas
jb
std
add
sub
or
mov
jb
ret
xchg
js
std
leave
not
cmp
stc
cld
mov
out
mov
loop
outs
or
dec
mov
or
(bad)
loop
arpl
push
rol
aas
jae
movs
jae
mov
and
push
sbb
retf
adc
mov
dec
arpl
loop
arpl
jecxz
arpl
in
std
xchg
inc
ror
dec
outs
ds
mov
push
sub
dec
ds
cld
mov
loop
dec
mov
push
ds
std
push
dec
cmp
xor
retf
(bad)
mov
fld
mov
or
sub
mov
pop
push
ds
cmp
push
adc
jecxz
retf
inc
fs
pop
daa
jecxz
(bad)
ds
fs
mov
cld
mov
jmp
pop
inc
hlt
push
or
jmp
inc
mov
sbb
retf
jnp
test
outs
aas
ja
movs
jae
and
std
mov
loop
test
hlt
mov
mov
outs
retf
cmp
lock
ds
fwait
push
test
lods
std
mov
inc
and
adc
sub
cld
mov
loop
inc
mov
sbb
mov
cld
mov
outs
push
retf
jae
mov
push
or
ret
retf
aas
ja
movs
jae
mov
push
ds
cld
mov
loop
pop
sahf
mov
push
ds
mov
lods
std
mov
loop
inc
mov
jp
js
std
leave
neg
cmp
repz
mov
out
mov
loop
fisttp
sub
sub
outs
push
sub
add
jle
nop
mov
mov
push
outs
pop
mov
icebp
xchg
cld
jecxz
retf
(bad)
ds
je
ds
mov
inc
and
sbb
sub
cld
mov
loop
dec
mov
or
sub
cld
mov
loop
fisttp
sub
sub
loop
push
inc
hlt
mov
mov
adc
sub
cld
mov
loop
inc
mov
xchg
aas
mov
pop
add
jecxz
retf
aas
ja
movs
jae
inc
sub
les
add
idiv
cld
mov
loop
push
mov
adc
sub
cld
mov
xor
mov
loop
pop
or
(bad)
sub
loop
pop
inc
hlt
mov
mov
push
ds
cld
mov
loop
dec
mov
push
ds
cmp
mov
rcl
aas
ja
movs
jae
mov
and
push
sbb
retf
out
push
test
loop
arpl
test
ds
add
inc
and
or
daa
add
push
(bad)
aaa
inc
aas
jns
push
retf
mov
leave
neg
cmp
repz
mov
out
mov
loop
out
or
(bad)
sub
outs
push
sub
add
jle
nop
out
jecxz
add
push
outs
pop
mov
inc
xchg
cld
jecxz
daa
arpl
push
retf
mov
xchg
inc
aad
xor
out
jecxz
imul
push
test
out
mov
mov
cmp
test
shr
inc
lods
std
rol
std
ds
add
cmp
aas
sub
mov
jmp
nop
inc
lods
std
rol
std
ds
std
imul
sub
aas
sahf
xlat
loop
mov
jmp
sar
retf
cmp
dec
daa
enter
push
xor
xchg
in
aas
mov
std
pushf
inc
xor
pop
ins
jae
sahf
idiv
pushf
loop
ds
int3
xlat
sahf
mov
addr16
xor
daa
add
push
int3
sti
ror
ss
std
ds
pop
jmp
aam
cmp
std
retf
mov
jecxz
ds
rol
pop
mov
jecxz
mov
loop
shl
arpl
mov
adc
jecxz
xchg
push
int3
mov
mov
sahf
(bad)
mov
shr
outs
in
ds
mov
loopne
iret
je
std
pop
in
mov
dec
daa
pop
stos
std
ds
mov
jecxz
mov
int3
cld
div
arpl
mov
dec
das
sahf
pop
mov
xor
push
popf
sbb
aas
mov
std
pop
js
std
xchg
inc
sar
shl
std
cmp
aas
inc
imul
daa
int3
jecxz
ds
xor
int3
cmp
cld
ds
out
jo
std
retf
mov
jecxz
retf
jmp
cmp
mov
std
test
outs
not
mov
ret
sub
cmps
mov
pop
or
cld
jecxz
xchg
cmps
or
ds
xor
nop
inc
xor
nop
inc
xor
nop
push
jecxz
inc
sub
ret
jbe
adc
mov
rcl
sub
mov
push
mov
dec
cmp
aas
sub
jge
(bad)
jecxz
dec
or
sub
jns
pop
in
(bad)
cld
repz
in
in
pop
jecxz
retf
xchg
sub
pop
push
daa
adc
push
enter
test
retf
inc
loop
jecxz
aas
aas
sub
ret
jb
aas
jmp
inc
sub
enter
inc
push
inc
pop
call
rol
addr16
mov
push
daa
fild
(bad)
cmp
rcr
in
leave
test
add
jecxz
add
mov
sahf
imul
cmps
and
std
ds
imul
shl
adc
or
(bad)
cmp
mov
or
ds
push
pop
popf
js
std
leave
or
push
xchg
inc
es
cmps
xor
cmp
or
or
and
inc
mov
mov
mov
sbb
dec
sub
inc
test
(bad)
gs
sub
leave
test
repz
mov
cmp
out
mov
dec
cs
mov
call
test
hlt
std
cmp
test
push
hlt
mov
adc
jecxz
arpl
retf
adc
mov
pop
add
cmp
xor
mov
cmp
jge
or
jecxz
int
in
cmp
aas
cmp
cld
pop
push
jno
inc
jb
aas
mov
mov
xor
retf
(bad)
ds
ins
(bad)
ds
jnp
mov
fild
ret
data16
inc
sub
push
retf
rol
jecxz
(bad)
cmp
call
adc
jmp
pop
std
retf
(bad)
ds
lds
jno
ds
sbb
mov
or
mov
out
nop
mov
loope
cld
jecxz
jmp
push
mov
in
in
pop
loop
les
pop
retf
(bad)
ds
lds
in
std
xchg
or
loop
cmp
jecxz
test
or
dec
mov
cld
adc
out
(bad)
mov
push
ds
push
daa
es
ds
push
mov
std
mov
mov
cld
mov
int3
dec
out
jecxz
popf
adc
mov
adc
sub
enter
pop
ins
dec
dec
aas
sub
enter
imul
inc
aas
sahf
ret
fidivr
cmps
outs
aas
dec
cmp
aas
cmp
add
push
add
dec
mov
std
ds
push
retf
inc
pop
or
push
mov
outs
dec
inc
aas
in
mov
(bad)
(bad)
ds
inc
pop
cmp
es
pop
pop
xchg
push
push
ret
jno
(bad)
push
cmp
sahf
cli
jno
cmp
add
inc
sub
retf
cld
outs
mov
add
or
out
mov
std
leave
sti
sti
mov
call
xchg
aas
mov
mov
outs
(bad)
ds
jae
mov
loop
push
mov
into
sub
sti
sti
mov
call
push
push
mov
push
dec
ret
jno
(bad)
push
push
xchg
test
push
mov
push
inc
xor
ds
call
retf
cld
xchg
retf
ds
mov
jecxz
push
jmp
repnz
add
dec
sbb
mov
outs
dec
inc
or
push
push
mov
outs
dec
inc
mov
std
scas
mov
cmp
retf
rcr
cmp
xchg
or
xor
xlat
retf
pop
mov
outs
jle
(bad)
jecxz
leave
jle
jae
inc
hlt
cld
mov
cmp
xchg
mov
jecxz
aaa
mov
jns
adc
and
cs
inc
mov
sub
scas
imul
dec
mov
push
retf
mov
(bad)
data16
mov
inc
ret
std
mov
sbb
inc
sub
cmp
into
and
mov
dec
push
(bad)
mov
push
daa
cmp
cld
cmp
or
cld
jmp
test
in
ds
inc
inc
cmp
cmp
dec
mov
pop
or
mov
mov
ja
push
enter
inc
jno
(bad)
ds
add
addr16
aam
xor
mov
jecxz
inc
sahf
and
ds
mov
sub
push
push
ds
cld
scas
retf
dec
mov
push
xchg
sahf
fsincos
ds
add
inc
pop
call
push
add
out
add
in
leave
mul
addr16
inc
lods
mov
jbe
aas
mov
shl
sub
add
(bad)
loop
iret
mov
std
add
les
jl
inc
outs
cld
les
jge
inc
or
out
test
mov
mov
mov
(bad)
(bad)
push
(bad)
daa
in
sub
in
adc
std
ret
lods
pop
pop
retf
dec
test
dec
inc
adc
mov
jge
inc
jmp
fwait
jbe
cld
jecxz
retf
mov
mov
inc
pop
aas
sub
enter
xchg
ins
inc
dec
aas
sub
enter
xchg
ins
inc
push
jns
mov
inc
sub
les
and
xor
std
mov
outs
dec
arpl
fistp
cmp
dec
ds
cld
scas
mov
sub
sub
addr16
mov
outs
jl
mov
add
xchg
pop
xor
sub
cmp
int3
loope
mov
mov
mov
in
ds
push
idiv
inc
aas
push
int3
lds
loope
ds
jb
ret
push
sahf
scas
cmc
ds
lds
mov
rol
mov
or
movs
jb
cmp
aas
sub
mov
shr
inc
pop
jecxz
inc
mov
add
retf
xchg
mov
sub
jl
cmp
in
aas
push
imul
mov
outs
pop
mov
hlt
add
push
adc
cld
mul
mov
and
aad
ds
outs
pop
mov
pop
popf
js
std
xchg
or
pop
(bad)
js
or
retf
xchg
add
outs
int3
ds
call
xor
hlt
jb
out
and
sti
jmp
jb
sahf
inc
push
aas
mov
cmp
sub
xor
sub
push
cmps
mov
std
ds
push
ds
inc
aas
adc
cmp
les
cmp
xor
std
mov
outs
dec
inc
or
jecxz
nop
mov
add
retf
(bad)
push
test
dec
and
lods
out
les
sub
dec
retf
cld
mov
loop
inc
mov
in
cld
jecxz
sub
loop
arpl
push
sbb
test
add
sahf
adc
mov
ds
cmp
aas
mov
ds
jns
icebp
xchg
jecxz
xchg
or
mov
mov
mov
mov
fst
mov
(bad)
sti
jecxz
ds
ins
xchg
cld
jecxz
inc
mov
(bad)
div
inc
aas
aas
sub
daa
nop
xor
ds
aam
mov
sahf
xchg
inc
aas
mov
outs
inc
mov
adc
outs
mov
and
pop
and
sub
or
jmp
inc
and
cld
(bad)
mov
xor
push
xor
push
stc
mov
jo
outs
or
push
xchg
or
adc
sub
ret
jbe
sbb
cli
pop
push
retf
inc
arpl
xor
les
add
pop
stc
mov
outs
add
test
dec
fwait
cmp
lods
out
mov
jbe
add
arpl
inc
push
xchg
or
push
ds
and
mov
mov
retf
int3
ds
dec
pop
popf
adc
push
add
and
cmp
aas
mov
fs
fbstp
data16
dec
sub
jle
into
in
sub
xor
mov
outs
jbe
out
xor
mov
sbb
lahf
sub
cmp
push
clc
mov
aas
push
pop
retf
xchg
adc
outs
aas
ja
aaa
push
jb
cmp
stos
(bad)
push
dec
inc
test
ds
ja
jno
add
mov
sti
mov
outs
inc
pop
icebp
test
pushw
jecxz
jmp
sub
ret
jbe
sbb
jecxz
pop
or
jecxz
xchg
or
push
ds
jecxz
daa
cvtpi2ps
ds
dec
icebp
ds
jecxz
pop
sahf
mov
aas
mov
outs
inc
icebp
fmul
ds
push
sbb
adc
std
mov
cmp
ds
je
mov
test
jmp
in
ss
ds
xor
push
test
sar
out
jle
std
test
and
push
ds
out
xchg
jecxz
retf
(bad)
ds
ret
mov
sahf
and
ds
mov
mov
std
cmp
inc
int3
int
mov
add
test
lods
out
add
std
ja
hlt
jb
sahf
xor
aas
mov
jmp
add
mov
pop
popf
adc
or
aas
pop
outs
call
add
push
ds
or
das
jmp
aas
mov
jbe
std
leave
stc
out
push
sub
push
xchg
push
jecxz
inc
sahf
(bad)
aad
mov
ret
mov
outs
xor
stos
pop
loop
jmp
(bad)
sahf
out
ds
ret
mov
outs
inc
dec
inc
in
cmp
or
cmp
sub
mov
mov
in
sub
inc
pop
cwde
js
std
xchg
or
cmp
out
push
daa
sub
std
cmp
cmp
lods
pop
add
cld
call
lods
fistp
mov
mov
xchg
mov
add
jbe
push
(bad)
ds
(bad)
daa
in
ret
icebp
test
push
retf
mov
mov
std
sub
cmps
add
inc
xor
inc
inc
and
jb
cmp
dec
sub
addr16
mov
std
push
mov
inc
aas
jmp
cmp
fsqrt
jecxz
mov
sub
push
mov
push
cld
inc
ss
mov
retf
jo
mov
cmp
repnz
mov
xrelease
lods
push
or
push
outs
test
in
jmp
std
cmp
sub
push
xchg
mov
cs
dec
push
test
outs
inc
arpl
jecxz
ds
xor
mov
outs
ds
ja
push
xor
inc
sbb
xchg
cld
jecxz
dec
mov
les
adc
movs
cmp
adc
mov
out
call
add
or
ret
push
xchg
inc
pop
or
pop
icebp
xchg
aas
xor
dec
cmp
ds
inc
inc
loope
jb
(bad)
sub
jecxz
jge
mov
adc
jecxz
jne
cmp
ds
shl
sar
inc
fdivr
cmp
xor
ds
mov
(bad)
jmp
aaa
cwde
rcl
retf
jle
mov
std
ds
cmp
fld
inc
mov
jb
or
mov
gs
mov
std
cmp
xchg
cmp
test
ds
push
mov
jg
rcr
std
ds
fdiv
icebp
fidiv
or
add
mov
cmp
hlt
push
cmps
cld
(bad)
(bad)
ds
cmc
(bad)
ds
jne
mov
pop
je
sti
fbstp
xchg
(bad)
push
ins
retf
cmp
mov
std
mov
and
inc
mov
je
push
outs
test
in
(bad)
jecxz
leave
mov
sti
mov
std
sub
push
cwde
jge
mov
ds
lock
pop
cli
retf
out
cmps
jecxz
les
sbb
mov
outs
int3
ds
cmp
jmp
lock
in
ds
call
jb
std
ds
mov
add
push
aas
pop
cmp
xchg
cld
jecxz
daa
fld
mov
jmp
bound
pop
cmp
push
jp
inc
aas
cmp
test
shr
xchg
inc
mov
(bad)
push
imul
aas
or
sub
test
cmp
jns
add
cld
jecxz
ror
inc
aas
mov
out
ret
std
mov
data16
mov
inc
xchg
push
mov
test
jecxz
xchg
out
pusha
jecxz
cwde
inc
lods
xchg
push
jmp
cld
jecxz
in
jecxz
sub
loopne
xchg
aas
sub
daa
nop
(bad)
std
adc
xor
push
popf
sbb
aas
mov
std
pop
js
std
test
retf
test
mov
mov
mov
and
mov
add
and
in
mov
std
retf
mov
sub
add
ja
in
pop
jecxz
add
cmp
mov
dec
(bad)
es
std
cmp
int3
(bad)
out
xchg
pop
jecxz
ret
std
leave
jge
pop
add
pop
add
sub
xor
jns
(bad)
ds
dec
ds
retf
push
test
out
mov
loop
arpl
loop
arpl
retf
adc
jecxz
daa
pop
in
ds
std
mul
das
inc
aas
sahf
outs
sar
(bad)
cmp
cmps
imul
lea
test
(bad)
jecxz
test
jo
dec
push
jno
dec
sahf
and
dec
jl
cli
inc
cmp
sub
gs
cmps
in
retf
add
in
mov
jmp
mov
out
pop
out
(bad)
sahf
inc
sub
mov
jae
mov
out
ds
cld
push
into
xor
cli
aas
inc
xor
daa
cmp
cli
ds
xor
daa
sub
xor
test
sbb
aas
mov
std
pop
js
std
test
aas
sahf
iret
sar
and
in
pop
jecxz
retf
xchg
push
int3
daa
push
xchg
std
ds
xor
xchg
in
test
sub
retf
ret
test
xchg
inc
aas
aas
sub
daa
push
nop
std
mov
xor
ds
sub
cmps
jle
inc
aas
push
ins
jae
sahf
ja
cmp
(bad)
mov
mov
std
jns
repz
mov
std
dec
cmp
idiv
push
aas
mov
or
dec
in
ds
pop
mov
push
push
ret
or
outs
in
ds
sub
(bad)
jno
int
aas
mov
addr16
lahf
call
gs
ds
and
sbb
jecxz
shr
and
mov
std
xchg
repz
xchg
mov
mov
inc
dec
cmp
mov
pop
sub
or
xor
pusha
lds
inc
mov
inc
mov
sub
arpl
dec
cmp
ds
or
adc
mov
dec
cmp
loop
les
inc
aas
and
call
cmp
imul
sub
xor
adc
repnz
cmp
dec
mov
sub
int3
data16
sub
inc
dec
cmp
(bad)
ds
or
mov
in
ds
movs
jne
sub
and
sub
daa
mov
test
stc
cld
ds
or
ds
call
add
int3
jns
cmp
ds
or
ds
repnz
xlat
loop
ds
stc
cld
ds
mov
mov
cmp
sub
je
ds
es
or
out
loop
ds
add
ds
out
sub
and
pop
pop
sub
lock
mov
std
test
mov
sub
mov
std
dec
cmp
std
ds
out
sub
xchg
addr16
mov
and
mov
std
xchg
pop
and
sahf
loop
ds
add
mov
and
addr16
dec
cmp
cld
ds
inc
dec
cmp
cld
ds
jmp
shl
ds
movs
inc
aas
cmp
inc
aas
xor
inc
aas
cmc
mov
inc
aas
fbld
aas
fbld
aas
movs
inc
aas
cmc
mov
inc
aas
fbld
aas
lea
aas
cmp
inc
aas
out
mov
inc
aas
out
mov
inc
aas
outs
mov
inc
aas
cmps
mov
inc
aas
cmps
mov
inc
aas
out
mov
inc
aas
out
mov
inc
aas
or
shl
mov
xchg
inc
imul
(bad)
mov
push
enter
mov
scas
outs
les
test
mov
jecxz
(bad)
sahf
pop
cmps
ds
mov
jmp
outs
dec
cmp
loop
daa
mov
jecxz
inc
sahf
pop
(bad)
ds
(bad)
retf
rol
out
sbb
xor
test
mov
xor
cmp
pop
popf
jg
add
or
cmp
mov
xrelease
ret
mov
repz
ds
lahf
push
test
add
mov
push
sub
add
jle
lea
mov
mov
arpl
pop
and
xor
dec
sahf
mov
mov
arpl
pushf
or
xchg
std
ret
push
xchg
jmp
out
xchg
iret
xchg
sub
retf
mov
icebp
std
ds
pop
or
dec
daa
sahf
ins
stos
ds
mov
xchg
sahf
test
aas
mov
dec
cmps
int3
sti
lea
loop
arpl
jecxz
aas
sahf
ds
aas
mov
rol
(bad)
mov
push
dec
arpl
repz
sub
jecxz
(bad)
repnz
cmp
inc
rcl
or
jecxz
pop
jmp
push
les
mov
ds
cmp
cmp
jae
sub
cmp
pop
les
icebp
test
std
cmovno
push
daa
xchg
std
ds
das
sbb
jg
std
ds
das
push
daa
ja
std
ds
das
adc
outs
in
ds
das
and
addr16
ds
sar
aas
mov
jbe
push
outs
test
in
mul
std
ret
mov
out
mov
outs
inc
dec
cmp
sbb
std
xorps
jne
(bad)
ds
jno
inc
sub
ret
std
ret
jbe
adc
mov
je
aas
sub
daa
sbb
cld
ds
std
imul
std
ds
es
cwde
aas
sub
mov
sbb
inc
sub
cld
mov
retf
sub
mov
push
enter
call
aas
or
inc
mov
sub
cld
jecxz
fadd
outs
out
xchg
and
mov
sahf
ds
ds
arpl
mov
jl
and
mov
sahf
cs
ds
(bad)
test
outs
int
sti
(bad)
add
mov
(bad)
mov
mov
sub
retf
xchg
aas
sub
jl
pop
mov
mov
mov
jecxz
ja
sub
es
mov
ds
xor
jnp
cmp
xchg
push
mov
popf
sbb
aas
mov
std
cdq
jg
add
or
in
pushf
ds
mov
pop
or
jecxz
jmp
test
mov
aas
pop
add
js
int
sti
jecxz
mov
add
and
jecxz
pop
cmp
test
mov
mov
mov
std
mov
dec
cmp
xchg
ds
sub
enter
add
bound
sub
xchg
and
pop
push
daa
loopne
std
ds
addr16
sahf
outs
iret
cmp
cmp
or
sub
mov
jbe
mov
jle
jno
pop
inc
sub
retf
mov
xor
push
push
jecxz
retf
add
bound
sub
sbb
imul
test
loop
inc
cmp
aas
sub
out
push
jecxz
popf
jg
push
xchg
inc
pusha
and
mov
jae
aas
jmp
mov
in
ds
push
retf
add
add
mov
inc
arpl
sub
ret
dec
test
or
inc
jbe
add
idiv
dec
ds
daa
push
test
fdivr
mov
repz
daa
push
scas
cld
cmp
add
mov
add
std
out
call
jne
mov
daa
mov
sub
ds
sub
mov
call
mov
inc
jbe
add
xchg
cld
jecxz
retf
pop
aas
jns
inc
arpl
loop
mov
mov
out
dec
dec
mov
out
shr
cmp
dec
mov
idiv
mov
cmpps
push
mov
pop
call
xor
pop
add
sbb
push
inc
js
or
fcmovb
xchg
inc
inc
and
mov
add
mov
or
daa
inc
jecxz
ds
jns
mov
push
mov
outs
dec
dec
mov
movs
ds
outs
int3
xchg
lods
mov
add
sahf
test
cmp
std
in
les
push
sub
dec
or
cmp
sbb
mov
call
mov
dec
jg
mov
jae
cmp
shr
mov
(bad)
mov
int
retf
sub
imul
inc
mul
jmp
mov
push
inc
sub
rcl
gs
mov
jae
inc
sub
sub
pop
add
inc
rcl
outs
push
arpl
cmp
retf
(bad)
movs
aas
out
xor
sbb
jl
mov
push
pop
lds
mov
lds
add
retf
sbb
pushf
mov
ds
dec
std
xchg
and
addr16
mov
mov
(bad)
addr16
mov
adc
push
retf
jmp
call
add
aas
mov
push
xchg
mov
std
push
cli
ss
aas
inc
mov
inc
inc
sbb
std
lds
movs
repz
enter
inc
inc
daa
or
mov
loopne
pop
neg
fcomp
ins
inc
xor
retf
xchg
aaa
mov
add
cmp
jg
sub
ds
push
xchg
or
sub
retf
mov
jmp
inc
mov
std
cwde
inc
fdiv
or
popa
out
js
fdiv
inc
call
leave
cmp
cld
in
xchg
mov
pop
cli
int3
xor
add
sti
xlat
and
mov
add
inc
aaa
push
sub
sbb
inc
sub
arpl
mov
retf
sub
mov
cmp
jo
loop
ret
mov
outs
push
dec
loope
dec
movs
aas
cmc
mov
int3
adc
mov
mov
test
ds
in
inc
mov
inc
xchg
cld
jecxz
movs
mov
inc
pop
sahf
jg
push
aas
or
ret
push
xchg
inc
sbb
nop
cld
jecxz
test
adc
addr16
mov
cmp
in
addr16
mov
cmp
mov
jecxz
adc
sub
ret
jbe
aaa
test
mov
rcl
inc
sub
mov
jmp
ds
ds
push
dec
test
pop
mov
test
mov
inc
aas
sbb
jnp
mov
add
adc
cld
mov
outs
dec
cmp
jecxz
popf
adc
push
retf
push
test
loop
test
mov
push
lea
enter
push
and
xchg
repz
or
push
and
xchg
cld
add
jns
push
xchg
inc
and
xchg
cld
jecxz
xor
out
cld
push
and
xchg
xor
inc
cld
out
jno
sahf
aas
inc
aas
mov
add
cmp
(bad)
ds
cld
push
mov
inc
aas
inc
add
cld
jecxz
aaa
and
xchg
aas
sub
mov
push
ds
ret
push
test
aaa
push
xchg
cmp
std
ds
aam
mov
sub
sbb
cs
cld
mov
(bad)
cld
mov
jmp
jae
jecxz
ret
jbe
cmp
mov
or
mov
push
mov
retf
dec
(bad)
cmp
les
add
mov
dec
xchg
inc
jmp
mov
jecxz
xchg
inc
mov
std
popf
inc
cmps
pop
call
mov
mov
inc
inc
aas
sub
enter
xchg
inc
aad
pop
mov
std
xor
pop
push
inc
sub
push
daa
cmps
cmp
movq
popf
js
std
idiv
aas
sahf
jmp
cmp
jmp
pop
mov
inc
ret
std
mov
ss
xchg
sub
es
std
and
pop
sahf
jae
ds
mov
aas
xor
ret
inc
jg
push
test
(bad)
xchg
inc
aas
sahf
add
ds
add
addr16
cmp
retf
dec
(bad)
fmul
enter
ds
rol
jmp
cmp
lods
std
mov
out
mov
jecxz
xchg
inc
pusha
and
aad
ds
xor
mov
inc
std
ds
mov
sahf
jl
ds
cs
je
inc
mov
pop
dec
call
mov
mov
or
jecxz
push
and
in
mov
std
les
or
sub
mov
mov
mov
mov
(bad)
inc
mov
lds
mov
mov
std
ds
jecxz
add
inc
outs
mov
add
mov
dec
enter
inc
(bad)
xchg
inc
aas
cmp
aas
cmp
aas
sub
in
mov
std
(bad)
mov
inc
nop
cld
jecxz
mov
jecxz
ds
mov
mov
sub
inc
aas
and
and
call
mov
jmp
adc
mov
inc
inc
cmp
retf
inc
inc
icebp
sub
mov
xor
push
cmp
sahf
inc
cmps
pop
call
cmp
sub
leave
add
addr16
icebp
xor
xchg
sub
cld
mov
out
dec
lea
inc
cmp
jb
cmp
dec
or
aad
jbe
add
jmp
call
push
sub
push
ds
mov
test
jecxz
add
outs
out
sub
push
ds
pop
dec
test
and
(bad)
cld
jecxz
pop
jmp
push
add
sub
xor
mov
std
ds
jecxz
retf
push
xchg
inc
aad
dec
and
(bad)
cld
jecxz
lea
pop
add
stc
out
nop
mov
mov
lds
mov
push
mov
inc
push
cmp
push
push
int3
push
dec
mov
pop
popf
adc
pop
arpl
lods
std
xchg
inc
xor
retf
dec
test
repz
call
mov
lea
inc
cmp
jb
cmp
jmp
(bad)
or
aad
adc
rol
inc
arpl
outs
ds
mov
and
jecxz
inc
mov
jge
cld
jecxz
daa
mov
in
std
xchg
inc
aad
pop
mov
mov
push
sub
jns
in
jno
mov
and
jecxz
retf
xor
out
push
lea
add
pop
mov
retf
dec
test
jmp
mov
out
dec
lea
inc
cmp
jb
mov
and
jecxz
sahf
adc
add
or
out
jb
cmp
arpl
sub
jns
in
jno
mov
and
jecxz
retf
xor
out
push
lea
add
pop
mov
retf
dec
test
jmp
mov
out
dec
lea
inc
cmp
jb
mov
and
jecxz
sahf
adc
add
or
out
jb
cmp
fwait
push
sub
jns
in
jno
mov
and
jecxz
retf
xor
out
push
lea
add
addr16
ds
and
nop
cld
jecxz
lea
or
nop
mov
mov
mov
cmp
push
adc
cmp
retf
mov
inc
aas
icebp
xor
mov
loop
arpl
xor
push
inc
pop
push
les
or
js
std
xchg
inc
ror
or
out
xchg
inc
and
nop
cld
jecxz
test
icebp
mov
loop
dec
push
jecxz
retf
xor
xor
mov
loop
dec
or
aad
sti
jmp
mov
outs
dec
cmp
sub
or
std
xchg
inc
ror
or
out
xchg
inc
and
nop
cld
jecxz
test
icebp
mov
loop
dec
push
jecxz
retf
xor
xor
mov
loop
dec
or
aad
sti
jmp
mov
outs
dec
cmp
sub
or
std
xchg
inc
ror
or
out
xchg
inc
and
nop
cld
jecxz
test
icebp
mov
loop
dec
push
jecxz
retf
xor
xor
mov
loop
dec
or
aad
sti
jmp
mov
outs
dec
cmp
sub
or
std
xchg
inc
ror
or
out
xchg
inc
and
nop
cld
jecxz
test
test
push
mov
push
ds
dec
lea
inc
cmp
jb
inc
sub
(bad)
mov
push
ds
cld
mov
loop
dec
or
aad
sti
jmp
mov
outs
dec
cmp
sub
or
std
xchg
inc
ror
or
out
xchg
inc
and
nop
cld
jecxz
test
icebp
mov
loop
dec
push
jecxz
retf
xor
xor
mov
loop
dec
or
aad
sti
jmp
mov
outs
dec
cmp
sub
or
std
xchg
inc
ror
or
out
xchg
inc
and
(bad)
cld
jecxz
test
icebp
mov
loop
dec
push
jecxz
retf
xor
xor
mov
loop
dec
or
aad
sti
jmp
mov
outs
dec
cmp
sub
or
std
xchg
inc
ror
or
out
xchg
inc
and
(bad)
cld
jecxz
test
test
push
mov
push
ds
dec
lea
inc
cmp
jb
inc
sub
(bad)
mov
push
ds
cld
mov
loop
dec
or
aad
sti
jmp
mov
outs
dec
cmp
sub
or
std
cmp
daa
call
inc
aas
js
std
xchg
inc
inc
and
outs
out
jb
cmp
cmps
push
sub
jns
in
jno
cmp
add
sub
xor
call
mov
lea
call
push
retf
mov
retf
dec
test
repz
mov
loop
dec
mov
or
sub
dec
lea
inc
cmp
jb
mov
adc
sub
cld
mov
loop
inc
or
aad
adc
ror
push
retf
or
rcl
dec
test
mov
dec
inc
sub
cld
mov
loop
inc
mov
add
in
xor
adc
push
les
lock
mov
loop
inc
mov
push
mov
call
dec
nop
or
out
xchg
inc
and
(bad)
cld
jecxz
test
icebp
mov
loop
dec
push
jecxz
retf
xor
xor
mov
loop
dec
or
aad
sti
jmp
mov
outs
dec
cmp
sub
or
std
xchg
inc
aad
test
sbb
inc
sub
addr16
mov
and
pop
and
jecxz
das
push
sub
cmp
sub
or
sub
cld
push
jmp
aas
or
mov
inc
aas
or
mov
or
mov
std
mov
loop
retf
sub
mov
cmps
aas
mov
(bad)
mov
outs
add
enter
pushf
adc
mov
inc
aas
or
mov
or
mov
std
mov
loop
retf
out
sbb
and
mov
outs
add
enter
pushf
adc
pop
arpl
mov
mov
inc
aas
icebp
xor
mov
push
inc
inc
mov
and
xor
push
les
add
iret
add
stc
out
mov
test
adc
jmp
fist
cmps
xor
mov
loop
retf
push
sub
retf
sti
ror
sub
cld
push
add
aas
mov
mul
push
stos
cld
ds
std
mov
int3
mov
mov
mov
sub
xchg
push
jecxz
ds
jecxz
cmp
jmp
push
jecxz
xor
cmp
cld
push
aas
sub
sahf
adc
rol
mov
cmp
push
xchg
inc
sub
xchg
inc
aad
ds
cld
push
inc
xor
aas
inc
sub
(bad)
mov
push
ds
das
dec
test
adc
dec
ds
out
jge
std
retf
mov
inc
aas
sysenter
std
jne
mov
add
les
std
mov
int3
add
mov
push
(bad)
mov
add
lea
inc
adc
jecxz
sub
sub
es
mov
mov
aas
pop
out
daa
push
(bad)
ds
sub
ret
inc
jbe
add
addr16
mov
outs
ds
push
ins
inc
dec
mov
rcl
test
sub
mov
cmp
jmp
std
leave
add
mov
mov
std
ds
add
or
out
daa
retf
lods
sub
inc
mov
add
ds
mov
outs
in
test
jecxz
xchg
inc
aad
mov
stos
add
addr16
rcr
(bad)
es
(bad)
ds
jecxz
dec
mov
fst
mov
mov
mov
dec
xor
xchg
std
ds
mov
cld
sub
es
xor
pop
out
daa
popf
fscale
ds
sub
ret
inc
jbe
add
push
outs
ds
push
ins
inc
dec
mov
adc
retf
jbe
mov
cmp
jmp
std
leave
add
mov
mov
std
ds
add
or
out
daa
retf
lods
sub
inc
mov
add
ds
mov
outs
or
test
jecxz
xchg
inc
aad
mov
stos
add
push
loopne
es
ds
jecxz
dec
mov
fst
mov
mov
mov
dec
xor
xchg
std
ds
mov
cld
sub
es
mov
aas
pop
out
daa
jmp
sub
ret
inc
mov
dec
push
inc
and
nop
push
ins
inc
dec
mov
sbb
int3
ret
jecxz
jmp
jmp
std
leave
add
mov
mov
std
ds
add
or
out
daa
retf
lods
sub
inc
mov
add
ds
mov
outs
xor
test
jecxz
xchg
inc
aad
mov
stos
add
push
loopne
retf
cld
test
(bad)
cmp
mov
aad
jecxz
ret
std
retf
shl
inc
(bad)
enter
ds
shl
sub
stos
mov
jecxz
jecxz
leave
cmps
addr16
mov
inc
ret
std
mov
ss
xchg
sub
es
je
and
pop
sahf
xor
pop
aas
xor
ret
inc
jg
push
test
(bad)
xchg
inc
aas
sahf
shr
mov
add
addr16
cmp
retf
push
shl
fmul
enter
ds
rol
jmp
cmp
lods
std
mov
out
dec
movs
jecxz
add
pusha
and
aad
ds
xor
mov
inc
std
ds
mov
sahf
cmp
ds
inc
out
pop
popf
js
std
xchg
inc
aad
retf
cmp
cli
addr16
sahf
push
std
ds
mov
inc
inc
sub
daa
xor
cmp
aas
inc
stos
pop
popf
jns
ja
mov
add
cmps
out
mov
std
(bad)
mov
imul
sahf
mov
cmp
cmps
ins
jae
cmp
aas
mov
push
ret
inc
mov
jae
mov
push
ds
mov
mov
mov
mov
aas
mov
mov
ins
or
mov
std
pop
js
std
test
aas
sahf
addr16
retf
jae
cmp
aas
mov
push
ret
inc
mov
adc
push
sub
mov
out
mov
std
les
add
(bad)
jecxz
ds
xor
retf
(bad)
enter
ds
rol
mov
pop
jno
cmp
lods
xchg
pushf
sahf
mov
jecxz
retf
mov
jecxz
dec
inc
xor
or
add
xchg
push
int3
je
mov
jmp
shl
jnp
sahf
inc
test
add
arpl
neg
dec
daa
sub
add
mov
std
retf
gs
std
sbb
ds
jmp
sahf
xchg
push
cmp
in
cld
mov
cmp
mov
jecxz
leave
sti
jmp
pushf
js
std
xchg
inc
ror
inc
xor
int3
sti
loop
daa
shl
ds
std
ds
or
sti
loop
jne
xor
int3
sti
fisttp
sbb
sbb
jnp
mov
jae
cmp
mov
(bad)
outs
dec
inc
inc
sub
(bad)
sahf
mov
cmp
mov
ffreep
add
xor
fnstcw
sub
in
mov
std
ret
xchg
ds
mov
retf
cmp
jecxz
test
xchg
jae
cmp
aas
sub
mov
jns
mov
jo
pop
push
outs
int
mov
ds
xor
xchg
mov
out
mov
std
jns
pop
pop
test
xor
mov
mov
sub
leave
ret
xor
xchg
jno
xor
outs
int3
daa
loopne
std
ds
sub
sahf
adc
mov
add
(bad)
outs
sahf
cld
ds
aaa
mov
out
int3
add
xchg
xor
retf
or
xor
xchg
jmp
lods
xchg
bound
enter
jge
sub
mov
stos
inc
jnp
jecxz
mov
and
ds
dec
push
aas
sub
enter
mov
fwait
jle
mov
les
mov
(bad)
enter
inc
aas
sub
enter
inc
aas
xor
retf
ss
sub
mov
cmp
mov
xor
push
aas
sub
mov
loop
pop
sahf
scas
mov
mov
xchg
mov
outs
inc
imul
inc
jle
inc
push
mov
dec
addr16
mov
inc
xor
enter
add
aas
icebp
std
ds
mov
jecxz
jb
sub
es
popf
cld
ds
cmp
ret
inc
xor
(bad)
mov
fld
pop
add
sbb
std
ds
mov
pop
mov
std
rol
std
int3
add
in
inc
jecxz
retf
pop
mov
mov
mov
cmp
mov
sub
cld
mov
retf
popa
int3
mov
push
enter
mov
icebp
mov
inc
inc
in
inc
mov
add
add
xchg
mov
loop
inc
aas
bound
sahf
adc
push
retf
mov
movs
(bad)
jecxz
add
outs
jmp
cmp
inc
jmp
jecxz
leave
cld
pop
push
retf
sub
icebp
ret
inc
fist
mov
push
daa
sbb
inc
xor
add
push
fisttp
cmps
(bad)
ds
shl
je
inc
fild
cmp
dec
idiv
aas
popa
cli
retf
std
mov
outs
(bad)
cmp
jmp
push
sub
cmp
idiv
fmul
ds
pop
inc
retf
xchg
ins
inc
cmp
sub
sti
fisttp
cmp
cld
mov
jecxz
jae
sub
push
cmp
aas
sub
cmp
sub
mov
inc
lock
pop
inc
xor
int3
cld
or
push
or
in
xchg
push
outs
add
mov
xchg
push
add
mov
dec
ds
in
imul
inc
xor
add
sti
out
pop
push
inc
pop
or
std
xchg
inc
rcl
adc
push
xchg
cmp
mov
loope
cmp
sub
mov
or
int3
(bad)
repz
(bad)
mov
cmp
push
retf
push
aas
mov
mov
jmp
outs
dec
pop
inc
fisttp
ds
cld
(bad)
out
in
inc
loope
cmp
cld
or
push
or
in
xchg
push
outs
add
ds
cld
mov
retf
push
add
in
arpl
in
std
xchg
inc
aad
xor
aad
push
addr16
sub
jp
pop
or
add
sub
and
dec
retf
push
addr16
sub
enter
pop
and
or
push
jb
sbb
sub
outs
dec
pop
loope
dec
xchg
inc
std
cld
xchg
out
into
and
retf
push
xchg
loope
mov
xor
inc
mov
dec
pushf
inc
xor
int3
or
push
xchg
mov
sbb
mov
(bad)
cmp
adc
arpl
ror
or
mov
inc
sub
xchg
inc
xor
retf
mov
jge
jl
mov
inc
aaa
sub
test
push
(bad)
mov
imul
(bad)
sahf
out
call
test
enter
dec
out
ins
or
adc
xchg
outs
dec
pop
or
mov
xor
inc
sti
fild
aaa
loope
cmp
lock
in
mov
ret
mov
aas
sub
inc
ja
inc
addr16
ds
mov
xchg
outs
call
add
mov
sub
mov
in
pop
outs
add
test
inc
sub
sti
(bad)
and
addr16
sahf
out
ds
rol
push
retf
or
mov
(bad)
ds
fisttp
daa
mov
hlt
dec
retf
fistp
test
xor
mov
pop
popf
js
std
xchg
inc
ror
inc
sub
xchg
inc
aad
daa
(bad)
dec
cli
ds
jnp
mov
jb
lds
mov
addr16
mov
inc
aaa
adc
shl
cs
aas
sahf
out
mov
mov
mov
imul
lea
test
(bad)
jecxz
test
jo
dec
push
jno
dec
sahf
mov
inc
dec
jl
cli
inc
cmp
sub
gs
cmps
in
retf
add
in
cdq
jecxz
retf
cld
mov
out
pop
out
(bad)
sahf
(bad)
or
mov
jae
mov
out
ds
cld
push
into
xor
cli
aas
inc
xor
daa
mov
xor
ds
xor
daa
lods
outs
std
ds
xor
test
sbb
aas
mov
std
pop
js
std
imul
cs
aas
sahf
dec
mov
mov
dec
xchg
and
in
aas
jecxz
retf
xchg
push
int3
daa
xchg
push
xor
xchg
in
test
sub
inc
jge
in
add
jecxz
test
jecxz
inc
jmp
jecxz
test
jecxz
enter
pop
outs
loop
popf
inc
and
(bad)
test
loop
pop
mov
fst
rol
inc
mov
adc
mov
mov
cld
jecxz
pop
lds
inc
dec
sub
xor
mov
dec
or
retf
xchg
push
test
lods
mov
xor
sbb
imul
sub
rcr
int3
sti
ret
push
inc
mov
mov
cld
jecxz
mov
jo
pop
push
jecxz
cmp
sub
xor
jg
push
aas
or
ret
push
int3
sti
out
push
(bad)
mov
push
ds
jecxz
test
sub
test
loop
inc
mov
mov
cmp
jb
or
adc
or
(bad)
movs
repz
mov
dec
out
xchg
mov
mov
cld
jecxz
aas
mov
or
das
push
cmp
push
cmps
cmp
pop
push
int3
sti
sar
mov
xor
push
ret
aas
cmp
sub
les
mov
lods
ror
mov
aaa
sar
aas
mov
push
ds
cld
push
fidiv
inc
aas
inc
aam
aas
mov
std
jns
pop
daa
pop
(bad)
cmp
sub
cld
push
ret
aas
icebp
test
or
cmp
cld
ds
std
push
call
dec
mov
or
sub
cld
push
push
cmp
lods
rol
mov
cmp
stos
push
sub
rcr
pop
add
jecxz
inc
or
dec
cmps
imul
arpl
push
cmc
mov
dec
add
mov
sbb
or
inc
jbe
adc
icebp
fidiv
and
push
daa
and
std
cmp
pop
and
push
ds
fwait
push
test
and
or
jecxz
test
pop
push
test
add
jecxz
sbb
sub
popf
adc
rol
mov
sub
dec
test
jecxz
pop
(bad)
push
mov
(bad)
ss
aas
add
hlt
popf
or
sub
popf
js
std
xchg
sahf
pop
sbb
mov
out
les
cmp
sbb
dec
mov
dec
arpl
movs
jne
mov
or
or
or
bswap
push
push
addr16
push
jecxz
dec
sahf
out
mov
test
sahf
mov
ds
mov
xor
outs
inc
arpl
sub
(bad)
cld
repz
aas
sub
enter
test
ins
inc
pop
jge
and
jecxz
leave
jl
rol
mov
sahf
xor
inc
arpl
int3
xor
retf
rol
inc
arpl
pop
push
mov
push
arpl
mov
and
lods
mov
add
xor
mov
(bad)
movs
or
inc
and
dec
pop
aas
xor
xchg
sti
sub
es
xchg
cld
ds
cmp
das
jge
mov
cld
jecxz
ds
popa
push
enter
inc
sahf
movs
(bad)
ds
dec
cmp
hlt
xchg
aas
bound
daa
inc
jb
ds
xor
sahf
adc
xchg
std
ds
std
mov
out
ja
loop
cwde
js
std
cmp
sub
push
daa
nop
mov
ds
rol
dec
arpl
cmp
retf
or
ja
aad
lahf
out
in
lods
mov
cmp
add
pop
inc
pop
add
jecxz
mov
out
dec
push
loop
cwde
js
std
leave
div
rcl
outs
out
xchg
inc
bound
jp
pop
inc
ret
std
mov
retf
mov
sub
mov
mov
clc
retf
cmp
out
mov
outs
int3
ds
cmp
dec
inc
cli
push
pop
std
xchg
push
outs
(bad)
les
dec
std
ds
inc
push
enter
popf
adc
mov
icebp
popa
push
mov
outs
add
mov
bound
clc
jo
aas
bound
enter
popf
js
std
xchg
or
outs
out
les
clc
mov
mov
jo
js
mov
inc
loope
mov
inc
cmp
retf
into
xchg
or
sub
adc
push
inc
(bad)
mov
adc
push
aas
or
mov
cmp
jb
inc
sub
inc
jge
inc
push
sub
mov
jecxz
mov
mov
jecxz
arpl
xor
or
xor
mov
sub
xchg
mov
addr16
mov
push
retf
jne
sub
mov
lock
mov
data16
mov
add
mov
push
(bad)
test
dec
pop
daa
add
pop
adc
jl
add
jle
pop
popf
adc
mov
or
add
enter
mov
sub
ss
int3
xor
xchg
push
ins
jl
adc
loop
mov
cmps
push
aas
sahf
and
mov
mov
xchg
inc
inc
push
xchg
cmp
add
cmps
pop
push
test
mov
std
shl
or
test
test
push
mov
mov
sub
mov
cld
sti
jae
inc
cli
dec
retf
push
mov
or
add
aas
out
push
inc
sub
retf
add
icebp
stos
jno
inc
movs
add
aas
in
addr16
std
mov
outs
jl
loope
adc
cld
test
retf
dec
pop
mov
ins
jmp
in
push
inc
in
push
inc
pop
pushf
js
std
xchg
sahf
icebp
jl
mov
out
les
int3
ds
xchg
(bad)
ds
mov
cmps
cmp
cld
mov
jmp
(bad)
sbb
inc
mov
mov
aaa
rcl
inc
mov
push
xchg
or
aaa
xchg
jecxz
test
in
ds
sub
mov
ss
cmps
sub
std
ds
cli
ds
mov
shl
push
stc
mov
jo
(bad)
ins
pop
aaa
sub
mov
sub
retf
cmp
sub
add
mov
std
(bad)
mov
cmps
out
mov
outs
rol
repz
pop
or
scas
out
inc
cmp
add
cmp
jb
inc
arpl
shl
sub
std
ds
dec
dec
jae
cld
ds
adc
or
(bad)
xchg
or
pop
repnz
(bad)
push
test
pop
add
sti
fild
aas
sub
addr16
mov
cli
ds
xchg
push
test
in
xor
pop
call
jmp
and
les
adc
sub
mov
lods
std
mov
loop
inc
mov
mov
mov
call
jb
jecxz
dec
mov
push
daa
fwait
loop
adc
dec
test
jecxz
loopne
out
aas
aas
sub
ds
and
rcr
mov
mov
out
test
lock
mov
int3
mov
mov
or
addr16
ds
xor
retf
(bad)
enter
ds
ror
mov
inc
aas
or
arpl
cmp
mov
int3
cmp
sub
out
xor
std
les
dec
jb
imul
mov
xor
jmp
fild
xor
retf
das
push
test
or
les
pop
cmp
cld
jecxz
jmp
adc
cmp
or
xchg
push
test
add
das
or
adc
or
(bad)
out
jecxz
jle
adc
out
sub
stos
pop
popf
adc
rol
(bad)
push
mov
mov
jns
push
retf
add
int
(bad)
ds
pusha
and
mov
mov
push
in
cmp
sti
jmp
cld
push
xchg
inc
aas
cmp
jl
cmp
(bad)
mov
ins
test
mov
std
sub
loop
jecxz
jecxz
rcr
mov
cld
push
xchg
inc
aas
and
in
loope
std
popf
adc
add
inc
ins
jle
mov
or
jmp
push
test
aas
mov
ds
(bad)
mov
outs
(bad)
cmp
push
call
xchg
sub
add
mov
dec
pop
js
std
leave
aas
mov
ds
(bad)
mov
outs
dec
arpl
loop
sub
or
ds
in
mov
mov
jg
or
mov
jb
mov
out
(bad)
js
std
leave
cli
pop
add
mov
push
int3
outs
aam
ds
bswap
mov
call
jp
jbe
add
inc
mov
addr16
push
inc
pop
add
jno
inc
or
out
(bad)
mov
push
retf
in
jns
std
ret
std
mov
retf
sbb
mov
ins
inc
inc
adc
rol
push
retf
adc
xor
outs
jb
ret
arpl
outs
int3
daa
ins
jecxz
ds
outs
int
int3
cmps
std
cmp
ds
pop
ds
loop
add
sub
ja
push
or
int
sbb
ror
mov
cmp
push
xchg
inc
aad
mov
mov
push
daa
bound
(bad)
ds
aam
xor
sti
repz
push
dec
add
or
adc
sub
xchg
inc
fdivr
push
mov
mov
mov
mov
jo
das
push
fcomp
push
mov
test
int3
sti
sar
cmc
inc
in
ds
jecxz
dec
mov
push
ds
adc
mov
mov
mov
jecxz
retf
cmp
cld
ds
(bad)
aas
mov
dec
ds
in
(bad)
jecxz
les
adc
sub
mov
mov
std
ds
push
(bad)
mov
push
daa
mov
cmps
push
aas
or
xchg
or
jae
jmp
sbb
mov
outs
or
add
jp
pop
add
popa
adc
pop
xor
arpl
out
popa
push
dec
je
and
je
and
sti
idiv
inc
xor
retf
cmp
dec
retf
or
mov
aad
(bad)
repnz
lods
fs
jmp
add
stc
arpl
retf
mov
sahf
mov
mov
inc
bnd
fistp
leave
cld
in
outs
xor
cmp
clc
cmp
xor
in
or
jbe
out
mov
addr16
cld
sub
test
pop
add
mov
outs
dec
dec
inc
call
mov
or
sub
xchg
mov
and
aaa
mov
fidivr
jp
inc
call
mov
jmp
test
scas
push
daa
sub
std
ds
hlt
std
retf
cli
pop
or
(bad)
cld
mov
repz
mov
std
add
jecxz
and
sub
bound
mov
aas
pop
out
push
mov
data16
mov
sub
mov
or
outs
dec
xor
xchg
std
ds
mov
std
sub
sub
mov
aas
pop
out
push
mov
data16
mov
lock
jecxz
mov
push
sahf
ds
dec
xor
xchg
std
ds
push
retf
jnp
loope
adc
sub
cld
mov
loop
dec
mov
push
daa
adc
inc
mov
push
ds
pushf
(bad)
ds
call
or
push
xchg
cld
jecxz
mov
xrelease
push
outs
(bad)
ds
jne
mov
mov
je
std
ds
jecxz
arpl
dec
xchg
jecxz
mov
loop
retf
push
test
mov
pop
popf
js
std
test
inc
aas
sahf
scas
cmps
cmp
cmps
ins
jae
jge
and
movs
mov
in
push
jecxz
ret
std
retf
jg
mov
mov
jecxz
ds
shl
add
js
std
xchg
inc
ror
push
cs
mov
sub
cmp
or
mov
push
ds
cld
mov
retf
or
jns
in
mov
loop
push
clc
xchg
or
ds
test
ds
push
retf
jae
mov
mov
dec
inc
in
mov
loop
div
cmp
(bad)
jecxz
aas
inc
in
mov
idiv
mov
idiv
mov
idiv
mov
mul
push
aam
xchg
hlt
std
not
sub
out
cmp
cmps
ins
jae
jge
icebp
std
cld
jecxz
movs
mov
in
push
jecxz
ret
std
retf
mov
mov
mov
jecxz
ds
shl
sub
scas
movs
cmp
or
out
enter
movs
mov
and
inc
aas
jge
out
ja
inc
repz
mov
test
jae
aas
mov
jbe
mov
add
mov
in
retf
add
out
das
loop
int3
sti
mov
test
mov
ror
mov
fmul
fcomi
int3
add
xchg
aas
sub
daa
icebp
int
ds
sub
push
sti
retf
inc
repnz
jecxz
mov
retf
dec
sub
outs
les
mov
std
pop
jns
mov
sahf
idiv
ds
inc
arpl
int3
dec
push
mov
mov
jge
xor
cld
jecxz
mov
xor
push
and
aas
jns
mov
mov
mov
sub
mov
sbb
inc
sub
inc
and
cld
mov
xrelease
mov
mov
mov
std
shr
jae
and
in
xor
std
les
jb
cmp
rcl
std
add
mov
call
enter
arpl
outs
adc
test
mov
cld
rcl
std
ds
and
mov
sub
cmps
push
aas
inc
in
aas
mov
and
jge
ds
mov
mov
std
shr
jb
inc
in
inc
jmp
outs
jmp
mov
jecxz
iret
push
in
ds
std
mov
push
ds
mov
cmps
add
outs
cmp
test
jecxz
sub
cmp
cmp
jecxz
sub
(bad)
lods
sti
std
ds
mov
aaa
sahf
lods
mov
(bad)
repnz
or
mov
jecxz
movs
mov
mov
mov
mov
jecxz
pop
inc
sub
ds
adc
mov
mov
jecxz
mov
xchg
neg
mov
retf
dec
cmp
sbb
ds
add
xor
fmul
enter
ds
rcl
mov
or
jecxz
sub
(bad)
es
std
ds
fmul
mov
dec
xchg
inc
mov
cld
mov
loop
sbb
sub
leave
std
jmp
mov
jmp
(bad)
sti
fisttp
mov
loop
aas
or
(bad)
popf
adc
rol
mov
cmp
sbb
sti
repz
push
jb
dec
jo
sti
jecxz
sub
inc
into
retf
add
jecxz
or
mov
(bad)
ds
xor
inc
and
xchg
cld
jecxz
loopne
jecxz
cmp
or
retfw
std
(bad)
sti
(bad)
mov
loop
dec
gs
js
out
or
inc
in
or
data16
jecxz
cmp
inc
lods
mov
out
retf
xchg
and
mov
cld
jecxz
int
jecxz
cmp
aas
sub
xchg
or
mov
cld
mov
loop
js
fistp
inc
sub
(bad)
mov
cli
cmps
dec
in
ds
sbb
(bad)
jecxz
dec
inc
sub
ds
dec
ds
out
push
test
loop
cmp
outs
dec
and
sub
retf
mov
jo
inc
mov
jmp
dec
sti
fistp
adc
mov
pop
aaa
push
xchg
inc
and
xchg
cld
jecxz
aas
inc
mov
(bad)
ds
jno
mov
mov
cmp
jl
ja
add
jbe
and
sahf
outs
mov
or
data16
add
push
cmp
jl
inc
popa
cli
ds
outs
leave
daa
push
loope
cmp
retf
xor
ds
mov
sahf
sub
ds
lds
pop
(bad)
int3
sbb
pop
popf
adc
mov
pop
xor
out
je
std
int3
sti
fisttp
dec
mov
or
pop
loop
ds
mov
dec
cmp
jecxz
inc
les
mov
mov
lds
aas
mov
xor
repnz
xor
dec
test
ds
std
mov
loop
add
sub
mov
ins
inc
aaa
jmp
jmp
xchg
push
and
ds
lds
jge
or
xchg
jecxz
retf
lahf
cmp
jecxz
or
mov
cmp
or
(bad)
movs
pop
in
add
xchg
push
imul
mov
je
mov
cmp
lock
mov
outs
int3
daa
jnp
std
mov
lahf
nop
ds
pop
pop
inc
mov
mov
jecxz
dec
ins
movs
or
mov
(bad)
xchg
push
outs
inc
aaa
push
cmc
(bad)
ds
outs
pop
mov
pop
sub
jbe
ds
mov
mov
cmp
cmps
jecxz
dec
mov
or
sub
std
cmp
aas
sub
cld
mov
outs
int3
ds
cld
mov
retf
aad
mov
jmp
xchg
dec
jecxz
popf
jg
or
pop
addr16
mov
cmp
inc
mov
mov
inc
aas
jmp
cmp
mov
je
mov
std
mov
outs
(bad)
ds
cmps
push
test
jecxz
ret
xchg
shl
std
ds
sub
ret
or
(bad)
in
ds
add
jmp
int3
daa
stos
sahf
std
ds
in
push
retf
add
sbb
cmp
(bad)
mov
std
cmp
icebp
test
sbb
jno
jmp
jmp
xchg
push
and
ds
ret
mov
sub
retf
cmc
cmp
aaa
out
mov
std
retf
mov
mov
mov
ret
jecxz
data16
dec
retf
push
cmps
(bad)
in
ds
sbb
lea
jmp
jbe
push
(bad)
ss
inc
or
les
add
lods
sahf
xor
ds
mov
ret
add
inc
mov
shl
ds
or
mov
cmp
in
jg
mov
ss
call
cmp
int3
xlat
cmp
or
ds
ret
in
push
retf
adc
popf
shr
daa
test
mov
aas
or
sbb
push
mov
std
cmp
mov
iret
mov
mov
pop
pushf
adc
mov
sahf
mov
idiv
sub
or
mov
mov
ds
fimul
inc
mov
adc
movs
dec
test
mov
cld
mov
loop
sbb
sub
jno
inc
rol
mov
sahf
jg
ds
int3
daa
dec
popf
std
ds
dec
jnp
pop
sbb
test
cwde
cmp
xor
aas
push
test
ds
je
mov
fst
cmps
push
aas
or
mov
jmp
jecxz
out
pop
daa
test
mov
cmp
pop
or
out
add
inc
jge
add
jecxz
sub
or
retf
inc
inc
aas
sub
dec
mov
and
jmp
push
fs
ds
mov
mov
std
leave
cmps
addr16
ds
cmp
jmp
daa
jmp
std
ds
sahf
adc
push
aas
or
xchg
or
mov
sahf
loopne
ds
ds
loop
dec
inc
jmp
push
mov
push
cmps
inc
in
ds
sahf
aas
mov
call
ret
xchg
in
std
leave
jmp
push
test
in
ds
push
ds
sub
mov
sub
fdiv
add
adc
ret
loop
inc
and
addr16
or
jne
mov
into
add
jle
pop
popf
adc
inc
mov
mov
or
push
retf
jns
mov
cmps
sub
outs
add
inc
push
xchg
ds
mov
mov
std
sub
outs
inc
inc
cmp
std
enter
inc
cmp
aas
inc
sbb
xchg
cld
jecxz
aas
jno
(bad)
ds
(bad)
xchg
mov
sbb
mov
push
cmps
dec
in
ds
sbb
mov
cld
test
ss
mov
into
(bad)
retf
call
sahf
adc
pop
add
jmp
inc
mov
and
jge
ds
mov
mov
std
shr
jb
inc
and
add
pop
and
aad
mov
xrelease
ins
(bad)
ds
mov
mov
std
leave
test
daa
ja
std
ds
stos
pop
popf
js
std
xchg
or
int3
lods
div
or
jo
mov
mov
ja
pop
push
push
mul
(bad)
ds
call
mov
xrelease
aas
sub
enter
sub
push
retf
int3
sub
push
cmps
aaa
in
ds
sahf
aas
mov
mov
cmp
std
mov
push
out
sub
std
cwde
inc
stos
pop
popf
js
std
xchg
inc
rcl
or
call
mov
or
mov
in
gs
mov
std
cmp
mov
pop
retf
xor
ins
inc
inc
sub
and
inc
aas
and
mov
test
ss
mov
loop
js
jmp
je
in
mov
dec
xchg
inc
mov
cld
mov
loop
js
out
jno
mov
push
test
mov
sbb
mov
cmp
mov
std
cmp
inc
sub
sub
inc
pop
pushf
js
std
xchg
or
push
push
inc
aad
inc
push
jge
ds
mov
mov
std
leave
scas
addr16
sub
cmp
ret
jae
and
in
daa
jecxz
les
jb
xlat
sbb
mov
stos
ds
mov
std
mov
mov
push
sub
adc
stc
jmp
inc
inc
mov
fnstenv
test
ds
test
jecxz
inc
or
jns
mov
push
retf
pop
call
mov
(bad)
mov
sahf
xor
ds
lds
cli
(bad)
mov
cli
mov
mov
and
test
ds
nop
fbstp
cmps
push
aas
push
aam
mov
jecxz
sub
dec
hlt
test
jecxz
loope
sahf
inc
aas
jns
mov
mov
and
pop
add
retf
aaa
dec
test
xor
mov
mul
push
xor
mov
loop
jnp
sub
pushf
js
std
xchg
inc
rol
xor
call
inc
aas
inc
sub
retf
mov
movs
xchg
sub
inc
jle
mov
pop
out
pop
dec
add
mov
cmp
js
std
xchg
inc
aad
mov
out
in
mov
pop
push
ret
inc
cld
or
inc
out
inc
aas
jge
cs
mov
std
leave
jl
rol
mov
sahf
clc
std
ds
inc
arpl
int3
popa
scas
mov
push
retf
rol
sahf
mov
jecxz
mov
or
out
enter
inc
out
inc
aas
cmp
aas
cmp
aas
sub
in
mov
loopne
retf
sub
inc
(bad)
enter
ds
rcl
jmp
mov
loop
jg
sub
(bad)
cld
subps
jbe
add
xchg
cld
jecxz
inc
mov
mov
cmp
aas
sub
std
mov
loop
xchg
sub
cmp
(bad)
cld
mov
loop
inc
or
inc
jbe
add
iret
or
retf
daa
push
test
cmp
ds
sub
mov
je
mov
in
cld
jecxz
add
push
ror
pop
adc
push
jns
jns
mov
xor
out
sub
dec
dec
movs
mov
jns
imul
cmps
mov
arpl
inc
sahf
jmp
adc
mov
bound
pushf
jle
jmp
in
pop
loop
add
sub
test
jecxz
add
popf
mov
jecxz
xchg
inc
sahf
jmp
adc
mov
gs
cmps
in
test
pushf
out
jmp
in
pop
loop
add
test
push
add
pushf
mov
jecxz
test
sub
es
cld
ds
dec
push
inc
mov
in
mov
ins
dec
das
jmp
sub
mov
retf
cmc
inc
mov
mov
jecxz
ds
mov
fs
add
lods
test
sub
add
int3
adc
mov
gs
cmps
in
test
pushf
mov
jmp
in
pop
loop
add
fdiv
test
jecxz
add
sahf
mov
jecxz
das
data16
add
int3
adc
mov
arpl
pushf
push
(bad)
jecxz
push
pop
loop
add
adc
test
jecxz
add
sahf
mov
jecxz
dec
sahf
pop
ins
ds
mov
pop
sahf
sbb
ds
xor
jns
into
out
cld
jecxz
neg
inc
aas
jns
jle
cld
jecxz
test
dec
push
daa
mov
movs
push
mov
stos
inc
push
call
shl
xchg
inc
aas
jns
push
out
cld
jecxz
mul
pushf
into
out
cld
jecxz
mul
inc
aas
jns
xchg
cld
jecxz
neg
xchg
inc
aas
jns
mov
push
sub
cld
ds
aam
xor
sahf
mov
add
imul
shl
rcl
jecxz
xor
pop
push
inc
sub
push
clc
test
sahf
out
imul
call
std
outs
sub
test
sub
cld
cmp
aas
jge
int
cld
jecxz
jb
cmps
push
retf
push
aas
mov
repz
(bad)
mov
cmp
es
cld
ds
stos
pop
add
sub
es
ds
ins
dec
das
jge
inc
repnz
jecxz
movs
mov
in
xchg
jecxz
retf
(bad)
enter
ds
shl
xchg
inc
aas
jns
add
mov
out
mov
std
test
dec
push
clc
test
sahf
addr16
mov
data16
sub
es
cld
ds
hlt
inc
into
add
pop
movsx
sti
popf
mov
sub
cld
ds
add
mov
out
mov
std
test
dec
push
clc
push
test
sahf
daa
push
mov
or
(bad)
cmp
ds
hlt
inc
into
add
pop
movsx
sti
popf
mov
sub
cld
ds
push
repz
jecxz
test
xchg
cmp
sahf
push
push
mov
mov
aas
xor
jb
pop
(bad)
enter
inc
sahf
mov
ds
dec
xor
ins
or
mov
std
pop
jns
ds
cld
jecxz
mul
inc
aas
sahf
ja
cmp
pop
popf
inc
aas
sahf
punpckhdq
sub
xor
icebp
rol
retf
mov
mov
lds
sahf
inc
aas
inc
stos
mov
jecxz
ds
rcl
jecxz
xor
pop
push
inc
sub
push
clc
pop
popf
inc
aas
sahf
pop
push
mov
les
lds
outs
cld
mov
mov
out
mov
std
daa
(bad)
and
jnp
mov
stos
mov
shl
jle
cmp
mov
in
push
ss
popf
loopne
jecxz
neg
inc
aas
lahf
aas
imul
sahf
jnp
ds
dec
push
daa
test
lods
xchg
ins
inc
cmp
jmp
std
leave
add
(bad)
enter
ds
shr
jecxz
jmp
jmp
aas
xchg
lahf
inc
aas
jns
mov
daa
xlat
idiv
lods
sub
inc
mov
add
sahf
lods
add
mov
les
sahf
lahf
inc
aas
jns
xchg
cld
jecxz
neg
mov
ds
cld
jecxz
not
lahf
inc
aas
jns
add
mov
out
mov
std
add
dec
cli
test
jecxz
add
mov
dec
mov
mov
(bad)
sub
es
jp
ds
dec
push
daa
or
std
ds
lods
xchg
ins
inc
cmp
jmp
std
retf
(bad)
enter
ds
shl
movs
inc
aas
jns
mov
ds
add
mov
(bad)
sahf
js
inc
or
out
daa
leave
jecxz
lods
sub
inc
mov
add
sahf
add
aas
mov
les
push
inc
aas
sahf
ret
xchg
cmp
cmps
cmp
lahf
js
dec
inc
mov
ds
arpl
mov
mov
ret
jg
adc
mov
dec
xchg
inc
repz
jmp
inc
and
cld
(bad)
mov
and
cld
jecxz
jmp
out
lea
imul
jb
push
jecxz
retf
xor
data16
movq
adc
jecxz
ds
shl
loopne
mov
jecxz
daa
mov
in
ds
data16
sub
es
push
ds
mov
jo
(bad)
daa
mov
std
ds
fild
jb
jno
jnp
jecxz
mov
ins
dec
arpl
xor
enter
inc
cmp
mov
cld
int3
ds
aas
mov
dec
inc
aas
xor
mov
push
cmps
inc
aas
jge
es
mov
std
add
mov
xchg
jge
cs
mov
std
add
mov
std
ds
add
or
out
daa
leave
jecxz
lods
sub
inc
mov
add
sahf
fadd
aas
mov
les
mov
aas
sahf
fwait
xchg
cmp
cmps
cmp
cmps
js
dec
inc
sub
aas
mov
inc
cmp
lods
jb
inc
in
inc
mov
mov
and
std
ds
mov
or
std
mov
jp
dec
mov
dec
ds
lock
lods
jb
inc
in
inc
mov
add
inc
push
push
aas
mov
adc
mov
mov
icebp
std
ds
mov
movs
sbb
cmps
inc
aas
jge
or
test
cmps
sti
jecxz
xchg
inc
aad
push
mov
std
xor
pop
push
inc
sub
push
daa
jmp
std
ds
stos
pop
add
sub
es
aaa
push
retf
jae
jge
ins
add
jecxz
(bad)
retf
cmp
aas
jb
inc
in
ds
outs
dec
push
cmp
push
ds
outs
dec
pop
cmp
push
ds
outs
dec
pop
cmp
push
ds
outs
dec
arpl
lods
jb
inc
in
ds
outs
dec
ja
lods
jb
cmp
aas
sub
in
sbb
std
(bad)
sahf
pop
data16
mov
add
or
jmp
inc
xor
les
add
mov
std
(bad)
mov
lods
jb
inc
in
ds
call
pop
mov
mov
mov
jmp
(bad)
ds
shl
mov
sar
sahf
inc
aas
lahf
mov
aas
mov
mov
sti
jecxz
cmp
(bad)
es
jmp
add
jbe
or
aas
outs
fdivr
inc
mov
shl
jecxz
ds
dec
icebp
ds
jecxz
pop
sahf
xor
aas
mov
push
retf
inc
pop
push
jecxz
imul
inc
jbe
and
cld
inc
inc
push
jecxz
inc
cmp
aas
inc
sub
les
or
mov
fs
mov
shr
jecxz
jmp
in
mov
sahf
push
cld
ds
xor
jns
data16
jecxz
es
std
ds
aam
xor
inc
mov
mov
mov
outs
les
jns
mov
sahf
idiv
ds
inc
arpl
int3
lods
aas
mov
mov
lahf
xchg
sti
ds
adc
ror
cmp
daa
addr16
ds
mov
xchg
jecxz
cmps
cmps
jmp
aas
sahf
inc
sar
cmps
mov
mov
sbb
enter
inc
mov
pinsrw
aaa
xchg
inc
pop
and
mov
mov
aas
in
pop
cmp
add
mov
add
lea
mov
imul
inc
out
add
in
popf
js
std
xchg
mov
and
and
push
xchg
xor
xor
jecxz
retf
rol
jp
mov
pop
and
stc
and
inc
mov
mov
jmp
ins
inc
push
jge
push
inc
mov
std
(bad)
cld
out
test
ins
inc
dec
aas
sub
ds
mov
idiv
aas
jmp
mov
inc
pop
push
jecxz
das
or
dec
jl
rcl
data16
sub
dec
ds
mov
test
movs
jb
inc
pop
add
sahf
mov
aas
mov
std
retf
jmp
cld
repz
sti
dec
ds
mov
not
cld
jecxz
ds
retf
push
test
jecxz
sub
sub
popf
adc
dec
nop
or
mov
or
ins
inc
arpl
loop
out
sub
leave
and
mov
ret
outs
inc
dec
lods
call
mov
mov
addr16
adc
outs
inc
dec
cmp
inc
std
mov
loopne
xor
loopne
retf
dec
in
ds
sub
ret
cmp
pop
adc
jnp
fiadd
dec
add
jecxz
push
div
inc
aas
mov
mov
(bad)
xchg
mov
inc
xchg
cld
jecxz
add
out
aas
mov
fiadd
aaa
std
push
mov
add
cld
jecxz
sbb
cmp
(bad)
cld
mov
loop
pop
pop
sub
mov
idiv
push
bound
inc
aas
sahf
jnp
ds
jb
(bad)
loop
retf
inc
inc
inc
lods
or
pop
mov
movs
fild
dec
dec
mov
ret
inc
push
enter
jp
lock
inc
sub
(bad)
cld
out
mov
mov
jb
(bad)
jo
aaa
inc
sub
(bad)
cld
jmp
push
bound
inc
aas
inc
stos
pop
popf
adc
jmp
jno
pop
push
ins
inc
cmp
jecxz
mov
outs
pop
inc
cmp
jb
icebp
inc
push
mov
inc
lock
les
add
mov
(bad)
cmp
cmp
xchg
aas
inc
pop
add
lods
pop
fcmovne
std
repz
mov
and
mov
add
mov
test
popf
adc
mov
pop
aaa
push
retf
std
jne
stc
lds
cmp
jb
inc
sub
int3
adc
outs
mov
mov
cmp
std
mov
jb
ds
mov
fidivr
dec
scas
iret
add
addr16
mov
gs
mov
pop
inc
inc
sub
(bad)
aas
popa
cli
ds
mov
mov
mov
mov
mov
bound
inc
aas
inc
sub
les
bswap
cld
out
mov
aas
mov
fst
inc
xor
test
pop
xor
push
xor
xchg
pop
add
out
sub
ds
out
pop
pop
lods
std
ds
add
pop
outs
dec
dec
and
mov
xor
call
cld
out
add
ins
add
xchg
or
or
mov
jae
or
std
xchg
inc
aad
push
mov
std
xor
pop
push
inc
sub
push
daa
fwait
loopne
ds
stos
pop
add
ror
or
jae
or
inc
aaa
mov
xor
mov
outs
dec
dec
out
daa
test
data16
mov
sbb
sbb
(bad)
sub
outs
inc
dec
inc
lock
jg
add
mov
(bad)
cmp
cmp
mov
std
push
jl
xor
jno
inc
pop
sbb
cld
jecxz
int3
add
in
mov
std
xchg
mov
test
mov
loop
or
inc
lods
pop
push
retf
dec
test
push
test
retf
mov
test
cmps
push
aas
or
mov
inc
inc
sbb
cld
jecxz
mov
shl
xor
retf
stos
dec
test
loop
arpl
outs
int3
(bad)
sahf
push
std
ds
sbb
cld
test
retf
mov
mov
cmp
stos
jae
adc
ss
aas
adc
rol
push
retf
cmp
dec
mov
lods
jae
outs
lock
les
pop
daa
xchg
(bad)
ds
lods
jmp
dec
mov
dec
cli
ds
add
aas
inc
sbb
outs
mov
lds
sub
cmp
imul
mov
iret
add
imul
arpl
outs
or
sub
std
jbe
jl
ds
les
or
out
retf
mov
inc
jno
inc
jg
add
sahf
(bad)
cli
ds
and
adc
mov
jmp
(bad)
shl
ds
xor
out
jb
ins
arpl
out
and
and
in
ret
(bad)
xor
aaa
jge
jmp
add
add
std
test
mov
mov
xor
sahf
adc
xchg
std
adc
push
daa
sbb
loop
xchg
sahf
mov
cmp
pop
addr16
aas
sub
mov
sub
retf
xchg
push
pop
retf
mov
in
dec
jg
mov
inc
aas
cmp
and
pop
and
pop
cld
ds
push
aas
cmp
add
jmp
std
mov
loop
inc
jno
(bad)
mov
outs
or
sub
or
test
or
cli
jmp
std
add
lds
push
cmps
inc
aas
jns
mov
sahf
retf
or
mov
inc
arpl
int3
jne
mov
mov
outs
ins
inc
test
jecxz
xchg
or
out
xchg
aas
pop
out
daa
addr16
lds
cmps
inc
aas
out
pusha
push
enter
dec
mov
push
daa
shl
ds
inc
mov
out
mov
mov
mov
push
xlat
std
test
jecxz
es
std
ds
push
add
retf
pop
push
test
stc
fst
stos
ins
inc
imul
add
xor
xchg
inc
in
ds
mov
xchg
mov
std
(bad)
je
(bad)
ds
mov
movs
aas
mov
arpl
je
(bad)
ds
jl
aas
mov
xchg
push
in
ds
mov
xchg
dec
in
ds
mov
xchg
push
std
ds
mov
xchg
cmp
std
ds
mov
mov
std
inc
mov
mov
aas
icebp
std
ds
mov
jecxz
retf
push
aas
mov
repz
(bad)
mov
cmp
pop
push
jecxz
cwde
inc
stos
pop
add
sahf
inc
aas
cmp
jle
mov
std
retf
aaa
fs
ds
add
(bad)
and
inc
ins
jle
mov
or
in
mov
in
pop
into
add
xchg
cmps
push
(bad)
sub
mov
aaa
push
retf
jae
jge
push
add
jecxz
int
in
ds
inc
cli
mov
outs
jmp
inc
jb
aas
mov
cmp
sub
mov
in
(bad)
ss
ss
retf
retf
mov
mov
outs
jmp
aas
add
jmp
mov
inc
aas
icebp
scas
jb
inc
in
inc
mov
add
shl
mov
shl
pop
add
sahf
sub
ds
test
mov
std
jns
pop
add
sahf
sbb
ds
mov
data16
ds
sub
movs
icebp
cmps
jb
push
jecxz
movs
inc
push
aas
mov
arpl
pop
add
(bad)
in
ds
outs
jmp
sahf
(bad)
hlt
ds
inc
dec
icebp
xor
mov
push
add
pop
jbe
dec
pop
cld
ds
jp
inc
pop
cld
ds
xchg
mov
in
sub
jo
ds
jb
mov
std
cmc
inc
in
ds
dec
jne
mov
dec
cmp
mov
popf
fmulp
mov
mov
mov
icebp
std
ds
mov
outs
out
retf
(bad)
ds
(bad)
mov
outs
(bad)
cmp
push
std
cmp
add
jecxz
jg
sub
leave
test
adc
add
out
retf
(bad)
ds
mov
dec
mov
fscale
ds
adc
sub
mov
mov
test
mov
std
ret
jbe
add
xchg
ja
cmps
mov
js
inc
sahf
jmp
(bad)
ds
shl
scas
js
mov
sar
sahf
inc
aas
lahf
mov
inc
add
jecxz
test
mov
cmp
pop
push
retf
xchg
mov
cmps
mov
jp
inc
or
push
cli
jmp
in
adc
std
retf
hlt
mov
outs
int3
daa
sub
std
ds
lods
add
jecxz
add
adc
push
retf
push
aas
mov
repz
(bad)
mov
cmp
es
stos
pop
add
jecxz
imul
int3
add
mov
out
mov
std
test
dec
push
clc
push
lahf
inc
aas
sahf
retf
pop
cmp
shr
fstp
ds
hlt
inc
push
lahf
inc
aas
mov
movsx
xor
xchg
jno
(bad)
daa
sahf
inc
cld
ds
mov
idiv
cmp
aas
mov
push
xchg
or
sub
dec
jne
mov
pop
cmp
push
enter
inc
and
int3
stc
fisttp
add
add
scas
outs
les
mov
fiadd
fld
cmp
jecxz
mov
and
jp
bound
enter
mov
cmp
mov
std
aas
mov
dec
daa
jle
cld
ds
sub
ret
cmp
stos
inc
cmp
inc
aas
xchg
or
push
sti
fild
aas
mov
mov
sti
push
std
ds
inc
cmp
fs
ins
in
pop
mov
cli
jb
fcmovne
leave
sub
out
add
xchg
jno
scas
mov
std
(bad)
and
addr16
mov
repnz
mov
leave
(bad)
cld
jecxz
popf
cmp
cdq
sub
and
stc
imul
jns
mov
sahf
push
push
aas
mov
inc
arpl
int3
push
fwait
mov
push
retf
rol
fimul
ds
nop
or
out
enter
popf
pop
jecxz
jb
outs
int3
enter
inc
jle
inc
aas
aas
sub
cld
xor
dec
mov
std
leave
add
mov
mov
std
ds
push
retf
xor
inc
sub
xor
dec
enter
mov
aas
bound
enter
push
sahf
cmp
bound
xor
lds
mov
pop
add
lds
sahf
repnz
mov
xchg
inc
jmp
aad
loop
jecxz
xor
pop
push
inc
sub
push
daa
mov
stos
pop
add
pop
pop
ds
mov
aas
push
lods
inc
aas
cmp
jns
mov
test
sub
cld
cmp
aas
jge
mov
cld
jecxz
jb
cmps
push
retf
push
aas
mov
repz
(bad)
mov
cmp
es
cld
ds
stos
pop
add
sub
and
ds
ins
dec
das
jge
cdq
pop
cld
jecxz
movs
mov
in
jcxz
retf
(bad)
enter
ds
shl
lods
inc
aas
jns
add
mov
out
mov
std
test
dec
push
clc
ds
inc
aas
sahf
push
pop
cmp
ret
es
cld
ds
hlt
inc
ss
inc
aas
mov
movsx
arpl
(bad)
jno
(bad)
daa
es
ds
adc
data16
cmp
daa
enter
jns
mov
xchg
jecxz
cmps
outs
in
inc
aas
sahf
(bad)
mov
mov
push
ds
mov
pop
sahf
and
mov
xor
jns
out
dec
(bad)
jecxz
sub
aam
xchg
jecxz
test
pushf
ss
jecxz
mul
lods
inc
aas
jns
out
or
jecxz
daa
mov
in
ds
test
sub
rcr
(bad)
mov
jno
(bad)
daa
mov
std
ds
mov
ds
inc
daa
xor
std
cmp
inc
stc
loop
add
mov
mov
cld
jecxz
aas
mov
fs
mov
dec
ds
std
xor
jmp
scas
mov
aam
ds
ds
cmp
dec
aas
push
enterw
mov
xrelease
retf
mov
lods
out
mov
std
es
std
ds
adc
adc
add
ja
std
ds
push
add
jecxz
retf
jmp
cmp
ds
test
dec
mov
(bad)
std
jmp
test
ins
inc
dec
inc
imul
(bad)
mov
ds
mov
xor
jecxz
test
das
loop
mov
aas
sub
int3
cmp
cld
ds
dec
int3
cmp
sti
ds
out
mov
std
jno
sbb
std
mov
jo
aaa
mov
std
(bad)
sahf
jo
cmp
ds
ds
inc
jbe
call
jecxz
cmps
mov
std
ds
dec
(bad)
push
mov
in
imul
pop
int3
cmp
cli
ds
jmp
aas
mov
in
inc
loop
cwde
aas
sub
cld
pop
xchg
mov
std
retf
je
(bad)
ds
pop
retf
xchg
sub
xchg
mov
stc
xchg
cld
jecxz
les
int3
sbb
inc
ss
(bad)
xchg
cmp
std
mov
jo
aaa
mov
std
cmps
push
mov
aas
push
jecxz
xor
sub
retf
cmp
cld
ds
out
inc
loop
cwde
aas
push
aas
mov
pop
popf
adc
and
outs
cld
mov
inc
jmp
sub
cmp
in
push
daa
sub
movq
xchg
sahf
cmps
cmp
mov
std
mov
cmp
push
fidiv
inc
aas
test
sub
adc
mov
adc
call
fwait
push
cld
jecxz
mov
or
out
enter
inc
xchg
lahf
inc
aas
inc
sub
ret
inc
jbe
add
sub
xor
add
mov
dec
xor
xchg
std
ds
mov
add
(bad)
es
addr16
ds
ins
dec
das
jge
inc
pop
cld
jecxz
push
inc
sbb
inc
jbe
pop
retf
cmp
out
cmovno
repnz
mov
mov
out
test
jecxz
push
stos
jecxz
add
int3
(bad)
ds
shl
push
jb
mov
sar
lahf
inc
aas
lahf
jnp
ds
add
mov
out
mov
std
add
in
test
jecxz
add
mov
cmp
jecxz
inc
mov
std
daa
shl
outs
lods
mov
aas
mov
gs
push
cld
ds
mov
jno
(bad)
daa
jns
std
cmp
and
jmp
std
mov
cmp
aas
and
cld
adc
jle
inc
aas
mov
ds
mov
in
ds
retf
jecxz
add
xor
or
(bad)
test
loop
test
jmp
cld
adc
jmp
std
loope
lahf
inc
aas
adc
push
xchg
or
retf
dec
test
ins
retf
mov
cmc
jg
loopne
mov
outs
mov
add
inc
aas
xor
jbe
ds
shufps
inc
fwait
aas
xor
cld
inc
xchg
mov
lods
nop
cld
jecxz
aas
mov
std
pop
jbe
xchg
mov
popf
fcmove
test
mov
mov
inc
aas
push
out
aas
mov
std
push
push
in
aas
mov
xchg
cld
and
(bad)
out
inc
pop
enter
popf
cli
inc
or
test
ins
inc
push
inc
stos
pop
call
adc
sti
iret
dec
ds
mov
mov
std
push
bound
push
jp
iret
sbb
lods
mov
std
ds
sar
mov
mov
add
and
std
jmp
std
xchg
sub
push
jae
sub
dec
test
mov
ds
jb
aas
sbb
std
jmp
call
std
jmp
std
cmps
mov
in
xchg
cld
jecxz
jae
sub
cmp
sub
std
dec
jmp
std
jmp
std
mov
ss
xchg
inc
and
xchg
cld
jecxz
mov
lea
mov
shl
jno
or
aad
les
push
cmp
mov
sahf
adc
rcl
mov
in
mov
std
js
adc
or
sbb
cld
out
lahf
inc
aas
inc
add
jae
sbb
mov
fs
adc
and
mov
jo
mov
jb
dec
cld
jecxz
inc
or
adc
or
(bad)
fwait
inc
call
xchg
sti
jmp
dec
mov
call
mov
push
inc
sub
inc
inc
call
xchg
sti
jmp
dec
ds
(bad)
push
test
outs
jmp
sub
xchg
je
inc
push
std
(bad)
or
mov
push
or
test
arpl
xor
popa
cli
enter
push
mov
inc
aas
cmp
pop
test
jecxz
mov
cld
jecxz
mov
jecxz
les
sbb
sti
ror
sti
xlat
dec
retf
push
xchg
or
je
ds
jae
mov
aaa
mov
push
sub
mov
loop
cmp
pop
add
sub
std
adc
adc
mov
pop
cmp
xor
sahf
aas
std
ds
idiv
pop
add
iret
and
sti
fisttp
sti
fisttp
push
add
inc
mov
push
xchg
mov
push
xchg
mov
add
retf
jmp
test
inc
mov
sub
add
inc
test
jecxz
enter
inc
push
cmps
inc
aas
cmp
aas
cmp
retf
outs
dec
xor
ins
or
mov
std
pop
jns
call
jmp
icebp
mov
imul
sub
add
retf
add
mov
add
outs
aam
test
jecxz
xchg
inc
aad
mov
stos
add
jge
dec
cld
or
jmp
jmp
ds
out
test
jecxz
scas
mov
call
std
retf
out
fnsave
inc
(bad)
enter
ds
rol
xor
daa
mov
aaa
push
xchg
or
jecxz
inc
inc
int3
out
mov
std
ret
xor
inc
fnstenv
pop
sub
push
mov
scas
cmp
jmp
inc
or
adc
or
dec
sub
in
pushf
mov
or
mov
out
add
lock
pop
shl
mov
daa
sahf
jecxz
retf
mov
mov
std
retf
je
(bad)
ds
leave
mov
outs
(bad)
cmp
mov
mov
daa
stos
into
std
ds
cmp
mov
outs
inc
outs
inc
and
cld
jecxz
add
jmp
inc
sub
jp
pop
add
mov
xchg
adc
retf
mov
or
out
sub
out
outs
cld
out
mov
in
call
retf
mov
or
xor
sub
out
outs
and
test
jecxz
or
mov
or
xor
ret
out
mov
int
aas
lahf
nop
pop
cmp
xor
or
fisubr
dec
out
ds
xor
sub
ds
outs
je
test
jecxz
or
xor
sub
out
ds
xor
sub
ds
outs
fsub
test
jecxz
or
jno
ds
out
xchg
jecxz
int3
add
not
into
inc
aas
lahf
sub
mov
retf
xor
ds
xor
outs
je
test
jecxz
or
xor
outs
movs
call
call
retf
mov
or
xor
sub
out
outs
int3
call
cdq
mov
retf
mov
or
mov
or
fisubr
(bad)
mov
call
cdq
mov
retf
mov
or
mov
or
fisubr
repnz
jmp
cdq
mov
retf
mov
or
mov
or
out
sub
aaa
std
outs
inc
jmp
cdq
mov
retf
mov
or
mov
or
mov
outs
ins
jmp
cdq
mov
retf
mov
or
mov
or
sahf
sub
mov
xchg
push
out
outs
xchg
jmp
cdq
mov
retf
mov
or
out
sub
std
outs
(bad)
jmp
cdq
mov
retf
mov
or
mov
or
mov
ds
xor
ds
xor
ds
xor
outs
in
jmp
cwde
mov
retf
mov
or
out
sub
in
outs
sub
test
jecxz
or
mov
or
jno
cmp
je
std
int3
inc
cmp
ds
enter
mov
jecxz
int3
outs
loop
ds
pop
sub
mov
mov
(bad)
out
ds
xor
ds
jno
cmp
mov
std
int3
inc
cwde
cld
ds
out
xchg
mov
mov
outs
loop
ds
cmps
(bad)
cmp
jecxz
sub
cld
idiv
inc
jno
cmp
mov
std
int3
inc
pushf
cld
ds
mov
scas
mov
cmp
xor
or
jmp
xor
sub
in
outs
aam
test
jecxz
or
xor
outs
add
test
jecxz
or
mov
or
xor
ds
jno
ds
out
lock
int3
inc
inc
std
ds
loopne
mov
mov
sub
std
ds
mov
cmp
jecxz
sub
idiv
inc
jno
ds
out
mov
std
int3
inc
pop
std
ds
add
mov
mov
push
jecxz
ds
(bad)
cmp
jecxz
sub
sub
test
jecxz
or
xor
sub
xchg
jmp
mov
jge
mov
retf
mov
or
mov
or
out
push
in
outs
mov
pop
xchg
mov
retf
mov
or
mov
or
fimul
mov
mov
movs
sub
daa
repz
xor
or
xor
ds
xor
ds
xor
sub
std
outs
inc
in
test
jecxz
or
mov
or
xor
ret
out
mov
std
retf
add
mov
mov
movs
sub
daa
xchg
cmp
ds
xor
sub
jmp
(bad)
retf
out
mov
std
retf
add
scas
jecxz
mov
push
dec
ds
(bad)
sub
or
mov
or
fisubr
shl
mov
lea
xor
or
jno
cmp
push
jecxz
imul
rol
push
push
cmp
xor
or
mov
xor
ds
xor
ds
xor
sub
std
ds
xor
outs
inc
in
test
jecxz
or
mov
or
xor
outs
mov
test
jecxz
or
mov
or
jno
cmp
jecxz
cmps
push
jecxz
test
mov
or
mov
or
mov
jp
std
ds
jno
ds
out
mov
std
int3
inc
push
std
ds
xor
es
ds
stos
adc
mov
mov
mov
idiv
inc
jno
ds
out
mov
std
imul
jl
cmp
xor
sub
inc
clc
outs
sub
test
jecxz
or
mov
or
xor
sub
push
out
test
jecxz
or
mov
or
xor
sub
std
outs
jl
test
jecxz
or
mov
or
xor
sub
std
outs
movs
out
test
jecxz
or
mov
or
xor
sub
loop
outs
int3
out
test
jecxz
or
mov
or
xor
outs
hlt
out
test
jecxz
or
mov
or
xor
outs
sbb
test
jecxz
or
mov
or
xor
outs
inc
out
test
jecxz
or
mov
or
xor
sub
or
fisubr
xchg
idiv
inc
xor
sub
idiv
inc
xor
sub
loope
ds
xor
sub
idiv
outs
ins
out
test
jecxz
or
mov
or
jno
ds
out
jo
std
int3
inc
adc
ds
xor
mov
mov
cmps
sub
daa
out
cld
ds
xor
sub
std
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
outs
in
test
jecxz
or
xor
ds
xor
outs
push
lock
jecxz
or
xor
sub
push
sti
outs
test
test
jecxz
or
mov
or
xor
sub
lods
lock
jecxz
or
mov
or
xor
ds
xor
ds
xor
outs
aam
test
jecxz
or
mov
or
xor
ds
xor
outs
or
test
jecxz
or
xor
sub
clc
ds
xor
ret
out
mov
std
test
call
retf
xor
ret
out
mov
std
idiv
xlat
inc
aas
lahf
rcl
mov
retf
mov
or
xor
ret
out
add
std
retf
add
mov
mov
jecxz
cmp
jecxz
cmc
or
std
or
xor
sub
ds
xor
shl
ds
or
gs
daa
mov
std
ds
xor
shl
ds
out
mov
gs
daa
scas
and
ds
xor
shl
ds
call
mov
jecxz
daa
jp
clc
ds
xor
shl
ds
movs
cmp
gs
daa
dec
(bad)
ds
xor
shl
ds
mov
scas
jecxz
mov
jecxz
daa
xor
idiv
inc
xor
shl
ds
ins
cmp
gs
daa
push
(bad)
ds
xor
shl
ds
push
cmp
gs
daa
cli
fdiv
ds
xor
shl
ds
pop
jl
jecxz
mov
jecxz
daa
icebp
das
std
ds
xor
shl
ds
sub
cmps
gs
daa
ret
ds
xor
shl
ds
cld
aaa
scas
jecxz
mov
jecxz
daa
cmps
fdiv
ds
xor
shl
aas
mov
loopne
scas
jecxz
mov
jecxz
daa
mov
idiv
inc
xor
shl
aas
mov
les
scas
jecxz
mov
jecxz
daa
outs
fdiv
ds
xor
shl
aas
mov
test
scas
jecxz
mov
jecxz
daa
push
(bad)
inc
xor
shl
aas
mov
(bad)
mov
mov
jecxz
daa
mov
ds
xor
shl
aas
mov
mov
mov
jecxz
daa
pop
jmp
ja
add
mov
sbb
mov
mov
jecxz
daa
cs
outs
int3
icebp
test
jecxz
or
mov
or
xor
sub
clc
ds
xor
ret
out
scas
(bad)
test
cwde
dec
cmp
inc
xor
ret
out
scas
(bad)
div
fadd
or
mov
or
mov
or
jmp
xor
shl
ds
jmp
mov
mov
jecxz
daa
xchg
cs
ds
xor
shl
ds
iret
mov
gs
daa
mov
std
ds
xor
shl
ds
enter
mov
jecxz
daa
pop
xchg
ds
xor
shl
ds
test
scas
jecxz
mov
jecxz
daa
cs
ds
xor
shl
ds
push
mov
jecxz
daa
adc
idiv
inc
xor
shl
ds
dec
ss
jecxz
mov
jecxz
daa
neg
idiv
inc
xor
shl
ds
xor
scas
jecxz
mov
jecxz
daa
fcmovu
idiv
inc
xor
shl
ds
cmp
mov
mov
jecxz
daa
shr
jmp
int3
or
mov
jecxz
daa
mov
xor
shl
ds
fdiv
mov
jecxz
daa
xchg
idiv
inc
xor
shl
aas
mov
shl
gs
daa
push
idiv
inc
xor
shl
aas
mov
movs
xor
mov
jecxz
daa
dec
(bad)
ds
xor
shl
aas
mov
mov
mov
jecxz
daa
xor
stc
ds
xor
shl
aas
mov
mov
mov
jecxz
daa
inc
xchg
ds
xor
shl
aas
mov
and
jecxz
mov
jecxz
daa
cmp
stc
ds
xor
shl
aas
mov
cld
js
jecxz
mov
jecxz
daa
push
xchg
ds
xor
shl
aas
mov
mov
mov
jecxz
mov
jmp
cmp
jecxz
fld
mov
or
mov
or
push
(bad)
sahf
jnp
cmp
int3
out
xchg
sub
daa
sub
cld
xor
sub
fcomi
ds
xor
sub
fcomi
outs
mov
push
mov
retf
xor
sub
idiv
outs
push
cmc
test
jecxz
or
mov
or
xor
sub
std
ds
xor
sub
std
ds
xor
sub
std
ds
xor
sub
sub
outs
jl
test
jecxz
or
xor
sub
sub
outs
mov
in
lea
retf
mov
or
xor
sub
sub
ds
xor
sub
sub
ds
xor
sub
sub
ds
xor
sub
sub
outs
in
test
jecxz
or
xor
sub
and
test
jecxz
or
mov
or
xor
outs
dec
test
jecxz
or
mov
or
xor
outs
je
test
jecxz
or
mov
or
xor
outs
pushf
test
jecxz
or
mov
or
xor
sub
fincstp
outs
(bad)
test
jecxz
or
mov
or
sub
(bad)
sahf
sti
repz
sub
daa
mov
cld
xor
or
jno
ds
out
std
loop
int3
inc
push
std
ds
cmp
scas
jecxz
mov
xor
scas
jecxz
int3
adc
std
ds
jnp
cmp
jecxz
sub
idiv
inc
jno
ds
out
mov
std
int3
inc
inc
std
ds
pop
xchg
jecxz
ds
fcomip
cmp
xlat
icebp
cmp
iret
icebp
cmp
fiadd
jno
lahf
mov
std
sub
jno
ds
out
test
jl
add
(bad)
int3
add
std
int3
add
int3
inc
inc
std
ds
mov
int3
and
std
ds
xor
mov
dec
xlat
lahf
jnp
cmp
jae
cmp
jle
ds
data16
jecxz
pop
add
std
or
mov
or
xor
ret
out
cld
loop
retf
add
scas
jecxz
mov
xor
cmp
movs
dec
sub
(bad)
idiv
inc
xor
ret
out
cld
loop
neg
fiadd
mov
cmp
xor
or
jno
ds
out
cld
loop
int3
inc
push
std
ds
or
scas
jecxz
mov
add
scas
jecxz
int3
push
jecxz
ds
dec
adc
mov
mov
mov
std
ds
jno
ds
out
test
std
int3
add
std
int3
add
int3
add
std
mul
inc
aas
lahf
inc
dec
cmp
xor
or
sub
(bad)
sahf
cmp
cmp
sub
daa
repz
cld
xor
or
xor
sub
xor
ret
out
sti
loop
retf
add
scas
jecxz
mov
dec
lock
movs
cmp
cmp
ds
xor
shl
ds
dec
sbb
sub
daa
fwait
das
cld
xor
sub
std
ds
xor
ret
out
retf
retf
jg
cmps
in
ds
add
cmp
movs
mov
push
test
std
retf
jg
mov
std
ds
push
sbb
das
lahf
iret
icebp
cmp
movs
add
mov
xor
ret
out
cmps
(bad)
retf
add
scas
jecxz
mov
mov
cmp
movs
jb
lea
std
outs
je
test
jecxz
or
mov
or
mov
into
add
ds
xor
sub
std
ds
xor
ds
xor
ds
xor
outs
in
stc
test
jecxz
or
mov
or
xor
ds
jno
ds
out
aam
std
int3
inc
sbb
ds
rcr
mov
jmp
cmp
jecxz
sub
clc
ds
jno
ds
out
test
sbb
ds
adc
scas
jecxz
int3
fsubp
std
ds
out
lock
jecxz
icebp
add
std
or
mov
mov
xor
ds
xor
outs
xchg
cli
test
jecxz
or
mov
or
xor
ds
xor
ds
xor
ds
xor
outs
int3
cli
test
jecxz
or
xor
sub
idiv
inc
xor
sub
idiv
outs
or
test
jecxz
or
xor
sub
std
outs
cmp
test
jecxz
or
mov
or
xor
sub
daa
std
outs
fs
test
jecxz
or
mov
or
xor
sub
daa
std
outs
mov
test
jecxz
or
mov
or
xor
sub
shl
outs
mov
test
jecxz
or
mov
or
xor
sub
es
ds
sub
ret
cmp
addr16
aas
mov
mov
jecxz
imul
ins
inc
cmp
xor
sub
sahf
std
outs
or
test
jecxz
or
mov
or
xor
ds
jno
ds
out
test
std
int3
inc
sub
ds
rcr
(bad)
loop
ds
imul
mov
mov
xor
idiv
inc
jno
ds
out
pop
jecxz
int3
inc
sub
ds
xor
jecxz
ds
aas
out
cmp
jecxz
inc
jmp
std
or
out
sub
outs
xchg
cld
test
jecxz
or
mov
or
xor
sub
shl
outs
mov
int
mov
retf
mov
or
mov
or
jmp
addr16
aas
mov
mov
jecxz
div
test
mov
retf
mov
or
mov
or
mov
mov
std
ds
xor
outs
or
test
jecxz
or
xor
ds
xor
sub
xor
ds
xor
sub
cmp
inc
jno
ds
out
movs
(bad)
int3
add
fsub
sti
ds
shl
jecxz
xchg
mov
(bad)
daa
fild
cld
xor
or
inc
cmp
xor
std
int3
inc
sub
ds
or
int3
push
loop
ds
push
aas
ds
mov
mov
std
sub
shl
ds
jno
cmp
js
std
int3
inc
in
ds
rol
mov
mov
mov
(bad)
daa
mov
cld
xor
sub
xor
ret
out
mul
std
retf
add
scas
jecxz
mov
jecxz
daa
push
cmps
std
ds
xor
shl
ds
mov
mov
mov
mov
(bad)
daa
inc
sub
xor
or
xor
outs
je
test
jecxz
or
mov
or
xor
outs
pushf
inc
mov
retf
mov
or
mov
or
out
sub
xor
ds
xor
ret
out
mul
std
retf
add
scas
jecxz
mov
jecxz
daa
shl
shl
ds
sti
add
sub
daa
mov
cld
xor
or
jno
ds
out
mov
push
std
ds
dec
jg
jecxz
int3
sub
std
ds
es
es
std
jecxz
add
xor
(bad)
sahf
stos
in
cmp
sub
daa
arpl
cld
xor
or
jno
cmp
jecxz
inc
mul
std
int3
inc
loopne
ds
dec
mov
loope
ds
(bad)
cmp
cmp
xor
outs
ins
inc
mov
retf
mov
or
xor
sub
lods
inc
mov
retf
mov
or
mov
or
fisubr
dec
shl
outs
aam
test
jecxz
or
mov
or
xor
sub
std
outs
cld
inc
mov
retf
mov
or
mov
or
sahf
sub
(bad)
std
outs
and
xchg
jecxz
or
mov
or
xor
sub
dec
add
mov
retf
mov
or
mov
or
(bad)
sub
mov
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
outs
lods
add
mov
retf
mov
or
out
sub
idiv
outs
or
xchg
jecxz
or
mov
or
xor
sub
xor
sub
idiv
inc
xor
sub
shl
ds
xor
sub
shl
outs
xor
xchg
jecxz
or
xor
ret
out
mov
aam
add
int
sub
sub
daa
mov
cld
ds
xor
sub
iret
idiv
outs
movs
add
mov
retf
mov
or
mov
or
loop
xchg
add
mov
retf
mov
or
mov
or
mov
into
into
idiv
inc
jno
ds
out
into
(bad)
int3
inc
pop
std
ds
lock
jecxz
ds
retf
jmp
jecxz
sub
hlt
add
mov
retf
xor
sub
shl
outs
cmp
xchg
jecxz
or
mov
or
xor
sub
shl
outs
pushf
add
mov
retf
mov
or
mov
or
shr
out
iret
idiv
outs
cld
add
mov
retf
mov
or
mov
or
fisubr
into
iret
idiv
inc
jno
cmp
xchg
loopne
imul
jmp
inc
cmp
inc
xor
outs
les
xchg
jecxz
or
mov
or
xor
sub
std
outs
in
add
mov
retf
mov
or
mov
or
loop
outs
iret
idiv
outs
adc
xchg
jecxz
or
mov
or
xor
ret
out
sahf
(bad)
retf
add
mov
mov
xor
cmp
jecxz
mov
loope
or
xor
ret
out
sahf
(bad)
retf
add
mov
mov
add
cmp
jecxz
test
loope
or
xor
sub
idiv
outs
in
xchg
jecxz
or
mov
or
xor
sub
int
ds
xor
sub
int
outs
or
xchg
jecxz
or
xor
sub
and
ds
xor
sub
int
ds
xor
sub
int3
idiv
outs
cmp
xchg
jecxz
or
mov
or
xor
ds
dec
sbb
cmps
mov
mov
es
xor
sub
movs
add
xor
retf
mov
or
mov
mov
stc
outs
int3
add
xor
retf
mov
or
mov
outs
(bad)
stc
outs
hlt
add
xor
retf
mov
or
retf
xchg
std
outs
sbb
xchg
jecxz
or
mov
or
xor
sub
xchg
std
outs
inc
push
xchg
jecxz
or
mov
or
xor
sub
xor
outs
ins
push
xchg
jecxz
or
xor
sub
xor
outs
aam
xchg
jecxz
or
jno
cmp
(bad)
int3
inc
movs
idiv
mov
mov
int3
rcr
std
ds
sbb
xchg
mov
std
sub
sahf
std
ds
jno
cmp
jecxz
int3
inc
mov
ds
(bad)
mov
mov
ret
ds
in
mov
xchg
mov
cmp
jecxz
mov
inc
movs
stc
ds
(bad)
cli
mov
mov
mov
std
ds
xor
ja
jecxz
sub
lahf
std
ds
jno
cmp
jecxz
int3
inc
xchg
cli
ds
sub
mov
mov
mov
push
mov
addr16
std
sub
lahf
std
ds
jno
cmp
jecxz
dec
jb
std
int3
inc
test
ds
(bad)
cli
mov
mov
xchg
loope
ds
imul
sub
sahf
std
ds
jno
cmp
jo
std
int3
inc
je
ds
(bad)
stc
mov
mov
and
ds
cmp
mov
jecxz
sub
std
ds
jno
ds
out
jno
std
int3
add
int3
(bad)
int3
inc
movs
idiv
mov
lods
xchg
(bad)
ds
or
xchg
mov
std
sub
popf
std
ds
jno
cmp
jecxz
int3
inc
mov
ds
retf
jecxz
int3
ret
ds
fnsave
xchg
lahf
std
ds
jno
cmp
jecxz
int3
inc
movs
stc
ds
jg
mov
mov
mov
std
ds
and
ja
jecxz
sub
sahf
std
ds
jno
cmp
jecxz
int3
inc
xchg
cli
ds
sbb
mov
mov
mov
idiv
addr16
std
sub
jno
cmp
jecxz
cmp
std
int3
inc
test
ds
out
stc
mov
mov
xchg
loope
ds
pop
mov
mov
mov
jecxz
sub
popf
std
ds
jno
cmp
outs
jecxz
int3
inc
je
ds
push
clc
mov
mov
and
ds
sub
mov
jecxz
sub
std
ds
jno
ds
out
jo
std
int3
add
retf
(bad)
test
cmp
xor
or
out
sub
std
ds
xor
ret
out
outs
jecxz
retf
jg
dec
in
ds
fnstenv
das
aaa
movs
sar
mov
out
outs
jecxz
retf
jg
(bad)
in
ds
test
das
aaa
movs
dec
inc
mov
out
outs
jecxz
retf
jg
ds
ds
adc
das
aaa
movs
ret
jecxz
pop
jo
std
retf
jg
mov
std
ds
cs
mov
dec
das
aaa
movs
cmp
jecxz
inc
jo
std
retf
jg
cs
ds
adc
das
aaa
movs
mov
mov
out
outs
jecxz
retf
jg
cmps
out
ds
mov
dec
das
aaa
movs
sub
jecxz
or
std
retf
jg
push
out
ds
mov
dec
das
aaa
movs
mov
out
outs
jecxz
retf
jg
xchg
out
ds
xchg
das
aaa
movs
sbb
jecxz
bound
std
retf
jg
push
call
mov
mov
dec
das
aaa
movs
xchg
inc
mov
out
outs
jecxz
retf
jg
xchg
std
ds
fnsave
das
aaa
movs
or
out
ins
jecxz
retf
jg
(bad)
call
mov
mov
dec
das
aaa
movs
add
jg
jecxz
retf
jg
jbe
std
ds
pop
adc
mov
push
dec
std
jecxz
jno
loope
or
inc
sub
(bad)
int3
inc
shr
mov
mov
jecxz
int3
stos
iret
std
ds
jnp
ds
mov
jecxz
sub
std
ds
jno
sub
loop
int3
inc
adc
ds
dec
and
sub
daa
fwait
and
xor
sub
(bad)
idiv
outs
sub
xchg
jecxz
or
mov
or
xor
sub
sbb
outs
push
or
mov
retf
mov
or
mov
or
out
ret
out
in
loop
retf
add
mov
mov
ret
loope
mov
xchg
dec
std
jecxz
mov
loope
or
xor
ret
out
in
loop
retf
add
mov
mov
ret
daa
pop
and
ds
xor
sub
std
outs
in
xchg
jecxz
or
mov
or
xor
outs
or
xchg
jecxz
or
mov
or
xor
outs
xor
xchg
jecxz
or
mov
or
xor
outs
pop
or
mov
retf
mov
or
mov
or
fisubr
add
xchg
jecxz
or
mov
or
xor
sub
cmp
outs
lods
or
mov
retf
mov
or
mov
or
fisubr
ret
outs
aam
xchg
jecxz
or
mov
or
xor
sub
cld
or
mov
retf
mov
or
mov
or
fisubr
add
xchg
jecxz
or
mov
or
jno
cmp
push
jecxz
int3
inc
add
ds
fcomp
jecxz
int3
jbe
std
ds
ret
or
pop
mov
std
sub
jno
cmp
vpaddw
inc
(bad)
sti
ds
mov
int3
jbe
std
ds
xchg
or
inc
mov
std
sub
jno
cmp
call
ds
rcr
int3
ds
ds
fwait
sbb
mov
mov
jecxz
sub
clc
ds
jno
cmp
or
std
int3
inc
fdivr
ds
adc
mov
mov
sbb
std
ds
mov
mov
jecxz
sub
jno
cmp
cdq
(bad)
int3
inc
mov
ds
(bad)
jecxz
int3
repnz
ds
xchg
loope
mov
mov
mov
std
sub
idiv
inc
jno
cmp
cdq
(bad)
int3
inc
sar
ds
mov
scas
jecxz
int3
mov
addr16
mov
mov
mov
std
sub
(bad)
idiv
inc
jno
cmp
jecxz
lods
cdq
(bad)
int3
inc
mov
pusha
and
loop
ds
cmp
cmp
jecxz
sub
(bad)
idiv
inc
jno
cmp
cdq
(bad)
neg
repnz
aas
lahf
int3
cmp
xor
sub
cmp
inc
xor
ds
xor
ds
xor
ds
xor
outs
push
or
jns
jecxz
or
mov
or
xor
sub
cmp
xchg
jecxz
or
mov
or
xor
sub
xor
outs
les
jns
jecxz
or
xor
sub
xor
sub
add
ds
xor
sub
xor
sub
hlt
or
jns
jecxz
or
xor
ds
xor
outs
xor
xchg
jecxz
or
xor
ds
xor
ds
jno
ds
out
rcr
std
int3
inc
pop
std
ds
cmp
scas
jecxz
int3
out
loop
ds
xor
mov
mov
call
ds
out
cwde
(bad)
int3
inc
pop
std
ds
mov
mov
sub
std
ds
out
cmp
(bad)
cmp
jecxz
loope
loope
or
loop
dec
push
ds
xor
sub
idiv
inc
xor
sub
xor
sub
aam
xchg
jecxz
or
xor
outs
adc
xchg
jecxz
or
mov
or
xor
sub
xor
sub
cmp
xchg
jecxz
or
xor
sub
std
ds
xor
outs
ins
jbe
mov
retf
mov
or
fisubr
inc
cmp
inc
xor
sub
stc
outs
pushf
jbe
mov
retf
mov
or
fisubr
and
mov
outs
int3
jbe
mov
retf
mov
or
ret
cmp
inc
xor
ds
xor
ds
xor
sub
(bad)
stc
ds
xor
outs
cld
jbe
mov
retf
mov
or
mov
or
mov
mov
stc
ds
xor
sub
inc
adc
mov
retf
mov
or
out
sub
je
xchg
jecxz
or
mov
or
xor
sub
idiv
outs
pushf
adc
mov
retf
mov
or
mov
or
mov
cs
stc
ds
xor
ds
xor
ds
sub
cmp
int
pop
scas
jecxz
pop
enter
mov
cld
xor
or
xor
ds
xor
outs
or
xchg
jecxz
or
xor
sub
(bad)
stc
outs
cmp
xchg
jecxz
or
mov
or
jno
ds
out
cmp
std
int3
inc
hlt
cld
ds
popf
jge
jecxz
int3
and
std
ds
shr
lahf
add
jle
std
jecxz
mov
xor
or
xor
sub
and
ds
xor
ret
out
data16
retf
jg
dec
in
ds
int
ds
mov
test
loope
or
xor
ret
out
xchg
(bad)
imul
adc
or
mov
or
out
sub
ret
idiv
outs
add
xchg
jecxz
or
mov
or
xor
sub
shl
outs
sub
xchg
jecxz
or
mov
or
xor
sub
push
adc
mov
retf
mov
or
mov
or
sahf
sub
shl
inc
xor
outs
aam
xchg
jecxz
or
xor
shl
aas
mov
lock
sub
daa
aas
sbb
xor
or
(bad)
sub
ret
outs
je
xchg
jecxz
or
mov
or
xor
sub
ret
outs
in
xchg
jecxz
or
mov
or
xor
sub
idiv
inc
xor
sub
shl
outs
push
adc
mov
and
or
xor
sub
shl
outs
int3
adc
mov
or
or
mov
or
xor
sub
xor
sub
cmp
xchg
jecxz
or
xor
sub
mov
adc
je
jecxz
or
mov
or
xor
sub
mov
push
xchg
jecxz
or
mov
or
xor
sub
inc
push
xchg
jecxz
or
mov
or
xor
sub
ins
push
xchg
jecxz
or
mov
or
xor
sub
idiv
outs
xchg
push
xchg
jecxz
or
mov
or
jno
ds
out
xchg
(bad)
int3
inc
adc
ds
mov
scas
jecxz
pop
into
sub
daa
xlat
sbb
ds
xor
sub
mov
push
xchg
jecxz
or
mov
or
xor
sub
mov
retf
mov
pop
xchg
jecxz
or
xor
sub
mov
pop
xchg
jecxz
or
mov
or
xor
sub
mov
retf
mov
pop
xchg
jecxz
or
xor
sub
xor
sub
pushf
pop
xchg
jecxz
or
xor
ds
jno
ds
out
(bad)
(bad)
int3
inc
inc
std
ds
pop
into
mov
mov
push
jecxz
ds
mov
cmp
jecxz
(bad)
jmp
or
mov
or
out
sub
ds
xor
ret
out
jecxz
std
retf
add
mov
mov
shr
(bad)
daa
iret
pop
cld
xor
or
out
sub
ds
xor
ret
out
jecxz
std
not
inc
fdiv
cmp
inc
sub
(bad)
sahf
fcmovnu
cmp
sub
daa
xchg
pop
cld
xor
or
sub
(bad)
sahf
mov
mov
shr
(bad)
daa
jae
cld
xor
or
xor
sub
adc
ds
xor
sub
xor
sub
shl
inc
xor
sub
les
xchg
jecxz
or
xor
sub
xor
outs
add
xchg
jecxz
or
mov
or
xor
sub
xor
outs
sub
xchg
jecxz
or
mov
or
xor
outs
push
sbb
mov
retf
mov
or
mov
or
shr
push
mov
shr
push
mov
fisubr
push
mov
sbb
mov
retf
mov
or
mov
or
jmp
mov
xchg
jecxz
or
mov
or
xor
sub
stc
outs
fcomp
xchg
jecxz
or
mov
or
xor
ds
xor
ds
xor
ds
jno
ds
out
push
jecxz
int3
add
int3
add
int3
add
int3
add
not
inc
dec
xor
inc
xor
outs
pushf
sbb
mov
retf
mov
or
mov
or
loop
out
mov
sbb
mov
retf
mov
or
mov
or
mov
ds
xor
outs
and
xchg
jecxz
or
xor
sub
xor
ret
out
popa
jecxz
retf
jg
dec
in
ds
dec
test
das
aaa
movs
sar
mov
out
popa
jecxz
retf
jg
(bad)
in
ds
cmc
test
mov
dec
das
aaa
movs
dec
inc
mov
out
popa
jecxz
retf
jg
ds
ds
sub
aaa
movs
ret
jecxz
iret
valignq
add
sahf
test
das
aaa
movs
cmp
jecxz
mov
jecxz
retf
jg
cs
ds
sub
aaa
movs
mov
mov
out
valignq
add
cs
ds
dec
das
aaa
movs
sub
jecxz
jnp
jecxz
retf
jg
push
out
ds
adc
das
aaa
movs
mov
pop
valignq
add
imul
das
aaa
movs
sbb
jecxz
shl
std
retf
jg
push
call
test
das
aaa
movs
xchg
inc
mov
out
pusha
jecxz
retf
jg
xchg
std
ds
dec
test
mov
dec
das
aaa
movs
or
out
pusha
jecxz
retf
jg
(bad)
call
test
das
aaa
movs
add
out
popa
jecxz
retf
jg
jbe
std
ds
pop
mov
(bad)
pop
std
jecxz
loope
loope
or
(bad)
sub
or
fisubr
cmps
mov
sbb
mov
test
jecxz
or
jno
cmp
jecxz
je
(bad)
int3
inc
fdivr
ds
fld
jecxz
int3
mov
std
ds
repz
jecxz
xchg
out
std
or
xor
outs
or
xchg
jecxz
or
mov
or
xor
sub
std
outs
xor
xchg
jecxz
or
mov
or
xor
ds
xor
ds
xor
outs
pop
sbb
outs
mov
retf
mov
or
mov
or
adc
mov
out
jecxz
std
int3
inc
clc
cld
ds
int
mov
mov
es
ds
call
std
jecxz
cmc
in
std
or
xor
sub
std
ds
xor
ret
out
pusha
jecxz
neg
js
cmp
inc
xor
sub
jbe
outs
cld
sbb
outs
mov
retf
mov
or
mov
or
fisubr
mov
and
xchg
jecxz
or
mov
or
xor
ds
jno
ds
out
mov
std
int3
inc
cmp
ds
add
jecxz
int3
push
jecxz
ds
pop
aad
mov
mov
and
push
xchg
jecxz
or
out
sub
xor
ret
out
(bad)
(bad)
mul
inc
aas
lahf
fsubr
inc
xor
sub
xor
sub
mov
push
xchg
jecxz
or
xor
sub
jbe
ds
xor
outs
hlt
push
xchg
jecxz
or
xor
sub
or
outs
and
xchg
jecxz
or
mov
or
xor
sub
std
ds
xor
ret
out
pop
jecxz
neg
add
sub
mov
retf
jno
ds
out
mov
(bad)
cld
ds
retf
data16
mov
cmps
loop
ds
cmps
and
dec
mov
std
sub
sti
ds
jno
cmp
aas
jecxz
int3
inc
sar
ds
lahf
data16
mov
xlat
sub
daa
fist
cld
xor
sub
xor
ret
out
fucom
std
retf
add
mov
mov
jecxz
daa
mov
xor
shl
ds
adc
mov
mov
jecxz
daa
ins
stc
cld
outs
int3
pop
xchg
jecxz
or
mov
or
xor
sub
std
ds
xor
ret
out
fucom
std
retf
add
mov
mov
jecxz
daa
pop
shl
ds
xor
shl
ds
mov
mov
mov
jecxz
daa
or
cld
ds
xor
sub
idiv
inc
xor
sub
idiv
outs
sbb
xchg
jecxz
or
mov
or
xor
sub
std
outs
jl
xchg
jecxz
or
mov
or
xor
outs
movs
and
mov
retf
mov
or
mov
or
fisubr
inc
je
outs
int3
and
mov
retf
mov
or
mov
or
fisubr
and
outs
hlt
and
mov
retf
mov
or
mov
or
jb
mov
out
jmp
std
imul
push
inc
aas
lahf
mov
retf
mov
or
xor
ds
xor
ds
xor
ds
xor
ds
xor
ds
xor
outs
inc
and
mov
retf
mov
or
out
sub
pop
std
ds
xor
ret
out
pop
jecxz
mul
inc
aas
lahf
cmp
cmp
inc
xor
sub
std
outs
les
xchg
jecxz
or
out
sub
std
ds
sub
ret
cmp
addr16
aas
mov
mov
jecxz
idiv
clc
sub
inc
xor
sub
or
ds
sub
ret
cmp
addr16
aas
mov
mov
jecxz
imul
pop
inc
aas
lahf
int3
sub
inc
xor
sub
sub
ret
cmp
addr16
aas
mov
mov
jecxz
neg
or
lahf
mov
retf
sub
ret
cmp
addr16
aas
mov
mov
jecxz
int3
add
out
fnclex
std
test
sub
inc
sub
ret
cmp
addr16
aas
mov
mov
jecxz
int3
add
out
(bad)
std
idiv
inc
aas
lahf
dec
sub
mov
out
daa
inc
lahf
std
ds
push
gs
jecxz
(bad)
loope
std
or
out
sub
idiv
inc
xor
ret
out
(bad)
std
mul
or
lahf
adc
cmp
inc
xor
sub
std
outs
inc
and
mov
sbb
jecxz
or
out
sub
outs
ins
and
mov
add
or
add
mov
fsubr
(bad)
daa
cmps
push
cld
ds
xor
sub
mov
outs
mov
(bad)
jecxz
or
out
sub
in
xchg
jecxz
or
out
sub
std
outs
or
xchg
jecxz
or
out
sub
std
outs
xor
xchg
jecxz
or
out
sub
std
outs
pop
and
imul
std
outs
test
imul
std
outs
lods
and
imul
std
ds
mov
(bad)
(bad)
daa
pop
push
cld
ds
xor
sub
cld
and
imul
idiv
outs
and
xchg
jecxz
or
out
sub
mov
outs
dec
xchg
jecxz
or
out
sub
mov
add
jecxz
or
loop
and
std
ds
xor
outs
in
xchg
jecxz
or
daa
xchg
jecxz
or
daa
xchg
jecxz
or
add
ds
mov
loopne
(bad)
daa
outs
or
sub
mov
retf
xor
sub
std
outs
jl
xchg
jecxz
or
sub
mov
retf
xor
sub
cld
outs
cld
sub
mov
retf
xor
sub
push
sahf
sub
es
ds
xor
sub
push
sub
mov
retf
xor
outs
pop
sub
mov
retf
test
xchg
jecxz
or
mov
ds
push
imul
out
(bad)
std
or
inc
std
ds
mov
loop
(bad)
daa
ret
or
ds
out
daa
out
pushf
std
ds
push
imul
out
fsubp
std
or
out
sub
mov
outs
sub
mov
retf
xor
sub
std
outs
mov
xchg
jecxz
or
out
sub
std
outs
mov
xchg
jecxz
or
out
sub
std
outs
fsubr
xchg
jecxz
or
out
sub
es
outs
add
xchg
jecxz
or
out
sub
xor
sub
and
ds
xor
sub
sub
xchg
jecxz
or
fisubr
mov
sub
mov
retf
pop
out
daa
aas
pushf
std
ds
cmps
ins
std
jecxz
mov
loope
or
out
sub
xor
shl
ds
mov
pavgw
(bad)
daa
fisttp
cld
ds
xor
sub
std
outs
in
xchg
jecxz
or
out
sub
add
outs
or
xchg
jecxz
or
out
sub
add
ds
xor
shl
aas
mov
test
mov
mov
in
(bad)
daa
xchg
or
ds
xor
sub
add
outs
fs
mov
int
mov
retf
xor
sub
mov
outs
mov
mov
mov
or
sub
mov
lods
data16
retf
xor
sub
add
ds
sub
ret
cmp
addr16
aas
mov
mov
jecxz
neg
adc
lahf
push
retf
xor
sub
sub
ret
cmp
addr16
aas
mov
mov
jecxz
test
cmp
cmp
inc
xor
sub
cld
outs
ins
sub
data16
retf
xor
sub
lods
std
outs
xchg
sub
data16
retf
xor
sub
lods
std
outs
mov
sbb
jecxz
or
or
cmp
ret
cmp
addr16
aas
mov
mov
jecxz
div
aam
cmp
inc
xor
sub
std
outs
adc
xchg
jecxz
or
add
ds
mov
out
(bad)
daa
jnp
cld
ds
xor
sub
mov
outs
fs
jecxz
or
out
ret
out
(bad)
loop
neg
inc
aas
lahf
and
xor
ret
out
(bad)
loop
test
mov
or
out
sub
xor
sub
fsubr
xchg
jecxz
or
mov
ds
dec
sub
outs
dec
sub
movs
or
jno
std
outs
push
das
xchg
jecxz
or
out
sub
mov
outs
mov
xchg
jecxz
or
out
sub
jp
outs
mov
xchg
jecxz
or
out
sub
mov
outs
fsubr
xchg
jecxz
or
out
sub
add
outs
add
xchg
jecxz
or
out
sub
sub
xchg
jecxz
or
out
sub
push
xor
mov
retf
pop
push
daa
dec
add
ds
mov
call
or
ds
xor
sub
movs
xor
mov
retf
xor
sub
int3
xor
mov
retf
xor
sub
hlt
xor
mov
retf
xor
sub
idiv
outs
sbb
xchg
jecxz
or
out
sub
xor
sub
std
outs
inc
xor
mov
retf
pop
jmp
outs
dec
sub
outs
dec
sub
movs
push
sub
std
outs
mov
sbb
or
out
sub
mov
outs
hlt
xor
mov
retf
xor
sub
sbb
xchg
jecxz
or
out
sub
std
ds
xor
ret
out
iret
loop
not
sbb
lahf
mov
retf
xor
sub
adc
outs
je
xchg
jecxz
or
xor
mov
retf
hlt
xor
mov
retf
xor
ret
out
int3
loop
retf
add
mov
mov
jmp
(bad)
daa
aas
or
outs
jl
xchg
jecxz
or
out
ret
out
int3
loop
retf
add
mov
mov
jmp
(bad)
daa
adc
cld
ds
xor
sub
sti
outs
add
xchg
jecxz
or
out
sub
xor
mov
xor
or
out
sub
mov
outs
push
xor
mov
and
jecxz
add
add
pop
ret
stc
jmp
pop
add
add
push
add
inc
add
add
add
add
jmp
sub
pusha
stc
jmp
sub
add
jne
movs
retf
xor
(bad)
jp
pop
mov
xchg
xchg
addr16
push
adc
jb
call
adc
xchg
pop
out
adc
sti
imul
mov
mov
xor
(bad)
jmp
pop
movs
mov
xchg
ret
adc
popf
xchg
clc
pop
sub
xchg
cmp
clc
jmp
jbe
adc
xor
gs
add
xchg
adc
test
and
shl
(bad)
fld
into
sbb
das
outs
sub
pusha
popa
mov
and
and
mov
sub
enter
inc
sbb
(bad)
sahf
hlt
cvtdq2ps
loopne
pop
movs
or
jg
daa
(bad)
pop
imul
icebp
jb
or
add
sub
or
cmp
xchg
xchg
gs
leave
retf
daa
daa
imul
icebp
cmp
and
xchg
adc
sbb
inc
lods
fs
push
mov
jmp
dec
dec
mov
sub
loope
es
popa
fnstsw
nop
ins
retf
mov
test
or
jae
jne
xchg
sbb
int
test
add
clc
jmp
lods
hlt
sub
adc
loop
sti
xor
xor
adc
mov
jmp
test
push
loope
shr
pusha
sahf
lds
fimul
mul
stos
adc
pop
pusha
mov
jb
sbb
rol
ds
fild
add
adc
ins
mov
mov
inc
pusha
sub
clc
jmp
and
je
es
lock
pop
or
pop
call
mov
(bad)
push
popa
cmp
or
ret
test
(bad)
sbb
pop
mov
xor
adc
sub
clc
jmp
jg
or
aam
sbb
ss
cmp
test
test
(bad)
(bad)
(bad)
jmp
mov
add
jmp
pop
jle
stc
jmp
shr
mov
(bad)
inc
add
xor
mov
daa
add
mov
loop
sub
iret
mov
jmp
repnz
or
daa
or
std
cmp
icebp
shl
retf
add
inc
sub
ret
jnp
inc
out
add
add
xor
in
ret
xor
cmp
(bad)
mov
dec
mov
cmps
add
ja
in
aas
mov
or
xchg
jecxz
aas
mov
lds
xor
pop
bswap
ret
outs
jmp
outs
dec
dec
sbb
dec
dec
cmp
jnp
pop
jecxz
dec
mov
or
mov
add
jns
call
add
outs
jmp
outs
pop
dec
pop
in
ds
adc
sub
push
fs
std
mov
pop
jecxz
mov
das
add
lahf
out
pop
mov
in
add
lfs
mov
add
add
add
or
