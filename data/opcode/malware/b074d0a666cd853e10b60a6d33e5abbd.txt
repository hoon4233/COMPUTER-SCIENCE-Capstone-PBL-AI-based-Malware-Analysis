add
mov
inc
adc
rol
add
add
pop
xor
add
xor
jmp
and
stc
pop
add
xchg
aad
mov
lods
pop
push
mov
retf
in
cld
inc
pop
outs
(bad)
adc
pop
pop
inc
pop
out
std
push
pop
push
adc
mov
std
in
adc
fiadd
ins
or
mul
pop
pop
ss
jbe
fwait
inc
adc
or
div
or
(bad)
jb
out
pushw
paddsb
push
jb
fxch
imul
sub
dec
mov
pop
cmp
jnp
add
inc
mov
(bad)
sub
jb
ins
push
pop
mov
fsubr
adc
pop
adc
jb
out
pusha
or
cmp
push
or
fwait
cmp
cmp
inc
or
in
xor
or
mov
jae
inc
clc
xor
out
lahf
lea
and
(bad)
mov
xchg
popa
frstor
or
ins
jne
inc
aas
fisttp
ins
ins
add
inc
outs
rcr
or
pop
outs
ret
sti
pop
in
xor
push
push
push
ins
lsl
ins
push
xor
add
mov
add
out
jl
fbstp
adc
xor
outs
jbe
ins
add
bswap
or
jae
xchg
repnz
or
sbb
add
cmps
stos
dec
test
in
lods
and
ins
add
mov
enter
or
repz
mov
in
cmps
repz
or
push
lea
inc
adc
cmp
xchg
push
dec
idiv
adc
push
je
mov
test
add
cmp
dec
inc
das
jnp
fmul
push
test
cdq
mov
push
sbb
jbe
cdq
aas
or
cmp
sbb
cmps
xchg
or
jnp
or
inc
pop
icebp
in
mov
pop
outs
pop
dec
ret
inc
clc
add
sbb
push
mov
cwde
adc
add
stos
sysret
arpl
mov
add
xor
movs
sbb
shl
inc
or
jnp
ret
imul
and
pop
mov
or
sbb
mov
sbb
adc
add
push
mov
test
sti
push
xor
mov
fistp
cmp
sbb
add
bound
jnp
cmp
add
push
clc
jb
ins
sub
sti
fwait
push
mov
in
add
les
adc
jbe
(bad)
sub
cmovno
ret
ds
jne
push
ins
ins
pop
ins
clc
sbb
fisttp
hlt
xor
or
or
jno
imul
jmp
repz
out
add
pop
mov
aas
(bad)
mov
sbb
add
pop
and
push
test
(bad)
sti
jmp
pop
aaa
sub
adc
ds
adc
sbb
add
fsubr
hlt
push
fcom
pop
xchg
jb
js
pushf
ins
mov
ins
pop
mov
inc
cmc
scas
pop
pop
jns
push
call
sbb
rol
cmp
fstp
sbb
cdq
mov
push
or
fwait
ins
out
cmp
pop
cmp
jl
jne
or
das
or
nop
cmps
mov
lea
mov
pushf
cmp
fwait
pop
or
add
push
in
or
add
or
lods
mov
adc
pusha
fs
cmp
adc
xor
xlat
pop
jno
sub
outs
and
push
jbe
xor
mov
js
xor
pop
push
adc
(bad)
stc
pop
cmps
jg
or
push
cmps
jae
mov
ja
jb
stc
xchg
mov
les
push
xchg
dec
xlat
mov
or
pop
and
or
sbb
sbb
daa
or
inc
add
mov
dec
jecxz
fistp
mov
push
jg
lea
inc
sub
jns
cmc
test
ja
ficomp
int
mov
mov
in
jmp
lods
in
add
mov
test
push
adc
test
add
inc
(bad)
out
inc
daa
popa
mov
test
add
test
mov
xchg
ja
popa
mov
add
(bad)
sti
add
add
fistp
sub
xchg
out
mov
jae
push
or
jg
xor
clc
xor
fs
(bad)
sub
sbb
add
mov
pcmpeqb
add
xchg
(bad)
jo
ds
inc
je
clc
je
daa
bound
movs
out
dec
dec
pop
pop
addr16
mov
xchg
out
cli
mul
ins
(bad)
movs
lods
cdq
fiadd
test
scas
mov
inc
dec
das
adc
push
(bad)
fldcw
jne
imul
sbb
ds
or
sbb
in
pop
loop
mov
inc
or
add
pop
rcr
data16
xor
std
push
inc
aam
mov
test
or
(bad)
pop
ss
cmp
data16
ins
ret
cmp
pop
mov
xor
cmp
cs
mov
js
std
pop
push
pavgb
add
or
pop
jo
daa
push
cli
add
std
add
hlt
sbb
sbb
(bad)
add
(bad)
ds
movs
arpl
outs
pop
daa
add
and
adc
sub
adc
pop
mov
cwde
das
add
mov
sahf
push
pop
(bad)
sti
push
push
push
push
test
pop
jle
push
(bad)
aas
jae
in
(bad)
in
dec
stos
cmp
(bad)
pop
jo
sar
sub
xor
inc
in
and
aaa
ds
in
sbb
pop
in
adc
or
fistp
test
add
add
loopne
hlt
cmp
or
inc
jne
mov
jae
fstp
pusha
sti
mov
lock
(bad)
in
or
(bad)
out
jecxz
outs
popa
iret
lods
dec
mov
sub
inc
mulps
cmp
inc
xchg
cmp
imul
and
or
inc
fwait
(bad)
adc
mov
xchg
(bad)
in
push
dec
mov
arpl
cs
push
out
mov
mov
stos
pop
xor
ja
out
and
je
out
push
adc
idiv
jmp
out
sub
inc
mov
inc
std
icebp
not
jecxz
pop
movs
xchg
loopne
mov
push
outs
repz
lds
shr
xor
adc
out
jns
daa
lea
movs
dec
das
inc
and
dec
dec
or
dec
dec
dec
dec
in
xor
and
mov
data16
call
cmp
or
mov
stos
push
sbb
fistp
movs
push
sbb
push
push
cmps
(bad)
jnp
or
add
adc
sbb
fstp
cmp
data16
push
sbb
dec
pop
enter
repz
pop
adc
je
and
sbb
and
cmp
sbb
add
js
repnz
pop
or
dec
es
mov
adc
popf
in
fs
add
cmp
adc
jnp
fistp
in
fs
adc
leave
or
popa
leave
fild
data16
jnp
mov
pop
mov
add
ss
or
dec
or
push
or
repz
pop
pop
sti
and
mov
sti
repz
or
pop
or
or
dec
sar
pop
and
jb
adc
adc
add
test
xor
daa
and
daa
sbb
fwait
mov
dec
ret
int3
cmp
and
mov
pop
xor
inc
stos
fiadd
and
fiadd
ins
jl
mov
daa
pop
les
mov
dec
jae
push
push
sub
push
fbld
inc
pop
mov
dec
add
fst
jmp
xchg
or
add
xchg
call
xor
in
inc
inc
rol
mov
push
leave
shl
dec
dec
out
rol
cmp
imul
fmulp
fild
mov
scas
push
pop
rcl
ins
aaa
fs
das
nop
(bad)
jmp
sbb
fsub
lahf
data16
(bad)
jb
push
(bad)
fsub
dec
in
dec
outs
cs
push
sub
dec
and
dec
inc
mov
adc
and
mov
dec
das
adc
fisubr
mov
push
fwait
int
cmp
sbb
es
push
xor
aam
ins
pop
popf
call
ret
aas
adc
cmp
fst
lods
fiadd
pop
cdq
popa
cli
pop
aas
fstp
push
push
jmp
int
sti
or
andnps
push
cmp
in
test
add
outs
stc
sti
pop
mov
mov
js
or
in
mov
mov
push
out
mov
mov
sub
and
xor
ds
ja
mov
sbb
cdq
movs
sbb
sbb
test
stc
sahf
out
and
or
int
jns
adc
and
or
cli
fbld
xchg
cli
call
and
or
das
sub
enter
xor
jg
jne
sbb
in
out
fucomip
sar
xchg
ins
int
dec
mov
adc
jmp
das
in
xor
add
enter
push
dec
jg
stos
popa
mov
mov
ret
shr
jb
lea
in
out
fild
jb
mov
out
add
popa
mov
outs
sar
adc
mov
nop
jmp
jmp
xchg
add
repnz
aas
push
(bad)
fcomi
inc
imul
(bad)
sbb
stos
inc
pop
xor
sbb
and
sub
and
xor
add
repz
aas
cmp
add
push
cmp
iret
xor
enter
inc
mov
out
repnz
xchg
in
out
inc
sahf
dec
lahf
ret
jns
nop
movs
mov
fild
cdq
pop
pop
add
or
add
push
movnti
jns
nop
out
xlat
adc
cmp
add
(bad)
in
adc
xchg
iret
xor
push
nop
out
mov
add
jns
and
push
and
or
outs
inc
inc
pop
dec
sbb
sbb
push
sub
fwait
adc
enter
in
sbb
adc
cmp
xor
repnz
movs
sbb
bnd
jg
nop
iret
aaa
and
mov
cmp
dec
mov
add
stc
es
jns
adc
retf
repz
dec
xchg
(bad)
xchg
repnz
enter
lock
ds
add
sahf
out
cmps
adc
push
nop
out
daa
inc
scas
jns
add
xor
inc
inc
sahf
add
mov
add
rcr
out
mov
into
iret
add
cmp
jno
mov
lea
or
push
cmp
push
iret
mov
cmp
retf
lds
imul
lock
jns
add
out
shr
inc
sahf
add
pop
leave
out
call
enter
data16
iret
add
xor
and
xor
enter
not
add
loope
push
repz
jl
mov
sti
stc
dec
enter
xchg
sbb
add
sahf
add
mov
cmp
rcr
es
jns
fisubr
pop
jb
loop
push
loopne
pop
ds
jns
enter
add
or
mov
daa
push
inc
sahf
add
push
nop
out
jb
sub
pop
repnz
(bad)
sub
add
xor
repnz
aaa
es
repnz
add
aas
jg
sahf
out
test
jecxz
cmp
retf
xchg
and
iret
xor
and
aaa
nop
sbb
add
repz
int
push
inc
pop
mov
(bad)
dec
mov
add
out
je
xor
test
jmp
in
push
cmp
les
scas
sbb
pop
pop
or
dec
add
paddsw
mov
add
add
sub
cmp
sub
or
push
sub
push
inc
scas
dec
sub
enter
sub
ror
dec
push
add
xchg
ins
arpl
arpl
dec
sbb
clc
enter
dec
adc
setge
sbb
hlt
nop
mov
ret
les
pushf
sti
pusha
in
out
jg
push
out
cs
adc
inc
outs
ja
outs
fidivr
popf
adc
out
rol
out
out
outs
mov
inc
lock
dec
sbb
add
jnp
mov
dec
push
inc
add
add
add
mov
test
sbb
push
inc
dec
pop
jb
xchg
sub
nop
lds
lods
push
dec
repz
dec
push
mov
sbb
push
mov
ror
inc
out
lahf
add
pop
add
inc
ss
mov
(bad)
(bad)
lds
rcr
aad
loop
loopne
pop
cmps
adc
test
add
push
ins
bndldx
ds
sub
bsf
sbb
push
mov
jb
fidiv
inc
lock
in
ds
rcr
add
dec
mov
mov
gs
mov
push
lock
neg
lahf
push
cmc
jge
repnz
bound
mov
je
jne
mov
out
and
aam
fisub
call
leave
or
add
imul
pandn
repnz
test
hlt
add
add
(bad)
sub
test
clc
iret
lock
mov
lods
mov
cmp
add
dec
shr
pushw
push
or
dec
adc
add
push
pushf
in
and
mov
sub
pop
jb
xchg
jae
pop
sub
pushf
in
xchg
or
dec
jb
xchg
cmp
push
dec
daa
cmp
dec
scas
dec
mov
es
and
xchg
pop
bound
cmp
dec
sub
xchg
or
pushf
in
(bad)
arpl
push
dec
dec
jb
jno
jl
xchg
jb
mov
and
js
sub
and
rol
enter
inc
push
mov
or
push
dec
or
lock
jmp
prefetch
or
xor
loopne
inc
adc
adc
or
adc
addr16
fucomip
adc
(bad)
nop
mov
cmps
loopne
cmp
dec
jecxz
(bad)
data16
push
ins
mov
ret
push
ins
and
daa
or
push
enter
jecxz
add
sbb
(bad)
(bad)
fsub
dec
sub
ss
aas
sbb
sub
idiv
sti
repz
and
push
test
in
sbb
jp
push
jecxz
add
fnstenv
jmp
adc
jmp
sub
dec
sbb
mov
and
or
jmp
movs
and
mov
mov
inc
mov
sub
pop
cmps
or
into
cmp
mov
sbb
adc
daa
and
push
or
ret
out
jae
mov
jecxz
sbb
add
fmul
or
pusha
push
jmp
(bad)
(bad)
idiv
adc
dec
xor
(bad)
xchg
outs
pop
popa
pop
push
retf
je
or
repnz
(bad)
sbb
cdq
int3
or
iret
fisttp
or
xor
xor
add
mov
mov
ret
inc
xor
jl
mov
imul
and
adc
or
pop
das
or
inc
push
es
adc
aas
ret
and
add
add
or
jp
cmps
jb
sub
jmp
aam
dec
arpl
push
mov
mov
cli
out
dec
add
cwde
test
out
pop
sbb
sub
pushf
mov
cmp
xor
mov
fst
sbb
popa
push
and
and
ficom
cmp
mov
add
sub
inc
pop
sbb
pop
sub
and
call
(bad)
pusha
gs
clc
ja
add
sahf
pop
mov
sbb
add
test
mov
daa
gs
pop
inc
nop
xor
mov
pop
push
adc
ins
dec
and
cmp
arpl
and
sar
push
mov
mov
mov
xchg
add
cmp
mov
push
ds
popf
rcl
inc
mov
mov
test
ja
scas
adc
repz
fsubr
mov
adc
push
xrelease
push
je
add
adc
xchg
outs
inc
push
or
jae
push
(bad)
pcmpgtd
jns
ins
inc
vmread
(bad)
jnp
psrlq
pop
or
mov
js
sbb
jbe
aas
mov
in
jns
mov
add
add
ret
xchg
and
mov
outs
jae
mov
add
sbb
fmul
(bad)
fldcw
rcl
cmp
inc
mov
sbb
inc
call
sbb
ins
add
push
cmp
je
(bad)
shr
sub
and
adc
sub
popa
addr16
inc
adc
sub
sbb
cmp
mov
(bad)
jl
sbb
pop
and
leave
ins
xor
test
mov
call
dec
test
sbb
push
(bad)
jp
xor
jg
inc
adc
or
xchg
jns
int
sub
jmp
push
mov
mov
mov
push
sbb
ficom
inc
aaa
xor
and
fimul
mov
jg
mov
cmps
and
ins
out
mov
out
cmp
add
inc
ret
and
sbb
pusha
repnz
shl
(bad)
popa
fwait
add
jmp
adc
mov
ins
mov
std
adc
and
sub
cmp
(bad)
stc
adc
mov
test
or
or
ret
add
xor
test
mov
or
inc
push
pop
inc
hlt
sahf
pop
out
lahf
jb
outs
or
in
or
sbb
sar
push
or
xchg
xchg
(bad)
imul
enter
xchg
sbb
cmp
jmp
sti
add
daa
sbb
lahf
jb
out
adc
shr
sbb
push
test
movs
addr16
sbb
lahf
jo
cmps
unpckhps
cmp
sbb
(bad)
std
std
jmp
iret
mov
sub
jb
push
dec
(bad)
add
fstp
fwait
jo
add
or
dec
sti
retf
cmp
out
cmp
mov
xor
popf
popf
add
jl
leave
jo
inc
mov
(bad)
pushf
jo
shr
and
sbb
and
xlat
lahf
jns
arpl
mov
and
into
mov
frstor
jb
xchg
push
sub
xor
mov
pop
imul
sbb
test
ins
fadd
inc
mov
gs
sbb
out
mov
repz
sbb
pop
daa
push
or
in
push
dec
shl
out
not
or
repz
ja
fwait
dec
mov
in
fwait
cmp
pop
xor
inc
scas
mov
sbb
aas
jl
es
jl
das
mov
retf
adc
(bad)
jge
add
cmp
xchg
adc
pop
(bad)
xor
pop
test
test
pop
add
adc
aas
ds
sti
sbb
std
ins
inc
outs
cmps
movs
push
xor
xor
mov
scas
sbb
pop
adc
(bad)
jno
out
xor
je
add
push
pop
xor
cdq
xlat
pop
dec
jb
sub
int3
inc
push
xor
lods
pop
sbb
hlt
lods
mov
xor
push
sbb
mov
or
mov
nop
retf
pop
dec
ret
push
pop
pop
pop
es
xchg
ds
and
out
add
and
push
popa
lahf
sub
enter
dec
push
xor
dec
cmp
pushf
add
inc
repnz
ret
imul
sub
add
dec
add
jb
sub
out
rol
movs
lods
pop
pop
jae
xor
out
loop
icebp
mov
add
add
sahf
pop
dec
ins
clc
push
out
xor
mov
push
push
loope
adc
push
add
inc
xorps
dec
adc
mov
sbb
pop
inc
in
stos
xchg
mov
jbe
int
outs
cmps
or
js
jmp
sbb
les
xchg
add
add
push
mov
stos
dec
add
ds
mov
add
inc
jo
in
add
inc
mov
and
add
cmp
ror
cli
cmp
scas
xor
das
enter
pushf
mov
push
sbb
loope
aam
into
rol
or
cmps
das
or
push
fcomi
mov
pusha
je
pop
xlat
cmp
mov
mov
fmulp
out
sub
or
fwait
cs
iret
test
push
push
and
rcl
xchg
data16
in
repnz
retf
cmps
push
or
mov
push
add
xor
cmp
in
push
lea
pop
popf
das
call
pop
fs
or
push
push
jmp
out
mov
mov
cmp
inc
sbb
ins
(bad)
ins
cmp
mov
jmp
or
adc
or
mov
push
lods
stc
cs
out
jecxz
neg
push
into
imul
neg
sbb
jae
ins
div
push
xchg
or
or
sti
unpcklps
popa
lock
sbb
or
xchg
ins
adc
sti
dec
mov
ror
mov
sbb
mov
cmps
mov
mov
outs
retf
adc
xor
popa
mov
or
enter
sbb
push
pop
dec
jo
xor
sub
push
test
cmps
sub
dec
sbb
mov
inc
adc
loop
dec
add
repz
inc
je
xchg
add
ror
clc
dec
nop
adc
and
jbe
pop
pcmpgtw
pop
daa
in
and
xchg
mov
cmp
xchg
idiv
je
cmp
pusha
add
dec
xchg
xchg
dec
jbe
nop
xchg
xchg
pop
fwait
sbb
mov
mov
test
cmp
sbb
xchg
ret
ds
add
int
popf
sub
cmp
and
repnz
in
les
ror
lds
inc
sub
sbb
or
aad
lods
ret
in
jo
mov
or
in
in
jl
jnp
mov
sub
mov
add
inc
scas
popf
mov
cmp
enter
mov
add
add
mov
pop
mov
or
sub
xor
pop
push
inc
fstp
cmp
test
stos
pop
ins
(bad)
out
mov
inc
add
cs
sub
add
inc
add
ret
test
push
push
rcl
or
xor
je
sets
jl
data16
or
adc
daa
jl
jp
sbb
mov
mov
adc
mov
popf
mov
and
fist
jge
inc
and
and
adc
pop
repz
or
fild
add
or
inc
sub
pop
jmp
push
mov
adc
add
mov
sub
xor
xlat
out
pop
or
and
mov
xor
push
idiv
cwde
imul
or
out
push
adc
movs
cmp
inc
jbe
push
push
sub
std
xor
les
add
popa
iret
inc
xor
into
ret
sbb
out
in
adc
add
shl
sbb
into
mov
push
loop
in
cmps
outs
(bad)
mov
out
push
sti
mov
cmp
jmp
out
inc
mov
adc
or
lods
or
mov
pushf
call
pushf
fwait
add
ds
jne
stc
push
sar
pop
and
sbb
out
jecxz
add
adc
ret
lock
daa
fmul
das
(bad)
jle
xchg
mov
ja
lock
cli
or
out
cmps
add
test
out
inc
jle
mov
bnd
rol
dec
xor
and
xor
inc
jbe
add
cmp
jmp
mov
enter
sub
enter
jnp
push
scas
fisubr
arpl
and
pavgw
pop
pmaxsw
cdq
cmps
fimul
mov
xchg
adc
mov
dec
adc
stos
dec
or
add
inc
ja
inc
(bad)
xor
loop
arpl
mov
pop
jmp
ins
adc
and
inc
add
lea
aas
sahf
mov
out
adc
and
dec
push
les
gs
daa
jge
xchg
out
add
test
mov
call
or
xchg
neg
push
jle
cdq
into
push
fist
addr16
push
jge
xor
mov
sbb
(bad)
xchg
les
arpl
ror
add
xor
mov
lods
jmp
ds
jb
pop
in
push
xchg
inc
out
inc
mov
xor
sar
in
xor
push
or
out
push
add
dec
scas
mov
push
sub
(bad)
imul
mov
cmp
ins
add
lds
mov
xchg
or
mov
or
or
ins
inc
and
cmp
test
leave
and
add
arpl
sbb
jns
arpl
pushf
dec
pop
sbb
xchg
push
inc
xlat
out
inc
in
add
gs
das
jnp
mov
cmp
xchg
sbb
in
arpl
jge
vmread
inc
xchg
mov
xchg
mov
fbld
pop
sub
or
pushf
enter
inc
fwait
add
lahf
rol
and
test
pop
add
mov
jo
rol
inc
jp
pop
arpl
mov
dec
pop
arpl
cli
and
sbb
pop
push
push
jl
call
jns
jb
pop
gs
add
mov
dec
loope
test
jbe
add
stc
inc
push
xor
outs
arpl
inc
xor
extrq
setnp
repnz
xor
sahf
adc
mov
int
popf
sbb
or
pushf
or
and
add
test
add
sub
jb
outs
push
inc
push
inc
pop
inc
jb
add
inc
jb
add
add
dec
lock
cli
jo
nop
and
out
and
outs
sub
and
in
aas
add
inc
ins
sbb
in
mov
push
mov
cs
fmul
mov
int3
mov
jne
jmp
adc
add
ins
(bad)
mul
test
ins
daa
and
retf
cli
cmp
add
add
scas
add
out
add
fidiv
out
imul
sub
push
sbb
psubw
cmp
mov
cmp
or
fs
push
jns
and
fmul
bswap
inc
and
or
pop
ins
sub
or
(bad)
sub
pop
retf
in
mov
xchg
je
push
push
jecxz
and
push
enter
cmp
or
in
dec
inc
es
or
ror
notrack
sbb
push
in
add
or
fs
loopne
push
aaa
jl
sub
inc
ds
push
mov
dec
jl
imul
fcom
or
inc
fst
pop
jecxz
mov
jl
mov
jae
and
or
cmp
jp
or
push
sub
daa
xchg
fmul
out
xor
stc
jnp
adc
movs
push
pushf
ins
ds
add
dec
out
xor
pop
xchg
fild
sbb
stos
loopne
push
nop
xchg
cmp
fsub
je
xchg
pushf
adc
adc
call
xchg
sbb
adc
clc
imul
popa
pop
inc
sbb
int3
cwde
cmp
loope
pop
adc
mov
add
dec
test
xor
and
lds
or
mov
popf
in
adc
bound
or
pop
retf
dec
out
mov
inc
adc
mov
adc
adc
xchg
adc
outs
sbb
cmp
add
out
mov
xor
push
jnp
xor
xor
pusha
mov
aaa
adc
dec
ss
lds
repnz
xchg
add
cmp
pop
push
sub
sub
mov
mov
push
fs
adc
mul
pop
imul
ss
and
outs
jl
mov
xchg
sub
es
bnd
lds
pop
adc
sbb
xchg
lods
add
repnz
imul
lea
pxor
cdq
imul
or
pop
mov
or
pop
cmp
in
add
pop
or
nop
lods
(bad)
lds
pop
jb
mov
inc
aad
xchg
pop
in
ins
in
fst
shl
outs
int
and
mov
sbb
int
xor
mov
push
mov
lods
sti
inc
test
add
inc
jne
dec
sbb
repnz
cmp
popa
das
add
in
and
inc
jb
inc
and
mov
cmp
test
pop
out
mov
add
dec
push
push
push
push
pop
stos
not
std
aaa
cmp
lods
jae
in
or
push
mov
cmps
xor
loopne
pop
pop
pop
add
mov
xchg
and
mov
add
push
dec
movs
fild
and
test
(bad)
ja
push
inc
cmovg
rcr
cmp
mov
pop
out
pop
leave
ja
pop
push
arpl
lea
mov
or
cwde
es
sti
popf
movs
jo
sbb
push
and
es
add
rcr
sti
sbb
retf
into
mov
xchg
int
int
and
push
ss
mov
push
adc
fcom
inc
cmps
push
sbb
cmp
bound
fisttp
sbb
das
fld
pop
ror
ror
and
sbb
pop
arpl
add
or
sub
inc
mov
cmp
(bad)
(bad)
das
jg
js
out
aad
cmp
xchg
aaa
xchg
or
xchg
inc
out
mov
(bad)
jmp
dec
adc
sbb
add
mov
clc
wbinvd
cmp
jne
(bad)
in
rol
add
or
inc
aaa
dec
adc
add
dec
add
in
adc
pop
sbb
les
icebp
push
dec
push
mov
lea
mov
(bad)
push
jmp
in
sysexit
fimul
mov
add
test
inc
sti
(bad)
pop
inc
inc
dec
popf
mov
inc
sti
pop
mov
add
bound
inc
mov
sbb
adc
sub
pop
mov
xchg
scas
push
ins
inc
push
out
dec
daa
adc
imul
cld
ror
xchg
mov
jae
sbb
jno
dec
mul
add
mov
or
loope
aaa
pop
fisttp
pop
test
pop
jae
sub
sbb
cmp
fbld
aad
sbb
xchg
cmp
shl
jne
leave
jge
dec
cmps
pop
rcl
in
jns
loope
cmp
sbb
in
lods
sub
mov
add
sub
cmps
push
sbb
cmp
mov
pusha
outs
stc
dec
push
jae
push
adc
mov
cmps
imul
pop
movs
(bad)
and
sbb
sbb
push
test
in
punpcklbw
inc
mov
inc
test
pop
fs
pop
sti
hlt
mov
shl
lock
pop
pop
std
repz
push
fistp
inc
pop
add
out
dec
clc
add
test
js
fcmovnu
push
test
js
out
or
or
jne
push
or
out
sub
jo
sahf
std
or
sti
ror
inc
add
in
or
jge
jle
mov
or
aaa
movs
sub
dec
div
aam
and
addr16
stc
lods
outs
and
push
mov
adc
sbb
pop
and
adc
mov
inc
mov
data16
cmp
add
sbb
jb
mov
sbb
cmp
cwde
pop
pusha
sti
mov
mov
mov
lea
popa
and
pop
inc
into
shl
out
cmp
mov
inc
push
pop
pop
popa
scas
push
mov
(bad)
in
pop
icebp
adc
in
(bad)
rol
pop
and
xchg
xchg
cwde
push
cmp
xchg
fs
cdq
bound
bound
cmp
mov
and
sub
call
pop
or
sbb
inc
and
test
aaa
and
test
dec
pusha
jecxz
adc
aad
or
bound
push
outs
pop
and
and
stc
mov
add
(bad)
leave
inc
or
(bad)
push
imul
test
(bad)
repz
imul
test
push
imul
cs
psllw
pop
test
push
adc
xor
cmp
lods
pop
jecxz
push
loope
mov
fnstenv
xlat
xchg
jp
stos
movs
adc
ds
(bad)
push
jns
nop
push
repz
idiv
inc
cmps
cli
mov
mov
scas
pusha
fistp
jmp
jb
sbb
xchg
inc
jmp
adc
or
xchg
xor
lock
out
xor
mov
outs
sti
aaa
shl
(bad)
mov
mov
les
jnp
scas
aaa
and
pop
fmul
sti
(bad)
mov
in
es
in
or
(bad)
outs
into
repnz
(bad)
scas
(bad)
xchg
push
js
imul
movs
push
xchg
je
mov
arpl
outs
pop
iret
mov
or
outs
sbb
xchg
add
add
and
ins
push
and
inc
loope
add
push
or
xchg
sti
cdq
cmps
inc
mov
push
pop
and
mov
fldcw
pop
xchg
out
mov
sbb
pop
mov
(bad)
mov
sbb
ja
pop
pop
movs
imul
int3
test
xlat
neg
test
add
out
nop
pop
xor
sbb
pop
aaa
push
adc
lock
xchg
adc
add
js
stc
movs
loopne
jge
repz
call
mov
test
dec
icebp
add
and
hlt
(bad)
not
add
mov
data16
mov
movs
sbb
cmp
(bad)
pop
pop
nop
popf
cmp
mov
mov
loopne
mov
ins
pop
adc
mov
out
inc
ret
jne
dec
mov
mov
cmps
jne
out
xlat
xchg
lea
or
ret
mov
inc
pop
rcl
imul
adc
add
fadd
pushf
cld
xor
xchg
xchg
mov
nop
pop
add
and
outs
add
in
inc
movs
inc
push
nop
out
jno
in
add
in
jbe
sahf
add
aaa
and
enter
inc
repnz
(bad)
clc
xchg
stos
add
add
push
adc
mov
adc
or
inc
push
or
or
sbb
or
inc
nop
push
int
sbb
mov
or
push
and
or
sbb
or
xchg
or
dec
xor
push
jb
mov
add
mov
in
daa
call
or
(bad)
fnstsw
bsr
mov
sti
xchg
pusha
and
add
add
mov
add
jno
pop
in
pop
pop
xchg
pop
pop
sahf
in
push
xchg
jae
pop
jle
mov
aaa
mov
in
sahf
jae
xchg
pop
mov
pop
cdq
jb
addr16
add
in
add
ror
shrd
mov
inc
lock
mov
push
fwait
adc
in
push
pop
aaa
push
sbb
test
xchg
mov
inc
jno
mov
aad
frstor
pushf
mov
les
mov
aaa
popa
loop
pop
bound
scas
push
lea
enter
movs
lock
outs
sar
fs
sub
jns
sbb
pushf
or
nop
popf
push
adc
(bad)
sbb
xor
fmul
popf
mov
sti
adc
rol
and
mov
add
inc
mov
add
mov
mov
aaa
or
xchg
sbb
dec
(bad)
es
mov
and
xchg
cdq
outs
fs
cli
ss
or
jns
enter
(bad)
cli
(bad)
push
icebp
push
mov
mov
sti
sub
pop
xor
xchg
mov
push
xchg
cmp
jbe
sub
inc
and
popa
out
paddusw
test
dec
into
sti
or
out
adc
cmp
sysexit
xor
or
cmp
add
stos
pop
cwde
js
in
push
adc
jo
stos
pop
cdq
leave
pop
cdq
push
sub
enter
sbb
or
leave
jbe
dec
add
fiadd
pop
mov
fs
or
xor
sbb
nop
addr16
cmps
pop
popf
mov
lock
mov
ja
into
mov
or
sbb
fbld
aas
inc
cmp
jb
test
add
int
mov
cmp
adc
and
sub
int
stos
xor
pop
inc
push
outs
test
pop
imul
dec
mov
cwde
and
cwde
sub
add
call
ins
sahf
aad
pop
mov
(bad)
ins
push
dec
jge
inc
mov
or
in
es
fwait
xor
sub
fwait
xor
push
aaa
mov
jmp
mov
in
arpl
cmp
mov
inc
enter
jl
or
rcl
adc
or
mov
icebp
shl
int3
push
pop
jns
adc
push
push
sbb
mov
pop
mov
and
dec
push
pop
mov
or
loop
popa
mov
sysret
mov
sbb
xchg
inc
int
ja
mov
or
mov
nop
popf
add
inc
push
pop
xor
mov
xchg
retf
pop
or
add
fidivr
sbb
xchg
test
pop
inc
dec
test
fldcw
xchg
or
inc
adc
shr
sub
dec
(bad)
mov
rol
fs
mov
mov
cmp
pop
adc
mov
sub
sub
and
fisttp
cmps
add
sbb
in
movs
sbb
test
adc
ins
jbe
inc
and
add
(bad)
add
jnp
(bad)
inc
xchg
or
fucomi
int3
leave
repz
out
loope
fsubrp
push
fbstp
test
sar
adc
fnstcw
or
xlat
je
shl
dec
ret
xchg
or
pop
mov
repnz
and
out
sar
xchg
fist
nop
nop
sub
jecxz
sub
in
leave
(bad)
sti
cmp
(bad)
and
or
pop
xchg
scas
push
xchg
add
in
arpl
jg
or
popf
cmp
adc
push
rcl
lock
add
jp
out
imul
dec
clc
add
scas
gs
pop
adc
inc
sbb
xor
or
loopne
and
adc
sbb
cmp
enter
and
mov
pusha
push
scas
mov
xchg
pop
stos
xchg
adc
mov
out
and
or
fstp
pop
cmp
ret
popf
jns
xor
in
and
(bad)
outs
cmp
sbb
sbb
stc
mov
mov
sbb
xchg
out
push
mov
cdq
in
inc
cs
daa
dec
xor
fmul
dec
cmp
dec
jbe
pop
cmp
daa
(bad)
cli
sbb
jmp
xlat
adc
adc
jo
or
adc
push
outs
xlat
mov
add
cmp
and
call
fiadd
sbb
jecxz
sbb
or
rcl
inc
rol
mov
aas
lahf
push
pop
arpl
out
pop
inc
ror
cdq
mov
cmp
sbb
jno
popa
add
pop
shr
sbb
inc
int
fnstenv
push
xor
jmp
sbb
fild
ins
inc
into
xchg
or
add
mov
test
sbb
aad
outs
aad
gs
lea
or
fwait
sahf
hlt
nop
jl
enter
outs
add
jbe
(bad)
ins
movs
xchg
fcom
repnz
xor
aaa
mov
cmp
sbb
sbb
jb
pop
les
rol
inc
jg
(bad)
pop
xor
xchg
sbb
outs
push
enter
jl
outs
fs
fcmovne
adc
add
pop
leave
repz
or
int3
ds
out
retf
mov
pop
imul
pop
push
mov
mov
or
sub
lahf
or
sbb
(bad)
pusha
cmp
or
jmp
pop
arpl
fstp
out
dec
ret
xlat
xchg
or
or
arpl
xchg
out
jge
dec
jmp
sbb
lss
cmps
pop
outs
dec
jmp
xlat
cld
(bad)
(bad)
adc
retf
push
fist
and
sbb
jb
inc
jb
or
mov
push
mov
movs
push
add
jns
loopne
mov
clc
jno
js
add
(bad)
fbstp
mov
push
and
cmp
pop
sti
push
dec
rol
cmp
dec
pop
jmp
or
mov
push
xchg
fmul
out
push
jo
push
pop
pop
inc
mov
xchg
pop
and
xchg
xchg
jae
push
cmp
out
or
or
inc
sbb
repnz
fiadd
fcomp
inc
imul
inc
inc
fs
fimul
add
cmps
inc
mov
add
cdq
fdivr
cdq
fcomp
adc
in
leave
jmp
mov
mov
mov
das
out
fld
(bad)
push
cmp
rep
out
out
add
out
jae
fild
and
push
xchg
in
in
data16
jmp
and
out
out
jne
push
dec
or
test
add
jle
jb
xor
repz
out
out
fist
or
sbb
push
outs
sub
sti
sub
or
mov
add
mov
push
pop
loop
outs
sbb
adc
or
sub
in
cmp
mov
push
cmp
and
inc
imul
xchg
idiv
jnp
ret
sbb
outs
lock
inc
mov
sbb
sub
mov
loopne
adc
cmp
jne
addr16
jb
pop
dec
(bad)
data16
sahf
(bad)
cdq
dec
inc
pop
out
fisttp
add
test
pop
mov
mov
addr16
mov
or
addr16
out
mov
addr16
push
or
sub
xor
(bad)
in
sbb
inc
inc
cmp
inc
mov
imul
sbb
out
scas
xor
sar
cmp
loop
loope
popa
outs
add
not
push
jl
jbe
mov
loope
(bad)
mov
sbb
cmp
or
inc
cs
push
ja
out
ss
dec
xchg
push
pushf
jp
cmovs
test
leave
or
mov
data16
pop
inc
cmp
out
inc
cmp
inc
xor
fucomi
fucomi
mov
in
fucomi
push
nop
push
nop
fucomi
ret
push
dec
fild
or
push
enter
jl
xor
or
dec
push
inc
push
fucomi
or
loop
pop
dec
jbe
or
bound
and
sub
test
es
lods
push
pop
movs
sbb
sahf
repz
lea
and
test
ds
adc
push
ret
push
iret
sbb
inc
or
inc
int3
or
push
ins
add
cs
gs
or
ss
ins
or
jecxz
jecxz
iret
pop
jb
jecxz
mov
ins
pop
xor
iret
fiadd
(bad)
and
int3
ins
fs
lahf
or
mov
xor
rcr
cs
in
fucomi
jo
pop
enter
pop
sub
cmp
jae
shr
cli
push
inc
push
nop
or
fiadd
in
out
out
outs
mov
nop
jecxz
mov
and
in
xchg
pop
pop
das
add
leave
inc
fs
jmp
fucomi
inc
(bad)
inc
inc
cmp
repz
xor
pop
not
push
sbb
stos
xor
or
adc
pop
dec
out
or
shr
(bad)
inc
push
jge
push
jmp
inc
mov
unpcklps
punpcklwd
not
pop
adc
std
cmp
inc
mov
add
sub
mov
and
je
mov
and
or
leave
nop
and
or
sbb
std
sbb
or
pop
mov
inc
sbb
mov
aaa
out
loop
jecxz
in
or
out
fcomi
inc
iret
push
dec
push
fcomi
inc
imul
xor
fs
lahf
dec
and
and
in
add
lea
or
cmp
ficomp
xchg
or
or
cmp
sti
inc
mov
popw
sbb
xor
push
jmp
std
push
jns
adc
fsubr
scas
jg
dec
inc
cmp
push
inc
sti
outs
fist
inc
mov
add
out
cmp
fild
inc
xor
push
push
outs
mov
mov
rcl
jne
ins
jnp
push
xor
ds
nop
add
jnp
add
mov
test
adc
push
aam
or
cwde
push
fmul
cmp
pop
and
nop
lods
je
out
push
leave
sub
inc
and
push
leave
sub
inc
sub
sub
add
sbb
adc
sub
lods
mov
sbb
ret
add
fadd
xlat
outs
lods
xchg
test
cmps
aas
rol
(bad)
pop
scas
mov
or
lahf
inc
scas
shr
jae
movs
mov
xchg
in
jge
xor
sbb
add
or
adc
fadd
out
add
test
addr16
mov
add
mov
out
ret
push
sbb
mov
add
add
and
sub
sub
xchg
dec
fcom
aas
push
enter
ret
jecxz
and
xor
lds
xchg
into
push
dec
adc
je
cmps
dec
sbb
jmp
xor
lods
or
enter
add
lea
push
jmp
xchg
mov
inc
test
rol
out
call
sbb
cld
pop
popf
mov
mov
xor
(bad)
cld
cmps
cmp
movs
push
mov
jae
ja
and
inc
jl
rcl
xchg
sti
mov
data16
sbb
ins
mov
out
add
push
xor
xchg
cmp
es
and
push
push
sar
push
add
xchg
ins
and
add
jno
ret
stos
jno
mov
test
mov
mov
cmp
inc
imul
cwde
mov
inc
pop
add
fwait
and
mov
(bad)
cmp
mov
adc
js
cmps
mov
xor
imul
fld
pop
mov
mov
les
mov
jp
mov
clc
xor
push
lock
arpl
ss
mov
dec
jb
in
lds
dec
xor
and
stc
jl
pusha
iret
xor
cmp
jo
ja
mov
bound
mov
mov
mov
sbb
push
test
mov
mov
movs
mov
push
popa
daa
or
test
mov
js
push
(bad)
adc
ins
push
dec
add
in
and
stc
sub
add
push
out
and
mov
fmul
pop
dec
jmp
or
cmps
push
mov
push
sbb
popf
in
and
adc
outs
jae
call
pop
mov
out
stos
fsubp
sbb
test
cmps
(bad)
clc
adc
mov
popa
mov
inc
popa
cmp
jae
call
popa
rol
add
push
inc
stos
xchg
int3
data16
sbb
cmp
stos
sbb
mov
ins
jns
push
xor
sub
mov
nop
sbb
daa
sub
sub
sbb
add
adc
push
shr
es
xchg
dec
jb
jne
into
or
popf
rcr
outs
lods
xchg
pop
retf
xchg
add
mov
jp
iret
(bad)
cmc
shr
jb
adc
ins
xchg
fwait
xor
dec
and
fld
call
ror
popa
and
sbb
jmp
loopne
int3
movs
mov
fwait
add
fild
movs
lahf
mov
add
stos
fwait
mov
or
add
sub
adc
mov
dec
out
int3
mov
or
and
xor
mov
sub
or
ja
fst
mov
add
retf
mov
inc
inc
or
shl
mov
adc
dec
ins
dec
pop
mov
xor
push
jp
cmp
jne
xor
daa
sub
adc
js
fimul
cmp
jae
dec
jb
sub
js
adc
add
sbb
push
pop
push
pop
mov
push
and
adc
pop
call
ret
mov
or
rcl
outs
stos
sub
fs
cdq
push
xchg
sub
add
push
adc
inc
jnp
xlat
pushf
cdq
shr
data16
mov
clc
pop
(bad)
adc
inc
(bad)
cmp
sub
adc
test
mov
out
mov
ins
pop
cmp
(bad)
stos
pop
inc
or
or
mov
mov
mov
pushf
adc
mov
mov
cmps
inc
pop
enter
js
pop
mov
scas
inc
stos
jp
pop
jb
stos
jp
jns
pop
jb
mov
mov
xor
test
add
sti
fcomi
sub
adc
into
rcr
inc
or
and
push
pop
psrlw
rcr
sbb
pop
enter
stos
inc
jb
pop
mov
nop
inc
enter
outs
pop
enter
inc
push
or
lea
push
out
cli
pop
enter
jp
push
fwait
nop
addr16
test
(bad)
xor
push
loop
popa
push
repnz
nop
mov
jae
jo
loop
nop
out
push
pushf
jo
inc
sbb
or
sahf
or
popa
add
mov
push
test
cmc
inc
nop
add
in
mov
enter
test
imul
sbb
push
jb
add
xchg
add
adc
push
and
pop
shr
mov
jae
fild
push
ds
pop
cli
or
adc
loopne
sub
or
dec
push
adc
cs
pop
std
fst
hlt
popa
sti
lods
pop
lea
stc
xchg
add
inc
call
add
inc
cmpxchg
cmp
jb
(bad)
cli
mov
push
jnp
add
jbe
xor
call
imul
mov
dec
addr16
push
mov
fnstsw
dec
add
sbb
mov
out
xchg
mov
adc
mov
inc
lea
mov
inc
jl
outs
rcl
cmp
or
ror
mov
pop
out
inc
test
pop
pop
and
xchg
and
aam
adc
push
adc
adc
retf
fmul
movs
ffreep
outs
(bad)
out
cmp
push
sub
dec
rol
inc
and
mul
sub
dec
dec
test
inc
push
sub
ds
je
icebp
icebp
xlat
stc
iret
(bad)
repz
and
pusha
ret
cwde
sahf
pop
ret
test
mov
mov
jns
pusha
cwde
push
adc
cmp
retf
js
outs
and
mov
cmps
adc
or
inc
cld
arpl
dec
fisttp
scas
arpl
adc
add
arpl
mov
xor
cmps
pop
xchg
sub
xchg
sub
cdq
stos
xchg
mov
pusha
out
mul
lods
sbb
outs
out
inc
mov
xchg
or
fwait
aaa
pop
pop
mov
push
in
adc
dec
retf
push
jb
dec
dec
ds
xlat
sbb
xchg
dec
inc
cmp
mov
push
pop
imul
clc
sti
sbb
cmp
pop
or
outs
mov
or
inc
dec
cs
fadd
pop
aaa
dec
mov
or
cmp
sbb
pop
add
sbb
sahf
rol
mov
push
fild
cs
fisttp
inc
ins
add
aad
add
in
cmp
push
sub
or
ss
out
or
jnp
jg
ins
pop
test
pop
lock
clc
dec
fisttp
or
push
adc
test
sbb
dec
add
mul
mov
int
in
gs
pop
shl
adc
xchg
inc
imul
xchg
inc
mov
lds
cmp
push
addr16
sahf
outs
add
es
nop
sub
lahf
or
and
data16
stos
nop
inc
pop
and
pop
inc
aaa
dec
enter
fs
and
push
fs
add
xchg
pop
dec
sub
mul
mov
arpl
int3
pop
leave
and
sub
test
pusha
lods
and
out
xchg
aas
addr16
or
pop
pop
jmp
mov
inc
cmp
into
jb
cmp
fadd
cmp
outs
test
adc
or
stos
xlat
cmp
mov
daa
in
int
fs
push
(bad)
mov
push
pop
push
aam
and
jae
dec
push
in
or
jp
mov
xor
push
ja
lock
clc
mov
mov
pop
scas
cmp
(bad)
adc
out
stc
lds
call
call
mov
or
hlt
adc
mov
inc
fcomp
xchg
outs
pop
sub
in
arpl
rol
add
inc
pop
sahf
pop
dec
pop
pop
into
int3
sbb
sti
inc
outs
sbb
fld
rcr
and
xchg
and
repz
test
sbb
adc
sbb
cmp
mov
adc
add
pop
out
xchg
dec
xor
cmp
or
daa
pop
cmp
pop
and
add
cmp
je
out
(bad)
loop
cmp
sub
adc
mov
nop
fisttp
jmp
jbe
and
xchg
cwde
dec
pop
jae
sub
popa
add
inc
dec
push
push
or
pmaxsw
hlt
adc
bound
aas
fisttp
fsub
pop
or
loope
adc
lahf
push
push
mov
push
movs
dec
inc
jb
xchg
pop
push
call
push
xor
in
mov
adc
mov
pop
cmp
test
mov
out
pop
push
pop
ins
fadd
cmp
int
in
sbb
inc
out
mov
loop
lahf
add
jns
lods
add
xor
rol
out
mov
out
enter
and
lea
ret
pusha
jns
push
add
nop
pop
push
leave
and
stc
pop
mov
daa
loopne
mov
fst
add
mov
sub
sbb
push
xchg
sub
push
xor
pop
cmp
stos
pop
inc
push
nop
and
add
pop
inc
popa
out
mov
les
and
outs
out
sar
nop
jmp
jb
pop
outs
adc
sbb
mov
movs
out
inc
add
mov
dec
or
adc
jnp
(bad)
xchg
pop
sub
inc
ss
dec
retf
sbb
mov
dec
dec
test
fcmovnu
add
mov
dec
outs
cmp
push
xlat
xlat
and
ins
pop
cmp
int3
xchg
jae
and
inc
in
sub
sub
push
adc
sub
clc
jecxz
cmp
cs
in
mov
cmp
enter
pushf
cmc
xlat
jg
sbb
dec
ins
mov
outs
shl
imul
ja
mov
sbb
dec
test
imul
out
out
enter
jno
jecxz
push
pop
sub
jo
ins
push
daa
add
in
add
push
gs
jle
jo
push
push
add
dec
jb
mov
cmp
sbb
jno
dec
es
push
add
int
push
jb
push
cmp
or
retf
jo
dec
sbb
imul
test
(bad)
xchg
push
ja
adc
cmp
cwde
sbb
leave
pop
and
pop
enter
cmp
inc
cmps
or
and
mov
jle
dec
adc
mov
mov
cmp
call
mov
push
or
xchg
pop
inc
out
sub
fld
sbb
es
mov
xchg
(bad)
jno
ins
jns
out
jno
das
sbb
call
nop
add
lods
adc
pop
jmp
hlt
in
test
jns
jno
sbb
dec
xchg
jecxz
sbb
fs
(bad)
data16
ja
cmps
or
jge
pusha
in
pop
pop
push
push
or
fadd
(bad)
out
add
adc
dec
repz
cli
ja
cmp
mov
jmp
sub
pop
cmp
cmp
mov
add
mov
ror
and
jb
test
pop
dec
add
add
push
jno
loop
ins
ja
jb
push
pusha
mov
pop
push
rcl
aad
ins
mov
xchg
pop
xchg
in
imul
and
cmps
push
mov
cli
add
and
ss
push
sahf
stc
arpl
xlat
push
lock
push
or
and
and
jmp
or
ret
into
pmulhuw
out
xchg
push
outs
adc
ss
inc
idiv
sbb
hlt
push
enter
in
and
enter
xor
jmp
xor
and
mov
add
and
cvtpi2ps
(bad)
mov
icebp
add
cld
mov
xor
mov
(bad)
(bad)
(bad)
mov
outs
add
push
xchg
mov
ja
inc
mov
mov
mov
repnz
(bad)
(bad)
in
xor
push
pushf
mov
push
mov
mov
jae
inc
pop
mov
jo
int3
dec
sub
fdivrp
(bad)
inc
leave
pusha
pusha
sub
and
jne
in
mov
xchg
jmp
or
icebp
sub
enter
dec
add
or
(bad)
call
sahf
jecxz
out
sub
enter
mov
in
cld
mov
stc
xor
(bad)
(bad)
(bad)
dec
repnz
int
or
enter
mov
shl
(bad)
(bad)
(bad)
call
out
mov
(bad)
and
push
pushf
pop
mov
jno
cli
mov
int3
das
cwde
enter
(bad)
push
call
lock
jp
das
scas
fisub
loopne
cmc
iret
cs
xchg
outs
xchg
rcl
cmc
mov
clc
push
xchg
cmp
sar
xchg
mov
out
in
call
loope
pusha
out
shl
cmp
xchg
fidiv
cld
cmps
in
(bad)
(bad)
(bad)
dec
inc
mov
xchg
dec
xchg
hlt
fs
std
xchg
xchg
xor
cld
sub
test
(bad)
(bad)
(bad)
fsub
movs
enter
jmp
aad
sti
loope
loop
add
mov
(bad)
jmp
bnd
mul
shl
jae
dec
(bad)
fistp
xchg
xchg
repz
add
sbb
sti
xchg
out
hlt
in
pop
mov
iret
inc
sti
cs
(bad)
push
mov
jecxz
xchg
lods
das
sbb
sbb
xchg
jo
call
out
(bad)
das
call
fistp
loope
loopne
pushf
ret
sub
cwde
inc
test
call
ret
aad
or
das
adc
movzx
mov
cwde
ret
sub
(bad)
(bad)
jg
les
fisubr
fdivr
aad
out
cs
lods
xor
in
call
jg
(bad)
iret
jnp
xchg
cmps
loop
ss
int
push
ja
inc
ror
jg
xchg
and
mov
mov
push
sahf
shl
and
(bad)
(bad)
inc
(bad)
mov
jmp
dec
xchg
jp
inc
in
pop
cmp
(bad)
(bad)
sahf
pusha
xchg
fidivr
imul
cmova
jmp
pop
clc
das
mov
push
into
jns
mov
out
pop
out
sub
(bad)
mov
fucom
lods
idiv
add
pushf
ins
mov
mov
jmp
das
aad
sbb
mov
iret
jno
repnz
out
rsqrtps
out
jg
(bad)
(bad)
and
bound
sti
test
clc
and
jmp
pop
test
jmp
stos
dec
(bad)
fdivp
xchg
mov
(bad)
call
sub
dec
push
xchg
iret
push
sti
loopne
cmc
in
mov
jg
loope
lock
cli
xor
adc
push
retf
jnp
out
loop
pop
clc
pop
clc
jg
call
jae
pop
mov
mov
pop
pop
aas
std
aad
jg
fistp
fcmovnu
(bad)
dec
cdq
fdiv
sbb
dec
cwde
mov
repz
and
mov
jmp
(bad)
das
cld
jecxz
in
das
sub
mov
xchg
xor
leave
cs
(bad)
scas
mov
pushf
inc
mov
js
lock
das
cld
lods
xchg
xor
dec
mov
data16
hlt
jmp
lea
mov
mov
pop
test
outs
cld
dec
psrld
cld
xchg
clc
iret
retf
or
jb
push
inc
ret
enter
fist
inc
(bad)
int3
jne
cli
pop
(bad)
outs
cld
sti
jecxz
sub
cld
jg
mov
xchg
fdivr
mov
movs
int
add
jmp
std
jge
fwait
out
pop
or
bound
imul
pop
fild
xlat
ret
ret
std
mov
test
jne
clc
cmps
jmp
xor
or
xchg
mov
mov
mov
pop
xchg
aam
lock
mov
jmp
lods
aaa
pop
retf
push
xchg
mov
fild
popf
ret
jg
inc
mov
jno
sar
cmp
push
sub
or
jnp
mov
fisttp
push
(bad)
mov
dec
push
icebp
(bad)
mov
loope
xchg
rcr
jae
hlt
cwde
mov
sub
jmp
call
sub
pop
fs
jl
fidiv
sar
sub
xchg
jg
addr16
shl
lods
sub
(bad)
aas
(bad)
imul
call
fmul
ret
das
push
jp
dec
test
fdivr
mov
sub
xchg
dec
iret
mov
sub
(bad)
jge
jmp
scas
dec
fistp
push
aad
repz
mov
lods
xchg
xsha1
cmps
dec
(bad)
aas
outs
sub
xchg
sub
lea
enter
and
(bad)
lahf
push
cld
jno
ret
cmps
call
adc
jo
(bad)
(bad)
(bad)
(bad)
inc
in
mov
xor
stc
ja
out
int
xchg
rcr
add
call
std
jnp
out
shl
(bad)
lahf
sbb
pop
xchg
leave
jno
out
call
dec
inc
(bad)
pop
jg
(bad)
fild
call
jae
inc
rcr
outs
mov
aaa
xchg
jle
(bad)
dec
(bad)
lahf
and
pop
xchg
das
ret
lods
(bad)
call
xlat
clc
das
xchg
leave
sub
jns
popa
adc
int
cmps
out
daa
pop
std
(bad)
fistp
pandn
shl
xchg
xchg
int3
adc
in
or
imul
ins
das
dec
in
cld
mov
pop
lahf
cmp
popa
mov
scas
out
dec
sub
mov
out
cmp
gs
aas
mov
scas
mov
jmp
sub
sahf
inc
xchg
jg
loope
jecxz
and
(bad)
push
mov
aam
cwde
xlat
fist
mov
retf
sbb
lea
cmps
stos
aad
loope
inc
jecxz
test
cmp
pop
mov
mov
jnp
or
outs
xchg
out
hlt
les
retw
add
int3
jl
std
in
(bad)
jmp
mov
fdiv
jge
adc
std
cld
mov
or
pop
cli
bound
mov
jge
(bad)
lods
ret
jmp
jb
pop
iret
(bad)
mov
sbb
push
cmp
pop
mov
(bad)
(bad)
(bad)
jg
loopne
(bad)
jecxz
fcmovb
sub
push
movs
das
iret
mov
xchg
pop
jle
add
inc
int
loop
stos
btr
pop
cs
test
in
jmp
mov
add
jae
xor
push
stc
and
aas
ret
(bad)
rol
stos
ins
mov
inc
retf
js
outs
sub
adc
jl
(bad)
(bad)
jmp
(bad)
xchg
out
in
mov
xchg
inc
loope
push
fst
nop
ror
mov
mov
(bad)
(bad)
jmp
jmp
sbb
popf
dec
xchg
jl
stc
mov
fsubr
(bad)
(bad)
call
lea
int3
ins
out
in
mov
pop
rol
jge
mov
test
mov
jg
adc
nop
das
lahf
sub
mov
mov
add
shl
push
(bad)
ins
lock
call
xchg
(bad)
mov
sbb
mov
mov
fmul
mov
sbb
enter
mov
js
out
clc
dec
jne
repnz
cmps
in
leave
gs
jnp
dec
mov
jno
test
loope
dec
(bad)
cmp
cmp
cdq
sbb
or
aas
jne
das
dec
fistp
jmp
das
(bad)
aaa
push
cmp
xchg
fbstp
mov
aas
mov
jg
call
gs
aaa
mov
inc
inc
and
test
faddp
jg
call
jmp
lea
jg
(bad)
aad
(bad)
jg
inc
shr
leave
adc
mov
inc
call
or
jp
repnz
mov
stc
cmps
sbb
call
xchg
ss
sar
mov
jle
call
lock
data16
dec
clc
sub
loop
sbb
xchg
pop
mov
cli
lock
or
scas
pandn
(bad)
mov
mov
mov
mov
cld
(bad)
jmp
fmul
mov
pop
es
scas
scas
call
int3
xchg
retf
retf
adc
pushf
vextractf64x4
xchg
and
pushf
push
pop
mov
cli
or
xlat
dec
(bad)
(bad)
mov
lock
scas
xor
fistp
push
fcomp
xor
mov
mov
mov
dec
gs
adc
jne
pop
xchg
clc
call
movs
stos
jle
mov
cmp
not
jg
lahf
jmp
lods
jnp
fwait
pop
rcl
pushf
leave
jg
sbb
pop
(bad)
push
hlt
pop
movs
scas
pop
leave
adc
lds
fbstp
ror
dec
sbb
sbb
test
inc
xlat
out
wbinvd
cmp
(bad)
std
jg
fnstcw
sbb
jo
mov
out
ja
adc
xchg
fild
xchg
xchg
jg
out
sub
aam
lahf
ss
imul
inc
push
nop
pop
xchg
lahf
test
jg
dec
call
jmp
inc
mov
jb
clc
ret
in
outs
mov
call
fisub
movs
loope
add
or
or
ror
mov
das
xchg
js
ss
or
jmp
adc
mul
lods
jbe
jg
outs
hlt
dec
into
les
jno
aad
ret
aas
lahf
fldcw
jne
outs
lock
add
cmp
(bad)
loopne
std
(bad)
(bad)
mov
lock
xchg
lock
or
(bad)
into
jae
std
cmps
fstp
lock
jmp
pop
subps
call
test
cmp
daa
jmp
jp
shl
popa
stc
das
(bad)
push
mov
fisttp
pop
jbe
mov
lock
outs
jmp
mov
leave
jo
(bad)
cmps
fcomp
das
aas
inc
mov
xor
dec
scas
(bad)
fimul
mov
aaa
push
push
xchg
jns
pop
cld
not
scas
pop
add
movs
pop
mov
pop
cli
mov
in
mov
stc
adc
mov
jmp
(bad)
outs
pusha
pushf
pop
fistp
repz
enter
loope
pop
cld
mov
pop
(bad)
das
fucomp
pop
loopne
push
sub
jmp
mov
dec
outs
sub
mov
xchg
call
pusha
jmp
fwait
(bad)
xor
cwde
jae
aam
mul
stos
add
rol
popf
pop
lahf
sub
scas
lahf
ror
(bad)
stc
data16
movs
lea
loope
pop
icebp
jmp
btc
mov
inc
cdq
out
mov
xchg
ds
lea
movs
or
scas
add
inc
sbb
addr16
movs
or
iret
dec
sub
fwait
jl
jmp
cmp
cwde
retf
scas
shl
fdiv
call
mov
fmul
pop
out
adc
dec
rol
(bad)
std
inc
rcr
cmc
jmp
(bad)
xchg
cmp
mov
in
mov
clc
mov
pop
pop
xchg
xor
bound
iret
fwait
aam
pop
mov
mov
jg
fsubr
jg
(bad)
call
shl
out
in
repz
fild
jge
repnz
mov
stos
jo
(bad)
inc
push
cmps
inc
cmp
lock
test
pop
std
jmp
mov
inc
mov
adc
rol
(bad)
jle
ins
aaa
push
pushf
dec
jno
out
loope
(bad)
in
out
push
mov
stc
idiv
fisubr
fisttp
mov
cvtdq2ps
aas
enter
cli
inc
call
xor
xchg
push
(bad)
js
iret
xchg
lock
cmc
sbb
dec
inc
xchg
pop
aas
iret
icebp
mov
pop
aas
test
xor
jge
test
das
mov
push
retf
movs
outs
std
aad
sbb
ret
and
xchg
dec
pop
jno
fsubrp
and
out
lods
scas
jns
inc
lock
xchg
fimul
clc
call
das
mov
iret
mov
jg
push
lods
adc
cs
js
jmp
stc
sub
push
fimul
cmps
(bad)
jmp
pop
xor
ja
inc
loope
popa
pop
sub
inc
out
mov
iret
jecxz
or
fisttp
push
fild
idiv
(bad)
push
das
and
aad
pop
and
(bad)
mov
cld
daa
pushf
jmp
mov
inc
aam
js
sti
in
(bad)
out
mov
fwait
retf
ja
cld
jnp
hlt
pop
(bad)
pop
fwait
clc
xchg
cs
(bad)
jg
jnp
jg
shl
(bad)
fist
out
sub
das
inc
movs
out
xchg
mov
xchg
pop
sbb
test
sbb
and
rcr
outs
sahf
paddb
call
hlt
fcomp
push
mov
das
dec
ret
aad
mov
(bad)
push
das
jg
pop
push
iret
xchg
nop
leave
adc
lods
das
xor
sti
loope
imul
and
movs
pusha
jge
pop
pop
xchg
mov
or
lods
push
sbb
cmps
sar
iret
xor
(bad)
jmp
xchg
ret
pusha
sahf
sar
cmp
clc
data16
jle
repnz
iret
iret
mov
sahf
out
daa
sahf
add
and
outs
inc
das
push
dec
pop
mov
aaa
bts
cli
mov
call
pop
outs
leave
jg
cmc
loop
xor
pop
jp
fidivr
fs
iret
sub
mov
dec
lahf
or
mov
dec
sub
lds
aas
(bad)
fucomip
ret
fbld
(bad)
loopne
jb
in
adc
sbb
jg
jmp
jecxz
sbb
xor
enter
xchg
mov
mov
retf
in
jge
idiv
(bad)
fisttp
xchg
sahf
pop
out
clc
(bad)
mov
cmp
dec
dec
aas
sub
pop
push
mov
mov
xchg
paddd
pop
mov
idiv
xlat
fild
jecxz
ficomp
fs
pop
(bad)
ss
jbe
outs
lea
mov
jg
jb
in
cmc
out
int
cmp
in
inc
sbb
mov
sbb
mov
sar
aad
test
dec
jp
(bad)
ins
mov
fist
mov
fcmove
and
(bad)
dec
xchg
psraw
jb
idiv
out
mov
push
(bad)
adc
sub
test
retf
loope
adc
(bad)
out
outs
mov
and
(bad)
stc
iret
loope
adc
xchg
or
lods
in
push
(bad)
das
retf
scas
adc
pop
inc
cld
lods
das
retf
push
mov
xor
push
sbb
dec
pop
mov
pop
scas
sbb
pop
jp
and
(bad)
cmps
fistp
ret
jg
stos
or
dec
mov
popf
rcr
cwde
pop
ret
push
aas
dec
aam
sbb
mov
pop
inc
push
or
scas
mov
fild
jg
fisub
pop
punpckhdq
push
outs
outs
jmp
mov
shr
cld
(bad)
das
lods
aas
jmp
xor
pop
movs
dec
fwait
ins
test
aad
cli
xor
dec
pop
cli
jg
adc
fbld
lods
or
inc
mov
or
jmp
jmp
fisttp
jmp
pop
inc
data16
(bad)
call
clc
xchg
aam
icebp
jmp
push
push
lds
(bad)
fidivr
lods
aad
cli
and
fild
setge
cmp
repnz
hlt
std
out
xchg
xor
js
pushw
(bad)
mov
inc
jg
neg
adc
ret
pop
or
out
stos
test
iret
arpl
(bad)
fcmovnb
sub
test
lahf
pop
mov
sub
xchg
pop
mov
stos
jg
in
cli
aas
(bad)
adc
(bad)
dec
cmc
repnz
pop
sub
fnstenv
movs
pop
test
loopne
lods
iret
or
aas
outs
hlt
aas
lock
aas
popf
inc
xchg
enter
loope
and
add
pop
test
stos
xchg
das
and
sbb
adc
call
xchg
ror
in
outs
sub
cwde
outs
outs
jmp
das
jno
inc
(bad)
push
movs
(bad)
sbb
mov
pop
dec
mov
call
movs
idiv
outs
adc
mov
pop
(bad)
scas
aas
push
scas
lock
mov
das
sub
addr16
jg
stc
and
lods
pop
lahf
loop
retf
jg
sahf
scas
test
stc
xor
(bad)
pop
mov
das
mov
das
mov
jno
ror
scas
shl
pop
(bad)
pop
adc
das
jge
fcomip
mov
(bad)
fild
scas
std
inc
leave
(bad)
dec
adc
pusha
mov
aad
push
mov
fcom
mov
fdivr
fsubr
mov
ja
mov
(bad)
adc
jg
scas
mov
jne
pop
fisttp
(bad)
jp
jg
les
iret
adc
call
lods
push
lods
ins
outs
adc
pop
das
outs
rcr
div
pop
xchg
out
cli
xchg
lock
xor
push
or
and
test
dec
dec
aas
jg
jmp
sub
cs
(bad)
jg
fs
outs
fld
mov
aas
push
mov
shl
jg
cmps
fldcw
sbb
or
mov
iret
jp
cs
mov
cmps
outs
ret
(bad)
jg
aas
setns
js
mov
hlt
stos
ins
fwait
mov
test
ret
sahf
addr16
and
xchg
jg
pop
jmp
(bad)
movs
push
push
jb
lahf
test
xchg
call
outs
outs
bound
lock
jno
lods
pop
ret
xor
adc
fdivr
mov
aas
std
mov
dec
jmp
add
adc
in
out
cmp
cmps
push
mov
aaa
hlt
popa
pop
lds
mov
dec
pop
push
aas
popf
dec
ret
repnz
fisubr
xchg
mov
cmp
(bad)
(bad)
sub
pop
(bad)
pop
mov
jae
aas
in
inc
push
or
sbb
(bad)
lods
popf
cli
pop
(bad)
(bad)
(bad)
call
sahf
scas
loop
cmps
lea
gs
fs
dec
test
mov
push
pop
jns
cmps
(bad)
(bad)
(bad)
call
fstp
pop
stc
repz
mov
mov
cdq
pusha
adc
xor
in
out
xor
(bad)
(bad)
(bad)
cli
les
pop
cmp
dec
pop
cmps
call
mov
mov
xor
sahf
pop
jmp
cld
int
fisttp
push
in
pushf
mov
fdiv
movhps
fldenv
xchg
dec
add
inc
jl
xor
iret
jg
dec
shr
mov
jmp
pop
sbb
add
jmp
lods
push
dec
sbb
scas
fbld
xor
lea
sub
dec
jp
aas
mov
jo
cmc
rcr
mov
pop
or
test
(bad)
outs
js
or
jmp
hlt
stc
aaa
mov
pop
xchg
outs
(bad)
pop
rol
outs
lock
xchg
dec
scas
fld
std
mov
aas
xor
ds
pushf
inc
sbb
ror
jl
cmpxchg
aam
push
outs
je
mov
outs
in
pop
(bad)
adc
in
lods
(bad)
xor
push
dec
adc
adc
xor
fild
or
outs
test
push
push
mov
out
adc
(bad)
jae
and
xchg
dec
lahf
out
hlt
cld
movsx
(bad)
pop
mov
shl
sti
mov
scas
mov
or
nop
das
aas
jmp
ficom
and
fistp
cs
pushf
ret
pop
mov
imul
aas
pop
xor
lods
adc
dec
ror
push
repnz
loopne
pop
aas
dec
addr16
adc
mov
push
sahf
or
xchg
cmc
jno
inc
xor
mov
(bad)
mov
movq
jle
inc
test
ror
adc
das
pop
clc
mov
lahf
retf
xchg
outs
jecxz
mov
jp
xchg
sub
push
jmp
fisub
or
dec
cs
test
das
dec
das
or
cli
cli
cwde
out
push
sub
iret
test
fbstp
xchg
mov
jmp
dec
fstp
gs
push
fimul
adc
pop
iret
pop
cmp
outs
sbb
jmp
sub
enter
ss
jmp
ret
scas
push
cli
ins
in
pop
call
inc
shr
pop
(bad)
callw
pop
lahf
mov
cmc
not
ss
pop
scas
add
gs
inc
xor
mov
aaa
jp
scas
repnz
mov
icebp
ffreep
inc
fisttp
jmp
push
bound
addr16
mov
aas
jmp
mov
push
mov
das
xchg
iret
dec
loope
sar
fild
sar
aaa
cli
mov
sysret
jo
pop
sub
lds
mov
push
push
fnstcw
aam
in
outs
pop
pop
fcom
dec
add
cs
in
xchg
sbb
push
jne
jg
mov
jmp
adc
out
fistp
push
jo
ss
or
shr
aad
adc
push
stc
imul
jecxz
sub
sbb
scas
jg
jg
jne
xchg
mov
xchg
pop
add
repz
inc
pop
shr
hlt
das
adc
add
mov
aas
pop
xor
push
or
add
xor
add
nop
push
add
add
or
or
push
add
nop
inc
add
add
xor
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
mov
jg
or
dec
add
dec
add
add
(bad)
(bad)
push
add
pushf
cdq
push
fmul
add
jbe
lahf
inc
inc
mov
add
fs
jmp
and
fabs
xor
mov
jno
jb
and
(bad)
(bad)
jmp
push
inc
jne
jns
es
jmp
or
sbb
in
xor
outs
(bad)
mov
push
add
jno
arpl
cmp
jne
stc
(bad)
fistp
in
and
xor
push
daa
jbe
lahf
mov
stos
imul
out
outs
mov
xor
mov
ja
gs
(bad)
lahf
fnstenv
fs
jg
daa
(bad)
(bad)
jg
mov
cmp
pop
jns
jno
sub
movs
stc
loope
fmul
push
push
inc
rol
add
and
or
and
or
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
or
mov
ins
jae
jb
jo
pop
repnz
jns
ins
outs
inc
sbb
or
inc
ins
outs
jae
dec
popa
outs
and
adc
or
jb
popa
je
inc
imul
arpl
jns
push
or
popa
xchg
ins
daa
sti
jo
imul
js
push
test
jb
arpl
jae
inc
gs
gs
js
je
in
in
out
or
jg
outs
jbe
outs
outs
ins
stos
lods
mov
fidiv
push
xor
sbb
or
jb
inc
paddsw
in
dec
imul
xlat
int
fbld
jge
dec
imul
pop
fild
out
jo
jb
fisub
popa
outs
inc
adc
ja
sub
adc
(bad)
ficom
adc
adc
jbe
push
jns
push
pop
mov
dec
(bad)
push
popa
popa
bound
popf
int
cmps
je
bound
adc
sahf
jge
imul
jae
xchg
mov
mov
jbe
ins
push
imul
test
imul
xlat
jle
outs
fs
push
aam
adc
fld
mov
xor
imul
sbb
xor
jb
pop
dec
in
mov
xchg
arpl
in
popa
jb
sbb
int
ss
inc
pop
inc
xchg
and
gs
popa
loope
(bad)
sbb
arpl
jne
adc
ret
push
xchg
jae
ins
addr16
scas
std
push
outs
ins
jne
cmp
popa
mov
fmul
bound
mov
and
push
arpl
or
sbb
inc
jne
inc
js
mov
or
or
inc
mov
cmp
jae
fs
mov
int3
push
inc
or
cmp
cmps
and
ja
data16
outs
sbb
ret
dec
push
imul
(bad)
push
outs
mov
gs
push
outs
imul
push
je
xchg
cmp
outs
push
ds
sub
mov
xchg
ja
push
test
adc
adc
(bad)
push
sbb
xchg
arpl
sub
ret
aad
pusha
pop
pop
fcomp
and
mov
je
jb
jne
jge
mov
dec
push
popa
imul
push
push
cmp
push
adc
out
push
or
adc
ins
or
lods
sub
xchg
pop
cdq
push
ins
jo
imul
mov
add
ins
(bad)
xchg
push
loope
rcl
fstp
jb
mov
pop
sub
xchg
jae
js
jp
test
pusha
sub
mov
inc
pop
pusha
and
sub
icebp
stc
inc
jne
dec
add
mov
mov
add
push
pop
int
mov
add
outs
aaa
mov
add
(bad)
add
movs
mov
(bad)
int
lock
xor
fldcw
aaa
push
or
sub
fwait
mov
jo
xor
stc
pop
test
nop
add
loopne
(bad)
fcom
in
jmp
add
outs
or
pop
and
cs
mov
fld
inc
or
fsub
inc
shl
mov
es
lea
daa
loop
sub
dec
jae
or
rcl
cld
repz
cld
mov
inc
or
adc
add
inc
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
